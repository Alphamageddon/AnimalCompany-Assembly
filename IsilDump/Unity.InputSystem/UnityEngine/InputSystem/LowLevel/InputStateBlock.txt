Type: UnityEngine.InputSystem.LowLevel.InputStateBlock

Method: System.Int32 GetSizeOfPrimitiveFormatInBits(UnityEngine.InputSystem.Utilities.FourCC type)

Disassembly:
	0x0380A514 SXTB W8, W8
	0x0380A518 MOVZ X9, 0x40600000
	0x0380A51C B 0x380A600
	0x0380A520 MOVZ W9, 0x5420
	0x0380A524 MOVK W9, 0x42490000
	0x0380A528 CMP W8, W9
	0x0380A52C B.EQ 0x380A594
	0x0380A530 MOVZ W9, 0x5445
	0x0380A534 MOVK W9, 0x42590000
	0x0380A538 CMP W8, W9
	0x0380A53C B.NE 0x380A704
	0x0380A540 LDRB W8, [X19]
	0x0380A544 CBZ W8, 0x380A65C
	0x0380A548 CMP W8, 0xFF
	0x0380A54C B.EQ 0x380A640
	0x0380A550 ADRP X9, 0xFFFFFFFFFD2E3000
	0x0380A554 LDR V0, [X9 + 0x508]
	0x0380A558 B 0x380A634
	0x0380A55C LDR X0, [X21]
	0x0380A560 LDR W8, [X0 + 0xE0]
	0x0380A564 CBZ W8, 0x380A664
	0x0380A568 LDR W8, [X20 + 0xC]!
	0x0380A56C LDUR W1, [X20 - 0x4]
	0x0380A570 CMP W8, 0x1
	0x0380A574 MOV X21, X20
	0x0380A578 B.NE 0x380A68C
	0x0380A57C MOV X0, X19
	0x0380A580 MOV X2, X31
	0x0380A584 BL 0x37626D0
	0x0380A588 ANDS W31, W0, 0x1
	0x0380A58C FMOV S0, -1
	0x0380A590 B 0x380A5C8
	0x0380A594 LDR X0, [X21]
	0x0380A598 LDR W8, [X0 + 0xE0]
	0x0380A59C CBZ W8, 0x380A6B8
	0x0380A5A0 LDR W8, [X20 + 0xC]!
	0x0380A5A4 LDUR W1, [X20 - 0x4]
	0x0380A5A8 CMP W8, 0x1
	0x0380A5AC MOV X21, X20
	0x0380A5B0 B.NE 0x380A6E0
	0x0380A5B4 MOV X0, X19
	0x0380A5B8 MOV X2, X31
	0x0380A5BC BL 0x37626D0
	0x0380A5C0 ANDS W31, W0, 0x1
	0x0380A5C4 FMOV S0, W31
	0x0380A5C8 FMOV S1, 1
	0x0380A5CC FCSEL S0, S1, S0, NE
	0x0380A5D0 B 0x380A6A8
	0x0380A5D4 LDRH W8, [X19]
	0x0380A5D8 MOVZ W9, 0x7FFF
	0x0380A5DC CMP W8, W9
	0x0380A5E0 B.EQ 0x380A640
	0x0380A5E4 CMP W8, 0x8000
	0x0380A5E8 FMOV S0, -1
	0x0380A5EC B.EQ 0x380A6A8
	0x0380A5F0 ADRP X9, 0xFFFFFFFFFD2E4000
	0x0380A5F4 LDR V0, [X9 + 0x168]
	0x0380A5F8 SXTH W8, W8
	0x0380A5FC MOVZ X9, 0x40E00000
	0x0380A600 SCVTF D1, W8
	0x0380A604 FMOV D2, X9
	0x0380A608 FADD D1, D1, D2
	0x0380A60C FDIV D0, D1, D0
	0x00000000 INVALID
	0x0380A614 B 0x380A69C
	0x0380A618 LDR W8, [X19]
	0x0380A61C ADDS W31, W8, 0x1
	0x0380A620 B.EQ 0x380A640
	0x0380A624 FMOV S0, W31
	0x0380A628 CBZ W8, 0x380A6A8
	0x0380A62C ADRP X9, 0xFFFFFFFFFD2E3000
	0x0380A630 LDR V0, [X9 + 0x718]
	0x0380A634 UCVTF D1, W8
	0x0380A638 FDIV D0, D1, D0
	0x0380A63C B 0x380A64C
	0x0380A640 FMOV S0, 1
	0x0380A644 B 0x380A6A8
	0x0380A648 LDR V0, [X19]
	0x00000000 INVALID
	0x0380A650 B 0x380A6A8
	0x0380A654 LDR V0, [X19]
	0x0380A658 B 0x380A6A8
	0x0380A65C FMOV S0, W31
	0x0380A660 B 0x380A6A8
	0x0380A664 BL 0x1C16DFC
	0x0380A668 LDR X0, [X21]
	0x0380A66C MOV X21, X20
	0x0380A670 LDR W8, [X0 + 0xE0]
	0x0380A674 LDR W22, [X21 + 0xC]!
	0x0380A678 CBNZ W8, 0x380A680
	0x0380A67C BL 0x1C16DFC
	0x0380A680 LDR W1, [X20 + 0x8]
	0x0380A684 CMP W22, 0x1
	0x0380A688 B.EQ 0x380A57C
	0x0380A68C LDR W2, [X21]
	0x0380A690 MOV X0, X19
	0x0380A694 MOV X3, X31
	0x0380A698 BL 0x3762C68
	0x0380A69C FADD S0, S0, S0
	0x0380A6A0 FMOV S1, -1
	0x0380A6A4 FADD S0, S0, S1
	0x0380A6A8 LDP X20, X19, [X31 + 0x20]
	0x0380A6AC LDP X22, X21, [X31 + 0x10]
	0x0380A6B0 LDR X30, [X31], #0x30
	0x0380A6B4 RET
	0x0380A6B8 BL 0x1C16DFC
	0x0380A6BC LDR X0, [X21]
	0x0380A6C0 MOV X21, X20
	0x0380A6C4 LDR W8, [X0 + 0xE0]
	0x0380A6C8 LDR W22, [X21 + 0xC]!
	0x0380A6CC CBNZ W8, 0x380A6D4
	0x0380A6D0 BL 0x1C16DFC
	0x0380A6D4 LDR W1, [X20 + 0x8]
	0x0380A6D8 CMP W22, 0x1
	0x0380A6DC B.EQ 0x380A5B4
	0x0380A6E0 LDR W2, [X21]
	0x0380A6E4 MOV X0, X19
	0x0380A6E8 LDP X20, X19, [X31 + 0x20]
	0x0380A6EC LDP X22, X21, [X31 + 0x10]
	0x0380A6F0 MOV X3, X31
	0x0380A6F4 LDR X30, [X31], #0x30
	0x0380A6F8 B 0x3762C68
	0x0380A6FC FMOV S0, -1
	0x0380A700 B 0x380A6A8
	0x0380A704 ADRP X0, 0x911000
	0x0380A708 LDR X0, [X0 + 0xD18]
	0x0380A70C BL 0x1C16D08
	0x0380A710 BL 0x19903D0
	0x0380A714 LDR W8, [X20]
	0x0380A718 ADRP X0, 0x911000
	0x0380A71C STR W8, [X31 + 0x8]
	0x0380A720 LDR X0, [X0 + 0xD28]
	0x0380A724 BL 0x1C16D08
	0x0380A728 ADD X1, X31, 0x8
	0x0380A72C BL 0x1C16E04
	0x0380A730 MOV X19, X0
	0x0380A734 ADRP X0, 0x940000
	0x0380A738 LDR X0, [X0 + 0x508]
	0x0380A73C BL 0x1C16D08
	0x0380A740 MOV X1, X19
	0x0380A744 MOV X2, X31
	0x0380A748 BL 0x321EFD0
	0x0380A74C MOV X19, X0
	0x0380A750 ADRP X0, 0x8E9000
	0x0380A754 LDR X0, [X0 + 0x5B0]
	0x0380A758 BL 0x1C16D08
	0x0380A75C BL 0x1C16F10
	0x0380A760 MOV X1, X19
	0x0380A764 MOV X2, X31
	0x0380A768 MOV X20, X0
	0x0380A76C BL 0x337DF1C
	0x0380A770 ADRP X0, 0x940000
	0x0380A774 LDR X0, [X0 + 0x510]
	0x0380A778 BL 0x1C16D08
	0x0380A77C MOV X1, X0
	0x0380A780 MOV X0, X20
	0x0380A784 BL 0x1C16DEC
	0x0380A788 SUB X31, X31, 0x40
	0x0380A78C STR D8, [X31 + 0x10]
	0x0380A790 STR X30, [X31 + 0x18]
	0x0380A794 STP X22, X21, [X31 + 0x20]
	0x0380A798 STP X20, X19, [X31 + 0x30]
	0x0380A79C ADRP X22, 0xBD7000
	0x0380A7A0 ADRP X21, 0x911000
	0x0380A7A4 LDRB W8, [X22 + 0x475]
	0x0380A7A8 LDR X21, [X21 + 0xD18]
	0x0380A7AC MOV V8.16B, V0.16B
	0x0380A7B0 MOV X19, X1
	0x0380A7B4 MOV X20, X0
	0x0380A7B8 TBNZ X8, 0x0, 0x380A7D0
	0x0380A7BC ADRP X0, 0x911000
	0x0380A7C0 LDR X0, [X0 + 0xD18]
	0x0380A7C4 BL 0x1C16CF4
	0x0380A7C8 MOVZ W8, 0x1
	0x0380A7CC STRB W8, [X22 + 0x475]
	0x0380A7D0 LDR X0, [X21]
	0x0380A7D4 LDR W8, [X0 + 0xE0]
	0x0380A7D8 CBNZ W8, 0x380A7E0
	0x0380A7DC BL 0x1C16DFC
	0x0380A7E0 LDP W8, W9, [X20]
	0x0380A7E4 MOVZ W10, 0x5420
	0x0380A7E8 SXTW X9, W9
	0x0380A7EC MOVK W10, 0x494E0000
	0x0380A7F0 CMP W8, W10
	0x0380A7F4 ADD X19, X9, X19
	0x0380A7F8 B.LE 0x380A87C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xBD8000
	006 Move X20, 0x912000
	007 Move W8, [X21+1133]
	008 Move X20, [X20+3352]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x912000
	015 Move X0, [X0+3352]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1133], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move W9, [X8+4]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W9, [X0+224]
	029 Compare W9, 0
	030 JumpIfNotEqual {34}
	031 Call 0x1C17DFC
	032 Move X0, [X20]
	033 Move X8, [X0+184]
	034 Move W9, [X8+8]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W0, 1
	037 Move W9, [X0+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {43}
	040 Call 0x1C17DFC
	041 Move X0, [X20]
	042 Move X8, [X0+184]
	043 Move W9, [X8+12]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W9, [X0+224]
	046 Compare W9, 0
	047 JumpIfNotEqual {51}
	048 Call 0x1C17DFC
	049 Move X0, [X20]
	050 Move X8, [X0+184]
	051 Move W9, [X8+16]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move W0, 32
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Return X0
	059 Move W9, [X0+224]
	060 Compare W9, 0
	061 JumpIfNotEqual {65}
	062 Call 0x1C17DFC
	063 Move X0, [X20]
	064 Move X8, [X0+184]
	065 Move W9, [X8+20]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W9, [X0+224]
	068 Compare W9, 0
	069 JumpIfNotEqual {73}
	070 Call 0x1C17DFC
	071 Move X0, [X20]
	072 Move X8, [X0+184]
	073 Move W9, [X8+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move W0, 16
	076 Move W9, [X0+224]
	077 Compare W9, 0
	078 JumpIfNotEqual {82}
	079 Call 0x1C17DFC
	080 Move X0, [X20]
	081 Move X8, [X0+184]
	082 Move W9, [X8+28]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move W9, [X0+224]
	085 Compare W9, 0
	086 JumpIfNotEqual {90}
	087 Call 0x1C17DFC
	088 Move X0, [X20]
	089 Move X8, [X0+184]
	090 Move W9, [X8+32]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move W0, 8
	093 Move W9, [X0+224]
	094 Compare W9, 0
	095 JumpIfNotEqual {99}
	096 Call 0x1C17DFC
	097 Move X0, [X20]
	098 Move X8, [X0+184]
	099 Move W9, [X8+36]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move W9, [X0+224]
	102 Compare W9, 0
	103 JumpIfNotEqual {107}
	104 Call 0x1C17DFC
	105 Move X0, [X20]
	106 Move X8, [X0+184]
	107 Move W9, [X8+40]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move W0, 64
	110 Move W9, [X0+224]
	111 Compare W9, 0
	112 JumpIfNotEqual {116}
	113 Call 0x1C17DFC
	114 Move X0, [X20]
	115 Move X8, [X0+184]
	116 Move W9, [X8+44]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move W9, [X0+224]
	119 Compare W9, 0
	120 JumpIfNotEqual {124}
	121 Call 0x1C17DFC
	122 Move X0, [X20]
	123 Move X8, [X0+184]
	124 Move W9, [X8+48]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move W9, [X0+224]
	127 Compare W9, 0
	128 JumpIfNotEqual {132}
	129 Call 0x1C17DFC
	130 Move X0, [X20]
	131 Move X8, [X0+184]
	132 Move W9, [X8+52]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move W9, [X0+224]
	135 Compare W9, 0
	136 JumpIfNotEqual {140}
	137 Call 0x1C17DFC
	138 Move X0, [X20]
	139 Move X8, [X0+184]
	140 Move W9, [X8+56]
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move W0, 96
	143 Move W9, [X0+224]
	144 Compare W9, 0
	145 JumpIfNotEqual {149}
	146 Call 0x1C17DFC
	147 Move X0, [X20]
	148 Move X8, [X0+184]
	149 Move W9, [X8+60]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move W0, 128
	152 Move W9, [X0+224]
	153 Compare W9, 0
	154 JumpIfNotEqual {158}
	155 Call 0x1C17DFC
	156 Move X0, [X20]
	157 Move X8, [X0+184]
	158 Move W9, [X8+64]
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move W9, [X0+224]
	161 Compare W9, 0
	162 JumpIfNotEqual {166}
	163 Call 0x1C17DFC
	164 Move X0, [X20]
	165 Move X8, [X0+184]
	166 Move W9, [X8+68]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move W0, 48
	169 Move W9, [X0+224]
	170 Compare W9, 0
	171 JumpIfNotEqual {175}
	172 Call 0x1C17DFC
	173 Move X0, [X20]
	174 Move X8, [X0+184]
	175 Move W9, [X8+72]
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move W9, [X0+224]
	178 Compare W9, 0
	179 JumpIfNotEqual {183}
	180 Call 0x1C17DFC
	181 Move X8, [X20]
	182 Move X8, [X8+184]
	183 Move W8, [X8+76]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move W8, 24
	186 NotImplemented "Instruction CSINV not yet implemented."

Method: UnityEngine.InputSystem.Utilities.FourCC GetPrimitiveFormatFromType(System.Type type)

Disassembly:
	0x0380A7FC MOVZ W9, 0x5954
	0x0380A800 MOVK W9, 0x53420000
	0x0380A804 CMP W8, W9
	0x0380A808 B.LE 0x380A914
	0x0380A80C MOVZ W9, 0x5254
	0x0380A810 MOVK W9, 0x53480000
	0x0380A814 CMP W8, W9
	0x0380A818 B.EQ 0x380AA5C
	0x0380A81C MOVZ W9, 0x4E54
	0x0380A820 MOVK W9, 0x55490000
	0x0380A824 CMP W8, W9
	0x0380A828 B.EQ 0x380AAB0
	0x0380A82C MOVZ W9, 0x4854
	0x0380A830 MOVK W9, 0x55530000
	0x0380A834 CMP W8, W9
	0x0380A838 B.NE 0x380AC14
	0x0380A83C FCMP S8, 0x0
	0x0380A840 B.LS 0x380ABA4
	0x0380A844 FMOV S0, 1
	0x0380A848 FCMP S8, S0
	0x0380A84C B.GE 0x380ABD8
	0x0380A850 ADRP X8, 0xFFFFFFFFFD2E4000
	0x0380A854 LDR V0, [X8 + 0x168]
	0x0380A858 FCVT S1, S8
	0x0380A85C FMOV D2, X31
	0x0380A860 FMUL D0, D1, D0
	0x0380A864 FADD D0, D0, D2
	0x0380A868 FCVTZS W8, D0
	0x0380A86C FCVTZU W9, D0
	0x0380A870 FCMP D0, 0x0
	0x0380A874 CSEL W8, W8, W9, MI
	0x0380A878 B 0x380ABEC
	0x0380A87C MOVZ W9, 0x5445
	0x0380A880 MOVK W9, 0x42590000
	0x0380A884 CMP W8, W9
	0x0380A888 B.LE 0x380A988
	0x0380A88C MOVZ W9, 0x4C20
	0x0380A890 MOVK W9, 0x44420000
	0x0380A894 CMP W8, W9
	0x0380A898 B.EQ 0x380AAF0
	0x0380A89C MOVZ W9, 0x5420
	0x0380A8A0 MOVK W9, 0x464C0000
	0x0380A8A4 CMP W8, W9
	0x0380A8A8 B.EQ 0x380AAFC
	0x0380A8AC MOVZ W9, 0x5420
	0x0380A8B0 MOVK W9, 0x494E0000
	0x0380A8B4 CMP W8, W9
	0x0380A8B8 B.NE 0x380AC14
	0x0380A8BC FMOV S0, 0.5
	0x0380A8C0 FMUL S1, S8, S0
	0x0380A8C4 FADD S0, S1, S0
	0x0380A8C8 FCMP S0, 0x0
	0x0380A8CC B.LS 0x380ABAC
	0x0380A8D0 FMOV S1, 1
	0x0380A8D4 FCMP S0, S1
	0x0380A8D8 B.GE 0x380ABE0
	0x0380A8DC ADRP X8, 0xFFFFFFFFFD2E3000
	0x0380A8E0 LDR V1, [X8 + 0x718]
	0x0380A8E4 MOVZ X8, 0xC1E00000
	0x0380A8E8 FCVT S0, S0
	0x0380A8EC MOVZ X9, 0x7FF00000
	0x0380A8F0 FMOV D2, X8
	0x0380A8F4 FMUL D0, D0, D1
	0x0380A8F8 FMOV D3, X9
	0x0380A8FC FADD D0, D0, D2
	0x0380A900 FCVTZS W8, D0
	0x0380A904 FCMP D0, D3
	0x0380A908 MOVZ W9, 0x80000000
	0x0380A90C CSEL W8, W9, W8, EQ
	0x0380A910 B 0x380ABF8
	0x0380A914 MOVZ W9, 0x4954
	0x0380A918 MOVK W9, 0x53420000
	0x0380A91C CMP W8, W9
	0x0380A920 B.EQ 0x380A9E8
	0x0380A924 MOVZ W9, 0x5954
	0x0380A928 MOVK W9, 0x53420000
	0x0380A92C CMP W8, W9
	0x0380A930 B.NE 0x380AC14
	0x0380A934 FMOV S0, 0.5
	0x0380A938 FMUL S1, S8, S0
	0x0380A93C FADD S0, S1, S0
	0x0380A940 FCMP S0, 0x0
	0x0380A944 B.LS 0x380AB04
	0x0380A948 FMOV S1, 1
	0x0380A94C FCMP S0, S1
	0x0380A950 B.GE 0x380ABC4
	0x0380A954 ADRP X8, 0xFFFFFFFFFD2E3000
	0x0380A958 LDR V1, [X8 + 0x508]
	0x0380A95C MOVZ X8, 0xC0600000
	0x0380A960 FCVT S0, S0
	0x0380A964 MOVZ X9, 0x7FF00000
	0x0380A968 FMOV D2, X8
	0x0380A96C FMUL D0, D0, D1
	0x0380A970 FMOV D3, X9
	0x0380A974 FADD D0, D0, D2
	0x0380A978 FCVTZS W8, D0
	0x0380A97C FCMP D0, D3
	0x0380A980 CSEL W8, W31, W8, EQ
	0x0380A984 B 0x380ABD0
	0x0380A988 MOVZ W9, 0x5420
	0x0380A98C MOVK W9, 0x42490000
	0x0380A990 CMP W8, W9
	0x0380A994 B.EQ 0x380AA10
	0x0380A998 MOVZ W9, 0x5445
	0x0380A99C MOVK W9, 0x42590000
	0x0380A9A0 CMP W8, W9
	0x0380A9A4 B.NE 0x380AC14
	0x0380A9A8 FCMP S8, 0x0
	0x0380A9AC B.LS 0x380AB0C
	0x0380A9B0 FMOV S0, 1
	0x0380A9B4 FCMP S8, S0
	0x0380A9B8 B.GE 0x380ABCC
	0x0380A9BC ADRP X8, 0xFFFFFFFFFD2E3000
	0x0380A9C0 LDR V0, [X8 + 0x508]
	0x0380A9C4 FCVT S1, S8
	0x0380A9C8 FMOV D2, X31
	0x0380A9CC FMUL D0, D1, D0
	0x0380A9D0 FADD D0, D0, D2
	0x0380A9D4 FCVTZS W8, D0
	0x0380A9D8 FCVTZU W9, D0
	0x0380A9DC FCMP D0, 0x0
	0x0380A9E0 CSEL W8, W8, W9, MI
	0x0380A9E4 B 0x380ABD0
	0x0380A9E8 LDR X0, [X21]
	0x0380A9EC LDR W8, [X0 + 0xE0]
	0x0380A9F0 CBZ W8, 0x380AB14
	0x0380A9F4 LDR W8, [X20 + 0xC]!
	0x0380A9F8 LDUR W1, [X20 - 0x4]
	0x0380A9FC CMP W8, 0x1
	0x0380AA00 MOV X21, X20
	0x0380AA04 B.NE 0x380AB3C
	0x0380AA08 FCMP S8, 0x0
	0x0380AA0C B 0x380AA38
	0x0380AA10 LDR X0, [X21]
	0x0380AA14 LDR W8, [X0 + 0xE0]
	0x0380AA18 CBZ W8, 0x380AB54
	0x0380AA1C LDR W8, [X20 + 0xC]!
	0x0380AA20 LDUR W1, [X20 - 0x4]
	0x0380AA24 CMP W8, 0x1
	0x0380AA28 MOV X21, X20
	0x0380AA2C B.NE 0x380AB7C
	0x0380AA30 FMOV S0, 0.5
	0x0380AA34 FCMP S8, S0
	0x0380AA38 MOV X0, X19
	0x0380AA3C LDP X20, X19, [X31 + 0x30]
	0x0380AA40 LDP X22, X21, [X31 + 0x20]
	0x0380AA44 LDR X30, [X31 + 0x18]
	0x0380AA48 LDR V8, [X31 + 0x10]
	0x0380AA4C CSET W2, GE
	0x0380AA50 MOV X3, X31
	0x0380AA54 ADD X31, X31, 0x40
	0x0380AA58 B 0x3762844
	0x0380AA5C FMOV S0, 0.5
	0x0380AA60 FMUL S1, S8, S0
	0x0380AA64 FADD S0, S1, S0
	0x0380AA68 FCMP S0, 0x0
	0x0380AA6C B.LS 0x380ABB4
	0x0380AA70 FMOV S1, 1
	0x0380AA74 FCMP S0, S1
	0x0380AA78 B.GE 0x380ABE8
	0x0380AA7C ADRP X8, 0xFFFFFFFFFD2E4000
	0x0380AA80 LDR V1, [X8 + 0x168]
	0x0380AA84 MOVZ X8, 0xC0E00000
	0x0380AA88 FCVT S0, S0
	0x0380AA8C MOVZ X9, 0x7FF00000
	0x0380AA90 FMOV D2, X8
	0x0380AA94 FMUL D0, D0, D1
	0x0380AA98 FMOV D3, X9
	0x0380AA9C FADD D0, D0, D2
	0x0380AAA0 FCVTZS W8, D0
	0x0380AAA4 FCMP D0, D3
	0x0380AAA8 CSEL W8, W31, W8, EQ
	0x0380AAAC B 0x380ABEC
	0x0380AAB0 FCMP S8, 0x0
	0x0380AAB4 B.LS 0x380ABBC
	0x0380AAB8 FMOV S0, 1
	0x0380AABC FCMP S8, S0
	0x0380AAC0 B.GE 0x380ABF4
	0x0380AAC4 ADRP X8, 0xFFFFFFFFFD2E3000
	0x0380AAC8 LDR V0, [X8 + 0x718]
	0x0380AACC FCVT S1, S8
	0x0380AAD0 FMOV D2, X31
	0x0380AAD4 FMUL D0, D1, D0
	0x0380AAD8 FADD D0, D0, D2
	0x0380AADC FCVTZS W8, D0
	0x0380AAE0 FCVTZU W9, D0
	0x0380AAE4 FCMP D0, 0x0
	0x0380AAE8 CSEL W8, W8, W9, MI
	0x0380AAEC B 0x380ABF8
	0x0380AAF0 FCVT S0, S8
	0x0380AAF4 STR D0, [X19]
	0x0380AAF8 B 0x380ABFC
	0x0380AAFC STR S8, [X19]
	0x0380AB00 B 0x380ABFC
	0x0380AB04 MOVZ W8, 0x80
	0x0380AB08 B 0x380ABD0
	0x0380AB0C MOV W8, W31
	0x0380AB10 B 0x380ABD0
	0x0380AB14 BL 0x1C16DFC
	0x0380AB18 LDR X0, [X21]
	0x0380AB1C MOV X21, X20
	0x0380AB20 LDR W8, [X0 + 0xE0]
	0x0380AB24 LDR W22, [X21 + 0xC]!
	0x0380AB28 CBNZ W8, 0x380AB30
	0x0380AB2C BL 0x1C16DFC
	0x0380AB30 LDR W1, [X20 + 0x8]
	0x0380AB34 CMP W22, 0x1
	0x0380AB38 B.EQ 0x380AA08
	0x0380AB3C LDR W2, [X21]
	0x0380AB40 FMOV S0, 0.5
	0x0380AB44 FMUL S1, S8, S0
	0x0380AB48 FADD S0, S1, S0
	0x0380AB4C MOV X0, X19
	0x0380AB50 B 0x380AB88
	0x0380AB54 BL 0x1C16DFC
	0x0380AB58 LDR X0, [X21]
	0x0380AB5C MOV X21, X20
	0x0380AB60 LDR W8, [X0 + 0xE0]
	0x0380AB64 LDR W22, [X21 + 0xC]!
	0x0380AB68 CBNZ W8, 0x380AB70
	0x0380AB6C BL 0x1C16DFC
	0x0380AB70 LDR W1, [X20 + 0x8]
	0x0380AB74 CMP W22, 0x1
	0x0380AB78 B.EQ 0x380AA30
	0x0380AB7C LDR W2, [X21]
	0x0380AB80 MOV X0, X19
	0x0380AB84 MOV V0.16B, V8.16B
	0x0380AB88 LDP X20, X19, [X31 + 0x30]
	0x0380AB8C LDP X22, X21, [X31 + 0x20]
	0x0380AB90 LDR X30, [X31 + 0x18]
	0x0380AB94 LDR V8, [X31 + 0x10]
	0x0380AB98 MOV X3, X31
	0x0380AB9C ADD X31, X31, 0x40
	0x0380ABA0 B 0x3762CB0
	0x0380ABA4 MOV W8, W31
	0x0380ABA8 B 0x380ABEC
	0x0380ABAC MOVZ W8, 0x80000000
	0x0380ABB0 B 0x380ABF8
	0x0380ABB4 MOVZ W8, 0x8000
	0x0380ABB8 B 0x380ABEC
	0x0380ABBC MOV W8, W31
	0x0380ABC0 B 0x380ABF8
	0x0380ABC4 MOVZ W8, 0x7F
	0x0380ABC8 B 0x380ABD0
	0x0380ABCC MOVZ W8, 0xFF
	0x0380ABD0 STRB W8, [X19]
	0x0380ABD4 B 0x380ABFC
	0x0380ABD8 MOVZ W8, 0xFFFF
	0x0380ABDC B 0x380ABEC
	0x0380ABE0 MOVN W8, 0x80000000
	0x0380ABE4 B 0x380ABF8
	0x0380ABE8 MOVZ W8, 0x7FFF
	0x0380ABEC STRH W8, [X19]
	0x0380ABF0 B 0x380ABFC
	0x0380ABF4 MOVN W8, 0x0
	0x0380ABF8 STR W8, [X19]
	0x0380ABFC LDP X20, X19, [X31 + 0x30]
	0x0380AC00 LDP X22, X21, [X31 + 0x20]
	0x0380AC04 LDR X30, [X31 + 0x18]
	0x0380AC08 LDR V8, [X31 + 0x10]
	0x0380AC0C ADD X31, X31, 0x40
	0x0380AC10 RET
	0x0380AC14 ADRP X0, 0x911000
	0x0380AC18 LDR X0, [X0 + 0xD18]
	0x0380AC1C BL 0x1C16D08
	0x0380AC20 BL 0x19903D0
	0x0380AC24 LDR W8, [X20]
	0x0380AC28 ADRP X0, 0x911000
	0x0380AC2C STR W8, [X31 + 0x8]
	0x0380AC30 LDR X0, [X0 + 0xD28]
	0x0380AC34 BL 0x1C16D08
	0x0380AC38 ADD X1, X31, 0x8
	0x0380AC3C BL 0x1C16E04
	0x0380AC40 MOV X19, X0
	0x0380AC44 ADRP X0, 0x940000
	0x0380AC48 LDR X0, [X0 + 0x508]
	0x0380AC4C BL 0x1C16D08
	0x0380AC50 MOV X1, X19
	0x0380AC54 MOV X2, X31
	0x0380AC58 BL 0x321EFD0
	0x0380AC5C MOV X19, X0
	0x0380AC60 ADRP X0, 0x8E9000
	0x0380AC64 LDR X0, [X0 + 0x7D0]
	0x0380AC68 BL 0x1C16D08
	0x0380AC6C BL 0x1C16F10
	0x0380AC70 MOV X1, X19
	0x0380AC74 MOV X2, X31
	0x0380AC78 MOV X20, X0
	0x0380AC7C BL 0x33B2C70
	0x0380AC80 ADRP X0, 0x940000
	0x0380AC84 LDR X0, [X0 + 0x518]
	0x0380AC88 BL 0x1C16D08
	0x0380AC8C MOV X1, X0
	0x0380AC90 MOV X0, X20
	0x0380AC94 BL 0x1C16DEC
	0x0380AC98 STR D8, [X31 - 0x30]!
	0x0380AC9C STP X30, X21, [X31 + 0x10]
	0x0380ACA0 STP X20, X19, [X31 + 0x20]
	0x0380ACA4 ADRP X21, 0xBD7000
	0x0380ACA8 ADRP X20, 0x911000
	0x0380ACAC LDRB W8, [X21 + 0x476]
	0x0380ACB0 LDR X20, [X20 + 0xD18]
	0x0380ACB4 MOV V8.16B, V0.16B
	0x0380ACB8 MOV X19, X0
	0x0380ACBC TBNZ X8, 0x0, 0x380ACD4
	0x0380ACC0 ADRP X0, 0x911000
	0x0380ACC4 LDR X0, [X0 + 0xD18]
	0x0380ACC8 BL 0x1C16CF4
	0x0380ACCC MOVZ W8, 0x1
	0x0380ACD0 STRB W8, [X21 + 0x476]
	0x0380ACD4 LDR X0, [X20]
	0x0380ACD8 LDR W8, [X0 + 0xE0]
	0x0380ACDC CBNZ W8, 0x380ACE4
	0x0380ACE0 BL 0x1C16DFC
	0x0380ACE4 LDR W8, [X19]
	0x0380ACE8 MOVZ W9, 0x5420
	0x0380ACEC MOVK W9, 0x494E0000
	0x0380ACF0 CMP W8, W9
	0x0380ACF4 B.LE 0x380AD78
	0x0380ACF8 MOVZ W9, 0x5954
	0x0380ACFC MOVK W9, 0x53420000
	0x0380AD00 CMP W8, W9
	0x0380AD04 B.LE 0x380ADFC
	0x0380AD08 MOVZ W9, 0x5254
	0x0380AD0C MOVK W9, 0x53480000
	0x0380AD10 CMP W8, W9
	0x0380AD14 B.EQ 0x380AF48
	0x0380AD18 MOVZ W9, 0x4E54
	0x0380AD1C MOVK W9, 0x55490000
	0x0380AD20 CMP W8, W9
	0x0380AD24 B.EQ 0x380AF9C
	0x0380AD28 MOVZ W9, 0x4854
	0x0380AD2C MOVK W9, 0x55530000
	0x0380AD30 CMP W8, W9
	0x0380AD34 B.NE 0x380B174

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xBD8000
	007 Move X20, 0x911000
	008 Move X21, 0x8EA000
	009 Move W8, [X22+1134]
	010 Move X20, [X20+3456]
	011 Move X21, [X21+1728]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {64}
	017 Move X0, 0x911000
	018 Move X0, [X0+3432]
	019 Call 0x1C17CF4
	020 Move X0, 0x912000
	021 Move X0, [X0+2680]
	022 Call 0x1C17CF4
	023 Move X0, 0x912000
	024 Move X0, [X0+3352]
	025 Call 0x1C17CF4
	026 Move X0, 0x911000
	027 Move X0, [X0+3448]
	028 Call 0x1C17CF4
	029 Move X0, 0x911000
	030 Move X0, [X0+3456]
	031 Call 0x1C17CF4
	032 Move X0, 0x911000
	033 Move X0, [X0+3464]
	034 Call 0x1C17CF4
	035 Move X0, 0x8F2000
	036 Move X0, [X0+3816]
	037 Call 0x1C17CF4
	038 Move X0, 0x911000
	039 Move X0, [X0+3472]
	040 Call 0x1C17CF4
	041 Move X0, 0x912000
	042 Move X0, [X0+2688]
	043 Call 0x1C17CF4
	044 Move X0, 0x8EA000
	045 Move X0, [X0+1728]
	046 Call 0x1C17CF4
	047 Move X0, 0x911000
	048 Move X0, [X0+3480]
	049 Call 0x1C17CF4
	050 Move X0, 0x911000
	051 Move X0, [X0+3488]
	052 Call 0x1C17CF4
	053 Move X0, 0x911000
	054 Move X0, [X0+3496]
	055 Call 0x1C17CF4
	056 Move X0, 0x8F2000
	057 Move X0, [X0+3744]
	058 Call 0x1C17CF4
	059 Move X0, 0x8F2000
	060 Move X0, [X0+3832]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X22+1134], W8
	064 Move X0, [X21]
	065 Move X20, [X20]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, X20
	071 Move X1, X31
	072 Call Type.GetTypeFromHandle, X0
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X8, 0x911000
	075 Move X0, [X21]
	076 Move X8, [X8+3488]
	077 Move W9, [X0+224]
	078 Move X20, [X8]
	079 Compare W9, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move X0, X20
	083 Move X1, X31
	084 Call Type.GetTypeFromHandle, X0
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, 0x911000
	087 Move X0, [X21]
	088 Move X8, [X8+3448]
	089 Move W9, [X0+224]
	090 Move X20, [X8]
	091 Compare W9, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move X0, X20
	095 Move X1, X31
	096 Call Type.GetTypeFromHandle, X0
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X8, 0x911000
	099 Move X0, [X21]
	100 Move X8, [X8+3480]
	101 Move W9, [X0+224]
	102 Move X20, [X8]
	103 Compare W9, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move X0, X20
	107 Move X1, X31
	108 Call Type.GetTypeFromHandle, X0
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X8, 0x911000
	111 Move X0, [X21]
	112 Move X8, [X8+3432]
	113 Move W9, [X0+224]
	114 Move X20, [X8]
	115 Compare W9, 0
	116 JumpIfNotEqual {118}
	117 Call 0x1C17DFC
	118 Move X0, X20
	119 Move X1, X31
	120 Call Type.GetTypeFromHandle, X0
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X8, 0x911000
	123 Move X0, [X21]
	124 Move X8, [X8+3472]
	125 Move W9, [X0+224]
	126 Move X20, [X8]
	127 Compare W9, 0
	128 JumpIfNotEqual {130}
	129 Call 0x1C17DFC
	130 Move X0, X20
	131 Move X1, X31
	132 Call Type.GetTypeFromHandle, X0
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X8, 0x911000
	135 Move X0, [X21]
	136 Move X8, [X8+3464]
	137 Move W9, [X0+224]
	138 Move X20, [X8]
	139 Compare W9, 0
	140 JumpIfNotEqual {142}
	141 Call 0x1C17DFC
	142 Move X0, X20
	143 Move X1, X31
	144 Call Type.GetTypeFromHandle, X0
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X8, 0x911000
	147 Move X0, [X21]
	148 Move X8, [X8+3496]
	149 Move W9, [X0+224]
	150 Move X20, [X8]
	151 Compare W9, 0
	152 JumpIfNotEqual {154}
	153 Call 0x1C17DFC
	154 Move X0, X20
	155 Move X1, X31
	156 Call Type.GetTypeFromHandle, X0
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X8, 0x912000
	159 Move X0, [X21]
	160 Move X8, [X8+2688]
	161 Move W9, [X0+224]
	162 Move X20, [X8]
	163 Compare W9, 0
	164 JumpIfNotEqual {166}
	165 Call 0x1C17DFC
	166 Move X0, X20
	167 Move X1, X31
	168 Call Type.GetTypeFromHandle, X0
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move X8, 0x912000
	171 Move X0, [X21]
	172 Move X8, [X8+2680]
	173 Move W9, [X0+224]
	174 Move X20, [X8]
	175 Compare W9, 0
	176 JumpIfNotEqual {178}
	177 Call 0x1C17DFC
	178 Move X0, X20
	179 Move X1, X31
	180 Call Type.GetTypeFromHandle, X0
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X8, 0x8F2000
	183 Move X0, [X21]
	184 Move X8, [X8+3744]
	185 Move W9, [X0+224]
	186 Move X20, [X8]
	187 Compare W9, 0
	188 JumpIfNotEqual {190}
	189 Call 0x1C17DFC
	190 Move X0, X20
	191 Move X1, X31
	192 Call Type.GetTypeFromHandle, X0
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move X8, 0x8F2000
	195 Move X0, [X21]
	196 Move X8, [X8+3832]
	197 Move W9, [X0+224]
	198 Move X20, [X8]
	199 Compare W9, 0
	200 JumpIfNotEqual {202}
	201 Call 0x1C17DFC
	202 Move X0, X20
	203 Move X1, X31
	204 Call Type.GetTypeFromHandle, X0
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Move X8, 0x8F2000
	207 Move X0, [X21]
	208 Move X8, [X8+3816]
	209 Move W9, [X0+224]
	210 Move X20, [X8]
	211 Compare W9, 0
	212 JumpIfNotEqual {214}
	213 Call 0x1C17DFC
	214 Move X0, X20
	215 Move X1, X31
	216 Call Type.GetTypeFromHandle, X0
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move X0, X31
	219 Move X19, 0x912000
	220 Move X19, [X19+3352]
	221 Move X0, [X19]
	222 Move W8, [X0+224]
	223 Compare W8, 0
	224 JumpIfNotEqual {227}
	225 Call 0x1C17DFC
	226 Move X0, [X19]
	227 Move W8, 60
	228 Move X19, 0x912000
	229 Move X19, [X19+3352]
	230 Move X0, [X19]
	231 Move W8, [X0+224]
	232 Compare W8, 0
	233 JumpIfNotEqual {236}
	234 Call 0x1C17DFC
	235 Move X0, [X19]
	236 Move W8, 12
	237 Move X19, 0x912000
	238 Move X19, [X19+3352]
	239 Move X0, [X19]
	240 Move W8, [X0+224]
	241 Compare W8, 0
	242 JumpIfNotEqual {245}
	243 Call 0x1C17DFC
	244 Move X0, [X19]
	245 Move W8, 16
	246 Move X19, 0x912000
	247 Move X19, [X19+3352]
	248 Move X0, [X19]
	249 Move W8, [X0+224]
	250 Compare W8, 0
	251 JumpIfNotEqual {254}
	252 Call 0x1C17DFC
	253 Move X0, [X19]
	254 Move W8, 20
	255 Move X19, 0x912000
	256 Move X19, [X19+3352]
	257 Move X0, [X19]
	258 Move W8, [X0+224]
	259 Compare W8, 0
	260 JumpIfNotEqual {263}
	261 Call 0x1C17DFC
	262 Move X0, [X19]
	263 Move W8, 24
	264 Move X19, 0x912000
	265 Move X19, [X19+3352]
	266 Move X0, [X19]
	267 Move W8, [X0+224]
	268 Compare W8, 0
	269 JumpIfNotEqual {272}
	270 Call 0x1C17DFC
	271 Move X0, [X19]
	272 Move W8, 28
	273 Move X19, 0x912000
	274 Move X19, [X19+3352]
	275 Move X0, [X19]
	276 Move W8, [X0+224]
	277 Compare W8, 0
	278 JumpIfNotEqual {281}
	279 Call 0x1C17DFC
	280 Move X0, [X19]
	281 Move W8, 32
	282 Move X19, 0x912000
	283 Move X19, [X19+3352]
	284 Move X0, [X19]
	285 Move W8, [X0+224]
	286 Compare W8, 0
	287 JumpIfNotEqual {290}
	288 Call 0x1C17DFC
	289 Move X0, [X19]
	290 Move W8, 36
	291 Move X19, 0x912000
	292 Move X19, [X19+3352]
	293 Move X0, [X19]
	294 Move W8, [X0+224]
	295 Compare W8, 0
	296 JumpIfNotEqual {299}
	297 Call 0x1C17DFC
	298 Move X0, [X19]
	299 Move W8, 40
	300 Move X19, 0x912000
	301 Move X19, [X19+3352]
	302 Move X0, [X19]
	303 Move W8, [X0+224]
	304 Compare W8, 0
	305 JumpIfNotEqual {308}
	306 Call 0x1C17DFC
	307 Move X0, [X19]
	308 Move W8, 44
	309 Move X19, 0x912000
	310 Move X19, [X19+3352]
	311 Move X0, [X19]
	312 Move W8, [X0+224]
	313 Compare W8, 0
	314 JumpIfNotEqual {317}
	315 Call 0x1C17DFC
	316 Move X0, [X19]
	317 Move W8, 48
	318 Move X19, 0x912000
	319 Move X19, [X19+3352]
	320 Move X0, [X19]
	321 Move W8, [X0+224]
	322 Compare W8, 0
	323 JumpIfNotEqual {326}
	324 Call 0x1C17DFC
	325 Move X0, [X19]
	326 Move W8, 52
	327 Move X19, 0x912000
	328 Move X19, [X19+3352]
	329 Move X0, [X19]
	330 Move W8, [X0+224]
	331 Compare W8, 0
	332 JumpIfNotEqual {335}
	333 Call 0x1C17DFC
	334 Move X0, [X19]
	335 Move W8, 56
	336 Move X9, [X0+184]
	337 Move W0, [X9]
	338 Move X20, [X31+32]
	339 Move X19, [X31+40]
	340 Move X22, [X31+16]
	341 Move X21, [X31+24]
	342 Move X30, [X31+48]
	343 Return X0

Method: UnityEngine.InputSystem.Utilities.FourCC get_format()

Disassembly:
	0x0380AD38 FCMP S8, 0x0
	0x0380AD3C B.LS 0x380B0B4

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.Void set_format(UnityEngine.InputSystem.Utilities.FourCC value)

Disassembly:
	0x0380AD40 FMOV S0, 1
	0x0380AD44 FCMP S8, S0

ISIL:
	001 Move [X0], W1
	002 Return 

Method: System.UInt32 get_byteOffset()

Disassembly:
	0x0380AD48 B.GE 0x380B114
	0x0380AD4C ADRP X8, 0xFFFFFFFFFD2E4000

ISIL:
	001 Move W0, [X0+4]
	002 Return X0

Method: System.Void set_byteOffset(System.UInt32 value)

Disassembly:
	0x0380AD50 LDR V0, [X8 + 0x168]
	0x0380AD54 FCVT S1, S8

ISIL:
	001 Move [X0+4], W1
	002 Return 

Method: System.UInt32 get_bitOffset()

Disassembly:
	0x0380AD58 FMOV D2, X31
	0x0380AD5C FMUL D0, D1, D0

ISIL:
	001 Move W0, [X0+8]
	002 Return X0

Method: System.Void set_bitOffset(System.UInt32 value)

Disassembly:
	0x0380AD60 FADD D0, D0, D2
	0x0380AD64 FCVTZS W8, D0

ISIL:
	001 Move [X0+8], W1
	002 Return 

Method: System.UInt32 get_sizeInBits()

Disassembly:
	0x0380AD68 FCVTZU W9, D0
	0x0380AD6C FCMP D0, 0x0

ISIL:
	001 Move W0, [X0+12]
	002 Return X0

Method: System.Void set_sizeInBits(System.UInt32 value)

Disassembly:
	0x0380AD70 CSEL W0, W8, W9, MI
	0x0380AD74 B 0x380B118

ISIL:
	001 Move [X0+12], W1
	002 Return 

Method: System.UInt32 get_alignedSizeInBytes()

Disassembly:
	0x03801B6C BL 0x1C16D08
	0x03801B70 BL 0x1C16F10
	0x03801B74 MOV X19, X0
	0x03801B78 ADRP X0, 0x91A000
	0x03801B7C LDR X0, [X0 + 0xD70]
	0x03801B80 BL 0x1C16D08
	0x03801B84 MOV X1, X0
	0x03801B88 MOV X0, X19
	0x03801B8C MOV X2, X31
	0x03801B90 BL 0x330E100
	0x03801B94 ADRP X0, 0x949000
	0x03801B98 LDR X0, [X0 + 0x118]
	0x03801B9C BL 0x1C16D08
	0x03801BA0 MOV X1, X0
	0x03801BA4 MOV X0, X19
	0x03801BA8 BL 0x1C16DEC
	0x03801BAC SUB X31, X31, 0x60
	0x03801BB0 STP X30, X25, [X31 + 0x20]
	0x03801BB4 STP X24, X23, [X31 + 0x30]
	0x03801BB8 STP X22, X21, [X31 + 0x40]
	0x03801BBC STP X20, X19, [X31 + 0x50]
	0x03801BC0 ADRP X23, 0xBE0000
	0x03801BC4 LDRB W8, [X23 + 0x413]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xBE1000
	006 Move X21, 0x91B000
	007 Move W8, [X20+1135]
	008 Move X21, [X21+3352]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x91B000
	015 Move X0, [X0+3352]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1135], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move W8, [X19+12]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Add W8, W8, 7
	028 Move W0, W8
	029 ShiftRight W0, 3
	030 And W0, W0, 0x7FFFFFFF
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0

Method: System.UInt32 get_effectiveByteOffset()

Disassembly:
	0x0380AD78 MOVZ W9, 0x5445
	0x0380AD7C MOVK W9, 0x42590000
	0x0380AD80 CMP W8, W9
	0x0380AD84 B.LE 0x380AE70
	0x0380AD88 MOVZ W9, 0x4C20
	0x0380AD8C MOVK W9, 0x44420000
	0x0380AD90 CMP W8, W9
	0x0380AD94 B.EQ 0x380AED0
	0x0380AD98 MOVZ W9, 0x5420
	0x0380AD9C MOVK W9, 0x464C0000
	0x0380ADA0 CMP W8, W9
	0x0380ADA4 B.EQ 0x380AED0
	0x0380ADA8 MOVZ W9, 0x5420
	0x0380ADAC MOVK W9, 0x494E0000
	0x0380ADB0 CMP W8, W9
	0x0380ADB4 B.NE 0x380B174
	0x0380ADB8 FMOV S0, 0.5
	0x0380ADBC FMUL S1, S8, S0
	0x0380ADC0 FADD S0, S1, S0
	0x0380ADC4 FCMP S0, 0x0
	0x0380ADC8 B.LS 0x380B0BC
	0x0380ADCC FMOV S1, 1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xBD8000
	006 Move X21, 0x912000
	007 Move W8, [X20+1136]
	008 Move X21, [X21+3352]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x912000
	015 Move X0, [X0+3352]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1136], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move W8, [X19+4]
	025 Move W9, [X19+8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Add W0, W8, W9
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.UInt32 get_effectiveBitOffset()

Disassembly:
	0x0380ADD0 FCMP S0, S1
	0x0380ADD4 B.GE 0x380B12C
	0x0380ADD8 ADRP X8, 0xFFFFFFFFFD2E3000
	0x0380ADDC LDR V1, [X8 + 0x718]
	0x0380ADE0 MOVZ X8, 0xC1E00000
	0x0380ADE4 MOVZ X9, 0x7FF00000
	0x0380ADE8 FCVT S0, S0
	0x0380ADEC FMOV D2, X8
	0x0380ADF0 FMOV D3, X9
	0x0380ADF4 FMUL D0, D0, D1
	0x0380ADF8 B 0x380B040
	0x0380ADFC MOVZ W9, 0x4954
	0x0380AE00 MOVK W9, 0x53420000
	0x0380AE04 CMP W8, W9
	0x0380AE08 B.EQ 0x380AEE8
	0x0380AE0C MOVZ W9, 0x5954
	0x0380AE10 MOVK W9, 0x53420000
	0x0380AE14 CMP W8, W9
	0x0380AE18 B.NE 0x380B174
	0x0380AE1C FMOV S0, 0.5
	0x0380AE20 FMUL S1, S8, S0
	0x0380AE24 FADD S0, S1, S0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xBD8000
	006 Move X21, 0x912000
	007 Move W8, [X20+1137]
	008 Move X21, [X21+3352]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x912000
	015 Move X0, [X0+3352]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1137], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move W8, [X19+4]
	025 Move W9, [X19+8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Add W0, W9, W8
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Int32 ReadInt(System.Void* statePtr)

Disassembly:
	0x0380AE28 FCMP S0, 0x0
	0x0380AE2C B.LS 0x380AFDC
	0x0380AE30 FMOV S1, 1
	0x0380AE34 FCMP S0, S1
	0x0380AE38 B.GE 0x380B0D4
	0x0380AE3C ADRP X8, 0xFFFFFFFFFD2E3000
	0x0380AE40 LDR V1, [X8 + 0x508]
	0x0380AE44 MOVZ X8, 0xC0600000
	0x0380AE48 FCVT S0, S0
	0x0380AE4C MOVZ X9, 0x7FF00000
	0x0380AE50 FMOV D2, X8
	0x0380AE54 FMUL D0, D0, D1
	0x0380AE58 FMOV D3, X9
	0x0380AE5C FADD D0, D0, D2
	0x0380AE60 FCVTZS W8, D0
	0x0380AE64 FCMP D0, D3
	0x0380AE68 CSEL W0, W31, W8, EQ
	0x0380AE6C B 0x380B0D8
	0x0380AE70 MOVZ W9, 0x5420
	0x0380AE74 MOVK W9, 0x42490000
	0x0380AE78 CMP W8, W9
	0x0380AE7C B.EQ 0x380AF0C
	0x0380AE80 MOVZ W9, 0x5445
	0x0380AE84 MOVK W9, 0x42590000
	0x0380AE88 CMP W8, W9
	0x0380AE8C B.NE 0x380B174
	0x0380AE90 FCMP S8, 0x0
	0x0380AE94 B.LS 0x380AFE4
	0x0380AE98 FMOV S0, 1
	0x0380AE9C FCMP S8, S0
	0x0380AEA0 B.GE 0x380B0EC
	0x0380AEA4 ADRP X8, 0xFFFFFFFFFD2E3000
	0x0380AEA8 LDR V0, [X8 + 0x508]
	0x0380AEAC FCVT S1, S8
	0x0380AEB0 FMOV D2, X31
	0x0380AEB4 FMUL D0, D1, D0
	0x0380AEB8 FADD D0, D0, D2
	0x0380AEBC FCVTZS W8, D0
	0x0380AEC0 FCVTZU W9, D0
	0x0380AEC4 FCMP D0, 0x0
	0x0380AEC8 CSEL W0, W8, W9, MI
	0x0380AECC B 0x380B0F0
	0x0380AED0 LDP X20, X19, [X31 + 0x20]
	0x0380AED4 LDP X30, X21, [X31 + 0x10]
	0x0380AED8 MOV V0.16B, V8.16B
	0x0380AEDC MOV X0, X31
	0x0380AEE0 LDR V8, [X31], #0x30
	0x0380AEE4 B 0x37589EC
	0x0380AEE8 LDR X0, [X20]
	0x0380AEEC LDR W8, [X0 + 0xE0]
	0x0380AEF0 CBNZ W8, 0x380AEF8
	0x0380AEF4 BL 0x1C16DFC
	0x0380AEF8 LDR W8, [X19 + 0xC]
	0x0380AEFC CMP W8, 0x1
	0x0380AF00 B.NE 0x380AFEC
	0x0380AF04 FCMP S8, 0x0
	0x0380AF08 B 0x380AF30
	0x0380AF0C LDR X0, [X20]
	0x0380AF10 LDR W8, [X0 + 0xE0]
	0x0380AF14 CBNZ W8, 0x380AF1C
	0x0380AF18 BL 0x1C16DFC
	0x0380AF1C LDR W8, [X19 + 0xC]
	0x0380AF20 CMP W8, 0x1
	0x0380AF24 B.NE 0x380B058
	0x0380AF28 FMOV S0, 0.5
	0x0380AF2C FCMP S8, S0
	0x0380AF30 LDP X20, X19, [X31 + 0x20]
	0x0380AF34 LDP X30, X21, [X31 + 0x10]
	0x0380AF38 CSET W0, GE
	0x0380AF3C MOV X1, X31
	0x0380AF40 LDR V8, [X31], #0x30
	0x0380AF44 B 0x3764438
	0x0380AF48 FMOV S0, 0.5
	0x0380AF4C FMUL S1, S8, S0
	0x0380AF50 FADD S0, S1, S0
	0x0380AF54 FCMP S0, 0x0
	0x0380AF58 B.LS 0x380B0C4
	0x0380AF5C FMOV S1, 1
	0x0380AF60 FCMP S0, S1
	0x0380AF64 B.GE 0x380B144
	0x0380AF68 ADRP X8, 0xFFFFFFFFFD2E4000
	0x0380AF6C LDR V1, [X8 + 0x168]
	0x0380AF70 MOVZ X8, 0xC0E00000
	0x0380AF74 FCVT S0, S0
	0x0380AF78 MOVZ X9, 0x7FF00000
	0x0380AF7C FMOV D2, X8
	0x0380AF80 FMUL D0, D0, D1
	0x0380AF84 FMOV D3, X9
	0x0380AF88 FADD D0, D0, D2
	0x0380AF8C FCVTZS W8, D0
	0x0380AF90 FCMP D0, D3
	0x0380AF94 CSEL W0, W31, W8, EQ
	0x0380AF98 B 0x380B148
	0x0380AF9C FCMP S8, 0x0
	0x0380AFA0 B.LS 0x380B0CC
	0x0380AFA4 FMOV S0, 1
	0x0380AFA8 FCMP S8, S0
	0x0380AFAC B.GE 0x380B15C
	0x0380AFB0 ADRP X8, 0xFFFFFFFFFD2E3000
	0x0380AFB4 LDR V0, [X8 + 0x718]
	0x0380AFB8 FCVT S1, S8
	0x0380AFBC FMOV D2, X31
	0x0380AFC0 FMUL D0, D1, D0
	0x0380AFC4 FADD D0, D0, D2
	0x0380AFC8 FCVTZS W8, D0
	0x0380AFCC FCVTZU W9, D0
	0x0380AFD0 FCMP D0, 0x0
	0x0380AFD4 CSEL W0, W8, W9, MI
	0x0380AFD8 B 0x380B160
	0x0380AFDC MOVZ W0, 0x80
	0x0380AFE0 B 0x380B0D8
	0x0380AFE4 MOV W0, W31
	0x0380AFE8 B 0x380B0F0
	0x0380AFEC LDR X0, [X20]
	0x0380AFF0 LDR W9, [X0 + 0xE0]
	0x0380AFF4 CBNZ W9, 0x380B000
	0x0380AFF8 BL 0x1C16DFC
	0x0380AFFC LDR W8, [X19 + 0xC]
	0x0380B000 SUB W8, W8, 0x1
	0x0380B004 MOVN X9, 0x0
	0x0380B008 FCMP S8, 0x0
	0x0380B00C LSLV X8, X9, X8
	0x0380B010 B.LS 0x380B104
	0x0380B014 FMOV S0, 1
	0x0380B018 FCMP S8, S0
	0x0380B01C ORN W0, W31, W8, 0x0
	0x0380B020 B.GE 0x380B130
	0x0380B024 SCVTF D1, W0
	0x0380B028 SCVTF D2, W8
	0x0380B02C FCVT S0, S8
	0x0380B030 MOVZ X8, 0x7FF00000
	0x0380B034 FSUB D1, D1, D2
	0x0380B038 FMOV D3, X8
	0x0380B03C FMUL D0, D1, D0
	0x0380B040 FADD D0, D0, D2
	0x0380B044 FCVTZS W8, D0
	0x0380B048 FCMP D0, D3
	0x0380B04C MOVZ W9, 0x80000000
	0x0380B050 CSEL W0, W9, W8, EQ
	0x0380B054 B 0x380B130
	0x0380B058 LDR X0, [X20]
	0x0380B05C LDR W9, [X0 + 0xE0]
	0x0380B060 CBNZ W9, 0x380B06C
	0x0380B064 BL 0x1C16DFC
	0x0380B068 LDR W8, [X19 + 0xC]
	0x0380B06C FCMP S8, 0x0
	0x0380B070 B.LS 0x380B10C
	0x0380B074 MOVN X9, 0x0
	0x0380B078 FMOV S0, 1
	0x0380B07C LSLV X8, X9, X8
	0x0380B080 FCMP S8, S0
	0x0380B084 ORN W0, W31, W8, 0x0
	0x0380B088 B.GE 0x380B130
	0x0380B08C FCVT S0, S8
	0x0380B090 UCVTF D1, W0
	0x0380B094 FMOV D2, X31
	0x0380B098 FMUL D0, D0, D1
	0x0380B09C FADD D0, D0, D2
	0x0380B0A0 FCVTZS W8, D0
	0x0380B0A4 FCVTZU W9, D0
	0x0380B0A8 FCMP D0, 0x0
	0x0380B0AC CSEL W0, W8, W9, MI
	0x0380B0B0 B 0x380B130
	0x0380B0B4 MOV W0, W31
	0x0380B0B8 B 0x380B118
	0x0380B0BC MOVZ W0, 0x80000000
	0x0380B0C0 B 0x380B130
	0x0380B0C4 MOVZ W0, 0x8000
	0x0380B0C8 B 0x380B148
	0x0380B0CC MOV W0, W31
	0x0380B0D0 B 0x380B160
	0x0380B0D4 MOVZ W0, 0x7F
	0x0380B0D8 LDP X20, X19, [X31 + 0x20]
	0x0380B0DC LDP X30, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xBD8000
	007 Move X21, 0x912000
	008 Move W8, [X22+1138]
	009 Move X21, [X21+3352]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x912000
	017 Move X0, [X0+3352]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1138], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W8, [X20]
	027 Move W9, [X20+4]
	028 Move W10, 0x4954
	029 Move X9, W9
	030 NotImplemented "Instruction MOVK not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Add X19, X9, X19
	033 Move W9, 0x5254
	034 NotImplemented "Instruction MOVK not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W9, 0x4E54
	037 NotImplemented "Instruction MOVK not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W9, 0x4854
	040 NotImplemented "Instruction MOVK not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 Move W9, 0x5445
	044 NotImplemented "Instruction MOVK not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W9, 0x5420
	047 NotImplemented "Instruction MOVK not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W9, 0x4954
	050 NotImplemented "Instruction MOVK not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X0, [X21]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfEqual {102}
	056 Add X20, X20, 12
	057 Move W8, [X20]
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X21, X20
	061 Move X0, X19
	062 Move X2, X31
	063 Call MemoryHelpers.ReadSingleBit, X0, X1
	064 And W31, W0, 1
	065 Move W8, 1
	066 NotImplemented "Instruction CSNEG not yet implemented."
	067 Move W9, 0x5954
	068 NotImplemented "Instruction MOVK not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move W9, 0x5254
	071 NotImplemented "Instruction MOVK not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction LDRSH not yet implemented."
	074 Move W9, 0x5420
	075 NotImplemented "Instruction MOVK not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move W9, 0x5445
	078 NotImplemented "Instruction MOVK not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move W0, [X19]
	081 Move W0, [X19]
	082 NotImplemented "Instruction INVALID not yet implemented."
	083 Move X0, [X21]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfEqual {123}
	087 Add X20, X20, 12
	088 Move W8, [X20]
	089 NotImplemented "Instruction LDUR not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X21, X20
	092 Move X0, X19
	093 Move X2, X31
	094 Call MemoryHelpers.ReadSingleBit, X0, X1
	095 And W0, W0, 1
	096 Move X20, [X31+32]
	097 Move X19, [X31+40]
	098 Move X22, [X31+16]
	099 Move X21, [X31+24]
	100 Move X30, [X31+48]
	101 Return X0
	102 Call 0x1C17DFC
	103 Move X0, [X21]
	104 Move X21, X20
	105 Move W8, [X0+224]
	106 Add X21, X21, 12
	107 Move W22, [X21]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Move W1, [X20+8]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move W2, [X21]
	114 Move X0, X19
	115 Move X20, [X31+32]
	116 Move X19, [X31+40]
	117 Move X22, [X31+16]
	118 Move X21, [X31+24]
	119 Move X3, X31
	120 Move X30, [X31+48]
	121 Call MemoryHelpers.ReadExcessKMultipleBitsAsInt, X0, X1, X2
	122 Return X0
	123 Call 0x1C17DFC
	124 Move X0, [X21]
	125 Move X21, X20
	126 Move W8, [X0+224]
	127 Add X21, X21, 12
	128 Move W22, [X21]
	129 Compare W8, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Move W1, [X20+8]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move W2, [X21]
	135 Move X0, X19
	136 Move X20, [X31+32]
	137 Move X19, [X31+40]
	138 Move X22, [X31+16]
	139 Move X21, [X31+24]
	140 Move X3, X31
	141 Move X30, [X31+48]
	142 Call MemoryHelpers.ReadMultipleBitsAsUInt, X0, X1, X2
	143 Return X0
	144 Move X0, 0x911000
	145 Move X0, [X0+3352]
	146 Call 0x1C17D08
	147 Call 0x19913D0
	148 Move W8, [X20]
	149 Move X0, 0x911000
	150 Move [X31+8], W8
	151 Move X0, [X0+3368]
	152 Call 0x1C17D08
	153 Add X1, X31, 8
	154 Call 0x1C17E04
	155 Move X19, X0
	156 Move X0, 0x940000
	157 Move X0, [X0+1264]
	158 Call 0x1C17D08
	159 Move X1, X19
	160 Move X2, X31
	161 Call String.Format, X0, X1
	162 Move X19, X0
	163 Move X0, 0x8E9000
	164 Move X0, [X0+1456]
	165 Call 0x1C17D08
	166 Call 0x1C17F10
	167 Move X1, X19
	168 Move X2, X31
	169 Move X20, X0
	170 Call InvalidOperationException..ctor, X0, X1
	171 Move X0, 0x940000
	172 Move X0, [X0+1272]
	173 Call 0x1C17D08
	174 Move X1, X0
	175 Move X0, X20
	176 Call 0x1C17DEC

Method: System.Void WriteInt(System.Void* statePtr, System.Int32 value)

Disassembly:
	0x0380B0E0 MOV X1, X31
	0x0380B0E4 LDR V8, [X31], #0x30
	0x0380B0E8 B 0x3765AFC
	0x0380B0EC MOVZ W0, 0xFF
	0x0380B0F0 LDP X20, X19, [X31 + 0x20]
	0x0380B0F4 LDP X30, X21, [X31 + 0x10]
	0x0380B0F8 MOV X1, X31
	0x0380B0FC LDR V8, [X31], #0x30
	0x0380B100 B 0x3765AD8
	0x0380B104 MOV W0, W8
	0x0380B108 B 0x380B130
	0x0380B10C MOV W0, W31
	0x0380B110 B 0x380B130
	0x0380B114 MOVZ W0, 0xFFFF
	0x0380B118 LDP X20, X19, [X31 + 0x20]
	0x0380B11C LDP X30, X21, [X31 + 0x10]
	0x0380B120 MOV X1, X31
	0x0380B124 LDR V8, [X31], #0x30
	0x0380B128 B 0x3766B40
	0x0380B12C MOVN W0, 0x80000000
	0x0380B130 LDP X20, X19, [X31 + 0x20]
	0x0380B134 LDP X30, X21, [X31 + 0x10]
	0x0380B138 MOV X1, X31
	0x0380B13C LDR V8, [X31], #0x30
	0x0380B140 B 0x3765B44
	0x0380B144 MOVZ W0, 0x7FFF
	0x0380B148 LDP X20, X19, [X31 + 0x20]
	0x0380B14C LDP X30, X21, [X31 + 0x10]
	0x0380B150 MOV X1, X31
	0x0380B154 LDR V8, [X31], #0x30
	0x0380B158 B 0x3765B20
	0x0380B15C MOVN W0, 0x0
	0x0380B160 LDP X20, X19, [X31 + 0x20]
	0x0380B164 LDP X30, X21, [X31 + 0x10]
	0x0380B168 MOV X1, X31
	0x0380B16C LDR V8, [X31], #0x30
	0x0380B170 B 0x3766B54
	0x0380B174 ADRP X0, 0x910000
	0x0380B178 LDR X0, [X0 + 0xD18]
	0x0380B17C BL 0x1C16D08
	0x0380B180 BL 0x19903D0
	0x0380B184 LDR W8, [X19]
	0x0380B188 ADRP X0, 0x910000
	0x0380B18C STR W8, [X31 + 0x8]
	0x0380B190 LDR X0, [X0 + 0xD28]
	0x0380B194 BL 0x1C16D08
	0x0380B198 ADD X1, X31, 0x8
	0x0380B19C BL 0x1C16E04
	0x0380B1A0 MOV X19, X0
	0x0380B1A4 ADRP X0, 0x93F000
	0x0380B1A8 LDR X0, [X0 + 0x508]
	0x0380B1AC BL 0x1C16D08
	0x0380B1B0 MOV X1, X19
	0x0380B1B4 MOV X2, X31
	0x0380B1B8 BL 0x321EFD0
	0x0380B1BC MOV X19, X0
	0x0380B1C0 ADRP X0, 0x8E8000
	0x0380B1C4 LDR X0, [X0 + 0x7D0]
	0x0380B1C8 BL 0x1C16D08
	0x0380B1CC BL 0x1C16F10
	0x0380B1D0 MOV X1, X19
	0x0380B1D4 MOV X2, X31
	0x0380B1D8 MOV X20, X0
	0x0380B1DC BL 0x33B2C70
	0x0380B1E0 ADRP X0, 0x93F000
	0x0380B1E4 LDR X0, [X0 + 0x520]
	0x0380B1E8 BL 0x1C16D08
	0x0380B1EC MOV X1, X0
	0x0380B1F0 MOV X0, X20
	0x0380B1F4 BL 0x1C16DEC
	0x0380B1F8 STR X30, [X31 - 0x30]!
	0x0380B1FC STP X22, X21, [X31 + 0x10]
	0x0380B200 STP X20, X19, [X31 + 0x20]
	0x0380B204 ADRP X22, 0xBD6000
	0x0380B208 ADRP X21, 0x910000
	0x0380B20C LDRB W8, [X22 + 0x477]
	0x0380B210 LDR X21, [X21 + 0xD18]
	0x0380B214 MOV X19, X1
	0x0380B218 MOV X20, X0
	0x0380B21C TBNZ X8, 0x0, 0x380B234
	0x0380B220 ADRP X0, 0x910000
	0x0380B224 LDR X0, [X0 + 0xD18]
	0x0380B228 BL 0x1C16CF4
	0x0380B22C MOVZ W8, 0x1
	0x0380B230 STRB W8, [X22 + 0x477]
	0x0380B234 LDR X0, [X21]
	0x0380B238 LDR W8, [X0 + 0xE0]
	0x0380B23C CBNZ W8, 0x380B244
	0x0380B240 BL 0x1C16DFC
	0x0380B244 LDP W8, W9, [X20]
	0x0380B248 MOVZ W10, 0x5420
	0x0380B24C SXTW X9, W9
	0x0380B250 MOVK W10, 0x494E0000
	0x0380B254 CMP W8, W10
	0x0380B258 ADD X19, X9, X19
	0x0380B25C B.LE 0x380B2C0
	0x0380B260 MOVZ W9, 0x5954
	0x0380B264 MOVK W9, 0x53420000
	0x0380B268 CMP W8, W9
	0x0380B26C B.LE 0x380B32C
	0x0380B270 MOVZ W9, 0x5254
	0x0380B274 MOVK W9, 0x53480000
	0x0380B278 CMP W8, W9
	0x0380B27C B.EQ 0x380B42C
	0x0380B280 MOVZ W9, 0x4E54
	0x0380B284 MOVK W9, 0x55490000
	0x0380B288 CMP W8, W9
	0x0380B28C B.EQ 0x380B470
	0x0380B290 MOVZ W9, 0x4854
	0x0380B294 MOVK W9, 0x55530000
	0x0380B298 CMP W8, W9
	0x0380B29C B.NE 0x380B558
	0x0380B2A0 LDRH W8, [X19]
	0x0380B2A4 CBZ W8, 0x380B4B4
	0x0380B2A8 MOVZ W9, 0xFFFF
	0x0380B2AC CMP W8, W9
	0x0380B2B0 B.EQ 0x380B49C
	0x0380B2B4 ADRP X9, 0xFFFFFFFFFD2E3000
	0x0380B2B8 LDR V0, [X9 + 0x168]
	0x0380B2BC B 0x380B48C
	0x0380B2C0 MOVZ W9, 0x5445
	0x0380B2C4 MOVK W9, 0x42590000
	0x0380B2C8 CMP W8, W9
	0x0380B2CC B.LE 0x380B378
	0x0380B2D0 MOVZ W9, 0x4C20
	0x0380B2D4 MOVK W9, 0x44420000
	0x0380B2D8 CMP W8, W9
	0x0380B2DC B.EQ 0x380B4A4
	0x0380B2E0 MOVZ W9, 0x5420
	0x0380B2E4 MOVK W9, 0x464C0000
	0x0380B2E8 CMP W8, W9
	0x0380B2EC B.EQ 0x380B4AC
	0x0380B2F0 MOVZ W9, 0x5420
	0x0380B2F4 MOVK W9, 0x494E0000
	0x0380B2F8 CMP W8, W9
	0x0380B2FC B.NE 0x380B558
	0x0380B300 LDR W8, [X19]
	0x0380B304 MOVZ W9, 0x80000000
	0x0380B308 CMP W8, W9
	0x0380B30C B.EQ 0x380B550
	0x0380B310 MOVN W9, 0x80000000
	0x0380B314 CMP W8, W9
	0x0380B318 B.EQ 0x380B49C
	0x0380B31C ADRP X9, 0xFFFFFFFFFD2E2000
	0x0380B320 LDR V0, [X9 + 0x718]
	0x0380B324 MOVZ X9, 0x41E00000
	0x0380B328 B 0x380B458
	0x0380B32C MOVZ W9, 0x4954
	0x0380B330 MOVK W9, 0x53420000
	0x0380B334 CMP W8, W9
	0x0380B338 B.EQ 0x380B3B4
	0x0380B33C MOVZ W9, 0x5954
	0x0380B340 MOVK W9, 0x53420000
	0x0380B344 CMP W8, W9
	0x0380B348 B.NE 0x380B558
	0x0380B34C LDRB W8, [X19]
	0x0380B350 CMP W8, 0x7F
	0x0380B354 B.EQ 0x380B49C
	0x0380B358 CMP W8, 0x80
	0x0380B35C FMOV D0, -1
	0x0380B360 B.EQ 0x380B540
	0x0380B364 ADRP X9, 0xFFFFFFFFFD2E2000
	0x0380B368 LDR V0, [X9 + 0x508]
	0x0380B36C SXTB W8, W8
	0x0380B370 MOVZ X9, 0x40600000
	0x0380B374 B 0x380B458
	0x0380B378 MOVZ W9, 0x5420
	0x0380B37C MOVK W9, 0x42490000
	0x0380B380 CMP W8, W9
	0x0380B384 B.EQ 0x380B3EC
	0x0380B388 MOVZ W9, 0x5445
	0x0380B38C MOVK W9, 0x42590000
	0x0380B390 CMP W8, W9
	0x0380B394 B.NE 0x380B558
	0x0380B398 LDRB W8, [X19]
	0x0380B39C CBZ W8, 0x380B4B4

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xBD7000
	009 Move X22, 0x911000
	010 Move W8, [X23+1139]
	011 Move X22, [X22+3352]
	012 Move W19, W2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x911000
	020 Move X0, [X0+3352]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+1139], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move W8, [X21]
	030 Move W9, [X21+4]
	031 Move W10, 0x4954
	032 Move X9, W9
	033 NotImplemented "Instruction MOVK not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Add X20, X9, X20
	036 Move W9, 0x5254
	037 NotImplemented "Instruction MOVK not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W9, 0x4E54
	040 NotImplemented "Instruction MOVK not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W9, 0x4854
	043 NotImplemented "Instruction MOVK not yet implemented."
	044 Move W9, 0x5445
	045 NotImplemented "Instruction MOVK not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move W9, 0x5420
	048 NotImplemented "Instruction MOVK not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W9, 0x4954
	051 NotImplemented "Instruction MOVK not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X0, [X22]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfEqual {133}
	057 Add X21, X21, 12
	058 Move W8, [X21]
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X22, X21
	062 NotImplemented "Instruction CMP not yet implemented."
	063 NotImplemented "Instruction CSET not yet implemented."
	064 Move W9, 0x5954
	065 NotImplemented "Instruction MOVK not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W9, 0x5254
	068 NotImplemented "Instruction MOVK not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction STRH not yet implemented."
	071 Move W9, 0x5420
	072 NotImplemented "Instruction MOVK not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move W9, 0x5445
	075 NotImplemented "Instruction MOVK not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move [X20], W19
	078 Move [X20], W19
	079 Move X20, [X31+48]
	080 Move X19, [X31+56]
	081 Move X22, [X31+32]
	082 Move X21, [X31+40]
	083 Move X30, [X31+16]
	084 Move X23, [X31+24]
	085 Add X31, X31, 64
	086 Return 
	087 Move X0, [X22]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfEqual {109}
	091 Add X21, X21, 12
	092 Move W8, [X21]
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X22, X21
	096 NotImplemented "Instruction CMP not yet implemented."
	097 NotImplemented "Instruction CSET not yet implemented."
	098 Move X0, X20
	099 Move X20, [X31+48]
	100 Move X19, [X31+56]
	101 Move X22, [X31+32]
	102 Move X21, [X31+40]
	103 Move X30, [X31+16]
	104 Move X23, [X31+24]
	105 Move X3, X31
	106 Add X31, X31, 64
	107 Call MemoryHelpers.WriteSingleBit, X0, X1, X2
	108 Return 
	109 Call 0x1C17DFC
	110 Move X0, [X22]
	111 Move X22, X21
	112 Move W8, [X0+224]
	113 Add X22, X22, 12
	114 Move W23, [X22]
	115 Compare W8, 0
	116 JumpIfNotEqual {118}
	117 Call 0x1C17DFC
	118 Move W1, [X21+8]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move W2, [X22]
	121 Move X0, X20
	122 Move W3, W19
	123 Move X20, [X31+48]
	124 Move X19, [X31+56]
	125 Move X22, [X31+32]
	126 Move X21, [X31+40]
	127 Move X30, [X31+16]
	128 Move X23, [X31+24]
	129 Move X4, X31
	130 Add X31, X31, 64
	131 Call MemoryHelpers.WriteUIntAsMultipleBits, X0, X1, X2, X3
	132 Return 
	133 Call 0x1C17DFC
	134 Move X0, [X22]
	135 Move X22, X21
	136 Move W8, [X0+224]
	137 Add X22, X22, 12
	138 Move W23, [X22]
	139 Compare W8, 0
	140 JumpIfNotEqual {142}
	141 Call 0x1C17DFC
	142 Move W1, [X21+8]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move W2, [X22]
	145 Move X0, X20
	146 Move W3, W19
	147 Move X20, [X31+48]
	148 Move X19, [X31+56]
	149 Move X22, [X31+32]
	150 Move X21, [X31+40]
	151 Move X30, [X31+16]
	152 Move X23, [X31+24]
	153 Move X4, X31
	154 Add X31, X31, 64
	155 Call MemoryHelpers.WriteIntAsExcessKMultipleBits, X0, X1, X2, X3
	156 Return 
	157 Move X0, 0x911000
	158 Move X0, [X0+3352]
	159 Call 0x1C17D08
	160 Call 0x19913D0
	161 Move W8, [X21]
	162 Move X0, 0x911000
	163 Move [X31+8], W8
	164 Move X0, [X0+3368]
	165 Call 0x1C17D08
	166 Add X1, X31, 8
	167 Call 0x1C17E04
	168 Move X19, X0
	169 Move X0, 0x940000
	170 Move X0, [X0+1264]
	171 Call 0x1C17D08
	172 Move X1, X19
	173 Move X2, X31
	174 Call String.Format, X0, X1
	175 Move X19, X0
	176 Move X0, 0x8E9000
	177 Move X0, [X0+2000]
	178 Call 0x1C17D08
	179 Call 0x1C17F10
	180 Move X1, X19
	181 Move X2, X31
	182 Move X20, X0
	183 Call Exception..ctor, X0, X1
	184 Move X0, 0x940000
	185 Move X0, [X0+1280]
	186 Call 0x1C17D08
	187 Move X1, X0
	188 Move X0, X20
	189 Call 0x1C17DEC

Method: System.Single ReadFloat(System.Void* statePtr)

Disassembly:
	0x0380B3A0 CMP W8, 0xFF
	0x0380B3A4 B.EQ 0x380B49C
	0x0380B3A8 ADRP X9, 0xFFFFFFFFFD2E2000
	0x0380B3AC LDR V0, [X9 + 0x508]
	0x0380B3B0 B 0x380B48C
	0x0380B3B4 LDR X0, [X21]
	0x0380B3B8 LDR W8, [X0 + 0xE0]
	0x0380B3BC CBZ W8, 0x380B4BC
	0x0380B3C0 LDR W8, [X20 + 0xC]!
	0x0380B3C4 LDUR W1, [X20 - 0x4]
	0x0380B3C8 CMP W8, 0x1
	0x0380B3CC MOV X21, X20
	0x0380B3D0 B.NE 0x380B4E4
	0x0380B3D4 MOV X0, X19
	0x0380B3D8 MOV X2, X31
	0x0380B3DC BL 0x37626D0
	0x0380B3E0 ANDS W31, W0, 0x1
	0x0380B3E4 FMOV D0, -1
	0x0380B3E8 B 0x380B420
	0x0380B3EC LDR X0, [X21]
	0x0380B3F0 LDR W8, [X0 + 0xE0]
	0x0380B3F4 CBZ W8, 0x380B504
	0x0380B3F8 LDR W8, [X20 + 0xC]!
	0x0380B3FC LDUR W1, [X20 - 0x4]
	0x0380B400 CMP W8, 0x1
	0x0380B404 MOV X21, X20
	0x0380B408 B.NE 0x380B52C
	0x0380B40C MOV X0, X19
	0x0380B410 MOV X2, X31
	0x0380B414 BL 0x37626D0
	0x0380B418 ANDS W31, W0, 0x1
	0x0380B41C FMOV D0, X31
	0x0380B420 FMOV D1, 1
	0x0380B424 FCSEL D0, D1, D0, NE
	0x0380B428 B 0x380B540
	0x0380B42C LDRH W8, [X19]
	0x0380B430 MOVZ W9, 0x7FFF
	0x0380B434 CMP W8, W9
	0x0380B438 B.EQ 0x380B49C
	0x0380B43C CMP W8, 0x8000
	0x0380B440 FMOV D0, -1
	0x0380B444 B.EQ 0x380B540
	0x0380B448 ADRP X9, 0xFFFFFFFFFD2E3000
	0x0380B44C LDR V0, [X9 + 0x168]
	0x0380B450 SXTH W8, W8
	0x0380B454 MOVZ X9, 0x40E00000
	0x0380B458 SCVTF D1, W8
	0x0380B45C FMOV D2, X9
	0x0380B460 FADD D1, D1, D2
	0x0380B464 FDIV D0, D1, D0
	0x00000000 INVALID
	0x0380B46C B 0x380B4F4
	0x0380B470 LDR W8, [X19]
	0x0380B474 ADDS W31, W8, 0x1
	0x0380B478 B.EQ 0x380B49C
	0x0380B47C FMOV D0, X31
	0x0380B480 CBZ W8, 0x380B540
	0x0380B484 ADRP X9, 0xFFFFFFFFFD2E2000
	0x0380B488 LDR V0, [X9 + 0x718]
	0x0380B48C UCVTF D1, W8
	0x0380B490 FDIV D0, D1, D0
	0x00000000 INVALID
	0x0380B498 B 0x380B53C
	0x0380B49C FMOV D0, 1
	0x0380B4A0 B 0x380B540
	0x0380B4A4 LDR V0, [X19]
	0x0380B4A8 B 0x380B540
	0x0380B4AC LDR V0, [X19]
	0x0380B4B0 B 0x380B53C
	0x0380B4B4 FMOV D0, X31
	0x0380B4B8 B 0x380B540
	0x0380B4BC BL 0x1C16DFC
	0x0380B4C0 LDR X0, [X21]
	0x0380B4C4 MOV X21, X20
	0x0380B4C8 LDR W8, [X0 + 0xE0]
	0x0380B4CC LDR W22, [X21 + 0xC]!
	0x0380B4D0 CBNZ W8, 0x380B4D8
	0x0380B4D4 BL 0x1C16DFC
	0x0380B4D8 LDR W1, [X20 + 0x8]
	0x0380B4DC CMP W22, 0x1
	0x0380B4E0 B.EQ 0x380B3D4
	0x0380B4E4 LDR W2, [X21]
	0x0380B4E8 MOV X0, X19
	0x0380B4EC MOV X3, X31
	0x0380B4F0 BL 0x3762C68
	0x0380B4F4 FADD S0, S0, S0
	0x0380B4F8 FMOV S1, -1
	0x0380B4FC FADD S0, S0, S1
	0x0380B500 B 0x380B53C
	0x0380B504 BL 0x1C16DFC
	0x0380B508 LDR X0, [X21]
	0x0380B50C MOV X21, X20
	0x0380B510 LDR W8, [X0 + 0xE0]
	0x0380B514 LDR W22, [X21 + 0xC]!
	0x0380B518 CBNZ W8, 0x380B520
	0x0380B51C BL 0x1C16DFC
	0x0380B520 LDR W1, [X20 + 0x8]
	0x0380B524 CMP W22, 0x1
	0x0380B528 B.EQ 0x380B40C
	0x0380B52C LDR W2, [X21]
	0x0380B530 MOV X0, X19
	0x0380B534 MOV X3, X31
	0x0380B538 BL 0x3762C68
	0x0380B53C FCVT S0, S0
	0x0380B540 LDP X20, X19, [X31 + 0x20]
	0x0380B544 LDP X22, X21, [X31 + 0x10]
	0x0380B548 LDR X30, [X31], #0x30
	0x0380B54C RET
	0x0380B550 FMOV D0, -1
	0x0380B554 B 0x380B540
	0x0380B558 ADRP X0, 0x910000
	0x0380B55C LDR X0, [X0 + 0xD18]
	0x0380B560 BL 0x1C16D08
	0x0380B564 BL 0x19903D0
	0x0380B568 LDR W8, [X20]
	0x0380B56C ADRP X0, 0x910000
	0x0380B570 STR W8, [X31 + 0x8]
	0x0380B574 LDR X0, [X0 + 0xD28]
	0x0380B578 BL 0x1C16D08
	0x0380B57C ADD X1, X31, 0x8
	0x0380B580 BL 0x1C16E04
	0x0380B584 MOV X19, X0
	0x0380B588 ADRP X0, 0x93F000
	0x0380B58C LDR X0, [X0 + 0x508]
	0x0380B590 BL 0x1C16D08
	0x0380B594 MOV X1, X19
	0x0380B598 MOV X2, X31
	0x0380B59C BL 0x321EFD0
	0x0380B5A0 MOV X19, X0
	0x0380B5A4 ADRP X0, 0x8E8000
	0x0380B5A8 LDR X0, [X0 + 0x7D0]
	0x0380B5AC BL 0x1C16D08
	0x0380B5B0 BL 0x1C16F10
	0x0380B5B4 MOV X1, X19
	0x0380B5B8 MOV X2, X31
	0x0380B5BC MOV X20, X0
	0x0380B5C0 BL 0x33B2C70
	0x0380B5C4 ADRP X0, 0x93F000
	0x0380B5C8 LDR X0, [X0 + 0x528]
	0x0380B5CC BL 0x1C16D08
	0x0380B5D0 MOV X1, X0
	0x0380B5D4 MOV X0, X20
	0x0380B5D8 BL 0x1C16DEC
	0x0380B5DC SUB X31, X31, 0x40
	0x0380B5E0 STR D8, [X31 + 0x10]
	0x0380B5E4 STR X30, [X31 + 0x18]
	0x0380B5E8 STP X22, X21, [X31 + 0x20]
	0x0380B5EC STP X20, X19, [X31 + 0x30]
	0x0380B5F0 ADRP X22, 0xBD6000
	0x0380B5F4 ADRP X21, 0x910000
	0x0380B5F8 LDRB W8, [X22 + 0x478]
	0x0380B5FC LDR X21, [X21 + 0xD18]
	0x0380B600 MOV V8.16B, V0.16B
	0x0380B604 MOV X19, X1
	0x0380B608 MOV X20, X0
	0x0380B60C TBNZ X8, 0x0, 0x380B624
	0x0380B610 ADRP X0, 0x910000
	0x0380B614 LDR X0, [X0 + 0xD18]
	0x0380B618 BL 0x1C16CF4
	0x0380B61C MOVZ W8, 0x1
	0x0380B620 STRB W8, [X22 + 0x478]
	0x0380B624 LDR X0, [X21]
	0x0380B628 LDR W8, [X0 + 0xE0]
	0x0380B62C CBNZ W8, 0x380B634
	0x0380B630 BL 0x1C16DFC
	0x0380B634 LDP W8, W9, [X20]
	0x0380B638 MOVZ W10, 0x5420
	0x0380B63C SXTW X9, W9
	0x0380B640 MOVK W10, 0x494E0000
	0x0380B644 CMP W8, W10
	0x0380B648 ADD X19, X9, X19
	0x0380B64C B.LE 0x380B6D4
	0x0380B650 MOVZ W9, 0x5954
	0x0380B654 MOVK W9, 0x53420000
	0x0380B658 CMP W8, W9
	0x0380B65C B.LE 0x380B770
	0x0380B660 MOVZ W9, 0x5254
	0x0380B664 MOVK W9, 0x53480000
	0x0380B668 CMP W8, W9
	0x0380B66C B.EQ 0x380B8C0
	0x0380B670 MOVZ W9, 0x4E54
	0x0380B674 MOVK W9, 0x55490000
	0x0380B678 CMP W8, W9
	0x0380B67C B.EQ 0x380B918
	0x0380B680 MOVZ W9, 0x4854
	0x0380B684 MOVK W9, 0x55530000
	0x0380B688 CMP W8, W9
	0x0380B68C B.NE 0x380BA80
	0x00000000 INVALID
	0x0380B694 FCMP S0, 0x0
	0x0380B698 B.LS 0x380BA10
	0x0380B69C FMOV S1, 1
	0x0380B6A0 FCMP S0, S1
	0x0380B6A4 B.GE 0x380BA44
	0x0380B6A8 ADRP X8, 0xFFFFFFFFFD2E3000
	0x0380B6AC LDR V1, [X8 + 0x168]
	0x0380B6B0 FCVT S0, S0
	0x0380B6B4 FMOV D2, X31
	0x0380B6B8 FMUL D0, D0, D1
	0x0380B6BC FADD D0, D0, D2
	0x0380B6C0 FCVTZS W8, D0
	0x0380B6C4 FCVTZU W9, D0
	0x0380B6C8 FCMP D0, 0x0
	0x0380B6CC CSEL W8, W8, W9, MI
	0x0380B6D0 B 0x380BA58
	0x0380B6D4 MOVZ W9, 0x5445
	0x0380B6D8 MOVK W9, 0x42590000
	0x0380B6DC CMP W8, W9
	0x0380B6E0 B.LE 0x380B7E8
	0x0380B6E4 MOVZ W9, 0x4C20
	0x0380B6E8 MOVK W9, 0x44420000
	0x0380B6EC CMP W8, W9
	0x0380B6F0 B.EQ 0x380B95C
	0x0380B6F4 MOVZ W9, 0x5420
	0x0380B6F8 MOVK W9, 0x464C0000
	0x0380B6FC CMP W8, W9
	0x0380B700 B.EQ 0x380B964
	0x0380B704 MOVZ W9, 0x5420
	0x0380B708 MOVK W9, 0x494E0000
	0x0380B70C CMP W8, W9
	0x0380B710 B.NE 0x380BA80
	0x00000000 INVALID
	0x0380B718 FMOV S1, 0.5
	0x0380B71C FMUL S0, S0, S1
	0x0380B720 FADD S0, S0, S1
	0x0380B724 FCMP S0, 0x0
	0x0380B728 B.LS 0x380BA18
	0x0380B72C FMOV S1, 1
	0x0380B730 FCMP S0, S1
	0x0380B734 B.GE 0x380BA4C
	0x0380B738 ADRP X8, 0xFFFFFFFFFD2E2000
	0x0380B73C LDR V1, [X8 + 0x718]
	0x0380B740 MOVZ X8, 0xC1E00000
	0x0380B744 FCVT S0, S0
	0x0380B748 MOVZ X9, 0x7FF00000
	0x0380B74C FMOV D2, X8
	0x0380B750 FMUL D0, D0, D1
	0x0380B754 FMOV D3, X9
	0x0380B758 FADD D0, D0, D2
	0x0380B75C FCVTZS W8, D0
	0x0380B760 FCMP D0, D3
	0x0380B764 MOVZ W9, 0x80000000
	0x0380B768 CSEL W8, W9, W8, EQ
	0x0380B76C B 0x380BA64
	0x0380B770 MOVZ W9, 0x4954
	0x0380B774 MOVK W9, 0x53420000
	0x0380B778 CMP W8, W9
	0x0380B77C B.EQ 0x380B84C
	0x0380B780 MOVZ W9, 0x5954
	0x0380B784 MOVK W9, 0x53420000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xBD7000
	007 Move X21, 0x911000
	008 Move W8, [X22+1140]
	009 Move X21, [X21+3352]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x911000
	017 Move X0, [X0+3352]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1140], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W8, [X20]
	027 Move W9, [X20+4]
	028 Move W10, 0x5420
	029 Move X9, W9
	030 NotImplemented "Instruction MOVK not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Add X19, X9, X19
	033 Move W9, 0x5954
	034 NotImplemented "Instruction MOVK not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W9, 0x5254
	037 NotImplemented "Instruction MOVK not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W9, 0x4E54
	040 NotImplemented "Instruction MOVK not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W9, 0x4854
	043 NotImplemented "Instruction MOVK not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Compare W8, 0
	047 JumpIfEqual {157}
	048 Move W9, 0xFFFF
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X9, -47300608
	051 Move V0, [X9+360]
	052 Move W9, 0x5445
	053 NotImplemented "Instruction MOVK not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move W9, 0x4C20
	056 NotImplemented "Instruction MOVK not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move W9, 0x5420
	059 NotImplemented "Instruction MOVK not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move W9, 0x5420
	062 NotImplemented "Instruction MOVK not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move W8, [X19]
	065 Move W9, 0x80000000
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move TEMP, 0x80000000
	068 Not TEMP
	069 Move W9, TEMP
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X9, -47304704
	072 Move V0, [X9+1816]
	073 Move X9, 0x41E00000
	074 Move W9, 0x4954
	075 NotImplemented "Instruction MOVK not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move W9, 0x5954
	078 NotImplemented "Instruction MOVK not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move W8, [X19]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move S0, -1
	084 Move X9, -47304704
	085 Move V0, [X9+1288]
	086 NotImplemented "Instruction SXTB not yet implemented."
	087 Move X9, 0x40600000
	088 Move W9, 0x5420
	089 NotImplemented "Instruction MOVK not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move W9, 0x5445
	092 NotImplemented "Instruction MOVK not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move W8, [X19]
	095 Compare W8, 0
	096 JumpIfEqual {157}
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X9, -47304704
	099 Move V0, [X9+1288]
	100 Move X0, [X21]
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfEqual {158}
	104 Add X20, X20, 12
	105 Move W8, [X20]
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X21, X20
	109 Move X0, X19
	110 Move X2, X31
	111 Call MemoryHelpers.ReadSingleBit, X0, X1
	112 And W31, W0, 1
	113 Move S0, -1
	114 Move X0, [X21]
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfEqual {182}
	118 Add X20, X20, 12
	119 Move W8, [X20]
	120 NotImplemented "Instruction LDUR not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X21, X20
	123 Move X0, X19
	124 Move X2, X31
	125 Call MemoryHelpers.ReadSingleBit, X0, X1
	126 And W31, W0, 1
	127 Move S0, W31
	128 Move S1, 1
	129 NotImplemented "Instruction FCSEL not yet implemented."
	130 NotImplemented "Instruction LDRH not yet implemented."
	131 Move W9, 0x7FFF
	132 NotImplemented "Instruction CMP not yet implemented."
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move S0, -1
	135 Move X9, -47300608
	136 Move V0, [X9+360]
	137 NotImplemented "Instruction SXTH not yet implemented."
	138 Move X9, 0x40E00000
	139 NotImplemented "Instruction SCVTF not yet implemented."
	140 Move D2, X9
	141 Add D1, D1, D2
	142 NotImplemented "Instruction FDIV not yet implemented."
	143 NotImplemented "Instruction INVALID not yet implemented."
	144 Move W8, [X19]
	145 Add W31, W8, 1
	146 Move S0, W31
	147 Compare W8, 0
	148 JumpIfEqual {176}
	149 Move X9, -47304704
	150 Move V0, [X9+1816]
	151 NotImplemented "Instruction UCVTF not yet implemented."
	152 NotImplemented "Instruction FDIV not yet implemented."
	153 Move S0, 1
	154 Move V0, [X19]
	155 NotImplemented "Instruction INVALID not yet implemented."
	156 Move V0, [X19]
	157 Move S0, W31
	158 Call 0x1C17DFC
	159 Move X0, [X21]
	160 Move X21, X20
	161 Move W8, [X0+224]
	162 Add X21, X21, 12
	163 Move W22, [X21]
	164 Compare W8, 0
	165 JumpIfNotEqual {167}
	166 Call 0x1C17DFC
	167 Move W1, [X20+8]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move W2, [X21]
	170 Move X0, X19
	171 Move X3, X31
	172 Call MemoryHelpers.ReadMultipleBitsAsNormalizedUInt, X0, X1, X2
	173 Add S0, S0, S0
	174 Move S1, -1
	175 Add S0, S0, S1
	176 Move X20, [X31+32]
	177 Move X19, [X31+40]
	178 Move X22, [X31+16]
	179 Move X21, [X31+24]
	180 Move X30, [X31+48]
	181 Return V0
	182 Call 0x1C17DFC
	183 Move X0, [X21]
	184 Move X21, X20
	185 Move W8, [X0+224]
	186 Add X21, X21, 12
	187 Move W22, [X21]
	188 Compare W8, 0
	189 JumpIfNotEqual {191}
	190 Call 0x1C17DFC
	191 Move W1, [X20+8]
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move W2, [X21]
	194 Move X0, X19
	195 Move X20, [X31+32]
	196 Move X19, [X31+40]
	197 Move X22, [X31+16]
	198 Move X21, [X31+24]
	199 Move X3, X31
	200 Move X30, [X31+48]
	201 Call MemoryHelpers.ReadMultipleBitsAsNormalizedUInt, X0, X1, X2
	202 Return V0
	203 Move S0, -1
	204 Move X0, 0x911000
	205 Move X0, [X0+3352]
	206 Call 0x1C17D08
	207 Call 0x19913D0
	208 Move W8, [X20]
	209 Move X0, 0x911000
	210 Move [X31+8], W8
	211 Move X0, [X0+3368]
	212 Call 0x1C17D08
	213 Add X1, X31, 8
	214 Call 0x1C17E04
	215 Move X19, X0
	216 Move X0, 0x940000
	217 Move X0, [X0+1288]
	218 Call 0x1C17D08
	219 Move X1, X19
	220 Move X2, X31
	221 Call String.Format, X0, X1
	222 Move X19, X0
	223 Move X0, 0x8E9000
	224 Move X0, [X0+1456]
	225 Call 0x1C17D08
	226 Call 0x1C17F10
	227 Move X1, X19
	228 Move X2, X31
	229 Move X20, X0
	230 Call InvalidOperationException..ctor, X0, X1
	231 Move X0, 0x940000
	232 Move X0, [X0+1296]
	233 Call 0x1C17D08
	234 Move X1, X0
	235 Move X0, X20
	236 Call 0x1C17DEC

Method: System.Void WriteFloat(System.Void* statePtr, System.Single value)

Disassembly:
	0x0380B788 CMP W8, W9
	0x0380B78C B.NE 0x380BA80
	0x00000000 INVALID
	0x0380B794 FMOV S1, 0.5
	0x0380B798 FMUL S0, S0, S1
	0x0380B79C FADD S0, S0, S1
	0x0380B7A0 FCMP S0, 0x0
	0x0380B7A4 B.LS 0x380B970
	0x0380B7A8 FMOV S1, 1
	0x0380B7AC FCMP S0, S1
	0x0380B7B0 B.GE 0x380BA30
	0x0380B7B4 ADRP X8, 0xFFFFFFFFFD2E2000
	0x0380B7B8 LDR V1, [X8 + 0x508]
	0x0380B7BC MOVZ X8, 0xC0600000
	0x0380B7C0 FCVT S0, S0
	0x0380B7C4 MOVZ X9, 0x7FF00000
	0x0380B7C8 FMOV D2, X8
	0x0380B7CC FMUL D0, D0, D1
	0x0380B7D0 FMOV D3, X9
	0x0380B7D4 FADD D0, D0, D2
	0x0380B7D8 FCVTZS W8, D0
	0x0380B7DC FCMP D0, D3
	0x0380B7E0 CSEL W8, W31, W8, EQ
	0x0380B7E4 B 0x380BA3C
	0x0380B7E8 MOVZ W9, 0x5420
	0x0380B7EC MOVK W9, 0x42490000
	0x0380B7F0 CMP W8, W9
	0x0380B7F4 B.EQ 0x380B874
	0x0380B7F8 MOVZ W9, 0x5445
	0x0380B7FC MOVK W9, 0x42590000
	0x0380B800 CMP W8, W9
	0x0380B804 B.NE 0x380BA80
	0x00000000 INVALID
	0x0380B80C FCMP S0, 0x0
	0x0380B810 B.LS 0x380B978
	0x0380B814 FMOV S1, 1
	0x0380B818 FCMP S0, S1
	0x0380B81C B.GE 0x380BA38
	0x0380B820 ADRP X8, 0xFFFFFFFFFD2E2000
	0x0380B824 LDR V1, [X8 + 0x508]
	0x0380B828 FCVT S0, S0
	0x0380B82C FMOV D2, X31
	0x0380B830 FMUL D0, D0, D1
	0x0380B834 FADD D0, D0, D2
	0x0380B838 FCVTZS W8, D0
	0x0380B83C FCVTZU W9, D0
	0x0380B840 FCMP D0, 0x0
	0x0380B844 CSEL W8, W8, W9, MI
	0x0380B848 B 0x380BA3C
	0x0380B84C LDR X0, [X21]
	0x0380B850 LDR W8, [X0 + 0xE0]
	0x0380B854 CBZ W8, 0x380B980
	0x0380B858 LDR W8, [X20 + 0xC]!
	0x0380B85C LDUR W1, [X20 - 0x4]
	0x0380B860 CMP W8, 0x1
	0x0380B864 MOV X21, X20
	0x0380B868 B.NE 0x380B9A8
	0x0380B86C FCMP D8, 0x0
	0x0380B870 B 0x380B89C
	0x0380B874 LDR X0, [X21]
	0x0380B878 LDR W8, [X0 + 0xE0]
	0x0380B87C CBZ W8, 0x380B9C0
	0x0380B880 LDR W8, [X20 + 0xC]!
	0x0380B884 LDUR W1, [X20 - 0x4]
	0x0380B888 CMP W8, 0x1
	0x0380B88C MOV X21, X20
	0x0380B890 B.NE 0x380B9E8
	0x0380B894 FMOV D0, 0.5
	0x0380B898 FCMP D8, D0
	0x0380B89C MOV X0, X19
	0x0380B8A0 LDP X20, X19, [X31 + 0x30]
	0x0380B8A4 LDP X22, X21, [X31 + 0x20]
	0x0380B8A8 LDR X30, [X31 + 0x18]
	0x0380B8AC LDR V8, [X31 + 0x10]
	0x0380B8B0 CSET W2, GE
	0x0380B8B4 MOV X3, X31
	0x0380B8B8 ADD X31, X31, 0x40
	0x0380B8BC B 0x3762844
	0x00000000 INVALID
	0x0380B8C4 FMOV S1, 0.5
	0x0380B8C8 FMUL S0, S0, S1
	0x0380B8CC FADD S0, S0, S1
	0x0380B8D0 FCMP S0, 0x0
	0x0380B8D4 B.LS 0x380BA20
	0x0380B8D8 FMOV S1, 1
	0x0380B8DC FCMP S0, S1
	0x0380B8E0 B.GE 0x380BA54
	0x0380B8E4 ADRP X8, 0xFFFFFFFFFD2E3000
	0x0380B8E8 LDR V1, [X8 + 0x168]
	0x0380B8EC MOVZ X8, 0xC0E00000
	0x0380B8F0 FCVT S0, S0
	0x0380B8F4 MOVZ X9, 0x7FF00000
	0x0380B8F8 FMOV D2, X8
	0x0380B8FC FMUL D0, D0, D1
	0x0380B900 FMOV D3, X9
	0x0380B904 FADD D0, D0, D2
	0x0380B908 FCVTZS W8, D0
	0x0380B90C FCMP D0, D3
	0x0380B910 CSEL W8, W31, W8, EQ
	0x0380B914 B 0x380BA58
	0x00000000 INVALID
	0x0380B91C FCMP S0, 0x0
	0x0380B920 B.LS 0x380BA28
	0x0380B924 FMOV S1, 1
	0x0380B928 FCMP S0, S1
	0x0380B92C B.GE 0x380BA60
	0x0380B930 ADRP X8, 0xFFFFFFFFFD2E2000
	0x0380B934 LDR V1, [X8 + 0x718]
	0x0380B938 FCVT S0, S0
	0x0380B93C FMOV D2, X31
	0x0380B940 FMUL D0, D0, D1
	0x0380B944 FADD D0, D0, D2
	0x0380B948 FCVTZS W8, D0
	0x0380B94C FCVTZU W9, D0
	0x0380B950 FCMP D0, 0x0
	0x0380B954 CSEL W8, W8, W9, MI
	0x0380B958 B 0x380BA64
	0x0380B95C STR D8, [X19]
	0x0380B960 B 0x380BA68
	0x00000000 INVALID
	0x0380B968 STR S0, [X19]
	0x0380B96C B 0x380BA68
	0x0380B970 MOVZ W8, 0x80
	0x0380B974 B 0x380BA3C
	0x0380B978 MOV W8, W31
	0x0380B97C B 0x380BA3C
	0x0380B980 BL 0x1C16DFC
	0x0380B984 LDR X0, [X21]
	0x0380B988 MOV X21, X20
	0x0380B98C LDR W8, [X0 + 0xE0]
	0x0380B990 LDR W22, [X21 + 0xC]!
	0x0380B994 CBNZ W8, 0x380B99C
	0x0380B998 BL 0x1C16DFC
	0x0380B99C LDR W1, [X20 + 0x8]
	0x0380B9A0 CMP W22, 0x1
	0x0380B9A4 B.EQ 0x380B86C
	0x0380B9A8 LDR W2, [X21]
	0x00000000 INVALID
	0x0380B9B0 FMOV S1, 0.5
	0x0380B9B4 FMUL S0, S0, S1
	0x0380B9B8 FADD S0, S0, S1
	0x0380B9BC B 0x380B9F0
	0x0380B9C0 BL 0x1C16DFC
	0x0380B9C4 LDR X0, [X21]
	0x0380B9C8 MOV X21, X20
	0x0380B9CC LDR W8, [X0 + 0xE0]
	0x0380B9D0 LDR W22, [X21 + 0xC]!
	0x0380B9D4 CBNZ W8, 0x380B9DC
	0x0380B9D8 BL 0x1C16DFC
	0x0380B9DC LDR W1, [X20 + 0x8]
	0x0380B9E0 CMP W22, 0x1
	0x0380B9E4 B.EQ 0x380B894
	0x0380B9E8 LDR W2, [X21]
	0x00000000 INVALID
	0x0380B9F0 MOV X0, X19
	0x0380B9F4 LDP X20, X19, [X31 + 0x30]
	0x0380B9F8 LDP X22, X21, [X31 + 0x20]
	0x0380B9FC LDR X30, [X31 + 0x18]
	0x0380BA00 LDR V8, [X31 + 0x10]
	0x0380BA04 MOV X3, X31
	0x0380BA08 ADD X31, X31, 0x40
	0x0380BA0C B 0x3762CB0
	0x0380BA10 MOV W8, W31
	0x0380BA14 B 0x380BA58
	0x0380BA18 MOVZ W8, 0x80000000
	0x0380BA1C B 0x380BA64
	0x0380BA20 MOVZ W8, 0x8000
	0x0380BA24 B 0x380BA58
	0x0380BA28 MOV W8, W31
	0x0380BA2C B 0x380BA64
	0x0380BA30 MOVZ W8, 0x7F
	0x0380BA34 B 0x380BA3C
	0x0380BA38 MOVZ W8, 0xFF
	0x0380BA3C STRB W8, [X19]
	0x0380BA40 B 0x380BA68
	0x0380BA44 MOVZ W8, 0xFFFF
	0x0380BA48 B 0x380BA58
	0x0380BA4C MOVN W8, 0x80000000
	0x0380BA50 B 0x380BA64
	0x0380BA54 MOVZ W8, 0x7FFF
	0x0380BA58 STRH W8, [X19]
	0x0380BA5C B 0x380BA68
	0x0380BA60 MOVN W8, 0x0
	0x0380BA64 STR W8, [X19]
	0x0380BA68 LDP X20, X19, [X31 + 0x30]
	0x0380BA6C LDP X22, X21, [X31 + 0x20]
	0x0380BA70 LDR X30, [X31 + 0x18]
	0x0380BA74 LDR V8, [X31 + 0x10]
	0x0380BA78 ADD X31, X31, 0x40
	0x0380BA7C RET
	0x0380BA80 ADRP X0, 0x910000
	0x0380BA84 LDR X0, [X0 + 0xD18]
	0x0380BA88 BL 0x1C16D08
	0x0380BA8C BL 0x19903D0
	0x0380BA90 LDR W8, [X20]
	0x0380BA94 ADRP X0, 0x910000
	0x0380BA98 STR W8, [X31 + 0x8]
	0x0380BA9C LDR X0, [X0 + 0xD28]
	0x0380BAA0 BL 0x1C16D08
	0x0380BAA4 ADD X1, X31, 0x8
	0x0380BAA8 BL 0x1C16E04
	0x0380BAAC MOV X19, X0
	0x0380BAB0 ADRP X0, 0x93F000
	0x0380BAB4 LDR X0, [X0 + 0x508]
	0x0380BAB8 BL 0x1C16D08
	0x0380BABC MOV X1, X19
	0x0380BAC0 MOV X2, X31
	0x0380BAC4 BL 0x321EFD0
	0x0380BAC8 MOV X19, X0
	0x0380BACC ADRP X0, 0x8E8000
	0x0380BAD0 LDR X0, [X0 + 0x5B0]
	0x0380BAD4 BL 0x1C16D08
	0x0380BAD8 BL 0x1C16F10
	0x0380BADC MOV X1, X19
	0x0380BAE0 MOV X2, X31
	0x0380BAE4 MOV X20, X0
	0x0380BAE8 BL 0x337DF1C
	0x0380BAEC ADRP X0, 0x93F000
	0x0380BAF0 LDR X0, [X0 + 0x530]
	0x0380BAF4 BL 0x1C16D08
	0x0380BAF8 MOV X1, X0
	0x0380BAFC MOV X0, X20
	0x0380BB00 BL 0x1C16DEC
	0x0380BB04 SUB X31, X31, 0x50
	0x0380BB08 STP X30, X23, [X31 + 0x20]
	0x0380BB0C STP X22, X21, [X31 + 0x30]
	0x0380BB10 STP X20, X19, [X31 + 0x40]
	0x0380BB14 ADRP X23, 0xBD6000
	0x0380BB18 STP X2, X3, [X31 + 0x10]
	0x0380BB1C ADRP X22, 0x910000
	0x0380BB20 LDRB W8, [X23 + 0x479]
	0x0380BB24 LDR X22, [X22 + 0xD18]
	0x0380BB28 MOV X21, X2
	0x0380BB2C MOV X19, X1
	0x0380BB30 MOV X20, X0
	0x0380BB34 TBNZ X8, 0x0, 0x380BB4C
	0x0380BB38 ADRP X0, 0x910000
	0x0380BB3C LDR X0, [X0 + 0xD18]
	0x0380BB40 BL 0x1C16CF4
	0x0380BB44 MOVZ W8, 0x1
	0x0380BB48 STRB W8, [X23 + 0x479]
	0x0380BB4C LDR X0, [X22]
	0x0380BB50 LDR W8, [X0 + 0xE0]
	0x0380BB54 CBNZ W8, 0x380BB5C
	0x0380BB58 BL 0x1C16DFC
	0x0380BB5C LDP W8, W9, [X20]
	0x0380BB60 MOVZ W10, 0x5420
	0x0380BB64 SXTW X9, W9
	0x0380BB68 MOVK W10, 0x494E0000
	0x0380BB6C CMP W8, W10
	0x0380BB70 ADD X19, X9, X19
	0x0380BB74 B.LE 0x380BBCC
	0x0380BB78 MOVZ W9, 0x5954
	0x0380BB7C MOVK W9, 0x53420000
	0x0380BB80 CMP W8, W9
	0x0380BB84 B.LE 0x380BC10
	0x0380BB88 MOVZ W9, 0x5254
	0x0380BB8C MOVK W9, 0x53480000
	0x0380BB90 CMP W8, W9
	0x0380BB94 B.EQ 0x380BCDC
	0x0380BB98 MOVZ W9, 0x4E54
	0x0380BB9C MOVK W9, 0x55490000
	0x0380BBA0 CMP W8, W9
	0x0380BBA4 B.EQ 0x380BCF4
	0x0380BBA8 MOVZ W9, 0x4854
	0x0380BBAC MOVK W9, 0x55530000
	0x0380BBB0 CMP W8, W9
	0x0380BBB4 B.NE 0x380BDF4
	0x0380BBB8 ADD X0, X31, 0x10
	0x0380BBBC MOV X1, X31
	0x0380BBC0 MOV X2, X31
	0x0380BBC4 BL 0x3766B20
	0x0380BBC8 B 0x380BCEC
	0x0380BBCC MOVZ W9, 0x5445
	0x0380BBD0 MOVK W9, 0x42590000
	0x0380BBD4 CMP W8, W9
	0x0380BBD8 B.LE 0x380BC44
	0x0380BBDC MOVZ W9, 0x5420
	0x0380BBE0 MOVK W9, 0x464C0000
	0x0380BBE4 CMP W8, W9
	0x0380BBE8 B.EQ 0x380BC7C
	0x0380BBEC MOVZ W9, 0x5420
	0x0380BBF0 MOVK W9, 0x494E0000
	0x0380BBF4 CMP W8, W9
	0x0380BBF8 B.NE 0x380BDF4
	0x0380BBFC ADD X0, X31, 0x10
	0x0380BC00 MOV X1, X31
	0x0380BC04 MOV X2, X31
	0x0380BC08 BL 0x3765B34
	0x0380BC0C B 0x380BD04
	0x0380BC10 MOVZ W9, 0x4954
	0x0380BC14 MOVK W9, 0x53420000
	0x0380BC18 CMP W8, W9
	0x0380BC1C B.EQ 0x380BC94
	0x0380BC20 MOVZ W9, 0x5954
	0x0380BC24 MOVK W9, 0x53420000
	0x0380BC28 CMP W8, W9
	0x0380BC2C B.NE 0x380BDF4
	0x0380BC30 ADD X0, X31, 0x10
	0x0380BC34 MOV X1, X31
	0x0380BC38 MOV X2, X31
	0x0380BC3C BL 0x3765AEC
	0x0380BC40 B 0x380BC74
	0x0380BC44 MOVZ W9, 0x5420
	0x0380BC48 MOVK W9, 0x42490000
	0x0380BC4C CMP W8, W9
	0x0380BC50 B.EQ 0x380BCB8
	0x0380BC54 MOVZ W9, 0x5445
	0x0380BC58 MOVK W9, 0x42590000
	0x0380BC5C CMP W8, W9
	0x0380BC60 B.NE 0x380BDF4
	0x0380BC64 ADD X0, X31, 0x10
	0x0380BC68 MOV X1, X31
	0x0380BC6C MOV X2, X31
	0x0380BC70 BL 0x3765AC8
	0x0380BC74 STRB W0, [X19]
	0x0380BC78 B 0x380BDE0
	0x0380BC7C ADD X0, X31, 0x10
	0x0380BC80 MOV X1, X31
	0x0380BC84 MOV X2, X31
	0x0380BC88 BL 0x3758810
	0x0380BC8C STR S0, [X19]
	0x0380BC90 B 0x380BDE0
	0x0380BC94 LDR X0, [X22]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xBD7000
	009 Move X21, 0x911000
	010 Move W8, [X22+1141]
	011 Move X21, [X21+3352]
	012 Move V8, V0
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x911000
	020 Move X0, [X0+3352]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1141], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move W8, [X20]
	030 Move W9, [X20+4]
	031 Move W10, 0x5420
	032 Move X9, W9
	033 NotImplemented "Instruction MOVK not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Add X19, X9, X19
	036 Move W9, 0x5954
	037 NotImplemented "Instruction MOVK not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W9, 0x5254
	040 NotImplemented "Instruction MOVK not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W9, 0x4E54
	043 NotImplemented "Instruction MOVK not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W9, 0x4854
	046 NotImplemented "Instruction MOVK not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction FCMP not yet implemented."
	049 Move S0, 1
	050 NotImplemented "Instruction FCMP not yet implemented."
	051 Move X8, -47300608
	052 Move V0, [X8+360]
	053 NotImplemented "Instruction FCVT not yet implemented."
	054 Move D2, X31
	055 Multiply D0, D1, D0
	056 Add D0, D0, D2
	057 NotImplemented "Instruction FCVTZS not yet implemented."
	058 NotImplemented "Instruction FCVTZU not yet implemented."
	059 NotImplemented "Instruction FCMP not yet implemented."
	060 NotImplemented "Instruction CSEL not yet implemented."
	061 Move W9, 0x5445
	062 NotImplemented "Instruction MOVK not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move W9, 0x4C20
	065 NotImplemented "Instruction MOVK not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W9, 0x5420
	068 NotImplemented "Instruction MOVK not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move W9, 0x5420
	071 NotImplemented "Instruction MOVK not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move S0, 0.5
	074 Multiply S1, S8, S0
	075 Add S0, S1, S0
	076 NotImplemented "Instruction FCMP not yet implemented."
	077 Move S1, 1
	078 NotImplemented "Instruction FCMP not yet implemented."
	079 Move X8, -47304704
	080 Move V1, [X8+1816]
	081 Move X8, 0xC1E00000
	082 NotImplemented "Instruction FCVT not yet implemented."
	083 Move X9, 0x7FF00000
	084 Move D2, X8
	085 Multiply D0, D0, D1
	086 Move D3, X9
	087 Add D0, D0, D2
	088 NotImplemented "Instruction FCVTZS not yet implemented."
	089 NotImplemented "Instruction FCMP not yet implemented."
	090 Move W9, 0x80000000
	091 NotImplemented "Instruction CSEL not yet implemented."
	092 Move W9, 0x4954
	093 NotImplemented "Instruction MOVK not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move W9, 0x5954
	096 NotImplemented "Instruction MOVK not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move S0, 0.5
	099 Multiply S1, S8, S0
	100 Add S0, S1, S0
	101 NotImplemented "Instruction FCMP not yet implemented."
	102 Move S1, 1
	103 NotImplemented "Instruction FCMP not yet implemented."
	104 Move X8, -47304704
	105 Move V1, [X8+1288]
	106 Move X8, 0xC0600000
	107 NotImplemented "Instruction FCVT not yet implemented."
	108 Move X9, 0x7FF00000
	109 Move D2, X8
	110 Multiply D0, D0, D1
	111 Move D3, X9
	112 Add D0, D0, D2
	113 NotImplemented "Instruction FCVTZS not yet implemented."
	114 NotImplemented "Instruction FCMP not yet implemented."
	115 NotImplemented "Instruction CSEL not yet implemented."
	116 Move W9, 0x5420
	117 NotImplemented "Instruction MOVK not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move W9, 0x5445
	120 NotImplemented "Instruction MOVK not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 NotImplemented "Instruction FCMP not yet implemented."
	123 Move S0, 1
	124 NotImplemented "Instruction FCMP not yet implemented."
	125 Move X8, -47304704
	126 Move V0, [X8+1288]
	127 NotImplemented "Instruction FCVT not yet implemented."
	128 Move D2, X31
	129 Multiply D0, D1, D0
	130 Add D0, D0, D2
	131 NotImplemented "Instruction FCVTZS not yet implemented."
	132 NotImplemented "Instruction FCVTZU not yet implemented."
	133 NotImplemented "Instruction FCMP not yet implemented."
	134 NotImplemented "Instruction CSEL not yet implemented."
	135 Move X0, [X21]
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfEqual {204}
	139 Add X20, X20, 12
	140 Move W8, [X20]
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move X21, X20
	144 NotImplemented "Instruction FCMP not yet implemented."
	145 Move X0, [X21]
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfEqual {220}
	149 Add X20, X20, 12
	150 Move W8, [X20]
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X21, X20
	154 Move S0, 0.5
	155 NotImplemented "Instruction FCMP not yet implemented."
	156 Move X0, X19
	157 Move X20, [X31+48]
	158 Move X19, [X31+56]
	159 Move X22, [X31+32]
	160 Move X21, [X31+40]
	161 Move X30, [X31+24]
	162 Move V8, [X31+16]
	163 NotImplemented "Instruction CSET not yet implemented."
	164 Move X3, X31
	165 Add X31, X31, 64
	166 Call MemoryHelpers.WriteSingleBit, X0, X1, X2
	167 Return 
	168 Move S0, 0.5
	169 Multiply S1, S8, S0
	170 Add S0, S1, S0
	171 NotImplemented "Instruction FCMP not yet implemented."
	172 Move S1, 1
	173 NotImplemented "Instruction FCMP not yet implemented."
	174 Move X8, -47300608
	175 Move V1, [X8+360]
	176 Move X8, 0xC0E00000
	177 NotImplemented "Instruction FCVT not yet implemented."
	178 Move X9, 0x7FF00000
	179 Move D2, X8
	180 Multiply D0, D0, D1
	181 Move D3, X9
	182 Add D0, D0, D2
	183 NotImplemented "Instruction FCVTZS not yet implemented."
	184 NotImplemented "Instruction FCMP not yet implemented."
	185 NotImplemented "Instruction CSEL not yet implemented."
	186 NotImplemented "Instruction FCMP not yet implemented."
	187 Move S0, 1
	188 NotImplemented "Instruction FCMP not yet implemented."
	189 Move X8, -47304704
	190 Move V0, [X8+1816]
	191 NotImplemented "Instruction FCVT not yet implemented."
	192 Move D2, X31
	193 Multiply D0, D1, D0
	194 Add D0, D0, D2
	195 NotImplemented "Instruction FCVTZS not yet implemented."
	196 NotImplemented "Instruction FCVTZU not yet implemented."
	197 NotImplemented "Instruction FCMP not yet implemented."
	198 NotImplemented "Instruction CSEL not yet implemented."
	199 NotImplemented "Instruction FCVT not yet implemented."
	200 Move [X19], D0
	201 Move [X19], S8
	202 Move W8, 128
	203 Move W8, W31
	204 Call 0x1C17DFC
	205 Move X0, [X21]
	206 Move X21, X20
	207 Move W8, [X0+224]
	208 Add X21, X21, 12
	209 Move W22, [X21]
	210 Compare W8, 0
	211 JumpIfNotEqual {213}
	212 Call 0x1C17DFC
	213 Move W1, [X20+8]
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move W2, [X21]
	216 Move S0, 0.5
	217 Multiply S1, S8, S0
	218 Add S0, S1, S0
	219 Move X0, X19
	220 Call 0x1C17DFC
	221 Move X0, [X21]
	222 Move X21, X20
	223 Move W8, [X0+224]
	224 Add X21, X21, 12
	225 Move W22, [X21]
	226 Compare W8, 0
	227 JumpIfNotEqual {229}
	228 Call 0x1C17DFC
	229 Move W1, [X20+8]
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Move W2, [X21]
	232 Move X0, X19
	233 Move V0, V8
	234 Move X20, [X31+48]
	235 Move X19, [X31+56]
	236 Move X22, [X31+32]
	237 Move X21, [X31+40]
	238 Move X30, [X31+24]
	239 Move V8, [X31+16]
	240 Move X3, X31
	241 Add X31, X31, 64
	242 Call MemoryHelpers.WriteNormalizedUIntAsMultipleBits, X0, X1, X2, V0
	243 Return 
	244 Move W8, W31
	245 Move W8, 0x80000000
	246 Move W8, 0x8000
	247 Move W8, W31
	248 Move W8, 127
	249 Move W8, 255
	250 Move [X19], W8
	251 Move W8, 0xFFFF
	252 Move TEMP, 0x80000000
	253 Not TEMP
	254 Move W8, TEMP
	255 Move W8, 0x7FFF
	256 NotImplemented "Instruction STRH not yet implemented."
	257 Move TEMP, 0
	258 Not TEMP
	259 Move W8, TEMP
	260 Move [X19], W8
	261 Move X20, [X31+48]
	262 Move X19, [X31+56]
	263 Move X22, [X31+32]
	264 Move X21, [X31+40]
	265 Move X30, [X31+24]
	266 Move V8, [X31+16]
	267 Add X31, X31, 64
	268 Return 
	269 Move X0, 0x911000
	270 Move X0, [X0+3352]
	271 Call 0x1C17D08
	272 Call 0x19913D0
	273 Move W8, [X20]
	274 Move X0, 0x911000
	275 Move [X31+8], W8
	276 Move X0, [X0+3368]
	277 Call 0x1C17D08
	278 Add X1, X31, 8
	279 Call 0x1C17E04
	280 Move X19, X0
	281 Move X0, 0x940000
	282 Move X0, [X0+1288]
	283 Call 0x1C17D08
	284 Move X1, X19
	285 Move X2, X31
	286 Call String.Format, X0, X1
	287 Move X19, X0
	288 Move X0, 0x8E9000
	289 Move X0, [X0+2000]
	290 Call 0x1C17D08
	291 Call 0x1C17F10
	292 Move X1, X19
	293 Move X2, X31
	294 Move X20, X0
	295 Call Exception..ctor, X0, X1
	296 Move X0, 0x940000
	297 Move X0, [X0+1304]
	298 Call 0x1C17D08
	299 Move X1, X0
	300 Move X0, X20
	301 Call 0x1C17DEC

Method: UnityEngine.InputSystem.Utilities.PrimitiveValue FloatToPrimitiveValue(System.Single value)

Disassembly:
	0x0380BC98 LDR W8, [X0 + 0xE0]
	0x0380BC9C CBZ W8, 0x380BD0C
	0x0380BCA0 LDR W8, [X20 + 0xC]!
	0x0380BCA4 LDUR W21, [X20 - 0x4]
	0x0380BCA8 CMP W8, 0x1
	0x0380BCAC MOV X22, X20
	0x0380BCB0 B.NE 0x380BD34
	0x0380BCB4 B 0x380BD8C
	0x0380BCB8 LDR X0, [X22]
	0x0380BCBC LDR W8, [X0 + 0xE0]
	0x0380BCC0 CBZ W8, 0x380BD64
	0x0380BCC4 LDR W8, [X20 + 0xC]!
	0x0380BCC8 LDUR W21, [X20 - 0x4]
	0x0380BCCC CMP W8, 0x1
	0x0380BCD0 MOV X22, X20
	0x0380BCD4 B.EQ 0x380BD8C
	0x0380BCD8 B 0x380BDB4
	0x0380BCDC ADD X0, X31, 0x10
	0x0380BCE0 MOV X1, X31
	0x0380BCE4 MOV X2, X31
	0x0380BCE8 BL 0x3765B10
	0x0380BCEC STRH W0, [X19]
	0x0380BCF0 B 0x380BDE0
	0x0380BCF4 ADD X0, X31, 0x10
	0x0380BCF8 MOV X1, X31
	0x0380BCFC MOV X2, X31
	0x0380BD00 BL 0x3766B30
	0x0380BD04 STR W0, [X19]
	0x0380BD08 B 0x380BDE0
	0x0380BD0C BL 0x1C16DFC
	0x0380BD10 LDR X0, [X22]
	0x0380BD14 MOV X22, X20
	0x0380BD18 LDR W8, [X0 + 0xE0]
	0x0380BD1C LDR W23, [X22 + 0xC]!
	0x0380BD20 CBNZ W8, 0x380BD28
	0x0380BD24 BL 0x1C16DFC
	0x0380BD28 LDR W21, [X20 + 0x8]
	0x0380BD2C CMP W23, 0x1
	0x0380BD30 B.EQ 0x380BD8C
	0x0380BD34 LDR W20, [X22]
	0x0380BD38 ADD X0, X31, 0x10
	0x0380BD3C MOV X1, X31
	0x0380BD40 MOV X2, X31
	0x0380BD44 BL 0x3765B34
	0x0380BD48 MOV W3, W0
	0x0380BD4C MOV X0, X19
	0x0380BD50 MOV W1, W21
	0x0380BD54 MOV W2, W20
	0x0380BD58 MOV X4, X31
	0x0380BD5C BL 0x3762C54
	0x0380BD60 B 0x380BDE0
	0x0380BD64 BL 0x1C16DFC
	0x0380BD68 LDR X0, [X22]
	0x0380BD6C MOV X22, X20
	0x0380BD70 LDR W8, [X0 + 0xE0]
	0x0380BD74 LDR W23, [X22 + 0xC]!
	0x0380BD78 CBNZ W8, 0x380BD80
	0x0380BD7C BL 0x1C16DFC
	0x0380BD80 LDR W21, [X20 + 0x8]
	0x0380BD84 CMP W23, 0x1
	0x0380BD88 B.NE 0x380BDB4
	0x0380BD8C ADD X0, X31, 0x10
	0x0380BD90 MOV X1, X31
	0x0380BD94 MOV X2, X31
	0x0380BD98 BL 0x3765924
	0x0380BD9C AND W2, W0, 0x1
	0x0380BDA0 MOV X0, X19
	0x0380BDA4 MOV W1, W21
	0x0380BDA8 MOV X3, X31
	0x0380BDAC BL 0x3762844
	0x0380BDB0 B 0x380BDE0
	0x0380BDB4 LDR W20, [X22]
	0x0380BDB8 ADD X0, X31, 0x10
	0x0380BDBC MOV X1, X31
	0x0380BDC0 MOV X2, X31
	0x0380BDC4 BL 0x3766B30
	0x0380BDC8 MOV W3, W0
	0x0380BDCC MOV X0, X19
	0x0380BDD0 MOV W1, W21
	0x0380BDD4 MOV W2, W20
	0x0380BDD8 MOV X4, X31
	0x0380BDDC BL 0x3762A84
	0x0380BDE0 LDP X20, X19, [X31 + 0x40]
	0x0380BDE4 LDP X22, X21, [X31 + 0x30]
	0x0380BDE8 LDP X30, X23, [X31 + 0x20]
	0x0380BDEC ADD X31, X31, 0x50
	0x0380BDF0 RET
	0x0380BDF4 STR W21, [X31 + 0xC]
	0x0380BDF8 ADRP X0, 0x93B000
	0x0380BDFC LDR X0, [X0 + 0x428]
	0x0380BE00 BL 0x1C16D08
	0x0380BE04 ADD X1, X31, 0xC
	0x0380BE08 BL 0x1C16E04
	0x0380BE0C MOV X19, X0
	0x0380BE10 ADRP X0, 0x910000
	0x0380BE14 LDR X0, [X0 + 0xD18]
	0x0380BE18 BL 0x1C16D08
	0x0380BE1C BL 0x19903D0
	0x0380BE20 LDR W8, [X20]
	0x0380BE24 ADRP X0, 0x910000
	0x0380BE28 STR W8, [X31 + 0x8]
	0x0380BE2C LDR X0, [X0 + 0xD28]
	0x0380BE30 BL 0x1C16D08
	0x0380BE34 ADD X1, X31, 0x8
	0x0380BE38 BL 0x1C16E04
	0x0380BE3C MOV X20, X0
	0x0380BE40 ADRP X0, 0x93F000
	0x0380BE44 LDR X0, [X0 + 0x538]
	0x0380BE48 BL 0x1C16D08
	0x0380BE4C MOV X1, X19
	0x0380BE50 MOV X2, X20
	0x0380BE54 MOV X3, X31
	0x0380BE58 BL 0x3227BD4
	0x0380BE5C MOV X19, X0
	0x0380BE60 ADRP X0, 0x8F1000
	0x0380BE64 LDR X0, [X0 + 0x758]
	0x0380BE68 BL 0x1C16D08
	0x0380BE6C BL 0x1C16F10
	0x0380BE70 MOV X1, X19
	0x0380BE74 MOV X2, X31
	0x0380BE78 MOV X20, X0
	0x0380BE7C BL 0x33802E4
	0x0380BE80 ADRP X0, 0x93F000
	0x0380BE84 LDR X0, [X0 + 0x540]
	0x0380BE88 BL 0x1C16D08
	0x0380BE8C MOV X1, X0
	0x0380BE90 MOV X0, X20
	0x0380BE94 BL 0x1C16DEC
	0x0380BE98 STP X30, X23, [X31 - 0x30]!
	0x0380BE9C STP X22, X21, [X31 + 0x10]
	0x0380BEA0 STP X20, X19, [X31 + 0x20]
	0x0380BEA4 ADRP X23, 0xBD6000
	0x0380BEA8 ADRP X22, 0x910000
	0x0380BEAC LDRB W8, [X23 + 0x47A]
	0x0380BEB0 LDR X22, [X22 + 0xD18]
	0x0380BEB4 MOV X21, X2
	0x0380BEB8 MOV X19, X1
	0x0380BEBC MOV X20, X0
	0x0380BEC0 TBNZ X8, 0x0, 0x380BED8
	0x0380BEC4 ADRP X0, 0x910000
	0x0380BEC8 LDR X0, [X0 + 0xD18]
	0x0380BECC BL 0x1C16CF4
	0x0380BED0 MOVZ W8, 0x1
	0x0380BED4 STRB W8, [X23 + 0x47A]
	0x0380BED8 LDR X0, [X22]
	0x0380BEDC LDR W8, [X0 + 0xE0]
	0x0380BEE0 CBNZ W8, 0x380BEE8
	0x0380BEE4 BL 0x1C16DFC
	0x0380BEE8 LDR W8, [X20 + 0x8]
	0x0380BEEC CBNZ W8, 0x380BF50
	0x0380BEF0 LDR X0, [X22]
	0x0380BEF4 LDR W8, [X0 + 0xE0]
	0x0380BEF8 CBNZ W8, 0x380BF00
	0x0380BEFC BL 0x1C16DFC
	0x0380BF00 LDRB W8, [X20 + 0xC]
	0x0380BF04 ANDS W31, W8, 0x7
	0x0380BF08 B.NE 0x380BF50
	0x0380BF0C LDR X0, [X22]
	0x0380BF10 LDR W8, [X0 + 0xE0]
	0x0380BF14 CBNZ W8, 0x380BF1C
	0x0380BF18 BL 0x1C16DFC
	0x0380BF1C LDR W22, [X20 + 0x4]
	0x0380BF20 MOV X0, X20
	0x0380BF24 ADD X21, X22, X21
	0x0380BF28 BL 0x3800B6C
	0x0380BF2C ADD X8, X22, X19
	0x0380BF30 MOV X1, X21
	0x0380BF34 LDP X20, X19, [X31 + 0x20]
	0x0380BF38 LDP X22, X21, [X31 + 0x10]
	0x0380BF3C MOV W2, W0
	0x0380BF40 MOV X0, X8
	0x0380BF44 MOV X3, X31
	0x0380BF48 LDP X30, X23, [X31], #0x30
	0x0380BF4C B 0x3BFF954
	0x0380BF50 ADRP X0, 0x8F1000
	0x0380BF54 LDR X0, [X0 + 0x758]
	0x0380BF58 BL 0x1C16D08
	0x0380BF5C BL 0x1C16F10
	0x0380BF60 MOV X19, X0
	0x0380BF64 ADRP X0, 0x93F000
	0x0380BF68 LDR X0, [X0 + 0x548]
	0x0380BF6C BL 0x1C16D08
	0x0380BF70 MOV X1, X0
	0x0380BF74 MOV X0, X19
	0x0380BF78 MOV X2, X31
	0x0380BF7C BL 0x33802E4
	0x0380BF80 ADRP X0, 0x93F000
	0x0380BF84 LDR X0, [X0 + 0x550]
	0x0380BF88 BL 0x1C16D08
	0x0380BF8C MOV X1, X0
	0x0380BF90 MOV X0, X19
	0x0380BF94 BL 0x1C16DEC
	0x0380BF98 SUB X31, X31, 0xC0
	0x0380BF9C STR X30, [X31 + 0xA0]
	0x0380BFA0 STP X20, X19, [X31 + 0xB0]
	0x0380BFA4 ADRP X20, 0xBD6000
	0x0380BFA8 ADRP X19, 0x910000
	0x0380BFAC LDRB W8, [X20 + 0x47B]
	0x0380BFB0 LDR X19, [X19 + 0xD18]
	0x0380BFB4 TBNZ X8, 0x0, 0x380BFCC
	0x0380BFB8 ADRP X0, 0x910000
	0x0380BFBC LDR X0, [X0 + 0xD18]
	0x0380BFC0 BL 0x1C16CF4
	0x0380BFC4 MOVZ W8, 0x1
	0x0380BFC8 STRB W8, [X20 + 0x47B]
	0x0380BFCC LDR X8, [X19]
	0x0380BFD0 ADD X0, X31, 0xA8
	0x0380BFD4 MOVZ W1, 0x42
	0x0380BFD8 MOVZ W2, 0x49
	0x0380BFDC LDR X8, [X8 + 0xB8]
	0x0380BFE0 MOVZ W3, 0x54
	0x0380BFE4 MOVZ W4, 0x20
	0x0380BFE8 MOV X5, X31
	0x0380BFEC STR W31, [X8]
	0x0380BFF0 STR W31, [X31 + 0xA8]
	0x0380BFF4 BL 0x375AA28
	0x0380BFF8 LDR X8, [X19]
	0x0380BFFC LDR W9, [X31 + 0xA8]
	0x0380C000 ADD X0, X31, 0x98
	0x0380C004 MOVZ W1, 0x53
	0x0380C008 LDR X8, [X8 + 0xB8]
	0x0380C00C MOVZ W2, 0x42
	0x0380C010 MOVZ W3, 0x49
	0x0380C014 MOVZ W4, 0x54
	0x0380C018 MOV X5, X31
	0x0380C01C STR W9, [X8 + 0x4]
	0x0380C020 STR W31, [X31 + 0x98]
	0x0380C024 BL 0x375AA28
	0x0380C028 LDR X8, [X19]
	0x0380C02C LDR W9, [X31 + 0x98]
	0x0380C030 ADD X0, X31, 0x90
	0x0380C034 MOVZ W1, 0x49
	0x0380C038 LDR X8, [X8 + 0xB8]
	0x0380C03C MOVZ W2, 0x4E
	0x0380C040 MOVZ W3, 0x54
	0x0380C044 MOVZ W4, 0x20
	0x0380C048 MOV X5, X31
	0x0380C04C STR W9, [X8 + 0x8]
	0x0380C050 STR W31, [X31 + 0x90]
	0x0380C054 BL 0x375AA28
	0x0380C058 LDR X8, [X19]
	0x0380C05C LDR W9, [X31 + 0x90]
	0x0380C060 ADD X0, X31, 0x88
	0x0380C064 MOVZ W1, 0x55
	0x0380C068 LDR X8, [X8 + 0xB8]
	0x0380C06C MOVZ W2, 0x49
	0x0380C070 MOVZ W3, 0x4E
	0x0380C074 MOVZ W4, 0x54
	0x0380C078 MOV X5, X31
	0x0380C07C STR W9, [X8 + 0xC]
	0x0380C080 STR W31, [X31 + 0x88]
	0x0380C084 BL 0x375AA28
	0x0380C088 LDR X8, [X19]
	0x0380C08C LDR W9, [X31 + 0x88]
	0x0380C090 ADD X0, X31, 0x80
	0x0380C094 MOVZ W1, 0x53
	0x0380C098 LDR X8, [X8 + 0xB8]
	0x0380C09C MOVZ W2, 0x48
	0x0380C0A0 MOVZ W3, 0x52
	0x0380C0A4 MOVZ W4, 0x54
	0x0380C0A8 MOV X5, X31
	0x0380C0AC STR W9, [X8 + 0x10]
	0x0380C0B0 STR W31, [X31 + 0x80]
	0x0380C0B4 BL 0x375AA28
	0x0380C0B8 LDR X8, [X19]
	0x0380C0BC LDR W9, [X31 + 0x80]
	0x0380C0C0 ADD X0, X31, 0x78
	0x0380C0C4 MOVZ W1, 0x55
	0x0380C0C8 LDR X8, [X8 + 0xB8]
	0x0380C0CC MOVZ W2, 0x53
	0x0380C0D0 MOVZ W3, 0x48
	0x0380C0D4 MOVZ W4, 0x54
	0x0380C0D8 MOV X5, X31
	0x0380C0DC STR W9, [X8 + 0x14]
	0x0380C0E0 STR W31, [X31 + 0x78]
	0x0380C0E4 BL 0x375AA28
	0x0380C0E8 LDR X8, [X19]
	0x0380C0EC LDR W9, [X31 + 0x78]
	0x0380C0F0 ADD X0, X31, 0x70
	0x0380C0F4 MOVZ W1, 0x42
	0x0380C0F8 LDR X8, [X8 + 0xB8]
	0x0380C0FC MOVZ W2, 0x59
	0x0380C100 MOVZ W3, 0x54
	0x0380C104 MOVZ W4, 0x45
	0x0380C108 MOV X5, X31
	0x0380C10C STR W9, [X8 + 0x18]
	0x0380C110 STR W31, [X31 + 0x70]
	0x0380C114 BL 0x375AA28
	0x0380C118 LDR X8, [X19]
	0x0380C11C LDR W9, [X31 + 0x70]
	0x0380C120 ADD X0, X31, 0x68
	0x0380C124 MOVZ W1, 0x53
	0x0380C128 LDR X8, [X8 + 0xB8]
	0x0380C12C MOVZ W2, 0x42
	0x0380C130 MOVZ W3, 0x59
	0x0380C134 MOVZ W4, 0x54
	0x0380C138 MOV X5, X31
	0x0380C13C STR W9, [X8 + 0x1C]
	0x0380C140 STR W31, [X31 + 0x68]
	0x0380C144 BL 0x375AA28
	0x0380C148 LDR X8, [X19]
	0x0380C14C LDR W9, [X31 + 0x68]
	0x0380C150 ADD X0, X31, 0x60
	0x0380C154 MOVZ W1, 0x4C
	0x0380C158 LDR X8, [X8 + 0xB8]
	0x0380C15C MOVZ W2, 0x4E
	0x0380C160 MOVZ W3, 0x47
	0x0380C164 MOVZ W4, 0x20
	0x0380C168 MOV X5, X31
	0x0380C16C STR W9, [X8 + 0x20]
	0x0380C170 STR W31, [X31 + 0x60]
	0x0380C174 BL 0x375AA28
	0x0380C178 LDR X8, [X19]
	0x0380C17C LDR W9, [X31 + 0x60]
	0x0380C180 ADD X0, X31, 0x58
	0x0380C184 MOVZ W1, 0x55
	0x0380C188 LDR X8, [X8 + 0xB8]
	0x0380C18C MOVZ W2, 0x4C
	0x0380C190 MOVZ W3, 0x4E
	0x0380C194 MOVZ W4, 0x47
	0x0380C198 MOV X5, X31
	0x0380C19C STR W9, [X8 + 0x24]
	0x0380C1A0 STR W31, [X31 + 0x58]
	0x0380C1A4 BL 0x375AA28
	0x0380C1A8 LDR X8, [X19]
	0x0380C1AC LDR W9, [X31 + 0x58]
	0x0380C1B0 ADD X0, X31, 0x50
	0x0380C1B4 MOVZ W1, 0x46
	0x0380C1B8 LDR X8, [X8 + 0xB8]
	0x0380C1BC MOVZ W2, 0x4C
	0x0380C1C0 MOVZ W3, 0x54
	0x0380C1C4 MOVZ W4, 0x20
	0x0380C1C8 MOV X5, X31
	0x0380C1CC STR W9, [X8 + 0x28]
	0x0380C1D0 STR W31, [X31 + 0x50]
	0x0380C1D4 BL 0x375AA28
	0x0380C1D8 LDR X8, [X19]
	0x0380C1DC LDR W9, [X31 + 0x50]
	0x0380C1E0 ADD X0, X31, 0x48
	0x0380C1E4 MOVZ W1, 0x44
	0x0380C1E8 LDR X8, [X8 + 0xB8]
	0x0380C1EC MOVZ W2, 0x42
	0x0380C1F0 MOVZ W3, 0x4C
	0x0380C1F4 MOVZ W4, 0x20

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xBD7000
	007 Move X20, 0x911000
	008 Move W8, [X21+1142]
	009 Move X20, [X20+3352]
	010 Move V8, V0
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x911000
	017 Move X0, [X0+3352]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1142], W8
	021 Move X0, [X20]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W8, [X19]
	027 Move W9, 0x5420
	028 NotImplemented "Instruction MOVK not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W9, 0x5954
	031 NotImplemented "Instruction MOVK not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W9, 0x5254
	034 NotImplemented "Instruction MOVK not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W9, 0x4E54
	037 NotImplemented "Instruction MOVK not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W9, 0x4854
	040 NotImplemented "Instruction MOVK not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction FCMP not yet implemented."
	043 Move S0, 1
	044 NotImplemented "Instruction FCMP not yet implemented."
	045 Move X8, -47300608
	046 Move V0, [X8+360]
	047 NotImplemented "Instruction FCVT not yet implemented."
	048 Move D2, X31
	049 Multiply D0, D1, D0
	050 Add D0, D0, D2
	051 NotImplemented "Instruction FCVTZS not yet implemented."
	052 NotImplemented "Instruction FCVTZU not yet implemented."
	053 NotImplemented "Instruction FCMP not yet implemented."
	054 NotImplemented "Instruction CSEL not yet implemented."
	055 Move W9, 0x5445
	056 NotImplemented "Instruction MOVK not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move W9, 0x4C20
	059 NotImplemented "Instruction MOVK not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move W9, 0x5420
	062 NotImplemented "Instruction MOVK not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move W9, 0x5420
	065 NotImplemented "Instruction MOVK not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move S0, 0.5
	068 Multiply S1, S8, S0
	069 Add S0, S1, S0
	070 NotImplemented "Instruction FCMP not yet implemented."
	071 Move S1, 1
	072 NotImplemented "Instruction FCMP not yet implemented."
	073 Move X8, -47304704
	074 Move V1, [X8+1816]
	075 Move X8, 0xC1E00000
	076 Move X9, 0x7FF00000
	077 NotImplemented "Instruction FCVT not yet implemented."
	078 Move D2, X8
	079 Move D3, X9
	080 Multiply D0, D0, D1
	081 Move W9, 0x4954
	082 NotImplemented "Instruction MOVK not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move W9, 0x5954
	085 NotImplemented "Instruction MOVK not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move S0, 0.5
	088 Multiply S1, S8, S0
	089 Add S0, S1, S0
	090 NotImplemented "Instruction FCMP not yet implemented."
	091 Move S1, 1
	092 NotImplemented "Instruction FCMP not yet implemented."
	093 Move X8, -47304704
	094 Move V1, [X8+1288]
	095 Move X8, 0xC0600000
	096 NotImplemented "Instruction FCVT not yet implemented."
	097 Move X9, 0x7FF00000
	098 Move D2, X8
	099 Multiply D0, D0, D1
	100 Move D3, X9
	101 Add D0, D0, D2
	102 NotImplemented "Instruction FCVTZS not yet implemented."
	103 NotImplemented "Instruction FCMP not yet implemented."
	104 NotImplemented "Instruction CSEL not yet implemented."
	105 Move W9, 0x5420
	106 NotImplemented "Instruction MOVK not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move W9, 0x5445
	109 NotImplemented "Instruction MOVK not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 NotImplemented "Instruction FCMP not yet implemented."
	112 Move S0, 1
	113 NotImplemented "Instruction FCMP not yet implemented."
	114 Move X8, -47304704
	115 Move V0, [X8+1288]
	116 NotImplemented "Instruction FCVT not yet implemented."
	117 Move D2, X31
	118 Multiply D0, D1, D0
	119 Add D0, D0, D2
	120 NotImplemented "Instruction FCVTZS not yet implemented."
	121 NotImplemented "Instruction FCVTZU not yet implemented."
	122 NotImplemented "Instruction FCMP not yet implemented."
	123 NotImplemented "Instruction CSEL not yet implemented."
	124 Move X20, [X31+32]
	125 Move X19, [X31+40]
	126 Move X30, [X31+16]
	127 Move X21, [X31+24]
	128 Move V0, V8
	129 Move X0, X31
	130 Move V8, [X31+48]
	131 Call PrimitiveValue.op_Implicit, V0
	132 Return X0
	133 Move X0, [X20]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Move W8, [X19+12]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 NotImplemented "Instruction FCMP not yet implemented."
	141 Move X0, [X20]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Move W8, [X19+12]
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move S0, 0.5
	149 NotImplemented "Instruction FCMP not yet implemented."
	150 Move X20, [X31+32]
	151 Move X19, [X31+40]
	152 Move X30, [X31+16]
	153 Move X21, [X31+24]
	154 NotImplemented "Instruction CSET not yet implemented."
	155 Move X1, X31
	156 Move V8, [X31+48]
	157 Call PrimitiveValue.op_Implicit, X0
	158 Return X0
	159 Move S0, 0.5
	160 Multiply S1, S8, S0
	161 Add S0, S1, S0
	162 NotImplemented "Instruction FCMP not yet implemented."
	163 Move S1, 1
	164 NotImplemented "Instruction FCMP not yet implemented."
	165 Move X8, -47300608
	166 Move V1, [X8+360]
	167 Move X8, 0xC0E00000
	168 NotImplemented "Instruction FCVT not yet implemented."
	169 Move X9, 0x7FF00000
	170 Move D2, X8
	171 Multiply D0, D0, D1
	172 Move D3, X9
	173 Add D0, D0, D2
	174 NotImplemented "Instruction FCVTZS not yet implemented."
	175 NotImplemented "Instruction FCMP not yet implemented."
	176 NotImplemented "Instruction CSEL not yet implemented."
	177 NotImplemented "Instruction FCMP not yet implemented."
	178 Move S0, 1
	179 NotImplemented "Instruction FCMP not yet implemented."
	180 Move X8, -47304704
	181 Move V0, [X8+1816]
	182 NotImplemented "Instruction FCVT not yet implemented."
	183 Move D2, X31
	184 Multiply D0, D1, D0
	185 Add D0, D0, D2
	186 NotImplemented "Instruction FCVTZS not yet implemented."
	187 NotImplemented "Instruction FCVTZU not yet implemented."
	188 NotImplemented "Instruction FCMP not yet implemented."
	189 NotImplemented "Instruction CSEL not yet implemented."
	190 Move W0, 128
	191 Move W0, W31
	192 Move X0, [X20]
	193 Move W9, [X0+224]
	194 Compare W9, 0
	195 JumpIfNotEqual {198}
	196 Call 0x1C17DFC
	197 Move W8, [X19+12]
	198 Subtract W8, W8, 1
	199 Move TEMP, 0
	200 Not TEMP
	201 Move X9, TEMP
	202 NotImplemented "Instruction FCMP not yet implemented."
	203 NotImplemented "Instruction LSLV not yet implemented."
	204 Move S0, 1
	205 NotImplemented "Instruction FCMP not yet implemented."
	206 NotImplemented "Instruction ORN not yet implemented."
	207 NotImplemented "Instruction SCVTF not yet implemented."
	208 NotImplemented "Instruction SCVTF not yet implemented."
	209 NotImplemented "Instruction FCVT not yet implemented."
	210 Move X8, 0x7FF00000
	211 Subtract D1, D1, D2
	212 Move D3, X8
	213 Multiply D0, D1, D0
	214 Add D0, D0, D2
	215 NotImplemented "Instruction FCVTZS not yet implemented."
	216 NotImplemented "Instruction FCMP not yet implemented."
	217 Move W9, 0x80000000
	218 NotImplemented "Instruction CSEL not yet implemented."
	219 Move X0, [X20]
	220 Move W9, [X0+224]
	221 Compare W9, 0
	222 JumpIfNotEqual {225}
	223 Call 0x1C17DFC
	224 Move W8, [X19+12]
	225 NotImplemented "Instruction FCMP not yet implemented."
	226 Move TEMP, 0
	227 Not TEMP
	228 Move X9, TEMP
	229 Move S0, 1
	230 NotImplemented "Instruction LSLV not yet implemented."
	231 NotImplemented "Instruction FCMP not yet implemented."
	232 NotImplemented "Instruction ORN not yet implemented."
	233 NotImplemented "Instruction FCVT not yet implemented."
	234 NotImplemented "Instruction UCVTF not yet implemented."
	235 Move D2, X31
	236 Multiply D0, D0, D1
	237 Add D0, D0, D2
	238 NotImplemented "Instruction FCVTZS not yet implemented."
	239 NotImplemented "Instruction FCVTZU not yet implemented."
	240 NotImplemented "Instruction FCMP not yet implemented."
	241 NotImplemented "Instruction CSEL not yet implemented."
	242 Move W0, W31
	243 Move W0, 0x80000000
	244 Move W0, 0x8000
	245 Move W0, W31
	246 Move W0, 127
	247 Move X20, [X31+32]
	248 Move X19, [X31+40]
	249 Move X30, [X31+16]
	250 Move X21, [X31+24]
	251 Move X1, X31
	252 Move V8, [X31+48]
	253 Call PrimitiveValue.op_Implicit, X0
	254 Return X0
	255 Move W0, 255
	256 Move X20, [X31+32]
	257 Move X19, [X31+40]
	258 Move X30, [X31+16]
	259 Move X21, [X31+24]
	260 Move X1, X31
	261 Move V8, [X31+48]
	262 Call PrimitiveValue.op_Implicit, X0
	263 Return X0
	264 Move W0, W8
	265 Move W0, W31
	266 Move W0, 0xFFFF
	267 Move X20, [X31+32]
	268 Move X19, [X31+40]
	269 Move X30, [X31+16]
	270 Move X21, [X31+24]
	271 Move X1, X31
	272 Move V8, [X31+48]
	273 Call PrimitiveValue.op_Implicit, X0
	274 Return X0
	275 Move TEMP, 0x80000000
	276 Not TEMP
	277 Move W0, TEMP
	278 Move X20, [X31+32]
	279 Move X19, [X31+40]
	280 Move X30, [X31+16]
	281 Move X21, [X31+24]
	282 Move X1, X31
	283 Move V8, [X31+48]
	284 Call PrimitiveValue.op_Implicit, X0
	285 Return X0
	286 Move W0, 0x7FFF
	287 Move X20, [X31+32]
	288 Move X19, [X31+40]
	289 Move X30, [X31+16]
	290 Move X21, [X31+24]
	291 Move X1, X31
	292 Move V8, [X31+48]
	293 Call PrimitiveValue.op_Implicit, X0
	294 Return X0
	295 Move TEMP, 0
	296 Not TEMP
	297 Move W0, TEMP
	298 Move X20, [X31+32]
	299 Move X19, [X31+40]
	300 Move X30, [X31+16]
	301 Move X21, [X31+24]
	302 Move X1, X31
	303 Move V8, [X31+48]
	304 Call PrimitiveValue.op_Implicit, X0
	305 Return X0
	306 Move X0, 0x910000
	307 Move X0, [X0+3352]
	308 Call 0x1C17D08
	309 Call 0x19913D0
	310 Move W8, [X19]
	311 Move X0, 0x910000
	312 Move [X31+8], W8
	313 Move X0, [X0+3368]
	314 Call 0x1C17D08
	315 Add X1, X31, 8
	316 Call 0x1C17E04
	317 Move X19, X0
	318 Move X0, 0x93F000
	319 Move X0, [X0+1288]
	320 Call 0x1C17D08
	321 Move X1, X19
	322 Move X2, X31
	323 Call String.Format, X0, X1
	324 Move X19, X0
	325 Move X0, 0x8E8000
	326 Move X0, [X0+2000]
	327 Call 0x1C17D08
	328 Call 0x1C17F10
	329 Move X1, X19
	330 Move X2, X31
	331 Move X20, X0
	332 Call Exception..ctor, X0, X1
	333 Move X0, 0x93F000
	334 Move X0, [X0+1312]
	335 Call 0x1C17D08
	336 Move X1, X0
	337 Move X0, X20
	338 Call 0x1C17DEC

Method: System.Double ReadDouble(System.Void* statePtr)

Disassembly:
	0x0380C1F8 MOV X5, X31
	0x0380C1FC STR W9, [X8 + 0x2C]
	0x0380C200 STR W31, [X31 + 0x48]
	0x0380C204 BL 0x375AA28
	0x0380C208 LDR X8, [X19]
	0x0380C20C LDR W9, [X31 + 0x48]
	0x0380C210 ADD X0, X31, 0x40
	0x0380C214 MOVZ W1, 0x56
	0x0380C218 LDR X8, [X8 + 0xB8]
	0x0380C21C MOVZ W2, 0x45
	0x0380C220 MOVZ W3, 0x43
	0x0380C224 MOVZ W4, 0x32
	0x0380C228 MOV X5, X31
	0x0380C22C STR W9, [X8 + 0x30]
	0x0380C230 STR W31, [X31 + 0x40]
	0x0380C234 BL 0x375AA28
	0x0380C238 LDR X8, [X19]
	0x0380C23C LDR W9, [X31 + 0x40]
	0x0380C240 ADD X0, X31, 0x38
	0x0380C244 MOVZ W1, 0x56
	0x0380C248 LDR X8, [X8 + 0xB8]
	0x0380C24C MOVZ W2, 0x45
	0x0380C250 MOVZ W3, 0x43
	0x0380C254 MOVZ W4, 0x33
	0x0380C258 MOV X5, X31
	0x0380C25C STR W9, [X8 + 0x34]
	0x0380C260 STR W31, [X31 + 0x38]
	0x0380C264 BL 0x375AA28
	0x0380C268 LDR X8, [X19]
	0x0380C26C LDR W9, [X31 + 0x38]
	0x0380C270 ADD X0, X31, 0x30
	0x0380C274 MOVZ W1, 0x51
	0x0380C278 LDR X8, [X8 + 0xB8]
	0x0380C27C MOVZ W2, 0x55
	0x0380C280 MOVZ W3, 0x41
	0x0380C284 MOVZ W4, 0x54
	0x0380C288 MOV X5, X31
	0x0380C28C STR W9, [X8 + 0x38]
	0x0380C290 STR W31, [X31 + 0x30]
	0x0380C294 BL 0x375AA28
	0x0380C298 LDR X8, [X19]
	0x0380C29C LDR W9, [X31 + 0x30]
	0x0380C2A0 ADD X0, X31, 0x28
	0x0380C2A4 MOVZ W1, 0x56
	0x0380C2A8 LDR X8, [X8 + 0xB8]
	0x0380C2AC MOVZ W2, 0x43
	0x0380C2B0 MOVZ W3, 0x32
	0x0380C2B4 MOVZ W4, 0x53
	0x0380C2B8 MOV X5, X31
	0x0380C2BC STR W9, [X8 + 0x3C]
	0x0380C2C0 STR W31, [X31 + 0x28]
	0x0380C2C4 BL 0x375AA28
	0x0380C2C8 LDR X8, [X19]
	0x0380C2CC LDR W9, [X31 + 0x28]
	0x0380C2D0 ADD X0, X31, 0x20
	0x0380C2D4 MOVZ W1, 0x56
	0x0380C2D8 LDR X8, [X8 + 0xB8]
	0x0380C2DC MOVZ W2, 0x43
	0x0380C2E0 MOVZ W3, 0x33
	0x0380C2E4 MOVZ W4, 0x53
	0x0380C2E8 MOV X5, X31
	0x0380C2EC STR W9, [X8 + 0x40]
	0x0380C2F0 STR W31, [X31 + 0x20]
	0x0380C2F4 BL 0x375AA28
	0x0380C2F8 LDR X8, [X19]
	0x0380C2FC LDR W9, [X31 + 0x20]
	0x0380C300 ADD X0, X31, 0x18
	0x0380C304 MOVZ W1, 0x56
	0x0380C308 LDR X8, [X8 + 0xB8]
	0x0380C30C MOVZ W2, 0x43
	0x0380C310 MOVZ W3, 0x32
	0x0380C314 MOVZ W4, 0x42
	0x0380C318 MOV X5, X31
	0x0380C31C STR W9, [X8 + 0x44]
	0x0380C320 STR W31, [X31 + 0x18]
	0x0380C324 BL 0x375AA28
	0x0380C328 LDR X8, [X19]
	0x0380C32C LDR W9, [X31 + 0x18]
	0x0380C330 ADD X0, X31, 0x10
	0x0380C334 MOVZ W1, 0x56
	0x0380C338 LDR X8, [X8 + 0xB8]
	0x0380C33C MOVZ W2, 0x43
	0x0380C340 MOVZ W3, 0x33
	0x0380C344 MOVZ W4, 0x42
	0x0380C348 MOV X5, X31
	0x0380C34C STR W9, [X8 + 0x48]
	0x0380C350 STR W31, [X31 + 0x10]
	0x0380C354 BL 0x375AA28
	0x0380C358 LDR X8, [X19]
	0x0380C35C LDR W9, [X31 + 0x10]
	0x0380C360 ADD X0, X31, 0x8
	0x0380C364 MOVZ W1, 0x50
	0x0380C368 LDR X8, [X8 + 0xB8]
	0x0380C36C MOVZ W2, 0x6F
	0x0380C370 MOVZ W3, 0x73
	0x0380C374 MOVZ W4, 0x65
	0x0380C378 MOV X5, X31
	0x0380C37C STR W9, [X8 + 0x4C]
	0x0380C380 STR W31, [X31 + 0x8]
	0x0380C384 BL 0x375AA28
	0x0380C388 LDR X8, [X19]
	0x0380C38C LDR W9, [X31 + 0x8]
	0x0380C390 LDP X20, X19, [X31 + 0xB0]
	0x0380C394 LDR X30, [X31 + 0xA0]
	0x0380C398 LDR X8, [X8 + 0xB8]
	0x0380C39C STR W9, [X8 + 0x50]
	0x0380C3A0 ADD X31, X31, 0xC0
	0x0380C3A4 RET
	0x0380C3A8 SUB X31, X31, 0x40
	0x0380C3AC STR X30, [X31 + 0x20]
	0x0380C3B0 STP X20, X19, [X31 + 0x30]
	0x0380C3B4 CMP W1, 0x10
	0x0380C3B8 B.HI 0x380C3E8
	0x0380C3BC MOVZ W8, 0x1
	0x0380C3C0 MOVZ W9, 0x16
	0x0380C3C4 LSLV W8, W8, W1
	0x0380C3C8 MOVK W9, 0x10000
	0x0380C3CC ANDS W31, W8, W9, 0x0
	0x0380C3D0 B.EQ 0x380C3E8
	0x0380C3D4 LDR X0, [X0 + 0x28]
	0x0380C3D8 LDP X20, X19, [X31 + 0x30]
	0x0380C3DC LDR X30, [X31 + 0x20]
	0x0380C3E0 ADD X31, X31, 0x40
	0x0380C3E4 RET
	0x0380C3E8 ADRP X0, 0x93A000
	0x0380C3EC LDR X0, [X0 + 0x9B8]
	0x0380C3F0 MOV W19, W1
	0x0380C3F4 BL 0x1C16D08
	0x0380C3F8 MOVN X8, 0x0
	0x0380C3FC STP X0, X8, [X31 + 0x8]
	0x0380C400 ADD X0, X31, 0x8
	0x0380C404 MOV X1, X31
	0x0380C408 STR W19, [X31 + 0x18]
	0x0380C40C BL 0x33B162C
	0x0380C410 MOV X19, X0
	0x0380C414 ADRP X0, 0x93E000
	0x0380C418 LDR X0, [X0 + 0x560]
	0x0380C41C BL 0x1C16D08
	0x0380C420 MOV X1, X19
	0x0380C424 MOV X2, X31
	0x0380C428 BL 0x321B938
	0x0380C42C MOV X19, X0
	0x0380C430 ADRP X0, 0x8EF000
	0x0380C434 LDR X0, [X0 + 0x578]
	0x0380C438 BL 0x1C16D08
	0x0380C43C BL 0x1C16F10
	0x0380C440 MOV X20, X0
	0x0380C444 ADRP X0, 0x93E000
	0x0380C448 LDR X0, [X0 + 0x568]
	0x0380C44C BL 0x1C16D08
	0x0380C450 MOV X2, X0
	0x0380C454 MOV X0, X20
	0x0380C458 MOV X1, X19
	0x0380C45C MOV X3, X31
	0x0380C460 BL 0x330E16C
	0x0380C464 ADRP X0, 0x93E000
	0x0380C468 LDR X0, [X0 + 0x570]
	0x0380C46C BL 0x1C16D08
	0x0380C470 MOV X1, X0
	0x0380C474 MOV X0, X20
	0x0380C478 BL 0x1C16DEC
	0x0380C47C STP X30, X21, [X31 - 0x20]!
	0x0380C480 STP X20, X19, [X31 + 0x10]
	0x0380C484 ADRP X20, 0xBD5000
	0x0380C488 ADRP X21, 0x912000
	0x0380C48C LDRB W8, [X20 + 0x481]
	0x0380C490 LDR X21, [X21 + 0xFE8]
	0x0380C494 MOV W19, W0
	0x0380C498 TBNZ X8, 0x0, 0x380C4B0
	0x0380C49C ADRP X0, 0x912000
	0x0380C4A0 LDR X0, [X0 + 0xFE8]
	0x0380C4A4 BL 0x1C16CF4
	0x0380C4A8 MOVZ W8, 0x1
	0x0380C4AC STRB W8, [X20 + 0x481]
	0x0380C4B0 LDR X8, [X21]
	0x0380C4B4 UBFM W9, W19, 0x1F, 0x1E
	0x0380C4B8 LDP X20, X19, [X31 + 0x10]
	0x0380C4BC LDR X8, [X8 + 0xB8]
	0x0380C4C0 LDR X8, [X8 + 0x18]
	0x0380C4C4 LDR X0, [X8, W9, SXTW]
	0x0380C4C8 LDP X30, X21, [X31], #0x20
	0x0380C4CC RET
	0x0380C4D0 LDR X8, [X0]
	0x0380C4D4 UBFM W9, W1, 0x1F, 0x1E
	0x0380C4D8 LDR X0, [X8, W9, SXTW]
	0x0380C4DC RET
	0x0380C4E0 STP X30, X21, [X31 - 0x20]!
	0x0380C4E4 STP X20, X19, [X31 + 0x10]
	0x0380C4E8 ADRP X20, 0xBD5000
	0x0380C4EC ADRP X21, 0x912000
	0x0380C4F0 LDRB W8, [X20 + 0x482]
	0x0380C4F4 LDR X21, [X21 + 0xFE8]
	0x0380C4F8 MOV W19, W0
	0x0380C4FC TBNZ X8, 0x0, 0x380C514
	0x0380C500 ADRP X0, 0x912000
	0x0380C504 LDR X0, [X0 + 0xFE8]
	0x0380C508 BL 0x1C16CF4
	0x0380C50C MOVZ W8, 0x1
	0x0380C510 STRB W8, [X20 + 0x482]
	0x0380C514 LDR X8, [X21]
	0x0380C518 MOVZ W9, 0x1
	0x0380C51C BFM W9, W19, 0x1F, 0x1E
	0x0380C520 LDP X20, X19, [X31 + 0x10]
	0x0380C524 LDR X8, [X8 + 0xB8]
	0x0380C528 LDR X8, [X8 + 0x18]
	0x0380C52C LDR X0, [X8, W9, SXTW]
	0x0380C530 LDP X30, X21, [X31], #0x20
	0x0380C534 RET
	0x0380C538 LDR X8, [X0]
	0x0380C53C MOVZ W9, 0x1
	0x0380C540 BFM W9, W1, 0x1F, 0x1E
	0x0380C544 LDR X0, [X8, W9, SXTW]
	0x0380C548 RET
	0x0380C54C STR X30, [X31 - 0x30]!
	0x0380C550 STP X22, X21, [X31 + 0x10]
	0x0380C554 STP X20, X19, [X31 + 0x20]
	0x0380C558 ADRP X22, 0xBD5000
	0x0380C55C ADRP X21, 0x912000
	0x0380C560 LDRB W8, [X22 + 0x483]
	0x0380C564 LDR X21, [X21 + 0xFE8]
	0x0380C568 MOV W19, W1
	0x0380C56C MOV X20, X0
	0x0380C570 TBNZ X8, 0x0, 0x380C588
	0x0380C574 ADRP X0, 0x912000
	0x0380C578 LDR X0, [X0 + 0xFE8]
	0x0380C57C BL 0x1C16CF4
	0x0380C580 MOVZ W8, 0x1
	0x0380C584 STRB W8, [X22 + 0x483]
	0x0380C588 MOV X0, X20
	0x0380C58C MOV W1, W19
	0x0380C590 BL 0x380C3A8
	0x0380C594 LDR X8, [X21]
	0x0380C598 LDP X20, X19, [X31 + 0x20]
	0x0380C59C LDP X22, X21, [X31 + 0x10]
	0x0380C5A0 LDR X8, [X8 + 0xB8]
	0x0380C5A4 STR X0, [X8 + 0x18]
	0x0380C5A8 LDR X30, [X31], #0x30
	0x0380C5AC RET
	0x0380C5B0 SUB X31, X31, 0x30
	0x0380C5B4 STP X30, X21, [X31 + 0x10]
	0x0380C5B8 STP X20, X19, [X31 + 0x20]
	0x0380C5BC MOV X19, X0
	0x0380C5C0 MOV X0, X1
	0x0380C5C4 MOV W1, W2
	0x0380C5C8 MOV W20, W2
	0x0380C5CC BL 0x380C664
	0x0380C5D0 STR W0, [X19]
	0x0380C5D4 CBZ W0, 0x380C654
	0x0380C5D8 ADD W8, W0, 0x4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xBD6000
	007 Move X21, 0x910000
	008 Move W8, [X22+1143]
	009 Move X21, [X21+3352]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x910000
	017 Move X0, [X0+3352]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1143], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W8, [X20]
	027 Move W9, [X20+4]
	028 Move W10, 0x5420
	029 Move X9, W9
	030 NotImplemented "Instruction MOVK not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Add X19, X9, X19
	033 Move W9, 0x5954
	034 NotImplemented "Instruction MOVK not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W9, 0x5254
	037 NotImplemented "Instruction MOVK not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W9, 0x4E54
	040 NotImplemented "Instruction MOVK not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W9, 0x4854
	043 NotImplemented "Instruction MOVK not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Compare W8, 0
	047 JumpIfEqual {157}
	048 Move W9, 0xFFFF
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X9, -47304704
	051 Move V0, [X9+360]
	052 Move W9, 0x5445
	053 NotImplemented "Instruction MOVK not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move W9, 0x4C20
	056 NotImplemented "Instruction MOVK not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move W9, 0x5420
	059 NotImplemented "Instruction MOVK not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move W9, 0x5420
	062 NotImplemented "Instruction MOVK not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move W8, [X19]
	065 Move W9, 0x80000000
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move TEMP, 0x80000000
	068 Not TEMP
	069 Move W9, TEMP
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X9, -47308800
	072 Move V0, [X9+1816]
	073 Move X9, 0x41E00000
	074 Move W9, 0x4954
	075 NotImplemented "Instruction MOVK not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move W9, 0x5954
	078 NotImplemented "Instruction MOVK not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move W8, [X19]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move D0, -1
	084 Move X9, -47308800
	085 Move V0, [X9+1288]
	086 NotImplemented "Instruction SXTB not yet implemented."
	087 Move X9, 0x40600000
	088 Move W9, 0x5420
	089 NotImplemented "Instruction MOVK not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move W9, 0x5445
	092 NotImplemented "Instruction MOVK not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move W8, [X19]
	095 Compare W8, 0
	096 JumpIfEqual {157}
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X9, -47308800
	099 Move V0, [X9+1288]
	100 Move X0, [X21]
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfEqual {158}
	104 Add X20, X20, 12
	105 Move W8, [X20]
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X21, X20
	109 Move X0, X19
	110 Move X2, X31
	111 Call MemoryHelpers.ReadSingleBit, X0, X1
	112 And W31, W0, 1
	113 Move D0, -1
	114 Move X0, [X21]
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfEqual {176}
	118 Add X20, X20, 12
	119 Move W8, [X20]
	120 NotImplemented "Instruction LDUR not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X21, X20
	123 Move X0, X19
	124 Move X2, X31
	125 Call MemoryHelpers.ReadSingleBit, X0, X1
	126 And W31, W0, 1
	127 Move D0, X31
	128 Move D1, 1
	129 NotImplemented "Instruction FCSEL not yet implemented."
	130 NotImplemented "Instruction LDRH not yet implemented."
	131 Move W9, 0x7FFF
	132 NotImplemented "Instruction CMP not yet implemented."
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move D0, -1
	135 Move X9, -47304704
	136 Move V0, [X9+360]
	137 NotImplemented "Instruction SXTH not yet implemented."
	138 Move X9, 0x40E00000
	139 NotImplemented "Instruction SCVTF not yet implemented."
	140 Move D2, X9
	141 Add D1, D1, D2
	142 NotImplemented "Instruction FDIV not yet implemented."
	143 NotImplemented "Instruction INVALID not yet implemented."
	144 Move W8, [X19]
	145 Add W31, W8, 1
	146 Move D0, X31
	147 Compare W8, 0
	148 JumpIfEqual {192}
	149 Move X9, -47308800
	150 Move V0, [X9+1816]
	151 NotImplemented "Instruction UCVTF not yet implemented."
	152 NotImplemented "Instruction FDIV not yet implemented."
	153 NotImplemented "Instruction INVALID not yet implemented."
	154 Move D0, 1
	155 Move V0, [X19]
	156 Move V0, [X19]
	157 Move D0, X31
	158 Call 0x1C17DFC
	159 Move X0, [X21]
	160 Move X21, X20
	161 Move W8, [X0+224]
	162 Add X21, X21, 12
	163 Move W22, [X21]
	164 Compare W8, 0
	165 JumpIfNotEqual {167}
	166 Call 0x1C17DFC
	167 Move W1, [X20+8]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move W2, [X21]
	170 Move X0, X19
	171 Move X3, X31
	172 Call MemoryHelpers.ReadMultipleBitsAsNormalizedUInt, X0, X1, X2
	173 Add S0, S0, S0
	174 Move S1, -1
	175 Add S0, S0, S1
	176 Call 0x1C17DFC
	177 Move X0, [X21]
	178 Move X21, X20
	179 Move W8, [X0+224]
	180 Add X21, X21, 12
	181 Move W22, [X21]
	182 Compare W8, 0
	183 JumpIfNotEqual {185}
	184 Call 0x1C17DFC
	185 Move W1, [X20+8]
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move W2, [X21]
	188 Move X0, X19
	189 Move X3, X31
	190 Call MemoryHelpers.ReadMultipleBitsAsNormalizedUInt, X0, X1, X2
	191 NotImplemented "Instruction FCVT not yet implemented."
	192 Move X20, [X31+32]
	193 Move X19, [X31+40]
	194 Move X22, [X31+16]
	195 Move X21, [X31+24]
	196 Move X30, [X31+48]
	197 Return V0
	198 Move D0, -1
	199 Move X0, 0x910000
	200 Move X0, [X0+3352]
	201 Call 0x1C17D08
	202 Call 0x19913D0
	203 Move W8, [X20]
	204 Move X0, 0x910000
	205 Move [X31+8], W8
	206 Move X0, [X0+3368]
	207 Call 0x1C17D08
	208 Add X1, X31, 8
	209 Call 0x1C17E04
	210 Move X19, X0
	211 Move X0, 0x93F000
	212 Move X0, [X0+1288]
	213 Call 0x1C17D08
	214 Move X1, X19
	215 Move X2, X31
	216 Call String.Format, X0, X1
	217 Move X19, X0
	218 Move X0, 0x8E8000
	219 Move X0, [X0+2000]
	220 Call 0x1C17D08
	221 Call 0x1C17F10
	222 Move X1, X19
	223 Move X2, X31
	224 Move X20, X0
	225 Call Exception..ctor, X0, X1
	226 Move X0, 0x93F000
	227 Move X0, [X0+1320]
	228 Call 0x1C17D08
	229 Move X1, X0
	230 Move X0, X20
	231 Call 0x1C17DEC

Method: System.Void WriteDouble(System.Void* statePtr, System.Double value)

Disassembly:
	0x0380C5DC ANDS W31, W0, 0x3
	0x0380C5E0 AND W8, W8, 0xFFFFFFFC
	0x0380C5E4 CSEL W8, W0, W8, EQ
	0x0380C5E8 ADD W9, W8, W8, 0x2, LSL
	0x0380C5EC ADD W0, W9, W20, 0x4, LSL
	0x0380C5F0 MOVZ W1, 0x4
	0x0380C5F4 MOVZ W2, 0x4
	0x0380C5F8 MOV X3, X31
	0x0380C5FC UBFM W21, W20, 0x1C, 0x1B
	0x0380C600 STP W8, W0, [X19]
	0x0380C604 BL 0x3C00000
	0x0380C608 LDR W1, [X19 + 0x4]
	0x0380C60C MOV X2, X31
	0x0380C610 STR X0, [X19 + 0x20]
	0x0380C614 BL 0x3C001B4
	0x0380C618 LDR X8, [X19 + 0x20]
	0x0380C61C ADD X1, X31, 0x8
	0x0380C620 MOV W0, W20
	0x0380C624 MOV W3, W21
	0x0380C628 STR X8, [X31 + 0x8]
	0x0380C62C LDR W2, [X19]
	0x0380C630 BL 0x380C6D0
	0x0380C634 STR X0, [X19 + 0x28]
	0x0380C638 LDR W8, [X19]
	0x0380C63C LDR X9, [X31 + 0x8]
	0x0380C640 UBFM W10, W8, 0x1F, 0x1E
	0x0380C644 ADD X8, X8, X9
	0x0380C648 ADD X10, X9, W10, SXTW
	0x0380C64C STP X9, X8, [X19 + 0x8]
	0x0380C650 STR X10, [X19 + 0x18]
	0x0380C654 LDP X20, X19, [X31 + 0x20]
	0x0380C658 LDP X30, X21, [X31 + 0x10]
	0x0380C65C ADD X31, X31, 0x30
	0x0380C660 RET
	0x0380C664 STR X30, [X31 - 0x30]!
	0x0380C668 STP X22, X21, [X31 + 0x10]
	0x0380C66C STP X20, X19, [X31 + 0x20]
	0x0380C670 CMP W1, 0x1
	0x0380C674 B.LT 0x380C6B4
	0x0380C678 MOV X19, X0
	0x0380C67C CBZ X0, 0x380C6CC
	0x0380C680 MOV X20, X31
	0x0380C684 MOV W0, W31
	0x0380C688 MOV W21, W1
	0x0380C68C ADD X22, X19, 0x20
	0x0380C690 LDR W8, [X19 + 0x18]
	0x0380C694 CMP X20, X8
	0x0380C698 B.CS 0x380C6C8
	0x0380C69C LDR X1, [X22, X20, LSL #3]
	0x0380C6A0 BL 0x380CBE4
	0x0380C6A4 ADD X20, X20, 0x1
	0x0380C6A8 CMP X21, X20
	0x0380C6AC B.NE 0x380C690
	0x0380C6B0 B 0x380C6B8
	0x0380C6B4 MOV W0, W31
	0x0380C6B8 LDP X20, X19, [X31 + 0x20]
	0x0380C6BC LDP X22, X21, [X31 + 0x10]
	0x0380C6C0 LDR X30, [X31], #0x30
	0x0380C6C4 RET
	0x0380C6C8 BL 0x1C16F28
	0x0380C6CC BL 0x1C16F20
	0x0380C6D0 LDR X9, [X1]
	0x0380C6D4 MOV W8, W0
	0x0380C6D8 UBFM W10, W2, 0x1F, 0x1E
	0x0380C6DC ADD W11, W3, W2, 0x1, LSL
	0x0380C6E0 ADD X0, X9, W10, SXTW
	0x0380C6E4 ADD X10, X9, W11, SXTW
	0x0380C6E8 CMP W8, 0x1
	0x0380C6EC STR X10, [X1]
	0x0380C6F0 B.LT 0x380C72C
	0x0380C6F4 MOV W8, W8
	0x0380C6F8 MOV X10, X31
	0x0380C6FC MOV X11, X31
	0x0380C700 ADD X12, X9, W2, UXTW
	0x0380C704 UBFM X8, X8, 0x3F, 0x3E
	0x0380C708 MOVZ X13, 0x2
	0x0380C70C ADD W15, W11, 0x1
	0x0380C710 ADD X11, X11, 0x2
	0x0380C714 SBFM X14, X10, 0x1D, 0x3F
	0x0380C718 CMP X8, X11
	0x0380C71C ADD X10, X10, X13
	0x0380C720 STR X9, [X14, X0, LSL]
	0x0380C724 STR X12, [X0, W15, SXTW]
	0x0380C728 B.NE 0x380C70C
	0x0380C72C RET
	0x0380C730 LDR X8, [X0]
	0x0380C734 UBFM W9, W1, 0x1F, 0x1E
	0x0380C738 STR X2, [X8, W9, SXTW]
	0x0380C73C RET
	0x0380C740 LDR X8, [X0]
	0x0380C744 MOVZ W9, 0x1
	0x0380C748 BFM W9, W1, 0x1F, 0x1E
	0x0380C74C STR X2, [X8, W9, SXTW]
	0x0380C750 RET
	0x0380C754 STR X30, [X31 - 0x20]!
	0x0380C758 STP X20, X19, [X31 + 0x10]
	0x0380C75C ADRP X20, 0xBD5000
	0x0380C760 LDRB W8, [X20 + 0x484]
	0x0380C764 MOV X19, X0
	0x0380C768 TBNZ X8, 0x0, 0x380C780
	0x0380C76C ADRP X0, 0x912000
	0x0380C770 LDR X0, [X0 + 0xFE8]
	0x0380C774 BL 0x1C16CF4
	0x0380C778 MOVZ W8, 0x1
	0x0380C77C STRB W8, [X20 + 0x484]
	0x0380C780 ADRP X20, 0x912000
	0x0380C784 LDR X0, [X19 + 0x20]
	0x0380C788 LDR X20, [X20 + 0xFE8]
	0x0380C78C CBZ X0, 0x380C7A0
	0x0380C790 MOVZ W1, 0x4
	0x0380C794 MOV X2, X31
	0x0380C798 BL 0x3C00054
	0x0380C79C STR X31, [X19 + 0x20]
	0x0380C7A0 STR X31, [X19 + 0x28]
	0x0380C7A4 LDR X8, [X20]
	0x0380C7A8 LDR X9, [X8 + 0xB8]
	0x0380C7AC STR X31, [X9 + 0x18]
	0x0380C7B0 LDR X8, [X8 + 0xB8]
	0x0380C7B4 LDR X10, [X19 + 0x8]
	0x0380C7B8 LDR X9, [X8]
	0x0380C7BC CMP X9, X10
	0x0380C7C0 B.NE 0x380C7D0
	0x0380C7C4 STR X31, [X8]
	0x0380C7C8 LDR X8, [X20]
	0x0380C7CC LDR X8, [X8 + 0xB8]
	0x0380C7D0 MOV X9, X19
	0x0380C7D4 LDR X10, [X9 + 0x10]!
	0x0380C7D8 STUR X31, [X9 - 0x8]
	0x0380C7DC LDR X11, [X8 + 0x8]
	0x0380C7E0 CMP X11, X10
	0x0380C7E4 B.NE 0x380C7EC
	0x0380C7E8 STR X31, [X8 + 0x8]
	0x0380C7EC LDR X10, [X8 + 0x10]
	0x0380C7F0 LDR X11, [X19 + 0x18]
	0x0380C7F4 CMP X10, X11
	0x0380C7F8 B.NE 0x380C800
	0x0380C7FC STR X31, [X8 + 0x10]
	0x0380C800 STR X31, [X19]
	0x0380C804 LDP X20, X19, [X31 + 0x10]
	0x0380C808 STP X31, X31, [X9]
	0x0380C80C LDR X30, [X31], #0x20
	0x0380C810 RET
	0x0380C814 STR X30, [X31 - 0x40]!
	0x0380C818 STP X24, X23, [X31 + 0x10]
	0x0380C81C STP X22, X21, [X31 + 0x20]
	0x0380C820 STP X20, X19, [X31 + 0x30]
	0x0380C824 ADRP X23, 0xBD5000
	0x0380C828 LDRB W8, [X23 + 0x485]
	0x0380C82C MOV X21, X3
	0x0380C830 MOV W19, W2
	0x0380C834 MOV X20, X1
	0x0380C838 MOV X22, X0
	0x0380C83C TBNZ X8, 0x0, 0x380C854
	0x0380C840 ADRP X0, 0x90F000
	0x0380C844 LDR X0, [X0 + 0xD18]
	0x0380C848 BL 0x1C16CF4
	0x0380C84C MOVZ W8, 0x1
	0x0380C850 STRB W8, [X23 + 0x485]
	0x0380C854 LDR W8, [X21 + 0x4]
	0x0380C858 CBZ W8, 0x380C8AC
	0x0380C85C LDR X0, [X22 + 0x28]
	0x0380C860 LDR X3, [X21 + 0x28]
	0x0380C864 MOV X1, X20
	0x0380C868 MOV W2, W19
	0x0380C86C BL 0x380C96C
	0x0380C870 LDR X0, [X22 + 0x8]
	0x0380C874 LDR X3, [X21 + 0x8]
	0x0380C878 MOV X1, X20
	0x0380C87C MOV W2, W19
	0x0380C880 BL 0x380CADC
	0x0380C884 LDR X0, [X22 + 0x10]
	0x0380C888 LDR X3, [X21 + 0x10]
	0x0380C88C MOV X1, X20
	0x0380C890 MOV W2, W19
	0x0380C894 BL 0x380CADC
	0x0380C898 LDR X0, [X22 + 0x18]
	0x0380C89C LDR X3, [X21 + 0x18]
	0x0380C8A0 MOV X1, X20
	0x0380C8A4 MOV W2, W19
	0x0380C8A8 BL 0x380CADC
	0x0380C8AC CMP W19, 0x1
	0x0380C8B0 B.LT 0x380C950
	0x0380C8B4 CBZ X20, 0x380C968
	0x0380C8B8 ADRP X24, 0x90F000
	0x0380C8BC LDR X24, [X24 + 0xD18]
	0x0380C8C0 MOV W21, W31
	0x0380C8C4 MOV W23, W31
	0x0380C8C8 LDR W8, [X20 + 0x18]
	0x0380C8CC CMP W23, W8
	0x0380C8D0 B.CS 0x380C964
	0x0380C8D4 ADD X8, X20, W23, 0x3, SXTW
	0x0380C8D8 LDR X22, [X8 + 0x20]
	0x0380C8DC CBZ X22, 0x380C968
	0x0380C8E0 LDR X0, [X24]
	0x0380C8E4 LDR W8, [X0 + 0xE0]
	0x0380C8E8 CBNZ W8, 0x380C8F0
	0x0380C8EC BL 0x1C16DFC
	0x0380C8F0 LDR W8, [X22 + 0x14]
	0x0380C8F4 ADDS W31, W8, 0x1
	0x0380C8F8 B.EQ 0x380C90C
	0x0380C8FC SUBS W1, W21, W8
	0x0380C900 B.EQ 0x380C934
	0x0380C904 MOV X0, X22
	0x0380C908 B 0x380C92C
	0x0380C90C LDR X0, [X24]
	0x0380C910 LDR W8, [X0 + 0xE0]
	0x0380C914 CBNZ W8, 0x380C91C
	0x0380C918 BL 0x1C16DFC
	0x0380C91C STR W31, [X22 + 0x14]
	0x0380C920 CBZ W21, 0x380C934
	0x0380C924 MOV X0, X22
	0x0380C928 MOV W1, W21
	0x0380C92C MOV X2, X31
	0x0380C930 BL 0x37735A8
	0x0380C934 MOV W0, W21
	0x0380C938 MOV X1, X22
	0x0380C93C BL 0x380CBE4
	0x0380C940 ADD W23, W23, 0x1
	0x0380C944 CMP W19, W23
	0x0380C948 MOV W21, W0
	0x0380C94C B.NE 0x380C8C8
	0x0380C950 LDP X20, X19, [X31 + 0x30]
	0x0380C954 LDP X22, X21, [X31 + 0x20]
	0x0380C958 LDP X24, X23, [X31 + 0x10]
	0x0380C95C LDR X30, [X31], #0x40
	0x0380C960 RET
	0x0380C964 BL 0x1C16F28
	0x0380C968 BL 0x1C16F20
	0x0380C96C SUB X31, X31, 0x70
	0x0380C970 STP X29, X30, [X31 + 0x10]
	0x0380C974 STP X28, X27, [X31 + 0x20]
	0x0380C978 STP X26, X25, [X31 + 0x30]
	0x0380C97C STP X24, X23, [X31 + 0x40]
	0x0380C980 STP X22, X21, [X31 + 0x50]
	0x0380C984 STP X20, X19, [X31 + 0x60]
	0x0380C988 ADRP X23, 0xBD5000
	0x0380C98C LDRB W8, [X23 + 0x486]
	0x0380C990 MOV X19, X3
	0x0380C994 MOV X21, X1
	0x0380C998 MOV X22, X0
	0x0380C99C STR W2, [X31 + 0xC]
	0x0380C9A0 TBNZ X8, 0x0, 0x380C9B8
	0x0380C9A4 ADRP X0, 0x90F000
	0x0380C9A8 LDR X0, [X0 + 0xD18]
	0x0380C9AC BL 0x1C16CF4
	0x0380C9B0 MOVZ W8, 0x1
	0x0380C9B4 STRB W8, [X23 + 0x486]
	0x0380C9B8 CBZ X22, 0x380CAB4
	0x0380C9BC CBZ X19, 0x380CAB4
	0x0380C9C0 LDR W8, [X31 + 0xC]
	0x0380C9C4 CMP W8, 0x1
	0x0380C9C8 B.LT 0x380CAB4
	0x0380C9CC CBZ X21, 0x380CAD8
	0x0380C9D0 ADRP X29, 0x90F000
	0x0380C9D4 LDR X29, [X29 + 0xD18]
	0x0380C9D8 MOV W23, W31
	0x0380C9DC MOV W27, W31
	0x0380C9E0 MOVZ W28, 0x1
	0x0380C9E4 LDR W8, [X21 + 0x18]
	0x0380C9E8 CMP W27, W8
	0x0380C9EC B.CS 0x380CAD4
	0x0380C9F0 ADD X8, X21, W27, 0x3, SXTW
	0x0380C9F4 LDR X24, [X8 + 0x20]
	0x0380C9F8 CBZ X24, 0x380CAD8
	0x0380C9FC LDR X0, [X29]
	0x0380CA00 LDR W8, [X0 + 0xE0]
	0x0380CA04 CBNZ W8, 0x380CA0C
	0x0380CA08 BL 0x1C16DFC
	0x0380CA0C LDR W8, [X24 + 0x14]
	0x0380CA10 ADDS W31, W8, 0x1
	0x0380CA14 B.EQ 0x380CAB4
	0x0380CA18 LDR X0, [X29]
	0x0380CA1C LDR W25, [X24 + 0xE8]
	0x0380CA20 LDR W8, [X0 + 0xE0]
	0x0380CA24 CBNZ W8, 0x380CA2C
	0x0380CA28 BL 0x1C16DFC
	0x0380CA2C ADD X0, X24, 0x10
	0x0380CA30 MOV X1, X31
	0x0380CA34 BL 0x3800B6C
	0x0380CA38 UBFM W8, W25, 0x1F, 0x1E
	0x0380CA3C SUB W11, W28, 0x1
	0x0380CA40 LDRSW X9, [X24 + 0x14]
	0x0380CA44 MOVZ W10, 0x1
	0x0380CA48 LDR X8, [X19, W8, SXTW]
	0x0380CA4C LDR X11, [X22, W11, SXTW]
	0x0380CA50 BFM W10, W25, 0x1F, 0x1E
	0x0380CA54 LDR X10, [X19, W10, SXTW]
	0x0380CA58 LDR X20, [X22, W28, SXTW]
	0x0380CA5C ADD X1, X8, X9
	0x0380CA60 ADD X8, X11, W23, SXTW
	0x0380CA64 MOV W26, W0
	0x0380CA68 MOV X0, X8
	0x0380CA6C MOV X2, X26
	0x0380CA70 MOV X3, X31
	0x0380CA74 ADD X25, X10, X9
	0x0380CA78 BL 0x3BFF954
	0x0380CA7C ADD X0, X20, W23, SXTW
	0x0380CA80 MOV X1, X25
	0x0380CA84 MOV X2, X26
	0x0380CA88 MOV X3, X31
	0x0380CA8C BL 0x3BFF954
	0x0380CA90 MOV W0, W23
	0x0380CA94 MOV X1, X24
	0x0380CA98 BL 0x380CBE4
	0x0380CA9C LDR W8, [X31 + 0xC]
	0x0380CAA0 ADD W27, W27, 0x1
	0x0380CAA4 MOV W23, W0
	0x0380CAA8 ADD W28, W28, 0x2
	0x0380CAAC CMP W8, W27
	0x0380CAB0 B.NE 0x380C9E4
	0x0380CAB4 LDP X20, X19, [X31 + 0x60]
	0x0380CAB8 LDP X22, X21, [X31 + 0x50]
	0x0380CABC LDP X24, X23, [X31 + 0x40]
	0x0380CAC0 LDP X26, X25, [X31 + 0x30]
	0x0380CAC4 LDP X28, X27, [X31 + 0x20]
	0x0380CAC8 LDP X29, X30, [X31 + 0x10]
	0x0380CACC ADD X31, X31, 0x70
	0x0380CAD0 RET
	0x0380CAD4 BL 0x1C16F28
	0x0380CAD8 BL 0x1C16F20
	0x0380CADC STR X30, [X31 - 0x50]!
	0x0380CAE0 STP X26, X25, [X31 + 0x10]
	0x0380CAE4 STP X24, X23, [X31 + 0x20]
	0x0380CAE8 STP X22, X21, [X31 + 0x30]
	0x0380CAEC STP X20, X19, [X31 + 0x40]
	0x0380CAF0 ADRP X23, 0xBD5000
	0x0380CAF4 LDRB W8, [X23 + 0x487]
	0x0380CAF8 MOV X19, X3
	0x0380CAFC MOV W20, W2
	0x0380CB00 MOV X21, X1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xBD6000
	009 Move X21, 0x910000
	010 Move W8, [X22+1144]
	011 Move X21, [X21+3352]
	012 Move V8, V0
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x910000
	020 Move X0, [X0+3352]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1144], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move W8, [X20]
	030 Move W9, [X20+4]
	031 Move W10, 0x5420
	032 Move X9, W9
	033 NotImplemented "Instruction MOVK not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Add X19, X9, X19
	036 Move W9, 0x5954
	037 NotImplemented "Instruction MOVK not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W9, 0x5254
	040 NotImplemented "Instruction MOVK not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W9, 0x4E54
	043 NotImplemented "Instruction MOVK not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W9, 0x4854
	046 NotImplemented "Instruction MOVK not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction INVALID not yet implemented."
	049 NotImplemented "Instruction FCMP not yet implemented."
	050 Move S1, 1
	051 NotImplemented "Instruction FCMP not yet implemented."
	052 Move X8, -47304704
	053 Move V1, [X8+360]
	054 NotImplemented "Instruction FCVT not yet implemented."
	055 Move D2, X31
	056 Multiply D0, D0, D1
	057 Add D0, D0, D2
	058 NotImplemented "Instruction FCVTZS not yet implemented."
	059 NotImplemented "Instruction FCVTZU not yet implemented."
	060 NotImplemented "Instruction FCMP not yet implemented."
	061 NotImplemented "Instruction CSEL not yet implemented."
	062 Move W9, 0x5445
	063 NotImplemented "Instruction MOVK not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move W9, 0x4C20
	066 NotImplemented "Instruction MOVK not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move W9, 0x5420
	069 NotImplemented "Instruction MOVK not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move W9, 0x5420
	072 NotImplemented "Instruction MOVK not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 NotImplemented "Instruction INVALID not yet implemented."
	075 Move S1, 0.5
	076 Multiply S0, S0, S1
	077 Add S0, S0, S1
	078 NotImplemented "Instruction FCMP not yet implemented."
	079 Move S1, 1
	080 NotImplemented "Instruction FCMP not yet implemented."
	081 Move X8, -47308800
	082 Move V1, [X8+1816]
	083 Move X8, 0xC1E00000
	084 NotImplemented "Instruction FCVT not yet implemented."
	085 Move X9, 0x7FF00000
	086 Move D2, X8
	087 Multiply D0, D0, D1
	088 Move D3, X9
	089 Add D0, D0, D2
	090 NotImplemented "Instruction FCVTZS not yet implemented."
	091 NotImplemented "Instruction FCMP not yet implemented."
	092 Move W9, 0x80000000
	093 NotImplemented "Instruction CSEL not yet implemented."
	094 Move W9, 0x4954
	095 NotImplemented "Instruction MOVK not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move W9, 0x5954
	098 NotImplemented "Instruction MOVK not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 NotImplemented "Instruction INVALID not yet implemented."
	101 Move S1, 0.5
	102 Multiply S0, S0, S1
	103 Add S0, S0, S1
	104 NotImplemented "Instruction FCMP not yet implemented."
	105 Move S1, 1
	106 NotImplemented "Instruction FCMP not yet implemented."
	107 Move X8, -47308800
	108 Move V1, [X8+1288]
	109 Move X8, 0xC0600000
	110 NotImplemented "Instruction FCVT not yet implemented."
	111 Move X9, 0x7FF00000
	112 Move D2, X8
	113 Multiply D0, D0, D1
	114 Move D3, X9
	115 Add D0, D0, D2
	116 NotImplemented "Instruction FCVTZS not yet implemented."
	117 NotImplemented "Instruction FCMP not yet implemented."
	118 NotImplemented "Instruction CSEL not yet implemented."
	119 Move W9, 0x5420
	120 NotImplemented "Instruction MOVK not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move W9, 0x5445
	123 NotImplemented "Instruction MOVK not yet implemented."
	124 NotImplemented "Instruction CMP not yet implemented."
	125 NotImplemented "Instruction INVALID not yet implemented."
	126 NotImplemented "Instruction FCMP not yet implemented."
	127 Move S1, 1
	128 NotImplemented "Instruction FCMP not yet implemented."
	129 Move X8, -47308800
	130 Move V1, [X8+1288]
	131 NotImplemented "Instruction FCVT not yet implemented."
	132 Move D2, X31
	133 Multiply D0, D0, D1
	134 Add D0, D0, D2
	135 NotImplemented "Instruction FCVTZS not yet implemented."
	136 NotImplemented "Instruction FCVTZU not yet implemented."
	137 NotImplemented "Instruction FCMP not yet implemented."
	138 NotImplemented "Instruction CSEL not yet implemented."
	139 Move X0, [X21]
	140 Move W8, [X0+224]
	141 Compare W8, 0
	142 JumpIfEqual {210}
	143 Add X20, X20, 12
	144 Move W8, [X20]
	145 NotImplemented "Instruction LDUR not yet implemented."
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move X21, X20
	148 NotImplemented "Instruction FCMP not yet implemented."
	149 Move X0, [X21]
	150 Move W8, [X0+224]
	151 Compare W8, 0
	152 JumpIfEqual {226}
	153 Add X20, X20, 12
	154 Move W8, [X20]
	155 NotImplemented "Instruction LDUR not yet implemented."
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move X21, X20
	158 Move D0, 0.5
	159 NotImplemented "Instruction FCMP not yet implemented."
	160 Move X0, X19
	161 Move X20, [X31+48]
	162 Move X19, [X31+56]
	163 Move X22, [X31+32]
	164 Move X21, [X31+40]
	165 Move X30, [X31+24]
	166 Move V8, [X31+16]
	167 NotImplemented "Instruction CSET not yet implemented."
	168 Move X3, X31
	169 Add X31, X31, 64
	170 Call MemoryHelpers.WriteSingleBit, X0, X1, X2
	171 Return 
	172 NotImplemented "Instruction INVALID not yet implemented."
	173 Move S1, 0.5
	174 Multiply S0, S0, S1
	175 Add S0, S0, S1
	176 NotImplemented "Instruction FCMP not yet implemented."
	177 Move S1, 1
	178 NotImplemented "Instruction FCMP not yet implemented."
	179 Move X8, -47304704
	180 Move V1, [X8+360]
	181 Move X8, 0xC0E00000
	182 NotImplemented "Instruction FCVT not yet implemented."
	183 Move X9, 0x7FF00000
	184 Move D2, X8
	185 Multiply D0, D0, D1
	186 Move D3, X9
	187 Add D0, D0, D2
	188 NotImplemented "Instruction FCVTZS not yet implemented."
	189 NotImplemented "Instruction FCMP not yet implemented."
	190 NotImplemented "Instruction CSEL not yet implemented."
	191 NotImplemented "Instruction INVALID not yet implemented."
	192 NotImplemented "Instruction FCMP not yet implemented."
	193 Move S1, 1
	194 NotImplemented "Instruction FCMP not yet implemented."
	195 Move X8, -47308800
	196 Move V1, [X8+1816]
	197 NotImplemented "Instruction FCVT not yet implemented."
	198 Move D2, X31
	199 Multiply D0, D0, D1
	200 Add D0, D0, D2
	201 NotImplemented "Instruction FCVTZS not yet implemented."
	202 NotImplemented "Instruction FCVTZU not yet implemented."
	203 NotImplemented "Instruction FCMP not yet implemented."
	204 NotImplemented "Instruction CSEL not yet implemented."
	205 Move [X19], D8
	206 NotImplemented "Instruction INVALID not yet implemented."
	207 Move [X19], S0
	208 Move W8, 128
	209 Move W8, W31
	210 Call 0x1C17DFC
	211 Move X0, [X21]
	212 Move X21, X20
	213 Move W8, [X0+224]
	214 Add X21, X21, 12
	215 Move W22, [X21]
	216 Compare W8, 0
	217 JumpIfNotEqual {219}
	218 Call 0x1C17DFC
	219 Move W1, [X20+8]
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move W2, [X21]
	222 NotImplemented "Instruction INVALID not yet implemented."
	223 Move S1, 0.5
	224 Multiply S0, S0, S1
	225 Add S0, S0, S1
	226 Call 0x1C17DFC
	227 Move X0, [X21]
	228 Move X21, X20
	229 Move W8, [X0+224]
	230 Add X21, X21, 12
	231 Move W22, [X21]
	232 Compare W8, 0
	233 JumpIfNotEqual {235}
	234 Call 0x1C17DFC
	235 Move W1, [X20+8]
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Move W2, [X21]
	238 NotImplemented "Instruction INVALID not yet implemented."
	239 Move X0, X19
	240 Move X20, [X31+48]
	241 Move X19, [X31+56]
	242 Move X22, [X31+32]
	243 Move X21, [X31+40]
	244 Move X30, [X31+24]
	245 Move V8, [X31+16]
	246 Move X3, X31
	247 Add X31, X31, 64
	248 Call MemoryHelpers.WriteNormalizedUIntAsMultipleBits, X0, X1, X2, V0
	249 Return 
	250 Move W8, W31
	251 Move W8, 0x80000000
	252 Move W8, 0x8000
	253 Move W8, W31
	254 Move W8, 127
	255 Move W8, 255
	256 Move [X19], W8
	257 Move W8, 0xFFFF
	258 Move TEMP, 0x80000000
	259 Not TEMP
	260 Move W8, TEMP
	261 Move W8, 0x7FFF
	262 NotImplemented "Instruction STRH not yet implemented."
	263 Move TEMP, 0
	264 Not TEMP
	265 Move W8, TEMP
	266 Move [X19], W8
	267 Move X20, [X31+48]
	268 Move X19, [X31+56]
	269 Move X22, [X31+32]
	270 Move X21, [X31+40]
	271 Move X30, [X31+24]
	272 Move V8, [X31+16]
	273 Add X31, X31, 64
	274 Return 
	275 Move X0, 0x910000
	276 Move X0, [X0+3352]
	277 Call 0x1C17D08
	278 Call 0x19913D0
	279 Move W8, [X20]
	280 Move X0, 0x910000
	281 Move [X31+8], W8
	282 Move X0, [X0+3368]
	283 Call 0x1C17D08
	284 Add X1, X31, 8
	285 Call 0x1C17E04
	286 Move X19, X0
	287 Move X0, 0x93F000
	288 Move X0, [X0+1288]
	289 Call 0x1C17D08
	290 Move X1, X19
	291 Move X2, X31
	292 Call String.Format, X0, X1
	293 Move X19, X0
	294 Move X0, 0x8E8000
	295 Move X0, [X0+1456]
	296 Call 0x1C17D08
	297 Call 0x1C17F10
	298 Move X1, X19
	299 Move X2, X31
	300 Move X20, X0
	301 Call InvalidOperationException..ctor, X0, X1
	302 Move X0, 0x93F000
	303 Move X0, [X0+1328]
	304 Call 0x1C17D08
	305 Move X1, X0
	306 Move X0, X20
	307 Call 0x1C17DEC

Method: System.Void Write(System.Void* statePtr, UnityEngine.InputSystem.Utilities.PrimitiveValue value)

Disassembly:
	0x0380CB04 MOV X22, X0
	0x0380CB08 TBNZ X8, 0x0, 0x380CB20
	0x0380CB0C ADRP X0, 0x90F000
	0x0380CB10 LDR X0, [X0 + 0xD18]
	0x0380CB14 BL 0x1C16CF4
	0x0380CB18 MOVZ W8, 0x1
	0x0380CB1C STRB W8, [X23 + 0x487]
	0x0380CB20 CMP W20, 0x1
	0x0380CB24 B.LT 0x380CBC4
	0x0380CB28 CBZ X21, 0x380CBE0
	0x0380CB2C ADRP X26, 0x90F000
	0x0380CB30 LDR X26, [X26 + 0xD18]
	0x0380CB34 MOV W23, W31
	0x0380CB38 MOV W25, W31
	0x0380CB3C LDR W8, [X21 + 0x18]
	0x0380CB40 CMP W25, W8
	0x0380CB44 B.CS 0x380CBDC
	0x0380CB48 ADD X8, X21, W25, 0x3, SXTW
	0x0380CB4C LDR X24, [X8 + 0x20]
	0x0380CB50 CBZ X24, 0x380CBE0
	0x0380CB54 LDR X0, [X26]
	0x0380CB58 LDR W8, [X0 + 0xE0]
	0x0380CB5C CBNZ W8, 0x380CB64
	0x0380CB60 BL 0x1C16DFC
	0x0380CB64 LDR W8, [X24 + 0x14]
	0x0380CB68 ADDS W31, W8, 0x1
	0x0380CB6C B.EQ 0x380CBC4
	0x0380CB70 LDR X0, [X26]
	0x0380CB74 LDR W8, [X0 + 0xE0]
	0x0380CB78 CBNZ W8, 0x380CB80
	0x0380CB7C BL 0x1C16DFC
	0x0380CB80 ADD X0, X24, 0x10
	0x0380CB84 MOV X1, X31
	0x0380CB88 BL 0x3800B6C
	0x0380CB8C LDRSW X9, [X24 + 0x14]
	0x0380CB90 ADD X8, X22, W23, SXTW
	0x0380CB94 MOV W2, W0
	0x0380CB98 MOV X0, X8
	0x0380CB9C ADD X1, X9, X19
	0x0380CBA0 MOV X3, X31
	0x0380CBA4 BL 0x3BFF954
	0x0380CBA8 MOV W0, W23
	0x0380CBAC MOV X1, X24
	0x0380CBB0 BL 0x380CBE4
	0x0380CBB4 ADD W25, W25, 0x1
	0x0380CBB8 CMP W20, W25
	0x0380CBBC MOV W23, W0
	0x0380CBC0 B.NE 0x380CB3C
	0x0380CBC4 LDP X20, X19, [X31 + 0x40]
	0x0380CBC8 LDP X22, X21, [X31 + 0x30]
	0x0380CBCC LDP X24, X23, [X31 + 0x20]
	0x0380CBD0 LDP X26, X25, [X31 + 0x10]
	0x0380CBD4 LDR X30, [X31], #0x50
	0x0380CBD8 RET
	0x0380CBDC BL 0x1C16F28
	0x0380CBE0 BL 0x1C16F20
	0x0380CBE4 STP X30, X21, [X31 - 0x20]!
	0x0380CBE8 STP X20, X19, [X31 + 0x10]
	0x0380CBEC ADRP X21, 0xBD5000
	0x0380CBF0 LDRB W8, [X21 + 0x488]
	0x0380CBF4 MOV X19, X1
	0x0380CBF8 MOV W20, W0
	0x0380CBFC TBNZ X8, 0x0, 0x380CC14
	0x0380CC00 ADRP X0, 0x90F000
	0x0380CC04 LDR X0, [X0 + 0xD18]
	0x0380CC08 BL 0x1C16CF4
	0x0380CC0C MOVZ W8, 0x1
	0x0380CC10 STRB W8, [X21 + 0x488]
	0x0380CC14 CBZ X19, 0x380CC64
	0x0380CC18 ADRP X8, 0x90F000
	0x0380CC1C LDR X8, [X8 + 0xD18]
	0x0380CC20 ADD X21, X19, 0x10
	0x0380CC24 LDR X0, [X8]
	0x0380CC28 LDR W8, [X0 + 0xE0]
	0x0380CC2C CBNZ W8, 0x380CC34
	0x0380CC30 BL 0x1C16DFC
	0x0380CC34 MOV X0, X21
	0x0380CC38 MOV X1, X31
	0x0380CC3C BL 0x3800B6C
	0x0380CC40 CBZ W0, 0x380CC68
	0x0380CC44 ADD W8, W0, 0x4
	0x0380CC48 AND W8, W8, 0xFFFFFFFC
	0x0380CC4C ANDS W31, W0, 0x3
	0x0380CC50 CSEL W8, W0, W8, EQ
	0x0380CC54 ADD W0, W8, W20
	0x0380CC58 LDP X20, X19, [X31 + 0x10]
	0x0380CC5C LDP X30, X21, [X31], #0x20
	0x0380CC60 RET
	0x0380CC64 BL 0x1C16F20
	0x0380CC68 ADRP X0, 0x93E000
	0x0380CC6C LDR X0, [X0 + 0x578]
	0x0380CC70 BL 0x1C16D08
	0x0380CC74 MOV X1, X19
	0x0380CC78 MOV X2, X31
	0x0380CC7C BL 0x321EFD0
	0x0380CC80 MOV X19, X0
	0x0380CC84 ADRP X0, 0x8EF000
	0x0380CC88 LDR X0, [X0 + 0x578]
	0x0380CC8C BL 0x1C16D08
	0x0380CC90 BL 0x1C16F10
	0x0380CC94 MOV X20, X0
	0x0380CC98 ADRP X0, 0x90F000
	0x0380CC9C LDR X0, [X0 + 0xD20]
	0x0380CCA0 BL 0x1C16D08
	0x0380CCA4 MOV X2, X0
	0x0380CCA8 MOV X0, X20
	0x0380CCAC MOV X1, X19
	0x0380CCB0 MOV X3, X31
	0x0380CCB4 BL 0x330E16C
	0x0380CCB8 ADRP X0, 0x93E000
	0x0380CCBC LDR X0, [X0 + 0x580]
	0x0380CCC0 BL 0x1C16D08
	0x0380CCC4 MOV X1, X0
	0x0380CCC8 MOV X0, X20
	0x0380CCCC BL 0x1C16DEC
	0x0380CCD0 LDR X8, [X0]
	0x0380CCD4 CMP X8, 0x0
	0x0380CCD8 CSET W0, NE
	0x0380CCDC RET
	0x0380CCE0 LDR X8, [X0]
	0x0380CCE4 CBZ X8, 0x380CD04
	0x0380CCE8 MOVZ W10, 0x1
	0x0380CCEC UBFM W9, W1, 0x1F, 0x1E
	0x0380CCF0 BFM W10, W1, 0x1F, 0x1E
	0x0380CCF4 LDR X11, [X8, W10, SXTW]
	0x0380CCF8 LDR X12, [X8, W9, SXTW]
	0x0380CCFC STR X11, [X8, W9, SXTW]
	0x0380CD00 STR X12, [X8, W10, SXTW]
	0x0380CD04 RET
	0x0380CD08 LDR W0, [X0 + 0x44]
	0x0380CD0C RET
	0x0380CD10 LDR W0, [X0 + 0x54]
	0x0380CD14 RET
	0x0380CD18 LDR W0, [X0 + 0x48]
	0x0380CD1C RET
	0x0380CD20 STP X30, X21, [X31 - 0x20]!
	0x0380CD24 STP X20, X19, [X31 + 0x10]
	0x0380CD28 ADRP X21, 0xBD5000
	0x0380CD2C LDRB W8, [X21 + 0x489]
	0x0380CD30 MOV W19, W1
	0x0380CD34 MOV X20, X0
	0x0380CD38 TBNZ X8, 0x0, 0x380CD50
	0x0380CD3C ADRP X0, 0x93D000
	0x0380CD40 LDR X0, [X0 + 0x6A0]
	0x0380CD44 BL 0x1C16CF4
	0x0380CD48 MOVZ W8, 0x1
	0x0380CD4C STRB W8, [X21 + 0x489]
	0x0380CD50 TBNZ X19, 0x1F, 0x380CD6C
	0x0380CD54 LDR X8, [X20 + 0x30]
	0x0380CD58 CBNZ X8, 0x380CDB4
	0x0380CD5C STR W19, [X20 + 0x48]
	0x0380CD60 LDP X20, X19, [X31 + 0x10]
	0x0380CD64 LDP X30, X21, [X31], #0x20
	0x0380CD68 RET
	0x0380CD6C ADRP X0, 0x8EF000
	0x0380CD70 LDR X0, [X0 + 0x578]
	0x0380CD74 BL 0x1C16D08
	0x0380CD78 BL 0x1C16F10
	0x0380CD7C MOV X19, X0
	0x0380CD80 ADRP X0, 0x93E000
	0x0380CD84 LDR X0, [X0 + 0x588]
	0x0380CD88 BL 0x1C16D08
	0x0380CD8C MOV X20, X0
	0x0380CD90 ADRP X0, 0x8F1000
	0x0380CD94 LDR X0, [X0 + 0xEC8]
	0x0380CD98 BL 0x1C16D08
	0x0380CD9C MOV X2, X0
	0x0380CDA0 MOV X0, X19
	0x0380CDA4 MOV X1, X20
	0x0380CDA8 MOV X3, X31
	0x0380CDAC BL 0x330E16C
	0x0380CDB0 B 0x380CDD0
	0x0380CDB4 ADRP X0, 0x8F0000
	0x0380CDB8 LDR X0, [X0 + 0x758]
	0x0380CDBC BL 0x1C16D08
	0x0380CDC0 BL 0x1C16F10
	0x0380CDC4 MOV X1, X31
	0x0380CDC8 MOV X19, X0
	0x0380CDCC BL 0x3380288
	0x0380CDD0 ADRP X0, 0x93E000
	0x0380CDD4 LDR X0, [X0 + 0x590]
	0x0380CDD8 BL 0x1C16D08
	0x0380CDDC MOV X1, X0
	0x0380CDE0 MOV X0, X19
	0x0380CDE4 BL 0x1C16DEC
	0x0380CDE8 LDR W0, [X0 + 0x4C]
	0x0380CDEC RET
	0x0380CDF0 STP X30, X21, [X31 - 0x20]!
	0x0380CDF4 STP X20, X19, [X31 + 0x10]
	0x0380CDF8 ADRP X21, 0xBD5000
	0x0380CDFC LDRB W8, [X21 + 0x48A]
	0x0380CE00 MOV W19, W1
	0x0380CE04 MOV X20, X0
	0x0380CE08 TBNZ X8, 0x0, 0x380CE20
	0x0380CE0C ADRP X0, 0x93D000
	0x0380CE10 LDR X0, [X0 + 0x6A0]
	0x0380CE14 BL 0x1C16CF4
	0x0380CE18 MOVZ W8, 0x1
	0x0380CE1C STRB W8, [X21 + 0x48A]
	0x0380CE20 TBNZ X19, 0x1F, 0x380CE3C
	0x0380CE24 LDR X8, [X20 + 0x30]
	0x0380CE28 CBNZ X8, 0x380CE84
	0x0380CE2C STR W19, [X20 + 0x4C]
	0x0380CE30 LDP X20, X19, [X31 + 0x10]
	0x0380CE34 LDP X30, X21, [X31], #0x20
	0x0380CE38 RET
	0x0380CE3C ADRP X0, 0x8EF000
	0x0380CE40 LDR X0, [X0 + 0x578]
	0x0380CE44 BL 0x1C16D08
	0x0380CE48 BL 0x1C16F10
	0x0380CE4C MOV X19, X0
	0x0380CE50 ADRP X0, 0x93E000
	0x0380CE54 LDR X0, [X0 + 0x598]
	0x0380CE58 BL 0x1C16D08
	0x0380CE5C MOV X20, X0
	0x0380CE60 ADRP X0, 0x8F1000
	0x0380CE64 LDR X0, [X0 + 0xEC8]
	0x0380CE68 BL 0x1C16D08
	0x0380CE6C MOV X2, X0
	0x0380CE70 MOV X0, X19
	0x0380CE74 MOV X1, X20
	0x0380CE78 MOV X3, X31
	0x0380CE7C BL 0x330E16C
	0x0380CE80 B 0x380CEA0
	0x0380CE84 ADRP X0, 0x8F0000
	0x0380CE88 LDR X0, [X0 + 0x758]
	0x0380CE8C BL 0x1C16D08
	0x0380CE90 BL 0x1C16F10
	0x0380CE94 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X23, 0xBD6000
	009 Move [X31+16], X2
	010 Move [X31+24], X3
	011 Move X22, 0x910000
	012 Move W8, [X23+1145]
	013 Move X22, [X22+3352]
	014 Move X21, X2
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x910000
	022 Move X0, [X0+3352]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+1145], W8
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move W8, [X20]
	032 Move W9, [X20+4]
	033 Move W10, 0x5420
	034 Move X9, W9
	035 NotImplemented "Instruction MOVK not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Add X19, X9, X19
	038 Move W9, 0x5954
	039 NotImplemented "Instruction MOVK not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W9, 0x5254
	042 NotImplemented "Instruction MOVK not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W9, 0x4E54
	045 NotImplemented "Instruction MOVK not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move W9, 0x4854
	048 NotImplemented "Instruction MOVK not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Add X0, X31, 16
	051 Move X1, X31
	052 Move X2, X31
	053 Call PrimitiveValue.ToUInt16, X0, X1
	054 Move W9, 0x5445
	055 NotImplemented "Instruction MOVK not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move W9, 0x5420
	058 NotImplemented "Instruction MOVK not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W9, 0x5420
	061 NotImplemented "Instruction MOVK not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Add X0, X31, 16
	064 Move X1, X31
	065 Move X2, X31
	066 Call PrimitiveValue.ToInt32, X0, X1
	067 Move W9, 0x4954
	068 NotImplemented "Instruction MOVK not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move W9, 0x5954
	071 NotImplemented "Instruction MOVK not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Add X0, X31, 16
	074 Move X1, X31
	075 Move X2, X31
	076 Call PrimitiveValue.ToSByte, X0, X1
	077 Move W9, 0x5420
	078 NotImplemented "Instruction MOVK not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move W9, 0x5445
	081 NotImplemented "Instruction MOVK not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Add X0, X31, 16
	084 Move X1, X31
	085 Move X2, X31
	086 Call PrimitiveValue.ToByte, X0, X1
	087 Move [X19], W0
	088 Add X0, X31, 16
	089 Move X1, X31
	090 Move X2, X31
	091 Call PrimitiveValue.ToSingle, X0, X1
	092 Move [X19], S0
	093 Move X0, [X22]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfEqual {121}
	097 Add X20, X20, 12
	098 Move W8, [X20]
	099 NotImplemented "Instruction LDUR not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X22, X20
	102 Move X0, [X22]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfEqual {143}
	106 Add X20, X20, 12
	107 Move W8, [X20]
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X22, X20
	111 Add X0, X31, 16
	112 Move X1, X31
	113 Move X2, X31
	114 Call PrimitiveValue.ToInt16, X0, X1
	115 NotImplemented "Instruction STRH not yet implemented."
	116 Add X0, X31, 16
	117 Move X1, X31
	118 Move X2, X31
	119 Call PrimitiveValue.ToUInt32, X0, X1
	120 Move [X19], W0
	121 Call 0x1C17DFC
	122 Move X0, [X22]
	123 Move X22, X20
	124 Move W8, [X0+224]
	125 Add X22, X22, 12
	126 Move W23, [X22]
	127 Compare W8, 0
	128 JumpIfNotEqual {130}
	129 Call 0x1C17DFC
	130 Move W21, [X20+8]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move W20, [X22]
	133 Add X0, X31, 16
	134 Move X1, X31
	135 Move X2, X31
	136 Call PrimitiveValue.ToInt32, X0, X1
	137 Move W3, W0
	138 Move X0, X19
	139 Move W1, W21
	140 Move W2, W20
	141 Move X4, X31
	142 Call MemoryHelpers.WriteIntAsExcessKMultipleBits, X0, X1, X2, X3
	143 Call 0x1C17DFC
	144 Move X0, [X22]
	145 Move X22, X20
	146 Move W8, [X0+224]
	147 Add X22, X22, 12
	148 Move W23, [X22]
	149 Compare W8, 0
	150 JumpIfNotEqual {152}
	151 Call 0x1C17DFC
	152 Move W21, [X20+8]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Add X0, X31, 16
	155 Move X1, X31
	156 Move X2, X31
	157 Call PrimitiveValue.ToBoolean, X0, X1
	158 And W2, W0, 1
	159 Move X0, X19
	160 Move W1, W21
	161 Move X3, X31
	162 Call MemoryHelpers.WriteSingleBit, X0, X1, X2
	163 Move W20, [X22]
	164 Add X0, X31, 16
	165 Move X1, X31
	166 Move X2, X31
	167 Call PrimitiveValue.ToUInt32, X0, X1
	168 Move W3, W0
	169 Move X0, X19
	170 Move W1, W21
	171 Move W2, W20
	172 Move X4, X31
	173 Call MemoryHelpers.WriteUIntAsMultipleBits, X0, X1, X2, X3
	174 Move X20, [X31+64]
	175 Move X19, [X31+72]
	176 Move X22, [X31+48]
	177 Move X21, [X31+56]
	178 Move X30, [X31+32]
	179 Move X23, [X31+40]
	180 Add X31, X31, 80
	181 Return 
	182 Move [X31+12], W21
	183 Move X0, 0x93B000
	184 Move X0, [X0+1064]
	185 Call 0x1C17D08
	186 Add X1, X31, 12
	187 Call 0x1C17E04
	188 Move X19, X0
	189 Move X0, 0x910000
	190 Move X0, [X0+3352]
	191 Call 0x1C17D08
	192 Call 0x19913D0
	193 Move W8, [X20]
	194 Move X0, 0x910000
	195 Move [X31+8], W8
	196 Move X0, [X0+3368]
	197 Call 0x1C17D08
	198 Add X1, X31, 8
	199 Call 0x1C17E04
	200 Move X20, X0
	201 Move X0, 0x93F000
	202 Move X0, [X0+1336]
	203 Call 0x1C17D08
	204 Move X1, X19
	205 Move X2, X20
	206 Move X3, X31
	207 Call String.Format, X0, X1, X2
	208 Move X19, X0
	209 Move X0, 0x8F1000
	210 Move X0, [X0+1880]
	211 Call 0x1C17D08
	212 Call 0x1C17F10
	213 Move X1, X19
	214 Move X2, X31
	215 Move X20, X0
	216 Call NotImplementedException..ctor, X0, X1
	217 Move X0, 0x93F000
	218 Move X0, [X0+1344]
	219 Call 0x1C17D08
	220 Move X1, X0
	221 Move X0, X20
	222 Call 0x1C17DEC

Method: System.Void CopyToFrom(System.Void* toStatePtr, System.Void* fromStatePtr)

Disassembly:
	0x0380CE98 MOV X19, X0
	0x0380CE9C BL 0x3380288
	0x0380CEA0 ADRP X0, 0x93E000
	0x0380CEA4 LDR X0, [X0 + 0x5A0]
	0x0380CEA8 BL 0x1C16D08
	0x0380CEAC MOV X1, X0
	0x0380CEB0 MOV X0, X19
	0x0380CEB4 BL 0x1C16DEC
	0x0380CEB8 STR X30, [X31 - 0x20]!
	0x0380CEBC STP X20, X19, [X31 + 0x10]
	0x0380CEC0 ADRP X20, 0xBD5000
	0x0380CEC4 LDRB W8, [X20 + 0x48B]
	0x0380CEC8 MOV X19, X0
	0x0380CECC TBNZ X8, 0x0, 0x380CEFC
	0x0380CED0 ADRP X0, 0x90F000
	0x0380CED4 LDR X0, [X0 + 0x270]
	0x0380CED8 BL 0x1C16CF4
	0x0380CEDC ADRP X0, 0x93E000
	0x0380CEE0 LDR X0, [X0 + 0x5A8]
	0x0380CEE4 BL 0x1C16CF4
	0x0380CEE8 ADRP X0, 0x93E000
	0x0380CEEC LDR X0, [X0 + 0x5B0]
	0x0380CEF0 BL 0x1C16CF4
	0x0380CEF4 MOVZ W8, 0x1
	0x0380CEF8 STRB W8, [X20 + 0x48B]
	0x0380CEFC LDRB W8, [X19 + 0x58]
	0x0380CF00 CBZ W8, 0x380CF0C
	0x0380CF04 LDR W0, [X19 + 0x5C]
	0x0380CF08 B 0x380CF3C
	0x0380CF0C ADRP X19, 0x90F000
	0x0380CF10 LDR X19, [X19 + 0x270]
	0x0380CF14 LDR X0, [X19]
	0x0380CF18 LDR W8, [X0 + 0xE0]
	0x0380CF1C CBNZ W8, 0x380CF28
	0x0380CF20 BL 0x1C16DFC
	0x0380CF24 LDR X0, [X19]
	0x0380CF28 LDR X8, [X0 + 0xB8]
	0x0380CF2C LDR X8, [X8]
	0x0380CF30 CBZ X8, 0x380CF48
	0x0380CF34 LDR W8, [X8 + 0xA8]
	0x0380CF38 AND W0, W8, 0xFFFFFFF7
	0x0380CF3C LDP X20, X19, [X31 + 0x10]
	0x0380CF40 LDR X30, [X31], #0x20
	0x0380CF44 RET
	0x0380CF48 BL 0x1C16F20
	0x0380CF4C SUB X31, X31, 0x30
	0x0380CF50 STP X30, X21, [X31 + 0x10]
	0x0380CF54 STP X20, X19, [X31 + 0x20]
	0x0380CF58 ADRP X21, 0xBD5000
	0x0380CF5C LDRB W8, [X21 + 0x48C]
	0x0380CF60 MOV W20, W1
	0x0380CF64 MOV X19, X0
	0x0380CF68 TBNZ X8, 0x0, 0x380CF80
	0x0380CF6C ADRP X0, 0x93E000
	0x0380CF70 LDR X0, [X0 + 0x5B8]
	0x0380CF74 BL 0x1C16CF4
	0x0380CF78 MOVZ W8, 0x1
	0x0380CF7C STRB W8, [X21 + 0x48C]
	0x0380CF80 CBZ W20, 0x380CFB8
	0x0380CF84 ADRP X8, 0x93E000
	0x0380CF88 LDR X8, [X8 + 0x5B8]
	0x0380CF8C ADD X0, X31, 0x8
	0x0380CF90 MOV W1, W20
	0x0380CF94 STR X31, [X31 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xBD6000
	008 Move X22, 0x910000
	009 Move W8, [X23+1146]
	010 Move X22, [X22+3352]
	011 Move X21, X2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x910000
	019 Move X0, [X0+3352]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+1146], W8
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move W8, [X20+8]
	029 Compare W8, 0
	030 JumpIfNotEqual {60}
	031 Move X0, [X22]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move W8, [X20+12]
	037 And W31, W8, 7
	038 Move X0, [X22]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move W22, [X20+4]
	044 Move X0, X20
	045 Add X21, X22, X21
	046 Call InputStateBlock.get_alignedSizeInBytes, X0
	047 Add X8, X22, X19
	048 Move X1, X21
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move W2, W0
	054 Move X0, X8
	055 Move X3, X31
	056 Move X30, [X31+48]
	057 Move X23, [X31+56]
	058 Call UnsafeUtility.MemCpy, X0, X1, X2
	059 Return 
	060 Move X0, 0x8F1000
	061 Move X0, [X0+1880]
	062 Call 0x1C17D08
	063 Call 0x1C17F10
	064 Move X19, X0
	065 Move X0, 0x93F000
	066 Move X0, [X0+1352]
	067 Call 0x1C17D08
	068 Move X1, X0
	069 Move X0, X19
	070 Move X2, X31
	071 Call NotImplementedException..ctor, X0, X1
	072 Move X0, 0x93F000
	073 Move X0, [X0+1360]
	074 Call 0x1C17D08
	075 Move X1, X0
	076 Move X0, X19
	077 Call 0x1C17DEC

Method: System.Void .cctor()

Disassembly:
	0x0380CF98 LDR X2, [X8]
	0x0380CF9C BL 0x24345B8
	0x0380CFA0 LDR X8, [X31 + 0x8]
	0x0380CFA4 LDP X30, X21, [X31 + 0x10]
	0x0380CFA8 STR X8, [X19 + 0x58]
	0x0380CFAC LDP X20, X19, [X31 + 0x20]
	0x0380CFB0 ADD X31, X31, 0x30
	0x0380CFB4 RET
	0x0380CFB8 ADRP X0, 0x8EF000
	0x0380CFBC LDR X0, [X0 + 0x578]
	0x0380CFC0 BL 0x1C16D08
	0x0380CFC4 BL 0x1C16F10
	0x0380CFC8 MOV X19, X0
	0x0380CFCC ADRP X0, 0x93E000
	0x0380CFD0 LDR X0, [X0 + 0x5C0]
	0x0380CFD4 BL 0x1C16D08
	0x0380CFD8 MOV X20, X0
	0x0380CFDC ADRP X0, 0x8F1000
	0x0380CFE0 LDR X0, [X0 + 0xEC8]
	0x0380CFE4 BL 0x1C16D08
	0x0380CFE8 MOV X2, X0
	0x0380CFEC MOV X0, X19
	0x0380CFF0 MOV X1, X20
	0x0380CFF4 MOV X3, X31
	0x0380CFF8 BL 0x330E16C
	0x0380CFFC ADRP X0, 0x93E000
	0x0380D000 LDR X0, [X0 + 0x5C8]
	0x0380D004 BL 0x1C16D08
	0x0380D008 MOV X1, X0
	0x0380D00C MOV X0, X19
	0x0380D010 BL 0x1C16DEC
	0x0380D014 SUB X31, X31, 0x30
	0x0380D018 STP X30, X21, [X31 + 0x10]
	0x0380D01C STP X20, X19, [X31 + 0x20]
	0x0380D020 ADRP X21, 0xBD4000
	0x0380D024 ADRP X20, 0x937000
	0x0380D028 LDRB W8, [X21 + 0x48D]
	0x0380D02C LDR X20, [X20 + 0xF78]
	0x0380D030 MOV X19, X0
	0x0380D034 TBNZ X8, 0x0, 0x380D04C
	0x0380D038 ADRP X0, 0x937000
	0x0380D03C LDR X0, [X0 + 0xF78]
	0x0380D040 BL 0x1C16CF4
	0x0380D044 MOVZ W8, 0x1
	0x0380D048 STRB W8, [X21 + 0x48D]
	0x0380D04C LDR X1, [X19 + 0x20]
	0x0380D050 LDR W3, [X19 + 0x28]
	0x0380D054 LDR X4, [X20]
	0x0380D058 ADD X0, X31, 0x0
	0x0380D05C MOV W2, W31
	0x0380D060 STP X31, X31, [X31]
	0x0380D064 BL 0x24FD82C
	0x0380D068 LDP X0, X1, [X31]
	0x0380D06C LDP X20, X19, [X31 + 0x20]
	0x0380D070 LDP X30, X21, [X31 + 0x10]
	0x0380D074 ADD X31, X31, 0x30
	0x0380D078 RET
	0x0380D07C SUB X31, X31, 0x30
	0x0380D080 STP X30, X21, [X31 + 0x10]
	0x0380D084 STP X20, X19, [X31 + 0x20]
	0x0380D088 MOV X19, X0
	0x0380D08C TBNZ X1, 0x1F, 0x380D0E0
	0x0380D090 LDR W8, [X19 + 0x44]
	0x0380D094 CMP W8, W1
	0x0380D098 B.LE 0x380D0E0
	0x0380D09C LDR W8, [X19 + 0x50]
	0x0380D0A0 LDR W9, [X19 + 0x48]
	0x0380D0A4 MOV X0, X19
	0x0380D0A8 ADD W8, W8, W1
	0x0380D0AC SDIV W10, W8, W9
	0x0380D0B0 MSUB W20, W10, W9, W8
	0x0380D0B4 MOV W1, W20
	0x0380D0B8 BL 0x380D1A4
	0x0380D0BC CBZ X0, 0x380D188
	0x0380D0C0 LDR W8, [X0 + 0x8]
	0x0380D0C4 ADD W1, W20, 0x1
	0x0380D0C8 MOV X0, X19
	0x0380D0CC LDP X20, X19, [X31 + 0x20]
	0x0380D0D0 LDP X30, X21, [X31 + 0x10]
	0x0380D0D4 BFM X1, X8, 0x20, 0x1F
	0x0380D0D8 ADD X31, X31, 0x30
	0x0380D0DC RET
	0x0380D0E0 STR W1, [X31 + 0xC]
	0x0380D0E4 ADRP X20, 0x8E6000
	0x0380D0E8 LDR X20, [X20 + 0x758]
	0x0380D0EC MOV X0, X20
	0x0380D0F0 BL 0x1C16D08
	0x0380D0F4 ADD X1, X31, 0xC
	0x0380D0F8 BL 0x1C16E04
	0x0380D0FC LDR W8, [X19 + 0x44]
	0x0380D100 MOV X21, X0
	0x0380D104 MOV X0, X20
	0x0380D108 STR W8, [X31 + 0x8]
	0x0380D10C BL 0x1C16D08
	0x0380D110 ADD X1, X31, 0x8
	0x0380D114 BL 0x1C16E04
	0x0380D118 MOV X19, X0
	0x0380D11C ADRP X0, 0x912000
	0x0380D120 LDR X0, [X0 + 0x70]
	0x0380D124 BL 0x1C16D08
	0x0380D128 MOV X1, X21
	0x0380D12C MOV X2, X19
	0x0380D130 MOV X3, X31
	0x0380D134 BL 0x3227BD4
	0x0380D138 MOV X19, X0
	0x0380D13C ADRP X0, 0x8EE000
	0x0380D140 LDR X0, [X0 + 0x760]
	0x0380D144 BL 0x1C16D08
	0x0380D148 BL 0x1C16F10
	0x0380D14C MOV X20, X0
	0x0380D150 ADRP X0, 0x8F1000
	0x0380D154 LDR X0, [X0 + 0x130]
	0x0380D158 BL 0x1C16D08
	0x0380D15C MOV X2, X0
	0x0380D160 MOV X0, X20
	0x0380D164 MOV X1, X19
	0x0380D168 MOV X3, X31
	0x0380D16C BL 0x3311888
	0x0380D170 ADRP X0, 0x93D000
	0x0380D174 LDR X0, [X0 + 0x5D0]
	0x0380D178 BL 0x1C16D08
	0x0380D17C MOV X1, X0
	0x0380D180 MOV X0, X20
	0x0380D184 BL 0x1C16DEC
	0x0380D188 BL 0x1C16F20
	0x0380D18C LDR W8, [X0 + 0x50]
	0x0380D190 LDR W9, [X0 + 0x48]
	0x0380D194 ADD W8, W8, W1
	0x0380D198 SDIV W10, W8, W9
	0x0380D19C MSUB W0, W10, W9, W8
	0x0380D1A0 RET
	0x0380D1A4 STP X30, X21, [X31 - 0x20]!
	0x0380D1A8 STP X20, X19, [X31 + 0x10]
	0x0380D1AC ADRP X21, 0xBD4000
	0x0380D1B0 LDRB W8, [X21 + 0x499]
	0x0380D1B4 MOV W19, W1
	0x0380D1B8 MOV X20, X0
	0x0380D1BC TBNZ X8, 0x0, 0x380D1D4
	0x0380D1C0 ADRP X0, 0x93C000
	0x0380D1C4 LDR X0, [X0 + 0x6A0]
	0x0380D1C8 BL 0x1C16CF4
	0x0380D1CC MOVZ W8, 0x1
	0x0380D1D0 STRB W8, [X21 + 0x499]
	0x0380D1D4 LDR X8, [X20 + 0x30]
	0x0380D1D8 CBZ X8, 0x380D234
	0x0380D1DC TBNZ X19, 0x1F, 0x380D200
	0x0380D1E0 LDR W8, [X20 + 0x48]
	0x0380D1E4 CMP W8, W19
	0x0380D1E8 B.LE 0x380D200
	0x0380D1EC MOV X0, X20
	0x0380D1F0 MOV W1, W19
	0x0380D1F4 LDP X20, X19, [X31 + 0x10]
	0x0380D1F8 LDP X30, X21, [X31], #0x20
	0x0380D1FC B 0x380E878
	0x0380D200 ADRP X0, 0x8EE000
	0x0380D204 LDR X0, [X0 + 0x760]
	0x0380D208 BL 0x1C16D08
	0x0380D20C BL 0x1C16F10
	0x0380D210 MOV X19, X0
	0x0380D214 ADRP X0, 0x8F1000
	0x0380D218 LDR X0, [X0 + 0x130]
	0x0380D21C BL 0x1C16D08
	0x0380D220 MOV X1, X0
	0x0380D224 MOV X0, X19
	0x0380D228 MOV X2, X31
	0x0380D22C BL 0x3316014
	0x0380D230 B 0x380D264
	0x0380D234 ADRP X0, 0x8E6000
	0x0380D238 LDR X0, [X0 + 0x5B0]
	0x0380D23C BL 0x1C16D08
	0x0380D240 BL 0x1C16F10
	0x0380D244 MOV X19, X0
	0x0380D248 ADRP X0, 0x93D000
	0x0380D24C LDR X0, [X0 + 0x5D8]
	0x0380D250 BL 0x1C16D08
	0x0380D254 MOV X1, X0
	0x0380D258 MOV X0, X19
	0x0380D25C MOV X2, X31
	0x0380D260 BL 0x337DF1C
	0x0380D264 ADRP X0, 0x93D000
	0x0380D268 LDR X0, [X0 + 0x5E0]
	0x0380D26C BL 0x1C16D08
	0x0380D270 MOV X1, X0
	0x0380D274 MOV X0, X19
	0x0380D278 BL 0x1C16DEC
	0x0380D27C STR X30, [X31 - 0x10]!
	0x0380D280 ADD W8, W2, 0x1
	0x0380D284 STR X1, [X0]
	0x0380D288 STR W8, [X0 + 0x8]
	0x0380D28C CBZ X3, 0x380D2A0
	0x0380D290 LDR W8, [X3 + 0x8]
	0x0380D294 STR W8, [X0 + 0xC]
	0x0380D298 LDR X30, [X31], #0x10
	0x0380D29C RET
	0x0380D2A0 BL 0x1C16F20
	0x0380D2A4 SUB X31, X31, 0x40
	0x0380D2A8 STR X30, [X31 + 0x10]
	0x0380D2AC STP X22, X21, [X31 + 0x20]
	0x0380D2B0 STP X20, X19, [X31 + 0x30]
	0x0380D2B4 MOV X19, X0
	0x0380D2B8 TBNZ X1, 0x1F, 0x380D328
	0x0380D2BC LDR W8, [X19 + 0x44]
	0x0380D2C0 CMP W8, W1
	0x0380D2C4 B.LE 0x380D328
	0x0380D2C8 LDR W8, [X19 + 0x50]
	0x0380D2CC LDR W9, [X19 + 0x48]
	0x0380D2D0 MOV X0, X19
	0x0380D2D4 MOV X20, X3
	0x0380D2D8 ADD W8, W8, W1
	0x0380D2DC SDIV W10, W8, W9
	0x0380D2E0 MSUB W22, W10, W9, W8
	0x0380D2E4 MOV W1, W22
	0x0380D2E8 MOV X21, X2
	0x0380D2EC BL 0x380D1A4
	0x0380D2F0 CBZ X0, 0x380D3D0
	0x0380D2F4 LDR W8, [X0 + 0x8]
	0x0380D2F8 ADD W9, W22, 0x1
	0x0380D2FC ADD X0, X31, 0x0
	0x0380D300 MOV X1, X21
	0x0380D304 MOV X2, X20
	0x0380D308 STR X19, [X31]
	0x0380D30C STP W9, W8, [X31 + 0x8]
	0x0380D310 BL 0x380D3D4
	0x0380D314 LDP X20, X19, [X31 + 0x30]
	0x0380D318 LDP X22, X21, [X31 + 0x20]
	0x0380D31C LDR X30, [X31 + 0x10]
	0x0380D320 ADD X31, X31, 0x40
	0x0380D324 RET
	0x0380D328 STR W1, [X31]
	0x0380D32C ADRP X20, 0x8E6000
	0x0380D330 LDR X20, [X20 + 0x758]
	0x0380D334 MOV X0, X20
	0x0380D338 BL 0x1C16D08
	0x0380D33C ADD X1, X31, 0x0
	0x0380D340 BL 0x1C16E04
	0x0380D344 LDR W8, [X19 + 0x44]
	0x0380D348 MOV X21, X0
	0x0380D34C MOV X0, X20
	0x0380D350 STR W8, [X31 + 0x1C]
	0x0380D354 BL 0x1C16D08
	0x0380D358 ADD X1, X31, 0x1C
	0x0380D35C BL 0x1C16E04
	0x0380D360 MOV X19, X0
	0x0380D364 ADRP X0, 0x912000
	0x0380D368 LDR X0, [X0 + 0x70]
	0x0380D36C BL 0x1C16D08
	0x0380D370 MOV X1, X21
	0x0380D374 MOV X2, X19
	0x0380D378 MOV X3, X31
	0x0380D37C BL 0x3227BD4
	0x0380D380 MOV X19, X0
	0x0380D384 ADRP X0, 0x8EE000
	0x0380D388 LDR X0, [X0 + 0x760]
	0x0380D38C BL 0x1C16D08
	0x0380D390 BL 0x1C16F10
	0x0380D394 MOV X20, X0
	0x0380D398 ADRP X0, 0x8F1000
	0x0380D39C LDR X0, [X0 + 0x130]
	0x0380D3A0 BL 0x1C16D08
	0x0380D3A4 MOV X2, X0

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+160], X30
	003 Move [X31+176], X20
	004 Move [X31+184], X19
	005 Move X20, 0xBD6000
	006 Move X19, 0x910000
	007 Move W8, [X20+1147]
	008 Move X19, [X19+3352]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x910000
	014 Move X0, [X0+3352]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+1147], W8
	018 Move X8, [X19]
	019 Add X0, X31, 168
	020 Move W1, 66
	021 Move W2, 73
	022 Move X8, [X8+184]
	023 Move W3, 84
	024 Move W4, 32
	025 Move X5, X31
	026 Move [X8], W31
	027 Move [X31+168], W31
	028 Call FourCC..ctor, X0, X1, X2, X3, X4
	029 Move X8, [X19]
	030 Move W9, [X31+168]
	031 Add X0, X31, 152
	032 Move W1, 83
	033 Move X8, [X8+184]
	034 Move W2, 66
	035 Move W3, 73
	036 Move W4, 84
	037 Move X5, X31
	038 Move [X8+4], W9
	039 Move [X31+152], W31
	040 Call FourCC..ctor, X0, X1, X2, X3, X4
	041 Move X8, [X19]
	042 Move W9, [X31+152]
	043 Add X0, X31, 144
	044 Move W1, 73
	045 Move X8, [X8+184]
	046 Move W2, 78
	047 Move W3, 84
	048 Move W4, 32
	049 Move X5, X31
	050 Move [X8+8], W9
	051 Move [X31+144], W31
	052 Call FourCC..ctor, X0, X1, X2, X3, X4
	053 Move X8, [X19]
	054 Move W9, [X31+144]
	055 Add X0, X31, 136
	056 Move W1, 85
	057 Move X8, [X8+184]
	058 Move W2, 73
	059 Move W3, 78
	060 Move W4, 84
	061 Move X5, X31
	062 Move [X8+12], W9
	063 Move [X31+136], W31
	064 Call FourCC..ctor, X0, X1, X2, X3, X4
	065 Move X8, [X19]
	066 Move W9, [X31+136]
	067 Add X0, X31, 128
	068 Move W1, 83
	069 Move X8, [X8+184]
	070 Move W2, 72
	071 Move W3, 82
	072 Move W4, 84
	073 Move X5, X31
	074 Move [X8+16], W9
	075 Move [X31+128], W31
	076 Call FourCC..ctor, X0, X1, X2, X3, X4
	077 Move X8, [X19]
	078 Move W9, [X31+128]
	079 Add X0, X31, 120
	080 Move W1, 85
	081 Move X8, [X8+184]
	082 Move W2, 83
	083 Move W3, 72
	084 Move W4, 84
	085 Move X5, X31
	086 Move [X8+20], W9
	087 Move [X31+120], W31
	088 Call FourCC..ctor, X0, X1, X2, X3, X4
	089 Move X8, [X19]
	090 Move W9, [X31+120]
	091 Add X0, X31, 112
	092 Move W1, 66
	093 Move X8, [X8+184]
	094 Move W2, 89
	095 Move W3, 84
	096 Move W4, 69
	097 Move X5, X31
	098 Move [X8+24], W9
	099 Move [X31+112], W31
	100 Call FourCC..ctor, X0, X1, X2, X3, X4
	101 Move X8, [X19]
	102 Move W9, [X31+112]
	103 Add X0, X31, 104
	104 Move W1, 83
	105 Move X8, [X8+184]
	106 Move W2, 66
	107 Move W3, 89
	108 Move W4, 84
	109 Move X5, X31
	110 Move [X8+28], W9
	111 Move [X31+104], W31
	112 Call FourCC..ctor, X0, X1, X2, X3, X4
	113 Move X8, [X19]
	114 Move W9, [X31+104]
	115 Add X0, X31, 96
	116 Move W1, 76
	117 Move X8, [X8+184]
	118 Move W2, 78
	119 Move W3, 71
	120 Move W4, 32
	121 Move X5, X31
	122 Move [X8+32], W9
	123 Move [X31+96], W31
	124 Call FourCC..ctor, X0, X1, X2, X3, X4
	125 Move X8, [X19]
	126 Move W9, [X31+96]
	127 Add X0, X31, 88
	128 Move W1, 85
	129 Move X8, [X8+184]
	130 Move W2, 76
	131 Move W3, 78
	132 Move W4, 71
	133 Move X5, X31
	134 Move [X8+36], W9
	135 Move [X31+88], W31
	136 Call FourCC..ctor, X0, X1, X2, X3, X4
	137 Move X8, [X19]
	138 Move W9, [X31+88]
	139 Add X0, X31, 80
	140 Move W1, 70
	141 Move X8, [X8+184]
	142 Move W2, 76
	143 Move W3, 84
	144 Move W4, 32
	145 Move X5, X31
	146 Move [X8+40], W9
	147 Move [X31+80], W31
	148 Call FourCC..ctor, X0, X1, X2, X3, X4
	149 Move X8, [X19]
	150 Move W9, [X31+80]
	151 Add X0, X31, 72
	152 Move W1, 68
	153 Move X8, [X8+184]
	154 Move W2, 66
	155 Move W3, 76
	156 Move W4, 32
	157 Move X5, X31
	158 Move [X8+44], W9
	159 Move [X31+72], W31
	160 Call FourCC..ctor, X0, X1, X2, X3, X4
	161 Move X8, [X19]
	162 Move W9, [X31+72]
	163 Add X0, X31, 64
	164 Move W1, 86
	165 Move X8, [X8+184]
	166 Move W2, 69
	167 Move W3, 67
	168 Move W4, 50
	169 Move X5, X31
	170 Move [X8+48], W9
	171 Move [X31+64], W31
	172 Call FourCC..ctor, X0, X1, X2, X3, X4
	173 Move X8, [X19]
	174 Move W9, [X31+64]
	175 Add X0, X31, 56
	176 Move W1, 86
	177 Move X8, [X8+184]
	178 Move W2, 69
	179 Move W3, 67
	180 Move W4, 51
	181 Move X5, X31
	182 Move [X8+52], W9
	183 Move [X31+56], W31
	184 Call FourCC..ctor, X0, X1, X2, X3, X4
	185 Move X8, [X19]
	186 Move W9, [X31+56]
	187 Add X0, X31, 48
	188 Move W1, 81
	189 Move X8, [X8+184]
	190 Move W2, 85
	191 Move W3, 65
	192 Move W4, 84
	193 Move X5, X31
	194 Move [X8+56], W9
	195 Move [X31+48], W31
	196 Call FourCC..ctor, X0, X1, X2, X3, X4
	197 Move X8, [X19]
	198 Move W9, [X31+48]
	199 Add X0, X31, 40
	200 Move W1, 86
	201 Move X8, [X8+184]
	202 Move W2, 67
	203 Move W3, 50
	204 Move W4, 83
	205 Move X5, X31
	206 Move [X8+60], W9
	207 Move [X31+40], W31
	208 Call FourCC..ctor, X0, X1, X2, X3, X4
	209 Move X8, [X19]
	210 Move W9, [X31+40]
	211 Add X0, X31, 32
	212 Move W1, 86
	213 Move X8, [X8+184]
	214 Move W2, 67
	215 Move W3, 51
	216 Move W4, 83
	217 Move X5, X31
	218 Move [X8+64], W9
	219 Move [X31+32], W31
	220 Call FourCC..ctor, X0, X1, X2, X3, X4
	221 Move X8, [X19]
	222 Move W9, [X31+32]
	223 Add X0, X31, 24
	224 Move W1, 86
	225 Move X8, [X8+184]
	226 Move W2, 67
	227 Move W3, 50
	228 Move W4, 66
	229 Move X5, X31
	230 Move [X8+68], W9
	231 Move [X31+24], W31
	232 Call FourCC..ctor, X0, X1, X2, X3, X4
	233 Move X8, [X19]
	234 Move W9, [X31+24]
	235 Add X0, X31, 16
	236 Move W1, 86
	237 Move X8, [X8+184]
	238 Move W2, 67
	239 Move W3, 51
	240 Move W4, 66
	241 Move X5, X31
	242 Move [X8+72], W9
	243 Move [X31+16], W31
	244 Call FourCC..ctor, X0, X1, X2, X3, X4
	245 Move X8, [X19]
	246 Move W9, [X31+16]
	247 Add X0, X31, 8
	248 Move W1, 80
	249 Move X8, [X8+184]
	250 Move W2, 111
	251 Move W3, 115
	252 Move W4, 101
	253 Move X5, X31
	254 Move [X8+76], W9
	255 Move [X31+8], W31
	256 Call FourCC..ctor, X0, X1, X2, X3, X4
	257 Move X8, [X19]
	258 Move W9, [X31+8]
	259 Move X20, [X31+176]
	260 Move X19, [X31+184]
	261 Move X30, [X31+160]
	262 Move X8, [X8+184]
	263 Move [X8+80], W9
	264 Add X31, X31, 192
	265 Return 

