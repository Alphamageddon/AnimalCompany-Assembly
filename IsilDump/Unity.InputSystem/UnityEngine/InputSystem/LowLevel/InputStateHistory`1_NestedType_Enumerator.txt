Type: UnityEngine.InputSystem.LowLevel.InputStateHistory`1/Enumerator

Method: System.Void .ctor(UnityEngine.InputSystem.LowLevel.InputStateHistory`1<TValue> history)

Disassembly:
	0x02BCDD64 RET
	0x02BCDD68 LDR V0, [X1]
	0x02BCDD6C MOVN W8, 0x0
	0x02BCDD70 STUR X31, [X0 + 0x14]

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0], X1
	005 Move [X0+8], W8
	006 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x02BCDD74 STUR X31, [X0 + 0x24]
	0x02BCDD78 STR W8, [X0 + 0x10]
	0x02BCDD7C STR V0, [X0]
	0x02BCDD80 STUR X31, [X0 + 0x1C]
	0x02BCDD84 RET
	0x02BCDD88 RET
	0x02BCDD8C SUB X31, X31, 0x50
	0x02BCDD90 STR X30, [X31 + 0x20]
	0x02BCDD94 STP X22, X21, [X31 + 0x30]
	0x02BCDD98 STP X20, X19, [X31 + 0x40]
	0x02BCDD9C LDR W8, [X0 + 0x10]
	0x02BCDDA0 LDR W20, [X0 + 0x8]
	0x02BCDDA4 MOV X19, X0
	0x02BCDDA8 ADD W21, W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Compare X8, 0
	004 JumpIfEqual {14}
	005 Move W9, [X0+8]
	006 Move W8, [X8+68]
	007 Add W9, W9, 1
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move [X0+8], W9
	010 NotImplemented "Instruction CMP not yet implemented."
	011 NotImplemented "Instruction CSET not yet implemented."
	012 Move X30, [X31+16]
	013 Return X0
	014 Call 0x1C17F20

Method: System.Void Reset()

Disassembly:
	0x02BCDDAC CMP W21, W20
	0x02BCDDB0 STR W21, [X0 + 0x10]
	0x02BCDDB4 B.GE 0x2BCDDF0

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0+8], W8
	005 Return 

Method: UnityEngine.InputSystem.LowLevel.InputStateHistory`1/Record<TValue> get_Current()

Disassembly:
	0x02BCDDB8 LDR X0, [X1 + 0x20]
	0x02BCDDBC LDR X22, [X19]
	0x02BCDDC0 LDRB W8, [X0 + 0x135]
	0x02BCDDC4 TBNZ X8, 0x0, 0x2BCDDCC
	0x02BCDDC8 BL 0x1C5C684
	0x02BCDDCC MOVZ W8, 0x18
	0x02BCDDD0 SMADDL X8, X21, X8, X22
	0x02BCDDD4 LDR V0, [X8]
	0x02BCDDD8 LDR X8, [X8 + 0x10]
	0x02BCDDDC STR V0, [X31]
	0x02BCDDE0 STR X8, [X31 + 0x10]
	0x02BCDDE4 STUR X8, [X19 + 0x24]
	0x02BCDDE8 STUR V0, [X19 + 0x14]
	0x02BCDDEC B 0x2BCDDFC
	0x02BCDDF0 STUR X31, [X19 + 0x1C]
	0x02BCDDF4 STUR X31, [X19 + 0x14]
	0x02BCDDF8 STUR X31, [X19 + 0x24]
	0x02BCDDFC CMP W21, W20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, [X0]
	005 Compare X19, 0
	006 JumpIfEqual {25}
	007 Move X8, X0
	008 Move X0, [X1+32]
	009 Move W20, [X8+8]
	010 Move W9, [X0+309]
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {16}
	015 Call 0x1C5D684
	016 Move X8, [X0+192]
	017 Move X0, X19
	018 Move W1, W20
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X2, [X8+16]
	022 Move X30, [X31+32]
	023 Call 0x2E1316C, X0, X1
	024 Return X0
	025 Call 0x1C17F20

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x02BCDE00 LDP X20, X19, [X31 + 0x40]
	0x02BCDE04 LDP X22, X21, [X31 + 0x30]
	0x02BCDE08 LDR X30, [X31 + 0x20]
	0x02BCDE0C CSET W0, LT
	0x02BCDE10 ADD X31, X31, 0x50
	0x02BCDE14 RET
	0x02BCDE18 MOVN W8, 0x0
	0x02BCDE1C STR W8, [X0 + 0x10]
	0x02BCDE20 RET
	0x02BCDE24 LDUR X9, [X0 + 0x24]
	0x02BCDE28 LDUR V0, [X0 + 0x14]
	0x02BCDE2C STR X9, [X8 + 0x10]
	0x02BCDE30 STR V0, [X8]
	0x02BCDE34 RET
	0x02BCDE38 SUB X31, X31, 0x40
	0x02BCDE3C STR X30, [X31 + 0x20]
	0x02BCDE40 STP X20, X19, [X31 + 0x30]
	0x02BCDE44 LDR X8, [X1 + 0x20]
	0x02BCDE48 MOV X19, X0
	0x02BCDE4C ADD X9, X8, 0x135
	0x02BCDE50 LDRH W9, [X9]
	0x02BCDE54 TBNZ X9, 0x0, 0x2BCDE70
	0x02BCDE58 MOV X0, X8
	0x02BCDE5C MOV X20, X1
	0x02BCDE60 BL 0x1C5C684
	0x02BCDE64 LDR X8, [X20 + 0x20]
	0x02BCDE68 ADD X9, X8, 0x135
	0x02BCDE6C LDRH W9, [X9]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X8, [X1+32]
	006 Move X19, X1
	007 Move X20, X0
	008 Move W9, [X8+309]
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {16}
	013 Move X0, X8
	014 Call 0x1C5D684
	015 Move X8, X0
	016 Move X8, [X8+192]
	017 Move X0, X20
	018 Move X1, [X8+32]
	019 Call 0x2BCDDB8, X0
	020 Move [X31], X0
	021 Move [X31+8], X1
	022 Move X0, [X19+32]
	023 Move W8, [X0+309]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {29}
	028 Call 0x1C5D684
	029 Move X8, [X0+192]
	030 Add X1, X31, 0
	031 Move X0, [X8+24]
	032 Call 0x1C17E04
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X30, [X31+16]
	036 Add X31, X31, 48
	037 Return X0

Method: System.Void Dispose()

Disassembly:
	0x02BCDE70 LDUR X10, [X19 + 0x24]

ISIL:
	001 Return 

