Type: UnityEngine.InputSystem.LowLevel.InputEventTrace/Enumerator

Method: System.Void .ctor(UnityEngine.InputSystem.LowLevel.InputEventTrace trace)

Disassembly:
	0x0380621C BL 0x3805974
	0x03806220 TBZ X0, 0x0, 0x380642C
	0x03806224 LDR W9, [X20 + 0x14]
	0x03806228 LDR X8, [X20 + 0x20]
	0x0380622C ADD W9, W9, 0x1
	0x03806230 STR W9, [X20 + 0x14]
	0x03806234 CBZ X8, 0x3806448
	0x03806238 LDR X8, [X8 + 0x20]
	0x0380623C STR X8, [X19]
	0x03806240 TBZ X21, 0x0, 0x3806424
	0x03806244 CBZ X8, 0x3806250
	0x03806248 LDR W22, [X8]
	0x0380624C B 0x3806254
	0x03806250 MOV W22, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Object..ctor, X0
	008 Move [X19+16], X20
	009 Compare X20, 0
	010 JumpIfEqual {17}
	011 Move W8, [X20+16]
	012 Move [X19+24], W8
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Return 
	017 Call 0x1C17F20

Method: System.Void Dispose()

Disassembly:
	0x03806968 LDR X21, [X8 + 0x8]
	0x0380696C CBNZ X21, 0x38069C0
	0x03806970 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X0+16], X31
	002 Move [X0+32], X31
	003 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x03806974 CBNZ W8, 0x3806980
	0x03806978 BL 0x1C16DFC
	0x0380697C LDR X0, [X23]
	0x03806980 ADRP X9, 0x944000
	0x03806984 LDR X8, [X0 + 0xB8]
	0x03806988 LDR X9, [X9 + 0x398]
	0x0380698C LDR X22, [X8]
	0x03806990 LDR X0, [X9]
	0x03806994 BL 0x1C16F10
	0x03806998 ADRP X8, 0x944000
	0x0380699C LDR X8, [X8 + 0x3B0]
	0x038069A0 MOV X1, X22
	0x038069A4 MOV X3, X31
	0x038069A8 MOV X21, X0
	0x038069AC LDR X2, [X8]
	0x038069B0 BL 0x2958E98
	0x038069B4 LDR X8, [X23]
	0x038069B8 LDR X8, [X8 + 0xB8]
	0x038069BC STR X21, [X8 + 0x8]
	0x038069C0 CBZ X20, 0x3806A74
	0x038069C4 ADRP X8, 0x944000
	0x038069C8 LDR X8, [X8 + 0x3A8]
	0x038069CC MOV X0, X20
	0x038069D0 MOV X1, X21
	0x038069D4 LDR X2, [X8]
	0x038069D8 BL 0x2FD8F58
	0x038069DC LDR X8, [X19 + 0x20]
	0x038069E0 CBZ X8, 0x3806A74
	0x038069E4 ADRP X9, 0x8EE000
	0x038069E8 LDR X9, [X9 + 0xE70]
	0x038069EC STR X31, [X8 + 0x10]
	0x038069F0 STR X31, [X8 + 0x20]
	0x038069F4 MOVZ X8, 0xBFF00000
	0x038069F8 MOVN W10, 0x0
	0x038069FC STR X31, [X19 + 0x20]
	0x03806A00 STR X20, [X19 + 0x88]
	0x03806A04 STR W31, [X19 + 0x14]
	0x03806A08 STRB W31, [X19 + 0x10]
	0x03806A0C STR X8, [X19 + 0x70]
	0x03806A10 STR W10, [X19 + 0x80]
	0x03806A14 LDR X0, [X9]
	0x03806A18 ADRP X20, 0x944000
	0x03806A1C ADRP X21, 0x915000
	0x03806A20 LDR X20, [X20 + 0x310]
	0x03806A24 LDR X21, [X21 + 0x270]
	0x03806A28 BL 0x1C16F10
	0x03806A2C LDR X2, [X20]
	0x03806A30 MOV X1, X19
	0x03806A34 MOV X3, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+16]
	005 Compare X8, 0
	006 JumpIfEqual {17}
	007 Move W9, [X8+16]
	008 Move W10, [X0+24]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Add X1, X0, 32
	013 Move X0, X8
	014 Move X30, [X31+32]
	015 Call InputEventTrace.GetNextEvent, X0, X1
	016 Return X0
	017 Move X8, [X0]
	018 Move X9, [X8+360]
	019 Move X1, [X8+368]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move X19, X0
	022 Move X0, 0x917000
	023 Move X0, [X0+1208]
	024 Call 0x1C17D08
	025 Call 0x1C17F10
	026 Move X1, X19
	027 Move X2, X31
	028 Move X20, X0
	029 Call ObjectDisposedException..ctor, X0, X1
	030 Move X0, 0x945000
	031 Move X0, [X0+760]
	032 Call 0x1C17D08
	033 Move X1, X0
	034 Move X0, X20
	035 Call 0x1C17DEC
	036 Move X0, 0x8EE000
	037 Move X0, [X0+1456]
	038 Call 0x1C17D08
	039 Call 0x1C17F10
	040 Move X19, X0
	041 Move X0, 0x945000
	042 Move X0, [X0+768]
	043 Call 0x1C17D08
	044 Move X1, X0
	045 Move X0, X19
	046 Move X2, X31
	047 Call InvalidOperationException..ctor, X0, X1
	048 Move X0, 0x945000
	049 Move X0, [X0+760]
	050 Call 0x1C17D08
	051 Move X1, X0
	052 Move X0, X19
	053 Call 0x1C17DEC

Method: System.Void Reset()

Disassembly:
	0x03806A38 MOV X20, X0
	0x03806A3C BL 0x3314368
	0x03806A40 LDR X0, [X21]
	0x03806A44 LDR W8, [X0 + 0xE0]
	0x03806A48 CBNZ W8, 0x3806A50
	0x03806A4C BL 0x1C16DFC
	0x03806A50 MOV X0, X20
	0x03806A54 MOV X1, X31
	0x03806A58 BL 0x3770214

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Move [X0+32], X31
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move W8, [X8+16]
	007 Move [X0+24], W8
	008 Move X30, [X31+16]
	009 Return 
	010 Call 0x1C17F20

Method: UnityEngine.InputSystem.LowLevel.InputEventPtr get_Current()

Disassembly:
	0x03806A5C MOV X0, X19
	0x03806A60 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x03806A64 LDP X22, X21, [X31 + 0x20]
	0x03806A68 LDP X30, X23, [X31 + 0x10]
	0x03806A6C ADD X31, X31, 0x40
	0x03806A70 RET
	0x03806A74 BL 0x1C16F20
	0x03806A78 SUB X31, X31, 0x50
	0x03806A7C STP X30, X23, [X31 + 0x20]
	0x03806A80 STP X22, X21, [X31 + 0x30]
	0x03806A84 STP X20, X19, [X31 + 0x40]
	0x03806A88 ADRP X20, 0xBDB000
	0x03806A8C LDRB W8, [X20 + 0x440]
	0x03806A90 MOV X19, X0
	0x03806A94 TBNZ X8, 0x0, 0x3806AB8
	0x03806A98 ADRP X0, 0x944000
	0x03806A9C LDR X0, [X0 + 0x238]
	0x03806AA0 BL 0x1C16CF4
	0x03806AA4 ADRP X0, 0x944000
	0x03806AA8 LDR X0, [X0 + 0x378]
	0x03806AAC BL 0x1C16CF4
	0x03806AB0 MOVZ W8, 0x1
	0x03806AB4 STRB W8, [X20 + 0x440]
	0x03806AB8 STP X31, X31, [X31 + 0x8]
	0x03806ABC STR X31, [X31]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xBDC000
	007 Move X20, 0x919000
	008 Move W8, [X21+1082]
	009 Move X20, [X20+1272]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x919000
	016 Move X0, [X0+1272]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1082], W8
	020 Move X8, [X19+32]
	021 Move X0, [X20]
	022 Add X1, X31, 8
	023 Move [X31+8], X8
	024 Call 0x1C17E04
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X30, [X31+16]
	028 Move X21, [X31+24]
	029 Add X31, X31, 48
	030 Return X0

