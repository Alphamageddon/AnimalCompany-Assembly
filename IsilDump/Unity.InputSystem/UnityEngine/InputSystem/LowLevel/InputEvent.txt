Type: UnityEngine.InputSystem.LowLevel.InputEvent

Method: UnityEngine.InputSystem.Utilities.FourCC get_type()

Disassembly:
	0x03802198 LDP X20, X19, [X31 + 0x50]
	0x0380219C LDP X30, X21, [X31 + 0x40]

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.Void set_type(UnityEngine.InputSystem.Utilities.FourCC value)

Disassembly:
	0x038021A0 ADD X31, X31, 0x60
	0x038021A4 RET

ISIL:
	001 Move [X0], W1
	002 Return 

Method: System.UInt32 get_sizeInBytes()

Disassembly:
	0x03801398 LDR X0, [X0 + 0x978]
	0x0380139C BL 0x1C16CF4

ISIL:
	001 NotImplemented "Instruction LDRH not yet implemented."
	002 Return X0

Method: System.Void set_sizeInBytes(System.UInt32 value)

Disassembly:
	0x038021A8 RET
	0x038021AC LDR W10, [X0 + 0x18]
	0x038021B0 LDR W9, [X0 + 0x8]
	0x038021B4 CMP W10, W9
	0x038021B8 B.EQ 0x38021D4
	0x038021BC LDR X8, [X0 + 0x10]
	0x038021C0 CBZ X8, 0x38021DC
	0x038021C4 ADD W10, W10, 0x1
	0x038021C8 CMP W10, W9
	0x038021CC STR W10, [X0 + 0x18]
	0x038021D0 B.NE 0x38021F0
	0x038021D4 MOV W0, W31
	0x038021D8 RET
	0x038021DC LDR X8, [X0]
	0x038021E0 CMP X8, 0x0
	0x038021E4 STR X8, [X0 + 0x10]
	0x038021E8 CSET W0, NE
	0x038021EC RET
	0x038021F0 LDRH W9, [X8 + 0x4]
	0x038021F4 AND W10, W9, 0xFFFC
	0x038021F8 ANDS W31, W9, 0x3
	0x038021FC ADD W10, W10, 0x4
	0x03802200 CSEL W9, W9, W10, EQ
	0x03802204 ADD X8, X9, X8
	0x03802208 STR X8, [X0 + 0x10]
	0x0380220C MOVZ W0, 0x1
	0x03802210 RET
	0x03802214 STR X31, [X0 + 0x10]
	0x03802218 STR W31, [X0 + 0x18]
	0x0380221C RET
	0x03802220 RET
	0x03802224 LDR X0, [X0 + 0x10]
	0x03802228 RET
	0x0380222C SUB X31, X31, 0x30
	0x03802230 STP X30, X21, [X31 + 0x10]
	0x03802234 STP X20, X19, [X31 + 0x20]
	0x03802238 ADRP X21, 0xBDF000
	0x0380223C ADRP X20, 0x91C000
	0x03802240 LDRB W8, [X21 + 0x419]
	0x03802244 LDR X20, [X20 + 0x4F8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move X20, [X31+16]
	006 Move X19, [X31+24]
	007 NotImplemented "Instruction STRH not yet implemented."
	008 Move X30, [X31+32]
	009 Return 
	010 Move W8, 0xFFFF
	011 Add X0, X31, 12
	012 Move X1, X31
	013 NotImplemented "Instruction STRH not yet implemented."
	014 Call UInt16.ToString, X0
	015 Move X19, X0
	016 Move X0, 0x949000
	017 Move X0, [X0+160]
	018 Call 0x1C17D08
	019 Move X1, X19
	020 Move X2, X31
	021 Call String.Concat, X0, X1
	022 Move X19, X0
	023 Move X0, 0x8FA000
	024 Move X0, [X0+1400]
	025 Call 0x1C17D08
	026 Call 0x1C17F10
	027 Move X20, X0
	028 Move X0, 0x8FC000
	029 Move X0, [X0+3784]
	030 Call 0x1C17D08
	031 Move X2, X0
	032 Move X0, X20
	033 Move X1, X19
	034 Move X3, X31
	035 Call ArgumentException..ctor, X0, X1, X2
	036 Move X0, 0x949000
	037 Move X0, [X0+168]
	038 Call 0x1C17D08
	039 Move X1, X0
	040 Move X0, X20
	041 Call 0x1C17DEC

Method: System.Int32 get_eventId()

Disassembly:
	0x03802248 MOV X19, X0
	0x0380224C TBNZ X8, 0x0, 0x3802264
	0x03802250 ADRP X0, 0x91C000

ISIL:
	001 Move W8, [X0+16]
	002 And W0, W8, 0x7FFFFFFF
	003 Return X0

Method: System.Void set_eventId(System.Int32 value)

Disassembly:
	0x03802254 LDR X0, [X0 + 0x4F8]
	0x03802258 BL 0x1C16CF4
	0x0380225C MOVZ W8, 0x1
	0x03802260 STRB W8, [X21 + 0x419]
	0x03802264 LDR X8, [X19 + 0x10]

ISIL:
	001 Move W8, [X0+16]
	002 And W8, W8, 0x80000000
	003 Or W8, W8, W1
	004 Move [X0+16], W8
	005 Return 

Method: System.Int32 get_deviceId()

Disassembly:
	0x03802268 LDR X0, [X20]
	0x0380226C ADD X1, X31, 0x8

ISIL:
	001 NotImplemented "Instruction LDRH not yet implemented."
	002 Return X0

Method: System.Void set_deviceId(System.Int32 value)

Disassembly:
	0x03802270 STR X8, [X31 + 0x8]
	0x03802274 BL 0x1C16E04

ISIL:
	001 NotImplemented "Instruction STRH not yet implemented."
	002 Return 

Method: System.Double get_time()

Disassembly:
	0x03802278 LDP X20, X19, [X31 + 0x20]
	0x0380227C LDP X30, X21, [X31 + 0x10]
	0x03802280 ADD X31, X31, 0x30
	0x03802284 RET
	0x03802288 STP X30, X21, [X31 - 0x20]!
	0x0380228C STP X20, X19, [X31 + 0x10]
	0x03802290 ADRP X20, 0xBDF000
	0x03802294 ADRP X21, 0x944000
	0x03802298 LDRB W8, [X20 + 0x41C]
	0x0380229C LDR X21, [X21 + 0x950]
	0x038022A0 MOV X19, X1
	0x038022A4 TBNZ X8, 0x0, 0x38022EC
	0x038022A8 ADRP X0, 0x948000
	0x038022AC LDR X0, [X0 + 0x150]
	0x038022B0 BL 0x1C16CF4
	0x038022B4 ADRP X0, 0x948000
	0x038022B8 LDR X0, [X0 + 0x158]
	0x038022BC BL 0x1C16CF4
	0x038022C0 ADRP X0, 0x944000
	0x038022C4 LDR X0, [X0 + 0x950]
	0x038022C8 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xBE0000
	006 Move X20, 0x91A000
	007 Move W8, [X21+1035]
	008 Move X20, [X20+3784]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x91A000
	015 Move X0, [X0+3784]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1035], W8
	019 Move X8, [X20]
	020 Move V0, [X19+8]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X8, [X8+184]
	024 Move V1, [X8+8]
	025 Subtract D0, D0, D1
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 Return V0

Method: System.Void set_time(System.Double value)

Disassembly:
	0x038022CC ADRP X0, 0x919000
	0x038022D0 LDR X0, [X0 + 0x270]
	0x038022D4 BL 0x1C16CF4
	0x038022D8 ADRP X0, 0x948000
	0x038022DC LDR X0, [X0 + 0x160]
	0x038022E0 BL 0x1C16CF4
	0x038022E4 MOVZ W8, 0x1
	0x038022E8 STRB W8, [X20 + 0x41C]
	0x038022EC LDR X8, [X21]
	0x038022F0 LDR X8, [X8 + 0xB8]
	0x038022F4 LDR X8, [X8]
	0x038022F8 CBNZ X8, 0x3802330
	0x038022FC ADRP X8, 0x948000
	0x03802300 LDR X8, [X8 + 0x160]
	0x03802304 LDR X0, [X8]
	0x03802308 BL 0x1C16F10
	0x0380230C MOV X20, X0
	0x03802310 BL 0x38023E0
	0x03802314 LDR X8, [X21]
	0x03802318 LDR X8, [X8 + 0xB8]
	0x0380231C STR X20, [X8]
	0x03802320 LDR X8, [X21]
	0x03802324 LDR X8, [X8 + 0xB8]
	0x03802328 LDR X8, [X8]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xBE0000
	007 Move X21, 0x91A000
	008 Move W8, [X20+1036]
	009 Move X21, [X21+3784]
	010 Move V8, V0
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x91A000
	017 Move X0, [X0+3784]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+1036], W8
	021 Move X8, [X21]
	022 Move X30, [X31+16]
	023 Move X21, [X31+24]
	024 Move X8, [X8+184]
	025 Move V0, [X8+8]
	026 Add D0, D0, D8
	027 Move [X19+8], D0
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move V8, [X31+48]
	031 Return 

Method: System.Double get_internalTime()

Disassembly:
	0x0380232C CBZ X8, 0x38023DC
	0x03802330 LDR W9, [X8 + 0x10]

ISIL:
	001 Move V0, [X0+8]
	002 Return V0

Method: System.Void set_internalTime(System.Double value)

Disassembly:
	0x03802334 CBNZ W9, 0x380238C
	0x03802338 ADRP X20, 0x919000

ISIL:
	001 Move [X0+8], D0
	002 Return 

Method: System.Void .ctor(UnityEngine.InputSystem.Utilities.FourCC type, System.Int32 sizeInBytes, System.Int32 deviceId, System.Double time = -1)

Disassembly:
	0x03801BC8 MOV W21, W3
	0x03801BCC MOV W22, W2
	0x03801BD0 MOV W19, W1
	0x03801BD4 MOV X20, X0
	0x03801BD8 TBNZ X8, 0x0, 0x3801C20
	0x03801BDC ADRP X0, 0x949000
	0x03801BE0 LDR X0, [X0 + 0xC8]
	0x03801BE4 BL 0x1C16CF4
	0x03801BE8 ADRP X0, 0x946000
	0x03801BEC LDR X0, [X0 + 0xFE8]
	0x03801BF0 BL 0x1C16CF4
	0x03801BF4 ADRP X0, 0x91A000
	0x03801BF8 LDR X0, [X0 + 0xD68]
	0x03801BFC BL 0x1C16CF4
	0x03801C00 ADRP X0, 0x946000
	0x03801C04 LDR X0, [X0 + 0xFE0]
	0x03801C08 BL 0x1C16CF4
	0x03801C0C ADRP X0, 0x948000
	0x03801C10 LDR X0, [X0 + 0x6A0]
	0x03801C14 BL 0x1C16CF4
	0x03801C18 MOVZ W8, 0x1
	0x03801C1C STRB W8, [X23 + 0x413]
	0x03801C20 CMP W19, 0x13
	0x03801C24 STP X31, X31, [X31 + 0x10]
	0x03801C28 B.LE 0x3801D98
	0x03801C2C ADRP X25, 0xBE0000
	0x03801C30 LDRB W9, [X25 + 0x40F]
	0x03801C34 LDR X24, [X20 + 0x10]
	0x03801C38 ADD W8, W19, 0x4
	0x03801C3C AND W8, W8, 0xFFFFFFFC
	0x03801C40 ANDS W31, W19, 0x3
	0x03801C44 CSEL W23, W19, W8, EQ
	0x03801C48 TBNZ X9, 0x0, 0x3801C60
	0x03801C4C ADRP X0, 0x948000
	0x03801C50 LDR X0, [X0 + 0x6A0]
	0x03801C54 BL 0x1C16CF4
	0x03801C58 MOVZ W8, 0x1
	0x03801C5C STRB W8, [X25 + 0x40F]
	0x03801C60 LDR X0, [X20]
	0x03801C64 ADD X8, X24, W23, SXTW
	0x03801C68 CBZ X0, 0x3801C74
	0x03801C6C LDRSW X9, [X20 + 0x8]
	0x03801C70 B 0x3801C78
	0x03801C74 MOV X9, X31
	0x03801C78 ADRP X24, 0x949000
	0x03801C7C LDR X24, [X24 + 0xC8]
	0x03801C80 CMP X9, X8
	0x03801C84 B.GE 0x3801D40
	0x03801C88 SXTW X9, W22
	0x03801C8C SDIV X11, X8, X9
	0x03801C90 ADD X10, X8, W22, SXTW
	0x03801C94 MSUB X9, X11, X9, X8
	0x03801C98 SUB X10, X10, X9
	0x03801C9C CMP X9, 0x0
	0x03801CA0 CSEL X1, X8, X10, EQ
	0x03801CA4 MOVZ W8, 0x80000000
	0x03801CA8 CMP X1, X8
	0x03801CAC B.GE 0x3801E40
	0x03801CB0 ADRP X8, 0x946000
	0x03801CB4 LDR X8, [X8 + 0xFE0]
	0x03801CB8 ADD X0, X31, 0x10
	0x03801CBC MOVZ W3, 0x1
	0x03801CC0 MOV W2, W21
	0x03801CC4 LDR X4, [X8]
	0x03801CC8 MOVZ W22, 0x1

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xBE1000
	009 Move W8, [X23+1037]
	010 Move V8, V0
	011 Move W19, W3
	012 Move W20, W2
	013 Move X22, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x91B000
	020 Move X0, [X0+3792]
	021 Call 0x1C17CF4
	022 Move X0, 0x91B000
	023 Move X0, [X0+3784]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+1037], W8
	027 NotImplemented "Instruction FCMP not yet implemented."
	028 Move X8, 0x91B000
	029 Move X8, [X8+3784]
	030 Move X8, [X8]
	031 Move X8, [X8+184]
	032 Move X23, [X8]
	033 Compare X23, 0
	034 JumpIfEqual {73}
	035 Move X10, 0x91B000
	036 Move X8, [X23]
	037 Move X10, [X10+3792]
	038 NotImplemented "Instruction LDRH not yet implemented."
	039 Move X1, [X10]
	040 Compare X9, 0
	041 JumpIfEqual {48}
	042 Move X10, [X8+176]
	043 Add X10, X10, 8
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Subtract X9, X9, 1
	047 Add X10, X10, 16
	048 Move W2, 19
	049 Move X0, X23
	050 Call 0x1C5D788
	051 Move W9, [X10]
	052 Add W9, W9, 19
	053 Add X8, X8, W9
	054 Add X0, X8, 312
	055 Move X8, [X0]
	056 Move X1, [X0+8]
	057 Move X0, X23
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move V8, V0
	060 Move [X21], W22
	061 NotImplemented "Instruction STRH not yet implemented."
	062 NotImplemented "Instruction STRH not yet implemented."
	063 Move [X21+8], D8
	064 Move [X21+16], W31
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X30, [X31+16]
	070 Move X23, [X31+24]
	071 Move V8, [X31+64]
	072 Return 
	073 Call 0x1C17F20

Method: System.Boolean get_handled()

Disassembly:
	0x0380233C LDR X20, [X20 + 0x270]
	0x03802340 LDR X0, [X20]
	0x03802344 LDR W9, [X0 + 0xE0]

ISIL:
	001 Move W8, [X0+16]
	002 Move W0, W8
	003 ShiftRight W0, 31
	004 And W0, W0, 0x7FFFFFFF
	005 Return X0

Method: System.Void set_handled(System.Boolean value)

Disassembly:
	0x03802348 CBNZ W9, 0x3802364
	0x0380234C BL 0x1C16DFC
	0x03802350 LDR X8, [X21]
	0x03802354 LDR X8, [X8 + 0xB8]
	0x03802358 LDR X8, [X8]
	0x0380235C CBZ X8, 0x38023DC
	0x03802360 LDR X0, [X20]

ISIL:
	001 Move W8, [X0+16]
	002 And W31, W1, 1
	003 Move W9, 0x80000000
	004 NotImplemented "Instruction CSEL not yet implemented."
	005 NotImplemented "Instruction BFM not yet implemented."
	006 Move [X0+16], W9
	007 Return 

Method: System.String ToString()

Disassembly:
	0x03802364 LDR X9, [X0 + 0xB8]
	0x03802368 LDR X0, [X9]
	0x0380236C CBZ X0, 0x38023DC
	0x03802370 LDR X1, [X8 + 0x28]
	0x03802374 MOV X2, X31
	0x03802378 BL 0x37B9EE0
	0x0380237C LDR X8, [X21]
	0x03802380 LDR X8, [X8 + 0xB8]
	0x03802384 LDR X8, [X8]
	0x03802388 CBZ X8, 0x38023DC
	0x0380238C ADRP X9, 0x948000
	0x03802390 LDR X9, [X9 + 0x158]
	0x03802394 ADRP X20, 0x948000
	0x03802398 ADD X0, X8, 0x10
	0x0380239C MOVZ W2, 0xA
	0x038023A0 LDR X3, [X9]
	0x038023A4 LDR X20, [X20 + 0x150]
	0x038023A8 MOV X1, X19
	0x038023AC BL 0x2DEA8C8
	0x038023B0 LDR X0, [X20]
	0x038023B4 BL 0x1C16F10
	0x038023B8 MOV X1, X31
	0x038023BC MOV X20, X0
	0x038023C0 BL 0x33BDD8C
	0x038023C4 CBZ X20, 0x38023DC
	0x038023C8 STR X19, [X20 + 0x10]
	0x038023CC MOV X0, X20
	0x038023D0 LDP X20, X19, [X31 + 0x10]
	0x038023D4 LDP X30, X21, [X31], #0x20
	0x038023D8 RET
	0x038023DC BL 0x1C16F20
	0x038023E0 STR X30, [X31 - 0x30]!
	0x038023E4 STP X22, X21, [X31 + 0x10]
	0x038023E8 STP X20, X19, [X31 + 0x20]
	0x038023EC ADRP X22, 0xBDF000
	0x038023F0 ADRP X21, 0x943000
	0x038023F4 ADRP X20, 0x948000
	0x038023F8 LDRB W8, [X22 + 0x41D]
	0x038023FC LDR X21, [X21 + 0x6F8]
	0x03802400 LDR X20, [X20 + 0x168]
	0x03802404 MOV X19, X0
	0x03802408 TBNZ X8, 0x0, 0x380242C
	0x0380240C ADRP X0, 0x943000
	0x03802410 LDR X0, [X0 + 0x6F8]
	0x03802414 BL 0x1C16CF4
	0x03802418 ADRP X0, 0x948000
	0x0380241C LDR X0, [X0 + 0x168]
	0x03802420 BL 0x1C16CF4
	0x03802424 MOVZ W8, 0x1
	0x03802428 STRB W8, [X22 + 0x41D]
	0x0380242C MOV X0, X19
	0x03802430 MOV X1, X31
	0x03802434 BL 0x33BDD8C
	0x03802438 LDR X0, [X21]
	0x0380243C BL 0x1C16F10
	0x03802440 LDR X2, [X20]
	0x03802444 MOV X1, X19
	0x03802448 MOV X3, X31
	0x0380244C MOV X20, X0
	0x03802450 BL 0x2A75DEC
	0x03802454 STR X20, [X19 + 0x28]
	0x03802458 LDP X20, X19, [X31 + 0x20]
	0x0380245C LDP X22, X21, [X31 + 0x10]
	0x03802460 LDR X30, [X31], #0x30
	0x03802464 RET
	0x03802468 MOV X1, X31
	0x0380246C B 0x33BDD8C
	0x03802470 STR X30, [X31 - 0x40]!
	0x03802474 STP X24, X23, [X31 + 0x10]
	0x03802478 STP X22, X21, [X31 + 0x20]
	0x0380247C STP X20, X19, [X31 + 0x30]
	0x03802480 ADRP X21, 0xBDF000
	0x03802484 LDRB W8, [X21 + 0x41E]
	0x03802488 MOV X19, X1
	0x0380248C MOV X20, X0
	0x03802490 TBNZ X8, 0x0, 0x38024B4
	0x03802494 ADRP X0, 0x944000
	0x03802498 LDR X0, [X0 + 0x490]
	0x0380249C BL 0x1C16CF4
	0x038024A0 ADRP X0, 0x948000
	0x038024A4 LDR X0, [X0 + 0x170]
	0x038024A8 BL 0x1C16CF4
	0x038024AC MOVZ W8, 0x1
	0x038024B0 STRB W8, [X21 + 0x41E]
	0x038024B4 LDR W8, [X20 + 0x10]!
	0x038024B8 SUBS W21, W8, 0x1
	0x038024BC B.MI 0x380254C
	0x038024C0 ADRP X23, 0x948000
	0x038024C4 ADRP X24, 0x944000
	0x038024C8 LDR X23, [X23 + 0x170]
	0x038024CC LDR X24, [X24 + 0x490]
	0x038024D0 LDR X2, [X23]
	0x038024D4 MOV X0, X20
	0x038024D8 MOV W1, W21
	0x038024DC BL 0x2DEA3EC
	0x038024E0 CBZ X0, 0x3802560
	0x038024E4 LDR X8, [X0]
	0x038024E8 LDR X1, [X24]
	0x038024EC MOV X22, X0
	0x038024F0 LDRH W9, [X8 + 0x12E]
	0x038024F4 CBZ X9, 0x3802518
	0x038024F8 LDR X10, [X8 + 0xB0]
	0x038024FC ADD X10, X10, 0x8
	0x03802500 LDUR X11, [X10 - 0x8]
	0x03802504 CMP X11, X1
	0x03802508 B.EQ 0x3802528
	0x0380250C SUBS X9, X9, 0x1
	0x03802510 ADD X10, X10, 0x10
	0x03802514 B.NE 0x3802500
	0x03802518 MOV X0, X22
	0x0380251C MOV W2, W31
	0x03802520 BL 0x1C5C788
	0x03802524 B 0x3802534
	0x03802528 LDRSW X9, [X10]
	0x0380252C ADD X8, X8, X9, 0x4, LSL
	0x03802530 ADD X0, X8, 0x138
	0x03802534 LDP X8, X2, [X0]
	0x03802538 MOV X0, X22
	0x0380253C MOV X1, X19
	0x03802540 BLR X8
	0x03802544 SUBS W21, W21, 0x1
	0x03802548 B.PL 0x38024D0
	0x0380254C LDP X20, X19, [X31 + 0x30]
	0x03802550 LDP X22, X21, [X31 + 0x20]
	0x03802554 LDP X24, X23, [X31 + 0x10]
	0x03802558 LDR X30, [X31], #0x40
	0x0380255C RET
	0x03802560 BL 0x1C16F20
	0x03802564 SUB X31, X31, 0x60
	0x03802568 STP X30, X21, [X31 + 0x40]
	0x0380256C STP X20, X19, [X31 + 0x50]
	0x03802570 ADRP X21, 0xBDF000
	0x03802574 ADRP X20, 0x944000
	0x03802578 LDRB W8, [X21 + 0x41F]
	0x0380257C LDR X20, [X20 + 0x950]
	0x03802580 MOV X19, X0
	0x03802584 TBNZ X8, 0x0, 0x38025C0
	0x03802588 ADRP X0, 0x948000
	0x0380258C LDR X0, [X0 + 0x178]
	0x03802590 BL 0x1C16CF4
	0x03802594 ADRP X0, 0x948000
	0x03802598 LDR X0, [X0 + 0x180]
	0x0380259C BL 0x1C16CF4
	0x038025A0 ADRP X0, 0x944000
	0x038025A4 LDR X0, [X0 + 0x950]
	0x038025A8 BL 0x1C16CF4
	0x038025AC ADRP X0, 0x919000
	0x038025B0 LDR X0, [X0 + 0x270]
	0x038025B4 BL 0x1C16CF4
	0x038025B8 MOVZ W8, 0x1
	0x038025BC STRB W8, [X21 + 0x41F]
	0x038025C0 LDR X8, [X20]
	0x038025C4 LDR X8, [X8 + 0xB8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X20, 0xBE0000
	009 Move X21, 0x8F2000
	010 Move X22, 0x8F2000
	011 Move W8, [X20+1038]
	012 Move X21, [X21+2512]
	013 Move X22, [X22+1880]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0x8F5000
	020 Move X0, [X0+2424]
	021 Call 0x1C17CF4
	022 Move X0, 0x91A000
	023 Move X0, [X0+3368]
	024 Call 0x1C17CF4
	025 Move X0, 0x8F2000
	026 Move X0, [X0+1880]
	027 Call 0x1C17CF4
	028 Move X0, 0x8F2000
	029 Move X0, [X0+2512]
	030 Call 0x1C17CF4
	031 Move X0, 0x8FA000
	032 Move X0, [X0+1824]
	033 Call 0x1C17CF4
	034 Move X0, 0x949000
	035 Move X0, [X0+176]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+1038], W8
	039 Move X0, [X21]
	040 Move W1, 5
	041 Call 0x1C17D6C
	042 Move W8, [X19+16]
	043 Move X20, X0
	044 Move X0, [X22]
	045 Add X1, X31, 28
	046 And W8, W8, 0x7FFFFFFF
	047 Move [X31+28], W8
	048 Call 0x1C17E04
	049 Compare X20, 0
	050 JumpIfEqual {173}
	051 Move X21, X0
	052 Compare X0, 0
	053 JumpIfEqual {60}
	054 Move X8, [X20]
	055 Move X0, X21
	056 Move X1, [X8+64]
	057 Call 0x1C17E00
	058 Compare X0, 0
	059 JumpIfEqual {170}
	060 Move W8, [X20+24]
	061 Compare W8, 0
	062 JumpIfEqual {169}
	063 Move X8, 0x91A000
	064 Move X8, [X8+3368]
	065 Move [X20+32], X21
	066 Move W9, [X19]
	067 Add X1, X31, 24
	068 Move X0, [X8]
	069 Move [X31+24], W9
	070 Call 0x1C17E04
	071 Move X21, X0
	072 Compare X0, 0
	073 JumpIfEqual {80}
	074 Move X8, [X20]
	075 Move X0, X21
	076 Move X1, [X8+64]
	077 Call 0x1C17E00
	078 Compare X0, 0
	079 JumpIfEqual {170}
	080 Move W8, [X20+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move [X20+40], X21
	083 NotImplemented "Instruction LDRH not yet implemented."
	084 Move X0, [X22]
	085 Add X1, X31, 20
	086 Move [X31+20], W8
	087 Call 0x1C17E04
	088 Move X21, X0
	089 Compare X0, 0
	090 JumpIfEqual {97}
	091 Move X8, [X20]
	092 Move X0, X21
	093 Move X1, [X8+64]
	094 Call 0x1C17E00
	095 Compare X0, 0
	096 JumpIfEqual {170}
	097 Move W8, [X20+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X8, 0x8FA000
	100 Move X8, [X8+1824]
	101 Move [X20+48], X21
	102 NotImplemented "Instruction LDRH not yet implemented."
	103 Add X1, X31, 16
	104 Move X0, [X8]
	105 Move [X31+16], W9
	106 Call 0x1C17E04
	107 Move X21, X0
	108 Compare X0, 0
	109 JumpIfEqual {116}
	110 Move X8, [X20]
	111 Move X0, X21
	112 Move X1, [X8+64]
	113 Call 0x1C17E00
	114 Compare X0, 0
	115 JumpIfEqual {170}
	116 Move W8, [X20+24]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move [X20+56], X21
	119 Move X23, 0xBE0000
	120 Move X21, 0x8F5000
	121 Move X22, 0x91A000
	122 Move W8, [X23+1035]
	123 Move X21, [X21+2424]
	124 Move X22, [X22+3784]
	125 Move TEMP, X8
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfEqual {134}
	129 Move X0, 0x91A000
	130 Move X0, [X0+3784]
	131 Call 0x1C17CF4
	132 Move W8, 1
	133 Move [X23+1035], W8
	134 Move X8, [X22]
	135 Move V0, [X19+8]
	136 Move X0, [X21]
	137 Add X1, X31, 8
	138 Move X8, [X8+184]
	139 Move V1, [X8+8]
	140 Subtract D0, D0, D1
	141 Move [X31+8], D0
	142 Call 0x1C17E04
	143 Move X19, X0
	144 Compare X0, 0
	145 JumpIfEqual {152}
	146 Move X8, [X20]
	147 Move X0, X19
	148 Move X1, [X8+64]
	149 Call 0x1C17E00
	150 Compare X0, 0
	151 JumpIfEqual {170}
	152 Move W8, [X20+24]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move X8, 0x949000
	155 Move X8, [X8+176]
	156 Move [X20+64], X19
	157 Move X1, X20
	158 Move X2, X31
	159 Move X0, [X8]
	160 Call String.Format, X0, X1
	161 Move X20, [X31+64]
	162 Move X19, [X31+72]
	163 Move X22, [X31+48]
	164 Move X21, [X31+56]
	165 Move X30, [X31+32]
	166 Move X23, [X31+40]
	167 Add X31, X31, 80
	168 Return X0
	169 Call 0x1C17F28
	170 Call 0x1C17F44
	171 Move X1, X31
	172 Call 0x1C17DEC
	173 Call 0x1C17F20

Method: UnityEngine.InputSystem.LowLevel.InputEvent* GetNextInMemory(UnityEngine.InputSystem.LowLevel.InputEvent* currentPtr)

Disassembly:
	0x038025C8 LDR X8, [X8]
	0x038025CC CBZ X8, 0x3802698
	0x038025D0 LDR X9, [X8 + 0x20]
	0x038025D4 LDR V0, [X8 + 0x1]
	0x038025D8 ADRP X8, 0x948000
	0x038025DC LDR X8, [X8 + 0x180]
	0x038025E0 STR X9, [X31 + 0x10]

ISIL:
	001 NotImplemented "Instruction LDRH not yet implemented."
	002 And W9, W8, 0xFFFC
	003 Add W9, W9, 4
	004 And W31, W8, 3
	005 NotImplemented "Instruction CSEL not yet implemented."
	006 Add X0, X8, X0
	007 Return X0

Method: UnityEngine.InputSystem.LowLevel.InputEvent* GetNextInMemoryChecked(UnityEngine.InputSystem.LowLevel.InputEvent* currentPtr, ref UnityEngine.InputSystem.LowLevel.InputEventBuffer buffer)

Disassembly:
	0x038025E4 STR V0, [X31]
	0x038025E8 LDR X1, [X19 + 0x10]
	0x038025EC LDR X2, [X8]
	0x038025F0 ADD X0, X31, 0x20
	0x038025F4 STR V0, [X31 + 0x2]
	0x038025F8 STR X9, [X31 + 0x30]
	0x038025FC BL 0x21FB010
	0x03802600 TBNZ X0, 0x1F, 0x380262C
	0x03802604 LDR X8, [X20]
	0x03802608 LDR X8, [X8 + 0xB8]
	0x0380260C LDR X8, [X8]
	0x03802610 CBZ X8, 0x3802698
	0x03802614 ADRP X9, 0x948000
	0x03802618 LDR X9, [X9 + 0x178]
	0x0380261C MOV W1, W0
	0x03802620 ADD X0, X8, 0x10
	0x03802624 LDR X2, [X9]
	0x03802628 BL 0x2DEAE6C
	0x0380262C LDR X8, [X20]
	0x03802630 LDR X8, [X8 + 0xB8]
	0x03802634 LDR X8, [X8]
	0x03802638 CBZ X8, 0x3802698
	0x0380263C LDR W9, [X8 + 0x10]
	0x03802640 CBNZ W9, 0x3802688
	0x03802644 ADRP X19, 0x919000
	0x03802648 LDR X19, [X19 + 0x270]
	0x0380264C LDR X0, [X19]
	0x03802650 LDR W9, [X0 + 0xE0]
	0x03802654 CBNZ W9, 0x3802670
	0x03802658 BL 0x1C16DFC
	0x0380265C LDR X8, [X20]
	0x03802660 LDR X8, [X8 + 0xB8]
	0x03802664 LDR X8, [X8]
	0x03802668 CBZ X8, 0x3802698
	0x0380266C LDR X0, [X19]
	0x03802670 LDR X9, [X0 + 0xB8]
	0x03802674 LDR X0, [X9]
	0x03802678 CBZ X0, 0x3802698
	0x0380267C LDR X1, [X8 + 0x28]
	0x03802680 MOV X2, X31
	0x03802684 BL 0x37BA14C
	0x03802688 LDP X20, X19, [X31 + 0x50]
	0x0380268C LDP X30, X21, [X31 + 0x40]
	0x03802690 ADD X31, X31, 0x60
	0x03802694 RET
	0x03802698 BL 0x1C16F20
	0x0380269C STR X1, [X0]
	0x038026A0 RET
	0x038026A4 LDR X8, [X0]
	0x038026A8 CBZ X8, 0x38026B8
	0x038026AC LDR W8, [X8 + 0x10]
	0x038026B0 UBFM W0, W8, 0x1F, 0x1F
	0x038026B4 RET
	0x038026B8 MOV W0, W31
	0x038026BC RET
	0x038026C0 LDR X8, [X0]
	0x038026C4 CBZ X8, 0x38026D4

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 NotImplemented "Instruction LDRH not yet implemented."
	007 Move X19, X1
	008 Move X20, X0
	009 And W9, W8, 0xFFFC
	010 Add W9, W9, 4
	011 And W31, W8, 3
	012 NotImplemented "Instruction CSEL not yet implemented."
	013 Add X21, X8, X0
	014 Move X0, X1
	015 Move X1, X21
	016 Call InputEventBuffer.Contains, X0, X1
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {28}
	021 Move X0, X21
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move X30, [X31+16]
	025 Move X21, [X31+24]
	026 Add X31, X31, 48
	027 Return X0
	028 Move [X31+8], X20
	029 Move X0, 0x91D000
	030 Move X0, [X0+1272]
	031 Call 0x1C17D08
	032 Add X1, X31, 8
	033 Call 0x1C17E04
	034 Move X8, [X19+16]
	035 Move X20, X0
	036 Move X0, 0x8F4000
	037 Move [X31], X8
	038 Move X0, [X0+2656]
	039 Call 0x1C17D08
	040 Add X1, X31, 0
	041 Call 0x1C17E04
	042 Move X19, X0
	043 Move X0, 0x949000
	044 Move X0, [X0+184]
	045 Call 0x1C17D08
	046 Move X1, X20
	047 Move X2, X19
	048 Move X3, X31
	049 Call String.Format, X0, X1, X2
	050 Move X19, X0
	051 Move X0, 0x8F2000
	052 Move X0, [X0+1456]
	053 Call 0x1C17D08
	054 Call 0x1C17F10
	055 Move X1, X19
	056 Move X2, X31
	057 Move X20, X0
	058 Call InvalidOperationException..ctor, X0, X1
	059 Move X0, 0x949000
	060 Move X0, [X0+192]
	061 Call 0x1C17D08
	062 Move X1, X0
	063 Move X0, X20
	064 Call 0x1C17DEC

Method: System.Boolean Equals(UnityEngine.InputSystem.LowLevel.InputEvent* first, UnityEngine.InputSystem.LowLevel.InputEvent* second)

Disassembly:
	0x03802750 LDRH W0, [X8 + 0x4]
	0x03802754 RET
	0x03802758 MOV W0, W31
	0x0380275C RET
	0x03802760 LDR X8, [X0]
	0x03802764 CBZ X8, 0x3802770
	0x03802768 LDRH W0, [X8 + 0x6]
	0x0380276C RET
	0x03802770 MOV W0, W31
	0x03802774 RET
	0x03802778 STP X30, X19, [X31 - 0x10]!
	0x0380277C LDR X8, [X0]
	0x03802780 CBZ X8, 0x3802790
	0x03802784 STRH W1, [X8 + 0x6]
	0x03802788 LDP X30, X19, [X31], #0x10
	0x0380278C RET
	0x03802790 ADRP X0, 0x8F1000
	0x03802794 LDR X0, [X0 + 0x5B0]
	0x03802798 BL 0x1C16D08
	0x0380279C BL 0x1C16F10
	0x038027A0 MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, W31
	004 Compare X0, 0
	005 JumpIfEqual {17}
	006 Compare X1, 0
	007 JumpIfEqual {17}
	008 NotImplemented "Instruction LDRH not yet implemented."
	009 NotImplemented "Instruction LDRH not yet implemented."
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X3, X31
	012 Call UnsafeUtility.MemCmp, X0, X1, X2
	013 NotImplemented "Instruction CMP not yet implemented."
	014 NotImplemented "Instruction CSET not yet implemented."
	015 Move W8, 1
	016 Move W8, W31
	017 Move W0, W8
	018 Move X30, [X31+16]
	019 Return X0

