Type: UnityEngine.InputSystem.LowLevel.InputStateHistory`1

Method: System.Void .ctor(System.Nullable`1<System.Int32> maxStateSizeInBytes = null)

Disassembly:
	0x02E12898 LDR X1, [X23]
	0x02E1289C ADD X0, X31, 0x30
	0x02E128A0 BL 0x2BC4968
	0x02E128A4 CBZ X20, 0x2E12694
	0x02E128A8 MOV X0, X20
	0x02E128AC BL 0x1C16F18
	0x02E128B0 MOV X20, X31
	0x02E128B4 B 0x2E128BC
	0x02E128B8 MOV X19, X0
	0x02E128BC LDR X1, [X23]
	0x02E128C0 ADD X0, X31, 0x30
	0x02E128C4 BL 0x2BC4968
	0x02E128C8 CBNZ X20, 0x2E128D4
	0x02E128CC MOV X0, X19
	0x02E128D0 BL 0x1D2C690
	0x02E128D4 MOV X0, X20
	0x02E128D8 BL 0x1C16F18
	0x02E128DC BL 0x1990590
	0x02E128E0 STP X30, X21, [X31 - 0x20]!
	0x02E128E4 STP X20, X19, [X31 + 0x10]
	0x02E128E8 MOV X19, X0
	0x02E128EC CBZ X0, 0x2E12910
	0x02E128F0 MOV X0, X19
	0x02E128F4 MOV X1, X31
	0x02E128F8 BL 0x380E504
	0x02E128FC MOV X0, X19
	0x02E12900 LDP X20, X19, [X31 + 0x10]
	0x02E12904 MOV X1, X31
	0x02E12908 LDP X30, X21, [X31], #0x20
	0x02E1290C B 0x380DAE0
	0x02E12910 BL 0x1C16F20
	0x02E12914 CMP W1, 0x1
	0x02E12918 MOV X21, X0
	0x02E1291C B.NE 0x2E12950
	0x02E12920 MOV X0, X21
	0x02E12924 BL 0x3EB1AD0
	0x02E12928 LDR X20, [X0]
	0x02E1292C BL 0x3EB1AE0
	0x02E12930 CBZ X19, 0x2E12958
	0x02E12934 MOV X0, X19
	0x02E12938 MOV X1, X31
	0x02E1293C BL 0x380DAE0
	0x02E12940 CBNZ X20, 0x2E1295C
	0x02E12944 LDP X20, X19, [X31 + 0x10]
	0x02E12948 LDP X30, X21, [X31], #0x20
	0x02E1294C RET
	0x02E12950 MOV X20, X31
	0x02E12954 B 0x2E12968
	0x02E12958 BL 0x1C16F20
	0x02E1295C MOV X0, X20
	0x02E12960 BL 0x1C16F18

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x15CA000
	007 Move W8, [X22+2604]
	008 Move X19, X2
	009 Move X21, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x12E9000
	016 Move X0, [X0+1520]
	017 Call 0x1C17CF4
	018 Move X0, 0x12E5000
	019 Move X0, [X0+3832]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2604], W8
	023 Move X22, X21
	024 ShiftRight X22, 32
	025 And X22, X22, 0x7FFFFFFF
	026 And W21, W21, 255
	027 Move W8, 56
	028 NotImplemented "Instruction CSEL not yet implemented."
	029 Move X0, X20
	030 Move X2, X31
	031 Call InputStateHistory..ctor, X0, X1
	032 Compare W21, 0
	033 JumpIfEqual {35}
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Return 
	041 Move X0, 0x12EA000
	042 Move X0, [X0+1400]
	043 Call 0x1C17D08
	044 Call 0x1C17F10
	045 Move X20, X0
	046 Move X0, 0x130E000
	047 Move X0, [X0+56]
	048 Call 0x1C17D08
	049 Move X21, X0
	050 Move X0, 0x130E000
	051 Move X0, [X0+64]
	052 Call 0x1C17D08
	053 Move X2, X0
	054 Move X0, X20
	055 Move X1, X21
	056 Move X3, X31
	057 Call ArgumentException..ctor, X0, X1, X2
	058 Move X0, X20
	059 Move X1, X19
	060 Call 0x1C17DEC

Method: System.Void .ctor(UnityEngine.InputSystem.InputControl`1<TValue> control)

Disassembly:
	0x02E12964 MOV X21, X0
	0x02E12968 CBNZ X19, 0x2E12970

ISIL:
	001 Move X2, X31
	002 Call InputStateHistory..ctor, X0, X1
	003 Return 

Method: System.Void .ctor(System.String path)

Disassembly:
	0x02E1296C BL 0x1C16F20
	0x02E12970 MOV X0, X19
	0x02E12974 MOV X1, X31
	0x02E12978 BL 0x380DAE0
	0x02E1297C CBNZ X20, 0x2E12988
	0x02E12980 MOV X0, X21
	0x02E12984 BL 0x1D2C690
	0x02E12988 MOV X0, X20
	0x02E1298C BL 0x1C16F18
	0x02E12990 BL 0x1990590
	0x02E12994 SUB X31, X31, 0x40
	0x02E12998 STP X31, X30, [X31 + 0x8]
	0x02E1299C STP X22, X21, [X31 + 0x20]
	0x02E129A0 STP X20, X19, [X31 + 0x30]
	0x02E129A4 STR W31, [X31 + 0x1C]
	0x02E129A8 STR X31, [X31]
	0x02E129AC CBZ X0, 0x2E12A28
	0x02E129B0 MOV X19, X2
	0x02E129B4 MOV X20, X1
	0x02E129B8 ADD X1, X31, 0x1C
	0x02E129BC MOV X2, X31
	0x02E129C0 MOV X21, X3
	0x02E129C4 MOV X22, X0
	0x02E129C8 BL 0x380DC58
	0x02E129CC LDR X8, [X21 + 0x20]
	0x02E129D0 LDR W2, [X31 + 0x1C]
	0x02E129D4 MOV X3, X0
	0x02E129D8 ADD X0, X31, 0x0
	0x02E129DC LDR X8, [X8 + 0xC0]
	0x02E129E0 MOV X1, X22
	0x02E129E4 LDR X4, [X8 + 0x18]
	0x02E129E8 LDR X8, [X4]
	0x02E129EC BLR X8
	0x02E129F0 LDR X8, [X21 + 0x20]
	0x02E129F4 ADD X0, X31, 0x0
	0x02E129F8 MOV X1, X20
	0x02E129FC MOV X2, X19
	0x02E12A00 LDR X8, [X8 + 0xC0]
	0x02E12A04 LDR X3, [X8 + 0x38]
	0x02E12A08 LDR X8, [X3]
	0x02E12A0C BLR X8
	0x02E12A10 LDP X0, X1, [X31]
	0x02E12A14 LDP X20, X19, [X31 + 0x30]
	0x02E12A18 LDP X22, X21, [X31 + 0x20]
	0x02E12A1C LDR X30, [X31 + 0x10]
	0x02E12A20 ADD X31, X31, 0x40
	0x02E12A24 RET
	0x02E12A28 BL 0x1C16F20
	0x02E12A2C STR D8, [X31 - 0x70]!
	0x02E12A30 STP X29, X30, [X31 + 0x10]
	0x02E12A34 STP X28, X27, [X31 + 0x20]
	0x02E12A38 STP X26, X25, [X31 + 0x30]
	0x02E12A3C STP X24, X23, [X31 + 0x40]
	0x02E12A40 STP X22, X21, [X31 + 0x50]
	0x02E12A44 STP X20, X19, [X31 + 0x60]
	0x02E12A48 ADD X29, X31, 0x10
	0x02E12A4C SUB X31, X31, 0x40
	0x02E12A50 MRS X26, 0xC000
	0x02E12A54 LDR X8, [X26 + 0x28]
	0x02E12A58 ADRP X23, 0x15C9000
	0x02E12A5C MOV X19, X3
	0x02E12A60 MOV V8.16B, V0.16B
	0x02E12A64 STUR X8, [X29 - 0x18]
	0x02E12A68 LDRB W8, [X23 + 0xA31]
	0x02E12A6C MOV X22, X2
	0x02E12A70 MOV X21, X1
	0x02E12A74 MOV X20, X0
	0x02E12A78 TBNZ X8, 0x0, 0x2E12A9C
	0x02E12A7C ADRP X0, 0x1309000
	0x02E12A80 LDR X0, [X0 + 0xD18]
	0x02E12A84 BL 0x1C16CF4
	0x02E12A88 ADRP X0, 0x1309000
	0x02E12A8C LDR X0, [X0 + 0xD68]
	0x02E12A90 BL 0x1C16CF4
	0x02E12A94 MOVZ W8, 0x1
	0x02E12A98 STRB W8, [X23 + 0xA31]
	0x02E12A9C LDR X8, [X19 + 0x20]
	0x02E12AA0 LDR X8, [X8 + 0xC0]
	0x02E12AA4 LDR X8, [X8 + 0x40]
	0x02E12AA8 LDR W23, [X8 + 0xFC]
	0x02E12AAC ADD X8, X31, 0x0
	0x02E12AB0 ADD X9, X23, 0xF
	0x02E12AB4 AND X9, X9, 0x1FFFFFFFF
	0x02E12AB8 SUB X24, X8, X9
	0x02E12ABC ADD X31, X24, 0x0
	0x02E12AC0 STP X31, X31, [X29 - 0x38]
	0x02E12AC4 STP X31, X31, [X29 - 0x48]
	0x02E12AC8 STUR X31, [X29 - 0x50]
	0x02E12ACC CBZ X21, 0x2E12C24
	0x02E12AD0 LDR X0, [X21 + 0x78]
	0x02E12AD4 ADRP X27, 0x1309000
	0x02E12AD8 LDR X27, [X27 + 0xD68]
	0x02E12ADC SUB X1, X29, 0x30
	0x02E12AE0 MOVZ W2, 0x2
	0x02E12AE4 MOV X3, X31
	0x02E12AE8 BL 0x38072B0
	0x02E12AEC LDUR X8, [X29 - 0x30]
	0x02E12AF0 STP X0, X1, [X29 - 0x40]
	0x02E12AF4 MOV X0, X8
	0x02E12AF8 MOV X1, X31
	0x02E12AFC BL 0x3802B50
	0x02E12B00 MOV X1, X31
	0x02E12B04 BL 0x3807298
	0x02E12B08 LDR X8, [X21 + 0x78]
	0x02E12B0C CBZ X8, 0x2E12C28
	0x02E12B10 ADRP X9, 0x1309000
	0x02E12B14 LDR X9, [X9 + 0xD18]
	0x02E12B18 MOV X25, X0
	0x02E12B1C LDR W28, [X8 + 0x14]
	0x02E12B20 LDR X0, [X9]
	0x02E12B24 LDR W9, [X0 + 0xE0]
	0x02E12B28 CBNZ W9, 0x2E12B30
	0x02E12B2C BL 0x1C16DFC
	0x02E12B30 MOV X0, X24
	0x02E12B34 MOV X1, X22
	0x02E12B38 MOV X2, X23
	0x02E12B3C SUB X25, X25, X28
	0x02E12B40 BL 0x3EB1AC0
	0x02E12B44 LDR X8, [X21]
	0x02E12B48 STP X24, X25, [X29 - 0x28]
	0x02E12B4C LDR X1, [X8 + 0x260]
	0x02E12B50 LDP X0, X8, [X1 + 0x8]
	0x02E12B54 SUB X3, X29, 0x28
	0x02E12B58 MOV X2, X21
	0x02E12B5C MOV X4, X25
	0x02E12B60 BLR X8
	0x02E12B64 FCMP D8, 0x0
	0x02E12B68 B.LT 0x2E12B7C
	0x02E12B6C SUB X0, X29, 0x30
	0x02E12B70 MOV V0.16B, V8.16B
	0x02E12B74 MOV X1, X31
	0x02E12B78 BL 0x38027D8
	0x02E12B7C CBZ X20, 0x2E12C2C
	0x02E12B80 LDUR X2, [X29 - 0x30]
	0x02E12B84 MOV X0, X20
	0x02E12B88 MOV X1, X21
	0x02E12B8C MOV X3, X31
	0x02E12B90 BL 0x380E014
	0x02E12B94 STP X0, X1, [X29 - 0x50]
	0x02E12B98 SUB X0, X29, 0x50
	0x02E12B9C MOV X1, X31
	0x02E12BA0 BL 0x380EBE8
	0x02E12BA4 MOV W21, W0
	0x02E12BA8 SUB X0, X29, 0x50
	0x02E12BAC MOV X1, X31
	0x02E12BB0 BL 0x380EBC4
	0x02E12BB4 STP X31, X31, [X29 - 0x28]
	0x02E12BB8 LDR X8, [X19 + 0x20]
	0x02E12BBC MOV X3, X0
	0x02E12BC0 LDR X8, [X8 + 0xC0]
	0x02E12BC4 LDR X4, [X8 + 0x18]
	0x02E12BC8 SUB X0, X29, 0x28
	0x02E12BCC MOV X1, X20
	0x02E12BD0 MOV W2, W21
	0x02E12BD4 BL 0x25C29F4
	0x02E12BD8 LDR X1, [X27]
	0x02E12BDC LDP X19, X20, [X29 - 0x28]
	0x02E12BE0 SUB X0, X29, 0x40
	0x02E12BE4 BL 0x23C9DBC
	0x02E12BE8 LDR X8, [X26 + 0x28]
	0x02E12BEC LDUR X9, [X29 - 0x18]
	0x02E12BF0 CMP X8, X9
	0x02E12BF4 B.NE 0x2E12C30
	0x02E12BF8 MOV X0, X19
	0x02E12BFC MOV X1, X20
	0x02E12C00 SUB X31, X29, 0x10
	0x02E12C04 LDP X20, X19, [X31 + 0x60]
	0x02E12C08 LDP X22, X21, [X31 + 0x50]
	0x02E12C0C LDP X24, X23, [X31 + 0x40]
	0x02E12C10 LDP X26, X25, [X31 + 0x30]
	0x02E12C14 LDP X28, X27, [X31 + 0x20]
	0x02E12C18 LDP X29, X30, [X31 + 0x10]
	0x02E12C1C LDR V8, [X31], #0x70
	0x02E12C20 RET
	0x02E12C24 BL 0x1C16F20
	0x02E12C28 BL 0x1C16F20
	0x02E12C2C BL 0x1C16F20
	0x02E12C30 BL 0x3EB1B20
	0x02E12C34 B 0x2E12C5C
	0x02E12C38 B 0x2E12C5C
	0x02E12C3C B 0x2E12C5C
	0x02E12C40 B 0x2E12C5C
	0x02E12C44 B 0x2E12C5C
	0x02E12C48 B 0x2E12C5C
	0x02E12C4C B 0x2E12C5C
	0x02E12C50 B 0x2E12C5C
	0x02E12C54 B 0x2E12C5C
	0x02E12C58 B 0x2E12C5C
	0x02E12C5C MOV X19, X0
	0x02E12C60 CMP W1, 0x1
	0x02E12C64 B.NE 0x2E12C90
	0x02E12C68 MOV X0, X19
	0x02E12C6C BL 0x3EB1AD0
	0x02E12C70 LDR X20, [X0]
	0x02E12C74 BL 0x3EB1AE0
	0x02E12C78 LDR X1, [X27]
	0x02E12C7C SUB X0, X29, 0x40
	0x02E12C80 BL 0x23C9DBC
	0x02E12C84 CBNZ X20, 0x2E12C98
	0x02E12C88 MOV X19, X31
	0x02E12C8C B 0x2E12BE8
	0x02E12C90 MOV X20, X31
	0x02E12C94 B 0x2E12CA4
	0x02E12C98 MOV X0, X20
	0x02E12C9C BL 0x1C16F18
	0x02E12CA0 MOV X19, X0
	0x02E12CA4 LDR X1, [X27]
	0x02E12CA8 SUB X0, X29, 0x40
	0x02E12CAC BL 0x23C9DBC
	0x02E12CB0 CBNZ X20, 0x2E12CBC
	0x02E12CB4 MOV X0, X19
	0x02E12CB8 BL 0x1D2C690
	0x02E12CBC MOV X0, X20
	0x02E12CC0 BL 0x1C16F18
	0x02E12CC4 BL 0x1990590
	0x02E12CC8 SUB X31, X31, 0x30
	0x02E12CCC STP X30, X19, [X31 + 0x20]
	0x02E12CD0 STP X31, X31, [X31 + 0x10]
	0x02E12CD4 LDR X8, [X1 + 0x20]
	0x02E12CD8 MOV X19, X1
	0x02E12CDC MOV X1, X0
	0x02E12CE0 ADD X0, X31, 0x10
	0x02E12CE4 LDR X8, [X8 + 0xC0]
	0x02E12CE8 LDR X2, [X8 + 0x58]
	0x02E12CEC BL 0x2BD2CF8
	0x02E12CF0 LDR V0, [X31 + 0x1]
	0x02E12CF4 ADD X1, X31, 0x0
	0x02E12CF8 STR V0, [X31]
	0x02E12CFC LDR X8, [X19 + 0x20]
	0x02E12D00 LDR X8, [X8 + 0xC0]
	0x02E12D04 LDR X0, [X8 + 0x50]
	0x02E12D08 BL 0x1C16E04
	0x02E12D0C LDP X30, X19, [X31 + 0x20]
	0x02E12D10 ADD X31, X31, 0x30
	0x02E12D14 RET
	0x02E12D18 LDR X8, [X1 + 0x20]
	0x02E12D1C LDR X8, [X8 + 0xC0]
	0x02E12D20 LDR X1, [X8 + 0x68]
	0x02E12D24 LDR X2, [X1]
	0x02E12D28 BR X2
	0x02E12D2C SUB X31, X31, 0x40
	0x02E12D30 STR X30, [X31 + 0x10]
	0x02E12D34 STP X22, X21, [X31 + 0x20]
	0x02E12D38 STP X20, X19, [X31 + 0x30]
	0x02E12D3C MOV X19, X2
	0x02E12D40 MOV X20, X0
	0x02E12D44 TBNZ X1, 0x1F, 0x2E12DB4
	0x02E12D48 CBZ X20, 0x2E12E58
	0x02E12D4C LDR W8, [X20 + 0x44]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 Move X22, 0x15CA000
	012 Move W8, [X22+2605]
	013 Move X19, X2
	014 Move X20, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {37}
	020 Move X0, 0x130E000
	021 Move X0, [X0+72]
	022 Call 0x1C17CF4
	023 Move X0, 0x130E000
	024 Move X0, [X0+80]
	025 Call 0x1C17CF4
	026 Move X0, 0x130E000
	027 Move X0, [X0+88]
	028 Call 0x1C17CF4
	029 Move X0, 0x130E000
	030 Move X0, [X0+96]
	031 Call 0x1C17CF4
	032 Move X0, 0x12E2000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X22+2605], W8
	037 Move X0, X21
	038 Move X1, X20
	039 Move X2, X31
	040 Move [X31+48], X31
	041 Move [X31+56], X31
	042 Move [X31+64], X31
	043 Call InputStateHistory..ctor, X0, X1
	044 Compare X21, 0
	045 JumpIfEqual {146}
	046 Move X22, 0x130E000
	047 Move X24, 0x130E000
	048 Move X25, 0x130E000
	049 Move X26, 0x12E2000
	050 Move X23, 0x130E000
	051 Move X22, [X22+96]
	052 Move X24, [X24+80]
	053 Move X25, [X25+88]
	054 Move X26, [X26+1728]
	055 Move X23, [X23+72]
	056 Move X0, X21
	057 Move X1, X31
	058 Call InputStateHistory.get_controls, X0
	059 Move X9, [X22]
	060 Move [X31+32], X0
	061 Move [X31+40], X1
	062 Add X8, X31, 8
	063 Add X0, X31, 32
	064 Move X1, X9
	065 Call ReadOnlyArray`1<Object>.GetEnumerator, X0
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 Move X8, [X31+24]
	068 Move [X31+3], V0
	069 Move [X31+64], X8
	070 Move X1, [X24]
	071 Add X0, X31, 48
	072 Call Enumerator<Object>.MoveNext, X0
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {121}
	077 Move X1, [X25]
	078 Add X0, X31, 48
	079 Call Enumerator<Object>.get_Current, X0
	080 Move X8, [X19+32]
	081 Move X21, X0
	082 Move X0, [X26]
	083 Move X8, [X8+192]
	084 Move W9, [X0+224]
	085 Move X22, [X8+16]
	086 Compare W9, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move X0, X22
	090 Move X1, X31
	091 Call Type.GetTypeFromHandle, X0
	092 Compare X21, 0
	093 JumpIfEqual {135}
	094 Move X8, [X21]
	095 Move X22, X0
	096 Move X9, [X8+376]
	097 Move X1, [X8+384]
	098 Move X0, X21
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move X1, X0
	101 Compare X22, 0
	102 JumpIfEqual {136}
	103 Move X8, [X22]
	104 Move X9, [X8+680]
	105 Move X2, [X8+688]
	106 Move X0, X22
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfEqual {70}
	112 Move X0, 0x12E2000
	113 Move X0, [X0+2512]
	114 Call 0x1C17D08
	115 Move W1, 4
	116 Call 0x1C17D6C
	117 Move X22, X0
	118 Compare X0, 0
	119 JumpIfNotEqual {137}
	120 Call 0x1C17F20
	121 Move X1, [X23]
	122 Add X0, X31, 48
	123 Call Enumerator<Object>.Dispose, X0
	124 Move X20, [X31+144]
	125 Move X19, [X31+152]
	126 Move X22, [X31+128]
	127 Move X21, [X31+136]
	128 Move X24, [X31+112]
	129 Move X23, [X31+120]
	130 Move X26, [X31+96]
	131 Move X25, [X31+104]
	132 Move X30, [X31+80]
	133 Add X31, X31, 160
	134 Return 
	135 Call 0x1C17F20
	136 Call 0x1C17F20
	137 Move X8, [X22]
	138 Move X1, [X8+64]
	139 Move X0, X21
	140 Call 0x1C17E00
	141 Compare X0, 0
	142 JumpIfNotEqual {147}
	143 Call 0x1C17F44
	144 Move X1, X31
	145 Call 0x1C17DEC
	146 Call 0x1C17F20
	147 Move W8, [X22+24]
	148 Compare W8, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1C17F28
	151 Move [X22+32], X21
	152 Compare X20, 0
	153 JumpIfNotEqual {196}
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move [X22+40], X20
	156 Move X8, [X21]
	157 Move X9, [X8+376]
	158 Move X1, [X8+384]
	159 Move X0, X21
	160 NotImplemented "Instruction BLR not yet implemented."
	161 Move X1, X31
	162 Call TypeHelpers.GetNiceTypeName, X0
	163 Move X20, X0
	164 Compare X0, 0
	165 JumpIfNotEqual {207}
	166 Move W8, [X22+24]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move [X22+48], X20
	169 Move X8, [X19+32]
	170 Move X8, [X8+192]
	171 Move X20, [X8+16]
	172 Move X0, 0x12E2000
	173 Move X0, [X0+1728]
	174 Call 0x1C17D08
	175 Move W8, [X0+224]
	176 Compare W8, 0
	177 JumpIfNotEqual {179}
	178 Call 0x1C17DFC
	179 Move X0, X20
	180 Move X1, X31
	181 Call Type.GetTypeFromHandle, X0
	182 Move X1, X31
	183 Call TypeHelpers.GetNiceTypeName, X0
	184 Move X20, X0
	185 Compare X0, 0
	186 JumpIfEqual {217}
	187 Move X8, [X22]
	188 Move X1, [X8+64]
	189 Move X0, X20
	190 Call 0x1C17E00
	191 Compare X0, 0
	192 JumpIfNotEqual {217}
	193 Call 0x1C17F44
	194 Move X1, X31
	195 Call 0x1C17DEC
	196 Move X8, [X22]
	197 Move X1, [X8+64]
	198 Move X0, X20
	199 Call 0x1C17E00
	200 Compare X0, 0
	201 JumpIfNotEqual {206}
	202 Call 0x1C17F44
	203 Move X1, X31
	204 Call 0x1C17DEC
	205 Call 0x1C17F28
	206 Move W8, [X22+24]
	207 Move X8, [X22]
	208 Move X1, [X8+64]
	209 Move X0, X20
	210 Call 0x1C17E00
	211 Compare X0, 0
	212 JumpIfNotEqual {166}
	213 Call 0x1C17F44
	214 Move X1, X31
	215 Call 0x1C17DEC
	216 Call 0x1C17F28
	217 Move W8, [X22+24]
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Move [X22+56], X20
	220 Move X0, 0x130E000
	221 Move X0, [X0+104]
	222 Call 0x1C17D08
	223 Move X1, X22
	224 Move X2, X31
	225 Call String.Format, X0, X1
	226 Move X20, X0
	227 Move X0, 0x12EA000
	228 Move X0, [X0+1400]
	229 Call 0x1C17D08
	230 Call 0x1C17F10
	231 Move X21, X0
	232 Move X1, X20
	233 Move X2, X31
	234 Call ArgumentException..ctor, X0, X1
	235 Move X0, X21
	236 Move X1, X19
	237 Call 0x1C17DEC
	238 Call 0x1C17F28
	239 Move X19, X0
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Move X0, X19
	242 Call 0x3EB2AD0
	243 Move X20, [X0]
	244 Call 0x3EB2AE0
	245 Move X1, [X23]
	246 Add X0, X31, 48
	247 Call Enumerator<Object>.Dispose, X0
	248 Compare X20, 0
	249 JumpIfEqual {124}
	250 Move X0, X20
	251 Call 0x1C17F18
	252 Move X20, X31
	253 Move X19, X0
	254 Move X1, [X23]
	255 Add X0, X31, 48
	256 Call Enumerator<Object>.Dispose, X0
	257 Compare X20, 0
	258 JumpIfNotEqual {261}
	259 Move X0, X19
	260 Call 0x1D2D690
	261 Move X0, X20
	262 Call 0x1C17F18
	263 Call 0x1991590

Method: System.Void Finalize()

Disassembly:
	0x02E12D50 CMP W8, W1
	0x02E12D54 B.LE 0x2E12DB4
	0x02E12D58 MOV X0, X20
	0x02E12D5C MOV X2, X31
	0x02E12D60 BL 0x380D18C
	0x02E12D64 MOV W21, W0
	0x02E12D68 MOV X0, X20
	0x02E12D6C MOV W1, W21
	0x02E12D70 MOV X2, X31
	0x02E12D74 BL 0x380D1A4
	0x02E12D78 STP X31, X31, [X31]
	0x02E12D7C LDR X8, [X19 + 0x20]
	0x02E12D80 MOV X3, X0
	0x02E12D84 ADD X0, X31, 0x0
	0x02E12D88 MOV X1, X20
	0x02E12D8C LDR X8, [X8 + 0xC0]
	0x02E12D90 MOV W2, W21
	0x02E12D94 LDR X4, [X8 + 0x18]
	0x02E12D98 BL 0x25C29F4
	0x02E12D9C LDP X0, X1, [X31]
	0x02E12DA0 LDP X20, X19, [X31 + 0x30]
	0x02E12DA4 LDP X22, X21, [X31 + 0x20]
	0x02E12DA8 LDR X30, [X31 + 0x10]
	0x02E12DAC ADD X31, X31, 0x40
	0x02E12DB0 RET
	0x02E12DB4 STR W1, [X31 + 0x1C]
	0x02E12DB8 ADRP X21, 0x12E1000
	0x02E12DBC LDR X21, [X21 + 0x758]
	0x02E12DC0 MOV X0, X21
	0x02E12DC4 BL 0x1C16D08
	0x02E12DC8 ADD X1, X31, 0x1C
	0x02E12DCC BL 0x1C16E04
	0x02E12DD0 MOV X22, X0
	0x02E12DD4 MOV X0, X20
	0x02E12DD8 BL 0x19903C0
	0x02E12DDC LDR W8, [X20 + 0x44]
	0x02E12DE0 MOV X0, X21
	0x02E12DE4 STR W8, [X31 + 0x18]
	0x02E12DE8 BL 0x1C16D08
	0x02E12DEC ADD X1, X31, 0x18
	0x02E12DF0 BL 0x1C16E04
	0x02E12DF4 MOV X20, X0
	0x02E12DF8 ADRP X0, 0x130D000
	0x02E12DFC LDR X0, [X0 + 0x70]
	0x02E12E00 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Compare X0, 0
	007 JumpIfEqual {19}
	008 Move X0, X19
	009 Move X1, X31
	010 Call InputStateHistory.Destroy, X0
	011 Move X0, X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X1, X31
	015 Move X30, [X31+32]
	016 Move X21, [X31+40]
	017 Call InputStateHistory.Finalize, X0
	018 Return 
	019 Call 0x1C17F20
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X21, X0
	022 Move X0, X21
	023 Call 0x3EB2AD0
	024 Move X20, [X0]
	025 Call 0x3EB2AE0
	026 Compare X19, 0
	027 JumpIfEqual {39}
	028 Move X0, X19
	029 Move X1, X31
	030 Call InputStateHistory.Finalize, X0
	031 Compare X20, 0
	032 JumpIfNotEqual {40}
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return 
	038 Move X20, X31
	039 Call 0x1C17F20
	040 Move X0, X20
	041 Call 0x1C17F18
	042 Move X21, X0
	043 Compare X19, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17F20
	046 Move X0, X19
	047 Move X1, X31
	048 Call InputStateHistory.Finalize, X0
	049 Compare X20, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X21
	052 Call 0x1D2D690
	053 Move X0, X20
	054 Call 0x1C17F18
	055 Call 0x1991590

Method: UnityEngine.InputSystem.LowLevel.InputStateHistory`1/Record<TValue> AddRecord(UnityEngine.InputSystem.LowLevel.InputStateHistory`1/Record<TValue> record)

Disassembly:
	0x02E12E04 MOV X1, X22
	0x02E12E08 MOV X2, X20
	0x02E12E0C MOV X3, X31
	0x02E12E10 BL 0x3227BD4
	0x02E12E14 MOV X20, X0
	0x02E12E18 ADRP X0, 0x12E9000
	0x02E12E1C LDR X0, [X0 + 0x760]
	0x02E12E20 BL 0x1C16D08
	0x02E12E24 BL 0x1C16F10
	0x02E12E28 MOV X21, X0
	0x02E12E2C ADRP X0, 0x12EC000
	0x02E12E30 LDR X0, [X0 + 0x130]
	0x02E12E34 BL 0x1C16D08
	0x02E12E38 MOV X2, X0
	0x02E12E3C MOV X0, X21
	0x02E12E40 MOV X1, X20
	0x02E12E44 MOV X3, X31
	0x02E12E48 BL 0x3311888
	0x02E12E4C MOV X0, X21
	0x02E12E50 MOV X1, X19
	0x02E12E54 BL 0x1C16DEC
	0x02E12E58 BL 0x1C16F20
	0x02E12E5C SUB X31, X31, 0x60
	0x02E12E60 STP X30, X23, [X31 + 0x30]
	0x02E12E64 STP X22, X21, [X31 + 0x40]
	0x02E12E68 STP X20, X19, [X31 + 0x50]
	0x02E12E6C MOV X19, X4
	0x02E12E70 MOV X20, X0
	0x02E12E74 STP X31, X31, [X31 + 0x20]
	0x02E12E78 TBNZ X1, 0x1F, 0x2E12F14
	0x02E12E7C CBZ X20, 0x2E12FB8
	0x02E12E80 LDR W8, [X20 + 0x44]
	0x02E12E84 CMP W8, W1
	0x02E12E88 B.LE 0x2E12F14
	0x02E12E8C MOV X22, X2
	0x02E12E90 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move [X31+28], W31
	009 Move [X31], X31
	010 Compare X0, 0
	011 JumpIfEqual {43}
	012 Move X19, X2
	013 Move X20, X1
	014 Add X1, X31, 28
	015 Move X2, X31
	016 Move X21, X3
	017 Move X22, X0
	018 Call InputStateHistory.AllocateRecord, X0, X1
	019 Move X8, [X21+32]
	020 Move W2, [X31+28]
	021 Move X3, X0
	022 Add X0, X31, 0
	023 Move X8, [X8+192]
	024 Move X1, X22
	025 Move X4, [X8+24]
	026 Call 0x25C297C, X0, X1, X2, X3
	027 Move X8, [X21+32]
	028 Add X0, X31, 0
	029 Move X1, X20
	030 Move X2, X19
	031 Move X8, [X8+192]
	032 Move X3, [X8+56]
	033 Call 0x25C2CCC, X0, X1
	034 Move X0, [X31]
	035 Move X1, [X31+8]
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X22, [X31+32]
	039 Move X21, [X31+40]
	040 Move X30, [X31+16]
	041 Add X31, X31, 64
	042 Return X0
	043 Call 0x1C17F20

Method: UnityEngine.InputSystem.LowLevel.InputStateHistory`1/Record<TValue> RecordStateChange(UnityEngine.InputSystem.InputControl`1<TValue> control, TValue value, System.Double time = -1)

Disassembly:
	0x02E12E94 MOV X2, X31
	0x02E12E98 MOV X21, X3
	0x02E12E9C BL 0x380D18C
	0x02E12EA0 MOV W23, W0
	0x02E12EA4 MOV X0, X20
	0x02E12EA8 MOV W1, W23
	0x02E12EAC MOV X2, X31
	0x02E12EB0 BL 0x380D1A4
	0x02E12EB4 STP X31, X31, [X31 + 0x8]
	0x02E12EB8 LDR X8, [X19 + 0x20]
	0x02E12EBC MOV X3, X0
	0x02E12EC0 ADD X0, X31, 0x8
	0x02E12EC4 MOV X1, X20
	0x02E12EC8 LDR X8, [X8 + 0xC0]
	0x02E12ECC MOV W2, W23
	0x02E12ED0 LDR X4, [X8 + 0x18]
	0x02E12ED4 BL 0x25C29F4
	0x02E12ED8 LDUR V0, [X31 + 0x8]
	0x02E12EDC ADD X0, X31, 0x20
	0x02E12EE0 MOV X1, X22
	0x02E12EE4 MOV X2, X21
	0x02E12EE8 STR V0, [X31 + 0x2]
	0x02E12EEC LDR X8, [X19 + 0x20]
	0x02E12EF0 LDR X8, [X8 + 0xC0]
	0x02E12EF4 LDR X3, [X8 + 0x38]
	0x02E12EF8 LDR X8, [X3]
	0x02E12EFC BLR X8
	0x02E12F00 LDP X20, X19, [X31 + 0x50]
	0x02E12F04 LDP X22, X21, [X31 + 0x40]
	0x02E12F08 LDP X30, X23, [X31 + 0x30]
	0x02E12F0C ADD X31, X31, 0x60
	0x02E12F10 RET
	0x02E12F14 STR W1, [X31 + 0x8]
	0x02E12F18 ADRP X21, 0x12E1000
	0x02E12F1C LDR X21, [X21 + 0x758]
	0x02E12F20 MOV X0, X21
	0x02E12F24 BL 0x1C16D08
	0x02E12F28 ADD X1, X31, 0x8
	0x02E12F2C BL 0x1C16E04
	0x02E12F30 MOV X22, X0
	0x02E12F34 MOV X0, X20
	0x02E12F38 BL 0x19903C0
	0x02E12F3C LDR W8, [X20 + 0x44]
	0x02E12F40 MOV X0, X21
	0x02E12F44 STR W8, [X31 + 0x1C]
	0x02E12F48 BL 0x1C16D08
	0x02E12F4C ADD X1, X31, 0x1C
	0x02E12F50 BL 0x1C16E04
	0x02E12F54 MOV X20, X0
	0x02E12F58 ADRP X0, 0x130D000
	0x02E12F5C LDR X0, [X0 + 0x70]
	0x02E12F60 BL 0x1C16D08
	0x02E12F64 MOV X1, X22
	0x02E12F68 MOV X2, X20
	0x02E12F6C MOV X3, X31
	0x02E12F70 BL 0x3227BD4
	0x02E12F74 MOV X20, X0
	0x02E12F78 ADRP X0, 0x12E9000
	0x02E12F7C LDR X0, [X0 + 0x760]
	0x02E12F80 BL 0x1C16D08
	0x02E12F84 BL 0x1C16F10
	0x02E12F88 MOV X21, X0
	0x02E12F8C ADRP X0, 0x12EC000
	0x02E12F90 LDR X0, [X0 + 0x130]
	0x02E12F94 BL 0x1C16D08
	0x02E12F98 MOV X2, X0
	0x02E12F9C MOV X0, X21
	0x02E12FA0 MOV X1, X20
	0x02E12FA4 MOV X3, X31
	0x02E12FA8 BL 0x3311888
	0x02E12FAC MOV X0, X21
	0x02E12FB0 MOV X1, X19
	0x02E12FB4 BL 0x1C16DEC
	0x02E12FB8 BL 0x1C16F20
	0x02E12FBC LDR X8, [X1 + 0x20]
	0x02E12FC0 LDR X8, [X8 + 0xC0]
	0x02E12FC4 LDR X1, [X8]
	0x02E12FC8 B 0x2E12FCC
	0x02E12FCC STR X30, [X31 - 0x30]!
	0x02E12FD0 STP X22, X21, [X31 + 0x10]
	0x02E12FD4 STP X20, X19, [X31 + 0x20]
	0x02E12FD8 ADRP X22, 0x15C9000
	0x02E12FDC ADRP X21, 0x1309000
	0x02E12FE0 LDRB W8, [X22 + 0xA32]
	0x02E12FE4 LDR X21, [X21 + 0xC0]
	0x02E12FE8 MOV X20, X1
	0x02E12FEC MOV X19, X0
	0x02E12FF0 TBNZ X8, 0x0, 0x2E13008
	0x02E12FF4 ADRP X0, 0x1309000
	0x02E12FF8 LDR X0, [X0 + 0xC0]
	0x02E12FFC BL 0x1C16CF4
	0x02E13000 MOVZ W8, 0x1
	0x02E13004 STRB W8, [X22 + 0xA32]
	0x02E13008 LDR X0, [X19 + 0x10]
	0x02E1300C MOV X1, X31
	0x02E13010 BL 0x3C98AE8
	0x02E13014 LDR X8, [X21]
	0x02E13018 MOV X21, X0
	0x02E1301C LDR W9, [X8 + 0xE0]
	0x02E13020 CBNZ W9, 0x2E1302C
	0x02E13024 MOV X0, X8
	0x02E13028 BL 0x1C16DFC
	0x02E1302C MOV X0, X21
	0x02E13030 MOV X1, X31
	0x02E13034 BL 0x3C99388
	0x02E13038 LDR X8, [X20 + 0x20]
	0x02E1303C MOV X21, X0
	0x02E13040 LDR X8, [X8 + 0xC0]
	0x02E13044 LDR X20, [X8 + 0x8]
	0x02E13048 LDRB W8, [X20 + 0x135]
	0x02E1304C TBNZ X8, 0x0, 0x2E1305C
	0x02E13050 MOV X0, X20
	0x02E13054 BL 0x1C5C684
	0x02E13058 MOV X20, X0
	0x02E1305C CBZ X21, 0x2E13078
	0x02E13060 MOV X0, X21
	0x02E13064 MOV X1, X20
	0x02E13068 BL 0x1C16E00
	0x02E1306C CBZ X0, 0x2E1308C
	0x02E13070 STR X19, [X0 + 0x18]
	0x02E13074 B 0x2E1307C
	0x02E13078 MOV X0, X31
	0x02E1307C LDP X20, X19, [X31 + 0x20]
	0x02E13080 LDP X22, X21, [X31 + 0x10]
	0x02E13084 LDR X30, [X31], #0x30
	0x02E13088 RET
	0x02E1308C MOV X0, X21
	0x02E13090 MOV X1, X20
	0x02E13094 BL 0x1C171E0
	0x02E13098 MOV X1, X31
	0x02E1309C B 0x3C98AE0
	0x02E130A0 STR X30, [X31 - 0x20]!
	0x02E130A4 STP X20, X19, [X31 + 0x10]
	0x02E130A8 LDR X8, [X1 + 0x20]
	0x02E130AC LDR X20, [X0 + 0x18]
	0x02E130B0 LDR X8, [X8 + 0xC0]
	0x02E130B4 LDR X19, [X8]
	0x02E130B8 LDRB W8, [X19 + 0x135]
	0x02E130BC TBNZ X8, 0x0, 0x2E130CC
	0x02E130C0 MOV X0, X19
	0x02E130C4 BL 0x1C5C684
	0x02E130C8 MOV X19, X0
	0x02E130CC CBZ X20, 0x2E130EC
	0x02E130D0 MOV X0, X20
	0x02E130D4 MOV X1, X19
	0x02E130D8 BL 0x1C16E00
	0x02E130DC CBNZ X0, 0x2E130F0
	0x02E130E0 MOV X0, X20
	0x02E130E4 MOV X1, X19
	0x02E130E8 BL 0x1C171E0
	0x02E130EC MOV X0, X31
	0x02E130F0 LDP X20, X19, [X31 + 0x10]
	0x02E130F4 LDR X30, [X31], #0x20
	0x02E130F8 RET
	0x02E130FC LDR X8, [X1 + 0x20]
	0x02E13100 LDR X8, [X8 + 0xC0]
	0x02E13104 LDR X1, [X8 + 0x8]
	0x02E13108 B 0x2E130A0

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+176], D8
	003 Move [X31+184], X30
	004 Move [X31+192], X26
	005 Move [X31+200], X25
	006 Move [X31+208], X24
	007 Move [X31+216], X23
	008 Move [X31+224], X22
	009 Move [X31+232], X21
	010 Move [X31+240], X20
	011 Move [X31+248], X19
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X24+40]
	014 Move X23, 0x15CA000
	015 Move X19, X3
	016 Move V8, V0
	017 Move [X31+168], X8
	018 Move W8, [X23+2606]
	019 Move X22, X2
	020 Move X21, X1
	021 Move X20, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0x130A000
	027 Move X0, [X0+3352]
	028 Call 0x1C17CF4
	029 Move X0, 0x130A000
	030 Move X0, [X0+3432]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+2606], W8
	034 Move [X31+32], X31
	035 Move [X31+40], X31
	036 Move [X31+16], X31
	037 Move [X31+24], X31
	038 Move [X31+8], X31
	039 Compare X21, 0
	040 JumpIfEqual {140}
	041 Move X0, [X21+120]
	042 Move X25, 0x130A000
	043 Move X25, [X25+3432]
	044 Add X1, X31, 40
	045 Move W2, 2
	046 Move X3, X31
	047 Call StateEvent.From, X0, X1, X2
	048 Move X8, [X31+40]
	049 Move [X31+24], X0
	050 Move [X31+32], X1
	051 Move X0, X8
	052 Move X1, X31
	053 Call StateEvent.From, X0
	054 Move X1, X31
	055 Call StateEvent.get_state, X0
	056 Move X8, [X21+120]
	057 Compare X8, 0
	058 JumpIfEqual {141}
	059 Move X9, 0x130A000
	060 Move X9, [X9+3352]
	061 Move X23, X0
	062 Move W26, [X8+20]
	063 Move X0, [X9]
	064 Move W9, [X0+224]
	065 Compare W9, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X8, [X22+48]
	069 Move V1, [X22+16]
	070 Move V0, [X22+32]
	071 Move V2, [X22]
	072 Subtract X2, X23, X26
	073 Move [X31+96], X8
	074 Move [X31+64], V1
	075 Move [X31+72], V0
	076 Move [X31+3], V2
	077 Move X9, [X21]
	078 Move X10, [X9+600]
	079 Move [X31+160], X8
	080 Move [X31+112], V2
	081 Move [X31+120], V1
	082 Move [X31+9], V0
	083 Move X3, [X9+608]
	084 Add X1, X31, 112
	085 Move X0, X21
	086 NotImplemented "Instruction BLR not yet implemented."
	087 NotImplemented "Instruction FCMP not yet implemented."
	088 Add X0, X31, 40
	089 Move V0, V8
	090 Move X1, X31
	091 Call InputEventPtr.set_time, X0, V0
	092 Compare X20, 0
	093 JumpIfEqual {142}
	094 Move X2, [X31+40]
	095 Move X0, X20
	096 Move X1, X21
	097 Move X3, X31
	098 Call InputStateHistory.RecordStateChange, X0, X1, X2
	099 Move [X31+8], X0
	100 Move [X31+16], X1
	101 Add X0, X31, 8
	102 Move X1, X31
	103 Call Record.get_recordIndex, X0
	104 Move W21, W0
	105 Add X0, X31, 8
	106 Move X1, X31
	107 Call Record.get_header, X0
	108 Move [X31+112], X31
	109 Move [X31+120], X31
	110 Move X8, [X19+32]
	111 Move X3, X0
	112 Move X8, [X8+192]
	113 Move X4, [X8+24]
	114 Add X0, X31, 112
	115 Move X1, X20
	116 Move W2, W21
	117 Call 0x25C297C, X0, X1, X2, X3
	118 Move X1, [X25]
	119 Move X19, [X31+112]
	120 Move X20, [X31+120]
	121 Add X0, X31, 24
	122 Call NativeArray`1<Byte>.Dispose, X0
	123 Move X8, [X24+40]
	124 Move X9, [X31+168]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X0, X19
	127 Move X1, X20
	128 Move X20, [X31+240]
	129 Move X19, [X31+248]
	130 Move X22, [X31+224]
	131 Move X21, [X31+232]
	132 Move X24, [X31+208]
	133 Move X23, [X31+216]
	134 Move X26, [X31+192]
	135 Move X25, [X31+200]
	136 Move X30, [X31+184]
	137 Move V8, [X31+176]
	138 Add X31, X31, 256
	139 Return X0
	140 Call 0x1C17F20
	141 Call 0x1C17F20
	142 Call 0x1C17F20
	143 Call 0x3EB2B20
	144 Move X19, X0
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X0, X19
	147 Call 0x3EB2AD0
	148 Move X20, [X0]
	149 Call 0x3EB2AE0
	150 Move X1, [X25]
	151 Add X0, X31, 24
	152 Call NativeArray`1<Byte>.Dispose, X0
	153 Compare X20, 0
	154 JumpIfNotEqual {157}
	155 Move X19, X31
	156 Move X20, X31
	157 Move X0, X20
	158 Call 0x1C17F18
	159 Move X19, X0
	160 Move X1, [X25]
	161 Add X0, X31, 24
	162 Call NativeArray`1<Byte>.Dispose, X0
	163 Compare X20, 0
	164 JumpIfNotEqual {167}
	165 Move X0, X19
	166 Call 0x1D2D690
	167 Move X0, X20
	168 Call 0x1C17F18
	169 Call 0x1991590

Method: System.Collections.Generic.IEnumerator`1<UnityEngine.InputSystem.LowLevel.InputStateHistory`1/Record<TValue>> GetEnumerator()

Disassembly:
	0x02E1310C MOV X1, X31
	0x02E13110 B 0x3C98A54
	0x02E13114 STP X29, X30, [X31 - 0x40]!
	0x02E13118 STR X23, [X31 + 0x10]
	0x02E1311C STP X22, X21, [X31 + 0x20]
	0x02E13120 STP X20, X19, [X31 + 0x30]
	0x02E13124 ADD X29, X31, 0x0
	0x02E13128 SUB X31, X31, 0x10
	0x02E1312C MRS X23, 0xC000
	0x02E13130 LDR X8, [X23 + 0x28]
	0x02E13134 MOV X19, X1
	0x02E13138 STUR X8, [X29 - 0x8]
	0x02E1313C LDR X8, [X2 + 0x20]
	0x02E13140 LDR X8, [X8 + 0xC0]
	0x02E13144 LDR X1, [X8]
	0x02E13148 ADD X8, X31, 0x0
	0x02E1314C LDR W20, [X1 + 0xFC]
	0x02E13150 ADD X9, X20, 0xF
	0x02E13154 AND X9, X9, 0x1FFFFFFFF
	0x02E13158 SUB X21, X8, X9

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Move [X31+16], X31
	005 Move [X31+24], X31
	006 Move X8, [X1+32]
	007 Move X19, X1
	008 Move X1, X0
	009 Add X0, X31, 16
	010 Move X8, [X8+192]
	011 Move X2, [X8+88]
	012 Call 0x2BCDD64, X0, X1
	013 Move V0, [X31+1]
	014 Add X1, X31, 0
	015 Move [X31], V0
	016 Move X8, [X19+32]
	017 Move X8, [X8+192]
	018 Move X0, [X8+80]
	019 Call 0x1C17E04
	020 Move X30, [X31+32]
	021 Move X19, [X31+40]
	022 Add X31, X31, 48
	023 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x02E1315C ADD X31, X21, 0x0
	0x02E13160 LDRB W8, [X1 + 0x135]
	0x02E13164 LDR X22, [X0 + 0x18]
	0x02E13168 TBNZ X8, 0x0, 0x2E13178

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+104]
	004 Call 0x2E1310C, X0
	005 Return X0

Method: UnityEngine.InputSystem.LowLevel.InputStateHistory`1/Record<TValue> get_Item(System.Int32 index)

Disassembly:
	0x02E1316C MOV X0, X1
	0x02E13170 BL 0x1C5C684
	0x02E13174 MOV X1, X0
	0x02E13178 MOV X0, X22
	0x02E1317C MOV X2, X21
	0x02E13180 BL 0x1C16E10
	0x02E13184 MOV X1, X0
	0x02E13188 MOV X0, X19
	0x02E1318C MOV X2, X20
	0x02E13190 BL 0x3EB1AC0
	0x02E13194 LDR X8, [X23 + 0x28]
	0x02E13198 LDUR X9, [X29 - 0x8]
	0x02E1319C CMP X8, X9
	0x02E131A0 B.NE 0x2E131BC
	0x02E131A4 ADD X31, X29, 0x0
	0x02E131A8 LDP X20, X19, [X31 + 0x30]
	0x02E131AC LDP X22, X21, [X31 + 0x20]
	0x02E131B0 LDR X23, [X31 + 0x10]
	0x02E131B4 LDP X29, X30, [X31], #0x40
	0x02E131B8 RET
	0x02E131BC BL 0x3EB1B20
	0x02E131C0 STP X29, X30, [X31 - 0x30]!
	0x02E131C4 STP X22, X21, [X31 + 0x10]
	0x02E131C8 STP X20, X19, [X31 + 0x20]
	0x02E131CC ADD X29, X31, 0x0
	0x02E131D0 SUB X31, X31, 0x10
	0x02E131D4 MRS X22, 0xC000
	0x02E131D8 LDR X8, [X22 + 0x28]
	0x02E131DC MOV X19, X1
	0x02E131E0 STUR X8, [X29 - 0x8]
	0x02E131E4 LDR X8, [X2 + 0x20]
	0x02E131E8 MOV X2, X0
	0x02E131EC LDR X8, [X8 + 0xC0]
	0x02E131F0 LDP X9, X1, [X8]
	0x02E131F4 LDR W20, [X9 + 0xFC]
	0x02E131F8 ADD X9, X31, 0x0
	0x02E131FC ADD X10, X20, 0xF
	0x02E13200 AND X10, X10, 0x1FFFFFFFF
	0x02E13204 SUB X21, X9, X10
	0x02E13208 ADD X31, X21, 0x0
	0x02E1320C LDR X0, [X1]
	0x02E13210 STUR X21, [X29 - 0x10]
	0x02E13214 LDR X8, [X1 + 0x10]
	0x02E13218 SUB X3, X29, 0x10
	0x02E1321C MOV X4, X21
	0x02E13220 BLR X8
	0x02E13224 MOV X0, X19
	0x02E13228 MOV X1, X21
	0x02E1322C MOV X2, X20
	0x02E13230 BL 0x3EB1AC0
	0x02E13234 LDR X8, [X22 + 0x28]
	0x02E13238 LDUR X9, [X29 - 0x8]
	0x02E1323C CMP X8, X9
	0x02E13240 B.NE 0x2E13258
	0x02E13244 ADD X31, X29, 0x0
	0x02E13248 LDP X20, X19, [X31 + 0x20]
	0x02E1324C LDP X22, X21, [X31 + 0x10]
	0x02E13250 LDP X29, X30, [X31], #0x30
	0x02E13254 RET
	0x02E13258 BL 0x3EB1B20
	0x02E1325C MOV X1, X31
	0x02E13260 B 0x3C98A54
	0x02E13264 MOVN W8, 0x1
	0x02E13268 STR X1, [X0]
	0x02E1326C STR W8, [X0 + 0x8]
	0x02E13270 RET
	0x02E13274 RET
	0x02E13278 STP X30, X19, [X31 - 0x10]!
	0x02E1327C MOV X19, X0
	0x02E13280 LDR W0, [X0 + 0x8]
	0x02E13284 ADDS W31, W0, 0x2
	0x02E13288 B.NE 0x2E132A0
	0x02E1328C LDR X0, [X19]
	0x02E13290 CBZ X0, 0x2E132C4
	0x02E13294 MOV X1, X31
	0x02E13298 BL 0x3395B7C

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X19, X2
	008 Move X20, X0
	009 Move TEMP, X1
	010 And TEMP, TEMP, -2147483648
	011 Compare TEMP, -2147483648
	012 JumpIfEqual {44}
	013 Compare X20, 0
	014 JumpIfEqual {85}
	015 Move W8, [X20+68]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X0, X20
	018 Move X2, X31
	019 Call InputStateHistory.UserIndexToRecordIndex, X0, X1
	020 Move W21, W0
	021 Move X0, X20
	022 Move W1, W21
	023 Move X2, X31
	024 Call InputStateHistory.GetRecord, X0, X1
	025 Move [X31], X31
	026 Move [X31+8], X31
	027 Move X8, [X19+32]
	028 Move X3, X0
	029 Add X0, X31, 0
	030 Move X1, X20
	031 Move X8, [X8+192]
	032 Move W2, W21
	033 Move X4, [X8+24]
	034 Call 0x25C297C, X0, X1, X2, X3
	035 Move X0, [X31]
	036 Move X1, [X31+8]
	037 Move X20, [X31+48]
	038 Move X19, [X31+56]
	039 Move X22, [X31+32]
	040 Move X21, [X31+40]
	041 Move X30, [X31+16]
	042 Add X31, X31, 64
	043 Return X0
	044 Move [X31+28], W1
	045 Move X21, 0x12E1000
	046 Move X21, [X21+1880]
	047 Move X0, X21
	048 Call 0x1C17D08
	049 Add X1, X31, 28
	050 Call 0x1C17E04
	051 Move X22, X0
	052 Move X0, X20
	053 Call 0x19913C0
	054 Move W8, [X20+68]
	055 Move X0, X21
	056 Move [X31+24], W8
	057 Call 0x1C17D08
	058 Add X1, X31, 24
	059 Call 0x1C17E04
	060 Move X20, X0
	061 Move X0, 0x130D000
	062 Move X0, [X0+112]
	063 Call 0x1C17D08
	064 Move X1, X22
	065 Move X2, X20
	066 Move X3, X31
	067 Call String.Format, X0, X1, X2
	068 Move X20, X0
	069 Move X0, 0x12E9000
	070 Move X0, [X0+1888]
	071 Call 0x1C17D08
	072 Call 0x1C17F10
	073 Move X21, X0
	074 Move X0, 0x12EC000
	075 Move X0, [X0+304]
	076 Call 0x1C17D08
	077 Move X2, X0
	078 Move X0, X21
	079 Move X1, X20
	080 Move X3, X31
	081 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	082 Move X0, X21
	083 Move X1, X19
	084 Call 0x1C17DEC
	085 Call 0x1C17F20

Method: System.Void set_Item(System.Int32 index, UnityEngine.InputSystem.LowLevel.InputStateHistory`1/Record<TValue> value)

Disassembly:
	0x02E1329C STR W0, [X19 + 0x8]
	0x02E132A0 ADDS W31, W0, 0x1
	0x02E132A4 B.EQ 0x2E132B8
	0x02E132A8 SUBS W8, W0, 0x1
	0x02E132AC CSET W0, CS
	0x02E132B0 STR W8, [X19 + 0x8]
	0x02E132B4 B 0x2E132BC
	0x02E132B8 MOV W0, W31
	0x02E132BC LDP X30, X19, [X31], #0x10
	0x02E132C0 RET
	0x02E132C4 BL 0x1C16F20
	0x02E132C8 STP X30, X21, [X31 - 0x20]!
	0x02E132CC STP X20, X19, [X31 + 0x10]
	0x02E132D0 LDR W8, [X0 + 0x8]
	0x02E132D4 MOV X19, X1
	0x02E132D8 ADDS W31, W8, 0x1
	0x02E132DC B.EQ 0x2E13340
	0x02E132E0 ADDS W31, W8, 0x2
	0x02E132E4 B.EQ 0x2E13360
	0x02E132E8 LDR X20, [X0]
	0x02E132EC MOV X21, X0
	0x02E132F0 CBZ X20, 0x2E1339C
	0x02E132F4 MOV X0, X20
	0x02E132F8 MOV X1, X31
	0x02E132FC BL 0x3395B7C
	0x02E13300 LDR X8, [X19 + 0x20]
	0x02E13304 LDR W21, [X21 + 0x8]
	0x02E13308 MOV W19, W0
	0x02E1330C LDRB W9, [X8 + 0x135]
	0x02E13310 TBNZ X9, 0x0, 0x2E13320
	0x02E13314 MOV X0, X8
	0x02E13318 BL 0x1C5C684
	0x02E1331C MOV X8, X0
	0x02E13320 LDR X8, [X8 + 0xC0]
	0x02E13324 MOV X0, X20
	0x02E13328 LDR X2, [X8 + 0x8]
	0x02E1332C ORN W8, W31, W21, 0x0
	0x02E13330 ADD W1, W19, W8
	0x02E13334 LDP X20, X19, [X31 + 0x10]
	0x02E13338 LDP X30, X21, [X31], #0x20
	0x02E1333C B 0x20982A8
	0x02E13340 ADRP X0, 0x12E0000
	0x02E13344 LDR X0, [X0 + 0x5B0]
	0x02E13348 BL 0x1C16D08
	0x02E1334C BL 0x1C16F10
	0x02E13350 MOV X20, X0
	0x02E13354 ADRP X0, 0x130C000
	0x02E13358 LDR X0, [X0 + 0x78]
	0x02E1335C B 0x2E1337C
	0x02E13360 ADRP X0, 0x12E0000
	0x02E13364 LDR X0, [X0 + 0x5B0]
	0x02E13368 BL 0x1C16D08
	0x02E1336C BL 0x1C16F10
	0x02E13370 MOV X20, X0
	0x02E13374 ADRP X0, 0x130B000
	0x02E13378 LDR X0, [X0 + 0xB58]
	0x02E1337C BL 0x1C16D08
	0x02E13380 MOV X1, X0
	0x02E13384 MOV X0, X20
	0x02E13388 MOV X2, X31
	0x02E1338C BL 0x337DF1C
	0x02E13390 MOV X0, X20
	0x02E13394 MOV X1, X19
	0x02E13398 BL 0x1C16DEC
	0x02E1339C BL 0x1C16F20
	0x02E133A0 MOVN W8, 0x1
	0x02E133A4 STR W8, [X0 + 0x8]
	0x02E133A8 RET
	0x02E133AC STR X30, [X31 - 0x20]!
	0x02E133B0 STP X20, X19, [X31 + 0x10]
	0x02E133B4 LDR X8, [X1 + 0x20]
	0x02E133B8 MOV X19, X1
	0x02E133BC MOV X20, X0
	0x02E133C0 LDRB W9, [X8 + 0x135]
	0x02E133C4 TBNZ X9, 0x0, 0x2E133D4
	0x02E133C8 MOV X0, X8
	0x02E133CC BL 0x1C5C684
	0x02E133D0 MOV X8, X0
	0x02E133D4 LDR X8, [X8 + 0xC0]
	0x02E133D8 MOV X0, X20
	0x02E133DC LDR X1, [X8 + 0x18]
	0x02E133E0 BL 0x2E132C8
	0x02E133E4 STR X0, [X31 + 0x8]
	0x02E133E8 LDR X0, [X19 + 0x20]
	0x02E133EC LDRB W8, [X0 + 0x135]
	0x02E133F0 TBNZ X8, 0x0, 0x2E133F8
	0x02E133F4 BL 0x1C5C684

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X19, X4
	009 Move X20, X0
	010 Move [X31+32], X31
	011 Move [X31+40], X31
	012 Move TEMP, X1
	013 And TEMP, TEMP, -2147483648
	014 Compare TEMP, -2147483648
	015 JumpIfEqual {57}
	016 Compare X20, 0
	017 JumpIfEqual {98}
	018 Move W8, [X20+68]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X22, X2
	021 Move X0, X20
	022 Move X2, X31
	023 Move X21, X3
	024 Call InputStateHistory.UserIndexToRecordIndex, X0, X1
	025 Move W23, W0
	026 Move X0, X20
	027 Move W1, W23
	028 Move X2, X31
	029 Call InputStateHistory.GetRecord, X0, X1
	030 Move [X31+8], X31
	031 Move [X31+16], X31
	032 Move X8, [X19+32]
	033 Move X3, X0
	034 Add X0, X31, 8
	035 Move X1, X20
	036 Move X8, [X8+192]
	037 Move W2, W23
	038 Move X4, [X8+24]
	039 Call 0x25C297C, X0, X1, X2, X3
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 Add X0, X31, 32
	042 Move X1, X22
	043 Move X2, X21
	044 Move [X31+2], V0
	045 Move X8, [X19+32]
	046 Move X8, [X8+192]
	047 Move X3, [X8+56]
	048 Call 0x25C2CCC, X0, X1
	049 Move X20, [X31+80]
	050 Move X19, [X31+88]
	051 Move X22, [X31+64]
	052 Move X21, [X31+72]
	053 Move X30, [X31+48]
	054 Move X23, [X31+56]
	055 Add X31, X31, 96
	056 Return 
	057 Move [X31+8], W1
	058 Move X21, 0x12E1000
	059 Move X21, [X21+1880]
	060 Move X0, X21
	061 Call 0x1C17D08
	062 Add X1, X31, 8
	063 Call 0x1C17E04
	064 Move X22, X0
	065 Move X0, X20
	066 Call 0x19913C0
	067 Move W8, [X20+68]
	068 Move X0, X21
	069 Move [X31+28], W8
	070 Call 0x1C17D08
	071 Add X1, X31, 28
	072 Call 0x1C17E04
	073 Move X20, X0
	074 Move X0, 0x130D000
	075 Move X0, [X0+112]
	076 Call 0x1C17D08
	077 Move X1, X22
	078 Move X2, X20
	079 Move X3, X31
	080 Call String.Format, X0, X1, X2
	081 Move X20, X0
	082 Move X0, 0x12E9000
	083 Move X0, [X0+1888]
	084 Call 0x1C17D08
	085 Call 0x1C17F10
	086 Move X21, X0
	087 Move X0, 0x12EC000
	088 Move X0, [X0+304]
	089 Call 0x1C17D08
	090 Move X2, X0
	091 Move X0, X21
	092 Move X1, X20
	093 Move X3, X31
	094 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	095 Move X0, X21
	096 Move X1, X19
	097 Call 0x1C17DEC
	098 Call 0x1C17F20

