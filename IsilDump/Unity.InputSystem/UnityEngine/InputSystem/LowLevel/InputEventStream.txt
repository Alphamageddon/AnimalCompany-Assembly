Type: UnityEngine.InputSystem.LowLevel.InputEventStream

Method: System.Boolean get_isOpen()

Disassembly:
	0x03803E50 MOV X0, X19
	0x03803E54 LDP X9, X1, [X8 + 0x1F8]

ISIL:
	001 Move W0, [X0+112]
	002 Return X0

Method: System.Int32 get_remainingEventCount()

Disassembly:
	0x03803E58 BLR X9
	0x03803E5C LDR X8, [X21]
	0x03803E60 SUB X1, X0, X22
	0x03803E64 MOV X0, X21

ISIL:
	001 Move W8, [X0+48]
	002 Move W9, [X0+104]
	003 Add W0, W9, W8
	004 Return X0

Method: System.Int32 get_numEventsRetainedInBuffer()

Disassembly:
	0x03803E68 LDR X9, [X8 + 0x268]
	0x03803E6C LDR X2, [X8 + 0x270]

ISIL:
	001 Move W0, [X0+108]
	002 Return X0

Method: UnityEngine.InputSystem.LowLevel.InputEvent* get_currentEventPtr()

Disassembly:
	0x03803E70 BLR X9
	0x03803E74 LDP X20, X19, [X31 + 0x60]
	0x03803E78 LDP X22, X21, [X31 + 0x50]
	0x03803E7C LDP X24, X23, [X31 + 0x40]
	0x03803E80 LDP X26, X25, [X31 + 0x30]
	0x03803E84 LDP X28, X27, [X31 + 0x20]
	0x03803E88 LDP X29, X30, [X31 + 0x10]
	0x03803E8C ADD X31, X31, 0x70
	0x03803E90 RET
	0x03803E94 BL 0x1C16F20
	0x03803E98 BL 0x1C16F28
	0x03803E9C ADRP X0, 0x8F5000
	0x03803EA0 LDR X0, [X0 + 0x528]

ISIL:
	001 Move W8, [X0+48]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Add X8, X0, 32
	004 Move W8, [X0+104]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Add X8, X0, 88
	007 Move X0, [X8]
	008 Return X0
	009 Move X0, X31
	010 Return X0

Method: System.UInt32 get_numBytesRetainedInBuffer()

Disassembly:
	0x03803EA4 BL 0x1C16D08
	0x03803EA8 BL 0x1C16F10
	0x03803EAC MOV X19, X0
	0x03803EB0 ADRP X0, 0x91F000
	0x03803EB4 LDR X0, [X0 + 0xD38]
	0x03803EB8 BL 0x1C16D08
	0x03803EBC MOV X1, X0
	0x03803EC0 MOV X0, X19
	0x03803EC4 MOV X2, X31
	0x03803EC8 BL 0x330E100
	0x03803ECC B 0x3803F14
	0x03803ED0 ADRP X0, 0x8F8000
	0x03803ED4 LDR X0, [X0 + 0x578]
	0x03803ED8 BL 0x1C16D08
	0x03803EDC BL 0x1C16F10
	0x03803EE0 MOV X19, X0
	0x03803EE4 ADRP X0, 0x947000
	0x03803EE8 LDR X0, [X0 + 0x240]
	0x03803EEC BL 0x1C16D08
	0x03803EF0 MOV X20, X0
	0x03803EF4 ADRP X0, 0x91F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xBDF000
	006 Move X20, 0x948000
	007 Move W8, [X21+1060]
	008 Move X20, [X20+200]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x948000
	015 Move X0, [X0+200]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1060], W8
	019 Move X0, [X19]
	020 Move X1, [X19+8]
	021 Move X2, [X20]
	022 Move W21, [X19+40]
	023 Call 0x2223670, X0
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Subtract W0, W21, W0
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Void .ctor(ref UnityEngine.InputSystem.LowLevel.InputEventBuffer eventBuffer, System.Int32 maxAppendedEvents)

Disassembly:
	0x03803EF8 LDR X0, [X0 + 0xD38]
	0x03803EFC BL 0x1C16D08
	0x03803F00 MOV X2, X0
	0x03803F04 MOV X0, X19
	0x03803F08 MOV X1, X20
	0x03803F0C MOV X3, X31
	0x03803F10 BL 0x330E16C
	0x03803F14 ADRP X0, 0x947000
	0x03803F18 LDR X0, [X0 + 0x248]
	0x03803F1C BL 0x1C16D08
	0x03803F20 MOV X1, X0
	0x03803F24 MOV X0, X19
	0x03803F28 BL 0x1C16DEC
	0x03803F2C BL 0x1C16F20
	0x03803F30 MOV X0, X23
	0x03803F34 BL 0x1C16F18
	0x03803F38 CBZ X23, 0x3803F54
	0x03803F3C MOV X0, X23
	0x03803F40 BL 0x1C16F18
	0x03803F44 B 0x3803F54
	0x03803F48 B 0x3803F54
	0x03803F4C B 0x3803F54
	0x03803F50 B 0x3803F54
	0x03803F54 CMP W1, 0x1
	0x03803F58 B.NE 0x3803F74
	0x03803F5C BL 0x3EB1AD0
	0x03803F60 LDR X23, [X0]
	0x03803F64 BL 0x3EB1AE0
	0x03803F68 MOV W24, W31
	0x03803F6C CBNZ X22, 0x3803CB0
	0x03803F70 B 0x3803D08
	0x03803F74 MOV X19, X0
	0x03803F78 MOV X23, X31
	0x03803F7C B 0x3803F84
	0x03803F80 MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xBDF000
	008 Move X22, 0x948000
	009 Move W8, [X23+1061]
	010 Move X22, [X22+200]
	011 Move W19, W2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x948000
	019 Move X0, [X0+200]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+1061], W8
	023 Move X0, [X21]
	024 Move X1, [X21+8]
	025 Move X2, [X22]
	026 Call 0x2223670, X0
	027 Move [X20+32], X0
	028 Move [X20+40], X0
	029 Move V1, [X21]
	030 Move V2, [X21+16]
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 Move W8, 1
	033 Move [X20+56], V0
	034 Move [X20], V1
	035 Move [X20+8], V2
	036 Move W9, [X20+24]
	037 Move [X20+72], V0
	038 Move [X20+88], V0
	039 Move [X20+104], X31
	040 Move [X20+48], W9
	041 Move [X20+52], W19
	042 Move [X20+112], W8
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Return 

Method: System.Void Close(ref UnityEngine.InputSystem.LowLevel.InputEventBuffer eventBuffer)

Disassembly:
	0x03803F84 CBZ X22, 0x3803FE0
	0x03803F88 LDR X8, [X22]
	0x03803F8C LDR X1, [X26]
	0x03803F90 LDRH W9, [X8 + 0x12E]
	0x03803F94 CBZ X9, 0x3803FB8
	0x03803F98 LDR X10, [X8 + 0xB0]
	0x03803F9C ADD X10, X10, 0x8
	0x03803FA0 LDUR X11, [X10 - 0x8]
	0x03803FA4 CMP X11, X1
	0x03803FA8 B.EQ 0x3803FC8
	0x03803FAC SUBS X9, X9, 0x1
	0x03803FB0 ADD X10, X10, 0x10
	0x03803FB4 B.NE 0x3803FA0
	0x03803FB8 MOV X0, X22
	0x03803FBC MOV W2, W31
	0x03803FC0 BL 0x1C5C788
	0x03803FC4 B 0x3803FD4
	0x03803FC8 LDRSW X9, [X10]
	0x03803FCC ADD X8, X8, X9, 0x4, LSL
	0x03803FD0 ADD X0, X8, 0x138
	0x03803FD4 LDP X8, X1, [X0]
	0x03803FD8 MOV X0, X22
	0x03803FDC BLR X8
	0x03803FE0 CBNZ X23, 0x3803FEC
	0x03803FE4 MOV X0, X19
	0x03803FE8 BL 0x1D2C690
	0x03803FEC MOV X0, X23
	0x03803FF0 BL 0x1C16F18
	0x03803FF4 BL 0x1990590
	0x03803FF8 STR X30, [X31 - 0x10]!
	0x03803FFC ADD X0, X31, 0x8
	0x03804000 MOVZ W1, 0x49
	0x03804004 MOVZ W2, 0x45
	0x03804008 MOVZ W3, 0x56
	0x0380400C MOVZ W4, 0x54
	0x03804010 MOV X5, X31
	0x03804014 STR W31, [X31 + 0x8]
	0x03804018 BL 0x375AA28
	0x0380401C LDR W0, [X31 + 0x8]
	0x03804020 LDR X30, [X31], #0x10
	0x03804024 RET
	0x03804028 STP X30, X21, [X31 - 0x20]!
	0x0380402C STP X20, X19, [X31 + 0x10]
	0x03804030 ADRP X20, 0xBDD000
	0x03804034 ADRP X21, 0x946000
	0x03804038 LDRB W8, [X20 + 0x436]
	0x0380403C LDR X21, [X21 + 0x250]
	0x03804040 MOV X19, X0
	0x03804044 TBNZ X8, 0x0, 0x380405C
	0x03804048 ADRP X0, 0x946000
	0x0380404C LDR X0, [X0 + 0x250]
	0x03804050 BL 0x1C16CF4
	0x03804054 MOVZ W8, 0x1
	0x03804058 STRB W8, [X20 + 0x436]
	0x0380405C LDR X0, [X21]
	0x03804060 BL 0x1C16F10
	0x03804064 MOV X1, X19
	0x03804068 MOV X20, X0
	0x0380406C BL 0x380521C
	0x03804070 MOV X0, X20
	0x03804074 LDP X20, X19, [X31 + 0x10]
	0x03804078 LDP X30, X21, [X31], #0x20
	0x0380407C RET
	0x03804080 STR X30, [X31 - 0x30]!
	0x03804084 STP X22, X21, [X31 + 0x10]
	0x03804088 STP X20, X19, [X31 + 0x20]
	0x0380408C ADRP X21, 0xBDD000
	0x03804090 LDRB W8, [X21 + 0x42F]
	0x03804094 MOV X19, X1
	0x03804098 MOV X20, X0
	0x0380409C TBNZ X8, 0x0, 0x38040B4

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X21, 0xBDF000
	010 Move W8, [X21+1062]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x948000
	018 Move X0, [X0+200]
	019 Call 0x1C17CF4
	020 Move X0, 0x947000
	021 Move X0, [X0+1696]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1062], W8
	025 Move W8, [X20+108]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, 0x948000
	028 Move X8, [X8+200]
	029 Move X0, [X20]
	030 Move X1, [X20+8]
	031 Move X2, [X8]
	032 Call 0x2223670, X0
	033 Move X8, [X20+40]
	034 Move X24, 0xBDF000
	035 Move W9, [X24+1039]
	036 Move W22, [X20+108]
	037 Move X23, X0
	038 Subtract X21, X8, X0
	039 Move TEMP, X9
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {48}
	043 Move X0, 0x946000
	044 Move X0, [X0+1696]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X24+1039], W8
	048 Move X8, [X20]
	049 Compare X8, 0
	050 JumpIfEqual {56}
	051 Move W4, [X20+8]
	052 Move X8, [X20+16]
	053 Move [X20+24], W31
	054 Add X31, X8, 1
	055 Move [X20+16], X31
	056 Move W4, W31
	057 NotImplemented "Instruction MOVI not yet implemented."
	058 Add X0, X31, 0
	059 Move X1, X23
	060 Move W2, W22
	061 Move W3, W21
	062 Move [X31], V0
	063 Move [X31+8], V0
	064 Call InputEventBuffer..ctor, X0, X1, X2, X3, X4
	065 Move V1, [X31]
	066 Move V0, [X31+16]
	067 Move [X20], V1
	068 Move [X20+8], V0
	069 Move X0, X20
	070 Add X0, X0, 56
	071 Move X8, [X0]
	072 Compare X8, 0
	073 JumpIfEqual {75}
	074 Call InputEventBuffer.Dispose, X0
	075 Move V1, [X20]
	076 Move V0, [X20+16]
	077 Move X22, [X31+64]
	078 Move X21, [X31+72]
	079 Move X24, [X31+48]
	080 Move X23, [X31+56]
	081 Move X30, [X31+32]
	082 Move [X19], V1
	083 Move [X19+8], V0
	084 Move [X20+112], W31
	085 Move X20, [X31+80]
	086 Move X19, [X31+88]
	087 Add X31, X31, 96
	088 Return 

Method: System.Void CleanUpAfterException()

Disassembly:
	0x038040A0 ADRP X0, 0x8EF000
	0x038040A4 LDR X0, [X0 + 0xE00]
	0x038040A8 BL 0x1C16CF4
	0x038040AC MOVZ W8, 0x1
	0x038040B0 STRB W8, [X21 + 0x42F]
	0x038040B4 MOV X0, X19
	0x038040B8 MOV X1, X31
	0x038040BC BL 0x32277A8
	0x038040C0 TBNZ X0, 0x0, 0x380415C
	0x038040C4 ADRP X22, 0x8EF000
	0x038040C8 LDR X22, [X22 + 0xE00]
	0x038040CC MOV X0, X19
	0x038040D0 MOV X1, X31
	0x038040D4 BL 0x32ED1E0
	0x038040D8 MOV X19, X0
	0x038040DC MOV X0, X20
	0x038040E0 MOV X1, X19
	0x038040E4 BL 0x380424C
	0x038040E8 MOV X20, X31
	0x038040EC CBZ X19, 0x3804148
	0x038040F0 LDR X8, [X19]
	0x038040F4 LDR X1, [X22]
	0x038040F8 LDRH W9, [X8 + 0x12E]
	0x038040FC CBZ X9, 0x3804120
	0x03804100 LDR X10, [X8 + 0xB0]
	0x03804104 ADD X10, X10, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xBDE000
	005 Move W8, [X20+1063]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x946000
	012 Move X0, [X0+1696]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1063], W8
	016 Move W8, [X19+112]
	017 Compare W8, 0
	018 JumpIfEqual {30}
	019 Move X8, [X19+16]
	020 Move [X19+24], W31
	021 Add X31, X8, 1
	022 Move [X19+16], X31
	023 Move X0, X19
	024 Add X0, X0, 56
	025 Move X8, [X0]
	026 Compare X8, 0
	027 JumpIfEqual {29}
	028 Call InputEventBuffer.Dispose, X0
	029 Move [X19+112], W31
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return 

Method: System.Void Write(UnityEngine.InputSystem.LowLevel.InputEvent* eventPtr)

Disassembly:
	0x03804108 LDUR X11, [X10 - 0x8]
	0x0380410C CMP X11, X1
	0x03804110 B.EQ 0x3804130
	0x03804114 SUBS X9, X9, 0x1
	0x03804118 ADD X10, X10, 0x10
	0x0380411C B.NE 0x3804108
	0x03804120 MOV X0, X19
	0x03804124 MOV W2, W31
	0x03804128 BL 0x1C5C788
	0x0380412C B 0x380413C
	0x03804130 LDRSW X9, [X10]
	0x03804134 ADD X8, X8, X9, 0x4, LSL
	0x03804138 ADD X0, X8, 0x138
	0x0380413C LDP X8, X1, [X0]
	0x03804140 MOV X0, X19
	0x03804144 BLR X8
	0x03804148 CBNZ X20, 0x38041A4
	0x0380414C LDP X20, X19, [X31 + 0x20]
	0x03804150 LDP X22, X21, [X31 + 0x10]
	0x03804154 LDR X30, [X31], #0x30
	0x03804158 RET
	0x0380415C ADRP X0, 0x8F4000
	0x03804160 LDR X0, [X0 + 0x528]
	0x03804164 BL 0x1C16D08
	0x03804168 BL 0x1C16F10
	0x0380416C MOV X19, X0
	0x03804170 ADRP X0, 0x946000
	0x03804174 LDR X0, [X0 + 0x218]
	0x03804178 BL 0x1C16D08
	0x0380417C MOV X1, X0
	0x03804180 MOV X0, X19
	0x03804184 MOV X2, X31
	0x03804188 BL 0x330E100
	0x0380418C ADRP X0, 0x946000
	0x03804190 LDR X0, [X0 + 0x258]
	0x03804194 BL 0x1C16D08
	0x03804198 MOV X1, X0
	0x0380419C MOV X0, X19
	0x038041A0 BL 0x1C16DEC
	0x038041A4 MOV X0, X20
	0x038041A8 BL 0x1C16F18
	0x038041AC CMP W1, 0x1
	0x038041B0 MOV X21, X0
	0x038041B4 B.NE 0x38041CC
	0x038041B8 MOV X0, X21
	0x038041BC BL 0x3EB1AD0
	0x038041C0 LDR X20, [X0]
	0x038041C4 BL 0x3EB1AE0
	0x038041C8 B 0x38040EC
	0x038041CC MOV X20, X31
	0x038041D0 B 0x38041D8
	0x038041D4 MOV X21, X0
	0x038041D8 CBZ X19, 0x3804234
	0x038041DC LDR X8, [X19]
	0x038041E0 LDR X1, [X22]
	0x038041E4 LDRH W9, [X8 + 0x12E]
	0x038041E8 CBZ X9, 0x380420C
	0x038041EC LDR X10, [X8 + 0xB0]
	0x038041F0 ADD X10, X10, 0x8
	0x038041F4 LDUR X11, [X10 - 0x8]
	0x038041F8 CMP X11, X1
	0x038041FC B.EQ 0x380421C
	0x03804200 SUBS X9, X9, 0x1
	0x03804204 ADD X10, X10, 0x10
	0x03804208 B.NE 0x38041F4
	0x0380420C MOV X0, X19
	0x03804210 MOV W2, W31
	0x03804214 BL 0x1C5C788
	0x03804218 B 0x3804228
	0x0380421C LDRSW X9, [X10]
	0x03804220 ADD X8, X8, X9, 0x4, LSL
	0x03804224 ADD X0, X8, 0x138
	0x03804228 LDP X8, X1, [X0]
	0x0380422C MOV X0, X19
	0x03804230 BLR X8
	0x03804234 CBNZ X20, 0x3804240
	0x03804238 MOV X0, X21
	0x0380423C BL 0x1D2C690
	0x03804240 MOV X0, X20
	0x03804244 BL 0x1C16F18
	0x03804248 BL 0x1990590
	0x0380424C SUB X31, X31, 0xA0
	0x03804250 STP X29, X30, [X31 + 0x40]
	0x03804254 STP X28, X27, [X31 + 0x50]
	0x03804258 STP X26, X25, [X31 + 0x60]
	0x0380425C STP X24, X23, [X31 + 0x70]
	0x03804260 STP X22, X21, [X31 + 0x80]
	0x03804264 STP X20, X19, [X31 + 0x90]
	0x03804268 ADRP X20, 0xBDD000
	0x0380426C LDRB W8, [X20 + 0x430]
	0x03804270 MOV X19, X1
	0x03804274 MOV X21, X0
	0x03804278 TBNZ X8, 0x0, 0x38042A8
	0x0380427C ADRP X0, 0x921000
	0x03804280 LDR X0, [X0 + 0x208]
	0x03804284 BL 0x1C16CF4
	0x03804288 ADRP X0, 0x946000
	0x0380428C LDR X0, [X0 + 0x260]
	0x03804290 BL 0x1C16CF4
	0x03804294 ADRP X0, 0x946000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xBDE000
	009 Move W8, [X21+1064]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x8F0000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x8F0000
	020 Move X0, [X0+1880]
	021 Call 0x1C17CF4
	022 Move X0, 0x947000
	023 Move X0, [X0+200]
	024 Call 0x1C17CF4
	025 Move X0, 0x946000
	026 Move X0, [X0+1696]
	027 Call 0x1C17CF4
	028 Move X0, 0x947000
	029 Move X0, [X0+480]
	030 Call 0x1C17CF4
	031 Move X0, 0x947000
	032 Move X0, [X0+488]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+1064], W8
	036 Move W9, [X19+80]
	037 Move W8, [X19+52]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add X22, X19, 56
	040 Move X23, [X22]
	041 Move X0, X22
	042 Call InputEventBuffer.get_bufferPtr, X0
	043 Move X21, X0
	044 Move W2, 2048
	045 Move W3, 2
	046 Move X0, X22
	047 Move X1, X20
	048 Call InputEventBuffer.AppendEvent, X0, X1, X2, X3
	049 Compare X23, 0
	050 JumpIfEqual {91}
	051 Move X0, X22
	052 Call InputEventBuffer.get_bufferPtr, X0
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 Subtract X8, X0, X21
	056 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	057 NotImplemented "Instruction INVALID not yet implemented."
	058 Move [X19+88], V0
	059 Move X9, 0x8F0000
	060 Move X9, [X9+1880]
	061 Move X19, 0x947000
	062 Move X19, [X19+480]
	063 Move X20, 0x947000
	064 Move X0, [X9]
	065 Move X21, 0x8F0000
	066 Move X20, [X20+488]
	067 Move X21, [X21+2600]
	068 Add X1, X31, 12
	069 Move [X31+12], W8
	070 Call 0x1C17E04
	071 Move X8, [X19]
	072 Move X1, X0
	073 Move X2, X31
	074 Move X0, X8
	075 Call String.Format, X0, X1
	076 Move X8, [X20]
	077 Move X1, X0
	078 Move X2, X31
	079 Move X0, X8
	080 Call String.Concat, X0, X1
	081 Move X8, [X21]
	082 Move X19, X0
	083 Move W9, [X8+224]
	084 Compare W9, 0
	085 JumpIfNotEqual {88}
	086 Move X0, X8
	087 Call 0x1C17DFC
	088 Move X0, X19
	089 Move X1, X31
	090 Call Debug.LogError, X0
	091 Move X8, 0x947000
	092 Move X0, [X19+56]
	093 Move X1, [X19+64]
	094 Move X8, [X8+200]
	095 Move X2, [X8]
	096 Call 0x2223670, X0
	097 Move [X19+88], X0
	098 Move [X19+96], X0
	099 Move W8, [X19+104]
	100 Add W8, W8, 1
	101 Move [X19+104], W8
	102 Move X20, [X31+48]
	103 Move X19, [X31+56]
	104 Move X22, [X31+32]
	105 Move X21, [X31+40]
	106 Move X30, [X31+16]
	107 Move X23, [X31+24]
	108 Add X31, X31, 64
	109 Return 

Method: UnityEngine.InputSystem.LowLevel.InputEvent* Advance(System.Boolean leaveEventInBuffer)

Disassembly:
	0x03804298 LDR X0, [X0 + 0x238]
	0x0380429C BL 0x1C16CF4
	0x038042A0 MOVZ W8, 0x1
	0x038042A4 STRB W8, [X20 + 0x430]
	0x038042A8 STR W31, [X31 + 0x30]
	0x038042AC CBZ X19, 0x38046BC
	0x038042B0 LDR X8, [X19]
	0x038042B4 MOV X0, X19
	0x038042B8 LDP X9, X1, [X8 + 0x1A8]
	0x038042BC BLR X9
	0x038042C0 TBZ X0, 0x0, 0x38046F0
	0x038042C4 ADRP X8, 0x921000
	0x038042C8 LDR X8, [X8 + 0x208]
	0x038042CC LDR X0, [X8]
	0x038042D0 BL 0x1C16F10
	0x038042D4 MOV X1, X19
	0x038042D8 MOV X2, X31
	0x038042DC MOV X22, X0
	0x038042E0 BL 0x32F5054
	0x038042E4 CBZ X22, 0x380474C
	0x038042E8 LDR X8, [X22]
	0x038042EC ADRP X20, 0x946000
	0x038042F0 MOV X0, X22
	0x038042F4 LDR X9, [X8 + 0x228]
	0x038042F8 LDR X1, [X8 + 0x230]
	0x038042FC LDR X20, [X20 + 0x238]
	0x03804300 BLR X9
	0x03804304 LDR X8, [X20]
	0x03804308 MOV W19, W0
	0x0380430C LDR W9, [X8 + 0xE0]
	0x03804310 CBNZ W9, 0x380431C
	0x03804314 MOV X0, X8
	0x03804318 BL 0x1C16DFC
	0x0380431C ADD X0, X31, 0x38
	0x03804320 MOVZ W1, 0x49
	0x03804324 MOVZ W2, 0x45
	0x03804328 MOVZ W3, 0x56
	0x0380432C MOVZ W4, 0x54
	0x03804330 MOV X5, X31
	0x03804334 STR W31, [X31 + 0x38]
	0x03804338 BL 0x375AA28

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X4, X0
	005 Add X4, X4, 48
	006 Move W8, [X4]
	007 Move X19, X0
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Add X20, X19, 32
	010 Add X2, X19, 40
	011 Add X3, X19, 108
	012 And W5, W1, 1
	013 Move X1, X20
	014 Call InputEventBuffer.AdvanceToNextEvent, X0, X1, X2, X3, X4, X5
	015 Move W8, [X19+48]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W9, [X19+104]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X8, [X19+88]
	020 Subtract W9, W9, 1
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 And W11, W10, 0xFFFC
	023 Add W11, W11, 4
	024 And W31, W10, 3
	025 NotImplemented "Instruction CSEL not yet implemented."
	026 Add X8, X8, X10
	027 Move [X19+88], X8
	028 Move [X19+104], W9
	029 Move W8, [X19+104]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Add X20, X19, 88
	032 Move X0, [X20]
	033 Move X0, X31
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return X0

Method: UnityEngine.InputSystem.LowLevel.InputEvent* Peek()

Disassembly:
	0x0380433C LDR W8, [X31 + 0x38]
	0x03804340 CMP W19, W8
	0x03804344 B.NE 0x3804750
	0x03804348 LDR X8, [X22]
	0x0380434C MOV X0, X22
	0x03804350 LDR X9, [X8 + 0x228]
	0x03804354 LDR X1, [X8 + 0x230]
	0x03804358 BLR X9
	0x0380435C LDR X8, [X20]
	0x03804360 MOV W19, W0
	0x03804364 LDR W9, [X8 + 0xE0]
	0x03804368 CBNZ W9, 0x3804378
	0x0380436C MOV X0, X8
	0x03804370 BL 0x1C16DFC
	0x03804374 LDR X8, [X20]
	0x03804378 LDR X8, [X8 + 0xB8]
	0x0380437C LDR W8, [X8]
	0x03804380 CMP W19, W8
	0x03804384 B.GT 0x380478C
	0x03804388 LDR X8, [X22]
	0x0380438C MOV X0, X22
	0x03804390 LDR X9, [X8 + 0x228]
	0x03804394 LDR X1, [X8 + 0x230]
	0x03804398 BLR X9

ISIL:
	001 Move W9, [X0+48]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, [X0+104]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X0, [X0+88]
	007 Return X0
	008 Move X8, [X0+32]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X0, X31
	011 Return X0
	012 Move X8, [X0+88]
	013 NotImplemented "Instruction LDRH not yet implemented."
	014 And W10, W9, 0xFFFC
	015 Add W10, W10, 4
	016 And W31, W9, 3
	017 NotImplemented "Instruction CSEL not yet implemented."
	018 Add X0, X9, X8
	019 Return X0

