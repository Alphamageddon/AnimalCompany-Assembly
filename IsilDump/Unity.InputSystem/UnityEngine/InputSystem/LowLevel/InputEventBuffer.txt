Type: UnityEngine.InputSystem.LowLevel.InputEventBuffer

Method: System.Int32 get_eventCount()

Disassembly:
	0x038027A4 ADRP X0, 0x947000
	0x038027A8 LDR X0, [X0 + 0xDA0]

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Int64 get_sizeInBytes()

Disassembly:
	0x038027AC BL 0x1C16D08
	0x038027B0 MOV X1, X0

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Int64 get_capacityInBytes()

Disassembly:
	0x038027B4 MOV X0, X19
	0x038027B8 MOV X2, X31
	0x038027BC BL 0x337DF1C
	0x038027C0 ADRP X0, 0x948000
	0x038027C4 LDR X0, [X0 + 0x190]
	0x038027C8 BL 0x1C16D08
	0x038027CC MOV X1, X0
	0x038027D0 MOV X0, X19
	0x038027D4 BL 0x1C16DEC
	0x038027D8 STR D8, [X31 - 0x30]!
	0x038027DC STP X30, X21, [X31 + 0x10]
	0x038027E0 STP X20, X19, [X31 + 0x20]
	0x038027E4 LDR X19, [X0]
	0x038027E8 CBZ X19, 0x380283C
	0x038027EC ADRP X20, 0xBDF000
	0x038027F0 ADRP X21, 0x919000
	0x038027F4 LDRB W8, [X20 + 0x40C]
	0x038027F8 LDR X21, [X21 + 0xEC8]
	0x038027FC MOV V8.16B, V0.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xBE0000
	005 Move W8, [X20+1039]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x948000
	012 Move X0, [X0+1696]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1039], W8
	016 Move X8, [X19]
	017 Compare X8, 0
	018 JumpIfEqual {20}
	019 NotImplemented "Instruction LDRSW not yet implemented."
	020 Move X0, X31
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return X0

Method: Unity.Collections.NativeArray`1<System.Byte> get_data()

Disassembly:
	0x03802800 TBNZ X8, 0x0, 0x3802818
	0x03802804 ADRP X0, 0x919000
	0x03802808 LDR X0, [X0 + 0xEC8]

ISIL:
	001 Move X8, [X0]
	002 Move X1, [X0+8]
	003 Move X0, X8
	004 Return X0

Method: UnityEngine.InputSystem.LowLevel.InputEventPtr get_bufferPtr()

Disassembly:
	0x0380280C BL 0x1C16CF4
	0x03802810 MOVZ W8, 0x1
	0x03802814 STRB W8, [X20 + 0x40C]
	0x03802818 LDR X8, [X21]
	0x0380281C LDP X30, X21, [X31 + 0x10]
	0x03802820 LDR X8, [X8 + 0xB8]
	0x03802824 LDR V0, [X8 + 0x8]
	0x03802828 FADD D0, D0, D8
	0x0380282C STR D0, [X19 + 0x8]
	0x03802830 LDP X20, X19, [X31 + 0x20]
	0x03802834 LDR V8, [X31], #0x30
	0x03802838 RET
	0x0380283C ADRP X0, 0x8F1000
	0x03802840 LDR X0, [X0 + 0x5B0]
	0x03802844 BL 0x1C16D08
	0x03802848 BL 0x1C16F10
	0x0380284C MOV X19, X0
	0x03802850 ADRP X0, 0x947000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xBE0000
	006 Move X20, 0x949000
	007 Move W8, [X21+1040]
	008 Move X20, [X20+200]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x949000
	015 Move X0, [X0+200]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1040], W8
	019 Move X0, [X19]
	020 Move X1, [X19+8]
	021 Move X2, [X20]
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Call 0x2223670, X0
	027 Return X0

Method: System.Void .ctor(UnityEngine.InputSystem.LowLevel.InputEvent* eventPtr, System.Int32 eventCount, System.Int32 sizeInBytes = -1, System.Int32 capacityInBytes = -1)

Disassembly:
	0x03802858 BL 0x1C16D08
	0x0380285C MOV X1, X0
	0x03802860 MOV X0, X19
	0x03802864 MOV X2, X31
	0x03802868 BL 0x337DF1C
	0x0380286C ADRP X0, 0x948000
	0x03802870 LDR X0, [X0 + 0x198]
	0x03802874 BL 0x1C16D08
	0x03802878 MOV X1, X0
	0x0380287C MOV X0, X19
	0x03802880 BL 0x1C16DEC
	0x03802884 LDR X8, [X0]
	0x03802888 CBZ X8, 0x3802894
	0x0380288C LDR V0, [X8 + 0x8]
	0x03802890 RET
	0x03802894 FMOV D0, X31
	0x03802898 RET
	0x0380289C STP X30, X19, [X31 - 0x10]!
	0x038028A0 LDR X8, [X0]
	0x038028A4 CBZ X8, 0x38028B4
	0x038028A8 STR D0, [X8 + 0x8]
	0x038028AC LDP X30, X19, [X31], #0x10
	0x038028B0 RET
	0x038028B4 ADRP X0, 0x8F1000
	0x038028B8 LDR X0, [X0 + 0x5B0]
	0x038028BC BL 0x1C16D08
	0x038028C0 BL 0x1C16F10
	0x038028C4 MOV X19, X0
	0x038028C8 ADRP X0, 0x947000
	0x038028CC LDR X0, [X0 + 0xDA0]
	0x038028D0 BL 0x1C16D08
	0x038028D4 MOV X1, X0
	0x038028D8 MOV X0, X19
	0x038028DC MOV X2, X31
	0x038028E0 BL 0x337DF1C
	0x038028E4 ADRP X0, 0x948000
	0x038028E8 LDR X0, [X0 + 0x1A0]
	0x038028EC BL 0x1C16D08
	0x038028F0 MOV X1, X0
	0x038028F4 MOV X0, X19
	0x038028F8 BL 0x1C16DEC
	0x038028FC LDR X0, [X0]
	0x03802900 RET
	0x03802904 STR X30, [X31 - 0x20]!
	0x03802908 STP X20, X19, [X31 + 0x10]
	0x0380290C LDR X8, [X0]
	0x03802910 CBZ X8, 0x3802948
	0x03802914 LDR W9, [X8]
	0x03802918 MOVZ W10, 0x5441
	0x0380291C MOVK W10, 0x444C0000
	0x03802920 CMP W9, W10
	0x03802924 B.EQ 0x3802938
	0x03802928 MOVZ W10, 0x4154
	0x0380292C MOVK W10, 0x53540000
	0x03802930 CMP W9, W10
	0x03802934 B.NE 0x3802948
	0x03802938 LDR W0, [X8 + 0x14]
	0x0380293C LDP X20, X19, [X31 + 0x10]
	0x03802940 LDR X30, [X31], #0x20
	0x03802944 RET
	0x03802948 ADD X0, X31, 0x8
	0x0380294C STR X8, [X31 + 0x8]
	0x03802950 BL 0x38029B0
	0x03802954 MOV X19, X0
	0x03802958 ADRP X0, 0x948000
	0x0380295C LDR X0, [X0 + 0x1A8]
	0x03802960 BL 0x1C16D08
	0x03802964 MOV X1, X19
	0x03802968 MOV X2, X31
	0x0380296C BL 0x321B938
	0x03802970 MOV X19, X0
	0x03802974 ADRP X0, 0x8F1000
	0x03802978 LDR X0, [X0 + 0x5B0]
	0x0380297C BL 0x1C16D08
	0x03802980 BL 0x1C16F10
	0x03802984 MOV X1, X19
	0x03802988 MOV X2, X31
	0x0380298C MOV X20, X0
	0x03802990 BL 0x337DF1C
	0x03802994 ADRP X0, 0x948000
	0x03802998 LDR X0, [X0 + 0x1B0]
	0x0380299C BL 0x1C16D08
	0x038029A0 MOV X1, X0
	0x038029A4 MOV X0, X20
	0x038029A8 BL 0x1C16DEC
	0x038029AC RET
	0x038029B0 SUB X31, X31, 0x40
	0x038029B4 STP X30, X21, [X31 + 0x20]
	0x038029B8 STP X20, X19, [X31 + 0x30]
	0x038029BC MRS X20, 0xC000
	0x038029C0 LDR X8, [X20 + 0x28]
	0x038029C4 ADRP X21, 0xBDF000
	0x038029C8 MOV X19, X0
	0x038029CC STR X8, [X31 + 0x18]
	0x038029D0 LDRB W8, [X21 + 0x422]
	0x038029D4 TBNZ X8, 0x0, 0x38029EC
	0x038029D8 ADRP X0, 0x8F1000
	0x038029DC LDR X0, [X0 + 0x830]
	0x038029E0 BL 0x1C16CF4
	0x038029E4 MOVZ W8, 0x1
	0x038029E8 STRB W8, [X21 + 0x422]
	0x038029EC LDR X8, [X19]
	0x038029F0 CBZ X8, 0x3802A10
	0x038029F4 LDR W9, [X8 + 0x10]
	0x038029F8 LDR V0, [X8]
	0x038029FC ADD X0, X31, 0x0
	0x03802A00 STR W9, [X31 + 0x10]
	0x03802A04 STR V0, [X31]
	0x03802A08 BL 0x3801364
	0x03802A0C B 0x3802A1C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xBE0000
	009 Move W8, [X24+1041]
	010 Move W23, W4
	011 Move W19, W3
	012 Move W20, W2
	013 Move X22, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x949000
	020 Move X0, [X0+208]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+1041], W8
	024 NotImplemented "Instruction MOVI not yet implemented."
	025 Move [X21], V0
	026 Move [X21+8], V0
	027 Compare W20, 0
	028 JumpIfEqual {31}
	029 Compare X22, 0
	030 JumpIfEqual {61}
	031 Compare W23, 0
	032 JumpIfEqual {34}
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Compare X22, 0
	035 JumpIfEqual {53}
	036 Move X8, 0x949000
	037 Move X8, [X8+208]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W2, 1
	040 Move X0, X22
	041 Move X3, [X8]
	042 NotImplemented "Instruction CSEL not yet implemented."
	043 NotImplemented "Instruction BIC not yet implemented."
	044 Call NativeArrayUnsafeUtility.ConvertExistingDataToNativeArray, X0, X1, X2
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction CSINV not yet implemented."
	047 Move X8, W8
	048 Move [X21], X0
	049 Move [X21+8], X1
	050 Move [X21+24], W20
	051 Move [X21+16], X8
	052 Move [X21+28], W31
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X24, [X31+16]
	058 Move X23, [X31+24]
	059 Move X30, [X31+64]
	060 Return 
	061 Move X0, 0x8FA000
	062 Move X0, [X0+1400]
	063 Call 0x1C17D08
	064 Call 0x1C17F10
	065 Move X19, X0
	066 Move X0, 0x949000
	067 Move X0, [X0+216]
	068 Call 0x1C17D08
	069 Move X20, X0
	070 Move X0, 0x949000
	071 Move X0, [X0+224]
	072 Call 0x1C17D08
	073 Move X2, X0
	074 Move X0, X19
	075 Move X1, X20
	076 Move X3, X31
	077 Call ArgumentException..ctor, X0, X1, X2
	078 Move X0, 0x949000
	079 Move X0, [X0+232]
	080 Call 0x1C17D08
	081 Move X1, X0
	082 Move X0, X19
	083 Call 0x1C17DEC
	084 Move [X31+12], W23
	085 Move X20, 0x8F2000
	086 Move X20, [X20+1880]
	087 Move X0, X20
	088 Call 0x1C17D08
	089 Add X1, X31, 12
	090 Call 0x1C17E04
	091 Move X21, X0
	092 Move X0, X20
	093 Move [X31+8], W19
	094 Call 0x1C17D08
	095 Add X1, X31, 8
	096 Call 0x1C17E04
	097 Move X19, X0
	098 Move X0, 0x949000
	099 Move X0, [X0+240]
	100 Call 0x1C17D08
	101 Move X1, X21
	102 Move X2, X19
	103 Move X3, X31
	104 Call String.Format, X0, X1, X2
	105 Move X19, X0
	106 Move X0, 0x8FA000
	107 Move X0, [X0+1400]
	108 Call 0x1C17D08
	109 Call 0x1C17F10
	110 Move X20, X0
	111 Move X0, 0x949000
	112 Move X0, [X0+248]
	113 Call 0x1C17D08
	114 Move X2, X0
	115 Move X0, X20
	116 Move X1, X19
	117 Move X3, X31
	118 Call ArgumentException..ctor, X0, X1, X2
	119 Move X0, 0x949000
	120 Move X0, [X0+232]
	121 Call 0x1C17D08
	122 Move X1, X0
	123 Move X0, X20
	124 Call 0x1C17DEC

Method: System.Void .ctor(Unity.Collections.NativeArray`1<System.Byte> buffer, System.Int32 eventCount, System.Int32 sizeInBytes = -1, System.Boolean transferNativeArrayOwnership = False)

Disassembly:
	0x03802A10 ADRP X8, 0x8F1000
	0x03802A14 LDR X8, [X8 + 0x830]
	0x03802A18 LDR X0, [X8]
	0x03802A1C LDR X8, [X20 + 0x28]
	0x03802A20 LDR X9, [X31 + 0x18]
	0x03802A24 CMP X8, X9
	0x03802A28 B.NE 0x3802A3C
	0x03802A2C LDP X20, X19, [X31 + 0x30]
	0x03802A30 LDP X30, X21, [X31 + 0x20]
	0x03802A34 ADD X31, X31, 0x40
	0x03802A38 RET
	0x03802A3C BL 0x3EB1B20
	0x03802A40 SUB X31, X31, 0x30
	0x03802A44 STP X30, X21, [X31 + 0x10]
	0x03802A48 STP X20, X19, [X31 + 0x20]
	0x03802A4C ADRP X20, 0xBDF000
	0x03802A50 ADRP X21, 0x944000
	0x03802A54 LDRB W8, [X20 + 0x420]
	0x03802A58 LDR X21, [X21 + 0xD50]
	0x03802A5C MOV X19, X0
	0x03802A60 TBNZ X8, 0x0, 0x3802A84
	0x03802A64 ADRP X0, 0x948000
	0x03802A68 LDR X0, [X0 + 0x68]
	0x03802A6C BL 0x1C16CF4
	0x03802A70 ADRP X0, 0x944000
	0x03802A74 LDR X0, [X0 + 0xD50]
	0x03802A78 BL 0x1C16CF4
	0x03802A7C MOVZ W8, 0x1
	0x03802A80 STRB W8, [X20 + 0x420]
	0x03802A84 LDR X1, [X21]
	0x03802A88 MOV X0, X19
	0x03802A8C BL 0x2208050
	0x03802A90 TBZ X0, 0x0, 0x3802AA8
	0x03802A94 LDR X0, [X19]
	0x03802A98 BL 0x3802B50
	0x03802A9C ADD X8, X0, 0x4
	0x03802AA0 MOVN W9, 0x17
	0x03802AA4 B 0x3802AD4
	0x03802AA8 ADRP X8, 0x948000
	0x03802AAC LDR X8, [X8 + 0x68]
	0x03802AB0 MOV X0, X19
	0x03802AB4 LDR X1, [X8]
	0x03802AB8 BL 0x2207FC4
	0x03802ABC LDR X8, [X19]
	0x03802AC0 TBZ X0, 0x0, 0x3802AEC
	0x03802AC4 MOV X0, X8
	0x03802AC8 BL 0x38006E0
	0x03802ACC ADD X8, X0, 0x4
	0x03802AD0 MOVN W9, 0x1B
	0x03802AD4 LDRH W8, [X8]
	0x03802AD8 LDP X20, X19, [X31 + 0x20]
	0x03802ADC LDP X30, X21, [X31 + 0x10]
	0x03802AE0 ADD W0, W9, W8
	0x03802AE4 ADD X31, X31, 0x30
	0x03802AE8 RET
	0x03802AEC ADD X0, X31, 0x8
	0x03802AF0 STR X8, [X31 + 0x8]
	0x03802AF4 BL 0x38029B0
	0x03802AF8 MOV X19, X0
	0x03802AFC ADRP X0, 0x948000
	0x03802B00 LDR X0, [X0 + 0x1A8]
	0x03802B04 BL 0x1C16D08
	0x03802B08 MOV X1, X19
	0x03802B0C MOV X2, X31
	0x03802B10 BL 0x321B938
	0x03802B14 MOV X19, X0
	0x03802B18 ADRP X0, 0x8F1000
	0x03802B1C LDR X0, [X0 + 0x5B0]
	0x03802B20 BL 0x1C16D08
	0x03802B24 BL 0x1C16F10
	0x03802B28 MOV X1, X19
	0x03802B2C MOV X2, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xBE0000
	010 Move W8, [X25+1042]
	011 Move W23, W5
	012 Move W20, W4
	013 Move W19, W3
	014 Move X21, X2
	015 Move X24, X1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x948000
	022 Move X0, [X0+1696]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X25+1042], W8
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Compare X24, 0
	028 JumpIfEqual {48}
	029 NotImplemented "Instruction CMP not yet implemented."
	030 And W8, W23, 1
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move [X22+28], W8
	033 NotImplemented "Instruction CSEL not yet implemented."
	034 Move X8, W8
	035 Move [X22], X24
	036 Move [X22+8], X21
	037 Move [X22+16], X8
	038 Move [X22+24], W19
	039 Move X20, [X31+48]
	040 Move X19, [X31+56]
	041 Move X22, [X31+32]
	042 Move X21, [X31+40]
	043 Move X24, [X31+16]
	044 Move X23, [X31+24]
	045 Move X30, [X31+64]
	046 Move X25, [X31+72]
	047 Return 
	048 Move X0, 0x8FA000
	049 Move X0, [X0+1400]
	050 Call 0x1C17D08
	051 Call 0x1C17F10
	052 Move X19, X0
	053 Move X0, 0x949000
	054 Move X0, [X0+256]
	055 Call 0x1C17D08
	056 Move X20, X0
	057 Move X0, 0x949000
	058 Move X0, [X0+224]
	059 Call 0x1C17D08
	060 Move X2, X0
	061 Move X0, X19
	062 Move X1, X20
	063 Move X3, X31
	064 Call ArgumentException..ctor, X0, X1, X2
	065 Move X0, 0x8FA000
	066 Move X0, [X0+1888]
	067 Call 0x1C17D08
	068 Call 0x1C17F10
	069 Move X19, X0
	070 Move X0, 0x949000
	071 Move X0, [X0+264]
	072 Call 0x1C17D08
	073 Move X1, X0
	074 Move X0, X19
	075 Move X2, X31
	076 Call ArgumentOutOfRangeException..ctor, X0, X1
	077 Move X0, 0x949000
	078 Move X0, [X0+272]
	079 Call 0x1C17D08
	080 Move X1, X0
	081 Move X0, X19
	082 Call 0x1C17DEC

Method: System.Void AppendEvent(UnityEngine.InputSystem.LowLevel.InputEvent* eventPtr, System.Int32 capacityIncrementInBytes = 2048, Unity.Collections.Allocator allocator = 4)

Disassembly:
	0x03802B30 MOV X20, X0
	0x03802B34 BL 0x337DF1C
	0x03802B38 ADRP X0, 0x948000
	0x03802B3C LDR X0, [X0 + 0x1B8]
	0x03802B40 BL 0x1C16D08
	0x03802B44 MOV X1, X0
	0x03802B48 MOV X0, X20
	0x03802B4C BL 0x1C16DEC
	0x03802B50 SUB X31, X31, 0x30
	0x03802B54 STP X30, X0, [X31 + 0x10]
	0x03802B58 STP X20, X19, [X31 + 0x20]
	0x03802B5C ADRP X20, 0xBDF000
	0x03802B60 LDRB W8, [X20 + 0x446]
	0x03802B64 MOV X19, X0
	0x03802B68 TBNZ X8, 0x0, 0x3802B80
	0x03802B6C ADRP X0, 0x944000
	0x03802B70 LDR X0, [X0 + 0xD50]
	0x03802B74 BL 0x1C16CF4
	0x03802B78 MOVZ W8, 0x1
	0x03802B7C STRB W8, [X20 + 0x446]
	0x03802B80 CBZ X19, 0x3802BB4
	0x03802B84 ADRP X8, 0x944000
	0x03802B88 LDR X8, [X8 + 0xD50]
	0x03802B8C ADD X0, X31, 0x18
	0x03802B90 LDR X1, [X8]
	0x03802B94 BL 0x2208050
	0x03802B98 LDR X8, [X31 + 0x18]
	0x03802B9C TBZ X0, 0x0, 0x3802BFC
	0x03802BA0 LDP X20, X19, [X31 + 0x20]
	0x03802BA4 LDR X30, [X31 + 0x10]
	0x03802BA8 MOV X0, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {18}
	006 NotImplemented "Instruction LDRH not yet implemented."
	007 Move X19, X1
	008 Move W1, W20
	009 Call InputEventBuffer.AllocateEvent, X0, X1, X2, X3
	010 Move X1, X19
	011 Move X2, X20
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X3, X31
	015 Move X30, [X31+32]
	016 Call UnsafeUtility.MemCpy, X0, X1, X2
	017 Return 
	018 Move X0, 0x8F7000
	019 Move X0, [X0+1320]
	020 Call 0x1C17D08
	021 Call 0x1C17F10
	022 Move X19, X0
	023 Move X0, 0x91A000
	024 Move X0, [X0+3440]
	025 Call 0x1C17D08
	026 Move X1, X0
	027 Move X0, X19
	028 Move X2, X31
	029 Call ArgumentNullException..ctor, X0, X1
	030 Move X0, 0x949000
	031 Move X0, [X0+280]
	032 Call 0x1C17D08
	033 Move X1, X0
	034 Move X0, X19
	035 Call 0x1C17DEC

Method: UnityEngine.InputSystem.LowLevel.InputEvent* AllocateEvent(System.Int32 sizeInBytes, System.Int32 capacityIncrementInBytes = 2048, Unity.Collections.Allocator allocator = 4)

Disassembly:
	0x03802BAC ADD X31, X31, 0x30
	0x03802BB0 RET
	0x03802BB4 ADRP X0, 0x8F6000
	0x03802BB8 LDR X0, [X0 + 0x528]
	0x03802BBC BL 0x1C16D08
	0x03802BC0 BL 0x1C16F10
	0x03802BC4 MOV X19, X0
	0x03802BC8 ADRP X0, 0x920000
	0x03802BCC LDR X0, [X0 + 0x240]
	0x03802BD0 BL 0x1C16D08
	0x03802BD4 MOV X1, X0
	0x03802BD8 MOV X0, X19
	0x03802BDC MOV X2, X31
	0x03802BE0 BL 0x330E100
	0x03802BE4 ADRP X0, 0x948000
	0x03802BE8 LDR X0, [X0 + 0x1C0]
	0x03802BEC BL 0x1C16D08
	0x03802BF0 MOV X1, X0
	0x03802BF4 MOV X0, X19
	0x03802BF8 BL 0x1C16DEC
	0x03802BFC CBZ X8, 0x3802C04
	0x03802C00 LDR W8, [X8]
	0x03802C04 STR W8, [X31 + 0x8]
	0x03802C08 ADRP X0, 0x919000
	0x03802C0C LDR X0, [X0 + 0xD28]
	0x03802C10 BL 0x1C16D08
	0x03802C14 ADD X1, X31, 0x8
	0x03802C18 BL 0x1C16E04
	0x03802C1C MOV X19, X0
	0x03802C20 ADRP X0, 0x948000
	0x03802C24 LDR X0, [X0 + 0x1C8]
	0x03802C28 BL 0x1C16D08
	0x03802C2C MOV X1, X19
	0x03802C30 MOV X2, X31
	0x03802C34 BL 0x321EFD0
	0x03802C38 MOV X19, X0
	0x03802C3C ADRP X0, 0x8F9000
	0x03802C40 LDR X0, [X0 + 0xC08]
	0x03802C44 BL 0x1C16D08
	0x03802C48 BL 0x1C16F10
	0x03802C4C MOV X1, X19
	0x03802C50 MOV X2, X31
	0x03802C54 MOV X20, X0
	0x03802C58 BL 0x337B498
	0x03802C5C ADRP X0, 0x948000
	0x03802C60 LDR X0, [X0 + 0x1C0]
	0x03802C64 BL 0x1C16D08
	0x03802C68 MOV X1, X0
	0x03802C6C MOV X0, X20
	0x03802C70 BL 0x1C16DEC
	0x03802C74 LDRH W8, [X0 + 0x4]
	0x03802C78 SUB W0, W8, 0x18
	0x03802C7C RET
	0x03802C80 SUB X31, X31, 0x30
	0x03802C84 STP X30, X21, [X31 + 0x10]
	0x03802C88 STP X20, X19, [X31 + 0x20]
	0x03802C8C ADRP X20, 0xBDF000
	0x03802C90 ADRP X21, 0x948000
	0x03802C94 LDRB W8, [X20 + 0x421]
	0x03802C98 LDR X21, [X21 + 0x68]
	0x03802C9C MOV X19, X0
	0x03802CA0 TBNZ X8, 0x0, 0x3802CB8
	0x03802CA4 ADRP X0, 0x948000
	0x03802CA8 LDR X0, [X0 + 0x68]
	0x03802CAC BL 0x1C16CF4
	0x03802CB0 MOVZ W8, 0x1
	0x03802CB4 STRB W8, [X20 + 0x421]
	0x03802CB8 LDR X1, [X21]
	0x03802CBC MOV X0, X19
	0x03802CC0 BL 0x2207FC4
	0x03802CC4 LDR X8, [X19]
	0x03802CC8 TBZ X0, 0x0, 0x3802CEC
	0x03802CCC MOV X0, X8
	0x03802CD0 BL 0x38006E0
	0x03802CD4 CBZ X0, 0x3802D50
	0x03802CD8 LDR W0, [X0 + 0x18]
	0x03802CDC LDP X20, X19, [X31 + 0x20]
	0x03802CE0 LDP X30, X21, [X31 + 0x10]
	0x03802CE4 ADD X31, X31, 0x30
	0x03802CE8 RET
	0x03802CEC ADD X0, X31, 0x8
	0x03802CF0 STR X8, [X31 + 0x8]
	0x03802CF4 BL 0x38029B0
	0x03802CF8 MOV X19, X0
	0x03802CFC ADRP X0, 0x948000
	0x03802D00 LDR X0, [X0 + 0x1D0]
	0x03802D04 BL 0x1C16D08
	0x03802D08 MOV X1, X19
	0x03802D0C MOV X2, X31
	0x03802D10 BL 0x321B938
	0x03802D14 MOV X19, X0
	0x03802D18 ADRP X0, 0x8F1000
	0x03802D1C LDR X0, [X0 + 0x5B0]
	0x03802D20 BL 0x1C16D08
	0x03802D24 BL 0x1C16F10
	0x03802D28 MOV X1, X19
	0x03802D2C MOV X2, X31
	0x03802D30 MOV X20, X0
	0x03802D34 BL 0x337DF1C
	0x03802D38 ADRP X0, 0x948000
	0x03802D3C LDR X0, [X0 + 0x1D8]
	0x03802D40 BL 0x1C16D08
	0x03802D44 MOV X1, X0
	0x03802D48 MOV X0, X20
	0x03802D4C BL 0x1C16DEC
	0x03802D50 BL 0x1C16F20
	0x03802D54 LDR X8, [X0]
	0x03802D58 CBZ X8, 0x3802D78
	0x03802D5C LDRH W9, [X8 + 0x4]
	0x03802D60 AND W10, W9, 0xFFFC
	0x03802D64 ADD W10, W10, 0x4
	0x03802D68 ANDS W31, W9, 0x3
	0x03802D6C CSEL W9, W9, W10, EQ
	0x03802D70 ADD X0, X9, X8
	0x03802D74 RET
	0x03802D78 MOV X0, X31
	0x03802D7C RET
	0x03802D80 LDR X0, [X0]
	0x03802D84 RET
	0x03802D88 LDR X0, [X0]
	0x03802D8C CMP X0, X1
	0x03802D90 B.NE 0x3802D9C
	0x03802D94 MOVZ W0, 0x1
	0x03802D98 RET
	0x03802D9C B 0x3801750
	0x03802DA0 STP X30, X21, [X31 - 0x20]!
	0x03802DA4 STP X20, X19, [X31 + 0x10]
	0x03802DA8 ADRP X21, 0xBDF000
	0x03802DAC LDRB W8, [X21 + 0x423]
	0x03802DB0 MOV X20, X1
	0x03802DB4 MOV X19, X0
	0x03802DB8 TBNZ X8, 0x0, 0x3802DD0
	0x03802DBC ADRP X0, 0x91C000
	0x03802DC0 LDR X0, [X0 + 0x4F8]
	0x03802DC4 BL 0x1C16CF4
	0x03802DC8 MOVZ W8, 0x1
	0x03802DCC STRB W8, [X21 + 0x423]
	0x03802DD0 CBZ X20, 0x3802DEC
	0x03802DD4 ADRP X8, 0x91C000
	0x03802DD8 LDR X8, [X8 + 0x4F8]
	0x03802DDC LDR X9, [X20]
	0x03802DE0 LDR X8, [X8]
	0x03802DE4 CMP X9, X8
	0x03802DE8 B.EQ 0x3802DFC
	0x03802DEC MOV W0, W31
	0x03802DF0 LDP X20, X19, [X31 + 0x10]
	0x03802DF4 LDP X30, X21, [X31], #0x20
	0x03802DF8 RET
	0x03802DFC MOV X0, X20
	0x03802E00 BL 0x1C16E08
	0x03802E04 LDR X1, [X0]
	0x03802E08 LDR X0, [X19]
	0x03802E0C CMP X0, X1
	0x03802E10 B.EQ 0x3802E20
	0x03802E14 LDP X20, X19, [X31 + 0x10]
	0x03802E18 LDP X30, X21, [X31], #0x20
	0x03802E1C B 0x3801750
	0x03802E20 MOVZ W0, 0x1
	0x03802E24 B 0x3802DF0
	0x03802E28 LDR W0, [X0]
	0x03802E2C RET
	0x03802E30 CMP X0, X1
	0x03802E34 CSET W0, EQ
	0x03802E38 RET
	0x03802E3C CMP X0, X1
	0x03802E40 CSET W0, NE
	0x03802E44 RET
	0x03802E48 RET
	0x03802E4C RET
	0x03802E50 LDRB W0, [X0 + 0x70]
	0x03802E54 RET
	0x03802E58 LDR W8, [X0 + 0x30]
	0x03802E5C LDR W9, [X0 + 0x68]
	0x03802E60 ADD W0, W9, W8
	0x03802E64 RET
	0x03802E68 LDR W0, [X0 + 0x6C]
	0x03802E6C RET
	0x03802E70 LDR W8, [X0 + 0x30]
	0x03802E74 CMP W8, 0x0
	0x03802E78 B.LE 0x3802E84
	0x03802E7C ADD X8, X0, 0x20
	0x03802E80 B 0x3802E94
	0x03802E84 LDR W8, [X0 + 0x68]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X23, 0xBE0000
	011 Move W8, [X23+1043]
	012 Move W21, W3
	013 Move W22, W2
	014 Move W19, W1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {37}
	020 Move X0, 0x949000
	021 Move X0, [X0+200]
	022 Call 0x1C17CF4
	023 Move X0, 0x946000
	024 Move X0, [X0+4072]
	025 Call 0x1C17CF4
	026 Move X0, 0x91A000
	027 Move X0, [X0+3432]
	028 Call 0x1C17CF4
	029 Move X0, 0x946000
	030 Move X0, [X0+4064]
	031 Call 0x1C17CF4
	032 Move X0, 0x948000
	033 Move X0, [X0+1696]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+1043], W8
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move [X31+16], X31
	039 Move [X31+24], X31
	040 Move X25, 0xBE0000
	041 Move W9, [X25+1039]
	042 Move X24, [X20+16]
	043 Add W8, W19, 4
	044 And W8, W8, 0xFFFFFFFC
	045 And W31, W19, 3
	046 NotImplemented "Instruction CSEL not yet implemented."
	047 Move TEMP, X9
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {56}
	051 Move X0, 0x948000
	052 Move X0, [X0+1696]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X25+1039], W8
	056 Move X0, [X20]
	057 Add X8, X24, W23
	058 Compare X0, 0
	059 JumpIfEqual {61}
	060 NotImplemented "Instruction LDRSW not yet implemented."
	061 Move X9, X31
	062 Move X24, 0x949000
	063 Move X24, [X24+200]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X9, W22
	066 NotImplemented "Instruction SDIV not yet implemented."
	067 Add X10, X8, W22
	068 NotImplemented "Instruction MSUB not yet implemented."
	069 Subtract X10, X10, X9
	070 NotImplemented "Instruction CMP not yet implemented."
	071 NotImplemented "Instruction CSEL not yet implemented."
	072 Move W8, 0x80000000
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X8, 0x946000
	075 Move X8, [X8+4064]
	076 Add X0, X31, 16
	077 Move W3, 1
	078 Move W2, W21
	079 Move X4, [X8]
	080 Move W22, 1
	081 Call NativeArray`1<Byte>..ctor, X0, X1, X2, X3
	082 Move X8, [X20]
	083 Compare X8, 0
	084 JumpIfEqual {110}
	085 Move X8, 0x946000
	086 Move X0, [X31+16]
	087 Move X1, [X31+24]
	088 Move X8, [X8+4072]
	089 Move X2, [X8]
	090 Call 0x2223688, X0
	091 Move X8, [X20]
	092 Move X1, [X20+8]
	093 Move X2, [X24]
	094 Move X21, X0
	095 Move X0, X8
	096 Call 0x2223670, X0
	097 Move X2, [X20+16]
	098 Move X1, X0
	099 Move X0, X21
	100 Move X3, X31
	101 Call UnsafeUtility.MemCpy, X0, X1, X2
	102 Move W8, [X20+28]
	103 Compare W8, 0
	104 JumpIfEqual {110}
	105 Move X8, 0x91A000
	106 Move X8, [X8+3432]
	107 Move X0, X20
	108 Move X1, [X8]
	109 Call NativeArray`1<Byte>.Dispose, X0
	110 Move V0, [X31+1]
	111 Move [X20+28], W22
	112 Move [X20], V0
	113 Move X0, [X20]
	114 Move X1, [X20+8]
	115 Move X2, [X24]
	116 Move X22, W23
	117 Call 0x2223670, X0
	118 Move X8, [X20+16]
	119 Move W1, W19
	120 Add X21, X8, X0
	121 Move X0, X21
	122 Call InputEvent.set_sizeInBytes, X0, X1
	123 Move X8, [X20+16]
	124 Move W9, [X20+24]
	125 Move X0, X21
	126 Move X24, [X31+48]
	127 Move X23, [X31+56]
	128 Add X8, X8, X22
	129 Add W9, W9, 1
	130 Move [X20+16], X8
	131 Move [X20+24], W9
	132 Move X20, [X31+80]
	133 Move X19, [X31+88]
	134 Move X22, [X31+64]
	135 Move X21, [X31+72]
	136 Move X30, [X31+32]
	137 Move X25, [X31+40]
	138 Add X31, X31, 96
	139 Return X0
	140 Move W8, 20
	141 Move [X31+12], W8
	142 Move X20, 0x8F2000
	143 Move X20, [X20+1880]
	144 Move X0, X20
	145 Call 0x1C17D08
	146 Add X1, X31, 12
	147 Call 0x1C17E04
	148 Move X21, X0
	149 Move X0, X20
	150 Move [X31+8], W19
	151 Call 0x1C17D08
	152 Add X1, X31, 8
	153 Call 0x1C17E04
	154 Move X19, X0
	155 Move X0, 0x949000
	156 Move X0, [X0+288]
	157 Call 0x1C17D08
	158 Move X1, X21
	159 Move X2, X19
	160 Move X3, X31
	161 Call String.Format, X0, X1, X2
	162 Move X19, X0
	163 Move X0, 0x8FA000
	164 Move X0, [X0+1400]
	165 Call 0x1C17D08
	166 Call 0x1C17F10
	167 Move X20, X0
	168 Move X0, 0x949000
	169 Move X0, [X0+264]
	170 Call 0x1C17D08
	171 Move X2, X0
	172 Move X0, X20
	173 Move X1, X19
	174 Move X3, X31
	175 Call ArgumentException..ctor, X0, X1, X2
	176 Move X0, 0x949000
	177 Move X0, [X0+296]
	178 Call 0x1C17D08
	179 Move X1, X0
	180 Move X0, X20
	181 Call 0x1C17DEC
	182 Move X0, 0x8FB000
	183 Move X0, [X0+1880]
	184 Call 0x1C17D08
	185 Call 0x1C17F10
	186 Move X19, X0
	187 Move X0, 0x949000
	188 Move X0, [X0+304]
	189 Call 0x1C17D08
	190 Move X1, X0
	191 Move X0, X19
	192 Move X2, X31
	193 Call NotImplementedException..ctor, X0, X1
	194 Move X0, 0x949000
	195 Move X0, [X0+296]
	196 Call 0x1C17D08
	197 Move X1, X0
	198 Move X0, X19
	199 Call 0x1C17DEC

Method: System.Boolean Contains(UnityEngine.InputSystem.LowLevel.InputEvent* eventPtr)

Disassembly:
	0x038026C8 LDR W8, [X8 + 0x10]
	0x038026CC AND W0, W8, 0x7FFFFFFF
	0x038026D0 RET
	0x038026D4 MOV W0, W31
	0x038026D8 RET
	0x038026DC STP X30, X19, [X31 - 0x10]!
	0x038026E0 LDR X8, [X0]
	0x038026E4 CBZ X8, 0x3802700
	0x038026E8 LDR W9, [X8 + 0x10]
	0x038026EC AND W9, W9, 0x80000000
	0x038026F0 ORR W9, W9, W1, 0x0
	0x038026F4 STR W9, [X8 + 0x10]
	0x038026F8 LDP X30, X19, [X31], #0x10
	0x038026FC RET
	0x03802700 ADRP X0, 0x8F1000
	0x03802704 LDR X0, [X0 + 0x5B0]
	0x03802708 BL 0x1C16D08
	0x0380270C BL 0x1C16F10
	0x03802710 MOV X19, X0
	0x03802714 ADRP X0, 0x947000
	0x03802718 LDR X0, [X0 + 0xDA0]
	0x0380271C BL 0x1C16D08
	0x03802720 MOV X1, X0
	0x03802724 MOV X0, X19
	0x03802728 MOV X2, X31
	0x0380272C BL 0x337DF1C
	0x03802730 ADRP X0, 0x948000
	0x03802734 LDR X0, [X0 + 0x188]
	0x03802738 BL 0x1C16D08
	0x0380273C MOV X1, X0
	0x03802740 MOV X0, X19
	0x03802744 BL 0x1C16DEC
	0x03802748 LDR X8, [X0]
	0x0380274C CBZ X8, 0x3802758

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xBE0000
	006 Move W8, [X21+1044]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x949000
	014 Move X0, [X0+200]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1044], W8
	018 Compare X19, 0
	019 JumpIfEqual {30}
	020 Move X8, [X20+16]
	021 Compare X8, 0
	022 JumpIfEqual {30}
	023 Move X8, 0x949000
	024 Move X0, [X20]
	025 Move X1, [X20+8]
	026 Move X8, [X8+200]
	027 Move X2, [X8]
	028 Call 0x2223670, X0
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W0, W31
	031 Move X8, [X20+16]
	032 Add X31, X8, 1
	033 Add X8, X8, X0
	034 NotImplemented "Instruction CSET not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Or W0, W9, W8
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return X0

Method: System.Void Reset()

Disassembly:
	0x03802E88 CMP W8, 0x1
	0x03802E8C B.LT 0x3802E9C
	0x03802E90 ADD X8, X0, 0x58
	0x03802E94 LDR X0, [X8]
	0x03802E98 RET
	0x03802E9C MOV X0, X31

ISIL:
	001 Move X8, [X0+16]
	002 Move [X0+24], W31
	003 Add X31, X8, 1
	004 Move [X0+16], X31
	005 Return 

Method: System.Void AdvanceToNextEvent(ref UnityEngine.InputSystem.LowLevel.InputEvent* currentReadPos, ref UnityEngine.InputSystem.LowLevel.InputEvent* currentWritePos, ref System.Int32 numEventsRetainedInBuffer, ref System.Int32 numRemainingEvents, System.Boolean leaveEventInBuffer)

Disassembly:
	0x03802EA0 RET
	0x03802EA4 STP X30, X21, [X31 - 0x20]!
	0x03802EA8 STP X20, X19, [X31 + 0x10]
	0x03802EAC ADRP X21, 0xBDF000
	0x03802EB0 ADRP X20, 0x948000
	0x03802EB4 LDRB W8, [X21 + 0x424]
	0x03802EB8 LDR X20, [X20 + 0xC8]
	0x03802EBC MOV X19, X0
	0x03802EC0 TBNZ X8, 0x0, 0x3802ED8
	0x03802EC4 ADRP X0, 0x948000
	0x03802EC8 LDR X0, [X0 + 0xC8]
	0x03802ECC BL 0x1C16CF4
	0x03802ED0 MOVZ W8, 0x1
	0x03802ED4 STRB W8, [X21 + 0x424]
	0x03802ED8 LDP X0, X1, [X19]
	0x03802EDC LDR X2, [X20]
	0x03802EE0 LDR W21, [X19 + 0x28]
	0x03802EE4 BL 0x2222670
	0x03802EE8 LDP X20, X19, [X31 + 0x10]
	0x03802EEC SUB W0, W21, W0
	0x03802EF0 LDP X30, X21, [X31], #0x20
	0x03802EF4 RET
	0x03802EF8 STP X30, X23, [X31 - 0x30]!
	0x03802EFC STP X22, X21, [X31 + 0x10]
	0x03802F00 STP X20, X19, [X31 + 0x20]
	0x03802F04 ADRP X23, 0xBDF000
	0x03802F08 ADRP X22, 0x948000
	0x03802F0C LDRB W8, [X23 + 0x425]
	0x03802F10 LDR X22, [X22 + 0xC8]
	0x03802F14 MOV W19, W2
	0x03802F18 MOV X21, X1
	0x03802F1C MOV X20, X0
	0x03802F20 TBNZ X8, 0x0, 0x3802F38
	0x03802F24 ADRP X0, 0x948000
	0x03802F28 LDR X0, [X0 + 0xC8]
	0x03802F2C BL 0x1C16CF4
	0x03802F30 MOVZ W8, 0x1
	0x03802F34 STRB W8, [X23 + 0x425]
	0x03802F38 LDP X0, X1, [X21]
	0x03802F3C LDR X2, [X22]
	0x03802F40 BL 0x2222670
	0x03802F44 STP X0, X0, [X20 + 0x20]
	0x03802F48 LDP V1, V2, [X21]
	0x03802F4C MOVI V0.2D, 0x0
	0x03802F50 MOVZ W8, 0x1
	0x03802F54 STUR V0, [X20 + 0x38]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, X1
	009 Move W8, [X4]
	010 Move X1, [X1]
	011 Move X19, X4
	012 Move X21, X3
	013 Move X22, X2
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X24, X1
	016 NotImplemented "Instruction LDRH not yet implemented."
	017 And W10, W9, 0xFFFC
	018 Add W10, W10, 4
	019 And W31, W9, 3
	020 NotImplemented "Instruction CSEL not yet implemented."
	021 Add X24, X1, X9
	022 Move TEMP, X5
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {43}
	026 Move X0, [X22]
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X2, X23
	030 Move X3, X31
	031 Call UnsafeUtility.MemMove, X0, X1, X2
	032 Move X1, [X22]
	033 And W8, W23, 0xFFFC
	034 Add W8, W8, 4
	035 And W31, W23, 3
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Add X8, X1, X8
	038 Move [X22], X8
	039 Move W8, [X21]
	040 Add W8, W8, 1
	041 Move [X21], W8
	042 Move W8, [X19]
	043 Subtract W8, W8, 1
	044 Move [X20], X24
	045 Move [X19], W8
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X22, [X31+32]
	049 Move X21, [X31+40]
	050 Move X24, [X31+16]
	051 Move X23, [X31+24]
	052 Move X30, [X31+64]
	053 Return 

Method: System.Collections.Generic.IEnumerator`1<UnityEngine.InputSystem.LowLevel.InputEventPtr> GetEnumerator()

Disassembly:
	0x03802F58 STP V1, V2, [X20]
	0x03802F5C LDR W9, [X20 + 0x18]
	0x03802F60 STUR V0, [X20 + 0x48]
	0x03802F64 STUR V0, [X20 + 0x58]
	0x03802F68 STR X31, [X20 + 0x68]
	0x03802F6C STP W9, W19, [X20 + 0x30]
	0x03802F70 STRB W8, [X20 + 0x70]
	0x03802F74 LDP X20, X19, [X31 + 0x20]
	0x03802F78 LDP X22, X21, [X31 + 0x10]
	0x03802F7C LDP X30, X23, [X31], #0x30
	0x03802F80 RET
	0x03802F84 SUB X31, X31, 0x60
	0x03802F88 STR X30, [X31 + 0x20]
	0x03802F8C STP X24, X23, [X31 + 0x30]
	0x03802F90 STP X22, X21, [X31 + 0x40]
	0x03802F94 STP X20, X19, [X31 + 0x50]
	0x03802F98 ADRP X21, 0xBDF000
	0x03802F9C LDRB W8, [X21 + 0x426]
	0x03802FA0 MOV X19, X1
	0x03802FA4 MOV X20, X0
	0x03802FA8 TBNZ X8, 0x0, 0x3802FCC
	0x03802FAC ADRP X0, 0x948000
	0x03802FB0 LDR X0, [X0 + 0xC8]
	0x03802FB4 BL 0x1C16CF4
	0x03802FB8 ADRP X0, 0x947000
	0x03802FBC LDR X0, [X0 + 0x6A0]
	0x03802FC0 BL 0x1C16CF4
	0x03802FC4 MOVZ W8, 0x1
	0x03802FC8 STRB W8, [X21 + 0x426]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0xBE0000
	007 Move X20, 0x949000
	008 Move W8, [X21+1045]
	009 Move X20, [X20+312]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x949000
	016 Move X0, [X0+312]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1045], W8
	020 Move V1, [X19]
	021 Move V0, [X19+16]
	022 Add X0, X31, 32
	023 Move [X31+32], V1
	024 Move [X31+40], V0
	025 Call InputEventBuffer.get_bufferPtr, X0
	026 Move W8, [X31+56]
	027 Move [X31], X0
	028 Move X0, [X20]
	029 Add X1, X31, 0
	030 Move [X31+16], X31
	031 Move [X31+24], X31
	032 Move [X31+8], W8
	033 Move [X31+12], W31
	034 Call 0x1C17E04
	035 Move X20, [X31+80]
	036 Move X19, [X31+88]
	037 Move X30, [X31+64]
	038 Move X21, [X31+72]
	039 Add X31, X31, 96
	040 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x03803004 TBNZ X9, 0x0, 0x380301C

ISIL:
	001 Call InputEventBuffer.GetEnumerator, X0
	002 Return X0

Method: System.Void Dispose()

Disassembly:
	0x03803008 ADRP X0, 0x946000
	0x0380300C LDR X0, [X0 + 0x6A0]
	0x03803010 BL 0x1C16CF4
	0x03803014 MOVZ W8, 0x1
	0x03803018 STRB W8, [X24 + 0x40F]
	0x0380301C LDR X8, [X20]
	0x03803020 CBZ X8, 0x3803044
	0x03803024 LDR W4, [X20 + 0x8]
	0x03803028 B 0x3803048
	0x0380302C LDR X8, [X20 + 0x10]
	0x03803030 STR W31, [X20 + 0x18]
	0x03803034 ADDS X31, X8, 0x1
	0x03803038 B.EQ 0x380306C
	0x0380303C STR X31, [X20 + 0x10]
	0x03803040 B 0x380306C
	0x03803044 MOV W4, W31
	0x03803048 MOVI V0.2D, 0x0
	0x0380304C ADD X0, X31, 0x0
	0x03803050 MOV X1, X23
	0x03803054 MOV W2, W22
	0x03803058 MOV W3, W21
	0x0380305C STP V0, V0, [X31]
	0x03803060 BL 0x3801858
	0x03803064 LDP V1, V0, [X31]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xBDF000
	005 Move W8, [X20+1046]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x919000
	012 Move X0, [X0+3432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1046], W8
	016 Move W8, [X19+28]
	017 Compare W8, 0
	018 JumpIfEqual {27}
	019 Move X8, 0x919000
	020 Move X8, [X8+3432]
	021 Move X0, X19
	022 Move X1, [X8]
	023 Call NativeArray`1<Byte>.Dispose, X0
	024 Move [X19+28], W31
	025 Move [X19+16], X31
	026 Move [X19+24], W31
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return 

Method: UnityEngine.InputSystem.LowLevel.InputEventBuffer Clone()

Disassembly:
	0x03803068 STP V1, V0, [X20]
	0x0380306C MOV X0, X20
	0x03803070 LDR X8, [X0 + 0x38]!
	0x03803074 CBZ X8, 0x380307C
	0x03803078 BL 0x3802008
	0x0380307C LDP V1, V0, [X20]
	0x03803080 LDP X22, X21, [X31 + 0x40]
	0x03803084 LDP X24, X23, [X31 + 0x30]
	0x03803088 LDR X30, [X31 + 0x20]
	0x0380308C STP V1, V0, [X19]
	0x03803090 STRB W31, [X20 + 0x70]
	0x03803094 LDP X20, X19, [X31 + 0x50]
	0x03803098 ADD X31, X31, 0x60
	0x0380309C RET
	0x038030A0 STR X30, [X31 - 0x20]!
	0x038030A4 STP X20, X19, [X31 + 0x10]
	0x038030A8 ADRP X20, 0xBDE000
	0x038030AC LDRB W8, [X20 + 0x427]
	0x038030B0 MOV X19, X0
	0x038030B4 TBNZ X8, 0x0, 0x38030CC
	0x038030B8 ADRP X0, 0x946000
	0x038030BC LDR X0, [X0 + 0x6A0]
	0x038030C0 BL 0x1C16CF4
	0x038030C4 MOVZ W8, 0x1
	0x038030C8 STRB W8, [X20 + 0x427]
	0x038030CC LDRB W8, [X19 + 0x70]
	0x038030D0 CBZ W8, 0x38030FC
	0x038030D4 LDR X8, [X19 + 0x10]
	0x038030D8 STR W31, [X19 + 0x18]
	0x038030DC ADDS X31, X8, 0x1
	0x038030E0 B.EQ 0x38030E8
	0x038030E4 STR X31, [X19 + 0x10]
	0x038030E8 MOV X0, X19
	0x038030EC LDR X8, [X0 + 0x38]!
	0x038030F0 CBZ X8, 0x38030F8
	0x038030F4 BL 0x3802008
	0x038030F8 STRB W31, [X19 + 0x70]
	0x038030FC LDP X20, X19, [X31 + 0x10]
	0x03803100 LDR X30, [X31], #0x20
	0x03803104 RET
	0x03803108 SUB X31, X31, 0x40
	0x0380310C STP X30, X23, [X31 + 0x10]
	0x03803110 STP X22, X21, [X31 + 0x20]
	0x03803114 STP X20, X19, [X31 + 0x30]
	0x03803118 ADRP X21, 0xBDE000
	0x0380311C LDRB W8, [X21 + 0x428]
	0x03803120 MOV X20, X1
	0x03803124 MOV X19, X0
	0x03803128 TBNZ X8, 0x0, 0x380317C
	0x0380312C ADRP X0, 0x8F0000
	0x03803130 LDR X0, [X0 + 0xA28]
	0x03803134 BL 0x1C16CF4
	0x03803138 ADRP X0, 0x8F0000
	0x0380313C LDR X0, [X0 + 0x758]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X21, 0xBDF000
	008 Move W9, [X21+1047]
	009 Move X20, X0
	010 Move X19, X8
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x948000
	016 Move X0, [X0+320]
	017 Call 0x1C17CF4
	018 Move X0, 0x945000
	019 Move X0, [X0+4064]
	020 Call 0x1C17CF4
	021 Move X0, 0x947000
	022 Move X0, [X0+1696]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+1047], W8
	026 NotImplemented "Instruction MOVI not yet implemented."
	027 Move [X31+16], V0
	028 Move [X31+24], V0
	029 Move X8, [X20]
	030 Compare X8, 0
	031 JumpIfEqual {53}
	032 Move X8, 0x945000
	033 Move X8, [X8+4064]
	034 Move W1, [X20+8]
	035 Move X21, 0x948000
	036 Add X0, X31, 0
	037 Move X4, [X8]
	038 Move X21, [X21+320]
	039 Move W2, 4
	040 Move W3, 1
	041 Move [X31], X31
	042 Move [X31+8], X31
	043 Move W22, 1
	044 Call NativeArray`1<Byte>..ctor, X0, X1, X2, X3
	045 Move V0, [X31]
	046 Move X3, [X21]
	047 Add X0, X31, 16
	048 Move [X31+1], V0
	049 Move X1, [X20]
	050 Move X2, [X20+8]
	051 Call NativeArray`1<Byte>.CopyFrom, X0, X1
	052 Move [X31+44], W22
	053 Move X8, [X20+16]
	054 Move X22, [X31+64]
	055 Move X21, [X31+72]
	056 Move X30, [X31+48]
	057 Move [X31+32], X8
	058 Move W8, [X20+24]
	059 Move [X31+40], W8
	060 Move V1, [X31+16]
	061 Move V0, [X31+32]
	062 Move [X19], V1
	063 Move [X19+8], V0
	064 Move X20, [X31+80]
	065 Move X19, [X31+88]
	066 Add X31, X31, 96
	067 Return X0

Method: System.Object System.ICloneable.Clone()

Disassembly:
	0x03803140 BL 0x1C16CF4
	0x03803144 ADRP X0, 0x947000
	0x03803148 LDR X0, [X0 + 0xC8]
	0x0380314C BL 0x1C16CF4
	0x03803150 ADRP X0, 0x946000
	0x03803154 LDR X0, [X0 + 0x6A0]
	0x03803158 BL 0x1C16CF4
	0x0380315C ADRP X0, 0x947000
	0x03803160 LDR X0, [X0 + 0x1E0]
	0x03803164 BL 0x1C16CF4
	0x03803168 ADRP X0, 0x947000
	0x0380316C LDR X0, [X0 + 0x1E8]
	0x03803170 BL 0x1C16CF4
	0x03803174 MOVZ W8, 0x1
	0x03803178 STRB W8, [X21 + 0x428]
	0x0380317C LDR W9, [X19 + 0x50]
	0x03803180 LDR W8, [X19 + 0x34]
	0x03803184 CMP W9, W8
	0x03803188 B.GE 0x38031E0
	0x0380318C ADD X22, X19, 0x38
	0x03803190 LDR X23, [X22]
	0x03803194 MOV X0, X22
	0x03803198 BL 0x380180C
	0x0380319C MOV X21, X0
	0x038031A0 MOVZ W2, 0x800
	0x038031A4 MOVZ W3, 0x2

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0xBDF000
	007 Move X20, 0x948000
	008 Move W8, [X21+1048]
	009 Move X20, [X20+328]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x948000
	016 Move X0, [X0+328]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1048], W8
	020 Add X8, X31, 32
	021 Move X0, X19
	022 Call InputEventBuffer.Clone, X0
	023 Move V0, [X31+32]
	024 Move V1, [X31+48]
	025 Move X0, [X20]
	026 Add X1, X31, 0
	027 Move [X31], V0
	028 Move [X31+8], V1
	029 Call 0x1C17E04
	030 Move X20, [X31+80]
	031 Move X19, [X31+88]
	032 Move X30, [X31+64]
	033 Move X21, [X31+72]
	034 Add X31, X31, 96
	035 Return X0

