Type: UnityEngine.InputSystem.InputActionMap/ReadFileJson

Method: UnityEngine.InputSystem.InputActionMap[] ToMaps()

Disassembly:
	0x03739BEC CBNZ W8, 0x3739C84
	0x03739BF0 MOVN W8, 0x0
	0x03739BF4 STR W8, [X19 + 0x10]
	0x03739BF8 CBZ X20, 0x3739CB4
	0x03739BFC LDR X8, [X20 + 0x18]
	0x03739C00 CBZ X8, 0x3739C84
	0x03739C04 MOV W8, W31
	0x03739C08 STR W31, [X19 + 0x28]
	0x03739C0C B 0x3739C6C
	0x03739C10 LDP W8, W9, [X19 + 0x40]
	0x03739C14 MOVN W10, 0x0
	0x03739C18 STR W10, [X19 + 0x10]
	0x03739C1C ADD W1, W9, 0x1
	0x03739C20 STR W1, [X19 + 0x44]
	0x03739C24 B 0x3739C50
	0x03739C28 B.CS 0x3739CB8
	0x03739C2C ADD X8, X9, W8, 0x3, SXTW
	0x03739C30 LDR X0, [X8 + 0x20]
	0x03739C34 CBZ X0, 0x3739CB4
	0x03739C38 BL 0x3739CBC
	0x03739C3C MOV X8, X1
	0x03739C40 STP X0, X8, [X19 + 0x30]
	0x03739C44 UBFM X8, X8, 0x20, 0x3F
	0x03739C48 MOV W1, W31
	0x03739C4C STP W8, W31, [X19 + 0x40]
	0x03739C50 CMP W1, W8
	0x03739C54 ADD X0, X19, 0x30
	0x03739C58 B.LT 0x3739C8C
	0x03739C5C STP X31, X31, [X0]
	0x03739C60 LDR W8, [X19 + 0x28]
	0x03739C64 ADD W8, W8, 0x1
	0x03739C68 STR W8, [X19 + 0x28]
	0x03739C6C CBZ X20, 0x3739CB4
	0x03739C70 LDR X9, [X20 + 0x18]
	0x03739C74 CBZ X9, 0x3739CB4
	0x03739C78 LDR W10, [X9 + 0x18]
	0x03739C7C CMP W8, W10
	0x03739C80 B.LT 0x3739C28
	0x03739C84 MOV W0, W31
	0x03739C88 B 0x3739CA8
	0x03739C8C ADRP X8, 0xA0C000
	0x03739C90 LDR X8, [X8 + 0x258]
	0x03739C94 LDR X2, [X8]
	0x03739C98 BL 0x24FDB3C
	0x03739C9C STR X0, [X19 + 0x18]
	0x03739CA0 MOVZ W0, 0x1
	0x03739CA4 STR W0, [X19 + 0x10]
	0x03739CA8 LDP X20, X19, [X31 + 0x10]
	0x03739CAC LDR X30, [X31], #0x20
	0x03739CB0 RET
	0x03739CB4 BL 0x1C16F20
	0x03739CB8 BL 0x1C16F28
	0x03739CBC SUB X31, X31, 0x30
	0x03739CC0 STP X30, X21, [X31 + 0x10]
	0x03739CC4 STP X20, X19, [X31 + 0x20]
	0x03739CC8 ADRP X21, 0xCA7000
	0x03739CCC ADRP X20, 0xA0C000
	0x03739CD0 LDRB W8, [X21 + 0xD06]
	0x03739CD4 LDR X20, [X20 + 0x260]
	0x03739CD8 MOV X19, X0
	0x03739CDC TBNZ X8, 0x0, 0x3739CF4
	0x03739CE0 ADRP X0, 0xA0C000
	0x03739CE4 LDR X0, [X0 + 0x260]
	0x03739CE8 BL 0x1C16CF4
	0x03739CEC MOVZ W8, 0x1
	0x03739CF0 STRB W8, [X21 + 0xD06]
	0x03739CF4 LDR X1, [X19 + 0x28]
	0x03739CF8 LDR X2, [X20]
	0x03739CFC ADD X0, X31, 0x0
	0x03739D00 STP X31, X31, [X31]
	0x03739D04 BL 0x24FD80C
	0x03739D08 LDP X0, X1, [X31]
	0x03739D0C LDP X20, X19, [X31 + 0x20]
	0x03739D10 LDP X30, X21, [X31 + 0x10]
	0x03739D14 ADD X31, X31, 0x30
	0x03739D18 RET
	0x03739D1C LDR X0, [X0 + 0x18]
	0x03739D20 RET
	0x03739D24 STP X30, X19, [X31 - 0x10]!
	0x03739D28 ADRP X0, 0x9BA000
	0x03739D2C LDR X0, [X0 + 0xB40]
	0x03739D30 BL 0x1C16D08
	0x03739D34 BL 0x1C16F10
	0x03739D38 MOV X1, X31
	0x03739D3C MOV X19, X0
	0x03739D40 BL 0x3380310
	0x03739D44 ADRP X0, 0xA0C000
	0x03739D48 LDR X0, [X0 + 0x268]
	0x03739D4C BL 0x1C16D08
	0x03739D50 MOV X1, X0
	0x03739D54 MOV X0, X19
	0x03739D58 BL 0x1C16DEC
	0x03739D5C LDR X0, [X0 + 0x18]
	0x03739D60 RET
	0x03739D64 RET
	0x03739D68 STR X30, [X31 - 0x20]!
	0x03739D6C STP X20, X19, [X31 + 0x10]
	0x03739D70 ADRP X20, 0xCA7000
	0x03739D74 LDRB W8, [X20 + 0xD03]
	0x03739D78 MOV X19, X0
	0x03739D7C TBNZ X8, 0x0, 0x3739DA0
	0x03739D80 ADRP X0, 0xA0C000
	0x03739D84 LDR X0, [X0 + 0x100]
	0x03739D88 BL 0x1C16CF4
	0x03739D8C ADRP X0, 0xA0B000
	0x03739D90 LDR X0, [X0 + 0xFD0]
	0x03739D94 BL 0x1C16CF4
	0x03739D98 MOVZ W8, 0x1
	0x03739D9C STRB W8, [X20 + 0xD03]
	0x03739DA0 LDR W8, [X19 + 0x10]
	0x03739DA4 LDR X20, [X19 + 0x78]
	0x03739DA8 CMP W8, 0x1
	0x03739DAC B.EQ 0x3739DE8
	0x03739DB0 CBNZ W8, 0x3739E64
	0x03739DB4 MOVN W8, 0x0
	0x03739DB8 STR W8, [X19 + 0x10]
	0x03739DBC CBZ X20, 0x3739EAC
	0x03739DC0 ADRP X8, 0xA0C000
	0x03739DC4 LDR X0, [X20 + 0x18]
	0x03739DC8 LDR X8, [X8 + 0x100]
	0x03739DCC LDR X1, [X8]
	0x03739DD0 BL 0x217B258
	0x03739DD4 STR W0, [X19 + 0x80]
	0x03739DD8 CBZ W0, 0x3739EA0
	0x03739DDC MOV W8, W31
	0x03739DE0 STR W31, [X19 + 0x84]
	0x03739DE4 B 0x3739E5C
	0x03739DE8 LDP W0, W8, [X19 + 0x90]
	0x03739DEC MOVN W9, 0x0
	0x03739DF0 STR W9, [X19 + 0x10]
	0x03739DF4 ADD W8, W8, 0x1
	0x03739DF8 STR W8, [X19 + 0x94]
	0x03739DFC B 0x3739E44
	0x03739E00 CBZ X20, 0x3739EAC
	0x03739E04 LDR X9, [X20 + 0x18]
	0x03739E08 CBZ X9, 0x3739EAC
	0x03739E0C LDR W10, [X9 + 0x18]
	0x03739E10 CMP W8, W10
	0x03739E14 B.CS 0x3739EB0
	0x03739E18 ADD X8, X9, W8, 0x3, SXTW
	0x03739E1C LDR X8, [X8 + 0x20]
	0x03739E20 CBZ X8, 0x3739EAC
	0x03739E24 LDR X0, [X8 + 0x30]
	0x03739E28 ADRP X8, 0xA0B000
	0x03739E2C LDR X8, [X8 + 0xFD0]
	0x03739E30 STR X0, [X19 + 0x88]
	0x03739E34 LDR X1, [X8]
	0x03739E38 BL 0x217B240
	0x03739E3C MOV W8, W31
	0x03739E40 STP W0, W31, [X19 + 0x90]
	0x03739E44 CMP W8, W0
	0x03739E48 B.LT 0x3739E6C
	0x03739E4C LDP W0, W8, [X19 + 0x80]
	0x03739E50 STR X31, [X19 + 0x88]
	0x03739E54 ADD W8, W8, 0x1
	0x03739E58 STR W8, [X19 + 0x84]
	0x03739E5C CMP W8, W0
	0x03739E60 B.LT 0x3739E00
	0x03739E64 MOV W0, W31
	0x03739E68 B 0x3739EA0
	0x03739E6C LDR X9, [X19 + 0x88]
	0x03739E70 CBZ X9, 0x3739EAC
	0x03739E74 LDR W10, [X9 + 0x18]
	0x03739E78 CMP W8, W10
	0x03739E7C B.CS 0x3739EB0
	0x03739E80 MOVZ W10, 0x58
	0x03739E84 SMADDL X8, X8, X10, X9
	0x03739E88 ADD X1, X8, 0x20
	0x03739E8C ADD X0, X19, 0x18
	0x03739E90 MOVZ W2, 0x58
	0x03739E94 BL 0x3EB1B30
	0x03739E98 MOVZ W0, 0x1
	0x03739E9C STR W0, [X19 + 0x10]
	0x03739EA0 LDP X20, X19, [X31 + 0x10]
	0x03739EA4 LDR X30, [X31], #0x20
	0x03739EA8 RET
	0x03739EAC BL 0x1C16F20
	0x03739EB0 BL 0x1C16F28
	0x03739EB4 ADD X1, X0, 0x18
	0x03739EB8 MOVZ W2, 0x58
	0x03739EBC MOV X0, X8
	0x03739EC0 B 0x3EB1AC0
	0x03739EC4 STP X30, X19, [X31 - 0x10]!
	0x03739EC8 ADRP X0, 0x9BA000
	0x03739ECC LDR X0, [X0 + 0xB40]
	0x03739ED0 BL 0x1C16D08
	0x03739ED4 BL 0x1C16F10
	0x03739ED8 MOV X1, X31
	0x03739EDC MOV X19, X0
	0x03739EE0 BL 0x3380310
	0x03739EE4 ADRP X0, 0xA0C000
	0x03739EE8 LDR X0, [X0 + 0x270]
	0x03739EEC BL 0x1C16D08
	0x03739EF0 MOV X1, X0
	0x03739EF4 MOV X0, X19
	0x03739EF8 BL 0x1C16DEC
	0x03739EFC SUB X31, X31, 0x80
	0x03739F00 STP X30, X21, [X31 + 0x60]
	0x03739F04 STP X20, X19, [X31 + 0x70]
	0x03739F08 ADRP X21, 0xCA7000
	0x03739F0C ADRP X20, 0x9E5000
	0x03739F10 LDRB W8, [X21 + 0xD04]
	0x03739F14 LDR X20, [X20 + 0x4E0]
	0x03739F18 MOV X19, X0
	0x03739F1C TBNZ X8, 0x0, 0x3739F34
	0x03739F20 ADRP X0, 0x9E5000
	0x03739F24 LDR X0, [X0 + 0x4E0]
	0x03739F28 BL 0x1C16CF4
	0x03739F2C MOVZ W8, 0x1
	0x03739F30 STRB W8, [X21 + 0xD04]
	0x03739F34 ADD X1, X19, 0x18
	0x03739F38 ADD X0, X31, 0x8
	0x03739F3C MOVZ W2, 0x58
	0x03739F40 BL 0x3EB1AC0
	0x03739F44 LDR X0, [X20]
	0x03739F48 ADD X1, X31, 0x8
	0x03739F4C BL 0x1C16E04
	0x03739F50 LDP X20, X19, [X31 + 0x70]
	0x03739F54 LDP X30, X21, [X31 + 0x60]
	0x03739F58 ADD X31, X31, 0x80
	0x03739F5C RET
	0x03739F60 STR X30, [X31 - 0x20]!
	0x03739F64 STP X20, X19, [X31 + 0x10]
	0x03739F68 ADRP X20, 0xCA7000
	0x03739F6C LDRB W8, [X20 + 0xD05]
	0x03739F70 MOV X19, X0
	0x03739F74 TBNZ X8, 0x0, 0x3739F8C
	0x03739F78 ADRP X0, 0xA0C000
	0x03739F7C LDR X0, [X0 + 0x40]
	0x03739F80 BL 0x1C16CF4
	0x03739F84 MOVZ W8, 0x1
	0x03739F88 STRB W8, [X20 + 0xD05]
	0x03739F8C LDR W8, [X19 + 0x10]
	0x03739F90 ADDS W31, W8, 0x2
	0x03739F94 B.NE 0x3739FB4
	0x03739F98 LDR W20, [X19 + 0x70]
	0x03739F9C MOV X0, X31
	0x03739FA0 BL 0x33C151C
	0x03739FA4 CMP W20, W0
	0x03739FA8 B.NE 0x3739FB4
	0x03739FAC STR W31, [X19 + 0x10]
	0x03739FB0 B 0x3739FEC
	0x03739FB4 ADRP X8, 0xA0C000
	0x03739FB8 LDR X8, [X8 + 0x40]
	0x03739FBC LDR X0, [X8]
	0x03739FC0 BL 0x1C16F10
	0x03739FC4 MOV X1, X31
	0x03739FC8 MOV X20, X0
	0x03739FCC BL 0x33BDD8C
	0x03739FD0 MOV X0, X31
	0x03739FD4 STR W31, [X20 + 0x10]
	0x03739FD8 BL 0x33C151C
	0x03739FDC STR W0, [X20 + 0x70]
	0x03739FE0 LDR X8, [X19 + 0x78]
	0x03739FE4 MOV X19, X20
	0x03739FE8 STR X8, [X20 + 0x78]
	0x03739FEC MOV X0, X19
	0x03739FF0 LDP X20, X19, [X31 + 0x10]
	0x03739FF4 LDR X30, [X31], #0x20
	0x03739FF8 RET
	0x03739FFC B 0x3739F60
	0x0373A000 LDR X0, [X0 + 0x10]
	0x0373A004 RET
	0x0373A008 LDR X0, [X0 + 0x20]
	0x0373A00C RET
	0x0373A010 SUB X31, X31, 0x30
	0x0373A014 STP X30, X19, [X31 + 0x20]
	0x0373A018 MOV X19, X0
	0x0373A01C LDR X0, [X0 + 0x18]
	0x0373A020 MOV X1, X31
	0x0373A024 BL 0x32277A8
	0x0373A028 TBZ X0, 0x0, 0x373A050
	0x0373A02C MOV X0, X31
	0x0373A030 BL 0x337684C
	0x0373A034 STP X0, X1, [X31 + 0x10]
	0x0373A038 ADD X0, X31, 0x10
	0x0373A03C MOV X1, X31
	0x0373A040 BL 0x337866C
	0x0373A044 MOV X1, X0
	0x0373A048 STR X0, [X19 + 0x18]
	0x0373A04C B 0x373A054
	0x0373A050 LDR X1, [X19 + 0x18]
	0x0373A054 ADD X0, X31, 0x0
	0x0373A058 MOV X2, X31
	0x0373A05C STP X31, X31, [X31]
	0x0373A060 BL 0x3376AD0
	0x0373A064 LDP X0, X1, [X31]
	0x0373A068 LDP X30, X19, [X31 + 0x20]
	0x0373A06C ADD X31, X31, 0x30
	0x0373A070 RET
	0x0373A074 SUB X31, X31, 0x20
	0x0373A078 STP X30, X19, [X31 + 0x10]
	0x0373A07C MOV X19, X0
	0x0373A080 MOV X0, X31
	0x0373A084 BL 0x337684C
	0x0373A088 STP X0, X1, [X31]
	0x0373A08C ADD X0, X31, 0x0
	0x0373A090 MOV X1, X31
	0x0373A094 BL 0x337866C
	0x0373A098 STR X0, [X19 + 0x18]
	0x0373A09C LDP X30, X19, [X31 + 0x10]
	0x0373A0A0 ADD X31, X31, 0x20
	0x0373A0A4 RET
	0x0373A0A8 SUB X31, X31, 0x30
	0x0373A0AC STP X30, X21, [X31 + 0x10]
	0x0373A0B0 STP X20, X19, [X31 + 0x20]
	0x0373A0B4 ADRP X21, 0xCA6000
	0x0373A0B8 ADRP X20, 0xA0B000
	0x0373A0BC LDRB W8, [X21 + 0xD07]
	0x0373A0C0 LDR X20, [X20 + 0x278]
	0x0373A0C4 MOV X19, X0
	0x0373A0C8 TBNZ X8, 0x0, 0x373A0E0
	0x0373A0CC ADRP X0, 0xA0B000
	0x0373A0D0 LDR X0, [X0 + 0x278]
	0x0373A0D4 BL 0x1C16CF4
	0x0373A0D8 MOVZ W8, 0x1
	0x0373A0DC STRB W8, [X21 + 0xD07]
	0x0373A0E0 LDR X1, [X19 + 0x30]
	0x0373A0E4 LDR X2, [X20]
	0x0373A0E8 ADD X0, X31, 0x0
	0x0373A0EC STP X31, X31, [X31]
	0x0373A0F0 BL 0x24FBFD0
	0x0373A0F4 LDP X0, X1, [X31]
	0x0373A0F8 LDP X20, X19, [X31 + 0x20]
	0x0373A0FC LDP X30, X21, [X31 + 0x10]
	0x0373A100 ADD X31, X31, 0x30
	0x0373A104 RET
	0x0373A108 SUB X31, X31, 0x30
	0x0373A10C STP X30, X21, [X31 + 0x10]
	0x0373A110 STP X20, X19, [X31 + 0x20]
	0x0373A114 ADRP X21, 0xCA6000
	0x0373A118 ADRP X20, 0xA0B000
	0x0373A11C LDRB W8, [X21 + 0xD08]
	0x0373A120 LDR X20, [X20 + 0x280]
	0x0373A124 MOV X19, X0
	0x0373A128 TBNZ X8, 0x0, 0x373A140
	0x0373A12C ADRP X0, 0xA0B000
	0x0373A130 LDR X0, [X0 + 0x280]
	0x0373A134 BL 0x1C16CF4
	0x0373A138 MOVZ W8, 0x1
	0x0373A13C STRB W8, [X21 + 0xD08]
	0x0373A140 MOV X0, X19
	0x0373A144 BL 0x373A0A8
	0x0373A148 LDR X8, [X20]
	0x0373A14C STP X0, X1, [X31]
	0x0373A150 ADD X1, X31, 0x0
	0x0373A154 MOV X0, X8
	0x0373A158 BL 0x1C16E04
	0x0373A15C LDP X20, X19, [X31 + 0x20]
	0x0373A160 LDP X30, X21, [X31 + 0x10]
	0x0373A164 ADD X31, X31, 0x30
	0x0373A168 RET
	0x0373A16C STP X30, X21, [X31 - 0x20]!
	0x0373A170 STP X20, X19, [X31 + 0x10]
	0x0373A174 ADRP X21, 0xCA6000
	0x0373A178 ADRP X20, 0x9B9000
	0x0373A17C LDRB W8, [X21 + 0xD09]
	0x0373A180 LDR X20, [X20 + 0x598]
	0x0373A184 MOV X19, X0
	0x0373A188 TBNZ X8, 0x0, 0x373A1A0
	0x0373A18C ADRP X0, 0x9B9000
	0x0373A190 LDR X0, [X0 + 0x598]
	0x0373A194 BL 0x1C16CF4
	0x0373A198 MOVZ W8, 0x1
	0x0373A19C STRB W8, [X21 + 0xD09]
	0x0373A1A0 LDR X0, [X20]
	0x0373A1A4 LDR X20, [X19 + 0x20]
	0x0373A1A8 LDR W8, [X0 + 0xE0]
	0x0373A1AC CBNZ W8, 0x373A1B4
	0x0373A1B0 BL 0x1C16DFC
	0x0373A1B4 MOV X0, X20
	0x0373A1B8 MOV X1, X31
	0x0373A1BC MOV X2, X31
	0x0373A1C0 BL 0x3C3883C
	0x0373A1C4 MOV W8, W0
	0x0373A1C8 MOV X0, X31
	0x0373A1CC MOV X1, X31
	0x0373A1D0 TBNZ X8, 0x0, 0x373A1E0
	0x0373A1D4 LDR X0, [X19 + 0x20]
	0x0373A1D8 CBZ X0, 0x373A1EC
	0x0373A1DC BL 0x37367C0
	0x0373A1E0 LDP X20, X19, [X31 + 0x10]
	0x0373A1E4 LDP X30, X21, [X31], #0x20
	0x0373A1E8 RET
	0x0373A1EC BL 0x1C16F20
	0x0373A1F0 ADD X1, X0, 0x68
	0x0373A1F4 MOVZ W2, 0x60
	0x0373A1F8 MOV X0, X8
	0x0373A1FC B 0x3EB1AC0
	0x0373A200 SUB X31, X31, 0x1D0
	0x0373A204 STR X29, [X31 + 0x180]
	0x0373A208 STP X30, X25, [X31 + 0x190]
	0x0373A20C STP X24, X23, [X31 + 0x1A0]
	0x0373A210 STP X22, X21, [X31 + 0x1B0]
	0x0373A214 STP X20, X19, [X31 + 0x1C0]
	0x0373A218 MRS X22, 0xC000
	0x0373A21C LDR X8, [X22 + 0x28]
	0x0373A220 ADRP X21, 0xCA6000
	0x0373A224 MOV X19, X1
	0x0373A228 MOV X20, X0
	0x0373A22C STR X8, [X31 + 0x178]
	0x0373A230 LDRB W8, [X21 + 0xD0A]
	0x0373A234 TBNZ X8, 0x0, 0x373A258
	0x0373A238 ADRP X0, 0xA0A000
	0x0373A23C LDR X0, [X0 + 0xF48]
	0x0373A240 BL 0x1C16CF4
	0x0373A244 ADRP X0, 0xA0A000
	0x0373A248 LDR X0, [X0 + 0xF58]
	0x0373A24C BL 0x1C16CF4
	0x0373A250 MOVZ W8, 0x1
	0x0373A254 STRB W8, [X21 + 0xD0A]
	0x0373A258 MOV X21, X20
	0x0373A25C LDRB W23, [X21 + 0x68]!
	0x0373A260 ADD X0, X31, 0x118
	0x0373A264 MOVZ W2, 0x5F
	0x0373A268 CMP W23, 0x0
	0x0373A26C ADD X1, X21, 0x1
	0x0373A270 CSET W24, NE
	0x0373A274 BL 0x3EB1AC0
	0x0373A278 MOV X1, X19
	0x0373A27C LDRB W25, [X1], #0x1
	0x0373A280 ADD X0, X31, 0xB8
	0x0373A284 MOVZ W2, 0x5F
	0x0373A288 BL 0x3EB1AC0
	0x0373A28C CMP W25, 0x0
	0x0373A290 CSET W8, NE
	0x0373A294 EOR W8, W24, W8, 0x0
	0x0373A298 TBNZ X8, 0x0, 0x373A2DC
	0x0373A29C CBZ W23, 0x373A2F8
	0x0373A2A0 ADD X8, X31, 0x118
	0x0373A2A4 ADD X1, X8, 0x7
	0x0373A2A8 ADD X0, X31, 0x60
	0x0373A2AC MOVZ W2, 0x58
	0x0373A2B0 BL 0x3EB1AC0
	0x0373A2B4 ADD X8, X31, 0xB8
	0x0373A2B8 ADD X1, X8, 0x7
	0x0373A2BC ADD X0, X31, 0x8
	0x0373A2C0 MOVZ W2, 0x58
	0x0373A2C4 BL 0x3EB1AC0
	0x0373A2C8 ADD X0, X31, 0x60
	0x0373A2CC ADD X1, X31, 0x8
	0x0373A2D0 MOV X2, X31
	0x0373A2D4 BL 0x374A774
	0x0373A2D8 TBNZ X0, 0x0, 0x373A2F8
	0x0373A2DC MOVZ W2, 0x60
	0x0373A2E0 MOV X0, X21
	0x0373A2E4 MOV X1, X19
	0x0373A2E8 BL 0x3EB1B30
	0x0373A2EC MOVZ W1, 0x1
	0x0373A2F0 MOV X0, X20
	0x0373A2F4 BL 0x3734520
	0x0373A2F8 LDR X8, [X22 + 0x28]
	0x0373A2FC LDR X9, [X31 + 0x178]
	0x0373A300 CMP X8, X9
	0x0373A304 B.NE 0x373A324
	0x0373A308 LDP X20, X19, [X31 + 0x1C0]
	0x0373A30C LDP X22, X21, [X31 + 0x1B0]
	0x0373A310 LDP X24, X23, [X31 + 0x1A0]
	0x0373A314 LDP X30, X25, [X31 + 0x190]
	0x0373A318 LDR X29, [X31 + 0x180]
	0x0373A31C ADD X31, X31, 0x1D0
	0x0373A320 RET
	0x0373A324 BL 0x3EB1B20
	0x0373A328 SUB X31, X31, 0x30
	0x0373A32C STP X30, X19, [X31 + 0x20]
	0x0373A330 LDR X8, [X1 + 0x10]
	0x0373A334 LDR V0, [X1]
	0x0373A338 MOV X19, X0
	0x0373A33C ADD X0, X0, 0xD8
	0x0373A340 ADD X1, X31, 0x0
	0x0373A344 STR X8, [X31 + 0x10]
	0x0373A348 STR V0, [X31]
	0x0373A34C BL 0x3736B5C
	0x0373A350 TBZ X0, 0x0, 0x373A360
	0x0373A354 MOV X0, X19
	0x0373A358 MOV W1, W31
	0x0373A35C BL 0x3734520
	0x0373A360 LDP X30, X19, [X31 + 0x20]
	0x0373A364 ADD X31, X31, 0x30
	0x0373A368 RET
	0x0373A36C STR X30, [X31 - 0x20]!
	0x0373A370 STP X20, X19, [X31 + 0x10]
	0x0373A374 CBZ X1, 0x373A394
	0x0373A378 MOV W2, W31
	0x0373A37C MOV X19, X1
	0x0373A380 BL 0x37376AC
	0x0373A384 CBZ X0, 0x373A3DC
	0x0373A388 LDP X20, X19, [X31 + 0x10]
	0x0373A38C LDR X30, [X31], #0x20
	0x0373A390 RET
	0x0373A394 ADRP X0, 0x9BE000
	0x0373A398 LDR X0, [X0 + 0x528]
	0x0373A39C BL 0x1C16D08
	0x0373A3A0 BL 0x1C16F10
	0x0373A3A4 MOV X19, X0
	0x0373A3A8 ADRP X0, 0xA0B000
	0x0373A3AC LDR X0, [X0 + 0x90]
	0x0373A3B0 BL 0x1C16D08
	0x0373A3B4 MOV X1, X0
	0x0373A3B8 MOV X0, X19
	0x0373A3BC MOV X2, X31
	0x0373A3C0 BL 0x330E100
	0x0373A3C4 ADRP X0, 0xA0B000
	0x0373A3C8 LDR X0, [X0 + 0x288]
	0x0373A3CC BL 0x1C16D08
	0x0373A3D0 MOV X1, X0
	0x0373A3D4 MOV X0, X19
	0x0373A3D8 BL 0x1C16DEC
	0x0373A3DC ADRP X0, 0xA0B000
	0x0373A3E0 LDR X0, [X0 + 0x290]
	0x0373A3E4 BL 0x1C16D08
	0x0373A3E8 MOV X20, X0
	0x0373A3EC ADRP X0, 0x9C1000
	0x0373A3F0 LDR X0, [X0 + 0x9B0]
	0x0373A3F4 BL 0x1C16D08
	0x0373A3F8 MOV X2, X0
	0x0373A3FC MOV X0, X20
	0x0373A400 MOV X1, X19
	0x0373A404 MOV X3, X31
	0x0373A408 BL 0x32274B8
	0x0373A40C MOV X19, X0
	0x0373A410 ADRP X0, 0x9BC000
	0x0373A414 LDR X0, [X0 + 0x78]
	0x0373A418 BL 0x1C16D08
	0x0373A41C BL 0x1C16F10
	0x0373A420 MOV X1, X19
	0x0373A424 MOV X2, X31
	0x0373A428 MOV X20, X0
	0x0373A42C BL 0x335DC08
	0x0373A430 ADRP X0, 0xA0B000
	0x0373A434 LDR X0, [X0 + 0x288]
	0x0373A438 BL 0x1C16D08
	0x0373A43C MOV X1, X0
	0x0373A440 MOV X0, X20
	0x0373A444 BL 0x1C16DEC
	0x0373A448 STR X30, [X31 - 0x30]!
	0x0373A44C STP X22, X21, [X31 + 0x10]
	0x0373A450 STP X20, X19, [X31 + 0x20]
	0x0373A454 ADRP X22, 0xCA6000
	0x0373A458 ADRP X21, 0xA0A000
	0x0373A45C LDRB W8, [X22 + 0xD0C]
	0x0373A460 LDR X21, [X21 + 0xF80]
	0x0373A464 MOV X19, X1
	0x0373A468 MOV X20, X0
	0x0373A46C TBNZ X8, 0x0, 0x373A484
	0x0373A470 ADRP X0, 0xA0A000
	0x0373A474 LDR X0, [X0 + 0xF80]
	0x0373A478 BL 0x1C16CF4
	0x0373A47C MOVZ W8, 0x1
	0x0373A480 STRB W8, [X22 + 0xD0C]
	0x0373A484 LDR X2, [X21]
	0x0373A488 ADD X0, X20, 0xE8
	0x0373A48C MOV X1, X19
	0x0373A490 LDP X20, X19, [X31 + 0x20]
	0x0373A494 LDP X22, X21, [X31 + 0x10]
	0x0373A498 LDR X30, [X31], #0x30
	0x0373A49C B 0x28F14E0
	0x0373A4A0 STR X30, [X31 - 0x30]!
	0x0373A4A4 STP X22, X21, [X31 + 0x10]
	0x0373A4A8 STP X20, X19, [X31 + 0x20]
	0x0373A4AC ADRP X22, 0xCA6000
	0x0373A4B0 ADRP X21, 0xA0A000
	0x0373A4B4 LDRB W8, [X22 + 0xD0D]
	0x0373A4B8 LDR X21, [X21 + 0xF88]
	0x0373A4BC MOV X19, X1
	0x0373A4C0 MOV X20, X0
	0x0373A4C4 TBNZ X8, 0x0, 0x373A4DC
	0x0373A4C8 ADRP X0, 0xA0A000
	0x0373A4CC LDR X0, [X0 + 0xF88]
	0x0373A4D0 BL 0x1C16CF4
	0x0373A4D4 MOVZ W8, 0x1
	0x0373A4D8 STRB W8, [X22 + 0xD0D]
	0x0373A4DC LDR X2, [X21]
	0x0373A4E0 ADD X0, X20, 0xE8
	0x0373A4E4 MOV X1, X19
	0x0373A4E8 LDP X20, X19, [X31 + 0x20]
	0x0373A4EC LDP X22, X21, [X31 + 0x10]
	0x0373A4F0 LDR X30, [X31], #0x30
	0x0373A4F4 B 0x28F1650
	0x0373A4F8 STR X30, [X31 - 0x20]!
	0x0373A4FC STP X20, X19, [X31 + 0x10]
	0x0373A500 MOV X19, X1
	0x0373A504 MOVN W8, 0x0
	0x0373A508 MOV X1, X31
	0x0373A50C MOV X20, X0
	0x0373A510 STR W8, [X0 + 0x58]
	0x0373A514 BL 0x33BDD8C
	0x0373A518 STR X19, [X20 + 0x10]
	0x0373A51C LDP X20, X19, [X31 + 0x10]
	0x0373A520 LDR X30, [X31], #0x20
	0x0373A524 RET
	0x0373A528 LDR X0, [X0 + 0x60]
	0x0373A52C CBZ X0, 0x373A538
	0x0373A530 MOV X1, X31
	0x0373A534 B 0x374ADA4
	0x0373A538 RET
	0x0373A53C SUB X31, X31, 0x40
	0x0373A540 STP X30, X23, [X31 + 0x10]
	0x0373A544 STP X22, X21, [X31 + 0x20]
	0x0373A548 STP X20, X19, [X31 + 0x30]
	0x0373A54C ADRP X21, 0xCA6000
	0x0373A550 LDRB W8, [X21 + 0xD0E]
	0x0373A554 MOV X19, X1
	0x0373A558 MOV X20, X0
	0x0373A55C TBNZ X8, 0x0, 0x373A58C
	0x0373A560 ADRP X0, 0x9EA000
	0x0373A564 LDR X0, [X0 + 0xF40]
	0x0373A568 BL 0x1C16CF4
	0x0373A56C ADRP X0, 0x9E6000
	0x0373A570 LDR X0, [X0 + 0x360]
	0x0373A574 BL 0x1C16CF4
	0x0373A578 ADRP X0, 0x9C4000
	0x0373A57C LDR X0, [X0 + 0x6D8]
	0x0373A580 BL 0x1C16CF4
	0x0373A584 MOVZ W8, 0x1
	0x0373A588 STRB W8, [X21 + 0xD0E]
	0x0373A58C MOV X0, X19
	0x0373A590 MOV X1, X31
	0x0373A594 STR W31, [X31 + 0xC]
	0x0373A598 BL 0x32277A8
	0x0373A59C TBNZ X0, 0x0, 0x373A714
	0x0373A5A0 LDR X8, [X20 + 0x28]
	0x0373A5A4 CBZ X8, 0x373A714
	0x0373A5A8 MOV X0, X20
	0x0373A5AC BL 0x373A740
	0x0373A5B0 LDR X8, [X20 + 0x28]
	0x0373A5B4 CBZ X8, 0x373A738
	0x0373A5B8 CBZ X19, 0x373A738
	0x0373A5BC LDR W23, [X8 + 0x18]
	0x0373A5C0 ADRP X8, 0x9E6000
	0x0373A5C4 LDR X8, [X8 + 0x360]
	0x0373A5C8 MOV X0, X19
	0x0373A5CC MOV X2, X31
	0x0373A5D0 LDR X1, [X8]
	0x0373A5D4 BL 0x3226F64
	0x0373A5D8 TBZ X0, 0x0, 0x373A658
	0x0373A5DC ADRP X8, 0x9C4000
	0x0373A5E0 LDR X8, [X8 + 0x6D8]
	0x0373A5E4 MOV X0, X19
	0x0373A5E8 MOV X2, X31
	0x0373A5EC LDR X1, [X8]
	0x0373A5F0 BL 0x3226588
	0x0373A5F4 TBZ X0, 0x0, 0x373A658
	0x0373A5F8 CMP W23, 0x1
	0x0373A5FC B.LT 0x373A658
	0x0373A600 LDR W8, [X19 + 0x10]
	0x0373A604 MOV W21, W31
	0x0373A608 SUB W22, W8, 0x2
	0x0373A60C LDR X8, [X20 + 0x28]
	0x0373A610 CBZ X8, 0x373A738
	0x0373A614 LDR W9, [X8 + 0x18]
	0x0373A618 CMP W21, W9
	0x0373A61C B.CS 0x373A73C
	0x0373A620 ADD X8, X8, W21, 0x3, SXTW
	0x0373A624 LDR X8, [X8 + 0x20]
	0x0373A628 CBZ X8, 0x373A738
	0x0373A62C LDR X0, [X8 + 0x28]
	0x0373A630 MOVZ W3, 0x1
	0x0373A634 MOV W1, W31
	0x0373A638 MOV X2, X19
	0x0373A63C MOV W4, W22
	0x0373A640 MOV X5, X31
	0x0373A644 BL 0x3225C80
	0x0373A648 CBZ W0, 0x373A718
	0x0373A64C ADD W21, W21, 0x1
	0x0373A650 CMP W23, W21
	0x0373A654 B.NE 0x373A60C
	0x0373A658 LDR X0, [X20 + 0x138]
	0x0373A65C CBZ X0, 0x373A738
	0x0373A660 ADRP X8, 0x9EA000
	0x0373A664 LDR X8, [X8 + 0xF40]
	0x0373A668 ADD X2, X31, 0xC
	0x0373A66C MOV X1, X19
	0x0373A670 LDR X3, [X8]
	0x0373A674 BL 0x2AA09F8
	0x0373A678 TBZ X0, 0x0, 0x373A684
	0x0373A67C LDR W21, [X31 + 0xC]
	0x0373A680 B 0x373A718
	0x0373A684 CMP W23, 0x1
	0x0373A688 B.LT 0x373A714
	0x0373A68C MOV W22, W31
	0x0373A690 LDR X8, [X20 + 0x28]
	0x0373A694 CBZ X8, 0x373A738
	0x0373A698 LDR W9, [X8 + 0x18]
	0x0373A69C CMP W22, W9
	0x0373A6A0 B.CS 0x373A73C
	0x0373A6A4 SXTW X21, W22
	0x0373A6A8 ADD X8, X8, X21, 0x3, LSL
	0x0373A6AC LDR X8, [X8 + 0x20]
	0x0373A6B0 CBZ X8, 0x373A738
	0x0373A6B4 LDR X0, [X8 + 0x28]
	0x0373A6B8 MOV X1, X19
	0x0373A6BC MOV X2, X31
	0x0373A6C0 BL 0x321BA08
	0x0373A6C4 TBNZ X0, 0x0, 0x373A730
	0x0373A6C8 LDR X8, [X20 + 0x28]
	0x0373A6CC CBZ X8, 0x373A738
	0x0373A6D0 LDR W9, [X8 + 0x18]
	0x0373A6D4 CMP W22, W9
	0x0373A6D8 B.CS 0x373A73C
	0x0373A6DC ADD X8, X8, X21, 0x3, LSL
	0x0373A6E0 LDR X8, [X8 + 0x20]
	0x0373A6E4 CBZ X8, 0x373A738
	0x0373A6E8 LDR X0, [X8 + 0x10]
	0x0373A6EC MOVZ W2, 0x3
	0x0373A6F0 MOV X1, X19
	0x0373A6F4 MOV X3, X31
	0x0373A6F8 BL 0x322590C
	0x0373A6FC CBZ W0, 0x373A730
	0x0373A700 ADD W22, W22, 0x1
	0x0373A704 CMP W23, W22
	0x0373A708 MOVN W21, 0x0
	0x0373A70C B.NE 0x373A690
	0x0373A710 B 0x373A718
	0x0373A714 MOVN W21, 0x0
	0x0373A718 MOV W0, W21
	0x0373A71C LDP X20, X19, [X31 + 0x30]
	0x0373A720 LDP X22, X21, [X31 + 0x20]
	0x0373A724 LDP X30, X23, [X31 + 0x10]
	0x0373A728 ADD X31, X31, 0x40
	0x0373A72C RET
	0x0373A730 MOV W21, W22
	0x0373A734 B 0x373A718
	0x0373A738 BL 0x1C16F20
	0x0373A73C BL 0x1C16F28
	0x0373A740 STP X30, X23, [X31 - 0x30]!
	0x0373A744 STP X22, X21, [X31 + 0x10]
	0x0373A748 STP X20, X19, [X31 + 0x20]
	0x0373A74C ADRP X20, 0xCA6000
	0x0373A750 LDRB W8, [X20 + 0xD0F]
	0x0373A754 MOV X19, X0
	0x0373A758 TBNZ X8, 0x0, 0x373A788
	0x0373A75C ADRP X0, 0x9BB000
	0x0373A760 LDR X0, [X0 + 0xB20]
	0x0373A764 BL 0x1C16CF4
	0x0373A768 ADRP X0, 0x9BE000
	0x0373A76C LDR X0, [X0 + 0x7A8]
	0x0373A770 BL 0x1C16CF4
	0x0373A774 ADRP X0, 0x9BB000
	0x0373A778 LDR X0, [X0 + 0xB18]
	0x0373A77C BL 0x1C16CF4
	0x0373A780 MOVZ W8, 0x1
	0x0373A784 STRB W8, [X20 + 0xD0F]
	0x0373A788 LDR X8, [X19 + 0x138]
	0x0373A78C CBZ X8, 0x373A7A0
	0x0373A790 LDP X20, X19, [X31 + 0x20]
	0x0373A794 LDP X22, X21, [X31 + 0x10]
	0x0373A798 LDP X30, X23, [X31], #0x30
	0x0373A79C RET
	0x0373A7A0 LDR X8, [X19 + 0x28]
	0x0373A7A4 CBZ X8, 0x373A790
	0x0373A7A8 ADRP X8, 0x9BB000
	0x0373A7AC LDR X8, [X8 + 0xB18]
	0x0373A7B0 LDR X0, [X8]
	0x0373A7B4 BL 0x1C16F10
	0x0373A7B8 ADRP X8, 0x9BB000
	0x0373A7BC LDR X8, [X8 + 0xB20]
	0x0373A7C0 MOV X20, X0
	0x0373A7C4 LDR X1, [X8]
	0x0373A7C8 BL 0x2A9E704
	0x0373A7CC LDR X8, [X19 + 0x28]
	0x0373A7D0 STR X20, [X19 + 0x138]
	0x0373A7D4 CBZ X8, 0x373A854
	0x0373A7D8 LDR W9, [X8 + 0x18]
	0x0373A7DC SUBS W22, W9, 0x1
	0x0373A7E0 B.LT 0x373A790
	0x0373A7E4 ADRP X23, 0x9BE000
	0x0373A7E8 LDR X23, [X23 + 0x7A8]
	0x0373A7EC MOV W20, W31
	0x0373A7F0 LDR W9, [X8 + 0x18]
	0x0373A7F4 CMP W20, W9
	0x0373A7F8 B.CS 0x373A858
	0x0373A7FC ADD X8, X8, W20, 0x3, SXTW
	0x0373A800 LDR X21, [X8 + 0x20]
	0x0373A804 CBZ X21, 0x373A854
	0x0373A808 MOV X0, X21
	0x0373A80C BL 0x3734224
	0x0373A810 LDR X0, [X19 + 0x138]
	0x0373A814 CBZ X0, 0x373A854
	0x0373A818 LDR X1, [X21 + 0x10]
	0x0373A81C LDR X3, [X23]
	0x0373A820 MOV W2, W20
	0x0373A824 BL 0x2A9EF88
	0x0373A828 LDR X0, [X19 + 0x138]
	0x0373A82C CBZ X0, 0x373A854
	0x0373A830 LDR X1, [X21 + 0x28]
	0x0373A834 LDR X3, [X23]
	0x0373A838 MOV W2, W20
	0x0373A83C BL 0x2A9EF88
	0x0373A840 CMP W22, W20
	0x0373A844 B.EQ 0x373A790
	0x0373A848 LDR X8, [X19 + 0x28]
	0x0373A84C ADD W20, W20, 0x1
	0x0373A850 CBNZ X8, 0x373A7F0
	0x0373A854 BL 0x1C16F20
	0x0373A858 BL 0x1C16F28
	0x0373A85C STR X30, [X31 - 0x20]!
	0x0373A860 STP X20, X19, [X31 + 0x10]
	0x0373A864 ADRP X20, 0xCA6000
	0x0373A868 LDRB W8, [X20 + 0xD10]
	0x0373A86C MOV X19, X0
	0x0373A870 TBNZ X8, 0x0, 0x373A888
	0x0373A874 ADRP X0, 0xA0B000
	0x0373A878 LDR X0, [X0 + 0x298]
	0x0373A87C BL 0x1C16CF4
	0x0373A880 MOVZ W8, 0x1
	0x0373A884 STRB W8, [X20 + 0xD10]
	0x0373A888 LDR X0, [X19 + 0x138]
	0x0373A88C CBZ X0, 0x373A8A8
	0x0373A890 ADRP X8, 0xA0B000
	0x0373A894 LDR X8, [X8 + 0x298]
	0x0373A898 LDP X20, X19, [X31 + 0x10]
	0x0373A89C LDR X1, [X8]
	0x0373A8A0 LDR X30, [X31], #0x20
	0x0373A8A4 B 0x2A9F124
	0x0373A8A8 LDP X20, X19, [X31 + 0x10]
	0x0373A8AC LDR X30, [X31], #0x20
	0x0373A8B0 RET
	0x0373A8B4 STP X30, X23, [X31 - 0x30]!
	0x0373A8B8 STP X22, X21, [X31 + 0x10]
	0x0373A8BC STP X20, X19, [X31 + 0x20]
	0x0373A8C0 LDR X8, [X0 + 0x28]
	0x0373A8C4 CBZ X8, 0x373A92C
	0x0373A8C8 LDR W9, [X8 + 0x18]
	0x0373A8CC SUBS W23, W9, 0x1
	0x0373A8D0 B.LT 0x373A92C
	0x0373A8D4 MOV X20, X2
	0x0373A8D8 MOV X21, X0
	0x0373A8DC MOV X22, X1
	0x0373A8E0 MOV W19, W31
	0x0373A8E4 LDR W9, [X8 + 0x18]
	0x0373A8E8 CMP W19, W9
	0x0373A8EC B.CS 0x373A944
	0x0373A8F0 ADD X8, X8, W19, 0x3, SXTW
	0x0373A8F4 LDR X0, [X8 + 0x20]
	0x0373A8F8 CBZ X0, 0x373A928
	0x0373A8FC BL 0x3734270
	0x0373A900 MOV X2, X22
	0x0373A904 MOV X3, X20
	0x0373A908 MOV X4, X31
	0x0373A90C BL 0x3378C2C
	0x0373A910 TBNZ X0, 0x0, 0x373A930
	0x0373A914 CMP W23, W19
	0x0373A918 B.EQ 0x373A92C
	0x0373A91C LDR X8, [X21 + 0x28]
	0x0373A920 ADD W19, W19, 0x1
	0x0373A924 CBNZ X8, 0x373A8E4
	0x0373A928 BL 0x1C16F20
	0x0373A92C MOVN W19, 0x0
	0x0373A930 MOV W0, W19
	0x0373A934 LDP X20, X19, [X31 + 0x20]
	0x0373A938 LDP X22, X21, [X31 + 0x10]
	0x0373A93C LDP X30, X23, [X31], #0x30
	0x0373A940 RET
	0x0373A944 BL 0x1C16F28
	0x0373A948 STP X30, X27, [X31 - 0x50]!
	0x0373A94C STP X26, X25, [X31 + 0x10]
	0x0373A950 STP X24, X23, [X31 + 0x20]
	0x0373A954 STP X22, X21, [X31 + 0x30]
	0x0373A958 STP X20, X19, [X31 + 0x40]
	0x0373A95C ADRP X19, 0xCA6000
	0x0373A960 ADRP X21, 0xA0A000
	0x0373A964 LDRB W8, [X19 + 0xD11]
	0x0373A968 LDR X21, [X21 + 0xF68]
	0x0373A96C MOV X20, X0
	0x0373A970 TBNZ X8, 0x0, 0x373A9AC
	0x0373A974 ADRP X0, 0xA0A000
	0x0373A978 LDR X0, [X0 + 0xF68]
	0x0373A97C BL 0x1C16CF4
	0x0373A980 ADRP X0, 0xA0A000
	0x0373A984 LDR X0, [X0 + 0xFB0]
	0x0373A988 BL 0x1C16CF4
	0x0373A98C ADRP X0, 0x9BD000
	0x0373A990 LDR X0, [X0 + 0x3E0]
	0x0373A994 BL 0x1C16CF4
	0x0373A998 ADRP X0, 0xA0A000
	0x0373A99C LDR X0, [X0 + 0xF98]
	0x0373A9A0 BL 0x1C16CF4
	0x0373A9A4 MOVZ W8, 0x1
	0x0373A9A8 STRB W8, [X19 + 0xD11]
	0x0373A9AC LDR X0, [X21]
	0x0373A9B0 BL 0x1C16F10
	0x0373A9B4 MOVN W8, 0x0
	0x0373A9B8 MOV X1, X31
	0x0373A9BC MOV X19, X0
	0x0373A9C0 STR W8, [X0 + 0x58]
	0x0373A9C4 BL 0x33BDD8C
	0x0373A9C8 LDR X8, [X20 + 0x10]
	0x0373A9CC STR X8, [X19 + 0x10]
	0x0373A9D0 LDR X8, [X20 + 0x28]
	0x0373A9D4 CBZ X8, 0x373AA94
	0x0373A9D8 ADRP X9, 0xA0A000
	0x0373A9DC LDR X9, [X9 + 0xFB0]
	0x0373A9E0 LDR W21, [X8 + 0x18]
	0x0373A9E4 LDR X0, [X9]
	0x0373A9E8 MOV W1, W21
	0x0373A9EC BL 0x1C16D6C
	0x0373A9F0 CMP W21, 0x1
	0x0373A9F4 MOV X22, X0
	0x0373A9F8 B.LT 0x373AA90
	0x0373A9FC ADRP X25, 0x9BD000
	0x0373AA00 LDR X25, [X25 + 0x3E0]
	0x0373AA04 MOV W24, W31
	0x0373AA08 LDR X8, [X20 + 0x28]
	0x0373AA0C CBZ X8, 0x373AB2C
	0x0373AA10 LDR W9, [X8 + 0x18]
	0x0373AA14 CMP W24, W9
	0x0373AA18 B.CS 0x373AB30
	0x0373AA1C SXTW X26, W24
	0x0373AA20 ADD X8, X8, X26, 0x3, LSL
	0x0373AA24 LDR X0, [X25]
	0x0373AA28 LDR X27, [X8 + 0x20]
	0x0373AA2C BL 0x1C16F10
	0x0373AA30 MOV X23, X0
	0x0373AA34 BL 0x3734C10
	0x0373AA38 CBZ X27, 0x373AB2C
	0x0373AA3C CBZ X23, 0x373AB2C
	0x0373AA40 LDR X8, [X27 + 0x10]
	0x0373AA44 STR X19, [X23 + 0xC8]
	0x0373AA48 STR X8, [X23 + 0x10]
	0x0373AA4C LDR W8, [X27 + 0x18]
	0x0373AA50 STR W8, [X23 + 0x18]
	0x0373AA54 LDR V0, [X27 + 0x3]
	0x0373AA58 STR V0, [X23 + 0x3]
	0x0373AA5C LDR X8, [X27 + 0x20]
	0x0373AA60 STR X8, [X23 + 0x20]
	0x0373AA64 LDR W8, [X27 + 0x48]
	0x0373AA68 STR W8, [X23 + 0x48]
	0x0373AA6C CBZ X22, 0x373AB2C
	0x0373AA70 LDR W8, [X22 + 0x18]
	0x0373AA74 CMP W24, W8
	0x0373AA78 B.CS 0x373AB30
	0x0373AA7C ADD W24, W24, 0x1
	0x0373AA80 ADD X8, X22, X26, 0x3, LSL
	0x0373AA84 CMP W21, W24
	0x0373AA88 STR X23, [X8 + 0x20]
	0x0373AA8C B.NE 0x373AA08
	0x0373AA90 STR X22, [X19 + 0x28]
	0x0373AA94 LDR X8, [X20 + 0x30]
	0x0373AA98 CBZ X8, 0x373AB10
	0x0373AA9C ADRP X9, 0xA0A000
	0x0373AAA0 LDR X9, [X9 + 0xF98]
	0x0373AAA4 LDR X21, [X8 + 0x18]
	0x0373AAA8 LDR X0, [X9]
	0x0373AAAC MOV W1, W21
	0x0373AAB0 BL 0x1C16D6C
	0x0373AAB4 LDR X8, [X20 + 0x30]
	0x0373AAB8 MOV X20, X0
	0x0373AABC MOV W1, W31
	0x0373AAC0 MOV X2, X20
	0x0373AAC4 MOV X0, X8
	0x0373AAC8 MOV W3, W31
	0x0373AACC MOV W4, W21
	0x0373AAD0 MOV X5, X31
	0x0373AAD4 BL 0x339FCE8
	0x0373AAD8 CMP W21, 0x1
	0x0373AADC B.LT 0x373AB0C
	0x0373AAE0 CBZ X20, 0x373AB2C
	0x0373AAE4 LDR W9, [X20 + 0x18]
	0x0373AAE8 MOV X8, X31
	0x0373AAEC AND X10, X21, 0x0
	0x0373AAF0 ADD X11, X20, 0x28
	0x0373AAF4 CMP X8, X9
	0x0373AAF8 B.CS 0x373AB30
	0x0373AAFC ADD X8, X8, 0x1
	0x0373AB00 CMP X10, X8
	0x0373AB04 STR X31, [X11], #0x58
	0x0373AB08 B.NE 0x373AAF4
	0x0373AB0C STR X20, [X19 + 0x30]
	0x0373AB10 MOV X0, X19
	0x0373AB14 LDP X20, X19, [X31 + 0x40]
	0x0373AB18 LDP X22, X21, [X31 + 0x30]
	0x0373AB1C LDP X24, X23, [X31 + 0x20]
	0x0373AB20 LDP X26, X25, [X31 + 0x10]
	0x0373AB24 LDP X30, X27, [X31], #0x50
	0x0373AB28 RET
	0x0373AB2C BL 0x1C16F20
	0x0373AB30 BL 0x1C16F28
	0x0373AB34 B 0x373A948
	0x0373AB38 CBZ X1, 0x373AB5C
	0x0373AB3C LDR X8, [X1 + 0xC8]
	0x0373AB40 CBZ X8, 0x373AB50
	0x0373AB44 LDR X9, [X8 + 0x50]
	0x0373AB48 CMP X9, X1
	0x0373AB4C CSEL X8, X31, X8, EQ
	0x0373AB50 CMP X8, X0
	0x0373AB54 CSET W0, EQ
	0x0373AB58 RET
	0x0373AB5C MOV W0, W31
	0x0373AB60 RET
	0x0373AB64 STP X30, X21, [X31 - 0x20]!
	0x0373AB68 STP X20, X19, [X31 + 0x10]
	0x0373AB6C ADRP X21, 0xCA6000
	0x0373AB70 ADRP X20, 0x9B9000
	0x0373AB74 LDRB W8, [X21 + 0xD12]
	0x0373AB78 LDR X20, [X20 + 0x598]
	0x0373AB7C MOV X19, X0
	0x0373AB80 TBNZ X8, 0x0, 0x373ABB0
	0x0373AB84 ADRP X0, 0x9B9000
	0x0373AB88 LDR X0, [X0 + 0x598]
	0x0373AB8C BL 0x1C16CF4
	0x0373AB90 ADRP X0, 0xA0B000
	0x0373AB94 LDR X0, [X0 + 0x2A0]
	0x0373AB98 BL 0x1C16CF4
	0x0373AB9C ADRP X0, 0x9C1000

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 1056
	014 Move [X31+32], X0
	015 Move X25, 0xCA8000
	016 Move X24, 0xA0D000
	017 Move X20, 0xA0D000
	018 Move X23, 0xA0D000
	019 Move X22, 0xA0D000
	020 Move X21, 0xA0D000
	021 Move X19, 0xA0D000
	022 Move X24, [X24+368]
	023 Move W8, [X25+3376]
	024 Move X20, [X20+376]
	025 Move X23, [X23+384]
	026 Move X22, [X22+392]
	027 Move X21, [X21+400]
	028 Move X19, [X19+408]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {104}
	033 Move X0, 0xA0C000
	034 Move X0, [X0+3944]
	035 Call 0x1C17CF4
	036 Move X0, 0xA0D000
	037 Move X0, [X0+416]
	038 Call 0x1C17CF4
	039 Move X0, 0xA0D000
	040 Move X0, [X0+424]
	041 Call 0x1C17CF4
	042 Move X0, 0xA0D000
	043 Move X0, [X0+432]
	044 Call 0x1C17CF4
	045 Move X0, 0xA0D000
	046 Move X0, [X0+440]
	047 Call 0x1C17CF4
	048 Move X0, 0xA0D000
	049 Move X0, [X0+448]
	050 Call 0x1C17CF4
	051 Move X0, 0xA0D000
	052 Move X0, [X0+456]
	053 Call 0x1C17CF4
	054 Move X0, 0xA0D000
	055 Move X0, [X0+464]
	056 Call 0x1C17CF4
	057 Move X0, 0xA0D000
	058 Move X0, [X0+472]
	059 Call 0x1C17CF4
	060 Move X0, 0xA0D000
	061 Move X0, [X0+392]
	062 Call 0x1C17CF4
	063 Move X0, 0xA0D000
	064 Move X0, [X0+408]
	065 Call 0x1C17CF4
	066 Move X0, 0xA0D000
	067 Move X0, [X0+480]
	068 Call 0x1C17CF4
	069 Move X0, 0xA0D000
	070 Move X0, [X0+376]
	071 Call 0x1C17CF4
	072 Move X0, 0xA0D000
	073 Move X0, [X0+488]
	074 Call 0x1C17CF4
	075 Move X0, 0xA0D000
	076 Move X0, [X0+496]
	077 Call 0x1C17CF4
	078 Move X0, 0xA0D000
	079 Move X0, [X0+504]
	080 Call 0x1C17CF4
	081 Move X0, 0xA0D000
	082 Move X0, [X0+512]
	083 Call 0x1C17CF4
	084 Move X0, 0xA0D000
	085 Move X0, [X0+520]
	086 Call 0x1C17CF4
	087 Move X0, 0xA0D000
	088 Move X0, [X0+368]
	089 Call 0x1C17CF4
	090 Move X0, 0xA0D000
	091 Move X0, [X0+400]
	092 Call 0x1C17CF4
	093 Move X0, 0xA0D000
	094 Move X0, [X0+528]
	095 Call 0x1C17CF4
	096 Move X0, 0xA0D000
	097 Move X0, [X0+384]
	098 Call 0x1C17CF4
	099 Move X0, 0xA0D000
	100 Move X0, [X0+536]
	101 Call 0x1C17CF4
	102 Move W8, 1
	103 Move [X25+3376], W8
	104 Move X0, [X24]
	105 NotImplemented "Instruction MOVI not yet implemented."
	106 Move [X31+816], X31
	107 Move [X31+592], X31
	108 Move [X31+304], X31
	109 Move [X31+784], V0
	110 Move [X31+792], V0
	111 Move [X31+752], V0
	112 Move [X31+760], V0
	113 Move [X31+720], V0
	114 Move [X31+728], V0
	115 Move [X31+688], V0
	116 Move [X31+696], V0
	117 Move [X31+640], V0
	118 Move [X31+648], V0
	119 Move [X31+42], V0
	120 Move [X31+608], V0
	121 Move [X31+616], V0
	122 Move [X31+560], V0
	123 Move [X31+568], V0
	124 Move [X31+528], V0
	125 Move [X31+536], V0
	126 Move [X31+496], V0
	127 Move [X31+504], V0
	128 Move [X31+464], V0
	129 Move [X31+472], V0
	130 Move [X31+416], V0
	131 Move [X31+424], V0
	132 Move [X31+28], V0
	133 Move [X31+384], V0
	134 Move [X31+392], V0
	135 Move [X31+352], V0
	136 Move [X31+360], V0
	137 Move [X31+320], V0
	138 Move [X31+328], V0
	139 Move [X31+272], V0
	140 Move [X31+280], V0
	141 Move [X31+240], V0
	142 Move [X31+248], V0
	143 Move [X31+14], V0
	144 Call 0x1C17F10
	145 Move X1, [X20]
	146 Move X26, X0
	147 Call List`1<Object>..ctor, X0
	148 Move X0, [X23]
	149 Call 0x1C17F10
	150 Move X1, [X22]
	151 Move [X31+88], X0
	152 Call List`1<Object>..ctor, X0
	153 Move X0, [X21]
	154 Call 0x1C17F10
	155 Move X1, [X19]
	156 Move X21, X0
	157 Call List`1<Object>..ctor, X0
	158 Move X8, [X31+32]
	159 Move [X31+80], X26
	160 Move [X31+64], X21
	161 Move X8, [X8]
	162 Compare X8, 0
	163 JumpIfEqual {512}
	164 Move X9, [X8+24]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 And X9, X9, 0
	167 Move [X31+72], X9
	168 Move X28, 0xA0D000
	169 Move X28, [X28+416]
	170 Add X9, X31, 960
	171 Move X19, X31
	172 Add X29, X9, 56
	173 Move W27, 88
	174 Move W9, [X8+24]
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move W9, 72
	177 NotImplemented "Instruction MADD not yet implemented."
	178 Add X1, X8, 32
	179 Add X0, X31, 752
	180 Move W2, 72
	181 Call 0x3EB2AC0
	182 Move X23, [X31+752]
	183 Move X1, X31
	184 Move X0, X23
	185 Call String.IsNullOrEmpty, X0
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfEqual {1072}
	190 Compare X23, 0
	191 JumpIfEqual {959}
	192 Move W1, 47
	193 Move X0, X23
	194 Move X2, X31
	195 Call String.IndexOf, X0, X1
	196 Add W31, W0, 1
	197 Move W24, W0
	198 Move X0, X23
	199 Move W1, W31
	200 Move W2, W24
	201 Move X3, X31
	202 Call String.Substring, X0, X1, X2
	203 Move X25, X0
	204 Add W1, W24, 1
	205 Move X0, X23
	206 Move X2, X31
	207 Call String.Substring, X0, X1
	208 Move X1, X31
	209 Move X24, X0
	210 Call String.IsNullOrEmpty, X0
	211 Move TEMP, X0
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfEqual {1096}
	215 Move X23, X24
	216 Compare X26, 0
	217 JumpIfNotEqual {221}
	218 Move X25, X31
	219 Compare X26, 0
	220 JumpIfEqual {959}
	221 Move W8, [X26+24]
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Move W24, W31
	224 Move X8, 0xA0D000
	225 Move X8, [X8+512]
	226 Move X0, X26
	227 Move W1, W24
	228 Move X2, [X8]
	229 Call List`1<Object>.get_Item, X0, X1
	230 Compare X0, 0
	231 JumpIfEqual {959}
	232 Move X0, [X0+16]
	233 Move W2, 3
	234 Move X1, X25
	235 Move X3, X31
	236 Call String.Compare, X0, X1, X2
	237 Compare W0, 0
	238 JumpIfEqual {242}
	239 Move W8, [X26+24]
	240 Add W24, W24, 1
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move X8, 0xA0D000
	243 Move X8, [X8+512]
	244 Move X0, X26
	245 Move W1, W24
	246 Move X2, [X8]
	247 Call List`1<Object>.get_Item, X0, X1
	248 Compare X0, 0
	249 JumpIfEqual {257}
	250 Add X0, X31, 752
	251 Move X1, X23
	252 Call ReadActionJson.ToAction, X0, X1
	253 Move X23, X0
	254 Move X0, [X31+88]
	255 Compare X0, 0
	256 JumpIfNotEqual {366}
	257 Move X8, 0xA0C000
	258 Move X8, [X8+3944]
	259 Move X0, [X8]
	260 Call 0x1C17F10
	261 Move TEMP, 0
	262 Not TEMP
	263 Move W8, TEMP
	264 Move X1, X31
	265 Move X20, X26
	266 Move X26, X0
	267 Move [X0+88], W8
	268 Call Object..ctor, X0
	269 Move [X26+16], X25
	270 Move X9, 0xA0D000
	271 Move W24, [X20+24]
	272 Move W10, [X20+28]
	273 Move X8, [X20+16]
	274 Move X9, [X9+424]
	275 Add W10, W10, 1
	276 Move X9, [X9]
	277 Move [X20+28], W10
	278 Compare X8, 0
	279 JumpIfEqual {959}
	280 Move W10, [X8+24]
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Move X11, [X31+80]
	283 Move X9, W24
	284 Add W10, W24, 1
	285 Add X8, X8, X9
	286 Move [X11+24], W10
	287 Move [X8+32], X26
	288 Move X8, [X9+32]
	289 Move X0, [X31+80]
	290 Move X1, X26
	291 Move X8, [X8+192]
	292 Move X2, [X8+112]
	293 Call List`1<Object>.AddWithResize, X0, X1
	294 Move X8, 0xA0D000
	295 Move X8, [X8+536]
	296 Move X0, [X8]
	297 Call 0x1C17F10
	298 Move X8, 0xA0C000
	299 Move X8, [X8+480]
	300 Move X25, X0
	301 Move X1, [X8]
	302 Call List`1<Object>..ctor, X0
	303 Move X0, [X31+88]
	304 Compare X0, 0
	305 JumpIfEqual {959}
	306 Move X9, 0xA0C000
	307 Move W10, [X0+28]
	308 Move X8, [X0+16]
	309 Move X9, [X9+448]
	310 Move X26, [X31+80]
	311 Add W10, W10, 1
	312 Move X9, [X9]
	313 Move [X0+28], W10
	314 Compare X8, 0
	315 JumpIfEqual {959}
	316 NotImplemented "Instruction LDRSW not yet implemented."
	317 Move W11, [X8+24]
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Add W9, W10, 1
	320 Add X8, X8, X10
	321 Move [X0+24], W9
	322 Move [X8+32], X25
	323 Move X8, [X9+32]
	324 Move X1, X25
	325 Move X8, [X8+192]
	326 Move X2, [X8+112]
	327 Call List`1<Object>.AddWithResize, X0, X1
	328 Move X8, 0xA0C000
	329 Move X8, [X8+528]
	330 Move X0, [X8]
	331 Call 0x1C17F10
	332 Move X8, 0xA0C000
	333 Move X8, [X8+488]
	334 Move X25, X0
	335 Move X1, [X8]
	336 Call List`1<InputBinding>..ctor, X0
	337 Compare X21, 0
	338 JumpIfEqual {959}
	339 Move X9, 0xA0C000
	340 Move W10, [X21+28]
	341 Move X8, [X21+16]
	342 Move X9, [X9+432]
	343 Add W10, W10, 1
	344 Move X9, [X9]
	345 Move [X21+28], W10
	346 Compare X8, 0
	347 JumpIfEqual {959}
	348 NotImplemented "Instruction LDRSW not yet implemented."
	349 Move W11, [X8+24]
	350 NotImplemented "Instruction CMP not yet implemented."
	351 Add W9, W10, 1
	352 Add X8, X8, X10
	353 Move [X21+24], W9
	354 Move [X8+32], X25
	355 Move X8, [X9+32]
	356 Move X0, X21
	357 Move X1, X25
	358 Move X8, [X8+192]
	359 Move X2, [X8+112]
	360 Call List`1<Object>.AddWithResize, X0, X1
	361 Add X0, X31, 752
	362 Move X1, X23
	363 Call ReadActionJson.ToAction, X0, X1
	364 Move X23, X0
	365 Move X0, [X31+88]
	366 Move X8, 0xA0C000
	367 Move X8, [X8+504]
	368 Move W1, W24
	369 Move X2, [X8]
	370 Call List`1<Object>.get_Item, X0, X1
	371 Compare X0, 0
	372 JumpIfEqual {959}
	373 Move X9, 0xA0C000
	374 Move W10, [X0+28]
	375 Move X8, [X0+16]
	376 Move X9, [X9+440]
	377 Add W10, W10, 1
	378 Move X9, [X9]
	379 Move [X0+28], W10
	380 Compare X8, 0
	381 JumpIfEqual {959}
	382 NotImplemented "Instruction LDRSW not yet implemented."
	383 Move W11, [X8+24]
	384 NotImplemented "Instruction CMP not yet implemented."
	385 Add W9, W10, 1
	386 Add X8, X8, X10
	387 Move [X0+24], W9
	388 Move [X8+32], X23
	389 Move X8, [X9+32]
	390 Move X1, X23
	391 Move X8, [X8+192]
	392 Move X2, [X8+112]
	393 Call List`1<Object>.AddWithResize, X0, X1
	394 Move X21, [X31+816]
	395 Compare X21, 0
	396 JumpIfEqual {504}
	397 Move X0, [X31+64]
	398 Compare X0, 0
	399 JumpIfEqual {959}
	400 Move X8, 0xA0C000
	401 Move X8, [X8+520]
	402 Move W1, W24
	403 Move X2, [X8]
	404 Call List`1<Object>.get_Item, X0, X1
	405 Move X8, [X21+24]
	406 NotImplemented "Instruction CMP not yet implemented."
	407 Move X24, X0
	408 Move X20, X31
	409 And X8, X8, 0
	410 Add X22, X21, 32
	411 NotImplemented "Instruction CMP not yet implemented."
	412 Move V1, [X22+32]
	413 Move V0, [X22+48]
	414 Move V3, [X22]
	415 Move V2, [X22+16]
	416 Add X8, X31, 960
	417 Add X0, X31, 688
	418 Move [X31+720], V1
	419 Move [X31+728], V0
	420 Move [X31+688], V3
	421 Move [X31+696], V2
	422 Call BindingJson.ToBinding, X0
	423 Move V0, [X31+960]
	424 Move V1, [X31+976]
	425 Move V2, [X31+62]
	426 Move V4, [X29]
	427 Move V3, [X29+16]
	428 Move [X31+640], V0
	429 Move [X31+648], V1
	430 Move [X31+42], V2
	431 Move [X31+608], V4
	432 Move [X31+616], V3
	433 Compare X23, 0
	434 JumpIfEqual {959}
	435 Move X8, [X23+16]
	436 Move V0, [X31+640]
	437 Move V1, [X31+656]
	438 Move V2, [X31+42]
	439 Move V3, [X31+608]
	440 Move V4, [X31+624]
	441 Move [X31+96], V0
	442 Move [X31+104], V1
	443 Move [X31+8], V2
	444 Move [X31+192], V3
	445 Move [X31+200], V4
	446 Compare X24, 0
	447 JumpIfEqual {959}
	448 Move V0, [X31+96]
	449 Move V1, [X31+112]
	450 Move V2, [X31+8]
	451 Move V3, [X31+192]
	452 Move V4, [X31+208]
	453 Move X11, [X28]
	454 Move [X31+864], V0
	455 Move [X31+872], V1
	456 Move [X31+56], V2
	457 Move [X31+832], V3
	458 Move [X31+840], V4
	459 Move W10, [X24+28]
	460 Move X9, [X24+16]
	461 Add W10, W10, 1
	462 Move [X24+28], W10
	463 Compare X9, 0
	464 JumpIfEqual {959}
	465 NotImplemented "Instruction LDRSW not yet implemented."
	466 Move W12, [X9+24]
	467 NotImplemented "Instruction CMP not yet implemented."
	468 Add W11, W10, 1
	469 Move [X24+24], W11
	470 Move V2, [X31+880]
	471 Move V0, [X31+896]
	472 Move V1, [X31+54]
	473 NotImplemented "Instruction NOP not yet implemented."
	474 NotImplemented "Instruction MADD not yet implemented."
	475 Move [X9+80], X8
	476 Move [X9+48], V2
	477 Move [X9+56], V0
	478 Move [X9+2], V1
	479 Move V1, [X31+832]
	480 Move V0, [X31+848]
	481 Move [X9+104], V0
	482 Move [X9+88], V1
	483 Move X9, [X11+32]
	484 Move V0, [X31+864]
	485 Move V1, [X31+880]
	486 Move V2, [X31+56]
	487 Move V3, [X31+832]
	488 Move V4, [X31+848]
	489 Move X9, [X9+192]
	490 Add X1, X31, 960
	491 Move X0, X24
	492 Move X2, [X9+112]
	493 Move [X31+960], V0
	494 Move [X31+968], V1
	495 Move [X31+62], V2
	496 Move [X31+1008], X8
	497 Move [X29], V3
	498 Move [X29+8], V4
	499 Call List`1<InputBinding>.AddWithResize, X0, X1
	500 Move W8, [X21+24]
	501 Add X20, X20, 1
	502 Add X22, X22, 64
	503 NotImplemented "Instruction CMP not yet implemented."
	504 Move X21, [X31+64]
	505 Move X8, [X31+72]
	506 Add X19, X19, 1
	507 NotImplemented "Instruction CMP not yet implemented."
	508 Move X8, [X31+32]
	509 Move X8, [X8]
	510 Compare X8, 0
	511 JumpIfNotEqual {174}
	512 Move X8, [X31+32]
	513 Move X8, [X8+8]
	514 Compare X8, 0
	515 JumpIfEqual {960}
	516 Move X9, [X8+24]
	517 NotImplemented "Instruction CMP not yet implemented."
	518 And X9, X9, 0
	519 Move [X31+24], X31
	520 Move [X31+8], X9
	521 Move X28, 0xA0C000
	522 Move X28, [X28+416]
	523 Add X9, X31, 960
	524 Move X23, X31
	525 Move X21, X31
	526 Move W29, 88
	527 Add X27, X9, 56
	528 Move W9, [X8+24]
	529 NotImplemented "Instruction CMP not yet implemented."
	530 Add X8, X8, X21
	531 Move X0, [X8+32]
	532 Move X25, [X8+40]
	533 Move X22, [X8+48]
	534 Move X8, [X8+56]
	535 Move X1, X31
	536 Move [X31+48], X0
	537 Move [X31+72], X8
	538 Call String.IsNullOrEmpty, X0
	539 Move X20, [X31+64]
	540 Move TEMP, X0
	541 And TEMP, TEMP, 1
	542 Compare TEMP, 1
	543 JumpIfEqual {1082}
	544 Compare X26, 0
	545 JumpIfEqual {959}
	546 Move W8, [X26+24]
	547 NotImplemented "Instruction CMP not yet implemented."
	548 Move W24, W31
	549 Move X8, 0xA0C000
	550 Move X8, [X8+512]
	551 Move X0, X26
	552 Move W1, W24
	553 Move X2, [X8]
	554 Call List`1<Object>.get_Item, X0, X1
	555 Compare X0, 0
	556 JumpIfEqual {959}
	557 Move X0, [X0+16]
	558 Move X1, [X31+48]
	559 Move W2, 3
	560 Move X3, X31
	561 Call String.Compare, X0, X1, X2
	562 Compare W0, 0
	563 JumpIfEqual {567}
	564 Move W8, [X26+24]
	565 Add W24, W24, 1
	566 NotImplemented "Instruction CMP not yet implemented."
	567 Move X8, 0xA0C000
	568 Move X8, [X8+512]
	569 Move X0, X26
	570 Move W1, W24
	571 Move X2, [X8]
	572 Call List`1<Object>.get_Item, X0, X1
	573 Compare X0, 0
	574 JumpIfNotEqual {686}
	575 Move X8, 0xA0B000
	576 Move X8, [X8+3944]
	577 Move X0, [X8]
	578 Call 0x1C17F10
	579 Move TEMP, 0
	580 Not TEMP
	581 Move W8, TEMP
	582 Move X1, X31
	583 Move X19, X26
	584 Move X26, X0
	585 Move [X0+88], W8
	586 Call Object..ctor, X0
	587 Move X8, [X31+48]
	588 Move X0, X25
	589 Move X1, X31
	590 Move [X26+16], X8
	591 Call String.IsNullOrEmpty, X0
	592 And W31, W0, 1
	593 NotImplemented "Instruction CSEL not yet implemented."
	594 Move [X26+24], X8
	595 Move X9, 0xA0C000
	596 Move W24, [X19+24]
	597 Move W10, [X19+28]
	598 Move X8, [X19+16]
	599 Move X9, [X9+424]
	600 Add W10, W10, 1
	601 Move X9, [X9]
	602 Move [X19+28], W10
	603 Compare X8, 0
	604 JumpIfEqual {959}
	605 Move W10, [X8+24]
	606 NotImplemented "Instruction CMP not yet implemented."
	607 Move X11, [X31+80]
	608 Move X9, W24
	609 Add W10, W24, 1
	610 Add X8, X8, X9
	611 Move [X11+24], W10
	612 Move [X8+32], X26
	613 Move X8, [X9+32]
	614 Move X0, [X31+80]
	615 Move X1, X26
	616 Move X8, [X8+192]
	617 Move X2, [X8+112]
	618 Call List`1<Object>.AddWithResize, X0, X1
	619 Move X8, 0xA0C000
	620 Move X8, [X8+536]
	621 Move X0, [X8]
	622 Call 0x1C17F10
	623 Move X8, 0xA0C000
	624 Move X8, [X8+480]
	625 Move X25, X0
	626 Move X1, [X8]
	627 Call List`1<Object>..ctor, X0
	628 Move X0, [X31+88]
	629 Compare X0, 0
	630 JumpIfEqual {959}
	631 Move X9, 0xA0C000
	632 Move W10, [X0+28]
	633 Move X8, [X0+16]
	634 Move X9, [X9+448]
	635 Move X26, [X31+80]
	636 Add W10, W10, 1
	637 Move X9, [X9]
	638 Move [X0+28], W10
	639 Compare X8, 0
	640 JumpIfEqual {959}
	641 NotImplemented "Instruction LDRSW not yet implemented."
	642 Move W11, [X8+24]
	643 NotImplemented "Instruction CMP not yet implemented."
	644 Add W9, W10, 1
	645 Add X8, X8, X10
	646 Move [X0+24], W9
	647 Move [X8+32], X25
	648 Move X8, [X9+32]
	649 Move X1, X25
	650 Move X8, [X8+192]
	651 Move X2, [X8+112]
	652 Call List`1<Object>.AddWithResize, X0, X1
	653 Move X8, 0xA0C000
	654 Move X8, [X8+528]
	655 Move X0, [X8]
	656 Call 0x1C17F10
	657 Move X8, 0xA0C000
	658 Move X8, [X8+488]
	659 Move X25, X0
	660 Move X1, [X8]
	661 Call List`1<InputBinding>..ctor, X0
	662 Compare X20, 0
	663 JumpIfEqual {959}
	664 Move X9, 0xA0C000
	665 Move W10, [X20+28]
	666 Move X8, [X20+16]
	667 Move X9, [X9+432]
	668 Add W10, W10, 1
	669 Move X9, [X9]
	670 Move [X20+28], W10
	671 Compare X8, 0
	672 JumpIfEqual {959}
	673 NotImplemented "Instruction LDRSW not yet implemented."
	674 Move W11, [X8+24]
	675 NotImplemented "Instruction CMP not yet implemented."
	676 Add W9, W10, 1
	677 Add X8, X8, X10
	678 Move [X20+24], W9
	679 Move [X8+32], X25
	680 Move X8, [X9+32]
	681 Move X0, X20
	682 Move X1, X25
	683 Move X8, [X8+192]
	684 Move X2, [X8+112]
	685 Call List`1<Object>.AddWithResize, X0, X1
	686 NotImplemented "Instruction CMP not yet implemented."
	687 NotImplemented "Instruction CSEL not yet implemented."
	688 Move [X31+16], X21
	689 Move [X31+40], X23
	690 Compare X22, 0
	691 JumpIfEqual {864}
	692 Move X8, [X31+40]
	693 Compare X8, 0
	694 JumpIfEqual {959}
	695 Move X8, [X8+24]
	696 NotImplemented "Instruction CMP not yet implemented."
	697 Move X23, X31
	698 And X8, X8, 0
	699 Move [X31+56], X8
	700 Move W8, [X22+24]
	701 NotImplemented "Instruction CMP not yet implemented."
	702 Move W8, 72
	703 NotImplemented "Instruction MADD not yet implemented."
	704 Add X1, X8, 32
	705 Add X0, X31, 528
	706 Move W2, 72
	707 Call 0x3EB2AC0
	708 Move X0, [X31+528]
	709 Move X1, X31
	710 Call String.IsNullOrEmpty, X0
	711 Move TEMP, X0
	712 And TEMP, TEMP, 1
	713 Compare TEMP, 1
	714 JumpIfEqual {1041}
	715 Add X0, X31, 528
	716 Move X1, X31
	717 Call ReadActionJson.ToAction, X0, X1
	718 Move X25, X0
	719 Move X0, [X31+88]
	720 Compare X0, 0
	721 JumpIfEqual {959}
	722 Move X8, 0xA0C000
	723 Move X8, [X8+504]
	724 Move W1, W24
	725 Move X2, [X8]
	726 Call List`1<Object>.get_Item, X0, X1
	727 Compare X0, 0
	728 JumpIfEqual {959}
	729 Move X9, 0xA0C000
	730 Move W10, [X0+28]
	731 Move X8, [X0+16]
	732 Move X9, [X9+440]
	733 Add W10, W10, 1
	734 Move X9, [X9]
	735 Move [X0+28], W10
	736 Compare X8, 0
	737 JumpIfEqual {959}
	738 NotImplemented "Instruction LDRSW not yet implemented."
	739 Move W11, [X8+24]
	740 NotImplemented "Instruction CMP not yet implemented."
	741 Add W9, W10, 1
	742 Add X8, X8, X10
	743 Move [X0+24], W9
	744 Move [X8+32], X25
	745 Move X8, [X9+32]
	746 Move X1, X25
	747 Move X8, [X8+192]
	748 Move X2, [X8+112]
	749 Call List`1<Object>.AddWithResize, X0, X1
	750 Move X19, [X31+592]
	751 Compare X19, 0
	752 JumpIfEqual {860}
	753 Move X0, [X31+64]
	754 Compare X0, 0
	755 JumpIfEqual {959}
	756 Move X8, 0xA0C000
	757 Move X8, [X8+520]
	758 Move W1, W24
	759 Move X2, [X8]
	760 Call List`1<Object>.get_Item, X0, X1
	761 Move X8, [X19+24]
	762 NotImplemented "Instruction CMP not yet implemented."
	763 Move X26, X0
	764 Move X20, X31
	765 And X8, X8, 0
	766 Add X21, X19, 32
	767 NotImplemented "Instruction CMP not yet implemented."
	768 Move V1, [X21+32]
	769 Move V0, [X21+48]
	770 Move V3, [X21]
	771 Move V2, [X21+16]
	772 Add X8, X31, 960
	773 Add X0, X31, 464
	774 Move [X31+496], V1
	775 Move [X31+504], V0
	776 Move [X31+464], V3
	777 Move [X31+472], V2
	778 Call BindingJson.ToBinding, X0
	779 Move V0, [X31+960]
	780 Move V1, [X31+976]
	781 Move V2, [X31+62]
	782 Move V4, [X27]
	783 Move V3, [X27+16]
	784 Move [X31+416], V0
	785 Move [X31+424], V1
	786 Move [X31+28], V2
	787 Move [X31+384], V4
	788 Move [X31+392], V3
	789 Compare X25, 0
	790 JumpIfEqual {959}
	791 Move X8, [X25+16]
	792 Move V0, [X31+416]
	793 Move V1, [X31+432]
	794 Move V2, [X31+28]
	795 Move V3, [X31+384]
	796 Move V4, [X31+400]
	797 Move [X31+96], V0
	798 Move [X31+104], V1
	799 Move [X31+8], V2
	800 Move [X31+192], V3
	801 Move [X31+200], V4
	802 Compare X26, 0
	803 JumpIfEqual {959}
	804 Move V0, [X31+96]
	805 Move V1, [X31+112]
	806 Move V2, [X31+8]
	807 Move V3, [X31+192]
	808 Move V4, [X31+208]
	809 Move X11, [X28]
	810 Move [X31+864], V0
	811 Move [X31+872], V1
	812 Move [X31+56], V2
	813 Move [X31+832], V3
	814 Move [X31+840], V4
	815 Move W10, [X26+28]
	816 Move X9, [X26+16]
	817 Add W10, W10, 1
	818 Move [X26+28], W10
	819 Compare X9, 0
	820 JumpIfEqual {959}
	821 NotImplemented "Instruction LDRSW not yet implemented."
	822 Move W12, [X9+24]
	823 NotImplemented "Instruction CMP not yet implemented."
	824 Add W11, W10, 1
	825 Move [X26+24], W11
	826 Move V2, [X31+880]
	827 Move V0, [X31+896]
	828 Move V1, [X31+54]
	829 NotImplemented "Instruction NOP not yet implemented."
	830 NotImplemented "Instruction MADD not yet implemented."
	831 Move [X9+80], X8
	832 Move [X9+48], V2
	833 Move [X9+56], V0
	834 Move [X9+2], V1
	835 Move V1, [X31+832]
	836 Move V0, [X31+848]
	837 Move [X9+104], V0
	838 Move [X9+88], V1
	839 Move X9, [X11+32]
	840 Move V0, [X31+864]
	841 Move V1, [X31+880]
	842 Move V2, [X31+56]
	843 Move V3, [X31+832]
	844 Move V4, [X31+848]
	845 Move X9, [X9+192]
	846 Add X1, X31, 960
	847 Move X0, X26
	848 Move X2, [X9+112]
	849 Move [X31+960], V0
	850 Move [X31+968], V1
	851 Move [X31+62], V2
	852 Move [X31+1008], X8
	853 Move [X27], V3
	854 Move [X27+8], V4
	855 Call List`1<InputBinding>.AddWithResize, X0, X1
	856 Move W8, [X19+24]
	857 Add X20, X20, 1
	858 Add X21, X21, 64
	859 NotImplemented "Instruction CMP not yet implemented."
	860 Move X8, [X31+56]
	861 Move X26, [X31+80]
	862 Add X23, X23, 1
	863 NotImplemented "Instruction CMP not yet implemented."
	864 Move X9, [X31+72]
	865 Move X8, [X31+24]
	866 NotImplemented "Instruction CMP not yet implemented."
	867 NotImplemented "Instruction CSEL not yet implemented."
	868 Move [X31+24], X8
	869 Compare X9, 0
	870 JumpIfEqual {942}
	871 Move X0, [X31+64]
	872 Compare X8, 0
	873 JumpIfEqual {959}
	874 Compare X0, 0
	875 JumpIfEqual {959}
	876 Move W19, [X8+24]
	877 Move X8, 0xA0C000
	878 Move X8, [X8+520]
	879 Move W1, W24
	880 Move X2, [X8]
	881 Call List`1<Object>.get_Item, X0, X1
	882 NotImplemented "Instruction CMP not yet implemented."
	883 Move X8, [X31+72]
	884 Move X23, X0
	885 Move X20, X31
	886 Add X21, X8, 32
	887 Move X8, [X31+72]
	888 Move W8, [X8+24]
	889 NotImplemented "Instruction CMP not yet implemented."
	890 Move V1, [X21+32]
	891 Move V0, [X21+48]
	892 Move V3, [X21]
	893 Move V2, [X21+16]
	894 Add X8, X31, 224
	895 Add X0, X31, 320
	896 Move [X31+352], V1
	897 Move [X31+360], V0
	898 Move [X31+320], V3
	899 Move [X31+328], V2
	900 Call BindingJson.ToBinding, X0
	901 Add X0, X31, 96
	902 Add X1, X31, 224
	903 Move W2, 88
	904 Call 0x3EB2AC0
	905 Compare X23, 0
	906 JumpIfEqual {959}
	907 Move X22, [X28]
	908 Add X0, X31, 864
	909 Add X1, X31, 96
	910 Move W2, 88
	911 Call 0x3EB2AC0
	912 Move W9, [X23+28]
	913 Move X8, [X23+16]
	914 Add W9, W9, 1
	915 Move [X23+28], W9
	916 Compare X8, 0
	917 JumpIfEqual {959}
	918 NotImplemented "Instruction LDRSW not yet implemented."
	919 Move W10, [X8+24]
	920 NotImplemented "Instruction CMP not yet implemented."
	921 NotImplemented "Instruction MADD not yet implemented."
	922 Add W10, W9, 1
	923 Add X0, X8, 32
	924 Add X1, X31, 864
	925 Move W2, 88
	926 Move [X23+24], W10
	927 Call 0x3EB2AC0
	928 Move X8, [X22+32]
	929 Add X0, X31, 960
	930 Add X1, X31, 864
	931 Move W2, 88
	932 Move X8, [X8+192]
	933 Move X24, [X8+112]
	934 Call 0x3EB2AC0
	935 Add X1, X31, 960
	936 Move X0, X23
	937 Move X2, X24
	938 Call List`1<InputBinding>.AddWithResize, X0, X1
	939 Add X20, X20, 1
	940 NotImplemented "Instruction CMP not yet implemented."
	941 Add X21, X21, 64
	942 Move X0, [X31+64]
	943 Compare X0, 0
	944 JumpIfEqual {959}
	945 Move X8, 0xA0C000
	946 Move X8, [X8+520]
	947 Move W1, W24
	948 Move X2, [X8]
	949 Call List`1<Object>.get_Item, X0, X1
	950 Move X8, [X31+8]
	951 Move X21, [X31+16]
	952 Add X21, X21, 1
	953 NotImplemented "Instruction CMP not yet implemented."
	954 Move X8, [X31+32]
	955 Move X23, [X31+40]
	956 Move X8, [X8+8]
	957 Compare X8, 0
	958 JumpIfNotEqual {528}
	959 Call 0x1C17F20
	960 Compare X26, 0
	961 JumpIfEqual {959}
	962 Move W8, [X26+24]
	963 NotImplemented "Instruction CMP not yet implemented."
	964 Move X20, 0xA0C000
	965 Move X21, 0xA0C000
	966 Move X20, [X20+456]
	967 Move X21, [X21+472]
	968 Move W19, W31
	969 Move X8, 0xA0C000
	970 Move X8, [X8+512]
	971 Move X0, X26
	972 Move W1, W19
	973 Move X2, [X8]
	974 Call List`1<Object>.get_Item, X0, X1
	975 Move X23, X0
	976 Move X0, [X31+88]
	977 Compare X0, 0
	978 JumpIfEqual {959}
	979 Move X8, 0xA0C000
	980 Move X8, [X8+504]
	981 Move W1, W19
	982 Move X2, [X8]
	983 Call List`1<Object>.get_Item, X0, X1
	984 Compare X0, 0
	985 JumpIfEqual {959}
	986 Move X1, [X20]
	987 Call List`1<Object>.ToArray, X0
	988 Move X24, X0
	989 Move X0, [X31+64]
	990 Compare X0, 0
	991 JumpIfEqual {959}
	992 Move X8, 0xA0C000
	993 Move X8, [X8+520]
	994 Move W1, W19
	995 Move X2, [X8]
	996 Call List`1<Object>.get_Item, X0, X1
	997 Compare X0, 0
	998 JumpIfEqual {959}
	999 Move X1, [X21]
	1000 Call List`1<InputBinding>.ToArray, X0
	1001 Compare X23, 0
	1002 JumpIfEqual {959}
	1003 Move [X23+40], X24
	1004 Move [X23+48], X0
	1005 Compare X24, 0
	1006 JumpIfEqual {959}
	1007 Move W8, [X24+24]
	1008 NotImplemented "Instruction CMP not yet implemented."
	1009 Move W9, W31
	1010 NotImplemented "Instruction CMP not yet implemented."
	1011 Add X10, X24, W9
	1012 Move X10, [X10+32]
	1013 Compare X10, 0
	1014 JumpIfEqual {959}
	1015 Add W9, W9, 1
	1016 NotImplemented "Instruction CMP not yet implemented."
	1017 Move [X10+200], X23
	1018 Move W8, [X26+24]
	1019 Add W19, W19, 1
	1020 NotImplemented "Instruction CMP not yet implemented."
	1021 Move X8, 0xA0C000
	1022 Move X8, [X8+464]
	1023 Move X0, X26
	1024 Move X1, [X8]
	1025 Call List`1<Object>.ToArray, X0
	1026 Add X31, X31, 1056
	1027 Move X20, [X31+80]
	1028 Move X19, [X31+88]
	1029 Move X22, [X31+64]
	1030 Move X21, [X31+72]
	1031 Move X24, [X31+48]
	1032 Move X23, [X31+56]
	1033 Move X26, [X31+32]
	1034 Move X25, [X31+40]
	1035 Move X28, [X31+16]
	1036 Move X27, [X31+24]
	1037 Move X29, [X31+96]
	1038 Move X30, [X31+104]
	1039 Return X0
	1040 Call 0x1C17F28
	1041 Move X8, [X31+16]
	1042 Move X0, 0x9BA000
	1043 Add W8, W8, 1
	1044 Move [X31+960], W8
	1045 Move X0, [X0+1880]
	1046 Call 0x1C17D08
	1047 Add X1, X31, 960
	1048 Call 0x1C17E04
	1049 Move X19, X0
	1050 Move X0, 0xA0C000
	1051 Move X0, [X0+544]
	1052 Call 0x1C17D08
	1053 Move X2, [X31+48]
	1054 Move X1, X19
	1055 Move X3, X31
	1056 Call String.Format, X0, X1, X2
	1057 Move X19, X0
	1058 Move X0, 0x9BA000
	1059 Move X0, [X0+1456]
	1060 Call 0x1C17D08
	1061 Call 0x1C17F10
	1062 Move X1, X19
	1063 Move X2, X31
	1064 Move X20, X0
	1065 Call InvalidOperationException..ctor, X0, X1
	1066 Move X0, 0xA0C000
	1067 Move X0, [X0+552]
	1068 Call 0x1C17D08
	1069 Move X1, X0
	1070 Move X0, X20
	1071 Call 0x1C17DEC
	1072 Add W8, W19, 1
	1073 Move [X31+960], W8
	1074 Move X0, 0x9BA000
	1075 Move X0, [X0+1880]
	1076 Call 0x1C17D08
	1077 Add X1, X31, 960
	1078 Call 0x1C17E04
	1079 Move X19, X0
	1080 Move X0, 0xA0C000
	1081 Move X0, [X0+560]
	1082 Add W8, W21, 1
	1083 Move [X31+960], W8
	1084 Move X0, 0x9BA000
	1085 Move X0, [X0+1880]
	1086 Call 0x1C17D08
	1087 Add X1, X31, 960
	1088 Call 0x1C17E04
	1089 Move X19, X0
	1090 Move X0, 0xA0C000
	1091 Move X0, [X0+568]
	1092 Call 0x1C17D08
	1093 Move X1, X19
	1094 Move X2, X31
	1095 Call String.Format, X0, X1
	1096 Move X0, 0xA0C000
	1097 Move X0, [X0+576]
	1098 Call 0x1C17D08
	1099 Move X19, X0
	1100 Move X0, 0xA0C000
	1101 Move X0, [X0+584]
	1102 Call 0x1C17D08
	1103 Move X2, X0
	1104 Move X0, X19
	1105 Move X1, X23
	1106 Move X3, X31
	1107 Call String.Concat, X0, X1, X2

