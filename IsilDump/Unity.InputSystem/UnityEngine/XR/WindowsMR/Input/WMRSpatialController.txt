Type: UnityEngine.XR.WindowsMR.Input.WMRSpatialController

Method: UnityEngine.InputSystem.Controls.Vector2Control get_joystick()

Disassembly:
	0x037349E0 MOVZ W8, 0x1
	0x037349E4 STRB W8, [X22 + 0xCE0]

ISIL:
	001 Move X0, [X0+400]
	002 Return X0

Method: System.Void set_joystick(UnityEngine.InputSystem.Controls.Vector2Control value)

Disassembly:
	0x037349E8 LDR X2, [X21]
	0x037349EC ADD X0, X20, 0x120

ISIL:
	001 Move [X0+400], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.Vector2Control get_touchpad()

Disassembly:
	0x037349F0 MOV X1, X19
	0x037349F4 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move X0, [X0+408]
	002 Return X0

Method: System.Void set_touchpad(UnityEngine.InputSystem.Controls.Vector2Control value)

Disassembly:
	0x037349F8 LDP X22, X21, [X31 + 0x10]
	0x037349FC LDR X30, [X31], #0x30

ISIL:
	001 Move [X0+408], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.AxisControl get_grip()

Disassembly:
	0x03734A00 B 0x28F1650
	0x03734A04 STR X30, [X31 - 0x30]!

ISIL:
	001 Move X0, [X0+416]
	002 Return X0

Method: System.Void set_grip(UnityEngine.InputSystem.Controls.AxisControl value)

Disassembly:
	0x03734A08 STP X22, X21, [X31 + 0x10]
	0x03734A0C STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X0+416], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.ButtonControl get_gripPressed()

Disassembly:
	0x03734A10 ADRP X22, 0xCAC000
	0x03734A14 ADRP X21, 0xA10000

ISIL:
	001 Move X0, [X0+424]
	002 Return X0

Method: System.Void set_gripPressed(UnityEngine.InputSystem.Controls.ButtonControl value)

Disassembly:
	0x03734A18 LDRB W8, [X22 + 0xCE1]
	0x03734A1C LDR X21, [X21 + 0xF80]

ISIL:
	001 Move [X0+424], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.ButtonControl get_menu()

Disassembly:
	0x03734A20 MOV X19, X1
	0x03734A24 MOV X20, X0

ISIL:
	001 Move X0, [X0+432]
	002 Return X0

Method: System.Void set_menu(UnityEngine.InputSystem.Controls.ButtonControl value)

Disassembly:
	0x03734A28 TBNZ X8, 0x0, 0x3734A40
	0x03734A2C ADRP X0, 0xA10000

ISIL:
	001 Move [X0+432], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.AxisControl get_trigger()

Disassembly:
	0x03734A30 LDR X0, [X0 + 0xF80]
	0x03734A34 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+440]
	002 Return X0

Method: System.Void set_trigger(UnityEngine.InputSystem.Controls.AxisControl value)

Disassembly:
	0x03734A38 MOVZ W8, 0x1
	0x03734A3C STRB W8, [X22 + 0xCE1]

ISIL:
	001 Move [X0+440], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.ButtonControl get_triggerPressed()

Disassembly:
	0x03734A40 LDR X2, [X21]
	0x03734A44 ADD X0, X20, 0x170

ISIL:
	001 Move X0, [X0+448]
	002 Return X0

Method: System.Void set_triggerPressed(UnityEngine.InputSystem.Controls.ButtonControl value)

Disassembly:
	0x03734A48 MOV X1, X19
	0x03734A4C LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X0+448], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.ButtonControl get_joystickClicked()

Disassembly:
	0x03734A50 LDP X22, X21, [X31 + 0x10]
	0x03734A54 LDR X30, [X31], #0x30

ISIL:
	001 Move X0, [X0+456]
	002 Return X0

Method: System.Void set_joystickClicked(UnityEngine.InputSystem.Controls.ButtonControl value)

Disassembly:
	0x03734A58 B 0x28F14E0
	0x03734A5C STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X0+456], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.ButtonControl get_touchpadClicked()

Disassembly:
	0x03734A60 STP X22, X21, [X31 + 0x10]
	0x03734A64 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move X0, [X0+464]
	002 Return X0

Method: System.Void set_touchpadClicked(UnityEngine.InputSystem.Controls.ButtonControl value)

Disassembly:
	0x03734A68 ADRP X22, 0xCAC000
	0x03734A6C ADRP X21, 0xA10000

ISIL:
	001 Move [X0+464], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.ButtonControl get_touchpadTouched()

Disassembly:
	0x03734A70 LDRB W8, [X22 + 0xCE2]
	0x03734A74 LDR X21, [X21 + 0xF88]

ISIL:
	001 Move X0, [X0+472]
	002 Return X0

Method: System.Void set_touchpadTouched(UnityEngine.InputSystem.Controls.ButtonControl value)

Disassembly:
	0x03734A78 MOV X19, X1
	0x03734A7C MOV X20, X0

ISIL:
	001 Move [X0+472], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.Vector3Control get_deviceVelocity()

Disassembly:
	0x03734A80 TBNZ X8, 0x0, 0x3734A98
	0x03734A84 ADRP X0, 0xA10000

ISIL:
	001 Move X0, [X0+480]
	002 Return X0

Method: System.Void set_deviceVelocity(UnityEngine.InputSystem.Controls.Vector3Control value)

Disassembly:
	0x03734A88 LDR X0, [X0 + 0xF88]
	0x03734A8C BL 0x1C16CF4

ISIL:
	001 Move [X0+480], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.Vector3Control get_deviceAngularVelocity()

Disassembly:
	0x03734A90 MOVZ W8, 0x1
	0x03734A94 STRB W8, [X22 + 0xCE2]

ISIL:
	001 Move X0, [X0+488]
	002 Return X0

Method: System.Void set_deviceAngularVelocity(UnityEngine.InputSystem.Controls.Vector3Control value)

Disassembly:
	0x03734A98 LDR X2, [X21]
	0x03734A9C ADD X0, X20, 0x170

ISIL:
	001 Move [X0+488], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.AxisControl get_batteryLevel()

Disassembly:
	0x03734AA0 MOV X1, X19
	0x03734AA4 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move X0, [X0+496]
	002 Return X0

Method: System.Void set_batteryLevel(UnityEngine.InputSystem.Controls.AxisControl value)

Disassembly:
	0x03734AA8 LDP X22, X21, [X31 + 0x10]
	0x03734AAC LDR X30, [X31], #0x30

ISIL:
	001 Move [X0+496], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.AxisControl get_sourceLossRisk()

Disassembly:
	0x03734AB0 B 0x28F1650
	0x03734AB4 B 0x3734AB8

ISIL:
	001 Move X0, [X0+504]
	002 Return X0

Method: System.Void set_sourceLossRisk(UnityEngine.InputSystem.Controls.AxisControl value)

Disassembly:
	0x03734AB8 STR X30, [X31 - 0x20]!
	0x03734ABC STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X0+504], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.Vector3Control get_sourceLossMitigationDirection()

Disassembly:
	0x03734AC0 ADRP X20, 0xCAC000
	0x03734AC4 LDRB W8, [X20 + 0xCE8]

ISIL:
	001 Move X0, [X0+512]
	002 Return X0

Method: System.Void set_sourceLossMitigationDirection(UnityEngine.InputSystem.Controls.Vector3Control value)

Disassembly:
	0x03734AC8 MOV X19, X0
	0x03734ACC TBNZ X8, 0x0, 0x3734AE4

ISIL:
	001 Move [X0+512], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.Vector3Control get_pointerPosition()

Disassembly:
	0x03734AD0 ADRP X0, 0xA10000
	0x03734AD4 LDR X0, [X0 + 0xF90]

ISIL:
	001 Move X0, [X0+520]
	002 Return X0

Method: System.Void set_pointerPosition(UnityEngine.InputSystem.Controls.Vector3Control value)

Disassembly:
	0x03734AD8 BL 0x1C16CF4
	0x03734ADC MOVZ W8, 0x1

ISIL:
	001 Move [X0+520], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.QuaternionControl get_pointerRotation()

Disassembly:
	0x03734AE0 STRB W8, [X20 + 0xCE8]
	0x03734AE4 LDR X8, [X19 + 0xC8]

ISIL:
	001 Move X0, [X0+528]
	002 Return X0

Method: System.Void set_pointerRotation(UnityEngine.InputSystem.Controls.QuaternionControl value)

Disassembly:
	0x03734AE8 CBNZ X8, 0x3734AFC
	0x03734AEC MOV X0, X19

ISIL:
	001 Move [X0+528], X1
	002 Return 

Method: System.Void FinishSetup()

Disassembly:
	0x03734AF0 BL 0x373572C
	0x03734AF4 LDR X8, [X19 + 0xC8]
	0x03734AF8 CBZ X8, 0x3734B54
	0x03734AFC LDR X0, [X8 + 0x60]
	0x03734B00 CBZ X0, 0x3734B48
	0x03734B04 ADRP X20, 0xA10000
	0x03734B08 LDR X20, [X20 + 0xF90]
	0x03734B0C MOV X1, X31
	0x03734B10 BL 0x374A7E0
	0x03734B14 LDR X8, [X20]
	0x03734B18 LDRSW X9, [X19 + 0xC0]
	0x03734B1C MOVZ W10, 0x30
	0x03734B20 LDR X8, [X8 + 0xB8]
	0x03734B24 NOP
	0x03734B28 MADD X9, X9, X10, X0
	0x03734B2C LDR W9, [X9 + 0x20]
	0x03734B30 LDR W8, [X8]
	0x03734B34 CMP W9, W8
	0x03734B38 CSET W9, EQ
	0x03734B3C CMP W8, 0x0
	0x03734B40 CSET W8, NE
	0x03734B44 AND W0, W8, W9, 0x0
	0x03734B48 LDP X20, X19, [X31 + 0x10]
	0x03734B4C LDR X30, [X31], #0x20
	0x03734B50 RET
	0x03734B54 BL 0x1C16F20
	0x03734B58 STR X30, [X31 - 0x20]!
	0x03734B5C STP X20, X19, [X31 + 0x10]
	0x03734B60 LDR X8, [X0 + 0xC8]
	0x03734B64 MOV X19, X0
	0x03734B68 CBNZ X8, 0x3734B7C
	0x03734B6C MOV X0, X19
	0x03734B70 BL 0x373572C
	0x03734B74 LDR X8, [X19 + 0xC8]
	0x03734B78 CBZ X8, 0x3734BDC
	0x03734B7C LDR X20, [X8 + 0x60]
	0x03734B80 CBZ X20, 0x3734BCC
	0x03734B84 MOV X0, X20
	0x03734B88 MOV X1, X31
	0x03734B8C BL 0x374A7E0
	0x03734B90 LDRSW X8, [X19 + 0xC0]
	0x03734B94 MOVZ W9, 0x30
	0x03734B98 MOV X1, X31
	0x03734B9C MADD X0, X8, X9, X0
	0x03734BA0 BL 0x374BD9C
	0x03734BA4 ADDS W31, W0, 0x1
	0x03734BA8 B.EQ 0x3734BCC
	0x03734BAC LDR X8, [X20 + 0x18]
	0x03734BB0 CBZ X8, 0x3734BDC
	0x03734BB4 LDR W9, [X8 + 0x18]
	0x03734BB8 CMP W0, W9
	0x03734BBC B.CS 0x3734BE0
	0x03734BC0 ADD X8, X8, W0, 0x3, SXTW
	0x03734BC4 LDR X0, [X8 + 0x20]
	0x03734BC8 B 0x3734BD0
	0x03734BCC MOV X0, X31
	0x03734BD0 LDP X20, X19, [X31 + 0x10]
	0x03734BD4 LDR X30, [X31], #0x20
	0x03734BD8 RET
	0x03734BDC BL 0x1C16F20
	0x03734BE0 BL 0x1C16F28
	0x03734BE4 LDR W8, [X0 + 0x18]
	0x03734BE8 CBZ W8, 0x3734BF8
	0x03734BEC LDRB W8, [X0 + 0x48]
	0x03734BF0 AND W0, W8, 0x1
	0x03734BF4 RET
	0x03734BF8 MOVZ W0, 0x1
	0x03734BFC RET
	0x03734C00 LDR W8, [X0 + 0x48]
	0x03734C04 BFM W8, W1, 0x0, 0x0
	0x03734C08 STR W8, [X0 + 0x48]
	0x03734C0C RET
	0x03734C10 SUB X31, X31, 0x20
	0x03734C14 STP X30, X19, [X31 + 0x10]
	0x03734C18 MOVN W8, 0x0
	0x03734C1C MOV X1, X31
	0x03734C20 MOV X19, X0
	0x03734C24 STR W8, [X0 + 0xC0]
	0x03734C28 BL 0x33BDD8C
	0x03734C2C MOV X0, X31
	0x03734C30 BL 0x337684C
	0x03734C34 STP X0, X1, [X31]
	0x03734C38 ADD X0, X31, 0x0
	0x03734C3C MOV X1, X31
	0x03734C40 BL 0x337866C
	0x03734C44 STR X0, [X19 + 0x28]
	0x03734C48 LDP X30, X19, [X31 + 0x10]
	0x03734C4C ADD X31, X31, 0x20
	0x03734C50 RET
	0x03734C54 SUB X31, X31, 0x170
	0x03734C58 STP X29, X30, [X31 + 0x120]
	0x03734C5C STP X26, X25, [X31 + 0x130]
	0x03734C60 STP X24, X23, [X31 + 0x140]
	0x03734C64 STP X22, X21, [X31 + 0x150]
	0x03734C68 STP X20, X19, [X31 + 0x160]
	0x03734C6C ADRP X26, 0xCAC000
	0x03734C70 LDRB W8, [X26 + 0xCE3]
	0x03734C74 MOV X20, X6
	0x03734C78 MOV X21, X5
	0x03734C7C MOV X23, X4
	0x03734C80 MOV X24, X3
	0x03734C84 MOV W22, W2
	0x03734C88 MOV X25, X1
	0x03734C8C MOV X19, X0
	0x03734C90 TBNZ X8, 0x0, 0x3734CA8
	0x03734C94 ADRP X0, 0xA10000
	0x03734C98 LDR X0, [X0 + 0xF98]
	0x03734C9C BL 0x1C16CF4
	0x03734CA0 MOVZ W8, 0x1
	0x03734CA4 STRB W8, [X26 + 0xCE3]
	0x03734CA8 MOVI V0.2D, 0x0
	0x03734CAC MOVN W8, 0x0
	0x03734CB0 MOV X0, X19
	0x03734CB4 MOV X1, X31
	0x03734CB8 STR X31, [X31 + 0x110]
	0x03734CBC STP X31, X31, [X31 + 0xB0]
	0x03734CC0 STP V0, V0, [X31 + 0xF0]
	0x03734CC4 STP V0, V0, [X31 + 0xD0]
	0x03734CC8 STR V0, [X31 + 0xC]
	0x03734CCC STR W8, [X19 + 0xC0]
	0x03734CD0 BL 0x33BDD8C
	0x03734CD4 MOV X0, X24
	0x03734CD8 MOV X1, X31
	0x03734CDC STR X25, [X19 + 0x10]
	0x03734CE0 STR W22, [X19 + 0x18]
	0x03734CE4 BL 0x32277A8
	0x03734CE8 TBZ X0, 0x0, 0x3734CF4
	0x03734CEC STP X21, X23, [X19 + 0x30]
	0x03734CF0 B 0x3734DA0
	0x03734CF4 ADRP X8, 0xA10000
	0x03734CF8 LDR X8, [X8 + 0xF98]
	0x03734CFC MOVZ W1, 0x1
	0x03734D00 LDR X0, [X8]
	0x03734D04 BL 0x1C16D6C
	0x03734D08 MOVI V0.2D, 0x0
	0x03734D0C STP V0, V0, [X31 + 0xC0]
	0x03734D10 STP V0, V0, [X31 + 0xE0]
	0x03734D14 STR V0, [X31 + 0x10]
	0x03734D18 STR X31, [X31 + 0x110]
	0x03734D1C STP X24, X23, [X31 + 0xD0]
	0x03734D20 STR X21, [X31 + 0xE0]
	0x03734D24 LDR X8, [X19 + 0x10]
	0x03734D28 MOV X22, X0
	0x03734D2C MOV X0, X31
	0x03734D30 STR X8, [X31 + 0xF0]
	0x03734D34 BL 0x337684C
	0x03734D38 MOV X2, X0
	0x03734D3C MOV X3, X1
	0x03734D40 ADD X0, X31, 0xC0
	0x03734D44 MOV X1, X2
	0x03734D48 MOV X2, X3
	0x03734D4C MOV X3, X31
	0x03734D50 BL 0x37479EC
	0x03734D54 ADD X0, X31, 0x58
	0x03734D58 ADD X1, X31, 0xC0
	0x03734D5C MOVZ W2, 0x58
	0x03734D60 BL 0x3EB1AC0
	0x03734D64 CBZ X22, 0x3734DDC
	0x03734D68 ADD X0, X31, 0x0
	0x03734D6C ADD X1, X31, 0x58
	0x03734D70 MOVZ W2, 0x58
	0x03734D74 BL 0x3EB1AC0
	0x03734D78 LDR W8, [X22 + 0x18]
	0x03734D7C CBZ W8, 0x3734DE0
	0x03734D80 ADD X0, X22, 0x20
	0x03734D84 ADD X1, X31, 0x0
	0x03734D88 MOVZ W2, 0x58
	0x03734D8C BL 0x3EB1AC0
	0x03734D90 ADRP X8, 0xFFFFFFFFFD3B9000
	0x03734D94 LDR V0, [X8 + 0x640]
	0x03734D98 STR X22, [X19 + 0x40]
	0x03734D9C STR D0, [X19 + 0xB0]
	0x03734DA0 MOV X0, X31
	0x03734DA4 STR X20, [X19 + 0x20]
	0x03734DA8 BL 0x337684C
	0x03734DAC STP X0, X1, [X31 + 0xB0]
	0x03734DB0 ADD X0, X31, 0xB0
	0x03734DB4 MOV X1, X31
	0x03734DB8 BL 0x337866C
	0x03734DBC STR X0, [X19 + 0x28]
	0x03734DC0 LDP X20, X19, [X31 + 0x160]
	0x03734DC4 LDP X22, X21, [X31 + 0x150]
	0x03734DC8 LDP X24, X23, [X31 + 0x140]
	0x03734DCC LDP X26, X25, [X31 + 0x130]
	0x03734DD0 LDP X29, X30, [X31 + 0x120]
	0x03734DD4 ADD X31, X31, 0x170
	0x03734DD8 RET
	0x03734DDC BL 0x1C16F20
	0x03734DE0 BL 0x1C16F28
	0x03734DE4 LDR X8, [X0 + 0xC8]
	0x03734DE8 CBZ X8, 0x3734DFC
	0x03734DEC LDR X0, [X8 + 0x60]
	0x03734DF0 CBZ X0, 0x3734DFC
	0x03734DF4 MOV X1, X31
	0x03734DF8 B 0x374ADA4
	0x03734DFC RET
	0x03734E00 SUB X31, X31, 0x80
	0x03734E04 STP X30, X27, [X31 + 0x30]
	0x03734E08 STP X26, X25, [X31 + 0x40]
	0x03734E0C STP X24, X23, [X31 + 0x50]
	0x03734E10 STP X22, X21, [X31 + 0x60]
	0x03734E14 STP X20, X19, [X31 + 0x70]
	0x03734E18 ADRP X20, 0xCAC000
	0x03734E1C LDRB W8, [X20 + 0xCE4]
	0x03734E20 MOV X19, X0
	0x03734E24 TBNZ X8, 0x0, 0x3734EA8
	0x03734E28 ADRP X0, 0x9EB000
	0x03734E2C LDR X0, [X0 + 0x48]
	0x03734E30 BL 0x1C16CF4
	0x03734E34 ADRP X0, 0x9EB000
	0x03734E38 LDR X0, [X0 + 0x50]
	0x03734E3C BL 0x1C16CF4
	0x03734E40 ADRP X0, 0x9EB000
	0x03734E44 LDR X0, [X0 + 0x58]
	0x03734E48 BL 0x1C16CF4
	0x03734E4C ADRP X0, 0x9EB000
	0x03734E50 LDR X0, [X0 + 0x60]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X27, 0xCAD000
	014 Move X26, 0x9E8000
	015 Move X21, 0xA11000
	016 Move X25, 0x9E8000
	017 Move X24, 0xA11000
	018 Move X23, 0xA11000
	019 Move X29, 0x9E8000
	020 Move X28, 0xA11000
	021 Move X20, 0xA11000
	022 Move X22, 0xA11000
	023 Move X26, [X26+944]
	024 Move X21, [X21+3640]
	025 Move X25, [X25+312]
	026 Move X24, [X24+3632]
	027 Move X23, [X23+3648]
	028 Move X29, [X29+280]
	029 Move X28, [X28+3624]
	030 Move X20, [X20+3608]
	031 Move X22, [X22+3536]
	032 Move W8, [X27+3288]
	033 Move X19, X0
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {106}
	038 Move X0, 0xA11000
	039 Move X0, [X0+3632]
	040 Call 0x1C17CF4
	041 Move X0, 0xA11000
	042 Move X0, [X0+3608]
	043 Call 0x1C17CF4
	044 Move X0, 0xA11000
	045 Move X0, [X0+3800]
	046 Call 0x1C17CF4
	047 Move X0, 0xA11000
	048 Move X0, [X0+3640]
	049 Call 0x1C17CF4
	050 Move X0, 0xA11000
	051 Move X0, [X0+3536]
	052 Call 0x1C17CF4
	053 Move X0, 0x9E9000
	054 Move X0, [X0+3752]
	055 Call 0x1C17CF4
	056 Move X0, 0xA11000
	057 Move X0, [X0+3792]
	058 Call 0x1C17CF4
	059 Move X0, 0xA11000
	060 Move X0, [X0+3808]
	061 Call 0x1C17CF4
	062 Move X0, 0xA11000
	063 Move X0, [X0+3528]
	064 Call 0x1C17CF4
	065 Move X0, 0xA11000
	066 Move X0, [X0+3648]
	067 Call 0x1C17CF4
	068 Move X0, 0xA11000
	069 Move X0, [X0+3816]
	070 Call 0x1C17CF4
	071 Move X0, 0xA11000
	072 Move X0, [X0+3544]
	073 Call 0x1C17CF4
	074 Move X0, 0x9E8000
	075 Move X0, [X0+280]
	076 Call 0x1C17CF4
	077 Move X0, 0xA11000
	078 Move X0, [X0+3784]
	079 Call 0x1C17CF4
	080 Move X0, 0xA11000
	081 Move X0, [X0+3624]
	082 Call 0x1C17CF4
	083 Move X0, 0x9E8000
	084 Move X0, [X0+944]
	085 Call 0x1C17CF4
	086 Move X0, 0xA11000
	087 Move X0, [X0+3656]
	088 Call 0x1C17CF4
	089 Move X0, 0x9E8000
	090 Move X0, [X0+312]
	091 Call 0x1C17CF4
	092 Move X0, 0xA11000
	093 Move X0, [X0+3824]
	094 Call 0x1C17CF4
	095 Move X0, 0xA11000
	096 Move X0, [X0+3760]
	097 Call 0x1C17CF4
	098 Move X0, 0xA11000
	099 Move X0, [X0+3832]
	100 Call 0x1C17CF4
	101 Move X0, 0xA11000
	102 Move X0, [X0+3840]
	103 Call 0x1C17CF4
	104 Move W8, 1
	105 Move [X27+3288], W8
	106 Move X0, X19
	107 Move X1, X31
	108 Call XRController.FinishSetup, X0
	109 Move X1, [X26]
	110 Move X2, [X21]
	111 Move X0, X19
	112 Call 0x21FD754, X0, X1
	113 Move [X19+400], X0
	114 Move X1, [X25]
	115 Move X2, [X24]
	116 Move X0, X19
	117 Call 0x21FD754, X0, X1
	118 Move [X19+440], X0
	119 Move X1, [X23]
	120 Move X2, [X21]
	121 Move X0, X19
	122 Call 0x21FD754, X0, X1
	123 Move [X19+408], X0
	124 Move X1, [X29]
	125 Move X2, [X24]
	126 Move X0, X19
	127 Call 0x21FD754, X0, X1
	128 Move [X19+416], X0
	129 Move X1, [X28]
	130 Move X2, [X20]
	131 Move X0, X19
	132 Call 0x21FD754, X0, X1
	133 Move [X19+424], X0
	134 Move X8, 0x9E9000
	135 Move X8, [X8+3752]
	136 Move X2, [X20]
	137 Move X0, X19
	138 Move X1, [X8]
	139 Call 0x21FD754, X0, X1
	140 Move [X19+432], X0
	141 Move X8, 0xA11000
	142 Move X8, [X8+3816]
	143 Move X2, [X20]
	144 Move X0, X19
	145 Move X1, [X8]
	146 Call 0x21FD754, X0, X1
	147 Move [X19+456], X0
	148 Move X8, 0xA11000
	149 Move X8, [X8+3656]
	150 Move X2, [X20]
	151 Move X0, X19
	152 Move X1, [X8]
	153 Call 0x21FD754, X0, X1
	154 Move [X19+448], X0
	155 Move X8, 0xA11000
	156 Move X8, [X8+3760]
	157 Move X2, [X20]
	158 Move X0, X19
	159 Move X1, [X8]
	160 Call 0x21FD754, X0, X1
	161 Move [X19+464], X0
	162 Move X8, 0xA11000
	163 Move X8, [X8+3832]
	164 Move X2, [X20]
	165 Move X0, X19
	166 Move X1, [X8]
	167 Call 0x21FD754, X0, X1
	168 Move [X19+472], X0
	169 Move X8, 0xA11000
	170 Move X8, [X8+3528]
	171 Move X2, [X22]
	172 Move X0, X19
	173 Move X1, [X8]
	174 Call 0x21FD754, X0, X1
	175 Move [X19+480], X0
	176 Move X8, 0xA11000
	177 Move X8, [X8+3544]
	178 Move X2, [X22]
	179 Move X0, X19
	180 Move X1, [X8]
	181 Call 0x21FD754, X0, X1
	182 Move [X19+488], X0
	183 Move X8, 0xA11000
	184 Move X8, [X8+3808]
	185 Move X2, [X24]
	186 Move X0, X19
	187 Move X1, [X8]
	188 Call 0x21FD754, X0, X1
	189 Move [X19+496], X0
	190 Move X8, 0xA11000
	191 Move X8, [X8+3784]
	192 Move X2, [X24]
	193 Move X0, X19
	194 Move X1, [X8]
	195 Call 0x21FD754, X0, X1
	196 Move [X19+504], X0
	197 Move X8, 0xA11000
	198 Move X8, [X8+3792]
	199 Move X2, [X22]
	200 Move X0, X19
	201 Move X1, [X8]
	202 Call 0x21FD754, X0, X1
	203 Move [X19+512], X0
	204 Move X8, 0xA11000
	205 Move X8, [X8+3824]
	206 Move X2, [X22]
	207 Move X0, X19
	208 Move X1, [X8]
	209 Call 0x21FD754, X0, X1
	210 Move [X19+520], X0
	211 Move X8, 0xA11000
	212 Move X8, [X8+3840]
	213 Move X0, X19
	214 Move X1, [X8]
	215 Move X8, 0xA11000
	216 Move X8, [X8+3800]
	217 Move X2, [X8]
	218 Call 0x21FD754, X0, X1
	219 Move [X19+528], X0
	220 Move X20, [X31+80]
	221 Move X19, [X31+88]
	222 Move X22, [X31+64]
	223 Move X21, [X31+72]
	224 Move X24, [X31+48]
	225 Move X23, [X31+56]
	226 Move X26, [X31+32]
	227 Move X25, [X31+40]
	228 Move X28, [X31+16]
	229 Move X27, [X31+24]
	230 Move X29, [X31+96]
	231 Move X30, [X31+104]
	232 Return 

Method: System.Void .ctor()

Disassembly:
	0x03734E54 BL 0x1C16CF4
	0x03734E58 ADRP X0, 0x9E7000

ISIL:
	001 Move X1, X31
	002 Call XRControllerWithRumble..ctor, X0
	003 Return 

