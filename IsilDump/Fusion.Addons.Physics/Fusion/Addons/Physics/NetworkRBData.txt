Type: Fusion.Addons.Physics.NetworkRBData

Method: System.ValueTuple`2<Fusion.Addons.Physics.NetworkRigidbodyFlags, System.Int32> get_Flags()

Disassembly:
	0x01E2DBE8 RET
	0x01E2DBEC MOV X0, X8
	0x01E2DBF0 BL 0x1C171E0
	0x01E2DBF4 STR X30, [X31 - 0x30]!
	0x01E2DBF8 STP X22, X21, [X31 + 0x10]
	0x01E2DBFC STP X20, X19, [X31 + 0x20]
	0x01E2DC00 ADRP X21, 0x25AB000
	0x01E2DC04 LDRB W8, [X21 + 0xE85]
	0x01E2DC08 MOV X19, X1
	0x01E2DC0C MOV X20, X0
	0x01E2DC10 TBNZ X8, 0x0, 0x1E2DC28
	0x01E2DC14 ADRP X0, 0x22C7000
	0x01E2DC18 LDR X0, [X0 + 0xE70]
	0x01E2DC1C BL 0x1C16CF4
	0x01E2DC20 MOVZ W8, 0x1
	0x01E2DC24 STRB W8, [X21 + 0xE85]
	0x01E2DC28 ADRP X22, 0x22C7000
	0x01E2DC2C LDR X21, [X20 + 0x68]!
	0x01E2DC30 LDR X22, [X22 + 0xE70]
	0x01E2DC34 MOV X0, X21
	0x01E2DC38 MOV X1, X19
	0x01E2DC3C MOV X2, X31
	0x01E2DC40 BL 0x33C0DE4
	0x01E2DC44 MOV X8, X0
	0x01E2DC48 CBZ X0, 0x1E2DC5C

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x25AC000
	007 Move X20, 0x22CE000
	008 Move W8, [X21+3698]
	009 Move X20, [X20+3232]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x22CE000
	016 Move X0, [X0+3232]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3698], W8
	020 Move W1, [X19+68]
	021 Move X3, [X20]
	022 Add X0, X31, 8
	023 Move [X31+8], X31
	024 Move W2, W1
	025 ShiftRight W2, 8
	026 And W2, W2, 0x7FFF
	027 Call ValueTuple`2<ByteEnum, Int32>..ctor, X0, X1, X2
	028 Move X0, [X31+8]
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X30, [X31+16]
	032 Move X21, [X31+24]
	033 Add X31, X31, 48
	034 Return X0

Method: System.Void set_Flags(System.ValueTuple`2<Fusion.Addons.Physics.NetworkRigidbodyFlags, System.Int32> value)

Disassembly:
	0x01E2DC4C LDR X1, [X22]
	0x01E2DC50 LDR X9, [X8]
	0x01E2DC54 CMP X9, X1
	0x01E2DC58 B.NE 0x1E2DC88

ISIL:
	001 Move X8, X1
	002 ShiftRight X8, 24
	003 And X8, X8, 0x7FFFFFFF
	004 NotImplemented "Instruction BFM not yet implemented."
	005 Move [X0+68], W8
	006 Return 

Method: UnityEngine.Vector2 get_LinearVelocity2D()

Disassembly:
	0x01E2DC5C MOV X0, X20
	0x01E2DC60 MOV X1, X8
	0x01E2DC64 MOV X2, X21
	0x01E2DC68 BL 0x1C24138
	0x01E2DC6C CMP X21, X0
	0x01E2DC70 MOV X21, X0
	0x01E2DC74 B.NE 0x1E2DC34
	0x01E2DC78 LDP X20, X19, [X31 + 0x20]
	0x01E2DC7C LDP X22, X21, [X31 + 0x10]
	0x01E2DC80 LDR X30, [X31], #0x30
	0x01E2DC84 RET
	0x01E2DC88 MOV X0, X8
	0x01E2DC8C BL 0x1C171E0
	0x01E2DC90 STR X30, [X31 - 0x30]!
	0x01E2DC94 STP X22, X21, [X31 + 0x10]
	0x01E2DC98 STP X20, X19, [X31 + 0x20]
	0x01E2DC9C ADRP X21, 0x25AB000
	0x01E2DCA0 LDRB W8, [X21 + 0xE86]
	0x01E2DCA4 MOV X19, X1
	0x01E2DCA8 MOV X20, X0
	0x01E2DCAC TBNZ X8, 0x0, 0x1E2DCC4
	0x01E2DCB0 ADRP X0, 0x22C7000
	0x01E2DCB4 LDR X0, [X0 + 0xE70]
	0x01E2DCB8 BL 0x1C16CF4
	0x01E2DCBC MOVZ W8, 0x1
	0x01E2DCC0 STRB W8, [X21 + 0xE86]
	0x01E2DCC4 ADRP X22, 0x22C7000
	0x01E2DCC8 LDR X21, [X20 + 0x68]!
	0x01E2DCCC LDR X22, [X22 + 0xE70]
	0x01E2DCD0 MOV X0, X21
	0x01E2DCD4 MOV X1, X19
	0x01E2DCD8 MOV X2, X31
	0x01E2DCDC BL 0x33C0FDC
	0x01E2DCE0 MOV X8, X0
	0x01E2DCE4 CBZ X0, 0x1E2DCF8
	0x01E2DCE8 LDR X1, [X22]
	0x01E2DCEC LDR X9, [X8]
	0x01E2DCF0 CMP X9, X1
	0x01E2DCF4 B.NE 0x1E2DD24
	0x01E2DCF8 MOV X0, X20
	0x01E2DCFC MOV X1, X8
	0x01E2DD00 MOV X2, X21
	0x01E2DD04 BL 0x1C24138
	0x01E2DD08 CMP X21, X0
	0x01E2DD0C MOV X21, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x25AC000
	007 Move W8, [X21+3728]
	008 Move W20, [X0+72]
	009 Move W19, [X0+76]
	010 Compare W8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, 0x22CE000
	013 Move X0, [X0+3176]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X21+3728], W8
	017 Move X22, 0x22CE000
	018 Move X22, [X22+3176]
	019 Move X0, [X22]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {32}
	023 Call 0x1C17DFC
	024 Move W8, [X21+3728]
	025 Compare W8, 0
	026 JumpIfNotEqual {32}
	027 Move X0, 0x22CE000
	028 Move X0, [X0+3176]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+3728], W8
	032 Move X0, [X22]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 And W8, W20, 1
	038 Move W9, 0x3A800000
	039 And W10, W19, 1
	040 Subtract W8, W31, W8
	041 Move S1, W9
	042 Subtract W9, W31, W10
	043 Xor W8, W8, W20
	044 Xor W9, W9, W19
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 NotImplemented "Instruction SCVTF not yet implemented."
	050 NotImplemented "Instruction SCVTF not yet implemented."
	051 Multiply S0, S0, S1
	052 Multiply S1, S2, S1
	053 Move X30, [X31+48]
	054 Return X0

Method: System.Void set_LinearVelocity2D(UnityEngine.Vector2 value)

Disassembly:
	0x01E2DD10 B.NE 0x1E2DCD0
	0x01E2DD14 LDP X20, X19, [X31 + 0x20]
	0x01E2DD18 LDP X22, X21, [X31 + 0x10]
	0x01E2DD1C LDR X30, [X31], #0x30
	0x01E2DD20 RET
	0x01E2DD24 MOV X0, X8
	0x01E2DD28 BL 0x1C171E0
	0x01E2DD2C LDRB W0, [X0 + 0x80]
	0x01E2DD30 RET
	0x01E2DD34 AND W8, W1, 0x1
	0x01E2DD38 STRB W8, [X0 + 0x80]
	0x01E2DD3C RET
	0x01E2DD40 STP X30, X21, [X31 - 0x20]!
	0x01E2DD44 STP X20, X19, [X31 + 0x10]
	0x01E2DD48 ADRP X21, 0x25AB000
	0x01E2DD4C LDRB W8, [X21 + 0xE87]
	0x01E2DD50 MOV X19, X1
	0x01E2DD54 MOV X20, X0
	0x01E2DD58 TBNZ X8, 0x0, 0x1E2DD70
	0x01E2DD5C ADRP X0, 0x22CD000
	0x01E2DD60 LDR X0, [X0 + 0xD18]
	0x01E2DD64 BL 0x1C16CF4
	0x01E2DD68 MOVZ W8, 0x1
	0x01E2DD6C STRB W8, [X21 + 0xE87]
	0x01E2DD70 LDR X0, [X20 + 0x78]
	0x01E2DD74 CBZ X0, 0x1E2DD94
	0x01E2DD78 ADRP X8, 0x22CD000
	0x01E2DD7C LDR X8, [X8 + 0xD18]
	0x01E2DD80 MOV X1, X19
	0x01E2DD84 LDP X20, X19, [X31 + 0x10]
	0x01E2DD88 LDR X2, [X8]
	0x01E2DD8C LDP X30, X21, [X31], #0x20
	0x01E2DD90 B 0x24F1750
	0x01E2DD94 BL 0x1C16F20
	0x01E2DD98 STP X30, X21, [X31 - 0x20]!
	0x01E2DD9C STP X20, X19, [X31 + 0x10]
	0x01E2DDA0 ADRP X21, 0x25AB000
	0x01E2DDA4 LDRB W8, [X21 + 0xE88]
	0x01E2DDA8 MOV X19, X1
	0x01E2DDAC MOV X20, X0
	0x01E2DDB0 TBNZ X8, 0x0, 0x1E2DDC8
	0x01E2DDB4 ADRP X0, 0x22CD000
	0x01E2DDB8 LDR X0, [X0 + 0xD18]
	0x01E2DDBC BL 0x1C16CF4
	0x01E2DDC0 MOVZ W8, 0x1
	0x01E2DDC4 STRB W8, [X21 + 0xE88]
	0x01E2DDC8 LDR X0, [X20 + 0x70]
	0x01E2DDCC CBZ X0, 0x1E2DDEC
	0x01E2DDD0 ADRP X8, 0x22CD000
	0x01E2DDD4 LDR X8, [X8 + 0xD18]
	0x01E2DDD8 MOV X1, X19
	0x01E2DDDC LDP X20, X19, [X31 + 0x10]
	0x01E2DDE0 LDR X2, [X8]
	0x01E2DDE4 LDP X30, X21, [X31], #0x20
	0x01E2DDE8 B 0x24F1750
	0x01E2DDEC BL 0x1C16F20
	0x01E2DDF0 STR X30, [X31 - 0x20]!
	0x01E2DDF4 STP X20, X19, [X31 + 0x10]
	0x01E2DDF8 ADRP X20, 0x25AB000
	0x01E2DDFC LDRB W8, [X20 + 0xE89]
	0x01E2DE00 MOV X19, X0
	0x01E2DE04 TBNZ X8, 0x0, 0x1E2DE1C
	0x01E2DE08 ADRP X0, 0x22CD000
	0x01E2DE0C LDR X0, [X0 + 0xCA8]
	0x01E2DE10 BL 0x1C16CF4
	0x01E2DE14 MOVZ W8, 0x1
	0x01E2DE18 STRB W8, [X20 + 0xE89]
	0x01E2DE1C LDR W9, [X19 + 0x48]
	0x01E2DE20 MOV X20, X19
	0x01E2DE24 CMP W9, 0x0
	0x01E2DE28 CSEL X8, X19, X31, EQ
	0x01E2DE2C CBNZ W9, 0x1E2DEA4
	0x01E2DE30 LDR X0, [X19 + 0x38]
	0x01E2DE34 CBZ X0, 0x1E2DF1C
	0x01E2DE38 LDR X9, [X0 + 0x98]
	0x01E2DE3C CBZ X9, 0x1E2DF1C
	0x01E2DE40 LDR W9, [X9 + 0x20]
	0x01E2DE44 CMP W9, 0x0

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x25AC000
	009 Move W8, [X20+3727]
	010 Move V8, V1
	011 Move V9, V0
	012 Move X19, X0
	013 Compare W8, 0
	014 JumpIfNotEqual {20}
	015 Move X0, 0x22CE000
	016 Move X0, [X0+3176]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3727], W8
	020 Move X21, 0x22CE000
	021 Move X21, [X21+3176]
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfEqual {27}
	026 Move W8, W31
	027 Call 0x1C17DFC
	028 Move W8, [X20+3727]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CSET not yet implemented."
	031 Move W9, S9
	032 Move W10, 0x44800000
	033 Move W9, W9
	034 ShiftRight W9, 31
	035 And W9, W9, 0x7FFFFFFF
	036 Move S0, 0.5
	037 Move S1, W10
	038 NotImplemented "Instruction UCVTF not yet implemented."
	039 Move W11, 0x7F800000
	040 Multiply S1, S9, S1
	041 Subtract S0, S0, S2
	042 Move S3, W11
	043 Add S0, S1, S0
	044 NotImplemented "Instruction FCVTZS not yet implemented."
	045 NotImplemented "Instruction FCMP not yet implemented."
	046 Move W10, 0x80000000
	047 NotImplemented "Instruction CSEL not yet implemented."
	048 Compare W8, 0
	049 JumpIfEqual {55}
	050 Move X0, 0x22CE000
	051 Move X0, [X0+3176]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X20+3727], W8
	055 Move X0, [X21]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move W9, S8
	061 Move W10, 0x44800000
	062 Move W9, W9
	063 ShiftRight W9, 31
	064 And W9, W9, 0x7FFFFFFF
	065 Move S0, 0.5
	066 Move S1, W10
	067 NotImplemented "Instruction UCVTF not yet implemented."
	068 Move W10, 0x7F800000
	069 Multiply S1, S8, S1
	070 Subtract S0, S0, S2
	071 Move S2, W10
	072 Add S0, S1, S0
	073 Move W9, 0x80000000
	074 NotImplemented "Instruction FCVTZS not yet implemented."
	075 NotImplemented "Instruction FCMP not yet implemented."
	076 NotImplemented "Instruction CSEL not yet implemented."
	077 NotImplemented "Instruction SBFM not yet implemented."
	078 NotImplemented "Instruction SBFM not yet implemented."
	079 Xor W8, W8, W22
	080 Xor W9, W10, W9
	081 NotImplemented "Instruction BFM not yet implemented."
	082 Move [X19+72], X8
	083 Move [X19+80], W31
	084 Move X20, [X31+48]
	085 Move X19, [X31+56]
	086 Move X22, [X31+32]
	087 Move X21, [X31+40]
	088 Move X30, [X31+16]
	089 Move D9, [X31+64]
	090 Move D8, [X31+72]
	091 Return 

Method: System.Single get_AngularVelocity2D()

Disassembly:
	0x01E2CE24 EOR W9, W10, W9, 0x1
	0x01E2CE28 BFM X8, X9, 0x20, 0x1F
	0x01E2CE2C STR X8, [X19 + 0x48]

ISIL:
	001 Add X0, X0, 84
	002 Move X1, X31
	003 Call Vector3Compressed.get_Z, X0
	004 Return V0

Method: System.Void set_AngularVelocity2D(System.Single value)

Disassembly:
	0x01E2C8D8 FCMP S1, S0
	0x01E2C8DC CSET W0, LS
	0x01E2C8E0 ADD X31, X31, 0x80

ISIL:
	001 Add X0, X0, 84
	002 Move X1, X31
	003 Call Vector3Compressed.set_Z, X0, V0
	004 Return 

Method: System.Single get_GravityScale2D()

Disassembly:
	0x01E2CB04 AND W9, W0, 0x1
	0x01E2CB08 STRB W9, [X19 + 0xB4]
	0x01E2CB0C CBZ X8, 0x1E2CB90

ISIL:
	001 Add X0, X0, 72
	002 Move X1, X31
	003 Call Vector3Compressed.get_Z, X0
	004 Return V0

Method: System.Void set_GravityScale2D(System.Single value)

Disassembly:
	0x01E2C8E4 RET
	0x01E2C8E8 BL 0x1C16F20
	0x01E2C8EC STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Add X0, X0, 72
	002 Move X1, X31
	003 Call Vector3Compressed.set_Z, X0, V0
	004 Return 

