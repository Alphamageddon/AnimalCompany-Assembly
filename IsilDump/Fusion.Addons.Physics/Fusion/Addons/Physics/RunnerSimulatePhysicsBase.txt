Type: Fusion.Addons.Physics.RunnerSimulatePhysicsBase

Method: System.Boolean get_ShowClientPhysicsSimulation()

Disassembly:
	0x01E2EA30 CBZ X8, 0x1E2EAB0
	0x01E2EA34 LDRB W9, [X22, X25, LSL]
	0x01E2EA38 LDR W10, [X8 + 0x18]
	0x01E2EA3C CMP W9, W10

ISIL:
	001 Move W8, [X0+76]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_ShowMultiplier()

Disassembly:
	0x01E2EA40 B.CS 0x1E2EAB4
	0x01E2EA44 CBZ X23, 0x1E2EAB0
	0x01E2EA48 ADD X8, X8, X9, 0x3, LSL
	0x01E2EA4C LDR X1, [X8 + 0x20]

ISIL:
	001 Move W8, [X0+72]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_WarnAutoSyncTransforms()

Disassembly:
	0x01E2EA50 MOV X0, X23
	0x01E2EA54 MOV X2, X31
	0x01E2EA58 BL 0x32333E0
	0x01E2EA5C ADD X25, X25, 0x1
	0x01E2EA60 SDIV W8, W25, W21
	0x01E2EA64 MSUB W8, W8, W21, W25
	0x01E2EA68 CMP W8, 0x0
	0x01E2EA6C CSEL X1, X20, X19, EQ
	0x01E2EA70 MOV X0, X23
	0x01E2EA74 MOV X2, X31
	0x01E2EA78 BL 0x32333E0
	0x01E2EA7C CMP X24, X25
	0x01E2EA80 B.NE 0x1E2EA14
	0x01E2EA84 B 0x1E2EA8C
	0x01E2EA88 CBZ X23, 0x1E2EAB0
	0x01E2EA8C LDR X8, [X23]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+488]
	006 Move X1, [X8+496]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {14}
	012 Move W8, [X19+72]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move W0, W31
	015 Move W8, [X19+76]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction CSET not yet implemented."
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return X0

Method: Fusion.Addons.Physics.PhysicsAuthorities get_PhysicsAuthority()

Disassembly:
	0x01E2EA90 MOV X0, X23
	0x01E2EA94 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: Fusion.Addons.Physics.PhysicsTimings get_PhysicsTiming()

Disassembly:
	0x01E2EA98 LDP X22, X21, [X31 + 0x30]
	0x01E2EA9C LDP X2, X1, [X8 + 0x168]

ISIL:
	001 Move W0, [X0+76]
	002 Return X0

Method: System.Single get_PhysicsSimulationDeltaTime()

Disassembly:
	0x01E2EAA0 LDP X24, X23, [X31 + 0x20]
	0x01E2EAA4 LDP X26, X25, [X31 + 0x10]
	0x01E2EAA8 LDR X30, [X31], #0x50
	0x01E2EAAC BR X2
	0x01E2EAB0 BL 0x1C16F20
	0x01E2EAB4 BL 0x1C16F28
	0x01E2EAB8 STP X30, X25, [X31 - 0x40]!

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+56]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call NetworkRunner.get_DeltaTime, X0
	008 Return V0
	009 Call 0x1C17F20

Method: System.Boolean get_AutoSyncTransforms()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void set_AutoSyncTransforms(System.Boolean value)

Disassembly:
	

ISIL:
No ISIL was generated
Method: Fusion.Addons.Physics.PhysicsTimings get_UnityPhysicsMode()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void OverrideAutoSimulate(System.Boolean enabled)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void RestoreAutoSimulate()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void add_OnBeforeSimulate(System.Action value)

Disassembly:
	0x01E2EABC STP X24, X23, [X31 + 0x10]
	0x01E2EAC0 STP X22, X21, [X31 + 0x20]
	0x01E2EAC4 STP X20, X19, [X31 + 0x30]
	0x01E2EAC8 ADRP X24, 0x25AA000
	0x01E2EACC ADRP X25, 0x22CC000
	0x01E2EAD0 LDRB W8, [X24 + 0xE93]
	0x01E2EAD4 LDR X25, [X25 + 0xD40]
	0x01E2EAD8 MOV X19, X4
	0x01E2EADC MOV X20, X3
	0x01E2EAE0 MOV W21, W2
	0x01E2EAE4 MOV W22, W1
	0x01E2EAE8 MOV X23, X0
	0x01E2EAEC TBNZ X8, 0x0, 0x1E2EB04
	0x01E2EAF0 ADRP X0, 0x22CC000
	0x01E2EAF4 LDR X0, [X0 + 0xD40]
	0x01E2EAF8 BL 0x1C16CF4
	0x01E2EAFC MOVZ W8, 0x1
	0x01E2EB00 STRB W8, [X24 + 0xE93]
	0x01E2EB04 LDR X0, [X25]
	0x01E2EB08 LDR W8, [X0 + 0xE0]
	0x01E2EB0C CBNZ W8, 0x1E2EB14
	0x01E2EB10 BL 0x1C16DFC
	0x01E2EB14 MOV X0, X23
	0x01E2EB18 MOV W1, W22
	0x01E2EB1C MOV W2, W21
	0x01E2EB20 MOV X3, X20
	0x01E2EB24 MOV X4, X19
	0x01E2EB28 LDP X20, X19, [X31 + 0x30]
	0x01E2EB2C LDP X22, X21, [X31 + 0x20]
	0x01E2EB30 LDP X24, X23, [X31 + 0x10]
	0x01E2EB34 LDP X30, X25, [X31], #0x40
	0x01E2EB38 B 0x1E2EB3C
	0x01E2EB3C STR X30, [X31 - 0x50]!
	0x01E2EB40 STP X26, X25, [X31 + 0x10]
	0x01E2EB44 STP X24, X23, [X31 + 0x20]
	0x01E2EB48 STP X22, X21, [X31 + 0x30]
	0x01E2EB4C STP X20, X19, [X31 + 0x40]
	0x01E2EB50 ADRP X23, 0x25AA000
	0x01E2EB54 ADRP X25, 0x22C5000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x25AB000
	007 Move W8, [X21+3715]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22C7000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3715], W8
	019 Move X22, 0x22C7000
	020 Add X20, X20, 96
	021 Move X21, [X20]
	022 Move X22, [X22+3696]
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Combine, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Void remove_OnBeforeSimulate(System.Action value)

Disassembly:
	0x01E2EB58 LDRB W8, [X23 + 0xE94]
	0x01E2EB5C LDR X25, [X25 + 0x8F0]
	0x01E2EB60 MOV X19, X4
	0x01E2EB64 MOV X20, X3
	0x01E2EB68 MOV W21, W2
	0x01E2EB6C MOV W24, W1
	0x01E2EB70 MOV X22, X0
	0x01E2EB74 TBNZ X8, 0x0, 0x1E2EB98
	0x01E2EB78 ADRP X0, 0x22CC000
	0x01E2EB7C LDR X0, [X0 + 0xD40]
	0x01E2EB80 BL 0x1C16CF4
	0x01E2EB84 ADRP X0, 0x22C5000
	0x01E2EB88 LDR X0, [X0 + 0x8F0]
	0x01E2EB8C BL 0x1C16CF4
	0x01E2EB90 MOVZ W8, 0x1
	0x01E2EB94 STRB W8, [X23 + 0xE94]
	0x01E2EB98 LDR X0, [X25]
	0x01E2EB9C BL 0x1C16F10
	0x01E2EBA0 MOV X1, X31
	0x01E2EBA4 MOV X23, X0
	0x01E2EBA8 BL 0x3231AC4
	0x01E2EBAC CMP W24, 0x1
	0x01E2EBB0 B.LT 0x1E2ECDC
	0x01E2EBB4 ADRP X26, 0x22CC000
	0x01E2EBB8 LDR X26, [X26 + 0xD40]
	0x01E2EBBC MOV X25, X31
	0x01E2EBC0 MOV W24, W24
	0x01E2EBC4 LDR X0, [X26]
	0x01E2EBC8 LDR W8, [X0 + 0xE0]
	0x01E2EBCC CBNZ W8, 0x1E2EBD8
	0x01E2EBD0 BL 0x1C16DFC
	0x01E2EBD4 LDR X0, [X26]
	0x01E2EBD8 LDR X8, [X0 + 0xB8]
	0x01E2EBDC LDR X8, [X8]
	0x01E2EBE0 CBZ X8, 0x1E2ED04
	0x01E2EBE4 LDR W9, [X22]
	0x01E2EBE8 LDR W10, [X8 + 0x18]
	0x01E2EBEC UBFM X9, X9, 0x18, 0x3F
	0x01E2EBF0 CMP W9, W10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x25AB000
	007 Move W8, [X21+3716]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22C7000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3716], W8
	019 Move X22, 0x22C7000
	020 Add X20, X20, 96
	021 Move X21, [X20]
	022 Move X22, [X22+3696]
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Remove, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Void add_OnAfterSimulate(System.Action value)

Disassembly:
	0x01E2EBF4 B.CS 0x1E2ED08
	0x01E2EBF8 CBZ X23, 0x1E2ED04
	0x01E2EBFC ADD X8, X8, X9, 0x3, LSL
	0x01E2EC00 LDR X1, [X8 + 0x20]
	0x01E2EC04 MOV X0, X23
	0x01E2EC08 MOV X2, X31
	0x01E2EC0C BL 0x32333E0
	0x01E2EC10 LDR X8, [X26]
	0x01E2EC14 LDR X8, [X8 + 0xB8]
	0x01E2EC18 LDR X8, [X8]
	0x01E2EC1C CBZ X8, 0x1E2ED04
	0x01E2EC20 LDRB W9, [X22 + 0x2]
	0x01E2EC24 LDR W10, [X8 + 0x18]
	0x01E2EC28 CMP W9, W10
	0x01E2EC2C B.CS 0x1E2ED08
	0x01E2EC30 ADD X8, X8, X9, 0x3, LSL
	0x01E2EC34 LDR X1, [X8 + 0x20]
	0x01E2EC38 MOV X0, X23
	0x01E2EC3C MOV X2, X31
	0x01E2EC40 BL 0x32333E0
	0x01E2EC44 LDR X8, [X26]
	0x01E2EC48 LDR X8, [X8 + 0xB8]
	0x01E2EC4C LDR X8, [X8]
	0x01E2EC50 CBZ X8, 0x1E2ED04
	0x01E2EC54 LDRB W9, [X22 + 0x1]
	0x01E2EC58 LDR W10, [X8 + 0x18]
	0x01E2EC5C CMP W9, W10
	0x01E2EC60 B.CS 0x1E2ED08
	0x01E2EC64 ADD X8, X8, X9, 0x3, LSL
	0x01E2EC68 LDR X1, [X8 + 0x20]
	0x01E2EC6C MOV X0, X23
	0x01E2EC70 MOV X2, X31
	0x01E2EC74 BL 0x32333E0
	0x01E2EC78 LDR X8, [X26]
	0x01E2EC7C LDR X8, [X8 + 0xB8]
	0x01E2EC80 LDR X8, [X8]
	0x01E2EC84 CBZ X8, 0x1E2ED04
	0x01E2EC88 LDRB W9, [X22]
	0x01E2EC8C LDR W10, [X8 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x25AB000
	007 Move W8, [X21+3717]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22C7000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3717], W8
	019 Move X22, 0x22C7000
	020 Add X20, X20, 104
	021 Move X21, [X20]
	022 Move X22, [X22+3696]
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Combine, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Void remove_OnAfterSimulate(System.Action value)

Disassembly:
	0x01E2EC90 CMP W9, W10
	0x01E2EC94 B.CS 0x1E2ED08
	0x01E2EC98 ADD X8, X8, X9, 0x3, LSL
	0x01E2EC9C LDR X1, [X8 + 0x20]
	0x01E2ECA0 MOV X0, X23
	0x01E2ECA4 MOV X2, X31
	0x01E2ECA8 BL 0x32333E0
	0x01E2ECAC ADD X25, X25, 0x1
	0x01E2ECB0 SDIV W8, W25, W21
	0x01E2ECB4 MSUB W8, W8, W21, W25
	0x01E2ECB8 CMP W8, 0x0
	0x01E2ECBC CSEL X1, X20, X19, EQ
	0x01E2ECC0 MOV X0, X23
	0x01E2ECC4 MOV X2, X31
	0x01E2ECC8 BL 0x32333E0
	0x01E2ECCC CMP X24, X25
	0x01E2ECD0 ADD X22, X22, 0x4
	0x01E2ECD4 B.NE 0x1E2EBC4
	0x01E2ECD8 B 0x1E2ECE0
	0x01E2ECDC CBZ X23, 0x1E2ED04
	0x01E2ECE0 LDR X8, [X23]
	0x01E2ECE4 MOV X0, X23
	0x01E2ECE8 LDP X20, X19, [X31 + 0x40]
	0x01E2ECEC LDP X22, X21, [X31 + 0x30]
	0x01E2ECF0 LDP X2, X1, [X8 + 0x168]
	0x01E2ECF4 LDP X24, X23, [X31 + 0x20]
	0x01E2ECF8 LDP X26, X25, [X31 + 0x10]
	0x01E2ECFC LDR X30, [X31], #0x50
	0x01E2ED00 BR X2
	0x01E2ED04 BL 0x1C16F20
	0x01E2ED08 BL 0x1C16F28
	0x01E2ED0C SUB W8, W0, 0x30
	0x01E2ED10 AND W9, W8, 0xFFFF
	0x01E2ED14 CMP W9, 0x9
	0x01E2ED18 B.LS 0x1E2ED50
	0x01E2ED1C SUB W8, W0, 0x61
	0x01E2ED20 AND W8, W8, 0xFFFF
	0x01E2ED24 CMP W8, 0x5
	0x01E2ED28 B.LS 0x1E2ED4C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x25AB000
	007 Move W8, [X21+3718]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22C7000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3718], W8
	019 Move X22, 0x22C7000
	020 Add X20, X20, 104
	021 Move X21, [X20]
	022 Move X22, [X22+3696]
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Remove, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Boolean get_HasSimulatedThisTick()

Disassembly:
	0x01E2ED2C SUB W8, W0, 0x41
	0x01E2ED30 AND W8, W8, 0xFFFF

ISIL:
	001 Move W0, [X0+128]
	002 Return X0

Method: System.Void set_HasSimulatedThisTick(System.Boolean value)

Disassembly:
	0x01E2ED34 CMP W8, 0x6
	0x01E2ED38 SUB W9, W0, 0x37
	0x01E2ED3C CSET W0, CC

ISIL:
	001 And W8, W1, 1
	002 Move [X0+128], W8
	003 Return 

Method: System.Void QueueBeforeSimulationCallback(System.Action callback)

Disassembly:
	0x01E2ED40 CMP W8, 0x5
	0x01E2ED44 CSEL W8, W31, W9, HI
	0x01E2ED48 B 0x1E2ED54
	0x01E2ED4C SUB W8, W0, 0x57
	0x01E2ED50 MOVZ W0, 0x1
	0x01E2ED54 STRB W8, [X1]
	0x01E2ED58 RET
	0x01E2ED5C STP X30, X27, [X31 - 0x50]!
	0x01E2ED60 STP X26, X25, [X31 + 0x10]
	0x01E2ED64 STP X24, X23, [X31 + 0x20]
	0x01E2ED68 STP X22, X21, [X31 + 0x30]
	0x01E2ED6C STP X20, X19, [X31 + 0x40]
	0x01E2ED70 ADRP X22, 0x25AA000
	0x01E2ED74 LDRB W8, [X22 + 0xE95]
	0x01E2ED78 MOV W20, W2
	0x01E2ED7C MOV X19, X1
	0x01E2ED80 MOV X21, X0
	0x01E2ED84 TBNZ X8, 0x0, 0x1E2EDA8
	0x01E2ED88 ADRP X0, 0x22CC000
	0x01E2ED8C LDR X0, [X0 + 0xD40]
	0x01E2ED90 BL 0x1C16CF4
	0x01E2ED94 ADRP X0, 0x22C7000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x25AB000
	006 Move W8, [X21+3719]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x22CD000
	014 Move X0, [X0+3352]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3719], W8
	018 Move X0, [X20+120]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x22CD000
	022 Move X8, [X8+3352]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Queue`1<Object>.Enqueue, X0, X1
	030 Return 
	031 Call 0x1C17F20

Method: System.Void QueueAfterSimulationCallback(System.Action callback)

Disassembly:
	0x01E2ED98 LDR X0, [X0 + 0x170]
	0x01E2ED9C BL 0x1C16CF4
	0x01E2EDA0 MOVZ W8, 0x1
	0x01E2EDA4 STRB W8, [X22 + 0xE95]
	0x01E2EDA8 CBZ X21, 0x1E2EF4C
	0x01E2EDAC CMP W20, 0x1
	0x01E2EDB0 MOV W22, W31
	0x01E2EDB4 B.LT 0x1E2EF30
	0x01E2EDB8 LDR W8, [X21 + 0x10]
	0x01E2EDBC CMP W8, 0x1
	0x01E2EDC0 B.LT 0x1E2EF30
	0x01E2EDC4 ADRP X25, 0x22CC000
	0x01E2EDC8 ADRP X26, 0x22C7000
	0x01E2EDCC LDR X25, [X25 + 0xD40]
	0x01E2EDD0 LDR X26, [X26 + 0x170]
	0x01E2EDD4 MOV W24, W31
	0x01E2EDD8 MOV W22, W31
	0x01E2EDDC MOV X0, X21
	0x01E2EDE0 MOV W1, W22
	0x01E2EDE4 MOV X2, X31
	0x01E2EDE8 BL 0x3222A1C
	0x01E2EDEC LDR X8, [X25]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x25AB000
	006 Move W8, [X21+3720]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x22CD000
	014 Move X0, [X0+3352]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3720], W8
	018 Move X0, [X20+112]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x22CD000
	022 Move X8, [X8+3352]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Queue`1<Object>.Enqueue, X0, X1
	030 Return 
	031 Call 0x1C17F20

Method: System.Void SimulatePrimaryScene(System.Single deltaTime)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void SimulateAdditionalScenes(System.Single deltaTime, System.Boolean checkPhysicsSimulation)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void Startup()

Disassembly:
	0x01E2EDF0 MOV W23, W0
	0x01E2EDF4 LDR W9, [X8 + 0xE0]
	0x01E2EDF8 CBNZ W9, 0x1E2EE04
	0x01E2EDFC MOV X0, X8
	0x01E2EE00 BL 0x1C16DFC
	0x01E2EE04 SUB W8, W23, 0x30
	0x01E2EE08 AND W8, W8, 0xFFFF
	0x01E2EE0C CMP W8, 0xA
	0x01E2EE10 B.CC 0x1E2EE3C
	0x01E2EE14 SUB W8, W23, 0x61
	0x01E2EE18 AND W8, W8, 0xFFFF
	0x01E2EE1C CMP W8, 0x6
	0x01E2EE20 B.CC 0x1E2EE44
	0x01E2EE24 SUB W8, W23, 0x41
	0x01E2EE28 AND W8, W8, 0xFFFF
	0x01E2EE2C CMP W8, 0x5
	0x01E2EE30 B.HI 0x1E2EEC0
	0x01E2EE34 MOVZ W8, 0xC9
	0x01E2EE38 B 0x1E2EE48
	0x01E2EE3C MOVZ W8, 0xD0
	0x01E2EE40 B 0x1E2EE48
	0x01E2EE44 MOVZ W8, 0xA9
	0x01E2EE48 LDR W9, [X21 + 0x10]
	0x01E2EE4C ADD W22, W22, 0x1
	0x01E2EE50 ADD W27, W8, W23
	0x01E2EE54 CMP W22, W9
	0x01E2EE58 B.EQ 0x1E2EF2C
	0x01E2EE5C MOV X0, X21
	0x01E2EE60 MOV W1, W22
	0x01E2EE64 MOV X2, X31
	0x01E2EE68 BL 0x3222A1C
	0x01E2EE6C LDR X8, [X25]
	0x01E2EE70 MOV W23, W0
	0x01E2EE74 LDR W9, [X8 + 0xE0]
	0x01E2EE78 CBNZ W9, 0x1E2EE84
	0x01E2EE7C MOV X0, X8
	0x01E2EE80 BL 0x1C16DFC
	0x01E2EE84 SUB W8, W23, 0x30
	0x01E2EE88 AND W8, W8, 0xFFFF
	0x01E2EE8C CMP W8, 0xA
	0x01E2EE90 B.CC 0x1E2EEE8
	0x01E2EE94 SUB W8, W23, 0x61
	0x01E2EE98 AND W8, W8, 0xFFFF
	0x01E2EE9C CMP W8, 0x6
	0x01E2EEA0 B.CC 0x1E2EEF0
	0x01E2EEA4 SUB W8, W23, 0x41
	0x01E2EEA8 AND W8, W8, 0xFFFF
	0x01E2EEAC CMP W8, 0x5
	0x01E2EEB0 B.LS 0x1E2EEF8
	0x01E2EEB4 ADD W8, W24, 0x1
	0x01E2EEB8 STRB W27, [X19, W24, SXTW]
	0x01E2EEBC MOV W24, W8
	0x01E2EEC0 LDR X0, [X26]
	0x01E2EEC4 LDR W8, [X0 + 0xE0]
	0x01E2EEC8 CBNZ W8, 0x1E2EED0
	0x01E2EECC BL 0x1C16DFC
	0x01E2EED0 MOV X0, X21
	0x01E2EED4 MOV W1, W22
	0x01E2EED8 MOV X2, X31
	0x01E2EEDC BL 0x331BCB0
	0x01E2EEE0 TBNZ X0, 0x0, 0x1E2EF10
	0x01E2EEE4 B 0x1E2EF30
	0x01E2EEE8 MOVZ W8, 0xD0
	0x01E2EEEC B 0x1E2EEFC
	0x01E2EEF0 MOVZ W8, 0xA9
	0x01E2EEF4 B 0x1E2EEFC
	0x01E2EEF8 MOVZ W8, 0xC9
	0x01E2EEFC ADD W8, W8, W23
	0x01E2EF00 ADD W9, W24, 0x1
	0x01E2EF04 ADD W8, W8, W27, 0x4, LSL
	0x01E2EF08 STRB W8, [X19, W24, SXTW]
	0x01E2EF0C MOV W24, W9
	0x01E2EF10 CMP W24, W20
	0x01E2EF14 ADD W22, W22, 0x1
	0x01E2EF18 B.GE 0x1E2EF30
	0x01E2EF1C LDR W8, [X21 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x25AB000
	005 Move W8, [X20+3721]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x22CD000
	012 Move X0, [X0+3240]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3721], W8
	016 Move W9, [X19+72]
	017 Move X20, X19
	018 NotImplemented "Instruction CMP not yet implemented."
	019 NotImplemented "Instruction CSEL not yet implemented."
	020 Compare W9, 0
	021 JumpIfNotEqual {53}
	022 Move X0, [X19+56]
	023 Compare X0, 0
	024 JumpIfEqual {87}
	025 Move X9, [X0+152]
	026 Compare X9, 0
	027 JumpIfEqual {87}
	028 Move W9, [X9+32]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CSEL not yet implemented."
	031 Compare W9, 0
	032 JumpIfEqual {37}
	033 Move W9, 2
	034 Move X20, X19
	035 Compare X20, 0
	036 JumpIfNotEqual {53}
	037 Move W9, [X0+392]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X1, X31
	040 Call NetworkRunner.get_Mode, X0
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X8, X20
	043 Move W9, [X19+76]
	044 Move X20, X8
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W9, 1
	047 NotImplemented "Instruction CINC not yet implemented."
	048 Compare X20, 0
	049 JumpIfNotEqual {53}
	050 Move W9, 2
	051 Compare X20, 0
	052 JumpIfEqual {87}
	053 Move X8, 0x22CD000
	054 Move X8, [X8+3240]
	055 Move [X20+72], W9
	056 Move X8, [X8]
	057 Move X8, [X8+184]
	058 Move W9, [X8+4]
	059 Add W10, W9, 1
	060 Move [X8+4], W10
	061 Compare W9, 0
	062 JumpIfNotEqual {71}
	063 Move X8, [X19]
	064 Move W9, [X19+72]
	065 Move X0, X19
	066 Move X10, [X8+536]
	067 Move X2, [X8+544]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 NotImplemented "Instruction CSET not yet implemented."
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move W8, [X19+88]
	072 Compare W8, 0
	073 JumpIfEqual {81}
	074 Move X0, [X19+56]
	075 Compare X0, 0
	076 JumpIfEqual {87}
	077 Move X1, X31
	078 Call NetworkRunner.get_DeltaTime, X0
	079 Move X0, X31
	080 Call Time.set_fixedDeltaTime, V0
	081 Move W8, 1
	082 Move [X19+129], W8
	083 Move X20, [X31+16]
	084 Move X19, [X31+24]
	085 Move X30, [X31+32]
	086 Return 
	087 Call 0x1C17F20

Method: System.Void Shutdown()

Disassembly:
	0x01E2EF20 CMP W22, W8
	0x01E2EF24 B.LT 0x1E2EDDC
	0x01E2EF28 B 0x1E2EF30
	0x01E2EF2C STRB W27, [X19, W24, SXTW]
	0x01E2EF30 MOV W0, W22
	0x01E2EF34 LDP X20, X19, [X31 + 0x40]
	0x01E2EF38 LDP X22, X21, [X31 + 0x30]
	0x01E2EF3C LDP X24, X23, [X31 + 0x20]
	0x01E2EF40 LDP X26, X25, [X31 + 0x10]
	0x01E2EF44 LDP X30, X27, [X31], #0x50
	0x01E2EF48 RET
	0x01E2EF4C BL 0x1C16F20
	0x01E2EF50 SUB X31, X31, 0x70
	0x01E2EF54 STP X29, X30, [X31 + 0x10]
	0x01E2EF58 STP X28, X27, [X31 + 0x20]
	0x01E2EF5C STP X26, X25, [X31 + 0x30]
	0x01E2EF60 STP X24, X23, [X31 + 0x40]
	0x01E2EF64 STP X22, X21, [X31 + 0x50]
	0x01E2EF68 STP X20, X19, [X31 + 0x60]
	0x01E2EF6C ADRP X19, 0x25AA000
	0x01E2EF70 LDRB W8, [X19 + 0xE96]
	0x01E2EF74 MOV W24, W2
	0x01E2EF78 MOV X20, X1
	0x01E2EF7C MOV X21, X0
	0x01E2EF80 TBNZ X8, 0x0, 0x1E2EFB0
	0x01E2EF84 ADRP X0, 0x22CC000
	0x01E2EF88 LDR X0, [X0 + 0xD40]
	0x01E2EF8C BL 0x1C16CF4
	0x01E2EF90 ADRP X0, 0x22C7000
	0x01E2EF94 LDR X0, [X0 + 0x170]
	0x01E2EF98 BL 0x1C16CF4
	0x01E2EF9C ADRP X0, 0x22CC000
	0x01E2EFA0 LDR X0, [X0 + 0xD48]
	0x01E2EFA4 BL 0x1C16CF4
	0x01E2EFA8 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x25AB000
	005 Move W8, [X20+3722]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x22CD000
	012 Move X0, [X0+3240]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3722], W8
	016 Move W8, [X19+129]
	017 Compare W8, 0
	018 JumpIfEqual {37}
	019 Move X8, 0x22CD000
	020 Move X8, [X8+3240]
	021 Move [X19+129], W31
	022 Move X8, [X8]
	023 Move X8, [X8+184]
	024 Move W9, [X8+4]
	025 Subtract W9, W9, 1
	026 Move [X8+4], W9
	027 Move W8, [X19+72]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X8, [X19]
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X2, [X8+552]
	034 Move X1, [X8+560]
	035 Move X30, [X31+32]
	036 CallNoReturn X2
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Return 

Method: System.Void Update()

Disassembly:
	0x01E2EFAC STRB W8, [X19 + 0xE96]
	0x01E2EFB0 ADRP X8, 0x22CC000
	0x01E2EFB4 LDR X8, [X8 + 0xD48]
	0x01E2EFB8 CMP W24, 0x1
	0x01E2EFBC B.LT 0x1E2F12C
	0x01E2EFC0 CBZ X21, 0x1E2F1A8
	0x01E2EFC4 ADRP X26, 0x22CC000
	0x01E2EFC8 ADRP X27, 0x22C7000
	0x01E2EFCC LDR X26, [X26 + 0xD40]
	0x01E2EFD0 LDR X27, [X27 + 0x170]
	0x01E2EFD4 MOV X23, X31
	0x01E2EFD8 MOV W22, W31
	0x01E2EFDC MOV W28, W24
	0x01E2EFE0 STR W24, [X31 + 0x4]
	0x01E2EFE4 LDR W8, [X21 + 0x10]
	0x01E2EFE8 CMP W22, W8
	0x01E2EFEC B.GE 0x1E2F138
	0x01E2EFF0 MOV W25, W31
	0x01E2EFF4 MOV W29, W31
	0x01E2EFF8 ADD W19, W22, 0x8
	0x01E2EFFC ADD W1, W22, W25
	0x01E2F000 MOV X0, X21
	0x01E2F004 MOV X2, X31
	0x01E2F008 BL 0x3222A1C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+129]
	004 Compare W8, 0
	005 JumpIfEqual {23}
	006 Move W8, [X0+76]
	007 Move X19, X0
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X8, [X19]
	010 Move X0, X19
	011 Move X9, [X8+520]
	012 Move X1, [X8+528]
	013 NotImplemented "Instruction BLR not yet implemented."
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X0, X31
	016 Call Time.get_deltaTime
	017 Move V1, [X19+84]
	018 Move X0, X19
	019 Move W1, W31
	020 Multiply S0, S0, S1
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+16]
	024 Move X19, [X31+24]
	025 Return 

Method: System.Void OnDestroy()

Disassembly:
	0x01E2F100 LDR W9, [X8 + 0xE0]
	0x01E2F104 CBNZ W9, 0x1E2F110
	0x01E2F108 MOV X0, X8
	0x01E2F10C BL 0x1C16DFC
	0x01E2F110 MOV W0, W24
	0x01E2F114 MOV X1, X31
	0x01E2F118 BL 0x3317FCC
	0x01E2F11C TBZ X0, 0x0, 0x1E2F0A0
	0x01E2F120 LDR W8, [X21 + 0x10]
	0x01E2F124 ADD W22, W22, 0x1
	0x01E2F128 B 0x1E2F0E0
	0x01E2F12C MOV W2, W31
	0x01E2F130 MOV W22, W31
	0x01E2F134 B 0x1E2F14C
	0x01E2F138 MOV W2, W23
	0x01E2F13C B 0x1E2F144
	0x01E2F140 LDR W2, [X31 + 0x4]
	0x01E2F144 ADRP X8, 0x22CB000
	0x01E2F148 LDR X8, [X8 + 0xD48]
	0x01E2F14C LDR X3, [X8]
	0x01E2F150 ADD X0, X31, 0x8
	0x01E2F154 MOV W1, W22
	0x01E2F158 STR X31, [X31 + 0x8]
	0x01E2F15C BL 0x279FA30
	0x01E2F160 LDR X0, [X31 + 0x8]
	0x01E2F164 LDP X20, X19, [X31 + 0x60]
	0x01E2F168 LDP X22, X21, [X31 + 0x50]
	0x01E2F16C LDP X24, X23, [X31 + 0x40]
	0x01E2F170 LDP X26, X25, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x25AA000
	006 Move X21, 0x22C8000
	007 Move W8, [X20+3723]
	008 Move X21, [X21+2680]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22C8000
	015 Move X0, [X0+2680]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3723], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Compare X19, 0
	025 JumpIfEqual {38}
	026 Move W8, [X19+48]
	027 Move X9, [X19]
	028 Move X0, X19
	029 Or W8, W8, 8
	030 Move [X19+48], W8
	031 Move X2, [X9+616]
	032 Move X1, [X9+624]
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 CallNoReturn X2
	038 Call 0x1C17F20

Method: System.Void FixedUpdate()

Disassembly:
	0x01E2F174 LDP X28, X27, [X31 + 0x20]
	0x01E2F178 LDP X29, X30, [X31 + 0x10]
	0x01E2F17C ADD X31, X31, 0x70
	0x01E2F180 RET
	0x01E2F184 ADRP X8, 0x22CB000
	0x01E2F188 LDR X8, [X8 + 0xD48]
	0x01E2F18C STR X31, [X31 + 0x8]
	0x01E2F190 ADD X0, X31, 0x8
	0x01E2F194 MOV W2, W23
	0x01E2F198 LDR X3, [X8]
	0x01E2F19C ADD W8, W22, W25
	0x01E2F1A0 ADD W1, W8, 0x1
	0x01E2F1A4 B 0x1E2F15C
	0x01E2F1A8 BL 0x1C16F20
	0x01E2F1AC STP X30, X21, [X31 - 0x20]!
	0x01E2F1B0 STP X20, X19, [X31 + 0x10]
	0x01E2F1B4 ADRP X21, 0x25A9000
	0x01E2F1B8 LDRB W8, [X21 + 0xE97]
	0x01E2F1BC MOV W19, W1
	0x01E2F1C0 MOV X20, X0
	0x01E2F1C4 TBNZ X8, 0x0, 0x1E2F20C
	0x01E2F1C8 ADRP X0, 0x22CB000
	0x01E2F1CC LDR X0, [X0 + 0xD40]
	0x01E2F1D0 BL 0x1C16CF4
	0x01E2F1D4 ADRP X0, 0x22C5000
	0x01E2F1D8 LDR X0, [X0 + 0xFE0]
	0x01E2F1DC BL 0x1C16CF4
	0x01E2F1E0 ADRP X0, 0x22C4000
	0x01E2F1E4 LDR X0, [X0 + 0xDD8]
	0x01E2F1E8 BL 0x1C16CF4
	0x01E2F1EC ADRP X0, 0x22CB000
	0x01E2F1F0 LDR X0, [X0 + 0xD50]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+129]
	004 Compare W8, 0
	005 JumpIfEqual {36}
	006 Move W8, [X0+76]
	007 Move X19, X0
	008 Compare W8, 0
	009 JumpIfNotEqual {36}
	010 Move W8, [X19+88]
	011 Compare W8, 0
	012 JumpIfEqual {20}
	013 Move X0, [X19+56]
	014 Compare X0, 0
	015 JumpIfEqual {39}
	016 Move X1, X31
	017 Call NetworkRunner.get_DeltaTime, X0
	018 Move X0, X31
	019 Call Time.set_fixedDeltaTime, V0
	020 Move X8, [X19]
	021 Move X0, X19
	022 Move X9, [X8+520]
	023 Move X1, [X8+528]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, X31
	027 Call Time.get_fixedDeltaTime
	028 Move V1, [X19+84]
	029 Move X0, X19
	030 Move W1, W31
	031 Multiply S0, S0, S1
	032 Move X30, [X31+16]
	033 Move X19, [X31+24]
	034 Call RunnerSimulatePhysicsBase.SimulationExecute, X0, V0, X1
	035 Return 
	036 Move X30, [X31+16]
	037 Move X19, [X31+24]
	038 Return 
	039 Call 0x1C17F20

Method: System.Void FixedUpdateNetwork()

Disassembly:
	0x01E2F1F4 BL 0x1C16CF4
	0x01E2F1F8 ADRP X0, 0x22CB000
	0x01E2F1FC LDR X0, [X0 + 0xD58]
	0x01E2F200 BL 0x1C16CF4
	0x01E2F204 MOVZ W8, 0x1
	0x01E2F208 STRB W8, [X21 + 0xE97]
	0x01E2F20C CBZ X20, 0x1E2F26C
	0x01E2F210 LDR X1, [X20 + 0x18]
	0x01E2F214 CBZ X1, 0x1E2F278
	0x01E2F218 ADRP X8, 0x22CB000
	0x01E2F21C LDR X8, [X8 + 0xD40]
	0x01E2F220 ADD X9, X20, 0x20
	0x01E2F224 CMP W1, 0x0
	0x01E2F228 CSEL X21, X31, X9, EQ
	0x01E2F22C LDR X0, [X8]
	0x01E2F230 LDR W8, [X0 + 0xE0]
	0x01E2F234 CBNZ W8, 0x1E2F240
	0x01E2F238 BL 0x1C16DFC
	0x01E2F23C LDR W1, [X20 + 0x18]
	0x01E2F240 ADRP X8, 0x22C5000
	0x01E2F244 ADRP X9, 0x22C4000
	0x01E2F248 LDR X8, [X8 + 0xFE0]
	0x01E2F24C LDR X9, [X9 + 0xDD8]
	0x01E2F250 MOV W2, W19
	0x01E2F254 LDP X20, X19, [X31 + 0x10]
	0x01E2F258 LDR X3, [X8]
	0x01E2F25C LDR X4, [X9]
	0x01E2F260 MOV X0, X21
	0x01E2F264 LDP X30, X21, [X31], #0x20
	0x01E2F268 B 0x1E2E98C
	0x01E2F26C ADRP X8, 0x22CB000
	0x01E2F270 LDR X8, [X8 + 0xD58]
	0x01E2F274 B 0x1E2F280
	0x01E2F278 ADRP X8, 0x22CB000
	0x01E2F27C LDR X8, [X8 + 0xD50]
	0x01E2F280 LDR X0, [X8]
	0x01E2F284 LDP X20, X19, [X31 + 0x10]
	0x01E2F288 LDP X30, X21, [X31], #0x20
	0x01E2F28C RET
	0x01E2F290 STR X30, [X31 - 0x20]!
	0x01E2F294 STP X20, X19, [X31 + 0x10]
	0x01E2F298 ADRP X19, 0x25A9000
	0x01E2F29C ADRP X20, 0x22C4000
	0x01E2F2A0 LDRB W8, [X19 + 0xE98]
	0x01E2F2A4 LDR X20, [X20 + 0xAC8]
	0x01E2F2A8 TBNZ X8, 0x0, 0x1E2FECC
	0x01E2F2AC ADRP X0, 0x22CB000
	0x01E2F2B0 LDR X0, [X0 + 0xD40]
	0x01E2F2B4 BL 0x1C16CF4
	0x01E2F2B8 ADRP X0, 0x22C4000
	0x01E2F2BC LDR X0, [X0 + 0xAC8]
	0x01E2F2C0 BL 0x1C16CF4
	0x01E2F2C4 ADRP X0, 0x22CB000
	0x01E2F2C8 LDR X0, [X0 + 0xD60]
	0x01E2F2CC BL 0x1C16CF4
	0x01E2F2D0 ADRP X0, 0x22CB000
	0x01E2F2D4 LDR X0, [X0 + 0xD68]
	0x01E2F2D8 BL 0x1C16CF4
	0x01E2F2DC ADRP X0, 0x22CB000
	0x01E2F2E0 LDR X0, [X0 + 0xD70]
	0x01E2F2E4 BL 0x1C16CF4
	0x01E2F2E8 ADRP X0, 0x22CB000
	0x01E2F2EC LDR X0, [X0 + 0xD78]
	0x01E2F2F0 BL 0x1C16CF4
	0x01E2F2F4 ADRP X0, 0x22CB000
	0x01E2F2F8 LDR X0, [X0 + 0xD80]
	0x01E2F2FC BL 0x1C16CF4
	0x01E2F300 ADRP X0, 0x22CB000
	0x01E2F304 LDR X0, [X0 + 0xD88]
	0x01E2F308 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move [X31+8], W31
	005 Move W8, [X0+129]
	006 Move X19, X0
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X8, [X19]
	010 Move X0, X19
	011 Move X9, [X8+600]
	012 Move X1, [X8+608]
	013 NotImplemented "Instruction BLR not yet implemented."
	014 Move X0, [X19+56]
	015 Compare X0, 0
	016 JumpIfEqual {87}
	017 Move X1, X31
	018 Call NetworkRunner.get_IsShutdown, X0
	019 Move TEMP, X0
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {28}
	023 Move X8, [X19]
	024 Move X0, X19
	025 Move X9, [X8+616]
	026 Move X1, [X8+624]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X0, [X19+56]
	029 Compare X0, 0
	030 JumpIfEqual {87}
	031 Add X1, X31, 8
	032 Move X2, X31
	033 Call NetworkRunner.TryGetPhysicsInfo, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {65}
	038 Move X0, [X19+56]
	039 Compare X0, 0
	040 JumpIfEqual {87}
	041 Move X1, X31
	042 Call NetworkRunner.get_IsServer, X0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {56}
	047 Move X0, [X19+56]
	048 Compare X0, 0
	049 JumpIfEqual {87}
	050 Move X1, X31
	051 Call NetworkRunner.get_IsSharedModeMasterClient, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {63}
	056 Move V0, [X19+84]
	057 Move [X31+8], S0
	058 Move X0, [X19+56]
	059 Compare X0, 0
	060 JumpIfEqual {87}
	061 Move X1, X31
	062 Call NetworkRunner.TrySetPhysicsInfo, X0, X1
	063 Move V0, [X31+8]
	064 Move [X19+84], S0
	065 Move W8, [X19+76]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X8, [X19]
	068 Move X0, X19
	069 Move X9, [X8+520]
	070 Move X1, [X8+528]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X8, [X19]
	074 Move X0, X19
	075 Move X9, [X8+472]
	076 Move X1, [X8+480]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move V1, [X19+84]
	079 Move W1, 1
	080 Move X0, X19
	081 Multiply S0, S0, S1
	082 Call RunnerSimulatePhysicsBase.SimulationExecute, X0, V0, X1
	083 Move X30, [X31+16]
	084 Move X19, [X31+24]
	085 Add X31, X31, 32
	086 Return 
	087 Call 0x1C17F20

Method: System.Void SimulationExecute(System.Single deltaTime, System.Boolean checkPhysicsSimulation)

Disassembly:
	0x01E2F00C LDR X8, [X26]
	0x01E2F010 MOV W24, W0
	0x01E2F014 LDR W9, [X8 + 0xE0]
	0x01E2F018 CBNZ W9, 0x1E2F024
	0x01E2F01C MOV X0, X8
	0x01E2F020 BL 0x1C16DFC
	0x01E2F024 SUB W8, W24, 0x30
	0x01E2F028 AND W8, W8, 0xFFFF
	0x01E2F02C CMP W8, 0xA
	0x01E2F030 B.CC 0x1E2F05C
	0x01E2F034 SUB W8, W24, 0x61
	0x01E2F038 AND W8, W8, 0xFFFF
	0x01E2F03C CMP W8, 0x6
	0x01E2F040 B.CC 0x1E2F064
	0x01E2F044 SUB W8, W24, 0x41
	0x01E2F048 AND W8, W8, 0xFFFF
	0x01E2F04C CMP W8, 0x6
	0x01E2F050 B.CS 0x1E2F0B4
	0x01E2F054 MOVZ W8, 0xC9
	0x01E2F058 B 0x1E2F068
	0x01E2F05C MOVZ W8, 0xD0
	0x01E2F060 B 0x1E2F068
	0x01E2F064 MOVZ W8, 0xA9
	0x01E2F068 AND W9, W24, 0xFFFF
	0x01E2F06C ADD W8, W8, W9
	0x01E2F070 AND W8, W8, 0xFF
	0x01E2F074 CMP W25, 0x7
	0x01E2F078 ORR W29, W8, W29, 0x4
	0x01E2F07C B.EQ 0x1E2F09C
	0x01E2F080 LDR W9, [X21 + 0x10]
	0x01E2F084 ADD W25, W25, 0x1
	0x01E2F088 ADD W8, W22, W25
	0x01E2F08C CMP W8, W9
	0x01E2F090 B.LT 0x1E2EFFC
	0x01E2F094 MOV W22, W8
	0x01E2F098 B 0x1E2F0A0
	0x01E2F09C MOV W22, W19
	0x01E2F0A0 STR W29, [X20, X23, LSL #2]
	0x01E2F0A4 ADD X23, X23, 0x1
	0x01E2F0A8 CMP X23, X28
	0x01E2F0AC B.NE 0x1E2EFE4
	0x01E2F0B0 B 0x1E2F140
	0x01E2F0B4 LDR X0, [X27]
	0x01E2F0B8 LDR W8, [X0 + 0xE0]
	0x01E2F0BC CBNZ W8, 0x1E2F0C4
	0x01E2F0C0 BL 0x1C16DFC
	0x01E2F0C4 MOV W0, W24
	0x01E2F0C8 MOV X1, X31
	0x01E2F0CC BL 0x3317FCC
	0x01E2F0D0 TBZ X0, 0x0, 0x1E2F184
	0x01E2F0D4 LDR W8, [X21 + 0x10]
	0x01E2F0D8 ADD W9, W22, W25
	0x01E2F0DC ADD W22, W9, 0x1
	0x01E2F0E0 CMP W22, W8
	0x01E2F0E4 B.GE 0x1E2F0A0
	0x01E2F0E8 MOV X0, X21
	0x01E2F0EC MOV W1, W22
	0x01E2F0F0 MOV X2, X31
	0x01E2F0F4 BL 0x3222A1C
	0x01E2F0F8 LDR X8, [X27]
	0x01E2F0FC MOV W24, W0

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x25AA000
	007 Move W8, [X21+3724]
	008 Move W19, W1
	009 Move V8, V0
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x22C5000
	016 Move X0, [X0+1528]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3724], W8
	020 Move V0, [X20+84]
	021 NotImplemented "Instruction FCMP not yet implemented."
	022 Move TEMP, X19
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {33}
	026 Move W1, [X20+80]
	027 Move X0, X20
	028 Call RunnerSimulatePhysicsBase.CanSimulatePhysics, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {57}
	033 Move X8, [X20]
	034 Move X0, X20
	035 Move V0, V8
	036 Move X9, [X8+632]
	037 Move X1, [X8+640]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X8, [X20]
	040 And W1, W19, 1
	041 Move X0, X20
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X3, [X8+584]
	045 Move X2, [X8+592]
	046 Move X30, [X31+16]
	047 Move X21, [X31+24]
	048 Move V0, V8
	049 Move V8, [X31+48]
	050 CallNoReturn X3
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X30, [X31+16]
	054 Move X21, [X31+24]
	055 Move V8, [X31+48]
	056 Return 
	057 Move W1, [X20+80]
	058 Move X0, X20
	059 Call RunnerSimulatePhysicsBase.RequiresSyncTransform, X0, X1
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {73}
	064 Move X8, [X20]
	065 Move X0, X20
	066 Move X9, [X8+648]
	067 Move X1, [X8+656]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {39}
	073 Move X8, 0x22C5000
	074 Move X8, [X8+1528]
	075 Move X0, [X8]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X0, X31
	081 Call Physics.SyncTransforms

Method: System.Void Fusion.IBeforeTick.BeforeTick()

Disassembly:
	0x01E2F354 ADRP X0, 0x22CB000
	0x01E2F358 LDR X0, [X0 + 0xDC0]

ISIL:
	001 Move [X0+128], W31
	002 Return 

Method: System.Boolean CanSimulatePhysics(Fusion.Addons.Physics.ClientPhysicsSimulation clientPhysicsSimulation)

Disassembly:
	0x01E2E3C0 CBZ X0, 0x1E2E458
	0x01E2E3C4 LDR X8, [X0 + 0x40]
	0x01E2E3C8 LDR X9, [X0 + 0x18]
	0x01E2E3CC LDR X1, [X0 + 0x28]
	0x01E2E3D0 MOV X0, X8
	0x01E2E3D4 BLR X9
	0x01E2E3D8 LDR X0, [X19 + 0x78]
	0x01E2E3DC CBNZ X0, 0x1E2E3AC
	0x01E2E3E0 B 0x1E2E458
	0x01E2E3E4 LDR X8, [X19 + 0x60]
	0x01E2E3E8 CBZ X8, 0x1E2E3FC
	0x01E2E3EC LDR X9, [X8 + 0x18]
	0x01E2E3F0 LDR X0, [X8 + 0x40]
	0x01E2E3F4 LDR X1, [X8 + 0x28]
	0x01E2E3F8 BLR X9
	0x01E2E3FC LDR X8, [X19]
	0x01E2E400 MOV X0, X19
	0x01E2E404 MOV V0.16B, V8.16B
	0x01E2E408 LDR X9, [X8 + 0x238]
	0x01E2E40C LDR X1, [X8 + 0x240]
	0x01E2E410 BLR X9
	0x01E2E414 LDR X0, [X19 + 0x70]
	0x01E2E418 MOVZ W8, 0x1
	0x01E2E41C STRB W8, [X19 + 0x80]
	0x01E2E420 CBZ X0, 0x1E2E458
	0x01E2E424 LDR W8, [X0 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+56]
	006 Compare X0, 0
	007 JumpIfEqual {33}
	008 Move W20, W1
	009 Move X1, X31
	010 Call NetworkRunner.get_IsServer, X0
	011 Move W8, W0
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move W0, 1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X0, [X19+56]
	020 Compare X0, 0
	021 JumpIfEqual {33}
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X1, X31
	025 Move X30, [X31+32]
	026 Call NetworkRunner.get_IsForward, X0
	027 Return X0
	028 Move W0, W31
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0
	033 Call 0x1C17F20

Method: System.Boolean RequiresSyncTransform(Fusion.Addons.Physics.ClientPhysicsSimulation clientPhysicsSimulation)

Disassembly:
	0x01E2F30C ADRP X0, 0x22CB000
	0x01E2F310 LDR X0, [X0 + 0xD90]
	0x01E2F314 BL 0x1C16CF4
	0x01E2F318 ADRP X0, 0x22CB000
	0x01E2F31C LDR X0, [X0 + 0xD98]
	0x01E2F320 BL 0x1C16CF4
	0x01E2F324 ADRP X0, 0x22CB000
	0x01E2F328 LDR X0, [X0 + 0xDA0]
	0x01E2F32C BL 0x1C16CF4
	0x01E2F330 ADRP X0, 0x22CB000
	0x01E2F334 LDR X0, [X0 + 0xDA8]
	0x01E2F338 BL 0x1C16CF4
	0x01E2F33C ADRP X0, 0x22CB000
	0x01E2F340 LDR X0, [X0 + 0xDB0]
	0x01E2F344 BL 0x1C16CF4
	0x01E2F348 ADRP X0, 0x22CB000
	0x01E2F34C LDR X0, [X0 + 0xDB8]
	0x01E2F350 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X0, [X0+56]
	005 Compare X0, 0
	006 JumpIfEqual {15}
	007 Move X1, X31
	008 Call NetworkRunner.get_IsForward, X0
	009 Xor W8, W0, 1
	010 Move W8, 1
	011 Move W8, W31
	012 And W0, W8, 1
	013 Move X30, [X31+16]
	014 Return X0
	015 Call 0x1C17F20

Method: System.Void DoSimulatePrimaryScene(System.Single deltaTime)

Disassembly:
	0x01E2F35C BL 0x1C16CF4
	0x01E2F360 ADRP X0, 0x22CB000
	0x01E2F364 LDR X0, [X0 + 0xDC8]
	0x01E2F368 BL 0x1C16CF4
	0x01E2F36C ADRP X0, 0x22CB000
	0x01E2F370 LDR X0, [X0 + 0xDD0]
	0x01E2F374 BL 0x1C16CF4
	0x01E2F378 ADRP X0, 0x22CB000
	0x01E2F37C LDR X0, [X0 + 0xDD8]
	0x01E2F380 BL 0x1C16CF4
	0x01E2F384 ADRP X0, 0x22CB000
	0x01E2F388 LDR X0, [X0 + 0xDE0]
	0x01E2F38C BL 0x1C16CF4
	0x01E2F390 ADRP X0, 0x22CB000
	0x01E2F394 LDR X0, [X0 + 0xDE8]
	0x01E2F398 BL 0x1C16CF4
	0x01E2F39C ADRP X0, 0x22CB000
	0x01E2F3A0 LDR X0, [X0 + 0xDF0]
	0x01E2F3A4 BL 0x1C16CF4
	0x01E2F3A8 ADRP X0, 0x22C8000
	0x01E2F3AC LDR X0, [X0 + 0x120]
	0x01E2F3B0 BL 0x1C16CF4
	0x01E2F3B4 ADRP X0, 0x22CB000
	0x01E2F3B8 LDR X0, [X0 + 0xDF8]
	0x01E2F3BC BL 0x1C16CF4
	0x01E2F3C0 ADRP X0, 0x22CB000
	0x01E2F3C4 LDR X0, [X0 + 0xE00]
	0x01E2F3C8 BL 0x1C16CF4
	0x01E2F3CC ADRP X0, 0x22CB000
	0x01E2F3D0 LDR X0, [X0 + 0xE08]
	0x01E2F3D4 BL 0x1C16CF4
	0x01E2F3D8 ADRP X0, 0x22CB000
	0x01E2F3DC LDR X0, [X0 + 0xE10]
	0x01E2F3E0 BL 0x1C16CF4
	0x01E2F3E4 ADRP X0, 0x22CB000
	0x01E2F3E8 LDR X0, [X0 + 0xE18]
	0x01E2F3EC BL 0x1C16CF4
	0x01E2F3F0 ADRP X0, 0x22CB000
	0x01E2F3F4 LDR X0, [X0 + 0xE20]
	0x01E2F3F8 BL 0x1C16CF4
	0x01E2F3FC ADRP X0, 0x22CB000
	0x01E2F400 LDR X0, [X0 + 0xE28]
	0x01E2F404 BL 0x1C16CF4
	0x01E2F408 ADRP X0, 0x22CB000
	0x01E2F40C LDR X0, [X0 + 0xE30]
	0x01E2F410 BL 0x1C16CF4
	0x01E2F414 ADRP X0, 0x22CB000
	0x01E2F418 LDR X0, [X0 + 0xE38]
	0x01E2F41C BL 0x1C16CF4
	0x01E2F420 ADRP X0, 0x22CB000
	0x01E2F424 LDR X0, [X0 + 0xE40]
	0x01E2F428 BL 0x1C16CF4
	0x01E2F42C ADRP X0, 0x22CB000
	0x01E2F430 LDR X0, [X0 + 0xE48]
	0x01E2F434 BL 0x1C16CF4
	0x01E2F438 ADRP X0, 0x22CB000
	0x01E2F43C LDR X0, [X0 + 0xE50]
	0x01E2F440 BL 0x1C16CF4
	0x01E2F444 ADRP X0, 0x22CB000
	0x01E2F448 LDR X0, [X0 + 0xE58]
	0x01E2F44C BL 0x1C16CF4
	0x01E2F450 ADRP X0, 0x22CB000
	0x01E2F454 LDR X0, [X0 + 0xE60]
	0x01E2F458 BL 0x1C16CF4
	0x01E2F45C ADRP X0, 0x22CB000
	0x01E2F460 LDR X0, [X0 + 0xE68]
	0x01E2F464 BL 0x1C16CF4
	0x01E2F468 ADRP X0, 0x22CB000
	0x01E2F46C LDR X0, [X0 + 0xE70]
	0x01E2F470 BL 0x1C16CF4
	0x01E2F474 ADRP X0, 0x22CB000
	0x01E2F478 LDR X0, [X0 + 0xE78]
	0x01E2F47C BL 0x1C16CF4
	0x01E2F480 ADRP X0, 0x22CB000
	0x01E2F484 LDR X0, [X0 + 0xE80]
	0x01E2F488 BL 0x1C16CF4
	0x01E2F48C ADRP X0, 0x22CB000

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x25AA000
	006 Move W8, [X20+3725]
	007 Move V8, V0
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x22CC000
	014 Move X0, [X0+3360]
	015 Call 0x1C17CF4
	016 Move X0, 0x22CC000
	017 Move X0, [X0+3368]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3725], W8
	021 Move X0, [X19+120]
	022 Compare X0, 0
	023 JumpIfEqual {72}
	024 Move X20, 0x22CC000
	025 Move X20, [X20+3360]
	026 Move W8, [X0+32]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X1, [X20]
	029 Call Queue`1<Object>.Dequeue, X0
	030 Compare X0, 0
	031 JumpIfEqual {72}
	032 Move X8, [X0+64]
	033 Move X9, [X0+24]
	034 Move X1, [X0+40]
	035 Move X0, X8
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X0, [X19+120]
	038 Compare X0, 0
	039 JumpIfNotEqual {26}
	040 Move X8, [X19+96]
	041 Compare X8, 0
	042 JumpIfEqual {47}
	043 Move X9, [X8+24]
	044 Move X0, [X8+64]
	045 Move X1, [X8+40]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X8, [X19]
	048 Move X0, X19
	049 Move V0, V8
	050 Move X9, [X8+568]
	051 Move X1, [X8+576]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X0, [X19+112]
	054 Move W8, 1
	055 Move [X19+128], W8
	056 Compare X0, 0
	057 JumpIfEqual {72}
	058 Move W8, [X0+32]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X1, [X20]
	061 Call Queue`1<Object>.Dequeue, X0
	062 Compare X0, 0
	063 JumpIfEqual {72}
	064 Move X8, [X0+64]
	065 Move X9, [X0+24]
	066 Move X1, [X0+40]
	067 Move X0, X8
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X0, [X19+112]
	070 Compare X0, 0
	071 JumpIfNotEqual {58}
	072 Call 0x1C17F20
	073 Move X8, [X19+104]
	074 Compare X8, 0
	075 JumpIfEqual {84}
	076 Move X2, [X8+24]
	077 Move X0, [X8+64]
	078 Move X1, [X8+40]
	079 Move X20, [X31+16]
	080 Move X19, [X31+24]
	081 Move X30, [X31+8]
	082 Move V8, [X31+32]
	083 CallNoReturn X2
	084 Move X20, [X31+16]
	085 Move X19, [X31+24]
	086 Move X30, [X31+8]
	087 Move V8, [X31+32]
	088 Return 

Method: System.Boolean AnySceneRequiresSyncTransform()

Disassembly:
	0x01E2F490 LDR X0, [X0 + 0xE88]
	0x01E2F494 BL 0x1C16CF4

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x01E2F498 ADRP X0, 0x22CB000
	0x01E2F49C LDR X0, [X0 + 0xE90]
	0x01E2F4A0 BL 0x1C16CF4
	0x01E2F4A4 ADRP X0, 0x22CB000
	0x01E2F4A8 LDR X0, [X0 + 0xE98]
	0x01E2F4AC BL 0x1C16CF4
	0x01E2F4B0 ADRP X0, 0x22CB000
	0x01E2F4B4 LDR X0, [X0 + 0xEA0]
	0x01E2F4B8 BL 0x1C16CF4
	0x01E2F4BC ADRP X0, 0x22CB000
	0x01E2F4C0 LDR X0, [X0 + 0xEA8]
	0x01E2F4C4 BL 0x1C16CF4
	0x01E2F4C8 ADRP X0, 0x22CB000
	0x01E2F4CC LDR X0, [X0 + 0xEB0]
	0x01E2F4D0 BL 0x1C16CF4
	0x01E2F4D4 ADRP X0, 0x22CB000
	0x01E2F4D8 LDR X0, [X0 + 0xEB8]
	0x01E2F4DC BL 0x1C16CF4
	0x01E2F4E0 ADRP X0, 0x22CB000
	0x01E2F4E4 LDR X0, [X0 + 0xEC0]
	0x01E2F4E8 BL 0x1C16CF4
	0x01E2F4EC ADRP X0, 0x22CB000
	0x01E2F4F0 LDR X0, [X0 + 0xEC8]
	0x01E2F4F4 BL 0x1C16CF4
	0x01E2F4F8 ADRP X0, 0x22CB000
	0x01E2F4FC LDR X0, [X0 + 0xED0]
	0x01E2F500 BL 0x1C16CF4
	0x01E2F504 ADRP X0, 0x22CB000
	0x01E2F508 LDR X0, [X0 + 0xED8]
	0x01E2F50C BL 0x1C16CF4
	0x01E2F510 ADRP X0, 0x22CB000
	0x01E2F514 LDR X0, [X0 + 0xEE0]
	0x01E2F518 BL 0x1C16CF4
	0x01E2F51C ADRP X0, 0x22CB000
	0x01E2F520 LDR X0, [X0 + 0xEE8]
	0x01E2F524 BL 0x1C16CF4
	0x01E2F528 ADRP X0, 0x22CB000
	0x01E2F52C LDR X0, [X0 + 0xEF0]
	0x01E2F530 BL 0x1C16CF4
	0x01E2F534 ADRP X0, 0x22CB000
	0x01E2F538 LDR X0, [X0 + 0xEF8]
	0x01E2F53C BL 0x1C16CF4
	0x01E2F540 ADRP X0, 0x22CB000
	0x01E2F544 LDR X0, [X0 + 0xF00]
	0x01E2F548 BL 0x1C16CF4
	0x01E2F54C ADRP X0, 0x22CB000
	0x01E2F550 LDR X0, [X0 + 0xF08]
	0x01E2F554 BL 0x1C16CF4
	0x01E2F558 ADRP X0, 0x22CB000
	0x01E2F55C LDR X0, [X0 + 0xF10]
	0x01E2F560 BL 0x1C16CF4
	0x01E2F564 ADRP X0, 0x22CB000
	0x01E2F568 LDR X0, [X0 + 0xF18]
	0x01E2F56C BL 0x1C16CF4
	0x01E2F570 ADRP X0, 0x22CB000
	0x01E2F574 LDR X0, [X0 + 0xF20]
	0x01E2F578 BL 0x1C16CF4
	0x01E2F57C ADRP X0, 0x22CB000
	0x01E2F580 LDR X0, [X0 + 0xF28]
	0x01E2F584 BL 0x1C16CF4
	0x01E2F588 ADRP X0, 0x22CB000
	0x01E2F58C LDR X0, [X0 + 0xF30]
	0x01E2F590 BL 0x1C16CF4
	0x01E2F594 ADRP X0, 0x22CB000
	0x01E2F598 LDR X0, [X0 + 0xF38]
	0x01E2F59C BL 0x1C16CF4
	0x01E2F5A0 ADRP X0, 0x22CB000
	0x01E2F5A4 LDR X0, [X0 + 0xF40]
	0x01E2F5A8 BL 0x1C16CF4
	0x01E2F5AC ADRP X0, 0x22CB000
	0x01E2F5B0 LDR X0, [X0 + 0xF48]
	0x01E2F5B4 BL 0x1C16CF4
	0x01E2F5B8 ADRP X0, 0x22CB000
	0x01E2F5BC LDR X0, [X0 + 0xF50]
	0x01E2F5C0 BL 0x1C16CF4
	0x01E2F5C4 ADRP X0, 0x22CB000
	0x01E2F5C8 LDR X0, [X0 + 0xF58]
	0x01E2F5CC BL 0x1C16CF4
	0x01E2F5D0 ADRP X0, 0x22CB000
	0x01E2F5D4 LDR X0, [X0 + 0xF60]
	0x01E2F5D8 BL 0x1C16CF4
	0x01E2F5DC ADRP X0, 0x22CB000
	0x01E2F5E0 LDR X0, [X0 + 0xF68]
	0x01E2F5E4 BL 0x1C16CF4
	0x01E2F5E8 ADRP X0, 0x22CB000
	0x01E2F5EC LDR X0, [X0 + 0xF70]
	0x01E2F5F0 BL 0x1C16CF4
	0x01E2F5F4 ADRP X0, 0x22CB000
	0x01E2F5F8 LDR X0, [X0 + 0xF78]
	0x01E2F5FC BL 0x1C16CF4
	0x01E2F600 ADRP X0, 0x22CB000
	0x01E2F604 LDR X0, [X0 + 0xF80]
	0x01E2F608 BL 0x1C16CF4
	0x01E2F60C ADRP X0, 0x22CB000
	0x01E2F610 LDR X0, [X0 + 0xF88]
	0x01E2F614 BL 0x1C16CF4
	0x01E2F618 ADRP X0, 0x22CB000
	0x01E2F61C LDR X0, [X0 + 0xF90]
	0x01E2F620 BL 0x1C16CF4
	0x01E2F624 ADRP X0, 0x22CB000
	0x01E2F628 LDR X0, [X0 + 0xF98]
	0x01E2F62C BL 0x1C16CF4
	0x01E2F630 ADRP X0, 0x22CB000
	0x01E2F634 LDR X0, [X0 + 0xFA0]
	0x01E2F638 BL 0x1C16CF4
	0x01E2F63C ADRP X0, 0x22CB000
	0x01E2F640 LDR X0, [X0 + 0xFA8]
	0x01E2F644 BL 0x1C16CF4
	0x01E2F648 ADRP X0, 0x22CB000
	0x01E2F64C LDR X0, [X0 + 0xFB0]
	0x01E2F650 BL 0x1C16CF4
	0x01E2F654 ADRP X0, 0x22CB000
	0x01E2F658 LDR X0, [X0 + 0xFB8]
	0x01E2F65C BL 0x1C16CF4
	0x01E2F660 ADRP X0, 0x22CB000
	0x01E2F664 LDR X0, [X0 + 0xFC0]
	0x01E2F668 BL 0x1C16CF4
	0x01E2F66C ADRP X0, 0x22CB000
	0x01E2F670 LDR X0, [X0 + 0xFC8]
	0x01E2F674 BL 0x1C16CF4
	0x01E2F678 ADRP X0, 0x22CB000
	0x01E2F67C LDR X0, [X0 + 0xFD0]
	0x01E2F680 BL 0x1C16CF4
	0x01E2F684 ADRP X0, 0x22CB000
	0x01E2F688 LDR X0, [X0 + 0xFD8]
	0x01E2F68C BL 0x1C16CF4
	0x01E2F690 ADRP X0, 0x22CB000
	0x01E2F694 LDR X0, [X0 + 0xFE0]
	0x01E2F698 BL 0x1C16CF4
	0x01E2F69C ADRP X0, 0x22CB000
	0x01E2F6A0 LDR X0, [X0 + 0xFE8]
	0x01E2F6A4 BL 0x1C16CF4
	0x01E2F6A8 ADRP X0, 0x22CB000
	0x01E2F6AC LDR X0, [X0 + 0xFF0]
	0x01E2F6B0 BL 0x1C16CF4
	0x01E2F6B4 ADRP X0, 0x22CB000
	0x01E2F6B8 LDR X0, [X0 + 0xFF8]
	0x01E2F6BC BL 0x1C16CF4
	0x01E2F6C0 ADRP X0, 0x22CC000
	0x01E2F6C4 LDR X0, [X0]
	0x01E2F6C8 BL 0x1C16CF4
	0x01E2F6CC ADRP X0, 0x22CC000
	0x01E2F6D0 LDR X0, [X0 + 0x8]
	0x01E2F6D4 BL 0x1C16CF4
	0x01E2F6D8 ADRP X0, 0x22CC000
	0x01E2F6DC LDR X0, [X0 + 0x10]
	0x01E2F6E0 BL 0x1C16CF4
	0x01E2F6E4 ADRP X0, 0x22CC000
	0x01E2F6E8 LDR X0, [X0 + 0x18]
	0x01E2F6EC BL 0x1C16CF4
	0x01E2F6F0 ADRP X0, 0x22CC000
	0x01E2F6F4 LDR X0, [X0 + 0x20]
	0x01E2F6F8 BL 0x1C16CF4
	0x01E2F6FC ADRP X0, 0x22CC000
	0x01E2F700 LDR X0, [X0 + 0x28]
	0x01E2F704 BL 0x1C16CF4
	0x01E2F708 ADRP X0, 0x22CC000
	0x01E2F70C LDR X0, [X0 + 0x30]
	0x01E2F710 BL 0x1C16CF4
	0x01E2F714 ADRP X0, 0x22CC000
	0x01E2F718 LDR X0, [X0 + 0x38]
	0x01E2F71C BL 0x1C16CF4
	0x01E2F720 ADRP X0, 0x22CC000
	0x01E2F724 LDR X0, [X0 + 0x40]
	0x01E2F728 BL 0x1C16CF4
	0x01E2F72C ADRP X0, 0x22CC000
	0x01E2F730 LDR X0, [X0 + 0x48]
	0x01E2F734 BL 0x1C16CF4
	0x01E2F738 ADRP X0, 0x22CC000
	0x01E2F73C LDR X0, [X0 + 0x50]
	0x01E2F740 BL 0x1C16CF4
	0x01E2F744 ADRP X0, 0x22CC000
	0x01E2F748 LDR X0, [X0 + 0x58]
	0x01E2F74C BL 0x1C16CF4
	0x01E2F750 ADRP X0, 0x22CC000
	0x01E2F754 LDR X0, [X0 + 0x60]
	0x01E2F758 BL 0x1C16CF4
	0x01E2F75C ADRP X0, 0x22CC000
	0x01E2F760 LDR X0, [X0 + 0x68]
	0x01E2F764 BL 0x1C16CF4
	0x01E2F768 ADRP X0, 0x22CC000
	0x01E2F76C LDR X0, [X0 + 0x70]
	0x01E2F770 BL 0x1C16CF4
	0x01E2F774 ADRP X0, 0x22CC000
	0x01E2F778 LDR X0, [X0 + 0x78]
	0x01E2F77C BL 0x1C16CF4
	0x01E2F780 ADRP X0, 0x22CC000
	0x01E2F784 LDR X0, [X0 + 0x80]
	0x01E2F788 BL 0x1C16CF4
	0x01E2F78C ADRP X0, 0x22CC000
	0x01E2F790 LDR X0, [X0 + 0x88]
	0x01E2F794 BL 0x1C16CF4
	0x01E2F798 ADRP X0, 0x22CC000
	0x01E2F79C LDR X0, [X0 + 0x90]
	0x01E2F7A0 BL 0x1C16CF4
	0x01E2F7A4 ADRP X0, 0x22CC000
	0x01E2F7A8 LDR X0, [X0 + 0x98]
	0x01E2F7AC BL 0x1C16CF4
	0x01E2F7B0 ADRP X0, 0x22CC000
	0x01E2F7B4 LDR X0, [X0 + 0xA0]
	0x01E2F7B8 BL 0x1C16CF4
	0x01E2F7BC ADRP X0, 0x22CC000
	0x01E2F7C0 LDR X0, [X0 + 0xA8]
	0x01E2F7C4 BL 0x1C16CF4
	0x01E2F7C8 ADRP X0, 0x22CC000
	0x01E2F7CC LDR X0, [X0 + 0xB0]
	0x01E2F7D0 BL 0x1C16CF4
	0x01E2F7D4 ADRP X0, 0x22CC000
	0x01E2F7D8 LDR X0, [X0 + 0xB8]
	0x01E2F7DC BL 0x1C16CF4
	0x01E2F7E0 ADRP X0, 0x22CC000
	0x01E2F7E4 LDR X0, [X0 + 0xC0]
	0x01E2F7E8 BL 0x1C16CF4
	0x01E2F7EC ADRP X0, 0x22CC000
	0x01E2F7F0 LDR X0, [X0 + 0xC8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x25AA000
	007 Move X22, 0x22CC000
	008 Move X21, 0x22CC000
	009 Move W8, [X20+3726]
	010 Move X22, [X22+3376]
	011 Move X21, [X21+3384]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x22CC000
	018 Move X0, [X0+3384]
	019 Call 0x1C17CF4
	020 Move X0, 0x22CC000
	021 Move X0, [X0+3376]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3726], W8
	025 Move X8, -20189184
	026 Move V0, [X8+2192]
	027 Move W8, 0x3F800000
	028 Move [X19+84], W8
	029 Move [X19+72], D0
	030 Move X0, [X22]
	031 Call 0x1C17F10
	032 Move X1, [X21]
	033 Move X20, X0
	034 Call Queue`1<Object>..ctor, X0
	035 Move [X19+112], X20
	036 Move X0, [X22]
	037 Call 0x1C17F10
	038 Move X1, [X21]
	039 Move X20, X0
	040 Call Queue`1<Object>..ctor, X0
	041 Move [X19+120], X20
	042 Move X0, X19
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X1, X31
	048 Move X30, [X31+48]
	049 Call SimulationBehaviour..ctor, X0
	050 Return 
	051 Move [X31-64], D10
	052 Move [X31+8], D9
	053 Move [X31+16], D8
	054 Move [X31+24], X30
	055 Move [X31+32], X22
	056 Move [X31+40], X21
	057 Move [X31+48], X20
	058 Move [X31+56], X19
	059 Move X19, 0x25AA000
	060 Move W8, [X19+3727]
	061 Move V8, V2
	062 Move V9, V1
	063 Move V10, V0
	064 Compare W8, 0
	065 JumpIfNotEqual {71}
	066 Move X0, 0x22CC000
	067 Move X0, [X0+3176]
	068 Call 0x1C17CF4
	069 Move W8, 1
	070 Move [X19+3727], W8
	071 Move X20, 0x22CC000
	072 Move X20, [X20+3176]
	073 Move X0, [X20]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfEqual {78}
	077 Move W8, W31
	078 Call 0x1C17DFC
	079 Move W8, [X19+3727]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 NotImplemented "Instruction CSET not yet implemented."
	082 Move W9, S10
	083 Move W10, 0x44800000
	084 Move W9, W9
	085 ShiftRight W9, 31
	086 And W9, W9, 0x7FFFFFFF
	087 Move S0, 0.5
	088 Move S1, W10
	089 NotImplemented "Instruction UCVTF not yet implemented."
	090 Move W11, 0x7F800000
	091 Multiply S1, S10, S1
	092 Subtract S0, S0, S2
	093 Move S3, W11
	094 Add S0, S1, S0
	095 NotImplemented "Instruction FCVTZS not yet implemented."
	096 NotImplemented "Instruction FCMP not yet implemented."
	097 Move W10, 0x80000000
	098 NotImplemented "Instruction CSEL not yet implemented."
	099 Compare W8, 0
	100 JumpIfEqual {106}
	101 Move X0, 0x22CC000
	102 Move X0, [X0+3176]
	103 Call 0x1C17CF4
	104 Move W8, 1
	105 Move [X19+3727], W8
	106 Move X0, [X20]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfEqual {111}
	110 Move W8, W31
	111 Call 0x1C17DFC
	112 Move W8, [X19+3727]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 NotImplemented "Instruction CSET not yet implemented."
	115 Move W9, S9
	116 Move W10, 0x44800000
	117 Move W9, W9
	118 ShiftRight W9, 31
	119 And W9, W9, 0x7FFFFFFF
	120 Move S0, 0.5
	121 Move S1, W10
	122 NotImplemented "Instruction UCVTF not yet implemented."
	123 Move W11, 0x7F800000
	124 Multiply S1, S9, S1
	125 Subtract S0, S0, S2
	126 Move S3, W11
	127 Add S0, S1, S0
	128 NotImplemented "Instruction FCVTZS not yet implemented."
	129 NotImplemented "Instruction FCMP not yet implemented."
	130 Move W10, 0x80000000
	131 NotImplemented "Instruction CSEL not yet implemented."
	132 Compare W8, 0
	133 JumpIfEqual {139}
	134 Move X0, 0x22CC000
	135 Move X0, [X0+3176]
	136 Call 0x1C17CF4
	137 Move W8, 1
	138 Move [X19+3727], W8
	139 Move X0, [X20]
	140 Move W8, [X0+224]
	141 Compare W8, 0
	142 JumpIfNotEqual {144}
	143 Call 0x1C17DFC
	144 NotImplemented "Instruction SBFM not yet implemented."
	145 Move W10, S8
	146 Xor W0, W9, W21
	147 Move W9, 0x44800000
	148 Move W10, W10
	149 ShiftRight W10, 31
	150 And W10, W10, 0x7FFFFFFF
	151 Move S0, 0.5
	152 Move S1, W9
	153 NotImplemented "Instruction UCVTF not yet implemented."
	154 Move W9, 0x7F800000
	155 Multiply S1, S8, S1
	156 Subtract S0, S0, S2
	157 NotImplemented "Instruction SBFM not yet implemented."
	158 Move S2, W9
	159 Add S0, S1, S0
	160 Xor W8, W8, W22
	161 Move W10, 0x80000000
	162 NotImplemented "Instruction FCVTZS not yet implemented."
	163 NotImplemented "Instruction FCMP not yet implemented."
	164 Move X20, [X31+48]
	165 Move X19, [X31+56]
	166 Move X22, [X31+32]
	167 Move X21, [X31+40]
	168 Move X30, [X31+24]
	169 Move D9, [X31+8]
	170 Move D8, [X31+16]
	171 NotImplemented "Instruction CSEL not yet implemented."
	172 NotImplemented "Instruction SBFM not yet implemented."
	173 Xor W1, W10, W9
	174 NotImplemented "Instruction BFM not yet implemented."
	175 Move V10, [X31+64]
	176 Return 
	177 Move [X31-48], X30
	178 Move [X31-40], X23
	179 Move [X31+16], X22
	180 Move [X31+24], X21
	181 Move [X31+32], X20
	182 Move [X31+40], X19
	183 Move X21, 0x25AA000
	184 Move W8, [X21+3728]
	185 Move X19, X1
	186 Move X20, X0
	187 Compare W8, 0
	188 JumpIfNotEqual {194}
	189 Move X0, 0x22CC000
	190 Move X0, [X0+3176]
	191 Call 0x1C17CF4
	192 Move W8, 1
	193 Move [X21+3728], W8
	194 Move X22, 0x22CC000
	195 Move X22, [X22+3176]
	196 Move X0, [X22]
	197 Move W8, [X0+224]
	198 Compare W8, 0
	199 JumpIfNotEqual {209}
	200 Call 0x1C17DFC
	201 Move W8, [X21+3728]
	202 Compare W8, 0
	203 JumpIfNotEqual {209}
	204 Move X0, 0x22CC000
	205 Move X0, [X0+3176]
	206 Call 0x1C17CF4
	207 Move W8, 1
	208 Move [X21+3728], W8
	209 Move X0, [X22]
	210 Move X23, X20
	211 ShiftRight X23, 32
	212 And X23, X23, 0x7FFFFFFF
	213 Move W8, [X0+224]
	214 Compare W8, 0
	215 JumpIfNotEqual {225}
	216 Call 0x1C17DFC
	217 Move W8, [X21+3728]
	218 Compare W8, 0
	219 JumpIfNotEqual {225}
	220 Move X0, 0x22CC000
	221 Move X0, [X0+3176]
	222 Call 0x1C17CF4
	223 Move W8, 1
	224 Move [X21+3728], W8
	225 Move X0, [X22]
	226 Move W8, [X0+224]
	227 Compare W8, 0
	228 JumpIfNotEqual {230}
	229 Call 0x1C17DFC
	230 Move W8, 0x3A800000
	231 And W9, W20, 1
	232 And W10, W19, 1
	233 Move S2, W8
	234 And W8, W23, 1
	235 Subtract W9, W31, W9
	236 Subtract W10, W31, W10
	237 Subtract W8, W31, W8
	238 Xor W9, W9, W20
	239 Xor W10, W10, W19
	240 Move X20, [X31+32]
	241 Move X19, [X31+40]
	242 Move X22, [X31+16]
	243 Move X21, [X31+24]
	244 Xor W8, W8, W23
	245 NotImplemented "Instruction SCVTF not yet implemented."
	246 NotImplemented "Instruction SCVTF not yet implemented."
	247 NotImplemented "Instruction SCVTF not yet implemented."
	248 Multiply S1, S0, S2
	249 Multiply S0, S3, S2
	250 Multiply S2, S4, S2
	251 Move X30, [X31+48]
	252 Move X23, [X31+56]
	253 Return 

