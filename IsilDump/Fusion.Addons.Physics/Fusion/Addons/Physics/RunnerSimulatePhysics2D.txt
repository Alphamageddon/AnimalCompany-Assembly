Type: Fusion.Addons.Physics.RunnerSimulatePhysics2D

Method: System.Void OverrideAutoSimulate(System.Boolean set)

Disassembly:
	0x01E2DE48 CSEL X20, X8, X31, EQ
	0x01E2DE4C CBZ W9, 0x1E2DE60
	0x01E2DE50 MOVZ W9, 0x2
	0x01E2DE54 MOV X20, X19
	0x01E2DE58 CBNZ X20, 0x1E2DEA4
	0x01E2DE5C B 0x1E2DF1C
	0x01E2DE60 LDR W9, [X0 + 0x188]
	0x01E2DE64 CMP W9, 0x2
	0x01E2DE68 B.EQ 0x1E2DE80
	0x01E2DE6C MOV X1, X31
	0x01E2DE70 BL 0x1E9E520
	0x01E2DE74 CMP W0, 0x2
	0x01E2DE78 B.NE 0x1E2DE9C
	0x01E2DE7C MOV X8, X20
	0x01E2DE80 LDR W9, [X19 + 0x4C]
	0x01E2DE84 MOV X20, X8
	0x01E2DE88 CMP W9, 0x3
	0x01E2DE8C MOVZ W9, 0x1
	0x01E2DE90 CINC W9, W9, EQ
	0x01E2DE94 CBNZ X20, 0x1E2DEA4
	0x01E2DE98 B 0x1E2DF1C
	0x01E2DE9C MOVZ W9, 0x2
	0x01E2DEA0 CBZ X20, 0x1E2DF1C
	0x01E2DEA4 ADRP X8, 0x22CD000
	0x01E2DEA8 LDR X8, [X8 + 0xCA8]
	0x01E2DEAC STR W9, [X20 + 0x48]
	0x01E2DEB0 LDR X8, [X8]
	0x01E2DEB4 LDR X8, [X8 + 0xB8]
	0x01E2DEB8 LDR W9, [X8 + 0x4]
	0x01E2DEBC ADD W10, W9, 0x1
	0x01E2DEC0 STR W10, [X8 + 0x4]
	0x01E2DEC4 CBNZ W9, 0x1E2DEE8
	0x01E2DEC8 LDR X8, [X19]
	0x01E2DECC LDR W9, [X19 + 0x48]
	0x01E2DED0 MOV X0, X19
	0x01E2DED4 LDR X10, [X8 + 0x218]
	0x01E2DED8 LDR X2, [X8 + 0x220]
	0x01E2DEDC CMP W9, 0x1
	0x01E2DEE0 CSET W1, EQ
	0x01E2DEE4 BLR X10
	0x01E2DEE8 LDRB W8, [X19 + 0x58]
	0x01E2DEEC CBZ W8, 0x1E2DF08
	0x01E2DEF0 LDR X0, [X19 + 0x38]
	0x01E2DEF4 CBZ X0, 0x1E2DF1C
	0x01E2DEF8 MOV X1, X31
	0x01E2DEFC BL 0x1E9E550
	0x01E2DF00 MOV X0, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x25AC000
	007 Move X21, 0x22CE000
	008 Move W8, [X22+3699]
	009 Move X21, [X21+3168]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x22CE000
	017 Move X0, [X0+3168]
	018 Call 0x1C17CF4
	019 Move X0, 0x22CE000
	020 Move X0, [X0+3240]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3699], W8
	024 Move X0, [X21]
	025 Move X22, 0x22CE000
	026 Move W8, [X0+224]
	027 Move X22, [X22+3240]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X31
	032 Call Physics2D.get_simulationMode
	033 Move X8, [X22]
	034 Move X8, [X8+184]
	035 Move [X8], W0
	036 Move TEMP, X20
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {46}
	040 Move X0, [X21]
	041 Move W19, [X19+76]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {52}
	045 Call 0x1C17DFC
	046 Move X0, [X21]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move W19, 2
	052 Move W0, W19
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X1, X31
	058 Move X30, [X31+48]
	059 Call Physics2D.set_simulationMode, X0
	060 Return 

Method: System.Void RestoreAutoSimulate()

Disassembly:
	0x01E2DF04 BL 0x3C3C804
	0x01E2DF08 MOVZ W8, 0x1
	0x01E2DF0C STRB W8, [X19 + 0x81]
	0x01E2DF10 LDP X20, X19, [X31 + 0x10]
	0x01E2DF14 LDR X30, [X31], #0x20
	0x01E2DF18 RET
	0x01E2DF1C BL 0x1C16F20
	0x01E2DF20 STR X30, [X31 - 0x20]!
	0x01E2DF24 STP X20, X19, [X31 + 0x10]
	0x01E2DF28 ADRP X20, 0x25AB000
	0x01E2DF2C LDRB W8, [X20 + 0xE8A]
	0x01E2DF30 MOV X19, X0
	0x01E2DF34 TBNZ X8, 0x0, 0x1E2DF4C
	0x01E2DF38 ADRP X0, 0x22CD000
	0x01E2DF3C LDR X0, [X0 + 0xCA8]
	0x01E2DF40 BL 0x1C16CF4
	0x01E2DF44 MOVZ W8, 0x1
	0x01E2DF48 STRB W8, [X20 + 0xE8A]
	0x01E2DF4C LDRB W8, [X19 + 0x81]
	0x01E2DF50 CBZ W8, 0x1E2DFA0
	0x01E2DF54 ADRP X8, 0x22CD000
	0x01E2DF58 LDR X8, [X8 + 0xCA8]
	0x01E2DF5C STRB W31, [X19 + 0x81]
	0x01E2DF60 LDR X8, [X8]
	0x01E2DF64 LDR X8, [X8 + 0xB8]
	0x01E2DF68 LDR W9, [X8 + 0x4]
	0x01E2DF6C SUBS W9, W9, 0x1
	0x01E2DF70 STR W9, [X8 + 0x4]
	0x01E2DF74 B.NE 0x1E2DFA0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x25AC000
	006 Move X21, 0x22CE000
	007 Move X19, 0x22CE000
	008 Move W8, [X20+3700]
	009 Move X21, [X21+3240]
	010 Move X19, [X19+3168]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x22CE000
	016 Move X0, [X0+3168]
	017 Call 0x1C17CF4
	018 Move X0, 0x22CE000
	019 Move X0, [X0+3240]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3700], W8
	023 Move X8, [X21]
	024 Move X0, [X19]
	025 Move X8, [X8+184]
	026 Move W9, [X0+224]
	027 Move W19, [X8]
	028 Compare W9, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move W0, W19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X1, X31
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Call Physics2D.set_simulationMode, X0
	038 Return 

Method: System.Boolean get_AutoSyncTransforms()

Disassembly:
	0x01E2DF78 LDR W8, [X19 + 0x48]
	0x01E2DF7C CMP W8, 0x2
	0x01E2DF80 B.NE 0x1E2DFA0
	0x01E2DF84 LDR X8, [X19]
	0x01E2DF88 MOV X0, X19
	0x01E2DF8C LDP X20, X19, [X31 + 0x10]
	0x01E2DF90 LDR X2, [X8 + 0x228]
	0x01E2DF94 LDR X1, [X8 + 0x230]
	0x01E2DF98 LDR X30, [X31], #0x20
	0x01E2DF9C BR X2
	0x01E2DFA0 LDP X20, X19, [X31 + 0x10]
	0x01E2DFA4 LDR X30, [X31], #0x20
	0x01E2DFA8 RET
	0x01E2DFAC STP X30, X19, [X31 - 0x10]!
	0x01E2DFB0 LDRB W8, [X0 + 0x81]
	0x01E2DFB4 CBZ W8, 0x1E2E004
	0x01E2DFB8 LDR W8, [X0 + 0x4C]
	0x01E2DFBC MOV X19, X0
	0x01E2DFC0 CMP W8, 0x1
	0x01E2DFC4 B.NE 0x1E2E004

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x25AC000
	005 Move X20, 0x22CE000
	006 Move W8, [X19+3701]
	007 Move X20, [X20+3168]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22CE000
	013 Move X0, [X0+3168]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3701], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X0, X31
	025 Move X30, [X31+32]
	026 Call Physics2D.get_autoSyncTransforms
	027 Return X0

Method: System.Void set_AutoSyncTransforms(System.Boolean value)

Disassembly:
	0x01E2DFC8 LDR X8, [X19]
	0x01E2DFCC MOV X0, X19
	0x01E2DFD0 LDR X9, [X8 + 0x208]
	0x01E2DFD4 LDR X1, [X8 + 0x210]
	0x01E2DFD8 BLR X9
	0x01E2DFDC CMP W0, 0x2
	0x01E2DFE0 B.NE 0x1E2E004
	0x01E2DFE4 MOV X0, X31
	0x01E2DFE8 BL 0x3C3C714
	0x01E2DFEC LDR V1, [X19 + 0x54]
	0x01E2DFF0 MOV X0, X19
	0x01E2DFF4 MOV W1, W31
	0x01E2DFF8 FMUL S0, S0, S1
	0x01E2DFFC LDP X30, X19, [X31], #0x10
	0x01E2E000 B 0x1E2E00C
	0x01E2E004 LDP X30, X19, [X31], #0x10
	0x01E2E008 RET
	0x01E2E00C STR D8, [X31 - 0x30]!
	0x01E2E010 STP X30, X21, [X31 + 0x10]
	0x01E2E014 STP X20, X19, [X31 + 0x20]
	0x01E2E018 ADRP X21, 0x25AA000
	0x01E2E01C LDRB W8, [X21 + 0xE8C]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x25AC000
	006 Move X21, 0x22CE000
	007 Move W8, [X20+3702]
	008 Move X21, [X21+3168]
	009 Move W19, W1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22CE000
	015 Move X0, [X0+3168]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3702], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 And W0, W19, 1
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Physics2D.set_autoSyncTransforms, X0
	031 Return 

Method: Fusion.Addons.Physics.PhysicsTimings get_UnityPhysicsMode()

Disassembly:
	0x01E2E020 MOV W19, W1
	0x01E2E024 MOV V8.16B, V0.16B
	0x01E2E028 MOV X20, X0
	0x01E2E02C TBNZ X8, 0x0, 0x1E2E044
	0x01E2E030 ADRP X0, 0x22C5000
	0x01E2E034 LDR X0, [X0 + 0x5F8]
	0x01E2E038 BL 0x1C16CF4
	0x01E2E03C MOVZ W8, 0x1
	0x01E2E040 STRB W8, [X21 + 0xE8C]
	0x01E2E044 LDR V0, [X20 + 0x54]
	0x01E2E048 FCMP S0, 0x0
	0x01E2E04C B.LS 0x1E2E0A4
	0x01E2E050 TBZ X19, 0x0, 0x1E2E064
	0x01E2E054 LDR W1, [X20 + 0x50]
	0x01E2E058 MOV X0, X20
	0x01E2E05C BL 0x1E2D3C0
	0x01E2E060 TBZ X0, 0x0, 0x1E2E0B4
	0x01E2E064 LDR X8, [X20]
	0x01E2E068 MOV X0, X20
	0x01E2E06C MOV V0.16B, V8.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x25AB000
	005 Move X20, 0x22CD000
	006 Move W8, [X19+3703]
	007 Move X20, [X20+3168]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22CD000
	013 Move X0, [X0+3168]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3703], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X0, X31
	025 Move X30, [X31+32]
	026 Call Physics2D.get_simulationMode
	027 Return X0

Method: System.Void SimulatePrimaryScene(System.Single deltaTime)

Disassembly:
	0x01E2E070 LDR X9, [X8 + 0x278]
	0x01E2E074 LDR X1, [X8 + 0x280]
	0x01E2E078 BLR X9
	0x01E2E07C LDR X8, [X20]
	0x01E2E080 AND W1, W19, 0x1
	0x01E2E084 MOV X0, X20
	0x01E2E088 LDP X20, X19, [X31 + 0x20]
	0x01E2E08C LDR X3, [X8 + 0x248]
	0x01E2E090 LDR X2, [X8 + 0x250]
	0x01E2E094 LDP X30, X21, [X31 + 0x10]
	0x01E2E098 MOV V0.16B, V8.16B
	0x01E2E09C LDR V8, [X31], #0x30
	0x01E2E0A0 BR X3
	0x01E2E0A4 LDP X20, X19, [X31 + 0x20]
	0x01E2E0A8 LDP X30, X21, [X31 + 0x10]
	0x01E2E0AC LDR V8, [X31], #0x30
	0x01E2E0B0 RET
	0x01E2E0B4 LDR W1, [X20 + 0x50]
	0x01E2E0B8 MOV X0, X20
	0x01E2E0BC BL 0x1E2E30C
	0x01E2E0C0 TBNZ X0, 0x0, 0x1E2E0DC
	0x01E2E0C4 LDR X8, [X20]
	0x01E2E0C8 MOV X0, X20
	0x01E2E0CC LDR X9, [X8 + 0x288]
	0x01E2E0D0 LDR X1, [X8 + 0x290]
	0x01E2E0D4 BLR X9
	0x01E2E0D8 TBZ X0, 0x0, 0x1E2E07C
	0x01E2E0DC ADRP X8, 0x22C5000
	0x01E2E0E0 LDR X8, [X8 + 0x5F8]
	0x01E2E0E4 LDR X0, [X8]
	0x01E2E0E8 LDR W8, [X0 + 0xE0]
	0x01E2E0EC CBNZ W8, 0x1E2E0F4
	0x01E2E0F0 BL 0x1C16DFC
	0x01E2E0F4 MOV X0, X31
	0x01E2E0F8 BL 0x3C8D368
	0x01E2E0FC B 0x1E2E07C
	0x01E2E100 STP X30, X21, [X31 - 0x20]!
	0x01E2E104 STP X20, X19, [X31 + 0x10]
	0x01E2E108 ADRP X20, 0x25AA000
	0x01E2E10C ADRP X21, 0x22C8000
	0x01E2E110 LDRB W8, [X20 + 0xE8B]
	0x01E2E114 LDR X21, [X21 + 0xA78]
	0x01E2E118 MOV X19, X0
	0x01E2E11C TBNZ X8, 0x0, 0x1E2E134
	0x01E2E120 ADRP X0, 0x22C8000
	0x01E2E124 LDR X0, [X0 + 0xA78]
	0x01E2E128 BL 0x1C16CF4
	0x01E2E12C MOVZ W8, 0x1
	0x01E2E130 STRB W8, [X20 + 0xE8B]
	0x01E2E134 LDR X0, [X21]
	0x01E2E138 LDR W8, [X0 + 0xE0]
	0x01E2E13C CBNZ W8, 0x1E2E144
	0x01E2E140 BL 0x1C16DFC
	0x01E2E144 CBZ X19, 0x1E2E170
	0x01E2E148 LDR W8, [X19 + 0x30]
	0x01E2E14C LDR X9, [X19]
	0x01E2E150 MOV X0, X19
	0x01E2E154 ORR W8, W8, 0x8
	0x01E2E158 STR W8, [X19 + 0x30]
	0x01E2E15C LDR X2, [X9 + 0x268]
	0x01E2E160 LDR X1, [X9 + 0x270]
	0x01E2E164 LDP X20, X19, [X31 + 0x10]
	0x01E2E168 LDP X30, X21, [X31], #0x20
	0x01E2E16C BR X2
	0x01E2E170 BL 0x1C16F20
	0x01E2E174 STP X30, X19, [X31 - 0x10]!
	0x01E2E178 LDRB W8, [X0 + 0x81]
	0x01E2E17C CBZ W8, 0x1E2E1E8
	0x01E2E180 LDR W8, [X0 + 0x4C]
	0x01E2E184 MOV X19, X0
	0x01E2E188 CBNZ W8, 0x1E2E1E8
	0x01E2E18C LDRB W8, [X19 + 0x58]
	0x01E2E190 CBZ W8, 0x1E2E1AC

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x25AB000
	007 Move W8, [X20+3704]
	008 Move V8, V0
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x22CD000
	015 Move X0, [X0+3248]
	016 Call 0x1C17CF4
	017 Move X0, 0x22CD000
	018 Move X0, [X0+3168]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3704], W8
	022 Move [X31+8], W31
	023 Move X8, [X19+56]
	024 Compare X8, 0
	025 JumpIfEqual {85}
	026 Move X19, [X8+256]
	027 Compare X19, 0
	028 JumpIfEqual {85}
	029 Move X10, 0x22CD000
	030 Move X8, [X19]
	031 Move X10, [X10+3248]
	032 NotImplemented "Instruction LDRH not yet implemented."
	033 Move X1, [X10]
	034 Compare X9, 0
	035 JumpIfEqual {42}
	036 Move X10, [X8+176]
	037 Add X10, X10, 8
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Subtract X9, X9, 1
	041 Add X10, X10, 16
	042 Move W2, 5
	043 Move X0, X19
	044 Call 0x1C5D788
	045 Move W9, [X10]
	046 Add W9, W9, 5
	047 Add X8, X8, W9
	048 Add X0, X8, 312
	049 Move X8, [X0]
	050 Move X2, [X0+8]
	051 Add X1, X31, 8
	052 Move X0, X19
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {79}
	058 Add X0, X31, 8
	059 Move X1, X31
	060 Call PhysicsScene2D.IsValid, X0
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {69}
	065 Add X0, X31, 8
	066 Move V0, V8
	067 Move X1, X31
	068 Call PhysicsScene2D.Simulate, X0, V0
	069 Move X8, 0x22CD000
	070 Move X8, [X8+3168]
	071 Move X0, [X8]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move V0, V8
	077 Move X0, X31
	078 Call Physics2D.Simulate, V0
	079 Move X20, [X31+32]
	080 Move X19, [X31+40]
	081 Move X30, [X31+24]
	082 Move V8, [X31+16]
	083 Add X31, X31, 48
	084 Return 
	085 Call 0x1C17F20

Method: System.Void SimulateAdditionalScenes(System.Single deltaTime, System.Boolean checkPhysicsSimulation)

Disassembly:
	0x01E2E194 LDR X0, [X19 + 0x38]
	0x01E2E198 CBZ X0, 0x1E2E1F0
	0x01E2E19C MOV X1, X31
	0x01E2E1A0 BL 0x1E9E550
	0x01E2E1A4 MOV X0, X31
	0x01E2E1A8 BL 0x3C3C804
	0x01E2E1AC LDR X8, [X19]
	0x01E2E1B0 MOV X0, X19
	0x01E2E1B4 LDR X9, [X8 + 0x208]
	0x01E2E1B8 LDR X1, [X8 + 0x210]
	0x01E2E1BC BLR X9
	0x01E2E1C0 CMP W0, 0x2
	0x01E2E1C4 B.NE 0x1E2E1E8
	0x01E2E1C8 MOV X0, X31
	0x01E2E1CC BL 0x3C3C7DC
	0x01E2E1D0 LDR V1, [X19 + 0x54]
	0x01E2E1D4 MOV X0, X19
	0x01E2E1D8 MOV W1, W31
	0x01E2E1DC FMUL S0, S0, S1
	0x01E2E1E0 LDP X30, X19, [X31], #0x10
	0x01E2E1E4 B 0x1E2E00C
	0x01E2E1E8 LDP X30, X19, [X31], #0x10
	0x01E2E1EC RET
	0x01E2E1F0 BL 0x1C16F20
	0x01E2E1F4 SUB X31, X31, 0x20
	0x01E2E1F8 STP X30, X19, [X31 + 0x10]
	0x01E2E1FC STR W31, [X31 + 0x8]
	0x01E2E200 LDRB W8, [X0 + 0x81]
	0x01E2E204 MOV X19, X0
	0x01E2E208 CBNZ W8, 0x1E2E220
	0x01E2E20C LDR X8, [X19]
	0x01E2E210 MOV X0, X19
	0x01E2E214 LDR X9, [X8 + 0x258]
	0x01E2E218 LDR X1, [X8 + 0x260]
	0x01E2E21C BLR X9
	0x01E2E220 LDR X0, [X19 + 0x38]
	0x01E2E224 CBZ X0, 0x1E2E308
	0x01E2E228 MOV X1, X31
	0x01E2E22C BL 0x1E9E7E0
	0x01E2E230 TBZ X0, 0x0, 0x1E2E24C
	0x01E2E234 LDR X8, [X19]
	0x01E2E238 MOV X0, X19
	0x01E2E23C LDR X9, [X8 + 0x268]
	0x01E2E240 LDR X1, [X8 + 0x270]
	0x01E2E244 BLR X9
	0x01E2E248 B 0x1E2E2FC
	0x01E2E24C LDR X0, [X19 + 0x38]
	0x01E2E250 CBZ X0, 0x1E2E308
	0x01E2E254 ADD X1, X31, 0x8
	0x01E2E258 MOV X2, X31
	0x01E2E25C BL 0x1EA7164
	0x01E2E260 TBZ X0, 0x0, 0x1E2E2B0
	0x01E2E264 LDR X0, [X19 + 0x38]
	0x01E2E268 CBZ X0, 0x1E2E308
	0x01E2E26C MOV X1, X31
	0x01E2E270 BL 0x1E9DEF4
	0x01E2E274 TBNZ X0, 0x0, 0x1E2E28C
	0x01E2E278 LDR X0, [X19 + 0x38]
	0x01E2E27C CBZ X0, 0x1E2E308
	0x01E2E280 MOV X1, X31
	0x01E2E284 BL 0x1EA27F0
	0x01E2E288 TBZ X0, 0x0, 0x1E2E2A8
	0x01E2E28C LDR V0, [X19 + 0x54]
	0x01E2E290 STR S0, [X31 + 0x8]
	0x01E2E294 LDR X0, [X19 + 0x38]
	0x01E2E298 CBZ X0, 0x1E2E308
	0x01E2E29C MOV X1, X31
	0x01E2E2A0 BL 0x1EA721C
	0x01E2E2A4 B 0x1E2E2B0
	0x01E2E2A8 LDR V0, [X31 + 0x8]
	0x01E2E2AC STR S0, [X19 + 0x54]
	0x01E2E2B0 LDR W8, [X19 + 0x4C]
	0x01E2E2B4 CMP W8, 0x3
	0x01E2E2B8 B.NE 0x1E2E2FC
	0x01E2E2BC LDR X8, [X19]
	0x01E2E2C0 MOV X0, X19
	0x01E2E2C4 LDR X9, [X8 + 0x208]
	0x01E2E2C8 LDR X1, [X8 + 0x210]
	0x01E2E2CC BLR X9
	0x01E2E2D0 CMP W0, 0x2
	0x01E2E2D4 B.NE 0x1E2E2FC
	0x01E2E2D8 LDR X8, [X19]
	0x01E2E2DC MOV X0, X19
	0x01E2E2E0 LDP X9, X1, [X8 + 0x1D8]
	0x01E2E2E4 BLR X9
	0x01E2E2E8 LDR V1, [X19 + 0x54]
	0x01E2E2EC MOVZ W1, 0x1
	0x01E2E2F0 MOV X0, X19
	0x01E2E2F4 FMUL S0, S0, S1
	0x01E2E2F8 BL 0x1E2E00C
	0x01E2E2FC LDP X30, X19, [X31 + 0x10]
	0x01E2E300 ADD X31, X31, 0x20
	0x01E2E304 RET
	0x01E2E308 BL 0x1C16F20
	0x01E2E30C STR X30, [X31 - 0x10]!
	0x01E2E310 CMP W1, 0x1
	0x01E2E314 B.EQ 0x1E2E338
	0x01E2E318 CMP W1, 0x2
	0x01E2E31C B.NE 0x1E2E340
	0x01E2E320 LDR X0, [X0 + 0x38]
	0x01E2E324 CBZ X0, 0x1E2E350
	0x01E2E328 MOV X1, X31
	0x01E2E32C BL 0x1E9E99C
	0x01E2E330 EOR W8, W0, 0x1
	0x01E2E334 B 0x1E2E344
	0x01E2E338 MOVZ W8, 0x1
	0x01E2E33C B 0x1E2E344
	0x01E2E340 MOV W8, W31
	0x01E2E344 AND W0, W8, 0x1
	0x01E2E348 LDR X30, [X31], #0x10
	0x01E2E34C RET
	0x01E2E350 BL 0x1C16F20
	0x01E2E354 STRB W31, [X0 + 0x80]
	0x01E2E358 RET
	0x01E2E35C STR D8, [X31 - 0x20]!
	0x01E2E360 STR X30, [X31 + 0x8]
	0x01E2E364 STP X20, X19, [X31 + 0x10]
	0x01E2E368 ADRP X20, 0x25AA000
	0x01E2E36C LDRB W8, [X20 + 0xE8D]
	0x01E2E370 MOV V8.16B, V0.16B
	0x01E2E374 MOV X19, X0
	0x01E2E378 TBNZ X8, 0x0, 0x1E2E39C
	0x01E2E37C ADRP X0, 0x22CC000
	0x01E2E380 LDR X0, [X0 + 0xD20]
	0x01E2E384 BL 0x1C16CF4
	0x01E2E388 ADRP X0, 0x22CC000
	0x01E2E38C LDR X0, [X0 + 0xD28]
	0x01E2E390 BL 0x1C16CF4
	0x01E2E394 MOVZ W8, 0x1
	0x01E2E398 STRB W8, [X20 + 0xE8D]
	0x01E2E39C LDR X0, [X19 + 0x78]
	0x01E2E3A0 CBZ X0, 0x1E2E458
	0x01E2E3A4 ADRP X20, 0x22CC000
	0x01E2E3A8 LDR X20, [X20 + 0xD20]
	0x01E2E3AC LDR W8, [X0 + 0x20]
	0x01E2E3B0 CMP W8, 0x0
	0x01E2E3B4 B.LE 0x1E2E3E4
	0x01E2E3B8 LDR X1, [X20]
	0x01E2E3BC BL 0x24F18D4

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], D8
	003 Move [X31+72], X30
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X21, 0x25AB000
	011 Move W8, [X21+3705]
	012 Move W19, W1
	013 Move V8, V0
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0x22CD000
	020 Move X0, [X0+3256]
	021 Call 0x1C17CF4
	022 Move X0, 0x22CD000
	023 Move X0, [X0+3264]
	024 Call 0x1C17CF4
	025 Move X0, 0x22CD000
	026 Move X0, [X0+3272]
	027 Call 0x1C17CF4
	028 Move X0, 0x22CD000
	029 Move X0, [X0+3280]
	030 Call 0x1C17CF4
	031 Move X0, 0x22CD000
	032 Move X0, [X0+3288]
	033 Call 0x1C17CF4
	034 Move X0, 0x22CD000
	035 Move X0, [X0+3168]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+3705], W8
	039 Move [X31+32], X31
	040 Move [X31+40], X31
	041 Move [X31+48], X31
	042 Move [X31+24], W31
	043 Move X8, [X20+136]
	044 Compare X8, 0
	045 JumpIfEqual {122}
	046 Move W8, [X8+24]
	047 Compare W8, 0
	048 JumpIfEqual {122}
	049 Move X22, 0x22CD000
	050 Move X22, [X22+3168]
	051 Move X0, [X22]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X31
	057 Call Physics2D.get_defaultPhysicsScene
	058 Move X9, [X20+136]
	059 Compare X9, 0
	060 JumpIfEqual {132}
	061 Move X8, 0x22CD000
	062 Move X8, [X8+3280]
	063 Move X21, X0
	064 Move X0, X9
	065 Move X1, [X8]
	066 Add X8, X31, 0
	067 Call List`1<AdditionalScene<PhysicsScene2D>>.GetEnumerator, X0
	068 Move V0, [X31]
	069 Move X8, [X31+16]
	070 Move X23, 0x22CD000
	071 And X21, X21, 0
	072 Move [X31+2], V0
	073 Move [X31+48], X8
	074 Move X23, [X23+3264]
	075 Move X1, [X23]
	076 Add X0, X31, 32
	077 Call Enumerator<AdditionalScene<PhysicsScene2D>>.MoveNext, X0
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {117}
	082 Move X24, [X31+48]
	083 Move TEMP, X19
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {96}
	087 Move X1, X24
	088 ShiftRight X1, 32
	089 And X1, X1, 0x7FFFFFFF
	090 Move X0, X20
	091 Call RunnerSimulatePhysicsBase.CanSimulatePhysics, X0, X1
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {75}
	096 And X0, X24, 0
	097 Move X1, X21
	098 Move X2, X31
	099 Call PhysicsScene2D.op_Inequality, X0, X1
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {112}
	104 Move X0, [X22]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Move X0, X31
	110 Call Physics2D.get_simulationMode
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move [X31+24], W24
	113 Add X0, X31, 24
	114 Move V0, V8
	115 Move X1, X31
	116 Call PhysicsScene2D.Simulate, X0, V0
	117 Move X8, 0x22CD000
	118 Move X8, [X8+3256]
	119 Add X0, X31, 32
	120 Move X1, [X8]
	121 Call Enumerator<AdditionalScene<PhysicsScene2D>>.Dispose, X0
	122 Move X20, [X31+112]
	123 Move X19, [X31+120]
	124 Move X22, [X31+96]
	125 Move X21, [X31+104]
	126 Move X24, [X31+80]
	127 Move X23, [X31+88]
	128 Move X30, [X31+72]
	129 Move V8, [X31+64]
	130 Add X31, X31, 128
	131 Return 
	132 Call 0x1C17F20
	133 Move X19, X0
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X0, X19
	136 Call 0x3EB2AD0
	137 Move X20, [X0]
	138 Call 0x3EB2AE0
	139 Move X8, 0x22CD000
	140 Move X8, [X8+3256]
	141 Add X0, X31, 32
	142 Move X1, [X8]
	143 Call Enumerator<AdditionalScene<PhysicsScene2D>>.Dispose, X0
	144 Compare X20, 0
	145 JumpIfEqual {122}
	146 Move X0, X20
	147 Call 0x1C17F18
	148 Move X20, X31
	149 Move X19, X0
	150 Move X8, 0x22CD000
	151 Move X8, [X8+3256]
	152 Move X1, [X8]
	153 Add X0, X31, 32
	154 Call Enumerator<AdditionalScene<PhysicsScene2D>>.Dispose, X0
	155 Compare X20, 0
	156 JumpIfNotEqual {159}
	157 Move X0, X19
	158 Call 0x1D2D690
	159 Move X0, X20
	160 Call 0x1C17F18
	161 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x01E2E428 CMP W8, 0x0
	0x01E2E42C B.LE 0x1E2E45C
	0x01E2E430 LDR X1, [X20]
	0x01E2E434 BL 0x24F18D4
	0x01E2E438 CBZ X0, 0x1E2E458
	0x01E2E43C LDR X8, [X0 + 0x40]
	0x01E2E440 LDR X9, [X0 + 0x18]
	0x01E2E444 LDR X1, [X0 + 0x28]
	0x01E2E448 MOV X0, X8
	0x01E2E44C BLR X9
	0x01E2E450 LDR X0, [X19 + 0x70]
	0x01E2E454 CBNZ X0, 0x1E2E424
	0x01E2E458 BL 0x1C16F20
	0x01E2E45C LDR X8, [X19 + 0x68]
	0x01E2E460 CBZ X8, 0x1E2E480
	0x01E2E464 LDR X2, [X8 + 0x18]
	0x01E2E468 LDR X0, [X8 + 0x40]
	0x01E2E46C LDR X1, [X8 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x25AB000
	006 Move X21, 0x22CD000
	007 Move W8, [X20+3706]
	008 Move X21, [X21+3296]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22CD000
	015 Move X0, [X0+3296]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3706], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call RunnerSimulatePhysicsBase`1<PhysicsScene2D>..ctor, X0
	026 Return 

