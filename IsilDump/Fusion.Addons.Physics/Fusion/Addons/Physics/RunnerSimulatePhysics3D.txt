Type: Fusion.Addons.Physics.RunnerSimulatePhysics3D

Method: Fusion.Addons.Physics.PhysicsTimings get_UnityPhysicsMode()

Disassembly:
	0x01E2E470 LDP X20, X19, [X31 + 0x10]
	0x01E2E474 LDR X30, [X31 + 0x8]
	0x01E2E478 LDR V8, [X31], #0x20
	0x01E2E47C BR X2
	0x01E2E480 LDP X20, X19, [X31 + 0x10]
	0x01E2E484 LDR X30, [X31 + 0x8]
	0x01E2E488 LDR V8, [X31], #0x20
	0x01E2E48C RET
	0x01E2E490 MOV W0, W31
	0x01E2E494 RET
	0x01E2E498 STR X30, [X31 - 0x30]!
	0x01E2E49C STP X22, X21, [X31 + 0x10]
	0x01E2E4A0 STP X20, X19, [X31 + 0x20]
	0x01E2E4A4 ADRP X20, 0x25AA000
	0x01E2E4A8 ADRP X22, 0x22CC000
	0x01E2E4AC ADRP X21, 0x22CC000
	0x01E2E4B0 LDRB W8, [X20 + 0xE8E]
	0x01E2E4B4 LDR X22, [X22 + 0xD30]
	0x01E2E4B8 LDR X21, [X21 + 0xD38]
	0x01E2E4BC MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x25AB000
	005 Move X20, 0x22C6000
	006 Move W8, [X19+3707]
	007 Move X20, [X20+1528]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C6000
	013 Move X0, [X0+1528]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3707], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X0, X31
	025 Move X30, [X31+32]
	026 Call Physics.get_simulationMode
	027 Return X0

Method: System.Void OverrideAutoSimulate(System.Boolean set)

Disassembly:
	0x01E2E4C0 TBNZ X8, 0x0, 0x1E2E4E4
	0x01E2E4C4 ADRP X0, 0x22CC000
	0x01E2E4C8 LDR X0, [X0 + 0xD38]
	0x01E2E4CC BL 0x1C16CF4
	0x01E2E4D0 ADRP X0, 0x22CC000
	0x01E2E4D4 LDR X0, [X0 + 0xD30]
	0x01E2E4D8 BL 0x1C16CF4
	0x01E2E4DC MOVZ W8, 0x1
	0x01E2E4E0 STRB W8, [X20 + 0xE8E]
	0x01E2E4E4 ADRP X8, 0xFFFFFFFFFECBF000
	0x01E2E4E8 LDR V0, [X8 + 0x890]
	0x01E2E4EC MOVZ W8, 0x3F800000
	0x01E2E4F0 STR W8, [X19 + 0x54]
	0x01E2E4F4 STR D0, [X19 + 0x48]
	0x01E2E4F8 LDR X0, [X22]
	0x01E2E4FC BL 0x1C16F10
	0x01E2E500 LDR X1, [X21]
	0x01E2E504 MOV X20, X0
	0x01E2E508 BL 0x24F1248
	0x01E2E50C STR X20, [X19 + 0x70]
	0x01E2E510 LDR X0, [X22]
	0x01E2E514 BL 0x1C16F10
	0x01E2E518 LDR X1, [X21]
	0x01E2E51C MOV X20, X0
	0x01E2E520 BL 0x24F1248
	0x01E2E524 STR X20, [X19 + 0x78]
	0x01E2E528 MOV X0, X19
	0x01E2E52C LDP X20, X19, [X31 + 0x20]
	0x01E2E530 LDP X22, X21, [X31 + 0x10]
	0x01E2E534 MOV X1, X31
	0x01E2E538 LDR X30, [X31], #0x30
	0x01E2E53C B 0x1E74F1C
	0x01E2E540 STR D10, [X31 - 0x40]!
	0x01E2E544 STP D9, D8, [X31 + 0x8]
	0x01E2E548 STR X30, [X31 + 0x18]
	0x01E2E54C STP X22, X21, [X31 + 0x20]
	0x01E2E550 STP X20, X19, [X31 + 0x30]
	0x01E2E554 ADRP X19, 0x25AA000
	0x01E2E558 LDRB W8, [X19 + 0xE8F]
	0x01E2E55C MOV V8.16B, V2.16B
	0x01E2E560 MOV V9.16B, V1.16B
	0x01E2E564 MOV V10.16B, V0.16B
	0x01E2E568 CBNZ W8, 0x1E2E580
	0x01E2E56C ADRP X0, 0x22CC000
	0x01E2E570 LDR X0, [X0 + 0xC68]
	0x01E2E574 BL 0x1C16CF4
	0x01E2E578 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x25AB000
	007 Move X21, 0x22C6000
	008 Move W8, [X22+3708]
	009 Move X21, [X21+1528]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x22C6000
	017 Move X0, [X0+1528]
	018 Call 0x1C17CF4
	019 Move X0, 0x22CD000
	020 Move X0, [X0+3240]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3708], W8
	024 Move X0, [X21]
	025 Move X22, 0x22CD000
	026 Move W8, [X0+224]
	027 Move X22, [X22+3240]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X31
	032 Call Physics.get_simulationMode
	033 Move X8, [X22]
	034 Move X8, [X8+184]
	035 Move [X8], W0
	036 Move TEMP, X20
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {46}
	040 Move X0, [X21]
	041 Move W19, [X19+76]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {52}
	045 Call 0x1C17DFC
	046 Move X0, [X21]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move W19, 2
	052 Move W0, W19
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X1, X31
	058 Move X30, [X31+48]
	059 Call Physics.set_simulationMode, X0
	060 Return 

Method: System.Void RestoreAutoSimulate()

Disassembly:
	0x01E2E57C STRB W8, [X19 + 0xE8F]
	0x01E2E580 ADRP X20, 0x22CC000
	0x01E2E584 LDR X20, [X20 + 0xC68]
	0x01E2E588 LDR X0, [X20]
	0x01E2E58C LDR W8, [X0 + 0xE0]
	0x01E2E590 CBZ W8, 0x1E2E59C
	0x01E2E594 MOV W8, W31
	0x01E2E598 B 0x1E2E5AC
	0x01E2E59C BL 0x1C16DFC
	0x01E2E5A0 LDRB W8, [X19 + 0xE8F]
	0x01E2E5A4 CMP W8, 0x0
	0x01E2E5A8 CSET W8, EQ
	0x01E2E5AC FMOV W9, S10
	0x01E2E5B0 MOVZ W10, 0x44800000
	0x01E2E5B4 UBFM W9, W9, 0x1F, 0x1F
	0x01E2E5B8 FMOV S0, 0.5
	0x01E2E5BC FMOV S1, W10
	0x01E2E5C0 UCVTF S2, W9
	0x01E2E5C4 MOVZ W11, 0x7F800000
	0x01E2E5C8 FMUL S1, S10, S1
	0x01E2E5CC FSUB S0, S0, S2
	0x01E2E5D0 FMOV S3, W11
	0x01E2E5D4 FADD S0, S1, S0
	0x01E2E5D8 FCVTZS W9, S0
	0x01E2E5DC FCMP S0, S3
	0x01E2E5E0 MOVZ W10, 0x80000000
	0x01E2E5E4 CSEL W21, W10, W9, EQ
	0x01E2E5E8 CBZ W8, 0x1E2E600
	0x01E2E5EC ADRP X0, 0x22CC000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x25AB000
	006 Move X21, 0x22CD000
	007 Move X19, 0x22C6000
	008 Move W8, [X20+3709]
	009 Move X21, [X21+3240]
	010 Move X19, [X19+1528]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x22C6000
	016 Move X0, [X0+1528]
	017 Call 0x1C17CF4
	018 Move X0, 0x22CD000
	019 Move X0, [X0+3240]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3709], W8
	023 Move X8, [X21]
	024 Move X0, [X19]
	025 Move X8, [X8+184]
	026 Move W9, [X0+224]
	027 Move W19, [X8]
	028 Compare W9, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move W0, W19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X1, X31
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Call Physics.set_simulationMode, X0
	038 Return 

Method: System.Boolean get_AutoSyncTransforms()

Disassembly:
	0x01E2E5F0 LDR X0, [X0 + 0xC68]
	0x01E2E5F4 BL 0x1C16CF4
	0x01E2E5F8 MOVZ W8, 0x1
	0x01E2E5FC STRB W8, [X19 + 0xE8F]
	0x01E2E600 LDR X0, [X20]
	0x01E2E604 LDR W8, [X0 + 0xE0]
	0x01E2E608 CBZ W8, 0x1E2E614
	0x01E2E60C MOV W8, W31
	0x01E2E610 B 0x1E2E624
	0x01E2E614 BL 0x1C16DFC
	0x01E2E618 LDRB W8, [X19 + 0xE8F]
	0x01E2E61C CMP W8, 0x0
	0x01E2E620 CSET W8, EQ
	0x01E2E624 FMOV W9, S9
	0x01E2E628 MOVZ W10, 0x44800000
	0x01E2E62C UBFM W9, W9, 0x1F, 0x1F
	0x01E2E630 FMOV S0, 0.5
	0x01E2E634 FMOV S1, W10
	0x01E2E638 UCVTF S2, W9
	0x01E2E63C MOVZ W11, 0x7F800000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x25AB000
	005 Move X20, 0x22C6000
	006 Move W8, [X19+3710]
	007 Move X20, [X20+1528]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C6000
	013 Move X0, [X0+1528]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3710], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X0, X31
	025 Move X30, [X31+32]
	026 Call Physics.get_autoSyncTransforms
	027 Return X0

Method: System.Void set_AutoSyncTransforms(System.Boolean value)

Disassembly:
	0x01E2E640 FMUL S1, S9, S1
	0x01E2E644 FSUB S0, S0, S2
	0x01E2E648 FMOV S3, W11
	0x01E2E64C FADD S0, S1, S0
	0x01E2E650 FCVTZS W9, S0
	0x01E2E654 FCMP S0, S3
	0x01E2E658 MOVZ W10, 0x80000000
	0x01E2E65C CSEL W22, W10, W9, EQ
	0x01E2E660 CBZ W8, 0x1E2E678
	0x01E2E664 ADRP X0, 0x22CC000
	0x01E2E668 LDR X0, [X0 + 0xC68]
	0x01E2E66C BL 0x1C16CF4
	0x01E2E670 MOVZ W8, 0x1
	0x01E2E674 STRB W8, [X19 + 0xE8F]
	0x01E2E678 LDR X0, [X20]
	0x01E2E67C LDR W8, [X0 + 0xE0]
	0x01E2E680 CBNZ W8, 0x1E2E688
	0x01E2E684 BL 0x1C16DFC
	0x01E2E688 SBFM W9, W21, 0x1F, 0x1F
	0x01E2E68C FMOV W10, S8
	0x01E2E690 EOR W0, W9, W21, 0x1
	0x01E2E694 MOVZ W9, 0x44800000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x25AB000
	006 Move X21, 0x22C6000
	007 Move W8, [X20+3711]
	008 Move X21, [X21+1528]
	009 Move W19, W1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22C6000
	015 Move X0, [X0+1528]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3711], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 And W0, W19, 1
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Physics.set_autoSyncTransforms, X0
	031 Return 

Method: System.Void SimulatePrimaryScene(System.Single deltaTime)

Disassembly:
	0x01E2E698 UBFM W10, W10, 0x1F, 0x1F
	0x01E2E69C FMOV S0, 0.5
	0x01E2E6A0 FMOV S1, W9
	0x01E2E6A4 UCVTF S2, W10
	0x01E2E6A8 MOVZ W9, 0x7F800000
	0x01E2E6AC FMUL S1, S8, S1
	0x01E2E6B0 FSUB S0, S0, S2
	0x01E2E6B4 SBFM W8, W22, 0x1F, 0x1F
	0x01E2E6B8 FMOV S2, W9
	0x01E2E6BC FADD S0, S1, S0
	0x01E2E6C0 EOR W8, W8, W22, 0x1
	0x01E2E6C4 MOVZ W10, 0x80000000
	0x01E2E6C8 FCVTZS W9, S0
	0x01E2E6CC FCMP S0, S2
	0x01E2E6D0 LDP X20, X19, [X31 + 0x30]
	0x01E2E6D4 LDP X22, X21, [X31 + 0x20]
	0x01E2E6D8 LDR X30, [X31 + 0x18]
	0x01E2E6DC LDP D9, D8, [X31 + 0x8]
	0x01E2E6E0 CSEL W9, W10, W9, EQ
	0x01E2E6E4 SBFM W10, W9, 0x1F, 0x1F
	0x01E2E6E8 EOR W1, W10, W9, 0x1
	0x01E2E6EC BFM X0, X8, 0x20, 0x1F
	0x01E2E6F0 LDR V10, [X31], #0x40
	0x01E2E6F4 RET
	0x01E2E6F8 STP X30, X23, [X31 - 0x30]!
	0x01E2E6FC STP X22, X21, [X31 + 0x10]
	0x01E2E700 STP X20, X19, [X31 + 0x20]
	0x01E2E704 ADRP X21, 0x25AA000
	0x01E2E708 LDRB W8, [X21 + 0xE90]
	0x01E2E70C MOV X19, X1
	0x01E2E710 MOV X20, X0
	0x01E2E714 CBNZ W8, 0x1E2E72C
	0x01E2E718 ADRP X0, 0x22CC000
	0x01E2E71C LDR X0, [X0 + 0xC68]
	0x01E2E720 BL 0x1C16CF4
	0x01E2E724 MOVZ W8, 0x1
	0x01E2E728 STRB W8, [X21 + 0xE90]
	0x01E2E72C ADRP X22, 0x22CC000
	0x01E2E730 LDR X22, [X22 + 0xC68]
	0x01E2E734 LDR X0, [X22]
	0x01E2E738 LDR W8, [X0 + 0xE0]
	0x01E2E73C CBNZ W8, 0x1E2E760
	0x01E2E740 BL 0x1C16DFC
	0x01E2E744 LDRB W8, [X21 + 0xE90]
	0x01E2E748 CBNZ W8, 0x1E2E760
	0x01E2E74C ADRP X0, 0x22CC000
	0x01E2E750 LDR X0, [X0 + 0xC68]
	0x01E2E754 BL 0x1C16CF4
	0x01E2E758 MOVZ W8, 0x1
	0x01E2E75C STRB W8, [X21 + 0xE90]
	0x01E2E760 LDR X0, [X22]
	0x01E2E764 UBFM X23, X20, 0x20, 0x3F
	0x01E2E768 LDR W8, [X0 + 0xE0]
	0x01E2E76C CBNZ W8, 0x1E2E790
	0x01E2E770 BL 0x1C16DFC
	0x01E2E774 LDRB W8, [X21 + 0xE90]
	0x01E2E778 CBNZ W8, 0x1E2E790
	0x01E2E77C ADRP X0, 0x22CC000
	0x01E2E780 LDR X0, [X0 + 0xC68]
	0x01E2E784 BL 0x1C16CF4
	0x01E2E788 MOVZ W8, 0x1
	0x01E2E78C STRB W8, [X21 + 0xE90]
	0x01E2E790 LDR X0, [X22]
	0x01E2E794 LDR W8, [X0 + 0xE0]
	0x01E2E798 CBNZ W8, 0x1E2E7A0
	0x01E2E79C BL 0x1C16DFC
	0x01E2E7A0 MOVZ W8, 0x3A800000
	0x01E2E7A4 AND W9, W20, 0x1
	0x01E2E7A8 AND W10, W19, 0x1
	0x01E2E7AC FMOV S2, W8
	0x01E2E7B0 AND W8, W23, 0x1
	0x01E2E7B4 SUB W9, W31, W9
	0x01E2E7B8 SUB W10, W31, W10

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x25AB000
	007 Move W8, [X20+3712]
	008 Move V8, V0
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x22CD000
	015 Move X0, [X0+3248]
	016 Call 0x1C17CF4
	017 Move X0, 0x22C6000
	018 Move X0, [X0+1528]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3712], W8
	022 Move [X31+8], W31
	023 Move X8, [X19+56]
	024 Compare X8, 0
	025 JumpIfEqual {85}
	026 Move X19, [X8+256]
	027 Compare X19, 0
	028 JumpIfEqual {85}
	029 Move X10, 0x22CD000
	030 Move X8, [X19]
	031 Move X10, [X10+3248]
	032 NotImplemented "Instruction LDRH not yet implemented."
	033 Move X1, [X10]
	034 Compare X9, 0
	035 JumpIfEqual {42}
	036 Move X10, [X8+176]
	037 Add X10, X10, 8
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Subtract X9, X9, 1
	041 Add X10, X10, 16
	042 Move W2, 6
	043 Move X0, X19
	044 Call 0x1C5D788
	045 Move W9, [X10]
	046 Add W9, W9, 6
	047 Add X8, X8, W9
	048 Add X0, X8, 312
	049 Move X8, [X0]
	050 Move X2, [X0+8]
	051 Add X1, X31, 8
	052 Move X0, X19
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {79}
	058 Add X0, X31, 8
	059 Move X1, X31
	060 Call PhysicsScene.IsValid, X0
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {69}
	065 Add X0, X31, 8
	066 Move V0, V8
	067 Move X1, X31
	068 Call PhysicsScene.Simulate, X0, V0
	069 Move X8, 0x22C6000
	070 Move X8, [X8+1528]
	071 Move X0, [X8]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move V0, V8
	077 Move X0, X31
	078 Call Physics.Simulate, V0
	079 Move X20, [X31+32]
	080 Move X19, [X31+40]
	081 Move X30, [X31+24]
	082 Move V8, [X31+16]
	083 Add X31, X31, 48
	084 Return 
	085 Call 0x1C17F20

Method: System.Void SimulateAdditionalScenes(System.Single deltaTime, System.Boolean checkPhysicsSimulation)

Disassembly:
	0x01E2E7BC SUB W8, W31, W8
	0x01E2E7C0 EOR W9, W9, W20, 0x1
	0x01E2E7C4 EOR W10, W10, W19, 0x1
	0x01E2E7C8 LDP X20, X19, [X31 + 0x20]
	0x01E2E7CC LDP X22, X21, [X31 + 0x10]
	0x01E2E7D0 EOR W8, W8, W23, 0x1
	0x01E2E7D4 SCVTF S0, W8
	0x01E2E7D8 SCVTF S3, W9
	0x01E2E7DC SCVTF S4, W10
	0x01E2E7E0 FMUL S1, S0, S2
	0x01E2E7E4 FMUL S0, S3, S2
	0x01E2E7E8 FMUL S2, S4, S2
	0x01E2E7EC LDP X30, X23, [X31], #0x30
	0x01E2E7F0 RET
	0x01E2E7F4 MOV X1, X31
	0x01E2E7F8 B 0x33A51F0
	0x01E2E7FC MOV X1, X31
	0x01E2E800 B 0x33A51F0
	0x01E2E804 MOV X1, X31
	0x01E2E808 B 0x33A51F0
	0x01E2E80C STR X30, [X31 - 0x20]!
	0x01E2E810 STP X20, X19, [X31 + 0x10]
	0x01E2E814 MOV W19, W1
	0x01E2E818 MOV X20, X0
	0x01E2E81C BL 0x1C16D44
	0x01E2E820 STR W19, [X20]
	0x01E2E824 LDP X20, X19, [X31 + 0x10]
	0x01E2E828 LDR X30, [X31], #0x20
	0x01E2E82C RET
	0x01E2E830 STP X30, X19, [X31 - 0x10]!
	0x01E2E834 MOV X19, X0
	0x01E2E838 BL 0x1C16D44
	0x01E2E83C MOV X0, X19
	0x01E2E840 MOV X1, X31
	0x01E2E844 LDP X30, X19, [X31], #0x10
	0x01E2E848 B 0x33E7180
	0x01E2E84C STP X30, X19, [X31 - 0x10]!
	0x01E2E850 MOV X19, X0
	0x01E2E854 BL 0x1C16D44
	0x01E2E858 MOV X0, X19
	0x01E2E85C MOV X1, X31
	0x01E2E860 BL 0x33EB14C
	0x01E2E864 SUB W0, W0, 0x1
	0x01E2E868 LDP X30, X19, [X31], #0x10
	0x01E2E86C RET
	0x01E2E870 STP X30, X19, [X31 - 0x10]!
	0x01E2E874 MOV X19, X0
	0x01E2E878 BL 0x1C16D44
	0x01E2E87C MOV X0, X19
	0x01E2E880 MOV X1, X31
	0x01E2E884 LDP X30, X19, [X31], #0x10
	0x01E2E888 B 0x33EB14C
	0x01E2E88C STP X30, X19, [X31 - 0x10]!
	0x01E2E890 MOV X19, X0
	0x01E2E894 BL 0x1C16D44
	0x01E2E898 MOV X0, X19
	0x01E2E89C MOV X1, X31
	0x01E2E8A0 LDP X30, X19, [X31], #0x10
	0x01E2E8A4 B 0x33EB148
	0x01E2E8A8 STR X30, [X31 - 0x20]!
	0x01E2E8AC STP X20, X19, [X31 + 0x10]
	0x01E2E8B0 MOV W19, W1
	0x01E2E8B4 MOV X20, X0
	0x01E2E8B8 BL 0x1C16D44
	0x01E2E8BC MOV X0, X20
	0x01E2E8C0 MOV W1, W19
	0x01E2E8C4 LDP X20, X19, [X31 + 0x10]
	0x01E2E8C8 MOV X2, X31
	0x01E2E8CC LDR X30, [X31], #0x20
	0x01E2E8D0 B 0x33E9064
	0x01E2E8D4 STP X30, X21, [X31 - 0x20]!
	0x01E2E8D8 STP X20, X19, [X31 + 0x10]
	0x01E2E8DC MOV W19, W2
	0x01E2E8E0 MOV W20, W1
	0x01E2E8E4 MOV X21, X0
	0x01E2E8E8 BL 0x1C16D44
	0x01E2E8EC MOV W1, W20
	0x01E2E8F0 MOV W2, W19
	0x01E2E8F4 LDP X20, X19, [X31 + 0x10]
	0x01E2E8F8 MOV X0, X21
	0x01E2E8FC MOV X3, X31
	0x01E2E900 LDP X30, X21, [X31], #0x20
	0x01E2E904 B 0x33E7AB4
	0x01E2E908 MOV X1, X31
	0x01E2E90C B 0x3C303D4
	0x01E2E910 STP X30, X21, [X31 - 0x20]!
	0x01E2E914 STP X20, X19, [X31 + 0x10]
	0x01E2E918 ADRP X21, 0x25AA000
	0x01E2E91C ADRP X20, 0x22CC000
	0x01E2E920 LDRB W8, [X21 + 0xE91]
	0x01E2E924 LDR X20, [X20 + 0xD40]
	0x01E2E928 MOV W19, W0
	0x01E2E92C TBNZ X8, 0x0, 0x1E2E944
	0x01E2E930 ADRP X0, 0x22CC000
	0x01E2E934 LDR X0, [X0 + 0xD40]
	0x01E2E938 BL 0x1C16CF4
	0x01E2E93C MOVZ W8, 0x1
	0x01E2E940 STRB W8, [X21 + 0xE91]
	0x01E2E944 LDR X0, [X20]
	0x01E2E948 LDR W8, [X0 + 0xE0]
	0x01E2E94C CBNZ W8, 0x1E2E958
	0x01E2E950 BL 0x1C16DFC
	0x01E2E954 LDR X0, [X20]
	0x01E2E958 LDR X8, [X0 + 0xB8]
	0x01E2E95C LDR X8, [X8]
	0x01E2E960 CBZ X8, 0x1E2E984
	0x01E2E964 LDR W9, [X8 + 0x18]
	0x01E2E968 CMP W9, W19, UXTB
	0x01E2E96C B.LS 0x1E2E988
	0x01E2E970 ADD X8, X8, W19, 0x3, UXTB
	0x01E2E974 LDR X0, [X8 + 0x20]
	0x01E2E978 LDP X20, X19, [X31 + 0x10]
	0x01E2E97C LDP X30, X21, [X31], #0x20
	0x01E2E980 RET
	0x01E2E984 BL 0x1C16F20
	0x01E2E988 BL 0x1C16F28
	0x01E2E98C STR X30, [X31 - 0x50]!
	0x01E2E990 STP X26, X25, [X31 + 0x10]
	0x01E2E994 STP X24, X23, [X31 + 0x20]
	0x01E2E998 STP X22, X21, [X31 + 0x30]
	0x01E2E99C STP X20, X19, [X31 + 0x40]
	0x01E2E9A0 ADRP X23, 0x25AA000
	0x01E2E9A4 ADRP X25, 0x22C5000
	0x01E2E9A8 LDRB W8, [X23 + 0xE92]
	0x01E2E9AC LDR X25, [X25 + 0x8F0]
	0x01E2E9B0 MOV X19, X4
	0x01E2E9B4 MOV X20, X3
	0x01E2E9B8 MOV W21, W2
	0x01E2E9BC MOV W24, W1
	0x01E2E9C0 MOV X22, X0
	0x01E2E9C4 TBNZ X8, 0x0, 0x1E2E9E8
	0x01E2E9C8 ADRP X0, 0x22CC000
	0x01E2E9CC LDR X0, [X0 + 0xD40]
	0x01E2E9D0 BL 0x1C16CF4
	0x01E2E9D4 ADRP X0, 0x22C5000
	0x01E2E9D8 LDR X0, [X0 + 0x8F0]
	0x01E2E9DC BL 0x1C16CF4
	0x01E2E9E0 MOVZ W8, 0x1
	0x01E2E9E4 STRB W8, [X23 + 0xE92]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], D8
	003 Move [X31+72], X30
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X21, 0x25AB000
	011 Move W8, [X21+3713]
	012 Move W19, W1
	013 Move V8, V0
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0x22CD000
	020 Move X0, [X0+3304]
	021 Call 0x1C17CF4
	022 Move X0, 0x22CD000
	023 Move X0, [X0+3312]
	024 Call 0x1C17CF4
	025 Move X0, 0x22CD000
	026 Move X0, [X0+3320]
	027 Call 0x1C17CF4
	028 Move X0, 0x22CD000
	029 Move X0, [X0+3328]
	030 Call 0x1C17CF4
	031 Move X0, 0x22CD000
	032 Move X0, [X0+3336]
	033 Call 0x1C17CF4
	034 Move X0, 0x22C6000
	035 Move X0, [X0+1528]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+3713], W8
	039 Move [X31+32], X31
	040 Move [X31+40], X31
	041 Move [X31+48], X31
	042 Move [X31+24], W31
	043 Move X8, [X20+136]
	044 Compare X8, 0
	045 JumpIfEqual {122}
	046 Move W8, [X8+24]
	047 Compare W8, 0
	048 JumpIfEqual {122}
	049 Move X22, 0x22C6000
	050 Move X22, [X22+1528]
	051 Move X0, [X22]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X31
	057 Call Physics.get_defaultPhysicsScene
	058 Move X9, [X20+136]
	059 Compare X9, 0
	060 JumpIfEqual {132}
	061 Move X8, 0x22CD000
	062 Move X8, [X8+3328]
	063 Move X21, X0
	064 Move X0, X9
	065 Move X1, [X8]
	066 Add X8, X31, 0
	067 Call 0x2EF5498, X0
	068 Move V0, [X31]
	069 Move X8, [X31+16]
	070 Move X23, 0x22CD000
	071 And X21, X21, 0
	072 Move [X31+2], V0
	073 Move [X31+48], X8
	074 Move X23, [X23+3312]
	075 Move X1, [X23]
	076 Add X0, X31, 32
	077 Call 0x2BB0AB8, X0
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {117}
	082 Move X24, [X31+48]
	083 Move TEMP, X19
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {96}
	087 Move X1, X24
	088 ShiftRight X1, 32
	089 And X1, X1, 0x7FFFFFFF
	090 Move X0, X20
	091 Call RunnerSimulatePhysicsBase.CanSimulatePhysics, X0, X1
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {75}
	096 And X0, X24, 0
	097 Move X1, X21
	098 Move X2, X31
	099 Call PhysicsScene.op_Inequality, X0, X1
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {112}
	104 Move X0, [X22]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Move X0, X31
	110 Call Physics.get_simulationMode
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move [X31+24], W24
	113 Add X0, X31, 24
	114 Move V0, V8
	115 Move X1, X31
	116 Call PhysicsScene.Simulate, X0, V0
	117 Move X8, 0x22CD000
	118 Move X8, [X8+3304]
	119 Add X0, X31, 32
	120 Move X1, [X8]
	121 Call 0x2BB0AB4, X0
	122 Move X20, [X31+112]
	123 Move X19, [X31+120]
	124 Move X22, [X31+96]
	125 Move X21, [X31+104]
	126 Move X24, [X31+80]
	127 Move X23, [X31+88]
	128 Move X30, [X31+72]
	129 Move V8, [X31+64]
	130 Add X31, X31, 128
	131 Return 
	132 Call 0x1C17F20
	133 Move X19, X0
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X0, X19
	136 Call 0x3EB2AD0
	137 Move X20, [X0]
	138 Call 0x3EB2AE0
	139 Move X8, 0x22CD000
	140 Move X8, [X8+3304]
	141 Add X0, X31, 32
	142 Move X1, [X8]
	143 Call 0x2BB0AB4, X0
	144 Compare X20, 0
	145 JumpIfEqual {122}
	146 Move X0, X20
	147 Call 0x1C17F18
	148 Move X20, X31
	149 Move X19, X0
	150 Move X8, 0x22CD000
	151 Move X8, [X8+3304]
	152 Move X1, [X8]
	153 Add X0, X31, 32
	154 Call 0x2BB0AB4, X0
	155 Compare X20, 0
	156 JumpIfNotEqual {159}
	157 Move X0, X19
	158 Call 0x1D2D690
	159 Move X0, X20
	160 Call 0x1C17F18
	161 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x01E2E9E8 LDR X0, [X25]
	0x01E2E9EC BL 0x1C16F10
	0x01E2E9F0 MOV X1, X31
	0x01E2E9F4 MOV X23, X0
	0x01E2E9F8 BL 0x3231AC4
	0x01E2E9FC CMP W24, 0x1
	0x01E2EA00 B.LT 0x1E2EA88
	0x01E2EA04 ADRP X26, 0x22CC000
	0x01E2EA08 LDR X26, [X26 + 0xD40]
	0x01E2EA0C MOV X25, X31
	0x01E2EA10 MOV W24, W24
	0x01E2EA14 LDR X0, [X26]
	0x01E2EA18 LDR W8, [X0 + 0xE0]
	0x01E2EA1C CBNZ W8, 0x1E2EA28
	0x01E2EA20 BL 0x1C16DFC
	0x01E2EA24 LDR X0, [X26]
	0x01E2EA28 LDR X8, [X0 + 0xB8]
	0x01E2EA2C LDR X8, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x25AB000
	006 Move X21, 0x22CD000
	007 Move W8, [X20+3714]
	008 Move X21, [X21+3344]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22CD000
	015 Move X0, [X0+3344]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3714], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call 0x25D6284, X0
	026 Return 

