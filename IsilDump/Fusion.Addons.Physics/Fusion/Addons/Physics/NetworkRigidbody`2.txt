Type: Fusion.Addons.Physics.NetworkRigidbody`2

Method: RBType get_Rigidbody()

Disassembly:
	0x0241FC6C FMOV S1, W31
	0x0241FC70 FMOV S2, W31

ISIL:
	001 Move X0, [X0+184]
	002 Return X0

Method: System.Void Awake()

Disassembly:
	0x0241FC74 MOV X0, X24
	0x0241FC78 MOV X1, X31
	0x0241FC7C BL 0x3C3EC04
	0x0241FC80 ADRP X21, 0x1FB9000
	0x0241FC84 LDRB W8, [X21 + 0x793]
	0x0241FC88 CBNZ W8, 0x241FCA0
	0x0241FC8C ADRP X0, 0x1CD5000
	0x0241FC90 LDR X0, [X0 + 0x5A8]
	0x0241FC94 BL 0x1C16CF4
	0x0241FC98 MOVZ W8, 0x1
	0x0241FC9C STRB W8, [X21 + 0x793]
	0x0241FCA0 ADRP X8, 0x1CD5000
	0x0241FCA4 LDR X8, [X8 + 0x5A8]
	0x0241FCA8 MOV X0, X24
	0x0241FCAC MOV X1, X31
	0x0241FCB0 MOV W28, W20
	0x0241FCB4 LDR X8, [X8]
	0x0241FCB8 LDR X8, [X8 + 0xB8]
	0x0241FCBC LDP S0, S1, [X8]
	0x0241FCC0 LDP S2, S3, [X8 + 0x8]
	0x0241FCC4 BL 0x3C3F8B8
	0x0241FCC8 B 0x241FD24
	0x0241FCCC ADRP X8, 0x1CD4000
	0x0241FCD0 LDR X8, [X8 + 0xA28]
	0x0241FCD4 LDR X0, [X8]
	0x0241FCD8 LDR W8, [X0 + 0xE0]
	0x0241FCDC CBNZ W8, 0x241FCE4
	0x0241FCE0 BL 0x1C16DFC
	0x0241FCE4 ADRP X8, 0x1CFD000
	0x0241FCE8 LDR X8, [X8 + 0xC98]
	0x0241FCEC MOV X1, X31
	0x0241FCF0 LDR X0, [X8]
	0x0241FCF4 BL 0x3C0649C
	0x0241FCF8 LDR X8, [X19]
	0x0241FCFC MOV X0, X19
	0x0241FD00 LDR X9, [X8 + 0x368]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1FBB000
	006 Move W8, [X21+2498]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x1CDF000
	014 Move X0, [X0+2864]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2498], W8
	018 Compare X19, 0
	019 JumpIfEqual {44}
	020 Move X8, 0x1CDF000
	021 Move X8, [X8+2864]
	022 Add X1, X19, 168
	023 Move X0, X19
	024 Move X2, [X8]
	025 Call 0x21A5990, X0, X1
	026 Move X8, [X20+32]
	027 Add X1, X19, 184
	028 Move X0, X19
	029 Move X8, [X8+192]
	030 Move X2, [X8+16]
	031 Call 0x21A5990, X0, X1
	032 Move X8, [X19]
	033 Move X0, X19
	034 Move X9, [X8+680]
	035 Move X1, [X8+688]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 And W8, W0, 1
	038 Move [X19+200], W8
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return 
	044 Call 0x1C17F20

Method: System.Void Fusion.ISimulationExit.SimulationExit()

Disassembly:
	0x0241FD04 LDR X1, [X8 + 0x370]
	0x0241FD08 BLR X9
	0x0241FD0C CMP W20, 0x0
	0x0241FD10 STR W31, [X31 + 0x4]
	0x0241FD14 MOV W28, W20
	0x0241FD18 CSET W27, NE

ISIL:
	001 Move X8, [X0]
	002 Move X1, [X0+184]
	003 Move W2, 1
	004 Move X4, [X8+984]
	005 Move X3, [X8+992]
	006 CallNoReturn X4

Method: System.Void Spawned()

Disassembly:
	0x0241FD1C B 0x241FD28
	0x0241FD20 MOV W28, W20
	0x0241FD24 STR W31, [X31 + 0x4]
	0x0241FD28 MOVZ W21, 0x1
	0x0241FD2C LDR X8, [X19]
	0x0241FD30 LDR X1, [X31 + 0x8]
	0x0241FD34 MOV X0, X19
	0x0241FD38 MOV W20, W29
	0x0241FD3C LDR X9, [X8 + 0x408]
	0x0241FD40 LDR X2, [X8 + 0x410]
	0x0241FD44 AND W25, W22, 0x2
	0x0241FD48 BLR X9
	0x0241FD4C LDRB W26, [X19 + 0xB2]
	0x0241FD50 MOV W24, W0
	0x0241FD54 MOV X0, X19
	0x0241FD58 MOV X1, X31
	0x0241FD5C BL 0x1E2C934
	0x0241FD60 TBNZ X22, 0x1, 0x241FD94
	0x0241FD64 LDP S8, S9, [X0 + 0x8]
	0x0241FD68 LDR V10, [X0 + 0x10]
	0x0241FD6C LDRB W29, [X19 + 0x90]
	0x0241FD70 MOV X0, X19
	0x0241FD74 MOV X1, X31
	0x0241FD78 BL 0x1E2C934
	0x0241FD7C CBNZ W29, 0x241FDA8
	0x0241FD80 ADD X8, X0, 0x14
	0x0241FD84 ADD X9, X0, 0x18
	0x0241FD88 ADD X10, X0, 0x1C
	0x0241FD8C ADD X11, X0, 0x20
	0x0241FD90 B 0x241FDB8
	0x0241FD94 LDP S8, S9, [X0 + 0x60]
	0x0241FD98 LDR V10, [X0 + 0x68]
	0x0241FD9C MOV X0, X19
	0x0241FDA0 MOV X1, X31
	0x0241FDA4 BL 0x1E2C934
	0x0241FDA8 ADD X8, X0, 0x6C
	0x0241FDAC ADD X9, X0, 0x70
	0x0241FDB0 ADD X10, X0, 0x74
	0x0241FDB4 ADD X11, X0, 0x78
	0x0241FDB8 LDR V11, [X8]
	0x0241FDBC LDR V12, [X9]
	0x0241FDC0 LDR V13, [X10]
	0x0241FDC4 LDR V14, [X11]
	0x0241FDC8 AND W29, W24, 0x1
	0x0241FDCC EOR W8, W26, 0xFF
	0x0241FDD0 AND W9, W29, W25, 0x1
	0x0241FDD4 ANDS W31, W9, W8, 0x0
	0x0241FDD8 AND W24, W22, 0x1
	0x0241FDDC B.EQ 0x241FE58
	0x0241FDE0 CBZ X23, 0x242006C
	0x0241FDE4 MOV X0, X23
	0x0241FDE8 MOV X1, X31
	0x0241FDEC BL 0x3C3EB78
	0x0241FDF0 ADRP X8, 0xFFFFFFFFFE6CA000
	0x0241FDF4 FSUB S0, S0, S8
	0x0241FDF8 FSUB S1, S1, S9
	0x0241FDFC LDR V3, [X8 + 0xF20]
	0x0241FE00 FSUB S2, S2, S10
	0x0241FE04 FMUL S0, S0, S0
	0x0241FE08 FMUL S1, S1, S1
	0x0241FE0C FADD S0, S0, S1
	0x0241FE10 FMUL S1, S2, S2
	0x0241FE14 FADD S0, S1, S0
	0x0241FE18 FCMP S0, S3
	0x0241FE1C B.PL 0x241FE58
	0x0241FE20 MOV X0, X23
	0x0241FE24 MOV X1, X31
	0x0241FE28 BL 0x3C3F830
	0x0241FE2C FMUL S0, S11, S0
	0x0241FE30 FMUL S1, S12, S1
	0x0241FE34 ADRP X8, 0xFFFFFFFFFE6CB000
	0x0241FE38 FADD S0, S0, S1
	0x0241FE3C LDR V1, [X8 + 0x1B4]
	0x0241FE40 FMUL S2, S13, S2
	0x0241FE44 FADD S0, S2, S0
	0x0241FE48 FMUL S2, S14, S3
	0x0241FE4C FADD S0, S2, S0
	0x0241FE50 FCMP S0, S1
	0x0241FE54 B.GT 0x2420004
	0x0241FE58 ORR W8, W24, W26, 0x0
	0x0241FE5C CMP W8, 0x0
	0x0241FE60 CSINC W8, W28, W31, EQ
	0x0241FE64 ORR W8, W8, W21, 0x0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {109}
	005 Move X1, X31
	006 Move X19, X0
	007 Call NetworkRigidbodyBase.Spawned, X0
	008 Move X0, [X19+64]
	009 Compare X0, 0
	010 JumpIfEqual {29}
	011 Move W8, [X0+96]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 2
	014 Compare TEMP, 2
	015 JumpIfEqual {29}
	016 Move X1, X31
	017 Call NetworkObject.get_IsProxy, X0
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {29}
	022 Move X8, [X19]
	023 Move X1, [X19+184]
	024 Move W2, 1
	025 Move X0, X19
	026 Move X9, [X8+984]
	027 Move X3, [X8+992]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move X8, [X19]
	030 Move X0, X19
	031 Move X9, [X8+856]
	032 Move X1, [X8+864]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move X0, [X19+56]
	035 Compare X0, 0
	036 JumpIfEqual {109}
	037 Move X1, X31
	038 Call NetworkRunner.get_Topology, X0
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W8, W31
	041 Move X0, [X19+56]
	042 Compare X0, 0
	043 JumpIfEqual {109}
	044 Move X1, X31
	045 Call NetworkRunner.get_IsServer, X0
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {51}
	050 Move W8, 1
	051 Move X8, [X19+192]
	052 Compare X8, 0
	053 JumpIfEqual {109}
	054 Move W8, [X8+80]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CSET not yet implemented."
	057 Move X0, [X19+64]
	058 Move [X19+177], W8
	059 Compare X0, 0
	060 JumpIfEqual {80}
	061 Move W8, [X0+96]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 2
	064 Compare TEMP, 2
	065 JumpIfEqual {80}
	066 Move X1, X31
	067 Call NetworkObject.get_HasStateAuthority, X0
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {80}
	072 Move X8, [X19]
	073 Move X0, X19
	074 Move W1, W31
	075 Move X3, [X8+1080]
	076 Move X2, [X8+1088]
	077 Move X30, [X31+16]
	078 Move X19, [X31+24]
	079 CallNoReturn X3
	080 Move X8, [X19]
	081 Move W9, 1
	082 Move [X19+178], W9
	083 Move W1, 1
	084 Move X9, [X8+1096]
	085 Move X2, [X8+1104]
	086 Move X0, X19
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move X0, [X19+64]
	089 Compare X0, 0
	090 JumpIfEqual {109}
	091 Move X1, X31
	092 Call NetworkObject.get_IsInSimulation, X0
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {100}
	097 Move X30, [X31+16]
	098 Move X19, [X31+24]
	099 Return 
	100 Move X8, [X19]
	101 Move X1, [X19+184]
	102 Move W2, 1
	103 Move X0, X19
	104 Move X4, [X8+984]
	105 Move X3, [X8+992]
	106 Move X30, [X31+16]
	107 Move X19, [X31+24]
	108 CallNoReturn X4
	109 Call 0x1C17F20

Method: System.Void Despawned(Fusion.NetworkRunner runner, System.Boolean hasState)

Disassembly:
	0x0241FE68 CBZ W8, 0x241FEC4
	0x0241FE6C CBZ X23, 0x242006C
	0x0241FE70 MOV X0, X23
	0x0241FE74 MOV V0.16B, V8.16B
	0x0241FE78 MOV V1.16B, V9.16B
	0x0241FE7C MOV V2.16B, V10.16B
	0x0241FE80 CBZ W27, 0x241FEA0
	0x0241FE84 MOV V3.16B, V11.16B
	0x0241FE88 MOV V4.16B, V12.16B
	0x0241FE8C MOV V5.16B, V13.16B
	0x0241FE90 MOV V6.16B, V14.16B
	0x0241FE94 MOV X1, X31
	0x0241FE98 BL 0x3C40000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {16}
	005 And W2, W2, 1
	006 Move X3, X31
	007 Move X19, X0
	008 Call NetworkBehaviour.Despawned, X0, X1, X2
	009 Move X8, [X19]
	010 Move X0, X19
	011 Move X2, [X8+824]
	012 Move X1, [X8+832]
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 CallNoReturn X2
	016 Call 0x1C17F20

Method: System.Void ResetRigidbody()

Disassembly:
	0x0241FE9C B 0x241FEC4
	0x0241FEA0 MOV X1, X31
	0x0241FEA4 BL 0x3C3EC04
	0x0241FEA8 MOV X0, X23
	0x0241FEAC MOV V0.16B, V11.16B
	0x0241FEB0 MOV V1.16B, V12.16B

ISIL:
	001 Move X8, [X0]
	002 Move X1, [X0+184]
	003 Move W2, [X0+200]
	004 Move X4, [X8+984]
	005 Move X3, [X8+992]
	006 CallNoReturn X4

Method: System.Void StateAuthorityChanged()

Disassembly:
	0x0241FEB4 MOV V2.16B, V13.16B
	0x0241FEB8 MOV V3.16B, V14.16B
	0x0241FEBC MOV X1, X31
	0x0241FEC0 BL 0x3C3F8B8
	0x0241FEC4 LDR W8, [X31 + 0x4]
	0x0241FEC8 ORR W8, W8, W27, 0x0
	0x0241FECC CBZ W8, 0x241FF04
	0x0241FED0 LDR X8, [X19]
	0x0241FED4 LDR X1, [X31 + 0x8]
	0x0241FED8 MOV X0, X19
	0x0241FEDC MOV V0.16B, V8.16B
	0x0241FEE0 LDR X9, [X8 + 0x378]
	0x0241FEE4 LDR X2, [X8 + 0x380]
	0x0241FEE8 MOV V1.16B, V9.16B
	0x0241FEEC MOV V2.16B, V10.16B
	0x0241FEF0 MOV V3.16B, V11.16B
	0x0241FEF4 MOV V4.16B, V12.16B
	0x0241FEF8 MOV V5.16B, V13.16B
	0x0241FEFC MOV V6.16B, V14.16B
	0x0241FF00 BLR X9
	0x0241FF04 MOV W26, W31
	0x0241FF08 STRB W31, [X19 + 0xB2]
	0x0241FF0C LDRB W8, [X19 + 0x81]
	0x0241FF10 CBZ W8, 0x241FF44
	0x0241FF14 MOV X0, X19
	0x0241FF18 MOV X1, X31
	0x0241FF1C BL 0x1E2C934
	0x0241FF20 LDUR X8, [X0 + 0x24]
	0x0241FF24 LDR W1, [X0 + 0x2C]
	0x0241FF28 MOV X2, X31
	0x0241FF2C MOV X0, X8
	0x0241FF30 BL 0x1E2E6F8
	0x0241FF34 CBZ X23, 0x242006C
	0x0241FF38 MOV X0, X23
	0x0241FF3C MOV X1, X31
	0x0241FF40 BL 0x3C3FC4C
	0x0241FF44 TBZ X20, 0x0, 0x242003C
	0x0241FF48 LDR X8, [X19]
	0x0241FF4C LDR X1, [X31 + 0x8]
	0x0241FF50 MOV X0, X19
	0x0241FF54 LDR X9, [X8 + 0x3C8]
	0x0241FF58 LDR X2, [X8 + 0x3D0]
	0x0241FF5C BLR X9
	0x0241FF60 ANDS X31, X22, 0x1
	0x0241FF64 CSET W8, EQ
	0x0241FF68 EOR W8, W8, W0, 0x0
	0x0241FF6C TBNZ X8, 0x0, 0x241FF8C
	0x0241FF70 LDR X8, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1FBB000
	006 Move X20, 0x1CD5000
	007 Move W8, [X21+2499]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x1CD5000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2499], W8
	019 Move X0, [X20]
	020 Move X20, [X19+184]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Call Object.op_Implicit, X0
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {52}
	032 Move X0, [X19+64]
	033 Compare X0, 0
	034 JumpIfEqual {67}
	035 Move X1, X31
	036 Call NetworkObject.get_IsProxy, X0
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {57}
	041 Move X8, [X19]
	042 Move X1, [X19+184]
	043 Move X0, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X4, [X8+984]
	047 Move X3, [X8+992]
	048 Move W2, 1
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 CallNoReturn X4
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Return 
	057 Move X8, [X19]
	058 Move X0, X19
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move W1, 1
	062 Move X3, [X8+1096]
	063 Move X2, [X8+1104]
	064 Move X30, [X31+32]
	065 Move X21, [X31+40]
	066 CallNoReturn X3
	067 Call 0x1C17F20

Method: System.Void EnsureHasRunnerSimulatePhysics()

Disassembly:
	0x0241FF74 LDR X1, [X31 + 0x8]
	0x0241FF78 MOV X0, X19
	0x0241FF7C MOV W2, W24
	0x0241FF80 LDR X9, [X8 + 0x3D8]
	0x0241FF84 LDR X3, [X8 + 0x3E0]
	0x0241FF88 BLR X9
	0x0241FF8C CBNZ W24, 0x242003C
	0x0241FF90 MOV X0, X19
	0x0241FF94 MOV X1, X31
	0x0241FF98 UBFM X21, X22, 0x20, 0x3F
	0x0241FF9C UBFM W22, W25, 0x1, 0x1F
	0x0241FFA0 BL 0x1E2C934
	0x0241FFA4 LDR X8, [X19]
	0x0241FFA8 LDR X20, [X31 + 0x8]
	0x0241FFAC MOV X2, X0
	0x0241FFB0 MOV X0, X19
	0x0241FFB4 LDR X9, [X8 + 0x3A8]
	0x0241FFB8 LDR X3, [X8 + 0x3B0]
	0x0241FFBC MOV X1, X20
	0x0241FFC0 BLR X9
	0x0241FFC4 LDR X8, [X19]
	0x0241FFC8 MOV X0, X19
	0x0241FFCC MOV X1, X20
	0x0241FFD0 MOV W2, W21
	0x0241FFD4 LDR X9, [X8 + 0x3F8]
	0x0241FFD8 LDR X3, [X8 + 0x400]
	0x0241FFDC BLR X9
	0x0241FFE0 CMP W22, W29
	0x0241FFE4 CSET W8, EQ
	0x0241FFE8 ORR W8, W8, W26, 0x0
	0x0241FFEC TBNZ X8, 0x0, 0x242003C
	0x0241FFF0 LDR X8, [X19]
	0x0241FFF4 CBNZ W25, 0x242000C
	0x0241FFF8 LDR X9, [X8 + 0x428]
	0x0241FFFC LDR X2, [X8 + 0x430]
	0x02420000 B 0x2420030
	0x02420004 MOVZ W26, 0x1
	0x02420008 B 0x241FF0C
	0x0242000C LDR X9, [X8 + 0x458]
	0x02420010 LDR X2, [X8 + 0x460]
	0x02420014 LDR X1, [X31 + 0x8]
	0x02420018 MOV X0, X19
	0x0242001C BLR X9
	0x02420020 TBZ X0, 0x0, 0x242003C
	0x02420024 LDR X8, [X19]
	0x02420028 LDR X9, [X8 + 0x418]
	0x0242002C LDR X2, [X8 + 0x420]
	0x02420030 LDR X1, [X31 + 0x8]
	0x02420034 MOV X0, X19
	0x02420038 BLR X9
	0x0242003C LDP X20, X19, [X31 + 0xA0]
	0x02420040 LDP X22, X21, [X31 + 0x90]
	0x02420044 LDP X24, X23, [X31 + 0x80]
	0x02420048 LDP X26, X25, [X31 + 0x70]
	0x0242004C LDP X28, X27, [X31 + 0x60]
	0x02420050 LDP X29, X30, [X31 + 0x50]
	0x02420054 LDP D9, D8, [X31 + 0x40]
	0x02420058 LDP D11, D10, [X31 + 0x30]
	0x0242005C LDP D13, D12, [X31 + 0x20]
	0x02420060 LDR V14, [X31 + 0x10]
	0x02420064 ADD X31, X31, 0xB0
	0x02420068 RET
	0x0242006C BL 0x1C16F20
	0x02420070 STP D15, D14, [X31 - 0xA0]!
	0x02420074 STP D13, D12, [X31 + 0x10]
	0x02420078 STP D11, D10, [X31 + 0x20]
	0x0242007C STP D9, D8, [X31 + 0x30]
	0x02420080 STP X29, X30, [X31 + 0x40]
	0x02420084 STP X28, X27, [X31 + 0x50]
	0x02420088 STP X26, X25, [X31 + 0x60]
	0x0242008C STP X24, X23, [X31 + 0x70]
	0x02420090 STP X22, X21, [X31 + 0x80]
	0x02420094 STP X20, X19, [X31 + 0x90]
	0x02420098 SUB X31, X31, 0x220
	0x0242009C MRS X22, 0xC000
	0x024200A0 LDR X8, [X22 + 0x28]
	0x024200A4 ADRP X20, 0x1FB9000
	0x024200A8 MOV X19, X0
	0x024200AC STR X8, [X31 + 0x218]
	0x024200B0 LDRB W8, [X20 + 0x9C9]
	0x024200B4 TBNZ X8, 0x0, 0x2420114
	0x024200B8 ADRP X0, 0x1CD3000
	0x024200BC LDR X0, [X0 + 0xA28]
	0x024200C0 BL 0x1C16CF4
	0x024200C4 ADRP X0, 0x1CD3000
	0x024200C8 LDR X0, [X0 + 0x758]
	0x024200CC BL 0x1C16CF4
	0x024200D0 ADRP X0, 0x1CFC000
	0x024200D4 LDR X0, [X0 + 0xCA0]
	0x024200D8 BL 0x1C16CF4
	0x024200DC ADRP X0, 0x1CDD000
	0x024200E0 LDR X0, [X0 + 0x6C0]
	0x024200E4 BL 0x1C16CF4
	0x024200E8 ADRP X0, 0x1CD3000
	0x024200EC LDR X0, [X0 + 0x598]
	0x024200F0 BL 0x1C16CF4
	0x024200F4 ADRP X0, 0x1CFC000
	0x024200F8 LDR X0, [X0 + 0xCA8]
	0x024200FC BL 0x1C16CF4
	0x02420100 ADRP X0, 0x1CFC000
	0x02420104 LDR X0, [X0 + 0xCB0]
	0x02420108 BL 0x1C16CF4
	0x0242010C MOVZ W8, 0x1
	0x02420110 STRB W8, [X20 + 0x9C9]
	0x02420114 STP X31, X31, [X31 + 0x130]
	0x02420118 STP X31, X31, [X31 + 0x120]
	0x0242011C STR W31, [X31 + 0x11C]
	0x02420120 STR X31, [X31 + 0x110]
	0x02420124 LDRB W8, [X19 + 0xB0]
	0x02420128 CBZ W8, 0x242016C
	0x0242012C LDR X8, [X22 + 0x28]
	0x02420130 LDR X9, [X31 + 0x218]
	0x02420134 CMP X8, X9
	0x02420138 B.NE 0x2420E88
	0x0242013C ADD X31, X31, 0x220
	0x02420140 LDP X20, X19, [X31 + 0x90]
	0x02420144 LDP X22, X21, [X31 + 0x80]
	0x02420148 LDP X24, X23, [X31 + 0x70]
	0x0242014C LDP X26, X25, [X31 + 0x60]
	0x02420150 LDP X28, X27, [X31 + 0x50]
	0x02420154 LDP X29, X30, [X31 + 0x40]
	0x02420158 LDP D9, D8, [X31 + 0x30]
	0x0242015C LDP D11, D10, [X31 + 0x20]
	0x02420160 LDP D13, D12, [X31 + 0x10]
	0x02420164 LDP D15, D14, [X31], #0xA0
	0x02420168 RET
	0x0242016C LDR X0, [X19 + 0x40]
	0x02420170 CBZ X0, 0x2420E84
	0x02420174 MOV X1, X31
	0x02420178 BL 0x1E93540
	0x0242017C MOV W29, W0
	0x02420180 TBZ X0, 0x0, 0x24201C4
	0x02420184 LDR X8, [X19 + 0xC0]
	0x02420188 CBZ X8, 0x242012C
	0x0242018C LDR W9, [X8 + 0x48]
	0x02420190 CMP W9, 0x1
	0x02420194 B.EQ 0x242012C
	0x02420198 MOV X24, X19
	0x0242019C LDR X23, [X24 + 0x88]!
	0x024201A0 LDR W8, [X8 + 0x4C]
	0x024201A4 CMP X23, 0x0
	0x024201A8 CSET W25, NE
	0x024201AC CMP W8, 0x1
	0x024201B0 B.EQ 0x242063C
	0x024201B4 CBNZ W8, 0x24201D4
	0x024201B8 CBZ X23, 0x242012C
	0x024201BC MOVZ W25, 0x1
	0x024201C0 B 0x24201D4
	0x024201C4 MOV X24, X19
	0x024201C8 LDR X23, [X24 + 0x88]!
	0x024201CC CMP X23, 0x0
	0x024201D0 CSET W25, NE
	0x024201D4 LDR X8, [X19 + 0x40]
	0x024201D8 CBZ X8, 0x2420E84
	0x024201DC LDR W8, [X8 + 0x80]
	0x024201E0 CMP W8, 0x3
	0x024201E4 B.EQ 0x242012C
	0x024201E8 LDR X28, [X19 + 0xA8]
	0x024201EC ADD X1, X31, 0x130
	0x024201F0 ADD X2, X31, 0x120
	0x024201F4 ADD X3, X31, 0x11C
	0x024201F8 MOV X0, X19
	0x024201FC MOV X4, X31
	0x02420200 BL 0x1E749E0
	0x02420204 TBZ X0, 0x0, 0x24203F0
	0x02420208 ADRP X20, 0x1CFC000
	0x0242020C LDR X20, [X20 + 0xCA0]
	0x02420210 ADD X8, X31, 0x180
	0x02420214 ADD X0, X31, 0x130
	0x02420218 MOV W1, W31
	0x0242021C LDR X2, [X20]
	0x02420220 ADD X26, X31, 0x180
	0x02420224 BL 0x22277D8
	0x02420228 LDR X9, [X31 + 0x180]
	0x0242022C LDUR X8, [X26 + 0x24]
	0x02420230 LDR V0, [X31 + 0x188]
	0x02420234 LDUR V1, [X26 + 0x48]
	0x02420238 LDUR V2, [X26 + 0x58]
	0x0242023C STP X8, X9, [X31 + 0xD0]
	0x02420240 LDR X8, [X26 + 0x30]
	0x02420244 LDUR X9, [X26 + 0x7C]
	0x02420248 STR V0, [X31 + 0xF]
	0x0242024C LDR V0, [X31 + 0x190]
	0x02420250 STR X8, [X31 + 0xE8]
	0x02420254 LDR W8, [X31 + 0x1AC]
	0x02420258 STR X9, [X31 + 0x98]
	0x0242025C LDR W9, [X31 + 0x204]
	0x02420260 STR S0, [X31 + 0xE4]
	0x02420264 STR X8, [X31 + 0xC8]
	0x02420268 LDR W8, [X31 + 0x1E8]
	0x0242026C LDUR V0, [X26 + 0x38]
	0x02420270 STR W9, [X31 + 0x94]
	0x02420274 LDR X10, [X26 + 0x88]
	0x02420278 LDR X9, [X26 + 0x90]
	0x0242027C LDR X2, [X20]
	0x02420280 LDR V12, [X31 + 0x194]
	0x02420284 LDR V9, [X31 + 0x198]
	0x02420288 LDR V8, [X31 + 0x19C]
	0x0242028C LDR V10, [X31 + 0x1A0]
	0x02420290 LDR V11, [X31 + 0x1EC]
	0x02420294 LDR V14, [X31 + 0x1F0]
	0x02420298 LDR V15, [X31 + 0x1F4]
	0x0242029C LDR V13, [X31 + 0x1F8]
	0x024202A0 STR W8, [X31 + 0x170]
	0x024202A4 ADD X8, X31, 0x180
	0x024202A8 ADD X0, X31, 0x120
	0x024202AC MOV W1, W31
	0x024202B0 STP X9, X10, [X31 + 0x80]
	0x024202B4 STP V0, V1, [X31 + 0x140]
	0x024202B8 STR V2, [X31 + 0x16]
	0x024202BC BL 0x22277D8
	0x024202C0 LDRB W8, [X19 + 0x90]
	0x024202C4 LDR W27, [X31 + 0x1B0]
	0x024202C8 MOV V6.16B, V10.16B
	0x024202CC MOV V5.16B, V8.16B
	0x024202D0 MOV V7.16B, V9.16B
	0x024202D4 STP S10, S8, [X31 + 0xB0]
	0x024202D8 STR S12, [X31 + 0xAC]
	0x024202DC CBZ W8, 0x24202F0
	0x024202E0 MOV V6.16B, V13.16B
	0x024202E4 MOV V5.16B, V15.16B
	0x024202E8 MOV V7.16B, V14.16B
	0x024202EC MOV V12.16B, V11.16B
	0x024202F0 AND W9, W29, W25, 0x0
	0x024202F4 STR W9, [X31 + 0xC4]
	0x024202F8 LDRB W9, [X19 + 0x82]
	0x024202FC LDR X10, [X31 + 0xE8]
	0x02420300 STR S13, [X31 + 0xC0]
	0x02420304 STP S15, S14, [X31 + 0xA0]
	0x02420308 STR S11, [X31 + 0xA8]
	0x0242030C LDR X16, [X31 + 0x180]
	0x02420310 LDUR X11, [X26 + 0x24]
	0x02420314 LDR W12, [X31 + 0x1AC]
	0x02420318 LDUR X0, [X26 + 0x7C]
	0x0242031C LDR W14, [X31 + 0x204]
	0x02420320 LDP X13, X21, [X26 + 0x88]
	0x02420324 LDR V8, [X31 + 0x188]
	0x02420328 LDR V4, [X31 + 0x190]
	0x0242032C LDR V16, [X31 + 0x194]
	0x02420330 LDR V17, [X31 + 0x198]
	0x02420334 LDR V18, [X31 + 0x19C]
	0x02420338 LDR V19, [X31 + 0x1A0]
	0x0242033C LDR V10, [X31 + 0x1EC]
	0x02420340 LDR V14, [X31 + 0x1F0]
	0x02420344 LDR V15, [X31 + 0x1F4]
	0x02420348 LDR V11, [X31 + 0x1F8]
	0x0242034C LDRB W29, [X19 + 0x81]
	0x02420350 LDR X20, [X31 + 0xD8]
	0x02420354 LDR V13, [X31 + 0xE4]
	0x02420358 CMP W9, 0x0
	0x0242035C EOR W15, W9, 0x1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1FBB000
	009 Move X22, 0x1CD5000
	010 Move W8, [X21+2500]
	011 Move X22, [X22+1432]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {56}
	018 Move X0, 0x1CD5000
	019 Move X0, [X0+2416]
	020 Call 0x1C17CF4
	021 Move X0, 0x1CD5000
	022 Move X0, [X0+2600]
	023 Call 0x1C17CF4
	024 Move X0, 0x1CD5000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move X0, 0x1CDC000
	028 Move X0, [X0+3168]
	029 Call 0x1C17CF4
	030 Move X0, 0x1CD5000
	031 Move X0, [X0+1528]
	032 Call 0x1C17CF4
	033 Move X0, 0x1CFE000
	034 Move X0, [X0+3184]
	035 Call 0x1C17CF4
	036 Move X0, 0x1CD5000
	037 Move X0, [X0+2760]
	038 Call 0x1C17CF4
	039 Move X0, 0x1CD5000
	040 Move X0, [X0+1728]
	041 Call 0x1C17CF4
	042 Move X0, 0x1CFD000
	043 Move X0, [X0+3192]
	044 Call 0x1C17CF4
	045 Move X0, 0x1CFD000
	046 Move X0, [X0+3200]
	047 Call 0x1C17CF4
	048 Move X0, 0x1CFC000
	049 Move X0, [X0+3296]
	050 Call 0x1C17CF4
	051 Move X0, 0x1CFD000
	052 Move X0, [X0+3208]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X21+2500], W8
	056 Move X0, [X22]
	057 Move [X31+8], X31
	058 Move X21, [X19+192]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X21
	064 Move X1, X31
	065 Call Object.op_Implicit, X0
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {277}
	070 Move X0, [X19+56]
	071 Compare X0, 0
	072 JumpIfEqual {288}
	073 Move X8, [X20+32]
	074 Add X1, X31, 8
	075 Move X8, [X8+192]
	076 Move X2, [X8+80]
	077 Call 0x21A5990, X0, X1
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {84}
	082 Move X8, [X31+8]
	083 Move [X19+192], X8
	084 Move X23, 0x1CD4000
	085 Move X8, [X20+32]
	086 Move X23, [X23+1728]
	087 Move X8, [X8+192]
	088 Move X0, [X23]
	089 Move X21, [X8+96]
	090 Move W9, [X0+224]
	091 Compare W9, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move X0, X21
	095 Move X1, X31
	096 Call Type.GetTypeFromHandle, X0
	097 Move X8, 0x1CFD000
	098 Move X8, [X8+3184]
	099 Move X21, X0
	100 Move X1, X31
	101 Move X8, [X8]
	102 Move X0, X8
	103 Call Type.GetTypeFromHandle, X0
	104 Move X1, X0
	105 Move X0, X21
	106 Move X2, X31
	107 Call Type.op_Equality, X0, X1
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {121}
	112 Move X8, 0x1CD4000
	113 Move X8, [X8+1528]
	114 Move X0, [X8]
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {119}
	118 Call 0x1C17DFC
	119 Move X0, X31
	120 Call Physics.get_simulationMode
	121 Move X8, 0x1CDB000
	122 Move X8, [X8+3168]
	123 Move X0, [X8]
	124 Move W8, [X0+224]
	125 Compare W8, 0
	126 JumpIfNotEqual {128}
	127 Call 0x1C17DFC
	128 Move X0, X31
	129 Call Physics2D.get_simulationMode
	130 Move X8, 0x1CD4000
	131 Move X8, [X8+2416]
	132 Move W21, W0
	133 Move X0, [X8]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Move X0, X31
	139 Call Application.get_isPlaying
	140 Move TEMP, X0
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfNotEqual {175}
	144 Move X0, [X22]
	145 Move X22, [X19+56]
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Move X0, X22
	151 Move X1, X31
	152 Call Object.op_Implicit, X0
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfNotEqual {175}
	157 Move X0, [X19+56]
	158 Compare X0, 0
	159 JumpIfEqual {288}
	160 Move X1, X31
	161 Call NetworkRunner.get_IsRunning, X0
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfNotEqual {175}
	166 Move X8, [X19+56]
	167 Compare X8, 0
	168 JumpIfEqual {288}
	169 Move X9, [X8+152]
	170 Compare X9, 0
	171 JumpIfEqual {288}
	172 Move W9, [X9+32]
	173 Compare W9, 0
	174 JumpIfEqual {285}
	175 Move X8, 0x1CD4000
	176 Move X8, [X8+2760]
	177 Move W1, 7
	178 Move X0, [X8]
	179 Call 0x1C17D6C
	180 Compare X0, 0
	181 JumpIfEqual {288}
	182 Move W8, [X0+24]
	183 Move X21, X0
	184 Compare W8, 0
	185 JumpIfEqual {289}
	186 Move X8, 0x1CFC000
	187 Move X8, [X8+3296]
	188 Move X8, [X8]
	189 Move [X21+32], X8
	190 Move X8, [X20+32]
	191 Move X0, [X23]
	192 Move X8, [X8+192]
	193 Move W9, [X0+224]
	194 Move X22, [X8+104]
	195 Compare W9, 0
	196 JumpIfNotEqual {198}
	197 Call 0x1C17DFC
	198 Move X0, X22
	199 Move X1, X31
	200 Call Type.GetTypeFromHandle, X0
	201 Compare X0, 0
	202 JumpIfEqual {288}
	203 Move X8, [X0]
	204 Move X9, [X8+424]
	205 Move X1, [X8+432]
	206 NotImplemented "Instruction BLR not yet implemented."
	207 Move W8, [X21+24]
	208 NotImplemented "Instruction CMP not yet implemented."
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move [X21+40], X0
	211 Move X8, 0x1CFD000
	212 Move X8, [X8+3192]
	213 Move X0, X19
	214 Move X1, X31
	215 Move X8, [X8]
	216 Move [X21+48], X8
	217 Call "il2cpp_vm_object_is_inst", X0
	218 Compare X0, 0
	219 JumpIfEqual {288}
	220 Move X8, [X0]
	221 Move X9, [X8+424]
	222 Move X1, [X8+432]
	223 NotImplemented "Instruction BLR not yet implemented."
	224 Move W8, [X21+24]
	225 NotImplemented "Instruction CMP not yet implemented."
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Move [X21+56], X0
	228 Move X8, 0x1CFD000
	229 Move X8, [X8+3208]
	230 Move X0, X19
	231 Move X1, X31
	232 Move X8, [X8]
	233 Move [X21+64], X8
	234 Call Object.get_name, X0
	235 Move W8, [X21+24]
	236 NotImplemented "Instruction CMP not yet implemented."
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move [X21+72], X0
	239 Move X8, 0x1CFD000
	240 Move X8, [X8+3200]
	241 Move X0, X21
	242 Move X1, X31
	243 Move X8, [X8]
	244 Move [X21+80], X8
	245 Call String.Concat, X0
	246 Move X8, 0x1CD4000
	247 Move X8, [X8+2600]
	248 Move X21, X0
	249 Move X8, [X8]
	250 Move W9, [X8+224]
	251 Compare W9, 0
	252 JumpIfNotEqual {255}
	253 Move X0, X8
	254 Call 0x1C17DFC
	255 Move X0, X21
	256 Move X1, X31
	257 Call Debug.LogWarning, X0
	258 Move X0, [X19+56]
	259 Compare X0, 0
	260 JumpIfEqual {288}
	261 Move X1, X31
	262 Call Component.get_gameObject, X0
	263 Compare X0, 0
	264 JumpIfEqual {288}
	265 Move X8, [X20+32]
	266 Move X8, [X8+192]
	267 Move X1, [X8+112]
	268 Call 0x21E61FC, X0
	269 Move X8, [X19+56]
	270 Move [X19+192], X0
	271 Compare X8, 0
	272 JumpIfEqual {288}
	273 Move X1, X0
	274 Move X0, X8
	275 Move X2, X31
	276 Call NetworkRunner.AddGlobal, X0, X1
	277 Move X20, [X31+48]
	278 Move X19, [X31+56]
	279 Move X22, [X31+32]
	280 Move X21, [X31+40]
	281 Move X30, [X31+16]
	282 Move X23, [X31+24]
	283 Add X31, X31, 64
	284 Return 
	285 NotImplemented "Instruction CMP not yet implemented."
	286 Move W8, [X8+392]
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Call 0x1C17F20
	289 Call 0x1C17F28

Method: System.Void OnParentNotFound()

Disassembly:
	0x02420360 CSET W9, NE
	0x02420364 CMP W10, W27
	0x02420368 CSET W10, NE
	0x0242036C B.EQ 0x2420420
	0x02420370 AND W9, W9, W10, 0x0
	0x02420374 TBNZ X27, 0x1F, 0x2420420
	0x02420378 LDP X10, X11, [X31 + 0xC8]
	0x0242037C LDR V0, [X31 + 0xF]
	0x02420380 LDP S16, S19, [X31 + 0xAC]
	0x02420384 LDR V18, [X31 + 0xB4]
	0x02420388 LDP S14, S10, [X31 + 0xA4]
	0x0242038C LDR V15, [X31 + 0xA0]
	0x02420390 LDR V11, [X31 + 0xC0]
	0x02420394 LDR X0, [X31 + 0x98]
	0x02420398 LDR W14, [X31 + 0x94]
	0x0242039C LDP X21, X13, [X31 + 0x80]
	0x024203A0 MOV X16, X20
	0x024203A4 MOV V4.16B, V13.16B
	0x024203A8 MOV V17.16B, V9.16B
	0x024203AC MOV W12, W10
	0x024203B0 MOV V8.16B, V0.16B
	0x024203B4 TBNZ X9, 0x0, 0x2420424
	0x024203B8 LDP X9, X11, [X31 + 0xC8]
	0x024203BC LDR V3, [X31 + 0xF]
	0x024203C0 LDR V11, [X31 + 0xC0]
	0x024203C4 LDP S15, S14, [X31 + 0xA0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1FBA000
	005 Move X19, 0x1CD4000
	006 Move W8, [X20+2501]
	007 Move X19, [X19+2600]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x1CD4000
	013 Move X0, [X0+2600]
	014 Call 0x1C17CF4
	015 Move X0, 0x1CFD000
	016 Move X0, [X0+3216]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2501], W8
	020 Move X0, [X19]
	021 Move X19, 0x1CFD000
	022 Move W8, [X0+224]
	023 Move X19, [X19+3216]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, [X19]
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X1, X31
	031 Move X30, [X31+32]
	032 Call Debug.LogError, X0
	033 Return 

Method: System.Void ApplyRBPositionRotation(RBType rb, UnityEngine.Vector3 pos, UnityEngine.Quaternion rot)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void CaptureRBPositionRotation(RBType rb, ref Fusion.Addons.Physics.NetworkRBData data)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void CaptureExtras(RBType rb, ref Fusion.Addons.Physics.NetworkRBData data)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void ApplyExtras(RBType rb, ref Fusion.Addons.Physics.NetworkRBData data)

Disassembly:
	

ISIL:
No ISIL was generated
Method: Fusion.Addons.Physics.NetworkRigidbodyFlags GetRBFlags(RBType rb)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean GetRBIsKinematic(RBType rb)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void SetRBIsKinematic(RBType rb, System.Boolean kinematic)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Int32 GetRBConstraints(RBType rb)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void SetRBConstraints(RBType rb, System.Int32 constraints)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean IsRBSleeping(RBType rb)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void ForceRBSleep(RBType rb)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void ForceRBWake(RBType rb)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void Fusion.IBeforeAllTicks.BeforeAllTicks(System.Boolean resimulation, System.Int32 tickCount)

Disassembly:
	0x024203C8 LDP S10, S16, [X31 + 0xA8]
	0x024203CC LDP S19, S18, [X31 + 0xB0]
	0x024203D0 CMP W15, 0x0
	0x024203D4 CSET W20, EQ
	0x024203D8 MOV W12, W9
	0x024203DC STR S9, [X31 + 0x54]
	0x024203E0 MOV V17.16B, V9.16B
	0x024203E4 MOV V4.16B, V13.16B
	0x024203E8 MOV V8.16B, V3.16B
	0x024203EC B 0x2420908
	0x024203F0 ADRP X8, 0x1CD3000
	0x024203F4 LDR X8, [X8 + 0xA28]
	0x024203F8 LDR X0, [X8]
	0x024203FC LDR W8, [X0 + 0xE0]
	0x02420400 CBNZ W8, 0x2420408
	0x02420404 BL 0x1C16DFC
	0x02420408 ADRP X8, 0x1CFC000
	0x0242040C LDR X8, [X8 + 0xCB0]
	0x02420410 MOV X1, X31
	0x02420414 LDR X0, [X8]
	0x02420418 BL 0x3C06A04
	0x0242041C B 0x242012C
	0x02420420 CBZ W9, 0x2420848
	0x02420424 STR X16, [X31 + 0x60]
	0x02420428 STR W15, [X31 + 0x70]
	0x0242042C STP W12, W14, [X31 + 0x34]
	0x02420430 STP X0, X21, [X31 + 0x18]
	0x02420434 STR X13, [X31 + 0x28]
	0x02420438 STP S4, S19, [X31 + 0x3C]
	0x0242043C STP S18, S17, [X31 + 0x44]
	0x02420440 STR S16, [X31 + 0x4C]
	0x02420444 STR X11, [X31 + 0xB8]
	0x02420448 STP S5, S6, [X31 + 0x68]
	0x0242044C STR W29, [X31 + 0x50]
	0x02420450 CBZ X28, 0x2420E84
	0x02420454 MOV X0, X28
	0x02420458 MOV X1, X31
	0x0242045C MOV V13.16B, V7.16B
	0x02420460 UBFM X28, X20, 0x20, 0x3F
	0x02420464 STR X0, [X31 + 0x58]
	0x02420468 BL 0x3C3F49C
	0x0242046C ADRP X21, 0x1FB8000
	0x02420470 LDRB W8, [X21 + 0xA20]
	0x02420474 MOV X29, X0
	0x02420478 CBNZ W8, 0x2420490
	0x0242047C ADRP X0, 0x1CD6000
	0x02420480 LDR X0, [X0 + 0x398]
	0x02420484 BL 0x1C16CF4
	0x02420488 MOVZ W8, 0x1
	0x0242048C STRB W8, [X21 + 0xA20]
	0x02420490 ADRP X8, 0x1CD6000
	0x02420494 LDR X8, [X8 + 0x398]
	0x02420498 LDR X0, [X8]
	0x0242049C LDR W8, [X0 + 0xE0]
	0x024204A0 CBNZ W8, 0x24204A8
	0x024204A4 BL 0x1C16DFC
	0x024204A8 ORR W8, W28, W20, 0x0
	0x024204AC CBZ W8, 0x2420654
	0x024204B0 MOV X0, X31
	0x024204B4 BL 0x1E7D700
	0x024204B8 LDRB W8, [X21 + 0xA20]
	0x024204BC MOV X21, X0
	0x024204C0 CBNZ W8, 0x24204DC
	0x024204C4 ADRP X0, 0x1CD6000
	0x024204C8 LDR X0, [X0 + 0x398]
	0x024204CC BL 0x1C16CF4
	0x024204D0 MOVZ W8, 0x1
	0x024204D4 ADRP X9, 0x1FB8000
	0x024204D8 STRB W8, [X9 + 0xA20]
	0x024204DC ADRP X8, 0x1CD6000
	0x024204E0 LDR X8, [X8 + 0x398]
	0x024204E4 LDR X0, [X8]
	0x024204E8 LDR W8, [X0 + 0xE0]
	0x024204EC CBNZ W8, 0x24204F4
	0x024204F0 BL 0x1C16DFC
	0x024204F4 UBFM X8, X21, 0x20, 0x3F
	0x024204F8 CMP W20, W21
	0x024204FC CSET W9, EQ
	0x02420500 CMP W28, W8
	0x02420504 CSET W8, EQ
	0x02420508 AND W20, W9, W8, 0x0
	0x0242050C TBZ X20, 0x0, 0x242071C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1FBA000
	007 Move W8, [X22+2502]
	008 Move W21, W2
	009 Move W19, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x1CD4000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2502], W8
	020 Move W8, [X20+179]
	021 Move [X20+204], W21
	022 Compare W8, 0
	023 JumpIfEqual {81}
	024 Move X8, 0x1CD4000
	025 Move X8, [X8+1432]
	026 Move X21, [X20+136]
	027 Move X0, [X8]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X21
	033 Move X1, X31
	034 Call Object.op_Implicit, X0
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {81}
	039 Move X0, [X20+136]
	040 Compare X0, 0
	041 JumpIfEqual {107}
	042 Move S0, W31
	043 Move S1, W31
	044 Move S2, W31
	045 Move X1, X31
	046 Call Transform.set_localPosition, X0, X1
	047 Move X22, 0x1FB9000
	048 Move W8, [X22+1939]
	049 Move X21, [X20+136]
	050 Compare W8, 0
	051 JumpIfNotEqual {57}
	052 Move X0, 0x1CD5000
	053 Move X0, [X0+1448]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X22+1939], W8
	057 Compare X21, 0
	058 JumpIfEqual {107}
	059 Move X8, 0x1CD5000
	060 Move X8, [X8+1448]
	061 Move X0, X21
	062 Move X1, X31
	063 Move X8, [X8]
	064 Move X8, [X8+184]
	065 Move S2, [X8+8]
	066 Move S3, [X8+12]
	067 Move S0, [X8]
	068 Move S1, [X8+4]
	069 Call Transform.set_localRotation, X0, X1
	070 Move W8, [X20+129]
	071 Compare W8, 0
	072 JumpIfEqual {81}
	073 Move X0, [X20+136]
	074 Compare X0, 0
	075 JumpIfEqual {107}
	076 Move S0, 1
	077 Move S1, 1
	078 Move S2, 1
	079 Move X1, X31
	080 Call Transform.set_localScale, X0, X1
	081 Move W8, [X20+178]
	082 Compare W8, 0
	083 JumpIfNotEqual {90}
	084 Move W8, [X20+177]
	085 And W8, W19, W8
	086 Move TEMP, X8
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {101}
	090 Move X8, [X20]
	091 And W1, W19, 1
	092 Move X0, X20
	093 Move X20, [X31+32]
	094 Move X19, [X31+40]
	095 Move X3, [X8+1096]
	096 Move X2, [X8+1104]
	097 Move X22, [X31+16]
	098 Move X21, [X31+24]
	099 Move X30, [X31+48]
	100 CallNoReturn X3
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 Move X30, [X31+48]
	106 Return 
	107 Call 0x1C17F20

Method: System.Void Fusion.IAfterTick.AfterTick()

Disassembly:
	0x02420510 MOVZ W8, 0x1
	0x02420514 STR W8, [X31 + 0x70]
	0x02420518 ADRP X8, 0x1CD3000
	0x0242051C LDR W29, [X31 + 0x50]
	0x02420520 LDR X8, [X8 + 0x598]
	0x02420524 ADRP X21, 0x1FB8000
	0x02420528 LDR X0, [X8]
	0x0242052C LDR W8, [X0 + 0xE0]
	0x02420530 CBNZ W8, 0x2420538
	0x02420534 BL 0x1C16DFC
	0x02420538 MOV X0, X23
	0x0242053C MOV X1, X31
	0x02420540 BL 0x3C38948
	0x02420544 TBZ X0, 0x0, 0x24205D4
	0x02420548 CBZ X23, 0x2420E84
	0x0242054C FMOV S0, W31
	0x02420550 FMOV S1, W31
	0x02420554 FMOV S2, W31
	0x02420558 MOV X0, X23
	0x0242055C MOV X1, X31
	0x02420560 BL 0x3C3EC04
	0x02420564 ADRP X21, 0x1FB8000
	0x02420568 LDRB W8, [X21 + 0x793]
	0x0242056C CBNZ W8, 0x2420584
	0x02420570 ADRP X0, 0x1CD4000
	0x02420574 LDR X0, [X0 + 0x5A8]
	0x02420578 BL 0x1C16CF4
	0x0242057C MOVZ W8, 0x1
	0x02420580 STRB W8, [X21 + 0x793]
	0x02420584 ADRP X8, 0x1CD4000
	0x02420588 LDR X8, [X8 + 0x5A8]
	0x0242058C MOV X0, X23
	0x02420590 MOV X1, X31
	0x02420594 LDR X8, [X8]
	0x02420598 LDR X8, [X8 + 0xB8]
	0x0242059C LDP S0, S1, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, [X0+204]
	005 Subtract W8, W20, 1
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move [X0+204], W8
	008 Move X19, X0
	009 Move X0, [X0+64]
	010 Compare X0, 0
	011 JumpIfEqual {48}
	012 Move W8, [X0+96]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 2
	015 Compare TEMP, 2
	016 JumpIfEqual {29}
	017 Move X1, X31
	018 Call NetworkObject.get_HasStateAuthority, X0
	019 Move TEMP, X0
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {26}
	023 Move X8, [X19]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CSET not yet implemented."
	026 Move X0, [X19+64]
	027 Compare X0, 0
	028 JumpIfEqual {48}
	029 Move X1, X31
	030 Call NetworkObject.get_IsInSimulation, X0
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {44}
	035 Move X8, [X19]
	036 Move W1, 1
	037 Move X3, [X8+1080]
	038 Move X2, [X8+1088]
	039 Move X0, X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 CallNoReturn X3
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return 
	048 Call 0x1C17F20

Method: System.Void CopyToBuffer(System.Boolean captureTRSPOnly)

Disassembly:
	0x024205A0 LDP S2, S3, [X8 + 0x8]
	0x024205A4 BL 0x3C3F8B8
	0x024205A8 LDRB W8, [X19 + 0x81]
	0x024205AC ADRP X21, 0x1FB8000
	0x024205B0 CBZ W8, 0x24205D0
	0x024205B4 LDR X0, [X24]
	0x024205B8 CBZ X0, 0x2420E84
	0x024205BC FMOV S0, 1
	0x024205C0 FMOV S1, 1
	0x024205C4 FMOV S2, 1
	0x024205C8 MOV X1, X31
	0x024205CC BL 0x3C3FC4C
	0x024205D0 STRB W31, [X19 + 0xB3]
	0x024205D4 LDP S5, S6, [X31 + 0x68]
	0x024205D8 LDP S17, S16, [X31 + 0x48]
	0x024205DC LDP S19, S18, [X31 + 0x40]
	0x024205E0 LDR V4, [X31 + 0x3C]
	0x024205E4 LDR W14, [X31 + 0x38]
	0x024205E8 LDR W15, [X31 + 0x70]
	0x024205EC LDR X9, [X31 + 0x60]
	0x024205F0 MOV V7.16B, V13.16B
	0x024205F4 TBZ X20, 0x0, 0x242079C
	0x024205F8 LDR V0, [X31 + 0xF]
	0x024205FC MOV S1, V0.S[1]
	0x02420600 TBNZ X15, 0x0, 0x2420B8C
	0x02420604 LDR X20, [X31 + 0x58]
	0x02420608 LDR V2, [X31 + 0xE4]
	0x0242060C MOV X1, X31
	0x02420610 MOV V8.16B, V6.16B
	0x02420614 MOV X0, X20
	0x02420618 MOV V9.16B, V5.16B
	0x0242061C MOV V10.16B, V7.16B
	0x02420620 BL 0x3C3EC04
	0x02420624 MOV X0, X20
	0x02420628 MOV V0.16B, V12.16B
	0x0242062C MOV V1.16B, V10.16B
	0x02420630 MOV V2.16B, V9.16B
	0x02420634 MOV V3.16B, V8.16B
	0x02420638 B 0x2420E54
	0x0242063C LDR X0, [X19 + 0x40]
	0x02420640 CBZ X0, 0x2420E84
	0x02420644 MOV X1, X31
	0x02420648 BL 0x1E936F8
	0x0242064C TBZ X0, 0x0, 0x242012C
	0x02420650 B 0x24201D4
	0x02420654 ADRP X8, 0x1CD3000
	0x02420658 LDR X8, [X8 + 0x598]
	0x0242065C LDR X0, [X8]
	0x02420660 LDR W8, [X0 + 0xE0]
	0x02420664 CBNZ W8, 0x242066C
	0x02420668 BL 0x1C16DFC
	0x0242066C MOV X0, X29
	0x02420670 MOV X1, X31
	0x02420674 MOV X2, X31
	0x02420678 BL 0x3C354F8
	0x0242067C TBZ X0, 0x0, 0x2420698
	0x02420680 LDR X0, [X31 + 0x58]
	0x02420684 MOV X1, X31
	0x02420688 MOV X2, X31
	0x0242068C BL 0x3C3FE70
	0x02420690 MOVZ W8, 0x1
	0x02420694 STRB W8, [X19 + 0xB2]
	0x02420698 LDRB W8, [X21 + 0xA20]
	0x0242069C LDR W29, [X31 + 0x50]
	0x024206A0 CBNZ W8, 0x24206B8
	0x024206A4 ADRP X0, 0x1CD6000
	0x024206A8 LDR X0, [X0 + 0x398]
	0x024206AC BL 0x1C16CF4
	0x024206B0 MOVZ W8, 0x1
	0x024206B4 STRB W8, [X21 + 0xA20]
	0x024206B8 ADRP X8, 0x1CD6000
	0x024206BC LDR X8, [X8 + 0x398]
	0x024206C0 LDR X0, [X8]
	0x024206C4 LDR W8, [X0 + 0xE0]
	0x024206C8 CBNZ W8, 0x24206D0
	0x024206CC BL 0x1C16DFC
	0x024206D0 LDR X8, [X31 + 0x60]
	0x024206D4 CMP W20, W8
	0x024206D8 B.NE 0x2420B5C
	0x024206DC UBFM X8, X8, 0x20, 0x3F
	0x024206E0 CMP W28, W8
	0x024206E4 B.NE 0x2420B5C
	0x024206E8 LDR X28, [X31 + 0x58]
	0x024206EC LDP S5, S6, [X31 + 0x68]
	0x024206F0 MOV V7.16B, V13.16B
	0x024206F4 LDR X11, [X31 + 0xB8]
	0x024206F8 LDP W12, W14, [X31 + 0x34]
	0x024206FC LDR V13, [X31 + 0xE4]
	0x02420700 LDP S17, S16, [X31 + 0x48]
	0x02420704 LDP S19, S18, [X31 + 0x40]
	0x02420708 LDR V4, [X31 + 0x3C]
	0x0242070C LDP X21, X13, [X31 + 0x20]
	0x02420710 LDR X0, [X31 + 0x18]
	0x02420714 LDR W15, [X31 + 0x70]
	0x02420718 B 0x2420848
	0x0242071C LDR X0, [X19 + 0x38]
	0x02420720 CBZ X0, 0x2420E84
	0x02420724 LDR X21, [X31 + 0xD8]
	0x02420728 ADD X2, X31, 0x110
	0x0242072C MOV X3, X31
	0x02420730 MOV X1, X21
	0x02420734 BL 0x1EA32F8
	0x02420738 TBZ X0, 0x0, 0x2420BAC
	0x0242073C LDR X0, [X31 + 0x110]
	0x02420740 CBZ X0, 0x2420E84
	0x02420744 MOV X1, X31
	0x02420748 BL 0x3C32E90
	0x0242074C ADRP X8, 0x1CD3000
	0x02420750 LDR X8, [X8 + 0x598]
	0x02420754 MOV X21, X0
	0x02420758 LDR X8, [X8]
	0x0242075C LDR W9, [X8 + 0xE0]
	0x02420760 CBNZ W9, 0x242076C
	0x02420764 MOV X0, X8
	0x02420768 BL 0x1C16DFC
	0x0242076C MOV X0, X29
	0x02420770 MOV X1, X21
	0x02420774 MOV X2, X31
	0x02420778 BL 0x3C354F8
	0x0242077C TBZ X0, 0x0, 0x2420518
	0x02420780 LDR X0, [X31 + 0x58]
	0x02420784 MOV X1, X21
	0x02420788 MOV X2, X31
	0x0242078C BL 0x3C3FE70
	0x02420790 MOVZ W8, 0x1
	0x02420794 STRB W8, [X19 + 0xB2]
	0x02420798 B 0x2420518
	0x0242079C LDRB W8, [X21 + 0xA20]
	0x024207A0 CBNZ W8, 0x24207D8
	0x024207A4 ADRP X0, 0x1CD6000
	0x024207A8 LDR X0, [X0 + 0x398]
	0x024207AC BL 0x1C16CF4
	0x024207B0 LDR X9, [X31 + 0x60]
	0x024207B4 LDR W15, [X31 + 0x70]
	0x024207B8 LDR W14, [X31 + 0x38]
	0x024207BC LDP S4, S19, [X31 + 0x3C]
	0x024207C0 LDP S18, S17, [X31 + 0x44]
	0x024207C4 LDR V16, [X31 + 0x4C]
	0x024207C8 LDP S5, S6, [X31 + 0x68]
	0x024207CC MOV V7.16B, V13.16B
	0x024207D0 MOVZ W8, 0x1
	0x024207D4 STRB W8, [X21 + 0xA20]
	0x024207D8 ADRP X8, 0x1CD6000
	0x024207DC LDR X8, [X8 + 0x398]
	0x024207E0 LDR X20, [X31 + 0xD8]
	0x024207E4 LDR X0, [X8]
	0x024207E8 LDR W8, [X0 + 0xE0]
	0x024207EC CBNZ W8, 0x2420814
	0x024207F0 BL 0x1C16DFC
	0x024207F4 LDR X9, [X31 + 0x60]
	0x024207F8 LDR W15, [X31 + 0x70]
	0x024207FC LDR W14, [X31 + 0x38]
	0x02420800 LDP S4, S19, [X31 + 0x3C]
	0x02420804 LDP S18, S17, [X31 + 0x44]
	0x02420808 LDR V16, [X31 + 0x4C]
	0x0242080C LDP S5, S6, [X31 + 0x68]
	0x02420810 MOV V7.16B, V13.16B
	0x02420814 CMP W20, W9
	0x02420818 B.NE 0x24205F8
	0x0242081C UBFM X8, X9, 0x20, 0x3F
	0x02420820 CMP W28, W8
	0x02420824 B.NE 0x24205F8
	0x02420828 LDR X28, [X31 + 0x58]
	0x0242082C LDR X11, [X31 + 0xB8]
	0x02420830 LDR W12, [X31 + 0x34]
	0x02420834 LDR V13, [X31 + 0xE4]
	0x02420838 LDP X21, X13, [X31 + 0x20]
	0x0242083C LDR X0, [X31 + 0x18]
	0x02420840 AND W15, W15, 0x1
	0x02420844 STR W31, [X31 + 0xC4]
	0x02420848 LDR X8, [X31 + 0xE8]
	0x0242084C CMP W15, 0x0
	0x02420850 CSET W20, EQ
	0x02420854 STR S9, [X31 + 0x54]
	0x02420858 CMP W8, W27
	0x0242085C B.EQ 0x2420900
	0x02420860 TBZ X27, 0x1F, 0x2420900
	0x02420864 MOV W1, W14
	0x02420868 MOV X2, X31
	0x0242086C MOV W27, W12
	0x02420870 STR X11, [X31 + 0xB8]
	0x02420874 MOV W24, W29
	0x02420878 MOV W29, W20
	0x0242087C MOV X20, X13
	0x02420880 MOV V10.16B, V6.16B
	0x02420884 MOV V11.16B, V5.16B
	0x02420888 MOV V14.16B, V7.16B
	0x0242088C BL 0x1E2E6F8
	0x02420890 LDR V3, [X31 + 0x11C]
	0x02420894 MOV V0.S[1], V1.S[0]
	0x02420898 LDR V1, [X31 + 0xF]
	0x0242089C FMOV S4, 1
	0x024208A0 FMOV S5, W31
	0x024208A4 FCMP S3, 0x0
	0x024208A8 FSUB V0.2S, V0.2S, V1.2S
	0x024208AC FMIN S1, S3, S4
	0x024208B0 FSUB S2, S2, S13
	0x024208B4 FCSEL S1, S1, S5, PL
	0x024208B8 MOV X0, X20
	0x024208BC MOV X1, X21
	0x024208C0 MOV X2, X31
	0x00000000 INVALID
	0x024208C8 MOV V9.16B, V13.16B
	0x024208CC FMUL S13, S2, S1
	0x024208D0 MOV W20, W29
	0x024208D4 MOV W29, W24
	0x024208D8 BL 0x242E7C0
	0x024208DC MOV V6.16B, V10.16B
	0x024208E0 MOV V10.16B, V0.16B
	0x024208E4 LDR V0, [X31 + 0x11C]
	0x024208E8 MOV V7.16B, V14.16B
	0x024208EC MOV V5.16B, V11.16B
	0x024208F0 MOV V14.16B, V1.16B
	0x024208F4 MOV V15.16B, V2.16B
	0x024208F8 MOV V11.16B, V3.16B
	0x024208FC B 0x2420950
	0x02420900 LDRB W8, [X19 + 0x90]
	0x02420904 LDR V3, [X31 + 0xF]
	0x02420908 LDR V0, [X31 + 0x11C]
	0x0242090C FMOV S1, 1
	0x02420910 FMOV S2, W31
	0x02420914 FSUB V3.2S, V8.2S, V3.2S
	0x02420918 FMIN S1, S0, S1
	0x0242091C FCMP S0, 0x0
	0x02420920 FSUB S4, S4, S13
	0x02420924 FCSEL S1, S1, S2, PL
	0x02420928 MOV W27, W12
	0x0242092C MOV V9.16B, V13.16B
	0x00000000 INVALID
	0x02420934 FMUL S13, S4, S1
	0x02420938 STR X11, [X31 + 0xB8]
	0x0242093C CBNZ W8, 0x2420950
	0x02420940 MOV V10.16B, V16.16B
	0x02420944 MOV V14.16B, V17.16B
	0x02420948 MOV V15.16B, V18.16B
	0x0242094C MOV V11.16B, V19.16B
	0x02420950 STR S0, [X31]
	0x02420954 MOV V0.16B, V12.16B
	0x02420958 MOV V1.16B, V7.16B
	0x0242095C MOV V2.16B, V5.16B
	0x02420960 MOV V3.16B, V6.16B
	0x02420964 MOV V4.16B, V10.16B
	0x02420968 MOV V5.16B, V14.16B
	0x0242096C MOV V6.16B, V15.16B
	0x02420970 MOV V7.16B, V11.16B
	0x02420974 MOV X0, X31
	0x02420978 BL 0x3C2A2F8
	0x0242097C MOV V12.16B, V0.16B
	0x02420980 LDR V0, [X31 + 0xF]
	0x02420984 LDR W8, [X31 + 0xC4]
	0x02420988 MOV V11.16B, V1.16B
	0x0242098C MOV V5.16B, V2.16B
	0x02420990 MOV V6.16B, V3.16B
	0x02420994 FADD S13, S9, S13
	0x02420998 FADD V2.2S, V0.2S, V8.2S
	0x0242099C CBZ W8, 0x2420A44
	0x024209A0 CBZ X23, 0x2420E84
	0x024209A4 MOV S1, V2.S[1]
	0x024209A8 MOV X0, X23
	0x024209AC MOV V0.16B, V2.16B
	0x024209B0 MOV V2.16B, V13.16B
	0x024209B4 MOV V3.16B, V12.16B
	0x024209B8 MOV V4.16B, V11.16B
	0x024209BC MOV X1, X31
	0x024209C0 BL 0x3C40000
	0x024209C4 CBZ W29, 0x2420A38
	0x024209C8 LDP X1, X0, [X31 + 0xC8]
	0x024209CC MOV X2, X31
	0x024209D0 BL 0x1E2E6F8
	0x024209D4 LDR X0, [X31 + 0xB8]
	0x024209D8 MOV W1, W27
	0x024209DC MOV X2, X31
	0x024209E0 MOV V8.16B, V0.16B
	0x024209E4 MOV V9.16B, V1.16B
	0x024209E8 MOV V10.16B, V2.16B
	0x024209EC BL 0x1E2E6F8
	0x024209F0 LDR V3, [X31 + 0x11C]
	0x024209F4 FMOV S4, 1
	0x024209F8 FSUB S0, S0, S8
	0x024209FC FSUB S1, S1, S9
	0x02420A00 FMIN S4, S3, S4
	0x02420A04 FCMP S3, 0x0
	0x02420A08 FMOV S3, W31
	0x02420A0C FSUB S2, S2, S10
	0x02420A10 FCSEL S3, S4, S3, PL
	0x02420A14 FMUL S0, S0, S3
	0x02420A18 FMUL S1, S1, S3

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+16], D14
	003 Move [X31+32], D13
	004 Move [X31+40], D12
	005 Move [X31+48], D11
	006 Move [X31+56], D10
	007 Move [X31+64], D9
	008 Move [X31+72], D8
	009 Move [X31+80], X29
	010 Move [X31+88], X30
	011 Move [X31+96], X28
	012 Move [X31+104], X27
	013 Move [X31+112], X26
	014 Move [X31+120], X25
	015 Move [X31+128], X24
	016 Move [X31+136], X23
	017 Move [X31+144], X22
	018 Move [X31+152], X21
	019 Move [X31+160], X20
	020 Move [X31+168], X19
	021 Move X20, 0x1FBA000
	022 Move W8, [X20+2503]
	023 Move W23, W1
	024 Move X19, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {40}
	029 Move X0, 0x1CDE000
	030 Move X0, [X0+2880]
	031 Call 0x1C17CF4
	032 Move X0, 0x1CD4000
	033 Move X0, [X0+1432]
	034 Call 0x1C17CF4
	035 Move X0, 0x1CDB000
	036 Move X0, [X0+3232]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+2503], W8
	040 Move [X31+24], X31
	041 Move X8, [X19]
	042 Move X21, [X19+184]
	043 Move X22, [X19+168]
	044 Move X0, X19
	045 Move X9, [X8+952]
	046 Move X2, [X8+960]
	047 Move X1, X21
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move W8, [X19+130]
	050 Move W20, W0
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CSET not yet implemented."
	053 Compare W8, 0
	054 JumpIfEqual {160}
	055 Move W8, [X19+128]
	056 Compare W8, 0
	057 JumpIfEqual {92}
	058 Compare X22, 0
	059 JumpIfEqual {360}
	060 Move X0, X22
	061 Move X1, X31
	062 Call Transform.get_parent, X0
	063 Move X28, 0x1CD4000
	064 Move X28, [X28+1432]
	065 Move X24, X0
	066 Move X8, [X28]
	067 Move W9, [X8+224]
	068 Compare W9, 0
	069 JumpIfNotEqual {72}
	070 Move X0, X8
	071 Call 0x1C17DFC
	072 Move X0, X24
	073 Move X1, X31
	074 Move X2, X31
	075 Call Object.op_Equality, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {100}
	080 Move X0, X19
	081 Move X1, X31
	082 Call NetworkTRSP.get_State, X0
	083 Move [X0+52], W31
	084 Move X0, X19
	085 Move X1, X31
	086 Call NetworkRigidbodyBase.get_Data, X0
	087 Move [X0], X31
	088 Move TEMP, X20
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {164}
	092 Move X0, X19
	093 Move X1, X31
	094 Call NetworkTRSP.get_State, X0
	095 Move [X0+52], W31
	096 Move TEMP, X20
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {164}
	100 Compare X24, 0
	101 JumpIfEqual {360}
	102 Move X8, 0x1CDE000
	103 Move X8, [X8+2880]
	104 Add X1, X31, 24
	105 Move X0, X24
	106 Move X2, [X8]
	107 Call 0x21A5990, X0, X1
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {200}
	112 Move W8, [X19+180]
	113 Compare W8, 0
	114 JumpIfEqual {124}
	115 Move X8, [X31+24]
	116 Compare X8, 0
	117 JumpIfEqual {360}
	118 Move X9, [X19]
	119 Move X1, [X8+64]
	120 Move X0, X19
	121 Move X8, [X9+584]
	122 Move X2, [X9+592]
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move X0, X19
	125 Move X1, X31
	126 Call NetworkRigidbodyBase.get_Data, X0
	127 Move X25, [X31+24]
	128 Compare X25, 0
	129 JumpIfEqual {360}
	130 Move X29, 0x1FB9000
	131 Move W8, [X29+2594]
	132 Move X26, [X25+56]
	133 Move X24, X0
	134 Compare W8, 0
	135 JumpIfNotEqual {141}
	136 Move X0, 0x1CD4000
	137 Move X0, [X0+1432]
	138 Call 0x1C17CF4
	139 Move W8, 1
	140 Move [X29+2594], W8
	141 Move X0, [X28]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Move X0, X26
	147 Move X1, X31
	148 Call Object.op_Implicit, X0
	149 Move W8, W0
	150 Move X0, X31
	151 Move TEMP, X8
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfNotEqual {159}
	155 Move X0, [X25+56]
	156 Move X1, X25
	157 Move X2, X31
	158 Call NetworkBehaviour.NetworkWrap, X0, X1
	159 Move [X24], X0
	160 Move TEMP, X20
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfEqual {216}
	164 Move X0, X19
	165 Move X1, X31
	166 Call NetworkRigidbodyBase.get_Data, X0
	167 Move X8, [X19]
	168 Move X2, X0
	169 Move X0, X19
	170 Move X1, X21
	171 Move X9, [X8+904]
	172 Move X3, [X8+912]
	173 NotImplemented "Instruction BLR not yet implemented."
	174 Move TEMP, X23
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfEqual {260}
	178 Move W8, [X19+177]
	179 Compare W8, 0
	180 JumpIfNotEqual {190}
	181 Move X0, [X19+64]
	182 Compare X0, 0
	183 JumpIfEqual {360}
	184 Move X1, X31
	185 Call NetworkObject.get_HasStateAuthority, X0
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {260}
	190 Move X0, X19
	191 Move X1, X31
	192 Call NetworkRigidbodyBase.get_Data, X0
	193 Move X8, [X19]
	194 Move X2, X0
	195 Move X0, X19
	196 Move X1, X21
	197 Move X9, [X8+920]
	198 Move X3, [X8+928]
	199 NotImplemented "Instruction BLR not yet implemented."
	200 Move X0, X19
	201 Move X1, X31
	202 Call NetworkTRSP.get_State, X0
	203 Move [X0+52], W31
	204 Move X0, X19
	205 Move X1, X31
	206 Call NetworkRigidbodyBase.get_Data, X0
	207 Move X24, X0
	208 Move X0, X31
	209 Call NetworkTRSPData.get_NonNetworkedParent
	210 Move [X24], X0
	211 Move W27, 1
	212 Move TEMP, X20
	213 And TEMP, TEMP, 1
	214 Compare TEMP, 1
	215 JumpIfNotEqual {164}
	216 Compare X22, 0
	217 JumpIfEqual {360}
	218 Move X0, X22
	219 Move X1, X31
	220 Compare W27, 0
	221 JumpIfEqual {229}
	222 Call Transform.get_position, X0
	223 Move X0, X22
	224 Move X1, X31
	225 Move V8, V0
	226 Move V9, V1
	227 Move V10, V2
	228 Call Transform.get_rotation, X0
	229 Call Transform.get_localPosition, X0
	230 Move X0, X22
	231 Move X1, X31
	232 Move V8, V0
	233 Move V9, V1
	234 Move V10, V2
	235 Call Transform.get_localRotation, X0
	236 Move X0, X19
	237 Move X1, X31
	238 Move V11, V0
	239 Move V12, V1
	240 Move V13, V2
	241 Move V14, V3
	242 Call NetworkRigidbodyBase.get_Data, X0
	243 Move [X0+8], S8
	244 Move [X0+16], S9
	245 Move [X0+16], S10
	246 Move W23, [X19+144]
	247 Move X0, X19
	248 Move X1, X31
	249 Call NetworkRigidbodyBase.get_Data, X0
	250 Compare W23, 0
	251 JumpIfEqual {256}
	252 Move [X0+108], S11
	253 Move [X0+116], S12
	254 Move [X0+116], S13
	255 Move [X0+124], S14
	256 Move [X0+20], S11
	257 Move [X0+28], S12
	258 Move [X0+28], S13
	259 Move [X0+36], S14
	260 Move W8, [X19+129]
	261 Compare W8, 0
	262 JumpIfEqual {276}
	263 Move X0, X19
	264 Move X1, X31
	265 Call NetworkRigidbodyBase.get_Data, X0
	266 Compare X22, 0
	267 JumpIfEqual {360}
	268 Move X23, X0
	269 Move X0, X22
	270 Move X1, X31
	271 Call Transform.get_localScale, X0
	272 Move X0, X31
	273 Call 0x1E2F540
	274 Move [X23+36], X0
	275 Move [X23+44], W1
	276 And W8, W20, 255
	277 Move TEMP, X8
	278 And TEMP, TEMP, 2
	279 Compare TEMP, 2
	280 JumpIfNotEqual {317}
	281 Move X0, X19
	282 Move X1, X31
	283 Call NetworkRigidbodyBase.get_Data, X0
	284 Compare X22, 0
	285 JumpIfEqual {360}
	286 Move X23, X0
	287 Move X0, X22
	288 Move X1, X31
	289 Compare W27, 0
	290 JumpIfEqual {302}
	291 Call Transform.get_position, X0
	292 Move X0, X19
	293 Move X1, X31
	294 Move [X23+96], S0
	295 Move [X23+104], S1
	296 Move [X23+104], S2
	297 Call NetworkRigidbodyBase.get_Data, X0
	298 Move X23, X0
	299 Move X0, X22
	300 Move X1, X31
	301 Call Transform.get_rotation, X0
	302 Call Transform.get_localPosition, X0
	303 Move X0, X19
	304 Move X1, X31
	305 Move [X23+96], S0
	306 Move [X23+104], S1
	307 Move [X23+104], S2
	308 Call NetworkRigidbodyBase.get_Data, X0
	309 Move X23, X0
	310 Move X0, X22
	311 Move X1, X31
	312 Call Transform.get_localRotation, X0
	313 Move [X23+108], S0
	314 Move [X23+116], S1
	315 Move [X23+116], S2
	316 Move [X23+124], S3
	317 Move X23, 0x1CDB000
	318 Move X23, [X23+3232]
	319 Move X0, X19
	320 Move X1, X31
	321 Call NetworkRigidbodyBase.get_Data, X0
	322 Move X8, [X19]
	323 Move X22, X0
	324 Move X0, X19
	325 Move X1, X21
	326 Move X9, [X8+1000]
	327 Move X2, [X8+1008]
	328 NotImplemented "Instruction BLR not yet implemented."
	329 Move X3, [X23]
	330 Move W2, W0
	331 Add X0, X31, 8
	332 Move W1, W20
	333 Move [X31+8], X31
	334 Call ValueTuple`2<ByteEnum, Int32>..ctor, X0, X1, X2
	335 Move X1, [X31+8]
	336 Move X0, X22
	337 Move X2, X31
	338 Call NetworkRBData.set_Flags, X0, X1
	339 Move X20, [X31+160]
	340 Move X19, [X31+168]
	341 Move X22, [X31+144]
	342 Move X21, [X31+152]
	343 Move X24, [X31+128]
	344 Move X23, [X31+136]
	345 Move X26, [X31+112]
	346 Move X25, [X31+120]
	347 Move X28, [X31+96]
	348 Move X27, [X31+104]
	349 Move X29, [X31+80]
	350 Move X30, [X31+88]
	351 Move D9, [X31+64]
	352 Move D8, [X31+72]
	353 Move D11, [X31+48]
	354 Move D10, [X31+56]
	355 Move D13, [X31+32]
	356 Move D12, [X31+40]
	357 Move V14, [X31+16]
	358 Add X31, X31, 176
	359 Return 
	360 Call 0x1C17F20

Method: System.Void CopyToEngine(System.Boolean predictionReset)

Disassembly:
	0x02420A1C FMUL S2, S2, S3
	0x02420A20 FADD S0, S8, S0
	0x02420A24 FADD S1, S9, S1
	0x02420A28 FADD S2, S10, S2
	0x02420A2C MOV X0, X23
	0x02420A30 MOV X1, X31
	0x02420A34 BL 0x3C3FC4C
	0x02420A38 MOVZ W8, 0x1
	0x02420A3C STRB W8, [X19 + 0xB3]
	0x02420A40 B 0x242012C
	0x02420A44 MOV V10.16B, V9.16B
	0x02420A48 MOV V9.16B, V5.16B
	0x02420A4C STR S6, [X31 + 0xE4]
	0x02420A50 CBZ W29, 0x2420AC8
	0x02420A54 LDP X1, X0, [X31 + 0xC8]
	0x02420A58 MOV X2, X31
	0x02420A5C STR V2, [X31 + 0x7]
	0x02420A60 BL 0x1E2E6F8
	0x02420A64 LDR X0, [X31 + 0xB8]
	0x02420A68 MOV W1, W27
	0x02420A6C MOV X2, X31
	0x02420A70 MOV V14.16B, V0.16B
	0x02420A74 MOV V15.16B, V1.16B
	0x02420A78 MOV V8.16B, V2.16B
	0x02420A7C BL 0x1E2E6F8
	0x02420A80 LDR V3, [X31 + 0x11C]
	0x02420A84 FMOV S4, 1
	0x02420A88 FSUB S0, S0, S14
	0x02420A8C FSUB S2, S2, S8
	0x02420A90 FMIN S4, S3, S4
	0x02420A94 FCMP S3, 0x0
	0x02420A98 FMOV S3, W31
	0x02420A9C FCSEL S3, S4, S3, PL
	0x02420AA0 FMUL S0, S0, S3
	0x02420AA4 FMUL S2, S2, S3
	0x02420AA8 FADD S14, S14, S0
	0x02420AAC FADD S0, S8, S2
	0x02420AB0 LDR V2, [X31 + 0x7]
	0x02420AB4 FSUB S1, S1, S15
	0x02420AB8 FMUL S1, S1, S3
	0x02420ABC FADD S15, S15, S1
	0x02420AC0 STR S0, [X31 + 0xC4]
	0x02420AC4 B 0x2420AD8
	0x02420AC8 FMOV S0, W31
	0x02420ACC STR S0, [X31 + 0xC4]
	0x02420AD0 FMOV S15, W31
	0x02420AD4 FMOV S14, W31
	0x02420AD8 LDR V3, [X31 + 0x54]
	0x02420ADC LDR V4, [X31 + 0xC0]
	0x02420AE0 TBNZ X25, 0x0, 0x2420AEC
	0x02420AE4 LDRB W8, [X19 + 0xB3]
	0x02420AE8 CBZ W8, 0x2420C30
	0x02420AEC CBZ X28, 0x2420E84
	0x02420AF0 MOV S1, V2.S[1]
	0x02420AF4 MOV X0, X28
	0x02420AF8 MOV V0.16B, V2.16B
	0x02420AFC MOV V2.16B, V13.16B
	0x02420B00 TBZ X20, 0x0, 0x2420B2C
	0x02420B04 MOV X1, X31
	0x02420B08 BL 0x3C3EC04
	0x02420B0C LDR V3, [X31 + 0xE4]
	0x02420B10 MOV X0, X28
	0x02420B14 MOV V0.16B, V12.16B
	0x02420B18 MOV V1.16B, V11.16B
	0x02420B1C MOV V2.16B, V9.16B
	0x02420B20 MOV X1, X31
	0x02420B24 BL 0x3C3F8B8
	0x02420B28 B 0x2420B44
	0x02420B2C LDR V6, [X31 + 0xE4]
	0x02420B30 MOV V3.16B, V12.16B
	0x02420B34 MOV V4.16B, V11.16B
	0x02420B38 MOV V5.16B, V9.16B
	0x02420B3C MOV X1, X31
	0x02420B40 BL 0x3C40000
	0x02420B44 CBZ W29, 0x2420E78
	0x02420B48 LDR V2, [X31 + 0xC4]
	0x02420B4C MOV X0, X28
	0x02420B50 MOV V0.16B, V14.16B
	0x02420B54 MOV V1.16B, V15.16B
	0x02420B58 B 0x2420E70
	0x02420B5C LDR V0, [X31 + 0xF]
	0x02420B60 LDR W8, [X31 + 0xC4]
	0x02420B64 MOV S1, V0.S[1]
	0x02420B68 CBZ W8, 0x2420E30
	0x02420B6C LDR V2, [X31 + 0xE4]
	0x02420B70 LDP S5, S6, [X31 + 0x68]
	0x02420B74 MOV X0, X23
	0x02420B78 MOV V3.16B, V12.16B
	0x02420B7C MOV V4.16B, V13.16B
	0x02420B80 MOV X1, X31
	0x02420B84 BL 0x3C40000
	0x02420B88 B 0x2420A38
	0x02420B8C LDR X20, [X31 + 0x58]
	0x02420B90 LDR V2, [X31 + 0xE4]
	0x02420B94 MOV V3.16B, V12.16B
	0x02420B98 MOV V4.16B, V7.16B
	0x02420B9C MOV X0, X20
	0x02420BA0 MOV X1, X31
	0x02420BA4 BL 0x3C40000
	0x02420BA8 B 0x2420E5C
	0x02420BAC ADRP X8, 0x1CDD000
	0x02420BB0 LDR X8, [X8 + 0x6C0]
	0x02420BB4 ADD X1, X31, 0x180
	0x02420BB8 STR X21, [X31 + 0x180]
	0x02420BBC LDR X0, [X8]
	0x02420BC0 BL 0x1C16E04
	0x02420BC4 ADRP X8, 0x1CD3000
	0x02420BC8 LDR X8, [X8 + 0x758]
	0x02420BCC MOV X19, X0
	0x02420BD0 ADD X1, X31, 0x10C
	0x02420BD4 STR W28, [X31 + 0x10C]
	0x02420BD8 LDR X0, [X8]
	0x02420BDC BL 0x1C16E04
	0x02420BE0 ADRP X8, 0x1CFC000
	0x02420BE4 LDR X8, [X8 + 0xCA8]
	0x02420BE8 MOV X2, X0
	0x02420BEC MOV X1, X19
	0x02420BF0 MOV X3, X31
	0x02420BF4 LDR X8, [X8]
	0x02420BF8 MOV X0, X8
	0x02420BFC BL 0x3227BD4
	0x02420C00 ADRP X8, 0x1CD3000
	0x02420C04 LDR X8, [X8 + 0xA28]
	0x02420C08 MOV X19, X0
	0x02420C0C LDR X8, [X8]
	0x02420C10 LDR W9, [X8 + 0xE0]
	0x02420C14 CBNZ W9, 0x2420C20
	0x02420C18 MOV X0, X8
	0x02420C1C BL 0x1C16DFC
	0x02420C20 MOV X0, X19
	0x02420C24 MOV X1, X31
	0x02420C28 BL 0x3C0649C
	0x02420C2C B 0x242012C
	0x02420C30 LDRB W8, [X19 + 0x91]
	0x02420C34 CBZ W8, 0x2420AEC
	0x02420C38 LDP S1, S8, [X19 + 0x98]
	0x02420C3C LDRB W8, [X19 + 0x94]
	0x02420C40 LDR V0, [X19 + 0xA0]
	0x02420C44 STR V2, [X31 + 0x7]
	0x02420C48 STR S0, [X31 + 0xC0]
	0x02420C4C TBZ X8, 0x0, 0x2420D10
	0x02420C50 LDR X8, [X19]
	0x02420C54 LDR V0, [X31 + 0xF]
	0x02420C58 LDR V2, [X31 + 0xAC]
	0x02420C5C LDP X11, X10, [X31 + 0xD0]
	0x02420C60 LDR X9, [X8 + 0x468]
	0x02420C64 STR S3, [X31 + 0x198]
	0x02420C68 LDR V3, [X31 + 0xB4]
	0x02420C6C STR D0, [X31 + 0x188]
	0x02420C70 STR S1, [X31 + 0xF0]
	0x02420C74 LDP V0, V1, [X31 + 0x140]
	0x02420C78 STR S3, [X31 + 0x19C]
	0x02420C7C LDR V3, [X31 + 0xB0]
	0x02420C80 STR S10, [X31 + 0x190]
	0x02420C84 STR S2, [X31 + 0x194]
	0x02420C88 STR X10, [X31 + 0x180]
	0x02420C8C STR S3, [X31 + 0x1A0]
	0x02420C90 STUR X11, [X26 + 0x24]
	0x02420C94 LDR X11, [X31 + 0xC8]
	0x02420C98 LDR V2, [X31 + 0x16]
	0x02420C9C LDR W10, [X31 + 0x170]
	0x02420CA0 ADD X1, X31, 0x180
	0x02420CA4 STR W11, [X31 + 0x1AC]
	0x02420CA8 LDR X11, [X31 + 0xE8]
	0x02420CAC STUR V0, [X26 + 0x38]
	0x02420CB0 LDR V0, [X31 + 0xA8]
	0x02420CB4 STUR V1, [X26 + 0x48]
	0x02420CB8 STR X11, [X26 + 0x30]
	0x02420CBC STUR V2, [X26 + 0x58]
	0x02420CC0 STR S0, [X31 + 0x1EC]
	0x02420CC4 LDR V0, [X31 + 0xA4]
	0x02420CC8 STR W10, [X31 + 0x1E8]
	0x02420CCC LDR X10, [X31 + 0x98]
	0x02420CD0 STR S4, [X31 + 0x1F8]
	0x02420CD4 STR S0, [X31 + 0x1F0]
	0x02420CD8 LDR V0, [X31 + 0xA0]
	0x02420CDC LDR X11, [X31 + 0x88]
	0x02420CE0 MOV X0, X19
	0x02420CE4 STR S0, [X31 + 0x1F4]
	0x02420CE8 STUR X10, [X26 + 0x7C]
	0x02420CEC LDR W10, [X31 + 0x94]
	0x02420CF0 STR W10, [X31 + 0x204]
	0x02420CF4 LDR X10, [X31 + 0x80]
	0x02420CF8 STP X11, X10, [X26 + 0x88]
	0x02420CFC LDR X2, [X8 + 0x470]
	0x02420D00 BLR X9
	0x02420D04 LDR V1, [X31 + 0xF0]
	0x02420D08 LDR V2, [X31 + 0x7]
	0x02420D0C TBZ X0, 0x0, 0x2420AEC
	0x02420D10 FCMP S1, 0x0
	0x02420D14 MOV V10.16B, V8.16B
	0x02420D18 B.EQ 0x2420D5C
	0x02420D1C CBZ X28, 0x2420E84
	0x02420D20 MOV X0, X28
	0x02420D24 MOV X1, X31
	0x02420D28 MOV V8.16B, V1.16B
	0x02420D2C BL 0x3C3F58C
	0x02420D30 FSUB S2, S13, S2
	0x02420D34 MOV V0.S[1], V1.S[0]
	0x02420D38 FMUL S1, S2, S2
	0x02420D3C LDR V2, [X31 + 0x7]
	0x02420D40 FSUB V0.2S, V2.2S, V0.2S
	0x00000000 INVALID
	0x02420D48 FADDP S0, V0.2S
	0x02420D4C FADD S0, S1, S0
	0x02420D50 FMUL S1, S8, S8
	0x02420D54 FCMP S0, S1
	0x02420D58 B.PL 0x2420AF0
	0x02420D5C FCMP S10, 0x0
	0x02420D60 B.EQ 0x2420DD4
	0x02420D64 CBZ X28, 0x2420E84
	0x02420D68 MOV X0, X28
	0x02420D6C MOV X1, X31
	0x02420D70 BL 0x3C3DEB4
	0x02420D74 LDR V4, [X31 + 0xE4]
	0x02420D78 FMUL S0, S12, S0
	0x02420D7C FMUL S1, S11, S1
	0x02420D80 FMUL S2, S9, S2
	0x02420D84 ADRP X8, 0xFFFFFFFFFE6CA000
	0x02420D88 FADD S0, S0, S1
	0x02420D8C FMUL S3, S4, S3
	0x02420D90 LDR V1, [X8 + 0x1B4]
	0x02420D94 FADD S0, S2, S0
	0x02420D98 FADD S0, S3, S0
	0x02420D9C FABS S0, S0
	0x02420DA0 FMOV S2, 1
	0x02420DA4 FMINNM S0, S0, S2
	0x02420DA8 FCMP S0, S1
	0x02420DAC FMOV S1, W31
	0x02420DB0 B.GT 0x2420DC8
	0x02420DB4 BL 0x3EB1BB0
	0x02420DB8 ADRP X8, 0xFFFFFFFFFE6CA000
	0x02420DBC LDR V1, [X8 + 0x448]
	0x02420DC0 FADD S0, S0, S0
	0x02420DC4 FMUL S1, S0, S1
	0x02420DC8 LDR V2, [X31 + 0x7]
	0x02420DCC FCMP S1, S10
	0x02420DD0 B.PL 0x2420AF0
	0x02420DD4 LDR V0, [X31 + 0xC0]
	0x02420DD8 FCMP S0, 0x0
	0x02420DDC B.EQ 0x242012C
	0x02420DE0 CBZ W29, 0x242012C
	0x02420DE4 CBZ X28, 0x2420E84
	0x02420DE8 MOV X0, X28
	0x02420DEC MOV X1, X31
	0x02420DF0 BL 0x3C3FBAC
	0x02420DF4 LDR V3, [X31 + 0xC4]
	0x02420DF8 FSUB S0, S14, S0
	0x02420DFC FSUB S1, S15, S1
	0x02420E00 FMUL S0, S0, S0
	0x02420E04 FMUL S1, S1, S1
	0x02420E08 FSUB S2, S3, S2
	0x02420E0C FADD S0, S0, S1
	0x02420E10 LDR V1, [X31 + 0xC0]
	0x02420E14 FMUL S2, S2, S2
	0x02420E18 FADD S0, S2, S0
	0x02420E1C LDR V2, [X31 + 0x7]
	0x02420E20 FMUL S1, S1, S1
	0x02420E24 FCMP S0, S1
	0x02420E28 B.MI 0x242012C
	0x02420E2C B 0x2420AF0
	0x02420E30 LDR X20, [X31 + 0x58]
	0x02420E34 LDR V2, [X31 + 0xE4]
	0x02420E38 MOV X1, X31
	0x02420E3C MOV X0, X20
	0x02420E40 BL 0x3C3EC04
	0x02420E44 LDP S2, S3, [X31 + 0x68]
	0x02420E48 MOV X0, X20
	0x02420E4C MOV V0.16B, V12.16B
	0x02420E50 MOV V1.16B, V13.16B
	0x02420E54 MOV X1, X31
	0x02420E58 BL 0x3C3F8B8
	0x02420E5C CBZ W29, 0x2420E78
	0x02420E60 LDP X1, X0, [X31 + 0xC8]
	0x02420E64 MOV X2, X31
	0x02420E68 BL 0x1E2E6F8
	0x02420E6C MOV X0, X20
	0x02420E70 MOV X1, X31
	0x02420E74 BL 0x3C3FC4C
	0x02420E78 MOVZ W8, 0x1
	0x02420E7C STRB W8, [X19 + 0xB2]
	0x02420E80 B 0x242012C
	0x02420E84 BL 0x1C16F20
	0x02420E88 BL 0x3EB1B20
	0x02420E8C SUB X31, X31, 0xA0
	0x02420E90 STP X30, X23, [X31 + 0x70]
	0x02420E94 STP X22, X21, [X31 + 0x80]
	0x02420E98 STP X20, X19, [X31 + 0x90]
	0x02420E9C ADRP X23, 0x1FB9000
	0x02420EA0 LDRB W8, [X23 + 0x9CA]
	0x02420EA4 MOV X22, X3
	0x02420EA8 MOV X20, X2
	0x02420EAC MOV X21, X1
	0x02420EB0 MOV X19, X0
	0x02420EB4 TBNZ X8, 0x0, 0x2420ED8
	0x02420EB8 ADRP X0, 0x1CD4000
	0x02420EBC LDR X0, [X0 + 0xE70]
	0x02420EC0 BL 0x1C16CF4
	0x02420EC4 ADRP X0, 0x1CFC000
	0x02420EC8 LDR X0, [X0 + 0xCB8]
	0x02420ECC BL 0x1C16CF4
	0x02420ED0 MOVZ W8, 0x1
	0x02420ED4 STRB W8, [X23 + 0x9CA]
	0x02420ED8 CBZ X19, 0x2420FBC
	0x02420EDC LDR X0, [X19 + 0x40]
	0x02420EE0 CBZ X0, 0x2420FBC
	0x02420EE4 MOV X1, X31
	0x02420EE8 BL 0x1E93540
	0x02420EEC TBZ X0, 0x0, 0x2420FA8
	0x02420EF0 LDR V0, [X22]
	0x02420EF4 LDR W8, [X22 + 0x10]
	0x02420EF8 STR X31, [X31 + 0x40]
	0x02420EFC ADRP X9, 0x1CFC000
	0x02420F00 LDR X9, [X9 + 0xCB8]
	0x02420F04 MOVI V1.2D, 0x0
	0x02420F08 ADD X0, X31, 0x20
	0x02420F0C ADD X3, X31, 0x50
	0x02420F10 LDR X5, [X9]
	0x02420F14 MOVZ W4, 0x1
	0x02420F18 MOV X1, X21
	0x02420F1C MOV X2, X20
	0x02420F20 STP V1, V1, [X31 + 0x20]
	0x02420F24 STR W8, [X31 + 0x10]
	0x02420F28 STR V0, [X31]
	0x02420F2C STR V0, [X31 + 0x5]
	0x02420F30 STR W8, [X31 + 0x60]
	0x02420F34 BL 0x27B91C8
	0x02420F38 LDR X8, [X31 + 0x40]
	0x02420F3C LDP V0, V1, [X31 + 0x20]
	0x02420F40 LDR X20, [X19 + 0xC0]
	0x02420F44 STR X8, [X19 + 0xF0]
	0x02420F48 STP V0, V1, [X19 + 0xD0]
	0x02420F4C CBZ X20, 0x2420FBC
	0x02420F50 LDRB W8, [X20 + 0x80]
	0x02420F54 CBZ W8, 0x2420F70
	0x02420F58 LDR X8, [X19]
	0x02420F5C MOV X0, X19
	0x02420F60 LDR X9, [X8 + 0x478]
	0x02420F64 LDR X1, [X8 + 0x480]
	0x02420F68 BLR X9
	0x02420F6C B 0x2420FA8
	0x02420F70 ADRP X8, 0x1CD4000
	0x02420F74 LDR X8, [X8 + 0xE70]
	0x02420F78 LDR X0, [X8]
	0x02420F7C BL 0x1C16F10
	0x02420F80 LDR X8, [X19]
	0x02420F84 MOV X1, X19
	0x02420F88 MOV X3, X31
	0x02420F8C MOV X21, X0
	0x02420F90 LDR X2, [X8 + 0x480]
	0x02420F94 BL 0x3314368
	0x02420F98 MOV X0, X20
	0x02420F9C MOV X1, X21
	0x02420FA0 MOV X2, X31
	0x02420FA4 BL 0x1E2DD98
	0x02420FA8 LDP X20, X19, [X31 + 0x90]
	0x02420FAC LDP X22, X21, [X31 + 0x80]
	0x02420FB0 LDP X30, X23, [X31 + 0x70]
	0x02420FB4 ADD X31, X31, 0xA0
	0x02420FB8 RET
	0x02420FBC BL 0x1C16F20
	0x02420FC0 STR X30, [X31 - 0x40]!
	0x02420FC4 STP X24, X23, [X31 + 0x10]
	0x02420FC8 STP X22, X21, [X31 + 0x20]
	0x02420FCC STP X20, X19, [X31 + 0x30]
	0x02420FD0 ADRP X20, 0x1FB9000
	0x02420FD4 LDRB W8, [X20 + 0x9CB]
	0x02420FD8 MOV X19, X0
	0x02420FDC TBNZ X8, 0x0, 0x2421018
	0x02420FE0 ADRP X0, 0x1CD6000
	0x02420FE4 LDR X0, [X0 + 0xDD8]
	0x02420FE8 BL 0x1C16CF4
	0x02420FEC ADRP X0, 0x1CD6000
	0x02420FF0 LDR X0, [X0 + 0xDE0]
	0x02420FF4 BL 0x1C16CF4
	0x02420FF8 ADRP X0, 0x1CDD000
	0x02420FFC LDR X0, [X0 + 0xB58]
	0x02421000 BL 0x1C16CF4
	0x02421004 ADRP X0, 0x1CDC000
	0x02421008 LDR X0, [X0 + 0xB60]
	0x0242100C BL 0x1C16CF4
	0x02421010 MOVZ W8, 0x1
	0x02421014 STRB W8, [X20 + 0x9CB]
	0x02421018 LDRB W22, [X19 + 0xF4]
	0x0242101C CBZ W22, 0x2421084
	0x02421020 MOV X0, X19
	0x02421024 MOV X1, X31
	0x02421028 BL 0x1E2C934
	0x0242102C LDR X8, [X19 + 0xA8]
	0x02421030 CBZ X8, 0x24211B4
	0x02421034 MOV X20, X0
	0x02421038 MOV X0, X8
	0x0242103C MOV X1, X31
	0x02421040 BL 0x3C3F58C
	0x02421044 MOV X0, X31
	0x02421048 BL 0x1E2E540
	0x0242104C STUR X0, [X20 + 0x7C]
	0x02421050 STR W1, [X20 + 0x84]
	0x02421054 MOV X0, X19
	0x02421058 MOV X1, X31
	0x0242105C BL 0x1E2C934
	0x02421060 LDR X8, [X19 + 0xA8]
	0x02421064 CBZ X8, 0x24211B4
	0x02421068 MOV X20, X0
	0x0242106C MOV X0, X8

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+16], D14
	003 Move [X31+32], D13
	004 Move [X31+40], D12
	005 Move [X31+48], D11
	006 Move [X31+56], D10
	007 Move [X31+64], D9
	008 Move [X31+72], D8
	009 Move [X31+80], X29
	010 Move [X31+88], X30
	011 Move [X31+96], X28
	012 Move [X31+104], X27
	013 Move [X31+112], X26
	014 Move [X31+120], X25
	015 Move [X31+128], X24
	016 Move [X31+136], X23
	017 Move [X31+144], X22
	018 Move [X31+152], X21
	019 Move [X31+160], X20
	020 Move [X31+168], X19
	021 Move X20, 0x1FBA000
	022 Move W8, [X20+2504]
	023 Move W29, W1
	024 Move X19, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {40}
	029 Move X0, 0x1CD4000
	030 Move X0, [X0+2600]
	031 Call 0x1C17CF4
	032 Move X0, 0x1CD4000
	033 Move X0, [X0+1432]
	034 Call 0x1C17CF4
	035 Move X0, 0x1CFD000
	036 Move X0, [X0+3224]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+2504], W8
	040 Move [X31+24], X31
	041 Compare X19, 0
	042 JumpIfEqual {476}
	043 Move X0, X19
	044 Move X1, X31
	045 Call NetworkRigidbodyBase.get_Data, X0
	046 Move X1, X31
	047 Call NetworkRBData.get_Flags, X0
	048 Move W8, [X19+130]
	049 Move X23, [X19+168]
	050 Move X9, [X19+184]
	051 Move X22, X0
	052 Xor W20, W8, 1
	053 Move [X31+8], X9
	054 Compare W8, 0
	055 JumpIfEqual {141}
	056 Move X0, X19
	057 Move X1, X31
	058 Call NetworkRigidbodyBase.get_Data, X0
	059 Move X25, [X0]
	060 Move X0, X31
	061 Call NetworkTRSPData.get_NonNetworkedParent
	062 Move X21, 0x1FB9000
	063 Move W8, [X21+2592]
	064 Move X24, X0
	065 Compare W8, 0
	066 JumpIfNotEqual {72}
	067 Move X0, 0x1CD7000
	068 Move X0, [X0+920]
	069 Call 0x1C17CF4
	070 Move W8, 1
	071 Move [X21+2592], W8
	072 Move X26, 0x1CD7000
	073 Move X26, [X26+920]
	074 Move X0, [X26]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X8, X24
	080 ShiftRight X8, 32
	081 And X8, X8, 0x7FFFFFFF
	082 Move X9, X25
	083 ShiftRight X9, 32
	084 And X9, X9, 0x7FFFFFFF
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction CSET not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 NotImplemented "Instruction CSET not yet implemented."
	089 Compare X23, 0
	090 JumpIfEqual {476}
	091 Move X0, X23
	092 Move X1, X31
	093 Call Transform.get_parent, X0
	094 Move X24, X0
	095 Move X0, X19
	096 Move X1, X31
	097 Call NetworkRigidbodyBase.get_Data, X0
	098 Move W8, [X21+2592]
	099 Move X28, [X0]
	100 Compare W8, 0
	101 JumpIfNotEqual {107}
	102 Move X0, 0x1CD7000
	103 Move X0, [X0+920]
	104 Call 0x1C17CF4
	105 Move W8, 1
	106 Move [X21+2592], W8
	107 Move X0, [X26]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X8, X28
	113 ShiftRight X8, 32
	114 And X8, X8, 0x7FFFFFFF
	115 Compare X8, 0
	116 JumpIfNotEqual {146}
	117 Compare W28, 0
	118 JumpIfNotEqual {146}
	119 Move X8, 0x1CD4000
	120 Move X8, [X8+1432]
	121 Move X0, [X8]
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {126}
	125 Call 0x1C17DFC
	126 Move X0, X24
	127 Move X1, X31
	128 Call Object.op_Implicit, X0
	129 NotImplemented "Instruction CMP not yet implemented."
	130 NotImplemented "Instruction CSET not yet implemented."
	131 Move W28, W20
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfNotEqual {140}
	136 Move X0, X23
	137 Move X1, X31
	138 Move X2, X31
	139 Call Transform.SetParent, X0, X1
	140 Move W21, W31
	141 Move W28, W20
	142 Move W21, W31
	143 Move W27, 1
	144 Move W8, 1
	145 Move [X31+4], W8
	146 And W8, W25, W27
	147 Move TEMP, X8
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfNotEqual {154}
	151 Move W28, W20
	152 Move [X31+4], W31
	153 Move W27, 1
	154 Move X25, [X19+56]
	155 Move X0, X19
	156 Move X1, X31
	157 Call NetworkRigidbodyBase.get_Data, X0
	158 Compare X25, 0
	159 JumpIfEqual {476}
	160 Move X1, [X0]
	161 Add X2, X31, 24
	162 Move X0, X25
	163 Move X3, X31
	164 Call NetworkRunner.TryFindBehaviour, X0, X1, X2
	165 Move TEMP, X0
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfNotEqual {211}
	169 Move X0, [X31+24]
	170 Compare X0, 0
	171 JumpIfEqual {476}
	172 Move X1, X31
	173 Call Component.get_transform, X0
	174 Move X1, X0
	175 NotImplemented "Instruction CMP not yet implemented."
	176 NotImplemented "Instruction CSET not yet implemented."
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X0, X23
	179 Move X2, X31
	180 Call Transform.SetParent, X0, X1
	181 Move X24, [X19+136]
	182 Compare X24, 0
	183 JumpIfEqual {232}
	184 Move S0, W31
	185 Move S1, W31
	186 Move S2, W31
	187 Move X0, X24
	188 Move X1, X31
	189 Call Transform.set_localPosition, X0, X1
	190 Move X21, 0x1FB9000
	191 Move W8, [X21+1939]
	192 Compare W8, 0
	193 JumpIfNotEqual {199}
	194 Move X0, 0x1CD5000
	195 Move X0, [X0+1448]
	196 Call 0x1C17CF4
	197 Move W8, 1
	198 Move [X21+1939], W8
	199 Move X8, 0x1CD5000
	200 Move X8, [X8+1448]
	201 Move X0, X24
	202 Move X1, X31
	203 Move W28, W20
	204 Move X8, [X8]
	205 Move X8, [X8+184]
	206 Move S0, [X8]
	207 Move S1, [X8+4]
	208 Move S2, [X8+8]
	209 Move S3, [X8+12]
	210 Call Transform.set_localRotation, X0, X1
	211 Move X8, 0x1CD4000
	212 Move X8, [X8+2600]
	213 Move X0, [X8]
	214 Move W8, [X0+224]
	215 Compare W8, 0
	216 JumpIfNotEqual {218}
	217 Call 0x1C17DFC
	218 Move X8, 0x1CFD000
	219 Move X8, [X8+3224]
	220 Move X1, X31
	221 Move X0, [X8]
	222 Call Debug.LogError, X0
	223 Move X8, [X19]
	224 Move X0, X19
	225 Move X9, [X8+872]
	226 Move X1, [X8+880]
	227 NotImplemented "Instruction BLR not yet implemented."
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Move [X31+4], W31
	230 Move W28, W20
	231 NotImplemented "Instruction CSET not yet implemented."
	232 Move W28, W20
	233 Move [X31+4], W31
	234 Move W21, 1
	235 Move X8, [X19]
	236 Move X1, [X31+8]
	237 Move X0, X19
	238 Move W20, W29
	239 Move X9, [X8+1032]
	240 Move X2, [X8+1040]
	241 And W25, W22, 2
	242 NotImplemented "Instruction BLR not yet implemented."
	243 Move W26, [X19+178]
	244 Move W24, W0
	245 Move X0, X19
	246 Move X1, X31
	247 Call NetworkRigidbodyBase.get_Data, X0
	248 Move TEMP, X22
	249 And TEMP, TEMP, 2
	250 Compare TEMP, 2
	251 JumpIfEqual {265}
	252 Move S8, [X0+8]
	253 Move S9, [X0+12]
	254 Move V10, [X0+16]
	255 Move W29, [X19+144]
	256 Move X0, X19
	257 Move X1, X31
	258 Call NetworkRigidbodyBase.get_Data, X0
	259 Compare W29, 0
	260 JumpIfNotEqual {271}
	261 Add X8, X0, 20
	262 Add X9, X0, 24
	263 Add X10, X0, 28
	264 Add X11, X0, 32
	265 Move S8, [X0+96]
	266 Move S9, [X0+100]
	267 Move V10, [X0+104]
	268 Move X0, X19
	269 Move X1, X31
	270 Call NetworkRigidbodyBase.get_Data, X0
	271 Add X8, X0, 108
	272 Add X9, X0, 112
	273 Add X10, X0, 116
	274 Add X11, X0, 120
	275 Move V11, [X8]
	276 Move V12, [X9]
	277 Move V13, [X10]
	278 Move V14, [X11]
	279 And W29, W24, 1
	280 Xor W8, W26, 255
	281 And W9, W29, W25
	282 And W31, W9, W8
	283 And W24, W22, 1
	284 Compare X23, 0
	285 JumpIfEqual {476}
	286 Move X0, X23
	287 Move X1, X31
	288 Call Transform.get_localPosition, X0
	289 Move X8, -26435584
	290 Subtract S0, S0, S8
	291 Subtract S1, S1, S9
	292 Move V3, [X8+3872]
	293 Subtract S2, S2, S10
	294 Multiply S0, S0, S0
	295 Multiply S1, S1, S1
	296 Add S0, S0, S1
	297 Multiply S1, S2, S2
	298 Add S0, S1, S0
	299 NotImplemented "Instruction FCMP not yet implemented."
	300 Move X0, X23
	301 Move X1, X31
	302 Call Transform.get_localRotation, X0
	303 Multiply S0, S11, S0
	304 Multiply S1, S12, S1
	305 Move X8, -26431488
	306 Add S0, S0, S1
	307 Move V1, [X8+436]
	308 Multiply S2, S13, S2
	309 Add S0, S2, S0
	310 Multiply S2, S14, S3
	311 Add S0, S2, S0
	312 NotImplemented "Instruction FCMP not yet implemented."
	313 Or W8, W24, W26
	314 NotImplemented "Instruction CMP not yet implemented."
	315 NotImplemented "Instruction CSINC not yet implemented."
	316 Or W8, W8, W21
	317 Compare W8, 0
	318 JumpIfEqual {342}
	319 Compare X23, 0
	320 JumpIfEqual {476}
	321 Move X0, X23
	322 Move V0, V8
	323 Move V1, V9
	324 Move V2, V10
	325 Compare W27, 0
	326 JumpIfEqual {333}
	327 Move V3, V11
	328 Move V4, V12
	329 Move V5, V13
	330 Move V6, V14
	331 Move X1, X31
	332 Call Transform.SetPositionAndRotation, X0, X1, X2
	333 Move X1, X31
	334 Call Transform.set_localPosition, X0, X1
	335 Move X0, X23
	336 Move V0, V11
	337 Move V1, V12
	338 Move V2, V13
	339 Move V3, V14
	340 Move X1, X31
	341 Call Transform.set_localRotation, X0, X1
	342 Move W8, [X31+4]
	343 Or W8, W8, W27
	344 Compare W8, 0
	345 JumpIfEqual {359}
	346 Move X8, [X19]
	347 Move X1, [X31+8]
	348 Move X0, X19
	349 Move V0, V8
	350 Move X9, [X8+888]
	351 Move X2, [X8+896]
	352 Move V1, V9
	353 Move V2, V10
	354 Move V3, V11
	355 Move V4, V12
	356 Move V5, V13
	357 Move V6, V14
	358 NotImplemented "Instruction BLR not yet implemented."
	359 Move W26, W31
	360 Move [X19+178], W31
	361 Move W8, [X19+129]
	362 Compare W8, 0
	363 JumpIfEqual {377}
	364 Move X0, X19
	365 Move X1, X31
	366 Call NetworkRigidbodyBase.get_Data, X0
	367 NotImplemented "Instruction LDUR not yet implemented."
	368 Move W1, [X0+44]
	369 Move X2, X31
	370 Move X0, X8
	371 Call 0x1E2F6F8
	372 Compare X23, 0
	373 JumpIfEqual {476}
	374 Move X0, X23
	375 Move X1, X31
	376 Call Transform.set_localScale, X0, X1
	377 Move TEMP, X20
	378 And TEMP, TEMP, 1
	379 Compare TEMP, 1
	380 JumpIfNotEqual {455}
	381 Move X8, [X19]
	382 Move X1, [X31+8]
	383 Move X0, X19
	384 Move X9, [X8+968]
	385 Move X2, [X8+976]
	386 NotImplemented "Instruction BLR not yet implemented."
	387 And X31, X22, 1
	388 NotImplemented "Instruction CSET not yet implemented."
	389 Xor W8, W8, W0
	390 Move TEMP, X8
	391 And TEMP, TEMP, 1
	392 Compare TEMP, 1
	393 JumpIfEqual {401}
	394 Move X8, [X19]
	395 Move X1, [X31+8]
	396 Move X0, X19
	397 Move W2, W24
	398 Move X9, [X8+984]
	399 Move X3, [X8+992]
	400 NotImplemented "Instruction BLR not yet implemented."
	401 Compare W24, 0
	402 JumpIfNotEqual {455}
	403 Move X0, X19
	404 Move X1, X31
	405 Move X21, X22
	406 ShiftRight X21, 32
	407 And X21, X21, 0x7FFFFFFF
	408 Move W22, W25
	409 ShiftRight W22, 1
	410 And W22, W22, 0x7FFFFFFF
	411 Call NetworkRigidbodyBase.get_Data, X0
	412 Move X8, [X19]
	413 Move X20, [X31+8]
	414 Move X2, X0
	415 Move X0, X19
	416 Move X9, [X8+936]
	417 Move X3, [X8+944]
	418 Move X1, X20
	419 NotImplemented "Instruction BLR not yet implemented."
	420 Move X8, [X19]
	421 Move X0, X19
	422 Move X1, X20
	423 Move W2, W21
	424 Move X9, [X8+1016]
	425 Move X3, [X8+1024]
	426 NotImplemented "Instruction BLR not yet implemented."
	427 NotImplemented "Instruction CMP not yet implemented."
	428 NotImplemented "Instruction CSET not yet implemented."
	429 Or W8, W8, W26
	430 Move TEMP, X8
	431 And TEMP, TEMP, 1
	432 Compare TEMP, 1
	433 JumpIfEqual {455}
	434 Move X8, [X19]
	435 Compare W25, 0
	436 JumpIfNotEqual {440}
	437 Move X9, [X8+1064]
	438 Move X2, [X8+1072]
	439 Move W26, 1
	440 Move X9, [X8+1112]
	441 Move X2, [X8+1120]
	442 Move X1, [X31+8]
	443 Move X0, X19
	444 NotImplemented "Instruction BLR not yet implemented."
	445 Move TEMP, X0
	446 And TEMP, TEMP, 1
	447 Compare TEMP, 1
	448 JumpIfNotEqual {455}
	449 Move X8, [X19]
	450 Move X9, [X8+1048]
	451 Move X2, [X8+1056]
	452 Move X1, [X31+8]
	453 Move X0, X19
	454 NotImplemented "Instruction BLR not yet implemented."
	455 Move X20, [X31+160]
	456 Move X19, [X31+168]
	457 Move X22, [X31+144]
	458 Move X21, [X31+152]
	459 Move X24, [X31+128]
	460 Move X23, [X31+136]
	461 Move X26, [X31+112]
	462 Move X25, [X31+120]
	463 Move X28, [X31+96]
	464 Move X27, [X31+104]
	465 Move X29, [X31+80]
	466 Move X30, [X31+88]
	467 Move D9, [X31+64]
	468 Move D8, [X31+72]
	469 Move D11, [X31+48]
	470 Move D10, [X31+56]
	471 Move D13, [X31+32]
	472 Move D12, [X31+40]
	473 Move V14, [X31+16]
	474 Add X31, X31, 176
	475 Return 
	476 Call 0x1C17F20

Method: System.Boolean IsRigidbodyBelowSleepingThresholds(RBType rb)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean IsStateBelowSleepingThresholds(Fusion.Addons.Physics.NetworkRBData data)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void Render()

Disassembly:
	0x02421070 MOV X1, X31
	0x02421074 BL 0x3C3DEB4
	0x02421078 MOV X0, X31
	0x0242107C BL 0x242E8E8
	0x02421080 STP X0, X1, [X20 + 0x88]
	0x02421084 MOV X20, X19
	0x02421088 LDRB W8, [X20 + 0xD0]!
	0x0242108C CBZ W8, 0x24210FC
	0x02421090 ADRP X23, 0x1CDC000
	0x02421094 LDR X23, [X23 + 0xB60]
	0x02421098 LDR X21, [X19 + 0xA8]
	0x0242109C MOV X0, X20
	0x024210A0 LDR X1, [X23]
	0x024210A4 BL 0x243C008
	0x024210A8 CBZ X21, 0x24211B4
	0x024210AC MOV X0, X21
	0x024210B0 MOV X1, X31
	0x024210B4 BL 0x3C3F62C
	0x024210B8 LDR X1, [X23]
	0x024210BC MOV X0, X20
	0x024210C0 BL 0x243C008
	0x024210C4 LDR X8, [X19]
	0x024210C8 MOV X0, X19
	0x024210CC LDR X9, [X8 + 0x278]
	0x024210D0 LDR X1, [X8 + 0x280]
	0x024210D4 BLR X9
	0x024210D8 MOV X0, X19
	0x024210DC MOV X1, X31
	0x024210E0 BL 0x1E2C934
	0x024210E4 LDR X1, [X23]
	0x024210E8 MOV X21, X0
	0x024210EC MOV X0, X20
	0x024210F0 BL 0x243C008
	0x024210F4 STP S0, S1, [X21 + 0x8]
	0x024210F8 STR S2, [X21 + 0x10]
	0x024210FC MOV X20, X19
	0x02421100 LDRB W8, [X20 + 0xE0]!
	0x02421104 CBZ W8, 0x2421188
	0x02421108 ADRP X23, 0x1CDC000
	0x0242110C LDR X23, [X23 + 0xB58]
	0x02421110 LDR X21, [X19 + 0xA8]
	0x02421114 MOV X0, X20
	0x02421118 LDR X1, [X23]
	0x0242111C BL 0x2437CB8
	0x02421120 CBZ X21, 0x24211B4
	0x02421124 MOV X0, X21
	0x02421128 MOV X1, X31
	0x0242112C BL 0x3C3F7AC
	0x02421130 LDR X1, [X23]
	0x02421134 MOV X0, X20
	0x02421138 BL 0x2437CB8
	0x0242113C LDR X8, [X19]
	0x02421140 MOV X0, X19
	0x02421144 LDR X9, [X8 + 0x298]
	0x02421148 LDR X1, [X8 + 0x2A0]
	0x0242114C BLR X9
	0x02421150 LDRB W24, [X19 + 0x90]
	0x02421154 MOV X0, X19
	0x02421158 MOV X1, X31
	0x0242115C BL 0x1E2C934
	0x02421160 LDR X1, [X23]
	0x02421164 MOV X21, X0
	0x02421168 MOV X0, X20
	0x0242116C BL 0x2437CB8
	0x02421170 CBZ W24, 0x2421180
	0x02421174 STP S0, S1, [X21 + 0x6C]
	0x02421178 STP S2, S3, [X21 + 0x74]
	0x0242117C B 0x2421188
	0x02421180 STP S0, S1, [X21 + 0x14]
	0x02421184 STP S2, S3, [X21 + 0x1C]
	0x02421188 LDR X8, [X19]
	0x0242118C CMP W22, 0x0
	0x02421190 MOV X0, X19
	0x02421194 LDP X20, X19, [X31 + 0x30]
	0x02421198 LDR X3, [X8 + 0x488]
	0x0242119C LDR X2, [X8 + 0x490]
	0x024211A0 LDP X22, X21, [X31 + 0x20]
	0x024211A4 LDP X24, X23, [X31 + 0x10]
	0x024211A8 CSET W1, NE
	0x024211AC LDR X30, [X31], #0x40
	0x024211B0 BR X3
	0x024211B4 BL 0x1C16F20
	0x024211B8 STP X30, X21, [X31 - 0x20]!
	0x024211BC STP X20, X19, [X31 + 0x10]
	0x024211C0 ADRP X21, 0x1FB8000
	0x024211C4 LDRB W8, [X21 + 0x9CC]
	0x024211C8 MOV W19, W1
	0x024211CC MOV X20, X0
	0x024211D0 TBNZ X8, 0x0, 0x24211E8
	0x024211D4 ADRP X0, 0x1CD2000
	0x024211D8 LDR X0, [X0 + 0x5A8]
	0x024211DC BL 0x1C16CF4
	0x024211E0 MOVZ W8, 0x1
	0x024211E4 STRB W8, [X21 + 0x9CC]
	0x024211E8 CBZ X20, 0x2421254
	0x024211EC ADRP X21, 0x1CD2000
	0x024211F0 LDR X21, [X21 + 0x5A8]
	0x024211F4 MOV X0, X20
	0x024211F8 MOV X1, X31
	0x024211FC BL 0x1E2C934
	0x02421200 MOV X8, X0
	0x02421204 LDR X0, [X21]
	0x02421208 LDR W21, [X8 + 0x30]
	0x0242120C LDR W9, [X0 + 0xE0]
	0x02421210 CBNZ W9, 0x2421218
	0x02421214 BL 0x1C16DFC
	0x02421218 CMP W21, 0x0
	0x0242121C CSNEG W8, W21, W21, PL
	0x02421220 ADD W9, W8, 0x1
	0x02421224 CMP W9, 0x1F
	0x02421228 MOVZ W9, 0x1
	0x0242122C MOV X0, X20
	0x02421230 MOV X1, X31
	0x02421234 CSINC W21, W9, W8, GE
	0x02421238 BL 0x1E2C934
	0x0242123C ANDS W31, W19, 0x1
	0x02421240 LDP X20, X19, [X31 + 0x10]
	0x02421244 CSNEG W8, W21, W21, EQ
	0x02421248 STR W8, [X0 + 0x30]
	0x0242124C LDP X30, X21, [X31], #0x20
	0x02421250 RET
	0x02421254 BL 0x1C16F20
	0x02421258 MOV X1, X31
	0x0242125C B 0x1E2CB94
	0x02421260 CBZ X0, 0x2421270
	0x02421264 AND W1, W1, 0x1
	0x02421268 MOV X2, X31
	0x0242126C B 0x1E2CBD4
	0x02421270 STR X30, [X31 - 0x10]!
	0x02421274 BL 0x1C16F20
	0x02421278 CBZ X0, 0x2421284
	0x0242127C MOV X1, X31
	0x02421280 B 0x1E2CBE0
	0x02421284 STR X30, [X31 - 0x10]!
	0x02421288 BL 0x1C16F20
	0x0242128C SUB X31, X31, 0x30
	0x02421290 STP X30, X21, [X31 + 0x10]
	0x02421294 STP X20, X19, [X31 + 0x20]
	0x02421298 LDR X8, [X2 + 0x20]
	0x0242129C MOV X21, X2
	0x024212A0 MOV X19, X1
	0x024212A4 MOV X20, X0
	0x024212A8 LDRB W9, [X8 + 0x135]
	0x024212AC TBNZ X9, 0x0, 0x24212BC
	0x024212B0 MOV X0, X8
	0x024212B4 BL 0x1C5C684
	0x024212B8 MOV X8, X0
	0x024212BC LDR X8, [X8 + 0xC0]
	0x024212C0 MOV X0, X20
	0x024212C4 MOV W1, W31
	0x024212C8 LDR X8, [X8]
	0x024212CC LDR W2, [X8 + 0xFC]
	0x024212D0 BL 0x3EB1B10
	0x024212D4 LDR X8, [X21 + 0x20]
	0x024212D8 ADD X9, X8, 0x135
	0x024212DC LDRH W9, [X9]
	0x024212E0 TBNZ X9, 0x0, 0x24212FC
	0x024212E4 MOV X0, X8
	0x024212E8 BL 0x1C5C684
	0x024212EC LDR X8, [X21 + 0x20]
	0x024212F0 ADD X9, X8, 0x135
	0x024212F4 LDRH W9, [X9]
	0x024212F8 B 0x2421300
	0x024212FC MOV X0, X8
	0x02421300 LDR X10, [X0 + 0xC0]
	0x02421304 LDR X10, [X10 + 0x8]
	0x02421308 LDR X3, [X10]
	0x0242130C TBNZ X9, 0x0, 0x2421324
	0x02421310 MOV X0, X8
	0x02421314 STR X3, [X31 + 0x8]
	0x02421318 BL 0x1C5C684
	0x0242131C LDR X3, [X31 + 0x8]
	0x02421320 MOV X8, X0
	0x02421324 LDR X8, [X8 + 0xC0]
	0x02421328 MOV X0, X20
	0x0242132C MOV X1, X19
	0x02421330 LDP X20, X19, [X31 + 0x20]
	0x02421334 LDR X2, [X8 + 0x8]
	0x02421338 LDP X30, X21, [X31 + 0x10]
	0x0242133C ADD X31, X31, 0x30
	0x02421340 BR X3
	0x02421344 STR X30, [X31 - 0x10]!
	0x02421348 LDR X0, [X1 + 0x20]
	0x0242134C LDRB W8, [X0 + 0x135]
	0x02421350 TBNZ X8, 0x0, 0x2421358
	0x02421354 BL 0x1C5C684
	0x02421358 LDR X8, [X0 + 0xC0]
	0x0242135C LDR X8, [X8 + 0x18]
	0x02421360 LDR W8, [X8 + 0xFC]
	0x02421364 ADD W9, W8, 0x3
	0x02421368 CMP W8, 0x0
	0x0242136C CSEL W8, W9, W8, LT
	0x02421370 SBFM W0, W8, 0x2, 0x1F
	0x02421374 LDR X30, [X31], #0x10
	0x02421378 RET
	0x0242137C STR X30, [X31 - 0x20]!
	0x02421380 STP X20, X19, [X31 + 0x10]
	0x02421384 STR X31, [X31 + 0x8]
	0x02421388 LDR X8, [X1 + 0x20]
	0x0242138C MOV X19, X0
	0x02421390 ADD X9, X8, 0x135
	0x02421394 LDRH W9, [X9]
	0x02421398 TBNZ X9, 0x0, 0x24213B8
	0x0242139C MOV X0, X8
	0x024213A0 MOV X20, X1
	0x024213A4 BL 0x1C5C684
	0x024213A8 LDR X8, [X20 + 0x20]
	0x024213AC ADD X9, X8, 0x135
	0x024213B0 LDRH W9, [X9]
	0x024213B4 B 0x24213BC
	0x024213B8 MOV X0, X8
	0x024213BC LDR X10, [X0 + 0xC0]
	0x024213C0 LDR X10, [X10 + 0x20]
	0x024213C4 LDR X20, [X10]
	0x024213C8 TBNZ X9, 0x0, 0x24213D8
	0x024213CC MOV X0, X8
	0x024213D0 BL 0x1C5C684
	0x024213D4 MOV X8, X0
	0x024213D8 LDR X8, [X8 + 0xC0]
	0x024213DC ADD X1, X31, 0x8
	0x024213E0 MOV X0, X19
	0x024213E4 LDR X2, [X8 + 0x20]
	0x024213E8 BLR X20
	0x024213EC LDR X0, [X31 + 0x8]
	0x024213F0 LDP X20, X19, [X31 + 0x10]
	0x024213F4 LDR X30, [X31], #0x20
	0x024213F8 RET
	0x024213FC SUB X31, X31, 0x30
	0x02421400 STP X30, X21, [X31 + 0x10]
	0x02421404 STP X20, X19, [X31 + 0x20]
	0x02421408 LDR X8, [X2 + 0x20]
	0x0242140C MOV X19, X1
	0x02421410 MOV X20, X0
	0x02421414 ADD X9, X8, 0x135
	0x02421418 LDRH W9, [X9]
	0x0242141C TBNZ X9, 0x0, 0x242143C
	0x02421420 MOV X0, X8
	0x02421424 MOV X21, X2
	0x02421428 BL 0x1C5C684
	0x0242142C LDR X8, [X21 + 0x20]
	0x02421430 ADD X9, X8, 0x135
	0x02421434 LDRH W9, [X9]
	0x02421438 B 0x2421440
	0x0242143C MOV X0, X8
	0x02421440 LDR X10, [X0 + 0xC0]
	0x02421444 LDR X10, [X10 + 0x28]
	0x02421448 LDR X3, [X10]
	0x0242144C TBNZ X9, 0x0, 0x2421464
	0x02421450 MOV X0, X8
	0x02421454 STR X3, [X31 + 0x8]
	0x02421458 BL 0x1C5C684
	0x0242145C LDR X3, [X31 + 0x8]
	0x02421460 MOV X8, X0
	0x02421464 LDR X8, [X8 + 0xC0]
	0x02421468 MOV X0, X20
	0x0242146C MOV X1, X19
	0x02421470 LDP X20, X19, [X31 + 0x20]
	0x02421474 LDR X2, [X8 + 0x28]
	0x02421478 LDP X30, X21, [X31 + 0x10]
	0x0242147C ADD X31, X31, 0x30
	0x02421480 BR X3
	0x02421484 STP X30, X19, [X31 - 0x10]!
	0x02421488 LDR X8, [X1 + 0x20]
	0x0242148C MOV X19, X0
	0x02421490 LDRB W9, [X8 + 0x135]
	0x02421494 TBNZ X9, 0x0, 0x24214A4
	0x02421498 MOV X0, X8
	0x0242149C BL 0x1C5C684
	0x024214A0 MOV X8, X0
	0x024214A4 LDR X8, [X8 + 0xC0]
	0x024214A8 MOV X0, X19
	0x024214AC LDR X8, [X8]
	0x024214B0 LDR X1, [X8 + 0x80]
	0x024214B4 BL 0x1C16D18
	0x024214B8 LDR W0, [X0]
	0x024214BC LDP X30, X19, [X31], #0x10
	0x024214C0 RET
	0x024214C4 STR X30, [X31 - 0x30]!
	0x024214C8 STP X22, X21, [X31 + 0x10]
	0x024214CC STP X20, X19, [X31 + 0x20]
	0x024214D0 LDR X8, [X2 + 0x20]
	0x024214D4 MOV X22, X2
	0x024214D8 MOV W19, W1
	0x024214DC MOV X20, X0
	0x024214E0 LDRB W9, [X8 + 0x135]
	0x024214E4 TBNZ X9, 0x0, 0x24214F4
	0x024214E8 MOV X0, X8
	0x024214EC BL 0x1C5C684
	0x024214F0 MOV X8, X0
	0x024214F4 LDR X8, [X8 + 0xC0]
	0x024214F8 MOV X0, X20
	0x024214FC LDR X8, [X8]
	0x02421500 LDR X8, [X8 + 0x80]
	0x02421504 ADD X1, X8, 0x20
	0x02421508 BL 0x1C16D18
	0x0242150C LDR X8, [X22 + 0x20]
	0x02421510 MOV X21, X0
	0x02421514 ADD X9, X8, 0x135
	0x02421518 LDRH W9, [X9]
	0x0242151C TBNZ X9, 0x0, 0x2421538
	0x02421520 MOV X0, X8
	0x02421524 BL 0x1C5C684
	0x02421528 LDR X8, [X22 + 0x20]
	0x0242152C ADD X9, X8, 0x135
	0x02421530 LDRH W9, [X9]
	0x02421534 B 0x242153C
	0x02421538 MOV X0, X8
	0x0242153C LDR X10, [X0 + 0xC0]
	0x02421540 LDR X10, [X10 + 0x30]
	0x02421544 LDR X22, [X10]
	0x02421548 TBNZ X9, 0x0, 0x2421558
	0x0242154C MOV X0, X8
	0x02421550 BL 0x1C5C684
	0x02421554 MOV X8, X0
	0x02421558 LDR X8, [X8 + 0xC0]
	0x0242155C MOV X0, X20
	0x02421560 MOV W1, W19
	0x02421564 LDR X2, [X8 + 0x30]
	0x02421568 BLR X22
	0x0242156C ADD X0, X21, W0, 0x2, SXTW
	0x02421570 LDP X20, X19, [X31 + 0x20]
	0x02421574 LDP X22, X21, [X31 + 0x10]
	0x02421578 LDR X30, [X31], #0x30
	0x0242157C RET
	0x02421580 STP X29, X30, [X31 - 0x50]!
	0x02421584 STP X26, X25, [X31 + 0x10]
	0x02421588 STP X24, X23, [X31 + 0x20]
	0x0242158C STP X22, X21, [X31 + 0x30]
	0x02421590 STP X20, X19, [X31 + 0x40]
	0x02421594 ADD X29, X31, 0x0
	0x02421598 SUB X31, X31, 0x10
	0x0242159C MRS X26, 0xC000
	0x024215A0 LDR X8, [X26 + 0x28]
	0x024215A4 MOV X25, X2
	0x024215A8 MOV X19, X1
	0x024215AC MOV X20, X0
	0x024215B0 STUR X8, [X29 - 0x8]
	0x024215B4 LDR X22, [X2 + 0x20]
	0x024215B8 LDRB W8, [X22 + 0x135]
	0x024215BC TBNZ X8, 0x0, 0x24215D0
	0x024215C0 MOV X0, X22
	0x024215C4 BL 0x1C5C684
	0x024215C8 LDR X22, [X25 + 0x20]
	0x024215CC B 0x24215D4
	0x024215D0 MOV X0, X22
	0x024215D4 LDR X8, [X0 + 0xC0]
	0x024215D8 LDR X8, [X8]
	0x024215DC LDR W21, [X8 + 0xFC]
	0x024215E0 ADD X8, X31, 0x0
	0x024215E4 ADD X9, X21, 0xF
	0x024215E8 AND X9, X9, 0x1FFFFFFFF
	0x024215EC SUB X23, X8, X9
	0x024215F0 ADD X31, X23, 0x0
	0x024215F4 ADD X8, X31, 0x0
	0x024215F8 SUB X24, X8, X9
	0x024215FC ADD X31, X24, 0x0
	0x02421600 MOV X0, X24
	0x02421604 MOV W1, W31
	0x02421608 MOV X2, X21
	0x0242160C BL 0x3EB1B10
	0x02421610 MOV X0, X24
	0x02421614 MOV W1, W31
	0x02421618 MOV X2, X21
	0x0242161C BL 0x3EB1B10
	0x02421620 ADD X8, X22, 0x135
	0x02421624 LDRH W8, [X8]
	0x02421628 TBNZ X8, 0x0, 0x2421644
	0x0242162C MOV X0, X22
	0x02421630 BL 0x1C5C684
	0x02421634 LDR X22, [X25 + 0x20]
	0x02421638 ADD X8, X22, 0x135
	0x0242163C LDRH W8, [X8]
	0x02421640 B 0x2421648
	0x02421644 MOV X0, X22
	0x02421648 LDR X9, [X0 + 0xC0]
	0x0242164C LDR X9, [X9 + 0x28]
	0x02421650 LDR X25, [X9]
	0x02421654 TBNZ X8, 0x0, 0x2421664
	0x02421658 MOV X0, X22
	0x0242165C BL 0x1C5C684
	0x02421660 MOV X22, X0
	0x02421664 LDR X8, [X22 + 0xC0]
	0x02421668 MOV X0, X24
	0x0242166C MOV X1, X20
	0x02421670 LDR X2, [X8 + 0x28]
	0x02421674 BLR X25
	0x02421678 MOV X0, X23
	0x0242167C MOV X1, X24
	0x02421680 MOV X2, X21
	0x02421684 BL 0x3EB1AC0
	0x02421688 MOV X0, X19
	0x0242168C MOV X1, X23
	0x02421690 MOV X2, X21
	0x02421694 BL 0x3EB1AC0
	0x02421698 LDR X8, [X26 + 0x28]
	0x0242169C LDUR X9, [X29 - 0x8]
	0x024216A0 CMP X8, X9
	0x024216A4 B.NE 0x24216C4
	0x024216A8 ADD X31, X29, 0x0
	0x024216AC LDP X20, X19, [X31 + 0x40]
	0x024216B0 LDP X22, X21, [X31 + 0x30]
	0x024216B4 LDP X24, X23, [X31 + 0x20]
	0x024216B8 LDP X26, X25, [X31 + 0x10]
	0x024216BC LDP X29, X30, [X31], #0x50
	0x024216C0 RET
	0x024216C4 BL 0x3EB1B20
	0x024216C8 STR X30, [X31 - 0x20]!
	0x024216CC STP X20, X19, [X31 + 0x10]
	0x024216D0 LDR X8, [X1 + 0x20]
	0x024216D4 MOV X19, X0
	0x024216D8 ADD X9, X8, 0x135
	0x024216DC LDRH W9, [X9]
	0x024216E0 TBNZ X9, 0x0, 0x2421700
	0x024216E4 MOV X0, X8
	0x024216E8 MOV X20, X1
	0x024216EC BL 0x1C5C684
	0x024216F0 LDR X8, [X20 + 0x20]
	0x024216F4 ADD X9, X8, 0x135
	0x024216F8 LDRH W9, [X9]
	0x024216FC B 0x2421704
	0x02421700 MOV X0, X8
	0x02421704 LDR X10, [X0 + 0xC0]
	0x02421708 LDR X10, [X10 + 0x40]
	0x0242170C LDR X2, [X10]
	0x02421710 TBNZ X9, 0x0, 0x2421728
	0x02421714 MOV X0, X8
	0x02421718 STR X2, [X31 + 0x8]
	0x0242171C BL 0x1C5C684
	0x02421720 LDR X2, [X31 + 0x8]
	0x02421724 MOV X8, X0
	0x02421728 LDR X8, [X8 + 0xC0]
	0x0242172C MOV X0, X19
	0x02421730 LDP X20, X19, [X31 + 0x10]
	0x02421734 LDR X1, [X8 + 0x40]
	0x02421738 LDR X30, [X31], #0x20
	0x0242173C BR X2
	0x02421740 STP X30, X21, [X31 - 0x20]!
	0x02421744 STP X20, X19, [X31 + 0x10]
	0x02421748 LDR X8, [X2 + 0x20]
	0x0242174C MOV X19, X1
	0x02421750 MOV X20, X0
	0x02421754 ADD X9, X8, 0x135
	0x02421758 LDRH W9, [X9]
	0x0242175C TBNZ X9, 0x0, 0x242177C
	0x02421760 MOV X0, X8
	0x02421764 MOV X21, X2
	0x02421768 BL 0x1C5C684
	0x0242176C LDR X8, [X21 + 0x20]
	0x02421770 ADD X9, X8, 0x135
	0x02421774 LDRH W9, [X9]
	0x02421778 B 0x2421780
	0x0242177C MOV X0, X8
	0x02421780 LDR X10, [X0 + 0xC0]
	0x02421784 LDR X10, [X10 + 0x48]
	0x02421788 LDR X21, [X10]
	0x0242178C TBNZ X9, 0x0, 0x242179C
	0x02421790 MOV X0, X8
	0x02421794 BL 0x1C5C684
	0x02421798 MOV X8, X0
	0x0242179C LDR X8, [X8 + 0xC0]
	0x024217A0 MOV X0, X20
	0x024217A4 MOV X1, X19
	0x024217A8 LDR X2, [X8 + 0x48]
	0x024217AC BLR X21
	0x024217B0 LDP X20, X19, [X31 + 0x10]
	0x024217B4 ORN W8, W31, W0, 0x0
	0x024217B8 AND W0, W8, 0x1
	0x024217BC LDP X30, X21, [X31], #0x20
	0x024217C0 RET
	0x024217C4 STP X30, X21, [X31 - 0x20]!
	0x024217C8 STP X20, X19, [X31 + 0x10]
	0x024217CC LDR X8, [X2 + 0x20]
	0x024217D0 MOV X19, X1
	0x024217D4 MOV X20, X0
	0x024217D8 ADD X9, X8, 0x135
	0x024217DC LDRH W9, [X9]
	0x024217E0 TBNZ X9, 0x0, 0x2421800
	0x024217E4 MOV X0, X8
	0x024217E8 MOV X21, X2
	0x024217EC BL 0x1C5C684
	0x024217F0 LDR X8, [X21 + 0x20]
	0x024217F4 ADD X9, X8, 0x135
	0x024217F8 LDRH W9, [X9]
	0x024217FC B 0x2421804
	0x02421800 MOV X0, X8
	0x02421804 LDR X10, [X0 + 0xC0]
	0x02421808 LDR X10, [X10 + 0x58]
	0x0242180C LDR X21, [X10]
	0x02421810 TBNZ X9, 0x0, 0x2421820
	0x02421814 MOV X0, X8
	0x02421818 BL 0x1C5C684
	0x0242181C MOV X8, X0
	0x02421820 LDR X8, [X8 + 0xC0]
	0x02421824 MOV X0, X19
	0x02421828 MOV X1, X20
	0x0242182C LDR X2, [X8 + 0x58]
	0x02421830 BLR X21
	0x02421834 LDP X20, X19, [X31 + 0x10]
	0x02421838 ORN W8, W31, W0, 0x0
	0x0242183C AND W0, W8, 0x1
	0x02421840 LDP X30, X21, [X31], #0x20
	0x02421844 RET
	0x02421848 STP X30, X21, [X31 - 0x20]!
	0x0242184C STP X20, X19, [X31 + 0x10]
	0x02421850 LDR X8, [X2 + 0x20]
	0x02421854 MOV X19, X1
	0x02421858 MOV X20, X0
	0x0242185C ADD X9, X8, 0x135
	0x02421860 LDRH W9, [X9]
	0x02421864 TBNZ X9, 0x0, 0x2421884
	0x02421868 MOV X0, X8
	0x0242186C MOV X21, X2
	0x02421870 BL 0x1C5C684
	0x02421874 LDR X8, [X21 + 0x20]
	0x02421878 ADD X9, X8, 0x135
	0x0242187C LDRH W9, [X9]
	0x02421880 B 0x2421888
	0x02421884 MOV X0, X8
	0x02421888 LDR X10, [X0 + 0xC0]
	0x0242188C LDR X10, [X10 + 0x58]
	0x02421890 LDR X21, [X10]
	0x02421894 TBNZ X9, 0x0, 0x24218A4
	0x02421898 MOV X0, X8
	0x0242189C BL 0x1C5C684
	0x024218A0 MOV X8, X0
	0x024218A4 LDR X8, [X8 + 0xC0]
	0x024218A8 MOV X0, X20
	0x024218AC MOV X1, X19
	0x024218B0 LDR X2, [X8 + 0x58]
	0x024218B4 BLR X21
	0x024218B8 LDP X20, X19, [X31 + 0x10]
	0x024218BC ORN W8, W31, W0, 0x0
	0x024218C0 AND W0, W8, 0x1
	0x024218C4 LDP X30, X21, [X31], #0x20
	0x024218C8 RET
	0x024218CC SUB X31, X31, 0x30
	0x024218D0 STP X30, X21, [X31 + 0x10]
	0x024218D4 STP X20, X19, [X31 + 0x20]
	0x024218D8 LDR X8, [X2 + 0x20]
	0x024218DC MOV X19, X1
	0x024218E0 MOV X20, X0
	0x024218E4 ADD X9, X8, 0x135
	0x024218E8 LDRH W9, [X9]
	0x024218EC TBNZ X9, 0x0, 0x242190C
	0x024218F0 MOV X0, X8
	0x024218F4 MOV X21, X2
	0x024218F8 BL 0x1C5C684
	0x024218FC LDR X8, [X21 + 0x20]
	0x02421900 ADD X9, X8, 0x135
	0x02421904 LDRH W9, [X9]
	0x02421908 B 0x2421910
	0x0242190C MOV X0, X8
	0x02421910 LDR X10, [X0 + 0xC0]
	0x02421914 LDR X10, [X10 + 0x48]
	0x02421918 LDR X3, [X10]
	0x0242191C TBNZ X9, 0x0, 0x2421934
	0x02421920 MOV X0, X8
	0x02421924 STR X3, [X31 + 0x8]
	0x02421928 BL 0x1C5C684
	0x0242192C LDR X3, [X31 + 0x8]
	0x02421930 MOV X8, X0
	0x02421934 LDR X8, [X8 + 0xC0]
	0x02421938 MOV X0, X20
	0x0242193C MOV X1, X19
	0x02421940 LDP X20, X19, [X31 + 0x20]
	0x02421944 LDR X2, [X8 + 0x48]
	0x02421948 LDP X30, X21, [X31 + 0x10]
	0x0242194C ADD X31, X31, 0x30
	0x02421950 BR X3
	0x02421954 SUB X31, X31, 0x30
	0x02421958 STP X30, X21, [X31 + 0x10]
	0x0242195C STP X20, X19, [X31 + 0x20]
	0x02421960 LDR X8, [X2 + 0x20]
	0x02421964 MOV X19, X1
	0x02421968 MOV X20, X0
	0x0242196C ADD X9, X8, 0x135
	0x02421970 LDRH W9, [X9]
	0x02421974 TBNZ X9, 0x0, 0x2421994
	0x02421978 MOV X0, X8
	0x0242197C MOV X21, X2
	0x02421980 BL 0x1C5C684
	0x02421984 LDR X8, [X21 + 0x20]
	0x02421988 ADD X9, X8, 0x135
	0x0242198C LDRH W9, [X9]
	0x02421990 B 0x2421998
	0x02421994 MOV X0, X8
	0x02421998 LDR X10, [X0 + 0xC0]
	0x0242199C LDR X10, [X10 + 0x58]
	0x024219A0 LDR X3, [X10]
	0x024219A4 TBNZ X9, 0x0, 0x24219BC
	0x024219A8 MOV X0, X8
	0x024219AC STR X3, [X31 + 0x8]
	0x024219B0 BL 0x1C5C684
	0x024219B4 LDR X3, [X31 + 0x8]
	0x024219B8 MOV X8, X0
	0x024219BC LDR X8, [X8 + 0xC0]
	0x024219C0 MOV X0, X19
	0x024219C4 MOV X1, X20
	0x024219C8 LDP X20, X19, [X31 + 0x20]
	0x024219CC LDR X2, [X8 + 0x58]
	0x024219D0 LDP X30, X21, [X31 + 0x10]
	0x024219D4 ADD X31, X31, 0x30
	0x024219D8 BR X3
	0x024219DC SUB X31, X31, 0x30
	0x024219E0 STP X30, X21, [X31 + 0x10]
	0x024219E4 STP X20, X19, [X31 + 0x20]
	0x024219E8 LDR X8, [X2 + 0x20]
	0x024219EC MOV X19, X1
	0x024219F0 MOV X20, X0
	0x024219F4 ADD X9, X8, 0x135
	0x024219F8 LDRH W9, [X9]
	0x024219FC TBNZ X9, 0x0, 0x2421A1C
	0x02421A00 MOV X0, X8
	0x02421A04 MOV X21, X2
	0x02421A08 BL 0x1C5C684
	0x02421A0C LDR X8, [X21 + 0x20]
	0x02421A10 ADD X9, X8, 0x135
	0x02421A14 LDRH W9, [X9]
	0x02421A18 B 0x2421A20
	0x02421A1C MOV X0, X8
	0x02421A20 LDR X10, [X0 + 0xC0]
	0x02421A24 LDR X10, [X10 + 0x58]
	0x02421A28 LDR X3, [X10]
	0x02421A2C TBNZ X9, 0x0, 0x2421A44
	0x02421A30 MOV X0, X8
	0x02421A34 STR X3, [X31 + 0x8]
	0x02421A38 BL 0x1C5C684
	0x02421A3C LDR X3, [X31 + 0x8]
	0x02421A40 MOV X8, X0
	0x02421A44 LDR X8, [X8 + 0xC0]
	0x02421A48 MOV X0, X20
	0x02421A4C MOV X1, X19
	0x02421A50 LDP X20, X19, [X31 + 0x20]
	0x02421A54 LDR X2, [X8 + 0x58]
	0x02421A58 LDP X30, X21, [X31 + 0x10]
	0x02421A5C ADD X31, X31, 0x30
	0x02421A60 BR X3
	0x02421A64 STP X30, X23, [X31 - 0x30]!
	0x02421A68 STP X22, X21, [X31 + 0x10]
	0x02421A6C STP X20, X19, [X31 + 0x20]
	0x02421A70 ADRP X22, 0x1FB8000
	0x02421A74 LDRB W8, [X22 + 0x9CD]
	0x02421A78 MOV X21, X2
	0x02421A7C MOV X19, X1
	0x02421A80 MOV X20, X0
	0x02421A84 TBNZ X8, 0x0, 0x2421A9C
	0x02421A88 ADRP X0, 0x1CD4000
	0x02421A8C LDR X0, [X0 + 0x278]
	0x02421A90 BL 0x1C16CF4
	0x02421A94 MOVZ W8, 0x1
	0x02421A98 STRB W8, [X22 + 0x9CD]
	0x02421A9C LDR X22, [X19]
	0x02421AA0 CBZ X22, 0x2421B04
	0x02421AA4 LDR X8, [X21 + 0x20]
	0x02421AA8 ADD X9, X8, 0x135
	0x02421AAC LDRH W9, [X9]
	0x02421AB0 TBNZ X9, 0x0, 0x2421ACC
	0x02421AB4 MOV X0, X8
	0x02421AB8 BL 0x1C5C684
	0x02421ABC LDR X8, [X21 + 0x20]
	0x02421AC0 ADD X9, X8, 0x135
	0x02421AC4 LDRH W9, [X9]
	0x02421AC8 B 0x2421AD0
	0x02421ACC MOV X0, X8
	0x02421AD0 LDR X10, [X0 + 0xC0]
	0x02421AD4 LDR X10, [X10 + 0x60]
	0x02421AD8 LDR X23, [X10]
	0x02421ADC TBNZ X9, 0x0, 0x2421AEC
	0x02421AE0 MOV X0, X8
	0x02421AE4 BL 0x1C5C684
	0x02421AE8 MOV X8, X0
	0x02421AEC LDR X8, [X8 + 0xC0]
	0x02421AF0 MOV X0, X20
	0x02421AF4 MOV X1, X22
	0x02421AF8 LDR X2, [X8 + 0x60]
	0x02421AFC BLR X23
	0x02421B00 CBZ W0, 0x2421BD4
	0x02421B04 LDR X8, [X21 + 0x20]
	0x02421B08 ADD X9, X8, 0x135
	0x02421B0C LDRH W9, [X9]
	0x02421B10 TBNZ X9, 0x0, 0x2421B2C
	0x02421B14 MOV X0, X8
	0x02421B18 BL 0x1C5C684
	0x02421B1C LDR X8, [X21 + 0x20]
	0x02421B20 ADD X9, X8, 0x135
	0x02421B24 LDRH W9, [X9]
	0x02421B28 B 0x2421B30
	0x02421B2C MOV X0, X8
	0x02421B30 LDR X10, [X0 + 0xC0]
	0x02421B34 LDR X10, [X10 + 0x68]
	0x02421B38 LDR X22, [X10]
	0x02421B3C TBNZ X9, 0x0, 0x2421B4C
	0x02421B40 MOV X0, X8
	0x02421B44 BL 0x1C5C684
	0x02421B48 MOV X8, X0
	0x02421B4C LDR X8, [X8 + 0xC0]
	0x02421B50 MOV X0, X20
	0x02421B54 LDR X1, [X8 + 0x68]
	0x02421B58 BLR X22
	0x02421B5C CBZ W0, 0x2421BB8
	0x02421B60 MOV W22, W0
	0x02421B64 LDR X0, [X21 + 0x20]
	0x02421B68 LDRB W8, [X0 + 0x135]
	0x02421B6C TBNZ X8, 0x0, 0x2421B74
	0x02421B70 BL 0x1C5C684
	0x02421B74 LDR X8, [X0 + 0xC0]
	0x02421B78 MOV X0, X20
	0x02421B7C LDR X8, [X8]
	0x02421B80 LDR X8, [X8 + 0x80]
	0x02421B84 ADD X1, X8, 0x20
	0x02421B88 BL 0x1C16D18
	0x02421B8C MOV X20, X0
	0x02421B90 MOV X0, X31
	0x02421B94 BL 0x3242E20
	0x02421B98 MOV X4, X0
	0x02421B9C UBFM W3, W22, 0x1E, 0x1D
	0x02421BA0 MOV X0, X31
	0x02421BA4 MOV X1, X20
	0x02421BA8 MOV W2, W31
	0x02421BAC MOV X5, X31
	0x02421BB0 BL 0x322EB00
	0x02421BB4 B 0x2421BCC
	0x02421BB8 ADRP X8, 0x1CD4000
	0x02421BBC LDR X8, [X8 + 0x278]
	0x02421BC0 LDR X8, [X8]
	0x02421BC4 LDR X8, [X8 + 0xB8]
	0x02421BC8 LDR X0, [X8]
	0x02421BCC STR X0, [X19]
	0x02421BD0 MOVZ W0, 0x1
	0x02421BD4 LDP X20, X19, [X31 + 0x20]
	0x02421BD8 LDP X22, X21, [X31 + 0x10]
	0x02421BDC LDP X30, X23, [X31], #0x30
	0x02421BE0 RET
	0x02421BE4 STP X30, X23, [X31 - 0x30]!
	0x02421BE8 STP X22, X21, [X31 + 0x10]
	0x02421BEC STP X20, X19, [X31 + 0x20]
	0x02421BF0 ADRP X22, 0x1FB8000
	0x02421BF4 LDRB W8, [X22 + 0x9CE]
	0x02421BF8 MOV X21, X2
	0x02421BFC MOV X19, X1
	0x02421C00 MOV X20, X0
	0x02421C04 TBNZ X8, 0x0, 0x2421C1C
	0x02421C08 ADRP X0, 0x1CD4000
	0x02421C0C LDR X0, [X0 + 0x278]
	0x02421C10 BL 0x1C16CF4
	0x02421C14 MOVZ W8, 0x1
	0x02421C18 STRB W8, [X22 + 0x9CE]
	0x02421C1C CBNZ X19, 0x2421C38
	0x02421C20 ADRP X8, 0x1CD4000
	0x02421C24 LDR X8, [X8 + 0x278]
	0x02421C28 LDR X8, [X8]
	0x02421C2C LDR X8, [X8 + 0xB8]
	0x02421C30 LDR X19, [X8]
	0x02421C34 CBZ X19, 0x2421C40
	0x02421C38 MOV X0, X31
	0x02421C3C BL 0x32C1424
	0x02421C40 LDR X0, [X21 + 0x20]
	0x02421C44 LDRB W8, [X0 + 0x135]
	0x02421C48 TBNZ X8, 0x0, 0x2421C50
	0x02421C4C BL 0x1C5C684
	0x02421C50 LDR X8, [X0 + 0xC0]
	0x02421C54 MOV X0, X20
	0x02421C58 LDR X8, [X8]
	0x02421C5C LDR X8, [X8 + 0x80]
	0x02421C60 ADD X1, X8, 0x20
	0x02421C64 BL 0x1C16D18
	0x02421C68 LDR X8, [X21 + 0x20]
	0x02421C6C MOV X22, X0
	0x02421C70 ADD X9, X8, 0x135
	0x02421C74 LDRH W9, [X9]
	0x02421C78 TBNZ X9, 0x0, 0x2421C94
	0x02421C7C MOV X0, X8
	0x02421C80 BL 0x1C5C684
	0x02421C84 LDR X8, [X21 + 0x20]
	0x02421C88 ADD X9, X8, 0x135
	0x02421C8C LDRH W9, [X9]
	0x02421C90 B 0x2421C98
	0x02421C94 MOV X0, X8
	0x02421C98 LDR X10, [X0 + 0xC0]
	0x02421C9C LDR X10, [X10 + 0x78]
	0x02421CA0 LDR X23, [X10]
	0x02421CA4 TBNZ X9, 0x0, 0x2421CB4
	0x02421CA8 MOV X0, X8
	0x02421CAC BL 0x1C5C684
	0x02421CB0 MOV X8, X0
	0x02421CB4 LDR X8, [X8 + 0xC0]
	0x02421CB8 MOV X0, X20
	0x02421CBC LDR X1, [X8 + 0x78]
	0x02421CC0 BLR X23
	0x02421CC4 MOV W2, W0
	0x02421CC8 MOV X0, X19
	0x02421CCC MOV X1, X22
	0x02421CD0 MOV X3, X31
	0x02421CD4 BL 0x1E3823C
	0x02421CD8 LDR X8, [X21 + 0x20]
	0x02421CDC MOV X21, X0
	0x02421CE0 UBFM X23, X0, 0x20, 0x3F
	0x02421CE4 LDRB W9, [X8 + 0x135]
	0x02421CE8 TBNZ X9, 0x0, 0x2421CF8
	0x02421CEC MOV X0, X8
	0x02421CF0 BL 0x1C5C684
	0x02421CF4 MOV X8, X0
	0x02421CF8 LDR X8, [X8 + 0xC0]
	0x02421CFC MOVZ W1, 0x4
	0x02421D00 LDR X8, [X8]
	0x02421D04 LDR X22, [X8 + 0x80]
	0x02421D08 MOV X0, X22
	0x02421D0C BL 0x1C16D14
	0x02421D10 MOV X0, X20
	0x02421D14 MOV X1, X22
	0x02421D18 BL 0x1C16D18
	0x02421D1C STR W23, [X0]
	0x02421D20 CBZ X19, 0x2421D40
	0x02421D24 LDR W8, [X19 + 0x10]
	0x02421D28 LDP X20, X19, [X31 + 0x20]
	0x02421D2C CMP W8, W21
	0x02421D30 LDP X22, X21, [X31 + 0x10]
	0x02421D34 CSET W0, EQ
	0x02421D38 LDP X30, X23, [X31], #0x30
	0x02421D3C RET
	0x02421D40 BL 0x1C16F20
	0x02421D44 SUB X31, X31, 0x40
	0x02421D48 STP X30, X23, [X31 + 0x10]
	0x02421D4C STP X22, X21, [X31 + 0x20]
	0x02421D50 STP X20, X19, [X31 + 0x30]
	0x02421D54 LDR X8, [X3 + 0x20]
	0x02421D58 MOV X22, X3
	0x02421D5C MOV W19, W2
	0x02421D60 MOV W20, W1
	0x02421D64 ADD X9, X8, 0x135
	0x02421D68 LDRH W9, [X9]
	0x02421D6C MOV X21, X0
	0x02421D70 TBNZ X9, 0x0, 0x2421D8C
	0x02421D74 MOV X0, X8
	0x02421D78 BL 0x1C5C684
	0x02421D7C LDR X8, [X22 + 0x20]
	0x02421D80 ADD X9, X8, 0x135
	0x02421D84 LDRH W9, [X9]
	0x02421D88 B 0x2421D90
	0x02421D8C MOV X0, X8
	0x02421D90 LDR X10, [X0 + 0xC0]
	0x02421D94 LDR X10, [X10 + 0x80]
	0x02421D98 LDR X23, [X10]
	0x02421D9C TBNZ X9, 0x0, 0x2421DAC
	0x02421DA0 MOV X0, X8
	0x02421DA4 BL 0x1C5C684
	0x02421DA8 MOV X8, X0
	0x02421DAC LDR X8, [X8 + 0xC0]
	0x02421DB0 MOV X0, X21
	0x02421DB4 LDR X1, [X8 + 0x80]
	0x02421DB8 BLR X23
	0x02421DBC LDR X8, [X22 + 0x20]
	0x02421DC0 MOV W23, W0
	0x02421DC4 ADD X9, X8, 0x135
	0x02421DC8 LDRH W9, [X9]
	0x02421DCC TBNZ X9, 0x0, 0x2421DE8
	0x02421DD0 MOV X0, X8
	0x02421DD4 BL 0x1C5C684
	0x02421DD8 LDR X8, [X22 + 0x20]
	0x02421DDC ADD X9, X8, 0x135
	0x02421DE0 LDRH W9, [X9]
	0x02421DE4 B 0x2421DEC
	0x02421DE8 MOV X0, X8
	0x02421DEC LDR X10, [X0 + 0xC0]
	0x02421DF0 LDR X10, [X10 + 0x88]
	0x02421DF4 LDR X5, [X10]
	0x02421DF8 TBNZ X9, 0x0, 0x2421E10
	0x02421DFC MOV X0, X8
	0x02421E00 STR X5, [X31 + 0x8]
	0x02421E04 BL 0x1C5C684
	0x02421E08 LDR X5, [X31 + 0x8]
	0x02421E0C MOV X8, X0
	0x02421E10 LDR X8, [X8 + 0xC0]
	0x02421E14 SUB W3, W23, W19
	0x02421E18 AND W1, W20, 0xFFFF
	0x02421E1C MOV X0, X21
	0x02421E20 LDR X4, [X8 + 0x88]
	0x02421E24 MOV W2, W19
	0x02421E28 LDP X20, X19, [X31 + 0x30]
	0x02421E2C LDP X22, X21, [X31 + 0x20]
	0x02421E30 LDP X30, X23, [X31 + 0x10]
	0x02421E34 ADD X31, X31, 0x40
	0x02421E38 BR X5
	0x02421E3C SUB X31, X31, 0x40
	0x02421E40 STP X30, X23, [X31 + 0x10]
	0x02421E44 STP X22, X21, [X31 + 0x20]
	0x02421E48 STP X20, X19, [X31 + 0x30]
	0x02421E4C LDR X8, [X4 + 0x20]
	0x02421E50 MOV W19, W3
	0x02421E54 MOV W20, W2
	0x02421E58 MOV W21, W1
	0x02421E5C ADD X9, X8, 0x135
	0x02421E60 LDRH W9, [X9]
	0x02421E64 MOV X22, X0
	0x02421E68 TBNZ X9, 0x0, 0x2421E88
	0x02421E6C MOV X0, X8
	0x02421E70 MOV X23, X4
	0x02421E74 BL 0x1C5C684
	0x02421E78 LDR X8, [X23 + 0x20]
	0x02421E7C ADD X9, X8, 0x135
	0x02421E80 LDRH W9, [X9]
	0x02421E84 B 0x2421E8C
	0x02421E88 MOV X0, X8

ISIL:
	001 Move [X31-160], D15
	002 Move [X31-152], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+72], X30
	011 Move [X31+80], X28
	012 Move [X31+88], X27
	013 Move [X31+96], X26
	014 Move [X31+104], X25
	015 Move [X31+112], X24
	016 Move [X31+120], X23
	017 Move [X31+128], X22
	018 Move [X31+136], X21
	019 Move [X31+144], X20
	020 Move [X31+152], X19
	021 Subtract X31, X31, 544
	022 NotImplemented "Instruction MRS not yet implemented."
	023 Move X8, [X22+40]
	024 Move X20, 0x1FB9000
	025 Move X19, X0
	026 Move [X31+536], X8
	027 Move W8, [X20+2505]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {55}
	032 Move X0, 0x1CD3000
	033 Move X0, [X0+2600]
	034 Call 0x1C17CF4
	035 Move X0, 0x1CD3000
	036 Move X0, [X0+1880]
	037 Call 0x1C17CF4
	038 Move X0, 0x1CFC000
	039 Move X0, [X0+3232]
	040 Call 0x1C17CF4
	041 Move X0, 0x1CDD000
	042 Move X0, [X0+1728]
	043 Call 0x1C17CF4
	044 Move X0, 0x1CD3000
	045 Move X0, [X0+1432]
	046 Call 0x1C17CF4
	047 Move X0, 0x1CFC000
	048 Move X0, [X0+3240]
	049 Call 0x1C17CF4
	050 Move X0, 0x1CFC000
	051 Move X0, [X0+3248]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X20+2505], W8
	055 Move [X31+304], X31
	056 Move [X31+312], X31
	057 Move [X31+288], X31
	058 Move [X31+296], X31
	059 Move [X31+284], W31
	060 Move [X31+272], X31
	061 Move W8, [X19+176]
	062 Compare W8, 0
	063 JumpIfEqual {89}
	064 Move X8, [X22+40]
	065 Move X9, [X31+536]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Add X31, X31, 544
	068 Move X20, [X31+144]
	069 Move X19, [X31+152]
	070 Move X22, [X31+128]
	071 Move X21, [X31+136]
	072 Move X24, [X31+112]
	073 Move X23, [X31+120]
	074 Move X26, [X31+96]
	075 Move X25, [X31+104]
	076 Move X28, [X31+80]
	077 Move X27, [X31+88]
	078 Move X29, [X31+64]
	079 Move X30, [X31+72]
	080 Move D9, [X31+48]
	081 Move D8, [X31+56]
	082 Move D11, [X31+32]
	083 Move D10, [X31+40]
	084 Move D13, [X31+16]
	085 Move D12, [X31+24]
	086 Move D15, [X31+160]
	087 Move D14, [X31+168]
	088 Return 
	089 Move X0, [X19+64]
	090 Compare X0, 0
	091 JumpIfEqual {1044}
	092 Move X1, X31
	093 Call NetworkObject.get_IsInSimulation, X0
	094 Move W29, W0
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {116}
	099 Move X8, [X19+192]
	100 Compare X8, 0
	101 JumpIfEqual {64}
	102 Move W9, [X8+72]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X24, X19
	105 Add X24, X24, 136
	106 Move X23, [X24]
	107 Move W8, [X8+76]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 NotImplemented "Instruction CSET not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Compare W8, 0
	112 JumpIfNotEqual {121}
	113 Compare X23, 0
	114 JumpIfEqual {64}
	115 Move W25, 1
	116 Move X24, X19
	117 Add X24, X24, 136
	118 Move X23, [X24]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 NotImplemented "Instruction CSET not yet implemented."
	121 Move X8, [X19+64]
	122 Compare X8, 0
	123 JumpIfEqual {1044}
	124 Move W8, [X8+128]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X28, [X19+168]
	127 Add X1, X31, 304
	128 Add X2, X31, 288
	129 Add X3, X31, 284
	130 Move X0, X19
	131 Move X4, X31
	132 Call NetworkBehaviour.TryGetSnapshotsBuffers, X0, X1, X2, X3
	133 Move TEMP, X0
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfNotEqual {278}
	137 Move X20, 0x1CFC000
	138 Move X20, [X20+3232]
	139 Add X8, X31, 384
	140 Add X0, X31, 304
	141 Move W1, W31
	142 Move X2, [X20]
	143 Add X26, X31, 384
	144 Call NetworkBehaviourBuffer.ReinterpretState, X0, X1
	145 Move X9, [X31+384]
	146 NotImplemented "Instruction LDUR not yet implemented."
	147 Move V0, [X31+392]
	148 NotImplemented "Instruction LDUR not yet implemented."
	149 NotImplemented "Instruction LDUR not yet implemented."
	150 Move [X31+208], X8
	151 Move [X31+216], X9
	152 Move X8, [X26+48]
	153 NotImplemented "Instruction LDUR not yet implemented."
	154 Move [X31+15], V0
	155 Move V0, [X31+400]
	156 Move [X31+232], X8
	157 Move W8, [X31+428]
	158 Move [X31+152], X9
	159 Move W9, [X31+516]
	160 Move [X31+228], S0
	161 Move [X31+200], X8
	162 Move W8, [X31+488]
	163 NotImplemented "Instruction LDUR not yet implemented."
	164 Move [X31+148], W9
	165 Move X10, [X26+136]
	166 Move X9, [X26+144]
	167 Move X2, [X20]
	168 Move V12, [X31+404]
	169 Move V9, [X31+408]
	170 Move V8, [X31+412]
	171 Move V10, [X31+416]
	172 Move V11, [X31+492]
	173 Move V14, [X31+496]
	174 Move V15, [X31+500]
	175 Move V13, [X31+504]
	176 Move [X31+368], W8
	177 Add X8, X31, 384
	178 Add X0, X31, 288
	179 Move W1, W31
	180 Move [X31+128], X9
	181 Move [X31+136], X10
	182 Move [X31+320], V0
	183 Move [X31+328], V1
	184 Move [X31+22], V2
	185 Call NetworkBehaviourBuffer.ReinterpretState, X0, X1
	186 Move W8, [X19+144]
	187 Move W27, [X31+432]
	188 Move V6, V10
	189 Move V5, V8
	190 Move V7, V9
	191 Move [X31+176], S10
	192 Move [X31+184], S8
	193 Move [X31+172], S12
	194 Compare W8, 0
	195 JumpIfEqual {200}
	196 Move V6, V13
	197 Move V5, V15
	198 Move V7, V14
	199 Move V12, V11
	200 And W9, W29, W25
	201 Move [X31+196], W9
	202 Move W9, [X19+130]
	203 Move X10, [X31+232]
	204 Move [X31+192], S13
	205 Move [X31+160], S15
	206 Move [X31+168], S14
	207 Move [X31+168], S11
	208 Move X16, [X31+384]
	209 NotImplemented "Instruction LDUR not yet implemented."
	210 Move W12, [X31+428]
	211 NotImplemented "Instruction LDUR not yet implemented."
	212 Move W14, [X31+516]
	213 Move X13, [X26+136]
	214 Move X21, [X26+144]
	215 Move V8, [X31+392]
	216 Move V4, [X31+400]
	217 Move V16, [X31+404]
	218 Move V17, [X31+408]
	219 Move V18, [X31+412]
	220 Move V19, [X31+416]
	221 Move V10, [X31+492]
	222 Move V14, [X31+496]
	223 Move V15, [X31+500]
	224 Move V11, [X31+504]
	225 Move W29, [X19+129]
	226 Move X20, [X31+216]
	227 Move V13, [X31+228]
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Xor W15, W9, 1
	230 NotImplemented "Instruction CSET not yet implemented."
	231 NotImplemented "Instruction CMP not yet implemented."
	232 NotImplemented "Instruction CSET not yet implemented."
	233 And W9, W9, W10
	234 Move TEMP, X27
	235 And TEMP, TEMP, -2147483648
	236 Compare TEMP, -2147483648
	237 JumpIfEqual {290}
	238 Move X10, [X31+200]
	239 Move X11, [X31+208]
	240 Move V0, [X31+15]
	241 Move S16, [X31+172]
	242 Move S19, [X31+176]
	243 Move V18, [X31+180]
	244 Move S14, [X31+164]
	245 Move S10, [X31+168]
	246 Move V15, [X31+160]
	247 Move V11, [X31+192]
	248 Move X0, [X31+152]
	249 Move W14, [X31+148]
	250 Move X21, [X31+128]
	251 Move X13, [X31+136]
	252 Move X16, X20
	253 Move V4, V13
	254 Move V17, V9
	255 Move W12, W10
	256 Move V8, V0
	257 Move TEMP, X9
	258 And TEMP, TEMP, 1
	259 Compare TEMP, 1
	260 JumpIfEqual {292}
	261 Move X9, [X31+200]
	262 Move X11, [X31+208]
	263 Move V3, [X31+15]
	264 Move V11, [X31+192]
	265 Move S15, [X31+160]
	266 Move S14, [X31+164]
	267 Move S10, [X31+168]
	268 Move S16, [X31+172]
	269 Move S19, [X31+176]
	270 Move S18, [X31+180]
	271 NotImplemented "Instruction CMP not yet implemented."
	272 NotImplemented "Instruction CSET not yet implemented."
	273 Move W12, W9
	274 Move [X31+84], S9
	275 Move V17, V9
	276 Move V4, V13
	277 Move V8, V3
	278 Move X8, 0x1CD3000
	279 Move X8, [X8+2600]
	280 Move X0, [X8]
	281 Move W8, [X0+224]
	282 Compare W8, 0
	283 JumpIfNotEqual {285}
	284 Call 0x1C17DFC
	285 Move X8, 0x1CFC000
	286 Move X8, [X8+3248]
	287 Move X1, X31
	288 Move X0, [X8]
	289 Call Debug.LogWarning, X0
	290 Compare W9, 0
	291 JumpIfEqual {623}
	292 Move [X31+96], X16
	293 Move [X31+112], W15
	294 Move [X31+52], W12
	295 Move [X31+56], W14
	296 Move [X31+24], X0
	297 Move [X31+32], X21
	298 Move [X31+40], X13
	299 Move [X31+60], S4
	300 Move [X31+68], S19
	301 Move [X31+68], S18
	302 Move [X31+76], S17
	303 Move [X31+76], S16
	304 Move [X31+184], X11
	305 Move [X31+104], S5
	306 Move [X31+112], S6
	307 Move [X31+80], W29
	308 Compare X28, 0
	309 JumpIfEqual {1044}
	310 Move X0, X28
	311 Move X1, X31
	312 Move V13, V7
	313 Move X28, X20
	314 ShiftRight X28, 32
	315 And X28, X28, 0x7FFFFFFF
	316 Move [X31+88], X0
	317 Call Transform.get_parent, X0
	318 Move X21, 0x1FB8000
	319 Move W8, [X21+2592]
	320 Move X29, X0
	321 Compare W8, 0
	322 JumpIfNotEqual {328}
	323 Move X0, 0x1CD6000
	324 Move X0, [X0+920]
	325 Call 0x1C17CF4
	326 Move W8, 1
	327 Move [X21+2592], W8
	328 Move X8, 0x1CD6000
	329 Move X8, [X8+920]
	330 Move X0, [X8]
	331 Move W8, [X0+224]
	332 Compare W8, 0
	333 JumpIfNotEqual {335}
	334 Call 0x1C17DFC
	335 Or W8, W28, W20
	336 Compare W8, 0
	337 JumpIfEqual {471}
	338 Move X0, X31
	339 Call NetworkTRSPData.get_NonNetworkedParent
	340 Move W8, [X21+2592]
	341 Move X21, X0
	342 Compare W8, 0
	343 JumpIfNotEqual {350}
	344 Move X0, 0x1CD6000
	345 Move X0, [X0+920]
	346 Call 0x1C17CF4
	347 Move W8, 1
	348 Move X9, 0x1FB8000
	349 Move [X9+2592], W8
	350 Move X8, 0x1CD6000
	351 Move X8, [X8+920]
	352 Move X0, [X8]
	353 Move W8, [X0+224]
	354 Compare W8, 0
	355 JumpIfNotEqual {357}
	356 Call 0x1C17DFC
	357 Move X8, X21
	358 ShiftRight X8, 32
	359 And X8, X8, 0x7FFFFFFF
	360 NotImplemented "Instruction CMP not yet implemented."
	361 NotImplemented "Instruction CSET not yet implemented."
	362 NotImplemented "Instruction CMP not yet implemented."
	363 NotImplemented "Instruction CSET not yet implemented."
	364 And W20, W9, W8
	365 Move TEMP, X20
	366 And TEMP, TEMP, 1
	367 Compare TEMP, 1
	368 JumpIfNotEqual {531}
	369 Move W8, 1
	370 Move [X31+112], W8
	371 Move X8, 0x1CD3000
	372 Move W29, [X31+80]
	373 Move X8, [X8+1432]
	374 Move X21, 0x1FB8000
	375 Move X0, [X8]
	376 Move W8, [X0+224]
	377 Compare W8, 0
	378 JumpIfNotEqual {380}
	379 Call 0x1C17DFC
	380 Move X0, X23
	381 Move X1, X31
	382 Call Object.op_Implicit, X0
	383 Move TEMP, X0
	384 And TEMP, TEMP, 1
	385 Compare TEMP, 1
	386 JumpIfNotEqual {428}
	387 Compare X23, 0
	388 JumpIfEqual {1044}
	389 Move S0, W31
	390 Move S1, W31
	391 Move S2, W31
	392 Move X0, X23
	393 Move X1, X31
	394 Call Transform.set_localPosition, X0, X1
	395 Move X21, 0x1FB8000
	396 Move W8, [X21+1939]
	397 Compare W8, 0
	398 JumpIfNotEqual {404}
	399 Move X0, 0x1CD4000
	400 Move X0, [X0+1448]
	401 Call 0x1C17CF4
	402 Move W8, 1
	403 Move [X21+1939], W8
	404 Move X8, 0x1CD4000
	405 Move X8, [X8+1448]
	406 Move X0, X23
	407 Move X1, X31
	408 Move X8, [X8]
	409 Move X8, [X8+184]
	410 Move S0, [X8]
	411 Move S1, [X8+4]
	412 Move S2, [X8+8]
	413 Move S3, [X8+12]
	414 Call Transform.set_localRotation, X0, X1
	415 Move W8, [X19+129]
	416 Move X21, 0x1FB8000
	417 Compare W8, 0
	418 JumpIfEqual {427}
	419 Move X0, [X24]
	420 Compare X0, 0
	421 JumpIfEqual {1044}
	422 Move S0, 1
	423 Move S1, 1
	424 Move S2, 1
	425 Move X1, X31
	426 Call Transform.set_localScale, X0, X1
	427 Move [X19+179], W31
	428 Move S5, [X31+104]
	429 Move S6, [X31+108]
	430 Move S17, [X31+72]
	431 Move S16, [X31+76]
	432 Move S19, [X31+64]
	433 Move S18, [X31+68]
	434 Move V4, [X31+60]
	435 Move W14, [X31+56]
	436 Move W15, [X31+112]
	437 Move X9, [X31+96]
	438 Move V7, V13
	439 Move TEMP, X20
	440 And TEMP, TEMP, 1
	441 Compare TEMP, 1
	442 JumpIfNotEqual {571}
	443 Move V0, [X31+15]
	444 Move S1, V0.S[1]
	445 Move TEMP, X15
	446 And TEMP, TEMP, 1
	447 Compare TEMP, 1
	448 JumpIfEqual {846}
	449 Move X20, [X31+88]
	450 Move V2, [X31+228]
	451 Move X1, X31
	452 Move V8, V6
	453 Move X0, X20
	454 Move V9, V5
	455 Move V10, V7
	456 Call Transform.set_localPosition, X0, X1
	457 Move X0, X20
	458 Move V0, V12
	459 Move V1, V10
	460 Move V2, V9
	461 Move V3, V8
	462 Move X0, [X19+64]
	463 Compare X0, 0
	464 JumpIfEqual {1044}
	465 Move X1, X31
	466 Call NetworkObject.get_IsProxy, X0
	467 Move TEMP, X0
	468 And TEMP, TEMP, 1
	469 Compare TEMP, 1
	470 JumpIfNotEqual {64}
	471 Move X8, 0x1CD3000
	472 Move X8, [X8+1432]
	473 Move X0, [X8]
	474 Move W8, [X0+224]
	475 Compare W8, 0
	476 JumpIfNotEqual {478}
	477 Call 0x1C17DFC
	478 Move X0, X29
	479 Move X1, X31
	480 Move X2, X31
	481 Call Object.op_Inequality, X0, X1
	482 Move TEMP, X0
	483 And TEMP, TEMP, 1
	484 Compare TEMP, 1
	485 JumpIfNotEqual {492}
	486 Move X0, [X31+88]
	487 Move X1, X31
	488 Move X2, X31
	489 Call Transform.SetParent, X0, X1
	490 Move W8, 1
	491 Move [X19+178], W8
	492 Move W8, [X21+2592]
	493 Move W29, [X31+80]
	494 Compare W8, 0
	495 JumpIfNotEqual {501}
	496 Move X0, 0x1CD6000
	497 Move X0, [X0+920]
	498 Call 0x1C17CF4
	499 Move W8, 1
	500 Move [X21+2592], W8
	501 Move X8, 0x1CD6000
	502 Move X8, [X8+920]
	503 Move X0, [X8]
	504 Move W8, [X0+224]
	505 Compare W8, 0
	506 JumpIfNotEqual {508}
	507 Call 0x1C17DFC
	508 Move X8, [X31+96]
	509 NotImplemented "Instruction CMP not yet implemented."
	510 Move X8, X8
	511 ShiftRight X8, 32
	512 And X8, X8, 0x7FFFFFFF
	513 NotImplemented "Instruction CMP not yet implemented."
	514 Move X28, [X31+88]
	515 Move S5, [X31+104]
	516 Move S6, [X31+108]
	517 Move V7, V13
	518 Move X11, [X31+184]
	519 Move W12, [X31+52]
	520 Move W14, [X31+56]
	521 Move V13, [X31+228]
	522 Move S17, [X31+72]
	523 Move S16, [X31+76]
	524 Move S19, [X31+64]
	525 Move S18, [X31+68]
	526 Move V4, [X31+60]
	527 Move X21, [X31+32]
	528 Move X13, [X31+40]
	529 Move X0, [X31+24]
	530 Move W15, [X31+112]
	531 Move X0, [X19+56]
	532 Compare X0, 0
	533 JumpIfEqual {1044}
	534 Move X21, [X31+216]
	535 Add X2, X31, 272
	536 Move X3, X31
	537 Move X1, X21
	538 Call NetworkRunner.TryFindBehaviour, X0, X1, X2
	539 Move TEMP, X0
	540 And TEMP, TEMP, 1
	541 Compare TEMP, 1
	542 JumpIfNotEqual {853}
	543 Move X0, [X31+272]
	544 Compare X0, 0
	545 JumpIfEqual {1044}
	546 Move X1, X31
	547 Call Component.get_transform, X0
	548 Move X8, 0x1CD3000
	549 Move X8, [X8+1432]
	550 Move X21, X0
	551 Move X8, [X8]
	552 Move W9, [X8+224]
	553 Compare W9, 0
	554 JumpIfNotEqual {557}
	555 Move X0, X8
	556 Call 0x1C17DFC
	557 Move X0, X29
	558 Move X1, X21
	559 Move X2, X31
	560 Call Object.op_Inequality, X0, X1
	561 Move TEMP, X0
	562 And TEMP, TEMP, 1
	563 Compare TEMP, 1
	564 JumpIfNotEqual {371}
	565 Move X0, [X31+88]
	566 Move X1, X21
	567 Move X2, X31
	568 Call Transform.SetParent, X0, X1
	569 Move W8, 1
	570 Move [X19+178], W8
	571 Move W8, [X21+2592]
	572 Compare W8, 0
	573 JumpIfNotEqual {590}
	574 Move X0, 0x1CD6000
	575 Move X0, [X0+920]
	576 Call 0x1C17CF4
	577 Move X9, [X31+96]
	578 Move W15, [X31+112]
	579 Move W14, [X31+56]
	580 Move S4, [X31+60]
	581 Move S19, [X31+64]
	582 Move S18, [X31+68]
	583 Move S17, [X31+72]
	584 Move V16, [X31+76]
	585 Move S5, [X31+104]
	586 Move S6, [X31+108]
	587 Move V7, V13
	588 Move W8, 1
	589 Move [X21+2592], W8
	590 Move X8, 0x1CD6000
	591 Move X8, [X8+920]
	592 Move X20, [X31+216]
	593 Move X0, [X8]
	594 Move W8, [X0+224]
	595 Compare W8, 0
	596 JumpIfNotEqual {609}
	597 Call 0x1C17DFC
	598 Move X9, [X31+96]
	599 Move W15, [X31+112]
	600 Move W14, [X31+56]
	601 Move S4, [X31+60]
	602 Move S19, [X31+64]
	603 Move S18, [X31+68]
	604 Move S17, [X31+72]
	605 Move V16, [X31+76]
	606 Move S5, [X31+104]
	607 Move S6, [X31+108]
	608 Move V7, V13
	609 NotImplemented "Instruction CMP not yet implemented."
	610 Move X8, X9
	611 ShiftRight X8, 32
	612 And X8, X8, 0x7FFFFFFF
	613 NotImplemented "Instruction CMP not yet implemented."
	614 Move X28, [X31+88]
	615 Move X11, [X31+184]
	616 Move W12, [X31+52]
	617 Move V13, [X31+228]
	618 Move X21, [X31+32]
	619 Move X13, [X31+40]
	620 Move X0, [X31+24]
	621 And W15, W15, 1
	622 Move [X31+196], W31
	623 Move X8, [X31+232]
	624 NotImplemented "Instruction CMP not yet implemented."
	625 NotImplemented "Instruction CSET not yet implemented."
	626 Move [X31+84], S9
	627 NotImplemented "Instruction CMP not yet implemented."
	628 Move TEMP, X27
	629 And TEMP, TEMP, -2147483648
	630 Compare TEMP, -2147483648
	631 JumpIfNotEqual {670}
	632 Move W1, W14
	633 Move X2, X31
	634 Move W27, W12
	635 Move [X31+184], X11
	636 Move W24, W29
	637 Move W29, W20
	638 Move X20, X13
	639 Move V10, V6
	640 Move V11, V5
	641 Move V14, V7
	642 Call 0x1E2F6F8
	643 Move V3, [X31+284]
	644 Move V0.S[1], V1.S[0]
	645 Move V1, [X31+15]
	646 Move S4, 1
	647 Move S5, W31
	648 NotImplemented "Instruction FCMP not yet implemented."
	649 Subtract V0, V0, V1
	650 NotImplemented "Instruction FMIN not yet implemented."
	651 Subtract S2, S2, S13
	652 NotImplemented "Instruction FCSEL not yet implemented."
	653 Move X0, X20
	654 Move X1, X21
	655 Move X2, X31
	656 NotImplemented "Instruction INVALID not yet implemented."
	657 Move V9, V13
	658 Multiply S13, S2, S1
	659 Move W20, W29
	660 Move W29, W24
	661 Call 0x242F7C0
	662 Move V6, V10
	663 Move V10, V0
	664 Move V0, [X31+284]
	665 Move V7, V14
	666 Move V5, V11
	667 Move V14, V1
	668 Move V15, V2
	669 Move V11, V3
	670 Move W8, [X19+144]
	671 Move V3, [X31+15]
	672 Move V0, [X31+284]
	673 Move S1, 1
	674 Move S2, W31
	675 Subtract V3, V8, V3
	676 NotImplemented "Instruction FMIN not yet implemented."
	677 NotImplemented "Instruction FCMP not yet implemented."
	678 Subtract S4, S4, S13
	679 NotImplemented "Instruction FCSEL not yet implemented."
	680 Move W27, W12
	681 Move V9, V13
	682 NotImplemented "Instruction INVALID not yet implemented."
	683 Multiply S13, S4, S1
	684 Move [X31+184], X11
	685 Compare W8, 0
	686 JumpIfNotEqual {691}
	687 Move V10, V16
	688 Move V14, V17
	689 Move V15, V18
	690 Move V11, V19
	691 Move [X31], S0
	692 Move V0, V12
	693 Move V1, V7
	694 Move V2, V5
	695 Move V3, V6
	696 Move V4, V10
	697 Move V5, V14
	698 Move V6, V15
	699 Move V7, V11
	700 Move X0, X31
	701 Call Quaternion.Slerp, X0, X1, V0
	702 Move V12, V0
	703 Move V0, [X31+15]
	704 Move W8, [X31+196]
	705 Move V11, V1
	706 Move V5, V2
	707 Move V6, V3
	708 Add S13, S9, S13
	709 Add V2, V0, V8
	710 Compare W8, 0
	711 JumpIfEqual {755}
	712 Compare X23, 0
	713 JumpIfEqual {1044}
	714 Move S1, V2.S[1]
	715 Move X0, X23
	716 Move V0, V2
	717 Move V2, V13
	718 Move V3, V12
	719 Move V4, V11
	720 Move X1, X31
	721 Call Transform.SetPositionAndRotation, X0, X1, X2
	722 Compare W29, 0
	723 JumpIfEqual {753}
	724 Move X1, [X31+200]
	725 Move X0, [X31+208]
	726 Move X2, X31
	727 Call 0x1E2F6F8
	728 Move X0, [X31+184]
	729 Move W1, W27
	730 Move X2, X31
	731 Move V8, V0
	732 Move V9, V1
	733 Move V10, V2
	734 Call 0x1E2F6F8
	735 Move V3, [X31+284]
	736 Move S4, 1
	737 Subtract S0, S0, S8
	738 Subtract S1, S1, S9
	739 NotImplemented "Instruction FMIN not yet implemented."
	740 NotImplemented "Instruction FCMP not yet implemented."
	741 Move S3, W31
	742 Subtract S2, S2, S10
	743 NotImplemented "Instruction FCSEL not yet implemented."
	744 Multiply S0, S0, S3
	745 Multiply S1, S1, S3
	746 Multiply S2, S2, S3
	747 Add S0, S8, S0
	748 Add S1, S9, S1
	749 Add S2, S10, S2
	750 Move X0, X23
	751 Move X1, X31
	752 Call Transform.set_localScale, X0, X1
	753 Move W8, 1
	754 Move [X19+179], W8
	755 Move V10, V9
	756 Move V9, V5
	757 Move [X31+228], S6
	758 Compare W29, 0
	759 JumpIfEqual {789}
	760 Move X1, [X31+200]
	761 Move X0, [X31+208]
	762 Move X2, X31
	763 Move [X31+7], V2
	764 Call 0x1E2F6F8
	765 Move X0, [X31+184]
	766 Move W1, W27
	767 Move X2, X31
	768 Move V14, V0
	769 Move V15, V1
	770 Move V8, V2
	771 Call 0x1E2F6F8
	772 Move V3, [X31+284]
	773 Move S4, 1
	774 Subtract S0, S0, S14
	775 Subtract S2, S2, S8
	776 NotImplemented "Instruction FMIN not yet implemented."
	777 NotImplemented "Instruction FCMP not yet implemented."
	778 Move S3, W31
	779 NotImplemented "Instruction FCSEL not yet implemented."
	780 Multiply S0, S0, S3
	781 Multiply S2, S2, S3
	782 Add S14, S14, S0
	783 Add S0, S8, S2
	784 Move V2, [X31+7]
	785 Subtract S1, S1, S15
	786 Multiply S1, S1, S3
	787 Add S15, S15, S1
	788 Move [X31+196], S0
	789 Move S0, W31
	790 Move [X31+196], S0
	791 Move S15, W31
	792 Move S14, W31
	793 Move V3, [X31+84]
	794 Move V4, [X31+192]
	795 Move TEMP, X25
	796 And TEMP, TEMP, 1
	797 Compare TEMP, 1
	798 JumpIfEqual {802}
	799 Move W8, [X19+179]
	800 Compare W8, 0
	801 JumpIfEqual {886}
	802 Compare X28, 0
	803 JumpIfEqual {1044}
	804 Move S1, V2.S[1]
	805 Move X0, X28
	806 Move V0, V2
	807 Move V2, V13
	808 Move TEMP, X20
	809 And TEMP, TEMP, 1
	810 Compare TEMP, 1
	811 JumpIfNotEqual {821}
	812 Move X1, X31
	813 Call Transform.set_localPosition, X0, X1
	814 Move V3, [X31+228]
	815 Move X0, X28
	816 Move V0, V12
	817 Move V1, V11
	818 Move V2, V9
	819 Move X1, X31
	820 Call Transform.set_localRotation, X0, X1
	821 Move V6, [X31+228]
	822 Move V3, V12
	823 Move V4, V11
	824 Move V5, V9
	825 Move X1, X31
	826 Call Transform.SetPositionAndRotation, X0, X1, X2
	827 Compare W29, 0
	828 JumpIfEqual {1042}
	829 Move V2, [X31+196]
	830 Move X0, X28
	831 Move V0, V14
	832 Move V1, V15
	833 Move V0, [X31+15]
	834 Move W8, [X31+196]
	835 Move S1, V0.S[1]
	836 Compare W8, 0
	837 JumpIfEqual {1021}
	838 Move V2, [X31+228]
	839 Move S5, [X31+104]
	840 Move S6, [X31+108]
	841 Move X0, X23
	842 Move V3, V12
	843 Move V4, V13
	844 Move X1, X31
	845 Call Transform.SetPositionAndRotation, X0, X1, X2
	846 Move X20, [X31+88]
	847 Move V2, [X31+228]
	848 Move V3, V12
	849 Move V4, V7
	850 Move X0, X20
	851 Move X1, X31
	852 Call Transform.SetPositionAndRotation, X0, X1, X2
	853 Move X8, 0x1CDD000
	854 Move X8, [X8+1728]
	855 Add X1, X31, 384
	856 Move [X31+384], X21
	857 Move X0, [X8]
	858 Call 0x1C17E04
	859 Move X8, 0x1CD3000
	860 Move X8, [X8+1880]
	861 Move X19, X0
	862 Add X1, X31, 268
	863 Move [X31+268], W28
	864 Move X0, [X8]
	865 Call 0x1C17E04
	866 Move X8, 0x1CFC000
	867 Move X8, [X8+3240]
	868 Move X2, X0
	869 Move X1, X19
	870 Move X3, X31
	871 Move X8, [X8]
	872 Move X0, X8
	873 Call String.Format, X0, X1, X2
	874 Move X8, 0x1CD3000
	875 Move X8, [X8+2600]
	876 Move X19, X0
	877 Move X8, [X8]
	878 Move W9, [X8+224]
	879 Compare W9, 0
	880 JumpIfNotEqual {883}
	881 Move X0, X8
	882 Call 0x1C17DFC
	883 Move X0, X19
	884 Move X1, X31
	885 Call Debug.LogError, X0
	886 Move W8, [X19+145]
	887 Compare W8, 0
	888 JumpIfEqual {802}
	889 Move S1, [X19+152]
	890 Move S8, [X19+156]
	891 Move W8, [X19+148]
	892 Move V0, [X19+160]
	893 Move [X31+7], V2
	894 Move [X31+192], S0
	895 Move TEMP, X8
	896 And TEMP, TEMP, 1
	897 Compare TEMP, 1
	898 JumpIfNotEqual {953}
	899 Move X8, [X19]
	900 Move V0, [X31+15]
	901 Move V2, [X31+172]
	902 Move X11, [X31+208]
	903 Move X10, [X31+216]
	904 Move X9, [X8+1128]
	905 Move [X31+408], S3
	906 Move V3, [X31+180]
	907 Move [X31+392], D0
	908 Move [X31+240], S1
	909 Move V0, [X31+320]
	910 Move V1, [X31+336]
	911 Move [X31+412], S3
	912 Move V3, [X31+176]
	913 Move [X31+400], S10
	914 Move [X31+404], S2
	915 Move [X31+384], X10
	916 Move [X31+416], S3
	917 Move [X26+36], X11
	918 Move X11, [X31+200]
	919 Move V2, [X31+22]
	920 Move W10, [X31+368]
	921 Add X1, X31, 384
	922 Move [X31+428], W11
	923 Move X11, [X31+232]
	924 Move [X26+56], V0
	925 Move V0, [X31+168]
	926 Move [X26+72], V1
	927 Move [X26+48], X11
	928 Move [X26+88], V2
	929 Move [X31+492], S0
	930 Move V0, [X31+164]
	931 Move [X31+488], W10
	932 Move X10, [X31+152]
	933 Move [X31+504], S4
	934 Move [X31+496], S0
	935 Move V0, [X31+160]
	936 Move X11, [X31+136]
	937 Move X0, X19
	938 Move [X31+500], S0
	939 Move [X26+124], X10
	940 Move W10, [X31+148]
	941 Move [X31+516], W10
	942 Move X10, [X31+128]
	943 Move [X26+136], X11
	944 Move [X26+144], X10
	945 Move X2, [X8+1136]
	946 NotImplemented "Instruction BLR not yet implemented."
	947 Move V1, [X31+240]
	948 Move V2, [X31+7]
	949 Move TEMP, X0
	950 And TEMP, TEMP, 1
	951 Compare TEMP, 1
	952 JumpIfNotEqual {802}
	953 NotImplemented "Instruction FCMP not yet implemented."
	954 Move V10, V8
	955 Compare X28, 0
	956 JumpIfEqual {1044}
	957 Move X0, X28
	958 Move X1, X31
	959 Move V8, V1
	960 Call Transform.get_position, X0
	961 Subtract S2, S13, S2
	962 Move V0.S[1], V1.S[0]
	963 Multiply S1, S2, S2
	964 Move V2, [X31+7]
	965 Subtract V0, V2, V0
	966 NotImplemented "Instruction INVALID not yet implemented."
	967 NotImplemented "Instruction FADDP not yet implemented."
	968 Add S0, S1, S0
	969 Multiply S1, S8, S8
	970 NotImplemented "Instruction FCMP not yet implemented."
	971 NotImplemented "Instruction FCMP not yet implemented."
	972 Compare X28, 0
	973 JumpIfEqual {1044}
	974 Move X0, X28
	975 Move X1, X31
	976 Call Transform.get_rotation, X0
	977 Move V4, [X31+228]
	978 Multiply S0, S12, S0
	979 Multiply S1, S11, S1
	980 Multiply S2, S9, S2
	981 Move X8, -26435584
	982 Add S0, S0, S1
	983 Multiply S3, S4, S3
	984 Move V1, [X8+436]
	985 Add S0, S2, S0
	986 Add S0, S3, S0
	987 NotImplemented "Instruction FABS not yet implemented."
	988 Move S2, 1
	989 NotImplemented "Instruction FMINNM not yet implemented."
	990 NotImplemented "Instruction FCMP not yet implemented."
	991 Move S1, W31
	992 Call 0x3EB2BB0
	993 Move X8, -26435584
	994 Move V1, [X8+1096]
	995 Add S0, S0, S0
	996 Multiply S1, S0, S1
	997 Move V2, [X31+7]
	998 NotImplemented "Instruction FCMP not yet implemented."
	999 Move V0, [X31+192]
	1000 NotImplemented "Instruction FCMP not yet implemented."
	1001 Compare W29, 0
	1002 JumpIfEqual {64}
	1003 Compare X28, 0
	1004 JumpIfEqual {1044}
	1005 Move X0, X28
	1006 Move X1, X31
	1007 Call Transform.get_localScale, X0
	1008 Move V3, [X31+196]
	1009 Subtract S0, S14, S0
	1010 Subtract S1, S15, S1
	1011 Multiply S0, S0, S0
	1012 Multiply S1, S1, S1
	1013 Subtract S2, S3, S2
	1014 Add S0, S0, S1
	1015 Move V1, [X31+192]
	1016 Multiply S2, S2, S2
	1017 Add S0, S2, S0
	1018 Move V2, [X31+7]
	1019 Multiply S1, S1, S1
	1020 NotImplemented "Instruction FCMP not yet implemented."
	1021 Move X20, [X31+88]
	1022 Move V2, [X31+228]
	1023 Move X1, X31
	1024 Move X0, X20
	1025 Call Transform.set_localPosition, X0, X1
	1026 Move S2, [X31+104]
	1027 Move S3, [X31+108]
	1028 Move X0, X20
	1029 Move V0, V12
	1030 Move V1, V13
	1031 Move X1, X31
	1032 Call Transform.set_localRotation, X0, X1
	1033 Compare W29, 0
	1034 JumpIfEqual {1042}
	1035 Move X1, [X31+200]
	1036 Move X0, [X31+208]
	1037 Move X2, X31
	1038 Call 0x1E2F6F8
	1039 Move X0, X20
	1040 Move X1, X31
	1041 Call Transform.set_localScale, X0, X1
	1042 Move W8, 1
	1043 Move [X19+178], W8
	1044 Call 0x1C17F20
	1045 Call 0x3EB2B20

Method: System.Void Teleport(System.Nullable`1<UnityEngine.Vector3> position = null, System.Nullable`1<UnityEngine.Quaternion> rotation = null)

Disassembly:
	0x02421E8C LDR X10, [X0 + 0xC0]
	0x02421E90 LDR X10, [X10 + 0x88]
	0x02421E94 LDR X5, [X10]
	0x02421E98 TBNZ X9, 0x0, 0x2421EB0
	0x02421E9C MOV X0, X8
	0x02421EA0 STR X5, [X31 + 0x8]
	0x02421EA4 BL 0x1C5C684
	0x02421EA8 LDR X5, [X31 + 0x8]
	0x02421EAC MOV X8, X0
	0x02421EB0 LDR X8, [X8 + 0xC0]
	0x02421EB4 AND W1, W21, 0xFFFF
	0x02421EB8 MOV X0, X22
	0x02421EBC MOV W2, W20
	0x02421EC0 LDR X4, [X8 + 0x88]
	0x02421EC4 MOV W3, W19
	0x02421EC8 LDP X20, X19, [X31 + 0x30]
	0x02421ECC LDP X22, X21, [X31 + 0x20]
	0x02421ED0 LDP X30, X23, [X31 + 0x10]
	0x02421ED4 ADD X31, X31, 0x40
	0x02421ED8 BR X5
	0x02421EDC SUB X31, X31, 0x40
	0x02421EE0 STP X30, X23, [X31 + 0x10]
	0x02421EE4 STP X22, X21, [X31 + 0x20]
	0x02421EE8 STP X20, X19, [X31 + 0x30]
	0x02421EEC LDR X8, [X3 + 0x20]
	0x02421EF0 MOV X22, X3
	0x02421EF4 MOV W19, W2
	0x02421EF8 MOV W20, W1
	0x02421EFC ADD X9, X8, 0x135
	0x02421F00 LDRH W9, [X9]
	0x02421F04 MOV X21, X0
	0x02421F08 TBNZ X9, 0x0, 0x2421F24
	0x02421F0C MOV X0, X8
	0x02421F10 BL 0x1C5C684
	0x02421F14 LDR X8, [X22 + 0x20]
	0x02421F18 ADD X9, X8, 0x135
	0x02421F1C LDRH W9, [X9]
	0x02421F20 B 0x2421F28
	0x02421F24 MOV X0, X8
	0x02421F28 LDR X10, [X0 + 0xC0]
	0x02421F2C LDR X10, [X10 + 0x80]
	0x02421F30 LDR X23, [X10]
	0x02421F34 TBNZ X9, 0x0, 0x2421F44
	0x02421F38 MOV X0, X8
	0x02421F3C BL 0x1C5C684
	0x02421F40 MOV X8, X0
	0x02421F44 LDR X8, [X8 + 0xC0]
	0x02421F48 MOV X0, X21
	0x02421F4C LDR X1, [X8 + 0x80]
	0x02421F50 BLR X23
	0x02421F54 LDR X8, [X22 + 0x20]
	0x02421F58 MOV W23, W0
	0x02421F5C ADD X9, X8, 0x135
	0x02421F60 LDRH W9, [X9]
	0x02421F64 TBNZ X9, 0x0, 0x2421F80
	0x02421F68 MOV X0, X8
	0x02421F6C BL 0x1C5C684
	0x02421F70 LDR X8, [X22 + 0x20]
	0x02421F74 ADD X9, X8, 0x135
	0x02421F78 LDRH W9, [X9]
	0x02421F7C B 0x2421F84
	0x02421F80 MOV X0, X8
	0x02421F84 LDR X10, [X0 + 0xC0]
	0x02421F88 LDR X10, [X10 + 0x88]
	0x02421F8C LDR X5, [X10]
	0x02421F90 TBNZ X9, 0x0, 0x2421FA8
	0x02421F94 MOV X0, X8
	0x02421F98 STR X5, [X31 + 0x8]
	0x02421F9C BL 0x1C5C684
	0x02421FA0 LDR X5, [X31 + 0x8]
	0x02421FA4 MOV X8, X0
	0x02421FA8 LDR X8, [X8 + 0xC0]
	0x02421FAC SUB W3, W23, W19
	0x02421FB0 MOV X0, X21
	0x02421FB4 MOV W1, W20
	0x02421FB8 LDR X4, [X8 + 0x88]
	0x02421FBC MOV W2, W19

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+112], X30
	003 Move [X31+120], X23
	004 Move [X31+128], X22
	005 Move [X31+136], X21
	006 Move [X31+144], X20
	007 Move [X31+152], X19
	008 Move X23, 0x1FB9000
	009 Move W8, [X23+2506]
	010 Move X22, X3
	011 Move X20, X2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x1CD4000
	019 Move X0, [X0+3696]
	020 Call 0x1C17CF4
	021 Move X0, 0x1CFC000
	022 Move X0, [X0+3256]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+2506], W8
	026 Compare X19, 0
	027 JumpIfEqual {95}
	028 Move X0, [X19+64]
	029 Compare X0, 0
	030 JumpIfEqual {95}
	031 Move X1, X31
	032 Call NetworkObject.get_IsInSimulation, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {87}
	037 Move V0, [X22]
	038 Move W8, [X22+16]
	039 Move [X31+64], X31
	040 Move X9, 0x1CFC000
	041 Move X9, [X9+3256]
	042 NotImplemented "Instruction MOVI not yet implemented."
	043 Add X0, X31, 32
	044 Add X3, X31, 80
	045 Move X5, [X9]
	046 Move W4, 1
	047 Move X1, X21
	048 Move X2, X20
	049 Move [X31+32], V1
	050 Move [X31+40], V1
	051 Move [X31+16], W8
	052 Move [X31], V0
	053 Move [X31+5], V0
	054 Move [X31+96], W8
	055 Call 0x27BA1C8, X0, X1, X2, X3
	056 Move X8, [X31+64]
	057 Move V0, [X31+32]
	058 Move V1, [X31+48]
	059 Move X20, [X19+192]
	060 Move [X19+240], X8
	061 Move [X19+208], V0
	062 Move [X19+216], V1
	063 Compare X20, 0
	064 JumpIfEqual {95}
	065 Move W8, [X20+128]
	066 Compare W8, 0
	067 JumpIfEqual {73}
	068 Move X8, [X19]
	069 Move X0, X19
	070 Move X9, [X8+1144]
	071 Move X1, [X8+1152]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move X8, 0x1CD4000
	074 Move X8, [X8+3696]
	075 Move X0, [X8]
	076 Call 0x1C17F10
	077 Move X8, [X19]
	078 Move X1, X19
	079 Move X3, X31
	080 Move X21, X0
	081 Move X2, [X8+1152]
	082 Call Action..ctor, X0, X1, X2
	083 Move X0, X20
	084 Move X1, X21
	085 Move X2, X31
	086 Call RunnerSimulatePhysicsBase.QueueAfterSimulationCallback, X0, X1
	087 Move X20, [X31+144]
	088 Move X19, [X31+152]
	089 Move X22, [X31+128]
	090 Move X21, [X31+136]
	091 Move X30, [X31+112]
	092 Move X23, [X31+120]
	093 Add X31, X31, 160
	094 Return 
	095 Call 0x1C17F20

Method: System.Void ApplyDeferredTeleport()

Disassembly:
	0x02421FC0 LDP X20, X19, [X31 + 0x30]
	0x02421FC4 LDP X22, X21, [X31 + 0x20]
	0x02421FC8 LDP X30, X23, [X31 + 0x10]
	0x02421FCC ADD X31, X31, 0x40
	0x02421FD0 BR X5
	0x02421FD4 STR X30, [X31 - 0x40]!
	0x02421FD8 STP X24, X23, [X31 + 0x10]
	0x02421FDC STP X22, X21, [X31 + 0x20]
	0x02421FE0 STP X20, X19, [X31 + 0x30]
	0x02421FE4 LDR X8, [X4 + 0x20]
	0x02421FE8 MOV X20, X4
	0x02421FEC MOV W22, W3
	0x02421FF0 MOV W19, W2
	0x02421FF4 ADD X9, X8, 0x135
	0x02421FF8 LDRH W9, [X9]
	0x02421FFC MOV W21, W1
	0x02422000 MOV X23, X0
	0x02422004 TBNZ X9, 0x0, 0x2422020
	0x02422008 MOV X0, X8
	0x0242200C BL 0x1C5C684
	0x02422010 LDR X8, [X20 + 0x20]
	0x02422014 ADD X9, X8, 0x135
	0x02422018 LDRH W9, [X9]
	0x0242201C B 0x2422024
	0x02422020 MOV X0, X8
	0x02422024 LDR X10, [X0 + 0xC0]
	0x02422028 LDR X10, [X10 + 0x68]
	0x0242202C LDR X24, [X10]
	0x02422030 TBNZ X9, 0x0, 0x2422040
	0x02422034 MOV X0, X8
	0x02422038 BL 0x1C5C684
	0x0242203C MOV X8, X0
	0x02422040 LDR X8, [X8 + 0xC0]
	0x02422044 MOV X0, X23
	0x02422048 LDR X1, [X8 + 0x68]
	0x0242204C BLR X24
	0x02422050 TBNZ X19, 0x1F, 0x24220E0
	0x02422054 CMP W0, W19
	0x02422058 B.LT 0x24220E0
	0x0242205C TBNZ X22, 0x1F, 0x2422100
	0x02422060 ADD W8, W22, W19
	0x02422064 CMP W8, W0
	0x02422068 B.GT 0x2422100
	0x0242206C LDR X0, [X20 + 0x20]
	0x02422070 LDRB W8, [X0 + 0x135]
	0x02422074 TBNZ X8, 0x0, 0x242207C
	0x02422078 BL 0x1C5C684
	0x0242207C LDR X8, [X0 + 0xC0]
	0x02422080 MOV X0, X23
	0x02422084 LDR X8, [X8]
	0x02422088 LDR X8, [X8 + 0x80]
	0x0242208C ADD X1, X8, 0x20
	0x02422090 BL 0x1C16D18
	0x02422094 CMP W22, 0x1
	0x02422098 B.LT 0x24220C4
	0x0242209C MOV W9, W19
	0x024220A0 MOV W8, W22
	0x024220A4 ADD X9, X0, X9, 0x2, LSL
	0x024220A8 LDR W10, [X9]
	0x024220AC CMP W10, W21
	0x024220B0 B.EQ 0x24220C8
	0x024220B4 ADD W19, W19, 0x1
	0x024220B8 SUBS X8, X8, 0x1
	0x024220BC ADD X9, X9, 0x4
	0x024220C0 B.NE 0x24220A8
	0x024220C4 MOVN W19, 0x0
	0x024220C8 MOV W0, W19
	0x024220CC LDP X20, X19, [X31 + 0x30]
	0x024220D0 LDP X22, X21, [X31 + 0x20]
	0x024220D4 LDP X24, X23, [X31 + 0x10]
	0x024220D8 LDR X30, [X31], #0x40
	0x024220DC RET
	0x024220E0 ADRP X0, 0x1CD9000
	0x024220E4 LDR X0, [X0 + 0x760]
	0x024220E8 BL 0x1C16D08
	0x024220EC BL 0x1C16F10
	0x024220F0 MOV X19, X0
	0x024220F4 ADRP X0, 0x1CF9000
	0x024220F8 LDR X0, [X0 + 0x658]
	0x024220FC B 0x242211C
	0x02422100 ADRP X0, 0x1CD9000
	0x02422104 LDR X0, [X0 + 0x760]
	0x02422108 BL 0x1C16D08
	0x0242210C BL 0x1C16F10
	0x02422110 MOV X19, X0
	0x02422114 ADRP X0, 0x1CF9000
	0x02422118 LDR X0, [X0 + 0x648]
	0x0242211C BL 0x1C16D08
	0x02422120 MOV X1, X0
	0x02422124 MOV X0, X19
	0x02422128 MOV X2, X31
	0x0242212C BL 0x3316014
	0x02422130 MOV X0, X19
	0x02422134 MOV X1, X20
	0x02422138 BL 0x1C16DEC
	0x0242213C SUB X31, X31, 0x40
	0x02422140 STP X30, X23, [X31 + 0x10]
	0x02422144 STP X22, X21, [X31 + 0x20]
	0x02422148 STP X20, X19, [X31 + 0x30]
	0x0242214C LDR X8, [X3 + 0x20]
	0x02422150 MOV X22, X3
	0x02422154 MOV W19, W2
	0x02422158 MOV X20, X1
	0x0242215C ADD X9, X8, 0x135
	0x02422160 LDRH W9, [X9]
	0x02422164 MOV X21, X0
	0x02422168 TBNZ X9, 0x0, 0x2422184
	0x0242216C MOV X0, X8
	0x02422170 BL 0x1C5C684
	0x02422174 LDR X8, [X22 + 0x20]
	0x02422178 ADD X9, X8, 0x135
	0x0242217C LDRH W9, [X9]
	0x02422180 B 0x2422188
	0x02422184 MOV X0, X8
	0x02422188 LDR X10, [X0 + 0xC0]
	0x0242218C LDR X10, [X10 + 0x68]
	0x02422190 LDR X23, [X10]
	0x02422194 TBNZ X9, 0x0, 0x24221A4
	0x02422198 MOV X0, X8
	0x0242219C BL 0x1C5C684
	0x024221A0 MOV X8, X0
	0x024221A4 LDR X8, [X8 + 0xC0]
	0x024221A8 MOV X0, X21
	0x024221AC LDR X1, [X8 + 0x68]
	0x024221B0 BLR X23
	0x024221B4 LDR X8, [X22 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x1FB9000
	009 Move W8, [X20+2507]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x1CD6000
	016 Move X0, [X0+3544]
	017 Call 0x1C17CF4
	018 Move X0, 0x1CD6000
	019 Move X0, [X0+3552]
	020 Call 0x1C17CF4
	021 Move X0, 0x1CDD000
	022 Move X0, [X0+2904]
	023 Call 0x1C17CF4
	024 Move X0, 0x1CDC000
	025 Move X0, [X0+2912]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+2507], W8
	029 Move W22, [X19+244]
	030 Compare W22, 0
	031 JumpIfEqual {60}
	032 Move X0, X19
	033 Move X1, X31
	034 Call NetworkRigidbodyBase.get_Data, X0
	035 Move X8, [X19+168]
	036 Compare X8, 0
	037 JumpIfEqual {150}
	038 Move X20, X0
	039 Move X0, X8
	040 Move X1, X31
	041 Call Transform.get_position, X0
	042 Move X0, X31
	043 Call 0x1E2F540
	044 Move [X20+124], X0
	045 Move [X20+132], W1
	046 Move X0, X19
	047 Move X1, X31
	048 Call NetworkRigidbodyBase.get_Data, X0
	049 Move X8, [X19+168]
	050 Compare X8, 0
	051 JumpIfEqual {150}
	052 Move X20, X0
	053 Move X0, X8
	054 Move X1, X31
	055 Call Transform.get_rotation, X0
	056 Move X0, X31
	057 Call 0x242F8E8
	058 Move [X20+136], X0
	059 Move [X20+144], X1
	060 Move X20, X19
	061 Add X20, X20, 208
	062 Move W8, [X20]
	063 Compare W8, 0
	064 JumpIfEqual {94}
	065 Move X23, 0x1CDC000
	066 Move X23, [X23+2912]
	067 Move X21, [X19+168]
	068 Move X0, X20
	069 Move X1, [X23]
	070 Call Nullable`1<Vector3>.get_Value, X0
	071 Compare X21, 0
	072 JumpIfEqual {150}
	073 Move X0, X21
	074 Move X1, X31
	075 Call Transform.set_position, X0, X1
	076 Move X1, [X23]
	077 Move X0, X20
	078 Call Nullable`1<Vector3>.get_Value, X0
	079 Move X8, [X19]
	080 Move X0, X19
	081 Move X9, [X8+632]
	082 Move X1, [X8+640]
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move X0, X19
	085 Move X1, X31
	086 Call NetworkRigidbodyBase.get_Data, X0
	087 Move X1, [X23]
	088 Move X21, X0
	089 Move X0, X20
	090 Call Nullable`1<Vector3>.get_Value, X0
	091 Move [X21+8], S0
	092 Move [X21+16], S1
	093 Move [X21+16], S2
	094 Move X20, X19
	095 Add X20, X20, 224
	096 Move W8, [X20]
	097 Compare W8, 0
	098 JumpIfEqual {136}
	099 Move X23, 0x1CDC000
	100 Move X23, [X23+2904]
	101 Move X21, [X19+168]
	102 Move X0, X20
	103 Move X1, [X23]
	104 Call Nullable`1<Quaternion>.get_Value, X0
	105 Compare X21, 0
	106 JumpIfEqual {150}
	107 Move X0, X21
	108 Move X1, X31
	109 Call Transform.set_rotation, X0, X1
	110 Move X1, [X23]
	111 Move X0, X20
	112 Call Nullable`1<Quaternion>.get_Value, X0
	113 Move X8, [X19]
	114 Move X0, X19
	115 Move X9, [X8+664]
	116 Move X1, [X8+672]
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move W24, [X19+144]
	119 Move X0, X19
	120 Move X1, X31
	121 Call NetworkRigidbodyBase.get_Data, X0
	122 Move X1, [X23]
	123 Move X21, X0
	124 Move X0, X20
	125 Call Nullable`1<Quaternion>.get_Value, X0
	126 Compare W24, 0
	127 JumpIfEqual {132}
	128 Move [X21+108], S0
	129 Move [X21+116], S1
	130 Move [X21+116], S2
	131 Move [X21+124], S3
	132 Move [X21+20], S0
	133 Move [X21+28], S1
	134 Move [X21+28], S2
	135 Move [X21+36], S3
	136 Move X8, [X19]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X0, X19
	139 Move X20, [X31+48]
	140 Move X19, [X31+56]
	141 Move X3, [X8+1160]
	142 Move X2, [X8+1168]
	143 Move X22, [X31+32]
	144 Move X21, [X31+40]
	145 Move X24, [X31+16]
	146 Move X23, [X31+24]
	147 NotImplemented "Instruction CSET not yet implemented."
	148 Move X30, [X31+64]
	149 CallNoReturn X3
	150 Call 0x1C17F20

Method: System.Void IncrementTeleportKey(System.Boolean moving)

Disassembly:
	0x024221B8 MOV W23, W0
	0x024221BC ADD X9, X8, 0x135
	0x024221C0 LDRH W9, [X9]
	0x024221C4 TBNZ X9, 0x0, 0x24221E0
	0x024221C8 MOV X0, X8
	0x024221CC BL 0x1C5C684
	0x024221D0 LDR X8, [X22 + 0x20]
	0x024221D4 ADD X9, X8, 0x135
	0x024221D8 LDRH W9, [X9]
	0x024221DC B 0x24221E4
	0x024221E0 MOV X0, X8
	0x024221E4 LDR X10, [X0 + 0xC0]
	0x024221E8 LDR X10, [X10 + 0x90]
	0x024221EC LDR X5, [X10]
	0x024221F0 TBNZ X9, 0x0, 0x2422208
	0x024221F4 MOV X0, X8
	0x024221F8 STR X5, [X31 + 0x8]
	0x024221FC BL 0x1C5C684
	0x02422200 LDR X5, [X31 + 0x8]
	0x02422204 MOV X8, X0
	0x02422208 LDR X8, [X8 + 0xC0]
	0x0242220C SUB W3, W23, W19
	0x02422210 MOV X0, X21
	0x02422214 MOV X1, X20
	0x02422218 LDR X4, [X8 + 0x90]
	0x0242221C MOV W2, W19
	0x02422220 LDP X20, X19, [X31 + 0x30]
	0x02422224 LDP X22, X21, [X31 + 0x20]
	0x02422228 LDP X30, X23, [X31 + 0x10]
	0x0242222C ADD X31, X31, 0x40
	0x02422230 BR X5
	0x02422234 STR X30, [X31 - 0x40]!
	0x02422238 STP X24, X23, [X31 + 0x10]
	0x0242223C STP X22, X21, [X31 + 0x20]
	0x02422240 STP X20, X19, [X31 + 0x30]
	0x02422244 MOV X19, X4
	0x02422248 CBZ X1, 0x24223D8
	0x0242224C MOV W20, W2
	0x02422250 TBNZ X2, 0x1F, 0x2422384
	0x02422254 LDR X8, [X19 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1FB8000
	006 Move W8, [X21+2508]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x1CD2000
	014 Move X0, [X0+1448]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2508], W8
	018 Compare X20, 0
	019 JumpIfEqual {49}
	020 Move X21, 0x1CD2000
	021 Move X21, [X21+1448]
	022 Move X0, X20
	023 Move X1, X31
	024 Call NetworkRigidbodyBase.get_Data, X0
	025 Move X8, X0
	026 Move X0, [X21]
	027 Move W21, [X8+48]
	028 Move W9, [X0+224]
	029 Compare W9, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSNEG not yet implemented."
	034 Add W9, W8, 1
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W9, 1
	037 Move X0, X20
	038 Move X1, X31
	039 NotImplemented "Instruction CSINC not yet implemented."
	040 Call NetworkRigidbodyBase.get_Data, X0
	041 And W31, W19, 1
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 NotImplemented "Instruction CSNEG not yet implemented."
	045 Move [X0+48], W8
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return 
	049 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x02422258 MOV W21, W3
	0x0242225C MOV X22, X1

ISIL:
	001 Move X1, X31
	002 Call NetworkRigidbodyBase..ctor, X0
	003 Return 

Method: System.Void CopyBackingFieldsToState(System.Boolean param_0)

Disassembly:
	0x02422260 MOV X23, X0
	0x02422264 ADD X9, X8, 0x135
	0x02422268 LDRH W9, [X9]
	0x0242226C TBNZ X9, 0x0, 0x2422288
	0x02422270 MOV X0, X8
	0x02422274 BL 0x1C5C684

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {7}
	003 And W1, W1, 1
	004 Move X2, X31
	005 Call NetworkRigidbodyBase.CopyBackingFieldsToState, X0, X1
	006 Return 
	007 Move [X31-16], X30
	008 Call 0x1C17F20

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x02422278 LDR X8, [X19 + 0x20]
	0x0242227C ADD X9, X8, 0x135
	0x02422280 LDRH W9, [X9]
	0x02422284 B 0x242228C
	0x02422288 MOV X0, X8

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {6}
	003 Move X1, X31
	004 Call NetworkRigidbodyBase.CopyStateToBackingFields, X0
	005 Return 
	006 Move [X31-16], X30
	007 Call 0x1C17F20

