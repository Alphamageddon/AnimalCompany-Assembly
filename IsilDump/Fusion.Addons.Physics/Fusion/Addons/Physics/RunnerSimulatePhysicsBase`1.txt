Type: Fusion.Addons.Physics.RunnerSimulatePhysicsBase`1

Method: System.Void RegisterAdditionalScene(TPhysicsScene scene, Fusion.Addons.Physics.ClientPhysicsSimulation clientPhysicsSimulation = 0)

Disassembly:
	0x025D5DA4 ADD X8, X31, 0x0
	0x025D5DA8 ADD X9, X9, 0xF
	0x025D5DAC AND X9, X9, 0x1FFFFFFFF
	0x025D5DB0 SUB X25, X8, X9
	0x025D5DB4 ADD X31, X25, 0x0
	0x025D5DB8 ADD X9, X23, 0xF
	0x025D5DBC ADD X8, X31, 0x0
	0x025D5DC0 AND X9, X9, 0x1FFFFFFFF
	0x025D5DC4 SUB X26, X8, X9
	0x025D5DC8 ADD X31, X26, 0x0
	0x025D5DCC ADD X8, X31, 0x0
	0x025D5DD0 SUB X27, X8, X9
	0x025D5DD4 ADD X31, X27, 0x0
	0x025D5DD8 MOV X0, X27
	0x025D5DDC MOV W1, W31
	0x025D5DE0 MOV X2, X23
	0x025D5DE4 BL 0x3EB1B10
	0x025D5DE8 LDR X0, [X20 + 0x88]
	0x025D5DEC CBZ X0, 0x25D5EDC
	0x025D5DF0 MOV W28, W31
	0x025D5DF4 STUR X22, [X29 - 0x40]
	0x025D5DF8 STUR X31, [X29 - 0x28]
	0x025D5DFC LDR X8, [X19 + 0x20]
	0x025D5E00 LDR X8, [X8 + 0xC0]
	0x025D5E04 LDR X1, [X8 + 0x78]
	0x025D5E08 LDR X8, [X1]
	0x025D5E0C BLR X8
	0x025D5E10 CMP W28, W0
	0x025D5E14 B.GE 0x25D5F24
	0x025D5E18 LDR X2, [X20 + 0x88]
	0x025D5E1C CBZ X2, 0x25D5ED8
	0x025D5E20 LDR X8, [X19 + 0x20]
	0x025D5E24 SUB X3, X29, 0x20
	0x025D5E28 MOV X4, X26
	0x025D5E2C LDR X8, [X8 + 0xC0]
	0x025D5E30 LDR X1, [X8 + 0x70]
	0x025D5E34 SUB X8, X29, 0xC
	0x025D5E38 LDR X0, [X1]
	0x025D5E3C STUR W28, [X29 - 0xC]
	0x025D5E40 STP X8, X26, [X29 - 0x20]
	0x025D5E44 LDR X8, [X1 + 0x10]
	0x025D5E48 BLR X8
	0x025D5E4C MOV X0, X27
	0x025D5E50 MOV X1, X26
	0x025D5E54 MOV X2, X23
	0x025D5E58 BL 0x3EB1AC0
	0x025D5E5C LDP X1, X2, [X29 - 0x38]
	0x025D5E60 MOV X0, X25
	0x025D5E64 BL 0x3EB1AC0
	0x025D5E68 LDR X8, [X19 + 0x20]
	0x025D5E6C LDR X8, [X8 + 0xC0]
	0x025D5E70 LDR X21, [X8 + 0x40]
	0x025D5E74 LDRB W9, [X21 + 0x135]
	0x025D5E78 TBNZ X9, 0x0, 0x25D5E90
	0x025D5E7C MOV X0, X21
	0x025D5E80 BL 0x1C5C684
	0x025D5E84 LDR X8, [X19 + 0x20]
	0x025D5E88 MOV X21, X0
	0x025D5E8C LDR X8, [X8 + 0xC0]
	0x025D5E90 LDR X9, [X8 + 0x38]
	0x025D5E94 LDR X22, [X8 + 0x50]
	0x025D5E98 MOV X0, X27
	0x025D5E9C LDR X1, [X9 + 0x80]
	0x025D5EA0 BL 0x1C16D18
	0x025D5EA4 MOV X3, X0
	0x025D5EA8 SUB X4, X29, 0x20
	0x025D5EAC SUB X5, X29, 0xC
	0x025D5EB0 MOV X0, X21
	0x025D5EB4 MOV X1, X22
	0x025D5EB8 MOV X2, X24
	0x025D5EBC STUR X25, [X29 - 0x20]
	0x025D5EC0 BL 0x1C17728
	0x025D5EC4 LDURB W8, [X29 - 0xC]
	0x025D5EC8 CBNZ W8, 0x25D5F0C
	0x025D5ECC LDR X0, [X20 + 0x88]
	0x025D5ED0 ADD W28, W28, 0x1
	0x025D5ED4 CBNZ X0, 0x25D5DFC
	0x025D5ED8 BL 0x1C16F20
	0x025D5EDC ADRP X8, 0x1B1E000
	0x025D5EE0 LDR X8, [X8 + 0xA28]
	0x025D5EE4 LDR X0, [X8]
	0x025D5EE8 LDR W8, [X0 + 0xE0]
	0x025D5EEC CBNZ W8, 0x25D5EF4
	0x025D5EF0 BL 0x1C16DFC
	0x025D5EF4 ADRP X8, 0x1B48000
	0x025D5EF8 LDR X8, [X8 + 0x1D8]
	0x025D5EFC MOV X1, X31
	0x025D5F00 LDR X0, [X8]
	0x025D5F04 BL 0x3C06A04
	0x025D5F08 B 0x25D5F68
	0x025D5F0C ADRP X8, 0x1B1F000
	0x025D5F10 LDR X8, [X8 + 0x470]
	0x025D5F14 SUB X0, X29, 0x28
	0x025D5F18 MOV W1, W28
	0x025D5F1C LDR X2, [X8]
	0x025D5F20 BL 0x24341FC
	0x025D5F24 LDURB W8, [X29 - 0x28]
	0x025D5F28 LDUR X22, [X29 - 0x40]
	0x025D5F2C CBZ W8, 0x25D5F68
	0x025D5F30 ADRP X8, 0x1B21000
	0x025D5F34 LDR X20, [X20 + 0x88]
	0x025D5F38 LDR X8, [X8 + 0xF00]
	0x025D5F3C SUB X0, X29, 0x28
	0x025D5F40 LDR X1, [X8]
	0x025D5F44 BL 0x2434214
	0x025D5F48 CBZ X20, 0x25D5ED8
	0x025D5F4C LDR X8, [X19 + 0x20]
	0x025D5F50 MOV W1, W0
	0x025D5F54 MOV X0, X20
	0x025D5F58 LDR X8, [X8 + 0xC0]
	0x025D5F5C LDR X2, [X8 + 0x80]
	0x025D5F60 LDR X8, [X2]
	0x025D5F64 BLR X8
	0x025D5F68 LDR X8, [X22 + 0x28]
	0x025D5F6C LDUR X9, [X29 - 0x8]
	0x025D5F70 CMP X8, X9
	0x025D5F74 B.NE 0x25D5F98
	0x025D5F78 ADD X31, X29, 0x0
	0x025D5F7C LDP X20, X19, [X31 + 0x50]
	0x025D5F80 LDP X22, X21, [X31 + 0x40]
	0x025D5F84 LDP X24, X23, [X31 + 0x30]
	0x025D5F88 LDP X26, X25, [X31 + 0x20]
	0x025D5F8C LDP X28, X27, [X31 + 0x10]
	0x025D5F90 LDP X29, X30, [X31], #0x60
	0x025D5F94 RET
	0x025D5F98 BL 0x3EB1B20
	0x025D5F9C STP X29, X30, [X31 - 0x60]!
	0x025D5FA0 STP X28, X27, [X31 + 0x10]
	0x025D5FA4 STP X26, X25, [X31 + 0x20]
	0x025D5FA8 STP X24, X23, [X31 + 0x30]
	0x025D5FAC STP X22, X21, [X31 + 0x40]
	0x025D5FB0 STP X20, X19, [X31 + 0x50]
	0x025D5FB4 ADD X29, X31, 0x0
	0x025D5FB8 SUB X31, X31, 0x20
	0x025D5FBC MRS X20, 0xC000
	0x025D5FC0 LDR X8, [X20 + 0x28]
	0x025D5FC4 MOV X22, X0
	0x025D5FC8 MOV X19, X1
	0x025D5FCC STUR X8, [X29 - 0x8]
	0x025D5FD0 LDR X8, [X1 + 0x20]
	0x025D5FD4 LDR X8, [X8 + 0xC0]
	0x025D5FD8 LDR X0, [X8 + 0x20]
	0x025D5FDC LDR X8, [X8 + 0x38]
	0x025D5FE0 LDR W27, [X0 + 0xFC]
	0x025D5FE4 LDRB W9, [X0 + 0x135]
	0x025D5FE8 LDR W23, [X8 + 0xFC]
	0x025D5FEC MOV W8, W27
	0x025D5FF0 TBNZ X9, 0x0, 0x25D5FFC
	0x025D5FF4 BL 0x1C5C684
	0x025D5FF8 LDR W8, [X0 + 0xFC]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X23, 0x1E05000
	010 Move W8, [X23+3948]
	011 Move X20, X3
	012 Move W19, W2
	013 Move X22, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x1B1F000
	020 Move X0, [X0+2600]
	021 Call 0x1C17CF4
	022 Move X0, 0x1B49000
	023 Move X0, [X0+464]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+3948], W8
	027 Move [X31+32], X31
	028 Move [X31+40], X31
	029 Move [X31+48], X31
	030 Move [X31+72], W31
	031 Move X0, [X21+136]
	032 Compare X0, 0
	033 JumpIfEqual {79}
	034 Move X8, [X20+32]
	035 Move X8, [X8+192]
	036 Move X1, [X8+24]
	037 Add X8, X31, 8
	038 Call 0x2EF5498, X0
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 Move X8, [X31+24]
	041 And X22, X22, 0
	042 Move [X31+2], V0
	043 Move [X31+48], X8
	044 Move X8, [X20+32]
	045 Move X8, [X8+192]
	046 Move X1, [X8+88]
	047 Add X0, X31, 32
	048 Call 0x2BB0AB8, X0
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {96}
	053 Move X8, [X20+32]
	054 Move X9, [X31+48]
	055 Move X8, [X8+192]
	056 Move [X31+72], W9
	057 Move X2, [X8+80]
	058 Add X0, X31, 72
	059 Move X1, X22
	060 Call PhysicsScene.Equals, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {44}
	065 Move X8, 0x1B1F000
	066 Move X8, [X8+2600]
	067 Move X0, [X8]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X8, 0x1B49000
	073 Move X8, [X8+464]
	074 Move X0, [X8]
	075 Move X1, X31
	076 Call Debug.LogWarning, X0
	077 Move X23, X31
	078 Move W24, 6
	079 Move X8, [X20+32]
	080 Move X8, [X8+192]
	081 Move X0, [X8+8]
	082 Move W8, [X0+309]
	083 Move TEMP, X8
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {88}
	087 Call 0x1C5D684
	088 Call 0x1C17F10
	089 Move X8, [X20+32]
	090 Move X23, X0
	091 Move X8, [X8+192]
	092 Move X1, [X8+16]
	093 Call 0x2EF40F0, X0
	094 Move [X21+136], X23
	095 And X22, X22, 0
	096 Move X23, X31
	097 Move W24, 3
	098 Move X8, [X20+32]
	099 Add X0, X31, 32
	100 Move X8, [X8+192]
	101 Move X1, [X8+96]
	102 Call 0x2BB0AB4, X0
	103 Compare X23, 0
	104 JumpIfNotEqual {144}
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Compare W24, 0
	107 JumpIfNotEqual {134}
	108 Move X23, [X21+136]
	109 Compare X23, 0
	110 JumpIfEqual {143}
	111 Move X8, [X20+32]
	112 Move W10, [X23+28]
	113 Move X9, [X8+192]
	114 Move X8, [X23+16]
	115 Add W10, W10, 1
	116 Move X9, [X9+104]
	117 Move [X23+28], W10
	118 Compare X8, 0
	119 JumpIfEqual {143}
	120 NotImplemented "Instruction LDRSW not yet implemented."
	121 Move W11, [X8+24]
	122 NotImplemented "Instruction BFM not yet implemented."
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Add W9, W10, 1
	125 Add X8, X8, X10
	126 Move [X23+24], W9
	127 Move [X8+32], X22
	128 Move X8, [X9+32]
	129 Move X0, X23
	130 Move X1, X22
	131 Move X8, [X8+192]
	132 Move X2, [X8+112]
	133 Call 0x2EF48E8, X0, X1
	134 Move X20, [X31+112]
	135 Move X19, [X31+120]
	136 Move X22, [X31+96]
	137 Move X21, [X31+104]
	138 Move X24, [X31+80]
	139 Move X23, [X31+88]
	140 Move X30, [X31+64]
	141 Add X31, X31, 128
	142 Return 
	143 Call 0x1C17F20
	144 Move X0, X23
	145 Call 0x1C17F18
	146 Move X24, X0
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X0, X24
	149 Call 0x3EB2AD0
	150 Move X23, [X0]
	151 Call 0x3EB2AE0
	152 Move W24, W31
	153 Move X23, X31
	154 Move X24, X0
	155 Move X8, [X20+32]
	156 Move X8, [X8+192]
	157 Move X1, [X8+96]
	158 Add X0, X31, 32
	159 Call 0x2BB0AB4, X0
	160 Compare X23, 0
	161 JumpIfNotEqual {164}
	162 Move X0, X24
	163 Call 0x1D2D690
	164 Move X0, X23
	165 Call 0x1C17F18
	166 Call 0x1991590

Method: System.Void UnregisterAdditionalScene(TPhysicsScene scene)

Disassembly:
	0x025D5FFC ADD W8, W8, 0x10
	0x025D6000 ADD X8, X8, 0xF
	0x025D6004 ADD X9, X31, 0x0
	0x025D6008 AND X8, X8, 0x1FFFFFFFF
	0x025D600C SUB X8, X9, X8
	0x025D6010 STUR X8, [X29 - 0x18]
	0x025D6014 ADD X31, X8, 0x0
	0x025D6018 ADD X9, X23, 0xF
	0x025D601C ADD X8, X31, 0x0
	0x025D6020 AND X26, X9, 0x1FFFFFFFF
	0x025D6024 SUB X24, X8, X26
	0x025D6028 ADD X31, X24, 0x0
	0x025D602C ADD X8, X31, 0x0
	0x025D6030 SUB X25, X8, X26
	0x025D6034 ADD X31, X25, 0x0
	0x025D6038 ADD X9, X27, 0xF
	0x025D603C ADD X8, X31, 0x0
	0x025D6040 AND X9, X9, 0x1FFFFFFFF
	0x025D6044 SUB X28, X8, X9
	0x025D6048 ADD X31, X28, 0x0
	0x025D604C ADD X8, X31, 0x0
	0x025D6050 SUB X21, X8, X9
	0x025D6054 ADD X31, X21, 0x0
	0x025D6058 MOV X0, X21
	0x025D605C MOV W1, W31
	0x025D6060 MOV X2, X27
	0x025D6064 BL 0x3EB1B10
	0x025D6068 ADD X8, X31, 0x0
	0x025D606C SUB X26, X8, X26
	0x025D6070 ADD X31, X26, 0x0
	0x025D6074 MOV X0, X26
	0x025D6078 MOV W1, W31
	0x025D607C MOV X2, X23
	0x025D6080 BL 0x3EB1B10
	0x025D6084 LDR X0, [X22 + 0x88]
	0x025D6088 CBZ X0, 0x25D61C0
	0x025D608C LDR X8, [X19 + 0x20]
	0x025D6090 LDR X8, [X8 + 0xC0]
	0x025D6094 LDR X1, [X8 + 0x78]
	0x025D6098 LDR X8, [X1]
	0x025D609C BLR X8
	0x025D60A0 CBZ W0, 0x25D61C0
	0x025D60A4 LDR X2, [X22 + 0x88]
	0x025D60A8 CBZ X2, 0x25D61F8
	0x025D60AC LDR X8, [X19 + 0x20]
	0x025D60B0 SUB X3, X29, 0x10
	0x025D60B4 MOV X4, X28
	0x025D60B8 LDR X8, [X8 + 0xC0]
	0x025D60BC LDR X1, [X8 + 0x18]
	0x025D60C0 LDR X0, [X1]
	0x025D60C4 STUR X28, [X29 - 0x10]
	0x025D60C8 LDR X8, [X1 + 0x10]
	0x025D60CC BLR X8
	0x025D60D0 MOV X0, X21
	0x025D60D4 MOV X1, X28
	0x025D60D8 MOV X2, X27
	0x025D60DC BL 0x3EB1AC0
	0x025D60E0 LDR X8, [X19 + 0x20]
	0x025D60E4 LDR X8, [X8 + 0xC0]
	0x025D60E8 LDR X1, [X8 + 0x58]
	0x025D60EC LDR X8, [X1]
	0x025D60F0 MOV X0, X21
	0x025D60F4 BLR X8
	0x025D60F8 MOV W27, W0
	0x025D60FC TBZ X0, 0x0, 0x25D6178
	0x025D6100 LDR X8, [X19 + 0x20]
	0x025D6104 LDR X8, [X8 + 0xC0]
	0x025D6108 LDR X1, [X8 + 0x28]
	0x025D610C LDR X0, [X1]
	0x025D6110 STUR X24, [X29 - 0x10]
	0x025D6114 LDR X8, [X1 + 0x10]
	0x025D6118 SUB X3, X29, 0x10
	0x025D611C MOV X2, X21
	0x025D6120 MOV X4, X24
	0x025D6124 BLR X8
	0x025D6128 MOV X0, X26
	0x025D612C MOV X1, X24
	0x025D6130 MOV X2, X23
	0x025D6134 BL 0x3EB1AC0
	0x025D6138 MOV X0, X25
	0x025D613C MOV X1, X26
	0x025D6140 MOV X2, X23
	0x025D6144 BL 0x3EB1AC0
	0x025D6148 LDR X8, [X19 + 0x20]
	0x025D614C LDR X8, [X8 + 0xC0]
	0x025D6150 LDR X8, [X8 + 0x38]
	0x025D6154 LDR X8, [X8 + 0x80]
	0x025D6158 ADD X1, X8, 0x20
	0x025D615C MOV X0, X25
	0x025D6160 BL 0x1C16D18
	0x025D6164 LDR W1, [X0]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X21, 0x1E04000
	008 Move W8, [X21+3949]
	009 Move X19, X2
	010 Move X22, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x1B1E000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x1B1F000
	020 Move X0, [X0+1136]
	021 Call 0x1C17CF4
	022 Move X0, 0x1B21000
	023 Move X0, [X0+3832]
	024 Call 0x1C17CF4
	025 Move X0, 0x1B21000
	026 Move X0, [X0+3840]
	027 Call 0x1C17CF4
	028 Move X0, 0x1B48000
	029 Move X0, [X0+472]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+3949], W8
	033 Move [X31+8], X31
	034 Move X0, [X20+136]
	035 Compare X0, 0
	036 JumpIfEqual {63}
	037 Move W21, W31
	038 And X22, X22, 0
	039 Move [X31+24], X31
	040 Move W8, [X0+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X8, [X19+32]
	043 Move W1, W21
	044 Move X8, [X8+192]
	045 Move X2, [X8+112]
	046 Call 0x2EF45F8, X0, X1
	047 Move [X31+8], X0
	048 Move X8, [X19+32]
	049 Add X0, X31, 8
	050 Move X1, X22
	051 Move X8, [X8+192]
	052 Move X2, [X8+80]
	053 Call PhysicsScene.Equals, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {75}
	058 Move X0, [X20+136]
	059 Add W21, W21, 1
	060 Compare X0, 0
	061 JumpIfNotEqual {40}
	062 Call 0x1C17F20
	063 Move X8, 0x1B1E000
	064 Move X8, [X8+2600]
	065 Move X0, [X8]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X8, 0x1B48000
	071 Move X8, [X8+472]
	072 Move X1, X31
	073 Move X0, [X8]
	074 Call Debug.LogWarning, X0
	075 Move X8, 0x1B1F000
	076 Move X8, [X8+1136]
	077 Add X0, X31, 24
	078 Move W1, W21
	079 Move X2, [X8]
	080 Call Nullable`1<Int32>..ctor, X0, X1
	081 Move W8, [X31+24]
	082 Compare W8, 0
	083 JumpIfEqual {98}
	084 Move X8, 0x1B21000
	085 Move X20, [X20+136]
	086 Move X8, [X8+3840]
	087 Add X0, X31, 24
	088 Move X1, [X8]
	089 Call Nullable`1<Int32>.get_Value, X0
	090 Compare X20, 0
	091 JumpIfEqual {62}
	092 Move X8, [X19+32]
	093 Move W1, W0
	094 Move X0, X20
	095 Move X8, [X8+192]
	096 Move X2, [X8+128]
	097 Call 0x2EF6370, X0, X1
	098 Move X20, [X31+48]
	099 Move X19, [X31+56]
	100 Move X22, [X31+32]
	101 Move X21, [X31+40]
	102 Move X30, [X31+16]
	103 Add X31, X31, 64
	104 Return 

Method: System.Boolean AnySceneRequiresSyncTransform()

Disassembly:
	0x025D6168 MOV X0, X22
	0x025D616C MOV X2, X31
	0x025D6170 BL 0x1E2E30C
	0x025D6174 TBZ X0, 0x0, 0x25D60E0
	0x025D6178 MOV X22, X31
	0x025D617C LDR X8, [X19 + 0x20]
	0x025D6180 LDR X8, [X8 + 0xC0]
	0x025D6184 LDR X0, [X8 + 0x20]
	0x025D6188 LDRB W9, [X0 + 0x135]
	0x025D618C TBNZ X9, 0x0, 0x25D619C
	0x025D6190 BL 0x1C5C684
	0x025D6194 LDR X8, [X19 + 0x20]
	0x025D6198 LDR X8, [X8 + 0xC0]
	0x025D619C LDR X1, [X8 + 0x60]
	0x025D61A0 LDUR X2, [X29 - 0x18]
	0x025D61A4 MOV X3, X21
	0x025D61A8 MOV X4, X31
	0x025D61AC MOV X5, X31
	0x025D61B0 BL 0x1C17728
	0x025D61B4 CBZ X22, 0x25D61C4
	0x025D61B8 MOV X0, X22
	0x025D61BC BL 0x1C16F18
	0x025D61C0 MOV W27, W31
	0x025D61C4 LDR X8, [X20 + 0x28]
	0x025D61C8 LDUR X9, [X29 - 0x8]
	0x025D61CC CMP X8, X9
	0x025D61D0 B.NE 0x25D61FC
	0x025D61D4 AND W0, W27, 0x1
	0x025D61D8 ADD X31, X29, 0x0
	0x025D61DC LDP X20, X19, [X31 + 0x50]
	0x025D61E0 LDP X22, X21, [X31 + 0x40]
	0x025D61E4 LDP X24, X23, [X31 + 0x30]
	0x025D61E8 LDP X26, X25, [X31 + 0x20]
	0x025D61EC LDP X28, X27, [X31 + 0x10]
	0x025D61F0 LDP X29, X30, [X31], #0x60
	0x025D61F4 RET
	0x025D61F8 BL 0x1C16F20
	0x025D61FC BL 0x3EB1B20
	0x025D6200 B 0x25D620C
	0x025D6204 B 0x25D620C
	0x025D6208 B 0x25D620C
	0x025D620C MOV X23, X0
	0x025D6210 CMP W1, 0x1
	0x025D6214 B.NE 0x25D6230
	0x025D6218 MOV X0, X23
	0x025D621C BL 0x3EB1AD0
	0x025D6220 LDR X22, [X0]
	0x025D6224 BL 0x3EB1AE0
	0x025D6228 MOV W27, W31
	0x025D622C B 0x25D617C
	0x025D6230 MOV X22, X31
	0x025D6234 B 0x25D623C
	0x025D6238 MOV X23, X0
	0x025D623C LDR X8, [X19 + 0x20]
	0x025D6240 LDR X8, [X8 + 0xC0]
	0x025D6244 LDR X0, [X8 + 0x20]
	0x025D6248 LDRB W9, [X0 + 0x135]
	0x025D624C TBNZ X9, 0x0, 0x25D625C
	0x025D6250 BL 0x1C5C684
	0x025D6254 LDR X8, [X19 + 0x20]
	0x025D6258 LDR X8, [X8 + 0xC0]
	0x025D625C LDR X1, [X8 + 0x60]
	0x025D6260 LDUR X2, [X29 - 0x18]
	0x025D6264 MOV X3, X21
	0x025D6268 MOV X4, X31
	0x025D626C MOV X5, X31
	0x025D6270 BL 0x1C17728
	0x025D6274 CBNZ X22, 0x25D6280
	0x025D6278 MOV X0, X23
	0x025D627C BL 0x1D2C690
	0x025D6280 MOV X0, X22

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move [X31+32], X31
	007 Move [X31+40], X31
	008 Move [X31+48], X31
	009 Move X20, X0
	010 Move X0, [X0+136]
	011 Compare X0, 0
	012 JumpIfEqual {54}
	013 Move W8, [X0+24]
	014 Compare W8, 0
	015 JumpIfEqual {54}
	016 Move X8, [X1+32]
	017 Move X19, X1
	018 Move X8, [X8+192]
	019 Move X1, [X8+24]
	020 Add X8, X31, 8
	021 Call 0x2EF5498, X0
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 Move X8, [X31+24]
	024 Move [X31+2], V0
	025 Move [X31+48], X8
	026 Move X8, [X19+32]
	027 Move X8, [X8+192]
	028 Move X1, [X8+88]
	029 Add X0, X31, 32
	030 Call 0x2BB0AB8, X0
	031 Move W21, W0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {44}
	036 Move W1, [X31+52]
	037 Move X0, X20
	038 Move X2, X31
	039 Call RunnerSimulatePhysicsBase.RequiresSyncTransform, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {26}
	044 Move X20, X31
	045 Move X8, [X19+32]
	046 Add X0, X31, 32
	047 Move X8, [X8+192]
	048 Move X1, [X8+96]
	049 Call 0x2BB0AB4, X0
	050 Compare X20, 0
	051 JumpIfEqual {55}
	052 Move X0, X20
	053 Call 0x1C17F18
	054 Move W21, W31
	055 And W0, W21, 1
	056 Move X20, [X31+80]
	057 Move X19, [X31+88]
	058 Move X30, [X31+64]
	059 Move X21, [X31+72]
	060 Add X31, X31, 96
	061 Return X0
	062 Move X21, X0
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X0, X21
	065 Call 0x3EB2AD0
	066 Move X20, [X0]
	067 Call 0x3EB2AE0
	068 Move W21, W31
	069 Move X20, X31
	070 Move X21, X0
	071 Move X8, [X19+32]
	072 Move X8, [X8+192]
	073 Move X1, [X8+96]
	074 Add X0, X31, 32
	075 Call 0x2BB0AB4, X0
	076 Compare X20, 0
	077 JumpIfNotEqual {80}
	078 Move X0, X21
	079 Call 0x1D2D690
	080 Move X0, X20
	081 Call 0x1C17F18
	082 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x025D6284 BL 0x1C16F18
	0x025D6288 BL 0x1990590

ISIL:
	001 Move X1, X31
	002 Call RunnerSimulatePhysicsBase..ctor, X0
	003 Return 

