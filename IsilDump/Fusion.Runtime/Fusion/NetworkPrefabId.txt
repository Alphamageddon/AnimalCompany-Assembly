Type: Fusion.NetworkPrefabId

Method: System.Boolean get_IsNone()

Disassembly:
	0x01E9B0F8 LDR X9, [X8 + 0x20]
	0x01E9B0FC MOVZ W10, 0x1
	0x01E9B100 LSLV X10, X10, X1
	0x01E9B104 ANDS W31, W2, 0x1

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_IsValid()

Disassembly:
	0x01E9A1E8 LDP X30, X21, [X31], #0x20
	0x01E9A1EC RET
	0x01E9A1F0 LDR W0, [X0]
	0x01E9A1F4 RET

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Int32 get_AsIndex()

Disassembly:
	0x01E9A7E4 CMP W0, W8
	0x01E9A7E8 B.LE 0x1E9A81C
	0x01E9A7EC LDR X0, [X20 + 0x18]

ISIL:
	001 Move W8, [X0]
	002 Subtract W0, W8, 1
	003 Return X0

Method: Fusion.NetworkPrefabId FromIndex(System.Int32 index)

Disassembly:
	0x01E9B108 BIC X11, X9, X10, 0x0
	0x01E9B10C ORR X9, X9, X10, 0x0
	0x01E9B110 CSEL X9, X9, X11, NE
	0x01E9B114 STR X9, [X8 + 0x20]
	0x01E9B118 LDR W8, [X0 + 0x38]
	0x01E9B11C ADD W8, W8, 0x1
	0x01E9B120 STR W8, [X0 + 0x38]
	0x01E9B124 LDR X30, [X31], #0x10
	0x01E9B128 RET
	0x01E9B12C BL 0x1C16F20
	0x01E9B130 BL 0x1C16F28
	0x01E9B134 SUB X31, X31, 0x60
	0x01E9B138 STR X30, [X31 + 0x10]
	0x01E9B13C STP X26, X25, [X31 + 0x20]
	0x01E9B140 STP X24, X23, [X31 + 0x30]
	0x01E9B144 STP X22, X21, [X31 + 0x40]
	0x01E9B148 STP X20, X19, [X31 + 0x50]
	0x01E9B14C ADRP X20, 0x253E000
	0x01E9B150 LDRB W8, [X20 + 0x2E4]
	0x01E9B154 MOV W23, W2
	0x01E9B158 MOV X19, X1
	0x01E9B15C MOV X21, X0
	0x01E9B160 TBNZ X8, 0x0, 0x1E9B1A8
	0x01E9B164 ADRP X0, 0x2263000

ISIL:
	001 Move TEMP, 0x80000000
	002 Not TEMP
	003 Move W8, TEMP
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Add W0, W0, 1
	006 Return X0
	007 Move [X31-16], X30
	008 Move [X31-8], X19
	009 Move X0, 0x2261000
	010 Move X0, [X0+1888]
	011 Call 0x1C17D08
	012 Call 0x1C17F10
	013 Move X19, X0
	014 Move X0, 0x2264000
	015 Move X0, [X0+304]
	016 Call 0x1C17D08
	017 Move X1, X0
	018 Move X0, X19
	019 Move X2, X31
	020 Call ArgumentOutOfRangeException..ctor, X0, X1
	021 Move X0, 0x2264000
	022 Move X0, [X0+1344]
	023 Call 0x1C17D08
	024 Move X1, X0
	025 Move X0, X19
	026 Call 0x1C17DEC

Method: Fusion.NetworkPrefabId FromRaw(System.UInt32 value)

Disassembly:
	0x01E9A384 BL 0x1C16E08
	0x01E9A388 LDR W1, [X0]

ISIL:
	001 Move W0, W0
	002 Return X0

Method: System.Boolean Equals(Fusion.NetworkPrefabId other)

Disassembly:
	0x01E9B168 LDR X0, [X0 + 0x5D8]
	0x01E9B16C BL 0x1C16CF4
	0x01E9B170 ADRP X0, 0x2263000
	0x01E9B174 LDR X0, [X0 + 0x5D0]

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x01E9B178 BL 0x1C16CF4
	0x01E9B17C ADRP X0, 0x2263000
	0x01E9B180 LDR X0, [X0 + 0x548]
	0x01E9B184 BL 0x1C16CF4
	0x01E9B188 ADRP X0, 0x2258000
	0x01E9B18C LDR X0, [X0 + 0x598]
	0x01E9B190 BL 0x1C16CF4
	0x01E9B194 ADRP X0, 0x2263000
	0x01E9B198 LDR X0, [X0 + 0x5E0]
	0x01E9B19C BL 0x1C16CF4
	0x01E9B1A0 MOVZ W8, 0x1
	0x01E9B1A4 STRB W8, [X20 + 0x2E4]
	0x01E9B1A8 AND X1, X19, 0x0
	0x01E9B1AC MOV X0, X21
	0x01E9B1B0 STR W31, [X31 + 0x18]
	0x01E9B1B4 BL 0x1E9B5A0
	0x01E9B1B8 LDR X8, [X21 + 0x18]
	0x01E9B1BC CBZ X8, 0x1E9B598
	0x01E9B1C0 ADRP X9, 0x2263000
	0x01E9B1C4 LDR X9, [X9 + 0x5D0]
	0x01E9B1C8 MOV W22, W0
	0x01E9B1CC MOV X0, X8
	0x01E9B1D0 MOV W1, W22
	0x01E9B1D4 LDR X2, [X9]
	0x01E9B1D8 BL 0x301BCCC
	0x01E9B1DC LDR X8, [X21 + 0x20]
	0x01E9B1E0 ADD W9, W22, 0x3F
	0x01E9B1E4 CMP W22, 0x0
	0x01E9B1E8 CSEL W9, W9, W22, LT
	0x01E9B1EC CBZ X8, 0x1E9B598

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x253F000
	006 Move W8, [X21+731]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2264000
	014 Move X0, [X0+1352]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+731], W8
	018 Compare X20, 0
	019 JumpIfEqual {25}
	020 Move X8, 0x2264000
	021 Move X8, [X8+1352]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 Move X0, X20
	027 Call 0x1C17E08
	028 Move W8, [X0]
	029 Move W9, [X19]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x01E9B1F0 LDR W10, [X8 + 0x18]
	0x01E9B1F4 SBFM W9, W9, 0x6, 0x1F

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.String ToString()

Disassembly:
	0x01E9B1F8 CMP W9, W10
	0x01E9B1FC B.CS 0x1E9B59C
	0x01E9B200 ADD X8, X8, W9, 0x3, SXTW

ISIL:
	001 Move W1, 1
	002 Move W2, 1

Method: System.Int32 System.IComparable.CompareTo(System.Object obj)

Disassembly:
	0x01E9B324 TBZ X0, 0x0, 0x1E9B370
	0x01E9B328 LDR X8, [X20]
	0x01E9B32C ADRP X21, 0x2258000
	0x01E9B330 LDR X1, [X25]
	0x01E9B334 LDRH W9, [X8 + 0x12E]
	0x01E9B338 LDR X21, [X21 + 0x598]
	0x01E9B33C CBZ X9, 0x1E9B360
	0x01E9B340 LDR X10, [X8 + 0xB0]
	0x01E9B344 ADD X10, X10, 0x8
	0x01E9B348 LDUR X11, [X10 - 0x8]
	0x01E9B34C CMP X11, X1
	0x01E9B350 B.EQ 0x1E9B3E8
	0x01E9B354 SUBS X9, X9, 0x1
	0x01E9B358 ADD X10, X10, 0x10
	0x01E9B35C B.NE 0x1E9B348
	0x01E9B360 MOVZ W2, 0x2
	0x01E9B364 MOV X0, X20
	0x01E9B368 BL 0x1C5C788
	0x01E9B36C B 0x1E9B3F8
	0x01E9B370 TBZ X23, 0x0, 0x1E9B574
	0x01E9B374 LDR X8, [X21 + 0x28]
	0x01E9B378 CBZ X8, 0x1E9B598
	0x01E9B37C LDR W9, [X8 + 0x18]
	0x01E9B380 CMP W22, W9
	0x01E9B384 B.CS 0x1E9B59C
	0x01E9B388 MOV W9, W22
	0x01E9B38C SXTW X24, W9
	0x01E9B390 ADD X8, X8, X24, 0x2, LSL
	0x01E9B394 ADD X0, X8, 0x20
	0x01E9B398 MOV X1, X31
	0x01E9B39C BL 0x1E9BE4C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x253F000
	006 Move W8, [X21+732]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2264000
	014 Move X0, [X0+1352]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+732], W8
	018 Compare X20, 0
	019 JumpIfEqual {25}
	020 Move X8, 0x2264000
	021 Move X8, [X8+1352]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move TEMP, 0
	028 Not TEMP
	029 Move W0, TEMP
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return X0
	033 Move X0, X20
	034 Call 0x1C17E08
	035 Move W1, [X0]
	036 Move X0, X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X2, X31
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Call UInt32.CompareTo, X0, X1
	043 Return X0

Method: System.String ToString(System.Boolean brackets, System.Boolean prefix)

Disassembly:
	0x01E9B204 LDR X8, [X8 + 0x20]
	0x01E9B208 ADRP X25, 0x2263000
	0x01E9B20C LDR X25, [X25 + 0x5D8]
	0x01E9B210 MOV X20, X0
	0x01E9B214 LSRV X8, X8, X22
	0x01E9B218 TBNZ X8, 0x0, 0x1E9B2C4
	0x01E9B21C CBZ X20, 0x1E9B598
	0x01E9B220 LDR X8, [X20]
	0x01E9B224 LDR X1, [X25]
	0x01E9B228 LDRH W9, [X8 + 0x12E]
	0x01E9B22C CBZ X9, 0x1E9B250
	0x01E9B230 LDR X10, [X8 + 0xB0]
	0x01E9B234 ADD X10, X10, 0x8
	0x01E9B238 LDUR X11, [X10 - 0x8]
	0x01E9B23C CMP X11, X1
	0x01E9B240 B.EQ 0x1E9B260
	0x01E9B244 SUBS X9, X9, 0x1
	0x01E9B248 ADD X10, X10, 0x10
	0x01E9B24C B.NE 0x1E9B238
	0x01E9B250 MOV X0, X20
	0x01E9B254 MOV W2, W31
	0x01E9B258 BL 0x1C5C788
	0x01E9B25C B 0x1E9B26C
	0x01E9B260 LDRSW X9, [X10]
	0x01E9B264 ADD X8, X8, X9, 0x4, LSL
	0x01E9B268 ADD X0, X8, 0x138
	0x01E9B26C LDP X8, X2, [X0]
	0x01E9B270 AND W24, W23, 0x1
	0x01E9B274 MOV X0, X20
	0x01E9B278 MOV W1, W24
	0x01E9B27C BLR X8
	0x01E9B280 MOVZ W2, 0x1
	0x01E9B284 MOV X0, X21
	0x01E9B288 MOV W1, W22
	0x01E9B28C BL 0x1E9B0CC
	0x01E9B290 LDR X26, [X21 + 0x28]
	0x01E9B294 ADD X0, X31, 0x18
	0x01E9B298 MOV W1, W24
	0x01E9B29C MOV X2, X31
	0x01E9B2A0 STR W31, [X31 + 0x18]
	0x01E9B2A4 BL 0x1E9BE58
	0x01E9B2A8 CBZ X26, 0x1E9B598
	0x01E9B2AC LDR W8, [X26 + 0x18]
	0x01E9B2B0 CMP W22, W8
	0x01E9B2B4 B.CS 0x1E9B59C
	0x01E9B2B8 LDR W8, [X31 + 0x18]
	0x01E9B2BC ADD X9, X26, W22, 0x2, SXTW
	0x01E9B2C0 STR W8, [X9 + 0x20]
	0x01E9B2C4 CBZ X20, 0x1E9B598
	0x01E9B2C8 LDR X8, [X20]
	0x01E9B2CC LDR X1, [X25]
	0x01E9B2D0 LDRH W9, [X8 + 0x12E]
	0x01E9B2D4 CBZ X9, 0x1E9B2F8
	0x01E9B2D8 LDR X10, [X8 + 0xB0]
	0x01E9B2DC ADD X10, X10, 0x8
	0x01E9B2E0 LDUR X11, [X10 - 0x8]
	0x01E9B2E4 CMP X11, X1
	0x01E9B2E8 B.EQ 0x1E9B308
	0x01E9B2EC SUBS X9, X9, 0x1
	0x01E9B2F0 ADD X10, X10, 0x10
	0x01E9B2F4 B.NE 0x1E9B2E0
	0x01E9B2F8 MOVZ W2, 0x3
	0x01E9B2FC MOV X0, X20
	0x01E9B300 BL 0x1C5C788
	0x01E9B304 B 0x1E9B318
	0x01E9B308 LDR W9, [X10]
	0x01E9B30C ADD W9, W9, 0x3
	0x01E9B310 ADD X8, X8, W9, 0x4, SXTW
	0x01E9B314 ADD X0, X8, 0x138
	0x01E9B318 LDP X8, X1, [X0]
	0x01E9B31C MOV X0, X20
	0x01E9B320 BLR X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x253F000
	008 Move X23, 0x2259000
	009 Move W8, [X20+733]
	010 Move X23, [X23+2288]
	011 Move W22, W2
	012 Move W19, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x2259000
	019 Move X0, [X0+2288]
	020 Call 0x1C17CF4
	021 Move X0, 0x2264000
	022 Move X0, [X0+1360]
	023 Call 0x1C17CF4
	024 Move X0, 0x2264000
	025 Move X0, [X0+1368]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+733], W8
	029 Move X0, [X23]
	030 Call 0x1C17F10
	031 Move X1, X31
	032 Move X20, X0
	033 Call StringBuilder..ctor, X0
	034 Move TEMP, X19
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {44}
	038 Compare X20, 0
	039 JumpIfEqual {97}
	040 Move W1, 91
	041 Move X0, X20
	042 Move X2, X31
	043 Call StringBuilder.Append, X0, X1
	044 Move W8, [X21]
	045 Compare W8, 0
	046 JumpIfEqual {59}
	047 Move TEMP, X22
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {71}
	051 Compare X20, 0
	052 JumpIfEqual {97}
	053 Move X8, 0x2264000
	054 Move X8, [X8+1368]
	055 Move X0, X20
	056 Move X2, X31
	057 Move X1, [X8]
	058 Call StringBuilder.Append, X0, X1
	059 Compare X20, 0
	060 JumpIfEqual {97}
	061 Move X8, 0x2264000
	062 Move X8, [X8+1360]
	063 Move X0, X20
	064 Move X2, X31
	065 Move X1, [X8]
	066 Call StringBuilder.Append, X0, X1
	067 Move TEMP, X19
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {82}
	071 Compare X20, 0
	072 JumpIfEqual {97}
	073 Move W8, [X21]
	074 Move X0, X20
	075 Move X2, X31
	076 Subtract W1, W8, 1
	077 Call StringBuilder.Append, X0, X1
	078 Move TEMP, X19
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {86}
	082 Move W1, 93
	083 Move X0, X20
	084 Move X2, X31
	085 Call StringBuilder.Append, X0, X1
	086 Move X8, [X20]
	087 Move X0, X20
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X22, [X31+16]
	091 Move X21, [X31+24]
	092 Move X2, [X8+360]
	093 Move X1, [X8+368]
	094 Move X30, [X31+48]
	095 Move X23, [X31+56]
	096 CallNoReturn X2
	097 Call 0x1C17F20

Method: System.Boolean op_Equality(Fusion.NetworkPrefabId a, Fusion.NetworkPrefabId b)

Disassembly:
	0x01E9B3A8 LDR X8, [X20]
	0x01E9B3AC LDR X1, [X25]
	0x01E9B3B0 LDRH W9, [X8 + 0x12E]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Boolean op_Inequality(Fusion.NetworkPrefabId a, Fusion.NetworkPrefabId b)

Disassembly:
	0x01E9B3B4 CBZ X9, 0x1E9B3D8
	0x01E9B3B8 LDR X10, [X8 + 0xB0]
	0x01E9B3BC ADD X10, X10, 0x8

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Int32 CompareTo(Fusion.NetworkPrefabId other)

Disassembly:
	0x01E9B3A0 MOV X23, X31
	0x01E9B3A4 TBNZ X0, 0x0, 0x1E9B578

ISIL:
	001 Move X2, X31
	002 Call UInt32.CompareTo, X0, X1
	003 Return X0

