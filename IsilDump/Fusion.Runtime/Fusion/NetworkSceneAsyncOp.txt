Type: Fusion.NetworkSceneAsyncOp

Method: System.Void .ctor(Fusion.SceneRef sceneRef, System.Object data)

Disassembly:
	0x01EBC1D4 ADRP X8, 0x2243000
	0x01EBC1D8 LDR X8, [X8 + 0x758]
	0x01EBC1DC ADD X0, X19, 0x8
	0x01EBC1E0 LDR X3, [X8]
	0x01EBC1E4 ADD X1, X31, 0x0
	0x01EBC1E8 MOV X2, X19
	0x01EBC1EC BL 0x21854E8
	0x01EBC1F0 B 0x1EBC22C
	0x01EBC1F4 STR W31, [X19]
	0x01EBC1F8 LDR X8, [X31 + 0x18]
	0x01EBC1FC STR X8, [X19 + 0x38]
	0x01EBC200 LDR X0, [X20]
	0x01EBC204 LDR W8, [X0 + 0xE0]
	0x01EBC208 CBNZ W8, 0x1EBC210
	0x01EBC20C BL 0x1C16DFC
	0x01EBC210 ADRP X8, 0x2243000
	0x01EBC214 LDR X8, [X8 + 0x760]
	0x01EBC218 ADD X0, X19, 0x8
	0x01EBC21C LDR X3, [X8]
	0x01EBC220 ADD X1, X31, 0x18
	0x01EBC224 MOV X2, X19
	0x01EBC228 BL 0x218AF7C
	0x01EBC22C LDP X20, X19, [X31 + 0x20]
	0x01EBC230 LDR X30, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move [X0], W1
	004 Compare X2, 0
	005 JumpIfEqual {10}
	006 Move [X0+8], X2
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 
	010 Move X0, 0x223D000
	011 Move X0, [X0+1320]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0x2244000
	016 Move X0, [X0+1680]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call ArgumentNullException..ctor, X0, X1
	022 Move X0, 0x2244000
	023 Move X0, [X0+1688]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Void .ctor(Fusion.SceneRef sceneRef)

Disassembly:
	0x01EBC234 ADD X31, X31, 0x30
	0x01EBC238 RET
	0x01EBC23C BL 0x1C16F20

ISIL:
	001 Move [X0], W1
	002 Move [X0+8], X31
	003 Return 

Method: System.Boolean get_IsValid()

Disassembly:
	0x01EBC240 BL 0x1C16F20
	0x01EBC244 B 0x1EBC264
	0x01EBC248 B 0x1EBC264
	0x01EBC24C B 0x1EBC264

ISIL:
	001 Move W0, [X0]
	002 Move X1, X31
	003 Move X2, X31
	004 Call SceneRef.op_Inequality, X0, X1
	005 Return X0

Method: System.Boolean get_IsDone()

Disassembly:
	0x01EBC250 B 0x1EBC264
	0x01EBC254 B 0x1EBC264
	0x01EBC258 B 0x1EBC264
	0x01EBC25C B 0x1EBC264
	0x01EBC260 B 0x1EBC264
	0x01EBC264 MOV X20, X0
	0x01EBC268 CMP W1, 0x1
	0x01EBC26C B.NE 0x1EBC2FC
	0x01EBC270 MOV X0, X20
	0x01EBC274 BL 0x3EB1AD0
	0x01EBC278 MOV X20, X0
	0x01EBC27C ADRP X0, 0x2237000
	0x01EBC280 LDR X0, [X0 + 0x7D0]
	0x01EBC284 BL 0x1C16D08
	0x01EBC288 LDR X8, [X20]
	0x01EBC28C LDR X1, [X8]
	0x01EBC290 BL 0x1C17270
	0x01EBC294 TBZ X0, 0x0, 0x1EBC2D4
	0x01EBC298 LDR X20, [X20]
	0x01EBC29C BL 0x3EB1AE0
	0x01EBC2A0 MOVN W8, 0x1
	0x01EBC2A4 STR W8, [X19], #0x8
	0x01EBC2A8 ADRP X0, 0x223A000
	0x01EBC2AC LDR X0, [X0 + 0x280]
	0x01EBC2B0 BL 0x1C16D08
	0x01EBC2B4 LDR W8, [X0 + 0xE0]
	0x01EBC2B8 CBNZ W8, 0x1EBC2C0
	0x01EBC2BC BL 0x1C16DFC
	0x01EBC2C0 MOV X0, X19
	0x01EBC2C4 MOV X1, X20
	0x01EBC2C8 MOV X2, X31
	0x01EBC2CC BL 0x32C4908
	0x01EBC2D0 B 0x1EBC22C
	0x01EBC2D4 MOVZ W0, 0x8
	0x01EBC2D8 BL 0x3EB1AF0
	0x01EBC2DC LDR X8, [X20]
	0x01EBC2E0 STR X8, [X0]
	0x01EBC2E4 ADRP X1, 0x1FF8000
	0x01EBC2E8 ADD X1, X1, 0xE58
	0x01EBC2EC MOV X2, X31
	0x01EBC2F0 BL 0x3EB1B00
	0x01EBC2F4 MOV X20, X0
	0x01EBC2F8 BL 0x3EB1AE0
	0x01EBC2FC MOV X0, X20
	0x01EBC300 BL 0x1D2C690
	0x01EBC304 BL 0x1990590
	0x01EBC308 STR X30, [X31 - 0x30]!
	0x01EBC30C STP X22, X21, [X31 + 0x10]
	0x01EBC310 STP X20, X19, [X31 + 0x20]
	0x01EBC314 ADRP X21, 0x251D000
	0x01EBC318 ADRP X22, 0x223A000
	0x01EBC31C LDRB W8, [X21 + 0x42C]
	0x01EBC320 LDR X22, [X22 + 0x280]
	0x01EBC324 MOV X19, X1
	0x01EBC328 MOV X20, X0
	0x01EBC32C TBNZ X8, 0x0, 0x1EBC344
	0x01EBC330 ADRP X0, 0x223A000
	0x01EBC334 LDR X0, [X0 + 0x280]
	0x01EBC338 BL 0x1C16CF4
	0x01EBC33C MOVZ W8, 0x1
	0x01EBC340 STRB W8, [X21 + 0x42C]
	0x01EBC344 LDR X0, [X22]
	0x01EBC348 LDR W8, [X0 + 0xE0]
	0x01EBC34C CBNZ W8, 0x1EBC354
	0x01EBC350 BL 0x1C16DFC
	0x01EBC354 ADD X0, X20, 0x8
	0x01EBC358 MOV X1, X19
	0x01EBC35C LDP X20, X19, [X31 + 0x20]
	0x01EBC360 LDP X22, X21, [X31 + 0x10]
	0x01EBC364 MOV X2, X31
	0x01EBC368 LDR X30, [X31], #0x30
	0x01EBC36C B 0x32C477C
	0x01EBC370 STRB W1, [X0]
	0x01EBC374 RET
	0x01EBC378 LDRB W8, [X0]
	0x01EBC37C CMP W8, W1, UXTB
	0x01EBC380 CSET W0, EQ
	0x01EBC384 RET
	0x01EBC388 STP X30, X21, [X31 - 0x20]!
	0x01EBC38C STP X20, X19, [X31 + 0x10]
	0x01EBC390 ADRP X21, 0x251D000
	0x01EBC394 LDRB W8, [X21 + 0x42D]
	0x01EBC398 MOV X20, X1
	0x01EBC39C MOV X19, X0
	0x01EBC3A0 TBNZ X8, 0x0, 0x1EBC3B8
	0x01EBC3A4 ADRP X0, 0x2243000
	0x01EBC3A8 LDR X0, [X0 + 0x768]
	0x01EBC3AC BL 0x1C16CF4
	0x01EBC3B0 MOVZ W8, 0x1
	0x01EBC3B4 STRB W8, [X21 + 0x42D]
	0x01EBC3B8 CBZ X20, 0x1EBC3D4
	0x01EBC3BC ADRP X8, 0x2243000
	0x01EBC3C0 LDR X8, [X8 + 0x768]
	0x01EBC3C4 LDR X9, [X20]
	0x01EBC3C8 LDR X8, [X8]
	0x01EBC3CC CMP X9, X8
	0x01EBC3D0 B.EQ 0x1EBC3DC
	0x01EBC3D4 MOV W0, W31
	0x01EBC3D8 B 0x1EBC3F4
	0x01EBC3DC MOV X0, X20
	0x01EBC3E0 BL 0x1C16E08
	0x01EBC3E4 LDRB W8, [X0]
	0x01EBC3E8 LDRB W9, [X19]
	0x01EBC3EC CMP W9, W8
	0x01EBC3F0 CSET W0, EQ
	0x01EBC3F4 LDP X20, X19, [X31 + 0x10]
	0x01EBC3F8 LDP X30, X21, [X31], #0x20
	0x01EBC3FC RET
	0x01EBC400 STR X30, [X31 - 0x10]!
	0x01EBC404 LDRB W8, [X0]
	0x01EBC408 ADD X0, X31, 0xC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x251E000
	005 Move W8, [X20+1059]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {28}
	011 Move X0, 0x2244000
	012 Move X0, [X0+1696]
	013 Call 0x1C17CF4
	014 Move X0, 0x2240000
	015 Move X0, [X0+1464]
	016 Call 0x1C17CF4
	017 Move X0, 0x2244000
	018 Move X0, [X0+1704]
	019 Call 0x1C17CF4
	020 Move X0, 0x2244000
	021 Move X0, [X0+1712]
	022 Call 0x1C17CF4
	023 Move X0, 0x2239000
	024 Move X0, [X0+1976]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+1059], W8
	028 Move X8, 0x2244000
	029 Move X19, [X19+8]
	030 Move X8, [X8+1712]
	031 Compare X19, 0
	032 JumpIfEqual {76}
	033 Move X9, 0x2244000
	034 Move X9, [X9+1696]
	035 Move X10, [X19]
	036 Move X9, [X9]
	037 Move W12, [X10+304]
	038 Move W11, [X9+304]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X10, [X10+200]
	041 Add X10, X10, X11
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X1, [X8]
	045 Move X0, X19
	046 Call 0x1C17E00
	047 Move X20, X0
	048 Compare X0, 0
	049 JumpIfNotEqual {82}
	050 Compare X19, 0
	051 JumpIfEqual {98}
	052 Move X8, 0x2240000
	053 Move X8, [X8+1464]
	054 Move X9, [X8]
	055 Move X8, [X19]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X9, 0x2239000
	058 Move X9, [X9+1976]
	059 Move W11, [X8+304]
	060 Move X9, [X9]
	061 Move W10, [X9+304]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X8, [X8+200]
	064 Add X8, X8, X10
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 NotImplemented "Instruction CSEL not yet implemented."
	068 Compare X0, 0
	069 JumpIfEqual {120}
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X1, X31
	073 Move X30, [X31+32]
	074 Call Task.get_IsCompleted, X0
	075 Return X0
	076 Move X1, [X8]
	077 Move X0, X19
	078 Call 0x1C17E00
	079 Move X20, X0
	080 Compare X0, 0
	081 JumpIfEqual {98}
	082 Move X10, 0x2244000
	083 Move X8, [X20]
	084 Move X10, [X10+1704]
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Move X1, [X10]
	087 Compare X9, 0
	088 JumpIfEqual {95}
	089 Move X10, [X8+176]
	090 Add X10, X10, 8
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Subtract X9, X9, 1
	094 Add X10, X10, 16
	095 Move X0, X20
	096 Move W2, W31
	097 Call 0x1C5D788
	098 Move X20, [X31+16]
	099 Move X19, [X31+24]
	100 Move W0, 1
	101 Move X30, [X31+32]
	102 Return X0
	103 NotImplemented "Instruction LDRSW not yet implemented."
	104 Add X8, X8, X9
	105 Add X0, X8, 312
	106 Move X2, [X0]
	107 Move X1, [X0+8]
	108 Move X0, X20
	109 Move X20, [X31+16]
	110 Move X19, [X31+24]
	111 Move X30, [X31+32]
	112 CallNoReturn X2
	113 Move X0, X19
	114 Move X20, [X31+16]
	115 Move X19, [X31+24]
	116 Move X1, X31
	117 Move X30, [X31+32]
	118 Call AsyncOperation.get_isDone, X0
	119 Return X0
	120 Call 0x1C17F20

Method: System.Exception get_Error()

Disassembly:
	0x01EBC40C MOV X1, X31
	0x01EBC410 STRB W8, [X31 + 0xC]
	0x01EBC414 BL 0x3319718
	0x01EBC418 LDR X30, [X31], #0x10
	0x01EBC41C RET
	0x01EBC420 STRB W1, [X0]
	0x01EBC424 STRB W2, [X0 + 0x1]
	0x01EBC428 RET
	0x01EBC42C LDRB W8, [X0 + 0x1]
	0x01EBC430 ORN W8, W31, W8, 0x0
	0x01EBC434 AND W0, W8, 0x1
	0x01EBC438 RET
	0x01EBC43C LDRB W8, [X0 + 0x1]
	0x01EBC440 UBFM W0, W8, 0x1, 0x2
	0x01EBC444 RET
	0x01EBC448 STR X30, [X31 - 0x10]!
	0x01EBC44C LDRB W8, [X0 + 0x1]
	0x01EBC450 ADD X0, X31, 0x8
	0x01EBC454 MOV X3, X31
	0x01EBC458 STR X31, [X31 + 0x8]
	0x01EBC45C ORN W9, W31, W8, 0x0
	0x01EBC460 AND W1, W9, 0x1
	0x01EBC464 UBFM W2, W8, 0x1, 0x2
	0x01EBC468 BL 0x3C47F30
	0x01EBC46C LDR X0, [X31 + 0x8]
	0x01EBC470 LDR X30, [X31], #0x10
	0x01EBC474 RET
	0x01EBC478 LDRB W8, [X0 + 0x1]
	0x01EBC47C UBFM W0, W8, 0x3, 0x3
	0x01EBC480 RET
	0x01EBC484 LDRB W8, [X0 + 0x1]
	0x01EBC488 AND W0, W8, 0x1
	0x01EBC48C RET
	0x01EBC490 LDRB W8, [X0 + 0x1]
	0x01EBC494 UBFM W0, W8, 0x1, 0x1
	0x01EBC498 RET
	0x01EBC49C LDRB W8, [X0 + 0x1]
	0x01EBC4A0 UBFM W0, W8, 0x2, 0x2
	0x01EBC4A4 RET
	0x01EBC4A8 LDRB W8, [X0 + 0x1]
	0x01EBC4AC UBFM X9, X1, 0x8, 0x1F
	0x01EBC4B0 CMP W8, W9, UXTB
	0x01EBC4B4 B.NE 0x1EBC4C8
	0x01EBC4B8 LDRB W8, [X0]
	0x01EBC4BC CMP W8, W1, UXTB
	0x01EBC4C0 CSET W0, EQ
	0x01EBC4C4 RET
	0x01EBC4C8 MOV W0, W31
	0x01EBC4CC RET
	0x01EBC4D0 STP X30, X21, [X31 - 0x20]!
	0x01EBC4D4 STP X20, X19, [X31 + 0x10]
	0x01EBC4D8 ADRP X21, 0x251D000
	0x01EBC4DC LDRB W8, [X21 + 0x42E]
	0x01EBC4E0 MOV X20, X1
	0x01EBC4E4 MOV X19, X0
	0x01EBC4E8 TBNZ X8, 0x0, 0x1EBC500
	0x01EBC4EC ADRP X0, 0x2243000
	0x01EBC4F0 LDR X0, [X0 + 0x770]
	0x01EBC4F4 BL 0x1C16CF4
	0x01EBC4F8 MOVZ W8, 0x1
	0x01EBC4FC STRB W8, [X21 + 0x42E]
	0x01EBC500 CBZ X20, 0x1EBC544
	0x01EBC504 ADRP X8, 0x2243000
	0x01EBC508 LDR X8, [X8 + 0x770]
	0x01EBC50C LDR X9, [X20]
	0x01EBC510 LDR X8, [X8]
	0x01EBC514 CMP X9, X8
	0x01EBC518 B.NE 0x1EBC544
	0x01EBC51C MOV X0, X20
	0x01EBC520 BL 0x1C16E08
	0x01EBC524 LDRH W8, [X0]
	0x01EBC528 LDRB W9, [X19 + 0x1]
	0x01EBC52C CMP W9, W8, LSR
	0x01EBC530 B.NE 0x1EBC544
	0x01EBC534 LDRB W9, [X19]
	0x01EBC538 CMP W9, W8, UXTB
	0x01EBC53C CSET W0, EQ
	0x01EBC540 B 0x1EBC548
	0x01EBC544 MOV W0, W31
	0x01EBC548 LDP X20, X19, [X31 + 0x10]
	0x01EBC54C LDP X30, X21, [X31], #0x20
	0x01EBC550 RET
	0x01EBC554 SUB X31, X31, 0x20
	0x01EBC558 STP X30, X19, [X31 + 0x10]
	0x01EBC55C LDRB W8, [X0]
	0x01EBC560 LDRB W19, [X0 + 0x1]
	0x01EBC564 ADD X0, X31, 0xC
	0x01EBC568 MOV X1, X31
	0x01EBC56C STRB W8, [X31 + 0xC]
	0x01EBC570 BL 0x3319718

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x251E000
	006 Move X21, 0x2244000
	007 Move W8, [X20+1060]
	008 Move X21, [X21+1712]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x2240000
	015 Move X0, [X0+1464]
	016 Call 0x1C17CF4
	017 Move X0, 0x2244000
	018 Move X0, [X0+1704]
	019 Call 0x1C17CF4
	020 Move X0, 0x2244000
	021 Move X0, [X0+1712]
	022 Call 0x1C17CF4
	023 Move X0, 0x2239000
	024 Move X0, [X0+1976]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+1060], W8
	028 Move X20, [X19+8]
	029 Move X1, [X21]
	030 Move X0, X20
	031 Call 0x1C17E00
	032 Compare X0, 0
	033 JumpIfEqual {51}
	034 Move X10, 0x2244000
	035 Move X8, [X0]
	036 Move X10, [X10+1704]
	037 Move X19, X0
	038 NotImplemented "Instruction LDRH not yet implemented."
	039 Move X1, [X10]
	040 Compare X9, 0
	041 JumpIfEqual {48}
	042 Move X10, [X8+176]
	043 Add X10, X10, 8
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Subtract X9, X9, 1
	047 Add X10, X10, 16
	048 Move W2, 3
	049 Move X0, X19
	050 Call 0x1C5D788
	051 Compare X20, 0
	052 JumpIfEqual {84}
	053 Move X9, 0x2239000
	054 Move X9, [X9+1976]
	055 Move X8, [X20]
	056 Move X9, [X9]
	057 Move W11, [X8+304]
	058 Move W10, [X9+304]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X11, [X8+200]
	061 Add X10, X11, X10
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X9, 0x2240000
	065 Move X9, [X9+1464]
	066 Move X0, X31
	067 Move X9, [X9]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 NotImplemented "Instruction CSEL not yet implemented."
	070 Compare X8, 0
	071 JumpIfEqual {98}
	072 Move X0, [X8+16]
	073 Move W9, [X10]
	074 Add W9, W9, 3
	075 Add X8, X8, W9
	076 Add X0, X8, 312
	077 Move X8, [X0]
	078 Move X1, [X0+8]
	079 Move X0, X19
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Compare X0, 0
	082 JumpIfEqual {85}
	083 Move X0, [X0+16]
	084 Move X0, X31
	085 Move X20, [X31+16]
	086 Move X19, [X31+24]
	087 Move X30, [X31+32]
	088 Move X21, [X31+40]
	089 Return X0
	090 Move X0, X20
	091 Move X20, [X31+16]
	092 Move X19, [X31+24]
	093 Move X1, X31
	094 Move X30, [X31+32]
	095 Move X21, [X31+40]
	096 Call Task.get_Exception, X0
	097 Return X0
	098 Call 0x1C17F20

Method: System.Void ThrowIfError()

Disassembly:
	0x01EBC574 MOVZ W8, 0x18D
	0x01EBC578 MUL W8, W19, W8
	0x01EBC57C LDP X30, X19, [X31 + 0x10]
	0x01EBC580 EOR W0, W0, W8, 0x0
	0x01EBC584 ADD X31, X31, 0x20
	0x01EBC588 RET
	0x01EBC58C UBFM W9, W0, 0x8, 0xF
	0x01EBC590 UBFM X10, X1, 0x8, 0x1F
	0x01EBC594 AND W8, W0, 0xFF
	0x01EBC598 CMP W9, W10, UXTB
	0x01EBC59C CSET W9, EQ
	0x01EBC5A0 CMP W8, W1, UXTB
	0x01EBC5A4 CSET W8, EQ
	0x01EBC5A8 AND W0, W8, W9, 0x0
	0x01EBC5AC RET
	0x01EBC5B0 UBFM W9, W0, 0x8, 0xF
	0x01EBC5B4 UBFM X10, X1, 0x8, 0x1F
	0x01EBC5B8 AND W8, W0, 0xFF
	0x01EBC5BC CMP W9, W10, UXTB
	0x01EBC5C0 CSET W9, NE
	0x01EBC5C4 CMP W8, W1, UXTB
	0x01EBC5C8 CSET W8, NE
	0x01EBC5CC ORR W0, W8, W9, 0x0
	0x01EBC5D0 RET
	0x01EBC5D4 SUB X31, X31, 0x40
	0x01EBC5D8 STP X30, X23, [X31 + 0x10]
	0x01EBC5DC STP X22, X21, [X31 + 0x20]
	0x01EBC5E0 STP X20, X19, [X31 + 0x30]
	0x01EBC5E4 ADRP X23, 0x251D000
	0x01EBC5E8 ADRP X20, 0x2243000
	0x01EBC5EC ADRP X22, 0x2243000
	0x01EBC5F0 ADRP X21, 0x2243000
	0x01EBC5F4 LDRB W8, [X23 + 0x42F]
	0x01EBC5F8 LDR X20, [X20 + 0x778]
	0x01EBC5FC LDR X22, [X22 + 0x768]
	0x01EBC600 LDR X21, [X21 + 0x780]
	0x01EBC604 MOV X19, X0
	0x01EBC608 TBNZ X8, 0x0, 0x1EBC638
	0x01EBC60C ADRP X0, 0x2243000
	0x01EBC610 LDR X0, [X0 + 0x778]
	0x01EBC614 BL 0x1C16CF4
	0x01EBC618 ADRP X0, 0x2243000
	0x01EBC61C LDR X0, [X0 + 0x768]
	0x01EBC620 BL 0x1C16CF4
	0x01EBC624 ADRP X0, 0x2243000
	0x01EBC628 LDR X0, [X0 + 0x780]
	0x01EBC62C BL 0x1C16CF4
	0x01EBC630 MOVZ W8, 0x1
	0x01EBC634 STRB W8, [X23 + 0x42F]
	0x01EBC638 LDRB W8, [X19 + 0x1]
	0x01EBC63C LDR X0, [X20]
	0x01EBC640 ADD X1, X31, 0xC
	0x01EBC644 STRB W8, [X31 + 0xC]
	0x01EBC648 BL 0x1C16E04
	0x01EBC64C MOV X20, X0
	0x01EBC650 LDRB W8, [X19]
	0x01EBC654 LDR X0, [X22]
	0x01EBC658 ADD X1, X31, 0x8
	0x01EBC65C STRB W8, [X31 + 0x8]
	0x01EBC660 BL 0x1C16E04
	0x01EBC664 LDR X8, [X21]
	0x01EBC668 MOV X2, X0
	0x01EBC66C MOV X1, X20
	0x01EBC670 MOV X3, X31
	0x01EBC674 MOV X0, X8
	0x01EBC678 BL 0x3227BD4
	0x01EBC67C LDP X20, X19, [X31 + 0x30]
	0x01EBC680 LDP X22, X21, [X31 + 0x20]
	0x01EBC684 LDP X30, X23, [X31 + 0x10]
	0x01EBC688 ADD X31, X31, 0x40
	0x01EBC68C RET
	0x01EBC690 STP X30, X21, [X31 - 0x20]!
	0x01EBC694 STP X20, X19, [X31 + 0x10]
	0x01EBC698 ADRP X21, 0x251D000
	0x01EBC69C ADRP X20, 0x2243000
	0x01EBC6A0 LDRB W8, [X21 + 0x430]
	0x01EBC6A4 LDR X20, [X20 + 0x788]
	0x01EBC6A8 MOV X19, X0
	0x01EBC6AC TBNZ X8, 0x0, 0x1EBC6C4
	0x01EBC6B0 ADRP X0, 0x2243000
	0x01EBC6B4 LDR X0, [X0 + 0x788]
	0x01EBC6B8 BL 0x1C16CF4
	0x01EBC6BC MOVZ W8, 0x1
	0x01EBC6C0 STRB W8, [X21 + 0x430]
	0x01EBC6C4 LDR W8, [X19], #0x4
	0x01EBC6C8 LDR X2, [X20]
	0x01EBC6CC MOV X0, X19
	0x01EBC6D0 LDP X20, X19, [X31 + 0x10]
	0x01EBC6D4 AND W1, W8, 0xF
	0x01EBC6D8 LDP X30, X21, [X31], #0x20
	0x01EBC6DC B 0x21E39A4
	0x01EBC6E0 LDR W8, [X0]
	0x01EBC6E4 AND W0, W8, 0xF
	0x01EBC6E8 RET
	0x01EBC6EC STP X30, X21, [X31 - 0x20]!
	0x01EBC6F0 STP X20, X19, [X31 + 0x10]
	0x01EBC6F4 ADRP X21, 0x251D000
	0x01EBC6F8 ADRP X20, 0x2243000
	0x01EBC6FC LDRB W8, [X21 + 0x431]
	0x01EBC700 LDR X20, [X20 + 0x790]
	0x01EBC704 MOV X19, X0
	0x01EBC708 TBNZ X8, 0x0, 0x1EBC720
	0x01EBC70C ADRP X0, 0x2243000
	0x01EBC710 LDR X0, [X0 + 0x790]
	0x01EBC714 BL 0x1C16CF4
	0x01EBC718 MOVZ W8, 0x1
	0x01EBC71C STRB W8, [X21 + 0x431]
	0x01EBC720 LDR W8, [X19], #0x24
	0x01EBC724 LDR X2, [X20]
	0x01EBC728 MOV X0, X19
	0x01EBC72C LDP X20, X19, [X31 + 0x10]
	0x01EBC730 AND W1, W8, 0xF
	0x01EBC734 LDP X30, X21, [X31], #0x20
	0x01EBC738 B 0x21E394C
	0x01EBC73C SUB X31, X31, 0x60
	0x01EBC740 STP X30, X25, [X31 + 0x20]
	0x01EBC744 STP X24, X23, [X31 + 0x30]
	0x01EBC748 STP X22, X21, [X31 + 0x40]
	0x01EBC74C STP X20, X19, [X31 + 0x50]
	0x01EBC750 ADRP X21, 0x251D000
	0x01EBC754 LDRB W8, [X21 + 0x432]
	0x01EBC758 MOV X19, X2
	0x01EBC75C MOV X22, X1
	0x01EBC760 MOV X20, X0
	0x01EBC764 TBNZ X8, 0x0, 0x1EBC788
	0x01EBC768 ADRP X0, 0x2242000
	0x01EBC76C LDR X0, [X0 + 0xDA8]
	0x01EBC770 BL 0x1C16CF4
	0x01EBC774 ADRP X0, 0x2242000
	0x01EBC778 LDR X0, [X0 + 0xD10]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x251E000
	007 Move X21, 0x2244000
	008 Move W8, [X20+1061]
	009 Move X21, [X21+1712]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x2240000
	016 Move X0, [X0+1464]
	017 Call 0x1C17CF4
	018 Move X0, 0x2244000
	019 Move X0, [X0+1704]
	020 Call 0x1C17CF4
	021 Move X0, 0x2244000
	022 Move X0, [X0+1712]
	023 Call 0x1C17CF4
	024 Move X0, 0x2239000
	025 Move X0, [X0+1976]
	026 Call 0x1C17CF4
	027 Move X0, 0x2244000
	028 Move X0, [X0+1720]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+1061], W8
	032 Move [X31+8], X31
	033 Move X20, [X19+8]
	034 Move X1, [X21]
	035 Move X0, X20
	036 Call 0x1C17E00
	037 Compare X0, 0
	038 JumpIfEqual {56}
	039 Move X20, 0x2244000
	040 Move X8, [X0]
	041 Move X20, [X20+1704]
	042 Move X19, X0
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X20]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move W2, 3
	054 Move X0, X19
	055 Call 0x1C5D788
	056 Compare X20, 0
	057 JumpIfEqual {131}
	058 Move X8, 0x2240000
	059 Move X8, [X8+1464]
	060 Move X9, [X8]
	061 Move X8, [X20]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X9, 0x2239000
	064 Move X9, [X9+1976]
	065 Move W11, [X8+304]
	066 Move X9, [X9]
	067 Move W10, [X9+304]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X8, [X8+200]
	070 Add X8, X8, X10
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction CSEL not yet implemented."
	074 Compare X19, 0
	075 JumpIfEqual {138}
	076 Move X0, X19
	077 Move X1, X31
	078 Call Task.get_IsFaulted, X0
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {131}
	083 Move X0, X19
	084 Move X1, X31
	085 Call Task.GetAwaiter, X0
	086 Move [X31+8], X0
	087 Add X0, X31, 8
	088 Move X1, X31
	089 Call TaskAwaiter.GetResult, X0
	090 Move W9, [X10]
	091 Add W9, W9, 3
	092 Add X8, X8, W9
	093 Add X0, X8, 312
	094 Move X8, [X0]
	095 Move X1, [X0+8]
	096 Move X0, X19
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Compare X0, 0
	099 JumpIfEqual {131}
	100 Move X8, [X19]
	101 Move X1, [X20]
	102 NotImplemented "Instruction LDRH not yet implemented."
	103 Compare X9, 0
	104 JumpIfEqual {111}
	105 Move X10, [X8+176]
	106 Add X10, X10, 8
	107 NotImplemented "Instruction LDUR not yet implemented."
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Subtract X9, X9, 1
	110 Add X10, X10, 16
	111 Move W2, 3
	112 Move X0, X19
	113 Call 0x1C5D788
	114 Move W9, [X10]
	115 Add W9, W9, 3
	116 Add X8, X8, W9
	117 Add X0, X8, 312
	118 Move X8, [X0]
	119 Move X1, [X0+8]
	120 Move X0, X19
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Compare X0, 0
	123 JumpIfEqual {138}
	124 Move X1, X31
	125 Call ExceptionDispatchInfo.Throw, X0
	126 Move X8, 0x2244000
	127 Move X8, [X8+1720]
	128 Move X1, X31
	129 Move X0, [X8]
	130 Call Assert.AlwaysFail, X0
	131 Move X20, [X31+32]
	132 Move X19, [X31+40]
	133 Move X30, [X31+16]
	134 Move X21, [X31+24]
	135 Add X31, X31, 48
	136 Return 
	137 Move X0, X20
	138 Call 0x1C17F20

Method: Fusion.NetworkSceneAsyncOp FromAsyncOperation(Fusion.SceneRef sceneRef, UnityEngine.AsyncOperation asyncOp)

Disassembly:
	0x01EBC77C BL 0x1C16CF4
	0x01EBC780 MOVZ W8, 0x1
	0x01EBC784 STRB W8, [X21 + 0x432]
	0x01EBC788 STP X31, X31, [X31 + 0x10]
	0x01EBC78C STP X31, X31, [X31]
	0x01EBC790 LDRB W8, [X20]
	0x01EBC794 ANDS W31, W8, 0xF
	0x01EBC798 B.EQ 0x1EBC834
	0x01EBC79C ADRP X23, 0x2242000
	0x01EBC7A0 ADRP X24, 0x2242000
	0x01EBC7A4 LDR X23, [X23 + 0xDA8]
	0x01EBC7A8 LDR X24, [X24 + 0xD10]
	0x01EBC7AC MOV W21, W31
	0x01EBC7B0 AND X22, X22, 0x0
	0x01EBC7B4 UBFM X25, X19, 0x8, 0x3F
	0x01EBC7B8 MOV X0, X20
	0x01EBC7BC BL 0x1EBC690
	0x01EBC7C0 LDR X2, [X23]
	0x01EBC7C4 STP X0, X1, [X31 + 0x10]
	0x01EBC7C8 ADD X0, X31, 0x10
	0x01EBC7CC MOV W1, W21
	0x01EBC7D0 BL 0x2D205F0
	0x01EBC7D4 LDR W0, [X0]
	0x01EBC7D8 MOV X1, X22
	0x01EBC7DC MOV X2, X31
	0x01EBC7E0 BL 0x1E8FF58
	0x01EBC7E4 TBZ X0, 0x0, 0x1EBC820
	0x01EBC7E8 MOV X0, X20
	0x01EBC7EC BL 0x1EBC6EC
	0x01EBC7F0 LDR X2, [X24]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {18}
	006 Move X2, X1
	007 And X1, X0, 0
	008 Add X0, X31, 0
	009 Move [X31], X31
	010 Move [X31+8], X31
	011 Call NetworkSceneAsyncOp..ctor, X0, X1, X2
	012 Move X0, [X31]
	013 Move X1, [X31+8]
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Add X31, X31, 32
	017 Return X0
	018 Move X0, 0x223D000
	019 Move X0, [X0+1320]
	020 Call 0x1C17D08
	021 Call 0x1C17F10
	022 Move X19, X0
	023 Move X0, 0x2244000
	024 Move X0, [X0+1728]
	025 Call 0x1C17D08
	026 Move X1, X0
	027 Move X0, X19
	028 Move X2, X31
	029 Call ArgumentNullException..ctor, X0, X1
	030 Move X0, 0x2244000
	031 Move X0, [X0+1736]
	032 Call 0x1C17D08
	033 Move X1, X0
	034 Move X0, X19
	035 Call 0x1C17DEC

Method: Fusion.NetworkSceneAsyncOp FromCoroutine(Fusion.SceneRef sceneRef, Fusion.ICoroutine coroutine)

Disassembly:
	0x01EBC7F4 STP X0, X1, [X31]
	0x01EBC7F8 ADD X0, X31, 0x0
	0x01EBC7FC MOV W1, W21
	0x01EBC800 BL 0x2D1FA44
	0x01EBC804 LDRH W8, [X0]
	0x01EBC808 AND W9, W8, 0xFF
	0x01EBC80C CMP W9, W19, UXTB
	0x01EBC810 B.NE 0x1EBC820
	0x01EBC814 UBFM W8, W8, 0x8, 0x1F
	0x01EBC818 CMP W8, W25, UXTB
	0x01EBC81C B.EQ 0x1EBC838
	0x01EBC820 LDR W8, [X20]
	0x01EBC824 ADD W21, W21, 0x1
	0x01EBC828 AND W8, W8, 0xF
	0x01EBC82C CMP W21, W8
	0x01EBC830 B.CC 0x1EBC7B8
	0x01EBC834 MOVN W21, 0x0
	0x01EBC838 MOV W0, W21
	0x01EBC83C LDP X20, X19, [X31 + 0x50]
	0x01EBC840 LDP X22, X21, [X31 + 0x40]
	0x01EBC844 LDP X24, X23, [X31 + 0x30]
	0x01EBC848 LDP X30, X25, [X31 + 0x20]

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {5}
	003 And X0, X0, 0
	004 Return X0
	005 Move [X31-16], X30
	006 Move [X31-8], X19
	007 Move X0, 0x223D000
	008 Move X0, [X0+1320]
	009 Call 0x1C17D08
	010 Call 0x1C17F10
	011 Move X19, X0
	012 Move X0, 0x2244000
	013 Move X0, [X0+1744]
	014 Call 0x1C17D08
	015 Move X1, X0
	016 Move X0, X19
	017 Move X2, X31
	018 Call ArgumentNullException..ctor, X0, X1
	019 Move X0, 0x2244000
	020 Move X0, [X0+1752]
	021 Call 0x1C17D08
	022 Move X1, X0
	023 Move X0, X19
	024 Call 0x1C17DEC

Method: Fusion.NetworkSceneAsyncOp FromTask(Fusion.SceneRef sceneRef, System.Threading.Tasks.Task task)

Disassembly:
	0x01EBC84C ADD X31, X31, 0x60
	0x01EBC850 RET
	0x01EBC854 AND X8, X1, 0x0
	0x01EBC858 UBFM X2, X1, 0x20, 0x2F
	0x01EBC85C MOV X1, X8
	0x01EBC860 B 0x1EBC73C
	0x01EBC864 LDR W8, [X0]
	0x01EBC868 BFM W8, W1, 0x0, 0x3
	0x01EBC86C STR W8, [X0]
	0x01EBC870 RET
	0x01EBC874 LDR W8, [X0]
	0x01EBC878 UBFM W0, W8, 0x4, 0x13
	0x01EBC87C RET
	0x01EBC880 LDR W8, [X0]
	0x01EBC884 BFM W8, W1, 0x1C, 0xF
	0x01EBC888 STR W8, [X0]
	0x01EBC88C RET
	0x01EBC890 CMP W2, 0x0
	0x01EBC894 CSET W9, EQ
	0x01EBC898 UBFM W8, W3, 0x1, 0x1F
	0x01EBC89C ANDS W31, W4, 0x1
	0x01EBC8A0 MOVZ W10, 0x8
	0x01EBC8A4 BFM W9, W3, 0x1F, 0x0
	0x01EBC8A8 CSEL W10, W10, W31, NE
	0x01EBC8AC BFM W9, W8, 0x1E, 0x0
	0x01EBC8B0 ORR W2, W9, W10, 0x0
	0x01EBC8B4 AND X1, X1, 0x0
	0x01EBC8B8 B 0x1EBC8BC
	0x01EBC8BC SUB X31, X31, 0x60
	0x01EBC8C0 STR X30, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {18}
	006 Move X2, X1
	007 And X1, X0, 0
	008 Add X0, X31, 0
	009 Move [X31], X31
	010 Move [X31+8], X31
	011 Call NetworkSceneAsyncOp..ctor, X0, X1, X2
	012 Move X0, [X31]
	013 Move X1, [X31+8]
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Add X31, X31, 32
	017 Return X0
	018 Move X0, 0x223D000
	019 Move X0, [X0+1320]
	020 Call 0x1C17D08
	021 Call 0x1C17F10
	022 Move X19, X0
	023 Move X0, 0x2244000
	024 Move X0, [X0+1760]
	025 Call 0x1C17D08
	026 Move X1, X0
	027 Move X0, X19
	028 Move X2, X31
	029 Call ArgumentNullException..ctor, X0, X1
	030 Move X0, 0x2244000
	031 Move X0, [X0+1768]
	032 Call 0x1C17D08
	033 Move X1, X0
	034 Move X0, X19
	035 Call 0x1C17DEC

Method: Fusion.NetworkSceneAsyncOp FromError(Fusion.SceneRef sceneRef, System.Exception error)

Disassembly:
	0x01EBC8C4 STP X24, X23, [X31 + 0x30]
	0x01EBC8C8 STP X22, X21, [X31 + 0x40]
	0x01EBC8CC STP X20, X19, [X31 + 0x50]
	0x01EBC8D0 ADRP X22, 0x251D000
	0x01EBC8D4 LDRB W8, [X22 + 0x433]
	0x01EBC8D8 MOV W21, W2
	0x01EBC8DC MOV X20, X1
	0x01EBC8E0 MOV X19, X0
	0x01EBC8E4 TBNZ X8, 0x0, 0x1EBC920
	0x01EBC8E8 ADRP X0, 0x2243000
	0x01EBC8EC LDR X0, [X0 + 0x798]
	0x01EBC8F0 BL 0x1C16CF4
	0x01EBC8F4 ADRP X0, 0x2243000
	0x01EBC8F8 LDR X0, [X0 + 0x7A0]
	0x01EBC8FC BL 0x1C16CF4
	0x01EBC900 ADRP X0, 0x2242000
	0x01EBC904 LDR X0, [X0 + 0xDA8]
	0x01EBC908 BL 0x1C16CF4
	0x01EBC90C ADRP X0, 0x2242000
	0x01EBC910 LDR X0, [X0 + 0xD10]
	0x01EBC914 BL 0x1C16CF4
	0x01EBC918 MOVZ W8, 0x1
	0x01EBC91C STRB W8, [X22 + 0x433]
	0x01EBC920 STP X31, X31, [X31 + 0x10]
	0x01EBC924 STP X31, X31, [X31]
	0x01EBC928 TBNZ X21, 0x0, 0x1EBC934
	0x01EBC92C LDR W8, [X19]
	0x01EBC930 B 0x1EBC988
	0x01EBC934 ADRP X22, 0x2243000
	0x01EBC938 ADRP X23, 0x2243000
	0x01EBC93C LDR X22, [X22 + 0x798]
	0x01EBC940 LDR X23, [X23 + 0x7A0]
	0x01EBC944 MOV X0, X19
	0x01EBC948 BL 0x1EBC690

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {22}
	006 Move X19, X0
	007 Move X0, X1
	008 Move X1, X31
	009 Call ExceptionDispatchInfo.Capture, X0
	010 Move X2, X0
	011 And X1, X19, 0
	012 Add X0, X31, 0
	013 Move [X31], X31
	014 Move [X31+8], X31
	015 Call NetworkSceneAsyncOp..ctor, X0, X1, X2
	016 Move X0, [X31]
	017 Move X1, [X31+8]
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Add X31, X31, 32
	021 Return X0
	022 Move X0, 0x223D000
	023 Move X0, [X0+1320]
	024 Call 0x1C17D08
	025 Call 0x1C17F10
	026 Move X19, X0
	027 Move X0, 0x223B000
	028 Move X0, [X0+568]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X19
	032 Move X2, X31
	033 Call ArgumentNullException..ctor, X0, X1
	034 Move X0, 0x2244000
	035 Move X0, [X0+1776]
	036 Call 0x1C17D08
	037 Move X1, X0
	038 Move X0, X19
	039 Call 0x1C17DEC

Method: Fusion.NetworkSceneAsyncOp FromCompleted(Fusion.SceneRef sceneRef)

Disassembly:
	0x01EBC94C LDR X8, [X22]
	0x01EBC950 STP X0, X1, [X31 + 0x10]
	0x01EBC954 ADD X0, X31, 0x10

ISIL:
	001 And X0, X0, 0
	002 Move X1, X31
	003 Return X0

Method: Fusion.NetworkSceneAsyncOp FromDeferred(Fusion.SceneRef sceneRef, System.Threading.Tasks.Task blockingTask, System.Func`2<Fusion.SceneRef, Fusion.NetworkSceneAsyncOp> op)

Disassembly:
	0x01EBC958 MOV X1, X8
	0x01EBC95C BL 0x2D20A54
	0x01EBC960 MOV X0, X19
	0x01EBC964 BL 0x1EBC6EC
	0x01EBC968 LDR X8, [X23]
	0x01EBC96C STP X0, X1, [X31]
	0x01EBC970 ADD X0, X31, 0x0
	0x01EBC974 MOV X1, X8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 And X19, X0, 0
	004 Move X0, X19
	005 Call NetworkSceneAsyncOp.CreateDeferredOpTask, X0, X1, X2
	006 Move X1, X0
	007 Move X0, X19
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call NetworkSceneAsyncOp.FromTask, X0, X1
	011 Return X0

Method: System.Threading.Tasks.Task CreateDeferredOpTask(Fusion.SceneRef sceneRef, System.Threading.Tasks.Task blockingTask, System.Func`2<Fusion.SceneRef, Fusion.NetworkSceneAsyncOp> op)

Disassembly:
	0x01EBC978 BL 0x2D1FEA8
	0x01EBC97C LDR W8, [X19]
	0x01EBC980 AND W8, W8, 0xFFFFFFF0
	0x01EBC984 STR W8, [X19]
	0x01EBC988 AND W22, W8, 0xF
	0x01EBC98C CMP W22, 0x7
	0x01EBC990 B.HI 0x1EBCA1C
	0x01EBC994 ADRP X23, 0x2242000
	0x01EBC998 ADRP X24, 0x2242000
	0x01EBC99C LDR X23, [X23 + 0xD10]
	0x01EBC9A0 LDR X24, [X24 + 0xDA8]
	0x01EBC9A4 ADD W9, W22, 0x1
	0x01EBC9A8 AND W8, W8, 0xFFFFFFF0
	0x01EBC9AC ORR W8, W9, W8, 0x0
	0x01EBC9B0 MOV X0, X19
	0x01EBC9B4 STR W8, [X19]
	0x01EBC9B8 BL 0x1EBC6EC
	0x01EBC9BC LDR X2, [X23]
	0x01EBC9C0 STP X0, X1, [X31]
	0x01EBC9C4 ADD X0, X31, 0x0
	0x01EBC9C8 MOV W1, W22
	0x01EBC9CC BL 0x2D1FA44
	0x01EBC9D0 LDRH W8, [X19]
	0x01EBC9D4 UBFM W9, W21, 0x18, 0x17
	0x01EBC9D8 BFM W9, W8, 0x4, 0xB
	0x01EBC9DC STRH W9, [X0]
	0x01EBC9E0 MOV X0, X19
	0x01EBC9E4 BL 0x1EBC690
	0x01EBC9E8 LDR X2, [X24]
	0x01EBC9EC STP X0, X1, [X31 + 0x10]
	0x01EBC9F0 ADD X0, X31, 0x10
	0x01EBC9F4 MOV W1, W22
	0x01EBC9F8 BL 0x2D205F0
	0x01EBC9FC STR W20, [X0]
	0x01EBCA00 LDR W8, [X19]
	0x01EBCA04 AND W9, W8, 0xFFFF0
	0x01EBCA08 ADD W9, W9, 0x10
	0x01EBCA0C UBFM W9, W9, 0x4, 0x1F
	0x01EBCA10 BFM W8, W9, 0x1C, 0xF
	0x01EBCA14 STR W8, [X19]
	0x01EBCA18 B 0x1EBCA20
	0x01EBCA1C MOVN W22, 0x0
	0x01EBCA20 MOV W0, W22
	0x01EBCA24 LDP X20, X19, [X31 + 0x50]
	0x01EBCA28 LDP X22, X21, [X31 + 0x40]
	0x01EBCA2C LDP X24, X23, [X31 + 0x30]
	0x01EBCA30 LDR X30, [X31 + 0x20]
	0x01EBCA34 ADD X31, X31, 0x60
	0x01EBCA38 RET
	0x01EBCA3C SUB X31, X31, 0x70
	0x01EBCA40 STR X30, [X31 + 0x20]
	0x01EBCA44 STP X26, X25, [X31 + 0x30]
	0x01EBCA48 STP X24, X23, [X31 + 0x40]
	0x01EBCA4C STP X22, X21, [X31 + 0x50]
	0x01EBCA50 STP X20, X19, [X31 + 0x60]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+112], X30
	003 Move [X31+120], X23
	004 Move [X31+128], X22
	005 Move [X31+136], X21
	006 Move [X31+144], X20
	007 Move [X31+152], X19
	008 Move X23, 0x251E000
	009 Move X22, 0x223B000
	010 Move W8, [X23+1062]
	011 Move X22, [X22+640]
	012 Move X20, X2
	013 Move X19, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x2244000
	020 Move X0, [X0+1784]
	021 Call 0x1C17CF4
	022 Move X0, 0x223B000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+1062], W8
	027 Move X0, [X22]
	028 NotImplemented "Instruction MOVI not yet implemented."
	029 Move [X31+80], V0
	030 Move [X31+88], V0
	031 Move [X31+48], V0
	032 Move [X31+56], V0
	033 Move [X31+2], V0
	034 Move X22, 0x2244000
	035 Move W8, [X0+224]
	036 Move X22, [X22+1784]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Add X8, X31, 8
	041 Move X0, X31
	042 Call AsyncTaskMethodBuilder.Create
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 Move X9, [X31+24]
	045 Move X2, [X22]
	046 Add X8, X31, 32
	047 Move [X31+64], X19
	048 Move [X31+72], X20
	049 Or X20, X8, 15
	050 Move TEMP, 0
	051 Not TEMP
	052 Move W10, TEMP
	053 Add X1, X31, 32
	054 Move X0, X20
	055 Move [X31+80], W21
	056 Move [X31+40], V0
	057 Move [X31+56], X9
	058 Move [X31+32], W10
	059 Call AsyncTaskMethodBuilder.Start, X0, X1
	060 Move X0, X20
	061 Move X1, X31
	062 Call AsyncTaskMethodBuilder.get_Task, X0
	063 Move X20, [X31+144]
	064 Move X19, [X31+152]
	065 Move X22, [X31+128]
	066 Move X21, [X31+136]
	067 Move X30, [X31+112]
	068 Move X23, [X31+120]
	069 Add X31, X31, 160
	070 Return X0

Method: System.Void AddOnCompleted(System.Action`1<Fusion.NetworkSceneAsyncOp> action)

Disassembly:
	0x01EBCA54 ADRP X21, 0x251D000
	0x01EBCA58 LDRB W8, [X21 + 0x434]
	0x01EBCA5C MOV X20, X1
	0x01EBCA60 MOV X19, X0
	0x01EBCA64 TBNZ X8, 0x0, 0x1EBCA88
	0x01EBCA68 ADRP X0, 0x2242000
	0x01EBCA6C LDR X0, [X0 + 0xDA8]
	0x01EBCA70 BL 0x1C16CF4
	0x01EBCA74 ADRP X0, 0x2242000
	0x01EBCA78 LDR X0, [X0 + 0xD10]
	0x01EBCA7C BL 0x1C16CF4
	0x01EBCA80 MOVZ W8, 0x1
	0x01EBCA84 STRB W8, [X21 + 0x434]
	0x01EBCA88 ADRP X26, 0x2242000
	0x01EBCA8C ADRP X25, 0x2242000
	0x01EBCA90 LDR X26, [X26 + 0xDA8]
	0x01EBCA94 LDR X25, [X25 + 0xD10]
	0x01EBCA98 MOV W21, W31
	0x01EBCA9C AND X22, X20, 0x0
	0x01EBCAA0 STP X31, X31, [X31 + 0x10]
	0x01EBCAA4 STP X31, X31, [X31]
	0x01EBCAA8 LDR W8, [X19]
	0x01EBCAAC MOV W20, W21
	0x01EBCAB0 AND W24, W8, 0xF
	0x01EBCAB4 CMP W21, W24
	0x01EBCAB8 B.CS 0x1EBCC00
	0x01EBCABC MOV X0, X19
	0x01EBCAC0 BL 0x1EBC690
	0x01EBCAC4 LDR X2, [X26]
	0x01EBCAC8 STP X0, X1, [X31 + 0x10]
	0x01EBCACC ADD X0, X31, 0x10
	0x01EBCAD0 MOV W1, W20
	0x01EBCAD4 BL 0x2D205F0
	0x01EBCAD8 LDR W0, [X0]
	0x01EBCADC MOV X1, X22
	0x01EBCAE0 MOV X2, X31
	0x01EBCAE4 BL 0x1E8FF58
	0x01EBCAE8 ADD W21, W20, 0x1
	0x01EBCAEC TBZ X0, 0x0, 0x1EBCAA8
	0x01EBCAF0 LDR W8, [X19]
	0x01EBCAF4 MOV X0, X19
	0x01EBCAF8 AND W22, W8, 0xF
	0x01EBCAFC BL 0x1EBC690
	0x01EBCB00 CMP W21, W22
	0x01EBCB04 STP X0, X1, [X31 + 0x10]
	0x01EBCB08 B.CS 0x1EBCB98
	0x01EBCB0C LDR X2, [X26]
	0x01EBCB10 SUB W22, W21, 0x1
	0x01EBCB14 ADD X0, X31, 0x10
	0x01EBCB18 MOV W1, W22
	0x01EBCB1C BL 0x2D205F0
	0x01EBCB20 MOV X23, X0
	0x01EBCB24 MOV X0, X19
	0x01EBCB28 BL 0x1EBC690
	0x01EBCB2C LDR X2, [X26]
	0x01EBCB30 STP X0, X1, [X31 + 0x10]
	0x01EBCB34 ADD X0, X31, 0x10
	0x01EBCB38 MOV W1, W21
	0x01EBCB3C BL 0x2D205F0
	0x01EBCB40 LDR W8, [X0]
	0x01EBCB44 MOV X0, X19
	0x01EBCB48 STR W8, [X23]
	0x01EBCB4C BL 0x1EBC6EC
	0x01EBCB50 LDR X2, [X25]
	0x01EBCB54 STP X0, X1, [X31]
	0x01EBCB58 ADD X0, X31, 0x0
	0x01EBCB5C MOV W1, W22
	0x01EBCB60 BL 0x2D1FA44
	0x01EBCB64 MOV X22, X0
	0x01EBCB68 MOV X0, X19
	0x01EBCB6C BL 0x1EBC6EC
	0x01EBCB70 LDR X2, [X25]
	0x01EBCB74 STP X0, X1, [X31]
	0x01EBCB78 ADD X0, X31, 0x0
	0x01EBCB7C MOV W1, W21
	0x01EBCB80 BL 0x2D1FA44
	0x01EBCB84 LDRH W8, [X0]
	0x01EBCB88 ADD W21, W21, 0x1
	0x01EBCB8C STRH W8, [X22]
	0x01EBCB90 LDR W8, [X19]
	0x01EBCB94 B 0x1EBCAF4
	0x01EBCB98 LDR W8, [X19]
	0x01EBCB9C LDR X2, [X26]
	0x01EBCBA0 ADD X0, X31, 0x10
	0x01EBCBA4 AND W8, W8, 0xF
	0x01EBCBA8 SUB W1, W8, 0x1
	0x01EBCBAC BL 0x2D205F0
	0x01EBCBB0 STR W31, [X0]
	0x01EBCBB4 MOV X0, X19
	0x01EBCBB8 BL 0x1EBC6EC
	0x01EBCBBC STP X0, X1, [X31]
	0x01EBCBC0 LDR W8, [X19]
	0x01EBCBC4 LDR X2, [X25]
	0x01EBCBC8 ADD X0, X31, 0x0
	0x01EBCBCC AND W8, W8, 0xF
	0x01EBCBD0 SUB W1, W8, 0x1
	0x01EBCBD4 BL 0x2D1FA44
	0x01EBCBD8 STRH W31, [X0]
	0x01EBCBDC LDR W8, [X19]
	0x01EBCBE0 AND W10, W8, 0xFFFF0
	0x01EBCBE4 AND W9, W8, 0xFFF00000
	0x01EBCBE8 SUB W8, W8, 0x1
	0x01EBCBEC ADD W10, W10, 0x10
	0x01EBCBF0 AND W10, W10, 0xFFFF0
	0x01EBCBF4 BFM W9, W8, 0x0, 0x3
	0x01EBCBF8 ORR W8, W9, W10, 0x0
	0x01EBCBFC STR W8, [X19]
	0x01EBCC00 CMP W20, W24
	0x01EBCC04 LDP X20, X19, [X31 + 0x60]
	0x01EBCC08 LDP X22, X21, [X31 + 0x50]
	0x01EBCC0C LDP X24, X23, [X31 + 0x40]
	0x01EBCC10 LDP X26, X25, [X31 + 0x30]
	0x01EBCC14 LDR X30, [X31 + 0x20]
	0x01EBCC18 CSET W0, CC
	0x01EBCC1C ADD X31, X31, 0x70
	0x01EBCC20 RET
	0x01EBCC24 SUB X31, X31, 0x50
	0x01EBCC28 STP X30, X25, [X31 + 0x10]
	0x01EBCC2C STP X24, X23, [X31 + 0x20]
	0x01EBCC30 STP X22, X21, [X31 + 0x30]
	0x01EBCC34 STP X20, X19, [X31 + 0x40]
	0x01EBCC38 ADRP X25, 0x251D000
	0x01EBCC3C ADRP X24, 0x2243000
	0x01EBCC40 ADRP X22, 0x2237000
	0x01EBCC44 ADRP X23, 0x2243000
	0x01EBCC48 ADRP X20, 0x2243000
	0x01EBCC4C ADRP X21, 0x2237000
	0x01EBCC50 LDRB W8, [X25 + 0x435]
	0x01EBCC54 LDR X24, [X24 + 0x7A8]
	0x01EBCC58 LDR X22, [X22 + 0x838]
	0x01EBCC5C LDR X23, [X23 + 0x7B0]
	0x01EBCC60 LDR X20, [X20 + 0x7B8]
	0x01EBCC64 LDR X21, [X21 + 0x848]
	0x01EBCC68 MOV X19, X0
	0x01EBCC6C TBNZ X8, 0x0, 0x1EBCCB4
	0x01EBCC70 ADRP X0, 0x2243000
	0x01EBCC74 LDR X0, [X0 + 0x7A8]
	0x01EBCC78 BL 0x1C16CF4
	0x01EBCC7C ADRP X0, 0x2243000
	0x01EBCC80 LDR X0, [X0 + 0x7B0]
	0x01EBCC84 BL 0x1C16CF4
	0x01EBCC88 ADRP X0, 0x2243000
	0x01EBCC8C LDR X0, [X0 + 0x7B8]
	0x01EBCC90 BL 0x1C16CF4
	0x01EBCC94 ADRP X0, 0x2237000
	0x01EBCC98 LDR X0, [X0 + 0x838]
	0x01EBCC9C BL 0x1C16CF4
	0x01EBCCA0 ADRP X0, 0x2237000
	0x01EBCCA4 LDR X0, [X0 + 0x848]
	0x01EBCCA8 BL 0x1C16CF4
	0x01EBCCAC MOVZ W8, 0x1
	0x01EBCCB0 STRB W8, [X25 + 0x435]
	0x01EBCCB4 MOV X0, X19
	0x01EBCCB8 BL 0x1EBC690
	0x01EBCCBC LDR X8, [X24]
	0x01EBCCC0 STP X0, X1, [X31]
	0x01EBCCC4 ADD X1, X31, 0x0
	0x01EBCCC8 MOV X0, X8
	0x01EBCCCC BL 0x1C16E04
	0x01EBCCD0 LDR X8, [X22]
	0x01EBCCD4 LDR X2, [X23]
	0x01EBCCD8 MOV X1, X0
	0x01EBCCDC MOV X0, X8
	0x01EBCCE0 BL 0x226B868
	0x01EBCCE4 LDR X8, [X20]
	0x01EBCCE8 LDR X2, [X21]
	0x01EBCCEC MOV X1, X0
	0x01EBCCF0 MOV X3, X31
	0x01EBCCF4 MOV X0, X8
	0x01EBCCF8 BL 0x32274B8
	0x01EBCCFC LDP X20, X19, [X31 + 0x40]
	0x01EBCD00 LDP X22, X21, [X31 + 0x30]
	0x01EBCD04 LDP X24, X23, [X31 + 0x20]
	0x01EBCD08 LDP X30, X25, [X31 + 0x10]
	0x01EBCD0C ADD X31, X31, 0x50
	0x01EBCD10 RET
	0x01EBCD14 STR X30, [X31 - 0x10]!
	0x01EBCD18 MOVZ W2, 0x34
	0x01EBCD1C MOV X3, X31
	0x01EBCD20 BL 0x1E3577C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x251E000
	007 Move X22, 0x2244000
	008 Move W8, [X19+1063]
	009 Move X22, [X22+1792]
	010 Move X21, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {54}
	016 Move X0, 0x2244000
	017 Move X0, [X0+1800]
	018 Call 0x1C17CF4
	019 Move X0, 0x2244000
	020 Move X0, [X0+1808]
	021 Call 0x1C17CF4
	022 Move X0, 0x2244000
	023 Move X0, [X0+1816]
	024 Call 0x1C17CF4
	025 Move X0, 0x2244000
	026 Move X0, [X0+1696]
	027 Call 0x1C17CF4
	028 Move X0, 0x2240000
	029 Move X0, [X0+1464]
	030 Call 0x1C17CF4
	031 Move X0, 0x2244000
	032 Move X0, [X0+1704]
	033 Call 0x1C17CF4
	034 Move X0, 0x2244000
	035 Move X0, [X0+1712]
	036 Call 0x1C17CF4
	037 Move X0, 0x2239000
	038 Move X0, [X0+1976]
	039 Call 0x1C17CF4
	040 Move X0, 0x2244000
	041 Move X0, [X0+1824]
	042 Call 0x1C17CF4
	043 Move X0, 0x2244000
	044 Move X0, [X0+1832]
	045 Call 0x1C17CF4
	046 Move X0, 0x2244000
	047 Move X0, [X0+1840]
	048 Call 0x1C17CF4
	049 Move X0, 0x2244000
	050 Move X0, [X0+1792]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X19+1063], W8
	054 Move X0, [X22]
	055 Call 0x1C17F10
	056 Move X1, X31
	057 Move X19, X0
	058 Call Object..ctor, X0
	059 Compare X19, 0
	060 JumpIfEqual {196}
	061 Move [X19+16], X21
	062 Move V0, [X20]
	063 Move [X19+24], V0
	064 Move X20, [X20+8]
	065 Compare X20, 0
	066 JumpIfEqual {78}
	067 Move X8, 0x2244000
	068 Move X8, [X8+1696]
	069 Move X9, [X20]
	070 Move X8, [X8]
	071 Move W11, [X9+304]
	072 Move W10, [X8+304]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X9, [X9+200]
	075 Add X9, X9, X10
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X8, 0x2244000
	079 Move X8, [X8+1712]
	080 Move X0, X20
	081 Move X1, [X8]
	082 Call 0x1C17E00
	083 Compare X0, 0
	084 JumpIfEqual {113}
	085 Move X8, 0x2244000
	086 Move X8, [X8+1800]
	087 Move X21, X0
	088 Move X20, 0x2244000
	089 Move X22, 0x2244000
	090 Move X0, [X8]
	091 Move X20, [X20+1832]
	092 Move X22, [X22+1704]
	093 Call 0x1C17F10
	094 Move X2, [X20]
	095 Move X1, X19
	096 Move X3, X31
	097 Move X20, X0
	098 Call Action`1<Object>..ctor, X0, X1, X2
	099 Move X8, [X21]
	100 Move X1, [X22]
	101 NotImplemented "Instruction LDRH not yet implemented."
	102 Compare X9, 0
	103 JumpIfEqual {110}
	104 Move X10, [X8+176]
	105 Add X10, X10, 8
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Subtract X9, X9, 1
	109 Add X10, X10, 16
	110 Move W2, 1
	111 Move X0, X21
	112 Call 0x1C5D788
	113 Compare X20, 0
	114 JumpIfEqual {126}
	115 Move X8, 0x2239000
	116 Move X8, [X8+1976]
	117 Move X9, [X20]
	118 Move X8, [X8]
	119 Move W11, [X9+304]
	120 Move W10, [X8+304]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X9, [X9+200]
	123 Add X9, X9, X10
	124 NotImplemented "Instruction LDUR not yet implemented."
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X8, [X19+16]
	127 Compare X8, 0
	128 JumpIfEqual {196}
	129 Move X1, [X19+24]
	130 Move X2, [X19+32]
	131 Move X4, [X8+24]
	132 Move X0, [X8+64]
	133 Move X3, [X8+40]
	134 Move X20, [X31+32]
	135 Move X19, [X31+40]
	136 Move X22, [X31+16]
	137 Move X21, [X31+24]
	138 Move X30, [X31+48]
	139 CallNoReturn X4
	140 Move W9, [X10]
	141 Add W9, W9, 1
	142 Add X8, X8, W9
	143 Add X0, X8, 312
	144 Move X3, [X0]
	145 Move X2, [X0+8]
	146 Move X0, X21
	147 Move X1, X20
	148 Move X20, [X31+32]
	149 Move X19, [X31+40]
	150 Move X22, [X31+16]
	151 Move X21, [X31+24]
	152 Move X30, [X31+48]
	153 CallNoReturn X3
	154 Move X8, 0x2244000
	155 Move X8, [X8+1816]
	156 Move X0, [X8]
	157 Call 0x1C17F10
	158 Move X8, 0x2244000
	159 Move X8, [X8+1824]
	160 Move X1, X19
	161 Move X3, X31
	162 Move X21, X0
	163 Move X2, [X8]
	164 Call Action`1<Object>..ctor, X0, X1, X2
	165 Move X0, X20
	166 Move X1, X21
	167 Move X20, [X31+32]
	168 Move X19, [X31+40]
	169 Move X22, [X31+16]
	170 Move X21, [X31+24]
	171 Move X2, X31
	172 Move X30, [X31+48]
	173 Call AsyncOperation.add_completed, X0, X1
	174 Return 
	175 Move X8, 0x2244000
	176 Move X8, [X8+1808]
	177 Move X0, [X8]
	178 Call 0x1C17F10
	179 Move X8, 0x2244000
	180 Move X8, [X8+1840]
	181 Move X1, X19
	182 Move X3, X31
	183 Move X21, X0
	184 Move X2, [X8]
	185 Call Action`1<Object>..ctor, X0, X1, X2
	186 Move X0, X20
	187 Move X1, X21
	188 Move X20, [X31+32]
	189 Move X19, [X31+40]
	190 Move X22, [X31+16]
	191 Move X21, [X31+24]
	192 Move X2, X31
	193 Move X30, [X31+48]
	194 Call Task.ContinueWith, X0, X1
	195 Return 
	196 Call 0x1C17F20

Method: Fusion.NetworkSceneAsyncOp/Awaiter GetAwaiter()

Disassembly:
	0x01EBCD2C LDR X30, [X31], #0x10
	0x01EBCD30 RET
	0x01EBCD34 SUB X31, X31, 0x70

ISIL:
	001 Move X8, [X0]
	002 Move X1, [X0+8]
	003 Move X0, X8
	004 Return X0

Method: System.Boolean System.Collections.IEnumerator.MoveNext()

Disassembly:
	0x01EBCD44 MRS X21, 0xC000
	0x01EBCD48 LDR X8, [X21 + 0x28]
	0x01EBCD4C ADRP X22, 0x251D000
	0x01EBCD50 MOV X20, X1
	0x01EBCD54 MOV X19, X0
	0x01EBCD58 STR X8, [X31 + 0x38]

ISIL:
	001 Move [X31-16], X30
	002 Call NetworkSceneAsyncOp.get_IsDone, X0
	003 NotImplemented "Instruction ORN not yet implemented."
	004 And W0, W8, 1
	005 Move X30, [X31+16]
	006 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01EBCD5C LDRB W8, [X22 + 0x436]

ISIL:
	001 Return 

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01EBCD60 TBNZ X8, 0x0, 0x1EBCD78
	0x01EBCD64 ADRP X0, 0x2243000

ISIL:
	001 Move X0, X31
	002 Return X0

