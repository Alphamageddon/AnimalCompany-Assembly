Type: Fusion.TickRate/Resolved

Method: System.Void .ctor(System.Int32 client, System.Int32 clientSend, System.Int32 server, System.Int32 serverSend)

Disassembly:
	0x01E92840 MOV V8.16B, V0.16B
	0x01E92844 TBNZ X8, 0x0, 0x1E9285C
	0x01E92848 ADRP X0, 0x2261000

ISIL:
	001 Move [X0], W1
	002 Move [X0+4], W2
	003 Move [X0+8], W3
	004 Move [X0+12], W4
	005 Return 

Method: System.Double get_ServerTickDelta()

Disassembly:
	0x01E928A8 LDR V3, [X8 + 0x7C]
	0x01E928AC ADRP X8, 0xFFFFFFFFFEC5A000
	0x01E928B0 MOV V1.D[1], V2.D[0]
	0x01E928B4 LDR V2, [X8 + 0x7C]
	0x00000000 INVALID
	0x01E928BC FADD V1.2D, V1.2D, V3.2D
	0x00000000 INVALID
	0x01E928C4 FADD V1.2D, V1.2D, V2.2D

ISIL:
	001 Move W8, [X0+8]
	002 Compare W8, 0
	003 JumpIfEqual {8}
	004 NotImplemented "Instruction SCVTF not yet implemented."
	005 Move D1, 1
	006 NotImplemented "Instruction FDIV not yet implemented."
	007 Return V0
	008 Move D0, X31
	009 Return V0

Method: System.Double get_ServerSendDelta()

Disassembly:
	0x01E928C8 LDP X20, X19, [X31 + 0x10]
	0x01E928CC LDR X30, [X31 + 0x8]
	0x01E928D0 UNIMPLEMENTED
	0x00000000 INVALID
	0x01E928D8 FSUB D0, D0, D1
	0x01E928DC LDR V8, [X31], #0x20
	0x01E928E0 RET
	0x01E928E4 STR X30, [X31 - 0x60]!

ISIL:
	001 Move W8, [X0+12]
	002 Compare W8, 0
	003 JumpIfEqual {8}
	004 NotImplemented "Instruction SCVTF not yet implemented."
	005 Move D1, 1
	006 NotImplemented "Instruction FDIV not yet implemented."
	007 Return V0
	008 Move D0, X31
	009 Return V0

Method: System.Int32 get_ServerTickStride()

Disassembly:
	0x01E928E8 STP X28, X27, [X31 + 0x10]
	0x01E928EC STP X26, X25, [X31 + 0x20]
	0x01E928F0 STP X24, X23, [X31 + 0x30]
	0x01E928F4 STP X22, X21, [X31 + 0x40]

ISIL:
	001 Move W8, [X0]
	002 Move W9, [X0+8]
	003 NotImplemented "Instruction SDIV not yet implemented."
	004 Return X0

Method: System.Double get_ClientTickDelta()

Disassembly:
	0x01E928F8 STP X20, X19, [X31 + 0x50]
	0x01E928FC ADRP X22, 0x2547000
	0x01E92900 LDRB W8, [X22 + 0x28D]
	0x01E92904 MOV X19, X4
	0x01E92908 MOV X20, X3
	0x01E9290C MOV W21, W2
	0x01E92910 MOV X23, X1
	0x01E92914 MOV X24, X0

ISIL:
	001 Move W8, [X0]
	002 Compare W8, 0
	003 JumpIfEqual {8}
	004 NotImplemented "Instruction SCVTF not yet implemented."
	005 Move D1, 1
	006 NotImplemented "Instruction FDIV not yet implemented."
	007 Return V0
	008 Move D0, X31
	009 Return V0

Method: System.Double get_ClientSendDelta()

Disassembly:
	0x01E92918 TBNZ X8, 0x0, 0x1E92930
	0x01E9291C ADRP X0, 0x2261000
	0x01E92920 LDR X0, [X0 + 0x6C0]
	0x01E92924 BL 0x1C16CF4
	0x01E92928 MOVZ W8, 0x1
	0x01E9292C STRB W8, [X22 + 0x28D]
	0x01E92930 MOV X22, X24
	0x01E92934 ADRP X26, 0x2261000

ISIL:
	001 Move W8, [X0+4]
	002 Compare W8, 0
	003 JumpIfEqual {8}
	004 NotImplemented "Instruction SCVTF not yet implemented."
	005 Move D1, 1
	006 NotImplemented "Instruction FDIV not yet implemented."
	007 Return V0
	008 Move D0, X31
	009 Return V0

Method: System.Int32 get_ClientTickStride()

Disassembly:
	0x01E92938 LDR X8, [X22 + 0x8]!
	0x01E9293C LDR X26, [X26 + 0x6C0]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.String ToString()

Disassembly:
	0x01E92940 CBZ X8, 0x1E9294C
	0x01E92944 LDR W25, [X8 + 0x18]
	0x01E92948 B 0x1E92950
	0x01E9294C MOV W25, W31
	0x01E92950 LDR X0, [X26]
	0x01E92954 LDR X24, [X24]
	0x01E92958 LDR W8, [X0 + 0xE0]
	0x01E9295C CBNZ W8, 0x1E92964
	0x01E92960 BL 0x1C16DFC
	0x01E92964 MOV X0, X24
	0x01E92968 MOV X1, X23
	0x01E9296C MOV X2, X31
	0x01E92970 BL 0x3395194
	0x01E92974 TBZ X0, 0x0, 0x1E92990
	0x01E92978 CMP W21, 0x1
	0x01E9297C B.EQ 0x1E92A38
	0x01E92980 CBNZ W21, 0x1E92A98
	0x01E92984 MOV X0, X22
	0x01E92988 MOV W1, W31
	0x01E9298C B 0x1E92A60
	0x01E92990 CMP W25, 0x1
	0x01E92994 B.LT 0x1E92A44
	0x01E92998 MOV W8, W25
	0x01E9299C MOV X24, X31
	0x01E929A0 SUB X27, X8, 0x1
	0x01E929A4 MOVZ W28, 0x20
	0x01E929A8 LDR X8, [X22]
	0x01E929AC CBZ X8, 0x1E92A90
	0x01E929B0 LDR W9, [X8 + 0x18]
	0x01E929B4 CMP X24, X9
	0x01E929B8 B.CS 0x1E92A94
	0x01E929BC LDR X0, [X26]
	0x01E929C0 LDR X25, [X8, X28, LSL]
	0x01E929C4 LDR W9, [X0 + 0xE0]
	0x01E929C8 CBNZ W9, 0x1E929D0
	0x01E929CC BL 0x1C16DFC
	0x01E929D0 MOV X0, X25
	0x01E929D4 MOV X1, X23
	0x01E929D8 MOV X2, X31
	0x01E929DC BL 0x3395194
	0x01E929E0 TBZ X0, 0x0, 0x1E929F4
	0x01E929E4 CMP W21, 0x3
	0x01E929E8 B.EQ 0x1E92A4C
	0x01E929EC CMP W21, 0x2
	0x01E929F0 B.EQ 0x1E92A58
	0x01E929F4 LDR X8, [X22]
	0x01E929F8 CBZ X8, 0x1E92A90
	0x01E929FC LDR W9, [X8 + 0x18]
	0x01E92A00 CMP X24, X9
	0x01E92A04 B.CS 0x1E92A94
	0x01E92A08 ADD X0, X8, X28
	0x01E92A0C MOV X1, X23
	0x01E92A10 MOV W2, W21
	0x01E92A14 MOV X3, X20
	0x01E92A18 MOV X4, X19
	0x01E92A1C BL 0x1E928E4
	0x01E92A20 TBNZ X0, 0x0, 0x1E92A70
	0x01E92A24 CMP X27, X24
	0x01E92A28 ADD X24, X24, 0x1
	0x01E92A2C ADD X28, X28, 0x28
	0x01E92A30 B.NE 0x1E929A8
	0x01E92A34 B 0x1E92A70
	0x01E92A38 MOV X0, X22
	0x01E92A3C MOV W1, W25
	0x01E92A40 B 0x1E92A60
	0x01E92A44 MOV W0, W31
	0x01E92A48 B 0x1E92A70
	0x01E92A4C ADD W1, W24, 0x1
	0x01E92A50 MOV X0, X22
	0x01E92A54 B 0x1E92A60
	0x01E92A58 MOV X0, X22
	0x01E92A5C MOV W1, W24
	0x01E92A60 MOV X2, X20
	0x01E92A64 MOV X3, X19
	0x01E92A68 BL 0x1E92B08
	0x01E92A6C MOVZ W0, 0x1
	0x01E92A70 LDP X20, X19, [X31 + 0x50]
	0x01E92A74 LDP X22, X21, [X31 + 0x40]
	0x01E92A78 LDP X24, X23, [X31 + 0x30]
	0x01E92A7C LDP X26, X25, [X31 + 0x20]
	0x01E92A80 LDP X28, X27, [X31 + 0x10]
	0x01E92A84 AND W0, W0, 0x1
	0x01E92A88 LDR X30, [X31], #0x60
	0x01E92A8C RET
	0x01E92A90 BL 0x1C16F20
	0x01E92A94 BL 0x1C16F28
	0x01E92A98 STR W21, [X31 + 0xC]
	0x01E92A9C ADRP X0, 0x226C000
	0x01E92AA0 LDR X0, [X0 + 0x298]
	0x01E92AA4 BL 0x1C16D08
	0x01E92AA8 ADD X1, X31, 0xC
	0x01E92AAC BL 0x1C16E04
	0x01E92AB0 MOV X19, X0
	0x01E92AB4 ADRP X0, 0x226C000
	0x01E92AB8 LDR X0, [X0 + 0x2A0]
	0x01E92ABC BL 0x1C16D08
	0x01E92AC0 MOV X1, X19
	0x01E92AC4 MOV X2, X31
	0x01E92AC8 BL 0x321EFD0
	0x01E92ACC MOV X19, X0
	0x01E92AD0 ADRP X0, 0x2261000
	0x01E92AD4 LDR X0, [X0 + 0x5B0]
	0x01E92AD8 BL 0x1C16D08
	0x01E92ADC BL 0x1C16F10
	0x01E92AE0 MOV X1, X19
	0x01E92AE4 MOV X2, X31
	0x01E92AE8 MOV X20, X0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X19, 0x2548000
	008 Move X21, 0x2262000
	009 Move X22, 0x2262000
	010 Move W8, [X19+635]
	011 Move X21, [X21+2512]
	012 Move X22, [X22+1880]
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x2262000
	019 Move X0, [X0+1880]
	020 Call 0x1C17CF4
	021 Move X0, 0x2262000
	022 Move X0, [X0+2512]
	023 Call 0x1C17CF4
	024 Move X0, 0x226D000
	025 Move X0, [X0+568]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+635], W8
	029 Move X0, [X21]
	030 Move W1, 4
	031 Call 0x1C17D6C
	032 Move X19, X0
	033 Move W8, [X20]
	034 Move X0, [X22]
	035 Add X1, X31, 28
	036 Move [X31+28], W8
	037 Call 0x1C17E04
	038 Compare X19, 0
	039 JumpIfEqual {121}
	040 Move X21, X0
	041 Compare X0, 0
	042 JumpIfEqual {49}
	043 Move X8, [X19]
	044 Move X0, X21
	045 Move X1, [X8+64]
	046 Call 0x1C17E00
	047 Compare X0, 0
	048 JumpIfEqual {118}
	049 Move W8, [X19+24]
	050 Compare W8, 0
	051 JumpIfEqual {117}
	052 Move [X19+32], X21
	053 Move W8, [X20+4]
	054 Move X0, [X22]
	055 Add X1, X31, 24
	056 Move [X31+24], W8
	057 Call 0x1C17E04
	058 Move X21, X0
	059 Compare X0, 0
	060 JumpIfEqual {67}
	061 Move X8, [X19]
	062 Move X0, X21
	063 Move X1, [X8+64]
	064 Call 0x1C17E00
	065 Compare X0, 0
	066 JumpIfEqual {118}
	067 Move W8, [X19+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move [X19+40], X21
	070 Move W8, [X20+8]
	071 Move X0, [X22]
	072 Add X1, X31, 12
	073 Move [X31+12], W8
	074 Call 0x1C17E04
	075 Move X21, X0
	076 Compare X0, 0
	077 JumpIfEqual {84}
	078 Move X8, [X19]
	079 Move X0, X21
	080 Move X1, [X8+64]
	081 Call 0x1C17E00
	082 Compare X0, 0
	083 JumpIfEqual {118}
	084 Move W8, [X19+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move [X19+48], X21
	087 Move W8, [X20+12]
	088 Move X0, [X22]
	089 Add X1, X31, 8
	090 Move [X31+8], W8
	091 Call 0x1C17E04
	092 Move X20, X0
	093 Compare X0, 0
	094 JumpIfEqual {101}
	095 Move X8, [X19]
	096 Move X0, X20
	097 Move X1, [X8+64]
	098 Call 0x1C17E00
	099 Compare X0, 0
	100 JumpIfEqual {118}
	101 Move W8, [X19+24]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X8, 0x226D000
	104 Move X8, [X8+568]
	105 Move [X19+56], X20
	106 Move X1, X19
	107 Move X2, X31
	108 Move X0, [X8]
	109 Call String.Format, X0, X1
	110 Move X20, [X31+48]
	111 Move X19, [X31+56]
	112 Move X22, [X31+32]
	113 Move X21, [X31+40]
	114 Move X30, [X31+16]
	115 Add X31, X31, 64
	116 Return X0
	117 Call 0x1C17F28
	118 Call 0x1C17F44
	119 Move X1, X31
	120 Call 0x1C17DEC
	121 Call 0x1C17F20

Method: System.Double Inverse(System.Int32 rate)

Disassembly:
	0x01E92AEC BL 0x337DF1C
	0x01E92AF0 ADRP X0, 0x226C000
	0x01E92AF4 LDR X0, [X0 + 0x2A8]
	0x01E92AF8 BL 0x1C16D08
	0x01E92AFC MOV X1, X0
	0x01E92B00 MOV X0, X20
	0x01E92B04 BL 0x1C16DEC

ISIL:
	001 Compare W0, 0
	002 JumpIfEqual {7}
	003 NotImplemented "Instruction SCVTF not yet implemented."
	004 Move D1, 1
	005 NotImplemented "Instruction FDIV not yet implemented."
	006 Return V0
	007 Move D0, X31
	008 Return V0

