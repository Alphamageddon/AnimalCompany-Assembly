Type: Fusion.TickAccumulator

Method: System.Int32 get_Pending()

Disassembly:
	0x01E91408 BL 0x1C16CF4
	0x01E9140C MOVZ W8, 0x1

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Double get_Remainder()

Disassembly:
	0x01E91410 STRB W8, [X20 + 0x274]
	0x01E91414 LDR X0, [X19]

ISIL:
	001 Move V0, [X0]
	002 Return V0

Method: System.Boolean get_Running()

Disassembly:
	0x01E91418 LDR W8, [X0 + 0xE0]
	0x01E9141C CBNZ W8, 0x1E91428

ISIL:
	001 Move W0, [X0+20]
	002 Return X0

Method: System.Double get_TimeScale()

Disassembly:
	0x01E91420 BL 0x1C16DFC
	0x01E91424 LDR X0, [X19]

ISIL:
	001 Move V0, [X0+8]
	002 Return V0

Method: System.Void set_TimeScale(System.Double value)

Disassembly:
	0x01E91428 LDR X8, [X0 + 0xB8]
	0x01E9142C LDR X9, [X8]

ISIL:
	001 Move [X0+8], D0
	002 Return 

Method: System.Single Alpha(System.Double step)

Disassembly:
	0x01E91430 CBZ X9, 0x1E914B8
	0x01E91434 LDR W10, [X0 + 0xE0]
	0x01E91438 CBNZ W10, 0x1E91450
	0x01E9143C BL 0x1C16DFC
	0x01E91440 LDR X0, [X19]
	0x01E91444 LDR X8, [X0 + 0xB8]
	0x01E91448 LDR X9, [X8]
	0x01E9144C CBZ X9, 0x1E914D0
	0x01E91450 LDR X9, [X9 + 0x18]
	0x01E91454 CBZ X9, 0x1E914B8
	0x01E91458 LDR W9, [X0 + 0xE0]
	0x01E9145C CBNZ W9, 0x1E9146C
	0x01E91460 BL 0x1C16DFC
	0x01E91464 LDR X0, [X19]
	0x01E91468 LDR X8, [X0 + 0xB8]
	0x01E9146C LDR X9, [X8 + 0x10]
	0x01E91470 CBZ X9, 0x1E914B8
	0x01E91474 LDR W9, [X0 + 0xE0]
	0x01E91478 CBNZ W9, 0x1E91488
	0x01E9147C BL 0x1C16DFC
	0x01E91480 LDR X8, [X19]
	0x01E91484 LDR X8, [X8 + 0xB8]
	0x01E91488 LDR X0, [X8 + 0x10]
	0x01E9148C CBZ X0, 0x1E914D0
	0x01E91490 ADRP X8, 0x226D000
	0x01E91494 LDR X8, [X8 + 0x1F8]
	0x01E91498 LDR X1, [X8]
	0x01E9149C BL 0x2A1C540
	0x01E914A0 CMP W0, 0x0

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2549000
	007 Move X20, 0x226A000
	008 Move W8, [X21+620]
	009 Move X20, [X20+3176]
	010 Move V8, V0
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x226A000
	017 Move X0, [X0+3176]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+620], W8
	021 Move X0, [X20]
	022 Move W19, [X19+16]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 NotImplemented "Instruction SCVTF not yet implemented."
	028 NotImplemented "Instruction FDIV not yet implemented."
	029 Move X0, X31
	030 Call Maths.Clamp01, V0
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X30, [X31+16]
	034 Move X21, [X31+24]
	035 NotImplemented "Instruction INVALID not yet implemented."
	036 Move V8, [X31+48]
	037 Return V0

Method: System.Void AddTicks(System.Int32 ticks)

Disassembly:
	0x01E914A4 B.LE 0x1E914B4
	0x01E914A8 LDP X20, X19, [X31 + 0x10]
	0x01E914AC LDR X30, [X31], #0x20
	0x01E914B0 RET

ISIL:
	001 Move W8, [X0+16]
	002 Add W8, W8, W1
	003 Move [X0+16], W8
	004 Return 

Method: System.Void AddTime(System.Double dt, System.Double step, System.Nullable`1<System.Int32> maxTicks = null)

Disassembly:
	0x01E914B4 LDR X0, [X19]
	0x01E914B8 LDR W8, [X0 + 0xE0]
	0x01E914BC CBNZ W8, 0x1E914C4
	0x01E914C0 BL 0x1C16DFC
	0x01E914C4 LDP X20, X19, [X31 + 0x10]
	0x01E914C8 LDR X30, [X31], #0x20
	0x01E914CC B 0x1E90AD8
	0x01E914D0 BL 0x1C16F20
	0x01E914D4 STP X30, X21, [X31 - 0x20]!
	0x01E914D8 STP X20, X19, [X31 + 0x10]
	0x01E914DC ADRP X20, 0x2548000
	0x01E914E0 ADRP X21, 0x226D000
	0x01E914E4 LDRB W8, [X20 + 0x276]
	0x01E914E8 LDR X21, [X21 + 0x168]
	0x01E914EC MOV X19, X0
	0x01E914F0 TBNZ X8, 0x0, 0x1E91508
	0x01E914F4 ADRP X0, 0x226D000
	0x01E914F8 LDR X0, [X0 + 0x168]
	0x01E914FC BL 0x1C16CF4
	0x01E91500 MOVZ W8, 0x1
	0x01E91504 STRB W8, [X20 + 0x276]
	0x01E91508 LDR X0, [X21]
	0x01E9150C LDR W8, [X0 + 0xE0]
	0x01E91510 CBNZ W8, 0x1E91518
	0x01E91514 BL 0x1C16DFC
	0x01E91518 LDR W0, [X19 + 0x4]
	0x01E9151C LDP X20, X19, [X31 + 0x10]
	0x01E91520 LDP X30, X21, [X31], #0x20
	0x01E91524 B 0x1E91528
	0x01E91528 STP X30, X21, [X31 - 0x20]!
	0x01E9152C STP X20, X19, [X31 + 0x10]
	0x01E91530 ADRP X21, 0x2548000
	0x01E91534 ADRP X20, 0x226D000
	0x01E91538 LDRB W8, [X21 + 0x277]
	0x01E9153C LDR X20, [X20 + 0x168]
	0x01E91540 MOV W19, W0
	0x01E91544 TBNZ X8, 0x0, 0x1E91568
	0x01E91548 ADRP X0, 0x226D000
	0x01E9154C LDR X0, [X0 + 0x200]
	0x01E91550 BL 0x1C16CF4
	0x01E91554 ADRP X0, 0x226D000
	0x01E91558 LDR X0, [X0 + 0x168]
	0x01E9155C BL 0x1C16CF4
	0x01E91560 MOVZ W8, 0x1
	0x01E91564 STRB W8, [X21 + 0x277]
	0x01E91568 LDR X0, [X20]
	0x01E9156C LDR W8, [X0 + 0xE0]
	0x01E91570 CBNZ W8, 0x1E91578
	0x01E91574 BL 0x1C16DFC
	0x01E91578 BL 0x1E913D8
	0x01E9157C LDR X8, [X20]
	0x01E91580 LDR X8, [X8 + 0xB8]
	0x01E91584 LDR X0, [X8 + 0x10]
	0x01E91588 CBZ X0, 0x1E915A8
	0x01E9158C ADRP X8, 0x226D000
	0x01E91590 LDR X8, [X8 + 0x200]

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X1
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x2549000
	010 Move W8, [X21+621]
	011 Move X20, X1
	012 Move V8, V1
	013 Move V9, V0
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x2266000
	020 Move X0, [X0+3832]
	021 Call 0x1C17CF4
	022 Move X0, 0x2266000
	023 Move X0, [X0+3840]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+621], W8
	027 Move W8, [X19+20]
	028 Compare W8, 0
	029 JumpIfEqual {56}
	030 Move D1, [X19]
	031 Move D0, [X19+8]
	032 Multiply D0, D0, D9
	033 Add D0, D1, D0
	034 NotImplemented "Instruction FCMP not yet implemented."
	035 Move [X19], D0
	036 Move X21, 0x2266000
	037 Move X21, [X21+3840]
	038 Move W8, [X19+16]
	039 Subtract D0, D0, D8
	040 And W31, W20, 255
	041 Move [X19], D0
	042 Add W22, W8, 1
	043 Move [X19+16], W22
	044 Move X1, [X21]
	045 Add X0, X31, 24
	046 Call Nullable`1<Int32>.get_Value, X0
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move V0, [X19]
	049 NotImplemented "Instruction FCMP not yet implemented."
	050 Move W20, [X31+24]
	051 Move [X19], X31
	052 Move X1, [X21]
	053 Add X0, X31, 24
	054 Call Nullable`1<Int32>.get_Value, X0
	055 Move [X19+16], W0
	056 Move X20, [X31+48]
	057 Move X19, [X31+56]
	058 Move X22, [X31+32]
	059 Move X21, [X31+40]
	060 Move X30, [X31+16]
	061 Move D9, [X31+64]
	062 Move D8, [X31+72]
	063 Return 

Method: System.Void Stop()

Disassembly:
	0x01E91594 MOV W1, W19
	0x01E91598 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X0+20], W31
	002 Return 

Method: System.Void Start()

Disassembly:
	0x01E9159C LDR X2, [X8]
	0x01E915A0 LDP X30, X21, [X31], #0x20
	0x01E915A4 B 0x2A1CB48

ISIL:
	001 Move W8, 1
	002 Move [X0+20], W8
	003 Return 

Method: System.Boolean ConsumeTick(out System.Boolean last)

Disassembly:
	0x01E915A8 BL 0x1C16F20
	0x01E915AC SUB X31, X31, 0x50
	0x01E915B0 STP X30, X23, [X31 + 0x20]
	0x01E915B4 STP X22, X21, [X31 + 0x30]
	0x01E915B8 STP X20, X19, [X31 + 0x40]
	0x01E915BC MRS X21, 0xC000
	0x01E915C0 MOV X19, X8
	0x01E915C4 LDR X8, [X21 + 0x28]
	0x01E915C8 ADRP X23, 0x2548000
	0x01E915CC ADRP X22, 0x226D000
	0x01E915D0 MOV W20, W0
	0x01E915D4 STR X8, [X31 + 0x18]

ISIL:
	001 Move W8, [X0+16]
	002 Subtract W9, W8, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move [X0+16], W9
	005 NotImplemented "Instruction CSET not yet implemented."
	006 Move W9, W31
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Move [X1], W9
	010 Return X0

Method: Fusion.TickAccumulator StartNew()

Disassembly:
	0x01E915D8 LDRB W8, [X23 + 0x278]
	0x01E915DC LDR X22, [X22 + 0x168]
	0x01E915E0 TBNZ X8, 0x0, 0x1E91604
	0x01E915E4 ADRP X0, 0x226D000
	0x01E915E8 LDR X0, [X0 + 0x208]
	0x01E915EC BL 0x1C16CF4
	0x01E915F0 ADRP X0, 0x226D000
	0x01E915F4 LDR X0, [X0 + 0x168]
	0x01E915F8 BL 0x1C16CF4

ISIL:
	001 Move X9, -20594688
	002 Move V0, [X9+82]
	003 Move W9, 1
	004 Move [X8+16], W31
	005 NotImplemented "Instruction STURH not yet implemented."
	006 Move [X8+20], W9
	007 Move [X8], V0
	008 Move [X8+23], W31
	009 Return X0

