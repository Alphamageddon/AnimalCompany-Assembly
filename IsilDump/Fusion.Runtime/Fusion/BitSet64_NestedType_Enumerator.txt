Type: Fusion.BitSet64/Enumerator

Method: System.Void .ctor(System.UInt64* bits)

Disassembly:
	0x01E882BC CMP W1, 0x0
	0x01E882C0 CSEL W8, W8, W1, LT
	0x01E882C4 SBFM W8, W8, 0x6, 0x1F
	0x01E882C8 LDR X8, [X0, W8, SXTW]

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0], X1
	005 Move [X0+8], W8
	006 Return 

Method: System.Int32 get_Current()

Disassembly:
	0x01E88498 BL 0x1C16CF4
	0x01E8849C MOVZ W8, 0x1

ISIL:
	001 Move W0, [X0+8]
	002 Return X0

Method: System.Void Reset()

Disassembly:
	0x01E884A0 STRB W8, [X22 + 0x21F]
	0x01E884A4 CBZ X20, 0x1E8850C
	0x01E884A8 ADRP X8, 0x2275000

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0+8], W8
	005 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01E884AC LDR X8, [X8 + 0xF38]
	0x01E884B0 LDR X9, [X20]
	0x01E884B4 LDR X8, [X8]
	0x01E884B8 CMP X9, X8
	0x01E884BC B.NE 0x1E8850C
	0x01E884C0 MOV X0, X20
	0x01E884C4 BL 0x1C16E08
	0x01E884C8 LDR X8, [X0 + 0x10]
	0x01E884CC LDR V0, [X0]
	0x01E884D0 STR X8, [X31 + 0x10]
	0x01E884D4 STR V0, [X31]
	0x01E884D8 LDR X8, [X19]
	0x01E884DC LDR X9, [X31]
	0x01E884E0 CMP X8, X9
	0x01E884E4 B.NE 0x1E8850C
	0x01E884E8 LDR X8, [X19 + 0x8]
	0x01E884EC LDR X9, [X31 + 0x8]
	0x01E884F0 CMP X8, X9
	0x01E884F4 B.NE 0x1E8850C
	0x01E884F8 LDR X8, [X19 + 0x10]
	0x01E884FC LDR X9, [X31 + 0x10]
	0x01E88500 CMP X8, X9
	0x01E88504 CSET W0, EQ
	0x01E88508 B 0x1E88510
	0x01E8850C MOV W0, W31
	0x01E88510 LDR X8, [X21 + 0x28]
	0x01E88514 LDR X9, [X31 + 0x18]
	0x01E88518 CMP X8, X9
	0x01E8851C B.NE 0x1E88534
	0x01E88520 LDP X20, X19, [X31 + 0x40]
	0x01E88524 LDP X22, X21, [X31 + 0x30]
	0x01E88528 LDR X30, [X31 + 0x20]
	0x01E8852C ADD X31, X31, 0x50
	0x01E88530 RET
	0x01E88534 BL 0x3EB1B20
	0x01E88538 LDR X8, [X0]
	0x01E8853C LDR X9, [X1]
	0x01E88540 CMP X8, X9
	0x01E88544 B.NE 0x1E8856C
	0x01E88548 LDR X8, [X0 + 0x8]
	0x01E8854C LDR X9, [X1 + 0x8]
	0x01E88550 CMP X8, X9
	0x01E88554 B.NE 0x1E8856C
	0x01E88558 LDR X8, [X0 + 0x10]
	0x01E8855C LDR X9, [X1 + 0x10]
	0x01E88560 CMP X8, X9
	0x01E88564 CSET W0, EQ
	0x01E88568 RET
	0x01E8856C MOV W0, W31
	0x01E88570 RET
	0x01E88574 MOVN W1, 0x0
	0x01E88578 RET
	0x01E8857C MOVN W8, 0x0
	0x01E88580 STR X1, [X0]
	0x01E88584 STR W8, [X0 + 0x8]
	0x01E88588 RET
	0x01E8858C SUB X31, X31, 0x30
	0x01E88590 STP X30, X21, [X31 + 0x10]
	0x01E88594 STP X20, X19, [X31 + 0x20]
	0x01E88598 ADRP X21, 0x2551000

ISIL:
	001 Subtract X31, X31, 16
	002 Move [X31+8], X31
	003 Move W8, [X0+8]
	004 Add W8, W8, 1
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move [X0+8], W8
	007 Move X9, [X0]
	008 Move W10, 1
	009 Add X11, X31, 8
	010 Add W12, W8, 63
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CSEL not yet implemented."
	013 NotImplemented "Instruction SBFM not yet implemented."
	014 Move X14, [X9]
	015 And W12, W12, 0xFFFFFFC0
	016 Subtract W15, W8, W12
	017 NotImplemented "Instruction LSLV not yet implemented."
	018 And X12, X14, X12
	019 Move [X31+8], X14
	020 Compare X14, 0
	021 JumpIfEqual {50}
	022 NotImplemented "Instruction SXTB not yet implemented."
	023 Move W17, W16
	024 ShiftRight W17, 10
	025 And W17, W17, 0x3FFF
	026 Add W17, W15, W17
	027 NotImplemented "Instruction SBFM not yet implemented."
	028 Move W17, [X11]
	029 Compare W17, 0
	030 JumpIfEqual {51}
	031 Move W16, W16
	032 ShiftRight W16, 11
	033 And W16, W16, 0x3FFF
	034 Add W15, W15, W16
	035 NotImplemented "Instruction SBFM not yet implemented."
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Compare W15, 0
	038 JumpIfEqual {52}
	039 Move W15, W8
	040 Add W8, W8, 1
	041 Add W16, W15, 64
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CSINC not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction LSRV not yet implemented."
	046 Move TEMP, X15
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {39}
	050 Add W8, W8, 64
	051 Add W8, W8, 32
	052 Add W8, W8, 16
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move [X0+8], W8
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CSET not yet implemented."
	057 Move W0, W31
	058 Move [X0+8], W8
	059 Move W0, 1
	060 Add X31, X31, 16
	061 Return X0

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01E8859C ADRP X20, 0x2275000
	0x01E885A0 LDRB W8, [X21 + 0x220]
	0x01E885A4 LDR X20, [X20 + 0xF40]
	0x01E885A8 MOV X19, X0
	0x01E885AC TBNZ X8, 0x0, 0x1E885C4
	0x01E885B0 ADRP X0, 0x2275000
	0x01E885B4 LDR X0, [X0 + 0xF40]
	0x01E885B8 BL 0x1C16CF4
	0x01E885BC MOVZ W8, 0x1
	0x01E885C0 STRB W8, [X21 + 0x220]
	0x01E885C4 LDR X0, [X20]
	0x01E885C8 MOVN W8, 0x0
	0x01E885CC ADD X1, X31, 0x0
	0x01E885D0 STP X19, X8, [X31]
	0x01E885D4 BL 0x1C16E04
	0x01E885D8 LDP X20, X19, [X31 + 0x20]
	0x01E885DC LDP X30, X21, [X31 + 0x10]
	0x01E885E0 ADD X31, X31, 0x30
	0x01E885E4 RET
	0x01E885E8 SUB X31, X31, 0x30
	0x01E885EC STP X30, X21, [X31 + 0x10]
	0x01E885F0 STP X20, X19, [X31 + 0x20]
	0x01E885F4 ADRP X21, 0x2551000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2552000
	007 Move X20, 0x226C000
	008 Move W8, [X21+534]
	009 Move X20, [X20+1880]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x226C000
	016 Move X0, [X0+1880]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+534], W8
	020 Move W8, [X19+8]
	021 Move X0, [X20]
	022 Add X1, X31, 12
	023 Move [X31+12], W8
	024 Call 0x1C17E04
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X30, [X31+16]
	028 Move X21, [X31+24]
	029 Add X31, X31, 48
	030 Return X0

Method: System.Void Dispose()

Disassembly:
	0x01E885F8 ADRP X20, 0x2275000
	0x01E885FC LDRB W8, [X21 + 0x221]
	0x01E88600 LDR X20, [X20 + 0xF40]
	0x01E88604 MOV X19, X0

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0], X31
	005 Move [X0+8], W8
	006 Return 

