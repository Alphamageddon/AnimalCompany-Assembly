Type: Fusion.NetworkInputUtils/<>c

Method: System.Void .cctor()

Disassembly:
	0x01EDEEB0 B 0x1EDEEB4
	0x01EDEEB4 CMP W1, 0x1
	0x01EDEEB8 B.NE 0x1EDEEE0
	0x01EDEEBC BL 0x3EB1AD0
	0x01EDEEC0 LDR X20, [X0]
	0x01EDEEC4 BL 0x3EB1AE0
	0x01EDEEC8 LDR X1, [X22]
	0x01EDEECC ADD X0, X31, 0x20
	0x01EDEED0 BL 0x2BBDA68
	0x01EDEED4 CBZ X20, 0x1EDEE70
	0x01EDEED8 MOV X0, X20
	0x01EDEEDC BL 0x1C16F18
	0x01EDEEE0 MOV X19, X0
	0x01EDEEE4 MOV X20, X31
	0x01EDEEE8 B 0x1EDEEF0
	0x01EDEEEC MOV X19, X0
	0x01EDEEF0 LDR X1, [X22]
	0x01EDEEF4 ADD X0, X31, 0x20
	0x01EDEEF8 BL 0x2BBDA68
	0x01EDEEFC CBNZ X20, 0x1EDEF08
	0x01EDEF00 MOV X0, X19
	0x01EDEF04 BL 0x1D2C690
	0x01EDEF08 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x24FC000
	005 Move X20, 0x2223000
	006 Move W8, [X19+1385]
	007 Move X20, [X20+656]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2223000
	013 Move X0, [X0+656]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1385], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x01EDEF0C BL 0x1C16F18
	0x01EDEF10 BL 0x1990590

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Int32 <LoadTypes>b__3_0(System.ValueTuple`2<System.Type, Fusion.NetworkInputWeavedAttribute> a, System.ValueTuple`2<System.Type, Fusion.NetworkInputWeavedAttribute> b)

Disassembly:
	0x01EDEF14 SUB X31, X31, 0x60
	0x01EDEF18 STP X30, X21, [X31 + 0x40]
	0x01EDEF1C STP X20, X19, [X31 + 0x50]
	0x01EDEF20 ADRP X21, 0x24FB000
	0x01EDEF24 LDRB W8, [X21 + 0x572]
	0x01EDEF28 MOV X19, X1
	0x01EDEF2C MOV X20, X0
	0x01EDEF30 TBNZ X8, 0x0, 0x1EDEF48
	0x01EDEF34 ADRP X0, 0x2222000
	0x01EDEF38 LDR X0, [X0 + 0x350]
	0x01EDEF3C BL 0x1C16CF4
	0x01EDEF40 MOVZ W8, 0x1
	0x01EDEF44 STRB W8, [X21 + 0x572]
	0x01EDEF48 CBZ X19, 0x1EDEFE8
	0x01EDEF4C ADRP X21, 0x2222000
	0x01EDEF50 LDR X21, [X21 + 0x350]
	0x01EDEF54 ADD X8, X31, 0x8
	0x01EDEF58 MOV X0, X19
	0x01EDEF5C MOV X1, X31
	0x01EDEF60 BL 0x1E854F4
	0x01EDEF64 LDUR V0, [X31 + 0x8]
	0x01EDEF68 LDR X8, [X31 + 0x18]
	0x01EDEF6C LDR X0, [X21]
	0x01EDEF70 STR V0, [X31 + 0x2]
	0x01EDEF74 STR X8, [X31 + 0x30]
	0x01EDEF78 LDR W8, [X0 + 0xE0]
	0x01EDEF7C CBNZ W8, 0x1EDEF84
	0x01EDEF80 BL 0x1C16DFC
	0x01EDEF84 LDR X8, [X20 + 0x10]
	0x01EDEF88 CBZ X8, 0x1EDEFE8
	0x01EDEF8C LDR W9, [X20 + 0x38]
	0x01EDEF90 LDR W1, [X8 + 0x18]
	0x01EDEF94 CMP W9, W1
	0x01EDEF98 B.LT 0x1EDEFA4
	0x01EDEF9C MOV X0, X20
	0x01EDEFA0 BL 0x1EDE7C8
	0x01EDEFA4 MOV X0, X20
	0x01EDEFA8 BL 0x1EDE6B0
	0x01EDEFAC LDR X8, [X21]
	0x01EDEFB0 MOV X21, X0
	0x01EDEFB4 LDR W9, [X8 + 0xE0]
	0x01EDEFB8 CBNZ W9, 0x1EDEFC4
	0x01EDEFBC MOV X0, X8
	0x01EDEFC0 BL 0x1C16DFC
	0x01EDEFC4 ADD X3, X31, 0x20
	0x01EDEFC8 MOV X0, X20
	0x01EDEFCC MOV X1, X21
	0x01EDEFD0 MOV X2, X19
	0x01EDEFD4 BL 0x1EDF030
	0x01EDEFD8 LDP X20, X19, [X31 + 0x50]
	0x01EDEFDC LDP X30, X21, [X31 + 0x40]
	0x01EDEFE0 ADD X31, X31, 0x60
	0x01EDEFE4 RET
	0x01EDEFE8 BL 0x1C16F20
	0x01EDEFEC LDR V0, [X0]
	0x01EDEFF0 LDR V1, [X0 + 0x8]
	0x01EDEFF4 LDUR V2, [X0 + 0xC]
	0x01EDEFF8 LDR V3, [X0 + 0x14]
	0x01EDEFFC FADD V4.2S, V0.2S, V2.2S
	0x01EDF000 FADD S5, S1, S3
	0x01EDF004 FSUB V0.2S, V0.2S, V2.2S
	0x01EDF008 FSUB S1, S1, S3
	0x01EDF00C FSUB V0.2S, V4.2S, V0.2S
	0x01EDF010 FSUB S1, S5, S1
	0x00000000 INVALID
	0x00000000 INVALID
	0x01EDF01C FADD V1.2S, V2.2S, V0.2S
	0x01EDF020 UNIMPLEMENTED
	0x01EDF024 FADD V0.2S, V0.2S, V1.2S
	0x01EDF028 FADD S0, S0, S0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x24FC000
	007 Move X21, 0x2223000
	008 Move W8, [X22+1386]
	009 Move X21, [X21+752]
	010 Move X19, X3
	011 Move X20, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x2223000
	017 Move X0, [X0+752]
	018 Call 0x1C17CF4
	019 Move X0, 0x2223000
	020 Move X0, [X0+760]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1386], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X22, 0x24FC000
	030 Move W8, [X22+1443]
	031 Compare W8, 0
	032 JumpIfNotEqual {38}
	033 Move X0, 0x2223000
	034 Move X0, [X0+752]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X22+1443], W8
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X21]
	044 Compare X20, 0
	045 JumpIfEqual {85}
	046 Move X8, [X0+184]
	047 Move X9, [X20]
	048 Move X0, X20
	049 Move X21, [X8+16]
	050 Move X8, [X9+728]
	051 Move X1, [X9+736]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Compare X19, 0
	054 JumpIfEqual {85}
	055 Move X8, [X19]
	056 Move X20, X0
	057 Move X0, X19
	058 Move X9, [X8+728]
	059 Move X1, [X8+736]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Compare X21, 0
	062 JumpIfEqual {85}
	063 Move X8, [X21]
	064 Move X2, X0
	065 Move X0, X21
	066 Move X1, X20
	067 Move X9, [X8+472]
	068 Move X3, [X8+480]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move W19, W0
	071 Compare W0, 0
	072 JumpIfNotEqual {78}
	073 Move X8, 0x2222000
	074 Move X8, [X8+760]
	075 Move X1, X31
	076 Move X0, [X8]
	077 Call Assert.AlwaysFail, X0
	078 Move W0, W19
	079 Move X20, [X31+32]
	080 Move X19, [X31+40]
	081 Move X22, [X31+16]
	082 Move X21, [X31+24]
	083 Move X30, [X31+48]
	084 Return X0
	085 Call 0x1C17F20

