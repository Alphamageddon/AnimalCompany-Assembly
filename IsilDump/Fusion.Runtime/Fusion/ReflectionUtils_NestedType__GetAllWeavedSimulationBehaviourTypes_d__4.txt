Type: Fusion.ReflectionUtils/<GetAllWeavedSimulationBehaviourTypes>d__4

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01E8F3C0 LDR X0, [X0 + 0xE0]
	0x01E8F3C4 BL 0x1C16CF4
	0x01E8F3C8 ADRP X0, 0x2264000
	0x01E8F3CC LDR X0, [X0 + 0xE18]
	0x01E8F3D0 BL 0x1C16CF4
	0x01E8F3D4 ADRP X0, 0x226E000
	0x01E8F3D8 LDR X0, [X0 + 0x948]
	0x01E8F3DC BL 0x1C16CF4
	0x01E8F3E0 ADRP X0, 0x2264000
	0x01E8F3E4 LDR X0, [X0 + 0x6C0]
	0x01E8F3E8 BL 0x1C16CF4
	0x01E8F3EC MOVZ W8, 0x1
	0x01E8F3F0 STRB W8, [X20 + 0x262]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+32], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01E90378 RET
	0x01E9037C CMP W0, W1
	0x01E90380 CSET W0, LT
	0x01E90384 RET
	0x01E90388 CMP W0, W1
	0x01E9038C CSET W0, LE
	0x01E90390 RET

ISIL:
	001 Move W8, [X0+16]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Add W31, W8, 3
	004 Call <GetAllWeavedSimulationBehaviourTypes>d__4.<>m__Finally1, X0
	005 Return 
	006 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01E90394 CMP W0, W1
	0x01E90398 CSET W0, EQ
	0x01E9039C RET
	0x01E903A0 CMP W0, W1
	0x01E903A4 CSET W0, NE
	0x01E903A8 RET
	0x01E903AC BIC W0, W0, W0, 0x1F
	0x01E903B0 RET
	0x01E903B4 RET
	0x01E903B8 CMP W0, 0x0
	0x01E903BC CSET W0, GT
	0x01E903C0 RET
	0x01E903C4 STR X30, [X31 - 0x10]!
	0x01E903C8 STR W1, [X31 + 0x8]
	0x01E903CC ADD X0, X31, 0x8
	0x01E903D0 MOV W1, W2
	0x01E903D4 MOV X2, X31
	0x01E903D8 BL 0x337B634
	0x01E903DC LDR X30, [X31], #0x10
	0x01E903E0 RET
	0x01E903E4 MOV X1, X31
	0x01E903E8 B 0x33BDD8C
	0x01E903EC CMP W1, W2
	0x01E903F0 CSET W0, EQ
	0x01E903F4 RET
	0x01E903F8 MOV X0, X1
	0x01E903FC RET
	0x01E90400 MOV X1, X31
	0x01E90404 B 0x33BDD8C
	0x01E90408 LDR W0, [X0 + 0x10]
	0x01E9040C RET
	0x01E90410 LDR V0, [X0]
	0x01E90414 RET
	0x01E90418 LDRB W0, [X0 + 0x14]
	0x01E9041C RET
	0x01E90420 LDR V0, [X0 + 0x8]
	0x01E90424 RET
	0x01E90428 STR D0, [X0 + 0x8]
	0x01E9042C RET
	0x01E90430 STR D8, [X31 - 0x30]!
	0x01E90434 STP X30, X21, [X31 + 0x10]
	0x01E90438 STP X20, X19, [X31 + 0x20]
	0x01E9043C ADRP X21, 0x2549000
	0x01E90440 ADRP X20, 0x226A000
	0x01E90444 LDRB W8, [X21 + 0x26C]
	0x01E90448 LDR X20, [X20 + 0xC68]
	0x01E9044C MOV V8.16B, V0.16B
	0x01E90450 MOV X19, X0
	0x01E90454 TBNZ X8, 0x0, 0x1E9046C
	0x01E90458 ADRP X0, 0x226A000
	0x01E9045C LDR X0, [X0 + 0xC68]
	0x01E90460 BL 0x1C16CF4
	0x01E90464 MOVZ W8, 0x1
	0x01E90468 STRB W8, [X21 + 0x26C]
	0x01E9046C LDR X0, [X20]
	0x01E90470 LDR W19, [X19 + 0x10]
	0x01E90474 LDR W8, [X0 + 0xE0]
	0x01E90478 CBNZ W8, 0x1E90480
	0x01E9047C BL 0x1C16DFC
	0x01E90480 SCVTF D0, W19
	0x01E90484 FDIV D0, D0, D8
	0x01E90488 MOV X0, X31
	0x01E9048C BL 0x1E351AC
	0x01E90490 LDP X20, X19, [X31 + 0x20]
	0x01E90494 LDP X30, X21, [X31 + 0x10]
	0x00000000 INVALID
	0x01E9049C LDR V8, [X31], #0x30
	0x01E904A0 RET
	0x01E904A4 LDR W8, [X0 + 0x10]
	0x01E904A8 ADD W8, W8, W1
	0x01E904AC STR W8, [X0 + 0x10]
	0x01E904B0 RET
	0x01E904B4 STP D9, D8, [X31 - 0x40]!
	0x01E904B8 STP X30, X1, [X31 + 0x10]
	0x01E904BC STP X22, X21, [X31 + 0x20]
	0x01E904C0 STP X20, X19, [X31 + 0x30]
	0x01E904C4 ADRP X21, 0x2549000
	0x01E904C8 LDRB W8, [X21 + 0x26D]
	0x01E904CC MOV X20, X1
	0x01E904D0 MOV V8.16B, V1.16B
	0x01E904D4 MOV V9.16B, V0.16B
	0x01E904D8 MOV X19, X0
	0x01E904DC TBNZ X8, 0x0, 0x1E90500
	0x01E904E0 ADRP X0, 0x2266000
	0x01E904E4 LDR X0, [X0 + 0xEF8]
	0x01E904E8 BL 0x1C16CF4
	0x01E904EC ADRP X0, 0x2266000
	0x01E904F0 LDR X0, [X0 + 0xF00]
	0x01E904F4 BL 0x1C16CF4
	0x01E904F8 MOVZ W8, 0x1
	0x01E904FC STRB W8, [X21 + 0x26D]
	0x01E90500 LDRB W8, [X19 + 0x14]
	0x01E90504 CBZ W8, 0x1E90580
	0x01E90508 LDP D1, D0, [X19]
	0x01E9050C FMUL D0, D0, D9
	0x01E90510 FADD D0, D1, D0
	0x01E90514 FCMP D0, D8
	0x01E90518 STR D0, [X19]
	0x01E9051C B.LT 0x1E90580
	0x01E90520 ADRP X21, 0x2266000
	0x01E90524 LDR X21, [X21 + 0xF00]
	0x01E90528 LDR W8, [X19 + 0x10]
	0x01E9052C FSUB D0, D0, D8
	0x01E90530 ANDS W31, W20, 0xFF
	0x01E90534 STR D0, [X19]
	0x01E90538 ADD W22, W8, 0x1
	0x01E9053C STR W22, [X19 + 0x10]
	0x01E90540 B.EQ 0x1E9055C
	0x01E90544 LDR X1, [X21]
	0x01E90548 ADD X0, X31, 0x18
	0x01E9054C BL 0x2434214
	0x01E90550 CMP W22, W0
	0x01E90554 B.GE 0x1E9056C
	0x01E90558 LDR V0, [X19]
	0x01E9055C FCMP D0, D8
	0x01E90560 B.LT 0x1E90580
	0x01E90564 LDRB W20, [X31 + 0x18]
	0x01E90568 B 0x1E90528
	0x01E9056C STR X31, [X19]
	0x01E90570 LDR X1, [X21]
	0x01E90574 ADD X0, X31, 0x18
	0x01E90578 BL 0x2434214
	0x01E9057C STR W0, [X19 + 0x10]
	0x01E90580 LDP X20, X19, [X31 + 0x30]
	0x01E90584 LDP X22, X21, [X31 + 0x20]
	0x01E90588 LDR X30, [X31 + 0x10]
	0x01E9058C LDP D9, D8, [X31], #0x40
	0x01E90590 RET
	0x01E90594 STRB W31, [X0 + 0x14]
	0x01E90598 RET
	0x01E9059C MOVZ W8, 0x1
	0x01E905A0 STRB W8, [X0 + 0x14]
	0x01E905A4 RET
	0x01E905A8 LDR W8, [X0 + 0x10]
	0x01E905AC SUBS W9, W8, 0x1
	0x01E905B0 B.LT 0x1E905C4
	0x01E905B4 CMP W9, 0x0
	0x01E905B8 STR W9, [X0 + 0x10]
	0x01E905BC CSET W9, EQ
	0x01E905C0 B 0x1E905C8
	0x01E905C4 MOV W9, W31
	0x01E905C8 CMP W8, 0x0
	0x01E905CC CSET W0, GT
	0x01E905D0 STRB W9, [X1]
	0x01E905D4 RET
	0x01E905D8 ADRP X9, 0xFFFFFFFFFEC5C000
	0x01E905DC LDR V0, [X9 + 0x52]
	0x01E905E0 MOVZ W9, 0x1
	0x01E905E4 STR W31, [X8 + 0x10]
	0x01E905E8 STURH W31, [X8 + 0x15]
	0x01E905EC STRB W9, [X8 + 0x14]
	0x01E905F0 STR V0, [X8]
	0x01E905F4 STRB W31, [X8 + 0x17]
	0x01E905F8 RET
	0x01E905FC LDR W0, [X0 + 0x4]
	0x01E90600 RET
	0x01E90604 LDR W0, [X0]
	0x01E90608 RET
	0x01E9060C STR X30, [X31 - 0x30]!
	0x01E90610 STP X22, X21, [X31 + 0x10]
	0x01E90614 STP X20, X19, [X31 + 0x20]
	0x01E90618 ADRP X21, 0x2549000
	0x01E9061C ADRP X22, 0x226E000
	0x01E90620 LDRB W8, [X21 + 0x26E]
	0x01E90624 LDR X22, [X22 + 0x168]
	0x01E90628 MOV W19, W1
	0x01E9062C MOV X20, X0
	0x01E90630 TBNZ X8, 0x0, 0x1E90648
	0x01E90634 ADRP X0, 0x226E000
	0x01E90638 LDR X0, [X0 + 0x168]
	0x01E9063C BL 0x1C16CF4
	0x01E90640 MOVZ W8, 0x1
	0x01E90644 STRB W8, [X21 + 0x26E]
	0x01E90648 LDR X0, [X22]
	0x01E9064C LDR W8, [X0 + 0xE0]
	0x01E90650 CBNZ W8, 0x1E90658
	0x01E90654 BL 0x1C16DFC
	0x01E90658 ADD X8, X20, W19, 0x2, SXTW
	0x01E9065C LDR W0, [X8 + 0x4]
	0x01E90660 LDP X20, X19, [X31 + 0x20]
	0x01E90664 LDP X22, X21, [X31 + 0x10]
	0x01E90668 LDR X30, [X31], #0x30
	0x01E9066C RET
	0x01E90670 ADD X8, X0, W1, 0x2, SXTW
	0x01E90674 LDR W0, [X8 + 0x4]
	0x01E90678 RET
	0x01E9067C STR X30, [X31 - 0x10]!
	0x01E90680 CBZ X1, 0x1E906D4
	0x01E90684 LDR X8, [X1 + 0x18]
	0x01E90688 STR W8, [X0]
	0x01E9068C LDR X9, [X1 + 0x18]
	0x01E90690 CMP W9, 0x1
	0x01E90694 B.LT 0x1E906C8
	0x01E90698 AND X9, X9, 0x0
	0x01E9069C MOV X8, X31
	0x01E906A0 ADD X10, X0, 0x4
	0x01E906A4 SXTW X11, W9
	0x01E906A8 ADD X12, X1, 0x20
	0x01E906AC CMP X8, X9
	0x01E906B0 B.CS 0x1E906D0
	0x01E906B4 LDR W13, [X12, X8, LSL #2]
	0x01E906B8 ADD X8, X8, 0x1
	0x01E906BC CMP X8, X11
	0x01E906C0 STR W13, [X10], #0x4
	0x01E906C4 B.LT 0x1E906AC
	0x01E906C8 LDR X30, [X31], #0x10
	0x01E906CC RET
	0x01E906D0 BL 0x1C16F28
	0x01E906D4 BL 0x1C16F20
	0x01E906D8 STR X30, [X31 - 0x30]!
	0x01E906DC STP X22, X21, [X31 + 0x10]
	0x01E906E0 STP X20, X19, [X31 + 0x20]
	0x01E906E4 ADRP X21, 0x2549000
	0x01E906E8 ADRP X22, 0x226E000
	0x01E906EC LDRB W8, [X21 + 0x26F]
	0x01E906F0 LDR X22, [X22 + 0x168]
	0x01E906F4 MOV W19, W1
	0x01E906F8 MOV X20, X0
	0x01E906FC TBNZ X8, 0x0, 0x1E90714
	0x01E90700 ADRP X0, 0x226E000
	0x01E90704 LDR X0, [X0 + 0x168]
	0x01E90708 BL 0x1C16CF4
	0x01E9070C MOVZ W8, 0x1
	0x01E90710 STRB W8, [X21 + 0x26F]
	0x01E90714 LDR X0, [X22]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X0
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x254A000
	007 Move W8, [X20+610]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x226F000
	014 Move X0, [X0+216]
	015 Call 0x1C17CF4
	016 Move X0, 0x226F000
	017 Move X0, [X0+224]
	018 Call 0x1C17CF4
	019 Move X0, 0x2264000
	020 Move X0, [X0+3608]
	021 Call 0x1C17CF4
	022 Move X0, 0x226E000
	023 Move X0, [X0+2376]
	024 Call 0x1C17CF4
	025 Move X0, 0x2264000
	026 Move X0, [X0+1728]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+610], W8
	030 Add X8, X31, 24
	031 Move [X31], X31
	032 Move [X31+8], X8
	033 Move W8, [X19+16]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Compare W8, 0
	036 JumpIfNotEqual {83}
	037 Move TEMP, 0
	038 Not TEMP
	039 Move W8, TEMP
	040 Move [X19+16], W8
	041 Call ReflectionUtils.GetAllWeavedAssemblies
	042 Move X19, X0
	043 Compare X0, 0
	044 JumpIfEqual {82}
	045 Move X10, 0x226F000
	046 Move X8, [X19]
	047 Move X10, [X10+216]
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Move X1, [X10]
	050 Compare X9, 0
	051 JumpIfEqual {58}
	052 Move X10, [X8+176]
	053 Add X10, X10, 8
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Subtract X9, X9, 1
	057 Add X10, X10, 16
	058 Move X0, X19
	059 Move W2, W31
	060 Call 0x1C5D788
	061 Move TEMP, 2
	062 Not TEMP
	063 Move W8, TEMP
	064 Move [X19+16], W8
	065 NotImplemented "Instruction LDRSW not yet implemented."
	066 Add X8, X8, X9
	067 Add X0, X8, 312
	068 Move X8, [X0]
	069 Move X1, [X0+8]
	070 Move X0, X19
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X8, [X31+24]
	073 Move TEMP, 2
	074 Not TEMP
	075 Move W9, TEMP
	076 Move X20, X0
	077 Move [X8+40], X0
	078 Move [X8+16], W9
	079 Compare X20, 0
	080 JumpIfNotEqual {163}
	081 Call 0x1C17F20
	082 Call 0x1C17F20
	083 Move W0, W31
	084 Move X19, [X0+40]
	085 Compare X19, 0
	086 JumpIfEqual {204}
	087 Move X10, 0x226F000
	088 Move X8, [X19]
	089 Move X10, [X10+224]
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Move X1, [X10]
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move X0, X19
	101 Move W2, W31
	102 Call 0x1C5D788
	103 NotImplemented "Instruction LDRSW not yet implemented."
	104 Add X8, X8, X9
	105 Add X0, X8, 312
	106 Move X8, [X0]
	107 Move X1, [X0+8]
	108 Move X0, X19
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Compare X0, 0
	111 JumpIfEqual {205}
	112 Move X8, [X0]
	113 Move X1, [X8+560]
	114 Move X9, [X8+552]
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move X19, [X31+24]
	117 Move X8, X0
	118 Move W9, W31
	119 Move [X19+48], X0
	120 Move [X19+56], W31
	121 Compare X8, 0
	122 JumpIfEqual {158}
	123 Move W10, [X8+24]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X10, 0x2264000
	126 Move X10, [X10+1728]
	127 Add X8, X8, W9
	128 Move X0, [X10]
	129 Move X10, 0x226E000
	130 Move X10, [X10+2376]
	131 Move X20, [X8+32]
	132 Move W8, [X0+224]
	133 Move X19, [X10]
	134 Compare W8, 0
	135 JumpIfNotEqual {137}
	136 Call 0x1C17DFC
	137 Move X0, X19
	138 Move X1, X31
	139 Call Type.GetTypeFromHandle, X0
	140 Compare X0, 0
	141 JumpIfEqual {207}
	142 Move X8, [X0]
	143 Move X9, [X8+680]
	144 Move X2, [X8+688]
	145 Move X1, X20
	146 NotImplemented "Instruction BLR not yet implemented."
	147 Move X19, [X31+24]
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfEqual {196}
	152 Move W9, [X19+56]
	153 Move X8, [X19+48]
	154 Add W9, W9, 1
	155 Move [X19+56], W9
	156 Compare X8, 0
	157 JumpIfNotEqual {123}
	158 Call 0x1C17F20
	159 Move X20, [X19+40]
	160 Move [X19+48], X31
	161 Compare X20, 0
	162 JumpIfEqual {81}
	163 Move X10, 0x2264000
	164 Move X8, [X20]
	165 Move X10, [X10+3608]
	166 NotImplemented "Instruction LDRH not yet implemented."
	167 Move X1, [X10]
	168 Compare X9, 0
	169 JumpIfEqual {176}
	170 Move X10, [X8+176]
	171 Add X10, X10, 8
	172 NotImplemented "Instruction LDUR not yet implemented."
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Subtract X9, X9, 1
	175 Add X10, X10, 16
	176 Move X0, X20
	177 Move W2, W31
	178 Call 0x1C5D788
	179 NotImplemented "Instruction LDRSW not yet implemented."
	180 Add X8, X8, X9
	181 Add X0, X8, 312
	182 Move X8, [X0]
	183 Move X1, [X0+8]
	184 Move X0, X20
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Move W8, W0
	187 Move X0, [X31+24]
	188 Move TEMP, X8
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfEqual {84}
	192 Call <GetAllWeavedSimulationBehaviourTypes>d__4.<>m__Finally1, X0
	193 Move X8, [X31+24]
	194 Move W0, W31
	195 Move [X8+40], X31
	196 Move W0, 1
	197 Move [X19+24], X20
	198 Move [X19+16], W0
	199 Move X20, [X31+32]
	200 Move X19, [X31+40]
	201 Move X30, [X31+16]
	202 Add X31, X31, 48
	203 Return X0
	204 Call 0x1C17F20
	205 Call 0x1C17F20
	206 Call 0x1C17F28
	207 Call 0x1C17F20
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Call 0x3EB2AD0
	210 Move X19, [X0]
	211 Move [X31], X19
	212 Call 0x3EB2AE0
	213 Compare X19, 0
	214 JumpIfEqual {83}
	215 Add X8, X31, 0
	216 Add X0, X8, 8
	217 Call 0x1997494
	218 Move X0, X19
	219 Call 0x1C17F18
	220 Compare X19, 0
	221 JumpIfNotEqual {223}
	222 Call 0x1D2D690
	223 Move X0, [X31+24]
	224 Move W8, [X0+16]
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Add W31, W8, 3
	227 Call <GetAllWeavedSimulationBehaviourTypes>d__4.<>m__Finally1, X0
	228 Move X0, X19
	229 Call 0x1C17F18
	230 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x01E90718 LDR W8, [X0 + 0xE0]
	0x01E9071C CBNZ W8, 0x1E90724
	0x01E90720 BL 0x1C16DFC
	0x01E90724 LDR W8, [X20 + 0x4]!
	0x01E90728 LDP X22, X21, [X31 + 0x10]
	0x01E9072C LDR W9, [X20, W19, SXTW]
	0x01E90730 LDP X20, X19, [X31 + 0x20]
	0x01E90734 SDIV W0, W8, W9
	0x01E90738 LDR X30, [X31], #0x30
	0x01E9073C RET
	0x01E90740 STP X30, X23, [X31 - 0x30]!
	0x01E90744 STP X22, X21, [X31 + 0x10]
	0x01E90748 STP X20, X19, [X31 + 0x20]
	0x01E9074C ADRP X21, 0x2549000
	0x01E90750 ADRP X19, 0x2264000
	0x01E90754 LDRB W8, [X21 + 0x270]
	0x01E90758 LDR X19, [X19 + 0xE58]
	0x01E9075C MOV X20, X0
	0x01E90760 TBNZ X8, 0x0, 0x1E90784
	0x01E90764 ADRP X0, 0x2264000
	0x01E90768 LDR X0, [X0 + 0xE58]
	0x01E9076C BL 0x1C16CF4
	0x01E90770 ADRP X0, 0x226E000
	0x01E90774 LDR X0, [X0 + 0x168]
	0x01E90778 BL 0x1C16CF4
	0x01E9077C MOVZ W8, 0x1
	0x01E90780 STRB W8, [X21 + 0x270]
	0x01E90784 LDR W1, [X20]
	0x01E90788 LDR X0, [X19]
	0x01E9078C BL 0x1C16D6C
	0x01E90790 CBZ X0, 0x1E90804
	0x01E90794 LDR X8, [X0 + 0x18]
	0x01E90798 MOV X19, X0
	0x01E9079C CMP W8, 0x1
	0x01E907A0 B.LT 0x1E907EC
	0x01E907A4 ADRP X22, 0x226E000
	0x01E907A8 LDR X22, [X22 + 0x168]
	0x01E907AC MOV X21, X31
	0x01E907B0 ADD X20, X20, 0x4
	0x01E907B4 AND X8, X8, 0x0
	0x01E907B8 ADD X23, X19, 0x20
	0x01E907BC LDR X0, [X22]
	0x01E907C0 LDR W9, [X0 + 0xE0]
	0x01E907C4 CBNZ W9, 0x1E907D0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x254A000
	005 Move W8, [X19+611]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2264000
	012 Move X0, [X0+3584]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X19+611], W8
	016 Move X19, [X20+40]
	017 Move TEMP, 0
	018 Not TEMP
	019 Move W8, TEMP
	020 Move [X20+16], W8
	021 Compare X19, 0
	022 JumpIfEqual {39}
	023 Move X10, 0x2264000
	024 Move X8, [X19]
	025 Move X10, [X10+3584]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move X0, X19
	037 Move W2, W31
	038 Call 0x1C5D788
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return 
	043 NotImplemented "Instruction LDRSW not yet implemented."
	044 Add X8, X8, X9
	045 Add X0, X8, 312
	046 Move X2, [X0]
	047 Move X1, [X0+8]
	048 Move X0, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 CallNoReturn X2

Method: System.Type System.Collections.Generic.IEnumerator<System.Type>.get_Current()

Disassembly:
	0x01E907C8 BL 0x1C16DFC
	0x01E907CC LDR W8, [X19 + 0x18]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01E907D0 CMP X21, W8, UXTW
	0x01E907D4 B.CS 0x1E90800
	0x01E907D8 LDR W9, [X20], #0x4
	0x01E907DC STR W9, [X23, X21, LSL #2]
	0x01E907E0 ADD X21, X21, 0x1
	0x01E907E4 CMP X21, W8, SXTW
	0x01E907E8 B.LT 0x1E907BC
	0x01E907EC MOV X0, X19
	0x01E907F0 LDP X20, X19, [X31 + 0x20]
	0x01E907F4 LDP X22, X21, [X31 + 0x10]
	0x01E907F8 LDP X30, X23, [X31], #0x30
	0x01E907FC RET
	0x01E90800 BL 0x1C16F28
	0x01E90804 BL 0x1C16F20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x2264000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x226F000
	011 Move X0, [X0+232]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01E90808 STR X30, [X31 - 0x40]!
	0x01E9080C STP X24, X23, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Collections.Generic.IEnumerator`1<System.Type> System.Collections.Generic.IEnumerable<System.Type>.GetEnumerator()

Disassembly:
	0x01E90810 STP X22, X21, [X31 + 0x20]
	0x01E90814 STP X20, X19, [X31 + 0x30]
	0x01E90818 ADRP X20, 0x2549000
	0x01E9081C LDRB W8, [X20 + 0x271]
	0x01E90820 MOV X19, X0
	0x01E90824 TBNZ X8, 0x0, 0x1E9083C
	0x01E90828 ADRP X0, 0x226E000
	0x01E9082C LDR X0, [X0 + 0x168]
	0x01E90830 BL 0x1C16CF4
	0x01E90834 MOVZ W8, 0x1
	0x01E90838 STRB W8, [X20 + 0x271]
	0x01E9083C LDR W8, [X19]
	0x01E90840 MOV W0, W31
	0x01E90844 CBZ W8, 0x1E908C8
	0x01E90848 CMP W8, 0x4
	0x01E9084C B.GT 0x1E908C8
	0x01E90850 MOV X20, X19
	0x01E90854 LDR W23, [X20 + 0x4]!
	0x01E90858 CMP W23, 0x1
	0x01E9085C B.LT 0x1E908BC
	0x01E90860 CMP W8, 0x2
	0x01E90864 B.LT 0x1E908C4
	0x01E90868 ADRP X24, 0x226E000
	0x01E9086C LDR X24, [X24 + 0x168]
	0x01E90870 ADD X21, X20, 0x4
	0x01E90874 MOVZ W22, 0x2
	0x01E90878 LDR X0, [X24]
	0x01E9087C LDR W8, [X0 + 0xE0]
	0x01E90880 CBNZ W8, 0x1E90888
	0x01E90884 BL 0x1C16DFC
	0x01E90888 LDR W8, [X21]
	0x01E9088C SDIV W9, W23, W8
	0x01E90890 MSUB W8, W9, W8, W23
	0x01E90894 CMP W8, 0x0
	0x01E90898 CSET W0, EQ
	0x01E9089C CBNZ W8, 0x1E908C8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x254A000
	005 Move W8, [X20+612]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x226F000
	012 Move X0, [X0+144]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+612], W8
	016 Move W8, [X19+16]
	017 Add W31, W8, 2
	018 Move W20, [X19+32]
	019 Move X0, X31
	020 Call Environment.get_CurrentManagedThreadId
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X19+16], W31
	023 Move X8, 0x226F000
	024 Move X8, [X8+144]
	025 Move X0, [X8]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X19, X0
	029 Call Object..ctor, X0
	030 Move X0, X31
	031 Move [X19+16], W31
	032 Call Environment.get_CurrentManagedThreadId
	033 Move [X19+32], W0
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x01E908A0 LDRSW X8, [X19]

ISIL:
	001 Call <GetAllWeavedSimulationBehaviourTypes>d__4.System.Collections.Generic.IEnumerable<System.Type>.GetEnumerator, X0
	002 Return X0

