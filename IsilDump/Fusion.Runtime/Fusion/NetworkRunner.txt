Type: Fusion.NetworkRunner

Method: System.Boolean get_IsResume()

Disassembly:
	0x01E9E0AC LDRB W8, [X24 + 0x30B]
	0x01E9E0B0 MOV X19, X4
	0x01E9E0B4 MOV X20, X3
	0x01E9E0B8 MOV X21, X2
	0x01E9E0BC MOV X22, X1
	0x01E9E0C0 MOV X23, X0
	0x01E9E0C4 TBNZ X8, 0x0, 0x1E9E0DC
	0x01E9E0C8 ADRP X0, 0x2260000
	0x01E9E0CC LDR X0, [X0 + 0x798]
	0x01E9E0D0 BL 0x1C16CF4
	0x01E9E0D4 MOVZ W8, 0x1
	0x01E9E0D8 STRB W8, [X24 + 0x30B]
	0x01E9E0DC LDR X23, [X23 + 0x50]
	0x01E9E0E0 CBZ X23, 0x1E9E118
	0x01E9E0E4 ADRP X8, 0x2260000
	0x01E9E0E8 LDR X8, [X8 + 0x798]
	0x01E9E0EC LDR X9, [X23]
	0x01E9E0F0 LDR X8, [X8]
	0x01E9E0F4 LDRB W11, [X9 + 0x130]
	0x01E9E0F8 LDRB W10, [X8 + 0x130]
	0x01E9E0FC CMP W11, W10
	0x01E9E100 B.CC 0x1E9E118
	0x01E9E104 LDR X9, [X9 + 0xC8]
	0x01E9E108 ADD X9, X9, X10, 0x3, LSL
	0x01E9E10C LDUR X9, [X9 - 0x8]
	0x01E9E110 CMP X9, X8
	0x01E9E114 B.EQ 0x1E9E13C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x253C000
	005 Move W8, [X20+769]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2261000
	012 Move X0, [X0+1776]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+769], W8
	016 Move X8, [X19+80]
	017 Compare X8, 0
	018 JumpIfEqual {31}
	019 Move W8, [X8+208]
	020 Compare W8, 0
	021 JumpIfEqual {31}
	022 Move X8, [X19+128]
	023 Compare X8, 0
	024 JumpIfEqual {31}
	025 Move X0, [X8+16]
	026 Compare X0, 0
	027 JumpIfEqual {36}
	028 Move X1, X31
	029 Call Task.get_IsCompleted, X0
	030 Xor W8, W0, 1
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 And W0, W8, 1
	034 Move X30, [X31+32]
	035 Return X0
	036 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<System.Boolean> PushHostMigrationSnapshot()

Disassembly:
	0x01E9E118 MOV W0, W31
	0x01E9E11C STR W31, [X21]
	0x01E9E120 STR W31, [X20]
	0x01E9E124 STR W31, [X19]
	0x01E9E128 LDP X20, X19, [X31 + 0x30]
	0x01E9E12C LDP X22, X21, [X31 + 0x20]
	0x01E9E130 LDP X24, X23, [X31 + 0x10]
	0x01E9E134 LDR X30, [X31], #0x40
	0x01E9E138 RET
	0x01E9E13C LDR X8, [X22]
	0x01E9E140 CBZ X8, 0x1E9E17C
	0x01E9E144 LDR W2, [X8 + 0x18]
	0x01E9E148 MOV X0, X23
	0x01E9E14C MOV X1, X22
	0x01E9E150 MOV X3, X31
	0x01E9E154 BL 0x1ED1D24
	0x01E9E158 STR W0, [X19]
	0x01E9E15C LDR W8, [X23 + 0x48]
	0x01E9E160 STR W8, [X21]
	0x01E9E164 LDR W8, [X23 + 0x148]
	0x01E9E168 STR W8, [X20]
	0x01E9E16C LDR W8, [X19]
	0x01E9E170 CMP W8, 0x0
	0x01E9E174 CSET W0, GT
	0x01E9E178 B 0x1E9E128
	0x01E9E17C BL 0x1C16F20
	0x01E9E180 MOVZ W0, 0x1
	0x01E9E184 RET
	0x01E9E188 STR X30, [X31 - 0x30]!
	0x01E9E18C STP X22, X21, [X31 + 0x10]
	0x01E9E190 STP X20, X19, [X31 + 0x20]
	0x01E9E194 ADRP X21, 0x253B000
	0x01E9E198 LDRB W8, [X21 + 0x30C]
	0x01E9E19C MOV X19, X1
	0x01E9E1A0 MOV X20, X0
	0x01E9E1A4 TBNZ X8, 0x0, 0x1E9E1BC
	0x01E9E1A8 ADRP X0, 0x2260000
	0x01E9E1AC LDR X0, [X0 + 0x7A0]
	0x01E9E1B0 BL 0x1C16CF4
	0x01E9E1B4 MOVZ W8, 0x1
	0x01E9E1B8 STRB W8, [X21 + 0x30C]
	0x01E9E1BC ADRP X22, 0x2260000
	0x01E9E1C0 LDR X21, [X20 + 0x38]!
	0x01E9E1C4 LDR X22, [X22 + 0x7A0]
	0x01E9E1C8 MOV X0, X21
	0x01E9E1CC MOV X1, X19
	0x01E9E1D0 MOV X2, X31
	0x01E9E1D4 BL 0x33C0DE4
	0x01E9E1D8 MOV X8, X0
	0x01E9E1DC CBZ X0, 0x1E9E1F0
	0x01E9E1E0 LDR X1, [X22]
	0x01E9E1E4 LDR X9, [X8]
	0x01E9E1E8 CMP X9, X1
	0x01E9E1EC B.NE 0x1E9E21C
	0x01E9E1F0 MOV X0, X20
	0x01E9E1F4 MOV X1, X8
	0x01E9E1F8 MOV X2, X21
	0x01E9E1FC BL 0x1C24138
	0x01E9E200 CMP X21, X0
	0x01E9E204 MOV X21, X0

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], X30
	003 Move [X31+96], X22
	004 Move [X31+104], X21
	005 Move [X31+112], X20
	006 Move [X31+120], X19
	007 Move X21, 0x253C000
	008 Move X20, 0x2260000
	009 Move W8, [X21+770]
	010 Move X20, [X20+224]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x2260000
	017 Move X0, [X0+232]
	018 Call 0x1C17CF4
	019 Move X0, 0x2261000
	020 Move X0, [X0+1784]
	021 Call 0x1C17CF4
	022 Move X0, 0x2260000
	023 Move X0, [X0+248]
	024 Call 0x1C17CF4
	025 Move X0, 0x2260000
	026 Move X0, [X0+224]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+770], W8
	030 Move X0, [X20]
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 Move [X31+48], V0
	033 Move [X31+56], V0
	034 Move [X31+2], V0
	035 Move X22, 0x2260000
	036 Move X20, 0x2261000
	037 Move X21, 0x2260000
	038 Move W8, [X0+224]
	039 Move X22, [X22+232]
	040 Move X20, [X20+1784]
	041 Move X21, [X21+248]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, [X22]
	046 Add X8, X31, 8
	047 Call AsyncTaskMethodBuilder`1<Boolean>.Create
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X9, [X31+24]
	050 Move X2, [X20]
	051 Add X8, X31, 32
	052 Or X20, X8, 15
	053 Move TEMP, 0
	054 Not TEMP
	055 Move W10, TEMP
	056 Add X1, X31, 32
	057 Move X0, X20
	058 Move [X31+40], V0
	059 Move [X31+56], X9
	060 Move [X31+64], X19
	061 Move [X31+32], W10
	062 Call AsyncTaskMethodBuilder`1<Boolean>.Start, X0, X1
	063 Move X1, [X21]
	064 Move X0, X20
	065 Call AsyncTaskMethodBuilder`1<Boolean>.get_Task, X0
	066 Move X20, [X31+112]
	067 Move X19, [X31+120]
	068 Move X22, [X31+96]
	069 Move X21, [X31+104]
	070 Move X30, [X31+80]
	071 Add X31, X31, 128
	072 Return X0

Method: System.Collections.Generic.IEnumerable`1<Fusion.NetworkObject> GetResumeSnapshotNetworkObjects()

Disassembly:
	0x01E9E208 B.NE 0x1E9E1C8
	0x01E9E20C LDP X20, X19, [X31 + 0x20]
	0x01E9E210 LDP X22, X21, [X31 + 0x10]
	0x01E9E214 LDR X30, [X31], #0x30
	0x01E9E218 RET
	0x01E9E21C MOV X0, X8
	0x01E9E220 BL 0x1C171E0
	0x01E9E224 STR X30, [X31 - 0x30]!
	0x01E9E228 STP X22, X21, [X31 + 0x10]
	0x01E9E22C STP X20, X19, [X31 + 0x20]
	0x01E9E230 ADRP X21, 0x253B000
	0x01E9E234 LDRB W8, [X21 + 0x30D]
	0x01E9E238 MOV X19, X1
	0x01E9E23C MOV X20, X0
	0x01E9E240 TBNZ X8, 0x0, 0x1E9E258
	0x01E9E244 ADRP X0, 0x2260000
	0x01E9E248 LDR X0, [X0 + 0x7A0]
	0x01E9E24C BL 0x1C16CF4
	0x01E9E250 MOVZ W8, 0x1
	0x01E9E254 STRB W8, [X21 + 0x30D]
	0x01E9E258 ADRP X22, 0x2260000
	0x01E9E25C LDR X21, [X20 + 0x38]!
	0x01E9E260 LDR X22, [X22 + 0x7A0]
	0x01E9E264 MOV X0, X21
	0x01E9E268 MOV X1, X19
	0x01E9E26C MOV X2, X31
	0x01E9E270 BL 0x33C0FDC
	0x01E9E274 MOV X8, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x253C000
	006 Move X21, 0x2261000
	007 Move W8, [X20+771]
	008 Move X21, [X21+1792]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2261000
	015 Move X0, [X0+1792]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+771], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move TEMP, 1
	025 Not TEMP
	026 Move W8, TEMP
	027 Move X0, X31
	028 Move [X20+16], W8
	029 Call Environment.get_CurrentManagedThreadId
	030 Move [X20+32], W0
	031 Move [X20+40], X19
	032 Move X0, X20
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0

Method: System.Collections.Generic.IEnumerable`1<System.ValueTuple`2<Fusion.NetworkObject, Fusion.NetworkObjectHeaderPtr>> GetResumeSnapshotNetworkSceneObjects()

Disassembly:
	0x01E9E2AC LDP X22, X21, [X31 + 0x10]
	0x01E9E2B0 LDR X30, [X31], #0x30
	0x01E9E2B4 RET
	0x01E9E2B8 MOV X0, X8
	0x01E9E2BC BL 0x1C171E0
	0x01E9E2C0 STR X30, [X31 - 0x20]!
	0x01E9E2C4 STP X20, X19, [X31 + 0x10]
	0x01E9E2C8 ADRP X20, 0x253B000
	0x01E9E2CC ADRP X19, 0x225E000
	0x01E9E2D0 LDRB W8, [X20 + 0x30E]
	0x01E9E2D4 LDR X19, [X19 + 0xE80]
	0x01E9E2D8 TBNZ X8, 0x0, 0x1E9E2FC
	0x01E9E2DC ADRP X0, 0x2260000
	0x01E9E2E0 LDR X0, [X0 + 0x7A8]
	0x01E9E2E4 BL 0x1C16CF4
	0x01E9E2E8 ADRP X0, 0x225E000
	0x01E9E2EC LDR X0, [X0 + 0xE80]
	0x01E9E2F0 BL 0x1C16CF4
	0x01E9E2F4 MOVZ W8, 0x1
	0x01E9E2F8 STRB W8, [X20 + 0x30E]
	0x01E9E2FC LDR X0, [X19]
	0x01E9E300 LDR W8, [X0 + 0xE0]
	0x01E9E304 CBNZ W8, 0x1E9E310
	0x01E9E308 BL 0x1C16DFC
	0x01E9E30C LDR X0, [X19]
	0x01E9E310 LDR X8, [X0 + 0xB8]
	0x01E9E314 LDR X8, [X8]
	0x01E9E318 CBZ X8, 0x1E9E354

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x253C000
	006 Move X21, 0x2261000
	007 Move W8, [X20+772]
	008 Move X21, [X21+1800]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2261000
	015 Move X0, [X0+1800]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+772], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move TEMP, 1
	025 Not TEMP
	026 Move W8, TEMP
	027 Move X0, X31
	028 Move [X20+16], W8
	029 Call Environment.get_CurrentManagedThreadId
	030 Move [X20+40], W0
	031 Move [X20+48], X19
	032 Move X0, X20
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0

Method: System.Void SetHostMigrationBandwidth(System.Int32 bytePerSecond)

Disassembly:
	0x01E9E350 RET

ISIL:
	001 Return 

Method: System.Collections.IEnumerator RunHostMigrationResume(Fusion.NetworkRunnerInitializeArgs args)

Disassembly:
	0x01E9E354 BL 0x1C16F20
	0x01E9E358 LDR W8, [X0 + 0x58]
	0x01E9E35C CMP W8, 0x1
	0x01E9E360 CSET W0, EQ
	0x01E9E364 RET
	0x01E9E368 STR X30, [X31 - 0x30]!
	0x01E9E36C STP X22, X21, [X31 + 0x10]
	0x01E9E370 STP X20, X19, [X31 + 0x20]
	0x01E9E374 ADRP X21, 0x253B000
	0x01E9E378 ADRP X22, 0x2260000
	0x01E9E37C ADRP X20, 0x2255000
	0x01E9E380 LDRB W8, [X21 + 0x30F]
	0x01E9E384 LDR X22, [X22 + 0x7B0]
	0x01E9E388 LDR X20, [X20 + 0x598]
	0x01E9E38C MOV X19, X0
	0x01E9E390 TBNZ X8, 0x0, 0x1E9E3CC
	0x01E9E394 ADRP X0, 0x2260000
	0x01E9E398 LDR X0, [X0 + 0x7B0]
	0x01E9E39C BL 0x1C16CF4
	0x01E9E3A0 ADRP X0, 0x2255000
	0x01E9E3A4 LDR X0, [X0 + 0xA28]
	0x01E9E3A8 BL 0x1C16CF4
	0x01E9E3AC ADRP X0, 0x2255000
	0x01E9E3B0 LDR X0, [X0 + 0x598]
	0x01E9E3B4 BL 0x1C16CF4
	0x01E9E3B8 ADRP X0, 0x2260000
	0x01E9E3BC LDR X0, [X0 + 0x7B8]
	0x01E9E3C0 BL 0x1C16CF4
	0x01E9E3C4 MOVZ W8, 0x1
	0x01E9E3C8 STRB W8, [X21 + 0x30F]
	0x01E9E3CC LDR X1, [X22]
	0x01E9E3D0 MOV X0, X19
	0x01E9E3D4 BL 0x21A3894

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x253C000
	007 Move X22, 0x2261000
	008 Move W8, [X21+773]
	009 Move X22, [X22+1808]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2261000
	017 Move X0, [X0+1808]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+773], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move W1, W31
	024 Move X2, X31
	025 Move X21, X0
	026 Call <RunHostMigrationResume>d__11..ctor, X0, X1
	027 Compare X21, 0
	028 JumpIfEqual {41}
	029 Add X0, X21, 40
	030 Move W2, 248
	031 Move X1, X19
	032 Move [X21+32], X20
	033 Call 0x3EB2B30
	034 Move X0, X21
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Return X0
	041 Call 0x1C17F20

Method: Fusion.NetworkObject GetNetworkObjectFromResumeSnapshot(Fusion.NetworkObjectHeaderPtr networkObjectPtr, System.Collections.Generic.Dictionary`2<Fusion.NetworkId, Fusion.NetworkObjectHeaderPtr> headerList, System.Collections.Generic.Dictionary`2<Fusion.NetworkId, System.Collections.Generic.List`1<Fusion.NetworkId>> nestedMapping)

Disassembly:
	0x01E9E3D8 LDR X8, [X20]
	0x01E9E3DC MOV X19, X0
	0x01E9E3E0 LDR W9, [X8 + 0xE0]
	0x01E9E3E4 CBNZ W9, 0x1E9E3F0
	0x01E9E3E8 MOV X0, X8
	0x01E9E3EC BL 0x1C16DFC
	0x01E9E3F0 MOV X0, X19
	0x01E9E3F4 MOV X1, X31
	0x01E9E3F8 BL 0x3C38948
	0x01E9E3FC TBZ X0, 0x0, 0x1E9E438
	0x01E9E400 ADRP X8, 0x2255000
	0x01E9E404 LDR X8, [X8 + 0xA28]
	0x01E9E408 ADRP X19, 0x2260000
	0x01E9E40C LDR X0, [X8]
	0x01E9E410 LDR W8, [X0 + 0xE0]
	0x01E9E414 LDR X19, [X19 + 0x7B8]
	0x01E9E418 CBNZ W8, 0x1E9E420
	0x01E9E41C BL 0x1C16DFC
	0x01E9E420 LDR X0, [X19]
	0x01E9E424 LDP X20, X19, [X31 + 0x20]
	0x01E9E428 LDP X22, X21, [X31 + 0x10]
	0x01E9E42C MOV X1, X31
	0x01E9E430 LDR X30, [X31], #0x30
	0x01E9E434 B 0x3C06A04
	0x01E9E438 LDP X20, X19, [X31 + 0x20]
	0x01E9E43C LDP X22, X21, [X31 + 0x10]
	0x01E9E440 LDR X30, [X31], #0x30
	0x01E9E444 RET
	0x01E9E448 STR X30, [X31 - 0x20]!
	0x01E9E44C STP X20, X19, [X31 + 0x10]
	0x01E9E450 ADRP X20, 0x253B000
	0x01E9E454 LDRB W8, [X20 + 0x311]
	0x01E9E458 MOV X19, X0
	0x01E9E45C TBNZ X8, 0x0, 0x1E9E474
	0x01E9E460 ADRP X0, 0x225F000
	0x01E9E464 LDR X0, [X0 + 0x170]
	0x01E9E468 BL 0x1C16CF4
	0x01E9E46C MOVZ W8, 0x1
	0x01E9E470 STRB W8, [X20 + 0x311]
	0x01E9E474 LDRB W0, [X19 + 0xD1]
	0x01E9E478 LDP X20, X19, [X31 + 0x10]
	0x01E9E47C LDR X30, [X31], #0x20
	0x01E9E480 RET
	0x01E9E484 STR X30, [X31 - 0x30]!
	0x01E9E488 STP X22, X21, [X31 + 0x10]
	0x01E9E48C STP X20, X19, [X31 + 0x20]
	0x01E9E490 ADRP X22, 0x253B000
	0x01E9E494 ADRP X21, 0x2259000
	0x01E9E498 LDRB W8, [X22 + 0x312]
	0x01E9E49C LDR X21, [X21 + 0xFD8]
	0x01E9E4A0 MOV W20, W1
	0x01E9E4A4 MOV X19, X0
	0x01E9E4A8 TBNZ X8, 0x0, 0x1E9E4C0
	0x01E9E4AC ADRP X0, 0x2259000
	0x01E9E4B0 LDR X0, [X0 + 0xFD8]
	0x01E9E4B4 BL 0x1C16CF4
	0x01E9E4B8 MOVZ W8, 0x1
	0x01E9E4BC STRB W8, [X22 + 0x312]
	0x01E9E4C0 LDR X2, [X21]
	0x01E9E4C4 AND W1, W20, 0x1
	0x01E9E4C8 ADD X0, X31, 0xC
	0x01E9E4CC STRH W31, [X31 + 0xC]
	0x01E9E4D0 BL 0x242D570
	0x01E9E4D4 LDRH W8, [X31 + 0xC]
	0x01E9E4D8 LDP X22, X21, [X31 + 0x10]
	0x01E9E4DC STRH W8, [X19 + 0xD0]
	0x01E9E4E0 LDP X20, X19, [X31 + 0x20]
	0x01E9E4E4 LDR X30, [X31], #0x30
	0x01E9E4E8 RET
	0x01E9E4EC STR X30, [X31 - 0x10]!
	0x01E9E4F0 LDR X8, [X0 + 0x50]
	0x01E9E4F4 CBZ X8, 0x1E9E508
	0x01E9E4F8 LDR X8, [X8 + 0x58]
	0x01E9E4FC CBZ X8, 0x1E9E514
	0x01E9E500 LDR W0, [X8 + 0x38]
	0x01E9E504 B 0x1E9E50C
	0x01E9E508 MOV W0, W31
	0x01E9E50C LDR X30, [X31], #0x10
	0x01E9E510 RET
	0x01E9E514 BL 0x1C16F20
	0x01E9E518 LDR X0, [X0 + 0x50]
	0x01E9E51C RET
	0x01E9E520 LDR X8, [X0 + 0x50]
	0x01E9E524 CBZ X8, 0x1E9E530
	0x01E9E528 LDR W0, [X8 + 0x4C]
	0x01E9E52C RET
	0x01E9E530 MOV W0, W31
	0x01E9E534 RET
	0x01E9E538 LDR X8, [X0 + 0x50]
	0x01E9E53C CBZ X8, 0x1E9E548
	0x01E9E540 LDR W0, [X8 + 0x50]
	0x01E9E544 RET
	0x01E9E548 MOV W0, W31
	0x01E9E54C RET
	0x01E9E550 LDR X0, [X0 + 0x50]
	0x01E9E554 CBZ X0, 0x1E9E560
	0x01E9E558 MOV X1, X31
	0x01E9E55C B 0x1EC06A8
	0x01E9E560 FMOV S0, W31
	0x01E9E564 RET
	0x01E9E568 STR X30, [X31 - 0x10]!
	0x01E9E56C LDR X0, [X0 + 0x50]
	0x01E9E570 CBZ X0, 0x1E9E584
	0x01E9E574 MOV X1, X31
	0x01E9E578 BL 0x1EC0780
	0x00000000 INVALID
	0x01E9E580 B 0x1E9E588
	0x01E9E584 FMOV S0, W31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X21, 0x253C000
	010 Move W8, [X21+774]
	011 Move X22, X3
	012 Move X19, X2
	013 Move X23, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0x2261000
	020 Move X0, [X0+1816]
	021 Call 0x1C17CF4
	022 Move X0, 0x2261000
	023 Move X0, [X0+1824]
	024 Call 0x1C17CF4
	025 Move X0, 0x2260000
	026 Move X0, [X0+4048]
	027 Call 0x1C17CF4
	028 Move X0, 0x2260000
	029 Move X0, [X0+4056]
	030 Call 0x1C17CF4
	031 Move X0, 0x2261000
	032 Move X0, [X0+888]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+774], W8
	036 Move [X31+24], X31
	037 Move [X31+8], X31
	038 Compare X23, 0
	039 JumpIfEqual {121}
	040 Move X8, 0x2261000
	041 Move X8, [X8+888]
	042 Add X21, X23, 8
	043 Move X0, [X8]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X21
	049 Move X1, X31
	050 Call NetworkObjectTypeId.get_IsSceneObject, X0
	051 Move X21, X31
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {122}
	056 Move W8, [X23+24]
	057 Move X1, [X23+8]
	058 Add X3, X31, 24
	059 Move W4, 1
	060 Move W5, W8
	061 ShiftRight W5, 6
	062 And W5, W5, 63
	063 Move X0, X20
	064 Move X2, X31
	065 Call NetworkRunner.TryAcquireInstance, X0, X1, X2, X3, X4, X5
	066 Move X21, [X31+24]
	067 Compare W0, 0
	068 JumpIfNotEqual {122}
	069 Move X0, X20
	070 Move X1, X23
	071 Move X2, X21
	072 Call NetworkRunner.InitializeTempNetworkObjectInstance, X0, X1, X2
	073 Compare X22, 0
	074 JumpIfEqual {121}
	075 Move X8, 0x2261000
	076 Move W1, [X23]
	077 Move X8, [X8+1816]
	078 Add X2, X31, 8
	079 Move X0, X22
	080 Move X3, [X8]
	081 Call Dictionary`2<NetworkId, Object>.TryGetValue, X0, X1, X2
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {122}
	086 Move X0, [X31+8]
	087 Compare X0, 0
	088 JumpIfEqual {121}
	089 Move X23, 0x2260000
	090 Move X24, 0x2261000
	091 Move X23, [X23+4056]
	092 Move X24, [X24+1824]
	093 Move X22, X31
	094 NotImplemented "Instruction LDRSW not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X2, [X23]
	097 Move W1, W22
	098 Call List`1<NetworkId>.get_Item, X0, X1
	099 Compare X19, 0
	100 JumpIfEqual {121}
	101 Move X2, [X24]
	102 And X1, X0, 0
	103 Move X0, X19
	104 Call Dictionary`2<NetworkId, NetworkObjectHeaderPtr>.get_Item, X0, X1
	105 Compare X21, 0
	106 JumpIfEqual {121}
	107 Move X8, [X21+112]
	108 Compare X8, 0
	109 JumpIfEqual {121}
	110 Move W9, [X8+24]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Add X8, X8, X22
	113 Move X2, [X8+32]
	114 Move X1, X0
	115 Move X0, X20
	116 Call NetworkRunner.InitializeTempNetworkObjectInstance, X0, X1, X2
	117 Move X0, [X31+8]
	118 Add X22, X22, 1
	119 Compare X0, 0
	120 JumpIfNotEqual {94}
	121 Call 0x1C17F20
	122 Move X0, X21
	123 Move X20, [X31+64]
	124 Move X19, [X31+72]
	125 Move X22, [X31+48]
	126 Move X21, [X31+56]
	127 Move X24, [X31+32]
	128 Move X23, [X31+40]
	129 Move X30, [X31+16]
	130 Add X31, X31, 80
	131 Return X0
	132 Call 0x1C17F28

Method: System.Void InitializeTempNetworkObjectInstance(Fusion.NetworkObjectHeader* header, Fusion.NetworkObject instance)

Disassembly:
	0x01E9E900 LDUR X8, [X8 - 0x8]
	0x01E9E904 CMP X8, X1
	0x01E9E908 B.NE 0x1E9E92C
	0x01E9E90C LDP X20, X19, [X31 + 0x10]
	0x01E9E910 MOV X1, X31
	0x01E9E914 LDR X30, [X31], #0x20
	0x01E9E918 B 0x1ECB89C
	0x01E9E91C LDP X20, X19, [X31 + 0x10]
	0x01E9E920 MOV W0, W31
	0x01E9E924 LDR X30, [X31], #0x20
	0x01E9E928 RET
	0x01E9E92C BL 0x1C171E0
	0x01E9E930 BL 0x1C16F20
	0x01E9E934 LDR X0, [X0 + 0x50]
	0x01E9E938 CBZ X0, 0x1E9E944
	0x01E9E93C MOV X1, X31
	0x01E9E940 B 0x1EC08DC
	0x01E9E944 RET
	0x01E9E948 LDR X0, [X0 + 0x50]
	0x01E9E94C CBZ X0, 0x1E9E958
	0x01E9E950 MOV X1, X31
	0x01E9E954 B 0x1EC08F8
	0x01E9E958 RET
	0x01E9E95C LDR X8, [X0 + 0x50]
	0x01E9E960 CBZ X8, 0x1E9E974
	0x01E9E964 LDRB W8, [X8 + 0xD8]
	0x01E9E968 CMP W8, 0x0
	0x01E9E96C CSET W0, NE
	0x01E9E970 RET
	0x01E9E974 MOV W0, W31
	0x01E9E978 RET
	0x01E9E97C LDR X8, [X0 + 0x50]
	0x01E9E980 CBZ X8, 0x1E9E994
	0x01E9E984 LDRB W8, [X8 + 0xD9]
	0x01E9E988 CMP W8, 0x0
	0x01E9E98C CSET W0, NE
	0x01E9E990 RET
	0x01E9E994 MOV W0, W31
	0x01E9E998 RET
	0x01E9E99C LDR X0, [X0 + 0x50]
	0x01E9E9A0 CBZ X0, 0x1E9E9AC
	0x01E9E9A4 MOV X1, X31
	0x01E9E9A8 B 0x1EC0758
	0x01E9E9AC RET
	0x01E9E9B0 LDR X8, [X0 + 0x50]
	0x01E9E9B4 CBZ X8, 0x1E9E9C8
	0x01E9E9B8 LDRB W8, [X8 + 0xDA]
	0x01E9E9BC CMP W8, 0x0
	0x01E9E9C0 CSET W0, NE
	0x01E9E9C4 RET
	0x01E9E9C8 MOV W0, W31
	0x01E9E9CC RET
	0x01E9E9D0 LDR X0, [X0 + 0x50]
	0x01E9E9D4 CBZ X0, 0x1E9E9E0
	0x01E9E9D8 MOV X1, X31
	0x01E9E9DC B 0x1EC0510
	0x01E9E9E0 RET
	0x01E9E9E4 STP X30, X19, [X31 - 0x10]!
	0x01E9E9E8 LDR W8, [X0 + 0x5C]
	0x01E9E9EC CBZ W8, 0x1E9E9FC
	0x01E9E9F0 MOVZ W19, 0x3
	0x01E9E9F4 MOV W0, W19
	0x01E9E9F8 B 0x1E9EA18
	0x01E9E9FC LDR X0, [X0 + 0x50]
	0x01E9EA00 MOVZ W19, 0x1
	0x01E9EA04 CBZ X0, 0x1E9E9F4
	0x01E9EA08 MOV X1, X31
	0x01E9EA0C BL 0x1EC0A3C
	0x01E9EA10 ANDS W31, W0, 0x1
	0x01E9EA14 CINC W0, W19, NE
	0x01E9EA18 LDP X30, X19, [X31], #0x10
	0x01E9EA1C RET
	0x01E9EA20 STR X30, [X31 - 0x10]!
	0x01E9EA24 LDR X0, [X0 + 0x50]
	0x01E9EA28 CBZ X0, 0x1E9EA40
	0x01E9EA2C LDR X8, [X0]
	0x01E9EA30 LDR X9, [X8 + 0x268]
	0x01E9EA34 LDR X1, [X8 + 0x270]
	0x01E9EA38 BLR X9
	0x01E9EA3C AND X0, X0, 0x0
	0x01E9EA40 LDR X30, [X31], #0x10
	0x01E9EA44 RET
	0x01E9EA48 LDR X8, [X0 + 0x50]
	0x01E9EA4C CBZ X8, 0x1E9EA58
	0x01E9EA50 LDR W0, [X8 + 0x48]
	0x01E9EA54 RET
	0x01E9EA58 MOV X0, X31
	0x01E9EA5C RET
	0x01E9EA60 LDR X0, [X0 + 0x98]
	0x01E9EA64 RET
	0x01E9EA68 LDR X8, [X0 + 0x98]
	0x01E9EA6C CBZ X8, 0x1E9EA78

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x253C000
	010 Move W8, [X22+775]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x2259000
	019 Move X0, [X0+2680]
	020 Call 0x1C17CF4
	021 Move X0, 0x2261000
	022 Move X0, [X0+800]
	023 Call 0x1C17CF4
	024 Move X0, 0x2261000
	025 Move X0, [X0+808]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+775], W8
	029 Compare X19, 0
	030 JumpIfEqual {99}
	031 Move X8, 0x2261000
	032 Move X8, [X8+808]
	033 Move [X19+32], X21
	034 Move X21, 0x2261000
	035 Move X0, [X8]
	036 Move W8, [X0+224]
	037 Move X21, [X21+800]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, [X21]
	042 Call 0x222D62C
	043 Move X8, [X19+120]
	044 Compare X8, 0
	045 JumpIfEqual {99}
	046 Move X24, 0x2259000
	047 Move X24, [X24+2680]
	048 Move W21, W0
	049 Move W25, 4
	050 Move W9, [X8+24]
	051 Subtract X22, X25, 4
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X23, [X8]
	055 Compare X23, 0
	056 JumpIfEqual {99}
	057 Move [X23+108], W21
	058 Move X0, [X24]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X23
	064 Move X1, X31
	065 Call NetworkBehaviourUtils.GetWordCount, X0
	066 Move [X23+112], W0
	067 Move X8, [X19+120]
	068 Compare X8, 0
	069 JumpIfEqual {99}
	070 Move W9, [X8+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X0, [X8]
	073 Compare X0, 0
	074 JumpIfEqual {99}
	075 Move X1, X20
	076 Move X2, X19
	077 Move W3, W22
	078 Move X4, X31
	079 Call NetworkBehaviour.MakeOwned, X0, X1, X2, X3
	080 Move X8, [X19+120]
	081 Compare X8, 0
	082 JumpIfEqual {99}
	083 Move W9, [X8+24]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X9, [X8]
	086 Compare X9, 0
	087 JumpIfEqual {99}
	088 Move X10, [X19+32]
	089 Move X1, X31
	090 Add X10, X10, W21
	091 Move [X9+80], X10
	092 Move X0, [X8]
	093 Call NetworkBehaviourUtils.GetWordCount, X0
	094 Move X8, [X19+120]
	095 Add W21, W0, W21
	096 Add X25, X25, 1
	097 Compare X8, 0
	098 JumpIfNotEqual {50}
	099 Call 0x1C17F20
	100 Move X20, [X31+48]
	101 Move X19, [X31+56]
	102 Move X22, [X31+32]
	103 Move X21, [X31+40]
	104 Move X24, [X31+16]
	105 Move X23, [X31+24]
	106 Move X30, [X31+64]
	107 Move X25, [X31+72]
	108 Return 
	109 Call 0x1C17F28

Method: System.Void SetupHostMigration(Fusion.Protocol.HostMigration hostMigration)

Disassembly:
	0x01E9EA70 LDR X0, [X8 + 0x38]
	0x01E9EA74 RET

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Void StartHostMigration(Fusion.Protocol.Snapshot snapshot = null)

Disassembly:
	0x01E9EA78 MOV X0, X31
	0x01E9EA7C RET
	0x01E9EA80 LDR W0, [X0 + 0xA0]
	0x01E9EA84 RET
	0x01E9EA88 STR X30, [X31 - 0x20]!
	0x01E9EA8C STP X20, X19, [X31 + 0x10]
	0x01E9EA90 ADRP X20, 0x253B000
	0x01E9EA94 LDRB W8, [X20 + 0x316]
	0x01E9EA98 MOV X19, X0
	0x01E9EA9C TBNZ X8, 0x0, 0x1E9EAB4
	0x01E9EAA0 ADRP X0, 0x2260000
	0x01E9EAA4 LDR X0, [X0 + 0x7E8]
	0x01E9EAA8 BL 0x1C16CF4
	0x01E9EAAC MOVZ W8, 0x1
	0x01E9EAB0 STRB W8, [X20 + 0x316]
	0x01E9EAB4 LDR X0, [X19 + 0x50]
	0x01E9EAB8 CBZ X0, 0x1E9EAD0
	0x01E9EABC LDR X8, [X0]
	0x01E9EAC0 LDR X9, [X8 + 0x258]
	0x01E9EAC4 LDR X1, [X8 + 0x260]
	0x01E9EAC8 BLR X9
	0x01E9EACC CBNZ X0, 0x1E9EB28
	0x01E9EAD0 ADRP X8, 0x2260000
	0x01E9EAD4 LDR X8, [X8 + 0x7E8]
	0x01E9EAD8 LDR X19, [X8]
	0x01E9EADC LDR X8, [X19 + 0x38]
	0x01E9EAE0 CBNZ X8, 0x1E9EAF0
	0x01E9EAE4 MOV X0, X19
	0x01E9EAE8 BL 0x1C5C6E0
	0x01E9EAEC LDR X8, [X19 + 0x38]
	0x01E9EAF0 LDR X0, [X8 + 0x10]
	0x01E9EAF4 LDRB W8, [X0 + 0x135]
	0x01E9EAF8 TBNZ X8, 0x0, 0x1E9EB00
	0x01E9EAFC BL 0x1C5C684
	0x01E9EB00 LDR W8, [X0 + 0xE0]
	0x01E9EB04 CBNZ W8, 0x1E9EB0C
	0x01E9EB08 BL 0x1C16DFC
	0x01E9EB0C LDR X8, [X19 + 0x38]
	0x01E9EB10 LDR X0, [X8 + 0x10]
	0x01E9EB14 LDRB W8, [X0 + 0x135]
	0x01E9EB18 TBNZ X8, 0x0, 0x1E9EB20
	0x01E9EB1C BL 0x1C5C684
	0x01E9EB20 LDR X8, [X0 + 0xB8]
	0x01E9EB24 LDR X0, [X8]
	0x01E9EB28 LDP X20, X19, [X31 + 0x10]
	0x01E9EB2C LDR X30, [X31], #0x20
	0x01E9EB30 RET
	0x01E9EB34 LDR X0, [X0 + 0xB8]
	0x01E9EB38 RET
	0x01E9EB3C LDR X0, [X0 + 0x50]
	0x01E9EB40 CBZ X0, 0x1E9EB4C
	0x01E9EB44 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x253C000
	008 Move X21, 0x2261000
	009 Move W8, [X22+776]
	010 Move X21, [X21+1880]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2261000
	018 Move X0, [X0+1888]
	019 Call 0x1C17CF4
	020 Move X0, 0x2261000
	021 Move X0, [X0+1880]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+776], W8
	025 Move X8, [X19+32]
	026 Move X1, [X21]
	027 Move X2, X31
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSET not yet implemented."
	030 Call Assert.Always, X0, X1
	031 Move X8, [X19+32]
	032 Compare X8, 0
	033 JumpIfEqual {63}
	034 Move X0, [X19+432]
	035 Compare X0, 0
	036 JumpIfEqual {63}
	037 Move W8, [X8+40]
	038 Move X21, 0x2261000
	039 Move X21, [X21+1888]
	040 Move X1, X31
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W8, 4
	043 NotImplemented "Instruction CINC not yet implemented."
	044 Call CloudServices.ExtractCommunicator, X0
	045 Move X8, [X21]
	046 Move X21, X0
	047 Move X0, X8
	048 Call 0x1C17F10
	049 Move X1, X31
	050 Move X22, X0
	051 Call Object..ctor, X0
	052 Move [X22+24], X21
	053 Move [X22+32], X20
	054 Move [X22+16], W23
	055 Move X0, X19
	056 Move X1, X22
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Call 0x1C17F20

Method: System.Void InvokeHostMigration(Fusion.HostMigrationToken migrationToken)

Disassembly:
	0x01E9EB48 B 0x1EC7DA0
	0x01E9EB4C RET
	0x01E9EB50 LDR X0, [X0 + 0x50]
	0x01E9EB54 CBZ X0, 0x1E9EB60
	0x01E9EB58 MOV X2, X31
	0x01E9EB5C B 0x1EC7DE0
	0x01E9EB60 RET
	0x01E9EB64 LDR X0, [X0 + 0x100]
	0x01E9EB68 RET
	0x01E9EB6C STP X30, X21, [X31 - 0x20]!
	0x01E9EB70 STP X20, X19, [X31 + 0x10]
	0x01E9EB74 ADRP X20, 0x253B000
	0x01E9EB78 ADRP X21, 0x2260000
	0x01E9EB7C LDRB W8, [X20 + 0x318]
	0x01E9EB80 LDR X21, [X21 + 0x7F0]
	0x01E9EB84 MOV X19, X0
	0x01E9EB88 TBNZ X8, 0x0, 0x1E9EBA0
	0x01E9EB8C ADRP X0, 0x2260000
	0x01E9EB90 LDR X0, [X0 + 0x7F0]
	0x01E9EB94 BL 0x1C16CF4
	0x01E9EB98 MOVZ W8, 0x1
	0x01E9EB9C STRB W8, [X20 + 0x318]
	0x01E9EBA0 LDR X20, [X21]
	0x01E9EBA4 LDR X8, [X20 + 0x38]
	0x01E9EBA8 CBNZ X8, 0x1E9EBB4
	0x01E9EBAC MOV X0, X20
	0x01E9EBB0 BL 0x1C5C6E0
	0x01E9EBB4 CBZ X19, 0x1E9EBDC
	0x01E9EBB8 MOV X0, X19
	0x01E9EBBC MOV X1, X31
	0x01E9EBC0 BL 0x3C32ECC
	0x01E9EBC4 CBZ X0, 0x1E9EBDC
	0x01E9EBC8 LDR X8, [X20 + 0x38]
	0x01E9EBCC LDP X20, X19, [X31 + 0x10]
	0x01E9EBD0 LDR X1, [X8]
	0x01E9EBD4 LDP X30, X21, [X31], #0x20
	0x01E9EBD8 B 0x21E5548
	0x01E9EBDC BL 0x1C16F20
	0x01E9EBE0 STR X30, [X31 - 0x30]!
	0x01E9EBE4 STP X22, X21, [X31 + 0x10]
	0x01E9EBE8 STP X20, X19, [X31 + 0x20]
	0x01E9EBEC ADRP X22, 0x253B000
	0x01E9EBF0 LDRB W8, [X22 + 0x319]
	0x01E9EBF4 MOV X19, X2
	0x01E9EBF8 MOV X20, X1
	0x01E9EBFC MOV X21, X0
	0x01E9EC00 TBNZ X8, 0x0, 0x1E9EC18
	0x01E9EC04 ADRP X0, 0x2260000
	0x01E9EC08 LDR X0, [X0 + 0x798]
	0x01E9EC0C BL 0x1C16CF4
	0x01E9EC10 MOVZ W8, 0x1
	0x01E9EC14 STRB W8, [X22 + 0x319]
	0x01E9EC18 LDR X8, [X21 + 0x50]
	0x01E9EC1C CBZ X8, 0x1E9EC58
	0x01E9EC20 ADRP X9, 0x2260000
	0x01E9EC24 LDR X9, [X9 + 0x798]
	0x01E9EC28 LDR X10, [X8]
	0x01E9EC2C LDR X9, [X9]
	0x01E9EC30 LDRB W12, [X10 + 0x130]
	0x01E9EC34 LDRB W11, [X9 + 0x130]
	0x01E9EC38 CMP W12, W11
	0x01E9EC3C B.CC 0x1E9EC58
	0x01E9EC40 LDR X10, [X10 + 0xC8]
	0x01E9EC44 ADD X10, X10, X11, 0x3, LSL
	0x01E9EC48 LDUR X10, [X10 - 0x8]
	0x01E9EC4C CMP X10, X9
	0x01E9EC50 CSEL X0, X8, X31, EQ
	0x01E9EC54 B.EQ 0x1E9EC68
	0x01E9EC58 LDP X20, X19, [X31 + 0x20]
	0x01E9EC5C LDP X22, X21, [X31 + 0x10]
	0x01E9EC60 LDR X30, [X31], #0x30
	0x01E9EC64 RET
	0x01E9EC68 CBZ X0, 0x1E9EC88
	0x01E9EC6C AND X1, X20, 0x0
	0x01E9EC70 MOV X2, X19
	0x01E9EC74 LDP X20, X19, [X31 + 0x20]
	0x01E9EC78 LDP X22, X21, [X31 + 0x10]
	0x01E9EC7C MOV X3, X31
	0x01E9EC80 LDR X30, [X31], #0x30
	0x01E9EC84 B 0x1ECFD44
	0x01E9EC88 BL 0x1C16F20
	0x01E9EC8C SUB X31, X31, 0x70
	0x01E9EC90 STR X30, [X31 + 0x40]
	0x01E9EC94 STP X22, X21, [X31 + 0x50]
	0x01E9EC98 STP X20, X19, [X31 + 0x60]
	0x01E9EC9C MRS X21, 0xC000
	0x01E9ECA0 LDR X8, [X21 + 0x28]
	0x01E9ECA4 ADRP X22, 0x253B000
	0x01E9ECA8 MOV X19, X1
	0x01E9ECAC MOV X20, X0
	0x01E9ECB0 STR X8, [X31 + 0x38]
	0x01E9ECB4 LDRB W8, [X22 + 0x31A]
	0x01E9ECB8 TBNZ X8, 0x0, 0x1E9ECD0
	0x01E9ECBC ADRP X0, 0x2260000
	0x01E9ECC0 LDR X0, [X0 + 0x798]
	0x01E9ECC4 BL 0x1C16CF4
	0x01E9ECC8 MOVZ W8, 0x1
	0x01E9ECCC STRB W8, [X22 + 0x31A]
	0x01E9ECD0 LDR X8, [X20 + 0x50]
	0x01E9ECD4 CBZ X8, 0x1E9ED40
	0x01E9ECD8 ADRP X9, 0x2260000
	0x01E9ECDC LDR X9, [X9 + 0x798]
	0x01E9ECE0 LDR X10, [X8]
	0x01E9ECE4 LDR X9, [X9]
	0x01E9ECE8 LDRB W12, [X10 + 0x130]
	0x01E9ECEC LDRB W11, [X9 + 0x130]
	0x01E9ECF0 CMP W12, W11
	0x01E9ECF4 B.CC 0x1E9ED40
	0x01E9ECF8 LDR X10, [X10 + 0xC8]
	0x01E9ECFC ADD X10, X10, X11, 0x3, LSL
	0x01E9ED00 LDUR X10, [X10 - 0x8]
	0x01E9ED04 CMP X10, X9
	0x01E9ED08 CSEL X0, X8, X31, EQ
	0x01E9ED0C B.NE 0x1E9ED40
	0x01E9ED10 LDR X8, [X19 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x253C000
	009 Move W8, [X21+777]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x2261000
	017 Move X0, [X0+1896]
	018 Call 0x1C17CF4
	019 Move X0, 0x2261000
	020 Move X0, [X0+1904]
	021 Call 0x1C17CF4
	022 Move X0, 0x2261000
	023 Move X0, [X0+1912]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+777], W8
	027 Move X8, [X20+104]
	028 Compare X8, 0
	029 JumpIfEqual {72}
	030 Move X23, 0x2261000
	031 Move X24, 0x2261000
	032 Move X23, [X23+1912]
	033 Move X24, [X24+1896]
	034 Move W21, W31
	035 Move W9, [X8+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X2, [X23]
	038 Move X0, X8
	039 Move W1, W21
	040 Call List`1<Object>.get_Item, X0, X1
	041 Move X22, X0
	042 Compare X0, 0
	043 JumpIfEqual {81}
	044 Move X8, [X22]
	045 Move X1, [X24]
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Compare X9, 0
	048 JumpIfEqual {55}
	049 Move X10, [X8+176]
	050 Add X10, X10, 8
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X9, X9, 1
	054 Add X10, X10, 16
	055 Move W2, 14
	056 Move X0, X22
	057 Call 0x1C5D788
	058 Move W9, [X10]
	059 Add W9, W9, 14
	060 Add X8, X8, W9
	061 Add X0, X8, 312
	062 Move X8, [X0]
	063 Move X3, [X0+8]
	064 Move X0, X22
	065 Move X1, X20
	066 Move X2, X19
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move X8, [X20+104]
	069 Add W21, W21, 1
	070 Compare X8, 0
	071 JumpIfNotEqual {35}
	072 Call 0x1C17F20
	073 Move X20, [X31+48]
	074 Move X19, [X31+56]
	075 Move X22, [X31+32]
	076 Move X21, [X31+40]
	077 Move X24, [X31+16]
	078 Move X23, [X31+24]
	079 Move X30, [X31+64]
	080 Return 
	081 Call 0x1C17F20
	082 Move X19, X0
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X0, X19
	085 Call 0x3EB2AD0
	086 Move X19, X0
	087 Move X0, 0x2256000
	088 Move X0, [X0+2000]
	089 Call 0x1C17D08
	090 Move X8, [X19]
	091 Move X1, [X8]
	092 Call 0x1C18270
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {117}
	097 Move X19, [X19]
	098 Call 0x3EB2AE0
	099 Move X0, 0x225E000
	100 Move X0, [X0+2224]
	101 Call 0x1C17D08
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move X0, X19
	107 Move X20, [X31+48]
	108 Move X19, [X31+56]
	109 Move X22, [X31+32]
	110 Move X21, [X31+40]
	111 Move X24, [X31+16]
	112 Move X23, [X31+24]
	113 Move X1, X31
	114 Move X30, [X31+64]
	115 Call Log.Exception, X0
	116 Return 
	117 Move W0, 8
	118 Call 0x3EB2AF0
	119 Move X8, [X19]
	120 Move [X0], X8
	121 Move X1, 0x2017000
	122 Add X1, X1, 3672
	123 Move X2, X31
	124 Call 0x3EB2B00
	125 Move X19, X0
	126 Call 0x3EB2AE0
	127 Move X0, X19
	128 Call 0x1D2D690
	129 Call 0x1991590

Method: System.Threading.Tasks.Task`1<System.Boolean> SendHostMigrationSnapshot()

Disassembly:
	0x01E9ED14 LDR V0, [X19]
	0x01E9ED18 STR X8, [X31 + 0x30]
	0x01E9ED1C STR V0, [X31 + 0x2]
	0x01E9ED20 CBZ X0, 0x1E9ED64
	0x01E9ED24 LDR V0, [X31 + 0x2]
	0x01E9ED28 LDR X8, [X31 + 0x30]
	0x01E9ED2C ADD X1, X31, 0x0
	0x01E9ED30 MOV X2, X31
	0x01E9ED34 STR V0, [X31]
	0x01E9ED38 STR X8, [X31 + 0x10]
	0x01E9ED3C BL 0x1ECFDF0
	0x01E9ED40 LDR X8, [X21 + 0x28]
	0x01E9ED44 LDR X9, [X31 + 0x38]
	0x01E9ED48 CMP X8, X9
	0x01E9ED4C B.NE 0x1E9ED68
	0x01E9ED50 LDP X20, X19, [X31 + 0x60]
	0x01E9ED54 LDP X22, X21, [X31 + 0x50]
	0x01E9ED58 LDR X30, [X31 + 0x40]
	0x01E9ED5C ADD X31, X31, 0x70
	0x01E9ED60 RET
	0x01E9ED64 BL 0x1C16F20
	0x01E9ED68 BL 0x3EB1B20
	0x01E9ED6C SUB X31, X31, 0x80
	0x01E9ED70 STR X30, [X31 + 0x40]
	0x01E9ED74 STP X24, X23, [X31 + 0x50]
	0x01E9ED78 STP X22, X21, [X31 + 0x60]
	0x01E9ED7C STP X20, X19, [X31 + 0x70]
	0x01E9ED80 MRS X23, 0xC000
	0x01E9ED84 LDR X8, [X23 + 0x28]
	0x01E9ED88 ADRP X24, 0x253B000
	0x01E9ED8C MOV X19, X3
	0x01E9ED90 MOV X20, X2
	0x01E9ED94 STR X8, [X31 + 0x38]
	0x01E9ED98 LDRB W8, [X24 + 0x31B]
	0x01E9ED9C MOV X21, X1
	0x01E9EDA0 MOV X22, X0
	0x01E9EDA4 TBNZ X8, 0x0, 0x1E9EDBC
	0x01E9EDA8 ADRP X0, 0x2260000
	0x01E9EDAC LDR X0, [X0 + 0x7E0]
	0x01E9EDB0 BL 0x1C16CF4
	0x01E9EDB4 MOVZ W8, 0x1
	0x01E9EDB8 STRB W8, [X24 + 0x31B]
	0x01E9EDBC LDR X0, [X22 + 0x50]
	0x01E9EDC0 CBZ X0, 0x1E9EDD4
	0x01E9EDC4 MOV X1, X31
	0x01E9EDC8 BL 0x1EBDF30
	0x01E9EDCC TBNZ X0, 0x0, 0x1E9EE70
	0x01E9EDD0 LDR X0, [X22 + 0x50]
	0x01E9EDD4 LDR X8, [X21 + 0x10]
	0x01E9EDD8 LDR V0, [X21]
	0x01E9EDDC STR X8, [X31 + 0x30]
	0x01E9EDE0 STR V0, [X31 + 0x2]
	0x01E9EDE4 CBZ X0, 0x1E9EE6C
	0x01E9EDE8 ADRP X9, 0x2260000
	0x01E9EDEC LDR X9, [X9 + 0x7E0]
	0x01E9EDF0 LDR X8, [X0]
	0x01E9EDF4 LDR X1, [X9]
	0x01E9EDF8 LDRB W10, [X8 + 0x130]
	0x01E9EDFC LDRB W9, [X1 + 0x130]
	0x01E9EE00 CMP W10, W9
	0x01E9EE04 B.CC 0x1E9EE68
	0x01E9EE08 LDR X8, [X8 + 0xC8]
	0x01E9EE0C ADD X8, X8, X9, 0x3, LSL
	0x01E9EE10 LDUR X8, [X8 - 0x8]
	0x01E9EE14 CMP X8, X1
	0x01E9EE18 B.NE 0x1E9EE68
	0x01E9EE1C LDR V0, [X31 + 0x2]
	0x01E9EE20 LDR X8, [X31 + 0x30]
	0x01E9EE24 ADD X1, X31, 0x0
	0x01E9EE28 MOV X2, X20
	0x01E9EE2C MOV X3, X19
	0x01E9EE30 MOV X4, X31
	0x01E9EE34 STR V0, [X31]
	0x01E9EE38 STR X8, [X31 + 0x10]
	0x01E9EE3C BL 0x1ECC10C
	0x01E9EE40 LDR X8, [X23 + 0x28]
	0x01E9EE44 LDR X9, [X31 + 0x38]
	0x01E9EE48 CMP X8, X9
	0x01E9EE4C B.NE 0x1E9EEB8
	0x01E9EE50 LDP X20, X19, [X31 + 0x70]
	0x01E9EE54 LDP X22, X21, [X31 + 0x60]
	0x01E9EE58 LDP X24, X23, [X31 + 0x50]
	0x01E9EE5C LDR X30, [X31 + 0x40]
	0x01E9EE60 ADD X31, X31, 0x80
	0x01E9EE64 RET
	0x01E9EE68 BL 0x1C171E0
	0x01E9EE6C BL 0x1C16F20
	0x01E9EE70 ADRP X0, 0x2255000
	0x01E9EE74 LDR X0, [X0 + 0x5B0]
	0x01E9EE78 BL 0x1C16D08
	0x01E9EE7C BL 0x1C16F10
	0x01E9EE80 MOV X19, X0
	0x01E9EE84 ADRP X0, 0x2260000
	0x01E9EE88 LDR X0, [X0 + 0x7F8]
	0x01E9EE8C BL 0x1C16D08
	0x01E9EE90 MOV X1, X0
	0x01E9EE94 MOV X0, X19
	0x01E9EE98 MOV X2, X31
	0x01E9EE9C BL 0x337DF1C
	0x01E9EEA0 ADRP X0, 0x2260000
	0x01E9EEA4 LDR X0, [X0 + 0x800]
	0x01E9EEA8 BL 0x1C16D08
	0x01E9EEAC MOV X1, X0
	0x01E9EEB0 MOV X0, X19
	0x01E9EEB4 BL 0x1C16DEC
	0x01E9EEB8 BL 0x3EB1B20
	0x01E9EEBC MOVZ W1, 0x1
	0x01E9EEC0 MOV W2, W31
	0x01E9EEC4 MOV W3, W31
	0x01E9EEC8 B 0x1E9EECC
	0x01E9EECC SUB X31, X31, 0xA0
	0x01E9EED0 STR X30, [X31 + 0x60]
	0x01E9EED4 STP X24, X23, [X31 + 0x70]
	0x01E9EED8 STP X22, X21, [X31 + 0x80]
	0x01E9EEDC STP X20, X19, [X31 + 0x90]
	0x01E9EEE0 ADRP X24, 0x253B000
	0x01E9EEE4 ADRP X20, 0x2260000
	0x01E9EEE8 LDRB W8, [X24 + 0x31C]
	0x01E9EEEC LDR X20, [X20 + 0x808]
	0x01E9EEF0 MOV W21, W3

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x253C000
	008 Move W8, [X20+778]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0x2256000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move X0, 0x225F000
	018 Move X0, [X0+2368]
	019 Call 0x1C17CF4
	020 Move X0, 0x2261000
	021 Move X0, [X0+1920]
	022 Call 0x1C17CF4
	023 Move X0, 0x225E000
	024 Move X0, [X0+2048]
	025 Call 0x1C17CF4
	026 Move X0, 0x2261000
	027 Move X0, [X0+1928]
	028 Call 0x1C17CF4
	029 Move X0, 0x2257000
	030 Move X0, [X0+1976]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+778], W8
	034 Move X21, 0x2257000
	035 Move X20, 0x225E000
	036 Move X0, [X19+80]
	037 Move X21, [X21+1976]
	038 Move X20, [X20+2048]
	039 Compare X0, 0
	040 JumpIfEqual {87}
	041 Move X1, X31
	042 Call Simulation.get_IsServer, X0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {87}
	047 Move W8, [X19+392]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X0, X19
	050 Call NetworkRunner.get_IsInitialized, X0
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {87}
	055 Move X0, X19
	056 Call NetworkRunner.get_IsCloudReady, X0
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {87}
	061 Move X0, [X19+432]
	062 Compare X0, 0
	063 JumpIfEqual {144}
	064 Move X1, X31
	065 Call CloudServices.get_CurrentJoinStage, X0
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, [X21]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X1, [X20]
	073 Move W0, 1
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X0, [X19+432]
	076 Compare X0, 0
	077 JumpIfEqual {144}
	078 Move X1, X31
	079 Call CloudServices.get_CurrentProtocolMessageVersion, X0
	080 And W8, W0, 255
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move W22, [X19+52]
	083 Call 0x1C17D44
	084 Move W23, [X19+48]
	085 Call 0x1C17D44
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X0, [X21]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move X1, [X20]
	093 Move W0, W31
	094 Move X20, [X31+32]
	095 Move X19, [X31+40]
	096 Move X22, [X31+16]
	097 Move X21, [X31+24]
	098 Move X30, [X31+48]
	099 Move X23, [X31+56]
	100 Call Task.FromResult, X0
	101 Return X0
	102 Move X8, [X19+40]
	103 Compare X8, 0
	104 JumpIfNotEqual {111}
	105 Move X8, 0x2256000
	106 Move X8, [X8+1560]
	107 Move W1, 4096
	108 Move X0, [X8]
	109 Call 0x1C17D6C
	110 Move [X19+40], X0
	111 Move X8, 0x225F000
	112 Move X8, [X8+2368]
	113 Move X0, [X8]
	114 Call 0x1C17F10
	115 Move X8, 0x2261000
	116 Move X8, [X8+1920]
	117 Move X1, X19
	118 Move X3, X31
	119 Move X20, X0
	120 Move X2, [X8]
	121 Call Func`1<Boolean>..ctor, X0, X1, X2
	122 Move X0, X19
	123 Call NetworkRunner.get_OperationsCancellationToken, X0
	124 Move X8, [X21]
	125 Move X19, X0
	126 Move W9, [X8+224]
	127 Compare W9, 0
	128 JumpIfNotEqual {131}
	129 Move X0, X8
	130 Call 0x1C17DFC
	131 Move X8, 0x2261000
	132 Move X8, [X8+1928]
	133 Move X0, X20
	134 Move X1, X19
	135 Move X20, [X31+32]
	136 Move X19, [X31+40]
	137 Move X2, [X8]
	138 Move X22, [X31+16]
	139 Move X21, [X31+24]
	140 Move X30, [X31+48]
	141 Move X23, [X31+56]
	142 Call 0x229B964, X0, X1
	143 Return X0
	144 Call 0x1C17F20

Method: System.Boolean GetServerSnapshot(ref System.Byte[] data, out Fusion.Tick tick, out System.UInt32 idCounter, out System.Int32 length)

Disassembly:
	0x01E9F098 BL 0x1C16CF4
	0x01E9F09C MOVZ W8, 0x1
	0x01E9F0A0 STRB W8, [X19 + 0xF1D]
	0x01E9F0A4 LDR X0, [X23]
	0x01E9F0A8 LDR W8, [X0 + 0xE0]
	0x01E9F0AC CBNZ W8, 0x1E9F0B8
	0x01E9F0B0 BL 0x1C16DFC
	0x01E9F0B4 LDR X0, [X23]
	0x01E9F0B8 LDR X8, [X0 + 0xB8]
	0x01E9F0BC LDR X0, [X8 + 0x30]
	0x01E9F0C0 B 0x1E9F4E4
	0x01E9F0C4 ADD X8, X19, 0x40
	0x01E9F0C8 MOV X0, X19
	0x01E9F0CC STR W31, [X8 + 0x8]
	0x01E9F0D0 STR X31, [X8]
	0x01E9F0D4 BL 0x1E9F728
	0x01E9F0D8 LDR W8, [X19 + 0x5C]
	0x01E9F0DC CBZ W8, 0x1E9F144
	0x01E9F0E0 ADRP X8, 0x225D000
	0x01E9F0E4 LDR X8, [X8 + 0xE80]
	0x01E9F0E8 LDR X0, [X8]
	0x01E9F0EC LDR W8, [X0 + 0xE0]
	0x01E9F0F0 CBNZ W8, 0x1E9F0F8
	0x01E9F0F4 BL 0x1C16DFC
	0x01E9F0F8 MOV X0, X19
	0x01E9F0FC BL 0x1E9F944
	0x01E9F100 LDRB W8, [X19 + 0x5C]
	0x01E9F104 TBNZ X8, 0x0, 0x1E9F074
	0x01E9F108 TBZ X21, 0x0, 0x1E9F074
	0x01E9F10C MOV X0, X20
	0x01E9F110 BL 0x1E9F9C4
	0x01E9F114 ADRP X8, 0x225D000
	0x01E9F118 LDR X8, [X8 + 0xC20]
	0x01E9F11C MOVZ W1, 0x1
	0x01E9F120 LDR X0, [X8]
	0x01E9F124 BL 0x1C16D6C
	0x01E9F128 MOV X21, X0
	0x01E9F12C MOV X0, X19
	0x01E9F130 BL 0x1E9FBC0
	0x01E9F134 CBZ X21, 0x1E9F500
	0x01E9F138 MOV X19, X0
	0x01E9F13C CBNZ X0, 0x1E9F4B8
	0x01E9F140 B 0x1E9F4CC
	0x01E9F144 LDR X0, [X19 + 0x50]
	0x01E9F148 MOVZ W8, 0x1
	0x01E9F14C STR W8, [X19 + 0x5C]
	0x01E9F150 CBZ X0, 0x1E9F15C
	0x01E9F154 MOV X1, X31
	0x01E9F158 BL 0x1EC2918
	0x01E9F15C LDR X21, [X19 + 0xA8]
	0x01E9F160 CBZ X21, 0x1E9F1CC
	0x01E9F164 ADRP X10, 0x225F000
	0x01E9F168 LDR X8, [X21]
	0x01E9F16C LDR X10, [X10 + 0x840]
	0x01E9F170 LDRH W9, [X8 + 0x12E]
	0x01E9F174 LDR X1, [X10]
	0x01E9F178 CBZ X9, 0x1E9F19C
	0x01E9F17C LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x253B000
	009 Move W8, [X24+779]
	010 Move X19, X4
	011 Move X20, X3
	012 Move X21, X2
	013 Move X22, X1
	014 Move X23, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x2260000
	020 Move X0, [X0+1944]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+779], W8
	024 Move X23, [X23+80]
	025 Compare X23, 0
	026 JumpIfEqual {38}
	027 Move X8, 0x2260000
	028 Move X8, [X8+1944]
	029 Move X9, [X23]
	030 Move X8, [X8]
	031 Move W11, [X9+304]
	032 Move W10, [X8+304]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X9, [X9+200]
	035 Add X9, X9, X10
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W0, W31
	039 Move [X21], W31
	040 Move [X20], W31
	041 Move [X19], W31
	042 Move X20, [X31+48]
	043 Move X19, [X31+56]
	044 Move X22, [X31+32]
	045 Move X21, [X31+40]
	046 Move X24, [X31+16]
	047 Move X23, [X31+24]
	048 Move X30, [X31+64]
	049 Return X0
	050 Move X8, [X22]
	051 Compare X8, 0
	052 JumpIfEqual {66}
	053 Move W2, [X8+24]
	054 Move X0, X23
	055 Move X1, X22
	056 Move X3, X31
	057 Call Server.WriteHostMigrationData, X0, X1, X2
	058 Move [X19], W0
	059 Move W8, [X23+72]
	060 Move [X21], W8
	061 Move W8, [X23+328]
	062 Move [X20], W8
	063 Move W8, [X19]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 NotImplemented "Instruction CSET not yet implemented."
	066 Call 0x1C17F20

Method: Fusion.NetworkRunner/BuildTypes get_BuildType()

Disassembly:
	0x01E9F180 ADD X10, X10, 0x8
	0x01E9F184 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Void add_ObjectAcquired(Fusion.NetworkRunner/ObjectDelegate value)

Disassembly:
	0x01E9F188 CMP X11, X1
	0x01E9F18C B.EQ 0x1E9F1AC
	0x01E9F190 SUBS X9, X9, 0x1
	0x01E9F194 ADD X10, X10, 0x10
	0x01E9F198 B.NE 0x1E9F184
	0x01E9F19C MOVZ W2, 0x1
	0x01E9F1A0 MOV X0, X21
	0x01E9F1A4 BL 0x1C5C788
	0x01E9F1A8 B 0x1E9F1BC
	0x01E9F1AC LDR W9, [X10]
	0x01E9F1B0 ADD W9, W9, 0x1
	0x01E9F1B4 ADD X8, X8, W9, 0x4, SXTW
	0x01E9F1B8 ADD X0, X8, 0x138
	0x01E9F1BC LDP X8, X2, [X0]
	0x01E9F1C0 MOV X0, X21
	0x01E9F1C4 MOV X1, X19
	0x01E9F1C8 BLR X8
	0x01E9F1CC ADRP X8, 0x225D000
	0x01E9F1D0 LDR X8, [X8 + 0xE80]
	0x01E9F1D4 LDR X0, [X8]
	0x01E9F1D8 LDR W8, [X0 + 0xE0]
	0x01E9F1DC CBNZ W8, 0x1E9F1E4
	0x01E9F1E0 BL 0x1C16DFC
	0x01E9F1E4 MOV X0, X19
	0x01E9F1E8 BL 0x1E9F944
	0x01E9F1EC BL 0x1E9FD48
	0x01E9F1F0 MOV X0, X20
	0x01E9F1F4 BL 0x1E9F9C4
	0x01E9F1F8 LDR X8, [X19 + 0x50]
	0x01E9F1FC CBZ X8, 0x1E9F2A8
	0x01E9F200 LDR X0, [X8 + 0x150]
	0x01E9F204 CBZ X0, 0x1E9F2A8
	0x01E9F208 ADRP X8, 0x225F000
	0x01E9F20C LDR X8, [X8 + 0x810]
	0x01E9F210 LDR X1, [X8]
	0x01E9F214 BL 0x2A673D0
	0x01E9F218 ADRP X8, 0x225F000
	0x01E9F21C LDR X8, [X8 + 0x818]
	0x01E9F220 LDR X1, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x253B000
	007 Move W8, [X21+780]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2260000
	015 Move X0, [X0+1952]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+780], W8
	019 Move X22, 0x2260000
	020 Add X20, X20, 56
	021 Move X21, [X20]
	022 Move X22, [X22+1952]
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Combine, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Void remove_ObjectAcquired(Fusion.NetworkRunner/ObjectDelegate value)

Disassembly:
	0x01E9F224 BL 0x21D79F4
	0x01E9F228 CBZ X0, 0x1E9F500
	0x01E9F22C ADRP X8, 0x225F000
	0x01E9F230 LDR X8, [X8 + 0x848]
	0x01E9F234 LDR X1, [X8]
	0x01E9F238 ADD X8, X31, 0x8
	0x01E9F23C BL 0x301CB58
	0x01E9F240 LDUR V0, [X31 + 0x8]
	0x01E9F244 LDR X8, [X31 + 0x18]
	0x01E9F248 ADRP X21, 0x225F000
	0x01E9F24C STR V0, [X31 + 0x4]
	0x01E9F250 STR X8, [X31 + 0x50]
	0x01E9F254 LDR X21, [X21 + 0x828]
	0x01E9F258 LDR X1, [X21]
	0x01E9F25C ADD X0, X31, 0x40
	0x01E9F260 BL 0x2BC4350
	0x01E9F264 TBZ X0, 0x0, 0x1E9F294
	0x01E9F268 LDR X8, [X31 + 0x50]
	0x01E9F26C CBZ X8, 0x1E9F4FC
	0x01E9F270 LDR X1, [X8 + 0xB8]
	0x01E9F274 CBZ X1, 0x1E9F258
	0x01E9F278 LDRB W8, [X1 + 0x60]
	0x01E9F27C TBNZ X8, 0x1, 0x1E9F258
	0x01E9F280 MOV X0, X19
	0x01E9F284 MOV W2, W31
	0x01E9F288 MOV W3, W31
	0x01E9F28C BL 0x1E9FF74
	0x01E9F290 B 0x1E9F258
	0x01E9F294 ADRP X8, 0x225F000
	0x01E9F298 LDR X8, [X8 + 0x820]
	0x01E9F29C ADD X0, X31, 0x40
	0x01E9F2A0 LDR X1, [X8]
	0x01E9F2A4 BL 0x2BC434C
	0x01E9F2A8 ADRP X8, 0x225E000
	0x01E9F2AC LDR X8, [X8 + 0xAA8]
	0x01E9F2B0 LDR X0, [X8]
	0x01E9F2B4 BL 0x1C16F10
	0x01E9F2B8 ADRP X8, 0x225E000
	0x01E9F2BC LDR X8, [X8 + 0xAA0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x253B000
	007 Move W8, [X21+781]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2260000
	015 Move X0, [X0+1952]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+781], W8
	019 Move X22, 0x2260000
	020 Add X20, X20, 56
	021 Move X21, [X20]
	022 Move X22, [X22+1952]
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Remove, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Void ResetStatics()

Disassembly:
	0x01E9F2C0 MOV X21, X0
	0x01E9F2C4 LDR X1, [X8]
	0x01E9F2C8 BL 0x301B7C4
	0x01E9F2CC LDR X0, [X19 + 0x60]
	0x01E9F2D0 CBZ X0, 0x1E9F2E0
	0x01E9F2D4 MOV X1, X21
	0x01E9F2D8 MOV X2, X31
	0x01E9F2DC BL 0x1E7B830
	0x01E9F2E0 CBZ X21, 0x1E9F500
	0x01E9F2E4 ADRP X8, 0x225E000
	0x01E9F2E8 LDR X8, [X8 + 0x8C0]
	0x01E9F2EC MOV X0, X21
	0x01E9F2F0 LDR X1, [X8]
	0x01E9F2F4 ADD X8, X31, 0x8
	0x01E9F2F8 BL 0x301CB58
	0x01E9F2FC LDUR V0, [X31 + 0x8]
	0x01E9F300 LDR X8, [X31 + 0x18]
	0x01E9F304 ADRP X22, 0x225E000
	0x01E9F308 LDR X22, [X22 + 0x8A8]
	0x01E9F30C STR V0, [X31 + 0x2]
	0x01E9F310 STR X8, [X31 + 0x30]
	0x01E9F314 ADRP X23, 0x225F000
	0x01E9F318 LDR X23, [X23 + 0x838]
	0x01E9F31C LDR X1, [X22]
	0x01E9F320 ADD X0, X31, 0x20
	0x01E9F324 BL 0x2BC4350
	0x01E9F328 TBZ X0, 0x0, 0x1E9F3A4
	0x01E9F32C LDR X0, [X31 + 0x30]
	0x01E9F330 LDR X1, [X23]
	0x01E9F334 BL 0x1C16E00
	0x01E9F338 MOV X21, X0
	0x01E9F33C CBZ X0, 0x1E9F31C
	0x01E9F340 LDR X8, [X21]
	0x01E9F344 LDR X1, [X23]
	0x01E9F348 LDRH W9, [X8 + 0x12E]
	0x01E9F34C CBZ X9, 0x1E9F370
	0x01E9F350 LDR X10, [X8 + 0xB0]
	0x01E9F354 ADD X10, X10, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x253B000
	005 Move X19, 0x225E000
	006 Move W8, [X20+782]
	007 Move X19, [X19+3712]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x2260000
	013 Move X0, [X0+1960]
	014 Call 0x1C17CF4
	015 Move X0, 0x225E000
	016 Move X0, [X0+3712]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+782], W8
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X19]
	026 Move X8, [X0+184]
	027 Move X8, [X8]
	028 Compare X8, 0
	029 JumpIfEqual {48}
	030 Move W2, [X8+24]
	031 Move W9, [X8+28]
	032 Add W9, W9, 1
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move [X8+24], W31
	035 Move [X8+28], W9
	036 Move X0, [X8+16]
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move W1, W31
	040 Move X3, X31
	041 Move X30, [X31+32]
	042 Call Array.Clear, X0, X1, X2
	043 Return 
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return 
	048 Call 0x1C17F20

Method: System.Boolean get_IsSimulationUpdating()

Disassembly:
	0x01E9F358 LDUR X11, [X10 - 0x8]
	0x01E9F35C CMP X11, X1
	0x01E9F360 B.EQ 0x1E9F380
	0x01E9F364 SUBS X9, X9, 0x1

ISIL:
	001 Move W8, [X0+88]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Void OnValidate()

Disassembly:
	0x01E9F368 ADD X10, X10, 0x10
	0x01E9F36C B.NE 0x1E9F358
	0x01E9F370 MOV X0, X21
	0x01E9F374 MOV W2, W31
	0x01E9F378 BL 0x1C5C788
	0x01E9F37C B 0x1E9F38C
	0x01E9F380 LDRSW X9, [X10]
	0x01E9F384 ADD X8, X8, X9, 0x4, LSL
	0x01E9F388 ADD X0, X8, 0x138
	0x01E9F38C LDP X8, X3, [X0]
	0x01E9F390 MOV X0, X21
	0x01E9F394 MOV X1, X19
	0x01E9F398 MOV W2, W31
	0x01E9F39C BLR X8
	0x01E9F3A0 B 0x1E9F31C
	0x01E9F3A4 ADRP X8, 0x225E000
	0x01E9F3A8 LDR X8, [X8 + 0x8A0]
	0x01E9F3AC ADD X0, X31, 0x20
	0x01E9F3B0 LDR X1, [X8]
	0x01E9F3B4 BL 0x2BC434C
	0x01E9F3B8 LDR X8, [X19 + 0x98]
	0x01E9F3BC CBZ X8, 0x1E9F3DC
	0x01E9F3C0 LDR X0, [X8 + 0x38]
	0x01E9F3C4 CBZ X0, 0x1E9F3DC
	0x01E9F3C8 LDRB W8, [X0 + 0x11]
	0x01E9F3CC CBZ W8, 0x1E9F3DC
	0x01E9F3D0 MOVZ W1, 0x1
	0x01E9F3D4 MOV X2, X31
	0x01E9F3D8 BL 0x1E9B76C
	0x01E9F3DC LDR X0, [X19 + 0x50]
	0x01E9F3E0 CBZ X0, 0x1E9F3EC
	0x01E9F3E4 MOV X1, X31
	0x01E9F3E8 BL 0x1EC2ADC
	0x01E9F3EC LDR X21, [X19 + 0x100]
	0x01E9F3F0 STR X31, [X19 + 0x50]
	0x01E9F3F4 CBZ X21, 0x1E9F45C
	0x01E9F3F8 ADRP X10, 0x225B000
	0x01E9F3FC LDR X8, [X21]
	0x01E9F400 LDR X10, [X10 + 0xCB0]
	0x01E9F404 LDRH W9, [X8 + 0x12E]
	0x01E9F408 LDR X1, [X10]
	0x01E9F40C CBZ X9, 0x1E9F430
	0x01E9F410 LDR X10, [X8 + 0xB0]
	0x01E9F414 ADD X10, X10, 0x8
	0x01E9F418 LDUR X11, [X10 - 0x8]
	0x01E9F41C CMP X11, X1
	0x01E9F420 B.EQ 0x1E9F440
	0x01E9F424 SUBS X9, X9, 0x1
	0x01E9F428 ADD X10, X10, 0x10
	0x01E9F42C B.NE 0x1E9F418
	0x01E9F430 MOVZ W2, 0x1
	0x01E9F434 MOV X0, X21
	0x01E9F438 BL 0x1C5C788
	0x01E9F43C B 0x1E9F450
	0x01E9F440 LDR W9, [X10]
	0x01E9F444 ADD W9, W9, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x253B000
	007 Move X22, 0x2260000
	008 Move X20, 0x2255000
	009 Move W8, [X21+783]
	010 Move X22, [X22+1968]
	011 Move X20, [X20+1432]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x2260000
	018 Move X0, [X0+1968]
	019 Call 0x1C17CF4
	020 Move X0, 0x2255000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move X0, 0x2255000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move X0, 0x2260000
	027 Move X0, [X0+1976]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+783], W8
	031 Move X1, [X22]
	032 Move X0, X19
	033 Call 0x21A4894, X0
	034 Move X8, [X20]
	035 Move X19, X0
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move X0, X19
	042 Move X1, X31
	043 Call Object.op_Implicit, X0
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {66}
	048 Move X8, 0x2255000
	049 Move X8, [X8+2600]
	050 Move X19, 0x2260000
	051 Move X0, [X8]
	052 Move W8, [X0+224]
	053 Move X19, [X19+1976]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X0, [X19]
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X1, X31
	063 Move X30, [X31+48]
	064 Call Debug.LogWarning, X0
	065 Return 
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Return 

Method: System.Boolean get_IsInitialized()

Disassembly:
	0x01E9EF08 LDR X0, [X0 + 0x810]
	0x01E9EF0C BL 0x1C16CF4
	0x01E9EF10 ADRP X0, 0x2260000
	0x01E9EF14 LDR X0, [X0 + 0x818]
	0x01E9EF18 BL 0x1C16CF4
	0x01E9EF1C ADRP X0, 0x2260000
	0x01E9EF20 LDR X0, [X0 + 0x820]
	0x01E9EF24 BL 0x1C16CF4
	0x01E9EF28 ADRP X0, 0x225F000
	0x01E9EF2C LDR X0, [X0 + 0x8A0]
	0x01E9EF30 BL 0x1C16CF4
	0x01E9EF34 ADRP X0, 0x2260000
	0x01E9EF38 LDR X0, [X0 + 0x828]
	0x01E9EF3C BL 0x1C16CF4
	0x01E9EF40 ADRP X0, 0x225F000
	0x01E9EF44 LDR X0, [X0 + 0x8A8]
	0x01E9EF48 BL 0x1C16CF4
	0x01E9EF4C ADRP X0, 0x225F000
	0x01E9EF50 LDR X0, [X0 + 0x8B0]
	0x01E9EF54 BL 0x1C16CF4
	0x01E9EF58 ADRP X0, 0x2260000
	0x01E9EF5C LDR X0, [X0 + 0x830]
	0x01E9EF60 BL 0x1C16CF4
	0x01E9EF64 ADRP X0, 0x2260000
	0x01E9EF68 LDR X0, [X0 + 0x838]
	0x01E9EF6C BL 0x1C16CF4
	0x01E9EF70 ADRP X0, 0x2260000
	0x01E9EF74 LDR X0, [X0 + 0x840]
	0x01E9EF78 BL 0x1C16CF4
	0x01E9EF7C ADRP X0, 0x225C000
	0x01E9EF80 LDR X0, [X0 + 0xCB0]
	0x01E9EF84 BL 0x1C16CF4
	0x01E9EF88 ADRP X0, 0x2260000
	0x01E9EF8C LDR X0, [X0 + 0x848]
	0x01E9EF90 BL 0x1C16CF4
	0x01E9EF94 ADRP X0, 0x225F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x253C000
	005 Move W8, [X20+784]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x2261000
	012 Move X0, [X0+1776]
	013 Call 0x1C17CF4
	014 Move X0, 0x2261000
	015 Move X0, [X0+1936]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+784], W8
	019 Move X8, [X19+128]
	020 Compare X8, 0
	021 JumpIfEqual {45}
	022 Move X0, [X8+16]
	023 Compare X0, 0
	024 JumpIfEqual {50}
	025 Move X1, X31
	026 Call Task.get_IsCompleted, X0
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {45}
	031 Move X8, [X19+128]
	032 Compare X8, 0
	033 JumpIfEqual {50}
	034 Move X0, [X8+16]
	035 Compare X0, 0
	036 JumpIfEqual {50}
	037 Move X8, 0x2261000
	038 Move X8, [X8+1936]
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X1, [X8]
	042 Move X30, [X31+32]
	043 Call Task`1<Boolean>.get_Result, X0
	044 Return X0
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move W0, W31
	048 Move X30, [X31+32]
	049 Return X0
	050 Call 0x1C17F20

Method: System.Boolean get_ProvideInput()

Disassembly:
	0x01E9F448 ADD X8, X8, W9, 0x4, SXTW
	0x01E9F44C ADD X0, X8, 0x138
	0x01E9F450 LDP X8, X1, [X0]
	0x01E9F454 MOV X0, X21
	0x01E9F458 BLR X8
	0x01E9F45C STR X31, [X19 + 0x100]
	0x01E9F460 STR W31, [X19 + 0x188]
	0x01E9F464 ADRP X8, 0x225D000
	0x01E9F468 LDR X8, [X8 + 0xEE8]
	0x01E9F46C LDR X0, [X8]
	0x01E9F470 BL 0x1C16F10
	0x01E9F474 MOV X1, X31
	0x01E9F478 MOV X2, X31
	0x01E9F47C MOV X21, X0
	0x01E9F480 BL 0x1E6A4C8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x253B000
	005 Move W8, [X20+785]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x225F000
	012 Move X0, [X0+368]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+785], W8
	016 Move W0, [X19+209]
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Return X0

Method: System.Void set_ProvideInput(System.Boolean value)

Disassembly:
	0x01E9F484 MOV X0, X19
	0x01E9F488 STR X21, [X19 + 0x190]
	0x01E9F48C BL 0x1E9FBC0
	0x01E9F490 ADRP X8, 0x225D000
	0x01E9F494 LDR X8, [X8 + 0xC20]
	0x01E9F498 MOV X19, X0
	0x01E9F49C MOVZ W1, 0x1
	0x01E9F4A0 LDR X8, [X8]
	0x01E9F4A4 MOV X0, X8
	0x01E9F4A8 BL 0x1C16D6C
	0x01E9F4AC CBZ X0, 0x1E9F500
	0x01E9F4B0 MOV X21, X0
	0x01E9F4B4 CBZ X19, 0x1E9F4CC
	0x01E9F4B8 LDR X8, [X21]
	0x01E9F4BC MOV X0, X19
	0x01E9F4C0 LDR X1, [X8 + 0x40]
	0x01E9F4C4 BL 0x1C16E00
	0x01E9F4C8 CBZ X0, 0x1E9F508
	0x01E9F4CC LDR W8, [X21 + 0x18]
	0x01E9F4D0 CBZ W8, 0x1E9F504
	0x01E9F4D4 MOV X0, X20
	0x01E9F4D8 MOV X1, X21
	0x01E9F4DC STR X19, [X21 + 0x20]
	0x01E9F4E0 BL 0x1E9FC80
	0x01E9F4E4 LDP X20, X19, [X31 + 0x90]
	0x01E9F4E8 LDP X22, X21, [X31 + 0x80]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x253B000
	007 Move X21, 0x2259000
	008 Move W8, [X22+786]
	009 Move X21, [X21+4056]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2259000
	017 Move X0, [X0+4056]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+786], W8
	021 Move X2, [X21]
	022 And W1, W20, 1
	023 Add X0, X31, 12
	024 NotImplemented "Instruction STRH not yet implemented."
	025 Call Nullable`1<Boolean>..ctor, X0, X1
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X22, [X31+16]
	028 Move X21, [X31+24]
	029 NotImplemented "Instruction STRH not yet implemented."
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X30, [X31+48]
	033 Return 

Method: Fusion.Topologies get_Topology()

Disassembly:
	0x01E9F4EC LDP X24, X23, [X31 + 0x70]
	0x01E9F4F0 LDR X30, [X31 + 0x60]
	0x01E9F4F4 ADD X31, X31, 0xA0
	0x01E9F4F8 RET
	0x01E9F4FC BL 0x1C16F20
	0x01E9F500 BL 0x1C16F20
	0x01E9F504 BL 0x1C16F28
	0x01E9F508 BL 0x1C16F44
	0x01E9F50C MOV X1, X31
	0x01E9F510 BL 0x1C16DEC
	0x01E9F514 CMP W1, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+80]
	003 Compare X8, 0
	004 JumpIfEqual {9}
	005 Move X8, [X8+88]
	006 Compare X8, 0
	007 JumpIfEqual {12}
	008 Move W0, [X8+56]
	009 Move W0, W31
	010 Move X30, [X31+16]
	011 Return X0
	012 Call 0x1C17F20

Method: Fusion.Simulation get_Simulation()

Disassembly:
	0x01E9F518 MOV X21, X0
	0x01E9F51C B.NE 0x1E9F70C

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: Fusion.SimulationModes get_Mode()

Disassembly:
	0x01E9F520 MOV X0, X21
	0x01E9F524 BL 0x3EB1AD0
	0x01E9F528 MOV X21, X0
	0x01E9F52C ADRP X0, 0x2254000
	0x01E9F530 LDR X0, [X0 + 0x7D0]
	0x01E9F534 BL 0x1C16D08

ISIL:
	001 Move X8, [X0+80]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move W0, [X8+76]
	005 Return X0
	006 Move W0, W31
	007 Return X0

Method: Fusion.SimulationStages get_Stage()

Disassembly:
	0x01E9F538 LDR X8, [X21]
	0x01E9F53C LDR X1, [X8]
	0x01E9F540 BL 0x1C17270
	0x01E9F544 TBZ X0, 0x0, 0x1E9F578
	0x01E9F548 LDR X21, [X21]
	0x01E9F54C BL 0x3EB1AE0

ISIL:
	001 Move X8, [X0+80]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move W0, [X8+80]
	005 Return X0
	006 Move W0, W31
	007 Return X0

Method: System.Single get_DeltaTime()

Disassembly:
	0x01E9F550 ADRP X0, 0x225C000
	0x01E9F554 LDR X0, [X0 + 0x8B0]
	0x01E9F558 BL 0x1C16D08
	0x01E9F55C LDR W8, [X0 + 0xE0]
	0x01E9F560 CBNZ W8, 0x1E9F568
	0x01E9F564 BL 0x1C16DFC

ISIL:
	001 Move X0, [X0+80]
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move X1, X31
	005 Call Simulation.get_DeltaTime, X0
	006 Return V0
	007 Move S0, W31
	008 Return V0

Method: System.Single get_SimulationTime()

Disassembly:
	0x01E9F568 MOV X0, X21
	0x01E9F56C MOV X1, X31
	0x01E9F570 BL 0x1E3E4C8
	0x01E9F574 B 0x1E9F15C
	0x01E9F578 MOVZ W0, 0x8
	0x01E9F57C BL 0x3EB1AF0
	0x01E9F580 LDR X8, [X21]
	0x01E9F584 STR X8, [X0]
	0x01E9F588 ADRP X1, 0x2015000
	0x01E9F58C ADD X1, X1, 0xE58

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X1, X31
	006 Call Simulation.get_Time, X0
	007 NotImplemented "Instruction INVALID not yet implemented."
	008 Move S0, W31
	009 Move X30, [X31+16]
	010 Return V0

Method: System.Single get_LocalRenderTime()

Disassembly:
	0x01E9F590 MOV X2, X31
	0x01E9F594 BL 0x3EB1B00
	0x01E9F598 B 0x1E9F62C
	0x01E9F59C MOV X21, X0
	0x01E9F5A0 BL 0x3EB1AE0
	0x01E9F5A4 B 0x1E9F70C
	0x01E9F5A8 CMP W1, 0x1
	0x01E9F5AC MOV X21, X0
	0x01E9F5B0 B.NE 0x1E9F70C
	0x01E9F5B4 MOV X0, X21
	0x01E9F5B8 BL 0x3EB1AD0
	0x01E9F5BC MOV X21, X0
	0x01E9F5C0 ADRP X0, 0x2254000
	0x01E9F5C4 LDR X0, [X0 + 0x7D0]
	0x01E9F5C8 BL 0x1C16D08
	0x01E9F5CC LDR X8, [X21]
	0x01E9F5D0 LDR X1, [X8]
	0x01E9F5D4 BL 0x1C17270
	0x01E9F5D8 TBZ X0, 0x0, 0x1E9F60C
	0x01E9F5DC LDR X21, [X21]
	0x01E9F5E0 BL 0x3EB1AE0
	0x01E9F5E4 ADRP X0, 0x225C000
	0x01E9F5E8 LDR X0, [X0 + 0x8B0]
	0x01E9F5EC BL 0x1C16D08
	0x01E9F5F0 LDR W8, [X0 + 0xE0]
	0x01E9F5F4 CBNZ W8, 0x1E9F5FC
	0x01E9F5F8 BL 0x1C16DFC
	0x01E9F5FC MOV X0, X21
	0x01E9F600 MOV X1, X31
	0x01E9F604 BL 0x1E3E4C8
	0x01E9F608 B 0x1E9F1CC
	0x01E9F60C MOVZ W0, 0x8
	0x01E9F610 BL 0x3EB1AF0
	0x01E9F614 LDR X8, [X21]
	0x01E9F618 STR X8, [X0]
	0x01E9F61C ADRP X1, 0x2015000
	0x01E9F620 ADD X1, X1, 0xE58
	0x01E9F624 MOV X2, X31
	0x01E9F628 BL 0x3EB1B00
	0x01E9F62C MOV X21, X0
	0x01E9F630 BL 0x3EB1AE0
	0x01E9F634 B 0x1E9F70C
	0x01E9F638 B 0x1E9F640
	0x01E9F63C B 0x1E9F640
	0x01E9F640 MOV X21, X0
	0x01E9F644 CMP W1, 0x1
	0x01E9F648 B.NE 0x1E9F678
	0x01E9F64C MOV X0, X21
	0x01E9F650 BL 0x3EB1AD0
	0x01E9F654 LDR X22, [X0]
	0x01E9F658 BL 0x3EB1AE0
	0x01E9F65C ADRP X8, 0x225F000
	0x01E9F660 LDR X8, [X8 + 0x820]
	0x01E9F664 ADD X0, X31, 0x40
	0x01E9F668 LDR X1, [X8]
	0x01E9F66C BL 0x2BC434C
	0x01E9F670 CBZ X22, 0x1E9F2A8
	0x01E9F674 B 0x1E9F6E0
	0x01E9F678 MOV X22, X31
	0x01E9F67C B 0x1E9F684
	0x01E9F680 MOV X21, X0
	0x01E9F684 ADRP X8, 0x225F000
	0x01E9F688 LDR X8, [X8 + 0x820]
	0x01E9F68C LDR X1, [X8]
	0x01E9F690 ADD X0, X31, 0x40
	0x01E9F694 BL 0x2BC434C
	0x01E9F698 CBZ X22, 0x1E9F70C
	0x01E9F69C MOV X0, X22
	0x01E9F6A0 BL 0x1C16F18
	0x01E9F6A4 B 0x1E9F6AC
	0x01E9F6A8 B 0x1E9F6AC
	0x01E9F6AC MOV X21, X0
	0x01E9F6B0 CMP W1, 0x1
	0x01E9F6B4 B.NE 0x1E9F6E8
	0x01E9F6B8 MOV X0, X21
	0x01E9F6BC BL 0x3EB1AD0
	0x01E9F6C0 LDR X22, [X0]
	0x01E9F6C4 BL 0x3EB1AE0
	0x01E9F6C8 ADRP X8, 0x225E000
	0x01E9F6CC LDR X8, [X8 + 0x8A0]
	0x01E9F6D0 ADD X0, X31, 0x20
	0x01E9F6D4 LDR X1, [X8]
	0x01E9F6D8 BL 0x2BC434C
	0x01E9F6DC CBZ X22, 0x1E9F3B8
	0x01E9F6E0 MOV X0, X22
	0x01E9F6E4 BL 0x1C16F18
	0x01E9F6E8 MOV X22, X31
	0x01E9F6EC B 0x1E9F6F4
	0x01E9F6F0 MOV X21, X0
	0x01E9F6F4 ADRP X8, 0x225E000
	0x01E9F6F8 LDR X8, [X8 + 0x8A0]
	0x01E9F6FC LDR X1, [X8]
	0x01E9F700 ADD X0, X31, 0x20
	0x01E9F704 BL 0x2BC434C
	0x01E9F708 CBNZ X22, 0x1E9F714
	0x01E9F70C MOV X0, X21

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x253B000
	009 Move W8, [X20+787]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x2260000
	016 Move X0, [X0+1984]
	017 Call 0x1C17CF4
	018 Move X0, 0x2255000
	019 Move X0, [X0+1448]
	020 Call 0x1C17CF4
	021 Move X0, 0x2260000
	022 Move X0, [X0+1992]
	023 Call 0x1C17CF4
	024 Move X0, 0x2260000
	025 Move X0, [X0+2000]
	026 Call 0x1C17CF4
	027 Move X0, 0x2260000
	028 Move X0, [X0+2008]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+787], W8
	032 Move X8, [X19+80]
	033 Move S8, W31
	034 Compare X8, 0
	035 JumpIfEqual {89}
	036 Move X20, [X8+104]
	037 Compare X20, 0
	038 JumpIfEqual {108}
	039 Move X10, 0x2260000
	040 Move X8, [X20]
	041 Move X10, [X10+1984]
	042 Move X21, 0x2260000
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X10]
	045 Move X21, [X21+2000]
	046 Compare X9, 0
	047 JumpIfEqual {54}
	048 Move X10, [X8+176]
	049 Add X10, X10, 8
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Subtract X9, X9, 1
	053 Add X10, X10, 16
	054 Move W2, 9
	055 Move X0, X20
	056 Call 0x1C5D788
	057 Move W9, [X10]
	058 Add W9, W9, 9
	059 Add X8, X8, W9
	060 Add X0, X8, 312
	061 Move X8, [X0]
	062 Move X1, [X0+8]
	063 Move X0, X20
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X1, [X21]
	066 Move V0, V1
	067 Add X0, X31, 0
	068 Move [X31], X31
	069 Move [X31+8], X31
	070 Call Nullable`1<Double>..ctor, X0, V0
	071 Move V9, [X31+8]
	072 Move X0, [X19+80]
	073 Move W19, [X31]
	074 Compare X0, 0
	075 JumpIfEqual {79}
	076 Move X1, X31
	077 Call Simulation.get_DeltaTime, X0
	078 NotImplemented "Instruction FCVT not yet implemented."
	079 Move D0, X31
	080 And W31, W19, 255
	081 Move X1, [X21]
	082 Subtract D0, D9, D0
	083 Add X0, X31, 0
	084 Move [X31], X31
	085 Move [X31+8], X31
	086 Call Nullable`1<Double>..ctor, X0, V0
	087 Move V0, [X31+8]
	088 NotImplemented "Instruction INVALID not yet implemented."
	089 Move X8, 0x2255000
	090 Move X8, [X8+1448]
	091 Move X0, [X8]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move S1, W31
	097 Move V0, V8
	098 Move X0, X31
	099 Call Math.Max, V0, V1
	100 Move X20, [X31+48]
	101 Move X19, [X31+56]
	102 Move X30, [X31+32]
	103 Move X21, [X31+40]
	104 Move D9, [X31+16]
	105 Move D8, [X31+24]
	106 Add X31, X31, 64
	107 Return V0
	108 Call 0x1C17F20

Method: System.Single get_RemoteRenderTime()

Disassembly:
	0x01E9F710 BL 0x1D2C690
	0x01E9F714 MOV X0, X22
	0x01E9F718 BL 0x1C16F18
	0x01E9F71C BL 0x1990590
	0x01E9F720 MOV X1, X31
	0x01E9F724 B 0x33BDD8C
	0x01E9F728 STP X30, X27, [X31 - 0x50]!
	0x01E9F72C STP X26, X25, [X31 + 0x10]
	0x01E9F730 STP X24, X23, [X31 + 0x20]
	0x01E9F734 STP X22, X21, [X31 + 0x30]
	0x01E9F738 STP X20, X19, [X31 + 0x40]
	0x01E9F73C ADRP X20, 0x253A000
	0x01E9F740 ADRP X23, 0x2254000
	0x01E9F744 LDRB W8, [X20 + 0x32D]
	0x01E9F748 LDR X23, [X23 + 0x598]
	0x01E9F74C MOV X19, X0
	0x01E9F750 TBNZ X8, 0x0, 0x1E9F798
	0x01E9F754 ADRP X0, 0x225F000
	0x01E9F758 LDR X0, [X0 + 0x850]
	0x01E9F75C BL 0x1C16CF4
	0x01E9F760 ADRP X0, 0x2258000
	0x01E9F764 LDR X0, [X0 + 0xF10]
	0x01E9F768 BL 0x1C16CF4
	0x01E9F76C ADRP X0, 0x225F000
	0x01E9F770 LDR X0, [X0 + 0x770]
	0x01E9F774 BL 0x1C16CF4
	0x01E9F778 ADRP X0, 0x225F000
	0x01E9F77C LDR X0, [X0 + 0x858]
	0x01E9F780 BL 0x1C16CF4
	0x01E9F784 ADRP X0, 0x2254000
	0x01E9F788 LDR X0, [X0 + 0x598]
	0x01E9F78C BL 0x1C16CF4
	0x01E9F790 MOVZ W8, 0x1
	0x01E9F794 STRB W8, [X20 + 0x32D]
	0x01E9F798 LDR X0, [X23]
	0x01E9F79C LDR W8, [X0 + 0xE0]
	0x01E9F7A0 CBNZ W8, 0x1E9F7A8
	0x01E9F7A4 BL 0x1C16DFC
	0x01E9F7A8 MOV X0, X19
	0x01E9F7AC MOV X1, X31
	0x01E9F7B0 BL 0x3C38948
	0x01E9F7B4 TBZ X0, 0x0, 0x1E9F918
	0x01E9F7B8 MOV X0, X19
	0x01E9F7BC MOV X1, X31
	0x01E9F7C0 BL 0x3C32ECC
	0x01E9F7C4 LDR X8, [X23]
	0x01E9F7C8 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x253B000
	005 Move W8, [X20+788]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2260000
	012 Move X0, [X0+1984]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+788], W8
	016 Move X8, [X19+80]
	017 Compare X8, 0
	018 JumpIfEqual {38}
	019 Move X19, [X8+104]
	020 Compare X19, 0
	021 JumpIfEqual {52}
	022 Move X10, 0x2260000
	023 Move X8, [X19]
	024 Move X10, [X10+1984]
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move X1, [X10]
	027 Compare X9, 0
	028 JumpIfEqual {35}
	029 Move X10, [X8+176]
	030 Add X10, X10, 8
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract X9, X9, 1
	034 Add X10, X10, 16
	035 Move W2, 9
	036 Move X0, X19
	037 Call 0x1C5D788
	038 Move S0, W31
	039 Move W9, [X10]
	040 Add W9, W9, 9
	041 Add X8, X8, W9
	042 Add X0, X8, 312
	043 Move X8, [X0]
	044 Move X1, [X0+8]
	045 Move X0, X19
	046 NotImplemented "Instruction BLR not yet implemented."
	047 NotImplemented "Instruction INVALID not yet implemented."
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Return V0
	052 Call 0x1C17F20

Method: System.Boolean get_IsRunning()

Disassembly:
	0x01E9F7CC LDR W9, [X8 + 0xE0]
	0x01E9F7D0 CBNZ W9, 0x1E9F7DC
	0x01E9F7D4 MOV X0, X8
	0x01E9F7D8 BL 0x1C16DFC
	0x01E9F7DC MOV X0, X20

ISIL:
	001 Move X0, [X0+80]
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move X1, X31
	005 Call Simulation.get_IsRunning, X0
	006 Return X0
	007 Return X0

Method: System.Boolean get_IsShutdown()

Disassembly:
	0x01E9F7E0 MOV X1, X31
	0x01E9F7E4 BL 0x3C38948
	0x01E9F7E8 TBZ X0, 0x0, 0x1E9F918
	0x01E9F7EC LDR X8, [X19 + 0x68]

ISIL:
	001 Move W8, [X0+92]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_IsShutdownDeferred()

Disassembly:
	0x01E9F7F0 CBZ X8, 0x1E9F918
	0x01E9F7F4 LDR W8, [X8 + 0x18]

ISIL:
	001 Move W0, [X0+64]
	002 Return X0

Method: System.Boolean get_IsRegularShutdown()

Disassembly:
	0x01E9F7F8 CBNZ W8, 0x1E9F918
	0x01E9F7FC MOV X0, X19
	0x01E9F800 MOV X1, X31

ISIL:
	001 Move W8, [X0+92]
	002 And W0, W8, 1
	003 Return X0

Method: System.Single get_LocalAlpha()

Disassembly:
	0x01E9F804 BL 0x3C32ECC
	0x01E9F808 CBZ X0, 0x1E9F934
	0x01E9F80C ADRP X8, 0x225F000
	0x01E9F810 LDR X8, [X8 + 0x850]
	0x01E9F814 LDR X1, [X8]
	0x01E9F818 BL 0x21E5F08

ISIL:
	001 Move X8, [X0+80]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move V0, [X8+124]
	005 Return V0
	006 Move S0, W31
	007 Return V0

Method: Fusion.Tick get_LatestServerTick()

Disassembly:
	0x01E9F81C CBZ X0, 0x1E9F934
	0x01E9F820 LDR X8, [X0 + 0x18]
	0x01E9F824 MOV X20, X0
	0x01E9F828 CMP W8, 0x1
	0x01E9F82C B.LT 0x1E9F918
	0x01E9F830 ADRP X26, 0x225F000
	0x01E9F834 ADRP X27, 0x2258000
	0x01E9F838 LDR X26, [X26 + 0x858]
	0x01E9F83C LDR X27, [X27 + 0xF10]
	0x01E9F840 MOV X24, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X9, [X8+584]
	007 Move X1, [X8+592]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 And X0, X0, 0
	010 Move X30, [X31+16]
	011 Return X0

Method: System.Boolean get_IsStarting()

Disassembly:
	0x01E9F844 AND X8, X8, 0x0
	0x01E9F848 ADD X25, X20, 0x20
	0x01E9F84C CMP X24, W8, UXTW
	0x01E9F850 B.CS 0x1E9F930
	0x01E9F854 LDR X21, [X25, X24, LSL #3]
	0x01E9F858 CBZ X21, 0x1E9F874
	0x01E9F85C LDR X9, [X21]
	0x01E9F860 LDR X8, [X26]
	0x01E9F864 LDRB W11, [X9 + 0x130]
	0x01E9F868 LDRB W10, [X8 + 0x130]
	0x01E9F86C CMP W11, W10
	0x01E9F870 B.CS 0x1E9F87C
	0x01E9F874 MOV X22, X31
	0x01E9F878 B 0x1E9F890

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+80]
	005 Compare X0, 0
	006 JumpIfEqual {14}
	007 Move X1, X31
	008 Call Simulation.get_IsRunning, X0
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {14}
	013 Move W0, W31
	014 Move W8, [X19+92]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 NotImplemented "Instruction CSET not yet implemented."
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return X0

Method: System.Boolean get_IsClient()

Disassembly:
	0x01E9F87C LDR X9, [X9 + 0xC8]
	0x01E9F880 ADD X9, X9, X10, 0x3, LSL
	0x01E9F884 LDUR X9, [X9 - 0x8]
	0x01E9F888 CMP X9, X8
	0x01E9F88C CSEL X22, X21, X31, EQ

ISIL:
	001 Move X0, [X0+80]
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move X1, X31
	005 Call Simulation.get_IsClient, X0
	006 Return X0
	007 Return X0

Method: System.Boolean get_IsConnectedToServer()

Disassembly:
	0x01E9F890 LDR X0, [X23]
	0x01E9F894 LDR W8, [X0 + 0xE0]
	0x01E9F898 CBNZ W8, 0x1E9F8A0
	0x01E9F89C BL 0x1C16DFC
	0x01E9F8A0 MOV X0, X22
	0x01E9F8A4 MOV X1, X31
	0x01E9F8A8 BL 0x3C38948
	0x01E9F8AC TBZ X0, 0x0, 0x1E9F908
	0x01E9F8B0 CBZ X22, 0x1E9F934
	0x01E9F8B4 MOV X0, X22
	0x01E9F8B8 MOV X1, X31
	0x01E9F8BC BL 0x3C323D4
	0x01E9F8C0 TBZ X0, 0x0, 0x1E9F908
	0x01E9F8C4 LDR X0, [X27]
	0x01E9F8C8 MOVZ W1, 0x1
	0x01E9F8CC BL 0x1C16D6C
	0x01E9F8D0 CBZ X0, 0x1E9F934
	0x01E9F8D4 MOV X22, X0
	0x01E9F8D8 CBZ X21, 0x1E9F8F0
	0x01E9F8DC LDR X8, [X22]
	0x01E9F8E0 MOV X0, X21
	0x01E9F8E4 LDR X1, [X8 + 0x40]
	0x01E9F8E8 BL 0x1C16E00
	0x01E9F8EC CBZ X0, 0x1E9F938
	0x01E9F8F0 LDR W8, [X22 + 0x18]
	0x01E9F8F4 CBZ W8, 0x1E9F930
	0x01E9F8F8 MOV X0, X19
	0x01E9F8FC MOV X1, X22
	0x01E9F900 STR X21, [X22 + 0x20]
	0x01E9F904 BL 0x1EA2120
	0x01E9F908 LDR W8, [X20 + 0x18]
	0x01E9F90C ADD X24, X24, 0x1
	0x01E9F910 CMP X24, W8, SXTW
	0x01E9F914 B.LT 0x1E9F84C
	0x01E9F918 LDP X20, X19, [X31 + 0x40]
	0x01E9F91C LDP X22, X21, [X31 + 0x30]
	0x01E9F920 LDP X24, X23, [X31 + 0x20]
	0x01E9F924 LDP X26, X25, [X31 + 0x10]
	0x01E9F928 LDP X30, X27, [X31], #0x50
	0x01E9F92C RET
	0x01E9F930 BL 0x1C16F28

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x253B000
	005 Move W8, [X20+789]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2260000
	012 Move X0, [X0+2016]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+789], W8
	016 Move X0, [X19+80]
	017 Compare X0, 0
	018 JumpIfEqual {45}
	019 Move X1, X31
	020 Call Simulation.get_IsClient, X0
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {45}
	025 Move X0, [X19+80]
	026 Compare X0, 0
	027 JumpIfEqual {51}
	028 Move X9, 0x2260000
	029 Move X9, [X9+2016]
	030 Move X8, [X0]
	031 Move X1, [X9]
	032 Move W10, [X8+304]
	033 Move W9, [X1+304]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X8, [X8+200]
	036 Add X8, X8, X9
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X1, X31
	042 Move X30, [X31+32]
	043 Call Client.get_IsConnectedToServer, X0
	044 Return X0
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move W0, W31
	048 Move X30, [X31+32]
	049 Return X0
	050 Call 0x1C181E0
	051 Call 0x1C17F20

Method: System.Boolean get_IsServer()

Disassembly:
	0x01E9EEF4 MOV W22, W2
	0x01E9EEF8 MOV W23, W1
	0x01E9EEFC MOV X19, X0
	0x01E9EF00 TBNZ X8, 0x0, 0x1E9EFFC
	0x01E9EF04 ADRP X0, 0x2260000

ISIL:
	001 Move X0, [X0+80]
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move X1, X31
	005 Call Simulation.get_IsServer, X0
	006 Return X0
	007 Return X0

Method: System.Boolean get_IsPlayer()

Disassembly:
	0x01E9F934 BL 0x1C16F20
	0x01E9F938 BL 0x1C16F44
	0x01E9F93C MOV X1, X31
	0x01E9F940 BL 0x1C16DEC
	0x01E9F944 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move X0, [X0+80]
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move X1, X31
	005 Call Simulation.get_IsPlayer, X0
	006 Return X0
	007 Return X0

Method: System.Boolean get_IsSinglePlayer()

Disassembly:
	0x01E9F948 STP X20, X19, [X31 + 0x10]
	0x01E9F94C ADRP X21, 0x253A000
	0x01E9F950 ADRP X20, 0x225D000
	0x01E9F954 LDRB W8, [X21 + 0x352]
	0x01E9F958 LDR X20, [X20 + 0xE80]

ISIL:
	001 Move X0, [X0+80]
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move X1, X31
	005 Call Simulation.get_IsSinglePlayer, X0
	006 Return X0
	007 Return X0

Method: System.Boolean get_IsLastTick()

Disassembly:
	0x01E9F95C MOV X19, X0
	0x01E9F960 TBNZ X8, 0x0, 0x1E9F984
	0x01E9F964 ADRP X0, 0x225F000
	0x01E9F968 LDR X0, [X0 + 0x860]
	0x01E9F96C BL 0x1C16CF4
	0x01E9F970 ADRP X0, 0x225D000
	0x01E9F974 LDR X0, [X0 + 0xE80]
	0x01E9F978 BL 0x1C16CF4

ISIL:
	001 Move X8, [X0+80]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move W8, [X8+216]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 Return X0
	008 Move W0, W31
	009 Return X0

Method: System.Boolean get_IsFirstTick()

Disassembly:
	0x01E9F97C MOVZ W8, 0x1
	0x01E9F980 STRB W8, [X21 + 0x352]
	0x01E9F984 LDR X0, [X20]
	0x01E9F988 LDR W8, [X0 + 0xE0]
	0x01E9F98C CBNZ W8, 0x1E9F998
	0x01E9F990 BL 0x1C16DFC
	0x01E9F994 LDR X0, [X20]
	0x01E9F998 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move X8, [X0+80]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move W8, [X8+217]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 Return X0
	008 Move W0, W31
	009 Return X0

Method: System.Boolean get_IsForward()

Disassembly:
	0x01E9F99C LDR X0, [X8]
	0x01E9F9A0 CBZ X0, 0x1E9F9C0
	0x01E9F9A4 ADRP X8, 0x225F000
	0x01E9F9A8 LDR X8, [X8 + 0x860]
	0x01E9F9AC MOV X1, X19

ISIL:
	001 Move X0, [X0+80]
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move X1, X31
	005 Call Simulation.get_IsForward, X0
	006 Return X0
	007 Return X0

Method: System.Boolean get_IsResimulation()

Disassembly:
	0x01E9F9B0 LDP X20, X19, [X31 + 0x10]
	0x01E9F9B4 LDR X2, [X8]
	0x01E9F9B8 LDP X30, X21, [X31], #0x20
	0x01E9F9BC B 0x301D7A8
	0x01E9F9C0 BL 0x1C16F20
	0x01E9F9C4 STR X30, [X31 - 0x60]!
	0x01E9F9C8 STP X28, X27, [X31 + 0x10]
	0x01E9F9CC STP X26, X25, [X31 + 0x20]

ISIL:
	001 Move X8, [X0+80]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move W8, [X8+218]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 Return X0
	008 Move W0, W31
	009 Return X0

Method: System.Int32 get_TickRate()

Disassembly:
	0x01E9F9D0 STP X24, X23, [X31 + 0x30]
	0x01E9F9D4 STP X22, X21, [X31 + 0x40]
	0x01E9F9D8 STP X20, X19, [X31 + 0x50]
	0x01E9F9DC ADRP X20, 0x253A000
	0x01E9F9E0 LDRB W8, [X20 + 0x3B1]

ISIL:
	001 Move X0, [X0+80]
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move X1, X31
	005 Call Simulation.get_TickRate, X0
	006 Return X0
	007 Return X0

Method: Fusion.NetworkRunner/States get_State()

Disassembly:
	0x01E9F9E4 MOV X19, X0
	0x01E9F9E8 TBNZ X8, 0x0, 0x1E9FA18
	0x01E9F9EC ADRP X0, 0x225F000
	0x01E9F9F0 LDR X0, [X0 + 0x768]
	0x01E9F9F4 BL 0x1C16CF4
	0x01E9F9F8 ADRP X0, 0x225F000
	0x01E9F9FC LDR X0, [X0 + 0x770]
	0x01E9FA00 BL 0x1C16CF4
	0x01E9FA04 ADRP X0, 0x225F000
	0x01E9FA08 LDR X0, [X0 + 0x778]
	0x01E9FA0C BL 0x1C16CF4
	0x01E9FA10 MOVZ W8, 0x1
	0x01E9FA14 STRB W8, [X20 + 0x3B1]
	0x01E9FA18 LDR X8, [X19 + 0x18]
	0x01E9FA1C CBZ X8, 0x1E9FB84

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+92]
	004 Compare W8, 0
	005 JumpIfEqual {8}
	006 Move W19, 3
	007 Move W0, W19
	008 Move X0, [X0+80]
	009 Move W19, 1
	010 Compare X0, 0
	011 JumpIfEqual {7}
	012 Move X1, X31
	013 Call Simulation.get_IsRunning, X0
	014 And W31, W0, 1
	015 NotImplemented "Instruction CINC not yet implemented."
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Return X0

Method: Fusion.PlayerRef get_LocalPlayer()

Disassembly:
	0x01E9FA20 ADRP X27, 0x225F000
	0x01E9FA24 ADRP X28, 0x225F000
	0x01E9FA28 ADRP X21, 0x2254000
	0x01E9FA2C ADRP X22, 0x225C000
	0x01E9FA30 ADRP X23, 0x225F000
	0x01E9FA34 LDR X27, [X27 + 0x778]
	0x01E9FA38 LDR X28, [X28 + 0x768]
	0x01E9FA3C LDR X21, [X21 + 0x7D0]
	0x01E9FA40 LDR X22, [X22 + 0x8B0]
	0x01E9FA44 LDR X23, [X23 + 0x868]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X9, [X8+616]
	007 Move X1, [X8+624]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 And X0, X0, 0
	010 Move X30, [X31+16]
	011 Return X0

Method: Fusion.Tick get_Tick()

Disassembly:
	0x01E9FA48 MOV W20, W31
	0x01E9FA4C LDR X0, [X8 + 0x68]
	0x01E9FA50 CBZ X0, 0x1E9FB84
	0x01E9FA54 LDR W8, [X0 + 0x18]
	0x01E9FA58 CMP W20, W8
	0x01E9FA5C B.GE 0x1E9FB68

ISIL:
	001 Move X8, [X0+80]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move W0, [X8+72]
	005 Return X0
	006 Move X0, X31
	007 Return X0

Method: Fusion.NetworkProjectConfig get_Config()

Disassembly:
	0x01E9FA60 LDR X2, [X27]
	0x01E9FA64 MOV W1, W20

ISIL:
	001 Move X0, [X0+152]
	002 Return X0

Method: Fusion.NetworkPrefabTable get_Prefabs()

Disassembly:
	0x01E9FA68 BL 0x301BCCC
	0x01E9FA6C MOV X24, X0
	0x01E9FA70 CBZ X0, 0x1E9FAF0
	0x01E9FA74 LDR X8, [X24]
	0x01E9FA78 LDR X26, [X19 + 0x18]
	0x01E9FA7C LDR W25, [X19 + 0x20]

ISIL:
	001 Move X8, [X0+152]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move X0, [X8+56]
	005 Return X0
	006 Move X0, X31
	007 Return X0

Method: System.Int32 get_TicksExecuted()

Disassembly:
	0x01E9FA80 LDR X1, [X28]
	0x01E9FA84 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move W0, [X0+160]
	002 Return X0

Method: System.Collections.Generic.IEnumerable`1<Fusion.PlayerRef> get_ActivePlayers()

Disassembly:
	0x01E9FA88 CBZ X9, 0x1E9FAAC
	0x01E9FA8C LDR X10, [X8 + 0xB0]
	0x01E9FA90 ADD X10, X10, 0x8
	0x01E9FA94 LDUR X11, [X10 - 0x8]
	0x01E9FA98 CMP X11, X1
	0x01E9FA9C B.EQ 0x1E9FABC
	0x01E9FAA0 SUBS X9, X9, 0x1
	0x01E9FAA4 ADD X10, X10, 0x10
	0x01E9FAA8 B.NE 0x1E9FA94
	0x01E9FAAC MOVZ W2, 0x6
	0x01E9FAB0 MOV X0, X24
	0x01E9FAB4 BL 0x1C5C788
	0x01E9FAB8 B 0x1E9FACC
	0x01E9FABC LDR W9, [X10]
	0x01E9FAC0 ADD W9, W9, 0x6
	0x01E9FAC4 ADD X8, X8, W9, 0x4, SXTW
	0x01E9FAC8 ADD X0, X8, 0x138
	0x01E9FACC LDP X8, X3, [X0]
	0x01E9FAD0 MOV X0, X24
	0x01E9FAD4 MOV X1, X26
	0x01E9FAD8 MOV W2, W25
	0x01E9FADC BLR X8
	0x01E9FAE0 LDR X8, [X19 + 0x18]
	0x01E9FAE4 ADD W20, W20, 0x1
	0x01E9FAE8 CBNZ X8, 0x1E9FA4C
	0x01E9FAEC B 0x1E9FB84
	0x01E9FAF0 BL 0x1C16F20
	0x01E9FAF4 B 0x1E9FBA8
	0x01E9FAF8 B 0x1E9FAFC
	0x01E9FAFC MOV X24, X0
	0x01E9FB00 CMP W1, 0x1
	0x01E9FB04 B.NE 0x1E9FBB4
	0x01E9FB08 MOV X0, X24
	0x01E9FB0C BL 0x3EB1AD0
	0x01E9FB10 MOV X24, X0
	0x01E9FB14 MOV X0, X21
	0x01E9FB18 BL 0x1C16D08
	0x01E9FB1C LDR X8, [X24]
	0x01E9FB20 LDR X1, [X8]
	0x01E9FB24 BL 0x1C17270
	0x01E9FB28 TBZ X0, 0x0, 0x1E9FB88
	0x01E9FB2C LDR X24, [X24]
	0x01E9FB30 BL 0x3EB1AE0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x253B000
	005 Move W8, [X20+790]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2260000
	012 Move X0, [X0+2024]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+790], W8
	016 Move X0, [X19+80]
	017 Compare X0, 0
	018 JumpIfEqual {25}
	019 Move X8, [X0]
	020 Move X9, [X8+600]
	021 Move X1, [X8+608]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Compare X0, 0
	024 JumpIfNotEqual {55}
	025 Move X8, 0x2260000
	026 Move X8, [X8+2024]
	027 Move X19, [X8]
	028 Move X8, [X19+56]
	029 Compare X8, 0
	030 JumpIfNotEqual {34}
	031 Move X0, X19
	032 Call 0x1C5D6E0
	033 Move X8, [X19+56]
	034 Move X0, [X8+16]
	035 Move W8, [X0+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {41}
	040 Call 0x1C5D684
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X8, [X19+56]
	046 Move X0, [X8+16]
	047 Move W8, [X0+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {53}
	052 Call 0x1C5D684
	053 Move X8, [X0+184]
	054 Move X0, [X8]
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Return X0

Method: Fusion.INetworkObjectProvider get_ObjectProvider()

Disassembly:
	0x01E9FB34 LDR X25, [X19 + 0x18]
	0x01E9FB38 MOV X0, X22

ISIL:
	001 Move X0, [X0+184]
	002 Return X0

Method: System.Int32 get_ReliableDataSendRate()

Disassembly:
	0x01E9FB3C BL 0x1C16D08
	0x01E9FB40 LDR W8, [X0 + 0xE0]
	0x01E9FB44 CBNZ W8, 0x1E9FB4C
	0x01E9FB48 BL 0x1C16DFC
	0x01E9FB4C MOV X0, X23

ISIL:
	001 Move X0, [X0+80]
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move X1, X31
	005 Call Simulation.get_ReliableDataSendRate, X0
	006 Return X0
	007 Return X0

Method: System.Void set_ReliableDataSendRate(System.Int32 value)

Disassembly:
	0x01E9FB50 BL 0x1C16D08
	0x01E9FB54 MOV X2, X0
	0x01E9FB58 MOV X0, X25
	0x01E9FB5C MOV X1, X24
	0x01E9FB60 BL 0x2213878

ISIL:
	001 Move X0, [X0+80]
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move X2, X31
	005 Call Simulation.set_ReliableDataSendRate, X0, X1
	006 Return 
	007 Return 

Method: Fusion.INetworkSceneManager get_SceneManager()

Disassembly:
	0x01E9FB64 B 0x1E9FAE0
	0x01E9FB68 LDP X20, X19, [X31 + 0x50]

ISIL:
	001 Move X0, [X0+256]
	002 Return X0

Method: System.Threading.CancellationToken get_OperationsCancellationToken()

Disassembly:
	0x01E9F014 MOV X1, X31
	0x01E9F018 MOV X20, X0
	0x01E9F01C BL 0x33BDD8C
	0x01E9F020 CBZ X20, 0x1E9F500
	0x01E9F024 AND W8, W23, 0x1
	0x01E9F028 STR X19, [X20 + 0x18]
	0x01E9F02C STRB W8, [X20 + 0x10]
	0x01E9F030 STR W22, [X20 + 0x20]
	0x01E9F034 ADRP X23, 0x2255000
	0x01E9F038 LDR W9, [X19 + 0x58]
	0x01E9F03C LDR X23, [X23 + 0x7B8]
	0x01E9F040 CBZ W9, 0x1E9F0C4
	0x01E9F044 LDR X0, [X19 + 0x50]
	0x01E9F048 MOVZ W9, 0x1
	0x01E9F04C STURH W31, [X19 + 0x41]
	0x01E9F050 STRB W31, [X19 + 0x43]
	0x01E9F054 STRB W9, [X19 + 0x40]
	0x01E9F058 STR W22, [X19 + 0x44]
	0x01E9F05C STRB W8, [X19 + 0x48]
	0x01E9F060 STURH W31, [X19 + 0x49]
	0x01E9F064 STRB W31, [X19 + 0x4B]
	0x01E9F068 CBZ X0, 0x1E9F074
	0x01E9F06C MOV X1, X31
	0x01E9F070 BL 0x1EC7CBC
	0x01E9F074 LDR X0, [X23]
	0x01E9F078 LDR W8, [X0 + 0xE0]
	0x01E9F07C CBNZ W8, 0x1E9F084
	0x01E9F080 BL 0x1C16DFC
	0x01E9F084 ADRP X19, 0x2539000
	0x01E9F088 LDRB W8, [X19 + 0xF1D]
	0x01E9F08C CBNZ W8, 0x1E9F0A4
	0x01E9F090 ADRP X0, 0x2255000
	0x01E9F094 LDR X0, [X0 + 0x7B8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x253B000
	005 Move W8, [X20+791]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x225D000
	012 Move X0, [X0+2008]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+791], W8
	016 Move X0, [X19+216]
	017 Compare X0, 0
	018 JumpIfEqual {25}
	019 Move X1, X31
	020 Call CancellationTokenSource.get_IsCancellationRequested, X0
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {38}
	025 Move X8, 0x225D000
	026 Move X8, [X8+2008]
	027 Move X0, [X8]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X0, X31
	035 Move X30, [X31+32]
	036 Call CancellationToken.get_None
	037 Return X0
	038 Move X0, [X19+216]
	039 Compare X0, 0
	040 JumpIfEqual {47}
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X1, X31
	044 Move X30, [X31+32]
	045 Call CancellationTokenSource.get_Token, X0
	046 Return X0
	047 Call 0x1C17F20

Method: Fusion.HitboxManager get_LagCompensation()

Disassembly:
	0x01E9FB6C LDP X22, X21, [X31 + 0x40]
	0x01E9FB70 LDP X24, X23, [X31 + 0x30]
	0x01E9FB74 LDP X26, X25, [X31 + 0x20]
	0x01E9FB78 LDP X28, X27, [X31 + 0x10]
	0x01E9FB7C LDR X30, [X31], #0x60
	0x01E9FB80 RET
	0x01E9FB84 BL 0x1C16F20
	0x01E9FB88 MOVZ W0, 0x8
	0x01E9FB8C BL 0x3EB1AF0
	0x01E9FB90 LDR X8, [X24]
	0x01E9FB94 STR X8, [X0]
	0x01E9FB98 ADRP X1, 0x2015000
	0x01E9FB9C ADD X1, X1, 0xE58
	0x01E9FBA0 MOV X2, X31
	0x01E9FBA4 BL 0x3EB1B00
	0x01E9FBA8 B 0x1E9FBAC
	0x01E9FBAC MOV X24, X0
	0x01E9FBB0 BL 0x3EB1AE0
	0x01E9FBB4 MOV X0, X24
	0x01E9FBB8 BL 0x1D2C690
	0x01E9FBBC BL 0x1990590
	0x01E9FBC0 SUB X31, X31, 0x70
	0x01E9FBC4 STP X30, X21, [X31 + 0x50]
	0x01E9FBC8 STP X20, X19, [X31 + 0x60]
	0x01E9FBCC ADRP X21, 0x253A000
	0x01E9FBD0 ADRP X20, 0x2257000
	0x01E9FBD4 LDRB W8, [X21 + 0x39F]
	0x01E9FBD8 LDR X20, [X20 + 0x280]
	0x01E9FBDC MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x253B000
	006 Move X21, 0x2260000
	007 Move W8, [X20+792]
	008 Move X21, [X21+2032]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2260000
	015 Move X0, [X0+2032]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+792], W8
	019 Move X20, [X21]
	020 Move X8, [X20+56]
	021 Compare X8, 0
	022 JumpIfNotEqual {25}
	023 Move X0, X20
	024 Call 0x1C5D6E0
	025 Compare X19, 0
	026 JumpIfEqual {40}
	027 Move X0, X19
	028 Move X1, X31
	029 Call Component.get_gameObject, X0
	030 Compare X0, 0
	031 JumpIfEqual {40}
	032 Move X8, [X20+56]
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X1, [X8]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Call 0x21E6548, X0
	039 Return X0
	040 Call 0x1C17F20

Method: System.Void Disconnect(Fusion.PlayerRef player, System.Byte[] token = null)

Disassembly:
	0x01E9FBE0 TBNZ X8, 0x0, 0x1E9FC04
	0x01E9FBE4 ADRP X0, 0x225F000
	0x01E9FBE8 LDR X0, [X0 + 0x870]
	0x01E9FBEC BL 0x1C16CF4
	0x01E9FBF0 ADRP X0, 0x2257000
	0x01E9FBF4 LDR X0, [X0 + 0x280]
	0x01E9FBF8 BL 0x1C16CF4
	0x01E9FBFC MOVZ W8, 0x1
	0x01E9FC00 STRB W8, [X21 + 0x39F]
	0x01E9FC04 LDR X0, [X20]
	0x01E9FC08 MOVI V0.2D, 0x0
	0x01E9FC0C STP V0, V0, [X31 + 0x30]
	0x01E9FC10 STR V0, [X31 + 0x2]
	0x01E9FC14 ADRP X20, 0x225F000
	0x01E9FC18 LDR W8, [X0 + 0xE0]
	0x01E9FC1C LDR X20, [X20 + 0x870]
	0x01E9FC20 CBNZ W8, 0x1E9FC28
	0x01E9FC24 BL 0x1C16DFC
	0x01E9FC28 ADD X8, X31, 0x8
	0x01E9FC2C MOV X0, X31
	0x01E9FC30 BL 0x32C4770
	0x01E9FC34 LDUR V0, [X31 + 0x8]
	0x01E9FC38 LDR X9, [X31 + 0x18]
	0x01E9FC3C LDR X2, [X20]
	0x01E9FC40 ADD X8, X31, 0x20
	0x01E9FC44 ORR X20, X8, 0xF
	0x01E9FC48 MOVN W10, 0x0
	0x01E9FC4C ADD X1, X31, 0x20
	0x01E9FC50 MOV X0, X20
	0x01E9FC54 STUR V0, [X31 + 0x28]
	0x01E9FC58 STP X9, X19, [X31 + 0x38]
	0x01E9FC5C STR W10, [X31 + 0x20]
	0x01E9FC60 BL 0x21956B8
	0x01E9FC64 MOV X0, X20
	0x01E9FC68 MOV X1, X31
	0x01E9FC6C BL 0x32C47F8
	0x01E9FC70 LDP X20, X19, [X31 + 0x60]
	0x01E9FC74 LDP X30, X21, [X31 + 0x50]
	0x01E9FC78 ADD X31, X31, 0x70
	0x01E9FC7C RET
	0x01E9FC80 STP X30, X23, [X31 - 0x30]!
	0x01E9FC84 STP X22, X21, [X31 + 0x10]
	0x01E9FC88 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x253B000
	007 Move W8, [X22+793]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2260000
	016 Move X0, [X0+1944]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+793], W8
	020 Move X8, [X21+80]
	021 Compare X8, 0
	022 JumpIfEqual {35}
	023 Move X9, 0x2260000
	024 Move X9, [X9+1944]
	025 Move X10, [X8]
	026 Move X9, [X9]
	027 Move W12, [X10+304]
	028 Move W11, [X9+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X10, [X10+200]
	031 Add X10, X10, X11
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSEL not yet implemented."
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Return 
	041 Compare X0, 0
	042 JumpIfEqual {53}
	043 And X1, X20, 0
	044 Move X2, X19
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X3, X31
	050 Move X30, [X31+48]
	051 Call Server.Disconnect, X0, X1, X2
	052 Return 
	053 Call 0x1C17F20

Method: System.Void Disconnect(Fusion.Sockets.NetAddress address)

Disassembly:
	0x01E9FC8C ADRP X22, 0x253A000
	0x01E9FC90 ADRP X23, 0x225C000
	0x01E9FC94 ADRP X21, 0x225F000
	0x01E9FC98 LDRB W8, [X22 + 0x3AF]
	0x01E9FC9C LDR X23, [X23 + 0x868]
	0x01E9FCA0 LDR X21, [X21 + 0x878]
	0x01E9FCA4 MOV X19, X1
	0x01E9FCA8 MOV X20, X0
	0x01E9FCAC TBNZ X8, 0x0, 0x1E9FCDC
	0x01E9FCB0 ADRP X0, 0x225C000
	0x01E9FCB4 LDR X0, [X0 + 0x868]
	0x01E9FCB8 BL 0x1C16CF4
	0x01E9FCBC ADRP X0, 0x225C000
	0x01E9FCC0 LDR X0, [X0 + 0x7D0]
	0x01E9FCC4 BL 0x1C16CF4
	0x01E9FCC8 ADRP X0, 0x225F000
	0x01E9FCCC LDR X0, [X0 + 0x878]
	0x01E9FCD0 BL 0x1C16CF4
	0x01E9FCD4 MOVZ W8, 0x1
	0x01E9FCD8 STRB W8, [X22 + 0x3AF]
	0x01E9FCDC LDR X0, [X23]
	0x01E9FCE0 BL 0x1C16F10
	0x01E9FCE4 LDR X2, [X21]
	0x01E9FCE8 MOV X1, X20
	0x01E9FCEC MOV X3, X31
	0x01E9FCF0 MOV X21, X0
	0x01E9FCF4 BL 0x2D2B9F4
	0x01E9FCF8 LDR X0, [X20 + 0x18]
	0x01E9FCFC CBZ X0, 0x1E9FD44
	0x01E9FD00 ADRP X20, 0x225C000
	0x01E9FD04 LDR X20, [X20 + 0x7D0]
	0x01E9FD08 BL 0x1E9E014
	0x01E9FD0C LDR X8, [X20]
	0x01E9FD10 MOV X20, X0
	0x01E9FD14 LDR W9, [X8 + 0xE0]
	0x01E9FD18 CBNZ W9, 0x1E9FD24
	0x01E9FD1C MOV X0, X8
	0x01E9FD20 BL 0x1C16DFC
	0x01E9FD24 MOV X0, X19
	0x01E9FD28 MOV X1, X21
	0x01E9FD2C MOV X2, X20
	0x01E9FD30 LDP X20, X19, [X31 + 0x20]
	0x01E9FD34 LDP X22, X21, [X31 + 0x10]
	0x01E9FD38 MOV X3, X31
	0x01E9FD3C LDP X30, X23, [X31], #0x30
	0x01E9FD40 B 0x1E3A098
	0x01E9FD44 BL 0x1C16F20
	0x01E9FD48 STR X30, [X31 - 0x40]!
	0x01E9FD4C STP X24, X23, [X31 + 0x10]
	0x01E9FD50 STP X22, X21, [X31 + 0x20]
	0x01E9FD54 STP X20, X19, [X31 + 0x30]
	0x01E9FD58 ADRP X19, 0x253A000
	0x01E9FD5C ADRP X22, 0x225D000
	0x01E9FD60 LDRB W8, [X19 + 0x354]
	0x01E9FD64 LDR X22, [X22 + 0xE80]
	0x01E9FD68 TBNZ X8, 0x0, 0x1E9FDC8

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 NotImplemented "Instruction MRS not yet implemented."
	008 Move X8, [X21+40]
	009 Move X22, 0x253B000
	010 Move X19, X1
	011 Move X20, X0
	012 Move [X31+56], X8
	013 Move W8, [X22+794]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x2260000
	019 Move X0, [X0+1944]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+794], W8
	023 Move X8, [X20+80]
	024 Compare X8, 0
	025 JumpIfEqual {51}
	026 Move X9, 0x2260000
	027 Move X9, [X9+1944]
	028 Move X10, [X8]
	029 Move X9, [X9]
	030 Move W12, [X10+304]
	031 Move W11, [X9+304]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X10, [X10+200]
	034 Add X10, X10, X11
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CSEL not yet implemented."
	038 Move X8, [X19+16]
	039 Move V0, [X19]
	040 Move [X31+48], X8
	041 Move [X31+2], V0
	042 Compare X0, 0
	043 JumpIfEqual {61}
	044 Move V0, [X31+2]
	045 Move X8, [X31+48]
	046 Add X1, X31, 0
	047 Move X2, X31
	048 Move [X31], V0
	049 Move [X31+16], X8
	050 Call Server.Disconnect, X0, X1
	051 Move X8, [X21+40]
	052 Move X9, [X31+56]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X20, [X31+96]
	055 Move X19, [X31+104]
	056 Move X22, [X31+80]
	057 Move X21, [X31+88]
	058 Move X30, [X31+64]
	059 Add X31, X31, 112
	060 Return 
	061 Call 0x1C17F20
	062 Call 0x3EB2B20

Method: System.Void Connect(Fusion.Sockets.NetAddress address, System.Byte[] token, System.Byte[] uniqueId)

Disassembly:
	0x01E9FD6C ADRP X0, 0x225F000
	0x01E9FD70 LDR X0, [X0 + 0x880]
	0x01E9FD74 BL 0x1C16CF4
	0x01E9FD78 ADRP X0, 0x225F000
	0x01E9FD7C LDR X0, [X0 + 0x888]
	0x01E9FD80 BL 0x1C16CF4
	0x01E9FD84 ADRP X0, 0x225D000
	0x01E9FD88 LDR X0, [X0 + 0xE80]
	0x01E9FD8C BL 0x1C16CF4
	0x01E9FD90 ADRP X0, 0x225B000
	0x01E9FD94 LDR X0, [X0 + 0xC60]
	0x01E9FD98 BL 0x1C16CF4
	0x01E9FD9C ADRP X0, 0x2254000
	0x01E9FDA0 LDR X0, [X0 + 0x5F8]
	0x01E9FDA4 BL 0x1C16CF4
	0x01E9FDA8 ADRP X0, 0x225F000
	0x01E9FDAC LDR X0, [X0 + 0x890]
	0x01E9FDB0 BL 0x1C16CF4
	0x01E9FDB4 ADRP X0, 0x225F000
	0x01E9FDB8 LDR X0, [X0 + 0x898]
	0x01E9FDBC BL 0x1C16CF4
	0x01E9FDC0 MOVZ W8, 0x1
	0x01E9FDC4 STRB W8, [X19 + 0x354]
	0x01E9FDC8 LDR X0, [X22]
	0x01E9FDCC LDR W8, [X0 + 0xE0]
	0x01E9FDD0 CBNZ W8, 0x1E9FDD8
	0x01E9FDD4 BL 0x1C16DFC
	0x01E9FDD8 ADRP X19, 0x253A000
	0x01E9FDDC LDRB W8, [X19 + 0x3BD]
	0x01E9FDE0 CBNZ W8, 0x1E9FDF8
	0x01E9FDE4 ADRP X0, 0x225D000
	0x01E9FDE8 LDR X0, [X0 + 0xE80]
	0x01E9FDEC BL 0x1C16CF4
	0x01E9FDF0 MOVZ W8, 0x1
	0x01E9FDF4 STRB W8, [X19 + 0x3BD]
	0x01E9FDF8 LDR X8, [X22]
	0x01E9FDFC ADRP X23, 0x225F000
	0x01E9FE00 LDR W9, [X8 + 0xE0]
	0x01E9FE04 LDR X23, [X23 + 0x898]
	0x01E9FE08 CBNZ W9, 0x1E9FE18
	0x01E9FE0C MOV X0, X8
	0x01E9FE10 BL 0x1C16DFC
	0x01E9FE14 LDR X8, [X22]
	0x01E9FE18 LDR X0, [X23]
	0x01E9FE1C LDR X8, [X8 + 0xB8]
	0x01E9FE20 LDR W9, [X0 + 0xE0]
	0x01E9FE24 LDR X19, [X8]
	0x01E9FE28 CBNZ W9, 0x1E9FE34
	0x01E9FE2C BL 0x1C16DFC
	0x01E9FE30 LDR X0, [X23]
	0x01E9FE34 LDR X8, [X0 + 0xB8]
	0x01E9FE38 ADRP X24, 0x225F000
	0x01E9FE3C LDR X20, [X8 + 0x10]
	0x01E9FE40 LDR X24, [X24 + 0x880]
	0x01E9FE44 CBNZ X20, 0x1E9FE98
	0x01E9FE48 LDR W8, [X0 + 0xE0]
	0x01E9FE4C CBNZ W8, 0x1E9FE58
	0x01E9FE50 BL 0x1C16DFC
	0x01E9FE54 LDR X0, [X23]
	0x01E9FE58 ADRP X9, 0x225F000
	0x01E9FE5C LDR X8, [X0 + 0xB8]
	0x01E9FE60 LDR X9, [X9 + 0x888]
	0x01E9FE64 LDR X21, [X8]
	0x01E9FE68 LDR X0, [X9]
	0x01E9FE6C BL 0x1C16F10
	0x01E9FE70 ADRP X8, 0x225F000
	0x01E9FE74 LDR X8, [X8 + 0x890]
	0x01E9FE78 MOV X1, X21
	0x01E9FE7C MOV X3, X31
	0x01E9FE80 MOV X20, X0
	0x01E9FE84 LDR X2, [X8]
	0x01E9FE88 BL 0x2D2F428
	0x01E9FE8C LDR X8, [X23]
	0x01E9FE90 LDR X8, [X8 + 0xB8]
	0x01E9FE94 STR X20, [X8 + 0x10]
	0x01E9FE98 LDR X2, [X24]
	0x01E9FE9C MOV X0, X19
	0x01E9FEA0 MOV X1, X20
	0x01E9FEA4 BL 0x21BFABC
	0x01E9FEA8 LDR X8, [X22]
	0x01E9FEAC MOV W19, W0
	0x01E9FEB0 LDR W9, [X8 + 0xE0]
	0x01E9FEB4 CBZ W9, 0x1E9FEC0
	0x01E9FEB8 CBZ W19, 0x1E9FED0

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X23+40]
	011 Move X24, 0x253B000
	012 Move X19, X3
	013 Move X20, X2
	014 Move [X31+56], X8
	015 Move W8, [X24+795]
	016 Move X21, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x2260000
	023 Move X0, [X0+2016]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X24+795], W8
	027 Move X0, [X22+80]
	028 Compare X0, 0
	029 JumpIfEqual {37}
	030 Move X1, X31
	031 Call Simulation.get_IsServer, X0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {77}
	036 Move X0, [X22+80]
	037 Move X8, [X21+16]
	038 Move V0, [X21]
	039 Move [X31+48], X8
	040 Move [X31+2], V0
	041 Compare X0, 0
	042 JumpIfEqual {76}
	043 Move X9, 0x2260000
	044 Move X9, [X9+2016]
	045 Move X8, [X0]
	046 Move X1, [X9]
	047 Move W10, [X8+304]
	048 Move W9, [X1+304]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X8, [X8+200]
	051 Add X8, X8, X9
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move V0, [X31+2]
	055 Move X8, [X31+48]
	056 Add X1, X31, 0
	057 Move X2, X20
	058 Move X3, X19
	059 Move X4, X31
	060 Move [X31], V0
	061 Move [X31+16], X8
	062 Call Client.Connect, X0, X1, X2, X3
	063 Move X8, [X23+40]
	064 Move X9, [X31+56]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X20, [X31+112]
	067 Move X19, [X31+120]
	068 Move X22, [X31+96]
	069 Move X21, [X31+104]
	070 Move X24, [X31+80]
	071 Move X23, [X31+88]
	072 Move X30, [X31+64]
	073 Add X31, X31, 128
	074 Return 
	075 Call 0x1C181E0
	076 Call 0x1C17F20
	077 Move X0, 0x2255000
	078 Move X0, [X0+1456]
	079 Call 0x1C17D08
	080 Call 0x1C17F10
	081 Move X19, X0
	082 Move X0, 0x2260000
	083 Move X0, [X0+2040]
	084 Call 0x1C17D08
	085 Move X1, X0
	086 Move X0, X19
	087 Move X2, X31
	088 Call InvalidOperationException..ctor, X0, X1
	089 Move X0, 0x2260000
	090 Move X0, [X0+2048]
	091 Call 0x1C17D08
	092 Move X1, X0
	093 Move X0, X19
	094 Call 0x1C17DEC
	095 Call 0x3EB2B20

Method: System.Void ShutdownAction()

Disassembly:
	0x01E9FEBC B 0x1E9FF60
	0x01E9FEC0 MOV X0, X8
	0x01E9FEC4 BL 0x1C16DFC
	0x01E9FEC8 LDR X8, [X22]

ISIL:
	001 Move W1, 1
	002 Move W2, W31
	003 Move W3, W31

Method: System.Threading.Tasks.Task Shutdown(System.Boolean destroyGameObject = True, Fusion.ShutdownReason shutdownReason = 0, System.Boolean forceShutdownProcedure = False)

Disassembly:
	0x01E9FECC CBNZ W19, 0x1E9FF60
	0x01E9FED0 LDR X9, [X8 + 0xB8]
	0x01E9FED4 LDRB W10, [X9 + 0xD]
	0x01E9FED8 CBZ W10, 0x1E9FF60
	0x01E9FEDC ADRP X19, 0x225B000
	0x01E9FEE0 LDR W10, [X8 + 0xE0]
	0x01E9FEE4 LDR X19, [X19 + 0xC60]
	0x01E9FEE8 CBNZ W10, 0x1E9FEFC
	0x01E9FEEC MOV X0, X8
	0x01E9FEF0 BL 0x1C16DFC
	0x01E9FEF4 LDR X8, [X22]
	0x01E9FEF8 LDR X9, [X8 + 0xB8]
	0x01E9FEFC LDR X0, [X19]
	0x01E9FF00 ADRP X20, 0x2254000
	0x01E9FF04 LDR W19, [X9 + 0x8]
	0x01E9FF08 LDR W8, [X0 + 0xE0]
	0x01E9FF0C LDR X20, [X20 + 0x5F8]
	0x01E9FF10 CBNZ W8, 0x1E9FF18
	0x01E9FF14 BL 0x1C16DFC
	0x01E9FF18 MOV W0, W19
	0x01E9FF1C MOV X1, X31
	0x01E9FF20 BL 0x3C8884C
	0x01E9FF24 LDR X8, [X22]
	0x01E9FF28 LDR X0, [X20]
	0x01E9FF2C LDR X8, [X8 + 0xB8]
	0x01E9FF30 LDR W9, [X0 + 0xE0]
	0x01E9FF34 LDRB W19, [X8 + 0xC]
	0x01E9FF38 CBNZ W9, 0x1E9FF40
	0x01E9FF3C BL 0x1C16DFC
	0x01E9FF40 CMP W19, 0x0
	0x01E9FF44 LDP X20, X19, [X31 + 0x30]
	0x01E9FF48 LDP X22, X21, [X31 + 0x20]
	0x01E9FF4C LDP X24, X23, [X31 + 0x10]
	0x01E9FF50 CSET W0, NE
	0x01E9FF54 MOV X1, X31
	0x01E9FF58 LDR X30, [X31], #0x40
	0x01E9FF5C B 0x3C8DC80
	0x01E9FF60 LDP X20, X19, [X31 + 0x30]
	0x01E9FF64 LDP X22, X21, [X31 + 0x20]
	0x01E9FF68 LDP X24, X23, [X31 + 0x10]
	0x01E9FF6C LDR X30, [X31], #0x40
	0x01E9FF70 RET
	0x01E9FF74 SUB X31, X31, 0x80
	0x01E9FF78 STP X29, X30, [X31 + 0x20]
	0x01E9FF7C STP X28, X27, [X31 + 0x30]
	0x01E9FF80 STP X26, X25, [X31 + 0x40]
	0x01E9FF84 STP X24, X23, [X31 + 0x50]
	0x01E9FF88 STP X22, X21, [X31 + 0x60]
	0x01E9FF8C STP X20, X19, [X31 + 0x70]
	0x01E9FF90 ADRP X22, 0x253A000
	0x01E9FF94 LDRB W8, [X22 + 0x339]
	0x01E9FF98 MOV W24, W3
	0x01E9FF9C MOV W21, W2
	0x01E9FFA0 MOV X20, X1
	0x01E9FFA4 MOV X19, X0
	0x01E9FFA8 TBNZ X8, 0x0, 0x1E9FFD8
	0x01E9FFAC ADRP X0, 0x225F000
	0x01E9FFB0 LDR X0, [X0 + 0x8A0]
	0x01E9FFB4 BL 0x1C16CF4
	0x01E9FFB8 ADRP X0, 0x225F000
	0x01E9FFBC LDR X0, [X0 + 0x738]
	0x01E9FFC0 BL 0x1C16CF4
	0x01E9FFC4 ADRP X0, 0x2257000
	0x01E9FFC8 LDR X0, [X0 + 0x398]
	0x01E9FFCC BL 0x1C16CF4
	0x01E9FFD0 MOVZ W8, 0x1
	0x01E9FFD4 STRB W8, [X22 + 0x339]
	0x01E9FFD8 STP X31, X31, [X31 + 0x8]
	0x01E9FFDC STR X31, [X31 + 0x18]
	0x01E9FFE0 STR X31, [X31]
	0x01E9FFE4 CBZ X20, 0x1EA02B8
	0x01E9FFE8 LDR X8, [X20 + 0x20]
	0x01E9FFEC CBZ X8, 0x1E9FFF8
	0x01E9FFF0 LDR W25, [X8]
	0x01E9FFF4 B 0x1E9FFFC
	0x01E9FFF8 MOV W25, W31
	0x01E9FFFC LDR W0, [X20 + 0x60]
	0x01EA0000 LDUR X22, [X20 + 0x64]
	0x01EA0004 MOVZ W1, 0x4
	0x01EA0008 MOV X2, X31
	0x01EA000C BL 0x1E93D90
	0x01EA0010 LDR W8, [X20 + 0x58]
	0x01EA0014 MOV W23, W0
	0x01EA0018 CMP W8, 0x1
	0x01EA001C B.EQ 0x1EA003C
	0x01EA0020 CBNZ W8, 0x1EA0080
	0x01EA0024 LDR X0, [X19 + 0x50]
	0x01EA0028 CBZ X0, 0x1EA0080
	0x01EA002C LDR X8, [X20 + 0x20]
	0x01EA0030 CBZ X8, 0x1EA0054
	0x01EA0034 LDR W1, [X8]
	0x01EA0038 B 0x1EA0058
	0x01EA003C LDR X0, [X19 + 0x50]
	0x01EA0040 CBZ X0, 0x1EA0080
	0x01EA0044 MOV W1, W25
	0x01EA0048 MOV X2, X31
	0x01EA004C BL 0x1EC7968
	0x01EA0050 B 0x1EA0080
	0x01EA0054 MOV X1, X31
	0x01EA0058 ADD X2, X31, 0x0
	0x01EA005C MOV X3, X31
	0x01EA0060 BL 0x1EC0278
	0x01EA0064 TBZ X0, 0x0, 0x1EA0080
	0x01EA0068 LDR X0, [X19 + 0x50]
	0x01EA006C CBZ X0, 0x1EA02B4
	0x01EA0070 LDR X1, [X31]
	0x01EA0074 MOV W2, W31
	0x01EA0078 MOV X3, X31
	0x01EA007C BL 0x1EBFDB4
	0x01EA0080 ADRP X26, 0x2256000
	0x01EA0084 LDR X26, [X26 + 0x398]
	0x01EA0088 LDR X0, [X26]
	0x01EA008C LDR W8, [X0 + 0xE0]
	0x01EA0090 CBZ W8, 0x1EA01D0
	0x01EA0094 CBZ W25, 0x1EA01D8
	0x01EA0098 LDR W0, [X20 + 0x60]
	0x01EA009C MOVZ W1, 0x800000
	0x01EA00A0 MOV X2, X31
	0x01EA00A4 BL 0x1E93D90
	0x01EA00A8 TBZ X0, 0x0, 0x1EA00BC
	0x01EA00AC AND W2, W24, 0x1
	0x01EA00B0 MOV X0, X19
	0x01EA00B4 MOV X1, X20
	0x01EA00B8 BL 0x1EA3D68
	0x01EA00BC TBNZ X21, 0x0, 0x1EA01C0
	0x01EA00C0 LDR W0, [X20 + 0x60]
	0x01EA00C4 MOVZ W1, 0x1000000
	0x01EA00C8 MOV X2, X31
	0x01EA00CC BL 0x1E93D90
	0x01EA00D0 TBZ X0, 0x0, 0x1EA01C0
	0x01EA00D4 LDR X27, [X20 + 0x70]
	0x01EA00D8 CBZ X27, 0x1EA02B4
	0x01EA00DC LDR W8, [X27 + 0x18]
	0x01EA00E0 CMP W8, 0x1
	0x01EA00E4 B.LT 0x1EA0134
	0x01EA00E8 MOV W28, W31
	0x01EA00EC CMP W28, W8
	0x01EA00F0 B.CS 0x1EA02B0
	0x01EA00F4 ADD X8, X27, W28, 0x3, SXTW
	0x01EA00F8 LDR X25, [X8 + 0x20]
	0x01EA00FC CBZ X25, 0x1EA02B4
	0x01EA0100 LDR W0, [X25 + 0x60]
	0x01EA0104 MOVZ W1, 0x800000
	0x01EA0108 MOV X2, X31
	0x01EA010C BL 0x1E93D90
	0x01EA0110 TBZ X0, 0x0, 0x1EA0124
	0x01EA0114 AND W2, W24, 0x1
	0x01EA0118 MOV X0, X19
	0x01EA011C MOV X1, X25
	0x01EA0120 BL 0x1EA3D68
	0x01EA0124 LDR W8, [X27 + 0x18]
	0x01EA0128 ADD W28, W28, 0x1
	0x01EA012C CMP W28, W8
	0x01EA0130 B.LT 0x1EA00EC
	0x01EA0134 MOV X0, X19
	0x01EA0138 MOV X1, X20
	0x01EA013C BL 0x1EA3DF8
	0x01EA0140 LDR X25, [X20 + 0x70]
	0x01EA0144 CBZ X25, 0x1EA02B4
	0x01EA0148 LDR X8, [X25 + 0x18]
	0x01EA014C CMP W8, 0x1
	0x01EA0150 B.LT 0x1EA01E4
	0x01EA0154 MOV X27, X31
	0x01EA0158 AND X8, X8, 0x0
	0x01EA015C ADD X28, X25, 0x20
	0x01EA0160 CMP X27, W8, UXTW
	0x01EA0164 B.CS 0x1EA02B0
	0x01EA0168 LDR X24, [X28, X27, LSL #3]
	0x01EA016C CBZ X24, 0x1EA01AC
	0x01EA0170 LDRB W8, [X24 + 0x60]
	0x01EA0174 TBNZ X8, 0x1, 0x1EA01AC
	0x01EA0178 LDR X8, [X24 + 0x20]
	0x01EA017C CBZ X8, 0x1EA0188
	0x01EA0180 LDR W29, [X8]
	0x01EA0184 B 0x1EA018C
	0x01EA0188 MOV W29, W31
	0x01EA018C LDR X0, [X26]
	0x01EA0190 LDR W8, [X0 + 0xE0]
	0x01EA0194 CBNZ W8, 0x1EA019C
	0x01EA0198 BL 0x1C16DFC
	0x01EA019C CBZ W29, 0x1EA01AC
	0x01EA01A0 MOV X0, X19
	0x01EA01A4 MOV X1, X24
	0x01EA01A8 BL 0x1EA3DF8
	0x01EA01AC LDR W8, [X25 + 0x18]
	0x01EA01B0 ADD X27, X27, 0x1
	0x01EA01B4 CMP X27, W8, SXTW
	0x01EA01B8 B.LT 0x1EA0160
	0x01EA01BC B 0x1EA01E4
	0x01EA01C0 MOV X0, X19
	0x01EA01C4 MOV X1, X20
	0x01EA01C8 BL 0x1EA3DF8
	0x01EA01CC B 0x1EA01E4
	0x01EA01D0 BL 0x1C16DFC
	0x01EA01D4 CBNZ W25, 0x1EA0098
	0x01EA01D8 MOV X0, X20
	0x01EA01DC MOV X1, X31
	0x01EA01E0 BL 0x1E93EB0
	0x01EA01E4 LDR X0, [X19 + 0xC8]
	0x01EA01E8 CBZ X0, 0x1EA02B4
	0x01EA01EC ADRP X8, 0x225E000
	0x01EA01F0 LDR X8, [X8 + 0x8A0]
	0x01EA01F4 MOV X1, X22
	0x01EA01F8 LDR X2, [X8]
	0x01EA01FC BL 0x2A84A10
	0x01EA0200 AND W3, W21, 0x1
	0x01EA0204 AND W4, W23, 0x1
	0x01EA0208 ADD X0, X31, 0x8
	0x01EA020C MOV X1, X20
	0x01EA0210 MOV X2, X22
	0x01EA0214 MOV X5, X31
	0x01EA0218 BL 0x1E98B68
	0x01EA021C LDR X20, [X19 + 0xB8]
	0x01EA0220 CBZ X20, 0x1EA02B4
	0x01EA0224 ADRP X10, 0x225E000
	0x01EA0228 LDR X8, [X20]
	0x01EA022C LDR X10, [X10 + 0x738]
	0x01EA0230 LDRH W9, [X8 + 0x12E]
	0x01EA0234 LDR X1, [X10]
	0x01EA0238 CBZ X9, 0x1EA025C
	0x01EA023C LDR X10, [X8 + 0xB0]
	0x01EA0240 ADD X10, X10, 0x8
	0x01EA0244 LDUR X11, [X10 - 0x8]
	0x01EA0248 CMP X11, X1
	0x01EA024C B.EQ 0x1EA026C
	0x01EA0250 SUBS X9, X9, 0x1
	0x01EA0254 ADD X10, X10, 0x10
	0x01EA0258 B.NE 0x1EA0244
	0x01EA025C MOVZ W2, 0x1
	0x01EA0260 MOV X0, X20
	0x01EA0264 BL 0x1C5C788
	0x01EA0268 B 0x1EA027C
	0x01EA026C LDR W9, [X10]
	0x01EA0270 ADD W9, W9, 0x1
	0x01EA0274 ADD X8, X8, W9, 0x4, SXTW
	0x01EA0278 ADD X0, X8, 0x138
	0x01EA027C LDP X8, X3, [X0]
	0x01EA0280 ADD X2, X31, 0x8
	0x01EA0284 MOV X0, X20
	0x01EA0288 MOV X1, X19
	0x01EA028C BLR X8
	0x01EA0290 LDP X20, X19, [X31 + 0x70]
	0x01EA0294 LDP X22, X21, [X31 + 0x60]
	0x01EA0298 LDP X24, X23, [X31 + 0x50]
	0x01EA029C LDP X26, X25, [X31 + 0x40]
	0x01EA02A0 LDP X28, X27, [X31 + 0x30]
	0x01EA02A4 LDP X29, X30, [X31 + 0x20]
	0x01EA02A8 ADD X31, X31, 0x80
	0x01EA02AC RET
	0x01EA02B0 BL 0x1C16F28
	0x01EA02B4 BL 0x1C16F20
	0x01EA02B8 ADRP X0, 0x2258000
	0x01EA02BC LDR X0, [X0 + 0x528]
	0x01EA02C0 BL 0x1C16D08
	0x01EA02C4 BL 0x1C16F10
	0x01EA02C8 MOV X19, X0
	0x01EA02CC ADRP X0, 0x225E000
	0x01EA02D0 LDR X0, [X0 + 0x8A8]
	0x01EA02D4 BL 0x1C16D08
	0x01EA02D8 MOV X1, X0
	0x01EA02DC MOV X0, X19
	0x01EA02E0 MOV X2, X31
	0x01EA02E4 BL 0x330E100
	0x01EA02E8 ADRP X0, 0x225E000
	0x01EA02EC LDR X0, [X0 + 0x8B0]
	0x01EA02F0 BL 0x1C16D08
	0x01EA02F4 MOV X1, X0
	0x01EA02F8 MOV X0, X19
	0x01EA02FC BL 0x1C16DEC
	0x01EA0300 STR X30, [X31 - 0x20]!
	0x01EA0304 STP X20, X19, [X31 + 0x10]
	0x01EA0308 ADRP X20, 0x2539000
	0x01EA030C LDRB W8, [X20 + 0x31D]
	0x01EA0310 MOV X19, X0
	0x01EA0314 TBNZ X8, 0x0, 0x1EA0338
	0x01EA0318 ADRP X0, 0x225E000
	0x01EA031C LDR X0, [X0 + 0x8B8]
	0x01EA0320 BL 0x1C16CF4
	0x01EA0324 ADRP X0, 0x225E000
	0x01EA0328 LDR X0, [X0 + 0x8C0]
	0x01EA032C BL 0x1C16CF4
	0x01EA0330 MOVZ W8, 0x1
	0x01EA0334 STRB W8, [X20 + 0x31D]
	0x01EA0338 LDR X0, [X19 + 0x1B0]
	0x01EA033C CBZ X0, 0x1EA03D0
	0x01EA0340 MOV X1, X31
	0x01EA0344 BL 0x1E68614
	0x01EA0348 TBZ X0, 0x0, 0x1EA03D0
	0x01EA034C LDR X8, [X19 + 0x1B0]
	0x01EA0350 CBZ X8, 0x1EA0418
	0x01EA0354 LDRB W9, [X8 + 0x12]
	0x01EA0358 CBZ W9, 0x1EA0370
	0x01EA035C MOV X0, X31
	0x01EA0360 BL 0x1E37B3C
	0x01EA0364 LDR X8, [X19 + 0x1B0]
	0x01EA0368 TBZ X0, 0x0, 0x1EA0398
	0x01EA036C CBZ X8, 0x1EA0418
	0x01EA0370 ADRP X9, 0x225E000
	0x01EA0374 LDR X9, [X9 + 0x8C0]
	0x01EA0378 LDR X20, [X8 + 0x30]
	0x01EA037C LDR X0, [X9]
	0x01EA0380 BL 0x1C16F10
	0x01EA0384 MOV X1, X20
	0x01EA0388 MOV X2, X31
	0x01EA038C MOV X19, X0
	0x01EA0390 BL 0x1F02D20
	0x01EA0394 B 0x1EA03C0
	0x01EA0398 CBZ X8, 0x1EA0418
	0x01EA039C LDR X20, [X8 + 0x30]
	0x01EA03A0 ADRP X8, 0x225E000
	0x01EA03A4 LDR X8, [X8 + 0x8B8]
	0x01EA03A8 LDR X0, [X8]
	0x01EA03AC BL 0x1C16F10
	0x01EA03B0 MOV X1, X20
	0x01EA03B4 MOV X2, X31
	0x01EA03B8 MOV X19, X0
	0x01EA03BC BL 0x1F02C78
	0x01EA03C0 MOV X0, X19
	0x01EA03C4 LDP X20, X19, [X31 + 0x10]
	0x01EA03C8 LDR X30, [X31], #0x20
	0x01EA03CC RET
	0x01EA03D0 ADRP X0, 0x2253000
	0x01EA03D4 LDR X0, [X0 + 0x5B0]
	0x01EA03D8 BL 0x1C16D08
	0x01EA03DC BL 0x1C16F10
	0x01EA03E0 MOV X19, X0
	0x01EA03E4 ADRP X0, 0x225E000
	0x01EA03E8 LDR X0, [X0 + 0x8C8]
	0x01EA03EC BL 0x1C16D08
	0x01EA03F0 MOV X1, X0
	0x01EA03F4 MOV X0, X19
	0x01EA03F8 MOV X2, X31
	0x01EA03FC BL 0x337DF1C
	0x01EA0400 ADRP X0, 0x225E000
	0x01EA0404 LDR X0, [X0 + 0x8D0]
	0x01EA0408 BL 0x1C16D08
	0x01EA040C MOV X1, X0
	0x01EA0410 MOV X0, X19
	0x01EA0414 BL 0x1C16DEC
	0x01EA0418 BL 0x1C16F20
	0x01EA041C STR X30, [X31 - 0x20]!
	0x01EA0420 STP X20, X19, [X31 + 0x10]
	0x01EA0424 ADRP X20, 0x2539000
	0x01EA0428 LDRB W8, [X20 + 0x31E]
	0x01EA042C MOV X19, X0
	0x01EA0430 TBNZ X8, 0x0, 0x1EA0448
	0x01EA0434 ADRP X0, 0x225E000
	0x01EA0438 LDR X0, [X0 + 0x8D8]
	0x01EA043C BL 0x1C16CF4
	0x01EA0440 MOVZ W8, 0x1
	0x01EA0444 STRB W8, [X20 + 0x31E]
	0x01EA0448 LDR X0, [X19 + 0x80]
	0x01EA044C CBZ X0, 0x1EA0464
	0x01EA0450 ADRP X8, 0x225E000
	0x01EA0454 LDR X8, [X8 + 0x8D8]
	0x01EA0458 MOVZ W1, 0x1
	0x01EA045C LDR X2, [X8]
	0x01EA0460 BL 0x267A100
	0x01EA0464 LDR X0, [X19 + 0x1B0]
	0x01EA0468 CBZ X0, 0x1EA047C
	0x01EA046C LDP X20, X19, [X31 + 0x10]
	0x01EA0470 MOV X1, X31
	0x01EA0474 LDR X30, [X31], #0x20
	0x01EA0478 B 0x1E6AFD4
	0x01EA047C LDP X20, X19, [X31 + 0x10]
	0x01EA0480 LDR X30, [X31], #0x20
	0x01EA0484 RET
	0x01EA0488 STP X30, X23, [X31 - 0x30]!
	0x01EA048C STP X22, X21, [X31 + 0x10]
	0x01EA0490 STP X20, X19, [X31 + 0x20]
	0x01EA0494 ADRP X20, 0x2539000
	0x01EA0498 LDRB W8, [X20 + 0x31F]
	0x01EA049C MOV X19, X0
	0x01EA04A0 TBNZ X8, 0x0, 0x1EA04DC
	0x01EA04A4 ADRP X0, 0x225E000
	0x01EA04A8 LDR X0, [X0 + 0x8E0]
	0x01EA04AC BL 0x1C16CF4
	0x01EA04B0 ADRP X0, 0x225E000
	0x01EA04B4 LDR X0, [X0 + 0x8E8]
	0x01EA04B8 BL 0x1C16CF4
	0x01EA04BC ADRP X0, 0x225E000
	0x01EA04C0 LDR X0, [X0 + 0x8F0]
	0x01EA04C4 BL 0x1C16CF4
	0x01EA04C8 ADRP X0, 0x225E000
	0x01EA04CC LDR X0, [X0 + 0x8F8]
	0x01EA04D0 BL 0x1C16CF4
	0x01EA04D4 MOVZ W8, 0x1
	0x01EA04D8 STRB W8, [X20 + 0x31F]
	0x01EA04DC LDR X0, [X19 + 0x90]
	0x01EA04E0 MOVZ W8, 0x1
	0x01EA04E4 STRB W8, [X19 + 0x88]
	0x01EA04E8 CBZ X0, 0x1EA0580
	0x01EA04EC ADRP X21, 0x225E000
	0x01EA04F0 ADRP X22, 0x225E000
	0x01EA04F4 ADRP X23, 0x225E000
	0x01EA04F8 LDR X21, [X21 + 0x8E0]
	0x01EA04FC LDR X22, [X22 + 0x8F0]
	0x01EA0500 LDR X23, [X23 + 0x8E8]
	0x01EA0504 LDR W8, [X0 + 0x20]
	0x01EA0508 CMP W8, 0x0
	0x01EA050C B.LE 0x1EA0584
	0x01EA0510 LDR X1, [X22]
	0x01EA0514 BL 0x24F18D4
	0x01EA0518 CBZ X0, 0x1EA0580
	0x01EA051C LDR X8, [X0]
	0x01EA0520 LDR X1, [X23]
	0x01EA0524 MOV X20, X0
	0x01EA0528 LDRH W9, [X8 + 0x12E]
	0x01EA052C CBZ X9, 0x1EA0550
	0x01EA0530 LDR X10, [X8 + 0xB0]
	0x01EA0534 ADD X10, X10, 0x8
	0x01EA0538 LDUR X11, [X10 - 0x8]
	0x01EA053C CMP X11, X1
	0x01EA0540 B.EQ 0x1EA0560
	0x01EA0544 SUBS X9, X9, 0x1
	0x01EA0548 ADD X10, X10, 0x10
	0x01EA054C B.NE 0x1EA0538
	0x01EA0550 MOV X0, X20
	0x01EA0554 MOV W2, W31
	0x01EA0558 BL 0x1C5C788
	0x01EA055C B 0x1EA056C
	0x01EA0560 LDRSW X9, [X10]
	0x01EA0564 ADD X8, X8, X9, 0x4, LSL
	0x01EA0568 ADD X0, X8, 0x138
	0x01EA056C LDP X8, X1, [X0]
	0x01EA0570 MOV X0, X20
	0x01EA0574 BLR X8
	0x01EA0578 LDR X0, [X19 + 0x90]
	0x01EA057C CBNZ X0, 0x1EA0504
	0x01EA0580 BL 0x1C16F20
	0x01EA0584 LDR X0, [X19 + 0x1A8]
	0x01EA0588 CBZ X0, 0x1EA0598
	0x01EA058C LDR X2, [X21]
	0x01EA0590 MOV W1, W31
	0x01EA0594 BL 0x24D9E74
	0x01EA0598 MOV X0, X19
	0x01EA059C LDP X20, X19, [X31 + 0x20]
	0x01EA05A0 LDP X22, X21, [X31 + 0x10]
	0x01EA05A4 LDP X30, X23, [X31], #0x30
	0x01EA05A8 B 0x1EA05AC
	0x01EA05AC STR X30, [X31 - 0x20]!
	0x01EA05B0 STP X20, X19, [X31 + 0x10]
	0x01EA05B4 LDR X8, [X0 + 0xE8]
	0x01EA05B8 CBZ X8, 0x1EA05D4
	0x01EA05BC MOV X19, X0
	0x01EA05C0 LDR X0, [X8 + 0x40]
	0x01EA05C4 LDR X9, [X8 + 0x18]
	0x01EA05C8 LDR X2, [X8 + 0x28]
	0x01EA05CC MOV X1, X19
	0x01EA05D0 BLR X9
	0x01EA05D4 LDP X20, X19, [X31 + 0x10]
	0x01EA05D8 LDR X30, [X31], #0x20
	0x01EA05DC RET
	0x01EA05E0 CMP W1, 0x1
	0x01EA05E4 MOV X20, X0
	0x01EA05E8 B.NE 0x1EA0680
	0x01EA05EC MOV X0, X20
	0x01EA05F0 BL 0x3EB1AD0
	0x01EA05F4 MOV X20, X0
	0x01EA05F8 ADRP X0, 0x2253000
	0x01EA05FC LDR X0, [X0 + 0x7D0]
	0x01EA0600 BL 0x1C16D08
	0x01EA0604 LDR X8, [X20]
	0x01EA0608 LDR X1, [X8]
	0x01EA060C BL 0x1C17270
	0x01EA0610 TBZ X0, 0x0, 0x1EA0658
	0x01EA0614 LDR X20, [X20]
	0x01EA0618 BL 0x3EB1AE0
	0x01EA061C ADRP X0, 0x225B000
	0x01EA0620 LDR X0, [X0 + 0x8B0]
	0x01EA0624 BL 0x1C16D08
	0x01EA0628 LDR W8, [X0 + 0xE0]
	0x01EA062C CBNZ W8, 0x1EA0634
	0x01EA0630 BL 0x1C16DFC
	0x01EA0634 ADRP X0, 0x225E000
	0x01EA0638 LDR X0, [X0 + 0x868]
	0x01EA063C BL 0x1C16D08
	0x01EA0640 MOV X2, X0
	0x01EA0644 MOV X0, X19
	0x01EA0648 MOV X1, X20
	0x01EA064C LDP X20, X19, [X31 + 0x10]
	0x01EA0650 LDR X30, [X31], #0x20
	0x01EA0654 B 0x2213878
	0x01EA0658 MOVZ W0, 0x8
	0x01EA065C BL 0x3EB1AF0
	0x01EA0660 LDR X8, [X20]
	0x01EA0664 STR X8, [X0]
	0x01EA0668 ADRP X1, 0x2014000
	0x01EA066C ADD X1, X1, 0xE58
	0x01EA0670 MOV X2, X31
	0x01EA0674 BL 0x3EB1B00
	0x01EA0678 MOV X20, X0
	0x01EA067C BL 0x3EB1AE0
	0x01EA0680 MOV X0, X20
	0x01EA0684 BL 0x1D2C690
	0x01EA0688 BL 0x1990590
	0x01EA068C STR X29, [X31 - 0x60]!
	0x01EA0690 STP X30, X27, [X31 + 0x10]
	0x01EA0694 STP X26, X25, [X31 + 0x20]
	0x01EA0698 STP X24, X23, [X31 + 0x30]
	0x01EA069C STP X22, X21, [X31 + 0x40]
	0x01EA06A0 STP X20, X19, [X31 + 0x50]
	0x01EA06A4 SUB X31, X31, 0x430
	0x01EA06A8 MRS X25, 0xC000
	0x01EA06AC LDR X8, [X25 + 0x28]
	0x01EA06B0 ADRP X26, 0x2539000
	0x01EA06B4 ADRP X24, 0x225E000
	0x01EA06B8 ADRP X21, 0x225E000
	0x01EA06BC STR X8, [X31 + 0x428]
	0x01EA06C0 ADRP X23, 0x225E000
	0x01EA06C4 ADRP X22, 0x225E000
	0x01EA06C8 LDRB W8, [X26 + 0x320]
	0x01EA06CC LDR X24, [X24 + 0x900]
	0x01EA06D0 LDR X21, [X21 + 0x908]
	0x01EA06D4 LDR X23, [X23 + 0x910]
	0x01EA06D8 LDR X22, [X22 + 0x918]
	0x01EA06DC MOV X20, X1
	0x01EA06E0 MOV X19, X0
	0x01EA06E4 TBNZ X8, 0x0, 0x1EA08A0
	0x01EA06E8 ADRP X0, 0x225E000
	0x01EA06EC LDR X0, [X0 + 0x7E0]
	0x01EA06F0 BL 0x1C16CF4
	0x01EA06F4 ADRP X0, 0x225E000
	0x01EA06F8 LDR X0, [X0 + 0x920]
	0x01EA06FC BL 0x1C16CF4
	0x01EA0700 ADRP X0, 0x225E000
	0x01EA0704 LDR X0, [X0 + 0x840]
	0x01EA0708 BL 0x1C16CF4
	0x01EA070C ADRP X0, 0x225A000
	0x01EA0710 LDR X0, [X0 + 0xCB0]
	0x01EA0714 BL 0x1C16CF4
	0x01EA0718 ADRP X0, 0x225E000
	0x01EA071C LDR X0, [X0 + 0x928]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+112], X24
	004 Move [X31+120], X23
	005 Move [X31+128], X22
	006 Move [X31+136], X21
	007 Move [X31+144], X20
	008 Move [X31+152], X19
	009 Move X24, 0x253B000
	010 Move X20, 0x2260000
	011 Move W8, [X24+796]
	012 Move X20, [X20+2056]
	013 Move W21, W3
	014 Move W22, W2
	015 Move W23, W1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {83}
	021 Move X0, 0x2260000
	022 Move X0, [X0+2064]
	023 Call 0x1C17CF4
	024 Move X0, 0x2260000
	025 Move X0, [X0+2072]
	026 Call 0x1C17CF4
	027 Move X0, 0x2260000
	028 Move X0, [X0+2080]
	029 Call 0x1C17CF4
	030 Move X0, 0x225F000
	031 Move X0, [X0+2208]
	032 Call 0x1C17CF4
	033 Move X0, 0x2260000
	034 Move X0, [X0+2088]
	035 Call 0x1C17CF4
	036 Move X0, 0x225F000
	037 Move X0, [X0+2216]
	038 Call 0x1C17CF4
	039 Move X0, 0x225F000
	040 Move X0, [X0+2224]
	041 Call 0x1C17CF4
	042 Move X0, 0x2260000
	043 Move X0, [X0+2096]
	044 Call 0x1C17CF4
	045 Move X0, 0x2260000
	046 Move X0, [X0+2104]
	047 Call 0x1C17CF4
	048 Move X0, 0x2260000
	049 Move X0, [X0+2112]
	050 Call 0x1C17CF4
	051 Move X0, 0x225C000
	052 Move X0, [X0+3248]
	053 Call 0x1C17CF4
	054 Move X0, 0x2260000
	055 Move X0, [X0+2120]
	056 Call 0x1C17CF4
	057 Move X0, 0x225F000
	058 Move X0, [X0+2240]
	059 Call 0x1C17CF4
	060 Move X0, 0x225F000
	061 Move X0, [X0+2720]
	062 Call 0x1C17CF4
	063 Move X0, 0x225F000
	064 Move X0, [X0+2728]
	065 Call 0x1C17CF4
	066 Move X0, 0x225E000
	067 Move X0, [X0+3712]
	068 Call 0x1C17CF4
	069 Move X0, 0x225E000
	070 Move X0, [X0+3816]
	071 Call 0x1C17CF4
	072 Move X0, 0x225E000
	073 Move X0, [X0+3104]
	074 Call 0x1C17CF4
	075 Move X0, 0x2256000
	076 Move X0, [X0+1976]
	077 Call 0x1C17CF4
	078 Move X0, 0x2260000
	079 Move X0, [X0+2056]
	080 Call 0x1C17CF4
	081 Move W8, 1
	082 Move [X24+796], W8
	083 Move X0, [X20]
	084 Move [X31+64], X31
	085 Move [X31+72], X31
	086 Move [X31+80], X31
	087 Move [X31+32], X31
	088 Move [X31+40], X31
	089 Move [X31+48], X31
	090 Call 0x1C17F10
	091 Move X1, X31
	092 Move X20, X0
	093 Call Object..ctor, X0
	094 Compare X20, 0
	095 JumpIfEqual {447}
	096 And W8, W23, 1
	097 Move [X20+24], X19
	098 Move [X20+16], W8
	099 Move [X20+32], W22
	100 Move X23, 0x2255000
	101 Move W9, [X19+88]
	102 Move X23, [X23+1976]
	103 Compare W9, 0
	104 JumpIfEqual {140}
	105 Move X0, [X19+80]
	106 Move W9, 1
	107 NotImplemented "Instruction STURH not yet implemented."
	108 Move [X19+67], W31
	109 Move [X19+64], W9
	110 Move [X19+68], W22
	111 Move [X19+72], W8
	112 NotImplemented "Instruction STURH not yet implemented."
	113 Move [X19+75], W31
	114 Compare X0, 0
	115 JumpIfEqual {118}
	116 Move X1, X31
	117 Call Simulation.NotifyWaitingForShutdown, X0
	118 Move X0, [X23]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {123}
	122 Call 0x1C17DFC
	123 Move X19, 0x2539000
	124 Move W8, [X19+3869]
	125 Compare W8, 0
	126 JumpIfNotEqual {132}
	127 Move X0, 0x2255000
	128 Move X0, [X0+1976]
	129 Call 0x1C17CF4
	130 Move W8, 1
	131 Move [X19+3869], W8
	132 Move X0, [X23]
	133 Move W8, [X0+224]
	134 Compare W8, 0
	135 JumpIfNotEqual {138}
	136 Call 0x1C17DFC
	137 Move X0, [X23]
	138 Move X8, [X0+184]
	139 Move X0, [X8+48]
	140 Add X8, X19, 64
	141 Move X0, X19
	142 Move [X8+8], W31
	143 Move [X8], X31
	144 Call NetworkRunner.RegisterNetworkCallbacks, X0
	145 Move W8, [X19+92]
	146 Compare W8, 0
	147 JumpIfEqual {181}
	148 Move X8, 0x225D000
	149 Move X8, [X8+3712]
	150 Move X0, [X8]
	151 Move W8, [X0+224]
	152 Compare W8, 0
	153 JumpIfNotEqual {155}
	154 Call 0x1C17DFC
	155 Move X0, X19
	156 Call NetworkRunner.RemoveInstance, X0
	157 Move W8, [X19+92]
	158 Move TEMP, X8
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfEqual {118}
	162 Move TEMP, X21
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfNotEqual {118}
	166 Move X0, X20
	167 Call <>c__DisplayClass140_0.<Shutdown>g__InvokeOnShutdownCallbacks|1, X0
	168 Move X8, 0x225D000
	169 Move X8, [X8+3104]
	170 Move W1, 1
	171 Move X0, [X8]
	172 Call 0x1C17D6C
	173 Move X21, X0
	174 Move X0, X19
	175 Call NetworkRunner.DisconnectFromCloud, X0
	176 Compare X21, 0
	177 JumpIfEqual {447}
	178 Move X19, X0
	179 Compare X0, 0
	180 JumpIfNotEqual {424}
	181 Move X0, [X19+80]
	182 Move W8, 1
	183 Move [X19+92], W8
	184 Compare X0, 0
	185 JumpIfEqual {188}
	186 Move X1, X31
	187 Call Simulation.ShutdownNativeSocket, X0
	188 Move X21, [X19+168]
	189 Compare X21, 0
	190 JumpIfEqual {216}
	191 Move X10, 0x225F000
	192 Move X8, [X21]
	193 Move X10, [X10+2112]
	194 NotImplemented "Instruction LDRH not yet implemented."
	195 Move X1, [X10]
	196 Compare X9, 0
	197 JumpIfEqual {204}
	198 Move X10, [X8+176]
	199 Add X10, X10, 8
	200 NotImplemented "Instruction LDUR not yet implemented."
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Subtract X9, X9, 1
	203 Add X10, X10, 16
	204 Move W2, 1
	205 Move X0, X21
	206 Call 0x1C5D788
	207 Move W9, [X10]
	208 Add W9, W9, 1
	209 Add X8, X8, W9
	210 Add X0, X8, 312
	211 Move X8, [X0]
	212 Move X2, [X0+8]
	213 Move X0, X21
	214 Move X1, X19
	215 NotImplemented "Instruction BLR not yet implemented."
	216 Move X8, 0x225D000
	217 Move X8, [X8+3712]
	218 Move X0, [X8]
	219 Move W8, [X0+224]
	220 Compare W8, 0
	221 JumpIfNotEqual {223}
	222 Call 0x1C17DFC
	223 Move X0, X19
	224 Call NetworkRunner.RemoveInstance, X0
	225 Call NetworkRunner.RestoreMultiPeerDefaultPhysics, X0
	226 Move X0, X20
	227 Call <>c__DisplayClass140_0.<Shutdown>g__InvokeOnShutdownCallbacks|1, X0
	228 Move X8, [X19+80]
	229 Compare X8, 0
	230 JumpIfEqual {282}
	231 Move X0, [X8+336]
	232 Compare X0, 0
	233 JumpIfEqual {282}
	234 Move X8, 0x225F000
	235 Move X8, [X8+2064]
	236 Move X1, [X8]
	237 Call Dictionary`2<NetworkId, Object>.get_Values, X0
	238 Move X8, 0x225F000
	239 Move X8, [X8+2072]
	240 Move X1, [X8]
	241 Call Enumerable.ToList, X0
	242 Compare X0, 0
	243 JumpIfEqual {447}
	244 Move X8, 0x225F000
	245 Move X8, [X8+2120]
	246 Move X1, [X8]
	247 Add X8, X31, 8
	248 Call List`1<Object>.GetEnumerator, X0
	249 NotImplemented "Instruction LDUR not yet implemented."
	250 Move X8, [X31+24]
	251 Move X21, 0x225F000
	252 Move [X31+4], V0
	253 Move [X31+80], X8
	254 Move X21, [X21+2088]
	255 Move X1, [X21]
	256 Add X0, X31, 64
	257 Call Enumerator<Object>.MoveNext, X0
	258 Move TEMP, X0
	259 And TEMP, TEMP, 1
	260 Compare TEMP, 1
	261 JumpIfNotEqual {277}
	262 Move X8, [X31+80]
	263 Compare X8, 0
	264 JumpIfEqual {446}
	265 Move X1, [X8+184]
	266 Compare X1, 0
	267 JumpIfEqual {255}
	268 Move W8, [X1+96]
	269 Move TEMP, X8
	270 And TEMP, TEMP, 2
	271 Compare TEMP, 2
	272 JumpIfEqual {255}
	273 Move X0, X19
	274 Move W2, W31
	275 Move W3, W31
	276 Call NetworkRunner.DetachInstance, X0, X1, X2, X3
	277 Move X8, 0x225F000
	278 Move X8, [X8+2080]
	279 Add X0, X31, 64
	280 Move X1, [X8]
	281 Call Enumerator<Object>.Dispose, X0
	282 Move X8, 0x225E000
	283 Move X8, [X8+2728]
	284 Move X0, [X8]
	285 Call 0x1C17F10
	286 Move X8, 0x225E000
	287 Move X8, [X8+2720]
	288 Move X21, X0
	289 Move X1, [X8]
	290 Call List`1<Object>..ctor, X0
	291 Move X0, [X19+96]
	292 Compare X0, 0
	293 JumpIfEqual {297}
	294 Move X1, X21
	295 Move X2, X31
	296 Call SimulationBehaviourUpdater.GetAllSimulationBehaviours, X0, X1
	297 Compare X21, 0
	298 JumpIfEqual {447}
	299 Move X8, 0x225E000
	300 Move X8, [X8+2240]
	301 Move X0, X21
	302 Move X1, [X8]
	303 Add X8, X31, 8
	304 Call List`1<Object>.GetEnumerator, X0
	305 NotImplemented "Instruction LDUR not yet implemented."
	306 Move X8, [X31+24]
	307 Move X22, 0x225E000
	308 Move X22, [X22+2216]
	309 Move [X31+2], V0
	310 Move [X31+48], X8
	311 Move X23, 0x225F000
	312 Move X23, [X23+2104]
	313 Move X1, [X22]
	314 Add X0, X31, 32
	315 Call Enumerator<Object>.MoveNext, X0
	316 Move TEMP, X0
	317 And TEMP, TEMP, 1
	318 Compare TEMP, 1
	319 JumpIfNotEqual {349}
	320 Move X0, [X31+48]
	321 Move X1, [X23]
	322 Call 0x1C17E00
	323 Move X21, X0
	324 Compare X0, 0
	325 JumpIfEqual {313}
	326 Move X8, [X21]
	327 Move X1, [X23]
	328 NotImplemented "Instruction LDRH not yet implemented."
	329 Compare X9, 0
	330 JumpIfEqual {337}
	331 Move X10, [X8+176]
	332 Add X10, X10, 8
	333 NotImplemented "Instruction LDUR not yet implemented."
	334 NotImplemented "Instruction CMP not yet implemented."
	335 Subtract X9, X9, 1
	336 Add X10, X10, 16
	337 Move X0, X21
	338 Move W2, W31
	339 Call 0x1C5D788
	340 NotImplemented "Instruction LDRSW not yet implemented."
	341 Add X8, X8, X9
	342 Add X0, X8, 312
	343 Move X8, [X0]
	344 Move X3, [X0+8]
	345 Move X0, X21
	346 Move X1, X19
	347 Move W2, W31
	348 NotImplemented "Instruction BLR not yet implemented."
	349 Move X8, 0x225E000
	350 Move X8, [X8+2208]
	351 Add X0, X31, 32
	352 Move X1, [X8]
	353 Call Enumerator<Object>.Dispose, X0
	354 Move X8, [X19+152]
	355 Compare X8, 0
	356 JumpIfEqual {366}
	357 Move X0, [X8+56]
	358 Compare X0, 0
	359 JumpIfEqual {366}
	360 Move W8, [X0+17]
	361 Compare W8, 0
	362 JumpIfEqual {366}
	363 Move W1, 1
	364 Move X2, X31
	365 Call NetworkPrefabTable.UnloadUnreferenced, X0, X1
	366 Move X0, [X19+80]
	367 Compare X0, 0
	368 JumpIfEqual {371}
	369 Move X1, X31
	370 Call Simulation.Dispose, X0
	371 Move X21, [X19+256]
	372 Move [X19+80], X31
	373 Compare X21, 0
	374 JumpIfEqual {399}
	375 Move X10, 0x225B000
	376 Move X8, [X21]
	377 Move X10, [X10+3248]
	378 NotImplemented "Instruction LDRH not yet implemented."
	379 Move X1, [X10]
	380 Compare X9, 0
	381 JumpIfEqual {388}
	382 Move X10, [X8+176]
	383 Add X10, X10, 8
	384 NotImplemented "Instruction LDUR not yet implemented."
	385 NotImplemented "Instruction CMP not yet implemented."
	386 Subtract X9, X9, 1
	387 Add X10, X10, 16
	388 Move W2, 1
	389 Move X0, X21
	390 Call 0x1C5D788
	391 Move W9, [X10]
	392 Add W9, W9, 1
	393 Add X8, X8, W9
	394 Add X0, X8, 312
	395 Move X8, [X0]
	396 Move X1, [X0+8]
	397 Move X0, X21
	398 NotImplemented "Instruction BLR not yet implemented."
	399 Move [X19+256], X31
	400 Move [X19+392], W31
	401 Move X8, 0x225D000
	402 Move X8, [X8+3816]
	403 Move X0, [X8]
	404 Call 0x1C17F10
	405 Move X1, X31
	406 Move X2, X31
	407 Move X21, X0
	408 Call SessionInfo..ctor, X0, X1
	409 Move X0, X19
	410 Move [X19+400], X21
	411 Call NetworkRunner.DisconnectFromCloud, X0
	412 Move X8, 0x225D000
	413 Move X8, [X8+3104]
	414 Move X19, X0
	415 Move W1, 1
	416 Move X8, [X8]
	417 Move X0, X8
	418 Call 0x1C17D6C
	419 Compare X0, 0
	420 JumpIfEqual {447}
	421 Move X21, X0
	422 Compare X19, 0
	423 JumpIfEqual {430}
	424 Move X8, [X21]
	425 Move X0, X19
	426 Move X1, [X8+64]
	427 Call 0x1C17E00
	428 Compare X0, 0
	429 JumpIfEqual {449}
	430 Move W8, [X21+24]
	431 Compare W8, 0
	432 JumpIfEqual {448}
	433 Move X0, X20
	434 Move X1, X21
	435 Move [X21+32], X19
	436 Call <>c__DisplayClass140_0.<Shutdown>g__ContinueTasksWithDestroy|0, X0, X1
	437 Move X20, [X31+144]
	438 Move X19, [X31+152]
	439 Move X22, [X31+128]
	440 Move X21, [X31+136]
	441 Move X24, [X31+112]
	442 Move X23, [X31+120]
	443 Move X30, [X31+96]
	444 Add X31, X31, 160
	445 Return X0
	446 Call 0x1C17F20
	447 Call 0x1C17F20
	448 Call 0x1C17F28
	449 Call 0x1C17F44
	450 Move X1, X31
	451 Call 0x1C17DEC
	452 NotImplemented "Instruction CMP not yet implemented."
	453 Move X21, X0
	454 Move X0, X21
	455 Call 0x3EB2AD0
	456 Move X21, X0
	457 Move X0, 0x2254000
	458 Move X0, [X0+2000]
	459 Call 0x1C17D08
	460 Move X8, [X21]
	461 Move X1, [X8]
	462 Call 0x1C18270
	463 Move TEMP, X0
	464 And TEMP, TEMP, 1
	465 Compare TEMP, 1
	466 JumpIfNotEqual {479}
	467 Move X21, [X21]
	468 Call 0x3EB2AE0
	469 Move X0, 0x225C000
	470 Move X0, [X0+2224]
	471 Call 0x1C17D08
	472 Move W8, [X0+224]
	473 Compare W8, 0
	474 JumpIfNotEqual {476}
	475 Call 0x1C17DFC
	476 Move X0, X21
	477 Move X1, X31
	478 Call Log.Exception, X0
	479 Move W0, 8
	480 Call 0x3EB2AF0
	481 Move X8, [X21]
	482 Move [X0], X8
	483 Move X1, 0x2015000
	484 Add X1, X1, 3672
	485 Move X2, X31
	486 Call 0x3EB2B00
	487 Move X21, X0
	488 Call 0x3EB2AE0
	489 NotImplemented "Instruction CMP not yet implemented."
	490 Move X21, X0
	491 Move X0, X21
	492 Call 0x3EB2AD0
	493 Move X21, X0
	494 Move X0, 0x2254000
	495 Move X0, [X0+2000]
	496 Call 0x1C17D08
	497 Move X8, [X21]
	498 Move X1, [X8]
	499 Call 0x1C18270
	500 Move TEMP, X0
	501 And TEMP, TEMP, 1
	502 Compare TEMP, 1
	503 JumpIfNotEqual {516}
	504 Move X21, [X21]
	505 Call 0x3EB2AE0
	506 Move X0, 0x225C000
	507 Move X0, [X0+2224]
	508 Call 0x1C17D08
	509 Move W8, [X0+224]
	510 Compare W8, 0
	511 JumpIfNotEqual {513}
	512 Call 0x1C17DFC
	513 Move X0, X21
	514 Move X1, X31
	515 Call Log.Exception, X0
	516 Move W0, 8
	517 Call 0x3EB2AF0
	518 Move X8, [X21]
	519 Move [X0], X8
	520 Move X1, 0x2015000
	521 Add X1, X1, 3672
	522 Move X2, X31
	523 Call 0x3EB2B00
	524 Move X21, X0
	525 Call 0x3EB2AE0
	526 Move X21, X0
	527 NotImplemented "Instruction CMP not yet implemented."
	528 Move X0, X21
	529 Call 0x3EB2AD0
	530 Move X22, [X0]
	531 Call 0x3EB2AE0
	532 Move X8, 0x225F000
	533 Move X8, [X8+2080]
	534 Add X0, X31, 64
	535 Move X1, [X8]
	536 Call Enumerator<Object>.Dispose, X0
	537 Compare X22, 0
	538 JumpIfEqual {282}
	539 Move X22, X31
	540 Move X21, X0
	541 Move X8, 0x225F000
	542 Move X8, [X8+2080]
	543 Move X1, [X8]
	544 Add X0, X31, 64
	545 Call Enumerator<Object>.Dispose, X0
	546 Compare X22, 0
	547 JumpIfEqual {574}
	548 Move X0, X22
	549 Call 0x1C17F18
	550 Move X21, X0
	551 NotImplemented "Instruction CMP not yet implemented."
	552 Move X0, X21
	553 Call 0x3EB2AD0
	554 Move X22, [X0]
	555 Call 0x3EB2AE0
	556 Move X8, 0x225E000
	557 Move X8, [X8+2208]
	558 Add X0, X31, 32
	559 Move X1, [X8]
	560 Call Enumerator<Object>.Dispose, X0
	561 Compare X22, 0
	562 JumpIfEqual {354}
	563 Move X0, X22
	564 Call 0x1C17F18
	565 Move X22, X31
	566 Move X21, X0
	567 Move X8, 0x225E000
	568 Move X8, [X8+2208]
	569 Move X1, [X8]
	570 Add X0, X31, 32
	571 Call Enumerator<Object>.Dispose, X0
	572 Compare X22, 0
	573 JumpIfNotEqual {576}
	574 Move X0, X21
	575 Call 0x1D2D690
	576 Move X0, X22
	577 Call 0x1C17F18
	578 Call 0x1991590

Method: Fusion.Sockets.INetSocket CreateCloudSocket()

Disassembly:
	0x01EA1300 ADD X0, X31, 0x8
	0x01EA1304 STR X31, [X31 + 0x8]
	0x01EA1308 BL 0x24341FC
	0x01EA130C CBZ X19, 0x1EA133C
	0x01EA1310 LDR X3, [X31 + 0x8]
	0x01EA1314 MOVZ W1, 0x8
	0x01EA1318 MOV X0, X19
	0x01EA131C MOV X2, X20
	0x01EA1320 MOV X4, X31
	0x01EA1324 BL 0x1EB7570
	0x01EA1328 LDP X20, X19, [X31 + 0x30]
	0x01EA132C LDP X22, X21, [X31 + 0x20]
	0x01EA1330 LDP X30, X23, [X31 + 0x10]
	0x01EA1334 ADD X31, X31, 0x40
	0x01EA1338 RET
	0x01EA133C BL 0x1C16F20
	0x01EA1340 STP X30, X21, [X31 - 0x20]!
	0x01EA1344 STP X20, X19, [X31 + 0x10]
	0x01EA1348 ADRP X21, 0x2538000
	0x01EA134C LDRB W8, [X21 + 0x336]
	0x01EA1350 MOV X20, X1
	0x01EA1354 MOV X19, X0
	0x01EA1358 TBNZ X8, 0x0, 0x1EA13A0
	0x01EA135C ADRP X0, 0x225D000
	0x01EA1360 LDR X0, [X0 + 0x8E8]
	0x01EA1364 BL 0x1C16CF4
	0x01EA1368 ADRP X0, 0x225C000
	0x01EA136C LDR X0, [X0 + 0x4D8]
	0x01EA1370 BL 0x1C16CF4
	0x01EA1374 ADRP X0, 0x225D000
	0x01EA1378 LDR X0, [X0 + 0xA00]
	0x01EA137C BL 0x1C16CF4
	0x01EA1380 ADRP X0, 0x225D000
	0x01EA1384 LDR X0, [X0 + 0xA08]
	0x01EA1388 BL 0x1C16CF4
	0x01EA138C ADRP X0, 0x225D000
	0x01EA1390 LDR X0, [X0 + 0xA10]
	0x01EA1394 BL 0x1C16CF4
	0x01EA1398 MOVZ W8, 0x1
	0x01EA139C STRB W8, [X21 + 0x336]
	0x01EA13A0 ADRP X8, 0x225D000
	0x01EA13A4 LDR X8, [X8 + 0xA08]
	0x01EA13A8 CBZ X20, 0x1EA13BC
	0x01EA13AC LDRB W9, [X20 + 0x30]
	0x01EA13B0 ANDS W31, W9, 0x8
	0x01EA13B4 CSET W0, EQ
	0x01EA13B8 B 0x1EA13C0
	0x01EA13BC MOV W0, W31
	0x01EA13C0 LDR X1, [X8]
	0x01EA13C4 ADRP X21, 0x225D000
	0x01EA13C8 LDR X21, [X21 + 0xA10]
	0x01EA13CC MOV X2, X31
	0x01EA13D0 BL 0x1E3BA60
	0x01EA13D4 CBZ X20, 0x1EA1500
	0x01EA13D8 ADRP X8, 0x225C000
	0x01EA13DC LDR X8, [X8 + 0x4D8]
	0x01EA13E0 LDR X9, [X20]
	0x01EA13E4 LDR X8, [X8]
	0x01EA13E8 LDRB W11, [X9 + 0x130]
	0x01EA13EC LDRB W10, [X8 + 0x130]
	0x01EA13F0 CMP W11, W10
	0x01EA13F4 B.CS 0x1EA1400
	0x01EA13F8 MOVZ W0, 0x1
	0x01EA13FC B 0x1EA1414
	0x01EA1400 LDR X9, [X9 + 0xC8]
	0x01EA1404 ADD X9, X9, X10, 0x3, LSL
	0x01EA1408 LDUR X9, [X9 - 0x8]
	0x01EA140C CMP X9, X8
	0x01EA1410 CSET W0, NE
	0x01EA1414 LDR X1, [X21]
	0x01EA1418 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2539000
	005 Move W8, [X20+797]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x225E000
	012 Move X0, [X0+2232]
	013 Call 0x1C17CF4
	014 Move X0, 0x225E000
	015 Move X0, [X0+2240]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+797], W8
	019 Move X0, [X19+432]
	020 Compare X0, 0
	021 JumpIfEqual {68}
	022 Move X1, X31
	023 Call CloudServices.get_IsCloudReady, X0
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {68}
	028 Move X8, [X19+432]
	029 Compare X8, 0
	030 JumpIfEqual {86}
	031 Move W9, [X8+18]
	032 Compare W9, 0
	033 JumpIfEqual {43}
	034 Move X0, X31
	035 Call RuntimeUnityFlagsSetup.get_IsUNITY_WEBGL
	036 Move X8, [X19+432]
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {52}
	041 Compare X8, 0
	042 JumpIfEqual {86}
	043 Move X9, 0x225E000
	044 Move X9, [X9+2240]
	045 Move X20, [X8+48]
	046 Move X0, [X9]
	047 Call 0x1C17F10
	048 Move X1, X20
	049 Move X2, X31
	050 Move X19, X0
	051 Call NetSocketRelay..ctor, X0, X1
	052 Compare X8, 0
	053 JumpIfEqual {86}
	054 Move X20, [X8+48]
	055 Move X8, 0x225E000
	056 Move X8, [X8+2232]
	057 Move X0, [X8]
	058 Call 0x1C17F10
	059 Move X1, X20
	060 Move X2, X31
	061 Move X19, X0
	062 Call NetSocketHybrid..ctor, X0, X1
	063 Move X0, X19
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Return X0
	068 Move X0, 0x2253000
	069 Move X0, [X0+1456]
	070 Call 0x1C17D08
	071 Call 0x1C17F10
	072 Move X19, X0
	073 Move X0, 0x225E000
	074 Move X0, [X0+2248]
	075 Call 0x1C17D08
	076 Move X1, X0
	077 Move X0, X19
	078 Move X2, X31
	079 Call InvalidOperationException..ctor, X0, X1
	080 Move X0, 0x225E000
	081 Move X0, [X0+2256]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X19
	085 Call 0x1C17DEC
	086 Call 0x1C17F20

Method: System.Void SetInitializationDone(Fusion.NetworkRunnerInitializeArgs args)

Disassembly:
	0x01EA141C BL 0x1E3BA60
	0x01EA1420 LDR W8, [X20 + 0x30]
	0x01EA1424 STP X19, X31, [X20 + 0x38]
	0x01EA1428 AND W8, W8, 0xFFFFFFEF
	0x01EA142C ORR W8, W8, 0x1
	0x01EA1430 STR W8, [X20 + 0x30]
	0x01EA1434 LDR X0, [X19 + 0x60]
	0x01EA1438 CBZ X0, 0x1EA1514
	0x01EA143C ADRP X21, 0x225D000
	0x01EA1440 LDR X21, [X21 + 0x8E8]
	0x01EA1444 MOV X1, X20
	0x01EA1448 MOV W2, W31
	0x01EA144C MOV X3, X31
	0x01EA1450 BL 0x1E7BE70
	0x01EA1454 LDR X1, [X21]
	0x01EA1458 MOV X0, X20
	0x01EA145C BL 0x1C16E00
	0x01EA1460 CBZ X0, 0x1EA14B0
	0x01EA1464 LDRB W8, [X19 + 0x88]
	0x01EA1468 MOV X20, X0
	0x01EA146C CBZ W8, 0x1EA14BC
	0x01EA1470 LDR X8, [X20]
	0x01EA1474 LDR X1, [X21]
	0x01EA1478 LDRH W9, [X8 + 0x12E]
	0x01EA147C CBZ X9, 0x1EA14A0
	0x01EA1480 LDR X10, [X8 + 0xB0]
	0x01EA1484 ADD X10, X10, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2539000
	005 Move W8, [X20+798]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x225E000
	012 Move X0, [X0+2264]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+798], W8
	016 Move X0, [X19+128]
	017 Compare X0, 0
	018 JumpIfEqual {24}
	019 Move X8, 0x225E000
	020 Move X8, [X8+2264]
	021 Move W1, 1
	022 Move X2, [X8]
	023 Call TaskCompletionSource`1<Boolean>.TrySetResult, X0, X1
	024 Move X0, [X19+432]
	025 Compare X0, 0
	026 JumpIfEqual {33}
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X1, X31
	030 Move X30, [X31+32]
	031 Call CloudServices.StartBackgroundCloudServices, X0
	032 Return 
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return 

Method: System.Void OnRuntimeConfigReady()

Disassembly:
	0x01EA1488 LDUR X11, [X10 - 0x8]
	0x01EA148C CMP X11, X1
	0x01EA1490 B.EQ 0x1EA14E0
	0x01EA1494 SUBS X9, X9, 0x1
	0x01EA1498 ADD X10, X10, 0x10
	0x01EA149C B.NE 0x1EA1488
	0x01EA14A0 MOV X0, X20
	0x01EA14A4 MOV W2, W31
	0x01EA14A8 BL 0x1C5C788
	0x01EA14AC B 0x1EA14EC
	0x01EA14B0 LDP X20, X19, [X31 + 0x10]
	0x01EA14B4 LDP X30, X21, [X31], #0x20
	0x01EA14B8 RET
	0x01EA14BC LDR X0, [X19 + 0x90]
	0x01EA14C0 CBZ X0, 0x1EA155C
	0x01EA14C4 ADRP X8, 0x225D000
	0x01EA14C8 LDR X8, [X8 + 0xA00]
	0x01EA14CC MOV X1, X20
	0x01EA14D0 LDP X20, X19, [X31 + 0x10]
	0x01EA14D4 LDR X2, [X8]
	0x01EA14D8 LDP X30, X21, [X31], #0x20
	0x01EA14DC B 0x24F1750
	0x01EA14E0 LDRSW X9, [X10]
	0x01EA14E4 ADD X8, X8, X9, 0x4, LSL
	0x01EA14E8 ADD X0, X8, 0x138
	0x01EA14EC LDP X2, X1, [X0]
	0x01EA14F0 MOV X0, X20
	0x01EA14F4 LDP X20, X19, [X31 + 0x10]
	0x01EA14F8 LDP X30, X21, [X31], #0x20
	0x01EA14FC BR X2
	0x01EA1500 LDR X1, [X21]
	0x01EA1504 MOVZ W0, 0x1
	0x01EA1508 MOV X2, X31
	0x01EA150C BL 0x1E3BA60
	0x01EA1510 BL 0x1C16F20
	0x01EA1514 ADRP X0, 0x225D000
	0x01EA1518 LDR X0, [X0 + 0xA18]
	0x01EA151C BL 0x1C16D08
	0x01EA1520 BL 0x1C16F10
	0x01EA1524 MOV X19, X0
	0x01EA1528 ADRP X0, 0x225D000
	0x01EA152C LDR X0, [X0 + 0xA20]
	0x01EA1530 BL 0x1C16D08
	0x01EA1534 MOV X1, X0
	0x01EA1538 MOV X0, X19
	0x01EA153C MOV X2, X31
	0x01EA1540 BL 0x33803F4
	0x01EA1544 ADRP X0, 0x225D000
	0x01EA1548 LDR X0, [X0 + 0xA28]
	0x01EA154C BL 0x1C16D08
	0x01EA1550 MOV X1, X0
	0x01EA1554 MOV X0, X19
	0x01EA1558 BL 0x1C16DEC
	0x01EA155C BL 0x1C16F20
	0x01EA1560 STP X30, X21, [X31 - 0x20]!
	0x01EA1564 STP X20, X19, [X31 + 0x10]
	0x01EA1568 ADRP X20, 0x2538000
	0x01EA156C ADRP X21, 0x225B000
	0x01EA1570 LDRB W8, [X20 + 0x351]
	0x01EA1574 LDR X21, [X21 + 0xE80]
	0x01EA1578 MOV X19, X0
	0x01EA157C TBNZ X8, 0x0, 0x1EA15AC
	0x01EA1580 ADRP X0, 0x225D000
	0x01EA1584 LDR X0, [X0 + 0xA30]
	0x01EA1588 BL 0x1C16CF4
	0x01EA158C ADRP X0, 0x225D000
	0x01EA1590 LDR X0, [X0 + 0xA38]
	0x01EA1594 BL 0x1C16CF4
	0x01EA1598 ADRP X0, 0x225B000
	0x01EA159C LDR X0, [X0 + 0xE80]
	0x01EA15A0 BL 0x1C16CF4
	0x01EA15A4 MOVZ W8, 0x1
	0x01EA15A8 STRB W8, [X20 + 0x351]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2539000
	008 Move W8, [X20+799]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x225E000
	015 Move X0, [X0+2272]
	016 Call 0x1C17CF4
	017 Move X0, 0x225E000
	018 Move X0, [X0+2280]
	019 Call 0x1C17CF4
	020 Move X0, 0x225E000
	021 Move X0, [X0+2288]
	022 Call 0x1C17CF4
	023 Move X0, 0x225E000
	024 Move X0, [X0+2296]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+799], W8
	028 Move X0, [X19+144]
	029 Move W8, 1
	030 Move [X19+136], W8
	031 Compare X0, 0
	032 JumpIfEqual {70}
	033 Move X21, 0x225E000
	034 Move X22, 0x225E000
	035 Move X23, 0x225E000
	036 Move X21, [X21+2272]
	037 Move X22, [X22+2288]
	038 Move X23, [X23+2280]
	039 Move W8, [X0+32]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X1, [X22]
	042 Call Queue`1<Object>.Dequeue, X0
	043 Compare X0, 0
	044 JumpIfEqual {70}
	045 Move X8, [X0]
	046 Move X1, [X23]
	047 Move X20, X0
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Compare X9, 0
	050 JumpIfEqual {57}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move X0, X20
	058 Move W2, W31
	059 Call 0x1C5D788
	060 NotImplemented "Instruction LDRSW not yet implemented."
	061 Add X8, X8, X9
	062 Add X0, X8, 312
	063 Move X8, [X0]
	064 Move X1, [X0+8]
	065 Move X0, X20
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X0, [X19+144]
	068 Compare X0, 0
	069 JumpIfNotEqual {39}
	070 Call 0x1C17F20
	071 Move X0, [X19+424]
	072 Compare X0, 0
	073 JumpIfEqual {77}
	074 Move X2, [X21]
	075 Move W1, W31
	076 Call 0x24DAE74, X0, X1
	077 Move X0, X19
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move X30, [X31+48]
	083 Move X23, [X31+56]

Method: System.Boolean TryGetInterfaceWithDefaultType(System.String defaultTypeName, out T result)

Disassembly:
	0x0222D1D8 MOV X1, X19
	0x0222D1DC BL 0x1C16E00
	0x0222D1E0 CBNZ X0, 0x222D1F4
	0x0222D1E4 MOV X0, X20
	0x0222D1E8 MOV X1, X19
	0x0222D1EC BL 0x1C171E0
	0x0222D1F0 MOV X0, X31
	0x0222D1F4 LDP X20, X19, [X31 + 0x10]
	0x0222D1F8 LDP X30, X21, [X31], #0x20
	0x0222D1FC RET
	0x0222D200 STR X30, [X31 - 0x20]!
	0x0222D204 STP X20, X19, [X31 + 0x10]
	0x0222D208 LDR X8, [X0 + 0x38]
	0x0222D20C MOV X19, X0
	0x0222D210 CBNZ X8, 0x222D240
	0x0222D214 ADRP X0, 0x1EC6000
	0x0222D218 LDR X0, [X0 + 0x598]
	0x0222D21C BL 0x1C16CF4
	0x0222D220 ADRP X0, 0x1EC6000
	0x0222D224 LDR X0, [X0 + 0x6C0]
	0x0222D228 BL 0x1C16CF4
	0x0222D22C LDR X8, [X19 + 0x38]
	0x0222D230 CBNZ X8, 0x222D240
	0x0222D234 MOV X0, X19
	0x0222D238 BL 0x1C5C6E0
	0x0222D23C LDR X8, [X19 + 0x38]
	0x0222D240 ADRP X9, 0x1EC6000
	0x0222D244 LDR X9, [X9 + 0x6C0]
	0x0222D248 LDR X20, [X8]
	0x0222D24C LDR X0, [X9]
	0x0222D250 LDR W9, [X0 + 0xE0]
	0x0222D254 CBNZ W9, 0x222D25C
	0x0222D258 BL 0x1C16DFC
	0x0222D25C MOV X0, X20
	0x0222D260 MOV X1, X31
	0x0222D264 BL 0x338C698
	0x0222D268 ADRP X8, 0x1EC6000
	0x0222D26C LDR X8, [X8 + 0x598]
	0x0222D270 MOV X20, X0
	0x0222D274 LDR X8, [X8]
	0x0222D278 LDR W9, [X8 + 0xE0]
	0x0222D27C CBNZ W9, 0x222D288
	0x0222D280 MOV X0, X8
	0x0222D284 BL 0x1C16DFC
	0x0222D288 MOV X0, X20
	0x0222D28C MOV W1, W31
	0x0222D290 MOV X2, X31
	0x0222D294 BL 0x3C395DC
	0x0222D298 LDR X8, [X19 + 0x38]
	0x0222D29C LDP X20, X19, [X31 + 0x10]
	0x0222D2A0 LDR X1, [X8 + 0x8]
	0x0222D2A4 LDR X30, [X31], #0x20
	0x0222D2A8 B 0x2241D78
	0x0222D2AC STP X30, X21, [X31 - 0x20]!
	0x0222D2B0 STP X20, X19, [X31 + 0x10]
	0x0222D2B4 LDR X8, [X1 + 0x38]
	0x0222D2B8 MOV X19, X1
	0x0222D2BC MOV W20, W0
	0x0222D2C0 CBNZ X8, 0x222D2F0
	0x0222D2C4 ADRP X0, 0x1EC6000
	0x0222D2C8 LDR X0, [X0 + 0x598]
	0x0222D2CC BL 0x1C16CF4
	0x0222D2D0 ADRP X0, 0x1EC6000
	0x0222D2D4 LDR X0, [X0 + 0x6C0]
	0x0222D2D8 BL 0x1C16CF4
	0x0222D2DC LDR X8, [X19 + 0x38]
	0x0222D2E0 CBNZ X8, 0x222D2F0
	0x0222D2E4 MOV X0, X19
	0x0222D2E8 BL 0x1C5C6E0
	0x0222D2EC LDR X8, [X19 + 0x38]
	0x0222D2F0 ADRP X9, 0x1EC6000
	0x0222D2F4 LDR X9, [X9 + 0x6C0]
	0x0222D2F8 LDR X21, [X8]
	0x0222D2FC LDR X0, [X9]
	0x0222D300 LDR W9, [X0 + 0xE0]
	0x0222D304 CBNZ W9, 0x222D30C
	0x0222D308 BL 0x1C16DFC
	0x0222D30C MOV X0, X21
	0x0222D310 MOV X1, X31
	0x0222D314 BL 0x338C698
	0x0222D318 ADRP X8, 0x1EC6000
	0x0222D31C LDR X8, [X8 + 0x598]
	0x0222D320 MOV X21, X0
	0x0222D324 LDR X8, [X8]
	0x0222D328 LDR W9, [X8 + 0xE0]
	0x0222D32C CBNZ W9, 0x222D338
	0x0222D330 MOV X0, X8
	0x0222D334 BL 0x1C16DFC
	0x0222D338 AND W1, W20, 0x1
	0x0222D33C MOV X0, X21
	0x0222D340 MOV X2, X31
	0x0222D344 BL 0x3C395DC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X20, X3
	008 Move X19, X2
	009 Move X22, X1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {24}
	013 Move X0, 0x1EF0000
	014 Move X0, [X0+432]
	015 Call 0x1C17CF4
	016 Move X0, 0x1EC7000
	017 Move X0, [X0+1728]
	018 Call 0x1C17CF4
	019 Move X8, [X20+56]
	020 Compare X8, 0
	021 JumpIfNotEqual {24}
	022 Move X0, X20
	023 Call 0x1C5D6E0
	024 Compare X21, 0
	025 JumpIfEqual {114}
	026 Move X8, [X20+56]
	027 Move X0, X21
	028 Move X1, [X8+8]
	029 Call 0x21A4894, X0
	030 Move [X19], X0
	031 Compare X0, 0
	032 JumpIfEqual {40}
	033 Move W0, 1
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Return X0
	040 Move X8, 0x1EC7000
	041 Move X8, [X8+1728]
	042 Move X0, [X8]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X8, 0x1EF0000
	048 Move X8, [X8+432]
	049 Move X0, X22
	050 Move X2, X20
	051 Move X1, [X8]
	052 Call 0x1C1803C
	053 Move X1, X31
	054 Move X2, X31
	055 Move X22, X0
	056 Call Type.op_Inequality, X0, X1
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {90}
	061 Move X0, X21
	062 Move X1, X31
	063 Call Component.get_gameObject, X0
	064 Compare X0, 0
	065 JumpIfEqual {114}
	066 Move X1, X22
	067 Move X2, X31
	068 Call GameObject.AddComponent, X0, X1
	069 Move X8, [X20+56]
	070 Move X21, X0
	071 Move X22, [X8+16]
	072 Move W8, [X22+309]
	073 Move TEMP, X8
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {80}
	077 Move X0, X22
	078 Call 0x1C5D684
	079 Move X22, X0
	080 Compare X21, 0
	081 JumpIfEqual {92}
	082 Move X0, X21
	083 Move X1, X22
	084 Call 0x1C17E00
	085 Compare X0, 0
	086 JumpIfNotEqual {93}
	087 Move X0, X21
	088 Move X1, X22
	089 Call 0x1C181E0
	090 Move W0, W31
	091 Move [X19], X31
	092 Move X0, X31
	093 Move [X19], X0
	094 Move X8, [X20+56]
	095 Move X19, [X8+16]
	096 Move W8, [X19+309]
	097 Move TEMP, X8
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {104}
	101 Move X0, X19
	102 Call 0x1C5D684
	103 Move X19, X0
	104 Compare X21, 0
	105 JumpIfEqual {33}
	106 Move X0, X21
	107 Move X1, X19
	108 Call 0x1C17E00
	109 Compare X0, 0
	110 JumpIfNotEqual {33}
	111 Move X0, X21
	112 Move X1, X19
	113 Call 0x1C181E0
	114 Call 0x1C17F20

Method: System.Void InvokeOnGameStartedCallback()

Disassembly:
	0x01EA15AC LDR X0, [X21]
	0x01EA15B0 LDR W8, [X0 + 0xE0]
	0x01EA15B4 CBNZ W8, 0x1EA15C0
	0x01EA15B8 BL 0x1C16DFC
	0x01EA15BC LDR X0, [X21]
	0x01EA15C0 LDR X8, [X0 + 0xB8]
	0x01EA15C4 LDR X0, [X8]
	0x01EA15C8 CBZ X0, 0x1EA1674
	0x01EA15CC ADRP X8, 0x225D000
	0x01EA15D0 LDR X8, [X8 + 0xA38]
	0x01EA15D4 MOV X1, X19
	0x01EA15D8 LDR X2, [X8]
	0x01EA15DC BL 0x301C318
	0x01EA15E0 MOV W20, W0
	0x01EA15E4 TBNZ X0, 0x0, 0x1EA1660
	0x01EA15E8 LDR X0, [X21]
	0x01EA15EC LDR W8, [X0 + 0xE0]
	0x01EA15F0 CBNZ W8, 0x1EA15FC
	0x01EA15F4 BL 0x1C16DFC
	0x01EA15F8 LDR X0, [X21]
	0x01EA15FC LDR X8, [X0 + 0xB8]
	0x01EA1600 LDR X0, [X8]
	0x01EA1604 CBZ X0, 0x1EA1674
	0x01EA1608 ADRP X9, 0x225D000
	0x01EA160C LDR X9, [X9 + 0xA30]
	0x01EA1610 LDR W10, [X0 + 0x1C]
	0x01EA1614 LDR X8, [X0 + 0x10]
	0x01EA1618 LDR X9, [X9]
	0x01EA161C ADD W10, W10, 0x1
	0x01EA1620 STR W10, [X0 + 0x1C]
	0x01EA1624 CBZ X8, 0x1EA1674
	0x01EA1628 LDRSW X10, [X0 + 0x18]
	0x01EA162C LDR W11, [X8 + 0x18]
	0x01EA1630 CMP W10, W11
	0x01EA1634 B.CS 0x1EA164C
	0x01EA1638 ADD W9, W10, 0x1
	0x01EA163C ADD X8, X8, X10, 0x3, LSL
	0x01EA1640 STR W9, [X0 + 0x18]
	0x01EA1644 STR X19, [X8 + 0x20]
	0x01EA1648 B 0x1EA1660
	0x01EA164C LDR X8, [X9 + 0x20]
	0x01EA1650 MOV X1, X19
	0x01EA1654 LDR X8, [X8 + 0xC0]
	0x01EA1658 LDR X2, [X8 + 0x70]
	0x01EA165C BL 0x301BF90
	0x01EA1660 ORN W8, W31, W20, 0x0
	0x01EA1664 LDP X20, X19, [X31 + 0x10]
	0x01EA1668 AND W0, W8, 0x1
	0x01EA166C LDP X30, X21, [X31], #0x20
	0x01EA1670 RET
	0x01EA1674 BL 0x1C16F20
	0x01EA1678 STR X30, [X31 - 0x10]!
	0x01EA167C LDR X8, [X0 + 0x98]
	0x01EA1680 CBZ X8, 0x1EA1698
	0x01EA1684 LDR W8, [X8 + 0x20]
	0x01EA1688 CMP W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+232]
	005 Compare X8, 0
	006 JumpIfEqual {13}
	007 Move X19, X0
	008 Move X0, [X8+64]
	009 Move X9, [X8+24]
	010 Move X2, [X8+40]
	011 Move X1, X19
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Return 
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X20, X0
	019 Move X0, X20
	020 Call 0x3EB2AD0
	021 Move X20, X0
	022 Move X0, 0x2253000
	023 Move X0, [X0+2000]
	024 Call 0x1C17D08
	025 Move X8, [X20]
	026 Move X1, [X8]
	027 Call 0x1C18270
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {52}
	032 Move X20, [X20]
	033 Call 0x3EB2AE0
	034 Move X0, 0x225B000
	035 Move X0, [X0+2224]
	036 Call 0x1C17D08
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, 0x225E000
	042 Move X0, [X0+2152]
	043 Call 0x1C17D08
	044 Move X2, X0
	045 Move X0, X19
	046 Move X1, X20
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Call 0x2214878, X0, X1
	051 Return 
	052 Move W0, 8
	053 Call 0x3EB2AF0
	054 Move X8, [X20]
	055 Move [X0], X8
	056 Move X1, 0x2014000
	057 Add X1, X1, 3672
	058 Move X2, X31
	059 Call 0x3EB2B00
	060 Move X20, X0
	061 Call 0x3EB2AE0
	062 Move X0, X20
	063 Call 0x1D2D690
	064 Call 0x1991590

Method: System.Threading.Tasks.Task`1<System.Boolean> Initialize(Fusion.NetworkRunnerInitializeArgs args)

Disassembly:
	0x01EA168C CSET W1, EQ
	0x01EA1690 LDR X30, [X31], #0x10
	0x01EA1694 B 0x1EA6FB8
	0x01EA1698 BL 0x1C16F20
	0x01EA169C STR X30, [X31 - 0x10]!
	0x01EA16A0 LDR X0, [X0 + 0x50]
	0x01EA16A4 CBZ X0, 0x1EA16B8
	0x01EA16A8 MOVZ W1, 0x1
	0x01EA16AC MOV X2, X31
	0x01EA16B0 LDR X30, [X31], #0x10
	0x01EA16B4 B 0x1EC2518
	0x01EA16B8 BL 0x1C16F20
	0x01EA16BC STR X30, [X31 - 0x10]!
	0x01EA16C0 LDR X0, [X0 + 0x50]
	0x01EA16C4 CBZ X0, 0x1EA16D8
	0x01EA16C8 MOV W1, W31
	0x01EA16CC MOV X2, X31
	0x01EA16D0 LDR X30, [X31], #0x10
	0x01EA16D4 B 0x1EC2518
	0x01EA16D8 BL 0x1C16F20
	0x01EA16DC STR X30, [X31 - 0x10]!
	0x01EA16E0 LDR X0, [X0 + 0x50]
	0x01EA16E4 CBZ X0, 0x1EA16F8
	0x01EA16E8 AND W1, W1, 0x1
	0x01EA16EC MOV X2, X31
	0x01EA16F0 LDR X30, [X31], #0x10
	0x01EA16F4 B 0x1EC2518
	0x01EA16F8 BL 0x1C16F20
	0x01EA16FC STR X30, [X31 - 0x10]!
	0x01EA1700 LDR X0, [X0 + 0x60]
	0x01EA1704 CBZ X0, 0x1EA1714
	0x01EA1708 MOV X2, X31
	0x01EA170C LDR X30, [X31], #0x10
	0x01EA1710 B 0x1E7B718
	0x01EA1714 BL 0x1C16F20
	0x01EA1718 STR X30, [X31 - 0x10]!
	0x01EA171C LDR X0, [X0 + 0x60]
	0x01EA1720 CBZ X0, 0x1EA1730
	0x01EA1724 MOV X4, X31
	0x01EA1728 LDR X30, [X31], #0x10
	0x01EA172C B 0x1E7B788
	0x01EA1730 BL 0x1C16F20
	0x01EA1734 STR X30, [X31 - 0x10]!
	0x01EA1738 CBZ X1, 0x1EA1748
	0x01EA173C LDR X0, [X1 + 0x20]
	0x01EA1740 LDR X30, [X31], #0x10
	0x01EA1744 RET
	0x01EA1748 BL 0x1C16F20
	0x01EA174C STR X30, [X31 - 0x10]!
	0x01EA1750 CBZ X1, 0x1EA1760
	0x01EA1754 LDR X0, [X1 + 0x28]
	0x01EA1758 LDR X30, [X31], #0x10
	0x01EA175C RET
	0x01EA1760 BL 0x1C16F20
	0x01EA1764 MOV X2, X31
	0x01EA1768 B 0x1E43928
	0x01EA176C SUB X31, X31, 0x30
	0x01EA1770 STP X30, X21, [X31 + 0x10]
	0x01EA1774 STP X20, X19, [X31 + 0x20]
	0x01EA1778 ADRP X21, 0x2538000
	0x01EA177C LDRB W8, [X21 + 0x321]
	0x01EA1780 MOV X19, X1
	0x01EA1784 MOV X20, X0
	0x01EA1788 TBNZ X8, 0x0, 0x1EA17A0
	0x01EA178C ADRP X0, 0x2253000
	0x01EA1790 LDR X0, [X0 + 0x470]
	0x01EA1794 BL 0x1C16CF4
	0x01EA1798 MOVZ W8, 0x1
	0x01EA179C STRB W8, [X21 + 0x321]
	0x01EA17A0 STR W31, [X31 + 0x4]
	0x01EA17A4 LDR X0, [X20 + 0x50]
	0x01EA17A8 CBZ X0, 0x1EA1858
	0x01EA17AC LDR X8, [X0 + 0x58]
	0x01EA17B0 CBZ X8, 0x1EA1858
	0x01EA17B4 LDR W8, [X8 + 0x38]
	0x01EA17B8 CMP W8, 0x2
	0x01EA17BC B.EQ 0x1EA1838
	0x01EA17C0 CMP W8, 0x1
	0x01EA17C4 B.NE 0x1EA182C
	0x01EA17C8 MOV X1, X31
	0x01EA17CC BL 0x1EBDF30
	0x01EA17D0 TBZ X0, 0x0, 0x1EA182C
	0x01EA17D4 LDR X21, [X20 + 0x1B0]
	0x01EA17D8 CBZ X21, 0x1EA182C
	0x01EA17DC LDR X0, [X20 + 0x50]
	0x01EA17E0 CBZ X0, 0x1EA1858
	0x01EA17E4 AND X1, X19, 0x0
	0x01EA17E8 MOV X2, X31
	0x01EA17EC BL 0x1EC3DA4
	0x01EA17F0 MOV X1, X0
	0x01EA17F4 ADD X2, X31, 0x4
	0x01EA17F8 MOV X0, X21
	0x01EA17FC MOV X3, X31
	0x01EA1800 BL 0x1E69EB8
	0x01EA1804 TBZ X0, 0x0, 0x1EA182C
	0x01EA1808 ADRP X8, 0x2253000
	0x01EA180C LDR W1, [X31 + 0x4]
	0x01EA1810 LDR X8, [X8 + 0x470]
	0x01EA1814 ADD X0, X31, 0x8
	0x01EA1818 STR X31, [X31 + 0x8]
	0x01EA181C LDR X2, [X8]
	0x01EA1820 BL 0x24341FC
	0x01EA1824 LDR X0, [X31 + 0x8]
	0x01EA1828 B 0x1EA1848
	0x01EA182C MOV X0, X31
	0x01EA1830 STR X31, [X31 + 0x8]
	0x01EA1834 B 0x1EA1848
	0x01EA1838 AND X1, X19, 0x0
	0x01EA183C MOV X2, X31
	0x01EA1840 BL 0x1EC49F4
	0x01EA1844 STR X0, [X31 + 0x8]
	0x01EA1848 LDP X20, X19, [X31 + 0x20]
	0x01EA184C LDP X30, X21, [X31 + 0x10]
	0x01EA1850 ADD X31, X31, 0x30
	0x01EA1854 RET
	0x01EA1858 BL 0x1C16F20
	0x01EA185C STR X30, [X31 - 0x30]!
	0x01EA1860 STP X22, X21, [X31 + 0x10]
	0x01EA1864 STP X20, X19, [X31 + 0x20]
	0x01EA1868 ADRP X21, 0x2538000
	0x01EA186C LDRB W8, [X21 + 0x322]
	0x01EA1870 MOV X20, X1
	0x01EA1874 MOV X19, X0
	0x01EA1878 TBNZ X8, 0x0, 0x1EA18A8
	0x01EA187C ADRP X0, 0x2255000
	0x01EA1880 LDR X0, [X0 + 0xEF8]
	0x01EA1884 BL 0x1C16CF4
	0x01EA1888 ADRP X0, 0x2255000
	0x01EA188C LDR X0, [X0 + 0xF00]
	0x01EA1890 BL 0x1C16CF4
	0x01EA1894 ADRP X0, 0x2255000
	0x01EA1898 LDR X0, [X0 + 0xE40]
	0x01EA189C BL 0x1C16CF4
	0x01EA18A0 MOVZ W8, 0x1
	0x01EA18A4 STRB W8, [X21 + 0x322]
	0x01EA18A8 MOV X0, X19
	0x01EA18AC STR X31, [X31 + 0x8]
	0x01EA18B0 BL 0x1E9DF98
	0x01EA18B4 MOV W8, W0
	0x01EA18B8 MOV X0, X31
	0x01EA18BC TBZ X8, 0x0, 0x1EA1974
	0x01EA18C0 LDR X0, [X19 + 0x50]
	0x01EA18C4 CBZ X0, 0x1EA18E0
	0x01EA18C8 LDR X8, [X0]
	0x01EA18CC LDR X9, [X8 + 0x268]
	0x01EA18D0 LDR X1, [X8 + 0x270]
	0x01EA18D4 BLR X9
	0x01EA18D8 MOV X21, X0
	0x01EA18DC B 0x1EA18E4
	0x01EA18E0 MOV W21, W31
	0x01EA18E4 ADRP X22, 0x2255000
	0x01EA18E8 LDR X22, [X22 + 0xE40]
	0x01EA18EC LDR X0, [X22]
	0x01EA18F0 LDR W8, [X0 + 0xE0]
	0x01EA18F4 CBNZ W8, 0x1EA18FC
	0x01EA18F8 BL 0x1C16DFC
	0x01EA18FC CMP W21, W20
	0x01EA1900 B.EQ 0x1EA1964
	0x01EA1904 LDR X0, [X22]
	0x01EA1908 LDR W8, [X0 + 0xE0]
	0x01EA190C CBZ W8, 0x1EA195C
	0x01EA1910 CBZ W20, 0x1EA1964
	0x01EA1914 AND X1, X20, 0x0
	0x01EA1918 MOV X0, X19
	0x01EA191C BL 0x1EA176C
	0x01EA1920 ANDS W31, W0, 0xFF
	0x01EA1924 STR X0, [X31 + 0x8]
	0x01EA1928 B.EQ 0x1EA1970
	0x01EA192C LDR X19, [X19 + 0x1B0]
	0x01EA1930 CBZ X19, 0x1EA1970
	0x01EA1934 ADRP X8, 0x2255000
	0x01EA1938 LDR X8, [X8 + 0xF00]
	0x01EA193C ADD X0, X31, 0x8
	0x01EA1940 LDR X1, [X8]
	0x01EA1944 BL 0x2434214
	0x01EA1948 MOV W1, W0
	0x01EA194C MOV X0, X19
	0x01EA1950 MOV X2, X31
	0x01EA1954 BL 0x1E69E04
	0x01EA1958 B 0x1EA1974
	0x01EA195C BL 0x1C16DFC
	0x01EA1960 CBNZ W20, 0x1EA1914
	0x01EA1964 MOV X0, X19
	0x01EA1968 BL 0x1EA1984
	0x01EA196C B 0x1EA1974
	0x01EA1970 MOV X0, X31
	0x01EA1974 LDP X20, X19, [X31 + 0x20]
	0x01EA1978 LDP X22, X21, [X31 + 0x10]
	0x01EA197C LDR X30, [X31], #0x30
	0x01EA1980 RET
	0x01EA1984 STP X30, X19, [X31 - 0x10]!
	0x01EA1988 MOV X19, X0
	0x01EA198C BL 0x1E9DF98
	0x01EA1990 TBZ X0, 0x0, 0x1EA19A8
	0x01EA1994 LDR X0, [X19 + 0x1B0]
	0x01EA1998 CBZ X0, 0x1EA19B4
	0x01EA199C MOV X1, X31
	0x01EA19A0 LDP X30, X19, [X31], #0x10
	0x01EA19A4 B 0x1E68634
	0x01EA19A8 MOV X0, X31
	0x01EA19AC LDP X30, X19, [X31], #0x10
	0x01EA19B0 RET
	0x01EA19B4 BL 0x1C16F20
	0x01EA19B8 STP X30, X21, [X31 - 0x20]!
	0x01EA19BC STP X20, X19, [X31 + 0x10]
	0x01EA19C0 MOV X20, X2
	0x01EA19C4 MOV X19, X1
	0x01EA19C8 MOV X21, X0
	0x01EA19CC CBZ X2, 0x1EA19E0
	0x01EA19D0 MOV X0, X21
	0x01EA19D4 MOV X1, X20
	0x01EA19D8 BL 0x1EA1A20
	0x01EA19DC TBZ X0, 0x0, 0x1EA1A10
	0x01EA19E0 LDR X21, [X21 + 0x50]
	0x01EA19E4 MOV X0, X20
	0x01EA19E8 MOV X1, X31
	0x01EA19EC BL 0x1E944EC
	0x01EA19F0 CBZ X21, 0x1EA1A1C
	0x01EA19F4 AND X1, X19, 0x0
	0x01EA19F8 LDP X20, X19, [X31 + 0x10]
	0x01EA19FC AND X2, X0, 0x0
	0x01EA1A00 MOV X0, X21
	0x01EA1A04 MOV X3, X31
	0x01EA1A08 LDP X30, X21, [X31], #0x20
	0x01EA1A0C B 0x1EC4B10
	0x01EA1A10 LDP X20, X19, [X31 + 0x10]
	0x01EA1A14 LDP X30, X21, [X31], #0x20
	0x01EA1A18 RET
	0x01EA1A1C BL 0x1C16F20
	0x01EA1A20 SUB X31, X31, 0x20
	0x01EA1A24 STP X30, X19, [X31 + 0x10]
	0x01EA1A28 MOV W8, W31
	0x01EA1A2C STR X31, [X31 + 0x8]
	0x01EA1A30 CBZ X1, 0x1EA1A80
	0x01EA1A34 LDR X0, [X0 + 0x50]
	0x01EA1A38 CBZ X0, 0x1EA1A80
	0x01EA1A3C LDR X8, [X1 + 0x20]
	0x01EA1A40 MOV X19, X1
	0x01EA1A44 CBZ X8, 0x1EA1A50
	0x01EA1A48 LDR W1, [X8]
	0x01EA1A4C B 0x1EA1A54
	0x01EA1A50 MOV X1, X31
	0x01EA1A54 ADD X2, X31, 0x8
	0x01EA1A58 MOV X3, X31
	0x01EA1A5C BL 0x1EC0278
	0x01EA1A60 TBZ X0, 0x0, 0x1EA1A7C
	0x01EA1A64 LDR X8, [X31 + 0x8]
	0x01EA1A68 CBZ X8, 0x1EA1A90
	0x01EA1A6C LDR X8, [X8 + 0xB8]
	0x01EA1A70 CMP X19, X8
	0x01EA1A74 CSET W8, EQ
	0x01EA1A78 B 0x1EA1A80
	0x01EA1A7C MOV W8, W31
	0x01EA1A80 LDP X30, X19, [X31 + 0x10]
	0x01EA1A84 MOV W0, W8
	0x01EA1A88 ADD X31, X31, 0x20
	0x01EA1A8C RET
	0x01EA1A90 BL 0x1C16F20
	0x01EA1A94 STR X30, [X31 - 0x30]!
	0x01EA1A98 STP X22, X21, [X31 + 0x10]
	0x01EA1A9C STP X20, X19, [X31 + 0x20]
	0x01EA1AA0 ADRP X22, 0x2538000
	0x01EA1AA4 ADRP X21, 0x2255000
	0x01EA1AA8 LDRB W8, [X22 + 0x323]
	0x01EA1AAC LDR X21, [X21 + 0xE40]
	0x01EA1AB0 MOV X19, X1
	0x01EA1AB4 MOV X20, X0
	0x01EA1AB8 TBNZ X8, 0x0, 0x1EA1AD0
	0x01EA1ABC ADRP X0, 0x2255000
	0x01EA1AC0 LDR X0, [X0 + 0xE40]
	0x01EA1AC4 BL 0x1C16CF4
	0x01EA1AC8 MOVZ W8, 0x1
	0x01EA1ACC STRB W8, [X22 + 0x323]
	0x01EA1AD0 LDR X0, [X21]
	0x01EA1AD4 STR X31, [X31 + 0x8]
	0x01EA1AD8 LDR W8, [X0 + 0xE0]
	0x01EA1ADC CBNZ W8, 0x1EA1AE4
	0x01EA1AE0 BL 0x1C16DFC
	0x01EA1AE4 CMP W19, 0x1
	0x01EA1AE8 B.LT 0x1EA1B28
	0x01EA1AEC LDR X20, [X20 + 0x50]
	0x01EA1AF0 CBZ X20, 0x1EA1B3C
	0x01EA1AF4 AND X1, X19, 0x0
	0x01EA1AF8 MOV X0, X20
	0x01EA1AFC MOV X2, X31
	0x01EA1B00 BL 0x1EC4A74
	0x01EA1B04 AND X1, X0, 0x0
	0x01EA1B08 ADD X2, X31, 0x8
	0x01EA1B0C MOV X0, X20
	0x01EA1B10 MOV X3, X31
	0x01EA1B14 BL 0x1EC96E8
	0x01EA1B18 LDR X8, [X31 + 0x8]
	0x01EA1B1C ANDS W31, W0, 0x1
	0x01EA1B20 CSEL X0, X8, X31, NE
	0x01EA1B24 B 0x1EA1B2C
	0x01EA1B28 MOV X0, X31
	0x01EA1B2C LDP X20, X19, [X31 + 0x20]
	0x01EA1B30 LDP X22, X21, [X31 + 0x10]
	0x01EA1B34 LDR X30, [X31], #0x30
	0x01EA1B38 RET
	0x01EA1B3C BL 0x1C16F20
	0x01EA1B40 STR X30, [X31 - 0x20]!
	0x01EA1B44 STP X20, X19, [X31 + 0x10]
	0x01EA1B48 LDR X20, [X0 + 0x50]
	0x01EA1B4C CBZ X20, 0x1EA1B80
	0x01EA1B50 MOV X19, X2
	0x01EA1B54 AND X1, X1, 0x0
	0x01EA1B58 MOV X0, X20
	0x01EA1B5C MOV X2, X31
	0x01EA1B60 BL 0x1EC4A74
	0x01EA1B64 AND X1, X0, 0x0
	0x01EA1B68 MOV X0, X20
	0x01EA1B6C MOV X2, X19
	0x01EA1B70 LDP X20, X19, [X31 + 0x10]
	0x01EA1B74 MOV X3, X31
	0x01EA1B78 LDR X30, [X31], #0x20
	0x01EA1B7C B 0x1EC96E8
	0x01EA1B80 BL 0x1C16F20
	0x01EA1B84 SUB X31, X31, 0xA0
	0x01EA1B88 STP X30, X25, [X31 + 0x60]
	0x01EA1B8C STP X24, X23, [X31 + 0x70]
	0x01EA1B90 STP X22, X21, [X31 + 0x80]
	0x01EA1B94 STP X20, X19, [X31 + 0x90]
	0x01EA1B98 ADRP X22, 0x2538000
	0x01EA1B9C ADRP X21, 0x2257000
	0x01EA1BA0 ADRP X19, 0x2257000
	0x01EA1BA4 LDRB W8, [X22 + 0x324]
	0x01EA1BA8 LDR X21, [X21 + 0x580]
	0x01EA1BAC LDR X19, [X19 + 0x588]
	0x01EA1BB0 MOV X20, X0
	0x01EA1BB4 TBNZ X8, 0x0, 0x1EA1C2C
	0x01EA1BB8 ADRP X0, 0x225D000
	0x01EA1BBC LDR X0, [X0 + 0xA40]
	0x01EA1BC0 BL 0x1C16CF4
	0x01EA1BC4 ADRP X0, 0x225D000
	0x01EA1BC8 LDR X0, [X0 + 0xA48]
	0x01EA1BCC BL 0x1C16CF4
	0x01EA1BD0 ADRP X0, 0x225D000
	0x01EA1BD4 LDR X0, [X0 + 0xA50]
	0x01EA1BD8 BL 0x1C16CF4
	0x01EA1BDC ADRP X0, 0x225D000
	0x01EA1BE0 LDR X0, [X0 + 0xA58]
	0x01EA1BE4 BL 0x1C16CF4
	0x01EA1BE8 ADRP X0, 0x225D000
	0x01EA1BEC LDR X0, [X0 + 0xA60]
	0x01EA1BF0 BL 0x1C16CF4
	0x01EA1BF4 ADRP X0, 0x2257000
	0x01EA1BF8 LDR X0, [X0 + 0x5A0]
	0x01EA1BFC BL 0x1C16CF4
	0x01EA1C00 ADRP X0, 0x2257000
	0x01EA1C04 LDR X0, [X0 + 0x588]
	0x01EA1C08 BL 0x1C16CF4
	0x01EA1C0C ADRP X0, 0x2257000
	0x01EA1C10 LDR X0, [X0 + 0x580]
	0x01EA1C14 BL 0x1C16CF4
	0x01EA1C18 ADRP X0, 0x2252000
	0x01EA1C1C LDR X0, [X0 + 0x598]
	0x01EA1C20 BL 0x1C16CF4
	0x01EA1C24 MOVZ W8, 0x1
	0x01EA1C28 STRB W8, [X22 + 0x324]
	0x01EA1C2C LDR X0, [X21]
	0x01EA1C30 MOVI V0.2D, 0x0
	0x01EA1C34 STR X31, [X31 + 0x50]
	0x01EA1C38 STP V0, V0, [X31 + 0x30]
	0x01EA1C3C BL 0x1C16F10
	0x01EA1C40 LDR X1, [X19]
	0x01EA1C44 MOV X19, X0
	0x01EA1C48 BL 0x301B7C4
	0x01EA1C4C LDR X8, [X20 + 0x50]
	0x01EA1C50 CBZ X8, 0x1EA1D48
	0x01EA1C54 LDR X0, [X8 + 0x150]
	0x01EA1C58 CBZ X0, 0x1EA1D7C
	0x01EA1C5C ADRP X8, 0x225D000
	0x01EA1C60 LDR X8, [X8 + 0xA40]
	0x01EA1C64 ADRP X22, 0x225D000
	0x01EA1C68 LDR X22, [X22 + 0xA50]
	0x01EA1C6C ADRP X23, 0x2252000
	0x01EA1C70 LDR X1, [X8]
	0x01EA1C74 ADRP X24, 0x2257000
	0x01EA1C78 ADRP X21, 0x225D000
	0x01EA1C7C LDR X23, [X23 + 0x598]
	0x01EA1C80 LDR X24, [X24 + 0x5A0]
	0x01EA1C84 LDR X21, [X21 + 0xA48]
	0x01EA1C88 ADD X8, X31, 0x8
	0x01EA1C8C BL 0x2A67974
	0x01EA1C90 LDUR V0, [X31 + 0x8]
	0x01EA1C94 LDUR V1, [X31 + 0x18]
	0x01EA1C98 LDR X8, [X31 + 0x28]
	0x01EA1C9C STP V0, V1, [X31 + 0x30]
	0x01EA1CA0 STR X8, [X31 + 0x50]
	0x01EA1CA4 LDR X1, [X22]
	0x01EA1CA8 ADD X0, X31, 0x30
	0x01EA1CAC BL 0x2C03E60
	0x01EA1CB0 TBZ X0, 0x0, 0x1EA1D3C
	0x01EA1CB4 LDR X25, [X31 + 0x48]
	0x01EA1CB8 CBZ X25, 0x1EA1D64
	0x01EA1CBC LDR X0, [X23]
	0x01EA1CC0 LDR X20, [X25 + 0xB8]
	0x01EA1CC4 LDR W8, [X0 + 0xE0]
	0x01EA1CC8 CBNZ W8, 0x1EA1CD0
	0x01EA1CCC BL 0x1C16DFC
	0x01EA1CD0 MOV X0, X20
	0x01EA1CD4 MOV X1, X31
	0x01EA1CD8 BL 0x3C38948
	0x01EA1CDC TBZ X0, 0x0, 0x1EA1CA4
	0x01EA1CE0 CBZ X19, 0x1EA1D6C
	0x01EA1CE4 LDR W10, [X19 + 0x1C]
	0x01EA1CE8 LDR X1, [X25 + 0xB8]
	0x01EA1CEC LDR X8, [X19 + 0x10]
	0x01EA1CF0 LDR X9, [X24]
	0x01EA1CF4 ADD W10, W10, 0x1
	0x01EA1CF8 STR W10, [X19 + 0x1C]
	0x01EA1CFC CBZ X8, 0x1EA1D74
	0x01EA1D00 LDRSW X10, [X19 + 0x18]
	0x01EA1D04 LDR W11, [X8 + 0x18]
	0x01EA1D08 CMP W10, W11
	0x01EA1D0C B.CS 0x1EA1D24
	0x01EA1D10 ADD W9, W10, 0x1
	0x01EA1D14 ADD X8, X8, X10, 0x3, LSL
	0x01EA1D18 STR W9, [X19 + 0x18]
	0x01EA1D1C STR X1, [X8 + 0x20]
	0x01EA1D20 B 0x1EA1CA4
	0x01EA1D24 LDR X8, [X9 + 0x20]
	0x01EA1D28 LDR X8, [X8 + 0xC0]
	0x01EA1D2C LDR X2, [X8 + 0x70]
	0x01EA1D30 MOV X0, X19
	0x01EA1D34 BL 0x301BF90
	0x01EA1D38 B 0x1EA1CA4
	0x01EA1D3C LDR X1, [X21]
	0x01EA1D40 ADD X0, X31, 0x30
	0x01EA1D44 BL 0x2C03F78
	0x01EA1D48 MOV X0, X19
	0x01EA1D4C LDP X20, X19, [X31 + 0x90]
	0x01EA1D50 LDP X22, X21, [X31 + 0x80]
	0x01EA1D54 LDP X24, X23, [X31 + 0x70]
	0x01EA1D58 LDP X30, X25, [X31 + 0x60]
	0x01EA1D5C ADD X31, X31, 0xA0
	0x01EA1D60 RET
	0x01EA1D64 MOV X22, X21
	0x01EA1D68 BL 0x1C16F20
	0x01EA1D6C MOV X22, X21
	0x01EA1D70 BL 0x1C16F20
	0x01EA1D74 MOV X22, X21
	0x01EA1D78 BL 0x1C16F20
	0x01EA1D7C BL 0x1C16F20
	0x01EA1D80 B 0x1EA1D94
	0x01EA1D84 B 0x1EA1D94
	0x01EA1D88 B 0x1EA1D94
	0x01EA1D8C B 0x1EA1D98
	0x01EA1D90 B 0x1EA1D98
	0x01EA1D94 MOV X22, X21
	0x01EA1D98 MOV X20, X0
	0x01EA1D9C CMP W1, 0x1
	0x01EA1DA0 B.NE 0x1EA1DCC
	0x01EA1DA4 MOV X0, X20
	0x01EA1DA8 BL 0x3EB1AD0
	0x01EA1DAC LDR X21, [X0]
	0x01EA1DB0 BL 0x3EB1AE0
	0x01EA1DB4 LDR X1, [X22]
	0x01EA1DB8 ADD X0, X31, 0x30
	0x01EA1DBC BL 0x2C03F78
	0x01EA1DC0 CBZ X21, 0x1EA1D48
	0x01EA1DC4 MOV X0, X21
	0x01EA1DC8 BL 0x1C16F18
	0x01EA1DCC MOV X21, X31
	0x01EA1DD0 B 0x1EA1DD8
	0x01EA1DD4 MOV X20, X0
	0x01EA1DD8 LDR X1, [X22]
	0x01EA1DDC ADD X0, X31, 0x30
	0x01EA1DE0 BL 0x2C03F78
	0x01EA1DE4 CBNZ X21, 0x1EA1DF0
	0x01EA1DE8 MOV X0, X20
	0x01EA1DEC BL 0x1D2C690
	0x01EA1DF0 MOV X0, X21
	0x01EA1DF4 BL 0x1C16F18
	0x01EA1DF8 BL 0x1990590
	0x01EA1DFC STR X30, [X31 - 0x10]!
	0x01EA1E00 LDR X0, [X0 + 0x50]
	0x01EA1E04 CBZ X0, 0x1EA1E20
	0x01EA1E08 LDR X8, [X0]
	0x01EA1E0C AND X1, X1, 0x0
	0x01EA1E10 LDR X3, [X8 + 0x278]
	0x01EA1E14 LDR X2, [X8 + 0x280]
	0x01EA1E18 LDR X30, [X31], #0x10
	0x01EA1E1C BR X3
	0x01EA1E20 BL 0x1C16F20
	0x01EA1E24 STR X30, [X31 - 0x10]!
	0x01EA1E28 LDR X0, [X0 + 0x50]
	0x01EA1E2C CBZ X0, 0x1EA1E3C
	0x01EA1E30 MOV X2, X31
	0x01EA1E34 LDR X30, [X31], #0x10
	0x01EA1E38 B 0x1ECA2C8
	0x01EA1E3C BL 0x1C16F20
	0x01EA1E40 STR X30, [X31 - 0x20]!
	0x01EA1E44 STP X20, X19, [X31 + 0x10]
	0x01EA1E48 CBZ X1, 0x1EA1E7C
	0x01EA1E4C LDR X0, [X0 + 0x50]
	0x01EA1E50 CBZ X0, 0x1EA1E7C
	0x01EA1E54 LDR W20, [X1 + 0xC]
	0x01EA1E58 MOV X19, X2
	0x01EA1E5C MOV X2, X31
	0x01EA1E60 BL 0x1ECA2C8
	0x01EA1E64 MOV W8, W0
	0x01EA1E68 BFM X8, X20, 0x20, 0x1F
	0x01EA1E6C STR X8, [X19]
	0x01EA1E70 LDP X20, X19, [X31 + 0x10]
	0x01EA1E74 LDR X30, [X31], #0x20
	0x01EA1E78 RET
	0x01EA1E7C BL 0x1C16F20
	0x01EA1E80 STR X30, [X31 - 0x10]!
	0x01EA1E84 LDR X0, [X0 + 0x50]
	0x01EA1E88 CBZ X0, 0x1EA1E9C
	0x01EA1E8C AND X1, X1, 0x0
	0x01EA1E90 MOV X2, X31
	0x01EA1E94 LDR X30, [X31], #0x10
	0x01EA1E98 B 0x1EC2800
	0x01EA1E9C BL 0x1C16F20
	0x01EA1EA0 STR X30, [X31 - 0x30]!
	0x01EA1EA4 STP X22, X21, [X31 + 0x10]
	0x01EA1EA8 STP X20, X19, [X31 + 0x20]
	0x01EA1EAC ADRP X21, 0x2538000
	0x01EA1EB0 LDRB W8, [X21 + 0x325]
	0x01EA1EB4 MOV X19, X1
	0x01EA1EB8 MOV X20, X0
	0x01EA1EBC TBNZ X8, 0x0, 0x1EA1ED4
	0x01EA1EC0 ADRP X0, 0x2255000
	0x01EA1EC4 LDR X0, [X0 + 0xE40]
	0x01EA1EC8 BL 0x1C16CF4
	0x01EA1ECC MOVZ W8, 0x1
	0x01EA1ED0 STRB W8, [X21 + 0x325]
	0x01EA1ED4 ADRP X22, 0x2255000
	0x01EA1ED8 LDR X0, [X20 + 0x50]
	0x01EA1EDC LDR X22, [X22 + 0xE40]
	0x01EA1EE0 CBZ X0, 0x1EA1EFC
	0x01EA1EE4 LDR X8, [X0]
	0x01EA1EE8 LDR X9, [X8 + 0x268]
	0x01EA1EEC LDR X1, [X8 + 0x270]
	0x01EA1EF0 BLR X9
	0x01EA1EF4 MOV X21, X0
	0x01EA1EF8 B 0x1EA1F00
	0x01EA1EFC MOV W21, W31
	0x01EA1F00 LDR X0, [X22]
	0x01EA1F04 LDR W8, [X0 + 0xE0]
	0x01EA1F08 CBNZ W8, 0x1EA1F10
	0x01EA1F0C BL 0x1C16DFC
	0x01EA1F10 CMP W21, W19
	0x01EA1F14 B.EQ 0x1EA1F38
	0x01EA1F18 LDR X0, [X22]
	0x01EA1F1C LDR W8, [X0 + 0xE0]
	0x01EA1F20 CBNZ W8, 0x1EA1F28
	0x01EA1F24 BL 0x1C16DFC
	0x01EA1F28 MOV X0, X31
	0x01EA1F2C BL 0x1E8D7EC
	0x01EA1F30 CMP W19, W0
	0x01EA1F34 B.NE 0x1EA1F4C
	0x01EA1F38 LDR X0, [X20 + 0xC0]
	0x01EA1F3C LDP X20, X19, [X31 + 0x20]
	0x01EA1F40 LDP X22, X21, [X31 + 0x10]
	0x01EA1F44 LDR X30, [X31], #0x30
	0x01EA1F48 RET
	0x01EA1F4C LDR X0, [X20 + 0x50]
	0x01EA1F50 CBZ X0, 0x1EA1F3C
	0x01EA1F54 MOV X1, X31
	0x01EA1F58 BL 0x1EBDF30
	0x01EA1F5C MOV W8, W0
	0x01EA1F60 MOV X0, X31
	0x01EA1F64 TBZ X8, 0x0, 0x1EA1F3C
	0x01EA1F68 LDR X0, [X20 + 0x50]
	0x01EA1F6C CBZ X0, 0x1EA1F88
	0x01EA1F70 AND X1, X19, 0x0
	0x01EA1F74 LDP X20, X19, [X31 + 0x20]
	0x01EA1F78 LDP X22, X21, [X31 + 0x10]
	0x01EA1F7C MOV X2, X31
	0x01EA1F80 LDR X30, [X31], #0x30
	0x01EA1F84 B 0x1EC3BE0
	0x01EA1F88 BL 0x1C16F20
	0x01EA1F8C SUB X31, X31, 0x80
	0x01EA1F90 STR X30, [X31 + 0x50]
	0x01EA1F94 STP X22, X21, [X31 + 0x60]
	0x01EA1F98 STP X20, X19, [X31 + 0x70]
	0x01EA1F9C MRS X22, 0xC000
	0x01EA1FA0 LDR X8, [X22 + 0x28]
	0x01EA1FA4 ADRP X21, 0x2538000
	0x01EA1FA8 MOV X19, X1
	0x01EA1FAC MOV X20, X0
	0x01EA1FB0 STR X8, [X31 + 0x48]
	0x01EA1FB4 LDRB W8, [X21 + 0x326]
	0x01EA1FB8 TBNZ X8, 0x0, 0x1EA1FDC
	0x01EA1FBC ADRP X0, 0x225C000
	0x01EA1FC0 LDR X0, [X0 + 0x78]
	0x01EA1FC4 BL 0x1C16CF4
	0x01EA1FC8 ADRP X0, 0x2255000
	0x01EA1FCC LDR X0, [X0 + 0xE40]
	0x01EA1FD0 BL 0x1C16CF4
	0x01EA1FD4 MOVZ W8, 0x1
	0x01EA1FD8 STRB W8, [X21 + 0x326]
	0x01EA1FDC STP X31, X31, [X31 + 0x30]
	0x01EA1FE0 STR X31, [X31 + 0x40]
	0x01EA1FE4 LDR X0, [X20 + 0x50]
	0x01EA1FE8 CBZ X0, 0x1EA20AC
	0x01EA1FEC MOV X1, X31
	0x01EA1FF0 BL 0x1EBDF30
	0x01EA1FF4 TBZ X0, 0x0, 0x1EA20A8
	0x01EA1FF8 LDR X0, [X20 + 0x50]
	0x01EA1FFC CBZ X0, 0x1EA2018
	0x01EA2000 LDR X8, [X0]
	0x01EA2004 LDR X9, [X8 + 0x268]
	0x01EA2008 LDR X1, [X8 + 0x270]
	0x01EA200C BLR X9
	0x01EA2010 MOV X21, X0
	0x01EA2014 B 0x1EA201C
	0x01EA2018 MOV W21, W31
	0x01EA201C ADRP X8, 0x2254000
	0x01EA2020 LDR X8, [X8 + 0xE40]
	0x01EA2024 LDR X0, [X8]
	0x01EA2028 LDR W8, [X0 + 0xE0]
	0x01EA202C CBNZ W8, 0x1EA2034
	0x01EA2030 BL 0x1C16DFC
	0x01EA2034 CMP W21, W19
	0x01EA2038 B.EQ 0x1EA20A8
	0x01EA203C LDR X0, [X20 + 0x50]
	0x01EA2040 CBZ X0, 0x1EA20FC
	0x01EA2044 AND X1, X19, 0x0
	0x01EA2048 ADD X8, X31, 0x18
	0x01EA204C MOV X2, X31
	0x01EA2050 BL 0x1EC3CF8
	0x01EA2054 LDUR V0, [X31 + 0x18]
	0x01EA2058 STP X31, X31, [X31 + 0x18]
	0x01EA205C ADRP X19, 0x225B000
	0x01EA2060 LDR X8, [X31 + 0x28]
	0x01EA2064 LDR X19, [X19 + 0x78]
	0x01EA2068 STR V0, [X31 + 0x3]
	0x01EA206C STR X31, [X31 + 0x28]
	0x01EA2070 STR X8, [X31 + 0x40]
	0x01EA2074 LDR X0, [X19]
	0x01EA2078 LDR W8, [X0 + 0xE0]
	0x01EA207C CBNZ W8, 0x1EA2084
	0x01EA2080 BL 0x1C16DFC
	0x01EA2084 LDUR V0, [X31 + 0x18]
	0x01EA2088 LDR X8, [X31 + 0x28]
	0x01EA208C ADD X0, X31, 0x30
	0x01EA2090 ADD X1, X31, 0x0
	0x01EA2094 MOV X2, X31
	0x01EA2098 STR V0, [X31]
	0x01EA209C STR X8, [X31 + 0x10]
	0x01EA20A0 BL 0x1EF8788
	0x01EA20A4 TBZ X0, 0x0, 0x1EA20D0
	0x01EA20A8 MOV W0, W31
	0x01EA20AC LDR X8, [X22 + 0x28]
	0x01EA20B0 LDR X9, [X31 + 0x48]
	0x01EA20B4 CMP X8, X9
	0x01EA20B8 B.NE 0x1EA2100
	0x01EA20BC LDP X20, X19, [X31 + 0x70]
	0x01EA20C0 LDP X22, X21, [X31 + 0x60]
	0x01EA20C4 LDR X30, [X31 + 0x50]
	0x01EA20C8 ADD X31, X31, 0x80
	0x01EA20CC RET
	0x01EA20D0 LDR X0, [X19]
	0x01EA20D4 LDR W8, [X0 + 0xE0]
	0x01EA20D8 CBNZ W8, 0x1EA20E0
	0x01EA20DC BL 0x1C16DFC
	0x01EA20E0 ADD X0, X31, 0x30
	0x01EA20E4 MOV X1, X31
	0x01EA20E8 BL 0x1EF8634
	0x01EA20EC ANDS W31, W0, 0x1
	0x01EA20F0 MOVZ W8, 0x1
	0x01EA20F4 CINC W0, W8, EQ
	0x01EA20F8 B 0x1EA20AC
	0x01EA20FC BL 0x1C16F20
	0x01EA2100 BL 0x3EB1B20
	0x01EA2104 STR X30, [X31 - 0x10]!
	0x01EA2108 LDR X0, [X0 + 0x60]
	0x01EA210C CBZ X0, 0x1EA211C
	0x01EA2110 MOV X2, X31
	0x01EA2114 LDR X30, [X31], #0x10
	0x01EA2118 B 0x1E7C968
	0x01EA211C BL 0x1C16F20
	0x01EA2120 STP X30, X25, [X31 - 0x40]!
	0x01EA2124 STP X24, X23, [X31 + 0x10]
	0x01EA2128 STP X22, X21, [X31 + 0x20]
	0x01EA212C STP X20, X19, [X31 + 0x30]
	0x01EA2130 ADRP X21, 0x2537000
	0x01EA2134 LDRB W8, [X21 + 0x327]
	0x01EA2138 MOV X19, X1
	0x01EA213C MOV X20, X0
	0x01EA2140 TBNZ X8, 0x0, 0x1EA217C
	0x01EA2144 ADRP X0, 0x225C000
	0x01EA2148 LDR X0, [X0 + 0xA68]
	0x01EA214C BL 0x1C16CF4
	0x01EA2150 ADRP X0, 0x225C000
	0x01EA2154 LDR X0, [X0 + 0xA70]
	0x01EA2158 BL 0x1C16CF4
	0x01EA215C ADRP X0, 0x225C000
	0x01EA2160 LDR X0, [X0 + 0x928]
	0x01EA2164 BL 0x1C16CF4
	0x01EA2168 ADRP X0, 0x225C000
	0x01EA216C LDR X0, [X0 + 0x930]
	0x01EA2170 BL 0x1C16CF4

ISIL:
	001 Move [X31-96], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Subtract X31, X31, 1072
	013 NotImplemented "Instruction MRS not yet implemented."
	014 Move X8, [X25+40]
	015 Move X26, 0x2539000
	016 Move X24, 0x225E000
	017 Move X21, 0x225E000
	018 Move [X31+1064], X8
	019 Move X23, 0x225E000
	020 Move X22, 0x225E000
	021 Move W8, [X26+800]
	022 Move X24, [X24+2304]
	023 Move X21, [X21+2312]
	024 Move X23, [X23+2320]
	025 Move X22, [X22+2328]
	026 Move X20, X1
	027 Move X19, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {142}
	032 Move X0, 0x225E000
	033 Move X0, [X0+2016]
	034 Call 0x1C17CF4
	035 Move X0, 0x225E000
	036 Move X0, [X0+2336]
	037 Call 0x1C17CF4
	038 Move X0, 0x225E000
	039 Move X0, [X0+2112]
	040 Call 0x1C17CF4
	041 Move X0, 0x225A000
	042 Move X0, [X0+3248]
	043 Call 0x1C17CF4
	044 Move X0, 0x225E000
	045 Move X0, [X0+2344]
	046 Call 0x1C17CF4
	047 Move X0, 0x225E000
	048 Move X0, [X0+2352]
	049 Call 0x1C17CF4
	050 Move X0, 0x225E000
	051 Move X0, [X0+2360]
	052 Call 0x1C17CF4
	053 Move X0, 0x225E000
	054 Move X0, [X0+2368]
	055 Call 0x1C17CF4
	056 Move X0, 0x225E000
	057 Move X0, [X0+2376]
	058 Call 0x1C17CF4
	059 Move X0, 0x225E000
	060 Move X0, [X0+2384]
	061 Call 0x1C17CF4
	062 Move X0, 0x225E000
	063 Move X0, [X0+2392]
	064 Call 0x1C17CF4
	065 Move X0, 0x225E000
	066 Move X0, [X0+2400]
	067 Call 0x1C17CF4
	068 Move X0, 0x225E000
	069 Move X0, [X0+2408]
	070 Call 0x1C17CF4
	071 Move X0, 0x225C000
	072 Move X0, [X0+3712]
	073 Call 0x1C17CF4
	074 Move X0, 0x225E000
	075 Move X0, [X0+2416]
	076 Call 0x1C17CF4
	077 Move X0, 0x225E000
	078 Move X0, [X0+2424]
	079 Call 0x1C17CF4
	080 Move X0, 0x225E000
	081 Move X0, [X0+2432]
	082 Call 0x1C17CF4
	083 Move X0, 0x225E000
	084 Move X0, [X0+2440]
	085 Call 0x1C17CF4
	086 Move X0, 0x225E000
	087 Move X0, [X0+1144]
	088 Call 0x1C17CF4
	089 Move X0, 0x2257000
	090 Move X0, [X0+3056]
	091 Call 0x1C17CF4
	092 Move X0, 0x225E000
	093 Move X0, [X0+2448]
	094 Call 0x1C17CF4
	095 Move X0, 0x225E000
	096 Move X0, [X0+2456]
	097 Call 0x1C17CF4
	098 Move X0, 0x225E000
	099 Move X0, [X0+2464]
	100 Call 0x1C17CF4
	101 Move X0, 0x2253000
	102 Move X0, [X0+1432]
	103 Call 0x1C17CF4
	104 Move X0, 0x225E000
	105 Move X0, [X0+2328]
	106 Call 0x1C17CF4
	107 Move X0, 0x225E000
	108 Move X0, [X0+2472]
	109 Call 0x1C17CF4
	110 Move X0, 0x225E000
	111 Move X0, [X0+2320]
	112 Call 0x1C17CF4
	113 Move X0, 0x225E000
	114 Move X0, [X0+2480]
	115 Call 0x1C17CF4
	116 Move X0, 0x225E000
	117 Move X0, [X0+1944]
	118 Call 0x1C17CF4
	119 Move X0, 0x225E000
	120 Move X0, [X0+2488]
	121 Call 0x1C17CF4
	122 Move X0, 0x2255000
	123 Move X0, [X0+632]
	124 Call 0x1C17CF4
	125 Move X0, 0x225E000
	126 Move X0, [X0+2312]
	127 Call 0x1C17CF4
	128 Move X0, 0x225E000
	129 Move X0, [X0+1776]
	130 Call 0x1C17CF4
	131 Move X0, 0x225E000
	132 Move X0, [X0+2304]
	133 Call 0x1C17CF4
	134 Move X0, 0x225E000
	135 Move X0, [X0+2496]
	136 Call 0x1C17CF4
	137 Move X0, 0x225E000
	138 Move X0, [X0+2504]
	139 Call 0x1C17CF4
	140 Move W8, 1
	141 Move [X26+800], W8
	142 Move X0, [X24]
	143 NotImplemented "Instruction MOVI not yet implemented."
	144 Move [X31+960], W31
	145 Move [X31+65], V0
	146 Move [X31+1008], V0
	147 Move [X31+1016], V0
	148 Move [X31+976], V0
	149 Move [X31+984], V0
	150 Move [X31+928], V0
	151 Move [X31+936], V0
	152 Move [X31+57], V0
	153 Call 0x1C17F10
	154 Move X1, [X21]
	155 Move X21, X0
	156 Call TaskCompletionSource`1<Boolean>..ctor, X0
	157 Move [X19+128], X21
	158 Move X8, [X20+160]
	159 Move [X19+136], W31
	160 Move [X19+232], X8
	161 Move X0, [X23]
	162 Call 0x1C17F10
	163 Move X1, [X22]
	164 Move X21, X0
	165 Call Queue`1<Object>..ctor, X0
	166 Move [X19+144], X21
	167 Call NetworkRunner.InitFusionLogSystem, X0
	168 Move X21, X20
	169 Add X21, X21, 128
	170 Move W8, [X21]
	171 Compare W8, 0
	172 JumpIfEqual {640}
	173 Move W8, [X20+56]
	174 Compare W8, 0
	175 JumpIfNotEqual {183}
	176 Move X0, X20
	177 Move X1, X31
	178 Call NetworkRunnerInitializeArgs.get_IsSinglePlayer, X0
	179 Move TEMP, X0
	180 And TEMP, TEMP, 1
	181 Compare TEMP, 1
	182 JumpIfNotEqual {656}
	183 Move X8, [X20+152]
	184 Compare X8, 0
	185 JumpIfEqual {647}
	186 Move X8, [X19+104]
	187 Compare X8, 0
	188 JumpIfNotEqual {199}
	189 Move X8, 0x225E000
	190 Move X8, [X8+2352]
	191 Move X0, [X8]
	192 Call 0x1C17F10
	193 Move X8, 0x225E000
	194 Move X8, [X8+2344]
	195 Move X22, X0
	196 Move X1, [X8]
	197 Call List`1<Object>..ctor, X0
	198 Move [X19+104], X22
	199 Move X26, 0x225C000
	200 Move X26, [X26+3712]
	201 Move X0, X20
	202 Move X1, X31
	203 Call NetworkRunnerInitializeArgs.get_IsSinglePlayer, X0
	204 Move TEMP, X0
	205 And TEMP, TEMP, 1
	206 Compare TEMP, 1
	207 JumpIfNotEqual {215}
	208 Move X8, 0x225E000
	209 Move X8, [X8+2360]
	210 Move X0, [X8]
	211 Call 0x1C17F10
	212 Move X1, X31
	213 Move X22, X0
	214 Call NetSocketNull..ctor, X0
	215 Move X0, X19
	216 Call NetworkRunner.CreateCloudSocket, X0
	217 Move X22, X0
	218 Move X27, 0x225E000
	219 Move X23, 0x225E000
	220 Move X24, 0x2253000
	221 Move X27, [X27+2480]
	222 Move X23, [X23+2472]
	223 Move X24, [X24+1432]
	224 Add X0, X31, 656
	225 Move W2, 248
	226 Move X1, X20
	227 Call 0x3EB2AC0
	228 Move X0, [X26]
	229 Move W8, [X0+224]
	230 Compare W8, 0
	231 JumpIfNotEqual {233}
	232 Call 0x1C17DFC
	233 Add X0, X31, 408
	234 Add X1, X31, 656
	235 Move W2, 248
	236 Call 0x3EB2AC0
	237 Add X0, X31, 408
	238 Call NetworkRunner.SetupNetworkProjectConfig, X0
	239 Move [X19+152], X0
	240 Move X8, [X20+208]
	241 Move [X19+192], X8
	242 Move X0, [X27]
	243 Call 0x1C17F10
	244 Move X1, [X23]
	245 Move X23, X0
	246 Call Queue`1<SpawnArgs>..ctor, X0
	247 Move X0, X19
	248 Move X1, X31
	249 Move [X19+120], X23
	250 Call Component.get_gameObject, X0
	251 Move X8, [X24]
	252 Move X23, X0
	253 Move W9, [X8+224]
	254 Compare W9, 0
	255 JumpIfNotEqual {258}
	256 Move X0, X8
	257 Call 0x1C17DFC
	258 Move X27, 0x225E000
	259 Move X27, [X27+2464]
	260 Move X0, X23
	261 Move X1, X31
	262 Call Object.DontDestroyOnLoad, X0
	263 Move X8, [X20+168]
	264 Compare X8, 0
	265 JumpIfEqual {267}
	266 Move [X19+184], X8
	267 Move X8, 0x225E000
	268 Move X9, 0x225E000
	269 Move X8, [X8+2496]
	270 Move X9, [X9+2400]
	271 Add X23, X19, 184
	272 Move X0, X19
	273 Move X1, [X8]
	274 Move X3, [X9]
	275 Move X2, X23
	276 Call 0x222D1D8, X0, X1, X2
	277 Move TEMP, X0
	278 And TEMP, TEMP, 1
	279 Compare TEMP, 1
	280 JumpIfEqual {289}
	281 Move X8, 0x225E000
	282 Move X8, [X8+2376]
	283 Move X0, [X8]
	284 Call 0x1C17F10
	285 Move X1, X31
	286 Move X24, X0
	287 Call NetworkObjectProviderDummy..ctor, X0
	288 Move [X23], X24
	289 Move X1, [X27]
	290 Move X0, X21
	291 Call Nullable`1<Int32Enum>.get_Value, X0
	292 Move [X31+976], W0
	293 Move X8, [X19+152]
	294 Move [X31+1024], X19
	295 Move [X31+1008], X22
	296 Add X9, X31, 729
	297 Move [X31+1016], X8
	298 Move V0, [X20+4]
	299 Move X8, [X20+80]
	300 Add X0, X31, 976
	301 Move X1, X31
	302 Move [X9+255], V0
	303 Move [X31+1000], X8
	304 Move W8, [X20+228]
	305 Move [X31+1032], W8
	306 Move X8, [X20+232]
	307 Move [X31+1040], X8
	308 Move W8, [X20+220]
	309 Move [X31+1048], W8
	310 Call SimulationArgs.get_IsServer, X0
	311 Move TEMP, X0
	312 And TEMP, TEMP, 1
	313 Compare TEMP, 1
	314 JumpIfNotEqual {332}
	315 Add X0, X31, 656
	316 Add X1, X31, 976
	317 Move W2, 80
	318 Call 0x3EB2AC0
	319 Move X8, 0x225E000
	320 Move X8, [X8+1944]
	321 Move X0, [X8]
	322 Call 0x1C17F10
	323 Move X21, X0
	324 Add X0, X31, 328
	325 Add X1, X31, 656
	326 Move W2, 80
	327 Call 0x3EB2AC0
	328 Add X1, X31, 328
	329 Move X0, X21
	330 Move X2, X31
	331 Call Server..ctor, X0, X1
	332 Add X0, X31, 656
	333 Add X1, X31, 976
	334 Move W2, 80
	335 Move [X31+1032], W31
	336 Move [X31+1040], X31
	337 Move [X31+1048], W31
	338 Call 0x3EB2AC0
	339 Move X8, 0x225E000
	340 Move X8, [X8+2016]
	341 Move X0, [X8]
	342 Call 0x1C17F10
	343 Move X21, X0
	344 Add X0, X31, 248
	345 Add X1, X31, 656
	346 Move W2, 80
	347 Call 0x3EB2AC0
	348 Add X1, X31, 248
	349 Move X0, X21
	350 Move X2, X31
	351 Call Client..ctor, X0, X1
	352 Move [X19+80], X21
	353 Compare X21, 0
	354 JumpIfEqual {638}
	355 Move X8, 0x225E000
	356 Move X8, [X8+2488]
	357 Move [X21+56], X19
	358 Move X22, [X19+152]
	359 Move X0, [X8]
	360 Call 0x1C17F10
	361 Move X1, X22
	362 Move X2, X31
	363 Move X21, X0
	364 Call SimulationBehaviourUpdater..ctor, X0, X1
	365 Move [X19+96], X21
	366 Compare X21, 0
	367 JumpIfEqual {638}
	368 Move X1, [X20+200]
	369 Move X0, X21
	370 Move X2, X31
	371 Call SimulationBehaviourUpdater.BuildTypeOrder, X0, X1
	372 Move [X19+92], W31
	373 Move [X19+64], X31
	374 Move [X19+72], W31
	375 Move X8, [X20+176]
	376 Compare X8, 0
	377 JumpIfEqual {379}
	378 Move [X19+256], X8
	379 Move X8, 0x225E000
	380 Move X9, 0x225E000
	381 Move X8, [X8+2504]
	382 Move X9, [X9+2408]
	383 Add X21, X19, 256
	384 Move X0, X19
	385 Move X1, [X8]
	386 Move X3, [X9]
	387 Move X2, X21
	388 Call 0x222D1D8, X0, X1, X2
	389 Move TEMP, X0
	390 And TEMP, TEMP, 1
	391 Compare TEMP, 1
	392 JumpIfEqual {401}
	393 Move X8, 0x225E000
	394 Move X8, [X8+2416]
	395 Move X0, [X8]
	396 Call 0x1C17F10
	397 Move X1, X31
	398 Move X22, X0
	399 Call NetworkSceneManagerDummy..ctor, X0
	400 Move [X21], X22
	401 Move W8, [X20+52]
	402 NotImplemented "Instruction LDUR not yet implemented."
	403 NotImplemented "Instruction LDUR not yet implemented."
	404 NotImplemented "Instruction LDUR not yet implemented."
	405 Move [X31+704], W8
	406 Move [X31+672], V1
	407 Move [X31+680], V0
	408 Move [X31+41], V2
	409 Move W9, [X20+52]
	410 NotImplemented "Instruction LDUR not yet implemented."
	411 NotImplemented "Instruction LDUR not yet implemented."
	412 NotImplemented "Instruction LDUR not yet implemented."
	413 Move [X31+960], W9
	414 Move [X31+928], V4
	415 Move [X31+936], V3
	416 Move [X31+57], V5
	417 Move [X19+336], V1
	418 Move [X19+344], V0
	419 Move [X19+368], W8
	420 Move [X19+20], V2
	421 Move V2, [X31+928]
	422 Move V0, [X31+944]
	423 Move V1, [X31+57]
	424 Move W8, W9
	425 Add X9, X19, 264
	426 Move [X9+48], W8
	427 Move [X9+16], V2
	428 Move [X9+24], V0
	429 Move [X9], V1
	430 Move X21, [X20+184]
	431 Compare X21, 0
	432 JumpIfNotEqual {440}
	433 Move X8, 0x225E000
	434 Move X8, [X8+2384]
	435 Move X0, [X8]
	436 Call 0x1C17F10
	437 Move X1, X31
	438 Move X21, X0
	439 Call NetworkRunnerUpdaterDefault..ctor, X0
	440 Move [X19+168], X21
	441 Move X22, [X20+192]
	442 Compare X22, 0
	443 JumpIfNotEqual {451}
	444 Move X8, 0x225E000
	445 Move X8, [X8+2368]
	446 Move X0, [X8]
	447 Call 0x1C17F10
	448 Move X1, X31
	449 Move X22, X0
	450 Call NetworkObjectInitializerUnity..ctor, X0
	451 Move X21, [X19+256]
	452 Move [X19+176], X22
	453 Compare X21, 0
	454 JumpIfEqual {654}
	455 Move X10, 0x225A000
	456 Move X8, [X21]
	457 Move X10, [X10+3248]
	458 NotImplemented "Instruction LDRH not yet implemented."
	459 Move X1, [X10]
	460 Compare X9, 0
	461 JumpIfEqual {468}
	462 Move X10, [X8+176]
	463 Add X10, X10, 8
	464 NotImplemented "Instruction LDUR not yet implemented."
	465 NotImplemented "Instruction CMP not yet implemented."
	466 Subtract X9, X9, 1
	467 Add X10, X10, 16
	468 Move X0, X21
	469 Move W2, W31
	470 Call 0x1C5D788
	471 NotImplemented "Instruction LDRSW not yet implemented."
	472 Add X8, X8, X9
	473 Add X0, X8, 312
	474 Move X8, [X0]
	475 Move X2, [X0+8]
	476 Move X0, X21
	477 Move X1, X19
	478 NotImplemented "Instruction BLR not yet implemented."
	479 Move X8, 0x225E000
	480 Move X8, [X8+2336]
	481 Move X0, X19
	482 Move X1, [X8]
	483 Call 0x21A553C, X0
	484 Compare X0, 0
	485 JumpIfEqual {638}
	486 Move W8, [X0+24]
	487 Move X21, X0
	488 NotImplemented "Instruction CMP not yet implemented."
	489 Move W23, W31
	490 NotImplemented "Instruction CMP not yet implemented."
	491 Add X8, X21, W23
	492 Move X22, [X8+32]
	493 Compare X22, 0
	494 JumpIfEqual {638}
	495 Move X0, X22
	496 Move X1, X31
	497 Call Behaviour.get_enabled, X0
	498 Move TEMP, X0
	499 And TEMP, TEMP, 1
	500 Compare TEMP, 1
	501 JumpIfNotEqual {505}
	502 Move X0, X19
	503 Move X1, X22
	504 Call NetworkRunner.AddSimulationBehaviour, X0, X1
	505 Move W8, [X21+24]
	506 Add W23, W23, 1
	507 NotImplemented "Instruction CMP not yet implemented."
	508 Move X8, [X19+152]
	509 Compare X8, 0
	510 JumpIfEqual {638}
	511 Move X8, [X8+40]
	512 Compare X8, 0
	513 JumpIfEqual {638}
	514 Move W8, [X8+16]
	515 Compare W8, 0
	516 JumpIfEqual {522}
	517 Move X8, 0x225E000
	518 Move X8, [X8+2392]
	519 Move X0, X19
	520 Move X1, [X8]
	521 Call 0x222C524, X0
	522 Move X0, [X26]
	523 Move W8, [X0+224]
	524 Compare W8, 0
	525 JumpIfNotEqual {527}
	526 Call 0x1C17DFC
	527 Move X0, X19
	528 Call NetworkRunner.AddInstance, X0
	529 Move W8, [X19+208]
	530 Compare W8, 0
	531 JumpIfNotEqual {540}
	532 Move X0, [X19+80]
	533 Compare X0, 0
	534 JumpIfEqual {638}
	535 Move X1, X31
	536 Call Simulation.get_IsPlayer, X0
	537 And W1, W0, 1
	538 Move X0, X19
	539 Call NetworkRunner.set_ProvideInput, X0, X1
	540 Move X21, [X19+168]
	541 Compare X21, 0
	542 JumpIfEqual {655}
	543 Move X10, 0x225E000
	544 Move X8, [X21]
	545 Move X10, [X10+2112]
	546 NotImplemented "Instruction LDRH not yet implemented."
	547 Move X1, [X10]
	548 Compare X9, 0
	549 JumpIfEqual {556}
	550 Move X10, [X8+176]
	551 Add X10, X10, 8
	552 NotImplemented "Instruction LDUR not yet implemented."
	553 NotImplemented "Instruction CMP not yet implemented."
	554 Subtract X9, X9, 1
	555 Add X10, X10, 16
	556 Move X0, X21
	557 Move W2, W31
	558 Call 0x1C5D788
	559 NotImplemented "Instruction LDRSW not yet implemented."
	560 Add X8, X8, X9
	561 Add X0, X8, 312
	562 Move X8, [X0]
	563 Move X2, [X0+8]
	564 Move X0, X21
	565 Move X1, X19
	566 NotImplemented "Instruction BLR not yet implemented."
	567 Move X0, [X19+432]
	568 Compare X0, 0
	569 JumpIfEqual {575}
	570 Move X1, X31
	571 Call CloudServices.get_CachedRegionSummary, X0
	572 Move X21, X0
	573 Compare X0, 0
	574 JumpIfNotEqual {580}
	575 Move X8, 0x2255000
	576 Move X8, [X8+632]
	577 Move X8, [X8]
	578 Move X8, [X8+184]
	579 Move X21, [X8]
	580 Move X0, [X26]
	581 Move W8, [X0+224]
	582 Compare W8, 0
	583 JumpIfNotEqual {586}
	584 Call 0x1C17DFC
	585 Move X0, [X26]
	586 Move X8, [X0+184]
	587 Move X0, X19
	588 Move [X8+24], X21
	589 Call NetworkRunner.SetupMultiPeerPhysics, X0
	590 Move X0, [X19+80]
	591 Compare X0, 0
	592 JumpIfEqual {638}
	593 Move X1, X31
	594 Call Simulation.get_IsServer, X0
	595 Move TEMP, X0
	596 And TEMP, TEMP, 1
	597 Compare TEMP, 1
	598 JumpIfNotEqual {616}
	599 Move X8, [X19+80]
	600 Compare X8, 0
	601 JumpIfEqual {638}
	602 Move W8, [X8+208]
	603 Compare W8, 0
	604 JumpIfEqual {616}
	605 Add X0, X31, 0
	606 Move W2, 248
	607 Move X1, X20
	608 Call 0x3EB2AC0
	609 Add X1, X31, 0
	610 Move X0, X19
	611 Call NetworkRunner.RunHostMigrationResume, X0, X1
	612 Move X1, X0
	613 Move X0, X19
	614 Move X2, X31
	615 Call MonoBehaviour.StartCoroutine, X0, X1
	616 Move X0, X19
	617 Call NetworkRunner.SetInitializationDone, X0, X1
	618 Move X8, [X19+128]
	619 Compare X8, 0
	620 JumpIfEqual {638}
	621 Move X0, [X8+16]
	622 Move X8, [X25+40]
	623 Move X9, [X31+1064]
	624 NotImplemented "Instruction CMP not yet implemented."
	625 Add X31, X31, 1072
	626 Move X20, [X31+80]
	627 Move X19, [X31+88]
	628 Move X22, [X31+64]
	629 Move X21, [X31+72]
	630 Move X24, [X31+48]
	631 Move X23, [X31+56]
	632 Move X26, [X31+32]
	633 Move X25, [X31+40]
	634 Move X30, [X31+16]
	635 Move X27, [X31+24]
	636 Move X29, [X31+96]
	637 Return X0
	638 Call 0x1C17F20
	639 Call 0x1C17F28
	640 Move X0, 0x2253000
	641 Move X0, [X0+1456]
	642 Call 0x1C17D08
	643 Call 0x1C17F10
	644 Move X19, X0
	645 Move X0, 0x225E000
	646 Move X0, [X0+2512]
	647 Move X0, 0x2253000
	648 Move X0, [X0+1456]
	649 Call 0x1C17D08
	650 Call 0x1C17F10
	651 Move X19, X0
	652 Move X0, 0x225E000
	653 Move X0, [X0+2520]
	654 Call 0x1C17F20
	655 Call 0x1C17F20
	656 Move X0, 0x2253000
	657 Move X0, [X0+1456]
	658 Call 0x1C17D08
	659 Call 0x1C17F10
	660 Move X19, X0
	661 Move X0, 0x225E000
	662 Move X0, [X0+2528]
	663 Call 0x1C17D08
	664 Move X1, X0
	665 Move X0, X19
	666 Move X2, X31
	667 Call InvalidOperationException..ctor, X0, X1
	668 Move X0, 0x225D000
	669 Move X0, [X0+2536]
	670 Call 0x1C17D08
	671 Move X1, X0
	672 Move X0, X19
	673 Call 0x1C17DEC
	674 Call 0x3EB2B20
	675 NotImplemented "Instruction CMP not yet implemented."
	676 Move X21, X0
	677 Move X0, X21
	678 Call 0x3EB2AD0
	679 Move X21, X0
	680 Move X0, 0x2252000
	681 Move X0, [X0+2000]
	682 Call 0x1C17D08
	683 Move X8, [X21]
	684 Move X1, [X8]
	685 Call 0x1C18270
	686 Move TEMP, X0
	687 And TEMP, TEMP, 1
	688 Compare TEMP, 1
	689 JumpIfNotEqual {706}
	690 Move X21, [X21]
	691 Call 0x3EB2AE0
	692 Move X0, 0x225A000
	693 Move X0, [X0+2224]
	694 Call 0x1C17D08
	695 Move W8, [X0+224]
	696 Compare W8, 0
	697 JumpIfNotEqual {699}
	698 Call 0x1C17DFC
	699 Move X0, 0x225D000
	700 Move X0, [X0+2152]
	701 Call 0x1C17D08
	702 Move X2, X0
	703 Move X0, X19
	704 Move X1, X21
	705 Call 0x2214878, X0, X1
	706 Move W0, 8
	707 Call 0x3EB2AF0
	708 Move X8, [X21]
	709 Move [X0], X8
	710 Move X1, 0x2013000
	711 Add X1, X1, 3672
	712 Move X2, X31
	713 Call 0x3EB2B00
	714 Move X21, X0
	715 Call 0x3EB2AE0
	716 NotImplemented "Instruction CMP not yet implemented."
	717 Move X21, X0
	718 Move X0, X21
	719 Call 0x3EB2AD0
	720 Move X21, X0
	721 Move X0, 0x2252000
	722 Move X0, [X0+2000]
	723 Call 0x1C17D08
	724 Move X8, [X21]
	725 Move X1, [X8]
	726 Call 0x1C18270
	727 Move TEMP, X0
	728 And TEMP, TEMP, 1
	729 Compare TEMP, 1
	730 JumpIfNotEqual {747}
	731 Move X21, [X21]
	732 Call 0x3EB2AE0
	733 Move X0, 0x225A000
	734 Move X0, [X0+2224]
	735 Call 0x1C17D08
	736 Move W8, [X0+224]
	737 Compare W8, 0
	738 JumpIfNotEqual {740}
	739 Call 0x1C17DFC
	740 Move X0, 0x225D000
	741 Move X0, [X0+2152]
	742 Call 0x1C17D08
	743 Move X2, X0
	744 Move X0, X19
	745 Move X1, X21
	746 Call 0x2214878, X0, X1
	747 Move W0, 8
	748 Call 0x3EB2AF0
	749 Move X8, [X21]
	750 Move [X0], X8
	751 Move X1, 0x2013000
	752 Add X1, X1, 3672
	753 Move X2, X31
	754 Call 0x3EB2B00
	755 Move X21, X0
	756 Call 0x3EB2AE0
	757 Move X0, X21
	758 Call 0x1D2D690
	759 Call 0x1991590

Method: System.Void SinglePlayerPause()

Disassembly:
	0x01EA269C MOV W1, W31
	0x01EA26A0 MOV W2, W31
	0x01EA26A4 MOV W3, W31
	0x01EA26A8 B 0x1E9EECC
	0x01EA26AC LDR X0, [X0 + 0x1B0]
	0x01EA26B0 CBZ X0, 0x1EA26BC
	0x01EA26B4 MOV X1, X31
	0x01EA26B8 B 0x1E69400

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move W1, 1
	006 Move X2, X31
	007 Move X30, [X31+16]
	008 Call Simulation.SinglePlayerSetPaused, X0, X1
	009 Return 
	010 Call 0x1C17F20

Method: System.Void SinglePlayerContinue()

Disassembly:
	0x01EA26BC RET
	0x01EA26C0 STR X30, [X31 - 0x30]!
	0x01EA26C4 STP X22, X21, [X31 + 0x10]
	0x01EA26C8 STP X20, X19, [X31 + 0x20]
	0x01EA26CC ADRP X21, 0x2537000
	0x01EA26D0 LDRB W8, [X21 + 0x32C]
	0x01EA26D4 MOV X20, X1
	0x01EA26D8 MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move W1, W31
	006 Move X2, X31
	007 Move X30, [X31+16]
	008 Call Simulation.SinglePlayerSetPaused, X0, X1
	009 Return 
	010 Call 0x1C17F20

Method: System.Void SinglePlayerPause(System.Boolean paused)

Disassembly:
	0x01EA26DC TBNZ X8, 0x0, 0x1EA270C
	0x01EA26E0 ADRP X0, 0x2254000
	0x01EA26E4 LDR X0, [X0 + 0xEF8]
	0x01EA26E8 BL 0x1C16CF4
	0x01EA26EC ADRP X0, 0x2254000
	0x01EA26F0 LDR X0, [X0 + 0xF00]
	0x01EA26F4 BL 0x1C16CF4
	0x01EA26F8 ADRP X0, 0x2254000

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 And W1, W1, 1
	006 Move X2, X31
	007 Move X30, [X31+16]
	008 Call Simulation.SinglePlayerSetPaused, X0, X1
	009 Return 
	010 Call 0x1C17F20

Method: System.Int32 GetInterfaceListsCount(System.Type type)

Disassembly:
	0x01EA26FC LDR X0, [X0 + 0xE40]
	0x01EA2700 BL 0x1C16CF4
	0x01EA2704 MOVZ W8, 0x1
	0x01EA2708 STRB W8, [X21 + 0x32C]
	0x01EA270C STR X31, [X31 + 0x8]
	0x01EA2710 LDR X8, [X19 + 0x50]
	0x01EA2714 CBZ X8, 0x1EA27DC

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+96]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X2, X31
	006 Move X30, [X31+16]
	007 Call SimulationBehaviourUpdater.GetCallbackCount, X0, X1
	008 Return X0
	009 Call 0x1C17F20

Method: Fusion.SimulationBehaviourListScope GetInterfaceListHead(System.Type type, System.Int32 index, out Fusion.SimulationBehaviour head)

Disassembly:
	0x01EA2718 LDR X8, [X8 + 0x58]
	0x01EA271C CBZ X8, 0x1EA27EC
	0x01EA2720 LDR W8, [X8 + 0x38]
	0x01EA2724 CMP W8, 0x2
	0x01EA2728 B.NE 0x1EA27DC
	0x01EA272C MOV X0, X19
	0x01EA2730 BL 0x1EA27F0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+96]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X4, X31
	006 Move X30, [X31+16]
	007 Call SimulationBehaviourUpdater.GetCallbackHead, X0, X1, X2, X3
	008 Return X0
	009 Call 0x1C17F20

Method: Fusion.SimulationBehaviour GetInterfaceListPrev(Fusion.SimulationBehaviour behaviour)

Disassembly:
	0x01EA2734 TBZ X0, 0x0, 0x1EA27DC
	0x01EA2738 LDR X0, [X19 + 0x50]
	0x01EA273C CBZ X0, 0x1EA27DC
	0x01EA2740 LDR X8, [X0]
	0x01EA2744 LDR X9, [X8 + 0x268]
	0x01EA2748 LDR X1, [X8 + 0x270]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {7}
	004 Move X0, [X1+32]
	005 Move X30, [X31+16]
	006 Return X0
	007 Call 0x1C17F20

Method: Fusion.SimulationBehaviour GetInterfaceListNext(Fusion.SimulationBehaviour behaviour)

Disassembly:
	0x01EA274C BLR X9
	0x01EA2750 ADRP X22, 0x2254000
	0x01EA2754 LDR X22, [X22 + 0xE40]
	0x01EA2758 MOV X21, X0
	0x01EA275C LDR X8, [X22]
	0x01EA2760 LDR W9, [X8 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {7}
	004 Move X0, [X1+40]
	005 Move X30, [X31+16]
	006 Return X0
	007 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<System.Collections.Generic.List`1<Fusion.RegionInfo>> GetAvailableRegions(System.String appId = null, System.Threading.CancellationToken cancellationToken = null)

Disassembly:
	0x01EA2764 CBNZ W9, 0x1EA2770
	0x01EA2768 MOV X0, X8

ISIL:
	001 Move X2, X31
	002 Call FusionRealtimeProxy.GetEnabledRegions, X0, X1
	003 Return X0

Method: System.Nullable`1<System.Int32> GetPlayerActorId(Fusion.PlayerRef player)

Disassembly:
	0x01EA276C BL 0x1C16DFC
	0x01EA2770 CMP W21, W20
	0x01EA2774 B.EQ 0x1EA27DC
	0x01EA2778 LDR X0, [X22]
	0x01EA277C LDR W8, [X0 + 0xE0]
	0x01EA2780 CBNZ W8, 0x1EA2788
	0x01EA2784 BL 0x1C16DFC
	0x01EA2788 CMP W20, 0x1
	0x01EA278C B.LT 0x1EA27DC
	0x01EA2790 LDR X0, [X19 + 0x50]
	0x01EA2794 CBZ X0, 0x1EA27EC
	0x01EA2798 AND X1, X20, 0x0
	0x01EA279C MOV X2, X31
	0x01EA27A0 BL 0x1EC49F4
	0x01EA27A4 ANDS W31, W0, 0xFF
	0x01EA27A8 STR X0, [X31 + 0x8]
	0x01EA27AC B.EQ 0x1EA27DC
	0x01EA27B0 ADRP X8, 0x2254000
	0x01EA27B4 LDR X19, [X19 + 0x1B0]
	0x01EA27B8 LDR X8, [X8 + 0xF00]
	0x01EA27BC ADD X0, X31, 0x8
	0x01EA27C0 LDR X1, [X8]
	0x01EA27C4 BL 0x2434214
	0x01EA27C8 CBZ X19, 0x1EA27EC
	0x01EA27CC MOV W1, W0
	0x01EA27D0 MOV X0, X19
	0x01EA27D4 MOV X2, X31
	0x01EA27D8 BL 0x1E6A79C
	0x01EA27DC LDP X20, X19, [X31 + 0x20]
	0x01EA27E0 LDP X22, X21, [X31 + 0x10]
	0x01EA27E4 LDR X30, [X31], #0x30
	0x01EA27E8 RET
	0x01EA27EC BL 0x1C16F20
	0x01EA27F0 STP X30, X19, [X31 - 0x10]!
	0x01EA27F4 LDR W8, [X0 + 0x188]
	0x01EA27F8 CMP W8, 0x2
	0x01EA27FC B.NE 0x1EA282C
	0x01EA2800 MOV X19, X0
	0x01EA2804 LDR X0, [X0 + 0x50]
	0x01EA2808 CBZ X0, 0x1EA282C
	0x01EA280C MOV X1, X31
	0x01EA2810 BL 0x1EC0864
	0x01EA2814 TBZ X0, 0x0, 0x1EA282C
	0x01EA2818 LDR X0, [X19 + 0x1B0]
	0x01EA281C CBZ X0, 0x1EA282C
	0x01EA2820 MOV X1, X31
	0x01EA2824 LDP X30, X19, [X31], #0x10
	0x01EA2828 B 0x1E687A0
	0x01EA282C MOV W0, W31
	0x01EA2830 LDP X30, X19, [X31], #0x10
	0x01EA2834 RET
	0x01EA2838 STR D8, [X31 - 0x30]!
	0x01EA283C STP X30, X21, [X31 + 0x10]
	0x01EA2840 STP X20, X19, [X31 + 0x20]
	0x01EA2844 FCMP D0, 0x0
	0x01EA2848 MOV X19, X0
	0x01EA284C B.NE 0x1EA2878
	0x01EA2850 LDRB W8, [X19 + 0x40]
	0x01EA2854 CBZ W8, 0x1EA289C
	0x01EA2858 LDRB W1, [X19 + 0x48]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2538000
	007 Move W8, [X21+801]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2253000
	015 Move X0, [X0+1136]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+801], W8
	019 Move [X31+4], W31
	020 Move X0, [X20+80]
	021 Compare X0, 0
	022 JumpIfEqual {73}
	023 Move X8, [X0+88]
	024 Compare X8, 0
	025 JumpIfEqual {73}
	026 Move W8, [X8+56]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X1, X31
	030 Call Simulation.get_IsServer, X0
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {61}
	035 Move X21, [X20+432]
	036 Compare X21, 0
	037 JumpIfEqual {61}
	038 Move X0, [X20+80]
	039 Compare X0, 0
	040 JumpIfEqual {73}
	041 And X1, X19, 0
	042 Move X2, X31
	043 Call Simulation.GetPlayerUniqueId, X0, X1
	044 Move X1, X0
	045 Add X2, X31, 4
	046 Move X0, X21
	047 Move X3, X31
	048 Call CloudServices.TryGetActorIdByUniqueId, X0, X1, X2
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {61}
	053 Move X8, 0x2253000
	054 Move W1, [X31+4]
	055 Move X8, [X8+1136]
	056 Add X0, X31, 8
	057 Move [X31+8], X31
	058 Move X2, [X8]
	059 Call Nullable`1<Int32>..ctor, X0, X1
	060 Move X0, [X31+8]
	061 Move X0, X31
	062 Move [X31+8], X31
	063 And X1, X19, 0
	064 Move X2, X31
	065 Call Simulation.GetPlayerActorId, X0, X1
	066 Move [X31+8], X0
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X30, [X31+16]
	070 Move X21, [X31+24]
	071 Add X31, X31, 48
	072 Return X0
	073 Call 0x1C17F20

Method: System.String GetPlayerUserId(Fusion.PlayerRef player = null)

Disassembly:
	0x01EA285C LDR W2, [X19 + 0x44]
	0x01EA2860 MOV X0, X19
	0x01EA2864 LDP X20, X19, [X31 + 0x20]
	0x01EA2868 LDP X30, X21, [X31 + 0x10]
	0x01EA286C MOV W3, W31
	0x01EA2870 LDR V8, [X31], #0x30
	0x01EA2874 B 0x1E9EECC
	0x01EA2878 LDRB W8, [X19 + 0x5C]
	0x01EA287C TBNZ X8, 0x0, 0x1EA289C
	0x01EA2880 LDR X0, [X19 + 0x50]
	0x01EA2884 CBZ X0, 0x1EA2850
	0x01EA2888 MOV V8.16B, V0.16B
	0x01EA288C MOV X1, X31
	0x01EA2890 BL 0x1EC0A6C
	0x01EA2894 TBZ X0, 0x0, 0x1EA28AC
	0x01EA2898 STR W31, [X19 + 0x58]
	0x01EA289C LDP X20, X19, [X31 + 0x20]
	0x01EA28A0 LDP X30, X21, [X31 + 0x10]
	0x01EA28A4 LDR V8, [X31], #0x30
	0x01EA28A8 RET
	0x01EA28AC MOVZ W8, 0x1
	0x01EA28B0 STR W8, [X19 + 0x58]
	0x01EA28B4 MOV X0, X19
	0x01EA28B8 BL 0x1E9F728
	0x01EA28BC LDR X0, [X19 + 0x60]
	0x01EA28C0 MOV X1, X31
	0x01EA28C4 BL 0x1E72840
	0x01EA28C8 MOV X0, X19
	0x01EA28CC BL 0x1EA2A3C
	0x01EA28D0 LDR X0, [X19 + 0x50]
	0x01EA28D4 CBZ X0, 0x1EA2900
	0x01EA28D8 MOV V0.16B, V8.16B
	0x01EA28DC MOV X1, X31
	0x01EA28E0 BL 0x1EC59D0
	0x01EA28E4 LDR X8, [X19 + 0x60]
	0x01EA28E8 STR W0, [X19 + 0xA0]
	0x01EA28EC MOV X0, X8
	0x01EA28F0 MOV X1, X31
	0x01EA28F4 BL 0x1E724E8
	0x01EA28F8 STR W31, [X19 + 0x58]
	0x01EA28FC B 0x1EA2850
	0x01EA2900 BL 0x1C16F20
	0x01EA2904 B 0x1EA290C
	0x01EA2908 B 0x1EA290C
	0x01EA290C MOV X20, X0
	0x01EA2910 B 0x1EA2918
	0x01EA2914 MOV X20, X0
	0x01EA2918 CMP W1, 0x1
	0x01EA291C B.NE 0x1EA29DC
	0x01EA2920 MOV X0, X20
	0x01EA2924 BL 0x3EB1AD0
	0x01EA2928 MOV X20, X0
	0x01EA292C ADRP X0, 0x2251000
	0x01EA2930 LDR X0, [X0 + 0x7D0]
	0x01EA2934 BL 0x1C16D08
	0x01EA2938 LDR X8, [X20]
	0x01EA293C LDR X1, [X8]
	0x01EA2940 BL 0x1C17270
	0x01EA2944 TBZ X0, 0x0, 0x1EA299C
	0x01EA2948 LDR X20, [X20]
	0x01EA294C BL 0x3EB1AE0
	0x01EA2950 ADRP X0, 0x2259000
	0x01EA2954 LDR X0, [X0 + 0x8B0]
	0x01EA2958 BL 0x1C16D08
	0x01EA295C LDR W8, [X0 + 0xE0]
	0x01EA2960 CBNZ W8, 0x1EA2968
	0x01EA2964 BL 0x1C16DFC
	0x01EA2968 ADRP X0, 0x225C000
	0x01EA296C LDR X0, [X0 + 0x868]
	0x01EA2970 BL 0x1C16D08
	0x01EA2974 MOV X2, X0
	0x01EA2978 MOV X0, X19
	0x01EA297C MOV X1, X20
	0x01EA2980 BL 0x2213878

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2538000
	007 Move W8, [X21+802]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x2255000
	015 Move X0, [X0+3832]
	016 Call 0x1C17CF4
	017 Move X0, 0x2255000
	018 Move X0, [X0+3840]
	019 Call 0x1C17CF4
	020 Move X0, 0x2255000
	021 Move X0, [X0+3648]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+802], W8
	025 Move X0, X19
	026 Move [X31+8], X31
	027 Call NetworkRunner.get_IsCloudReady, X0
	028 Move W8, W0
	029 Move X0, X31
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {80}
	034 Move X0, [X19+80]
	035 Compare X0, 0
	036 JumpIfEqual {42}
	037 Move X8, [X0]
	038 Move X9, [X8+616]
	039 Move X1, [X8+624]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move X21, X0
	042 Move W21, W31
	043 Move X22, 0x2255000
	044 Move X22, [X22+3648]
	045 Move X0, [X22]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, [X22]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfEqual {74}
	055 Compare W20, 0
	056 JumpIfEqual {77}
	057 And X1, X20, 0
	058 Move X0, X19
	059 Call NetworkRunner.GetPlayerActorId, X0, X1
	060 And W31, W0, 255
	061 Move [X31+8], X0
	062 Move X19, [X19+432]
	063 Compare X19, 0
	064 JumpIfEqual {79}
	065 Move X8, 0x2255000
	066 Move X8, [X8+3840]
	067 Add X0, X31, 8
	068 Move X1, [X8]
	069 Call Nullable`1<Int32>.get_Value, X0
	070 Move W1, W0
	071 Move X0, X19
	072 Move X2, X31
	073 Call CloudServices.GetActorUserID, X0, X1
	074 Call 0x1C17DFC
	075 Compare W20, 0
	076 JumpIfNotEqual {57}
	077 Move X0, X19
	078 Call NetworkRunner.get_UserId, X0
	079 Move X0, X31
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X22, [X31+16]
	083 Move X21, [X31+24]
	084 Move X30, [X31+48]
	085 Return X0

Method: System.Void SetPlayerObject(Fusion.PlayerRef player, Fusion.NetworkObject networkObject)

Disassembly:
	0x01EA29B8 BL 0x3EB1B00
	0x01EA29BC B 0x1EA29D8
	0x01EA29C0 B 0x1EA29D8
	0x01EA29C4 MOV X21, X1
	0x01EA29C8 MOV X20, X0
	0x01EA29CC BL 0x3EB1AE0
	0x01EA29D0 MOV W1, W21
	0x01EA29D4 B 0x1EA29DC
	0x01EA29D8 MOV X20, X0
	0x01EA29DC MOVZ W8, 0x1
	0x01EA29E0 CMP W1, W8
	0x01EA29E4 B.NE 0x1EA2A08
	0x01EA29E8 MOV X0, X20
	0x01EA29EC BL 0x3EB1AD0
	0x01EA29F0 LDR X21, [X0]
	0x01EA29F4 BL 0x3EB1AE0
	0x01EA29F8 STR W31, [X19 + 0x58]
	0x01EA29FC CBZ X21, 0x1EA2850
	0x01EA2A00 MOV X0, X21
	0x01EA2A04 BL 0x1C16F18
	0x01EA2A08 STR W31, [X19 + 0x58]
	0x01EA2A0C B 0x1EA2A1C
	0x01EA2A10 STR W31, [X19 + 0x58]
	0x01EA2A14 CBNZ X21, 0x1EA2A24
	0x01EA2A18 MOV X20, X0
	0x01EA2A1C MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X2
	006 Move X19, X1
	007 Move X21, X0
	008 Compare X2, 0
	009 JumpIfEqual {17}
	010 Move X0, X21
	011 Move X1, X20
	012 Call NetworkRunner.Exists, X0, X1
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {33}
	017 Move X21, [X21+80]
	018 Move X0, X20
	019 Move X1, X31
	020 Call NetworkObject.op_Implicit, X0
	021 Compare X21, 0
	022 JumpIfEqual {38}
	023 And X1, X19, 0
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 And X2, X0, 0
	027 Move X0, X21
	028 Move X3, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Simulation.SetPlayerObjectId, X0, X1, X2
	032 Return 
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return 
	038 Call 0x1C17F20

Method: Fusion.NetworkObject GetPlayerObject(Fusion.PlayerRef player)

Disassembly:
	0x01EA2A94 STR X31, [X31 + 0xD0]
	0x01EA2A98 STP X31, X31, [X31 + 0x60]
	0x01EA2A9C STP V0, V0, [X20 + 0x30]
	0x01EA2AA0 STP V0, V0, [X20 + 0x10]
	0x01EA2AA4 STR V0, [X31 + 0x8]
	0x01EA2AA8 STR X31, [X31 + 0x70]
	0x01EA2AAC BL 0x1EA7328
	0x01EA2AB0 TBNZ X0, 0x0, 0x1EA2B98
	0x01EA2AB4 LDR X0, [X19 + 0x50]
	0x01EA2AB8 CBZ X0, 0x1EA2B08
	0x01EA2ABC LDR X8, [X0 + 0x58]
	0x01EA2AC0 CBZ X8, 0x1EA2B94
	0x01EA2AC4 LDR W8, [X8 + 0x38]
	0x01EA2AC8 CMP W8, 0x2
	0x01EA2ACC B.NE 0x1EA2B08
	0x01EA2AD0 LDR X8, [X0]
	0x01EA2AD4 LDR X9, [X8 + 0x268]
	0x01EA2AD8 LDR X1, [X8 + 0x270]
	0x01EA2ADC BLR X9
	0x01EA2AE0 ADRP X8, 0x2254000
	0x01EA2AE4 LDR X8, [X8 + 0xE40]
	0x01EA2AE8 MOV X20, X0
	0x01EA2AEC LDR X8, [X8]
	0x01EA2AF0 LDR W9, [X8 + 0xE0]
	0x01EA2AF4 CBNZ W9, 0x1EA2B00
	0x01EA2AF8 MOV X0, X8
	0x01EA2AFC BL 0x1C16DFC
	0x01EA2B00 CMP W20, 0x1
	0x01EA2B04 B.LT 0x1EA2B98
	0x01EA2B08 LDR X0, [X19 + 0x78]
	0x01EA2B0C CBZ X0, 0x1EA2B94
	0x01EA2B10 LDR W8, [X0 + 0x20]
	0x01EA2B14 CMP W8, 0x1
	0x01EA2B18 B.LT 0x1EA2B98
	0x01EA2B1C ADRP X21, 0x225C000
	0x01EA2B20 LDR X21, [X21 + 0xA80]
	0x01EA2B24 ADD W20, W8, 0x1
	0x01EA2B28 LDR X1, [X21]
	0x01EA2B2C ADD X8, X31, 0x8
	0x01EA2B30 BL 0x24F3B74
	0x01EA2B34 ADD X0, X31, 0x80
	0x01EA2B38 ADD X1, X31, 0x8
	0x01EA2B3C MOVZ W2, 0x58

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2538000
	007 Move X21, 0x2255000
	008 Move W8, [X22+803]
	009 Move X21, [X21+3648]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2255000
	017 Move X0, [X0+3648]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+803], W8
	021 Move X0, [X21]
	022 Move [X31+8], X31
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X20, [X20+80]
	029 Compare X20, 0
	030 JumpIfEqual {50}
	031 And X1, X19, 0
	032 Move X0, X20
	033 Move X2, X31
	034 Call Simulation.GetPlayerObjectId, X0, X1
	035 And X1, X0, 0
	036 Add X2, X31, 8
	037 Move X0, X20
	038 Move X3, X31
	039 Call Simulation.TryGetInstance, X0, X1, X2
	040 Move X8, [X31+8]
	041 And W31, W0, 1
	042 NotImplemented "Instruction CSEL not yet implemented."
	043 Move X0, X31
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Return X0
	050 Call 0x1C17F20

Method: System.Boolean TryGetPlayerObject(Fusion.PlayerRef player, out Fusion.NetworkObject networkObject)

Disassembly:
	0x01EA2B40 BL 0x3EB1AC0
	0x01EA2B44 ADD X8, X31, 0x8
	0x01EA2B48 ADD X1, X31, 0x80
	0x01EA2B4C MOV X0, X19
	0x01EA2B50 BL 0x1EAB01C
	0x01EA2B54 LDUR V0, [X31 + 0x8]
	0x01EA2B58 LDR X8, [X31 + 0x18]
	0x01EA2B5C ADD X0, X31, 0x60
	0x01EA2B60 MOV X1, X31
	0x01EA2B64 STR V0, [X31 + 0x6]
	0x01EA2B68 STR X8, [X31 + 0x70]
	0x01EA2B6C BL 0x1EB84D4
	0x01EA2B70 TBNZ X0, 0x0, 0x1EA2B80
	0x01EA2B74 ADD X0, X31, 0x60
	0x01EA2B78 MOV X1, X31
	0x01EA2B7C BL 0x1EB8564
	0x01EA2B80 SUB W20, W20, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, [X0+80]
	005 Compare X20, 0
	006 JumpIfEqual {21}
	007 Move X19, X2
	008 And X1, X1, 0
	009 Move X0, X20
	010 Move X2, X31
	011 Call Simulation.GetPlayerObjectId, X0, X1
	012 And X1, X0, 0
	013 Move X0, X20
	014 Move X2, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X3, X31
	018 Move X30, [X31+32]
	019 Call Simulation.TryGetInstance, X0, X1, X2
	020 Return X0
	021 Call 0x1C17F20

Method: System.Collections.Generic.List`1<T> GetAllBehaviours()

Disassembly:
	0x0222BF48 CSET W0, NE
	0x0222BF4C CMP X8, X9
	0x0222BF50 B.NE 0x222BF6C
	0x0222BF54 ADD X31, X31, 0x210
	0x0222BF58 LDP X20, X19, [X31 + 0x30]
	0x0222BF5C LDP X22, X21, [X31 + 0x20]
	0x0222BF60 LDP X24, X23, [X31 + 0x10]
	0x0222BF64 LDP X29, X30, [X31], #0x40
	0x0222BF68 RET
	0x0222BF6C BL 0x3EB1B20
	0x0222BF70 STR X29, [X31 - 0x40]!
	0x0222BF74 STP X30, X23, [X31 + 0x10]
	0x0222BF78 STP X22, X21, [X31 + 0x20]
	0x0222BF7C STP X20, X19, [X31 + 0x30]
	0x0222BF80 SUB X31, X31, 0x400
	0x0222BF84 LDR X23, [X3 + 0x38]
	0x0222BF88 MOV X20, X3
	0x0222BF8C MOV X19, X2
	0x0222BF90 MOV X22, X1
	0x0222BF94 MOV X21, X0
	0x0222BF98 CBNZ X23, 0x222BFA8
	0x0222BF9C MOV X0, X20
	0x0222BFA0 BL 0x1C5C6E0
	0x0222BFA4 LDR X23, [X20 + 0x38]
	0x0222BFA8 ADD X0, X31, 0x2A8
	0x0222BFAC MOVZ W2, 0x154
	0x0222BFB0 MOV W1, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+56]
	006 Move X20, X1
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {13}
	010 Move X0, X20
	011 Call 0x1C5D6E0
	012 Move X8, [X20+56]
	013 Move X0, [X8]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Call 0x1C17F10
	021 Move X8, [X20+56]
	022 Move X21, X0
	023 Move X1, [X8+8]
	024 Call List`1<Object>..ctor, X0
	025 Move X8, [X20+56]
	026 Move X0, X19
	027 Move X1, X21
	028 Move X2, [X8+16]
	029 Call 0x222BFB4, X0, X1
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X0, X21
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0

Method: System.Collections.Generic.List`1<Fusion.NetworkObject> GetAllNetworkObjects()

Disassembly:
	0x01EA2B84 CMP W20, 0x2
	0x01EA2B88 B.LT 0x1EA2B98
	0x01EA2B8C LDR X0, [X19 + 0x78]
	0x01EA2B90 CBNZ X0, 0x1EA2B28
	0x01EA2B94 BL 0x1C16F20
	0x01EA2B98 LDP X20, X19, [X31 + 0x100]
	0x01EA2B9C LDP X30, X21, [X31 + 0xF0]
	0x01EA2BA0 LDR X29, [X31 + 0xE0]
	0x01EA2BA4 ADD X31, X31, 0x110
	0x01EA2BA8 RET
	0x01EA2BAC LDR X0, [X0 + 0x60]
	0x01EA2BB0 MOV X1, X31
	0x01EA2BB4 B 0x1E724E8
	0x01EA2BB8 SUB X31, X31, 0xE0
	0x01EA2BBC STP X30, X27, [X31 + 0x90]
	0x01EA2BC0 STP X26, X25, [X31 + 0xA0]
	0x01EA2BC4 STP X24, X23, [X31 + 0xB0]
	0x01EA2BC8 STP X22, X21, [X31 + 0xC0]
	0x01EA2BCC STP X20, X19, [X31 + 0xD0]
	0x01EA2BD0 MRS X25, 0xC000
	0x01EA2BD4 LDR X8, [X25 + 0x28]
	0x01EA2BD8 ADRP X24, 0x2537000
	0x01EA2BDC MOV X19, X4
	0x01EA2BE0 MOV X20, X3
	0x01EA2BE4 STR X8, [X31 + 0x88]
	0x01EA2BE8 LDRB W8, [X24 + 0x32E]
	0x01EA2BEC MOV X21, X2
	0x01EA2BF0 MOV X23, X1
	0x01EA2BF4 MOV X22, X0
	0x01EA2BF8 STR W23, [X31 + 0x8]
	0x01EA2BFC TBNZ X8, 0x0, 0x1EA2C38
	0x01EA2C00 ADRP X0, 0x225C000
	0x01EA2C04 LDR X0, [X0 + 0xA90]
	0x01EA2C08 BL 0x1C16CF4
	0x01EA2C0C ADRP X0, 0x2254000
	0x01EA2C10 LDR X0, [X0 + 0xEF8]
	0x01EA2C14 BL 0x1C16CF4
	0x01EA2C18 ADRP X0, 0x2254000
	0x01EA2C1C LDR X0, [X0 + 0xF00]
	0x01EA2C20 BL 0x1C16CF4
	0x01EA2C24 ADRP X0, 0x2254000
	0x01EA2C28 LDR X0, [X0 + 0xE40]
	0x01EA2C2C BL 0x1C16CF4
	0x01EA2C30 MOVZ W8, 0x1
	0x01EA2C34 STRB W8, [X24 + 0x32E]
	0x01EA2C38 STR X31, [X31]
	0x01EA2C3C LDR X0, [X22 + 0x50]
	0x01EA2C40 CBZ X0, 0x1EA2ECC
	0x01EA2C44 ADRP X26, 0x2254000
	0x01EA2C48 LDR X26, [X26 + 0xE40]
	0x01EA2C4C MOV X1, X31
	0x01EA2C50 BL 0x1EC08DC
	0x01EA2C54 TBZ X0, 0x0, 0x1EA2D08
	0x01EA2C58 LDR X0, [X22 + 0x50]
	0x01EA2C5C CBZ X0, 0x1EA2ECC
	0x01EA2C60 LDR X8, [X0]
	0x01EA2C64 LDR X9, [X8 + 0x268]
	0x01EA2C68 LDR X1, [X8 + 0x270]
	0x01EA2C6C BLR X9
	0x01EA2C70 LDR X8, [X26]
	0x01EA2C74 MOV X24, X0
	0x01EA2C78 LDR W9, [X8 + 0xE0]
	0x01EA2C7C CBNZ W9, 0x1EA2C88
	0x01EA2C80 MOV X0, X8
	0x01EA2C84 BL 0x1C16DFC
	0x01EA2C88 CMP W23, W24
	0x01EA2C8C B.NE 0x1EA2D08
	0x01EA2C90 LDR X8, [X22 + 0x50]
	0x01EA2C94 CBZ X8, 0x1EA2ECC
	0x01EA2C98 LDR X22, [X8 + 0x40]
	0x01EA2C9C STP X31, X31, [X31 + 0x30]
	0x01EA2CA0 STR W31, [X31 + 0x48]
	0x01EA2CA4 STR X31, [X31 + 0x40]
	0x01EA2CA8 CBZ X22, 0x1EA2ECC
	0x01EA2CAC LDR V0, [X31 + 0x3]
	0x01EA2CB0 LDUR V1, [X31 + 0x3C]
	0x01EA2CB4 ADRP X10, 0x225C000
	0x01EA2CB8 AND X23, X23, 0x0
	0x01EA2CBC STR V0, [X31 + 0x1]
	0x01EA2CC0 STUR V1, [X31 + 0x1C]
	0x01EA2CC4 LDR X8, [X22]
	0x01EA2CC8 LDR X10, [X10 + 0xA90]
	0x01EA2CCC LDRH W9, [X8 + 0x12E]
	0x01EA2CD0 LDR X1, [X10]
	0x01EA2CD4 CBZ X9, 0x1EA2CF8
	0x01EA2CD8 LDR X10, [X8 + 0xB0]
	0x01EA2CDC ADD X10, X10, 0x8
	0x01EA2CE0 LDUR X11, [X10 - 0x8]
	0x01EA2CE4 CMP X11, X1
	0x01EA2CE8 B.EQ 0x1EA2E54
	0x01EA2CEC SUBS X9, X9, 0x1
	0x01EA2CF0 ADD X10, X10, 0x10
	0x01EA2CF4 B.NE 0x1EA2CE0
	0x01EA2CF8 MOVZ W2, 0x13
	0x01EA2CFC MOV X0, X22
	0x01EA2D00 BL 0x1C5C788
	0x01EA2D04 B 0x1EA2E64
	0x01EA2D08 LDR X0, [X22 + 0x50]
	0x01EA2D0C CBZ X0, 0x1EA2DAC
	0x01EA2D10 MOV X1, X31
	0x01EA2D14 BL 0x1EBDF30
	0x01EA2D18 LDR X24, [X22 + 0x50]
	0x01EA2D1C TBZ X0, 0x0, 0x1EA2DB0
	0x01EA2D20 CBZ X24, 0x1EA2ECC
	0x01EA2D24 ADRP X27, 0x2537000
	0x01EA2D28 LDRB W8, [X27 + 0x3BC]
	0x01EA2D2C CBNZ W8, 0x1EA2D50
	0x01EA2D30 ADRP X0, 0x2256000
	0x01EA2D34 LDR X0, [X0 + 0x20]
	0x01EA2D38 BL 0x1C16CF4
	0x01EA2D3C ADRP X0, 0x2252000
	0x01EA2D40 LDR X0, [X0 + 0x470]
	0x01EA2D44 BL 0x1C16CF4
	0x01EA2D48 MOVZ W8, 0x1
	0x01EA2D4C STRB W8, [X27 + 0x3BC]
	0x01EA2D50 STR X31, [X31 + 0x30]
	0x01EA2D54 LDR X0, [X24 + 0xB8]
	0x01EA2D58 CBZ X0, 0x1EA2ECC
	0x01EA2D5C ADRP X8, 0x2256000
	0x01EA2D60 LDR X8, [X8 + 0x20]
	0x01EA2D64 AND X1, X23, 0x0
	0x01EA2D68 ADD X2, X31, 0x30
	0x01EA2D6C LDR X3, [X8]
	0x01EA2D70 BL 0x2AE89D0
	0x01EA2D74 TBZ X0, 0x0, 0x1EA2DE0
	0x01EA2D78 LDR X0, [X31 + 0x30]
	0x01EA2D7C CBZ X0, 0x1EA2ECC
	0x01EA2D80 MOV X1, X31
	0x01EA2D84 BL 0x1ED810C
	0x01EA2D88 ADRP X8, 0x2252000
	0x01EA2D8C LDR X8, [X8 + 0x470]
	0x01EA2D90 MOV W1, W0
	0x01EA2D94 ADD X0, X31, 0x50
	0x01EA2D98 STR X31, [X31 + 0x50]
	0x01EA2D9C LDR X2, [X8]
	0x01EA2DA0 BL 0x24341FC
	0x01EA2DA4 LDR X8, [X31 + 0x50]
	0x01EA2DA8 B 0x1EA2DE4
	0x01EA2DAC MOV X24, X31
	0x01EA2DB0 LDR X0, [X26]
	0x01EA2DB4 LDR W8, [X0 + 0xE0]
	0x01EA2DB8 CBNZ W8, 0x1EA2DC0
	0x01EA2DBC BL 0x1C16DFC
	0x01EA2DC0 ADD X0, X31, 0x8
	0x01EA2DC4 MOV X1, X31
	0x01EA2DC8 BL 0x1E8D834
	0x01EA2DCC CBZ X24, 0x1EA2ECC
	0x01EA2DD0 MOV W2, W0
	0x01EA2DD4 MOV X0, X24
	0x01EA2DD8 MOV W1, W31
	0x01EA2DDC B 0x1EA2E3C
	0x01EA2DE0 MOV X8, X31
	0x01EA2DE4 ANDS W31, W8, 0xFF
	0x01EA2DE8 STR X8, [X31]
	0x01EA2DEC B.EQ 0x1EA2EA0
	0x01EA2DF0 ADRP X8, 0x2254000
	0x01EA2DF4 LDR X22, [X22 + 0x50]
	0x01EA2DF8 LDR X8, [X8 + 0xF00]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+104], X25
	004 Move [X31+112], X24
	005 Move [X31+120], X23
	006 Move [X31+128], X22
	007 Move [X31+136], X21
	008 Move [X31+144], X20
	009 Move [X31+152], X19
	010 Move X22, 0x2538000
	011 Move X21, 0x2257000
	012 Move X19, 0x2257000
	013 Move W8, [X22+804]
	014 Move X21, [X21+1408]
	015 Move X19, [X19+1416]
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {50}
	021 Move X0, 0x225D000
	022 Move X0, [X0+2624]
	023 Call 0x1C17CF4
	024 Move X0, 0x225D000
	025 Move X0, [X0+2632]
	026 Call 0x1C17CF4
	027 Move X0, 0x225D000
	028 Move X0, [X0+2640]
	029 Call 0x1C17CF4
	030 Move X0, 0x225D000
	031 Move X0, [X0+2648]
	032 Call 0x1C17CF4
	033 Move X0, 0x225D000
	034 Move X0, [X0+2656]
	035 Call 0x1C17CF4
	036 Move X0, 0x2257000
	037 Move X0, [X0+1440]
	038 Call 0x1C17CF4
	039 Move X0, 0x2257000
	040 Move X0, [X0+1416]
	041 Call 0x1C17CF4
	042 Move X0, 0x2257000
	043 Move X0, [X0+1408]
	044 Call 0x1C17CF4
	045 Move X0, 0x2252000
	046 Move X0, [X0+1432]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X22+804], W8
	050 Move X0, [X21]
	051 NotImplemented "Instruction MOVI not yet implemented."
	052 Move [X31+80], X31
	053 Move [X31+48], V0
	054 Move [X31+56], V0
	055 Call 0x1C17F10
	056 Move X1, [X19]
	057 Move X19, X0
	058 Call List`1<Object>..ctor, X0
	059 Move X8, [X20+80]
	060 Compare X8, 0
	061 JumpIfEqual {132}
	062 Move X0, [X8+336]
	063 Compare X0, 0
	064 JumpIfEqual {149}
	065 Move X8, 0x225D000
	066 Move X8, [X8+2624]
	067 Move X22, 0x225D000
	068 Move X22, [X22+2640]
	069 Move X23, 0x2252000
	070 Move X1, [X8]
	071 Move X24, 0x2257000
	072 Move X21, 0x225D000
	073 Move X23, [X23+1432]
	074 Move X24, [X24+1440]
	075 Move X21, [X21+2632]
	076 Add X8, X31, 8
	077 Call Dictionary`2<NetworkId, Object>.GetEnumerator, X0
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 Move X8, [X31+40]
	081 Move [X31+48], V0
	082 Move [X31+56], V1
	083 Move [X31+80], X8
	084 Move X1, [X22]
	085 Add X0, X31, 48
	086 Call Enumerator<NetworkId, Object>.MoveNext, X0
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {129}
	091 Move X25, [X31+72]
	092 Compare X25, 0
	093 JumpIfEqual {143}
	094 Move X0, [X23]
	095 Move X20, [X25+184]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move X0, X20
	101 Move X1, X31
	102 Call Object.op_Implicit, X0
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfNotEqual {84}
	107 Compare X19, 0
	108 JumpIfEqual {145}
	109 Move W10, [X19+28]
	110 Move X1, [X25+184]
	111 Move X8, [X19+16]
	112 Move X9, [X24]
	113 Add W10, W10, 1
	114 Move [X19+28], W10
	115 Compare X8, 0
	116 JumpIfEqual {147}
	117 NotImplemented "Instruction LDRSW not yet implemented."
	118 Move W11, [X8+24]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Add W9, W10, 1
	121 Add X8, X8, X10
	122 Move [X19+24], W9
	123 Move [X8+32], X1
	124 Move X8, [X9+32]
	125 Move X8, [X8+192]
	126 Move X2, [X8+112]
	127 Move X0, X19
	128 Call List`1<Object>.AddWithResize, X0, X1
	129 Move X1, [X21]
	130 Add X0, X31, 48
	131 Call Enumerator<NetworkId, Object>.Dispose, X0
	132 Move X0, X19
	133 Move X20, [X31+144]
	134 Move X19, [X31+152]
	135 Move X22, [X31+128]
	136 Move X21, [X31+136]
	137 Move X24, [X31+112]
	138 Move X23, [X31+120]
	139 Move X30, [X31+96]
	140 Move X25, [X31+104]
	141 Add X31, X31, 160
	142 Return X0
	143 Move X22, X21
	144 Call 0x1C17F20
	145 Move X22, X21
	146 Call 0x1C17F20
	147 Move X22, X21
	148 Call 0x1C17F20
	149 Call 0x1C17F20
	150 Move X22, X21
	151 Move X20, X0
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X0, X20
	154 Call 0x3EB2AD0
	155 Move X21, [X0]
	156 Call 0x3EB2AE0
	157 Move X1, [X22]
	158 Add X0, X31, 48
	159 Call Enumerator<NetworkId, Object>.Dispose, X0
	160 Compare X21, 0
	161 JumpIfEqual {132}
	162 Move X0, X21
	163 Call 0x1C17F18
	164 Move X21, X31
	165 Move X20, X0
	166 Move X1, [X22]
	167 Add X0, X31, 48
	168 Call Enumerator<NetworkId, Object>.Dispose, X0
	169 Compare X21, 0
	170 JumpIfNotEqual {173}
	171 Move X0, X20
	172 Call 0x1D2D690
	173 Move X0, X21
	174 Call 0x1C17F18
	175 Call 0x1991590

Method: System.Void GetAllBehaviours(System.Collections.Generic.List`1<T> result)

Disassembly:
	0x0222BFB4 BL 0x3EB1B10
	0x0222BFB8 LDR X2, [X23]
	0x0222BFBC AND X1, X22, 0x0
	0x0222BFC0 ADD X8, X31, 0x150
	0x0222BFC4 MOV X0, X21
	0x0222BFC8 BL 0x222B24C
	0x0222BFCC ADD X0, X31, 0x2A8
	0x0222BFD0 ADD X1, X31, 0x150
	0x0222BFD4 MOVZ W2, 0x154
	0x0222BFD8 BL 0x3EB1AC0
	0x0222BFDC LDRB W21, [X31 + 0x2A8]
	0x0222BFE0 CBZ W21, 0x222C01C
	0x0222BFE4 LDR X8, [X20 + 0x38]
	0x0222BFE8 ADD X0, X31, 0x2A8
	0x0222BFEC LDR X1, [X8 + 0x28]
	0x0222BFF0 ADD X8, X31, 0x0
	0x0222BFF4 BL 0x243A330
	0x0222BFF8 ADD X0, X31, 0x150
	0x0222BFFC ADD X1, X31, 0x0
	0x0222C000 MOVZ W2, 0x150
	0x0222C004 BL 0x3EB1AC0
	0x0222C008 ADD X1, X31, 0x150
	0x0222C00C MOVZ W2, 0x150
	0x0222C010 MOV X0, X19
	0x0222C014 BL 0x3EB1AC0
	0x0222C018 B 0x222C02C
	0x0222C01C MOVZ W2, 0x150
	0x0222C020 MOV X0, X19
	0x0222C024 MOV W1, W31
	0x0222C028 BL 0x3EB1B10
	0x0222C02C CMP W21, 0x0
	0x0222C030 CSET W0, NE
	0x0222C034 ADD X31, X31, 0x400
	0x0222C038 LDP X20, X19, [X31 + 0x30]
	0x0222C03C LDP X22, X21, [X31 + 0x20]
	0x0222C040 LDP X30, X23, [X31 + 0x10]
	0x0222C044 LDR X29, [X31], #0x40
	0x0222C048 RET
	0x0222C04C STP X29, X30, [X31 - 0x60]!
	0x0222C050 STP X28, X27, [X31 + 0x10]
	0x0222C054 STP X26, X25, [X31 + 0x20]
	0x0222C058 STP X24, X23, [X31 + 0x30]
	0x0222C05C STP X22, X21, [X31 + 0x40]
	0x0222C060 STP X20, X19, [X31 + 0x50]
	0x0222C064 ADD X29, X31, 0x0
	0x0222C068 SUB X31, X31, 0x30
	0x0222C06C STUR X2, [X29 - 0x28]
	0x0222C070 MRS X28, 0xC000
	0x0222C074 LDR X8, [X28 + 0x28]
	0x0222C078 MOV X19, X3
	0x0222C07C MOV X25, X1
	0x0222C080 MOV X23, X0
	0x0222C084 STUR X8, [X29 - 0x8]
	0x0222C088 LDR X20, [X3 + 0x38]
	0x0222C08C CBNZ X20, 0x222C09C
	0x0222C090 MOV X0, X19
	0x0222C094 BL 0x1C5C6E0
	0x0222C098 LDR X20, [X19 + 0x38]
	0x0222C09C LDR X9, [X20 + 0x30]
	0x0222C0A0 LDR X8, [X20 + 0x8]
	0x0222C0A4 LDR W21, [X9 + 0xFC]
	0x0222C0A8 LDR W26, [X8 + 0xFC]
	0x0222C0AC ADD X8, X31, 0x0
	0x0222C0B0 ADD X9, X21, 0xF
	0x0222C0B4 AND X9, X9, 0x1FFFFFFFF
	0x0222C0B8 SUB X22, X8, X9
	0x0222C0BC ADD X31, X22, 0x0
	0x0222C0C0 ADD X9, X26, 0xF
	0x0222C0C4 ADD X8, X31, 0x0
	0x0222C0C8 AND X9, X9, 0x1FFFFFFFF
	0x0222C0CC SUB X27, X8, X9
	0x0222C0D0 ADD X31, X27, 0x0
	0x0222C0D4 ADD X8, X31, 0x0
	0x0222C0D8 SUB X24, X8, X9
	0x0222C0DC ADD X31, X24, 0x0
	0x0222C0E0 MOV X0, X24
	0x0222C0E4 MOV W1, W31
	0x0222C0E8 MOV X2, X26
	0x0222C0EC BL 0x3EB1B10
	0x0222C0F0 LDR X1, [X20]
	0x0222C0F4 SUB X8, X29, 0x10
	0x0222C0F8 SUB X3, X29, 0x20
	0x0222C0FC MOV X2, X23
	0x0222C100 LDR X0, [X1]
	0x0222C104 STUR W25, [X29 - 0x10]
	0x0222C108 STP X8, X27, [X29 - 0x20]
	0x0222C10C LDR X8, [X1 + 0x10]
	0x0222C110 MOV X4, X27
	0x0222C114 BLR X8
	0x0222C118 MOV X0, X24
	0x0222C11C MOV X1, X27
	0x0222C120 MOV X2, X26
	0x0222C124 BL 0x3EB1AC0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X2+56]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {23}
	014 Move X0, 0x1EC9000
	015 Move X0, [X0+1728]
	016 Call 0x1C17CF4
	017 Move X8, [X19+56]
	018 Compare X8, 0
	019 JumpIfNotEqual {23}
	020 Move X0, X19
	021 Call 0x1C5D6E0
	022 Move X8, [X19+56]
	023 Move X9, 0x1EC9000
	024 Move X9, [X9+1728]
	025 Move X22, [X8]
	026 Move X0, [X9]
	027 Move W9, [X0+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X22
	032 Move X1, X31
	033 Call Type.GetTypeFromHandle, X0
	034 Move X1, X0
	035 Move X0, X21
	036 Move X2, X31
	037 Call NetworkRunner.GetAllBehaviours, X0, X1
	038 Compare X0, 0
	039 JumpIfEqual {102}
	040 Move X8, [X0+24]
	041 Move X21, X0
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X24, X31
	044 And X8, X8, 0
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Add X8, X21, X24
	047 Move X22, [X8+32]
	048 Compare X22, 0
	049 JumpIfEqual {91}
	050 Compare X20, 0
	051 JumpIfEqual {102}
	052 Move X8, [X19+56]
	053 Move X23, [X8+16]
	054 Move W8, [X23+309]
	055 Move TEMP, X8
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {62}
	059 Move X0, X23
	060 Call 0x1C5D684
	061 Move X23, X0
	062 Move X0, X22
	063 Move X1, X23
	064 Call 0x1C17E00
	065 Compare X0, 0
	066 JumpIfEqual {103}
	067 Move X9, [X19+56]
	068 Move W10, [X20+28]
	069 Move X8, [X20+16]
	070 Move X9, [X9+24]
	071 Add W10, W10, 1
	072 Move [X20+28], W10
	073 Compare X8, 0
	074 JumpIfEqual {102}
	075 NotImplemented "Instruction LDRSW not yet implemented."
	076 Move W11, [X8+24]
	077 Move X1, X0
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Add W9, W10, 1
	080 Add X8, X8, X10
	081 Move [X20+24], W9
	082 Move [X8+32], X1
	083 Move X8, [X9+32]
	084 Move X0, X20
	085 Move X8, [X8+192]
	086 Move X2, [X8+112]
	087 Call List`1<Object>.AddWithResize, X0, X1
	088 Move X22, [X22+40]
	089 Compare X22, 0
	090 JumpIfNotEqual {52}
	091 Move W8, [X21+24]
	092 Add X24, X24, 1
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X20, [X31+48]
	095 Move X19, [X31+56]
	096 Move X22, [X31+32]
	097 Move X21, [X31+40]
	098 Move X24, [X31+16]
	099 Move X23, [X31+24]
	100 Move X30, [X31+64]
	101 Return 
	102 Call 0x1C17F20
	103 Move X0, X22
	104 Move X1, X23
	105 Call 0x1C181E0
	106 Call 0x1C17F28

Method: System.Double GetPlayerRtt(Fusion.PlayerRef playerRef)

Disassembly:
	0x01EA2DFC ADD X0, X31, 0x0
	0x01EA2E00 LDR X1, [X8]
	0x01EA2E04 BL 0x2434214
	0x01EA2E08 LDR X8, [X26]
	0x01EA2E0C MOV W23, W0
	0x01EA2E10 LDR W9, [X8 + 0xE0]
	0x01EA2E14 CBNZ W9, 0x1EA2E20
	0x01EA2E18 MOV X0, X8
	0x01EA2E1C BL 0x1C16DFC
	0x01EA2E20 ADD X0, X31, 0x8

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X0]
	006 And X1, X1, 0
	007 Move X3, [X8+632]
	008 Move X2, [X8+640]
	009 Move X30, [X31+16]
	010 CallNoReturn X3
	011 Call 0x1C17F20

Method: System.Void SendRpc(Fusion.SimulationMessage* message)

Disassembly:
	0x01EA2E24 MOV X1, X31
	0x01EA2E28 BL 0x1E8D834
	0x01EA2E2C CBZ X22, 0x1EA2ECC
	0x01EA2E30 MOV W2, W0
	0x01EA2E34 MOV X0, X22
	0x01EA2E38 MOV W1, W23
	0x01EA2E3C MOV X3, X21

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X2, X31
	006 Move X30, [X31+16]
	007 Call Simulation.SendMessage, X0, X1
	008 Return 
	009 Call 0x1C17F20

Method: System.Void SendRpc(Fusion.SimulationMessage* message, out Fusion.RpcSendResult info)

Disassembly:
	0x01EA2E40 MOV X4, X20
	0x01EA2E44 MOV X5, X19
	0x01EA2E48 MOV X6, X31
	0x01EA2E4C BL 0x1EC7B20
	0x01EA2E50 B 0x1EA2EA0
	0x01EA2E54 LDR W9, [X10]
	0x01EA2E58 ADD W9, W9, 0x13
	0x01EA2E5C ADD X8, X8, W9, 0x4, SXTW
	0x01EA2E60 ADD X0, X8, 0x138
	0x01EA2E64 LDR V0, [X31 + 0x1]
	0x01EA2E68 LDUR V1, [X31 + 0x1C]
	0x01EA2E6C LDR X8, [X0]
	0x01EA2E70 STUR X21, [X31 + 0x6C]
	0x01EA2E74 STUR X20, [X31 + 0x74]
	0x01EA2E78 STR V0, [X31 + 0x5]
	0x01EA2E7C STUR V1, [X31 + 0x5C]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {20}
	006 Move X0, [X0+80]
	007 Compare X0, 0
	008 JumpIfEqual {20}
	009 Move W20, [X1+12]
	010 Move X19, X2
	011 Move X2, X31
	012 Call Simulation.SendMessage, X0, X1
	013 Move W8, W0
	014 NotImplemented "Instruction BFM not yet implemented."
	015 Move [X19], X8
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Return 
	020 Call 0x1C17F20

Method: System.Boolean IsPlayerValid(Fusion.PlayerRef player)

Disassembly:
	0x01EA2E80 STR W31, [X31 + 0x7C]
	0x01EA2E84 LDR X5, [X0 + 0x8]
	0x01EA2E88 ADD X2, X31, 0x50
	0x01EA2E8C MOVZ W3, 0x1
	0x01EA2E90 MOV X0, X22
	0x01EA2E94 MOV X1, X23
	0x01EA2E98 MOV X4, X19
	0x01EA2E9C BLR X8

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 And X1, X1, 0
	006 Move X2, X31
	007 Move X30, [X31+16]
	008 Call Simulation.PlayerValid, X0, X1
	009 Return X0
	010 Call 0x1C17F20

Method: System.Byte[] GetPlayerConnectionToken(Fusion.PlayerRef player = null)

Disassembly:
	0x01EA2EA0 LDR X8, [X25 + 0x28]
	0x01EA2EA4 LDR X9, [X31 + 0x88]
	0x01EA2EA8 CMP X8, X9
	0x01EA2EAC B.NE 0x1EA2ED0
	0x01EA2EB0 LDP X20, X19, [X31 + 0xD0]
	0x01EA2EB4 LDP X22, X21, [X31 + 0xC0]
	0x01EA2EB8 LDP X24, X23, [X31 + 0xB0]
	0x01EA2EBC LDP X26, X25, [X31 + 0xA0]
	0x01EA2EC0 LDP X30, X27, [X31 + 0x90]
	0x01EA2EC4 ADD X31, X31, 0xE0
	0x01EA2EC8 RET
	0x01EA2ECC BL 0x1C16F20
	0x01EA2ED0 BL 0x3EB1B20
	0x01EA2ED4 SUB X31, X31, 0xD0
	0x01EA2ED8 STR X30, [X31 + 0x90]
	0x01EA2EDC STP X24, X23, [X31 + 0xA0]
	0x01EA2EE0 STP X22, X21, [X31 + 0xB0]
	0x01EA2EE4 STP X20, X19, [X31 + 0xC0]
	0x01EA2EE8 MRS X24, 0xC000
	0x01EA2EEC LDR X8, [X24 + 0x28]
	0x01EA2EF0 ADRP X23, 0x2537000
	0x01EA2EF4 MOV X19, X3
	0x01EA2EF8 MOV X20, X2
	0x01EA2EFC STR X8, [X31 + 0x88]
	0x01EA2F00 LDRB W8, [X23 + 0x32F]
	0x01EA2F04 MOV X21, X1
	0x01EA2F08 MOV X22, X0
	0x01EA2F0C TBNZ X8, 0x0, 0x1EA2F30
	0x01EA2F10 ADRP X0, 0x225C000
	0x01EA2F14 LDR X0, [X0 + 0xA90]
	0x01EA2F18 BL 0x1C16CF4
	0x01EA2F1C ADRP X0, 0x2254000
	0x01EA2F20 LDR X0, [X0 + 0xE40]
	0x01EA2F24 BL 0x1C16CF4
	0x01EA2F28 MOVZ W8, 0x1
	0x01EA2F2C STRB W8, [X23 + 0x32F]
	0x01EA2F30 STR W31, [X31 + 0x8]
	0x01EA2F34 LDR X0, [X22 + 0x50]
	0x01EA2F38 CBZ X0, 0x1EA30AC
	0x01EA2F3C MOV X1, X31
	0x01EA2F40 BL 0x1EC0864
	0x01EA2F44 LDR X22, [X22 + 0x50]
	0x01EA2F48 TBZ X0, 0x0, 0x1EA2FA4
	0x01EA2F4C ADRP X8, 0x2254000
	0x01EA2F50 LDR X8, [X8 + 0xE40]
	0x01EA2F54 LDR X0, [X8]
	0x01EA2F58 LDR W8, [X0 + 0xE0]
	0x01EA2F5C CBNZ W8, 0x1EA2F64
	0x01EA2F60 BL 0x1C16DFC
	0x01EA2F64 MOV X0, X31
	0x01EA2F68 BL 0x1E8D7EC
	0x01EA2F6C STR W0, [X31 + 0x8]
	0x01EA2F70 ADD X0, X31, 0x8
	0x01EA2F74 MOV X1, X31
	0x01EA2F78 BL 0x1E8D834
	0x01EA2F7C CBZ X22, 0x1EA30AC
	0x01EA2F80 MOV W2, W0
	0x01EA2F84 MOV X0, X22
	0x01EA2F88 MOV W1, W31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2538000
	007 Move W8, [X21+805]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2255000
	015 Move X0, [X0+3648]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+805], W8
	019 Move X22, 0x2255000
	020 Move X0, [X20+80]
	021 Move X22, [X22+3648]
	022 Compare X0, 0
	023 JumpIfEqual {29}
	024 Move X8, [X0]
	025 Move X9, [X8+616]
	026 Move X1, [X8+624]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X21, X0
	029 Move W21, W31
	030 Move X0, [X22]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X0, [X22]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X31
	042 Call PlayerRef.get_None
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, [X20+192]
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Return X0
	051 Move X0, [X20+80]
	052 Compare X0, 0
	053 JumpIfEqual {45}
	054 Move X1, X31
	055 Call Simulation.get_IsServer, X0
	056 Move W8, W0
	057 Move X0, X31
	058 Move TEMP, X8
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {45}
	062 Move X0, [X20+80]
	063 Compare X0, 0
	064 JumpIfEqual {74}
	065 And X1, X19, 0
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X2, X31
	071 Move X30, [X31+48]
	072 Call Simulation.GetPlayerConnectionToken, X0, X1
	073 Return X0
	074 Call 0x1C17F20

Method: Fusion.ConnectionType GetPlayerConnectionType(Fusion.PlayerRef player)

Disassembly:
	0x01EA2F8C MOV X3, X21
	0x01EA2F90 MOV X4, X20
	0x01EA2F94 MOV X5, X19
	0x01EA2F98 MOV X6, X31
	0x01EA2F9C BL 0x1EC7B20
	0x01EA2FA0 B 0x1EA3084
	0x01EA2FA4 CBZ X22, 0x1EA30AC
	0x01EA2FA8 ADRP X8, 0x2254000
	0x01EA2FAC LDR X8, [X8 + 0xE40]
	0x01EA2FB0 LDR X22, [X22 + 0x40]
	0x01EA2FB4 LDR X0, [X8]
	0x01EA2FB8 LDR W8, [X0 + 0xE0]
	0x01EA2FBC CBNZ W8, 0x1EA2FC4
	0x01EA2FC0 BL 0x1C16DFC
	0x01EA2FC4 MOV X0, X31
	0x01EA2FC8 BL 0x1E8D7EC
	0x01EA2FCC STP X31, X31, [X31 + 0x30]
	0x01EA2FD0 STR W31, [X31 + 0x48]
	0x01EA2FD4 STR X31, [X31 + 0x40]
	0x01EA2FD8 CBZ X22, 0x1EA30AC
	0x01EA2FDC LDR V0, [X31 + 0x3]
	0x01EA2FE0 LDUR V1, [X31 + 0x3C]
	0x01EA2FE4 ADRP X10, 0x225C000
	0x01EA2FE8 AND X23, X0, 0x0
	0x01EA2FEC STR V0, [X31 + 0x1]
	0x01EA2FF0 STUR V1, [X31 + 0x1C]
	0x01EA2FF4 LDR X8, [X22]
	0x01EA2FF8 LDR X10, [X10 + 0xA90]
	0x01EA2FFC LDRH W9, [X8 + 0x12E]
	0x01EA3000 LDR X1, [X10]
	0x01EA3004 CBZ X9, 0x1EA3028
	0x01EA3008 LDR X10, [X8 + 0xB0]
	0x01EA300C ADD X10, X10, 0x8
	0x01EA3010 LDUR X11, [X10 - 0x8]
	0x01EA3014 CMP X11, X1
	0x01EA3018 B.EQ 0x1EA3038
	0x01EA301C SUBS X9, X9, 0x1
	0x01EA3020 ADD X10, X10, 0x10
	0x01EA3024 B.NE 0x1EA3010
	0x01EA3028 MOVZ W2, 0x13
	0x01EA302C MOV X0, X22
	0x01EA3030 BL 0x1C5C788
	0x01EA3034 B 0x1EA3048
	0x01EA3038 LDR W9, [X10]
	0x01EA303C ADD W9, W9, 0x13
	0x01EA3040 ADD X8, X8, W9, 0x4, SXTW
	0x01EA3044 ADD X0, X8, 0x138
	0x01EA3048 LDR V0, [X31 + 0x1]
	0x01EA304C LDUR V1, [X31 + 0x1C]
	0x01EA3050 LDR X8, [X0]
	0x01EA3054 STUR X21, [X31 + 0x6C]
	0x01EA3058 STUR X20, [X31 + 0x74]
	0x01EA305C STR V0, [X31 + 0x5]
	0x01EA3060 STUR V1, [X31 + 0x5C]
	0x01EA3064 STR W31, [X31 + 0x7C]
	0x01EA3068 LDR X5, [X0 + 0x8]
	0x01EA306C ADD X2, X31, 0x50
	0x01EA3070 MOVZ W3, 0x1
	0x01EA3074 MOV X0, X22
	0x01EA3078 MOV X1, X23
	0x01EA307C MOV X4, X19
	0x01EA3080 BLR X8
	0x01EA3084 LDR X8, [X24 + 0x28]
	0x01EA3088 LDR X9, [X31 + 0x88]
	0x01EA308C CMP X8, X9
	0x01EA3090 B.NE 0x1EA30B0
	0x01EA3094 LDP X20, X19, [X31 + 0xC0]
	0x01EA3098 LDP X22, X21, [X31 + 0xB0]
	0x01EA309C LDP X24, X23, [X31 + 0xA0]
	0x01EA30A0 LDR X30, [X31 + 0x90]
	0x01EA30A4 ADD X31, X31, 0xD0
	0x01EA30A8 RET
	0x01EA30AC BL 0x1C16F20
	0x01EA30B0 BL 0x3EB1B20
	0x01EA30B4 STR X30, [X31 - 0x30]!
	0x01EA30B8 STP X22, X21, [X31 + 0x10]
	0x01EA30BC STP X20, X19, [X31 + 0x20]
	0x01EA30C0 MOV X20, X1
	0x01EA30C4 MOV X1, X2
	0x01EA30C8 MOV W19, W3
	0x01EA30CC MOV X21, X2
	0x01EA30D0 MOV X22, X0
	0x01EA30D4 BL 0x1EA1A20
	0x01EA30D8 TBZ X0, 0x0, 0x1EA3128
	0x01EA30DC CBZ X21, 0x1EA3138
	0x01EA30E0 MOV X0, X21
	0x01EA30E4 MOV X1, X31
	0x01EA30E8 BL 0x1E93668
	0x01EA30EC TBZ X0, 0x0, 0x1EA3128
	0x01EA30F0 LDR X22, [X22 + 0x50]
	0x01EA30F4 MOV X0, X21
	0x01EA30F8 MOV X1, X31
	0x01EA30FC BL 0x1E944EC
	0x01EA3100 CBZ X22, 0x1EA3138

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], X30
	003 Move [X31+96], X22
	004 Move [X31+104], X21
	005 Move [X31+112], X20
	006 Move [X31+120], X19
	007 NotImplemented "Instruction MRS not yet implemented."
	008 Move X8, [X22+40]
	009 Move X21, 0x2538000
	010 Move X19, X1
	011 Move X20, X0
	012 Move [X31+72], X8
	013 Move W8, [X21+806]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x225C000
	019 Move X0, [X0+120]
	020 Call 0x1C17CF4
	021 Move X0, 0x2255000
	022 Move X0, [X0+3648]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+806], W8
	026 Move [X31+48], X31
	027 Move [X31+56], X31
	028 Move [X31+64], X31
	029 Move X0, [X20+80]
	030 Compare X0, 0
	031 JumpIfEqual {89}
	032 Move X1, X31
	033 Call Simulation.get_IsServer, X0
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {88}
	038 Move X0, [X20+80]
	039 Compare X0, 0
	040 JumpIfEqual {46}
	041 Move X8, [X0]
	042 Move X9, [X8+616]
	043 Move X1, [X8+624]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X21, X0
	046 Move W21, W31
	047 Move X8, 0x2254000
	048 Move X8, [X8+3648]
	049 Move X0, [X8]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X0, [X20+80]
	056 Compare X0, 0
	057 JumpIfEqual {110}
	058 And X1, X19, 0
	059 Add X8, X31, 24
	060 Move X2, X31
	061 Call Simulation.GetPlayerAddress, X0, X1
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 Move [X31+24], X31
	064 Move [X31+32], X31
	065 Move X19, 0x225B000
	066 Move X8, [X31+40]
	067 Move X19, [X19+120]
	068 Move [X31+3], V0
	069 Move [X31+40], X31
	070 Move [X31+64], X8
	071 Move X0, [X19]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 Move X8, [X31+40]
	078 Add X0, X31, 48
	079 Add X1, X31, 0
	080 Move X2, X31
	081 Move [X31], V0
	082 Move [X31+16], X8
	083 Call NetAddress.Equals, X0, X1
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {99}
	088 Move W0, W31
	089 Move X8, [X22+40]
	090 Move X9, [X31+72]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X20, [X31+112]
	093 Move X19, [X31+120]
	094 Move X22, [X31+96]
	095 Move X21, [X31+104]
	096 Move X30, [X31+80]
	097 Add X31, X31, 128
	098 Return X0
	099 Move X0, [X19]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Add X0, X31, 48
	105 Move X1, X31
	106 Call NetAddress.get_IsRelayAddr, X0
	107 And W31, W0, 1
	108 Move W8, 1
	109 NotImplemented "Instruction CINC not yet implemented."
	110 Call 0x1C17F20
	111 Call 0x3EB2B20

Method: Fusion.SimulationBehaviour[] GetAllBehaviours(System.Type type)

Disassembly:
	0x01EA3104 AND X1, X20, 0x0
	0x01EA3108 AND X2, X0, 0x0
	0x01EA310C AND W3, W19, 0x1
	0x01EA3110 MOV X0, X22
	0x01EA3114 LDP X20, X19, [X31 + 0x20]
	0x01EA3118 LDP X22, X21, [X31 + 0x10]
	0x01EA311C MOV X4, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+96]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X2, X31
	006 Move X30, [X31+16]
	007 Call SimulationBehaviourUpdater.GetTypeHeads, X0, X1
	008 Return X0
	009 Call 0x1C17F20

Method: System.Void AddCallbacks(Fusion.INetworkRunnerCallbacks[] callbacks)

Disassembly:
	0x01EA3120 LDR X30, [X31], #0x30
	0x01EA3124 B 0x1EC263C
	0x01EA3128 LDP X20, X19, [X31 + 0x20]
	0x01EA312C LDP X22, X21, [X31 + 0x10]
	0x01EA3130 LDR X30, [X31], #0x30
	0x01EA3134 RET
	0x01EA3138 BL 0x1C16F20
	0x01EA313C STR X30, [X31 - 0x30]!
	0x01EA3140 STP X22, X21, [X31 + 0x10]
	0x01EA3144 STP X20, X19, [X31 + 0x20]
	0x01EA3148 ADRP X22, 0x2536000
	0x01EA314C LDRB W9, [X22 + 0x330]
	0x01EA3150 MOV X21, X1
	0x01EA3154 MOV X20, X0
	0x01EA3158 MOV X19, X8
	0x01EA315C TBNZ X9, 0x0, 0x1EA3174
	0x01EA3160 ADRP X0, 0x225B000
	0x01EA3164 LDR X0, [X0 + 0xA98]
	0x01EA3168 BL 0x1C16CF4
	0x01EA316C MOVZ W8, 0x1
	0x01EA3170 STRB W8, [X22 + 0x330]
	0x01EA3174 LDR X0, [X20 + 0x50]
	0x01EA3178 CBZ X0, 0x1EA3200
	0x01EA317C AND X1, X21, 0x0
	0x01EA3180 MOV X2, X31
	0x01EA3184 BL 0x1EC3E44
	0x01EA3188 CBZ X0, 0x1EA31E8
	0x01EA318C MOV X1, X31
	0x01EA3190 BL 0x1ED8BC4
	0x01EA3194 LDR X8, [X20 + 0x50]
	0x01EA3198 CBZ X8, 0x1EA3200
	0x01EA319C LDR X8, [X8 + 0x58]
	0x01EA31A0 CBZ X8, 0x1EA3200
	0x01EA31A4 LDR W1, [X8 + 0x10]
	0x01EA31A8 ADRP X20, 0x225B000
	0x01EA31AC LDR X20, [X20 + 0xA98]
	0x01EA31B0 MOV X2, X31
	0x01EA31B4 BL 0x1EDE0B0
	0x01EA31B8 MOV X2, X0
	0x01EA31BC LDR X3, [X20]
	0x01EA31C0 STP X31, X31, [X19 + 0x8]
	0x01EA31C4 STR X31, [X19]
	0x01EA31C8 MOV X0, X19
	0x01EA31CC LDP X20, X19, [X31 + 0x20]
	0x01EA31D0 LDP X22, X21, [X31 + 0x10]
	0x01EA31D4 MOV X4, X1
	0x01EA31D8 MOV X1, X2
	0x01EA31DC MOV X2, X4
	0x01EA31E0 LDR X30, [X31], #0x30
	0x01EA31E4 B 0x24361F0
	0x01EA31E8 STP X31, X31, [X19]
	0x01EA31EC STR X31, [X19 + 0x10]
	0x01EA31F0 LDP X20, X19, [X31 + 0x20]
	0x01EA31F4 LDP X22, X21, [X31 + 0x10]
	0x01EA31F8 LDR X30, [X31], #0x30
	0x01EA31FC RET
	0x01EA3200 BL 0x1C16F20
	0x01EA3204 STR X30, [X31 - 0x10]!
	0x01EA3208 STR X31, [X31 + 0x8]
	0x01EA320C LDR X0, [X0 + 0x50]
	0x01EA3210 CBZ X0, 0x1EA3238
	0x01EA3214 AND X1, X1, 0x0
	0x01EA3218 ADD X2, X31, 0x8
	0x01EA321C MOV X3, X31
	0x01EA3220 BL 0x1EC96E8
	0x01EA3224 LDR X8, [X31 + 0x8]
	0x01EA3228 ANDS W31, W0, 0x1
	0x01EA322C CSEL X0, X8, X31, NE
	0x01EA3230 LDR X30, [X31], #0x10
	0x01EA3234 RET
	0x01EA3238 BL 0x1C16F20
	0x01EA323C STR X30, [X31 - 0x10]!
	0x01EA3240 LDR X0, [X0 + 0x50]
	0x01EA3244 CBZ X0, 0x1EA3258
	0x01EA3248 AND X1, X1, 0x0
	0x01EA324C MOV X3, X31
	0x01EA3250 LDR X30, [X31], #0x10
	0x01EA3254 B 0x1EC96E8
	0x01EA3258 BL 0x1C16F20
	0x01EA325C STR X30, [X31 - 0x30]!
	0x01EA3260 STP X22, X21, [X31 + 0x10]
	0x01EA3264 STP X20, X19, [X31 + 0x20]
	0x01EA3268 ADRP X22, 0x2536000
	0x01EA326C STR X1, [X31 + 0x8]
	0x01EA3270 ADRP X21, 0x225B000
	0x01EA3274 LDRB W8, [X22 + 0x331]
	0x01EA3278 LDR X21, [X21 + 0x378]
	0x01EA327C MOV X19, X2

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x2537000
	010 Move W8, [X21+807]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x225C000
	018 Move X0, [X0+2664]
	019 Call 0x1C17CF4
	020 Move X0, 0x225C000
	021 Move X0, [X0+2672]
	022 Call 0x1C17CF4
	023 Move X0, 0x225C000
	024 Move X0, [X0+2344]
	025 Call 0x1C17CF4
	026 Move X0, 0x225C000
	027 Move X0, [X0+2352]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+807], W8
	031 Move X8, [X20+104]
	032 Compare X8, 0
	033 JumpIfNotEqual {44}
	034 Move X8, 0x225C000
	035 Move X8, [X8+2352]
	036 Move X0, [X8]
	037 Call 0x1C17F10
	038 Move X8, 0x225C000
	039 Move X8, [X8+2344]
	040 Move X21, X0
	041 Move X1, [X8]
	042 Call List`1<Object>..ctor, X0
	043 Move [X20+104], X21
	044 Compare X19, 0
	045 JumpIfEqual {101}
	046 Move X8, [X19+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X23, 0x225C000
	049 Move X24, 0x225C000
	050 Move X23, [X23+2672]
	051 Move X24, [X24+2664]
	052 Move X22, X31
	053 And X8, X8, 0
	054 Add X25, X19, 32
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X0, [X20+104]
	057 Compare X0, 0
	058 JumpIfEqual {101}
	059 Move X21, [X25]
	060 Move X2, [X23]
	061 Move X1, X21
	062 Call List`1<Object>.Contains, X0, X1
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {89}
	067 Move X0, [X20+104]
	068 Compare X0, 0
	069 JumpIfEqual {101}
	070 Move W10, [X0+28]
	071 Move X8, [X0+16]
	072 Move X9, [X24]
	073 Add W10, W10, 1
	074 Move [X0+28], W10
	075 Compare X8, 0
	076 JumpIfEqual {101}
	077 NotImplemented "Instruction LDRSW not yet implemented."
	078 Move W11, [X8+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Add W9, W10, 1
	081 Add X8, X8, X10
	082 Move [X0+24], W9
	083 Move [X8+32], X21
	084 Move X8, [X9+32]
	085 Move X1, X21
	086 Move X8, [X8+192]
	087 Move X2, [X8+112]
	088 Call List`1<Object>.AddWithResize, X0, X1
	089 Move W8, [X19+24]
	090 Add X22, X22, 1
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X20, [X31+48]
	093 Move X19, [X31+56]
	094 Move X22, [X31+32]
	095 Move X21, [X31+40]
	096 Move X24, [X31+16]
	097 Move X23, [X31+24]
	098 Move X30, [X31+64]
	099 Move X25, [X31+72]
	100 Return 
	101 Call 0x1C17F20
	102 Call 0x1C17F28

Method: System.Void RemoveCallbacks(Fusion.INetworkRunnerCallbacks[] callbacks)

Disassembly:
	0x01EA3280 MOV X20, X0
	0x01EA3284 TBNZ X8, 0x0, 0x1EA329C
	0x01EA3288 ADRP X0, 0x225B000
	0x01EA328C LDR X0, [X0 + 0x378]
	0x01EA3290 BL 0x1C16CF4
	0x01EA3294 MOVZ W8, 0x1
	0x01EA3298 STRB W8, [X22 + 0x331]
	0x01EA329C STR X31, [X19]
	0x01EA32A0 LDR X0, [X21]
	0x01EA32A4 LDR W8, [X0 + 0xE0]
	0x01EA32A8 CBNZ W8, 0x1EA32B0
	0x01EA32AC BL 0x1C16DFC
	0x01EA32B0 ADD X0, X31, 0x8
	0x01EA32B4 MOV X1, X31
	0x01EA32B8 BL 0x1E99108
	0x01EA32BC TBZ X0, 0x0, 0x1EA32DC
	0x01EA32C0 LDR X0, [X20 + 0x50]
	0x01EA32C4 CBZ X0, 0x1EA32F4
	0x01EA32C8 LDR X1, [X31 + 0x8]
	0x01EA32CC MOV X2, X19
	0x01EA32D0 MOV X3, X31
	0x01EA32D4 BL 0x1EC9788
	0x01EA32D8 B 0x1EA32E0
	0x01EA32DC MOV W0, W31
	0x01EA32E0 LDP X20, X19, [X31 + 0x20]
	0x01EA32E4 LDP X22, X21, [X31 + 0x10]
	0x01EA32E8 AND W0, W0, 0x1
	0x01EA32EC LDR X30, [X31], #0x30
	0x01EA32F0 RET
	0x01EA32F4 BL 0x1C16F20
	0x01EA32F8 STR X30, [X31 - 0x20]!
	0x01EA32FC STP X20, X19, [X31 + 0x10]
	0x01EA3300 STR X31, [X31 + 0x8]
	0x01EA3304 LDR X0, [X0 + 0x50]
	0x01EA3308 CBZ X0, 0x1EA3394
	0x01EA330C MOV X19, X2
	0x01EA3310 MOV X20, X1
	0x01EA3314 AND X1, X1, 0x0
	0x01EA3318 ADD X2, X31, 0x8
	0x01EA331C MOV X3, X31
	0x01EA3320 BL 0x1EC96E8
	0x01EA3324 TBZ X0, 0x0, 0x1EA337C
	0x01EA3328 LDR X8, [X31 + 0x8]
	0x01EA332C UBFM X9, X20, 0x20, 0x3F
	0x01EA3330 TBNZ X9, 0x1F, 0x1EA333C
	0x01EA3334 CBNZ X8, 0x1EA3354
	0x01EA3338 B 0x1EA3394
	0x01EA333C CBZ X8, 0x1EA3394
	0x01EA3340 LDR X10, [X8 + 0x78]
	0x01EA3344 CBZ X10, 0x1EA3394
	0x01EA3348 LDR W10, [X10 + 0x18]
	0x01EA334C CMP W9, W10
	0x01EA3350 B.GE 0x1EA337C
	0x01EA3354 LDR X8, [X8 + 0x78]
	0x01EA3358 CBZ X8, 0x1EA3394
	0x01EA335C LDR W10, [X8 + 0x18]
	0x01EA3360 SBFM X9, X20, 0x20, 0x3F
	0x01EA3364 CMP W9, W10
	0x01EA3368 B.CS 0x1EA3398
	0x01EA336C ADD X8, X8, X9, 0x3, LSL
	0x01EA3370 LDR X8, [X8 + 0x20]
	0x01EA3374 MOVZ W0, 0x1
	0x01EA3378 B 0x1EA3384
	0x01EA337C MOV X8, X31
	0x01EA3380 MOV W0, W31
	0x01EA3384 STR X8, [X19]
	0x01EA3388 LDP X20, X19, [X31 + 0x10]
	0x01EA338C LDR X30, [X31], #0x20
	0x01EA3390 RET
	0x01EA3394 BL 0x1C16F20
	0x01EA3398 BL 0x1C16F28

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x2537000
	010 Move W8, [X21+808]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x225C000
	018 Move X0, [X0+2672]
	019 Call 0x1C17CF4
	020 Move X0, 0x225C000
	021 Move X0, [X0+2680]
	022 Call 0x1C17CF4
	023 Move X0, 0x225C000
	024 Move X0, [X0+2344]
	025 Call 0x1C17CF4
	026 Move X0, 0x225C000
	027 Move X0, [X0+2352]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+808], W8
	031 Move X8, [X20+104]
	032 Compare X8, 0
	033 JumpIfNotEqual {44}
	034 Move X8, 0x225C000
	035 Move X8, [X8+2352]
	036 Move X0, [X8]
	037 Call 0x1C17F10
	038 Move X8, 0x225C000
	039 Move X8, [X8+2344]
	040 Move X21, X0
	041 Move X1, [X8]
	042 Call List`1<Object>..ctor, X0
	043 Move [X20+104], X21
	044 Compare X19, 0
	045 JumpIfEqual {85}
	046 Move X8, [X19+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X23, 0x225C000
	049 Move X24, 0x225C000
	050 Move X23, [X23+2672]
	051 Move X24, [X24+2680]
	052 Move X22, X31
	053 And X8, X8, 0
	054 Add X25, X19, 32
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X0, [X20+104]
	057 Compare X0, 0
	058 JumpIfEqual {85}
	059 Move X21, [X25]
	060 Move X2, [X23]
	061 Move X1, X21
	062 Call List`1<Object>.Contains, X0, X1
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {73}
	067 Move X0, [X20+104]
	068 Compare X0, 0
	069 JumpIfEqual {85}
	070 Move X2, [X24]
	071 Move X1, X21
	072 Call List`1<Object>.Remove, X0, X1
	073 Move W8, [X19+24]
	074 Add X22, X22, 1
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X20, [X31+48]
	077 Move X19, [X31+56]
	078 Move X22, [X31+32]
	079 Move X21, [X31+40]
	080 Move X24, [X31+16]
	081 Move X23, [X31+24]
	082 Move X30, [X31+64]
	083 Move X25, [X31+72]
	084 Return 
	085 Call 0x1C17F20
	086 Call 0x1C17F28

Method: System.Void GetMemorySnapshot(Fusion.Statistics.MemoryStatisticsSnapshot/TargetAllocator targetAllocator, ref Fusion.Statistics.MemoryStatisticsSnapshot snapshot)

Disassembly:
	0x01EA339C STP X30, X19, [X31 - 0x10]!
	0x01EA33A0 CBZ X1, 0x1EA33E4
	0x01EA33A4 LDRB W8, [X1 + 0x30]
	0x01EA33A8 MOV X19, X1
	0x01EA33AC TBNZ X8, 0x3, 0x1EA33E4
	0x01EA33B0 LDR X0, [X19 + 0x40]
	0x01EA33B4 CBZ X0, 0x1EA33F0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X3, X31
	006 Move X30, [X31+16]
	007 Call Simulation.GetMemorySnapshot, X0, X1, X2
	008 Return 
	009 Call 0x1C17F20

Method: System.Void OnApplicationQuit()

Disassembly:
	0x01EA33B8 MOV X1, X31
	0x01EA33BC BL 0x1E934B8
	0x01EA33C0 MOV W8, W0
	0x01EA33C4 MOV X0, X31
	0x01EA33C8 TBZ X8, 0x0, 0x1EA33E8
	0x01EA33CC LDR X8, [X19 + 0x40]
	0x01EA33D0 CBZ X8, 0x1EA33F0
	0x01EA33D4 LDR X8, [X8 + 0x20]
	0x01EA33D8 CBZ X8, 0x1EA33E4
	0x01EA33DC LDR W0, [X8]
	0x01EA33E0 B 0x1EA33E8
	0x01EA33E4 MOV X0, X31
	0x01EA33E8 LDP X30, X19, [X31], #0x10
	0x01EA33EC RET
	0x01EA33F0 BL 0x1C16F20
	0x01EA33F4 STP X30, X19, [X31 - 0x10]!
	0x01EA33F8 CBZ X1, 0x1EA3444
	0x01EA33FC LDRB W8, [X1 + 0x30]
	0x01EA3400 MOV X19, X1
	0x01EA3404 TBNZ X8, 0x3, 0x1EA3444
	0x01EA3408 LDR X0, [X19 + 0x40]
	0x01EA340C CBZ X0, 0x1EA3458
	0x01EA3410 MOV X1, X31
	0x01EA3414 BL 0x1E934B8
	0x01EA3418 MOV X8, X31
	0x01EA341C MOV X9, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2537000
	006 Move X21, 0x225B000
	007 Move W8, [X20+809]
	008 Move X21, [X21+712]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x225B000
	015 Move X0, [X0+712]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+809], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X31
	025 Call StunClient.Reset
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move W1, 1
	030 Move W2, W31
	031 Move W3, W31
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Call NetworkRunner.Shutdown, X0, X1, X2, X3
	035 Return 

Method: System.Void RenderInternal()

Disassembly:
	0x01EA3420 TBZ X0, 0x0, 0x1EA344C
	0x01EA3424 LDR X8, [X19 + 0x40]
	0x01EA3428 CBZ X8, 0x1EA3458
	0x01EA342C LDR X8, [X8 + 0x20]
	0x01EA3430 LDR W9, [X19 + 0x68]
	0x01EA3434 CBZ X8, 0x1EA343C
	0x01EA3438 LDR W8, [X8]
	0x01EA343C UBFM X9, X9, 0x20, 0x1F
	0x01EA3440 B 0x1EA344C
	0x01EA3444 MOV X8, X31
	0x01EA3448 MOV X9, X31
	0x01EA344C ORR X0, X9, X8, 0x0
	0x01EA3450 LDP X30, X19, [X31], #0x10
	0x01EA3454 RET
	0x01EA3458 BL 0x1C16F20
	0x01EA345C STR X30, [X31 - 0x30]!
	0x01EA3460 STP X22, X21, [X31 + 0x10]
	0x01EA3464 STP X20, X19, [X31 + 0x20]
	0x01EA3468 ADRP X22, 0x2536000
	0x01EA346C LDRB W8, [X22 + 0x332]
	0x01EA3470 MOV W19, W2
	0x01EA3474 MOV X21, X1
	0x01EA3478 MOV X20, X0
	0x01EA347C TBNZ X8, 0x0, 0x1EA3494
	0x01EA3480 ADRP X0, 0x225B000
	0x01EA3484 LDR X0, [X0 + 0xA90]
	0x01EA3488 BL 0x1C16CF4
	0x01EA348C MOVZ W8, 0x1
	0x01EA3490 STRB W8, [X22 + 0x332]
	0x01EA3494 MOV X0, X20
	0x01EA3498 MOV X1, X21
	0x01EA349C BL 0x1EA1A20
	0x01EA34A0 TBZ X0, 0x0, 0x1EA3580
	0x01EA34A4 LDR X0, [X20 + 0x50]
	0x01EA34A8 CBZ X0, 0x1EA35C0
	0x01EA34AC MOV X1, X31
	0x01EA34B0 BL 0x1EC0810
	0x01EA34B4 CMP W0, 0x2
	0x01EA34B8 B.NE 0x1EA34E8
	0x01EA34BC LDR X22, [X20 + 0x50]
	0x01EA34C0 CBZ X22, 0x1EA35C0
	0x01EA34C4 MOV X0, X22
	0x01EA34C8 MOV X1, X31
	0x01EA34CC BL 0x1EC0810
	0x01EA34D0 CMP W0, 0x1
	0x01EA34D4 B.NE 0x1EA3548
	0x01EA34D8 MOV X0, X22
	0x01EA34DC MOV X1, X31
	0x01EA34E0 BL 0x1EBDF30
	0x01EA34E4 TBZ X0, 0x0, 0x1EA3580
	0x01EA34E8 CBZ X21, 0x1EA35C0
	0x01EA34EC LDR X8, [X21 + 0x20]
	0x01EA34F0 CBZ X8, 0x1EA34FC
	0x01EA34F4 LDR W21, [X8]
	0x01EA34F8 B 0x1EA3500
	0x01EA34FC MOV X21, X31
	0x01EA3500 ADRP X10, 0x225B000
	0x01EA3504 LDR X8, [X20]
	0x01EA3508 LDR X10, [X10 + 0xA90]
	0x01EA350C LDRH W9, [X8 + 0x12E]
	0x01EA3510 LDR X1, [X10]
	0x01EA3514 CBZ X9, 0x1EA3538
	0x01EA3518 LDR X10, [X8 + 0xB0]
	0x01EA351C ADD X10, X10, 0x8
	0x01EA3520 LDUR X11, [X10 - 0x8]
	0x01EA3524 CMP X11, X1
	0x01EA3528 B.EQ 0x1EA3588
	0x01EA352C SUBS X9, X9, 0x1
	0x01EA3530 ADD X10, X10, 0x10
	0x01EA3534 B.NE 0x1EA3520
	0x01EA3538 MOVZ W2, 0x1F
	0x01EA353C MOV X0, X20
	0x01EA3540 BL 0x1C5C788
	0x01EA3544 B 0x1EA3598
	0x01EA3548 LDR X8, [X22]
	0x01EA354C MOV X0, X22
	0x01EA3550 LDR X9, [X8 + 0x268]
	0x01EA3554 LDR X1, [X8 + 0x270]
	0x01EA3558 BLR X9
	0x01EA355C CBZ X21, 0x1EA35C0
	0x01EA3560 LDR X8, [X21 + 0x20]
	0x01EA3564 CBZ X8, 0x1EA35C0
	0x01EA3568 LDR W1, [X8 + 0x20]
	0x01EA356C AND X2, X0, 0x0
	0x01EA3570 MOV X0, X22
	0x01EA3574 MOV X3, X31
	0x01EA3578 BL 0x1DBF8E4
	0x01EA357C TBNZ X0, 0x0, 0x1EA34EC
	0x01EA3580 MOV W0, W31
	0x01EA3584 B 0x1EA35B0
	0x01EA3588 LDR W9, [X10]
	0x01EA358C ADD W9, W9, 0x1F
	0x01EA3590 ADD X8, X8, W9, 0x4, SXTW
	0x01EA3594 ADD X0, X8, 0x138
	0x01EA3598 LDP X8, X3, [X0]
	0x01EA359C AND W2, W19, 0x1
	0x01EA35A0 MOV X0, X20
	0x01EA35A4 MOV X1, X21
	0x01EA35A8 BLR X8
	0x01EA35AC MOVZ W0, 0x1
	0x01EA35B0 LDP X20, X19, [X31 + 0x20]
	0x01EA35B4 LDP X22, X21, [X31 + 0x10]
	0x01EA35B8 LDR X30, [X31], #0x30
	0x01EA35BC RET
	0x01EA35C0 BL 0x1C16F20
	0x01EA35C4 STP X30, X23, [X31 - 0x30]!

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2537000
	007 Move X20, 0x2254000
	008 Move W8, [X21+810]
	009 Move X20, [X20+920]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x2251000
	016 Move X0, [X0+2416]
	017 Call 0x1C17CF4
	018 Move X0, 0x2254000
	019 Move X0, [X0+920]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+810], W8
	023 Move X0, [X20]
	024 Move X20, [X19+80]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X31
	030 Call NetworkId.get_RuntimeConfig
	031 Compare X20, 0
	032 JumpIfEqual {108}
	033 And X1, X0, 0
	034 Move X0, X20
	035 Move X2, X31
	036 Call Simulation.HasObject, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {102}
	041 Move W8, [X19+92]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {102}
	046 Move X0, [X19+80]
	047 Compare X0, 0
	048 JumpIfEqual {102}
	049 Move X8, [X19+152]
	050 Compare X8, 0
	051 JumpIfEqual {108}
	052 Move W8, [X8+49]
	053 Compare W8, 0
	054 JumpIfEqual {58}
	055 Move W8, 2
	056 Move X20, X19
	057 Move [X20+88], W8
	058 Move X8, 0x2251000
	059 Move X8, [X8+2416]
	060 Move X0, [X8]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X0, X31
	066 Call Application.get_isBatchMode
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {88}
	071 Move W8, 2
	072 Move X20, X19
	073 Move [X20+88], W8
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 Compare X0, 0
	076 JumpIfEqual {110}
	077 Move X1, X31
	078 Call Simulation.InterpolateSequenceIncrement, X0
	079 Move X0, [X19+96]
	080 Compare X0, 0
	081 JumpIfEqual {109}
	082 Move X1, X31
	083 Call SimulationBehaviourUpdater.InvokeRender, X0
	084 Move X0, [X19+96]
	085 Move X1, X31
	086 Call CallbackInterfaceInvoker.IAfterRender, X0
	087 Move [X20], W31
	088 Move W8, [X19+64]
	089 Compare W8, 0
	090 JumpIfEqual {102}
	091 Move W1, [X19+72]
	092 Move W2, [X19+68]
	093 Move X0, X19
	094 Move X20, [X31+32]
	095 Move X19, [X31+40]
	096 Move X30, [X31+16]
	097 Move X21, [X31+24]
	098 Move W3, W31
	099 Add X31, X31, 48
	100 Call NetworkRunner.Shutdown, X0, X1, X2, X3
	101 Return 
	102 Move X20, [X31+32]
	103 Move X19, [X31+40]
	104 Move X30, [X31+16]
	105 Move X21, [X31+24]
	106 Add X31, X31, 48
	107 Return 
	108 Call 0x1C17F20
	109 Call 0x1C17F20
	110 Call 0x1C17F20
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move [X31+8], X20
	113 Call 0x3EB2AD0
	114 Move X20, [X0]
	115 Call 0x3EB2AE0
	116 Move X8, [X31+8]
	117 Move [X8], W31
	118 Compare X20, 0
	119 JumpIfEqual {88}
	120 Move X0, X20
	121 Call 0x1C17F18
	122 Move X8, [X31+8]
	123 Move [X8], W31
	124 Move X8, [X31+8]
	125 Move [X8], W31
	126 Compare X20, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1D2D690
	129 Move X0, X20
	130 Call 0x1C17F18
	131 Call 0x1991590

Method: System.Void Awake()

Disassembly:
	0x01EA35C8 STP X22, X21, [X31 + 0x10]
	0x01EA35CC STP X20, X19, [X31 + 0x20]
	0x01EA35D0 ADRP X23, 0x2536000
	0x01EA35D4 LDRB W8, [X23 + 0x333]
	0x01EA35D8 MOV W19, W3
	0x01EA35DC MOV W20, W2
	0x01EA35E0 MOV W21, W1
	0x01EA35E4 MOV X22, X0
	0x01EA35E8 TBNZ X8, 0x0, 0x1EA3600
	0x01EA35EC ADRP X0, 0x225B000
	0x01EA35F0 LDR X0, [X0 + 0xAA0]
	0x01EA35F4 BL 0x1C16CF4
	0x01EA35F8 MOVZ W8, 0x1
	0x01EA35FC STRB W8, [X23 + 0x333]
	0x01EA3600 LDR X8, [X22 + 0x50]
	0x01EA3604 CBZ X8, 0x1EA361C
	0x01EA3608 LDR X8, [X8 + 0x58]
	0x01EA360C CBZ X8, 0x1EA3654
	0x01EA3610 LDR W8, [X8 + 0x38]
	0x01EA3614 CMP W8, 0x2
	0x01EA3618 B.EQ 0x1EA3658
	0x01EA361C ADRP X22, 0x225B000
	0x01EA3620 LDR X22, [X22 + 0xAA0]
	0x01EA3624 LDR X0, [X22]
	0x01EA3628 LDR W8, [X0 + 0xE0]
	0x01EA362C CBNZ W8, 0x1EA3638
	0x01EA3630 BL 0x1C16DFC
	0x01EA3634 LDR X0, [X22]
	0x01EA3638 LDR X8, [X0 + 0xB8]
	0x01EA363C STP W21, W20, [X8]
	0x01EA3640 STR W19, [X8 + 0x8]
	0x01EA3644 LDP X20, X19, [X31 + 0x20]
	0x01EA3648 LDP X22, X21, [X31 + 0x10]
	0x01EA364C LDP X30, X23, [X31], #0x30
	0x01EA3650 RET
	0x01EA3654 BL 0x1C16F20
	0x01EA3658 ADRP X0, 0x2250000
	0x01EA365C LDR X0, [X0 + 0x7D0]
	0x01EA3660 BL 0x1C16D08
	0x01EA3664 BL 0x1C16F10
	0x01EA3668 MOV X19, X0
	0x01EA366C ADRP X0, 0x225B000
	0x01EA3670 LDR X0, [X0 + 0xAA8]
	0x01EA3674 BL 0x1C16D08
	0x01EA3678 MOV X1, X0
	0x01EA367C MOV X0, X19
	0x01EA3680 MOV X2, X31
	0x01EA3684 BL 0x33B2C70
	0x01EA3688 ADRP X0, 0x225B000
	0x01EA368C LDR X0, [X0 + 0xAB0]
	0x01EA3690 BL 0x1C16D08
	0x01EA3694 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2537000
	006 Move W8, [X20+811]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0x225C000
	013 Move X0, [X0+2344]
	014 Call 0x1C17CF4
	015 Move X0, 0x225C000
	016 Move X0, [X0+2352]
	017 Call 0x1C17CF4
	018 Move X0, 0x225A000
	019 Move X0, [X0+3712]
	020 Call 0x1C17CF4
	021 Move X0, 0x2259000
	022 Move X0, [X0+2000]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+811], W8
	026 Move X21, 0x225A000
	027 Move X8, [X19+104]
	028 Move X21, [X21+3712]
	029 Compare X8, 0
	030 JumpIfNotEqual {41}
	031 Move X8, 0x225C000
	032 Move X8, [X8+2352]
	033 Move X0, [X8]
	034 Call 0x1C17F10
	035 Move X8, 0x225C000
	036 Move X8, [X8+2344]
	037 Move X20, X0
	038 Move X1, [X8]
	039 Call List`1<Object>..ctor, X0
	040 Move [X19+104], X20
	041 Move X20, 0x2259000
	042 Move X20, [X20+2000]
	043 Move X0, X19
	044 Call NetworkRunner.RegisterNetworkCallbacks, X0
	045 Move X0, [X21]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X19
	051 Call NetworkRunner.AddInstance, X0
	052 Move X0, [X20]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X0, X31
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Call TaskManager.Setup
	063 Return 

Method: System.Void OnDisable()

Disassembly:
	0x01EA3698 MOV X0, X19

ISIL:
	001 Return 

Method: System.Void OnDestroy()

Disassembly:
	0x01EA369C BL 0x1C16DEC
	0x01EA36A0 STP X30, X21, [X31 - 0x20]!
	0x01EA36A4 STP X20, X19, [X31 + 0x10]
	0x01EA36A8 ADRP X21, 0x2536000

ISIL:
	001 Move W1, W31
	002 Move W2, W31
	003 Move W3, W31
	004 Call NetworkRunner.Shutdown, X0, X1, X2, X3
	005 Return 

Method: System.Void Update()

Disassembly:
	0x01EA36AC LDRB W8, [X21 + 0x334]
	0x01EA36B0 MOV W19, W1
	0x01EA36B4 MOV X20, X0
	0x01EA36B8 TBNZ X8, 0x0, 0x1EA36D0
	0x01EA36BC ADRP X0, 0x225B000

ISIL:
	001 Move X0, [X0+432]
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move X1, X31
	005 Call CloudServices.Update, X0
	006 Return 
	007 Return 

Method: System.Void SetMasterClient(Fusion.PlayerRef player)

Disassembly:
	0x01EA36C0 LDR X0, [X0 + 0xAA0]
	0x01EA36C4 BL 0x1C16CF4
	0x01EA36C8 MOVZ W8, 0x1
	0x01EA36CC STRB W8, [X21 + 0x334]
	0x01EA36D0 LDR X8, [X20 + 0x50]
	0x01EA36D4 CBZ X8, 0x1EA36EC
	0x01EA36D8 LDR X8, [X8 + 0x58]
	0x01EA36DC CBZ X8, 0x1EA371C
	0x01EA36E0 LDR W8, [X8 + 0x38]
	0x01EA36E4 CMP W8, 0x2
	0x01EA36E8 B.EQ 0x1EA3720
	0x01EA36EC ADRP X20, 0x225B000
	0x01EA36F0 LDR X20, [X20 + 0xAA0]
	0x01EA36F4 LDR X0, [X20]
	0x01EA36F8 LDR W8, [X0 + 0xE0]
	0x01EA36FC CBNZ W8, 0x1EA3708
	0x01EA3700 BL 0x1C16DFC
	0x01EA3704 LDR X0, [X20]
	0x01EA3708 LDR X8, [X0 + 0xB8]
	0x01EA370C STR W19, [X8 + 0xC]
	0x01EA3710 LDP X20, X19, [X31 + 0x10]
	0x01EA3714 LDP X30, X21, [X31], #0x20
	0x01EA3718 RET
	0x01EA371C BL 0x1C16F20
	0x01EA3720 ADRP X0, 0x2250000
	0x01EA3724 LDR X0, [X0 + 0x7D0]
	0x01EA3728 BL 0x1C16D08
	0x01EA372C BL 0x1C16F10
	0x01EA3730 MOV X19, X0
	0x01EA3734 ADRP X0, 0x225B000
	0x01EA3738 LDR X0, [X0 + 0xAB8]
	0x01EA373C BL 0x1C16D08
	0x01EA3740 MOV X1, X0
	0x01EA3744 MOV X0, X19
	0x01EA3748 MOV X2, X31
	0x01EA374C BL 0x33B2C70
	0x01EA3750 ADRP X0, 0x225B000
	0x01EA3754 LDR X0, [X0 + 0xAC0]
	0x01EA3758 BL 0x1C16D08
	0x01EA375C MOV X1, X0
	0x01EA3760 MOV X0, X19
	0x01EA3764 BL 0x1C16DEC
	0x01EA3768 STR X30, [X31 - 0x10]!
	0x01EA376C LDR X0, [X0 + 0x50]
	0x01EA3770 CBZ X0, 0x1EA3784
	0x01EA3774 AND X1, X1, 0x0
	0x01EA3778 MOV X2, X31
	0x01EA377C LDR X30, [X31], #0x10
	0x01EA3780 B 0x1EBE984
	0x01EA3784 BL 0x1C16F20
	0x01EA3788 LDR X0, [X0 + 0x50]
	0x01EA378C CBZ X0, 0x1EA3798
	0x01EA3790 MOV X2, X31
	0x01EA3794 B 0x1EBE658
	0x01EA3798 RET
	0x01EA379C LDR X8, [X0 + 0x50]
	0x01EA37A0 CBZ X8, 0x1EA37AC
	0x01EA37A4 LDR X9, [X8 + 0xE0]
	0x01EA37A8 B 0x1EA37B0
	0x01EA37AC MOV X9, X31
	0x01EA37B0 CMP X8, 0x0
	0x01EA37B4 CSET W0, NE
	0x01EA37B8 STR X9, [X1]
	0x01EA37BC RET
	0x01EA37C0 STP X30, X19, [X31 - 0x10]!
	0x01EA37C4 LDR X0, [X0 + 0x60]
	0x01EA37C8 MOV X19, X2
	0x01EA37CC CBZ X0, 0x1EA37E8
	0x01EA37D0 MOV X2, X19
	0x01EA37D4 MOV X3, X31
	0x01EA37D8 BL 0x1E7CDE8
	0x01EA37DC TBZ X0, 0x0, 0x1EA37E8
	0x01EA37E0 MOVZ W0, 0x1
	0x01EA37E4 B 0x1EA37F0
	0x01EA37E8 MOV W0, W31
	0x01EA37EC STR X31, [X19]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2537000
	007 Move W8, [X21+812]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x2254000
	015 Move X0, [X0+3832]
	016 Call 0x1C17CF4
	017 Move X0, 0x2254000
	018 Move X0, [X0+3840]
	019 Call 0x1C17CF4
	020 Move X0, 0x2254000
	021 Move X0, [X0+3648]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+812], W8
	025 Move [X31+8], X31
	026 Move X8, [X19+80]
	027 Compare X8, 0
	028 JumpIfEqual {83}
	029 Move X8, [X8+88]
	030 Compare X8, 0
	031 JumpIfEqual {89}
	032 Move W8, [X8+56]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, X19
	035 Call NetworkRunner.get_IsSharedModeMasterClient, X0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {83}
	040 Move X0, [X19+80]
	041 Compare X0, 0
	042 JumpIfEqual {83}
	043 Move X8, [X0]
	044 Move X9, [X8+616]
	045 Move X1, [X8+624]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X22, 0x2254000
	048 Move X22, [X22+3648]
	049 Move X21, X0
	050 Move X8, [X22]
	051 Move W9, [X8+224]
	052 Compare W9, 0
	053 JumpIfNotEqual {56}
	054 Move X0, X8
	055 Call 0x1C17DFC
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, [X22]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, [X19+80]
	064 Compare X0, 0
	065 JumpIfEqual {89}
	066 And X1, X20, 0
	067 Move X2, X31
	068 Call Simulation.GetPlayerActorId, X0, X1
	069 And W31, W0, 255
	070 Move [X31+8], X0
	071 Move X8, 0x2254000
	072 Move X19, [X19+432]
	073 Move X8, [X8+3840]
	074 Add X0, X31, 8
	075 Move X1, [X8]
	076 Call Nullable`1<Int32>.get_Value, X0
	077 Compare X19, 0
	078 JumpIfEqual {89}
	079 Move W1, W0
	080 Move X0, X19
	081 Move X2, X31
	082 Call CloudServices.SendChangeMasterClient, X0, X1
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X30, [X31+48]
	088 Return 
	089 Call 0x1C17F20

Method: System.Void UpdateInternal(System.Double dt)

Disassembly:
	0x01EA3838 LDR W8, [X0 + 0xE0]
	0x01EA383C CBZ W8, 0x1EA3848
	0x01EA3840 CBNZ W19, 0x1EA3850
	0x01EA3844 B 0x1EA3870
	0x01EA3848 BL 0x1C16DFC
	0x01EA384C CBZ W19, 0x1EA3870
	0x01EA3850 LDR X0, [X20 + 0x50]
	0x01EA3854 CBZ X0, 0x1EA3870
	0x01EA3858 AND X1, X19, 0x0
	0x01EA385C LDP X20, X19, [X31 + 0x20]
	0x01EA3860 LDP X22, X21, [X31 + 0x10]
	0x01EA3864 MOV X2, X31
	0x01EA3868 LDR X30, [X31], #0x30
	0x01EA386C B 0x1EC93AC
	0x01EA3870 LDP X20, X19, [X31 + 0x20]
	0x01EA3874 LDP X22, X21, [X31 + 0x10]
	0x01EA3878 MOV W0, W31
	0x01EA387C LDR X30, [X31], #0x30
	0x01EA3880 RET
	0x01EA3884 STP X30, X21, [X31 - 0x20]!
	0x01EA3888 STP X20, X19, [X31 + 0x10]
	0x01EA388C LDR X21, [X0 + 0x50]
	0x01EA3890 CBZ X21, 0x1EA3950
	0x01EA3894 MOV X19, X0
	0x01EA3898 MOV X20, X1
	0x01EA389C MOV X0, X21
	0x01EA38A0 MOV X1, X31
	0x01EA38A4 BL 0x1EC0810
	0x01EA38A8 CMP W0, 0x1
	0x01EA38AC B.NE 0x1EA38C4
	0x01EA38B0 MOV X0, X21
	0x01EA38B4 MOV X1, X31
	0x01EA38B8 BL 0x1EBDF30
	0x01EA38BC TBNZ X0, 0x0, 0x1EA38FC
	0x01EA38C0 B 0x1EA3944
	0x01EA38C4 LDR X8, [X21]
	0x01EA38C8 MOV X0, X21
	0x01EA38CC LDR X9, [X8 + 0x268]
	0x01EA38D0 LDR X1, [X8 + 0x270]
	0x01EA38D4 BLR X9
	0x01EA38D8 CBZ X20, 0x1EA3950
	0x01EA38DC LDR X8, [X20 + 0x20]
	0x01EA38E0 CBZ X8, 0x1EA3950
	0x01EA38E4 LDR W1, [X8 + 0x20]
	0x01EA38E8 AND X2, X0, 0x0
	0x01EA38EC MOV X0, X21
	0x01EA38F0 MOV X3, X31
	0x01EA38F4 BL 0x1DBF8E4
	0x01EA38F8 TBZ X0, 0x0, 0x1EA3944
	0x01EA38FC MOV X0, X19
	0x01EA3900 MOV X1, X20
	0x01EA3904 BL 0x1EA1A20
	0x01EA3908 TBZ X0, 0x0, 0x1EA3944
	0x01EA390C CBZ X20, 0x1EA3950
	0x01EA3910 MOV X0, X20
	0x01EA3914 MOV X1, X31
	0x01EA3918 BL 0x1E93668
	0x01EA391C TBZ X0, 0x0, 0x1EA3944
	0x01EA3920 LDR X8, [X20 + 0x30]
	0x01EA3924 CMP X8, X19
	0x01EA3928 B.NE 0x1EA3954
	0x01EA392C MOV X0, X19
	0x01EA3930 MOV X1, X20
	0x01EA3934 LDP X20, X19, [X31 + 0x10]
	0x01EA3938 MOVZ W2, 0xA
	0x01EA393C LDP X30, X21, [X31], #0x20
	0x01EA3940 B 0x1EA399C
	0x01EA3944 LDP X20, X19, [X31 + 0x10]
	0x01EA3948 LDP X30, X21, [X31], #0x20
	0x01EA394C RET
	0x01EA3950 BL 0x1C16F20
	0x01EA3954 ADRP X0, 0x2250000
	0x01EA3958 LDR X0, [X0 + 0x5B0]
	0x01EA395C BL 0x1C16D08
	0x01EA3960 BL 0x1C16F10
	0x01EA3964 MOV X19, X0
	0x01EA3968 ADRP X0, 0x225B000
	0x01EA396C LDR X0, [X0 + 0xAC8]
	0x01EA3970 BL 0x1C16D08
	0x01EA3974 MOV X1, X0
	0x01EA3978 MOV X0, X19
	0x01EA397C MOV X2, X31
	0x01EA3980 BL 0x337DF1C
	0x01EA3984 ADRP X0, 0x225B000
	0x01EA3988 LDR X0, [X0 + 0xAD0]
	0x01EA398C BL 0x1C16D08
	0x01EA3990 MOV X1, X0
	0x01EA3994 MOV X0, X19
	0x01EA3998 BL 0x1C16DEC
	0x01EA399C STP X30, X27, [X31 - 0x50]!
	0x01EA39A0 STP X26, X25, [X31 + 0x10]
	0x01EA39A4 STP X24, X23, [X31 + 0x20]
	0x01EA39A8 STP X22, X21, [X31 + 0x30]
	0x01EA39AC STP X20, X19, [X31 + 0x40]
	0x01EA39B0 ADRP X22, 0x2536000
	0x01EA39B4 LDRB W8, [X22 + 0x338]
	0x01EA39B8 MOV W20, W2
	0x01EA39BC MOV X19, X1
	0x01EA39C0 MOV X21, X0
	0x01EA39C4 TBNZ X8, 0x0, 0x1EA3A00
	0x01EA39C8 ADRP X0, 0x225B000
	0x01EA39CC LDR X0, [X0 + 0xAD8]
	0x01EA39D0 BL 0x1C16CF4
	0x01EA39D4 ADRP X0, 0x225B000
	0x01EA39D8 LDR X0, [X0 + 0xAE0]
	0x01EA39DC BL 0x1C16CF4
	0x01EA39E0 ADRP X0, 0x225A000
	0x01EA39E4 LDR X0, [X0 + 0xFD0]
	0x01EA39E8 BL 0x1C16CF4
	0x01EA39EC ADRP X0, 0x225A000
	0x01EA39F0 LDR X0, [X0 + 0xFD8]
	0x01EA39F4 BL 0x1C16CF4
	0x01EA39F8 MOVZ W8, 0x1
	0x01EA39FC STRB W8, [X22 + 0x338]
	0x01EA3A00 MOV X0, X21
	0x01EA3A04 MOV X1, X19
	0x01EA3A08 BL 0x1EA1A20
	0x01EA3A0C LDR X8, [X21 + 0x70]
	0x01EA3A10 CBZ X8, 0x1EA3BEC
	0x01EA3A14 LDR W22, [X8 + 0x18]
	0x01EA3A18 MOV W23, W0
	0x01EA3A1C TBZ X0, 0x0, 0x1EA3B50
	0x01EA3A20 CBZ X19, 0x1EA3BEC
	0x01EA3A24 LDR X9, [X19 + 0x20]
	0x01EA3A28 CBZ X9, 0x1EA3A34
	0x01EA3A2C LDR W1, [X9]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 NotImplemented "Instruction FCMP not yet implemented."
	007 Move X19, X0
	008 Move W8, [X19+64]
	009 Compare W8, 0
	010 JumpIfEqual {38}
	011 Move W1, [X19+72]
	012 Move W2, [X19+68]
	013 Move X0, X19
	014 Move X20, [X31+32]
	015 Move X19, [X31+40]
	016 Move X30, [X31+16]
	017 Move X21, [X31+24]
	018 Move W3, W31
	019 Move V8, [X31+48]
	020 Call NetworkRunner.Shutdown, X0, X1, X2, X3
	021 Return 
	022 Move W8, [X19+92]
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {38}
	027 Move X0, [X19+80]
	028 Compare X0, 0
	029 JumpIfEqual {8}
	030 Move V8, V0
	031 Move X1, X31
	032 Call Simulation.get_IsPaused, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {44}
	037 Move [X19+88], W31
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X30, [X31+16]
	041 Move X21, [X31+24]
	042 Move V8, [X31+48]
	043 Return 
	044 Move W8, 1
	045 Move [X19+88], W8
	046 Move X0, X19
	047 Call NetworkRunner.RegisterNetworkCallbacks, X0
	048 Move X0, [X19+96]
	049 Move X1, X31
	050 Call CallbackInterfaceInvoker.IBeforeUpdate, X0
	051 Move X0, X19
	052 Call NetworkRunner.ProcessSpawnQueue, X0
	053 Move X0, [X19+80]
	054 Compare X0, 0
	055 JumpIfEqual {65}
	056 Move V0, V8
	057 Move X1, X31
	058 Call Simulation.Update, X0, V0
	059 Move X8, [X19+96]
	060 Move [X19+160], W0
	061 Move X0, X8
	062 Move X1, X31
	063 Call CallbackInterfaceInvoker.IAfterUpdate, X0
	064 Move [X19+88], W31
	065 Call 0x1C17F20
	066 Move X20, X0
	067 Move X20, X0
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X0, X20
	070 Call 0x3EB2AD0
	071 Move X20, X0
	072 Move X0, 0x2251000
	073 Move X0, [X0+2000]
	074 Call 0x1C17D08
	075 Move X8, [X20]
	076 Move X1, [X8]
	077 Call 0x1C18270
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {103}
	082 Move X20, [X20]
	083 Call 0x3EB2AE0
	084 Move X0, 0x2259000
	085 Move X0, [X0+2224]
	086 Call 0x1C17D08
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move X0, 0x225C000
	092 Move X0, [X0+2152]
	093 Call 0x1C17D08
	094 Move X2, X0
	095 Move X0, X19
	096 Move X1, X20
	097 Call 0x2214878, X0, X1
	098 Move W1, 1
	099 Move W2, 1
	100 Move X0, X19
	101 Move W3, W31
	102 Call NetworkRunner.Shutdown, X0, X1, X2, X3
	103 Move W0, 8
	104 Call 0x3EB2AF0
	105 Move X8, [X20]
	106 Move [X0], X8
	107 Move X1, 0x2012000
	108 Add X1, X1, 3672
	109 Move X2, X31
	110 Call 0x3EB2B00
	111 Move X21, X1
	112 Move X20, X0
	113 Call 0x3EB2AE0
	114 Move W1, W21
	115 Move X20, X0
	116 Move W8, 1
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X0, X20
	119 Call 0x3EB2AD0
	120 Move X21, [X0]
	121 Call 0x3EB2AE0
	122 Move [X19+88], W31
	123 Compare X21, 0
	124 JumpIfEqual {8}
	125 Move X0, X21
	126 Call 0x1C17F18
	127 Move [X19+88], W31
	128 Move [X19+88], W31
	129 Compare X21, 0
	130 JumpIfNotEqual {134}
	131 Move X20, X0
	132 Move X0, X20
	133 Call 0x1D2D690
	134 Move X0, X21
	135 Call 0x1C17F18
	136 Call 0x1991590

Method: System.Void RegisterNetworkCallbacks()

Disassembly:
	0x01EA0728 LDR X0, [X0 + 0x930]
	0x01EA072C BL 0x1C16CF4
	0x01EA0730 ADRP X0, 0x225E000
	0x01EA0734 LDR X0, [X0 + 0x938]
	0x01EA0738 BL 0x1C16CF4
	0x01EA073C ADRP X0, 0x225E000
	0x01EA0740 LDR X0, [X0 + 0x940]
	0x01EA0744 BL 0x1C16CF4
	0x01EA0748 ADRP X0, 0x225E000
	0x01EA074C LDR X0, [X0 + 0x948]
	0x01EA0750 BL 0x1C16CF4
	0x01EA0754 ADRP X0, 0x225E000
	0x01EA0758 LDR X0, [X0 + 0x950]
	0x01EA075C BL 0x1C16CF4
	0x01EA0760 ADRP X0, 0x225E000
	0x01EA0764 LDR X0, [X0 + 0x958]
	0x01EA0768 BL 0x1C16CF4
	0x01EA076C ADRP X0, 0x225E000
	0x01EA0770 LDR X0, [X0 + 0x960]
	0x01EA0774 BL 0x1C16CF4
	0x01EA0778 ADRP X0, 0x225E000
	0x01EA077C LDR X0, [X0 + 0x968]
	0x01EA0780 BL 0x1C16CF4
	0x01EA0784 ADRP X0, 0x225C000
	0x01EA0788 LDR X0, [X0 + 0xE80]
	0x01EA078C BL 0x1C16CF4
	0x01EA0790 ADRP X0, 0x225E000
	0x01EA0794 LDR X0, [X0 + 0x970]
	0x01EA0798 BL 0x1C16CF4
	0x01EA079C ADRP X0, 0x225E000
	0x01EA07A0 LDR X0, [X0 + 0x978]
	0x01EA07A4 BL 0x1C16CF4
	0x01EA07A8 ADRP X0, 0x225E000
	0x01EA07AC LDR X0, [X0 + 0x980]
	0x01EA07B0 BL 0x1C16CF4
	0x01EA07B4 ADRP X0, 0x225E000
	0x01EA07B8 LDR X0, [X0 + 0x988]
	0x01EA07BC BL 0x1C16CF4
	0x01EA07C0 ADRP X0, 0x225E000
	0x01EA07C4 LDR X0, [X0 + 0x478]
	0x01EA07C8 BL 0x1C16CF4
	0x01EA07CC ADRP X0, 0x2257000
	0x01EA07D0 LDR X0, [X0 + 0xBF0]
	0x01EA07D4 BL 0x1C16CF4
	0x01EA07D8 ADRP X0, 0x225E000
	0x01EA07DC LDR X0, [X0 + 0x990]
	0x01EA07E0 BL 0x1C16CF4
	0x01EA07E4 ADRP X0, 0x225E000
	0x01EA07E8 LDR X0, [X0 + 0x998]
	0x01EA07EC BL 0x1C16CF4
	0x01EA07F0 ADRP X0, 0x225E000
	0x01EA07F4 LDR X0, [X0 + 0x9A0]
	0x01EA07F8 BL 0x1C16CF4
	0x01EA07FC ADRP X0, 0x2253000
	0x01EA0800 LDR X0, [X0 + 0x598]
	0x01EA0804 BL 0x1C16CF4
	0x01EA0808 ADRP X0, 0x225E000
	0x01EA080C LDR X0, [X0 + 0x918]
	0x01EA0810 BL 0x1C16CF4
	0x01EA0814 ADRP X0, 0x225E000
	0x01EA0818 LDR X0, [X0 + 0x9A8]
	0x01EA081C BL 0x1C16CF4
	0x01EA0820 ADRP X0, 0x225E000
	0x01EA0824 LDR X0, [X0 + 0x910]
	0x01EA0828 BL 0x1C16CF4
	0x01EA082C ADRP X0, 0x225E000
	0x01EA0830 LDR X0, [X0 + 0x9B0]
	0x01EA0834 BL 0x1C16CF4
	0x01EA0838 ADRP X0, 0x225E000
	0x01EA083C LDR X0, [X0 + 0x798]
	0x01EA0840 BL 0x1C16CF4
	0x01EA0844 ADRP X0, 0x225E000
	0x01EA0848 LDR X0, [X0 + 0x9B8]
	0x01EA084C BL 0x1C16CF4
	0x01EA0850 ADRP X0, 0x2255000
	0x01EA0854 LDR X0, [X0 + 0x278]
	0x01EA0858 BL 0x1C16CF4
	0x01EA085C ADRP X0, 0x225E000
	0x01EA0860 LDR X0, [X0 + 0x908]
	0x01EA0864 BL 0x1C16CF4
	0x01EA0868 ADRP X0, 0x225E000
	0x01EA086C LDR X0, [X0 + 0x6F0]
	0x01EA0870 BL 0x1C16CF4
	0x01EA0874 ADRP X0, 0x225E000
	0x01EA0878 LDR X0, [X0 + 0x900]
	0x01EA087C BL 0x1C16CF4
	0x01EA0880 ADRP X0, 0x225E000
	0x01EA0884 LDR X0, [X0 + 0x9C0]
	0x01EA0888 BL 0x1C16CF4
	0x01EA088C ADRP X0, 0x225E000
	0x01EA0890 LDR X0, [X0 + 0x9C8]
	0x01EA0894 BL 0x1C16CF4
	0x01EA0898 MOVZ W8, 0x1
	0x01EA089C STRB W8, [X26 + 0x320]
	0x01EA08A0 LDR X0, [X24]
	0x01EA08A4 MOVI V0.2D, 0x0
	0x01EA08A8 STR W31, [X31 + 0x3C0]
	0x01EA08AC STR V0, [X31 + 0x41]
	0x01EA08B0 STP V0, V0, [X31 + 0x3F0]
	0x01EA08B4 STP V0, V0, [X31 + 0x3D0]
	0x01EA08B8 STP V0, V0, [X31 + 0x3A0]
	0x01EA08BC STR V0, [X31 + 0x39]
	0x01EA08C0 BL 0x1C16F10
	0x01EA08C4 LDR X1, [X21]
	0x01EA08C8 MOV X21, X0
	0x01EA08CC BL 0x2679EB8
	0x01EA08D0 STR X21, [X19 + 0x80]
	0x01EA08D4 LDR X8, [X20 + 0xA0]
	0x01EA08D8 STRB W31, [X19 + 0x88]
	0x01EA08DC STR X8, [X19 + 0xE8]
	0x01EA08E0 LDR X0, [X23]
	0x01EA08E4 BL 0x1C16F10
	0x01EA08E8 LDR X1, [X22]
	0x01EA08EC MOV X21, X0
	0x01EA08F0 BL 0x24F1248
	0x01EA08F4 STR X21, [X19 + 0x90]
	0x01EA08F8 BL 0x1EA1174
	0x01EA08FC MOV X21, X20
	0x01EA0900 LDRB W8, [X21 + 0x80]!
	0x01EA0904 CBZ W8, 0x1EA0F94
	0x01EA0908 LDRB W8, [X20 + 0x38]
	0x01EA090C CBNZ W8, 0x1EA0920
	0x01EA0910 MOV X0, X20
	0x01EA0914 MOV X1, X31
	0x01EA0918 BL 0x1EB92D0
	0x01EA091C TBZ X0, 0x0, 0x1EA0FDC
	0x01EA0920 LDR X8, [X20 + 0x98]
	0x01EA0924 CBZ X8, 0x1EA0FB4
	0x01EA0928 LDR X8, [X19 + 0x68]
	0x01EA092C CBNZ X8, 0x1EA0958
	0x01EA0930 ADRP X8, 0x225E000
	0x01EA0934 LDR X8, [X8 + 0x930]
	0x01EA0938 LDR X0, [X8]
	0x01EA093C BL 0x1C16F10
	0x01EA0940 ADRP X8, 0x225E000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x253A000
	012 Move X23, 0x2254000
	013 Move W8, [X20+813]
	014 Move X23, [X23+1432]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {37}
	020 Move X0, 0x225F000
	021 Move X0, [X0+2128]
	022 Call 0x1C17CF4
	023 Move X0, 0x2258000
	024 Move X0, [X0+3856]
	025 Call 0x1C17CF4
	026 Move X0, 0x225F000
	027 Move X0, [X0+1904]
	028 Call 0x1C17CF4
	029 Move X0, 0x225F000
	030 Move X0, [X0+2136]
	031 Call 0x1C17CF4
	032 Move X0, 0x2254000
	033 Move X0, [X0+1432]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+813], W8
	037 Move X0, [X23]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X19
	043 Move X1, X31
	044 Call Object.op_Implicit, X0
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {153}
	049 Move X0, X19
	050 Move X1, X31
	051 Call Component.get_gameObject, X0
	052 Move X8, [X23]
	053 Move X20, X0
	054 Move W9, [X8+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {59}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 Move X0, X20
	060 Move X1, X31
	061 Call Object.op_Implicit, X0
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {153}
	066 Move X8, [X19+104]
	067 Compare X8, 0
	068 JumpIfEqual {153}
	069 Move W8, [X8+24]
	070 Compare W8, 0
	071 JumpIfNotEqual {153}
	072 Move X0, X19
	073 Move X1, X31
	074 Call Component.get_gameObject, X0
	075 Compare X0, 0
	076 JumpIfEqual {165}
	077 Move X8, 0x225F000
	078 Move X8, [X8+2128]
	079 Move X1, [X8]
	080 Call 0x21E6F08, X0
	081 Compare X0, 0
	082 JumpIfEqual {165}
	083 Move X8, [X0+24]
	084 Move X20, X0
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X26, 0x225F000
	087 Move X27, 0x2258000
	088 Move X26, [X26+2136]
	089 Move X27, [X27+3856]
	090 Move X24, X31
	091 And X8, X8, 0
	092 Add X25, X20, 32
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X21, [X25]
	095 Compare X21, 0
	096 JumpIfEqual {102}
	097 Move X9, [X21]
	098 Move X8, [X26]
	099 Move W11, [X9+304]
	100 Move W10, [X8+304]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X22, X31
	103 Move X9, [X9+200]
	104 Add X9, X9, X10
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 NotImplemented "Instruction CSEL not yet implemented."
	108 Move X0, [X23]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Move X0, X22
	114 Move X1, X31
	115 Call Object.op_Implicit, X0
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {150}
	120 Compare X22, 0
	121 JumpIfEqual {165}
	122 Move X0, X22
	123 Move X1, X31
	124 Call Behaviour.get_enabled, X0
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {150}
	129 Move X0, [X27]
	130 Move W1, 1
	131 Call 0x1C17D6C
	132 Compare X0, 0
	133 JumpIfEqual {165}
	134 Move X22, X0
	135 Compare X21, 0
	136 JumpIfEqual {143}
	137 Move X8, [X22]
	138 Move X0, X21
	139 Move X1, [X8+64]
	140 Call 0x1C17E00
	141 Compare X0, 0
	142 JumpIfEqual {166}
	143 Move W8, [X22+24]
	144 Compare W8, 0
	145 JumpIfEqual {164}
	146 Move X0, X19
	147 Move X1, X22
	148 Move [X22+32], X21
	149 Call NetworkRunner.AddCallbacks, X0, X1
	150 Move W8, [X20+24]
	151 Add X24, X24, 1
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X20, [X31+64]
	154 Move X19, [X31+72]
	155 Move X22, [X31+48]
	156 Move X21, [X31+56]
	157 Move X24, [X31+32]
	158 Move X23, [X31+40]
	159 Move X26, [X31+16]
	160 Move X25, [X31+24]
	161 Move X30, [X31+80]
	162 Move X27, [X31+88]
	163 Return 
	164 Call 0x1C17F28
	165 Call 0x1C17F20
	166 Call 0x1C17F44
	167 Move X1, X31
	168 Call 0x1C17DEC

Method: System.Void SendReliableDataToPlayer(Fusion.PlayerRef player, Fusion.Sockets.ReliableKey key, System.Byte[] data)

Disassembly:
	0x01EA3BB8 BL 0x1EA37F8
	0x01EA3BBC TBZ X0, 0x0, 0x1EA3BE0
	0x01EA3BC0 LDR X8, [X21 + 0x50]
	0x01EA3BC4 CBZ X8, 0x1EA3BEC
	0x01EA3BC8 LDR X0, [X8 + 0xA8]
	0x01EA3BCC CBZ X0, 0x1EA3BEC
	0x01EA3BD0 MOV X1, X25
	0x01EA3BD4 MOV W2, W20
	0x01EA3BD8 MOV X3, X31
	0x01EA3BDC BL 0x1ED625C
	0x01EA3BE0 LDR X0, [X21 + 0x70]
	0x01EA3BE4 ADD W24, W24, 0x1
	0x01EA3BE8 CBNZ X0, 0x1EA3B98
	0x01EA3BEC BL 0x1C16F20
	0x01EA3BF0 ADRP X8, 0x225B000
	0x01EA3BF4 LDR X8, [X8 + 0xAE0]
	0x01EA3BF8 MOV W1, W22
	0x01EA3BFC MOV W2, W23
	0x01EA3C00 LDR X3, [X8]
	0x01EA3C04 BL 0x30185B4
	0x01EA3C08 CBZ X19, 0x1EA3BEC
	0x01EA3C0C LDR X8, [X19 + 0x38]
	0x01EA3C10 CBZ X8, 0x1EA3C1C
	0x01EA3C14 STR X31, [X8 + 0xB8]
	0x01EA3C18 STR X31, [X19 + 0x38]
	0x01EA3C1C LDP X20, X19, [X31 + 0x40]
	0x01EA3C20 LDP X22, X21, [X31 + 0x30]
	0x01EA3C24 LDP X24, X23, [X31 + 0x20]
	0x01EA3C28 LDP X26, X25, [X31 + 0x10]
	0x01EA3C2C LDP X30, X27, [X31], #0x50
	0x01EA3C30 RET
	0x01EA3C34 BL 0x1C16F28
	0x01EA3C38 B 0x1EA1340
	0x01EA3C3C B 0x1EA3C40
	0x01EA3C40 STP X30, X21, [X31 - 0x20]!
	0x01EA3C44 STP X20, X19, [X31 + 0x10]
	0x01EA3C48 ADRP X21, 0x2536000
	0x01EA3C4C LDRB W8, [X21 + 0x337]
	0x01EA3C50 MOV X20, X1
	0x01EA3C54 MOV X19, X0
	0x01EA3C58 TBNZ X8, 0x0, 0x1EA3C70
	0x01EA3C5C ADRP X0, 0x225B000
	0x01EA3C60 LDR X0, [X0 + 0x838]
	0x01EA3C64 BL 0x1C16CF4
	0x01EA3C68 MOVZ W8, 0x1
	0x01EA3C6C STRB W8, [X21 + 0x337]
	0x01EA3C70 CBZ X20, 0x1EA3D1C
	0x01EA3C74 STP X31, X31, [X20 + 0x38]
	0x01EA3C78 LDR X0, [X19 + 0x60]
	0x01EA3C7C CBZ X0, 0x1EA3D20
	0x01EA3C80 ADRP X21, 0x225B000
	0x01EA3C84 LDR X21, [X21 + 0x838]
	0x01EA3C88 MOV X1, X20
	0x01EA3C8C MOV X2, X31
	0x01EA3C90 BL 0x1E7C788
	0x01EA3C94 LDR X1, [X21]
	0x01EA3C98 MOV X0, X20
	0x01EA3C9C BL 0x1C16E00
	0x01EA3CA0 CBZ X0, 0x1EA3CE8
	0x01EA3CA4 LDR X8, [X0]
	0x01EA3CA8 LDR X1, [X21]
	0x01EA3CAC MOV X20, X0
	0x01EA3CB0 LDRH W9, [X8 + 0x12E]
	0x01EA3CB4 CBZ X9, 0x1EA3CD8
	0x01EA3CB8 LDR X10, [X8 + 0xB0]
	0x01EA3CBC ADD X10, X10, 0x8
	0x01EA3CC0 LDUR X11, [X10 - 0x8]
	0x01EA3CC4 CMP X11, X1
	0x01EA3CC8 B.EQ 0x1EA3CF4
	0x01EA3CCC SUBS X9, X9, 0x1
	0x01EA3CD0 ADD X10, X10, 0x10
	0x01EA3CD4 B.NE 0x1EA3CC0
	0x01EA3CD8 MOV X0, X20
	0x01EA3CDC MOV W2, W31
	0x01EA3CE0 BL 0x1C5C788
	0x01EA3CE4 B 0x1EA3D00
	0x01EA3CE8 LDP X20, X19, [X31 + 0x10]
	0x01EA3CEC LDP X30, X21, [X31], #0x20
	0x01EA3CF0 RET
	0x01EA3CF4 LDRSW X9, [X10]
	0x01EA3CF8 ADD X8, X8, X9, 0x4, LSL
	0x01EA3CFC ADD X0, X8, 0x138
	0x01EA3D00 LDP X4, X3, [X0]
	0x01EA3D04 MOV X0, X20
	0x01EA3D08 MOV X1, X19
	0x01EA3D0C LDP X20, X19, [X31 + 0x10]
	0x01EA3D10 MOV W2, W31
	0x01EA3D14 LDP X30, X21, [X31], #0x20
	0x01EA3D18 BR X4
	0x01EA3D1C BL 0x1C16F20
	0x01EA3D20 ADRP X0, 0x225B000
	0x01EA3D24 LDR X0, [X0 + 0xA18]
	0x01EA3D28 BL 0x1C16D08
	0x01EA3D2C BL 0x1C16F10
	0x01EA3D30 MOV X19, X0
	0x01EA3D34 ADRP X0, 0x225B000
	0x01EA3D38 LDR X0, [X0 + 0xAE8]
	0x01EA3D3C BL 0x1C16D08
	0x01EA3D40 MOV X1, X0
	0x01EA3D44 MOV X0, X19
	0x01EA3D48 MOV X2, X31
	0x01EA3D4C BL 0x33803F4
	0x01EA3D50 ADRP X0, 0x225B000
	0x01EA3D54 LDR X0, [X0 + 0xAF0]
	0x01EA3D58 BL 0x1C16D08
	0x01EA3D5C MOV X1, X0
	0x01EA3D60 MOV X0, X19
	0x01EA3D64 BL 0x1C16DEC
	0x01EA3D68 STR X30, [X31 - 0x30]!
	0x01EA3D6C STP X22, X21, [X31 + 0x10]
	0x01EA3D70 STP X20, X19, [X31 + 0x20]
	0x01EA3D74 CBZ X1, 0x1EA3DE0
	0x01EA3D78 LDR W9, [X1 + 0x60]
	0x01EA3D7C LDR X8, [X1 + 0x78]
	0x01EA3D80 MOV X19, X1
	0x01EA3D84 AND W9, W9, 0xFF7FFFFF
	0x01EA3D88 STR W9, [X1 + 0x60]
	0x01EA3D8C CBZ X8, 0x1EA3DE0
	0x01EA3D90 MOV X20, X0
	0x01EA3D94 MOV X22, X31
	0x01EA3D98 AND W21, W2, 0x1
	0x01EA3D9C LDR W9, [X8 + 0x18]
	0x01EA3DA0 CMP W22, W9
	0x01EA3DA4 B.GE 0x1EA3DE4
	0x01EA3DA8 CMP W22, W9
	0x01EA3DAC B.CS 0x1EA3DF4
	0x01EA3DB0 ADD X8, X8, X22, 0x3, LSL
	0x01EA3DB4 LDR X0, [X8 + 0x20]
	0x01EA3DB8 CBZ X0, 0x1EA3DE0
	0x01EA3DBC LDR X8, [X0]
	0x01EA3DC0 MOV X1, X20
	0x01EA3DC4 MOV W2, W21
	0x01EA3DC8 LDR X9, [X8 + 0x228]
	0x01EA3DCC LDR X3, [X8 + 0x230]
	0x01EA3DD0 BLR X9
	0x01EA3DD4 LDR X8, [X19 + 0x78]
	0x01EA3DD8 ADD X22, X22, 0x1
	0x01EA3DDC CBNZ X8, 0x1EA3D9C
	0x01EA3DE0 BL 0x1C16F20
	0x01EA3DE4 LDP X20, X19, [X31 + 0x20]
	0x01EA3DE8 LDP X22, X21, [X31 + 0x10]
	0x01EA3DEC LDR X30, [X31], #0x30
	0x01EA3DF0 RET
	0x01EA3DF4 BL 0x1C16F28
	0x01EA3DF8 STR X30, [X31 - 0x30]!
	0x01EA3DFC STP X22, X21, [X31 + 0x10]
	0x01EA3E00 STP X20, X19, [X31 + 0x20]
	0x01EA3E04 CBZ X1, 0x1EA3E68
	0x01EA3E08 LDR X8, [X1 + 0x78]
	0x01EA3E0C MOV X19, X1
	0x01EA3E10 CBZ X8, 0x1EA3E68
	0x01EA3E14 MOV X20, X0
	0x01EA3E18 MOV W22, W31
	0x01EA3E1C LDR W9, [X8 + 0x18]
	0x01EA3E20 CMP W22, W9
	0x01EA3E24 B.GE 0x1EA3E6C
	0x01EA3E28 B.CS 0x1EA3E84
	0x01EA3E2C LDR X0, [X20 + 0x60]
	0x01EA3E30 CBZ X0, 0x1EA3E68
	0x01EA3E34 ADD X8, X8, W22, 0x3, SXTW
	0x01EA3E38 LDR X21, [X8 + 0x20]
	0x01EA3E3C MOV X2, X31
	0x01EA3E40 MOV X1, X21
	0x01EA3E44 BL 0x1E7C788
	0x01EA3E48 CBZ X21, 0x1EA3E68
	0x01EA3E4C MOV X0, X21
	0x01EA3E50 MOV X1, X31
	0x01EA3E54 BL 0x1E74EF8
	0x01EA3E58 STR X31, [X21 + 0x50]
	0x01EA3E5C LDR X8, [X19 + 0x78]
	0x01EA3E60 ADD W22, W22, 0x1
	0x01EA3E64 CBNZ X8, 0x1EA3E1C
	0x01EA3E68 BL 0x1C16F20
	0x01EA3E6C MOV X0, X19
	0x01EA3E70 LDP X20, X19, [X31 + 0x20]
	0x01EA3E74 LDP X22, X21, [X31 + 0x10]
	0x01EA3E78 MOV X1, X31
	0x01EA3E7C LDR X30, [X31], #0x30
	0x01EA3E80 B 0x1E93EB0
	0x01EA3E84 BL 0x1C16F28
	0x01EA3E88 STP X30, X25, [X31 - 0x40]!
	0x01EA3E8C STP X24, X23, [X31 + 0x10]
	0x01EA3E90 STP X22, X21, [X31 + 0x20]
	0x01EA3E94 STP X20, X19, [X31 + 0x30]
	0x01EA3E98 ADRP X24, 0x2536000
	0x01EA3E9C LDRB W8, [X24 + 0x33A]
	0x01EA3EA0 MOV X22, X4
	0x01EA3EA4 MOV W23, W3
	0x01EA3EA8 MOV X21, X2
	0x01EA3EAC MOV X19, X1
	0x01EA3EB0 MOV X20, X0
	0x01EA3EB4 TBNZ X8, 0x0, 0x1EA3EE4
	0x01EA3EB8 ADRP X0, 0x225B000
	0x01EA3EBC LDR X0, [X0 + 0xAF8]
	0x01EA3EC0 BL 0x1C16CF4
	0x01EA3EC4 ADRP X0, 0x225B000
	0x01EA3EC8 LDR X0, [X0 + 0x378]
	0x01EA3ECC BL 0x1C16CF4
	0x01EA3ED0 ADRP X0, 0x2259000

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+144], X30
	003 Move [X31+152], X27
	004 Move [X31+160], X26
	005 Move [X31+168], X25
	006 Move [X31+176], X24
	007 Move [X31+184], X23
	008 Move [X31+192], X22
	009 Move [X31+200], X21
	010 Move [X31+208], X20
	011 Move [X31+216], X19
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X25+40]
	014 Move X24, 0x2537000
	015 Move X19, X4
	016 Move X20, X3
	017 Move [X31+136], X8
	018 Move W8, [X24+814]
	019 Move X21, X2
	020 Move X23, X1
	021 Move X22, X0
	022 Move [X31+8], W23
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {41}
	027 Move X0, 0x225C000
	028 Move X0, [X0+2704]
	029 Call 0x1C17CF4
	030 Move X0, 0x2254000
	031 Move X0, [X0+3832]
	032 Call 0x1C17CF4
	033 Move X0, 0x2254000
	034 Move X0, [X0+3840]
	035 Call 0x1C17CF4
	036 Move X0, 0x2254000
	037 Move X0, [X0+3648]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X24+814], W8
	041 Move [X31], X31
	042 Move X0, [X22+80]
	043 Compare X0, 0
	044 JumpIfEqual {227}
	045 Move X26, 0x2254000
	046 Move X26, [X26+3648]
	047 Move X1, X31
	048 Call Simulation.get_IsPlayer, X0
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {99}
	053 Move X0, [X22+80]
	054 Compare X0, 0
	055 JumpIfEqual {227}
	056 Move X8, [X0]
	057 Move X9, [X8+616]
	058 Move X1, [X8+624]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X8, [X26]
	061 Move X24, X0
	062 Move W9, [X8+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X8
	066 Call 0x1C17DFC
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X8, [X22+80]
	069 Compare X8, 0
	070 JumpIfEqual {227}
	071 Move X22, [X8+64]
	072 Move [X31+48], X31
	073 Move [X31+56], X31
	074 Move [X31+72], W31
	075 Move [X31+64], X31
	076 Compare X22, 0
	077 JumpIfEqual {227}
	078 Move V0, [X31+3]
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 Move X10, 0x225C000
	081 And X23, X23, 0
	082 Move [X31+1], V0
	083 Move [X31+28], V1
	084 Move X8, [X22]
	085 Move X10, [X10+2704]
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Move X1, [X10]
	088 Compare X9, 0
	089 JumpIfEqual {96}
	090 Move X10, [X8+176]
	091 Add X10, X10, 8
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Subtract X9, X9, 1
	095 Add X10, X10, 16
	096 Move W2, 19
	097 Move X0, X22
	098 Call 0x1C5D788
	099 Move X0, [X22+80]
	100 Compare X0, 0
	101 JumpIfEqual {150}
	102 Move X1, X31
	103 Call Simulation.get_IsServer, X0
	104 Move X24, [X22+80]
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {151}
	109 Compare X24, 0
	110 JumpIfEqual {227}
	111 Move X27, 0x2537000
	112 Move W8, [X27+956]
	113 Compare W8, 0
	114 JumpIfNotEqual {123}
	115 Move X0, 0x2256000
	116 Move X0, [X0+32]
	117 Call 0x1C17CF4
	118 Move X0, 0x2252000
	119 Move X0, [X0+1136]
	120 Call 0x1C17CF4
	121 Move W8, 1
	122 Move [X27+956], W8
	123 Move [X31+48], X31
	124 Move X0, [X24+184]
	125 Compare X0, 0
	126 JumpIfEqual {227}
	127 Move X8, 0x2256000
	128 Move X8, [X8+32]
	129 And X1, X23, 0
	130 Add X2, X31, 48
	131 Move X3, [X8]
	132 Call Dictionary`2<PlayerRef, Object>.TryGetValue, X0, X1, X2
	133 Move TEMP, X0
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfNotEqual {164}
	137 Move X0, [X31+48]
	138 Compare X0, 0
	139 JumpIfEqual {227}
	140 Move X1, X31
	141 Call SimulationConnection.get_ConnectionIndex, X0
	142 Move X8, 0x2252000
	143 Move X8, [X8+1136]
	144 Move W1, W0
	145 Add X0, X31, 80
	146 Move [X31+80], X31
	147 Move X2, [X8]
	148 Call Nullable`1<Int32>..ctor, X0, X1
	149 Move X8, [X31+80]
	150 Move X24, X31
	151 Move X0, [X26]
	152 Move W8, [X0+224]
	153 Compare W8, 0
	154 JumpIfNotEqual {156}
	155 Call 0x1C17DFC
	156 Add X0, X31, 8
	157 Move X1, X31
	158 Call PlayerRef.get_AsIndex, X0
	159 Compare X24, 0
	160 JumpIfEqual {227}
	161 Move W2, W0
	162 Move X0, X24
	163 Move W1, W31
	164 Move X8, X31
	165 And W31, W8, 255
	166 Move [X31], X8
	167 Move X8, 0x2254000
	168 Move X22, [X22+80]
	169 Move X8, [X8+3840]
	170 Add X0, X31, 0
	171 Move X1, [X8]
	172 Call Nullable`1<Int32>.get_Value, X0
	173 Move X8, [X26]
	174 Move W23, W0
	175 Move W9, [X8+224]
	176 Compare W9, 0
	177 JumpIfNotEqual {180}
	178 Move X0, X8
	179 Call 0x1C17DFC
	180 Add X0, X31, 8
	181 Move X1, X31
	182 Call PlayerRef.get_AsIndex, X0
	183 Compare X22, 0
	184 JumpIfEqual {227}
	185 Move W2, W0
	186 Move X0, X22
	187 Move W1, W23
	188 Move X3, X21
	189 Move X4, X20
	190 Move X5, X19
	191 Move X6, X31
	192 Call Simulation.SendReliableData, X0, X1, X2, X3, X4
	193 Move W9, [X10]
	194 Add W9, W9, 19
	195 Add X8, X8, W9
	196 Add X0, X8, 312
	197 Move V0, [X31+1]
	198 NotImplemented "Instruction LDUR not yet implemented."
	199 Move X8, [X0]
	200 Move [X31+108], X21
	201 Move [X31+116], X20
	202 Move [X31+5], V0
	203 Move [X31+92], V1
	204 Move [X31+124], W31
	205 Move X5, [X0+8]
	206 Add X2, X31, 80
	207 Move W3, 1
	208 Move X0, X22
	209 Move X1, X23
	210 Move X4, X19
	211 NotImplemented "Instruction BLR not yet implemented."
	212 Move X8, [X25+40]
	213 Move X9, [X31+136]
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move X20, [X31+208]
	216 Move X19, [X31+216]
	217 Move X22, [X31+192]
	218 Move X21, [X31+200]
	219 Move X24, [X31+176]
	220 Move X23, [X31+184]
	221 Move X26, [X31+160]
	222 Move X25, [X31+168]
	223 Move X30, [X31+144]
	224 Move X27, [X31+152]
	225 Add X31, X31, 224
	226 Return 
	227 Call 0x1C17F20
	228 Call 0x3EB2B20

Method: System.Void SendReliableDataToServer(Fusion.Sockets.ReliableKey key, System.Byte[] data)

Disassembly:
	0x01EA3ED4 LDR X0, [X0 + 0xE80]
	0x01EA3ED8 BL 0x1C16CF4
	0x01EA3EDC MOVZ W8, 0x1
	0x01EA3EE0 STRB W8, [X24 + 0x33A]
	0x01EA3EE4 CBZ X19, 0x1EA4090
	0x01EA3EE8 ADRP X8, 0x225B000
	0x01EA3EEC LDR X8, [X8 + 0x378]
	0x01EA3EF0 ADD X24, X19, 0x64
	0x01EA3EF4 LDR X0, [X8]
	0x01EA3EF8 LDR W8, [X0 + 0xE0]
	0x01EA3EFC CBNZ W8, 0x1EA3F04
	0x01EA3F00 BL 0x1C16DFC
	0x01EA3F04 MOV X0, X24
	0x01EA3F08 MOV X1, X31
	0x01EA3F0C BL 0x1E96160
	0x01EA3F10 TBZ X0, 0x0, 0x1EA40C4
	0x01EA3F14 TBZ X23, 0x0, 0x1EA3F38
	0x01EA3F18 LDR X8, [X20 + 0x38]
	0x01EA3F1C CBZ X8, 0x1EA3F38
	0x01EA3F20 LDR X9, [X8 + 0x18]
	0x01EA3F24 LDR X0, [X8 + 0x40]
	0x01EA3F28 LDR X3, [X8 + 0x28]
	0x01EA3F2C MOV X1, X20
	0x01EA3F30 MOV X2, X19
	0x01EA3F34 BLR X9
	0x01EA3F38 MOV X0, X20
	0x01EA3F3C MOV X1, X19
	0x01EA3F40 MOV X2, X31
	0x01EA3F44 MOV X3, X31
	0x01EA3F48 MOV W4, W31
	0x01EA3F4C BL 0x1EA4148
	0x01EA3F50 LDR X0, [X20 + 0xC8]
	0x01EA3F54 CBZ X0, 0x1EA408C
	0x01EA3F58 ADRP X8, 0x225B000
	0x01EA3F5C LDR X8, [X8 + 0xAF8]
	0x01EA3F60 LDUR X1, [X19 + 0x64]
	0x01EA3F64 MOV X2, X19
	0x01EA3F68 LDR X3, [X8]
	0x01EA3F6C BL 0x2A835AC
	0x01EA3F70 TBZ X23, 0x0, 0x1EA404C
	0x01EA3F74 LDR X23, [X20 + 0x50]
	0x01EA3F78 CBZ X23, 0x1EA408C
	0x01EA3F7C MOV X0, X23
	0x01EA3F80 MOV X1, X31
	0x01EA3F84 BL 0x1EC4400
	0x01EA3F88 LDUR X24, [X19 + 0x64]
	0x01EA3F8C MOV X25, X0
	0x01EA3F90 MOV X0, X19
	0x01EA3F94 MOV X1, X31
	0x01EA3F98 BL 0x1E93EF4
	0x01EA3F9C MOV W3, W0
	0x01EA3FA0 AND X1, X25, 0x0
	0x01EA3FA4 MOV X0, X23
	0x01EA3FA8 MOV X2, X24
	0x01EA3FAC MOV W4, W31
	0x01EA3FB0 MOV X5, X31
	0x01EA3FB4 MOV X6, X31
	0x01EA3FB8 MOV X7, X31
	0x01EA3FBC BL 0x1EC98AC
	0x01EA3FC0 MOV X1, X0
	0x01EA3FC4 AND X5, X22, 0xFFFF
	0x01EA3FC8 MOVZ W4, 0x1
	0x01EA3FCC MOV X0, X20
	0x01EA3FD0 MOV X2, X19
	0x01EA3FD4 MOV X3, X21
	0x01EA3FD8 BL 0x1EA44B8
	0x01EA3FDC ADRP X8, 0x2259000
	0x01EA3FE0 LDR X8, [X8 + 0xE80]
	0x01EA3FE4 LDR X0, [X8]
	0x01EA3FE8 LDR W8, [X0 + 0xE0]
	0x01EA3FEC CBNZ W8, 0x1EA3FF4
	0x01EA3FF0 BL 0x1C16DFC
	0x01EA3FF4 LDR W0, [X19 + 0x60]
	0x01EA3FF8 MOVZ W1, 0x1
	0x01EA3FFC MOV X2, X31
	0x01EA4000 BL 0x1E93D90
	0x01EA4004 TBZ X0, 0x0, 0x1EA4078
	0x01EA4008 MOVZ W2, 0x1
	0x01EA400C MOV X0, X20
	0x01EA4010 MOV X1, X19
	0x01EA4014 BL 0x1EA4A60
	0x01EA4018 MOVZ W2, 0x1
	0x01EA401C MOV X0, X20
	0x01EA4020 MOV X1, X19
	0x01EA4024 MOV X3, X31
	0x01EA4028 BL 0x1EA4B28
	0x01EA402C MOV X1, X19
	0x01EA4030 BL 0x1EA4DB8
	0x01EA4034 MOV X1, X19
	0x01EA4038 LDP X20, X19, [X31 + 0x30]
	0x01EA403C LDP X22, X21, [X31 + 0x20]
	0x01EA4040 LDP X24, X23, [X31 + 0x10]
	0x01EA4044 LDP X30, X25, [X31], #0x40
	0x01EA4048 B 0x1EA4E54
	0x01EA404C MOV X0, X19
	0x01EA4050 MOV X1, X31
	0x01EA4054 BL 0x3C32ECC
	0x01EA4058 CBZ X0, 0x1EA408C
	0x01EA405C LDP X20, X19, [X31 + 0x30]
	0x01EA4060 LDP X22, X21, [X31 + 0x20]
	0x01EA4064 LDP X24, X23, [X31 + 0x10]
	0x01EA4068 MOV W1, W31
	0x01EA406C MOV X2, X31
	0x01EA4070 LDP X30, X25, [X31], #0x40
	0x01EA4074 B 0x3C357B4
	0x01EA4078 LDP X20, X19, [X31 + 0x30]
	0x01EA407C LDP X22, X21, [X31 + 0x20]
	0x01EA4080 LDP X24, X23, [X31 + 0x10]
	0x01EA4084 LDP X30, X25, [X31], #0x40
	0x01EA4088 RET
	0x01EA408C BL 0x1C16F20
	0x01EA4090 ADRP X0, 0x2254000
	0x01EA4094 LDR X0, [X0 + 0x528]
	0x01EA4098 BL 0x1C16D08
	0x01EA409C BL 0x1C16F10
	0x01EA40A0 MOV X19, X0
	0x01EA40A4 ADRP X0, 0x225A000
	0x01EA40A8 LDR X0, [X0 + 0xB00]
	0x01EA40AC BL 0x1C16D08
	0x01EA40B0 MOV X1, X0

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+144], X30
	003 Move [X31+160], X24
	004 Move [X31+168], X23
	005 Move [X31+176], X22
	006 Move [X31+184], X21
	007 Move [X31+192], X20
	008 Move [X31+200], X19
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X24+40]
	011 Move X23, 0x2537000
	012 Move X19, X3
	013 Move X20, X2
	014 Move [X31+136], X8
	015 Move W8, [X23+815]
	016 Move X21, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x225C000
	023 Move X0, [X0+2704]
	024 Call 0x1C17CF4
	025 Move X0, 0x2254000
	026 Move X0, [X0+3648]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+815], W8
	030 Move [X31+8], W31
	031 Move X0, [X22+80]
	032 Compare X0, 0
	033 JumpIfEqual {134}
	034 Move X1, X31
	035 Call Simulation.get_IsClient, X0
	036 Move X22, [X22+80]
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {64}
	041 Move X8, 0x2254000
	042 Move X8, [X8+3648]
	043 Move X0, [X8]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X31
	049 Call PlayerRef.get_None
	050 Move [X31+8], W0
	051 Add X0, X31, 8
	052 Move X1, X31
	053 Call PlayerRef.get_AsIndex, X0
	054 Compare X22, 0
	055 JumpIfEqual {134}
	056 Move W2, W0
	057 Move X0, X22
	058 Move W1, W31
	059 Move X3, X21
	060 Move X4, X20
	061 Move X5, X19
	062 Move X6, X31
	063 Call Simulation.SendReliableData, X0, X1, X2, X3, X4
	064 Compare X22, 0
	065 JumpIfEqual {134}
	066 Move X8, 0x2254000
	067 Move X8, [X8+3648]
	068 Move X22, [X22+64]
	069 Move X0, [X8]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X0, X31
	075 Call PlayerRef.get_None
	076 Move [X31+48], X31
	077 Move [X31+56], X31
	078 Move [X31+72], W31
	079 Move [X31+64], X31
	080 Compare X22, 0
	081 JumpIfEqual {134}
	082 Move V0, [X31+3]
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 Move X10, 0x225C000
	085 And X23, X0, 0
	086 Move [X31+1], V0
	087 Move [X31+28], V1
	088 Move X8, [X22]
	089 Move X10, [X10+2704]
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Move X1, [X10]
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move W2, 19
	101 Move X0, X22
	102 Call 0x1C5D788
	103 Move W9, [X10]
	104 Add W9, W9, 19
	105 Add X8, X8, W9
	106 Add X0, X8, 312
	107 Move V0, [X31+1]
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 Move X8, [X0]
	110 Move [X31+108], X21
	111 Move [X31+116], X20
	112 Move [X31+5], V0
	113 Move [X31+92], V1
	114 Move [X31+124], W31
	115 Move X5, [X0+8]
	116 Add X2, X31, 80
	117 Move W3, 1
	118 Move X0, X22
	119 Move X1, X23
	120 Move X4, X19
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move X8, [X24+40]
	123 Move X9, [X31+136]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X20, [X31+192]
	126 Move X19, [X31+200]
	127 Move X22, [X31+176]
	128 Move X21, [X31+184]
	129 Move X24, [X31+160]
	130 Move X23, [X31+168]
	131 Move X30, [X31+144]
	132 Add X31, X31, 208
	133 Return 
	134 Call 0x1C17F20
	135 Call 0x3EB2B20

Method: System.Void SetPlayerAlwaysInterested(Fusion.PlayerRef player, Fusion.NetworkObject networkObject, System.Boolean alwaysInterested)

Disassembly:
	0x01EA40B4 MOV X0, X19
	0x01EA40B8 MOV X2, X31
	0x01EA40BC BL 0x330E100
	0x01EA40C0 B 0x1EA4108
	0x01EA40C4 ADRP X0, 0x2257000
	0x01EA40C8 LDR X0, [X0 + 0x578]
	0x01EA40CC BL 0x1C16D08
	0x01EA40D0 BL 0x1C16F10
	0x01EA40D4 MOV X19, X0
	0x01EA40D8 ADRP X0, 0x225A000
	0x01EA40DC LDR X0, [X0 + 0xB08]
	0x01EA40E0 BL 0x1C16D08
	0x01EA40E4 MOV X20, X0
	0x01EA40E8 ADRP X0, 0x225A000
	0x01EA40EC LDR X0, [X0 + 0xB00]
	0x01EA40F0 BL 0x1C16D08
	0x01EA40F4 MOV X2, X0
	0x01EA40F8 MOV X0, X19
	0x01EA40FC MOV X1, X20
	0x01EA4100 MOV X3, X31
	0x01EA4104 BL 0x330E16C
	0x01EA4108 ADRP X0, 0x225A000
	0x01EA410C LDR X0, [X0 + 0xB10]
	0x01EA4110 BL 0x1C16D08
	0x01EA4114 MOV X1, X0
	0x01EA4118 MOV X0, X19
	0x01EA411C BL 0x1C16DEC
	0x01EA4120 LDR X9, [X0 + 0x38]
	0x01EA4124 CBZ X9, 0x1EA4144
	0x01EA4128 MOV X8, X0
	0x01EA412C LDR X4, [X9 + 0x18]
	0x01EA4130 LDR X0, [X9 + 0x40]
	0x01EA4134 LDR X3, [X9 + 0x28]
	0x01EA4138 MOV X2, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X1
	007 Move X1, X2
	008 Move W19, W3
	009 Move X21, X2
	010 Move X22, X0
	011 Call NetworkRunner.Exists, X0, X1
	012 Move TEMP, X0
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfNotEqual {43}
	016 Compare X21, 0
	017 JumpIfEqual {49}
	018 Move X0, X21
	019 Move X1, X31
	020 Call NetworkObject.get_HasStateAuthority, X0
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {43}
	025 Move X22, [X22+80]
	026 Move X0, X21
	027 Move X1, X31
	028 Call NetworkObject.op_Implicit, X0
	029 Compare X22, 0
	030 JumpIfEqual {49}
	031 And X1, X20, 0
	032 And X2, X0, 0
	033 And W3, W19, 1
	034 Move X0, X22
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X4, X31
	040 Move X30, [X31+48]
	041 Call Simulation.SetPlayerAlwaysInterested, X0, X1, X2, X3
	042 Return 
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Return 
	049 Call 0x1C17F20

Method: System.Nullable`1<T> GetInputForPlayer(Fusion.PlayerRef player)

Disassembly:
	0x0222C128 LDR X8, [X19 + 0x38]
	0x0222C12C MOV X0, X24
	0x0222C130 LDR X1, [X8 + 0x10]
	0x0222C134 LDR X8, [X1]
	0x0222C138 BLR X8
	0x0222C13C TBZ X0, 0x0, 0x222C190
	0x0222C140 LDR X8, [X19 + 0x38]
	0x0222C144 SUB X3, X29, 0x20
	0x0222C148 MOV X2, X24
	0x0222C14C MOV X4, X22
	0x0222C150 LDR X1, [X8 + 0x28]
	0x0222C154 LDR X0, [X1]
	0x0222C158 STUR X22, [X29 - 0x20]
	0x0222C15C LDR X8, [X1 + 0x10]
	0x0222C160 BLR X8
	0x0222C164 LDUR X0, [X29 - 0x28]
	0x0222C168 MOV X1, X22
	0x0222C16C MOV X2, X21
	0x0222C170 BL 0x3EB1AC0
	0x0222C174 LDR X8, [X19 + 0x38]
	0x0222C178 LDR X0, [X8 + 0x30]
	0x0222C17C LDRB W8, [X0 + 0x135]
	0x0222C180 TBNZ X8, 0x0, 0x222C188
	0x0222C184 BL 0x1C5C684
	0x0222C188 MOVZ W0, 0x1
	0x0222C18C B 0x222C1A4
	0x0222C190 LDUR X0, [X29 - 0x28]
	0x0222C194 MOV W1, W31
	0x0222C198 MOV X2, X21
	0x0222C19C BL 0x3EB1B10
	0x0222C1A0 MOV W0, W31
	0x0222C1A4 LDR X8, [X28 + 0x28]
	0x0222C1A8 LDUR X9, [X29 - 0x8]
	0x0222C1AC CMP X8, X9
	0x0222C1B0 B.NE 0x222C1D4
	0x0222C1B4 ADD X31, X29, 0x0
	0x0222C1B8 LDP X20, X19, [X31 + 0x50]
	0x0222C1BC LDP X22, X21, [X31 + 0x40]
	0x0222C1C0 LDP X24, X23, [X31 + 0x30]
	0x0222C1C4 LDP X26, X25, [X31 + 0x20]
	0x0222C1C8 LDP X28, X27, [X31 + 0x10]
	0x0222C1CC LDP X29, X30, [X31], #0x60
	0x0222C1D0 RET
	0x0222C1D4 BL 0x3EB1B20
	0x0222C1D8 STR X30, [X31 - 0x30]!
	0x0222C1DC STP X22, X21, [X31 + 0x10]
	0x0222C1E0 STP X20, X19, [X31 + 0x20]
	0x0222C1E4 LDR X8, [X3 + 0x38]
	0x0222C1E8 MOV X20, X3
	0x0222C1EC MOV X19, X2
	0x0222C1F0 MOV X22, X1
	0x0222C1F4 MOV X21, X0
	0x0222C1F8 CBNZ X8, 0x222C224
	0x0222C1FC ADRP X0, 0x1EF0000
	0x0222C200 LDR X0, [X0 + 0x1B0]
	0x0222C204 BL 0x1C16CF4
	0x0222C208 ADRP X0, 0x1EC7000
	0x0222C20C LDR X0, [X0 + 0x6C0]
	0x0222C210 BL 0x1C16CF4
	0x0222C214 LDR X8, [X20 + 0x38]
	0x0222C218 CBNZ X8, 0x222C224
	0x0222C21C MOV X0, X20
	0x0222C220 BL 0x1C5C6E0
	0x0222C224 CBZ X21, 0x222C344
	0x0222C228 LDR X8, [X20 + 0x38]
	0x0222C22C MOV X0, X21
	0x0222C230 LDR X1, [X8 + 0x8]
	0x0222C234 BL 0x21A3894
	0x0222C238 STR X0, [X19]
	0x0222C23C CBZ X0, 0x222C254
	0x0222C240 MOVZ W0, 0x1
	0x0222C244 LDP X20, X19, [X31 + 0x20]
	0x0222C248 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 432
	002 Move [X31+368], X29
	003 Move [X31+384], X30
	004 Move [X31+392], X23
	005 Move [X31+400], X22
	006 Move [X31+408], X21
	007 Move [X31+416], X20
	008 Move [X31+424], X19
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X9, [X23+40]
	011 Move X20, X2
	012 Move X22, X1
	013 Move X21, X0
	014 Move [X31+360], X9
	015 Move X9, [X2+56]
	016 Move X19, X8
	017 Compare X9, 0
	018 JumpIfNotEqual {21}
	019 Move X0, X20
	020 Call 0x1C5D6E0
	021 Add X0, X31, 24
	022 Move W2, 168
	023 Move W1, W31
	024 Call 0x3EB2B10
	025 Move X0, [X21+80]
	026 Compare X0, 0
	027 JumpIfEqual {85}
	028 And X1, X22, 0
	029 Move X2, X31
	030 Call Simulation.GetInputForPlayer, X0, X1
	031 Compare X0, 0
	032 JumpIfEqual {69}
	033 Move X1, X31
	034 Call SimulationInput.get_Data, X0
	035 Move X8, [X21+80]
	036 Compare X8, 0
	037 JumpIfEqual {85}
	038 Move X8, [X8+88]
	039 Compare X8, 0
	040 JumpIfEqual {85}
	041 Move W1, [X8+16]
	042 Move X2, X31
	043 Call NetworkInput.FromRaw, X0, X1
	044 Move [X31+8], X0
	045 Move [X31+16], X1
	046 Move X8, [X20+56]
	047 Add X0, X31, 8
	048 Add X1, X31, 24
	049 Move X2, [X8]
	050 Call 0x222B650, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {69}
	055 Move W2, 172
	056 Move X0, X19
	057 Move W1, W31
	058 Call 0x3EB2B10
	059 Move X8, [X20+56]
	060 Add X0, X31, 192
	061 Add X1, X31, 24
	062 Move W2, 168
	063 Move X20, [X8+24]
	064 Call 0x3EB2AC0
	065 Add X1, X31, 192
	066 Move X0, X19
	067 Move X2, X20
	068 Call Nullable`1<NetPlayerInput>..ctor, X0, X1
	069 Move W2, 172
	070 Move X0, X19
	071 Move W1, W31
	072 Call 0x3EB2B10
	073 Move X8, [X23+40]
	074 Move X9, [X31+360]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X20, [X31+416]
	077 Move X19, [X31+424]
	078 Move X22, [X31+400]
	079 Move X21, [X31+408]
	080 Move X30, [X31+384]
	081 Move X23, [X31+392]
	082 Move X29, [X31+368]
	083 Add X31, X31, 432
	084 Return X0
	085 Call 0x1C17F20
	086 Call 0x3EB2B20

Method: System.Nullable`1<Fusion.NetworkInput> GetRawInputForPlayer(Fusion.PlayerRef player)

Disassembly:
	0x01EA413C MOV X1, X8
	0x01EA4140 BR X4
	0x01EA4144 RET
	0x01EA4148 SUB X31, X31, 0x70
	0x01EA414C STP X29, X30, [X31 + 0x10]
	0x01EA4150 STP X28, X27, [X31 + 0x20]
	0x01EA4154 STP X26, X25, [X31 + 0x30]
	0x01EA4158 STP X24, X23, [X31 + 0x40]
	0x01EA415C STP X22, X21, [X31 + 0x50]
	0x01EA4160 STP X20, X19, [X31 + 0x60]
	0x01EA4164 ADRP X23, 0x2535000
	0x01EA4168 LDRB W8, [X23 + 0x343]
	0x01EA416C MOV W21, W4
	0x01EA4170 MOV X22, X2
	0x01EA4174 MOV X19, X1
	0x01EA4178 MOV X20, X0
	0x01EA417C STR X2, [X31]
	0x01EA4180 STR W3, [X31 + 0x8]
	0x01EA4184 TBNZ X8, 0x0, 0x1EA4214
	0x01EA4188 ADRP X0, 0x225A000
	0x01EA418C LDR X0, [X0 + 0xB18]
	0x01EA4190 BL 0x1C16CF4
	0x01EA4194 ADRP X0, 0x225A000
	0x01EA4198 LDR X0, [X0 + 0xB20]
	0x01EA419C BL 0x1C16CF4
	0x01EA41A0 ADRP X0, 0x225A000
	0x01EA41A4 LDR X0, [X0 + 0x740]
	0x01EA41A8 BL 0x1C16CF4
	0x01EA41AC ADRP X0, 0x2252000
	0x01EA41B0 LDR X0, [X0 + 0x398]
	0x01EA41B4 BL 0x1C16CF4
	0x01EA41B8 ADRP X0, 0x225A000
	0x01EA41BC LDR X0, [X0 + 0x378]
	0x01EA41C0 BL 0x1C16CF4
	0x01EA41C4 ADRP X0, 0x225A000
	0x01EA41C8 LDR X0, [X0 + 0xB28]
	0x01EA41CC BL 0x1C16CF4
	0x01EA41D0 ADRP X0, 0x225A000
	0x01EA41D4 LDR X0, [X0 + 0xB30]
	0x01EA41D8 BL 0x1C16CF4
	0x01EA41DC ADRP X0, 0x224F000
	0x01EA41E0 LDR X0, [X0 + 0x598]
	0x01EA41E4 BL 0x1C16CF4
	0x01EA41E8 ADRP X0, 0x225A000
	0x01EA41EC LDR X0, [X0 + 0xB38]
	0x01EA41F0 BL 0x1C16CF4
	0x01EA41F4 ADRP X0, 0x225A000
	0x01EA41F8 LDR X0, [X0 + 0xB40]
	0x01EA41FC BL 0x1C16CF4
	0x01EA4200 ADRP X0, 0x225A000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2536000
	007 Move W9, [X22+816]
	008 Move X21, X1
	009 Move X20, X0
	010 Move X19, X8
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x225B000
	016 Move X0, [X0+2712]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+816], W8
	020 Move X0, [X20+80]
	021 Compare X0, 0
	022 JumpIfEqual {66}
	023 And X1, X21, 0
	024 Move X2, X31
	025 Call Simulation.GetInputForPlayer, X0, X1
	026 Compare X0, 0
	027 JumpIfEqual {57}
	028 Move X1, X31
	029 Call SimulationInput.get_Data, X0
	030 Move X8, [X20+80]
	031 Compare X8, 0
	032 JumpIfEqual {66}
	033 Move X8, [X8+88]
	034 Compare X8, 0
	035 JumpIfEqual {66}
	036 Move W1, [X8+16]
	037 Move X20, 0x225B000
	038 Move X20, [X20+2712]
	039 Move X2, X31
	040 Call NetworkInput.FromRaw, X0, X1
	041 Move X2, X0
	042 Move X3, [X20]
	043 Move [X19+8], X31
	044 Move [X19+16], X31
	045 Move [X19], X31
	046 Move X0, X19
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X4, X1
	052 Move X1, X2
	053 Move X2, X4
	054 Move X30, [X31+48]
	055 Call Nullable`1<NetworkInput>..ctor, X0, X1
	056 Return X0
	057 Move [X19], X31
	058 Move [X19+8], X31
	059 Move [X19+16], X31
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X30, [X31+48]
	065 Return X0
	066 Call 0x1C17F20

Method: System.Boolean TryGetInputForPlayer(Fusion.PlayerRef player, out T input)

Disassembly:
	0x0222CE74 MOV W0, W31
	0x0222CE78 LDR X30, [X31], #0x20
	0x0222CE7C RET
	0x0222CE80 RET
	0x0222CE84 RET
	0x0222CE88 RET
	0x0222CE8C RET
	0x0222CE90 RET
	0x0222CE94 RET
	0x0222CE98 RET
	0x0222CE9C RET
	0x0222CEA0 RET
	0x0222CEA4 RET
	0x0222CEA8 RET
	0x0222CEAC RET
	0x0222CEB0 RET
	0x0222CEB4 RET
	0x0222CEB8 RET
	0x0222CEBC RET
	0x0222CEC0 RET
	0x0222CEC4 RET
	0x0222CEC8 RET
	0x0222CECC RET
	0x0222CED0 RET
	0x0222CED4 RET
	0x0222CED8 RET
	0x0222CEDC RET
	0x0222CEE0 RET
	0x0222CEE4 RET
	0x0222CEE8 RET
	0x0222CEEC RET
	0x0222CEF0 RET
	0x0222CEF4 RET
	0x0222CEF8 RET
	0x0222CEFC RET
	0x0222CF00 RET
	0x0222CF04 RET
	0x0222CF08 RET
	0x0222CF0C RET
	0x0222CF10 RET
	0x0222CF14 RET
	0x0222CF18 RET
	0x0222CF1C RET
	0x0222CF20 RET
	0x0222CF24 RET
	0x0222CF28 RET
	0x0222CF2C RET
	0x0222CF30 RET
	0x0222CF34 RET
	0x0222CF38 RET
	0x0222CF3C RET
	0x0222CF40 RET
	0x0222CF44 STR X30, [X31 - 0x20]!
	0x0222CF48 STP X20, X19, [X31 + 0x10]
	0x0222CF4C LDR X8, [X0 + 0x38]
	0x0222CF50 MOV X19, X0
	0x0222CF54 CBNZ X8, 0x222CF84
	0x0222CF58 ADRP X0, 0x1EC7000
	0x0222CF5C LDR X0, [X0 + 0x598]
	0x0222CF60 BL 0x1C16CF4
	0x0222CF64 ADRP X0, 0x1EC7000
	0x0222CF68 LDR X0, [X0 + 0x6C0]
	0x0222CF6C BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Subtract X31, X31, 528
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X23+40]
	012 Move X20, X3
	013 Move X19, X2
	014 Move X21, X1
	015 Move [X31+520], X8
	016 Move X24, [X3+56]
	017 Move X22, X0
	018 Compare X24, 0
	019 JumpIfNotEqual {23}
	020 Move X0, X20
	021 Call 0x1C5D6E0
	022 Move X24, [X20+56]
	023 Add X0, X31, 344
	024 Move W2, 172
	025 Move W1, W31
	026 Call 0x3EB2B10
	027 Move X2, [X24]
	028 And X1, X21, 0
	029 Add X8, X31, 168
	030 Move X0, X22
	031 Call 0x222C128, X0, X1
	032 Add X0, X31, 344
	033 Add X1, X31, 168
	034 Move W2, 172
	035 Call 0x3EB2AC0
	036 Move W21, [X31+344]
	037 Compare W21, 0
	038 JumpIfEqual {52}
	039 Move X8, [X20+56]
	040 Add X0, X31, 344
	041 Move X1, [X8+40]
	042 Add X8, X31, 0
	043 Call Nullable`1<NetPlayerInput>.get_Value, X0
	044 Add X0, X31, 168
	045 Add X1, X31, 0
	046 Move W2, 168
	047 Call 0x3EB2AC0
	048 Add X1, X31, 168
	049 Move W2, 168
	050 Move X0, X19
	051 Call 0x3EB2AC0
	052 Move W2, 168
	053 Move X0, X19
	054 Move W1, W31
	055 Call 0x3EB2B10
	056 Move X8, [X23+40]
	057 Move X9, [X31+520]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CSET not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add X31, X31, 528
	062 Move X20, [X31+48]
	063 Move X19, [X31+56]
	064 Move X22, [X31+32]
	065 Move X21, [X31+40]
	066 Move X24, [X31+16]
	067 Move X23, [X31+24]
	068 Move X29, [X31+64]
	069 Move X30, [X31+72]
	070 Return X0
	071 Call 0x3EB2B20

Method: Fusion.NetworkObject FindObject(Fusion.NetworkId networkId)

Disassembly:
	0x01EA4204 LDR X0, [X0 + 0xB48]
	0x01EA4208 BL 0x1C16CF4
	0x01EA420C MOVZ W8, 0x1
	0x01EA4210 STRB W8, [X23 + 0x343]
	0x01EA4214 CBZ X19, 0x1EA43BC
	0x01EA4218 ADRP X8, 0x2252000
	0x01EA421C LDR X9, [X19 + 0x20]
	0x01EA4220 LDR X8, [X8 + 0x398]
	0x01EA4224 CBZ X9, 0x1EA4230
	0x01EA4228 LDR W23, [X9]
	0x01EA422C B 0x1EA4234
	0x01EA4230 MOV W23, W31
	0x01EA4234 LDR X0, [X8]
	0x01EA4238 ADRP X26, 0x225A000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31+8], X31
	003 Move X0, [X0+80]
	004 Compare X0, 0
	005 JumpIfEqual {15}
	006 And X1, X1, 0
	007 Add X2, X31, 8
	008 Move X3, X31
	009 Call Simulation.TryGetInstance, X0, X1, X2
	010 Move X8, [X31+8]
	011 And W31, W0, 1
	012 NotImplemented "Instruction CSEL not yet implemented."
	013 Move X30, [X31+16]
	014 Return X0
	015 Call 0x1C17F20

Method: System.Boolean TryFindObject(Fusion.NetworkId objectId, out Fusion.NetworkObject networkObject)

Disassembly:
	0x01EA423C ADRP X29, 0x225A000
	0x01EA4240 ADRP X25, 0x225A000
	0x01EA4244 ADRP X24, 0x224F000
	0x01EA4248 LDR W8, [X0 + 0xE0]
	0x01EA424C LDR X26, [X26 + 0x740]
	0x01EA4250 LDR X29, [X29 + 0xB38]
	0x01EA4254 LDR X25, [X25 + 0xB20]
	0x01EA4258 LDR X24, [X24 + 0x598]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 And X1, X1, 0
	006 Move X3, X31
	007 Move X30, [X31+16]
	008 Call Simulation.TryGetInstance, X0, X1, X2
	009 Return X0
	010 Call 0x1C17F20

Method: System.Boolean TryFindSceneObject(Fusion.NetworkObjectTypeId networkObjectTypeId, out Fusion.NetworkObject networkObject)

Disassembly:
	0x01EA425C CBNZ W8, 0x1EA4264
	0x01EA4260 BL 0x1C16DFC
	0x01EA4264 ADRP X27, 0x225A000
	0x01EA4268 LDR X27, [X27 + 0xB40]
	0x01EA426C LDR X1, [X26]
	0x01EA4270 ADRP X28, 0x225A000
	0x01EA4274 LDR X28, [X28 + 0xB18]
	0x01EA4278 CMP W23, 0x0
	0x01EA427C MOV X0, X19
	0x01EA4280 CSET W23, EQ
	0x01EA4284 BL 0x2214CF8
	0x01EA4288 LDR X1, [X29]
	0x01EA428C LDR X3, [X25]
	0x01EA4290 MOV X2, X0
	0x01EA4294 MOV W0, W23
	0x01EA4298 BL 0x2181C48
	0x01EA429C LDR X0, [X24]
	0x01EA42A0 LDR X23, [X19 + 0x30]
	0x01EA42A4 LDR W8, [X0 + 0xE0]
	0x01EA42A8 CBNZ W8, 0x1EA42B0
	0x01EA42AC BL 0x1C16DFC
	0x01EA42B0 ADRP X24, 0x225A000
	0x01EA42B4 LDR X24, [X24 + 0x378]
	0x01EA42B8 MOV X0, X23
	0x01EA42BC MOV X1, X31
	0x01EA42C0 MOV X2, X31
	0x01EA42C4 BL 0x3C3883C
	0x01EA42C8 LDR X1, [X26]
	0x01EA42CC MOV W23, W0
	0x01EA42D0 MOV X0, X19
	0x01EA42D4 BL 0x2214CF8
	0x01EA42D8 LDR X3, [X19 + 0x30]
	0x01EA42DC LDR X1, [X27]
	0x01EA42E0 LDR X4, [X28]
	0x01EA42E4 MOV X2, X0
	0x01EA42E8 AND W0, W23, 0x1
	0x01EA42EC BL 0x2182194
	0x01EA42F0 ANDS W31, W22, 0xFF
	0x01EA42F4 B.EQ 0x1EA4314

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2536000
	007 Move [X31+8], X1
	008 Move X21, 0x225B000
	009 Move W8, [X22+817]
	010 Move X21, [X21+888]
	011 Move X19, X2
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x225B000
	018 Move X0, [X0+888]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+817], W8
	022 Move [X19], X31
	023 Move X0, [X21]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Add X0, X31, 8
	029 Move X1, X31
	030 Call NetworkObjectTypeId.get_IsSceneObject, X0
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {42}
	035 Move X0, [X20+80]
	036 Compare X0, 0
	037 JumpIfEqual {50}
	038 Move X1, [X31+8]
	039 Move X2, X19
	040 Move X3, X31
	041 Call Simulation.TryGetSceneInstance, X0, X1, X2
	042 Move W0, W31
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 And W0, W0, 1
	048 Move X30, [X31+48]
	049 Return X0
	050 Call 0x1C17F20

Method: System.Boolean TryFindBehaviour(Fusion.NetworkBehaviourId behaviourId, out Fusion.NetworkBehaviour behaviour)

Disassembly:
	0x01EA42F8 ADRP X8, 0x225A000
	0x01EA42FC LDR X8, [X8 + 0xB30]
	0x01EA4300 ADD X0, X31, 0x0
	0x01EA4304 LDR X1, [X8]
	0x01EA4308 BL 0x2436A3C
	0x01EA430C STUR X0, [X19 + 0x64]
	0x01EA4310 B 0x1EA436C
	0x01EA4314 TBNZ X21, 0x0, 0x1EA436C
	0x01EA4318 LDR X0, [X24]
	0x01EA431C LDUR X22, [X19 + 0x64]
	0x01EA4320 LDR W8, [X0 + 0xE0]
	0x01EA4324 CBNZ W8, 0x1EA432C
	0x01EA4328 BL 0x1C16DFC
	0x01EA432C LDR X1, [X26]
	0x01EA4330 CMP W22, 0x0
	0x01EA4334 UBFM X8, X22, 0x20, 0x3F
	0x01EA4338 CSET W9, NE
	0x01EA433C CMP X8, 0x0
	0x01EA4340 CSET W8, NE
	0x01EA4344 MOV X0, X19
	0x01EA4348 ORR W22, W8, W9, 0x0
	0x01EA434C BL 0x2214CF8
	0x01EA4350 ADRP X8, 0x225A000
	0x01EA4354 LDR X8, [X8 + 0xB48]
	0x01EA4358 LDR X3, [X25]
	0x01EA435C MOV X2, X0
	0x01EA4360 MOV W0, W22
	0x01EA4364 LDR X1, [X8]
	0x01EA4368 BL 0x2181C48
	0x01EA436C LDR X8, [X19 + 0x78]
	0x01EA4370 STR X20, [X19 + 0x30]
	0x01EA4374 CBZ X8, 0x1EA43BC
	0x01EA4378 MOV X22, X31
	0x01EA437C LDR W9, [X8 + 0x18]
	0x01EA4380 CMP W22, W9
	0x01EA4384 B.GE 0x1EA43C0
	0x01EA4388 CMP W22, W9
	0x01EA438C B.CS 0x1EA44B4
	0x01EA4390 ADD X8, X8, X22, 0x3, LSL
	0x01EA4394 LDR X0, [X8 + 0x20]
	0x01EA4398 CBZ X0, 0x1EA43BC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move [X31+8], X31
	005 Move X0, [X0+80]
	006 Compare X0, 0
	007 JumpIfEqual {51}
	008 Move X19, X2
	009 Move X20, X1
	010 And X1, X1, 0
	011 Add X2, X31, 8
	012 Move X3, X31
	013 Call Simulation.TryGetInstance, X0, X1, X2
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {44}
	018 Move X8, [X31+8]
	019 Move X9, X20
	020 ShiftRight X9, 32
	021 And X9, X9, 0x7FFFFFFF
	022 Move TEMP, X9
	023 And TEMP, TEMP, -2147483648
	024 Compare TEMP, -2147483648
	025 JumpIfEqual {28}
	026 Compare X8, 0
	027 JumpIfNotEqual {35}
	028 Compare X8, 0
	029 JumpIfEqual {51}
	030 Move X10, [X8+120]
	031 Compare X10, 0
	032 JumpIfEqual {51}
	033 Move W10, [X10+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X8, [X8+120]
	036 Compare X8, 0
	037 JumpIfEqual {51}
	038 Move W10, [X8+24]
	039 NotImplemented "Instruction SBFM not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Add X8, X8, X9
	042 Move X8, [X8+32]
	043 Move W0, 1
	044 Move X8, X31
	045 Move W0, W31
	046 Move [X19], X8
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Return X0
	051 Call 0x1C17F20
	052 Call 0x1C17F28

Method: System.Boolean TryFindBehaviour(Fusion.NetworkBehaviourId id, out T behaviour)

Disassembly:
	0x0222CD98 MOV X19, X0
	0x0222CD9C CBZ X8, 0x222CDAC
	0x0222CDA0 CBZ X19, 0x222CDB8
	0x0222CDA4 LDR W0, [X19 + 0x18]
	0x0222CDA8 B 0x222CDBC
	0x0222CDAC MOV X0, X1
	0x0222CDB0 BL 0x1C5C6E0
	0x0222CDB4 CBNZ X19, 0x222CDA4
	0x0222CDB8 MOV W0, W31
	0x0222CDBC LDP X30, X19, [X31], #0x10
	0x0222CDC0 RET
	0x0222CDC4 STP X30, X19, [X31 - 0x10]!
	0x0222CDC8 LDR X8, [X1 + 0x38]
	0x0222CDCC MOV X19, X0
	0x0222CDD0 CBZ X8, 0x222CDE0
	0x0222CDD4 CBZ X19, 0x222CDEC
	0x0222CDD8 LDR W0, [X19 + 0x18]
	0x0222CDDC B 0x222CDF0
	0x0222CDE0 MOV X0, X1
	0x0222CDE4 BL 0x1C5C6E0
	0x0222CDE8 CBNZ X19, 0x222CDD8
	0x0222CDEC MOV W0, W31
	0x0222CDF0 LDP X30, X19, [X31], #0x10
	0x0222CDF4 RET
	0x0222CDF8 STP X30, X19, [X31 - 0x10]!
	0x0222CDFC LDR X8, [X1 + 0x38]
	0x0222CE00 MOV X19, X0
	0x0222CE04 CBZ X8, 0x222CE14
	0x0222CE08 CBZ X19, 0x222CE20
	0x0222CE0C LDR W0, [X19 + 0x18]
	0x0222CE10 B 0x222CE24
	0x0222CE14 MOV X0, X1
	0x0222CE18 BL 0x1C5C6E0
	0x0222CE1C CBNZ X19, 0x222CE0C
	0x0222CE20 MOV W0, W31
	0x0222CE24 LDP X30, X19, [X31], #0x10
	0x0222CE28 RET
	0x0222CE2C STR X30, [X31 - 0x20]!
	0x0222CE30 STP X20, X19, [X31 + 0x10]
	0x0222CE34 LDR X8, [X1 + 0x38]
	0x0222CE38 MOV X20, X1
	0x0222CE3C MOV X19, X0
	0x0222CE40 CBZ X8, 0x222CE64
	0x0222CE44 CBZ X19, 0x222CE70
	0x0222CE48 LDR X8, [X20 + 0x38]
	0x0222CE4C MOV X0, X19
	0x0222CE50 LDP X20, X19, [X31 + 0x10]
	0x0222CE54 LDR X1, [X8 + 0x8]
	0x0222CE58 LDR X2, [X1]
	0x0222CE5C LDR X30, [X31], #0x20
	0x0222CE60 BR X2
	0x0222CE64 MOV X0, X20
	0x0222CE68 BL 0x1C5C6E0
	0x0222CE6C CBNZ X19, 0x222CE48
	0x0222CE70 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X20, X3
	008 Move X19, X2
	009 Move X21, X1
	010 Move X22, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {15}
	013 Move X0, X20
	014 Call 0x1C5D6E0
	015 Add X2, X31, 8
	016 Move X0, X22
	017 Move X1, X21
	018 Move X3, X31
	019 Move [X31+8], X31
	020 Call NetworkRunner.TryFindBehaviour, X0, X1, X2
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {60}
	025 Move X8, [X20+56]
	026 Move X21, [X31+8]
	027 Move X1, [X8+8]
	028 Move W8, [X1+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {36}
	033 Move X0, X1
	034 Call 0x1C5D684
	035 Move X1, X0
	036 Move X0, X21
	037 Call 0x1C17E00
	038 Move X8, [X20+56]
	039 Move X21, X0
	040 Move X20, [X8+8]
	041 Move W8, [X20+309]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {49}
	046 Move X0, X20
	047 Call 0x1C5D684
	048 Move X20, X0
	049 Compare X21, 0
	050 JumpIfEqual {60}
	051 Move X0, X21
	052 Move X1, X20
	053 Call 0x1C17E00
	054 Compare X0, 0
	055 JumpIfEqual {68}
	056 Move [X19], X0
	057 Move W8, [X0+48]
	058 And W31, W8, 8
	059 NotImplemented "Instruction CSET not yet implemented."
	060 Move W0, W31
	061 Move [X19], X31
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Return X0
	068 Move X0, X21
	069 Move X1, X20
	070 Call 0x1C181E0

Method: T TryGetNetworkedBehaviourFromNetworkedObjectRef(Fusion.NetworkId networkId)

Disassembly:
	0x0222D348 LDR X8, [X19 + 0x38]
	0x0222D34C LDP X20, X19, [X31 + 0x10]
	0x0222D350 LDR X1, [X8 + 0x8]
	0x0222D354 LDP X30, X21, [X31], #0x20
	0x0222D358 B 0x2241D78
	0x0222D35C STR X30, [X31 - 0x30]!
	0x0222D360 STP X22, X21, [X31 + 0x10]
	0x0222D364 STP X20, X19, [X31 + 0x20]
	0x0222D368 LDR X8, [X1 + 0x38]
	0x0222D36C MOV X19, X1
	0x0222D370 MOV X20, X0
	0x0222D374 CBNZ X8, 0x222D3A0
	0x0222D378 ADRP X0, 0x1EC6000
	0x0222D37C LDR X0, [X0 + 0x598]
	0x0222D380 BL 0x1C16CF4
	0x0222D384 ADRP X0, 0x1EEF000
	0x0222D388 LDR X0, [X0 + 0x1C8]
	0x0222D38C BL 0x1C16CF4
	0x0222D390 LDR X8, [X19 + 0x38]
	0x0222D394 CBNZ X8, 0x222D3A0
	0x0222D398 MOV X0, X19
	0x0222D39C BL 0x1C5C6E0
	0x0222D3A0 ADRP X8, 0x1EC6000
	0x0222D3A4 LDR X8, [X8 + 0x598]
	0x0222D3A8 LDR X0, [X8]
	0x0222D3AC LDR W8, [X0 + 0xE0]
	0x0222D3B0 CBNZ W8, 0x222D3B8
	0x0222D3B4 BL 0x1C16DFC
	0x0222D3B8 ADRP X8, 0x1EEF000
	0x0222D3BC LDR X8, [X8 + 0x1C8]
	0x0222D3C0 MOV X0, X20
	0x0222D3C4 MOV X2, X31
	0x0222D3C8 LDR X1, [X8]
	0x0222D3CC BL 0x3C38CFC
	0x0222D3D0 MOV X0, X20
	0x0222D3D4 MOV X1, X31
	0x0222D3D8 BL 0x3C3911C
	0x0222D3DC LDR X8, [X19 + 0x38]
	0x0222D3E0 MOV X21, X0
	0x0222D3E4 LDR X20, [X8]
	0x0222D3E8 LDRB W8, [X20 + 0x135]
	0x0222D3EC TBNZ X8, 0x0, 0x222D3FC
	0x0222D3F0 MOV X0, X20
	0x0222D3F4 BL 0x1C5C684
	0x0222D3F8 MOV X20, X0
	0x0222D3FC CBZ X21, 0x222D420
	0x0222D400 MOV X0, X21
	0x0222D404 MOV X1, X20
	0x0222D408 BL 0x1C16E00
	0x0222D40C MOV X22, X0
	0x0222D410 CBNZ X0, 0x222D424
	0x0222D414 MOV X0, X21
	0x0222D418 MOV X1, X20
	0x0222D41C BL 0x1C171E0
	0x0222D420 MOV X22, X31
	0x0222D424 MOV X0, X22
	0x0222D428 MOV X1, X31
	0x0222D42C MOV X2, X31
	0x0222D430 BL 0x3C3883C

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X19, X2
	008 Move X20, X1
	009 Move X21, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {14}
	012 Move X0, X19
	013 Call 0x1C5D6E0
	014 Move [X31], X31
	015 Move [X31+8], X31
	016 Move X0, [X21+80]
	017 Compare X0, 0
	018 JumpIfEqual {77}
	019 And X1, X20, 0
	020 Add X2, X31, 8
	021 Move X3, X31
	022 Call Simulation.TryGetInstance, X0, X1, X2
	023 Move W8, W0
	024 Move X0, X31
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {71}
	029 Move X21, [X31+8]
	030 Compare X21, 0
	031 JumpIfEqual {77}
	032 Move X8, [X19+56]
	033 Move X20, [X8]
	034 Move X8, [X20+56]
	035 Compare X8, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X20
	038 Call 0x1C5D6E0
	039 Move X0, X21
	040 Move X1, X31
	041 Call Component.get_gameObject, X0
	042 Compare X0, 0
	043 JumpIfEqual {77}
	044 Move X8, [X20+56]
	045 Add X1, X31, 0
	046 Move X2, [X8+8]
	047 Call 0x21E7600, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {53}
	052 Move X0, [X31]
	053 Move X20, [X31+8]
	054 Compare X20, 0
	055 JumpIfEqual {77}
	056 Move X8, [X19+56]
	057 Move X19, [X8+16]
	058 Move X8, [X19+56]
	059 Compare X8, 0
	060 JumpIfNotEqual {63}
	061 Move X0, X19
	062 Call 0x1C5D6E0
	063 Move X0, X20
	064 Move X1, X31
	065 Call Component.get_gameObject, X0
	066 Compare X0, 0
	067 JumpIfEqual {77}
	068 Move X8, [X19+56]
	069 Move X1, [X8]
	070 Call 0x21E6548, X0
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X30, [X31+16]
	074 Move X21, [X31+24]
	075 Add X31, X31, 48
	076 Return X0
	077 Call 0x1C17F20

Method: Fusion.NetworkId TryGetObjectRefFromNetworkedBehaviour(Fusion.NetworkBehaviour behaviour)

Disassembly:
	0x01EA439C MOV X1, X20
	0x01EA43A0 MOV X2, X19
	0x01EA43A4 MOV W3, W22
	0x01EA43A8 MOV X4, X31
	0x01EA43AC BL 0x1E74EEC
	0x01EA43B0 LDR X8, [X19 + 0x78]
	0x01EA43B4 ADD X22, X22, 0x1
	0x01EA43B8 CBNZ X8, 0x1EA437C
	0x01EA43BC BL 0x1C16F20
	0x01EA43C0 LDR X0, [X24]
	0x01EA43C4 ADD X22, X19, 0x64
	0x01EA43C8 LDR W8, [X0 + 0xE0]
	0x01EA43CC CBNZ W8, 0x1EA43D4
	0x01EA43D0 BL 0x1C16DFC
	0x01EA43D4 MOV X0, X22
	0x01EA43D8 MOV X1, X31
	0x01EA43DC BL 0x1E99108
	0x01EA43E0 TBNZ X0, 0x0, 0x1EA443C
	0x01EA43E4 TBNZ X21, 0x0, 0x1EA443C
	0x01EA43E8 LDR X22, [X19 + 0x70]
	0x01EA43EC CBZ X22, 0x1EA43BC
	0x01EA43F0 LDR X8, [X22 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {29}
	005 Move W8, [X1+48]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 8
	009 Compare TEMP, 8
	010 JumpIfEqual {29}
	011 Move X0, [X19+64]
	012 Compare X0, 0
	013 JumpIfEqual {33}
	014 Move X1, X31
	015 Call NetworkObject.get_IsValid, X0
	016 Move W8, W0
	017 Move X0, X31
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {30}
	022 Move X8, [X19+64]
	023 Compare X8, 0
	024 JumpIfEqual {33}
	025 Move X8, [X8+32]
	026 Compare X8, 0
	027 JumpIfEqual {29}
	028 Move W0, [X8]
	029 Move X0, X31
	030 Move X30, [X31+16]
	031 Move X19, [X31+24]
	032 Return X0
	033 Call 0x1C17F20

Method: Fusion.NetworkBehaviourId TryGetNetworkedBehaviourId(Fusion.NetworkBehaviour behaviour)

Disassembly:
	0x01EA43F4 CMP W8, 0x1
	0x01EA43F8 B.LT 0x1EA443C
	0x01EA43FC MOV X23, X31
	0x01EA4400 AND X8, X8, 0x0
	0x01EA4404 ADD X24, X22, 0x20
	0x01EA4408 CMP X23, W8, UXTW
	0x01EA440C B.CS 0x1EA44B4
	0x01EA4410 LDR X1, [X24, X23, LSL #3]
	0x01EA4414 AND X21, X21, 0x0
	0x01EA4418 MOVZ W4, 0x1
	0x01EA441C MOV X0, X20
	0x01EA4420 MOV X2, X31
	0x01EA4424 MOV X3, X21
	0x01EA4428 BL 0x1EA4148
	0x01EA442C LDR W8, [X22 + 0x18]
	0x01EA4430 ADD X23, X23, 0x1
	0x01EA4434 CMP X23, W8, SXTW
	0x01EA4438 B.LT 0x1EA4408
	0x01EA443C LDR W8, [X19 + 0x60]
	0x01EA4440 MOV X0, X19
	0x01EA4444 MOV X1, X31
	0x01EA4448 AND W8, W8, 0xF000FFFF
	0x01EA444C STR W8, [X19 + 0x60]
	0x01EA4450 BL 0x1E93AA4
	0x01EA4454 LDR W0, [X19 + 0x60]
	0x01EA4458 MOVZ W1, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {33}
	005 Move W8, [X1+48]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 8
	009 Compare TEMP, 8
	010 JumpIfEqual {33}
	011 Move X0, [X19+64]
	012 Compare X0, 0
	013 JumpIfEqual {39}
	014 Move X1, X31
	015 Call NetworkObject.get_IsValid, X0
	016 Move X8, X31
	017 Move X9, X31
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {35}
	022 Move X8, [X19+64]
	023 Compare X8, 0
	024 JumpIfEqual {39}
	025 Move X8, [X8+32]
	026 Move W9, [X19+104]
	027 Compare X8, 0
	028 JumpIfEqual {30}
	029 Move W8, [X8]
	030 Move X9, X9
	031 ShiftRight X9, 32
	032 And X9, X9, 0x7FFFFFFF
	033 Move X8, X31
	034 Move X9, X31
	035 Or X0, X9, X8
	036 Move X30, [X31+16]
	037 Move X19, [X31+24]
	038 Return X0
	039 Call 0x1C17F20

Method: System.Boolean SetIsSimulated(Fusion.NetworkObject obj, System.Boolean simulate)

Disassembly:
	0x01EA445C MOV X2, X31
	0x01EA4460 BL 0x1E93D90
	0x01EA4464 TBNZ X0, 0x0, 0x1EA4494
	0x01EA4468 LDR W0, [X19 + 0x60]
	0x01EA446C MOVZ W1, 0x2000
	0x01EA4470 MOV X2, X31
	0x01EA4474 BL 0x1E93D90
	0x01EA4478 TBNZ X0, 0x0, 0x1EA4494
	0x01EA447C LDR W8, [X19 + 0x60]
	0x01EA4480 MOV X0, X20
	0x01EA4484 MOV X1, X19
	0x01EA4488 ORR W8, W8, 0x2000
	0x01EA448C STR W8, [X19 + 0x60]
	0x01EA4490 BL 0x1EA64DC
	0x01EA4494 LDP X20, X19, [X31 + 0x60]
	0x01EA4498 LDP X22, X21, [X31 + 0x50]
	0x01EA449C LDP X24, X23, [X31 + 0x40]
	0x01EA44A0 LDP X26, X25, [X31 + 0x30]
	0x01EA44A4 LDP X28, X27, [X31 + 0x20]
	0x01EA44A8 LDP X29, X30, [X31 + 0x10]
	0x01EA44AC ADD X31, X31, 0x70
	0x01EA44B0 RET
	0x01EA44B4 BL 0x1C16F28
	0x01EA44B8 SUB X31, X31, 0x70
	0x01EA44BC STP X30, X3, [X31 + 0x10]
	0x01EA44C0 STP X28, X27, [X31 + 0x20]
	0x01EA44C4 STP X26, X25, [X31 + 0x30]
	0x01EA44C8 STP X24, X23, [X31 + 0x40]
	0x01EA44CC STP X22, X21, [X31 + 0x50]
	0x01EA44D0 STP X20, X19, [X31 + 0x60]
	0x01EA44D4 ADRP X24, 0x2535000
	0x01EA44D8 LDRB W8, [X24 + 0x344]
	0x01EA44DC MOV W22, W4
	0x01EA44E0 MOV X23, X3
	0x01EA44E4 MOV X19, X2
	0x01EA44E8 MOV X21, X1
	0x01EA44EC MOV X20, X0
	0x01EA44F0 STRH W5, [X31 + 0xC]
	0x01EA44F4 TBNZ X8, 0x0, 0x1EA4584
	0x01EA44F8 ADRP X0, 0x225A000
	0x01EA44FC LDR X0, [X0 + 0xB50]
	0x01EA4500 BL 0x1C16CF4
	0x01EA4504 ADRP X0, 0x225A000
	0x01EA4508 LDR X0, [X0 + 0x740]
	0x01EA450C BL 0x1C16CF4
	0x01EA4510 ADRP X0, 0x2252000
	0x01EA4514 LDR X0, [X0 + 0xA78]
	0x01EA4518 BL 0x1C16CF4
	0x01EA451C ADRP X0, 0x2252000
	0x01EA4520 LDR X0, [X0 + 0x398]
	0x01EA4524 BL 0x1C16CF4
	0x01EA4528 ADRP X0, 0x225A000
	0x01EA452C LDR X0, [X0 + 0x320]
	0x01EA4530 BL 0x1C16CF4
	0x01EA4534 ADRP X0, 0x225A000
	0x01EA4538 LDR X0, [X0 + 0x328]
	0x01EA453C BL 0x1C16CF4
	0x01EA4540 ADRP X0, 0x2259000
	0x01EA4544 LDR X0, [X0 + 0x48]
	0x01EA4548 BL 0x1C16CF4
	0x01EA454C ADRP X0, 0x225A000
	0x01EA4550 LDR X0, [X0 + 0xB58]
	0x01EA4554 BL 0x1C16CF4
	0x01EA4558 ADRP X0, 0x225A000
	0x01EA455C LDR X0, [X0 + 0xB60]
	0x01EA4560 BL 0x1C16CF4
	0x01EA4564 ADRP X0, 0x2252000
	0x01EA4568 LDR X0, [X0 + 0xE40]
	0x01EA456C BL 0x1C16CF4
	0x01EA4570 ADRP X0, 0x225A000
	0x01EA4574 LDR X0, [X0 + 0xB38]
	0x01EA4578 BL 0x1C16CF4
	0x01EA457C MOVZ W8, 0x1
	0x01EA4580 STRB W8, [X24 + 0x344]
	0x01EA4584 CBZ X19, 0x1EA4A4C
	0x01EA4588 ADRP X8, 0x2252000
	0x01EA458C LDR X9, [X19 + 0x20]
	0x01EA4590 LDR X8, [X8 + 0x398]
	0x01EA4594 CBZ X9, 0x1EA45A0
	0x01EA4598 LDR W25, [X9]
	0x01EA459C B 0x1EA45A4
	0x01EA45A0 MOV W25, W31
	0x01EA45A4 LDR X0, [X8]
	0x01EA45A8 ADRP X24, 0x225A000
	0x01EA45AC LDR W8, [X0 + 0xE0]
	0x01EA45B0 LDR X24, [X24 + 0x740]
	0x01EA45B4 CBNZ W8, 0x1EA45BC
	0x01EA45B8 BL 0x1C16DFC
	0x01EA45BC LDR X1, [X24]
	0x01EA45C0 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2536000
	007 Move W8, [X22+818]
	008 Move W19, W2
	009 Move X21, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x225B000
	016 Move X0, [X0+2704]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+818], W8
	020 Move X0, X20
	021 Move X1, X21
	022 Call NetworkRunner.Exists, X0, X1
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {89}
	027 Move X0, [X20+80]
	028 Compare X0, 0
	029 JumpIfEqual {107}
	030 Move X1, X31
	031 Call Simulation.get_Topology, X0
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X22, [X20+80]
	034 Compare X22, 0
	035 JumpIfEqual {107}
	036 Move X0, X22
	037 Move X1, X31
	038 Call Simulation.get_Topology, X0
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X0, X22
	041 Move X1, X31
	042 Call Simulation.get_IsServer, X0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {89}
	047 Compare X21, 0
	048 JumpIfEqual {107}
	049 Move X8, [X21+32]
	050 Compare X8, 0
	051 JumpIfEqual {53}
	052 Move W21, [X8]
	053 Move X21, X31
	054 Move X10, 0x225B000
	055 Move X8, [X20]
	056 Move X10, [X10+2704]
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 Move X1, [X10]
	059 Compare X9, 0
	060 JumpIfEqual {67}
	061 Move X10, [X8+176]
	062 Add X10, X10, 8
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Subtract X9, X9, 1
	066 Add X10, X10, 16
	067 Move W2, 31
	068 Move X0, X20
	069 Call 0x1C5D788
	070 Move X8, [X22]
	071 Move X0, X22
	072 Move X9, [X8+616]
	073 Move X1, [X8+624]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Compare X21, 0
	076 JumpIfEqual {107}
	077 Move X8, [X21+32]
	078 Compare X8, 0
	079 JumpIfEqual {107}
	080 Move W1, [X8+32]
	081 And X2, X0, 0
	082 Move X0, X22
	083 Move X3, X31
	084 Call 0x1DC08E4
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfEqual {49}
	089 Move W0, W31
	090 Move W9, [X10]
	091 Add W9, W9, 31
	092 Add X8, X8, W9
	093 Add X0, X8, 312
	094 Move X8, [X0]
	095 Move X3, [X0+8]
	096 And W2, W19, 1
	097 Move X0, X20
	098 Move X1, X21
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move W0, 1
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 Move X30, [X31+48]
	106 Return X0
	107 Call 0x1C17F20

Method: System.Void SetAreaOfInterestGrid(System.Int32 x, System.Int32 y, System.Int32 z)

Disassembly:
	0x01EA45C4 BL 0x2214CF8
	0x01EA45C8 CBZ X21, 0x1EA4A4C
	0x01EA45CC ADRP X26, 0x225A000
	0x01EA45D0 ADRP X27, 0x225A000
	0x01EA45D4 LDR X26, [X26 + 0xB38]
	0x01EA45D8 LDR X27, [X27 + 0xB50]
	0x01EA45DC MOV X24, X0
	0x01EA45E0 CMP W25, 0x0
	0x01EA45E4 MOV X0, X21
	0x01EA45E8 MOV X1, X31
	0x01EA45EC CSET W25, EQ
	0x01EA45F0 BL 0x1E97370
	0x01EA45F4 LDR X1, [X26]
	0x01EA45F8 LDR X4, [X27]
	0x01EA45FC AND X3, X0, 0x0
	0x01EA4600 MOV W0, W25
	0x01EA4604 MOV X2, X24
	0x01EA4608 BL 0x21820C4
	0x01EA460C LDR X8, [X21 + 0xB0]
	0x01EA4610 MOV X0, X20
	0x01EA4614 MOV X1, X21
	0x01EA4618 MOV W2, W22
	0x01EA461C STR X21, [X19 + 0x38]
	0x01EA4620 STR X8, [X19 + 0x20]
	0x01EA4624 STR X19, [X21 + 0xB8]
	0x01EA4628 BL 0x1EA661C
	0x01EA462C LDR X8, [X19 + 0x78]
	0x01EA4630 CBZ X8, 0x1EA4A4C
	0x01EA4634 LDR X9, [X19 + 0x20]
	0x01EA4638 CBZ X9, 0x1EA4A4C
	0x01EA463C LDR X8, [X8 + 0x18]
	0x01EA4640 ADRP X10, 0x225A000
	0x01EA4644 LDR X10, [X10 + 0x328]
	0x01EA4648 ADRP X24, 0x225A000
	0x01EA464C STRH W8, [X9 + 0x6]
	0x01EA4650 LDR X0, [X10]
	0x01EA4654 LDR W8, [X0 + 0xE0]
	0x01EA4658 LDR X24, [X24 + 0x320]
	0x01EA465C CBNZ W8, 0x1EA4664
	0x01EA4660 BL 0x1C16DFC
	0x01EA4664 LDR X0, [X24]
	0x01EA4668 BL 0x222C62C
	0x01EA466C LDR X8, [X19 + 0x78]
	0x01EA4670 CBZ X8, 0x1EA4A4C
	0x01EA4674 LDR W9, [X8 + 0x18]
	0x01EA4678 CMP W9, 0x1
	0x01EA467C B.LT 0x1EA4714
	0x01EA4680 ADRP X26, 0x2252000
	0x01EA4684 LDR X26, [X26 + 0xA78]
	0x01EA4688 MOV W24, W0
	0x01EA468C MOV W10, W31
	0x01EA4690 MOVN W27, 0x27
	0x01EA4694 CMP W10, W9
	0x01EA4698 B.CS 0x1EA4A5C
	0x01EA469C SXTW X28, W10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x2536000
	008 Move W8, [X23+819]
	009 Move W19, W3
	010 Move W20, W2
	011 Move W21, W1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x225B000
	018 Move X0, [X0+2720]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+819], W8
	022 Move X8, [X22+80]
	023 Compare X8, 0
	024 JumpIfEqual {30}
	025 Move X8, [X8+88]
	026 Compare X8, 0
	027 JumpIfEqual {49}
	028 Move W8, [X8+56]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X22, 0x225B000
	031 Move X22, [X22+2720]
	032 Move X0, [X22]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X22]
	038 Move X8, [X0+184]
	039 Move [X8], W21
	040 Move [X8+4], W20
	041 Move [X8+8], W19
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Return 
	049 Call 0x1C17F20
	050 Move X0, 0x2250000
	051 Move X0, [X0+2000]
	052 Call 0x1C17D08
	053 Call 0x1C17F10
	054 Move X19, X0
	055 Move X0, 0x225B000
	056 Move X0, [X0+2728]
	057 Call 0x1C17D08
	058 Move X1, X0
	059 Move X0, X19
	060 Move X2, X31
	061 Call Exception..ctor, X0, X1
	062 Move X0, 0x225B000
	063 Move X0, [X0+2736]
	064 Call 0x1C17D08
	065 Move X1, X0
	066 Move X0, X19
	067 Call 0x1C17DEC

Method: System.Void SetAreaOfInterestCellSize(System.Int32 size)

Disassembly:
	0x01EA46A0 ADD X8, X8, X28, 0x3, LSL
	0x01EA46A4 LDR X25, [X8 + 0x20]
	0x01EA46A8 CBZ X25, 0x1EA4A4C
	0x01EA46AC LDR W8, [X25 + 0x30]
	0x01EA46B0 AND W8, W8, W27, 0x0
	0x01EA46B4 STR W8, [X25 + 0x30]
	0x01EA46B8 LDR X0, [X26]
	0x01EA46BC LDR W8, [X0 + 0xE0]
	0x01EA46C0 CBNZ W8, 0x1EA46C8
	0x01EA46C4 BL 0x1C16DFC
	0x01EA46C8 MOV X0, X25
	0x01EA46CC MOV X1, X31
	0x01EA46D0 BL 0x1E76F90
	0x01EA46D4 LDR X8, [X19 + 0x78]
	0x01EA46D8 CBZ X8, 0x1EA4A4C
	0x01EA46DC LDR X9, [X8 + 0x18]
	0x01EA46E0 CMP W28, W9
	0x01EA46E4 B.CS 0x1EA4A5C
	0x01EA46E8 ADD X10, X8, X28, 0x3, LSL
	0x01EA46EC LDR X11, [X10 + 0x20]
	0x01EA46F0 CBZ X11, 0x1EA4A4C
	0x01EA46F4 STP W24, W0, [X11 + 0x6C]
	0x01EA46F8 LDR X12, [X19 + 0x20]
	0x01EA46FC ADD W10, W28, 0x1
	0x01EA4700 CMP W10, W9
	0x01EA4704 ADD X12, X12, W24, 0x2, SXTW
	0x01EA4708 ADD W24, W0, W24
	0x01EA470C STR X12, [X11 + 0x50]
	0x01EA4710 B.LT 0x1EA4694
	0x01EA4714 TBZ X22, 0x0, 0x1EA47F0
	0x01EA4718 MOV X0, X19
	0x01EA471C MOV X1, X31
	0x01EA4720 BL 0x1E93ECC
	0x01EA4724 LDR X0, [X20 + 0x50]
	0x01EA4728 CBZ X0, 0x1EA4A4C
	0x01EA472C MOV X1, X31
	0x01EA4730 BL 0x1EC0810
	0x01EA4734 CMP W0, 0x2
	0x01EA4738 B.NE 0x1EA47C0
	0x01EA473C ADRP X9, 0x2259000
	0x01EA4740 LDR W8, [X19 + 0x5C]
	0x01EA4744 LDR X9, [X9 + 0x48]
	0x01EA4748 ADD X0, X31, 0xC
	0x01EA474C UBFM W1, W8, 0x11, 0x11
	0x01EA4750 LDR X2, [X9]
	0x01EA4754 BL 0x242D5B8
	0x01EA4758 TBZ X0, 0x0, 0x1EA4798
	0x01EA475C LDR X0, [X20 + 0x50]
	0x01EA4760 CBZ X0, 0x1EA4A4C
	0x01EA4764 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2536000
	006 Move W8, [X21+820]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x225B000
	014 Move X0, [X0+2720]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+820], W8
	018 Move X8, [X20+80]
	019 Compare X8, 0
	020 JumpIfEqual {26}
	021 Move X8, [X8+88]
	022 Compare X8, 0
	023 JumpIfEqual {41}
	024 Move W8, [X8+56]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X20, 0x225B000
	027 Move X20, [X20+2720]
	028 Move X0, [X20]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X20]
	034 Move X8, [X0+184]
	035 Move [X8+12], W19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return 
	041 Call 0x1C17F20
	042 Move X0, 0x2250000
	043 Move X0, [X0+2000]
	044 Call 0x1C17D08
	045 Call 0x1C17F10
	046 Move X19, X0
	047 Move X0, 0x225B000
	048 Move X0, [X0+2744]
	049 Call 0x1C17D08
	050 Move X1, X0
	051 Move X0, X19
	052 Move X2, X31
	053 Call Exception..ctor, X0, X1
	054 Move X0, 0x225B000
	055 Move X0, [X0+2752]
	056 Call 0x1C17D08
	057 Move X1, X0
	058 Move X0, X19
	059 Call 0x1C17DEC

Method: System.Collections.Generic.List`1<Fusion.NetworkId> GetObjectsInAreaOfInterestForPlayer(Fusion.PlayerRef player)

Disassembly:
	0x01EA4768 BL 0x1EC0930
	0x01EA476C LDR X23, [X21 + 0xB0]
	0x01EA4770 TBZ X0, 0x0, 0x1EA4A50
	0x01EA4774 ADRP X8, 0x2252000
	0x01EA4778 LDR X8, [X8 + 0xE40]
	0x01EA477C LDR X0, [X8]
	0x01EA4780 LDR W8, [X0 + 0xE0]
	0x01EA4784 CBNZ W8, 0x1EA478C

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 And X1, X1, 0
	006 Move X2, X31
	007 Move X30, [X31+16]
	008 Call Simulation.GetObjectsInAreaOfInterestForPlayer, X0, X1
	009 Return X0
	010 Call 0x1C17F20

Method: System.Void GetAreaOfInterestGizmoData(System.Collections.Generic.List`1<System.ValueTuple`4<UnityEngine.Vector3, UnityEngine.Vector3, System.Int32, System.Int32>> result)

Disassembly:
	0x01EA4788 BL 0x1C16DFC
	0x01EA478C MOV X0, X31
	0x01EA4790 BL 0x1E8D7F4
	0x01EA4794 B 0x1EA47B8
	0x01EA4798 LDR X0, [X20 + 0x50]

ISIL:
	001 Move X0, [X0+80]
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move X2, X31
	005 Call Simulation.GetAreaOfInterestGizmoData, X0, X1
	006 Return 
	007 Return 

Method: System.Boolean TryGetFusionStatistics(out Fusion.Statistics.FusionStatisticsManager statisticsManager)

Disassembly:
	0x01EA479C LDR X23, [X21 + 0xB0]
	0x01EA47A0 CBZ X0, 0x1EA47B8
	0x01EA47A4 LDR X8, [X0]
	0x01EA47A8 LDR X9, [X8 + 0x268]
	0x01EA47AC LDR X1, [X8 + 0x270]
	0x01EA47B0 BLR X9
	0x01EA47B4 AND X0, X0, 0x0
	0x01EA47B8 CBZ X23, 0x1EA4A4C
	0x01EA47BC STR W0, [X23 + 0x20]

ISIL:
	001 Move X8, [X0+80]
	002 Compare X8, 0
	003 JumpIfEqual {5}
	004 Move X9, [X8+224]
	005 Move X9, X31
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Move [X1], X9
	009 Return X0

Method: System.Boolean TryGetBehaviourStatistics(System.Type behaviourType, out Fusion.Statistics.BehaviourStatisticsSnapshot behaviourStatisticsSnapshot)

Disassembly:
	0x01EA47C0 LDR X8, [X20 + 0x50]
	0x01EA47C4 CBZ X8, 0x1EA4A4C
	0x01EA47C8 LDR X23, [X8 + 0xA8]
	0x01EA47CC MOV X0, X21
	0x01EA47D0 MOV X1, X31
	0x01EA47D4 BL 0x1E97370
	0x01EA47D8 CBZ X23, 0x1EA4A4C
	0x01EA47DC AND X1, X0, 0x0
	0x01EA47E0 MOV X0, X23
	0x01EA47E4 MOV X2, X31
	0x01EA47E8 BL 0x1ED47F8
	0x01EA47EC LDRB W23, [X31 + 0x18]
	0x01EA47F0 ANDS W31, W23, 0xFF
	0x01EA47F4 B.EQ 0x1EA481C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, [X0+96]
	004 Move X19, X2
	005 Compare X0, 0
	006 JumpIfEqual {15}
	007 Move X2, X19
	008 Move X3, X31
	009 Call SimulationBehaviourUpdater.TryGetBehaviourStatisticsSnapshot, X0, X1, X2
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {15}
	014 Move W0, 1
	015 Move W0, W31
	016 Move [X19], X31
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return X0

Method: System.Boolean Exists(Fusion.NetworkObject obj)

Disassembly:
	0x01EA2A20 BL 0x1D2C690
	0x01EA2A24 MOV X0, X21
	0x01EA2A28 BL 0x1C16F18
	0x01EA2A2C BL 0x1990590
	0x01EA2A30 LDR X0, [X0 + 0x60]
	0x01EA2A34 MOV X1, X31
	0x01EA2A38 B 0x1E72840
	0x01EA2A3C SUB X31, X31, 0x110
	0x01EA2A40 STR X29, [X31 + 0xE0]
	0x01EA2A44 STP X30, X21, [X31 + 0xF0]
	0x01EA2A48 STP X20, X19, [X31 + 0x100]
	0x01EA2A4C ADRP X21, 0x2537000
	0x01EA2A50 LDRB W8, [X21 + 0x37A]
	0x01EA2A54 MOV X19, X0
	0x01EA2A58 ADD X20, X31, 0x80
	0x01EA2A5C TBNZ X8, 0x0, 0x1EA2A8C
	0x01EA2A60 ADRP X0, 0x2254000
	0x01EA2A64 LDR X0, [X0 + 0xE40]
	0x01EA2A68 BL 0x1C16CF4
	0x01EA2A6C ADRP X0, 0x225C000
	0x01EA2A70 LDR X0, [X0 + 0xA80]
	0x01EA2A74 BL 0x1C16CF4
	0x01EA2A78 ADRP X0, 0x225C000
	0x01EA2A7C LDR X0, [X0 + 0xA88]
	0x01EA2A80 BL 0x1C16CF4
	0x01EA2A84 MOVZ W8, 0x1
	0x01EA2A88 STRB W8, [X21 + 0x37A]
	0x01EA2A8C MOVI V0.2D, 0x0
	0x01EA2A90 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move W8, W31
	005 Move [X31+8], X31
	006 Compare X1, 0
	007 JumpIfEqual {31}
	008 Move X0, [X0+80]
	009 Compare X0, 0
	010 JumpIfEqual {31}
	011 Move X8, [X1+32]
	012 Move X19, X1
	013 Compare X8, 0
	014 JumpIfEqual {16}
	015 Move W1, [X8]
	016 Move X1, X31
	017 Add X2, X31, 8
	018 Move X3, X31
	019 Call Simulation.TryGetMeta, X0, X1, X2
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {30}
	024 Move X8, [X31+8]
	025 Compare X8, 0
	026 JumpIfEqual {36}
	027 Move X8, [X8+184]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSET not yet implemented."
	030 Move W8, W31
	031 Move X30, [X31+16]
	032 Move X19, [X31+24]
	033 Move W0, W8
	034 Add X31, X31, 32
	035 Return X0
	036 Call 0x1C17F20

Method: System.Boolean Exists(Fusion.NetworkId id)

Disassembly:
	0x01EA47F8 ADRP X8, 0x225A000
	0x01EA47FC LDR X8, [X8 + 0xB60]
	0x01EA4800 ADD X0, X31, 0x18
	0x01EA4804 LDR X1, [X8]
	0x01EA4808 BL 0x2437440
	0x01EA480C AND X1, X0, 0x0
	0x01EA4810 MOV X0, X19
	0x01EA4814 MOV X2, X31
	0x01EA4818 BL 0x1E94228
	0x01EA481C TBZ X22, 0x0, 0x1EA48EC
	0x01EA4820 LDR W8, [X19 + 0x5C]
	0x01EA4824 MOVZ W9, 0xA0000
	0x01EA4828 AND W9, W8, W9, 0x0
	0x01EA482C CMP W9, 0x80000
	0x01EA4830 B.NE 0x1EA484C
	0x01EA4834 LDR X8, [X21 + 0xB0]
	0x01EA4838 CBZ X8, 0x1EA4A4C
	0x01EA483C LDR W9, [X8 + 0x18]
	0x01EA4840 ORR W9, W9, 0x10
	0x01EA4844 STR W9, [X8 + 0x18]
	0x01EA4848 LDR W8, [X19 + 0x5C]
	0x01EA484C AND W9, W8, 0xC0000
	0x01EA4850 CMP W9, 0x80000
	0x01EA4854 B.EQ 0x1EA4870
	0x01EA4858 TBNZ X8, 0x11, 0x1EA4870
	0x01EA485C LDR X8, [X21 + 0xB0]
	0x01EA4860 CBZ X8, 0x1EA4A4C
	0x01EA4864 LDR W9, [X8 + 0x18]
	0x01EA4868 ORR W9, W9, 0x2
	0x01EA486C STR W9, [X8 + 0x18]
	0x01EA4870 LDR W8, [X19 + 0x58]
	0x01EA4874 CBNZ W8, 0x1EA48A0
	0x01EA4878 LDRB W8, [X19 + 0x63]
	0x01EA487C TBNZ X8, 0x2, 0x1EA4888
	0x01EA4880 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2536000
	007 Move X21, 0x2253000
	008 Move W8, [X22+821]
	009 Move X21, [X21+920]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2253000
	017 Move X0, [X0+920]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+821], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfEqual {27}
	025 Compare W19, 0
	026 JumpIfNotEqual {30}
	027 Call 0x1C17DFC
	028 Compare W19, 0
	029 JumpIfEqual {42}
	030 Move X0, [X20+80]
	031 Compare X0, 0
	032 JumpIfEqual {42}
	033 And X1, X19, 0
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X2, X31
	039 Move X30, [X31+48]
	040 Call Simulation.HasObject, X0, X1
	041 Return X0
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move W0, W31
	047 Move X30, [X31+48]
	048 Return X0

Method: System.Void Despawn(Fusion.NetworkObject networkObject)

Disassembly:
	0x01EA4884 B 0x1EA48A0
	0x01EA4888 LDR X9, [X21 + 0xB0]
	0x01EA488C CBZ X9, 0x1EA4A4C
	0x01EA4890 LDR W10, [X9 + 0x18]
	0x01EA4894 MOV W8, W31
	0x01EA4898 ORR W10, W10, 0x100
	0x01EA489C STR W10, [X9 + 0x18]
	0x01EA48A0 LDRB W9, [X19 + 0x63]
	0x01EA48A4 TBZ X9, 0x2, 0x1EA48BC
	0x01EA48A8 LDR X9, [X21 + 0xB0]
	0x01EA48AC CBZ X9, 0x1EA4A4C
	0x01EA48B0 LDR W10, [X9 + 0x18]
	0x01EA48B4 ORR W10, W10, 0x8
	0x01EA48B8 STR W10, [X9 + 0x18]
	0x01EA48BC CMP W8, 0x1
	0x01EA48C0 B.NE 0x1EA48EC
	0x01EA48C4 LDR X0, [X20 + 0x50]
	0x01EA48C8 CBZ X0, 0x1EA4A4C
	0x01EA48CC MOV X1, X21
	0x01EA48D0 MOV X2, X31
	0x01EA48D4 BL 0x1EC7720
	0x01EA48D8 LDR X8, [X21 + 0xB0]
	0x01EA48DC CBZ X8, 0x1EA4A4C
	0x01EA48E0 LDR W9, [X8 + 0x18]
	0x01EA48E4 ORR W9, W9, 0x1
	0x01EA48E8 STR W9, [X8 + 0x18]
	0x01EA48EC LDR X22, [X20 + 0x50]
	0x01EA48F0 CBZ X22, 0x1EA4A4C
	0x01EA48F4 LDR X21, [X20 + 0x60]
	0x01EA48F8 LDRB W24, [X22 + 0xDB]
	0x01EA48FC MOV X0, X22
	0x01EA4900 MOV X1, X31
	0x01EA4904 BL 0x1EC0810
	0x01EA4908 CMP W0, 0x1
	0x01EA490C B.NE 0x1EA49CC
	0x01EA4910 MOV X0, X22
	0x01EA4914 MOV X1, X31
	0x01EA4918 BL 0x1EBDF30
	0x01EA491C TBNZ X0, 0x0, 0x1EA4A00
	0x01EA4920 ADRP X23, 0x2535000
	0x01EA4924 LDRB W8, [X23 + 0x2EE]
	0x01EA4928 CBNZ W8, 0x1EA4940
	0x01EA492C ADRP X0, 0x2252000
	0x01EA4930 LDR X0, [X0 + 0xE40]
	0x01EA4934 BL 0x1C16CF4
	0x01EA4938 MOVZ W8, 0x1
	0x01EA493C STRB W8, [X23 + 0x2EE]
	0x01EA4940 LDR X8, [X19 + 0x20]
	0x01EA4944 CBZ X8, 0x1EA4A44
	0x01EA4948 LDR X8, [X22]
	0x01EA494C MOV X0, X22
	0x01EA4950 LDR X9, [X8 + 0x268]
	0x01EA4954 LDR X1, [X8 + 0x270]
	0x01EA4958 BLR X9
	0x01EA495C ADRP X25, 0x2252000
	0x01EA4960 LDR X25, [X25 + 0xE40]
	0x01EA4964 MOV X23, X0
	0x01EA4968 LDR X8, [X25]
	0x01EA496C LDR W9, [X8 + 0xE0]
	0x01EA4970 CBNZ W9, 0x1EA497C
	0x01EA4974 MOV X0, X8
	0x01EA4978 BL 0x1C16DFC
	0x01EA497C CMP W23, 0x1
	0x01EA4980 B.LT 0x1EA4A44
	0x01EA4984 LDR X8, [X19 + 0x20]
	0x01EA4988 CBZ X8, 0x1EA4A4C
	0x01EA498C LDR X9, [X22]
	0x01EA4990 LDR W23, [X8 + 0x1C]
	0x01EA4994 MOV X0, X22
	0x01EA4998 LDR X8, [X9 + 0x268]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, [X0+80]
	006 Compare X21, 0
	007 JumpIfEqual {70}
	008 Move X19, X0
	009 Move X20, X1
	010 Move X0, X21
	011 Move X1, X31
	012 Call Simulation.get_Topology, X0
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X0, X21
	015 Move X1, X31
	016 Call Simulation.get_IsServer, X0
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {40}
	021 Move X8, [X21]
	022 Move X0, X21
	023 Move X9, [X8+616]
	024 Move X1, [X8+624]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Compare X20, 0
	027 JumpIfEqual {70}
	028 Move X8, [X20+32]
	029 Compare X8, 0
	030 JumpIfEqual {70}
	031 Move W1, [X8+32]
	032 And X2, X0, 0
	033 Move X0, X21
	034 Move X3, X31
	035 Call 0x1DC08E4
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {65}
	040 Move X0, X19
	041 Move X1, X20
	042 Call NetworkRunner.Exists, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {65}
	047 Compare X20, 0
	048 JumpIfEqual {70}
	049 Move X0, X20
	050 Move X1, X31
	051 Call NetworkObject.get_HasStateAuthority, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {65}
	056 Move X8, [X20+48]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X0, X19
	059 Move X1, X20
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move W2, 10
	063 Move X30, [X31+32]
	064 Move X21, [X31+40]
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Return 
	070 Call 0x1C17F20
	071 Move X0, 0x2250000
	072 Move X0, [X0+1456]
	073 Call 0x1C17D08
	074 Call 0x1C17F10
	075 Move X19, X0
	076 Move X0, 0x225B000
	077 Move X0, [X0+2760]
	078 Call 0x1C17D08
	079 Move X1, X0
	080 Move X0, X19
	081 Move X2, X31
	082 Call InvalidOperationException..ctor, X0, X1
	083 Move X0, 0x225B000
	084 Move X0, [X0+2768]
	085 Call 0x1C17D08
	086 Move X1, X0
	087 Move X0, X19
	088 Call 0x1C17DEC

Method: T GetSingleton()

Disassembly:
	0x0222C524 STR X31, [X20]
	0x0222C528 LDR X8, [X31 + 0x28]
	0x0222C52C MOV W21, W0
	0x0222C530 CBZ X8, 0x222C548
	0x0222C534 LDR X9, [X19 + 0x38]
	0x0222C538 MOV X0, X8
	0x0222C53C MOV X1, X20
	0x0222C540 LDR X2, [X9 + 0x10]
	0x0222C544 BL 0x21A4990
	0x0222C548 MOV W0, W21
	0x0222C54C LDP X20, X19, [X31 + 0x80]
	0x0222C550 LDP X22, X21, [X31 + 0x70]
	0x0222C554 LDP X24, X23, [X31 + 0x60]
	0x0222C558 LDP X26, X25, [X31 + 0x50]
	0x0222C55C LDP X28, X27, [X31 + 0x40]
	0x0222C560 LDR X30, [X31 + 0x30]
	0x0222C564 ADD X31, X31, 0x90
	0x0222C568 RET
	0x0222C56C ADRP X0, 0x1ECC000
	0x0222C570 LDR X0, [X0 + 0x528]
	0x0222C574 BL 0x1C16D08
	0x0222C578 BL 0x1C16F10
	0x0222C57C MOV X20, X0
	0x0222C580 ADRP X0, 0x1ED2000
	0x0222C584 LDR X0, [X0 + 0xF10]
	0x0222C588 BL 0x1C16D08
	0x0222C58C MOV X1, X0
	0x0222C590 MOV X0, X20
	0x0222C594 MOV X2, X31
	0x0222C598 BL 0x330E100
	0x0222C59C B 0x222C5E8
	0x0222C5A0 BL 0x1C16F20
	0x0222C5A4 ADRP X0, 0x1ECF000
	0x0222C5A8 LDR X0, [X0 + 0x578]
	0x0222C5AC BL 0x1C16D08
	0x0222C5B0 BL 0x1C16F10
	0x0222C5B4 MOV X20, X0
	0x0222C5B8 ADRP X0, 0x1ED2000
	0x0222C5BC LDR X0, [X0 + 0xF18]
	0x0222C5C0 BL 0x1C16D08
	0x0222C5C4 MOV X21, X0
	0x0222C5C8 ADRP X0, 0x1ED2000
	0x0222C5CC LDR X0, [X0 + 0xF10]
	0x0222C5D0 BL 0x1C16D08
	0x0222C5D4 MOV X2, X0
	0x0222C5D8 MOV X0, X20
	0x0222C5DC MOV X1, X21
	0x0222C5E0 MOV X3, X31
	0x0222C5E4 BL 0x330E16C
	0x0222C5E8 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X1+56]
	007 Move X20, X1
	008 Move X19, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X20
	012 Call 0x1C5D6E0
	013 Move [X31+8], X31
	014 Compare X19, 0
	015 JumpIfEqual {63}
	016 Move X8, [X20+56]
	017 Move X21, [X8]
	018 Move X8, [X21+56]
	019 Compare X8, 0
	020 JumpIfNotEqual {23}
	021 Move X0, X21
	022 Call 0x1C5D6E0
	023 Move X0, X19
	024 Move X1, X31
	025 Call Component.get_gameObject, X0
	026 Compare X0, 0
	027 JumpIfEqual {63}
	028 Move X8, [X21+56]
	029 Add X1, X31, 8
	030 Move X2, [X8+8]
	031 Call 0x21E7600, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {56}
	036 Move X8, [X20+56]
	037 Move X20, [X8+16]
	038 Move X8, [X20+56]
	039 Compare X8, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X20
	042 Call 0x1C5D6E0
	043 Move X0, X19
	044 Move X1, X31
	045 Call Component.get_gameObject, X0
	046 Compare X0, 0
	047 JumpIfEqual {63}
	048 Move X8, [X20+56]
	049 Move X1, [X8]
	050 Call 0x21E61FC, X0
	051 Move X1, X0
	052 Move [X31+8], X0
	053 Move X0, X19
	054 Move X2, X31
	055 Call NetworkRunner.AddGlobal, X0, X1
	056 Move X0, [X31+8]
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X30, [X31+16]
	060 Move X21, [X31+24]
	061 Add X31, X31, 48
	062 Return X0
	063 Call 0x1C17F20

Method: System.Boolean HasSingleton()

Disassembly:
	0x0222C5EC MOV X1, X19
	0x0222C5F0 BL 0x1C16DEC
	0x0222C5F4 STP X30, X19, [X31 - 0x10]!
	0x0222C5F8 LDR X8, [X0 + 0x38]
	0x0222C5FC CBNZ X8, 0x222C60C
	0x0222C600 MOV X19, X0
	0x0222C604 BL 0x1C5C6E0
	0x0222C608 LDR X8, [X19 + 0x38]
	0x0222C60C LDR X8, [X8]
	0x0222C610 LDR W8, [X8 + 0xFC]
	0x0222C614 ADD W9, W8, 0x3
	0x0222C618 CMP W8, 0x0
	0x0222C61C CSEL W8, W9, W8, LT
	0x0222C620 SBFM W0, W8, 0x2, 0x1F
	0x0222C624 LDP X30, X19, [X31], #0x10
	0x0222C628 RET
	0x0222C62C STP X30, X19, [X31 - 0x10]!
	0x0222C630 LDR X8, [X0 + 0x38]
	0x0222C634 CBNZ X8, 0x222C668
	0x0222C638 MOV X19, X0
	0x0222C63C ADRP X0, 0x1ED2000
	0x0222C640 LDR X0, [X0 + 0x328]
	0x0222C644 BL 0x1C16CF4
	0x0222C648 ADRP X0, 0x1EC7000
	0x0222C64C LDR X0, [X0 + 0x6C0]
	0x0222C650 BL 0x1C16CF4
	0x0222C654 LDR X8, [X19 + 0x38]
	0x0222C658 CBNZ X8, 0x222C668
	0x0222C65C MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X20, X1
	006 Move X19, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {11}
	009 Move X0, X20
	010 Call 0x1C5D6E0
	011 Move [X31+8], X31
	012 Compare X19, 0
	013 JumpIfEqual {35}
	014 Move X8, [X20+56]
	015 Move X20, [X8]
	016 Move X8, [X20+56]
	017 Compare X8, 0
	018 JumpIfNotEqual {21}
	019 Move X0, X20
	020 Call 0x1C5D6E0
	021 Move X0, X19
	022 Move X1, X31
	023 Call Component.get_gameObject, X0
	024 Compare X0, 0
	025 JumpIfEqual {35}
	026 Move X8, [X20+56]
	027 Add X1, X31, 8
	028 Move X2, [X8+8]
	029 Call 0x21E7600, X0, X1
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 And W0, W0, 1
	033 Move X30, [X31+32]
	034 Return X0
	035 Call 0x1C17F20

Method: System.Void DestroySingleton()

Disassembly:
	0x0222BE74 STP X29, X30, [X31 - 0x40]!
	0x0222BE78 STP X24, X23, [X31 + 0x10]
	0x0222BE7C STP X22, X21, [X31 + 0x20]
	0x0222BE80 STP X20, X19, [X31 + 0x30]
	0x0222BE84 SUB X31, X31, 0x210
	0x0222BE88 MRS X23, 0xC000
	0x0222BE8C LDR X8, [X23 + 0x28]
	0x0222BE90 MOV X20, X3
	0x0222BE94 MOV X19, X2
	0x0222BE98 MOV X21, X1
	0x0222BE9C STR X8, [X31 + 0x208]
	0x0222BEA0 LDR X24, [X3 + 0x38]
	0x0222BEA4 MOV X22, X0
	0x0222BEA8 CBNZ X24, 0x222BEB8
	0x0222BEAC MOV X0, X20
	0x0222BEB0 BL 0x1C5C6E0
	0x0222BEB4 LDR X24, [X20 + 0x38]
	0x0222BEB8 ADD X0, X31, 0x158
	0x0222BEBC MOVZ W2, 0xAC
	0x0222BEC0 MOV W1, W31
	0x0222BEC4 BL 0x3EB1B10
	0x0222BEC8 LDR X2, [X24]
	0x0222BECC AND X1, X21, 0x0
	0x0222BED0 ADD X8, X31, 0xA8
	0x0222BED4 MOV X0, X22
	0x0222BED8 BL 0x222B128
	0x0222BEDC ADD X0, X31, 0x158
	0x0222BEE0 ADD X1, X31, 0xA8
	0x0222BEE4 MOVZ W2, 0xAC
	0x0222BEE8 BL 0x3EB1AC0
	0x0222BEEC LDRB W21, [X31 + 0x158]
	0x0222BEF0 CBZ W21, 0x222BF2C
	0x0222BEF4 LDR X8, [X20 + 0x38]
	0x0222BEF8 ADD X0, X31, 0x158
	0x0222BEFC LDR X1, [X8 + 0x28]
	0x0222BF00 ADD X8, X31, 0x0
	0x0222BF04 BL 0x24357C4
	0x0222BF08 ADD X0, X31, 0xA8
	0x0222BF0C ADD X1, X31, 0x0
	0x0222BF10 MOVZ W2, 0xA8
	0x0222BF14 BL 0x3EB1AC0
	0x0222BF18 ADD X1, X31, 0xA8
	0x0222BF1C MOVZ W2, 0xA8
	0x0222BF20 MOV X0, X19
	0x0222BF24 BL 0x3EB1AC0
	0x0222BF28 B 0x222BF3C
	0x0222BF2C MOVZ W2, 0xA8
	0x0222BF30 MOV X0, X19
	0x0222BF34 MOV W1, W31
	0x0222BF38 BL 0x3EB1B10
	0x0222BF3C LDR X8, [X23 + 0x28]
	0x0222BF40 LDR X9, [X31 + 0x208]
	0x0222BF44 CMP W21, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X20, X1
	006 Move X19, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {11}
	009 Move X0, X20
	010 Call 0x1C5D6E0
	011 Move [X31+8], X31
	012 Compare X19, 0
	013 JumpIfEqual {66}
	014 Move X8, [X20+56]
	015 Move X20, [X8]
	016 Move X8, [X20+56]
	017 Compare X8, 0
	018 JumpIfNotEqual {21}
	019 Move X0, X20
	020 Call 0x1C5D6E0
	021 Move X0, X19
	022 Move X1, X31
	023 Call Component.get_gameObject, X0
	024 Compare X0, 0
	025 JumpIfEqual {66}
	026 Move X8, [X20+56]
	027 Add X1, X31, 8
	028 Move X2, [X8+8]
	029 Call 0x21E7600, X0, X1
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {62}
	034 Move X1, [X31+8]
	035 Compare X1, 0
	036 JumpIfEqual {66}
	037 Move X0, X19
	038 Move X2, X31
	039 Move [X1+56], X31
	040 Move [X1+64], X31
	041 Call NetworkRunner.RemoveGlobal, X0, X1
	042 Move X20, 0x21AF000
	043 Move W8, [X20+2173]
	044 Move X19, [X31+8]
	045 Compare W8, 0
	046 JumpIfNotEqual {52}
	047 Move X0, 0x1EC9000
	048 Move X0, [X0+1432]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X20+2173], W8
	052 Move X8, 0x1EC9000
	053 Move X8, [X8+1432]
	054 Move X0, [X8]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, X19
	060 Move X1, X31
	061 Call Object.Destroy, X0
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X30, [X31+32]
	065 Return 
	066 Call 0x1C17F20

Method: System.Void AddGlobal(Fusion.SimulationBehaviour instance)

Disassembly:
	0x01EA4C38 MOV X23, X31

ISIL:
	001 Call NetworkRunner.AddSimulationBehaviour, X0, X1
	002 Return 

Method: System.Void RemoveGlobal(Fusion.SimulationBehaviour instance)

Disassembly:
	0x01EA4C3C LDR W9, [X8 + 0x18]

ISIL:
No ISIL was generated
Method: System.Void AddSimulationBehaviour(Fusion.SimulationBehaviour behaviour)

Disassembly:
	0x01EA2340 LDR X0, [X20 + 0x68]
	0x01EA2344 CBZ X0, 0x1EA2394
	0x01EA2348 LDR X21, [X25, X22, LSL #3]
	0x01EA234C LDR X2, [X23]
	0x01EA2350 MOV X1, X21
	0x01EA2354 BL 0x301C318
	0x01EA2358 TBZ X0, 0x0, 0x1EA2370
	0x01EA235C LDR X0, [X20 + 0x68]
	0x01EA2360 CBZ X0, 0x1EA2394
	0x01EA2364 LDR X2, [X24]
	0x01EA2368 MOV X1, X21
	0x01EA236C BL 0x301D7A8
	0x01EA2370 LDR W8, [X19 + 0x18]
	0x01EA2374 ADD X22, X22, 0x1
	0x01EA2378 CMP X22, W8, SXTW
	0x01EA237C B.LT 0x1EA2338
	0x01EA2380 LDP X20, X19, [X31 + 0x30]
	0x01EA2384 LDP X22, X21, [X31 + 0x20]
	0x01EA2388 LDP X24, X23, [X31 + 0x10]
	0x01EA238C LDP X30, X25, [X31], #0x40
	0x01EA2390 RET
	0x01EA2394 BL 0x1C16F20
	0x01EA2398 BL 0x1C16F28
	0x01EA239C STR X30, [X31 - 0x10]!
	0x01EA23A0 LDR X0, [X0 + 0x50]
	0x01EA23A4 CBZ X0, 0x1EA23B4
	0x01EA23A8 MOV X3, X31
	0x01EA23AC LDR X30, [X31], #0x10
	0x01EA23B0 B 0x1EC9148
	0x01EA23B4 BL 0x1C16F20
	0x01EA23B8 STP X30, X21, [X31 - 0x20]!
	0x01EA23BC STP X20, X19, [X31 + 0x10]
	0x01EA23C0 ADRP X20, 0x2537000
	0x01EA23C4 ADRP X21, 0x225B000
	0x01EA23C8 LDRB W8, [X20 + 0x329]
	0x01EA23CC LDR X21, [X21 + 0x2C8]
	0x01EA23D0 MOV X19, X0
	0x01EA23D4 TBNZ X8, 0x0, 0x1EA23EC
	0x01EA23D8 ADRP X0, 0x225B000
	0x01EA23DC LDR X0, [X0 + 0x2C8]
	0x01EA23E0 BL 0x1C16CF4
	0x01EA23E4 MOVZ W8, 0x1
	0x01EA23E8 STRB W8, [X20 + 0x329]
	0x01EA23EC LDR X0, [X21]
	0x01EA23F0 LDR W8, [X0 + 0xE0]
	0x01EA23F4 CBNZ W8, 0x1EA23FC
	0x01EA23F8 BL 0x1C16DFC
	0x01EA23FC MOV X0, X31
	0x01EA2400 BL 0x1F047B0
	0x01EA2404 MOV X0, X19
	0x01EA2408 LDP X20, X19, [X31 + 0x10]
	0x01EA240C MOVZ W1, 0x1
	0x01EA2410 MOV W2, W31
	0x01EA2414 MOV W3, W31
	0x01EA2418 LDP X30, X21, [X31], #0x20
	0x01EA241C B 0x1E9EECC
	0x01EA2420 SUB X31, X31, 0x30
	0x01EA2424 STP X30, X21, [X31 + 0x10]
	0x01EA2428 STP X20, X19, [X31 + 0x20]
	0x01EA242C ADRP X21, 0x2537000
	0x01EA2430 ADRP X20, 0x2254000
	0x01EA2434 LDRB W8, [X21 + 0x32A]
	0x01EA2438 LDR X20, [X20 + 0x398]
	0x01EA243C MOV X19, X0
	0x01EA2440 TBNZ X8, 0x0, 0x1EA2464
	0x01EA2444 ADRP X0, 0x2251000
	0x01EA2448 LDR X0, [X0 + 0x970]
	0x01EA244C BL 0x1C16CF4
	0x01EA2450 ADRP X0, 0x2254000
	0x01EA2454 LDR X0, [X0 + 0x398]
	0x01EA2458 BL 0x1C16CF4
	0x01EA245C MOVZ W8, 0x1
	0x01EA2460 STRB W8, [X21 + 0x32A]
	0x01EA2464 LDR X0, [X20]
	0x01EA2468 LDR X20, [X19 + 0x50]
	0x01EA246C LDR W8, [X0 + 0xE0]
	0x01EA2470 CBNZ W8, 0x1EA2478
	0x01EA2474 BL 0x1C16DFC
	0x01EA2478 MOV X0, X31
	0x01EA247C BL 0x1E92E48
	0x01EA2480 CBZ X20, 0x1EA2560
	0x01EA2484 AND X1, X0, 0x0
	0x01EA2488 MOV X0, X20
	0x01EA248C MOV X2, X31
	0x01EA2490 BL 0x1EC93AC
	0x01EA2494 TBZ X0, 0x0, 0x1EA2550
	0x01EA2498 LDRB W8, [X19 + 0x5C]
	0x01EA249C TBNZ X8, 0x0, 0x1EA2550
	0x01EA24A0 LDR X0, [X19 + 0x50]
	0x01EA24A4 CBZ X0, 0x1EA2550
	0x01EA24A8 LDR X8, [X19 + 0x98]
	0x01EA24AC CBZ X8, 0x1EA2560
	0x01EA24B0 LDRB W8, [X8 + 0x31]
	0x01EA24B4 CBZ W8, 0x1EA24C8
	0x01EA24B8 MOVZ W8, 0x2
	0x01EA24BC MOV X20, X19
	0x01EA24C0 STR W8, [X20 + 0x58]!
	0x01EA24C4 B 0x1EA2500
	0x01EA24C8 ADRP X8, 0x2251000
	0x01EA24CC LDR X8, [X8 + 0x970]
	0x01EA24D0 LDR X0, [X8]
	0x01EA24D4 LDR W8, [X0 + 0xE0]
	0x01EA24D8 CBNZ W8, 0x1EA24E0
	0x01EA24DC BL 0x1C16DFC
	0x01EA24E0 MOV X0, X31
	0x01EA24E4 BL 0x3C01998
	0x01EA24E8 TBNZ X0, 0x0, 0x1EA2528
	0x01EA24EC MOVZ W8, 0x2
	0x01EA24F0 MOV X20, X19
	0x01EA24F4 STR W8, [X20 + 0x58]!
	0x01EA24F8 LDUR X0, [X20 - 0x8]
	0x01EA24FC CBZ X0, 0x1EA2568
	0x01EA2500 MOV X1, X31
	0x01EA2504 BL 0x1EC03E4
	0x01EA2508 LDR X0, [X19 + 0x60]
	0x01EA250C CBZ X0, 0x1EA2564
	0x01EA2510 MOV X1, X31
	0x01EA2514 BL 0x1E7B514
	0x01EA2518 LDR X0, [X19 + 0x60]
	0x01EA251C MOV X1, X31
	0x01EA2520 BL 0x1E72B98
	0x01EA2524 STR W31, [X20]
	0x01EA2528 LDRB W8, [X19 + 0x40]
	0x01EA252C CBZ W8, 0x1EA2550
	0x01EA2530 LDRB W1, [X19 + 0x48]
	0x01EA2534 LDR W2, [X19 + 0x44]
	0x01EA2538 MOV X0, X19
	0x01EA253C LDP X20, X19, [X31 + 0x20]
	0x01EA2540 LDP X30, X21, [X31 + 0x10]
	0x01EA2544 MOV W3, W31
	0x01EA2548 ADD X31, X31, 0x30
	0x01EA254C B 0x1E9EECC
	0x01EA2550 LDP X20, X19, [X31 + 0x20]
	0x01EA2554 LDP X30, X21, [X31 + 0x10]
	0x01EA2558 ADD X31, X31, 0x30
	0x01EA255C RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2538000
	006 Move W8, [X21+822]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x225D000
	014 Move X0, [X0+2280]
	015 Call 0x1C17CF4
	016 Move X0, 0x225C000
	017 Move X0, [X0+1240]
	018 Call 0x1C17CF4
	019 Move X0, 0x225D000
	020 Move X0, [X0+2560]
	021 Call 0x1C17CF4
	022 Move X0, 0x225D000
	023 Move X0, [X0+2568]
	024 Call 0x1C17CF4
	025 Move X0, 0x225D000
	026 Move X0, [X0+2576]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+822], W8
	030 Move X8, 0x225D000
	031 Move X8, [X8+2568]
	032 Compare X20, 0
	033 JumpIfEqual {37}
	034 Move W9, [X20+48]
	035 And W31, W9, 8
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Move W0, W31
	038 Move X1, [X8]
	039 Move X21, 0x225D000
	040 Move X21, [X21+2576]
	041 Move X2, X31
	042 Call Assert.Always, X0, X1
	043 Compare X20, 0
	044 JumpIfEqual {128}
	045 Move X8, 0x225C000
	046 Move X8, [X8+1240]
	047 Move X9, [X20]
	048 Move X8, [X8]
	049 Move W11, [X9+304]
	050 Move W10, [X8+304]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W0, 1
	053 Move X9, [X9+200]
	054 Add X9, X9, X10
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction CSET not yet implemented."
	058 Move X1, [X21]
	059 Move X2, X31
	060 Call Assert.Always, X0, X1
	061 Move W8, [X20+48]
	062 Move [X20+56], X19
	063 Move [X20+64], X31
	064 And W8, W8, 0xFFFFFFEF
	065 Or W8, W8, 1
	066 Move [X20+48], W8
	067 Move X0, [X19+96]
	068 Compare X0, 0
	069 JumpIfEqual {133}
	070 Move X21, 0x225D000
	071 Move X21, [X21+2280]
	072 Move X1, X20
	073 Move W2, W31
	074 Move X3, X31
	075 Call SimulationBehaviourUpdater.AddBehaviour, X0, X1, X2
	076 Move X1, [X21]
	077 Move X0, X20
	078 Call 0x1C17E00
	079 Compare X0, 0
	080 JumpIfEqual {99}
	081 Move W8, [X19+136]
	082 Move X20, X0
	083 Compare W8, 0
	084 JumpIfEqual {104}
	085 Move X8, [X20]
	086 Move X1, [X21]
	087 NotImplemented "Instruction LDRH not yet implemented."
	088 Compare X9, 0
	089 JumpIfEqual {96}
	090 Move X10, [X8+176]
	091 Add X10, X10, 8
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Subtract X9, X9, 1
	095 Add X10, X10, 16
	096 Move X0, X20
	097 Move W2, W31
	098 Call 0x1C5D788
	099 Move X20, [X31+16]
	100 Move X19, [X31+24]
	101 Move X30, [X31+32]
	102 Move X21, [X31+40]
	103 Return 
	104 Move X0, [X19+144]
	105 Compare X0, 0
	106 JumpIfEqual {151}
	107 Move X8, 0x225D000
	108 Move X8, [X8+2560]
	109 Move X1, X20
	110 Move X20, [X31+16]
	111 Move X19, [X31+24]
	112 Move X2, [X8]
	113 Move X30, [X31+32]
	114 Move X21, [X31+40]
	115 Call Queue`1<Object>.Enqueue, X0, X1
	116 Return 
	117 NotImplemented "Instruction LDRSW not yet implemented."
	118 Add X8, X8, X9
	119 Add X0, X8, 312
	120 Move X2, [X0]
	121 Move X1, [X0+8]
	122 Move X0, X20
	123 Move X20, [X31+16]
	124 Move X19, [X31+24]
	125 Move X30, [X31+32]
	126 Move X21, [X31+40]
	127 CallNoReturn X2
	128 Move X1, [X21]
	129 Move W0, 1
	130 Move X2, X31
	131 Call Assert.Always, X0, X1
	132 Call 0x1C17F20
	133 Move X0, 0x225D000
	134 Move X0, [X0+2584]
	135 Call 0x1C17D08
	136 Call 0x1C17F10
	137 Move X19, X0
	138 Move X0, 0x225D000
	139 Move X0, [X0+2592]
	140 Call 0x1C17D08
	141 Move X1, X0
	142 Move X0, X19
	143 Move X2, X31
	144 Call NullReferenceException..ctor, X0, X1
	145 Move X0, 0x225D000
	146 Move X0, [X0+2600]
	147 Call 0x1C17D08
	148 Move X1, X0
	149 Move X0, X19
	150 Call 0x1C17DEC
	151 Call 0x1C17F20

Method: System.Void RemoveSimulationBehavior(Fusion.SimulationBehaviour behaviour)

Disassembly:
	0x01EA4C40 CMP X23, W9, SXTW
	0x01EA4C44 B.GE 0x1EA4CD0
	0x01EA4C48 CMP X23, X9
	0x01EA4C4C B.CS 0x1EA4D00
	0x01EA4C50 ADD X8, X8, X23, 0x3, LSL
	0x01EA4C54 LDR X0, [X8 + 0x20]
	0x01EA4C58 LDR X1, [X24]
	0x01EA4C5C BL 0x1C16E00
	0x01EA4C60 CBZ X0, 0x1EA4CC0
	0x01EA4C64 LDR X8, [X0]
	0x01EA4C68 LDR X1, [X24]
	0x01EA4C6C MOV X22, X0
	0x01EA4C70 LDRH W9, [X8 + 0x12E]
	0x01EA4C74 CBZ X9, 0x1EA4C98
	0x01EA4C78 LDR X10, [X8 + 0xB0]
	0x01EA4C7C ADD X10, X10, 0x8
	0x01EA4C80 LDUR X11, [X10 - 0x8]
	0x01EA4C84 CMP X11, X1
	0x01EA4C88 B.EQ 0x1EA4CA8
	0x01EA4C8C SUBS X9, X9, 0x1
	0x01EA4C90 ADD X10, X10, 0x10
	0x01EA4C94 B.NE 0x1EA4C80
	0x01EA4C98 MOV X0, X22
	0x01EA4C9C MOV W2, W31
	0x01EA4CA0 BL 0x1C5C788
	0x01EA4CA4 B 0x1EA4CB4
	0x01EA4CA8 LDRSW X9, [X10]
	0x01EA4CAC ADD X8, X8, X9, 0x4, LSL
	0x01EA4CB0 ADD X0, X8, 0x138
	0x01EA4CB4 LDP X8, X1, [X0]
	0x01EA4CB8 MOV X0, X22
	0x01EA4CBC BLR X8
	0x01EA4CC0 LDR X8, [X20 + 0x78]
	0x01EA4CC4 ADD X23, X23, 0x1
	0x01EA4CC8 CBNZ X8, 0x1EA4C3C
	0x01EA4CCC BL 0x1C16F20
	0x01EA4CD0 CBZ X21, 0x1EA4CEC
	0x01EA4CD4 LDR X0, [X21 + 0x40]
	0x01EA4CD8 LDR X8, [X21 + 0x18]
	0x01EA4CDC LDR X3, [X21 + 0x28]
	0x01EA4CE0 MOV X1, X19
	0x01EA4CE4 MOV X2, X20
	0x01EA4CE8 BLR X8
	0x01EA4CEC LDP X20, X19, [X31 + 0x30]
	0x01EA4CF0 LDP X22, X21, [X31 + 0x20]
	0x01EA4CF4 LDP X24, X23, [X31 + 0x10]
	0x01EA4CF8 LDR X30, [X31], #0x40
	0x01EA4CFC RET
	0x01EA4D00 BL 0x1C16F28
	0x01EA4D04 CMP W1, 0x1
	0x01EA4D08 MOV X20, X0
	0x01EA4D0C B.NE 0x1EA4DAC
	0x01EA4D10 MOV X0, X20
	0x01EA4D14 BL 0x3EB1AD0
	0x01EA4D18 MOV X20, X0
	0x01EA4D1C ADRP X0, 0x224F000
	0x01EA4D20 LDR X0, [X0 + 0x7D0]
	0x01EA4D24 BL 0x1C16D08
	0x01EA4D28 LDR X8, [X20]
	0x01EA4D2C LDR X1, [X8]
	0x01EA4D30 BL 0x1C17270
	0x01EA4D34 TBZ X0, 0x0, 0x1EA4D84
	0x01EA4D38 LDR X20, [X20]
	0x01EA4D3C BL 0x3EB1AE0
	0x01EA4D40 ADRP X0, 0x2257000
	0x01EA4D44 LDR X0, [X0 + 0x8B0]
	0x01EA4D48 BL 0x1C16D08
	0x01EA4D4C LDR W8, [X0 + 0xE0]
	0x01EA4D50 CBNZ W8, 0x1EA4D58
	0x01EA4D54 BL 0x1C16DFC
	0x01EA4D58 ADRP X0, 0x225A000
	0x01EA4D5C LDR X0, [X0 + 0x868]
	0x01EA4D60 BL 0x1C16D08
	0x01EA4D64 MOV X2, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2536000
	006 Move W8, [X21+823]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x225B000
	014 Move X0, [X0+2104]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+823], W8
	018 Compare X20, 0
	019 JumpIfEqual {68}
	020 Move [X20+56], X31
	021 Move [X20+64], X31
	022 Move X0, [X19+96]
	023 Compare X0, 0
	024 JumpIfEqual {69}
	025 Move X21, 0x225B000
	026 Move X21, [X21+2104]
	027 Move X1, X20
	028 Move X2, X31
	029 Call SimulationBehaviourUpdater.RemoveBehaviour, X0, X1
	030 Move X1, [X21]
	031 Move X0, X20
	032 Call 0x1C17E00
	033 Compare X0, 0
	034 JumpIfEqual {50}
	035 Move X8, [X0]
	036 Move X1, [X21]
	037 Move X20, X0
	038 NotImplemented "Instruction LDRH not yet implemented."
	039 Compare X9, 0
	040 JumpIfEqual {47}
	041 Move X10, [X8+176]
	042 Add X10, X10, 8
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Subtract X9, X9, 1
	046 Add X10, X10, 16
	047 Move X0, X20
	048 Move W2, W31
	049 Call 0x1C5D788
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return 
	055 NotImplemented "Instruction LDRSW not yet implemented."
	056 Add X8, X8, X9
	057 Add X0, X8, 312
	058 Move X4, [X0]
	059 Move X3, [X0+8]
	060 Move X0, X20
	061 Move X1, X19
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move W2, W31
	065 Move X30, [X31+32]
	066 Move X21, [X31+40]
	067 CallNoReturn X4
	068 Call 0x1C17F20
	069 Move X0, 0x225B000
	070 Move X0, [X0+2584]
	071 Call 0x1C17D08
	072 Call 0x1C17F10
	073 Move X19, X0
	074 Move X0, 0x225B000
	075 Move X0, [X0+2792]
	076 Call 0x1C17D08
	077 Move X1, X0
	078 Move X0, X19
	079 Move X2, X31
	080 Call NullReferenceException..ctor, X0, X1
	081 Move X0, 0x225B000
	082 Move X0, [X0+2800]
	083 Call 0x1C17D08
	084 Move X1, X0
	085 Move X0, X19
	086 Call 0x1C17DEC

Method: System.Void Destroy(Fusion.NetworkObject networkObject, Fusion.NetworkObjectDestroyFlags flags)

Disassembly:
	0x01EA499C LDR X1, [X9 + 0x270]
	0x01EA49A0 BLR X8
	0x01EA49A4 LDR X8, [X25]
	0x01EA49A8 MOV X22, X0
	0x01EA49AC LDR W9, [X8 + 0xE0]
	0x01EA49B0 CBNZ W9, 0x1EA49BC
	0x01EA49B4 MOV X0, X8
	0x01EA49B8 BL 0x1C16DFC
	0x01EA49BC CMP W23, W22
	0x01EA49C0 CSET W4, EQ
	0x01EA49C4 CBNZ X21, 0x1EA4A08
	0x01EA49C8 B 0x1EA4A4C
	0x01EA49CC LDR X8, [X22]
	0x01EA49D0 MOV X0, X22
	0x01EA49D4 LDR X9, [X8 + 0x268]
	0x01EA49D8 LDR X1, [X8 + 0x270]
	0x01EA49DC BLR X9
	0x01EA49E0 LDR X8, [X19 + 0x20]
	0x01EA49E4 CBZ X8, 0x1EA4A4C
	0x01EA49E8 LDR W1, [X8 + 0x20]
	0x01EA49EC AND X2, X0, 0x0
	0x01EA49F0 MOV X0, X22
	0x01EA49F4 MOV X3, X31
	0x01EA49F8 BL 0x1DBF8E4
	0x01EA49FC TBZ X0, 0x0, 0x1EA4920
	0x01EA4A00 MOVZ W4, 0x1
	0x01EA4A04 CBZ X21, 0x1EA4A4C
	0x01EA4A08 CMP W24, 0x0
	0x01EA4A0C CSET W3, NE
	0x01EA4A10 MOV X0, X21
	0x01EA4A14 MOV X1, X20
	0x01EA4A18 MOV X2, X19
	0x01EA4A1C MOV X5, X31
	0x01EA4A20 BL 0x1E7BC64
	0x01EA4A24 LDP X20, X19, [X31 + 0x60]
	0x01EA4A28 LDP X22, X21, [X31 + 0x50]
	0x01EA4A2C LDP X24, X23, [X31 + 0x40]
	0x01EA4A30 LDP X26, X25, [X31 + 0x30]
	0x01EA4A34 LDP X28, X27, [X31 + 0x20]
	0x01EA4A38 LDR X30, [X31 + 0x10]
	0x01EA4A3C ADD X31, X31, 0x70
	0x01EA4A40 RET
	0x01EA4A44 MOV W4, W31
	0x01EA4A48 CBNZ X21, 0x1EA4A08
	0x01EA4A4C BL 0x1C16F20
	0x01EA4A50 LDR X0, [X20 + 0x50]
	0x01EA4A54 CBNZ X0, 0x1EA47A4
	0x01EA4A58 B 0x1EA47B8
	0x01EA4A5C BL 0x1C16F28
	0x01EA4A60 STR X30, [X31 - 0x30]!
	0x01EA4A64 STP X22, X21, [X31 + 0x10]
	0x01EA4A68 STP X20, X19, [X31 + 0x20]
	0x01EA4A6C ADRP X22, 0x2535000
	0x01EA4A70 LDRB W8, [X22 + 0x346]
	0x01EA4A74 MOV W20, W2
	0x01EA4A78 MOV X19, X1
	0x01EA4A7C MOV X21, X0
	0x01EA4A80 TBNZ X8, 0x0, 0x1EA4A98
	0x01EA4A84 ADRP X0, 0x225A000
	0x01EA4A88 LDR X0, [X0 + 0xB68]
	0x01EA4A8C BL 0x1C16CF4
	0x01EA4A90 MOVZ W8, 0x1
	0x01EA4A94 STRB W8, [X22 + 0x346]
	0x01EA4A98 TBNZ X20, 0x0, 0x1EA4AAC
	0x01EA4A9C LDP X20, X19, [X31 + 0x20]
	0x01EA4AA0 LDP X22, X21, [X31 + 0x10]
	0x01EA4AA4 LDR X30, [X31], #0x30
	0x01EA4AA8 RET
	0x01EA4AAC LDR X20, [X21 + 0xB0]
	0x01EA4AB0 CBZ X20, 0x1EA4B24
	0x01EA4AB4 ADRP X10, 0x225A000
	0x01EA4AB8 LDR X8, [X20]
	0x01EA4ABC LDR X10, [X10 + 0xB68]
	0x01EA4AC0 LDRH W9, [X8 + 0x12E]
	0x01EA4AC4 LDR X1, [X10]
	0x01EA4AC8 CBZ X9, 0x1EA4AEC
	0x01EA4ACC LDR X10, [X8 + 0xB0]
	0x01EA4AD0 ADD X10, X10, 0x8
	0x01EA4AD4 LDUR X11, [X10 - 0x8]
	0x01EA4AD8 CMP X11, X1
	0x01EA4ADC B.EQ 0x1EA4AFC
	0x01EA4AE0 SUBS X9, X9, 0x1
	0x01EA4AE4 ADD X10, X10, 0x10
	0x01EA4AE8 B.NE 0x1EA4AD4
	0x01EA4AEC MOV X0, X20
	0x01EA4AF0 MOV W2, W31
	0x01EA4AF4 BL 0x1C5C788
	0x01EA4AF8 B 0x1EA4B08
	0x01EA4AFC LDRSW X9, [X10]
	0x01EA4B00 ADD X8, X8, X9, 0x4, LSL
	0x01EA4B04 ADD X0, X8, 0x138
	0x01EA4B08 LDP X3, X2, [X0]
	0x01EA4B0C MOV X0, X20
	0x01EA4B10 MOV X1, X19
	0x01EA4B14 LDP X20, X19, [X31 + 0x20]
	0x01EA4B18 LDP X22, X21, [X31 + 0x10]
	0x01EA4B1C LDR X30, [X31], #0x30
	0x01EA4B20 BR X3
	0x01EA4B24 BL 0x1C16F20
	0x01EA4B28 STR X30, [X31 - 0x40]!
	0x01EA4B2C STP X24, X23, [X31 + 0x10]
	0x01EA4B30 STP X22, X21, [X31 + 0x20]
	0x01EA4B34 STP X20, X19, [X31 + 0x30]
	0x01EA4B38 ADRP X23, 0x2535000
	0x01EA4B3C LDRB W8, [X23 + 0x347]
	0x01EA4B40 MOV X21, X3
	0x01EA4B44 MOV W22, W2
	0x01EA4B48 MOV X20, X1
	0x01EA4B4C MOV X19, X0
	0x01EA4B50 TBNZ X8, 0x0, 0x1EA4B74
	0x01EA4B54 ADRP X0, 0x225A000
	0x01EA4B58 LDR X0, [X0 + 0xB70]
	0x01EA4B5C BL 0x1C16CF4
	0x01EA4B60 ADRP X0, 0x225A000
	0x01EA4B64 LDR X0, [X0 + 0xB78]
	0x01EA4B68 BL 0x1C16CF4
	0x01EA4B6C MOVZ W8, 0x1
	0x01EA4B70 STRB W8, [X23 + 0x347]
	0x01EA4B74 TBNZ X22, 0x0, 0x1EA4C24
	0x01EA4B78 CBZ X20, 0x1EA4CCC
	0x01EA4B7C LDR X8, [X20 + 0x78]
	0x01EA4B80 CBZ X8, 0x1EA4CCC
	0x01EA4B84 ADRP X24, 0x225A000
	0x01EA4B88 LDR X24, [X24 + 0xB78]
	0x01EA4B8C MOV X23, X31
	0x01EA4B90 LDR W9, [X8 + 0x18]
	0x01EA4B94 CMP X23, W9, SXTW
	0x01EA4B98 B.GE 0x1EA4CD0
	0x01EA4B9C CMP X23, X9
	0x01EA4BA0 B.CS 0x1EA4D00
	0x01EA4BA4 ADD X8, X8, X23, 0x3, LSL
	0x01EA4BA8 LDR X0, [X8 + 0x20]
	0x01EA4BAC LDR X1, [X24]
	0x01EA4BB0 BL 0x1C16E00
	0x01EA4BB4 CBZ X0, 0x1EA4C14
	0x01EA4BB8 LDR X8, [X0]
	0x01EA4BBC LDR X1, [X24]
	0x01EA4BC0 MOV X22, X0
	0x01EA4BC4 LDRH W9, [X8 + 0x12E]
	0x01EA4BC8 CBZ X9, 0x1EA4BEC
	0x01EA4BCC LDR X10, [X8 + 0xB0]
	0x01EA4BD0 ADD X10, X10, 0x8
	0x01EA4BD4 LDUR X11, [X10 - 0x8]
	0x01EA4BD8 CMP X11, X1
	0x01EA4BDC B.EQ 0x1EA4BFC
	0x01EA4BE0 SUBS X9, X9, 0x1
	0x01EA4BE4 ADD X10, X10, 0x10
	0x01EA4BE8 B.NE 0x1EA4BD4
	0x01EA4BEC MOV X0, X22
	0x01EA4BF0 MOV W2, W31
	0x01EA4BF4 BL 0x1C5C788
	0x01EA4BF8 B 0x1EA4C08
	0x01EA4BFC LDRSW X9, [X10]
	0x01EA4C00 ADD X8, X8, X9, 0x4, LSL
	0x01EA4C04 ADD X0, X8, 0x138
	0x01EA4C08 LDP X8, X1, [X0]
	0x01EA4C0C MOV X0, X22
	0x01EA4C10 BLR X8
	0x01EA4C14 LDR X8, [X20 + 0x78]
	0x01EA4C18 ADD X23, X23, 0x1
	0x01EA4C1C CBNZ X8, 0x1EA4B90
	0x01EA4C20 B 0x1EA4CCC
	0x01EA4C24 CBZ X20, 0x1EA4CCC
	0x01EA4C28 LDR X8, [X20 + 0x78]
	0x01EA4C2C CBZ X8, 0x1EA4CCC
	0x01EA4C30 ADRP X24, 0x225A000
	0x01EA4C34 LDR X24, [X24 + 0xB70]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0x2536000
	012 Move W8, [X22+824]
	013 Move W20, W2
	014 Move X19, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x225B000
	021 Move X0, [X0+2776]
	022 Call 0x1C17CF4
	023 Move X0, 0x225B000
	024 Move X0, [X0+2784]
	025 Call 0x1C17CF4
	026 Move X0, 0x225A000
	027 Move X0, [X0+4048]
	028 Call 0x1C17CF4
	029 Move X0, 0x225A000
	030 Move X0, [X0+4056]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+824], W8
	034 Move X0, X21
	035 Move X1, X19
	036 Call NetworkRunner.Exists, X0, X1
	037 Move X8, [X21+112]
	038 Compare X8, 0
	039 JumpIfEqual {173}
	040 Move W22, [X8+24]
	041 Move W23, W0
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {125}
	046 Compare X19, 0
	047 JumpIfEqual {173}
	048 Move X9, [X19+32]
	049 Compare X9, 0
	050 JumpIfEqual {52}
	051 Move W1, [X9]
	052 Move X1, X31
	053 Move X24, 0x225B000
	054 Move X24, [X24+2776]
	055 Move W11, [X8+28]
	056 Move X9, [X8+16]
	057 Move X10, [X24]
	058 Add W11, W11, 1
	059 Move [X8+28], W11
	060 Compare X9, 0
	061 JumpIfEqual {173}
	062 Move W11, [X9+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X10, W22
	065 Add W11, W22, 1
	066 Move [X8+24], W11
	067 Add X8, X9, X10
	068 Move [X8+32], W1
	069 Move X9, [X10+32]
	070 Move X0, X8
	071 Move X9, [X9+192]
	072 Move X2, [X9+112]
	073 Call List`1<NetworkId>.AddWithResize, X0, X1
	074 Move W0, [X19+96]
	075 Move W1, 0x1000000
	076 Move X2, X31
	077 Call NetworkObjectRuntimeFlagsExtensions.CheckFlag, X0, X1
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {122}
	082 Move X25, [X19+112]
	083 Compare X25, 0
	084 JumpIfEqual {173}
	085 Move W8, [X25+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move W26, W31
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Add X8, X25, W26
	090 Move X8, [X8+32]
	091 Compare X8, 0
	092 JumpIfEqual {173}
	093 Move X8, [X8+32]
	094 Compare X8, 0
	095 JumpIfEqual {97}
	096 Move W1, [X8]
	097 Move X1, X31
	098 Move X0, [X21+112]
	099 Compare X0, 0
	100 JumpIfEqual {173}
	101 Move W10, [X0+28]
	102 Move X8, [X0+16]
	103 Move X9, [X24]
	104 Add W10, W10, 1
	105 Move [X0+28], W10
	106 Compare X8, 0
	107 JumpIfEqual {173}
	108 NotImplemented "Instruction LDRSW not yet implemented."
	109 Move W11, [X8+24]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Add W9, W10, 1
	112 Add X8, X8, X10
	113 Move [X0+24], W9
	114 Move [X8+32], W1
	115 Move X8, [X9+32]
	116 Move X8, [X8+192]
	117 Move X2, [X8+112]
	118 Call List`1<NetworkId>.AddWithResize, X0, X1
	119 Move W8, [X25+24]
	120 Add W26, W26, 1
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X8, [X21+112]
	123 Compare X8, 0
	124 JumpIfEqual {173}
	125 Move W24, [X8+24]
	126 Move W1, 1
	127 Move W0, W20
	128 Move X2, X31
	129 Call NetworkObjectDestroyFlagsExtensions.Get, X0, X1
	130 And W2, W0, 1
	131 And W3, W23, 1
	132 Move X0, X21
	133 Move X1, X19
	134 Call NetworkRunner.DetachInstance, X0, X1, X2, X3
	135 Move TEMP, X23
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {180}
	139 Move X0, [X21+112]
	140 Compare X0, 0
	141 JumpIfEqual {173}
	142 Move X27, 0x225A000
	143 Move X27, [X27+4056]
	144 Subtract W23, W24, W22
	145 NotImplemented "Instruction CSEL not yet implemented."
	146 Move W24, W22
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X2, [X27]
	149 Move W1, W24
	150 Call List`1<NetworkId>.get_Item, X0, X1
	151 And X25, X0, 0
	152 Move X0, X21
	153 Move X1, X25
	154 Call NetworkRunner.Exists, X0, X1
	155 Move TEMP, X0
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfNotEqual {169}
	159 Move X8, [X21+80]
	160 Compare X8, 0
	161 JumpIfEqual {173}
	162 Move X0, [X8+168]
	163 Compare X0, 0
	164 JumpIfEqual {173}
	165 Move X1, X25
	166 Move W2, W20
	167 Move X3, X31
	168 Call StateReplicator.OnObjectDestroyed, X0, X1, X2
	169 Move X0, [X21+112]
	170 Add W24, W24, 1
	171 Compare X0, 0
	172 JumpIfNotEqual {147}
	173 Call 0x1C17F20
	174 Move X8, 0x225B000
	175 Move X8, [X8+2784]
	176 Move W1, W22
	177 Move W2, W23
	178 Move X3, [X8]
	179 Call List`1<NetworkId>.RemoveRange, X0, X1, X2
	180 Compare X19, 0
	181 JumpIfEqual {173}
	182 Move X8, [X19+56]
	183 Compare X8, 0
	184 JumpIfEqual {187}
	185 Move [X8+184], X31
	186 Move [X19+56], X31
	187 Move X20, [X31+64]
	188 Move X19, [X31+72]
	189 Move X22, [X31+48]
	190 Move X21, [X31+56]
	191 Move X24, [X31+32]
	192 Move X23, [X31+40]
	193 Move X26, [X31+16]
	194 Move X25, [X31+24]
	195 Move X30, [X31+80]
	196 Move X27, [X31+88]
	197 Return 
	198 Call 0x1C17F28

Method: System.Void DetachInstance(Fusion.NetworkObject obj, System.Boolean destroyedByEngine, System.Boolean hasState)

Disassembly:
	0x01EA0F74 LDP X22, X21, [X31 + 0x40]
	0x01EA0F78 LDP X24, X23, [X31 + 0x30]
	0x01EA0F7C LDP X26, X25, [X31 + 0x20]
	0x01EA0F80 LDP X30, X27, [X31 + 0x10]
	0x01EA0F84 LDR X29, [X31], #0x60
	0x01EA0F88 RET
	0x01EA0F8C BL 0x1C16F20
	0x01EA0F90 BL 0x1C16F28
	0x01EA0F94 ADRP X0, 0x2253000
	0x01EA0F98 LDR X0, [X0 + 0x5B0]
	0x01EA0F9C BL 0x1C16D08
	0x01EA0FA0 BL 0x1C16F10
	0x01EA0FA4 MOV X19, X0
	0x01EA0FA8 ADRP X0, 0x225E000
	0x01EA0FAC LDR X0, [X0 + 0x9D0]
	0x01EA0FB0 B 0x1EA0FF8
	0x01EA0FB4 ADRP X0, 0x2253000
	0x01EA0FB8 LDR X0, [X0 + 0x5B0]
	0x01EA0FBC BL 0x1C16D08
	0x01EA0FC0 BL 0x1C16F10
	0x01EA0FC4 MOV X19, X0
	0x01EA0FC8 ADRP X0, 0x225E000
	0x01EA0FCC LDR X0, [X0 + 0x9D8]
	0x01EA0FD0 B 0x1EA0FF8
	0x01EA0FD4 BL 0x1C16F20
	0x01EA0FD8 BL 0x1C16F20
	0x01EA0FDC ADRP X0, 0x2253000
	0x01EA0FE0 LDR X0, [X0 + 0x5B0]
	0x01EA0FE4 BL 0x1C16D08
	0x01EA0FE8 BL 0x1C16F10
	0x01EA0FEC MOV X19, X0
	0x01EA0FF0 ADRP X0, 0x225E000
	0x01EA0FF4 LDR X0, [X0 + 0x9E0]
	0x01EA0FF8 BL 0x1C16D08
	0x01EA0FFC MOV X1, X0
	0x01EA1000 MOV X0, X19
	0x01EA1004 MOV X2, X31
	0x01EA1008 BL 0x337DF1C
	0x01EA100C ADRP X0, 0x225D000
	0x01EA1010 LDR X0, [X0 + 0x9E8]
	0x01EA1014 BL 0x1C16D08
	0x01EA1018 MOV X1, X0
	0x01EA101C MOV X0, X19
	0x01EA1020 BL 0x1C16DEC
	0x01EA1024 BL 0x3EB1B20
	0x01EA1028 CMP W1, 0x1
	0x01EA102C MOV X21, X0
	0x01EA1030 B.NE 0x1EA1168
	0x01EA1034 MOV X0, X21
	0x01EA1038 BL 0x3EB1AD0
	0x01EA103C MOV X21, X0
	0x01EA1040 ADRP X0, 0x2252000
	0x01EA1044 LDR X0, [X0 + 0x7D0]
	0x01EA1048 BL 0x1C16D08
	0x01EA104C LDR X8, [X21]
	0x01EA1050 LDR X1, [X8]
	0x01EA1054 BL 0x1C17270
	0x01EA1058 TBZ X0, 0x0, 0x1EA109C
	0x01EA105C LDR X21, [X21]
	0x01EA1060 BL 0x3EB1AE0
	0x01EA1064 ADRP X0, 0x225A000
	0x01EA1068 LDR X0, [X0 + 0x8B0]
	0x01EA106C BL 0x1C16D08
	0x01EA1070 LDR W8, [X0 + 0xE0]
	0x01EA1074 CBNZ W8, 0x1EA107C
	0x01EA1078 BL 0x1C16DFC
	0x01EA107C ADRP X0, 0x225D000
	0x01EA1080 LDR X0, [X0 + 0x868]
	0x01EA1084 BL 0x1C16D08
	0x01EA1088 MOV X2, X0
	0x01EA108C MOV X0, X19
	0x01EA1090 MOV X1, X21
	0x01EA1094 BL 0x2213878
	0x01EA1098 B 0x1EA0EA4
	0x01EA109C MOVZ W0, 0x8
	0x01EA10A0 BL 0x3EB1AF0
	0x01EA10A4 LDR X8, [X21]
	0x01EA10A8 STR X8, [X0]
	0x01EA10AC ADRP X1, 0x2013000
	0x01EA10B0 ADD X1, X1, 0xE58
	0x01EA10B4 MOV X2, X31
	0x01EA10B8 BL 0x3EB1B00
	0x01EA10BC B 0x1EA1160
	0x01EA10C0 MOV X21, X0
	0x01EA10C4 BL 0x3EB1AE0
	0x01EA10C8 B 0x1EA1168
	0x01EA10CC CMP W1, 0x1
	0x01EA10D0 MOV X21, X0
	0x01EA10D4 B.NE 0x1EA1168
	0x01EA10D8 MOV X0, X21
	0x01EA10DC BL 0x3EB1AD0
	0x01EA10E0 MOV X21, X0
	0x01EA10E4 ADRP X0, 0x2252000
	0x01EA10E8 LDR X0, [X0 + 0x7D0]
	0x01EA10EC BL 0x1C16D08
	0x01EA10F0 LDR X8, [X21]
	0x01EA10F4 LDR X1, [X8]
	0x01EA10F8 BL 0x1C17270
	0x01EA10FC TBZ X0, 0x0, 0x1EA1140
	0x01EA1100 LDR X21, [X21]
	0x01EA1104 BL 0x3EB1AE0
	0x01EA1108 ADRP X0, 0x225A000
	0x01EA110C LDR X0, [X0 + 0x8B0]
	0x01EA1110 BL 0x1C16D08
	0x01EA1114 LDR W8, [X0 + 0xE0]
	0x01EA1118 CBNZ W8, 0x1EA1120
	0x01EA111C BL 0x1C16DFC
	0x01EA1120 ADRP X0, 0x225D000
	0x01EA1124 LDR X0, [X0 + 0x868]
	0x01EA1128 BL 0x1C16D08
	0x01EA112C MOV X2, X0
	0x01EA1130 MOV X0, X19
	0x01EA1134 MOV X1, X21
	0x01EA1138 BL 0x2213878
	0x01EA113C B 0x1EA0D64
	0x01EA1140 MOVZ W0, 0x8
	0x01EA1144 BL 0x3EB1AF0
	0x01EA1148 LDR X8, [X21]
	0x01EA114C STR X8, [X0]
	0x01EA1150 ADRP X1, 0x2013000
	0x01EA1154 ADD X1, X1, 0xE58
	0x01EA1158 MOV X2, X31
	0x01EA115C BL 0x3EB1B00
	0x01EA1160 MOV X21, X0
	0x01EA1164 BL 0x3EB1AE0
	0x01EA1168 MOV X0, X21
	0x01EA116C BL 0x1D2C690
	0x01EA1170 BL 0x1990590
	0x01EA1174 STP X30, X21, [X31 - 0x20]!
	0x01EA1178 STP X20, X19, [X31 + 0x10]
	0x01EA117C ADRP X19, 0x2538000
	0x01EA1180 ADRP X20, 0x225A000
	0x01EA1184 LDRB W8, [X19 + 0x349]
	0x01EA1188 LDR X20, [X20 + 0x8B0]
	0x01EA118C TBNZ X8, 0x0, 0x1EA11C8
	0x01EA1190 ADRP X0, 0x2252000
	0x01EA1194 LDR X0, [X0 + 0xA28]
	0x01EA1198 BL 0x1C16CF4
	0x01EA119C ADRP X0, 0x225D000
	0x01EA11A0 LDR X0, [X0 + 0x9F0]
	0x01EA11A4 BL 0x1C16CF4
	0x01EA11A8 ADRP X0, 0x225A000
	0x01EA11AC LDR X0, [X0 + 0x8B0]
	0x01EA11B0 BL 0x1C16CF4
	0x01EA11B4 ADRP X0, 0x225D000
	0x01EA11B8 LDR X0, [X0 + 0x9F8]
	0x01EA11BC BL 0x1C16CF4
	0x01EA11C0 MOVZ W8, 0x1
	0x01EA11C4 STRB W8, [X19 + 0x349]
	0x01EA11C8 LDR X0, [X20]
	0x01EA11CC LDR W8, [X0 + 0xE0]
	0x01EA11D0 CBNZ W8, 0x1EA11D8
	0x01EA11D4 BL 0x1C16DFC
	0x01EA11D8 MOV X0, X31
	0x01EA11DC BL 0x1E3E40C
	0x01EA11E0 TBZ X0, 0x0, 0x1EA11F0
	0x01EA11E4 LDP X20, X19, [X31 + 0x10]
	0x01EA11E8 LDP X30, X21, [X31], #0x20
	0x01EA11EC RET
	0x01EA11F0 ADRP X8, 0x2252000
	0x01EA11F4 LDR X8, [X8 + 0xA28]
	0x01EA11F8 ADRP X21, 0x225D000
	0x01EA11FC ADRP X19, 0x225D000
	0x01EA1200 LDR X0, [X8]
	0x01EA1204 LDR W8, [X0 + 0xE0]
	0x01EA1208 LDR X21, [X21 + 0x9F8]
	0x01EA120C LDR X19, [X19 + 0x9F0]
	0x01EA1210 CBNZ W8, 0x1EA1218
	0x01EA1214 BL 0x1C16DFC
	0x01EA1218 LDR X0, [X21]
	0x01EA121C MOV X1, X31
	0x01EA1220 BL 0x3C06A04
	0x01EA1224 LDR X0, [X19]
	0x01EA1228 BL 0x1C16F10
	0x01EA122C MOV X1, X31
	0x01EA1230 MOV X19, X0
	0x01EA1234 BL 0x1E8CDF4
	0x01EA1238 LDR X0, [X20]
	0x01EA123C LDR W8, [X0 + 0xE0]
	0x01EA1240 CBNZ W8, 0x1EA1248
	0x01EA1244 BL 0x1C16DFC
	0x01EA1248 MOV X0, X19
	0x01EA124C LDP X20, X19, [X31 + 0x10]
	0x01EA1250 MOVZ W1, 0x3
	0x01EA1254 MOV X2, X31
	0x01EA1258 LDP X30, X21, [X31], #0x20
	0x01EA125C B 0x1E3E2B4
	0x01EA1260 SUB X31, X31, 0x40
	0x01EA1264 STP X30, X23, [X31 + 0x10]
	0x01EA1268 STP X22, X21, [X31 + 0x20]
	0x01EA126C STP X20, X19, [X31 + 0x30]
	0x01EA1270 ADRP X19, 0x2538000
	0x01EA1274 ADRP X22, 0x2252000
	0x01EA1278 LDRB W8, [X19 + 0x34A]
	0x01EA127C LDR X22, [X22 + 0x5A8]
	0x01EA1280 MOV X21, X0
	0x01EA1284 TBNZ X8, 0x0, 0x1EA12B4
	0x01EA1288 ADRP X0, 0x2252000
	0x01EA128C LDR X0, [X0 + 0x5A8]
	0x01EA1290 BL 0x1C16CF4
	0x01EA1294 ADRP X0, 0x2259000
	0x01EA1298 LDR X0, [X0 + 0x5F0]
	0x01EA129C BL 0x1C16CF4
	0x01EA12A0 ADRP X0, 0x2253000
	0x01EA12A4 LDR X0, [X0 + 0x470]
	0x01EA12A8 BL 0x1C16CF4
	0x01EA12AC MOVZ W8, 0x1
	0x01EA12B0 STRB W8, [X19 + 0x34A]
	0x01EA12B4 ADRP X23, 0x2253000
	0x01EA12B8 LDR X19, [X21 + 0x98]
	0x01EA12BC LDR X20, [X21 + 0x78]
	0x01EA12C0 LDR X23, [X23 + 0x470]
	0x01EA12C4 MOV X0, X31
	0x01EA12C8 BL 0x1EDDABC
	0x01EA12CC LDR X8, [X22]
	0x01EA12D0 LDR W22, [X21 + 0x8C]
	0x01EA12D4 MOV W21, W0
	0x01EA12D8 LDR W9, [X8 + 0xE0]
	0x01EA12DC CBNZ W9, 0x1EA12E8
	0x01EA12E0 MOV X0, X8
	0x01EA12E4 BL 0x1C16DFC
	0x01EA12E8 ADD W1, W22, 0x1
	0x01EA12EC MOV W0, W21
	0x01EA12F0 MOV X2, X31
	0x01EA12F4 BL 0x337EDF0
	0x01EA12F8 LDR X2, [X23]
	0x01EA12FC MOV W1, W0

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X22, 0x253A000
	015 Move W8, [X22+825]
	016 Move W24, W3
	017 Move W21, W2
	018 Move X20, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0x225F000
	025 Move X0, [X0+2208]
	026 Call 0x1C17CF4
	027 Move X0, 0x225F000
	028 Move X0, [X0+1848]
	029 Call 0x1C17CF4
	030 Move X0, 0x2257000
	031 Move X0, [X0+920]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+825], W8
	035 Move [X31+8], X31
	036 Move [X31+16], X31
	037 Move [X31+24], X31
	038 Move [X31], X31
	039 Compare X20, 0
	040 JumpIfEqual {249}
	041 Move X8, [X20+32]
	042 Compare X8, 0
	043 JumpIfEqual {45}
	044 Move W25, [X8]
	045 Move W25, W31
	046 Move W0, [X20+96]
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move W1, 4
	049 Move X2, X31
	050 Call NetworkObjectRuntimeFlagsExtensions.CheckFlag, X0, X1
	051 Move W8, [X20+88]
	052 Move W23, W0
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Compare W8, 0
	055 JumpIfNotEqual {84}
	056 Move X0, [X19+80]
	057 Compare X0, 0
	058 JumpIfEqual {84}
	059 Move X8, [X20+32]
	060 Compare X8, 0
	061 JumpIfEqual {69}
	062 Move W1, [X8]
	063 Move X0, [X19+80]
	064 Compare X0, 0
	065 JumpIfEqual {84}
	066 Move W1, W25
	067 Move X2, X31
	068 Call Simulation.RemoveFromGlobalObjectInterest, X0, X1
	069 Move X1, X31
	070 Add X2, X31, 0
	071 Move X3, X31
	072 Call Simulation.TryGetMeta, X0, X1, X2
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {84}
	077 Move X0, [X19+80]
	078 Compare X0, 0
	079 JumpIfEqual {248}
	080 Move X1, [X31]
	081 Move W2, W31
	082 Move X3, X31
	083 Call Simulation.AOI_RemoveFromAreaOfInterest, X0, X1, X2
	084 Move X26, 0x2256000
	085 Move X26, [X26+920]
	086 Move X0, [X26]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfEqual {183}
	090 Compare W25, 0
	091 JumpIfEqual {186}
	092 Move W0, [X20+96]
	093 Move W1, 0x800000
	094 Move X2, X31
	095 Call NetworkObjectRuntimeFlagsExtensions.CheckFlag, X0, X1
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {104}
	100 And W2, W24, 1
	101 Move X0, X19
	102 Move X1, X20
	103 Call NetworkRunner.InvokeDespawnedCallback, X0, X1, X2
	104 Move TEMP, X21
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfEqual {180}
	108 Move W0, [X20+96]
	109 Move W1, 0x1000000
	110 Move X2, X31
	111 Call NetworkObjectRuntimeFlagsExtensions.CheckFlag, X0, X1
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {180}
	116 Move X27, [X20+112]
	117 Compare X27, 0
	118 JumpIfEqual {248}
	119 Move W8, [X27+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move W28, W31
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Add X8, X27, W28
	124 Move X25, [X8+32]
	125 Compare X25, 0
	126 JumpIfEqual {248}
	127 Move W0, [X25+96]
	128 Move W1, 0x800000
	129 Move X2, X31
	130 Call NetworkObjectRuntimeFlagsExtensions.CheckFlag, X0, X1
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfNotEqual {139}
	135 And W2, W24, 1
	136 Move X0, X19
	137 Move X1, X25
	138 Call NetworkRunner.InvokeDespawnedCallback, X0, X1, X2
	139 Move W8, [X27+24]
	140 Add W28, W28, 1
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X0, X19
	143 Move X1, X20
	144 Call NetworkRunner.FreeObject, X0, X1
	145 Move X25, [X20+112]
	146 Compare X25, 0
	147 JumpIfEqual {248}
	148 Move X8, [X25+24]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move X27, X31
	151 And X8, X8, 0
	152 Add X28, X25, 32
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move X24, [X28]
	155 Compare X24, 0
	156 JumpIfEqual {177}
	157 Move W8, [X24+96]
	158 Move TEMP, X8
	159 And TEMP, TEMP, 2
	160 Compare TEMP, 2
	161 JumpIfEqual {177}
	162 Move X8, [X24+32]
	163 Compare X8, 0
	164 JumpIfEqual {166}
	165 Move W29, [X8]
	166 Move W29, W31
	167 Move X0, [X26]
	168 Move W8, [X0+224]
	169 Compare W8, 0
	170 JumpIfNotEqual {172}
	171 Call 0x1C17DFC
	172 Compare W29, 0
	173 JumpIfEqual {177}
	174 Move X0, X19
	175 Move X1, X24
	176 Call NetworkRunner.FreeObject, X0, X1
	177 Move W8, [X25+24]
	178 Add X27, X27, 1
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X0, X19
	181 Move X1, X20
	182 Call NetworkRunner.FreeObject, X0, X1
	183 Call 0x1C17DFC
	184 Compare W25, 0
	185 JumpIfNotEqual {92}
	186 Move X0, X20
	187 Move X1, X31
	188 Call NetworkObject.ResetNetworkState, X0
	189 Move X0, [X19+200]
	190 Compare X0, 0
	191 JumpIfEqual {248}
	192 Move X8, 0x225E000
	193 Move X8, [X8+2208]
	194 Move X1, X22
	195 Move X2, [X8]
	196 Call Dictionary`2<NetworkObjectTypeId, Object>.Remove, X0, X1
	197 And W3, W21, 1
	198 And W4, W23, 1
	199 Add X0, X31, 8
	200 Move X1, X20
	201 Move X2, X22
	202 Move X5, X31
	203 Call NetworkObjectReleaseContext..ctor, X0, X1, X2, X3, X4
	204 Move X20, [X19+184]
	205 Compare X20, 0
	206 JumpIfEqual {248}
	207 Move X10, 0x225E000
	208 Move X8, [X20]
	209 Move X10, [X10+1848]
	210 NotImplemented "Instruction LDRH not yet implemented."
	211 Move X1, [X10]
	212 Compare X9, 0
	213 JumpIfEqual {220}
	214 Move X10, [X8+176]
	215 Add X10, X10, 8
	216 NotImplemented "Instruction LDUR not yet implemented."
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Subtract X9, X9, 1
	219 Add X10, X10, 16
	220 Move W2, 1
	221 Move X0, X20
	222 Call 0x1C5D788
	223 Move W9, [X10]
	224 Add W9, W9, 1
	225 Add X8, X8, W9
	226 Add X0, X8, 312
	227 Move X8, [X0]
	228 Move X3, [X0+8]
	229 Add X2, X31, 8
	230 Move X0, X20
	231 Move X1, X19
	232 NotImplemented "Instruction BLR not yet implemented."
	233 Move X20, [X31+112]
	234 Move X19, [X31+120]
	235 Move X22, [X31+96]
	236 Move X21, [X31+104]
	237 Move X24, [X31+80]
	238 Move X23, [X31+88]
	239 Move X26, [X31+64]
	240 Move X25, [X31+72]
	241 Move X28, [X31+48]
	242 Move X27, [X31+56]
	243 Move X29, [X31+32]
	244 Move X30, [X31+40]
	245 Add X31, X31, 128
	246 Return 
	247 Call 0x1C17F28
	248 Call 0x1C17F20
	249 Move X0, 0x2258000
	250 Move X0, [X0+1320]
	251 Call 0x1C17D08
	252 Call 0x1C17F10
	253 Move X19, X0
	254 Move X0, 0x225E000
	255 Move X0, [X0+2216]
	256 Call 0x1C17D08
	257 Move X1, X0
	258 Move X0, X19
	259 Move X2, X31
	260 Call ArgumentNullException..ctor, X0, X1
	261 Move X0, 0x225E000
	262 Move X0, [X0+2224]
	263 Call 0x1C17D08
	264 Move X1, X0
	265 Move X0, X19
	266 Call 0x1C17DEC

Method: System.Void FreeObject(Fusion.NetworkObject obj)

Disassembly:
	0x01EA4DF8 LDR X0, [X8, X20, LSL #3]
	0x01EA4DFC CBZ X0, 0x1EA4E40
	0x01EA4E00 MOV X1, X31
	0x01EA4E04 BL 0x1E73D10
	0x01EA4E08 LDR X8, [X19 + 0x78]
	0x01EA4E0C CBZ X8, 0x1EA4E40
	0x01EA4E10 LDR W9, [X8 + 0x18]
	0x01EA4E14 CMP W21, W9
	0x01EA4E18 B.CS 0x1EA4E50
	0x01EA4E1C LDR X0, [X8, X20, LSL #3]
	0x01EA4E20 CBZ X0, 0x1EA4E40
	0x01EA4E24 LDR X8, [X0]
	0x01EA4E28 LDR X9, [X8 + 0x218]
	0x01EA4E2C LDR X1, [X8 + 0x220]
	0x01EA4E30 BLR X9
	0x01EA4E34 LDR X8, [X19 + 0x78]
	0x01EA4E38 ADD X20, X20, 0x1
	0x01EA4E3C CBNZ X8, 0x1EA4DE0
	0x01EA4E40 BL 0x1C16F20
	0x01EA4E44 LDP X20, X19, [X31 + 0x10]
	0x01EA4E48 LDP X30, X21, [X31], #0x20
	0x01EA4E4C RET
	0x01EA4E50 BL 0x1C16F28
	0x01EA4E54 STR X30, [X31 - 0x30]!
	0x01EA4E58 STP X22, X21, [X31 + 0x10]
	0x01EA4E5C STP X20, X19, [X31 + 0x20]
	0x01EA4E60 ADRP X20, 0x2535000
	0x01EA4E64 LDRB W8, [X20 + 0x348]
	0x01EA4E68 MOV X19, X1
	0x01EA4E6C TBNZ X8, 0x0, 0x1EA4E84
	0x01EA4E70 ADRP X0, 0x225A000
	0x01EA4E74 LDR X0, [X0 + 0xB80]
	0x01EA4E78 BL 0x1C16CF4
	0x01EA4E7C MOVZ W8, 0x1
	0x01EA4E80 STRB W8, [X20 + 0x348]
	0x01EA4E84 CBZ X19, 0x1EA4F2C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {34}
	008 Move X8, [X1+120]
	009 Move X19, X1
	010 Compare X8, 0
	011 JumpIfEqual {34}
	012 Move X20, X0
	013 Move W22, W31
	014 Move W9, [X8+24]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X0, [X20+96]
	017 Compare X0, 0
	018 JumpIfEqual {34}
	019 Add X8, X8, W22
	020 Move X21, [X8+32]
	021 Move X2, X31
	022 Move X1, X21
	023 Call SimulationBehaviourUpdater.RemoveBehaviour, X0, X1
	024 Compare X21, 0
	025 JumpIfEqual {34}
	026 Move X0, X21
	027 Move X1, X31
	028 Call NetworkBehaviour.MakeUnowned, X0
	029 Move [X21+80], X31
	030 Move X8, [X19+120]
	031 Add W22, W22, 1
	032 Compare X8, 0
	033 JumpIfNotEqual {14}
	034 Call 0x1C17F20
	035 Move X0, X19
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X1, X31
	041 Move X30, [X31+48]
	042 Call NetworkObject.ResetNetworkState, X0
	043 Return 
	044 Call 0x1C17F28

Method: System.Void Attach(Fusion.NetworkObject networkObject, System.Nullable`1<Fusion.PlayerRef> inputAuthority = null, System.Boolean allocate = True, System.Nullable`1<System.Boolean> masterClientObjectOverride = null)

Disassembly:
	0x01EA4E88 LDR X8, [X19 + 0x78]
	0x01EA4E8C CBZ X8, 0x1EA4F2C
	0x01EA4E90 ADRP X22, 0x225A000
	0x01EA4E94 LDR X22, [X22 + 0xB80]
	0x01EA4E98 MOV X21, X31
	0x01EA4E9C LDR W9, [X8 + 0x18]
	0x01EA4EA0 CMP X21, W9, SXTW
	0x01EA4EA4 B.GE 0x1EA4F30
	0x01EA4EA8 CMP X21, X9
	0x01EA4EAC B.CS 0x1EA4F40
	0x01EA4EB0 ADD X8, X8, X21, 0x3, LSL
	0x01EA4EB4 LDR X0, [X8 + 0x20]
	0x01EA4EB8 LDR X1, [X22]
	0x01EA4EBC BL 0x1C16E00
	0x01EA4EC0 CBZ X0, 0x1EA4F20
	0x01EA4EC4 LDR X8, [X0]
	0x01EA4EC8 LDR X1, [X22]
	0x01EA4ECC MOV X20, X0
	0x01EA4ED0 LDRH W9, [X8 + 0x12E]
	0x01EA4ED4 CBZ X9, 0x1EA4EF8
	0x01EA4ED8 LDR X10, [X8 + 0xB0]
	0x01EA4EDC ADD X10, X10, 0x8
	0x01EA4EE0 LDUR X11, [X10 - 0x8]
	0x01EA4EE4 CMP X11, X1
	0x01EA4EE8 B.EQ 0x1EA4F08
	0x01EA4EEC SUBS X9, X9, 0x1
	0x01EA4EF0 ADD X10, X10, 0x10
	0x01EA4EF4 B.NE 0x1EA4EE0
	0x01EA4EF8 MOV X0, X20
	0x01EA4EFC MOV W2, W31
	0x01EA4F00 BL 0x1C5C788
	0x01EA4F04 B 0x1EA4F14
	0x01EA4F08 LDRSW X9, [X10]
	0x01EA4F0C ADD X8, X8, X9, 0x4, LSL
	0x01EA4F10 ADD X0, X8, 0x138
	0x01EA4F14 LDP X8, X1, [X0]
	0x01EA4F18 MOV X0, X20
	0x01EA4F1C BLR X8
	0x01EA4F20 LDR X8, [X19 + 0x78]
	0x01EA4F24 ADD X21, X21, 0x1
	0x01EA4F28 CBNZ X8, 0x1EA4E9C
	0x01EA4F2C BL 0x1C16F20
	0x01EA4F30 LDP X20, X19, [X31 + 0x20]
	0x01EA4F34 LDP X22, X21, [X31 + 0x10]
	0x01EA4F38 LDR X30, [X31], #0x30
	0x01EA4F3C RET
	0x01EA4F40 BL 0x1C16F28
	0x01EA4F44 SUB X31, X31, 0x50
	0x01EA4F48 STP D11, D10, [X31 + 0x10]
	0x01EA4F4C STP D9, D8, [X31 + 0x20]
	0x01EA4F50 STP X30, X21, [X31 + 0x30]
	0x01EA4F54 STP X20, X19, [X31 + 0x40]
	0x01EA4F58 ADRP X21, 0x2535000
	0x01EA4F5C LDRB W8, [X21 + 0x33B]
	0x01EA4F60 MOV V9.16B, V3.16B
	0x01EA4F64 MOV V8.16B, V2.16B
	0x01EA4F68 MOV V10.16B, V1.16B
	0x01EA4F6C MOV V11.16B, V0.16B
	0x01EA4F70 MOV X19, X1
	0x01EA4F74 MOV X20, X0
	0x01EA4F78 TBNZ X8, 0x0, 0x1EA4FA8
	0x01EA4F7C ADRP X0, 0x225A000
	0x01EA4F80 LDR X0, [X0 + 0xAA0]
	0x01EA4F84 BL 0x1C16CF4
	0x01EA4F88 ADRP X0, 0x2252000
	0x01EA4F8C LDR X0, [X0 + 0xE40]
	0x01EA4F90 BL 0x1C16CF4
	0x01EA4F94 ADRP X0, 0x225A000
	0x01EA4F98 LDR X0, [X0 + 0xB88]
	0x01EA4F9C BL 0x1C16CF4
	0x01EA4FA0 MOVZ W8, 0x1
	0x01EA4FA4 STRB W8, [X21 + 0x33B]
	0x01EA4FA8 STR X31, [X31 + 0x8]
	0x01EA4FAC LDR X0, [X20 + 0x50]
	0x01EA4FB0 CBZ X0, 0x1EA5154
	0x01EA4FB4 MOV X1, X31
	0x01EA4FB8 BL 0x1EBDF30
	0x01EA4FBC TBZ X0, 0x0, 0x1EA5004
	0x01EA4FC0 LDR X0, [X20 + 0x50]
	0x01EA4FC4 CBZ X0, 0x1EA4FE0
	0x01EA4FC8 LDR X8, [X0]
	0x01EA4FCC LDR X9, [X8 + 0x268]
	0x01EA4FD0 LDR X1, [X8 + 0x270]
	0x01EA4FD4 BLR X9
	0x01EA4FD8 MOV X21, X0
	0x01EA4FDC B 0x1EA4FE4
	0x01EA4FE0 MOV W21, W31
	0x01EA4FE4 ADRP X8, 0x2252000
	0x01EA4FE8 LDR X8, [X8 + 0xE40]
	0x01EA4FEC LDR X0, [X8]
	0x01EA4FF0 LDR W8, [X0 + 0xE0]
	0x01EA4FF4 CBNZ W8, 0x1EA4FFC
	0x01EA4FF8 BL 0x1C16DFC
	0x01EA4FFC CMP W21, W19
	0x01EA5000 B.EQ 0x1EA513C
	0x01EA5004 LDR X0, [X20 + 0x50]
	0x01EA5008 CBZ X0, 0x1EA5154
	0x01EA500C MOV X1, X31
	0x01EA5010 BL 0x1EC0864
	0x01EA5014 LDR X21, [X20 + 0x50]
	0x01EA5018 TBZ X0, 0x0, 0x1EA50B4
	0x01EA501C CBZ X21, 0x1EA504C
	0x01EA5020 LDR X8, [X21 + 0x58]
	0x01EA5024 CBZ X8, 0x1EA5154
	0x01EA5028 LDR W8, [X8 + 0x38]
	0x01EA502C CMP W8, 0x1
	0x01EA5030 B.EQ 0x1EA513C
	0x01EA5034 LDR X8, [X21]
	0x01EA5038 MOV X0, X21
	0x01EA503C LDR X9, [X8 + 0x268]
	0x01EA5040 LDR X1, [X8 + 0x270]
	0x01EA5044 BLR X9
	0x01EA5048 MOV X21, X0
	0x01EA504C ADRP X8, 0x2251000
	0x01EA5050 LDR X8, [X8 + 0xE40]
	0x01EA5054 LDR X0, [X8]
	0x01EA5058 LDR W8, [X0 + 0xE0]
	0x01EA505C CBNZ W8, 0x1EA5064
	0x01EA5060 BL 0x1C16DFC
	0x01EA5064 CMP W21, W19
	0x01EA5068 B.NE 0x1EA513C
	0x01EA506C LDR X0, [X20 + 0x50]
	0x01EA5070 CBZ X0, 0x1EA5154
	0x01EA5074 ADRP X9, 0x2259000
	0x01EA5078 LDR X9, [X9 + 0xB88]
	0x01EA507C MOVZ W8, 0x43960000
	0x01EA5080 FMOV S0, W8
	0x01EA5084 FMIN S0, S9, S0
	0x01EA5088 LDR X5, [X9]
	0x01EA508C FMOV W8, S0
	0x01EA5090 FMOV W9, S10
	0x01EA5094 FMOV W2, S11
	0x01EA5098 FMOV W3, S8
	0x01EA509C BFM X2, X9, 0x20, 0x1F
	0x01EA50A0 BFM X3, X8, 0x20, 0x1F
	0x01EA50A4 MOVZ W1, 0x7
	0x01EA50A8 MOV X4, X31
	0x01EA50AC BL 0x2254EF4
	0x01EA50B0 B 0x1EA513C
	0x01EA50B4 CBZ X21, 0x1EA5154
	0x01EA50B8 ADRP X20, 0x2534000
	0x01EA50BC LDRB W8, [X20 + 0x2F1]
	0x01EA50C0 CBNZ W8, 0x1EA50D8
	0x01EA50C4 ADRP X0, 0x2253000
	0x01EA50C8 LDR X0, [X0 + 0x20]
	0x01EA50CC BL 0x1C16CF4
	0x01EA50D0 MOVZ W8, 0x1
	0x01EA50D4 STRB W8, [X20 + 0x2F1]
	0x01EA50D8 LDR X0, [X21 + 0xB8]
	0x01EA50DC CBZ X0, 0x1EA5154
	0x01EA50E0 ADRP X8, 0x2253000
	0x01EA50E4 LDR X8, [X8 + 0x20]
	0x01EA50E8 AND X1, X19, 0x0
	0x01EA50EC ADD X2, X31, 0x8
	0x01EA50F0 LDR X3, [X8]
	0x01EA50F4 BL 0x2AE89D0
	0x01EA50F8 TBZ X0, 0x0, 0x1EA513C
	0x01EA50FC LDR X8, [X31 + 0x8]
	0x01EA5100 CBZ X8, 0x1EA5154
	0x01EA5104 ADRP X9, 0x2259000
	0x01EA5108 LDR X9, [X9 + 0xAA0]
	0x01EA510C LDR X19, [X8 + 0x30]
	0x01EA5110 LDR X0, [X9]
	0x01EA5114 LDR W9, [X0 + 0xE0]
	0x01EA5118 CBNZ W9, 0x1EA5120
	0x01EA511C BL 0x1C16DFC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x2536000
	010 Move W8, [X24+826]
	011 Move X22, X4
	012 Move W23, W3
	013 Move X21, X2
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x225B000
	021 Move X0, [X0+2808]
	022 Call 0x1C17CF4
	023 Move X0, 0x225B000
	024 Move X0, [X0+888]
	025 Call 0x1C17CF4
	026 Move X0, 0x2259000
	027 Move X0, [X0+3712]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X24+826], W8
	031 Compare X19, 0
	032 JumpIfEqual {171}
	033 Move X8, 0x225B000
	034 Move X8, [X8+888]
	035 Add X24, X19, 100
	036 Move X0, [X8]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X24
	042 Move X1, X31
	043 Call NetworkObjectTypeId.get_IsValid, X0
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {183}
	048 Move TEMP, X23
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {61}
	052 Move X8, [X20+56]
	053 Compare X8, 0
	054 JumpIfEqual {61}
	055 Move X9, [X8+24]
	056 Move X0, [X8+64]
	057 Move X3, [X8+40]
	058 Move X1, X20
	059 Move X2, X19
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move X0, X20
	062 Move X1, X19
	063 Move X2, X31
	064 Move X3, X31
	065 Move W4, W31
	066 Call NetworkRunner.InitializeNetworkObjectAssignRunner, X0, X1, X2, X3
	067 Move X0, [X20+200]
	068 Compare X0, 0
	069 JumpIfEqual {170}
	070 Move X8, 0x225B000
	071 Move X8, [X8+2808]
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 Move X2, X19
	074 Move X3, [X8]
	075 Call Dictionary`2<NetworkObjectTypeId, Object>.Add, X0, X1, X2
	076 Move TEMP, X23
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {144}
	080 Move X23, [X20+80]
	081 Compare X23, 0
	082 JumpIfEqual {170}
	083 Move X0, X23
	084 Move X1, X31
	085 Call Simulation.GetNextId, X0
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 Move X25, X0
	088 Move X0, X19
	089 Move X1, X31
	090 Call NetworkObject.GetWordCount, X0
	091 Move W3, W0
	092 And X1, X25, 0
	093 Move X0, X23
	094 Move X2, X24
	095 Move W4, W31
	096 Move X5, X31
	097 Move X6, X31
	098 Move X7, X31
	099 Call Simulation.AllocateObject, X0, X1, X2, X3, X4, X5, X6
	100 Move X1, X0
	101 And X5, X22, 0xFFFF
	102 Move W4, 1
	103 Move X0, X20
	104 Move X2, X19
	105 Move X3, X21
	106 Call NetworkRunner.InitializeNetworkObjectInstance, X0, X1, X2, X3, X4, X5
	107 Move X8, 0x2259000
	108 Move X8, [X8+3712]
	109 Move X0, [X8]
	110 Move W8, [X0+224]
	111 Compare W8, 0
	112 JumpIfNotEqual {114}
	113 Call 0x1C17DFC
	114 Move W0, [X19+96]
	115 Move W1, 1
	116 Move X2, X31
	117 Call NetworkObjectRuntimeFlagsExtensions.CheckFlag, X0, X1
	118 Move TEMP, X0
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfNotEqual {161}
	122 Move W2, 1
	123 Move X0, X20
	124 Move X1, X19
	125 Call NetworkRunner.InitializeNetworkObjectState, X0, X1, X2
	126 Move W2, 1
	127 Move X0, X20
	128 Move X1, X19
	129 Move X3, X31
	130 Call NetworkRunner.InvokeBeforeSpawnedCallbacks, X0, X1, X2, X3
	131 Move X1, X19
	132 Call NetworkRunner.InvokeSpawnedCallback, X0, X1
	133 Move X1, X19
	134 Move X20, [X31+48]
	135 Move X19, [X31+56]
	136 Move X22, [X31+32]
	137 Move X21, [X31+40]
	138 Move X24, [X31+16]
	139 Move X23, [X31+24]
	140 Move X30, [X31+64]
	141 Move X25, [X31+72]
	142 Call NetworkRunner.InvokeAfterSpawnedCallback, X0, X1
	143 Return 
	144 Move X0, X19
	145 Move X1, X31
	146 Call Component.get_gameObject, X0
	147 Compare X0, 0
	148 JumpIfEqual {170}
	149 Move X20, [X31+48]
	150 Move X19, [X31+56]
	151 Move X22, [X31+32]
	152 Move X21, [X31+40]
	153 Move X24, [X31+16]
	154 Move X23, [X31+24]
	155 Move W1, W31
	156 Move X2, X31
	157 Move X30, [X31+64]
	158 Move X25, [X31+72]
	159 Call GameObject.SetActive, X0, X1
	160 Return 
	161 Move X20, [X31+48]
	162 Move X19, [X31+56]
	163 Move X22, [X31+32]
	164 Move X21, [X31+40]
	165 Move X24, [X31+16]
	166 Move X23, [X31+24]
	167 Move X30, [X31+64]
	168 Move X25, [X31+72]
	169 Return 
	170 Call 0x1C17F20
	171 Move X0, 0x2254000
	172 Move X0, [X0+1320]
	173 Call 0x1C17D08
	174 Call 0x1C17F10
	175 Move X19, X0
	176 Move X0, 0x225A000
	177 Move X0, [X0+2816]
	178 Call 0x1C17D08
	179 Move X1, X0
	180 Move X0, X19
	181 Move X2, X31
	182 Call ArgumentNullException..ctor, X0, X1
	183 Move X0, 0x2257000
	184 Move X0, [X0+1400]
	185 Call 0x1C17D08
	186 Call 0x1C17F10
	187 Move X19, X0
	188 Move X0, 0x225A000
	189 Move X0, [X0+2824]
	190 Call 0x1C17D08
	191 Move X20, X0
	192 Move X0, 0x225A000
	193 Move X0, [X0+2816]
	194 Call 0x1C17D08
	195 Move X2, X0
	196 Move X0, X19
	197 Move X1, X20
	198 Move X3, X31
	199 Call ArgumentException..ctor, X0, X1, X2
	200 Move X0, 0x225A000
	201 Move X0, [X0+2832]
	202 Call 0x1C17D08
	203 Move X1, X0
	204 Move X0, X19
	205 Call 0x1C17DEC

Method: System.Void AddPlayerAreaOfInterest(Fusion.PlayerRef player, UnityEngine.Vector3 center, System.Single radius)

Disassembly:
	0x01EA5F44 BL 0x1EA27F0
	0x01EA5F48 TBZ X0, 0x0, 0x1EA6124
	0x01EA5F4C LDR X8, [X19 + 0x50]
	0x01EA5F50 CBZ X8, 0x1EA6168
	0x01EA5F54 LDR X8, [X8 + 0xA8]
	0x01EA5F58 CBZ X8, 0x1EA6168
	0x01EA5F5C LDR X0, [X8 + 0x20]
	0x01EA5F60 CBZ X0, 0x1EA6168
	0x01EA5F64 ADRP X8, 0x2259000
	0x01EA5F68 LDR X8, [X8 + 0xC10]
	0x01EA5F6C LDR X1, [X8]
	0x01EA5F70 ADD X8, X31, 0x8
	0x01EA5F74 BL 0x24F0DF8
	0x01EA5F78 LDUR V0, [X31 + 0x8]
	0x01EA5F7C LDR X8, [X31 + 0x18]
	0x01EA5F80 ADRP X28, 0x2259000
	0x01EA5F84 ADRP X29, 0x2259000
	0x01EA5F88 AND W27, W22, 0xFF
	0x01EA5F8C LDR X28, [X28 + 0xBF8]
	0x01EA5F90 LDR X29, [X29 + 0xC00]
	0x01EA5F94 STR V0, [X31 + 0x3]
	0x01EA5F98 STR X8, [X31 + 0x40]
	0x01EA5F9C ADRP X22, 0x2257000
	0x01EA5FA0 LDR X22, [X22 + 0xE80]
	0x01EA5FA4 LDR X1, [X28]
	0x01EA5FA8 ADD X0, X31, 0x30
	0x01EA5FAC BL 0x2BC3240
	0x01EA5FB0 TBZ X0, 0x0, 0x1EA6110
	0x01EA5FB4 LDR X1, [X29]
	0x01EA5FB8 ADD X0, X31, 0x30
	0x01EA5FBC BL 0x2BC332C
	0x01EA5FC0 MOV X8, X0
	0x01EA5FC4 LDR X0, [X19 + 0x50]
	0x01EA5FC8 CBZ X0, 0x1EA6170
	0x01EA5FCC AND X1, X8, 0x0
	0x01EA5FD0 ADD X2, X31, 0x28
	0x01EA5FD4 MOV X3, X31
	0x01EA5FD8 BL 0x1EC0278
	0x01EA5FDC TBZ X0, 0x0, 0x1EA5FA4
	0x01EA5FE0 LDR X0, [X31 + 0x28]
	0x01EA5FE4 CBZ X0, 0x1EA6174
	0x01EA5FE8 MOV X1, X31
	0x01EA5FEC BL 0x1E97358
	0x01EA5FF0 MOV X8, X0
	0x01EA5FF4 LDR X0, [X26]
	0x01EA5FF8 STR X8, [X31 + 0x20]
	0x01EA5FFC LDR W8, [X0 + 0xE0]
	0x01EA6000 CBNZ W8, 0x1EA6008
	0x01EA6004 BL 0x1C16DFC
	0x01EA6008 ADD X0, X31, 0x20
	0x01EA600C MOV X1, X31
	0x01EA6010 BL 0x1E99108
	0x01EA6014 TBZ X0, 0x0, 0x1EA5FA4
	0x01EA6018 LDR X0, [X31 + 0x28]
	0x01EA601C CBZ X0, 0x1EA6178
	0x01EA6020 MOV X1, X31
	0x01EA6024 BL 0x1E97358
	0x01EA6028 MOV X8, X0
	0x01EA602C LDR X0, [X26]
	0x01EA6030 STR X8, [X31 + 0x20]
	0x01EA6034 LDR W8, [X0 + 0xE0]
	0x01EA6038 CBNZ W8, 0x1EA6040
	0x01EA603C BL 0x1C16DFC
	0x01EA6040 ADD X0, X31, 0x20
	0x01EA6044 MOV X1, X31
	0x01EA6048 BL 0x1E98FD8
	0x01EA604C MOV X25, X1
	0x01EA6050 LDR W1, [X31 + 0x48]
	0x01EA6054 MOV X24, X0
	0x01EA6058 AND X0, X0, 0x0
	0x01EA605C MOV X2, X31
	0x01EA6060 BL 0x1E90228
	0x01EA6064 CMP W27, W25
	0x01EA6068 B.NE 0x1EA5FA4
	0x01EA606C EOR W8, W0, 0x1
	0x01EA6070 TBZ X8, 0x0, 0x1EA5FA4
	0x01EA6074 LDR W9, [X20 + 0x18]
	0x01EA6078 UBFM X8, X24, 0x20, 0x3F
	0x01EA607C CMP W8, W9
	0x01EA6080 B.GE 0x1EA5FA4
	0x01EA6084 SBFM X8, X24, 0x20, 0x3F
	0x01EA6088 CMP W8, W9
	0x01EA608C B.CS 0x1EA61F8
	0x01EA6090 LDR X0, [X22]
	0x01EA6094 ADD X8, X20, X8, 0x3, LSL
	0x01EA6098 LDR X24, [X8 + 0x20]
	0x01EA609C LDR W9, [X0 + 0xE0]
	0x01EA60A0 CBNZ W9, 0x1EA60A8
	0x01EA60A4 BL 0x1C16DFC
	0x01EA60A8 CBZ X24, 0x1EA61FC
	0x01EA60AC LDR W0, [X24 + 0x60]
	0x01EA60B0 MOVZ W1, 0x20000
	0x01EA60B4 MOV X2, X31
	0x01EA60B8 BL 0x1E93D90
	0x01EA60BC TBNZ X0, 0x0, 0x1EA5FA4
	0x01EA60C0 LDR X3, [X31]
	0x01EA60C4 AND X3, X3, 0x0
	0x01EA60C8 MOV X0, X19
	0x01EA60CC MOV X1, X24
	0x01EA60D0 MOV X2, X31
	0x01EA60D4 MOV W4, W31
	0x01EA60D8 STR X3, [X31]
	0x01EA60DC BL 0x1EA4148
	0x01EA60E0 LDR W8, [X24 + 0x60]
	0x01EA60E4 AND X23, X23, 0xFFFFFFFF
	0x01EA60E8 ORR W8, W8, 0x20000
	0x01EA60EC STR W8, [X24 + 0x60]
	0x01EA60F0 LDR X1, [X31 + 0x28]
	0x01EA60F4 MOV X0, X19
	0x01EA60F8 MOV X2, X24
	0x01EA60FC MOV X3, X31
	0x01EA6100 MOV W4, W31
	0x01EA6104 MOV X5, X23
	0x01EA6108 BL 0x1EA44B8
	0x01EA610C B 0x1EA5FA4
	0x01EA6110 ADRP X8, 0x2258000
	0x01EA6114 LDR X8, [X8 + 0xBF0]
	0x01EA6118 ADD X0, X31, 0x30
	0x01EA611C LDR X1, [X8]
	0x01EA6120 BL 0x2BC3230
	0x01EA6124 MOV X0, X19
	0x01EA6128 BL 0x1EA62BC
	0x01EA612C AND W3, W0, 0x1
	0x01EA6130 MOV X0, X19
	0x01EA6134 MOV X1, X20
	0x01EA6138 MOV X2, X31
	0x01EA613C MOV X4, X31
	0x01EA6140 BL 0x1EA55AC
	0x01EA6144 MOV W0, W21
	0x01EA6148 LDP X20, X19, [X31 + 0xA0]
	0x01EA614C LDP X22, X21, [X31 + 0x90]
	0x01EA6150 LDP X24, X23, [X31 + 0x80]
	0x01EA6154 LDP X26, X25, [X31 + 0x70]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x2535000
	011 Move W8, [X21+827]
	012 Move V9, V3
	013 Move V8, V2
	014 Move V10, V1
	015 Move V11, V0
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0x225A000
	023 Move X0, [X0+2720]
	024 Call 0x1C17CF4
	025 Move X0, 0x2252000
	026 Move X0, [X0+3648]
	027 Call 0x1C17CF4
	028 Move X0, 0x225A000
	029 Move X0, [X0+2952]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+827], W8
	033 Move [X31+8], X31
	034 Move X0, [X20+80]
	035 Compare X0, 0
	036 JumpIfEqual {161}
	037 Move X1, X31
	038 Call Simulation.get_IsServer, X0
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {60}
	043 Move X0, [X20+80]
	044 Compare X0, 0
	045 JumpIfEqual {51}
	046 Move X8, [X0]
	047 Move X9, [X8+616]
	048 Move X1, [X8+624]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X21, X0
	051 Move W21, W31
	052 Move X8, 0x2252000
	053 Move X8, [X8+3648]
	054 Move X0, [X8]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X0, [X20+80]
	061 Compare X0, 0
	062 JumpIfEqual {161}
	063 Move X1, X31
	064 Call Simulation.get_IsClient, X0
	065 Move X21, [X20+80]
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {109}
	070 Compare X21, 0
	071 JumpIfEqual {83}
	072 Move X8, [X21+88]
	073 Compare X8, 0
	074 JumpIfEqual {161}
	075 Move W8, [X8+56]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X8, [X21]
	078 Move X0, X21
	079 Move X9, [X8+616]
	080 Move X1, [X8+624]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move X21, X0
	083 Move X8, 0x2251000
	084 Move X8, [X8+3648]
	085 Move X0, [X8]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X0, [X20+80]
	092 Compare X0, 0
	093 JumpIfEqual {161}
	094 Move X9, 0x2259000
	095 Move X9, [X9+2952]
	096 Move W8, 0x43960000
	097 Move S0, W8
	098 NotImplemented "Instruction FMIN not yet implemented."
	099 Move X5, [X9]
	100 Move W8, S0
	101 Move W9, S10
	102 Move W2, S11
	103 Move W3, S8
	104 NotImplemented "Instruction BFM not yet implemented."
	105 NotImplemented "Instruction BFM not yet implemented."
	106 Move W1, 7
	107 Move X4, X31
	108 Call 0x2255EF4, X0, X1, X2, X3
	109 Compare X21, 0
	110 JumpIfEqual {161}
	111 Move X20, 0x2534000
	112 Move W8, [X20+753]
	113 Compare W8, 0
	114 JumpIfNotEqual {120}
	115 Move X0, 0x2253000
	116 Move X0, [X0+32]
	117 Call 0x1C17CF4
	118 Move W8, 1
	119 Move [X20+753], W8
	120 Move X0, [X21+184]
	121 Compare X0, 0
	122 JumpIfEqual {161}
	123 Move X8, 0x2253000
	124 Move X8, [X8+32]
	125 And X1, X19, 0
	126 Add X2, X31, 8
	127 Move X3, [X8]
	128 Call Dictionary`2<PlayerRef, Object>.TryGetValue, X0, X1, X2
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {151}
	133 Move X8, [X31+8]
	134 Compare X8, 0
	135 JumpIfEqual {161}
	136 Move X9, 0x2259000
	137 Move X9, [X9+2720]
	138 Move X19, [X8+48]
	139 Move X0, [X9]
	140 Move W9, [X0+224]
	141 Compare W9, 0
	142 JumpIfNotEqual {144}
	143 Call 0x1C17DFC
	144 Move V0, V11
	145 Move V1, V10
	146 Move V2, V8
	147 Move V3, V9
	148 Move X0, X19
	149 Move X1, X31
	150 Call AreaOfInterest.SphereToCells, X0, V0, X1
	151 Move X20, [X31+64]
	152 Move X19, [X31+72]
	153 Move X30, [X31+48]
	154 Move X21, [X31+56]
	155 Move D9, [X31+32]
	156 Move D8, [X31+40]
	157 Move D11, [X31+16]
	158 Move D10, [X31+24]
	159 Add X31, X31, 80
	160 Return 
	161 Call 0x1C17F20

Method: System.Void ClearPlayerAreaOfInterest(Fusion.PlayerRef player)

Disassembly:
	0x01EA6158 LDP X28, X27, [X31 + 0x60]
	0x01EA615C LDP X29, X30, [X31 + 0x50]
	0x01EA6160 ADD X31, X31, 0xB0
	0x01EA6164 RET
	0x01EA6168 BL 0x1C16F20
	0x01EA616C BL 0x1C16F28
	0x01EA6170 BL 0x1C16F20
	0x01EA6174 BL 0x1C16F20
	0x01EA6178 BL 0x1C16F20
	0x01EA617C ADRP X0, 0x2255000
	0x01EA6180 LDR X0, [X0 + 0x578]
	0x01EA6184 BL 0x1C16D08
	0x01EA6188 BL 0x1C16F10
	0x01EA618C MOV X19, X0
	0x01EA6190 ADRP X0, 0x2258000
	0x01EA6194 LDR X0, [X0 + 0xC20]
	0x01EA6198 BL 0x1C16D08
	0x01EA619C MOV X1, X0
	0x01EA61A0 MOV X0, X19
	0x01EA61A4 MOV X2, X31
	0x01EA61A8 BL 0x3314A68
	0x01EA61AC B 0x1EA61E0
	0x01EA61B0 ADRP X0, 0x2252000
	0x01EA61B4 LDR X0, [X0 + 0x528]
	0x01EA61B8 BL 0x1C16D08
	0x01EA61BC BL 0x1C16F10
	0x01EA61C0 MOV X19, X0
	0x01EA61C4 ADRP X0, 0x2258000
	0x01EA61C8 LDR X0, [X0 + 0xC28]
	0x01EA61CC BL 0x1C16D08
	0x01EA61D0 MOV X1, X0
	0x01EA61D4 MOV X0, X19
	0x01EA61D8 MOV X2, X31
	0x01EA61DC BL 0x330E100
	0x01EA61E0 ADRP X0, 0x2258000
	0x01EA61E4 LDR X0, [X0 + 0xC30]
	0x01EA61E8 BL 0x1C16D08
	0x01EA61EC MOV X1, X0
	0x01EA61F0 MOV X0, X19
	0x01EA61F4 BL 0x1C16DEC
	0x01EA61F8 BL 0x1C16F28
	0x01EA61FC BL 0x1C16F20
	0x01EA6200 B 0x1EA6248
	0x01EA6204 B 0x1EA6248
	0x01EA6208 B 0x1EA6248
	0x01EA620C B 0x1EA6248
	0x01EA6210 B 0x1EA6248
	0x01EA6214 B 0x1EA6248
	0x01EA6218 B 0x1EA6248
	0x01EA621C B 0x1EA6248
	0x01EA6220 B 0x1EA6248
	0x01EA6224 B 0x1EA6248
	0x01EA6228 B 0x1EA6248
	0x01EA622C B 0x1EA6248
	0x01EA6230 B 0x1EA6248
	0x01EA6234 B 0x1EA6248
	0x01EA6238 B 0x1EA6248
	0x01EA623C B 0x1EA6248
	0x01EA6240 B 0x1EA6248
	0x01EA6244 B 0x1EA6248
	0x01EA6248 MOV X22, X0
	0x01EA624C CMP W1, 0x1
	0x01EA6250 B.NE 0x1EA6284
	0x01EA6254 MOV X0, X22
	0x01EA6258 BL 0x3EB1AD0
	0x01EA625C LDR X23, [X0]
	0x01EA6260 BL 0x3EB1AE0
	0x01EA6264 ADRP X8, 0x2258000
	0x01EA6268 LDR X8, [X8 + 0xBF0]
	0x01EA626C ADD X0, X31, 0x30
	0x01EA6270 LDR X1, [X8]
	0x01EA6274 BL 0x2BC3230
	0x01EA6278 CBZ X23, 0x1EA6124
	0x01EA627C MOV X0, X23
	0x01EA6280 BL 0x1C16F18
	0x01EA6284 MOV X23, X31

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2534000
	007 Move W8, [X21+828]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2255000
	015 Move X0, [X0+1656]
	016 Call 0x1C17CF4
	017 Move X0, 0x2251000
	018 Move X0, [X0+3648]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+828], W8
	022 Move X0, [X20+80]
	023 Compare X0, 0
	024 JumpIfEqual {99}
	025 Move X1, X31
	026 Call Simulation.get_IsServer, X0
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {48}
	031 Move X0, [X20+80]
	032 Compare X0, 0
	033 JumpIfEqual {39}
	034 Move X8, [X0]
	035 Move X9, [X8+616]
	036 Move X1, [X8+624]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X21, X0
	039 Move W21, W31
	040 Move X8, 0x2251000
	041 Move X8, [X8+3648]
	042 Move X0, [X8]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X0, [X20+80]
	049 Compare X0, 0
	050 JumpIfEqual {99}
	051 Move X1, X31
	052 Call Simulation.get_IsClient, X0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {93}
	057 Move X20, [X20+80]
	058 Compare X20, 0
	059 JumpIfEqual {99}
	060 Move X21, 0x2533000
	061 Move W8, [X21+2931]
	062 Compare W8, 0
	063 JumpIfNotEqual {69}
	064 Move X0, 0x2253000
	065 Move X0, [X0+32]
	066 Call 0x1C17CF4
	067 Move W8, 1
	068 Move [X21+2931], W8
	069 Move [X31+8], X31
	070 Move X0, [X20+184]
	071 Compare X0, 0
	072 JumpIfEqual {99}
	073 Move X8, 0x2253000
	074 Move X8, [X8+32]
	075 And X1, X19, 0
	076 Add X2, X31, 8
	077 Move X3, [X8]
	078 Call Dictionary`2<PlayerRef, Object>.TryGetValue, X0, X1, X2
	079 Move X8, [X31+8]
	080 Compare X8, 0
	081 JumpIfEqual {93}
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {93}
	086 Move X0, [X8+48]
	087 Compare X0, 0
	088 JumpIfEqual {99}
	089 Move X8, 0x2255000
	090 Move X8, [X8+1656]
	091 Move X1, [X8]
	092 Call HashSet`1<Int32>.Clear, X0
	093 Move X20, [X31+32]
	094 Move X19, [X31+40]
	095 Move X30, [X31+16]
	096 Move X21, [X31+24]
	097 Add X31, X31, 48
	098 Return 
	099 Call 0x1C17F20

Method: System.Nullable`1<System.Boolean> IsInterestedIn(Fusion.NetworkObject obj, Fusion.PlayerRef player)

Disassembly:
	0x01EA6288 B 0x1EA6290
	0x01EA628C MOV X22, X0
	0x01EA6290 ADRP X8, 0x2258000
	0x01EA6294 LDR X8, [X8 + 0xBF0]
	0x01EA6298 LDR X1, [X8]
	0x01EA629C ADD X0, X31, 0x30
	0x01EA62A0 BL 0x2BC3230
	0x01EA62A4 CBNZ X23, 0x1EA62B0
	0x01EA62A8 MOV X0, X22

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 And X2, X2, 0
	006 Move X3, X31
	007 Call 0x1DC0658
	008 And X0, X0, 0xFFFF
	009 Move X30, [X31+16]
	010 Return X0

Method: System.Void SetBehaviourReplicateToAll(Fusion.NetworkBehaviour behaviour, System.Boolean replicate)

Disassembly:
	0x01EA62AC BL 0x1D2C690
	0x01EA62B0 MOV X0, X23
	0x01EA62B4 BL 0x1C16F18
	0x01EA62B8 BL 0x1990590
	0x01EA62BC STP X30, X19, [X31 - 0x10]!
	0x01EA62C0 MOV X19, X0
	0x01EA62C4 LDR X0, [X0 + 0x50]
	0x01EA62C8 CBZ X0, 0x1EA62E4
	0x01EA62CC MOV X1, X31
	0x01EA62D0 BL 0x1EBDF30
	0x01EA62D4 TBZ X0, 0x0, 0x1EA62E4
	0x01EA62D8 MOVZ W0, 0x1
	0x01EA62DC LDP X30, X19, [X31], #0x10
	0x01EA62E0 RET
	0x01EA62E4 MOV X0, X19
	0x01EA62E8 LDP X30, X19, [X31], #0x10
	0x01EA62EC B 0x1EA27F0
	0x01EA62F0 STP X30, X21, [X31 - 0x20]!
	0x01EA62F4 STP X20, X19, [X31 + 0x10]
	0x01EA62F8 ADRP X20, 0x2533000
	0x01EA62FC ADRP X21, 0x2258000
	0x01EA6300 LDRB W8, [X20 + 0x341]
	0x01EA6304 LDR X21, [X21 + 0xC38]
	0x01EA6308 MOV X19, X0
	0x01EA630C TBNZ X8, 0x0, 0x1EA6324
	0x01EA6310 ADRP X0, 0x2258000
	0x01EA6314 LDR X0, [X0 + 0xC38]
	0x01EA6318 BL 0x1C16CF4
	0x01EA631C MOVZ W8, 0x1
	0x01EA6320 STRB W8, [X20 + 0x341]
	0x01EA6324 LDR X0, [X21]
	0x01EA6328 MOV X1, X31
	0x01EA632C BL 0x1E32108
	0x01EA6330 LDR X0, [X19 + 0x60]
	0x01EA6334 MOV X1, X31
	0x01EA6338 BL 0x1E72190
	0x01EA633C LDP X20, X19, [X31 + 0x10]
	0x01EA6340 MOV X0, X31
	0x01EA6344 LDP X30, X21, [X31], #0x20
	0x01EA6348 B 0x1E32194
	0x01EA634C SUB X31, X31, 0x40
	0x01EA6350 STP X30, X23, [X31 + 0x10]
	0x01EA6354 STP X22, X21, [X31 + 0x20]
	0x01EA6358 STP X20, X19, [X31 + 0x30]
	0x01EA635C STR X31, [X31 + 0x8]
	0x01EA6360 CBZ X1, 0x1EA64D4
	0x01EA6364 LDR X8, [X1 + 0xB0]
	0x01EA6368 MOV X20, X1
	0x01EA636C CBZ X8, 0x1EA64D4
	0x01EA6370 MOV X21, X0
	0x01EA6374 ADD X0, X8, 0x14
	0x01EA6378 MOV X1, X31
	0x01EA637C MOV X19, X2
	0x01EA6380 BL 0x1E963F4
	0x01EA6384 LDR X8, [X20 + 0xB0]
	0x01EA6388 CBZ X8, 0x1EA64D4
	0x01EA638C TBZ X0, 0x0, 0x1EA63EC
	0x01EA6390 LDR W1, [X8 + 0x10]
	0x01EA6394 MOV X0, X21
	0x01EA6398 BL 0x1EA3204
	0x01EA639C CBZ X0, 0x1EA64AC
	0x01EA63A0 LDRB W8, [X0 + 0x60]
	0x01EA63A4 TBNZ X8, 0x1, 0x1EA64AC
	0x01EA63A8 LDR X9, [X20 + 0xB0]
	0x01EA63AC CBZ X9, 0x1EA64D4
	0x01EA63B0 LDR X8, [X0 + 0x70]
	0x01EA63B4 CBZ X8, 0x1EA64D4
	0x01EA63B8 LDR W9, [X9 + 0x14]
	0x01EA63BC LDR W10, [X8 + 0x18]
	0x01EA63C0 CMP W9, W10
	0x01EA63C4 B.GT 0x1EA64AC
	0x01EA63C8 SUB W9, W9, 0x1
	0x01EA63CC CMP W9, W10
	0x01EA63D0 B.CS 0x1EA64D8
	0x01EA63D4 ADD X8, X8, W9, 0x3, SXTW
	0x01EA63D8 LDR X8, [X8 + 0x20]
	0x01EA63DC CMP X8, 0x0
	0x01EA63E0 STR X8, [X19]
	0x01EA63E4 CSET W0, NE
	0x01EA63E8 B 0x1EA64C0
	0x01EA63EC LDR W9, [X8 + 0x18]
	0x01EA63F0 LDR X1, [X8 + 0x8]
	0x01EA63F4 ADD X3, X31, 0x8
	0x01EA63F8 MOV X0, X21
	0x01EA63FC UBFM W5, W9, 0x6, 0x6
	0x01EA6400 MOV X2, X20
	0x01EA6404 MOV W4, W31
	0x01EA6408 BL 0x1E9D588
	0x01EA640C CMP W0, 0x3
	0x01EA6410 B.EQ 0x1EA64B8
	0x01EA6414 CBNZ W0, 0x1EA64AC
	0x01EA6418 LDR X21, [X31 + 0x8]
	0x01EA641C CBZ X21, 0x1EA64D4
	0x01EA6420 LDR X22, [X21 + 0x70]
	0x01EA6424 CBZ X22, 0x1EA64D4
	0x01EA6428 LDR W8, [X22 + 0x18]
	0x01EA642C CMP W8, 0x1
	0x01EA6430 B.LT 0x1EA64A4
	0x01EA6434 MOV W23, W31
	0x01EA6438 CMP W23, W8
	0x01EA643C B.CS 0x1EA64D8
	0x01EA6440 ADD X8, X22, W23, 0x3, SXTW

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X22, 0x2534000
	009 Move W8, [X22+829]
	010 Move W21, W2
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0x2259000
	018 Move X0, [X0+2960]
	019 Call 0x1C17CF4
	020 Move X0, 0x2259000
	021 Move X0, [X0+2968]
	022 Call 0x1C17CF4
	023 Move X0, 0x2259000
	024 Move X0, [X0+2976]
	025 Call 0x1C17CF4
	026 Move X0, 0x2259000
	027 Move X0, [X0+2984]
	028 Call 0x1C17CF4
	029 Move X0, 0x2259000
	030 Move X0, [X0+2992]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+829], W8
	034 Move [X31+8], X31
	035 Move [X31+16], X31
	036 Move [X31+24], X31
	037 Move X0, [X20+80]
	038 Compare X0, 0
	039 JumpIfEqual {46}
	040 Move X1, X31
	041 Call Simulation.get_IsClient, X0
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {88}
	046 Compare X19, 0
	047 JumpIfEqual {96}
	048 And W8, W21, 1
	049 Move [X19+116], W8
	050 Move X8, [X20+80]
	051 Compare X8, 0
	052 JumpIfEqual {96}
	053 Move X0, [X8+176]
	054 Compare X0, 0
	055 JumpIfEqual {96}
	056 Move X8, 0x2259000
	057 Move X8, [X8+2960]
	058 Move X1, [X8]
	059 Call Dictionary`2<Int32, Object>.get_Values, X0
	060 Compare X0, 0
	061 JumpIfEqual {96}
	062 Move X8, 0x2259000
	063 Move X8, [X8+2992]
	064 Move X23, 0x2259000
	065 Move X22, 0x2259000
	066 Move X1, [X8]
	067 Move X23, [X23+2976]
	068 Move X22, [X22+2968]
	069 Add X8, X31, 8
	070 Call ValueCollection<Int32, Object>.GetEnumerator, X0
	071 And W21, W21, 1
	072 Move X1, [X23]
	073 Add X0, X31, 8
	074 Call Enumerator<Int32, Object>.MoveNext, X0
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {85}
	079 Move X2, [X31+24]
	080 Move X0, X20
	081 Move X1, X19
	082 Move W3, W21
	083 Move W4, W31
	084 Call NetworkRunner.SetBehaviourReplicateTo, X0, X1, X2, X3, X4
	085 Move X1, [X22]
	086 Add X0, X31, 8
	087 Call Enumerator<Int32, Object>.Dispose, X0
	088 Move X20, [X31+64]
	089 Move X19, [X31+72]
	090 Move X22, [X31+48]
	091 Move X21, [X31+56]
	092 Move X30, [X31+32]
	093 Move X23, [X31+40]
	094 Add X31, X31, 80
	095 Return 
	096 Call 0x1C17F20
	097 Move X20, X0
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X0, X20
	100 Call 0x3EB2AD0
	101 Move X19, [X0]
	102 Call 0x3EB2AE0
	103 Move X1, [X22]
	104 Add X0, X31, 8
	105 Call Enumerator<Int32, Object>.Dispose, X0
	106 Compare X19, 0
	107 JumpIfEqual {88}
	108 Move X0, X19
	109 Call 0x1C17F18
	110 Move X19, X31
	111 Move X20, X0
	112 Move X1, [X22]
	113 Add X0, X31, 8
	114 Call Enumerator<Int32, Object>.Dispose, X0
	115 Compare X19, 0
	116 JumpIfNotEqual {119}
	117 Move X0, X20
	118 Call 0x1D2D690
	119 Move X0, X19
	120 Call 0x1C17F18
	121 Call 0x1991590

Method: System.Void SetBehaviourReplicateTo(Fusion.NetworkBehaviour behaviour, Fusion.PlayerRef player, System.Boolean replicate)

Disassembly:
	0x01EA64F8 ADRP X0, 0x2258000
	0x01EA64FC LDR X0, [X0 + 0xC40]
	0x01EA6500 BL 0x1C16CF4
	0x01EA6504 ADRP X0, 0x224D000
	0x01EA6508 LDR X0, [X0 + 0xA58]
	0x01EA650C BL 0x1C16CF4
	0x01EA6510 ADRP X0, 0x2258000
	0x01EA6514 LDR X0, [X0 + 0xC48]
	0x01EA6518 BL 0x1C16CF4
	0x01EA651C ADRP X0, 0x2258000
	0x01EA6520 LDR X0, [X0 + 0xC50]
	0x01EA6524 BL 0x1C16CF4
	0x01EA6528 ADRP X0, 0x2258000
	0x01EA652C LDR X0, [X0 + 0xC58]
	0x01EA6530 BL 0x1C16CF4
	0x01EA6534 MOVZ W8, 0x1
	0x01EA6538 STRB W8, [X21 + 0x34E]
	0x01EA653C LDR X0, [X20 + 0xF0]
	0x01EA6540 CBZ X0, 0x1EA6618
	0x01EA6544 LDR W8, [X0 + 0x18]
	0x01EA6548 CMP W8, 0x1
	0x01EA654C B.LT 0x1EA656C
	0x01EA6550 ADRP X8, 0x2258000
	0x01EA6554 LDR X8, [X8 + 0xC48]
	0x01EA6558 LDR X1, [X8]
	0x01EA655C BL 0x26022C0
	0x01EA6560 MOV X20, X0
	0x01EA6564 CBNZ X20, 0x1EA65D8
	0x01EA6568 B 0x1EA6618
	0x01EA656C ADRP X8, 0x224D000
	0x01EA6570 LDR X8, [X8 + 0xA58]
	0x01EA6574 LDR X0, [X8]
	0x01EA6578 BL 0x1C16F10
	0x01EA657C ADRP X8, 0x2258000
	0x01EA6580 LDR X8, [X8 + 0xC58]
	0x01EA6584 MOV X2, X31
	0x01EA6588 MOV X21, X0
	0x01EA658C LDR X1, [X8]
	0x01EA6590 BL 0x3C35934
	0x01EA6594 CBZ X21, 0x1EA6618
	0x01EA6598 ADRP X8, 0x2258000
	0x01EA659C LDR X8, [X8 + 0xC40]
	0x01EA65A0 MOV X0, X21
	0x01EA65A4 LDR X1, [X8]
	0x01EA65A8 BL 0x21E51FC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move [X31+8], X31
	009 Move X19, X0
	010 Move X0, [X0+80]
	011 Compare X0, 0
	012 JumpIfEqual {61}
	013 Move X20, X1
	014 Move X1, X31
	015 Move W21, W3
	016 Move X22, X2
	017 Call Simulation.get_IsClient, X0
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {53}
	022 Move X23, [X19+80]
	023 Compare X23, 0
	024 JumpIfEqual {61}
	025 Move X24, 0x2534000
	026 Move W8, [X24+753]
	027 Compare W8, 0
	028 JumpIfNotEqual {34}
	029 Move X0, 0x2253000
	030 Move X0, [X0+32]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X24+753], W8
	034 Move X0, [X23+184]
	035 Compare X0, 0
	036 JumpIfEqual {61}
	037 Move X8, 0x2253000
	038 Move X8, [X8+32]
	039 And X1, X22, 0
	040 Add X2, X31, 8
	041 Move X3, [X8]
	042 Call Dictionary`2<PlayerRef, Object>.TryGetValue, X0, X1, X2
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {53}
	047 Move X2, [X31+8]
	048 And W3, W21, 1
	049 Move W4, 1
	050 Move X0, X19
	051 Move X1, X20
	052 Call NetworkRunner.SetBehaviourReplicateTo, X0, X1, X2, X3, X4
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X24, [X31+16]
	058 Move X23, [X31+24]
	059 Move X30, [X31+64]
	060 Return 
	061 Call 0x1C17F20

Method: System.Void SetBehaviourReplicateTo(Fusion.NetworkBehaviour behaviour, Fusion.SimulationConnection sc, System.Boolean replicate, System.Boolean forceCreate)

Disassembly:
	0x01EA6444 LDR X20, [X8 + 0x20]
	0x01EA6448 CBZ X20, 0x1EA64D4
	0x01EA644C MOV X0, X20
	0x01EA6450 MOV X1, X31
	0x01EA6454 BL 0x1E934B8
	0x01EA6458 TBNZ X0, 0x0, 0x1EA6494
	0x01EA645C MOV X0, X20
	0x01EA6460 MOV X1, X31
	0x01EA6464 BL 0x3C32ECC
	0x01EA6468 CBZ X0, 0x1EA64D4
	0x01EA646C MOV X1, X31
	0x01EA6470 BL 0x3C357F8
	0x01EA6474 TBZ X0, 0x0, 0x1EA6494
	0x01EA6478 MOV X0, X20
	0x01EA647C MOV X1, X31
	0x01EA6480 BL 0x3C32ECC
	0x01EA6484 CBZ X0, 0x1EA64D4
	0x01EA6488 MOV W1, W31
	0x01EA648C MOV X2, X31
	0x01EA6490 BL 0x3C357B4
	0x01EA6494 LDR W8, [X22 + 0x18]
	0x01EA6498 ADD W23, W23, 0x1
	0x01EA649C CMP W23, W8
	0x01EA64A0 B.LT 0x1EA6438
	0x01EA64A4 STR X21, [X19]
	0x01EA64A8 B 0x1EA64BC
	0x01EA64AC MOV W0, W31
	0x01EA64B0 STR X31, [X19]
	0x01EA64B4 B 0x1EA64C0
	0x01EA64B8 STR X31, [X19]
	0x01EA64BC MOVZ W0, 0x1
	0x01EA64C0 LDP X20, X19, [X31 + 0x30]
	0x01EA64C4 LDP X22, X21, [X31 + 0x20]
	0x01EA64C8 LDP X30, X23, [X31 + 0x10]
	0x01EA64CC ADD X31, X31, 0x40
	0x01EA64D0 RET
	0x01EA64D4 BL 0x1C16F20
	0x01EA64D8 BL 0x1C16F28
	0x01EA64DC STP X30, X21, [X31 - 0x20]!
	0x01EA64E0 STP X20, X19, [X31 + 0x10]
	0x01EA64E4 ADRP X21, 0x2533000
	0x01EA64E8 LDRB W8, [X21 + 0x34E]
	0x01EA64EC MOV X19, X1
	0x01EA64F0 MOV X20, X0
	0x01EA64F4 TBNZ X8, 0x0, 0x1EA653C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {58}
	008 Move X20, X1
	009 Move X1, [X1+64]
	010 Move W22, W4
	011 Move W19, W3
	012 Move X21, X2
	013 Call NetworkRunner.Exists, X0, X1
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {49}
	018 Move X8, [X20+64]
	019 Compare X8, 0
	020 JumpIfEqual {58}
	021 Move X8, [X8+32]
	022 Compare X8, 0
	023 JumpIfEqual {55}
	024 Move W1, [X8]
	025 Compare X21, 0
	026 JumpIfEqual {58}
	027 And W2, W22, 1
	028 Move X0, X21
	029 Move W3, W31
	030 Move X4, X31
	031 Call SimulationConnection.GetObjectData, X0, X1, X2, X3
	032 Compare X0, 0
	033 JumpIfEqual {49}
	034 Move W9, [X20+104]
	035 Move X8, [X0+72]
	036 Move W10, 1
	037 And W11, W19, 1
	038 NotImplemented "Instruction LSLV not yet implemented."
	039 And X31, X9, X8
	040 NotImplemented "Instruction CSET not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction BIC not yet implemented."
	043 Or X8, X9, X8
	044 And W31, W19, 1
	045 NotImplemented "Instruction CSEL not yet implemented."
	046 Move [X0+72], X8
	047 Move [X0+60], W31
	048 Move [X0+64], W31
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Return 
	055 Move X1, X31
	056 Compare X21, 0
	057 JumpIfNotEqual {27}
	058 Call 0x1C17F20

Method: System.Void Attach(Fusion.NetworkObject[] networkObjects, System.Nullable`1<Fusion.PlayerRef> inputAuthority = null, System.Boolean allocate = True, System.Nullable`1<System.Boolean> masterClientObjectOverride = null)

Disassembly:
	0x01EA65AC LDR X8, [X20 + 0x98]
	0x01EA65B0 CBZ X8, 0x1EA6618
	0x01EA65B4 LDRB W8, [X8 + 0x33]
	0x01EA65B8 MOV X20, X0
	0x01EA65BC MOV X0, X21
	0x01EA65C0 MOV X2, X31
	0x01EA65C4 CMP W8, 0x0
	0x01EA65C8 MOVZ W8, 0x3C
	0x01EA65CC CINC W1, W8, NE
	0x01EA65D0 BL 0x3C396EC
	0x01EA65D4 CBZ X20, 0x1EA6618
	0x01EA65D8 MOV X0, X20
	0x01EA65DC MOV X1, X31
	0x01EA65E0 STR X19, [X20 + 0x20]
	0x01EA65E4 BL 0x3C32E90
	0x01EA65E8 CBZ X19, 0x1EA6618
	0x01EA65EC MOV X20, X0
	0x01EA65F0 MOV X0, X19
	0x01EA65F4 MOV X1, X31
	0x01EA65F8 BL 0x3C32E90
	0x01EA65FC CBZ X20, 0x1EA6618
	0x01EA6600 MOV X1, X0
	0x01EA6604 MOV X0, X20
	0x01EA6608 LDP X20, X19, [X31 + 0x10]
	0x01EA660C MOV X2, X31
	0x01EA6610 LDP X30, X21, [X31], #0x20
	0x01EA6614 B 0x3C3FE70
	0x01EA6618 BL 0x1C16F20
	0x01EA661C SUB X31, X31, 0x40
	0x01EA6620 STP X30, X23, [X31 + 0x10]
	0x01EA6624 STP X22, X21, [X31 + 0x20]
	0x01EA6628 STP X20, X19, [X31 + 0x30]
	0x01EA662C ADRP X21, 0x2533000
	0x01EA6630 LDRB W8, [X21 + 0x345]
	0x01EA6634 MOV W19, W2
	0x01EA6638 MOV X22, X1
	0x01EA663C MOV X20, X0
	0x01EA6640 TBNZ X8, 0x0, 0x1EA6664
	0x01EA6644 ADRP X0, 0x2250000
	0x01EA6648 LDR X0, [X0 + 0x398]
	0x01EA664C BL 0x1C16CF4
	0x01EA6650 ADRP X0, 0x2256000
	0x01EA6654 LDR X0, [X0 + 0xE80]
	0x01EA6658 BL 0x1C16CF4
	0x01EA665C MOVZ W8, 0x1
	0x01EA6660 STRB W8, [X21 + 0x345]
	0x01EA6664 STR W31, [X31 + 0x8]
	0x01EA6668 CBZ X22, 0x1EA67A0
	0x01EA666C LDR X8, [X20 + 0x98]
	0x01EA6670 CBZ X8, 0x1EA67A0
	0x01EA6674 LDRB W8, [X8 + 0x32]
	0x01EA6678 LDR X20, [X22 + 0xB8]
	0x01EA667C CBZ W8, 0x1EA6710
	0x01EA6680 CBZ X20, 0x1EA67A0
	0x01EA6684 ADRP X23, 0x2250000
	0x01EA6688 LDR X23, [X23 + 0x398]
	0x01EA668C MOV X0, X20
	0x01EA6690 MOV X1, X31
	0x01EA6694 BL 0x3C32ECC
	0x01EA6698 MOV X21, X0
	0x01EA669C MOV X0, X22
	0x01EA66A0 MOV X1, X31
	0x01EA66A4 BL 0x1E97370
	0x01EA66A8 LDR X8, [X23]
	0x01EA66AC STR W0, [X31 + 0x8]
	0x01EA66B0 LDR W9, [X8 + 0xE0]
	0x01EA66B4 CBNZ W9, 0x1EA66C0
	0x01EA66B8 MOV X0, X8
	0x01EA66BC BL 0x1C16DFC
	0x01EA66C0 ADD X0, X31, 0x8
	0x01EA66C4 MOV X1, X31
	0x01EA66C8 BL 0x1E9318C
	0x01EA66CC MOV X22, X0
	0x01EA66D0 MOV X0, X20
	0x01EA66D4 MOV X1, X31
	0x01EA66D8 BL 0x3C32ECC
	0x01EA66DC CBZ X0, 0x1EA67A0
	0x01EA66E0 MOV X1, X31
	0x01EA66E4 BL 0x3C389D4
	0x01EA66E8 MOV X1, X0
	0x01EA66EC MOV X0, X22
	0x01EA66F0 MOV X2, X31
	0x01EA66F4 BL 0x321B938
	0x01EA66F8 CBZ X21, 0x1EA67A0
	0x01EA66FC MOV X1, X0
	0x01EA6700 MOV X0, X21
	0x01EA6704 MOV X2, X31
	0x01EA6708 BL 0x3C38A84
	0x01EA670C B 0x1EA6714
	0x01EA6710 CBZ X20, 0x1EA67A0
	0x01EA6714 LDR W0, [X20 + 0x60]
	0x01EA6718 MOVZ W1, 0x1
	0x01EA671C MOV X2, X31
	0x01EA6720 BL 0x1E93D90
	0x01EA6724 TBZ X0, 0x0, 0x1EA6764
	0x01EA6728 MOV X0, X20
	0x01EA672C MOV X1, X31
	0x01EA6730 BL 0x3C32ECC
	0x01EA6734 CBZ X0, 0x1EA67A0
	0x01EA6738 MOV X1, X31
	0x01EA673C BL 0x3C357F8
	0x01EA6740 TBNZ X0, 0x0, 0x1EA678C
	0x01EA6744 MOV X0, X20
	0x01EA6748 MOV X1, X31
	0x01EA674C BL 0x3C32ECC
	0x01EA6750 CBZ X0, 0x1EA67A0
	0x01EA6754 MOVZ W1, 0x1
	0x01EA6758 MOV X2, X31
	0x01EA675C BL 0x3C357B4
	0x01EA6760 B 0x1EA678C
	0x01EA6764 ADRP X8, 0x2256000
	0x01EA6768 LDR X8, [X8 + 0xE80]
	0x01EA676C LDR W21, [X20 + 0x60]
	0x01EA6770 LDR X0, [X8]
	0x01EA6774 LDR W8, [X0 + 0xE0]
	0x01EA6778 CBNZ W8, 0x1EA6780
	0x01EA677C BL 0x1C16DFC
	0x01EA6780 UBFM W8, W19, 0xC, 0x0
	0x01EA6784 ORR W8, W21, W8, 0x0
	0x01EA6788 STR W8, [X20 + 0x60]
	0x01EA678C LDP X20, X19, [X31 + 0x30]
	0x01EA6790 LDP X22, X21, [X31 + 0x20]
	0x01EA6794 LDP X30, X23, [X31 + 0x10]
	0x01EA6798 ADD X31, X31, 0x40
	0x01EA679C RET
	0x01EA67A0 BL 0x1C16F20
	0x01EA67A4 UBFM W0, W0, 0xC, 0x0
	0x01EA67A8 RET
	0x01EA67AC STR X30, [X31 - 0x10]!
	0x01EA67B0 LDR X0, [X0 + 0x50]
	0x01EA67B4 CBZ X0, 0x1EA67C8
	0x01EA67B8 AND X1, X1, 0x0
	0x01EA67BC MOV X2, X31
	0x01EA67C0 LDR X30, [X31], #0x10
	0x01EA67C4 B 0x1ECA048
	0x01EA67C8 BL 0x1C16F20
	0x01EA67CC STR X30, [X31 - 0x10]!
	0x01EA67D0 LDR X0, [X0 + 0x50]
	0x01EA67D4 CBZ X0, 0x1EA67E4
	0x01EA67D8 MOV X1, X31
	0x01EA67DC LDR X30, [X31], #0x10
	0x01EA67E0 B 0x1EC4D00
	0x01EA67E4 BL 0x1C16F20
	0x01EA67E8 STR X30, [X31 - 0x10]!
	0x01EA67EC CBZ X0, 0x1EA6804
	0x01EA67F0 LDR W0, [X0 + 0x60]
	0x01EA67F4 MOVZ W1, 0x1
	0x01EA67F8 MOV X2, X31
	0x01EA67FC LDR X30, [X31], #0x10
	0x01EA6800 B 0x1E93D90
	0x01EA6804 BL 0x1C16F20
	0x01EA6808 STR X30, [X31 - 0x10]!
	0x01EA680C CBZ X0, 0x1EA6824
	0x01EA6810 LDR W0, [X0 + 0x60]
	0x01EA6814 MOVZ W1, 0x20000
	0x01EA6818 MOV X2, X31
	0x01EA681C LDR X30, [X31], #0x10
	0x01EA6820 B 0x1E93D90
	0x01EA6824 BL 0x1C16F20
	0x01EA6828 SUB X31, X31, 0x30
	0x01EA682C STP X30, X21, [X31 + 0x10]
	0x01EA6830 STP X20, X19, [X31 + 0x20]
	0x01EA6834 ADRP X21, 0x2533000
	0x01EA6838 LDRB W8, [X21 + 0x34B]
	0x01EA683C MOV X20, X1
	0x01EA6840 MOV X19, X0
	0x01EA6844 TBNZ X8, 0x0, 0x1EA6898
	0x01EA6848 ADRP X0, 0x2258000
	0x01EA684C LDR X0, [X0 + 0xC60]
	0x01EA6850 BL 0x1C16CF4
	0x01EA6854 ADRP X0, 0x2258000
	0x01EA6858 LDR X0, [X0 + 0xC68]
	0x01EA685C BL 0x1C16CF4
	0x01EA6860 ADRP X0, 0x2250000
	0x01EA6864 LDR X0, [X0 + 0xE40]
	0x01EA6868 BL 0x1C16CF4
	0x01EA686C ADRP X0, 0x2258000
	0x01EA6870 LDR X0, [X0 + 0xC70]
	0x01EA6874 BL 0x1C16CF4
	0x01EA6878 ADRP X0, 0x2258000
	0x01EA687C LDR X0, [X0 + 0xC78]
	0x01EA6880 BL 0x1C16CF4
	0x01EA6884 ADRP X0, 0x2258000
	0x01EA6888 LDR X0, [X0 + 0xC80]
	0x01EA688C BL 0x1C16CF4
	0x01EA6890 MOVZ W8, 0x1
	0x01EA6894 STRB W8, [X21 + 0x34B]
	0x01EA6898 STR W31, [X31 + 0x8]
	0x01EA689C CBZ X20, 0x1EA6978
	0x01EA68A0 LDR X8, [X20 + 0x98]
	0x01EA68A4 CBZ X8, 0x1EA6978
	0x01EA68A8 LDR W1, [X8 + 0x20]
	0x01EA68AC ADRP X8, 0x2258000
	0x01EA68B0 LDR X8, [X8 + 0xC68]
	0x01EA68B4 ADD X0, X31, 0x0
	0x01EA68B8 STR X31, [X31]
	0x01EA68BC LDR X2, [X8]
	0x01EA68C0 BL 0x24345B8
	0x01EA68C4 LDR W8, [X31 + 0x4]
	0x01EA68C8 CMP X8, 0x1
	0x01EA68CC B.NE 0x1EA6978
	0x01EA68D0 LDR X0, [X20 + 0x50]
	0x01EA68D4 CBZ X0, 0x1EA68E8
	0x01EA68D8 LDR X8, [X0]
	0x01EA68DC LDR X9, [X8 + 0x268]
	0x01EA68E0 LDR X1, [X8 + 0x270]
	0x01EA68E4 BLR X9
	0x01EA68E8 ADRP X21, 0x2250000
	0x01EA68EC LDR X21, [X21 + 0xE40]
	0x01EA68F0 STR W0, [X31 + 0x8]
	0x01EA68F4 LDR X8, [X21]
	0x01EA68F8 LDR W9, [X8 + 0xE0]
	0x01EA68FC CBNZ W9, 0x1EA690C
	0x01EA6900 MOV X0, X8
	0x01EA6904 BL 0x1C16DFC
	0x01EA6908 LDR W0, [X31 + 0x8]
	0x01EA690C CBZ X19, 0x1EA69C8
	0x01EA6910 CMP W0, 0x1
	0x01EA6914 B.LT 0x1EA698C
	0x01EA6918 ADRP X8, 0x2258000
	0x01EA691C LDR X8, [X8 + 0xC78]
	0x01EA6920 MOV X0, X19
	0x01EA6924 MOV X2, X31
	0x01EA6928 LDR X1, [X8]
	0x01EA692C BL 0x32333E0
	0x01EA6930 LDR X8, [X21]
	0x01EA6934 MOV X21, X0
	0x01EA6938 LDR W9, [X8 + 0xE0]
	0x01EA693C CBNZ W9, 0x1EA6948
	0x01EA6940 MOV X0, X8
	0x01EA6944 BL 0x1C16DFC
	0x01EA6948 ADD X0, X31, 0x8
	0x01EA694C MOV X1, X31
	0x01EA6950 BL 0x1E8D834
	0x01EA6954 CBZ X21, 0x1EA69C8
	0x01EA6958 MOV W1, W0
	0x01EA695C MOV X0, X21
	0x01EA6960 MOV X2, X31
	0x01EA6964 BL 0x3233E30
	0x01EA6968 CBZ X0, 0x1EA69C8
	0x01EA696C ADRP X8, 0x2258000
	0x01EA6970 LDR X8, [X8 + 0xC70]
	0x01EA6974 B 0x1EA6998
	0x01EA6978 MOV W0, W31
	0x01EA697C LDP X20, X19, [X31 + 0x20]
	0x01EA6980 LDP X30, X21, [X31 + 0x10]
	0x01EA6984 ADD X31, X31, 0x30
	0x01EA6988 RET
	0x01EA698C ADRP X8, 0x2258000
	0x01EA6990 LDR X8, [X8 + 0xC80]
	0x01EA6994 MOV X0, X19
	0x01EA6998 LDR X1, [X8]
	0x01EA699C MOV X2, X31
	0x01EA69A0 BL 0x32333E0
	0x01EA69A4 MOV X0, X20
	0x01EA69A8 MOV X1, X31
	0x01EA69AC BL 0x1E86B98
	0x01EA69B0 MOV X1, X0
	0x01EA69B4 MOV X0, X19
	0x01EA69B8 MOV X2, X31
	0x01EA69BC BL 0x32333E0
	0x01EA69C0 MOVZ W0, 0x1
	0x01EA69C4 B 0x1EA697C
	0x01EA69C8 BL 0x1C16F20
	0x01EA69CC STR X30, [X31 - 0x20]!
	0x01EA69D0 STP X20, X19, [X31 + 0x10]
	0x01EA69D4 ADRP X20, 0x2533000
	0x01EA69D8 ADRP X19, 0x2250000
	0x01EA69DC LDRB W8, [X20 + 0x34C]
	0x01EA69E0 LDR X19, [X19 + 0xA78]
	0x01EA69E4 TBNZ X8, 0x0, 0x1EA6A14
	0x01EA69E8 ADRP X0, 0x2250000
	0x01EA69EC LDR X0, [X0 + 0xA78]
	0x01EA69F0 BL 0x1C16CF4
	0x01EA69F4 ADRP X0, 0x2256000
	0x01EA69F8 LDR X0, [X0 + 0xE80]
	0x01EA69FC BL 0x1C16CF4
	0x01EA6A00 ADRP X0, 0x2258000
	0x01EA6A04 LDR X0, [X0 + 0x328]
	0x01EA6A08 BL 0x1C16CF4
	0x01EA6A0C MOVZ W8, 0x1
	0x01EA6A10 STRB W8, [X20 + 0x34C]
	0x01EA6A14 LDR X0, [X19]
	0x01EA6A18 ADRP X20, 0x2256000
	0x01EA6A1C LDR W8, [X0 + 0xE0]
	0x01EA6A20 LDR X20, [X20 + 0xE80]
	0x01EA6A24 CBNZ W8, 0x1EA6A2C
	0x01EA6A28 BL 0x1C16DFC
	0x01EA6A2C ADRP X19, 0x2258000
	0x01EA6A30 LDR X19, [X19 + 0x328]
	0x01EA6A34 MOV X0, X31
	0x01EA6A38 BL 0x1E76D1C
	0x01EA6A3C MOV X0, X31
	0x01EA6A40 BL 0x1EDDE64
	0x01EA6A44 LDR X0, [X20]
	0x01EA6A48 LDR W8, [X0 + 0xE0]
	0x01EA6A4C CBNZ W8, 0x1EA6A54
	0x01EA6A50 BL 0x1C16DFC
	0x01EA6A54 BL 0x1E9E2C0
	0x01EA6A58 LDR X0, [X19]
	0x01EA6A5C LDR W8, [X0 + 0xE0]
	0x01EA6A60 CBNZ W8, 0x1EA6A68
	0x01EA6A64 BL 0x1C16DFC
	0x01EA6A68 LDP X20, X19, [X31 + 0x10]
	0x01EA6A6C MOV X0, X31
	0x01EA6A70 LDR X30, [X31], #0x20
	0x01EA6A74 B 0x1EDE238
	0x01EA6A78 STP X30, X21, [X31 - 0x20]!
	0x01EA6A7C STP X20, X19, [X31 + 0x10]
	0x01EA6A80 ADRP X21, 0x2533000
	0x01EA6A84 LDRB W8, [X21 + 0x34D]
	0x01EA6A88 MOV X19, X1
	0x01EA6A8C MOV X20, X0
	0x01EA6A90 TBNZ X8, 0x0, 0x1EA6AA8
	0x01EA6A94 ADRP X0, 0x2257000
	0x01EA6A98 LDR X0, [X0 + 0x158]
	0x01EA6A9C BL 0x1C16CF4
	0x01EA6AA0 MOVZ W8, 0x1
	0x01EA6AA4 STRB W8, [X21 + 0x34D]
	0x01EA6AA8 LDR X8, [X20 + 0x98]
	0x01EA6AAC CBZ X8, 0x1EA6B7C
	0x01EA6AB0 LDR X8, [X8 + 0x60]
	0x01EA6AB4 CBZ X8, 0x1EA6B7C
	0x01EA6AB8 CBZ X19, 0x1EA6B44
	0x01EA6ABC LDRB W8, [X8 + 0x10]
	0x01EA6AC0 CBZ W8, 0x1EA6B44
	0x01EA6AC4 LDR X8, [X20 + 0x50]
	0x01EA6AC8 CBZ X8, 0x1EA6B44
	0x01EA6ACC LDR X8, [X8 + 0x120]
	0x01EA6AD0 CBZ X8, 0x1EA6B44
	0x01EA6AD4 LDR X0, [X20 + 0x1B0]
	0x01EA6AD8 CBZ X0, 0x1EA6B7C
	0x01EA6ADC MOV X1, X31
	0x01EA6AE0 BL 0x1E68878
	0x01EA6AE4 TBZ X0, 0x0, 0x1EA6B44
	0x01EA6AE8 LDR X8, [X20 + 0x50]
	0x01EA6AEC CBZ X8, 0x1EA6B44
	0x01EA6AF0 LDR X20, [X8 + 0x120]
	0x01EA6AF4 CBZ X20, 0x1EA6B44
	0x01EA6AF8 ADRP X10, 0x2257000
	0x01EA6AFC LDR X8, [X20]
	0x01EA6B00 LDP X21, X19, [X19 + 0x10]
	0x01EA6B04 LDR X10, [X10 + 0x158]
	0x01EA6B08 LDRH W9, [X8 + 0x12E]
	0x01EA6B0C LDR X1, [X10]
	0x01EA6B10 CBZ X9, 0x1EA6B34
	0x01EA6B14 LDR X10, [X8 + 0xB0]
	0x01EA6B18 ADD X10, X10, 0x8
	0x01EA6B1C LDUR X11, [X10 - 0x8]
	0x01EA6B20 CMP X11, X1
	0x01EA6B24 B.EQ 0x1EA6B50
	0x01EA6B28 SUBS X9, X9, 0x1
	0x01EA6B2C ADD X10, X10, 0x10
	0x01EA6B30 B.NE 0x1EA6B1C
	0x01EA6B34 MOVZ W2, 0xA
	0x01EA6B38 MOV X0, X20
	0x01EA6B3C BL 0x1C5C788
	0x01EA6B40 B 0x1EA6B60
	0x01EA6B44 LDP X20, X19, [X31 + 0x10]
	0x01EA6B48 LDP X30, X21, [X31], #0x20
	0x01EA6B4C RET
	0x01EA6B50 LDR W9, [X10]
	0x01EA6B54 ADD W9, W9, 0xA
	0x01EA6B58 ADD X8, X8, W9, 0x4, SXTW
	0x01EA6B5C ADD X0, X8, 0x138
	0x01EA6B60 LDP X4, X3, [X0]
	0x01EA6B64 MOV X0, X20
	0x01EA6B68 MOV X2, X19
	0x01EA6B6C LDP X20, X19, [X31 + 0x10]
	0x01EA6B70 MOV X1, X21
	0x01EA6B74 LDP X30, X21, [X31], #0x20
	0x01EA6B78 BR X4
	0x01EA6B7C BL 0x1C16F20
	0x01EA6B80 SUB X31, X31, 0x40
	0x01EA6B84 STP X30, X21, [X31 + 0x20]
	0x01EA6B88 STP X20, X19, [X31 + 0x30]
	0x01EA6B8C ADRP X21, 0x2533000
	0x01EA6B90 ADRP X20, 0x2256000
	0x01EA6B94 MOV X19, X8
	0x01EA6B98 LDRB W8, [X21 + 0x34F]
	0x01EA6B9C LDR X20, [X20 + 0xE80]
	0x01EA6BA0 TBNZ X8, 0x0, 0x1EA6BC4
	0x01EA6BA4 ADRP X0, 0x2258000
	0x01EA6BA8 LDR X0, [X0 + 0xC88]
	0x01EA6BAC BL 0x1C16CF4
	0x01EA6BB0 ADRP X0, 0x2256000
	0x01EA6BB4 LDR X0, [X0 + 0xE80]
	0x01EA6BB8 BL 0x1C16CF4
	0x01EA6BBC MOVZ W8, 0x1
	0x01EA6BC0 STRB W8, [X21 + 0x34F]
	0x01EA6BC4 LDR X0, [X20]
	0x01EA6BC8 LDR W8, [X0 + 0xE0]
	0x01EA6BCC CBNZ W8, 0x1EA6BD8
	0x01EA6BD0 BL 0x1C16DFC
	0x01EA6BD4 LDR X0, [X20]
	0x01EA6BD8 LDR X8, [X0 + 0xB8]
	0x01EA6BDC LDR X0, [X8]
	0x01EA6BE0 CBZ X0, 0x1EA6C18
	0x01EA6BE4 ADRP X8, 0x2258000
	0x01EA6BE8 LDR X8, [X8 + 0xC88]
	0x01EA6BEC LDR X1, [X8]
	0x01EA6BF0 ADD X8, X31, 0x8
	0x01EA6BF4 BL 0x301CB58
	0x01EA6BF8 LDR X8, [X31 + 0x18]
	0x01EA6BFC LDUR V0, [X31 + 0x8]
	0x01EA6C00 LDP X30, X21, [X31 + 0x20]
	0x01EA6C04 STR X8, [X19 + 0x10]
	0x01EA6C08 STR V0, [X19]
	0x01EA6C0C LDP X20, X19, [X31 + 0x30]
	0x01EA6C10 ADD X31, X31, 0x40
	0x01EA6C14 RET
	0x01EA6C18 BL 0x1C16F20
	0x01EA6C1C STR X30, [X31 - 0x20]!
	0x01EA6C20 STP X20, X19, [X31 + 0x10]
	0x01EA6C24 ADRP X20, 0x2533000
	0x01EA6C28 ADRP X19, 0x2256000
	0x01EA6C2C LDRB W8, [X20 + 0x350]
	0x01EA6C30 LDR X19, [X19 + 0xE80]
	0x01EA6C34 TBNZ X8, 0x0, 0x1EA6C4C
	0x01EA6C38 ADRP X0, 0x2256000
	0x01EA6C3C LDR X0, [X0 + 0xE80]
	0x01EA6C40 BL 0x1C16CF4
	0x01EA6C44 MOVZ W8, 0x1
	0x01EA6C48 STRB W8, [X20 + 0x350]
	0x01EA6C4C LDR X0, [X19]
	0x01EA6C50 LDR W8, [X0 + 0xE0]
	0x01EA6C54 CBNZ W8, 0x1EA6C60
	0x01EA6C58 BL 0x1C16DFC
	0x01EA6C5C LDR X0, [X19]
	0x01EA6C60 LDR X8, [X0 + 0xB8]
	0x01EA6C64 LDP X20, X19, [X31 + 0x10]
	0x01EA6C68 LDR X0, [X8]
	0x01EA6C6C LDR X30, [X31], #0x20
	0x01EA6C70 RET
	0x01EA6C74 SUB X31, X31, 0x30
	0x01EA6C78 STR D8, [X31 + 0x10]
	0x01EA6C7C STR X30, [X31 + 0x18]
	0x01EA6C80 STP X20, X19, [X31 + 0x20]
	0x01EA6C84 ADRP X20, 0x2533000
	0x01EA6C88 LDRB W8, [X20 + 0x353]
	0x01EA6C8C MOV V8.16B, V0.16B
	0x01EA6C90 MOV X19, X0
	0x01EA6C94 TBNZ X8, 0x0, 0x1EA6CB8
	0x01EA6C98 ADRP X0, 0x2254000
	0x01EA6C9C LDR X0, [X0 + 0xC60]
	0x01EA6CA0 BL 0x1C16CF4
	0x01EA6CA4 ADRP X0, 0x224D000
	0x01EA6CA8 LDR X0, [X0 + 0x5F8]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X21, 0x2534000
	015 Move W8, [X21+830]
	016 Move X22, X4
	017 Move W23, W3
	018 Move X19, X1
	019 Move X20, X0
	020 Move [X31+16], X2
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {42}
	025 Move X0, 0x2259000
	026 Move X0, [X0+2808]
	027 Call 0x1C17CF4
	028 Move X0, 0x2259000
	029 Move X0, [X0+3000]
	030 Call 0x1C17CF4
	031 Move X0, 0x2259000
	032 Move X0, [X0+888]
	033 Call 0x1C17CF4
	034 Move X0, 0x2257000
	035 Move X0, [X0+3712]
	036 Call 0x1C17CF4
	037 Move X0, 0x224E000
	038 Move X0, [X0+1432]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X21+830], W8
	042 Compare X19, 0
	043 JumpIfEqual {496}
	044 Move W8, [X19+24]
	045 Move X27, 0x2257000
	046 Move X27, [X27+3712]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move [X31+8], X22
	049 Move X28, 0x224E000
	050 Move X29, 0x2259000
	051 Move X28, [X28+1432]
	052 Move X29, [X29+888]
	053 Move X26, X31
	054 Add X22, X19, 32
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X0, [X28]
	057 Move X25, [X22]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X25
	063 Move X1, X31
	064 Move X2, X31
	065 Call Object.op_Equality, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {454}
	070 Compare X25, 0
	071 JumpIfEqual {452}
	072 Move X0, [X29]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Add X0, X25, 100
	078 Move X1, X31
	079 Call NetworkObjectTypeId.get_IsValid, X0
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {463}
	084 Move TEMP, X23
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {97}
	088 Move X8, [X20+56]
	089 Compare X8, 0
	090 JumpIfEqual {97}
	091 Move X9, [X8+24]
	092 Move X0, [X8+64]
	093 Move X3, [X8+40]
	094 Move X1, X20
	095 Move X2, X25
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X0, [X27]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move W0, [X25+96]
	103 Move W1, 0x20000
	104 Move X2, X31
	105 Call NetworkObjectRuntimeFlagsExtensions.CheckFlag, X0, X1
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfEqual {117}
	110 And X24, X24, 0
	111 Move X0, X20
	112 Move X1, X25
	113 Move X2, X31
	114 Move X3, X24
	115 Move W4, W31
	116 Call NetworkRunner.InitializeNetworkObjectAssignRunner, X0, X1, X2, X3
	117 Move X8, [X19+24]
	118 Add X26, X26, 1
	119 NotImplemented "Instruction CMP not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X25, 0x2259000
	122 Move X26, 0x2259000
	123 Move X25, [X25+3000]
	124 Move X26, [X26+2808]
	125 Move X21, X31
	126 Add X22, X19, 32
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X24, [X22]
	129 Compare X24, 0
	130 JumpIfEqual {452}
	131 Move X0, [X20+200]
	132 Compare X0, 0
	133 JumpIfEqual {452}
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 Move X2, [X25]
	136 Call Dictionary`2<NetworkObjectTypeId, Object>.ContainsKey, X0, X1
	137 Move TEMP, X0
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfEqual {148}
	141 Move X0, [X20+200]
	142 Compare X0, 0
	143 JumpIfEqual {452}
	144 NotImplemented "Instruction LDUR not yet implemented."
	145 Move X3, [X26]
	146 Move X2, X24
	147 Call Dictionary`2<NetworkObjectTypeId, Object>.Add, X0, X1, X2
	148 Move X8, [X19+24]
	149 Add X21, X21, 1
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X22, [X31+8]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move TEMP, X23
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 Invalid "Jump target not found in method."
	157 Move X28, X31
	158 And X29, X22, 0xFFFF
	159 Add X21, X19, 32
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move X0, [X27]
	162 Move X23, [X21]
	163 Move W8, [X0+224]
	164 Compare W8, 0
	165 JumpIfNotEqual {167}
	166 Call 0x1C17DFC
	167 Compare X23, 0
	168 JumpIfEqual {452}
	169 Move W0, [X23+96]
	170 Move W1, 0x20000
	171 Move X2, X31
	172 Call NetworkObjectRuntimeFlagsExtensions.CheckFlag, X0, X1
	173 Move TEMP, X0
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfEqual {206}
	177 Move X24, [X20+80]
	178 Compare X24, 0
	179 JumpIfEqual {452}
	180 Move X0, X24
	181 Move X1, X31
	182 Call Simulation.GetNextId, X0
	183 NotImplemented "Instruction LDUR not yet implemented."
	184 Move X26, X0
	185 Move X0, X23
	186 Move X1, X31
	187 Call NetworkObject.GetWordCount, X0
	188 Move W3, W0
	189 And X1, X26, 0
	190 Move X0, X24
	191 Move X2, X25
	192 Move W4, W31
	193 Move X5, X31
	194 Move X6, X31
	195 Move X7, X31
	196 Call Simulation.AllocateObject, X0, X1, X2, X3, X4, X5, X6
	197 Move X3, [X31+16]
	198 And X8, X22, 0xFFFFFFFF
	199 Or X22, X8, X29
	200 Move X1, X0
	201 Move W4, 1
	202 Move X0, X20
	203 Move X2, X23
	204 Move X5, X22
	205 Call NetworkRunner.InitializeNetworkObjectInstance, X0, X1, X2, X3, X4, X5
	206 Move X8, [X19+24]
	207 Add X28, X28, 1
	208 NotImplemented "Instruction CMP not yet implemented."
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move X22, X31
	211 Add X23, X19, 32
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Move X0, [X27]
	214 Move X21, [X23]
	215 Move W8, [X0+224]
	216 Compare W8, 0
	217 JumpIfNotEqual {219}
	218 Call 0x1C17DFC
	219 Compare X21, 0
	220 JumpIfEqual {452}
	221 Move W0, [X21+96]
	222 Move W1, 1
	223 Move X2, X31
	224 Call NetworkObjectRuntimeFlagsExtensions.CheckFlag, X0, X1
	225 Move TEMP, X0
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfNotEqual {245}
	229 Move X0, [X27]
	230 Move W8, [X0+224]
	231 Compare W8, 0
	232 JumpIfNotEqual {234}
	233 Call 0x1C17DFC
	234 Move W0, [X21+96]
	235 Move W1, 0x20000
	236 Move X2, X31
	237 Call NetworkObjectRuntimeFlagsExtensions.CheckFlag, X0, X1
	238 Compare X20, 0
	239 JumpIfEqual {452}
	240 NotImplemented "Instruction ORN not yet implemented."
	241 And W2, W8, 1
	242 Move X0, X20
	243 Move X1, X21
	244 Call NetworkRunner.InitializeNetworkObjectState, X0, X1, X2
	245 Move X8, [X19+24]
	246 Add X22, X22, 1
	247 NotImplemented "Instruction CMP not yet implemented."
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Move X22, X31
	250 Add X23, X19, 32
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Move X0, [X27]
	253 Move X21, [X23]
	254 Move W8, [X0+224]
	255 Compare W8, 0
	256 JumpIfNotEqual {258}
	257 Call 0x1C17DFC
	258 Compare X21, 0
	259 JumpIfEqual {452}
	260 Move W0, [X21+96]
	261 Move W1, 1
	262 Move X2, X31
	263 Call NetworkObjectRuntimeFlagsExtensions.CheckFlag, X0, X1
	264 Move TEMP, X0
	265 And TEMP, TEMP, 1
	266 Compare TEMP, 1
	267 JumpIfNotEqual {285}
	268 Move X0, [X27]
	269 Move W8, [X0+224]
	270 Compare W8, 0
	271 JumpIfNotEqual {273}
	272 Call 0x1C17DFC
	273 Move W0, [X21+96]
	274 Move W1, 0x20000
	275 Move X2, X31
	276 Call NetworkObjectRuntimeFlagsExtensions.CheckFlag, X0, X1
	277 Compare X20, 0
	278 JumpIfEqual {452}
	279 NotImplemented "Instruction ORN not yet implemented."
	280 And W2, W8, 1
	281 Move X0, X20
	282 Move X1, X21
	283 Move X3, X31
	284 Call NetworkRunner.InvokeBeforeSpawnedCallbacks, X0, X1, X2, X3
	285 Move X8, [X19+24]
	286 Add X22, X22, 1
	287 NotImplemented "Instruction CMP not yet implemented."
	288 NotImplemented "Instruction CMP not yet implemented."
	289 Move X22, X31
	290 Add X23, X19, 32
	291 NotImplemented "Instruction CMP not yet implemented."
	292 Move X0, [X27]
	293 Move X21, [X23]
	294 Move W8, [X0+224]
	295 Compare W8, 0
	296 JumpIfNotEqual {298}
	297 Call 0x1C17DFC
	298 Compare X21, 0
	299 JumpIfEqual {452}
	300 Move W0, [X21+96]
	301 Move W1, 1
	302 Move X2, X31
	303 Call NetworkObjectRuntimeFlagsExtensions.CheckFlag, X0, X1
	304 Move TEMP, X0
	305 And TEMP, TEMP, 1
	306 Compare TEMP, 1
	307 JumpIfNotEqual {310}
	308 Move X1, X21
	309 Call NetworkRunner.InvokeSpawnedCallback, X0, X1
	310 Move X8, [X19+24]
	311 Add X22, X22, 1
	312 NotImplemented "Instruction CMP not yet implemented."
	313 NotImplemented "Instruction CMP not yet implemented."
	314 Move X22, X31
	315 Add X23, X19, 32
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Move X0, [X27]
	318 Move X21, [X23]
	319 Move W8, [X0+224]
	320 Compare W8, 0
	321 JumpIfNotEqual {323}
	322 Call 0x1C17DFC
	323 Compare X21, 0
	324 JumpIfEqual {452}
	325 Move W0, [X21+96]
	326 Move W1, 1
	327 Move X2, X31
	328 Call NetworkObjectRuntimeFlagsExtensions.CheckFlag, X0, X1
	329 Move TEMP, X0
	330 And TEMP, TEMP, 1
	331 Compare TEMP, 1
	332 JumpIfNotEqual {335}
	333 Move X1, X21
	334 Call NetworkRunner.InvokeAfterSpawnedCallback, X0, X1
	335 Move W8, [X19+24]
	336 Add X22, X22, 1
	337 NotImplemented "Instruction CMP not yet implemented."
	338 Move X0, X20
	339 Call NetworkRunner.get_IsSharedModeMasterClient, X0
	340 Move TEMP, X0
	341 And TEMP, TEMP, 1
	342 Compare TEMP, 1
	343 JumpIfNotEqual {438}
	344 Move X8, [X20+80]
	345 Compare X8, 0
	346 JumpIfEqual {452}
	347 Move X0, [X8+88]
	348 Compare X0, 0
	349 JumpIfEqual {452}
	350 Move X1, X31
	351 Call SimulationConfig.get_SchedulingEnabled, X0
	352 Move TEMP, X0
	353 And TEMP, TEMP, 1
	354 Compare TEMP, 1
	355 JumpIfEqual {368}
	356 Move X8, [X20+80]
	357 Compare X8, 0
	358 JumpIfEqual {452}
	359 Move X0, [X8+88]
	360 Compare X0, 0
	361 JumpIfEqual {452}
	362 Move X1, X31
	363 Call SimulationConfig.get_AreaOfInterestEnabled, X0
	364 Move TEMP, X0
	365 And TEMP, TEMP, 1
	366 Compare TEMP, 1
	367 JumpIfNotEqual {438}
	368 Move X8, [X19+24]
	369 NotImplemented "Instruction CMP not yet implemented."
	370 Move X21, 0x2253000
	371 Move X21, [X21+32]
	372 Move X25, X31
	373 And X8, X8, 0
	374 Add X26, X19, 32
	375 Move X27, 0x2533000
	376 Move W28, 1
	377 NotImplemented "Instruction CMP not yet implemented."
	378 Move X23, [X20+80]
	379 Compare X23, 0
	380 JumpIfEqual {452}
	381 Move X8, [X23]
	382 Move X22, [X26]
	383 Move X0, X23
	384 Move X9, [X8+616]
	385 Move X1, [X8+624]
	386 NotImplemented "Instruction BLR not yet implemented."
	387 Move W8, [X27+2931]
	388 Move X24, X0
	389 Compare W8, 0
	390 JumpIfNotEqual {394}
	391 Move X0, X21
	392 Call 0x1C17CF4
	393 Move [X27+2931], W28
	394 Move [X31+24], X31
	395 Move X0, [X23+184]
	396 Compare X0, 0
	397 JumpIfEqual {452}
	398 Move X3, [X21]
	399 And X1, X24, 0
	400 Add X2, X31, 24
	401 Call Dictionary`2<PlayerRef, Object>.TryGetValue, X0, X1, X2
	402 Move X23, [X31+24]
	403 Move W24, W0
	404 Move X0, X22
	405 Move X1, X31
	406 Call NetworkObject.op_Implicit, X0
	407 Compare X23, 0
	408 JumpIfEqual {452}
	409 Move TEMP, X24
	410 And TEMP, TEMP, 1
	411 Compare TEMP, 1
	412 JumpIfNotEqual {452}
	413 And X1, X0, 0
	414 Move W2, 1
	415 Move X0, X23
	416 Move W3, W31
	417 Move X4, X31
	418 Call SimulationConnection.GetObjectData, X0, X1, X2, X3
	419 Move W8, [X19+24]
	420 Add X25, X25, 1
	421 NotImplemented "Instruction CMP not yet implemented."
	422 Move X20, X31
	423 Add X21, X19, 32
	424 NotImplemented "Instruction CMP not yet implemented."
	425 Move X0, [X21]
	426 Compare X0, 0
	427 JumpIfEqual {452}
	428 Move X1, X31
	429 Call Component.get_gameObject, X0
	430 Compare X0, 0
	431 JumpIfEqual {452}
	432 Move W1, W31
	433 Move X2, X31
	434 Call GameObject.SetActive, X0, X1
	435 Move W8, [X19+24]
	436 Add X20, X20, 1
	437 NotImplemented "Instruction CMP not yet implemented."
	438 Move X20, [X31+112]
	439 Move X19, [X31+120]
	440 Move X22, [X31+96]
	441 Move X21, [X31+104]
	442 Move X24, [X31+80]
	443 Move X23, [X31+88]
	444 Move X26, [X31+64]
	445 Move X25, [X31+72]
	446 Move X28, [X31+48]
	447 Move X27, [X31+56]
	448 Move X29, [X31+32]
	449 Move X30, [X31+40]
	450 Add X31, X31, 128
	451 Return 
	452 Call 0x1C17F20
	453 Call 0x1C17F28
	454 Move [X31+24], W26
	455 Move X0, 0x224E000
	456 Move X0, [X0+1880]
	457 Call 0x1C17D08
	458 Add X1, X31, 24
	459 Call 0x1C17E04
	460 Move X19, X0
	461 Move X0, 0x2259000
	462 Move X0, [X0+3008]
	463 Move [X31+24], W26
	464 Move X0, 0x224E000
	465 Move X0, [X0+1880]
	466 Call 0x1C17D08
	467 Add X1, X31, 24
	468 Call 0x1C17E04
	469 Move X19, X0
	470 Move X0, 0x2259000
	471 Move X0, [X0+3016]
	472 Call 0x1C17D08
	473 Move X1, X19
	474 Move X2, X31
	475 Call String.Format, X0, X1
	476 Move X19, X0
	477 Move X0, 0x2256000
	478 Move X0, [X0+1400]
	479 Call 0x1C17D08
	480 Call 0x1C17F10
	481 Move X20, X0
	482 Move X0, 0x2259000
	483 Move X0, [X0+3024]
	484 Call 0x1C17D08
	485 Move X2, X0
	486 Move X0, X20
	487 Move X1, X19
	488 Move X3, X31
	489 Call ArgumentException..ctor, X0, X1, X2
	490 Move X0, 0x2259000
	491 Move X0, [X0+3032]
	492 Call 0x1C17D08
	493 Move X1, X0
	494 Move X0, X20
	495 Call 0x1C17DEC
	496 Move X0, 0x2253000
	497 Move X0, [X0+1320]
	498 Call 0x1C17D08
	499 Call 0x1C17F10
	500 Move X19, X0
	501 Move X0, 0x2259000
	502 Move X0, [X0+3024]
	503 Call 0x1C17D08
	504 Move X1, X0
	505 Move X0, X19
	506 Move X2, X31
	507 Call ArgumentNullException..ctor, X0, X1
	508 Move X0, 0x2259000
	509 Move X0, [X0+3032]
	510 Call 0x1C17D08
	511 Move X1, X0
	512 Move X0, X19
	513 Call 0x1C17DEC

Method: System.Void AttachActivatedByUser(Fusion.NetworkObject networkObject)

Disassembly:
	0x01EA6CAC BL 0x1C16CF4
	0x01EA6CB0 MOVZ W8, 0x1
	0x01EA6CB4 STRB W8, [X20 + 0x353]
	0x01EA6CB8 MOV X0, X19
	0x01EA6CBC BL 0x1EA6D70
	0x01EA6CC0 STR W0, [X31 + 0x8]
	0x01EA6CC4 MOV X0, X19
	0x01EA6CC8 BL 0x1EA6E74
	0x01EA6CCC STR W0, [X31]
	0x01EA6CD0 ADD X0, X31, 0x8
	0x01EA6CD4 MOV X1, X31
	0x01EA6CD8 BL 0x3C90350
	0x01EA6CDC TBZ X0, 0x0, 0x1EA6D14
	0x01EA6CE0 ADRP X8, 0x224D000
	0x01EA6CE4 LDR X8, [X8 + 0x5F8]
	0x01EA6CE8 LDR X0, [X8]
	0x01EA6CEC LDR W8, [X0 + 0xE0]
	0x01EA6CF0 CBNZ W8, 0x1EA6CF8
	0x01EA6CF4 BL 0x1C16DFC
	0x01EA6CF8 MOV X0, X31
	0x01EA6CFC BL 0x3C8DC08
	0x01EA6D00 TBNZ X0, 0x0, 0x1EA6D14
	0x01EA6D04 ADD X0, X31, 0x8
	0x01EA6D08 MOV V0.16B, V8.16B
	0x01EA6D0C MOV X1, X31
	0x01EA6D10 BL 0x3C90418
	0x01EA6D14 ADD X0, X31, 0x0
	0x01EA6D18 MOV X1, X31
	0x01EA6D1C BL 0x3C877F4
	0x01EA6D20 TBZ X0, 0x0, 0x1EA6D5C
	0x01EA6D24 ADRP X8, 0x2254000
	0x01EA6D28 LDR X8, [X8 + 0xC60]
	0x01EA6D2C LDR X0, [X8]
	0x01EA6D30 LDR W8, [X0 + 0xE0]
	0x01EA6D34 CBNZ W8, 0x1EA6D3C
	0x01EA6D38 BL 0x1C16DFC
	0x01EA6D3C MOV X0, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2534000
	006 Move W8, [X21+831]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2257000
	014 Move X0, [X0+3712]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+831], W8
	018 Compare X19, 0
	019 JumpIfEqual {49}
	020 Move X8, 0x2257000
	021 Move X8, [X8+3712]
	022 Move W21, [X19+96]
	023 Move X0, [X8]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move W21, W21
	029 ShiftRight W21, 20
	030 And W21, W21, 0xFFFFF
	031 Move X0, X20
	032 Move X1, X19
	033 Move W2, W21
	034 Call NetworkRunner.InitializeNetworkObjectState, X0, X1, X2
	035 Move X0, X20
	036 Move X1, X19
	037 Move W2, W21
	038 Move X3, X31
	039 Call NetworkRunner.InvokeBeforeSpawnedCallbacks, X0, X1, X2, X3
	040 Move X1, X19
	041 Call NetworkRunner.InvokeSpawnedCallback, X0, X1
	042 Move X1, X19
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Call NetworkRunner.InvokeAfterSpawnedCallback, X0, X1
	048 Return 
	049 Call 0x1C17F20

Method: System.Int32 RegisterSceneObjects(Fusion.SceneRef scene, Fusion.NetworkObject[] objects, Fusion.NetworkSceneLoadId loadId = null)

Disassembly:
	0x01EA6D48 B.NE 0x1EA6D5C
	0x01EA6D4C ADD X0, X31, 0x0
	0x01EA6D50 MOV V0.16B, V8.16B
	0x01EA6D54 MOV X1, X31
	0x01EA6D58 BL 0x3C878BC
	0x01EA6D5C LDP X20, X19, [X31 + 0x20]
	0x01EA6D60 LDR X30, [X31 + 0x18]
	0x01EA6D64 LDR V8, [X31 + 0x10]
	0x01EA6D68 ADD X31, X31, 0x30
	0x01EA6D6C RET
	0x01EA6D70 STR X30, [X31 - 0x20]!
	0x01EA6D74 STP X20, X19, [X31 + 0x10]
	0x01EA6D78 ADRP X20, 0x2533000
	0x01EA6D7C LDRB W8, [X20 + 0x366]
	0x01EA6D80 MOV X19, X0
	0x01EA6D84 TBNZ X8, 0x0, 0x1EA6DA8
	0x01EA6D88 ADRP X0, 0x2254000
	0x01EA6D8C LDR X0, [X0 + 0xCB0]
	0x01EA6D90 BL 0x1C16CF4
	0x01EA6D94 ADRP X0, 0x224D000
	0x01EA6D98 LDR X0, [X0 + 0x5F8]
	0x01EA6D9C BL 0x1C16CF4
	0x01EA6DA0 MOVZ W8, 0x1
	0x01EA6DA4 STRB W8, [X20 + 0x366]
	0x01EA6DA8 STR W31, [X31 + 0x8]
	0x01EA6DAC LDR X0, [X19 + 0x50]
	0x01EA6DB0 CBZ X0, 0x1EA6E10
	0x01EA6DB4 MOV X1, X31
	0x01EA6DB8 BL 0x1EC0A3C
	0x01EA6DBC TBZ X0, 0x0, 0x1EA6E10
	0x01EA6DC0 LDR X19, [X19 + 0x100]
	0x01EA6DC4 CBZ X19, 0x1EA6E70
	0x01EA6DC8 ADRP X10, 0x2254000
	0x01EA6DCC LDR X8, [X19]
	0x01EA6DD0 LDR X10, [X10 + 0xCB0]
	0x01EA6DD4 LDRH W9, [X8 + 0x12E]
	0x01EA6DD8 LDR X1, [X10]
	0x01EA6DDC CBZ X9, 0x1EA6E00
	0x01EA6DE0 LDR X10, [X8 + 0xB0]
	0x01EA6DE4 ADD X10, X10, 0x8
	0x01EA6DE8 LDUR X11, [X10 - 0x8]
	0x01EA6DEC CMP X11, X1
	0x01EA6DF0 B.EQ 0x1EA6E34
	0x01EA6DF4 SUBS X9, X9, 0x1
	0x01EA6DF8 ADD X10, X10, 0x10
	0x01EA6DFC B.NE 0x1EA6DE8
	0x01EA6E00 MOVZ W2, 0x6
	0x01EA6E04 MOV X0, X19
	0x01EA6E08 BL 0x1C5C788
	0x01EA6E0C B 0x1EA6E44
	0x01EA6E10 ADRP X8, 0x224D000
	0x01EA6E14 LDR X8, [X8 + 0x5F8]
	0x01EA6E18 LDR X0, [X8]
	0x01EA6E1C LDR W8, [X0 + 0xE0]
	0x01EA6E20 CBNZ W8, 0x1EA6E28
	0x01EA6E24 BL 0x1C16DFC
	0x01EA6E28 MOV X0, X31
	0x01EA6E2C BL 0x3C8A804
	0x01EA6E30 B 0x1EA6E60
	0x01EA6E34 LDR W9, [X10]
	0x01EA6E38 ADD W9, W9, 0x6
	0x01EA6E3C ADD X8, X8, W9, 0x4, SXTW
	0x01EA6E40 ADD X0, X8, 0x138
	0x01EA6E44 LDP X8, X2, [X0]
	0x01EA6E48 ADD X1, X31, 0x8
	0x01EA6E4C MOV X0, X19
	0x01EA6E50 BLR X8
	0x01EA6E54 LDR W8, [X31 + 0x8]
	0x01EA6E58 ANDS W31, W0, 0x1
	0x01EA6E5C CSEL W0, W8, W31, NE
	0x01EA6E60 LDP X20, X19, [X31 + 0x10]
	0x01EA6E64 MOV W0, W0
	0x01EA6E68 LDR X30, [X31], #0x20
	0x01EA6E6C RET
	0x01EA6E70 BL 0x1C16F20
	0x01EA6E74 STR X30, [X31 - 0x20]!
	0x01EA6E78 STP X20, X19, [X31 + 0x10]
	0x01EA6E7C ADRP X20, 0x2533000
	0x01EA6E80 LDRB W8, [X20 + 0x367]
	0x01EA6E84 MOV X19, X0
	0x01EA6E88 TBNZ X8, 0x0, 0x1EA6EAC
	0x01EA6E8C ADRP X0, 0x2254000
	0x01EA6E90 LDR X0, [X0 + 0xCB0]
	0x01EA6E94 BL 0x1C16CF4
	0x01EA6E98 ADRP X0, 0x2254000
	0x01EA6E9C LDR X0, [X0 + 0xC60]
	0x01EA6EA0 BL 0x1C16CF4
	0x01EA6EA4 MOVZ W8, 0x1
	0x01EA6EA8 STRB W8, [X20 + 0x367]
	0x01EA6EAC STR W31, [X31 + 0x8]
	0x01EA6EB0 LDR X0, [X19 + 0x50]
	0x01EA6EB4 CBZ X0, 0x1EA6F14
	0x01EA6EB8 MOV X1, X31
	0x01EA6EBC BL 0x1EC0A3C
	0x01EA6EC0 TBZ X0, 0x0, 0x1EA6F14
	0x01EA6EC4 LDR X19, [X19 + 0x100]
	0x01EA6EC8 CBZ X19, 0x1EA6F74
	0x01EA6ECC ADRP X10, 0x2254000
	0x01EA6ED0 LDR X8, [X19]
	0x01EA6ED4 LDR X10, [X10 + 0xCB0]
	0x01EA6ED8 LDRH W9, [X8 + 0x12E]
	0x01EA6EDC LDR X1, [X10]
	0x01EA6EE0 CBZ X9, 0x1EA6F04
	0x01EA6EE4 LDR X10, [X8 + 0xB0]
	0x01EA6EE8 ADD X10, X10, 0x8
	0x01EA6EEC LDUR X11, [X10 - 0x8]
	0x01EA6EF0 CMP X11, X1
	0x01EA6EF4 B.EQ 0x1EA6F38
	0x01EA6EF8 SUBS X9, X9, 0x1
	0x01EA6EFC ADD X10, X10, 0x10
	0x01EA6F00 B.NE 0x1EA6EEC
	0x01EA6F04 MOVZ W2, 0x5
	0x01EA6F08 MOV X0, X19
	0x01EA6F0C BL 0x1C5C788
	0x01EA6F10 B 0x1EA6F48
	0x01EA6F14 ADRP X8, 0x2254000
	0x01EA6F18 LDR X8, [X8 + 0xC60]
	0x01EA6F1C LDR X0, [X8]
	0x01EA6F20 LDR W8, [X0 + 0xE0]
	0x01EA6F24 CBNZ W8, 0x1EA6F2C
	0x01EA6F28 BL 0x1C16DFC
	0x01EA6F2C MOV X0, X31
	0x01EA6F30 BL 0x3C88790
	0x01EA6F34 B 0x1EA6F64
	0x01EA6F38 LDR W9, [X10]
	0x01EA6F3C ADD W9, W9, 0x5
	0x01EA6F40 ADD X8, X8, W9, 0x4, SXTW
	0x01EA6F44 ADD X0, X8, 0x138
	0x01EA6F48 LDP X8, X2, [X0]
	0x01EA6F4C ADD X1, X31, 0x8
	0x01EA6F50 MOV X0, X19
	0x01EA6F54 BLR X8
	0x01EA6F58 LDR W8, [X31 + 0x8]
	0x01EA6F5C ANDS W31, W0, 0x1
	0x01EA6F60 CSEL W0, W8, W31, NE
	0x01EA6F64 LDP X20, X19, [X31 + 0x10]
	0x01EA6F68 MOV W0, W0
	0x01EA6F6C LDR X30, [X31], #0x20
	0x01EA6F70 RET
	0x01EA6F74 BL 0x1C16F20
	0x01EA6F78 STP X30, X19, [X31 - 0x10]!
	0x01EA6F7C LDRB W8, [X0 + 0xF8]
	0x01EA6F80 CBZ W8, 0x1EA6FB0
	0x01EA6F84 MOV X19, X0
	0x01EA6F88 LDR X0, [X0 + 0x50]
	0x01EA6F8C CBZ X0, 0x1EA6FB0
	0x01EA6F90 MOV X1, X31
	0x01EA6F94 BL 0x1EC0A3C
	0x01EA6F98 TBZ X0, 0x0, 0x1EA6FB0
	0x01EA6F9C MOV X0, X31
	0x01EA6FA0 BL 0x3C3C7DC
	0x01EA6FA4 MOV X0, X19
	0x01EA6FA8 LDP X30, X19, [X31], #0x10
	0x01EA6FAC B 0x1EA6C74
	0x01EA6FB0 LDP X30, X19, [X31], #0x10
	0x01EA6FB4 RET
	0x01EA6FB8 STP X30, X23, [X31 - 0x30]!
	0x01EA6FBC STP X22, X21, [X31 + 0x10]
	0x01EA6FC0 STP X20, X19, [X31 + 0x20]
	0x01EA6FC4 ADRP X23, 0x2533000
	0x01EA6FC8 ADRP X21, 0x2256000
	0x01EA6FCC LDRB W8, [X23 + 0x355]
	0x01EA6FD0 LDR X21, [X21 + 0xE80]
	0x01EA6FD4 MOV W19, W1
	0x01EA6FD8 MOV X20, X0
	0x01EA6FDC AND W22, W1, 0x1
	0x01EA6FE0 TBNZ X8, 0x0, 0x1EA7010
	0x01EA6FE4 ADRP X0, 0x2256000
	0x01EA6FE8 LDR X0, [X0 + 0xE80]
	0x01EA6FEC BL 0x1C16CF4
	0x01EA6FF0 ADRP X0, 0x2254000
	0x01EA6FF4 LDR X0, [X0 + 0xC60]
	0x01EA6FF8 BL 0x1C16CF4
	0x01EA6FFC ADRP X0, 0x224D000
	0x01EA7000 LDR X0, [X0 + 0x5F8]
	0x01EA7004 BL 0x1C16CF4
	0x01EA7008 MOVZ W8, 0x1
	0x01EA700C STRB W8, [X23 + 0x355]
	0x01EA7010 STRB W22, [X20 + 0xF8]
	0x01EA7014 LDR X0, [X21]
	0x01EA7018 LDR W8, [X0 + 0xE0]
	0x01EA701C CBNZ W8, 0x1EA7028
	0x01EA7020 BL 0x1C16DFC
	0x01EA7024 LDR X0, [X21]
	0x01EA7028 LDR X8, [X0 + 0xB8]
	0x01EA702C ADRP X23, 0x2253000
	0x01EA7030 ADRP X22, 0x224C000
	0x01EA7034 LDRB W8, [X8 + 0xD]
	0x01EA7038 LDR X23, [X23 + 0xC60]
	0x01EA703C LDR X22, [X22 + 0x5F8]
	0x01EA7040 CBZ W8, 0x1EA706C
	0x01EA7044 TBZ X19, 0x0, 0x1EA70E0
	0x01EA7048 LDR X0, [X23]
	0x01EA704C LDR W8, [X0 + 0xE0]
	0x01EA7050 CBNZ W8, 0x1EA7058
	0x01EA7054 BL 0x1C16DFC
	0x01EA7058 MOVZ W0, 0x2
	0x01EA705C MOV X1, X31
	0x01EA7060 BL 0x3C8884C
	0x01EA7064 MOV W19, W31
	0x01EA7068 B 0x1EA713C
	0x01EA706C LDR X0, [X23]
	0x01EA7070 LDR W8, [X0 + 0xE0]
	0x01EA7074 CBNZ W8, 0x1EA707C
	0x01EA7078 BL 0x1C16DFC
	0x01EA707C MOV X0, X31
	0x01EA7080 BL 0x3C88824
	0x01EA7084 LDR X8, [X21]
	0x01EA7088 MOV W20, W0
	0x01EA708C LDR W9, [X8 + 0xE0]
	0x01EA7090 CBNZ W9, 0x1EA70A0
	0x01EA7094 MOV X0, X8
	0x01EA7098 BL 0x1C16DFC
	0x01EA709C LDR X8, [X21]
	0x01EA70A0 LDR X8, [X8 + 0xB8]
	0x01EA70A4 STR W20, [X8 + 0x8]
	0x01EA70A8 LDR X0, [X22]
	0x01EA70AC LDR W8, [X0 + 0xE0]
	0x01EA70B0 CBNZ W8, 0x1EA70B8
	0x01EA70B4 BL 0x1C16DFC
	0x01EA70B8 MOV X0, X31
	0x01EA70BC BL 0x3C8DC08
	0x01EA70C0 MOV W8, W0
	0x01EA70C4 LDR X0, [X21]
	0x01EA70C8 AND W8, W8, 0x1
	0x01EA70CC MOVZ W10, 0x1
	0x01EA70D0 LDR X9, [X0 + 0xB8]
	0x01EA70D4 STRB W8, [X9 + 0xC]
	0x01EA70D8 STRB W10, [X9 + 0xD]
	0x01EA70DC TBNZ X19, 0x0, 0x1EA7048
	0x01EA70E0 LDR W8, [X0 + 0xE0]
	0x01EA70E4 CBNZ W8, 0x1EA70F0
	0x01EA70E8 BL 0x1C16DFC
	0x01EA70EC LDR X0, [X21]
	0x01EA70F0 LDR X8, [X23]
	0x01EA70F4 LDR X9, [X0 + 0xB8]
	0x01EA70F8 LDR W10, [X8 + 0xE0]
	0x01EA70FC LDR W19, [X9 + 0x8]
	0x01EA7100 CBNZ W10, 0x1EA710C
	0x01EA7104 MOV X0, X8
	0x01EA7108 BL 0x1C16DFC
	0x01EA710C MOV W0, W19
	0x01EA7110 MOV X1, X31
	0x01EA7114 BL 0x3C8884C
	0x01EA7118 LDR X0, [X21]
	0x01EA711C LDR W8, [X0 + 0xE0]
	0x01EA7120 CBNZ W8, 0x1EA712C
	0x01EA7124 BL 0x1C16DFC
	0x01EA7128 LDR X0, [X21]
	0x01EA712C LDR X8, [X0 + 0xB8]
	0x01EA7130 LDRB W8, [X8 + 0xC]
	0x01EA7134 CMP W8, 0x0
	0x01EA7138 CSET W19, NE
	0x01EA713C LDR X0, [X22]
	0x01EA7140 LDR W8, [X0 + 0xE0]
	0x01EA7144 CBNZ W8, 0x1EA714C
	0x01EA7148 BL 0x1C16DFC
	0x01EA714C MOV W0, W19
	0x01EA7150 LDP X20, X19, [X31 + 0x20]
	0x01EA7154 LDP X22, X21, [X31 + 0x10]
	0x01EA7158 MOV X1, X31
	0x01EA715C LDP X30, X23, [X31], #0x30
	0x01EA7160 B 0x3C8DC80
	0x01EA7164 SUB X31, X31, 0x30
	0x01EA7168 STP X30, X21, [X31 + 0x10]
	0x01EA716C STP X20, X19, [X31 + 0x20]
	0x01EA7170 ADRP X21, 0x2532000
	0x01EA7174 LDRB W8, [X21 + 0x356]
	0x01EA7178 MOV X19, X1
	0x01EA717C MOV X20, X0
	0x01EA7180 TBNZ X8, 0x0, 0x1EA71A4
	0x01EA7184 ADRP X0, 0x224F000
	0x01EA7188 LDR X0, [X0 + 0x398]
	0x01EA718C BL 0x1C16CF4
	0x01EA7190 ADRP X0, 0x2257000
	0x01EA7194 LDR X0, [X0 + 0xC90]
	0x01EA7198 BL 0x1C16CF4
	0x01EA719C MOVZ W8, 0x1
	0x01EA71A0 STRB W8, [X21 + 0x356]
	0x01EA71A4 STR X31, [X31 + 0x8]
	0x01EA71A8 LDR X20, [X20 + 0x50]
	0x01EA71AC CBZ X20, 0x1EA7204
	0x01EA71B0 ADRP X8, 0x224F000
	0x01EA71B4 LDR X8, [X8 + 0x398]
	0x01EA71B8 ADRP X21, 0x2257000
	0x01EA71BC LDR X0, [X8]
	0x01EA71C0 LDR W8, [X0 + 0xE0]
	0x01EA71C4 LDR X21, [X21 + 0xC90]
	0x01EA71C8 CBNZ W8, 0x1EA71D0
	0x01EA71CC BL 0x1C16DFC
	0x01EA71D0 MOV X0, X31
	0x01EA71D4 BL 0x1E92E58
	0x01EA71D8 LDR X3, [X21]
	0x01EA71DC AND X1, X0, 0x0
	0x01EA71E0 ADD X2, X31, 0x8
	0x01EA71E4 MOV X0, X20
	0x01EA71E8 BL 0x22551B8
	0x01EA71EC TBZ X0, 0x0, 0x1EA7204
	0x01EA71F0 LDR X8, [X31 + 0x8]
	0x01EA71F4 MOVZ W0, 0x1
	0x01EA71F8 LDR V0, [X8]
	0x01EA71FC STR S0, [X19]
	0x01EA7200 B 0x1EA720C
	0x01EA7204 MOV W0, W31
	0x01EA7208 STR W31, [X19]
	0x01EA720C LDP X20, X19, [X31 + 0x20]
	0x01EA7210 LDP X30, X21, [X31 + 0x10]
	0x01EA7214 ADD X31, X31, 0x30
	0x01EA7218 RET
	0x01EA721C SUB X31, X31, 0x30
	0x01EA7220 STR D8, [X31 + 0x10]
	0x01EA7224 STR X30, [X31 + 0x18]
	0x01EA7228 STP X20, X19, [X31 + 0x20]
	0x01EA722C ADRP X20, 0x2532000
	0x01EA7230 LDRB W8, [X20 + 0x357]
	0x01EA7234 MOV V8.16B, V0.16B
	0x01EA7238 MOV X19, X0
	0x01EA723C TBNZ X8, 0x0, 0x1EA7260
	0x01EA7240 ADRP X0, 0x224F000
	0x01EA7244 LDR X0, [X0 + 0x398]
	0x01EA7248 BL 0x1C16CF4
	0x01EA724C ADRP X0, 0x2257000
	0x01EA7250 LDR X0, [X0 + 0xC90]
	0x01EA7254 BL 0x1C16CF4
	0x01EA7258 MOVZ W8, 0x1
	0x01EA725C STRB W8, [X20 + 0x357]
	0x01EA7260 MOV X0, X19
	0x01EA7264 STR X31, [X31 + 0x8]
	0x01EA7268 BL 0x1EA62BC
	0x01EA726C TBZ X0, 0x0, 0x1EA72E0
	0x01EA7270 LDR X19, [X19 + 0x50]
	0x01EA7274 CBZ X19, 0x1EA72C8
	0x01EA7278 ADRP X8, 0x224F000
	0x01EA727C LDR X8, [X8 + 0x398]
	0x01EA7280 ADRP X20, 0x2257000
	0x01EA7284 LDR X0, [X8]
	0x01EA7288 LDR W8, [X0 + 0xE0]
	0x01EA728C LDR X20, [X20 + 0xC90]
	0x01EA7290 CBNZ W8, 0x1EA7298
	0x01EA7294 BL 0x1C16DFC
	0x01EA7298 MOV X0, X31
	0x01EA729C BL 0x1E92E58
	0x01EA72A0 LDR X3, [X20]
	0x01EA72A4 AND X1, X0, 0x0
	0x01EA72A8 ADD X2, X31, 0x8
	0x01EA72AC MOV X0, X19
	0x01EA72B0 BL 0x22551B8
	0x01EA72B4 TBZ X0, 0x0, 0x1EA72C8
	0x01EA72B8 LDR X8, [X31 + 0x8]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X21, 0x2534000
	015 Move W8, [X21+832]
	016 Move X22, X3
	017 Move X20, X2
	018 Move X19, X0
	019 Move [X31+72], W1
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {59}
	024 Move X0, 0x2259000
	025 Move X0, [X0+3040]
	026 Call 0x1C17CF4
	027 Move X0, 0x2259000
	028 Move X0, [X0+3048]
	029 Call 0x1C17CF4
	030 Move X0, 0x2259000
	031 Move X0, [X0+3056]
	032 Call 0x1C17CF4
	033 Move X0, 0x2259000
	034 Move X0, [X0+3064]
	035 Call 0x1C17CF4
	036 Move X0, 0x2259000
	037 Move X0, [X0+3072]
	038 Call 0x1C17CF4
	039 Move X0, 0x2259000
	040 Move X0, [X0+3080]
	041 Call 0x1C17CF4
	042 Move X0, 0x2259000
	043 Move X0, [X0+888]
	044 Call 0x1C17CF4
	045 Move X0, 0x2257000
	046 Move X0, [X0+3712]
	047 Call 0x1C17CF4
	048 Move X0, 0x2259000
	049 Move X0, [X0+3088]
	050 Call 0x1C17CF4
	051 Move X0, 0x2259000
	052 Move X0, [X0+3096]
	053 Call 0x1C17CF4
	054 Move X0, 0x2259000
	055 Move X0, [X0+2200]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X21+832], W8
	059 Add X0, X31, 72
	060 Move X1, X31
	061 Move [X31+48], X31
	062 Move [X31+56], X31
	063 Move [X31+64], X31
	064 Move [X31+32], X31
	065 Move [X31+40], X31
	066 Call SceneRef.get_IsValid, X0
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {320}
	071 Compare X20, 0
	072 JumpIfEqual {332}
	073 Move X24, 0x2259000
	074 Move X24, [X24+2200]
	075 Move X0, [X24]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {81}
	079 Call 0x1C17DFC
	080 Move X0, [X24]
	081 Move X8, [X0+184]
	082 Move X26, 0x2259000
	083 Move X25, 0x2259000
	084 Move X21, [X8+8]
	085 Move X26, [X26+3048]
	086 Move X25, [X25+3040]
	087 Compare X21, 0
	088 JumpIfNotEqual {110}
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {94}
	092 Call 0x1C17DFC
	093 Move X0, [X24]
	094 Move X9, 0x2259000
	095 Move X8, [X0+184]
	096 Move X9, [X9+3080]
	097 Move X23, [X8]
	098 Move X0, [X9]
	099 Call 0x1C17F10
	100 Move X8, 0x2259000
	101 Move X8, [X8+3096]
	102 Move X1, X23
	103 Move X3, X31
	104 Move X21, X0
	105 Move X2, [X8]
	106 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	107 Move X8, [X24]
	108 Move X8, [X8+184]
	109 Move [X8+8], X21
	110 Move X2, [X26]
	111 Move X0, X20
	112 Move X1, X21
	113 Call Enumerable.Where, X0, X1
	114 Move X1, [X25]
	115 Call Enumerable.ToArray, X0
	116 Compare X0, 0
	117 JumpIfEqual {315}
	118 Move W8, [X0+24]
	119 Move X26, 0x2259000
	120 Move X26, [X26+888]
	121 Move X20, X0
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move W21, W31
	124 And X23, X22, 255
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X0, [X26]
	127 Add X8, X20, W21
	128 Move X25, [X8+32]
	129 Move W24, [X31+72]
	130 Move W8, [X0+224]
	131 Compare W8, 0
	132 JumpIfNotEqual {134}
	133 Call 0x1C17DFC
	134 Move X0, X24
	135 Move W1, W21
	136 Move X2, X23
	137 Move X3, X31
	138 Call NetworkObjectTypeId.FromSceneRefAndObjectIndex, X0, X1, X2
	139 Compare X25, 0
	140 JumpIfEqual {315}
	141 Move [X25+100], X0
	142 Move W8, [X20+24]
	143 Add W21, W21, 1
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X0, X19
	146 Call NetworkRunner.get_IsSharedModeMasterClient, X0
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfNotEqual {292}
	151 Move X8, [X19+80]
	152 Compare X8, 0
	153 JumpIfEqual {315}
	154 Move X8, [X8+168]
	155 Compare X8, 0
	156 JumpIfEqual {315}
	157 Move X0, [X8+32]
	158 Compare X0, 0
	159 JumpIfEqual {315}
	160 Move X8, 0x2259000
	161 Move X8, [X8+3088]
	162 Move X1, [X8]
	163 Add X8, X31, 8
	164 Call Queue`1<NetworkId>.GetEnumerator, X0
	165 NotImplemented "Instruction LDUR not yet implemented."
	166 Move X8, [X31+24]
	167 Move X28, 0x2259000
	168 Move X29, 0x2259000
	169 And W27, W22, 255
	170 Move X28, [X28+3064]
	171 Move X29, [X29+3072]
	172 Move [X31+3], V0
	173 Move [X31+64], X8
	174 Move X22, 0x2257000
	175 Move X22, [X22+3712]
	176 Move X1, [X28]
	177 Add X0, X31, 48
	178 Call Enumerator<NetworkId>.MoveNext, X0
	179 Move TEMP, X0
	180 And TEMP, TEMP, 1
	181 Compare TEMP, 1
	182 JumpIfNotEqual {287}
	183 Move X1, [X29]
	184 Add X0, X31, 48
	185 Call Enumerator<NetworkId>.get_Current, X0
	186 Move X8, X0
	187 Move X0, [X19+80]
	188 Compare X0, 0
	189 JumpIfEqual {317}
	190 And X1, X8, 0
	191 Add X2, X31, 40
	192 Move X3, X31
	193 Call Simulation.TryGetMeta, X0, X1, X2
	194 Move TEMP, X0
	195 And TEMP, TEMP, 1
	196 Compare TEMP, 1
	197 JumpIfNotEqual {176}
	198 Move X0, [X31+40]
	199 Compare X0, 0
	200 JumpIfEqual {318}
	201 Move X1, X31
	202 Call NetworkObjectMeta.get_Type, X0
	203 Move X8, X0
	204 Move X0, [X26]
	205 Move [X31+32], X8
	206 Move W8, [X0+224]
	207 Compare W8, 0
	208 JumpIfNotEqual {210}
	209 Call 0x1C17DFC
	210 Add X0, X31, 32
	211 Move X1, X31
	212 Call NetworkObjectTypeId.get_IsSceneObject, X0
	213 Move TEMP, X0
	214 And TEMP, TEMP, 1
	215 Compare TEMP, 1
	216 JumpIfNotEqual {176}
	217 Move X0, [X31+40]
	218 Compare X0, 0
	219 JumpIfEqual {319}
	220 Move X1, X31
	221 Call NetworkObjectMeta.get_Type, X0
	222 Move X8, X0
	223 Move X0, [X26]
	224 Move [X31+32], X8
	225 Move W8, [X0+224]
	226 Compare W8, 0
	227 JumpIfNotEqual {229}
	228 Call 0x1C17DFC
	229 Add X0, X31, 32
	230 Move X1, X31
	231 Call NetworkObjectTypeId.get_AsSceneObjectId, X0
	232 Move X25, X1
	233 Move W1, [X31+72]
	234 Move X24, X0
	235 And X0, X0, 0
	236 Move X2, X31
	237 Call SceneRef.op_Inequality, X0, X1
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Xor W8, W0, 1
	240 Move TEMP, X8
	241 And TEMP, TEMP, 1
	242 Compare TEMP, 1
	243 JumpIfNotEqual {176}
	244 Move W9, [X20+24]
	245 Move X8, X24
	246 ShiftRight X8, 32
	247 And X8, X8, 0x7FFFFFFF
	248 NotImplemented "Instruction CMP not yet implemented."
	249 NotImplemented "Instruction SBFM not yet implemented."
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Move X0, [X22]
	252 Add X8, X20, X8
	253 Move X24, [X8+32]
	254 Move W9, [X0+224]
	255 Compare W9, 0
	256 JumpIfNotEqual {258}
	257 Call 0x1C17DFC
	258 Compare X24, 0
	259 JumpIfEqual {351}
	260 Move W0, [X24+96]
	261 Move W1, 0x20000
	262 Move X2, X31
	263 Call NetworkObjectRuntimeFlagsExtensions.CheckFlag, X0, X1
	264 Move TEMP, X0
	265 And TEMP, TEMP, 1
	266 Compare TEMP, 1
	267 JumpIfEqual {176}
	268 Move X3, [X31]
	269 And X3, X3, 0
	270 Move X0, X19
	271 Move X1, X24
	272 Move X2, X31
	273 Move W4, W31
	274 Move [X31], X3
	275 Call NetworkRunner.InitializeNetworkObjectAssignRunner, X0, X1, X2, X3
	276 Move W8, [X24+96]
	277 And X23, X23, 0xFFFFFFFF
	278 Or W8, W8, 0x20000
	279 Move [X24+96], W8
	280 Move X1, [X31+40]
	281 Move X0, X19
	282 Move X2, X24
	283 Move X3, X31
	284 Move W4, W31
	285 Move X5, X23
	286 Call NetworkRunner.InitializeNetworkObjectInstance, X0, X1, X2, X3, X4, X5
	287 Move X8, 0x2258000
	288 Move X8, [X8+3056]
	289 Add X0, X31, 48
	290 Move X1, [X8]
	291 Call Enumerator<NetworkId>.Dispose, X0
	292 Move X0, X19
	293 Call NetworkRunner.get_IsSceneAuthority, X0
	294 And W3, W0, 1
	295 Move X0, X19
	296 Move X1, X20
	297 Move X2, X31
	298 Move X4, X31
	299 Call NetworkRunner.Attach, X0, X1, X2, X3, X4
	300 Move W0, W21
	301 Move X20, [X31+160]
	302 Move X19, [X31+168]
	303 Move X22, [X31+144]
	304 Move X21, [X31+152]
	305 Move X24, [X31+128]
	306 Move X23, [X31+136]
	307 Move X26, [X31+112]
	308 Move X25, [X31+120]
	309 Move X28, [X31+96]
	310 Move X27, [X31+104]
	311 Move X29, [X31+80]
	312 Move X30, [X31+88]
	313 Add X31, X31, 176
	314 Return X0
	315 Call 0x1C17F20
	316 Call 0x1C17F28
	317 Call 0x1C17F20
	318 Call 0x1C17F20
	319 Call 0x1C17F20
	320 Move X0, 0x2255000
	321 Move X0, [X0+1400]
	322 Call 0x1C17D08
	323 Call 0x1C17F10
	324 Move X19, X0
	325 Move X0, 0x2258000
	326 Move X0, [X0+3104]
	327 Call 0x1C17D08
	328 Move X1, X0
	329 Move X0, X19
	330 Move X2, X31
	331 Call ArgumentException..ctor, X0, X1
	332 Move X0, 0x2252000
	333 Move X0, [X0+1320]
	334 Call 0x1C17D08
	335 Call 0x1C17F10
	336 Move X19, X0
	337 Move X0, 0x2258000
	338 Move X0, [X0+3112]
	339 Call 0x1C17D08
	340 Move X1, X0
	341 Move X0, X19
	342 Move X2, X31
	343 Call ArgumentNullException..ctor, X0, X1
	344 Move X0, 0x2258000
	345 Move X0, [X0+3120]
	346 Call 0x1C17D08
	347 Move X1, X0
	348 Move X0, X19
	349 Call 0x1C17DEC
	350 Call 0x1C17F28
	351 Call 0x1C17F20
	352 Move X22, X0
	353 NotImplemented "Instruction CMP not yet implemented."
	354 Move X0, X22
	355 Call 0x3EB2AD0
	356 Move X23, [X0]
	357 Call 0x3EB2AE0
	358 Move X8, 0x2258000
	359 Move X8, [X8+3056]
	360 Add X0, X31, 48
	361 Move X1, [X8]
	362 Call Enumerator<NetworkId>.Dispose, X0
	363 Compare X23, 0
	364 JumpIfEqual {292}
	365 Move X0, X23
	366 Call 0x1C17F18
	367 Move X23, X31
	368 Move X22, X0
	369 Move X8, 0x2258000
	370 Move X8, [X8+3056]
	371 Move X1, [X8]
	372 Add X0, X31, 48
	373 Call Enumerator<NetworkId>.Dispose, X0
	374 Compare X23, 0
	375 JumpIfNotEqual {378}
	376 Move X0, X22
	377 Call 0x1D2D690
	378 Move X0, X23
	379 Call 0x1C17F18
	380 Call 0x1991590

Method: System.Void InvokeOnBeforeHitboxRegistration()

Disassembly:
	0x01EA72F0 MOV X19, X0
	0x01EA72F4 ADRP X0, 0x2257000
	0x01EA72F8 LDR X0, [X0 + 0xC98]
	0x01EA72FC BL 0x1C16D08
	0x01EA7300 MOV X1, X0
	0x01EA7304 MOV X0, X19
	0x01EA7308 MOV X2, X31
	0x01EA730C BL 0x337DF1C
	0x01EA7310 ADRP X0, 0x2257000
	0x01EA7314 LDR X0, [X0 + 0xCA0]
	0x01EA7318 BL 0x1C16D08
	0x01EA731C MOV X1, X0
	0x01EA7320 MOV X0, X19
	0x01EA7324 BL 0x1C16DEC
	0x01EA7328 STR X30, [X31 - 0x20]!
	0x01EA732C STP X20, X19, [X31 + 0x10]
	0x01EA7330 ADRP X20, 0x2532000
	0x01EA7334 LDRB W8, [X20 + 0x358]
	0x01EA7338 MOV X19, X0
	0x01EA733C TBNZ X8, 0x0, 0x1EA7354
	0x01EA7340 ADRP X0, 0x2253000
	0x01EA7344 LDR X0, [X0 + 0xCB0]
	0x01EA7348 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2533000
	006 Move X21, 0x2258000
	007 Move W8, [X20+833]
	008 Move X21, [X21+3128]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2258000
	015 Move X0, [X0+3128]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+833], W8
	019 Move X0, [X21]
	020 Move X1, X31
	021 Call EngineProfiler.Begin, X0
	022 Move X0, [X19+96]
	023 Move X1, X31
	024 Call CallbackInterfaceInvoker.IBeforeHitboxRegistration, X0
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X0, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call EngineProfiler.End
	031 Return 

Method: Fusion.NetworkRunner/CreateInstanceResult TryAcquireInstance(Fusion.NetworkObjectTypeId typeId, Fusion.NetworkObjectMeta meta, out Fusion.NetworkObject result, System.Boolean synchronous = True, System.Boolean dontDestroyOnLoad = False)

Disassembly:
	0x01E9E588 LDR X30, [X31], #0x10
	0x01E9E58C RET
	0x01E9E590 SUB X31, X31, 0x40
	0x01E9E594 STP D9, D8, [X31 + 0x10]
	0x01E9E598 STP X30, X21, [X31 + 0x20]
	0x01E9E59C STP X20, X19, [X31 + 0x30]
	0x01E9E5A0 ADRP X20, 0x253B000
	0x01E9E5A4 LDRB W8, [X20 + 0x313]
	0x01E9E5A8 MOV X19, X0
	0x01E9E5AC TBNZ X8, 0x0, 0x1E9E5F4
	0x01E9E5B0 ADRP X0, 0x2260000
	0x01E9E5B4 LDR X0, [X0 + 0x7C0]
	0x01E9E5B8 BL 0x1C16CF4
	0x01E9E5BC ADRP X0, 0x2255000
	0x01E9E5C0 LDR X0, [X0 + 0x5A8]
	0x01E9E5C4 BL 0x1C16CF4
	0x01E9E5C8 ADRP X0, 0x2260000
	0x01E9E5CC LDR X0, [X0 + 0x7C8]
	0x01E9E5D0 BL 0x1C16CF4
	0x01E9E5D4 ADRP X0, 0x2260000
	0x01E9E5D8 LDR X0, [X0 + 0x7D0]
	0x01E9E5DC BL 0x1C16CF4
	0x01E9E5E0 ADRP X0, 0x2260000
	0x01E9E5E4 LDR X0, [X0 + 0x7D8]
	0x01E9E5E8 BL 0x1C16CF4
	0x01E9E5EC MOVZ W8, 0x1
	0x01E9E5F0 STRB W8, [X20 + 0x313]
	0x01E9E5F4 LDR X8, [X19 + 0x50]
	0x01E9E5F8 FMOV S8, W31
	0x01E9E5FC CBZ X8, 0x1E9E6D0
	0x01E9E600 LDR X20, [X8 + 0x68]
	0x01E9E604 CBZ X20, 0x1E9E70C
	0x01E9E608 ADRP X10, 0x2260000
	0x01E9E60C LDR X8, [X20]
	0x01E9E610 LDR X10, [X10 + 0x7C0]
	0x01E9E614 ADRP X21, 0x2260000
	0x01E9E618 LDRH W9, [X8 + 0x12E]
	0x01E9E61C LDR X1, [X10]
	0x01E9E620 LDR X21, [X21 + 0x7D0]
	0x01E9E624 CBZ X9, 0x1E9E648
	0x01E9E628 LDR X10, [X8 + 0xB0]
	0x01E9E62C ADD X10, X10, 0x8
	0x01E9E630 LDUR X11, [X10 - 0x8]
	0x01E9E634 CMP X11, X1
	0x01E9E638 B.EQ 0x1E9E658
	0x01E9E63C SUBS X9, X9, 0x1
	0x01E9E640 ADD X10, X10, 0x10
	0x01E9E644 B.NE 0x1E9E630
	0x01E9E648 MOVZ W2, 0x9
	0x01E9E64C MOV X0, X20
	0x01E9E650 BL 0x1C5C788
	0x01E9E654 B 0x1E9E668
	0x01E9E658 LDR W9, [X10]
	0x01E9E65C ADD W9, W9, 0x9
	0x01E9E660 ADD X8, X8, W9, 0x4, SXTW
	0x01E9E664 ADD X0, X8, 0x138
	0x01E9E668 LDP X8, X1, [X0]
	0x01E9E66C MOV X0, X20
	0x01E9E670 BLR X8
	0x01E9E674 LDR X1, [X21]
	0x01E9E678 MOV V0.16B, V1.16B
	0x01E9E67C ADD X0, X31, 0x0
	0x01E9E680 STP X31, X31, [X31]
	0x01E9E684 BL 0x2431800
	0x01E9E688 LDR V9, [X31 + 0x8]
	0x01E9E68C LDR X0, [X19 + 0x50]
	0x01E9E690 LDRB W19, [X31]
	0x01E9E694 CBZ X0, 0x1E9E6A8
	0x01E9E698 MOV X1, X31
	0x01E9E69C BL 0x1EC06A8
	0x01E9E6A0 FCVT S0, S0
	0x01E9E6A4 B 0x1E9E6AC
	0x01E9E6A8 FMOV D0, X31
	0x01E9E6AC ANDS W31, W19, 0xFF
	0x01E9E6B0 B.EQ 0x1E9E6D0
	0x01E9E6B4 LDR X1, [X21]
	0x01E9E6B8 FSUB D0, D9, D0
	0x01E9E6BC ADD X0, X31, 0x0
	0x01E9E6C0 STP X31, X31, [X31]
	0x01E9E6C4 BL 0x2431800
	0x01E9E6C8 LDR V0, [X31 + 0x8]
	0x00000000 INVALID
	0x01E9E6D0 ADRP X8, 0x2255000
	0x01E9E6D4 LDR X8, [X8 + 0x5A8]
	0x01E9E6D8 LDR X0, [X8]
	0x01E9E6DC LDR W8, [X0 + 0xE0]
	0x01E9E6E0 CBNZ W8, 0x1E9E6E8
	0x01E9E6E4 BL 0x1C16DFC
	0x01E9E6E8 FMOV S1, W31
	0x01E9E6EC MOV V0.16B, V8.16B
	0x01E9E6F0 MOV X0, X31
	0x01E9E6F4 BL 0x337EE18
	0x01E9E6F8 LDP X20, X19, [X31 + 0x30]
	0x01E9E6FC LDP X30, X21, [X31 + 0x20]
	0x01E9E700 LDP D9, D8, [X31 + 0x10]
	0x01E9E704 ADD X31, X31, 0x40
	0x01E9E708 RET
	0x01E9E70C BL 0x1C16F20
	0x01E9E710 STR X30, [X31 - 0x20]!
	0x01E9E714 STP X20, X19, [X31 + 0x10]
	0x01E9E718 ADRP X20, 0x253B000
	0x01E9E71C LDRB W8, [X20 + 0x314]
	0x01E9E720 MOV X19, X0
	0x01E9E724 TBNZ X8, 0x0, 0x1E9E73C
	0x01E9E728 ADRP X0, 0x2260000
	0x01E9E72C LDR X0, [X0 + 0x7C0]
	0x01E9E730 BL 0x1C16CF4
	0x01E9E734 MOVZ W8, 0x1
	0x01E9E738 STRB W8, [X20 + 0x314]
	0x01E9E73C LDR X8, [X19 + 0x50]
	0x01E9E740 CBZ X8, 0x1E9E794
	0x01E9E744 LDR X19, [X8 + 0x68]
	0x01E9E748 CBZ X19, 0x1E9E7C8
	0x01E9E74C ADRP X10, 0x2260000
	0x01E9E750 LDR X8, [X19]
	0x01E9E754 LDR X10, [X10 + 0x7C0]
	0x01E9E758 LDRH W9, [X8 + 0x12E]
	0x01E9E75C LDR X1, [X10]
	0x01E9E760 CBZ X9, 0x1E9E784
	0x01E9E764 LDR X10, [X8 + 0xB0]
	0x01E9E768 ADD X10, X10, 0x8
	0x01E9E76C LDUR X11, [X10 - 0x8]
	0x01E9E770 CMP X11, X1
	0x01E9E774 B.EQ 0x1E9E79C
	0x01E9E778 SUBS X9, X9, 0x1
	0x01E9E77C ADD X10, X10, 0x10
	0x01E9E780 B.NE 0x1E9E76C
	0x01E9E784 MOVZ W2, 0x9
	0x01E9E788 MOV X0, X19
	0x01E9E78C BL 0x1C5C788
	0x01E9E790 B 0x1E9E7AC
	0x01E9E794 FMOV S0, W31
	0x01E9E798 B 0x1E9E7BC
	0x01E9E79C LDR W9, [X10]
	0x01E9E7A0 ADD W9, W9, 0x9
	0x01E9E7A4 ADD X8, X8, W9, 0x4, SXTW
	0x01E9E7A8 ADD X0, X8, 0x138
	0x01E9E7AC LDP X8, X1, [X0]
	0x01E9E7B0 MOV X0, X19
	0x01E9E7B4 BLR X8
	0x00000000 INVALID
	0x01E9E7BC LDP X20, X19, [X31 + 0x10]
	0x01E9E7C0 LDR X30, [X31], #0x20
	0x01E9E7C4 RET
	0x01E9E7C8 BL 0x1C16F20
	0x01E9E7CC LDR X0, [X0 + 0x50]
	0x01E9E7D0 CBZ X0, 0x1E9E7DC
	0x01E9E7D4 MOV X1, X31
	0x01E9E7D8 B 0x1EC0A3C
	0x01E9E7DC RET
	0x01E9E7E0 LDR W8, [X0 + 0x5C]
	0x01E9E7E4 CMP W8, 0x0
	0x01E9E7E8 CSET W0, NE
	0x01E9E7EC RET
	0x01E9E7F0 LDRB W0, [X0 + 0x40]
	0x01E9E7F4 RET
	0x01E9E7F8 LDR W8, [X0 + 0x5C]
	0x01E9E7FC AND W0, W8, 0x1
	0x01E9E800 RET
	0x01E9E804 LDR X8, [X0 + 0x50]
	0x01E9E808 CBZ X8, 0x1E9E814
	0x01E9E80C LDR V0, [X8 + 0x7C]
	0x01E9E810 RET
	0x01E9E814 FMOV S0, W31
	0x01E9E818 RET
	0x01E9E81C STR X30, [X31 - 0x10]!
	0x01E9E820 LDR X0, [X0 + 0x50]
	0x01E9E824 CBZ X0, 0x1E9E83C
	0x01E9E828 LDR X8, [X0]
	0x01E9E82C LDR X9, [X8 + 0x248]
	0x01E9E830 LDR X1, [X8 + 0x250]
	0x01E9E834 BLR X9
	0x01E9E838 AND X0, X0, 0x0
	0x01E9E83C LDR X30, [X31], #0x10
	0x01E9E840 RET
	0x01E9E844 STP X30, X19, [X31 - 0x10]!
	0x01E9E848 MOV X19, X0
	0x01E9E84C LDR X0, [X0 + 0x50]
	0x01E9E850 CBZ X0, 0x1E9E868
	0x01E9E854 MOV X1, X31
	0x01E9E858 BL 0x1EC0A3C
	0x01E9E85C TBZ X0, 0x0, 0x1E9E868
	0x01E9E860 MOV W0, W31
	0x01E9E864 B 0x1E9E874
	0x01E9E868 LDR W8, [X19 + 0x5C]
	0x01E9E86C CMP W8, 0x0
	0x01E9E870 CSET W0, EQ
	0x01E9E874 LDP X30, X19, [X31], #0x10
	0x01E9E878 RET
	0x01E9E87C LDR X0, [X0 + 0x50]
	0x01E9E880 CBZ X0, 0x1E9E88C
	0x01E9E884 MOV X1, X31
	0x01E9E888 B 0x1EC0864
	0x01E9E88C RET
	0x01E9E890 STR X30, [X31 - 0x20]!
	0x01E9E894 STP X20, X19, [X31 + 0x10]
	0x01E9E898 ADRP X20, 0x253B000
	0x01E9E89C LDRB W8, [X20 + 0x315]
	0x01E9E8A0 MOV X19, X0
	0x01E9E8A4 TBNZ X8, 0x0, 0x1E9E8BC
	0x01E9E8A8 ADRP X0, 0x2260000
	0x01E9E8AC LDR X0, [X0 + 0x7E0]
	0x01E9E8B0 BL 0x1C16CF4
	0x01E9E8B4 MOVZ W8, 0x1
	0x01E9E8B8 STRB W8, [X20 + 0x315]
	0x01E9E8BC LDR X0, [X19 + 0x50]
	0x01E9E8C0 CBZ X0, 0x1E9E91C
	0x01E9E8C4 MOV X1, X31
	0x01E9E8C8 BL 0x1EC0864
	0x01E9E8CC TBZ X0, 0x0, 0x1E9E91C
	0x01E9E8D0 LDR X0, [X19 + 0x50]
	0x01E9E8D4 CBZ X0, 0x1E9E930
	0x01E9E8D8 ADRP X9, 0x2260000
	0x01E9E8DC LDR X9, [X9 + 0x7E0]
	0x01E9E8E0 LDR X8, [X0]
	0x01E9E8E4 LDR X1, [X9]
	0x01E9E8E8 LDRB W10, [X8 + 0x130]
	0x01E9E8EC LDRB W9, [X1 + 0x130]
	0x01E9E8F0 CMP W10, W9
	0x01E9E8F4 B.CC 0x1E9E92C
	0x01E9E8F8 LDR X8, [X8 + 0xC8]
	0x01E9E8FC ADD X8, X8, X9, 0x3, LSL

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X22, 0x253C000
	011 Move [X31+56], X1
	012 Move X25, 0x2261000
	013 Move W8, [X22+834]
	014 Move X25, [X25+888]
	015 Move W23, W5
	016 Move W24, W4
	017 Move X20, X3
	018 Move X21, X2
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {50}
	024 Move X0, 0x2261000
	025 Move X0, [X0+1832]
	026 Call 0x1C17CF4
	027 Move X0, 0x2261000
	028 Move X0, [X0+1840]
	029 Call 0x1C17CF4
	030 Move X0, 0x2261000
	031 Move X0, [X0+1848]
	032 Call 0x1C17CF4
	033 Move X0, 0x2261000
	034 Move X0, [X0+1856]
	035 Call 0x1C17CF4
	036 Move X0, 0x2261000
	037 Move X0, [X0+888]
	038 Call 0x1C17CF4
	039 Move X0, 0x2261000
	040 Move X0, [X0+1864]
	041 Call 0x1C17CF4
	042 Move X0, 0x2256000
	043 Move X0, [X0+1432]
	044 Call 0x1C17CF4
	045 Move X0, 0x2261000
	046 Move X0, [X0+1872]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X22+834], W8
	050 Move X0, [X25]
	051 Move [X31+40], X31
	052 Move [X31+48], X31
	053 Move [X31+24], X31
	054 Move [X31+32], X31
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Add X0, X31, 56
	060 Move X1, X31
	061 Call NetworkObjectTypeId.get_IsNone, X0
	062 Move [X20], X31
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {78}
	067 Move W0, 1
	068 Move X20, [X31+112]
	069 Move X19, [X31+120]
	070 Move X22, [X31+96]
	071 Move X21, [X31+104]
	072 Move X24, [X31+80]
	073 Move X23, [X31+88]
	074 Move X30, [X31+64]
	075 Move X25, [X31+72]
	076 Add X31, X31, 128
	077 Return X0
	078 Move X0, [X19+200]
	079 Compare X0, 0
	080 JumpIfEqual {223}
	081 Move X8, 0x2261000
	082 Move X1, [X31+56]
	083 Move X8, [X8+1840]
	084 Add X2, X31, 48
	085 Move X3, [X8]
	086 Call Dictionary`2<NetworkObjectTypeId, Object>.TryGetValue, X0, X1, X2
	087 Move W22, W0
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {138}
	092 Move X21, [X31+48]
	093 Compare X21, 0
	094 JumpIfEqual {67}
	095 Move W8, [X21+96]
	096 Move TEMP, X8
	097 And TEMP, TEMP, 2
	098 Compare TEMP, 2
	099 JumpIfEqual {67}
	100 Move [X20], X21
	101 Move TEMP, X22
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {185}
	105 Move X8, 0x2256000
	106 Move X8, [X8+1432]
	107 Move X21, [X21+48]
	108 Move X0, [X8]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Move X0, X21
	114 Move X1, X19
	115 Move X2, X31
	116 Call Object.op_Equality, X0, X1
	117 Move X9, 0x2261000
	118 Move X8, [X31+48]
	119 Move X9, [X9+1856]
	120 Move W21, W0
	121 Move X0, X8
	122 Move X1, [X9]
	123 Call 0x2215CF8, X0
	124 Move X8, [X31+48]
	125 Compare X8, 0
	126 JumpIfEqual {223}
	127 Move X4, [X8+48]
	128 Move X8, 0x2261000
	129 Move X9, 0x2261000
	130 Move X8, [X8+1872]
	131 Move X9, [X9+1832]
	132 Move X2, X0
	133 And W0, W21, 1
	134 Move X1, [X8]
	135 Move X5, [X9]
	136 Move X3, X19
	137 Call 0x218341C, X0, X1, X2, X3, X4
	138 Move X0, [X25]
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {143}
	142 Call 0x1C17DFC
	143 Add X0, X31, 56
	144 Move X1, X31
	145 Call NetworkObjectTypeId.get_IsSceneObject, X0
	146 Move TEMP, X0
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfNotEqual {151}
	150 Move W0, 2
	151 Move X0, [X25]
	152 Move W8, [X0+224]
	153 Compare W8, 0
	154 JumpIfNotEqual {156}
	155 Call 0x1C17DFC
	156 Add X0, X31, 56
	157 Move X1, X31
	158 Call NetworkObjectTypeId.get_AsPrefabId, X0
	159 And X1, X0, 0
	160 And W3, W24, 1
	161 And W4, W23, 1
	162 Add X0, X31, 24
	163 Move X2, X21
	164 Move X5, X31
	165 Call NetworkPrefabAcquireContext..ctor, X0, X1, X2, X3, X4
	166 Move X21, [X19+184]
	167 Compare X21, 0
	168 JumpIfEqual {224}
	169 Move X10, 0x2261000
	170 Move X8, [X21]
	171 Move X10, [X10+1848]
	172 NotImplemented "Instruction LDRH not yet implemented."
	173 Move X1, [X10]
	174 Compare X9, 0
	175 JumpIfEqual {182}
	176 Move X10, [X8+176]
	177 Add X10, X10, 8
	178 NotImplemented "Instruction LDUR not yet implemented."
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Subtract X9, X9, 1
	181 Add X10, X10, 16
	182 Move X0, X21
	183 Move W2, W31
	184 Call 0x1C5D788
	185 Move X8, 0x2261000
	186 Move X1, [X31+56]
	187 Move X8, [X8+1864]
	188 Add X0, X31, 8
	189 Move [X31+16], W31
	190 Move [X31+8], X31
	191 Move X2, [X8]
	192 Call Nullable`1<NetworkObjectTypeId>..ctor, X0, X1
	193 Move X2, [X31+8]
	194 Move W3, [X31+16]
	195 Move X0, X19
	196 Move X1, X21
	197 Move W4, W31
	198 Call NetworkRunner.InitializeNetworkObjectAssignRunner, X0, X1, X2, X3
	199 Move X8, [X19+56]
	200 Compare X8, 0
	201 JumpIfEqual {208}
	202 Move X2, [X20]
	203 Move X9, [X8+24]
	204 Move X0, [X8+64]
	205 Move X3, [X8+40]
	206 Move X1, X19
	207 NotImplemented "Instruction BLR not yet implemented."
	208 Move W0, W31
	209 NotImplemented "Instruction LDRSW not yet implemented."
	210 Add X8, X8, X9
	211 Add X0, X8, 312
	212 Move X8, [X0]
	213 Move X4, [X0+8]
	214 Add X2, X31, 24
	215 Add X3, X31, 48
	216 Move X0, X21
	217 Move X1, X19
	218 NotImplemented "Instruction BLR not yet implemented."
	219 Compare W0, 0
	220 JumpIfEqual {92}
	221 NotImplemented "Instruction CMP not yet implemented."
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Call 0x1C17F20
	224 Call 0x1C17F20
	225 Move X19, X0
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Move X0, X19
	228 Call 0x3EB2AD0
	229 Move X19, X0
	230 Move X0, 0x2256000
	231 Move X0, [X0+2000]
	232 Call 0x1C17D08
	233 Move X8, [X19]
	234 Move X1, [X8]
	235 Call 0x1C18270
	236 Move TEMP, X0
	237 And TEMP, TEMP, 1
	238 Compare TEMP, 1
	239 JumpIfNotEqual {241}
	240 Call 0x3EB2AE0
	241 Move W0, 8
	242 Call 0x3EB2AF0
	243 Move X8, [X19]
	244 Move [X0], X8
	245 Move X1, 0x2017000
	246 Add X1, X1, 3672
	247 Move X2, X31
	248 Call 0x3EB2B00
	249 Move X19, X0
	250 Call 0x3EB2AE0
	251 Move X0, X19
	252 Call 0x1D2D690
	253 Call 0x1991590

Method: System.Boolean TryResolveRemotePrefabInstance(Fusion.NetworkObjectMeta header, out Fusion.NetworkObject result)

Disassembly:
	0x01EA734C MOVZ W8, 0x1
	0x01EA7350 STRB W8, [X20 + 0x358]
	0x01EA7354 LDR X8, [X19 + 0x178]
	0x01EA7358 CBZ X8, 0x1EA7364
	0x01EA735C MOVZ W0, 0x1
	0x01EA7360 B 0x1EA73D8
	0x01EA7364 LDR X19, [X19 + 0x100]
	0x01EA7368 CBZ X19, 0x1EA73D4
	0x01EA736C ADRP X10, 0x2253000
	0x01EA7370 LDR X8, [X19]
	0x01EA7374 LDR X10, [X10 + 0xCB0]
	0x01EA7378 LDRH W9, [X8 + 0x12E]
	0x01EA737C LDR X1, [X10]
	0x01EA7380 CBZ X9, 0x1EA73A4
	0x01EA7384 LDR X10, [X8 + 0xB0]
	0x01EA7388 ADD X10, X10, 0x8
	0x01EA738C LDUR X11, [X10 - 0x8]
	0x01EA7390 CMP X11, X1
	0x01EA7394 B.EQ 0x1EA73B4
	0x01EA7398 SUBS X9, X9, 0x1
	0x01EA739C ADD X10, X10, 0x10
	0x01EA73A0 B.NE 0x1EA738C
	0x01EA73A4 MOVZ W2, 0x2
	0x01EA73A8 MOV X0, X19
	0x01EA73AC BL 0x1C5C788
	0x01EA73B0 B 0x1EA73C4
	0x01EA73B4 LDR W9, [X10]
	0x01EA73B8 ADD W9, W9, 0x2
	0x01EA73BC ADD X8, X8, W9, 0x4, SXTW
	0x01EA73C0 ADD X0, X8, 0x138
	0x01EA73C4 LDP X8, X1, [X0]
	0x01EA73C8 MOV X0, X19
	0x01EA73CC BLR X8
	0x01EA73D0 TBNZ X0, 0x0, 0x1EA735C
	0x01EA73D4 MOV W0, W31
	0x01EA73D8 LDP X20, X19, [X31 + 0x10]
	0x01EA73DC LDR X30, [X31], #0x20
	0x01EA73E0 RET
	0x01EA73E4 MOVZ W2, 0x1
	0x01EA73E8 B 0x1EA73EC
	0x01EA73EC STR X30, [X31 - 0x30]!
	0x01EA73F0 STP X22, X21, [X31 + 0x10]
	0x01EA73F4 STP X20, X19, [X31 + 0x20]
	0x01EA73F8 ADRP X22, 0x2532000
	0x01EA73FC LDRB W8, [X22 + 0x359]
	0x01EA7400 MOV W21, W2
	0x01EA7404 MOV X19, X1
	0x01EA7408 MOV X20, X0
	0x01EA740C TBNZ X8, 0x0, 0x1EA7430
	0x01EA7410 ADRP X0, 0x224F000
	0x01EA7414 LDR X0, [X0 + 0x398]
	0x01EA7418 BL 0x1C16CF4
	0x01EA741C ADRP X0, 0x2257000
	0x01EA7420 LDR X0, [X0 + 0xCA8]
	0x01EA7424 BL 0x1C16CF4
	0x01EA7428 MOVZ W8, 0x1
	0x01EA742C STRB W8, [X22 + 0x359]
	0x01EA7430 STR X31, [X31 + 0x8]
	0x01EA7434 LDR X22, [X20 + 0x50]
	0x01EA7438 CBZ X22, 0x1EA74C0
	0x01EA743C LDR X8, [X20 + 0x178]
	0x01EA7440 CBNZ X8, 0x1EA749C
	0x01EA7444 ADRP X8, 0x224F000
	0x01EA7448 LDR X8, [X8 + 0x398]
	0x01EA744C LDR X0, [X8]
	0x01EA7450 LDR W8, [X0 + 0xE0]
	0x01EA7454 CBNZ W8, 0x1EA745C
	0x01EA7458 BL 0x1C16DFC
	0x01EA745C MOV X0, X31
	0x01EA7460 BL 0x1E92E50
	0x01EA7464 ADRP X8, 0x2257000
	0x01EA7468 LDR X8, [X8 + 0xCA8]
	0x01EA746C AND X1, X0, 0x0
	0x01EA7470 ADD X2, X31, 0x8
	0x01EA7474 MOV X0, X22
	0x01EA7478 LDR X3, [X8]
	0x01EA747C BL 0x22551FC
	0x01EA7480 TBZ X0, 0x0, 0x1EA749C
	0x01EA7484 LDR X8, [X31 + 0x8]
	0x01EA7488 LDR W9, [X8 + 0x30]
	0x01EA748C LDP V1, V0, [X8 + 0x10]
	0x01EA7490 LDR V2, [X8]
	0x01EA7494 STR W9, [X19 + 0x30]
	0x01EA7498 B 0x1EA74B0
	0x01EA749C TBZ X21, 0x0, 0x1EA74C0
	0x01EA74A0 LDR W8, [X20 + 0x170]
	0x01EA74A4 LDP V1, V0, [X20 + 0x150]
	0x01EA74A8 LDR V2, [X20 + 0x14]
	0x01EA74AC STR W8, [X19 + 0x30]
	0x01EA74B0 STP V1, V0, [X19 + 0x10]
	0x01EA74B4 STR V2, [X19]
	0x01EA74B8 MOVZ W0, 0x1
	0x01EA74BC B 0x1EA74D4
	0x01EA74C0 MOV W0, W31
	0x01EA74C4 MOVI V0.2D, 0x0
	0x01EA74C8 STR W31, [X19 + 0x30]
	0x01EA74CC STP V0, V0, [X19 + 0x10]
	0x01EA74D0 STR V0, [X19]
	0x01EA74D4 LDP X20, X19, [X31 + 0x20]
	0x01EA74D8 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move [X31+8], X31
	009 Compare X1, 0
	010 JumpIfEqual {122}
	011 Move X8, [X1+176]
	012 Move X20, X1
	013 Compare X8, 0
	014 JumpIfEqual {122}
	015 Move X21, X0
	016 Add X0, X8, 20
	017 Move X1, X31
	018 Move X19, X2
	019 Call NetworkObjectNestingKey.get_IsValid, X0
	020 Move X8, [X20+176]
	021 Compare X8, 0
	022 JumpIfEqual {122}
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {53}
	027 Move W1, [X8+16]
	028 Move X0, X21
	029 Call NetworkRunner.FindObject, X0, X1
	030 Compare X0, 0
	031 JumpIfEqual {110}
	032 Move W8, [X0+96]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 2
	035 Compare TEMP, 2
	036 JumpIfEqual {110}
	037 Move X9, [X20+176]
	038 Compare X9, 0
	039 JumpIfEqual {122}
	040 Move X8, [X0+112]
	041 Compare X8, 0
	042 JumpIfEqual {122}
	043 Move W9, [X9+20]
	044 Move W10, [X8+24]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Subtract W9, W9, 1
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add X8, X8, W9
	049 Move X8, [X8+32]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move [X19], X8
	052 NotImplemented "Instruction CSET not yet implemented."
	053 Move W9, [X8+24]
	054 Move X1, [X8+8]
	055 Add X3, X31, 8
	056 Move X0, X21
	057 Move W5, W9
	058 ShiftRight W5, 6
	059 And W5, W5, 63
	060 Move X2, X20
	061 Move W4, W31
	062 Call NetworkRunner.TryAcquireInstance, X0, X1, X2, X3, X4, X5
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Compare W0, 0
	065 JumpIfNotEqual {110}
	066 Move X21, [X31+8]
	067 Compare X21, 0
	068 JumpIfEqual {122}
	069 Move X22, [X21+112]
	070 Compare X22, 0
	071 JumpIfEqual {122}
	072 Move W8, [X22+24]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move W23, W31
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Add X8, X22, W23
	077 Move X20, [X8+32]
	078 Compare X20, 0
	079 JumpIfEqual {122}
	080 Move X0, X20
	081 Move X1, X31
	082 Call NetworkObject.get_IsValid, X0
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {106}
	087 Move X0, X20
	088 Move X1, X31
	089 Call Component.get_gameObject, X0
	090 Compare X0, 0
	091 JumpIfEqual {122}
	092 Move X1, X31
	093 Call GameObject.get_activeSelf, X0
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {106}
	098 Move X0, X20
	099 Move X1, X31
	100 Call Component.get_gameObject, X0
	101 Compare X0, 0
	102 JumpIfEqual {122}
	103 Move W1, W31
	104 Move X2, X31
	105 Call GameObject.SetActive, X0, X1
	106 Move W8, [X22+24]
	107 Add W23, W23, 1
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move [X19], X21
	110 Move W0, W31
	111 Move [X19], X31
	112 Move [X19], X31
	113 Move W0, 1
	114 Move X20, [X31+48]
	115 Move X19, [X31+56]
	116 Move X22, [X31+32]
	117 Move X21, [X31+40]
	118 Move X30, [X31+16]
	119 Move X23, [X31+24]
	120 Add X31, X31, 64
	121 Return X0
	122 Call 0x1C17F20
	123 Call 0x1C17F28

Method: System.Void InitializeNetworkObjectAssignRunner(Fusion.NetworkObject instance, System.Nullable`1<Fusion.NetworkObjectTypeId> typeId = null, System.Boolean isNestedObject = False)

Disassembly:
	0x01EA5148 LDP D11, D10, [X31 + 0x10]
	0x01EA514C ADD X31, X31, 0x50
	0x01EA5150 RET
	0x01EA5154 BL 0x1C16F20
	0x01EA5158 SUB X31, X31, 0x30
	0x01EA515C STP X30, X21, [X31 + 0x10]
	0x01EA5160 STP X20, X19, [X31 + 0x20]
	0x01EA5164 ADRP X21, 0x2534000
	0x01EA5168 LDRB W8, [X21 + 0x33C]
	0x01EA516C MOV X19, X1
	0x01EA5170 MOV X20, X0
	0x01EA5174 TBNZ X8, 0x0, 0x1EA5198
	0x01EA5178 ADRP X0, 0x2255000
	0x01EA517C LDR X0, [X0 + 0x678]
	0x01EA5180 BL 0x1C16CF4
	0x01EA5184 ADRP X0, 0x2251000
	0x01EA5188 LDR X0, [X0 + 0xE40]
	0x01EA518C BL 0x1C16CF4
	0x01EA5190 MOVZ W8, 0x1
	0x01EA5194 STRB W8, [X21 + 0x33C]
	0x01EA5198 LDR X0, [X20 + 0x50]
	0x01EA519C CBZ X0, 0x1EA5284
	0x01EA51A0 MOV X1, X31
	0x01EA51A4 BL 0x1EBDF30
	0x01EA51A8 TBZ X0, 0x0, 0x1EA51F0
	0x01EA51AC LDR X0, [X20 + 0x50]
	0x01EA51B0 CBZ X0, 0x1EA51CC
	0x01EA51B4 LDR X8, [X0]
	0x01EA51B8 LDR X9, [X8 + 0x268]
	0x01EA51BC LDR X1, [X8 + 0x270]
	0x01EA51C0 BLR X9
	0x01EA51C4 MOV X21, X0
	0x01EA51C8 B 0x1EA51D0
	0x01EA51CC MOV W21, W31
	0x01EA51D0 ADRP X8, 0x2251000
	0x01EA51D4 LDR X8, [X8 + 0xE40]
	0x01EA51D8 LDR X0, [X8]
	0x01EA51DC LDR W8, [X0 + 0xE0]
	0x01EA51E0 CBNZ W8, 0x1EA51E8
	0x01EA51E4 BL 0x1C16DFC
	0x01EA51E8 CMP W21, W19
	0x01EA51EC B.EQ 0x1EA5274
	0x01EA51F0 LDR X0, [X20 + 0x50]
	0x01EA51F4 CBZ X0, 0x1EA5284
	0x01EA51F8 MOV X1, X31
	0x01EA51FC BL 0x1EC0864
	0x01EA5200 TBNZ X0, 0x0, 0x1EA5274
	0x01EA5204 LDR X20, [X20 + 0x50]
	0x01EA5208 CBZ X20, 0x1EA5284
	0x01EA520C ADRP X21, 0x2533000
	0x01EA5210 LDRB W8, [X21 + 0xB73]
	0x01EA5214 CBNZ W8, 0x1EA522C
	0x01EA5218 ADRP X0, 0x2253000
	0x01EA521C LDR X0, [X0 + 0x20]
	0x01EA5220 BL 0x1C16CF4
	0x01EA5224 MOVZ W8, 0x1
	0x01EA5228 STRB W8, [X21 + 0xB73]
	0x01EA522C STR X31, [X31 + 0x8]
	0x01EA5230 LDR X0, [X20 + 0xB8]
	0x01EA5234 CBZ X0, 0x1EA5284
	0x01EA5238 ADRP X8, 0x2253000
	0x01EA523C LDR X8, [X8 + 0x20]
	0x01EA5240 AND X1, X19, 0x0
	0x01EA5244 ADD X2, X31, 0x8
	0x01EA5248 LDR X3, [X8]
	0x01EA524C BL 0x2AE89D0
	0x01EA5250 LDR X8, [X31 + 0x8]
	0x01EA5254 CBZ X8, 0x1EA5274
	0x01EA5258 TBZ X0, 0x0, 0x1EA5274
	0x01EA525C LDR X0, [X8 + 0x30]
	0x01EA5260 CBZ X0, 0x1EA5284
	0x01EA5264 ADRP X8, 0x2255000
	0x01EA5268 LDR X8, [X8 + 0x678]
	0x01EA526C LDR X1, [X8]
	0x01EA5270 BL 0x2DAA53C
	0x01EA5274 LDP X20, X19, [X31 + 0x20]
	0x01EA5278 LDP X30, X21, [X31 + 0x10]
	0x01EA527C ADD X31, X31, 0x30
	0x01EA5280 RET
	0x01EA5284 BL 0x1C16F20
	0x01EA5288 STR X30, [X31 - 0x10]!
	0x01EA528C LDR X0, [X0 + 0x50]
	0x01EA5290 CBZ X0, 0x1EA52A4
	0x01EA5294 AND X2, X2, 0x0
	0x01EA5298 MOV X3, X31
	0x01EA529C BL 0x1DBF658
	0x01EA52A0 AND X0, X0, 0xFFFF
	0x01EA52A4 LDR X30, [X31], #0x10
	0x01EA52A8 RET
	0x01EA52AC SUB X31, X31, 0x50
	0x01EA52B0 STP X30, X23, [X31 + 0x20]
	0x01EA52B4 STP X22, X21, [X31 + 0x30]
	0x01EA52B8 STP X20, X19, [X31 + 0x40]
	0x01EA52BC ADRP X22, 0x2534000
	0x01EA52C0 LDRB W8, [X22 + 0x33D]
	0x01EA52C4 MOV W21, W2
	0x01EA52C8 MOV X19, X1
	0x01EA52CC MOV X20, X0
	0x01EA52D0 TBNZ X8, 0x0, 0x1EA5318
	0x01EA52D4 ADRP X0, 0x2259000
	0x01EA52D8 LDR X0, [X0 + 0xB90]
	0x01EA52DC BL 0x1C16CF4
	0x01EA52E0 ADRP X0, 0x2259000
	0x01EA52E4 LDR X0, [X0 + 0xB98]
	0x01EA52E8 BL 0x1C16CF4
	0x01EA52EC ADRP X0, 0x2259000
	0x01EA52F0 LDR X0, [X0 + 0xBA0]
	0x01EA52F4 BL 0x1C16CF4
	0x01EA52F8 ADRP X0, 0x2259000
	0x01EA52FC LDR X0, [X0 + 0xBA8]
	0x01EA5300 BL 0x1C16CF4
	0x01EA5304 ADRP X0, 0x2259000
	0x01EA5308 LDR X0, [X0 + 0xBB0]
	0x01EA530C BL 0x1C16CF4
	0x01EA5310 MOVZ W8, 0x1
	0x01EA5314 STRB W8, [X22 + 0x33D]
	0x01EA5318 STP X31, X31, [X31 + 0x8]
	0x01EA531C STR X31, [X31 + 0x18]
	0x01EA5320 LDR X0, [X20 + 0x50]
	0x01EA5324 CBZ X0, 0x1EA5334
	0x01EA5328 MOV X1, X31
	0x01EA532C BL 0x1EC0864
	0x01EA5330 TBNZ X0, 0x0, 0x1EA53C4
	0x01EA5334 CBZ X19, 0x1EA53D8
	0x01EA5338 AND W8, W21, 0x1
	0x01EA533C STRB W8, [X19 + 0x74]
	0x01EA5340 LDR X8, [X20 + 0x50]
	0x01EA5344 CBZ X8, 0x1EA53D8
	0x01EA5348 LDR X0, [X8 + 0xB0]
	0x01EA534C CBZ X0, 0x1EA53D8
	0x01EA5350 ADRP X8, 0x2259000
	0x01EA5354 LDR X8, [X8 + 0xB90]
	0x01EA5358 LDR X1, [X8]
	0x01EA535C BL 0x2A1352C
	0x01EA5360 CBZ X0, 0x1EA53D8
	0x01EA5364 ADRP X8, 0x2259000
	0x01EA5368 LDR X8, [X8 + 0xBB0]
	0x01EA536C ADRP X23, 0x2259000
	0x01EA5370 ADRP X22, 0x2259000
	0x01EA5374 LDR X1, [X8]
	0x01EA5378 LDR X23, [X23 + 0xBA0]
	0x01EA537C LDR X22, [X22 + 0xB98]
	0x01EA5380 ADD X8, X31, 0x8
	0x01EA5384 BL 0x274B2CC
	0x01EA5388 AND W21, W21, 0x1
	0x01EA538C LDR X1, [X23]
	0x01EA5390 ADD X0, X31, 0x8
	0x01EA5394 BL 0x2BF5F4C
	0x01EA5398 TBZ X0, 0x0, 0x1EA53B8
	0x01EA539C LDR X2, [X31 + 0x18]
	0x01EA53A0 MOV X0, X20
	0x01EA53A4 MOV X1, X19
	0x01EA53A8 MOV W3, W21
	0x01EA53AC MOV W4, W31
	0x01EA53B0 BL 0x1EA5444
	0x01EA53B4 B 0x1EA538C
	0x01EA53B8 LDR X1, [X22]
	0x01EA53BC ADD X0, X31, 0x8
	0x01EA53C0 BL 0x2BF5F48
	0x01EA53C4 LDP X20, X19, [X31 + 0x40]
	0x01EA53C8 LDP X22, X21, [X31 + 0x30]
	0x01EA53CC LDP X30, X23, [X31 + 0x20]
	0x01EA53D0 ADD X31, X31, 0x50
	0x01EA53D4 RET
	0x01EA53D8 BL 0x1C16F20
	0x01EA53DC B 0x1EA53E0
	0x01EA53E0 MOV X20, X0
	0x01EA53E4 CMP W1, 0x1
	0x01EA53E8 B.NE 0x1EA5414
	0x01EA53EC MOV X0, X20
	0x01EA53F0 BL 0x3EB1AD0
	0x01EA53F4 LDR X19, [X0]
	0x01EA53F8 BL 0x3EB1AE0
	0x01EA53FC LDR X1, [X22]
	0x01EA5400 ADD X0, X31, 0x8
	0x01EA5404 BL 0x2BF5F48
	0x01EA5408 CBZ X19, 0x1EA53C4
	0x01EA540C MOV X0, X19
	0x01EA5410 BL 0x1C16F18
	0x01EA5414 MOV X19, X31
	0x01EA5418 B 0x1EA5420
	0x01EA541C MOV X20, X0
	0x01EA5420 LDR X1, [X22]
	0x01EA5424 ADD X0, X31, 0x8
	0x01EA5428 BL 0x2BF5F48
	0x01EA542C CBNZ X19, 0x1EA5438
	0x01EA5430 MOV X0, X20
	0x01EA5434 BL 0x1D2C690
	0x01EA5438 MOV X0, X19
	0x01EA543C BL 0x1C16F18
	0x01EA5440 BL 0x1990590
	0x01EA5444 STR X30, [X31 - 0x30]!
	0x01EA5448 STP X22, X21, [X31 + 0x10]
	0x01EA544C STP X20, X19, [X31 + 0x20]
	0x01EA5450 CBZ X1, 0x1EA54F4
	0x01EA5454 MOV X20, X1
	0x01EA5458 LDR X1, [X1 + 0x40]
	0x01EA545C MOV W22, W4
	0x01EA5460 MOV W19, W3
	0x01EA5464 MOV X21, X2
	0x01EA5468 BL 0x1EA1A20
	0x01EA546C TBZ X0, 0x0, 0x1EA54DC
	0x01EA5470 LDR X8, [X20 + 0x40]
	0x01EA5474 CBZ X8, 0x1EA54F4
	0x01EA5478 LDR X8, [X8 + 0x20]
	0x01EA547C CBZ X8, 0x1EA54EC
	0x01EA5480 LDR W1, [X8]
	0x01EA5484 CBZ X21, 0x1EA54F4
	0x01EA5488 AND W2, W22, 0x1
	0x01EA548C MOV X0, X21
	0x01EA5490 MOV W3, W31
	0x01EA5494 MOV X4, X31
	0x01EA5498 BL 0x1ED0A18
	0x01EA549C CBZ X0, 0x1EA54DC
	0x01EA54A0 LDR W9, [X20 + 0x68]
	0x01EA54A4 LDR X8, [X0 + 0x48]
	0x01EA54A8 MOVZ W10, 0x1
	0x01EA54AC AND W11, W19, 0x1
	0x01EA54B0 LSLV X9, X10, X9
	0x01EA54B4 ANDS X31, X9, X8, 0x0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0x2535000
	015 Move W8, [X23+835]
	016 Move W21, W4
	017 Move X22, X2
	018 Move X19, X1
	019 Move X20, X0
	020 Move [X31], X2
	021 Move [X31+8], W3
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {61}
	026 Move X0, 0x225A000
	027 Move X0, [X0+2840]
	028 Call 0x1C17CF4
	029 Move X0, 0x225A000
	030 Move X0, [X0+2848]
	031 Call 0x1C17CF4
	032 Move X0, 0x225A000
	033 Move X0, [X0+1856]
	034 Call 0x1C17CF4
	035 Move X0, 0x2252000
	036 Move X0, [X0+920]
	037 Call 0x1C17CF4
	038 Move X0, 0x225A000
	039 Move X0, [X0+888]
	040 Call 0x1C17CF4
	041 Move X0, 0x225A000
	042 Move X0, [X0+2856]
	043 Call 0x1C17CF4
	044 Move X0, 0x225A000
	045 Move X0, [X0+2864]
	046 Call 0x1C17CF4
	047 Move X0, 0x224F000
	048 Move X0, [X0+1432]
	049 Call 0x1C17CF4
	050 Move X0, 0x225A000
	051 Move X0, [X0+2872]
	052 Call 0x1C17CF4
	053 Move X0, 0x225A000
	054 Move X0, [X0+2880]
	055 Call 0x1C17CF4
	056 Move X0, 0x225A000
	057 Move X0, [X0+2888]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X23+835], W8
	061 Compare X19, 0
	062 JumpIfEqual {175}
	063 Move X8, 0x2252000
	064 Move X9, [X19+32]
	065 Move X8, [X8+920]
	066 Compare X9, 0
	067 JumpIfEqual {69}
	068 Move W23, [X9]
	069 Move W23, W31
	070 Move X0, [X8]
	071 Move X26, 0x225A000
	072 Move X29, 0x225A000
	073 Move X25, 0x225A000
	074 Move X24, 0x224F000
	075 Move W8, [X0+224]
	076 Move X26, [X26+1856]
	077 Move X29, [X29+2872]
	078 Move X25, [X25+2848]
	079 Move X24, [X24+1432]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X27, 0x225A000
	084 Move X27, [X27+2880]
	085 Move X1, [X26]
	086 Move X28, 0x225A000
	087 Move X28, [X28+2840]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X0, X19
	090 NotImplemented "Instruction CSET not yet implemented."
	091 Call 0x2215CF8, X0
	092 Move X1, [X29]
	093 Move X3, [X25]
	094 Move X2, X0
	095 Move W0, W23
	096 Call Assert.Always, X0, X1, X2
	097 Move X0, [X24]
	098 Move X23, [X19+48]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Move X24, 0x225A000
	104 Move X24, [X24+888]
	105 Move X0, X23
	106 Move X1, X31
	107 Move X2, X31
	108 Call Object.op_Equality, X0, X1
	109 Move X1, [X26]
	110 Move W23, W0
	111 Move X0, X19
	112 Call 0x2215CF8, X0
	113 Move X3, [X19+48]
	114 Move X1, [X27]
	115 Move X4, [X28]
	116 Move X2, X0
	117 And W0, W23, 1
	118 Call Assert.Always, X0, X1, X2, X3
	119 And W31, W22, 255
	120 Move X8, 0x225A000
	121 Move X8, [X8+2864]
	122 Add X0, X31, 0
	123 Move X1, [X8]
	124 Call Nullable`1<NetworkObjectTypeId>.get_Value, X0
	125 Move [X19+100], X0
	126 Move TEMP, X21
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfEqual {154}
	130 Move X0, [X24]
	131 NotImplemented "Instruction LDUR not yet implemented."
	132 Move W8, [X0+224]
	133 Compare W8, 0
	134 JumpIfNotEqual {136}
	135 Call 0x1C17DFC
	136 Move X1, [X26]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X8, X22
	139 ShiftRight X8, 32
	140 And X8, X8, 0x7FFFFFFF
	141 NotImplemented "Instruction CSET not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 NotImplemented "Instruction CSET not yet implemented."
	144 Move X0, X19
	145 Or W22, W8, W9
	146 Call 0x2215CF8, X0
	147 Move X8, 0x225A000
	148 Move X8, [X8+2888]
	149 Move X3, [X25]
	150 Move X2, X0
	151 Move W0, W22
	152 Move X1, [X8]
	153 Call Assert.Always, X0, X1, X2
	154 Move X8, [X19+120]
	155 Move [X19+48], X20
	156 Compare X8, 0
	157 JumpIfEqual {175}
	158 Move X22, X31
	159 Move W9, [X8+24]
	160 NotImplemented "Instruction CMP not yet implemented."
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Add X8, X8, X22
	163 Move X0, [X8+32]
	164 Compare X0, 0
	165 JumpIfEqual {175}
	166 Move X1, X20
	167 Move X2, X19
	168 Move W3, W22
	169 Move X4, X31
	170 Call NetworkBehaviour.MakeOwned, X0, X1, X2, X3
	171 Move X8, [X19+120]
	172 Add X22, X22, 1
	173 Compare X8, 0
	174 JumpIfNotEqual {159}
	175 Call 0x1C17F20
	176 Move X0, [X24]
	177 Add X22, X19, 100
	178 Move W8, [X0+224]
	179 Compare W8, 0
	180 JumpIfNotEqual {182}
	181 Call 0x1C17DFC
	182 Move X0, X22
	183 Move X1, X31
	184 Call NetworkObjectTypeId.get_IsSceneObject, X0
	185 Move TEMP, X0
	186 And TEMP, TEMP, 1
	187 Compare TEMP, 1
	188 JumpIfEqual {212}
	189 Move TEMP, X21
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfEqual {212}
	193 Move X22, [X19+112]
	194 Compare X22, 0
	195 JumpIfEqual {175}
	196 Move X8, [X22+24]
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move X23, X31
	199 And X8, X8, 0
	200 Add X24, X22, 32
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move X1, [X24]
	203 And X21, X21, 0
	204 Move W4, 1
	205 Move X0, X20
	206 Move X2, X31
	207 Move X3, X21
	208 Call NetworkRunner.InitializeNetworkObjectAssignRunner, X0, X1, X2, X3
	209 Move W8, [X22+24]
	210 Add X23, X23, 1
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move W8, [X19+96]
	213 Move X0, X19
	214 Move X1, X31
	215 And W8, W8, 0xF000FFFF
	216 Move [X19+96], W8
	217 Call NetworkObject.PrepareBehaviourOrder, X0
	218 Move W0, [X19+96]
	219 Move W1, 1
	220 Move X2, X31
	221 Call NetworkObjectRuntimeFlagsExtensions.CheckFlag, X0, X1
	222 Move TEMP, X0
	223 And TEMP, TEMP, 1
	224 Compare TEMP, 1
	225 JumpIfEqual {240}
	226 Move W0, [X19+96]
	227 Move W1, 0x2000
	228 Move X2, X31
	229 Call NetworkObjectRuntimeFlagsExtensions.CheckFlag, X0, X1
	230 Move TEMP, X0
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfEqual {240}
	234 Move W8, [X19+96]
	235 Move X0, X20
	236 Move X1, X19
	237 Or W8, W8, 0x2000
	238 Move [X19+96], W8
	239 Call NetworkRunner.AddInactiveObjectGuard, X0, X1
	240 Move X20, [X31+96]
	241 Move X19, [X31+104]
	242 Move X22, [X31+80]
	243 Move X21, [X31+88]
	244 Move X24, [X31+64]
	245 Move X23, [X31+72]
	246 Move X26, [X31+48]
	247 Move X25, [X31+56]
	248 Move X28, [X31+32]
	249 Move X27, [X31+40]
	250 Move X29, [X31+16]
	251 Move X30, [X31+24]
	252 Add X31, X31, 112
	253 Return 
	254 Call 0x1C17F28

Method: System.Void InitializeNetworkObjectInstance(Fusion.NetworkObjectMeta meta, Fusion.NetworkObject instance, System.Nullable`1<Fusion.PlayerRef> inputAuthority, Fusion.NetworkRunner/AttachOptions options, System.Nullable`1<System.Boolean> masterClientObjectOverride)

Disassembly:
	0x01EA54B8 CSET W10, NE
	0x01EA54BC CMP W10, W11
	0x01EA54C0 B.EQ 0x1EA54DC
	0x01EA54C4 BIC X10, X8, X9, 0x0
	0x01EA54C8 ORR X8, X9, X8, 0x0
	0x01EA54CC ANDS W31, W19, 0x1
	0x01EA54D0 CSEL X8, X8, X10, NE
	0x01EA54D4 STR X8, [X0 + 0x48]
	0x01EA54D8 STP W31, W31, [X0 + 0x3C]
	0x01EA54DC LDP X20, X19, [X31 + 0x20]
	0x01EA54E0 LDP X22, X21, [X31 + 0x10]
	0x01EA54E4 LDR X30, [X31], #0x30
	0x01EA54E8 RET
	0x01EA54EC MOV X1, X31
	0x01EA54F0 CBNZ X21, 0x1EA5488
	0x01EA54F4 BL 0x1C16F20
	0x01EA54F8 STR X30, [X31 - 0x40]!
	0x01EA54FC STP X24, X23, [X31 + 0x10]
	0x01EA5500 STP X22, X21, [X31 + 0x20]
	0x01EA5504 STP X20, X19, [X31 + 0x30]
	0x01EA5508 STR X31, [X31 + 0x8]
	0x01EA550C MOV X19, X0
	0x01EA5510 LDR X0, [X0 + 0x50]
	0x01EA5514 CBZ X0, 0x1EA55A8
	0x01EA5518 MOV X20, X1
	0x01EA551C MOV X1, X31
	0x01EA5520 MOV W21, W3
	0x01EA5524 MOV X22, X2
	0x01EA5528 BL 0x1EC0864
	0x01EA552C TBNZ X0, 0x0, 0x1EA5594
	0x01EA5530 LDR X23, [X19 + 0x50]
	0x01EA5534 CBZ X23, 0x1EA55A8
	0x01EA5538 ADRP X24, 0x2534000
	0x01EA553C LDRB W8, [X24 + 0x2F1]
	0x01EA5540 CBNZ W8, 0x1EA5558
	0x01EA5544 ADRP X0, 0x2253000
	0x01EA5548 LDR X0, [X0 + 0x20]
	0x01EA554C BL 0x1C16CF4
	0x01EA5550 MOVZ W8, 0x1
	0x01EA5554 STRB W8, [X24 + 0x2F1]
	0x01EA5558 LDR X0, [X23 + 0xB8]
	0x01EA555C CBZ X0, 0x1EA55A8
	0x01EA5560 ADRP X8, 0x2253000
	0x01EA5564 LDR X8, [X8 + 0x20]
	0x01EA5568 AND X1, X22, 0x0
	0x01EA556C ADD X2, X31, 0x8
	0x01EA5570 LDR X3, [X8]
	0x01EA5574 BL 0x2AE89D0
	0x01EA5578 TBZ X0, 0x0, 0x1EA5594
	0x01EA557C LDR X2, [X31 + 0x8]
	0x01EA5580 AND W3, W21, 0x1
	0x01EA5584 MOVZ W4, 0x1
	0x01EA5588 MOV X0, X19
	0x01EA558C MOV X1, X20
	0x01EA5590 BL 0x1EA5444
	0x01EA5594 LDP X20, X19, [X31 + 0x30]
	0x01EA5598 LDP X22, X21, [X31 + 0x20]
	0x01EA559C LDP X24, X23, [X31 + 0x10]
	0x01EA55A0 LDR X30, [X31], #0x40
	0x01EA55A4 RET
	0x01EA55A8 BL 0x1C16F20
	0x01EA55AC SUB X31, X31, 0x80
	0x01EA55B0 STP X29, X30, [X31 + 0x20]
	0x01EA55B4 STP X28, X27, [X31 + 0x30]
	0x01EA55B8 STP X26, X25, [X31 + 0x40]
	0x01EA55BC STP X24, X23, [X31 + 0x50]
	0x01EA55C0 STP X22, X21, [X31 + 0x60]
	0x01EA55C4 STP X20, X19, [X31 + 0x70]
	0x01EA55C8 ADRP X21, 0x2534000
	0x01EA55CC LDRB W8, [X21 + 0x33E]
	0x01EA55D0 MOV X22, X4
	0x01EA55D4 MOV W23, W3
	0x01EA55D8 MOV X19, X1
	0x01EA55DC MOV X20, X0
	0x01EA55E0 STR X2, [X31 + 0x10]
	0x01EA55E4 TBNZ X8, 0x0, 0x1EA562C
	0x01EA55E8 ADRP X0, 0x2259000
	0x01EA55EC LDR X0, [X0 + 0xAF8]
	0x01EA55F0 BL 0x1C16CF4
	0x01EA55F4 ADRP X0, 0x2259000
	0x01EA55F8 LDR X0, [X0 + 0xBB8]
	0x01EA55FC BL 0x1C16CF4
	0x01EA5600 ADRP X0, 0x2259000
	0x01EA5604 LDR X0, [X0 + 0x378]
	0x01EA5608 BL 0x1C16CF4
	0x01EA560C ADRP X0, 0x2257000
	0x01EA5610 LDR X0, [X0 + 0xE80]
	0x01EA5614 BL 0x1C16CF4
	0x01EA5618 ADRP X0, 0x224E000
	0x01EA561C LDR X0, [X0 + 0x598]
	0x01EA5620 BL 0x1C16CF4
	0x01EA5624 MOVZ W8, 0x1
	0x01EA5628 STRB W8, [X21 + 0x33E]
	0x01EA562C CBZ X19, 0x1EA5C64
	0x01EA5630 LDR W8, [X19 + 0x18]
	0x01EA5634 ADRP X27, 0x2257000
	0x01EA5638 LDR X27, [X27 + 0xE80]
	0x01EA563C CMP W8, 0x1
	0x01EA5640 B.LT 0x1EA579C
	0x01EA5644 STR X22, [X31 + 0x8]
	0x01EA5648 ADRP X28, 0x224E000
	0x01EA564C ADRP X29, 0x2259000
	0x01EA5650 LDR X28, [X28 + 0x598]
	0x01EA5654 LDR X29, [X29 + 0x378]
	0x01EA5658 MOV X26, X31
	0x01EA565C ADD X22, X19, 0x20
	0x01EA5660 CMP W26, W8
	0x01EA5664 B.CS 0x1EA5BB4
	0x01EA5668 LDR X0, [X28]
	0x01EA566C LDR X25, [X22, X26, LSL #3]
	0x01EA5670 LDR W8, [X0 + 0xE0]
	0x01EA5674 CBNZ W8, 0x1EA567C
	0x01EA5678 BL 0x1C16DFC
	0x01EA567C MOV X0, X25
	0x01EA5680 MOV X1, X31
	0x01EA5684 MOV X2, X31
	0x01EA5688 BL 0x3C3883C
	0x01EA568C TBNZ X0, 0x0, 0x1EA5BB8
	0x01EA5690 CBZ X25, 0x1EA5BB0
	0x01EA5694 LDR X0, [X29]
	0x01EA5698 LDR W8, [X0 + 0xE0]
	0x01EA569C CBNZ W8, 0x1EA56A4
	0x01EA56A0 BL 0x1C16DFC
	0x01EA56A4 ADD X0, X25, 0x64
	0x01EA56A8 MOV X1, X31
	0x01EA56AC BL 0x1E96160
	0x01EA56B0 TBZ X0, 0x0, 0x1EA5BE0
	0x01EA56B4 TBZ X23, 0x0, 0x1EA56D8
	0x01EA56B8 LDR X8, [X20 + 0x38]
	0x01EA56BC CBZ X8, 0x1EA56D8
	0x01EA56C0 LDR X9, [X8 + 0x18]
	0x01EA56C4 LDR X0, [X8 + 0x40]
	0x01EA56C8 LDR X3, [X8 + 0x28]
	0x01EA56CC MOV X1, X20
	0x01EA56D0 MOV X2, X25
	0x01EA56D4 BLR X9
	0x01EA56D8 LDR X0, [X27]
	0x01EA56DC LDR W8, [X0 + 0xE0]
	0x01EA56E0 CBNZ W8, 0x1EA56E8
	0x01EA56E4 BL 0x1C16DFC
	0x01EA56E8 LDR W0, [X25 + 0x60]
	0x01EA56EC MOVZ W1, 0x20000
	0x01EA56F0 MOV X2, X31
	0x01EA56F4 BL 0x1E93D90
	0x01EA56F8 TBNZ X0, 0x0, 0x1EA5718
	0x01EA56FC AND X24, X24, 0x0
	0x01EA5700 MOV X0, X20
	0x01EA5704 MOV X1, X25
	0x01EA5708 MOV X2, X31
	0x01EA570C MOV X3, X24
	0x01EA5710 MOV W4, W31
	0x01EA5714 BL 0x1EA4148
	0x01EA5718 LDR X8, [X19 + 0x18]
	0x01EA571C ADD X26, X26, 0x1
	0x01EA5720 CMP W26, W8
	0x01EA5724 B.LT 0x1EA5660
	0x01EA5728 CMP W8, 0x1
	0x01EA572C B.LT 0x1EA5798
	0x01EA5730 ADRP X25, 0x2259000
	0x01EA5734 ADRP X26, 0x2259000
	0x01EA5738 LDR X25, [X25 + 0xBB8]
	0x01EA573C LDR X26, [X26 + 0xAF8]
	0x01EA5740 MOV X21, X31
	0x01EA5744 ADD X22, X19, 0x20
	0x01EA5748 CMP W21, W8
	0x01EA574C B.CS 0x1EA5BB4
	0x01EA5750 LDR X24, [X22, X21, LSL #3]
	0x01EA5754 CBZ X24, 0x1EA5BB0
	0x01EA5758 LDR X0, [X20 + 0xC8]
	0x01EA575C CBZ X0, 0x1EA5BB0
	0x01EA5760 LDUR X1, [X24 + 0x64]
	0x01EA5764 LDR X2, [X25]
	0x01EA5768 BL 0x2A837A0
	0x01EA576C TBNZ X0, 0x0, 0x1EA5788
	0x01EA5770 LDR X0, [X20 + 0xC8]
	0x01EA5774 CBZ X0, 0x1EA5BB0
	0x01EA5778 LDUR X1, [X24 + 0x64]
	0x01EA577C LDR X3, [X26]
	0x01EA5780 MOV X2, X24
	0x01EA5784 BL 0x2A835AC
	0x01EA5788 LDR X8, [X19 + 0x18]
	0x01EA578C ADD X21, X21, 0x1
	0x01EA5790 CMP W21, W8
	0x01EA5794 B.LT 0x1EA5748
	0x01EA5798 LDR X22, [X31 + 0x8]
	0x01EA579C CMP W8, 0x1
	0x01EA57A0 TBZ X23, 0x0, 0x1EA5B4C
	0x01EA57A4 B.LT 0x1EA5A3C
	0x01EA57A8 MOV X28, X31
	0x01EA57AC AND X29, X22, 0xFFFF
	0x01EA57B0 ADD X21, X19, 0x20
	0x01EA57B4 CMP W28, W8
	0x01EA57B8 B.CS 0x1EA5BB4
	0x01EA57BC LDR X0, [X27]
	0x01EA57C0 LDR X23, [X21, X28, LSL #3]
	0x01EA57C4 LDR W8, [X0 + 0xE0]
	0x01EA57C8 CBNZ W8, 0x1EA57D0
	0x01EA57CC BL 0x1C16DFC
	0x01EA57D0 CBZ X23, 0x1EA5BB0
	0x01EA57D4 LDR W0, [X23 + 0x60]
	0x01EA57D8 MOVZ W1, 0x20000
	0x01EA57DC MOV X2, X31
	0x01EA57E0 BL 0x1E93D90
	0x01EA57E4 TBNZ X0, 0x0, 0x1EA5858
	0x01EA57E8 LDR X24, [X20 + 0x50]
	0x01EA57EC CBZ X24, 0x1EA5BB0
	0x01EA57F0 MOV X0, X24
	0x01EA57F4 MOV X1, X31
	0x01EA57F8 BL 0x1EC4400
	0x01EA57FC LDUR X25, [X23 + 0x64]
	0x01EA5800 MOV X26, X0
	0x01EA5804 MOV X0, X23
	0x01EA5808 MOV X1, X31
	0x01EA580C BL 0x1E93EF4
	0x01EA5810 MOV W3, W0
	0x01EA5814 AND X1, X26, 0x0
	0x01EA5818 MOV X0, X24
	0x01EA581C MOV X2, X25
	0x01EA5820 MOV W4, W31
	0x01EA5824 MOV X5, X31
	0x01EA5828 MOV X6, X31
	0x01EA582C MOV X7, X31
	0x01EA5830 BL 0x1EC98AC
	0x01EA5834 LDR X3, [X31 + 0x10]
	0x01EA5838 AND X8, X22, 0xFFFFFFFF
	0x01EA583C ORR X22, X8, X29, 0x0
	0x01EA5840 MOV X1, X0
	0x01EA5844 MOVZ W4, 0x1
	0x01EA5848 MOV X0, X20
	0x01EA584C MOV X2, X23
	0x01EA5850 MOV X5, X22
	0x01EA5854 BL 0x1EA44B8
	0x01EA5858 LDR X8, [X19 + 0x18]
	0x01EA585C ADD X28, X28, 0x1
	0x01EA5860 CMP W28, W8
	0x01EA5864 B.LT 0x1EA57B4
	0x01EA5868 CMP W8, 0x1
	0x01EA586C B.LT 0x1EA5A3C
	0x01EA5870 MOV X22, X31
	0x01EA5874 ADD X23, X19, 0x20
	0x01EA5878 CMP W22, W8
	0x01EA587C B.CS 0x1EA5BB4
	0x01EA5880 LDR X0, [X27]
	0x01EA5884 LDR X21, [X23, X22, LSL #3]
	0x01EA5888 LDR W8, [X0 + 0xE0]
	0x01EA588C CBNZ W8, 0x1EA5894
	0x01EA5890 BL 0x1C16DFC
	0x01EA5894 CBZ X21, 0x1EA5BB0
	0x01EA5898 LDR W0, [X21 + 0x60]
	0x01EA589C MOVZ W1, 0x1
	0x01EA58A0 MOV X2, X31
	0x01EA58A4 BL 0x1E93D90
	0x01EA58A8 TBZ X0, 0x0, 0x1EA58E4
	0x01EA58AC LDR X0, [X27]
	0x01EA58B0 LDR W8, [X0 + 0xE0]
	0x01EA58B4 CBNZ W8, 0x1EA58BC
	0x01EA58B8 BL 0x1C16DFC
	0x01EA58BC LDR W0, [X21 + 0x60]
	0x01EA58C0 MOVZ W1, 0x20000
	0x01EA58C4 MOV X2, X31
	0x01EA58C8 BL 0x1E93D90
	0x01EA58CC CBZ X20, 0x1EA5BB0
	0x01EA58D0 ORN W8, W31, W0, 0x0
	0x01EA58D4 AND W2, W8, 0x1
	0x01EA58D8 MOV X0, X20
	0x01EA58DC MOV X1, X21
	0x01EA58E0 BL 0x1EA4A60
	0x01EA58E4 LDR X8, [X19 + 0x18]
	0x01EA58E8 ADD X22, X22, 0x1
	0x01EA58EC CMP W22, W8
	0x01EA58F0 B.LT 0x1EA5878
	0x01EA58F4 CMP W8, 0x1
	0x01EA58F8 B.LT 0x1EA5A3C
	0x01EA58FC MOV X22, X31
	0x01EA5900 ADD X23, X19, 0x20
	0x01EA5904 CMP W22, W8
	0x01EA5908 B.CS 0x1EA5BB4
	0x01EA590C LDR X0, [X27]
	0x01EA5910 LDR X21, [X23, X22, LSL #3]
	0x01EA5914 LDR W8, [X0 + 0xE0]
	0x01EA5918 CBNZ W8, 0x1EA5920
	0x01EA591C BL 0x1C16DFC
	0x01EA5920 CBZ X21, 0x1EA5BB0
	0x01EA5924 LDR W0, [X21 + 0x60]
	0x01EA5928 MOVZ W1, 0x1
	0x01EA592C MOV X2, X31
	0x01EA5930 BL 0x1E93D90
	0x01EA5934 TBZ X0, 0x0, 0x1EA5974
	0x01EA5938 LDR X0, [X27]
	0x01EA593C LDR W8, [X0 + 0xE0]
	0x01EA5940 CBNZ W8, 0x1EA5948
	0x01EA5944 BL 0x1C16DFC
	0x01EA5948 LDR W0, [X21 + 0x60]
	0x01EA594C MOVZ W1, 0x20000
	0x01EA5950 MOV X2, X31
	0x01EA5954 BL 0x1E93D90
	0x01EA5958 CBZ X20, 0x1EA5BB0
	0x01EA595C ORN W8, W31, W0, 0x0
	0x01EA5960 AND W2, W8, 0x1
	0x01EA5964 MOV X0, X20
	0x01EA5968 MOV X1, X21
	0x01EA596C MOV X3, X31
	0x01EA5970 BL 0x1EA4B28
	0x01EA5974 LDR X8, [X19 + 0x18]
	0x01EA5978 ADD X22, X22, 0x1
	0x01EA597C CMP W22, W8
	0x01EA5980 B.LT 0x1EA5904
	0x01EA5984 CMP W8, 0x1
	0x01EA5988 B.LT 0x1EA5A3C
	0x01EA598C MOV X22, X31
	0x01EA5990 ADD X23, X19, 0x20
	0x01EA5994 CMP W22, W8
	0x01EA5998 B.CS 0x1EA5BB4
	0x01EA599C LDR X0, [X27]
	0x01EA59A0 LDR X21, [X23, X22, LSL #3]
	0x01EA59A4 LDR W8, [X0 + 0xE0]
	0x01EA59A8 CBNZ W8, 0x1EA59B0
	0x01EA59AC BL 0x1C16DFC
	0x01EA59B0 CBZ X21, 0x1EA5BB0
	0x01EA59B4 LDR W0, [X21 + 0x60]
	0x01EA59B8 MOVZ W1, 0x1
	0x01EA59BC MOV X2, X31
	0x01EA59C0 BL 0x1E93D90
	0x01EA59C4 TBZ X0, 0x0, 0x1EA59D0
	0x01EA59C8 MOV X1, X21
	0x01EA59CC BL 0x1EA4DB8
	0x01EA59D0 LDR X8, [X19 + 0x18]
	0x01EA59D4 ADD X22, X22, 0x1
	0x01EA59D8 CMP W22, W8
	0x01EA59DC B.LT 0x1EA5994
	0x01EA59E0 CMP W8, 0x1
	0x01EA59E4 B.LT 0x1EA5A3C
	0x01EA59E8 MOV X22, X31
	0x01EA59EC ADD X23, X19, 0x20
	0x01EA59F0 CMP W22, W8
	0x01EA59F4 B.CS 0x1EA5BB4
	0x01EA59F8 LDR X0, [X27]
	0x01EA59FC LDR X21, [X23, X22, LSL #3]
	0x01EA5A00 LDR W8, [X0 + 0xE0]
	0x01EA5A04 CBNZ W8, 0x1EA5A0C
	0x01EA5A08 BL 0x1C16DFC
	0x01EA5A0C CBZ X21, 0x1EA5BB0
	0x01EA5A10 LDR W0, [X21 + 0x60]
	0x01EA5A14 MOVZ W1, 0x1
	0x01EA5A18 MOV X2, X31
	0x01EA5A1C BL 0x1E93D90
	0x01EA5A20 TBZ X0, 0x0, 0x1EA5A2C
	0x01EA5A24 MOV X1, X21
	0x01EA5A28 BL 0x1EA4E54
	0x01EA5A2C LDR W8, [X19 + 0x18]
	0x01EA5A30 ADD X22, X22, 0x1
	0x01EA5A34 CMP W22, W8
	0x01EA5A38 B.LT 0x1EA59F0
	0x01EA5A3C MOV X0, X20
	0x01EA5A40 BL 0x1EA27F0
	0x01EA5A44 TBZ X0, 0x0, 0x1EA5B90
	0x01EA5A48 LDR X8, [X20 + 0x50]
	0x01EA5A4C CBZ X8, 0x1EA5BB0
	0x01EA5A50 LDR X0, [X8 + 0x58]
	0x01EA5A54 CBZ X0, 0x1EA5BB0
	0x01EA5A58 MOV X1, X31
	0x01EA5A5C BL 0x1ED2A50

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+24], X3
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X24, 0x2535000
	015 Move W8, [X24+836]
	016 Move W22, W4
	017 Move X23, X3
	018 Move X19, X2
	019 Move X21, X1
	020 Move X20, X0
	021 NotImplemented "Instruction STRH not yet implemented."
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {61}
	026 Move X0, 0x225A000
	027 Move X0, [X0+2896]
	028 Call 0x1C17CF4
	029 Move X0, 0x225A000
	030 Move X0, [X0+1856]
	031 Call 0x1C17CF4
	032 Move X0, 0x2252000
	033 Move X0, [X0+2680]
	034 Call 0x1C17CF4
	035 Move X0, 0x2252000
	036 Move X0, [X0+920]
	037 Call 0x1C17CF4
	038 Move X0, 0x225A000
	039 Move X0, [X0+800]
	040 Call 0x1C17CF4
	041 Move X0, 0x225A000
	042 Move X0, [X0+808]
	043 Call 0x1C17CF4
	044 Move X0, 0x2259000
	045 Move X0, [X0+72]
	046 Call 0x1C17CF4
	047 Move X0, 0x225A000
	048 Move X0, [X0+2904]
	049 Call 0x1C17CF4
	050 Move X0, 0x225A000
	051 Move X0, [X0+2912]
	052 Call 0x1C17CF4
	053 Move X0, 0x2252000
	054 Move X0, [X0+3648]
	055 Call 0x1C17CF4
	056 Move X0, 0x225A000
	057 Move X0, [X0+2872]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X24+836], W8
	061 Compare X19, 0
	062 JumpIfEqual {425}
	063 Move X8, 0x2252000
	064 Move X9, [X19+32]
	065 Move X8, [X8+920]
	066 Compare X9, 0
	067 JumpIfEqual {69}
	068 Move W25, [X9]
	069 Move W25, W31
	070 Move X0, [X8]
	071 Move X24, 0x225A000
	072 Move W8, [X0+224]
	073 Move X24, [X24+1856]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X1, [X24]
	078 Move X0, X19
	079 Call 0x2215CF8, X0
	080 Compare X21, 0
	081 JumpIfEqual {425}
	082 Move X26, 0x225A000
	083 Move X27, 0x225A000
	084 Move X26, [X26+2872]
	085 Move X27, [X27+2896]
	086 Move X24, X0
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X0, X21
	089 Move X1, X31
	090 NotImplemented "Instruction CSET not yet implemented."
	091 Call NetworkObjectMeta.get_Id, X0
	092 Move X1, [X26]
	093 Move X4, [X27]
	094 And X3, X0, 0
	095 Move W0, W25
	096 Move X2, X24
	097 Call Assert.Always, X0, X1, X2, X3
	098 Move X8, [X21+176]
	099 Move X0, X20
	100 Move X1, X21
	101 Move W2, W22
	102 Move [X19+56], X21
	103 Move [X19+32], X8
	104 Move [X21+184], X19
	105 Call NetworkRunner.UnityPreInitialize, X0, X1, X2
	106 Move X8, [X19+120]
	107 Compare X8, 0
	108 JumpIfEqual {425}
	109 Move X9, [X19+32]
	110 Compare X9, 0
	111 JumpIfEqual {425}
	112 Move X8, [X8+24]
	113 Move X10, 0x225A000
	114 Move X10, [X10+808]
	115 Move X24, 0x225A000
	116 NotImplemented "Instruction STRH not yet implemented."
	117 Move X0, [X10]
	118 Move W8, [X0+224]
	119 Move X24, [X24+800]
	120 Compare W8, 0
	121 JumpIfNotEqual {123}
	122 Call 0x1C17DFC
	123 Move X0, [X24]
	124 Call 0x222D62C
	125 Move X8, [X19+120]
	126 Compare X8, 0
	127 JumpIfEqual {425}
	128 Move W9, [X8+24]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X26, 0x2252000
	131 Move X26, [X26+2680]
	132 Move W24, W0
	133 Move W10, W31
	134 Move TEMP, 39
	135 Not TEMP
	136 Move W27, TEMP
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X28, W10
	139 Add X8, X8, X28
	140 Move X25, [X8+32]
	141 Compare X25, 0
	142 JumpIfEqual {425}
	143 Move W8, [X25+48]
	144 And W8, W8, W27
	145 Move [X25+48], W8
	146 Move X0, [X26]
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1C17DFC
	151 Move X0, X25
	152 Move X1, X31
	153 Call NetworkBehaviourUtils.GetWordCount, X0
	154 Move X8, [X19+120]
	155 Compare X8, 0
	156 JumpIfEqual {425}
	157 Move X9, [X8+24]
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Add X10, X8, X28
	160 Move X11, [X10+32]
	161 Compare X11, 0
	162 JumpIfEqual {425}
	163 Move [X11+108], W24
	164 Move [X11+112], W0
	165 Move X12, [X19+32]
	166 Add W10, W28, 1
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Add X12, X12, W24
	169 Add W24, W0, W24
	170 Move [X11+80], X12
	171 Move TEMP, X22
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfNotEqual {242}
	175 Move X0, X19
	176 Move X1, X31
	177 Call NetworkObject.Defaults, X0
	178 Move X0, [X20+80]
	179 Compare X0, 0
	180 JumpIfEqual {425}
	181 Move X1, X31
	182 Call Simulation.get_Topology, X0
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move X9, 0x2259000
	185 Move W8, [X19+92]
	186 Move X9, [X9+72]
	187 Add X0, X31, 12
	188 Move W1, W8
	189 ShiftRight W1, 17
	190 And W1, W1, 0x1FFFF
	191 Move X2, [X9]
	192 Call Nullable`1<Boolean>.GetValueOrDefault, X0, X1
	193 Move TEMP, X0
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfNotEqual {216}
	197 Move X0, [X20+80]
	198 Compare X0, 0
	199 JumpIfEqual {425}
	200 Move X1, X31
	201 Call Simulation.get_IsMasterClient, X0
	202 Move X23, [X21+176]
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {426}
	207 Move X8, 0x2252000
	208 Move X8, [X8+3648]
	209 Move X0, [X8]
	210 Move W8, [X0+224]
	211 Compare W8, 0
	212 JumpIfNotEqual {214}
	213 Call 0x1C17DFC
	214 Move X0, X31
	215 Call PlayerRef.get_MasterClient
	216 Move X0, [X20+80]
	217 Move X23, [X21+176]
	218 Compare X0, 0
	219 JumpIfEqual {225}
	220 Move X8, [X0]
	221 Move X9, [X8+616]
	222 Move X1, [X8+624]
	223 NotImplemented "Instruction BLR not yet implemented."
	224 And X0, X0, 0
	225 Compare X23, 0
	226 JumpIfEqual {425}
	227 Move [X23+32], W0
	228 Move X8, [X20+80]
	229 Compare X8, 0
	230 JumpIfEqual {425}
	231 Move X23, [X8+168]
	232 Move X0, X21
	233 Move X1, X31
	234 Call NetworkObjectMeta.get_Id, X0
	235 Compare X23, 0
	236 JumpIfEqual {425}
	237 And X1, X0, 0
	238 Move X0, X23
	239 Move X2, X31
	240 Call StateReplicator.OnObjectSpawnedLocal, X0, X1
	241 Move W23, [X31+24]
	242 And W31, W23, 255
	243 Move X8, 0x225A000
	244 Move X8, [X8+2912]
	245 Add X0, X31, 24
	246 Move X1, [X8]
	247 Call Nullable`1<PlayerRef>.get_Value, X0
	248 And X1, X0, 0
	249 Move X0, X19
	250 Move X2, X31
	251 Call NetworkObject.AssignInputAuthority, X0, X1
	252 Move TEMP, X22
	253 And TEMP, TEMP, 1
	254 Compare TEMP, 1
	255 JumpIfNotEqual {319}
	256 Move W8, [X19+92]
	257 Move W9, 0xA0000
	258 And W9, W8, W9
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Move X8, [X21+176]
	261 Compare X8, 0
	262 JumpIfEqual {425}
	263 Move W9, [X8+24]
	264 Or W9, W9, 16
	265 Move [X8+24], W9
	266 Move W8, [X19+92]
	267 And W9, W8, 0xC0000
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Move TEMP, X8
	270 And TEMP, TEMP, 0x20000
	271 Compare TEMP, 0x20000
	272 JumpIfEqual {279}
	273 Move X8, [X21+176]
	274 Compare X8, 0
	275 JumpIfEqual {425}
	276 Move W9, [X8+24]
	277 Or W9, W9, 2
	278 Move [X8+24], W9
	279 Move W8, [X19+88]
	280 Compare W8, 0
	281 JumpIfNotEqual {295}
	282 Move W8, [X19+99]
	283 Move TEMP, X8
	284 And TEMP, TEMP, 4
	285 Compare TEMP, 4
	286 JumpIfEqual {288}
	287 Move W8, 1
	288 Move X9, [X21+176]
	289 Compare X9, 0
	290 JumpIfEqual {425}
	291 Move W10, [X9+24]
	292 Move W8, W31
	293 Or W10, W10, 256
	294 Move [X9+24], W10
	295 Move W9, [X19+99]
	296 Move TEMP, X9
	297 And TEMP, TEMP, 4
	298 Compare TEMP, 4
	299 JumpIfNotEqual {306}
	300 Move X9, [X21+176]
	301 Compare X9, 0
	302 JumpIfEqual {425}
	303 Move W10, [X9+24]
	304 Or W10, W10, 8
	305 Move [X9+24], W10
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Move X0, [X20+80]
	308 Compare X0, 0
	309 JumpIfEqual {425}
	310 Move X1, X21
	311 Move X2, X31
	312 Call Simulation.AddToGlobalObjectInterest, X0, X1
	313 Move X8, [X21+176]
	314 Compare X8, 0
	315 JumpIfEqual {425}
	316 Move W9, [X8+24]
	317 Or W9, W9, 1
	318 Move [X8+24], W9
	319 Move X22, [X20+80]
	320 Compare X22, 0
	321 JumpIfEqual {425}
	322 Move X21, [X20+96]
	323 Move W24, [X22+219]
	324 Move X0, X22
	325 Move X1, X31
	326 Call Simulation.get_Topology, X0
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Move X0, X22
	329 Move X1, X31
	330 Call Simulation.get_IsServer, X0
	331 Move TEMP, X0
	332 And TEMP, TEMP, 1
	333 Compare TEMP, 1
	334 JumpIfEqual {399}
	335 Move X23, 0x2535000
	336 Move W8, [X23+750]
	337 Compare W8, 0
	338 JumpIfNotEqual {344}
	339 Move X0, 0x2252000
	340 Move X0, [X0+3648]
	341 Call 0x1C17CF4
	342 Move W8, 1
	343 Move [X23+750], W8
	344 Move X8, [X19+32]
	345 Compare X8, 0
	346 JumpIfEqual {422}
	347 Move X8, [X22]
	348 Move X0, X22
	349 Move X9, [X8+616]
	350 Move X1, [X8+624]
	351 NotImplemented "Instruction BLR not yet implemented."
	352 Move X25, 0x2252000
	353 Move X25, [X25+3648]
	354 Move X23, X0
	355 Move X8, [X25]
	356 Move W9, [X8+224]
	357 Compare W9, 0
	358 JumpIfNotEqual {361}
	359 Move X0, X8
	360 Call 0x1C17DFC
	361 NotImplemented "Instruction CMP not yet implemented."
	362 Move X8, [X19+32]
	363 Compare X8, 0
	364 JumpIfEqual {425}
	365 Move X9, [X22]
	366 Move W23, [X8+28]
	367 Move X0, X22
	368 Move X8, [X9+616]
	369 Move X1, [X9+624]
	370 NotImplemented "Instruction BLR not yet implemented."
	371 Move X8, [X25]
	372 Move X22, X0
	373 Move W9, [X8+224]
	374 Compare W9, 0
	375 JumpIfNotEqual {378}
	376 Move X0, X8
	377 Call 0x1C17DFC
	378 NotImplemented "Instruction CMP not yet implemented."
	379 NotImplemented "Instruction CSET not yet implemented."
	380 Compare X21, 0
	381 JumpIfNotEqual {402}
	382 Move X8, [X22]
	383 Move X0, X22
	384 Move X9, [X8+616]
	385 Move X1, [X8+624]
	386 NotImplemented "Instruction BLR not yet implemented."
	387 Move X8, [X19+32]
	388 Compare X8, 0
	389 JumpIfEqual {425}
	390 Move W1, [X8+32]
	391 And X2, X0, 0
	392 Move X0, X22
	393 Move X3, X31
	394 Call 0x1DC08E4
	395 Move TEMP, X0
	396 And TEMP, TEMP, 1
	397 Compare TEMP, 1
	398 JumpIfNotEqual {335}
	399 Move W4, 1
	400 Compare X21, 0
	401 JumpIfEqual {425}
	402 NotImplemented "Instruction CMP not yet implemented."
	403 NotImplemented "Instruction CSET not yet implemented."
	404 Move X0, X21
	405 Move X1, X20
	406 Move X2, X19
	407 Move X5, X31
	408 Call SimulationBehaviourUpdater.AddObject, X0, X1, X2, X3, X4
	409 Move X20, [X31+96]
	410 Move X19, [X31+104]
	411 Move X22, [X31+80]
	412 Move X21, [X31+88]
	413 Move X24, [X31+64]
	414 Move X23, [X31+72]
	415 Move X26, [X31+48]
	416 Move X25, [X31+56]
	417 Move X28, [X31+32]
	418 Move X27, [X31+40]
	419 Move X30, [X31+16]
	420 Add X31, X31, 112
	421 Return 
	422 Move W4, W31
	423 Compare X21, 0
	424 JumpIfNotEqual {402}
	425 Call 0x1C17F20
	426 Move X0, [X20+80]
	427 Compare X0, 0
	428 JumpIfNotEqual {220}
	429 Call 0x1C17F28

Method: System.Void UnityPreInitialize(Fusion.NetworkObjectMeta meta, Fusion.NetworkRunner/AttachOptions options)

Disassembly:
	0x01EA761C MOV X19, X0
	0x01EA7620 ADRP X0, 0x2257000
	0x01EA7624 LDR X0, [X0 + 0xCC0]
	0x01EA7628 BL 0x1C16D08
	0x01EA762C MOV X1, X0
	0x01EA7630 MOV X0, X19
	0x01EA7634 MOV X2, X31
	0x01EA7638 BL 0x337DF1C
	0x01EA763C ADRP X0, 0x2257000
	0x01EA7640 LDR X0, [X0 + 0xCC8]
	0x01EA7644 BL 0x1C16D08
	0x01EA7648 MOV X1, X0
	0x01EA764C MOV X0, X19
	0x01EA7650 BL 0x1C16DEC
	0x01EA7654 ADRP X0, 0x2257000
	0x01EA7658 LDR X0, [X0 + 0xCD0]
	0x01EA765C BL 0x1C16D08
	0x01EA7660 MOV X20, X0
	0x01EA7664 ADRP X0, 0x2257000
	0x01EA7668 LDR X0, [X0 + 0xCD8]
	0x01EA766C BL 0x1C16D08
	0x01EA7670 MOV X2, X0
	0x01EA7674 MOV X0, X20
	0x01EA7678 MOV X1, X19
	0x01EA767C MOV X3, X31
	0x01EA7680 BL 0x32274B8
	0x01EA7684 MOV X19, X0
	0x01EA7688 ADRP X0, 0x2254000
	0x01EA768C LDR X0, [X0 + 0x760]
	0x01EA7690 BL 0x1C16D08
	0x01EA7694 BL 0x1C16F10
	0x01EA7698 MOV X1, X19
	0x01EA769C MOV X2, X31
	0x01EA76A0 MOV X20, X0
	0x01EA76A4 BL 0x3316014
	0x01EA76A8 ADRP X0, 0x2257000
	0x01EA76AC LDR X0, [X0 + 0xCC8]
	0x01EA76B0 BL 0x1C16D08
	0x01EA76B4 MOV X1, X0
	0x01EA76B8 MOV X0, X20
	0x01EA76BC BL 0x1C16DEC
	0x01EA76C0 STR X30, [X31 - 0x20]!
	0x01EA76C4 STP X20, X19, [X31 + 0x10]
	0x01EA76C8 MOV X19, X0
	0x01EA76CC STR W1, [X31 + 0x8]
	0x01EA76D0 ADD X0, X31, 0x8
	0x01EA76D4 MOV X1, X31
	0x01EA76D8 BL 0x1E8FD88
	0x01EA76DC TBZ X0, 0x0, 0x1EA76F8
	0x01EA76E0 LDR X8, [X19 + 0x100]
	0x01EA76E4 CBZ X8, 0x1EA7740
	0x01EA76E8 LDR W0, [X31 + 0x8]
	0x01EA76EC LDP X20, X19, [X31 + 0x10]
	0x01EA76F0 LDR X30, [X31], #0x20
	0x01EA76F4 RET
	0x01EA76F8 ADRP X0, 0x2254000
	0x01EA76FC LDR X0, [X0 + 0x578]
	0x01EA7700 BL 0x1C16D08
	0x01EA7704 BL 0x1C16F10
	0x01EA7708 MOV X19, X0
	0x01EA770C ADRP X0, 0x2257000
	0x01EA7710 LDR X0, [X0 + 0xCE0]
	0x01EA7714 BL 0x1C16D08
	0x01EA7718 MOV X20, X0
	0x01EA771C ADRP X0, 0x2257000
	0x01EA7720 LDR X0, [X0 + 0x4D8]
	0x01EA7724 BL 0x1C16D08
	0x01EA7728 MOV X2, X0
	0x01EA772C MOV X0, X19
	0x01EA7730 MOV X1, X20
	0x01EA7734 MOV X3, X31
	0x01EA7738 BL 0x330E16C
	0x01EA773C B 0x1EA7770
	0x01EA7740 ADRP X0, 0x224C000
	0x01EA7744 LDR X0, [X0 + 0x5B0]
	0x01EA7748 BL 0x1C16D08
	0x01EA774C BL 0x1C16F10
	0x01EA7750 MOV X19, X0
	0x01EA7754 ADRP X0, 0x2257000
	0x01EA7758 LDR X0, [X0 + 0xCC0]
	0x01EA775C BL 0x1C16D08
	0x01EA7760 MOV X1, X0
	0x01EA7764 MOV X0, X19
	0x01EA7768 MOV X2, X31
	0x01EA776C BL 0x337DF1C
	0x01EA7770 ADRP X0, 0x2257000
	0x01EA7774 LDR X0, [X0 + 0xCE8]
	0x01EA7778 BL 0x1C16D08
	0x01EA777C MOV X1, X0
	0x01EA7780 MOV X0, X19
	0x01EA7784 BL 0x1C16DEC
	0x01EA7788 SUB X31, X31, 0x30
	0x01EA778C STP X2, X30, [X31 + 0x8]
	0x01EA7790 STP X20, X19, [X31 + 0x20]
	0x01EA7794 STR X1, [X31]
	0x01EA7798 ADD X0, X31, 0x0
	0x01EA779C MOV X1, X31
	0x01EA77A0 BL 0x1EBB240

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2533000
	009 Move W8, [X21+837]
	010 Move W19, W2
	011 Move X22, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2250000
	018 Move X0, [X0+920]
	019 Call 0x1C17CF4
	020 Move X0, 0x2256000
	021 Move X0, [X0+3712]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+837], W8
	025 Move [X31+8], W31
	026 Compare X22, 0
	027 JumpIfEqual {124}
	028 Move X8, [X20+152]
	029 Compare X8, 0
	030 JumpIfEqual {124}
	031 Move W8, [X8+50]
	032 Move X20, [X22+184]
	033 Compare W8, 0
	034 JumpIfEqual {74}
	035 Compare X20, 0
	036 JumpIfEqual {124}
	037 Move X23, 0x2250000
	038 Move X23, [X23+920]
	039 Move X0, X20
	040 Move X1, X31
	041 Call Component.get_gameObject, X0
	042 Move X21, X0
	043 Move X0, X22
	044 Move X1, X31
	045 Call NetworkObjectMeta.get_Id, X0
	046 Move X8, [X23]
	047 Move [X31+8], W0
	048 Move W9, [X8+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X8
	052 Call 0x1C17DFC
	053 Add X0, X31, 8
	054 Move X1, X31
	055 Call NetworkId.ToNamePrefixString, X0
	056 Move X22, X0
	057 Move X0, X20
	058 Move X1, X31
	059 Call Component.get_gameObject, X0
	060 Compare X0, 0
	061 JumpIfEqual {124}
	062 Move X1, X31
	063 Call Object.get_name, X0
	064 Move X1, X0
	065 Move X0, X22
	066 Move X2, X31
	067 Call String.Concat, X0, X1
	068 Compare X21, 0
	069 JumpIfEqual {124}
	070 Move X1, X0
	071 Move X0, X21
	072 Move X2, X31
	073 Call Object.set_name, X0, X1
	074 Compare X20, 0
	075 JumpIfEqual {124}
	076 Move W0, [X20+96]
	077 Move W1, 1
	078 Move X2, X31
	079 Call NetworkObjectRuntimeFlagsExtensions.CheckFlag, X0, X1
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {103}
	084 Move X0, X20
	085 Move X1, X31
	086 Call Component.get_gameObject, X0
	087 Compare X0, 0
	088 JumpIfEqual {124}
	089 Move X1, X31
	090 Call GameObject.get_activeSelf, X0
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfEqual {116}
	095 Move X0, X20
	096 Move X1, X31
	097 Call Component.get_gameObject, X0
	098 Compare X0, 0
	099 JumpIfEqual {124}
	100 Move W1, 1
	101 Move X2, X31
	102 Call GameObject.SetActive, X0, X1
	103 Move X8, 0x2256000
	104 Move X8, [X8+3712]
	105 Move W21, [X20+96]
	106 Move X0, [X8]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Move W8, W19
	112 ShiftRight W8, 12
	113 And W8, W8, 0
	114 Or W8, W21, W8
	115 Move [X20+96], W8
	116 Move X20, [X31+48]
	117 Move X19, [X31+56]
	118 Move X22, [X31+32]
	119 Move X21, [X31+40]
	120 Move X30, [X31+16]
	121 Move X23, [X31+24]
	122 Add X31, X31, 64
	123 Return 
	124 Call 0x1C17F20

Method: System.Void InitializeNetworkObjectState(Fusion.NetworkObject instance, Fusion.NetworkRunner/AttachOptions options)

Disassembly:
	0x01EA5A60 TBNZ X0, 0x0, 0x1EA5A80
	0x01EA5A64 LDR X8, [X20 + 0x50]
	0x01EA5A68 CBZ X8, 0x1EA5BB0
	0x01EA5A6C LDR X0, [X8 + 0x58]
	0x01EA5A70 CBZ X0, 0x1EA5BB0
	0x01EA5A74 MOV X1, X31
	0x01EA5A78 BL 0x1ED4BCC
	0x01EA5A7C TBZ X0, 0x0, 0x1EA5B90
	0x01EA5A80 LDR X8, [X19 + 0x18]
	0x01EA5A84 CMP W8, 0x1
	0x01EA5A88 B.LT 0x1EA5B90
	0x01EA5A8C ADRP X21, 0x2253000
	0x01EA5A90 LDR X21, [X21 + 0x20]
	0x01EA5A94 MOV X25, X31
	0x01EA5A98 AND X8, X8, 0x0
	0x01EA5A9C ADD X26, X19, 0x20
	0x01EA5AA0 ADRP X27, 0x2533000
	0x01EA5AA4 MOVZ W28, 0x1
	0x01EA5AA8 CMP X25, W8, UXTW
	0x01EA5AAC B.CS 0x1EA5BB4
	0x01EA5AB0 LDR X23, [X20 + 0x50]
	0x01EA5AB4 CBZ X23, 0x1EA5BB0
	0x01EA5AB8 LDR X8, [X23]
	0x01EA5ABC LDR X22, [X26, X25, LSL #3]
	0x01EA5AC0 MOV X0, X23
	0x01EA5AC4 LDR X9, [X8 + 0x268]
	0x01EA5AC8 LDR X1, [X8 + 0x270]
	0x01EA5ACC BLR X9
	0x01EA5AD0 LDRB W8, [X27 + 0xB73]
	0x01EA5AD4 MOV X24, X0
	0x01EA5AD8 CBNZ W8, 0x1EA5AE8
	0x01EA5ADC MOV X0, X21
	0x01EA5AE0 BL 0x1C16CF4
	0x01EA5AE4 STRB W28, [X27 + 0xB73]
	0x01EA5AE8 STR X31, [X31 + 0x18]
	0x01EA5AEC LDR X0, [X23 + 0xB8]
	0x01EA5AF0 CBZ X0, 0x1EA5BB0
	0x01EA5AF4 LDR X3, [X21]
	0x01EA5AF8 AND X1, X24, 0x0
	0x01EA5AFC ADD X2, X31, 0x18
	0x01EA5B00 BL 0x2AE89D0
	0x01EA5B04 LDR X23, [X31 + 0x18]
	0x01EA5B08 MOV W24, W0
	0x01EA5B0C MOV X0, X22
	0x01EA5B10 MOV X1, X31
	0x01EA5B14 BL 0x1E944EC
	0x01EA5B18 CBZ X23, 0x1EA5BB0
	0x01EA5B1C TBZ X24, 0x0, 0x1EA5BB0
	0x01EA5B20 AND X1, X0, 0x0
	0x01EA5B24 MOVZ W2, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2535000
	007 Move W8, [X22+838]
	008 Move W20, W2
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x225A000
	016 Move X0, [X0+2920]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+838], W8
	020 Move TEMP, X20
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {30}
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Return 
	030 Move X20, [X21+176]
	031 Compare X20, 0
	032 JumpIfEqual {62}
	033 Move X10, 0x225A000
	034 Move X8, [X20]
	035 Move X10, [X10+2920]
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Move X1, [X10]
	038 Compare X9, 0
	039 JumpIfEqual {46}
	040 Move X10, [X8+176]
	041 Add X10, X10, 8
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Subtract X9, X9, 1
	045 Add X10, X10, 16
	046 Move X0, X20
	047 Move W2, W31
	048 Call 0x1C5D788
	049 NotImplemented "Instruction LDRSW not yet implemented."
	050 Add X8, X8, X9
	051 Add X0, X8, 312
	052 Move X3, [X0]
	053 Move X2, [X0+8]
	054 Move X0, X20
	055 Move X1, X19
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 CallNoReturn X3
	062 Call 0x1C17F20

Method: System.Void InvokeBeforeSpawnedCallbacks(Fusion.NetworkObject instance, Fusion.NetworkRunner/AttachOptions options, Fusion.NetworkRunner/OnBeforeSpawned onBeforeSpawned)

Disassembly:
	0x01EA5B28 MOV X0, X23
	0x01EA5B2C MOV W3, W31
	0x01EA5B30 MOV X4, X31
	0x01EA5B34 BL 0x1ED0A18
	0x01EA5B38 LDR W8, [X19 + 0x18]
	0x01EA5B3C ADD X25, X25, 0x1
	0x01EA5B40 CMP X25, W8, SXTW
	0x01EA5B44 B.LT 0x1EA5AA8
	0x01EA5B48 B 0x1EA5B90
	0x01EA5B4C B.LT 0x1EA5B90
	0x01EA5B50 MOV X20, X31
	0x01EA5B54 ADD X21, X19, 0x20
	0x01EA5B58 CMP W20, W8
	0x01EA5B5C B.CS 0x1EA5BB4
	0x01EA5B60 LDR X0, [X21, X20, LSL #3]
	0x01EA5B64 CBZ X0, 0x1EA5BB0
	0x01EA5B68 MOV X1, X31
	0x01EA5B6C BL 0x3C32ECC
	0x01EA5B70 CBZ X0, 0x1EA5BB0
	0x01EA5B74 MOV W1, W31
	0x01EA5B78 MOV X2, X31
	0x01EA5B7C BL 0x3C357B4
	0x01EA5B80 LDR W8, [X19 + 0x18]
	0x01EA5B84 ADD X20, X20, 0x1
	0x01EA5B88 CMP W20, W8
	0x01EA5B8C B.LT 0x1EA5B58
	0x01EA5B90 LDP X20, X19, [X31 + 0x70]
	0x01EA5B94 LDP X22, X21, [X31 + 0x60]
	0x01EA5B98 LDP X24, X23, [X31 + 0x50]
	0x01EA5B9C LDP X26, X25, [X31 + 0x40]
	0x01EA5BA0 LDP X28, X27, [X31 + 0x30]
	0x01EA5BA4 LDP X29, X30, [X31 + 0x20]
	0x01EA5BA8 ADD X31, X31, 0x80
	0x01EA5BAC RET
	0x01EA5BB0 BL 0x1C16F20
	0x01EA5BB4 BL 0x1C16F28
	0x01EA5BB8 STR W26, [X31 + 0x18]
	0x01EA5BBC ADRP X0, 0x224E000
	0x01EA5BC0 LDR X0, [X0 + 0x758]
	0x01EA5BC4 BL 0x1C16D08
	0x01EA5BC8 ADD X1, X31, 0x18
	0x01EA5BCC BL 0x1C16E04
	0x01EA5BD0 MOV X19, X0
	0x01EA5BD4 ADRP X0, 0x2259000
	0x01EA5BD8 LDR X0, [X0 + 0xBC0]
	0x01EA5BDC B 0x1EA5C04
	0x01EA5BE0 STR W26, [X31 + 0x18]
	0x01EA5BE4 ADRP X0, 0x224E000
	0x01EA5BE8 LDR X0, [X0 + 0x758]
	0x01EA5BEC BL 0x1C16D08
	0x01EA5BF0 ADD X1, X31, 0x18
	0x01EA5BF4 BL 0x1C16E04
	0x01EA5BF8 MOV X19, X0
	0x01EA5BFC ADRP X0, 0x2259000
	0x01EA5C00 LDR X0, [X0 + 0xBC8]
	0x01EA5C04 BL 0x1C16D08
	0x01EA5C08 MOV X1, X19
	0x01EA5C0C MOV X2, X31
	0x01EA5C10 BL 0x321EFD0
	0x01EA5C14 MOV X19, X0
	0x01EA5C18 ADRP X0, 0x2256000
	0x01EA5C1C LDR X0, [X0 + 0x578]
	0x01EA5C20 BL 0x1C16D08
	0x01EA5C24 BL 0x1C16F10
	0x01EA5C28 MOV X20, X0
	0x01EA5C2C ADRP X0, 0x2259000
	0x01EA5C30 LDR X0, [X0 + 0xBD0]
	0x01EA5C34 BL 0x1C16D08
	0x01EA5C38 MOV X2, X0
	0x01EA5C3C MOV X0, X20
	0x01EA5C40 MOV X1, X19
	0x01EA5C44 MOV X3, X31
	0x01EA5C48 BL 0x330E16C
	0x01EA5C4C ADRP X0, 0x2259000
	0x01EA5C50 LDR X0, [X0 + 0xBD8]
	0x01EA5C54 BL 0x1C16D08
	0x01EA5C58 MOV X1, X0
	0x01EA5C5C MOV X0, X20
	0x01EA5C60 BL 0x1C16DEC
	0x01EA5C64 ADRP X0, 0x2253000
	0x01EA5C68 LDR X0, [X0 + 0x528]
	0x01EA5C6C BL 0x1C16D08
	0x01EA5C70 BL 0x1C16F10
	0x01EA5C74 MOV X19, X0
	0x01EA5C78 ADRP X0, 0x2259000
	0x01EA5C7C LDR X0, [X0 + 0xBD0]
	0x01EA5C80 BL 0x1C16D08
	0x01EA5C84 MOV X1, X0
	0x01EA5C88 MOV X0, X19
	0x01EA5C8C MOV X2, X31
	0x01EA5C90 BL 0x330E100
	0x01EA5C94 ADRP X0, 0x2259000
	0x01EA5C98 LDR X0, [X0 + 0xBD8]
	0x01EA5C9C BL 0x1C16D08
	0x01EA5CA0 MOV X1, X0
	0x01EA5CA4 MOV X0, X19
	0x01EA5CA8 BL 0x1C16DEC
	0x01EA5CAC STP X30, X21, [X31 - 0x20]!
	0x01EA5CB0 STP X20, X19, [X31 + 0x10]
	0x01EA5CB4 ADRP X21, 0x2534000
	0x01EA5CB8 LDRB W8, [X21 + 0x33F]
	0x01EA5CBC MOV X19, X1
	0x01EA5CC0 MOV X20, X0
	0x01EA5CC4 TBNZ X8, 0x0, 0x1EA5CDC
	0x01EA5CC8 ADRP X0, 0x2257000
	0x01EA5CCC LDR X0, [X0 + 0xE80]
	0x01EA5CD0 BL 0x1C16CF4
	0x01EA5CD4 MOVZ W8, 0x1
	0x01EA5CD8 STRB W8, [X21 + 0x33F]
	0x01EA5CDC CBZ X19, 0x1EA5D3C
	0x01EA5CE0 ADRP X8, 0x2257000
	0x01EA5CE4 LDR X8, [X8 + 0xE80]
	0x01EA5CE8 LDR W21, [X19 + 0x60]
	0x01EA5CEC LDR X0, [X8]
	0x01EA5CF0 LDR W8, [X0 + 0xE0]
	0x01EA5CF4 CBNZ W8, 0x1EA5CFC
	0x01EA5CF8 BL 0x1C16DFC
	0x01EA5CFC UBFM W21, W21, 0x14, 0x14
	0x01EA5D00 MOV X0, X20
	0x01EA5D04 MOV X1, X19
	0x01EA5D08 MOV W2, W21
	0x01EA5D0C BL 0x1EA4A60
	0x01EA5D10 MOV X0, X20
	0x01EA5D14 MOV X1, X19
	0x01EA5D18 MOV W2, W21
	0x01EA5D1C MOV X3, X31
	0x01EA5D20 BL 0x1EA4B28
	0x01EA5D24 MOV X1, X19
	0x01EA5D28 BL 0x1EA4DB8
	0x01EA5D2C MOV X1, X19
	0x01EA5D30 LDP X20, X19, [X31 + 0x10]
	0x01EA5D34 LDP X30, X21, [X31], #0x20
	0x01EA5D38 B 0x1EA4E54
	0x01EA5D3C BL 0x1C16F20
	0x01EA5D40 UBFM W0, W0, 0x14, 0x14
	0x01EA5D44 RET
	0x01EA5D48 SUB X31, X31, 0xB0
	0x01EA5D4C STP X29, X30, [X31 + 0x50]
	0x01EA5D50 STP X28, X27, [X31 + 0x60]
	0x01EA5D54 STP X26, X25, [X31 + 0x70]
	0x01EA5D58 STP X24, X23, [X31 + 0x80]
	0x01EA5D5C STP X22, X21, [X31 + 0x90]
	0x01EA5D60 STP X20, X19, [X31 + 0xA0]
	0x01EA5D64 ADRP X21, 0x2534000
	0x01EA5D68 LDRB W8, [X21 + 0x340]
	0x01EA5D6C MOV X22, X3
	0x01EA5D70 MOV X20, X2
	0x01EA5D74 MOV X19, X0
	0x01EA5D78 STR W1, [X31 + 0x48]
	0x01EA5D7C TBNZ X8, 0x0, 0x1EA5E0C
	0x01EA5D80 ADRP X0, 0x2259000
	0x01EA5D84 LDR X0, [X0 + 0xBE0]
	0x01EA5D88 BL 0x1C16CF4
	0x01EA5D8C ADRP X0, 0x2259000
	0x01EA5D90 LDR X0, [X0 + 0xBE8]
	0x01EA5D94 BL 0x1C16CF4
	0x01EA5D98 ADRP X0, 0x2259000
	0x01EA5D9C LDR X0, [X0 + 0xBF0]
	0x01EA5DA0 BL 0x1C16CF4
	0x01EA5DA4 ADRP X0, 0x2259000
	0x01EA5DA8 LDR X0, [X0 + 0xBF8]
	0x01EA5DAC BL 0x1C16CF4
	0x01EA5DB0 ADRP X0, 0x2259000
	0x01EA5DB4 LDR X0, [X0 + 0xC00]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x2535000
	009 Move W8, [X23+839]
	010 Move X21, X3
	011 Move W22, W2
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x225A000
	019 Move X0, [X0+2928]
	020 Call 0x1C17CF4
	021 Move X0, 0x225A000
	022 Move X0, [X0+2936]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+839], W8
	026 Move TEMP, X22
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {73}
	030 Compare X20, 0
	031 JumpIfEqual {116}
	032 Move X8, [X20+120]
	033 Compare X8, 0
	034 JumpIfEqual {116}
	035 Move X24, 0x225A000
	036 Move X24, [X24+2936]
	037 Move X23, X31
	038 Move W9, [X8+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Add X8, X8, X23
	042 Move X0, [X8+32]
	043 Move X1, [X24]
	044 Call 0x1C17E00
	045 Compare X0, 0
	046 JumpIfEqual {69}
	047 Move X8, [X0]
	048 Move X1, [X24]
	049 Move X22, X0
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 Compare X9, 0
	052 JumpIfEqual {59}
	053 Move X10, [X8+176]
	054 Add X10, X10, 8
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Subtract X9, X9, 1
	058 Add X10, X10, 16
	059 Move X0, X22
	060 Move W2, W31
	061 Call 0x1C5D788
	062 NotImplemented "Instruction LDRSW not yet implemented."
	063 Add X8, X8, X9
	064 Add X0, X8, 312
	065 Move X8, [X0]
	066 Move X1, [X0+8]
	067 Move X0, X22
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X8, [X20+120]
	070 Add X23, X23, 1
	071 Compare X8, 0
	072 JumpIfNotEqual {38}
	073 Compare X20, 0
	074 JumpIfEqual {116}
	075 Move X8, [X20+120]
	076 Compare X8, 0
	077 JumpIfEqual {116}
	078 Move X24, 0x225A000
	079 Move X24, [X24+2928]
	080 Move X23, X31
	081 Move W9, [X8+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Add X8, X8, X23
	085 Move X0, [X8+32]
	086 Move X1, [X24]
	087 Call 0x1C17E00
	088 Compare X0, 0
	089 JumpIfEqual {112}
	090 Move X8, [X0]
	091 Move X1, [X24]
	092 Move X22, X0
	093 NotImplemented "Instruction LDRH not yet implemented."
	094 Compare X9, 0
	095 JumpIfEqual {102}
	096 Move X10, [X8+176]
	097 Add X10, X10, 8
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Subtract X9, X9, 1
	101 Add X10, X10, 16
	102 Move X0, X22
	103 Move W2, W31
	104 Call 0x1C5D788
	105 NotImplemented "Instruction LDRSW not yet implemented."
	106 Add X8, X8, X9
	107 Add X0, X8, 312
	108 Move X8, [X0]
	109 Move X1, [X0+8]
	110 Move X0, X22
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Move X8, [X20+120]
	113 Add X23, X23, 1
	114 Compare X8, 0
	115 JumpIfNotEqual {81}
	116 Call 0x1C17F20
	117 Compare X21, 0
	118 JumpIfEqual {125}
	119 Move X0, [X21+64]
	120 Move X8, [X21+24]
	121 Move X3, [X21+40]
	122 Move X1, X19
	123 Move X2, X20
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move X20, [X31+48]
	126 Move X19, [X31+56]
	127 Move X22, [X31+32]
	128 Move X21, [X31+40]
	129 Move X24, [X31+16]
	130 Move X23, [X31+24]
	131 Move X30, [X31+64]
	132 Return 
	133 Call 0x1C17F28
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X20, X0
	136 Move X0, X20
	137 Call 0x3EB2AD0
	138 Move X20, X0
	139 Move X0, 0x224F000
	140 Move X0, [X0+2000]
	141 Call 0x1C17D08
	142 Move X8, [X20]
	143 Move X1, [X8]
	144 Call 0x1C18270
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfNotEqual {173}
	149 Move X20, [X20]
	150 Call 0x3EB2AE0
	151 Move X0, 0x2257000
	152 Move X0, [X0+2224]
	153 Call 0x1C17D08
	154 Move W8, [X0+224]
	155 Compare W8, 0
	156 JumpIfNotEqual {158}
	157 Call 0x1C17DFC
	158 Move X0, 0x225A000
	159 Move X0, [X0+2152]
	160 Call 0x1C17D08
	161 Move X2, X0
	162 Move X0, X19
	163 Move X1, X20
	164 Move X20, [X31+48]
	165 Move X19, [X31+56]
	166 Move X22, [X31+32]
	167 Move X21, [X31+40]
	168 Move X24, [X31+16]
	169 Move X23, [X31+24]
	170 Move X30, [X31+64]
	171 Call 0x2214878, X0, X1
	172 Return 
	173 Move W0, 8
	174 Call 0x3EB2AF0
	175 Move X8, [X20]
	176 Move [X0], X8
	177 Move X1, 0x2010000
	178 Add X1, X1, 3672
	179 Move X2, X31
	180 Call 0x3EB2B00
	181 Move X20, X0
	182 Call 0x3EB2AE0
	183 Move X0, X20
	184 Call 0x1D2D690
	185 Call 0x1991590

Method: System.Void InvokeSpawnedCallback(Fusion.NetworkObject instance)

Disassembly:
	0x01EA5DB8 BL 0x1C16CF4
	0x01EA5DBC ADRP X0, 0x2259000
	0x01EA5DC0 LDR X0, [X0 + 0xC08]
	0x01EA5DC4 BL 0x1C16CF4
	0x01EA5DC8 ADRP X0, 0x2259000
	0x01EA5DCC LDR X0, [X0 + 0x378]
	0x01EA5DD0 BL 0x1C16CF4
	0x01EA5DD4 ADRP X0, 0x2257000
	0x01EA5DD8 LDR X0, [X0 + 0xE80]
	0x01EA5DDC BL 0x1C16CF4
	0x01EA5DE0 ADRP X0, 0x2259000
	0x01EA5DE4 LDR X0, [X0 + 0xC10]
	0x01EA5DE8 BL 0x1C16CF4
	0x01EA5DEC ADRP X0, 0x2259000
	0x01EA5DF0 LDR X0, [X0 + 0xC18]
	0x01EA5DF4 BL 0x1C16CF4
	0x01EA5DF8 ADRP X0, 0x2259000
	0x01EA5DFC LDR X0, [X0 + 0x898]
	0x01EA5E00 BL 0x1C16CF4
	0x01EA5E04 MOVZ W8, 0x1
	0x01EA5E08 STRB W8, [X21 + 0x340]
	0x01EA5E0C ADD X0, X31, 0x48
	0x01EA5E10 MOV X1, X31
	0x01EA5E14 STP X31, X31, [X31 + 0x30]
	0x01EA5E18 STR X31, [X31 + 0x40]
	0x01EA5E1C STP X31, X31, [X31 + 0x20]
	0x01EA5E20 BL 0x1E8FD88
	0x01EA5E24 TBZ X0, 0x0, 0x1EA617C
	0x01EA5E28 CBZ X20, 0x1EA61B0
	0x01EA5E2C ADRP X24, 0x2259000
	0x01EA5E30 LDR X24, [X24 + 0x898]
	0x01EA5E34 LDR X0, [X24]
	0x01EA5E38 LDR W8, [X0 + 0xE0]
	0x01EA5E3C CBNZ W8, 0x1EA5E48
	0x01EA5E40 BL 0x1C16DFC
	0x01EA5E44 LDR X0, [X24]
	0x01EA5E48 LDR X8, [X0 + 0xB8]
	0x01EA5E4C ADRP X26, 0x2259000
	0x01EA5E50 ADRP X25, 0x2259000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {40}
	007 Move W9, [X1+96]
	008 Move X8, [X1+120]
	009 Move X19, X1
	010 Or W9, W9, 0x800000
	011 Move [X1+96], W9
	012 Compare X8, 0
	013 JumpIfEqual {40}
	014 Move W20, 4
	015 Move W9, [X8+24]
	016 Subtract X21, X20, 4
	017 NotImplemented "Instruction CMP not yet implemented."
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X0, [X8]
	020 Compare X0, 0
	021 JumpIfEqual {40}
	022 Move X1, X31
	023 Call NetworkBehaviour.PreSpawned, X0
	024 Move X8, [X19+120]
	025 Compare X8, 0
	026 JumpIfEqual {40}
	027 Move W9, [X8+24]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X0, [X8]
	030 Compare X0, 0
	031 JumpIfEqual {40}
	032 Move X8, [X0]
	033 Move X9, [X8+536]
	034 Move X1, [X8+544]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move X8, [X19+120]
	037 Add X20, X20, 1
	038 Compare X8, 0
	039 JumpIfNotEqual {15}
	040 Call 0x1C17F20
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return 
	046 Call 0x1C17F28

Method: System.Void InvokeDespawnedCallback(Fusion.NetworkObject instance, System.Boolean hasState)

Disassembly:
	0x01EA4D68 MOV X0, X19
	0x01EA4D6C MOV X1, X20
	0x01EA4D70 LDP X20, X19, [X31 + 0x30]
	0x01EA4D74 LDP X22, X21, [X31 + 0x20]
	0x01EA4D78 LDP X24, X23, [X31 + 0x10]
	0x01EA4D7C LDR X30, [X31], #0x40
	0x01EA4D80 B 0x2213878
	0x01EA4D84 MOVZ W0, 0x8
	0x01EA4D88 BL 0x3EB1AF0
	0x01EA4D8C LDR X8, [X20]
	0x01EA4D90 STR X8, [X0]
	0x01EA4D94 ADRP X1, 0x2010000
	0x01EA4D98 ADD X1, X1, 0xE58
	0x01EA4D9C MOV X2, X31
	0x01EA4DA0 BL 0x3EB1B00
	0x01EA4DA4 MOV X20, X0
	0x01EA4DA8 BL 0x3EB1AE0
	0x01EA4DAC MOV X0, X20
	0x01EA4DB0 BL 0x1D2C690
	0x01EA4DB4 BL 0x1990590
	0x01EA4DB8 STP X30, X21, [X31 - 0x20]!
	0x01EA4DBC STP X20, X19, [X31 + 0x10]
	0x01EA4DC0 CBZ X1, 0x1EA4E40
	0x01EA4DC4 LDR W9, [X1 + 0x60]
	0x01EA4DC8 LDR X8, [X1 + 0x78]
	0x01EA4DCC MOV X19, X1
	0x01EA4DD0 ORR W9, W9, 0x800000
	0x01EA4DD4 STR W9, [X1 + 0x60]
	0x01EA4DD8 CBZ X8, 0x1EA4E40
	0x01EA4DDC MOVZ W20, 0x4
	0x01EA4DE0 LDR W9, [X8 + 0x18]
	0x01EA4DE4 SUB X21, X20, 0x4
	0x01EA4DE8 CMP W21, W9
	0x01EA4DEC B.GE 0x1EA4E44
	0x01EA4DF0 CMP W21, W9
	0x01EA4DF4 B.CS 0x1EA4E50

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {35}
	008 Move W9, [X1+96]
	009 Move X8, [X1+120]
	010 Move X19, X1
	011 And W9, W9, 0xFF7FFFFF
	012 Move [X1+96], W9
	013 Compare X8, 0
	014 JumpIfEqual {35}
	015 Move X20, X0
	016 Move X22, X31
	017 And W21, W2, 1
	018 Move W9, [X8+24]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Add X8, X8, X22
	022 Move X0, [X8+32]
	023 Compare X0, 0
	024 JumpIfEqual {35}
	025 Move X8, [X0]
	026 Move X1, X20
	027 Move W2, W21
	028 Move X9, [X8+552]
	029 Move X3, [X8+560]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X8, [X19+120]
	032 Add X22, X22, 1
	033 Compare X8, 0
	034 JumpIfNotEqual {18}
	035 Call 0x1C17F20
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Return 
	042 Call 0x1C17F28

Method: System.Void InvokeAfterSpawnedCallback(Fusion.NetworkObject instance)

Disassembly:
	0x01EA5E54 LDR X21, [X8 + 0x8]
	0x01EA5E58 LDR X26, [X26 + 0xBE8]
	0x01EA5E5C LDR X25, [X25 + 0xBE0]
	0x01EA5E60 CBNZ X21, 0x1EA5EB4
	0x01EA5E64 LDR W8, [X0 + 0xE0]
	0x01EA5E68 CBNZ W8, 0x1EA5E74
	0x01EA5E6C BL 0x1C16DFC
	0x01EA5E70 LDR X0, [X24]
	0x01EA5E74 ADRP X9, 0x2259000
	0x01EA5E78 LDR X8, [X0 + 0xB8]
	0x01EA5E7C LDR X9, [X9 + 0xC08]
	0x01EA5E80 LDR X23, [X8]
	0x01EA5E84 LDR X0, [X9]
	0x01EA5E88 BL 0x1C16F10
	0x01EA5E8C ADRP X8, 0x2259000
	0x01EA5E90 LDR X8, [X8 + 0xC18]
	0x01EA5E94 MOV X1, X23
	0x01EA5E98 MOV X3, X31
	0x01EA5E9C MOV X21, X0
	0x01EA5EA0 LDR X2, [X8]
	0x01EA5EA4 BL 0x2D2F428
	0x01EA5EA8 LDR X8, [X24]
	0x01EA5EAC LDR X8, [X8 + 0xB8]
	0x01EA5EB0 STR X21, [X8 + 0x8]
	0x01EA5EB4 LDR X2, [X26]
	0x01EA5EB8 MOV X0, X20
	0x01EA5EBC MOV X1, X21
	0x01EA5EC0 BL 0x21DA490
	0x01EA5EC4 LDR X1, [X25]
	0x01EA5EC8 BL 0x21D577C
	0x01EA5ECC CBZ X0, 0x1EA6168
	0x01EA5ED0 LDR W8, [X0 + 0x18]
	0x01EA5ED4 ADRP X26, 0x2259000
	0x01EA5ED8 LDR X26, [X26 + 0x378]
	0x01EA5EDC MOV X20, X0
	0x01EA5EE0 CMP W8, 0x1
	0x01EA5EE4 MOV W21, W31
	0x01EA5EE8 B.LT 0x1EA5F40
	0x01EA5EEC AND X23, X22, 0xFF
	0x01EA5EF0 CMP W21, W8
	0x01EA5EF4 B.CS 0x1EA616C
	0x01EA5EF8 LDR X0, [X26]
	0x01EA5EFC ADD X8, X20, W21, 0x3, SXTW
	0x01EA5F00 LDR X25, [X8 + 0x20]
	0x01EA5F04 LDR W24, [X31 + 0x48]
	0x01EA5F08 LDR W8, [X0 + 0xE0]
	0x01EA5F0C CBNZ W8, 0x1EA5F14
	0x01EA5F10 BL 0x1C16DFC
	0x01EA5F14 MOV X0, X24
	0x01EA5F18 MOV W1, W21
	0x01EA5F1C MOV X2, X23
	0x01EA5F20 MOV X3, X31
	0x01EA5F24 BL 0x1E98F18
	0x01EA5F28 CBZ X25, 0x1EA6168
	0x01EA5F2C STUR X0, [X25 + 0x64]
	0x01EA5F30 LDR W8, [X20 + 0x18]
	0x01EA5F34 ADD W21, W21, 0x1
	0x01EA5F38 CMP W21, W8
	0x01EA5F3C B.LT 0x1EA5EF0
	0x01EA5F40 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2535000
	007 Move W8, [X20+840]
	008 Move X19, X1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x225A000
	014 Move X0, [X0+2944]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+840], W8
	018 Compare X19, 0
	019 JumpIfEqual {61}
	020 Move X8, [X19+120]
	021 Compare X8, 0
	022 JumpIfEqual {61}
	023 Move X22, 0x225A000
	024 Move X22, [X22+2944]
	025 Move X21, X31
	026 Move W9, [X8+24]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Add X8, X8, X21
	030 Move X0, [X8+32]
	031 Move X1, [X22]
	032 Call 0x1C17E00
	033 Compare X0, 0
	034 JumpIfEqual {57}
	035 Move X8, [X0]
	036 Move X1, [X22]
	037 Move X20, X0
	038 NotImplemented "Instruction LDRH not yet implemented."
	039 Compare X9, 0
	040 JumpIfEqual {47}
	041 Move X10, [X8+176]
	042 Add X10, X10, 8
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Subtract X9, X9, 1
	046 Add X10, X10, 16
	047 Move X0, X20
	048 Move W2, W31
	049 Call 0x1C5D788
	050 NotImplemented "Instruction LDRSW not yet implemented."
	051 Add X8, X8, X9
	052 Add X0, X8, 312
	053 Move X8, [X0]
	054 Move X1, [X0+8]
	055 Move X0, X20
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X8, [X19+120]
	058 Add X21, X21, 1
	059 Compare X8, 0
	060 JumpIfNotEqual {26}
	061 Call 0x1C17F20
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Return 
	068 Call 0x1C17F28

Method: System.Void InvokeObjectAcquired(Fusion.NetworkObject instance)

Disassembly:
	0x01EA5120 MOV V0.16B, V11.16B
	0x01EA5124 MOV V1.16B, V10.16B
	0x01EA5128 MOV V2.16B, V8.16B
	0x01EA512C MOV V3.16B, V9.16B
	0x01EA5130 MOV X0, X19
	0x01EA5134 MOV X1, X31
	0x01EA5138 BL 0x1ECAE9C
	0x01EA513C LDP X20, X19, [X31 + 0x40]
	0x01EA5140 LDP X30, X21, [X31 + 0x30]
	0x01EA5144 LDP D9, D8, [X31 + 0x20]

ISIL:
	001 Move X9, [X0+56]
	002 Compare X9, 0
	003 JumpIfEqual {11}
	004 Move X8, X0
	005 Move X4, [X9+24]
	006 Move X0, [X9+64]
	007 Move X3, [X9+40]
	008 Move X2, X1
	009 Move X1, X8
	010 CallNoReturn X4
	011 Return 

Method: System.Void InvokeBeforeUpdate()

Disassembly:
	0x01EA3A30 B 0x1EA3A38
	0x01EA3A34 MOV X1, X31
	0x01EA3A38 ADRP X24, 0x225B000

ISIL:
	001 Move X0, [X0+96]
	002 Move X1, X31
	003 Call CallbackInterfaceInvoker.IBeforeUpdate, X0
	004 Return 

Method: System.Void InvokeAfterUpdate()

Disassembly:
	0x01EA3BAC AND X25, X0, 0x0
	0x01EA3BB0 MOV X0, X21
	0x01EA3BB4 MOV X1, X25

ISIL:
	001 Move X0, [X0+96]
	002 Move X1, X31
	003 Call CallbackInterfaceInvoker.IAfterUpdate, X0
	004 Return 

Method: System.Void InitFusionLogSystem()

Disassembly:
	0x01EA2174 MOVZ W8, 0x1
	0x01EA2178 STRB W8, [X21 + 0x327]
	0x01EA217C LDR X8, [X20 + 0x68]
	0x01EA2180 CBNZ X8, 0x1EA21AC
	0x01EA2184 ADRP X8, 0x225C000
	0x01EA2188 LDR X8, [X8 + 0x930]
	0x01EA218C LDR X0, [X8]
	0x01EA2190 BL 0x1C16F10
	0x01EA2194 ADRP X8, 0x225C000
	0x01EA2198 LDR X8, [X8 + 0x928]
	0x01EA219C MOV X21, X0
	0x01EA21A0 LDR X1, [X8]
	0x01EA21A4 BL 0x301B7C4
	0x01EA21A8 STR X21, [X20 + 0x68]
	0x01EA21AC CBZ X19, 0x1EA2278
	0x01EA21B0 LDR X8, [X19 + 0x18]
	0x01EA21B4 CMP W8, 0x1
	0x01EA21B8 B.LT 0x1EA2264
	0x01EA21BC ADRP X23, 0x225C000
	0x01EA21C0 ADRP X24, 0x225C000
	0x01EA21C4 LDR X23, [X23 + 0xA70]
	0x01EA21C8 LDR X24, [X24 + 0xA68]
	0x01EA21CC MOV X22, X31
	0x01EA21D0 AND X8, X8, 0x0
	0x01EA21D4 ADD X25, X19, 0x20
	0x01EA21D8 CMP X22, W8, UXTW
	0x01EA21DC B.CS 0x1EA227C
	0x01EA21E0 LDR X0, [X20 + 0x68]
	0x01EA21E4 CBZ X0, 0x1EA2278
	0x01EA21E8 LDR X21, [X25, X22, LSL #3]
	0x01EA21EC LDR X2, [X23]
	0x01EA21F0 MOV X1, X21
	0x01EA21F4 BL 0x301C318
	0x01EA21F8 TBNZ X0, 0x0, 0x1EA2254
	0x01EA21FC LDR X0, [X20 + 0x68]
	0x01EA2200 CBZ X0, 0x1EA2278
	0x01EA2204 LDR W10, [X0 + 0x1C]
	0x01EA2208 LDR X8, [X0 + 0x10]
	0x01EA220C LDR X9, [X24]
	0x01EA2210 ADD W10, W10, 0x1
	0x01EA2214 STR W10, [X0 + 0x1C]
	0x01EA2218 CBZ X8, 0x1EA2278
	0x01EA221C LDRSW X10, [X0 + 0x18]
	0x01EA2220 LDR W11, [X8 + 0x18]
	0x01EA2224 CMP W10, W11
	0x01EA2228 B.CS 0x1EA2240
	0x01EA222C ADD W9, W10, 0x1
	0x01EA2230 ADD X8, X8, X10, 0x3, LSL
	0x01EA2234 STR W9, [X0 + 0x18]
	0x01EA2238 STR X21, [X8 + 0x20]
	0x01EA223C B 0x1EA2254
	0x01EA2240 LDR X8, [X9 + 0x20]
	0x01EA2244 MOV X1, X21
	0x01EA2248 LDR X8, [X8 + 0xC0]
	0x01EA224C LDR X2, [X8 + 0x70]
	0x01EA2250 BL 0x301BF90
	0x01EA2254 LDR W8, [X19 + 0x18]
	0x01EA2258 ADD X22, X22, 0x1
	0x01EA225C CMP X22, W8, SXTW

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x2538000
	006 Move X20, 0x225A000
	007 Move W8, [X19+841]
	008 Move X20, [X20+2224]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x2252000
	014 Move X0, [X0+2600]
	015 Call 0x1C17CF4
	016 Move X0, 0x225D000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move X0, 0x225A000
	020 Move X0, [X0+2224]
	021 Call 0x1C17CF4
	022 Move X0, 0x225D000
	023 Move X0, [X0+2552]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+841], W8
	027 Move X0, [X20]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X31
	033 Call Log.get_Initialized
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {43}
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return 
	043 Move X8, 0x2252000
	044 Move X8, [X8+2600]
	045 Move X21, 0x225D000
	046 Move X19, 0x225D000
	047 Move X0, [X8]
	048 Move W8, [X0+224]
	049 Move X21, [X21+2552]
	050 Move X19, [X19+2544]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, [X21]
	055 Move X1, X31
	056 Call Debug.LogWarning, X0
	057 Move X0, [X19]
	058 Call 0x1C17F10
	059 Move X1, X31
	060 Move X19, X0
	061 Call LogSimpleUnity..ctor, X0
	062 Move X0, [X20]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X19
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move W1, 3
	071 Move X2, X31
	072 Move X30, [X31+32]
	073 Move X21, [X31+40]
	074 Call Log.Init, X0, X1
	075 Return 

Method: Fusion.NetworkProjectConfig SetupNetworkProjectConfig(Fusion.NetworkRunnerInitializeArgs args)

Disassembly:
	0x01EA2260 B.LT 0x1EA21D8
	0x01EA2264 LDP X20, X19, [X31 + 0x30]
	0x01EA2268 LDP X22, X21, [X31 + 0x20]
	0x01EA226C LDP X24, X23, [X31 + 0x10]
	0x01EA2270 LDP X30, X25, [X31], #0x40
	0x01EA2274 RET
	0x01EA2278 BL 0x1C16F20
	0x01EA227C BL 0x1C16F28
	0x01EA2280 STP X30, X25, [X31 - 0x40]!
	0x01EA2284 STP X24, X23, [X31 + 0x10]
	0x01EA2288 STP X22, X21, [X31 + 0x20]
	0x01EA228C STP X20, X19, [X31 + 0x30]
	0x01EA2290 ADRP X21, 0x2537000
	0x01EA2294 LDRB W8, [X21 + 0x328]
	0x01EA2298 MOV X19, X1
	0x01EA229C MOV X20, X0
	0x01EA22A0 TBNZ X8, 0x0, 0x1EA22DC
	0x01EA22A4 ADRP X0, 0x225C000
	0x01EA22A8 LDR X0, [X0 + 0xA70]
	0x01EA22AC BL 0x1C16CF4
	0x01EA22B0 ADRP X0, 0x225C000
	0x01EA22B4 LDR X0, [X0 + 0xA78]
	0x01EA22B8 BL 0x1C16CF4
	0x01EA22BC ADRP X0, 0x225C000
	0x01EA22C0 LDR X0, [X0 + 0x928]
	0x01EA22C4 BL 0x1C16CF4
	0x01EA22C8 ADRP X0, 0x225C000
	0x01EA22CC LDR X0, [X0 + 0x930]
	0x01EA22D0 BL 0x1C16CF4
	0x01EA22D4 MOVZ W8, 0x1
	0x01EA22D8 STRB W8, [X21 + 0x328]
	0x01EA22DC LDR X8, [X20 + 0x68]
	0x01EA22E0 CBNZ X8, 0x1EA230C
	0x01EA22E4 ADRP X8, 0x225C000
	0x01EA22E8 LDR X8, [X8 + 0x930]
	0x01EA22EC LDR X0, [X8]
	0x01EA22F0 BL 0x1C16F10
	0x01EA22F4 ADRP X8, 0x225C000
	0x01EA22F8 LDR X8, [X8 + 0x928]
	0x01EA22FC MOV X21, X0
	0x01EA2300 LDR X1, [X8]
	0x01EA2304 BL 0x301B7C4
	0x01EA2308 STR X21, [X20 + 0x68]
	0x01EA230C CBZ X19, 0x1EA2394
	0x01EA2310 LDR X8, [X19 + 0x18]
	0x01EA2314 CMP W8, 0x1
	0x01EA2318 B.LT 0x1EA2380
	0x01EA231C ADRP X23, 0x225C000
	0x01EA2320 ADRP X24, 0x225C000
	0x01EA2324 LDR X23, [X23 + 0xA70]
	0x01EA2328 LDR X24, [X24 + 0xA78]
	0x01EA232C MOV X22, X31
	0x01EA2330 AND X8, X8, 0x0
	0x01EA2334 ADD X25, X19, 0x20
	0x01EA2338 CMP X22, W8, UXTW
	0x01EA233C B.CS 0x1EA2398

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x2538000
	009 Move X22, 0x2252000
	010 Move W8, [X19+842]
	011 Move X22, [X22+1448]
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x2252000
	018 Move X0, [X0+1448]
	019 Call 0x1C17CF4
	020 Move X0, 0x2259000
	021 Move X0, [X0+1520]
	022 Call 0x1C17CF4
	023 Move X0, 0x2253000
	024 Move X0, [X0+1136]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X19+842], W8
	028 Move X23, 0x2253000
	029 Move X19, [X21+152]
	030 Move X20, [X21+120]
	031 Move X23, [X23+1136]
	032 Move X0, X31
	033 Call NetworkInputUtils.GetMaxWordCount
	034 Move X8, [X22]
	035 Move W22, [X21+140]
	036 Move W21, W0
	037 Move W9, [X8+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X8
	041 Call 0x1C17DFC
	042 Add W1, W22, 1
	043 Move W0, W21
	044 Move X2, X31
	045 Call Math.Max, X0, X1
	046 Move X2, [X23]
	047 Move W1, W0
	048 Add X0, X31, 8
	049 Move [X31+8], X31
	050 Call Nullable`1<Int32>..ctor, X0, X1
	051 Compare X19, 0
	052 JumpIfEqual {67}
	053 Move X3, [X31+8]
	054 Move W1, 8
	055 Move X0, X19
	056 Move X2, X20
	057 Move X4, X31
	058 Call NetworkProjectConfig.Init, X0, X1, X2, X3
	059 Move X20, [X31+48]
	060 Move X19, [X31+56]
	061 Move X22, [X31+32]
	062 Move X21, [X31+40]
	063 Move X30, [X31+16]
	064 Move X23, [X31+24]
	065 Add X31, X31, 64
	066 Return X0
	067 Call 0x1C17F20

Method: Fusion.RpcTargetStatus GetRpcTargetStatus(Fusion.PlayerRef target)

Disassembly:
	0x01EA77AC LDP X20, X19, [X31 + 0x20]
	0x01EA77B0 LDR X30, [X31 + 0x10]
	0x01EA77B4 ADD X31, X31, 0x30
	0x01EA77B8 RET
	0x01EA77BC ADRP X0, 0x2254000
	0x01EA77C0 LDR X0, [X0 + 0x578]
	0x01EA77C4 BL 0x1C16D08
	0x01EA77C8 BL 0x1C16F10

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 And X1, X1, 0
	006 Move X2, X31
	007 Move X30, [X31+16]
	008 Call Simulation.GetRpcTargetStatus, X0, X1
	009 Return X0
	010 Call 0x1C17F20

Method: System.Boolean HasAnyActiveConnections()

Disassembly:
	0x01EA77CC MOV X19, X0
	0x01EA77D0 ADRP X0, 0x2257000
	0x01EA77D4 LDR X0, [X0 + 0xCF0]
	0x01EA77D8 BL 0x1C16D08
	0x01EA77DC MOV X20, X0
	0x01EA77E0 ADRP X0, 0x2257000
	0x01EA77E4 LDR X0, [X0 + 0xCF8]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call Simulation.HasAnyActiveConnections, X0
	008 Return X0
	009 Call 0x1C17F20

Method: Fusion.NetworkObjectRuntimeFlags AttachOptionsToNetworkObjectFlags(Fusion.NetworkRunner/AttachOptions options)

Disassembly:
	0x01EA77A4 TBZ X0, 0x0, 0x1EA77BC
	0x01EA77A8 LDP X0, X1, [X31]

ISIL:
	001 Move W0, W0
	002 ShiftRight W0, 12
	003 And W0, W0, 0
	004 Return X0

Method: Fusion.NetworkRunner/AttachOptions NetworkObjectFlagsToAttachOptions(Fusion.NetworkObjectRuntimeFlags flags)

Disassembly:
	0x01EA6D40 BL 0x3C88824
	0x01EA6D44 CMP W0, 0x2

ISIL:
	001 Move W0, W0
	002 ShiftRight W0, 20
	003 And W0, W0, 0xFFFFF
	004 Return X0

Method: System.Boolean IsAwakeAtInitialization(Fusion.NetworkObject obj)

Disassembly:
	0x01EA77E8 BL 0x1C16D08
	0x01EA77EC MOV X2, X0
	0x01EA77F0 MOV X0, X19
	0x01EA77F4 MOV X1, X20
	0x01EA77F8 MOV X3, X31
	0x01EA77FC BL 0x330E16C
	0x01EA7800 ADRP X0, 0x2257000
	0x01EA7804 LDR X0, [X0 + 0xD00]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {10}
	004 Move W0, [X0+96]
	005 Move W1, 1
	006 Move X2, X31
	007 Move X30, [X31+16]
	008 Call NetworkObjectRuntimeFlagsExtensions.CheckFlag, X0, X1
	009 Return X0
	010 Call 0x1C17F20

Method: System.Boolean IsPreexistingAtInitialization(Fusion.NetworkObject obj)

Disassembly:
	0x01EA7808 BL 0x1C16D08
	0x01EA780C MOV X1, X0
	0x01EA7810 MOV X0, X19
	0x01EA7814 BL 0x1C16DEC
	0x01EA7818 STP X30, X21, [X31 - 0x20]!
	0x01EA781C STP X20, X19, [X31 + 0x10]
	0x01EA7820 ADRP X21, 0x2532000
	0x01EA7824 LDRB W8, [X21 + 0x35B]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {10}
	004 Move W0, [X0+96]
	005 Move W1, 0x20000
	006 Move X2, X31
	007 Move X30, [X31+16]
	008 Call NetworkObjectRuntimeFlagsExtensions.CheckFlag, X0, X1
	009 Return X0
	010 Call 0x1C17F20

Method: System.Boolean TryGetPrettyRunnerName(System.Text.StringBuilder output, Fusion.NetworkRunner runner)

Disassembly:
	0x01EA7828 MOV X19, X1
	0x01EA782C MOV X20, X0
	0x01EA7830 TBNZ X8, 0x0, 0x1EA7848
	0x01EA7834 ADRP X0, 0x2253000
	0x01EA7838 LDR X0, [X0 + 0xCB0]
	0x01EA783C BL 0x1C16CF4
	0x01EA7840 MOVZ W8, 0x1
	0x01EA7844 STRB W8, [X21 + 0x35B]
	0x01EA7848 LDR X20, [X20 + 0x100]
	0x01EA784C CBZ X20, 0x1EA7898
	0x01EA7850 ADRP X10, 0x2253000
	0x01EA7854 LDR X8, [X20]
	0x01EA7858 LDR X10, [X10 + 0xCB0]
	0x01EA785C LDRH W9, [X8 + 0x12E]
	0x01EA7860 LDR X1, [X10]
	0x01EA7864 CBZ X9, 0x1EA7888
	0x01EA7868 LDR X10, [X8 + 0xB0]
	0x01EA786C ADD X10, X10, 0x8
	0x01EA7870 LDUR X11, [X10 - 0x8]
	0x01EA7874 CMP X11, X1
	0x01EA7878 B.EQ 0x1EA78A0
	0x01EA787C SUBS X9, X9, 0x1
	0x01EA7880 ADD X10, X10, 0x10
	0x01EA7884 B.NE 0x1EA7870
	0x01EA7888 MOVZ W2, 0xC
	0x01EA788C MOV X0, X20
	0x01EA7890 BL 0x1C5C788
	0x01EA7894 B 0x1EA78B0
	0x01EA7898 MOV X0, X31
	0x01EA789C B 0x1EA78C4
	0x01EA78A0 LDR W9, [X10]
	0x01EA78A4 ADD W9, W9, 0xC
	0x01EA78A8 ADD X8, X8, W9, 0x4, SXTW
	0x01EA78AC ADD X0, X8, 0x138
	0x01EA78B0 LDP X8, X2, [X0]
	0x01EA78B4 MOV X0, X20
	0x01EA78B8 MOV X1, X19
	0x01EA78BC BLR X8
	0x01EA78C0 AND X0, X0, 0x0
	0x01EA78C4 LDP X20, X19, [X31 + 0x10]
	0x01EA78C8 LDP X30, X21, [X31], #0x20
	0x01EA78CC RET
	0x01EA78D0 STP X30, X21, [X31 - 0x20]!
	0x01EA78D4 STP X20, X19, [X31 + 0x10]
	0x01EA78D8 ADRP X21, 0x2532000
	0x01EA78DC LDRB W8, [X21 + 0x35C]
	0x01EA78E0 MOV X19, X1
	0x01EA78E4 MOV X20, X0
	0x01EA78E8 TBNZ X8, 0x0, 0x1EA7900
	0x01EA78EC ADRP X0, 0x2253000
	0x01EA78F0 LDR X0, [X0 + 0xCB0]
	0x01EA78F4 BL 0x1C16CF4
	0x01EA78F8 MOVZ W8, 0x1
	0x01EA78FC STRB W8, [X21 + 0x35C]
	0x01EA7900 LDR X20, [X20 + 0x100]
	0x01EA7904 CBZ X20, 0x1EA7950
	0x01EA7908 ADRP X10, 0x2253000
	0x01EA790C LDR X8, [X20]
	0x01EA7910 LDR X10, [X10 + 0xCB0]
	0x01EA7914 LDRH W9, [X8 + 0x12E]
	0x01EA7918 LDR X1, [X10]
	0x01EA791C CBZ X9, 0x1EA7940
	0x01EA7920 LDR X10, [X8 + 0xB0]
	0x01EA7924 ADD X10, X10, 0x8
	0x01EA7928 LDUR X11, [X10 - 0x8]
	0x01EA792C CMP X11, X1
	0x01EA7930 B.EQ 0x1EA7958
	0x01EA7934 SUBS X9, X9, 0x1
	0x01EA7938 ADD X10, X10, 0x10
	0x01EA793C B.NE 0x1EA7928
	0x01EA7940 MOVZ W2, 0xB
	0x01EA7944 MOV X0, X20
	0x01EA7948 BL 0x1C5C788
	0x01EA794C B 0x1EA7968
	0x01EA7950 MOV X0, X31
	0x01EA7954 B 0x1EA797C
	0x01EA7958 LDR W9, [X10]
	0x01EA795C ADD W9, W9, 0xB
	0x01EA7960 ADD X8, X8, W9, 0x4, SXTW
	0x01EA7964 ADD X0, X8, 0x138
	0x01EA7968 LDP X8, X2, [X0]
	0x01EA796C MOV X0, X20
	0x01EA7970 MOV X1, X19
	0x01EA7974 BLR X8
	0x01EA7978 AND X0, X0, 0x0
	0x01EA797C LDP X20, X19, [X31 + 0x10]
	0x01EA7980 LDP X30, X21, [X31], #0x20
	0x01EA7984 RET
	0x01EA7988 STR X30, [X31 - 0x30]!
	0x01EA798C STP X22, X21, [X31 + 0x10]
	0x01EA7990 STP X20, X19, [X31 + 0x20]
	0x01EA7994 ADRP X22, 0x2532000
	0x01EA7998 LDRB W8, [X22 + 0x35D]
	0x01EA799C MOV X21, X2
	0x01EA79A0 MOV X19, X1
	0x01EA79A4 MOV X20, X0
	0x01EA79A8 TBNZ X8, 0x0, 0x1EA79C0
	0x01EA79AC ADRP X0, 0x2253000
	0x01EA79B0 LDR X0, [X0 + 0xCB0]
	0x01EA79B4 BL 0x1C16CF4
	0x01EA79B8 MOVZ W8, 0x1
	0x01EA79BC STRB W8, [X22 + 0x35D]
	0x01EA79C0 LDR X20, [X20 + 0x100]
	0x01EA79C4 CBZ X20, 0x1EA7A14
	0x01EA79C8 ADRP X10, 0x2253000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2533000
	007 Move W8, [X21+843]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0x2258000
	015 Move X0, [X0+3168]
	016 Call 0x1C17CF4
	017 Move X0, 0x2258000
	018 Move X0, [X0+3176]
	019 Call 0x1C17CF4
	020 Move X0, 0x2250000
	021 Move X0, [X0+3648]
	022 Call 0x1C17CF4
	023 Move X0, 0x2258000
	024 Move X0, [X0+3184]
	025 Call 0x1C17CF4
	026 Move X0, 0x2258000
	027 Move X0, [X0+3192]
	028 Call 0x1C17CF4
	029 Move X0, 0x2258000
	030 Move X0, [X0+3200]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+843], W8
	034 Move [X31+8], W31
	035 Compare X20, 0
	036 JumpIfEqual {95}
	037 Move X8, [X20+152]
	038 Compare X8, 0
	039 JumpIfEqual {95}
	040 Move W1, [X8+32]
	041 Move X8, 0x2258000
	042 Move X8, [X8+3176]
	043 Add X0, X31, 0
	044 Move [X31], X31
	045 Move X2, [X8]
	046 Call Nullable`1<Int32Enum>..ctor, X0, X1
	047 Move W8, [X31+4]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X0, [X20+80]
	050 Compare X0, 0
	051 JumpIfEqual {56}
	052 Move X8, [X0]
	053 Move X9, [X8+616]
	054 Move X1, [X8+624]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X21, 0x2250000
	057 Move X21, [X21+3648]
	058 Move [X31+8], W0
	059 Move X8, [X21]
	060 Move W9, [X8+224]
	061 Compare W9, 0
	062 JumpIfNotEqual {66}
	063 Move X0, X8
	064 Call 0x1C17DFC
	065 Move W0, [X31+8]
	066 Compare X19, 0
	067 JumpIfEqual {116}
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X8, 0x2258000
	070 Move X8, [X8+3192]
	071 Move X0, X19
	072 Move X2, X31
	073 Move X1, [X8]
	074 Call StringBuilder.Append, X0, X1
	075 Move X8, [X21]
	076 Move X21, X0
	077 Move W9, [X8+224]
	078 Compare W9, 0
	079 JumpIfNotEqual {82}
	080 Move X0, X8
	081 Call 0x1C17DFC
	082 Add X0, X31, 8
	083 Move X1, X31
	084 Call PlayerRef.get_AsIndex, X0
	085 Compare X21, 0
	086 JumpIfEqual {116}
	087 Move W1, W0
	088 Move X0, X21
	089 Move X2, X31
	090 Call StringBuilder.Append, X0, X1
	091 Compare X0, 0
	092 JumpIfEqual {116}
	093 Move X8, 0x2258000
	094 Move X8, [X8+3184]
	095 Move W0, W31
	096 Move X20, [X31+32]
	097 Move X19, [X31+40]
	098 Move X30, [X31+16]
	099 Move X21, [X31+24]
	100 Add X31, X31, 48
	101 Return X0
	102 Move X8, 0x2258000
	103 Move X8, [X8+3200]
	104 Move X0, X19
	105 Move X1, [X8]
	106 Move X2, X31
	107 Call StringBuilder.Append, X0, X1
	108 Move X0, X20
	109 Move X1, X31
	110 Call Behaviour.get_DebugNameThreadSafe, X0
	111 Move X1, X0
	112 Move X0, X19
	113 Move X2, X31
	114 Call StringBuilder.Append, X0, X1
	115 Move W0, 1
	116 Call 0x1C17F20

Method: System.Void ResetAllSimulationStatics()

Disassembly:
	0x01EA79CC LDR X8, [X20]
	0x01EA79D0 LDR X10, [X10 + 0xCB0]
	0x01EA79D4 AND X21, X21, 0x0
	0x01EA79D8 LDRH W9, [X8 + 0x12E]
	0x01EA79DC LDR X1, [X10]
	0x01EA79E0 CBZ X9, 0x1EA7A04
	0x01EA79E4 LDR X10, [X8 + 0xB0]
	0x01EA79E8 ADD X10, X10, 0x8
	0x01EA79EC LDUR X11, [X10 - 0x8]
	0x01EA79F0 CMP X11, X1
	0x01EA79F4 B.EQ 0x1EA7A28
	0x01EA79F8 SUBS X9, X9, 0x1
	0x01EA79FC ADD X10, X10, 0x10
	0x01EA7A00 B.NE 0x1EA79EC
	0x01EA7A04 MOVZ W2, 0x8
	0x01EA7A08 MOV X0, X20
	0x01EA7A0C BL 0x1C5C788
	0x01EA7A10 B 0x1EA7A38
	0x01EA7A14 LDP X20, X19, [X31 + 0x20]
	0x01EA7A18 LDP X22, X21, [X31 + 0x10]
	0x01EA7A1C MOV W0, W31
	0x01EA7A20 LDR X30, [X31], #0x30
	0x01EA7A24 RET
	0x01EA7A28 LDR W9, [X10]
	0x01EA7A2C ADD W9, W9, 0x8
	0x01EA7A30 ADD X8, X8, W9, 0x4, SXTW
	0x01EA7A34 ADD X0, X8, 0x138
	0x01EA7A38 LDP X4, X3, [X0]
	0x01EA7A3C MOV X0, X20
	0x01EA7A40 MOV X1, X19
	0x01EA7A44 MOV X2, X21
	0x01EA7A48 LDP X20, X19, [X31 + 0x20]
	0x01EA7A4C LDP X22, X21, [X31 + 0x10]
	0x01EA7A50 LDR X30, [X31], #0x30
	0x01EA7A54 BR X4
	0x01EA7A58 STR X30, [X31 - 0x20]!
	0x01EA7A5C STP X20, X19, [X31 + 0x10]
	0x01EA7A60 MOV X19, X1
	0x01EA7A64 MOV X1, X2
	0x01EA7A68 MOV X20, X0
	0x01EA7A6C BL 0x1EA78D0
	0x01EA7A70 STR W0, [X31 + 0x8]
	0x01EA7A74 ADD X0, X31, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2533000
	005 Move X19, 0x2250000
	006 Move W8, [X20+844]
	007 Move X19, [X19+2680]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x2250000
	013 Move X0, [X0+2680]
	014 Call 0x1C17CF4
	015 Move X0, 0x2256000
	016 Move X0, [X0+3712]
	017 Call 0x1C17CF4
	018 Move X0, 0x2258000
	019 Move X0, [X0+808]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+844], W8
	023 Move X0, [X19]
	024 Move X20, 0x2256000
	025 Move W8, [X0+224]
	026 Move X20, [X20+3712]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X19, 0x2258000
	031 Move X19, [X19+808]
	032 Move X0, X31
	033 Call NetworkBehaviourUtils.ResetStatics
	034 Move X0, X31
	035 Call NetworkInputUtils.ResetStatics
	036 Move X0, [X20]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Call NetworkRunner.ResetStatics
	042 Move X0, [X19]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X0, X31
	050 Move X30, [X31+32]
	051 Call NetworkStructUtils.ResetStatics
	052 Return 

Method: System.Void SetupEncryption(Fusion.Encryption.EncryptionToken token)

Disassembly:
	0x01EA7A78 MOV X1, X31
	0x01EA7A7C BL 0x1E8FD88
	0x01EA7A80 TBZ X0, 0x0, 0x1EA7A98
	0x01EA7A84 LDR W2, [X31 + 0x8]
	0x01EA7A88 MOV X0, X20
	0x01EA7A8C MOV X1, X19
	0x01EA7A90 BL 0x1EA7988
	0x01EA7A94 B 0x1EA7A9C
	0x01EA7A98 MOV W0, W31
	0x01EA7A9C LDP X20, X19, [X31 + 0x10]
	0x01EA7AA0 AND W0, W0, 0x1
	0x01EA7AA4 LDR X30, [X31], #0x20
	0x01EA7AA8 RET
	0x01EA7AAC STP X30, X21, [X31 - 0x20]!
	0x01EA7AB0 STP X20, X19, [X31 + 0x10]
	0x01EA7AB4 MOV W19, W3
	0x01EA7AB8 MOV X20, X2
	0x01EA7ABC MOV X21, X0
	0x01EA7AC0 BL 0x1EA74E4
	0x01EA7AC4 AND W3, W19, 0x1
	0x01EA7AC8 MOV X2, X20
	0x01EA7ACC LDP X20, X19, [X31 + 0x10]
	0x01EA7AD0 AND X1, X0, 0x0
	0x01EA7AD4 MOV X0, X21
	0x01EA7AD8 LDP X30, X21, [X31], #0x20
	0x01EA7ADC B 0x1EA7AE0
	0x01EA7AE0 SUB X31, X31, 0x60
	0x01EA7AE4 STP X30, X25, [X31 + 0x20]
	0x01EA7AE8 STP X24, X23, [X31 + 0x30]
	0x01EA7AEC STP X22, X21, [X31 + 0x40]
	0x01EA7AF0 STP X20, X19, [X31 + 0x50]
	0x01EA7AF4 ADRP X23, 0x2532000
	0x01EA7AF8 STR X2, [X31 + 0x18]
	0x01EA7AFC ADRP X22, 0x2257000
	0x01EA7B00 LDRB W8, [X23 + 0x35F]
	0x01EA7B04 LDR X22, [X22 + 0xD08]
	0x01EA7B08 MOV W21, W3
	0x01EA7B0C MOV X19, X1
	0x01EA7B10 MOV X20, X0
	0x01EA7B14 TBNZ X8, 0x0, 0x1EA7B98
	0x01EA7B18 ADRP X0, 0x2254000
	0x01EA7B1C LDR X0, [X0 + 0x578]
	0x01EA7B20 BL 0x1C16CF4
	0x01EA7B24 ADRP X0, 0x2257000
	0x01EA7B28 LDR X0, [X0 + 0xD10]
	0x01EA7B2C BL 0x1C16CF4
	0x01EA7B30 ADRP X0, 0x2257000
	0x01EA7B34 LDR X0, [X0 + 0xD18]
	0x01EA7B38 BL 0x1C16CF4
	0x01EA7B3C ADRP X0, 0x2253000
	0x01EA7B40 LDR X0, [X0 + 0xCB0]
	0x01EA7B44 BL 0x1C16CF4
	0x01EA7B48 ADRP X0, 0x2257000
	0x01EA7B4C LDR X0, [X0 + 0x140]
	0x01EA7B50 BL 0x1C16CF4
	0x01EA7B54 ADRP X0, 0x2257000
	0x01EA7B58 LDR X0, [X0 + 0xD20]
	0x01EA7B5C BL 0x1C16CF4
	0x01EA7B60 ADRP X0, 0x2257000
	0x01EA7B64 LDR X0, [X0 + 0xD28]
	0x01EA7B68 BL 0x1C16CF4
	0x01EA7B6C ADRP X0, 0x2257000
	0x01EA7B70 LDR X0, [X0 + 0xD08]
	0x01EA7B74 BL 0x1C16CF4
	0x01EA7B78 ADRP X0, 0x2257000
	0x01EA7B7C LDR X0, [X0 + 0x4D8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2533000
	006 Move W8, [X21+845]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2257000
	014 Move X0, [X0+344]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+845], W8
	018 Move X8, [X20+152]
	019 Compare X8, 0
	020 JumpIfEqual {87}
	021 Move X8, [X8+96]
	022 Compare X8, 0
	023 JumpIfEqual {87}
	024 Compare X19, 0
	025 JumpIfEqual {68}
	026 Move W8, [X8+16]
	027 Compare W8, 0
	028 JumpIfEqual {68}
	029 Move X8, [X20+80]
	030 Compare X8, 0
	031 JumpIfEqual {68}
	032 Move X8, [X8+288]
	033 Compare X8, 0
	034 JumpIfEqual {68}
	035 Move X0, [X20+432]
	036 Compare X0, 0
	037 JumpIfEqual {87}
	038 Move X1, X31
	039 Call CloudServices.get_IsEncryptionEnabled, X0
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {68}
	044 Move X8, [X20+80]
	045 Compare X8, 0
	046 JumpIfEqual {68}
	047 Move X20, [X8+288]
	048 Compare X20, 0
	049 JumpIfEqual {68}
	050 Move X10, 0x2257000
	051 Move X8, [X20]
	052 Move X21, [X19+16]
	053 Move X19, [X19+24]
	054 Move X10, [X10+344]
	055 NotImplemented "Instruction LDRH not yet implemented."
	056 Move X1, [X10]
	057 Compare X9, 0
	058 JumpIfEqual {65}
	059 Move X10, [X8+176]
	060 Add X10, X10, 8
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Subtract X9, X9, 1
	064 Add X10, X10, 16
	065 Move W2, 10
	066 Move X0, X20
	067 Call 0x1C5D788
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Return 
	073 Move W9, [X10]
	074 Add W9, W9, 10
	075 Add X8, X8, W9
	076 Add X0, X8, 312
	077 Move X4, [X0]
	078 Move X3, [X0+8]
	079 Move X0, X20
	080 Move X2, X19
	081 Move X20, [X31+16]
	082 Move X19, [X31+24]
	083 Move X1, X21
	084 Move X30, [X31+32]
	085 Move X21, [X31+40]
	086 CallNoReturn X4
	087 Call 0x1C17F20

Method: System.Void AddInactiveObjectGuard(Fusion.NetworkObject obj)

Disassembly:
	0x01EA74DC LDR X30, [X31], #0x30
	0x01EA74E0 RET
	0x01EA74E4 SUB X31, X31, 0x30
	0x01EA74E8 STP X30, X21, [X31 + 0x10]
	0x01EA74EC STP X20, X19, [X31 + 0x20]
	0x01EA74F0 ADRP X21, 0x2532000
	0x01EA74F4 LDRB W8, [X21 + 0x35A]
	0x01EA74F8 MOV X19, X1
	0x01EA74FC MOV X20, X0
	0x01EA7500 TBNZ X8, 0x0, 0x1EA7518
	0x01EA7504 ADRP X0, 0x2253000
	0x01EA7508 LDR X0, [X0 + 0xCB0]
	0x01EA750C BL 0x1C16CF4
	0x01EA7510 MOVZ W8, 0x1
	0x01EA7514 STRB W8, [X21 + 0x35A]
	0x01EA7518 MOV X0, X19
	0x01EA751C MOV X1, X31
	0x01EA7520 STR W31, [X31 + 0x8]
	0x01EA7524 BL 0x32277A8
	0x01EA7528 TBNZ X0, 0x0, 0x1EA75C4
	0x01EA752C LDR X20, [X20 + 0x100]
	0x01EA7530 CBZ X20, 0x1EA760C
	0x01EA7534 ADRP X10, 0x2253000
	0x01EA7538 LDR X8, [X20]
	0x01EA753C LDR X10, [X10 + 0xCB0]
	0x01EA7540 LDRH W9, [X8 + 0x12E]
	0x01EA7544 LDR X1, [X10]
	0x01EA7548 CBZ X9, 0x1EA756C
	0x01EA754C LDR X10, [X8 + 0xB0]
	0x01EA7550 ADD X10, X10, 0x8
	0x01EA7554 LDUR X11, [X10 - 0x8]
	0x01EA7558 CMP X11, X1
	0x01EA755C B.EQ 0x1EA757C
	0x01EA7560 SUBS X9, X9, 0x1
	0x01EA7564 ADD X10, X10, 0x10
	0x01EA7568 B.NE 0x1EA7554
	0x01EA756C MOVZ W2, 0xC
	0x01EA7570 MOV X0, X20
	0x01EA7574 BL 0x1C5C788
	0x01EA7578 B 0x1EA758C
	0x01EA757C LDR W9, [X10]
	0x01EA7580 ADD W9, W9, 0xC
	0x01EA7584 ADD X8, X8, W9, 0x4, SXTW
	0x01EA7588 ADD X0, X8, 0x138
	0x01EA758C LDP X8, X2, [X0]
	0x01EA7590 MOV X0, X20
	0x01EA7594 MOV X1, X19
	0x01EA7598 BLR X8
	0x01EA759C STR W0, [X31 + 0x8]
	0x01EA75A0 ADD X0, X31, 0x8
	0x01EA75A4 MOV X1, X31
	0x01EA75A8 BL 0x1E8FD88
	0x01EA75AC TBZ X0, 0x0, 0x1EA7654
	0x01EA75B0 LDR W0, [X31 + 0x8]
	0x01EA75B4 LDP X20, X19, [X31 + 0x20]
	0x01EA75B8 LDP X30, X21, [X31 + 0x10]
	0x01EA75BC ADD X31, X31, 0x30
	0x01EA75C0 RET
	0x01EA75C4 ADRP X0, 0x2254000
	0x01EA75C8 LDR X0, [X0 + 0x578]
	0x01EA75CC BL 0x1C16D08
	0x01EA75D0 BL 0x1C16F10
	0x01EA75D4 MOV X19, X0
	0x01EA75D8 ADRP X0, 0x2257000
	0x01EA75DC LDR X0, [X0 + 0xCB0]
	0x01EA75E0 BL 0x1C16D08
	0x01EA75E4 MOV X20, X0
	0x01EA75E8 ADRP X0, 0x2257000
	0x01EA75EC LDR X0, [X0 + 0xCB8]
	0x01EA75F0 BL 0x1C16D08
	0x01EA75F4 MOV X2, X0
	0x01EA75F8 MOV X0, X19
	0x01EA75FC MOV X1, X20
	0x01EA7600 MOV X3, X31
	0x01EA7604 BL 0x330E16C
	0x01EA7608 B 0x1EA763C
	0x01EA760C ADRP X0, 0x224C000
	0x01EA7610 LDR X0, [X0 + 0x5B0]
	0x01EA7614 BL 0x1C16D08
	0x01EA7618 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2533000
	006 Move W8, [X21+846]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x2258000
	014 Move X0, [X0+3136]
	015 Call 0x1C17CF4
	016 Move X0, 0x224D000
	017 Move X0, [X0+2648]
	018 Call 0x1C17CF4
	019 Move X0, 0x2258000
	020 Move X0, [X0+3144]
	021 Call 0x1C17CF4
	022 Move X0, 0x2258000
	023 Move X0, [X0+3152]
	024 Call 0x1C17CF4
	025 Move X0, 0x2258000
	026 Move X0, [X0+3160]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+846], W8
	030 Move X0, [X20+240]
	031 Compare X0, 0
	032 JumpIfEqual {93}
	033 Move W8, [X0+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X8, 0x2258000
	036 Move X8, [X8+3144]
	037 Move X1, [X8]
	038 Call Stack`1<Object>.Pop, X0
	039 Move X20, X0
	040 Compare X20, 0
	041 JumpIfNotEqual {72}
	042 Move X8, 0x224D000
	043 Move X8, [X8+2648]
	044 Move X0, [X8]
	045 Call 0x1C17F10
	046 Move X8, 0x2258000
	047 Move X8, [X8+3160]
	048 Move X2, X31
	049 Move X21, X0
	050 Move X1, [X8]
	051 Call GameObject..ctor, X0, X1
	052 Compare X21, 0
	053 JumpIfEqual {93}
	054 Move X8, 0x2258000
	055 Move X8, [X8+3136]
	056 Move X0, X21
	057 Move X1, [X8]
	058 Call 0x21E61FC, X0
	059 Move X8, [X20+152]
	060 Compare X8, 0
	061 JumpIfEqual {93}
	062 Move W8, [X8+51]
	063 Move X20, X0
	064 Move X0, X21
	065 Move X2, X31
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W8, 60
	068 NotImplemented "Instruction CINC not yet implemented."
	069 Call Object.set_hideFlags, X0, X1
	070 Compare X20, 0
	071 JumpIfEqual {93}
	072 Move X0, X20
	073 Move X1, X31
	074 Move [X20+32], X19
	075 Call Component.get_transform, X0
	076 Compare X19, 0
	077 JumpIfEqual {93}
	078 Move X20, X0
	079 Move X0, X19
	080 Move X1, X31
	081 Call Component.get_transform, X0
	082 Compare X20, 0
	083 JumpIfEqual {93}
	084 Move X1, X0
	085 Move X0, X20
	086 Move X20, [X31+16]
	087 Move X19, [X31+24]
	088 Move X2, X31
	089 Move X30, [X31+32]
	090 Move X21, [X31+40]
	091 Call Transform.SetParent, X0, X1
	092 Return 
	093 Call 0x1C17F20

Method: System.Collections.Generic.List`1/Enumerator<Fusion.NetworkRunner> GetInstancesEnumerator()

Disassembly:
	0x01EA7B80 BL 0x1C16CF4
	0x01EA7B84 ADRP X0, 0x2257000
	0x01EA7B88 LDR X0, [X0 + 0xD30]
	0x01EA7B8C BL 0x1C16CF4
	0x01EA7B90 MOVZ W8, 0x1
	0x01EA7B94 STRB W8, [X23 + 0x35F]
	0x01EA7B98 LDR X0, [X22]
	0x01EA7B9C STP X31, X31, [X31 + 0x8]
	0x01EA7BA0 BL 0x1C16F10
	0x01EA7BA4 MOV X1, X31
	0x01EA7BA8 MOV X22, X0
	0x01EA7BAC BL 0x33BDD8C
	0x01EA7BB0 CBZ X22, 0x1EA7DFC
	0x01EA7BB4 AND X1, X19, 0x0
	0x01EA7BB8 MOV X0, X20
	0x01EA7BBC STR X20, [X22 + 0x10]
	0x01EA7BC0 BL 0x1EA76C0
	0x01EA7BC4 MOV X24, X0
	0x01EA7BC8 MOVZ W1, 0x1
	0x01EA7BCC MOV X0, X20
	0x01EA7BD0 BL 0x1EA8118
	0x01EA7BD4 MOV X23, X0
	0x01EA7BD8 ADD X0, X31, 0x18
	0x01EA7BDC MOV X1, X31
	0x01EA7BE0 BL 0x3C47F20
	0x01EA7BE4 MOV W25, W0
	0x01EA7BE8 ADD X0, X31, 0x18
	0x01EA7BEC MOV X1, X31
	0x01EA7BF0 BL 0x3C47F28
	0x01EA7BF4 AND X19, X24, 0x0
	0x01EA7BF8 MOV W3, W0
	0x01EA7BFC AND W4, W21, 0x1
	0x01EA7C00 MOV X0, X23
	0x01EA7C04 MOV X1, X19
	0x01EA7C08 MOV W2, W25
	0x01EA7C0C MOV X5, X31
	0x01EA7C10 BL 0x1EBC890
	0x01EA7C14 TBNZ X0, 0x1F, 0x1EA7CBC
	0x01EA7C18 LDP V2, V0, [X23 + 0x10]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x2533000
	007 Move X20, 0x2256000
	008 Move X19, X8
	009 Move W8, [X21+847]
	010 Move X20, [X20+3712]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x2258000
	016 Move X0, [X0+3208]
	017 Call 0x1C17CF4
	018 Move X0, 0x2256000
	019 Move X0, [X0+3712]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+847], W8
	023 Move X0, [X20]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X20]
	029 Move X8, [X0+184]
	030 Move X0, [X8]
	031 Compare X0, 0
	032 JumpIfEqual {48}
	033 Move X8, 0x2258000
	034 Move X8, [X8+3208]
	035 Move X1, [X8]
	036 Add X8, X31, 8
	037 Call List`1<Object>.GetEnumerator, X0
	038 Move X8, [X31+24]
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Move [X19+16], X8
	043 Move [X19], V0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Add X31, X31, 64
	047 Return X0
	048 Call 0x1C17F20

Method: System.Collections.Generic.IReadOnlyList`1<Fusion.NetworkRunner> get_Instances()

Disassembly:
	0x01EA7C1C LDR W8, [X23 + 0x30]
	0x01EA7C20 LDR V1, [X23]
	0x01EA7C24 LDR X9, [X20 + 0x178]
	0x01EA7C28 MOV W21, W0
	0x01EA7C2C STR W8, [X20 + 0x170]
	0x01EA7C30 STP V2, V0, [X20 + 0x150]
	0x01EA7C34 STR V1, [X20 + 0x14]
	0x01EA7C38 CBZ X9, 0x1EA7D38
	0x01EA7C3C MOV X0, X23
	0x01EA7C40 MOV X1, X31
	0x01EA7C44 BL 0x1EBC6EC
	0x01EA7C48 ADRP X8, 0x2257000
	0x01EA7C4C LDR X8, [X8 + 0xD10]
	0x01EA7C50 STP X0, X1, [X31 + 0x8]
	0x01EA7C54 ADD X0, X31, 0x8
	0x01EA7C58 MOV W1, W21
	0x01EA7C5C LDR X2, [X8]
	0x01EA7C60 BL 0x2D1FA44
	0x01EA7C64 LDRH W8, [X0]
	0x01EA7C68 STRH W8, [X22 + 0x18]
	0x01EA7C6C LDR X8, [X20 + 0x178]
	0x01EA7C70 CBZ X8, 0x1EA7DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2533000
	005 Move X19, 0x2256000
	006 Move W8, [X20+848]
	007 Move X19, [X19+3712]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2256000
	013 Move X0, [X0+3712]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+848], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Boolean AddInstance(Fusion.NetworkRunner runner)

Disassembly:
	0x01EA2560 BL 0x1C16F20
	0x01EA2564 BL 0x1C16F20
	0x01EA2568 BL 0x1C16F20
	0x01EA256C B 0x1EA2574
	0x01EA2570 B 0x1EA2574
	0x01EA2574 CMP W1, 0x1
	0x01EA2578 STR X20, [X31 + 0x8]
	0x01EA257C B.NE 0x1EA25A0
	0x01EA2580 BL 0x3EB1AD0
	0x01EA2584 LDR X20, [X0]
	0x01EA2588 BL 0x3EB1AE0
	0x01EA258C LDR X8, [X31 + 0x8]
	0x01EA2590 STR W31, [X8]
	0x01EA2594 CBZ X20, 0x1EA2528
	0x01EA2598 MOV X0, X20
	0x01EA259C BL 0x1C16F18
	0x01EA25A0 LDR X8, [X31 + 0x8]
	0x01EA25A4 STR W31, [X8]
	0x01EA25A8 B 0x1EA25B8
	0x01EA25AC LDR X8, [X31 + 0x8]
	0x01EA25B0 STR W31, [X8]
	0x01EA25B4 CBNZ X20, 0x1EA25BC
	0x01EA25B8 BL 0x1D2C690
	0x01EA25BC MOV X0, X20
	0x01EA25C0 BL 0x1C16F18
	0x01EA25C4 BL 0x1990590
	0x01EA25C8 STP X30, X21, [X31 - 0x20]!
	0x01EA25CC STP X20, X19, [X31 + 0x10]
	0x01EA25D0 ADRP X20, 0x2537000
	0x01EA25D4 LDRB W8, [X20 + 0x32B]
	0x01EA25D8 MOV X19, X0
	0x01EA25DC TBNZ X8, 0x0, 0x1EA2618
	0x01EA25E0 ADRP X0, 0x225C000
	0x01EA25E4 LDR X0, [X0 + 0x928]
	0x01EA25E8 BL 0x1C16CF4
	0x01EA25EC ADRP X0, 0x225C000
	0x01EA25F0 LDR X0, [X0 + 0x930]
	0x01EA25F4 BL 0x1C16CF4
	0x01EA25F8 ADRP X0, 0x225A000
	0x01EA25FC LDR X0, [X0 + 0xE80]
	0x01EA2600 BL 0x1C16CF4
	0x01EA2604 ADRP X0, 0x2259000
	0x01EA2608 LDR X0, [X0 + 0x7D0]
	0x01EA260C BL 0x1C16CF4
	0x01EA2610 MOVZ W8, 0x1
	0x01EA2614 STRB W8, [X20 + 0x32B]
	0x01EA2618 ADRP X21, 0x225A000
	0x01EA261C LDR X8, [X19 + 0x68]
	0x01EA2620 LDR X21, [X21 + 0xE80]
	0x01EA2624 CBNZ X8, 0x1EA2650
	0x01EA2628 ADRP X8, 0x225C000
	0x01EA262C LDR X8, [X8 + 0x930]
	0x01EA2630 LDR X0, [X8]
	0x01EA2634 BL 0x1C16F10
	0x01EA2638 ADRP X8, 0x225C000
	0x01EA263C LDR X8, [X8 + 0x928]
	0x01EA2640 MOV X20, X0
	0x01EA2644 LDR X1, [X8]
	0x01EA2648 BL 0x301B7C4
	0x01EA264C STR X20, [X19 + 0x68]
	0x01EA2650 ADRP X20, 0x2259000
	0x01EA2654 LDR X20, [X20 + 0x7D0]
	0x01EA2658 MOV X0, X19
	0x01EA265C BL 0x1E9F728
	0x01EA2660 LDR X0, [X21]
	0x01EA2664 LDR W8, [X0 + 0xE0]
	0x01EA2668 CBNZ W8, 0x1EA2670
	0x01EA266C BL 0x1C16DFC
	0x01EA2670 MOV X0, X19
	0x01EA2674 BL 0x1EA1560

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2538000
	006 Move X21, 0x225B000
	007 Move W8, [X20+849]
	008 Move X21, [X21+3712]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x225D000
	015 Move X0, [X0+2608]
	016 Call 0x1C17CF4
	017 Move X0, 0x225D000
	018 Move X0, [X0+2616]
	019 Call 0x1C17CF4
	020 Move X0, 0x225B000
	021 Move X0, [X0+3712]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+849], W8
	025 Move X0, [X21]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X21]
	031 Move X8, [X0+184]
	032 Move X0, [X8]
	033 Compare X0, 0
	034 JumpIfEqual {83}
	035 Move X8, 0x225D000
	036 Move X8, [X8+2616]
	037 Move X1, X19
	038 Move X2, [X8]
	039 Call List`1<Object>.Contains, X0, X1
	040 Move W20, W0
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {76}
	045 Move X0, [X21]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X0, [X21]
	051 Move X8, [X0+184]
	052 Move X0, [X8]
	053 Compare X0, 0
	054 JumpIfEqual {83}
	055 Move X9, 0x225D000
	056 Move X9, [X9+2608]
	057 Move W10, [X0+28]
	058 Move X8, [X0+16]
	059 Move X9, [X9]
	060 Add W10, W10, 1
	061 Move [X0+28], W10
	062 Compare X8, 0
	063 JumpIfEqual {83}
	064 NotImplemented "Instruction LDRSW not yet implemented."
	065 Move W11, [X8+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Add W9, W10, 1
	068 Add X8, X8, X10
	069 Move [X0+24], W9
	070 Move [X8+32], X19
	071 Move X8, [X9+32]
	072 Move X1, X19
	073 Move X8, [X8+192]
	074 Move X2, [X8+112]
	075 Call List`1<Object>.AddWithResize, X0, X1
	076 NotImplemented "Instruction ORN not yet implemented."
	077 Move X20, [X31+16]
	078 Move X19, [X31+24]
	079 And W0, W8, 1
	080 Move X30, [X31+32]
	081 Move X21, [X31+40]
	082 Return X0
	083 Call 0x1C17F20

Method: System.Boolean RemoveInstance(Fusion.NetworkRunner runner)

Disassembly:
	0x01EA0944 LDR X8, [X8 + 0x928]
	0x01EA0948 MOV X22, X0
	0x01EA094C LDR X1, [X8]
	0x01EA0950 BL 0x301B7C4
	0x01EA0954 STR X22, [X19 + 0x68]
	0x01EA0958 ADRP X26, 0x225C000
	0x01EA095C LDR X26, [X26 + 0xE80]
	0x01EA0960 MOV X0, X20
	0x01EA0964 MOV X1, X31
	0x01EA0968 BL 0x1EB92D0
	0x01EA096C TBZ X0, 0x0, 0x1EA0990
	0x01EA0970 ADRP X8, 0x225E000
	0x01EA0974 LDR X8, [X8 + 0x938]
	0x01EA0978 LDR X0, [X8]
	0x01EA097C BL 0x1C16F10
	0x01EA0980 MOV X1, X31
	0x01EA0984 MOV X22, X0
	0x01EA0988 BL 0x1F04654
	0x01EA098C B 0x1EA099C
	0x01EA0990 MOV X0, X19
	0x01EA0994 BL 0x1EA0300
	0x01EA0998 MOV X22, X0
	0x01EA099C ADRP X27, 0x225E000
	0x01EA09A0 ADRP X23, 0x225E000
	0x01EA09A4 ADRP X24, 0x2253000
	0x01EA09A8 LDR X27, [X27 + 0x9B0]
	0x01EA09AC LDR X23, [X23 + 0x9A8]
	0x01EA09B0 LDR X24, [X24 + 0x598]
	0x01EA09B4 ADD X0, X31, 0x290
	0x01EA09B8 MOVZ W2, 0xF8
	0x01EA09BC MOV X1, X20
	0x01EA09C0 BL 0x3EB1AC0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x253A000
	006 Move X20, 0x225D000
	007 Move W8, [X21+850]
	008 Move X20, [X20+3712]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x225F000
	015 Move X0, [X0+2144]
	016 Call 0x1C17CF4
	017 Move X0, 0x225D000
	018 Move X0, [X0+3712]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+850], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X0, [X8]
	030 Compare X0, 0
	031 JumpIfEqual {42}
	032 Move X8, 0x225F000
	033 Move X8, [X8+2144]
	034 Move X1, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X2, [X8]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Call List`1<Object>.Remove, X0, X1
	041 Return X0
	042 Call 0x1C17F20

Method: System.Void SimulatePhysicsScenes(System.Single fixedDeltaTime)

Disassembly:
	0x01EA7C74 LDR X20, [X8 + 0x10]
	0x01EA7C78 ADRP X8, 0x2257000
	0x01EA7C7C LDR X8, [X8 + 0xD18]
	0x01EA7C80 LDR X0, [X8]
	0x01EA7C84 BL 0x1C16F10
	0x01EA7C88 ADRP X8, 0x2257000
	0x01EA7C8C LDR X8, [X8 + 0xD28]
	0x01EA7C90 MOV X1, X22
	0x01EA7C94 MOV X3, X31
	0x01EA7C98 MOV X21, X0
	0x01EA7C9C LDR X2, [X8]
	0x01EA7CA0 BL 0x2D32A18
	0x01EA7CA4 MOV X0, X19
	0x01EA7CA8 MOV X1, X20
	0x01EA7CAC MOV X2, X21
	0x01EA7CB0 MOV X3, X31
	0x01EA7CB4 BL 0x1EBB958
	0x01EA7CB8 B 0x1EA7DD8
	0x01EA7CBC ADRP X8, 0x2257000
	0x01EA7CC0 LDR X8, [X8 + 0x140]
	0x01EA7CC4 ADD X1, X31, 0x0
	0x01EA7CC8 STR W24, [X31]
	0x01EA7CCC LDR X0, [X8]
	0x01EA7CD0 BL 0x1C16E04
	0x01EA7CD4 ADRP X8, 0x2257000
	0x01EA7CD8 LDR X8, [X8 + 0xD30]
	0x01EA7CDC MOV X1, X0
	0x01EA7CE0 MOV X2, X31
	0x01EA7CE4 LDR X8, [X8]
	0x01EA7CE8 MOV X0, X8
	0x01EA7CEC BL 0x321EFD0
	0x01EA7CF0 ADRP X8, 0x2254000
	0x01EA7CF4 LDR X8, [X8 + 0x578]
	0x01EA7CF8 MOV X20, X0
	0x01EA7CFC LDR X8, [X8]
	0x01EA7D00 MOV X0, X8
	0x01EA7D04 BL 0x1C16F10
	0x01EA7D08 ADRP X8, 0x2257000
	0x01EA7D0C LDR X8, [X8 + 0x4D8]
	0x01EA7D10 MOV X1, X20
	0x01EA7D14 MOV X3, X31
	0x01EA7D18 MOV X21, X0
	0x01EA7D1C LDR X2, [X8]
	0x01EA7D20 BL 0x330E16C
	0x01EA7D24 MOV X0, X19
	0x01EA7D28 MOV X1, X21
	0x01EA7D2C MOV X2, X31
	0x01EA7D30 BL 0x1EBB8C4
	0x01EA7D34 B 0x1EA7DE4
	0x01EA7D38 LDR X20, [X20 + 0x100]
	0x01EA7D3C MOV X0, X23
	0x01EA7D40 MOV X1, X31
	0x01EA7D44 BL 0x1EBC6EC
	0x01EA7D48 ADRP X8, 0x2257000
	0x01EA7D4C LDR X8, [X8 + 0xD10]
	0x01EA7D50 STP X0, X1, [X31 + 0x8]
	0x01EA7D54 ADD X0, X31, 0x8
	0x01EA7D58 MOV W1, W21
	0x01EA7D5C LDR X2, [X8]
	0x01EA7D60 BL 0x2D1FA44
	0x01EA7D64 CBZ X20, 0x1EA7DFC
	0x01EA7D68 ADRP X10, 0x2253000
	0x01EA7D6C LDR X8, [X20]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2533000
	007 Move W8, [X20+851]
	008 Move V8, V0
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2254000
	015 Move X0, [X0+3168]
	016 Call 0x1C17CF4
	017 Move X0, 0x224D000
	018 Move X0, [X0+1528]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+851], W8
	022 Move X0, X19
	023 Call NetworkRunner.GetPhysicsScene, X0
	024 Move [X31+8], W0
	025 Move X0, X19
	026 Call NetworkRunner.GetPhysicsScene2D, X0
	027 Move [X31], W0
	028 Add X0, X31, 8
	029 Move X1, X31
	030 Call PhysicsScene.IsValid, X0
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {52}
	035 Move X8, 0x224D000
	036 Move X8, [X8+1528]
	037 Move X0, [X8]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X31
	043 Call Physics.get_autoSimulation
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {52}
	048 Add X0, X31, 8
	049 Move V0, V8
	050 Move X1, X31
	051 Call PhysicsScene.Simulate, X0, V0
	052 Add X0, X31, 0
	053 Move X1, X31
	054 Call PhysicsScene2D.IsValid, X0
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {73}
	059 Move X8, 0x2254000
	060 Move X8, [X8+3168]
	061 Move X0, [X8]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X31
	067 Call Physics2D.get_simulationMode
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Add X0, X31, 0
	070 Move V0, V8
	071 Move X1, X31
	072 Call PhysicsScene2D.Simulate, X0, V0
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X30, [X31+24]
	076 Move V8, [X31+16]
	077 Add X31, X31, 48
	078 Return 

Method: System.Void FixedUpdate()

Disassembly:
	0x01EA7F78 BL 0x1EA8118
	0x01EA7F7C AND X19, X21, 0x0
	0x01EA7F80 MOV X1, X19
	0x01EA7F84 MOV X2, X31
	0x01EA7F88 MOV X22, X0
	0x01EA7F8C BL 0x1EBCA3C
	0x01EA7F90 TBZ X0, 0x0, 0x1EA7FFC
	0x01EA7F94 LDP V2, V0, [X22 + 0x10]
	0x01EA7F98 LDR W9, [X22 + 0x30]
	0x01EA7F9C LDR V1, [X22]
	0x01EA7FA0 LDR X8, [X20 + 0x178]
	0x01EA7FA4 STP V2, V0, [X20 + 0x150]
	0x01EA7FA8 STR W9, [X20 + 0x170]
	0x01EA7FAC STR V1, [X20 + 0x14]
	0x01EA7FB0 CBZ X8, 0x1EA8088
	0x01EA7FB4 LDR X21, [X8 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+248]
	004 Compare W8, 0
	005 JumpIfEqual {23}
	006 Move X19, X0
	007 Move X0, [X0+80]
	008 Compare X0, 0
	009 JumpIfEqual {23}
	010 Move X1, X31
	011 Call Simulation.get_IsRunning, X0
	012 Move TEMP, X0
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfNotEqual {23}
	016 Move X0, X31
	017 Call Time.get_fixedDeltaTime
	018 Move X0, X19
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Call NetworkRunner.SimulatePhysicsScenes, X0, V0
	022 Return 
	023 Move X30, [X31+16]
	024 Move X19, [X31+24]
	025 Return 

Method: System.Void SetupMultiPeerPhysics()

Disassembly:
	0x01EA2678 LDR X0, [X20]
	0x01EA267C LDR W8, [X0 + 0xE0]
	0x01EA2680 CBNZ W8, 0x1EA2688
	0x01EA2684 BL 0x1C16DFC
	0x01EA2688 LDP X20, X19, [X31 + 0x10]
	0x01EA268C MOV X0, X31
	0x01EA2690 LDP X30, X21, [X31], #0x20
	0x01EA2694 B 0x1E39918
	0x01EA2698 RET

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+152]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move W8, [X8+32]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Move X30, [X31+16]
	009 Call NetworkRunner.SetSimulateMultiPeerPhysics, X0, X1
	010 Return 
	011 Call 0x1C17F20

Method: System.Void RestoreMultiPeerDefaultPhysics()

Disassembly:
	0x01EA0D48 LDRSW X9, [X10]
	0x01EA0D4C ADD X8, X8, X9, 0x4, LSL
	0x01EA0D50 ADD X0, X8, 0x138
	0x01EA0D54 LDP X8, X2, [X0]
	0x01EA0D58 MOV X0, X21
	0x01EA0D5C MOV X1, X19
	0x01EA0D60 BLR X8
	0x01EA0D64 ADRP X8, 0x225E000
	0x01EA0D68 LDR X8, [X8 + 0x920]
	0x01EA0D6C MOV X0, X19
	0x01EA0D70 LDR X1, [X8]
	0x01EA0D74 BL 0x21A453C
	0x01EA0D78 CBZ X0, 0x1EA0F8C
	0x01EA0D7C LDR W8, [X0 + 0x18]
	0x01EA0D80 MOV X21, X0
	0x01EA0D84 CMP W8, 0x1
	0x01EA0D88 B.LT 0x1EA0DD0
	0x01EA0D8C MOV W23, W31
	0x01EA0D90 CMP W23, W8
	0x01EA0D94 B.CS 0x1EA0F90
	0x01EA0D98 ADD X8, X21, W23, 0x3, SXTW
	0x01EA0D9C LDR X22, [X8 + 0x20]
	0x01EA0DA0 CBZ X22, 0x1EA0F8C
	0x01EA0DA4 MOV X0, X22
	0x01EA0DA8 MOV X1, X31
	0x01EA0DAC BL 0x3C323D4
	0x01EA0DB0 TBZ X0, 0x0, 0x1EA0DC0
	0x01EA0DB4 MOV X0, X19
	0x01EA0DB8 MOV X1, X22
	0x01EA0DBC BL 0x1EA1340
	0x01EA0DC0 LDR W8, [X21 + 0x18]
	0x01EA0DC4 ADD W23, W23, 0x1
	0x01EA0DC8 CMP W23, W8
	0x01EA0DCC B.LT 0x1EA0D90
	0x01EA0DD0 LDR X8, [X19 + 0x98]
	0x01EA0DD4 CBZ X8, 0x1EA0F8C
	0x01EA0DD8 LDR X8, [X8 + 0x28]
	0x01EA0DDC CBZ X8, 0x1EA0F8C
	0x01EA0DE0 LDRB W8, [X8 + 0x10]
	0x01EA0DE4 CBZ W8, 0x1EA0DFC
	0x01EA0DE8 ADRP X8, 0x225E000
	0x01EA0DEC LDR X8, [X8 + 0x958]
	0x01EA0DF0 MOV X0, X19
	0x01EA0DF4 LDR X1, [X8]
	0x01EA0DF8 BL 0x222B524
	0x01EA0DFC LDR X0, [X26]
	0x01EA0E00 LDR W8, [X0 + 0xE0]
	0x01EA0E04 CBNZ W8, 0x1EA0E0C
	0x01EA0E08 BL 0x1C16DFC
	0x01EA0E0C MOV X0, X19
	0x01EA0E10 BL 0x1EA1560
	0x01EA0E14 LDRB W8, [X19 + 0xD0]
	0x01EA0E18 CBNZ W8, 0x1EA0E38
	0x01EA0E1C LDR X0, [X19 + 0x50]
	0x01EA0E20 CBZ X0, 0x1EA0F8C
	0x01EA0E24 MOV X1, X31
	0x01EA0E28 BL 0x1EC08DC
	0x01EA0E2C AND W1, W0, 0x1
	0x01EA0E30 MOV X0, X19
	0x01EA0E34 BL 0x1E9E484
	0x01EA0E38 LDR X21, [X19 + 0xA8]
	0x01EA0E3C CBZ X21, 0x1EA0FD8
	0x01EA0E40 ADRP X10, 0x225E000
	0x01EA0E44 LDR X8, [X21]
	0x01EA0E48 LDR X10, [X10 + 0x840]
	0x01EA0E4C LDRH W9, [X8 + 0x12E]
	0x01EA0E50 LDR X1, [X10]
	0x01EA0E54 CBZ X9, 0x1EA0E78
	0x01EA0E58 LDR X10, [X8 + 0xB0]
	0x01EA0E5C ADD X10, X10, 0x8
	0x01EA0E60 LDUR X11, [X10 - 0x8]
	0x01EA0E64 CMP X11, X1
	0x01EA0E68 B.EQ 0x1EA0E88
	0x01EA0E6C SUBS X9, X9, 0x1
	0x01EA0E70 ADD X10, X10, 0x10
	0x01EA0E74 B.NE 0x1EA0E60
	0x01EA0E78 MOV X0, X21
	0x01EA0E7C MOV W2, W31
	0x01EA0E80 BL 0x1C5C788
	0x01EA0E84 B 0x1EA0E94
	0x01EA0E88 LDRSW X9, [X10]
	0x01EA0E8C ADD X8, X8, X9, 0x4, LSL
	0x01EA0E90 ADD X0, X8, 0x138
	0x01EA0E94 LDP X8, X2, [X0]
	0x01EA0E98 MOV X0, X21
	0x01EA0E9C MOV X1, X19
	0x01EA0EA0 BLR X8
	0x01EA0EA4 LDR X0, [X19 + 0x1B0]
	0x01EA0EA8 CBZ X0, 0x1EA0EBC
	0x01EA0EAC MOV X1, X31
	0x01EA0EB0 BL 0x1E68840
	0x01EA0EB4 MOV X21, X0
	0x01EA0EB8 CBNZ X0, 0x1EA0ED0
	0x01EA0EBC ADRP X8, 0x2255000
	0x01EA0EC0 LDR X8, [X8 + 0x278]
	0x01EA0EC4 LDR X8, [X8]
	0x01EA0EC8 LDR X8, [X8 + 0xB8]
	0x01EA0ECC LDR X21, [X8]
	0x01EA0ED0 LDR X0, [X26]
	0x01EA0ED4 LDR W8, [X0 + 0xE0]
	0x01EA0ED8 CBNZ W8, 0x1EA0EE4
	0x01EA0EDC BL 0x1C16DFC
	0x01EA0EE0 LDR X0, [X26]
	0x01EA0EE4 LDR X8, [X0 + 0xB8]
	0x01EA0EE8 MOV X0, X19
	0x01EA0EEC STR X21, [X8 + 0x18]
	0x01EA0EF0 BL 0x1EA1678
	0x01EA0EF4 LDR X0, [X19 + 0x50]
	0x01EA0EF8 CBZ X0, 0x1EA0F8C
	0x01EA0EFC MOV X1, X31
	0x01EA0F00 BL 0x1EBDF30
	0x01EA0F04 TBZ X0, 0x0, 0x1EA0F48
	0x01EA0F08 LDR X8, [X19 + 0x50]
	0x01EA0F0C CBZ X8, 0x1EA0F8C
	0x01EA0F10 LDRB W8, [X8 + 0xD0]
	0x01EA0F14 CBZ W8, 0x1EA0F48
	0x01EA0F18 ADD X0, X31, 0x0
	0x01EA0F1C MOVZ W2, 0xF8
	0x01EA0F20 MOV X1, X20
	0x01EA0F24 BL 0x3EB1AC0
	0x01EA0F28 ADD X1, X31, 0x0
	0x01EA0F2C MOV X0, X19
	0x01EA0F30 BL 0x1E9D354
	0x01EA0F34 MOV X1, X0
	0x01EA0F38 MOV X0, X19
	0x01EA0F3C MOV X2, X31
	0x01EA0F40 BL 0x3C366FC
	0x01EA0F44 B 0x1EA0F50
	0x01EA0F48 MOV X0, X19
	0x01EA0F4C BL 0x1EA041C
	0x01EA0F50 LDR X8, [X19 + 0x80]
	0x01EA0F54 CBZ X8, 0x1EA0F8C
	0x01EA0F58 LDR X0, [X8 + 0x10]
	0x01EA0F5C LDR X8, [X25 + 0x28]
	0x01EA0F60 LDR X9, [X31 + 0x428]
	0x01EA0F64 CMP X8, X9
	0x01EA0F68 B.NE 0x1EA1024
	0x01EA0F6C ADD X31, X31, 0x430
	0x01EA0F70 LDP X20, X19, [X31 + 0x50]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x253A000
	009 Move X22, 0x225D000
	010 Move W8, [X19+852]
	011 Move X22, [X22+3712]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0x225F000
	017 Move X0, [X0+2176]
	018 Call 0x1C17CF4
	019 Move X0, 0x225F000
	020 Move X0, [X0+2184]
	021 Call 0x1C17CF4
	022 Move X0, 0x225D000
	023 Move X0, [X0+3712]
	024 Call 0x1C17CF4
	025 Move X0, 0x225B000
	026 Move X0, [X0+3168]
	027 Call 0x1C17CF4
	028 Move X0, 0x2254000
	029 Move X0, [X0+1528]
	030 Call 0x1C17CF4
	031 Move X0, 0x225F000
	032 Move X0, [X0+2192]
	033 Call 0x1C17CF4
	034 Move X0, 0x225F000
	035 Move X0, [X0+2200]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X19+852], W8
	039 Move X0, [X22]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X19, 0x253A000
	045 Move W8, [X19+957]
	046 Compare W8, 0
	047 JumpIfNotEqual {53}
	048 Move X0, 0x225D000
	049 Move X0, [X0+3712]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X19+957], W8
	053 Move X8, [X22]
	054 Move X23, 0x225F000
	055 Move W9, [X8+224]
	056 Move X23, [X23+2200]
	057 Compare W9, 0
	058 JumpIfNotEqual {62}
	059 Move X0, X8
	060 Call 0x1C17DFC
	061 Move X8, [X22]
	062 Move X0, [X23]
	063 Move X8, [X8+184]
	064 Move W9, [X0+224]
	065 Move X19, [X8]
	066 Compare W9, 0
	067 JumpIfNotEqual {70}
	068 Call 0x1C17DFC
	069 Move X0, [X23]
	070 Move X8, [X0+184]
	071 Move X24, 0x225F000
	072 Move X20, [X8+16]
	073 Move X24, [X24+2176]
	074 Compare X20, 0
	075 JumpIfNotEqual {97}
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {81}
	079 Call 0x1C17DFC
	080 Move X0, [X23]
	081 Move X9, 0x225F000
	082 Move X8, [X0+184]
	083 Move X9, [X9+2184]
	084 Move X21, [X8]
	085 Move X0, [X9]
	086 Call 0x1C17F10
	087 Move X8, 0x225F000
	088 Move X8, [X8+2192]
	089 Move X1, X21
	090 Move X3, X31
	091 Move X20, X0
	092 Move X2, [X8]
	093 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	094 Move X8, [X23]
	095 Move X8, [X8+184]
	096 Move [X8+16], X20
	097 Move X2, [X24]
	098 Move X0, X19
	099 Move X1, X20
	100 Call 0x21C0ABC, X0, X1
	101 Move X8, [X22]
	102 Move W19, W0
	103 Move W9, [X8+224]
	104 Compare W9, 0
	105 JumpIfEqual {108}
	106 Compare W19, 0
	107 JumpIfEqual {113}
	108 Move X0, X8
	109 Call 0x1C17DFC
	110 Move X8, [X22]
	111 Compare W19, 0
	112 JumpIfNotEqual {157}
	113 Move X9, [X8+184]
	114 Move W10, [X9+13]
	115 Compare W10, 0
	116 JumpIfEqual {157}
	117 Move X19, 0x225B000
	118 Move W10, [X8+224]
	119 Move X19, [X19+3168]
	120 Compare W10, 0
	121 JumpIfNotEqual {126}
	122 Move X0, X8
	123 Call 0x1C17DFC
	124 Move X8, [X22]
	125 Move X9, [X8+184]
	126 Move X0, [X19]
	127 Move X20, 0x2254000
	128 Move W19, [X9+8]
	129 Move W8, [X0+224]
	130 Move X20, [X20+1528]
	131 Compare W8, 0
	132 JumpIfNotEqual {134}
	133 Call 0x1C17DFC
	134 Move W0, W19
	135 Move X1, X31
	136 Call Physics2D.set_simulationMode, X0
	137 Move X8, [X22]
	138 Move X0, [X20]
	139 Move X8, [X8+184]
	140 Move W9, [X0+224]
	141 Move W19, [X8+12]
	142 Compare W9, 0
	143 JumpIfNotEqual {145}
	144 Call 0x1C17DFC
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X20, [X31+48]
	147 Move X19, [X31+56]
	148 Move X22, [X31+32]
	149 Move X21, [X31+40]
	150 Move X24, [X31+16]
	151 Move X23, [X31+24]
	152 NotImplemented "Instruction CSET not yet implemented."
	153 Move X1, X31
	154 Move X30, [X31+64]
	155 Call Physics.set_autoSimulation, X0
	156 Return 
	157 Move X20, [X31+48]
	158 Move X19, [X31+56]
	159 Move X22, [X31+32]
	160 Move X21, [X31+40]
	161 Move X24, [X31+16]
	162 Move X23, [X31+24]
	163 Move X30, [X31+64]
	164 Return 

Method: System.Void SetSimulateMultiPeerPhysics(System.Boolean value)

Disassembly:
	0x01EA7FB8 ADRP X8, 0x2257000
	0x01EA7FBC LDR X8, [X8 + 0xD18]
	0x01EA7FC0 LDR X0, [X8]
	0x01EA7FC4 BL 0x1C16F10
	0x01EA7FC8 ADRP X8, 0x2257000
	0x01EA7FCC LDR X8, [X8 + 0xD38]
	0x01EA7FD0 MOV X1, X20
	0x01EA7FD4 MOV X3, X31
	0x01EA7FD8 MOV X22, X0
	0x01EA7FDC LDR X2, [X8]
	0x01EA7FE0 BL 0x2D32A18
	0x01EA7FE4 MOV X0, X19
	0x01EA7FE8 MOV X1, X21
	0x01EA7FEC MOV X2, X22
	0x01EA7FF0 MOV X3, X31
	0x01EA7FF4 BL 0x1EBB958
	0x01EA7FF8 B 0x1EA80F8
	0x01EA7FFC ADRP X8, 0x2257000
	0x01EA8000 LDR X8, [X8 + 0x140]
	0x01EA8004 ADRP X20, 0x2256000
	0x01EA8008 LDR X20, [X20 + 0xD40]
	0x01EA800C ADRP X22, 0x2253000
	0x01EA8010 LDR X0, [X8]
	0x01EA8014 ADRP X23, 0x2256000
	0x01EA8018 LDR X22, [X22 + 0x578]
	0x01EA801C LDR X23, [X23 + 0x4D8]
	0x01EA8020 ADD X1, X31, 0x8
	0x01EA8024 STR W21, [X31 + 0x8]
	0x01EA8028 BL 0x1C16E04
	0x01EA802C LDR X8, [X20]
	0x01EA8030 MOV X1, X0
	0x01EA8034 MOV X2, X31
	0x01EA8038 MOV X0, X8
	0x01EA803C BL 0x321EFD0
	0x01EA8040 LDR X8, [X22]
	0x01EA8044 MOV X20, X0
	0x01EA8048 MOV X0, X8
	0x01EA804C BL 0x1C16F10
	0x01EA8050 LDR X2, [X23]
	0x01EA8054 MOV X1, X20
	0x01EA8058 MOV X3, X31
	0x01EA805C MOV X21, X0
	0x01EA8060 BL 0x330E16C
	0x01EA8064 MOV X0, X19
	0x01EA8068 MOV X1, X21
	0x01EA806C MOV X2, X31
	0x01EA8070 BL 0x1EBB8C4
	0x01EA8074 LDP X20, X19, [X31 + 0x30]
	0x01EA8078 LDP X22, X21, [X31 + 0x20]
	0x01EA807C LDP X30, X23, [X31 + 0x10]
	0x01EA8080 ADD X31, X31, 0x40
	0x01EA8084 RET
	0x01EA8088 LDR X20, [X20 + 0x100]
	0x01EA808C CBZ X20, 0x1EA8114
	0x01EA8090 ADRP X10, 0x2252000
	0x01EA8094 LDR X8, [X20]
	0x01EA8098 LDR X10, [X10 + 0xCB0]
	0x01EA809C LDRH W9, [X8 + 0x12E]
	0x01EA80A0 LDR X1, [X10]
	0x01EA80A4 CBZ X9, 0x1EA80C8
	0x01EA80A8 LDR X10, [X8 + 0xB0]
	0x01EA80AC ADD X10, X10, 0x8
	0x01EA80B0 LDUR X11, [X10 - 0x8]
	0x01EA80B4 CMP X11, X1
	0x01EA80B8 B.EQ 0x1EA80D8
	0x01EA80BC SUBS X9, X9, 0x1
	0x01EA80C0 ADD X10, X10, 0x10
	0x01EA80C4 B.NE 0x1EA80B0
	0x01EA80C8 MOVZ W2, 0xA
	0x01EA80CC MOV X0, X20
	0x01EA80D0 BL 0x1C5C788
	0x01EA80D4 B 0x1EA80E8
	0x01EA80D8 LDR W9, [X10]
	0x01EA80DC ADD W9, W9, 0xA
	0x01EA80E0 ADD X8, X8, W9, 0x4, SXTW
	0x01EA80E4 ADD X0, X8, 0x138
	0x01EA80E8 LDP X8, X2, [X0]
	0x01EA80EC MOV X0, X20
	0x01EA80F0 MOV X1, X19
	0x01EA80F4 BLR X8
	0x01EA80F8 LDP X20, X19, [X31 + 0x30]
	0x01EA80FC LDP X22, X21, [X31 + 0x20]
	0x01EA8100 LDP X30, X23, [X31 + 0x10]
	0x01EA8104 MOV X2, X1
	0x01EA8108 MOV X1, X0
	0x01EA810C ADD X31, X31, 0x40
	0x01EA8110 B 0x1EA7788
	0x01EA8114 BL 0x1C16F20
	0x01EA8118 SUB X31, X31, 0x30
	0x01EA811C STP X30, X21, [X31 + 0x10]
	0x01EA8120 STP X20, X19, [X31 + 0x20]
	0x01EA8124 ADRP X21, 0x2531000
	0x01EA8128 LDRB W8, [X21 + 0x35E]
	0x01EA812C MOV W19, W1
	0x01EA8130 MOV X20, X0
	0x01EA8134 TBNZ X8, 0x0, 0x1EA8158
	0x01EA8138 ADRP X0, 0x224E000
	0x01EA813C LDR X0, [X0 + 0x398]
	0x01EA8140 BL 0x1C16CF4
	0x01EA8144 ADRP X0, 0x2256000
	0x01EA8148 LDR X0, [X0 + 0xCA8]
	0x01EA814C BL 0x1C16CF4
	0x01EA8150 MOVZ W8, 0x1
	0x01EA8154 STRB W8, [X21 + 0x35E]
	0x01EA8158 MOV X0, X20
	0x01EA815C STR X31, [X31 + 0x8]
	0x01EA8160 BL 0x1EA62BC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x2533000
	008 Move X21, 0x2256000
	009 Move W8, [X23+853]
	010 Move X21, [X21+3712]
	011 Move W19, W1
	012 Move X20, X0
	013 And W22, W1, 1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x2256000
	019 Move X0, [X0+3712]
	020 Call 0x1C17CF4
	021 Move X0, 0x2254000
	022 Move X0, [X0+3168]
	023 Call 0x1C17CF4
	024 Move X0, 0x224D000
	025 Move X0, [X0+1528]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+853], W8
	029 Move [X20+248], W22
	030 Move X0, [X21]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X21]
	036 Move X8, [X0+184]
	037 Move X23, 0x2253000
	038 Move X22, 0x224C000
	039 Move W8, [X8+13]
	040 Move X23, [X23+3168]
	041 Move X22, [X22+1528]
	042 Compare W8, 0
	043 JumpIfEqual {57}
	044 Move TEMP, X19
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {92}
	048 Move X0, [X23]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move W0, 2
	054 Move X1, X31
	055 Call Physics2D.set_simulationMode, X0
	056 Move W19, W31
	057 Move X0, [X23]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X31
	063 Call Physics2D.get_simulationMode
	064 Move X8, [X21]
	065 Move W20, W0
	066 Move W9, [X8+224]
	067 Compare W9, 0
	068 JumpIfNotEqual {72}
	069 Move X0, X8
	070 Call 0x1C17DFC
	071 Move X8, [X21]
	072 Move X8, [X8+184]
	073 Move [X8+8], W20
	074 Move X0, [X22]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X0, X31
	080 Call Physics.get_autoSimulation
	081 Move W8, W0
	082 Move X0, [X21]
	083 And W8, W8, 1
	084 Move W10, 1
	085 Move X9, [X0+184]
	086 Move [X9+12], W8
	087 Move [X9+13], W10
	088 Move TEMP, X19
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {48}
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {97}
	095 Call 0x1C17DFC
	096 Move X0, [X21]
	097 Move X8, [X23]
	098 Move X9, [X0+184]
	099 Move W10, [X8+224]
	100 Move W19, [X9+8]
	101 Compare W10, 0
	102 JumpIfNotEqual {105}
	103 Move X0, X8
	104 Call 0x1C17DFC
	105 Move W0, W19
	106 Move X1, X31
	107 Call Physics2D.set_simulationMode, X0
	108 Move X0, [X21]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {114}
	112 Call 0x1C17DFC
	113 Move X0, [X21]
	114 Move X8, [X0+184]
	115 Move W8, [X8+12]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 NotImplemented "Instruction CSET not yet implemented."
	118 Move X0, [X22]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {123}
	122 Call 0x1C17DFC
	123 Move W0, W19
	124 Move X20, [X31+32]
	125 Move X19, [X31+40]
	126 Move X22, [X31+16]
	127 Move X21, [X31+24]
	128 Move X1, X31
	129 Move X30, [X31+48]
	130 Move X23, [X31+56]
	131 Call Physics.set_autoSimulation, X0
	132 Return 

Method: System.Boolean TryGetPhysicsInfo(out Fusion.NetworkPhysicsInfo info)

Disassembly:
	0x01EA8164 TBZ X0, 0x0, 0x1EA81E0
	0x01EA8168 LDR W8, [X20 + 0x5C]
	0x01EA816C CBNZ W8, 0x1EA8200
	0x01EA8170 LDR X8, [X20 + 0x178]
	0x01EA8174 CBZ X8, 0x1EA8190
	0x01EA8178 TBZ X19, 0x0, 0x1EA8220
	0x01EA817C ADD X0, X20, 0x140
	0x01EA8180 LDP X20, X19, [X31 + 0x20]
	0x01EA8184 LDP X30, X21, [X31 + 0x10]
	0x01EA8188 ADD X31, X31, 0x30
	0x01EA818C RET
	0x01EA8190 LDR X21, [X20 + 0x50]
	0x01EA8194 CBZ X21, 0x1EA8178
	0x01EA8198 ADRP X8, 0x224E000
	0x01EA819C LDR X8, [X8 + 0x398]
	0x01EA81A0 LDR X0, [X8]
	0x01EA81A4 LDR W8, [X0 + 0xE0]
	0x01EA81A8 CBNZ W8, 0x1EA81B0
	0x01EA81AC BL 0x1C16DFC
	0x01EA81B0 MOV X0, X31
	0x01EA81B4 BL 0x1E92E50
	0x01EA81B8 ADRP X8, 0x2256000
	0x01EA81BC LDR X8, [X8 + 0xCA8]
	0x01EA81C0 AND X1, X0, 0x0
	0x01EA81C4 ADD X2, X31, 0x8
	0x01EA81C8 MOV X0, X21
	0x01EA81CC LDR X3, [X8]
	0x01EA81D0 BL 0x22551FC
	0x01EA81D4 TBZ X0, 0x0, 0x1EA8178
	0x01EA81D8 LDR X0, [X31 + 0x8]
	0x01EA81DC B 0x1EA8180
	0x01EA81E0 ADRP X0, 0x224B000
	0x01EA81E4 LDR X0, [X0 + 0x5B0]
	0x01EA81E8 BL 0x1C16D08
	0x01EA81EC BL 0x1C16F10
	0x01EA81F0 MOV X19, X0
	0x01EA81F4 ADRP X0, 0x2256000
	0x01EA81F8 LDR X0, [X0 + 0xC98]
	0x01EA81FC B 0x1EA823C
	0x01EA8200 ADRP X0, 0x224B000
	0x01EA8204 LDR X0, [X0 + 0x5B0]
	0x01EA8208 BL 0x1C16D08
	0x01EA820C BL 0x1C16F10
	0x01EA8210 MOV X19, X0
	0x01EA8214 ADRP X0, 0x2256000
	0x01EA8218 LDR X0, [X0 + 0xD48]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2532000
	007 Move W8, [X21+854]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x224F000
	015 Move X0, [X0+920]
	016 Call 0x1C17CF4
	017 Move X0, 0x2257000
	018 Move X0, [X0+3216]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+854], W8
	022 Move [X31+8], X31
	023 Move X20, [X20+80]
	024 Compare X20, 0
	025 JumpIfEqual {50}
	026 Move X8, 0x224F000
	027 Move X8, [X8+920]
	028 Move X21, 0x2257000
	029 Move X0, [X8]
	030 Move W8, [X0+224]
	031 Move X21, [X21+3216]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X31
	036 Call NetworkId.get_PhysicsInfo
	037 Move X3, [X21]
	038 And X1, X0, 0
	039 Add X2, X31, 8
	040 Move X0, X20
	041 Call 0x22561B8, X0, X1, X2
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {50}
	046 Move X8, [X31+8]
	047 Move W0, 1
	048 Move V0, [X8]
	049 Move [X19], S0
	050 Move W0, W31
	051 Move [X19], W31
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X30, [X31+16]
	055 Move X21, [X31+24]
	056 Add X31, X31, 48
	057 Return X0

Method: System.Boolean TrySetPhysicsInfo(Fusion.NetworkPhysicsInfo info)

Disassembly:
	0x01EA821C B 0x1EA823C
	0x01EA8220 ADRP X0, 0x224B000
	0x01EA8224 LDR X0, [X0 + 0x5B0]
	0x01EA8228 BL 0x1C16D08
	0x01EA822C BL 0x1C16F10
	0x01EA8230 MOV X19, X0
	0x01EA8234 ADRP X0, 0x2256000
	0x01EA8238 LDR X0, [X0 + 0xD50]
	0x01EA823C BL 0x1C16D08
	0x01EA8240 MOV X1, X0
	0x01EA8244 MOV X0, X19
	0x01EA8248 MOV X2, X31
	0x01EA824C BL 0x337DF1C
	0x01EA8250 ADRP X0, 0x2256000
	0x01EA8254 LDR X0, [X0 + 0xD58]
	0x01EA8258 BL 0x1C16D08
	0x01EA825C MOV X1, X0
	0x01EA8260 MOV X0, X19
	0x01EA8264 BL 0x1C16DEC
	0x01EA8268 MOV X1, X31
	0x01EA826C B 0x33BDD8C
	0x01EA8270 STR X30, [X31 - 0x40]!
	0x01EA8274 STP X24, X23, [X31 + 0x10]
	0x01EA8278 STP X22, X21, [X31 + 0x20]
	0x01EA827C STP X20, X19, [X31 + 0x30]
	0x01EA8280 ADRP X21, 0x2531000
	0x01EA8284 LDRB W8, [X21 + 0x361]
	0x01EA8288 MOV X19, X1
	0x01EA828C MOV X20, X0
	0x01EA8290 TBNZ X8, 0x0, 0x1EA82C0
	0x01EA8294 ADRP X0, 0x2256000
	0x01EA8298 LDR X0, [X0 + 0x768]
	0x01EA829C BL 0x1C16CF4
	0x01EA82A0 ADRP X0, 0x2256000
	0x01EA82A4 LDR X0, [X0 + 0x770]
	0x01EA82A8 BL 0x1C16CF4
	0x01EA82AC ADRP X0, 0x2256000
	0x01EA82B0 LDR X0, [X0 + 0x778]
	0x01EA82B4 BL 0x1C16CF4
	0x01EA82B8 MOVZ W8, 0x1
	0x01EA82BC STRB W8, [X21 + 0x361]
	0x01EA82C0 LDR X8, [X20 + 0x68]
	0x01EA82C4 CBZ X8, 0x1EA836C
	0x01EA82C8 ADRP X23, 0x2256000
	0x01EA82CC ADRP X24, 0x2256000
	0x01EA82D0 LDR X23, [X23 + 0x778]
	0x01EA82D4 LDR X24, [X24 + 0x768]
	0x01EA82D8 MOV W21, W31
	0x01EA82DC LDR W9, [X8 + 0x18]
	0x01EA82E0 CMP W21, W9
	0x01EA82E4 B.GE 0x1EA83EC
	0x01EA82E8 LDR X2, [X23]
	0x01EA82EC MOV X0, X8
	0x01EA82F0 MOV W1, W21
	0x01EA82F4 BL 0x301BCCC
	0x01EA82F8 MOV X22, X0
	0x01EA82FC CBZ X0, 0x1EA8370
	0x01EA8300 LDR X8, [X22]
	0x01EA8304 LDR X1, [X24]
	0x01EA8308 LDRH W9, [X8 + 0x12E]
	0x01EA830C CBZ X9, 0x1EA8330
	0x01EA8310 LDR X10, [X8 + 0xB0]
	0x01EA8314 ADD X10, X10, 0x8
	0x01EA8318 LDUR X11, [X10 - 0x8]
	0x01EA831C CMP X11, X1
	0x01EA8320 B.EQ 0x1EA8340
	0x01EA8324 SUBS X9, X9, 0x1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2532000
	007 Move W8, [X20+855]
	008 Move V8, V0
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x224F000
	015 Move X0, [X0+920]
	016 Call 0x1C17CF4
	017 Move X0, 0x2257000
	018 Move X0, [X0+3216]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+855], W8
	022 Move X0, X19
	023 Move [X31+8], X31
	024 Call NetworkRunner.get_IsSceneAuthority, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {62}
	029 Move X19, [X19+80]
	030 Compare X19, 0
	031 JumpIfEqual {55}
	032 Move X8, 0x224F000
	033 Move X8, [X8+920]
	034 Move X20, 0x2257000
	035 Move X0, [X8]
	036 Move W8, [X0+224]
	037 Move X20, [X20+3216]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X31
	042 Call NetworkId.get_PhysicsInfo
	043 Move X3, [X20]
	044 And X1, X0, 0
	045 Add X2, X31, 8
	046 Move X0, X19
	047 Call 0x22561B8, X0, X1, X2
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {55}
	052 Move X8, [X31+8]
	053 Move W0, 1
	054 Move [X8], S8
	055 Move W0, W31
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X30, [X31+24]
	059 Move V8, [X31+16]
	060 Add X31, X31, 48
	061 Return X0
	062 Move X0, 0x224C000
	063 Move X0, [X0+1456]
	064 Call 0x1C17D08
	065 Call 0x1C17F10
	066 Move X19, X0
	067 Move X0, 0x2257000
	068 Move X0, [X0+3224]
	069 Call 0x1C17D08
	070 Move X1, X0
	071 Move X0, X19
	072 Move X2, X31
	073 Call InvalidOperationException..ctor, X0, X1
	074 Move X0, 0x2257000
	075 Move X0, [X0+3232]
	076 Call 0x1C17D08
	077 Move X1, X0
	078 Move X0, X19
	079 Call 0x1C17DEC

Method: System.Boolean get_IsSceneAuthority()

Disassembly:
	0x01EA72BC MOVZ W0, 0x1
	0x01EA72C0 STR S8, [X8]
	0x01EA72C4 B 0x1EA72CC
	0x01EA72C8 MOV W0, W31
	0x01EA72CC LDP X20, X19, [X31 + 0x20]
	0x01EA72D0 LDR X30, [X31 + 0x18]
	0x01EA72D4 LDR V8, [X31 + 0x10]
	0x01EA72D8 ADD X31, X31, 0x30
	0x01EA72DC RET
	0x01EA72E0 ADRP X0, 0x224C000
	0x01EA72E4 LDR X0, [X0 + 0x5B0]
	0x01EA72E8 BL 0x1C16D08
	0x01EA72EC BL 0x1C16F10

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+80]
	005 Compare X0, 0
	006 JumpIfEqual {17}
	007 Move X1, X31
	008 Call Simulation.get_IsServer, X0
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {17}
	013 Move W0, 1
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return X0
	017 Move X0, X19
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Call NetworkRunner.get_IsSharedModeMasterClient, X0
	021 Return X0

Method: System.Boolean get_IsSceneManagerBusy()

Disassembly:
	0x01EA8328 ADD X10, X10, 0x10
	0x01EA832C B.NE 0x1EA8318
	0x01EA8330 MOVZ W2, 0x12
	0x01EA8334 MOV X0, X22
	0x01EA8338 BL 0x1C5C788
	0x01EA833C B 0x1EA8350
	0x01EA8340 LDR W9, [X10]
	0x01EA8344 ADD W9, W9, 0x12
	0x01EA8348 ADD X8, X8, W9, 0x4, SXTW
	0x01EA834C ADD X0, X8, 0x138
	0x01EA8350 LDP X8, X2, [X0]
	0x01EA8354 MOV X0, X22
	0x01EA8358 MOV X1, X20
	0x01EA835C BLR X8
	0x01EA8360 LDR X8, [X20 + 0x68]
	0x01EA8364 ADD W21, W21, 0x1
	0x01EA8368 CBNZ X8, 0x1EA82DC
	0x01EA836C BL 0x1C16F20
	0x01EA8370 BL 0x1C16F20
	0x01EA8374 B 0x1EA837C
	0x01EA8378 B 0x1EA837C
	0x01EA837C MOV X21, X0
	0x01EA8380 CMP W1, 0x1
	0x01EA8384 B.NE 0x1EA8434
	0x01EA8388 MOV X0, X21
	0x01EA838C BL 0x3EB1AD0
	0x01EA8390 MOV X21, X0
	0x01EA8394 ADRP X0, 0x224B000
	0x01EA8398 LDR X0, [X0 + 0x7D0]
	0x01EA839C BL 0x1C16D08
	0x01EA83A0 LDR X8, [X21]
	0x01EA83A4 LDR X1, [X8]
	0x01EA83A8 BL 0x1C17270
	0x01EA83AC TBZ X0, 0x0, 0x1EA840C
	0x01EA83B0 LDR X21, [X21]
	0x01EA83B4 BL 0x3EB1AE0
	0x01EA83B8 ADRP X0, 0x2253000
	0x01EA83BC LDR X0, [X0 + 0x8B0]
	0x01EA83C0 BL 0x1C16D08
	0x01EA83C4 LDR W8, [X0 + 0xE0]
	0x01EA83C8 CBNZ W8, 0x1EA83D0
	0x01EA83CC BL 0x1C16DFC
	0x01EA83D0 ADRP X0, 0x2256000
	0x01EA83D4 LDR X0, [X0 + 0x868]
	0x01EA83D8 BL 0x1C16D08
	0x01EA83DC MOV X2, X0
	0x01EA83E0 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2532000
	005 Move W8, [X20+856]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2253000
	012 Move X0, [X0+3248]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+856], W8
	016 Move X8, [X19+376]
	017 Compare X8, 0
	018 JumpIfEqual {20}
	019 Move W0, 1
	020 Move X19, [X19+256]
	021 Compare X19, 0
	022 JumpIfEqual {51}
	023 Move X10, 0x2253000
	024 Move X8, [X19]
	025 Move X10, [X10+3248]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move W2, 2
	037 Move X0, X19
	038 Call 0x1C5D788
	039 Move W9, [X10]
	040 Add W9, W9, 2
	041 Add X8, X8, W9
	042 Add X0, X8, 312
	043 Move X8, [X0]
	044 Move X1, [X0+8]
	045 Move X0, X19
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {19}
	051 Move W0, W31
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Return X0

Method: System.Boolean TryGetSceneInfo(out Fusion.NetworkSceneInfo sceneInfo)

Disassembly:
	0x01EA83E4 MOV X1, X21
	0x01EA83E8 BL 0x2213878

ISIL:
	001 Move W2, 1

Method: System.Boolean TryGetSceneInfo(out Fusion.NetworkSceneInfo sceneInfo, System.Boolean allowFallback)

Disassembly:
	0x01EA83EC LDR X0, [X20 + 0x60]
	0x01EA83F0 AND X1, X19, 0x0
	0x01EA83F4 LDP X20, X19, [X31 + 0x30]
	0x01EA83F8 LDP X22, X21, [X31 + 0x20]
	0x01EA83FC LDP X24, X23, [X31 + 0x10]
	0x01EA8400 MOV X2, X31
	0x01EA8404 LDR X30, [X31], #0x40
	0x01EA8408 B 0x1E73258
	0x01EA840C MOVZ W0, 0x8
	0x01EA8410 BL 0x3EB1AF0
	0x01EA8414 LDR X8, [X21]
	0x01EA8418 STR X8, [X0]
	0x01EA841C ADRP X1, 0x200C000
	0x01EA8420 ADD X1, X1, 0xE58
	0x01EA8424 MOV X2, X31
	0x01EA8428 BL 0x3EB1B00
	0x01EA842C MOV X21, X0
	0x01EA8430 BL 0x3EB1AE0
	0x01EA8434 MOV X0, X21
	0x01EA8438 BL 0x1D2C690
	0x01EA843C BL 0x1990590
	0x01EA8440 STR X30, [X31 - 0x40]!
	0x01EA8444 STP X24, X23, [X31 + 0x10]
	0x01EA8448 STP X22, X21, [X31 + 0x20]
	0x01EA844C STP X20, X19, [X31 + 0x30]
	0x01EA8450 ADRP X21, 0x2531000
	0x01EA8454 LDRB W8, [X21 + 0x362]
	0x01EA8458 MOV X19, X1
	0x01EA845C MOV X20, X0
	0x01EA8460 TBNZ X8, 0x0, 0x1EA8490
	0x01EA8464 ADRP X0, 0x2256000
	0x01EA8468 LDR X0, [X0 + 0x768]
	0x01EA846C BL 0x1C16CF4
	0x01EA8470 ADRP X0, 0x2256000
	0x01EA8474 LDR X0, [X0 + 0x770]
	0x01EA8478 BL 0x1C16CF4
	0x01EA847C ADRP X0, 0x2256000
	0x01EA8480 LDR X0, [X0 + 0x778]
	0x01EA8484 BL 0x1C16CF4
	0x01EA8488 MOVZ W8, 0x1
	0x01EA848C STRB W8, [X21 + 0x362]
	0x01EA8490 LDR X8, [X20 + 0x68]
	0x01EA8494 CBZ X8, 0x1EA853C
	0x01EA8498 ADRP X23, 0x2256000
	0x01EA849C ADRP X24, 0x2256000
	0x01EA84A0 LDR X23, [X23 + 0x778]
	0x01EA84A4 LDR X24, [X24 + 0x768]
	0x01EA84A8 MOV W21, W31
	0x01EA84AC LDR W9, [X8 + 0x18]
	0x01EA84B0 CMP W21, W9
	0x01EA84B4 B.GE 0x1EA85BC
	0x01EA84B8 LDR X2, [X23]
	0x01EA84BC MOV X0, X8
	0x01EA84C0 MOV W1, W21
	0x01EA84C4 BL 0x301BCCC
	0x01EA84C8 MOV X22, X0
	0x01EA84CC CBZ X0, 0x1EA8540
	0x01EA84D0 LDR X8, [X22]
	0x01EA84D4 LDR X1, [X24]
	0x01EA84D8 LDRH W9, [X8 + 0x12E]
	0x01EA84DC CBZ X9, 0x1EA8500
	0x01EA84E0 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2532000
	007 Move W8, [X22+857]
	008 Move W21, W2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x224F000
	016 Move X0, [X0+920]
	017 Call 0x1C17CF4
	018 Move X0, 0x2257000
	019 Move X0, [X0+3240]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+857], W8
	023 Move [X31+8], X31
	024 Move X22, [X20+80]
	025 Compare X22, 0
	026 JumpIfEqual {69}
	027 Move X8, [X20+376]
	028 Compare X8, 0
	029 JumpIfNotEqual {56}
	030 Move X8, 0x224F000
	031 Move X8, [X8+920]
	032 Move X0, [X8]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X31
	038 Call NetworkId.get_SceneInfo
	039 Move X8, 0x2257000
	040 Move X8, [X8+3240]
	041 And X1, X0, 0
	042 Add X2, X31, 8
	043 Move X0, X22
	044 Move X3, [X8]
	045 Call Simulation.TryGetStructData, X0, X1, X2
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {56}
	050 Move X8, [X31+8]
	051 Move W9, [X8+48]
	052 Move V1, [X8+16]
	053 Move V0, [X8+32]
	054 Move V2, [X8]
	055 Move [X19+48], W9
	056 Move TEMP, X21
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {69}
	060 Move W8, [X20+368]
	061 Move V1, [X20+336]
	062 Move V0, [X20+352]
	063 Move V2, [X20+20]
	064 Move [X19+48], W8
	065 Move [X19+16], V1
	066 Move [X19+24], V0
	067 Move [X19], V2
	068 Move W0, 1
	069 Move W0, W31
	070 NotImplemented "Instruction MOVI not yet implemented."
	071 Move [X19+48], W31
	072 Move [X19+16], V0
	073 Move [X19+24], V0
	074 Move [X19], V0
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X30, [X31+48]
	080 Return X0

Method: Fusion.SceneRef ValidateSceneName(System.String sceneName)

Disassembly:
	0x01EA84E4 ADD X10, X10, 0x8
	0x01EA84E8 LDUR X11, [X10 - 0x8]
	0x01EA84EC CMP X11, X1
	0x01EA84F0 B.EQ 0x1EA8510
	0x01EA84F4 SUBS X9, X9, 0x1
	0x01EA84F8 ADD X10, X10, 0x10
	0x01EA84FC B.NE 0x1EA84E8
	0x01EA8500 MOVZ W2, 0x11
	0x01EA8504 MOV X0, X22
	0x01EA8508 BL 0x1C5C788
	0x01EA850C B 0x1EA8520
	0x01EA8510 LDR W9, [X10]
	0x01EA8514 ADD W9, W9, 0x11
	0x01EA8518 ADD X8, X8, W9, 0x4, SXTW
	0x01EA851C ADD X0, X8, 0x138
	0x01EA8520 LDP X8, X2, [X0]
	0x01EA8524 MOV X0, X22
	0x01EA8528 MOV X1, X20
	0x01EA852C BLR X8
	0x01EA8530 LDR X8, [X20 + 0x68]
	0x01EA8534 ADD W21, W21, 0x1
	0x01EA8538 CBNZ X8, 0x1EA84AC
	0x01EA853C BL 0x1C16F20
	0x01EA8540 BL 0x1C16F20
	0x01EA8544 B 0x1EA854C
	0x01EA8548 B 0x1EA854C
	0x01EA854C MOV X21, X0
	0x01EA8550 CMP W1, 0x1
	0x01EA8554 B.NE 0x1EA8604
	0x01EA8558 MOV X0, X21
	0x01EA855C BL 0x3EB1AD0
	0x01EA8560 MOV X21, X0
	0x01EA8564 ADRP X0, 0x224B000
	0x01EA8568 LDR X0, [X0 + 0x7D0]
	0x01EA856C BL 0x1C16D08
	0x01EA8570 LDR X8, [X21]
	0x01EA8574 LDR X1, [X8]
	0x01EA8578 BL 0x1C17270
	0x01EA857C TBZ X0, 0x0, 0x1EA85DC
	0x01EA8580 LDR X21, [X21]
	0x01EA8584 BL 0x3EB1AE0
	0x01EA8588 ADRP X0, 0x2253000
	0x01EA858C LDR X0, [X0 + 0x8B0]
	0x01EA8590 BL 0x1C16D08
	0x01EA8594 LDR W8, [X0 + 0xE0]
	0x01EA8598 CBNZ W8, 0x1EA85A0
	0x01EA859C BL 0x1C16DFC
	0x01EA85A0 ADRP X0, 0x2256000
	0x01EA85A4 LDR X0, [X0 + 0x868]
	0x01EA85A8 BL 0x1C16D08
	0x01EA85AC MOV X2, X0
	0x01EA85B0 MOV X0, X20
	0x01EA85B4 MOV X1, X21
	0x01EA85B8 BL 0x2213878
	0x01EA85BC LDR X0, [X20 + 0x60]
	0x01EA85C0 MOV X1, X19
	0x01EA85C4 LDP X20, X19, [X31 + 0x30]
	0x01EA85C8 LDP X22, X21, [X31 + 0x20]
	0x01EA85CC LDP X24, X23, [X31 + 0x10]
	0x01EA85D0 MOV X2, X31
	0x01EA85D4 LDR X30, [X31], #0x40
	0x01EA85D8 B 0x1E72EF0
	0x01EA85DC MOVZ W0, 0x8
	0x01EA85E0 BL 0x3EB1AF0
	0x01EA85E4 LDR X8, [X21]
	0x01EA85E8 STR X8, [X0]
	0x01EA85EC ADRP X1, 0x200C000
	0x01EA85F0 ADD X1, X1, 0xE58
	0x01EA85F4 MOV X2, X31
	0x01EA85F8 BL 0x3EB1B00
	0x01EA85FC MOV X21, X0
	0x01EA8600 BL 0x3EB1AE0
	0x01EA8604 MOV X0, X21
	0x01EA8608 BL 0x1D2C690
	0x01EA860C BL 0x1990590
	0x01EA8610 STR X30, [X31 - 0x20]!
	0x01EA8614 STP X20, X19, [X31 + 0x10]
	0x01EA8618 ADRP X20, 0x2531000
	0x01EA861C LDRB W8, [X20 + 0x363]
	0x01EA8620 MOV X19, X0
	0x01EA8624 TBNZ X8, 0x0, 0x1EA863C
	0x01EA8628 ADRP X0, 0x2252000
	0x01EA862C LDR X0, [X0 + 0xCB0]
	0x01EA8630 BL 0x1C16CF4
	0x01EA8634 MOVZ W8, 0x1
	0x01EA8638 STRB W8, [X20 + 0x363]
	0x01EA863C LDR X19, [X19 + 0x100]
	0x01EA8640 CBZ X19, 0x1EA868C
	0x01EA8644 ADRP X10, 0x2252000
	0x01EA8648 LDR X8, [X19]
	0x01EA864C LDR X10, [X10 + 0xCB0]
	0x01EA8650 LDRH W9, [X8 + 0x12E]
	0x01EA8654 LDR X1, [X10]
	0x01EA8658 CBZ X9, 0x1EA867C
	0x01EA865C LDR X10, [X8 + 0xB0]
	0x01EA8660 ADD X10, X10, 0x8
	0x01EA8664 LDUR X11, [X10 - 0x8]
	0x01EA8668 CMP X11, X1
	0x01EA866C B.EQ 0x1EA8694
	0x01EA8670 SUBS X9, X9, 0x1
	0x01EA8674 ADD X10, X10, 0x10
	0x01EA8678 B.NE 0x1EA8664
	0x01EA867C MOVZ W2, 0x3
	0x01EA8680 MOV X0, X19
	0x01EA8684 BL 0x1C5C788
	0x01EA8688 B 0x1EA86A4
	0x01EA868C MOV X0, X31
	0x01EA8690 B 0x1EA86B4
	0x01EA8694 LDR W9, [X10]
	0x01EA8698 ADD W9, W9, 0x3
	0x01EA869C ADD X8, X8, W9, 0x4, SXTW
	0x01EA86A0 ADD X0, X8, 0x138
	0x01EA86A4 LDP X8, X1, [X0]
	0x01EA86A8 MOV X0, X19
	0x01EA86AC BLR X8
	0x01EA86B0 AND X0, X0, 0x0
	0x01EA86B4 LDP X20, X19, [X31 + 0x10]
	0x01EA86B8 LDR X30, [X31], #0x20
	0x01EA86BC RET

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2532000
	007 Move W8, [X21+858]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2253000
	015 Move X0, [X0+3248]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+858], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Move [X31+8], W31
	022 Call String.IsNullOrEmpty, X0
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {70}
	027 Move X20, [X20+256]
	028 Compare X20, 0
	029 JumpIfEqual {87}
	030 Move X10, 0x2253000
	031 Move X8, [X20]
	032 Move X10, [X10+3248]
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move X1, [X10]
	035 Compare X9, 0
	036 JumpIfEqual {43}
	037 Move X10, [X8+176]
	038 Add X10, X10, 8
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract X9, X9, 1
	042 Add X10, X10, 16
	043 Move W2, 12
	044 Move X0, X20
	045 Call 0x1C5D788
	046 Move W9, [X10]
	047 Add W9, W9, 12
	048 Add X8, X8, W9
	049 Add X0, X8, 312
	050 Move X8, [X0]
	051 Move X2, [X0+8]
	052 Move X0, X20
	053 Move X1, X19
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move [X31+8], W0
	056 Add X0, X31, 8
	057 Move X1, X31
	058 Call SceneRef.get_IsValid, X0
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {105}
	063 Move W0, [X31+8]
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X30, [X31+16]
	067 Move X21, [X31+24]
	068 Add X31, X31, 48
	069 Return X0
	070 Move X0, 0x2254000
	071 Move X0, [X0+1400]
	072 Call 0x1C17D08
	073 Call 0x1C17F10
	074 Move X19, X0
	075 Move X0, 0x2257000
	076 Move X0, [X0+3248]
	077 Call 0x1C17D08
	078 Move X20, X0
	079 Move X0, 0x2257000
	080 Move X0, [X0+3256]
	081 Call 0x1C17D08
	082 Move X2, X0
	083 Move X0, X19
	084 Move X1, X20
	085 Move X3, X31
	086 Call ArgumentException..ctor, X0, X1, X2
	087 Move X0, 0x224C000
	088 Move X0, [X0+1456]
	089 Call 0x1C17D08
	090 Call 0x1C17F10
	091 Move X19, X0
	092 Move X0, 0x2257000
	093 Move X0, [X0+3264]
	094 Call 0x1C17D08
	095 Move X1, X0
	096 Move X0, X19
	097 Move X2, X31
	098 Call InvalidOperationException..ctor, X0, X1
	099 Move X0, 0x2257000
	100 Move X0, [X0+3272]
	101 Call 0x1C17D08
	102 Move X1, X0
	103 Move X0, X19
	104 Call 0x1C17DEC
	105 Move X0, 0x2257000
	106 Move X0, [X0+3280]
	107 Call 0x1C17D08
	108 Move X20, X0
	109 Move X0, 0x2257000
	110 Move X0, [X0+3288]
	111 Call 0x1C17D08
	112 Move X2, X0
	113 Move X0, X20
	114 Move X1, X19
	115 Move X3, X31
	116 Call String.Concat, X0, X1, X2
	117 Move X19, X0
	118 Move X0, 0x2254000
	119 Move X0, [X0+1888]
	120 Call 0x1C17D08
	121 Call 0x1C17F10
	122 Move X1, X19
	123 Move X2, X31
	124 Move X20, X0
	125 Call ArgumentOutOfRangeException..ctor, X0, X1
	126 Move X0, 0x2257000
	127 Move X0, [X0+3272]
	128 Call 0x1C17D08
	129 Move X1, X0
	130 Move X0, X20
	131 Call 0x1C17DEC

Method: Fusion.SceneRef ValidateSceneRef(Fusion.SceneRef sceneRef)

Disassembly:
	0x01EA86C0 STR X30, [X31 - 0x20]!
	0x01EA86C4 STP X20, X19, [X31 + 0x10]
	0x01EA86C8 ADRP X20, 0x2531000
	0x01EA86CC LDRB W8, [X20 + 0x364]
	0x01EA86D0 MOV X19, X0
	0x01EA86D4 TBNZ X8, 0x0, 0x1EA86EC
	0x01EA86D8 ADRP X0, 0x2254000
	0x01EA86DC LDR X0, [X0 + 0xE80]
	0x01EA86E0 BL 0x1C16CF4
	0x01EA86E4 MOVZ W8, 0x1
	0x01EA86E8 STRB W8, [X20 + 0x364]
	0x01EA86EC CBZ X19, 0x1EA872C
	0x01EA86F0 ADRP X20, 0x2254000
	0x01EA86F4 LDR X20, [X20 + 0xE80]
	0x01EA86F8 MOV X0, X19
	0x01EA86FC MOV X1, X31
	0x01EA8700 BL 0x3C35BD8
	0x01EA8704 LDR X8, [X20]
	0x01EA8708 MOV X19, X0
	0x01EA870C LDR W9, [X8 + 0xE0]
	0x01EA8710 CBNZ W9, 0x1EA871C
	0x01EA8714 MOV X0, X8
	0x01EA8718 BL 0x1C16DFC
	0x01EA871C AND X0, X19, 0x0
	0x01EA8720 LDP X20, X19, [X31 + 0x10]
	0x01EA8724 LDR X30, [X31], #0x20
	0x01EA8728 B 0x1EA8730
	0x01EA872C BL 0x1C16F20
	0x01EA8730 STR X30, [X31 - 0x50]!
	0x01EA8734 STP X26, X25, [X31 + 0x10]
	0x01EA8738 STP X24, X23, [X31 + 0x20]
	0x01EA873C STP X22, X21, [X31 + 0x30]
	0x01EA8740 STP X20, X19, [X31 + 0x40]
	0x01EA8744 ADRP X20, 0x2531000
	0x01EA8748 ADRP X19, 0x2254000
	0x01EA874C LDRB W8, [X20 + 0x365]
	0x01EA8750 LDR X19, [X19 + 0xE80]
	0x01EA8754 MOV X21, X0
	0x01EA8758 TBNZ X8, 0x0, 0x1EA87AC
	0x01EA875C ADRP X0, 0x224B000
	0x01EA8760 LDR X0, [X0 + 0xE00]
	0x01EA8764 BL 0x1C16CF4
	0x01EA8768 ADRP X0, 0x2256000
	0x01EA876C LDR X0, [X0 + 0xD60]
	0x01EA8770 BL 0x1C16CF4
	0x01EA8774 ADRP X0, 0x2256000
	0x01EA8778 LDR X0, [X0 + 0xD68]
	0x01EA877C BL 0x1C16CF4
	0x01EA8780 ADRP X0, 0x224B000
	0x01EA8784 LDR X0, [X0 + 0xE18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move [X31+8], W1
	006 Add X0, X31, 8
	007 Move X1, X31
	008 Call SceneRef.get_IsValid, X0
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {21}
	013 Move X8, [X19+256]
	014 Compare X8, 0
	015 JumpIfEqual {38}
	016 Move W0, [X31+8]
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Return X0
	021 Move X0, 0x2254000
	022 Move X0, [X0+1400]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X19, X0
	026 Move X0, 0x2257000
	027 Move X0, [X0+3296]
	028 Call 0x1C17D08
	029 Move X20, X0
	030 Move X0, 0x2257000
	031 Move X0, [X0+1240]
	032 Call 0x1C17D08
	033 Move X2, X0
	034 Move X0, X19
	035 Move X1, X20
	036 Move X3, X31
	037 Call ArgumentException..ctor, X0, X1, X2
	038 Move X0, 0x224C000
	039 Move X0, [X0+1456]
	040 Call 0x1C17D08
	041 Call 0x1C17F10
	042 Move X19, X0
	043 Move X0, 0x2257000
	044 Move X0, [X0+3264]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X19
	048 Move X2, X31
	049 Call InvalidOperationException..ctor, X0, X1
	050 Move X0, 0x2257000
	051 Move X0, [X0+3304]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X19
	055 Call 0x1C17DEC

Method: Fusion.NetworkSceneAsyncOp ValidateSceneOp(Fusion.NetworkSceneAsyncOp op)

Disassembly:
	0x01EA8788 BL 0x1C16CF4
	0x01EA878C ADRP X0, 0x2252000
	0x01EA8790 LDR X0, [X0 + 0xCB0]
	0x01EA8794 BL 0x1C16CF4
	0x01EA8798 ADRP X0, 0x2254000
	0x01EA879C LDR X0, [X0 + 0xE80]
	0x01EA87A0 BL 0x1C16CF4
	0x01EA87A4 MOVZ W8, 0x1
	0x01EA87A8 STRB W8, [X20 + 0x365]
	0x01EA87AC LDR X0, [X19]
	0x01EA87B0 LDR W8, [X0 + 0xE0]
	0x01EA87B4 CBNZ W8, 0x1EA87BC
	0x01EA87B8 BL 0x1C16DFC
	0x01EA87BC ADRP X20, 0x2531000
	0x01EA87C0 LDRB W8, [X20 + 0x3BD]
	0x01EA87C4 CBNZ W8, 0x1EA87DC
	0x01EA87C8 ADRP X0, 0x2254000
	0x01EA87CC LDR X0, [X0 + 0xE80]
	0x01EA87D0 BL 0x1C16CF4
	0x01EA87D4 MOVZ W8, 0x1
	0x01EA87D8 STRB W8, [X20 + 0x3BD]
	0x01EA87DC LDR X0, [X19]
	0x01EA87E0 LDR W8, [X0 + 0xE0]
	0x01EA87E4 CBNZ W8, 0x1EA87F0
	0x01EA87E8 BL 0x1C16DFC
	0x01EA87EC LDR X0, [X19]
	0x01EA87F0 LDR X8, [X0 + 0xB8]
	0x01EA87F4 LDR X19, [X8]
	0x01EA87F8 CBZ X19, 0x1EA8A50
	0x01EA87FC ADRP X10, 0x2256000
	0x01EA8800 LDR X8, [X19]
	0x01EA8804 LDR X10, [X10 + 0xD60]
	0x01EA8808 LDRH W9, [X8 + 0x12E]
	0x01EA880C LDR X1, [X10]
	0x01EA8810 CBZ X9, 0x1EA8834
	0x01EA8814 LDR X10, [X8 + 0xB0]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+8], X2
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move [X31], X1
	007 Add X0, X31, 0
	008 Move X1, X31
	009 Call NetworkSceneAsyncOp.get_IsValid, X0
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {21}
	014 Move X0, [X31]
	015 Move X1, [X31+8]
	016 Move X20, [X31+32]
	017 Move X19, [X31+40]
	018 Move X30, [X31+16]
	019 Add X31, X31, 48
	020 Return X0
	021 Move X0, 0x2254000
	022 Move X0, [X0+1400]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X19, X0
	026 Move X0, 0x2257000
	027 Move X0, [X0+3312]
	028 Call 0x1C17D08
	029 Move X20, X0
	030 Move X0, 0x2257000
	031 Move X0, [X0+3320]
	032 Call 0x1C17D08
	033 Move X2, X0
	034 Move X0, X19
	035 Move X1, X20
	036 Move X3, X31
	037 Call ArgumentException..ctor, X0, X1, X2
	038 Move X0, 0x2257000
	039 Move X0, [X0+3328]
	040 Call 0x1C17D08
	041 Move X1, X0
	042 Move X0, X19
	043 Call 0x1C17DEC

Method: Fusion.SceneRef GetSceneRef(System.String sceneNameOrPath)

Disassembly:
	0x01EA8818 ADD X10, X10, 0x8
	0x01EA881C LDUR X11, [X10 - 0x8]
	0x01EA8820 CMP X11, X1
	0x01EA8824 B.EQ 0x1EA8844
	0x01EA8828 SUBS X9, X9, 0x1
	0x01EA882C ADD X10, X10, 0x10
	0x01EA8830 B.NE 0x1EA881C
	0x01EA8834 MOV X0, X19
	0x01EA8838 MOV W2, W31
	0x01EA883C BL 0x1C5C788
	0x01EA8840 B 0x1EA8850
	0x01EA8844 LDRSW X9, [X10]
	0x01EA8848 ADD X8, X8, X9, 0x4, LSL
	0x01EA884C ADD X0, X8, 0x138
	0x01EA8850 LDP X8, X1, [X0]
	0x01EA8854 ADRP X23, 0x224B000
	0x01EA8858 LDR X23, [X23 + 0xE00]
	0x01EA885C MOV X0, X19
	0x01EA8860 BLR X8
	0x01EA8864 MOV X19, X0
	0x01EA8868 CBZ X0, 0x1EA8A54
	0x01EA886C ADRP X24, 0x224B000
	0x01EA8870 ADRP X25, 0x2256000
	0x01EA8874 ADRP X26, 0x2252000
	0x01EA8878 LDR X24, [X24 + 0xE18]
	0x01EA887C LDR X25, [X25 + 0xD68]
	0x01EA8880 LDR X26, [X26 + 0xCB0]
	0x01EA8884 MOV X20, X31
	0x01EA8888 AND X21, X21, 0x0
	0x01EA888C LDR X8, [X19]
	0x01EA8890 LDR X1, [X24]
	0x01EA8894 LDRH W9, [X8 + 0x12E]
	0x01EA8898 CBZ X9, 0x1EA88BC
	0x01EA889C LDR X10, [X8 + 0xB0]
	0x01EA88A0 ADD X10, X10, 0x8
	0x01EA88A4 LDUR X11, [X10 - 0x8]
	0x01EA88A8 CMP X11, X1
	0x01EA88AC B.EQ 0x1EA88CC
	0x01EA88B0 SUBS X9, X9, 0x1
	0x01EA88B4 ADD X10, X10, 0x10
	0x01EA88B8 B.NE 0x1EA88A4
	0x01EA88BC MOV X0, X19
	0x01EA88C0 MOV W2, W31
	0x01EA88C4 BL 0x1C5C788
	0x01EA88C8 B 0x1EA88D8
	0x01EA88CC LDRSW X9, [X10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2532000
	006 Move W8, [X21+859]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2253000
	014 Move X0, [X0+3248]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+859], W8
	018 Move X20, [X20+256]
	019 Compare X20, 0
	020 JumpIfEqual {37}
	021 Move X10, 0x2253000
	022 Move X8, [X20]
	023 Move X10, [X10+3248]
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Move X1, [X10]
	026 Compare X9, 0
	027 JumpIfEqual {34}
	028 Move X10, [X8+176]
	029 Add X10, X10, 8
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Subtract X9, X9, 1
	033 Add X10, X10, 16
	034 Move W2, 12
	035 Move X0, X20
	036 Call 0x1C5D788
	037 Move X0, X31
	038 Move W9, [X10]
	039 Add W9, W9, 12
	040 Add X8, X8, W9
	041 Add X0, X8, 312
	042 Move X8, [X0]
	043 Move X2, [X0+8]
	044 Move X0, X20
	045 Move X1, X19
	046 NotImplemented "Instruction BLR not yet implemented."
	047 And X0, X0, 0
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return X0

Method: Fusion.SceneRef GetSceneRef(UnityEngine.GameObject gameObj)

Disassembly:
	0x01EA88D0 ADD X8, X8, X9, 0x4, LSL
	0x01EA88D4 ADD X0, X8, 0x138
	0x01EA88D8 LDP X8, X1, [X0]
	0x01EA88DC MOV X0, X19
	0x01EA88E0 BLR X8
	0x01EA88E4 TBZ X0, 0x0, 0x1EA89CC
	0x01EA88E8 LDR X8, [X19]
	0x01EA88EC LDR X1, [X25]
	0x01EA88F0 LDRH W9, [X8 + 0x12E]
	0x01EA88F4 CBZ X9, 0x1EA8918
	0x01EA88F8 LDR X10, [X8 + 0xB0]
	0x01EA88FC ADD X10, X10, 0x8
	0x01EA8900 LDUR X11, [X10 - 0x8]
	0x01EA8904 CMP X11, X1
	0x01EA8908 B.EQ 0x1EA8928
	0x01EA890C SUBS X9, X9, 0x1
	0x01EA8910 ADD X10, X10, 0x10
	0x01EA8914 B.NE 0x1EA8900
	0x01EA8918 MOV X0, X19
	0x01EA891C MOV W2, W31
	0x01EA8920 BL 0x1C5C788
	0x01EA8924 B 0x1EA8934
	0x01EA8928 LDRSW X9, [X10]
	0x01EA892C ADD X8, X8, X9, 0x4, LSL
	0x01EA8930 ADD X0, X8, 0x138
	0x01EA8934 LDP X8, X1, [X0]
	0x01EA8938 MOV X0, X19
	0x01EA893C BLR X8
	0x01EA8940 MOV X22, X0
	0x01EA8944 CBZ X0, 0x1EA888C
	0x01EA8948 LDR X8, [X22 + 0x100]
	0x01EA894C CMP X8, 0x0
	0x01EA8950 CSEL X20, X20, X8, EQ
	0x01EA8954 CBZ X8, 0x1EA89C0
	0x01EA8958 CBZ X20, 0x1EA8A60
	0x01EA895C LDR X8, [X20]
	0x01EA8960 LDR X1, [X26]
	0x01EA8964 LDRH W9, [X8 + 0x12E]
	0x01EA8968 CBZ X9, 0x1EA898C
	0x01EA896C LDR X10, [X8 + 0xB0]
	0x01EA8970 ADD X10, X10, 0x8
	0x01EA8974 LDUR X11, [X10 - 0x8]
	0x01EA8978 CMP X11, X1
	0x01EA897C B.EQ 0x1EA899C
	0x01EA8980 SUBS X9, X9, 0x1
	0x01EA8984 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2532000
	006 Move W8, [X21+860]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2253000
	014 Move X0, [X0+3248]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+860], W8
	018 Move X20, [X20+256]
	019 Compare X20, 0
	020 JumpIfEqual {37}
	021 Move X10, 0x2253000
	022 Move X8, [X20]
	023 Move X10, [X10+3248]
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Move X1, [X10]
	026 Compare X9, 0
	027 JumpIfEqual {34}
	028 Move X10, [X8+176]
	029 Add X10, X10, 8
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Subtract X9, X9, 1
	033 Add X10, X10, 16
	034 Move W2, 11
	035 Move X0, X20
	036 Call 0x1C5D788
	037 Move X0, X31
	038 Move W9, [X10]
	039 Add W9, W9, 11
	040 Add X8, X8, W9
	041 Add X0, X8, 312
	042 Move X8, [X0]
	043 Move X2, [X0+8]
	044 Move X0, X20
	045 Move X1, X19
	046 NotImplemented "Instruction BLR not yet implemented."
	047 And X0, X0, 0
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return X0

Method: System.Boolean MoveGameObjectToScene(UnityEngine.GameObject gameObj, Fusion.SceneRef sceneRef)

Disassembly:
	0x01EA8988 B.NE 0x1EA8974
	0x01EA898C MOVZ W2, 0x4
	0x01EA8990 MOV X0, X20
	0x01EA8994 BL 0x1C5C788
	0x01EA8998 B 0x1EA89AC
	0x01EA899C LDR W9, [X10]
	0x01EA89A0 ADD W9, W9, 0x4
	0x01EA89A4 ADD X8, X8, W9, 0x4, SXTW
	0x01EA89A8 ADD X0, X8, 0x138
	0x01EA89AC LDP X8, X2, [X0]
	0x01EA89B0 MOV X0, X20
	0x01EA89B4 MOV X1, X21
	0x01EA89B8 BLR X8
	0x01EA89BC AND W8, W0, 0x1
	0x01EA89C0 CBZ W8, 0x1EA888C
	0x01EA89C4 MOV X20, X31
	0x01EA89C8 B 0x1EA89D4
	0x01EA89CC MOV X20, X31
	0x01EA89D0 MOV X22, X31
	0x01EA89D4 CBZ X19, 0x1EA8A30
	0x01EA89D8 LDR X8, [X19]
	0x01EA89DC LDR X1, [X23]
	0x01EA89E0 LDRH W9, [X8 + 0x12E]
	0x01EA89E4 CBZ X9, 0x1EA8A08
	0x01EA89E8 LDR X10, [X8 + 0xB0]
	0x01EA89EC ADD X10, X10, 0x8
	0x01EA89F0 LDUR X11, [X10 - 0x8]
	0x01EA89F4 CMP X11, X1
	0x01EA89F8 B.EQ 0x1EA8A18
	0x01EA89FC SUBS X9, X9, 0x1
	0x01EA8A00 ADD X10, X10, 0x10
	0x01EA8A04 B.NE 0x1EA89F0
	0x01EA8A08 MOV X0, X19
	0x01EA8A0C MOV W2, W31
	0x01EA8A10 BL 0x1C5C788
	0x01EA8A14 B 0x1EA8A24
	0x01EA8A18 LDRSW X9, [X10]
	0x01EA8A1C ADD X8, X8, X9, 0x4, LSL
	0x01EA8A20 ADD X0, X8, 0x138
	0x01EA8A24 LDP X8, X1, [X0]
	0x01EA8A28 MOV X0, X19
	0x01EA8A2C BLR X8
	0x01EA8A30 CBNZ X20, 0x1EA8A58
	0x01EA8A34 MOV X0, X22
	0x01EA8A38 LDP X20, X19, [X31 + 0x40]
	0x01EA8A3C LDP X22, X21, [X31 + 0x30]
	0x01EA8A40 LDP X24, X23, [X31 + 0x20]
	0x01EA8A44 LDP X26, X25, [X31 + 0x10]
	0x01EA8A48 LDR X30, [X31], #0x50
	0x01EA8A4C RET
	0x01EA8A50 BL 0x1C16F20
	0x01EA8A54 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2532000
	007 Move W8, [X22+861]
	008 Move X21, X2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2253000
	016 Move X0, [X0+3248]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+861], W8
	020 Move X20, [X20+256]
	021 Compare X20, 0
	022 JumpIfEqual {40}
	023 Move X10, 0x2253000
	024 Move X8, [X20]
	025 Move X10, [X10+3248]
	026 And X21, X21, 0
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move X1, [X10]
	029 Compare X9, 0
	030 JumpIfEqual {37}
	031 Move X10, [X8+176]
	032 Add X10, X10, 8
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Subtract X9, X9, 1
	036 Add X10, X10, 16
	037 Move W2, 8
	038 Move X0, X20
	039 Call 0x1C5D788
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move W0, W31
	045 Move X30, [X31+48]
	046 Return X0
	047 Move W9, [X10]
	048 Add W9, W9, 8
	049 Add X8, X8, W9
	050 Add X0, X8, 312
	051 Move X4, [X0]
	052 Move X3, [X0+8]
	053 Move X0, X20
	054 Move X1, X19
	055 Move X2, X21
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 CallNoReturn X4

Method: System.Boolean MoveGameObjectToSameScene(UnityEngine.GameObject gameObj, UnityEngine.GameObject other)

Disassembly:
	0x01EA8A58 MOV X0, X20
	0x01EA8A5C BL 0x1C16F18
	0x01EA8A60 BL 0x1C16F20
	0x01EA8A64 B 0x1EA8A74
	0x01EA8A68 B 0x1EA8A74
	0x01EA8A6C B 0x1EA8A74
	0x01EA8A70 B 0x1EA8A74
	0x01EA8A74 MOV X21, X0
	0x01EA8A78 CMP W1, 0x1
	0x01EA8A7C B.NE 0x1EA8A94
	0x01EA8A80 MOV X0, X21
	0x01EA8A84 BL 0x3EB1AD0
	0x01EA8A88 LDR X20, [X0]
	0x01EA8A8C BL 0x3EB1AE0
	0x01EA8A90 B 0x1EA89D0
	0x01EA8A94 MOV X20, X31
	0x01EA8A98 B 0x1EA8AA0
	0x01EA8A9C MOV X21, X0
	0x01EA8AA0 CBZ X19, 0x1EA8AFC
	0x01EA8AA4 LDR X8, [X19]
	0x01EA8AA8 LDR X1, [X23]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X2
	006 Move X20, X0
	007 Call NetworkRunner.GetSceneRef, X0, X1
	008 Move [X31+8], W0
	009 Add X0, X31, 8
	010 Move X1, X31
	011 Call SceneRef.get_IsValid, X0
	012 Move TEMP, X0
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfNotEqual {20}
	016 Move W2, [X31+8]
	017 Move X0, X20
	018 Move X1, X19
	019 Call NetworkRunner.MoveGameObjectToScene, X0, X1, X2
	020 Move W0, W31
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 And W0, W0, 1
	024 Move X30, [X31+32]
	025 Return X0

Method: Fusion.NetworkSceneAsyncOp LoadScene(System.String sceneName, UnityEngine.SceneManagement.LoadSceneParameters parameters, System.Boolean setActiveOnLoad = False)

Disassembly:
	0x01EA8AAC LDRH W9, [X8 + 0x12E]
	0x01EA8AB0 CBZ X9, 0x1EA8AD4
	0x01EA8AB4 LDR X10, [X8 + 0xB0]
	0x01EA8AB8 ADD X10, X10, 0x8
	0x01EA8ABC LDUR X11, [X10 - 0x8]
	0x01EA8AC0 CMP X11, X1
	0x01EA8AC4 B.EQ 0x1EA8AE4
	0x01EA8AC8 SUBS X9, X9, 0x1
	0x01EA8ACC ADD X10, X10, 0x10
	0x01EA8AD0 B.NE 0x1EA8ABC
	0x01EA8AD4 MOV X0, X19
	0x01EA8AD8 MOV W2, W31
	0x01EA8ADC BL 0x1C5C788

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W19, W3
	006 Move X20, X2
	007 Move X21, X0
	008 Call NetworkRunner.ValidateSceneName, X0, X1
	009 And W3, W19, 1
	010 Move X2, X20
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 And X1, X0, 0
	014 Move X0, X21
	015 Move X30, [X31+32]
	016 Move X21, [X31+40]

Method: Fusion.NetworkSceneAsyncOp LoadScene(System.String sceneName, UnityEngine.SceneManagement.LoadSceneMode loadSceneMode = 0, UnityEngine.SceneManagement.LocalPhysicsMode localPhysicsMode = 0, System.Boolean setActiveOnLoad = False)

Disassembly:
	0x01EA8E00 UBFM X21, X21, 0x20, 0x3F
	0x01EA8E04 LDRH W9, [X8 + 0x12E]
	0x01EA8E08 LDR X1, [X10]
	0x01EA8E0C CBZ X9, 0x1EA8E30
	0x01EA8E10 LDR X10, [X8 + 0xB0]
	0x01EA8E14 ADD X10, X10, 0x8
	0x01EA8E18 LDUR X11, [X10 - 0x8]
	0x01EA8E1C CMP X11, X1
	0x01EA8E20 B.EQ 0x1EA8E50
	0x01EA8E24 SUBS X9, X9, 0x1
	0x01EA8E28 ADD X10, X10, 0x10
	0x01EA8E2C B.NE 0x1EA8E18
	0x01EA8E30 MOVZ W2, 0x8
	0x01EA8E34 MOV X0, X20
	0x01EA8E38 BL 0x1C5C788
	0x01EA8E3C B 0x1EA8E60
	0x01EA8E40 LDP X20, X19, [X31 + 0x20]
	0x01EA8E44 LDP X22, X21, [X31 + 0x10]
	0x01EA8E48 LDR X30, [X31], #0x30
	0x01EA8E4C RET
	0x01EA8E50 LDR W9, [X10]
	0x01EA8E54 ADD W9, W9, 0x8
	0x01EA8E58 ADD X8, X8, W9, 0x4, SXTW
	0x01EA8E5C ADD X0, X8, 0x138
	0x01EA8E60 LDP X4, X3, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X1
	007 Move X21, X0
	008 Add X0, X31, 8
	009 Move W1, W2
	010 Move W2, W3
	011 Move X3, X31
	012 Move W19, W4
	013 Move [X31+8], X31
	014 Call LoadSceneParameters..ctor, X0, X1, X2
	015 Move X22, [X31+8]
	016 Move X0, X21
	017 Move X1, X20
	018 Call NetworkRunner.ValidateSceneName, X0, X1
	019 And X1, X0, 0
	020 And W3, W19, 1
	021 Move X0, X21
	022 Move X2, X22
	023 Call NetworkRunner.LoadScene, X0, X1, X2, X3
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Return X0

Method: Fusion.NetworkSceneAsyncOp LoadScene(Fusion.SceneRef sceneRef, UnityEngine.SceneManagement.LoadSceneMode loadSceneMode = 0, UnityEngine.SceneManagement.LocalPhysicsMode localPhysicsMode = 0, System.Boolean setActiveOnLoad = False)

Disassembly:
	0x01EA8E64 MOV X0, X20
	0x01EA8E68 MOV X1, X19
	0x01EA8E6C MOV X2, X21
	0x01EA8E70 LDP X20, X19, [X31 + 0x20]
	0x01EA8E74 LDP X22, X21, [X31 + 0x10]
	0x01EA8E78 LDR X30, [X31], #0x30
	0x01EA8E7C BR X4
	0x01EA8E80 STR X30, [X31 - 0x30]!
	0x01EA8E84 STP X22, X21, [X31 + 0x10]
	0x01EA8E88 STP X20, X19, [X31 + 0x20]
	0x01EA8E8C ADRP X22, 0x2531000
	0x01EA8E90 ADRP X21, 0x224B000
	0x01EA8E94 LDRB W8, [X22 + 0x369]
	0x01EA8E98 LDR X21, [X21 + 0x598]
	0x01EA8E9C MOV X20, X1
	0x01EA8EA0 MOV X19, X0
	0x01EA8EA4 TBNZ X8, 0x0, 0x1EA8ED4
	0x01EA8EA8 ADRP X0, 0x224B000
	0x01EA8EAC LDR X0, [X0 + 0xD78]
	0x01EA8EB0 BL 0x1C16CF4
	0x01EA8EB4 ADRP X0, 0x224B000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X1
	007 Move X21, X0
	008 Add X0, X31, 8
	009 Move W1, W2
	010 Move W2, W3
	011 Move X3, X31
	012 Move W19, W4
	013 Move [X31+8], X31
	014 Call LoadSceneParameters..ctor, X0, X1, X2
	015 Move X2, [X31+8]
	016 And X1, X20, 0
	017 And W3, W19, 1
	018 Move X0, X21
	019 Call NetworkRunner.LoadScene, X0, X1, X2, X3
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X30, [X31+16]
	023 Move X21, [X31+24]
	024 Add X31, X31, 48
	025 Return X0

Method: Fusion.NetworkSceneAsyncOp UnloadScene(System.String sceneName)

Disassembly:
	0x01EA8EB8 LDR X0, [X0 + 0x598]
	0x01EA8EBC BL 0x1C16CF4
	0x01EA8EC0 ADRP X0, 0x224B000
	0x01EA8EC4 LDR X0, [X0 + 0xC90]
	0x01EA8EC8 BL 0x1C16CF4
	0x01EA8ECC MOVZ W8, 0x1
	0x01EA8ED0 STRB W8, [X22 + 0x369]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call NetworkRunner.ValidateSceneName, X0, X1
	005 And X1, X0, 0
	006 Move X0, X19
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]

Method: Fusion.NetworkSceneInfo GetSceneInfoRef(System.Boolean allowFallback = True)

Disassembly:
	0x01EA9118 MOVZ W20, 0x1
	0x01EA911C B 0x1EA917C
	0x01EA9120 MOVI V0.2D, 0x0
	0x01EA9124 STR W31, [X19 + 0x170]
	0x01EA9128 STP V0, V0, [X19 + 0x150]
	0x01EA912C STR V0, [X19 + 0x14]
	0x01EA9130 B 0x1EA91F4
	0x01EA9134 LDR X8, [X31 + 0x8]
	0x01EA9138 CBZ X8, 0x1EA9204
	0x01EA913C LDR X0, [X19 + 0x50]
	0x01EA9140 LDR W22, [X8 + 0x20]
	0x01EA9144 CBZ X0, 0x1EA9160
	0x01EA9148 LDR X8, [X0]
	0x01EA914C LDR X9, [X8 + 0x268]
	0x01EA9150 LDR X1, [X8 + 0x270]
	0x01EA9154 BLR X9
	0x01EA9158 MOV X20, X0
	0x01EA915C B 0x1EA9164
	0x01EA9160 MOV W20, W31
	0x01EA9164 LDR X0, [X21]
	0x01EA9168 LDR W8, [X0 + 0xE0]
	0x01EA916C CBNZ W8, 0x1EA9174
	0x01EA9170 BL 0x1C16DFC
	0x01EA9174 CMP W22, W20
	0x01EA9178 CSET W20, EQ
	0x01EA917C LDR X8, [X31 + 0x8]
	0x01EA9180 CBZ X8, 0x1EA9204
	0x01EA9184 LDR X0, [X19 + 0x50]
	0x01EA9188 LDR W21, [X8 + 0x20]
	0x01EA918C CBZ X0, 0x1EA91A8
	0x01EA9190 LDR X8, [X0]
	0x01EA9194 LDR X9, [X8 + 0x268]
	0x01EA9198 LDR X1, [X8 + 0x270]
	0x01EA919C BLR X9
	0x01EA91A0 AND X3, X0, 0x0
	0x01EA91A4 B 0x1EA91AC
	0x01EA91A8 MOV X3, X31
	0x01EA91AC ADRP X8, 0x2255000
	0x01EA91B0 ADRP X9, 0x2255000
	0x01EA91B4 LDR X8, [X8 + 0xD80]
	0x01EA91B8 LDR X9, [X9 + 0xD78]
	0x01EA91BC MOV W0, W20
	0x01EA91C0 MOV X2, X21
	0x01EA91C4 LDR X1, [X8]
	0x01EA91C8 LDR X4, [X9]
	0x01EA91CC BL 0x2181FF4
	0x01EA91D0 LDR X8, [X31 + 0x8]
	0x01EA91D4 LDP V2, V0, [X19 + 0x150]
	0x01EA91D8 LDR W9, [X19 + 0x170]
	0x01EA91DC LDR V1, [X19 + 0x14]
	0x01EA91E0 MOVZ W10, 0x1
	0x01EA91E4 STP V2, V0, [X8 + 0x60]
	0x01EA91E8 STR W9, [X8 + 0x80]
	0x01EA91EC STR V1, [X8 + 0x5]
	0x01EA91F0 STR W10, [X19 + 0x13C]
	0x01EA91F4 LDP X20, X19, [X31 + 0x20]
	0x01EA91F8 LDP X22, X21, [X31 + 0x10]
	0x01EA91FC LDR X30, [X31], #0x30
	0x01EA9200 RET
	0x01EA9204 BL 0x1C16F20
	0x01EA9208 SUB X31, X31, 0xC0
	0x01EA920C STR X30, [X31 + 0x90]
	0x01EA9210 STP X22, X21, [X31 + 0xA0]
	0x01EA9214 STP X20, X19, [X31 + 0xB0]
	0x01EA9218 MRS X22, 0xC000
	0x01EA921C LDR X8, [X22 + 0x28]
	0x01EA9220 ADRP X20, 0x2530000
	0x01EA9224 MOV X19, X0
	0x01EA9228 STR X8, [X31 + 0x88]
	0x01EA922C LDRB W8, [X20 + 0x36E]
	0x01EA9230 TBNZ X8, 0x0, 0x1EA926C
	0x01EA9234 ADRP X0, 0x224D000
	0x01EA9238 LDR X0, [X0 + 0x398]
	0x01EA923C BL 0x1C16CF4
	0x01EA9240 ADRP X0, 0x2255000
	0x01EA9244 LDR X0, [X0 + 0xCA8]
	0x01EA9248 BL 0x1C16CF4
	0x01EA924C ADRP X0, 0x2255000
	0x01EA9250 LDR X0, [X0 + 0xD90]
	0x01EA9254 BL 0x1C16CF4
	0x01EA9258 ADRP X0, 0x2255000
	0x01EA925C LDR X0, [X0 + 0xD98]
	0x01EA9260 BL 0x1C16CF4
	0x01EA9264 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2531000
	007 Move W8, [X21+862]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x224E000
	015 Move X0, [X0+920]
	016 Call 0x1C17CF4
	017 Move X0, 0x2256000
	018 Move X0, [X0+3240]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+862], W8
	022 Move X0, X20
	023 Move [X31+8], X31
	024 Call NetworkRunner.get_IsSceneAuthority, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {70}
	029 Move W8, [X20+92]
	030 Compare W8, 0
	031 JumpIfNotEqual {77}
	032 Move X8, [X20+376]
	033 Compare X8, 0
	034 JumpIfEqual {46}
	035 Move TEMP, X19
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {84}
	039 Add X0, X20, 320
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+16]
	043 Move X21, [X31+24]
	044 Add X31, X31, 48
	045 Return X0
	046 Move X21, [X20+80]
	047 Compare X21, 0
	048 JumpIfEqual {35}
	049 Move X8, 0x224E000
	050 Move X8, [X8+920]
	051 Move X0, [X8]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X31
	057 Call NetworkId.get_SceneInfo
	058 Move X8, 0x2256000
	059 Move X8, [X8+3240]
	060 And X1, X0, 0
	061 Add X2, X31, 8
	062 Move X0, X21
	063 Move X3, [X8]
	064 Call Simulation.TryGetStructData, X0, X1, X2
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {35}
	069 Move X0, [X31+8]
	070 Move X0, 0x224B000
	071 Move X0, [X0+1456]
	072 Call 0x1C17D08
	073 Call 0x1C17F10
	074 Move X19, X0
	075 Move X0, 0x2256000
	076 Move X0, [X0+3224]
	077 Move X0, 0x224B000
	078 Move X0, [X0+1456]
	079 Call 0x1C17D08
	080 Call 0x1C17F10
	081 Move X19, X0
	082 Move X0, 0x2256000
	083 Move X0, [X0+3400]
	084 Move X0, 0x224B000
	085 Move X0, [X0+1456]
	086 Call 0x1C17D08
	087 Call 0x1C17F10
	088 Move X19, X0
	089 Move X0, 0x2256000
	090 Move X0, [X0+3408]
	091 Call 0x1C17D08
	092 Move X1, X0
	093 Move X0, X19
	094 Move X2, X31
	095 Call InvalidOperationException..ctor, X0, X1
	096 Move X0, 0x2256000
	097 Move X0, [X0+3416]
	098 Call 0x1C17D08
	099 Move X1, X0
	100 Move X0, X19
	101 Call 0x1C17DEC

Method: Fusion.NetworkSceneAsyncOp LoadScene(Fusion.SceneRef sceneRef, UnityEngine.SceneManagement.LoadSceneParameters parameters, System.Boolean setActiveOnLoad = False)

Disassembly:
	0x01EA8AE0 B 0x1EA8AF0
	0x01EA8AE4 LDRSW X9, [X10]
	0x01EA8AE8 ADD X8, X8, X9, 0x4, LSL
	0x01EA8AEC ADD X0, X8, 0x138
	0x01EA8AF0 LDP X8, X1, [X0]
	0x01EA8AF4 MOV X0, X19
	0x01EA8AF8 BLR X8
	0x01EA8AFC CBNZ X20, 0x1EA8B08
	0x01EA8B00 MOV X0, X21
	0x01EA8B04 BL 0x1D2C690
	0x01EA8B08 MOV X0, X20
	0x01EA8B0C BL 0x1C16F18
	0x01EA8B10 BL 0x1990590
	0x01EA8B14 SUB X31, X31, 0x70
	0x01EA8B18 STR D14, [X31 + 0x10]
	0x01EA8B1C STP D13, D12, [X31 + 0x18]
	0x01EA8B20 STP D11, D10, [X31 + 0x28]
	0x01EA8B24 STP D9, D8, [X31 + 0x38]
	0x01EA8B28 STR X30, [X31 + 0x48]
	0x01EA8B2C STP X22, X21, [X31 + 0x50]
	0x01EA8B30 STP X20, X19, [X31 + 0x60]
	0x01EA8B34 ADRP X22, 0x2531000
	0x01EA8B38 ADRP X21, 0x224B000
	0x01EA8B3C LDRB W8, [X22 + 0x368]
	0x01EA8B40 LDR X21, [X21 + 0x598]
	0x01EA8B44 MOV V8.16B, V6.16B
	0x01EA8B48 MOV V9.16B, V5.16B
	0x01EA8B4C MOV V10.16B, V4.16B
	0x01EA8B50 MOV V11.16B, V3.16B
	0x01EA8B54 MOV V12.16B, V2.16B
	0x01EA8B58 MOV V13.16B, V1.16B
	0x01EA8B5C MOV V14.16B, V0.16B
	0x01EA8B60 MOV X20, X1
	0x01EA8B64 MOV X19, X0
	0x01EA8B68 TBNZ X8, 0x0, 0x1EA8B98
	0x01EA8B6C ADRP X0, 0x2250000
	0x01EA8B70 LDR X0, [X0 + 0xE40]
	0x01EA8B74 BL 0x1C16CF4
	0x01EA8B78 ADRP X0, 0x224B000
	0x01EA8B7C LDR X0, [X0 + 0x598]
	0x01EA8B80 BL 0x1C16CF4
	0x01EA8B84 ADRP X0, 0x224B000
	0x01EA8B88 LDR X0, [X0 + 0xC90]
	0x01EA8B8C BL 0x1C16CF4
	0x01EA8B90 MOVZ W8, 0x1
	0x01EA8B94 STRB W8, [X22 + 0x368]
	0x01EA8B98 ADRP X22, 0x2250000
	0x01EA8B9C LDR X22, [X22 + 0xE40]
	0x01EA8BA0 ADD X1, X31, 0x8
	0x01EA8BA4 MOV X0, X19
	0x01EA8BA8 STR W31, [X31 + 0x8]
	0x01EA8BAC BL 0x1EA8C58
	0x01EA8BB0 LDR X8, [X21]
	0x01EA8BB4 MOV W21, W0
	0x01EA8BB8 LDR W9, [X8 + 0xE0]
	0x01EA8BBC CBNZ W9, 0x1EA8BC8
	0x01EA8BC0 MOV X0, X8
	0x01EA8BC4 BL 0x1C16DFC
	0x01EA8BC8 LDR X1, [X22]
	0x01EA8BCC MOV X0, X20
	0x01EA8BD0 MOV V0.16B, V14.16B
	0x01EA8BD4 MOV V1.16B, V13.16B
	0x01EA8BD8 MOV V2.16B, V12.16B
	0x01EA8BDC MOV V3.16B, V11.16B
	0x01EA8BE0 MOV V4.16B, V10.16B
	0x01EA8BE4 MOV V5.16B, V9.16B
	0x01EA8BE8 MOV V6.16B, V8.16B
	0x01EA8BEC BL 0x222D5B8
	0x01EA8BF0 MOV X20, X0
	0x01EA8BF4 MOV X0, X19
	0x01EA8BF8 MOV X1, X20
	0x01EA8BFC MOV X2, X31
	0x01EA8C00 BL 0x1EA8DA8
	0x01EA8C04 TBZ X21, 0x0, 0x1EA8C30
	0x01EA8C08 ADRP X8, 0x224B000
	0x01EA8C0C LDR X8, [X8 + 0xC90]
	0x01EA8C10 LDR W19, [X31 + 0x8]
	0x01EA8C14 LDR X0, [X8]
	0x01EA8C18 LDR W8, [X0 + 0xE0]
	0x01EA8C1C CBNZ W8, 0x1EA8C24
	0x01EA8C20 BL 0x1C16DFC
	0x01EA8C24 MOV X0, X19
	0x01EA8C28 MOV X1, X31
	0x01EA8C2C BL 0x3C46EB4
	0x01EA8C30 MOV X0, X20
	0x01EA8C34 LDP X20, X19, [X31 + 0x60]
	0x01EA8C38 LDP X22, X21, [X31 + 0x50]
	0x01EA8C3C LDR X30, [X31 + 0x48]
	0x01EA8C40 LDP D9, D8, [X31 + 0x38]
	0x01EA8C44 LDP D11, D10, [X31 + 0x28]
	0x01EA8C48 LDP D13, D12, [X31 + 0x18]
	0x01EA8C4C LDR V14, [X31 + 0x10]
	0x01EA8C50 ADD X31, X31, 0x70
	0x01EA8C54 RET
	0x01EA8C58 SUB X31, X31, 0x30
	0x01EA8C5C STP X30, X21, [X31 + 0x10]
	0x01EA8C60 STP X20, X19, [X31 + 0x20]
	0x01EA8C64 ADRP X21, 0x2531000
	0x01EA8C68 LDRB W8, [X21 + 0x36A]
	0x01EA8C6C MOV X19, X1
	0x01EA8C70 MOV X20, X0
	0x01EA8C74 TBNZ X8, 0x0, 0x1EA8C98
	0x01EA8C78 ADRP X0, 0x2252000
	0x01EA8C7C LDR X0, [X0 + 0xCB0]
	0x01EA8C80 BL 0x1C16CF4
	0x01EA8C84 ADRP X0, 0x224B000
	0x01EA8C88 LDR X0, [X0 + 0xC90]
	0x01EA8C8C BL 0x1C16CF4
	0x01EA8C90 MOVZ W8, 0x1
	0x01EA8C94 STRB W8, [X21 + 0x36A]
	0x01EA8C98 STR W31, [X31 + 0x8]
	0x01EA8C9C LDR X20, [X20 + 0x100]
	0x01EA8CA0 CBZ X20, 0x1EA8CEC
	0x01EA8CA4 ADRP X10, 0x2252000
	0x01EA8CA8 LDR X8, [X20]
	0x01EA8CAC LDR X10, [X10 + 0xCB0]
	0x01EA8CB0 LDRH W9, [X8 + 0x12E]
	0x01EA8CB4 LDR X1, [X10]
	0x01EA8CB8 CBZ X9, 0x1EA8CDC
	0x01EA8CBC LDR X10, [X8 + 0xB0]
	0x01EA8CC0 ADD X10, X10, 0x8
	0x01EA8CC4 LDUR X11, [X10 - 0x8]
	0x01EA8CC8 CMP X11, X1
	0x01EA8CCC B.EQ 0x1EA8CF4
	0x01EA8CD0 SUBS X9, X9, 0x1
	0x01EA8CD4 ADD X10, X10, 0x10
	0x01EA8CD8 B.NE 0x1EA8CC4
	0x01EA8CDC MOVZ W2, 0x3
	0x01EA8CE0 MOV X0, X20
	0x01EA8CE4 BL 0x1C5C788
	0x01EA8CE8 B 0x1EA8D04
	0x01EA8CEC MOV W0, W31
	0x01EA8CF0 B 0x1EA8D10
	0x01EA8CF4 LDR W9, [X10]
	0x01EA8CF8 ADD W9, W9, 0x3
	0x01EA8CFC ADD X8, X8, W9, 0x4, SXTW
	0x01EA8D00 ADD X0, X8, 0x138
	0x01EA8D04 LDP X8, X1, [X0]
	0x01EA8D08 MOV X0, X20
	0x01EA8D0C BLR X8
	0x01EA8D10 STR W0, [X31 + 0x8]
	0x01EA8D14 ADD X0, X31, 0x8
	0x01EA8D18 MOV X1, X31
	0x01EA8D1C BL 0x3C46324
	0x01EA8D20 TBZ X0, 0x0, 0x1EA8D90
	0x01EA8D24 ADRP X21, 0x224B000
	0x01EA8D28 LDR X21, [X21 + 0xC90]
	0x01EA8D2C LDR W20, [X31 + 0x8]
	0x01EA8D30 LDR X0, [X21]
	0x01EA8D34 LDR W8, [X0 + 0xE0]
	0x01EA8D38 CBNZ W8, 0x1EA8D40
	0x01EA8D3C BL 0x1C16DFC
	0x01EA8D40 MOV X0, X31
	0x01EA8D44 BL 0x3C46DFC
	0x01EA8D48 AND X1, X0, 0x0
	0x01EA8D4C MOV X0, X20
	0x01EA8D50 MOV X2, X31
	0x01EA8D54 BL 0x3C46850
	0x01EA8D58 TBNZ X0, 0x0, 0x1EA8D90
	0x01EA8D5C LDR X0, [X21]
	0x01EA8D60 LDR W8, [X0 + 0xE0]
	0x01EA8D64 CBNZ W8, 0x1EA8D6C
	0x01EA8D68 BL 0x1C16DFC
	0x01EA8D6C MOV X0, X31
	0x01EA8D70 BL 0x3C46DFC
	0x01EA8D74 STR W0, [X19]
	0x01EA8D78 LDR W0, [X31 + 0x8]
	0x01EA8D7C MOV X1, X31
	0x01EA8D80 BL 0x3C46EB4
	0x01EA8D84 TBZ X0, 0x0, 0x1EA8D90
	0x01EA8D88 MOVZ W0, 0x1
	0x01EA8D8C B 0x1EA8D98
	0x01EA8D90 MOV W0, W31
	0x01EA8D94 STR W31, [X19]
	0x01EA8D98 LDP X20, X19, [X31 + 0x20]
	0x01EA8D9C LDP X30, X21, [X31 + 0x10]
	0x01EA8DA0 ADD X31, X31, 0x30
	0x01EA8DA4 RET
	0x01EA8DA8 STR X30, [X31 - 0x30]!
	0x01EA8DAC STP X22, X21, [X31 + 0x10]
	0x01EA8DB0 STP X20, X19, [X31 + 0x20]
	0x01EA8DB4 ADRP X22, 0x2531000
	0x01EA8DB8 LDRB W8, [X22 + 0x36B]
	0x01EA8DBC MOV X21, X2
	0x01EA8DC0 MOV X19, X1
	0x01EA8DC4 MOV X20, X0
	0x01EA8DC8 TBNZ X8, 0x0, 0x1EA8DEC
	0x01EA8DCC ADRP X0, 0x2252000
	0x01EA8DD0 LDR X0, [X0 + 0xCB0]
	0x01EA8DD4 BL 0x1C16CF4
	0x01EA8DD8 ADRP X0, 0x2256000
	0x01EA8DDC LDR X0, [X0 + 0xD70]
	0x01EA8DE0 BL 0x1C16CF4
	0x01EA8DE4 MOVZ W8, 0x1
	0x01EA8DE8 STRB W8, [X22 + 0x36B]
	0x01EA8DEC LDR X20, [X20 + 0x100]
	0x01EA8DF0 CBZ X20, 0x1EA8E40
	0x01EA8DF4 ADRP X10, 0x2252000
	0x01EA8DF8 LDR X8, [X20]
	0x01EA8DFC LDR X10, [X10 + 0xCB0]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X23, 0x2532000
	011 Move [X31+24], X2
	012 Move X22, 0x2257000
	013 Move W8, [X23+863]
	014 Move X22, [X22+3336]
	015 Move W21, W3
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {54}
	022 Move X0, 0x2254000
	023 Move X0, [X0+1400]
	024 Call 0x1C17CF4
	025 Move X0, 0x2257000
	026 Move X0, [X0+3344]
	027 Call 0x1C17CF4
	028 Move X0, 0x2257000
	029 Move X0, [X0+3352]
	030 Call 0x1C17CF4
	031 Move X0, 0x2253000
	032 Move X0, [X0+3248]
	033 Call 0x1C17CF4
	034 Move X0, 0x2257000
	035 Move X0, [X0+320]
	036 Call 0x1C17CF4
	037 Move X0, 0x2257000
	038 Move X0, [X0+3360]
	039 Call 0x1C17CF4
	040 Move X0, 0x2257000
	041 Move X0, [X0+3368]
	042 Call 0x1C17CF4
	043 Move X0, 0x2257000
	044 Move X0, [X0+3336]
	045 Call 0x1C17CF4
	046 Move X0, 0x2257000
	047 Move X0, [X0+1240]
	048 Call 0x1C17CF4
	049 Move X0, 0x2257000
	050 Move X0, [X0+3376]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X23+863], W8
	054 Move X0, [X22]
	055 Move [X31+8], X31
	056 Move [X31+16], X31
	057 Call 0x1C17F10
	058 Move X1, X31
	059 Move X22, X0
	060 Call Object..ctor, X0
	061 Compare X22, 0
	062 JumpIfEqual {220}
	063 And X1, X19, 0
	064 Move X0, X20
	065 Move [X22+16], X20
	066 Call NetworkRunner.ValidateSceneRef, X0, X1
	067 Move X24, X0
	068 Move W1, 1
	069 Move X0, X20
	070 Call NetworkRunner.GetSceneInfoRef, X0, X1
	071 Move X23, X0
	072 Add X0, X31, 24
	073 Move X1, X31
	074 Call LoadSceneParameters.get_loadSceneMode, X0
	075 Move W25, W0
	076 Add X0, X31, 24
	077 Move X1, X31
	078 Call LoadSceneParameters.get_localPhysicsMode, X0
	079 And X19, X24, 0
	080 Move W3, W0
	081 And W4, W21, 1
	082 Move X0, X23
	083 Move X1, X19
	084 Move W2, W25
	085 Move X5, X31
	086 Call NetworkSceneInfo.AddSceneRef, X0, X1, X2, X3, X4
	087 Move TEMP, X0
	088 And TEMP, TEMP, -2147483648
	089 Compare TEMP, -2147483648
	090 JumpIfEqual {136}
	091 Move V2, [X23+16]
	092 Move V0, [X23+32]
	093 Move W8, [X23+48]
	094 Move V1, [X23]
	095 Move X9, [X20+376]
	096 Move W21, W0
	097 Move [X20+368], W8
	098 Move [X20+336], V2
	099 Move [X20+344], V0
	100 Move [X20+20], V1
	101 Compare X9, 0
	102 JumpIfEqual {166}
	103 Move X0, X23
	104 Move X1, X31
	105 Call NetworkSceneInfo.get_SceneParams, X0
	106 Move X8, 0x2257000
	107 Move X8, [X8+3344]
	108 Move [X31+8], X0
	109 Move [X31+16], X1
	110 Add X0, X31, 8
	111 Move W1, W21
	112 Move X2, [X8]
	113 Call 0x2D20A44, X0, X1
	114 NotImplemented "Instruction LDRH not yet implemented."
	115 NotImplemented "Instruction STRH not yet implemented."
	116 Move X8, [X20+376]
	117 Compare X8, 0
	118 JumpIfEqual {220}
	119 Move X20, [X8+16]
	120 Move X8, 0x2257000
	121 Move X8, [X8+3352]
	122 Move X0, [X8]
	123 Call 0x1C17F10
	124 Move X8, 0x2257000
	125 Move X8, [X8+3368]
	126 Move X1, X22
	127 Move X3, X31
	128 Move X21, X0
	129 Move X2, [X8]
	130 Call Func`2<SceneRef, NetworkSceneAsyncOp>..ctor, X0, X1, X2
	131 Move X0, X19
	132 Move X1, X20
	133 Move X2, X21
	134 Move X3, X31
	135 Call NetworkSceneAsyncOp.FromDeferred, X0, X1, X2
	136 Move X8, 0x2257000
	137 Move X8, [X8+320]
	138 Add X1, X31, 0
	139 Move [X31], W24
	140 Move X0, [X8]
	141 Call 0x1C17E04
	142 Move X8, 0x2257000
	143 Move X8, [X8+3376]
	144 Move X1, X0
	145 Move X2, X31
	146 Move X8, [X8]
	147 Move X0, X8
	148 Call String.Format, X0, X1
	149 Move X8, 0x2254000
	150 Move X8, [X8+1400]
	151 Move X20, X0
	152 Move X8, [X8]
	153 Move X0, X8
	154 Call 0x1C17F10
	155 Move X8, 0x2257000
	156 Move X8, [X8+1240]
	157 Move X1, X20
	158 Move X3, X31
	159 Move X21, X0
	160 Move X2, [X8]
	161 Call ArgumentException..ctor, X0, X1, X2
	162 Move X0, X19
	163 Move X1, X21
	164 Move X2, X31
	165 Call NetworkSceneAsyncOp.FromError, X0, X1
	166 Move X20, [X20+256]
	167 Move X0, X23
	168 Move X1, X31
	169 Call NetworkSceneInfo.get_SceneParams, X0
	170 Move X8, 0x2257000
	171 Move X8, [X8+3344]
	172 Move [X31+8], X0
	173 Move [X31+16], X1
	174 Add X0, X31, 8
	175 Move W1, W21
	176 Move X2, [X8]
	177 Call 0x2D20A44, X0, X1
	178 Compare X20, 0
	179 JumpIfEqual {220}
	180 Move X10, 0x2253000
	181 Move X8, [X20]
	182 NotImplemented "Instruction LDRH not yet implemented."
	183 Move X10, [X10+3248]
	184 NotImplemented "Instruction LDRH not yet implemented."
	185 Move X1, [X10]
	186 Compare X9, 0
	187 JumpIfEqual {194}
	188 Move X10, [X8+176]
	189 Add X10, X10, 8
	190 NotImplemented "Instruction LDUR not yet implemented."
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Subtract X9, X9, 1
	193 Add X10, X10, 16
	194 Move W2, 9
	195 Move X0, X20
	196 Call 0x1C5D788
	197 Move W9, [X10]
	198 Add W9, W9, 9
	199 Add X8, X8, W9
	200 Add X0, X8, 312
	201 Move X8, [X0]
	202 Move X3, [X0+8]
	203 Move X0, X20
	204 Move X1, X19
	205 Move X2, X21
	206 NotImplemented "Instruction BLR not yet implemented."
	207 Move X2, X1
	208 Move X1, X0
	209 Call NetworkRunner.ValidateSceneOp, X0, X1
	210 Move X20, [X31+80]
	211 Move X19, [X31+88]
	212 Move X22, [X31+64]
	213 Move X21, [X31+72]
	214 Move X24, [X31+48]
	215 Move X23, [X31+56]
	216 Move X30, [X31+32]
	217 Move X25, [X31+40]
	218 Add X31, X31, 96
	219 Return X0
	220 Call 0x1C17F20

Method: Fusion.NetworkSceneAsyncOp UnloadScene(Fusion.SceneRef sceneRef)

Disassembly:
	0x01EA8ED4 ADRP X22, 0x224B000
	0x01EA8ED8 LDR X22, [X22 + 0xD78]
	0x01EA8EDC ADD X1, X31, 0x8
	0x01EA8EE0 MOV X0, X19
	0x01EA8EE4 STR W31, [X31 + 0x8]
	0x01EA8EE8 BL 0x1EA8C58
	0x01EA8EEC LDR X8, [X21]
	0x01EA8EF0 MOV W21, W0
	0x01EA8EF4 LDR W9, [X8 + 0xE0]
	0x01EA8EF8 CBNZ W9, 0x1EA8F04
	0x01EA8EFC MOV X0, X8
	0x01EA8F00 BL 0x1C16DFC
	0x01EA8F04 LDR X1, [X22]
	0x01EA8F08 MOV X0, X20
	0x01EA8F0C BL 0x222D35C
	0x01EA8F10 MOV X20, X0
	0x01EA8F14 MOV X0, X19
	0x01EA8F18 MOV X1, X20
	0x01EA8F1C MOV X2, X31
	0x01EA8F20 BL 0x1EA8DA8
	0x01EA8F24 TBZ X21, 0x0, 0x1EA8F50
	0x01EA8F28 ADRP X8, 0x224B000
	0x01EA8F2C LDR X8, [X8 + 0xC90]
	0x01EA8F30 LDR W19, [X31 + 0x8]
	0x01EA8F34 LDR X0, [X8]
	0x01EA8F38 LDR W8, [X0 + 0xE0]
	0x01EA8F3C CBNZ W8, 0x1EA8F44
	0x01EA8F40 BL 0x1C16DFC
	0x01EA8F44 MOV X0, X19
	0x01EA8F48 MOV X1, X31
	0x01EA8F4C BL 0x3C46EB4
	0x01EA8F50 MOV X0, X20
	0x01EA8F54 LDP X20, X19, [X31 + 0x20]
	0x01EA8F58 LDP X22, X21, [X31 + 0x10]
	0x01EA8F5C LDR X30, [X31], #0x30
	0x01EA8F60 RET
	0x01EA8F64 STP X30, X21, [X31 - 0x20]!
	0x01EA8F68 STP X20, X19, [X31 + 0x10]
	0x01EA8F6C ADRP X21, 0x2531000
	0x01EA8F70 LDRB W8, [X21 + 0x36C]
	0x01EA8F74 MOV X19, X1
	0x01EA8F78 MOV X20, X0
	0x01EA8F7C TBNZ X8, 0x0, 0x1EA8F94
	0x01EA8F80 ADRP X0, 0x2252000
	0x01EA8F84 LDR X0, [X0 + 0xCB0]
	0x01EA8F88 BL 0x1C16CF4
	0x01EA8F8C MOVZ W8, 0x1
	0x01EA8F90 STRB W8, [X21 + 0x36C]
	0x01EA8F94 LDR X20, [X20 + 0x100]
	0x01EA8F98 CBZ X20, 0x1EA8FE4
	0x01EA8F9C ADRP X10, 0x2252000
	0x01EA8FA0 LDR X8, [X20]
	0x01EA8FA4 LDR X10, [X10 + 0xCB0]
	0x01EA8FA8 LDRH W9, [X8 + 0x12E]
	0x01EA8FAC LDR X1, [X10]
	0x01EA8FB0 CBZ X9, 0x1EA8FD4
	0x01EA8FB4 LDR X10, [X8 + 0xB0]
	0x01EA8FB8 ADD X10, X10, 0x8
	0x01EA8FBC LDUR X11, [X10 - 0x8]
	0x01EA8FC0 CMP X11, X1
	0x01EA8FC4 B.EQ 0x1EA8FF0
	0x01EA8FC8 SUBS X9, X9, 0x1
	0x01EA8FCC ADD X10, X10, 0x10
	0x01EA8FD0 B.NE 0x1EA8FBC
	0x01EA8FD4 MOVZ W2, 0x7
	0x01EA8FD8 MOV X0, X20
	0x01EA8FDC BL 0x1C5C788
	0x01EA8FE0 B 0x1EA9000
	0x01EA8FE4 LDP X20, X19, [X31 + 0x10]
	0x01EA8FE8 LDP X30, X21, [X31], #0x20
	0x01EA8FEC RET
	0x01EA8FF0 LDR W9, [X10]
	0x01EA8FF4 ADD W9, W9, 0x7
	0x01EA8FF8 ADD X8, X8, W9, 0x4, SXTW
	0x01EA8FFC ADD X0, X8, 0x138
	0x01EA9000 LDP X3, X2, [X0]
	0x01EA9004 MOV X0, X20
	0x01EA9008 MOV X1, X19
	0x01EA900C LDP X20, X19, [X31 + 0x10]
	0x01EA9010 LDP X30, X21, [X31], #0x20
	0x01EA9014 BR X3
	0x01EA9018 STR X30, [X31 - 0x30]!
	0x01EA901C STP X22, X21, [X31 + 0x10]
	0x01EA9020 STP X20, X19, [X31 + 0x20]
	0x01EA9024 ADRP X21, 0x2530000
	0x01EA9028 LDRB W8, [X21 + 0x36D]
	0x01EA902C MOV W20, W1
	0x01EA9030 MOV X19, X0
	0x01EA9034 TBNZ X8, 0x0, 0x1EA907C
	0x01EA9038 ADRP X0, 0x2255000
	0x01EA903C LDR X0, [X0 + 0xD78]
	0x01EA9040 BL 0x1C16CF4
	0x01EA9044 ADRP X0, 0x224D000
	0x01EA9048 LDR X0, [X0 + 0x398]
	0x01EA904C BL 0x1C16CF4
	0x01EA9050 ADRP X0, 0x224D000
	0x01EA9054 LDR X0, [X0 + 0xE40]
	0x01EA9058 BL 0x1C16CF4
	0x01EA905C ADRP X0, 0x2255000
	0x01EA9060 LDR X0, [X0 + 0xD80]
	0x01EA9064 BL 0x1C16CF4
	0x01EA9068 ADRP X0, 0x2255000
	0x01EA906C LDR X0, [X0 + 0xD88]
	0x01EA9070 BL 0x1C16CF4
	0x01EA9074 MOVZ W8, 0x1
	0x01EA9078 STRB W8, [X21 + 0x36D]
	0x01EA907C STR X31, [X31 + 0x8]
	0x01EA9080 TBZ X20, 0x0, 0x1EA9120
	0x01EA9084 ADRP X8, 0x224D000
	0x01EA9088 LDR X8, [X8 + 0x398]
	0x01EA908C LDR X20, [X19 + 0x50]
	0x01EA9090 LDR X0, [X8]
	0x01EA9094 LDR W8, [X0 + 0xE0]
	0x01EA9098 CBNZ W8, 0x1EA90A0
	0x01EA909C BL 0x1C16DFC
	0x01EA90A0 MOV X0, X31
	0x01EA90A4 BL 0x1E92E50
	0x01EA90A8 CBZ X20, 0x1EA9204
	0x01EA90AC AND X1, X0, 0x0
	0x01EA90B0 ADD X2, X31, 0x8
	0x01EA90B4 MOV X0, X20
	0x01EA90B8 MOV X3, X31
	0x01EA90BC BL 0x1EC95F0
	0x01EA90C0 TBNZ X0, 0x0, 0x1EA90D8
	0x01EA90C4 ADRP X8, 0x2255000
	0x01EA90C8 LDR X8, [X8 + 0xD88]
	0x01EA90CC MOV X1, X31
	0x01EA90D0 LDR X0, [X8]
	0x01EA90D4 BL 0x1E3B98C
	0x01EA90D8 MOV X0, X19
	0x01EA90DC BL 0x1EA27F0
	0x01EA90E0 TBZ X0, 0x0, 0x1EA91D0
	0x01EA90E4 LDR X8, [X31 + 0x8]
	0x01EA90E8 CBZ X8, 0x1EA9204
	0x01EA90EC ADRP X21, 0x224D000
	0x01EA90F0 LDR X21, [X21 + 0xE40]
	0x01EA90F4 LDR W20, [X8 + 0x20]
	0x01EA90F8 LDR X0, [X21]
	0x01EA90FC LDR W9, [X0 + 0xE0]
	0x01EA9100 CBNZ W9, 0x1EA9108
	0x01EA9104 BL 0x1C16DFC
	0x01EA9108 MOV X0, X31
	0x01EA910C BL 0x1E8D7F4
	0x01EA9110 CMP W20, W0
	0x01EA9114 B.NE 0x1EA9134

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2532000
	009 Move W8, [X21+864]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {42}
	016 Move X0, 0x2254000
	017 Move X0, [X0+1400]
	018 Call 0x1C17CF4
	019 Move X0, 0x2257000
	020 Move X0, [X0+3352]
	021 Call 0x1C17CF4
	022 Move X0, 0x2253000
	023 Move X0, [X0+3248]
	024 Call 0x1C17CF4
	025 Move X0, 0x2257000
	026 Move X0, [X0+3384]
	027 Call 0x1C17CF4
	028 Move X0, 0x2257000
	029 Move X0, [X0+320]
	030 Call 0x1C17CF4
	031 Move X0, 0x2257000
	032 Move X0, [X0+3360]
	033 Call 0x1C17CF4
	034 Move X0, 0x2257000
	035 Move X0, [X0+1240]
	036 Call 0x1C17CF4
	037 Move X0, 0x2257000
	038 Move X0, [X0+3392]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X21+864], W8
	042 And X1, X19, 0
	043 Move X0, X20
	044 Call NetworkRunner.ValidateSceneRef, X0, X1
	045 Move X21, X0
	046 Move W1, 1
	047 Move X0, X20
	048 Call NetworkRunner.GetSceneInfoRef, X0, X1
	049 And X19, X21, 0
	050 Move X1, X19
	051 Move X2, X31
	052 Move X22, X0
	053 Call NetworkSceneInfo.RemoveSceneRef, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {86}
	058 Move V2, [X22+16]
	059 Move V0, [X22+32]
	060 Move W9, [X22+48]
	061 Move V1, [X22]
	062 Move X8, [X20+376]
	063 Move [X20+336], V2
	064 Move [X20+344], V0
	065 Move [X20+368], W9
	066 Move [X20+20], V1
	067 Compare X8, 0
	068 JumpIfEqual {124}
	069 Move X21, [X8+16]
	070 Move X8, 0x2257000
	071 Move X8, [X8+3352]
	072 Move X0, [X8]
	073 Call 0x1C17F10
	074 Move X8, 0x2257000
	075 Move X8, [X8+3384]
	076 Move X1, X20
	077 Move X3, X31
	078 Move X22, X0
	079 Move X2, [X8]
	080 Call Func`2<SceneRef, NetworkSceneAsyncOp>..ctor, X0, X1, X2
	081 Move X0, X19
	082 Move X1, X21
	083 Move X2, X22
	084 Move X3, X31
	085 Call NetworkSceneAsyncOp.FromDeferred, X0, X1, X2
	086 Move X8, 0x2257000
	087 Move X8, [X8+320]
	088 Move X20, 0x2256000
	089 Move X20, [X20+3392]
	090 Move X22, 0x2253000
	091 Move X0, [X8]
	092 Move X23, 0x2256000
	093 Move X22, [X22+1400]
	094 Move X23, [X23+1240]
	095 Add X1, X31, 8
	096 Move [X31+8], W21
	097 Call 0x1C17E04
	098 Move X8, [X20]
	099 Move X1, X0
	100 Move X2, X31
	101 Move X0, X8
	102 Call String.Format, X0, X1
	103 Move X8, [X22]
	104 Move X20, X0
	105 Move X0, X8
	106 Call 0x1C17F10
	107 Move X2, [X23]
	108 Move X1, X20
	109 Move X3, X31
	110 Move X21, X0
	111 Call ArgumentException..ctor, X0, X1, X2
	112 Move X0, X19
	113 Move X1, X21
	114 Move X2, X31
	115 Call NetworkSceneAsyncOp.FromError, X0, X1
	116 Move X20, [X31+48]
	117 Move X19, [X31+56]
	118 Move X22, [X31+32]
	119 Move X21, [X31+40]
	120 Move X30, [X31+16]
	121 Move X23, [X31+24]
	122 Add X31, X31, 64
	123 Return X0
	124 Move X20, [X20+256]
	125 Compare X20, 0
	126 JumpIfEqual {163}
	127 Move X10, 0x2252000
	128 Move X8, [X20]
	129 Move X10, [X10+3248]
	130 NotImplemented "Instruction LDRH not yet implemented."
	131 Move X1, [X10]
	132 Compare X9, 0
	133 JumpIfEqual {140}
	134 Move X10, [X8+176]
	135 Add X10, X10, 8
	136 NotImplemented "Instruction LDUR not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Subtract X9, X9, 1
	139 Add X10, X10, 16
	140 Move W2, 10
	141 Move X0, X20
	142 Call 0x1C5D788
	143 Move W9, [X10]
	144 Add W9, W9, 10
	145 Add X8, X8, W9
	146 Add X0, X8, 312
	147 Move X8, [X0]
	148 Move X2, [X0+8]
	149 Move X0, X20
	150 Move X1, X19
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Move X20, [X31+48]
	153 Move X19, [X31+56]
	154 Move X22, [X31+32]
	155 Move X21, [X31+40]
	156 Move X30, [X31+16]
	157 Move X23, [X31+24]
	158 Move X2, X1
	159 Move X1, X0
	160 Add X31, X31, 64
	161 Call NetworkRunner.ValidateSceneOp, X0, X1
	162 Return X0
	163 Call 0x1C17F20

Method: System.Void InvokeSceneLoadStart(Fusion.SceneRef sceneRef)

Disassembly:
	0x01EA9270 STR X31, [X31 + 0x8]
	0x01EA9274 STR W31, [X31 + 0x80]
	0x01EA9278 STR W31, [X31 + 0x40]
	0x01EA927C STP V0, V0, [X31 + 0x60]
	0x01EA9280 STR V0, [X31 + 0x5]
	0x01EA9284 STP V0, V0, [X31 + 0x20]
	0x01EA9288 STR V0, [X31 + 0x1]
	0x01EA928C LDR W20, [X19 + 0x13C]
	0x01EA9290 CBZ W20, 0x1EA9384
	0x01EA9294 ADRP X8, 0x224D000
	0x01EA9298 LDR X8, [X8 + 0x398]
	0x01EA929C STR W31, [X19 + 0x13C]
	0x01EA92A0 LDR X21, [X19 + 0x50]
	0x01EA92A4 LDR X0, [X8]
	0x01EA92A8 LDR W8, [X0 + 0xE0]
	0x01EA92AC CBNZ W8, 0x1EA92B4
	0x01EA92B0 BL 0x1C16DFC
	0x01EA92B4 MOV X0, X31
	0x01EA92B8 BL 0x1E92E50
	0x01EA92BC CBZ X21, 0x1EA93A8
	0x01EA92C0 ADRP X8, 0x2255000
	0x01EA92C4 LDR X8, [X8 + 0xCA8]
	0x01EA92C8 AND X1, X0, 0x0
	0x01EA92CC ADD X2, X31, 0x8
	0x01EA92D0 MOV X0, X21
	0x01EA92D4 LDR X3, [X8]
	0x01EA92D8 BL 0x22551FC
	0x01EA92DC TBNZ X0, 0x0, 0x1EA92F4
	0x01EA92E0 ADRP X8, 0x2255000
	0x01EA92E4 LDR X8, [X8 + 0xD98]
	0x01EA92E8 MOV X1, X31
	0x01EA92EC LDR X0, [X8]
	0x01EA92F0 BL 0x1E3B98C
	0x01EA92F4 CMP W20, 0x1
	0x01EA92F8 B.NE 0x1EA9320
	0x01EA92FC MOVI V0.2D, 0x0
	0x01EA9300 STR W31, [X31 + 0x80]
	0x01EA9304 STP V0, V0, [X31 + 0x60]
	0x01EA9308 STR V0, [X31 + 0x5]
	0x01EA930C ADD X2, X19, 0x108
	0x01EA9310 ADD X3, X31, 0x50
	0x01EA9314 MOVZ W1, 0x1
	0x01EA9318 MOV X0, X19
	0x01EA931C B 0x1EA9360
	0x01EA9320 LDP V2, V0, [X19 + 0x150]
	0x01EA9324 LDR W8, [X19 + 0x170]
	0x01EA9328 LDR V1, [X19 + 0x14]
	0x01EA932C LDR X2, [X31 + 0x8]
	0x01EA9330 STP V2, V0, [X31 + 0x20]
	0x01EA9334 STR W8, [X31 + 0x40]
	0x01EA9338 STR V1, [X31 + 0x1]
	0x01EA933C LDR W8, [X2 + 0x30]
	0x01EA9340 LDP V1, V0, [X2 + 0x10]
	0x01EA9344 LDR V2, [X2]
	0x01EA9348 ADD X3, X31, 0x10
	0x01EA934C MOV X0, X19
	0x01EA9350 MOV W1, W20
	0x01EA9354 STR W8, [X19 + 0x170]
	0x01EA9358 STP V1, V0, [X19 + 0x150]
	0x01EA935C STR V2, [X19 + 0x14]
	0x01EA9360 BL 0x1EA93B0
	0x01EA9364 LDR X0, [X19 + 0x178]
	0x01EA9368 CBZ X0, 0x1EA9384
	0x01EA936C ADRP X8, 0x2255000
	0x01EA9370 LDR X8, [X8 + 0xD90]
	0x01EA9374 MOV W1, W31
	0x01EA9378 LDR X2, [X8]
	0x01EA937C BL 0x267AB7C
	0x01EA9380 STR X31, [X19 + 0x178]
	0x01EA9384 LDR X8, [X22 + 0x28]
	0x01EA9388 LDR X9, [X31 + 0x88]
	0x01EA938C CMP X8, X9
	0x01EA9390 B.NE 0x1EA93AC
	0x01EA9394 LDP X20, X19, [X31 + 0xB0]
	0x01EA9398 LDP X22, X21, [X31 + 0xA0]
	0x01EA939C LDR X30, [X31 + 0x90]
	0x01EA93A0 ADD X31, X31, 0xC0
	0x01EA93A4 RET
	0x01EA93A8 BL 0x1C16F20
	0x01EA93AC BL 0x3EB1B20
	0x01EA93B0 SUB X31, X31, 0x1B0
	0x01EA93B4 STP X29, X30, [X31 + 0x150]
	0x01EA93B8 STP X28, X27, [X31 + 0x160]
	0x01EA93BC STP X26, X25, [X31 + 0x170]
	0x01EA93C0 STP X24, X23, [X31 + 0x180]
	0x01EA93C4 STP X22, X21, [X31 + 0x190]
	0x01EA93C8 STP X20, X19, [X31 + 0x1A0]
	0x01EA93CC MRS X8, 0xC000
	0x01EA93D0 STR X8, [X31 + 0x8]
	0x01EA93D4 LDR X8, [X8 + 0x28]
	0x01EA93D8 ADRP X23, 0x2530000
	0x01EA93DC MOV X19, X3
	0x01EA93E0 MOV X20, X2
	0x01EA93E4 STR X8, [X31 + 0x148]
	0x01EA93E8 LDRB W8, [X23 + 0x36F]
	0x01EA93EC MOV W22, W1
	0x01EA93F0 MOV X21, X0
	0x01EA93F4 TBNZ X8, 0x0, 0x1EA9448
	0x01EA93F8 ADRP X0, 0x2255000
	0x01EA93FC LDR X0, [X0 + 0xDA0]
	0x01EA9400 BL 0x1C16CF4
	0x01EA9404 ADRP X0, 0x2255000
	0x01EA9408 LDR X0, [X0 + 0xDA8]
	0x01EA940C BL 0x1C16CF4
	0x01EA9410 ADRP X0, 0x2255000
	0x01EA9414 LDR X0, [X0 + 0xD10]
	0x01EA9418 BL 0x1C16CF4
	0x01EA941C ADRP X0, 0x2251000
	0x01EA9420 LDR X0, [X0 + 0xCB0]
	0x01EA9424 BL 0x1C16CF4
	0x01EA9428 ADRP X0, 0x2255000
	0x01EA942C LDR X0, [X0 + 0xDB0]
	0x01EA9430 BL 0x1C16CF4
	0x01EA9434 ADRP X0, 0x2255000
	0x01EA9438 LDR X0, [X0 + 0xDB8]
	0x01EA943C BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2531000
	009 Move W8, [X21+865]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x2256000
	017 Move X0, [X0+1896]
	018 Call 0x1C17CF4
	019 Move X0, 0x2256000
	020 Move X0, [X0+1904]
	021 Call 0x1C17CF4
	022 Move X0, 0x2256000
	023 Move X0, [X0+1912]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+865], W8
	027 Move X8, [X20+104]
	028 Compare X8, 0
	029 JumpIfEqual {71}
	030 Move X23, 0x2256000
	031 Move X24, 0x2256000
	032 Move X23, [X23+1912]
	033 Move X24, [X24+1896]
	034 Move W21, W31
	035 Move W9, [X8+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X2, [X23]
	038 Move X0, X8
	039 Move W1, W21
	040 Call List`1<Object>.get_Item, X0, X1
	041 Move X22, X0
	042 Compare X0, 0
	043 JumpIfEqual {72}
	044 Move X8, [X22]
	045 Move X1, [X24]
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Compare X9, 0
	048 JumpIfEqual {55}
	049 Move X10, [X8+176]
	050 Add X10, X10, 8
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X9, X9, 1
	054 Add X10, X10, 16
	055 Move W2, 18
	056 Move X0, X22
	057 Call 0x1C5D788
	058 Move W9, [X10]
	059 Add W9, W9, 18
	060 Add X8, X8, W9
	061 Add X0, X8, 312
	062 Move X8, [X0]
	063 Move X2, [X0+8]
	064 Move X0, X22
	065 Move X1, X20
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X8, [X20+104]
	068 Add W21, W21, 1
	069 Compare X8, 0
	070 JumpIfNotEqual {35}
	071 Call 0x1C17F20
	072 Call 0x1C17F20
	073 Move X21, X0
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X0, X21
	076 Call 0x3EB2AD0
	077 Move X21, X0
	078 Move X0, 0x224B000
	079 Move X0, [X0+2000]
	080 Call 0x1C17D08
	081 Move X8, [X21]
	082 Move X1, [X8]
	083 Call 0x1C18270
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {116}
	088 Move X21, [X21]
	089 Call 0x3EB2AE0
	090 Move X0, 0x2253000
	091 Move X0, [X0+2224]
	092 Call 0x1C17D08
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move X0, 0x2256000
	098 Move X0, [X0+2152]
	099 Call 0x1C17D08
	100 Move X2, X0
	101 Move X0, X20
	102 Move X1, X21
	103 Call 0x2214878, X0, X1
	104 Move X0, [X20+96]
	105 And X1, X19, 0
	106 Move X20, [X31+48]
	107 Move X19, [X31+56]
	108 Move X22, [X31+32]
	109 Move X21, [X31+40]
	110 Move X24, [X31+16]
	111 Move X23, [X31+24]
	112 Move X2, X31
	113 Move X30, [X31+64]
	114 Call CallbackInterfaceInvoker.ISceneLoadStart, X0, X1
	115 Return 
	116 Move W0, 8
	117 Call 0x3EB2AF0
	118 Move X8, [X21]
	119 Move [X0], X8
	120 Move X1, 0x200C000
	121 Add X1, X1, 3672
	122 Move X2, X31
	123 Call 0x3EB2B00
	124 Move X21, X0
	125 Call 0x3EB2AE0
	126 Move X0, X21
	127 Call 0x1D2D690
	128 Call 0x1991590

Method: System.Void InvokeSceneLoadDone(in Fusion.SceneLoadDoneArgs info)

Disassembly:
	0x01EA9440 MOVZ W8, 0x1
	0x01EA9444 STRB W8, [X23 + 0x36F]
	0x01EA9448 STP X31, X31, [X31 + 0x40]
	0x01EA944C STP X31, X31, [X31 + 0x30]
	0x01EA9450 STP X31, X31, [X31 + 0x20]
	0x01EA9454 STP X31, X31, [X31 + 0x10]
	0x01EA9458 LDP V2, V0, [X20 + 0x10]
	0x01EA945C LDR W8, [X20 + 0x30]
	0x01EA9460 LDR V1, [X20]
	0x01EA9464 LDR X23, [X21 + 0x100]
	0x01EA9468 STP V2, V0, [X31 + 0xE0]
	0x01EA946C STR W8, [X31 + 0x100]
	0x01EA9470 STR V1, [X31 + 0xD]
	0x01EA9474 CBZ X23, 0x1EA9A04
	0x01EA9478 LDP V0, V1, [X31 + 0xD0]
	0x01EA947C LDR V2, [X31 + 0xF]
	0x01EA9480 LDR W8, [X31 + 0x100]
	0x01EA9484 ADRP X10, 0x2251000
	0x01EA9488 STP V0, V1, [X31 + 0x90]
	0x01EA948C STR V2, [X31 + 0xB]
	0x01EA9490 STR W8, [X31 + 0xC0]
	0x01EA9494 LDR X8, [X23]
	0x01EA9498 LDR X10, [X10 + 0xCB0]
	0x01EA949C LDRH W9, [X8 + 0x12E]
	0x01EA94A0 LDR X1, [X10]
	0x01EA94A4 CBZ X9, 0x1EA94C8
	0x01EA94A8 LDR X10, [X8 + 0xB0]
	0x01EA94AC ADD X10, X10, 0x8
	0x01EA94B0 LDUR X11, [X10 - 0x8]
	0x01EA94B4 CMP X11, X1
	0x01EA94B8 B.EQ 0x1EA94D8
	0x01EA94BC SUBS X9, X9, 0x1
	0x01EA94C0 ADD X10, X10, 0x10
	0x01EA94C4 B.NE 0x1EA94B0
	0x01EA94C8 MOVZ W2, 0xD
	0x01EA94CC MOV X0, X23
	0x01EA94D0 BL 0x1C5C788
	0x01EA94D4 B 0x1EA94E8
	0x01EA94D8 LDR W9, [X10]
	0x01EA94DC ADD W9, W9, 0xD
	0x01EA94E0 ADD X8, X8, W9, 0x4, SXTW
	0x01EA94E4 ADD X0, X8, 0x138
	0x01EA94E8 LDP V0, V1, [X31 + 0x90]
	0x01EA94EC LDR V2, [X31 + 0xB]
	0x01EA94F0 LDR W9, [X31 + 0xC0]
	0x01EA94F4 LDR X8, [X0]
	0x01EA94F8 STP V0, V1, [X31 + 0x110]
	0x01EA94FC STR V2, [X31 + 0x13]
	0x01EA9500 STR W9, [X31 + 0x140]
	0x01EA9504 LDR X3, [X0 + 0x8]
	0x01EA9508 ADD X1, X31, 0x110
	0x01EA950C MOV X0, X23
	0x01EA9510 MOV W2, W22
	0x01EA9514 BLR X8
	0x01EA9518 TBNZ X0, 0x0, 0x1EA99D0
	0x01EA951C LDR W8, [X20 + 0x30]
	0x01EA9520 LDP V1, V0, [X20 + 0x10]
	0x01EA9524 LDR V2, [X20]
	0x01EA9528 ADD X1, X31, 0x50
	0x01EA952C MOV X0, X19
	0x01EA9530 MOV X2, X31
	0x01EA9534 STR W8, [X31 + 0x80]
	0x01EA9538 STP V1, V0, [X31 + 0x60]
	0x01EA953C STR V2, [X31 + 0x5]
	0x01EA9540 BL 0x1EBCD14
	0x01EA9544 TBNZ X0, 0x0, 0x1EA99D0
	0x01EA9548 MOVN W22, 0x0
	0x01EA954C MOV X0, X19
	0x01EA9550 MOV X1, X31
	0x01EA9554 BL 0x1EBC6E0
	0x01EA9558 ADD W22, W22, 0x1
	0x01EA955C CMP W22, W0
	0x01EA9560 B.LT 0x1EA954C
	0x01EA9564 MOVN W22, 0x0
	0x01EA9568 MOV X0, X20
	0x01EA956C MOV X1, X31
	0x01EA9570 BL 0x1EBC6E0
	0x01EA9574 ADD W22, W22, 0x1
	0x01EA9578 CMP W22, W0
	0x01EA957C B.LT 0x1EA9568
	0x01EA9580 MOV X0, X20
	0x01EA9584 MOV X1, X31
	0x01EA9588 BL 0x1EBC6E0
	0x01EA958C CMP W0, 0x1
	0x01EA9590 B.LT 0x1EA9690
	0x01EA9594 MOV X0, X20
	0x01EA9598 MOV X1, X31
	0x01EA959C BL 0x1EBC6EC
	0x01EA95A0 ADRP X23, 0x2255000
	0x01EA95A4 LDR X23, [X23 + 0xD10]
	0x01EA95A8 STP X0, X1, [X31 + 0x40]
	0x01EA95AC ADD X0, X31, 0x40
	0x01EA95B0 MOV W1, W31
	0x01EA95B4 LDR X2, [X23]
	0x01EA95B8 BL 0x2D1FA44
	0x01EA95BC MOV X1, X31
	0x01EA95C0 BL 0x1EBC484
	0x01EA95C4 TBZ X0, 0x0, 0x1EA9690
	0x01EA95C8 MOV X0, X19
	0x01EA95CC MOV X1, X31
	0x01EA95D0 BL 0x1EBC6E0
	0x01EA95D4 CBZ W0, 0x1EA981C
	0x01EA95D8 MOV X0, X19
	0x01EA95DC MOV X1, X31
	0x01EA95E0 BL 0x1EBC690
	0x01EA95E4 ADRP X24, 0x2255000
	0x01EA95E8 LDR X24, [X24 + 0xDA8]
	0x01EA95EC STP X0, X1, [X31 + 0x30]
	0x01EA95F0 ADD X0, X31, 0x30
	0x01EA95F4 MOV W1, W31
	0x01EA95F8 LDR X2, [X24]
	0x01EA95FC BL 0x2D205F0
	0x01EA9600 LDR W22, [X0]
	0x01EA9604 MOV X0, X20
	0x01EA9608 MOV X1, X31
	0x01EA960C BL 0x1EBC690

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2531000
	009 Move W8, [X21+866]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x2256000
	017 Move X0, [X0+1896]
	018 Call 0x1C17CF4
	019 Move X0, 0x2256000
	020 Move X0, [X0+1904]
	021 Call 0x1C17CF4
	022 Move X0, 0x2256000
	023 Move X0, [X0+1912]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+866], W8
	027 Move X8, [X20+104]
	028 Compare X8, 0
	029 JumpIfEqual {71}
	030 Move X23, 0x2256000
	031 Move X24, 0x2256000
	032 Move X23, [X23+1912]
	033 Move X24, [X24+1896]
	034 Move W21, W31
	035 Move W9, [X8+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X2, [X23]
	038 Move X0, X8
	039 Move W1, W21
	040 Call List`1<Object>.get_Item, X0, X1
	041 Move X22, X0
	042 Compare X0, 0
	043 JumpIfEqual {72}
	044 Move X8, [X22]
	045 Move X1, [X24]
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Compare X9, 0
	048 JumpIfEqual {55}
	049 Move X10, [X8+176]
	050 Add X10, X10, 8
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X9, X9, 1
	054 Add X10, X10, 16
	055 Move W2, 17
	056 Move X0, X22
	057 Call 0x1C5D788
	058 Move W9, [X10]
	059 Add W9, W9, 17
	060 Add X8, X8, W9
	061 Add X0, X8, 312
	062 Move X8, [X0]
	063 Move X2, [X0+8]
	064 Move X0, X22
	065 Move X1, X20
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X8, [X20+104]
	068 Add W21, W21, 1
	069 Compare X8, 0
	070 JumpIfNotEqual {35}
	071 Call 0x1C17F20
	072 Call 0x1C17F20
	073 Move X21, X0
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X0, X21
	076 Call 0x3EB2AD0
	077 Move X21, X0
	078 Move X0, 0x224B000
	079 Move X0, [X0+2000]
	080 Call 0x1C17D08
	081 Move X8, [X21]
	082 Move X1, [X8]
	083 Call 0x1C18270
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {116}
	088 Move X21, [X21]
	089 Call 0x3EB2AE0
	090 Move X0, 0x2253000
	091 Move X0, [X0+2224]
	092 Call 0x1C17D08
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move X0, 0x2256000
	098 Move X0, [X0+2152]
	099 Call 0x1C17D08
	100 Move X2, X0
	101 Move X0, X20
	102 Move X1, X21
	103 Call 0x2214878, X0, X1
	104 Move X0, [X20+96]
	105 Move X1, X19
	106 Move X20, [X31+48]
	107 Move X19, [X31+56]
	108 Move X22, [X31+32]
	109 Move X21, [X31+40]
	110 Move X24, [X31+16]
	111 Move X23, [X31+24]
	112 Move X2, X31
	113 Move X30, [X31+64]
	114 Call CallbackInterfaceInvoker.ISceneLoadDone, X0, X1
	115 Return 
	116 Move W0, 8
	117 Call 0x3EB2AF0
	118 Move X8, [X21]
	119 Move [X0], X8
	120 Move X1, 0x200C000
	121 Add X1, X1, 3672
	122 Move X2, X31
	123 Call 0x3EB2B00
	124 Move X21, X0
	125 Call 0x3EB2AE0
	126 Move X0, X21
	127 Call 0x1D2D690
	128 Call 0x1991590

Method: UnityEngine.SceneManagement.Scene get_SimulationUnityScene()

Disassembly:
	0x01EA9610 LDR X2, [X24]
	0x01EA9614 STP X0, X1, [X31 + 0x30]
	0x01EA9618 ADD X0, X31, 0x30
	0x01EA961C MOV W1, W31
	0x01EA9620 BL 0x2D205F0
	0x01EA9624 LDR W1, [X0]
	0x01EA9628 MOV X0, X22
	0x01EA962C MOV X2, X31
	0x01EA9630 BL 0x1E90228
	0x01EA9634 TBNZ X0, 0x0, 0x1EA981C
	0x01EA9638 MOV X0, X19
	0x01EA963C MOV X1, X31
	0x01EA9640 BL 0x1EBC6EC
	0x01EA9644 LDR X2, [X23]
	0x01EA9648 STP X0, X1, [X31 + 0x40]
	0x01EA964C ADD X0, X31, 0x40
	0x01EA9650 MOV W1, W31
	0x01EA9654 BL 0x2D1FA44
	0x01EA9658 LDRH W22, [X0]
	0x01EA965C MOV X0, X20
	0x01EA9660 MOV X1, X31
	0x01EA9664 BL 0x1EBC6EC
	0x01EA9668 LDR X2, [X23]
	0x01EA966C STP X0, X1, [X31 + 0x40]
	0x01EA9670 ADD X0, X31, 0x40
	0x01EA9674 MOV W1, W31
	0x01EA9678 BL 0x2D1FA44
	0x01EA967C LDRH W1, [X0]
	0x01EA9680 MOV X0, X22
	0x01EA9684 MOV X2, X31
	0x01EA9688 BL 0x1EBC5B0
	0x01EA968C TBNZ X0, 0x0, 0x1EA981C
	0x01EA9690 MOV X0, X19
	0x01EA9694 MOV X1, X31
	0x01EA9698 BL 0x1EBC6E0
	0x01EA969C CMP W0, 0x1
	0x01EA96A0 B.LT 0x1EA981C
	0x01EA96A4 ADRP X26, 0x2255000
	0x01EA96A8 ADRP X27, 0x2255000
	0x01EA96AC ADRP X28, 0x2255000
	0x01EA96B0 ADRP X29, 0x2255000
	0x01EA96B4 LDR X26, [X26 + 0xDA8]
	0x01EA96B8 LDR X27, [X27 + 0xD10]
	0x01EA96BC LDR X28, [X28 + 0xDA0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2531000
	005 Move W8, [X20+867]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2252000
	012 Move X0, [X0+3248]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+867], W8
	016 Move X19, [X19+256]
	017 Compare X19, 0
	018 JumpIfEqual {35}
	019 Move X10, 0x2252000
	020 Move X8, [X19]
	021 Move X10, [X10+3248]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move W2, 3
	033 Move X0, X19
	034 Call 0x1C5D788
	035 Move X0, X31
	036 Move W9, [X10]
	037 Add W9, W9, 3
	038 Add X8, X8, W9
	039 Add X0, X8, 312
	040 Move X8, [X0]
	041 Move X1, [X0+8]
	042 Move X0, X19
	043 NotImplemented "Instruction BLR not yet implemented."
	044 And X0, X0, 0
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Return X0

Method: Fusion.NetworkRunner GetRunnerForGameObject(UnityEngine.GameObject gameObject)

Disassembly:
	0x01EA96C0 LDR X29, [X29 + 0xDB0]
	0x01EA96C4 MOV W22, W31
	0x01EA96C8 MOV X0, X19
	0x01EA96CC MOV X1, X31
	0x01EA96D0 BL 0x1EBC690
	0x01EA96D4 LDR X2, [X26]
	0x01EA96D8 STP X0, X1, [X31 + 0x30]
	0x01EA96DC ADD X0, X31, 0x30
	0x01EA96E0 MOV W1, W22
	0x01EA96E4 BL 0x2D205F0
	0x01EA96E8 LDR W24, [X0]
	0x01EA96EC MOV X0, X19
	0x01EA96F0 MOV X1, X31
	0x01EA96F4 BL 0x1EBC6EC
	0x01EA96F8 LDR X2, [X27]
	0x01EA96FC STP X0, X1, [X31 + 0x40]
	0x01EA9700 ADD X0, X31, 0x40
	0x01EA9704 MOV W1, W22
	0x01EA9708 BL 0x2D1FA44
	0x01EA970C LDRH W8, [X0]
	0x01EA9710 AND X9, X23, 0xFFFFFFFF
	0x01EA9714 MOV X0, X20
	0x01EA9718 MOV X1, X24
	0x01EA971C ORR X23, X9, X8, 0x0
	0x01EA9720 MOV X2, X23
	0x01EA9724 MOV X3, X31
	0x01EA9728 BL 0x1EBC73C
	0x01EA972C TBZ X0, 0x1F, 0x1EA9804

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2531000
	005 Move W8, [X20+868]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2254000
	012 Move X0, [X0+3712]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+868], W8
	016 Compare X19, 0
	017 JumpIfEqual {34}
	018 Move X20, 0x2254000
	019 Move X20, [X20+3712]
	020 Move X0, X19
	021 Move X1, X31
	022 Call GameObject.get_scene, X0
	023 Move X8, [X20]
	024 Move X19, X0
	025 Move W9, [X8+224]
	026 Compare W9, 0
	027 JumpIfNotEqual {30}
	028 Move X0, X8
	029 Call 0x1C17DFC
	030 And X0, X19, 0
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Call 0x1C17F20

Method: Fusion.NetworkRunner GetRunnerForScene(UnityEngine.SceneManagement.Scene scene)

Disassembly:
	0x01EA9730 LDR X24, [X21 + 0x100]
	0x01EA9734 MOV X0, X19
	0x01EA9738 MOV X1, X31
	0x01EA973C BL 0x1EBC690
	0x01EA9740 LDR X2, [X26]
	0x01EA9744 STP X0, X1, [X31 + 0x30]
	0x01EA9748 ADD X0, X31, 0x30
	0x01EA974C MOV W1, W22
	0x01EA9750 BL 0x2D205F0
	0x01EA9754 CBZ X24, 0x1EA9A04
	0x01EA9758 LDR X8, [X24]
	0x01EA975C ADRP X10, 0x2251000
	0x01EA9760 LDR W25, [X0]
	0x01EA9764 LDRH W9, [X8 + 0x12E]
	0x01EA9768 LDR X10, [X10 + 0xCB0]
	0x01EA976C LDR X1, [X10]
	0x01EA9770 CBZ X9, 0x1EA9794
	0x01EA9774 LDR X10, [X8 + 0xB0]
	0x01EA9778 ADD X10, X10, 0x8
	0x01EA977C LDUR X11, [X10 - 0x8]
	0x01EA9780 CMP X11, X1
	0x01EA9784 B.EQ 0x1EA97A4
	0x01EA9788 SUBS X9, X9, 0x1
	0x01EA978C ADD X10, X10, 0x10
	0x01EA9790 B.NE 0x1EA977C
	0x01EA9794 MOVZ W2, 0xA
	0x01EA9798 MOV X0, X24
	0x01EA979C BL 0x1C5C788
	0x01EA97A0 B 0x1EA97B4
	0x01EA97A4 LDR W9, [X10]
	0x01EA97A8 ADD W9, W9, 0xA
	0x01EA97AC ADD X8, X8, W9, 0x4, SXTW
	0x01EA97B0 ADD X0, X8, 0x138
	0x01EA97B4 LDP X8, X2, [X0]
	0x01EA97B8 MOV X0, X24
	0x01EA97BC MOV X1, X25
	0x01EA97C0 BLR X8
	0x01EA97C4 MOV X2, X1
	0x01EA97C8 MOV X1, X0
	0x01EA97CC BL 0x1EA7788
	0x01EA97D0 LDR X8, [X28]
	0x01EA97D4 STP X0, X1, [X31 + 0x20]
	0x01EA97D8 MOV X0, X8
	0x01EA97DC BL 0x1C16F10
	0x01EA97E0 LDR X2, [X29]
	0x01EA97E4 MOV X1, X21
	0x01EA97E8 MOV X3, X31
	0x01EA97EC MOV X24, X0
	0x01EA97F0 BL 0x2A6B818
	0x01EA97F4 ADD X0, X31, 0x20
	0x01EA97F8 MOV X1, X24
	0x01EA97FC MOV X2, X31
	0x01EA9800 BL 0x1EBBA54
	0x01EA9804 MOV X0, X19
	0x01EA9808 MOV X1, X31
	0x01EA980C ADD W22, W22, 0x1
	0x01EA9810 BL 0x1EBC6E0
	0x01EA9814 CMP W22, W0
	0x01EA9818 B.LT 0x1EA96C8
	0x01EA981C MOV X0, X20
	0x01EA9820 MOV X1, X31
	0x01EA9824 BL 0x1EBC6E0
	0x01EA9828 CMP W0, 0x1
	0x01EA982C B.LT 0x1EA99D0
	0x01EA9830 ADRP X29, 0x2255000
	0x01EA9834 ADRP X28, 0x2255000
	0x01EA9838 ADRP X27, 0x2255000
	0x01EA983C LDR X29, [X29 + 0xDA8]
	0x01EA9840 LDR X28, [X28 + 0xD10]
	0x01EA9844 LDR X27, [X27 + 0xDB8]
	0x01EA9848 MOV W22, W31
	0x01EA984C MOV X0, X20
	0x01EA9850 MOV X1, X31
	0x01EA9854 BL 0x1EBC690
	0x01EA9858 LDR X2, [X29]
	0x01EA985C STP X0, X1, [X31 + 0x30]
	0x01EA9860 ADD X0, X31, 0x30
	0x01EA9864 MOV W1, W22
	0x01EA9868 BL 0x2D205F0
	0x01EA986C LDR W24, [X0]
	0x01EA9870 MOV X0, X20
	0x01EA9874 MOV X1, X31
	0x01EA9878 BL 0x1EBC6EC
	0x01EA987C LDR X2, [X28]
	0x01EA9880 STP X0, X1, [X31 + 0x40]
	0x01EA9884 ADD X0, X31, 0x40
	0x01EA9888 MOV W1, W22
	0x01EA988C BL 0x2D1FA44
	0x01EA9890 LDRH W8, [X0]
	0x01EA9894 AND X9, X23, 0xFFFFFFFF
	0x01EA9898 MOV X0, X19
	0x01EA989C MOV X1, X24
	0x01EA98A0 ORR X23, X9, X8, 0x0
	0x01EA98A4 MOV X2, X23
	0x01EA98A8 MOV X3, X31
	0x01EA98AC BL 0x1EBC73C
	0x01EA98B0 TBZ X0, 0x1F, 0x1EA99B8
	0x01EA98B4 LDR X24, [X21 + 0x100]
	0x01EA98B8 MOV X0, X20
	0x01EA98BC MOV X1, X31
	0x01EA98C0 BL 0x1EBC690
	0x01EA98C4 LDR X2, [X29]
	0x01EA98C8 STP X0, X1, [X31 + 0x30]
	0x01EA98CC ADD X0, X31, 0x30
	0x01EA98D0 MOV W1, W22
	0x01EA98D4 BL 0x2D205F0
	0x01EA98D8 LDR W25, [X0]
	0x01EA98DC MOV X0, X20
	0x01EA98E0 MOV X1, X31
	0x01EA98E4 BL 0x1EBC6EC
	0x01EA98E8 LDR X2, [X28]
	0x01EA98EC STP X0, X1, [X31 + 0x40]
	0x01EA98F0 ADD X0, X31, 0x40
	0x01EA98F4 MOV W1, W22
	0x01EA98F8 BL 0x2D1FA44
	0x01EA98FC CBZ X24, 0x1EA9A04
	0x01EA9900 LDR X8, [X24]
	0x01EA9904 ADRP X10, 0x2251000
	0x01EA9908 LDRH W26, [X0]
	0x01EA990C LDRH W9, [X8 + 0x12E]
	0x01EA9910 LDR X10, [X10 + 0xCB0]
	0x01EA9914 LDR X1, [X10]
	0x01EA9918 CBZ X9, 0x1EA993C
	0x01EA991C LDR X10, [X8 + 0xB0]
	0x01EA9920 ADD X10, X10, 0x8
	0x01EA9924 LDUR X11, [X10 - 0x8]
	0x01EA9928 CMP X11, X1
	0x01EA992C B.EQ 0x1EA994C
	0x01EA9930 SUBS X9, X9, 0x1
	0x01EA9934 ADD X10, X10, 0x10
	0x01EA9938 B.NE 0x1EA9924
	0x01EA993C MOVZ W2, 0x9
	0x01EA9940 MOV X0, X24
	0x01EA9944 BL 0x1C5C788
	0x01EA9948 B 0x1EA995C
	0x01EA994C LDR W9, [X10]
	0x01EA9950 ADD W9, W9, 0x9
	0x01EA9954 ADD X8, X8, W9, 0x4, SXTW
	0x01EA9958 ADD X0, X8, 0x138
	0x01EA995C LDP X8, X3, [X0]
	0x01EA9960 MOV X0, X24
	0x01EA9964 MOV X1, X25
	0x01EA9968 MOV X2, X26
	0x01EA996C BLR X8
	0x01EA9970 MOV X2, X1
	0x01EA9974 MOV X1, X0
	0x01EA9978 BL 0x1EA7788
	0x01EA997C ADRP X8, 0x2255000
	0x01EA9980 LDR X8, [X8 + 0xDA0]
	0x01EA9984 STP X0, X1, [X31 + 0x10]
	0x01EA9988 LDR X8, [X8]
	0x01EA998C MOV X0, X8
	0x01EA9990 BL 0x1C16F10
	0x01EA9994 LDR X2, [X27]
	0x01EA9998 MOV X1, X21
	0x01EA999C MOV X3, X31
	0x01EA99A0 MOV X24, X0
	0x01EA99A4 BL 0x2A6B818
	0x01EA99A8 ADD X0, X31, 0x10
	0x01EA99AC MOV X1, X24
	0x01EA99B0 MOV X2, X31
	0x01EA99B4 BL 0x1EBBA54
	0x01EA99B8 MOV X0, X20
	0x01EA99BC MOV X1, X31
	0x01EA99C0 ADD W22, W22, 0x1
	0x01EA99C4 BL 0x1EBC6E0
	0x01EA99C8 CMP W22, W0
	0x01EA99CC B.LT 0x1EA984C
	0x01EA99D0 LDR X8, [X31 + 0x8]
	0x01EA99D4 LDR X8, [X8 + 0x28]
	0x01EA99D8 LDR X9, [X31 + 0x148]
	0x01EA99DC CMP X8, X9
	0x01EA99E0 B.NE 0x1EA9A08
	0x01EA99E4 LDP X20, X19, [X31 + 0x1A0]
	0x01EA99E8 LDP X22, X21, [X31 + 0x190]
	0x01EA99EC LDP X24, X23, [X31 + 0x180]
	0x01EA99F0 LDP X26, X25, [X31 + 0x170]
	0x01EA99F4 LDP X28, X27, [X31 + 0x160]
	0x01EA99F8 LDP X29, X30, [X31 + 0x150]
	0x01EA99FC ADD X31, X31, 0x1B0
	0x01EA9A00 RET
	0x01EA9A04 BL 0x1C16F20
	0x01EA9A08 BL 0x3EB1B20
	0x01EA9A0C SUB X31, X31, 0x50
	0x01EA9A10 STP X30, X23, [X31 + 0x20]
	0x01EA9A14 STP X22, X21, [X31 + 0x30]
	0x01EA9A18 STP X20, X19, [X31 + 0x40]
	0x01EA9A1C ADRP X20, 0x2530000
	0x01EA9A20 LDRB W8, [X20 + 0x370]
	0x01EA9A24 MOV X19, X0
	0x01EA9A28 STP X1, X2, [X31 + 0x10]
	0x01EA9A2C TBNZ X8, 0x0, 0x1EA9A68
	0x01EA9A30 ADRP X0, 0x2255000
	0x01EA9A34 LDR X0, [X0 + 0xDC0]
	0x01EA9A38 BL 0x1C16CF4
	0x01EA9A3C ADRP X0, 0x2252000
	0x01EA9A40 LDR X0, [X0 + 0x8B0]
	0x01EA9A44 BL 0x1C16CF4
	0x01EA9A48 ADRP X0, 0x2255000
	0x01EA9A4C LDR X0, [X0 + 0x140]
	0x01EA9A50 BL 0x1C16CF4
	0x01EA9A54 ADRP X0, 0x2255000
	0x01EA9A58 LDR X0, [X0 + 0xDC8]
	0x01EA9A5C BL 0x1C16CF4
	0x01EA9A60 MOVZ W8, 0x1
	0x01EA9A64 STRB W8, [X20 + 0x370]
	0x01EA9A68 ADD X0, X31, 0x10
	0x01EA9A6C MOV X1, X31
	0x01EA9A70 BL 0x1EBB40C
	0x01EA9A74 CBZ X0, 0x1EA9AFC
	0x01EA9A78 ADRP X8, 0x2255000
	0x01EA9A7C LDR X8, [X8 + 0x140]
	0x01EA9A80 ADRP X22, 0x2255000
	0x01EA9A84 LDR X22, [X22 + 0xDC8]
	0x01EA9A88 LDR W9, [X31 + 0x10]
	0x01EA9A8C LDR X0, [X8]
	0x01EA9A90 ADRP X23, 0x2252000
	0x01EA9A94 ADRP X21, 0x2255000
	0x01EA9A98 LDR X23, [X23 + 0x8B0]
	0x01EA9A9C LDR X21, [X21 + 0xDC0]
	0x01EA9AA0 ADD X1, X31, 0x8
	0x01EA9AA4 STR W9, [X31 + 0x8]
	0x01EA9AA8 BL 0x1C16E04
	0x01EA9AAC MOV X20, X0
	0x01EA9AB0 ADD X0, X31, 0x10
	0x01EA9AB4 MOV X1, X31
	0x01EA9AB8 BL 0x1EBB40C
	0x01EA9ABC LDR X8, [X22]
	0x01EA9AC0 MOV X2, X0
	0x01EA9AC4 MOV X1, X20
	0x01EA9AC8 MOV X3, X31
	0x01EA9ACC MOV X0, X8
	0x01EA9AD0 BL 0x3227BD4
	0x01EA9AD4 LDR X8, [X23]
	0x01EA9AD8 MOV X20, X0
	0x01EA9ADC LDR W9, [X8 + 0xE0]
	0x01EA9AE0 CBNZ W9, 0x1EA9AEC
	0x01EA9AE4 MOV X0, X8
	0x01EA9AE8 BL 0x1C16DFC
	0x01EA9AEC LDR X2, [X21]
	0x01EA9AF0 MOV X0, X19
	0x01EA9AF4 MOV X1, X20
	0x01EA9AF8 BL 0x22137F8
	0x01EA9AFC LDP X20, X19, [X31 + 0x40]
	0x01EA9B00 LDP X22, X21, [X31 + 0x30]
	0x01EA9B04 LDP X30, X23, [X31 + 0x20]
	0x01EA9B08 ADD X31, X31, 0x50
	0x01EA9B0C RET
	0x01EA9B10 SUB X31, X31, 0x50

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x2531000
	011 Move X19, 0x2254000
	012 Move W8, [X20+869]
	013 Move X19, [X19+3712]
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0x224B000
	020 Move X0, [X0+3584]
	021 Call 0x1C17CF4
	022 Move X0, 0x2256000
	023 Move X0, [X0+3424]
	024 Call 0x1C17CF4
	025 Move X0, 0x2256000
	026 Move X0, [X0+3432]
	027 Call 0x1C17CF4
	028 Move X0, 0x224B000
	029 Move X0, [X0+3608]
	030 Call 0x1C17CF4
	031 Move X0, 0x2252000
	032 Move X0, [X0+3248]
	033 Call 0x1C17CF4
	034 Move X0, 0x2254000
	035 Move X0, [X0+3712]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+869], W8
	039 Move X0, [X19]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X20, 0x2531000
	045 Move W8, [X20+957]
	046 Compare W8, 0
	047 JumpIfNotEqual {53}
	048 Move X0, 0x2254000
	049 Move X0, [X0+3712]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X20+957], W8
	053 Move X0, [X19]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {59}
	057 Call 0x1C17DFC
	058 Move X0, [X19]
	059 Move X8, [X0+184]
	060 Move X19, [X8]
	061 Compare X19, 0
	062 JumpIfEqual {220}
	063 Move X10, 0x2256000
	064 Move X8, [X19]
	065 Move X10, [X10+3424]
	066 NotImplemented "Instruction LDRH not yet implemented."
	067 Move X1, [X10]
	068 Compare X9, 0
	069 JumpIfEqual {76}
	070 Move X10, [X8+176]
	071 Add X10, X10, 8
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract X9, X9, 1
	075 Add X10, X10, 16
	076 Move X0, X19
	077 Move W2, W31
	078 Call 0x1C5D788
	079 NotImplemented "Instruction LDRSW not yet implemented."
	080 Add X8, X8, X9
	081 Add X0, X8, 312
	082 Move X8, [X0]
	083 Move X1, [X0+8]
	084 Move X23, 0x224B000
	085 Move X23, [X23+3584]
	086 Move X0, X19
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move X19, X0
	089 Compare X0, 0
	090 JumpIfEqual {221}
	091 Move X24, 0x224B000
	092 Move X25, 0x2256000
	093 Move X26, 0x2252000
	094 Move X24, [X24+3608]
	095 Move X25, [X25+3432]
	096 Move X26, [X26+3248]
	097 Move X20, X31
	098 And X21, X21, 0
	099 Move X8, [X19]
	100 Move X1, [X24]
	101 NotImplemented "Instruction LDRH not yet implemented."
	102 Compare X9, 0
	103 JumpIfEqual {110}
	104 Move X10, [X8+176]
	105 Add X10, X10, 8
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Subtract X9, X9, 1
	109 Add X10, X10, 16
	110 Move X0, X19
	111 Move W2, W31
	112 Call 0x1C5D788
	113 NotImplemented "Instruction LDRSW not yet implemented."
	114 Add X8, X8, X9
	115 Add X0, X8, 312
	116 Move X8, [X0]
	117 Move X1, [X0+8]
	118 Move X0, X19
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {182}
	124 Move X8, [X19]
	125 Move X1, [X25]
	126 NotImplemented "Instruction LDRH not yet implemented."
	127 Compare X9, 0
	128 JumpIfEqual {135}
	129 Move X10, [X8+176]
	130 Add X10, X10, 8
	131 NotImplemented "Instruction LDUR not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Subtract X9, X9, 1
	134 Add X10, X10, 16
	135 Move X0, X19
	136 Move W2, W31
	137 Call 0x1C5D788
	138 NotImplemented "Instruction LDRSW not yet implemented."
	139 Add X8, X8, X9
	140 Add X0, X8, 312
	141 Move X8, [X0]
	142 Move X1, [X0+8]
	143 Move X0, X19
	144 NotImplemented "Instruction BLR not yet implemented."
	145 Move X22, X0
	146 Compare X0, 0
	147 JumpIfEqual {99}
	148 Move X8, [X22+256]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 NotImplemented "Instruction CSEL not yet implemented."
	151 Compare X8, 0
	152 JumpIfEqual {179}
	153 Compare X20, 0
	154 JumpIfEqual {224}
	155 Move X8, [X20]
	156 Move X1, [X26]
	157 NotImplemented "Instruction LDRH not yet implemented."
	158 Compare X9, 0
	159 JumpIfEqual {166}
	160 Move X10, [X8+176]
	161 Add X10, X10, 8
	162 NotImplemented "Instruction LDUR not yet implemented."
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Subtract X9, X9, 1
	165 Add X10, X10, 16
	166 Move W2, 4
	167 Move X0, X20
	168 Call 0x1C5D788
	169 Move W9, [X10]
	170 Add W9, W9, 4
	171 Add X8, X8, W9
	172 Add X0, X8, 312
	173 Move X8, [X0]
	174 Move X2, [X0+8]
	175 Move X0, X20
	176 Move X1, X21
	177 NotImplemented "Instruction BLR not yet implemented."
	178 And W8, W0, 1
	179 Compare W8, 0
	180 JumpIfEqual {99}
	181 Move X20, X31
	182 Move X20, X31
	183 Move X22, X31
	184 Compare X19, 0
	185 JumpIfEqual {207}
	186 Move X8, [X19]
	187 Move X1, [X23]
	188 NotImplemented "Instruction LDRH not yet implemented."
	189 Compare X9, 0
	190 JumpIfEqual {197}
	191 Move X10, [X8+176]
	192 Add X10, X10, 8
	193 NotImplemented "Instruction LDUR not yet implemented."
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Subtract X9, X9, 1
	196 Add X10, X10, 16
	197 Move X0, X19
	198 Move W2, W31
	199 Call 0x1C5D788
	200 NotImplemented "Instruction LDRSW not yet implemented."
	201 Add X8, X8, X9
	202 Add X0, X8, 312
	203 Move X8, [X0]
	204 Move X1, [X0+8]
	205 Move X0, X19
	206 NotImplemented "Instruction BLR not yet implemented."
	207 Compare X20, 0
	208 JumpIfNotEqual {222}
	209 Move X0, X22
	210 Move X20, [X31+64]
	211 Move X19, [X31+72]
	212 Move X22, [X31+48]
	213 Move X21, [X31+56]
	214 Move X24, [X31+32]
	215 Move X23, [X31+40]
	216 Move X26, [X31+16]
	217 Move X25, [X31+24]
	218 Move X30, [X31+80]
	219 Return X0
	220 Call 0x1C17F20
	221 Call 0x1C17F20
	222 Move X0, X20
	223 Call 0x1C17F18
	224 Call 0x1C17F20
	225 Move X21, X0
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Move X0, X21
	228 Call 0x3EB2AD0
	229 Move X20, [X0]
	230 Call 0x3EB2AE0
	231 Move X20, X31
	232 Move X21, X0
	233 Compare X19, 0
	234 JumpIfEqual {256}
	235 Move X8, [X19]
	236 Move X1, [X23]
	237 NotImplemented "Instruction LDRH not yet implemented."
	238 Compare X9, 0
	239 JumpIfEqual {246}
	240 Move X10, [X8+176]
	241 Add X10, X10, 8
	242 NotImplemented "Instruction LDUR not yet implemented."
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Subtract X9, X9, 1
	245 Add X10, X10, 16
	246 Move X0, X19
	247 Move W2, W31
	248 Call 0x1C5D788
	249 NotImplemented "Instruction LDRSW not yet implemented."
	250 Add X8, X8, X9
	251 Add X0, X8, 312
	252 Move X8, [X0]
	253 Move X1, [X0+8]
	254 Move X0, X19
	255 NotImplemented "Instruction BLR not yet implemented."
	256 Compare X20, 0
	257 JumpIfNotEqual {260}
	258 Move X0, X21
	259 Call 0x1D2D690
	260 Move X0, X20
	261 Call 0x1C17F18
	262 Call 0x1991590

Method: UnityEngine.PhysicsScene GetPhysicsScene()

Disassembly:
	0x01EA7D70 LDRH W21, [X0]
	0x01EA7D74 LDR X10, [X10 + 0xCB0]
	0x01EA7D78 LDRH W9, [X8 + 0x12E]
	0x01EA7D7C LDR X1, [X10]
	0x01EA7D80 CBZ X9, 0x1EA7DA4
	0x01EA7D84 LDR X10, [X8 + 0xB0]
	0x01EA7D88 ADD X10, X10, 0x8
	0x01EA7D8C LDUR X11, [X10 - 0x8]
	0x01EA7D90 CMP X11, X1
	0x01EA7D94 B.EQ 0x1EA7DB4
	0x01EA7D98 SUBS X9, X9, 0x1
	0x01EA7D9C ADD X10, X10, 0x10
	0x01EA7DA0 B.NE 0x1EA7D8C
	0x01EA7DA4 MOVZ W2, 0x9
	0x01EA7DA8 MOV X0, X20
	0x01EA7DAC BL 0x1C5C788
	0x01EA7DB0 B 0x1EA7DC4
	0x01EA7DB4 LDR W9, [X10]
	0x01EA7DB8 ADD W9, W9, 0x9
	0x01EA7DBC ADD X8, X8, W9, 0x4, SXTW
	0x01EA7DC0 ADD X0, X8, 0x138
	0x01EA7DC4 LDP X8, X3, [X0]
	0x01EA7DC8 MOV X0, X20
	0x01EA7DCC MOV X1, X19
	0x01EA7DD0 MOV X2, X21
	0x01EA7DD4 BLR X8
	0x01EA7DD8 MOV X2, X1
	0x01EA7DDC MOV X1, X0
	0x01EA7DE0 BL 0x1EA7788
	0x01EA7DE4 LDP X20, X19, [X31 + 0x50]
	0x01EA7DE8 LDP X22, X21, [X31 + 0x40]
	0x01EA7DEC LDP X24, X23, [X31 + 0x30]
	0x01EA7DF0 LDP X30, X25, [X31 + 0x20]
	0x01EA7DF4 ADD X31, X31, 0x60
	0x01EA7DF8 RET
	0x01EA7DFC BL 0x1C16F20
	0x01EA7E00 STR X30, [X31 - 0x30]!
	0x01EA7E04 STP X22, X21, [X31 + 0x10]
	0x01EA7E08 STP X20, X19, [X31 + 0x20]
	0x01EA7E0C MOV X20, X1
	0x01EA7E10 MOV X21, X0
	0x01EA7E14 ADD X0, X31, 0x8
	0x01EA7E18 MOV W1, W2
	0x01EA7E1C MOV W2, W3
	0x01EA7E20 MOV X3, X31
	0x01EA7E24 MOV W19, W4
	0x01EA7E28 STR X31, [X31 + 0x8]
	0x01EA7E2C BL 0x3C47F30
	0x01EA7E30 LDR X22, [X31 + 0x8]
	0x01EA7E34 MOV X0, X21
	0x01EA7E38 MOV X1, X20
	0x01EA7E3C BL 0x1EA74E4
	0x01EA7E40 AND X1, X0, 0x0
	0x01EA7E44 AND W3, W19, 0x1
	0x01EA7E48 MOV X0, X21
	0x01EA7E4C MOV X2, X22
	0x01EA7E50 BL 0x1EA7AE0
	0x01EA7E54 LDP X20, X19, [X31 + 0x20]
	0x01EA7E58 LDP X22, X21, [X31 + 0x10]
	0x01EA7E5C LDR X30, [X31], #0x30
	0x01EA7E60 RET
	0x01EA7E64 SUB X31, X31, 0x30
	0x01EA7E68 STP X30, X21, [X31 + 0x10]
	0x01EA7E6C STP X20, X19, [X31 + 0x20]
	0x01EA7E70 MOV X20, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2533000
	005 Move W8, [X20+870]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x2254000
	012 Move X0, [X0+3248]
	013 Call 0x1C17CF4
	014 Move X0, 0x224D000
	015 Move X0, [X0+1528]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+870], W8
	019 Move [X31+8], W31
	020 Move X0, [X19+80]
	021 Compare X0, 0
	022 JumpIfEqual {48}
	023 Move X1, X31
	024 Call Simulation.get_IsRunning, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {48}
	029 Move X19, [X19+256]
	030 Compare X19, 0
	031 JumpIfEqual {74}
	032 Move X10, 0x2254000
	033 Move X8, [X19]
	034 Move X10, [X10+3248]
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X1, [X10]
	037 Compare X9, 0
	038 JumpIfEqual {45}
	039 Move X10, [X8+176]
	040 Add X10, X10, 8
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract X9, X9, 1
	044 Add X10, X10, 16
	045 Move W2, 6
	046 Move X0, X19
	047 Call 0x1C5D788
	048 Move X8, 0x224D000
	049 Move X8, [X8+1528]
	050 Move X0, [X8]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X31
	056 Call Physics.get_defaultPhysicsScene
	057 Move W9, [X10]
	058 Add W9, W9, 6
	059 Add X8, X8, W9
	060 Add X0, X8, 312
	061 Move X8, [X0]
	062 Move X2, [X0+8]
	063 Add X1, X31, 8
	064 Move X0, X19
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move W8, [X31+8]
	067 And W31, W0, 1
	068 NotImplemented "Instruction CSEL not yet implemented."
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move W0, W0
	072 Move X30, [X31+32]
	073 Return X0
	074 Call 0x1C17F20

Method: UnityEngine.PhysicsScene2D GetPhysicsScene2D()

Disassembly:
	0x01EA7E74 MOV X21, X0
	0x01EA7E78 ADD X0, X31, 0x8
	0x01EA7E7C MOV W1, W2
	0x01EA7E80 MOV W2, W3
	0x01EA7E84 MOV X3, X31
	0x01EA7E88 MOV W19, W4
	0x01EA7E8C STR X31, [X31 + 0x8]
	0x01EA7E90 BL 0x3C47F30
	0x01EA7E94 LDR X2, [X31 + 0x8]
	0x01EA7E98 AND X1, X20, 0x0
	0x01EA7E9C AND W3, W19, 0x1
	0x01EA7EA0 MOV X0, X21
	0x01EA7EA4 BL 0x1EA7AE0
	0x01EA7EA8 LDP X20, X19, [X31 + 0x20]
	0x01EA7EAC LDP X30, X21, [X31 + 0x10]
	0x01EA7EB0 ADD X31, X31, 0x30
	0x01EA7EB4 RET
	0x01EA7EB8 STP X30, X19, [X31 - 0x10]!
	0x01EA7EBC MOV X19, X0
	0x01EA7EC0 BL 0x1EA74E4
	0x01EA7EC4 AND X1, X0, 0x0
	0x01EA7EC8 MOV X0, X19
	0x01EA7ECC LDP X30, X19, [X31], #0x10
	0x01EA7ED0 B 0x1EA7ED4
	0x01EA7ED4 SUB X31, X31, 0x40
	0x01EA7ED8 STP X30, X23, [X31 + 0x10]
	0x01EA7EDC STP X22, X21, [X31 + 0x20]
	0x01EA7EE0 STP X20, X19, [X31 + 0x30]
	0x01EA7EE4 ADRP X21, 0x2532000
	0x01EA7EE8 LDRB W8, [X21 + 0x360]
	0x01EA7EEC MOV X19, X1
	0x01EA7EF0 MOV X20, X0
	0x01EA7EF4 TBNZ X8, 0x0, 0x1EA7F60
	0x01EA7EF8 ADRP X0, 0x2254000
	0x01EA7EFC LDR X0, [X0 + 0x578]
	0x01EA7F00 BL 0x1C16CF4
	0x01EA7F04 ADRP X0, 0x2257000
	0x01EA7F08 LDR X0, [X0 + 0xD18]
	0x01EA7F0C BL 0x1C16CF4
	0x01EA7F10 ADRP X0, 0x2253000
	0x01EA7F14 LDR X0, [X0 + 0xCB0]
	0x01EA7F18 BL 0x1C16CF4
	0x01EA7F1C ADRP X0, 0x2257000
	0x01EA7F20 LDR X0, [X0 + 0xD38]
	0x01EA7F24 BL 0x1C16CF4
	0x01EA7F28 ADRP X0, 0x2257000
	0x01EA7F2C LDR X0, [X0 + 0x140]
	0x01EA7F30 BL 0x1C16CF4
	0x01EA7F34 ADRP X0, 0x2257000
	0x01EA7F38 LDR X0, [X0 + 0xD20]
	0x01EA7F3C BL 0x1C16CF4
	0x01EA7F40 ADRP X0, 0x2257000
	0x01EA7F44 LDR X0, [X0 + 0x4D8]
	0x01EA7F48 BL 0x1C16CF4
	0x01EA7F4C ADRP X0, 0x2257000
	0x01EA7F50 LDR X0, [X0 + 0xD40]
	0x01EA7F54 BL 0x1C16CF4
	0x01EA7F58 MOVZ W8, 0x1
	0x01EA7F5C STRB W8, [X21 + 0x360]
	0x01EA7F60 AND X1, X19, 0x0
	0x01EA7F64 MOV X0, X20
	0x01EA7F68 BL 0x1EA76C0
	0x01EA7F6C MOV X21, X0
	0x01EA7F70 MOVZ W1, 0x1
	0x01EA7F74 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2533000
	005 Move W8, [X20+871]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x2254000
	012 Move X0, [X0+3248]
	013 Call 0x1C17CF4
	014 Move X0, 0x2254000
	015 Move X0, [X0+3168]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+871], W8
	019 Move [X31+8], W31
	020 Move X0, [X19+80]
	021 Compare X0, 0
	022 JumpIfEqual {48}
	023 Move X1, X31
	024 Call Simulation.get_IsRunning, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {48}
	029 Move X19, [X19+256]
	030 Compare X19, 0
	031 JumpIfEqual {74}
	032 Move X10, 0x2254000
	033 Move X8, [X19]
	034 Move X10, [X10+3248]
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X1, [X10]
	037 Compare X9, 0
	038 JumpIfEqual {45}
	039 Move X10, [X8+176]
	040 Add X10, X10, 8
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract X9, X9, 1
	044 Add X10, X10, 16
	045 Move W2, 5
	046 Move X0, X19
	047 Call 0x1C5D788
	048 Move X8, 0x2254000
	049 Move X8, [X8+3168]
	050 Move X0, [X8]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X31
	056 Call Physics2D.get_defaultPhysicsScene
	057 Move W9, [X10]
	058 Add W9, W9, 5
	059 Add X8, X8, W9
	060 Add X0, X8, 312
	061 Move X8, [X0]
	062 Move X2, [X0+8]
	063 Add X1, X31, 8
	064 Move X0, X19
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move W8, [X31+8]
	067 And W31, W0, 1
	068 NotImplemented "Instruction CSEL not yet implemented."
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move W0, W0
	072 Move X30, [X31+32]
	073 Return X0
	074 Call 0x1C17F20

Method: UnityEngine.GameObject InstantiateInRunnerScene(UnityEngine.GameObject original, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)

Disassembly:
	0x01EA9B14 STP X30, X23, [X31 + 0x20]
	0x01EA9B18 STP X22, X21, [X31 + 0x30]
	0x01EA9B1C STP X20, X19, [X31 + 0x40]
	0x01EA9B20 ADRP X20, 0x2530000
	0x01EA9B24 LDRB W8, [X20 + 0x371]
	0x01EA9B28 MOV X19, X0
	0x01EA9B2C STP X1, X2, [X31 + 0x10]
	0x01EA9B30 TBNZ X8, 0x0, 0x1EA9B6C
	0x01EA9B34 ADRP X0, 0x2255000
	0x01EA9B38 LDR X0, [X0 + 0xDC0]
	0x01EA9B3C BL 0x1C16CF4
	0x01EA9B40 ADRP X0, 0x2252000
	0x01EA9B44 LDR X0, [X0 + 0x8B0]
	0x01EA9B48 BL 0x1C16CF4
	0x01EA9B4C ADRP X0, 0x2255000
	0x01EA9B50 LDR X0, [X0 + 0x140]
	0x01EA9B54 BL 0x1C16CF4
	0x01EA9B58 ADRP X0, 0x2255000
	0x01EA9B5C LDR X0, [X0 + 0xDD0]
	0x01EA9B60 BL 0x1C16CF4
	0x01EA9B64 MOVZ W8, 0x1
	0x01EA9B68 STRB W8, [X20 + 0x371]
	0x01EA9B6C ADD X0, X31, 0x10
	0x01EA9B70 MOV X1, X31
	0x01EA9B74 BL 0x1EBB40C
	0x01EA9B78 CBZ X0, 0x1EA9C00
	0x01EA9B7C ADRP X8, 0x2255000
	0x01EA9B80 LDR X8, [X8 + 0x140]
	0x01EA9B84 ADRP X22, 0x2255000
	0x01EA9B88 LDR X22, [X22 + 0xDD0]
	0x01EA9B8C LDR W9, [X31 + 0x10]
	0x01EA9B90 LDR X0, [X8]
	0x01EA9B94 ADRP X23, 0x2252000
	0x01EA9B98 ADRP X21, 0x2255000
	0x01EA9B9C LDR X23, [X23 + 0x8B0]
	0x01EA9BA0 LDR X21, [X21 + 0xDC0]
	0x01EA9BA4 ADD X1, X31, 0x8
	0x01EA9BA8 STR W9, [X31 + 0x8]
	0x01EA9BAC BL 0x1C16E04
	0x01EA9BB0 MOV X20, X0
	0x01EA9BB4 ADD X0, X31, 0x10
	0x01EA9BB8 MOV X1, X31
	0x01EA9BBC BL 0x1EBB40C
	0x01EA9BC0 LDR X8, [X22]
	0x01EA9BC4 MOV X2, X0
	0x01EA9BC8 MOV X1, X20
	0x01EA9BCC MOV X3, X31
	0x01EA9BD0 MOV X0, X8
	0x01EA9BD4 BL 0x3227BD4
	0x01EA9BD8 LDR X8, [X23]
	0x01EA9BDC MOV X20, X0
	0x01EA9BE0 LDR W9, [X8 + 0xE0]
	0x01EA9BE4 CBNZ W9, 0x1EA9BF0
	0x01EA9BE8 MOV X0, X8
	0x01EA9BEC BL 0x1C16DFC
	0x01EA9BF0 LDR X2, [X21]
	0x01EA9BF4 MOV X0, X19
	0x01EA9BF8 MOV X1, X20
	0x01EA9BFC BL 0x22137F8
	0x01EA9C00 LDP X20, X19, [X31 + 0x40]
	0x01EA9C04 LDP X22, X21, [X31 + 0x30]
	0x01EA9C08 LDP X30, X23, [X31 + 0x20]
	0x01EA9C0C ADD X31, X31, 0x50
	0x01EA9C10 RET
	0x01EA9C14 STP X30, X19, [X31 - 0x10]!
	0x01EA9C18 MOV X19, X0
	0x01EA9C1C BL 0x1E9DF08
	0x01EA9C20 TBZ X0, 0x0, 0x1EA9C34
	0x01EA9C24 MOV X0, X19
	0x01EA9C28 BL 0x1EA7328
	0x01EA9C2C EOR W8, W0, 0x1
	0x01EA9C30 B 0x1EA9C38
	0x01EA9C34 MOV W8, W31
	0x01EA9C38 AND W0, W8, 0x1
	0x01EA9C3C LDP X30, X19, [X31], #0x10
	0x01EA9C40 RET
	0x01EA9C44 STR X30, [X31 - 0x20]!
	0x01EA9C48 STP X20, X19, [X31 + 0x10]
	0x01EA9C4C ADRP X20, 0x2530000
	0x01EA9C50 LDRB W8, [X20 + 0x372]
	0x01EA9C54 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], D14
	003 Move [X31+24], D13
	004 Move [X31+32], D12
	005 Move [X31+40], D11
	006 Move [X31+48], D10
	007 Move [X31+56], D9
	008 Move [X31+64], D8
	009 Move [X31+72], X30
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0x2531000
	015 Move X21, 0x224B000
	016 Move W8, [X22+872]
	017 Move X21, [X21+1432]
	018 Move V8, V6
	019 Move V9, V5
	020 Move V10, V4
	021 Move V11, V3
	022 Move V12, V2
	023 Move V13, V1
	024 Move V14, V0
	025 Move X20, X1
	026 Move X19, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {42}
	031 Move X0, 0x2250000
	032 Move X0, [X0+3648]
	033 Call 0x1C17CF4
	034 Move X0, 0x224B000
	035 Move X0, [X0+1432]
	036 Call 0x1C17CF4
	037 Move X0, 0x224B000
	038 Move X0, [X0+3216]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X22+872], W8
	042 Move X22, 0x2250000
	043 Move X22, [X22+3648]
	044 Add X1, X31, 8
	045 Move X0, X19
	046 Move [X31+8], W31
	047 Call NetworkRunner.EnsureRunnerSceneIsActive, X0, X1
	048 Move X8, [X21]
	049 Move W21, W0
	050 Move W9, [X8+224]
	051 Compare W9, 0
	052 JumpIfNotEqual {55}
	053 Move X0, X8
	054 Call 0x1C17DFC
	055 Move X1, [X22]
	056 Move X0, X20
	057 Move V0, V14
	058 Move V1, V13
	059 Move V2, V12
	060 Move V3, V11
	061 Move V4, V10
	062 Move V5, V9
	063 Move V6, V8
	064 Call 0x222E5B8, X0, X1, X2
	065 Move X20, X0
	066 Move X0, X19
	067 Move X1, X20
	068 Move X2, X31
	069 Call NetworkRunner.MoveToRunnerScene, X0, X1, X2
	070 Move TEMP, X21
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {85}
	074 Move X8, 0x224B000
	075 Move X8, [X8+3216]
	076 Move W19, [X31+8]
	077 Move X0, [X8]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move X0, X19
	083 Move X1, X31
	084 Call SceneManager.SetActiveScene, X0
	085 Move X0, X20
	086 Move X20, [X31+96]
	087 Move X19, [X31+104]
	088 Move X22, [X31+80]
	089 Move X21, [X31+88]
	090 Move X30, [X31+72]
	091 Move D9, [X31+56]
	092 Move D8, [X31+64]
	093 Move D11, [X31+40]
	094 Move D10, [X31+48]
	095 Move D13, [X31+24]
	096 Move D12, [X31+32]
	097 Move V14, [X31+16]
	098 Add X31, X31, 112
	099 Return X0

Method: UnityEngine.GameObject InstantiateInRunnerScene(UnityEngine.GameObject original)

Disassembly:
	0x01EA9E80 LDR X8, [X23]
	0x01EA9E84 LDR X1, [X8]
	0x01EA9E88 BL 0x1C17270
	0x01EA9E8C TBZ X0, 0x0, 0x1EAA060
	0x01EA9E90 LDR X23, [X23]
	0x01EA9E94 BL 0x3EB1AE0
	0x01EA9E98 MOV X0, X21
	0x01EA9E9C BL 0x1C16D08
	0x01EA9EA0 LDR W8, [X0 + 0xE0]
	0x01EA9EA4 CBNZ W8, 0x1EA9EAC
	0x01EA9EA8 BL 0x1C16DFC
	0x01EA9EAC MOV X0, X22
	0x01EA9EB0 BL 0x1C16D08
	0x01EA9EB4 MOV X2, X0
	0x01EA9EB8 MOV X0, X19
	0x01EA9EBC MOV X1, X23
	0x01EA9EC0 BL 0x2213878
	0x01EA9EC4 B 0x1EA9E34
	0x01EA9EC8 AND W9, W9, 0xFFFEFFFF
	0x01EA9ECC ADRP X25, 0x2255000
	0x01EA9ED0 ADRP X20, 0x224A000
	0x01EA9ED4 ADRP X21, 0x2252000
	0x01EA9ED8 LDR X25, [X25 + 0xDD8]
	0x01EA9EDC LDR X20, [X20 + 0x7D0]
	0x01EA9EE0 LDR X21, [X21 + 0x8B0]
	0x01EA9EE4 STR W9, [X8 + 0x60]
	0x01EA9EE8 ADRP X22, 0x2255000
	0x01EA9EEC LDR X22, [X22 + 0x868]
	0x01EA9EF0 LDR X8, [X8 + 0x78]
	0x01EA9EF4 CBZ X8, 0x1EAA038
	0x01EA9EF8 LDR W9, [X8 + 0x18]
	0x01EA9EFC CMP X24, W9, SXTW
	0x01EA9F00 B.GE 0x1EAA020
	0x01EA9F04 CMP X24, X9
	0x01EA9F08 B.CS 0x1EA9F9C
	0x01EA9F0C ADD X8, X8, X24, 0x3, LSL
	0x01EA9F10 LDR X0, [X8 + 0x20]
	0x01EA9F14 CBZ X0, 0x1EA9FA4
	0x01EA9F18 LDR W8, [X0 + 0x30]
	0x01EA9F1C AND W8, W8, 0xFFFFFFFD
	0x01EA9F20 STR W8, [X0 + 0x30]
	0x01EA9F24 LDR X1, [X25]
	0x01EA9F28 BL 0x1C16E00
	0x01EA9F2C MOV X23, X0
	0x01EA9F30 CBZ X0, 0x1EA9F8C
	0x01EA9F34 LDR X8, [X23]
	0x01EA9F38 LDR X1, [X25]
	0x01EA9F3C LDRH W9, [X8 + 0x12E]
	0x01EA9F40 CBZ X9, 0x1EA9F64
	0x01EA9F44 LDR X10, [X8 + 0xB0]
	0x01EA9F48 ADD X10, X10, 0x8
	0x01EA9F4C LDUR X11, [X10 - 0x8]
	0x01EA9F50 CMP X11, X1
	0x01EA9F54 B.EQ 0x1EA9F74
	0x01EA9F58 SUBS X9, X9, 0x1
	0x01EA9F5C ADD X10, X10, 0x10
	0x01EA9F60 B.NE 0x1EA9F4C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2531000
	007 Move X21, 0x224B000
	008 Move W8, [X22+873]
	009 Move X21, [X21+1432]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x224B000
	017 Move X0, [X0+3448]
	018 Call 0x1C17CF4
	019 Move X0, 0x224B000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move X0, 0x224B000
	023 Move X0, [X0+3216]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+873], W8
	027 Move X22, 0x224B000
	028 Move X22, [X22+3448]
	029 Add X1, X31, 8
	030 Move X0, X19
	031 Move [X31+8], W31
	032 Call NetworkRunner.EnsureRunnerSceneIsActive, X0, X1
	033 Move X8, [X21]
	034 Move W21, W0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X1, [X22]
	041 Move X0, X20
	042 Call 0x222E35C, X0
	043 Move X20, X0
	044 Move X0, X19
	045 Move X1, X20
	046 Move X2, X31
	047 Call NetworkRunner.MoveToRunnerScene, X0, X1, X2
	048 Move TEMP, X21
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {63}
	052 Move X8, 0x224B000
	053 Move X8, [X8+3216]
	054 Move W19, [X31+8]
	055 Move X0, [X8]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X19
	061 Move X1, X31
	062 Call SceneManager.SetActiveScene, X0
	063 Move X0, X20
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Return X0

Method: T InstantiateInRunnerScene(T original)

Disassembly:
	0x0222C660 BL 0x1C5C6E0
	0x0222C664 LDR X8, [X19 + 0x38]
	0x0222C668 ADRP X9, 0x1EC7000
	0x0222C66C LDR X9, [X9 + 0x6C0]
	0x0222C670 LDR X19, [X8]
	0x0222C674 LDR X0, [X9]
	0x0222C678 LDR W9, [X0 + 0xE0]
	0x0222C67C CBNZ W9, 0x222C684
	0x0222C680 BL 0x1C16DFC
	0x0222C684 MOV X0, X19
	0x0222C688 MOV X1, X31
	0x0222C68C BL 0x338C698
	0x0222C690 ADRP X8, 0x1ED2000
	0x0222C694 LDR X8, [X8 + 0x328]
	0x0222C698 MOV X19, X0
	0x0222C69C LDR X8, [X8]
	0x0222C6A0 LDR W9, [X8 + 0xE0]
	0x0222C6A4 CBNZ W9, 0x222C6B0
	0x0222C6A8 MOV X0, X8
	0x0222C6AC BL 0x1C16DFC
	0x0222C6B0 MOV X0, X19
	0x0222C6B4 MOV X1, X31
	0x0222C6B8 LDP X30, X19, [X31], #0x10
	0x0222C6BC B 0x1EDE2B0
	0x0222C6C0 STP X30, X19, [X31 - 0x10]!
	0x0222C6C4 LDR X8, [X0 + 0x38]
	0x0222C6C8 CBNZ X8, 0x222C6FC
	0x0222C6CC MOV X19, X0
	0x0222C6D0 ADRP X0, 0x1ED2000
	0x0222C6D4 LDR X0, [X0 + 0x328]
	0x0222C6D8 BL 0x1C16CF4
	0x0222C6DC ADRP X0, 0x1EC7000
	0x0222C6E0 LDR X0, [X0 + 0x6C0]
	0x0222C6E4 BL 0x1C16CF4
	0x0222C6E8 LDR X8, [X19 + 0x38]
	0x0222C6EC CBNZ X8, 0x222C6FC
	0x0222C6F0 MOV X0, X19
	0x0222C6F4 BL 0x1C5C6E0
	0x0222C6F8 LDR X8, [X19 + 0x38]
	0x0222C6FC ADRP X9, 0x1EC7000
	0x0222C700 LDR X9, [X9 + 0x6C0]
	0x0222C704 LDR X19, [X8]
	0x0222C708 LDR X0, [X9]
	0x0222C70C LDR W9, [X0 + 0xE0]
	0x0222C710 CBNZ W9, 0x222C718
	0x0222C714 BL 0x1C16DFC
	0x0222C718 MOV X0, X19
	0x0222C71C MOV X1, X31
	0x0222C720 BL 0x338C698
	0x0222C724 ADRP X8, 0x1ED2000
	0x0222C728 LDR X8, [X8 + 0x328]
	0x0222C72C MOV X19, X0
	0x0222C730 LDR X8, [X8]
	0x0222C734 LDR W9, [X8 + 0xE0]
	0x0222C738 CBNZ W9, 0x222C744
	0x0222C73C MOV X0, X8
	0x0222C740 BL 0x1C16DFC
	0x0222C744 MOV X0, X19
	0x0222C748 MOV X1, X31
	0x0222C74C LDP X30, X19, [X31], #0x10
	0x0222C750 B 0x1EDE2B0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X21, X2
	008 Move X20, X1
	009 Move X19, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {23}
	012 Move X0, 0x1EC8000
	013 Move X0, [X0+1432]
	014 Call 0x1C17CF4
	015 Move X0, 0x1EC8000
	016 Move X0, [X0+3216]
	017 Call 0x1C17CF4
	018 Move X8, [X21+56]
	019 Compare X8, 0
	020 JumpIfNotEqual {23}
	021 Move X0, X21
	022 Call 0x1C5D6E0
	023 Add X1, X31, 8
	024 Move X0, X19
	025 Move X2, X31
	026 Move [X31+8], W31
	027 Call NetworkRunner.EnsureRunnerSceneIsActive, X0, X1
	028 Move X8, 0x1EC8000
	029 Move X8, [X8+1432]
	030 Move W22, W0
	031 Move X8, [X8]
	032 Move W9, [X8+224]
	033 Compare W9, 0
	034 JumpIfNotEqual {37}
	035 Move X0, X8
	036 Call 0x1C17DFC
	037 Move X8, [X21+56]
	038 Move X0, X20
	039 Move X1, [X8+8]
	040 Call 0x222E35C, X0
	041 Compare X0, 0
	042 JumpIfEqual {73}
	043 Move X1, X31
	044 Move X20, X0
	045 Call Component.get_gameObject, X0
	046 Move X1, X0
	047 Move X0, X19
	048 Move X2, X31
	049 Move X3, X31
	050 Call NetworkRunner.MoveToRunnerScene, X0, X1, X2
	051 Move TEMP, X22
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {66}
	055 Move X8, 0x1EC8000
	056 Move X8, [X8+3216]
	057 Move W19, [X31+8]
	058 Move X0, [X8]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X19
	064 Move X1, X31
	065 Call SceneManager.SetActiveScene, X0
	066 Move X0, X20
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+48]
	072 Return X0
	073 Call 0x1C17F20

Method: T InstantiateInRunnerScene(T original, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)

Disassembly:
	0x0222C754 STP X30, X21, [X31 - 0x20]!
	0x0222C758 STP X20, X19, [X31 + 0x10]
	0x0222C75C LDR X8, [X2 + 0x38]
	0x0222C760 MOV X20, X2
	0x0222C764 MOV W19, W1
	0x0222C768 MOV X21, X0
	0x0222C76C CBNZ X8, 0x222C778
	0x0222C770 MOV X0, X20
	0x0222C774 BL 0x1C5C6E0
	0x0222C778 CBZ X21, 0x222C7E8
	0x0222C77C LDP W2, W8, [X21 + 0x18]
	0x0222C780 ADD W8, W8, 0x1
	0x0222C784 CMP W2, 0x1
	0x0222C788 STP W31, W8, [X21 + 0x18]
	0x0222C78C B.LT 0x222C7A0
	0x0222C790 LDR X0, [X21 + 0x10]
	0x0222C794 MOV W1, W31
	0x0222C798 MOV X3, X31
	0x0222C79C BL 0x339FA34
	0x0222C7A0 LDR X8, [X20 + 0x38]
	0x0222C7A4 MOV X0, X21
	0x0222C7A8 LDR X1, [X8 + 0x10]
	0x0222C7AC BL 0x301BB2C
	0x0222C7B0 CMP W0, W19
	0x0222C7B4 B.GE 0x222C7CC
	0x0222C7B8 LDR X8, [X20 + 0x38]
	0x0222C7BC MOV X0, X21
	0x0222C7C0 MOV W1, W19
	0x0222C7C4 LDR X2, [X8 + 0x18]
	0x0222C7C8 BL 0x301BB48
	0x0222C7CC LDR X8, [X20 + 0x38]
	0x0222C7D0 MOV W1, W19
	0x0222C7D4 LDP X20, X19, [X31 + 0x10]
	0x0222C7D8 MOV X0, X21
	0x0222C7DC LDR X2, [X8 + 0x20]
	0x0222C7E0 LDP X30, X21, [X31], #0x20
	0x0222C7E4 B 0x222C9F8
	0x0222C7E8 BL 0x1C16F20
	0x0222C7EC STP X30, X21, [X31 - 0x20]!
	0x0222C7F0 STP X20, X19, [X31 + 0x10]
	0x0222C7F4 LDR X8, [X2 + 0x38]
	0x0222C7F8 MOV X20, X2
	0x0222C7FC MOV W19, W1
	0x0222C800 MOV X21, X0
	0x0222C804 CBNZ X8, 0x222C810
	0x0222C808 MOV X0, X20
	0x0222C80C BL 0x1C5C6E0
	0x0222C810 CBZ X21, 0x222C868
	0x0222C814 LDR W8, [X21 + 0x1C]
	0x0222C818 MOV X0, X21
	0x0222C81C ADD W8, W8, 0x1
	0x0222C820 STP W31, W8, [X21 + 0x18]
	0x0222C824 LDR X8, [X20 + 0x38]
	0x0222C828 LDR X1, [X8 + 0x10]
	0x0222C82C BL 0x30CE95C
	0x0222C830 CMP W0, W19
	0x0222C834 B.GE 0x222C84C
	0x0222C838 LDR X8, [X20 + 0x38]
	0x0222C83C MOV X0, X21
	0x0222C840 MOV W1, W19
	0x0222C844 LDR X2, [X8 + 0x18]
	0x0222C848 BL 0x30CE978
	0x0222C84C LDR X8, [X20 + 0x38]
	0x0222C850 MOV W1, W19
	0x0222C854 LDP X20, X19, [X31 + 0x10]
	0x0222C858 MOV X0, X21
	0x0222C85C LDR X2, [X8 + 0x20]
	0x0222C860 LDP X30, X21, [X31], #0x20
	0x0222C864 B 0x222CAF0
	0x0222C868 BL 0x1C16F20
	0x0222C86C STP X30, X21, [X31 - 0x20]!
	0x0222C870 STP X20, X19, [X31 + 0x10]
	0x0222C874 LDR X8, [X2 + 0x38]
	0x0222C878 MOV X20, X2
	0x0222C87C MOV W19, W1
	0x0222C880 MOV X21, X0
	0x0222C884 CBNZ X8, 0x222C890
	0x0222C888 MOV X0, X20
	0x0222C88C BL 0x1C5C6E0
	0x0222C890 CBZ X21, 0x222C8FC
	0x0222C894 LDR X8, [X20 + 0x38]
	0x0222C898 MOV X0, X21
	0x0222C89C LDR X1, [X8 + 0x8]
	0x0222C8A0 LDR X8, [X1]
	0x0222C8A4 BLR X8

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], D14
	003 Move [X31+24], D13
	004 Move [X31+32], D12
	005 Move [X31+40], D11
	006 Move [X31+48], D10
	007 Move [X31+56], D9
	008 Move [X31+64], D8
	009 Move [X31+72], X30
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X8, [X2+56]
	015 Move X20, X2
	016 Move V8, V6
	017 Move V9, V5
	018 Move V10, V4
	019 Move V11, V3
	020 Move V12, V2
	021 Move V13, V1
	022 Move V14, V0
	023 Move X21, X1
	024 Move X19, X0
	025 Compare X8, 0
	026 JumpIfNotEqual {38}
	027 Move X0, 0x1EC8000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move X0, 0x1EC8000
	031 Move X0, [X0+3216]
	032 Call 0x1C17CF4
	033 Move X8, [X20+56]
	034 Compare X8, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X20
	037 Call 0x1C5D6E0
	038 Add X1, X31, 8
	039 Move X0, X19
	040 Move X2, X31
	041 Move [X31+8], W31
	042 Call NetworkRunner.EnsureRunnerSceneIsActive, X0, X1
	043 Move X8, 0x1EC8000
	044 Move X8, [X8+1432]
	045 Move W22, W0
	046 Move X8, [X8]
	047 Move W9, [X8+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Move X8, [X20+56]
	053 Move X0, X21
	054 Move V0, V14
	055 Move V1, V13
	056 Move X1, [X8+8]
	057 Move V2, V12
	058 Move V3, V11
	059 Move V4, V10
	060 Move V5, V9
	061 Move V6, V8
	062 Call 0x222E5B8, X0, X1, X2
	063 Compare X0, 0
	064 JumpIfEqual {103}
	065 Move X1, X31
	066 Move X20, X0
	067 Call Component.get_gameObject, X0
	068 Move X1, X0
	069 Move X0, X19
	070 Move X2, X31
	071 Move X3, X31
	072 Call NetworkRunner.MoveToRunnerScene, X0, X1, X2
	073 Move TEMP, X22
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {88}
	077 Move X8, 0x1EC8000
	078 Move X8, [X8+3216]
	079 Move W19, [X31+8]
	080 Move X0, [X8]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move X0, X19
	086 Move X1, X31
	087 Call SceneManager.SetActiveScene, X0
	088 Move X0, X20
	089 Move X20, [X31+96]
	090 Move X19, [X31+104]
	091 Move X22, [X31+80]
	092 Move X21, [X31+88]
	093 Move X30, [X31+72]
	094 Move D9, [X31+56]
	095 Move D8, [X31+64]
	096 Move D11, [X31+40]
	097 Move D10, [X31+48]
	098 Move D13, [X31+24]
	099 Move D12, [X31+32]
	100 Move V14, [X31+16]
	101 Add X31, X31, 112
	102 Return X0
	103 Call 0x1C17F20

Method: System.Boolean EnsureRunnerSceneIsActive(out UnityEngine.SceneManagement.Scene previousActiveScene)

Disassembly:
	0x01EA9C58 TBNZ X8, 0x0, 0x1EA9C70
	0x01EA9C5C ADRP X0, 0x224D000
	0x01EA9C60 LDR X0, [X0 + 0xE40]
	0x01EA9C64 BL 0x1C16CF4
	0x01EA9C68 MOVZ W8, 0x1
	0x01EA9C6C STRB W8, [X20 + 0x372]
	0x01EA9C70 LDR X0, [X19 + 0x50]
	0x01EA9C74 CBZ X0, 0x1EA9CAC
	0x01EA9C78 MOV X1, X31
	0x01EA9C7C BL 0x1EC08F8
	0x01EA9C80 TBZ X0, 0x0, 0x1EA9CAC
	0x01EA9C84 ADRP X8, 0x224D000
	0x01EA9C88 LDR X8, [X8 + 0xE40]
	0x01EA9C8C LDR X0, [X8]
	0x01EA9C90 LDR W8, [X0 + 0xE0]
	0x01EA9C94 CBNZ W8, 0x1EA9C9C
	0x01EA9C98 BL 0x1C16DFC
	0x01EA9C9C MOVZ W0, 0x1
	0x01EA9CA0 MOV X1, X31
	0x01EA9CA4 BL 0x1E8D9BC
	0x01EA9CA8 B 0x1EA9CBC
	0x01EA9CAC LDR X0, [X19 + 0x1B0]
	0x01EA9CB0 CBZ X0, 0x1EA9CBC
	0x01EA9CB4 MOV X1, X31
	0x01EA9CB8 BL 0x1E688F8
	0x01EA9CBC LDP X20, X19, [X31 + 0x10]
	0x01EA9CC0 AND X0, X0, 0x0
	0x01EA9CC4 LDR X30, [X31], #0x20
	0x01EA9CC8 RET
	0x01EA9CCC B 0x1EA27F0
	0x01EA9CD0 SUB X31, X31, 0x50
	0x01EA9CD4 STP X30, X25, [X31 + 0x10]
	0x01EA9CD8 STP X24, X23, [X31 + 0x20]
	0x01EA9CDC STP X22, X21, [X31 + 0x30]
	0x01EA9CE0 STP X20, X19, [X31 + 0x40]
	0x01EA9CE4 ADRP X22, 0x2530000
	0x01EA9CE8 LDRB W8, [X22 + 0x373]
	0x01EA9CEC MOV W20, W2
	0x01EA9CF0 MOV X21, X1
	0x01EA9CF4 MOV X19, X0
	0x01EA9CF8 TBNZ X8, 0x0, 0x1EA9D1C
	0x01EA9CFC ADRP X0, 0x2254000
	0x01EA9D00 LDR X0, [X0 + 0xA40]
	0x01EA9D04 BL 0x1C16CF4
	0x01EA9D08 ADRP X0, 0x2255000
	0x01EA9D0C LDR X0, [X0 + 0xDD8]
	0x01EA9D10 BL 0x1C16CF4
	0x01EA9D14 MOVZ W8, 0x1
	0x01EA9D18 STRB W8, [X22 + 0x373]
	0x01EA9D1C STR X31, [X31 + 0x8]
	0x01EA9D20 LDR X0, [X19 + 0x50]
	0x01EA9D24 CBZ X0, 0x1EAA038
	0x01EA9D28 AND X1, X21, 0x0
	0x01EA9D2C ADD X2, X31, 0x8
	0x01EA9D30 MOV X3, X31
	0x01EA9D34 BL 0x1EC96E8
	0x01EA9D38 TBZ X0, 0x0, 0x1EAA020
	0x01EA9D3C LDR X0, [X31 + 0x8]
	0x01EA9D40 CBZ X0, 0x1EAA038
	0x01EA9D44 MOV X1, X31
	0x01EA9D48 BL 0x1E93540
	0x01EA9D4C AND W8, W0, 0x1
	0x01EA9D50 AND W9, W20, 0x1
	0x01EA9D54 CMP W8, W9
	0x01EA9D58 B.EQ 0x1EAA020
	0x01EA9D5C LDR X8, [X31 + 0x8]
	0x01EA9D60 CBZ X8, 0x1EAA038
	0x01EA9D64 LDR W9, [X8 + 0x60]
	0x01EA9D68 MOV X24, X31
	0x01EA9D6C TBZ X20, 0x0, 0x1EA9EC8
	0x01EA9D70 ORR W9, W9, 0x10000
	0x01EA9D74 ADRP X25, 0x2254000
	0x01EA9D78 ADRP X20, 0x224A000
	0x01EA9D7C ADRP X21, 0x2252000
	0x01EA9D80 LDR X25, [X25 + 0xA40]
	0x01EA9D84 LDR X20, [X20 + 0x7D0]
	0x01EA9D88 LDR X21, [X21 + 0x8B0]
	0x01EA9D8C STR W9, [X8 + 0x60]
	0x01EA9D90 ADRP X22, 0x2255000
	0x01EA9D94 LDR X22, [X22 + 0x868]
	0x01EA9D98 LDR X8, [X8 + 0x78]
	0x01EA9D9C CBZ X8, 0x1EAA038
	0x01EA9DA0 LDR W9, [X8 + 0x18]
	0x01EA9DA4 CMP X24, W9, SXTW

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2531000
	007 Move W8, [X21+874]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2252000
	015 Move X0, [X0+3248]
	016 Call 0x1C17CF4
	017 Move X0, 0x224B000
	018 Move X0, [X0+3216]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+874], W8
	022 Move [X31+8], W31
	023 Move X20, [X20+256]
	024 Compare X20, 0
	025 JumpIfEqual {42}
	026 Move X10, 0x2252000
	027 Move X8, [X20]
	028 Move X10, [X10+3248]
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 Move X1, [X10]
	031 Compare X9, 0
	032 JumpIfEqual {39}
	033 Move X10, [X8+176]
	034 Add X10, X10, 8
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Subtract X9, X9, 1
	038 Add X10, X10, 16
	039 Move W2, 3
	040 Move X0, X20
	041 Call 0x1C5D788
	042 Move W0, W31
	043 Move W9, [X10]
	044 Add W9, W9, 3
	045 Add X8, X8, W9
	046 Add X0, X8, 312
	047 Move X8, [X0]
	048 Move X1, [X0+8]
	049 Move X0, X20
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move [X31+8], W0
	052 Add X0, X31, 8
	053 Move X1, X31
	054 Call Scene.IsValid, X0
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {93}
	059 Move X21, 0x224B000
	060 Move X21, [X21+3216]
	061 Move W20, [X31+8]
	062 Move X0, [X21]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X31
	068 Call SceneManager.GetActiveScene
	069 And X1, X0, 0
	070 Move X0, X20
	071 Move X2, X31
	072 Call Scene.op_Equality, X0, X1
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {93}
	077 Move X0, [X21]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move X0, X31
	083 Call SceneManager.GetActiveScene
	084 Move [X19], W0
	085 Move W0, [X31+8]
	086 Move X1, X31
	087 Call SceneManager.SetActiveScene, X0
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {93}
	092 Move W0, 1
	093 Move W0, W31
	094 Move [X19], W31
	095 Move X20, [X31+32]
	096 Move X19, [X31+40]
	097 Move X30, [X31+16]
	098 Move X21, [X31+24]
	099 Add X31, X31, 48
	100 Return X0

Method: System.Void MoveToRunnerScene(T component)

Disassembly:
	0x0222C8A8 LDR X8, [X20 + 0x38]
	0x0222C8AC MOV X0, X21
	0x0222C8B0 LDR X1, [X8 + 0x10]
	0x0222C8B4 LDR X8, [X1]
	0x0222C8B8 BLR X8
	0x0222C8BC CMP W0, W19
	0x0222C8C0 B.GE 0x222C8DC
	0x0222C8C4 LDR X8, [X20 + 0x38]
	0x0222C8C8 MOV X0, X21
	0x0222C8CC MOV W1, W19
	0x0222C8D0 LDR X2, [X8 + 0x18]
	0x0222C8D4 LDR X8, [X2]
	0x0222C8D8 BLR X8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {17}
	005 Move X19, X0
	006 Move X0, X1
	007 Move X1, X31
	008 Call Component.get_gameObject, X0
	009 Move X1, X0
	010 Move X0, X19
	011 Move X2, X31
	012 Move X3, X31
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call NetworkRunner.MoveToRunnerScene, X0, X1, X2
	016 Return 
	017 Call 0x1C17F20

Method: System.Void MoveToRunnerScene(UnityEngine.GameObject instance, System.Nullable`1<Fusion.SceneRef> targetSceneRef = null)

Disassembly:
	0x01EA9DA8 B.GE 0x1EAA020
	0x01EA9DAC CMP X24, X9
	0x01EA9DB0 B.CS 0x1EA9E44
	0x01EA9DB4 ADD X8, X8, X24, 0x3, LSL
	0x01EA9DB8 LDR X0, [X8 + 0x20]
	0x01EA9DBC CBZ X0, 0x1EA9E4C
	0x01EA9DC0 LDR W8, [X0 + 0x30]
	0x01EA9DC4 ORR W8, W8, 0x2
	0x01EA9DC8 STR W8, [X0 + 0x30]
	0x01EA9DCC LDR X1, [X25]
	0x01EA9DD0 BL 0x1C16E00
	0x01EA9DD4 MOV X23, X0
	0x01EA9DD8 CBZ X0, 0x1EA9E34
	0x01EA9DDC LDR X8, [X23]
	0x01EA9DE0 LDR X1, [X25]
	0x01EA9DE4 LDRH W9, [X8 + 0x12E]
	0x01EA9DE8 CBZ X9, 0x1EA9E0C
	0x01EA9DEC LDR X10, [X8 + 0xB0]
	0x01EA9DF0 ADD X10, X10, 0x8
	0x01EA9DF4 LDUR X11, [X10 - 0x8]
	0x01EA9DF8 CMP X11, X1
	0x01EA9DFC B.EQ 0x1EA9E1C
	0x01EA9E00 SUBS X9, X9, 0x1
	0x01EA9E04 ADD X10, X10, 0x10
	0x01EA9E08 B.NE 0x1EA9DF4
	0x01EA9E0C MOV X0, X23
	0x01EA9E10 MOV W2, W31
	0x01EA9E14 BL 0x1C5C788
	0x01EA9E18 B 0x1EA9E28
	0x01EA9E1C LDRSW X9, [X10]
	0x01EA9E20 ADD X8, X8, X9, 0x4, LSL
	0x01EA9E24 ADD X0, X8, 0x138
	0x01EA9E28 LDP X8, X1, [X0]
	0x01EA9E2C MOV X0, X23
	0x01EA9E30 BLR X8
	0x01EA9E34 LDR X8, [X31 + 0x8]
	0x01EA9E38 ADD X24, X24, 0x1
	0x01EA9E3C CBNZ X8, 0x1EA9D98
	0x01EA9E40 B 0x1EAA038
	0x01EA9E44 BL 0x1C16F28
	0x01EA9E48 B 0x1EAA060
	0x01EA9E4C BL 0x1C16F20
	0x01EA9E50 B 0x1EAA080
	0x01EA9E54 B 0x1EA9E60
	0x01EA9E58 B 0x1EA9E60
	0x01EA9E5C B 0x1EA9E60
	0x01EA9E60 MOV X23, X0
	0x01EA9E64 CMP W1, 0x1
	0x01EA9E68 B.NE 0x1EAA09C
	0x01EA9E6C MOV X0, X23
	0x01EA9E70 BL 0x3EB1AD0
	0x01EA9E74 MOV X23, X0
	0x01EA9E78 MOV X0, X20
	0x01EA9E7C BL 0x1C16D08

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2531000
	007 Move W8, [X22+875]
	008 Move X21, X2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x2252000
	016 Move X0, [X0+3248]
	017 Call 0x1C17CF4
	018 Move X0, 0x2256000
	019 Move X0, [X0+3440]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+875], W8
	023 Move X20, [X20+256]
	024 Compare X20, 0
	025 JumpIfEqual {45}
	026 Move X10, 0x2252000
	027 Move X8, [X20]
	028 Move X10, [X10+3248]
	029 Move X21, X21
	030 ShiftRight X21, 32
	031 And X21, X21, 0x7FFFFFFF
	032 NotImplemented "Instruction LDRH not yet implemented."
	033 Move X1, [X10]
	034 Compare X9, 0
	035 JumpIfEqual {42}
	036 Move X10, [X8+176]
	037 Add X10, X10, 8
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Subtract X9, X9, 1
	041 Add X10, X10, 16
	042 Move W2, 8
	043 Move X0, X20
	044 Call 0x1C5D788
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Return 
	051 Move W9, [X10]
	052 Add W9, W9, 8
	053 Add X8, X8, W9
	054 Add X0, X8, 312
	055 Move X4, [X0]
	056 Move X3, [X0+8]
	057 Move X0, X20
	058 Move X1, X19
	059 Move X2, X21
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X30, [X31+48]
	065 CallNoReturn X4

Method: System.Void MakeDontDestroyOnLoad(UnityEngine.GameObject obj)

Disassembly:
	0x01EA9F64 MOV X0, X23
	0x01EA9F68 MOV W2, W31
	0x01EA9F6C BL 0x1C5C788
	0x01EA9F70 B 0x1EA9F80
	0x01EA9F74 LDRSW X9, [X10]
	0x01EA9F78 ADD X8, X8, X9, 0x4, LSL
	0x01EA9F7C ADD X0, X8, 0x138
	0x01EA9F80 LDP X8, X1, [X0]
	0x01EA9F84 MOV X0, X23
	0x01EA9F88 BLR X8
	0x01EA9F8C LDR X8, [X31 + 0x8]
	0x01EA9F90 ADD X24, X24, 0x1
	0x01EA9F94 CBNZ X8, 0x1EA9EF0
	0x01EA9F98 B 0x1EAA038
	0x01EA9F9C BL 0x1C16F28
	0x01EA9FA0 B 0x1EAA03C
	0x01EA9FA4 BL 0x1C16F20
	0x01EA9FA8 B 0x1EAA03C
	0x01EA9FAC B 0x1EA9FB8
	0x01EA9FB0 B 0x1EA9FB8
	0x01EA9FB4 B 0x1EA9FB8
	0x01EA9FB8 MOV X23, X0
	0x01EA9FBC CMP W1, 0x1
	0x01EA9FC0 B.NE 0x1EAA09C
	0x01EA9FC4 MOV X0, X23
	0x01EA9FC8 BL 0x3EB1AD0
	0x01EA9FCC MOV X23, X0
	0x01EA9FD0 MOV X0, X20
	0x01EA9FD4 BL 0x1C16D08
	0x01EA9FD8 LDR X8, [X23]
	0x01EA9FDC LDR X1, [X8]
	0x01EA9FE0 BL 0x1C17270
	0x01EA9FE4 TBZ X0, 0x0, 0x1EAA03C
	0x01EA9FE8 LDR X23, [X23]
	0x01EA9FEC BL 0x3EB1AE0
	0x01EA9FF0 MOV X0, X21
	0x01EA9FF4 BL 0x1C16D08
	0x01EA9FF8 LDR W8, [X0 + 0xE0]
	0x01EA9FFC CBNZ W8, 0x1EAA004
	0x01EAA000 BL 0x1C16DFC
	0x01EAA004 MOV X0, X22
	0x01EAA008 BL 0x1C16D08
	0x01EAA00C MOV X2, X0
	0x01EAA010 MOV X0, X19
	0x01EAA014 MOV X1, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2531000
	006 Move W8, [X21+876]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2252000
	014 Move X0, [X0+3248]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+876], W8
	018 Move X20, [X20+256]
	019 Compare X20, 0
	020 JumpIfEqual {37}
	021 Move X10, 0x2252000
	022 Move X8, [X20]
	023 Move X10, [X10+3248]
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Move X1, [X10]
	026 Compare X9, 0
	027 JumpIfEqual {34}
	028 Move X10, [X8+176]
	029 Add X10, X10, 8
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Subtract X9, X9, 1
	033 Add X10, X10, 16
	034 Move W2, 7
	035 Move X0, X20
	036 Call 0x1C5D788
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 
	042 Move W9, [X10]
	043 Add W9, W9, 7
	044 Add X8, X8, W9
	045 Add X0, X8, 312
	046 Move X3, [X0]
	047 Move X2, [X0+8]
	048 Move X0, X20
	049 Move X1, X19
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 CallNoReturn X3

Method: System.Void ConsumeInitialSceneInfo(System.Boolean isSceneAuthority)

Disassembly:
	0x01EAA018 BL 0x2213878
	0x01EAA01C B 0x1EA9F8C
	0x01EAA020 LDP X20, X19, [X31 + 0x40]
	0x01EAA024 LDP X22, X21, [X31 + 0x30]
	0x01EAA028 LDP X24, X23, [X31 + 0x20]
	0x01EAA02C LDP X30, X25, [X31 + 0x10]
	0x01EAA030 ADD X31, X31, 0x50
	0x01EAA034 RET
	0x01EAA038 BL 0x1C16F20
	0x01EAA03C MOVZ W0, 0x8
	0x01EAA040 BL 0x3EB1AF0
	0x01EAA044 LDR X8, [X23]
	0x01EAA048 STR X8, [X0]
	0x01EAA04C ADRP X1, 0x200A000
	0x01EAA050 ADD X1, X1, 0xE58
	0x01EAA054 MOV X2, X31
	0x01EAA058 BL 0x3EB1B00
	0x01EAA05C B 0x1EAA080
	0x01EAA060 MOVZ W0, 0x8
	0x01EAA064 BL 0x3EB1AF0
	0x01EAA068 LDR X8, [X23]
	0x01EAA06C STR X8, [X0]
	0x01EAA070 ADRP X1, 0x200A000
	0x01EAA074 ADD X1, X1, 0xE58
	0x01EAA078 MOV X2, X31
	0x01EAA07C BL 0x3EB1B00
	0x01EAA080 B 0x1EAA084
	0x01EAA084 MOV X23, X0
	0x01EAA088 BL 0x3EB1AE0
	0x01EAA08C B 0x1EAA09C
	0x01EAA090 B 0x1EAA094
	0x01EAA094 MOV X23, X0
	0x01EAA098 BL 0x3EB1AE0
	0x01EAA09C MOV X0, X23
	0x01EAA0A0 BL 0x1D2C690
	0x01EAA0A4 BL 0x1990590
	0x01EAA0A8 SUB X31, X31, 0x50
	0x01EAA0AC STP X30, X25, [X31 + 0x10]
	0x01EAA0B0 STP X24, X23, [X31 + 0x20]
	0x01EAA0B4 STP X22, X21, [X31 + 0x30]
	0x01EAA0B8 STP X20, X19, [X31 + 0x40]
	0x01EAA0BC ADRP X22, 0x252F000
	0x01EAA0C0 LDRB W8, [X22 + 0x374]
	0x01EAA0C4 MOV W20, W2
	0x01EAA0C8 MOV X21, X1
	0x01EAA0CC MOV X19, X0
	0x01EAA0D0 TBNZ X8, 0x0, 0x1EAA0F4
	0x01EAA0D4 ADRP X0, 0x2254000
	0x01EAA0D8 LDR X0, [X0 + 0xDE0]
	0x01EAA0DC BL 0x1C16CF4
	0x01EAA0E0 ADRP X0, 0x2254000
	0x01EAA0E4 LDR X0, [X0 + 0xDE8]
	0x01EAA0E8 BL 0x1C16CF4
	0x01EAA0EC MOVZ W8, 0x1
	0x01EAA0F0 STRB W8, [X22 + 0x374]
	0x01EAA0F4 STR X31, [X31 + 0x8]
	0x01EAA0F8 LDR X0, [X19 + 0x50]
	0x01EAA0FC CBZ X0, 0x1EAA3A4
	0x01EAA100 AND X1, X21, 0x0
	0x01EAA104 ADD X2, X31, 0x8
	0x01EAA108 MOV X3, X31
	0x01EAA10C BL 0x1EC96E8
	0x01EAA110 TBZ X0, 0x0, 0x1EAA38C
	0x01EAA114 LDR X8, [X31 + 0x8]
	0x01EAA118 TBZ X20, 0x0, 0x1EAA254
	0x01EAA11C CBZ X8, 0x1EAA3A4
	0x01EAA120 ADRP X25, 0x2254000
	0x01EAA124 ADRP X20, 0x2249000
	0x01EAA128 ADRP X21, 0x2251000
	0x01EAA12C ADRP X22, 0x2254000
	0x01EAA130 LDR X25, [X25 + 0xDE0]
	0x01EAA134 LDR X20, [X20 + 0x7D0]
	0x01EAA138 LDR X21, [X21 + 0x8B0]
	0x01EAA13C LDR X22, [X22 + 0x868]
	0x01EAA140 MOV X24, X31
	0x01EAA144 LDR X8, [X8 + 0x78]
	0x01EAA148 CBZ X8, 0x1EAA3A4
	0x01EAA14C LDR W9, [X8 + 0x18]
	0x01EAA150 CMP X24, W9, SXTW
	0x01EAA154 B.GE 0x1EAA38C
	0x01EAA158 CMP X24, X9
	0x01EAA15C B.CS 0x1EAA1E0
	0x01EAA160 ADD X8, X8, X24, 0x3, LSL
	0x01EAA164 LDR X0, [X8 + 0x20]
	0x01EAA168 LDR X1, [X25]
	0x01EAA16C BL 0x1C16E00
	0x01EAA170 MOV X23, X0
	0x01EAA174 CBZ X0, 0x1EAA1D0
	0x01EAA178 LDR X8, [X23]
	0x01EAA17C LDR X1, [X25]
	0x01EAA180 LDRH W9, [X8 + 0x12E]
	0x01EAA184 CBZ X9, 0x1EAA1A8
	0x01EAA188 LDR X10, [X8 + 0xB0]
	0x01EAA18C ADD X10, X10, 0x8
	0x01EAA190 LDUR X11, [X10 - 0x8]
	0x01EAA194 CMP X11, X1
	0x01EAA198 B.EQ 0x1EAA1B8
	0x01EAA19C SUBS X9, X9, 0x1
	0x01EAA1A0 ADD X10, X10, 0x10
	0x01EAA1A4 B.NE 0x1EAA190
	0x01EAA1A8 MOV X0, X23
	0x01EAA1AC MOV W2, W31
	0x01EAA1B0 BL 0x1C5C788
	0x01EAA1B4 B 0x1EAA1C4
	0x01EAA1B8 LDRSW X9, [X10]
	0x01EAA1BC ADD X8, X8, X9, 0x4, LSL
	0x01EAA1C0 ADD X0, X8, 0x138
	0x01EAA1C4 LDP X8, X1, [X0]
	0x01EAA1C8 MOV X0, X23
	0x01EAA1CC BLR X8
	0x01EAA1D0 LDR X8, [X31 + 0x8]
	0x01EAA1D4 ADD X24, X24, 0x1
	0x01EAA1D8 CBNZ X8, 0x1EAA144
	0x01EAA1DC B 0x1EAA3A4
	0x01EAA1E0 BL 0x1C16F28
	0x01EAA1E4 B 0x1EAA3CC
	0x01EAA1E8 B 0x1EAA1EC
	0x01EAA1EC MOV X23, X0
	0x01EAA1F0 CMP W1, 0x1
	0x01EAA1F4 B.NE 0x1EAA408
	0x01EAA1F8 MOV X0, X23
	0x01EAA1FC BL 0x3EB1AD0
	0x01EAA200 MOV X23, X0
	0x01EAA204 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2530000
	007 Move W8, [X21+877]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x2255000
	015 Move X0, [X0+3448]
	016 Call 0x1C17CF4
	017 Move X0, 0x224D000
	018 Move X0, [X0+920]
	019 Call 0x1C17CF4
	020 Move X0, 0x224D000
	021 Move X0, [X0+3648]
	022 Call 0x1C17CF4
	023 Move X0, 0x2255000
	024 Move X0, [X0+3456]
	025 Call 0x1C17CF4
	026 Move X0, 0x2255000
	027 Move X0, [X0+3464]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+877], W8
	031 Move [X31+8], X31
	032 Move TEMP, X20
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {83}
	036 Move X8, 0x224D000
	037 Move X8, [X8+920]
	038 Move X20, [X19+80]
	039 Move X0, [X8]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X31
	045 Call NetworkId.get_SceneInfo
	046 Compare X20, 0
	047 JumpIfEqual {147}
	048 And X1, X0, 0
	049 Add X2, X31, 8
	050 Move X0, X20
	051 Move X3, X31
	052 Call Simulation.TryGetStruct, X0, X1, X2
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {62}
	057 Move X8, 0x2255000
	058 Move X8, [X8+3464]
	059 Move X1, X31
	060 Move X0, [X8]
	061 Call Assert.AlwaysFail, X0
	062 Move X0, X19
	063 Call NetworkRunner.get_IsSharedModeMasterClient, X0
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {130}
	068 Move X8, [X31+8]
	069 Compare X8, 0
	070 JumpIfEqual {147}
	071 Move X21, 0x224D000
	072 Move X21, [X21+3648]
	073 Move W20, [X8+32]
	074 Move X0, [X21]
	075 Move W9, [X0+224]
	076 Compare W9, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X0, X31
	080 Call PlayerRef.get_MasterClient
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move W20, 1
	083 NotImplemented "Instruction MOVI not yet implemented."
	084 Move [X19+368], W31
	085 Move [X19+336], V0
	086 Move [X19+344], V0
	087 Move [X19+20], V0
	088 Move X8, [X31+8]
	089 Compare X8, 0
	090 JumpIfEqual {147}
	091 Move X0, [X19+80]
	092 Move W22, [X8+32]
	093 Compare X0, 0
	094 JumpIfEqual {100}
	095 Move X8, [X0]
	096 Move X9, [X8+616]
	097 Move X1, [X8+624]
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Move X20, X0
	100 Move W20, W31
	101 Move X0, [X21]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 NotImplemented "Instruction CMP not yet implemented."
	107 NotImplemented "Instruction CSET not yet implemented."
	108 Move X8, [X31+8]
	109 Compare X8, 0
	110 JumpIfEqual {147}
	111 Move X0, [X19+80]
	112 Move W21, [X8+32]
	113 Compare X0, 0
	114 JumpIfEqual {120}
	115 Move X8, [X0]
	116 Move X9, [X8+616]
	117 Move X1, [X8+624]
	118 NotImplemented "Instruction BLR not yet implemented."
	119 And X3, X0, 0
	120 Move X3, X31
	121 Move X8, 0x2255000
	122 Move X9, 0x2255000
	123 Move X8, [X8+3456]
	124 Move X9, [X9+3448]
	125 Move W0, W20
	126 Move X2, X21
	127 Move X1, [X8]
	128 Move X4, [X9]
	129 Call Assert.Always, X0, X1, X2, X3
	130 Move X8, [X31+8]
	131 Move V2, [X19+336]
	132 Move V0, [X19+352]
	133 Move W9, [X19+368]
	134 Move V1, [X19+20]
	135 Move W10, 1
	136 Move [X8+96], V2
	137 Move [X8+104], V0
	138 Move [X8+128], W9
	139 Move [X8+5], V1
	140 Move [X19+316], W10
	141 Move X20, [X31+32]
	142 Move X19, [X31+40]
	143 Move X22, [X31+16]
	144 Move X21, [X31+24]
	145 Move X30, [X31+48]
	146 Return 
	147 Call 0x1C17F20

Method: System.Void SceneInfoUpdate()

Disassembly:
	0x01EAA208 BL 0x1C16D08
	0x01EAA20C LDR X8, [X23]
	0x01EAA210 LDR X1, [X8]
	0x01EAA214 BL 0x1C17270
	0x01EAA218 TBZ X0, 0x0, 0x1EAA3CC
	0x01EAA21C LDR X23, [X23]
	0x01EAA220 BL 0x3EB1AE0
	0x01EAA224 MOV X0, X21
	0x01EAA228 BL 0x1C16D08
	0x01EAA22C LDR W8, [X0 + 0xE0]
	0x01EAA230 CBNZ W8, 0x1EAA238
	0x01EAA234 BL 0x1C16DFC
	0x01EAA238 MOV X0, X22
	0x01EAA23C BL 0x1C16D08
	0x01EAA240 MOV X2, X0
	0x01EAA244 MOV X0, X19
	0x01EAA248 MOV X1, X23
	0x01EAA24C BL 0x2213878
	0x01EAA250 B 0x1EAA1D0
	0x01EAA254 CBZ X8, 0x1EAA3A4
	0x01EAA258 ADRP X25, 0x2254000
	0x01EAA25C ADRP X20, 0x2249000
	0x01EAA260 ADRP X21, 0x2251000
	0x01EAA264 ADRP X22, 0x2254000
	0x01EAA268 LDR X25, [X25 + 0xDE8]
	0x01EAA26C LDR X20, [X20 + 0x7D0]
	0x01EAA270 LDR X21, [X21 + 0x8B0]
	0x01EAA274 LDR X22, [X22 + 0x868]
	0x01EAA278 MOV X24, X31
	0x01EAA27C LDR X8, [X8 + 0x78]
	0x01EAA280 CBZ X8, 0x1EAA3A4
	0x01EAA284 LDR W9, [X8 + 0x18]
	0x01EAA288 CMP X24, W9, SXTW
	0x01EAA28C B.GE 0x1EAA38C
	0x01EAA290 CMP X24, X9
	0x01EAA294 B.CS 0x1EAA318
	0x01EAA298 ADD X8, X8, X24, 0x3, LSL
	0x01EAA29C LDR X0, [X8 + 0x20]
	0x01EAA2A0 LDR X1, [X25]
	0x01EAA2A4 BL 0x1C16E00
	0x01EAA2A8 MOV X23, X0
	0x01EAA2AC CBZ X0, 0x1EAA308
	0x01EAA2B0 LDR X8, [X23]
	0x01EAA2B4 LDR X1, [X25]
	0x01EAA2B8 LDRH W9, [X8 + 0x12E]
	0x01EAA2BC CBZ X9, 0x1EAA2E0
	0x01EAA2C0 LDR X10, [X8 + 0xB0]
	0x01EAA2C4 ADD X10, X10, 0x8
	0x01EAA2C8 LDUR X11, [X10 - 0x8]
	0x01EAA2CC CMP X11, X1
	0x01EAA2D0 B.EQ 0x1EAA2F0
	0x01EAA2D4 SUBS X9, X9, 0x1
	0x01EAA2D8 ADD X10, X10, 0x10
	0x01EAA2DC B.NE 0x1EAA2C8
	0x01EAA2E0 MOV X0, X23
	0x01EAA2E4 MOV W2, W31
	0x01EAA2E8 BL 0x1C5C788
	0x01EAA2EC B 0x1EAA2FC
	0x01EAA2F0 LDRSW X9, [X10]
	0x01EAA2F4 ADD X8, X8, X9, 0x4, LSL
	0x01EAA2F8 ADD X0, X8, 0x138
	0x01EAA2FC LDP X8, X1, [X0]
	0x01EAA300 MOV X0, X23
	0x01EAA304 BLR X8
	0x01EAA308 LDR X8, [X31 + 0x8]
	0x01EAA30C ADD X24, X24, 0x1
	0x01EAA310 CBNZ X8, 0x1EAA27C
	0x01EAA314 B 0x1EAA3A4
	0x01EAA318 BL 0x1C16F28
	0x01EAA31C B 0x1EAA3A8
	0x01EAA320 B 0x1EAA324
	0x01EAA324 MOV X23, X0
	0x01EAA328 CMP W1, 0x1
	0x01EAA32C B.NE 0x1EAA408
	0x01EAA330 MOV X0, X23
	0x01EAA334 BL 0x3EB1AD0
	0x01EAA338 MOV X23, X0
	0x01EAA33C MOV X0, X20
	0x01EAA340 BL 0x1C16D08
	0x01EAA344 LDR X8, [X23]
	0x01EAA348 LDR X1, [X8]
	0x01EAA34C BL 0x1C17270
	0x01EAA350 TBZ X0, 0x0, 0x1EAA3A8
	0x01EAA354 LDR X23, [X23]
	0x01EAA358 BL 0x3EB1AE0
	0x01EAA35C MOV X0, X21
	0x01EAA360 BL 0x1C16D08
	0x01EAA364 LDR W8, [X0 + 0xE0]
	0x01EAA368 CBNZ W8, 0x1EAA370
	0x01EAA36C BL 0x1C16DFC
	0x01EAA370 MOV X0, X22
	0x01EAA374 BL 0x1C16D08
	0x01EAA378 MOV X2, X0
	0x01EAA37C MOV X0, X19
	0x01EAA380 MOV X1, X23
	0x01EAA384 BL 0x2213878
	0x01EAA388 B 0x1EAA308
	0x01EAA38C LDP X20, X19, [X31 + 0x40]
	0x01EAA390 LDP X22, X21, [X31 + 0x30]
	0x01EAA394 LDP X24, X23, [X31 + 0x20]
	0x01EAA398 LDP X30, X25, [X31 + 0x10]
	0x01EAA39C ADD X31, X31, 0x50
	0x01EAA3A0 RET
	0x01EAA3A4 BL 0x1C16F20
	0x01EAA3A8 MOVZ W0, 0x8
	0x01EAA3AC BL 0x3EB1AF0

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+144], X30
	003 Move [X31+160], X22
	004 Move [X31+168], X21
	005 Move [X31+176], X20
	006 Move [X31+184], X19
	007 NotImplemented "Instruction MRS not yet implemented."
	008 Move X8, [X22+40]
	009 Move X20, 0x2530000
	010 Move X19, X0
	011 Move [X31+136], X8
	012 Move W8, [X20+878]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x224D000
	018 Move X0, [X0+920]
	019 Call 0x1C17CF4
	020 Move X0, 0x2255000
	021 Move X0, [X0+3240]
	022 Call 0x1C17CF4
	023 Move X0, 0x2255000
	024 Move X0, [X0+3472]
	025 Call 0x1C17CF4
	026 Move X0, 0x2255000
	027 Move X0, [X0+3480]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+878], W8
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 Move [X31+8], X31
	033 Move [X31+128], W31
	034 Move [X31+64], W31
	035 Move [X31+96], V0
	036 Move [X31+104], V0
	037 Move [X31+5], V0
	038 Move [X31+32], V0
	039 Move [X31+40], V0
	040 Move [X31+1], V0
	041 Move W20, [X19+316]
	042 Compare W20, 0
	043 JumpIfEqual {113}
	044 Move X8, 0x224D000
	045 Move X8, [X8+920]
	046 Move [X19+316], W31
	047 Move X21, [X19+80]
	048 Move X0, [X8]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X31
	054 Call NetworkId.get_SceneInfo
	055 Compare X21, 0
	056 JumpIfEqual {123}
	057 Move X8, 0x2255000
	058 Move X8, [X8+3240]
	059 And X1, X0, 0
	060 Add X2, X31, 8
	061 Move X0, X21
	062 Move X3, [X8]
	063 Call Simulation.TryGetStructData, X0, X1, X2
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {73}
	068 Move X8, 0x2255000
	069 Move X8, [X8+3480]
	070 Move X1, X31
	071 Move X0, [X8]
	072 Call Assert.AlwaysFail, X0
	073 NotImplemented "Instruction CMP not yet implemented."
	074 NotImplemented "Instruction MOVI not yet implemented."
	075 Move [X31+128], W31
	076 Move [X31+96], V0
	077 Move [X31+104], V0
	078 Move [X31+5], V0
	079 Add X2, X19, 264
	080 Add X3, X31, 80
	081 Move W1, 1
	082 Move X0, X19
	083 Move V2, [X19+336]
	084 Move V0, [X19+352]
	085 Move W8, [X19+368]
	086 Move V1, [X19+20]
	087 Move X2, [X31+8]
	088 Move [X31+32], V2
	089 Move [X31+40], V0
	090 Move [X31+64], W8
	091 Move [X31+1], V1
	092 Move W8, [X2+48]
	093 Move V1, [X2+16]
	094 Move V0, [X2+32]
	095 Move V2, [X2]
	096 Add X3, X31, 16
	097 Move X0, X19
	098 Move W1, W20
	099 Move [X19+368], W8
	100 Move [X19+336], V1
	101 Move [X19+344], V0
	102 Move [X19+20], V2
	103 Call NetworkRunner.SceneInfoSyncSceneManager, X0, X1, X2, X3
	104 Move X0, [X19+376]
	105 Compare X0, 0
	106 JumpIfEqual {113}
	107 Move X8, 0x2255000
	108 Move X8, [X8+3472]
	109 Move W1, W31
	110 Move X2, [X8]
	111 Call TaskCompletionSource`1<Int32>.SetResult, X0, X1
	112 Move [X19+376], X31
	113 Move X8, [X22+40]
	114 Move X9, [X31+136]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X20, [X31+176]
	117 Move X19, [X31+184]
	118 Move X22, [X31+160]
	119 Move X21, [X31+168]
	120 Move X30, [X31+144]
	121 Add X31, X31, 192
	122 Return 
	123 Call 0x1C17F20
	124 Call 0x3EB2B20

Method: System.Void SceneInfoSyncSceneManager(Fusion.NetworkSceneInfoChangeSource changeSource, ref Fusion.NetworkSceneInfo sceneInfo, ref Fusion.NetworkSceneInfo prevInfo)

Disassembly:
	0x01EAA3B0 LDR X8, [X23]
	0x01EAA3B4 STR X8, [X0]
	0x01EAA3B8 ADRP X1, 0x200A000
	0x01EAA3BC ADD X1, X1, 0xE58
	0x01EAA3C0 MOV X2, X31
	0x01EAA3C4 BL 0x3EB1B00
	0x01EAA3C8 B 0x1EAA3EC
	0x01EAA3CC MOVZ W0, 0x8
	0x01EAA3D0 BL 0x3EB1AF0
	0x01EAA3D4 LDR X8, [X23]
	0x01EAA3D8 STR X8, [X0]
	0x01EAA3DC ADRP X1, 0x200A000
	0x01EAA3E0 ADD X1, X1, 0xE58
	0x01EAA3E4 MOV X2, X31
	0x01EAA3E8 BL 0x3EB1B00
	0x01EAA3EC B 0x1EAA3F0
	0x01EAA3F0 MOV X23, X0
	0x01EAA3F4 BL 0x3EB1AE0
	0x01EAA3F8 B 0x1EAA408
	0x01EAA3FC B 0x1EAA400
	0x01EAA400 MOV X23, X0
	0x01EAA404 BL 0x3EB1AE0
	0x01EAA408 MOV X0, X23
	0x01EAA40C BL 0x1D2C690
	0x01EAA410 BL 0x1990590
	0x01EAA414 SUB X31, X31, 0x50
	0x01EAA418 STP X30, X25, [X31 + 0x10]
	0x01EAA41C STP X24, X23, [X31 + 0x20]
	0x01EAA420 STP X22, X21, [X31 + 0x30]
	0x01EAA424 STP X20, X19, [X31 + 0x40]
	0x01EAA428 ADRP X21, 0x252F000
	0x01EAA42C LDRB W8, [X21 + 0x375]
	0x01EAA430 MOV X20, X1
	0x01EAA434 MOV X19, X0
	0x01EAA438 TBNZ X8, 0x0, 0x1EAA450
	0x01EAA43C ADRP X0, 0x2254000
	0x01EAA440 LDR X0, [X0 + 0xDF0]
	0x01EAA444 BL 0x1C16CF4
	0x01EAA448 MOVZ W8, 0x1
	0x01EAA44C STRB W8, [X21 + 0x375]
	0x01EAA450 STR X31, [X31 + 0x8]
	0x01EAA454 LDR X0, [X19 + 0x50]
	0x01EAA458 CBZ X0, 0x1EAA5C4
	0x01EAA45C AND X1, X20, 0x0
	0x01EAA460 ADD X2, X31, 0x8
	0x01EAA464 MOV X3, X31
	0x01EAA468 BL 0x1EC96E8
	0x01EAA46C TBZ X0, 0x0, 0x1EAA5AC
	0x01EAA470 LDR X8, [X31 + 0x8]
	0x01EAA474 CBZ X8, 0x1EAA5C4
	0x01EAA478 ADRP X25, 0x2254000
	0x01EAA47C ADRP X20, 0x2249000
	0x01EAA480 ADRP X21, 0x2251000
	0x01EAA484 ADRP X22, 0x2254000
	0x01EAA488 LDR X25, [X25 + 0xDF0]
	0x01EAA48C LDR X20, [X20 + 0x7D0]
	0x01EAA490 LDR X21, [X21 + 0x8B0]
	0x01EAA494 LDR X22, [X22 + 0x868]
	0x01EAA498 MOV X24, X31
	0x01EAA49C LDR X8, [X8 + 0x78]
	0x01EAA4A0 CBZ X8, 0x1EAA5C4
	0x01EAA4A4 LDR W9, [X8 + 0x18]
	0x01EAA4A8 CMP X24, W9, SXTW
	0x01EAA4AC B.GE 0x1EAA5AC
	0x01EAA4B0 CMP X24, X9
	0x01EAA4B4 B.CS 0x1EAA538
	0x01EAA4B8 ADD X8, X8, X24, 0x3, LSL
	0x01EAA4BC LDR X0, [X8 + 0x20]
	0x01EAA4C0 LDR X1, [X25]
	0x01EAA4C4 BL 0x1C16E00
	0x01EAA4C8 MOV X23, X0
	0x01EAA4CC CBZ X0, 0x1EAA528
	0x01EAA4D0 LDR X8, [X23]
	0x01EAA4D4 LDR X1, [X25]
	0x01EAA4D8 LDRH W9, [X8 + 0x12E]
	0x01EAA4DC CBZ X9, 0x1EAA500
	0x01EAA4E0 LDR X10, [X8 + 0xB0]
	0x01EAA4E4 ADD X10, X10, 0x8
	0x01EAA4E8 LDUR X11, [X10 - 0x8]
	0x01EAA4EC CMP X11, X1
	0x01EAA4F0 B.EQ 0x1EAA510
	0x01EAA4F4 SUBS X9, X9, 0x1
	0x01EAA4F8 ADD X10, X10, 0x10
	0x01EAA4FC B.NE 0x1EAA4E8
	0x01EAA500 MOV X0, X23
	0x01EAA504 MOV W2, W31
	0x01EAA508 BL 0x1C5C788
	0x01EAA50C B 0x1EAA51C
	0x01EAA510 LDRSW X9, [X10]
	0x01EAA514 ADD X8, X8, X9, 0x4, LSL
	0x01EAA518 ADD X0, X8, 0x138
	0x01EAA51C LDP X8, X1, [X0]
	0x01EAA520 MOV X0, X23
	0x01EAA524 BLR X8
	0x01EAA528 LDR X8, [X31 + 0x8]
	0x01EAA52C ADD X24, X24, 0x1
	0x01EAA530 CBNZ X8, 0x1EAA49C
	0x01EAA534 B 0x1EAA5C4
	0x01EAA538 BL 0x1C16F28
	0x01EAA53C B 0x1EAA5C8
	0x01EAA540 B 0x1EAA544
	0x01EAA544 MOV X23, X0
	0x01EAA548 CMP W1, 0x1
	0x01EAA54C B.NE 0x1EAA5F4
	0x01EAA550 MOV X0, X23
	0x01EAA554 BL 0x3EB1AD0
	0x01EAA558 MOV X23, X0
	0x01EAA55C MOV X0, X20
	0x01EAA560 BL 0x1C16D08
	0x01EAA564 LDR X8, [X23]
	0x01EAA568 LDR X1, [X8]
	0x01EAA56C BL 0x1C17270
	0x01EAA570 TBZ X0, 0x0, 0x1EAA5C8
	0x01EAA574 LDR X23, [X23]
	0x01EAA578 BL 0x3EB1AE0
	0x01EAA57C MOV X0, X21
	0x01EAA580 BL 0x1C16D08
	0x01EAA584 LDR W8, [X0 + 0xE0]
	0x01EAA588 CBNZ W8, 0x1EAA590
	0x01EAA58C BL 0x1C16DFC
	0x01EAA590 MOV X0, X22
	0x01EAA594 BL 0x1C16D08
	0x01EAA598 MOV X2, X0
	0x01EAA59C MOV X0, X19
	0x01EAA5A0 MOV X1, X23
	0x01EAA5A4 BL 0x2213878
	0x01EAA5A8 B 0x1EAA528
	0x01EAA5AC LDP X20, X19, [X31 + 0x40]
	0x01EAA5B0 LDP X22, X21, [X31 + 0x30]
	0x01EAA5B4 LDP X24, X23, [X31 + 0x20]
	0x01EAA5B8 LDP X30, X25, [X31 + 0x10]
	0x01EAA5BC ADD X31, X31, 0x50
	0x01EAA5C0 RET
	0x01EAA5C4 BL 0x1C16F20
	0x01EAA5C8 MOVZ W0, 0x8
	0x01EAA5CC BL 0x3EB1AF0
	0x01EAA5D0 LDR X8, [X23]
	0x01EAA5D4 STR X8, [X0]
	0x01EAA5D8 ADRP X1, 0x200A000
	0x01EAA5DC ADD X1, X1, 0xE58
	0x01EAA5E0 MOV X2, X31
	0x01EAA5E4 BL 0x3EB1B00
	0x01EAA5E8 B 0x1EAA5EC
	0x01EAA5EC MOV X23, X0
	0x01EAA5F0 BL 0x3EB1AE0
	0x01EAA5F4 MOV X0, X23
	0x01EAA5F8 BL 0x1D2C690
	0x01EAA5FC BL 0x1990590
	0x01EAA600 STR X30, [X31 - 0x30]!
	0x01EAA604 STP X22, X21, [X31 + 0x10]
	0x01EAA608 STP X20, X19, [X31 + 0x20]
	0x01EAA60C ADRP X21, 0x252F000
	0x01EAA610 ADRP X22, 0x224C000
	0x01EAA614 LDRB W8, [X21 + 0x376]
	0x01EAA618 LDR X22, [X22 + 0x398]
	0x01EAA61C MOV X20, X1
	0x01EAA620 MOV X19, X0
	0x01EAA624 TBNZ X8, 0x0, 0x1EAA63C
	0x01EAA628 ADRP X0, 0x224C000
	0x01EAA62C LDR X0, [X0 + 0x398]
	0x01EAA630 BL 0x1C16CF4
	0x01EAA634 MOVZ W8, 0x1
	0x01EAA638 STRB W8, [X21 + 0x376]
	0x01EAA63C LDR X0, [X22]
	0x01EAA640 LDR W8, [X0 + 0xE0]
	0x01EAA644 CBNZ W8, 0x1EAA64C
	0x01EAA648 BL 0x1C16DFC
	0x01EAA64C MOV X0, X31
	0x01EAA650 BL 0x1E92E50
	0x01EAA654 CMP W20, W0
	0x01EAA658 B.NE 0x1EAA664
	0x01EAA65C MOVZ W8, 0x2
	0x01EAA660 STR W8, [X19 + 0x13C]
	0x01EAA664 LDP X20, X19, [X31 + 0x20]
	0x01EAA668 LDP X22, X21, [X31 + 0x10]
	0x01EAA66C LDR X30, [X31], #0x30
	0x01EAA670 RET
	0x01EAA674 STR X30, [X31 - 0x20]!
	0x01EAA678 STP X20, X19, [X31 + 0x10]
	0x01EAA67C ADRP X20, 0x252F000
	0x01EAA680 LDRB W8, [X20 + 0x377]
	0x01EAA684 MOV X19, X0
	0x01EAA688 TBNZ X8, 0x0, 0x1EAA6A0
	0x01EAA68C ADRP X0, 0x224C000
	0x01EAA690 LDR X0, [X0 + 0x398]
	0x01EAA694 BL 0x1C16CF4
	0x01EAA698 MOVZ W8, 0x1
	0x01EAA69C STRB W8, [X20 + 0x377]
	0x01EAA6A0 MOV X0, X19
	0x01EAA6A4 BL 0x1EA7328
	0x01EAA6A8 TBZ X0, 0x0, 0x1EAA6B4
	0x01EAA6AC MOV W0, W31
	0x01EAA6B0 B 0x1EAA720
	0x01EAA6B4 LDR X0, [X19 + 0x50]
	0x01EAA6B8 CBZ X0, 0x1EAA710
	0x01EAA6BC MOV X1, X31
	0x01EAA6C0 BL 0x1EC0864
	0x01EAA6C4 TBZ X0, 0x0, 0x1EAA710
	0x01EAA6C8 MOV X0, X19
	0x01EAA6CC BL 0x1EA27F0
	0x01EAA6D0 TBNZ X0, 0x0, 0x1EAA710
	0x01EAA6D4 ADRP X8, 0x224C000
	0x01EAA6D8 LDR X8, [X8 + 0x398]
	0x01EAA6DC LDR X20, [X19 + 0x50]
	0x01EAA6E0 LDR X0, [X8]
	0x01EAA6E4 LDR W8, [X0 + 0xE0]
	0x01EAA6E8 CBNZ W8, 0x1EAA6F0
	0x01EAA6EC BL 0x1C16DFC
	0x01EAA6F0 MOV X0, X31
	0x01EAA6F4 BL 0x1E92E50
	0x01EAA6F8 CBZ X20, 0x1EAA72C
	0x01EAA6FC AND X1, X0, 0x0
	0x01EAA700 MOV X0, X20
	0x01EAA704 MOV X2, X31
	0x01EAA708 BL 0x1EC93AC
	0x01EAA70C TBZ X0, 0x0, 0x1EAA6AC
	0x01EAA710 LDR X0, [X19 + 0x60]
	0x01EAA714 MOV X1, X31
	0x01EAA718 BL 0x1E702F8
	0x01EAA71C MOVZ W0, 0x1
	0x01EAA720 LDP X20, X19, [X31 + 0x10]
	0x01EAA724 LDR X30, [X31], #0x20
	0x01EAA728 RET
	0x01EAA72C BL 0x1C16F20
	0x01EAA730 SUB X31, X31, 0xA0
	0x01EAA734 STP X29, X30, [X31 + 0x40]
	0x01EAA738 STP X28, X27, [X31 + 0x50]
	0x01EAA73C STP X26, X25, [X31 + 0x60]
	0x01EAA740 STP X24, X23, [X31 + 0x70]
	0x01EAA744 STP X22, X21, [X31 + 0x80]
	0x01EAA748 STP X20, X19, [X31 + 0x90]
	0x01EAA74C ADRP X20, 0x252F000
	0x01EAA750 LDRB W8, [X20 + 0x378]
	0x01EAA754 MOV X19, X0
	0x01EAA758 TBNZ X8, 0x0, 0x1EAA7DC
	0x01EAA75C ADRP X0, 0x224F000
	0x01EAA760 LDR X0, [X0 + 0xFD0]
	0x01EAA764 BL 0x1C16CF4
	0x01EAA768 ADRP X0, 0x224F000
	0x01EAA76C LDR X0, [X0 + 0xFD8]
	0x01EAA770 BL 0x1C16CF4
	0x01EAA774 ADRP X0, 0x224F000
	0x01EAA778 LDR X0, [X0 + 0xFE0]
	0x01EAA77C BL 0x1C16CF4
	0x01EAA780 ADRP X0, 0x2254000
	0x01EAA784 LDR X0, [X0 + 0xDF8]
	0x01EAA788 BL 0x1C16CF4
	0x01EAA78C ADRP X0, 0x224F000
	0x01EAA790 LDR X0, [X0 + 0xFF8]
	0x01EAA794 BL 0x1C16CF4
	0x01EAA798 ADRP X0, 0x2254000
	0x01EAA79C LDR X0, [X0 + 0xE00]
	0x01EAA7A0 BL 0x1C16CF4
	0x01EAA7A4 ADRP X0, 0x2254000
	0x01EAA7A8 LDR X0, [X0 + 0xE08]
	0x01EAA7AC BL 0x1C16CF4
	0x01EAA7B0 ADRP X0, 0x2254000
	0x01EAA7B4 LDR X0, [X0 + 0xE10]
	0x01EAA7B8 BL 0x1C16CF4
	0x01EAA7BC ADRP X0, 0x224C000
	0x01EAA7C0 LDR X0, [X0 + 0x398]
	0x01EAA7C4 BL 0x1C16CF4
	0x01EAA7C8 ADRP X0, 0x2252000
	0x01EAA7CC LDR X0, [X0 + 0xE80]
	0x01EAA7D0 BL 0x1C16CF4
	0x01EAA7D4 MOVZ W8, 0x1
	0x01EAA7D8 STRB W8, [X20 + 0x378]
	0x01EAA7DC STP X31, X31, [X31 + 0x20]
	0x01EAA7E0 STR X31, [X31 + 0x30]
	0x01EAA7E4 LDR X0, [X19 + 0xE0]
	0x01EAA7E8 CBZ X0, 0x1EAA8D0
	0x01EAA7EC ADRP X27, 0x2254000
	0x01EAA7F0 ADRP X28, 0x224C000
	0x01EAA7F4 ADRP X29, 0x2254000
	0x01EAA7F8 ADRP X24, 0x2252000
	0x01EAA7FC ADRP X25, 0x224F000
	0x01EAA800 ADRP X21, 0x2254000
	0x01EAA804 LDR X27, [X27 + 0xE08]
	0x01EAA808 LDR X28, [X28 + 0x398]
	0x01EAA80C LDR X29, [X29 + 0xE10]
	0x01EAA810 LDR X24, [X24 + 0xE80]
	0x01EAA814 LDR X25, [X25 + 0xFD8]
	0x01EAA818 LDR X21, [X21 + 0xB68]
	0x01EAA81C MOV W20, W31
	0x01EAA820 ADRP X26, 0x252F000
	0x01EAA824 LDR W8, [X0 + 0x18]
	0x01EAA828 CMP W20, W8
	0x01EAA82C B.GE 0x1EAA8D4
	0x01EAA830 LDR X2, [X27]
	0x01EAA834 MOV W1, W20
	0x01EAA838 BL 0x301BCCC
	0x01EAA83C MOV X22, X0
	0x01EAA840 CBZ X0, 0x1EAAB04
	0x01EAA844 LDR X8, [X22 + 0x20]
	0x01EAA848 CBZ X8, 0x1EAA854
	0x01EAA84C LDR W23, [X8]
	0x01EAA850 B 0x1EAA858
	0x01EAA854 MOV W23, W31
	0x01EAA858 LDR X0, [X28]
	0x01EAA85C LDR W8, [X0 + 0xE0]
	0x01EAA860 CBNZ W8, 0x1EAA868
	0x01EAA864 BL 0x1C16DFC
	0x01EAA868 CBZ W23, 0x1EAA8AC
	0x01EAA86C LDR X0, [X24]
	0x01EAA870 LDR W8, [X0 + 0xE0]
	0x01EAA874 CBNZ W8, 0x1EAA87C
	0x01EAA878 BL 0x1C16DFC
	0x01EAA87C LDR W0, [X22 + 0x60]
	0x01EAA880 MOVZ W1, 0x1
	0x01EAA884 MOV X2, X31
	0x01EAA888 BL 0x1E93D90
	0x01EAA88C TBZ X0, 0x0, 0x1EAA8C4
	0x01EAA890 LDRB W8, [X26 + 0x346]
	0x01EAA894 TBNZ X8, 0x0, 0x1EAA8C4
	0x01EAA898 MOV X0, X21
	0x01EAA89C BL 0x1C16CF4
	0x01EAA8A0 MOVZ W8, 0x1
	0x01EAA8A4 STRB W8, [X26 + 0x346]
	0x01EAA8A8 B 0x1EAA8C4
	0x01EAA8AC LDR X0, [X19 + 0xE0]
	0x01EAA8B0 CBZ X0, 0x1EAAB08
	0x01EAA8B4 LDR X3, [X29]
	0x01EAA8B8 MOV W1, W20
	0x01EAA8BC MOV X2, X31
	0x01EAA8C0 BL 0x301BD20
	0x01EAA8C4 LDR X0, [X19 + 0xE0]
	0x01EAA8C8 ADD W20, W20, 0x1
	0x01EAA8CC CBNZ X0, 0x1EAA824
	0x01EAA8D0 BL 0x1C16F20
	0x01EAA8D4 ADRP X26, 0x224F000
	0x01EAA8D8 LDR X26, [X26 + 0xFF8]
	0x01EAA8DC LDR X1, [X26]
	0x01EAA8E0 ADD X8, X31, 0x8
	0x01EAA8E4 BL 0x301CB58
	0x01EAA8E8 LDUR V0, [X31 + 0x8]
	0x01EAA8EC LDR X8, [X31 + 0x18]
	0x01EAA8F0 ADRP X21, 0x224F000
	0x01EAA8F4 STR V0, [X31 + 0x2]
	0x01EAA8F8 STR X8, [X31 + 0x30]
	0x01EAA8FC LDR X21, [X21 + 0xFD0]
	0x01EAA900 LDR X1, [X25]
	0x01EAA904 ADD X0, X31, 0x20
	0x01EAA908 BL 0x2BC4350
	0x01EAA90C TBZ X0, 0x0, 0x1EAA954
	0x01EAA910 LDR X20, [X31 + 0x30]
	0x01EAA914 CBZ X20, 0x1EAA900
	0x01EAA918 LDR X0, [X24]
	0x01EAA91C LDR W8, [X0 + 0xE0]
	0x01EAA920 CBNZ W8, 0x1EAA928
	0x01EAA924 BL 0x1C16DFC
	0x01EAA928 LDR W0, [X20 + 0x60]
	0x01EAA92C MOVZ W1, 0x1
	0x01EAA930 MOV X2, X31
	0x01EAA934 BL 0x1E93D90
	0x01EAA938 TBZ X0, 0x0, 0x1EAA900
	0x01EAA93C MOV X0, X19
	0x01EAA940 MOV X1, X20
	0x01EAA944 MOV W2, W31
	0x01EAA948 MOV X3, X31
	0x01EAA94C BL 0x1EA4B28
	0x01EAA950 B 0x1EAA900
	0x01EAA954 MOV X22, X31
	0x01EAA958 LDR X1, [X21]
	0x01EAA95C ADD X0, X31, 0x20
	0x01EAA960 BL 0x2BC434C
	0x01EAA964 CBNZ X22, 0x1EAAB18
	0x01EAA968 LDR X0, [X19 + 0xE0]
	0x01EAA96C CBZ X0, 0x1EAAB20
	0x01EAA970 LDR X1, [X26]
	0x01EAA974 ADD X8, X31, 0x8
	0x01EAA978 BL 0x301CB58
	0x01EAA97C LDUR V0, [X31 + 0x8]
	0x01EAA980 LDR X8, [X31 + 0x18]
	0x01EAA984 STR V0, [X31 + 0x2]
	0x01EAA988 STR X8, [X31 + 0x30]
	0x01EAA98C LDR X1, [X25]
	0x01EAA990 ADD X0, X31, 0x20
	0x01EAA994 BL 0x2BC4350
	0x01EAA998 TBZ X0, 0x0, 0x1EAA9D4
	0x01EAA99C LDR X20, [X31 + 0x30]
	0x01EAA9A0 CBZ X20, 0x1EAA98C
	0x01EAA9A4 LDR X0, [X24]
	0x01EAA9A8 LDR W8, [X0 + 0xE0]
	0x01EAA9AC CBNZ W8, 0x1EAA9B4
	0x01EAA9B0 BL 0x1C16DFC
	0x01EAA9B4 LDR W0, [X20 + 0x60]
	0x01EAA9B8 MOVZ W1, 0x1
	0x01EAA9BC MOV X2, X31
	0x01EAA9C0 BL 0x1E93D90
	0x01EAA9C4 TBZ X0, 0x0, 0x1EAA98C
	0x01EAA9C8 MOV X1, X20
	0x01EAA9CC BL 0x1EA4DB8
	0x01EAA9D0 B 0x1EAA98C
	0x01EAA9D4 MOV X22, X31
	0x01EAA9D8 MOVZ W23, 0xB
	0x01EAA9DC LDR X1, [X21]
	0x01EAA9E0 ADD X0, X31, 0x20
	0x01EAA9E4 BL 0x2BC434C
	0x01EAA9E8 CBNZ X22, 0x1EAAB24
	0x01EAA9EC CMP W23, 0xB
	0x01EAA9F0 B.EQ 0x1EAA9F8
	0x01EAA9F4 CBNZ W23, 0x1EAAA98
	0x01EAA9F8 LDR X0, [X19 + 0xE0]
	0x01EAA9FC CBZ X0, 0x1EAAB2C
	0x01EAAA00 LDR X1, [X26]
	0x01EAAA04 ADD X8, X31, 0x8
	0x01EAAA08 BL 0x301CB58

ISIL:
	001 Subtract X31, X31, 432
	002 Move [X31+336], X29
	003 Move [X31+344], X30
	004 Move [X31+352], X28
	005 Move [X31+360], X27
	006 Move [X31+368], X26
	007 Move [X31+376], X25
	008 Move [X31+384], X24
	009 Move [X31+392], X23
	010 Move [X31+400], X22
	011 Move [X31+408], X21
	012 Move [X31+416], X20
	013 Move [X31+424], X19
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move [X31+8], X8
	016 Move X8, [X8+40]
	017 Move X23, 0x2530000
	018 Move X19, X3
	019 Move X20, X2
	020 Move [X31+328], X8
	021 Move W8, [X23+879]
	022 Move W22, W1
	023 Move X21, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {48}
	028 Move X0, 0x2255000
	029 Move X0, [X0+3488]
	030 Call 0x1C17CF4
	031 Move X0, 0x2255000
	032 Move X0, [X0+3496]
	033 Call 0x1C17CF4
	034 Move X0, 0x2255000
	035 Move X0, [X0+3344]
	036 Call 0x1C17CF4
	037 Move X0, 0x2251000
	038 Move X0, [X0+3248]
	039 Call 0x1C17CF4
	040 Move X0, 0x2255000
	041 Move X0, [X0+3504]
	042 Call 0x1C17CF4
	043 Move X0, 0x2255000
	044 Move X0, [X0+3512]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X23+879], W8
	048 Move [X31+64], X31
	049 Move [X31+72], X31
	050 Move [X31+48], X31
	051 Move [X31+56], X31
	052 Move [X31+32], X31
	053 Move [X31+40], X31
	054 Move [X31+16], X31
	055 Move [X31+24], X31
	056 Move V2, [X20+16]
	057 Move V0, [X20+32]
	058 Move W8, [X20+48]
	059 Move V1, [X20]
	060 Move X23, [X21+256]
	061 Move [X31+224], V2
	062 Move [X31+232], V0
	063 Move [X31+256], W8
	064 Move [X31+13], V1
	065 Compare X23, 0
	066 JumpIfEqual {464}
	067 Move V0, [X31+208]
	068 Move V1, [X31+224]
	069 Move V2, [X31+15]
	070 Move W8, [X31+256]
	071 Move X10, 0x2251000
	072 Move [X31+144], V0
	073 Move [X31+152], V1
	074 Move [X31+11], V2
	075 Move [X31+192], W8
	076 Move X8, [X23]
	077 Move X10, [X10+3248]
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 Move X1, [X10]
	080 Compare X9, 0
	081 JumpIfEqual {88}
	082 Move X10, [X8+176]
	083 Add X10, X10, 8
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Subtract X9, X9, 1
	087 Add X10, X10, 16
	088 Move W2, 13
	089 Move X0, X23
	090 Call 0x1C5D788
	091 Move W9, [X10]
	092 Add W9, W9, 13
	093 Add X8, X8, W9
	094 Add X0, X8, 312
	095 Move V0, [X31+144]
	096 Move V1, [X31+160]
	097 Move V2, [X31+11]
	098 Move W9, [X31+192]
	099 Move X8, [X0]
	100 Move [X31+272], V0
	101 Move [X31+280], V1
	102 Move [X31+19], V2
	103 Move [X31+320], W9
	104 Move X3, [X0+8]
	105 Add X1, X31, 272
	106 Move X0, X23
	107 Move W2, W22
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {446}
	113 Move W8, [X20+48]
	114 Move V1, [X20+16]
	115 Move V0, [X20+32]
	116 Move V2, [X20]
	117 Add X1, X31, 80
	118 Move X0, X19
	119 Move X2, X31
	120 Move [X31+128], W8
	121 Move [X31+96], V1
	122 Move [X31+104], V0
	123 Move [X31+5], V2
	124 Call NetworkSceneInfo.Equals, X0, X1
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfEqual {446}
	129 Move TEMP, 0
	130 Not TEMP
	131 Move W22, TEMP
	132 Move X0, X19
	133 Move X1, X31
	134 Call NetworkSceneInfo.get_SceneCount, X0
	135 Add W22, W22, 1
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move TEMP, 0
	138 Not TEMP
	139 Move W22, TEMP
	140 Move X0, X20
	141 Move X1, X31
	142 Call NetworkSceneInfo.get_SceneCount, X0
	143 Add W22, W22, 1
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X0, X20
	146 Move X1, X31
	147 Call NetworkSceneInfo.get_SceneCount, X0
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move X0, X20
	150 Move X1, X31
	151 Call NetworkSceneInfo.get_SceneParams, X0
	152 Move X23, 0x2255000
	153 Move X23, [X23+3344]
	154 Move [X31+64], X0
	155 Move [X31+72], X1
	156 Add X0, X31, 64
	157 Move W1, W31
	158 Move X2, [X23]
	159 Call 0x2D20A44, X0, X1
	160 Move X1, X31
	161 Call NetworkLoadSceneParameters.get_IsSingleLoad, X0
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfNotEqual {227}
	166 Move X0, X19
	167 Move X1, X31
	168 Call NetworkSceneInfo.get_SceneCount, X0
	169 Compare W0, 0
	170 JumpIfEqual {331}
	171 Move X0, X19
	172 Move X1, X31
	173 Call NetworkSceneInfo.get_Scenes, X0
	174 Move X24, 0x2255000
	175 Move X24, [X24+3496]
	176 Move [X31+48], X0
	177 Move [X31+56], X1
	178 Add X0, X31, 48
	179 Move W1, W31
	180 Move X2, [X24]
	181 Call FixedArray`1<SceneRef>.get_Item, X0, X1
	182 Move W22, [X0]
	183 Move X0, X20
	184 Move X1, X31
	185 Call NetworkSceneInfo.get_Scenes, X0
	186 Move X2, [X24]
	187 Move [X31+48], X0
	188 Move [X31+56], X1
	189 Add X0, X31, 48
	190 Move W1, W31
	191 Call FixedArray`1<SceneRef>.get_Item, X0, X1
	192 Move W1, [X0]
	193 Move X0, X22
	194 Move X2, X31
	195 Call SceneRef.op_Inequality, X0, X1
	196 Move TEMP, X0
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfEqual {331}
	200 Move X0, X19
	201 Move X1, X31
	202 Call NetworkSceneInfo.get_SceneParams, X0
	203 Move X2, [X23]
	204 Move [X31+64], X0
	205 Move [X31+72], X1
	206 Add X0, X31, 64
	207 Move W1, W31
	208 Call 0x2D20A44, X0, X1
	209 NotImplemented "Instruction LDRH not yet implemented."
	210 Move X0, X20
	211 Move X1, X31
	212 Call NetworkSceneInfo.get_SceneParams, X0
	213 Move X2, [X23]
	214 Move [X31+64], X0
	215 Move [X31+72], X1
	216 Add X0, X31, 64
	217 Move W1, W31
	218 Call 0x2D20A44, X0, X1
	219 NotImplemented "Instruction LDRH not yet implemented."
	220 Move X0, X22
	221 Move X2, X31
	222 Call NetworkLoadSceneParameters.op_Inequality, X0, X1
	223 Move TEMP, X0
	224 And TEMP, TEMP, 1
	225 Compare TEMP, 1
	226 JumpIfEqual {331}
	227 Move X0, X19
	228 Move X1, X31
	229 Call NetworkSceneInfo.get_SceneCount, X0
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Move X26, 0x2255000
	232 Move X27, 0x2255000
	233 Move X28, 0x2255000
	234 Move X29, 0x2255000
	235 Move X26, [X26+3496]
	236 Move X27, [X27+3344]
	237 Move X28, [X28+3488]
	238 Move X29, [X29+3504]
	239 Move W22, W31
	240 Move X0, X19
	241 Move X1, X31
	242 Call NetworkSceneInfo.get_Scenes, X0
	243 Move X2, [X26]
	244 Move [X31+48], X0
	245 Move [X31+56], X1
	246 Add X0, X31, 48
	247 Move W1, W22
	248 Call FixedArray`1<SceneRef>.get_Item, X0, X1
	249 Move W24, [X0]
	250 Move X0, X19
	251 Move X1, X31
	252 Call NetworkSceneInfo.get_SceneParams, X0
	253 Move X2, [X27]
	254 Move [X31+64], X0
	255 Move [X31+72], X1
	256 Add X0, X31, 64
	257 Move W1, W22
	258 Call 0x2D20A44, X0, X1
	259 NotImplemented "Instruction LDRH not yet implemented."
	260 And X9, X23, 0xFFFFFFFF
	261 Move X0, X20
	262 Move X1, X24
	263 Or X23, X9, X8
	264 Move X2, X23
	265 Move X3, X31
	266 Call NetworkSceneInfo.IndexOf, X0, X1, X2
	267 Move TEMP, X0
	268 And TEMP, TEMP, -2147483648
	269 Compare TEMP, -2147483648
	270 JumpIfNotEqual {326}
	271 Move X24, [X21+256]
	272 Move X0, X19
	273 Move X1, X31
	274 Call NetworkSceneInfo.get_Scenes, X0
	275 Move X2, [X26]
	276 Move [X31+48], X0
	277 Move [X31+56], X1
	278 Add X0, X31, 48
	279 Move W1, W22
	280 Call FixedArray`1<SceneRef>.get_Item, X0, X1
	281 Compare X24, 0
	282 JumpIfEqual {464}
	283 Move X8, [X24]
	284 Move X10, 0x2251000
	285 Move W25, [X0]
	286 NotImplemented "Instruction LDRH not yet implemented."
	287 Move X10, [X10+3248]
	288 Move X1, [X10]
	289 Compare X9, 0
	290 JumpIfEqual {297}
	291 Move X10, [X8+176]
	292 Add X10, X10, 8
	293 NotImplemented "Instruction LDUR not yet implemented."
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Subtract X9, X9, 1
	296 Add X10, X10, 16
	297 Move W2, 10
	298 Move X0, X24
	299 Call 0x1C5D788
	300 Move W9, [X10]
	301 Add W9, W9, 10
	302 Add X8, X8, W9
	303 Add X0, X8, 312
	304 Move X8, [X0]
	305 Move X2, [X0+8]
	306 Move X0, X24
	307 Move X1, X25
	308 NotImplemented "Instruction BLR not yet implemented."
	309 Move X2, X1
	310 Move X1, X0
	311 Call NetworkRunner.ValidateSceneOp, X0, X1
	312 Move X8, [X28]
	313 Move [X31+32], X0
	314 Move [X31+40], X1
	315 Move X0, X8
	316 Call 0x1C17F10
	317 Move X2, [X29]
	318 Move X1, X21
	319 Move X3, X31
	320 Move X24, X0
	321 Call Action`1<NetworkSceneAsyncOp>..ctor, X0, X1, X2
	322 Add X0, X31, 32
	323 Move X1, X24
	324 Move X2, X31
	325 Call NetworkSceneAsyncOp.AddOnCompleted, X0, X1
	326 Move X0, X19
	327 Move X1, X31
	328 Add W22, W22, 1
	329 Call NetworkSceneInfo.get_SceneCount, X0
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Move X0, X20
	332 Move X1, X31
	333 Call NetworkSceneInfo.get_SceneCount, X0
	334 NotImplemented "Instruction CMP not yet implemented."
	335 Move X29, 0x2255000
	336 Move X28, 0x2255000
	337 Move X27, 0x2255000
	338 Move X29, [X29+3496]
	339 Move X28, [X28+3344]
	340 Move X27, [X27+3512]
	341 Move W22, W31
	342 Move X0, X20
	343 Move X1, X31
	344 Call NetworkSceneInfo.get_Scenes, X0
	345 Move X2, [X29]
	346 Move [X31+48], X0
	347 Move [X31+56], X1
	348 Add X0, X31, 48
	349 Move W1, W22
	350 Call FixedArray`1<SceneRef>.get_Item, X0, X1
	351 Move W24, [X0]
	352 Move X0, X20
	353 Move X1, X31
	354 Call NetworkSceneInfo.get_SceneParams, X0
	355 Move X2, [X28]
	356 Move [X31+64], X0
	357 Move [X31+72], X1
	358 Add X0, X31, 64
	359 Move W1, W22
	360 Call 0x2D20A44, X0, X1
	361 NotImplemented "Instruction LDRH not yet implemented."
	362 And X9, X23, 0xFFFFFFFF
	363 Move X0, X19
	364 Move X1, X24
	365 Or X23, X9, X8
	366 Move X2, X23
	367 Move X3, X31
	368 Call NetworkSceneInfo.IndexOf, X0, X1, X2
	369 Move TEMP, X0
	370 And TEMP, TEMP, -2147483648
	371 Compare TEMP, -2147483648
	372 JumpIfNotEqual {441}
	373 Move X24, [X21+256]
	374 Move X0, X20
	375 Move X1, X31
	376 Call NetworkSceneInfo.get_Scenes, X0
	377 Move X2, [X29]
	378 Move [X31+48], X0
	379 Move [X31+56], X1
	380 Add X0, X31, 48
	381 Move W1, W22
	382 Call FixedArray`1<SceneRef>.get_Item, X0, X1
	383 Move W25, [X0]
	384 Move X0, X20
	385 Move X1, X31
	386 Call NetworkSceneInfo.get_SceneParams, X0
	387 Move X2, [X28]
	388 Move [X31+64], X0
	389 Move [X31+72], X1
	390 Add X0, X31, 64
	391 Move W1, W22
	392 Call 0x2D20A44, X0, X1
	393 Compare X24, 0
	394 JumpIfEqual {464}
	395 Move X8, [X24]
	396 Move X10, 0x2251000
	397 NotImplemented "Instruction LDRH not yet implemented."
	398 NotImplemented "Instruction LDRH not yet implemented."
	399 Move X10, [X10+3248]
	400 Move X1, [X10]
	401 Compare X9, 0
	402 JumpIfEqual {409}
	403 Move X10, [X8+176]
	404 Add X10, X10, 8
	405 NotImplemented "Instruction LDUR not yet implemented."
	406 NotImplemented "Instruction CMP not yet implemented."
	407 Subtract X9, X9, 1
	408 Add X10, X10, 16
	409 Move W2, 9
	410 Move X0, X24
	411 Call 0x1C5D788
	412 Move W9, [X10]
	413 Add W9, W9, 9
	414 Add X8, X8, W9
	415 Add X0, X8, 312
	416 Move X8, [X0]
	417 Move X3, [X0+8]
	418 Move X0, X24
	419 Move X1, X25
	420 Move X2, X26
	421 NotImplemented "Instruction BLR not yet implemented."
	422 Move X2, X1
	423 Move X1, X0
	424 Call NetworkRunner.ValidateSceneOp, X0, X1
	425 Move X8, 0x2255000
	426 Move X8, [X8+3488]
	427 Move [X31+16], X0
	428 Move [X31+24], X1
	429 Move X8, [X8]
	430 Move X0, X8
	431 Call 0x1C17F10
	432 Move X2, [X27]
	433 Move X1, X21
	434 Move X3, X31
	435 Move X24, X0
	436 Call Action`1<NetworkSceneAsyncOp>..ctor, X0, X1, X2
	437 Add X0, X31, 16
	438 Move X1, X24
	439 Move X2, X31
	440 Call NetworkSceneAsyncOp.AddOnCompleted, X0, X1
	441 Move X0, X20
	442 Move X1, X31
	443 Add W22, W22, 1
	444 Call NetworkSceneInfo.get_SceneCount, X0
	445 NotImplemented "Instruction CMP not yet implemented."
	446 Move X8, [X31+8]
	447 Move X8, [X8+40]
	448 Move X9, [X31+328]
	449 NotImplemented "Instruction CMP not yet implemented."
	450 Move X20, [X31+416]
	451 Move X19, [X31+424]
	452 Move X22, [X31+400]
	453 Move X21, [X31+408]
	454 Move X24, [X31+384]
	455 Move X23, [X31+392]
	456 Move X26, [X31+368]
	457 Move X25, [X31+376]
	458 Move X28, [X31+352]
	459 Move X27, [X31+360]
	460 Move X29, [X31+336]
	461 Move X30, [X31+344]
	462 Add X31, X31, 432
	463 Return 
	464 Call 0x1C17F20
	465 Call 0x3EB2B20

Method: System.Void OnRemoteSceneLoadCompleted(Fusion.NetworkSceneAsyncOp asyncOp)

Disassembly:
	0x01EAAA0C LDUR V0, [X31 + 0x8]
	0x01EAAA10 LDR X8, [X31 + 0x18]
	0x01EAAA14 STR V0, [X31 + 0x2]
	0x01EAAA18 STR X8, [X31 + 0x30]
	0x01EAAA1C LDR X1, [X25]
	0x01EAAA20 ADD X0, X31, 0x20
	0x01EAAA24 BL 0x2BC4350
	0x01EAAA28 TBZ X0, 0x0, 0x1EAAA64
	0x01EAAA2C LDR X20, [X31 + 0x30]
	0x01EAAA30 CBZ X20, 0x1EAAA1C
	0x01EAAA34 LDR X0, [X24]
	0x01EAAA38 LDR W8, [X0 + 0xE0]
	0x01EAAA3C CBNZ W8, 0x1EAAA44
	0x01EAAA40 BL 0x1C16DFC
	0x01EAAA44 LDR W0, [X20 + 0x60]
	0x01EAAA48 MOVZ W1, 0x1
	0x01EAAA4C MOV X2, X31
	0x01EAAA50 BL 0x1E93D90
	0x01EAAA54 TBZ X0, 0x0, 0x1EAAA1C
	0x01EAAA58 MOV X1, X20
	0x01EAAA5C BL 0x1EA4E54
	0x01EAAA60 B 0x1EAAA1C
	0x01EAAA64 MOV X22, X31
	0x01EAAA68 MOV W24, W31
	0x01EAAA6C MOVZ W23, 0xE
	0x01EAAA70 LDR X1, [X21]
	0x01EAAA74 ADD X0, X31, 0x20
	0x01EAAA78 BL 0x2BC434C
	0x01EAAA7C CBNZ X22, 0x1EAAB30
	0x01EAAA80 MOV X21, X31
	0x01EAAA84 MOV X20, X31
	0x01EAAA88 TBZ X24, 0x0, 0x1EAAA9C
	0x01EAAA8C MOV W23, W31
	0x01EAAA90 MOV X20, X21
	0x01EAAA94 B 0x1EAAA9C
	0x01EAAA98 MOV X20, X31
	0x01EAAA9C LDR X8, [X19 + 0xE0]
	0x01EAAAA0 CBZ X8, 0x1EAAB0C
	0x01EAAAA4 LDP W2, W9, [X8 + 0x18]
	0x01EAAAA8 ADD W9, W9, 0x1
	0x01EAAAAC CMP W2, 0x1
	0x01EAAAB0 STP W31, W9, [X8 + 0x18]
	0x01EAAAB4 B.LT 0x1EAAAC8
	0x01EAAAB8 LDR X0, [X8 + 0x10]
	0x01EAAABC MOV W1, W31
	0x01EAAAC0 MOV X3, X31
	0x01EAAAC4 BL 0x339FA34
	0x01EAAAC8 CBNZ X20, 0x1EAAB10
	0x01EAAACC CMP W23, 0xE
	0x01EAAAD0 B.EQ 0x1EAAAD8
	0x01EAAAD4 CBNZ W23, 0x1EAAAE4
	0x01EAAAD8 LDR X0, [X19 + 0x60]
	0x01EAAADC MOV X1, X31
	0x01EAAAE0 BL 0x1E70650
	0x01EAAAE4 LDP X20, X19, [X31 + 0x90]
	0x01EAAAE8 LDP X22, X21, [X31 + 0x80]
	0x01EAAAEC LDP X24, X23, [X31 + 0x70]
	0x01EAAAF0 LDP X26, X25, [X31 + 0x60]
	0x01EAAAF4 LDP X28, X27, [X31 + 0x50]
	0x01EAAAF8 LDP X29, X30, [X31 + 0x40]
	0x01EAAAFC ADD X31, X31, 0xA0
	0x01EAAB00 RET
	0x01EAAB04 BL 0x1C16F20
	0x01EAAB08 BL 0x1C16F20
	0x01EAAB0C BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X20, 0x2530000
	009 Move W8, [X20+880]
	010 Move X19, X0
	011 Move [X31+16], X1
	012 Move [X31+24], X2
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x2255000
	018 Move X0, [X0+3520]
	019 Call 0x1C17CF4
	020 Move X0, 0x2252000
	021 Move X0, [X0+2224]
	022 Call 0x1C17CF4
	023 Move X0, 0x2255000
	024 Move X0, [X0+320]
	025 Call 0x1C17CF4
	026 Move X0, 0x2255000
	027 Move X0, [X0+3528]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+880], W8
	031 Add X0, X31, 16
	032 Move X1, X31
	033 Call NetworkSceneAsyncOp.get_Error, X0
	034 Compare X0, 0
	035 JumpIfEqual {70}
	036 Move X8, 0x2255000
	037 Move X8, [X8+320]
	038 Move X22, 0x2255000
	039 Move X22, [X22+3528]
	040 Move W9, [X31+16]
	041 Move X0, [X8]
	042 Move X23, 0x2252000
	043 Move X21, 0x2255000
	044 Move X23, [X23+2224]
	045 Move X21, [X21+3520]
	046 Add X1, X31, 8
	047 Move [X31+8], W9
	048 Call 0x1C17E04
	049 Move X20, X0
	050 Add X0, X31, 16
	051 Move X1, X31
	052 Call NetworkSceneAsyncOp.get_Error, X0
	053 Move X8, [X22]
	054 Move X2, X0
	055 Move X1, X20
	056 Move X3, X31
	057 Move X0, X8
	058 Call String.Format, X0, X1, X2
	059 Move X8, [X23]
	060 Move X20, X0
	061 Move W9, [X8+224]
	062 Compare W9, 0
	063 JumpIfNotEqual {66}
	064 Move X0, X8
	065 Call 0x1C17DFC
	066 Move X2, [X21]
	067 Move X0, X19
	068 Move X1, X20
	069 Call 0x22147F8, X0, X1
	070 Move X20, [X31+64]
	071 Move X19, [X31+72]
	072 Move X22, [X31+48]
	073 Move X21, [X31+56]
	074 Move X30, [X31+32]
	075 Move X23, [X31+40]
	076 Add X31, X31, 80
	077 Return 

Method: System.Void OnRemoteSceneUnloadCompleted(Fusion.NetworkSceneAsyncOp asyncOp)

Disassembly:
	0x01EAAB10 MOV X0, X20
	0x01EAAB14 BL 0x1C16F18
	0x01EAAB18 MOV X0, X22
	0x01EAAB1C BL 0x1C16F18
	0x01EAAB20 BL 0x1C16F20
	0x01EAAB24 MOV X0, X22
	0x01EAAB28 BL 0x1C16F18
	0x01EAAB2C BL 0x1C16F20
	0x01EAAB30 MOV X0, X22
	0x01EAAB34 BL 0x1C16F18
	0x01EAAB38 B 0x1EAACCC
	0x01EAAB3C B 0x1EAACCC
	0x01EAAB40 B 0x1EAACCC
	0x01EAAB44 B 0x1EAACCC
	0x01EAAB48 B 0x1EAACCC
	0x01EAAB4C B 0x1EAACCC
	0x01EAAB50 B 0x1EAACCC
	0x01EAAB54 B 0x1EAACCC
	0x01EAAB58 B 0x1EAAB94
	0x01EAAB5C B 0x1EAACCC
	0x01EAAB60 B 0x1EAAB94
	0x01EAAB64 B 0x1EAAC00
	0x01EAAB68 B 0x1EAAC68
	0x01EAAB6C B 0x1EAACCC
	0x01EAAB70 B 0x1EAAC00
	0x01EAAB74 B 0x1EAAC68
	0x01EAAB78 B 0x1EAACCC
	0x01EAAB7C B 0x1EAACCC
	0x01EAAB80 B 0x1EAACCC
	0x01EAAB84 B 0x1EAAB94
	0x01EAAB88 B 0x1EAAC00
	0x01EAAB8C B 0x1EAAC68
	0x01EAAB90 B 0x1EAACCC
	0x01EAAB94 MOV X21, X1
	0x01EAAB98 MOV X20, X0
	0x01EAAB9C CMP W21, 0x1
	0x01EAABA0 B.NE 0x1EAABC8
	0x01EAABA4 MOV X0, X20
	0x01EAABA8 BL 0x3EB1AD0
	0x01EAABAC LDR X22, [X0]
	0x01EAABB0 BL 0x3EB1AE0
	0x01EAABB4 ADRP X21, 0x224F000
	0x01EAABB8 LDR X21, [X21 + 0xFD0]
	0x01EAABBC MOV W23, W31
	0x01EAABC0 MOVZ W24, 0x1
	0x01EAABC4 B 0x1EAAA70
	0x01EAABC8 MOV X22, X31
	0x01EAABCC ADRP X8, 0x224F000
	0x01EAABD0 LDR X8, [X8 + 0xFD0]
	0x01EAABD4 LDR X1, [X8]
	0x01EAABD8 ADD X0, X31, 0x20
	0x01EAABDC BL 0x2BC434C
	0x01EAABE0 CBZ X22, 0x1EAACD4
	0x01EAABE4 MOV X0, X22
	0x01EAABE8 BL 0x1C16F18
	0x01EAABEC MOV X21, X1
	0x01EAABF0 MOV X20, X0
	0x01EAABF4 B 0x1EAABCC
	0x01EAABF8 B 0x1EAACCC
	0x01EAABFC B 0x1EAACCC
	0x01EAAC00 MOV X21, X1
	0x01EAAC04 MOV X20, X0
	0x01EAAC08 CMP W21, 0x1
	0x01EAAC0C B.NE 0x1EAAC38
	0x01EAAC10 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X20, 0x2530000
	009 Move W8, [X20+881]
	010 Move X19, X0
	011 Move [X31+16], X1
	012 Move [X31+24], X2
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x2255000
	018 Move X0, [X0+3520]
	019 Call 0x1C17CF4
	020 Move X0, 0x2252000
	021 Move X0, [X0+2224]
	022 Call 0x1C17CF4
	023 Move X0, 0x2255000
	024 Move X0, [X0+320]
	025 Call 0x1C17CF4
	026 Move X0, 0x2255000
	027 Move X0, [X0+3536]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+881], W8
	031 Add X0, X31, 16
	032 Move X1, X31
	033 Call NetworkSceneAsyncOp.get_Error, X0
	034 Compare X0, 0
	035 JumpIfEqual {70}
	036 Move X8, 0x2255000
	037 Move X8, [X8+320]
	038 Move X22, 0x2255000
	039 Move X22, [X22+3536]
	040 Move W9, [X31+16]
	041 Move X0, [X8]
	042 Move X23, 0x2252000
	043 Move X21, 0x2255000
	044 Move X23, [X23+2224]
	045 Move X21, [X21+3520]
	046 Add X1, X31, 8
	047 Move [X31+8], W9
	048 Call 0x1C17E04
	049 Move X20, X0
	050 Add X0, X31, 16
	051 Move X1, X31
	052 Call NetworkSceneAsyncOp.get_Error, X0
	053 Move X8, [X22]
	054 Move X2, X0
	055 Move X1, X20
	056 Move X3, X31
	057 Move X0, X8
	058 Call String.Format, X0, X1, X2
	059 Move X8, [X23]
	060 Move X20, X0
	061 Move W9, [X8+224]
	062 Compare W9, 0
	063 JumpIfNotEqual {66}
	064 Move X0, X8
	065 Call 0x1C17DFC
	066 Move X2, [X21]
	067 Move X0, X19
	068 Move X1, X20
	069 Call 0x22147F8, X0, X1
	070 Move X20, [X31+64]
	071 Move X19, [X31+72]
	072 Move X22, [X31+48]
	073 Move X21, [X31+56]
	074 Move X30, [X31+32]
	075 Move X23, [X31+40]
	076 Add X31, X31, 80
	077 Return 

Method: System.Boolean Fusion.Simulation.ICallbacks.get_CanReceivePlayerJoinLeaveCallbacks()

Disassembly:
	0x01EAAC14 BL 0x3EB1AD0
	0x01EAAC18 LDR X22, [X0]
	0x01EAAC1C BL 0x3EB1AE0
	0x01EAAC20 ADRP X21, 0x224F000
	0x01EAAC24 ADRP X26, 0x224F000
	0x01EAAC28 LDR X21, [X21 + 0xFD0]
	0x01EAAC2C LDR X26, [X26 + 0xFF8]
	0x01EAAC30 MOV W23, W31
	0x01EAAC34 B 0x1EAA9DC
	0x01EAAC38 MOV X22, X31
	0x01EAAC3C ADRP X8, 0x224F000
	0x01EAAC40 LDR X8, [X8 + 0xFD0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call NetworkRunner.get_IsInitialized, X0
	005 Move TEMP, X0
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfNotEqual {12}
	009 Move X0, X19
	010 Call NetworkRunner.get_IsSceneManagerBusy, X0
	011 Xor W8, W0, 1
	012 Move W8, W31
	013 And W0, W8, 1
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return X0

Method: Fusion.PlayerRef Fusion.Simulation.ICallbacks.get_LocalPlayerRef()

Disassembly:
	0x01EAAC44 LDR X1, [X8]
	0x01EAAC48 ADD X0, X31, 0x20
	0x01EAAC4C BL 0x2BC434C
	0x01EAAC50 CBZ X22, 0x1EAACD4
	0x01EAAC54 MOV X0, X22
	0x01EAAC58 BL 0x1C16F18
	0x01EAAC5C MOV X21, X1
	0x01EAAC60 MOV X20, X0
	0x01EAAC64 B 0x1EAAC3C
	0x01EAAC68 MOV X21, X1
	0x01EAAC6C MOV X20, X0
	0x01EAAC70 CMP W21, 0x1
	0x01EAAC74 B.NE 0x1EAAC9C
	0x01EAAC78 MOV X0, X20
	0x01EAAC7C BL 0x3EB1AD0
	0x01EAAC80 LDR X22, [X0]
	0x01EAAC84 BL 0x3EB1AE0
	0x01EAAC88 ADRP X21, 0x224F000
	0x01EAAC8C ADRP X26, 0x224F000
	0x01EAAC90 LDR X21, [X21 + 0xFD0]
	0x01EAAC94 LDR X26, [X26 + 0xFF8]
	0x01EAAC98 B 0x1EAA958
	0x01EAAC9C MOV X22, X31
	0x01EAACA0 ADRP X8, 0x224F000
	0x01EAACA4 LDR X8, [X8 + 0xFD0]
	0x01EAACA8 LDR X1, [X8]
	0x01EAACAC ADD X0, X31, 0x20
	0x01EAACB0 BL 0x2BC434C
	0x01EAACB4 CBZ X22, 0x1EAACD4
	0x01EAACB8 MOV X0, X22
	0x01EAACBC BL 0x1C16F18
	0x01EAACC0 MOV X21, X1
	0x01EAACC4 MOV X20, X0
	0x01EAACC8 B 0x1EAACA0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2530000
	005 Move W8, [X20+882]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x224D000
	012 Move X0, [X0+3648]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+882], W8
	016 Move X0, [X19+80]
	017 Compare X0, 0
	018 JumpIfEqual {35}
	019 Move X1, X31
	020 Call Simulation.get_IsSinglePlayer, X0
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {35}
	025 Move X8, 0x224D000
	026 Move X8, [X8+3648]
	027 Move X0, [X8]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move W0, 1
	033 Move X1, X31
	034 Call PlayerRef.FromIndex, X0
	035 Move X0, [X19+432]
	036 Compare X0, 0
	037 JumpIfEqual {40}
	038 Move X1, X31
	039 Call CloudServices.get_LocalPlayerRef, X0
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 And X0, X0, 0
	043 Move X30, [X31+32]
	044 Return X0

Method: System.Boolean Fusion.Simulation.ICallbacks.get_IsSharedModeMasterClient()

Disassembly:
	0x01EAACCC MOV X21, X1

ISIL:
	001 Call NetworkRunner.get_IsSharedModeMasterClient, X0
	002 Return X0

Method: System.Void Fusion.Simulation.ICallbacks.ObjectIsSimulatedChanged(Fusion.NetworkId id, System.Boolean simulated)

Disassembly:
	0x01EAACD0 MOV X20, X0
	0x01EAACD4 CMP W21, 0x1
	0x01EAACD8 B.NE 0x1EAACF0
	0x01EAACDC MOV X0, X20
	0x01EAACE0 BL 0x3EB1AD0
	0x01EAACE4 LDR X21, [X0]
	0x01EAACE8 BL 0x3EB1AE0
	0x01EAACEC B 0x1EAAA8C
	0x01EAACF0 MOV X21, X31
	0x01EAACF4 B 0x1EAACFC
	0x01EAACF8 MOV X20, X0
	0x01EAACFC LDR X8, [X19 + 0xE0]
	0x01EAAD00 CBNZ X8, 0x1EAAD08
	0x01EAAD04 BL 0x1C16F20
	0x01EAAD08 LDP W2, W9, [X8 + 0x18]
	0x01EAAD0C ADD W9, W9, 0x1
	0x01EAAD10 CMP W2, 0x1
	0x01EAAD14 STP W31, W9, [X8 + 0x18]
	0x01EAAD18 B.LT 0x1EAAD2C
	0x01EAAD1C LDR X0, [X8 + 0x10]
	0x01EAAD20 MOV W1, W31
	0x01EAAD24 MOV X3, X31
	0x01EAAD28 BL 0x339FA34
	0x01EAAD2C CBNZ X21, 0x1EAAD38
	0x01EAAD30 MOV X0, X20
	0x01EAAD34 BL 0x1D2C690
	0x01EAAD38 MOV X0, X21
	0x01EAAD3C BL 0x1C16F18
	0x01EAAD40 BL 0x1990590
	0x01EAAD44 SUB X31, X31, 0x40
	0x01EAAD48 STP X30, X23, [X31 + 0x10]
	0x01EAAD4C STP X22, X21, [X31 + 0x20]
	0x01EAAD50 STP X20, X19, [X31 + 0x30]
	0x01EAAD54 ADRP X21, 0x252F000
	0x01EAAD58 LDRB W8, [X21 + 0x379]
	0x01EAAD5C MOV X20, X1
	0x01EAAD60 MOV X19, X0
	0x01EAAD64 TBNZ X8, 0x0, 0x1EAADA0
	0x01EAAD68 ADRP X0, 0x2254000
	0x01EAAD6C LDR X0, [X0 + 0xE18]
	0x01EAAD70 BL 0x1C16CF4
	0x01EAAD74 ADRP X0, 0x224E000
	0x01EAAD78 LDR X0, [X0 + 0x5A0]
	0x01EAAD7C BL 0x1C16CF4
	0x01EAAD80 ADRP X0, 0x224C000
	0x01EAAD84 LDR X0, [X0 + 0x398]
	0x01EAAD88 BL 0x1C16CF4
	0x01EAAD8C ADRP X0, 0x2254000
	0x01EAAD90 LDR X0, [X0 + 0xE20]
	0x01EAAD94 BL 0x1C16CF4
	0x01EAAD98 MOVZ W8, 0x1
	0x01EAAD9C STRB W8, [X21 + 0x379]
	0x01EAADA0 STR X31, [X31 + 0x8]
	0x01EAADA4 CBZ X20, 0x1EAAFA4
	0x01EAADA8 LDR X8, [X20 + 0xB0]
	0x01EAADAC CBZ X8, 0x1EAAFA4
	0x01EAADB0 LDR X0, [X19 + 0x50]
	0x01EAADB4 CBZ X0, 0x1EAAFA4
	0x01EAADB8 LDR W1, [X8]
	0x01EAADBC ADD X2, X31, 0x8
	0x01EAADC0 MOV X3, X31
	0x01EAADC4 BL 0x1EC96E8
	0x01EAADC8 TBNZ X0, 0x0, 0x1EAAE60
	0x01EAADCC LDR X8, [X20 + 0xB0]
	0x01EAADD0 CBZ X8, 0x1EAAFA4
	0x01EAADD4 LDRB W8, [X8 + 0x18]
	0x01EAADD8 TBNZ X8, 0x5, 0x1EAAE60
	0x01EAADDC ADD X2, X31, 0x8
	0x01EAADE0 MOV X0, X19
	0x01EAADE4 MOV X1, X20
	0x01EAADE8 BL 0x1EA634C
	0x01EAADEC TBZ X0, 0x0, 0x1EAAF9C
	0x01EAADF0 LDR X8, [X31 + 0x8]
	0x01EAADF4 CBZ X8, 0x1EAAE54
	0x01EAADF8 MOV X0, X20
	0x01EAADFC MOV X1, X31
	0x01EAAE00 BL 0x1E97358
	0x01EAAE04 MOV X21, X0
	0x01EAAE08 MOV X0, X20
	0x01EAAE0C MOV X1, X31
	0x01EAAE10 BL 0x1E97370
	0x01EAAE14 ADRP X8, 0x2254000
	0x01EAAE18 ADRP X9, 0x2254000
	0x01EAAE1C LDR X8, [X8 + 0xE20]
	0x01EAAE20 LDR X9, [X9 + 0xE18]
	0x01EAAE24 AND X3, X0, 0x0
	0x01EAAE28 MOVZ W0, 0x1
	0x01EAAE2C LDR X1, [X8]
	0x01EAAE30 LDR X4, [X9]
	0x01EAAE34 MOV X2, X21
	0x01EAAE38 BL 0x2181F24
	0x01EAAE3C LDR X8, [X31 + 0x8]
	0x01EAAE40 CBZ X8, 0x1EAAFA4
	0x01EAAE44 LDR X8, [X8 + 0x20]
	0x01EAAE48 CBZ X8, 0x1EAAE78
	0x01EAAE4C LDR W22, [X8]
	0x01EAAE50 B 0x1EAAE7C
	0x01EAAE54 LDR W8, [X20 + 0xA4]
	0x01EAAE58 ORR W8, W8, 0x1
	0x01EAAE5C STR W8, [X20 + 0xA4]
	0x01EAAE60 MOVZ W0, 0x1
	0x01EAAE64 LDP X20, X19, [X31 + 0x30]
	0x01EAAE68 LDP X22, X21, [X31 + 0x20]
	0x01EAAE6C LDP X30, X23, [X31 + 0x10]
	0x01EAAE70 ADD X31, X31, 0x40
	0x01EAAE74 RET
	0x01EAAE78 MOV W22, W31
	0x01EAAE7C ADRP X21, 0x224C000
	0x01EAAE80 LDR X21, [X21 + 0x398]
	0x01EAAE84 LDR X0, [X21]
	0x01EAAE88 LDR W8, [X0 + 0xE0]
	0x01EAAE8C CBNZ W8, 0x1EAAE94
	0x01EAAE90 BL 0x1C16DFC
	0x01EAAE94 CBZ W22, 0x1EAAED8
	0x01EAAE98 LDR X8, [X31 + 0x8]
	0x01EAAE9C CBZ X8, 0x1EAAFA4
	0x01EAAEA0 LDR X8, [X8 + 0x20]
	0x01EAAEA4 CBZ X8, 0x1EAAEB0
	0x01EAAEA8 LDR W22, [X8]
	0x01EAAEAC B 0x1EAAEB4
	0x01EAAEB0 MOV W22, W31
	0x01EAAEB4 LDR X8, [X20 + 0xB0]
	0x01EAAEB8 CBZ X8, 0x1EAAFA4
	0x01EAAEBC LDR X0, [X21]
	0x01EAAEC0 LDR W23, [X8]
	0x01EAAEC4 LDR W9, [X0 + 0xE0]
	0x01EAAEC8 CBNZ W9, 0x1EAAED0
	0x01EAAECC BL 0x1C16DFC
	0x01EAAED0 CMP W22, W23
	0x01EAAED4 B.NE 0x1EAAF9C
	0x01EAAED8 LDR X8, [X20 + 0xB0]
	0x01EAAEDC CBZ X8, 0x1EAAFA4
	0x01EAAEE0 LDR X0, [X21]
	0x01EAAEE4 LDR W21, [X8 + 0x10]
	0x01EAAEE8 LDR W9, [X0 + 0xE0]
	0x01EAAEEC CBNZ W9, 0x1EAAEF4
	0x01EAAEF0 BL 0x1C16DFC
	0x01EAAEF4 LDR X2, [X31 + 0x8]
	0x01EAAEF8 CBZ W21, 0x1EAAF0C
	0x01EAAEFC CBZ X2, 0x1EAAFA4
	0x01EAAF00 LDR W8, [X2 + 0x60]
	0x01EAAF04 ORR W8, W8, 0x4
	0x01EAAF08 STR W8, [X2 + 0x60]
	0x01EAAF0C MOV X0, X19
	0x01EAAF10 MOV X1, X20
	0x01EAAF14 MOV X3, X31
	0x01EAAF18 MOV W4, W31
	0x01EAAF1C MOV X5, X31
	0x01EAAF20 BL 0x1EA44B8
	0x01EAAF24 LDR X0, [X19 + 0xE0]
	0x01EAAF28 CBZ X0, 0x1EAAFA4
	0x01EAAF2C ADRP X9, 0x224E000
	0x01EAAF30 LDR X1, [X31 + 0x8]
	0x01EAAF34 LDR X9, [X9 + 0x5A0]
	0x01EAAF38 LDR W10, [X0 + 0x1C]
	0x01EAAF3C LDR X8, [X0 + 0x10]
	0x01EAAF40 LDR X9, [X9]
	0x01EAAF44 ADD W10, W10, 0x1
	0x01EAAF48 STR W10, [X0 + 0x1C]
	0x01EAAF4C CBZ X8, 0x1EAAFA4
	0x01EAAF50 LDRSW X10, [X0 + 0x18]
	0x01EAAF54 LDR W11, [X8 + 0x18]
	0x01EAAF58 CMP W10, W11
	0x01EAAF5C B.CS 0x1EAAF74
	0x01EAAF60 ADD W9, W10, 0x1
	0x01EAAF64 ADD X8, X8, X10, 0x3, LSL
	0x01EAAF68 STR W9, [X0 + 0x18]
	0x01EAAF6C STR X1, [X8 + 0x20]
	0x01EAAF70 B 0x1EAAF84
	0x01EAAF74 LDR X8, [X9 + 0x20]
	0x01EAAF78 LDR X8, [X8 + 0xC0]
	0x01EAAF7C LDR X2, [X8 + 0x70]
	0x01EAAF80 BL 0x301BF90
	0x01EAAF84 LDR X8, [X31 + 0x8]
	0x01EAAF88 CBZ X8, 0x1EAAF9C
	0x01EAAF8C LDRB W8, [X8 + 0x60]
	0x01EAAF90 ANDS W31, W8, 0x2
	0x01EAAF94 CSET W0, EQ
	0x01EAAF98 B 0x1EAAE64
	0x01EAAF9C MOV W0, W31
	0x01EAAFA0 B 0x1EAAE64
	0x01EAAFA4 BL 0x1C16F20
	0x01EAAFA8 STR X30, [X31 - 0x20]!
	0x01EAAFAC STP X20, X19, [X31 + 0x10]
	0x01EAAFB0 STR X31, [X31 + 0x8]
	0x01EAAFB4 MOV X19, X0
	0x01EAAFB8 LDR X0, [X0 + 0x50]
	0x01EAAFBC CBZ X0, 0x1EAB018
	0x01EAAFC0 MOV W20, W2
	0x01EAAFC4 AND X1, X1, 0x0
	0x01EAAFC8 ADD X2, X31, 0x8
	0x01EAAFCC MOV X3, X31
	0x01EAAFD0 BL 0x1EC96E8
	0x01EAAFD4 TBZ X0, 0x0, 0x1EAAFF0
	0x01EAAFD8 LDR X1, [X31 + 0x8]
	0x01EAAFDC TBZ X20, 0x0, 0x1EAAFF8
	0x01EAAFE0 MOVZ W2, 0x4
	0x01EAAFE4 MOV X0, X19
	0x01EAAFE8 BL 0x1EA399C
	0x01EAAFEC B 0x1EAB008
	0x01EAAFF0 MOV W0, W31
	0x01EAAFF4 B 0x1EAB00C
	0x01EAAFF8 MOV X0, X19
	0x01EAAFFC MOV W2, W31
	0x01EAB000 MOV W3, W31
	0x01EAB004 BL 0x1E9FF74
	0x01EAB008 MOVZ W0, 0x1
	0x01EAB00C LDP X20, X19, [X31 + 0x10]
	0x01EAB010 LDR X30, [X31], #0x20
	0x01EAB014 RET
	0x01EAB018 BL 0x1C16F20
	0x01EAB01C SUB X31, X31, 0xA0
	0x01EAB020 STP X29, X30, [X31 + 0x40]
	0x01EAB024 STP X28, X27, [X31 + 0x50]
	0x01EAB028 STP X26, X25, [X31 + 0x60]
	0x01EAB02C STP X24, X23, [X31 + 0x70]
	0x01EAB030 STP X22, X21, [X31 + 0x80]
	0x01EAB034 STP X20, X19, [X31 + 0x90]
	0x01EAB038 ADRP X19, 0x252E000
	0x01EAB03C LDRB W9, [X19 + 0x388]
	0x01EAB040 MOV X22, X1
	0x01EAB044 MOV X20, X0
	0x01EAB048 MOV X23, X8
	0x01EAB04C TBNZ X9, 0x0, 0x1EAB0AC
	0x01EAB050 ADRP X0, 0x224B000
	0x01EAB054 LDR X0, [X0 + 0x398]
	0x01EAB058 BL 0x1C16CF4
	0x01EAB05C ADRP X0, 0x2251000
	0x01EAB060 LDR X0, [X0 + 0xE80]
	0x01EAB064 BL 0x1C16CF4
	0x01EAB068 ADRP X0, 0x2253000
	0x01EAB06C LDR X0, [X0 + 0x6E8]
	0x01EAB070 BL 0x1C16CF4
	0x01EAB074 ADRP X0, 0x2253000
	0x01EAB078 LDR X0, [X0 + 0xE28]
	0x01EAB07C BL 0x1C16CF4
	0x01EAB080 ADRP X0, 0x2248000
	0x01EAB084 LDR X0, [X0 + 0x598]
	0x01EAB088 BL 0x1C16CF4
	0x01EAB08C ADRP X0, 0x224C000
	0x01EAB090 LDR X0, [X0 + 0x140]
	0x01EAB094 BL 0x1C16CF4
	0x01EAB098 ADRP X0, 0x224B000
	0x01EAB09C LDR X0, [X0 + 0xE40]
	0x01EAB0A0 BL 0x1C16CF4
	0x01EAB0A4 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x2530000
	011 Move W8, [X22+883]
	012 Move W20, W2
	013 Move X21, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x2254000
	020 Move X0, [X0+2624]
	021 Call 0x1C17CF4
	022 Move X0, 0x2255000
	023 Move X0, [X0+3544]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+883], W8
	027 Move [X31+8], X31
	028 Move X0, [X19+80]
	029 Compare X0, 0
	030 JumpIfEqual {232}
	031 And X1, X21, 0
	032 Add X2, X31, 8
	033 Move X3, X31
	034 Call Simulation.TryGetInstance, X0, X1, X2
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {222}
	039 Move X0, [X31+8]
	040 Compare X0, 0
	041 JumpIfEqual {232}
	042 Move X1, X31
	043 Call NetworkObject.get_IsInSimulation, X0
	044 And W8, W0, 1
	045 And W9, W20, 1
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X8, [X31+8]
	048 Compare X8, 0
	049 JumpIfEqual {232}
	050 Move W9, [X8+96]
	051 Move X24, X31
	052 Move TEMP, X20
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {139}
	056 Or W9, W9, 0x10000
	057 Move X25, 0x2254000
	058 Move X20, 0x224A000
	059 Move X21, 0x2252000
	060 Move X25, [X25+2624]
	061 Move X20, [X20+2000]
	062 Move X21, [X21+2224]
	063 Move [X8+96], W9
	064 Move X22, 0x2255000
	065 Move X22, [X22+2152]
	066 Move X8, [X8+120]
	067 Compare X8, 0
	068 JumpIfEqual {232}
	069 Move W9, [X8+24]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Add X8, X8, X24
	073 Move X0, [X8+32]
	074 Compare X0, 0
	075 JumpIfEqual {110}
	076 Move W8, [X0+48]
	077 Or W8, W8, 2
	078 Move [X0+48], W8
	079 Move X1, [X25]
	080 Call 0x1C17E00
	081 Move X23, X0
	082 Compare X0, 0
	083 JumpIfEqual {105}
	084 Move X8, [X23]
	085 Move X1, [X25]
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Compare X9, 0
	088 JumpIfEqual {95}
	089 Move X10, [X8+176]
	090 Add X10, X10, 8
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Subtract X9, X9, 1
	094 Add X10, X10, 16
	095 Move X0, X23
	096 Move W2, W31
	097 Call 0x1C5D788
	098 NotImplemented "Instruction LDRSW not yet implemented."
	099 Add X8, X8, X9
	100 Add X0, X8, 312
	101 Move X8, [X0]
	102 Move X1, [X0+8]
	103 Move X0, X23
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Move X8, [X31+8]
	106 Add X24, X24, 1
	107 Compare X8, 0
	108 JumpIfNotEqual {66}
	109 Call 0x1C17F28
	110 Call 0x1C17F20
	111 Move X23, X0
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X0, X23
	114 Call 0x3EB2AD0
	115 Move X23, X0
	116 Move X0, X20
	117 Call 0x1C17D08
	118 Move X8, [X23]
	119 Move X1, [X8]
	120 Call 0x1C18270
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {241}
	125 Move X23, [X23]
	126 Call 0x3EB2AE0
	127 Move X0, X21
	128 Call 0x1C17D08
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move X0, X22
	134 Call 0x1C17D08
	135 Move X2, X0
	136 Move X0, X19
	137 Move X1, X23
	138 Call 0x2214878, X0, X1
	139 And W9, W9, 0xFFFEFFFF
	140 Move X25, 0x2255000
	141 Move X20, 0x224A000
	142 Move X21, 0x2252000
	143 Move X25, [X25+3544]
	144 Move X20, [X20+2000]
	145 Move X21, [X21+2224]
	146 Move [X8+96], W9
	147 Move X22, 0x2255000
	148 Move X22, [X22+2152]
	149 Move X8, [X8+120]
	150 Compare X8, 0
	151 JumpIfEqual {232}
	152 Move W9, [X8+24]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Add X8, X8, X24
	156 Move X0, [X8+32]
	157 Compare X0, 0
	158 JumpIfEqual {193}
	159 Move W8, [X0+48]
	160 And W8, W8, 0xFFFFFFFD
	161 Move [X0+48], W8
	162 Move X1, [X25]
	163 Call 0x1C17E00
	164 Move X23, X0
	165 Compare X0, 0
	166 JumpIfEqual {188}
	167 Move X8, [X23]
	168 Move X1, [X25]
	169 NotImplemented "Instruction LDRH not yet implemented."
	170 Compare X9, 0
	171 JumpIfEqual {178}
	172 Move X10, [X8+176]
	173 Add X10, X10, 8
	174 NotImplemented "Instruction LDUR not yet implemented."
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Subtract X9, X9, 1
	177 Add X10, X10, 16
	178 Move X0, X23
	179 Move W2, W31
	180 Call 0x1C5D788
	181 NotImplemented "Instruction LDRSW not yet implemented."
	182 Add X8, X8, X9
	183 Add X0, X8, 312
	184 Move X8, [X0]
	185 Move X1, [X0+8]
	186 Move X0, X23
	187 NotImplemented "Instruction BLR not yet implemented."
	188 Move X8, [X31+8]
	189 Add X24, X24, 1
	190 Compare X8, 0
	191 JumpIfNotEqual {149}
	192 Call 0x1C17F28
	193 Call 0x1C17F20
	194 Move X23, X0
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move X0, X23
	197 Call 0x3EB2AD0
	198 Move X23, X0
	199 Move X0, X20
	200 Call 0x1C17D08
	201 Move X8, [X23]
	202 Move X1, [X8]
	203 Call 0x1C18270
	204 Move TEMP, X0
	205 And TEMP, TEMP, 1
	206 Compare TEMP, 1
	207 JumpIfNotEqual {233}
	208 Move X23, [X23]
	209 Call 0x3EB2AE0
	210 Move X0, X21
	211 Call 0x1C17D08
	212 Move W8, [X0+224]
	213 Compare W8, 0
	214 JumpIfNotEqual {216}
	215 Call 0x1C17DFC
	216 Move X0, X22
	217 Call 0x1C17D08
	218 Move X2, X0
	219 Move X0, X19
	220 Move X1, X23
	221 Call 0x2214878, X0, X1
	222 Move X20, [X31+64]
	223 Move X19, [X31+72]
	224 Move X22, [X31+48]
	225 Move X21, [X31+56]
	226 Move X24, [X31+32]
	227 Move X23, [X31+40]
	228 Move X30, [X31+16]
	229 Move X25, [X31+24]
	230 Add X31, X31, 80
	231 Return 
	232 Call 0x1C17F20
	233 Move W0, 8
	234 Call 0x3EB2AF0
	235 Move X8, [X23]
	236 Move [X0], X8
	237 Move X1, 0x200A000
	238 Add X1, X1, 3672
	239 Move X2, X31
	240 Call 0x3EB2B00
	241 Move W0, 8
	242 Call 0x3EB2AF0
	243 Move X8, [X23]
	244 Move [X0], X8
	245 Move X1, 0x200A000
	246 Add X1, X1, 3672
	247 Move X2, X31
	248 Call 0x3EB2B00
	249 Move X23, X0
	250 Call 0x3EB2AE0
	251 Move X23, X0
	252 Call 0x3EB2AE0
	253 Move X0, X23
	254 Call 0x1D2D690
	255 Call 0x1991590

Method: System.Void Fusion.Simulation.ICallbacks.ObjectInputAuthorityChanged(Fusion.NetworkId id, System.Boolean gained)

Disassembly:
	0x01EAB0A8 STRB W8, [X19 + 0x388]
	0x01EAB0AC STP X31, X20, [X31 + 0x28]
	0x01EAB0B0 LDR X8, [X22 + 0x40]
	0x01EAB0B4 STR X8, [X31 + 0x38]
	0x01EAB0B8 LDR X0, [X20 + 0x50]
	0x01EAB0BC CBZ X0, 0x1EAB14C
	0x01EAB0C0 MOV X1, X31
	0x01EAB0C4 BL 0x1EC0864
	0x01EAB0C8 LDR X8, [X20 + 0x50]
	0x01EAB0CC TBZ X0, 0x0, 0x1EAB0F8
	0x01EAB0D0 CBZ X8, 0x1EAB14C
	0x01EAB0D4 LDR X9, [X8 + 0x58]
	0x01EAB0D8 CBZ X9, 0x1EAB81C
	0x01EAB0DC LDR W9, [X9 + 0x38]
	0x01EAB0E0 CMP W9, 0x1
	0x01EAB0E4 B.NE 0x1EAB0FC
	0x01EAB0E8 ADD X8, X31, 0x10
	0x01EAB0EC ADD X2, X31, 0x30
	0x01EAB0F0 MOVZ W1, 0x4
	0x01EAB0F4 B 0x1EAB208
	0x01EAB0F8 CBZ X8, 0x1EAB14C
	0x01EAB0FC LDR X9, [X8 + 0x58]
	0x01EAB100 CBZ X9, 0x1EAB81C
	0x01EAB104 LDR W9, [X9 + 0x38]
	0x01EAB108 CMP W9, 0x2
	0x01EAB10C B.NE 0x1EAB14C
	0x01EAB110 LDR X9, [X8]
	0x01EAB114 MOV X0, X8
	0x01EAB118 LDR X10, [X9 + 0x268]
	0x01EAB11C LDR X1, [X9 + 0x270]
	0x01EAB120 BLR X10
	0x01EAB124 ADRP X8, 0x224B000
	0x01EAB128 LDR X8, [X8 + 0xE40]
	0x01EAB12C MOV X21, X0
	0x01EAB130 LDR X8, [X8]
	0x01EAB134 LDR W9, [X8 + 0xE0]
	0x01EAB138 CBNZ W9, 0x1EAB144
	0x01EAB13C MOV X0, X8
	0x01EAB140 BL 0x1C16DFC
	0x01EAB144 CMP W21, 0x0
	0x01EAB148 B.LE 0x1EAB4F0
	0x01EAB14C LDR W8, [X22 + 0x48]
	0x01EAB150 LDR X1, [X22]
	0x01EAB154 ADD X3, X31, 0x28
	0x01EAB158 MOV X0, X20
	0x01EAB15C UBFM W4, W8, 0x10, 0x10
	0x01EAB160 AND W5, W8, 0x1
	0x01EAB164 MOV X2, X31
	0x01EAB168 BL 0x1E9D588
	0x01EAB16C CBZ W0, 0x1EAB1A0
	0x01EAB170 CMP W0, 0x2
	0x01EAB174 B.NE 0x1EAB1FC
	0x01EAB178 LDRB W8, [X22 + 0x4A]
	0x01EAB17C TBZ X8, 0x0, 0x1EAB4F8
	0x01EAB180 LDR X8, [X20 + 0x98]
	0x01EAB184 CBZ X8, 0x1EAB81C
	0x01EAB188 LDRB W8, [X8 + 0x30]
	0x01EAB18C CBNZ W8, 0x1EAB4F8
	0x01EAB190 ADD X8, X31, 0x10
	0x01EAB194 ADD X2, X31, 0x30
	0x01EAB198 MOVZ W1, 0x2
	0x01EAB19C B 0x1EAB208
	0x01EAB1A0 ADRP X8, 0x2251000
	0x01EAB1A4 LDR X8, [X8 + 0xE80]
	0x01EAB1A8 LDR X26, [X31 + 0x28]
	0x01EAB1AC LDR X0, [X8]
	0x01EAB1B0 LDR W8, [X0 + 0xE0]
	0x01EAB1B4 CBNZ W8, 0x1EAB1BC
	0x01EAB1B8 BL 0x1C16DFC
	0x01EAB1BC MOV X0, X26
	0x01EAB1C0 MOV X1, X22
	0x01EAB1C4 BL 0x1EAE354
	0x01EAB1C8 MOV X0, X20
	0x01EAB1CC BL 0x1E9D0AC
	0x01EAB1D0 CBZ X26, 0x1EAB81C
	0x01EAB1D4 AND W8, W0, 0x1
	0x01EAB1D8 MOV X0, X20
	0x01EAB1DC STRB W8, [X26 + 0x28]
	0x01EAB1E0 BL 0x1E9D0AC
	0x01EAB1E4 STR X23, [X31]
	0x01EAB1E8 TBZ X0, 0x0, 0x1EAB214
	0x01EAB1EC LDR X1, [X22 + 0x50]
	0x01EAB1F0 MOV X0, X20
	0x01EAB1F4 BL 0x1EAE4C8
	0x01EAB1F8 B 0x1EAB224
	0x01EAB1FC ADD X8, X31, 0x10
	0x01EAB200 ADD X2, X31, 0x30
	0x01EAB204 MOVZ W1, 0x3
	0x01EAB208 MOV X0, X20
	0x01EAB20C BL 0x1EAE0D0
	0x01EAB210 B 0x1EAB508
	0x01EAB214 LDR X0, [X20 + 0x50]
	0x01EAB218 CBZ X0, 0x1EAB81C
	0x01EAB21C MOV X1, X31
	0x01EAB220 BL 0x1EC4400
	0x01EAB224 LDR X25, [X20 + 0x50]
	0x01EAB228 LDR X24, [X22]
	0x01EAB22C MOV X23, X0
	0x01EAB230 MOV X0, X26
	0x01EAB234 MOV X1, X31
	0x01EAB238 BL 0x1E93EF4
	0x01EAB23C CBZ X25, 0x1EAB81C
	0x01EAB240 MOV W3, W0
	0x01EAB244 AND X1, X23, 0x0
	0x01EAB248 MOV X0, X25
	0x01EAB24C MOV X2, X24
	0x01EAB250 MOV W4, W31
	0x01EAB254 MOV X5, X31
	0x01EAB258 MOV X6, X31
	0x01EAB25C MOV X7, X31
	0x01EAB260 BL 0x1EC98AC
	0x01EAB264 LDUR X24, [X22 + 0x2C]
	0x01EAB268 MOV X23, X0
	0x01EAB26C MOV X0, X22
	0x01EAB270 BL 0x1EAE5AC
	0x01EAB274 AND X5, X0, 0xFFFF
	0x01EAB278 MOVZ W4, 0x1
	0x01EAB27C MOV X0, X20
	0x01EAB280 MOV X1, X23
	0x01EAB284 MOV X2, X26
	0x01EAB288 MOV X3, X24
	0x01EAB28C BL 0x1EA44B8
	0x01EAB290 LDR W9, [X26 + 0x60]
	0x01EAB294 LDR X8, [X26 + 0x70]
	0x01EAB298 ORR W9, W9, 0x1000000
	0x01EAB29C STR W9, [X26 + 0x60]
	0x01EAB2A0 CBZ X8, 0x1EAB81C
	0x01EAB2A4 ADRP X29, 0x2253000
	0x01EAB2A8 LDR X29, [X29 + 0xE28]
	0x01EAB2AC MOVZ W19, 0x4
	0x01EAB2B0 MOV X21, X26
	0x01EAB2B4 LDR W9, [X8 + 0x18]
	0x01EAB2B8 SUB X27, X19, 0x4
	0x01EAB2BC CMP X27, W9, SXTW
	0x01EAB2C0 B.GE 0x1EAB420
	0x01EAB2C4 CMP X27, X9
	0x01EAB2C8 B.CS 0x1EAB820
	0x01EAB2CC LDR X25, [X8, X19, LSL #3]
	0x01EAB2D0 CBZ X25, 0x1EAB81C
	0x01EAB2D4 LDR W8, [X25 + 0x60]
	0x01EAB2D8 MOVZ W9, 0x4
	0x01EAB2DC MOVK W9, 0x1000000
	0x01EAB2E0 MOV X0, X20
	0x01EAB2E4 ORR W8, W8, W9, 0x0
	0x01EAB2E8 STR W8, [X25 + 0x60]
	0x01EAB2EC BL 0x1E9D0AC
	0x01EAB2F0 TBZ X0, 0x0, 0x1EAB354
	0x01EAB2F4 ADRP X8, 0x2248000
	0x01EAB2F8 LDR X8, [X8 + 0x598]
	0x01EAB2FC LDR X26, [X22 + 0x50]
	0x01EAB300 LDR X0, [X8]
	0x01EAB304 LDR W8, [X0 + 0xE0]
	0x01EAB308 CBNZ W8, 0x1EAB310
	0x01EAB30C BL 0x1C16DFC
	0x01EAB310 MOV X0, X26
	0x01EAB314 MOV X1, X31
	0x01EAB318 MOV X2, X31
	0x01EAB31C BL 0x3C354F8
	0x01EAB320 MOV X1, X31
	0x01EAB324 TBZ X0, 0x0, 0x1EAB348
	0x01EAB328 LDR X8, [X22 + 0x50]
	0x01EAB32C CBZ X8, 0x1EAB81C
	0x01EAB330 LDR X8, [X8 + 0x70]
	0x01EAB334 CBZ X8, 0x1EAB81C
	0x01EAB338 LDR W9, [X8 + 0x18]
	0x01EAB33C CMP X27, X9
	0x01EAB340 B.CS 0x1EAB820
	0x01EAB344 LDR X1, [X8, X19, LSL #3]
	0x01EAB348 MOV X0, X20
	0x01EAB34C BL 0x1EAE4C8
	0x01EAB350 B 0x1EAB364
	0x01EAB354 LDR X0, [X20 + 0x50]
	0x01EAB358 CBZ X0, 0x1EAB81C
	0x01EAB35C MOV X1, X31
	0x01EAB360 BL 0x1EC4400
	0x01EAB364 LDR X27, [X20 + 0x50]
	0x01EAB368 MOV X26, X0
	0x01EAB36C MOV X0, X25
	0x01EAB370 MOV X1, X31
	0x01EAB374 BL 0x1E93EF4
	0x01EAB378 CBZ X23, 0x1EAB81C
	0x01EAB37C LDR X8, [X23 + 0xB0]
	0x01EAB380 CBZ X8, 0x1EAB81C
	0x01EAB384 LDR W1, [X8]
	0x01EAB388 ADRP X8, 0x2253000
	0x01EAB38C LDR X8, [X8 + 0x6E8]
	0x01EAB390 MOV W28, W0
	0x01EAB394 ADD X0, X31, 0x10
	0x01EAB398 STR X31, [X31 + 0x10]
	0x01EAB39C LDR X2, [X8]
	0x01EAB3A0 BL 0x2435D9C
	0x01EAB3A4 LDR X2, [X29]
	0x01EAB3A8 SUB X1, X19, 0x3
	0x01EAB3AC ADD X0, X31, 0x8
	0x01EAB3B0 STR X31, [X31 + 0x8]
	0x01EAB3B4 BL 0x243667C
	0x01EAB3B8 CBZ X27, 0x1EAB81C
	0x01EAB3BC LDP X6, X5, [X31 + 0x8]
	0x01EAB3C0 AND X1, X26, 0x0
	0x01EAB3C4 MOV X0, X27
	0x01EAB3C8 MOV X2, X31
	0x01EAB3CC MOV W3, W28
	0x01EAB3D0 MOV W4, W31
	0x01EAB3D4 MOV X7, X31
	0x01EAB3D8 BL 0x1EC98AC
	0x01EAB3DC LDUR X26, [X22 + 0x2C]
	0x01EAB3E0 MOV X27, X0
	0x01EAB3E4 MOV X0, X22
	0x01EAB3E8 BL 0x1EAE5AC
	0x01EAB3EC BFM X24, X0, 0x0, 0xF
	0x01EAB3F0 MOVZ W4, 0x1
	0x01EAB3F4 MOV X0, X20
	0x01EAB3F8 MOV X1, X27
	0x01EAB3FC MOV X2, X25
	0x01EAB400 MOV X3, X26
	0x01EAB404 MOV X5, X24
	0x01EAB408 BL 0x1EA44B8
	0x01EAB40C LDR X8, [X21 + 0x70]
	0x01EAB410 MOV X26, X21

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x252F000
	011 Move W8, [X22+884]
	012 Move W20, W2
	013 Move X21, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x2254000
	020 Move X0, [X0+3552]
	021 Call 0x1C17CF4
	022 Move X0, 0x2254000
	023 Move X0, [X0+3560]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+884], W8
	027 Move [X31+8], X31
	028 Move X0, [X19+80]
	029 Compare X0, 0
	030 JumpIfEqual {210}
	031 And X1, X21, 0
	032 Add X2, X31, 8
	033 Move X3, X31
	034 Call Simulation.TryGetInstance, X0, X1, X2
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {200}
	039 Move X8, [X31+8]
	040 Move TEMP, X20
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {122}
	044 Compare X8, 0
	045 JumpIfEqual {210}
	046 Move X25, 0x2254000
	047 Move X20, 0x2249000
	048 Move X21, 0x2251000
	049 Move X22, 0x2254000
	050 Move X25, [X25+3552]
	051 Move X20, [X20+2000]
	052 Move X21, [X21+2224]
	053 Move X22, [X22+2152]
	054 Move X24, X31
	055 Move X8, [X8+120]
	056 Compare X8, 0
	057 JumpIfEqual {210}
	058 Move W9, [X8+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add X8, X8, X24
	062 Move X0, [X8+32]
	063 Move X1, [X25]
	064 Call 0x1C17E00
	065 Move X23, X0
	066 Compare X0, 0
	067 JumpIfEqual {89}
	068 Move X8, [X23]
	069 Move X1, [X25]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Compare X9, 0
	072 JumpIfEqual {79}
	073 Move X10, [X8+176]
	074 Add X10, X10, 8
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Subtract X9, X9, 1
	078 Add X10, X10, 16
	079 Move X0, X23
	080 Move W2, W31
	081 Call 0x1C5D788
	082 NotImplemented "Instruction LDRSW not yet implemented."
	083 Add X8, X8, X9
	084 Add X0, X8, 312
	085 Move X8, [X0]
	086 Move X1, [X0+8]
	087 Move X0, X23
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move X8, [X31+8]
	090 Add X24, X24, 1
	091 Compare X8, 0
	092 JumpIfNotEqual {55}
	093 Call 0x1C17F28
	094 Move X23, X0
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X0, X23
	097 Call 0x3EB2AD0
	098 Move X23, X0
	099 Move X0, X20
	100 Call 0x1C17D08
	101 Move X8, [X23]
	102 Move X1, [X8]
	103 Call 0x1C18270
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {219}
	108 Move X23, [X23]
	109 Call 0x3EB2AE0
	110 Move X0, X21
	111 Call 0x1C17D08
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1C17DFC
	116 Move X0, X22
	117 Call 0x1C17D08
	118 Move X2, X0
	119 Move X0, X19
	120 Move X1, X23
	121 Call 0x2214878, X0, X1
	122 Compare X8, 0
	123 JumpIfEqual {210}
	124 Move X25, 0x2254000
	125 Move X20, 0x2249000
	126 Move X21, 0x2251000
	127 Move X22, 0x2254000
	128 Move X25, [X25+3560]
	129 Move X20, [X20+2000]
	130 Move X21, [X21+2224]
	131 Move X22, [X22+2152]
	132 Move X24, X31
	133 Move X8, [X8+120]
	134 Compare X8, 0
	135 JumpIfEqual {210}
	136 Move W9, [X8+24]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Add X8, X8, X24
	140 Move X0, [X8+32]
	141 Move X1, [X25]
	142 Call 0x1C17E00
	143 Move X23, X0
	144 Compare X0, 0
	145 JumpIfEqual {167}
	146 Move X8, [X23]
	147 Move X1, [X25]
	148 NotImplemented "Instruction LDRH not yet implemented."
	149 Compare X9, 0
	150 JumpIfEqual {157}
	151 Move X10, [X8+176]
	152 Add X10, X10, 8
	153 NotImplemented "Instruction LDUR not yet implemented."
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Subtract X9, X9, 1
	156 Add X10, X10, 16
	157 Move X0, X23
	158 Move W2, W31
	159 Call 0x1C5D788
	160 NotImplemented "Instruction LDRSW not yet implemented."
	161 Add X8, X8, X9
	162 Add X0, X8, 312
	163 Move X8, [X0]
	164 Move X1, [X0+8]
	165 Move X0, X23
	166 NotImplemented "Instruction BLR not yet implemented."
	167 Move X8, [X31+8]
	168 Add X24, X24, 1
	169 Compare X8, 0
	170 JumpIfNotEqual {133}
	171 Call 0x1C17F28
	172 Move X23, X0
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X0, X23
	175 Call 0x3EB2AD0
	176 Move X23, X0
	177 Move X0, X20
	178 Call 0x1C17D08
	179 Move X8, [X23]
	180 Move X1, [X8]
	181 Call 0x1C18270
	182 Move TEMP, X0
	183 And TEMP, TEMP, 1
	184 Compare TEMP, 1
	185 JumpIfNotEqual {211}
	186 Move X23, [X23]
	187 Call 0x3EB2AE0
	188 Move X0, X21
	189 Call 0x1C17D08
	190 Move W8, [X0+224]
	191 Compare W8, 0
	192 JumpIfNotEqual {194}
	193 Call 0x1C17DFC
	194 Move X0, X22
	195 Call 0x1C17D08
	196 Move X2, X0
	197 Move X0, X19
	198 Move X1, X23
	199 Call 0x2214878, X0, X1
	200 Move X20, [X31+64]
	201 Move X19, [X31+72]
	202 Move X22, [X31+48]
	203 Move X21, [X31+56]
	204 Move X24, [X31+32]
	205 Move X23, [X31+40]
	206 Move X30, [X31+16]
	207 Move X25, [X31+24]
	208 Add X31, X31, 80
	209 Return 
	210 Call 0x1C17F20
	211 Move W0, 8
	212 Call 0x3EB2AF0
	213 Move X8, [X23]
	214 Move [X0], X8
	215 Move X1, 0x200A000
	216 Add X1, X1, 3672
	217 Move X2, X31
	218 Call 0x3EB2B00
	219 Move W0, 8
	220 Call 0x3EB2AF0
	221 Move X8, [X23]
	222 Move [X0], X8
	223 Move X1, 0x200A000
	224 Add X1, X1, 3672
	225 Move X2, X31
	226 Call 0x3EB2B00
	227 Move X23, X0
	228 Call 0x3EB2AE0
	229 Move X23, X0
	230 Call 0x3EB2AE0
	231 Move X0, X23
	232 Call 0x1D2D690
	233 Call 0x1991590

Method: System.Void Fusion.Simulation.ICallbacks.ObjectStateAuthorityChanged(Fusion.NetworkId id, System.Boolean gained)

Disassembly:
	0x01EAB414 ADD X19, X19, 0x1
	0x01EAB418 CBNZ X8, 0x1EAB2B4
	0x01EAB41C B 0x1EAB81C
	0x01EAB420 ADRP X25, 0x2251000
	0x01EAB424 LDR X25, [X25 + 0xE80]
	0x01EAB428 LDR X0, [X25]
	0x01EAB42C LDR W8, [X0 + 0xE0]
	0x01EAB430 CBNZ W8, 0x1EAB438
	0x01EAB434 BL 0x1C16DFC
	0x01EAB438 LDR W0, [X26 + 0x60]
	0x01EAB43C MOVZ W1, 0x1
	0x01EAB440 MOV X2, X31
	0x01EAB444 BL 0x1E93D90
	0x01EAB448 TBZ X0, 0x0, 0x1EAB684
	0x01EAB44C MOVZ W2, 0x1
	0x01EAB450 MOV X0, X20
	0x01EAB454 MOV X1, X26
	0x01EAB458 BL 0x1EA4A60
	0x01EAB45C LDR X19, [X26 + 0x70]
	0x01EAB460 CBZ X19, 0x1EAB81C
	0x01EAB464 LDR W8, [X19 + 0x18]
	0x01EAB468 CMP W8, 0x1
	0x01EAB46C B.LT 0x1EAB4CC
	0x01EAB470 MOV W21, W31
	0x01EAB474 CMP W21, W8
	0x01EAB478 B.CS 0x1EAB820
	0x01EAB47C LDR X0, [X25]
	0x01EAB480 ADD X8, X19, W21, 0x3, SXTW
	0x01EAB484 LDR X24, [X8 + 0x20]
	0x01EAB488 LDR W9, [X0 + 0xE0]
	0x01EAB48C CBNZ W9, 0x1EAB494
	0x01EAB490 BL 0x1C16DFC
	0x01EAB494 CBZ X24, 0x1EAB81C
	0x01EAB498 LDR W0, [X24 + 0x60]
	0x01EAB49C MOVZ W1, 0x1
	0x01EAB4A0 MOV X2, X31
	0x01EAB4A4 BL 0x1E93D90
	0x01EAB4A8 TBZ X0, 0x0, 0x1EAB4BC
	0x01EAB4AC MOVZ W2, 0x1
	0x01EAB4B0 MOV X0, X20
	0x01EAB4B4 MOV X1, X24
	0x01EAB4B8 BL 0x1EA4A60
	0x01EAB4BC LDR W8, [X19 + 0x18]
	0x01EAB4C0 ADD W21, W21, 0x1
	0x01EAB4C4 CMP W21, W8
	0x01EAB4C8 B.LT 0x1EAB474
	0x01EAB4CC LDR X8, [X22 + 0x38]
	0x01EAB4D0 CBZ X8, 0x1EAB51C
	0x01EAB4D4 ADRP X9, 0x224C000
	0x01EAB4D8 LDR X9, [X9 + 0x140]
	0x01EAB4DC LDR X10, [X8]
	0x01EAB4E0 LDR X9, [X9]
	0x01EAB4E4 CMP X10, X9
	0x01EAB4E8 CSEL X3, X8, X31, EQ
	0x01EAB4EC B 0x1EAB520
	0x01EAB4F0 LDRB W8, [X22 + 0x4A]
	0x01EAB4F4 TBNZ X8, 0x0, 0x1EAB80C
	0x01EAB4F8 ADD X8, X31, 0x10
	0x01EAB4FC MOV X0, X20
	0x01EAB500 MOV X1, X22
	0x01EAB504 BL 0x1EAE15C
	0x01EAB508 LDR X8, [X31 + 0x20]
	0x01EAB50C LDR V0, [X31 + 0x1]
	0x01EAB510 STR X8, [X23 + 0x10]
	0x01EAB514 STR V0, [X23]
	0x01EAB518 B 0x1EAB7EC
	0x01EAB51C MOV X3, X31
	0x01EAB520 MOVZ W2, 0x1
	0x01EAB524 MOV X0, X20
	0x01EAB528 MOV X1, X26
	0x01EAB52C BL 0x1EA4B28
	0x01EAB530 LDR X19, [X26 + 0x70]
	0x01EAB534 CBZ X19, 0x1EAB81C
	0x01EAB538 LDR W8, [X19 + 0x18]
	0x01EAB53C CMP W8, 0x1
	0x01EAB540 B.LT 0x1EAB5A4
	0x01EAB544 MOV W21, W31
	0x01EAB548 CMP W21, W8
	0x01EAB54C B.CS 0x1EAB820
	0x01EAB550 LDR X0, [X25]
	0x01EAB554 ADD X8, X19, W21, 0x3, SXTW
	0x01EAB558 LDR X24, [X8 + 0x20]
	0x01EAB55C LDR W9, [X0 + 0xE0]
	0x01EAB560 CBNZ W9, 0x1EAB568
	0x01EAB564 BL 0x1C16DFC
	0x01EAB568 CBZ X24, 0x1EAB81C
	0x01EAB56C LDR W0, [X24 + 0x60]
	0x01EAB570 MOVZ W1, 0x1
	0x01EAB574 MOV X2, X31
	0x01EAB578 BL 0x1E93D90
	0x01EAB57C TBZ X0, 0x0, 0x1EAB594
	0x01EAB580 MOVZ W2, 0x1
	0x01EAB584 MOV X0, X20
	0x01EAB588 MOV X1, X24
	0x01EAB58C MOV X3, X31
	0x01EAB590 BL 0x1EA4B28
	0x01EAB594 LDR W8, [X19 + 0x18]
	0x01EAB598 ADD W21, W21, 0x1
	0x01EAB59C CMP W21, W8
	0x01EAB5A0 B.LT 0x1EAB548
	0x01EAB5A4 MOV X1, X26
	0x01EAB5A8 BL 0x1EA4DB8
	0x01EAB5AC LDR X19, [X26 + 0x70]
	0x01EAB5B0 CBZ X19, 0x1EAB81C
	0x01EAB5B4 LDR W8, [X19 + 0x18]
	0x01EAB5B8 CMP W8, 0x1
	0x01EAB5BC B.LT 0x1EAB614
	0x01EAB5C0 MOV W21, W31
	0x01EAB5C4 CMP W21, W8
	0x01EAB5C8 B.CS 0x1EAB820
	0x01EAB5CC LDR X0, [X25]
	0x01EAB5D0 ADD X8, X19, W21, 0x3, SXTW
	0x01EAB5D4 LDR X24, [X8 + 0x20]
	0x01EAB5D8 LDR W9, [X0 + 0xE0]
	0x01EAB5DC CBNZ W9, 0x1EAB5E4
	0x01EAB5E0 BL 0x1C16DFC
	0x01EAB5E4 CBZ X24, 0x1EAB81C
	0x01EAB5E8 LDR W0, [X24 + 0x60]
	0x01EAB5EC MOVZ W1, 0x1
	0x01EAB5F0 MOV X2, X31
	0x01EAB5F4 BL 0x1E93D90
	0x01EAB5F8 TBZ X0, 0x0, 0x1EAB604
	0x01EAB5FC MOV X1, X24

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x252F000
	011 Move W8, [X21+885]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x2254000
	019 Move X0, [X0+3568]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+885], W8
	023 Move [X31+8], X31
	024 Move X0, [X19+80]
	025 Compare X0, 0
	026 JumpIfEqual {124}
	027 And X1, X20, 0
	028 Add X2, X31, 8
	029 Move X3, X31
	030 Call Simulation.TryGetInstance, X0, X1, X2
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {114}
	035 Move X8, [X31+8]
	036 Compare X8, 0
	037 JumpIfEqual {124}
	038 Move X25, 0x2254000
	039 Move X20, 0x2249000
	040 Move X21, 0x2251000
	041 Move X22, 0x2254000
	042 Move X25, [X25+3568]
	043 Move X20, [X20+2000]
	044 Move X21, [X21+2224]
	045 Move X22, [X22+2152]
	046 Move X24, X31
	047 Move X8, [X8+120]
	048 Compare X8, 0
	049 JumpIfEqual {124}
	050 Move W9, [X8+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add X8, X8, X24
	054 Move X0, [X8+32]
	055 Move X1, [X25]
	056 Call 0x1C17E00
	057 Move X23, X0
	058 Compare X0, 0
	059 JumpIfEqual {81}
	060 Move X8, [X23]
	061 Move X1, [X25]
	062 NotImplemented "Instruction LDRH not yet implemented."
	063 Compare X9, 0
	064 JumpIfEqual {71}
	065 Move X10, [X8+176]
	066 Add X10, X10, 8
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Subtract X9, X9, 1
	070 Add X10, X10, 16
	071 Move X0, X23
	072 Move W2, W31
	073 Call 0x1C5D788
	074 NotImplemented "Instruction LDRSW not yet implemented."
	075 Add X8, X8, X9
	076 Add X0, X8, 312
	077 Move X8, [X0]
	078 Move X1, [X0+8]
	079 Move X0, X23
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move X8, [X31+8]
	082 Add X24, X24, 1
	083 Compare X8, 0
	084 JumpIfNotEqual {47}
	085 Call 0x1C17F28
	086 Move X23, X0
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X0, X23
	089 Call 0x3EB2AD0
	090 Move X23, X0
	091 Move X0, X20
	092 Call 0x1C17D08
	093 Move X8, [X23]
	094 Move X1, [X8]
	095 Call 0x1C18270
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {125}
	100 Move X23, [X23]
	101 Call 0x3EB2AE0
	102 Move X0, X21
	103 Call 0x1C17D08
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Move X0, X22
	109 Call 0x1C17D08
	110 Move X2, X0
	111 Move X0, X19
	112 Move X1, X23
	113 Call 0x2214878, X0, X1
	114 Move X20, [X31+64]
	115 Move X19, [X31+72]
	116 Move X22, [X31+48]
	117 Move X21, [X31+56]
	118 Move X24, [X31+32]
	119 Move X23, [X31+40]
	120 Move X30, [X31+16]
	121 Move X25, [X31+24]
	122 Add X31, X31, 80
	123 Return 
	124 Call 0x1C17F20
	125 Move W0, 8
	126 Call 0x3EB2AF0
	127 Move X8, [X23]
	128 Move [X0], X8
	129 Move X1, 0x200A000
	130 Add X1, X1, 3672
	131 Move X2, X31
	132 Call 0x3EB2B00
	133 Move X23, X0
	134 Call 0x3EB2AE0
	135 Move X0, X23
	136 Call 0x1D2D690
	137 Call 0x1991590

Method: System.Void Fusion.Simulation.ICallbacks.ObjectChanged(Fusion.NetworkId id, System.Boolean created)

Disassembly:
	0x01EAB600 BL 0x1EA4DB8
	0x01EAB604 LDR W8, [X19 + 0x18]
	0x01EAB608 ADD W21, W21, 0x1
	0x01EAB60C CMP W21, W8
	0x01EAB610 B.LT 0x1EAB5C4
	0x01EAB614 MOV X1, X26
	0x01EAB618 BL 0x1EA4E54
	0x01EAB61C LDR X19, [X26 + 0x70]
	0x01EAB620 CBZ X19, 0x1EAB81C
	0x01EAB624 LDR W8, [X19 + 0x18]
	0x01EAB628 CMP W8, 0x1
	0x01EAB62C B.LT 0x1EAB684
	0x01EAB630 MOV W21, W31
	0x01EAB634 CMP W21, W8
	0x01EAB638 B.CS 0x1EAB820
	0x01EAB63C LDR X0, [X25]
	0x01EAB640 ADD X8, X19, W21, 0x3, SXTW
	0x01EAB644 LDR X24, [X8 + 0x20]
	0x01EAB648 LDR W9, [X0 + 0xE0]
	0x01EAB64C CBNZ W9, 0x1EAB654
	0x01EAB650 BL 0x1C16DFC
	0x01EAB654 CBZ X24, 0x1EAB81C
	0x01EAB658 LDR W0, [X24 + 0x60]
	0x01EAB65C MOVZ W1, 0x1
	0x01EAB660 MOV X2, X31
	0x01EAB664 BL 0x1E93D90
	0x01EAB668 TBZ X0, 0x0, 0x1EAB674
	0x01EAB66C MOV X1, X24
	0x01EAB670 BL 0x1EA4E54

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x252F000
	007 Move X22, 0x224C000
	008 Move W8, [X21+886]
	009 Move X22, [X22+920]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x224C000
	017 Move X0, [X0+920]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+886], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X31
	027 Call NetworkId.get_SceneInfo
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move W8, 2
	030 Move [X19+316], W8
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X30, [X31+48]
	036 Return 

Method: System.Boolean Fusion.Simulation.ICallbacks.TryBeginUpdateRemotePrefabs()

Disassembly:
	0x01EAB674 LDR W8, [X19 + 0x18]
	0x01EAB678 ADD W21, W21, 0x1
	0x01EAB67C CMP W21, W8
	0x01EAB680 B.LT 0x1EAB634
	0x01EAB684 LDRB W8, [X22 + 0x48]
	0x01EAB688 TBZ X8, 0x0, 0x1EAB6A4
	0x01EAB68C CBZ X23, 0x1EAB81C
	0x01EAB690 LDR X8, [X23 + 0xB0]
	0x01EAB694 CBZ X8, 0x1EAB81C
	0x01EAB698 LDR W9, [X8 + 0x18]
	0x01EAB69C ORR W9, W9, 0x40
	0x01EAB6A0 STR W9, [X8 + 0x18]
	0x01EAB6A4 LDR X0, [X20 + 0x50]
	0x01EAB6A8 CBZ X0, 0x1EAB7C4
	0x01EAB6AC MOV X1, X31
	0x01EAB6B0 BL 0x1EC0864
	0x01EAB6B4 TBZ X0, 0x0, 0x1EAB7C4
	0x01EAB6B8 CBZ X23, 0x1EAB81C
	0x01EAB6BC LDR X8, [X23 + 0xB0]
	0x01EAB6C0 CBZ X8, 0x1EAB81C
	0x01EAB6C4 LDR W9, [X8 + 0x18]
	0x01EAB6C8 ORR W9, W9, 0x4
	0x01EAB6CC STR W9, [X8 + 0x18]
	0x01EAB6D0 LDR X8, [X20 + 0x98]
	0x01EAB6D4 CBZ X8, 0x1EAB81C
	0x01EAB6D8 LDR X8, [X8 + 0x40]
	0x01EAB6DC CBZ X8, 0x1EAB81C
	0x01EAB6E0 LDR W8, [X8 + 0x38]
	0x01EAB6E4 CMP W8, 0x2
	0x01EAB6E8 B.NE 0x1EAB7C4
	0x01EAB6EC LDR X8, [X20 + 0x50]
	0x01EAB6F0 CBZ X8, 0x1EAB81C
	0x01EAB6F4 LDR X22, [X8 + 0xA8]
	0x01EAB6F8 MOV X0, X23
	0x01EAB6FC MOV X1, X31
	0x01EAB700 BL 0x1E97370
	0x01EAB704 CBZ X22, 0x1EAB81C
	0x01EAB708 AND X1, X0, 0x0
	0x01EAB70C MOV X0, X22
	0x01EAB710 MOV X2, X31
	0x01EAB714 BL 0x1ED47F8
	0x01EAB718 LDR X19, [X26 + 0x70]
	0x01EAB71C CBZ X19, 0x1EAB81C
	0x01EAB720 LDR X8, [X19 + 0x18]
	0x01EAB724 CMP W8, 0x1
	0x01EAB728 B.LT 0x1EAB7C4
	0x01EAB72C ADRP X23, 0x224B000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x252F000
	005 Move W8, [X20+887]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x224C000
	012 Move X0, [X0+920]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+887], W8
	016 Move X0, X19
	017 Call NetworkRunner.get_IsSceneManagerBusy, X0
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {23}
	022 Move W0, W31
	023 Move X0, [X19+80]
	024 Compare X0, 0
	025 JumpIfEqual {58}
	026 Move X1, X31
	027 Call Simulation.get_IsClient, X0
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {58}
	032 Move X0, X19
	033 Call NetworkRunner.get_IsSharedModeMasterClient, X0
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {58}
	038 Move X8, 0x224C000
	039 Move X8, [X8+920]
	040 Move X20, [X19+80]
	041 Move X0, [X8]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X31
	047 Call NetworkId.get_SceneInfo
	048 Compare X20, 0
	049 JumpIfEqual {66}
	050 And X1, X0, 0
	051 Move X0, X20
	052 Move X2, X31
	053 Call Simulation.HasObject, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {22}
	058 Move X0, [X19+96]
	059 Move X1, X31
	060 Call CallbackInterfaceInvoker.IBeforeUpdateRemotePrefabs, X0
	061 Move W0, 1
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X30, [X31+32]
	065 Return X0
	066 Call 0x1C17F20

Method: System.Void Fusion.Simulation.ICallbacks.EndUpdateRemotePrefabs()

Disassembly:
	0x01EAB730 LDR X23, [X23 + 0x398]
	0x01EAB734 MOV X21, X31
	0x01EAB738 AND X8, X8, 0x0
	0x01EAB73C ADD X22, X19, 0x20
	0x01EAB740 CMP X21, W8, UXTW
	0x01EAB744 B.CS 0x1EAB820
	0x01EAB748 LDR X24, [X22, X21, LSL #3]
	0x01EAB74C CBZ X24, 0x1EAB7B4
	0x01EAB750 LDRB W8, [X24 + 0x60]
	0x01EAB754 TBNZ X8, 0x1, 0x1EAB7B4
	0x01EAB758 LDR X8, [X24 + 0x20]
	0x01EAB75C CBZ X8, 0x1EAB768
	0x01EAB760 LDR W25, [X8]
	0x01EAB764 B 0x1EAB76C
	0x01EAB768 MOV W25, W31
	0x01EAB76C LDR X0, [X23]
	0x01EAB770 LDR W8, [X0 + 0xE0]
	0x01EAB774 CBZ W8, 0x1EAB780
	0x01EAB778 CBNZ W25, 0x1EAB788
	0x01EAB77C B 0x1EAB7B4
	0x01EAB780 BL 0x1C16DFC
	0x01EAB784 CBZ W25, 0x1EAB7B4
	0x01EAB788 LDR X8, [X20 + 0x50]
	0x01EAB78C CBZ X8, 0x1EAB81C
	0x01EAB790 LDR X9, [X24 + 0x20]
	0x01EAB794 CBZ X9, 0x1EAB7A0
	0x01EAB798 LDR W1, [X9]
	0x01EAB79C B 0x1EAB7A4
	0x01EAB7A0 MOV X1, X31
	0x01EAB7A4 LDR X0, [X8 + 0xA8]
	0x01EAB7A8 CBZ X0, 0x1EAB81C
	0x01EAB7AC MOV X2, X31
	0x01EAB7B0 BL 0x1ED47F8
	0x01EAB7B4 LDR W8, [X19 + 0x18]
	0x01EAB7B8 ADD X21, X21, 0x1
	0x01EAB7BC CMP X21, W8, SXTW
	0x01EAB7C0 B.LT 0x1EAB740
	0x01EAB7C4 ADD X8, X31, 0x10
	0x01EAB7C8 ADD X2, X31, 0x30
	0x01EAB7CC MOV X0, X20
	0x01EAB7D0 MOV X1, X26
	0x01EAB7D4 BL 0x1EAE618
	0x01EAB7D8 LDR X8, [X31 + 0x20]
	0x01EAB7DC LDR V0, [X31 + 0x1]
	0x01EAB7E0 LDR X9, [X31]
	0x01EAB7E4 STR X8, [X9 + 0x10]
	0x01EAB7E8 STR V0, [X9]
	0x01EAB7EC LDP X20, X19, [X31 + 0x90]
	0x01EAB7F0 LDP X22, X21, [X31 + 0x80]
	0x01EAB7F4 LDP X24, X23, [X31 + 0x70]
	0x01EAB7F8 LDP X26, X25, [X31 + 0x60]
	0x01EAB7FC LDP X28, X27, [X31 + 0x50]
	0x01EAB800 LDP X29, X30, [X31 + 0x40]
	0x01EAB804 ADD X31, X31, 0xA0
	0x01EAB808 RET
	0x01EAB80C ADD X8, X31, 0x10
	0x01EAB810 ADD X2, X31, 0x30
	0x01EAB814 MOVZ W1, 0x5
	0x01EAB818 B 0x1EAB208
	0x01EAB81C BL 0x1C16F20
	0x01EAB820 BL 0x1C16F28
	0x01EAB824 LDR X0, [X0 + 0x60]
	0x01EAB828 MOV X1, X31
	0x01EAB82C B 0x1E6F8F0
	0x01EAB830 STR D8, [X31 - 0x30]!
	0x01EAB834 STP X30, X21, [X31 + 0x10]
	0x01EAB838 STP X20, X19, [X31 + 0x20]
	0x01EAB83C MOV X19, X0
	0x01EAB840 MOV X0, X31
	0x01EAB844 BL 0x3C3C7DC
	0x01EAB848 LDR X0, [X19 + 0x50]
	0x01EAB84C MOV V8.16B, V0.16B
	0x01EAB850 CBZ X0, 0x1EAB8B0
	0x01EAB854 MOV X1, X31
	0x01EAB858 BL 0x1EC06A8
	0x01EAB85C MOV X0, X31
	0x01EAB860 BL 0x3C3C804
	0x01EAB864 LDR X0, [X19 + 0x50]
	0x01EAB868 CBZ X0, 0x1EAB8B4
	0x01EAB86C LDR X19, [X19 + 0x60]
	0x01EAB870 LDP W21, W20, [X0 + 0x4C]
	0x01EAB874 MOV X1, X31
	0x01EAB878 BL 0x1EC0810
	0x01EAB87C CBZ X19, 0x1EAB8B8
	0x01EAB880 MOV W3, W0
	0x01EAB884 MOV X0, X19
	0x01EAB888 MOV W1, W20
	0x01EAB88C MOV W2, W21
	0x01EAB890 MOV X4, X31
	0x01EAB894 BL 0x1E7B9B4
	0x01EAB898 LDP X20, X19, [X31 + 0x20]
	0x01EAB89C LDP X30, X21, [X31 + 0x10]
	0x01EAB8A0 MOV V0.16B, V8.16B
	0x01EAB8A4 MOV X0, X31
	0x01EAB8A8 LDR V8, [X31], #0x30
	0x01EAB8AC B 0x3C3C804
	0x01EAB8B0 BL 0x1C16F20
	0x01EAB8B4 BL 0x1C16F20
	0x01EAB8B8 BL 0x1C16F20
	0x01EAB8BC B 0x1EAB8C8
	0x01EAB8C0 B 0x1EAB8C8
	0x01EAB8C4 B 0x1EAB8C8
	0x01EAB8C8 MOV X19, X0
	0x01EAB8CC CMP W1, 0x1
	0x01EAB8D0 B.NE 0x1EAB904
	0x01EAB8D4 MOV X0, X19
	0x01EAB8D8 BL 0x3EB1AD0
	0x01EAB8DC LDR X20, [X0]
	0x01EAB8E0 BL 0x3EB1AE0
	0x01EAB8E4 MOV V0.16B, V8.16B
	0x01EAB8E8 MOV X0, X31
	0x01EAB8EC BL 0x3C3C804
	0x01EAB8F0 CBNZ X20, 0x1EAB90C
	0x01EAB8F4 LDP X20, X19, [X31 + 0x20]
	0x01EAB8F8 LDP X30, X21, [X31 + 0x10]
	0x01EAB8FC LDR V8, [X31], #0x30
	0x01EAB900 RET
	0x01EAB904 MOV X20, X31
	0x01EAB908 B 0x1EAB918
	0x01EAB90C MOV X0, X20
	0x01EAB910 BL 0x1C16F18
	0x01EAB914 MOV X19, X0
	0x01EAB918 MOV V0.16B, V8.16B
	0x01EAB91C MOV X0, X31
	0x01EAB920 BL 0x3C3C804
	0x01EAB924 CBNZ X20, 0x1EAB930
	0x01EAB928 MOV X0, X19
	0x01EAB92C BL 0x1D2C690
	0x01EAB930 MOV X0, X20
	0x01EAB934 BL 0x1C16F18
	0x01EAB938 BL 0x1990590
	0x01EAB93C MOVZ W1, 0x1
	0x01EAB940 B 0x1EA9018
	0x01EAB944 STP X30, X19, [X31 - 0x10]!
	0x01EAB948 MOV X19, X0
	0x01EAB94C BL 0x1EA27F0
	0x01EAB950 AND W1, W0, 0x1
	0x01EAB954 MOV X0, X19
	0x01EAB958 LDP X30, X19, [X31], #0x10
	0x01EAB95C B 0x1EA9018
	0x01EAB960 STP X30, X27, [X31 - 0x50]!
	0x01EAB964 STP X26, X25, [X31 + 0x10]
	0x01EAB968 STP X24, X23, [X31 + 0x20]
	0x01EAB96C STP X22, X21, [X31 + 0x30]
	0x01EAB970 STP X20, X19, [X31 + 0x40]
	0x01EAB974 ADRP X21, 0x252E000
	0x01EAB978 LDRB W8, [X21 + 0x37B]
	0x01EAB97C MOV X19, X1
	0x01EAB980 MOV X20, X0
	0x01EAB984 TBNZ X8, 0x0, 0x1EAB9B4
	0x01EAB988 ADRP X0, 0x2253000
	0x01EAB98C LDR X0, [X0 + 0x768]
	0x01EAB990 BL 0x1C16CF4
	0x01EAB994 ADRP X0, 0x2253000
	0x01EAB998 LDR X0, [X0 + 0x770]
	0x01EAB99C BL 0x1C16CF4
	0x01EAB9A0 ADRP X0, 0x2253000
	0x01EAB9A4 LDR X0, [X0 + 0x778]
	0x01EAB9A8 BL 0x1C16CF4
	0x01EAB9AC MOVZ W8, 0x1
	0x01EAB9B0 STRB W8, [X21 + 0x37B]
	0x01EAB9B4 LDR X0, [X20 + 0x68]
	0x01EAB9B8 CBZ X0, 0x1EABAA0
	0x01EAB9BC ADRP X26, 0x2253000
	0x01EAB9C0 ADRP X27, 0x2253000
	0x01EAB9C4 LDR X26, [X26 + 0x778]
	0x01EAB9C8 LDR X27, [X27 + 0x768]
	0x01EAB9CC MOV W21, W31
	0x01EAB9D0 LDR W8, [X0 + 0x18]
	0x01EAB9D4 CMP W21, W8
	0x01EAB9D8 B.GE 0x1EABAA4
	0x01EAB9DC LDR X2, [X26]
	0x01EAB9E0 MOV W1, W21
	0x01EAB9E4 BL 0x301BCCC
	0x01EAB9E8 CBZ X19, 0x1EABAA0
	0x01EAB9EC LDR W23, [X19 + 0x18]
	0x01EAB9F0 MOV X22, X0
	0x01EAB9F4 MOV X0, X19
	0x01EAB9F8 MOV X1, X31
	0x01EAB9FC BL 0x1ED8BC4
	0x01EABA00 LDR X8, [X20 + 0x50]
	0x01EABA04 CBZ X8, 0x1EABAA0
	0x01EABA08 LDR X8, [X8 + 0x58]
	0x01EABA0C CBZ X8, 0x1EABAA0
	0x01EABA10 LDR W1, [X8 + 0x10]
	0x01EABA14 MOV X2, X31
	0x01EABA18 BL 0x1EDE0B0
	0x01EABA1C CBZ X22, 0x1EABAA0
	0x01EABA20 LDR X8, [X22]
	0x01EABA24 MOV X25, X1
	0x01EABA28 LDR X1, [X27]
	0x01EABA2C MOV X24, X0
	0x01EABA30 LDRH W9, [X8 + 0x12E]
	0x01EABA34 CBZ X9, 0x1EABA58
	0x01EABA38 LDR X10, [X8 + 0xB0]
	0x01EABA3C ADD X10, X10, 0x8
	0x01EABA40 LDUR X11, [X10 - 0x8]
	0x01EABA44 CMP X11, X1
	0x01EABA48 B.EQ 0x1EABA68
	0x01EABA4C SUBS X9, X9, 0x1
	0x01EABA50 ADD X10, X10, 0x10
	0x01EABA54 B.NE 0x1EABA40
	0x01EABA58 MOVZ W2, 0x5
	0x01EABA5C MOV X0, X22
	0x01EABA60 BL 0x1C5C788
	0x01EABA64 B 0x1EABA78
	0x01EABA68 LDR W9, [X10]
	0x01EABA6C ADD W9, W9, 0x5
	0x01EABA70 ADD X8, X8, W9, 0x4, SXTW
	0x01EABA74 ADD X0, X8, 0x138
	0x01EABA78 LDP X8, X5, [X0]
	0x01EABA7C MOV X0, X22
	0x01EABA80 MOV X1, X20
	0x01EABA84 MOV X2, X23
	0x01EABA88 MOV X3, X24
	0x01EABA8C MOV X4, X25
	0x01EABA90 BLR X8
	0x01EABA94 LDR X0, [X20 + 0x68]
	0x01EABA98 ADD W21, W21, 0x1
	0x01EABA9C CBNZ X0, 0x1EAB9D0
	0x01EABAA0 BL 0x1C16F20
	0x01EABAA4 LDP X20, X19, [X31 + 0x40]
	0x01EABAA8 LDP X22, X21, [X31 + 0x30]
	0x01EABAAC LDP X24, X23, [X31 + 0x20]
	0x01EABAB0 LDP X26, X25, [X31 + 0x10]
	0x01EABAB4 LDP X30, X27, [X31], #0x50
	0x01EABAB8 RET
	0x01EABABC STR X30, [X31 - 0x50]!
	0x01EABAC0 STP X26, X25, [X31 + 0x10]
	0x01EABAC4 STP X24, X23, [X31 + 0x20]
	0x01EABAC8 STP X22, X21, [X31 + 0x30]
	0x01EABACC STP X20, X19, [X31 + 0x40]
	0x01EABAD0 ADRP X21, 0x252E000
	0x01EABAD4 LDRB W8, [X21 + 0x37C]
	0x01EABAD8 MOV X19, X1
	0x01EABADC MOV X20, X0
	0x01EABAE0 TBNZ X8, 0x0, 0x1EABB10
	0x01EABAE4 ADRP X0, 0x2253000
	0x01EABAE8 LDR X0, [X0 + 0x768]
	0x01EABAEC BL 0x1C16CF4
	0x01EABAF0 ADRP X0, 0x2253000
	0x01EABAF4 LDR X0, [X0 + 0x770]
	0x01EABAF8 BL 0x1C16CF4
	0x01EABAFC ADRP X0, 0x2253000
	0x01EABB00 LDR X0, [X0 + 0x778]
	0x01EABB04 BL 0x1C16CF4
	0x01EABB08 MOVZ W8, 0x1
	0x01EABB0C STRB W8, [X21 + 0x37C]
	0x01EABB10 ADRP X21, 0x252E000
	0x01EABB14 LDRB W8, [X21 + 0x311]
	0x01EABB18 TBNZ X8, 0x0, 0x1EABB30
	0x01EABB1C ADRP X0, 0x2252000
	0x01EABB20 LDR X0, [X0 + 0x170]
	0x01EABB24 BL 0x1C16CF4
	0x01EABB28 MOVZ W8, 0x1
	0x01EABB2C STRB W8, [X21 + 0x311]
	0x01EABB30 LDRB W8, [X20 + 0xD1]
	0x01EABB34 CBZ W8, 0x1EABC20
	0x01EABB38 LDR X0, [X20 + 0x68]
	0x01EABB3C CBZ X0, 0x1EABC1C
	0x01EABB40 ADRP X25, 0x2253000
	0x01EABB44 ADRP X26, 0x2253000
	0x01EABB48 LDR X25, [X25 + 0x778]
	0x01EABB4C LDR X26, [X26 + 0x768]
	0x01EABB50 MOV W21, W31
	0x01EABB54 LDR W8, [X0 + 0x18]
	0x01EABB58 CMP W21, W8
	0x01EABB5C B.GE 0x1EABC20
	0x01EABB60 LDR X2, [X25]
	0x01EABB64 MOV W1, W21
	0x01EABB68 BL 0x301BCCC
	0x01EABB6C CBZ X19, 0x1EABC1C
	0x01EABB70 MOV X22, X0
	0x01EABB74 MOV X0, X19
	0x01EABB78 MOV X1, X31
	0x01EABB7C BL 0x1ED8BC4
	0x01EABB80 LDR X8, [X20 + 0x50]
	0x01EABB84 CBZ X8, 0x1EABC1C
	0x01EABB88 LDR X8, [X8 + 0x58]
	0x01EABB8C CBZ X8, 0x1EABC1C
	0x01EABB90 LDR W1, [X8 + 0x10]
	0x01EABB94 MOV X2, X31
	0x01EABB98 BL 0x1EDE0B0
	0x01EABB9C CBZ X22, 0x1EABC1C
	0x01EABBA0 LDR X8, [X22]
	0x01EABBA4 MOV X24, X1
	0x01EABBA8 LDR X1, [X26]
	0x01EABBAC MOV X23, X0
	0x01EABBB0 LDRH W9, [X8 + 0x12E]
	0x01EABBB4 CBZ X9, 0x1EABBD8
	0x01EABBB8 LDR X10, [X8 + 0xB0]
	0x01EABBBC ADD X10, X10, 0x8
	0x01EABBC0 LDUR X11, [X10 - 0x8]
	0x01EABBC4 CMP X11, X1
	0x01EABBC8 B.EQ 0x1EABBE8
	0x01EABBCC SUBS X9, X9, 0x1
	0x01EABBD0 ADD X10, X10, 0x10
	0x01EABBD4 B.NE 0x1EABBC0
	0x01EABBD8 MOVZ W2, 0x4
	0x01EABBDC MOV X0, X22
	0x01EABBE0 BL 0x1C5C788
	0x01EABBE4 B 0x1EABBF8
	0x01EABBE8 LDR W9, [X10]
	0x01EABBEC ADD W9, W9, 0x4
	0x01EABBF0 ADD X8, X8, W9, 0x4, SXTW
	0x01EABBF4 ADD X0, X8, 0x138
	0x01EABBF8 LDP X8, X4, [X0]
	0x01EABBFC MOV X0, X22
	0x01EABC00 MOV X1, X20
	0x01EABC04 MOV X2, X23
	0x01EABC08 MOV X3, X24
	0x01EABC0C BLR X8
	0x01EABC10 LDR X0, [X20 + 0x68]
	0x01EABC14 ADD W21, W21, 0x1
	0x01EABC18 CBNZ X0, 0x1EABB54
	0x01EABC1C BL 0x1C16F20
	0x01EABC20 LDP X20, X19, [X31 + 0x40]
	0x01EABC24 LDP X22, X21, [X31 + 0x30]
	0x01EABC28 LDP X24, X23, [X31 + 0x20]
	0x01EABC2C LDP X26, X25, [X31 + 0x10]
	0x01EABC30 LDR X30, [X31], #0x50
	0x01EABC34 RET
	0x01EABC38 STR X30, [X31 - 0x40]!
	0x01EABC3C STP X24, X23, [X31 + 0x10]
	0x01EABC40 STP X22, X21, [X31 + 0x20]
	0x01EABC44 STP X20, X19, [X31 + 0x30]
	0x01EABC48 ADRP X21, 0x252E000
	0x01EABC4C LDRB W8, [X21 + 0x37D]
	0x01EABC50 MOV X20, X1
	0x01EABC54 MOV X19, X0
	0x01EABC58 TBNZ X8, 0x0, 0x1EABC88
	0x01EABC5C ADRP X0, 0x2253000
	0x01EABC60 LDR X0, [X0 + 0x768]
	0x01EABC64 BL 0x1C16CF4
	0x01EABC68 ADRP X0, 0x2253000
	0x01EABC6C LDR X0, [X0 + 0x770]
	0x01EABC70 BL 0x1C16CF4
	0x01EABC74 ADRP X0, 0x2253000
	0x01EABC78 LDR X0, [X0 + 0x778]
	0x01EABC7C BL 0x1C16CF4
	0x01EABC80 MOVZ W8, 0x1
	0x01EABC84 STRB W8, [X21 + 0x37D]
	0x01EABC88 LDR X8, [X19 + 0x68]
	0x01EABC8C CBZ X8, 0x1EABD38
	0x01EABC90 ADRP X23, 0x2253000
	0x01EABC94 ADRP X24, 0x2253000
	0x01EABC98 LDR X23, [X23 + 0x778]
	0x01EABC9C LDR X24, [X24 + 0x768]
	0x01EABCA0 MOV W21, W31
	0x01EABCA4 LDR W9, [X8 + 0x18]
	0x01EABCA8 CMP W21, W9
	0x01EABCAC B.GE 0x1EABD3C
	0x01EABCB0 LDR X2, [X23]
	0x01EABCB4 MOV X0, X8
	0x01EABCB8 MOV W1, W21
	0x01EABCBC BL 0x301BCCC
	0x01EABCC0 MOV X22, X0
	0x01EABCC4 CBZ X0, 0x1EABD50
	0x01EABCC8 LDR X8, [X22]
	0x01EABCCC LDR X1, [X24]
	0x01EABCD0 LDRH W9, [X8 + 0x12E]
	0x01EABCD4 CBZ X9, 0x1EABCF8
	0x01EABCD8 LDR X10, [X8 + 0xB0]
	0x01EABCDC ADD X10, X10, 0x8
	0x01EABCE0 LDUR X11, [X10 - 0x8]
	0x01EABCE4 CMP X11, X1
	0x01EABCE8 B.EQ 0x1EABD08
	0x01EABCEC SUBS X9, X9, 0x1
	0x01EABCF0 ADD X10, X10, 0x10
	0x01EABCF4 B.NE 0x1EABCE0
	0x01EABCF8 MOVZ W2, 0xB
	0x01EABCFC MOV X0, X22
	0x01EABD00 BL 0x1C5C788
	0x01EABD04 B 0x1EABD18
	0x01EABD08 LDR W9, [X10]
	0x01EABD0C ADD W9, W9, 0xB
	0x01EABD10 ADD X8, X8, W9, 0x4, SXTW
	0x01EABD14 ADD X0, X8, 0x138
	0x01EABD18 LDP X8, X3, [X0]
	0x01EABD1C MOV X0, X22
	0x01EABD20 MOV X1, X19
	0x01EABD24 MOV X2, X20
	0x01EABD28 BLR X8
	0x01EABD2C LDR X8, [X19 + 0x68]
	0x01EABD30 ADD W21, W21, 0x1
	0x01EABD34 CBNZ X8, 0x1EABCA4
	0x01EABD38 BL 0x1C16F20
	0x01EABD3C LDP X20, X19, [X31 + 0x30]
	0x01EABD40 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X20, 0x252F000
	015 Move W8, [X20+888]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {53}
	021 Move X0, 0x224F000
	022 Move X0, [X0+4048]
	023 Call 0x1C17CF4
	024 Move X0, 0x224F000
	025 Move X0, [X0+4056]
	026 Call 0x1C17CF4
	027 Move X0, 0x224F000
	028 Move X0, [X0+4064]
	029 Call 0x1C17CF4
	030 Move X0, 0x2254000
	031 Move X0, [X0+3576]
	032 Call 0x1C17CF4
	033 Move X0, 0x224F000
	034 Move X0, [X0+4088]
	035 Call 0x1C17CF4
	036 Move X0, 0x2254000
	037 Move X0, [X0+3584]
	038 Call 0x1C17CF4
	039 Move X0, 0x2254000
	040 Move X0, [X0+3592]
	041 Call 0x1C17CF4
	042 Move X0, 0x2254000
	043 Move X0, [X0+3600]
	044 Call 0x1C17CF4
	045 Move X0, 0x224C000
	046 Move X0, [X0+920]
	047 Call 0x1C17CF4
	048 Move X0, 0x2252000
	049 Move X0, [X0+3712]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X20+888], W8
	053 Move [X31+32], X31
	054 Move [X31+40], X31
	055 Move [X31+48], X31
	056 Move X0, [X19+224]
	057 Compare X0, 0
	058 JumpIfEqual {126}
	059 Move X27, 0x2254000
	060 Move X28, 0x224C000
	061 Move X29, 0x2254000
	062 Move X24, 0x2252000
	063 Move X25, 0x224F000
	064 Move X21, 0x2254000
	065 Move X27, [X27+3592]
	066 Move X28, [X28+920]
	067 Move X29, [X29+3600]
	068 Move X24, [X24+3712]
	069 Move X25, [X25+4056]
	070 Move X21, [X21+2920]
	071 Move W20, W31
	072 Move X26, 0x252F000
	073 Move W8, [X0+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X2, [X27]
	076 Move W1, W20
	077 Call List`1<Object>.get_Item, X0, X1
	078 Move X22, X0
	079 Compare X0, 0
	080 JumpIfEqual {304}
	081 Move X8, [X22+32]
	082 Compare X8, 0
	083 JumpIfEqual {85}
	084 Move W23, [X8]
	085 Move W23, W31
	086 Move X0, [X28]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Compare W23, 0
	092 JumpIfEqual {115}
	093 Move X0, [X24]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move W0, [X22+96]
	099 Move W1, 1
	100 Move X2, X31
	101 Call NetworkObjectRuntimeFlagsExtensions.CheckFlag, X0, X1
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {122}
	106 Move W8, [X26+838]
	107 Move TEMP, X8
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfEqual {122}
	111 Move X0, X21
	112 Call 0x1C17CF4
	113 Move W8, 1
	114 Move [X26+838], W8
	115 Move X0, [X19+224]
	116 Compare X0, 0
	117 JumpIfEqual {305}
	118 Move X3, [X29]
	119 Move W1, W20
	120 Move X2, X31
	121 Call List`1<Object>.set_Item, X0, X1, X2
	122 Move X0, [X19+224]
	123 Add W20, W20, 1
	124 Compare X0, 0
	125 JumpIfNotEqual {73}
	126 Call 0x1C17F20
	127 Move X26, 0x224F000
	128 Move X26, [X26+4088]
	129 Move X1, [X26]
	130 Add X8, X31, 8
	131 Call List`1<Object>.GetEnumerator, X0
	132 NotImplemented "Instruction LDUR not yet implemented."
	133 Move X8, [X31+24]
	134 Move X21, 0x224F000
	135 Move [X31+2], V0
	136 Move [X31+48], X8
	137 Move X21, [X21+4048]
	138 Move X1, [X25]
	139 Add X0, X31, 32
	140 Call Enumerator<Object>.MoveNext, X0
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {166}
	145 Move X20, [X31+48]
	146 Compare X20, 0
	147 JumpIfEqual {138}
	148 Move X0, [X24]
	149 Move W8, [X0+224]
	150 Compare W8, 0
	151 JumpIfNotEqual {153}
	152 Call 0x1C17DFC
	153 Move W0, [X20+96]
	154 Move W1, 1
	155 Move X2, X31
	156 Call NetworkObjectRuntimeFlagsExtensions.CheckFlag, X0, X1
	157 Move TEMP, X0
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfNotEqual {138}
	161 Move X0, X19
	162 Move X1, X20
	163 Move W2, W31
	164 Move X3, X31
	165 Call NetworkRunner.InvokeBeforeSpawnedCallbacks, X0, X1, X2, X3
	166 Move X22, X31
	167 Move X1, [X21]
	168 Add X0, X31, 32
	169 Call Enumerator<Object>.Dispose, X0
	170 Compare X22, 0
	171 JumpIfNotEqual {309}
	172 Move X0, [X19+224]
	173 Compare X0, 0
	174 JumpIfEqual {311}
	175 Move X1, [X26]
	176 Add X8, X31, 8
	177 Call List`1<Object>.GetEnumerator, X0
	178 NotImplemented "Instruction LDUR not yet implemented."
	179 Move X8, [X31+24]
	180 Move [X31+2], V0
	181 Move [X31+48], X8
	182 Move X1, [X25]
	183 Add X0, X31, 32
	184 Call Enumerator<Object>.MoveNext, X0
	185 Move TEMP, X0
	186 And TEMP, TEMP, 1
	187 Compare TEMP, 1
	188 JumpIfNotEqual {207}
	189 Move X20, [X31+48]
	190 Compare X20, 0
	191 JumpIfEqual {182}
	192 Move X0, [X24]
	193 Move W8, [X0+224]
	194 Compare W8, 0
	195 JumpIfNotEqual {197}
	196 Call 0x1C17DFC
	197 Move W0, [X20+96]
	198 Move W1, 1
	199 Move X2, X31
	200 Call NetworkObjectRuntimeFlagsExtensions.CheckFlag, X0, X1
	201 Move TEMP, X0
	202 And TEMP, TEMP, 1
	203 Compare TEMP, 1
	204 JumpIfNotEqual {182}
	205 Move X1, X20
	206 Call NetworkRunner.InvokeSpawnedCallback, X0, X1
	207 Move X22, X31
	208 Move W23, 11
	209 Move X1, [X21]
	210 Add X0, X31, 32
	211 Call Enumerator<Object>.Dispose, X0
	212 Compare X22, 0
	213 JumpIfNotEqual {312}
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Compare W23, 0
	216 JumpIfNotEqual {268}
	217 Move X0, [X19+224]
	218 Compare X0, 0
	219 JumpIfEqual {314}
	220 Move X1, [X26]
	221 Add X8, X31, 8
	222 Call List`1<Object>.GetEnumerator, X0
	223 NotImplemented "Instruction LDUR not yet implemented."
	224 Move X8, [X31+24]
	225 Move [X31+2], V0
	226 Move [X31+48], X8
	227 Move X1, [X25]
	228 Add X0, X31, 32
	229 Call Enumerator<Object>.MoveNext, X0
	230 Move TEMP, X0
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfNotEqual {252}
	234 Move X20, [X31+48]
	235 Compare X20, 0
	236 JumpIfEqual {227}
	237 Move X0, [X24]
	238 Move W8, [X0+224]
	239 Compare W8, 0
	240 JumpIfNotEqual {242}
	241 Call 0x1C17DFC
	242 Move W0, [X20+96]
	243 Move W1, 1
	244 Move X2, X31
	245 Call NetworkObjectRuntimeFlagsExtensions.CheckFlag, X0, X1
	246 Move TEMP, X0
	247 And TEMP, TEMP, 1
	248 Compare TEMP, 1
	249 JumpIfNotEqual {227}
	250 Move X1, X20
	251 Call NetworkRunner.InvokeAfterSpawnedCallback, X0, X1
	252 Move X22, X31
	253 Move W24, W31
	254 Move W23, 14
	255 Move X1, [X21]
	256 Add X0, X31, 32
	257 Call Enumerator<Object>.Dispose, X0
	258 Compare X22, 0
	259 JumpIfNotEqual {315}
	260 Move X21, X31
	261 Move X20, X31
	262 Move TEMP, X24
	263 And TEMP, TEMP, 1
	264 Compare TEMP, 1
	265 JumpIfNotEqual {269}
	266 Move W23, W31
	267 Move X20, X21
	268 Move X20, X31
	269 Move X8, [X19+224]
	270 Compare X8, 0
	271 JumpIfEqual {306}
	272 Move W2, [X8+24]
	273 Move W9, [X8+28]
	274 Add W9, W9, 1
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Move [X8+24], W31
	277 Move [X8+28], W9
	278 Move X0, [X8+16]
	279 Move W1, W31
	280 Move X3, X31
	281 Call Array.Clear, X0, X1, X2
	282 Compare X20, 0
	283 JumpIfNotEqual {307}
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Compare W23, 0
	286 JumpIfNotEqual {290}
	287 Move X0, [X19+96]
	288 Move X1, X31
	289 Call CallbackInterfaceInvoker.IAfterUpdateRemotePrefabs, X0
	290 Move X20, [X31+144]
	291 Move X19, [X31+152]
	292 Move X22, [X31+128]
	293 Move X21, [X31+136]
	294 Move X24, [X31+112]
	295 Move X23, [X31+120]
	296 Move X26, [X31+96]
	297 Move X25, [X31+104]
	298 Move X28, [X31+80]
	299 Move X27, [X31+88]
	300 Move X29, [X31+64]
	301 Move X30, [X31+72]
	302 Add X31, X31, 160
	303 Return 
	304 Call 0x1C17F20
	305 Call 0x1C17F20
	306 Call 0x1C17F20
	307 Move X0, X20
	308 Call 0x1C17F18
	309 Move X0, X22
	310 Call 0x1C17F18
	311 Call 0x1C17F20
	312 Move X0, X22
	313 Call 0x1C17F18
	314 Call 0x1C17F20
	315 Move X0, X22
	316 Call 0x1C17F18
	317 Move X21, X1
	318 Move X20, X0
	319 NotImplemented "Instruction CMP not yet implemented."
	320 Move X0, X20
	321 Call 0x3EB2AD0
	322 Move X22, [X0]
	323 Call 0x3EB2AE0
	324 Move X21, 0x224F000
	325 Move X21, [X21+4048]
	326 Move W23, W31
	327 Move W24, 1
	328 Move X22, X31
	329 Move X8, 0x224F000
	330 Move X8, [X8+4048]
	331 Move X1, [X8]
	332 Add X0, X31, 32
	333 Call Enumerator<Object>.Dispose, X0
	334 Compare X22, 0
	335 JumpIfEqual {389}
	336 Move X0, X22
	337 Call 0x1C17F18
	338 Move X21, X1
	339 Move X20, X0
	340 Move X21, X1
	341 Move X20, X0
	342 NotImplemented "Instruction CMP not yet implemented."
	343 Move X0, X20
	344 Call 0x3EB2AD0
	345 Move X22, [X0]
	346 Call 0x3EB2AE0
	347 Move X21, 0x224F000
	348 Move X26, 0x224F000
	349 Move X21, [X21+4048]
	350 Move X26, [X26+4088]
	351 Move W23, W31
	352 Move X22, X31
	353 Move X8, 0x224F000
	354 Move X8, [X8+4048]
	355 Move X1, [X8]
	356 Add X0, X31, 32
	357 Call Enumerator<Object>.Dispose, X0
	358 Compare X22, 0
	359 JumpIfEqual {389}
	360 Move X0, X22
	361 Call 0x1C17F18
	362 Move X21, X1
	363 Move X20, X0
	364 Move X21, X1
	365 Move X20, X0
	366 NotImplemented "Instruction CMP not yet implemented."
	367 Move X0, X20
	368 Call 0x3EB2AD0
	369 Move X22, [X0]
	370 Call 0x3EB2AE0
	371 Move X21, 0x224F000
	372 Move X26, 0x224F000
	373 Move X21, [X21+4048]
	374 Move X26, [X26+4088]
	375 Move X22, X31
	376 Move X8, 0x224F000
	377 Move X8, [X8+4048]
	378 Move X1, [X8]
	379 Add X0, X31, 32
	380 Call Enumerator<Object>.Dispose, X0
	381 Compare X22, 0
	382 JumpIfEqual {389}
	383 Move X0, X22
	384 Call 0x1C17F18
	385 Move X21, X1
	386 Move X20, X0
	387 Move X21, X1
	388 Move X20, X0
	389 NotImplemented "Instruction CMP not yet implemented."
	390 Move X0, X20
	391 Call 0x3EB2AD0
	392 Move X21, [X0]
	393 Call 0x3EB2AE0
	394 Move X21, X31
	395 Move X20, X0
	396 Move X8, [X19+224]
	397 Compare X8, 0
	398 JumpIfNotEqual {400}
	399 Call 0x1C17F20
	400 Move W2, [X8+24]
	401 Move W9, [X8+28]
	402 Add W9, W9, 1
	403 NotImplemented "Instruction CMP not yet implemented."
	404 Move [X8+24], W31
	405 Move [X8+28], W9
	406 Move X0, [X8+16]
	407 Move W1, W31
	408 Move X3, X31
	409 Call Array.Clear, X0, X1, X2
	410 Compare X21, 0
	411 JumpIfNotEqual {414}
	412 Move X0, X20
	413 Call 0x1D2D690
	414 Move X0, X21
	415 Call 0x1C17F18
	416 Call 0x1991590

Method: System.Boolean Fusion.Simulation.ICallbacks.CreateRemotePrefab(Fusion.NetworkObjectMeta meta)

Disassembly:
	0x01EABD44 LDP X24, X23, [X31 + 0x10]
	0x01EABD48 LDR X30, [X31], #0x40
	0x01EABD4C RET
	0x01EABD50 BL 0x1C16F20
	0x01EABD54 B 0x1EABD60
	0x01EABD58 B 0x1EABD60
	0x01EABD5C B 0x1EABD60
	0x01EABD60 MOV X20, X0
	0x01EABD64 CMP W1, 0x1
	0x01EABD68 B.NE 0x1EABE08
	0x01EABD6C MOV X0, X20
	0x01EABD70 BL 0x3EB1AD0
	0x01EABD74 MOV X20, X0
	0x01EABD78 ADRP X0, 0x2248000
	0x01EABD7C LDR X0, [X0 + 0x7D0]
	0x01EABD80 BL 0x1C16D08
	0x01EABD84 LDR X8, [X20]
	0x01EABD88 LDR X1, [X8]
	0x01EABD8C BL 0x1C17270
	0x01EABD90 TBZ X0, 0x0, 0x1EABDE0
	0x01EABD94 LDR X20, [X20]
	0x01EABD98 BL 0x3EB1AE0
	0x01EABD9C ADRP X0, 0x2250000
	0x01EABDA0 LDR X0, [X0 + 0x8B0]
	0x01EABDA4 BL 0x1C16D08
	0x01EABDA8 LDR W8, [X0 + 0xE0]
	0x01EABDAC CBNZ W8, 0x1EABDB4
	0x01EABDB0 BL 0x1C16DFC
	0x01EABDB4 ADRP X0, 0x2253000
	0x01EABDB8 LDR X0, [X0 + 0x868]
	0x01EABDBC BL 0x1C16D08
	0x01EABDC0 MOV X2, X0
	0x01EABDC4 MOV X0, X19
	0x01EABDC8 MOV X1, X20
	0x01EABDCC LDP X20, X19, [X31 + 0x30]
	0x01EABDD0 LDP X22, X21, [X31 + 0x20]
	0x01EABDD4 LDP X24, X23, [X31 + 0x10]
	0x01EABDD8 LDR X30, [X31], #0x40
	0x01EABDDC B 0x2213878
	0x01EABDE0 MOVZ W0, 0x8
	0x01EABDE4 BL 0x3EB1AF0
	0x01EABDE8 LDR X8, [X20]
	0x01EABDEC STR X8, [X0]
	0x01EABDF0 ADRP X1, 0x2009000
	0x01EABDF4 ADD X1, X1, 0xE58
	0x01EABDF8 MOV X2, X31
	0x01EABDFC BL 0x3EB1B00
	0x01EABE00 MOV X20, X0
	0x01EABE04 BL 0x3EB1AE0
	0x01EABE08 MOV X0, X20
	0x01EABE0C BL 0x1D2C690
	0x01EABE10 BL 0x1990590
	0x01EABE14 SUB X31, X31, 0x80
	0x01EABE18 STP X29, X30, [X31 + 0x20]
	0x01EABE1C STP X28, X27, [X31 + 0x30]
	0x01EABE20 STP X26, X25, [X31 + 0x40]
	0x01EABE24 STP X24, X23, [X31 + 0x50]
	0x01EABE28 STP X22, X21, [X31 + 0x60]
	0x01EABE2C STP X20, X19, [X31 + 0x70]
	0x01EABE30 ADRP X21, 0x252E000
	0x01EABE34 LDRB W8, [X21 + 0x37E]
	0x01EABE38 MOV X20, X1
	0x01EABE3C MOV X19, X0
	0x01EABE40 TBNZ X8, 0x0, 0x1EABE94
	0x01EABE44 ADRP X0, 0x2248000
	0x01EABE48 LDR X0, [X0 + 0xE00]
	0x01EABE4C BL 0x1C16CF4
	0x01EABE50 ADRP X0, 0x2253000
	0x01EABE54 LDR X0, [X0 + 0xE30]
	0x01EABE58 BL 0x1C16CF4
	0x01EABE5C ADRP X0, 0x2253000
	0x01EABE60 LDR X0, [X0 + 0xE38]
	0x01EABE64 BL 0x1C16CF4
	0x01EABE68 ADRP X0, 0x2248000
	0x01EABE6C LDR X0, [X0 + 0xE18]
	0x01EABE70 BL 0x1C16CF4
	0x01EABE74 ADRP X0, 0x224B000
	0x01EABE78 LDR X0, [X0 + 0xA78]
	0x01EABE7C BL 0x1C16CF4
	0x01EABE80 ADRP X0, 0x224B000
	0x01EABE84 LDR X0, [X0 + 0xE40]
	0x01EABE88 BL 0x1C16CF4
	0x01EABE8C MOVZ W8, 0x1
	0x01EABE90 STRB W8, [X21 + 0x37E]
	0x01EABE94 STP X31, X31, [X31 + 0x10]
	0x01EABE98 LDR W22, [X20 + 0x14]
	0x01EABE9C TBNZ X22, 0x0, 0x1EABEF4
	0x01EABEA0 TBNZ X22, 0x8, 0x1EABF00
	0x01EABEA4 ADRP X27, 0x224B000
	0x01EABEA8 LDR X27, [X27 + 0xE40]
	0x01EABEAC LDUR X26, [X20 + 0x1C]
	0x01EABEB0 LDR X0, [X27]
	0x01EABEB4 LDR W8, [X0 + 0xE0]
	0x01EABEB8 CBNZ W8, 0x1EABEC0
	0x01EABEBC BL 0x1C16DFC
	0x01EABEC0 MOV X0, X31
	0x01EABEC4 BL 0x1E8D7EC
	0x01EABEC8 AND W28, W22, 0x30
	0x01EABECC CBZ W28, 0x1EABF28
	0x01EABED0 LDR X0, [X19 + 0x50]
	0x01EABED4 LDR W21, [X20 + 0x18]
	0x01EABED8 CBZ X0, 0x1EABF34
	0x01EABEDC LDR X8, [X0]
	0x01EABEE0 LDR X1, [X8 + 0x270]
	0x01EABEE4 LDR X9, [X8 + 0x268]
	0x01EABEE8 BLR X9
	0x01EABEEC AND X22, X0, 0x0
	0x01EABEF0 B 0x1EABF38
	0x01EABEF4 MOV X0, X19
	0x01EABEF8 MOV X1, X20
	0x01EABEFC BL 0x1EABC38
	0x01EABF00 MOV W8, W31
	0x01EABF04 LDP X20, X19, [X31 + 0x70]
	0x01EABF08 LDP X22, X21, [X31 + 0x60]
	0x01EABF0C LDP X24, X23, [X31 + 0x50]
	0x01EABF10 LDP X26, X25, [X31 + 0x40]
	0x01EABF14 LDP X28, X27, [X31 + 0x30]
	0x01EABF18 LDP X29, X30, [X31 + 0x20]
	0x01EABF1C MOV W0, W8
	0x01EABF20 ADD X31, X31, 0x80
	0x01EABF24 RET
	0x01EABF28 MOV X21, X0
	0x01EABF2C MOV W29, W31
	0x01EABF30 B 0x1EABF90
	0x01EABF34 MOV X22, X31
	0x01EABF38 LDR X0, [X27]
	0x01EABF3C LDR W8, [X0 + 0xE0]
	0x01EABF40 CBNZ W8, 0x1EABF48
	0x01EABF44 BL 0x1C16DFC
	0x01EABF48 CMP W21, W22
	0x01EABF4C B.NE 0x1EABF58
	0x01EABF50 MOVZ W8, 0x1
	0x01EABF54 B 0x1EABF88
	0x01EABF58 LDR X0, [X27]
	0x01EABF5C LDR W8, [X0 + 0xE0]
	0x01EABF60 CBNZ W8, 0x1EABF68
	0x01EABF64 BL 0x1C16DFC
	0x01EABF68 CBZ W21, 0x1EABF74
	0x01EABF6C MOV W8, W31
	0x01EABF70 B 0x1EABF88
	0x01EABF74 LDR X0, [X19 + 0x50]
	0x01EABF78 CBZ X0, 0x1EAC800
	0x01EABF7C MOV X1, X31
	0x01EABF80 BL 0x1EBDF30
	0x01EABF84 AND W8, W0, 0x1
	0x01EABF88 CMP W8, 0x0
	0x01EABF8C CSET W29, NE
	0x01EABF90 LDRB W8, [X20 + 0x14]
	0x01EABF94 UBFM X23, X26, 0x30, 0x3F
	0x01EABF98 TBNZ X8, 0x2, 0x1EAC200
	0x01EABF9C LDR X0, [X19 + 0x50]
	0x01EABFA0 CBZ X0, 0x1EAC7E8
	0x01EABFA4 AND X1, X26, 0x0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x252F000
	009 Move W8, [X21+889]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x2254000
	017 Move X0, [X0+3608]
	018 Call 0x1C17CF4
	019 Move X0, 0x224E000
	020 Move X0, [X0+1440]
	021 Call 0x1C17CF4
	022 Move X0, 0x224C000
	023 Move X0, [X0+920]
	024 Call 0x1C17CF4
	025 Move X0, 0x2254000
	026 Move X0, [X0+3616]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+889], W8
	030 Move [X31+8], X31
	031 Compare X20, 0
	032 JumpIfEqual {184}
	033 Move X8, [X20+176]
	034 Compare X8, 0
	035 JumpIfEqual {184}
	036 Move X0, [X19+80]
	037 Compare X0, 0
	038 JumpIfEqual {184}
	039 Move W1, [X8]
	040 Add X2, X31, 8
	041 Move X3, X31
	042 Call Simulation.TryGetInstance, X0, X1, X2
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {93}
	047 Move X8, [X20+176]
	048 Compare X8, 0
	049 JumpIfEqual {184}
	050 Move W8, [X8+24]
	051 Move TEMP, X8
	052 And TEMP, TEMP, 32
	053 Compare TEMP, 32
	054 JumpIfEqual {93}
	055 Add X2, X31, 8
	056 Move X0, X19
	057 Move X1, X20
	058 Call NetworkRunner.TryResolveRemotePrefabInstance, X0, X1, X2
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {183}
	063 Move X8, [X31+8]
	064 Compare X8, 0
	065 JumpIfEqual {90}
	066 Move X0, X20
	067 Move X1, X31
	068 Call NetworkObjectMeta.get_Type, X0
	069 Move X21, X0
	070 Move X0, X20
	071 Move X1, X31
	072 Call NetworkObjectMeta.get_Id, X0
	073 Move X8, 0x2254000
	074 Move X9, 0x2254000
	075 Move X8, [X8+3616]
	076 Move X9, [X9+3608]
	077 And X3, X0, 0
	078 Move W0, 1
	079 Move X1, [X8]
	080 Move X4, [X9]
	081 Move X2, X21
	082 Call Assert.Always, X0, X1, X2, X3
	083 Move X8, [X31+8]
	084 Compare X8, 0
	085 JumpIfEqual {184}
	086 Move X8, [X8+32]
	087 Compare X8, 0
	088 JumpIfEqual {102}
	089 Move W22, [X8]
	090 Move W8, [X20+164]
	091 Or W8, W8, 1
	092 Move [X20+164], W8
	093 Move W0, 1
	094 Move X20, [X31+48]
	095 Move X19, [X31+56]
	096 Move X22, [X31+32]
	097 Move X21, [X31+40]
	098 Move X30, [X31+16]
	099 Move X23, [X31+24]
	100 Add X31, X31, 64
	101 Return X0
	102 Move W22, W31
	103 Move X21, 0x224C000
	104 Move X21, [X21+920]
	105 Move X0, [X21]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Compare W22, 0
	111 JumpIfEqual {130}
	112 Move X8, [X31+8]
	113 Compare X8, 0
	114 JumpIfEqual {184}
	115 Move X8, [X8+32]
	116 Compare X8, 0
	117 JumpIfEqual {119}
	118 Move W22, [X8]
	119 Move W22, W31
	120 Move X8, [X20+176]
	121 Compare X8, 0
	122 JumpIfEqual {184}
	123 Move X0, [X21]
	124 Move W23, [X8]
	125 Move W9, [X0+224]
	126 Compare W9, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X8, [X20+176]
	131 Compare X8, 0
	132 JumpIfEqual {184}
	133 Move X0, [X21]
	134 Move W21, [X8+16]
	135 Move W9, [X0+224]
	136 Compare W9, 0
	137 JumpIfNotEqual {139}
	138 Call 0x1C17DFC
	139 Move X2, [X31+8]
	140 Compare W21, 0
	141 JumpIfEqual {147}
	142 Compare X2, 0
	143 JumpIfEqual {184}
	144 Move W8, [X2+96]
	145 Or W8, W8, 4
	146 Move [X2+96], W8
	147 Move X0, X19
	148 Move X1, X20
	149 Move X3, X31
	150 Move W4, W31
	151 Move X5, X31
	152 Call NetworkRunner.InitializeNetworkObjectInstance, X0, X1, X2, X3, X4, X5
	153 Move X0, [X19+224]
	154 Compare X0, 0
	155 JumpIfEqual {184}
	156 Move X9, 0x224E000
	157 Move X1, [X31+8]
	158 Move X9, [X9+1440]
	159 Move W10, [X0+28]
	160 Move X8, [X0+16]
	161 Move X9, [X9]
	162 Add W10, W10, 1
	163 Move [X0+28], W10
	164 Compare X8, 0
	165 JumpIfEqual {184}
	166 NotImplemented "Instruction LDRSW not yet implemented."
	167 Move W11, [X8+24]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Add W9, W10, 1
	170 Add X8, X8, X10
	171 Move [X0+24], W9
	172 Move [X8+32], X1
	173 Move X8, [X9+32]
	174 Move X8, [X8+192]
	175 Move X2, [X8+112]
	176 Call List`1<Object>.AddWithResize, X0, X1
	177 Move X8, [X31+8]
	178 Compare X8, 0
	179 JumpIfEqual {183}
	180 Move W8, [X8+96]
	181 And W31, W8, 2
	182 NotImplemented "Instruction CSET not yet implemented."
	183 Move W0, W31
	184 Call 0x1C17F20

Method: System.Boolean Fusion.Simulation.ICallbacks.DestroyRemotePrefab(Fusion.NetworkId id, System.Boolean exists)

Disassembly:
	0x01EABFA8 ADD X2, X31, 0x10
	0x01EABFAC MOV X3, X31
	0x01EABFB0 BL 0x1EC0278
	0x01EABFB4 TBZ X0, 0x0, 0x1EAC2B8
	0x01EABFB8 LDR X8, [X31 + 0x10]
	0x01EABFBC CBZ X8, 0x1EAC7F0
	0x01EABFC0 LDR X22, [X8 + 0xB8]
	0x01EABFC4 CBZ X22, 0x1EAC2C0
	0x01EABFC8 LDR X8, [X22 + 0x78]
	0x01EABFCC CBZ X8, 0x1EAC7F4
	0x01EABFD0 LDR W10, [X8 + 0x18]
	0x01EABFD4 UBFM X9, X26, 0x20, 0x2F
	0x01EABFD8 CMP W9, W10
	0x01EABFDC B.CS 0x1EAC7F8
	0x01EABFE0 ADD X8, X8, X9, 0x3, LSL
	0x01EABFE4 MOV X24, X23
	0x01EABFE8 LDR X23, [X8 + 0x20]
	0x01EABFEC CBZ X23, 0x1EAC2B8
	0x01EABFF0 LDRB W8, [X23 + 0x30]
	0x01EABFF4 TBNZ X8, 0x3, 0x1EAC2B8
	0x01EABFF8 MOV X25, X23
	0x01EABFFC LDR X8, [X25 + 0x60]!
	0x01EAC000 CBNZ X8, 0x1EAC048
	0x01EAC004 MOV X0, X23
	0x01EAC008 MOV X1, X31
	0x01EAC00C BL 0x33BE520
	0x01EAC010 ADRP X8, 0x224A000
	0x01EAC014 LDR X8, [X8 + 0xA78]
	0x01EAC018 MOV X26, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move [X31+8], X31
	005 Move X19, X0
	006 Move X0, [X0+80]
	007 Compare X0, 0
	008 JumpIfEqual {36}
	009 Move W20, W2
	010 And X1, X1, 0
	011 Add X2, X31, 8
	012 Move X3, X31
	013 Call Simulation.TryGetInstance, X0, X1, X2
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {26}
	018 Move X1, [X31+8]
	019 Move TEMP, X20
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {27}
	023 Move W2, 4
	024 Move X0, X19
	025 Call NetworkRunner.Destroy, X0, X1, X2
	026 Move W0, W31
	027 Move X0, X19
	028 Move W2, W31
	029 Move W3, W31
	030 Call NetworkRunner.DetachInstance, X0, X1, X2, X3
	031 Move W0, 1
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0
	036 Call 0x1C17F20

Method: System.Void ProcessSpawnQueue()

Disassembly:
	0x01EA3A3C LDR X24, [X24 + 0xAD8]
	0x01EA3A40 LDR W11, [X8 + 0x1C]
	0x01EA3A44 LDR X9, [X8 + 0x10]
	0x01EA3A48 LDR X10, [X24]
	0x01EA3A4C ADD W11, W11, 0x1
	0x01EA3A50 STR W11, [X8 + 0x1C]
	0x01EA3A54 CBZ X9, 0x1EA3BEC
	0x01EA3A58 LDR W11, [X9 + 0x18]
	0x01EA3A5C CMP W22, W11
	0x01EA3A60 B.CS 0x1EA3A7C
	0x01EA3A64 SXTW X10, W22
	0x01EA3A68 ADD W11, W22, 0x1
	0x01EA3A6C STR W11, [X8 + 0x18]
	0x01EA3A70 ADD X8, X9, X10, 0x2, LSL
	0x01EA3A74 STR W1, [X8 + 0x20]
	0x01EA3A78 B 0x1EA3A90
	0x01EA3A7C LDR X9, [X10 + 0x20]
	0x01EA3A80 MOV X0, X8
	0x01EA3A84 LDR X9, [X9 + 0xC0]
	0x01EA3A88 LDR X2, [X9 + 0x70]
	0x01EA3A8C BL 0x3016AB0
	0x01EA3A90 LDR W0, [X19 + 0x60]
	0x01EA3A94 MOVZ W1, 0x1000000
	0x01EA3A98 MOV X2, X31
	0x01EA3A9C BL 0x1E93D90
	0x01EA3AA0 TBZ X0, 0x0, 0x1EA3B48
	0x01EA3AA4 LDR X25, [X19 + 0x70]
	0x01EA3AA8 CBZ X25, 0x1EA3BEC
	0x01EA3AAC LDR W8, [X25 + 0x18]
	0x01EA3AB0 CMP W8, 0x1
	0x01EA3AB4 B.LT 0x1EA3B48
	0x01EA3AB8 MOV W26, W31
	0x01EA3ABC CMP W26, W8
	0x01EA3AC0 B.CS 0x1EA3C34
	0x01EA3AC4 ADD X8, X25, W26, 0x3, SXTW
	0x01EA3AC8 LDR X8, [X8 + 0x20]
	0x01EA3ACC CBZ X8, 0x1EA3BEC
	0x01EA3AD0 LDR X8, [X8 + 0x20]
	0x01EA3AD4 CBZ X8, 0x1EA3AE0
	0x01EA3AD8 LDR W1, [X8]
	0x01EA3ADC B 0x1EA3AE4
	0x01EA3AE0 MOV X1, X31
	0x01EA3AE4 LDR X0, [X21 + 0x70]
	0x01EA3AE8 CBZ X0, 0x1EA3BEC
	0x01EA3AEC LDR W10, [X0 + 0x1C]
	0x01EA3AF0 LDR X8, [X0 + 0x10]
	0x01EA3AF4 LDR X9, [X24]
	0x01EA3AF8 ADD W10, W10, 0x1
	0x01EA3AFC STR W10, [X0 + 0x1C]
	0x01EA3B00 CBZ X8, 0x1EA3BEC
	0x01EA3B04 LDRSW X10, [X0 + 0x18]
	0x01EA3B08 LDR W11, [X8 + 0x18]
	0x01EA3B0C CMP W10, W11
	0x01EA3B10 B.CS 0x1EA3B28
	0x01EA3B14 ADD W9, W10, 0x1
	0x01EA3B18 ADD X8, X8, X10, 0x2, LSL
	0x01EA3B1C STR W9, [X0 + 0x18]
	0x01EA3B20 STR W1, [X8 + 0x20]
	0x01EA3B24 B 0x1EA3B38
	0x01EA3B28 LDR X8, [X9 + 0x20]
	0x01EA3B2C LDR X8, [X8 + 0xC0]
	0x01EA3B30 LDR X2, [X8 + 0x70]
	0x01EA3B34 BL 0x3016AB0
	0x01EA3B38 LDR W8, [X25 + 0x18]
	0x01EA3B3C ADD W26, W26, 0x1
	0x01EA3B40 CMP W26, W8
	0x01EA3B44 B.LT 0x1EA3ABC
	0x01EA3B48 LDR X8, [X21 + 0x70]
	0x01EA3B4C CBZ X8, 0x1EA3BEC
	0x01EA3B50 LDR W24, [X8 + 0x18]
	0x01EA3B54 MOVZ W1, 0x1
	0x01EA3B58 MOV W0, W20
	0x01EA3B5C MOV X2, X31
	0x01EA3B60 BL 0x1E94DA0
	0x01EA3B64 AND W2, W0, 0x1
	0x01EA3B68 AND W3, W23, 0x1
	0x01EA3B6C MOV X0, X21
	0x01EA3B70 MOV X1, X19
	0x01EA3B74 BL 0x1E9FF74
	0x01EA3B78 TBZ X23, 0x0, 0x1EA3C08
	0x01EA3B7C LDR X0, [X21 + 0x70]
	0x01EA3B80 CBZ X0, 0x1EA3BEC
	0x01EA3B84 ADRP X27, 0x225A000
	0x01EA3B88 LDR X27, [X27 + 0xFD8]
	0x01EA3B8C SUBS W23, W24, W22
	0x01EA3B90 CSEL W26, W22, W24, LT
	0x01EA3B94 MOV W24, W22
	0x01EA3B98 CMP W26, W24
	0x01EA3B9C B.EQ 0x1EA3BF0
	0x01EA3BA0 LDR X2, [X27]
	0x01EA3BA4 MOV W1, W24
	0x01EA3BA8 BL 0x30167BC

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+224], X29
	003 Move [X31+240], X30
	004 Move [X31+248], X21
	005 Move [X31+256], X20
	006 Move [X31+264], X19
	007 Move X21, 0x2537000
	008 Move W8, [X21+890]
	009 Move X19, X0
	010 Add X20, X31, 128
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x2254000
	016 Move X0, [X0+3648]
	017 Call 0x1C17CF4
	018 Move X0, 0x225C000
	019 Move X0, [X0+2688]
	020 Call 0x1C17CF4
	021 Move X0, 0x225C000
	022 Move X0, [X0+2696]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+890], W8
	026 NotImplemented "Instruction MOVI not yet implemented."
	027 Move X0, X19
	028 Move [X31+208], X31
	029 Move [X31+96], X31
	030 Move [X31+104], X31
	031 Move [X20+48], V0
	032 Move [X20+56], V0
	033 Move [X20+16], V0
	034 Move [X20+24], V0
	035 Move [X31+8], V0
	036 Move [X31+112], X31
	037 Call NetworkRunner.get_IsSceneManagerBusy, X0
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {103}
	042 Move X0, [X19+80]
	043 Compare X0, 0
	044 JumpIfEqual {64}
	045 Move X8, [X0+88]
	046 Compare X8, 0
	047 JumpIfEqual {102}
	048 Move W8, [X8+56]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X8, [X0]
	051 Move X9, [X8+616]
	052 Move X1, [X8+624]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X8, 0x2254000
	055 Move X8, [X8+3648]
	056 Move X20, X0
	057 Move X8, [X8]
	058 Move W9, [X8+224]
	059 Compare W9, 0
	060 JumpIfNotEqual {63}
	061 Move X0, X8
	062 Call 0x1C17DFC
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X0, [X19+120]
	065 Compare X0, 0
	066 JumpIfEqual {102}
	067 Move W8, [X0+32]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X21, 0x225C000
	070 Move X21, [X21+2688]
	071 Add W20, W8, 1
	072 Move X1, [X21]
	073 Add X8, X31, 8
	074 Call Queue`1<SpawnArgs>.Dequeue, X0
	075 Add X0, X31, 128
	076 Add X1, X31, 8
	077 Move W2, 88
	078 Call 0x3EB2AC0
	079 Add X8, X31, 8
	080 Add X1, X31, 128
	081 Move X0, X19
	082 Call NetworkRunner.SpawnInternal, X0, X1
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 Move X8, [X31+24]
	085 Add X0, X31, 96
	086 Move X1, X31
	087 Move [X31+6], V0
	088 Move [X31+112], X8
	089 Call NetworkSpawnOp.get_IsSpawned, X0
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {97}
	094 Add X0, X31, 96
	095 Move X1, X31
	096 Call NetworkSpawnOp.get_IsQueued, X0
	097 Subtract W20, W20, 1
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X0, [X19+120]
	100 Compare X0, 0
	101 JumpIfNotEqual {72}
	102 Call 0x1C17F20
	103 Move X20, [X31+256]
	104 Move X19, [X31+264]
	105 Move X30, [X31+240]
	106 Move X21, [X31+248]
	107 Move X29, [X31+224]
	108 Add X31, X31, 272
	109 Return 

Method: System.Void Fusion.Simulation.ICallbacks.OnBeforeCopyPreviousState()

Disassembly:
	0x01EAC824 BL 0x1C16F20
	0x01EAC828 BL 0x1C16F20
	0x01EAC82C BL 0x1C16F20

ISIL:
	001 Move X0, [X0+96]
	002 Move X1, X31
	003 Call CallbackInterfaceInvoker.IBeforeCopyPreviousState, X0
	004 Return 

Method: System.Void Fusion.Simulation.ICallbacks.OnTick()

Disassembly:
	0x01EAC830 BL 0x1C16F20
	0x01EAC834 BL 0x1C16F20
	0x01EAC838 BL 0x1C16F20
	0x01EAC83C BL 0x1C16F20
	0x01EAC840 BL 0x1C16F20
	0x01EAC844 BL 0x1C16F20
	0x01EAC848 BL 0x1C16F20
	0x01EAC84C BL 0x1C16F20
	0x01EAC850 BL 0x1C16F20
	0x01EAC854 BL 0x1C16F20
	0x01EAC858 BL 0x1C16F20
	0x01EAC85C BL 0x1C16F20
	0x01EAC860 BL 0x1C16F20
	0x01EAC864 BL 0x1C16F20
	0x01EAC868 BL 0x1C16F20
	0x01EAC86C B 0x1EACAD0
	0x01EAC870 B 0x1EACAD0
	0x01EAC874 B 0x1EACAD0
	0x01EAC878 B 0x1EACAD0
	0x01EAC87C B 0x1EACAD0
	0x01EAC880 B 0x1EACAD0
	0x01EAC884 B 0x1EACAD0
	0x01EAC888 B 0x1EACAD0
	0x01EAC88C B 0x1EAC908
	0x01EAC890 B 0x1EACAD0
	0x01EAC894 B 0x1EACAD0
	0x01EAC898 B 0x1EACAD0
	0x01EAC89C B 0x1EACAD0
	0x01EAC8A0 B 0x1EACAD0
	0x01EAC8A4 B 0x1EACAD0
	0x01EAC8A8 B 0x1EACAD0
	0x01EAC8AC B 0x1EACAD0
	0x01EAC8B0 B 0x1EACAD0
	0x01EAC8B4 B 0x1EACAD0
	0x01EAC8B8 B 0x1EAC908
	0x01EAC8BC B 0x1EAC908
	0x01EAC8C0 B 0x1EAC908
	0x01EAC8C4 B 0x1EACAD0
	0x01EAC8C8 B 0x1EACAD0
	0x01EAC8CC B 0x1EAC908
	0x01EAC8D0 B 0x1EACAD0
	0x01EAC8D4 B 0x1EACAD0
	0x01EAC8D8 B 0x1EACAD0
	0x01EAC8DC B 0x1EACAD0
	0x01EAC8E0 B 0x1EAC908
	0x01EAC8E4 B 0x1EAC908
	0x01EAC8E8 B 0x1EAC908
	0x01EAC8EC B 0x1EACAD0
	0x01EAC8F0 B 0x1EACAD0
	0x01EAC8F4 B 0x1EACAD0
	0x01EAC8F8 B 0x1EACAD0
	0x01EAC8FC B 0x1EACA24
	0x01EAC900 B 0x1EACAD0
	0x01EAC904 B 0x1EAC908
	0x01EAC908 MOV X22, X1
	0x01EAC90C MOV X24, X0
	0x01EAC910 CMP W22, 0x1
	0x01EAC914 B.NE 0x1EAC92C
	0x01EAC918 MOV X0, X24
	0x01EAC91C BL 0x3EB1AD0
	0x01EAC920 LDR X20, [X0]
	0x01EAC924 BL 0x3EB1AE0
	0x01EAC928 B 0x1EAC770
	0x01EAC92C MOV X20, X31
	0x01EAC930 CBZ X21, 0x1EAC994
	0x01EAC934 ADRP X10, 0x2247000
	0x01EAC938 LDR X8, [X21]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move X0, X31
	008 Call Time.get_fixedDeltaTime
	009 Move X0, [X19+80]
	010 Move V8, V0
	011 Compare X0, 0
	012 JumpIfEqual {42}
	013 Move X1, X31
	014 Call Simulation.get_DeltaTime, X0
	015 Move X0, X31
	016 Call Time.set_fixedDeltaTime, V0
	017 Move X0, [X19+80]
	018 Compare X0, 0
	019 JumpIfEqual {43}
	020 Move X19, [X19+96]
	021 Move W21, [X0+76]
	022 Move W20, [X0+80]
	023 Move X1, X31
	024 Call Simulation.get_Topology, X0
	025 Compare X19, 0
	026 JumpIfEqual {44}
	027 Move W3, W0
	028 Move X0, X19
	029 Move W1, W20
	030 Move W2, W21
	031 Move X4, X31
	032 Call SimulationBehaviourUpdater.InvokeFixedUpdateNetwork, X0, X1, X2, X3
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X30, [X31+16]
	036 Move X21, [X31+24]
	037 Move V0, V8
	038 Move X0, X31
	039 Move V8, [X31+48]
	040 Call Time.set_fixedDeltaTime, V0
	041 Return 
	042 Call 0x1C17F20
	043 Call 0x1C17F20
	044 Call 0x1C17F20
	045 Move X19, X0
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, X19
	048 Call 0x3EB2AD0
	049 Move X20, [X0]
	050 Call 0x3EB2AE0
	051 Move V0, V8
	052 Move X0, X31
	053 Call Time.set_fixedDeltaTime, V0
	054 Compare X20, 0
	055 JumpIfNotEqual {63}
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X30, [X31+16]
	059 Move X21, [X31+24]
	060 Move V8, [X31+48]
	061 Return 
	062 Move X20, X31
	063 Move X0, X20
	064 Call 0x1C17F18
	065 Move X19, X0
	066 Move V0, V8
	067 Move X0, X31
	068 Call Time.set_fixedDeltaTime, V0
	069 Compare X20, 0
	070 JumpIfNotEqual {73}
	071 Move X0, X19
	072 Call 0x1D2D690
	073 Move X0, X20
	074 Call 0x1C17F18
	075 Call 0x1991590

Method: System.Void Fusion.Simulation.ICallbacks.OnServerStart()

Disassembly:
	0x01EAC93C LDR X10, [X10 + 0xE00]
	0x01EAC940 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move W1, 1
	002 Call NetworkRunner.ConsumeInitialSceneInfo, X0, X1
	003 Return 

Method: System.Void Fusion.Simulation.ICallbacks.OnClientStart()

Disassembly:
	0x01EAC944 LDR X1, [X10]
	0x01EAC948 CBZ X9, 0x1EAC96C
	0x01EAC94C LDR X10, [X8 + 0xB0]
	0x01EAC950 ADD X10, X10, 0x8
	0x01EAC954 LDUR X11, [X10 - 0x8]
	0x01EAC958 CMP X11, X1
	0x01EAC95C B.EQ 0x1EAC97C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call NetworkRunner.get_IsSharedModeMasterClient, X0
	005 And W1, W0, 1
	006 Move X0, X19
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Call NetworkRunner.ConsumeInitialSceneInfo, X0, X1
	010 Return 

Method: System.Void Fusion.Simulation.ICallbacks.OnInputMissing(Fusion.SimulationInput input)

Disassembly:
	0x01EAC960 SUBS X9, X9, 0x1
	0x01EAC964 ADD X10, X10, 0x10
	0x01EAC968 B.NE 0x1EAC954
	0x01EAC96C MOV X0, X21
	0x01EAC970 MOV W2, W31
	0x01EAC974 BL 0x1C5C788
	0x01EAC978 B 0x1EAC988
	0x01EAC97C LDRSW X9, [X10]
	0x01EAC980 ADD X8, X8, X9, 0x4, LSL
	0x01EAC984 ADD X0, X8, 0x138
	0x01EAC988 LDP X8, X1, [X0]
	0x01EAC98C MOV X0, X21
	0x01EAC990 BLR X8
	0x01EAC994 CBZ X20, 0x1EACAD8
	0x01EAC998 MOV X0, X20
	0x01EAC99C BL 0x1C16F18
	0x01EAC9A0 MOV X22, X1
	0x01EAC9A4 MOV X24, X0
	0x01EAC9A8 CBNZ X21, 0x1EAC934
	0x01EAC9AC B 0x1EAC994
	0x01EAC9B0 B 0x1EACAD0
	0x01EAC9B4 B 0x1EACAD0
	0x01EAC9B8 B 0x1EACAD0
	0x01EAC9BC B 0x1EACAD0
	0x01EAC9C0 B 0x1EACAD0
	0x01EAC9C4 B 0x1EACAD0
	0x01EAC9C8 B 0x1EACAD0
	0x01EAC9CC B 0x1EACAD0
	0x01EAC9D0 B 0x1EACAD0
	0x01EAC9D4 B 0x1EACAD0
	0x01EAC9D8 B 0x1EACAD0
	0x01EAC9DC B 0x1EACAD0
	0x01EAC9E0 B 0x1EACAD0
	0x01EAC9E4 B 0x1EACAD0
	0x01EAC9E8 B 0x1EACAD0
	0x01EAC9EC B 0x1EACAD0
	0x01EAC9F0 B 0x1EACAD0
	0x01EAC9F4 B 0x1EACA24
	0x01EAC9F8 B 0x1EACAD0
	0x01EAC9FC B 0x1EACAD0
	0x01EACA00 B 0x1EACA24
	0x01EACA04 B 0x1EACA24
	0x01EACA08 B 0x1EACAD0
	0x01EACA0C B 0x1EACAD0
	0x01EACA10 B 0x1EACA24
	0x01EACA14 B 0x1EACA24
	0x01EACA18 B 0x1EACA24
	0x01EACA1C B 0x1EACAD0
	0x01EACA20 B 0x1EACA24
	0x01EACA24 MOV X22, X1
	0x01EACA28 MOV X24, X0
	0x01EACA2C CMP W22, 0x1
	0x01EACA30 B.NE 0x1EACA4C
	0x01EACA34 MOV X0, X24
	0x01EACA38 BL 0x3EB1AD0
	0x01EACA3C LDR X23, [X0]
	0x01EACA40 BL 0x3EB1AE0
	0x01EACA44 MOVZ W22, 0x1
	0x01EACA48 B 0x1EAC484
	0x01EACA4C MOV X23, X31
	0x01EACA50 CBZ X25, 0x1EACAB4
	0x01EACA54 ADRP X10, 0x2247000
	0x01EACA58 LDR X8, [X25]
	0x01EACA5C LDR X10, [X10 + 0xE00]
	0x01EACA60 LDRH W9, [X8 + 0x12E]
	0x01EACA64 LDR X1, [X10]
	0x01EACA68 CBZ X9, 0x1EACA8C
	0x01EACA6C LDR X10, [X8 + 0xB0]
	0x01EACA70 ADD X10, X10, 0x8
	0x01EACA74 LDUR X11, [X10 - 0x8]
	0x01EACA78 CMP X11, X1
	0x01EACA7C B.EQ 0x1EACA9C
	0x01EACA80 SUBS X9, X9, 0x1
	0x01EACA84 ADD X10, X10, 0x10
	0x01EACA88 B.NE 0x1EACA74
	0x01EACA8C MOV X0, X25
	0x01EACA90 MOV W2, W31
	0x01EACA94 BL 0x1C5C788
	0x01EACA98 B 0x1EACAA8
	0x01EACA9C LDRSW X9, [X10]
	0x01EACAA0 ADD X8, X8, X9, 0x4, LSL
	0x01EACAA4 ADD X0, X8, 0x138
	0x01EACAA8 LDP X8, X1, [X0]
	0x01EACAAC MOV X0, X25
	0x01EACAB0 BLR X8
	0x01EACAB4 CBZ X23, 0x1EACAD8
	0x01EACAB8 MOV X0, X23

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0x252E000
	012 Move W8, [X21+891]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x2253000
	020 Move X0, [X0+1896]
	021 Call 0x1C17CF4
	022 Move X0, 0x2253000
	023 Move X0, [X0+1904]
	024 Call 0x1C17CF4
	025 Move X0, 0x2253000
	026 Move X0, [X0+1912]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+891], W8
	030 Move X0, [X20+104]
	031 Compare X0, 0
	032 JumpIfEqual {93}
	033 Move X26, 0x2253000
	034 Move X27, 0x2253000
	035 Move X26, [X26+1912]
	036 Move X27, [X27+1896]
	037 Move W21, W31
	038 Move W8, [X0+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X2, [X26]
	041 Move W1, W21
	042 Call List`1<Object>.get_Item, X0, X1
	043 Compare X19, 0
	044 JumpIfEqual {93}
	045 Move W23, [X19+24]
	046 Move X22, X0
	047 Move X0, X19
	048 Move X1, X31
	049 Call SimulationInput.get_Data, X0
	050 Move X8, [X20+80]
	051 Compare X8, 0
	052 JumpIfEqual {93}
	053 Move X8, [X8+88]
	054 Compare X8, 0
	055 JumpIfEqual {93}
	056 Move W1, [X8+16]
	057 Move X2, X31
	058 Call NetworkInput.FromRaw, X0, X1
	059 Compare X22, 0
	060 JumpIfEqual {93}
	061 Move X8, [X22]
	062 Move X25, X1
	063 Move X1, [X27]
	064 Move X24, X0
	065 NotImplemented "Instruction LDRH not yet implemented."
	066 Compare X9, 0
	067 JumpIfEqual {74}
	068 Move X10, [X8+176]
	069 Add X10, X10, 8
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Subtract X9, X9, 1
	073 Add X10, X10, 16
	074 Move W2, 5
	075 Move X0, X22
	076 Call 0x1C5D788
	077 Move W9, [X10]
	078 Add W9, W9, 5
	079 Add X8, X8, W9
	080 Add X0, X8, 312
	081 Move X8, [X0]
	082 Move X5, [X0+8]
	083 Move X0, X22
	084 Move X1, X20
	085 Move X2, X23
	086 Move X3, X24
	087 Move X4, X25
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move X0, [X20+104]
	090 Add W21, W21, 1
	091 Compare X0, 0
	092 JumpIfNotEqual {38}
	093 Call 0x1C17F20
	094 Move X20, [X31+64]
	095 Move X19, [X31+72]
	096 Move X22, [X31+48]
	097 Move X21, [X31+56]
	098 Move X24, [X31+32]
	099 Move X23, [X31+40]
	100 Move X26, [X31+16]
	101 Move X25, [X31+24]
	102 Move X30, [X31+80]
	103 Move X27, [X31+88]
	104 Return 

Method: System.Void Fusion.Simulation.ICallbacks.OnInput(Fusion.SimulationInput input)

Disassembly:
	0x01EACABC BL 0x1C16F18
	0x01EACAC0 MOV X22, X1
	0x01EACAC4 MOV X24, X0
	0x01EACAC8 CBNZ X25, 0x1EACA54
	0x01EACACC B 0x1EACAB4
	0x01EACAD0 MOV X22, X1
	0x01EACAD4 MOV X24, X0
	0x01EACAD8 CMP W22, 0x1
	0x01EACADC B.NE 0x1EACB70
	0x01EACAE0 MOV X0, X24
	0x01EACAE4 BL 0x3EB1AD0
	0x01EACAE8 MOV X20, X0
	0x01EACAEC ADRP X0, 0x2247000
	0x01EACAF0 LDR X0, [X0 + 0x7D0]
	0x01EACAF4 BL 0x1C16D08
	0x01EACAF8 LDR X8, [X20]
	0x01EACAFC LDR X1, [X8]
	0x01EACB00 BL 0x1C17270
	0x01EACB04 TBZ X0, 0x0, 0x1EACB48
	0x01EACB08 LDR X20, [X20]
	0x01EACB0C BL 0x3EB1AE0
	0x01EACB10 ADRP X0, 0x224F000
	0x01EACB14 LDR X0, [X0 + 0x8B0]
	0x01EACB18 BL 0x1C16D08
	0x01EACB1C LDR W8, [X0 + 0xE0]
	0x01EACB20 CBNZ W8, 0x1EACB28
	0x01EACB24 BL 0x1C16DFC
	0x01EACB28 ADRP X0, 0x2252000
	0x01EACB2C LDR X0, [X0 + 0x868]
	0x01EACB30 BL 0x1C16D08
	0x01EACB34 MOV X2, X0
	0x01EACB38 MOV X0, X19
	0x01EACB3C MOV X1, X20
	0x01EACB40 BL 0x2213878
	0x01EACB44 B 0x1EABF00
	0x01EACB48 MOVZ W0, 0x8
	0x01EACB4C BL 0x3EB1AF0
	0x01EACB50 LDR X8, [X20]
	0x01EACB54 STR X8, [X0]
	0x01EACB58 ADRP X1, 0x2008000
	0x01EACB5C ADD X1, X1, 0xE58
	0x01EACB60 MOV X2, X31
	0x01EACB64 BL 0x3EB1B00
	0x01EACB68 MOV X24, X0
	0x01EACB6C BL 0x3EB1AE0
	0x01EACB70 MOV X0, X24
	0x01EACB74 BL 0x1D2C690
	0x01EACB78 BL 0x1990590
	0x01EACB7C LDR X0, [X0 + 0x60]
	0x01EACB80 MOV X2, X31
	0x01EACB84 B 0x1E71750
	0x01EACB88 RET
	0x01EACB8C LDR X0, [X0 + 0x60]
	0x01EACB90 MOV X1, X31
	0x01EACB94 B 0x1E6FC48
	0x01EACB98 LDR X0, [X0 + 0x60]
	0x01EACB9C MOV X1, X31
	0x01EACBA0 B 0x1E6FFA0
	0x01EACBA4 LDR X0, [X0 + 0x60]
	0x01EACBA8 AND W1, W1, 0x1
	0x01EACBAC MOV X3, X31
	0x01EACBB0 B 0x1E71058
	0x01EACBB4 LDR X0, [X0 + 0x60]
	0x01EACBB8 AND W1, W1, 0x1
	0x01EACBBC MOV X3, X31
	0x01EACBC0 B 0x1E713D4
	0x01EACBC4 STP X30, X19, [X31 - 0x10]!
	0x01EACBC8 MOV X19, X0
	0x01EACBCC BL 0x1EA9208
	0x01EACBD0 LDR X0, [X19 + 0x60]
	0x01EACBD4 MOV X1, X31
	0x01EACBD8 LDP X30, X19, [X31], #0x10
	0x01EACBDC B 0x1E709A8
	0x01EACBE0 LDR X0, [X0 + 0x60]
	0x01EACBE4 MOV X1, X31
	0x01EACBE8 B 0x1E70D00
	0x01EACBEC SUB X31, X31, 0x50
	0x01EACBF0 STP X30, X25, [X31 + 0x10]
	0x01EACBF4 STP X24, X23, [X31 + 0x20]
	0x01EACBF8 STP X22, X21, [X31 + 0x30]
	0x01EACBFC STP X20, X19, [X31 + 0x40]
	0x01EACC00 ADRP X22, 0x252D000
	0x01EACC04 LDRB W8, [X22 + 0x37F]
	0x01EACC08 MOV X21, X2
	0x01EACC0C MOV X20, X1
	0x01EACC10 MOV X19, X0
	0x01EACC14 TBNZ X8, 0x0, 0x1EACC50
	0x01EACC18 ADRP X0, 0x2252000
	0x01EACC1C LDR X0, [X0 + 0xE40]
	0x01EACC20 BL 0x1C16CF4
	0x01EACC24 ADRP X0, 0x2252000
	0x01EACC28 LDR X0, [X0 + 0x768]
	0x01EACC2C BL 0x1C16CF4
	0x01EACC30 ADRP X0, 0x2252000
	0x01EACC34 LDR X0, [X0 + 0x770]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x252E000
	011 Move W8, [X21+892]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x2253000
	019 Move X0, [X0+1896]
	020 Call 0x1C17CF4
	021 Move X0, 0x2253000
	022 Move X0, [X0+1904]
	023 Call 0x1C17CF4
	024 Move X0, 0x2253000
	025 Move X0, [X0+1912]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+892], W8
	029 Move X21, 0x252E000
	030 Move W8, [X21+785]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {40}
	035 Move X0, 0x2252000
	036 Move X0, [X0+368]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+785], W8
	040 Move W8, [X20+209]
	041 Compare W8, 0
	042 JumpIfEqual {105}
	043 Move X0, [X20+104]
	044 Compare X0, 0
	045 JumpIfEqual {104}
	046 Move X25, 0x2253000
	047 Move X26, 0x2253000
	048 Move X25, [X25+1912]
	049 Move X26, [X26+1896]
	050 Move W21, W31
	051 Move W8, [X0+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X2, [X25]
	054 Move W1, W21
	055 Call List`1<Object>.get_Item, X0, X1
	056 Compare X19, 0
	057 JumpIfEqual {104}
	058 Move X22, X0
	059 Move X0, X19
	060 Move X1, X31
	061 Call SimulationInput.get_Data, X0
	062 Move X8, [X20+80]
	063 Compare X8, 0
	064 JumpIfEqual {104}
	065 Move X8, [X8+88]
	066 Compare X8, 0
	067 JumpIfEqual {104}
	068 Move W1, [X8+16]
	069 Move X2, X31
	070 Call NetworkInput.FromRaw, X0, X1
	071 Compare X22, 0
	072 JumpIfEqual {104}
	073 Move X8, [X22]
	074 Move X24, X1
	075 Move X1, [X26]
	076 Move X23, X0
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Compare X9, 0
	079 JumpIfEqual {86}
	080 Move X10, [X8+176]
	081 Add X10, X10, 8
	082 NotImplemented "Instruction LDUR not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Subtract X9, X9, 1
	085 Add X10, X10, 16
	086 Move W2, 4
	087 Move X0, X22
	088 Call 0x1C5D788
	089 Move W9, [X10]
	090 Add W9, W9, 4
	091 Add X8, X8, W9
	092 Add X0, X8, 312
	093 Move X8, [X0]
	094 Move X4, [X0+8]
	095 Move X0, X22
	096 Move X1, X20
	097 Move X2, X23
	098 Move X3, X24
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move X0, [X20+104]
	101 Add W21, W21, 1
	102 Compare X0, 0
	103 JumpIfNotEqual {51}
	104 Call 0x1C17F20
	105 Move X20, [X31+64]
	106 Move X19, [X31+72]
	107 Move X22, [X31+48]
	108 Move X21, [X31+56]
	109 Move X24, [X31+32]
	110 Move X23, [X31+40]
	111 Move X26, [X31+16]
	112 Move X25, [X31+24]
	113 Move X30, [X31+80]
	114 Return 

Method: System.Void OnMessageUser(Fusion.SimulationMessage* message)

Disassembly:
	0x01EACC38 BL 0x1C16CF4
	0x01EACC3C ADRP X0, 0x2252000
	0x01EACC40 LDR X0, [X0 + 0x778]
	0x01EACC44 BL 0x1C16CF4
	0x01EACC48 MOVZ W8, 0x1
	0x01EACC4C STRB W8, [X22 + 0x37F]
	0x01EACC50 STR X31, [X31 + 0x8]
	0x01EACC54 LDR X0, [X19 + 0x50]
	0x01EACC58 CBZ X0, 0x1EACDDC
	0x01EACC5C AND X1, X21, 0x0
	0x01EACC60 ADD X2, X31, 0x8
	0x01EACC64 MOV X3, X31
	0x01EACC68 BL 0x1EC96E8
	0x01EACC6C TBZ X0, 0x0, 0x1EACDE0
	0x01EACC70 LDR X8, [X31 + 0x8]
	0x01EACC74 CBZ X8, 0x1EACDDC
	0x01EACC78 ADRP X23, 0x2252000
	0x01EACC7C LDR X23, [X23 + 0xE40]
	0x01EACC80 MOV X22, X31
	0x01EACC84 AND X20, X20, 0x0
	0x01EACC88 LDR X8, [X8 + 0x78]
	0x01EACC8C CBZ X8, 0x1EACDDC
	0x01EACC90 LDR W9, [X8 + 0x18]
	0x01EACC94 CMP X22, W9, SXTW
	0x01EACC98 B.GE 0x1EACD28
	0x01EACC9C CMP X22, X9
	0x01EACCA0 B.CS 0x1EACDF8
	0x01EACCA4 ADD X8, X8, X22, 0x3, LSL
	0x01EACCA8 LDR X0, [X8 + 0x20]
	0x01EACCAC LDR X1, [X23]
	0x01EACCB0 BL 0x1C16E00
	0x01EACCB4 CBZ X0, 0x1EACD18
	0x01EACCB8 LDR X8, [X0]
	0x01EACCBC LDR X1, [X23]
	0x01EACCC0 MOV X21, X0
	0x01EACCC4 LDRH W9, [X8 + 0x12E]
	0x01EACCC8 CBZ X9, 0x1EACCEC
	0x01EACCCC LDR X10, [X8 + 0xB0]
	0x01EACCD0 ADD X10, X10, 0x8
	0x01EACCD4 LDUR X11, [X10 - 0x8]
	0x01EACCD8 CMP X11, X1
	0x01EACCDC B.EQ 0x1EACCFC
	0x01EACCE0 SUBS X9, X9, 0x1
	0x01EACCE4 ADD X10, X10, 0x10
	0x01EACCE8 B.NE 0x1EACCD4
	0x01EACCEC MOV X0, X21
	0x01EACCF0 MOV W2, W31
	0x01EACCF4 BL 0x1C5C788
	0x01EACCF8 B 0x1EACD08
	0x01EACCFC LDRSW X9, [X10]
	0x01EACD00 ADD X8, X8, X9, 0x4, LSL
	0x01EACD04 ADD X0, X8, 0x138
	0x01EACD08 LDP X8, X2, [X0]
	0x01EACD0C MOV X0, X21
	0x01EACD10 MOV X1, X20
	0x01EACD14 BLR X8
	0x01EACD18 LDR X8, [X31 + 0x8]
	0x01EACD1C ADD X22, X22, 0x1
	0x01EACD20 CBNZ X8, 0x1EACC88
	0x01EACD24 B 0x1EACDDC
	0x01EACD28 LDR X0, [X19 + 0x68]
	0x01EACD2C CBZ X0, 0x1EACDDC
	0x01EACD30 ADRP X24, 0x2252000
	0x01EACD34 ADRP X25, 0x2252000
	0x01EACD38 LDR X24, [X24 + 0x778]
	0x01EACD3C LDR X25, [X25 + 0x768]
	0x01EACD40 MOV W21, W31
	0x01EACD44 LDR W8, [X0 + 0x18]
	0x01EACD48 CMP W21, W8
	0x01EACD4C B.GE 0x1EACDE0
	0x01EACD50 LDR X2, [X24]
	0x01EACD54 MOV W1, W21
	0x01EACD58 BL 0x301BCCC
	0x01EACD5C CBZ X0, 0x1EACDDC
	0x01EACD60 LDR X8, [X0]
	0x01EACD64 LDR X23, [X31 + 0x8]
	0x01EACD68 LDR X1, [X25]
	0x01EACD6C MOV X22, X0
	0x01EACD70 LDRH W9, [X8 + 0x12E]
	0x01EACD74 CBZ X9, 0x1EACD98
	0x01EACD78 LDR X10, [X8 + 0xB0]
	0x01EACD7C ADD X10, X10, 0x8
	0x01EACD80 LDUR X11, [X10 - 0x8]
	0x01EACD84 CMP X11, X1
	0x01EACD88 B.EQ 0x1EACDA8
	0x01EACD8C SUBS X9, X9, 0x1
	0x01EACD90 ADD X10, X10, 0x10
	0x01EACD94 B.NE 0x1EACD80
	0x01EACD98 MOVZ W2, 0x1
	0x01EACD9C MOV X0, X22
	0x01EACDA0 BL 0x1C5C788
	0x01EACDA4 B 0x1EACDB8
	0x01EACDA8 LDR W9, [X10]
	0x01EACDAC ADD W9, W9, 0x1
	0x01EACDB0 ADD X8, X8, W9, 0x4, SXTW
	0x01EACDB4 ADD X0, X8, 0x138
	0x01EACDB8 LDP X8, X4, [X0]
	0x01EACDBC MOV X0, X22
	0x01EACDC0 MOV X1, X19
	0x01EACDC4 MOV X2, X23
	0x01EACDC8 MOV X3, X20
	0x01EACDCC BLR X8
	0x01EACDD0 LDR X0, [X19 + 0x68]
	0x01EACDD4 ADD W21, W21, 0x1
	0x01EACDD8 CBNZ X0, 0x1EACD44
	0x01EACDDC BL 0x1C16F20
	0x01EACDE0 LDP X20, X19, [X31 + 0x40]
	0x01EACDE4 LDP X22, X21, [X31 + 0x30]
	0x01EACDE8 LDP X24, X23, [X31 + 0x20]
	0x01EACDEC LDP X30, X25, [X31 + 0x10]
	0x01EACDF0 ADD X31, X31, 0x50
	0x01EACDF4 RET
	0x01EACDF8 BL 0x1C16F28
	0x01EACDFC SUB X31, X31, 0x50
	0x01EACE00 STP X30, X25, [X31 + 0x10]
	0x01EACE04 STP X24, X23, [X31 + 0x20]
	0x01EACE08 STP X22, X21, [X31 + 0x30]
	0x01EACE0C STP X20, X19, [X31 + 0x40]
	0x01EACE10 ADRP X22, 0x252D000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x252E000
	009 Move W8, [X21+893]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x2253000
	017 Move X0, [X0+1896]
	018 Call 0x1C17CF4
	019 Move X0, 0x2253000
	020 Move X0, [X0+1904]
	021 Call 0x1C17CF4
	022 Move X0, 0x2253000
	023 Move X0, [X0+1912]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+893], W8
	027 Move X8, [X19+104]
	028 Compare X8, 0
	029 JumpIfEqual {72}
	030 Move X23, 0x2253000
	031 Move X24, 0x2253000
	032 Move X23, [X23+1912]
	033 Move X24, [X24+1896]
	034 Move W21, W31
	035 Move W9, [X8+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X2, [X23]
	038 Move X0, X8
	039 Move W1, W21
	040 Call List`1<Object>.get_Item, X0, X1
	041 Move X22, X0
	042 Compare X0, 0
	043 JumpIfEqual {81}
	044 Move X8, [X22]
	045 Move X1, [X24]
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Compare X9, 0
	048 JumpIfEqual {55}
	049 Move X10, [X8+176]
	050 Add X10, X10, 8
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X9, X9, 1
	054 Add X10, X10, 16
	055 Move W2, 11
	056 Move X0, X22
	057 Call 0x1C5D788
	058 Move W9, [X10]
	059 Add W9, W9, 11
	060 Add X8, X8, W9
	061 Add X0, X8, 312
	062 Move X8, [X0]
	063 Move X3, [X0+8]
	064 Move X0, X22
	065 Move X1, X19
	066 Move X2, X20
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move X8, [X19+104]
	069 Add W21, W21, 1
	070 Compare X8, 0
	071 JumpIfNotEqual {35}
	072 Call 0x1C17F20
	073 Move X20, [X31+48]
	074 Move X19, [X31+56]
	075 Move X22, [X31+32]
	076 Move X21, [X31+40]
	077 Move X24, [X31+16]
	078 Move X23, [X31+24]
	079 Move X30, [X31+64]
	080 Return 
	081 Call 0x1C17F20
	082 Move X20, X0
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X0, X20
	085 Call 0x3EB2AD0
	086 Move X20, X0
	087 Move X0, 0x2248000
	088 Move X0, [X0+2000]
	089 Call 0x1C17D08
	090 Move X8, [X20]
	091 Move X1, [X8]
	092 Call 0x1C18270
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {121}
	097 Move X20, [X20]
	098 Call 0x3EB2AE0
	099 Move X0, 0x2250000
	100 Move X0, [X0+2224]
	101 Call 0x1C17D08
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move X0, 0x2253000
	107 Move X0, [X0+2152]
	108 Call 0x1C17D08
	109 Move X2, X0
	110 Move X0, X19
	111 Move X1, X20
	112 Move X20, [X31+48]
	113 Move X19, [X31+56]
	114 Move X22, [X31+32]
	115 Move X21, [X31+40]
	116 Move X24, [X31+16]
	117 Move X23, [X31+24]
	118 Move X30, [X31+64]
	119 Call 0x2214878, X0, X1
	120 Return 
	121 Move W0, 8
	122 Call 0x3EB2AF0
	123 Move X8, [X20]
	124 Move [X0], X8
	125 Move X1, 0x2009000
	126 Add X1, X1, 3672
	127 Move X2, X31
	128 Call 0x3EB2B00
	129 Move X20, X0
	130 Call 0x3EB2AE0
	131 Move X0, X20
	132 Call 0x1D2D690
	133 Call 0x1991590

Method: Fusion.SimulationMessageResult Fusion.Simulation.ICallbacks.OnMessage(Fusion.SimulationMessage* message)

Disassembly:
	0x01EACE14 LDRB W8, [X22 + 0x380]
	0x01EACE18 MOV X21, X2
	0x01EACE1C MOV X19, X1
	0x01EACE20 MOV X20, X0
	0x01EACE24 TBNZ X8, 0x0, 0x1EACE60
	0x01EACE28 ADRP X0, 0x2252000
	0x01EACE2C LDR X0, [X0 + 0xE48]
	0x01EACE30 BL 0x1C16CF4
	0x01EACE34 ADRP X0, 0x2252000
	0x01EACE38 LDR X0, [X0 + 0x768]
	0x01EACE3C BL 0x1C16CF4
	0x01EACE40 ADRP X0, 0x2252000
	0x01EACE44 LDR X0, [X0 + 0x770]
	0x01EACE48 BL 0x1C16CF4
	0x01EACE4C ADRP X0, 0x2252000
	0x01EACE50 LDR X0, [X0 + 0x778]
	0x01EACE54 BL 0x1C16CF4
	0x01EACE58 MOVZ W8, 0x1
	0x01EACE5C STRB W8, [X22 + 0x380]
	0x01EACE60 STR X31, [X31 + 0x8]
	0x01EACE64 LDR X0, [X20 + 0x50]
	0x01EACE68 CBZ X0, 0x1EACFE8
	0x01EACE6C AND X1, X21, 0x0
	0x01EACE70 ADD X2, X31, 0x8
	0x01EACE74 MOV X3, X31
	0x01EACE78 BL 0x1EC96E8
	0x01EACE7C TBZ X0, 0x0, 0x1EACFEC
	0x01EACE80 LDR X0, [X20 + 0x68]
	0x01EACE84 CBZ X0, 0x1EACFE8
	0x01EACE88 ADRP X24, 0x2252000
	0x01EACE8C ADRP X25, 0x2252000
	0x01EACE90 LDR X24, [X24 + 0x778]
	0x01EACE94 LDR X25, [X25 + 0x768]
	0x01EACE98 MOV W21, W31
	0x01EACE9C AND X19, X19, 0x0
	0x01EACEA0 LDR W8, [X0 + 0x18]
	0x01EACEA4 CMP W21, W8
	0x01EACEA8 B.GE 0x1EACF38
	0x01EACEAC LDR X2, [X24]
	0x01EACEB0 MOV W1, W21
	0x01EACEB4 BL 0x301BCCC
	0x01EACEB8 CBZ X0, 0x1EACFE8
	0x01EACEBC LDR X8, [X0]
	0x01EACEC0 LDR X23, [X31 + 0x8]
	0x01EACEC4 LDR X1, [X25]
	0x01EACEC8 MOV X22, X0
	0x01EACECC LDRH W9, [X8 + 0x12E]
	0x01EACED0 CBZ X9, 0x1EACEF4
	0x01EACED4 LDR X10, [X8 + 0xB0]
	0x01EACED8 ADD X10, X10, 0x8
	0x01EACEDC LDUR X11, [X10 - 0x8]
	0x01EACEE0 CMP X11, X1
	0x01EACEE4 B.EQ 0x1EACF04
	0x01EACEE8 SUBS X9, X9, 0x1
	0x01EACEEC ADD X10, X10, 0x10
	0x01EACEF0 B.NE 0x1EACEDC
	0x01EACEF4 MOV X0, X22
	0x01EACEF8 MOV W2, W31
	0x01EACEFC BL 0x1C5C788
	0x01EACF00 B 0x1EACF10
	0x01EACF04 LDRSW X9, [X10]
	0x01EACF08 ADD X8, X8, X9, 0x4, LSL
	0x01EACF0C ADD X0, X8, 0x138
	0x01EACF10 LDP X8, X4, [X0]
	0x01EACF14 MOV X0, X22
	0x01EACF18 MOV X1, X20
	0x01EACF1C MOV X2, X23
	0x01EACF20 MOV X3, X19
	0x01EACF24 BLR X8
	0x01EACF28 LDR X0, [X20 + 0x68]
	0x01EACF2C ADD W21, W21, 0x1
	0x01EACF30 CBNZ X0, 0x1EACEA0
	0x01EACF34 B 0x1EACFE8
	0x01EACF38 LDR X8, [X31 + 0x8]
	0x01EACF3C CBZ X8, 0x1EACFE8
	0x01EACF40 ADRP X22, 0x2252000
	0x01EACF44 LDR X22, [X22 + 0xE48]
	0x01EACF48 MOV X21, X31
	0x01EACF4C LDR X8, [X8 + 0x78]
	0x01EACF50 CBZ X8, 0x1EACFE8
	0x01EACF54 LDR W9, [X8 + 0x18]
	0x01EACF58 CMP X21, W9, SXTW
	0x01EACF5C B.GE 0x1EACFEC
	0x01EACF60 CMP X21, X9
	0x01EACF64 B.CS 0x1EAD004
	0x01EACF68 ADD X8, X8, X21, 0x3, LSL
	0x01EACF6C LDR X0, [X8 + 0x20]
	0x01EACF70 LDR X1, [X22]
	0x01EACF74 BL 0x1C16E00
	0x01EACF78 CBZ X0, 0x1EACFDC
	0x01EACF7C LDR X8, [X0]
	0x01EACF80 LDR X1, [X22]
	0x01EACF84 MOV X20, X0
	0x01EACF88 LDRH W9, [X8 + 0x12E]
	0x01EACF8C CBZ X9, 0x1EACFB0
	0x01EACF90 LDR X10, [X8 + 0xB0]
	0x01EACF94 ADD X10, X10, 0x8
	0x01EACF98 LDUR X11, [X10 - 0x8]
	0x01EACF9C CMP X11, X1
	0x01EACFA0 B.EQ 0x1EACFC0
	0x01EACFA4 SUBS X9, X9, 0x1
	0x01EACFA8 ADD X10, X10, 0x10
	0x01EACFAC B.NE 0x1EACF98
	0x01EACFB0 MOV X0, X20
	0x01EACFB4 MOV W2, W31
	0x01EACFB8 BL 0x1C5C788
	0x01EACFBC B 0x1EACFCC
	0x01EACFC0 LDRSW X9, [X10]
	0x01EACFC4 ADD X8, X8, X9, 0x4, LSL
	0x01EACFC8 ADD X0, X8, 0x138
	0x01EACFCC LDP X8, X2, [X0]
	0x01EACFD0 MOV X0, X20
	0x01EACFD4 MOV X1, X19
	0x01EACFD8 BLR X8
	0x01EACFDC LDR X8, [X31 + 0x8]
	0x01EACFE0 ADD X21, X21, 0x1
	0x01EACFE4 CBNZ X8, 0x1EACF4C
	0x01EACFE8 BL 0x1C16F20
	0x01EACFEC LDP X20, X19, [X31 + 0x40]
	0x01EACFF0 LDP X22, X21, [X31 + 0x30]
	0x01EACFF4 LDP X24, X23, [X31 + 0x20]
	0x01EACFF8 LDP X30, X25, [X31 + 0x10]
	0x01EACFFC ADD X31, X31, 0x50
	0x01EAD000 RET
	0x01EAD004 BL 0x1C16F28
	0x01EAD008 STP X30, X23, [X31 - 0x30]!
	0x01EAD00C STP X22, X21, [X31 + 0x10]
	0x01EAD010 STP X20, X19, [X31 + 0x20]
	0x01EAD014 ADRP X20, 0x252C000
	0x01EAD018 LDRB W8, [X20 + 0x381]
	0x01EAD01C MOV X19, X0
	0x01EAD020 TBNZ X8, 0x0, 0x1EAD050
	0x01EAD024 ADRP X0, 0x2251000
	0x01EAD028 LDR X0, [X0 + 0x768]
	0x01EAD02C BL 0x1C16CF4
	0x01EAD030 ADRP X0, 0x2251000
	0x01EAD034 LDR X0, [X0 + 0x770]
	0x01EAD038 BL 0x1C16CF4
	0x01EAD03C ADRP X0, 0x2251000
	0x01EAD040 LDR X0, [X0 + 0x778]
	0x01EAD044 BL 0x1C16CF4
	0x01EAD048 MOVZ W8, 0x1
	0x01EAD04C STRB W8, [X20 + 0x381]
	0x01EAD050 LDR X0, [X19 + 0x68]
	0x01EAD054 CBZ X0, 0x1EAD0F8
	0x01EAD058 ADRP X22, 0x2251000
	0x01EAD05C ADRP X23, 0x2251000
	0x01EAD060 LDR X22, [X22 + 0x778]
	0x01EAD064 LDR X23, [X23 + 0x768]
	0x01EAD068 MOV W20, W31
	0x01EAD06C LDR W8, [X0 + 0x18]
	0x01EAD070 CMP W20, W8
	0x01EAD074 B.GE 0x1EAD0FC
	0x01EAD078 LDR X2, [X22]
	0x01EAD07C MOV W1, W20
	0x01EAD080 BL 0x301BCCC
	0x01EAD084 CBZ X0, 0x1EAD0F8
	0x01EAD088 LDR X8, [X0]
	0x01EAD08C LDR X1, [X23]
	0x01EAD090 MOV X21, X0
	0x01EAD094 LDRH W9, [X8 + 0x12E]
	0x01EAD098 CBZ X9, 0x1EAD0BC
	0x01EAD09C LDR X10, [X8 + 0xB0]
	0x01EAD0A0 ADD X10, X10, 0x8
	0x01EAD0A4 LDUR X11, [X10 - 0x8]
	0x01EAD0A8 CMP X11, X1
	0x01EAD0AC B.EQ 0x1EAD0CC
	0x01EAD0B0 SUBS X9, X9, 0x1
	0x01EAD0B4 ADD X10, X10, 0x10
	0x01EAD0B8 B.NE 0x1EAD0A4
	0x01EAD0BC MOVZ W2, 0x7
	0x01EAD0C0 MOV X0, X21
	0x01EAD0C4 BL 0x1C5C788
	0x01EAD0C8 B 0x1EAD0DC
	0x01EAD0CC LDR W9, [X10]
	0x01EAD0D0 ADD W9, W9, 0x7
	0x01EAD0D4 ADD X8, X8, W9, 0x4, SXTW
	0x01EAD0D8 ADD X0, X8, 0x138
	0x01EAD0DC LDP X8, X2, [X0]
	0x01EAD0E0 MOV X0, X21
	0x01EAD0E4 MOV X1, X19
	0x01EAD0E8 BLR X8
	0x01EAD0EC LDR X0, [X19 + 0x68]
	0x01EAD0F0 ADD W20, W20, 0x1
	0x01EAD0F4 CBNZ X0, 0x1EAD06C
	0x01EAD0F8 BL 0x1C16F20
	0x01EAD0FC LDP X20, X19, [X31 + 0x20]
	0x01EAD100 LDP X22, X21, [X31 + 0x10]
	0x01EAD104 LDP X30, X23, [X31], #0x30
	0x01EAD108 RET
	0x01EAD10C STR X30, [X31 - 0x40]!
	0x01EAD110 STP X24, X23, [X31 + 0x10]
	0x01EAD114 STP X22, X21, [X31 + 0x20]
	0x01EAD118 STP X20, X19, [X31 + 0x30]
	0x01EAD11C ADRP X21, 0x252C000
	0x01EAD120 LDRB W8, [X21 + 0x382]
	0x01EAD124 MOV W19, W1
	0x01EAD128 MOV X20, X0
	0x01EAD12C TBNZ X8, 0x0, 0x1EAD15C
	0x01EAD130 ADRP X0, 0x2251000
	0x01EAD134 LDR X0, [X0 + 0x768]
	0x01EAD138 BL 0x1C16CF4
	0x01EAD13C ADRP X0, 0x2251000
	0x01EAD140 LDR X0, [X0 + 0x770]
	0x01EAD144 BL 0x1C16CF4
	0x01EAD148 ADRP X0, 0x2251000
	0x01EAD14C LDR X0, [X0 + 0x778]
	0x01EAD150 BL 0x1C16CF4
	0x01EAD154 MOVZ W8, 0x1
	0x01EAD158 STRB W8, [X21 + 0x382]
	0x01EAD15C LDR X0, [X20 + 0x68]
	0x01EAD160 CBZ X0, 0x1EAD208
	0x01EAD164 ADRP X23, 0x2251000
	0x01EAD168 ADRP X24, 0x2251000
	0x01EAD16C LDR X23, [X23 + 0x778]
	0x01EAD170 LDR X24, [X24 + 0x768]
	0x01EAD174 MOV W21, W31
	0x01EAD178 LDR W8, [X0 + 0x18]
	0x01EAD17C CMP W21, W8
	0x01EAD180 B.GE 0x1EAD20C
	0x01EAD184 LDR X2, [X23]
	0x01EAD188 MOV W1, W21
	0x01EAD18C BL 0x301BCCC
	0x01EAD190 CBZ X0, 0x1EAD208
	0x01EAD194 LDR X8, [X0]
	0x01EAD198 LDR X1, [X24]
	0x01EAD19C MOV X22, X0
	0x01EAD1A0 LDRH W9, [X8 + 0x12E]
	0x01EAD1A4 CBZ X9, 0x1EAD1C8
	0x01EAD1A8 LDR X10, [X8 + 0xB0]
	0x01EAD1AC ADD X10, X10, 0x8
	0x01EAD1B0 LDUR X11, [X10 - 0x8]
	0x01EAD1B4 CMP X11, X1
	0x01EAD1B8 B.EQ 0x1EAD1D8
	0x01EAD1BC SUBS X9, X9, 0x1
	0x01EAD1C0 ADD X10, X10, 0x10
	0x01EAD1C4 B.NE 0x1EAD1B0
	0x01EAD1C8 MOVZ W2, 0x8
	0x01EAD1CC MOV X0, X22
	0x01EAD1D0 BL 0x1C5C788
	0x01EAD1D4 B 0x1EAD1E8
	0x01EAD1D8 LDR W9, [X10]
	0x01EAD1DC ADD W9, W9, 0x8
	0x01EAD1E0 ADD X8, X8, W9, 0x4, SXTW
	0x01EAD1E4 ADD X0, X8, 0x138
	0x01EAD1E8 LDP X8, X3, [X0]
	0x01EAD1EC MOV X0, X22
	0x01EAD1F0 MOV X1, X20
	0x01EAD1F4 MOV W2, W19
	0x01EAD1F8 BLR X8
	0x01EAD1FC LDR X0, [X20 + 0x68]
	0x01EAD200 ADD W21, W21, 0x1
	0x01EAD204 CBNZ X0, 0x1EAD178
	0x01EAD208 BL 0x1C16F20
	0x01EAD20C LDP X20, X19, [X31 + 0x30]
	0x01EAD210 LDP X22, X21, [X31 + 0x20]
	0x01EAD214 LDP X24, X23, [X31 + 0x10]
	0x01EAD218 LDR X30, [X31], #0x40
	0x01EAD21C RET
	0x01EAD220 SUB X31, X31, 0xB0
	0x01EAD224 STP X30, X27, [X31 + 0x60]
	0x01EAD228 STP X26, X25, [X31 + 0x70]
	0x01EAD22C STP X24, X23, [X31 + 0x80]
	0x01EAD230 STP X22, X21, [X31 + 0x90]
	0x01EAD234 STP X20, X19, [X31 + 0xA0]
	0x01EAD238 MRS X26, 0xC000
	0x01EAD23C LDR X8, [X26 + 0x28]
	0x01EAD240 ADRP X22, 0x252C000
	0x01EAD244 MOV W19, W2
	0x01EAD248 MOV X20, X1
	0x01EAD24C STR X8, [X31 + 0x58]
	0x01EAD250 LDRB W8, [X22 + 0x383]
	0x01EAD254 MOV X21, X0
	0x01EAD258 TBNZ X8, 0x0, 0x1EAD2D0
	0x01EAD25C ADRP X0, 0x224F000
	0x01EAD260 LDR X0, [X0 + 0xE68]
	0x01EAD264 BL 0x1C16CF4
	0x01EAD268 ADRP X0, 0x2251000
	0x01EAD26C LDR X0, [X0 + 0x768]
	0x01EAD270 BL 0x1C16CF4
	0x01EAD274 ADRP X0, 0x2251000
	0x01EAD278 LDR X0, [X0 + 0x770]
	0x01EAD27C BL 0x1C16CF4
	0x01EAD280 ADRP X0, 0x2251000
	0x01EAD284 LDR X0, [X0 + 0x778]
	0x01EAD288 BL 0x1C16CF4
	0x01EAD28C ADRP X0, 0x224F000
	0x01EAD290 LDR X0, [X0 + 0xE70]
	0x01EAD294 BL 0x1C16CF4
	0x01EAD298 ADRP X0, 0x2248000
	0x01EAD29C LDR X0, [X0 + 0x278]
	0x01EAD2A0 BL 0x1C16CF4
	0x01EAD2A4 ADRP X0, 0x2251000
	0x01EAD2A8 LDR X0, [X0 + 0xE50]
	0x01EAD2AC BL 0x1C16CF4
	0x01EAD2B0 ADRP X0, 0x2251000
	0x01EAD2B4 LDR X0, [X0 + 0xE58]
	0x01EAD2B8 BL 0x1C16CF4
	0x01EAD2BC ADRP X0, 0x2251000
	0x01EAD2C0 LDR X0, [X0 + 0xE60]
	0x01EAD2C4 BL 0x1C16CF4
	0x01EAD2C8 MOVZ W8, 0x1
	0x01EAD2CC STRB W8, [X22 + 0x383]
	0x01EAD2D0 SUB W8, W19, 0x1
	0x01EAD2D4 AND W9, W8, 0xFF
	0x01EAD2D8 CMP W9, 0x2
	0x01EAD2DC B.HI 0x1EAD300
	0x01EAD2E0 ADRP X10, 0xFFFFFFFFFEC80000
	0x01EAD2E4 SXTB X9, W8
	0x01EAD2E8 ADD X10, X10, 0xC1C
	0x01EAD2EC LDR W22, [X10, X9, LSL #2]
	0x01EAD2F0 ADRP X9, 0x2007000
	0x01EAD2F4 ADD X9, X9, 0xF20
	0x01EAD2F8 ADD X8, X9, W8, 0x3, SXTB
	0x01EAD2FC B 0x1EAD314
	0x01EAD300 ADRP X8, 0x2248000
	0x01EAD304 LDR X8, [X8 + 0x278]
	0x01EAD308 MOVZ W22, 0x1
	0x01EAD30C LDR X8, [X8]
	0x01EAD310 ADD X8, X8, 0xB8
	0x01EAD314 LDR X23, [X21 + 0x1A8]
	0x01EAD318 CBZ X23, 0x1EAD360
	0x01EAD31C ADRP X9, 0x224F000
	0x01EAD320 LDR X8, [X8]
	0x01EAD324 LDR X9, [X9 + 0xE70]
	0x01EAD328 ADRP X27, 0x224F000
	0x01EAD32C LDR X24, [X8]
	0x01EAD330 LDR X0, [X9]
	0x01EAD334 LDR X27, [X27 + 0xE68]
	0x01EAD338 BL 0x1C16F10
	0x01EAD33C MOV W1, W22
	0x01EAD340 MOV X2, X24
	0x01EAD344 MOV X3, X31
	0x01EAD348 MOV X25, X0
	0x01EAD34C BL 0x1EB3CE4
	0x01EAD350 LDR X2, [X27]
	0x01EAD354 MOV X0, X23
	0x01EAD358 MOV X1, X25
	0x01EAD35C BL 0x24D9EDC
	0x01EAD360 LDR X0, [X21 + 0x68]
	0x01EAD364 CBZ X0, 0x1EAD444
	0x01EAD368 ADRP X24, 0x2251000
	0x01EAD36C ADRP X25, 0x2251000
	0x01EAD370 LDR X24, [X24 + 0x778]
	0x01EAD374 LDR X25, [X25 + 0x768]
	0x01EAD378 MOV W22, W31
	0x01EAD37C LDR W8, [X0 + 0x18]
	0x01EAD380 CMP W22, W8
	0x01EAD384 B.GE 0x1EAD448
	0x01EAD388 LDR X2, [X24]
	0x01EAD38C MOV W1, W22
	0x01EAD390 BL 0x301BCCC
	0x01EAD394 LDR X8, [X20 + 0x10]
	0x01EAD398 LDR V0, [X20]
	0x01EAD39C STR X8, [X31 + 0x30]
	0x01EAD3A0 STR V0, [X31 + 0x2]
	0x01EAD3A4 CBZ X0, 0x1EAD444
	0x01EAD3A8 LDR V0, [X31 + 0x2]
	0x01EAD3AC LDR X8, [X31 + 0x30]
	0x01EAD3B0 LDR X1, [X25]
	0x01EAD3B4 MOV X23, X0
	0x01EAD3B8 STR V0, [X31]
	0x01EAD3BC STR X8, [X31 + 0x10]
	0x01EAD3C0 LDR X8, [X0]
	0x01EAD3C4 LDRH W9, [X8 + 0x12E]
	0x01EAD3C8 CBZ X9, 0x1EAD3EC
	0x01EAD3CC LDR X10, [X8 + 0xB0]
	0x01EAD3D0 ADD X10, X10, 0x8
	0x01EAD3D4 LDUR X11, [X10 - 0x8]
	0x01EAD3D8 CMP X11, X1
	0x01EAD3DC B.EQ 0x1EAD3FC
	0x01EAD3E0 SUBS X9, X9, 0x1
	0x01EAD3E4 ADD X10, X10, 0x10
	0x01EAD3E8 B.NE 0x1EAD3D4
	0x01EAD3EC MOVZ W2, 0xA
	0x01EAD3F0 MOV X0, X23
	0x01EAD3F4 BL 0x1C5C788
	0x01EAD3F8 B 0x1EAD40C
	0x01EAD3FC LDR W9, [X10]
	0x01EAD400 ADD W9, W9, 0xA
	0x01EAD404 ADD X8, X8, W9, 0x4, SXTW
	0x01EAD408 ADD X0, X8, 0x138
	0x01EAD40C LDR V0, [X31]
	0x01EAD410 LDR X8, [X31 + 0x10]
	0x01EAD414 LDR X9, [X0]
	0x01EAD418 ADD X2, X31, 0x40
	0x01EAD41C STR V0, [X31 + 0x4]
	0x01EAD420 STR X8, [X31 + 0x50]
	0x01EAD424 LDR X4, [X0 + 0x8]
	0x01EAD428 MOV X0, X23
	0x01EAD42C MOV X1, X21
	0x01EAD430 MOV W3, W19
	0x01EAD434 BLR X9
	0x01EAD438 LDR X0, [X21 + 0x68]
	0x01EAD43C ADD W22, W22, 0x1
	0x01EAD440 CBNZ X0, 0x1EAD37C
	0x01EAD444 BL 0x1C16F20
	0x01EAD448 LDR X8, [X26 + 0x28]
	0x01EAD44C LDR X9, [X31 + 0x58]
	0x01EAD450 CMP X8, X9
	0x01EAD454 B.NE 0x1EAD474
	0x01EAD458 LDP X20, X19, [X31 + 0xA0]
	0x01EAD45C LDP X22, X21, [X31 + 0x90]
	0x01EAD460 LDP X24, X23, [X31 + 0x80]
	0x01EAD464 LDP X26, X25, [X31 + 0x70]
	0x01EAD468 LDP X30, X27, [X31 + 0x60]
	0x01EAD46C ADD X31, X31, 0xB0
	0x01EAD470 RET
	0x01EAD474 BL 0x3EB1B20
	0x01EAD478 SUB X31, X31, 0xB0
	0x01EAD47C STP D9, D8, [X31 + 0x40]
	0x01EAD480 STP X29, X30, [X31 + 0x50]
	0x01EAD484 STP X28, X27, [X31 + 0x60]
	0x01EAD488 STP X26, X25, [X31 + 0x70]
	0x01EAD48C STP X24, X23, [X31 + 0x80]
	0x01EAD490 STP X22, X21, [X31 + 0x90]
	0x01EAD494 STP X20, X19, [X31 + 0xA0]
	0x01EAD498 ADRP X22, 0x252C000
	0x01EAD49C LDRB W8, [X22 + 0x384]
	0x01EAD4A0 MOV W23, W3
	0x01EAD4A4 MOV X19, X2
	0x01EAD4A8 MOV X21, X1
	0x01EAD4AC MOV X20, X0
	0x01EAD4B0 STR X4, [X31]
	0x01EAD4B4 TBNZ X8, 0x0, 0x1EAD5B0
	0x01EAD4B8 ADRP X0, 0x2251000
	0x01EAD4BC LDR X0, [X0 + 0xE68]
	0x01EAD4C0 BL 0x1C16CF4
	0x01EAD4C4 ADRP X0, 0x2246000
	0x01EAD4C8 LDR X0, [X0 + 0x618]
	0x01EAD4CC BL 0x1C16CF4
	0x01EAD4D0 ADRP X0, 0x2251000
	0x01EAD4D4 LDR X0, [X0 + 0xE70]
	0x01EAD4D8 BL 0x1C16CF4
	0x01EAD4DC ADRP X0, 0x2251000
	0x01EAD4E0 LDR X0, [X0 + 0xE78]
	0x01EAD4E4 BL 0x1C16CF4
	0x01EAD4E8 ADRP X0, 0x2251000
	0x01EAD4EC LDR X0, [X0 + 0xE80]
	0x01EAD4F0 BL 0x1C16CF4
	0x01EAD4F4 ADRP X0, 0x2251000
	0x01EAD4F8 LDR X0, [X0 + 0xE88]
	0x01EAD4FC BL 0x1C16CF4
	0x01EAD500 ADRP X0, 0x2251000
	0x01EAD504 LDR X0, [X0 + 0xE90]
	0x01EAD508 BL 0x1C16CF4
	0x01EAD50C ADRP X0, 0x2251000
	0x01EAD510 LDR X0, [X0 + 0xE98]
	0x01EAD514 BL 0x1C16CF4
	0x01EAD518 ADRP X0, 0x2251000
	0x01EAD51C LDR X0, [X0 + 0xEA0]
	0x01EAD520 BL 0x1C16CF4
	0x01EAD524 ADRP X0, 0x2251000
	0x01EAD528 LDR X0, [X0 + 0xEA8]
	0x01EAD52C BL 0x1C16CF4
	0x01EAD530 ADRP X0, 0x2251000
	0x01EAD534 LDR X0, [X0 + 0x768]
	0x01EAD538 BL 0x1C16CF4
	0x01EAD53C ADRP X0, 0x2251000
	0x01EAD540 LDR X0, [X0 + 0xEB0]
	0x01EAD544 BL 0x1C16CF4
	0x01EAD548 ADRP X0, 0x2251000
	0x01EAD54C LDR X0, [X0 + 0xEB8]
	0x01EAD550 BL 0x1C16CF4
	0x01EAD554 ADRP X0, 0x2251000
	0x01EAD558 LDR X0, [X0 + 0xEC0]
	0x01EAD55C BL 0x1C16CF4
	0x01EAD560 ADRP X0, 0x2251000
	0x01EAD564 LDR X0, [X0 + 0x770]
	0x01EAD568 BL 0x1C16CF4
	0x01EAD56C ADRP X0, 0x2251000
	0x01EAD570 LDR X0, [X0 + 0x778]
	0x01EAD574 BL 0x1C16CF4
	0x01EAD578 ADRP X0, 0x2251000
	0x01EAD57C LDR X0, [X0 + 0xEC8]
	0x01EAD580 BL 0x1C16CF4
	0x01EAD584 ADRP X0, 0x224E000
	0x01EAD588 LDR X0, [X0 + 0x558]
	0x01EAD58C BL 0x1C16CF4
	0x01EAD590 ADRP X0, 0x2251000
	0x01EAD594 LDR X0, [X0 + 0xED0]
	0x01EAD598 BL 0x1C16CF4
	0x01EAD59C ADRP X0, 0x2251000
	0x01EAD5A0 LDR X0, [X0 + 0x898]
	0x01EAD5A4 BL 0x1C16CF4
	0x01EAD5A8 MOVZ W8, 0x1
	0x01EAD5AC STRB W8, [X22 + 0x384]
	0x01EAD5B0 STP X31, X31, [X31 + 0x30]
	0x01EAD5B4 STP X31, X31, [X31 + 0x20]
	0x01EAD5B8 TBZ X23, 0x0, 0x1EAD6A8
	0x01EAD5BC LDR X0, [X20 + 0x68]
	0x01EAD5C0 CBZ X0, 0x1EADB18
	0x01EAD5C4 ADRP X22, 0x2251000
	0x01EAD5C8 ADRP X29, 0x2251000
	0x01EAD5CC LDR X22, [X22 + 0xE68]
	0x01EAD5D0 LDR X29, [X29 + 0x768]
	0x01EAD5D4 MOV W23, W31
	0x01EAD5D8 AND X21, X21, 0x0
	0x01EAD5DC LDR W8, [X0 + 0x18]
	0x01EAD5E0 CMP W23, W8
	0x01EAD5E4 B.GE 0x1EADB1C
	0x01EAD5E8 ADRP X8, 0x2251000
	0x01EAD5EC LDR X8, [X8 + 0x778]
	0x01EAD5F0 MOV W1, W23
	0x01EAD5F4 LDR X2, [X8]
	0x01EAD5F8 BL 0x301BCCC
	0x01EAD5FC LDR X2, [X22]
	0x01EAD600 LDR X1, [X31]
	0x01EAD604 LDUR X24, [X19 + 0x1C]
	0x01EAD608 LDUR X25, [X19 + 0x24]
	0x01EAD60C MOV X26, X0
	0x01EAD610 ADD X0, X31, 0x8
	0x01EAD614 STP X31, X31, [X31 + 0x8]
	0x01EAD618 BL 0x2B87B6C
	0x01EAD61C CBZ X26, 0x1EADB18
	0x01EAD620 LDR X8, [X26]
	0x01EAD624 LDR X1, [X29]
	0x01EAD628 LDP X28, X27, [X31 + 0x8]
	0x01EAD62C LDRH W9, [X8 + 0x12E]
	0x01EAD630 CBZ X9, 0x1EAD654
	0x01EAD634 LDR X10, [X8 + 0xB0]
	0x01EAD638 ADD X10, X10, 0x8
	0x01EAD63C LDUR X11, [X10 - 0x8]
	0x01EAD640 CMP X11, X1
	0x01EAD644 B.EQ 0x1EAD664
	0x01EAD648 SUBS X9, X9, 0x1
	0x01EAD64C ADD X10, X10, 0x10
	0x01EAD650 B.NE 0x1EAD63C
	0x01EAD654 MOVZ W2, 0xF
	0x01EAD658 MOV X0, X26
	0x01EAD65C BL 0x1C5C788
	0x01EAD660 B 0x1EAD674
	0x01EAD664 LDR W9, [X10]
	0x01EAD668 ADD W9, W9, 0xF
	0x01EAD66C ADD X8, X8, W9, 0x4, SXTW
	0x01EAD670 ADD X0, X8, 0x138
	0x01EAD674 LDP X8, X7, [X0]
	0x01EAD678 MOV X0, X26
	0x01EAD67C MOV X1, X20
	0x01EAD680 MOV X2, X21
	0x01EAD684 MOV X3, X24
	0x01EAD688 MOV X4, X25
	0x01EAD68C MOV X5, X28
	0x01EAD690 MOV X6, X27
	0x01EAD694 BLR X8
	0x01EAD698 LDR X0, [X20 + 0x68]
	0x01EAD69C ADD W23, W23, 0x1
	0x01EAD6A0 CBNZ X0, 0x1EAD5DC
	0x01EAD6A4 B 0x1EADB18
	0x01EAD6A8 LDR X23, [X20 + 0x180]
	0x01EAD6AC MOV X0, X19
	0x01EAD6B0 MOV X1, X31
	0x01EAD6B4 BL 0x1F02A68
	0x01EAD6B8 CBZ X23, 0x1EADB18
	0x01EAD6BC ADRP X8, 0x2251000
	0x01EAD6C0 LDR X8, [X8 + 0xE80]
	0x01EAD6C4 MOV X1, X0
	0x01EAD6C8 ADD X2, X31, 0x38
	0x01EAD6CC MOV X0, X23
	0x01EAD6D0 LDR X3, [X8]
	0x01EAD6D4 BL 0x2A4FD38
	0x01EAD6D8 TBNZ X0, 0x0, 0x1EAD73C
	0x01EAD6DC LDR X23, [X20 + 0x180]
	0x01EAD6E0 MOV X0, X19
	0x01EAD6E4 MOV X1, X31
	0x01EAD6E8 BL 0x1F02A68
	0x01EAD6EC ADRP X8, 0x2251000
	0x01EAD6F0 LDR X8, [X8 + 0xEC8]
	0x01EAD6F4 MOV X24, X0
	0x01EAD6F8 LDR X8, [X8]
	0x01EAD6FC MOV X0, X8
	0x01EAD700 BL 0x1C16F10
	0x01EAD704 ADRP X8, 0x2251000
	0x01EAD708 LDR X8, [X8 + 0xEC0]
	0x01EAD70C MOV X25, X0
	0x01EAD710 LDR X1, [X8]
	0x01EAD714 BL 0x301B7C4
	0x01EAD718 STR X25, [X31 + 0x38]
	0x01EAD71C CBZ X23, 0x1EADB18
	0x01EAD720 ADRP X8, 0x2251000
	0x01EAD724 LDR X8, [X8 + 0xE70]
	0x01EAD728 MOV X0, X23
	0x01EAD72C MOV X1, X24
	0x01EAD730 MOV X2, X25
	0x01EAD734 LDR X3, [X8]
	0x01EAD738 BL 0x2A4E330
	0x01EAD73C LDR X0, [X31 + 0x38]
	0x01EAD740 CBZ X0, 0x1EADB18
	0x01EAD744 ADRP X9, 0x2251000
	0x01EAD748 LDR X9, [X9 + 0xEB0]
	0x01EAD74C LDR W10, [X0 + 0x1C]
	0x01EAD750 LDR X8, [X0 + 0x10]
	0x01EAD754 LDR X9, [X9]
	0x01EAD758 ADD W10, W10, 0x1
	0x01EAD75C STR W10, [X0 + 0x1C]
	0x01EAD760 CBZ X8, 0x1EADB18
	0x01EAD764 LDRSW X10, [X0 + 0x18]
	0x01EAD768 LDR W11, [X8 + 0x18]
	0x01EAD76C CMP W10, W11
	0x01EAD770 B.CS 0x1EAD78C
	0x01EAD774 ADD W9, W10, 0x1
	0x01EAD778 STR W9, [X0 + 0x18]
	0x01EAD77C LDR X9, [X31]
	0x01EAD780 ADD X8, X8, X10, 0x3, LSL
	0x01EAD784 STR X9, [X8 + 0x20]
	0x01EAD788 B 0x1EAD7A0
	0x01EAD78C LDR X8, [X9 + 0x20]
	0x01EAD790 LDR X1, [X31]
	0x01EAD794 LDR X8, [X8 + 0xC0]
	0x01EAD798 LDR X2, [X8 + 0x70]
	0x01EAD79C BL 0x301BF90
	0x01EAD7A0 ADRP X25, 0x2251000
	0x01EAD7A4 LDR X25, [X25 + 0x898]
	0x01EAD7A8 LDR X22, [X31 + 0x38]
	0x01EAD7AC LDR X0, [X25]
	0x01EAD7B0 LDR W8, [X0 + 0xE0]
	0x01EAD7B4 CBNZ W8, 0x1EAD7C0
	0x01EAD7B8 BL 0x1C16DFC
	0x01EAD7BC LDR X0, [X25]
	0x01EAD7C0 LDR X8, [X0 + 0xB8]
	0x01EAD7C4 LDR X23, [X8 + 0x18]
	0x01EAD7C8 CBNZ X23, 0x1EAD81C
	0x01EAD7CC LDR W8, [X0 + 0xE0]
	0x01EAD7D0 CBNZ W8, 0x1EAD7DC
	0x01EAD7D4 BL 0x1C16DFC
	0x01EAD7D8 LDR X0, [X25]
	0x01EAD7DC ADRP X9, 0x2251000
	0x01EAD7E0 LDR X8, [X0 + 0xB8]
	0x01EAD7E4 LDR X9, [X9 + 0xEA8]
	0x01EAD7E8 LDR X24, [X8]
	0x01EAD7EC LDR X0, [X9]
	0x01EAD7F0 BL 0x1C16F10
	0x01EAD7F4 ADRP X8, 0x2251000
	0x01EAD7F8 LDR X8, [X8 + 0xED0]
	0x01EAD7FC MOV X1, X24
	0x01EAD800 MOV X3, X31
	0x01EAD804 MOV X23, X0
	0x01EAD808 LDR X2, [X8]
	0x01EAD80C BL 0x2D30128
	0x01EAD810 LDR X8, [X25]
	0x01EAD814 LDR X8, [X8 + 0xB8]
	0x01EAD818 STR X23, [X8 + 0x18]
	0x01EAD81C ADRP X8, 0x2251000
	0x01EAD820 LDR X8, [X8 + 0xE88]
	0x01EAD824 MOV X0, X22
	0x01EAD828 MOV X1, X23
	0x01EAD82C LDR X2, [X8]
	0x01EAD830 BL 0x21CEC3C
	0x01EAD834 MOV X1, X31
	0x01EAD838 BL 0x35DEE78
	0x01EAD83C LDR W9, [X19 + 0xC]
	0x01EAD840 CMP W0, W9
	0x01EAD844 B.NE 0x1EAD924
	0x01EAD848 LDR X22, [X20 + 0x180]
	0x01EAD84C MOV X0, X19
	0x01EAD850 MOV X1, X31
	0x01EAD854 BL 0x1F02A68
	0x01EAD858 CBZ X22, 0x1EADB18
	0x01EAD85C ADRP X8, 0x2251000
	0x01EAD860 LDR X8, [X8 + 0xE78]
	0x01EAD864 MOV X1, X0
	0x01EAD868 MOV X0, X22
	0x01EAD86C LDR X2, [X8]
	0x01EAD870 BL 0x2A4F714
	0x01EAD874 ADRP X8, 0x2246000
	0x01EAD878 LDR W1, [X19 + 0xC]
	0x01EAD87C LDR X8, [X8 + 0x618]
	0x01EAD880 LDR X0, [X8]
	0x01EAD884 BL 0x1C16D6C
	0x01EAD888 ADRP X8, 0x224E000
	0x01EAD88C LDR X8, [X8 + 0x558]
	0x01EAD890 MOV X23, X0
	0x01EAD894 LDR X8, [X8]
	0x01EAD898 MOV X0, X8
	0x01EAD89C BL 0x1C16F10
	0x01EAD8A0 MOVZ W2, 0x1
	0x01EAD8A4 MOV X1, X23
	0x01EAD8A8 MOV X3, X31
	0x01EAD8AC MOV X22, X0
	0x01EAD8B0 BL 0x32E2530
	0x01EAD8B4 LDR X0, [X31 + 0x38]
	0x01EAD8B8 CBZ X0, 0x1EADB18
	0x01EAD8BC ADRP X8, 0x2251000
	0x01EAD8C0 LDR X8, [X8 + 0xEB8]
	0x01EAD8C4 LDR X1, [X8]
	0x01EAD8C8 ADD X8, X31, 0x8
	0x01EAD8CC BL 0x301CB58
	0x01EAD8D0 LDUR V0, [X31 + 0x8]
	0x01EAD8D4 LDR X8, [X31 + 0x18]
	0x01EAD8D8 ADRP X23, 0x2251000
	0x01EAD8DC STR V0, [X31 + 0x2]
	0x01EAD8E0 STR X8, [X31 + 0x30]
	0x01EAD8E4 LDR X23, [X23 + 0xE98]
	0x01EAD8E8 LDR X1, [X23]
	0x01EAD8EC ADD X0, X31, 0x20
	0x01EAD8F0 BL 0x2BC4350
	0x01EAD8F4 TBZ X0, 0x0, 0x1EAD9FC
	0x01EAD8F8 LDR X1, [X31 + 0x30]
	0x01EAD8FC CBZ X1, 0x1EADB40
	0x01EAD900 CBZ X22, 0x1EADB44
	0x01EAD904 LDR X8, [X22]
	0x01EAD908 LDR W3, [X1 + 0x18]
	0x01EAD90C LDR X9, [X8 + 0x388]
	0x01EAD910 LDR X4, [X8 + 0x390]
	0x01EAD914 MOV X0, X22
	0x01EAD918 MOV W2, W31
	0x01EAD91C BLR X9
	0x01EAD920 B 0x1EAD8E8
	0x01EAD924 MOV W8, W0
	0x01EAD928 LDR X0, [X20 + 0x68]
	0x01EAD92C CBZ X0, 0x1EADB18
	0x01EAD930 ADRP X26, 0x2251000
	0x01EAD934 ADRP X27, 0x2251000
	0x01EAD938 LDR X26, [X26 + 0x778]
	0x01EAD93C LDR X27, [X27 + 0x768]
	0x01EAD940 MOV W22, W31
	0x01EAD944 SCVTF S8, W8
	0x01EAD948 AND X21, X21, 0x0
	0x01EAD94C LDR W8, [X0 + 0x18]
	0x01EAD950 CMP W22, W8
	0x01EAD954 B.GE 0x1EADB1C
	0x01EAD958 LDR X2, [X26]
	0x01EAD95C MOV W1, W22
	0x01EAD960 BL 0x301BCCC
	0x01EAD964 CBZ X0, 0x1EADB18
	0x01EAD968 LDR X8, [X0]
	0x01EAD96C LDUR X24, [X19 + 0x24]
	0x01EAD970 LDUR X25, [X19 + 0x1C]
	0x01EAD974 LDR X1, [X27]
	0x01EAD978 LDRH W9, [X8 + 0x12E]
	0x01EAD97C LDR V9, [X19 + 0xC]
	0x01EAD980 MOV X23, X0
	0x01EAD984 CBZ X9, 0x1EAD9A8
	0x01EAD988 LDR X10, [X8 + 0xB0]
	0x01EAD98C ADD X10, X10, 0x8
	0x01EAD990 LDUR X11, [X10 - 0x8]
	0x01EAD994 CMP X11, X1
	0x01EAD998 B.EQ 0x1EAD9B8
	0x01EAD99C SUBS X9, X9, 0x1
	0x01EAD9A0 ADD X10, X10, 0x10
	0x01EAD9A4 B.NE 0x1EAD990
	0x01EAD9A8 MOVZ W2, 0x10
	0x01EAD9AC MOV X0, X23
	0x01EAD9B0 BL 0x1C5C788
	0x01EAD9B4 B 0x1EAD9C8
	0x01EAD9B8 LDR W9, [X10]
	0x01EAD9BC ADD W9, W9, 0x10
	0x01EAD9C0 ADD X8, X8, W9, 0x4, SXTW
	0x01EAD9C4 ADD X0, X8, 0x138
	0x01EAD9C8 LDP X8, X5, [X0]
	0x01EAD9CC SCVTF S0, S9
	0x01EAD9D0 FDIV S0, S8, S0
	0x01EAD9D4 MOV X0, X23
	0x01EAD9D8 MOV X1, X20
	0x01EAD9DC MOV X2, X21
	0x01EAD9E0 MOV X3, X25
	0x01EAD9E4 MOV X4, X24
	0x01EAD9E8 BLR X8
	0x01EAD9EC LDR X0, [X20 + 0x68]
	0x01EAD9F0 ADD W22, W22, 0x1
	0x01EAD9F4 CBNZ X0, 0x1EAD94C
	0x01EAD9F8 B 0x1EADB18
	0x01EAD9FC ADRP X8, 0x2251000
	0x01EADA00 LDR X8, [X8 + 0xE90]
	0x01EADA04 ADD X0, X31, 0x20
	0x01EADA08 LDR X1, [X8]
	0x01EADA0C BL 0x2BC434C
	0x01EADA10 CBZ X22, 0x1EADB18
	0x01EADA14 LDR X8, [X22]
	0x01EADA18 MOV X0, X22
	0x01EADA1C LDR X9, [X8 + 0x3F8]
	0x01EADA20 LDR X1, [X8 + 0x400]
	0x01EADA24 BLR X9
	0x01EADA28 LDR X8, [X20 + 0x68]
	0x01EADA2C CBZ X8, 0x1EADB18
	0x01EADA30 ADRP X29, 0x2251000
	0x01EADA34 LDR X29, [X29 + 0x768]
	0x01EADA38 MOV X22, X0
	0x01EADA3C MOV W23, W31
	0x01EADA40 AND X21, X21, 0x0
	0x01EADA44 LDR W9, [X8 + 0x18]
	0x01EADA48 CMP W23, W9
	0x01EADA4C B.GE 0x1EADB1C
	0x01EADA50 ADRP X9, 0x2251000
	0x01EADA54 LDR X9, [X9 + 0x778]
	0x01EADA58 MOV X0, X8
	0x01EADA5C MOV W1, W23
	0x01EADA60 LDR X2, [X9]
	0x01EADA64 BL 0x301BCCC
	0x01EADA68 ADRP X8, 0x2251000
	0x01EADA6C LDUR X24, [X19 + 0x1C]
	0x01EADA70 LDUR X25, [X19 + 0x24]
	0x01EADA74 LDR X8, [X8 + 0xE68]
	0x01EADA78 MOV X26, X0
	0x01EADA7C ADD X0, X31, 0x8
	0x01EADA80 MOV X1, X22
	0x01EADA84 LDR X2, [X8]
	0x01EADA88 STP X31, X31, [X31 + 0x8]
	0x01EADA8C BL 0x2B87B6C
	0x01EADA90 CBZ X26, 0x1EADB18
	0x01EADA94 LDR X8, [X26]
	0x01EADA98 LDR X1, [X29]
	0x01EADA9C LDP X28, X27, [X31 + 0x8]
	0x01EADAA0 LDRH W9, [X8 + 0x12E]
	0x01EADAA4 CBZ X9, 0x1EADAC8
	0x01EADAA8 LDR X10, [X8 + 0xB0]
	0x01EADAAC ADD X10, X10, 0x8
	0x01EADAB0 LDUR X11, [X10 - 0x8]
	0x01EADAB4 CMP X11, X1
	0x01EADAB8 B.EQ 0x1EADAD8
	0x01EADABC SUBS X9, X9, 0x1
	0x01EADAC0 ADD X10, X10, 0x10
	0x01EADAC4 B.NE 0x1EADAB0
	0x01EADAC8 MOVZ W2, 0xF
	0x01EADACC MOV X0, X26
	0x01EADAD0 BL 0x1C5C788
	0x01EADAD4 B 0x1EADAE8
	0x01EADAD8 LDR W9, [X10]
	0x01EADADC ADD W9, W9, 0xF
	0x01EADAE0 ADD X8, X8, W9, 0x4, SXTW
	0x01EADAE4 ADD X0, X8, 0x138
	0x01EADAE8 LDP X8, X7, [X0]
	0x01EADAEC MOV X0, X26
	0x01EADAF0 MOV X1, X20
	0x01EADAF4 MOV X2, X21
	0x01EADAF8 MOV X3, X24
	0x01EADAFC MOV X4, X25
	0x01EADB00 MOV X5, X28
	0x01EADB04 MOV X6, X27
	0x01EADB08 BLR X8
	0x01EADB0C LDR X8, [X20 + 0x68]
	0x01EADB10 ADD W23, W23, 0x1
	0x01EADB14 CBNZ X8, 0x1EADA44
	0x01EADB18 BL 0x1C16F20
	0x01EADB1C LDP X20, X19, [X31 + 0xA0]
	0x01EADB20 LDP X22, X21, [X31 + 0x90]
	0x01EADB24 LDP X24, X23, [X31 + 0x80]
	0x01EADB28 LDP X26, X25, [X31 + 0x70]
	0x01EADB2C LDP X28, X27, [X31 + 0x60]
	0x01EADB30 LDP X29, X30, [X31 + 0x50]
	0x01EADB34 LDP D9, D8, [X31 + 0x40]
	0x01EADB38 ADD X31, X31, 0xB0
	0x01EADB3C RET
	0x01EADB40 BL 0x1C16F20
	0x01EADB44 BL 0x1C16F20
	0x01EADB48 B 0x1EADB50
	0x01EADB4C B 0x1EADB50
	0x01EADB50 MOV X23, X0
	0x01EADB54 CMP W1, 0x1
	0x01EADB58 B.NE 0x1EADB8C
	0x01EADB5C MOV X0, X23
	0x01EADB60 BL 0x3EB1AD0
	0x01EADB64 LDR X24, [X0]
	0x01EADB68 BL 0x3EB1AE0
	0x01EADB6C ADRP X8, 0x2251000
	0x01EADB70 LDR X8, [X8 + 0xE90]
	0x01EADB74 ADD X0, X31, 0x20
	0x01EADB78 LDR X1, [X8]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X21, 0x252E000
	015 Move W8, [X21+894]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {42}
	022 Move X0, 0x2248000
	023 Move X0, [X0+3584]
	024 Call 0x1C17CF4
	025 Move X0, 0x2253000
	026 Move X0, [X0+3632]
	027 Call 0x1C17CF4
	028 Move X0, 0x2253000
	029 Move X0, [X0+3640]
	030 Call 0x1C17CF4
	031 Move X0, 0x2248000
	032 Move X0, [X0+3608]
	033 Call 0x1C17CF4
	034 Move X0, 0x224B000
	035 Move X0, [X0+2680]
	036 Call 0x1C17CF4
	037 Move X0, 0x224B000
	038 Move X0, [X0+3648]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X21+894], W8
	042 Move [X31+16], X31
	043 Move [X31+24], X31
	044 Move W22, [X20+20]
	045 Move TEMP, X22
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {75}
	049 Move TEMP, X22
	050 And TEMP, TEMP, 256
	051 Compare TEMP, 256
	052 JumpIfEqual {78}
	053 Move X27, 0x224B000
	054 Move X27, [X27+3648]
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 Move X0, [X27]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X31
	062 Call PlayerRef.get_None
	063 And W28, W22, 48
	064 Compare W28, 0
	065 JumpIfEqual {94}
	066 Move X0, [X19+80]
	067 Move W21, [X20+24]
	068 Compare X0, 0
	069 JumpIfEqual {96}
	070 Move X8, [X0]
	071 Move X1, [X8+624]
	072 Move X9, [X8+616]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 And X22, X0, 0
	075 Move X0, X19
	076 Move X1, X20
	077 Call NetworkRunner.OnMessageUser, X0, X1
	078 Move W8, W31
	079 Move X20, [X31+112]
	080 Move X19, [X31+120]
	081 Move X22, [X31+96]
	082 Move X21, [X31+104]
	083 Move X24, [X31+80]
	084 Move X23, [X31+88]
	085 Move X26, [X31+64]
	086 Move X25, [X31+72]
	087 Move X28, [X31+48]
	088 Move X27, [X31+56]
	089 Move X29, [X31+32]
	090 Move X30, [X31+40]
	091 Move W0, W8
	092 Add X31, X31, 128
	093 Return X0
	094 Move X21, X0
	095 Move W29, W31
	096 Move X22, X31
	097 Move X0, [X27]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move W8, 1
	104 Move X0, [X27]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Compare W21, 0
	110 JumpIfEqual {112}
	111 Move W8, W31
	112 Move X0, [X19+80]
	113 Compare X0, 0
	114 JumpIfEqual {756}
	115 Move X1, X31
	116 Call Simulation.get_IsServer, X0
	117 And W8, W0, 1
	118 NotImplemented "Instruction CMP not yet implemented."
	119 NotImplemented "Instruction CSET not yet implemented."
	120 Move W8, [X20+20]
	121 Move X23, X26
	122 ShiftRight X23, 48
	123 And X23, X23, 0x7FFFFFFF
	124 Move TEMP, X8
	125 And TEMP, TEMP, 4
	126 Compare TEMP, 4
	127 JumpIfEqual {330}
	128 Move X0, [X19+80]
	129 Compare X0, 0
	130 JumpIfEqual {750}
	131 And X1, X26, 0
	132 Add X2, X31, 16
	133 Move X3, X31
	134 Call Simulation.TryGetMeta, X0, X1, X2
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {392}
	139 Move X8, [X31+16]
	140 Compare X8, 0
	141 JumpIfEqual {752}
	142 Move X22, [X8+184]
	143 Compare X22, 0
	144 JumpIfEqual {393}
	145 Move X8, [X22+120]
	146 Compare X8, 0
	147 JumpIfEqual {753}
	148 Move W10, [X8+24]
	149 Move X9, X26
	150 ShiftRight X9, 32
	151 And X9, X9, 0x7FFF
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Add X8, X8, X9
	154 Move X24, X23
	155 Move X23, [X8+32]
	156 Compare X23, 0
	157 JumpIfEqual {392}
	158 Move W8, [X23+48]
	159 Move TEMP, X8
	160 And TEMP, TEMP, 8
	161 Compare TEMP, 8
	162 JumpIfEqual {392}
	163 Move X25, X23
	164 Add X25, X25, 96
	165 Move X8, [X25]
	166 Compare X8, 0
	167 JumpIfNotEqual {190}
	168 Move X0, X23
	169 Move X1, X31
	170 Call "il2cpp_vm_object_is_inst", X0
	171 Move X8, 0x224A000
	172 Move X8, [X8+2680]
	173 Move X26, X0
	174 Move X0, [X8]
	175 Move W8, [X0+224]
	176 Compare W8, 0
	177 JumpIfNotEqual {179}
	178 Call 0x1C17DFC
	179 Move X0, X26
	180 Move X1, X25
	181 Move X2, X31
	182 Call NetworkBehaviourUtils.TryGetRpcInvokeDelegateArray, X0, X1
	183 Move TEMP, X0
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfNotEqual {392}
	187 Move X8, [X25]
	188 Compare X8, 0
	189 JumpIfEqual {768}
	190 Move W9, [X8+24]
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Compare X20, 0
	193 JumpIfEqual {758}
	194 Move W9, 24
	195 NotImplemented "Instruction MADD not yet implemented."
	196 Move W24, [X8+36]
	197 Move W25, [X8+40]
	198 Move X26, [X8+48]
	199 Move W1, [X20+4]
	200 Move X0, X22
	201 Move X2, X31
	202 Call NetworkObject.GetRpcSourceAuthorityMask, X0, X1
	203 And W31, W0, W24
	204 Move X0, X22
	205 Move X1, X31
	206 Call NetworkObject.GetLocalAuthorityMask, X0
	207 NotImplemented "Instruction CMP not yet implemented."
	208 NotImplemented "Instruction CSET not yet implemented."
	209 Xor W9, W29, 1
	210 Move W24, W0
	211 And W8, W8, W9
	212 Move TEMP, X8
	213 And TEMP, TEMP, 1
	214 Compare TEMP, 1
	215 JumpIfEqual {227}
	216 And W8, W24, W25
	217 Compare W8, 0
	218 JumpIfEqual {227}
	219 Compare X26, 0
	220 JumpIfEqual {767}
	221 Move X0, [X26+64]
	222 Move X8, [X26+24]
	223 Move X3, [X26+40]
	224 Move X1, X23
	225 Move X2, X20
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Move TEMP, X29
	228 And TEMP, TEMP, 1
	229 Compare TEMP, 1
	230 JumpIfEqual {78}
	231 Move X0, [X19+80]
	232 Compare X0, 0
	233 JumpIfEqual {78}
	234 Move X1, X31
	235 Call Simulation.get_IsServer, X0
	236 NotImplemented "Instruction ORN not yet implemented."
	237 Or W8, W8, 4
	238 And W9, W8, W25
	239 Move W8, W31
	240 Compare W9, 0
	241 JumpIfEqual {79}
	242 Xor W10, W0, 1
	243 Move TEMP, X10
	244 And TEMP, TEMP, 1
	245 Compare TEMP, 1
	246 JumpIfEqual {79}
	247 Compare W28, 0
	248 JumpIfEqual {542}
	249 Move TEMP, X9
	250 And TEMP, TEMP, 2
	251 Compare TEMP, 2
	252 JumpIfNotEqual {282}
	253 Move X8, [X19+80]
	254 Compare X8, 0
	255 JumpIfEqual {770}
	256 Move X23, 0x252D000
	257 Move W8, [X23+752]
	258 Compare W8, 0
	259 JumpIfNotEqual {265}
	260 Move X0, 0x224A000
	261 Move X0, [X0+3648]
	262 Call 0x1C17CF4
	263 Move W8, 1
	264 Move [X23+752], W8
	265 Move X0, [X27]
	266 Move W8, [X0+224]
	267 Compare W8, 0
	268 JumpIfNotEqual {270}
	269 Call 0x1C17DFC
	270 Compare W21, 0
	271 JumpIfEqual {282}
	272 Move X8, [X22+32]
	273 Compare X8, 0
	274 JumpIfEqual {772}
	275 Move X0, [X27]
	276 Move W23, [X8+28]
	277 Move W9, [X0+224]
	278 Compare W9, 0
	279 JumpIfNotEqual {281}
	280 Call 0x1C17DFC
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Move TEMP, X25
	283 And TEMP, TEMP, 4
	284 Compare TEMP, 4
	285 JumpIfNotEqual {78}
	286 Move X8, [X19+80]
	287 Compare X8, 0
	288 JumpIfEqual {771}
	289 Move X23, 0x252D000
	290 Move W8, [X23+752]
	291 Compare W8, 0
	292 JumpIfNotEqual {298}
	293 Move X0, 0x224A000
	294 Move X0, [X0+3648]
	295 Call 0x1C17CF4
	296 Move W8, 1
	297 Move [X23+752], W8
	298 Move X0, [X27]
	299 Move W8, [X0+224]
	300 Compare W8, 0
	301 JumpIfNotEqual {303}
	302 Call 0x1C17DFC
	303 Compare W21, 0
	304 JumpIfEqual {315}
	305 Move X8, [X22+32]
	306 Compare X8, 0
	307 JumpIfEqual {777}
	308 Move X0, [X27]
	309 Move W22, [X8+28]
	310 Move W9, [X0+224]
	311 Compare W9, 0
	312 JumpIfNotEqual {314}
	313 Call 0x1C17DFC
	314 NotImplemented "Instruction CMP not yet implemented."
	315 Move X0, [X27]
	316 Move W22, [X20+4]
	317 Move W8, [X0+224]
	318 Compare W8, 0
	319 JumpIfNotEqual {321}
	320 Call 0x1C17DFC
	321 NotImplemented "Instruction CMP not yet implemented."
	322 Move X0, [X19+80]
	323 Compare X0, 0
	324 JumpIfEqual {778}
	325 Move W2, W21
	326 Move W3, 1
	327 Move X1, X20
	328 Move X4, X31
	329 Call Simulation.ForwardMessage, X0, X1, X2, X3
	330 NotImplemented "Instruction CMP not yet implemented."
	331 NotImplemented "Instruction CSET not yet implemented."
	332 Xor W9, W29, 1
	333 And W8, W8, W9
	334 Move TEMP, X8
	335 And TEMP, TEMP, 1
	336 Compare TEMP, 1
	337 JumpIfEqual {362}
	338 Move X8, 0x224A000
	339 Move X8, [X8+2680]
	340 Move X0, [X8]
	341 Move W8, [X0+224]
	342 Compare W8, 0
	343 JumpIfNotEqual {345}
	344 Call 0x1C17DFC
	345 Add X1, X31, 24
	346 Move W0, W23
	347 Move X2, X31
	348 Call NetworkBehaviourUtils.TryGetRpcStaticInvokeDelegate, X0, X1
	349 Move TEMP, X0
	350 And TEMP, TEMP, 1
	351 Compare TEMP, 1
	352 JumpIfNotEqual {362}
	353 Move X8, [X31+24]
	354 Compare X8, 0
	355 JumpIfEqual {755}
	356 Move X0, [X8+64]
	357 Move X9, [X8+24]
	358 Move X3, [X8+40]
	359 Move X1, X19
	360 Move X2, X20
	361 NotImplemented "Instruction BLR not yet implemented."
	362 Move TEMP, X29
	363 And TEMP, TEMP, 1
	364 Compare TEMP, 1
	365 JumpIfEqual {78}
	366 Move X0, [X19+80]
	367 Compare X0, 0
	368 JumpIfEqual {78}
	369 Move X1, X31
	370 Call Simulation.get_IsServer, X0
	371 Move TEMP, X0
	372 And TEMP, TEMP, 1
	373 Compare TEMP, 1
	374 JumpIfNotEqual {78}
	375 Compare W28, 0
	376 JumpIfEqual {397}
	377 Move X0, [X27]
	378 Move W22, [X20+4]
	379 Move W8, [X0+224]
	380 Compare W8, 0
	381 JumpIfNotEqual {383}
	382 Call 0x1C17DFC
	383 NotImplemented "Instruction CMP not yet implemented."
	384 Move X0, [X19+80]
	385 Compare X0, 0
	386 JumpIfEqual {764}
	387 Move W2, W21
	388 Move W3, 1
	389 Move X1, X20
	390 Move X4, X31
	391 Call Simulation.ForwardMessage, X0, X1, X2, X3
	392 Move W8, 1
	393 Move W8, [X8+164]
	394 And W31, W8, 1
	395 Move W8, 1
	396 NotImplemented "Instruction CINC not yet implemented."
	397 Move X0, [X19+80]
	398 Compare X0, 0
	399 JumpIfEqual {759}
	400 Move X1, X31
	401 Call Simulation.get_Connections, X0
	402 Move X22, X0
	403 Compare X0, 0
	404 JumpIfEqual {760}
	405 Move X10, 0x2252000
	406 Move X8, [X22]
	407 Move X10, [X10+3632]
	408 NotImplemented "Instruction LDRH not yet implemented."
	409 Move X1, [X10]
	410 Compare X9, 0
	411 JumpIfEqual {418}
	412 Move X10, [X8+176]
	413 Add X10, X10, 8
	414 NotImplemented "Instruction LDUR not yet implemented."
	415 NotImplemented "Instruction CMP not yet implemented."
	416 Subtract X9, X9, 1
	417 Add X10, X10, 16
	418 Move X0, X22
	419 Move W2, W31
	420 Call 0x1C5D788
	421 NotImplemented "Instruction LDRSW not yet implemented."
	422 Add X8, X8, X9
	423 Add X0, X8, 312
	424 Move X8, [X0]
	425 Move X1, [X0+8]
	426 Move X0, X22
	427 NotImplemented "Instruction BLR not yet implemented."
	428 Move X25, X0
	429 Move [X31+8], X23
	430 Compare X0, 0
	431 JumpIfEqual {761}
	432 Move X23, 0x2247000
	433 Move X27, 0x2252000
	434 Move X23, [X23+3608]
	435 Move X27, [X27+3640]
	436 Move X8, [X25]
	437 Move X1, [X23]
	438 NotImplemented "Instruction LDRH not yet implemented."
	439 Compare X9, 0
	440 JumpIfEqual {447}
	441 Move X10, [X8+176]
	442 Add X10, X10, 8
	443 NotImplemented "Instruction LDUR not yet implemented."
	444 NotImplemented "Instruction CMP not yet implemented."
	445 Subtract X9, X9, 1
	446 Add X10, X10, 16
	447 Move X0, X25
	448 Move W2, W31
	449 Call 0x1C5D788
	450 NotImplemented "Instruction LDRSW not yet implemented."
	451 Add X8, X8, X9
	452 Add X0, X8, 312
	453 Move X8, [X0]
	454 Move X1, [X0+8]
	455 Move X0, X25
	456 NotImplemented "Instruction BLR not yet implemented."
	457 Move TEMP, X0
	458 And TEMP, TEMP, 1
	459 Compare TEMP, 1
	460 JumpIfNotEqual {508}
	461 Move X8, [X25]
	462 Move X1, [X27]
	463 NotImplemented "Instruction LDRH not yet implemented."
	464 Compare X9, 0
	465 JumpIfEqual {472}
	466 Move X10, [X8+176]
	467 Add X10, X10, 8
	468 NotImplemented "Instruction LDUR not yet implemented."
	469 NotImplemented "Instruction CMP not yet implemented."
	470 Subtract X9, X9, 1
	471 Add X10, X10, 16
	472 Move X0, X25
	473 Move W2, W31
	474 Call 0x1C5D788
	475 NotImplemented "Instruction LDRSW not yet implemented."
	476 Add X8, X8, X9
	477 Add X0, X8, 312
	478 Move X8, [X0]
	479 Move X1, [X0+8]
	480 Move X0, X25
	481 NotImplemented "Instruction BLR not yet implemented."
	482 Move X1, X0
	483 Move X0, [X19+80]
	484 Compare X0, 0
	485 JumpIfEqual {748}
	486 Move X2, X31
	487 Call Simulation.Connection2Player, X0, X1
	488 Compare X20, 0
	489 JumpIfEqual {749}
	490 Move X8, 0x224A000
	491 Move X8, [X8+3648]
	492 Move X22, X0
	493 Move W24, [X20+4]
	494 Move X0, [X8]
	495 Move W8, [X0+224]
	496 Compare W8, 0
	497 JumpIfNotEqual {499}
	498 Call 0x1C17DFC
	499 NotImplemented "Instruction CMP not yet implemented."
	500 Move X0, [X19+80]
	501 Compare X0, 0
	502 JumpIfEqual {751}
	503 And X2, X22, 0
	504 Move X1, X20
	505 Move W3, W31
	506 Move X4, X31
	507 Call Simulation.ForwardMessage, X0, X1, X2, X3
	508 Move X23, X31
	509 Move W22, W31
	510 Move X27, 0x224A000
	511 Move X27, [X27+3648]
	512 Compare X25, 0
	513 JumpIfEqual {537}
	514 Move X10, 0x2247000
	515 Move X8, [X25]
	516 Move X10, [X10+3584]
	517 NotImplemented "Instruction LDRH not yet implemented."
	518 Move X1, [X10]
	519 Compare X9, 0
	520 JumpIfEqual {527}
	521 Move X10, [X8+176]
	522 Add X10, X10, 8
	523 NotImplemented "Instruction LDUR not yet implemented."
	524 NotImplemented "Instruction CMP not yet implemented."
	525 Subtract X9, X9, 1
	526 Add X10, X10, 16
	527 Move X0, X25
	528 Move W2, W31
	529 Call 0x1C5D788
	530 NotImplemented "Instruction LDRSW not yet implemented."
	531 Add X8, X8, X9
	532 Add X0, X8, 312
	533 Move X8, [X0]
	534 Move X1, [X0+8]
	535 Move X0, X25
	536 NotImplemented "Instruction BLR not yet implemented."
	537 Compare X23, 0
	538 JumpIfNotEqual {762}
	539 Move X23, [X31+8]
	540 Compare W22, 0
	541 JumpIfEqual {78}
	542 Move TEMP, X9
	543 And TEMP, TEMP, 2
	544 Compare TEMP, 2
	545 JumpIfNotEqual {598}
	546 Move X8, [X22+32]
	547 Compare X8, 0
	548 JumpIfEqual {773}
	549 Move X0, [X27]
	550 Move W21, [X8+28]
	551 Move W9, [X0+224]
	552 Compare W9, 0
	553 JumpIfNotEqual {555}
	554 Call 0x1C17DFC
	555 Compare W21, 0
	556 JumpIfEqual {598}
	557 Move X8, [X19+80]
	558 Compare X8, 0
	559 JumpIfEqual {779}
	560 Move X23, 0x252D000
	561 Move W8, [X23+752]
	562 Move W21, [X20+4]
	563 Compare W8, 0
	564 JumpIfNotEqual {570}
	565 Move X0, 0x224A000
	566 Move X0, [X0+3648]
	567 Call 0x1C17CF4
	568 Move W8, 1
	569 Move [X23+752], W8
	570 Move X0, [X27]
	571 Move W8, [X0+224]
	572 Compare W8, 0
	573 JumpIfNotEqual {575}
	574 Call 0x1C17DFC
	575 Compare W21, 0
	576 JumpIfEqual {587}
	577 Move X8, [X22+32]
	578 Compare X8, 0
	579 JumpIfEqual {782}
	580 Move X0, [X27]
	581 Move W23, [X8+28]
	582 Move W9, [X0+224]
	583 Compare W9, 0
	584 JumpIfNotEqual {586}
	585 Call 0x1C17DFC
	586 NotImplemented "Instruction CMP not yet implemented."
	587 Move X8, [X22+32]
	588 Compare X8, 0
	589 JumpIfEqual {780}
	590 Move X0, [X19+80]
	591 Compare X0, 0
	592 JumpIfEqual {781}
	593 Move W2, [X8+28]
	594 Move W3, 1
	595 Move X1, X20
	596 Move X4, X31
	597 Call Simulation.ForwardMessage, X0, X1, X2, X3
	598 Move TEMP, X25
	599 And TEMP, TEMP, 4
	600 Compare TEMP, 4
	601 JumpIfNotEqual {78}
	602 Move X0, [X19+80]
	603 Compare X0, 0
	604 JumpIfEqual {774}
	605 Move X1, X31
	606 Call Simulation.get_Connections, X0
	607 Move X21, X0
	608 Compare X0, 0
	609 JumpIfEqual {775}
	610 Move X10, 0x2252000
	611 Move X8, [X21]
	612 Move X10, [X10+3632]
	613 NotImplemented "Instruction LDRH not yet implemented."
	614 Move X1, [X10]
	615 Compare X9, 0
	616 JumpIfEqual {623}
	617 Move X10, [X8+176]
	618 Add X10, X10, 8
	619 NotImplemented "Instruction LDUR not yet implemented."
	620 NotImplemented "Instruction CMP not yet implemented."
	621 Subtract X9, X9, 1
	622 Add X10, X10, 16
	623 Move X0, X21
	624 Move W2, W31
	625 Call 0x1C5D788
	626 NotImplemented "Instruction LDRSW not yet implemented."
	627 Add X8, X8, X9
	628 Add X0, X8, 312
	629 Move X8, [X0]
	630 Move X1, [X0+8]
	631 Move X0, X21
	632 NotImplemented "Instruction BLR not yet implemented."
	633 Move X21, X0
	634 Compare X0, 0
	635 JumpIfEqual {776}
	636 Move X24, 0x2247000
	637 Move X25, 0x2252000
	638 Move X24, [X24+3608]
	639 Move X25, [X25+3640]
	640 Move X8, [X21]
	641 Move X1, [X24]
	642 NotImplemented "Instruction LDRH not yet implemented."
	643 Compare X9, 0
	644 JumpIfEqual {651}
	645 Move X10, [X8+176]
	646 Add X10, X10, 8
	647 NotImplemented "Instruction LDUR not yet implemented."
	648 NotImplemented "Instruction CMP not yet implemented."
	649 Subtract X9, X9, 1
	650 Add X10, X10, 16
	651 Move X0, X21
	652 Move W2, W31
	653 Call 0x1C5D788
	654 NotImplemented "Instruction LDRSW not yet implemented."
	655 Add X8, X8, X9
	656 Add X0, X8, 312
	657 Move X8, [X0]
	658 Move X1, [X0+8]
	659 Move X0, X21
	660 NotImplemented "Instruction BLR not yet implemented."
	661 Move TEMP, X0
	662 And TEMP, TEMP, 1
	663 Compare TEMP, 1
	664 JumpIfNotEqual {718}
	665 Move X8, [X21]
	666 Move X1, [X25]
	667 NotImplemented "Instruction LDRH not yet implemented."
	668 Compare X9, 0
	669 JumpIfEqual {676}
	670 Move X10, [X8+176]
	671 Add X10, X10, 8
	672 NotImplemented "Instruction LDUR not yet implemented."
	673 NotImplemented "Instruction CMP not yet implemented."
	674 Subtract X9, X9, 1
	675 Add X10, X10, 16
	676 Move X0, X21
	677 Move W2, W31
	678 Call 0x1C5D788
	679 NotImplemented "Instruction LDRSW not yet implemented."
	680 Add X8, X8, X9
	681 Add X0, X8, 312
	682 Move X8, [X0]
	683 Move X1, [X0+8]
	684 Move X0, X21
	685 NotImplemented "Instruction BLR not yet implemented."
	686 Move X1, X0
	687 Move X0, [X19+80]
	688 Compare X0, 0
	689 JumpIfEqual {765}
	690 Move X2, X31
	691 Call Simulation.Connection2Player, X0, X1
	692 Move X8, [X22+32]
	693 Compare X8, 0
	694 JumpIfEqual {766}
	695 Move X23, X0
	696 Move X0, [X27]
	697 Move W26, [X8+28]
	698 Move W9, [X0+224]
	699 Compare W9, 0
	700 JumpIfNotEqual {702}
	701 Call 0x1C17DFC
	702 NotImplemented "Instruction CMP not yet implemented."
	703 Move X0, [X27]
	704 Move W26, [X20+4]
	705 Move W8, [X0+224]
	706 Compare W8, 0
	707 JumpIfNotEqual {709}
	708 Call 0x1C17DFC
	709 NotImplemented "Instruction CMP not yet implemented."
	710 Move X0, [X19+80]
	711 Compare X0, 0
	712 JumpIfEqual {769}
	713 And X2, X23, 0
	714 Move X1, X20
	715 Move W3, W31
	716 Move X4, X31
	717 Call Simulation.ForwardMessage, X0, X1, X2, X3
	718 Move X20, X31
	719 Compare X21, 0
	720 JumpIfEqual {744}
	721 Move X10, 0x2247000
	722 Move X8, [X21]
	723 Move X10, [X10+3584]
	724 NotImplemented "Instruction LDRH not yet implemented."
	725 Move X1, [X10]
	726 Compare X9, 0
	727 JumpIfEqual {734}
	728 Move X10, [X8+176]
	729 Add X10, X10, 8
	730 NotImplemented "Instruction LDUR not yet implemented."
	731 NotImplemented "Instruction CMP not yet implemented."
	732 Subtract X9, X9, 1
	733 Add X10, X10, 16
	734 Move X0, X21
	735 Move W2, W31
	736 Call 0x1C5D788
	737 NotImplemented "Instruction LDRSW not yet implemented."
	738 Add X8, X8, X9
	739 Add X0, X8, 312
	740 Move X8, [X0]
	741 Move X1, [X0+8]
	742 Move X0, X21
	743 NotImplemented "Instruction BLR not yet implemented."
	744 Compare X20, 0
	745 JumpIfEqual {78}
	746 Move X0, X20
	747 Call 0x1C17F18
	748 Call 0x1C17F20
	749 Call 0x1C17F20
	750 Call 0x1C17F20
	751 Call 0x1C17F20
	752 Call 0x1C17F20
	753 Call 0x1C17F20
	754 Call 0x1C17F28
	755 Call 0x1C17F20
	756 Call 0x1C17F20
	757 Call 0x1C17F28
	758 Call 0x1C17F20
	759 Call 0x1C17F20
	760 Call 0x1C17F20
	761 Call 0x1C17F20
	762 Move X0, X23
	763 Call 0x1C17F18
	764 Call 0x1C17F20
	765 Call 0x1C17F20
	766 Call 0x1C17F20
	767 Call 0x1C17F20
	768 Call 0x1C17F20
	769 Call 0x1C17F20
	770 Call 0x1C17F20
	771 Call 0x1C17F20
	772 Call 0x1C17F20
	773 Call 0x1C17F20
	774 Call 0x1C17F20
	775 Call 0x1C17F20
	776 Call 0x1C17F20
	777 Call 0x1C17F20
	778 Call 0x1C17F20
	779 Call 0x1C17F20
	780 Call 0x1C17F20
	781 Call 0x1C17F20
	782 Call 0x1C17F20
	783 Move X22, X1
	784 Move X24, X0
	785 NotImplemented "Instruction CMP not yet implemented."
	786 Move X0, X24
	787 Call 0x3EB2AD0
	788 Move X20, [X0]
	789 Call 0x3EB2AE0
	790 Move X20, X31
	791 Compare X21, 0
	792 JumpIfEqual {816}
	793 Move X10, 0x2247000
	794 Move X8, [X21]
	795 Move X10, [X10+3584]
	796 NotImplemented "Instruction LDRH not yet implemented."
	797 Move X1, [X10]
	798 Compare X9, 0
	799 JumpIfEqual {806}
	800 Move X10, [X8+176]
	801 Add X10, X10, 8
	802 NotImplemented "Instruction LDUR not yet implemented."
	803 NotImplemented "Instruction CMP not yet implemented."
	804 Subtract X9, X9, 1
	805 Add X10, X10, 16
	806 Move X0, X21
	807 Move W2, W31
	808 Call 0x1C5D788
	809 NotImplemented "Instruction LDRSW not yet implemented."
	810 Add X8, X8, X9
	811 Add X0, X8, 312
	812 Move X8, [X0]
	813 Move X1, [X0+8]
	814 Move X0, X21
	815 NotImplemented "Instruction BLR not yet implemented."
	816 Compare X20, 0
	817 JumpIfEqual {868}
	818 Move X0, X20
	819 Call 0x1C17F18
	820 Move X22, X1
	821 Move X24, X0
	822 Compare X21, 0
	823 JumpIfNotEqual {793}
	824 Move X22, X1
	825 Move X24, X0
	826 NotImplemented "Instruction CMP not yet implemented."
	827 Move X0, X24
	828 Call 0x3EB2AD0
	829 Move X23, [X0]
	830 Call 0x3EB2AE0
	831 Move W22, 1
	832 Move X23, X31
	833 Compare X25, 0
	834 JumpIfEqual {858}
	835 Move X10, 0x2247000
	836 Move X8, [X25]
	837 Move X10, [X10+3584]
	838 NotImplemented "Instruction LDRH not yet implemented."
	839 Move X1, [X10]
	840 Compare X9, 0
	841 JumpIfEqual {848}
	842 Move X10, [X8+176]
	843 Add X10, X10, 8
	844 NotImplemented "Instruction LDUR not yet implemented."
	845 NotImplemented "Instruction CMP not yet implemented."
	846 Subtract X9, X9, 1
	847 Add X10, X10, 16
	848 Move X0, X25
	849 Move W2, W31
	850 Call 0x1C5D788
	851 NotImplemented "Instruction LDRSW not yet implemented."
	852 Add X8, X8, X9
	853 Add X0, X8, 312
	854 Move X8, [X0]
	855 Move X1, [X0+8]
	856 Move X0, X25
	857 NotImplemented "Instruction BLR not yet implemented."
	858 Compare X23, 0
	859 JumpIfEqual {868}
	860 Move X0, X23
	861 Call 0x1C17F18
	862 Move X22, X1
	863 Move X24, X0
	864 Compare X25, 0
	865 JumpIfNotEqual {835}
	866 Move X22, X1
	867 Move X24, X0
	868 NotImplemented "Instruction CMP not yet implemented."
	869 Move X0, X24
	870 Call 0x3EB2AD0
	871 Move X20, X0
	872 Move X0, 0x2247000
	873 Move X0, [X0+2000]
	874 Call 0x1C17D08
	875 Move X8, [X20]
	876 Move X1, [X8]
	877 Call 0x1C18270
	878 Move TEMP, X0
	879 And TEMP, TEMP, 1
	880 Compare TEMP, 1
	881 JumpIfNotEqual {898}
	882 Move X20, [X20]
	883 Call 0x3EB2AE0
	884 Move X0, 0x224F000
	885 Move X0, [X0+2224]
	886 Call 0x1C17D08
	887 Move W8, [X0+224]
	888 Compare W8, 0
	889 JumpIfNotEqual {891}
	890 Call 0x1C17DFC
	891 Move X0, 0x2252000
	892 Move X0, [X0+2152]
	893 Call 0x1C17D08
	894 Move X2, X0
	895 Move X0, X19
	896 Move X1, X20
	897 Call 0x2214878, X0, X1
	898 Move W0, 8
	899 Call 0x3EB2AF0
	900 Move X8, [X20]
	901 Move [X0], X8
	902 Move X1, 0x2008000
	903 Add X1, X1, 3672
	904 Move X2, X31
	905 Call 0x3EB2B00
	906 Move X24, X0
	907 Call 0x3EB2AE0
	908 Move X0, X24
	909 Call 0x1D2D690
	910 Call 0x1991590

Method: System.Void Fusion.Simulation.ICallbacks.OnBeforeSimulation(System.Int32 forwardTickCount)

Disassembly:
	0x01EADB7C BL 0x2BC434C
	0x01EADB80 CBZ X24, 0x1EADA10
	0x01EADB84 MOV X0, X24

ISIL:
	001 Move X0, [X0+96]
	002 Move X2, X31
	003 Call CallbackInterfaceInvoker.IBeforeSimulation, X0, X1
	004 Return 

Method: System.Void Fusion.Simulation.ICallbacks.OnAfterSimulation()

Disassembly:
	0x01EADB88 BL 0x1C16F18

ISIL:
	001 Return 

Method: System.Void Fusion.Simulation.ICallbacks.OnBeforeClientSidePredictionReset()

Disassembly:
	0x01EADB8C MOV X24, X31
	0x01EADB90 B 0x1EADB98
	0x01EADB94 MOV X23, X0

ISIL:
	001 Move X0, [X0+96]
	002 Move X1, X31
	003 Call CallbackInterfaceInvoker.IBeforeClientPredictionReset, X0
	004 Return 

Method: System.Void Fusion.Simulation.ICallbacks.OnAfterClientSidePredictionReset()

Disassembly:
	0x01EADB98 ADRP X8, 0x2251000
	0x01EADB9C LDR X8, [X8 + 0xE90]
	0x01EADBA0 LDR X1, [X8]

ISIL:
	001 Move X0, [X0+96]
	002 Move X1, X31
	003 Call CallbackInterfaceInvoker.IAfterClientPredictionReset, X0
	004 Return 

Method: System.Void Fusion.Simulation.ICallbacks.OnBeforeAllTicks(System.Boolean resimulation, System.Int32 tickCount)

Disassembly:
	0x01EADBA4 ADD X0, X31, 0x20
	0x01EADBA8 BL 0x2BC434C
	0x01EADBAC CBNZ X24, 0x1EADBB8
	0x01EADBB0 MOV X0, X23

ISIL:
	001 Move X0, [X0+96]
	002 And W1, W1, 1
	003 Move X3, X31
	004 Call CallbackInterfaceInvoker.IBeforeAllTicks, X0, X1, X2
	005 Return 

Method: System.Void Fusion.Simulation.ICallbacks.OnAfterAllTicks(System.Boolean resimulation, System.Int32 tickCount)

Disassembly:
	0x01EADBB4 BL 0x1D2C690
	0x01EADBB8 MOV X0, X24
	0x01EADBBC BL 0x1C16F18
	0x01EADBC0 BL 0x1990590

ISIL:
	001 Move X0, [X0+96]
	002 And W1, W1, 1
	003 Move X3, X31
	004 Call CallbackInterfaceInvoker.IAfterAllTicks, X0, X1, X2
	005 Return 

Method: System.Void Fusion.Simulation.ICallbacks.OnBeforeTick()

Disassembly:
	0x01EADBC4 STR X30, [X31 - 0x40]!
	0x01EADBC8 STP X24, X23, [X31 + 0x10]
	0x01EADBCC STP X22, X21, [X31 + 0x20]
	0x01EADBD0 STP X20, X19, [X31 + 0x30]
	0x01EADBD4 ADRP X21, 0x252C000
	0x01EADBD8 LDRB W8, [X21 + 0x385]
	0x01EADBDC MOV X20, X1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call NetworkRunner.SceneInfoUpdate, X0
	005 Move X0, [X19+96]
	006 Move X1, X31
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Call CallbackInterfaceInvoker.IBeforeTick, X0
	010 Return 

Method: System.Void Fusion.Simulation.ICallbacks.OnAfterTick()

Disassembly:
	0x01EADBE0 MOV X19, X0
	0x01EADBE4 TBNZ X8, 0x0, 0x1EADC14
	0x01EADBE8 ADRP X0, 0x2251000

ISIL:
	001 Move X0, [X0+96]
	002 Move X1, X31
	003 Call CallbackInterfaceInvoker.IAfterTick, X0
	004 Return 

Method: System.Void Fusion.Simulation.ICallbacks.ObjectEnterAOI(Fusion.PlayerRef player, Fusion.NetworkId id)

Disassembly:
	0x01EADBEC LDR X0, [X0 + 0x768]
	0x01EADBF0 BL 0x1C16CF4
	0x01EADBF4 ADRP X0, 0x2251000
	0x01EADBF8 LDR X0, [X0 + 0x770]
	0x01EADBFC BL 0x1C16CF4
	0x01EADC00 ADRP X0, 0x2251000
	0x01EADC04 LDR X0, [X0 + 0x778]
	0x01EADC08 BL 0x1C16CF4
	0x01EADC0C MOVZ W8, 0x1
	0x01EADC10 STRB W8, [X21 + 0x385]
	0x01EADC14 LDR X0, [X19 + 0x68]
	0x01EADC18 CBZ X0, 0x1EADCC4
	0x01EADC1C ADRP X23, 0x2251000
	0x01EADC20 ADRP X24, 0x2251000
	0x01EADC24 LDR X23, [X23 + 0x778]
	0x01EADC28 LDR X24, [X24 + 0x768]
	0x01EADC2C MOV W21, W31
	0x01EADC30 AND X20, X20, 0x0
	0x01EADC34 LDR W8, [X0 + 0x18]
	0x01EADC38 CMP W21, W8
	0x01EADC3C B.GE 0x1EADCC8
	0x01EADC40 LDR X2, [X23]
	0x01EADC44 MOV W1, W21
	0x01EADC48 BL 0x301BCCC
	0x01EADC4C CBZ X0, 0x1EADCC4
	0x01EADC50 LDR X8, [X0]
	0x01EADC54 LDR X1, [X24]
	0x01EADC58 MOV X22, X0
	0x01EADC5C LDRH W9, [X8 + 0x12E]
	0x01EADC60 CBZ X9, 0x1EADC84
	0x01EADC64 LDR X10, [X8 + 0xB0]
	0x01EADC68 ADD X10, X10, 0x8
	0x01EADC6C LDUR X11, [X10 - 0x8]
	0x01EADC70 CMP X11, X1
	0x01EADC74 B.EQ 0x1EADC94
	0x01EADC78 SUBS X9, X9, 0x1
	0x01EADC7C ADD X10, X10, 0x10
	0x01EADC80 B.NE 0x1EADC6C
	0x01EADC84 MOVZ W2, 0x2
	0x01EADC88 MOV X0, X22
	0x01EADC8C BL 0x1C5C788
	0x01EADC90 B 0x1EADCA4
	0x01EADC94 LDR W9, [X10]
	0x01EADC98 ADD W9, W9, 0x2
	0x01EADC9C ADD X8, X8, W9, 0x4, SXTW
	0x01EADCA0 ADD X0, X8, 0x138
	0x01EADCA4 LDP X8, X3, [X0]
	0x01EADCA8 MOV X0, X22
	0x01EADCAC MOV X1, X19
	0x01EADCB0 MOV X2, X20
	0x01EADCB4 BLR X8
	0x01EADCB8 LDR X0, [X19 + 0x68]
	0x01EADCBC ADD W21, W21, 0x1
	0x01EADCC0 CBNZ X0, 0x1EADC34
	0x01EADCC4 BL 0x1C16F20
	0x01EADCC8 LDR X0, [X19 + 0x60]
	0x01EADCCC MOV X1, X20
	0x01EADCD0 LDP X20, X19, [X31 + 0x30]
	0x01EADCD4 LDP X22, X21, [X31 + 0x20]
	0x01EADCD8 LDP X24, X23, [X31 + 0x10]
	0x01EADCDC MOV X2, X31
	0x01EADCE0 LDR X30, [X31], #0x40
	0x01EADCE4 B 0x1E71AB8
	0x01EADCE8 STR X30, [X31 - 0x40]!
	0x01EADCEC STP X24, X23, [X31 + 0x10]
	0x01EADCF0 STP X22, X21, [X31 + 0x20]
	0x01EADCF4 STP X20, X19, [X31 + 0x30]
	0x01EADCF8 ADRP X21, 0x252C000
	0x01EADCFC LDRB W8, [X21 + 0x386]
	0x01EADD00 MOV X20, X1
	0x01EADD04 MOV X19, X0
	0x01EADD08 TBNZ X8, 0x0, 0x1EADD38
	0x01EADD0C ADRP X0, 0x2251000
	0x01EADD10 LDR X0, [X0 + 0x768]
	0x01EADD14 BL 0x1C16CF4
	0x01EADD18 ADRP X0, 0x2251000
	0x01EADD1C LDR X0, [X0 + 0x770]
	0x01EADD20 BL 0x1C16CF4
	0x01EADD24 ADRP X0, 0x2251000
	0x01EADD28 LDR X0, [X0 + 0x778]
	0x01EADD2C BL 0x1C16CF4
	0x01EADD30 MOVZ W8, 0x1
	0x01EADD34 STRB W8, [X21 + 0x386]
	0x01EADD38 LDR X0, [X19 + 0x60]
	0x01EADD3C AND X20, X20, 0x0
	0x01EADD40 MOV X1, X20
	0x01EADD44 MOV X2, X31
	0x01EADD48 BL 0x1E71E24
	0x01EADD4C LDR X0, [X19 + 0x68]
	0x01EADD50 CBZ X0, 0x1EADDF8
	0x01EADD54 ADRP X23, 0x2251000
	0x01EADD58 ADRP X24, 0x2251000
	0x01EADD5C LDR X23, [X23 + 0x778]
	0x01EADD60 LDR X24, [X24 + 0x768]
	0x01EADD64 MOV W21, W31
	0x01EADD68 LDR W8, [X0 + 0x18]
	0x01EADD6C CMP W21, W8
	0x01EADD70 B.GE 0x1EADDFC
	0x01EADD74 LDR X2, [X23]
	0x01EADD78 MOV W1, W21
	0x01EADD7C BL 0x301BCCC
	0x01EADD80 CBZ X0, 0x1EADDF8
	0x01EADD84 LDR X8, [X0]
	0x01EADD88 LDR X1, [X24]
	0x01EADD8C MOV X22, X0
	0x01EADD90 LDRH W9, [X8 + 0x12E]
	0x01EADD94 CBZ X9, 0x1EADDB8
	0x01EADD98 LDR X10, [X8 + 0xB0]
	0x01EADD9C ADD X10, X10, 0x8
	0x01EADDA0 LDUR X11, [X10 - 0x8]
	0x01EADDA4 CMP X11, X1
	0x01EADDA8 B.EQ 0x1EADDC8
	0x01EADDAC SUBS X9, X9, 0x1
	0x01EADDB0 ADD X10, X10, 0x10
	0x01EADDB4 B.NE 0x1EADDA0
	0x01EADDB8 MOVZ W2, 0x3
	0x01EADDBC MOV X0, X22
	0x01EADDC0 BL 0x1C5C788
	0x01EADDC4 B 0x1EADDD8
	0x01EADDC8 LDR W9, [X10]
	0x01EADDCC ADD W9, W9, 0x3
	0x01EADDD0 ADD X8, X8, W9, 0x4, SXTW
	0x01EADDD4 ADD X0, X8, 0x138
	0x01EADDD8 LDP X8, X3, [X0]
	0x01EADDDC MOV X0, X22
	0x01EADDE0 MOV X1, X19
	0x01EADDE4 MOV X2, X20
	0x01EADDE8 BLR X8
	0x01EADDEC LDR X0, [X19 + 0x68]
	0x01EADDF0 ADD W21, W21, 0x1
	0x01EADDF4 CBNZ X0, 0x1EADD68
	0x01EADDF8 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x252D000
	011 Move W8, [X22+895]
	012 Move X21, X2
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0x2252000
	020 Move X0, [X0+3648]
	021 Call 0x1C17CF4
	022 Move X0, 0x2252000
	023 Move X0, [X0+1896]
	024 Call 0x1C17CF4
	025 Move X0, 0x2252000
	026 Move X0, [X0+1904]
	027 Call 0x1C17CF4
	028 Move X0, 0x2252000
	029 Move X0, [X0+1912]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+895], W8
	033 Move [X31+8], X31
	034 Move X0, [X19+80]
	035 Compare X0, 0
	036 JumpIfEqual {137}
	037 And X1, X21, 0
	038 Add X2, X31, 8
	039 Move X3, X31
	040 Call Simulation.TryGetInstance, X0, X1, X2
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {138}
	045 Move X8, [X31+8]
	046 Compare X8, 0
	047 JumpIfEqual {137}
	048 Move X23, 0x2252000
	049 Move X23, [X23+3648]
	050 Move X22, X31
	051 And X20, X20, 0
	052 Move X8, [X8+120]
	053 Compare X8, 0
	054 JumpIfEqual {137}
	055 Move W9, [X8+24]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add X8, X8, X22
	059 Move X0, [X8+32]
	060 Move X1, [X23]
	061 Call 0x1C17E00
	062 Compare X0, 0
	063 JumpIfEqual {87}
	064 Move X8, [X0]
	065 Move X1, [X23]
	066 Move X21, X0
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Compare X9, 0
	069 JumpIfEqual {76}
	070 Move X10, [X8+176]
	071 Add X10, X10, 8
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract X9, X9, 1
	075 Add X10, X10, 16
	076 Move X0, X21
	077 Move W2, W31
	078 Call 0x1C5D788
	079 NotImplemented "Instruction LDRSW not yet implemented."
	080 Add X8, X8, X9
	081 Add X0, X8, 312
	082 Move X8, [X0]
	083 Move X2, [X0+8]
	084 Move X0, X21
	085 Move X1, X20
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move X8, [X31+8]
	088 Add X22, X22, 1
	089 Compare X8, 0
	090 JumpIfNotEqual {52}
	091 Move X0, [X19+104]
	092 Compare X0, 0
	093 JumpIfEqual {137}
	094 Move X24, 0x2252000
	095 Move X25, 0x2252000
	096 Move X24, [X24+1912]
	097 Move X25, [X25+1896]
	098 Move W21, W31
	099 Move W8, [X0+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X2, [X24]
	102 Move W1, W21
	103 Call List`1<Object>.get_Item, X0, X1
	104 Compare X0, 0
	105 JumpIfEqual {137}
	106 Move X8, [X0]
	107 Move X23, [X31+8]
	108 Move X1, [X25]
	109 Move X22, X0
	110 NotImplemented "Instruction LDRH not yet implemented."
	111 Compare X9, 0
	112 JumpIfEqual {119}
	113 Move X10, [X8+176]
	114 Add X10, X10, 8
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Subtract X9, X9, 1
	118 Add X10, X10, 16
	119 Move W2, 1
	120 Move X0, X22
	121 Call 0x1C5D788
	122 Move W9, [X10]
	123 Add W9, W9, 1
	124 Add X8, X8, W9
	125 Add X0, X8, 312
	126 Move X8, [X0]
	127 Move X4, [X0+8]
	128 Move X0, X22
	129 Move X1, X19
	130 Move X2, X23
	131 Move X3, X20
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Move X0, [X19+104]
	134 Add W21, W21, 1
	135 Compare X0, 0
	136 JumpIfNotEqual {99}
	137 Call 0x1C17F20
	138 Move X20, [X31+64]
	139 Move X19, [X31+72]
	140 Move X22, [X31+48]
	141 Move X21, [X31+56]
	142 Move X24, [X31+32]
	143 Move X23, [X31+40]
	144 Move X30, [X31+16]
	145 Move X25, [X31+24]
	146 Add X31, X31, 80
	147 Return 
	148 Call 0x1C17F28

Method: System.Void Fusion.Simulation.ICallbacks.ObjectExitAOI(Fusion.PlayerRef player, Fusion.NetworkId id)

Disassembly:
	0x01EADDFC LDP X20, X19, [X31 + 0x30]
	0x01EADE00 LDP X22, X21, [X31 + 0x20]
	0x01EADE04 LDP X24, X23, [X31 + 0x10]
	0x01EADE08 LDR X30, [X31], #0x40
	0x01EADE0C RET
	0x01EADE10 SUB X31, X31, 0x70
	0x01EADE14 STR X30, [X31 + 0x20]
	0x01EADE18 STP X26, X25, [X31 + 0x30]
	0x01EADE1C STP X24, X23, [X31 + 0x40]
	0x01EADE20 STP X22, X21, [X31 + 0x50]
	0x01EADE24 STP X20, X19, [X31 + 0x60]
	0x01EADE28 MRS X24, 0xC000
	0x01EADE2C LDR X8, [X24 + 0x28]
	0x01EADE30 ADRP X21, 0x252C000
	0x01EADE34 MOV X19, X2
	0x01EADE38 MOV X22, X1
	0x01EADE3C STR X8, [X31 + 0x18]
	0x01EADE40 LDRB W8, [X21 + 0x387]
	0x01EADE44 MOV X20, X0
	0x01EADE48 TBNZ X8, 0x0, 0x1EADE9C
	0x01EADE4C ADRP X0, 0x2251000
	0x01EADE50 LDR X0, [X0 + 0xED8]
	0x01EADE54 BL 0x1C16CF4
	0x01EADE58 ADRP X0, 0x2251000
	0x01EADE5C LDR X0, [X0 + 0x768]
	0x01EADE60 BL 0x1C16CF4
	0x01EADE64 ADRP X0, 0x2251000
	0x01EADE68 LDR X0, [X0 + 0x770]
	0x01EADE6C BL 0x1C16CF4
	0x01EADE70 ADRP X0, 0x2251000
	0x01EADE74 LDR X0, [X0 + 0x778]
	0x01EADE78 BL 0x1C16CF4
	0x01EADE7C ADRP X0, 0x2251000
	0x01EADE80 LDR X0, [X0 + 0xEE0]
	0x01EADE84 BL 0x1C16CF4
	0x01EADE88 ADRP X0, 0x2251000
	0x01EADE8C LDR X0, [X0 + 0xEE8]
	0x01EADE90 BL 0x1C16CF4
	0x01EADE94 MOVZ W8, 0x1
	0x01EADE98 STRB W8, [X21 + 0x387]
	0x01EADE9C LDR X8, [X20 + 0x68]
	0x01EADEA0 CBZ X8, 0x1EADFA0
	0x01EADEA4 LDR W8, [X8 + 0x18]
	0x01EADEA8 CMP W8, 0x1
	0x01EADEAC B.LT 0x1EADFD4
	0x01EADEB0 ADRP X8, 0x2251000
	0x01EADEB4 LDR X8, [X8 + 0xED8]
	0x01EADEB8 LDR X0, [X8]
	0x01EADEBC BL 0x1C16F10
	0x01EADEC0 MOV X1, X31
	0x01EADEC4 MOV X21, X0
	0x01EADEC8 BL 0x1EB92C8
	0x01EADECC LDR X8, [X22 + 0x10]
	0x01EADED0 LDR V0, [X22]
	0x01EADED4 STR X8, [X31 + 0x10]
	0x01EADED8 STR V0, [X31]
	0x01EADEDC CBZ X21, 0x1EADFA0
	0x01EADEE0 LDR X8, [X31 + 0x10]
	0x01EADEE4 LDR V0, [X31]
	0x01EADEE8 STR X8, [X21 + 0x20]
	0x01EADEEC STR V0, [X21 + 0x1]
	0x01EADEF0 LDR X0, [X20 + 0x68]
	0x01EADEF4 CBZ X0, 0x1EADFA0
	0x01EADEF8 ADRP X25, 0x2251000
	0x01EADEFC ADRP X26, 0x2251000
	0x01EADF00 LDR X25, [X25 + 0x778]
	0x01EADF04 LDR X26, [X26 + 0x768]
	0x01EADF08 MOV W22, W31
	0x01EADF0C LDR W8, [X0 + 0x18]
	0x01EADF10 CMP W22, W8
	0x01EADF14 B.GE 0x1EADFA4
	0x01EADF18 LDR X2, [X25]
	0x01EADF1C MOV W1, W22
	0x01EADF20 BL 0x301BCCC
	0x01EADF24 CBZ X0, 0x1EADFA0
	0x01EADF28 LDR X8, [X0]
	0x01EADF2C LDR X1, [X26]
	0x01EADF30 MOV X23, X0
	0x01EADF34 LDRH W9, [X8 + 0x12E]
	0x01EADF38 CBZ X9, 0x1EADF5C
	0x01EADF3C LDR X10, [X8 + 0xB0]
	0x01EADF40 ADD X10, X10, 0x8
	0x01EADF44 LDUR X11, [X10 - 0x8]
	0x01EADF48 CMP X11, X1
	0x01EADF4C B.EQ 0x1EADF6C
	0x01EADF50 SUBS X9, X9, 0x1
	0x01EADF54 ADD X10, X10, 0x10
	0x01EADF58 B.NE 0x1EADF44
	0x01EADF5C MOVZ W2, 0x9
	0x01EADF60 MOV X0, X23
	0x01EADF64 BL 0x1C5C788
	0x01EADF68 B 0x1EADF7C
	0x01EADF6C LDR W9, [X10]
	0x01EADF70 ADD W9, W9, 0x9
	0x01EADF74 ADD X8, X8, W9, 0x4, SXTW
	0x01EADF78 ADD X0, X8, 0x138
	0x01EADF7C LDP X8, X4, [X0]
	0x01EADF80 MOV X0, X23
	0x01EADF84 MOV X1, X20
	0x01EADF88 MOV X2, X21
	0x01EADF8C MOV X3, X19
	0x01EADF90 BLR X8
	0x01EADF94 LDR X0, [X20 + 0x68]
	0x01EADF98 ADD W22, W22, 0x1
	0x01EADF9C CBNZ X0, 0x1EADF0C
	0x01EADFA0 BL 0x1C16F20
	0x01EADFA4 LDRB W8, [X21 + 0x28]!
	0x01EADFA8 CBZ W8, 0x1EADFD4
	0x01EADFAC ADRP X8, 0x2251000
	0x01EADFB0 LDR X8, [X8 + 0xEE8]
	0x01EADFB4 MOV X0, X21
	0x01EADFB8 LDR X1, [X8]
	0x01EADFBC BL 0x24345D0
	0x01EADFC0 LDR X8, [X24 + 0x28]
	0x01EADFC4 LDR X9, [X31 + 0x18]
	0x01EADFC8 CMP X8, X9
	0x01EADFCC B.EQ 0x1EADFE8
	0x01EADFD0 B 0x1EAE004
	0x01EADFD4 LDR X8, [X24 + 0x28]
	0x01EADFD8 LDR X9, [X31 + 0x18]
	0x01EADFDC CMP X8, X9
	0x01EADFE0 B.NE 0x1EAE004
	0x01EADFE4 MOV W0, W31
	0x01EADFE8 LDP X20, X19, [X31 + 0x60]
	0x01EADFEC LDP X22, X21, [X31 + 0x50]
	0x01EADFF0 LDP X24, X23, [X31 + 0x40]
	0x01EADFF4 LDP X26, X25, [X31 + 0x30]
	0x01EADFF8 LDR X30, [X31 + 0x20]
	0x01EADFFC ADD X31, X31, 0x70
	0x01EAE000 RET
	0x01EAE004 BL 0x3EB1B20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x252D000
	011 Move W8, [X22+896]
	012 Move X21, X2
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0x2252000
	020 Move X0, [X0+3656]
	021 Call 0x1C17CF4
	022 Move X0, 0x2252000
	023 Move X0, [X0+1896]
	024 Call 0x1C17CF4
	025 Move X0, 0x2252000
	026 Move X0, [X0+1904]
	027 Call 0x1C17CF4
	028 Move X0, 0x2252000
	029 Move X0, [X0+1912]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+896], W8
	033 Move [X31+8], X31
	034 Move X0, [X20+80]
	035 Compare X0, 0
	036 JumpIfEqual {136}
	037 And X1, X21, 0
	038 Add X2, X31, 8
	039 Move X3, X31
	040 Call Simulation.TryGetInstance, X0, X1, X2
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {137}
	045 Move X0, [X20+104]
	046 Compare X0, 0
	047 JumpIfEqual {136}
	048 Move X24, 0x2252000
	049 Move X25, 0x2252000
	050 Move X24, [X24+1912]
	051 Move X25, [X25+1896]
	052 Move W21, W31
	053 And X19, X19, 0
	054 Move W8, [X0+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X2, [X24]
	057 Move W1, W21
	058 Call List`1<Object>.get_Item, X0, X1
	059 Compare X0, 0
	060 JumpIfEqual {136}
	061 Move X8, [X0]
	062 Move X23, [X31+8]
	063 Move X1, [X25]
	064 Move X22, X0
	065 NotImplemented "Instruction LDRH not yet implemented."
	066 Compare X9, 0
	067 JumpIfEqual {74}
	068 Move X10, [X8+176]
	069 Add X10, X10, 8
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Subtract X9, X9, 1
	073 Add X10, X10, 16
	074 Move X0, X22
	075 Move W2, W31
	076 Call 0x1C5D788
	077 NotImplemented "Instruction LDRSW not yet implemented."
	078 Add X8, X8, X9
	079 Add X0, X8, 312
	080 Move X8, [X0]
	081 Move X4, [X0+8]
	082 Move X0, X22
	083 Move X1, X20
	084 Move X2, X23
	085 Move X3, X19
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move X0, [X20+104]
	088 Add W21, W21, 1
	089 Compare X0, 0
	090 JumpIfNotEqual {54}
	091 Move X8, [X31+8]
	092 Compare X8, 0
	093 JumpIfEqual {136}
	094 Move X22, 0x2252000
	095 Move X22, [X22+3656]
	096 Move X21, X31
	097 Move X8, [X8+120]
	098 Compare X8, 0
	099 JumpIfEqual {136}
	100 Move W9, [X8+24]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Add X8, X8, X21
	104 Move X0, [X8+32]
	105 Move X1, [X22]
	106 Call 0x1C17E00
	107 Compare X0, 0
	108 JumpIfEqual {132}
	109 Move X8, [X0]
	110 Move X1, [X22]
	111 Move X20, X0
	112 NotImplemented "Instruction LDRH not yet implemented."
	113 Compare X9, 0
	114 JumpIfEqual {121}
	115 Move X10, [X8+176]
	116 Add X10, X10, 8
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Subtract X9, X9, 1
	120 Add X10, X10, 16
	121 Move X0, X20
	122 Move W2, W31
	123 Call 0x1C5D788
	124 NotImplemented "Instruction LDRSW not yet implemented."
	125 Add X8, X8, X9
	126 Add X0, X8, 312
	127 Move X8, [X0]
	128 Move X2, [X0+8]
	129 Move X0, X20
	130 Move X1, X19
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move X8, [X31+8]
	133 Add X21, X21, 1
	134 Compare X8, 0
	135 JumpIfNotEqual {97}
	136 Call 0x1C17F20
	137 Move X20, [X31+64]
	138 Move X19, [X31+72]
	139 Move X22, [X31+48]
	140 Move X21, [X31+56]
	141 Move X24, [X31+32]
	142 Move X23, [X31+40]
	143 Move X30, [X31+16]
	144 Move X25, [X31+24]
	145 Add X31, X31, 80
	146 Return 
	147 Call 0x1C17F28

Method: System.Void Fusion.Simulation.ICallbacks.OnConnectedToServer()

Disassembly:
	0x01EAE008 STP X30, X23, [X31 - 0x30]!
	0x01EAE00C STP X22, X21, [X31 + 0x10]
	0x01EAE010 STP X20, X19, [X31 + 0x20]
	0x01EAE014 MOV X19, X4
	0x01EAE018 MOV X20, X3
	0x01EAE01C MOV W21, W2
	0x01EAE020 MOV W22, W1
	0x01EAE024 MOV X23, X0
	0x01EAE028 STRB W31, [X3]
	0x01EAE02C STP X31, X31, [X4]
	0x01EAE030 STR X31, [X4 + 0x10]
	0x01EAE034 BL 0x1E9DF98
	0x01EAE038 TBZ X0, 0x0, 0x1EAE068
	0x01EAE03C LDR X0, [X23 + 0x1B0]
	0x01EAE040 CBZ X0, 0x1EAE078
	0x01EAE044 MOV W1, W22
	0x01EAE048 MOV W2, W21
	0x01EAE04C MOV X3, X20
	0x01EAE050 MOV X4, X19
	0x01EAE054 LDP X20, X19, [X31 + 0x20]
	0x01EAE058 LDP X22, X21, [X31 + 0x10]
	0x01EAE05C MOV X5, X31
	0x01EAE060 LDP X30, X23, [X31], #0x30
	0x01EAE064 B 0x1E69F50
	0x01EAE068 LDP X20, X19, [X31 + 0x20]
	0x01EAE06C LDP X22, X21, [X31 + 0x10]
	0x01EAE070 LDP X30, X23, [X31], #0x30
	0x01EAE074 RET
	0x01EAE078 BL 0x1C16F20
	0x01EAE07C STP X30, X19, [X31 - 0x10]!
	0x01EAE080 MOV X19, X0
	0x01EAE084 LDR X0, [X0 + 0x50]
	0x01EAE088 CBZ X0, 0x1EAE0C4
	0x01EAE08C MOV X1, X31
	0x01EAE090 BL 0x1EBDF30
	0x01EAE094 TBZ X0, 0x0, 0x1EAE0A0
	0x01EAE098 MOVZ W0, 0x1
	0x01EAE09C B 0x1EAE0C4
	0x01EAE0A0 LDR X8, [X19 + 0x50]
	0x01EAE0A4 CBZ X8, 0x1EAE0C0
	0x01EAE0A8 LDR X8, [X8 + 0x58]
	0x01EAE0AC CBZ X8, 0x1EAE0CC
	0x01EAE0B0 LDR W8, [X8 + 0x38]
	0x01EAE0B4 CMP W8, 0x2
	0x01EAE0B8 CSET W0, EQ
	0x01EAE0BC B 0x1EAE0C4
	0x01EAE0C0 MOV W0, W31
	0x01EAE0C4 LDP X30, X19, [X31], #0x10
	0x01EAE0C8 RET
	0x01EAE0CC BL 0x1C16F20
	0x01EAE0D0 SUB X31, X31, 0x60
	0x01EAE0D4 STR X30, [X31 + 0x40]
	0x01EAE0D8 STP X20, X19, [X31 + 0x50]
	0x01EAE0DC MOV X20, X2
	0x01EAE0E0 MOV W2, W1
	0x01EAE0E4 MOV X1, X0
	0x01EAE0E8 ADD X0, X31, 0x8
	0x01EAE0EC MOV X3, X31
	0x01EAE0F0 MOV X4, X31
	0x01EAE0F4 MOV X19, X8
	0x01EAE0F8 STP X31, X31, [X31 + 0x8]
	0x01EAE0FC STR X31, [X31 + 0x18]
	0x01EAE100 BL 0x1EB8134
	0x01EAE104 LDR X8, [X20 + 0x8]
	0x01EAE108 CBZ X8, 0x1EAE130

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x252C000
	008 Move W8, [X20+897]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x2251000
	015 Move X0, [X0+1896]
	016 Call 0x1C17CF4
	017 Move X0, 0x2251000
	018 Move X0, [X0+1904]
	019 Call 0x1C17CF4
	020 Move X0, 0x2251000
	021 Move X0, [X0+1912]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+897], W8
	025 Move X0, [X19+104]
	026 Compare X0, 0
	027 JumpIfEqual {68}
	028 Move X22, 0x2251000
	029 Move X23, 0x2251000
	030 Move X22, [X22+1912]
	031 Move X23, [X23+1896]
	032 Move W20, W31
	033 Move W8, [X0+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X2, [X22]
	036 Move W1, W20
	037 Call List`1<Object>.get_Item, X0, X1
	038 Compare X0, 0
	039 JumpIfEqual {68}
	040 Move X8, [X0]
	041 Move X1, [X23]
	042 Move X21, X0
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Compare X9, 0
	045 JumpIfEqual {52}
	046 Move X10, [X8+176]
	047 Add X10, X10, 8
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Subtract X9, X9, 1
	051 Add X10, X10, 16
	052 Move W2, 7
	053 Move X0, X21
	054 Call 0x1C5D788
	055 Move W9, [X10]
	056 Add W9, W9, 7
	057 Add X8, X8, W9
	058 Add X0, X8, 312
	059 Move X8, [X0]
	060 Move X2, [X0+8]
	061 Move X0, X21
	062 Move X1, X19
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move X0, [X19+104]
	065 Add W20, W20, 1
	066 Compare X0, 0
	067 JumpIfNotEqual {33}
	068 Call 0x1C17F20
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X30, [X31+48]
	074 Move X23, [X31+56]
	075 Return 

Method: System.Void Fusion.Simulation.ICallbacks.OnDisconnectedFromServer(Fusion.Sockets.NetDisconnectReason reason)

Disassembly:
	0x01EAE10C LDUR V0, [X31 + 0x8]
	0x01EAE110 LDR X9, [X31 + 0x18]
	0x01EAE114 LDR X10, [X8 + 0x18]
	0x01EAE118 LDR X0, [X8 + 0x40]
	0x01EAE11C STR V0, [X31 + 0x2]
	0x01EAE120 STR X9, [X31 + 0x30]
	0x01EAE124 LDR X2, [X8 + 0x28]
	0x01EAE128 ADD X1, X31, 0x20
	0x01EAE12C BLR X10
	0x01EAE130 LDR X8, [X31 + 0x18]
	0x01EAE134 LDUR V0, [X31 + 0x8]
	0x01EAE138 LDR X30, [X31 + 0x40]
	0x01EAE13C STR X8, [X19 + 0x10]
	0x01EAE140 STR V0, [X19]
	0x01EAE144 LDP X20, X19, [X31 + 0x50]
	0x01EAE148 ADD X31, X31, 0x60
	0x01EAE14C RET
	0x01EAE150 LDRB W8, [X0 + 0x4A]
	0x01EAE154 AND W0, W8, 0x1
	0x01EAE158 RET
	0x01EAE15C SUB X31, X31, 0xF0
	0x01EAE160 STR X30, [X31 + 0xB0]
	0x01EAE164 STP X24, X23, [X31 + 0xC0]
	0x01EAE168 STP X22, X21, [X31 + 0xD0]
	0x01EAE16C STP X20, X19, [X31 + 0xE0]
	0x01EAE170 ADRP X22, 0x252B000
	0x01EAE174 LDRB W9, [X22 + 0x3A9]
	0x01EAE178 MOV X21, X1
	0x01EAE17C MOV X19, X0
	0x01EAE180 MOV X20, X8
	0x01EAE184 TBNZ X9, 0x0, 0x1EAE1CC
	0x01EAE188 ADRP X0, 0x2248000
	0x01EAE18C LDR X0, [X0 + 0xBA0]
	0x01EAE190 BL 0x1C16CF4
	0x01EAE194 ADRP X0, 0x2248000
	0x01EAE198 LDR X0, [X0 + 0xB50]
	0x01EAE19C BL 0x1C16CF4
	0x01EAE1A0 ADRP X0, 0x2250000
	0x01EAE1A4 LDR X0, [X0 + 0xEF0]
	0x01EAE1A8 BL 0x1C16CF4
	0x01EAE1AC ADRP X0, 0x2250000
	0x01EAE1B0 LDR X0, [X0 + 0xEF8]
	0x01EAE1B4 BL 0x1C16CF4
	0x01EAE1B8 ADRP X0, 0x2250000
	0x01EAE1BC LDR X0, [X0 + 0xF00]
	0x01EAE1C0 BL 0x1C16CF4
	0x01EAE1C4 MOVZ W8, 0x1
	0x01EAE1C8 STRB W8, [X22 + 0x3A9]
	0x01EAE1CC LDRB W8, [X21 + 0x4A]
	0x01EAE1D0 TBNZ X8, 0x0, 0x1EAE2C8
	0x01EAE1D4 ADRP X8, 0x2250000
	0x01EAE1D8 LDR X8, [X8 + 0xF00]
	0x01EAE1DC ADRP X23, 0x2248000
	0x01EAE1E0 LDR X0, [X8]
	0x01EAE1E4 LDR X23, [X23 + 0xBA0]
	0x01EAE1E8 BL 0x1C16F10
	0x01EAE1EC MOV X1, X31
	0x01EAE1F0 MOV X22, X0
	0x01EAE1F4 BL 0x33BDD8C
	0x01EAE1F8 LDR X0, [X23]
	0x01EAE1FC BL 0x1C16F10
	0x01EAE200 MOV X1, X31
	0x01EAE204 MOV X23, X0
	0x01EAE208 BL 0x1EB89A4
	0x01EAE20C CBZ X23, 0x1EAE344
	0x01EAE210 STR W31, [X23 + 0x10]
	0x01EAE214 STR X31, [X23 + 0x18]
	0x01EAE218 CBZ X22, 0x1EAE344
	0x01EAE21C STR X23, [X22 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x252C000
	009 Move W8, [X21+898]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x2251000
	017 Move X0, [X0+1896]
	018 Call 0x1C17CF4
	019 Move X0, 0x2251000
	020 Move X0, [X0+1904]
	021 Call 0x1C17CF4
	022 Move X0, 0x2251000
	023 Move X0, [X0+1912]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+898], W8
	027 Move X0, [X20+104]
	028 Compare X0, 0
	029 JumpIfEqual {71}
	030 Move X23, 0x2251000
	031 Move X24, 0x2251000
	032 Move X23, [X23+1912]
	033 Move X24, [X24+1896]
	034 Move W21, W31
	035 Move W8, [X0+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X2, [X23]
	038 Move W1, W21
	039 Call List`1<Object>.get_Item, X0, X1
	040 Compare X0, 0
	041 JumpIfEqual {71}
	042 Move X8, [X0]
	043 Move X1, [X24]
	044 Move X22, X0
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Compare X9, 0
	047 JumpIfEqual {54}
	048 Move X10, [X8+176]
	049 Add X10, X10, 8
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Subtract X9, X9, 1
	053 Add X10, X10, 16
	054 Move W2, 8
	055 Move X0, X22
	056 Call 0x1C5D788
	057 Move W9, [X10]
	058 Add W9, W9, 8
	059 Add X8, X8, W9
	060 Add X0, X8, 312
	061 Move X8, [X0]
	062 Move X3, [X0+8]
	063 Move X0, X22
	064 Move X1, X20
	065 Move W2, W19
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X0, [X20+104]
	068 Add W21, W21, 1
	069 Compare X0, 0
	070 JumpIfNotEqual {35}
	071 Call 0x1C17F20
	072 Move X20, [X31+48]
	073 Move X19, [X31+56]
	074 Move X22, [X31+32]
	075 Move X21, [X31+40]
	076 Move X24, [X31+16]
	077 Move X23, [X31+24]
	078 Move X30, [X31+64]
	079 Return 

Method: System.Void Fusion.Simulation.ICallbacks.OnConnectionFailed(Fusion.Sockets.NetAddress remoteAddress, Fusion.Sockets.NetConnectFailedReason reason)

Disassembly:
	0x01EAE220 ADRP X8, 0x2248000
	0x01EAE224 LDR X8, [X8 + 0xB50]
	0x01EAE228 LDR X23, [X19 + 0x78]
	0x01EAE22C LDR X0, [X8]
	0x01EAE230 BL 0x1C16F10
	0x01EAE234 ADRP X8, 0x2250000
	0x01EAE238 LDR X8, [X8 + 0xEF8]
	0x01EAE23C MOV X1, X22
	0x01EAE240 MOV X3, X31
	0x01EAE244 MOV X24, X0
	0x01EAE248 LDR X2, [X8]
	0x01EAE24C BL 0x1EB8ECC
	0x01EAE250 MOVI V0.2D, 0x0
	0x01EAE254 ADD X0, X31, 0x0
	0x01EAE258 MOV X1, X21
	0x01EAE25C MOV X2, X24
	0x01EAE260 STR X31, [X31 + 0x50]
	0x01EAE264 STP V0, V0, [X31 + 0x30]
	0x01EAE268 STP V0, V0, [X31 + 0x10]
	0x01EAE26C STR V0, [X31]
	0x01EAE270 BL 0x1EB1DDC
	0x01EAE274 CBZ X23, 0x1EAE344
	0x01EAE278 ADRP X8, 0x2250000
	0x01EAE27C LDR X8, [X8 + 0xEF0]
	0x01EAE280 ADD X0, X31, 0x58
	0x01EAE284 ADD X1, X31, 0x0
	0x01EAE288 MOVZ W2, 0x58
	0x01EAE28C LDR X21, [X8]
	0x01EAE290 BL 0x3EB1AC0
	0x01EAE294 ADD X1, X31, 0x58
	0x01EAE298 MOV X0, X23
	0x01EAE29C MOV X2, X21
	0x01EAE2A0 BL 0x24F3980
	0x01EAE2A4 LDR X3, [X22 + 0x10]
	0x01EAE2A8 MOV X0, X20
	0x01EAE2AC MOV X1, X19
	0x01EAE2B0 MOV W2, W31
	0x01EAE2B4 MOV X4, X31
	0x01EAE2B8 STP X31, X31, [X20]
	0x01EAE2BC STR X31, [X20 + 0x10]
	0x01EAE2C0 BL 0x1EB8144
	0x01EAE2C4 B 0x1EAE32C
	0x01EAE2C8 LDR X22, [X19 + 0x78]
	0x01EAE2CC ADD X0, X31, 0x0
	0x01EAE2D0 MOVZ W2, 0x58
	0x01EAE2D4 MOV X1, X21
	0x01EAE2D8 BL 0x3EB1AC0
	0x01EAE2DC CBZ X22, 0x1EAE344
	0x01EAE2E0 ADRP X8, 0x2250000
	0x01EAE2E4 LDR X8, [X8 + 0xEF0]
	0x01EAE2E8 ADD X0, X31, 0x58
	0x01EAE2EC ADD X1, X31, 0x0
	0x01EAE2F0 MOVZ W2, 0x58
	0x01EAE2F4 LDR X21, [X8]
	0x01EAE2F8 BL 0x3EB1AC0
	0x01EAE2FC ADD X1, X31, 0x58
	0x01EAE300 MOV X0, X22
	0x01EAE304 MOV X2, X21
	0x01EAE308 BL 0x24F3980
	0x01EAE30C MOV X0, X20
	0x01EAE310 MOV X1, X19
	0x01EAE314 MOV W2, W31
	0x01EAE318 MOV X3, X31
	0x01EAE31C MOV X4, X31
	0x01EAE320 STP X31, X31, [X20]
	0x01EAE324 STR X31, [X20 + 0x10]
	0x01EAE328 BL 0x1EB8134
	0x01EAE32C LDP X20, X19, [X31 + 0xE0]
	0x01EAE330 LDP X22, X21, [X31 + 0xD0]
	0x01EAE334 LDP X24, X23, [X31 + 0xC0]
	0x01EAE338 LDR X30, [X31 + 0xB0]
	0x01EAE33C ADD X31, X31, 0xF0
	0x01EAE340 RET
	0x01EAE344 BL 0x1C16F20
	0x01EAE348 LDR W8, [X0 + 0x48]
	0x01EAE34C AND W0, W8, 0x1
	0x01EAE350 RET
	0x01EAE354 STP X30, X23, [X31 - 0x30]!
	0x01EAE358 STP X22, X21, [X31 + 0x10]
	0x01EAE35C STP X20, X19, [X31 + 0x20]
	0x01EAE360 ADRP X19, 0x252B000
	0x01EAE364 LDRB W8, [X19 + 0x389]
	0x01EAE368 MOV X21, X1
	0x01EAE36C MOV X20, X0
	0x01EAE370 TBNZ X8, 0x0, 0x1EAE3AC
	0x01EAE374 ADRP X0, 0x2248000
	0x01EAE378 LDR X0, [X0 + 0xDD8]
	0x01EAE37C BL 0x1C16CF4
	0x01EAE380 ADRP X0, 0x2248000
	0x01EAE384 LDR X0, [X0 + 0xDE0]
	0x01EAE388 BL 0x1C16CF4
	0x01EAE38C ADRP X0, 0x224F000
	0x01EAE390 LDR X0, [X0 + 0xB58]
	0x01EAE394 BL 0x1C16CF4
	0x01EAE398 ADRP X0, 0x224F000
	0x01EAE39C LDR X0, [X0 + 0xB60]
	0x01EAE3A0 BL 0x1C16CF4
	0x01EAE3A4 MOVZ W8, 0x1
	0x01EAE3A8 STRB W8, [X19 + 0x389]
	0x01EAE3AC LDRB W8, [X21 + 0x8]!
	0x01EAE3B0 MOV X19, X21
	0x01EAE3B4 LDRB W23, [X19 + 0x10]!
	0x01EAE3B8 CBZ W8, 0x1EAE3F4
	0x01EAE3BC CBZ X20, 0x1EAE4C4
	0x01EAE3C0 ADRP X22, 0x224F000
	0x01EAE3C4 LDR X22, [X22 + 0xB60]
	0x01EAE3C8 MOV X0, X20
	0x01EAE3CC MOV X1, X31
	0x01EAE3D0 BL 0x3C32E90
	0x01EAE3D4 LDR X1, [X22]
	0x01EAE3D8 MOV X22, X0
	0x01EAE3DC MOV X0, X21
	0x01EAE3E0 BL 0x243C008
	0x01EAE3E4 CBZ X22, 0x1EAE4C4
	0x01EAE3E8 MOV X0, X22
	0x01EAE3EC MOV X1, X31
	0x01EAE3F0 BL 0x3C3F62C
	0x01EAE3F4 CBZ W23, 0x1EAE48C
	0x01EAE3F8 CBZ X20, 0x1EAE4C4
	0x01EAE3FC ADRP X21, 0x224F000
	0x01EAE400 LDR X21, [X21 + 0xB58]
	0x01EAE404 MOV X0, X20
	0x01EAE408 MOV X1, X31
	0x01EAE40C BL 0x3C32E90
	0x01EAE410 LDR X1, [X21]
	0x01EAE414 MOV X20, X0
	0x01EAE418 MOV X0, X19
	0x01EAE41C BL 0x2437CB8
	0x01EAE420 FMOV S4, W31
	0x01EAE424 ADRP X8, 0xFFFFFFFFFEC3C000
	0x01EAE428 FMUL S0, S0, S4
	0x01EAE42C FMUL S1, S1, S4
	0x01EAE430 LDR V5, [X8 + 0x1B4]
	0x01EAE434 FMUL S2, S2, S4
	0x01EAE438 FADD S0, S0, S1
	0x01EAE43C FADD S0, S2, S0
	0x01EAE440 FMUL S1, S3, S4
	0x01EAE444 FADD S0, S1, S0
	0x01EAE448 FCMP S0, S5
	0x01EAE44C B.LE 0x1EAE49C
	0x01EAE450 ADRP X19, 0x252A000
	0x01EAE454 LDRB W8, [X19 + 0x793]
	0x01EAE458 CBNZ W8, 0x1EAE470
	0x01EAE45C ADRP X0, 0x2246000
	0x01EAE460 LDR X0, [X0 + 0x5A8]
	0x01EAE464 BL 0x1C16CF4
	0x01EAE468 MOVZ W8, 0x1
	0x01EAE46C STRB W8, [X19 + 0x793]
	0x01EAE470 ADRP X8, 0x2246000
	0x01EAE474 LDR X8, [X8 + 0x5A8]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+104], X27
	004 Move [X31+112], X26
	005 Move [X31+120], X25
	006 Move [X31+128], X24
	007 Move [X31+136], X23
	008 Move [X31+144], X22
	009 Move [X31+152], X21
	010 Move [X31+160], X20
	011 Move [X31+168], X19
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X26+40]
	014 Move X22, 0x252C000
	015 Move W19, W2
	016 Move X20, X1
	017 Move [X31+88], X8
	018 Move W8, [X22+899]
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {53}
	024 Move X0, 0x224F000
	025 Move X0, [X0+3688]
	026 Call 0x1C17CF4
	027 Move X0, 0x2251000
	028 Move X0, [X0+1896]
	029 Call 0x1C17CF4
	030 Move X0, 0x2251000
	031 Move X0, [X0+1904]
	032 Call 0x1C17CF4
	033 Move X0, 0x2251000
	034 Move X0, [X0+1912]
	035 Call 0x1C17CF4
	036 Move X0, 0x224F000
	037 Move X0, [X0+3696]
	038 Call 0x1C17CF4
	039 Move X0, 0x2248000
	040 Move X0, [X0+632]
	041 Call 0x1C17CF4
	042 Move X0, 0x2251000
	043 Move X0, [X0+3664]
	044 Call 0x1C17CF4
	045 Move X0, 0x2251000
	046 Move X0, [X0+3672]
	047 Call 0x1C17CF4
	048 Move X0, 0x2251000
	049 Move X0, [X0+3680]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X22+899], W8
	053 Subtract W8, W19, 1
	054 And W9, W8, 255
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X10, -20447232
	057 NotImplemented "Instruction SXTB not yet implemented."
	058 Add X10, X10, 3100
	059 Move W22, [X10]
	060 Move X9, 0x2007000
	061 Add X9, X9, 3872
	062 Add X8, X9, W8
	063 Move X8, 0x2248000
	064 Move X8, [X8+632]
	065 Move W22, 1
	066 Move X8, [X8]
	067 Add X8, X8, 184
	068 Move X23, [X21+424]
	069 Compare X23, 0
	070 JumpIfEqual {88}
	071 Move X9, 0x224F000
	072 Move X8, [X8]
	073 Move X9, [X9+3696]
	074 Move X27, 0x224F000
	075 Move X24, [X8]
	076 Move X0, [X9]
	077 Move X27, [X27+3688]
	078 Call 0x1C17F10
	079 Move W1, W22
	080 Move X2, X24
	081 Move X3, X31
	082 Move X25, X0
	083 Call StartGameException..ctor, X0, X1, X2
	084 Move X2, [X27]
	085 Move X0, X23
	086 Move X1, X25
	087 Call 0x24DAEDC, X0, X1
	088 Move X0, [X21+104]
	089 Compare X0, 0
	090 JumpIfEqual {145}
	091 Move X24, 0x2251000
	092 Move X25, 0x2251000
	093 Move X24, [X24+1912]
	094 Move X25, [X25+1896]
	095 Move W22, W31
	096 Move W8, [X0+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X2, [X24]
	099 Move W1, W22
	100 Call List`1<Object>.get_Item, X0, X1
	101 Move X8, [X20+16]
	102 Move V0, [X20]
	103 Move [X31+48], X8
	104 Move [X31+2], V0
	105 Compare X0, 0
	106 JumpIfEqual {145}
	107 Move V0, [X31+2]
	108 Move X8, [X31+48]
	109 Move X1, [X25]
	110 Move X23, X0
	111 Move [X31], V0
	112 Move [X31+16], X8
	113 Move X8, [X0]
	114 NotImplemented "Instruction LDRH not yet implemented."
	115 Compare X9, 0
	116 JumpIfEqual {123}
	117 Move X10, [X8+176]
	118 Add X10, X10, 8
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Subtract X9, X9, 1
	122 Add X10, X10, 16
	123 Move W2, 10
	124 Move X0, X23
	125 Call 0x1C5D788
	126 Move W9, [X10]
	127 Add W9, W9, 10
	128 Add X8, X8, W9
	129 Add X0, X8, 312
	130 Move V0, [X31]
	131 Move X8, [X31+16]
	132 Move X9, [X0]
	133 Add X2, X31, 64
	134 Move [X31+4], V0
	135 Move [X31+80], X8
	136 Move X4, [X0+8]
	137 Move X0, X23
	138 Move X1, X21
	139 Move W3, W19
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Move X0, [X21+104]
	142 Add W22, W22, 1
	143 Compare X0, 0
	144 JumpIfNotEqual {96}
	145 Call 0x1C17F20
	146 Move X8, [X26+40]
	147 Move X9, [X31+88]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move X20, [X31+160]
	150 Move X19, [X31+168]
	151 Move X22, [X31+144]
	152 Move X21, [X31+152]
	153 Move X24, [X31+128]
	154 Move X23, [X31+136]
	155 Move X26, [X31+112]
	156 Move X25, [X31+120]
	157 Move X30, [X31+96]
	158 Move X27, [X31+104]
	159 Add X31, X31, 176
	160 Return 
	161 Call 0x3EB2B20

Method: System.Void Fusion.Simulation.ICallbacks.OnReliableData(Fusion.PlayerRef player, Fusion.Sockets.ReliableId id, System.Boolean local, System.Byte[] dataArray)

Disassembly:
	0x01EAE478 LDR X8, [X8]
	0x01EAE47C LDR X8, [X8 + 0xB8]
	0x01EAE480 LDP S0, S1, [X8]
	0x01EAE484 LDP S2, S3, [X8 + 0x8]
	0x01EAE488 B 0x1EAE4A8
	0x01EAE48C LDP X20, X19, [X31 + 0x20]
	0x01EAE490 LDP X22, X21, [X31 + 0x10]
	0x01EAE494 LDP X30, X23, [X31], #0x30
	0x01EAE498 RET
	0x01EAE49C LDR X1, [X21]
	0x01EAE4A0 MOV X0, X19
	0x01EAE4A4 BL 0x2437CB8
	0x01EAE4A8 CBZ X20, 0x1EAE4C4
	0x01EAE4AC MOV X0, X20
	0x01EAE4B0 LDP X20, X19, [X31 + 0x20]
	0x01EAE4B4 LDP X22, X21, [X31 + 0x10]
	0x01EAE4B8 MOV X1, X31
	0x01EAE4BC LDP X30, X23, [X31], #0x30
	0x01EAE4C0 B 0x3C3F7AC
	0x01EAE4C4 BL 0x1C16F20
	0x01EAE4C8 STR X30, [X31 - 0x30]!
	0x01EAE4CC STP X22, X21, [X31 + 0x10]
	0x01EAE4D0 STP X20, X19, [X31 + 0x20]
	0x01EAE4D4 ADRP X21, 0x252B000
	0x01EAE4D8 ADRP X22, 0x2245000
	0x01EAE4DC LDRB W8, [X21 + 0x3A8]
	0x01EAE4E0 LDR X22, [X22 + 0x598]
	0x01EAE4E4 MOV X19, X1
	0x01EAE4E8 MOV X20, X0
	0x01EAE4EC TBNZ X8, 0x0, 0x1EAE510
	0x01EAE4F0 ADRP X0, 0x2248000
	0x01EAE4F4 LDR X0, [X0 + 0x398]
	0x01EAE4F8 BL 0x1C16CF4
	0x01EAE4FC ADRP X0, 0x2245000
	0x01EAE500 LDR X0, [X0 + 0x598]
	0x01EAE504 BL 0x1C16CF4
	0x01EAE508 MOVZ W8, 0x1
	0x01EAE50C STRB W8, [X21 + 0x3A8]
	0x01EAE510 LDR X0, [X22]
	0x01EAE514 LDR W8, [X0 + 0xE0]
	0x01EAE518 CBNZ W8, 0x1EAE520
	0x01EAE51C BL 0x1C16DFC
	0x01EAE520 MOV X0, X19
	0x01EAE524 MOV X1, X31
	0x01EAE528 MOV X2, X31
	0x01EAE52C BL 0x3C354F8
	0x01EAE530 TBZ X0, 0x0, 0x1EAE57C
	0x01EAE534 CBZ X19, 0x1EAE5A8
	0x01EAE538 LDR X8, [X19 + 0x20]
	0x01EAE53C CBZ X8, 0x1EAE548
	0x01EAE540 LDR W21, [X8]
	0x01EAE544 B 0x1EAE54C
	0x01EAE548 MOV W21, W31
	0x01EAE54C ADRP X8, 0x2248000
	0x01EAE550 LDR X8, [X8 + 0x398]
	0x01EAE554 LDR X0, [X8]
	0x01EAE558 LDR W8, [X0 + 0xE0]
	0x01EAE55C CBZ W8, 0x1EAE574
	0x01EAE560 CBZ W21, 0x1EAE57C
	0x01EAE564 LDR X8, [X19 + 0x20]
	0x01EAE568 CBZ X8, 0x1EAE5A0
	0x01EAE56C LDR W0, [X8]
	0x01EAE570 B 0x1EAE58C
	0x01EAE574 BL 0x1C16DFC
	0x01EAE578 CBNZ W21, 0x1EAE564
	0x01EAE57C LDR X0, [X20 + 0x50]
	0x01EAE580 CBZ X0, 0x1EAE5A8
	0x01EAE584 MOV X1, X31
	0x01EAE588 BL 0x1EC4400
	0x01EAE58C LDP X20, X19, [X31 + 0x20]
	0x01EAE590 LDP X22, X21, [X31 + 0x10]
	0x01EAE594 AND X0, X0, 0x0
	0x01EAE598 LDR X30, [X31], #0x30
	0x01EAE59C RET
	0x01EAE5A0 MOV X0, X31
	0x01EAE5A4 B 0x1EAE58C
	0x01EAE5A8 BL 0x1C16F20
	0x01EAE5AC STR X30, [X31 - 0x20]!
	0x01EAE5B0 STP X20, X19, [X31 + 0x10]
	0x01EAE5B4 ADRP X20, 0x252B000
	0x01EAE5B8 LDRB W8, [X20 + 0x3AB]
	0x01EAE5BC MOV X19, X0
	0x01EAE5C0 TBNZ X8, 0x0, 0x1EAE5D8
	0x01EAE5C4 ADRP X0, 0x2249000
	0x01EAE5C8 LDR X0, [X0 + 0xFD8]
	0x01EAE5CC BL 0x1C16CF4
	0x01EAE5D0 MOVZ W8, 0x1
	0x01EAE5D4 STRB W8, [X20 + 0x3AB]
	0x01EAE5D8 LDR W8, [X19 + 0x48]
	0x01EAE5DC TBNZ X8, 0x1, 0x1EAE5EC
	0x01EAE5E0 STRH W31, [X31 + 0xC]
	0x01EAE5E4 TBNZ X8, 0x2, 0x1EAE5F0
	0x01EAE5E8 B 0x1EAE608
	0x01EAE5EC STRH W31, [X31 + 0xC]
	0x01EAE5F0 ADRP X9, 0x2249000
	0x01EAE5F4 LDR X9, [X9 + 0xFD8]
	0x01EAE5F8 UBFM W1, W8, 0x1, 0x1
	0x01EAE5FC ADD X0, X31, 0xC
	0x01EAE600 LDR X2, [X9]
	0x01EAE604 BL 0x242D570
	0x01EAE608 LDRH W0, [X31 + 0xC]
	0x01EAE60C LDP X20, X19, [X31 + 0x10]
	0x01EAE610 LDR X30, [X31], #0x20
	0x01EAE614 RET
	0x01EAE618 SUB X31, X31, 0x60
	0x01EAE61C STP X30, X21, [X31 + 0x40]
	0x01EAE620 STP X20, X19, [X31 + 0x50]
	0x01EAE624 MOV X20, X1
	0x01EAE628 MOV X21, X2
	0x01EAE62C MOV X1, X0
	0x01EAE630 ADD X0, X31, 0x8
	0x01EAE634 MOVZ W2, 0x1
	0x01EAE638 MOV X3, X20
	0x01EAE63C MOV X4, X31
	0x01EAE640 MOV X19, X8
	0x01EAE644 STP X31, X31, [X31 + 0x8]
	0x01EAE648 STR X31, [X31 + 0x18]
	0x01EAE64C BL 0x1EB8134
	0x01EAE650 LDR X8, [X21 + 0x8]
	0x01EAE654 CBZ X8, 0x1EAE67C
	0x01EAE658 LDUR V0, [X31 + 0x8]
	0x01EAE65C LDR X9, [X31 + 0x18]
	0x01EAE660 LDR X10, [X8 + 0x18]
	0x01EAE664 LDR X0, [X8 + 0x40]
	0x01EAE668 STR V0, [X31 + 0x2]
	0x01EAE66C STR X9, [X31 + 0x30]
	0x01EAE670 LDR X2, [X8 + 0x28]
	0x01EAE674 ADD X1, X31, 0x20
	0x01EAE678 BLR X10
	0x01EAE67C CBZ X20, 0x1EAE6A4
	0x01EAE680 STRB W31, [X20 + 0x28]
	0x01EAE684 LDR X8, [X31 + 0x18]
	0x01EAE688 LDUR V0, [X31 + 0x8]
	0x01EAE68C LDP X30, X21, [X31 + 0x40]
	0x01EAE690 STR X8, [X19 + 0x10]
	0x01EAE694 STR V0, [X19]
	0x01EAE698 LDP X20, X19, [X31 + 0x50]
	0x01EAE69C ADD X31, X31, 0x60
	0x01EAE6A0 RET
	0x01EAE6A4 BL 0x1C16F20
	0x01EAE6A8 SUB X31, X31, 0x90
	0x01EAE6AC STR X30, [X31 + 0x30]
	0x01EAE6B0 STP X28, X27, [X31 + 0x40]
	0x01EAE6B4 STP X26, X25, [X31 + 0x50]
	0x01EAE6B8 STP X24, X23, [X31 + 0x60]
	0x01EAE6BC STP X22, X21, [X31 + 0x70]
	0x01EAE6C0 STP X20, X19, [X31 + 0x80]
	0x01EAE6C4 ADRP X28, 0x252B000
	0x01EAE6C8 ADRP X27, 0x2245000
	0x01EAE6CC LDRB W8, [X28 + 0x38A]
	0x01EAE6D0 LDR X27, [X27 + 0x598]
	0x01EAE6D4 MOV W19, W7
	0x01EAE6D8 MOV X20, X6
	0x01EAE6DC MOV X21, X5
	0x01EAE6E0 MOV X25, X4
	0x01EAE6E4 MOV X22, X3
	0x01EAE6E8 MOV X23, X2
	0x01EAE6EC MOV X26, X1
	0x01EAE6F0 MOV X24, X0
	0x01EAE6F4 TBNZ X8, 0x0, 0x1EAE718
	0x01EAE6F8 ADRP X0, 0x2250000
	0x01EAE6FC LDR X0, [X0 + 0xF08]
	0x01EAE700 BL 0x1C16CF4
	0x01EAE704 ADRP X0, 0x2245000
	0x01EAE708 LDR X0, [X0 + 0x598]
	0x01EAE70C BL 0x1C16CF4
	0x01EAE710 MOVZ W8, 0x1
	0x01EAE714 STRB W8, [X28 + 0x38A]
	0x01EAE718 LDR X0, [X27]
	0x01EAE71C STR X31, [X31 + 0x38]
	0x01EAE720 LDR W8, [X0 + 0xE0]
	0x01EAE724 CBNZ W8, 0x1EAE72C
	0x01EAE728 BL 0x1C16DFC
	0x01EAE72C MOV X0, X26
	0x01EAE730 MOV X1, X31
	0x01EAE734 MOV X2, X31
	0x01EAE738 BL 0x3C3883C
	0x01EAE73C TBNZ X0, 0x0, 0x1EAE7B4
	0x01EAE740 CBZ X26, 0x1EAE7E8
	0x01EAE744 ADRP X8, 0x2250000
	0x01EAE748 LDR X8, [X8 + 0xF08]
	0x01EAE74C ADD X1, X31, 0x38
	0x01EAE750 MOV X0, X26
	0x01EAE754 LDR X2, [X8]
	0x01EAE758 BL 0x21E6600
	0x01EAE75C TBZ X0, 0x0, 0x1EAE7EC
	0x01EAE760 LDR V0, [X25]
	0x01EAE764 LDR W8, [X25 + 0x10]
	0x01EAE768 LDR X1, [X31 + 0x38]
	0x01EAE76C ADD X4, X31, 0x10
	0x01EAE770 MOV X0, X24
	0x01EAE774 MOV X2, X23
	0x01EAE778 MOV X3, X22
	0x01EAE77C MOV X5, X21
	0x01EAE780 MOV X6, X20
	0x01EAE784 MOV W7, W19
	0x01EAE788 STR V0, [X31 + 0x1]
	0x01EAE78C STR W8, [X31 + 0x20]
	0x01EAE790 BL 0x1EAE848
	0x01EAE794 LDP X20, X19, [X31 + 0x80]
	0x01EAE798 LDP X22, X21, [X31 + 0x70]
	0x01EAE79C LDP X24, X23, [X31 + 0x60]
	0x01EAE7A0 LDP X26, X25, [X31 + 0x50]
	0x01EAE7A4 LDP X28, X27, [X31 + 0x40]
	0x01EAE7A8 LDR X30, [X31 + 0x30]
	0x01EAE7AC ADD X31, X31, 0x90
	0x01EAE7B0 RET
	0x01EAE7B4 ADRP X0, 0x224A000
	0x01EAE7B8 LDR X0, [X0 + 0x528]
	0x01EAE7BC BL 0x1C16D08
	0x01EAE7C0 BL 0x1C16F10
	0x01EAE7C4 MOV X19, X0
	0x01EAE7C8 ADRP X0, 0x2250000
	0x01EAE7CC LDR X0, [X0 + 0xF10]
	0x01EAE7D0 BL 0x1C16D08
	0x01EAE7D4 MOV X1, X0
	0x01EAE7D8 MOV X0, X19
	0x01EAE7DC MOV X2, X31
	0x01EAE7E0 BL 0x330E100
	0x01EAE7E4 B 0x1EAE830
	0x01EAE7E8 BL 0x1C16F20
	0x01EAE7EC ADRP X0, 0x224D000
	0x01EAE7F0 LDR X0, [X0 + 0x578]
	0x01EAE7F4 BL 0x1C16D08
	0x01EAE7F8 BL 0x1C16F10
	0x01EAE7FC MOV X19, X0
	0x01EAE800 ADRP X0, 0x2250000
	0x01EAE804 LDR X0, [X0 + 0xF18]
	0x01EAE808 BL 0x1C16D08
	0x01EAE80C MOV X20, X0
	0x01EAE810 ADRP X0, 0x2250000
	0x01EAE814 LDR X0, [X0 + 0xF10]
	0x01EAE818 BL 0x1C16D08
	0x01EAE81C MOV X2, X0
	0x01EAE820 MOV X0, X19
	0x01EAE824 MOV X1, X20
	0x01EAE828 MOV X3, X31
	0x01EAE82C BL 0x330E16C
	0x01EAE830 ADRP X0, 0x2250000
	0x01EAE834 LDR X0, [X0 + 0xF20]
	0x01EAE838 BL 0x1C16D08
	0x01EAE83C MOV X1, X0
	0x01EAE840 MOV X0, X19
	0x01EAE844 BL 0x1C16DEC
	0x01EAE848 SUB X31, X31, 0x110
	0x01EAE84C STP X29, X30, [X31 + 0xB0]
	0x01EAE850 STP X28, X27, [X31 + 0xC0]
	0x01EAE854 STP X26, X25, [X31 + 0xD0]
	0x01EAE858 STP X24, X23, [X31 + 0xE0]
	0x01EAE85C STP X22, X21, [X31 + 0xF0]
	0x01EAE860 STP X20, X19, [X31 + 0x100]
	0x01EAE864 MRS X28, 0xC000
	0x01EAE868 LDR X8, [X28 + 0x28]
	0x01EAE86C ADRP X27, 0x252B000
	0x01EAE870 MOV W26, W7
	0x01EAE874 MOV X21, X6
	0x01EAE878 STR X8, [X31 + 0xA8]
	0x01EAE87C LDRB W8, [X27 + 0x38B]
	0x01EAE880 MOV X22, X5
	0x01EAE884 MOV X23, X4
	0x01EAE888 MOV X25, X3
	0x01EAE88C MOV X24, X2
	0x01EAE890 MOV X19, X1
	0x01EAE894 MOV X20, X0
	0x01EAE898 TBNZ X8, 0x0, 0x1EAE8C8
	0x01EAE89C ADRP X0, 0x2250000
	0x01EAE8A0 LDR X0, [X0 + 0xF28]
	0x01EAE8A4 BL 0x1C16CF4
	0x01EAE8A8 ADRP X0, 0x2248000
	0x01EAE8AC LDR X0, [X0 + 0x398]
	0x01EAE8B0 BL 0x1C16CF4
	0x01EAE8B4 ADRP X0, 0x2250000
	0x01EAE8B8 LDR X0, [X0 + 0x378]
	0x01EAE8BC BL 0x1C16CF4
	0x01EAE8C0 MOVZ W8, 0x1
	0x01EAE8C4 STRB W8, [X27 + 0x38B]
	0x01EAE8C8 MOVI V0.2D, 0x0
	0x01EAE8CC STR X31, [X31 + 0x80]
	0x01EAE8D0 STR W31, [X31 + 0x78]
	0x01EAE8D4 STR X31, [X31 + 0x70]
	0x01EAE8D8 STP X31, X31, [X31 + 0x8]
	0x01EAE8DC STP V0, V0, [X31 + 0x50]
	0x01EAE8E0 STP V0, V0, [X31 + 0x30]
	0x01EAE8E4 STR V0, [X31 + 0x2]
	0x01EAE8E8 STR X31, [X31 + 0x18]
	0x01EAE8EC CBZ X19, 0x1EAEA6C
	0x01EAE8F0 ADRP X27, 0x2250000
	0x01EAE8F4 LDR X27, [X27 + 0x378]
	0x01EAE8F8 LDUR X8, [X19 + 0x64]
	0x01EAE8FC LDR X0, [X27]
	0x01EAE900 STR X8, [X31 + 0x88]
	0x01EAE904 LDR W8, [X0 + 0xE0]
	0x01EAE908 CBNZ W8, 0x1EAE910
	0x01EAE90C BL 0x1C16DFC
	0x01EAE910 ADD X0, X31, 0x88
	0x01EAE914 MOV X1, X31
	0x01EAE918 BL 0x1E96160
	0x01EAE91C TBNZ X0, 0x0, 0x1EAE99C
	0x01EAE920 ADRP X8, 0x2250000
	0x01EAE924 LDR X8, [X8 + 0xF28]
	0x01EAE928 ADD X1, X31, 0x80
	0x01EAE92C MOV X0, X19
	0x01EAE930 LDR X2, [X8]
	0x01EAE934 BL 0x21A4990
	0x01EAE938 TBZ X0, 0x0, 0x1EAEAB4
	0x01EAE93C LDR X9, [X20 + 0x98]
	0x01EAE940 CBZ X9, 0x1EAEAD0
	0x01EAE944 LDR X8, [X31 + 0x80]
	0x01EAE948 CBZ X8, 0x1EAEAD4
	0x01EAE94C LDR X0, [X9 + 0x38]
	0x01EAE950 CBZ X0, 0x1EAEAD4
	0x01EAE954 LDP X1, X2, [X8 + 0x20]
	0x01EAE958 MOV X3, X31
	0x01EAE95C BL 0x1E9AB04
	0x01EAE960 STR W0, [X31 + 0x78]
	0x01EAE964 ADD X0, X31, 0x78
	0x01EAE968 MOV X1, X31
	0x01EAE96C BL 0x1E991E8
	0x01EAE970 TBZ X0, 0x0, 0x1EAEAD8
	0x01EAE974 LDR X0, [X27]
	0x01EAE978 LDR W27, [X31 + 0x78]
	0x01EAE97C LDR W8, [X0 + 0xE0]
	0x01EAE980 CBNZ W8, 0x1EAE988
	0x01EAE984 BL 0x1C16DFC
	0x01EAE988 MOV X0, X27
	0x01EAE98C MOV X1, X31
	0x01EAE990 BL 0x1E99830
	0x01EAE994 STR X0, [X31 + 0x88]
	0x01EAE998 STUR X0, [X19 + 0x64]
	0x01EAE99C MOV X0, X20
	0x01EAE9A0 BL 0x1E9D0AC
	0x01EAE9A4 TBZ X0, 0x0, 0x1EAE9B8
	0x01EAE9A8 LDR X8, [X19 + 0x20]
	0x01EAE9AC CBZ X8, 0x1EAE9C0
	0x01EAE9B0 LDR W27, [X8]
	0x01EAE9B4 B 0x1EAE9C4
	0x01EAE9B8 MOV X8, X31
	0x01EAE9BC B 0x1EAE9E4
	0x01EAE9C0 MOV W27, W31
	0x01EAE9C4 ADRP X8, 0x2248000
	0x01EAE9C8 LDR X8, [X8 + 0x398]
	0x01EAE9CC LDR X0, [X8]
	0x01EAE9D0 LDR W8, [X0 + 0xE0]
	0x01EAE9D4 CBNZ W8, 0x1EAE9DC
	0x01EAE9D8 BL 0x1C16DFC
	0x01EAE9DC CMP W27, 0x0
	0x01EAE9E0 CSEL X8, X31, X19, EQ
	0x01EAE9E4 LDR X9, [X31 + 0x88]
	0x01EAE9E8 STP X24, X25, [X31 + 0x28]
	0x01EAE9EC SXTH W10, W26
	0x01EAE9F0 ORR W10, W10, 0x10000
	0x01EAE9F4 STR X9, [X31 + 0x20]
	0x01EAE9F8 LDR W9, [X23 + 0x10]
	0x01EAE9FC LDR V0, [X23]
	0x01EAEA00 STR X8, [X31 + 0x70]
	0x01EAEA04 ADD X8, X31, 0x8
	0x01EAEA08 ADD X1, X31, 0x20
	0x01EAEA0C MOV X0, X20
	0x01EAEA10 STUR X22, [X31 + 0x4C]
	0x01EAEA14 STR W31, [X31 + 0x54]
	0x01EAEA18 STP X21, X31, [X31 + 0x58]
	0x01EAEA1C STP W10, W31, [X31 + 0x68]
	0x01EAEA20 STUR V0, [X31 + 0x38]
	0x01EAEA24 STR W9, [X31 + 0x48]
	0x01EAEA28 BL 0x1EAB01C
	0x01EAEA2C LDR X1, [X31 + 0x88]
	0x01EAEA30 ADD X0, X31, 0x8
	0x01EAEA34 MOV X2, X31
	0x01EAEA38 BL 0x1EB35B4
	0x01EAEA3C LDR X8, [X28 + 0x28]
	0x01EAEA40 LDR X9, [X31 + 0xA8]
	0x01EAEA44 CMP X8, X9
	0x01EAEA48 B.NE 0x1EAEB5C
	0x01EAEA4C LDP X20, X19, [X31 + 0x100]
	0x01EAEA50 LDP X22, X21, [X31 + 0xF0]
	0x01EAEA54 LDP X24, X23, [X31 + 0xE0]
	0x01EAEA58 LDP X26, X25, [X31 + 0xD0]
	0x01EAEA5C LDP X28, X27, [X31 + 0xC0]
	0x01EAEA60 LDP X29, X30, [X31 + 0xB0]
	0x01EAEA64 ADD X31, X31, 0x110
	0x01EAEA68 RET
	0x01EAEA6C ADRP X0, 0x224A000
	0x01EAEA70 LDR X0, [X0 + 0x528]
	0x01EAEA74 BL 0x1C16D08
	0x01EAEA78 BL 0x1C16F10
	0x01EAEA7C MOV X19, X0
	0x01EAEA80 ADRP X0, 0x2250000
	0x01EAEA84 LDR X0, [X0 + 0xF10]
	0x01EAEA88 BL 0x1C16D08
	0x01EAEA8C MOV X1, X0
	0x01EAEA90 MOV X0, X19
	0x01EAEA94 MOV X2, X31
	0x01EAEA98 BL 0x330E100
	0x01EAEA9C ADRP X0, 0x2250000
	0x01EAEAA0 LDR X0, [X0 + 0xF30]
	0x01EAEAA4 BL 0x1C16D08
	0x01EAEAA8 MOV X1, X0
	0x01EAEAAC MOV X0, X19
	0x01EAEAB0 BL 0x1C16DEC
	0x01EAEAB4 ADRP X0, 0x2250000
	0x01EAEAB8 LDR X0, [X0 + 0xF38]
	0x01EAEABC BL 0x1C16D08
	0x01EAEAC0 MOV X1, X19
	0x01EAEAC4 MOV X2, X31
	0x01EAEAC8 BL 0x321EFD0
	0x01EAEACC B 0x1EAEB20
	0x01EAEAD0 LDR X8, [X31 + 0x80]
	0x01EAEAD4 BL 0x1C16F20
	0x01EAEAD8 LDR X20, [X31 + 0x80]
	0x01EAEADC MOV X0, X20
	0x01EAEAE0 BL 0x19903C0
	0x01EAEAE4 LDR V0, [X20 + 0x2]
	0x01EAEAE8 ADRP X0, 0x2250000
	0x01EAEAEC STR V0, [X31 + 0x9]
	0x01EAEAF0 LDR X0, [X0 + 0x350]
	0x01EAEAF4 BL 0x1C16D08
	0x01EAEAF8 ADD X1, X31, 0x90
	0x01EAEAFC BL 0x1C16E04
	0x01EAEB00 MOV X20, X0
	0x01EAEB04 ADRP X0, 0x2250000
	0x01EAEB08 LDR X0, [X0 + 0xF40]
	0x01EAEB0C BL 0x1C16D08
	0x01EAEB10 MOV X1, X19
	0x01EAEB14 MOV X2, X20
	0x01EAEB18 MOV X3, X31
	0x01EAEB1C BL 0x3227BD4
	0x01EAEB20 MOV X19, X0
	0x01EAEB24 ADRP X0, 0x2245000
	0x01EAEB28 LDR X0, [X0 + 0x5B0]
	0x01EAEB2C BL 0x1C16D08
	0x01EAEB30 BL 0x1C16F10
	0x01EAEB34 MOV X1, X19
	0x01EAEB38 MOV X2, X31
	0x01EAEB3C MOV X20, X0
	0x01EAEB40 BL 0x337DF1C
	0x01EAEB44 ADRP X0, 0x2250000
	0x01EAEB48 LDR X0, [X0 + 0xF30]
	0x01EAEB4C BL 0x1C16D08
	0x01EAEB50 MOV X1, X0
	0x01EAEB54 MOV X0, X20
	0x01EAEB58 BL 0x1C16DEC
	0x01EAEB5C BL 0x3EB1B20
	0x01EAEB60 LDRB W8, [X31 + 0x8]
	0x01EAEB64 STP X1, X2, [X0]
	0x01EAEB68 STR X3, [X0 + 0x10]
	0x01EAEB6C LDR X9, [X31 + 0x10]
	0x01EAEB70 LDR X10, [X31]
	0x01EAEB74 LDR V0, [X4]
	0x01EAEB78 LDR W12, [X4 + 0x10]
	0x01EAEB7C SXTH W11, W7
	0x01EAEB80 ORR W13, W11, 0x10000
	0x01EAEB84 ANDS W31, W8, 0x1
	0x01EAEB88 CSEL W8, W13, W11, NE
	0x01EAEB8C STUR X5, [X0 + 0x2C]
	0x01EAEB90 STP X6, X10, [X0 + 0x38]
	0x01EAEB94 STR X9, [X0 + 0x50]
	0x01EAEB98 STR W12, [X0 + 0x28]
	0x01EAEB9C STUR V0, [X0 + 0x18]
	0x01EAEBA0 STR W8, [X0 + 0x48]
	0x01EAEBA4 RET
	0x01EAEBA8 SUB X31, X31, 0x110
	0x01EAEBAC STR X29, [X31 + 0xB0]
	0x01EAEBB0 STP X30, X27, [X31 + 0xC0]
	0x01EAEBB4 STP X26, X25, [X31 + 0xD0]
	0x01EAEBB8 STP X24, X23, [X31 + 0xE0]
	0x01EAEBBC STP X22, X21, [X31 + 0xF0]
	0x01EAEBC0 STP X20, X19, [X31 + 0x100]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+64], D9
	003 Move [X31+72], D8
	004 Move [X31+80], X29
	005 Move [X31+88], X30
	006 Move [X31+96], X28
	007 Move [X31+104], X27
	008 Move [X31+112], X26
	009 Move [X31+120], X25
	010 Move [X31+128], X24
	011 Move [X31+136], X23
	012 Move [X31+144], X22
	013 Move [X31+152], X21
	014 Move [X31+160], X20
	015 Move [X31+168], X19
	016 Move X22, 0x252C000
	017 Move W8, [X22+900]
	018 Move W23, W3
	019 Move X19, X2
	020 Move X21, X1
	021 Move X20, X0
	022 Move [X31], X4
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {89}
	027 Move X0, 0x2251000
	028 Move X0, [X0+3688]
	029 Call 0x1C17CF4
	030 Move X0, 0x2246000
	031 Move X0, [X0+1560]
	032 Call 0x1C17CF4
	033 Move X0, 0x2251000
	034 Move X0, [X0+3696]
	035 Call 0x1C17CF4
	036 Move X0, 0x2251000
	037 Move X0, [X0+3704]
	038 Call 0x1C17CF4
	039 Move X0, 0x2251000
	040 Move X0, [X0+3712]
	041 Call 0x1C17CF4
	042 Move X0, 0x2251000
	043 Move X0, [X0+3720]
	044 Call 0x1C17CF4
	045 Move X0, 0x2251000
	046 Move X0, [X0+3728]
	047 Call 0x1C17CF4
	048 Move X0, 0x2251000
	049 Move X0, [X0+3736]
	050 Call 0x1C17CF4
	051 Move X0, 0x2251000
	052 Move X0, [X0+3744]
	053 Call 0x1C17CF4
	054 Move X0, 0x2251000
	055 Move X0, [X0+3752]
	056 Call 0x1C17CF4
	057 Move X0, 0x2251000
	058 Move X0, [X0+1896]
	059 Call 0x1C17CF4
	060 Move X0, 0x2251000
	061 Move X0, [X0+3760]
	062 Call 0x1C17CF4
	063 Move X0, 0x2251000
	064 Move X0, [X0+3768]
	065 Call 0x1C17CF4
	066 Move X0, 0x2251000
	067 Move X0, [X0+3776]
	068 Call 0x1C17CF4
	069 Move X0, 0x2251000
	070 Move X0, [X0+1904]
	071 Call 0x1C17CF4
	072 Move X0, 0x2251000
	073 Move X0, [X0+1912]
	074 Call 0x1C17CF4
	075 Move X0, 0x2251000
	076 Move X0, [X0+3784]
	077 Call 0x1C17CF4
	078 Move X0, 0x224E000
	079 Move X0, [X0+1368]
	080 Call 0x1C17CF4
	081 Move X0, 0x2251000
	082 Move X0, [X0+3792]
	083 Call 0x1C17CF4
	084 Move X0, 0x2251000
	085 Move X0, [X0+2200]
	086 Call 0x1C17CF4
	087 Move W8, 1
	088 Move [X22+900], W8
	089 Move [X31+48], X31
	090 Move [X31+56], X31
	091 Move [X31+32], X31
	092 Move [X31+40], X31
	093 Move TEMP, X23
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {158}
	097 Move X0, [X20+104]
	098 Compare X0, 0
	099 JumpIfEqual {459}
	100 Move X22, 0x2251000
	101 Move X29, 0x2251000
	102 Move X22, [X22+3688]
	103 Move X29, [X29+1896]
	104 Move W23, W31
	105 And X21, X21, 0
	106 Move W8, [X0+24]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X8, 0x2251000
	109 Move X8, [X8+1912]
	110 Move W1, W23
	111 Move X2, [X8]
	112 Call List`1<Object>.get_Item, X0, X1
	113 Move X2, [X22]
	114 Move X1, [X31]
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 NotImplemented "Instruction LDUR not yet implemented."
	117 Move X26, X0
	118 Add X0, X31, 8
	119 Move [X31+8], X31
	120 Move [X31+16], X31
	121 Call 0x2B88B6C, X0, X1
	122 Compare X26, 0
	123 JumpIfEqual {459}
	124 Move X8, [X26]
	125 Move X1, [X29]
	126 Move X28, [X31+8]
	127 Move X27, [X31+16]
	128 NotImplemented "Instruction LDRH not yet implemented."
	129 Compare X9, 0
	130 JumpIfEqual {137}
	131 Move X10, [X8+176]
	132 Add X10, X10, 8
	133 NotImplemented "Instruction LDUR not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Subtract X9, X9, 1
	136 Add X10, X10, 16
	137 Move W2, 15
	138 Move X0, X26
	139 Call 0x1C5D788
	140 Move W9, [X10]
	141 Add W9, W9, 15
	142 Add X8, X8, W9
	143 Add X0, X8, 312
	144 Move X8, [X0]
	145 Move X7, [X0+8]
	146 Move X0, X26
	147 Move X1, X20
	148 Move X2, X21
	149 Move X3, X24
	150 Move X4, X25
	151 Move X5, X28
	152 Move X6, X27
	153 NotImplemented "Instruction BLR not yet implemented."
	154 Move X0, [X20+104]
	155 Add W23, W23, 1
	156 Compare X0, 0
	157 JumpIfNotEqual {106}
	158 Move X23, [X20+384]
	159 Move X0, X19
	160 Move X1, X31
	161 Call ReliableId.get_SourceCombined, X0
	162 Compare X23, 0
	163 JumpIfEqual {459}
	164 Move X8, 0x2251000
	165 Move X8, [X8+3712]
	166 Move X1, X0
	167 Add X2, X31, 56
	168 Move X0, X23
	169 Move X3, [X8]
	170 Call Dictionary`2<Int64, Object>.TryGetValue, X0, X1, X2
	171 Move TEMP, X0
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfEqual {200}
	175 Move X23, [X20+384]
	176 Move X0, X19
	177 Move X1, X31
	178 Call ReliableId.get_SourceCombined, X0
	179 Move X8, 0x2251000
	180 Move X8, [X8+3784]
	181 Move X24, X0
	182 Move X8, [X8]
	183 Move X0, X8
	184 Call 0x1C17F10
	185 Move X8, 0x2251000
	186 Move X8, [X8+3776]
	187 Move X25, X0
	188 Move X1, [X8]
	189 Call List`1<Object>..ctor, X0
	190 Move [X31+56], X25
	191 Compare X23, 0
	192 JumpIfEqual {459}
	193 Move X8, 0x2251000
	194 Move X8, [X8+3696]
	195 Move X0, X23
	196 Move X1, X24
	197 Move X2, X25
	198 Move X3, [X8]
	199 Call Dictionary`2<Int64, Object>.Add, X0, X1, X2
	200 Move X0, [X31+56]
	201 Compare X0, 0
	202 JumpIfEqual {459}
	203 Move X9, 0x2251000
	204 Move X9, [X9+3760]
	205 Move W10, [X0+28]
	206 Move X8, [X0+16]
	207 Move X9, [X9]
	208 Add W10, W10, 1
	209 Move [X0+28], W10
	210 Compare X8, 0
	211 JumpIfEqual {459}
	212 NotImplemented "Instruction LDRSW not yet implemented."
	213 Move W11, [X8+24]
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Add W9, W10, 1
	216 Move [X0+24], W9
	217 Move X9, [X31]
	218 Add X8, X8, X10
	219 Move [X8+32], X9
	220 Move X8, [X9+32]
	221 Move X1, [X31]
	222 Move X8, [X8+192]
	223 Move X2, [X8+112]
	224 Call List`1<Object>.AddWithResize, X0, X1
	225 Move X25, 0x2251000
	226 Move X25, [X25+2200]
	227 Move X22, [X31+56]
	228 Move X0, [X25]
	229 Move W8, [X0+224]
	230 Compare W8, 0
	231 JumpIfNotEqual {234}
	232 Call 0x1C17DFC
	233 Move X0, [X25]
	234 Move X8, [X0+184]
	235 Move X23, [X8+24]
	236 Compare X23, 0
	237 JumpIfNotEqual {259}
	238 Move W8, [X0+224]
	239 Compare W8, 0
	240 JumpIfNotEqual {243}
	241 Call 0x1C17DFC
	242 Move X0, [X25]
	243 Move X9, 0x2251000
	244 Move X8, [X0+184]
	245 Move X9, [X9+3752]
	246 Move X24, [X8]
	247 Move X0, [X9]
	248 Call 0x1C17F10
	249 Move X8, 0x2251000
	250 Move X8, [X8+3792]
	251 Move X1, X24
	252 Move X3, X31
	253 Move X23, X0
	254 Move X2, [X8]
	255 Call Func`2<Object, Int32>..ctor, X0, X1, X2
	256 Move X8, [X25]
	257 Move X8, [X8+184]
	258 Move [X8+24], X23
	259 Move X8, 0x2251000
	260 Move X8, [X8+3720]
	261 Move X0, X22
	262 Move X1, X23
	263 Move X2, [X8]
	264 Call Enumerable.Select, X0, X1
	265 Move X1, X31
	266 Call Enumerable.Sum, X0
	267 Move W9, [X19+12]
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Move X22, [X20+384]
	270 Move X0, X19
	271 Move X1, X31
	272 Call ReliableId.get_SourceCombined, X0
	273 Compare X22, 0
	274 JumpIfEqual {459}
	275 Move X8, 0x2251000
	276 Move X8, [X8+3704]
	277 Move X1, X0
	278 Move X0, X22
	279 Move X2, [X8]
	280 Call Dictionary`2<Int64, Object>.Remove, X0, X1
	281 Move X8, 0x2246000
	282 Move W1, [X19+12]
	283 Move X8, [X8+1560]
	284 Move X0, [X8]
	285 Call 0x1C17D6C
	286 Move X8, 0x224E000
	287 Move X8, [X8+1368]
	288 Move X23, X0
	289 Move X8, [X8]
	290 Move X0, X8
	291 Call 0x1C17F10
	292 Move W2, 1
	293 Move X1, X23
	294 Move X3, X31
	295 Move X22, X0
	296 Call MemoryStream..ctor, X0, X1, X2
	297 Move X0, [X31+56]
	298 Compare X0, 0
	299 JumpIfEqual {459}
	300 Move X8, 0x2251000
	301 Move X8, [X8+3768]
	302 Move X1, [X8]
	303 Add X8, X31, 8
	304 Call List`1<Object>.GetEnumerator, X0
	305 NotImplemented "Instruction LDUR not yet implemented."
	306 Move X8, [X31+24]
	307 Move X23, 0x2251000
	308 Move [X31+2], V0
	309 Move [X31+48], X8
	310 Move X23, [X23+3736]
	311 Move X1, [X23]
	312 Add X0, X31, 32
	313 Call Enumerator<Object>.MoveNext, X0
	314 Move TEMP, X0
	315 And TEMP, TEMP, 1
	316 Compare TEMP, 1
	317 JumpIfNotEqual {384}
	318 Move X1, [X31+48]
	319 Compare X1, 0
	320 JumpIfEqual {476}
	321 Compare X22, 0
	322 JumpIfEqual {477}
	323 Move X8, [X22]
	324 Move W3, [X1+24]
	325 Move X9, [X8+904]
	326 Move X4, [X8+912]
	327 Move X0, X22
	328 Move W2, W31
	329 NotImplemented "Instruction BLR not yet implemented."
	330 Move W8, W0
	331 Move X0, [X20+104]
	332 Compare X0, 0
	333 JumpIfEqual {459}
	334 Move X26, 0x2251000
	335 Move X27, 0x2251000
	336 Move X26, [X26+1912]
	337 Move X27, [X27+1896]
	338 Move W22, W31
	339 NotImplemented "Instruction SCVTF not yet implemented."
	340 And X21, X21, 0
	341 Move W8, [X0+24]
	342 NotImplemented "Instruction CMP not yet implemented."
	343 Move X2, [X26]
	344 Move W1, W22
	345 Call List`1<Object>.get_Item, X0, X1
	346 Compare X0, 0
	347 JumpIfEqual {459}
	348 Move X8, [X0]
	349 NotImplemented "Instruction LDUR not yet implemented."
	350 NotImplemented "Instruction LDUR not yet implemented."
	351 Move X1, [X27]
	352 NotImplemented "Instruction LDRH not yet implemented."
	353 Move V9, [X19+12]
	354 Move X23, X0
	355 Compare X9, 0
	356 JumpIfEqual {363}
	357 Move X10, [X8+176]
	358 Add X10, X10, 8
	359 NotImplemented "Instruction LDUR not yet implemented."
	360 NotImplemented "Instruction CMP not yet implemented."
	361 Subtract X9, X9, 1
	362 Add X10, X10, 16
	363 Move W2, 16
	364 Move X0, X23
	365 Call 0x1C5D788
	366 Move W9, [X10]
	367 Add W9, W9, 16
	368 Add X8, X8, W9
	369 Add X0, X8, 312
	370 Move X8, [X0]
	371 Move X5, [X0+8]
	372 NotImplemented "Instruction SCVTF not yet implemented."
	373 NotImplemented "Instruction FDIV not yet implemented."
	374 Move X0, X23
	375 Move X1, X20
	376 Move X2, X21
	377 Move X3, X25
	378 Move X4, X24
	379 NotImplemented "Instruction BLR not yet implemented."
	380 Move X0, [X20+104]
	381 Add W22, W22, 1
	382 Compare X0, 0
	383 JumpIfNotEqual {341}
	384 Move X8, 0x2251000
	385 Move X8, [X8+3728]
	386 Add X0, X31, 32
	387 Move X1, [X8]
	388 Call Enumerator<Object>.Dispose, X0
	389 Compare X22, 0
	390 JumpIfEqual {459}
	391 Move X8, [X22]
	392 Move X0, X22
	393 Move X9, [X8+1016]
	394 Move X1, [X8+1024]
	395 NotImplemented "Instruction BLR not yet implemented."
	396 Move X8, [X20+104]
	397 Compare X8, 0
	398 JumpIfEqual {459}
	399 Move X29, 0x2251000
	400 Move X29, [X29+1896]
	401 Move X22, X0
	402 Move W23, W31
	403 And X21, X21, 0
	404 Move W9, [X8+24]
	405 NotImplemented "Instruction CMP not yet implemented."
	406 Move X9, 0x2251000
	407 Move X9, [X9+1912]
	408 Move X0, X8
	409 Move W1, W23
	410 Move X2, [X9]
	411 Call List`1<Object>.get_Item, X0, X1
	412 Move X8, 0x2251000
	413 NotImplemented "Instruction LDUR not yet implemented."
	414 NotImplemented "Instruction LDUR not yet implemented."
	415 Move X8, [X8+3688]
	416 Move X26, X0
	417 Add X0, X31, 8
	418 Move X1, X22
	419 Move X2, [X8]
	420 Move [X31+8], X31
	421 Move [X31+16], X31
	422 Call 0x2B88B6C, X0, X1
	423 Compare X26, 0
	424 JumpIfEqual {459}
	425 Move X8, [X26]
	426 Move X1, [X29]
	427 Move X28, [X31+8]
	428 Move X27, [X31+16]
	429 NotImplemented "Instruction LDRH not yet implemented."
	430 Compare X9, 0
	431 JumpIfEqual {438}
	432 Move X10, [X8+176]
	433 Add X10, X10, 8
	434 NotImplemented "Instruction LDUR not yet implemented."
	435 NotImplemented "Instruction CMP not yet implemented."
	436 Subtract X9, X9, 1
	437 Add X10, X10, 16
	438 Move W2, 15
	439 Move X0, X26
	440 Call 0x1C5D788
	441 Move W9, [X10]
	442 Add W9, W9, 15
	443 Add X8, X8, W9
	444 Add X0, X8, 312
	445 Move X8, [X0]
	446 Move X7, [X0+8]
	447 Move X0, X26
	448 Move X1, X20
	449 Move X2, X21
	450 Move X3, X24
	451 Move X4, X25
	452 Move X5, X28
	453 Move X6, X27
	454 NotImplemented "Instruction BLR not yet implemented."
	455 Move X8, [X20+104]
	456 Add W23, W23, 1
	457 Compare X8, 0
	458 JumpIfNotEqual {404}
	459 Call 0x1C17F20
	460 Move X20, [X31+160]
	461 Move X19, [X31+168]
	462 Move X22, [X31+144]
	463 Move X21, [X31+152]
	464 Move X24, [X31+128]
	465 Move X23, [X31+136]
	466 Move X26, [X31+112]
	467 Move X25, [X31+120]
	468 Move X28, [X31+96]
	469 Move X27, [X31+104]
	470 Move X29, [X31+80]
	471 Move X30, [X31+88]
	472 Move D9, [X31+64]
	473 Move D8, [X31+72]
	474 Add X31, X31, 176
	475 Return 
	476 Call 0x1C17F20
	477 Call 0x1C17F20
	478 Move X23, X0
	479 NotImplemented "Instruction CMP not yet implemented."
	480 Move X0, X23
	481 Call 0x3EB2AD0
	482 Move X24, [X0]
	483 Call 0x3EB2AE0
	484 Move X8, 0x2251000
	485 Move X8, [X8+3728]
	486 Add X0, X31, 32
	487 Move X1, [X8]
	488 Call Enumerator<Object>.Dispose, X0
	489 Compare X24, 0
	490 JumpIfEqual {389}
	491 Move X0, X24
	492 Call 0x1C17F18
	493 Move X24, X31
	494 Move X23, X0
	495 Move X8, 0x2251000
	496 Move X8, [X8+3728]
	497 Move X1, [X8]
	498 Add X0, X31, 32
	499 Call Enumerator<Object>.Dispose, X0
	500 Compare X24, 0
	501 JumpIfNotEqual {504}
	502 Move X0, X23
	503 Call 0x1D2D690
	504 Move X0, X24
	505 Call 0x1C17F18
	506 Call 0x1991590

Method: System.Void Fusion.Simulation.ICallbacks.PlayerJoined(Fusion.PlayerRef player)

Disassembly:
	0x01EAEBC4 MRS X26, 0xC000
	0x01EAEBC8 LDR X8, [X26 + 0x28]
	0x01EAEBCC ADRP X25, 0x252B000
	0x01EAEBD0 MOV X20, X7
	0x01EAEBD4 MOV X21, X6
	0x01EAEBD8 STR X8, [X31 + 0xA8]
	0x01EAEBDC LDRB W8, [X25 + 0x38C]
	0x01EAEBE0 MOV X22, X5
	0x01EAEBE4 MOV X23, X4
	0x01EAEBE8 MOV X24, X3
	0x01EAEBEC MOV X19, X0
	0x01EAEBF0 STP X1, X2, [X31 + 0x98]
	0x01EAEBF4 TBNZ X8, 0x0, 0x1EAEC0C
	0x01EAEBF8 ADRP X0, 0x2250000
	0x01EAEBFC LDR X0, [X0 + 0x378]
	0x01EAEC00 BL 0x1C16CF4
	0x01EAEC04 MOVZ W8, 0x1
	0x01EAEC08 STRB W8, [X25 + 0x38C]
	0x01EAEC0C MOVI V0.2D, 0x0
	0x01EAEC10 ADD X0, X31, 0x98
	0x01EAEC14 MOV X1, X31
	0x01EAEC18 STR W31, [X31 + 0x78]
	0x01EAEC1C STR X31, [X31 + 0x70]
	0x01EAEC20 STP X31, X31, [X31 + 0x8]
	0x01EAEC24 STP V0, V0, [X31 + 0x50]
	0x01EAEC28 STP V0, V0, [X31 + 0x30]
	0x01EAEC2C STR V0, [X31 + 0x2]
	0x01EAEC30 STR X31, [X31 + 0x18]
	0x01EAEC34 BL 0x1E9553C
	0x01EAEC38 TBZ X0, 0x0, 0x1EAED4C
	0x01EAEC3C LDR X8, [X19 + 0x98]
	0x01EAEC40 CBZ X8, 0x1EAEC4C
	0x01EAEC44 LDR X25, [X8 + 0x38]
	0x01EAEC48 B 0x1EAEC50
	0x01EAEC4C MOV X25, X31
	0x01EAEC50 LDP X0, X1, [X31 + 0x98]
	0x01EAEC54 MOV X2, X31
	0x01EAEC58 BL 0x1E95910
	0x01EAEC5C CBZ X25, 0x1EAEDA8
	0x01EAEC60 MOV X2, X0
	0x01EAEC64 MOV X3, X1
	0x01EAEC68 MOV X0, X25
	0x01EAEC6C MOV X1, X2
	0x01EAEC70 MOV X2, X3
	0x01EAEC74 MOV X3, X31
	0x01EAEC78 BL 0x1E9AB04
	0x01EAEC7C STR W0, [X31 + 0x78]
	0x01EAEC80 ADD X0, X31, 0x78
	0x01EAEC84 MOV X1, X31
	0x01EAEC88 BL 0x1E991E8
	0x01EAEC8C TBZ X0, 0x0, 0x1EAEDAC
	0x01EAEC90 ADRP X8, 0x2250000
	0x01EAEC94 LDR X8, [X8 + 0x378]
	0x01EAEC98 LDRH W27, [X31 + 0x110]
	0x01EAEC9C LDR W25, [X31 + 0x78]
	0x01EAECA0 LDR X0, [X8]
	0x01EAECA4 LDR W8, [X0 + 0xE0]
	0x01EAECA8 CBNZ W8, 0x1EAECB0
	0x01EAECAC BL 0x1C16DFC
	0x01EAECB0 MOV X0, X25
	0x01EAECB4 MOV X1, X31
	0x01EAECB8 BL 0x1E99830
	0x01EAECBC STP X0, X24, [X31 + 0x20]
	0x01EAECC0 STR X23, [X31 + 0x30]
	0x01EAECC4 LDR W9, [X22 + 0x10]
	0x01EAECC8 LDR V0, [X22]
	0x01EAECCC SXTH W8, W27
	0x01EAECD0 ORR W8, W8, 0x10000
	0x01EAECD4 STP W8, W31, [X31 + 0x68]
	0x01EAECD8 ADD X8, X31, 0x8
	0x01EAECDC ADD X1, X31, 0x20
	0x01EAECE0 MOV X0, X19
	0x01EAECE4 STUR X21, [X31 + 0x4C]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x252C000
	009 Move W8, [X21+901]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x2251000
	017 Move X0, [X0+1896]
	018 Call 0x1C17CF4
	019 Move X0, 0x2251000
	020 Move X0, [X0+1904]
	021 Call 0x1C17CF4
	022 Move X0, 0x2251000
	023 Move X0, [X0+1912]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+901], W8
	027 Move X0, [X19+104]
	028 Compare X0, 0
	029 JumpIfEqual {72}
	030 Move X23, 0x2251000
	031 Move X24, 0x2251000
	032 Move X23, [X23+1912]
	033 Move X24, [X24+1896]
	034 Move W21, W31
	035 And X20, X20, 0
	036 Move W8, [X0+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X2, [X23]
	039 Move W1, W21
	040 Call List`1<Object>.get_Item, X0, X1
	041 Compare X0, 0
	042 JumpIfEqual {72}
	043 Move X8, [X0]
	044 Move X1, [X24]
	045 Move X22, X0
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Compare X9, 0
	048 JumpIfEqual {55}
	049 Move X10, [X8+176]
	050 Add X10, X10, 8
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X9, X9, 1
	054 Add X10, X10, 16
	055 Move W2, 2
	056 Move X0, X22
	057 Call 0x1C5D788
	058 Move W9, [X10]
	059 Add W9, W9, 2
	060 Add X8, X8, W9
	061 Add X0, X8, 312
	062 Move X8, [X0]
	063 Move X3, [X0+8]
	064 Move X0, X22
	065 Move X1, X19
	066 Move X2, X20
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move X0, [X19+104]
	069 Add W21, W21, 1
	070 Compare X0, 0
	071 JumpIfNotEqual {36}
	072 Call 0x1C17F20
	073 Move X0, [X19+96]
	074 Move X1, X20
	075 Move X20, [X31+48]
	076 Move X19, [X31+56]
	077 Move X22, [X31+32]
	078 Move X21, [X31+40]
	079 Move X24, [X31+16]
	080 Move X23, [X31+24]
	081 Move X2, X31
	082 Move X30, [X31+64]
	083 Call CallbackInterfaceInvoker.IPlayerJoined, X0, X1
	084 Return 

Method: System.Void Fusion.Simulation.ICallbacks.PlayerLeft(Fusion.PlayerRef player)

Disassembly:
	0x01EAECE8 STR W31, [X31 + 0x54]
	0x01EAECEC STP X20, X31, [X31 + 0x58]
	0x01EAECF0 STUR V0, [X31 + 0x38]
	0x01EAECF4 STR W9, [X31 + 0x48]
	0x01EAECF8 STR X31, [X31 + 0x70]
	0x01EAECFC BL 0x1EAB01C
	0x01EAED00 LDR W0, [X31 + 0x78]
	0x01EAED04 MOV X1, X31
	0x01EAED08 BL 0x1E99830
	0x01EAED0C MOV X1, X0
	0x01EAED10 ADD X0, X31, 0x8
	0x01EAED14 MOV X2, X31
	0x01EAED18 BL 0x1EB35B4
	0x01EAED1C LDR X8, [X26 + 0x28]
	0x01EAED20 LDR X9, [X31 + 0xA8]
	0x01EAED24 CMP X8, X9
	0x01EAED28 B.NE 0x1EAEE20
	0x01EAED2C LDP X20, X19, [X31 + 0x100]
	0x01EAED30 LDP X22, X21, [X31 + 0xF0]
	0x01EAED34 LDP X24, X23, [X31 + 0xE0]
	0x01EAED38 LDP X26, X25, [X31 + 0xD0]
	0x01EAED3C LDP X30, X27, [X31 + 0xC0]
	0x01EAED40 LDR X29, [X31 + 0xB0]
	0x01EAED44 ADD X31, X31, 0x110
	0x01EAED48 RET
	0x01EAED4C ADRP X0, 0x224D000
	0x01EAED50 LDR X0, [X0 + 0x578]
	0x01EAED54 BL 0x1C16D08
	0x01EAED58 BL 0x1C16F10
	0x01EAED5C MOV X19, X0
	0x01EAED60 ADRP X0, 0x2250000
	0x01EAED64 LDR X0, [X0 + 0xF48]
	0x01EAED68 BL 0x1C16D08
	0x01EAED6C MOV X20, X0
	0x01EAED70 ADRP X0, 0x2250000
	0x01EAED74 LDR X0, [X0 + 0xF50]
	0x01EAED78 BL 0x1C16D08
	0x01EAED7C MOV X2, X0
	0x01EAED80 MOV X0, X19
	0x01EAED84 MOV X1, X20
	0x01EAED88 MOV X3, X31
	0x01EAED8C BL 0x330E16C
	0x01EAED90 ADRP X0, 0x2250000
	0x01EAED94 LDR X0, [X0 + 0xF58]
	0x01EAED98 BL 0x1C16D08
	0x01EAED9C MOV X1, X0
	0x01EAEDA0 MOV X0, X19
	0x01EAEDA4 BL 0x1C16DEC
	0x01EAEDA8 BL 0x1C16F20
	0x01EAEDAC LDUR V0, [X31 + 0x98]
	0x01EAEDB0 ADRP X0, 0x2250000
	0x01EAEDB4 STR V0, [X31 + 0x8]
	0x01EAEDB8 LDR X0, [X0 + 0x360]
	0x01EAEDBC BL 0x1C16D08
	0x01EAEDC0 ADD X1, X31, 0x80
	0x01EAEDC4 BL 0x1C16E04
	0x01EAEDC8 MOV X19, X0
	0x01EAEDCC ADRP X0, 0x2250000
	0x01EAEDD0 LDR X0, [X0 + 0xF38]
	0x01EAEDD4 BL 0x1C16D08
	0x01EAEDD8 MOV X1, X19
	0x01EAEDDC MOV X2, X31
	0x01EAEDE0 BL 0x321EFD0
	0x01EAEDE4 MOV X19, X0
	0x01EAEDE8 ADRP X0, 0x2245000
	0x01EAEDEC LDR X0, [X0 + 0x5B0]
	0x01EAEDF0 BL 0x1C16D08
	0x01EAEDF4 BL 0x1C16F10
	0x01EAEDF8 MOV X1, X19
	0x01EAEDFC MOV X2, X31
	0x01EAEE00 MOV X20, X0
	0x01EAEE04 BL 0x337DF1C
	0x01EAEE08 ADRP X0, 0x2250000
	0x01EAEE0C LDR X0, [X0 + 0xF58]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x252C000
	009 Move W8, [X21+902]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x2251000
	017 Move X0, [X0+1896]
	018 Call 0x1C17CF4
	019 Move X0, 0x2251000
	020 Move X0, [X0+1904]
	021 Call 0x1C17CF4
	022 Move X0, 0x2251000
	023 Move X0, [X0+1912]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+902], W8
	027 Move X0, [X19+96]
	028 And X20, X20, 0
	029 Move X1, X20
	030 Move X2, X31
	031 Call CallbackInterfaceInvoker.IPlayerLeft, X0, X1
	032 Move X0, [X19+104]
	033 Compare X0, 0
	034 JumpIfEqual {76}
	035 Move X23, 0x2251000
	036 Move X24, 0x2251000
	037 Move X23, [X23+1912]
	038 Move X24, [X24+1896]
	039 Move W21, W31
	040 Move W8, [X0+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X2, [X23]
	043 Move W1, W21
	044 Call List`1<Object>.get_Item, X0, X1
	045 Compare X0, 0
	046 JumpIfEqual {76}
	047 Move X8, [X0]
	048 Move X1, [X24]
	049 Move X22, X0
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 Compare X9, 0
	052 JumpIfEqual {59}
	053 Move X10, [X8+176]
	054 Add X10, X10, 8
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Subtract X9, X9, 1
	058 Add X10, X10, 16
	059 Move W2, 3
	060 Move X0, X22
	061 Call 0x1C5D788
	062 Move W9, [X10]
	063 Add W9, W9, 3
	064 Add X8, X8, W9
	065 Add X0, X8, 312
	066 Move X8, [X0]
	067 Move X3, [X0+8]
	068 Move X0, X22
	069 Move X1, X19
	070 Move X2, X20
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X0, [X19+104]
	073 Add W21, W21, 1
	074 Compare X0, 0
	075 JumpIfNotEqual {40}
	076 Call 0x1C17F20
	077 Move X20, [X31+48]
	078 Move X19, [X31+56]
	079 Move X22, [X31+32]
	080 Move X21, [X31+40]
	081 Move X24, [X31+16]
	082 Move X23, [X31+24]
	083 Move X30, [X31+64]
	084 Return 

Method: Fusion.Sockets.OnConnectionRequestReply Fusion.Simulation.ICallbacks.OnConnectionRequest(Fusion.Sockets.NetAddress remoteAddress, System.Byte[] token)

Disassembly:
	0x01EAEE10 BL 0x1C16D08
	0x01EAEE14 MOV X1, X0
	0x01EAEE18 MOV X0, X20
	0x01EAEE1C BL 0x1C16DEC
	0x01EAEE20 BL 0x3EB1B20
	0x01EAEE24 SUB X31, X31, 0x110
	0x01EAEE28 STR X29, [X31 + 0xB0]
	0x01EAEE2C STP X30, X27, [X31 + 0xC0]
	0x01EAEE30 STP X26, X25, [X31 + 0xD0]
	0x01EAEE34 STP X24, X23, [X31 + 0xE0]
	0x01EAEE38 STP X22, X21, [X31 + 0xF0]
	0x01EAEE3C STP X20, X19, [X31 + 0x100]
	0x01EAEE40 MRS X26, 0xC000
	0x01EAEE44 LDR X8, [X26 + 0x28]
	0x01EAEE48 ADRP X25, 0x252B000
	0x01EAEE4C MOV X20, X7
	0x01EAEE50 MOV X21, X6
	0x01EAEE54 STR X8, [X31 + 0xA8]
	0x01EAEE58 LDRB W8, [X25 + 0x38D]
	0x01EAEE5C MOV X22, X5
	0x01EAEE60 MOV X23, X4
	0x01EAEE64 MOV X24, X3
	0x01EAEE68 MOV X19, X0
	0x01EAEE6C STP X1, X2, [X31 + 0x98]
	0x01EAEE70 TBNZ X8, 0x0, 0x1EAEE88
	0x01EAEE74 ADRP X0, 0x2250000
	0x01EAEE78 LDR X0, [X0 + 0x378]
	0x01EAEE7C BL 0x1C16CF4
	0x01EAEE80 MOVZ W8, 0x1
	0x01EAEE84 STRB W8, [X25 + 0x38D]
	0x01EAEE88 MOVI V0.2D, 0x0
	0x01EAEE8C ADD X0, X31, 0x98
	0x01EAEE90 MOV X1, X31
	0x01EAEE94 STR W31, [X31 + 0x78]
	0x01EAEE98 STR X31, [X31 + 0x70]
	0x01EAEE9C STP X31, X31, [X31 + 0x8]
	0x01EAEEA0 STP V0, V0, [X31 + 0x50]
	0x01EAEEA4 STP V0, V0, [X31 + 0x30]
	0x01EAEEA8 STR V0, [X31 + 0x2]
	0x01EAEEAC STR X31, [X31 + 0x18]
	0x01EAEEB0 BL 0x1E94F24
	0x01EAEEB4 TBZ X0, 0x0, 0x1EAEFA8
	0x01EAEEB8 LDR X8, [X19 + 0x98]
	0x01EAEEBC CBZ X8, 0x1EAEFA4
	0x01EAEEC0 LDR X0, [X8 + 0x38]
	0x01EAEEC4 CBZ X0, 0x1EAEFA4
	0x01EAEEC8 LDP X1, X2, [X31 + 0x98]
	0x01EAEECC MOV X3, X31
	0x01EAEED0 BL 0x1E9AB04
	0x01EAEED4 STR W0, [X31 + 0x78]
	0x01EAEED8 ADD X0, X31, 0x78
	0x01EAEEDC MOV X1, X31
	0x01EAEEE0 BL 0x1E991E8
	0x01EAEEE4 TBZ X0, 0x0, 0x1EAF004
	0x01EAEEE8 ADRP X8, 0x2250000
	0x01EAEEEC LDR X8, [X8 + 0x378]
	0x01EAEEF0 LDRH W27, [X31 + 0x110]
	0x01EAEEF4 LDR W25, [X31 + 0x78]
	0x01EAEEF8 LDR X0, [X8]
	0x01EAEEFC LDR W8, [X0 + 0xE0]
	0x01EAEF00 CBNZ W8, 0x1EAEF08
	0x01EAEF04 BL 0x1C16DFC
	0x01EAEF08 MOV X0, X25
	0x01EAEF0C MOV X1, X31
	0x01EAEF10 BL 0x1E99830
	0x01EAEF14 STP X0, X24, [X31 + 0x20]
	0x01EAEF18 STR X23, [X31 + 0x30]
	0x01EAEF1C LDR W9, [X22 + 0x10]
	0x01EAEF20 LDR V0, [X22]
	0x01EAEF24 SXTH W8, W27
	0x01EAEF28 ORR W8, W8, 0x10000
	0x01EAEF2C STP W8, W31, [X31 + 0x68]
	0x01EAEF30 ADD X8, X31, 0x8
	0x01EAEF34 ADD X1, X31, 0x20
	0x01EAEF38 MOV X0, X19
	0x01EAEF3C STUR X21, [X31 + 0x4C]
	0x01EAEF40 STR W31, [X31 + 0x54]
	0x01EAEF44 STP X20, X31, [X31 + 0x58]
	0x01EAEF48 STUR V0, [X31 + 0x38]
	0x01EAEF4C STR W9, [X31 + 0x48]
	0x01EAEF50 STR X31, [X31 + 0x70]
	0x01EAEF54 BL 0x1EAB01C
	0x01EAEF58 LDR W0, [X31 + 0x78]
	0x01EAEF5C MOV X1, X31
	0x01EAEF60 BL 0x1E99830
	0x01EAEF64 MOV X1, X0
	0x01EAEF68 ADD X0, X31, 0x8
	0x01EAEF6C MOV X2, X31
	0x01EAEF70 BL 0x1EB35B4
	0x01EAEF74 LDR X8, [X26 + 0x28]
	0x01EAEF78 LDR X9, [X31 + 0xA8]
	0x01EAEF7C CMP X8, X9
	0x01EAEF80 B.NE 0x1EAF078
	0x01EAEF84 LDP X20, X19, [X31 + 0x100]
	0x01EAEF88 LDP X22, X21, [X31 + 0xF0]
	0x01EAEF8C LDP X24, X23, [X31 + 0xE0]
	0x01EAEF90 LDP X26, X25, [X31 + 0xD0]
	0x01EAEF94 LDP X30, X27, [X31 + 0xC0]
	0x01EAEF98 LDR X29, [X31 + 0xB0]
	0x01EAEF9C ADD X31, X31, 0x110
	0x01EAEFA0 RET
	0x01EAEFA4 BL 0x1C16F20
	0x01EAEFA8 ADRP X0, 0x224D000
	0x01EAEFAC LDR X0, [X0 + 0x578]
	0x01EAEFB0 BL 0x1C16D08
	0x01EAEFB4 BL 0x1C16F10
	0x01EAEFB8 MOV X19, X0
	0x01EAEFBC ADRP X0, 0x2250000
	0x01EAEFC0 LDR X0, [X0 + 0xF48]
	0x01EAEFC4 BL 0x1C16D08
	0x01EAEFC8 MOV X20, X0
	0x01EAEFCC ADRP X0, 0x2250000
	0x01EAEFD0 LDR X0, [X0 + 0xF60]
	0x01EAEFD4 BL 0x1C16D08
	0x01EAEFD8 MOV X2, X0
	0x01EAEFDC MOV X0, X19
	0x01EAEFE0 MOV X1, X20
	0x01EAEFE4 MOV X3, X31
	0x01EAEFE8 BL 0x330E16C
	0x01EAEFEC ADRP X0, 0x2250000
	0x01EAEFF0 LDR X0, [X0 + 0xF68]
	0x01EAEFF4 BL 0x1C16D08
	0x01EAEFF8 MOV X1, X0
	0x01EAEFFC MOV X0, X19
	0x01EAF000 BL 0x1C16DEC
	0x01EAF004 LDUR V0, [X31 + 0x98]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+48], X26
	004 Move [X31+56], X25
	005 Move [X31+64], X24
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X24+40]
	013 Move X21, 0x252C000
	014 Move X19, X2
	015 Move X22, X1
	016 Move [X31+24], X8
	017 Move W8, [X21+903]
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {43}
	023 Move X0, 0x2251000
	024 Move X0, [X0+3800]
	025 Call 0x1C17CF4
	026 Move X0, 0x2251000
	027 Move X0, [X0+1896]
	028 Call 0x1C17CF4
	029 Move X0, 0x2251000
	030 Move X0, [X0+1904]
	031 Call 0x1C17CF4
	032 Move X0, 0x2251000
	033 Move X0, [X0+1912]
	034 Call 0x1C17CF4
	035 Move X0, 0x2251000
	036 Move X0, [X0+3808]
	037 Call 0x1C17CF4
	038 Move X0, 0x2251000
	039 Move X0, [X0+3816]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X21+903], W8
	043 Move X8, [X20+104]
	044 Compare X8, 0
	045 JumpIfEqual {110}
	046 Move W8, [X8+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X8, 0x2251000
	049 Move X8, [X8+3800]
	050 Move X0, [X8]
	051 Call 0x1C17F10
	052 Move X1, X31
	053 Move X21, X0
	054 Call ConnectRequest..ctor, X0
	055 Move X8, [X22+16]
	056 Move V0, [X22]
	057 Move [X31+16], X8
	058 Move [X31], V0
	059 Compare X21, 0
	060 JumpIfEqual {110}
	061 Move X8, [X31+16]
	062 Move V0, [X31]
	063 Move [X21+32], X8
	064 Move [X21+1], V0
	065 Move X0, [X20+104]
	066 Compare X0, 0
	067 JumpIfEqual {110}
	068 Move X25, 0x2251000
	069 Move X26, 0x2251000
	070 Move X25, [X25+1912]
	071 Move X26, [X26+1896]
	072 Move W22, W31
	073 Move W8, [X0+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X2, [X25]
	076 Move W1, W22
	077 Call List`1<Object>.get_Item, X0, X1
	078 Compare X0, 0
	079 JumpIfEqual {110}
	080 Move X8, [X0]
	081 Move X1, [X26]
	082 Move X23, X0
	083 NotImplemented "Instruction LDRH not yet implemented."
	084 Compare X9, 0
	085 JumpIfEqual {92}
	086 Move X10, [X8+176]
	087 Add X10, X10, 8
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Subtract X9, X9, 1
	091 Add X10, X10, 16
	092 Move W2, 9
	093 Move X0, X23
	094 Call 0x1C5D788
	095 Move W9, [X10]
	096 Add W9, W9, 9
	097 Add X8, X8, W9
	098 Add X0, X8, 312
	099 Move X8, [X0]
	100 Move X4, [X0+8]
	101 Move X0, X23
	102 Move X1, X20
	103 Move X2, X21
	104 Move X3, X19
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move X0, [X20+104]
	107 Add W22, W22, 1
	108 Compare X0, 0
	109 JumpIfNotEqual {73}
	110 Call 0x1C17F20
	111 Add X21, X21, 40
	112 Move W8, [X21]
	113 Compare W8, 0
	114 JumpIfEqual {123}
	115 Move X8, 0x2251000
	116 Move X8, [X8+3816]
	117 Move X0, X21
	118 Move X1, [X8]
	119 Call Nullable`1<Int32Enum>.get_Value, X0
	120 Move X8, [X24+40]
	121 Move X9, [X31+24]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X8, [X24+40]
	124 Move X9, [X31+24]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move W0, W31
	127 Move X20, [X31+96]
	128 Move X19, [X31+104]
	129 Move X22, [X31+80]
	130 Move X21, [X31+88]
	131 Move X24, [X31+64]
	132 Move X23, [X31+72]
	133 Move X26, [X31+48]
	134 Move X25, [X31+56]
	135 Move X30, [X31+32]
	136 Add X31, X31, 112
	137 Return X0
	138 Call 0x3EB2B20

Method: System.Void Fusion.Simulation.ICallbacks.OnInternalConnectionAttempt(System.Int32 attempt, System.Int32 totalConnectionAttempts, out System.Boolean shouldChange, out Fusion.Sockets.NetAddress newAddress)

Disassembly:
	0x01EAF008 ADRP X0, 0x224F000
	0x01EAF00C STR V0, [X31 + 0x8]
	0x01EAF010 LDR X0, [X0 + 0x350]
	0x01EAF014 BL 0x1C16D08
	0x01EAF018 ADD X1, X31, 0x80
	0x01EAF01C BL 0x1C16E04
	0x01EAF020 MOV X19, X0
	0x01EAF024 ADRP X0, 0x224F000
	0x01EAF028 LDR X0, [X0 + 0xF38]
	0x01EAF02C BL 0x1C16D08
	0x01EAF030 MOV X1, X19
	0x01EAF034 MOV X2, X31
	0x01EAF038 BL 0x321EFD0
	0x01EAF03C MOV X19, X0
	0x01EAF040 ADRP X0, 0x2244000
	0x01EAF044 LDR X0, [X0 + 0x5B0]
	0x01EAF048 BL 0x1C16D08
	0x01EAF04C BL 0x1C16F10
	0x01EAF050 MOV X1, X19
	0x01EAF054 MOV X2, X31
	0x01EAF058 MOV X20, X0
	0x01EAF05C BL 0x337DF1C
	0x01EAF060 ADRP X0, 0x224F000
	0x01EAF064 LDR X0, [X0 + 0xF68]
	0x01EAF068 BL 0x1C16D08
	0x01EAF06C MOV X1, X0
	0x01EAF070 MOV X0, X20
	0x01EAF074 BL 0x1C16DEC
	0x01EAF078 BL 0x3EB1B20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, X4
	008 Move X20, X3
	009 Move W21, W2
	010 Move W22, W1
	011 Move X23, X0
	012 Move [X3], W31
	013 Move [X4], X31
	014 Move [X4+8], X31
	015 Move [X4+16], X31
	016 Call NetworkRunner.get_IsCloudReady, X0
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {37}
	021 Move X0, [X23+432]
	022 Compare X0, 0
	023 JumpIfEqual {44}
	024 Move W1, W22
	025 Move W2, W21
	026 Move X3, X20
	027 Move X4, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X5, X31
	033 Move X30, [X31+48]
	034 Move X23, [X31+56]
	035 Call CloudServices.OnInternalConnectionAttempt, X0, X1, X2, X3, X4
	036 Return 
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Move X23, [X31+56]
	043 Return 
	044 Call 0x1C17F20

Method: System.Boolean get_CanSpawn()

Disassembly:
	0x01EAF07C SUB X31, X31, 0xD0
	0x01EAF080 STR X30, [X31 + 0x80]
	0x01EAF084 STP X26, X25, [X31 + 0x90]
	0x01EAF088 STP X24, X23, [X31 + 0xA0]
	0x01EAF08C STP X22, X21, [X31 + 0xB0]
	0x01EAF090 STP X20, X19, [X31 + 0xC0]
	0x01EAF094 ADRP X26, 0x252A000
	0x01EAF098 LDRB W8, [X26 + 0x38E]
	0x01EAF09C MOV W24, W7
	0x01EAF0A0 MOV X20, X6
	0x01EAF0A4 MOV X21, X5
	0x01EAF0A8 MOV X22, X4
	0x01EAF0AC MOV X23, X3
	0x01EAF0B0 MOV X25, X2
	0x01EAF0B4 MOV X19, X0
	0x01EAF0B8 STR W1, [X31 + 0x88]
	0x01EAF0BC TBNZ X8, 0x0, 0x1EAF0D4
	0x01EAF0C0 ADRP X0, 0x224F000
	0x01EAF0C4 LDR X0, [X0 + 0x378]
	0x01EAF0C8 BL 0x1C16CF4
	0x01EAF0CC MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+80]
	005 Compare X0, 0
	006 JumpIfEqual {24}
	007 Move X1, X31
	008 Call Simulation.get_IsServer, X0
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {14}
	013 Move W0, 1
	014 Move X8, [X19+80]
	015 Compare X8, 0
	016 JumpIfEqual {23}
	017 Move X8, [X8+88]
	018 Compare X8, 0
	019 JumpIfEqual {27}
	020 Move W8, [X8+56]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction CSET not yet implemented."
	023 Move W0, W31
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 Return X0
	027 Call 0x1C17F20

Method: Fusion.NetworkSpawnOp SpawnInternal(in Fusion.NetworkRunner/SpawnArgs args)

Disassembly:
	0x01EAC01C LDR X0, [X8]
	0x01EAC020 LDR W8, [X0 + 0xE0]
	0x01EAC024 CBNZ W8, 0x1EAC02C
	0x01EAC028 BL 0x1C16DFC
	0x01EAC02C MOV X0, X26
	0x01EAC030 MOV X1, X25
	0x01EAC034 MOV X2, X31
	0x01EAC038 BL 0x1E7783C
	0x01EAC03C TBZ X0, 0x0, 0x1EAC2B8
	0x01EAC040 LDR X8, [X25]
	0x01EAC044 CBZ X8, 0x1EAC830
	0x01EAC048 LDR W9, [X8 + 0x18]
	0x01EAC04C CMP W24, W9
	0x01EAC050 B.CS 0x1EAC804
	0x01EAC054 CBZ X20, 0x1EAC808
	0x01EAC058 MOVZ W9, 0x18
	0x01EAC05C MADD X8, X24, X9, X8
	0x01EAC060 LDP W24, W25, [X8 + 0x24]
	0x01EAC064 LDR X26, [X8 + 0x30]
	0x01EAC068 LDR W1, [X20 + 0x4]
	0x01EAC06C MOV X0, X22
	0x01EAC070 MOV X2, X31
	0x01EAC074 BL 0x1E94110
	0x01EAC078 ANDS W31, W0, W24, 0x0
	0x01EAC07C B.EQ 0x1EAC2B8
	0x01EAC080 MOV X0, X22
	0x01EAC084 MOV X1, X31
	0x01EAC088 BL 0x1E94078
	0x01EAC08C CMP W28, 0x0
	0x01EAC090 CSET W8, NE
	0x01EAC094 EOR W9, W29, 0x1
	0x01EAC098 MOV W24, W0
	0x01EAC09C AND W8, W8, W9, 0x0
	0x01EAC0A0 TBNZ X8, 0x0, 0x1EAC0C8
	0x01EAC0A4 AND W8, W24, W25, 0x0
	0x01EAC0A8 CBZ W8, 0x1EAC0C8
	0x01EAC0AC CBZ X26, 0x1EAC82C
	0x01EAC0B0 LDR X0, [X26 + 0x40]
	0x01EAC0B4 LDR X8, [X26 + 0x18]
	0x01EAC0B8 LDR X3, [X26 + 0x28]
	0x01EAC0BC MOV X1, X23
	0x01EAC0C0 MOV X2, X20
	0x01EAC0C4 BLR X8
	0x01EAC0C8 TBNZ X29, 0x0, 0x1EABF00
	0x01EAC0CC LDR X0, [X19 + 0x50]
	0x01EAC0D0 CBZ X0, 0x1EABF00
	0x01EAC0D4 MOV X1, X31
	0x01EAC0D8 BL 0x1EBDF30
	0x01EAC0DC ORN W8, W31, W24, 0x0
	0x01EAC0E0 ORR W8, W8, 0x4
	0x01EAC0E4 AND W9, W8, W25, 0x0
	0x01EAC0E8 MOV W8, W31
	0x01EAC0EC CBZ W9, 0x1EABF04
	0x01EAC0F0 EOR W10, W0, 0x1
	0x01EAC0F4 TBNZ X10, 0x0, 0x1EABF04
	0x01EAC0F8 CBZ W28, 0x1EAC500
	0x01EAC0FC TBZ X9, 0x1, 0x1EAC160
	0x01EAC100 LDR X8, [X19 + 0x50]
	0x01EAC104 CBZ X8, 0x1EAC838
	0x01EAC108 ADRP X23, 0x252D000
	0x01EAC10C LDRB W8, [X23 + 0x2F0]
	0x01EAC110 CBNZ W8, 0x1EAC128
	0x01EAC114 ADRP X0, 0x224A000
	0x01EAC118 LDR X0, [X0 + 0xE40]
	0x01EAC11C BL 0x1C16CF4
	0x01EAC120 MOVZ W8, 0x1
	0x01EAC124 STRB W8, [X23 + 0x2F0]
	0x01EAC128 LDR X0, [X27]
	0x01EAC12C LDR W8, [X0 + 0xE0]
	0x01EAC130 CBNZ W8, 0x1EAC138
	0x01EAC134 BL 0x1C16DFC
	0x01EAC138 CBZ W21, 0x1EAC160
	0x01EAC13C LDR X8, [X22 + 0x20]
	0x01EAC140 CBZ X8, 0x1EAC840
	0x01EAC144 LDR X0, [X27]
	0x01EAC148 LDR W23, [X8 + 0x1C]
	0x01EAC14C LDR W9, [X0 + 0xE0]
	0x01EAC150 CBNZ W9, 0x1EAC158
	0x01EAC154 BL 0x1C16DFC
	0x01EAC158 CMP W23, W21
	0x01EAC15C B.EQ 0x1EAC1C4
	0x01EAC160 TBZ X25, 0x2, 0x1EABF00
	0x01EAC164 LDR X8, [X19 + 0x50]
	0x01EAC168 CBZ X8, 0x1EAC83C
	0x01EAC16C ADRP X23, 0x252D000
	0x01EAC170 LDRB W8, [X23 + 0x2F0]
	0x01EAC174 CBNZ W8, 0x1EAC18C
	0x01EAC178 ADRP X0, 0x224A000
	0x01EAC17C LDR X0, [X0 + 0xE40]
	0x01EAC180 BL 0x1C16CF4
	0x01EAC184 MOVZ W8, 0x1
	0x01EAC188 STRB W8, [X23 + 0x2F0]
	0x01EAC18C LDR X0, [X27]
	0x01EAC190 LDR W8, [X0 + 0xE0]
	0x01EAC194 CBNZ W8, 0x1EAC19C
	0x01EAC198 BL 0x1C16DFC
	0x01EAC19C CBZ W21, 0x1EAC1C4
	0x01EAC1A0 LDR X8, [X22 + 0x20]
	0x01EAC1A4 CBZ X8, 0x1EAC854
	0x01EAC1A8 LDR X0, [X27]
	0x01EAC1AC LDR W22, [X8 + 0x1C]
	0x01EAC1B0 LDR W9, [X0 + 0xE0]
	0x01EAC1B4 CBNZ W9, 0x1EAC1BC
	0x01EAC1B8 BL 0x1C16DFC
	0x01EAC1BC CMP W22, W21
	0x01EAC1C0 B.EQ 0x1EABF00
	0x01EAC1C4 LDR X0, [X27]
	0x01EAC1C8 LDR W22, [X20 + 0x4]
	0x01EAC1CC LDR W8, [X0 + 0xE0]
	0x01EAC1D0 CBNZ W8, 0x1EAC1D8
	0x01EAC1D4 BL 0x1C16DFC
	0x01EAC1D8 CMP W21, W22
	0x01EAC1DC B.EQ 0x1EABF00
	0x01EAC1E0 LDR X0, [X19 + 0x50]
	0x01EAC1E4 CBZ X0, 0x1EAC858
	0x01EAC1E8 MOV W2, W21
	0x01EAC1EC MOVZ W3, 0x1
	0x01EAC1F0 MOV X1, X20
	0x01EAC1F4 MOV X4, X31
	0x01EAC1F8 BL 0x1ECAAEC
	0x01EAC1FC B 0x1EABF00
	0x01EAC200 CMP W28, 0x0
	0x01EAC204 CSET W8, NE
	0x01EAC208 EOR W9, W29, 0x1
	0x01EAC20C AND W8, W8, W9, 0x0
	0x01EAC210 TBNZ X8, 0x0, 0x1EAC260
	0x01EAC214 ADRP X8, 0x224A000
	0x01EAC218 LDR X8, [X8 + 0xA78]
	0x01EAC21C LDR X0, [X8]
	0x01EAC220 LDR W8, [X0 + 0xE0]
	0x01EAC224 CBNZ W8, 0x1EAC22C
	0x01EAC228 BL 0x1C16DFC
	0x01EAC22C ADD X1, X31, 0x18
	0x01EAC230 MOV W0, W23
	0x01EAC234 MOV X2, X31
	0x01EAC238 BL 0x1E779A8
	0x01EAC23C TBZ X0, 0x0, 0x1EAC260
	0x01EAC240 LDR X8, [X31 + 0x18]
	0x01EAC244 CBZ X8, 0x1EAC7FC
	0x01EAC248 LDR X0, [X8 + 0x40]
	0x01EAC24C LDR X9, [X8 + 0x18]
	0x01EAC250 LDR X3, [X8 + 0x28]
	0x01EAC254 MOV X1, X19
	0x01EAC258 MOV X2, X20
	0x01EAC25C BLR X9
	0x01EAC260 TBNZ X29, 0x0, 0x1EABF00
	0x01EAC264 LDR X0, [X19 + 0x50]
	0x01EAC268 CBZ X0, 0x1EABF00
	0x01EAC26C MOV X1, X31
	0x01EAC270 BL 0x1EBDF30
	0x01EAC274 TBZ X0, 0x0, 0x1EABF00
	0x01EAC278 CBZ W28, 0x1EAC2D4
	0x01EAC27C LDR X0, [X27]
	0x01EAC280 LDR W22, [X20 + 0x4]
	0x01EAC284 LDR W8, [X0 + 0xE0]
	0x01EAC288 CBNZ W8, 0x1EAC290
	0x01EAC28C BL 0x1C16DFC
	0x01EAC290 CMP W21, W22
	0x01EAC294 B.EQ 0x1EABF00
	0x01EAC298 LDR X0, [X19 + 0x50]
	0x01EAC29C CBZ X0, 0x1EAC820
	0x01EAC2A0 MOV W2, W21
	0x01EAC2A4 MOVZ W3, 0x1
	0x01EAC2A8 MOV X1, X20
	0x01EAC2AC MOV X4, X31
	0x01EAC2B0 BL 0x1ECAAEC
	0x01EAC2B4 B 0x1EABF00
	0x01EAC2B8 MOVZ W8, 0x1
	0x01EAC2BC B 0x1EABF04
	0x01EAC2C0 LDRB W8, [X8 + 0xA4]
	0x01EAC2C4 ANDS W31, W8, 0x1
	0x01EAC2C8 MOVZ W8, 0x1
	0x01EAC2CC CINC W8, W8, EQ
	0x01EAC2D0 B 0x1EABF04
	0x01EAC2D4 LDR X0, [X19 + 0x50]
	0x01EAC2D8 CBZ X0, 0x1EAC80C
	0x01EAC2DC MOV X1, X31
	0x01EAC2E0 BL 0x1EC0AE0
	0x01EAC2E4 MOV X22, X0
	0x01EAC2E8 CBZ X0, 0x1EAC810
	0x01EAC2EC ADRP X10, 0x2252000
	0x01EAC2F0 LDR X8, [X22]
	0x01EAC2F4 LDR X10, [X10 + 0xE30]
	0x01EAC2F8 LDRH W9, [X8 + 0x12E]
	0x01EAC2FC LDR X1, [X10]
	0x01EAC300 CBZ X9, 0x1EAC324
	0x01EAC304 LDR X10, [X8 + 0xB0]
	0x01EAC308 ADD X10, X10, 0x8
	0x01EAC30C LDUR X11, [X10 - 0x8]
	0x01EAC310 CMP X11, X1
	0x01EAC314 B.EQ 0x1EAC334
	0x01EAC318 SUBS X9, X9, 0x1
	0x01EAC31C ADD X10, X10, 0x10
	0x01EAC320 B.NE 0x1EAC30C
	0x01EAC324 MOV X0, X22
	0x01EAC328 MOV W2, W31
	0x01EAC32C BL 0x1C5C788
	0x01EAC330 B 0x1EAC340
	0x01EAC334 LDRSW X9, [X10]
	0x01EAC338 ADD X8, X8, X9, 0x4, LSL
	0x01EAC33C ADD X0, X8, 0x138
	0x01EAC340 LDP X8, X1, [X0]
	0x01EAC344 MOV X0, X22
	0x01EAC348 BLR X8
	0x01EAC34C MOV X25, X0
	0x01EAC350 STR X23, [X31 + 0x8]
	0x01EAC354 CBZ X0, 0x1EAC814
	0x01EAC358 ADRP X23, 0x2247000
	0x01EAC35C ADRP X27, 0x2252000
	0x01EAC360 LDR X23, [X23 + 0xE18]
	0x01EAC364 LDR X27, [X27 + 0xE38]
	0x01EAC368 LDR X8, [X25]
	0x01EAC36C LDR X1, [X23]
	0x01EAC370 LDRH W9, [X8 + 0x12E]
	0x01EAC374 CBZ X9, 0x1EAC398
	0x01EAC378 LDR X10, [X8 + 0xB0]
	0x01EAC37C ADD X10, X10, 0x8
	0x01EAC380 LDUR X11, [X10 - 0x8]
	0x01EAC384 CMP X11, X1
	0x01EAC388 B.EQ 0x1EAC3A8
	0x01EAC38C SUBS X9, X9, 0x1
	0x01EAC390 ADD X10, X10, 0x10
	0x01EAC394 B.NE 0x1EAC380
	0x01EAC398 MOV X0, X25
	0x01EAC39C MOV W2, W31
	0x01EAC3A0 BL 0x1C5C788
	0x01EAC3A4 B 0x1EAC3B4
	0x01EAC3A8 LDRSW X9, [X10]
	0x01EAC3AC ADD X8, X8, X9, 0x4, LSL
	0x01EAC3B0 ADD X0, X8, 0x138
	0x01EAC3B4 LDP X8, X1, [X0]
	0x01EAC3B8 MOV X0, X25
	0x01EAC3BC BLR X8
	0x01EAC3C0 TBZ X0, 0x0, 0x1EAC47C
	0x01EAC3C4 LDR X8, [X25]
	0x01EAC3C8 LDR X1, [X27]
	0x01EAC3CC LDRH W9, [X8 + 0x12E]
	0x01EAC3D0 CBZ X9, 0x1EAC3F4
	0x01EAC3D4 LDR X10, [X8 + 0xB0]
	0x01EAC3D8 ADD X10, X10, 0x8
	0x01EAC3DC LDUR X11, [X10 - 0x8]
	0x01EAC3E0 CMP X11, X1
	0x01EAC3E4 B.EQ 0x1EAC404
	0x01EAC3E8 SUBS X9, X9, 0x1
	0x01EAC3EC ADD X10, X10, 0x10
	0x01EAC3F0 B.NE 0x1EAC3DC
	0x01EAC3F4 MOV X0, X25
	0x01EAC3F8 MOV W2, W31
	0x01EAC3FC BL 0x1C5C788
	0x01EAC400 B 0x1EAC410
	0x01EAC404 LDRSW X9, [X10]
	0x01EAC408 ADD X8, X8, X9, 0x4, LSL
	0x01EAC40C ADD X0, X8, 0x138
	0x01EAC410 LDP X8, X1, [X0]
	0x01EAC414 MOV X0, X25
	0x01EAC418 BLR X8
	0x01EAC41C MOV X1, X0
	0x01EAC420 LDR X0, [X19 + 0x50]
	0x01EAC424 CBZ X0, 0x1EAC7E0
	0x01EAC428 MOV X2, X31
	0x01EAC42C BL 0x1EC1598
	0x01EAC430 CBZ X20, 0x1EAC7E4
	0x01EAC434 ADRP X8, 0x224A000
	0x01EAC438 LDR X8, [X8 + 0xE40]
	0x01EAC43C MOV X22, X0
	0x01EAC440 LDR W24, [X20 + 0x4]
	0x01EAC444 LDR X0, [X8]
	0x01EAC448 LDR W8, [X0 + 0xE0]
	0x01EAC44C CBNZ W8, 0x1EAC454
	0x01EAC450 BL 0x1C16DFC
	0x01EAC454 CMP W24, W22
	0x01EAC458 B.EQ 0x1EAC368
	0x01EAC45C LDR X0, [X19 + 0x50]
	0x01EAC460 CBZ X0, 0x1EAC7EC
	0x01EAC464 AND X2, X22, 0x0
	0x01EAC468 MOV X1, X20
	0x01EAC46C MOV W3, W31
	0x01EAC470 MOV X4, X31
	0x01EAC474 BL 0x1ECAAEC
	0x01EAC478 B 0x1EAC368
	0x01EAC47C MOV X23, X31
	0x01EAC480 MOV W22, W31
	0x01EAC484 ADRP X27, 0x224A000
	0x01EAC488 LDR X27, [X27 + 0xE40]
	0x01EAC48C CBZ X25, 0x1EAC4F0
	0x01EAC490 ADRP X10, 0x2247000
	0x01EAC494 LDR X8, [X25]
	0x01EAC498 LDR X10, [X10 + 0xE00]
	0x01EAC49C LDRH W9, [X8 + 0x12E]
	0x01EAC4A0 LDR X1, [X10]
	0x01EAC4A4 CBZ X9, 0x1EAC4C8
	0x01EAC4A8 LDR X10, [X8 + 0xB0]
	0x01EAC4AC ADD X10, X10, 0x8
	0x01EAC4B0 LDUR X11, [X10 - 0x8]
	0x01EAC4B4 CMP X11, X1
	0x01EAC4B8 B.EQ 0x1EAC4D8
	0x01EAC4BC SUBS X9, X9, 0x1
	0x01EAC4C0 ADD X10, X10, 0x10
	0x01EAC4C4 B.NE 0x1EAC4B0
	0x01EAC4C8 MOV X0, X25
	0x01EAC4CC MOV W2, W31
	0x01EAC4D0 BL 0x1C5C788
	0x01EAC4D4 B 0x1EAC4E4
	0x01EAC4D8 LDRSW X9, [X10]
	0x01EAC4DC ADD X8, X8, X9, 0x4, LSL
	0x01EAC4E0 ADD X0, X8, 0x138
	0x01EAC4E4 LDP X8, X1, [X0]
	0x01EAC4E8 MOV X0, X25
	0x01EAC4EC BLR X8
	0x01EAC4F0 CBNZ X23, 0x1EAC818
	0x01EAC4F4 LDR X23, [X31 + 0x8]
	0x01EAC4F8 CBZ W22, 0x1EABF00
	0x01EAC4FC B 0x1EABF9C
	0x01EAC500 TBZ X9, 0x1, 0x1EAC5AC
	0x01EAC504 LDR X8, [X22 + 0x20]
	0x01EAC508 CBZ X8, 0x1EAC844
	0x01EAC50C LDR X0, [X27]
	0x01EAC510 LDR W21, [X8 + 0x1C]
	0x01EAC514 LDR W9, [X0 + 0xE0]
	0x01EAC518 CBNZ W9, 0x1EAC520
	0x01EAC51C BL 0x1C16DFC
	0x01EAC520 CBZ W21, 0x1EAC5AC
	0x01EAC524 LDR X8, [X19 + 0x50]
	0x01EAC528 CBZ X8, 0x1EAC85C
	0x01EAC52C ADRP X23, 0x252D000
	0x01EAC530 LDRB W8, [X23 + 0x2F0]
	0x01EAC534 LDR W21, [X20 + 0x4]
	0x01EAC538 CBNZ W8, 0x1EAC550
	0x01EAC53C ADRP X0, 0x224A000
	0x01EAC540 LDR X0, [X0 + 0xE40]
	0x01EAC544 BL 0x1C16CF4
	0x01EAC548 MOVZ W8, 0x1
	0x01EAC54C STRB W8, [X23 + 0x2F0]
	0x01EAC550 LDR X0, [X27]
	0x01EAC554 LDR W8, [X0 + 0xE0]
	0x01EAC558 CBNZ W8, 0x1EAC560
	0x01EAC55C BL 0x1C16DFC
	0x01EAC560 CBZ W21, 0x1EAC588
	0x01EAC564 LDR X8, [X22 + 0x20]
	0x01EAC568 CBZ X8, 0x1EAC868
	0x01EAC56C LDR X0, [X27]
	0x01EAC570 LDR W23, [X8 + 0x1C]
	0x01EAC574 LDR W9, [X0 + 0xE0]
	0x01EAC578 CBNZ W9, 0x1EAC580
	0x01EAC57C BL 0x1C16DFC
	0x01EAC580 CMP W23, W21
	0x01EAC584 B.EQ 0x1EAC5AC
	0x01EAC588 LDR X8, [X22 + 0x20]
	0x01EAC58C CBZ X8, 0x1EAC860
	0x01EAC590 LDR X0, [X19 + 0x50]
	0x01EAC594 CBZ X0, 0x1EAC864
	0x01EAC598 LDR W2, [X8 + 0x1C]
	0x01EAC59C MOVZ W3, 0x1
	0x01EAC5A0 MOV X1, X20
	0x01EAC5A4 MOV X4, X31
	0x01EAC5A8 BL 0x1ECAAEC
	0x01EAC5AC TBZ X25, 0x2, 0x1EABF00
	0x01EAC5B0 LDR X0, [X19 + 0x50]
	0x01EAC5B4 CBZ X0, 0x1EAC848
	0x01EAC5B8 MOV X1, X31
	0x01EAC5BC BL 0x1EC0AE0
	0x01EAC5C0 MOV X21, X0
	0x01EAC5C4 CBZ X0, 0x1EAC84C
	0x01EAC5C8 ADRP X10, 0x2252000
	0x01EAC5CC LDR X8, [X21]
	0x01EAC5D0 LDR X10, [X10 + 0xE30]
	0x01EAC5D4 LDRH W9, [X8 + 0x12E]
	0x01EAC5D8 LDR X1, [X10]
	0x01EAC5DC CBZ X9, 0x1EAC600
	0x01EAC5E0 LDR X10, [X8 + 0xB0]
	0x01EAC5E4 ADD X10, X10, 0x8
	0x01EAC5E8 LDUR X11, [X10 - 0x8]
	0x01EAC5EC CMP X11, X1
	0x01EAC5F0 B.EQ 0x1EAC610
	0x01EAC5F4 SUBS X9, X9, 0x1
	0x01EAC5F8 ADD X10, X10, 0x10
	0x01EAC5FC B.NE 0x1EAC5E8
	0x01EAC600 MOV X0, X21
	0x01EAC604 MOV W2, W31
	0x01EAC608 BL 0x1C5C788
	0x01EAC60C B 0x1EAC61C
	0x01EAC610 LDRSW X9, [X10]
	0x01EAC614 ADD X8, X8, X9, 0x4, LSL
	0x01EAC618 ADD X0, X8, 0x138
	0x01EAC61C LDP X8, X1, [X0]
	0x01EAC620 MOV X0, X21
	0x01EAC624 BLR X8
	0x01EAC628 MOV X21, X0
	0x01EAC62C CBZ X0, 0x1EAC850
	0x01EAC630 ADRP X24, 0x2247000
	0x01EAC634 ADRP X25, 0x2252000
	0x01EAC638 LDR X24, [X24 + 0xE18]
	0x01EAC63C LDR X25, [X25 + 0xE38]
	0x01EAC640 LDR X8, [X21]
	0x01EAC644 LDR X1, [X24]
	0x01EAC648 LDRH W9, [X8 + 0x12E]
	0x01EAC64C CBZ X9, 0x1EAC670
	0x01EAC650 LDR X10, [X8 + 0xB0]
	0x01EAC654 ADD X10, X10, 0x8
	0x01EAC658 LDUR X11, [X10 - 0x8]
	0x01EAC65C CMP X11, X1
	0x01EAC660 B.EQ 0x1EAC680
	0x01EAC664 SUBS X9, X9, 0x1
	0x01EAC668 ADD X10, X10, 0x10
	0x01EAC66C B.NE 0x1EAC658
	0x01EAC670 MOV X0, X21
	0x01EAC674 MOV W2, W31
	0x01EAC678 BL 0x1C5C788
	0x01EAC67C B 0x1EAC68C
	0x01EAC680 LDRSW X9, [X10]
	0x01EAC684 ADD X8, X8, X9, 0x4, LSL
	0x01EAC688 ADD X0, X8, 0x138
	0x01EAC68C LDP X8, X1, [X0]
	0x01EAC690 MOV X0, X21
	0x01EAC694 BLR X8
	0x01EAC698 TBZ X0, 0x0, 0x1EAC76C
	0x01EAC69C LDR X8, [X21]
	0x01EAC6A0 LDR X1, [X25]
	0x01EAC6A4 LDRH W9, [X8 + 0x12E]
	0x01EAC6A8 CBZ X9, 0x1EAC6CC
	0x01EAC6AC LDR X10, [X8 + 0xB0]
	0x01EAC6B0 ADD X10, X10, 0x8
	0x01EAC6B4 LDUR X11, [X10 - 0x8]
	0x01EAC6B8 CMP X11, X1
	0x01EAC6BC B.EQ 0x1EAC6DC
	0x01EAC6C0 SUBS X9, X9, 0x1
	0x01EAC6C4 ADD X10, X10, 0x10
	0x01EAC6C8 B.NE 0x1EAC6B4
	0x01EAC6CC MOV X0, X21
	0x01EAC6D0 MOV W2, W31
	0x01EAC6D4 BL 0x1C5C788
	0x01EAC6D8 B 0x1EAC6E8
	0x01EAC6DC LDRSW X9, [X10]
	0x01EAC6E0 ADD X8, X8, X9, 0x4, LSL
	0x01EAC6E4 ADD X0, X8, 0x138
	0x01EAC6E8 LDP X8, X1, [X0]
	0x01EAC6EC MOV X0, X21
	0x01EAC6F0 BLR X8
	0x01EAC6F4 MOV X1, X0
	0x01EAC6F8 LDR X0, [X19 + 0x50]
	0x01EAC6FC CBZ X0, 0x1EAC824
	0x01EAC700 MOV X2, X31
	0x01EAC704 BL 0x1EC1598
	0x01EAC708 LDR X8, [X22 + 0x20]
	0x01EAC70C CBZ X8, 0x1EAC828
	0x01EAC710 MOV X23, X0
	0x01EAC714 LDR X0, [X27]
	0x01EAC718 LDR W26, [X8 + 0x1C]
	0x01EAC71C LDR W9, [X0 + 0xE0]
	0x01EAC720 CBNZ W9, 0x1EAC728
	0x01EAC724 BL 0x1C16DFC
	0x01EAC728 CMP W26, W23
	0x01EAC72C B.EQ 0x1EAC640
	0x01EAC730 LDR X0, [X27]
	0x01EAC734 LDR W26, [X20 + 0x4]
	0x01EAC738 LDR W8, [X0 + 0xE0]
	0x01EAC73C CBNZ W8, 0x1EAC744
	0x01EAC740 BL 0x1C16DFC
	0x01EAC744 CMP W26, W23
	0x01EAC748 B.EQ 0x1EAC640
	0x01EAC74C LDR X0, [X19 + 0x50]
	0x01EAC750 CBZ X0, 0x1EAC834
	0x01EAC754 AND X2, X23, 0x0
	0x01EAC758 MOV X1, X20
	0x01EAC75C MOV W3, W31
	0x01EAC760 MOV X4, X31
	0x01EAC764 BL 0x1ECAAEC
	0x01EAC768 B 0x1EAC640
	0x01EAC76C MOV X20, X31
	0x01EAC770 CBZ X21, 0x1EAC7D4
	0x01EAC774 ADRP X10, 0x2247000
	0x01EAC778 LDR X8, [X21]
	0x01EAC77C LDR X10, [X10 + 0xE00]
	0x01EAC780 LDRH W9, [X8 + 0x12E]
	0x01EAC784 LDR X1, [X10]
	0x01EAC788 CBZ X9, 0x1EAC7AC
	0x01EAC78C LDR X10, [X8 + 0xB0]
	0x01EAC790 ADD X10, X10, 0x8
	0x01EAC794 LDUR X11, [X10 - 0x8]
	0x01EAC798 CMP X11, X1
	0x01EAC79C B.EQ 0x1EAC7BC
	0x01EAC7A0 SUBS X9, X9, 0x1
	0x01EAC7A4 ADD X10, X10, 0x10
	0x01EAC7A8 B.NE 0x1EAC794
	0x01EAC7AC MOV X0, X21
	0x01EAC7B0 MOV W2, W31
	0x01EAC7B4 BL 0x1C5C788
	0x01EAC7B8 B 0x1EAC7C8
	0x01EAC7BC LDRSW X9, [X10]
	0x01EAC7C0 ADD X8, X8, X9, 0x4, LSL
	0x01EAC7C4 ADD X0, X8, 0x138
	0x01EAC7C8 LDP X8, X1, [X0]
	0x01EAC7CC MOV X0, X21
	0x01EAC7D0 BLR X8
	0x01EAC7D4 CBZ X20, 0x1EABF00
	0x01EAC7D8 MOV X0, X20
	0x01EAC7DC BL 0x1C16F18
	0x01EAC7E0 BL 0x1C16F20
	0x01EAC7E4 BL 0x1C16F20
	0x01EAC7E8 BL 0x1C16F20
	0x01EAC7EC BL 0x1C16F20
	0x01EAC7F0 BL 0x1C16F20
	0x01EAC7F4 BL 0x1C16F20
	0x01EAC7F8 BL 0x1C16F28
	0x01EAC7FC BL 0x1C16F20
	0x01EAC800 BL 0x1C16F20
	0x01EAC804 BL 0x1C16F28
	0x01EAC808 BL 0x1C16F20
	0x01EAC80C BL 0x1C16F20
	0x01EAC810 BL 0x1C16F20
	0x01EAC814 BL 0x1C16F20
	0x01EAC818 MOV X0, X23
	0x01EAC81C BL 0x1C16F18
	0x01EAC820 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X19, 0x252E000
	015 Move W9, [X19+904]
	016 Move X22, X1
	017 Move X20, X0
	018 Move X23, X8
	019 Move TEMP, X9
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {46}
	023 Move X0, 0x224B000
	024 Move X0, [X0+920]
	025 Call 0x1C17CF4
	026 Move X0, 0x2251000
	027 Move X0, [X0+3712]
	028 Call 0x1C17CF4
	029 Move X0, 0x2253000
	030 Move X0, [X0+1768]
	031 Call 0x1C17CF4
	032 Move X0, 0x2253000
	033 Move X0, [X0+3624]
	034 Call 0x1C17CF4
	035 Move X0, 0x2248000
	036 Move X0, [X0+1432]
	037 Call 0x1C17CF4
	038 Move X0, 0x224C000
	039 Move X0, [X0+320]
	040 Call 0x1C17CF4
	041 Move X0, 0x224B000
	042 Move X0, [X0+3648]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X19+904], W8
	046 Move [X31+40], X31
	047 Move [X31+48], X20
	048 Move X8, [X22+64]
	049 Move [X31+56], X8
	050 Move X0, [X20+80]
	051 Compare X0, 0
	052 JumpIfEqual {92}
	053 Move X1, X31
	054 Call Simulation.get_IsClient, X0
	055 Move X8, [X20+80]
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {70}
	060 Compare X8, 0
	061 JumpIfEqual {92}
	062 Move X9, [X8+88]
	063 Compare X9, 0
	064 JumpIfEqual {594}
	065 Move W9, [X9+56]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Add X8, X31, 16
	068 Add X2, X31, 48
	069 Move W1, 4
	070 Compare X8, 0
	071 JumpIfEqual {92}
	072 Move X9, [X8+88]
	073 Compare X9, 0
	074 JumpIfEqual {594}
	075 Move W9, [X9+56]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X9, [X8]
	078 Move X0, X8
	079 Move X10, [X9+616]
	080 Move X1, [X9+624]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move X8, 0x224B000
	083 Move X8, [X8+3648]
	084 Move X21, X0
	085 Move X8, [X8]
	086 Move W9, [X8+224]
	087 Compare W9, 0
	088 JumpIfNotEqual {91}
	089 Move X0, X8
	090 Call 0x1C17DFC
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move W8, [X22+72]
	093 Move X1, [X22]
	094 Add X3, X31, 40
	095 Move X0, X20
	096 Move W4, W8
	097 ShiftRight W4, 16
	098 And W4, W4, 0xFFFF
	099 And W5, W8, 1
	100 Move X2, X31
	101 Call NetworkRunner.TryAcquireInstance, X0, X1, X2, X3, X4, X5
	102 Compare W0, 0
	103 JumpIfEqual {119}
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move W8, [X22+74]
	106 Move TEMP, X8
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {360}
	110 Move X8, [X20+152]
	111 Compare X8, 0
	112 JumpIfEqual {594}
	113 Move W8, [X8+48]
	114 Compare W8, 0
	115 JumpIfNotEqual {360}
	116 Add X8, X31, 16
	117 Add X2, X31, 48
	118 Move W1, 2
	119 Move X8, 0x2251000
	120 Move X8, [X8+3712]
	121 Move X26, [X31+40]
	122 Move X0, [X8]
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {127}
	126 Call 0x1C17DFC
	127 Move X0, X26
	128 Move X1, X22
	129 Call NetworkRunner.ApplySpawnArgs, X0, X1
	130 Move X0, X20
	131 Call NetworkRunner.get_IsResume, X0
	132 Compare X26, 0
	133 JumpIfEqual {594}
	134 And W8, W0, 1
	135 Move X0, X20
	136 Move [X26+40], W8
	137 Call NetworkRunner.get_IsResume, X0
	138 Move [X31], X23
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfNotEqual {151}
	143 Move X1, [X22+80]
	144 Move X0, X20
	145 Call NetworkRunner.<SpawnInternal>g__CheckIdOrGetNewId|370_0, X0, X1, X2
	146 Add X8, X31, 16
	147 Add X2, X31, 48
	148 Move W1, 3
	149 Move X0, X20
	150 Call NetworkRunner.<SpawnInternal>g__Failed|370_1, X0, X1, X2
	151 Move X0, [X20+80]
	152 Compare X0, 0
	153 JumpIfEqual {594}
	154 Move X1, X31
	155 Call Simulation.GetNextId, X0
	156 Move X25, [X20+80]
	157 Move X24, [X22]
	158 Move X23, X0
	159 Move X0, X26
	160 Move X1, X31
	161 Call NetworkObject.GetWordCount, X0
	162 Compare X25, 0
	163 JumpIfEqual {594}
	164 Move W3, W0
	165 And X1, X23, 0
	166 Move X0, X25
	167 Move X2, X24
	168 Move W4, W31
	169 Move X5, X31
	170 Move X6, X31
	171 Move X7, X31
	172 Call Simulation.AllocateObject, X0, X1, X2, X3, X4, X5, X6
	173 NotImplemented "Instruction LDUR not yet implemented."
	174 Move X23, X0
	175 Move X0, X22
	176 Call SpawnArgs.get_MasterClientOverride, X0
	177 And X5, X0, 0xFFFF
	178 Move W4, 1
	179 Move X0, X20
	180 Move X1, X23
	181 Move X2, X26
	182 Move X3, X24
	183 Call NetworkRunner.InitializeNetworkObjectInstance, X0, X1, X2, X3, X4, X5
	184 Move W9, [X26+96]
	185 Move X8, [X26+112]
	186 Or W9, W9, 0x1000000
	187 Move [X26+96], W9
	188 Compare X8, 0
	189 JumpIfEqual {594}
	190 Move X29, 0x2253000
	191 Move X29, [X29+3624]
	192 Move W19, 4
	193 Move X21, X26
	194 Move W9, [X8+24]
	195 Subtract X27, X19, 4
	196 NotImplemented "Instruction CMP not yet implemented."
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move X25, [X8]
	199 Compare X25, 0
	200 JumpIfEqual {594}
	201 Move W8, [X25+96]
	202 Move W9, 4
	203 NotImplemented "Instruction MOVK not yet implemented."
	204 Move X0, X20
	205 Or W8, W8, W9
	206 Move [X25+96], W8
	207 Call NetworkRunner.get_IsResume, X0
	208 Move TEMP, X0
	209 And TEMP, TEMP, 1
	210 Compare TEMP, 1
	211 JumpIfNotEqual {240}
	212 Move X8, 0x2248000
	213 Move X8, [X8+1432]
	214 Move X26, [X22+80]
	215 Move X0, [X8]
	216 Move W8, [X0+224]
	217 Compare W8, 0
	218 JumpIfNotEqual {220}
	219 Call 0x1C17DFC
	220 Move X0, X26
	221 Move X1, X31
	222 Move X2, X31
	223 Call Object.op_Inequality, X0, X1
	224 Move X1, X31
	225 Move TEMP, X0
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfNotEqual {238}
	229 Move X8, [X22+80]
	230 Compare X8, 0
	231 JumpIfEqual {594}
	232 Move X8, [X8+112]
	233 Compare X8, 0
	234 JumpIfEqual {594}
	235 Move W9, [X8+24]
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Move X1, [X8]
	238 Move X0, X20
	239 Call NetworkRunner.<SpawnInternal>g__CheckIdOrGetNewId|370_0, X0, X1, X2
	240 Move X0, [X20+80]
	241 Compare X0, 0
	242 JumpIfEqual {594}
	243 Move X1, X31
	244 Call Simulation.GetNextId, X0
	245 Move X27, [X20+80]
	246 Move X26, X0
	247 Move X0, X25
	248 Move X1, X31
	249 Call NetworkObject.GetWordCount, X0
	250 Compare X23, 0
	251 JumpIfEqual {594}
	252 Move X8, [X23+176]
	253 Compare X8, 0
	254 JumpIfEqual {594}
	255 Move W1, [X8]
	256 Move X8, 0x2253000
	257 Move X8, [X8+1768]
	258 Move W28, W0
	259 Add X0, X31, 16
	260 Move [X31+16], X31
	261 Move X2, [X8]
	262 Call Nullable`1<NetworkId>..ctor, X0, X1
	263 Move X2, [X29]
	264 Subtract X1, X19, 3
	265 Add X0, X31, 8
	266 Move [X31+8], X31
	267 Call Nullable`1<NetworkObjectNestingKey>..ctor, X0, X1
	268 Compare X27, 0
	269 JumpIfEqual {594}
	270 Move X6, [X31+8]
	271 Move X5, [X31+16]
	272 And X1, X26, 0
	273 Move X0, X27
	274 Move X2, X31
	275 Move W3, W28
	276 Move W4, W31
	277 Move X7, X31
	278 Call Simulation.AllocateObject, X0, X1, X2, X3, X4, X5, X6
	279 NotImplemented "Instruction LDUR not yet implemented."
	280 Move X27, X0
	281 Move X0, X22
	282 Call SpawnArgs.get_MasterClientOverride, X0
	283 NotImplemented "Instruction BFM not yet implemented."
	284 Move W4, 1
	285 Move X0, X20
	286 Move X1, X27
	287 Move X2, X25
	288 Move X3, X26
	289 Move X5, X24
	290 Call NetworkRunner.InitializeNetworkObjectInstance, X0, X1, X2, X3, X4, X5
	291 Move X8, [X21+112]
	292 Move X26, X21
	293 Add X19, X19, 1
	294 Compare X8, 0
	295 JumpIfNotEqual {194}
	296 Move X25, 0x2251000
	297 Move X25, [X25+3712]
	298 Move X0, [X25]
	299 Move W8, [X0+224]
	300 Compare W8, 0
	301 JumpIfNotEqual {303}
	302 Call 0x1C17DFC
	303 Move W0, [X26+96]
	304 Move W1, 1
	305 Move X2, X31
	306 Call NetworkObjectRuntimeFlagsExtensions.CheckFlag, X0, X1
	307 Move TEMP, X0
	308 And TEMP, TEMP, 1
	309 Compare TEMP, 1
	310 JumpIfNotEqual {467}
	311 Move W2, 1
	312 Move X0, X20
	313 Move X1, X26
	314 Call NetworkRunner.InitializeNetworkObjectState, X0, X1, X2
	315 Move X19, [X26+112]
	316 Compare X19, 0
	317 JumpIfEqual {594}
	318 Move W8, [X19+24]
	319 NotImplemented "Instruction CMP not yet implemented."
	320 Move W21, W31
	321 NotImplemented "Instruction CMP not yet implemented."
	322 Move X0, [X25]
	323 Add X8, X19, W21
	324 Move X24, [X8+32]
	325 Move W9, [X0+224]
	326 Compare W9, 0
	327 JumpIfNotEqual {329}
	328 Call 0x1C17DFC
	329 Compare X24, 0
	330 JumpIfEqual {594}
	331 Move W0, [X24+96]
	332 Move W1, 1
	333 Move X2, X31
	334 Call NetworkObjectRuntimeFlagsExtensions.CheckFlag, X0, X1
	335 Move TEMP, X0
	336 And TEMP, TEMP, 1
	337 Compare TEMP, 1
	338 JumpIfNotEqual {343}
	339 Move W2, 1
	340 Move X0, X20
	341 Move X1, X24
	342 Call NetworkRunner.InitializeNetworkObjectState, X0, X1, X2
	343 Move W8, [X19+24]
	344 Add W21, W21, 1
	345 NotImplemented "Instruction CMP not yet implemented."
	346 Move X8, [X22+56]
	347 Compare X8, 0
	348 JumpIfEqual {368}
	349 Move X9, 0x224C000
	350 Move X9, [X9+320]
	351 Move X10, [X8]
	352 Move X9, [X9]
	353 NotImplemented "Instruction CMP not yet implemented."
	354 NotImplemented "Instruction CSEL not yet implemented."
	355 Move W8, [X22+74]
	356 Move TEMP, X8
	357 And TEMP, TEMP, 1
	358 Compare TEMP, 1
	359 JumpIfEqual {591}
	360 Add X8, X31, 16
	361 Move X0, X20
	362 Move X1, X22
	363 Call NetworkRunner.<SpawnInternal>g__Incomplete|370_3, X0, X1, X2
	364 Move X8, [X31+32]
	365 Move V0, [X31+1]
	366 Move [X23+16], X8
	367 Move [X23], V0
	368 Move X3, X31
	369 Move W2, 1
	370 Move X0, X20
	371 Move X1, X26
	372 Call NetworkRunner.InvokeBeforeSpawnedCallbacks, X0, X1, X2, X3
	373 Move X19, [X26+112]
	374 Compare X19, 0
	375 JumpIfEqual {594}
	376 Move W8, [X19+24]
	377 NotImplemented "Instruction CMP not yet implemented."
	378 Move W21, W31
	379 NotImplemented "Instruction CMP not yet implemented."
	380 Move X0, [X25]
	381 Add X8, X19, W21
	382 Move X24, [X8+32]
	383 Move W9, [X0+224]
	384 Compare W9, 0
	385 JumpIfNotEqual {387}
	386 Call 0x1C17DFC
	387 Compare X24, 0
	388 JumpIfEqual {594}
	389 Move W0, [X24+96]
	390 Move W1, 1
	391 Move X2, X31
	392 Call NetworkObjectRuntimeFlagsExtensions.CheckFlag, X0, X1
	393 Move TEMP, X0
	394 And TEMP, TEMP, 1
	395 Compare TEMP, 1
	396 JumpIfNotEqual {402}
	397 Move W2, 1
	398 Move X0, X20
	399 Move X1, X24
	400 Move X3, X31
	401 Call NetworkRunner.InvokeBeforeSpawnedCallbacks, X0, X1, X2, X3
	402 Move W8, [X19+24]
	403 Add W21, W21, 1
	404 NotImplemented "Instruction CMP not yet implemented."
	405 Move X1, X26
	406 Call NetworkRunner.InvokeSpawnedCallback, X0, X1
	407 Move X19, [X26+112]
	408 Compare X19, 0
	409 JumpIfEqual {594}
	410 Move W8, [X19+24]
	411 NotImplemented "Instruction CMP not yet implemented."
	412 Move W21, W31
	413 NotImplemented "Instruction CMP not yet implemented."
	414 Move X0, [X25]
	415 Add X8, X19, W21
	416 Move X24, [X8+32]
	417 Move W9, [X0+224]
	418 Compare W9, 0
	419 JumpIfNotEqual {421}
	420 Call 0x1C17DFC
	421 Compare X24, 0
	422 JumpIfEqual {594}
	423 Move W0, [X24+96]
	424 Move W1, 1
	425 Move X2, X31
	426 Call NetworkObjectRuntimeFlagsExtensions.CheckFlag, X0, X1
	427 Move TEMP, X0
	428 And TEMP, TEMP, 1
	429 Compare TEMP, 1
	430 JumpIfNotEqual {433}
	431 Move X1, X24
	432 Call NetworkRunner.InvokeSpawnedCallback, X0, X1
	433 Move W8, [X19+24]
	434 Add W21, W21, 1
	435 NotImplemented "Instruction CMP not yet implemented."
	436 Move X1, X26
	437 Call NetworkRunner.InvokeAfterSpawnedCallback, X0, X1
	438 Move X19, [X26+112]
	439 Compare X19, 0
	440 JumpIfEqual {594}
	441 Move W8, [X19+24]
	442 NotImplemented "Instruction CMP not yet implemented."
	443 Move W21, W31
	444 NotImplemented "Instruction CMP not yet implemented."
	445 Move X0, [X25]
	446 Add X8, X19, W21
	447 Move X24, [X8+32]
	448 Move W9, [X0+224]
	449 Compare W9, 0
	450 JumpIfNotEqual {452}
	451 Call 0x1C17DFC
	452 Compare X24, 0
	453 JumpIfEqual {594}
	454 Move W0, [X24+96]
	455 Move W1, 1
	456 Move X2, X31
	457 Call NetworkObjectRuntimeFlagsExtensions.CheckFlag, X0, X1
	458 Move TEMP, X0
	459 And TEMP, TEMP, 1
	460 Compare TEMP, 1
	461 JumpIfNotEqual {464}
	462 Move X1, X24
	463 Call NetworkRunner.InvokeAfterSpawnedCallback, X0, X1
	464 Move W8, [X19+24]
	465 Add W21, W21, 1
	466 NotImplemented "Instruction CMP not yet implemented."
	467 Move W8, [X22+72]
	468 Move TEMP, X8
	469 And TEMP, TEMP, 1
	470 Compare TEMP, 1
	471 JumpIfNotEqual {480}
	472 Compare X23, 0
	473 JumpIfEqual {594}
	474 Move X8, [X23+176]
	475 Compare X8, 0
	476 JumpIfEqual {594}
	477 Move W9, [X8+24]
	478 Or W9, W9, 64
	479 Move [X8+24], W9
	480 Move X0, [X20+80]
	481 Compare X0, 0
	482 JumpIfEqual {567}
	483 Move X1, X31
	484 Call Simulation.get_IsClient, X0
	485 Move TEMP, X0
	486 And TEMP, TEMP, 1
	487 Compare TEMP, 1
	488 JumpIfNotEqual {567}
	489 Compare X23, 0
	490 JumpIfEqual {594}
	491 Move X8, [X23+176]
	492 Compare X8, 0
	493 JumpIfEqual {594}
	494 Move W9, [X8+24]
	495 Or W9, W9, 4
	496 Move [X8+24], W9
	497 Move X8, [X20+152]
	498 Compare X8, 0
	499 JumpIfEqual {594}
	500 Move X8, [X8+64]
	501 Compare X8, 0
	502 JumpIfEqual {594}
	503 Move W8, [X8+56]
	504 NotImplemented "Instruction CMP not yet implemented."
	505 Move X8, [X20+80]
	506 Compare X8, 0
	507 JumpIfEqual {594}
	508 Move X22, [X8+168]
	509 Move X0, X23
	510 Move X1, X31
	511 Call NetworkObjectMeta.get_Id, X0
	512 Compare X22, 0
	513 JumpIfEqual {594}
	514 And X1, X0, 0
	515 Move X0, X22
	516 Move X2, X31
	517 Call StateReplicator.OnObjectSpawnedLocal, X0, X1
	518 Move X19, [X26+112]
	519 Compare X19, 0
	520 JumpIfEqual {594}
	521 Move X8, [X19+24]
	522 NotImplemented "Instruction CMP not yet implemented."
	523 Move X23, 0x224B000
	524 Move X23, [X23+920]
	525 Move X21, X31
	526 And X8, X8, 0
	527 Add X22, X19, 32
	528 NotImplemented "Instruction CMP not yet implemented."
	529 Move X24, [X22]
	530 Compare X24, 0
	531 JumpIfEqual {564}
	532 Move W8, [X24+96]
	533 Move TEMP, X8
	534 And TEMP, TEMP, 2
	535 Compare TEMP, 2
	536 JumpIfEqual {564}
	537 Move X8, [X24+32]
	538 Compare X8, 0
	539 JumpIfEqual {541}
	540 Move W25, [X8]
	541 Move W25, W31
	542 Move X0, [X23]
	543 Move W8, [X0+224]
	544 Compare W8, 0
	545 JumpIfEqual {548}
	546 Compare W25, 0
	547 JumpIfNotEqual {551}
	548 Call 0x1C17DFC
	549 Compare W25, 0
	550 JumpIfEqual {564}
	551 Move X8, [X20+80]
	552 Compare X8, 0
	553 JumpIfEqual {594}
	554 Move X9, [X24+32]
	555 Compare X9, 0
	556 JumpIfEqual {558}
	557 Move W1, [X9]
	558 Move X1, X31
	559 Move X0, [X8+168]
	560 Compare X0, 0
	561 JumpIfEqual {594}
	562 Move X2, X31
	563 Call StateReplicator.OnObjectSpawnedLocal, X0, X1
	564 Move W8, [X19+24]
	565 Add X21, X21, 1
	566 NotImplemented "Instruction CMP not yet implemented."
	567 Add X8, X31, 16
	568 Add X2, X31, 48
	569 Move X0, X20
	570 Move X1, X26
	571 Call NetworkRunner.<SpawnInternal>g__Complete|370_2, X0, X1, X2
	572 Move X8, [X31+32]
	573 Move V0, [X31+1]
	574 Move X9, [X31]
	575 Move [X9+16], X8
	576 Move [X9], V0
	577 Move X20, [X31+144]
	578 Move X19, [X31+152]
	579 Move X22, [X31+128]
	580 Move X21, [X31+136]
	581 Move X24, [X31+112]
	582 Move X23, [X31+120]
	583 Move X26, [X31+96]
	584 Move X25, [X31+104]
	585 Move X28, [X31+80]
	586 Move X27, [X31+88]
	587 Move X29, [X31+64]
	588 Move X30, [X31+72]
	589 Add X31, X31, 160
	590 Return X0
	591 Add X8, X31, 16
	592 Add X2, X31, 48
	593 Move W1, 5
	594 Call 0x1C17F20
	595 Call 0x1C17F28

Method: System.Void ApplySpawnArgs(Fusion.NetworkObject obj, in Fusion.NetworkRunner/SpawnArgs spawnArgs)

Disassembly:
	0x01EAF354 BL 0x1C16D08
	0x01EAF358 MOV X20, X0
	0x01EAF35C ADRP X0, 0x224F000
	0x01EAF360 LDR X0, [X0 + 0xF10]
	0x01EAF364 BL 0x1C16D08
	0x01EAF368 MOV X2, X0
	0x01EAF36C MOV X0, X19
	0x01EAF370 MOV X1, X20
	0x01EAF374 MOV X3, X31
	0x01EAF378 BL 0x330E16C
	0x01EAF37C ADRP X0, 0x224F000
	0x01EAF380 LDR X0, [X0 + 0xF80]
	0x01EAF384 BL 0x1C16D08
	0x01EAF388 MOV X1, X0
	0x01EAF38C MOV X0, X19
	0x01EAF390 BL 0x1C16DEC
	0x01EAF394 SUB X31, X31, 0x100
	0x01EAF398 STP X29, X30, [X31 + 0xA0]
	0x01EAF39C STP X28, X27, [X31 + 0xB0]
	0x01EAF3A0 STP X26, X25, [X31 + 0xC0]
	0x01EAF3A4 STP X24, X23, [X31 + 0xD0]
	0x01EAF3A8 STP X22, X21, [X31 + 0xE0]
	0x01EAF3AC STP X20, X19, [X31 + 0xF0]
	0x01EAF3B0 MRS X28, 0xC000
	0x01EAF3B4 LDR X8, [X28 + 0x28]
	0x01EAF3B8 ADRP X27, 0x252A000
	0x01EAF3BC MOV X21, X7
	0x01EAF3C0 MOV X23, X6
	0x01EAF3C4 STR X8, [X31 + 0x98]
	0x01EAF3C8 LDRB W8, [X27 + 0x390]
	0x01EAF3CC MOV X24, X5
	0x01EAF3D0 MOV X26, X4
	0x01EAF3D4 MOV X25, X3
	0x01EAF3D8 MOV X19, X2
	0x01EAF3DC MOV X20, X1
	0x01EAF3E0 MOV X22, X0
	0x01EAF3E4 TBNZ X8, 0x0, 0x1EAF414
	0x01EAF3E8 ADRP X0, 0x224F000
	0x01EAF3EC LDR X0, [X0 + 0xF28]
	0x01EAF3F0 BL 0x1C16CF4
	0x01EAF3F4 ADRP X0, 0x2247000
	0x01EAF3F8 LDR X0, [X0 + 0x398]
	0x01EAF3FC BL 0x1C16CF4
	0x01EAF400 ADRP X0, 0x224F000
	0x01EAF404 LDR X0, [X0 + 0x378]
	0x01EAF408 BL 0x1C16CF4
	0x01EAF40C MOVZ W8, 0x1
	0x01EAF410 STRB W8, [X27 + 0x390]
	0x01EAF414 MOVI V0.2D, 0x0
	0x01EAF418 STR X31, [X31 + 0x70]
	0x01EAF41C STR W31, [X31 + 0x68]
	0x01EAF420 STR X31, [X31 + 0x60]
	0x01EAF424 STP V0, V0, [X31 + 0x40]
	0x01EAF428 STP V0, V0, [X31 + 0x20]
	0x01EAF42C STR V0, [X31 + 0x1]
	0x01EAF430 CBZ X20, 0x1EAF648
	0x01EAF434 ADRP X27, 0x224F000
	0x01EAF438 LDR X27, [X27 + 0x378]
	0x01EAF43C LDUR X8, [X20 + 0x64]
	0x01EAF440 LDR X0, [X27]
	0x01EAF444 STR X8, [X31 + 0x78]
	0x01EAF448 LDR W8, [X0 + 0xE0]
	0x01EAF44C CBNZ W8, 0x1EAF454
	0x01EAF450 BL 0x1C16DFC
	0x01EAF454 ADD X0, X31, 0x78
	0x01EAF458 MOV X1, X31
	0x01EAF45C BL 0x1E96160
	0x01EAF460 TBNZ X0, 0x0, 0x1EAF4E0
	0x01EAF464 ADRP X8, 0x224F000
	0x01EAF468 LDR X8, [X8 + 0xF28]
	0x01EAF46C ADD X1, X31, 0x70
	0x01EAF470 MOV X0, X20
	0x01EAF474 LDR X2, [X8]
	0x01EAF478 BL 0x21A4990
	0x01EAF47C TBZ X0, 0x0, 0x1EAF690
	0x01EAF480 LDR X9, [X22 + 0x98]
	0x01EAF484 CBZ X9, 0x1EAF6AC
	0x01EAF488 LDR X8, [X31 + 0x70]
	0x01EAF48C CBZ X8, 0x1EAF6B0
	0x01EAF490 LDR X0, [X9 + 0x38]
	0x01EAF494 CBZ X0, 0x1EAF6B0
	0x01EAF498 LDP X1, X2, [X8 + 0x20]
	0x01EAF49C MOV X3, X31
	0x01EAF4A0 BL 0x1E9AB04
	0x01EAF4A4 STR W0, [X31 + 0x68]
	0x01EAF4A8 ADD X0, X31, 0x68
	0x01EAF4AC MOV X1, X31
	0x01EAF4B0 BL 0x1E991E8
	0x01EAF4B4 TBZ X0, 0x0, 0x1EAF6B4
	0x01EAF4B8 LDR X0, [X27]
	0x01EAF4BC LDR W27, [X31 + 0x68]
	0x01EAF4C0 LDR W8, [X0 + 0xE0]
	0x01EAF4C4 CBNZ W8, 0x1EAF4CC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x252B000
	008 Move W8, [X19+905]
	009 Move X21, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x2248000
	016 Move X0, [X0+3544]
	017 Call 0x1C17CF4
	018 Move X0, 0x2248000
	019 Move X0, [X0+3552]
	020 Call 0x1C17CF4
	021 Move X0, 0x224F000
	022 Move X0, [X0+2904]
	023 Call 0x1C17CF4
	024 Move X0, 0x224F000
	025 Move X0, [X0+2912]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+905], W8
	029 Add X21, X21, 8
	030 Move W8, [X21]
	031 Move X19, X21
	032 Add X19, X19, 16
	033 Move W23, [X19]
	034 Compare W8, 0
	035 JumpIfEqual {52}
	036 Compare X20, 0
	037 JumpIfEqual {115}
	038 Move X22, 0x224F000
	039 Move X22, [X22+2912]
	040 Move X0, X20
	041 Move X1, X31
	042 Call Component.get_transform, X0
	043 Move X1, [X22]
	044 Move X22, X0
	045 Move X0, X21
	046 Call Nullable`1<Vector3>.get_Value, X0
	047 Compare X22, 0
	048 JumpIfEqual {115}
	049 Move X0, X22
	050 Move X1, X31
	051 Call Transform.set_position, X0, X1
	052 Compare W23, 0
	053 JumpIfEqual {93}
	054 Compare X20, 0
	055 JumpIfEqual {115}
	056 Move X21, 0x224F000
	057 Move X21, [X21+2904]
	058 Move X0, X20
	059 Move X1, X31
	060 Call Component.get_transform, X0
	061 Move X1, [X21]
	062 Move X20, X0
	063 Move X0, X19
	064 Call Nullable`1<Quaternion>.get_Value, X0
	065 Move S4, W31
	066 Move X8, -20725760
	067 Multiply S0, S0, S4
	068 Multiply S1, S1, S4
	069 Move V5, [X8+436]
	070 Multiply S2, S2, S4
	071 Add S0, S0, S1
	072 Add S0, S2, S0
	073 Multiply S1, S3, S4
	074 Add S0, S1, S0
	075 NotImplemented "Instruction FCMP not yet implemented."
	076 Move X19, 0x252A000
	077 Move W8, [X19+1939]
	078 Compare W8, 0
	079 JumpIfNotEqual {85}
	080 Move X0, 0x2246000
	081 Move X0, [X0+1448]
	082 Call 0x1C17CF4
	083 Move W8, 1
	084 Move [X19+1939], W8
	085 Move X8, 0x2246000
	086 Move X8, [X8+1448]
	087 Move X8, [X8]
	088 Move X8, [X8+184]
	089 Move S0, [X8]
	090 Move S1, [X8+4]
	091 Move S2, [X8+8]
	092 Move S3, [X8+12]
	093 Move X20, [X31+32]
	094 Move X19, [X31+40]
	095 Move X22, [X31+16]
	096 Move X21, [X31+24]
	097 Move X30, [X31+48]
	098 Move X23, [X31+56]
	099 Return 
	100 Move X1, [X21]
	101 Move X0, X19
	102 Call Nullable`1<Quaternion>.get_Value, X0
	103 Compare X20, 0
	104 JumpIfEqual {115}
	105 Move X0, X20
	106 Move X20, [X31+32]
	107 Move X19, [X31+40]
	108 Move X22, [X31+16]
	109 Move X21, [X31+24]
	110 Move X1, X31
	111 Move X30, [X31+48]
	112 Move X23, [X31+56]
	113 Call Transform.set_rotation, X0, X1
	114 Return 
	115 Call 0x1C17F20

Method: T Spawn(T prefab, System.Nullable`1<UnityEngine.Vector3> position = null, System.Nullable`1<UnityEngine.Quaternion> rotation = null, System.Nullable`1<Fusion.PlayerRef> inputAuthority = null, Fusion.NetworkRunner/OnBeforeSpawned onBeforeSpawned = null, Fusion.NetworkSpawnFlags flags = 0)

Disassembly:
	0x0222C8DC LDR X8, [X20 + 0x38]
	0x0222C8E0 MOV W1, W19
	0x0222C8E4 LDP X20, X19, [X31 + 0x10]
	0x0222C8E8 MOV X0, X21
	0x0222C8EC LDR X2, [X8 + 0x20]
	0x0222C8F0 LDR X3, [X2]
	0x0222C8F4 LDP X30, X21, [X31], #0x20
	0x0222C8F8 BR X3
	0x0222C8FC BL 0x1C16F20
	0x0222C900 STR X30, [X31 - 0x20]!
	0x0222C904 STP X20, X19, [X31 + 0x10]
	0x0222C908 LDR X8, [X1 + 0x38]
	0x0222C90C MOV X19, X1
	0x0222C910 MOV X20, X0
	0x0222C914 CBNZ X8, 0x222C920
	0x0222C918 MOV X0, X19
	0x0222C91C BL 0x1C5C6E0
	0x0222C920 MOV X0, X20
	0x0222C924 MOV X1, X31
	0x0222C928 BL 0x3C36C88
	0x0222C92C LDR X8, [X19 + 0x38]
	0x0222C930 MOV X20, X0
	0x0222C934 LDR X19, [X8 + 0x8]
	0x0222C938 LDRB W8, [X19 + 0x135]
	0x0222C93C TBNZ X8, 0x0, 0x222C94C
	0x0222C940 MOV X0, X19
	0x0222C944 BL 0x1C5C684
	0x0222C948 MOV X19, X0
	0x0222C94C CBZ X20, 0x222C96C
	0x0222C950 MOV X0, X20
	0x0222C954 MOV X1, X19
	0x0222C958 BL 0x1C16E00
	0x0222C95C CBNZ X0, 0x222C970
	0x0222C960 MOV X0, X20
	0x0222C964 MOV X1, X19
	0x0222C968 BL 0x1C171E0
	0x0222C96C MOV X0, X31
	0x0222C970 LDP X20, X19, [X31 + 0x10]
	0x0222C974 LDR X30, [X31], #0x20
	0x0222C978 RET
	0x0222C97C STR X30, [X31 - 0x20]!
	0x0222C980 STP X20, X19, [X31 + 0x10]
	0x0222C984 LDR X8, [X1 + 0x38]
	0x0222C988 MOV X19, X1
	0x0222C98C MOV X20, X0
	0x0222C990 CBNZ X8, 0x222C99C
	0x0222C994 MOV X0, X19
	0x0222C998 BL 0x1C5C6E0
	0x0222C99C MOV X0, X20
	0x0222C9A0 MOV X1, X31
	0x0222C9A4 BL 0x3C36C88
	0x0222C9A8 LDR X8, [X19 + 0x38]
	0x0222C9AC MOV X20, X0
	0x0222C9B0 LDR X19, [X8 + 0x8]
	0x0222C9B4 LDRB W8, [X19 + 0x135]
	0x0222C9B8 TBNZ X8, 0x0, 0x222C9C8
	0x0222C9BC MOV X0, X19
	0x0222C9C0 BL 0x1C5C684
	0x0222C9C4 MOV X19, X0
	0x0222C9C8 CBZ X20, 0x222C9E8
	0x0222C9CC MOV X0, X20
	0x0222C9D0 MOV X1, X19
	0x0222C9D4 BL 0x1C16E00
	0x0222C9D8 CBNZ X0, 0x222C9EC
	0x0222C9DC MOV X0, X20
	0x0222C9E0 MOV X1, X19
	0x0222C9E4 BL 0x1C171E0
	0x0222C9E8 MOV X0, X31
	0x0222C9EC LDP X20, X19, [X31 + 0x10]
	0x0222C9F0 LDR X30, [X31], #0x20
	0x0222C9F4 RET
	0x0222C9F8 STP X30, X21, [X31 - 0x20]!
	0x0222C9FC STP X20, X19, [X31 + 0x10]
	0x0222CA00 LDR X8, [X2 + 0x38]
	0x0222CA04 MOV X19, X2
	0x0222CA08 MOV W20, W1
	0x0222CA0C MOV X21, X0
	0x0222CA10 CBNZ X8, 0x222CA1C
	0x0222CA14 MOV X0, X19
	0x0222CA18 BL 0x1C5C6E0
	0x0222CA1C CBZ X21, 0x222CAB4
	0x0222CA20 TBNZ X20, 0x1F, 0x222CA6C
	0x0222CA24 LDR X8, [X19 + 0x38]
	0x0222CA28 MOV X0, X21
	0x0222CA2C LDR X1, [X8 + 0x8]
	0x0222CA30 BL 0x301BB2C
	0x0222CA34 CMP W0, W20
	0x0222CA38 B.LT 0x222CA6C
	0x0222CA3C LDR W8, [X21 + 0x18]
	0x0222CA40 CMP W8, W20
	0x0222CA44 B.NE 0x222CA54
	0x0222CA48 LDP X20, X19, [X31 + 0x10]
	0x0222CA4C LDP X30, X21, [X31], #0x20
	0x0222CA50 RET
	0x0222CA54 MOV W1, W20
	0x0222CA58 LDP X20, X19, [X31 + 0x10]
	0x0222CA5C MOV X0, X21
	0x0222CA60 MOV X2, X31
	0x0222CA64 LDP X30, X21, [X31], #0x20
	0x0222CA68 B 0x3C36C44
	0x0222CA6C ADRP X0, 0x1ECF000
	0x0222CA70 LDR X0, [X0 + 0x578]
	0x0222CA74 BL 0x1C16D08
	0x0222CA78 BL 0x1C16F10
	0x0222CA7C MOV X20, X0
	0x0222CA80 ADRP X0, 0x1EF0000
	0x0222CA84 LDR X0, [X0 + 0x1B8]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X30
	003 Move [X31+64], X28
	004 Move [X31+72], X27
	005 Move [X31+80], X26
	006 Move [X31+88], X25
	007 Move [X31+96], X24
	008 Move [X31+104], X23
	009 Move [X31+112], X22
	010 Move [X31+120], X21
	011 Move [X31+128], X20
	012 Move [X31+136], X19
	013 Move X19, [X31+144]
	014 Move W20, W7
	015 Move X21, X6
	016 Move X22, X5
	017 Move X8, [X19+56]
	018 Move X26, X4
	019 Move X23, X3
	020 Move X24, X2
	021 Move X27, X1
	022 Move X25, X0
	023 Compare X8, 0
	024 JumpIfNotEqual {33}
	025 Move X0, 0x1EF1000
	026 Move X0, [X0+424]
	027 Call 0x1C17CF4
	028 Move X8, [X19+56]
	029 Compare X8, 0
	030 JumpIfNotEqual {33}
	031 Move X0, X19
	032 Call 0x1C5D6E0
	033 Move [X31+56], X31
	034 Move [X31+40], X31
	035 Compare X27, 0
	036 JumpIfEqual {93}
	037 Move X8, 0x1EF1000
	038 Move X8, [X8+424]
	039 Move X28, [X8]
	040 Move X8, [X28+56]
	041 Compare X8, 0
	042 JumpIfNotEqual {45}
	043 Move X0, X28
	044 Call 0x1C5D6E0
	045 Move X0, X27
	046 Move X1, X31
	047 Call Component.get_gameObject, X0
	048 Compare X0, 0
	049 JumpIfEqual {105}
	050 Move X8, [X28+56]
	051 Add X1, X31, 56
	052 Move X2, [X8+8]
	053 Call 0x21E7600, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {106}
	058 Move V0, [X26]
	059 Move W8, [X26+16]
	060 Move X1, [X31+56]
	061 Add X4, X31, 16
	062 Move X0, X25
	063 Move X2, X24
	064 Move X3, X23
	065 Move X5, X22
	066 Move X6, X21
	067 Move W7, W20
	068 Move [X31+1], V0
	069 Move [X31+32], W8
	070 Move [X31], X31
	071 Call NetworkRunner.Spawn, X0, X1, X2, X3, X4, X5, X6
	072 Move [X31+40], X31
	073 Compare X0, 0
	074 JumpIfEqual {80}
	075 Move X8, [X19+56]
	076 Add X1, X31, 40
	077 Move X2, [X8+8]
	078 Call 0x21A5990, X0, X1
	079 Move X0, [X31+40]
	080 Move X20, [X31+128]
	081 Move X19, [X31+136]
	082 Move X22, [X31+112]
	083 Move X21, [X31+120]
	084 Move X24, [X31+96]
	085 Move X23, [X31+104]
	086 Move X26, [X31+80]
	087 Move X25, [X31+88]
	088 Move X28, [X31+64]
	089 Move X27, [X31+72]
	090 Move X30, [X31+48]
	091 Add X31, X31, 144
	092 Return X0
	093 Move X0, 0x1ECD000
	094 Move X0, [X0+1320]
	095 Call 0x1C17D08
	096 Call 0x1C17F10
	097 Move X20, X0
	098 Move X0, 0x1ED3000
	099 Move X0, [X0+3856]
	100 Call 0x1C17D08
	101 Move X1, X0
	102 Move X0, X20
	103 Move X2, X31
	104 Call ArgumentNullException..ctor, X0, X1
	105 Call 0x1C17F20
	106 Move X0, 0x1ED0000
	107 Move X0, [X0+1400]
	108 Call 0x1C17D08
	109 Call 0x1C17F10
	110 Move X20, X0
	111 Move X0, 0x1ED3000
	112 Move X0, [X0+3864]
	113 Call 0x1C17D08
	114 Move X21, X0
	115 Move X0, 0x1ED3000
	116 Move X0, [X0+3856]
	117 Call 0x1C17D08
	118 Move X2, X0
	119 Move X0, X20
	120 Move X1, X21
	121 Move X3, X31
	122 Call ArgumentException..ctor, X0, X1, X2
	123 Move X0, X20
	124 Move X1, X19
	125 Call 0x1C17DEC

Method: Fusion.NetworkObject Spawn(UnityEngine.GameObject prefab, System.Nullable`1<UnityEngine.Vector3> position = null, System.Nullable`1<UnityEngine.Quaternion> rotation = null, System.Nullable`1<Fusion.PlayerRef> inputAuthority = null, Fusion.NetworkRunner/OnBeforeSpawned onBeforeSpawned = null, Fusion.NetworkSpawnFlags flags = 0)

Disassembly:
	0x01EAF6A8 B 0x1EAF6FC
	0x01EAF6AC LDR X8, [X31 + 0x70]
	0x01EAF6B0 BL 0x1C16F20
	0x01EAF6B4 LDR X19, [X31 + 0x70]
	0x01EAF6B8 MOV X0, X19
	0x01EAF6BC BL 0x19903C0
	0x01EAF6C0 LDR V0, [X19 + 0x2]
	0x01EAF6C4 ADRP X0, 0x224F000
	0x01EAF6C8 STR V0, [X31 + 0x8]
	0x01EAF6CC LDR X0, [X0 + 0x350]
	0x01EAF6D0 BL 0x1C16D08
	0x01EAF6D4 ADD X1, X31, 0x80
	0x01EAF6D8 BL 0x1C16E04
	0x01EAF6DC MOV X19, X0
	0x01EAF6E0 ADRP X0, 0x224F000
	0x01EAF6E4 LDR X0, [X0 + 0xF40]
	0x01EAF6E8 BL 0x1C16D08
	0x01EAF6EC MOV X1, X20
	0x01EAF6F0 MOV X2, X19
	0x01EAF6F4 MOV X3, X31
	0x01EAF6F8 BL 0x3227BD4
	0x01EAF6FC MOV X19, X0
	0x01EAF700 ADRP X0, 0x2244000
	0x01EAF704 LDR X0, [X0 + 0x5B0]
	0x01EAF708 BL 0x1C16D08
	0x01EAF70C BL 0x1C16F10
	0x01EAF710 MOV X1, X19
	0x01EAF714 MOV X2, X31
	0x01EAF718 MOV X20, X0
	0x01EAF71C BL 0x337DF1C
	0x01EAF720 ADRP X0, 0x224F000
	0x01EAF724 LDR X0, [X0 + 0xF88]
	0x01EAF728 BL 0x1C16D08
	0x01EAF72C MOV X1, X0
	0x01EAF730 MOV X0, X20
	0x01EAF734 BL 0x1C16DEC
	0x01EAF738 BL 0x3EB1B20
	0x01EAF73C SUB X31, X31, 0xF0
	0x01EAF740 STR X30, [X31 + 0x90]
	0x01EAF744 STP X28, X27, [X31 + 0xA0]
	0x01EAF748 STP X26, X25, [X31 + 0xB0]
	0x01EAF74C STP X24, X23, [X31 + 0xC0]
	0x01EAF750 STP X22, X21, [X31 + 0xD0]
	0x01EAF754 STP X20, X19, [X31 + 0xE0]
	0x01EAF758 MRS X26, 0xC000
	0x01EAF75C LDR X8, [X26 + 0x28]
	0x01EAF760 ADRP X25, 0x252A000
	0x01EAF764 MOV X21, X7
	0x01EAF768 MOV X22, X6
	0x01EAF76C STR X8, [X31 + 0x88]
	0x01EAF770 LDRB W8, [X25 + 0x391]
	0x01EAF774 MOV X23, X5
	0x01EAF778 MOV X24, X4
	0x01EAF77C MOV X19, X3
	0x01EAF780 MOV X20, X0
	0x01EAF784 STP X1, X2, [X31 + 0x78]
	0x01EAF788 TBNZ X8, 0x0, 0x1EAF7A0
	0x01EAF78C ADRP X0, 0x224F000
	0x01EAF790 LDR X0, [X0 + 0x378]
	0x01EAF794 BL 0x1C16CF4
	0x01EAF798 MOVZ W8, 0x1
	0x01EAF79C STRB W8, [X25 + 0x391]
	0x01EAF7A0 MOVI V0.2D, 0x0
	0x01EAF7A4 ADD X0, X31, 0x78
	0x01EAF7A8 MOV X1, X31
	0x01EAF7AC STR W31, [X31 + 0x58]
	0x01EAF7B0 STR X31, [X31 + 0x50]
	0x01EAF7B4 STP V0, V0, [X31 + 0x30]
	0x01EAF7B8 STP V0, V0, [X31 + 0x10]
	0x01EAF7BC STR V0, [X31]
	0x01EAF7C0 BL 0x1E9553C
	0x01EAF7C4 TBZ X0, 0x0, 0x1EAF964
	0x01EAF7C8 LDR X8, [X20 + 0x98]
	0x01EAF7CC CBZ X8, 0x1EAF7D8
	0x01EAF7D0 LDR X25, [X8 + 0x38]
	0x01EAF7D4 B 0x1EAF7DC
	0x01EAF7D8 MOV X25, X31
	0x01EAF7DC LDP X0, X1, [X31 + 0x78]
	0x01EAF7E0 MOV X2, X31
	0x01EAF7E4 BL 0x1E95910
	0x01EAF7E8 CBZ X25, 0x1EAF9C0
	0x01EAF7EC MOV X2, X0
	0x01EAF7F0 MOV X3, X1
	0x01EAF7F4 MOV X0, X25
	0x01EAF7F8 MOV X1, X2
	0x01EAF7FC MOV X2, X3
	0x01EAF800 MOV X3, X31
	0x01EAF804 BL 0x1E9AB04
	0x01EAF808 STR W0, [X31 + 0x58]
	0x01EAF80C ADD X0, X31, 0x58
	0x01EAF810 MOV X1, X31
	0x01EAF814 BL 0x1E991E8
	0x01EAF818 TBZ X0, 0x0, 0x1EAF9C4
	0x01EAF81C ADRP X8, 0x224F000
	0x01EAF820 LDR X8, [X8 + 0x378]
	0x01EAF824 LDRH W28, [X31 + 0xF8]
	0x01EAF828 LDR X27, [X31 + 0xF0]
	0x01EAF82C LDR W25, [X31 + 0x58]
	0x01EAF830 LDR X0, [X8]
	0x01EAF834 LDR W8, [X0 + 0xE0]
	0x01EAF838 CBNZ W8, 0x1EAF840
	0x01EAF83C BL 0x1C16DFC
	0x01EAF840 MOV X0, X25
	0x01EAF844 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X30
	003 Move [X31+64], X28
	004 Move [X31+72], X27
	005 Move [X31+80], X26
	006 Move [X31+88], X25
	007 Move [X31+96], X24
	008 Move [X31+104], X23
	009 Move [X31+112], X22
	010 Move [X31+120], X21
	011 Move [X31+128], X20
	012 Move [X31+136], X19
	013 Move X28, 0x252B000
	014 Move X27, 0x2245000
	015 Move W8, [X28+906]
	016 Move X27, [X27+1432]
	017 Move W19, W7
	018 Move X20, X6
	019 Move X21, X5
	020 Move X25, X4
	021 Move X22, X3
	022 Move X23, X2
	023 Move X26, X1
	024 Move X24, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {37}
	029 Move X0, 0x2250000
	030 Move X0, [X0+3848]
	031 Call 0x1C17CF4
	032 Move X0, 0x2245000
	033 Move X0, [X0+1432]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X28+906], W8
	037 Move X0, [X27]
	038 Move [X31+56], X31
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X26
	044 Move X1, X31
	045 Move X2, X31
	046 Call Object.op_Equality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {89}
	051 Compare X26, 0
	052 JumpIfEqual {101}
	053 Move X8, 0x2250000
	054 Move X8, [X8+3848]
	055 Add X1, X31, 56
	056 Move X0, X26
	057 Move X2, [X8]
	058 Call 0x21E7600, X0, X1
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {102}
	063 Move V0, [X25]
	064 Move W8, [X25+16]
	065 Move X1, [X31+56]
	066 Add X4, X31, 16
	067 Move X0, X24
	068 Move X2, X23
	069 Move X3, X22
	070 Move X5, X21
	071 Move X6, X20
	072 Move W7, W19
	073 Move [X31+1], V0
	074 Move [X31+32], W8
	075 Call NetworkRunner.Spawn, X0, X1, X2, X3, X4, X5, X6
	076 Move X20, [X31+128]
	077 Move X19, [X31+136]
	078 Move X22, [X31+112]
	079 Move X21, [X31+120]
	080 Move X24, [X31+96]
	081 Move X23, [X31+104]
	082 Move X26, [X31+80]
	083 Move X25, [X31+88]
	084 Move X28, [X31+64]
	085 Move X27, [X31+72]
	086 Move X30, [X31+48]
	087 Add X31, X31, 144
	088 Return X0
	089 Move X0, 0x224A000
	090 Move X0, [X0+1320]
	091 Call 0x1C17D08
	092 Call 0x1C17F10
	093 Move X19, X0
	094 Move X0, 0x2250000
	095 Move X0, [X0+3856]
	096 Call 0x1C17D08
	097 Move X1, X0
	098 Move X0, X19
	099 Move X2, X31
	100 Call ArgumentNullException..ctor, X0, X1
	101 Call 0x1C17F20
	102 Move X0, 0x224D000
	103 Move X0, [X0+1400]
	104 Call 0x1C17D08
	105 Call 0x1C17F10
	106 Move X19, X0
	107 Move X0, 0x2250000
	108 Move X0, [X0+3864]
	109 Call 0x1C17D08
	110 Move X20, X0
	111 Move X0, 0x2250000
	112 Move X0, [X0+3856]
	113 Call 0x1C17D08
	114 Move X2, X0
	115 Move X0, X19
	116 Move X1, X20
	117 Move X3, X31
	118 Call ArgumentException..ctor, X0, X1, X2
	119 Move X0, 0x2250000
	120 Move X0, [X0+3872]
	121 Call 0x1C17D08
	122 Move X1, X0
	123 Move X0, X19
	124 Call 0x1C17DEC

Method: Fusion.NetworkObject Spawn(Fusion.NetworkObject prefab, System.Nullable`1<UnityEngine.Vector3> position = null, System.Nullable`1<UnityEngine.Quaternion> rotation = null, System.Nullable`1<Fusion.PlayerRef> inputAuthority = null, Fusion.NetworkRunner/OnBeforeSpawned onBeforeSpawned = null, Fusion.NetworkSpawnFlags flags = 0)

Disassembly:
	0x01EAF848 BL 0x1E99830
	0x01EAF84C STP X0, X24, [X31]
	0x01EAF850 STR X23, [X31 + 0x10]
	0x01EAF854 LDR W9, [X22 + 0x10]
	0x01EAF858 LDR V0, [X22]
	0x01EAF85C SXTH W8, W28
	0x01EAF860 ORR W8, W8, 0x10000
	0x01EAF864 STP W8, W31, [X31 + 0x48]
	0x01EAF868 ADD X8, X31, 0x60
	0x01EAF86C ADD X1, X31, 0x0
	0x01EAF870 MOV X0, X20
	0x01EAF874 STUR X21, [X31 + 0x2C]
	0x01EAF878 STR W31, [X31 + 0x34]
	0x01EAF87C STP X27, X31, [X31 + 0x38]
	0x01EAF880 STUR V0, [X31 + 0x18]
	0x01EAF884 STR W9, [X31 + 0x28]
	0x01EAF888 STR X31, [X31 + 0x50]
	0x01EAF88C BL 0x1EAB01C
	0x01EAF890 ADRP X22, 0x252A000
	0x01EAF894 LDR W20, [X31 + 0x68]
	0x01EAF898 LDRB W8, [X22 + 0x3BF]
	0x01EAF89C LDR X21, [X31 + 0x70]
	0x01EAF8A0 CBZ W8, 0x1EAF914
	0x01EAF8A4 CBZ X21, 0x1EAF92C
	0x01EAF8A8 ADRP X8, 0x2247000
	0x01EAF8AC LDR X8, [X8 + 0xBA8]
	0x01EAF8B0 LDR X9, [X21]
	0x01EAF8B4 LDR X1, [X8]
	0x01EAF8B8 LDRB W11, [X9 + 0x130]
	0x01EAF8BC LDRB W10, [X1 + 0x130]
	0x01EAF8C0 CMP W11, W10
	0x01EAF8C4 B.CC 0x1EAF90C
	0x01EAF8C8 LDR X9, [X9 + 0xC8]
	0x01EAF8CC ADD X9, X9, X10, 0x3, LSL
	0x01EAF8D0 LDUR X9, [X9 - 0x8]
	0x01EAF8D4 CMP X9, X1
	0x01EAF8D8 B.NE 0x1EAF90C
	0x01EAF8DC STR X21, [X19]
	0x01EAF8E0 LDR X9, [X21]
	0x01EAF8E4 LDR X1, [X8]
	0x01EAF8E8 LDRB W10, [X9 + 0x130]
	0x01EAF8EC LDRB W8, [X1 + 0x130]
	0x01EAF8F0 CMP W10, W8
	0x01EAF8F4 B.CC 0x1EAF90C
	0x01EAF8F8 LDR X9, [X9 + 0xC8]
	0x01EAF8FC ADD X8, X9, X8, 0x3, LSL
	0x01EAF900 LDUR X8, [X8 - 0x8]
	0x01EAF904 CMP X8, X1
	0x01EAF908 B.EQ 0x1EAF930
	0x01EAF90C MOV X0, X21
	0x01EAF910 BL 0x1C171E0
	0x01EAF914 ADRP X0, 0x2247000
	0x01EAF918 LDR X0, [X0 + 0xBA8]
	0x01EAF91C BL 0x1C16CF4
	0x01EAF920 MOVZ W8, 0x1
	0x01EAF924 STRB W8, [X22 + 0x3BF]
	0x01EAF928 CBNZ X21, 0x1EAF8A8
	0x01EAF92C STR X31, [X19]
	0x01EAF930 LDR X8, [X26 + 0x28]
	0x01EAF934 LDR X9, [X31 + 0x88]
	0x01EAF938 CMP X8, X9
	0x01EAF93C B.NE 0x1EAFA38
	0x01EAF940 MOV W0, W20
	0x01EAF944 LDP X20, X19, [X31 + 0xE0]
	0x01EAF948 LDP X22, X21, [X31 + 0xD0]
	0x01EAF94C LDP X24, X23, [X31 + 0xC0]
	0x01EAF950 LDP X26, X25, [X31 + 0xB0]
	0x01EAF954 LDP X28, X27, [X31 + 0xA0]
	0x01EAF958 LDR X30, [X31 + 0x90]
	0x01EAF95C ADD X31, X31, 0xF0
	0x01EAF960 RET
	0x01EAF964 ADRP X0, 0x224C000
	0x01EAF968 LDR X0, [X0 + 0x578]
	0x01EAF96C BL 0x1C16D08
	0x01EAF970 BL 0x1C16F10
	0x01EAF974 MOV X19, X0
	0x01EAF978 ADRP X0, 0x224F000
	0x01EAF97C LDR X0, [X0 + 0xF48]
	0x01EAF980 BL 0x1C16D08
	0x01EAF984 MOV X20, X0
	0x01EAF988 ADRP X0, 0x224F000
	0x01EAF98C LDR X0, [X0 + 0xF50]
	0x01EAF990 BL 0x1C16D08
	0x01EAF994 MOV X2, X0
	0x01EAF998 MOV X0, X19
	0x01EAF99C MOV X1, X20
	0x01EAF9A0 MOV X3, X31
	0x01EAF9A4 BL 0x330E16C
	0x01EAF9A8 ADRP X0, 0x224F000
	0x01EAF9AC LDR X0, [X0 + 0xF90]
	0x01EAF9B0 BL 0x1C16D08
	0x01EAF9B4 MOV X1, X0
	0x01EAF9B8 MOV X0, X19
	0x01EAF9BC BL 0x1C16DEC
	0x01EAF9C0 BL 0x1C16F20
	0x01EAF9C4 LDUR V0, [X31 + 0x78]
	0x01EAF9C8 ADRP X0, 0x224F000
	0x01EAF9CC STR V0, [X31 + 0x6]
	0x01EAF9D0 LDR X0, [X0 + 0x360]
	0x01EAF9D4 BL 0x1C16D08
	0x01EAF9D8 ADD X1, X31, 0x60
	0x01EAF9DC BL 0x1C16E04
	0x01EAF9E0 MOV X19, X0
	0x01EAF9E4 ADRP X0, 0x224F000
	0x01EAF9E8 LDR X0, [X0 + 0xF38]
	0x01EAF9EC BL 0x1C16D08
	0x01EAF9F0 MOV X1, X19
	0x01EAF9F4 MOV X2, X31
	0x01EAF9F8 BL 0x321EFD0
	0x01EAF9FC MOV X19, X0
	0x01EAFA00 ADRP X0, 0x2244000
	0x01EAFA04 LDR X0, [X0 + 0x5B0]
	0x01EAFA08 BL 0x1C16D08
	0x01EAFA0C BL 0x1C16F10
	0x01EAFA10 MOV X1, X19
	0x01EAFA14 MOV X2, X31
	0x01EAFA18 MOV X20, X0
	0x01EAFA1C BL 0x337DF1C
	0x01EAFA20 ADRP X0, 0x224F000
	0x01EAFA24 LDR X0, [X0 + 0xF90]
	0x01EAFA28 BL 0x1C16D08
	0x01EAFA2C MOV X1, X0
	0x01EAFA30 MOV X0, X20
	0x01EAFA34 BL 0x1C16DEC
	0x01EAFA38 BL 0x3EB1B20
	0x01EAFA3C SUB X31, X31, 0xF0
	0x01EAFA40 STR X30, [X31 + 0x90]
	0x01EAFA44 STP X28, X27, [X31 + 0xA0]
	0x01EAFA48 STP X26, X25, [X31 + 0xB0]
	0x01EAFA4C STP X24, X23, [X31 + 0xC0]
	0x01EAFA50 STP X22, X21, [X31 + 0xD0]
	0x01EAFA54 STP X20, X19, [X31 + 0xE0]
	0x01EAFA58 MRS X26, 0xC000
	0x01EAFA5C LDR X8, [X26 + 0x28]
	0x01EAFA60 ADRP X25, 0x252A000
	0x01EAFA64 MOV X21, X7
	0x01EAFA68 MOV X22, X6
	0x01EAFA6C STR X8, [X31 + 0x88]
	0x01EAFA70 LDRB W8, [X25 + 0x392]
	0x01EAFA74 MOV X23, X5
	0x01EAFA78 MOV X24, X4
	0x01EAFA7C MOV X19, X3
	0x01EAFA80 MOV X20, X0
	0x01EAFA84 STP X1, X2, [X31 + 0x78]
	0x01EAFA88 TBNZ X8, 0x0, 0x1EAFAA0
	0x01EAFA8C ADRP X0, 0x224F000
	0x01EAFA90 LDR X0, [X0 + 0x378]
	0x01EAFA94 BL 0x1C16CF4
	0x01EAFA98 MOVZ W8, 0x1
	0x01EAFA9C STRB W8, [X25 + 0x392]
	0x01EAFAA0 MOVI V0.2D, 0x0
	0x01EAFAA4 ADD X0, X31, 0x78
	0x01EAFAA8 MOV X1, X31
	0x01EAFAAC STR W31, [X31 + 0x58]
	0x01EAFAB0 STR X31, [X31 + 0x50]
	0x01EAFAB4 STP V0, V0, [X31 + 0x30]
	0x01EAFAB8 STP V0, V0, [X31 + 0x10]
	0x01EAFABC STR V0, [X31]
	0x01EAFAC0 BL 0x1E94F24
	0x01EAFAC4 TBZ X0, 0x0, 0x1EAFC44
	0x01EAFAC8 LDR X8, [X20 + 0x98]
	0x01EAFACC CBZ X8, 0x1EAFC40
	0x01EAFAD0 LDR X0, [X8 + 0x38]
	0x01EAFAD4 CBZ X0, 0x1EAFC40
	0x01EAFAD8 LDP X1, X2, [X31 + 0x78]
	0x01EAFADC MOV X3, X31
	0x01EAFAE0 BL 0x1E9AB04
	0x01EAFAE4 STR W0, [X31 + 0x58]
	0x01EAFAE8 ADD X0, X31, 0x58
	0x01EAFAEC MOV X1, X31
	0x01EAFAF0 BL 0x1E991E8
	0x01EAFAF4 TBZ X0, 0x0, 0x1EAFCA0
	0x01EAFAF8 ADRP X8, 0x224F000
	0x01EAFAFC LDR X8, [X8 + 0x378]
	0x01EAFB00 LDRH W28, [X31 + 0xF8]
	0x01EAFB04 LDR X27, [X31 + 0xF0]
	0x01EAFB08 LDR W25, [X31 + 0x58]
	0x01EAFB0C LDR X0, [X8]
	0x01EAFB10 LDR W8, [X0 + 0xE0]
	0x01EAFB14 CBNZ W8, 0x1EAFB1C
	0x01EAFB18 BL 0x1C16DFC
	0x01EAFB1C MOV X0, X25
	0x01EAFB20 MOV X1, X31
	0x01EAFB24 BL 0x1E99830
	0x01EAFB28 STP X0, X24, [X31]
	0x01EAFB2C STR X23, [X31 + 0x10]
	0x01EAFB30 LDR W9, [X22 + 0x10]
	0x01EAFB34 LDR V0, [X22]
	0x01EAFB38 SXTH W8, W28
	0x01EAFB3C ORR W8, W8, 0x10000
	0x01EAFB40 STP W8, W31, [X31 + 0x48]
	0x01EAFB44 ADD X8, X31, 0x60
	0x01EAFB48 ADD X1, X31, 0x0
	0x01EAFB4C MOV X0, X20
	0x01EAFB50 STUR X21, [X31 + 0x2C]
	0x01EAFB54 STR W31, [X31 + 0x34]
	0x01EAFB58 STP X27, X31, [X31 + 0x38]
	0x01EAFB5C STUR V0, [X31 + 0x18]

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+176], X29
	003 Move [X31+184], X30
	004 Move [X31+192], X28
	005 Move [X31+200], X27
	006 Move [X31+208], X26
	007 Move [X31+216], X25
	008 Move [X31+224], X24
	009 Move [X31+232], X23
	010 Move [X31+240], X22
	011 Move [X31+248], X21
	012 Move [X31+256], X20
	013 Move [X31+264], X19
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X28+40]
	016 Move X27, 0x252B000
	017 Move W26, W7
	018 Move X21, X6
	019 Move [X31+168], X8
	020 Move W8, [X27+907]
	021 Move X22, X5
	022 Move X23, X4
	023 Move X25, X3
	024 Move X24, X2
	025 Move X19, X1
	026 Move X20, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {42}
	031 Move X0, 0x2250000
	032 Move X0, [X0+3880]
	033 Call 0x1C17CF4
	034 Move X0, 0x2248000
	035 Move X0, [X0+920]
	036 Call 0x1C17CF4
	037 Move X0, 0x2250000
	038 Move X0, [X0+888]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X27+907], W8
	042 NotImplemented "Instruction MOVI not yet implemented."
	043 Move [X31+128], X31
	044 Move [X31+120], W31
	045 Move [X31+112], X31
	046 Move [X31+8], X31
	047 Move [X31+16], X31
	048 Move [X31+80], V0
	049 Move [X31+88], V0
	050 Move [X31+48], V0
	051 Move [X31+56], V0
	052 Move [X31+2], V0
	053 Move [X31+24], X31
	054 Compare X19, 0
	055 JumpIfEqual {177}
	056 Move X27, 0x2250000
	057 Move X27, [X27+888]
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 Move X0, [X27]
	060 Move [X31+136], X8
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Add X0, X31, 136
	066 Move X1, X31
	067 Call NetworkObjectTypeId.get_IsValid, X0
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {114}
	072 Move X8, 0x2250000
	073 Move X8, [X8+3880]
	074 Add X1, X31, 128
	075 Move X0, X19
	076 Move X2, [X8]
	077 Call 0x21A5990, X0, X1
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {195}
	082 Move X9, [X20+152]
	083 Compare X9, 0
	084 JumpIfEqual {201}
	085 Move X8, [X31+128]
	086 Compare X8, 0
	087 JumpIfEqual {202}
	088 Move X0, [X9+56]
	089 Compare X0, 0
	090 JumpIfEqual {202}
	091 Move X1, [X8+32]
	092 Move X2, [X8+40]
	093 Move X3, X31
	094 Call NetworkPrefabTable.GetId, X0, X1
	095 Move [X31+120], W0
	096 Add X0, X31, 120
	097 Move X1, X31
	098 Call NetworkPrefabId.get_IsValid, X0
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {203}
	103 Move X0, [X27]
	104 Move W27, [X31+120]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Move X0, X27
	110 Move X1, X31
	111 Call NetworkObjectTypeId.op_Implicit, X0
	112 Move [X31+136], X0
	113 Move [X19+100], X0
	114 Move X0, X20
	115 Call NetworkRunner.get_IsResume, X0
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {124}
	120 Move X8, [X19+32]
	121 Compare X8, 0
	122 JumpIfEqual {125}
	123 Move W27, [X8]
	124 Move X8, X31
	125 Move W27, W31
	126 Move X8, 0x2248000
	127 Move X8, [X8+920]
	128 Move X0, [X8]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 NotImplemented "Instruction CMP not yet implemented."
	134 NotImplemented "Instruction CSEL not yet implemented."
	135 Move X9, [X31+136]
	136 Move [X31+40], X24
	137 Move [X31+48], X25
	138 NotImplemented "Instruction SXTH not yet implemented."
	139 Or W10, W10, 0x10000
	140 Move [X31+32], X9
	141 Move W9, [X23+16]
	142 Move V0, [X23]
	143 Move [X31+112], X8
	144 Add X8, X31, 8
	145 Add X1, X31, 32
	146 Move X0, X20
	147 Move [X31+76], X22
	148 Move [X31+84], W31
	149 Move [X31+88], X21
	150 Move [X31+96], X31
	151 Move [X31+104], W10
	152 Move [X31+108], W31
	153 Move [X31+56], V0
	154 Move [X31+72], W9
	155 Call NetworkRunner.SpawnInternal, X0, X1
	156 Move X1, [X31+136]
	157 Add X0, X31, 8
	158 Move X2, X31
	159 Call 0x1EB45B4
	160 Move X8, [X28+40]
	161 Move X9, [X31+168]
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X20, [X31+256]
	164 Move X19, [X31+264]
	165 Move X22, [X31+240]
	166 Move X21, [X31+248]
	167 Move X24, [X31+224]
	168 Move X23, [X31+232]
	169 Move X26, [X31+208]
	170 Move X25, [X31+216]
	171 Move X28, [X31+192]
	172 Move X27, [X31+200]
	173 Move X29, [X31+176]
	174 Move X30, [X31+184]
	175 Add X31, X31, 272
	176 Return X0
	177 Move X0, 0x224A000
	178 Move X0, [X0+1320]
	179 Call 0x1C17D08
	180 Call 0x1C17F10
	181 Move X19, X0
	182 Move X0, 0x2250000
	183 Move X0, [X0+3856]
	184 Call 0x1C17D08
	185 Move X1, X0
	186 Move X0, X19
	187 Move X2, X31
	188 Call ArgumentNullException..ctor, X0, X1
	189 Move X0, 0x2250000
	190 Move X0, [X0+3888]
	191 Call 0x1C17D08
	192 Move X1, X0
	193 Move X0, X19
	194 Call 0x1C17DEC
	195 Move X0, 0x2250000
	196 Move X0, [X0+3896]
	197 Call 0x1C17D08
	198 Move X1, X19
	199 Move X2, X31
	200 Call String.Format, X0, X1
	201 Move X8, [X31+128]
	202 Call 0x1C17F20
	203 Move X20, [X31+128]
	204 Move X0, X20
	205 Call 0x19913C0
	206 Move V0, [X20+2]
	207 Move X0, 0x2250000
	208 Move [X31+9], V0
	209 Move X0, [X0+848]
	210 Call 0x1C17D08
	211 Add X1, X31, 144
	212 Call 0x1C17E04
	213 Move X20, X0
	214 Move X0, 0x2250000
	215 Move X0, [X0+3904]
	216 Call 0x1C17D08
	217 Move X1, X19
	218 Move X2, X20
	219 Move X3, X31
	220 Call String.Format, X0, X1, X2
	221 Move X19, X0
	222 Move X0, 0x2245000
	223 Move X0, [X0+1456]
	224 Call 0x1C17D08
	225 Call 0x1C17F10
	226 Move X1, X19
	227 Move X2, X31
	228 Move X20, X0
	229 Call InvalidOperationException..ctor, X0, X1
	230 Move X0, 0x2250000
	231 Move X0, [X0+3888]
	232 Call 0x1C17D08
	233 Move X1, X0
	234 Move X0, X20
	235 Call 0x1C17DEC
	236 Call 0x3EB2B20

Method: Fusion.NetworkObject Spawn(Fusion.NetworkPrefabRef prefabRef, System.Nullable`1<UnityEngine.Vector3> position = null, System.Nullable`1<UnityEngine.Quaternion> rotation = null, System.Nullable`1<Fusion.PlayerRef> inputAuthority = null, Fusion.NetworkRunner/OnBeforeSpawned onBeforeSpawned = null, Fusion.NetworkSpawnFlags flags = 0)

Disassembly:
	0x01EAFBA8 ADD X9, X9, X10, 0x3, LSL
	0x01EAFBAC LDUR X9, [X9 - 0x8]
	0x01EAFBB0 CMP X9, X1
	0x01EAFBB4 B.NE 0x1EAFBE8
	0x01EAFBB8 STR X21, [X19]
	0x01EAFBBC LDR X9, [X21]
	0x01EAFBC0 LDR X1, [X8]
	0x01EAFBC4 LDRB W10, [X9 + 0x130]
	0x01EAFBC8 LDRB W8, [X1 + 0x130]
	0x01EAFBCC CMP W10, W8
	0x01EAFBD0 B.CC 0x1EAFBE8
	0x01EAFBD4 LDR X9, [X9 + 0xC8]
	0x01EAFBD8 ADD X8, X9, X8, 0x3, LSL
	0x01EAFBDC LDUR X8, [X8 - 0x8]
	0x01EAFBE0 CMP X8, X1
	0x01EAFBE4 B.EQ 0x1EAFC0C
	0x01EAFBE8 MOV X0, X21
	0x01EAFBEC BL 0x1C171E0
	0x01EAFBF0 ADRP X0, 0x2247000
	0x01EAFBF4 LDR X0, [X0 + 0xBA8]
	0x01EAFBF8 BL 0x1C16CF4
	0x01EAFBFC MOVZ W8, 0x1
	0x01EAFC00 STRB W8, [X22 + 0x3BF]
	0x01EAFC04 CBNZ X21, 0x1EAFB84
	0x01EAFC08 STR X31, [X19]
	0x01EAFC0C LDR X8, [X26 + 0x28]
	0x01EAFC10 LDR X9, [X31 + 0x88]
	0x01EAFC14 CMP X8, X9
	0x01EAFC18 B.NE 0x1EAFD14
	0x01EAFC1C MOV W0, W20
	0x01EAFC20 LDP X20, X19, [X31 + 0xE0]
	0x01EAFC24 LDP X22, X21, [X31 + 0xD0]
	0x01EAFC28 LDP X24, X23, [X31 + 0xC0]
	0x01EAFC2C LDP X26, X25, [X31 + 0xB0]
	0x01EAFC30 LDP X28, X27, [X31 + 0xA0]
	0x01EAFC34 LDR X30, [X31 + 0x90]
	0x01EAFC38 ADD X31, X31, 0xF0
	0x01EAFC3C RET
	0x01EAFC40 BL 0x1C16F20
	0x01EAFC44 ADRP X0, 0x224C000
	0x01EAFC48 LDR X0, [X0 + 0x578]
	0x01EAFC4C BL 0x1C16D08
	0x01EAFC50 BL 0x1C16F10
	0x01EAFC54 MOV X19, X0
	0x01EAFC58 ADRP X0, 0x224F000
	0x01EAFC5C LDR X0, [X0 + 0xF48]
	0x01EAFC60 BL 0x1C16D08
	0x01EAFC64 MOV X20, X0
	0x01EAFC68 ADRP X0, 0x224F000
	0x01EAFC6C LDR X0, [X0 + 0xF60]
	0x01EAFC70 BL 0x1C16D08
	0x01EAFC74 MOV X2, X0
	0x01EAFC78 MOV X0, X19
	0x01EAFC7C MOV X1, X20
	0x01EAFC80 MOV X3, X31
	0x01EAFC84 BL 0x330E16C
	0x01EAFC88 ADRP X0, 0x224F000
	0x01EAFC8C LDR X0, [X0 + 0xF98]
	0x01EAFC90 BL 0x1C16D08
	0x01EAFC94 MOV X1, X0
	0x01EAFC98 MOV X0, X19
	0x01EAFC9C BL 0x1C16DEC
	0x01EAFCA0 LDUR V0, [X31 + 0x78]
	0x01EAFCA4 ADRP X0, 0x224F000
	0x01EAFCA8 STR V0, [X31 + 0x6]
	0x01EAFCAC LDR X0, [X0 + 0x350]
	0x01EAFCB0 BL 0x1C16D08
	0x01EAFCB4 ADD X1, X31, 0x60
	0x01EAFCB8 BL 0x1C16E04
	0x01EAFCBC MOV X19, X0
	0x01EAFCC0 ADRP X0, 0x224F000
	0x01EAFCC4 LDR X0, [X0 + 0xF38]
	0x01EAFCC8 BL 0x1C16D08
	0x01EAFCCC MOV X1, X19
	0x01EAFCD0 MOV X2, X31
	0x01EAFCD4 BL 0x321EFD0
	0x01EAFCD8 MOV X19, X0
	0x01EAFCDC ADRP X0, 0x2244000
	0x01EAFCE0 LDR X0, [X0 + 0x5B0]
	0x01EAFCE4 BL 0x1C16D08
	0x01EAFCE8 BL 0x1C16F10
	0x01EAFCEC MOV X1, X19
	0x01EAFCF0 MOV X2, X31
	0x01EAFCF4 MOV X20, X0
	0x01EAFCF8 BL 0x337DF1C
	0x01EAFCFC ADRP X0, 0x224F000
	0x01EAFD00 LDR X0, [X0 + 0xF98]
	0x01EAFD04 BL 0x1C16D08
	0x01EAFD08 MOV X1, X0
	0x01EAFD0C MOV X0, X20
	0x01EAFD10 BL 0x1C16DEC
	0x01EAFD14 BL 0x3EB1B20
	0x01EAFD18 SUB X31, X31, 0xD0
	0x01EAFD1C STP X30, X27, [X31 + 0x80]
	0x01EAFD20 STP X26, X25, [X31 + 0x90]
	0x01EAFD24 STP X24, X23, [X31 + 0xA0]
	0x01EAFD28 STP X22, X21, [X31 + 0xB0]
	0x01EAFD2C STP X20, X19, [X31 + 0xC0]
	0x01EAFD30 ADRP X26, 0x252A000
	0x01EAFD34 LDRB W8, [X26 + 0x393]
	0x01EAFD38 MOV X21, X7
	0x01EAFD3C MOV X22, X6
	0x01EAFD40 MOV X23, X5
	0x01EAFD44 MOV X24, X4
	0x01EAFD48 MOV X25, X3
	0x01EAFD4C MOV X19, X2
	0x01EAFD50 MOV X20, X0
	0x01EAFD54 STR W1, [X31 + 0x78]
	0x01EAFD58 TBNZ X8, 0x0, 0x1EAFD70
	0x01EAFD5C ADRP X0, 0x224F000
	0x01EAFD60 LDR X0, [X0 + 0x378]
	0x01EAFD64 BL 0x1C16CF4
	0x01EAFD68 MOVZ W8, 0x1
	0x01EAFD6C STRB W8, [X26 + 0x393]
	0x01EAFD70 MOVI V0.2D, 0x0
	0x01EAFD74 ADD X0, X31, 0x78
	0x01EAFD78 MOV X1, X31
	0x01EAFD7C STR X31, [X31 + 0x70]
	0x01EAFD80 STP V0, V0, [X31 + 0x50]
	0x01EAFD84 STP V0, V0, [X31 + 0x30]
	0x01EAFD88 STR V0, [X31 + 0x2]
	0x01EAFD8C BL 0x1E991E8
	0x01EAFD90 TBZ X0, 0x0, 0x1EAFEC4
	0x01EAFD94 ADRP X8, 0x224F000
	0x01EAFD98 LDR X8, [X8 + 0x378]
	0x01EAFD9C LDRH W27, [X31 + 0xD0]
	0x01EAFDA0 LDR W26, [X31 + 0x78]
	0x01EAFDA4 LDR X0, [X8]
	0x01EAFDA8 LDR W8, [X0 + 0xE0]
	0x01EAFDAC CBNZ W8, 0x1EAFDB4
	0x01EAFDB0 BL 0x1C16DFC
	0x01EAFDB4 MOV X0, X26
	0x01EAFDB8 MOV X1, X31
	0x01EAFDBC BL 0x1E99830
	0x01EAFDC0 STP X0, X25, [X31 + 0x20]
	0x01EAFDC4 STR X24, [X31 + 0x30]
	0x01EAFDC8 LDR W9, [X23 + 0x10]
	0x01EAFDCC LDR V0, [X23]
	0x01EAFDD0 SXTH W8, W27
	0x01EAFDD4 ORR W8, W8, 0x10000
	0x01EAFDD8 STP W8, W31, [X31 + 0x68]
	0x01EAFDDC ADD X8, X31, 0x8
	0x01EAFDE0 ADD X1, X31, 0x20
	0x01EAFDE4 MOV X0, X20
	0x01EAFDE8 STUR X22, [X31 + 0x4C]
	0x01EAFDEC STR W31, [X31 + 0x54]
	0x01EAFDF0 STP X21, X31, [X31 + 0x58]
	0x01EAFDF4 STUR V0, [X31 + 0x38]
	0x01EAFDF8 STR W9, [X31 + 0x48]
	0x01EAFDFC STR X31, [X31 + 0x70]
	0x01EAFE00 BL 0x1EAB01C
	0x01EAFE04 ADRP X22, 0x252A000
	0x01EAFE08 LDR W20, [X31 + 0x10]
	0x01EAFE0C LDRB W8, [X22 + 0x3BF]
	0x01EAFE10 LDR X21, [X31 + 0x18]
	0x01EAFE14 CBZ W8, 0x1EAFE88
	0x01EAFE18 CBZ X21, 0x1EAFEA0
	0x01EAFE1C ADRP X8, 0x2247000
	0x01EAFE20 LDR X8, [X8 + 0xBA8]

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+176], X29
	003 Move [X31+192], X30
	004 Move [X31+200], X27
	005 Move [X31+208], X26
	006 Move [X31+216], X25
	007 Move [X31+224], X24
	008 Move [X31+232], X23
	009 Move [X31+240], X22
	010 Move [X31+248], X21
	011 Move [X31+256], X20
	012 Move [X31+264], X19
	013 NotImplemented "Instruction MRS not yet implemented."
	014 Move X8, [X26+40]
	015 Move X25, 0x252B000
	016 Move X20, X7
	017 Move X21, X6
	018 Move [X31+168], X8
	019 Move W8, [X25+908]
	020 Move X22, X5
	021 Move X23, X4
	022 Move X24, X3
	023 Move X19, X0
	024 Move [X31+152], X1
	025 Move [X31+160], X2
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {35}
	030 Move X0, 0x2250000
	031 Move X0, [X0+888]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X25+908], W8
	035 NotImplemented "Instruction MOVI not yet implemented."
	036 Add X0, X31, 152
	037 Move X1, X31
	038 Move [X31+120], W31
	039 Move [X31+112], X31
	040 Move [X31+8], X31
	041 Move [X31+16], X31
	042 Move [X31+80], V0
	043 Move [X31+88], V0
	044 Move [X31+48], V0
	045 Move [X31+56], V0
	046 Move [X31+2], V0
	047 Move [X31+24], X31
	048 Call NetworkPrefabRef.get_IsValid, X0
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {134}
	053 Move X8, [X19+152]
	054 Compare X8, 0
	055 JumpIfEqual {57}
	056 Move X25, [X8+56]
	057 Move X25, X31
	058 Move X0, [X31+152]
	059 Move X1, [X31+160]
	060 Move X2, X31
	061 Call NetworkPrefabRef.op_Explicit, X0
	062 Compare X25, 0
	063 JumpIfEqual {157}
	064 Move X2, X0
	065 Move X3, X1
	066 Move X0, X25
	067 Move X1, X2
	068 Move X2, X3
	069 Move X3, X31
	070 Call NetworkPrefabTable.GetId, X0, X1
	071 Move [X31+120], W0
	072 Add X0, X31, 120
	073 Move X1, X31
	074 Call NetworkPrefabId.get_IsValid, X0
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {158}
	079 Move X8, 0x2250000
	080 Move X8, [X8+888]
	081 NotImplemented "Instruction LDRH not yet implemented."
	082 Move W25, [X31+120]
	083 Move X0, [X8]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move X0, X25
	089 Move X1, X31
	090 Call NetworkObjectTypeId.op_Implicit, X0
	091 Move [X31+32], X0
	092 Move [X31+40], X24
	093 Move [X31+48], X23
	094 Move W9, [X22+16]
	095 Move V0, [X22]
	096 NotImplemented "Instruction SXTH not yet implemented."
	097 Or W8, W8, 0x10000
	098 Move [X31+104], W8
	099 Move [X31+108], W31
	100 Add X8, X31, 8
	101 Add X1, X31, 32
	102 Move X0, X19
	103 Move [X31+76], X21
	104 Move [X31+84], W31
	105 Move [X31+88], X20
	106 Move [X31+96], X31
	107 Move [X31+56], V0
	108 Move [X31+72], W9
	109 Move [X31+112], X31
	110 Call NetworkRunner.SpawnInternal, X0, X1
	111 Move W0, [X31+120]
	112 Move X1, X31
	113 Call NetworkObjectTypeId.op_Implicit, X0
	114 Move X1, X0
	115 Add X0, X31, 8
	116 Move X2, X31
	117 Call 0x1EB45B4
	118 Move X8, [X26+40]
	119 Move X9, [X31+168]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X20, [X31+256]
	122 Move X19, [X31+264]
	123 Move X22, [X31+240]
	124 Move X21, [X31+248]
	125 Move X24, [X31+224]
	126 Move X23, [X31+232]
	127 Move X26, [X31+208]
	128 Move X25, [X31+216]
	129 Move X30, [X31+192]
	130 Move X27, [X31+200]
	131 Move X29, [X31+176]
	132 Add X31, X31, 272
	133 Return X0
	134 Move X0, 0x224D000
	135 Move X0, [X0+1400]
	136 Call 0x1C17D08
	137 Call 0x1C17F10
	138 Move X19, X0
	139 Move X0, 0x2250000
	140 Move X0, [X0+3912]
	141 Call 0x1C17D08
	142 Move X20, X0
	143 Move X0, 0x2250000
	144 Move X0, [X0+3920]
	145 Call 0x1C17D08
	146 Move X2, X0
	147 Move X0, X19
	148 Move X1, X20
	149 Move X3, X31
	150 Call ArgumentException..ctor, X0, X1, X2
	151 Move X0, 0x2250000
	152 Move X0, [X0+3928]
	153 Call 0x1C17D08
	154 Move X1, X0
	155 Move X0, X19
	156 Call 0x1C17DEC
	157 Call 0x1C17F20
	158 NotImplemented "Instruction LDUR not yet implemented."
	159 Move X0, 0x2250000
	160 Move [X31+8], V0
	161 Move X0, [X0+864]
	162 Call 0x1C17D08
	163 Add X1, X31, 128
	164 Call 0x1C17E04
	165 Move X19, X0
	166 Move X0, 0x2250000
	167 Move X0, [X0+3896]
	168 Call 0x1C17D08
	169 Move X1, X19
	170 Move X2, X31
	171 Call String.Format, X0, X1
	172 Move X19, X0
	173 Move X0, 0x2245000
	174 Move X0, [X0+1456]
	175 Call 0x1C17D08
	176 Call 0x1C17F10
	177 Move X1, X19
	178 Move X2, X31
	179 Move X20, X0
	180 Call InvalidOperationException..ctor, X0, X1
	181 Move X0, 0x2250000
	182 Move X0, [X0+3928]
	183 Call 0x1C17D08
	184 Move X1, X0
	185 Move X0, X20
	186 Call 0x1C17DEC
	187 Call 0x3EB2B20

Method: Fusion.NetworkObject Spawn(Fusion.NetworkObjectGuid prefabGuid, System.Nullable`1<UnityEngine.Vector3> position = null, System.Nullable`1<UnityEngine.Quaternion> rotation = null, System.Nullable`1<Fusion.PlayerRef> inputAuthority = null, Fusion.NetworkRunner/OnBeforeSpawned onBeforeSpawned = null, Fusion.NetworkSpawnFlags flags = 0)

Disassembly:
	0x01EAFE24 LDR X9, [X21]
	0x01EAFE28 LDR X1, [X8]
	0x01EAFE2C LDRB W11, [X9 + 0x130]
	0x01EAFE30 LDRB W10, [X1 + 0x130]
	0x01EAFE34 CMP W11, W10
	0x01EAFE38 B.CC 0x1EAFE80
	0x01EAFE3C LDR X9, [X9 + 0xC8]
	0x01EAFE40 ADD X9, X9, X10, 0x3, LSL
	0x01EAFE44 LDUR X9, [X9 - 0x8]
	0x01EAFE48 CMP X9, X1
	0x01EAFE4C B.NE 0x1EAFE80
	0x01EAFE50 STR X21, [X19]
	0x01EAFE54 LDR X9, [X21]
	0x01EAFE58 LDR X1, [X8]
	0x01EAFE5C LDRB W10, [X9 + 0x130]
	0x01EAFE60 LDRB W8, [X1 + 0x130]
	0x01EAFE64 CMP W10, W8
	0x01EAFE68 B.CC 0x1EAFE80
	0x01EAFE6C LDR X9, [X9 + 0xC8]
	0x01EAFE70 ADD X8, X9, X8, 0x3, LSL
	0x01EAFE74 LDUR X8, [X8 - 0x8]
	0x01EAFE78 CMP X8, X1
	0x01EAFE7C B.EQ 0x1EAFEA4
	0x01EAFE80 MOV X0, X21
	0x01EAFE84 BL 0x1C171E0
	0x01EAFE88 ADRP X0, 0x2247000
	0x01EAFE8C LDR X0, [X0 + 0xBA8]
	0x01EAFE90 BL 0x1C16CF4
	0x01EAFE94 MOVZ W8, 0x1
	0x01EAFE98 STRB W8, [X22 + 0x3BF]
	0x01EAFE9C CBNZ X21, 0x1EAFE1C
	0x01EAFEA0 STR X31, [X19]
	0x01EAFEA4 MOV W0, W20
	0x01EAFEA8 LDP X20, X19, [X31 + 0xC0]
	0x01EAFEAC LDP X22, X21, [X31 + 0xB0]
	0x01EAFEB0 LDP X24, X23, [X31 + 0xA0]
	0x01EAFEB4 LDP X26, X25, [X31 + 0x90]
	0x01EAFEB8 LDP X30, X27, [X31 + 0x80]
	0x01EAFEBC ADD X31, X31, 0xD0
	0x01EAFEC0 RET
	0x01EAFEC4 ADRP X0, 0x224C000
	0x01EAFEC8 LDR X0, [X0 + 0x578]
	0x01EAFECC BL 0x1C16D08
	0x01EAFED0 BL 0x1C16F10
	0x01EAFED4 MOV X19, X0
	0x01EAFED8 ADRP X0, 0x224F000
	0x01EAFEDC LDR X0, [X0 + 0xF70]
	0x01EAFEE0 BL 0x1C16D08
	0x01EAFEE4 MOV X1, X0
	0x01EAFEE8 MOV X0, X19
	0x01EAFEEC MOV X2, X31
	0x01EAFEF0 BL 0x3314A68
	0x01EAFEF4 ADRP X0, 0x224F000
	0x01EAFEF8 LDR X0, [X0 + 0xFA0]
	0x01EAFEFC BL 0x1C16D08
	0x01EAFF00 MOV X1, X0
	0x01EAFF04 MOV X0, X19
	0x01EAFF08 BL 0x1C16DEC
	0x01EAFF0C SUB X31, X31, 0xB0
	0x01EAFF10 STP X29, X30, [X31 + 0x50]
	0x01EAFF14 STP X28, X27, [X31 + 0x60]
	0x01EAFF18 STP X26, X25, [X31 + 0x70]
	0x01EAFF1C STP X24, X23, [X31 + 0x80]
	0x01EAFF20 STP X22, X21, [X31 + 0x90]
	0x01EAFF24 STP X20, X19, [X31 + 0xA0]
	0x01EAFF28 ADRP X29, 0x252A000
	0x01EAFF2C ADRP X28, 0x2244000
	0x01EAFF30 MOV X21, X8
	0x01EAFF34 LDRB W8, [X29 + 0x394]
	0x01EAFF38 LDR X28, [X28 + 0x598]
	0x01EAFF3C MOV W19, W7
	0x01EAFF40 MOV X20, X6
	0x01EAFF44 MOV X22, X5
	0x01EAFF48 MOV X26, X4
	0x01EAFF4C MOV X23, X3
	0x01EAFF50 MOV X24, X2
	0x01EAFF54 MOV X27, X1
	0x01EAFF58 MOV X25, X0
	0x01EAFF5C TBNZ X8, 0x0, 0x1EAFF80
	0x01EAFF60 ADRP X0, 0x224F000
	0x01EAFF64 LDR X0, [X0 + 0xF08]
	0x01EAFF68 BL 0x1C16CF4
	0x01EAFF6C ADRP X0, 0x2244000
	0x01EAFF70 LDR X0, [X0 + 0x598]
	0x01EAFF74 BL 0x1C16CF4
	0x01EAFF78 MOVZ W8, 0x1
	0x01EAFF7C STRB W8, [X29 + 0x394]
	0x01EAFF80 LDR X0, [X28]
	0x01EAFF84 STR X31, [X31 + 0x48]
	0x01EAFF88 LDR W8, [X0 + 0xE0]
	0x01EAFF8C CBNZ W8, 0x1EAFF94
	0x01EAFF90 BL 0x1C16DFC
	0x01EAFF94 MOV X0, X27
	0x01EAFF98 MOV X1, X31
	0x01EAFF9C MOV X2, X31
	0x01EAFFA0 BL 0x3C3883C
	0x01EAFFA4 TBNZ X0, 0x0, 0x1EB0038
	0x01EAFFA8 CBZ X27, 0x1EB006C
	0x01EAFFAC ADRP X8, 0x224F000
	0x01EAFFB0 LDR X8, [X8 + 0xF08]
	0x01EAFFB4 ADD X1, X31, 0x48
	0x01EAFFB8 MOV X0, X27
	0x01EAFFBC LDR X2, [X8]
	0x01EAFFC0 BL 0x21E6600
	0x01EAFFC4 TBZ X0, 0x0, 0x1EB0070
	0x01EAFFC8 LDR W8, [X26 + 0x10]
	0x01EAFFCC LDR X9, [X31 + 0xB0]
	0x01EAFFD0 LDR V0, [X26]
	0x01EAFFD4 LDR X1, [X31 + 0x48]
	0x01EAFFD8 STR W8, [X31 + 0x20]
	0x01EAFFDC ADD X8, X31, 0x30
	0x01EAFFE0 ADD X4, X31, 0x10
	0x01EAFFE4 MOV X0, X25
	0x01EAFFE8 MOV X2, X24
	0x01EAFFEC MOV X3, X23
	0x01EAFFF0 MOV X5, X22
	0x01EAFFF4 MOV X6, X20
	0x01EAFFF8 MOV W7, W19
	0x01EAFFFC STR V0, [X31 + 0x1]
	0x01EB0000 STR X9, [X31]
	0x01EB0004 BL 0x1EB00CC
	0x01EB0008 LDR X8, [X31 + 0x40]
	0x01EB000C LDR V0, [X31 + 0x3]
	0x01EB0010 LDP X20, X19, [X31 + 0xA0]
	0x01EB0014 LDP X24, X23, [X31 + 0x80]
	0x01EB0018 STR X8, [X21 + 0x10]
	0x01EB001C STR V0, [X21]
	0x01EB0020 LDP X22, X21, [X31 + 0x90]
	0x01EB0024 LDP X26, X25, [X31 + 0x70]
	0x01EB0028 LDP X28, X27, [X31 + 0x60]
	0x01EB002C LDP X29, X30, [X31 + 0x50]
	0x01EB0030 ADD X31, X31, 0xB0
	0x01EB0034 RET
	0x01EB0038 ADRP X0, 0x2248000
	0x01EB003C LDR X0, [X0 + 0x528]
	0x01EB0040 BL 0x1C16D08
	0x01EB0044 BL 0x1C16F10
	0x01EB0048 MOV X19, X0
	0x01EB004C ADRP X0, 0x224E000
	0x01EB0050 LDR X0, [X0 + 0xF10]
	0x01EB0054 BL 0x1C16D08
	0x01EB0058 MOV X1, X0
	0x01EB005C MOV X0, X19
	0x01EB0060 MOV X2, X31
	0x01EB0064 BL 0x330E100
	0x01EB0068 B 0x1EB00B4
	0x01EB006C BL 0x1C16F20
	0x01EB0070 ADRP X0, 0x224B000
	0x01EB0074 LDR X0, [X0 + 0x578]
	0x01EB0078 BL 0x1C16D08

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+176], X29
	003 Move [X31+192], X30
	004 Move [X31+200], X27
	005 Move [X31+208], X26
	006 Move [X31+216], X25
	007 Move [X31+224], X24
	008 Move [X31+232], X23
	009 Move [X31+240], X22
	010 Move [X31+248], X21
	011 Move [X31+256], X20
	012 Move [X31+264], X19
	013 NotImplemented "Instruction MRS not yet implemented."
	014 Move X8, [X26+40]
	015 Move X25, 0x252B000
	016 Move X20, X7
	017 Move X21, X6
	018 Move [X31+168], X8
	019 Move W8, [X25+909]
	020 Move X22, X5
	021 Move X23, X4
	022 Move X24, X3
	023 Move X19, X0
	024 Move [X31+152], X1
	025 Move [X31+160], X2
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {35}
	030 Move X0, 0x2250000
	031 Move X0, [X0+888]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X25+909], W8
	035 NotImplemented "Instruction MOVI not yet implemented."
	036 Add X0, X31, 152
	037 Move X1, X31
	038 Move [X31+120], W31
	039 Move [X31+112], X31
	040 Move [X31+8], X31
	041 Move [X31+16], X31
	042 Move [X31+80], V0
	043 Move [X31+88], V0
	044 Move [X31+48], V0
	045 Move [X31+56], V0
	046 Move [X31+2], V0
	047 Move [X31+24], X31
	048 Call NetworkObjectGuid.get_IsValid, X0
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {127}
	053 Move X8, [X19+152]
	054 Compare X8, 0
	055 JumpIfEqual {126}
	056 Move X0, [X8+56]
	057 Compare X0, 0
	058 JumpIfEqual {126}
	059 Move X1, [X31+152]
	060 Move X2, [X31+160]
	061 Move X3, X31
	062 Call NetworkPrefabTable.GetId, X0, X1
	063 Move [X31+120], W0
	064 Add X0, X31, 120
	065 Move X1, X31
	066 Call NetworkPrefabId.get_IsValid, X0
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {150}
	071 Move X8, 0x2250000
	072 Move X8, [X8+888]
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Move W25, [X31+120]
	075 Move X0, [X8]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X0, X25
	081 Move X1, X31
	082 Call NetworkObjectTypeId.op_Implicit, X0
	083 Move [X31+32], X0
	084 Move [X31+40], X24
	085 Move [X31+48], X23
	086 Move W9, [X22+16]
	087 Move V0, [X22]
	088 NotImplemented "Instruction SXTH not yet implemented."
	089 Or W8, W8, 0x10000
	090 Move [X31+104], W8
	091 Move [X31+108], W31
	092 Add X8, X31, 8
	093 Add X1, X31, 32
	094 Move X0, X19
	095 Move [X31+76], X21
	096 Move [X31+84], W31
	097 Move [X31+88], X20
	098 Move [X31+96], X31
	099 Move [X31+56], V0
	100 Move [X31+72], W9
	101 Move [X31+112], X31
	102 Call NetworkRunner.SpawnInternal, X0, X1
	103 Move W0, [X31+120]
	104 Move X1, X31
	105 Call NetworkObjectTypeId.op_Implicit, X0
	106 Move X1, X0
	107 Add X0, X31, 8
	108 Move X2, X31
	109 Call 0x1EB45B4
	110 Move X8, [X26+40]
	111 Move X9, [X31+168]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X20, [X31+256]
	114 Move X19, [X31+264]
	115 Move X22, [X31+240]
	116 Move X21, [X31+248]
	117 Move X24, [X31+224]
	118 Move X23, [X31+232]
	119 Move X26, [X31+208]
	120 Move X25, [X31+216]
	121 Move X30, [X31+192]
	122 Move X27, [X31+200]
	123 Move X29, [X31+176]
	124 Add X31, X31, 272
	125 Return X0
	126 Call 0x1C17F20
	127 Move X0, 0x224D000
	128 Move X0, [X0+1400]
	129 Call 0x1C17D08
	130 Call 0x1C17F10
	131 Move X19, X0
	132 Move X0, 0x2250000
	133 Move X0, [X0+3912]
	134 Call 0x1C17D08
	135 Move X20, X0
	136 Move X0, 0x2250000
	137 Move X0, [X0+3936]
	138 Call 0x1C17D08
	139 Move X2, X0
	140 Move X0, X19
	141 Move X1, X20
	142 Move X3, X31
	143 Call ArgumentException..ctor, X0, X1, X2
	144 Move X0, 0x2250000
	145 Move X0, [X0+3944]
	146 Call 0x1C17D08
	147 Move X1, X0
	148 Move X0, X19
	149 Call 0x1C17DEC
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 Move X0, 0x224F000
	152 Move [X31+8], V0
	153 Move X0, [X0+848]
	154 Call 0x1C17D08
	155 Add X1, X31, 128
	156 Call 0x1C17E04
	157 Move X19, X0
	158 Move X0, 0x224F000
	159 Move X0, [X0+3896]
	160 Call 0x1C17D08
	161 Move X1, X19
	162 Move X2, X31
	163 Call String.Format, X0, X1
	164 Move X19, X0
	165 Move X0, 0x2244000
	166 Move X0, [X0+1456]
	167 Call 0x1C17D08
	168 Call 0x1C17F10
	169 Move X1, X19
	170 Move X2, X31
	171 Move X20, X0
	172 Call InvalidOperationException..ctor, X0, X1
	173 Move X0, 0x224F000
	174 Move X0, [X0+3944]
	175 Call 0x1C17D08
	176 Move X1, X0
	177 Move X0, X20
	178 Call 0x1C17DEC
	179 Call 0x3EB2B20

Method: Fusion.NetworkObject Spawn(Fusion.NetworkPrefabId typeId, System.Nullable`1<UnityEngine.Vector3> position = null, System.Nullable`1<UnityEngine.Quaternion> rotation = null, System.Nullable`1<Fusion.PlayerRef> inputAuthority = null, Fusion.NetworkRunner/OnBeforeSpawned onBeforeSpawned = null, Fusion.NetworkSpawnFlags flags = 0)

Disassembly:
	0x01EB007C BL 0x1C16F10
	0x01EB0080 MOV X19, X0
	0x01EB0084 ADRP X0, 0x224E000
	0x01EB0088 LDR X0, [X0 + 0xF18]
	0x01EB008C BL 0x1C16D08
	0x01EB0090 MOV X20, X0
	0x01EB0094 ADRP X0, 0x224E000
	0x01EB0098 LDR X0, [X0 + 0xF10]
	0x01EB009C BL 0x1C16D08
	0x01EB00A0 MOV X2, X0
	0x01EB00A4 MOV X0, X19
	0x01EB00A8 MOV X1, X20
	0x01EB00AC MOV X3, X31
	0x01EB00B0 BL 0x330E16C
	0x01EB00B4 ADRP X0, 0x224E000
	0x01EB00B8 LDR X0, [X0 + 0xFA8]
	0x01EB00BC BL 0x1C16D08
	0x01EB00C0 MOV X1, X0
	0x01EB00C4 MOV X0, X19
	0x01EB00C8 BL 0x1C16DEC
	0x01EB00CC SUB X31, X31, 0x100
	0x01EB00D0 STP X29, X30, [X31 + 0xA0]
	0x01EB00D4 STP X28, X27, [X31 + 0xB0]
	0x01EB00D8 STP X26, X25, [X31 + 0xC0]
	0x01EB00DC STP X24, X23, [X31 + 0xD0]
	0x01EB00E0 STP X22, X21, [X31 + 0xE0]
	0x01EB00E4 STP X20, X19, [X31 + 0xF0]
	0x01EB00E8 MRS X29, 0xC000
	0x01EB00EC LDR X9, [X29 + 0x28]
	0x01EB00F0 ADRP X28, 0x2529000
	0x01EB00F4 MOV W25, W7
	0x01EB00F8 MOV X22, X6
	0x01EB00FC STR X9, [X31 + 0x98]
	0x01EB0100 LDRB W9, [X28 + 0x395]
	0x01EB0104 MOV X23, X5
	0x01EB0108 MOV X24, X4
	0x01EB010C MOV X26, X3
	0x01EB0110 MOV X27, X2
	0x01EB0114 MOV X19, X1
	0x01EB0118 MOV X20, X0
	0x01EB011C MOV X21, X8
	0x01EB0120 TBNZ X9, 0x0, 0x1EB0150
	0x01EB0124 ADRP X0, 0x224E000
	0x01EB0128 LDR X0, [X0 + 0xF28]
	0x01EB012C BL 0x1C16CF4
	0x01EB0130 ADRP X0, 0x2246000
	0x01EB0134 LDR X0, [X0 + 0x398]
	0x01EB0138 BL 0x1C16CF4
	0x01EB013C ADRP X0, 0x224E000
	0x01EB0140 LDR X0, [X0 + 0x378]
	0x01EB0144 BL 0x1C16CF4
	0x01EB0148 MOVZ W8, 0x1
	0x01EB014C STRB W8, [X28 + 0x395]
	0x01EB0150 MOVI V0.2D, 0x0
	0x01EB0154 STR X31, [X31 + 0x70]
	0x01EB0158 STR W31, [X31 + 0x68]
	0x01EB015C STR X31, [X31 + 0x60]
	0x01EB0160 STP V0, V0, [X31 + 0x40]
	0x01EB0164 STP V0, V0, [X31 + 0x20]
	0x01EB0168 STR V0, [X31 + 0x1]
	0x01EB016C CBZ X19, 0x1EB0334
	0x01EB0170 ADRP X28, 0x224E000
	0x01EB0174 LDR X28, [X28 + 0x378]
	0x01EB0178 LDUR X8, [X19 + 0x64]
	0x01EB017C LDR X0, [X28]
	0x01EB0180 STR X8, [X31 + 0x78]
	0x01EB0184 LDR W8, [X0 + 0xE0]
	0x01EB0188 CBNZ W8, 0x1EB0190
	0x01EB018C BL 0x1C16DFC
	0x01EB0190 ADD X0, X31, 0x78
	0x01EB0194 MOV X1, X31
	0x01EB0198 BL 0x1E96160
	0x01EB019C TBNZ X0, 0x0, 0x1EB021C
	0x01EB01A0 ADRP X8, 0x224E000
	0x01EB01A4 LDR X8, [X8 + 0xF28]
	0x01EB01A8 ADD X1, X31, 0x70
	0x01EB01AC MOV X0, X19
	0x01EB01B0 LDR X2, [X8]
	0x01EB01B4 BL 0x21A4990
	0x01EB01B8 TBZ X0, 0x0, 0x1EB037C
	0x01EB01BC LDR X9, [X20 + 0x98]
	0x01EB01C0 CBZ X9, 0x1EB0398
	0x01EB01C4 LDR X8, [X31 + 0x70]
	0x01EB01C8 CBZ X8, 0x1EB039C
	0x01EB01CC LDR X0, [X9 + 0x38]
	0x01EB01D0 CBZ X0, 0x1EB039C
	0x01EB01D4 LDP X1, X2, [X8 + 0x20]
	0x01EB01D8 MOV X3, X31
	0x01EB01DC BL 0x1E9AB04
	0x01EB01E0 STR W0, [X31 + 0x68]
	0x01EB01E4 ADD X0, X31, 0x68
	0x01EB01E8 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], X30
	003 Move [X31+144], X26
	004 Move [X31+152], X25
	005 Move [X31+160], X24
	006 Move [X31+168], X23
	007 Move [X31+176], X22
	008 Move [X31+184], X21
	009 Move [X31+192], X20
	010 Move [X31+200], X19
	011 Move X26, 0x252A000
	012 Move W8, [X26+910]
	013 Move W24, W7
	014 Move X20, X6
	015 Move X21, X5
	016 Move X22, X4
	017 Move X23, X3
	018 Move X25, X2
	019 Move X19, X0
	020 Move [X31+136], W1
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x224F000
	026 Move X0, [X0+888]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X26+910], W8
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 Add X0, X31, 136
	032 Move X1, X31
	033 Move [X31+112], X31
	034 Move [X31+8], X31
	035 Move [X31+16], X31
	036 Move [X31+80], V0
	037 Move [X31+88], V0
	038 Move [X31+48], V0
	039 Move [X31+56], V0
	040 Move [X31+2], V0
	041 Move [X31+24], X31
	042 Call NetworkPrefabId.get_IsValid, X0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {96}
	047 Move X8, 0x224F000
	048 Move X8, [X8+888]
	049 Move W26, [X31+136]
	050 Move X0, [X8]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X26
	056 Move X1, X31
	057 Call NetworkObjectTypeId.op_Implicit, X0
	058 Move [X31+32], X0
	059 Move [X31+40], X25
	060 Move [X31+48], X23
	061 Move W9, [X22+16]
	062 Move V0, [X22]
	063 NotImplemented "Instruction SXTH not yet implemented."
	064 Or W8, W8, 0x10000
	065 Move [X31+104], W8
	066 Move [X31+108], W31
	067 Add X8, X31, 8
	068 Add X1, X31, 32
	069 Move X0, X19
	070 Move [X31+76], X21
	071 Move [X31+84], W31
	072 Move [X31+88], X20
	073 Move [X31+96], X31
	074 Move [X31+56], V0
	075 Move [X31+72], W9
	076 Move [X31+112], X31
	077 Call NetworkRunner.SpawnInternal, X0, X1
	078 Move W0, [X31+136]
	079 Move X1, X31
	080 Call NetworkObjectTypeId.op_Implicit, X0
	081 Move X1, X0
	082 Add X0, X31, 8
	083 Move X2, X31
	084 Call 0x1EB45B4
	085 Move X20, [X31+192]
	086 Move X19, [X31+200]
	087 Move X22, [X31+176]
	088 Move X21, [X31+184]
	089 Move X24, [X31+160]
	090 Move X23, [X31+168]
	091 Move X26, [X31+144]
	092 Move X25, [X31+152]
	093 Move X30, [X31+128]
	094 Add X31, X31, 208
	095 Return X0
	096 Move X0, 0x224C000
	097 Move X0, [X0+1400]
	098 Call 0x1C17D08
	099 Call 0x1C17F10
	100 Move X19, X0
	101 Move X0, 0x224F000
	102 Move X0, [X0+3952]
	103 Call 0x1C17D08
	104 Move X1, X0
	105 Move X0, X19
	106 Move X2, X31
	107 Call ArgumentException..ctor, X0, X1
	108 Move X0, 0x224F000
	109 Move X0, [X0+3960]
	110 Call 0x1C17D08
	111 Move X1, X0
	112 Move X0, X19
	113 Call 0x1C17DEC

Method: Fusion.NetworkSpawnStatus TrySpawn(T prefab, out T obj, System.Nullable`1<UnityEngine.Vector3> position = null, System.Nullable`1<UnityEngine.Quaternion> rotation = null, System.Nullable`1<Fusion.PlayerRef> inputAuthority = null, Fusion.NetworkRunner/OnBeforeSpawned onBeforeSpawned = null, Fusion.NetworkSpawnFlags flags = 0)

Disassembly:
	0x0222D434 TBNZ X0, 0x0, 0x222D44C
	0x0222D438 MOV X0, X22
	0x0222D43C LDP X20, X19, [X31 + 0x20]
	0x0222D440 LDP X22, X21, [X31 + 0x10]
	0x0222D444 LDR X30, [X31], #0x30
	0x0222D448 RET
	0x0222D44C ADRP X0, 0x1EEF000
	0x0222D450 LDR X0, [X0 + 0x1D0]
	0x0222D454 BL 0x1C16D08
	0x0222D458 BL 0x1C16F10
	0x0222D45C MOV X20, X0
	0x0222D460 ADRP X0, 0x1EEF000
	0x0222D464 LDR X0, [X0 + 0x1D8]
	0x0222D468 BL 0x1C16D08
	0x0222D46C MOV X1, X0
	0x0222D470 MOV X0, X20
	0x0222D474 MOV X2, X31
	0x0222D478 BL 0x3C363D0
	0x0222D47C MOV X0, X20
	0x0222D480 MOV X1, X19
	0x0222D484 BL 0x1C16DEC
	0x0222D488 STP X30, X21, [X31 - 0x20]!
	0x0222D48C STP X20, X19, [X31 + 0x10]
	0x0222D490 LDR X8, [X2 + 0x38]
	0x0222D494 MOV X20, X2
	0x0222D498 MOV X19, X1
	0x0222D49C MOV X21, X0
	0x0222D4A0 CBNZ X8, 0x222D4C0
	0x0222D4A4 ADRP X0, 0x1EC6000
	0x0222D4A8 LDR X0, [X0 + 0x598]
	0x0222D4AC BL 0x1C16CF4
	0x0222D4B0 LDR X8, [X20 + 0x38]
	0x0222D4B4 CBNZ X8, 0x222D4C0
	0x0222D4B8 MOV X0, X20
	0x0222D4BC BL 0x1C5C6E0
	0x0222D4C0 ADRP X8, 0x1EC6000
	0x0222D4C4 LDR X8, [X8 + 0x598]
	0x0222D4C8 LDR X0, [X8]
	0x0222D4CC LDR W8, [X0 + 0xE0]
	0x0222D4D0 CBNZ W8, 0x222D4D8
	0x0222D4D4 BL 0x1C16DFC
	0x0222D4D8 LDR X8, [X20 + 0x38]
	0x0222D4DC MOV X1, X19
	0x0222D4E0 LDP X20, X19, [X31 + 0x10]
	0x0222D4E4 MOV X0, X21
	0x0222D4E8 LDR X3, [X8 + 0x8]
	0x0222D4EC MOV W2, W31
	0x0222D4F0 LDP X30, X21, [X31], #0x20
	0x0222D4F4 B 0x222D4F8
	0x0222D4F8 STR X30, [X31 - 0x30]!
	0x0222D4FC STP X22, X21, [X31 + 0x10]
	0x0222D500 STP X20, X19, [X31 + 0x20]
	0x0222D504 LDR X8, [X3 + 0x38]
	0x0222D508 MOV X19, X3
	0x0222D50C MOV W21, W2
	0x0222D510 MOV X20, X1
	0x0222D514 MOV X22, X0
	0x0222D518 CBNZ X8, 0x222D538
	0x0222D51C ADRP X0, 0x1EC6000
	0x0222D520 LDR X0, [X0 + 0x598]
	0x0222D524 BL 0x1C16CF4
	0x0222D528 LDR X8, [X19 + 0x38]
	0x0222D52C CBNZ X8, 0x222D538
	0x0222D530 MOV X0, X19
	0x0222D534 BL 0x1C5C6E0
	0x0222D538 ADRP X8, 0x1EC6000
	0x0222D53C LDR X8, [X8 + 0x598]
	0x0222D540 LDR X0, [X8]
	0x0222D544 LDR W8, [X0 + 0xE0]
	0x0222D548 CBNZ W8, 0x222D550
	0x0222D54C BL 0x1C16DFC
	0x0222D550 AND W2, W21, 0x1
	0x0222D554 MOV X0, X22
	0x0222D558 MOV X1, X20
	0x0222D55C MOV X3, X31
	0x0222D560 BL 0x3C392C0
	0x0222D564 LDR X8, [X19 + 0x38]
	0x0222D568 MOV X20, X0
	0x0222D56C LDR X19, [X8]
	0x0222D570 LDRB W8, [X19 + 0x135]
	0x0222D574 TBNZ X8, 0x0, 0x222D584
	0x0222D578 MOV X0, X19
	0x0222D57C BL 0x1C5C684
	0x0222D580 MOV X19, X0
	0x0222D584 CBZ X20, 0x222D5A4
	0x0222D588 MOV X0, X20
	0x0222D58C MOV X1, X19
	0x0222D590 BL 0x1C16E00
	0x0222D594 CBNZ X0, 0x222D5A8
	0x0222D598 MOV X0, X20
	0x0222D59C MOV X1, X19
	0x0222D5A0 BL 0x1C171E0
	0x0222D5A4 MOV X0, X31
	0x0222D5A8 LDP X20, X19, [X31 + 0x20]
	0x0222D5AC LDP X22, X21, [X31 + 0x10]
	0x0222D5B0 LDR X30, [X31], #0x30
	0x0222D5B4 RET
	0x0222D5B8 STR D14, [X31 - 0x50]!
	0x0222D5BC STP D13, D12, [X31 + 0x8]
	0x0222D5C0 STP D11, D10, [X31 + 0x18]
	0x0222D5C4 STP D9, D8, [X31 + 0x28]
	0x0222D5C8 STR X30, [X31 + 0x38]
	0x0222D5CC STP X20, X19, [X31 + 0x40]
	0x0222D5D0 LDR X8, [X1 + 0x38]
	0x0222D5D4 MOV X19, X1
	0x0222D5D8 MOV V8.16B, V6.16B
	0x0222D5DC MOV V9.16B, V5.16B
	0x0222D5E0 MOV V10.16B, V4.16B
	0x0222D5E4 MOV V11.16B, V3.16B
	0x0222D5E8 MOV V12.16B, V2.16B
	0x0222D5EC MOV V13.16B, V1.16B
	0x0222D5F0 MOV V14.16B, V0.16B

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X30
	003 Move [X31+64], X28
	004 Move [X31+72], X27
	005 Move [X31+80], X26
	006 Move [X31+88], X25
	007 Move [X31+96], X24
	008 Move [X31+104], X23
	009 Move [X31+112], X22
	010 Move [X31+120], X21
	011 Move [X31+128], X20
	012 Move [X31+136], X19
	013 Move X19, [X31+152]
	014 Move X21, X7
	015 Move X22, X6
	016 Move X26, X5
	017 Move X8, [X19+56]
	018 Move X23, X4
	019 Move X24, X3
	020 Move X20, X2
	021 Move X27, X1
	022 Move X25, X0
	023 Compare X8, 0
	024 JumpIfNotEqual {33}
	025 Move X0, 0x1EF0000
	026 Move X0, [X0+424]
	027 Call 0x1C17CF4
	028 Move X8, [X19+56]
	029 Compare X8, 0
	030 JumpIfNotEqual {33}
	031 Move X0, X19
	032 Call 0x1C5D6E0
	033 Move [X31+56], X31
	034 Move [X31+40], X31
	035 Compare X27, 0
	036 JumpIfEqual {98}
	037 Move X8, 0x1EF0000
	038 Move X8, [X8+424]
	039 Move X28, [X8]
	040 Move X8, [X28+56]
	041 Compare X8, 0
	042 JumpIfNotEqual {45}
	043 Move X0, X28
	044 Call 0x1C5D6E0
	045 Move X0, X27
	046 Move X1, X31
	047 Call Component.get_gameObject, X0
	048 Compare X0, 0
	049 JumpIfEqual {110}
	050 Move X8, [X28+56]
	051 Add X1, X31, 56
	052 Move X2, [X8+8]
	053 Call 0x21E7600, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {111}
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Move V0, [X26]
	060 Move W9, [X26+16]
	061 Move X1, [X31+56]
	062 Add X2, X31, 40
	063 Add X5, X31, 16
	064 Move X0, X25
	065 Move X3, X24
	066 Move X4, X23
	067 Move X6, X22
	068 Move X7, X21
	069 Move [X31+1], V0
	070 Move [X31+32], W9
	071 Move [X31+8], X31
	072 NotImplemented "Instruction STRH not yet implemented."
	073 Call NetworkRunner.TrySpawn, X0, X1, X2, X3, X4, X5, X6, X7
	074 Move [X20], X31
	075 Move X8, [X31+40]
	076 Move W21, W0
	077 Compare X8, 0
	078 JumpIfEqual {84}
	079 Move X9, [X19+56]
	080 Move X0, X8
	081 Move X1, X20
	082 Move X2, [X9+16]
	083 Call 0x21A5990, X0, X1
	084 Move W0, W21
	085 Move X20, [X31+128]
	086 Move X19, [X31+136]
	087 Move X22, [X31+112]
	088 Move X21, [X31+120]
	089 Move X24, [X31+96]
	090 Move X23, [X31+104]
	091 Move X26, [X31+80]
	092 Move X25, [X31+88]
	093 Move X28, [X31+64]
	094 Move X27, [X31+72]
	095 Move X30, [X31+48]
	096 Add X31, X31, 144
	097 Return X0
	098 Move X0, 0x1ECC000
	099 Move X0, [X0+1320]
	100 Call 0x1C17D08
	101 Call 0x1C17F10
	102 Move X20, X0
	103 Move X0, 0x1ED2000
	104 Move X0, [X0+3856]
	105 Call 0x1C17D08
	106 Move X1, X0
	107 Move X0, X20
	108 Move X2, X31
	109 Call ArgumentNullException..ctor, X0, X1
	110 Call 0x1C17F20
	111 Move X0, 0x1ECF000
	112 Move X0, [X0+1400]
	113 Call 0x1C17D08
	114 Call 0x1C17F10
	115 Move X20, X0
	116 Move X0, 0x1ED2000
	117 Move X0, [X0+3864]
	118 Call 0x1C17D08
	119 Move X21, X0
	120 Move X0, 0x1ED2000
	121 Move X0, [X0+3856]
	122 Call 0x1C17D08
	123 Move X2, X0
	124 Move X0, X20
	125 Move X1, X21
	126 Move X3, X31
	127 Call ArgumentException..ctor, X0, X1, X2
	128 Move X0, X20
	129 Move X1, X19
	130 Call 0x1C17DEC

Method: Fusion.NetworkSpawnStatus TrySpawn(UnityEngine.GameObject prefab, out Fusion.NetworkObject obj, System.Nullable`1<UnityEngine.Vector3> position = null, System.Nullable`1<UnityEngine.Quaternion> rotation = null, System.Nullable`1<Fusion.PlayerRef> inputAuthority = null, Fusion.NetworkRunner/OnBeforeSpawned onBeforeSpawned = null, Fusion.NetworkSpawnFlags flags = 0)

Disassembly:
	0x01EB01EC BL 0x1E991E8
	0x01EB01F0 TBZ X0, 0x0, 0x1EB03A0
	0x01EB01F4 LDR X0, [X28]
	0x01EB01F8 LDR W28, [X31 + 0x68]
	0x01EB01FC LDR W8, [X0 + 0xE0]
	0x01EB0200 CBNZ W8, 0x1EB0208
	0x01EB0204 BL 0x1C16DFC
	0x01EB0208 MOV X0, X28
	0x01EB020C MOV X1, X31
	0x01EB0210 BL 0x1E99830
	0x01EB0214 STR X0, [X31 + 0x78]
	0x01EB0218 STUR X0, [X19 + 0x64]
	0x01EB021C LDR X28, [X31 + 0x100]
	0x01EB0220 MOV X0, X20
	0x01EB0224 BL 0x1E9D0AC
	0x01EB0228 TBZ X0, 0x0, 0x1EB0260
	0x01EB022C LDR X8, [X19 + 0x20]
	0x01EB0230 STR X20, [X31 + 0x8]
	0x01EB0234 MOV X20, X24
	0x01EB0238 MOV X24, X21
	0x01EB023C MOV X21, X29
	0x01EB0240 MOV X29, X27
	0x01EB0244 MOV X27, X26
	0x01EB0248 MOV W26, W25
	0x01EB024C MOV X25, X23
	0x01EB0250 MOV X23, X22
	0x01EB0254 CBZ X8, 0x1EB0268
	0x01EB0258 LDR W22, [X8]
	0x01EB025C B 0x1EB026C
	0x01EB0260 MOV X8, X31
	0x01EB0264 B 0x1EB02B0
	0x01EB0268 MOV W22, W31
	0x01EB026C ADRP X8, 0x2246000
	0x01EB0270 LDR X8, [X8 + 0x398]
	0x01EB0274 LDR X0, [X8]
	0x01EB0278 LDR W8, [X0 + 0xE0]
	0x01EB027C CBNZ W8, 0x1EB0284
	0x01EB0280 BL 0x1C16DFC
	0x01EB0284 CMP W22, 0x0
	0x01EB0288 MOV X22, X23
	0x01EB028C MOV X23, X25
	0x01EB0290 MOV W25, W26
	0x01EB0294 MOV X26, X27
	0x01EB0298 MOV X27, X29
	0x01EB029C MOV X29, X21
	0x01EB02A0 MOV X21, X24
	0x01EB02A4 MOV X24, X20
	0x01EB02A8 LDR X20, [X31 + 0x8]
	0x01EB02AC CSEL X8, X31, X19, EQ
	0x01EB02B0 LDR X9, [X31 + 0x78]
	0x01EB02B4 STP X27, X26, [X31 + 0x18]
	0x01EB02B8 SXTH W10, W25
	0x01EB02BC ADD X1, X31, 0x10
	0x01EB02C0 STR X9, [X31 + 0x10]
	0x01EB02C4 LDR W9, [X24 + 0x10]
	0x01EB02C8 LDR V0, [X24]
	0x01EB02CC STR X8, [X31 + 0x60]
	0x01EB02D0 ADD X8, X31, 0x80
	0x01EB02D4 MOV X0, X20
	0x01EB02D8 STUR X23, [X31 + 0x3C]
	0x01EB02DC STR W31, [X31 + 0x44]
	0x01EB02E0 STP X22, X28, [X31 + 0x48]
	0x01EB02E4 STP W10, W31, [X31 + 0x58]
	0x01EB02E8 STUR V0, [X31 + 0x28]
	0x01EB02EC STR W9, [X31 + 0x38]
	0x01EB02F0 BL 0x1EAB01C
	0x01EB02F4 LDR X8, [X31 + 0x90]
	0x01EB02F8 LDR V0, [X31 + 0x8]
	0x01EB02FC STR X8, [X21 + 0x10]
	0x01EB0300 STR V0, [X21]
	0x01EB0304 LDR X8, [X29 + 0x28]
	0x01EB0308 LDR X9, [X31 + 0x98]
	0x01EB030C CMP X8, X9
	0x01EB0310 B.NE 0x1EB0424
	0x01EB0314 LDP X20, X19, [X31 + 0xF0]
	0x01EB0318 LDP X22, X21, [X31 + 0xE0]
	0x01EB031C LDP X24, X23, [X31 + 0xD0]
	0x01EB0320 LDP X26, X25, [X31 + 0xC0]
	0x01EB0324 LDP X28, X27, [X31 + 0xB0]
	0x01EB0328 LDP X29, X30, [X31 + 0xA0]
	0x01EB032C ADD X31, X31, 0x100
	0x01EB0330 RET
	0x01EB0334 ADRP X0, 0x2248000
	0x01EB0338 LDR X0, [X0 + 0x528]
	0x01EB033C BL 0x1C16D08
	0x01EB0340 BL 0x1C16F10
	0x01EB0344 MOV X19, X0
	0x01EB0348 ADRP X0, 0x224E000
	0x01EB034C LDR X0, [X0 + 0xF10]
	0x01EB0350 BL 0x1C16D08
	0x01EB0354 MOV X1, X0
	0x01EB0358 MOV X0, X19
	0x01EB035C MOV X2, X31
	0x01EB0360 BL 0x330E100
	0x01EB0364 ADRP X0, 0x224E000
	0x01EB0368 LDR X0, [X0 + 0xFB0]
	0x01EB036C BL 0x1C16D08
	0x01EB0370 MOV X1, X0
	0x01EB0374 MOV X0, X19
	0x01EB0378 BL 0x1C16DEC
	0x01EB037C ADRP X0, 0x224E000
	0x01EB0380 LDR X0, [X0 + 0xF38]
	0x01EB0384 BL 0x1C16D08
	0x01EB0388 MOV X1, X19
	0x01EB038C MOV X2, X31
	0x01EB0390 BL 0x321EFD0

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X30
	003 Move [X31+64], X28
	004 Move [X31+72], X27
	005 Move [X31+80], X26
	006 Move [X31+88], X25
	007 Move [X31+96], X24
	008 Move [X31+104], X23
	009 Move [X31+112], X22
	010 Move [X31+120], X21
	011 Move [X31+128], X20
	012 Move [X31+136], X19
	013 Move X28, 0x252A000
	014 Move X27, 0x2244000
	015 Move W8, [X28+911]
	016 Move X27, [X27+1432]
	017 Move X19, X7
	018 Move X20, X6
	019 Move X25, X5
	020 Move X21, X4
	021 Move X22, X3
	022 Move X23, X2
	023 Move X26, X1
	024 Move X24, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {37}
	029 Move X0, 0x224F000
	030 Move X0, [X0+3848]
	031 Call 0x1C17CF4
	032 Move X0, 0x2244000
	033 Move X0, [X0+1432]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X28+911], W8
	037 Move X0, [X27]
	038 Move [X31+56], X31
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X26
	044 Move X1, X31
	045 Move X2, X31
	046 Call Object.op_Equality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {91}
	051 Compare X26, 0
	052 JumpIfEqual {103}
	053 Move X8, 0x224F000
	054 Move X8, [X8+3848]
	055 Add X1, X31, 56
	056 Move X0, X26
	057 Move X2, [X8]
	058 Call 0x21E7600, X0, X1
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {104}
	063 NotImplemented "Instruction LDRH not yet implemented."
	064 Move V0, [X25]
	065 Move W9, [X25+16]
	066 Move X1, [X31+56]
	067 Add X5, X31, 16
	068 Move X0, X24
	069 Move X2, X23
	070 Move X3, X22
	071 Move X4, X21
	072 Move X6, X20
	073 Move X7, X19
	074 Move [X31+1], V0
	075 Move [X31+32], W9
	076 NotImplemented "Instruction STRH not yet implemented."
	077 Call NetworkRunner.TrySpawn, X0, X1, X2, X3, X4, X5, X6, X7
	078 Move X20, [X31+128]
	079 Move X19, [X31+136]
	080 Move X22, [X31+112]
	081 Move X21, [X31+120]
	082 Move X24, [X31+96]
	083 Move X23, [X31+104]
	084 Move X26, [X31+80]
	085 Move X25, [X31+88]
	086 Move X28, [X31+64]
	087 Move X27, [X31+72]
	088 Move X30, [X31+48]
	089 Add X31, X31, 144
	090 Return X0
	091 Move X0, 0x2249000
	092 Move X0, [X0+1320]
	093 Call 0x1C17D08
	094 Call 0x1C17F10
	095 Move X19, X0
	096 Move X0, 0x224F000
	097 Move X0, [X0+3856]
	098 Call 0x1C17D08
	099 Move X1, X0
	100 Move X0, X19
	101 Move X2, X31
	102 Call ArgumentNullException..ctor, X0, X1
	103 Call 0x1C17F20
	104 Move X0, 0x224C000
	105 Move X0, [X0+1400]
	106 Call 0x1C17D08
	107 Call 0x1C17F10
	108 Move X19, X0
	109 Move X0, 0x224F000
	110 Move X0, [X0+3864]
	111 Call 0x1C17D08
	112 Move X20, X0
	113 Move X0, 0x224F000
	114 Move X0, [X0+3856]
	115 Call 0x1C17D08
	116 Move X2, X0
	117 Move X0, X19
	118 Move X1, X20
	119 Move X3, X31
	120 Call ArgumentException..ctor, X0, X1, X2
	121 Move X0, 0x224F000
	122 Move X0, [X0+3968]
	123 Call 0x1C17D08
	124 Move X1, X0
	125 Move X0, X19
	126 Call 0x1C17DEC

Method: Fusion.NetworkSpawnStatus TrySpawn(Fusion.NetworkObject prefab, out Fusion.NetworkObject obj, System.Nullable`1<UnityEngine.Vector3> position = null, System.Nullable`1<UnityEngine.Quaternion> rotation = null, System.Nullable`1<Fusion.PlayerRef> inputAuthority = null, Fusion.NetworkRunner/OnBeforeSpawned onBeforeSpawned = null, Fusion.NetworkSpawnFlags flags = 0)

Disassembly:
	0x01EB0394 B 0x1EB03E8
	0x01EB0398 LDR X8, [X31 + 0x70]
	0x01EB039C BL 0x1C16F20
	0x01EB03A0 LDR X20, [X31 + 0x70]
	0x01EB03A4 MOV X0, X20
	0x01EB03A8 BL 0x19903C0
	0x01EB03AC LDR V0, [X20 + 0x2]
	0x01EB03B0 ADRP X0, 0x224E000
	0x01EB03B4 STR V0, [X31 + 0x8]
	0x01EB03B8 LDR X0, [X0 + 0x350]
	0x01EB03BC BL 0x1C16D08
	0x01EB03C0 ADD X1, X31, 0x80
	0x01EB03C4 BL 0x1C16E04
	0x01EB03C8 MOV X20, X0
	0x01EB03CC ADRP X0, 0x224E000
	0x01EB03D0 LDR X0, [X0 + 0xF40]
	0x01EB03D4 BL 0x1C16D08
	0x01EB03D8 MOV X1, X19
	0x01EB03DC MOV X2, X20
	0x01EB03E0 MOV X3, X31
	0x01EB03E4 BL 0x3227BD4
	0x01EB03E8 MOV X19, X0
	0x01EB03EC ADRP X0, 0x2243000
	0x01EB03F0 LDR X0, [X0 + 0x5B0]
	0x01EB03F4 BL 0x1C16D08
	0x01EB03F8 BL 0x1C16F10
	0x01EB03FC MOV X1, X19
	0x01EB0400 MOV X2, X31
	0x01EB0404 MOV X20, X0
	0x01EB0408 BL 0x337DF1C
	0x01EB040C ADRP X0, 0x224E000
	0x01EB0410 LDR X0, [X0 + 0xFB0]
	0x01EB0414 BL 0x1C16D08
	0x01EB0418 MOV X1, X0
	0x01EB041C MOV X0, X20
	0x01EB0420 BL 0x1C16DEC
	0x01EB0424 BL 0x3EB1B20
	0x01EB0428 SUB X31, X31, 0x100
	0x01EB042C STP X29, X30, [X31 + 0xA0]
	0x01EB0430 STP X28, X27, [X31 + 0xB0]
	0x01EB0434 STP X26, X25, [X31 + 0xC0]
	0x01EB0438 STP X24, X23, [X31 + 0xD0]
	0x01EB043C STP X22, X21, [X31 + 0xE0]
	0x01EB0440 STP X20, X19, [X31 + 0xF0]
	0x01EB0444 MRS X27, 0xC000
	0x01EB0448 MOV X19, X8
	0x01EB044C LDR X8, [X27 + 0x28]
	0x01EB0450 ADRP X26, 0x2529000
	0x01EB0454 MOV X21, X7
	0x01EB0458 MOV X22, X6
	0x01EB045C STR X8, [X31 + 0x98]
	0x01EB0460 LDRB W8, [X26 + 0x396]
	0x01EB0464 MOV X23, X5
	0x01EB0468 MOV X24, X4
	0x01EB046C MOV X25, X3
	0x01EB0470 MOV X20, X0
	0x01EB0474 STP X1, X2, [X31 + 0x88]
	0x01EB0478 TBNZ X8, 0x0, 0x1EB0490
	0x01EB047C ADRP X0, 0x224E000
	0x01EB0480 LDR X0, [X0 + 0x378]
	0x01EB0484 BL 0x1C16CF4
	0x01EB0488 MOVZ W8, 0x1
	0x01EB048C STRB W8, [X26 + 0x396]
	0x01EB0490 MOVI V0.2D, 0x0
	0x01EB0494 ADD X0, X31, 0x88
	0x01EB0498 MOV X1, X31
	0x01EB049C STR W31, [X31 + 0x68]
	0x01EB04A0 STR X31, [X31 + 0x60]
	0x01EB04A4 STP V0, V0, [X31 + 0x40]
	0x01EB04A8 STP V0, V0, [X31 + 0x20]
	0x01EB04AC STR V0, [X31 + 0x1]
	0x01EB04B0 BL 0x1E9553C
	0x01EB04B4 TBZ X0, 0x0, 0x1EB05BC
	0x01EB04B8 LDR X8, [X20 + 0x98]
	0x01EB04BC CBZ X8, 0x1EB04C8
	0x01EB04C0 LDR X26, [X8 + 0x38]
	0x01EB04C4 B 0x1EB04CC
	0x01EB04C8 MOV X26, X31
	0x01EB04CC LDP X0, X1, [X31 + 0x88]
	0x01EB04D0 MOV X2, X31
	0x01EB04D4 BL 0x1E95910
	0x01EB04D8 CBZ X26, 0x1EB0618
	0x01EB04DC MOV X2, X0
	0x01EB04E0 MOV X3, X1
	0x01EB04E4 MOV X0, X26
	0x01EB04E8 MOV X1, X2
	0x01EB04EC MOV X2, X3
	0x01EB04F0 MOV X3, X31
	0x01EB04F4 BL 0x1E9AB04
	0x01EB04F8 STR W0, [X31 + 0x68]
	0x01EB04FC ADD X0, X31, 0x68
	0x01EB0500 MOV X1, X31
	0x01EB0504 BL 0x1E991E8
	0x01EB0508 TBZ X0, 0x0, 0x1EB061C
	0x01EB050C ADRP X8, 0x224E000
	0x01EB0510 LDR X8, [X8 + 0x378]
	0x01EB0514 LDR X28, [X31 + 0x108]
	0x01EB0518 LDRH W29, [X31 + 0x100]
	0x01EB051C LDR W26, [X31 + 0x68]
	0x01EB0520 LDR X0, [X8]
	0x01EB0524 LDR W8, [X0 + 0xE0]
	0x01EB0528 CBNZ W8, 0x1EB0530
	0x01EB052C BL 0x1C16DFC
	0x01EB0530 MOV X0, X26
	0x01EB0534 MOV X1, X31
	0x01EB0538 BL 0x1E99830
	0x01EB053C STP X0, X25, [X31 + 0x10]
	0x01EB0540 STR X24, [X31 + 0x20]
	0x01EB0544 LDR W9, [X23 + 0x10]
	0x01EB0548 LDR V0, [X23]
	0x01EB054C SXTH W8, W29
	0x01EB0550 STP W8, W31, [X31 + 0x58]
	0x01EB0554 ADD X8, X31, 0x70
	0x01EB0558 ADD X1, X31, 0x10
	0x01EB055C MOV X0, X20
	0x01EB0560 STUR X22, [X31 + 0x3C]
	0x01EB0564 STR W31, [X31 + 0x44]
	0x01EB0568 STP X21, X28, [X31 + 0x48]
	0x01EB056C STUR V0, [X31 + 0x28]
	0x01EB0570 STR W9, [X31 + 0x38]
	0x01EB0574 STR X31, [X31 + 0x60]
	0x01EB0578 BL 0x1EAB01C
	0x01EB057C LDR X8, [X31 + 0x80]
	0x01EB0580 LDR V0, [X31 + 0x7]
	0x01EB0584 STR X8, [X19 + 0x10]
	0x01EB0588 STR V0, [X19]
	0x01EB058C LDR X8, [X27 + 0x28]
	0x01EB0590 LDR X9, [X31 + 0x98]
	0x01EB0594 CMP X8, X9
	0x01EB0598 B.NE 0x1EB0690
	0x01EB059C LDP X20, X19, [X31 + 0xF0]
	0x01EB05A0 LDP X22, X21, [X31 + 0xE0]
	0x01EB05A4 LDP X24, X23, [X31 + 0xD0]
	0x01EB05A8 LDP X26, X25, [X31 + 0xC0]
	0x01EB05AC LDP X28, X27, [X31 + 0xB0]
	0x01EB05B0 LDP X29, X30, [X31 + 0xA0]
	0x01EB05B4 ADD X31, X31, 0x100
	0x01EB05B8 RET
	0x01EB05BC ADRP X0, 0x224B000
	0x01EB05C0 LDR X0, [X0 + 0x578]
	0x01EB05C4 BL 0x1C16D08
	0x01EB05C8 BL 0x1C16F10
	0x01EB05CC MOV X19, X0
	0x01EB05D0 ADRP X0, 0x224E000
	0x01EB05D4 LDR X0, [X0 + 0xF48]
	0x01EB05D8 BL 0x1C16D08
	0x01EB05DC MOV X20, X0
	0x01EB05E0 ADRP X0, 0x224E000
	0x01EB05E4 LDR X0, [X0 + 0xF50]
	0x01EB05E8 BL 0x1C16D08
	0x01EB05EC MOV X2, X0
	0x01EB05F0 MOV X0, X19
	0x01EB05F4 MOV X1, X20
	0x01EB05F8 MOV X3, X31
	0x01EB05FC BL 0x330E16C
	0x01EB0600 ADRP X0, 0x224E000
	0x01EB0604 LDR X0, [X0 + 0xFB8]
	0x01EB0608 BL 0x1C16D08
	0x01EB060C MOV X1, X0
	0x01EB0610 MOV X0, X19
	0x01EB0614 BL 0x1C16DEC
	0x01EB0618 BL 0x1C16F20
	0x01EB061C LDUR V0, [X31 + 0x88]
	0x01EB0620 ADRP X0, 0x224E000
	0x01EB0624 STR V0, [X31 + 0x7]
	0x01EB0628 LDR X0, [X0 + 0x360]
	0x01EB062C BL 0x1C16D08
	0x01EB0630 ADD X1, X31, 0x70
	0x01EB0634 BL 0x1C16E04
	0x01EB0638 MOV X19, X0
	0x01EB063C ADRP X0, 0x224E000
	0x01EB0640 LDR X0, [X0 + 0xF38]
	0x01EB0644 BL 0x1C16D08
	0x01EB0648 MOV X1, X19
	0x01EB064C MOV X2, X31
	0x01EB0650 BL 0x321EFD0
	0x01EB0654 MOV X19, X0
	0x01EB0658 ADRP X0, 0x2243000
	0x01EB065C LDR X0, [X0 + 0x5B0]
	0x01EB0660 BL 0x1C16D08
	0x01EB0664 BL 0x1C16F10
	0x01EB0668 MOV X1, X19
	0x01EB066C MOV X2, X31
	0x01EB0670 MOV X20, X0
	0x01EB0674 BL 0x337DF1C
	0x01EB0678 ADRP X0, 0x224E000
	0x01EB067C LDR X0, [X0 + 0xFB8]
	0x01EB0680 BL 0x1C16D08
	0x01EB0684 MOV X1, X0
	0x01EB0688 MOV X0, X20
	0x01EB068C BL 0x1C16DEC
	0x01EB0690 BL 0x3EB1B20
	0x01EB0694 SUB X31, X31, 0x100
	0x01EB0698 STP X29, X30, [X31 + 0xA0]
	0x01EB069C STP X28, X27, [X31 + 0xB0]
	0x01EB06A0 STP X26, X25, [X31 + 0xC0]
	0x01EB06A4 STP X24, X23, [X31 + 0xD0]
	0x01EB06A8 STP X22, X21, [X31 + 0xE0]
	0x01EB06AC STP X20, X19, [X31 + 0xF0]
	0x01EB06B0 MRS X27, 0xC000
	0x01EB06B4 MOV X19, X8
	0x01EB06B8 LDR X8, [X27 + 0x28]
	0x01EB06BC ADRP X26, 0x2529000
	0x01EB06C0 MOV X21, X7
	0x01EB06C4 MOV X22, X6
	0x01EB06C8 STR X8, [X31 + 0x98]
	0x01EB06CC LDRB W8, [X26 + 0x397]
	0x01EB06D0 MOV X23, X5
	0x01EB06D4 MOV X24, X4
	0x01EB06D8 MOV X25, X3
	0x01EB06DC MOV X20, X0
	0x01EB06E0 STP X1, X2, [X31 + 0x88]
	0x01EB06E4 TBNZ X8, 0x0, 0x1EB06FC
	0x01EB06E8 ADRP X0, 0x224E000
	0x01EB06EC LDR X0, [X0 + 0x378]
	0x01EB06F0 BL 0x1C16CF4
	0x01EB06F4 MOVZ W8, 0x1
	0x01EB06F8 STRB W8, [X26 + 0x397]
	0x01EB06FC MOVI V0.2D, 0x0
	0x01EB0700 ADD X0, X31, 0x88
	0x01EB0704 MOV X1, X31
	0x01EB0708 STR W31, [X31 + 0x68]
	0x01EB070C STR X31, [X31 + 0x60]
	0x01EB0710 STP V0, V0, [X31 + 0x40]
	0x01EB0714 STP V0, V0, [X31 + 0x20]
	0x01EB0718 STR V0, [X31 + 0x1]
	0x01EB071C BL 0x1E94F24
	0x01EB0720 TBZ X0, 0x0, 0x1EB0808
	0x01EB0724 LDR X8, [X20 + 0x98]
	0x01EB0728 CBZ X8, 0x1EB0804
	0x01EB072C LDR X0, [X8 + 0x38]
	0x01EB0730 CBZ X0, 0x1EB0804
	0x01EB0734 LDP X1, X2, [X31 + 0x88]
	0x01EB0738 MOV X3, X31

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+160], X29
	003 Move [X31+168], X30
	004 Move [X31+176], X28
	005 Move [X31+184], X27
	006 Move [X31+192], X26
	007 Move [X31+200], X25
	008 Move [X31+208], X24
	009 Move [X31+216], X23
	010 Move [X31+224], X22
	011 Move [X31+232], X21
	012 Move [X31+240], X20
	013 Move [X31+248], X19
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X28+40]
	016 Move X27, 0x252A000
	017 Move X21, X7
	018 Move X23, X6
	019 Move [X31+152], X8
	020 Move W8, [X27+912]
	021 Move X24, X5
	022 Move X26, X4
	023 Move X25, X3
	024 Move X19, X2
	025 Move X20, X1
	026 Move X22, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {42}
	031 Move X0, 0x224F000
	032 Move X0, [X0+3880]
	033 Call 0x1C17CF4
	034 Move X0, 0x2247000
	035 Move X0, [X0+920]
	036 Call 0x1C17CF4
	037 Move X0, 0x224F000
	038 Move X0, [X0+888]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X27+912], W8
	042 NotImplemented "Instruction MOVI not yet implemented."
	043 Move [X31+112], X31
	044 Move [X31+104], W31
	045 Move [X31+96], X31
	046 Move [X31+64], V0
	047 Move [X31+72], V0
	048 Move [X31+32], V0
	049 Move [X31+40], V0
	050 Move [X31+1], V0
	051 Compare X20, 0
	052 JumpIfEqual {211}
	053 Move X27, 0x224F000
	054 Move X27, [X27+888]
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 Move X0, [X27]
	057 Move [X31+120], X8
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Add X0, X31, 120
	063 Move X1, X31
	064 Call NetworkObjectTypeId.get_IsValid, X0
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {111}
	069 Move X8, 0x224F000
	070 Move X8, [X8+3880]
	071 Add X1, X31, 112
	072 Move X0, X20
	073 Move X2, [X8]
	074 Call 0x21A5990, X0, X1
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {229}
	079 Move X9, [X22+152]
	080 Compare X9, 0
	081 JumpIfEqual {235}
	082 Move X8, [X31+112]
	083 Compare X8, 0
	084 JumpIfEqual {236}
	085 Move X0, [X9+56]
	086 Compare X0, 0
	087 JumpIfEqual {236}
	088 Move X1, [X8+32]
	089 Move X2, [X8+40]
	090 Move X3, X31
	091 Call NetworkPrefabTable.GetId, X0, X1
	092 Move [X31+104], W0
	093 Add X0, X31, 104
	094 Move X1, X31
	095 Call NetworkPrefabId.get_IsValid, X0
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {237}
	100 Move X0, [X27]
	101 Move W27, [X31+104]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move X0, X27
	107 Move X1, X31
	108 Call NetworkObjectTypeId.op_Implicit, X0
	109 Move [X31+120], X0
	110 Move [X20+100], X0
	111 NotImplemented "Instruction LDRH not yet implemented."
	112 Move X0, X22
	113 Call NetworkRunner.get_IsResume, X0
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {122}
	118 Move X8, [X20+32]
	119 Compare X8, 0
	120 JumpIfEqual {123}
	121 Move W29, [X8]
	122 Move X8, X31
	123 Move W29, W31
	124 Move X8, 0x2247000
	125 Move X8, [X8+920]
	126 Move X0, [X8]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 NotImplemented "Instruction CMP not yet implemented."
	132 NotImplemented "Instruction CSEL not yet implemented."
	133 Move X9, [X31+120]
	134 Move [X31+24], X25
	135 Move [X31+32], X26
	136 NotImplemented "Instruction SXTH not yet implemented."
	137 Or W10, W10, 0x10000
	138 Move [X31+16], X9
	139 Move W9, [X24+16]
	140 Move V0, [X24]
	141 Move [X31+96], X8
	142 Add X8, X31, 128
	143 Add X1, X31, 16
	144 Move X0, X22
	145 Move [X31+60], X23
	146 Move [X31+68], W31
	147 Move [X31+72], X21
	148 Move [X31+80], X31
	149 Move [X31+88], W10
	150 Move [X31+92], W31
	151 Move [X31+40], V0
	152 Move [X31+56], W9
	153 Call NetworkRunner.SpawnInternal, X0, X1
	154 Move X22, 0x252A000
	155 Move W20, [X31+136]
	156 Move W8, [X22+959]
	157 Move X21, [X31+144]
	158 Compare W8, 0
	159 JumpIfEqual {185}
	160 Compare X21, 0
	161 JumpIfEqual {192}
	162 Move X8, 0x2247000
	163 Move X8, [X8+2984]
	164 Move X9, [X21]
	165 Move X1, [X8]
	166 Move W11, [X9+304]
	167 Move W10, [X1+304]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X9, [X9+200]
	170 Add X9, X9, X10
	171 NotImplemented "Instruction LDUR not yet implemented."
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move [X19], X21
	174 Move X9, [X21]
	175 Move X1, [X8]
	176 Move W10, [X9+304]
	177 Move W8, [X1+304]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X9, [X9+200]
	180 Add X8, X9, X8
	181 NotImplemented "Instruction LDUR not yet implemented."
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move X0, X21
	184 Call 0x1C181E0
	185 Move X0, 0x2247000
	186 Move X0, [X0+2984]
	187 Call 0x1C17CF4
	188 Move W8, 1
	189 Move [X22+959], W8
	190 Compare X21, 0
	191 JumpIfNotEqual {162}
	192 Move [X19], X31
	193 Move X8, [X28+40]
	194 Move X9, [X31+152]
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move W0, W20
	197 Move X20, [X31+240]
	198 Move X19, [X31+248]
	199 Move X22, [X31+224]
	200 Move X21, [X31+232]
	201 Move X24, [X31+208]
	202 Move X23, [X31+216]
	203 Move X26, [X31+192]
	204 Move X25, [X31+200]
	205 Move X28, [X31+176]
	206 Move X27, [X31+184]
	207 Move X29, [X31+160]
	208 Move X30, [X31+168]
	209 Add X31, X31, 256
	210 Return X0
	211 Move X0, 0x2249000
	212 Move X0, [X0+1320]
	213 Call 0x1C17D08
	214 Call 0x1C17F10
	215 Move X19, X0
	216 Move X0, 0x224F000
	217 Move X0, [X0+3856]
	218 Call 0x1C17D08
	219 Move X1, X0
	220 Move X0, X19
	221 Move X2, X31
	222 Call ArgumentNullException..ctor, X0, X1
	223 Move X0, 0x224F000
	224 Move X0, [X0+3976]
	225 Call 0x1C17D08
	226 Move X1, X0
	227 Move X0, X19
	228 Call 0x1C17DEC
	229 Move X0, 0x224F000
	230 Move X0, [X0+3896]
	231 Call 0x1C17D08
	232 Move X1, X20
	233 Move X2, X31
	234 Call String.Format, X0, X1
	235 Move X8, [X31+112]
	236 Call 0x1C17F20
	237 Move X19, [X31+112]
	238 Move X0, X19
	239 Call 0x19913C0
	240 Move V0, [X19+2]
	241 Move X0, 0x224F000
	242 Move [X31+8], V0
	243 Move X0, [X0+848]
	244 Call 0x1C17D08
	245 Add X1, X31, 128
	246 Call 0x1C17E04
	247 Move X19, X0
	248 Move X0, 0x224F000
	249 Move X0, [X0+3904]
	250 Call 0x1C17D08
	251 Move X1, X20
	252 Move X2, X19
	253 Move X3, X31
	254 Call String.Format, X0, X1, X2
	255 Move X19, X0
	256 Move X0, 0x2244000
	257 Move X0, [X0+1456]
	258 Call 0x1C17D08
	259 Call 0x1C17F10
	260 Move X1, X19
	261 Move X2, X31
	262 Move X20, X0
	263 Call InvalidOperationException..ctor, X0, X1
	264 Move X0, 0x224F000
	265 Move X0, [X0+3976]
	266 Call 0x1C17D08
	267 Move X1, X0
	268 Move X0, X20
	269 Call 0x1C17DEC
	270 Call 0x3EB2B20

Method: Fusion.NetworkSpawnStatus TrySpawn(Fusion.NetworkPrefabRef prefabRef, out Fusion.NetworkObject obj, System.Nullable`1<UnityEngine.Vector3> position = null, System.Nullable`1<UnityEngine.Quaternion> rotation = null, System.Nullable`1<Fusion.PlayerRef> inputAuthority = null, Fusion.NetworkRunner/OnBeforeSpawned onBeforeSpawned = null, Fusion.NetworkSpawnFlags flags = 0)

Disassembly:
	0x01EB073C BL 0x1E9AB04
	0x01EB0740 STR W0, [X31 + 0x68]
	0x01EB0744 ADD X0, X31, 0x68
	0x01EB0748 MOV X1, X31
	0x01EB074C BL 0x1E991E8
	0x01EB0750 TBZ X0, 0x0, 0x1EB0864
	0x01EB0754 ADRP X8, 0x224E000
	0x01EB0758 LDR X8, [X8 + 0x378]
	0x01EB075C LDR X28, [X31 + 0x108]
	0x01EB0760 LDRH W29, [X31 + 0x100]
	0x01EB0764 LDR W26, [X31 + 0x68]
	0x01EB0768 LDR X0, [X8]
	0x01EB076C LDR W8, [X0 + 0xE0]
	0x01EB0770 CBNZ W8, 0x1EB0778
	0x01EB0774 BL 0x1C16DFC
	0x01EB0778 MOV X0, X26
	0x01EB077C MOV X1, X31
	0x01EB0780 BL 0x1E99830
	0x01EB0784 STP X0, X25, [X31 + 0x10]
	0x01EB0788 STR X24, [X31 + 0x20]
	0x01EB078C LDR W9, [X23 + 0x10]
	0x01EB0790 LDR V0, [X23]
	0x01EB0794 SXTH W8, W29
	0x01EB0798 STP W8, W31, [X31 + 0x58]
	0x01EB079C ADD X8, X31, 0x70
	0x01EB07A0 ADD X1, X31, 0x10
	0x01EB07A4 MOV X0, X20
	0x01EB07A8 STUR X22, [X31 + 0x3C]
	0x01EB07AC STR W31, [X31 + 0x44]
	0x01EB07B0 STP X21, X28, [X31 + 0x48]
	0x01EB07B4 STUR V0, [X31 + 0x28]
	0x01EB07B8 STR W9, [X31 + 0x38]
	0x01EB07BC STR X31, [X31 + 0x60]
	0x01EB07C0 BL 0x1EAB01C
	0x01EB07C4 LDR X8, [X31 + 0x80]
	0x01EB07C8 LDR V0, [X31 + 0x7]
	0x01EB07CC STR X8, [X19 + 0x10]
	0x01EB07D0 STR V0, [X19]
	0x01EB07D4 LDR X8, [X27 + 0x28]
	0x01EB07D8 LDR X9, [X31 + 0x98]
	0x01EB07DC CMP X8, X9
	0x01EB07E0 B.NE 0x1EB08D8
	0x01EB07E4 LDP X20, X19, [X31 + 0xF0]
	0x01EB07E8 LDP X22, X21, [X31 + 0xE0]
	0x01EB07EC LDP X24, X23, [X31 + 0xD0]
	0x01EB07F0 LDP X26, X25, [X31 + 0xC0]
	0x01EB07F4 LDP X28, X27, [X31 + 0xB0]
	0x01EB07F8 LDP X29, X30, [X31 + 0xA0]
	0x01EB07FC ADD X31, X31, 0x100
	0x01EB0800 RET
	0x01EB0804 BL 0x1C16F20
	0x01EB0808 ADRP X0, 0x224B000
	0x01EB080C LDR X0, [X0 + 0x578]
	0x01EB0810 BL 0x1C16D08
	0x01EB0814 BL 0x1C16F10
	0x01EB0818 MOV X19, X0
	0x01EB081C ADRP X0, 0x224E000
	0x01EB0820 LDR X0, [X0 + 0xF48]
	0x01EB0824 BL 0x1C16D08
	0x01EB0828 MOV X20, X0
	0x01EB082C ADRP X0, 0x224E000
	0x01EB0830 LDR X0, [X0 + 0xF60]
	0x01EB0834 BL 0x1C16D08
	0x01EB0838 MOV X2, X0
	0x01EB083C MOV X0, X19
	0x01EB0840 MOV X1, X20
	0x01EB0844 MOV X3, X31
	0x01EB0848 BL 0x330E16C
	0x01EB084C ADRP X0, 0x224E000
	0x01EB0850 LDR X0, [X0 + 0xFC0]
	0x01EB0854 BL 0x1C16D08
	0x01EB0858 MOV X1, X0
	0x01EB085C MOV X0, X19
	0x01EB0860 BL 0x1C16DEC
	0x01EB0864 LDUR V0, [X31 + 0x88]
	0x01EB0868 ADRP X0, 0x224E000
	0x01EB086C STR V0, [X31 + 0x7]
	0x01EB0870 LDR X0, [X0 + 0x350]
	0x01EB0874 BL 0x1C16D08
	0x01EB0878 ADD X1, X31, 0x70
	0x01EB087C BL 0x1C16E04
	0x01EB0880 MOV X19, X0
	0x01EB0884 ADRP X0, 0x224E000
	0x01EB0888 LDR X0, [X0 + 0xF38]
	0x01EB088C BL 0x1C16D08
	0x01EB0890 MOV X1, X19
	0x01EB0894 MOV X2, X31
	0x01EB0898 BL 0x321EFD0
	0x01EB089C MOV X19, X0
	0x01EB08A0 ADRP X0, 0x2243000
	0x01EB08A4 LDR X0, [X0 + 0x5B0]
	0x01EB08A8 BL 0x1C16D08
	0x01EB08AC BL 0x1C16F10
	0x01EB08B0 MOV X1, X19
	0x01EB08B4 MOV X2, X31
	0x01EB08B8 MOV X20, X0
	0x01EB08BC BL 0x337DF1C
	0x01EB08C0 ADRP X0, 0x224E000
	0x01EB08C4 LDR X0, [X0 + 0xFC0]
	0x01EB08C8 BL 0x1C16D08
	0x01EB08CC MOV X1, X0
	0x01EB08D0 MOV X0, X20
	0x01EB08D4 BL 0x1C16DEC
	0x01EB08D8 BL 0x3EB1B20
	0x01EB08DC SUB X31, X31, 0xE0
	0x01EB08E0 STR X30, [X31 + 0x80]
	0x01EB08E4 STP X28, X27, [X31 + 0x90]
	0x01EB08E8 STP X26, X25, [X31 + 0xA0]
	0x01EB08EC STP X24, X23, [X31 + 0xB0]
	0x01EB08F0 STP X22, X21, [X31 + 0xC0]
	0x01EB08F4 STP X20, X19, [X31 + 0xD0]
	0x01EB08F8 ADRP X27, 0x2529000
	0x01EB08FC MOV X19, X8
	0x01EB0900 LDRB W8, [X27 + 0x398]
	0x01EB0904 MOV W24, W7
	0x01EB0908 MOV X21, X6
	0x01EB090C MOV X22, X5
	0x01EB0910 MOV X23, X4
	0x01EB0914 MOV X25, X3
	0x01EB0918 MOV X26, X2
	0x01EB091C MOV X20, X0
	0x01EB0920 STR W1, [X31 + 0x88]
	0x01EB0924 TBNZ X8, 0x0, 0x1EB093C
	0x01EB0928 ADRP X0, 0x224E000
	0x01EB092C LDR X0, [X0 + 0x378]
	0x01EB0930 BL 0x1C16CF4
	0x01EB0934 MOVZ W8, 0x1
	0x01EB0938 STRB W8, [X27 + 0x398]
	0x01EB093C MOVI V0.2D, 0x0
	0x01EB0940 ADD X0, X31, 0x88
	0x01EB0944 MOV X1, X31
	0x01EB0948 STR X31, [X31 + 0x70]
	0x01EB094C STP V0, V0, [X31 + 0x50]
	0x01EB0950 STP V0, V0, [X31 + 0x30]
	0x01EB0954 STR V0, [X31 + 0x2]
	0x01EB0958 BL 0x1E991E8
	0x01EB095C TBZ X0, 0x0, 0x1EB09FC
	0x01EB0960 ADRP X8, 0x224E000
	0x01EB0964 LDR X8, [X8 + 0x378]
	0x01EB0968 LDR X28, [X31 + 0xE0]
	0x01EB096C LDR W27, [X31 + 0x88]
	0x01EB0970 LDR X0, [X8]
	0x01EB0974 LDR W8, [X0 + 0xE0]
	0x01EB0978 CBNZ W8, 0x1EB0980
	0x01EB097C BL 0x1C16DFC
	0x01EB0980 MOV X0, X27
	0x01EB0984 MOV X1, X31
	0x01EB0988 BL 0x1E99830
	0x01EB098C STP X0, X26, [X31 + 0x20]
	0x01EB0990 STR X25, [X31 + 0x30]
	0x01EB0994 LDR W9, [X23 + 0x10]
	0x01EB0998 LDR V0, [X23]
	0x01EB099C SXTH W8, W24
	0x01EB09A0 STP W8, W31, [X31 + 0x68]
	0x01EB09A4 ADD X8, X31, 0x8
	0x01EB09A8 ADD X1, X31, 0x20
	0x01EB09AC MOV X0, X20
	0x01EB09B0 STUR X22, [X31 + 0x4C]
	0x01EB09B4 STR W31, [X31 + 0x54]
	0x01EB09B8 STP X21, X28, [X31 + 0x58]
	0x01EB09BC STUR V0, [X31 + 0x38]
	0x01EB09C0 STR W9, [X31 + 0x48]
	0x01EB09C4 STR X31, [X31 + 0x70]
	0x01EB09C8 BL 0x1EAB01C
	0x01EB09CC LDR X8, [X31 + 0x18]
	0x01EB09D0 LDUR V0, [X31 + 0x8]
	0x01EB09D4 LDP X22, X21, [X31 + 0xC0]
	0x01EB09D8 LDP X24, X23, [X31 + 0xB0]
	0x01EB09DC STR X8, [X19 + 0x10]
	0x01EB09E0 STR V0, [X19]
	0x01EB09E4 LDP X20, X19, [X31 + 0xD0]
	0x01EB09E8 LDP X26, X25, [X31 + 0xA0]
	0x01EB09EC LDP X28, X27, [X31 + 0x90]
	0x01EB09F0 LDR X30, [X31 + 0x80]
	0x01EB09F4 ADD X31, X31, 0xE0
	0x01EB09F8 RET
	0x01EB09FC ADRP X0, 0x224B000
	0x01EB0A00 LDR X0, [X0 + 0x578]
	0x01EB0A04 BL 0x1C16D08
	0x01EB0A08 BL 0x1C16F10
	0x01EB0A0C MOV X19, X0
	0x01EB0A10 ADRP X0, 0x224E000
	0x01EB0A14 LDR X0, [X0 + 0xF70]
	0x01EB0A18 BL 0x1C16D08
	0x01EB0A1C MOV X1, X0
	0x01EB0A20 MOV X0, X19
	0x01EB0A24 MOV X2, X31
	0x01EB0A28 BL 0x3314A68
	0x01EB0A2C ADRP X0, 0x224E000
	0x01EB0A30 LDR X0, [X0 + 0xFC8]
	0x01EB0A34 BL 0x1C16D08
	0x01EB0A38 MOV X1, X0

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+144], X30
	003 Move [X31+160], X28
	004 Move [X31+168], X27
	005 Move [X31+176], X26
	006 Move [X31+184], X25
	007 Move [X31+192], X24
	008 Move [X31+200], X23
	009 Move [X31+208], X22
	010 Move [X31+216], X21
	011 Move [X31+224], X20
	012 Move [X31+232], X19
	013 NotImplemented "Instruction MRS not yet implemented."
	014 Move X8, [X26+40]
	015 Move X25, 0x252A000
	016 Move X21, X7
	017 Move X22, X6
	018 Move [X31+136], X8
	019 Move W8, [X25+913]
	020 Move X23, X5
	021 Move X24, X4
	022 Move X19, X3
	023 Move X20, X0
	024 Move [X31+120], X1
	025 Move [X31+128], X2
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {35}
	030 Move X0, 0x224F000
	031 Move X0, [X0+888]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X25+913], W8
	035 NotImplemented "Instruction MOVI not yet implemented."
	036 Add X0, X31, 120
	037 Move X1, X31
	038 Move [X31+88], W31
	039 Move [X31+80], X31
	040 Move [X31+48], V0
	041 Move [X31+56], V0
	042 Move [X31+16], V0
	043 Move [X31+24], V0
	044 Move [X31], V0
	045 Call NetworkPrefabRef.get_IsValid, X0
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {165}
	050 Move X8, [X20+152]
	051 Compare X8, 0
	052 JumpIfEqual {54}
	053 Move X25, [X8+56]
	054 Move X25, X31
	055 Move X0, [X31+120]
	056 Move X1, [X31+128]
	057 Move X2, X31
	058 Call NetworkPrefabRef.op_Explicit, X0
	059 Compare X25, 0
	060 JumpIfEqual {188}
	061 Move X2, X0
	062 Move X3, X1
	063 Move X0, X25
	064 Move X1, X2
	065 Move X2, X3
	066 Move X3, X31
	067 Call NetworkPrefabTable.GetId, X0, X1
	068 Move [X31+88], W0
	069 Add X0, X31, 88
	070 Move X1, X31
	071 Call NetworkPrefabId.get_IsValid, X0
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {189}
	076 Move X8, 0x224F000
	077 Move X8, [X8+888]
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 Move X27, [X31+240]
	080 Move W25, [X31+88]
	081 Move X0, [X8]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move X0, X25
	087 Move X1, X31
	088 Call NetworkObjectTypeId.op_Implicit, X0
	089 Move [X31], X0
	090 Move [X31+8], X24
	091 Move [X31+16], X23
	092 Move W9, [X22+16]
	093 Move V0, [X22]
	094 NotImplemented "Instruction SXTH not yet implemented."
	095 Or W8, W8, 0x10000
	096 Move [X31+72], W8
	097 Move [X31+76], W31
	098 Add X8, X31, 96
	099 Add X1, X31, 0
	100 Move X0, X20
	101 Move [X31+44], X21
	102 Move [X31+52], W31
	103 Move [X31+56], X27
	104 Move [X31+64], X31
	105 Move [X31+24], V0
	106 Move [X31+40], W9
	107 Move [X31+80], X31
	108 Call NetworkRunner.SpawnInternal, X0, X1
	109 Move X22, 0x252A000
	110 Move W20, [X31+104]
	111 Move W8, [X22+959]
	112 Move X21, [X31+112]
	113 Compare W8, 0
	114 JumpIfEqual {140}
	115 Compare X21, 0
	116 JumpIfEqual {147}
	117 Move X8, 0x2247000
	118 Move X8, [X8+2984]
	119 Move X9, [X21]
	120 Move X1, [X8]
	121 Move W11, [X9+304]
	122 Move W10, [X1+304]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X9, [X9+200]
	125 Add X9, X9, X10
	126 NotImplemented "Instruction LDUR not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move [X19], X21
	129 Move X9, [X21]
	130 Move X1, [X8]
	131 Move W10, [X9+304]
	132 Move W8, [X1+304]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X9, [X9+200]
	135 Add X8, X9, X8
	136 NotImplemented "Instruction LDUR not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X0, X21
	139 Call 0x1C181E0
	140 Move X0, 0x2247000
	141 Move X0, [X0+2984]
	142 Call 0x1C17CF4
	143 Move W8, 1
	144 Move [X22+959], W8
	145 Compare X21, 0
	146 JumpIfNotEqual {117}
	147 Move [X19], X31
	148 Move X8, [X26+40]
	149 Move X9, [X31+136]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move W0, W20
	152 Move X20, [X31+224]
	153 Move X19, [X31+232]
	154 Move X22, [X31+208]
	155 Move X21, [X31+216]
	156 Move X24, [X31+192]
	157 Move X23, [X31+200]
	158 Move X26, [X31+176]
	159 Move X25, [X31+184]
	160 Move X28, [X31+160]
	161 Move X27, [X31+168]
	162 Move X30, [X31+144]
	163 Add X31, X31, 240
	164 Return X0
	165 Move X0, 0x224C000
	166 Move X0, [X0+1400]
	167 Call 0x1C17D08
	168 Call 0x1C17F10
	169 Move X19, X0
	170 Move X0, 0x224F000
	171 Move X0, [X0+3912]
	172 Call 0x1C17D08
	173 Move X20, X0
	174 Move X0, 0x224F000
	175 Move X0, [X0+3920]
	176 Call 0x1C17D08
	177 Move X2, X0
	178 Move X0, X19
	179 Move X1, X20
	180 Move X3, X31
	181 Call ArgumentException..ctor, X0, X1, X2
	182 Move X0, 0x224F000
	183 Move X0, [X0+3984]
	184 Call 0x1C17D08
	185 Move X1, X0
	186 Move X0, X19
	187 Call 0x1C17DEC
	188 Call 0x1C17F20
	189 NotImplemented "Instruction LDUR not yet implemented."
	190 Move X0, 0x224F000
	191 Move [X31+6], V0
	192 Move X0, [X0+864]
	193 Call 0x1C17D08
	194 Add X1, X31, 96
	195 Call 0x1C17E04
	196 Move X19, X0
	197 Move X0, 0x224F000
	198 Move X0, [X0+3896]
	199 Call 0x1C17D08
	200 Move X1, X19
	201 Move X2, X31
	202 Call String.Format, X0, X1
	203 Move X19, X0
	204 Move X0, 0x2244000
	205 Move X0, [X0+1456]
	206 Call 0x1C17D08
	207 Call 0x1C17F10
	208 Move X1, X19
	209 Move X2, X31
	210 Move X20, X0
	211 Call InvalidOperationException..ctor, X0, X1
	212 Move X0, 0x224F000
	213 Move X0, [X0+3984]
	214 Call 0x1C17D08
	215 Move X1, X0
	216 Move X0, X20
	217 Call 0x1C17DEC
	218 Call 0x3EB2B20

Method: Fusion.NetworkSpawnStatus TrySpawn(Fusion.NetworkObjectGuid prefabGuid, out Fusion.NetworkObject obj, System.Nullable`1<UnityEngine.Vector3> position = null, System.Nullable`1<UnityEngine.Quaternion> rotation = null, System.Nullable`1<Fusion.PlayerRef> inputAuthority = null, Fusion.NetworkRunner/OnBeforeSpawned onBeforeSpawned = null, Fusion.NetworkSpawnFlags flags = 0)

Disassembly:
	0x01EB0A3C MOV X0, X19
	0x01EB0A40 BL 0x1C16DEC
	0x01EB0A44 STR X30, [X31 - 0x20]!
	0x01EB0A48 STP X20, X19, [X31 + 0x10]
	0x01EB0A4C ADRP X20, 0x2529000
	0x01EB0A50 LDRB W8, [X20 + 0x39A]
	0x01EB0A54 MOV X19, X0
	0x01EB0A58 TBNZ X8, 0x0, 0x1EB0A7C
	0x01EB0A5C ADRP X0, 0x224D000
	0x01EB0A60 LDR X0, [X0 + 0x170]
	0x01EB0A64 BL 0x1C16CF4
	0x01EB0A68 ADRP X0, 0x2247000
	0x01EB0A6C LDR X0, [X0 + 0xFD8]
	0x01EB0A70 BL 0x1C16CF4
	0x01EB0A74 MOVZ W8, 0x1
	0x01EB0A78 STRB W8, [X20 + 0x39A]
	0x01EB0A7C LDR X0, [X19 + 0x1B0]
	0x01EB0A80 CBZ X0, 0x1EB0AB4
	0x01EB0A84 ADRP X19, 0x2247000
	0x01EB0A88 LDR X19, [X19 + 0xFD8]
	0x01EB0A8C MOV X1, X31
	0x01EB0A90 BL 0x1E68684
	0x01EB0A94 LDR X2, [X19]
	0x01EB0A98 AND W1, W0, 0x1
	0x01EB0A9C ADD X0, X31, 0xC
	0x01EB0AA0 STRH W31, [X31 + 0xC]
	0x01EB0AA4 BL 0x242D570
	0x01EB0AA8 LDRH W8, [X31 + 0xC]
	0x01EB0AAC CMP W8, 0xFF
	0x01EB0AB0 CSET W0, HI
	0x01EB0AB4 LDP X20, X19, [X31 + 0x10]
	0x01EB0AB8 LDR X30, [X31], #0x20
	0x01EB0ABC RET
	0x01EB0AC0 STP X30, X19, [X31 - 0x10]!
	0x01EB0AC4 MOV X19, X0
	0x01EB0AC8 BL 0x1E9DF98
	0x01EB0ACC TBZ X0, 0x0, 0x1EB0AE4
	0x01EB0AD0 LDR X0, [X19 + 0x1B0]
	0x01EB0AD4 CBZ X0, 0x1EB0AF0
	0x01EB0AD8 MOV X1, X31
	0x01EB0ADC LDP X30, X19, [X31], #0x10
	0x01EB0AE0 B 0x1E687E4
	0x01EB0AE4 MOV X0, X31
	0x01EB0AE8 LDP X30, X19, [X31], #0x10
	0x01EB0AEC RET
	0x01EB0AF0 BL 0x1C16F20
	0x01EB0AF4 LDR W0, [X0 + 0x188]
	0x01EB0AF8 RET
	0x01EB0AFC STR W1, [X0 + 0x188]
	0x01EB0B00 RET
	0x01EB0B04 LDR X0, [X0 + 0x190]
	0x01EB0B08 RET
	0x01EB0B0C STR X1, [X0 + 0x190]
	0x01EB0B10 RET
	0x01EB0B14 LDR X0, [X0 + 0x198]
	0x01EB0B18 RET
	0x01EB0B1C STR X1, [X0 + 0x198]
	0x01EB0B20 RET
	0x01EB0B24 SUB X31, X31, 0x60
	0x01EB0B28 STP X30, X21, [X31 + 0x40]
	0x01EB0B2C STP X20, X19, [X31 + 0x50]
	0x01EB0B30 MRS X20, 0xC000
	0x01EB0B34 LDR X8, [X20 + 0x28]
	0x01EB0B38 ADRP X21, 0x2529000
	0x01EB0B3C MOV X19, X0
	0x01EB0B40 STR X8, [X31 + 0x38]
	0x01EB0B44 LDRB W8, [X21 + 0x39B]
	0x01EB0B48 TBNZ X8, 0x0, 0x1EB0B6C
	0x01EB0B4C ADRP X0, 0x224E000
	0x01EB0B50 LDR X0, [X0 + 0x7E0]
	0x01EB0B54 BL 0x1C16CF4
	0x01EB0B58 ADRP X0, 0x224D000
	0x01EB0B5C LDR X0, [X0 + 0x78]
	0x01EB0B60 BL 0x1C16CF4
	0x01EB0B64 MOVZ W8, 0x1
	0x01EB0B68 STRB W8, [X21 + 0x39B]
	0x01EB0B6C MOV X0, X19
	0x01EB0B70 STP X31, X31, [X31 + 0x20]
	0x01EB0B74 STR X31, [X31 + 0x30]
	0x01EB0B78 BL 0x1E9E890
	0x01EB0B7C TBZ X0, 0x0, 0x1EB0C0C
	0x01EB0B80 LDR X0, [X19 + 0x50]
	0x01EB0B84 CBZ X0, 0x1EB0C34
	0x01EB0B88 ADRP X9, 0x224E000
	0x01EB0B8C LDR X9, [X9 + 0x7E0]
	0x01EB0B90 LDR X8, [X0]
	0x01EB0B94 LDR X1, [X9]
	0x01EB0B98 LDRB W10, [X8 + 0x130]
	0x01EB0B9C LDRB W9, [X1 + 0x130]
	0x01EB0BA0 CMP W10, W9
	0x01EB0BA4 B.CC 0x1EB0C30
	0x01EB0BA8 LDR X8, [X8 + 0xC8]
	0x01EB0BAC ADD X8, X8, X9, 0x3, LSL
	0x01EB0BB0 LDUR X8, [X8 - 0x8]
	0x01EB0BB4 CMP X8, X1
	0x01EB0BB8 B.NE 0x1EB0C30
	0x01EB0BBC ADD X8, X31, 0x8
	0x01EB0BC0 MOV X1, X31
	0x01EB0BC4 BL 0x1ECB8AC
	0x01EB0BC8 ADRP X9, 0x224D000
	0x01EB0BCC LDUR V0, [X31 + 0x8]
	0x01EB0BD0 LDR X8, [X31 + 0x18]
	0x01EB0BD4 LDR X9, [X9 + 0x78]
	0x01EB0BD8 STR V0, [X31 + 0x2]
	0x01EB0BDC STR X8, [X31 + 0x30]
	0x01EB0BE0 LDR X0, [X9]
	0x01EB0BE4 LDR W8, [X0 + 0xE0]
	0x01EB0BE8 CBNZ W8, 0x1EB0BF0
	0x01EB0BEC BL 0x1C16DFC
	0x01EB0BF0 ADD X0, X31, 0x20
	0x01EB0BF4 MOV X1, X31
	0x01EB0BF8 BL 0x1EF8634
	0x01EB0BFC ANDS W31, W0, 0x1
	0x01EB0C00 MOVZ W8, 0x1
	0x01EB0C04 CINC W0, W8, EQ
	0x01EB0C08 B 0x1EB0C10
	0x01EB0C0C MOV W0, W31
	0x01EB0C10 LDR X8, [X20 + 0x28]
	0x01EB0C14 LDR X9, [X31 + 0x38]
	0x01EB0C18 CMP X8, X9
	0x01EB0C1C B.NE 0x1EB0C38
	0x01EB0C20 LDP X20, X19, [X31 + 0x50]
	0x01EB0C24 LDP X30, X21, [X31 + 0x40]
	0x01EB0C28 ADD X31, X31, 0x60
	0x01EB0C2C RET
	0x01EB0C30 BL 0x1C171E0
	0x01EB0C34 BL 0x1C16F20
	0x01EB0C38 BL 0x3EB1B20
	0x01EB0C3C LDR X0, [X0 + 0x1B0]
	0x01EB0C40 CBZ X0, 0x1EB0C4C
	0x01EB0C44 MOV X1, X31
	0x01EB0C48 B 0x1E688D8
	0x01EB0C4C RET
	0x01EB0C50 SUB X31, X31, 0xE0
	0x01EB0C54 STP X29, X30, [X31 + 0x80]
	0x01EB0C58 STP X28, X27, [X31 + 0x90]
	0x01EB0C5C STP X26, X25, [X31 + 0xA0]
	0x01EB0C60 STP X24, X23, [X31 + 0xB0]
	0x01EB0C64 STP X22, X21, [X31 + 0xC0]
	0x01EB0C68 STP X20, X19, [X31 + 0xD0]
	0x01EB0C6C ADRP X28, 0x2529000
	0x01EB0C70 ADRP X27, 0x224E000
	0x01EB0C74 LDRB W8, [X28 + 0x39C]
	0x01EB0C78 LDR X27, [X27 + 0xFD0]
	0x01EB0C7C MOV W26, W7
	0x01EB0C80 MOV X19, X6
	0x01EB0C84 MOV X20, X5
	0x01EB0C88 MOV X21, X4
	0x01EB0C8C MOV X22, X3
	0x01EB0C90 MOV X23, X2
	0x01EB0C94 MOV W25, W1
	0x01EB0C98 MOV X24, X0
	0x01EB0C9C TBNZ X8, 0x0, 0x1EB0CD8
	0x01EB0CA0 ADRP X0, 0x224E000
	0x01EB0CA4 LDR X0, [X0 + 0xFD8]
	0x01EB0CA8 BL 0x1C16CF4
	0x01EB0CAC ADRP X0, 0x224E000
	0x01EB0CB0 LDR X0, [X0 + 0xFE0]
	0x01EB0CB4 BL 0x1C16CF4
	0x01EB0CB8 ADRP X0, 0x224E000
	0x01EB0CBC LDR X0, [X0 + 0xFE8]
	0x01EB0CC0 BL 0x1C16CF4
	0x01EB0CC4 ADRP X0, 0x224E000
	0x01EB0CC8 LDR X0, [X0 + 0xFD0]
	0x01EB0CCC BL 0x1C16CF4
	0x01EB0CD0 MOVZ W8, 0x1
	0x01EB0CD4 STRB W8, [X28 + 0x39C]
	0x01EB0CD8 LDR X0, [X27]
	0x01EB0CDC MOVI V0.2D, 0x0
	0x01EB0CE0 STP V0, V0, [X31 + 0x60]
	0x01EB0CE4 STP V0, V0, [X31 + 0x40]
	0x01EB0CE8 STP V0, V0, [X31 + 0x20]
	0x01EB0CEC STP V0, V0, [X31]
	0x01EB0CF0 ADRP X29, 0x224E000
	0x01EB0CF4 ADRP X28, 0x224E000
	0x01EB0CF8 ADRP X27, 0x224E000
	0x01EB0CFC LDR W8, [X0 + 0xE0]
	0x01EB0D00 LDR X29, [X29 + 0xFD8]
	0x01EB0D04 LDR X28, [X28 + 0xFE0]
	0x01EB0D08 LDR X27, [X27 + 0xFE8]
	0x01EB0D0C CBNZ W8, 0x1EB0D14
	0x01EB0D10 BL 0x1C16DFC
	0x01EB0D14 LDR X0, [X29]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+144], X30
	003 Move [X31+160], X28
	004 Move [X31+168], X27
	005 Move [X31+176], X26
	006 Move [X31+184], X25
	007 Move [X31+192], X24
	008 Move [X31+200], X23
	009 Move [X31+208], X22
	010 Move [X31+216], X21
	011 Move [X31+224], X20
	012 Move [X31+232], X19
	013 NotImplemented "Instruction MRS not yet implemented."
	014 Move X8, [X26+40]
	015 Move X25, 0x252A000
	016 Move X21, X7
	017 Move X22, X6
	018 Move [X31+136], X8
	019 Move W8, [X25+914]
	020 Move X23, X5
	021 Move X24, X4
	022 Move X19, X3
	023 Move X20, X0
	024 Move [X31+120], X1
	025 Move [X31+128], X2
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {35}
	030 Move X0, 0x224F000
	031 Move X0, [X0+888]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X25+914], W8
	035 NotImplemented "Instruction MOVI not yet implemented."
	036 Add X0, X31, 120
	037 Move X1, X31
	038 Move [X31+88], W31
	039 Move [X31+80], X31
	040 Move [X31+48], V0
	041 Move [X31+56], V0
	042 Move [X31+16], V0
	043 Move [X31+24], V0
	044 Move [X31], V0
	045 Call NetworkObjectGuid.get_IsValid, X0
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {158}
	050 Move X8, [X20+152]
	051 Compare X8, 0
	052 JumpIfEqual {157}
	053 Move X0, [X8+56]
	054 Compare X0, 0
	055 JumpIfEqual {157}
	056 Move X1, [X31+120]
	057 Move X2, [X31+128]
	058 Move X3, X31
	059 Call NetworkPrefabTable.GetId, X0, X1
	060 Move [X31+88], W0
	061 Add X0, X31, 88
	062 Move X1, X31
	063 Call NetworkPrefabId.get_IsValid, X0
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {181}
	068 Move X8, 0x224F000
	069 Move X8, [X8+888]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Move X27, [X31+240]
	072 Move W25, [X31+88]
	073 Move X0, [X8]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move X0, X25
	079 Move X1, X31
	080 Call NetworkObjectTypeId.op_Implicit, X0
	081 Move [X31], X0
	082 Move [X31+8], X24
	083 Move [X31+16], X23
	084 Move W9, [X22+16]
	085 Move V0, [X22]
	086 NotImplemented "Instruction SXTH not yet implemented."
	087 Or W8, W8, 0x10000
	088 Move [X31+72], W8
	089 Move [X31+76], W31
	090 Add X8, X31, 96
	091 Add X1, X31, 0
	092 Move X0, X20
	093 Move [X31+44], X21
	094 Move [X31+52], W31
	095 Move [X31+56], X27
	096 Move [X31+64], X31
	097 Move [X31+24], V0
	098 Move [X31+40], W9
	099 Move [X31+80], X31
	100 Call NetworkRunner.SpawnInternal, X0, X1
	101 Move X22, 0x252A000
	102 Move W20, [X31+104]
	103 Move W8, [X22+959]
	104 Move X21, [X31+112]
	105 Compare W8, 0
	106 JumpIfEqual {132}
	107 Compare X21, 0
	108 JumpIfEqual {139}
	109 Move X8, 0x2247000
	110 Move X8, [X8+2984]
	111 Move X9, [X21]
	112 Move X1, [X8]
	113 Move W11, [X9+304]
	114 Move W10, [X1+304]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X9, [X9+200]
	117 Add X9, X9, X10
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move [X19], X21
	121 Move X9, [X21]
	122 Move X1, [X8]
	123 Move W10, [X9+304]
	124 Move W8, [X1+304]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X9, [X9+200]
	127 Add X8, X9, X8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X0, X21
	131 Call 0x1C181E0
	132 Move X0, 0x2247000
	133 Move X0, [X0+2984]
	134 Call 0x1C17CF4
	135 Move W8, 1
	136 Move [X22+959], W8
	137 Compare X21, 0
	138 JumpIfNotEqual {109}
	139 Move [X19], X31
	140 Move X8, [X26+40]
	141 Move X9, [X31+136]
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move W0, W20
	144 Move X20, [X31+224]
	145 Move X19, [X31+232]
	146 Move X22, [X31+208]
	147 Move X21, [X31+216]
	148 Move X24, [X31+192]
	149 Move X23, [X31+200]
	150 Move X26, [X31+176]
	151 Move X25, [X31+184]
	152 Move X28, [X31+160]
	153 Move X27, [X31+168]
	154 Move X30, [X31+144]
	155 Add X31, X31, 240
	156 Return X0
	157 Call 0x1C17F20
	158 Move X0, 0x224C000
	159 Move X0, [X0+1400]
	160 Call 0x1C17D08
	161 Call 0x1C17F10
	162 Move X19, X0
	163 Move X0, 0x224F000
	164 Move X0, [X0+3912]
	165 Call 0x1C17D08
	166 Move X20, X0
	167 Move X0, 0x224F000
	168 Move X0, [X0+3936]
	169 Call 0x1C17D08
	170 Move X2, X0
	171 Move X0, X19
	172 Move X1, X20
	173 Move X3, X31
	174 Call ArgumentException..ctor, X0, X1, X2
	175 Move X0, 0x224F000
	176 Move X0, [X0+3992]
	177 Call 0x1C17D08
	178 Move X1, X0
	179 Move X0, X19
	180 Call 0x1C17DEC
	181 NotImplemented "Instruction LDUR not yet implemented."
	182 Move X0, 0x224F000
	183 Move [X31+6], V0
	184 Move X0, [X0+848]
	185 Call 0x1C17D08
	186 Add X1, X31, 96
	187 Call 0x1C17E04
	188 Move X19, X0
	189 Move X0, 0x224F000
	190 Move X0, [X0+3896]
	191 Call 0x1C17D08
	192 Move X1, X19
	193 Move X2, X31
	194 Call String.Format, X0, X1
	195 Move X19, X0
	196 Move X0, 0x2244000
	197 Move X0, [X0+1456]
	198 Call 0x1C17D08
	199 Call 0x1C17F10
	200 Move X1, X19
	201 Move X2, X31
	202 Move X20, X0
	203 Call InvalidOperationException..ctor, X0, X1
	204 Move X0, 0x224F000
	205 Move X0, [X0+3992]
	206 Call 0x1C17D08
	207 Move X1, X0
	208 Move X0, X20
	209 Call 0x1C17DEC
	210 Call 0x3EB2B20

Method: Fusion.NetworkSpawnStatus TrySpawn(Fusion.NetworkPrefabId typeId, out Fusion.NetworkObject obj, System.Nullable`1<UnityEngine.Vector3> position = null, System.Nullable`1<UnityEngine.Quaternion> rotation = null, System.Nullable`1<Fusion.PlayerRef> inputAuthority = null, Fusion.NetworkRunner/OnBeforeSpawned onBeforeSpawned = null, Fusion.NetworkSpawnFlags flags = 0)

Disassembly:
	0x01EB0D18 ADD X8, X31, 0x0
	0x01EB0D1C AND W29, W26, 0x1
	0x01EB0D20 ORR X26, X8, 0xF
	0x01EB0D24 MOV X8, X26
	0x01EB0D28 BL 0x263221C
	0x01EB0D2C LDR X2, [X28]
	0x01EB0D30 MOVN W8, 0x0
	0x01EB0D34 ADD X1, X31, 0x0
	0x01EB0D38 MOV X0, X26
	0x01EB0D3C STR W25, [X31 + 0x4C]
	0x01EB0D40 STR X23, [X31 + 0x50]
	0x01EB0D44 STP X24, X22, [X31 + 0x20]
	0x01EB0D48 STR X21, [X31 + 0x30]
	0x01EB0D4C STRH W20, [X31 + 0x38]
	0x01EB0D50 STR X19, [X31 + 0x40]
	0x01EB0D54 STRB W29, [X31 + 0x48]
	0x01EB0D58 STR W8, [X31]
	0x01EB0D5C BL 0x1FD0314
	0x01EB0D60 LDR X1, [X27]
	0x01EB0D64 MOV X0, X26
	0x01EB0D68 BL 0x2632230
	0x01EB0D6C LDP X20, X19, [X31 + 0xD0]
	0x01EB0D70 LDP X22, X21, [X31 + 0xC0]
	0x01EB0D74 LDP X24, X23, [X31 + 0xB0]
	0x01EB0D78 LDP X26, X25, [X31 + 0xA0]
	0x01EB0D7C LDP X28, X27, [X31 + 0x90]
	0x01EB0D80 LDP X29, X30, [X31 + 0x80]
	0x01EB0D84 ADD X31, X31, 0xE0
	0x01EB0D88 RET
	0x01EB0D8C STR X29, [X31 - 0x50]!
	0x01EB0D90 STP X30, X25, [X31 + 0x10]
	0x01EB0D94 STP X24, X23, [X31 + 0x20]
	0x01EB0D98 STP X22, X21, [X31 + 0x30]
	0x01EB0D9C STP X20, X19, [X31 + 0x40]
	0x01EB0DA0 SUB X31, X31, 0x280
	0x01EB0DA4 MRS X21, 0xC000
	0x01EB0DA8 LDR X8, [X21 + 0x28]
	0x01EB0DAC ADRP X22, 0x2529000
	0x01EB0DB0 MOV X20, X1
	0x01EB0DB4 MOV X19, X0
	0x01EB0DB8 STR X8, [X31 + 0x278]
	0x01EB0DBC LDRB W8, [X22 + 0x39D]
	0x01EB0DC0 TBNZ X8, 0x0, 0x1EB0E08
	0x01EB0DC4 ADRP X0, 0x224D000
	0x01EB0DC8 LDR X0, [X0 + 0x170]
	0x01EB0DCC BL 0x1C16CF4
	0x01EB0DD0 ADRP X0, 0x2247000
	0x01EB0DD4 LDR X0, [X0 + 0xFD8]
	0x01EB0DD8 BL 0x1C16CF4
	0x01EB0DDC ADRP X0, 0x224E000
	0x01EB0DE0 LDR X0, [X0 + 0xFF0]
	0x01EB0DE4 BL 0x1C16CF4
	0x01EB0DE8 ADRP X0, 0x224E000
	0x01EB0DEC LDR X0, [X0 + 0xFF8]
	0x01EB0DF0 BL 0x1C16CF4
	0x01EB0DF4 ADRP X0, 0x2244000
	0x01EB0DF8 LDR X0, [X0 + 0x7B8]
	0x01EB0DFC BL 0x1C16CF4
	0x01EB0E00 MOVZ W8, 0x1
	0x01EB0E04 STRB W8, [X22 + 0x39D]
	0x01EB0E08 ADRP X24, 0x224E000
	0x01EB0E0C ADRP X23, 0x2244000
	0x01EB0E10 ADRP X22, 0x224E000
	0x01EB0E14 LDRB W8, [X19 + 0x1A0]
	0x01EB0E18 LDR X24, [X24 + 0xFF0]
	0x01EB0E1C LDR X23, [X23 + 0x7B8]
	0x01EB0E20 LDR X22, [X22 + 0xFF8]
	0x01EB0E24 CBZ W8, 0x1EB0E90
	0x01EB0E28 LDR X0, [X24]
	0x01EB0E2C BL 0x1C16F10
	0x01EB0E30 MOV X19, X0
	0x01EB0E34 MOVZ W1, 0x15
	0x01EB0E38 MOV X2, X31
	0x01EB0E3C MOV X3, X31
	0x01EB0E40 MOV X4, X31
	0x01EB0E44 BL 0x1EB3D98
	0x01EB0E48 LDR X0, [X23]
	0x01EB0E4C LDR W8, [X0 + 0xE0]
	0x01EB0E50 CBNZ W8, 0x1EB0E58
	0x01EB0E54 BL 0x1C16DFC
	0x01EB0E58 LDR X1, [X22]
	0x01EB0E5C MOV X0, X19
	0x01EB0E60 BL 0x229A308
	0x01EB0E64 LDR X8, [X21 + 0x28]
	0x01EB0E68 LDR X9, [X31 + 0x278]
	0x01EB0E6C CMP X8, X9
	0x01EB0E70 B.NE 0x1EB0FF0
	0x01EB0E74 ADD X31, X31, 0x280
	0x01EB0E78 LDP X20, X19, [X31 + 0x40]
	0x01EB0E7C LDP X22, X21, [X31 + 0x30]
	0x01EB0E80 LDP X24, X23, [X31 + 0x20]
	0x01EB0E84 LDP X30, X25, [X31 + 0x10]
	0x01EB0E88 LDR X29, [X31], #0x50
	0x01EB0E8C RET
	0x01EB0E90 LDR X0, [X19 + 0x1B0]
	0x01EB0E94 MOVZ W8, 0x1
	0x01EB0E98 STRB W8, [X19 + 0x1A0]
	0x01EB0E9C CBZ X0, 0x1EB0ED0
	0x01EB0EA0 MOV X1, X31
	0x01EB0EA4 BL 0x1E686D4
	0x01EB0EA8 ADRP X8, 0x2247000
	0x01EB0EAC LDR X8, [X8 + 0xFD8]
	0x01EB0EB0 AND W1, W0, 0x1
	0x01EB0EB4 ADD X0, X31, 0x4
	0x01EB0EB8 STRH W31, [X31 + 0x4]
	0x01EB0EBC LDR X2, [X8]
	0x01EB0EC0 BL 0x242D570
	0x01EB0EC4 LDRH W8, [X31 + 0x4]
	0x01EB0EC8 CMP W8, 0xFF
	0x01EB0ECC B.HI 0x1EB0F14
	0x01EB0ED0 LDR X0, [X19 + 0x50]
	0x01EB0ED4 CBZ X0, 0x1EB0EE4
	0x01EB0ED8 MOV X1, X31
	0x01EB0EDC BL 0x1EC0A3C
	0x01EB0EE0 TBNZ X0, 0x0, 0x1EB0EEC
	0x01EB0EE4 LDR W8, [X19 + 0x5C]
	0x01EB0EE8 CBZ W8, 0x1EB0F00
	0x01EB0EEC LDR X0, [X19 + 0x50]
	0x01EB0EF0 CBZ X0, 0x1EB0F14
	0x01EB0EF4 MOV X1, X31
	0x01EB0EF8 BL 0x1EC0A3C
	0x01EB0EFC TBZ X0, 0x0, 0x1EB0F14
	0x01EB0F00 LDR X0, [X24]
	0x01EB0F04 BL 0x1C16F10
	0x01EB0F08 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], X30
	003 Move [X31+136], X27
	004 Move [X31+144], X26
	005 Move [X31+152], X25
	006 Move [X31+160], X24
	007 Move [X31+168], X23
	008 Move [X31+176], X22
	009 Move [X31+184], X21
	010 Move [X31+192], X20
	011 Move [X31+200], X19
	012 Move X26, 0x252A000
	013 Move W8, [X26+915]
	014 Move X21, X7
	015 Move X22, X6
	016 Move X23, X5
	017 Move X24, X4
	018 Move X25, X3
	019 Move X19, X2
	020 Move X20, X0
	021 Move [X31+120], W1
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x224F000
	027 Move X0, [X0+888]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X26+915], W8
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 Add X0, X31, 120
	033 Move X1, X31
	034 Move [X31+112], X31
	035 Move [X31+80], V0
	036 Move [X31+88], V0
	037 Move [X31+48], V0
	038 Move [X31+56], V0
	039 Move [X31+2], V0
	040 Call NetworkPrefabId.get_IsValid, X0
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {129}
	045 Move X8, 0x224F000
	046 Move X8, [X8+888]
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Move W26, [X31+120]
	049 Move X0, [X8]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, X26
	055 Move X1, X31
	056 Call NetworkObjectTypeId.op_Implicit, X0
	057 Move [X31+32], X0
	058 Move [X31+40], X25
	059 Move [X31+48], X24
	060 Move W9, [X23+16]
	061 Move V0, [X23]
	062 NotImplemented "Instruction SXTH not yet implemented."
	063 Or W8, W8, 0x10000
	064 Move [X31+104], W8
	065 Move [X31+108], W31
	066 Add X8, X31, 8
	067 Add X1, X31, 32
	068 Move X0, X20
	069 Move [X31+76], X22
	070 Move [X31+84], W31
	071 Move [X31+88], X21
	072 Move [X31+96], X31
	073 Move [X31+56], V0
	074 Move [X31+72], W9
	075 Move [X31+112], X31
	076 Call NetworkRunner.SpawnInternal, X0, X1
	077 Move X22, 0x252A000
	078 Move W20, [X31+16]
	079 Move W8, [X22+959]
	080 Move X21, [X31+24]
	081 Compare W8, 0
	082 JumpIfEqual {108}
	083 Compare X21, 0
	084 JumpIfEqual {115}
	085 Move X8, 0x2247000
	086 Move X8, [X8+2984]
	087 Move X9, [X21]
	088 Move X1, [X8]
	089 Move W11, [X9+304]
	090 Move W10, [X1+304]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X9, [X9+200]
	093 Add X9, X9, X10
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move [X19], X21
	097 Move X9, [X21]
	098 Move X1, [X8]
	099 Move W10, [X9+304]
	100 Move W8, [X1+304]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X9, [X9+200]
	103 Add X8, X9, X8
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X0, X21
	107 Call 0x1C181E0
	108 Move X0, 0x2247000
	109 Move X0, [X0+2984]
	110 Call 0x1C17CF4
	111 Move W8, 1
	112 Move [X22+959], W8
	113 Compare X21, 0
	114 JumpIfNotEqual {85}
	115 Move [X19], X31
	116 Move W0, W20
	117 Move X20, [X31+192]
	118 Move X19, [X31+200]
	119 Move X22, [X31+176]
	120 Move X21, [X31+184]
	121 Move X24, [X31+160]
	122 Move X23, [X31+168]
	123 Move X26, [X31+144]
	124 Move X25, [X31+152]
	125 Move X30, [X31+128]
	126 Move X27, [X31+136]
	127 Add X31, X31, 208
	128 Return X0
	129 Move X0, 0x224C000
	130 Move X0, [X0+1400]
	131 Call 0x1C17D08
	132 Call 0x1C17F10
	133 Move X19, X0
	134 Move X0, 0x224F000
	135 Move X0, [X0+3952]
	136 Call 0x1C17D08
	137 Move X1, X0
	138 Move X0, X19
	139 Move X2, X31
	140 Call ArgumentException..ctor, X0, X1
	141 Move X0, 0x224F000
	142 Move X0, [X0+4000]
	143 Call 0x1C17D08
	144 Move X1, X0
	145 Move X0, X19
	146 Call 0x1C17DEC

Method: Fusion.NetworkSpawnOp SpawnAsync(T prefab, System.Nullable`1<UnityEngine.Vector3> position = null, System.Nullable`1<UnityEngine.Quaternion> rotation = null, System.Nullable`1<Fusion.PlayerRef> inputAuthority = null, Fusion.NetworkRunner/OnBeforeSpawned onBeforeSpawned = null, Fusion.NetworkSpawnFlags flags = 0, Fusion.NetworkObjectSpawnDelegate onCompleted = null)

Disassembly:
	0x0222CA88 BL 0x1C16D08
	0x0222CA8C MOV X21, X0
	0x0222CA90 ADRP X0, 0x1EF0000
	0x0222CA94 LDR X0, [X0 + 0x1C0]
	0x0222CA98 BL 0x1C16D08
	0x0222CA9C MOV X2, X0
	0x0222CAA0 MOV X0, X20
	0x0222CAA4 MOV X1, X21
	0x0222CAA8 MOV X3, X31
	0x0222CAAC BL 0x330E16C
	0x0222CAB0 B 0x222CAE4
	0x0222CAB4 ADRP X0, 0x1ECC000
	0x0222CAB8 LDR X0, [X0 + 0x528]
	0x0222CABC BL 0x1C16D08
	0x0222CAC0 BL 0x1C16F10
	0x0222CAC4 MOV X20, X0
	0x0222CAC8 ADRP X0, 0x1EF0000
	0x0222CACC LDR X0, [X0 + 0x1C0]
	0x0222CAD0 BL 0x1C16D08
	0x0222CAD4 MOV X1, X0
	0x0222CAD8 MOV X0, X20
	0x0222CADC MOV X2, X31
	0x0222CAE0 BL 0x330E100
	0x0222CAE4 MOV X0, X20
	0x0222CAE8 MOV X1, X19
	0x0222CAEC BL 0x1C16DEC
	0x0222CAF0 STP X30, X21, [X31 - 0x20]!
	0x0222CAF4 STP X20, X19, [X31 + 0x10]
	0x0222CAF8 LDR X8, [X2 + 0x38]
	0x0222CAFC MOV X19, X2
	0x0222CB00 MOV W20, W1
	0x0222CB04 MOV X21, X0
	0x0222CB08 CBNZ X8, 0x222CB14
	0x0222CB0C MOV X0, X19
	0x0222CB10 BL 0x1C5C6E0
	0x0222CB14 CBZ X21, 0x222CBAC
	0x0222CB18 TBNZ X20, 0x1F, 0x222CB64
	0x0222CB1C LDR X8, [X19 + 0x38]
	0x0222CB20 MOV X0, X21
	0x0222CB24 LDR X1, [X8 + 0x8]
	0x0222CB28 BL 0x30CE95C
	0x0222CB2C CMP W0, W20
	0x0222CB30 B.LT 0x222CB64
	0x0222CB34 LDR W8, [X21 + 0x18]
	0x0222CB38 CMP W8, W20
	0x0222CB3C B.NE 0x222CB4C
	0x0222CB40 LDP X20, X19, [X31 + 0x10]
	0x0222CB44 LDP X30, X21, [X31], #0x20
	0x0222CB48 RET
	0x0222CB4C MOV W1, W20
	0x0222CB50 LDP X20, X19, [X31 + 0x10]
	0x0222CB54 MOV X0, X21
	0x0222CB58 MOV X2, X31
	0x0222CB5C LDP X30, X21, [X31], #0x20
	0x0222CB60 B 0x3C36C44
	0x0222CB64 ADRP X0, 0x1ECF000
	0x0222CB68 LDR X0, [X0 + 0x578]
	0x0222CB6C BL 0x1C16D08
	0x0222CB70 BL 0x1C16F10
	0x0222CB74 MOV X20, X0
	0x0222CB78 ADRP X0, 0x1EF0000
	0x0222CB7C LDR X0, [X0 + 0x1B8]
	0x0222CB80 BL 0x1C16D08
	0x0222CB84 MOV X21, X0
	0x0222CB88 ADRP X0, 0x1EF0000
	0x0222CB8C LDR X0, [X0 + 0x1C0]
	0x0222CB90 BL 0x1C16D08
	0x0222CB94 MOV X2, X0
	0x0222CB98 MOV X0, X20
	0x0222CB9C MOV X1, X21
	0x0222CBA0 MOV X3, X31
	0x0222CBA4 BL 0x330E16C
	0x0222CBA8 B 0x222CBDC
	0x0222CBAC ADRP X0, 0x1ECC000
	0x0222CBB0 LDR X0, [X0 + 0x528]
	0x0222CBB4 BL 0x1C16D08
	0x0222CBB8 BL 0x1C16F10
	0x0222CBBC MOV X20, X0
	0x0222CBC0 ADRP X0, 0x1EF0000
	0x0222CBC4 LDR X0, [X0 + 0x1C0]
	0x0222CBC8 BL 0x1C16D08
	0x0222CBCC MOV X1, X0
	0x0222CBD0 MOV X0, X20
	0x0222CBD4 MOV X2, X31
	0x0222CBD8 BL 0x330E100
	0x0222CBDC MOV X0, X20
	0x0222CBE0 MOV X1, X19
	0x0222CBE4 BL 0x1C16DEC
	0x0222CBE8 STP X30, X21, [X31 - 0x20]!
	0x0222CBEC STP X20, X19, [X31 + 0x10]
	0x0222CBF0 LDR X8, [X2 + 0x38]
	0x0222CBF4 MOV X19, X2
	0x0222CBF8 MOV W20, W1
	0x0222CBFC MOV X21, X0
	0x0222CC00 CBNZ X8, 0x222CC0C
	0x0222CC04 MOV X0, X19
	0x0222CC08 BL 0x1C5C6E0
	0x0222CC0C CBZ X21, 0x222CCB8
	0x0222CC10 TBNZ X20, 0x1F, 0x222CC70
	0x0222CC14 LDR X8, [X19 + 0x38]
	0x0222CC18 MOV X0, X21
	0x0222CC1C LDR X1, [X8 + 0x8]
	0x0222CC20 LDR X8, [X1]
	0x0222CC24 BLR X8
	0x0222CC28 CMP W0, W20
	0x0222CC2C B.LT 0x222CC70
	0x0222CC30 LDR X8, [X19 + 0x38]
	0x0222CC34 MOV X0, X21
	0x0222CC38 LDR X1, [X8 + 0x10]
	0x0222CC3C LDR X8, [X1]
	0x0222CC40 BLR X8
	0x0222CC44 CMP W0, W20
	0x0222CC48 B.NE 0x222CC58
	0x0222CC4C LDP X20, X19, [X31 + 0x10]
	0x0222CC50 LDP X30, X21, [X31], #0x20
	0x0222CC54 RET
	0x0222CC58 MOV W1, W20
	0x0222CC5C LDP X20, X19, [X31 + 0x10]
	0x0222CC60 MOV X0, X21
	0x0222CC64 MOV X2, X31
	0x0222CC68 LDP X30, X21, [X31], #0x20
	0x0222CC6C B 0x3C36C44
	0x0222CC70 ADRP X0, 0x1ECF000
	0x0222CC74 LDR X0, [X0 + 0x578]
	0x0222CC78 BL 0x1C16D08
	0x0222CC7C BL 0x1C16F10
	0x0222CC80 MOV X20, X0
	0x0222CC84 ADRP X0, 0x1EF0000
	0x0222CC88 LDR X0, [X0 + 0x1B8]
	0x0222CC8C BL 0x1C16D08
	0x0222CC90 MOV X21, X0
	0x0222CC94 ADRP X0, 0x1EF0000
	0x0222CC98 LDR X0, [X0 + 0x1C0]
	0x0222CC9C BL 0x1C16D08
	0x0222CCA0 MOV X2, X0
	0x0222CCA4 MOV X0, X20
	0x0222CCA8 MOV X1, X21
	0x0222CCAC MOV X3, X31
	0x0222CCB0 BL 0x330E16C
	0x0222CCB4 B 0x222CCE8
	0x0222CCB8 ADRP X0, 0x1ECC000
	0x0222CCBC LDR X0, [X0 + 0x528]
	0x0222CCC0 BL 0x1C16D08
	0x0222CCC4 BL 0x1C16F10
	0x0222CCC8 MOV X20, X0
	0x0222CCCC ADRP X0, 0x1EF0000
	0x0222CCD0 LDR X0, [X0 + 0x1C0]
	0x0222CCD4 BL 0x1C16D08
	0x0222CCD8 MOV X1, X0
	0x0222CCDC MOV X0, X20
	0x0222CCE0 MOV X2, X31
	0x0222CCE4 BL 0x330E100
	0x0222CCE8 MOV X0, X20
	0x0222CCEC MOV X1, X19
	0x0222CCF0 BL 0x1C16DEC
	0x0222CCF4 STP X30, X19, [X31 - 0x10]!
	0x0222CCF8 LDR X8, [X1 + 0x38]
	0x0222CCFC MOV X19, X0
	0x0222CD00 CBZ X8, 0x222CD10
	0x0222CD04 CBZ X19, 0x222CD1C
	0x0222CD08 LDR W0, [X19 + 0x18]
	0x0222CD0C B 0x222CD20
	0x0222CD10 MOV X0, X1
	0x0222CD14 BL 0x1C5C6E0
	0x0222CD18 CBNZ X19, 0x222CD08
	0x0222CD1C MOV W0, W31
	0x0222CD20 LDP X30, X19, [X31], #0x10
	0x0222CD24 RET
	0x0222CD28 STP X30, X19, [X31 - 0x10]!
	0x0222CD2C LDR X8, [X1 + 0x38]
	0x0222CD30 MOV X19, X0
	0x0222CD34 CBZ X8, 0x222CD44
	0x0222CD38 CBZ X19, 0x222CD50
	0x0222CD3C LDR W0, [X19 + 0x18]
	0x0222CD40 B 0x222CD54
	0x0222CD44 MOV X0, X1
	0x0222CD48 BL 0x1C5C6E0
	0x0222CD4C CBNZ X19, 0x222CD3C
	0x0222CD50 MOV W0, W31
	0x0222CD54 LDP X30, X19, [X31], #0x10
	0x0222CD58 RET
	0x0222CD5C STP X30, X19, [X31 - 0x10]!
	0x0222CD60 LDR X8, [X1 + 0x38]
	0x0222CD64 MOV X19, X0
	0x0222CD68 CBZ X8, 0x222CD78
	0x0222CD6C CBZ X19, 0x222CD84
	0x0222CD70 LDR W0, [X19 + 0x18]
	0x0222CD74 B 0x222CD88
	0x0222CD78 MOV X0, X1
	0x0222CD7C BL 0x1C5C6E0
	0x0222CD80 CBNZ X19, 0x222CD70
	0x0222CD84 MOV W0, W31
	0x0222CD88 LDP X30, X19, [X31], #0x10
	0x0222CD8C RET
	0x0222CD90 STP X30, X19, [X31 - 0x10]!
	0x0222CD94 LDR X8, [X1 + 0x38]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X19, [X31+200]
	015 Move W21, W7
	016 Move X22, X6
	017 Move X23, X5
	018 Move X9, [X19+56]
	019 Move X27, X4
	020 Move X24, X3
	021 Move X25, X2
	022 Move X28, X1
	023 Move X26, X0
	024 Move X20, X8
	025 Compare X9, 0
	026 JumpIfNotEqual {35}
	027 Move X0, 0x1EF1000
	028 Move X0, [X0+424]
	029 Call 0x1C17CF4
	030 Move X8, [X19+56]
	031 Compare X8, 0
	032 JumpIfNotEqual {35}
	033 Move X0, X19
	034 Call 0x1C5D6E0
	035 Move [X31+80], X31
	036 Move [X31+88], X31
	037 Compare X28, 0
	038 JumpIfEqual {183}
	039 Move X8, 0x1EF1000
	040 Move X8, [X8+424]
	041 Move X29, [X8]
	042 Move X8, [X29+56]
	043 Compare X8, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X29
	046 Call 0x1C5D6E0
	047 Move X0, X28
	048 Move X1, X31
	049 Call Component.get_gameObject, X0
	050 Compare X0, 0
	051 JumpIfEqual {195}
	052 Move X8, [X29+56]
	053 Add X1, X31, 88
	054 Move X2, [X8+8]
	055 Call 0x21E7600, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {196}
	060 Move [X31+80], X31
	061 Move W8, [X27+16]
	062 Move X9, [X31+192]
	063 Move V0, [X27]
	064 Move X1, [X31+88]
	065 Move [X31+48], W8
	066 Add X8, X31, 56
	067 Add X4, X31, 32
	068 Move X0, X26
	069 Move X2, X25
	070 Move X3, X24
	071 Move X5, X23
	072 Move X6, X22
	073 Move W7, W21
	074 Move [X31+2], V0
	075 Move [X31], X9
	076 Move [X31+8], X31
	077 Call NetworkRunner.SpawnAsync, X0, X1, X2, X3, X4, X5, X6, X7
	078 Move X23, 0x21AE000
	079 Move X22, [X31+56]
	080 Move V0, [X31+64]
	081 Move W8, [X23+1204]
	082 Move X21, [X31+72]
	083 Compare W8, 0
	084 JumpIfNotEqual {92}
	085 Move X0, 0x1ECB000
	086 Move X0, [X0+2976]
	087 Move [X31+1], V0
	088 Call 0x1C17CF4
	089 Move V0, [X31+1]
	090 Move W8, 1
	091 Move [X23+1204], W8
	092 Move W23, S0
	093 Move W8, W23
	094 Compare W23, 0
	095 JumpIfEqual {108}
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X24, 0x21AD000
	098 Move W8, [X24+2593]
	099 Move [X31+1], V0
	100 Compare W8, 0
	101 JumpIfEqual {122}
	102 Compare W23, 0
	103 JumpIfEqual {133}
	104 Compare X21, 0
	105 JumpIfEqual {155}
	106 Move X8, [X21]
	107 Move W9, [X8+304]
	108 Compare X21, 0
	109 JumpIfEqual {163}
	110 Move X8, 0x1ECB000
	111 Move X8, [X8+2976]
	112 Move X9, [X21]
	113 Move X8, [X8]
	114 Move W11, [X9+304]
	115 Move W10, [X8+304]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X9, [X9+200]
	118 Add X9, X9, X10
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move W8, [X21+16]
	122 Move X0, 0x1ECB000
	123 Move X0, [X0+2976]
	124 Call 0x1C17CF4
	125 Move X0, 0x1ECB000
	126 Move X0, [X0+2984]
	127 Call 0x1C17CF4
	128 Move V0, [X31+1]
	129 Move W8, 1
	130 Move [X24+2593], W8
	131 Compare W23, 0
	132 JumpIfNotEqual {104}
	133 Compare X21, 0
	134 JumpIfEqual {155}
	135 Move X9, 0x1ECB000
	136 Move X9, [X9+2976]
	137 Move X8, [X21]
	138 Move X10, [X9]
	139 Move W9, [X8+304]
	140 Move W11, [X10+304]
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X12, [X8+200]
	143 Add X11, X12, X11
	144 NotImplemented "Instruction LDUR not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X10, 0x1ECB000
	147 Move X10, [X10+2984]
	148 Move X1, [X10]
	149 Move W10, [X1+304]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X8, [X8+200]
	152 Add X8, X8, X10
	153 NotImplemented "Instruction LDUR not yet implemented."
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X0, X21
	156 Compare X0, 0
	157 JumpIfEqual {163}
	158 Move X8, [X19+56]
	159 Add X1, X31, 80
	160 Move X2, [X8+8]
	161 Call 0x21A5990, X0, X1
	162 Move V0, [X31+1]
	163 Move [X20], X22
	164 Move [X20+8], D0
	165 Move [X20+16], X21
	166 Move X20, [X31+176]
	167 Move X19, [X31+184]
	168 Move X22, [X31+160]
	169 Move X21, [X31+168]
	170 Move X24, [X31+144]
	171 Move X23, [X31+152]
	172 Move X26, [X31+128]
	173 Move X25, [X31+136]
	174 Move X28, [X31+112]
	175 Move X27, [X31+120]
	176 Move X29, [X31+96]
	177 Move X30, [X31+104]
	178 Add X31, X31, 192
	179 Return X0
	180 Move X0, [X21+24]
	181 Compare X0, 0
	182 JumpIfNotEqual {158}
	183 Move X0, 0x1ECD000
	184 Move X0, [X0+1320]
	185 Call 0x1C17D08
	186 Call 0x1C17F10
	187 Move X20, X0
	188 Move X0, 0x1ED3000
	189 Move X0, [X0+3856]
	190 Call 0x1C17D08
	191 Move X1, X0
	192 Move X0, X20
	193 Move X2, X31
	194 Call ArgumentNullException..ctor, X0, X1
	195 Call 0x1C17F20
	196 Move X0, 0x1ED0000
	197 Move X0, [X0+1400]
	198 Call 0x1C17D08
	199 Call 0x1C17F10
	200 Move X20, X0
	201 Move X0, 0x1ED3000
	202 Move X0, [X0+3864]
	203 Call 0x1C17D08
	204 Move X21, X0
	205 Move X0, 0x1ED3000
	206 Move X0, [X0+3856]
	207 Call 0x1C17D08
	208 Move X2, X0
	209 Move X0, X20
	210 Move X1, X21
	211 Move X3, X31
	212 Call ArgumentException..ctor, X0, X1, X2
	213 Move X0, X20
	214 Move X1, X19
	215 Call 0x1C17DEC
	216 Move X0, X21
	217 Call 0x1C181E0

Method: Fusion.NetworkSpawnOp SpawnAsync(UnityEngine.GameObject prefab, System.Nullable`1<UnityEngine.Vector3> position = null, System.Nullable`1<UnityEngine.Quaternion> rotation = null, System.Nullable`1<Fusion.PlayerRef> inputAuthority = null, Fusion.NetworkRunner/OnBeforeSpawned onBeforeSpawned = null, Fusion.NetworkSpawnFlags flags = 0, Fusion.NetworkObjectSpawnDelegate onCompleted = null)

Disassembly:
	0x01EB0F0C MOVZ W1, 0xF
	0x01EB0F10 B 0x1EB0E38
	0x01EB0F14 BL 0x1EA1174
	0x01EB0F18 LDR X8, [X20 + 0x118]
	0x01EB0F1C LDRB W25, [X20 + 0xC8]
	0x01EB0F20 MOV X0, X31
	0x01EB0F24 ADD X9, X8, 0x10
	0x01EB0F28 CMP X8, 0x0
	0x01EB0F2C CSEL X8, X20, X9, EQ
	0x01EB0F30 LDR W8, [X8]
	0x01EB0F34 STR W8, [X20]
	0x01EB0F38 BL 0x1E37B3C
	0x01EB0F3C LDR X8, [X20 + 0x78]
	0x01EB0F40 AND W9, W0, 0x1
	0x01EB0F44 ORR W9, W25, W9, 0x0
	0x01EB0F48 STRB W9, [X20 + 0xC8]
	0x01EB0F4C CBNZ X8, 0x1EB0F60
	0x01EB0F50 MOV X0, X31
	0x01EB0F54 BL 0x1EB7374
	0x01EB0F58 MOV X8, X0
	0x01EB0F5C CBZ X0, 0x1EB0FEC
	0x01EB0F60 MOV X0, X8
	0x01EB0F64 MOV X1, X31
	0x01EB0F68 BL 0x1EB75FC
	0x01EB0F6C LDR W8, [X20]
	0x01EB0F70 STR X0, [X20 + 0x78]
	0x01EB0F74 STR W31, [X19 + 0x5C]
	0x01EB0F78 STR W8, [X19 + 0x188]
	0x01EB0F7C LDR W8, [X20]
	0x01EB0F80 CMP W8, 0x1
	0x01EB0F84 B.NE 0x1EB0FA8
	0x01EB0F88 ADD X0, X31, 0x140
	0x01EB0F8C MOVZ W2, 0x138
	0x01EB0F90 MOV X1, X20
	0x01EB0F94 BL 0x3EB1AC0
	0x01EB0F98 ADD X1, X31, 0x140
	0x01EB0F9C MOV X0, X19
	0x01EB0FA0 BL 0x1EB0FF4
	0x01EB0FA4 B 0x1EB0E64
	0x01EB0FA8 SUB W8, W8, 0x2
	0x01EB0FAC CMP W8, 0x4
	0x01EB0FB0 B.LS 0x1EB0FCC
	0x01EB0FB4 STR W31, [X19 + 0x188]
	0x01EB0FB8 LDR X0, [X24]
	0x01EB0FBC BL 0x1C16F10
	0x01EB0FC0 MOV X19, X0
	0x01EB0FC4 MOVZ W1, 0x2
	0x01EB0FC8 B 0x1EB0E38
	0x01EB0FCC ADD X0, X31, 0x8
	0x01EB0FD0 MOVZ W2, 0x138
	0x01EB0FD4 MOV X1, X20
	0x01EB0FD8 BL 0x3EB1AC0
	0x01EB0FDC ADD X1, X31, 0x8
	0x01EB0FE0 MOV X0, X19
	0x01EB0FE4 BL 0x1EB1120
	0x01EB0FE8 B 0x1EB0E64
	0x01EB0FEC BL 0x1C16F20
	0x01EB0FF0 BL 0x3EB1B20
	0x01EB0FF4 SUB X31, X31, 0x1D0
	0x01EB0FF8 STP X29, X30, [X31 + 0x180]
	0x01EB0FFC STP X26, X25, [X31 + 0x190]
	0x01EB1000 STP X24, X23, [X31 + 0x1A0]
	0x01EB1004 STP X22, X21, [X31 + 0x1B0]
	0x01EB1008 STP X20, X19, [X31 + 0x1C0]
	0x01EB100C MRS X22, 0xC000
	0x01EB1010 LDR X8, [X22 + 0x28]
	0x01EB1014 ADRP X23, 0x2528000
	0x01EB1018 ADRP X21, 0x224D000
	0x01EB101C MOV X19, X1
	0x01EB1020 STR X8, [X31 + 0x178]
	0x01EB1024 LDRB W8, [X23 + 0x3A0]
	0x01EB1028 LDR X21, [X21 + 0xFD0]
	0x01EB102C MOV X20, X0
	0x01EB1030 TBNZ X8, 0x0, 0x1EB106C
	0x01EB1034 ADRP X0, 0x224D000
	0x01EB1038 LDR X0, [X0 + 0xFD8]
	0x01EB103C BL 0x1C16CF4
	0x01EB1040 ADRP X0, 0x224E000
	0x01EB1044 LDR X0, [X0]
	0x01EB1048 BL 0x1C16CF4
	0x01EB104C ADRP X0, 0x224D000
	0x01EB1050 LDR X0, [X0 + 0xFE8]
	0x01EB1054 BL 0x1C16CF4
	0x01EB1058 ADRP X0, 0x224D000
	0x01EB105C LDR X0, [X0 + 0xFD0]
	0x01EB1060 BL 0x1C16CF4
	0x01EB1064 MOVZ W8, 0x1
	0x01EB1068 STRB W8, [X23 + 0x3A0]
	0x01EB106C ADRP X25, 0x224D000
	0x01EB1070 ADRP X24, 0x224E000
	0x01EB1074 ADRP X23, 0x224D000
	0x01EB1078 LDR X25, [X25 + 0xFD8]
	0x01EB107C LDR X24, [X24]
	0x01EB1080 LDR X23, [X23 + 0xFE8]
	0x01EB1084 ADD X0, X31, 0x0
	0x01EB1088 MOVZ W2, 0x178
	0x01EB108C MOV W1, W31
	0x01EB1090 ADD X26, X31, 0x0
	0x01EB1094 BL 0x3EB1B10
	0x01EB1098 LDR X0, [X21]
	0x01EB109C LDR W8, [X0 + 0xE0]
	0x01EB10A0 CBNZ W8, 0x1EB10A8
	0x01EB10A4 BL 0x1C16DFC
	0x01EB10A8 LDR X0, [X25]
	0x01EB10AC ADD X21, X26, 0x8
	0x01EB10B0 MOV X8, X21
	0x01EB10B4 BL 0x263221C
	0x01EB10B8 ADD X0, X26, 0x28
	0x01EB10BC MOVZ W2, 0x138
	0x01EB10C0 MOV X1, X19
	0x01EB10C4 STR X20, [X31 + 0x20]
	0x01EB10C8 BL 0x3EB1AC0

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X29, 0x252A000
	015 Move X28, 0x2244000
	016 Move X21, X8
	017 Move W8, [X29+916]
	018 Move X28, [X28+1432]
	019 Move W19, W7
	020 Move X20, X6
	021 Move X22, X5
	022 Move X26, X4
	023 Move X23, X3
	024 Move X24, X2
	025 Move X27, X1
	026 Move X25, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {39}
	031 Move X0, 0x224F000
	032 Move X0, [X0+3848]
	033 Call 0x1C17CF4
	034 Move X0, 0x2244000
	035 Move X0, [X0+1432]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X29+916], W8
	039 Move X0, [X28]
	040 Move [X31+72], X31
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X27
	046 Move X1, X31
	047 Move X2, X31
	048 Call Object.op_Equality, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {99}
	053 Compare X27, 0
	054 JumpIfEqual {111}
	055 Move X8, 0x224F000
	056 Move X8, [X8+3848]
	057 Add X1, X31, 72
	058 Move X0, X27
	059 Move X2, [X8]
	060 Call 0x21E7600, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {112}
	065 Move W8, [X26+16]
	066 Move X9, [X31+176]
	067 Move V0, [X26]
	068 Move X1, [X31+72]
	069 Move [X31+32], W8
	070 Add X8, X31, 48
	071 Add X4, X31, 16
	072 Move X0, X25
	073 Move X2, X24
	074 Move X3, X23
	075 Move X5, X22
	076 Move X6, X20
	077 Move W7, W19
	078 Move [X31+1], V0
	079 Move [X31], X9
	080 Call NetworkRunner.SpawnAsync, X0, X1, X2, X3, X4, X5, X6, X7
	081 Move X8, [X31+64]
	082 Move V0, [X31+3]
	083 Move X20, [X31+160]
	084 Move X19, [X31+168]
	085 Move X24, [X31+128]
	086 Move X23, [X31+136]
	087 Move [X21+16], X8
	088 Move [X21], V0
	089 Move X22, [X31+144]
	090 Move X21, [X31+152]
	091 Move X26, [X31+112]
	092 Move X25, [X31+120]
	093 Move X28, [X31+96]
	094 Move X27, [X31+104]
	095 Move X29, [X31+80]
	096 Move X30, [X31+88]
	097 Add X31, X31, 176
	098 Return X0
	099 Move X0, 0x2248000
	100 Move X0, [X0+1320]
	101 Call 0x1C17D08
	102 Call 0x1C17F10
	103 Move X19, X0
	104 Move X0, 0x224E000
	105 Move X0, [X0+3856]
	106 Call 0x1C17D08
	107 Move X1, X0
	108 Move X0, X19
	109 Move X2, X31
	110 Call ArgumentNullException..ctor, X0, X1
	111 Call 0x1C17F20
	112 Move X0, 0x224B000
	113 Move X0, [X0+1400]
	114 Call 0x1C17D08
	115 Call 0x1C17F10
	116 Move X19, X0
	117 Move X0, 0x224E000
	118 Move X0, [X0+3864]
	119 Call 0x1C17D08
	120 Move X20, X0
	121 Move X0, 0x224E000
	122 Move X0, [X0+3856]
	123 Call 0x1C17D08
	124 Move X2, X0
	125 Move X0, X19
	126 Move X1, X20
	127 Move X3, X31
	128 Call ArgumentException..ctor, X0, X1, X2
	129 Move X0, 0x224E000
	130 Move X0, [X0+4008]
	131 Call 0x1C17D08
	132 Move X1, X0
	133 Move X0, X19
	134 Call 0x1C17DEC

Method: Fusion.NetworkSpawnOp SpawnAsync(Fusion.NetworkObject prefab, System.Nullable`1<UnityEngine.Vector3> position = null, System.Nullable`1<UnityEngine.Quaternion> rotation = null, System.Nullable`1<Fusion.PlayerRef> inputAuthority = null, Fusion.NetworkRunner/OnBeforeSpawned onBeforeSpawned = null, Fusion.NetworkSpawnFlags flags = 0, Fusion.NetworkObjectSpawnDelegate onCompleted = null)

Disassembly:
	0x01EB10CC LDR X2, [X24]
	0x01EB10D0 MOVN W8, 0x0
	0x01EB10D4 ADD X1, X31, 0x0
	0x01EB10D8 MOV X0, X21
	0x01EB10DC STR W8, [X31]
	0x01EB10E0 BL 0x1FD0614
	0x01EB10E4 LDR X1, [X23]
	0x01EB10E8 MOV X0, X21
	0x01EB10EC BL 0x2632230
	0x01EB10F0 LDR X8, [X22 + 0x28]
	0x01EB10F4 LDR X9, [X31 + 0x178]
	0x01EB10F8 CMP X8, X9
	0x01EB10FC B.NE 0x1EB111C
	0x01EB1100 LDP X20, X19, [X31 + 0x1C0]
	0x01EB1104 LDP X22, X21, [X31 + 0x1B0]
	0x01EB1108 LDP X24, X23, [X31 + 0x1A0]
	0x01EB110C LDP X26, X25, [X31 + 0x190]
	0x01EB1110 LDP X29, X30, [X31 + 0x180]
	0x01EB1114 ADD X31, X31, 0x1D0
	0x01EB1118 RET
	0x01EB111C BL 0x3EB1B20
	0x01EB1120 SUB X31, X31, 0x1F0
	0x01EB1124 STP X29, X30, [X31 + 0x1A0]
	0x01EB1128 STP X26, X25, [X31 + 0x1B0]
	0x01EB112C STP X24, X23, [X31 + 0x1C0]
	0x01EB1130 STP X22, X21, [X31 + 0x1D0]
	0x01EB1134 STP X20, X19, [X31 + 0x1E0]
	0x01EB1138 MRS X22, 0xC000
	0x01EB113C LDR X8, [X22 + 0x28]
	0x01EB1140 ADRP X23, 0x2528000
	0x01EB1144 ADRP X21, 0x224D000
	0x01EB1148 MOV X19, X1
	0x01EB114C STR X8, [X31 + 0x198]
	0x01EB1150 LDRB W8, [X23 + 0x3A1]
	0x01EB1154 LDR X21, [X21 + 0xFD0]
	0x01EB1158 MOV X20, X0
	0x01EB115C TBNZ X8, 0x0, 0x1EB1198
	0x01EB1160 ADRP X0, 0x224D000
	0x01EB1164 LDR X0, [X0 + 0xFD8]
	0x01EB1168 BL 0x1C16CF4
	0x01EB116C ADRP X0, 0x224E000
	0x01EB1170 LDR X0, [X0 + 0x8]
	0x01EB1174 BL 0x1C16CF4
	0x01EB1178 ADRP X0, 0x224D000
	0x01EB117C LDR X0, [X0 + 0xFE8]
	0x01EB1180 BL 0x1C16CF4
	0x01EB1184 ADRP X0, 0x224D000
	0x01EB1188 LDR X0, [X0 + 0xFD0]
	0x01EB118C BL 0x1C16CF4
	0x01EB1190 MOVZ W8, 0x1
	0x01EB1194 STRB W8, [X23 + 0x3A1]
	0x01EB1198 ADRP X25, 0x224D000
	0x01EB119C ADRP X24, 0x224E000
	0x01EB11A0 ADRP X23, 0x224D000
	0x01EB11A4 LDR X25, [X25 + 0xFD8]
	0x01EB11A8 LDR X24, [X24 + 0x8]
	0x01EB11AC LDR X23, [X23 + 0xFE8]
	0x01EB11B0 ADD X0, X31, 0x0
	0x01EB11B4 MOVZ W2, 0x198
	0x01EB11B8 MOV W1, W31
	0x01EB11BC ADD X26, X31, 0x0
	0x01EB11C0 BL 0x3EB1B10
	0x01EB11C4 LDR X0, [X21]
	0x01EB11C8 LDR W8, [X0 + 0xE0]
	0x01EB11CC CBNZ W8, 0x1EB11D4
	0x01EB11D0 BL 0x1C16DFC
	0x01EB11D4 LDR X0, [X25]
	0x01EB11D8 ADD X21, X26, 0x8
	0x01EB11DC MOV X8, X21
	0x01EB11E0 BL 0x263221C
	0x01EB11E4 ADD X0, X26, 0x28
	0x01EB11E8 MOVZ W2, 0x138
	0x01EB11EC MOV X1, X19
	0x01EB11F0 STR X20, [X31 + 0x20]
	0x01EB11F4 BL 0x3EB1AC0
	0x01EB11F8 LDR X2, [X24]
	0x01EB11FC MOVN W8, 0x0
	0x01EB1200 ADD X1, X31, 0x0
	0x01EB1204 MOV X0, X21
	0x01EB1208 STR W8, [X31]
	0x01EB120C BL 0x1FD0514
	0x01EB1210 LDR X1, [X23]
	0x01EB1214 MOV X0, X21
	0x01EB1218 BL 0x2632230
	0x01EB121C LDR X8, [X22 + 0x28]
	0x01EB1220 LDR X9, [X31 + 0x198]
	0x01EB1224 CMP X8, X9
	0x01EB1228 B.NE 0x1EB1248
	0x01EB122C LDP X20, X19, [X31 + 0x1E0]
	0x01EB1230 LDP X22, X21, [X31 + 0x1D0]
	0x01EB1234 LDP X24, X23, [X31 + 0x1C0]
	0x01EB1238 LDP X26, X25, [X31 + 0x1B0]
	0x01EB123C LDP X29, X30, [X31 + 0x1A0]
	0x01EB1240 ADD X31, X31, 0x1F0
	0x01EB1244 RET
	0x01EB1248 BL 0x3EB1B20
	0x01EB124C STR X30, [X31 - 0x50]!
	0x01EB1250 STP X26, X25, [X31 + 0x10]
	0x01EB1254 STP X24, X23, [X31 + 0x20]
	0x01EB1258 STP X22, X21, [X31 + 0x30]
	0x01EB125C STP X20, X19, [X31 + 0x40]
	0x01EB1260 ADRP X26, 0x2528000
	0x01EB1264 LDRB W8, [X26 + 0x39E]
	0x01EB1268 MOV W25, W6
	0x01EB126C MOV X21, X5
	0x01EB1270 MOV X19, X4
	0x01EB1274 MOV X24, X3
	0x01EB1278 MOV X23, X2
	0x01EB127C MOV X20, X1
	0x01EB1280 MOV X22, X0
	0x01EB1284 TBNZ X8, 0x0, 0x1EB12C0
	0x01EB1288 ADRP X0, 0x224E000
	0x01EB128C LDR X0, [X0 + 0x10]
	0x01EB1290 BL 0x1C16CF4
	0x01EB1294 ADRP X0, 0x224B000
	0x01EB1298 LDR X0, [X0 + 0xE80]
	0x01EB129C BL 0x1C16CF4
	0x01EB12A0 ADRP X0, 0x224B000
	0x01EB12A4 LDR X0, [X0 + 0xEE8]
	0x01EB12A8 BL 0x1C16CF4
	0x01EB12AC ADRP X0, 0x2243000
	0x01EB12B0 LDR X0, [X0 + 0x7B8]
	0x01EB12B4 BL 0x1C16CF4
	0x01EB12B8 MOVZ W8, 0x1
	0x01EB12BC STRB W8, [X26 + 0x39E]
	0x01EB12C0 STR X31, [X31 + 0x8]
	0x01EB12C4 CBNZ X23, 0x1EB12E8
	0x01EB12C8 ADD X0, X31, 0x8
	0x01EB12CC MOV X1, X31
	0x01EB12D0 BL 0x1E621B8
	0x01EB12D4 TBZ X0, 0x0, 0x1EB143C
	0x01EB12D8 LDR X8, [X31 + 0x8]
	0x01EB12DC CBZ X8, 0x1EB1438
	0x01EB12E0 LDR X23, [X8 + 0x20]
	0x01EB12E4 CBZ X23, 0x1EB143C
	0x01EB12E8 TBZ X25, 0x0, 0x1EB133C
	0x01EB12EC ADRP X25, 0x224B000
	0x01EB12F0 LDR X25, [X25 + 0xE80]
	0x01EB12F4 LDR X0, [X25]
	0x01EB12F8 LDR W8, [X0 + 0xE0]
	0x01EB12FC CBNZ W8, 0x1EB1308
	0x01EB1300 BL 0x1C16DFC
	0x01EB1304 LDR X0, [X25]
	0x01EB1308 LDR X8, [X0 + 0xB8]
	0x01EB130C MOV X1, X31
	0x01EB1310 LDR X0, [X8 + 0x18]
	0x01EB1314 BL 0x32277A8
	0x01EB1318 TBNZ X0, 0x0, 0x1EB133C
	0x01EB131C LDR X0, [X25]
	0x01EB1320 LDR W8, [X0 + 0xE0]
	0x01EB1324 CBNZ W8, 0x1EB1330
	0x01EB1328 BL 0x1C16DFC
	0x01EB132C LDR X0, [X25]
	0x01EB1330 LDR X8, [X0 + 0xB8]
	0x01EB1334 LDR X8, [X8 + 0x18]
	0x01EB1338 STR X8, [X23 + 0x48]
	0x01EB133C LDR X25, [X22 + 0x1B0]
	0x01EB1340 CBNZ X25, 0x1EB1374
	0x01EB1344 ADRP X8, 0x224E000
	0x01EB1348 LDR X8, [X8 + 0x10]
	0x01EB134C LDR X0, [X8]
	0x01EB1350 BL 0x1C16F10
	0x01EB1354 MOV X1, X22
	0x01EB1358 MOV X2, X23
	0x01EB135C MOV X3, X24
	0x01EB1360 MOV X4, X31
	0x01EB1364 MOV X25, X0
	0x01EB1368 BL 0x1E68A44
	0x01EB136C STR X25, [X22 + 0x1B0]
	0x01EB1370 CBZ X25, 0x1EB1438
	0x01EB1374 MOV X0, X25
	0x01EB1378 MOV X1, X31
	0x01EB137C BL 0x1E68614
	0x01EB1380 TBZ X0, 0x0, 0x1EB13DC
	0x01EB1384 ADRP X19, 0x2243000
	0x01EB1388 LDR X19, [X19 + 0x7B8]
	0x01EB138C LDR X0, [X19]
	0x01EB1390 LDR W8, [X0 + 0xE0]
	0x01EB1394 CBNZ W8, 0x1EB139C
	0x01EB1398 BL 0x1C16DFC
	0x01EB139C ADRP X20, 0x2527000
	0x01EB13A0 LDRB W8, [X20 + 0xF1D]
	0x01EB13A4 CBNZ W8, 0x1EB13BC
	0x01EB13A8 ADRP X0, 0x2243000
	0x01EB13AC LDR X0, [X0 + 0x7B8]
	0x01EB13B0 BL 0x1C16CF4
	0x01EB13B4 MOVZ W8, 0x1
	0x01EB13B8 STRB W8, [X20 + 0xF1D]
	0x01EB13BC LDR X0, [X19]
	0x01EB13C0 LDR W8, [X0 + 0xE0]
	0x01EB13C4 CBNZ W8, 0x1EB13D0
	0x01EB13C8 BL 0x1C16DFC
	0x01EB13CC LDR X0, [X19]
	0x01EB13D0 LDR X8, [X0 + 0xB8]
	0x01EB13D4 LDR X0, [X8 + 0x30]
	0x01EB13D8 B 0x1EB1420
	0x01EB13DC ADRP X8, 0x224B000
	0x01EB13E0 LDR X8, [X8 + 0xEE8]
	0x01EB13E4 LDR X0, [X8]
	0x01EB13E8 BL 0x1C16F10
	0x01EB13EC MOV X1, X22
	0x01EB13F0 MOV X2, X31
	0x01EB13F4 MOV X24, X0
	0x01EB13F8 BL 0x1E6A4C8
	0x01EB13FC LDR X0, [X22 + 0x1B0]
	0x01EB1400 STR X24, [X22 + 0x190]
	0x01EB1404 CBZ X0, 0x1EB1438
	0x01EB1408 AND X4, X21, 0xFFFF
	0x01EB140C MOV X1, X23
	0x01EB1410 MOV X2, X20
	0x01EB1414 MOV X3, X19
	0x01EB1418 MOV X5, X31
	0x01EB141C BL 0x1E69430
	0x01EB1420 LDP X20, X19, [X31 + 0x40]
	0x01EB1424 LDP X22, X21, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+160], X29
	003 Move [X31+168], X30
	004 Move [X31+176], X28
	005 Move [X31+184], X27
	006 Move [X31+192], X26
	007 Move [X31+200], X25
	008 Move [X31+208], X24
	009 Move [X31+216], X23
	010 Move [X31+224], X22
	011 Move [X31+232], X21
	012 Move [X31+240], X20
	013 Move [X31+248], X19
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X9, [X29+40]
	016 Move X28, 0x2529000
	017 Move W25, W7
	018 Move X22, X6
	019 Move [X31+152], X9
	020 Move W9, [X28+917]
	021 Move X23, X5
	022 Move X24, X4
	023 Move X26, X3
	024 Move X27, X2
	025 Move X19, X1
	026 Move X20, X0
	027 Move X21, X8
	028 Move TEMP, X9
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {43}
	032 Move X0, 0x224E000
	033 Move X0, [X0+3880]
	034 Call 0x1C17CF4
	035 Move X0, 0x2246000
	036 Move X0, [X0+920]
	037 Call 0x1C17CF4
	038 Move X0, 0x224E000
	039 Move X0, [X0+888]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X28+917], W8
	043 NotImplemented "Instruction MOVI not yet implemented."
	044 Move [X31+112], X31
	045 Move [X31+104], W31
	046 Move [X31+96], X31
	047 Move [X31+64], V0
	048 Move [X31+72], V0
	049 Move [X31+32], V0
	050 Move [X31+40], V0
	051 Move [X31+1], V0
	052 Compare X19, 0
	053 JumpIfEqual {193}
	054 Move X28, 0x224E000
	055 Move X28, [X28+888]
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 Move X0, [X28]
	058 Move [X31+120], X8
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Add X0, X31, 120
	064 Move X1, X31
	065 Call NetworkObjectTypeId.get_IsValid, X0
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {112}
	070 Move X8, 0x224E000
	071 Move X8, [X8+3880]
	072 Add X1, X31, 112
	073 Move X0, X19
	074 Move X2, [X8]
	075 Call 0x21A5990, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {211}
	080 Move X9, [X20+152]
	081 Compare X9, 0
	082 JumpIfEqual {217}
	083 Move X8, [X31+112]
	084 Compare X8, 0
	085 JumpIfEqual {218}
	086 Move X0, [X9+56]
	087 Compare X0, 0
	088 JumpIfEqual {218}
	089 Move X1, [X8+32]
	090 Move X2, [X8+40]
	091 Move X3, X31
	092 Call NetworkPrefabTable.GetId, X0, X1
	093 Move [X31+104], W0
	094 Add X0, X31, 104
	095 Move X1, X31
	096 Call NetworkPrefabId.get_IsValid, X0
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {219}
	101 Move X0, [X28]
	102 Move W28, [X31+104]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Move X0, X28
	108 Move X1, X31
	109 Call NetworkObjectTypeId.op_Implicit, X0
	110 Move [X31+120], X0
	111 Move [X19+100], X0
	112 Move X28, [X31+256]
	113 Move X0, X20
	114 Call NetworkRunner.get_IsResume, X0
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {132}
	119 Move X8, [X19+32]
	120 Move [X31+8], X20
	121 Move X20, X24
	122 Move X24, X21
	123 Move X21, X29
	124 Move X29, X27
	125 Move X27, X26
	126 Move W26, W25
	127 Move X25, X23
	128 Move X23, X22
	129 Compare X8, 0
	130 JumpIfEqual {133}
	131 Move W22, [X8]
	132 Move X8, X31
	133 Move W22, W31
	134 Move X8, 0x2246000
	135 Move X8, [X8+920]
	136 Move X0, [X8]
	137 Move W8, [X0+224]
	138 Compare W8, 0
	139 JumpIfNotEqual {141}
	140 Call 0x1C17DFC
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X22, X23
	143 Move X23, X25
	144 Move W25, W26
	145 Move X26, X27
	146 Move X27, X29
	147 Move X29, X21
	148 Move X21, X24
	149 Move X24, X20
	150 Move X20, [X31+8]
	151 NotImplemented "Instruction CSEL not yet implemented."
	152 Move X9, [X31+120]
	153 Move [X31+24], X27
	154 Move [X31+32], X26
	155 NotImplemented "Instruction SXTH not yet implemented."
	156 Add X1, X31, 16
	157 Move [X31+16], X9
	158 Move W9, [X24+16]
	159 Move V0, [X24]
	160 Move [X31+96], X8
	161 Add X8, X31, 128
	162 Move X0, X20
	163 Move [X31+60], X23
	164 Move [X31+68], W31
	165 Move [X31+72], X22
	166 Move [X31+80], X28
	167 Move [X31+88], W10
	168 Move [X31+92], W31
	169 Move [X31+40], V0
	170 Move [X31+56], W9
	171 Call NetworkRunner.SpawnInternal, X0, X1
	172 Move X8, [X31+144]
	173 Move V0, [X31+8]
	174 Move [X21+16], X8
	175 Move [X21], V0
	176 Move X8, [X29+40]
	177 Move X9, [X31+152]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X20, [X31+240]
	180 Move X19, [X31+248]
	181 Move X22, [X31+224]
	182 Move X21, [X31+232]
	183 Move X24, [X31+208]
	184 Move X23, [X31+216]
	185 Move X26, [X31+192]
	186 Move X25, [X31+200]
	187 Move X28, [X31+176]
	188 Move X27, [X31+184]
	189 Move X29, [X31+160]
	190 Move X30, [X31+168]
	191 Add X31, X31, 256
	192 Return X0
	193 Move X0, 0x2248000
	194 Move X0, [X0+1320]
	195 Call 0x1C17D08
	196 Call 0x1C17F10
	197 Move X19, X0
	198 Move X0, 0x224E000
	199 Move X0, [X0+3856]
	200 Call 0x1C17D08
	201 Move X1, X0
	202 Move X0, X19
	203 Move X2, X31
	204 Call ArgumentNullException..ctor, X0, X1
	205 Move X0, 0x224E000
	206 Move X0, [X0+4016]
	207 Call 0x1C17D08
	208 Move X1, X0
	209 Move X0, X19
	210 Call 0x1C17DEC
	211 Move X0, 0x224E000
	212 Move X0, [X0+3896]
	213 Call 0x1C17D08
	214 Move X1, X19
	215 Move X2, X31
	216 Call String.Format, X0, X1
	217 Move X8, [X31+112]
	218 Call 0x1C17F20
	219 Move X20, [X31+112]
	220 Move X0, X20
	221 Call 0x19913C0
	222 Move V0, [X20+2]
	223 Move X0, 0x224E000
	224 Move [X31+8], V0
	225 Move X0, [X0+848]
	226 Call 0x1C17D08
	227 Add X1, X31, 128
	228 Call 0x1C17E04
	229 Move X20, X0
	230 Move X0, 0x224E000
	231 Move X0, [X0+3904]
	232 Call 0x1C17D08
	233 Move X1, X19
	234 Move X2, X20
	235 Move X3, X31
	236 Call String.Format, X0, X1, X2
	237 Move X19, X0
	238 Move X0, 0x2243000
	239 Move X0, [X0+1456]
	240 Call 0x1C17D08
	241 Call 0x1C17F10
	242 Move X1, X19
	243 Move X2, X31
	244 Move X20, X0
	245 Call InvalidOperationException..ctor, X0, X1
	246 Move X0, 0x224E000
	247 Move X0, [X0+4016]
	248 Call 0x1C17D08
	249 Move X1, X0
	250 Move X0, X20
	251 Call 0x1C17DEC
	252 Call 0x3EB2B20

Method: Fusion.NetworkSpawnOp SpawnAsync(Fusion.NetworkPrefabRef prefabRef, System.Nullable`1<UnityEngine.Vector3> position = null, System.Nullable`1<UnityEngine.Quaternion> rotation = null, System.Nullable`1<Fusion.PlayerRef> inputAuthority = null, Fusion.NetworkRunner/OnBeforeSpawned onBeforeSpawned = null, Fusion.NetworkSpawnFlags flags = 0, Fusion.NetworkObjectSpawnDelegate onCompleted = null)

Disassembly:
	0x01EB1428 LDP X24, X23, [X31 + 0x20]
	0x01EB142C LDP X26, X25, [X31 + 0x10]
	0x01EB1430 LDR X30, [X31], #0x50
	0x01EB1434 RET
	0x01EB1438 BL 0x1C16F20
	0x01EB143C ADRP X0, 0x2242000
	0x01EB1440 LDR X0, [X0 + 0x5B0]
	0x01EB1444 BL 0x1C16D08
	0x01EB1448 BL 0x1C16F10
	0x01EB144C MOV X19, X0
	0x01EB1450 ADRP X0, 0x224C000
	0x01EB1454 LDR X0, [X0 + 0x1A8]
	0x01EB1458 BL 0x1C16D08
	0x01EB145C MOV X1, X0
	0x01EB1460 MOV X0, X19
	0x01EB1464 MOV X2, X31
	0x01EB1468 BL 0x337DF1C
	0x01EB146C ADRP X0, 0x224E000
	0x01EB1470 LDR X0, [X0 + 0x18]
	0x01EB1474 BL 0x1C16D08
	0x01EB1478 MOV X1, X0
	0x01EB147C MOV X0, X19
	0x01EB1480 BL 0x1C16DEC
	0x01EB1484 SUB X31, X31, 0x70
	0x01EB1488 STP X30, X23, [X31 + 0x40]
	0x01EB148C STP X22, X21, [X31 + 0x50]
	0x01EB1490 STP X20, X19, [X31 + 0x60]
	0x01EB1494 ADRP X22, 0x2528000
	0x01EB1498 ADRP X21, 0x224D000
	0x01EB149C LDRB W8, [X22 + 0x3A2]
	0x01EB14A0 LDR X21, [X21 + 0xFD0]
	0x01EB14A4 MOV X19, X1
	0x01EB14A8 MOV X20, X0
	0x01EB14AC TBNZ X8, 0x0, 0x1EB14E8
	0x01EB14B0 ADRP X0, 0x224D000
	0x01EB14B4 LDR X0, [X0 + 0xFD8]
	0x01EB14B8 BL 0x1C16CF4
	0x01EB14BC ADRP X0, 0x224E000
	0x01EB14C0 LDR X0, [X0 + 0x20]
	0x01EB14C4 BL 0x1C16CF4
	0x01EB14C8 ADRP X0, 0x224D000
	0x01EB14CC LDR X0, [X0 + 0xFE8]
	0x01EB14D0 BL 0x1C16CF4
	0x01EB14D4 ADRP X0, 0x224D000
	0x01EB14D8 LDR X0, [X0 + 0xFD0]
	0x01EB14DC BL 0x1C16CF4
	0x01EB14E0 MOVZ W8, 0x1
	0x01EB14E4 STRB W8, [X22 + 0x3A2]
	0x01EB14E8 LDR X0, [X21]
	0x01EB14EC MOVI V0.2D, 0x0
	0x01EB14F0 STP V0, V0, [X31 + 0x20]
	0x01EB14F4 STP V0, V0, [X31]
	0x01EB14F8 ADRP X21, 0x224D000
	0x01EB14FC ADRP X23, 0x224E000
	0x01EB1500 ADRP X22, 0x224D000
	0x01EB1504 LDR W8, [X0 + 0xE0]
	0x01EB1508 LDR X21, [X21 + 0xFD8]
	0x01EB150C LDR X23, [X23 + 0x20]
	0x01EB1510 LDR X22, [X22 + 0xFE8]
	0x01EB1514 CBNZ W8, 0x1EB151C
	0x01EB1518 BL 0x1C16DFC
	0x01EB151C LDR X0, [X21]
	0x01EB1520 ADD X8, X31, 0x0
	0x01EB1524 ORR X21, X8, 0xF
	0x01EB1528 MOV X8, X21
	0x01EB152C BL 0x263221C
	0x01EB1530 LDR X2, [X23]
	0x01EB1534 MOVN W8, 0x0
	0x01EB1538 ADD X1, X31, 0x0
	0x01EB153C MOV X0, X21
	0x01EB1540 STP X19, X20, [X31 + 0x20]
	0x01EB1544 STR W8, [X31]
	0x01EB1548 BL 0x1FD0414
	0x01EB154C LDR X1, [X22]
	0x01EB1550 MOV X0, X21
	0x01EB1554 BL 0x2632230
	0x01EB1558 LDP X20, X19, [X31 + 0x60]
	0x01EB155C LDP X22, X21, [X31 + 0x50]
	0x01EB1560 LDP X30, X23, [X31 + 0x40]
	0x01EB1564 ADD X31, X31, 0x70
	0x01EB1568 RET
	0x01EB156C STR X30, [X31 - 0x40]!
	0x01EB1570 STP X24, X23, [X31 + 0x10]
	0x01EB1574 STP X22, X21, [X31 + 0x20]
	0x01EB1578 STP X20, X19, [X31 + 0x30]
	0x01EB157C ADRP X21, 0x2528000
	0x01EB1580 LDRB W8, [X21 + 0x3A3]
	0x01EB1584 MOV X20, X1
	0x01EB1588 MOV X19, X0
	0x01EB158C TBNZ X8, 0x0, 0x1EB15BC
	0x01EB1590 ADRP X0, 0x224D000
	0x01EB1594 LDR X0, [X0 + 0x768]
	0x01EB1598 BL 0x1C16CF4
	0x01EB159C ADRP X0, 0x224D000
	0x01EB15A0 LDR X0, [X0 + 0x770]
	0x01EB15A4 BL 0x1C16CF4
	0x01EB15A8 ADRP X0, 0x224D000
	0x01EB15AC LDR X0, [X0 + 0x778]
	0x01EB15B0 BL 0x1C16CF4
	0x01EB15B4 MOVZ W8, 0x1
	0x01EB15B8 STRB W8, [X21 + 0x3A3]
	0x01EB15BC LDR X8, [X19 + 0x68]
	0x01EB15C0 CBZ X8, 0x1EB166C
	0x01EB15C4 ADRP X23, 0x224D000
	0x01EB15C8 ADRP X24, 0x224D000
	0x01EB15CC LDR X23, [X23 + 0x778]
	0x01EB15D0 LDR X24, [X24 + 0x768]
	0x01EB15D4 MOV W21, W31
	0x01EB15D8 LDR W9, [X8 + 0x18]
	0x01EB15DC CMP W21, W9
	0x01EB15E0 B.GE 0x1EB1670
	0x01EB15E4 LDR X2, [X23]
	0x01EB15E8 MOV X0, X8
	0x01EB15EC MOV W1, W21
	0x01EB15F0 BL 0x301BCCC
	0x01EB15F4 MOV X22, X0
	0x01EB15F8 CBZ X0, 0x1EB1684
	0x01EB15FC LDR X8, [X22]
	0x01EB1600 LDR X1, [X24]
	0x01EB1604 LDRH W9, [X8 + 0x12E]
	0x01EB1608 CBZ X9, 0x1EB162C
	0x01EB160C LDR X10, [X8 + 0xB0]
	0x01EB1610 ADD X10, X10, 0x8
	0x01EB1614 LDUR X11, [X10 - 0x8]
	0x01EB1618 CMP X11, X1
	0x01EB161C B.EQ 0x1EB163C
	0x01EB1620 SUBS X9, X9, 0x1
	0x01EB1624 ADD X10, X10, 0x10
	0x01EB1628 B.NE 0x1EB1614
	0x01EB162C MOVZ W2, 0xC
	0x01EB1630 MOV X0, X22
	0x01EB1634 BL 0x1C5C788
	0x01EB1638 B 0x1EB164C
	0x01EB163C LDR W9, [X10]
	0x01EB1640 ADD W9, W9, 0xC
	0x01EB1644 ADD X8, X8, W9, 0x4, SXTW
	0x01EB1648 ADD X0, X8, 0x138
	0x01EB164C LDP X8, X3, [X0]
	0x01EB1650 MOV X0, X22
	0x01EB1654 MOV X1, X19
	0x01EB1658 MOV X2, X20
	0x01EB165C BLR X8
	0x01EB1660 LDR X8, [X19 + 0x68]
	0x01EB1664 ADD W21, W21, 0x1
	0x01EB1668 CBNZ X8, 0x1EB15D8
	0x01EB166C BL 0x1C16F20
	0x01EB1670 LDP X20, X19, [X31 + 0x30]
	0x01EB1674 LDP X22, X21, [X31 + 0x20]
	0x01EB1678 LDP X24, X23, [X31 + 0x10]
	0x01EB167C LDR X30, [X31], #0x40
	0x01EB1680 RET
	0x01EB1684 BL 0x1C16F20
	0x01EB1688 B 0x1EB1694
	0x01EB168C B 0x1EB1694
	0x01EB1690 B 0x1EB1694

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+160], X29
	003 Move [X31+168], X30
	004 Move [X31+176], X28
	005 Move [X31+184], X27
	006 Move [X31+192], X26
	007 Move [X31+200], X25
	008 Move [X31+208], X24
	009 Move [X31+216], X23
	010 Move [X31+224], X22
	011 Move [X31+232], X21
	012 Move [X31+240], X20
	013 Move [X31+248], X19
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X19, X8
	016 Move X8, [X27+40]
	017 Move X26, 0x2529000
	018 Move X21, X7
	019 Move X22, X6
	020 Move [X31+152], X8
	021 Move W8, [X26+918]
	022 Move X23, X5
	023 Move X24, X4
	024 Move X25, X3
	025 Move X20, X0
	026 Move [X31+136], X1
	027 Move [X31+144], X2
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {37}
	032 Move X0, 0x224E000
	033 Move X0, [X0+888]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X26+918], W8
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 Add X0, X31, 136
	039 Move X1, X31
	040 Move [X31+104], W31
	041 Move [X31+96], X31
	042 Move [X31+64], V0
	043 Move [X31+72], V0
	044 Move [X31+32], V0
	045 Move [X31+40], V0
	046 Move [X31+1], V0
	047 Call NetworkPrefabRef.get_IsValid, X0
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {131}
	052 Move X8, [X20+152]
	053 Compare X8, 0
	054 JumpIfEqual {56}
	055 Move X26, [X8+56]
	056 Move X26, X31
	057 Move X0, [X31+136]
	058 Move X1, [X31+144]
	059 Move X2, X31
	060 Call NetworkPrefabRef.op_Explicit, X0
	061 Compare X26, 0
	062 JumpIfEqual {154}
	063 Move X2, X0
	064 Move X3, X1
	065 Move X0, X26
	066 Move X1, X2
	067 Move X2, X3
	068 Move X3, X31
	069 Call NetworkPrefabTable.GetId, X0, X1
	070 Move [X31+104], W0
	071 Add X0, X31, 104
	072 Move X1, X31
	073 Call NetworkPrefabId.get_IsValid, X0
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {155}
	078 Move X8, 0x224E000
	079 Move X8, [X8+888]
	080 Move X28, [X31+264]
	081 NotImplemented "Instruction LDRH not yet implemented."
	082 Move W26, [X31+104]
	083 Move X0, [X8]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move X0, X26
	089 Move X1, X31
	090 Call NetworkObjectTypeId.op_Implicit, X0
	091 Move [X31+16], X0
	092 Move [X31+24], X25
	093 Move [X31+32], X24
	094 Move W9, [X23+16]
	095 Move V0, [X23]
	096 NotImplemented "Instruction SXTH not yet implemented."
	097 Move [X31+88], W8
	098 Move [X31+92], W31
	099 Add X8, X31, 112
	100 Add X1, X31, 16
	101 Move X0, X20
	102 Move [X31+60], X22
	103 Move [X31+68], W31
	104 Move [X31+72], X21
	105 Move [X31+80], X28
	106 Move [X31+40], V0
	107 Move [X31+56], W9
	108 Move [X31+96], X31
	109 Call NetworkRunner.SpawnInternal, X0, X1
	110 Move X8, [X31+128]
	111 Move V0, [X31+7]
	112 Move [X19+16], X8
	113 Move [X19], V0
	114 Move X8, [X27+40]
	115 Move X9, [X31+152]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X20, [X31+240]
	118 Move X19, [X31+248]
	119 Move X22, [X31+224]
	120 Move X21, [X31+232]
	121 Move X24, [X31+208]
	122 Move X23, [X31+216]
	123 Move X26, [X31+192]
	124 Move X25, [X31+200]
	125 Move X28, [X31+176]
	126 Move X27, [X31+184]
	127 Move X29, [X31+160]
	128 Move X30, [X31+168]
	129 Add X31, X31, 256
	130 Return X0
	131 Move X0, 0x224B000
	132 Move X0, [X0+1400]
	133 Call 0x1C17D08
	134 Call 0x1C17F10
	135 Move X19, X0
	136 Move X0, 0x224E000
	137 Move X0, [X0+3912]
	138 Call 0x1C17D08
	139 Move X20, X0
	140 Move X0, 0x224E000
	141 Move X0, [X0+3920]
	142 Call 0x1C17D08
	143 Move X2, X0
	144 Move X0, X19
	145 Move X1, X20
	146 Move X3, X31
	147 Call ArgumentException..ctor, X0, X1, X2
	148 Move X0, 0x224E000
	149 Move X0, [X0+4024]
	150 Call 0x1C17D08
	151 Move X1, X0
	152 Move X0, X19
	153 Call 0x1C17DEC
	154 Call 0x1C17F20
	155 NotImplemented "Instruction LDUR not yet implemented."
	156 Move X0, 0x224E000
	157 Move [X31+7], V0
	158 Move X0, [X0+864]
	159 Call 0x1C17D08
	160 Add X1, X31, 112
	161 Call 0x1C17E04
	162 Move X19, X0
	163 Move X0, 0x224E000
	164 Move X0, [X0+3896]
	165 Call 0x1C17D08
	166 Move X1, X19
	167 Move X2, X31
	168 Call String.Format, X0, X1
	169 Move X19, X0
	170 Move X0, 0x2243000
	171 Move X0, [X0+1456]
	172 Call 0x1C17D08
	173 Call 0x1C17F10
	174 Move X1, X19
	175 Move X2, X31
	176 Move X20, X0
	177 Call InvalidOperationException..ctor, X0, X1
	178 Move X0, 0x224E000
	179 Move X0, [X0+4024]
	180 Call 0x1C17D08
	181 Move X1, X0
	182 Move X0, X20
	183 Call 0x1C17DEC
	184 Call 0x3EB2B20

Method: Fusion.NetworkSpawnOp SpawnAsync(Fusion.NetworkObjectGuid prefabGuid, System.Nullable`1<UnityEngine.Vector3> position = null, System.Nullable`1<UnityEngine.Quaternion> rotation = null, System.Nullable`1<Fusion.PlayerRef> inputAuthority = null, Fusion.NetworkRunner/OnBeforeSpawned onBeforeSpawned = null, Fusion.NetworkSpawnFlags flags = 0, Fusion.NetworkObjectSpawnDelegate onCompleted = null)

Disassembly:
	0x01EB1694 MOV X20, X0
	0x01EB1698 CMP W1, 0x1
	0x01EB169C B.NE 0x1EB173C
	0x01EB16A0 MOV X0, X20
	0x01EB16A4 BL 0x3EB1AD0
	0x01EB16A8 MOV X20, X0
	0x01EB16AC ADRP X0, 0x2242000
	0x01EB16B0 LDR X0, [X0 + 0x7D0]
	0x01EB16B4 BL 0x1C16D08
	0x01EB16B8 LDR X8, [X20]
	0x01EB16BC LDR X1, [X8]
	0x01EB16C0 BL 0x1C17270
	0x01EB16C4 TBZ X0, 0x0, 0x1EB1714
	0x01EB16C8 LDR X20, [X20]
	0x01EB16CC BL 0x3EB1AE0
	0x01EB16D0 ADRP X0, 0x224A000
	0x01EB16D4 LDR X0, [X0 + 0x8B0]
	0x01EB16D8 BL 0x1C16D08
	0x01EB16DC LDR W8, [X0 + 0xE0]
	0x01EB16E0 CBNZ W8, 0x1EB16E8
	0x01EB16E4 BL 0x1C16DFC
	0x01EB16E8 ADRP X0, 0x224D000
	0x01EB16EC LDR X0, [X0 + 0x868]
	0x01EB16F0 BL 0x1C16D08
	0x01EB16F4 MOV X2, X0
	0x01EB16F8 MOV X0, X19
	0x01EB16FC MOV X1, X20
	0x01EB1700 LDP X20, X19, [X31 + 0x30]
	0x01EB1704 LDP X22, X21, [X31 + 0x20]
	0x01EB1708 LDP X24, X23, [X31 + 0x10]
	0x01EB170C LDR X30, [X31], #0x40
	0x01EB1710 B 0x2213878
	0x01EB1714 MOVZ W0, 0x8
	0x01EB1718 BL 0x3EB1AF0
	0x01EB171C LDR X8, [X20]
	0x01EB1720 STR X8, [X0]
	0x01EB1724 ADRP X1, 0x2003000
	0x01EB1728 ADD X1, X1, 0xE58
	0x01EB172C MOV X2, X31
	0x01EB1730 BL 0x3EB1B00
	0x01EB1734 MOV X20, X0
	0x01EB1738 BL 0x3EB1AE0
	0x01EB173C MOV X0, X20
	0x01EB1740 BL 0x1D2C690
	0x01EB1744 BL 0x1990590
	0x01EB1748 STR X30, [X31 - 0x40]!
	0x01EB174C STP X24, X23, [X31 + 0x10]
	0x01EB1750 STP X22, X21, [X31 + 0x20]
	0x01EB1754 STP X20, X19, [X31 + 0x30]
	0x01EB1758 ADRP X21, 0x2528000
	0x01EB175C LDRB W8, [X21 + 0x3A4]
	0x01EB1760 MOV X20, X1
	0x01EB1764 MOV X19, X0
	0x01EB1768 TBNZ X8, 0x0, 0x1EB1798
	0x01EB176C ADRP X0, 0x224D000
	0x01EB1770 LDR X0, [X0 + 0x768]
	0x01EB1774 BL 0x1C16CF4
	0x01EB1778 ADRP X0, 0x224D000
	0x01EB177C LDR X0, [X0 + 0x770]
	0x01EB1780 BL 0x1C16CF4
	0x01EB1784 ADRP X0, 0x224D000
	0x01EB1788 LDR X0, [X0 + 0x778]
	0x01EB178C BL 0x1C16CF4
	0x01EB1790 MOVZ W8, 0x1
	0x01EB1794 STRB W8, [X21 + 0x3A4]
	0x01EB1798 LDR X8, [X19 + 0x68]
	0x01EB179C CBZ X8, 0x1EB1848
	0x01EB17A0 ADRP X23, 0x224D000
	0x01EB17A4 ADRP X24, 0x224D000
	0x01EB17A8 LDR X23, [X23 + 0x778]
	0x01EB17AC LDR X24, [X24 + 0x768]
	0x01EB17B0 MOV W21, W31
	0x01EB17B4 LDR W9, [X8 + 0x18]
	0x01EB17B8 CMP W21, W9
	0x01EB17BC B.GE 0x1EB184C
	0x01EB17C0 LDR X2, [X23]
	0x01EB17C4 MOV X0, X8
	0x01EB17C8 MOV W1, W21
	0x01EB17CC BL 0x301BCCC
	0x01EB17D0 MOV X22, X0
	0x01EB17D4 CBZ X0, 0x1EB1860
	0x01EB17D8 LDR X8, [X22]
	0x01EB17DC LDR X1, [X24]
	0x01EB17E0 LDRH W9, [X8 + 0x12E]
	0x01EB17E4 CBZ X9, 0x1EB1808
	0x01EB17E8 LDR X10, [X8 + 0xB0]
	0x01EB17EC ADD X10, X10, 0x8
	0x01EB17F0 LDUR X11, [X10 - 0x8]
	0x01EB17F4 CMP X11, X1
	0x01EB17F8 B.EQ 0x1EB1818
	0x01EB17FC SUBS X9, X9, 0x1
	0x01EB1800 ADD X10, X10, 0x10
	0x01EB1804 B.NE 0x1EB17F0
	0x01EB1808 MOVZ W2, 0xD
	0x01EB180C MOV X0, X22
	0x01EB1810 BL 0x1C5C788
	0x01EB1814 B 0x1EB1828
	0x01EB1818 LDR W9, [X10]
	0x01EB181C ADD W9, W9, 0xD
	0x01EB1820 ADD X8, X8, W9, 0x4, SXTW
	0x01EB1824 ADD X0, X8, 0x138
	0x01EB1828 LDP X8, X3, [X0]
	0x01EB182C MOV X0, X22
	0x01EB1830 MOV X1, X19
	0x01EB1834 MOV X2, X20
	0x01EB1838 BLR X8
	0x01EB183C LDR X8, [X19 + 0x68]
	0x01EB1840 ADD W21, W21, 0x1
	0x01EB1844 CBNZ X8, 0x1EB17B4
	0x01EB1848 BL 0x1C16F20
	0x01EB184C LDP X20, X19, [X31 + 0x30]
	0x01EB1850 LDP X22, X21, [X31 + 0x20]
	0x01EB1854 LDP X24, X23, [X31 + 0x10]
	0x01EB1858 LDR X30, [X31], #0x40
	0x01EB185C RET
	0x01EB1860 BL 0x1C16F20
	0x01EB1864 B 0x1EB1870
	0x01EB1868 B 0x1EB1870
	0x01EB186C B 0x1EB1870
	0x01EB1870 MOV X20, X0
	0x01EB1874 CMP W1, 0x1
	0x01EB1878 B.NE 0x1EB1918
	0x01EB187C MOV X0, X20
	0x01EB1880 BL 0x3EB1AD0
	0x01EB1884 MOV X20, X0
	0x01EB1888 ADRP X0, 0x2242000
	0x01EB188C LDR X0, [X0 + 0x7D0]
	0x01EB1890 BL 0x1C16D08
	0x01EB1894 LDR X8, [X20]
	0x01EB1898 LDR X1, [X8]
	0x01EB189C BL 0x1C17270
	0x01EB18A0 TBZ X0, 0x0, 0x1EB18F0
	0x01EB18A4 LDR X20, [X20]
	0x01EB18A8 BL 0x3EB1AE0
	0x01EB18AC ADRP X0, 0x224A000
	0x01EB18B0 LDR X0, [X0 + 0x8B0]
	0x01EB18B4 BL 0x1C16D08
	0x01EB18B8 LDR W8, [X0 + 0xE0]
	0x01EB18BC CBNZ W8, 0x1EB18C4
	0x01EB18C0 BL 0x1C16DFC
	0x01EB18C4 ADRP X0, 0x224D000
	0x01EB18C8 LDR X0, [X0 + 0x868]
	0x01EB18CC BL 0x1C16D08
	0x01EB18D0 MOV X2, X0
	0x01EB18D4 MOV X0, X19
	0x01EB18D8 MOV X1, X20

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+160], X29
	003 Move [X31+168], X30
	004 Move [X31+176], X28
	005 Move [X31+184], X27
	006 Move [X31+192], X26
	007 Move [X31+200], X25
	008 Move [X31+208], X24
	009 Move [X31+216], X23
	010 Move [X31+224], X22
	011 Move [X31+232], X21
	012 Move [X31+240], X20
	013 Move [X31+248], X19
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X19, X8
	016 Move X8, [X27+40]
	017 Move X26, 0x2529000
	018 Move X21, X7
	019 Move X22, X6
	020 Move [X31+152], X8
	021 Move W8, [X26+919]
	022 Move X23, X5
	023 Move X24, X4
	024 Move X25, X3
	025 Move X20, X0
	026 Move [X31+136], X1
	027 Move [X31+144], X2
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {37}
	032 Move X0, 0x224E000
	033 Move X0, [X0+888]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X26+919], W8
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 Add X0, X31, 136
	039 Move X1, X31
	040 Move [X31+104], W31
	041 Move [X31+96], X31
	042 Move [X31+64], V0
	043 Move [X31+72], V0
	044 Move [X31+32], V0
	045 Move [X31+40], V0
	046 Move [X31+1], V0
	047 Call NetworkObjectGuid.get_IsValid, X0
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {124}
	052 Move X8, [X20+152]
	053 Compare X8, 0
	054 JumpIfEqual {123}
	055 Move X0, [X8+56]
	056 Compare X0, 0
	057 JumpIfEqual {123}
	058 Move X1, [X31+136]
	059 Move X2, [X31+144]
	060 Move X3, X31
	061 Call NetworkPrefabTable.GetId, X0, X1
	062 Move [X31+104], W0
	063 Add X0, X31, 104
	064 Move X1, X31
	065 Call NetworkPrefabId.get_IsValid, X0
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {147}
	070 Move X8, 0x224E000
	071 Move X8, [X8+888]
	072 Move X28, [X31+264]
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Move W26, [X31+104]
	075 Move X0, [X8]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X0, X26
	081 Move X1, X31
	082 Call NetworkObjectTypeId.op_Implicit, X0
	083 Move [X31+16], X0
	084 Move [X31+24], X25
	085 Move [X31+32], X24
	086 Move W9, [X23+16]
	087 Move V0, [X23]
	088 NotImplemented "Instruction SXTH not yet implemented."
	089 Move [X31+88], W8
	090 Move [X31+92], W31
	091 Add X8, X31, 112
	092 Add X1, X31, 16
	093 Move X0, X20
	094 Move [X31+60], X22
	095 Move [X31+68], W31
	096 Move [X31+72], X21
	097 Move [X31+80], X28
	098 Move [X31+40], V0
	099 Move [X31+56], W9
	100 Move [X31+96], X31
	101 Call NetworkRunner.SpawnInternal, X0, X1
	102 Move X8, [X31+128]
	103 Move V0, [X31+7]
	104 Move [X19+16], X8
	105 Move [X19], V0
	106 Move X8, [X27+40]
	107 Move X9, [X31+152]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X20, [X31+240]
	110 Move X19, [X31+248]
	111 Move X22, [X31+224]
	112 Move X21, [X31+232]
	113 Move X24, [X31+208]
	114 Move X23, [X31+216]
	115 Move X26, [X31+192]
	116 Move X25, [X31+200]
	117 Move X28, [X31+176]
	118 Move X27, [X31+184]
	119 Move X29, [X31+160]
	120 Move X30, [X31+168]
	121 Add X31, X31, 256
	122 Return X0
	123 Call 0x1C17F20
	124 Move X0, 0x224B000
	125 Move X0, [X0+1400]
	126 Call 0x1C17D08
	127 Call 0x1C17F10
	128 Move X19, X0
	129 Move X0, 0x224E000
	130 Move X0, [X0+3912]
	131 Call 0x1C17D08
	132 Move X20, X0
	133 Move X0, 0x224E000
	134 Move X0, [X0+3936]
	135 Call 0x1C17D08
	136 Move X2, X0
	137 Move X0, X19
	138 Move X1, X20
	139 Move X3, X31
	140 Call ArgumentException..ctor, X0, X1, X2
	141 Move X0, 0x224E000
	142 Move X0, [X0+4032]
	143 Call 0x1C17D08
	144 Move X1, X0
	145 Move X0, X19
	146 Call 0x1C17DEC
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 Move X0, 0x224E000
	149 Move [X31+7], V0
	150 Move X0, [X0+848]
	151 Call 0x1C17D08
	152 Add X1, X31, 112
	153 Call 0x1C17E04
	154 Move X19, X0
	155 Move X0, 0x224E000
	156 Move X0, [X0+3896]
	157 Call 0x1C17D08
	158 Move X1, X19
	159 Move X2, X31
	160 Call String.Format, X0, X1
	161 Move X19, X0
	162 Move X0, 0x2243000
	163 Move X0, [X0+1456]
	164 Call 0x1C17D08
	165 Call 0x1C17F10
	166 Move X1, X19
	167 Move X2, X31
	168 Move X20, X0
	169 Call InvalidOperationException..ctor, X0, X1
	170 Move X0, 0x224E000
	171 Move X0, [X0+4032]
	172 Call 0x1C17D08
	173 Move X1, X0
	174 Move X0, X20
	175 Call 0x1C17DEC
	176 Call 0x3EB2B20

Method: Fusion.NetworkSpawnOp SpawnAsync(Fusion.NetworkPrefabId typeId, System.Nullable`1<UnityEngine.Vector3> position = null, System.Nullable`1<UnityEngine.Quaternion> rotation = null, System.Nullable`1<Fusion.PlayerRef> inputAuthority = null, Fusion.NetworkRunner/OnBeforeSpawned onBeforeSpawned = null, Fusion.NetworkSpawnFlags flags = 0, Fusion.NetworkObjectSpawnDelegate onCompleted = null)

Disassembly:
	0x01EB18DC LDP X20, X19, [X31 + 0x30]
	0x01EB18E0 LDP X22, X21, [X31 + 0x20]
	0x01EB18E4 LDP X24, X23, [X31 + 0x10]
	0x01EB18E8 LDR X30, [X31], #0x40
	0x01EB18EC B 0x2213878
	0x01EB18F0 MOVZ W0, 0x8
	0x01EB18F4 BL 0x3EB1AF0
	0x01EB18F8 LDR X8, [X20]
	0x01EB18FC STR X8, [X0]
	0x01EB1900 ADRP X1, 0x2003000
	0x01EB1904 ADD X1, X1, 0xE58
	0x01EB1908 MOV X2, X31
	0x01EB190C BL 0x3EB1B00
	0x01EB1910 MOV X20, X0
	0x01EB1914 BL 0x3EB1AE0
	0x01EB1918 MOV X0, X20
	0x01EB191C BL 0x1D2C690
	0x01EB1920 BL 0x1990590
	0x01EB1924 STP X29, X30, [X31 - 0x60]!
	0x01EB1928 STP X28, X27, [X31 + 0x10]
	0x01EB192C STP X26, X25, [X31 + 0x20]
	0x01EB1930 STP X24, X23, [X31 + 0x30]
	0x01EB1934 STP X22, X21, [X31 + 0x40]
	0x01EB1938 STP X20, X19, [X31 + 0x50]
	0x01EB193C ADRP X26, 0x2528000
	0x01EB1940 ADRP X25, 0x224E000
	0x01EB1944 ADRP X20, 0x224E000
	0x01EB1948 ADRP X24, 0x224E000
	0x01EB194C ADRP X23, 0x224E000
	0x01EB1950 ADRP X22, 0x2244000
	0x01EB1954 ADRP X21, 0x2247000
	0x01EB1958 ADRP X29, 0x2247000
	0x01EB195C ADRP X28, 0x224E000
	0x01EB1960 ADRP X27, 0x224E000
	0x01EB1964 LDR X25, [X25 + 0x28]
	0x01EB1968 LDR X20, [X20 + 0x30]
	0x01EB196C LDR X24, [X24 + 0x38]
	0x01EB1970 LDR X23, [X23 + 0x40]
	0x01EB1974 LDR X22, [X22 + 0xA50]
	0x01EB1978 LDR X21, [X21 + 0x580]
	0x01EB197C LDR X29, [X29 + 0x588]
	0x01EB1980 LDR X28, [X28 + 0x48]
	0x01EB1984 LDR X27, [X27 + 0x50]
	0x01EB1988 LDRB W8, [X26 + 0x3A5]
	0x01EB198C MOV X19, X0
	0x01EB1990 TBNZ X8, 0x0, 0x1EB1A50
	0x01EB1994 ADRP X0, 0x2244000
	0x01EB1998 LDR X0, [X0 + 0xA50]
	0x01EB199C BL 0x1C16CF4
	0x01EB19A0 ADRP X0, 0x224E000
	0x01EB19A4 LDR X0, [X0 + 0x58]
	0x01EB19A8 BL 0x1C16CF4
	0x01EB19AC ADRP X0, 0x224E000
	0x01EB19B0 LDR X0, [X0 + 0x40]
	0x01EB19B4 BL 0x1C16CF4
	0x01EB19B8 ADRP X0, 0x224E000
	0x01EB19BC LDR X0, [X0 + 0x60]
	0x01EB19C0 BL 0x1C16CF4
	0x01EB19C4 ADRP X0, 0x224E000
	0x01EB19C8 LDR X0, [X0 + 0x38]
	0x01EB19CC BL 0x1C16CF4
	0x01EB19D0 ADRP X0, 0x2247000
	0x01EB19D4 LDR X0, [X0 + 0x588]
	0x01EB19D8 BL 0x1C16CF4
	0x01EB19DC ADRP X0, 0x224E000
	0x01EB19E0 LDR X0, [X0 + 0x30]
	0x01EB19E4 BL 0x1C16CF4
	0x01EB19E8 ADRP X0, 0x2247000
	0x01EB19EC LDR X0, [X0 + 0x580]
	0x01EB19F0 BL 0x1C16CF4
	0x01EB19F4 ADRP X0, 0x224E000
	0x01EB19F8 LDR X0, [X0 + 0x28]
	0x01EB19FC BL 0x1C16CF4
	0x01EB1A00 ADRP X0, 0x224E000
	0x01EB1A04 LDR X0, [X0 + 0x68]
	0x01EB1A08 BL 0x1C16CF4
	0x01EB1A0C ADRP X0, 0x224B000
	0x01EB1A10 LDR X0, [X0 + 0xEE8]
	0x01EB1A14 BL 0x1C16CF4
	0x01EB1A18 ADRP X0, 0x224E000
	0x01EB1A1C LDR X0, [X0 + 0x50]
	0x01EB1A20 BL 0x1C16CF4
	0x01EB1A24 ADRP X0, 0x224E000
	0x01EB1A28 LDR X0, [X0 + 0x48]
	0x01EB1A2C BL 0x1C16CF4
	0x01EB1A30 ADRP X0, 0x224E000
	0x01EB1A34 LDR X0, [X0 + 0x70]
	0x01EB1A38 BL 0x1C16CF4
	0x01EB1A3C ADRP X0, 0x224E000
	0x01EB1A40 LDR X0, [X0 + 0x78]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X30
	003 Move [X31+144], X28
	004 Move [X31+152], X27
	005 Move [X31+160], X26
	006 Move [X31+168], X25
	007 Move [X31+176], X24
	008 Move [X31+184], X23
	009 Move [X31+192], X22
	010 Move [X31+200], X21
	011 Move [X31+208], X20
	012 Move [X31+216], X19
	013 Move X27, 0x2529000
	014 Move X19, X8
	015 Move W8, [X27+920]
	016 Move W24, W7
	017 Move X21, X6
	018 Move X22, X5
	019 Move X23, X4
	020 Move X25, X3
	021 Move X26, X2
	022 Move X20, X0
	023 Move [X31+136], W1
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0x224E000
	029 Move X0, [X0+888]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X27+920], W8
	033 NotImplemented "Instruction MOVI not yet implemented."
	034 Add X0, X31, 136
	035 Move X1, X31
	036 Move [X31+112], X31
	037 Move [X31+80], V0
	038 Move [X31+88], V0
	039 Move [X31+48], V0
	040 Move [X31+56], V0
	041 Move [X31+2], V0
	042 Call NetworkPrefabId.get_IsValid, X0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {95}
	047 Move X8, 0x224E000
	048 Move X8, [X8+888]
	049 Move X28, [X31+224]
	050 Move W27, [X31+136]
	051 Move X0, [X8]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X27
	057 Move X1, X31
	058 Call NetworkObjectTypeId.op_Implicit, X0
	059 Move [X31+32], X0
	060 Move [X31+40], X26
	061 Move [X31+48], X25
	062 Move W9, [X23+16]
	063 Move V0, [X23]
	064 NotImplemented "Instruction SXTH not yet implemented."
	065 Move [X31+104], W8
	066 Move [X31+108], W31
	067 Add X8, X31, 8
	068 Add X1, X31, 32
	069 Move X0, X20
	070 Move [X31+76], X22
	071 Move [X31+84], W31
	072 Move [X31+88], X21
	073 Move [X31+96], X28
	074 Move [X31+56], V0
	075 Move [X31+72], W9
	076 Move [X31+112], X31
	077 Call NetworkRunner.SpawnInternal, X0, X1
	078 Move X8, [X31+24]
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 Move X22, [X31+192]
	081 Move X21, [X31+200]
	082 Move X24, [X31+176]
	083 Move X23, [X31+184]
	084 Move [X19+16], X8
	085 Move [X19], V0
	086 Move X20, [X31+208]
	087 Move X19, [X31+216]
	088 Move X26, [X31+160]
	089 Move X25, [X31+168]
	090 Move X28, [X31+144]
	091 Move X27, [X31+152]
	092 Move X30, [X31+128]
	093 Add X31, X31, 224
	094 Return X0
	095 Move X0, 0x224B000
	096 Move X0, [X0+1400]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move X19, X0
	100 Move X0, 0x224E000
	101 Move X0, [X0+3952]
	102 Call 0x1C17D08
	103 Move X1, X0
	104 Move X0, X19
	105 Move X2, X31
	106 Call ArgumentException..ctor, X0, X1
	107 Move X0, 0x224E000
	108 Move X0, [X0+4040]
	109 Call 0x1C17D08
	110 Move X1, X0
	111 Move X0, X19
	112 Call 0x1C17DEC

Method: System.Boolean get_IsCloudReady()

Disassembly:
	0x01E9EF98 LDR X0, [X0 + 0x8C0]
	0x01E9EF9C BL 0x1C16CF4
	0x01E9EFA0 ADRP X0, 0x225F000
	0x01E9EFA4 LDR X0, [X0 + 0xAA0]
	0x01E9EFA8 BL 0x1C16CF4
	0x01E9EFAC ADRP X0, 0x225F000
	0x01E9EFB0 LDR X0, [X0 + 0xAA8]
	0x01E9EFB4 BL 0x1C16CF4
	0x01E9EFB8 ADRP X0, 0x225E000
	0x01E9EFBC LDR X0, [X0 + 0xE80]
	0x01E9EFC0 BL 0x1C16CF4
	0x01E9EFC4 ADRP X0, 0x225E000
	0x01E9EFC8 LDR X0, [X0 + 0xEE8]
	0x01E9EFCC BL 0x1C16CF4
	0x01E9EFD0 ADRP X0, 0x225E000
	0x01E9EFD4 LDR X0, [X0 + 0xC20]
	0x01E9EFD8 BL 0x1C16CF4
	0x01E9EFDC ADRP X0, 0x2256000
	0x01E9EFE0 LDR X0, [X0 + 0x7B8]
	0x01E9EFE4 BL 0x1C16CF4
	0x01E9EFE8 ADRP X0, 0x2260000
	0x01E9EFEC LDR X0, [X0 + 0x808]
	0x01E9EFF0 BL 0x1C16CF4
	0x01E9EFF4 MOVZ W8, 0x1
	0x01E9EFF8 STRB W8, [X24 + 0x31C]
	0x01E9EFFC LDR X0, [X20]
	0x01E9F000 STP X31, X31, [X31 + 0x40]
	0x01E9F004 STR X31, [X31 + 0x50]
	0x01E9F008 STP X31, X31, [X31 + 0x20]
	0x01E9F00C STR X31, [X31 + 0x30]
	0x01E9F010 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x253C000
	005 Move W8, [X20+921]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x2260000
	012 Move X0, [X0+368]
	013 Call 0x1C17CF4
	014 Move X0, 0x225A000
	015 Move X0, [X0+4056]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+921], W8
	019 Move X0, [X19+432]
	020 Compare X0, 0
	021 JumpIfEqual {34}
	022 Move X19, 0x225A000
	023 Move X19, [X19+4056]
	024 Move X1, X31
	025 Call CloudServices.get_IsCloudReady, X0
	026 Move X2, [X19]
	027 And W1, W0, 1
	028 Add X0, X31, 12
	029 NotImplemented "Instruction STRH not yet implemented."
	030 Call Nullable`1<Boolean>..ctor, X0, X1
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSET not yet implemented."
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return X0

Method: System.Boolean get_IsInSession()

Disassembly:
	0x01EB1A44 BL 0x1C16CF4
	0x01EB1A48 MOVZ W8, 0x1
	0x01EB1A4C STRB W8, [X26 + 0x3A5]
	0x01EB1A50 BL 0x1C16D44
	0x01EB1A54 MOVN W26, 0x0
	0x01EB1A58 STR W26, [X19 + 0x30]
	0x01EB1A5C BL 0x1C16D44
	0x01EB1A60 MOVZ W8, 0x1
	0x01EB1A64 STR W26, [X19 + 0x34]
	0x01EB1A68 STR W8, [X19 + 0x5C]
	0x01EB1A6C LDR X0, [X25]
	0x01EB1A70 BL 0x1C16F10
	0x01EB1A74 LDR X1, [X20]
	0x01EB1A78 MOV X20, X0
	0x01EB1A7C BL 0x30162B4
	0x01EB1A80 STR X20, [X19 + 0x70]
	0x01EB1A84 LDR X0, [X24]
	0x01EB1A88 BL 0x1C16F10
	0x01EB1A8C LDR X1, [X23]
	0x01EB1A90 MOV X20, X0
	0x01EB1A94 BL 0x2A82CF8
	0x01EB1A98 STR X20, [X19 + 0xC8]
	0x01EB1A9C LDR X0, [X22]
	0x01EB1AA0 BL 0x1C16F10
	0x01EB1AA4 MOV X1, X31
	0x01EB1AA8 MOV X20, X0
	0x01EB1AAC BL 0x33DFA8C
	0x01EB1AB0 STR X20, [X19 + 0xD8]
	0x01EB1AB4 LDR X0, [X21]
	0x01EB1AB8 BL 0x1C16F10
	0x01EB1ABC LDR X1, [X29]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2529000
	005 Move W8, [X20+922]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x224D000
	012 Move X0, [X0+368]
	013 Call 0x1C17CF4
	014 Move X0, 0x2247000
	015 Move X0, [X0+4056]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+922], W8
	019 Move X0, [X19+432]
	020 Compare X0, 0
	021 JumpIfEqual {34}
	022 Move X19, 0x2247000
	023 Move X19, [X19+4056]
	024 Move X1, X31
	025 Call CloudServices.get_IsInRoom, X0
	026 Move X2, [X19]
	027 And W1, W0, 1
	028 Add X0, X31, 12
	029 NotImplemented "Instruction STRH not yet implemented."
	030 Call Nullable`1<Boolean>..ctor, X0, X1
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSET not yet implemented."
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return X0

Method: System.String get_UserId()

Disassembly:
	0x01EA2984 MOVZ W1, 0x1
	0x01EA2988 MOVZ W2, 0x1
	0x01EA298C MOV X0, X19
	0x01EA2990 MOV W3, W31
	0x01EA2994 BL 0x1E9EECC
	0x01EA2998 B 0x1EA28F8
	0x01EA299C MOVZ W0, 0x8
	0x01EA29A0 BL 0x3EB1AF0
	0x01EA29A4 LDR X8, [X20]
	0x01EA29A8 STR X8, [X0]
	0x01EA29AC ADRP X1, 0x2012000
	0x01EA29B0 ADD X1, X1, 0xE58
	0x01EA29B4 MOV X2, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call NetworkRunner.get_IsCloudReady, X0
	005 Move TEMP, X0
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfNotEqual {17}
	009 Move X0, [X19+432]
	010 Compare X0, 0
	011 JumpIfEqual {21}
	012 Move X1, X31
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call CloudServices.get_UserId, X0
	016 Return X0
	017 Move X0, X31
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return X0
	021 Call 0x1C17F20

Method: Fusion.Photon.Realtime.AuthenticationValues get_AuthenticationValues()

Disassembly:
	0x01EB1AC0 MOV X20, X0
	0x01EB1AC4 BL 0x301B7C4
	0x01EB1AC8 STR X20, [X19 + 0xE0]
	0x01EB1ACC LDR X0, [X28]
	0x01EB1AD0 BL 0x1C16F10
	0x01EB1AD4 LDR X1, [X27]
	0x01EB1AD8 MOV X20, X0
	0x01EB1ADC BL 0x2601D04
	0x01EB1AE0 STR X20, [X19 + 0xF0]
	0x01EB1AE4 ADRP X8, 0x224E000
	0x01EB1AE8 LDR X8, [X8 + 0x78]
	0x01EB1AEC LDR X0, [X8]
	0x01EB1AF0 BL 0x1C16F10

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call NetworkRunner.get_IsCloudReady, X0
	005 Move TEMP, X0
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfNotEqual {17}
	009 Move X0, [X19+432]
	010 Compare X0, 0
	011 JumpIfEqual {21}
	012 Move X1, X31
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call CloudServices.get_AuthenticationValues, X0
	016 Return X0
	017 Move X0, X31
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return X0
	021 Call 0x1C17F20

Method: Fusion.GameMode get_GameMode()

Disassembly:
	0x01EB1AF4 ADRP X8, 0x224E000
	0x01EB1AF8 LDR X8, [X8 + 0x70]

ISIL:
	001 Move W0, [X0+392]
	002 Return X0

Method: System.Void set_GameMode(Fusion.GameMode value)

Disassembly:
	0x01EB1AFC MOV X20, X0
	0x01EB1B00 LDR X1, [X8]

ISIL:
	001 Move [X0+392], W1
	002 Return 

Method: Fusion.SessionInfo get_SessionInfo()

Disassembly:
	0x01EB1B04 BL 0x267A8EC
	0x01EB1B08 STR X20, [X19 + 0x178]

ISIL:
	001 Move X0, [X0+400]
	002 Return X0

Method: System.Void set_SessionInfo(Fusion.SessionInfo value)

Disassembly:
	0x01EB1B0C ADRP X8, 0x224E000
	0x01EB1B10 LDR X8, [X8 + 0x60]

ISIL:
	001 Move [X0+400], X1
	002 Return 

Method: Fusion.LobbyInfo get_LobbyInfo()

Disassembly:
	0x01EB1B14 LDR X0, [X8]
	0x01EB1B18 BL 0x1C16F10

ISIL:
	001 Move X0, [X0+408]
	002 Return X0

Method: System.Void set_LobbyInfo(Fusion.LobbyInfo value)

Disassembly:
	0x01EB1B1C ADRP X8, 0x224E000
	0x01EB1B20 LDR X8, [X8 + 0x58]

ISIL:
	001 Move [X0+408], X1
	002 Return 

Method: Fusion.ConnectionType get_CurrentConnectionType()

Disassembly:
	0x01EB1B24 MOV X20, X0
	0x01EB1B28 LDR X1, [X8]
	0x01EB1B2C BL 0x2A4DA7C
	0x01EB1B30 STR X20, [X19 + 0x180]
	0x01EB1B34 ADRP X8, 0x224B000
	0x01EB1B38 LDR X8, [X8 + 0xEE8]
	0x01EB1B3C LDR X0, [X8]
	0x01EB1B40 BL 0x1C16F10
	0x01EB1B44 MOV X1, X31
	0x01EB1B48 MOV X2, X31
	0x01EB1B4C MOV X20, X0
	0x01EB1B50 BL 0x1E6A4C8
	0x01EB1B54 STR X20, [X19 + 0x190]
	0x01EB1B58 ADRP X8, 0x224E000
	0x01EB1B5C LDR X8, [X8 + 0x68]
	0x01EB1B60 LDR X0, [X8]
	0x01EB1B64 BL 0x1C16F10
	0x01EB1B68 MOV X1, X31
	0x01EB1B6C MOV X20, X0
	0x01EB1B70 BL 0x1E6F09C
	0x01EB1B74 STR X20, [X19 + 0x198]
	0x01EB1B78 MOV X0, X19
	0x01EB1B7C LDP X20, X19, [X31 + 0x50]
	0x01EB1B80 LDP X22, X21, [X31 + 0x40]
	0x01EB1B84 LDP X24, X23, [X31 + 0x30]
	0x01EB1B88 LDP X26, X25, [X31 + 0x20]
	0x01EB1B8C LDP X28, X27, [X31 + 0x10]
	0x01EB1B90 MOV X1, X31
	0x01EB1B94 LDP X29, X30, [X31], #0x60
	0x01EB1B98 B 0x1E82058
	0x01EB1B9C STP X30, X23, [X31 - 0x30]!
	0x01EB1BA0 STP X22, X21, [X31 + 0x10]
	0x01EB1BA4 STP X20, X19, [X31 + 0x20]
	0x01EB1BA8 ADRP X22, 0x2528000
	0x01EB1BAC ADRP X23, 0x224E000
	0x01EB1BB0 ADRP X19, 0x224E000
	0x01EB1BB4 ADRP X20, 0x224B000
	0x01EB1BB8 ADRP X21, 0x2244000
	0x01EB1BBC LDRB W8, [X22 + 0x3A6]
	0x01EB1BC0 LDR X23, [X23 + 0x80]
	0x01EB1BC4 LDR X19, [X19 + 0x88]
	0x01EB1BC8 LDR X20, [X20 + 0xE80]
	0x01EB1BCC LDR X21, [X21 + 0x278]
	0x01EB1BD0 TBNZ X8, 0x0, 0x1EB1C0C
	0x01EB1BD4 ADRP X0, 0x224E000
	0x01EB1BD8 LDR X0, [X0 + 0x88]
	0x01EB1BDC BL 0x1C16CF4
	0x01EB1BE0 ADRP X0, 0x224E000
	0x01EB1BE4 LDR X0, [X0 + 0x80]
	0x01EB1BE8 BL 0x1C16CF4
	0x01EB1BEC ADRP X0, 0x224B000
	0x01EB1BF0 LDR X0, [X0 + 0xE80]
	0x01EB1BF4 BL 0x1C16CF4
	0x01EB1BF8 ADRP X0, 0x2244000
	0x01EB1BFC LDR X0, [X0 + 0x278]
	0x01EB1C00 BL 0x1C16CF4
	0x01EB1C04 MOVZ W8, 0x1
	0x01EB1C08 STRB W8, [X22 + 0x3A6]
	0x01EB1C0C LDR X0, [X23]
	0x01EB1C10 BL 0x1C16F10
	0x01EB1C14 LDR X1, [X19]
	0x01EB1C18 MOV X19, X0
	0x01EB1C1C BL 0x301B7C4
	0x01EB1C20 LDR X8, [X20]
	0x01EB1C24 LDR X8, [X8 + 0xB8]
	0x01EB1C28 STR X19, [X8]
	0x01EB1C2C LDR X8, [X21]
	0x01EB1C30 LDR X9, [X20]
	0x01EB1C34 LDP X20, X19, [X31 + 0x20]
	0x01EB1C38 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 NotImplemented "Instruction MRS not yet implemented."
	007 Move X8, [X20+40]
	008 Move X21, 0x2529000
	009 Move X19, X0
	010 Move [X31+56], X8
	011 Move W8, [X21+923]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x224E000
	017 Move X0, [X0+2016]
	018 Call 0x1C17CF4
	019 Move X0, 0x224D000
	020 Move X0, [X0+120]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+923], W8
	024 Move X0, X19
	025 Move [X31+32], X31
	026 Move [X31+40], X31
	027 Move [X31+48], X31
	028 Call NetworkRunner.get_IsConnectedToServer, X0
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {67}
	033 Move X0, [X19+80]
	034 Compare X0, 0
	035 JumpIfEqual {78}
	036 Move X9, 0x224E000
	037 Move X9, [X9+2016]
	038 Move X8, [X0]
	039 Move X1, [X9]
	040 Move W10, [X8+304]
	041 Move W9, [X1+304]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X8, [X8+200]
	044 Add X8, X8, X9
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Add X8, X31, 8
	048 Move X1, X31
	049 Call Client.get_ServerAddress, X0
	050 Move X9, 0x224D000
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 Move X8, [X31+24]
	053 Move X9, [X9+120]
	054 Move [X31+2], V0
	055 Move [X31+48], X8
	056 Move X0, [X9]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Add X0, X31, 32
	062 Move X1, X31
	063 Call NetAddress.get_IsRelayAddr, X0
	064 And W31, W0, 1
	065 Move W8, 1
	066 NotImplemented "Instruction CINC not yet implemented."
	067 Move W0, W31
	068 Move X8, [X20+40]
	069 Move X9, [X31+56]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X20, [X31+80]
	072 Move X19, [X31+88]
	073 Move X30, [X31+64]
	074 Move X21, [X31+72]
	075 Add X31, X31, 96
	076 Return X0
	077 Call 0x1C181E0
	078 Call 0x1C17F20
	079 Call 0x3EB2B20

Method: Fusion.Sockets.Stun.NATType get_NATType()

Disassembly:
	0x01EB1C3C LDR X8, [X8 + 0xB8]
	0x01EB1C40 LDR X9, [X9 + 0xB8]
	0x01EB1C44 LDR X8, [X8]
	0x01EB1C48 STR X8, [X9 + 0x18]
	0x01EB1C4C LDP X30, X23, [X31], #0x30

ISIL:
	001 Move X0, [X0+432]
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move X1, X31
	005 Call CloudServices.get_NATType, X0
	006 Return X0
	007 Return X0

Method: System.Boolean get_IsSharedModeMasterClient()

Disassembly:
	0x01EA37F0 LDP X30, X19, [X31], #0x10
	0x01EA37F4 RET
	0x01EA37F8 STR X30, [X31 - 0x30]!
	0x01EA37FC STP X22, X21, [X31 + 0x10]
	0x01EA3800 STP X20, X19, [X31 + 0x20]
	0x01EA3804 ADRP X22, 0x2536000
	0x01EA3808 ADRP X21, 0x2253000
	0x01EA380C LDRB W8, [X22 + 0x335]
	0x01EA3810 LDR X21, [X21 + 0x398]
	0x01EA3814 MOV X19, X1
	0x01EA3818 MOV X20, X0
	0x01EA381C TBNZ X8, 0x0, 0x1EA3834
	0x01EA3820 ADRP X0, 0x2253000
	0x01EA3824 LDR X0, [X0 + 0x398]
	0x01EA3828 BL 0x1C16CF4
	0x01EA382C MOVZ W8, 0x1
	0x01EA3830 STRB W8, [X22 + 0x335]
	0x01EA3834 LDR X0, [X21]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+392]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move X19, X0
	006 Move X0, [X0+80]
	007 Compare X0, 0
	008 JumpIfEqual {23}
	009 Move X1, X31
	010 Call Simulation.get_IsClient, X0
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {23}
	015 Move X0, [X19+432]
	016 Compare X0, 0
	017 JumpIfEqual {23}
	018 Move X1, X31
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Call CloudServices.get_IsMasterClient, X0
	022 Return X0
	023 Move W0, W31
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 Return X0

Method: System.Threading.Tasks.Task`1<Fusion.StartGameResult> JoinSessionLobby(Fusion.SessionLobby sessionLobby, System.String lobbyID = null, Fusion.Photon.Realtime.AuthenticationValues authentication = null, Fusion.Photon.Realtime.FusionAppSettings customAppSettings = null, System.Nullable`1<System.Boolean> useDefaultCloudPorts = null, System.Threading.CancellationToken cancellationToken = null, System.Boolean useCachedRegions = True)

Disassembly:
	0x01EB1C50 RET
	0x01EB1C54 STR X30, [X31 - 0x10]!
	0x01EB1C58 BL 0x1EA7328
	0x01EB1C5C ORN W8, W31, W0, 0x0
	0x01EB1C60 AND W0, W8, 0x1
	0x01EB1C64 LDR X30, [X31], #0x10
	0x01EB1C68 RET
	0x01EB1C6C SUB X31, X31, 0x40
	0x01EB1C70 STP X30, X23, [X31 + 0x10]
	0x01EB1C74 STP X22, X21, [X31 + 0x20]
	0x01EB1C78 STP X20, X19, [X31 + 0x30]
	0x01EB1C7C STR W31, [X31 + 0x8]
	0x01EB1C80 STR X31, [X31]
	0x01EB1C84 MOV X22, X0
	0x01EB1C88 LDR W21, [X22 + 0x30]!
	0x01EB1C8C MOV X19, X0
	0x01EB1C90 BL 0x1C16D44
	0x01EB1C94 ADD X20, X19, 0x28
	0x01EB1C98 ADD X2, X31, 0x8
	0x01EB1C9C ADD X3, X31, 0x4
	0x01EB1CA0 ADD X4, X31, 0x0
	0x01EB1CA4 MOV X0, X19
	0x01EB1CA8 MOV X1, X20
	0x01EB1CAC BL 0x1E9E098
	0x01EB1CB0 MOV W8, W0
	0x01EB1CB4 MOV W0, W31
	0x01EB1CB8 TBZ X8, 0x0, 0x1EB1D08
	0x01EB1CBC BL 0x1C16D44
	0x01EB1CC0 LDR W23, [X31 + 0x8]
	0x01EB1CC4 MOV X0, X22
	0x01EB1CC8 MOV W2, W21
	0x01EB1CCC MOV X3, X31
	0x01EB1CD0 MOV W1, W23
	0x01EB1CD4 BL 0x33E7AB4
	0x01EB1CD8 CMP W21, W0
	0x01EB1CDC B.NE 0x1EB1D04
	0x01EB1CE0 LDR X0, [X19 + 0x1B0]
	0x01EB1CE4 CBZ X0, 0x1EB1D1C
	0x01EB1CE8 LDP W2, W4, [X31]
	0x01EB1CEC LDR X1, [X20]
	0x01EB1CF0 MOV W3, W23
	0x01EB1CF4 MOV X5, X31
	0x01EB1CF8 BL 0x1E6A82C
	0x01EB1CFC MOVZ W0, 0x1
	0x01EB1D00 B 0x1EB1D08
	0x01EB1D04 MOV W0, W31
	0x01EB1D08 LDP X20, X19, [X31 + 0x30]
	0x01EB1D0C LDP X22, X21, [X31 + 0x20]
	0x01EB1D10 LDP X30, X23, [X31 + 0x10]
	0x01EB1D14 ADD X31, X31, 0x40
	0x01EB1D18 RET
	0x01EB1D1C BL 0x1C16F20
	0x01EB1D20 STP X30, X21, [X31 - 0x20]!
	0x01EB1D24 STP X20, X19, [X31 + 0x10]
	0x01EB1D28 ADRP X21, 0x2528000
	0x01EB1D2C LDRB W8, [X21 + 0x3A7]
	0x01EB1D30 MOV X19, X1
	0x01EB1D34 MOV X20, X0
	0x01EB1D38 TBNZ X8, 0x0, 0x1EB1D50
	0x01EB1D3C ADRP X0, 0x2249000
	0x01EB1D40 LDR X0, [X0 + 0xCB0]
	0x01EB1D44 BL 0x1C16CF4
	0x01EB1D48 MOVZ W8, 0x1
	0x01EB1D4C STRB W8, [X21 + 0x3A7]
	0x01EB1D50 LDR X20, [X20 + 0x100]
	0x01EB1D54 CBZ X20, 0x1EB1DC8
	0x01EB1D58 ADRP X10, 0x2249000
	0x01EB1D5C LDR X8, [X20]
	0x01EB1D60 LDR X10, [X10 + 0xCB0]
	0x01EB1D64 LDRH W9, [X8 + 0x12E]
	0x01EB1D68 LDR X1, [X10]
	0x01EB1D6C CBZ X9, 0x1EB1D90
	0x01EB1D70 LDR X10, [X8 + 0xB0]
	0x01EB1D74 ADD X10, X10, 0x8
	0x01EB1D78 LDUR X11, [X10 - 0x8]
	0x01EB1D7C CMP X11, X1
	0x01EB1D80 B.EQ 0x1EB1DA0
	0x01EB1D84 SUBS X9, X9, 0x1
	0x01EB1D88 ADD X10, X10, 0x10

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X29
	003 Move [X31+136], X30
	004 Move [X31+144], X28
	005 Move [X31+152], X27
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X28, 0x2529000
	015 Move X27, 0x224E000
	016 Move W8, [X28+924]
	017 Move X27, [X27+4048]
	018 Move W26, W7
	019 Move X19, X6
	020 Move X20, X5
	021 Move X21, X4
	022 Move X22, X3
	023 Move X23, X2
	024 Move W25, W1
	025 Move X24, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0x224E000
	031 Move X0, [X0+4056]
	032 Call 0x1C17CF4
	033 Move X0, 0x224E000
	034 Move X0, [X0+4064]
	035 Call 0x1C17CF4
	036 Move X0, 0x224E000
	037 Move X0, [X0+4072]
	038 Call 0x1C17CF4
	039 Move X0, 0x224E000
	040 Move X0, [X0+4048]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+924], W8
	044 Move X0, [X27]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+96], V0
	047 Move [X31+104], V0
	048 Move [X31+64], V0
	049 Move [X31+72], V0
	050 Move [X31+32], V0
	051 Move [X31+40], V0
	052 Move [X31], V0
	053 Move [X31+8], V0
	054 Move X29, 0x224E000
	055 Move X28, 0x224E000
	056 Move X27, 0x224E000
	057 Move W8, [X0+224]
	058 Move X29, [X29+4056]
	059 Move X28, [X28+4064]
	060 Move X27, [X27+4072]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, [X29]
	065 Add X8, X31, 0
	066 And W29, W26, 1
	067 Or X26, X8, 15
	068 Move X8, X26
	069 Call AsyncTaskMethodBuilder`1<Object>.Create
	070 Move X2, [X28]
	071 Move TEMP, 0
	072 Not TEMP
	073 Move W8, TEMP
	074 Add X1, X31, 0
	075 Move X0, X26
	076 Move [X31+76], W25
	077 Move [X31+80], X23
	078 Move [X31+32], X24
	079 Move [X31+40], X22
	080 Move [X31+48], X21
	081 NotImplemented "Instruction STRH not yet implemented."
	082 Move [X31+64], X19
	083 Move [X31+72], W29
	084 Move [X31], W8
	085 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	086 Move X1, [X27]
	087 Move X0, X26
	088 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	089 Move X20, [X31+208]
	090 Move X19, [X31+216]
	091 Move X22, [X31+192]
	092 Move X21, [X31+200]
	093 Move X24, [X31+176]
	094 Move X23, [X31+184]
	095 Move X26, [X31+160]
	096 Move X25, [X31+168]
	097 Move X28, [X31+144]
	098 Move X27, [X31+152]
	099 Move X29, [X31+128]
	100 Move X30, [X31+136]
	101 Add X31, X31, 224
	102 Return X0

Method: System.Threading.Tasks.Task`1<Fusion.StartGameResult> StartGame(Fusion.StartGameArgs args)

Disassembly:
	0x01EB1D8C B.NE 0x1EB1D78
	0x01EB1D90 MOVZ W2, 0xA
	0x01EB1D94 MOV X0, X20
	0x01EB1D98 BL 0x1C5C788
	0x01EB1D9C B 0x1EB1DB0
	0x01EB1DA0 LDR W9, [X10]
	0x01EB1DA4 ADD W9, W9, 0xA
	0x01EB1DA8 ADD X8, X8, W9, 0x4, SXTW
	0x01EB1DAC ADD X0, X8, 0x138
	0x01EB1DB0 LDP X3, X2, [X0]
	0x01EB1DB4 AND X1, X19, 0x0
	0x01EB1DB8 MOV X0, X20
	0x01EB1DBC LDP X20, X19, [X31 + 0x10]
	0x01EB1DC0 LDP X30, X21, [X31], #0x20
	0x01EB1DC4 BR X3
	0x01EB1DC8 BL 0x1C16F20
	0x01EB1DCC B 0x1EA9A0C
	0x01EB1DD0 B 0x1EA9B10
	0x01EB1DD4 MOV X1, X31
	0x01EB1DD8 B 0x33BDD8C
	0x01EB1DDC STR X30, [X31 - 0x30]!
	0x01EB1DE0 STP X22, X21, [X31 + 0x10]
	0x01EB1DE4 STP X20, X19, [X31 + 0x20]
	0x01EB1DE8 ADRP X22, 0x2528000
	0x01EB1DEC LDRB W8, [X22 + 0x3AA]
	0x01EB1DF0 MOV X20, X2
	0x01EB1DF4 MOV X21, X1
	0x01EB1DF8 MOV X19, X0
	0x01EB1DFC TBNZ X8, 0x0, 0x1EB1E14
	0x01EB1E00 ADRP X0, 0x2245000
	0x01EB1E04 LDR X0, [X0 + 0xB50]
	0x01EB1E08 BL 0x1C16CF4
	0x01EB1E0C MOVZ W8, 0x1
	0x01EB1E10 STRB W8, [X22 + 0x3AA]
	0x01EB1E14 MOVZ W2, 0x58
	0x01EB1E18 MOV X0, X19
	0x01EB1E1C MOV X1, X21
	0x01EB1E20 BL 0x3EB1B30
	0x01EB1E24 LDR X0, [X19 + 0x40]
	0x01EB1E28 CBZ X0, 0x1EB1E68
	0x01EB1E2C MOV X1, X20
	0x01EB1E30 MOV X2, X31
	0x01EB1E34 BL 0x33C0DE4
	0x01EB1E38 CBZ X0, 0x1EB1E70
	0x01EB1E3C ADRP X8, 0x2245000
	0x01EB1E40 LDR X8, [X8 + 0xB50]
	0x01EB1E44 LDR X1, [X8]
	0x01EB1E48 LDR X8, [X0]
	0x01EB1E4C CMP X8, X1
	0x01EB1E50 B.NE 0x1EB1E64
	0x01EB1E54 STR X0, [X19 + 0x40]
	0x01EB1E58 LDR X8, [X0]
	0x01EB1E5C CMP X8, X1
	0x01EB1E60 B.EQ 0x1EB1E74
	0x01EB1E64 BL 0x1C171E0
	0x01EB1E68 STR X20, [X19 + 0x40]
	0x01EB1E6C B 0x1EB1E74
	0x01EB1E70 STR X0, [X19 + 0x40]
	0x01EB1E74 LDP X20, X19, [X31 + 0x20]
	0x01EB1E78 LDP X22, X21, [X31 + 0x10]
	0x01EB1E7C LDR X30, [X31], #0x30
	0x01EB1E80 RET
	0x01EB1E84 STP X30, X21, [X31 - 0x20]!
	0x01EB1E88 STP X20, X19, [X31 + 0x10]
	0x01EB1E8C LDR X8, [X2 + 0x8]
	0x01EB1E90 STP X1, X2, [X0 + 0x20]
	0x01EB1E94 MOV X19, X0
	0x01EB1E98 MOV X20, X1
	0x01EB1E9C STR X8, [X0 + 0x10]
	0x01EB1EA0 LDRB W21, [X2 + 0x52]
	0x01EB1EA4 STR X0, [X0 + 0x40]
	0x01EB1EA8 MOV X0, X2
	0x01EB1EAC BL 0x1C16D84
	0x01EB1EB0 TBZ X0, 0x0, 0x1EB1EC8
	0x01EB1EB4 CMP W21, 0x2
	0x01EB1EB8 B.NE 0x1EB1EE4
	0x01EB1EBC ADRP X8, 0xFFFFFFFFFFAE5000
	0x01EB1EC0 ADD X8, X8, 0x9B0
	0x01EB1EC4 B 0x1EB1ED8
	0x01EB1EC8 CMP W21, 0x1
	0x01EB1ECC B.NE 0x1EB1EE0
	0x01EB1ED0 ADRP X8, 0xFFFFFFFFFFAE5000
	0x01EB1ED4 ADD X8, X8, 0x98C
	0x01EB1ED8 STR X8, [X19 + 0x18]
	0x01EB1EDC B 0x1EB1EF4
	0x01EB1EE0 CBZ X20, 0x1EB1F0C
	0x01EB1EE4 LDR X8, [X19 + 0x10]
	0x01EB1EE8 LDR X9, [X19 + 0x20]
	0x01EB1EEC STR X8, [X19 + 0x18]
	0x01EB1EF0 STR X9, [X19 + 0x40]
	0x01EB1EF4 ADRP X8, 0xFFFFFFFFFFAE5000
	0x01EB1EF8 ADD X8, X8, 0x934
	0x01EB1EFC STR X8, [X19 + 0x38]
	0x01EB1F00 LDP X20, X19, [X31 + 0x10]
	0x01EB1F04 LDP X30, X21, [X31], #0x20
	0x01EB1F08 RET
	0x01EB1F0C ADRP X1, 0xFFFFFFFFFEC6A000
	0x01EB1F10 ADD X1, X1, 0xEE3
	0x01EB1F14 MOV X0, X31
	0x01EB1F18 BL 0x1C16F3C
	0x01EB1F1C MOV X1, X31
	0x01EB1F20 BL 0x1C16DEC
	0x01EB1F24 LDR X8, [X0 + 0x40]
	0x01EB1F28 LDR X4, [X0 + 0x18]
	0x01EB1F2C LDR X3, [X0 + 0x28]
	0x01EB1F30 MOV X0, X8
	0x01EB1F34 BR X4
	0x01EB1F38 SUB X31, X31, 0x30
	0x01EB1F3C STP X31, X30, [X31 + 0x18]
	0x01EB1F40 STP X1, X2, [X31 + 0x8]
	0x01EB1F44 ADD X1, X31, 0x8
	0x01EB1F48 MOV X2, X3
	0x01EB1F4C MOV X3, X4
	0x01EB1F50 BL 0x1C16CB0
	0x01EB1F54 LDR X30, [X31 + 0x20]
	0x01EB1F58 ADD X31, X31, 0x30
	0x01EB1F5C RET
	0x01EB1F60 MOV X0, X1
	0x01EB1F64 MOV X1, X31
	0x01EB1F68 B 0x1C16CB4
	0x01EB1F6C STP X30, X21, [X31 - 0x20]!
	0x01EB1F70 STP X20, X19, [X31 + 0x10]
	0x01EB1F74 LDR X8, [X2 + 0x8]
	0x01EB1F78 STP X1, X2, [X0 + 0x20]
	0x01EB1F7C MOV X19, X0
	0x01EB1F80 MOV X20, X1
	0x01EB1F84 STR X8, [X0 + 0x10]
	0x01EB1F88 LDRB W21, [X2 + 0x52]
	0x01EB1F8C STR X0, [X0 + 0x40]
	0x01EB1F90 MOV X0, X2
	0x01EB1F94 BL 0x1C16D84
	0x01EB1F98 TBZ X0, 0x0, 0x1EB1FB0
	0x01EB1F9C CMP W21, 0x2
	0x01EB1FA0 B.NE 0x1EB1FCC
	0x01EB1FA4 ADRP X8, 0xFFFFFFFFFFAE5000
	0x01EB1FA8 ADD X8, X8, 0xA40
	0x01EB1FAC B 0x1EB1FC0
	0x01EB1FB0 CMP W21, 0x1
	0x01EB1FB4 B.NE 0x1EB1FC8
	0x01EB1FB8 ADRP X8, 0xFFFFFFFFFFAE5000
	0x01EB1FBC ADD X8, X8, 0xA1C
	0x01EB1FC0 STR X8, [X19 + 0x18]
	0x01EB1FC4 B 0x1EB1FDC
	0x01EB1FC8 CBZ X20, 0x1EB1FF4
	0x01EB1FCC LDR X8, [X19 + 0x10]
	0x01EB1FD0 LDR X9, [X19 + 0x20]
	0x01EB1FD4 STR X8, [X19 + 0x18]
	0x01EB1FD8 STR X9, [X19 + 0x40]
	0x01EB1FDC ADRP X8, 0xFFFFFFFFFFAE5000
	0x01EB1FE0 ADD X8, X8, 0x9C4
	0x01EB1FE4 STR X8, [X19 + 0x38]
	0x01EB1FE8 LDP X20, X19, [X31 + 0x10]
	0x01EB1FEC LDP X30, X21, [X31], #0x20
	0x01EB1FF0 RET

ISIL:
	001 Move [X31-80], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Subtract X31, X31, 640
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X21+40]
	013 Move X22, 0x2529000
	014 Move X20, X1
	015 Move X19, X0
	016 Move [X31+632], X8
	017 Move W8, [X22+925]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {39}
	022 Move X0, 0x224D000
	023 Move X0, [X0+368]
	024 Call 0x1C17CF4
	025 Move X0, 0x2247000
	026 Move X0, [X0+4056]
	027 Call 0x1C17CF4
	028 Move X0, 0x224E000
	029 Move X0, [X0+4080]
	030 Call 0x1C17CF4
	031 Move X0, 0x224E000
	032 Move X0, [X0+4088]
	033 Call 0x1C17CF4
	034 Move X0, 0x2244000
	035 Move X0, [X0+1976]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X22+925], W8
	039 Move X24, 0x224E000
	040 Move X23, 0x2244000
	041 Move X22, 0x224E000
	042 Move W8, [X19+416]
	043 Move X24, [X24+4080]
	044 Move X23, [X23+1976]
	045 Move X22, [X22+4088]
	046 Compare W8, 0
	047 JumpIfEqual {78}
	048 Move X0, [X24]
	049 Call 0x1C17F10
	050 Move X19, X0
	051 Move W1, 21
	052 Move X2, X31
	053 Move X3, X31
	054 Move X4, X31
	055 Call StartGameResult..ctor, X0, X1, X2, X3
	056 Move X0, [X23]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X1, [X22]
	062 Move X0, X19
	063 Call Task.FromResult, X0
	064 Move X8, [X21+40]
	065 Move X9, [X31+632]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Add X31, X31, 640
	068 Move X20, [X31+64]
	069 Move X19, [X31+72]
	070 Move X22, [X31+48]
	071 Move X21, [X31+56]
	072 Move X24, [X31+32]
	073 Move X23, [X31+40]
	074 Move X30, [X31+16]
	075 Move X25, [X31+24]
	076 Move X29, [X31+80]
	077 Return X0
	078 Move X0, [X19+432]
	079 Move W8, 1
	080 Move [X19+416], W8
	081 Compare X0, 0
	082 JumpIfEqual {94}
	083 Move X1, X31
	084 Call CloudServices.get_IsInLobby, X0
	085 Move X8, 0x2247000
	086 Move X8, [X8+4056]
	087 And W1, W0, 1
	088 Add X0, X31, 4
	089 NotImplemented "Instruction STRH not yet implemented."
	090 Move X2, [X8]
	091 Call Nullable`1<Boolean>..ctor, X0, X1
	092 NotImplemented "Instruction LDRH not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X0, [X19+80]
	095 Compare X0, 0
	096 JumpIfEqual {103}
	097 Move X1, X31
	098 Call Simulation.get_IsRunning, X0
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {106}
	103 Move W8, [X19+92]
	104 Compare W8, 0
	105 JumpIfEqual {115}
	106 Move X0, [X19+80]
	107 Compare X0, 0
	108 JumpIfEqual {119}
	109 Move X1, X31
	110 Call Simulation.get_IsRunning, X0
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {119}
	115 Move X0, [X24]
	116 Call 0x1C17F10
	117 Move X19, X0
	118 Move W1, 15
	119 Call NetworkRunner.InitFusionLogSystem, X0
	120 Move X8, [X20+280]
	121 Move W25, [X20+200]
	122 Move X0, X31
	123 Add X9, X8, 16
	124 NotImplemented "Instruction CMP not yet implemented."
	125 NotImplemented "Instruction CSEL not yet implemented."
	126 Move W8, [X8]
	127 Move [X20], W8
	128 Call RuntimeUnityFlagsSetup.get_IsUNITY_WEBGL
	129 Move X8, [X20+120]
	130 And W9, W0, 1
	131 Or W9, W25, W9
	132 Move [X20+200], W9
	133 Compare X8, 0
	134 JumpIfNotEqual {140}
	135 Move X0, X31
	136 Call NetworkProjectConfig.get_Global
	137 Move X8, X0
	138 Compare X0, 0
	139 JumpIfEqual {170}
	140 Move X0, X8
	141 Move X1, X31
	142 Call NetworkProjectConfig.Copy, X0
	143 Move W8, [X20]
	144 Move [X20+120], X0
	145 Move [X19+92], W31
	146 Move [X19+392], W8
	147 Move W8, [X20]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Add X0, X31, 320
	150 Move W2, 312
	151 Move X1, X20
	152 Call 0x3EB2AC0
	153 Add X1, X31, 320
	154 Move X0, X19
	155 Call NetworkRunner.StartGameModeSinglePlayer, X0, X1
	156 Subtract W8, W8, 2
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move [X19+392], W31
	159 Move X0, [X24]
	160 Call 0x1C17F10
	161 Move X19, X0
	162 Move W1, 2
	163 Add X0, X31, 8
	164 Move W2, 312
	165 Move X1, X20
	166 Call 0x3EB2AC0
	167 Add X1, X31, 8
	168 Move X0, X19
	169 Call NetworkRunner.StartGameModeCloud, X0, X1
	170 Call 0x1C17F20
	171 Call 0x3EB2B20

Method: System.Threading.Tasks.Task ConnectToCloud(Fusion.Photon.Realtime.AuthenticationValues authentication = null, Fusion.Photon.Realtime.FusionAppSettings customAppSettings = null, Fusion.CloudCommunicator externalCommunicator = null, System.Threading.CancellationToken externalCancellationToken = null, System.Nullable`1<System.Boolean> useDefaultCloudPorts = null, System.Boolean useCachedRegions = False)

Disassembly:
	0x01EB224C LDR X1, [X22]
	0x01EB2250 ADRP X25, 0x224D000
	0x01EB2254 LDR X25, [X25 + 0x98]
	0x01EB2258 MOV X2, X31
	0x01EB225C BL 0x32333E0
	0x01EB2260 MOV X21, X0
	0x01EB2264 LDR V0, [X24]
	0x01EB2268 LDR X0, [X25]
	0x01EB226C ADD X1, X31, 0x0
	0x01EB2270 STR V0, [X31]
	0x01EB2274 BL 0x1C16E04
	0x01EB2278 CBZ X21, 0x1EB24D4
	0x01EB227C MOV X1, X0
	0x01EB2280 MOV X0, X21
	0x01EB2284 MOV X2, X31
	0x01EB2288 BL 0x3233F90
	0x01EB228C MOV X24, X19
	0x01EB2290 LDRB W8, [X24 + 0x18]!
	0x01EB2294 CBZ W8, 0x1EB230C
	0x01EB2298 LDR X1, [X23]
	0x01EB229C MOV X0, X20
	0x01EB22A0 MOV X2, X31
	0x01EB22A4 BL 0x32333E0
	0x01EB22A8 CBZ X0, 0x1EB24D4
	0x01EB22AC ADRP X8, 0x224D000
	0x01EB22B0 LDR X8, [X8 + 0xB8]
	0x01EB22B4 MOV X2, X31
	0x01EB22B8 LDR X1, [X8]
	0x01EB22BC BL 0x32333E0
	0x01EB22C0 CBZ X0, 0x1EB24D4
	0x01EB22C4 LDR X1, [X22]
	0x01EB22C8 ADRP X25, 0x224D000
	0x01EB22CC LDR X25, [X25 + 0xA0]
	0x01EB22D0 MOV X2, X31
	0x01EB22D4 BL 0x32333E0
	0x01EB22D8 MOV X21, X0
	0x01EB22DC LDR W8, [X24 + 0x10]
	0x01EB22E0 LDR V0, [X24]
	0x01EB22E4 LDR X0, [X25]
	0x01EB22E8 ADD X1, X31, 0x0
	0x01EB22EC STR W8, [X31 + 0x10]
	0x01EB22F0 STR V0, [X31]
	0x01EB22F4 BL 0x1C16E04
	0x01EB22F8 CBZ X21, 0x1EB24D4
	0x01EB22FC MOV X1, X0
	0x01EB2300 MOV X0, X21
	0x01EB2304 MOV X2, X31
	0x01EB2308 BL 0x3233F90
	0x01EB230C LDRB W8, [X19 + 0x2C]
	0x01EB2310 CBZ W8, 0x1EB2380
	0x01EB2314 LDR X1, [X23]
	0x01EB2318 MOV X0, X20
	0x01EB231C MOV X2, X31
	0x01EB2320 BL 0x32333E0
	0x01EB2324 CBZ X0, 0x1EB24D4
	0x01EB2328 ADRP X8, 0x224C000
	0x01EB232C LDR X8, [X8 + 0x398]
	0x01EB2330 MOV X2, X31
	0x01EB2334 LDR X1, [X8]
	0x01EB2338 BL 0x32333E0
	0x01EB233C CBZ X0, 0x1EB24D4
	0x01EB2340 LDR X1, [X22]
	0x01EB2344 ADRP X24, 0x224D000
	0x01EB2348 LDR X24, [X24 + 0x90]
	0x01EB234C MOV X2, X31
	0x01EB2350 BL 0x32333E0
	0x01EB2354 MOV X21, X0
	0x01EB2358 LDUR X8, [X19 + 0x2C]
	0x01EB235C LDR X0, [X24]
	0x01EB2360 ADD X1, X31, 0x0
	0x01EB2364 STR X8, [X31]
	0x01EB2368 BL 0x1C16E04
	0x01EB236C CBZ X21, 0x1EB24D4
	0x01EB2370 MOV X1, X0
	0x01EB2374 MOV X0, X21
	0x01EB2378 MOV X2, X31
	0x01EB237C BL 0x3233F90
	0x01EB2380 LDR X8, [X19 + 0x38]
	0x01EB2384 CBZ X8, 0x1EB23D0
	0x01EB2388 LDR X1, [X23]
	0x01EB238C MOV X0, X20
	0x01EB2390 MOV X2, X31
	0x01EB2394 BL 0x32333E0
	0x01EB2398 CBZ X0, 0x1EB24D4
	0x01EB239C ADRP X8, 0x224D000
	0x01EB23A0 LDR X8, [X8 + 0xC8]
	0x01EB23A4 MOV X2, X31
	0x01EB23A8 LDR X1, [X8]
	0x01EB23AC BL 0x32333E0
	0x01EB23B0 CBZ X0, 0x1EB24D4
	0x01EB23B4 LDR X1, [X22]
	0x01EB23B8 MOV X2, X31
	0x01EB23BC BL 0x32333E0
	0x01EB23C0 CBZ X0, 0x1EB24D4
	0x01EB23C4 LDR X1, [X19 + 0x38]
	0x01EB23C8 MOV X2, X31
	0x01EB23CC BL 0x3233F90
	0x01EB23D0 LDR X8, [X19 + 0x40]
	0x01EB23D4 CBZ X8, 0x1EB2420
	0x01EB23D8 LDR X1, [X23]
	0x01EB23DC MOV X0, X20
	0x01EB23E0 MOV X2, X31
	0x01EB23E4 BL 0x32333E0
	0x01EB23E8 CBZ X0, 0x1EB24D4
	0x01EB23EC ADRP X8, 0x2245000
	0x01EB23F0 LDR X8, [X8 + 0x6F8]
	0x01EB23F4 MOV X2, X31
	0x01EB23F8 LDR X1, [X8]
	0x01EB23FC BL 0x32333E0
	0x01EB2400 CBZ X0, 0x1EB24D4
	0x01EB2404 LDR X1, [X22]
	0x01EB2408 MOV X2, X31
	0x01EB240C BL 0x32333E0
	0x01EB2410 CBZ X0, 0x1EB24D4
	0x01EB2414 LDR X1, [X19 + 0x40]
	0x01EB2418 MOV X2, X31
	0x01EB241C BL 0x3233F90
	0x01EB2420 LDR W8, [X19 + 0x48]
	0x01EB2424 CBZ W8, 0x1EB2494
	0x01EB2428 LDR X1, [X23]
	0x01EB242C MOV X0, X20
	0x01EB2430 MOV X2, X31
	0x01EB2434 BL 0x32333E0
	0x01EB2438 CBZ X0, 0x1EB24D4
	0x01EB243C ADRP X8, 0x224D000
	0x01EB2440 LDR X8, [X8 + 0xC0]
	0x01EB2444 MOV X2, X31
	0x01EB2448 LDR X1, [X8]
	0x01EB244C BL 0x32333E0
	0x01EB2450 CBZ X0, 0x1EB24D4
	0x01EB2454 LDR X1, [X22]
	0x01EB2458 ADRP X22, 0x224D000
	0x01EB245C LDR X22, [X22 + 0xA8]
	0x01EB2460 MOV X2, X31
	0x01EB2464 BL 0x32333E0
	0x01EB2468 MOV X21, X0
	0x01EB246C LDR W8, [X19 + 0x48]
	0x01EB2470 LDR X0, [X22]
	0x01EB2474 ADD X1, X31, 0x0
	0x01EB2478 STR W8, [X31]
	0x01EB247C BL 0x1C16E04
	0x01EB2480 CBZ X21, 0x1EB24D4

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x2528000
	011 Move W8, [X26+926]
	012 Move W25, W6
	013 Move X21, X5
	014 Move X19, X4
	015 Move X24, X3
	016 Move X23, X2
	017 Move X20, X1
	018 Move X22, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x224E000
	024 Move X0, [X0+16]
	025 Call 0x1C17CF4
	026 Move X0, 0x224B000
	027 Move X0, [X0+3712]
	028 Call 0x1C17CF4
	029 Move X0, 0x224B000
	030 Move X0, [X0+3816]
	031 Call 0x1C17CF4
	032 Move X0, 0x2243000
	033 Move X0, [X0+1976]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X26+926], W8
	037 Move [X31+8], X31
	038 Compare X23, 0
	039 JumpIfNotEqual {53}
	040 Add X0, X31, 8
	041 Move X1, X31
	042 Call PhotonAppSettings.TryGetGlobal, X0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {158}
	047 Move X8, [X31+8]
	048 Compare X8, 0
	049 JumpIfEqual {157}
	050 Move X23, [X8+32]
	051 Compare X23, 0
	052 JumpIfEqual {158}
	053 Move TEMP, X25
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {82}
	057 Move X25, 0x224B000
	058 Move X25, [X25+3712]
	059 Move X0, [X25]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X25]
	065 Move X8, [X0+184]
	066 Move X1, X31
	067 Move X0, [X8+24]
	068 Call String.IsNullOrEmpty, X0
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {82}
	073 Move X0, [X25]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {79}
	077 Call 0x1C17DFC
	078 Move X0, [X25]
	079 Move X8, [X0+184]
	080 Move X8, [X8+24]
	081 Move [X23+72], X8
	082 Move X25, [X22+432]
	083 Compare X25, 0
	084 JumpIfNotEqual {98}
	085 Move X8, 0x224E000
	086 Move X8, [X8+16]
	087 Move X0, [X8]
	088 Call 0x1C17F10
	089 Move X1, X22
	090 Move X2, X23
	091 Move X3, X24
	092 Move X4, X31
	093 Move X25, X0
	094 Call CloudServices..ctor, X0, X1, X2, X3
	095 Move [X22+432], X25
	096 Compare X25, 0
	097 JumpIfEqual {157}
	098 Move X0, X25
	099 Move X1, X31
	100 Call CloudServices.get_IsCloudReady, X0
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {129}
	105 Move X19, 0x2243000
	106 Move X19, [X19+1976]
	107 Move X0, [X19]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X20, 0x2527000
	113 Move W8, [X20+3869]
	114 Compare W8, 0
	115 JumpIfNotEqual {121}
	116 Move X0, 0x2243000
	117 Move X0, [X0+1976]
	118 Call 0x1C17CF4
	119 Move W8, 1
	120 Move [X20+3869], W8
	121 Move X0, [X19]
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {127}
	125 Call 0x1C17DFC
	126 Move X0, [X19]
	127 Move X8, [X0+184]
	128 Move X0, [X8+48]
	129 Move X8, 0x224B000
	130 Move X8, [X8+3816]
	131 Move X0, [X8]
	132 Call 0x1C17F10
	133 Move X1, X22
	134 Move X2, X31
	135 Move X24, X0
	136 Call SessionInfo..ctor, X0, X1
	137 Move X0, [X22+432]
	138 Move [X22+400], X24
	139 Compare X0, 0
	140 JumpIfEqual {157}
	141 And X4, X21, 0xFFFF
	142 Move X1, X23
	143 Move X2, X20
	144 Move X3, X19
	145 Move X5, X31
	146 Call CloudServices.ConnectToCloud, X0, X1, X2, X3, X4
	147 Move X20, [X31+64]
	148 Move X19, [X31+72]
	149 Move X22, [X31+48]
	150 Move X21, [X31+56]
	151 Move X24, [X31+32]
	152 Move X23, [X31+40]
	153 Move X26, [X31+16]
	154 Move X25, [X31+24]
	155 Move X30, [X31+80]
	156 Return X0
	157 Call 0x1C17F20
	158 Move X0, 0x2242000
	159 Move X0, [X0+1456]
	160 Call 0x1C17D08
	161 Call 0x1C17F10
	162 Move X19, X0
	163 Move X0, 0x224C000
	164 Move X0, [X0+424]
	165 Call 0x1C17D08
	166 Move X1, X0
	167 Move X0, X19
	168 Move X2, X31
	169 Call InvalidOperationException..ctor, X0, X1
	170 Move X0, 0x224E000
	171 Move X0, [X0+24]
	172 Call 0x1C17D08
	173 Move X1, X0
	174 Move X0, X19
	175 Call 0x1C17DEC

Method: System.Threading.Tasks.Task DisconnectFromCloud()

Disassembly:
	0x01EA0BC0 MOV X21, X0
	0x01EA0BC4 BL 0x1E7A308
	0x01EA0BC8 STR X21, [X19 + 0x60]
	0x01EA0BCC CBZ X21, 0x1EA0F8C
	0x01EA0BD0 LDR X1, [X20 + 0xC8]
	0x01EA0BD4 MOV X0, X21
	0x01EA0BD8 MOV X2, X31
	0x01EA0BDC BL 0x1E7AAD4
	0x01EA0BE0 STR W31, [X19 + 0x5C]
	0x01EA0BE4 STR X31, [X19 + 0x40]
	0x01EA0BE8 STR W31, [X19 + 0x48]
	0x01EA0BEC LDR X8, [X20 + 0xB0]
	0x01EA0BF0 CBZ X8, 0x1EA0BFC
	0x01EA0BF4 STR X8, [X19 + 0x100]
	0x01EA0BF8 B 0x1EA0C48
	0x01EA0BFC ADRP X8, 0x225E000
	0x01EA0C00 ADRP X9, 0x225E000
	0x01EA0C04 LDR X8, [X8 + 0x9C8]
	0x01EA0C08 LDR X9, [X9 + 0x968]
	0x01EA0C0C ADD X21, X19, 0x100
	0x01EA0C10 MOV X0, X19
	0x01EA0C14 LDR X1, [X8]
	0x01EA0C18 LDR X3, [X9]
	0x01EA0C1C MOV X2, X21
	0x01EA0C20 BL 0x222C1D8
	0x01EA0C24 TBNZ X0, 0x0, 0x1EA0C48
	0x01EA0C28 ADRP X8, 0x225E000
	0x01EA0C2C LDR X8, [X8 + 0x970]
	0x01EA0C30 LDR X0, [X8]
	0x01EA0C34 BL 0x1C16F10
	0x01EA0C38 MOV X1, X31
	0x01EA0C3C MOV X22, X0
	0x01EA0C40 BL 0x1EBD1DC
	0x01EA0C44 STR X22, [X21]
	0x01EA0C48 LDR W8, [X20 + 0x34]
	0x01EA0C4C LDUR V0, [X20 + 0x24]
	0x01EA0C50 LDUR V1, [X20 + 0x14]
	0x01EA0C54 LDUR V2, [X20 + 0x4]
	0x01EA0C58 STR W8, [X31 + 0x2C0]
	0x01EA0C5C STP V1, V0, [X31 + 0x2A0]
	0x01EA0C60 STR V2, [X31 + 0x29]
	0x01EA0C64 LDR W9, [X20 + 0x34]
	0x01EA0C68 LDUR V3, [X20 + 0x24]
	0x01EA0C6C LDUR V4, [X20 + 0x14]
	0x01EA0C70 LDUR V5, [X20 + 0x4]
	0x01EA0C74 STR W9, [X31 + 0x3C0]
	0x01EA0C78 STP V4, V3, [X31 + 0x3A0]
	0x01EA0C7C STR V5, [X31 + 0x39]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+80], X30
	003 Move [X31+88], X21
	004 Move [X31+96], X20
	005 Move [X31+104], X19
	006 Move X21, 0x253A000
	007 Move X20, 0x2257000
	008 Move W8, [X21+927]
	009 Move X20, [X20+640]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x225F000
	016 Move X0, [X0+2160]
	017 Call 0x1C17CF4
	018 Move X0, 0x2257000
	019 Move X0, [X0+640]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+927], W8
	023 Move X0, [X20]
	024 NotImplemented "Instruction MOVI not yet implemented."
	025 Move [X31+48], V0
	026 Move [X31+56], V0
	027 Move [X31+2], V0
	028 Move X20, 0x225F000
	029 Move W8, [X0+224]
	030 Move X20, [X20+2160]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Add X8, X31, 8
	035 Move X0, X31
	036 Call AsyncTaskMethodBuilder.Create
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 Move X9, [X31+24]
	039 Move X2, [X20]
	040 Add X8, X31, 32
	041 Or X20, X8, 15
	042 Move TEMP, 0
	043 Not TEMP
	044 Move W10, TEMP
	045 Add X1, X31, 32
	046 Move X0, X20
	047 Move [X31+40], V0
	048 Move [X31+56], X9
	049 Move [X31+64], X19
	050 Move [X31+32], W10
	051 Call AsyncTaskMethodBuilder.Start, X0, X1
	052 Move X0, X20
	053 Move X1, X31
	054 Call AsyncTaskMethodBuilder.get_Task, X0
	055 Move X20, [X31+96]
	056 Move X19, [X31+104]
	057 Move X30, [X31+80]
	058 Move X21, [X31+88]
	059 Add X31, X31, 112
	060 Return X0

Method: System.Threading.Tasks.Task`1<Fusion.StartGameResult> StartGameModeSinglePlayer(Fusion.StartGameArgs args)

Disassembly:
	0x01EB1FF4 ADRP X1, 0xFFFFFFFFFEC6A000
	0x01EB1FF8 ADD X1, X1, 0xEE3
	0x01EB1FFC MOV X0, X31
	0x01EB2000 BL 0x1C16F3C
	0x01EB2004 MOV X1, X31
	0x01EB2008 BL 0x1C16DEC
	0x01EB200C LDR X8, [X0 + 0x40]
	0x01EB2010 LDR X4, [X0 + 0x18]
	0x01EB2014 LDR X3, [X0 + 0x28]
	0x01EB2018 MOV X0, X8
	0x01EB201C BR X4
	0x01EB2020 SUB X31, X31, 0x30
	0x01EB2024 STP X31, X30, [X31 + 0x18]
	0x01EB2028 STP X1, X2, [X31 + 0x8]
	0x01EB202C ADD X1, X31, 0x8
	0x01EB2030 MOV X2, X3
	0x01EB2034 MOV X3, X4
	0x01EB2038 BL 0x1C16CB0
	0x01EB203C LDR X30, [X31 + 0x20]
	0x01EB2040 ADD X31, X31, 0x30
	0x01EB2044 RET
	0x01EB2048 MOV X0, X1
	0x01EB204C MOV X1, X31
	0x01EB2050 B 0x1C16CB4
	0x01EB2054 SUB X31, X31, 0x60
	0x01EB2058 STP X30, X25, [X31 + 0x20]
	0x01EB205C STP X24, X23, [X31 + 0x30]
	0x01EB2060 STP X22, X21, [X31 + 0x40]
	0x01EB2064 STP X20, X19, [X31 + 0x50]
	0x01EB2068 ADRP X20, 0x2527000
	0x01EB206C ADRP X21, 0x2241000
	0x01EB2070 LDRB W8, [X20 + 0x3AC]
	0x01EB2074 LDR X21, [X21 + 0x8F0]
	0x01EB2078 MOV X19, X0
	0x01EB207C TBNZ X8, 0x0, 0x1EB2178
	0x01EB2080 ADRP X0, 0x224C000
	0x01EB2084 LDR X0, [X0 + 0x378]
	0x01EB2088 BL 0x1C16CF4
	0x01EB208C ADRP X0, 0x224C000
	0x01EB2090 LDR X0, [X0 + 0xB58]
	0x01EB2094 BL 0x1C16CF4
	0x01EB2098 ADRP X0, 0x2244000
	0x01EB209C LDR X0, [X0 + 0xDD8]
	0x01EB20A0 BL 0x1C16CF4
	0x01EB20A4 ADRP X0, 0x2244000
	0x01EB20A8 LDR X0, [X0 + 0xDE0]
	0x01EB20AC BL 0x1C16CF4
	0x01EB20B0 ADRP X0, 0x224D000
	0x01EB20B4 LDR X0, [X0 + 0x90]
	0x01EB20B8 BL 0x1C16CF4
	0x01EB20BC ADRP X0, 0x224D000
	0x01EB20C0 LDR X0, [X0 + 0x98]
	0x01EB20C4 BL 0x1C16CF4
	0x01EB20C8 ADRP X0, 0x224D000
	0x01EB20CC LDR X0, [X0 + 0xA0]
	0x01EB20D0 BL 0x1C16CF4
	0x01EB20D4 ADRP X0, 0x224D000
	0x01EB20D8 LDR X0, [X0 + 0xA8]
	0x01EB20DC BL 0x1C16CF4
	0x01EB20E0 ADRP X0, 0x2241000
	0x01EB20E4 LDR X0, [X0 + 0x8F0]
	0x01EB20E8 BL 0x1C16CF4
	0x01EB20EC ADRP X0, 0x2245000
	0x01EB20F0 LDR X0, [X0 + 0x6F8]
	0x01EB20F4 BL 0x1C16CF4
	0x01EB20F8 ADRP X0, 0x2245000
	0x01EB20FC LDR X0, [X0 + 0x928]
	0x01EB2100 BL 0x1C16CF4
	0x01EB2104 ADRP X0, 0x224D000
	0x01EB2108 LDR X0, [X0 + 0xB0]
	0x01EB210C BL 0x1C16CF4
	0x01EB2110 ADRP X0, 0x2245000
	0x01EB2114 LDR X0, [X0 + 0x468]
	0x01EB2118 BL 0x1C16CF4
	0x01EB211C ADRP X0, 0x2241000

ISIL:
	001 Subtract X31, X31, 464
	002 Move [X31+384], X29
	003 Move [X31+392], X30
	004 Move [X31+400], X26
	005 Move [X31+408], X25
	006 Move [X31+416], X24
	007 Move [X31+424], X23
	008 Move [X31+432], X22
	009 Move [X31+440], X21
	010 Move [X31+448], X20
	011 Move [X31+456], X19
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X22+40]
	014 Move X23, 0x2528000
	015 Move X21, 0x224D000
	016 Move X19, X1
	017 Move [X31+376], X8
	018 Move W8, [X23+928]
	019 Move X21, [X21+4048]
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {39}
	025 Move X0, 0x224D000
	026 Move X0, [X0+4056]
	027 Call 0x1C17CF4
	028 Move X0, 0x224E000
	029 Move X0, [X0]
	030 Call 0x1C17CF4
	031 Move X0, 0x224D000
	032 Move X0, [X0+4072]
	033 Call 0x1C17CF4
	034 Move X0, 0x224D000
	035 Move X0, [X0+4048]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X23+928], W8
	039 Move X25, 0x224D000
	040 Move X24, 0x224E000
	041 Move X23, 0x224D000
	042 Move X25, [X25+4056]
	043 Move X24, [X24]
	044 Move X23, [X23+4072]
	045 Add X0, X31, 0
	046 Move W2, 376
	047 Move W1, W31
	048 Add X26, X31, 0
	049 Call 0x3EB2B10
	050 Move X0, [X21]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, [X25]
	056 Add X21, X26, 8
	057 Move X8, X21
	058 Call AsyncTaskMethodBuilder`1<Object>.Create
	059 Add X0, X26, 40
	060 Move W2, 312
	061 Move X1, X19
	062 Move [X31+32], X20
	063 Call 0x3EB2AC0
	064 Move X2, [X24]
	065 Move TEMP, 0
	066 Not TEMP
	067 Move W8, TEMP
	068 Add X1, X31, 0
	069 Move X0, X21
	070 Move [X31], W8
	071 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	072 Move X1, [X23]
	073 Move X0, X21
	074 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	075 Move X8, [X22+40]
	076 Move X9, [X31+376]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X20, [X31+448]
	079 Move X19, [X31+456]
	080 Move X22, [X31+432]
	081 Move X21, [X31+440]
	082 Move X24, [X31+416]
	083 Move X23, [X31+424]
	084 Move X26, [X31+400]
	085 Move X25, [X31+408]
	086 Move X29, [X31+384]
	087 Move X30, [X31+392]
	088 Add X31, X31, 464
	089 Return X0
	090 Call 0x3EB2B20

Method: System.Threading.Tasks.Task`1<Fusion.StartGameResult> StartGameModeCloud(Fusion.StartGameArgs args)

Disassembly:
	0x01EB2120 LDR X0, [X0 + 0x838]
	0x01EB2124 BL 0x1C16CF4
	0x01EB2128 ADRP X0, 0x224C000
	0x01EB212C LDR X0, [X0 + 0x398]
	0x01EB2130 BL 0x1C16CF4
	0x01EB2134 ADRP X0, 0x224D000
	0x01EB2138 LDR X0, [X0 + 0xB8]
	0x01EB213C BL 0x1C16CF4
	0x01EB2140 ADRP X0, 0x224D000
	0x01EB2144 LDR X0, [X0 + 0xC0]
	0x01EB2148 BL 0x1C16CF4
	0x01EB214C ADRP X0, 0x224D000
	0x01EB2150 LDR X0, [X0 + 0xC8]
	0x01EB2154 BL 0x1C16CF4
	0x01EB2158 ADRP X0, 0x2241000
	0x01EB215C LDR X0, [X0 + 0xEC8]
	0x01EB2160 BL 0x1C16CF4
	0x01EB2164 ADRP X0, 0x2241000
	0x01EB2168 LDR X0, [X0 + 0x848]
	0x01EB216C BL 0x1C16CF4
	0x01EB2170 MOVZ W8, 0x1
	0x01EB2174 STRB W8, [X20 + 0x3AC]
	0x01EB2178 LDR X0, [X21]
	0x01EB217C BL 0x1C16F10
	0x01EB2180 MOV X1, X31
	0x01EB2184 MOV X20, X0
	0x01EB2188 BL 0x3231AC4
	0x01EB218C CBZ X20, 0x1EB24D4
	0x01EB2190 ADRP X8, 0x2241000
	0x01EB2194 LDR X8, [X8 + 0xEC8]
	0x01EB2198 MOV X0, X20
	0x01EB219C MOV X2, X31
	0x01EB21A0 LDR X1, [X8]
	0x01EB21A4 BL 0x32333E0
	0x01EB21A8 CBZ X0, 0x1EB24D4
	0x01EB21AC ADRP X8, 0x224D000
	0x01EB21B0 LDR X8, [X8 + 0xB0]
	0x01EB21B4 MOV X2, X31
	0x01EB21B8 LDR X1, [X8]
	0x01EB21BC BL 0x32333E0
	0x01EB21C0 CBZ X0, 0x1EB24D4
	0x01EB21C4 ADRP X22, 0x2245000
	0x01EB21C8 LDR X22, [X22 + 0x928]
	0x01EB21CC ADRP X23, 0x224C000
	0x01EB21D0 MOV X2, X31
	0x01EB21D4 LDR X1, [X22]
	0x01EB21D8 LDR X23, [X23 + 0x378]
	0x01EB21DC BL 0x32333E0
	0x01EB21E0 MOV X21, X0
	0x01EB21E4 LDR X8, [X19]
	0x01EB21E8 LDR X0, [X23]
	0x01EB21EC ADD X1, X31, 0x0
	0x01EB21F0 STR X8, [X31]
	0x01EB21F4 BL 0x1C16E04
	0x01EB21F8 CBZ X21, 0x1EB24D4
	0x01EB21FC ADRP X23, 0x2241000
	0x01EB2200 LDR X23, [X23 + 0x838]
	0x01EB2204 MOV X1, X0
	0x01EB2208 MOV X0, X21
	0x01EB220C MOV X2, X31
	0x01EB2210 BL 0x3233F90
	0x01EB2214 MOV X24, X19
	0x01EB2218 LDRB W8, [X24 + 0x8]!
	0x01EB221C CBZ W8, 0x1EB228C
	0x01EB2220 LDR X1, [X23]
	0x01EB2224 MOV X0, X20
	0x01EB2228 MOV X2, X31
	0x01EB222C BL 0x32333E0
	0x01EB2230 CBZ X0, 0x1EB24D4
	0x01EB2234 ADRP X8, 0x2245000
	0x01EB2238 LDR X8, [X8 + 0x468]
	0x01EB223C MOV X2, X31
	0x01EB2240 LDR X1, [X8]
	0x01EB2244 BL 0x32333E0
	0x01EB2248 CBZ X0, 0x1EB24D4

ISIL:
	001 Subtract X31, X31, 496
	002 Move [X31+416], X29
	003 Move [X31+424], X30
	004 Move [X31+432], X26
	005 Move [X31+440], X25
	006 Move [X31+448], X24
	007 Move [X31+456], X23
	008 Move [X31+464], X22
	009 Move [X31+472], X21
	010 Move [X31+480], X20
	011 Move [X31+488], X19
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X22+40]
	014 Move X23, 0x2528000
	015 Move X21, 0x224D000
	016 Move X19, X1
	017 Move [X31+408], X8
	018 Move W8, [X23+929]
	019 Move X21, [X21+4048]
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {39}
	025 Move X0, 0x224D000
	026 Move X0, [X0+4056]
	027 Call 0x1C17CF4
	028 Move X0, 0x224E000
	029 Move X0, [X0+8]
	030 Call 0x1C17CF4
	031 Move X0, 0x224D000
	032 Move X0, [X0+4072]
	033 Call 0x1C17CF4
	034 Move X0, 0x224D000
	035 Move X0, [X0+4048]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X23+929], W8
	039 Move X25, 0x224D000
	040 Move X24, 0x224E000
	041 Move X23, 0x224D000
	042 Move X25, [X25+4056]
	043 Move X24, [X24+8]
	044 Move X23, [X23+4072]
	045 Add X0, X31, 0
	046 Move W2, 408
	047 Move W1, W31
	048 Add X26, X31, 0
	049 Call 0x3EB2B10
	050 Move X0, [X21]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, [X25]
	056 Add X21, X26, 8
	057 Move X8, X21
	058 Call AsyncTaskMethodBuilder`1<Object>.Create
	059 Add X0, X26, 40
	060 Move W2, 312
	061 Move X1, X19
	062 Move [X31+32], X20
	063 Call 0x3EB2AC0
	064 Move X2, [X24]
	065 Move TEMP, 0
	066 Not TEMP
	067 Move W8, TEMP
	068 Add X1, X31, 0
	069 Move X0, X21
	070 Move [X31], W8
	071 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	072 Move X1, [X23]
	073 Move X0, X21
	074 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	075 Move X8, [X22+40]
	076 Move X9, [X31+408]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X20, [X31+480]
	079 Move X19, [X31+488]
	080 Move X22, [X31+464]
	081 Move X21, [X31+472]
	082 Move X24, [X31+448]
	083 Move X23, [X31+456]
	084 Move X26, [X31+432]
	085 Move X25, [X31+440]
	086 Move X29, [X31+416]
	087 Move X30, [X31+424]
	088 Add X31, X31, 496
	089 Return X0
	090 Call 0x3EB2B20

Method: System.Threading.Tasks.Task`1<Fusion.StartGameResult> ShutdownAndBuildResult(System.Exception e)

Disassembly:
	0x01EB2484 MOV X1, X0
	0x01EB2488 MOV X0, X21
	0x01EB248C MOV X2, X31
	0x01EB2490 BL 0x3233F90
	0x01EB2494 ADRP X8, 0x2241000
	0x01EB2498 LDR X8, [X8 + 0x848]
	0x01EB249C MOV X0, X20
	0x01EB24A0 MOV X2, X31
	0x01EB24A4 LDR X1, [X8]
	0x01EB24A8 BL 0x32333E0
	0x01EB24AC LDR X8, [X20]
	0x01EB24B0 MOV X0, X20
	0x01EB24B4 LDP X9, X1, [X8 + 0x168]
	0x01EB24B8 BLR X9
	0x01EB24BC LDP X20, X19, [X31 + 0x50]
	0x01EB24C0 LDP X22, X21, [X31 + 0x40]
	0x01EB24C4 LDP X24, X23, [X31 + 0x30]
	0x01EB24C8 LDP X30, X25, [X31 + 0x20]
	0x01EB24CC ADD X31, X31, 0x60
	0x01EB24D0 RET
	0x01EB24D4 BL 0x1C16F20
	0x01EB24D8 STP X30, X21, [X31 - 0x20]!
	0x01EB24DC STP X20, X19, [X31 + 0x10]
	0x01EB24E0 LDR X8, [X2 + 0x8]
	0x01EB24E4 STP X1, X2, [X0 + 0x20]
	0x01EB24E8 MOV X19, X0
	0x01EB24EC MOV X20, X1
	0x01EB24F0 STR X8, [X0 + 0x10]
	0x01EB24F4 LDRB W21, [X2 + 0x52]
	0x01EB24F8 STR X0, [X0 + 0x40]
	0x01EB24FC MOV X0, X2
	0x01EB2500 BL 0x1C16D84
	0x01EB2504 TBZ X0, 0x0, 0x1EB251C
	0x01EB2508 CMP W21, 0x3
	0x01EB250C B.NE 0x1EB2538
	0x01EB2510 ADRP X8, 0xFFFFFFFFFFAE4000
	0x01EB2514 ADD X8, X8, 0xC00
	0x01EB2518 B 0x1EB252C
	0x01EB251C CMP W21, 0x2
	0x01EB2520 B.NE 0x1EB2534
	0x01EB2524 ADRP X8, 0xFFFFFFFFFFAE4000
	0x01EB2528 ADD X8, X8, 0xBD4
	0x01EB252C STR X8, [X19 + 0x18]
	0x01EB2530 B 0x1EB2548
	0x01EB2534 CBZ X20, 0x1EB2560
	0x01EB2538 LDR X8, [X19 + 0x10]
	0x01EB253C LDR X9, [X19 + 0x20]
	0x01EB2540 STR X8, [X19 + 0x18]
	0x01EB2544 STR X9, [X19 + 0x40]
	0x01EB2548 ADRP X8, 0xFFFFFFFFFFAE4000
	0x01EB254C ADD X8, X8, 0xB74
	0x01EB2550 STR X8, [X19 + 0x38]
	0x01EB2554 LDP X20, X19, [X31 + 0x10]
	0x01EB2558 LDP X30, X21, [X31], #0x20
	0x01EB255C RET
	0x01EB2560 ADRP X1, 0xFFFFFFFFFEC69000
	0x01EB2564 ADD X1, X1, 0xEE3
	0x01EB2568 MOV X0, X31

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X22, 0x2528000
	009 Move X21, 0x224D000
	010 Move W8, [X22+930]
	011 Move X21, [X21+4048]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x224D000
	019 Move X0, [X0+4056]
	020 Call 0x1C17CF4
	021 Move X0, 0x224E000
	022 Move X0, [X0+32]
	023 Call 0x1C17CF4
	024 Move X0, 0x224D000
	025 Move X0, [X0+4072]
	026 Call 0x1C17CF4
	027 Move X0, 0x224D000
	028 Move X0, [X0+4048]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+930], W8
	032 Move X0, [X21]
	033 NotImplemented "Instruction MOVI not yet implemented."
	034 Move [X31+32], V0
	035 Move [X31+40], V0
	036 Move [X31], V0
	037 Move [X31+8], V0
	038 Move X21, 0x224D000
	039 Move X23, 0x224E000
	040 Move X22, 0x224D000
	041 Move W8, [X0+224]
	042 Move X21, [X21+4056]
	043 Move X23, [X23+32]
	044 Move X22, [X22+4072]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, [X21]
	049 Add X8, X31, 0
	050 Or X21, X8, 15
	051 Move X8, X21
	052 Call AsyncTaskMethodBuilder`1<Object>.Create
	053 Move X2, [X23]
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W8, TEMP
	057 Add X1, X31, 0
	058 Move X0, X21
	059 Move [X31+32], X19
	060 Move [X31+40], X20
	061 Move [X31], W8
	062 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	063 Move X1, [X22]
	064 Move X0, X21
	065 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	066 Move X20, [X31+96]
	067 Move X19, [X31+104]
	068 Move X22, [X31+80]
	069 Move X21, [X31+88]
	070 Move X30, [X31+64]
	071 Move X23, [X31+72]
	072 Add X31, X31, 112
	073 Return X0

Method: System.Void InvokeSessionListUpdated(System.Collections.Generic.List`1<Fusion.SessionInfo> sessionList)

Disassembly:
	0x01EB256C BL 0x1C16F3C
	0x01EB2570 MOV X1, X31
	0x01EB2574 BL 0x1C16DEC
	0x01EB2578 LDR X8, [X0 + 0x40]
	0x01EB257C LDR X5, [X0 + 0x18]
	0x01EB2580 LDR X4, [X0 + 0x28]
	0x01EB2584 AND W3, W3, 0x1
	0x01EB2588 MOV X0, X8
	0x01EB258C BR X5
	0x01EB2590 SUB X31, X31, 0x70
	0x01EB2594 STP X30, X25, [X31 + 0x30]
	0x01EB2598 STP X24, X23, [X31 + 0x40]
	0x01EB259C STP X22, X21, [X31 + 0x50]
	0x01EB25A0 STP X20, X19, [X31 + 0x60]
	0x01EB25A4 AND W9, W3, 0x1
	0x01EB25A8 STR W2, [X31 + 0x2C]
	0x01EB25AC ADRP X25, 0x2527000
	0x01EB25B0 STRB W9, [X31 + 0x28]
	0x01EB25B4 ADRP X24, 0x2245000
	0x01EB25B8 ADRP X23, 0x2241000
	0x01EB25BC LDRB W8, [X25 + 0x3AD]
	0x01EB25C0 LDR X24, [X24 + 0xEB8]
	0x01EB25C4 LDR X23, [X23 + 0xB58]
	0x01EB25C8 MOV X19, X5
	0x01EB25CC MOV X20, X4
	0x01EB25D0 MOV X22, X1
	0x01EB25D4 MOV X21, X0
	0x01EB25D8 TBNZ X8, 0x0, 0x1EB25FC
	0x01EB25DC ADRP X0, 0x2241000
	0x01EB25E0 LDR X0, [X0 + 0xB58]
	0x01EB25E4 BL 0x1C16CF4
	0x01EB25E8 ADRP X0, 0x2245000
	0x01EB25EC LDR X0, [X0 + 0xEB8]
	0x01EB25F0 BL 0x1C16CF4
	0x01EB25F4 MOVZ W8, 0x1
	0x01EB25F8 STRB W8, [X25 + 0x3AD]
	0x01EB25FC LDR X0, [X24]
	0x01EB2600 ADD X1, X31, 0x2C
	0x01EB2604 STP X31, X31, [X31 + 0x18]
	0x01EB2608 STP X22, X31, [X31 + 0x8]
	0x01EB260C BL 0x1C16E04
	0x01EB2610 LDR X8, [X23]
	0x01EB2614 STR X0, [X31 + 0x10]
	0x01EB2618 ADD X1, X31, 0x28
	0x01EB261C MOV X0, X8
	0x01EB2620 BL 0x1C16E04
	0x01EB2624 STR X0, [X31 + 0x18]
	0x01EB2628 ADD X1, X31, 0x8
	0x01EB262C MOV X0, X21
	0x01EB2630 MOV X2, X20
	0x01EB2634 MOV X3, X19
	0x01EB2638 BL 0x1C16CB0
	0x01EB263C LDP X20, X19, [X31 + 0x60]
	0x01EB2640 LDP X22, X21, [X31 + 0x50]
	0x01EB2644 LDP X24, X23, [X31 + 0x40]
	0x01EB2648 LDP X30, X25, [X31 + 0x30]
	0x01EB264C ADD X31, X31, 0x70
	0x01EB2650 RET
	0x01EB2654 MOV X0, X1
	0x01EB2658 MOV X1, X31
	0x01EB265C B 0x1C16CB4
	0x01EB2660 STR X30, [X31 - 0x20]!
	0x01EB2664 STP X20, X19, [X31 + 0x10]
	0x01EB2668 ADRP X19, 0x2527000
	0x01EB266C ADRP X20, 0x224C000
	0x01EB2670 LDRB W8, [X19 + 0x3AE]
	0x01EB2674 LDR X20, [X20 + 0x898]
	0x01EB2678 TBNZ X8, 0x0, 0x1EB2690
	0x01EB267C ADRP X0, 0x224C000
	0x01EB2680 LDR X0, [X0 + 0x898]
	0x01EB2684 BL 0x1C16CF4
	0x01EB2688 MOVZ W8, 0x1
	0x01EB268C STRB W8, [X19 + 0x3AE]
	0x01EB2690 LDR X0, [X20]
	0x01EB2694 BL 0x1C16F10
	0x01EB2698 MOV X1, X31
	0x01EB269C MOV X19, X0
	0x01EB26A0 BL 0x33BDD8C
	0x01EB26A4 LDR X8, [X20]
	0x01EB26A8 LDR X8, [X8 + 0xB8]
	0x01EB26AC STR X19, [X8]
	0x01EB26B0 LDP X20, X19, [X31 + 0x10]
	0x01EB26B4 LDR X30, [X31], #0x20
	0x01EB26B8 RET
	0x01EB26BC MOV X1, X31
	0x01EB26C0 B 0x33BDD8C
	0x01EB26C4 STR X30, [X31 - 0x10]!
	0x01EB26C8 CBZ X1, 0x1EB26E8
	0x01EB26CC MOV X0, X1
	0x01EB26D0 MOV X1, X31
	0x01EB26D4 BL 0x1E934B8
	0x01EB26D8 ORN W8, W31, W0, 0x0
	0x01EB26DC AND W0, W8, 0x1
	0x01EB26E0 LDR X30, [X31], #0x10
	0x01EB26E4 RET
	0x01EB26E8 BL 0x1C16F20
	0x01EB26EC STR X30, [X31 - 0x10]!
	0x01EB26F0 CBZ X1, 0x1EB2710
	0x01EB26F4 LDR X0, [X1 + 0x50]
	0x01EB26F8 CBZ X0, 0x1EB2708
	0x01EB26FC MOV X1, X31
	0x01EB2700 LDR X30, [X31], #0x10
	0x01EB2704 B 0x1EC0A3C
	0x01EB2708 LDR X30, [X31], #0x10
	0x01EB270C RET
	0x01EB2710 BL 0x1C16F20
	0x01EB2714 STR X30, [X31 - 0x10]!
	0x01EB2718 CBZ X1, 0x1EB2728
	0x01EB271C LDR W0, [X1 + 0x18]
	0x01EB2720 LDR X30, [X31], #0x10
	0x01EB2724 RET
	0x01EB2728 BL 0x1C16F20
	0x01EB272C STP X30, X21, [X31 - 0x20]!
	0x01EB2730 STP X20, X19, [X31 + 0x10]
	0x01EB2734 ADRP X20, 0x2527000
	0x01EB2738 LDRB W8, [X20 + 0x3B0]
	0x01EB273C MOV X19, X0
	0x01EB2740 TBNZ X8, 0x0, 0x1EB2764
	0x01EB2744 ADRP X0, 0x2241000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2528000
	009 Move W8, [X21+931]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x224D000
	017 Move X0, [X0+1896]
	018 Call 0x1C17CF4
	019 Move X0, 0x224D000
	020 Move X0, [X0+1904]
	021 Call 0x1C17CF4
	022 Move X0, 0x224D000
	023 Move X0, [X0+1912]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+931], W8
	027 Move X8, [X19+104]
	028 Compare X8, 0
	029 JumpIfEqual {72}
	030 Move X23, 0x224D000
	031 Move X24, 0x224D000
	032 Move X23, [X23+1912]
	033 Move X24, [X24+1896]
	034 Move W21, W31
	035 Move W9, [X8+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X2, [X23]
	038 Move X0, X8
	039 Move W1, W21
	040 Call List`1<Object>.get_Item, X0, X1
	041 Move X22, X0
	042 Compare X0, 0
	043 JumpIfEqual {81}
	044 Move X8, [X22]
	045 Move X1, [X24]
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Compare X9, 0
	048 JumpIfEqual {55}
	049 Move X10, [X8+176]
	050 Add X10, X10, 8
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X9, X9, 1
	054 Add X10, X10, 16
	055 Move W2, 12
	056 Move X0, X22
	057 Call 0x1C5D788
	058 Move W9, [X10]
	059 Add W9, W9, 12
	060 Add X8, X8, W9
	061 Add X0, X8, 312
	062 Move X8, [X0]
	063 Move X3, [X0+8]
	064 Move X0, X22
	065 Move X1, X19
	066 Move X2, X20
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move X8, [X19+104]
	069 Add W21, W21, 1
	070 Compare X8, 0
	071 JumpIfNotEqual {35}
	072 Call 0x1C17F20
	073 Move X20, [X31+48]
	074 Move X19, [X31+56]
	075 Move X22, [X31+32]
	076 Move X21, [X31+40]
	077 Move X24, [X31+16]
	078 Move X23, [X31+24]
	079 Move X30, [X31+64]
	080 Return 
	081 Call 0x1C17F20
	082 Move X20, X0
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X0, X20
	085 Call 0x3EB2AD0
	086 Move X20, X0
	087 Move X0, 0x2242000
	088 Move X0, [X0+2000]
	089 Call 0x1C17D08
	090 Move X8, [X20]
	091 Move X1, [X8]
	092 Call 0x1C18270
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {121}
	097 Move X20, [X20]
	098 Call 0x3EB2AE0
	099 Move X0, 0x224A000
	100 Move X0, [X0+2224]
	101 Call 0x1C17D08
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move X0, 0x224D000
	107 Move X0, [X0+2152]
	108 Call 0x1C17D08
	109 Move X2, X0
	110 Move X0, X19
	111 Move X1, X20
	112 Move X20, [X31+48]
	113 Move X19, [X31+56]
	114 Move X22, [X31+32]
	115 Move X21, [X31+40]
	116 Move X24, [X31+16]
	117 Move X23, [X31+24]
	118 Move X30, [X31+64]
	119 Call 0x2214878, X0, X1
	120 Return 
	121 Move W0, 8
	122 Call 0x3EB2AF0
	123 Move X8, [X20]
	124 Move [X0], X8
	125 Move X1, 0x2003000
	126 Add X1, X1, 3672
	127 Move X2, X31
	128 Call 0x3EB2B00
	129 Move X20, X0
	130 Call 0x3EB2AE0
	131 Move X0, X20
	132 Call 0x1D2D690
	133 Call 0x1991590

Method: System.Void InvokeCustomAuthenticationResponse(System.Collections.Generic.Dictionary`2<System.String, System.Object> data)

Disassembly:
	0x01EB2748 LDR X0, [X0 + 0x598]
	0x01EB274C BL 0x1C16CF4
	0x01EB2750 ADRP X0, 0x2242000
	0x01EB2754 LDR X0, [X0 + 0x7B8]
	0x01EB2758 BL 0x1C16CF4
	0x01EB275C MOVZ W8, 0x1
	0x01EB2760 STRB W8, [X20 + 0x3B0]
	0x01EB2764 LDRB W8, [X19 + 0x10]
	0x01EB2768 CBZ W8, 0x1EB2804
	0x01EB276C ADRP X21, 0x2241000
	0x01EB2770 LDR X21, [X21 + 0x598]
	0x01EB2774 LDR X20, [X19 + 0x18]
	0x01EB2778 LDR X0, [X21]
	0x01EB277C LDR W8, [X0 + 0xE0]
	0x01EB2780 CBNZ W8, 0x1EB2788
	0x01EB2784 BL 0x1C16DFC
	0x01EB2788 MOV X0, X20
	0x01EB278C MOV X1, X31
	0x01EB2790 BL 0x3C38948
	0x01EB2794 TBZ X0, 0x0, 0x1EB2804
	0x01EB2798 LDR X0, [X19 + 0x18]
	0x01EB279C CBZ X0, 0x1EB28B0
	0x01EB27A0 MOV X1, X31
	0x01EB27A4 BL 0x3C32ECC
	0x01EB27A8 LDR X8, [X21]
	0x01EB27AC MOV X20, X0
	0x01EB27B0 LDR W9, [X8 + 0xE0]
	0x01EB27B4 CBNZ W9, 0x1EB27C0
	0x01EB27B8 MOV X0, X8
	0x01EB27BC BL 0x1C16DFC
	0x01EB27C0 MOV X0, X20
	0x01EB27C4 MOV X1, X31
	0x01EB27C8 BL 0x3C38948
	0x01EB27CC TBZ X0, 0x0, 0x1EB2804
	0x01EB27D0 LDR X0, [X19 + 0x18]
	0x01EB27D4 CBZ X0, 0x1EB28B0
	0x01EB27D8 MOV X1, X31
	0x01EB27DC BL 0x3C32ECC
	0x01EB27E0 LDR X8, [X21]
	0x01EB27E4 MOV X20, X0
	0x01EB27E8 LDR W9, [X8 + 0xE0]
	0x01EB27EC CBNZ W9, 0x1EB27F8
	0x01EB27F0 MOV X0, X8
	0x01EB27F4 BL 0x1C16DFC
	0x01EB27F8 MOV X0, X20
	0x01EB27FC MOV X1, X31
	0x01EB2800 BL 0x3C394A8
	0x01EB2804 LDR X8, [X19 + 0x18]
	0x01EB2808 CBZ X8, 0x1EB28B0
	0x01EB280C LDR X0, [X8 + 0xD8]
	0x01EB2810 CBZ X0, 0x1EB28B0
	0x01EB2814 MOV X1, X31
	0x01EB2818 BL 0x33DD2DC
	0x01EB281C TBNZ X0, 0x0, 0x1EB2838
	0x01EB2820 LDR X8, [X19 + 0x18]
	0x01EB2824 CBZ X8, 0x1EB28B0
	0x01EB2828 LDR X0, [X8 + 0xD8]
	0x01EB282C CBZ X0, 0x1EB28B0
	0x01EB2830 MOV X1, X31
	0x01EB2834 BL 0x33DFCF8
	0x01EB2838 LDR X8, [X19 + 0x18]
	0x01EB283C CBZ X8, 0x1EB28B0
	0x01EB2840 LDR X0, [X8 + 0xD8]
	0x01EB2844 CBZ X0, 0x1EB28B0
	0x01EB2848 ADRP X19, 0x2242000
	0x01EB284C LDR X19, [X19 + 0x7B8]
	0x01EB2850 MOV X1, X31
	0x01EB2854 BL 0x33E01CC
	0x01EB2858 LDR X0, [X19]
	0x01EB285C LDR W8, [X0 + 0xE0]
	0x01EB2860 CBNZ W8, 0x1EB2868
	0x01EB2864 BL 0x1C16DFC
	0x01EB2868 ADRP X20, 0x2526000
	0x01EB286C LDRB W8, [X20 + 0xF1D]
	0x01EB2870 CBNZ W8, 0x1EB2888
	0x01EB2874 ADRP X0, 0x2242000
	0x01EB2878 LDR X0, [X0 + 0x7B8]
	0x01EB287C BL 0x1C16CF4
	0x01EB2880 MOVZ W8, 0x1
	0x01EB2884 STRB W8, [X20 + 0xF1D]
	0x01EB2888 LDR X0, [X19]
	0x01EB288C LDR W8, [X0 + 0xE0]
	0x01EB2890 CBNZ W8, 0x1EB289C
	0x01EB2894 BL 0x1C16DFC
	0x01EB2898 LDR X0, [X19]
	0x01EB289C LDR X8, [X0 + 0xB8]
	0x01EB28A0 LDP X20, X19, [X31 + 0x10]
	0x01EB28A4 LDR X0, [X8 + 0x30]
	0x01EB28A8 LDP X30, X21, [X31], #0x20
	0x01EB28AC RET
	0x01EB28B0 BL 0x1C16F20
	0x01EB28B4 STP X30, X21, [X31 - 0x20]!
	0x01EB28B8 STP X20, X19, [X31 + 0x10]
	0x01EB28BC ADRP X20, 0x2527000
	0x01EB28C0 LDRB W8, [X20 + 0x3B2]
	0x01EB28C4 MOV X19, X1
	0x01EB28C8 MOV X21, X0
	0x01EB28CC TBNZ X8, 0x0, 0x1EB28E4
	0x01EB28D0 ADRP X0, 0x2248000
	0x01EB28D4 LDR X0, [X0 + 0xCB0]
	0x01EB28D8 BL 0x1C16CF4
	0x01EB28DC MOVZ W8, 0x1
	0x01EB28E0 STRB W8, [X20 + 0x3B2]
	0x01EB28E4 LDR X8, [X21 + 0x10]
	0x01EB28E8 CBZ X8, 0x1EB296C
	0x01EB28EC LDR X20, [X8 + 0x100]
	0x01EB28F0 CBZ X20, 0x1EB296C
	0x01EB28F4 ADRP X10, 0x2248000
	0x01EB28F8 LDR X8, [X20]
	0x01EB28FC LDR X10, [X10 + 0xCB0]
	0x01EB2900 LDRH W21, [X21 + 0x18]
	0x01EB2904 LDRH W9, [X8 + 0x12E]
	0x01EB2908 LDR X1, [X10]
	0x01EB290C CBZ X9, 0x1EB2930
	0x01EB2910 LDR X10, [X8 + 0xB0]
	0x01EB2914 ADD X10, X10, 0x8
	0x01EB2918 LDUR X11, [X10 - 0x8]
	0x01EB291C CMP X11, X1
	0x01EB2920 B.EQ 0x1EB2940

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2528000
	009 Move W8, [X21+932]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x224D000
	017 Move X0, [X0+1896]
	018 Call 0x1C17CF4
	019 Move X0, 0x224D000
	020 Move X0, [X0+1904]
	021 Call 0x1C17CF4
	022 Move X0, 0x224D000
	023 Move X0, [X0+1912]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+932], W8
	027 Move X8, [X19+104]
	028 Compare X8, 0
	029 JumpIfEqual {72}
	030 Move X23, 0x224D000
	031 Move X24, 0x224D000
	032 Move X23, [X23+1912]
	033 Move X24, [X24+1896]
	034 Move W21, W31
	035 Move W9, [X8+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X2, [X23]
	038 Move X0, X8
	039 Move W1, W21
	040 Call List`1<Object>.get_Item, X0, X1
	041 Move X22, X0
	042 Compare X0, 0
	043 JumpIfEqual {81}
	044 Move X8, [X22]
	045 Move X1, [X24]
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Compare X9, 0
	048 JumpIfEqual {55}
	049 Move X10, [X8+176]
	050 Add X10, X10, 8
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X9, X9, 1
	054 Add X10, X10, 16
	055 Move W2, 13
	056 Move X0, X22
	057 Call 0x1C5D788
	058 Move W9, [X10]
	059 Add W9, W9, 13
	060 Add X8, X8, W9
	061 Add X0, X8, 312
	062 Move X8, [X0]
	063 Move X3, [X0+8]
	064 Move X0, X22
	065 Move X1, X19
	066 Move X2, X20
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move X8, [X19+104]
	069 Add W21, W21, 1
	070 Compare X8, 0
	071 JumpIfNotEqual {35}
	072 Call 0x1C17F20
	073 Move X20, [X31+48]
	074 Move X19, [X31+56]
	075 Move X22, [X31+32]
	076 Move X21, [X31+40]
	077 Move X24, [X31+16]
	078 Move X23, [X31+24]
	079 Move X30, [X31+64]
	080 Return 
	081 Call 0x1C17F20
	082 Move X20, X0
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X0, X20
	085 Call 0x3EB2AD0
	086 Move X20, X0
	087 Move X0, 0x2242000
	088 Move X0, [X0+2000]
	089 Call 0x1C17D08
	090 Move X8, [X20]
	091 Move X1, [X8]
	092 Call 0x1C18270
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {121}
	097 Move X20, [X20]
	098 Call 0x3EB2AE0
	099 Move X0, 0x224A000
	100 Move X0, [X0+2224]
	101 Call 0x1C17D08
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move X0, 0x224D000
	107 Move X0, [X0+2152]
	108 Call 0x1C17D08
	109 Move X2, X0
	110 Move X0, X19
	111 Move X1, X20
	112 Move X20, [X31+48]
	113 Move X19, [X31+56]
	114 Move X22, [X31+32]
	115 Move X21, [X31+40]
	116 Move X24, [X31+16]
	117 Move X23, [X31+24]
	118 Move X30, [X31+64]
	119 Call 0x2214878, X0, X1
	120 Return 
	121 Move W0, 8
	122 Call 0x3EB2AF0
	123 Move X8, [X20]
	124 Move [X0], X8
	125 Move X1, 0x2003000
	126 Add X1, X1, 3672
	127 Move X2, X31
	128 Call 0x3EB2B00
	129 Move X20, X0
	130 Call 0x3EB2AE0
	131 Move X0, X20
	132 Call 0x1D2D690
	133 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x01EB2924 SUBS X9, X9, 0x1
	0x01EB2928 ADD X10, X10, 0x10
	0x01EB292C B.NE 0x1EB2918
	0x01EB2930 MOVZ W2, 0x9
	0x01EB2934 MOV X0, X20
	0x01EB2938 BL 0x1C5C788
	0x01EB293C B 0x1EB2950
	0x01EB2940 LDR W9, [X10]
	0x01EB2944 ADD W9, W9, 0x9
	0x01EB2948 ADD X8, X8, W9, 0x4, SXTW
	0x01EB294C ADD X0, X8, 0x138
	0x01EB2950 LDP X4, X3, [X0]
	0x01EB2954 AND X1, X19, 0x0
	0x01EB2958 MOV X0, X20
	0x01EB295C LDP X20, X19, [X31 + 0x10]
	0x01EB2960 MOV X2, X21
	0x01EB2964 LDP X30, X21, [X31], #0x20
	0x01EB2968 BR X4
	0x01EB296C BL 0x1C16F20
	0x01EB2970 STR X30, [X31 - 0x10]!
	0x01EB2974 LDR X0, [X0 + 0x10]
	0x01EB2978 CBZ X0, 0x1EB2988
	0x01EB297C MOV X2, X31
	0x01EB2980 LDR X30, [X31], #0x10
	0x01EB2984 B 0x1EB8834
	0x01EB2988 BL 0x1C16F20
	0x01EB298C SUB X31, X31, 0x30
	0x01EB2990 STP X30, X21, [X31 + 0x10]
	0x01EB2994 STP X20, X19, [X31 + 0x20]
	0x01EB2998 ADRP X20, 0x2527000
	0x01EB299C LDRB W8, [X20 + 0x3B3]
	0x01EB29A0 MOV X19, X0
	0x01EB29A4 TBNZ X8, 0x0, 0x1EB29C8
	0x01EB29A8 ADRP X0, 0x224D000
	0x01EB29AC LDR X0, [X0 + 0xD0]
	0x01EB29B0 BL 0x1C16CF4
	0x01EB29B4 ADRP X0, 0x2244000
	0x01EB29B8 LDR X0, [X0 + 0x280]
	0x01EB29BC BL 0x1C16CF4
	0x01EB29C0 MOVZ W8, 0x1
	0x01EB29C4 STRB W8, [X20 + 0x3B3]
	0x01EB29C8 STR X31, [X31 + 0x8]
	0x01EB29CC ADRP X20, 0x2244000
	0x01EB29D0 LDR W8, [X19]
	0x01EB29D4 LDR X21, [X19 + 0x20]
	0x01EB29D8 LDR X20, [X20 + 0x280]
	0x01EB29DC CBZ W8, 0x1EB2A50
	0x01EB29E0 CBZ X21, 0x1EB2ABC
	0x01EB29E4 LDR X0, [X21 + 0x1B0]
	0x01EB29E8 CBZ X0, 0x1EB2A88
	0x01EB29EC MOV X1, X31
	0x01EB29F0 BL 0x1E69D44
	0x01EB29F4 CBZ X0, 0x1EB2AC8
	0x01EB29F8 MOV X1, X31
	0x01EB29FC BL 0x33ED394
	0x01EB2A00 STR X0, [X31 + 0x8]
	0x01EB2A04 ADD X0, X31, 0x8
	0x01EB2A08 MOV X1, X31
	0x01EB2A0C BL 0x32C3A80
	0x01EB2A10 TBNZ X0, 0x0, 0x1EB2A64
	0x01EB2A14 STR W31, [X19]
	0x01EB2A18 LDR X8, [X31 + 0x8]
	0x01EB2A1C STR X8, [X19 + 0x28]
	0x01EB2A20 LDR X0, [X20]
	0x01EB2A24 LDR W8, [X0 + 0xE0]
	0x01EB2A28 CBNZ W8, 0x1EB2A30
	0x01EB2A2C BL 0x1C16DFC
	0x01EB2A30 ADRP X8, 0x224D000
	0x01EB2A34 LDR X8, [X8 + 0xD0]
	0x01EB2A38 ADD X0, X19, 0x8
	0x01EB2A3C LDR X3, [X8]
	0x01EB2A40 ADD X1, X31, 0x8
	0x01EB2A44 MOV X2, X19
	0x01EB2A48 BL 0x218AF00
	0x01EB2A4C B 0x1EB2AAC
	0x01EB2A50 LDR X8, [X19 + 0x28]
	0x01EB2A54 MOVN W9, 0x0
	0x01EB2A58 STR X8, [X31 + 0x8]
	0x01EB2A5C STR X31, [X19 + 0x28]
	0x01EB2A60 STR W9, [X19]
	0x01EB2A64 ADD X0, X31, 0x8
	0x01EB2A68 MOV X1, X31
	0x01EB2A6C BL 0x32C3B4C
	0x01EB2A70 CBZ X21, 0x1EB2AC0
	0x01EB2A74 LDR X0, [X21 + 0x1B0]
	0x01EB2A78 CBZ X0, 0x1EB2AC4
	0x01EB2A7C MOV X1, X31
	0x01EB2A80 BL 0x1E6A1B4
	0x01EB2A84 STR X31, [X21 + 0x1B0]
	0x01EB2A88 MOVN W8, 0x1
	0x01EB2A8C STR W8, [X19], #0x8
	0x01EB2A90 LDR X0, [X20]
	0x01EB2A94 LDR W8, [X0 + 0xE0]
	0x01EB2A98 CBNZ W8, 0x1EB2AA0
	0x01EB2A9C BL 0x1C16DFC
	0x01EB2AA0 MOV X0, X19
	0x01EB2AA4 MOV X1, X31
	0x01EB2AA8 BL 0x32C4864
	0x01EB2AAC LDP X20, X19, [X31 + 0x20]
	0x01EB2AB0 LDP X30, X21, [X31 + 0x10]
	0x01EB2AB4 ADD X31, X31, 0x30
	0x01EB2AB8 RET
	0x01EB2ABC BL 0x1C16F20
	0x01EB2AC0 BL 0x1C16F20
	0x01EB2AC4 BL 0x1C16F20
	0x01EB2AC8 BL 0x1C16F20
	0x01EB2ACC B 0x1EB2AE8
	0x01EB2AD0 B 0x1EB2AE8
	0x01EB2AD4 B 0x1EB2AE8
	0x01EB2AD8 B 0x1EB2AE8
	0x01EB2ADC B 0x1EB2AE8
	0x01EB2AE0 B 0x1EB2AE8
	0x01EB2AE4 B 0x1EB2AE8
	0x01EB2AE8 MOV X20, X0
	0x01EB2AEC CMP W1, 0x1
	0x01EB2AF0 B.NE 0x1EB2B80
	0x01EB2AF4 MOV X0, X20
	0x01EB2AF8 BL 0x3EB1AD0
	0x01EB2AFC MOV X20, X0
	0x01EB2B00 ADRP X0, 0x2241000
	0x01EB2B04 LDR X0, [X0 + 0x7D0]
	0x01EB2B08 BL 0x1C16D08
	0x01EB2B0C LDR X8, [X20]
	0x01EB2B10 LDR X1, [X8]
	0x01EB2B14 BL 0x1C17270
	0x01EB2B18 TBZ X0, 0x0, 0x1EB2B58
	0x01EB2B1C LDR X20, [X20]
	0x01EB2B20 BL 0x3EB1AE0
	0x01EB2B24 MOVN W8, 0x1
	0x01EB2B28 STR W8, [X19], #0x8
	0x01EB2B2C ADRP X0, 0x2244000
	0x01EB2B30 LDR X0, [X0 + 0x280]
	0x01EB2B34 BL 0x1C16D08
	0x01EB2B38 LDR W8, [X0 + 0xE0]
	0x01EB2B3C CBNZ W8, 0x1EB2B44
	0x01EB2B40 BL 0x1C16DFC
	0x01EB2B44 MOV X0, X19
	0x01EB2B48 MOV X1, X20
	0x01EB2B4C MOV X2, X31
	0x01EB2B50 BL 0x32C4908
	0x01EB2B54 B 0x1EB2AAC
	0x01EB2B58 MOVZ W0, 0x8
	0x01EB2B5C BL 0x3EB1AF0
	0x01EB2B60 LDR X8, [X20]
	0x01EB2B64 STR X8, [X0]
	0x01EB2B68 ADRP X1, 0x2002000
	0x01EB2B6C ADD X1, X1, 0xE58
	0x01EB2B70 MOV X2, X31
	0x01EB2B74 BL 0x3EB1B00
	0x01EB2B78 MOV X20, X0
	0x01EB2B7C BL 0x3EB1AE0
	0x01EB2B80 MOV X0, X20
	0x01EB2B84 BL 0x1D2C690
	0x01EB2B88 BL 0x1990590
	0x01EB2B8C STR X30, [X31 - 0x30]!
	0x01EB2B90 STP X22, X21, [X31 + 0x10]
	0x01EB2B94 STP X20, X19, [X31 + 0x20]
	0x01EB2B98 ADRP X21, 0x2527000

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X26, 0x2528000
	014 Move X25, 0x224E000
	015 Move X20, 0x224E000
	016 Move X24, 0x224E000
	017 Move X23, 0x224E000
	018 Move X22, 0x2244000
	019 Move X21, 0x2247000
	020 Move X29, 0x2247000
	021 Move X28, 0x224E000
	022 Move X27, 0x224E000
	023 Move X25, [X25+40]
	024 Move X20, [X20+48]
	025 Move X24, [X24+56]
	026 Move X23, [X23+64]
	027 Move X22, [X22+2640]
	028 Move X21, [X21+1408]
	029 Move X29, [X29+1416]
	030 Move X28, [X28+72]
	031 Move X27, [X27+80]
	032 Move W8, [X26+933]
	033 Move X19, X0
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {85}
	038 Move X0, 0x2244000
	039 Move X0, [X0+2640]
	040 Call 0x1C17CF4
	041 Move X0, 0x224E000
	042 Move X0, [X0+88]
	043 Call 0x1C17CF4
	044 Move X0, 0x224E000
	045 Move X0, [X0+64]
	046 Call 0x1C17CF4
	047 Move X0, 0x224E000
	048 Move X0, [X0+96]
	049 Call 0x1C17CF4
	050 Move X0, 0x224E000
	051 Move X0, [X0+56]
	052 Call 0x1C17CF4
	053 Move X0, 0x2247000
	054 Move X0, [X0+1416]
	055 Call 0x1C17CF4
	056 Move X0, 0x224E000
	057 Move X0, [X0+48]
	058 Call 0x1C17CF4
	059 Move X0, 0x2247000
	060 Move X0, [X0+1408]
	061 Call 0x1C17CF4
	062 Move X0, 0x224E000
	063 Move X0, [X0+40]
	064 Call 0x1C17CF4
	065 Move X0, 0x224E000
	066 Move X0, [X0+104]
	067 Call 0x1C17CF4
	068 Move X0, 0x224B000
	069 Move X0, [X0+3816]
	070 Call 0x1C17CF4
	071 Move X0, 0x224E000
	072 Move X0, [X0+80]
	073 Call 0x1C17CF4
	074 Move X0, 0x224E000
	075 Move X0, [X0+72]
	076 Call 0x1C17CF4
	077 Move X0, 0x224E000
	078 Move X0, [X0+112]
	079 Call 0x1C17CF4
	080 Move X0, 0x224E000
	081 Move X0, [X0+120]
	082 Call 0x1C17CF4
	083 Move W8, 1
	084 Move [X26+933], W8
	085 Call 0x1C17D44
	086 Move TEMP, 0
	087 Not TEMP
	088 Move W26, TEMP
	089 Move [X19+48], W26
	090 Call 0x1C17D44
	091 Move W8, 1
	092 Move [X19+52], W26
	093 Move [X19+92], W8
	094 Move X0, [X25]
	095 Call 0x1C17F10
	096 Move X1, [X20]
	097 Move X20, X0
	098 Call List`1<NetworkId>..ctor, X0
	099 Move [X19+112], X20
	100 Move X0, [X24]
	101 Call 0x1C17F10
	102 Move X1, [X23]
	103 Move X20, X0
	104 Call Dictionary`2<NetworkObjectTypeId, Object>..ctor, X0
	105 Move [X19+200], X20
	106 Move X0, [X22]
	107 Call 0x1C17F10
	108 Move X1, X31
	109 Move X20, X0
	110 Call CancellationTokenSource..ctor, X0
	111 Move [X19+216], X20
	112 Move X0, [X21]
	113 Call 0x1C17F10
	114 Move X1, [X29]
	115 Move X20, X0
	116 Call List`1<Object>..ctor, X0
	117 Move [X19+224], X20
	118 Move X0, [X28]
	119 Call 0x1C17F10
	120 Move X1, [X27]
	121 Move X20, X0
	122 Call Stack`1<Object>..ctor, X0
	123 Move [X19+240], X20
	124 Move X8, 0x224E000
	125 Move X8, [X8+120]
	126 Move X0, [X8]
	127 Call 0x1C17F10
	128 Move X8, 0x224E000
	129 Move X8, [X8+112]
	130 Move X20, X0
	131 Move X1, [X8]
	132 Call TaskCompletionSource`1<Int32>..ctor, X0
	133 Move [X19+376], X20
	134 Move X8, 0x224E000
	135 Move X8, [X8+96]
	136 Move X0, [X8]
	137 Call 0x1C17F10
	138 Move X8, 0x224E000
	139 Move X8, [X8+88]
	140 Move X20, X0
	141 Move X1, [X8]
	142 Call Dictionary`2<Int64, Object>..ctor, X0
	143 Move [X19+384], X20
	144 Move X8, 0x224B000
	145 Move X8, [X8+3816]
	146 Move X0, [X8]
	147 Call 0x1C17F10
	148 Move X1, X31
	149 Move X2, X31
	150 Move X20, X0
	151 Call SessionInfo..ctor, X0, X1
	152 Move [X19+400], X20
	153 Move X8, 0x224E000
	154 Move X8, [X8+104]
	155 Move X0, [X8]
	156 Call 0x1C17F10
	157 Move X1, X31
	158 Move X20, X0
	159 Call LobbyInfo..ctor, X0
	160 Move [X19+408], X20
	161 Move X0, X19
	162 Move X20, [X31+80]
	163 Move X19, [X31+88]
	164 Move X22, [X31+64]
	165 Move X21, [X31+72]
	166 Move X24, [X31+48]
	167 Move X23, [X31+56]
	168 Move X26, [X31+32]
	169 Move X25, [X31+40]
	170 Move X28, [X31+16]
	171 Move X27, [X31+24]
	172 Move X1, X31
	173 Move X29, [X31+96]
	174 Move X30, [X31+104]
	175 Call Behaviour..ctor, X0
	176 Return 

Method: System.Void .cctor()

Disassembly:
	0x01EB2B9C ADRP X22, 0x2244000
	0x01EB2BA0 LDRB W8, [X21 + 0x3B4]
	0x01EB2BA4 LDR X22, [X22 + 0x280]
	0x01EB2BA8 MOV X19, X1
	0x01EB2BAC MOV X20, X0
	0x01EB2BB0 TBNZ X8, 0x0, 0x1EB2BC8
	0x01EB2BB4 ADRP X0, 0x2244000
	0x01EB2BB8 LDR X0, [X0 + 0x280]
	0x01EB2BBC BL 0x1C16CF4
	0x01EB2BC0 MOVZ W8, 0x1
	0x01EB2BC4 STRB W8, [X21 + 0x3B4]
	0x01EB2BC8 LDR X0, [X22]
	0x01EB2BCC LDR W8, [X0 + 0xE0]
	0x01EB2BD0 CBNZ W8, 0x1EB2BD8
	0x01EB2BD4 BL 0x1C16DFC
	0x01EB2BD8 ADD X0, X20, 0x8
	0x01EB2BDC MOV X1, X19
	0x01EB2BE0 LDP X20, X19, [X31 + 0x20]
	0x01EB2BE4 LDP X22, X21, [X31 + 0x10]
	0x01EB2BE8 MOV X2, X31
	0x01EB2BEC LDR X30, [X31], #0x30
	0x01EB2BF0 B 0x32C477C
	0x01EB2BF4 LDR W8, [X0 + 0x10]
	0x01EB2BF8 CMP W8, 0x1
	0x01EB2BFC B.EQ 0x1EB2C08
	0x01EB2C00 ADDS W31, W8, 0x3
	0x01EB2C04 B.NE 0x1EB2C0C
	0x01EB2C08 B 0x1EB2FD0
	0x01EB2C0C RET
	0x01EB2C10 SUB X31, X31, 0xA0
	0x01EB2C14 STP X30, X0, [X31 + 0x60]
	0x01EB2C18 STP X24, X23, [X31 + 0x70]
	0x01EB2C1C STP X22, X21, [X31 + 0x80]
	0x01EB2C20 STP X20, X19, [X31 + 0x90]
	0x01EB2C24 ADRP X19, 0x2527000
	0x01EB2C28 LDRB W8, [X19 + 0x3B5]
	0x01EB2C2C MOV X20, X0
	0x01EB2C30 TBNZ X8, 0x0, 0x1EB2C90
	0x01EB2C34 ADRP X0, 0x224D000
	0x01EB2C38 LDR X0, [X0 + 0xD8]
	0x01EB2C3C BL 0x1C16CF4
	0x01EB2C40 ADRP X0, 0x224D000
	0x01EB2C44 LDR X0, [X0 + 0xE0]
	0x01EB2C48 BL 0x1C16CF4
	0x01EB2C4C ADRP X0, 0x224D000
	0x01EB2C50 LDR X0, [X0 + 0xE8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x2528000
	008 Move X23, 0x224E000
	009 Move X19, 0x224E000
	010 Move X20, 0x224B000
	011 Move X21, 0x2244000
	012 Move W8, [X22+934]
	013 Move X23, [X23+128]
	014 Move X19, [X19+136]
	015 Move X20, [X20+3712]
	016 Move X21, [X21+632]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x224E000
	022 Move X0, [X0+136]
	023 Call 0x1C17CF4
	024 Move X0, 0x224E000
	025 Move X0, [X0+128]
	026 Call 0x1C17CF4
	027 Move X0, 0x224B000
	028 Move X0, [X0+3712]
	029 Call 0x1C17CF4
	030 Move X0, 0x2244000
	031 Move X0, [X0+632]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+934], W8
	035 Move X0, [X23]
	036 Call 0x1C17F10
	037 Move X1, [X19]
	038 Move X19, X0
	039 Call List`1<Object>..ctor, X0
	040 Move X8, [X20]
	041 Move X8, [X8+184]
	042 Move [X8], X19
	043 Move X8, [X21]
	044 Move X9, [X20]
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X8, [X8+184]
	050 Move X9, [X9+184]
	051 Move X8, [X8]
	052 Move [X9+24], X8
	053 Move X30, [X31+48]
	054 Move X23, [X31+56]
	055 Return 

Method: System.Boolean <RunHostMigrationResume>b__11_0()

Disassembly:
	0x01EB2C54 BL 0x1C16CF4
	0x01EB2C58 ADRP X0, 0x224C000
	0x01EB2C5C LDR X0, [X0 + 0x378]
	0x01EB2C60 BL 0x1C16CF4
	0x01EB2C64 ADRP X0, 0x2241000
	0x01EB2C68 LDR X0, [X0 + 0x598]

ISIL:
	001 Move [X31-16], X30
	002 Call NetworkRunner.get_IsSceneManagerBusy, X0
	003 NotImplemented "Instruction ORN not yet implemented."
	004 And W0, W8, 1
	005 Move X30, [X31+16]
	006 Return X0

Method: System.Boolean <SendHostMigrationSnapshot>b__17_0()

Disassembly:
	0x01EB2C6C BL 0x1C16CF4
	0x01EB2C70 ADRP X0, 0x224C000
	0x01EB2C74 LDR X0, [X0 + 0x798]
	0x01EB2C78 BL 0x1C16CF4
	0x01EB2C7C ADRP X0, 0x224D000
	0x01EB2C80 LDR X0, [X0 + 0xF0]
	0x01EB2C84 BL 0x1C16CF4
	0x01EB2C88 MOVZ W8, 0x1
	0x01EB2C8C STRB W8, [X19 + 0x3B5]
	0x01EB2C90 ADD X8, X31, 0x68
	0x01EB2C94 STP X31, X31, [X31 + 0x50]
	0x01EB2C98 STR X8, [X31 + 0x48]
	0x01EB2C9C LDR W8, [X20 + 0x10]
	0x01EB2CA0 LDR X19, [X20 + 0x28]
	0x01EB2CA4 CMP W8, 0x1
	0x01EB2CA8 B.EQ 0x1EB2D5C
	0x01EB2CAC CBNZ W8, 0x1EB2F68
	0x01EB2CB0 MOVN W8, 0x0
	0x01EB2CB4 STR W8, [X20 + 0x10]
	0x01EB2CB8 CBZ X19, 0x1EB2EC4
	0x01EB2CBC LDR X0, [X19 + 0x50]
	0x01EB2CC0 CBZ X0, 0x1EB2ECC
	0x01EB2CC4 ADRP X9, 0x224C000
	0x01EB2CC8 LDR X9, [X9 + 0x798]
	0x01EB2CCC LDR X8, [X0]
	0x01EB2CD0 LDR X1, [X9]
	0x01EB2CD4 LDRB W10, [X8 + 0x130]
	0x01EB2CD8 LDRB W9, [X1 + 0x130]
	0x01EB2CDC CMP W10, W9
	0x01EB2CE0 B.CC 0x1EB2EC0
	0x01EB2CE4 LDR X8, [X8 + 0xC8]
	0x01EB2CE8 ADD X8, X8, X9, 0x3, LSL
	0x01EB2CEC LDUR X8, [X8 - 0x8]
	0x01EB2CF0 CMP X8, X1
	0x01EB2CF4 B.NE 0x1EB2EC0
	0x01EB2CF8 MOV X1, X31
	0x01EB2CFC BL 0x1ED17A4
	0x01EB2D00 LDR X8, [X31 + 0x68]
	0x01EB2D04 STP X0, X1, [X8 + 0x30]
	0x01EB2D08 CBZ X0, 0x1EB2ED0
	0x01EB2D0C ADRP X8, 0x224D000
	0x01EB2D10 LDR X8, [X8 + 0xD8]
	0x01EB2D14 LDR X1, [X8]
	0x01EB2D18 BL 0x2A642B8
	0x01EB2D1C CBZ X0, 0x1EB2ED4

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move [X31+8], W31
	009 Move [X31], X31
	010 Move X22, X0
	011 Add X22, X22, 48
	012 Move W21, [X22]
	013 Move X19, X0
	014 Call 0x1C17D44
	015 Add X20, X19, 40
	016 Add X2, X31, 8
	017 Add X3, X31, 4
	018 Add X4, X31, 0
	019 Move X0, X19
	020 Move X1, X20
	021 Call NetworkRunner.GetServerSnapshot, X0, X1, X2, X3, X4
	022 Move W8, W0
	023 Move W0, W31
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {47}
	028 Call 0x1C17D44
	029 Move W23, [X31+8]
	030 Move X0, X22
	031 Move W2, W21
	032 Move X3, X31
	033 Move W1, W23
	034 Call Interlocked.CompareExchange, X0, X1, X2
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X0, [X19+432]
	037 Compare X0, 0
	038 JumpIfEqual {55}
	039 Move W2, [X31]
	040 Move W4, [X31+4]
	041 Move X1, [X20]
	042 Move W3, W23
	043 Move X5, X31
	044 Call CloudServices.SendStateSnapshot, X0, X1, X2, X3, X4
	045 Move W0, 1
	046 Move W0, W31
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X30, [X31+16]
	052 Move X23, [X31+24]
	053 Add X31, X31, 64
	054 Return X0
	055 Call 0x1C17F20

Method: Fusion.NetworkSceneAsyncOp <UnloadScene>b__302_0(Fusion.SceneRef x)

Disassembly:
	0x01EB2D20 ADRP X8, 0x224D000
	0x01EB2D24 LDR X8, [X8 + 0xF0]
	0x01EB2D28 LDR X1, [X8]
	0x01EB2D2C ADD X8, X31, 0x8
	0x01EB2D30 BL 0x27552F8
	0x01EB2D34 LDUR V0, [X31 + 0x8]
	0x01EB2D38 LDR X9, [X31 + 0x18]
	0x01EB2D3C LDR X8, [X31 + 0x68]
	0x01EB2D40 MOVN W10, 0x2
	0x01EB2D44 STR V0, [X31 + 0x2]
	0x01EB2D48 STR X9, [X31 + 0x30]
	0x01EB2D4C STR X9, [X8 + 0x50]
	0x01EB2D50 STR V0, [X8 + 0x4]
	0x01EB2D54 STR W10, [X8 + 0x10]
	0x01EB2D58 B 0x1EB2DB0
	0x01EB2D5C LDR X0, [X20 + 0x58]
	0x01EB2D60 MOVN W8, 0x2
	0x01EB2D64 STR W8, [X20 + 0x10]
	0x01EB2D68 CBZ X0, 0x1EB2EC8
	0x01EB2D6C LDR W8, [X0 + 0x60]
	0x01EB2D70 ORR W8, W8, 0x2
	0x01EB2D74 STR W8, [X0 + 0x60]
	0x01EB2D78 MOV X1, X31
	0x01EB2D7C BL 0x3C32ECC
	0x01EB2D80 ADRP X8, 0x2241000
	0x01EB2D84 LDR X8, [X8 + 0x598]
	0x01EB2D88 MOV X20, X0
	0x01EB2D8C LDR X0, [X8]
	0x01EB2D90 LDR W8, [X0 + 0xE0]
	0x01EB2D94 CBNZ W8, 0x1EB2D9C
	0x01EB2D98 BL 0x1C16DFC
	0x01EB2D9C MOV X0, X20
	0x01EB2DA0 MOV X1, X31
	0x01EB2DA4 BL 0x3C394A8
	0x01EB2DA8 LDR X8, [X31 + 0x68]
	0x01EB2DAC STR X31, [X8 + 0x58]
	0x01EB2DB0 ADRP X23, 0x224D000
	0x01EB2DB4 ADRP X24, 0x224C000
	0x01EB2DB8 ADRP X20, 0x2247000
	0x01EB2DBC LDR X23, [X23 + 0xE0]
	0x01EB2DC0 LDR X24, [X24 + 0x378]
	0x01EB2DC4 LDR X20, [X20 + 0xCC0]
	0x01EB2DC8 LDR X1, [X23]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2528000
	006 Move W8, [X21+935]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2249000
	014 Move X0, [X0+3248]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+935], W8
	018 Move X20, [X20+256]
	019 Compare X20, 0
	020 JumpIfEqual {50}
	021 Move X10, 0x2249000
	022 Move X8, [X20]
	023 Move X10, [X10+3248]
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Move X1, [X10]
	026 Compare X9, 0
	027 JumpIfEqual {34}
	028 Move X10, [X8+176]
	029 Add X10, X10, 8
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Subtract X9, X9, 1
	033 Add X10, X10, 16
	034 Move W2, 10
	035 Move X0, X20
	036 Call 0x1C5D788
	037 Move W9, [X10]
	038 Add W9, W9, 10
	039 Add X8, X8, W9
	040 Add X0, X8, 312
	041 Move X3, [X0]
	042 Move X2, [X0+8]
	043 And X1, X19, 0
	044 Move X0, X20
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 CallNoReturn X3
	050 Call 0x1C17F20

Method: System.Void <SceneInfoSyncSceneManager>b__321_0(Fusion.NetworkSceneAsyncOp op)

Disassembly:
	0x01EB2DCC ADD X0, X8, 0x40

ISIL:
	001 Call NetworkRunner.OnRemoteSceneLoadCompleted, X0, X1
	002 Return 

Method: System.Void <SceneInfoSyncSceneManager>b__321_1(Fusion.NetworkSceneAsyncOp op)

Disassembly:
	0x01EB2DD0 BL 0x2C03CD0

ISIL:
	001 Call NetworkRunner.OnRemoteSceneUnloadCompleted, X0, X1
	002 Return 

Method: Fusion.NetworkId <SpawnInternal>g__CheckIdOrGetNewId|370_0(Fusion.NetworkObject obj, ref Fusion.NetworkRunner/<>c__DisplayClass370_0 param_1)

Disassembly:
	0x01EAF4C8 BL 0x1C16DFC
	0x01EAF4CC MOV X0, X27
	0x01EAF4D0 MOV X1, X31
	0x01EAF4D4 BL 0x1E99830
	0x01EAF4D8 STR X0, [X31 + 0x78]
	0x01EAF4DC STUR X0, [X20 + 0x64]
	0x01EAF4E0 LDRH W27, [X31 + 0x100]
	0x01EAF4E4 MOV X0, X22
	0x01EAF4E8 BL 0x1E9D0AC
	0x01EAF4EC TBZ X0, 0x0, 0x1EAF500
	0x01EAF4F0 LDR X8, [X20 + 0x20]
	0x01EAF4F4 CBZ X8, 0x1EAF508
	0x01EAF4F8 LDR W29, [X8]
	0x01EAF4FC B 0x1EAF50C
	0x01EAF500 MOV X8, X31
	0x01EAF504 B 0x1EAF52C
	0x01EAF508 MOV W29, W31
	0x01EAF50C ADRP X8, 0x2247000
	0x01EAF510 LDR X8, [X8 + 0x398]
	0x01EAF514 LDR X0, [X8]
	0x01EAF518 LDR W8, [X0 + 0xE0]
	0x01EAF51C CBNZ W8, 0x1EAF524
	0x01EAF520 BL 0x1C16DFC
	0x01EAF524 CMP W29, 0x0
	0x01EAF528 CSEL X8, X31, X20, EQ
	0x01EAF52C LDR X9, [X31 + 0x78]
	0x01EAF530 STP X25, X26, [X31 + 0x18]
	0x01EAF534 SXTH W10, W27
	0x01EAF538 ORR W10, W10, 0x10000
	0x01EAF53C STR X9, [X31 + 0x10]
	0x01EAF540 LDR W9, [X24 + 0x10]
	0x01EAF544 LDR V0, [X24]
	0x01EAF548 STR X8, [X31 + 0x60]
	0x01EAF54C ADD X8, X31, 0x80
	0x01EAF550 ADD X1, X31, 0x10
	0x01EAF554 MOV X0, X22
	0x01EAF558 STUR X23, [X31 + 0x3C]
	0x01EAF55C STR W31, [X31 + 0x44]
	0x01EAF560 STP X21, X31, [X31 + 0x48]
	0x01EAF564 STP W10, W31, [X31 + 0x58]
	0x01EAF568 STUR V0, [X31 + 0x28]
	0x01EAF56C STR W9, [X31 + 0x38]
	0x01EAF570 BL 0x1EAB01C
	0x01EAF574 ADRP X22, 0x252A000
	0x01EAF578 LDR W20, [X31 + 0x88]
	0x01EAF57C LDRB W8, [X22 + 0x3BF]
	0x01EAF580 LDR X21, [X31 + 0x90]
	0x01EAF584 CBZ W8, 0x1EAF5F8
	0x01EAF588 CBZ X21, 0x1EAF610
	0x01EAF58C ADRP X8, 0x2247000
	0x01EAF590 LDR X8, [X8 + 0xBA8]
	0x01EAF594 LDR X9, [X21]
	0x01EAF598 LDR X1, [X8]
	0x01EAF59C LDRB W11, [X9 + 0x130]
	0x01EAF5A0 LDRB W10, [X1 + 0x130]
	0x01EAF5A4 CMP W11, W10
	0x01EAF5A8 B.CC 0x1EAF5F0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x252B000
	007 Move X22, 0x2245000
	008 Move W8, [X21+936]
	009 Move X22, [X22+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x2248000
	017 Move X0, [X0+920]
	018 Call 0x1C17CF4
	019 Move X0, 0x2245000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+936], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Move X1, X31
	031 Move X2, X31
	032 Call Object.op_Inequality, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {59}
	037 Compare X19, 0
	038 JumpIfEqual {72}
	039 Move X8, [X19+32]
	040 Compare X8, 0
	041 JumpIfEqual {43}
	042 Move W21, [X8]
	043 Move W21, W31
	044 Move X8, 0x2248000
	045 Move X8, [X8+920]
	046 Move X0, [X8]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfEqual {56}
	050 Compare W21, 0
	051 JumpIfEqual {59}
	052 Move X8, [X19+32]
	053 Compare X8, 0
	054 JumpIfEqual {71}
	055 Move W0, [X8]
	056 Call 0x1C17DFC
	057 Compare W21, 0
	058 JumpIfNotEqual {52}
	059 Move X0, [X20+80]
	060 Compare X0, 0
	061 JumpIfEqual {72}
	062 Move X1, X31
	063 Call Simulation.GetNextId, X0
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 And X0, X0, 0
	069 Move X30, [X31+48]
	070 Return X0
	071 Move X0, X31
	072 Call 0x1C17F20

Method: Fusion.NetworkSpawnOp <SpawnInternal>g__Failed|370_1(Fusion.NetworkSpawnStatus status, ref Fusion.NetworkRunner/<>c__DisplayClass370_0 param_1)

Disassembly:
	0x01EAF0D0 STRB W8, [X26 + 0x38E]
	0x01EAF0D4 MOVI V0.2D, 0x0
	0x01EAF0D8 ADD X0, X31, 0x88
	0x01EAF0DC MOV X1, X31
	0x01EAF0E0 STR X31, [X31 + 0x70]
	0x01EAF0E4 STP X31, X31, [X31 + 0x8]
	0x01EAF0E8 STP V0, V0, [X31 + 0x50]
	0x01EAF0EC STP V0, V0, [X31 + 0x30]
	0x01EAF0F0 STR V0, [X31 + 0x2]
	0x01EAF0F4 STR X31, [X31 + 0x18]
	0x01EAF0F8 BL 0x1E991E8
	0x01EAF0FC TBZ X0, 0x0, 0x1EAF1A4
	0x01EAF100 ADRP X8, 0x224F000
	0x01EAF104 LDR X8, [X8 + 0x378]
	0x01EAF108 LDR W26, [X31 + 0x88]
	0x01EAF10C LDR X0, [X8]
	0x01EAF110 LDR W8, [X0 + 0xE0]
	0x01EAF114 CBNZ W8, 0x1EAF11C
	0x01EAF118 BL 0x1C16DFC
	0x01EAF11C MOV X0, X26
	0x01EAF120 MOV X1, X31
	0x01EAF124 BL 0x1E99830
	0x01EAF128 STP X0, X25, [X31 + 0x20]
	0x01EAF12C STR X23, [X31 + 0x30]
	0x01EAF130 LDR W9, [X22 + 0x10]
	0x01EAF134 LDR V0, [X22]
	0x01EAF138 SXTH W8, W24
	0x01EAF13C ORR W8, W8, 0x10000
	0x01EAF140 STP W8, W31, [X31 + 0x68]
	0x01EAF144 ADD X8, X31, 0x8
	0x01EAF148 ADD X1, X31, 0x20
	0x01EAF14C MOV X0, X19

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+80], X20
	004 Move [X31+88], X19
	005 Move X20, X2
	006 Move W2, W1
	007 Move X1, X0
	008 Add X0, X31, 8
	009 Move X3, X31
	010 Move X4, X31
	011 Move X19, X8
	012 Move [X31+8], X31
	013 Move [X31+16], X31
	014 Move [X31+24], X31
	015 Call NetworkSpawnOp..ctor, X0, X1, X2, X3
	016 Move X8, [X20+8]
	017 Compare X8, 0
	018 JumpIfEqual {28}
	019 NotImplemented "Instruction LDUR not yet implemented."
	020 Move X9, [X31+24]
	021 Move X10, [X8+24]
	022 Move X0, [X8+64]
	023 Move [X31+2], V0
	024 Move [X31+48], X9
	025 Move X2, [X8+40]
	026 Add X1, X31, 32
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X8, [X31+24]
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 Move X30, [X31+64]
	031 Move [X19+16], X8
	032 Move [X19], V0
	033 Move X20, [X31+80]
	034 Move X19, [X31+88]
	035 Add X31, X31, 96
	036 Return X0

Method: Fusion.NetworkSpawnOp <SpawnInternal>g__Complete|370_2(Fusion.NetworkObject instance, ref Fusion.NetworkRunner/<>c__DisplayClass370_0 param_1)

Disassembly:
	0x01EAF618 LDR X9, [X31 + 0x98]
	0x01EAF61C CMP X8, X9
	0x01EAF620 B.NE 0x1EAF738
	0x01EAF624 MOV W0, W20
	0x01EAF628 LDP X20, X19, [X31 + 0xF0]
	0x01EAF62C LDP X22, X21, [X31 + 0xE0]
	0x01EAF630 LDP X24, X23, [X31 + 0xD0]
	0x01EAF634 LDP X26, X25, [X31 + 0xC0]
	0x01EAF638 LDP X28, X27, [X31 + 0xB0]
	0x01EAF63C LDP X29, X30, [X31 + 0xA0]
	0x01EAF640 ADD X31, X31, 0x100
	0x01EAF644 RET
	0x01EAF648 ADRP X0, 0x2249000
	0x01EAF64C LDR X0, [X0 + 0x528]
	0x01EAF650 BL 0x1C16D08
	0x01EAF654 BL 0x1C16F10
	0x01EAF658 MOV X19, X0
	0x01EAF65C ADRP X0, 0x224F000
	0x01EAF660 LDR X0, [X0 + 0xF10]
	0x01EAF664 BL 0x1C16D08
	0x01EAF668 MOV X1, X0
	0x01EAF66C MOV X0, X19
	0x01EAF670 MOV X2, X31
	0x01EAF674 BL 0x330E100
	0x01EAF678 ADRP X0, 0x224F000
	0x01EAF67C LDR X0, [X0 + 0xF88]
	0x01EAF680 BL 0x1C16D08
	0x01EAF684 MOV X1, X0
	0x01EAF688 MOV X0, X19
	0x01EAF68C BL 0x1C16DEC
	0x01EAF690 ADRP X0, 0x224F000
	0x01EAF694 LDR X0, [X0 + 0xF38]
	0x01EAF698 BL 0x1C16D08
	0x01EAF69C MOV X1, X20
	0x01EAF6A0 MOV X2, X31
	0x01EAF6A4 BL 0x321EFD0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X20, X1
	007 Move X21, X2
	008 Move X1, X0
	009 Add X0, X31, 8
	010 Move W2, 1
	011 Move X3, X20
	012 Move X4, X31
	013 Move X19, X8
	014 Move [X31+8], X31
	015 Move [X31+16], X31
	016 Move [X31+24], X31
	017 Call NetworkSpawnOp..ctor, X0, X1, X2, X3
	018 Move X8, [X21+8]
	019 Compare X8, 0
	020 JumpIfEqual {30}
	021 NotImplemented "Instruction LDUR not yet implemented."
	022 Move X9, [X31+24]
	023 Move X10, [X8+24]
	024 Move X0, [X8+64]
	025 Move [X31+2], V0
	026 Move [X31+48], X9
	027 Move X2, [X8+40]
	028 Add X1, X31, 32
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Compare X20, 0
	031 JumpIfEqual {43}
	032 Move [X20+40], W31
	033 Move X8, [X31+24]
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 Move X30, [X31+64]
	036 Move X21, [X31+72]
	037 Move [X19+16], X8
	038 Move [X19], V0
	039 Move X20, [X31+80]
	040 Move X19, [X31+88]
	041 Add X31, X31, 96
	042 Return X0
	043 Call 0x1C17F20

Method: Fusion.NetworkSpawnOp <SpawnInternal>g__Incomplete|370_3(in Fusion.NetworkRunner/SpawnArgs spawnArgs, ref Fusion.NetworkRunner/<>c__DisplayClass370_0 param_1)

Disassembly:
	0x01EAF15C STUR V0, [X31 + 0x38]
	0x01EAF160 STR W9, [X31 + 0x48]
	0x01EAF164 STR X31, [X31 + 0x70]
	0x01EAF168 BL 0x1EAB01C
	0x01EAF16C LDR W0, [X31 + 0x88]
	0x01EAF170 MOV X1, X31
	0x01EAF174 BL 0x1E99830
	0x01EAF178 MOV X1, X0
	0x01EAF17C ADD X0, X31, 0x8
	0x01EAF180 MOV X2, X31
	0x01EAF184 BL 0x1EB35B4
	0x01EAF188 LDP X20, X19, [X31 + 0xC0]
	0x01EAF18C LDP X22, X21, [X31 + 0xB0]
	0x01EAF190 LDP X24, X23, [X31 + 0xA0]
	0x01EAF194 LDP X26, X25, [X31 + 0x90]
	0x01EAF198 LDR X30, [X31 + 0x80]
	0x01EAF19C ADD X31, X31, 0xD0
	0x01EAF1A0 RET
	0x01EAF1A4 ADRP X0, 0x224C000
	0x01EAF1A8 LDR X0, [X0 + 0x578]
	0x01EAF1AC BL 0x1C16D08
	0x01EAF1B0 BL 0x1C16F10
	0x01EAF1B4 MOV X19, X0
	0x01EAF1B8 ADRP X0, 0x224F000
	0x01EAF1BC LDR X0, [X0 + 0xF70]
	0x01EAF1C0 BL 0x1C16D08
	0x01EAF1C4 MOV X1, X0
	0x01EAF1C8 MOV X0, X19
	0x01EAF1CC MOV X2, X31
	0x01EAF1D0 BL 0x3314A68
	0x01EAF1D4 ADRP X0, 0x224F000
	0x01EAF1D8 LDR X0, [X0 + 0xF78]
	0x01EAF1DC BL 0x1C16D08
	0x01EAF1E0 MOV X1, X0
	0x01EAF1E4 MOV X0, X19
	0x01EAF1E8 BL 0x1C16DEC
	0x01EAF1EC SUB X31, X31, 0x90
	0x01EAF1F0 STR X30, [X31 + 0x30]
	0x01EAF1F4 STP X28, X27, [X31 + 0x40]
	0x01EAF1F8 STP X26, X25, [X31 + 0x50]
	0x01EAF1FC STP X24, X23, [X31 + 0x60]
	0x01EAF200 STP X22, X21, [X31 + 0x70]
	0x01EAF204 STP X20, X19, [X31 + 0x80]
	0x01EAF208 ADRP X28, 0x252A000
	0x01EAF20C ADRP X27, 0x2244000
	0x01EAF210 LDRB W8, [X28 + 0x38F]
	0x01EAF214 LDR X27, [X27 + 0x598]
	0x01EAF218 MOV X19, X7
	0x01EAF21C MOV X20, X6
	0x01EAF220 MOV X25, X5
	0x01EAF224 MOV X21, X4
	0x01EAF228 MOV X22, X3
	0x01EAF22C MOV X23, X2
	0x01EAF230 MOV X26, X1
	0x01EAF234 MOV X24, X0
	0x01EAF238 TBNZ X8, 0x0, 0x1EAF25C
	0x01EAF23C ADRP X0, 0x224F000
	0x01EAF240 LDR X0, [X0 + 0xF08]
	0x01EAF244 BL 0x1C16CF4
	0x01EAF248 ADRP X0, 0x2244000
	0x01EAF24C LDR X0, [X0 + 0x598]
	0x01EAF250 BL 0x1C16CF4
	0x01EAF254 MOVZ W8, 0x1
	0x01EAF258 STRB W8, [X28 + 0x38F]
	0x01EAF25C LDR X0, [X27]
	0x01EAF260 STR X31, [X31 + 0x38]
	0x01EAF264 LDR W8, [X0 + 0xE0]
	0x01EAF268 CBNZ W8, 0x1EAF270
	0x01EAF26C BL 0x1C16DFC
	0x01EAF270 MOV X0, X26
	0x01EAF274 MOV X1, X31
	0x01EAF278 MOV X2, X31
	0x01EAF27C BL 0x3C3883C
	0x01EAF280 TBNZ X0, 0x0, 0x1EAF300
	0x01EAF284 CBZ X26, 0x1EAF334
	0x01EAF288 ADRP X8, 0x224F000
	0x01EAF28C LDR X8, [X8 + 0xF08]
	0x01EAF290 ADD X1, X31, 0x38
	0x01EAF294 MOV X0, X26
	0x01EAF298 LDR X2, [X8]
	0x01EAF29C BL 0x21E6600
	0x01EAF2A0 TBZ X0, 0x0, 0x1EAF338
	0x01EAF2A4 LDRH W8, [X31 + 0x90]
	0x01EAF2A8 LDR V0, [X25]
	0x01EAF2AC LDR W9, [X25 + 0x10]
	0x01EAF2B0 LDR X1, [X31 + 0x38]
	0x01EAF2B4 ADD X5, X31, 0x10
	0x01EAF2B8 MOV X0, X24
	0x01EAF2BC MOV X2, X23
	0x01EAF2C0 MOV X3, X22
	0x01EAF2C4 MOV X4, X21
	0x01EAF2C8 MOV X6, X20
	0x01EAF2CC MOV X7, X19
	0x01EAF2D0 STR V0, [X31 + 0x1]
	0x01EAF2D4 STR W9, [X31 + 0x20]
	0x01EAF2D8 STRH W8, [X31]
	0x01EAF2DC BL 0x1EAF394
	0x01EAF2E0 LDP X20, X19, [X31 + 0x80]
	0x01EAF2E4 LDP X22, X21, [X31 + 0x70]
	0x01EAF2E8 LDP X24, X23, [X31 + 0x60]
	0x01EAF2EC LDP X26, X25, [X31 + 0x50]
	0x01EAF2F0 LDP X28, X27, [X31 + 0x40]
	0x01EAF2F4 LDR X30, [X31 + 0x30]
	0x01EAF2F8 ADD X31, X31, 0x90
	0x01EAF2FC RET
	0x01EAF300 ADRP X0, 0x2249000
	0x01EAF304 LDR X0, [X0 + 0x528]
	0x01EAF308 BL 0x1C16D08
	0x01EAF30C BL 0x1C16F10
	0x01EAF310 MOV X19, X0
	0x01EAF314 ADRP X0, 0x224F000
	0x01EAF318 LDR X0, [X0 + 0xF10]
	0x01EAF31C BL 0x1C16D08
	0x01EAF320 MOV X1, X0
	0x01EAF324 MOV X0, X19
	0x01EAF328 MOV X2, X31
	0x01EAF32C BL 0x330E100
	0x01EAF330 B 0x1EAF37C
	0x01EAF334 BL 0x1C16F20
	0x01EAF338 ADRP X0, 0x224C000
	0x01EAF33C LDR X0, [X0 + 0x578]
	0x01EAF340 BL 0x1C16D08
	0x01EAF344 BL 0x1C16F10

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+176], X30
	003 Move [X31+192], X24
	004 Move [X31+200], X23
	005 Move [X31+208], X22
	006 Move [X31+216], X21
	007 Move [X31+224], X20
	008 Move [X31+232], X19
	009 Move X22, 0x252B000
	010 Move W9, [X22+937]
	011 Move X21, X1
	012 Move X19, X0
	013 Move X20, X8
	014 Move TEMP, X9
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x2248000
	019 Move X0, [X0+2976]
	020 Call 0x1C17CF4
	021 Move X0, 0x2248000
	022 Move X0, [X0+2896]
	023 Call 0x1C17CF4
	024 Move X0, 0x2250000
	025 Move X0, [X0+3824]
	026 Call 0x1C17CF4
	027 Move X0, 0x2250000
	028 Move X0, [X0+3832]
	029 Call 0x1C17CF4
	030 Move X0, 0x2250000
	031 Move X0, [X0+3840]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+937], W8
	035 Move W8, [X21+74]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {106}
	040 Move X8, 0x2250000
	041 Move X8, [X8+3840]
	042 Move X23, 0x2248000
	043 Move X0, [X8]
	044 Move X23, [X23+2976]
	045 Call 0x1C17F10
	046 Move X1, X31
	047 Move X22, X0
	048 Call Object..ctor, X0
	049 Move X0, [X23]
	050 Call 0x1C17F10
	051 Move X1, X31
	052 Move X23, X0
	053 Call AsyncOpData..ctor, X0
	054 Compare X23, 0
	055 JumpIfEqual {142}
	056 Move [X23+16], W31
	057 Move [X23+24], X31
	058 Compare X22, 0
	059 JumpIfEqual {142}
	060 Move [X22+16], X23
	061 Move X8, 0x2248000
	062 Move X8, [X8+2896]
	063 Move X23, [X19+120]
	064 Move X0, [X8]
	065 Call 0x1C17F10
	066 Move X8, 0x2250000
	067 Move X8, [X8+3832]
	068 Move X1, X22
	069 Move X3, X31
	070 Move X24, X0
	071 Move X2, [X8]
	072 Call NetworkObjectSpawnDelegate..ctor, X0, X1, X2
	073 NotImplemented "Instruction MOVI not yet implemented."
	074 Add X0, X31, 0
	075 Move X1, X21
	076 Move X2, X24
	077 Move [X31+80], X31
	078 Move [X31+48], V0
	079 Move [X31+56], V0
	080 Move [X31+16], V0
	081 Move [X31+24], V0
	082 Move [X31], V0
	083 Call SpawnArgs..ctor, X0, X1, X2
	084 Compare X23, 0
	085 JumpIfEqual {142}
	086 Move X8, 0x2250000
	087 Move X8, [X8+3824]
	088 Add X0, X31, 88
	089 Add X1, X31, 0
	090 Move W2, 88
	091 Move X21, [X8]
	092 Call 0x3EB2AC0
	093 Add X1, X31, 88
	094 Move X0, X23
	095 Move X2, X21
	096 Call Queue`1<SpawnArgs>.Enqueue, X0, X1
	097 Move X3, [X22+16]
	098 Move X0, X20
	099 Move X1, X19
	100 Move W2, W31
	101 Move X4, X31
	102 Move [X20], X31
	103 Move [X20+8], X31
	104 Move [X20+16], X31
	105 Call NetworkSpawnOp..ctor, X0, X1, X2, X3
	106 Move X22, [X19+120]
	107 Add X0, X31, 0
	108 Move W2, 88
	109 Move X1, X21
	110 Call 0x3EB2AC0
	111 Compare X22, 0
	112 JumpIfEqual {142}
	113 Move X8, 0x2250000
	114 Move X8, [X8+3824]
	115 Add X0, X31, 88
	116 Add X1, X31, 0
	117 Move W2, 88
	118 Move X21, [X8]
	119 Call 0x3EB2AC0
	120 Add X1, X31, 88
	121 Move X0, X22
	122 Move X2, X21
	123 Call Queue`1<SpawnArgs>.Enqueue, X0, X1
	124 Move X0, X20
	125 Move X1, X19
	126 Move W2, W31
	127 Move X3, X31
	128 Move X4, X31
	129 Move [X20], X31
	130 Move [X20+8], X31
	131 Move [X20+16], X31
	132 Call NetworkSpawnOp..ctor, X0, X1, X2, X3
	133 Move X20, [X31+224]
	134 Move X19, [X31+232]
	135 Move X22, [X31+208]
	136 Move X21, [X31+216]
	137 Move X24, [X31+192]
	138 Move X23, [X31+200]
	139 Move X30, [X31+176]
	140 Add X31, X31, 240
	141 Return X0
	142 Call 0x1C17F20

