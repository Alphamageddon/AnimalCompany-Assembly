Type: Fusion.Internal.UnityArraySurrogate`2

Method: T[] get_DataProperty()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void set_DataProperty(T[] value)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void Read(System.Int32* data, System.Int32 capacity)

Disassembly:
	0x02728738 LDR X8, [X19 + 0x20]
	0x0272873C MOV X21, X0
	0x02728740 LDRB W9, [X8 + 0x135]
	0x02728744 TBNZ X9, 0x0, 0x2728754
	0x02728748 MOV X0, X8
	0x0272874C BL 0x1C5C684
	0x02728750 MOV X8, X0
	0x02728754 LDR X8, [X8 + 0xC0]
	0x02728758 LDR X0, [X8 + 0x20]
	0x0272875C LDRB W8, [X0 + 0x135]
	0x02728760 TBNZ X8, 0x0, 0x2728768
	0x02728764 BL 0x1C5C684
	0x02728768 LDR X8, [X0 + 0xB8]
	0x0272876C STR X21, [X8]
	0x02728770 LDR X0, [X19 + 0x20]
	0x02728774 LDRB W8, [X0 + 0x135]
	0x02728778 TBNZ X8, 0x0, 0x2728780
	0x0272877C BL 0x1C5C684
	0x02728780 LDR X8, [X0 + 0xC0]
	0x02728784 LDR X0, [X8 + 0x20]
	0x02728788 LDRB W8, [X0 + 0x135]
	0x0272878C TBNZ X8, 0x0, 0x2728794
	0x02728790 BL 0x1C5C684
	0x02728794 LDR X8, [X19 + 0x20]
	0x02728798 ADD X9, X8, 0x135
	0x0272879C LDRH W9, [X9]
	0x027287A0 TBNZ X9, 0x0, 0x27287BC
	0x027287A4 MOV X0, X8
	0x027287A8 BL 0x1C5C684
	0x027287AC LDR X8, [X19 + 0x20]
	0x027287B0 ADD X9, X8, 0x135
	0x027287B4 LDRH W9, [X9]
	0x027287B8 B 0x27287C0
	0x027287BC MOV X0, X8
	0x027287C0 LDR X10, [X0 + 0xC0]
	0x027287C4 LDR X10, [X10 + 0x140]
	0x027287C8 LDR X21, [X10]
	0x027287CC TBNZ X9, 0x0, 0x27287DC
	0x027287D0 MOV X0, X8
	0x027287D4 BL 0x1C5C684
	0x027287D8 MOV X8, X0
	0x027287DC LDR X8, [X8 + 0xC0]
	0x027287E0 SUB X3, X29, 0x10
	0x027287E4 MOV X0, X21
	0x027287E8 MOV X2, X31
	0x027287EC LDR X1, [X8 + 0x140]
	0x027287F0 STUR X20, [X29 - 0x10]
	0x027287F4 MOV X4, X20
	0x027287F8 LDR X8, [X1 + 0x10]
	0x027287FC BLR X8
	0x02728800 LDR X0, [X19 + 0x20]
	0x02728804 LDRB W8, [X0 + 0x135]
	0x02728808 TBNZ X8, 0x0, 0x2728810
	0x0272880C BL 0x1C5C684
	0x02728810 LDR X8, [X0 + 0xC0]
	0x02728814 MOV X1, X20
	0x02728818 LDR X0, [X8 + 0x148]
	0x0272881C BL 0x1C16E04
	0x02728820 LDR X8, [X19 + 0x20]
	0x02728824 MOV X20, X0
	0x02728828 LDRB W9, [X8 + 0x135]
	0x0272882C TBNZ X9, 0x0, 0x272883C
	0x02728830 MOV X0, X8
	0x02728834 BL 0x1C5C684
	0x02728838 MOV X8, X0
	0x0272883C LDR X8, [X8 + 0xC0]
	0x02728840 LDR X0, [X8 + 0x20]
	0x02728844 LDRB W8, [X0 + 0x135]
	0x02728848 TBNZ X8, 0x0, 0x2728850
	0x0272884C BL 0x1C5C684
	0x02728850 LDR X8, [X0 + 0xB8]
	0x02728854 STR X20, [X8 + 0x8]
	0x02728858 LDR X0, [X19 + 0x20]
	0x0272885C LDRB W8, [X0 + 0x135]
	0x02728860 TBNZ X8, 0x0, 0x2728868
	0x02728864 BL 0x1C5C684
	0x02728868 LDR X8, [X0 + 0xC0]
	0x0272886C LDR X0, [X8 + 0x20]
	0x02728870 LDRB W8, [X0 + 0x135]
	0x02728874 TBNZ X8, 0x0, 0x272887C
	0x02728878 BL 0x1C5C684
	0x0272887C LDR X8, [X23 + 0x28]
	0x02728880 LDUR X9, [X29 - 0x8]
	0x02728884 CMP X8, X9
	0x02728888 B.NE 0x27288A4
	0x0272888C ADD X31, X29, 0x0
	0x02728890 LDP X20, X19, [X31 + 0x30]
	0x02728894 LDP X22, X21, [X31 + 0x20]
	0x02728898 LDR X23, [X31 + 0x10]
	0x0272889C LDP X29, X30, [X31], #0x40
	0x027288A0 RET
	0x027288A4 BL 0x3EB1B20
	0x027288A8 MOV X1, X31
	0x027288AC STR X31, [X0 + 0x28]
	0x027288B0 B 0x3C45534
	0x027288B4 STP X30, X19, [X31 - 0x10]!
	0x027288B8 LDR X9, [X2 + 0x20]
	0x027288BC MOV X8, X1
	0x027288C0 MOV X19, X0
	0x027288C4 MOV X0, X8
	0x027288C8 LDR X9, [X9 + 0xC0]
	0x027288CC LDR X1, [X9 + 0x10]
	0x027288D0 BL 0x2728A88
	0x027288D4 CBZ X19, 0x27288EC
	0x027288D8 MOV X1, X0
	0x027288DC MOV X0, X19
	0x027288E0 MOV X2, X31
	0x027288E4 LDP X30, X19, [X31], #0x10
	0x027288E8 B 0x3C45AFC
	0x027288EC BL 0x1C16F20
	0x027288F0 STR X30, [X31 - 0x20]!
	0x027288F4 STP X20, X19, [X31 + 0x10]
	0x027288F8 CBZ X1, 0x2728930
	0x027288FC LDR X20, [X1 + 0x20]
	0x02728900 MOV X19, X0
	0x02728904 MOV X0, X1
	0x02728908 MOV X1, X31
	0x0272890C BL 0x33C4268
	0x02728910 CBZ X19, 0x2728930
	0x02728914 MOV X2, X0
	0x02728918 MOV X0, X19
	0x0272891C MOV X1, X20
	0x02728920 LDP X20, X19, [X31 + 0x10]
	0x02728924 MOV X3, X31
	0x02728928 LDR X30, [X31], #0x20
	0x0272892C B 0x3C45B14
	0x02728930 BL 0x1C16F20
	0x02728934 STR X30, [X31 - 0x40]!
	0x02728938 STP X24, X23, [X31 + 0x10]
	0x0272893C STP X22, X21, [X31 + 0x20]
	0x02728940 STP X20, X19, [X31 + 0x30]
	0x02728944 ADRP X23, 0x1CB2000
	0x02728948 ADRP X24, 0x19D3000
	0x0272894C ADRP X22, 0x19CB000
	0x02728950 LDRB W8, [X23 + 0x64E]
	0x02728954 LDR X24, [X24 + 0xC60]
	0x02728958 LDR X22, [X22 + 0x6C0]
	0x0272895C MOV X21, X3

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 64
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move [X29-56], X8
	017 Move X8, [X8+40]
	018 Move X19, X3
	019 Move W27, W2
	020 Move X20, X1
	021 Move [X29-8], X8
	022 Move X8, [X3+32]
	023 Move X21, X0
	024 Move X9, [X8+192]
	025 Move X8, [X9]
	026 Move W10, [X8+309]
	027 Move W26, [X8+252]
	028 Move TEMP, X10
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {37}
	032 Move X0, X8
	033 Call 0x1C5D684
	034 Move X9, [X19+32]
	035 Move W8, [X0+252]
	036 Move X9, [X9+192]
	037 Move W8, W26
	038 Add W8, W8, 16
	039 Add X8, X8, 15
	040 Add X10, X31, 0
	041 And X8, X8, 0x1FFFFFFFF
	042 Subtract X22, X10, X8
	043 Add X31, X22, 0
	044 Move X8, [X9+64]
	045 Move W23, [X8+252]
	046 Add X8, X31, 0
	047 Add X9, X23, 15
	048 And X9, X9, 0x1FFFFFFFF
	049 Subtract X24, X8, X9
	050 Add X31, X24, 0
	051 Add X9, X26, 15
	052 Add X8, X31, 0
	053 And X9, X9, 0x1FFFFFFFF
	054 Subtract X25, X8, X9
	055 Add X31, X25, 0
	056 Move X0, X25
	057 Move W1, W31
	058 Move X2, X26
	059 Call 0x3EB2B10
	060 Move X0, X25
	061 Move W1, W31
	062 Move X2, X26
	063 Move [X29-48], X31
	064 Call 0x3EB2B10
	065 Move X8, [X21]
	066 Move X0, X21
	067 Move [X29-64], X21
	068 Move X9, [X8+456]
	069 Move X1, [X8+464]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move [X29-48], X0
	072 Move X8, [X19+32]
	073 Subtract X0, X29, 48
	074 Move W1, W27
	075 Move X8, [X8+192]
	076 Move X2, [X8+32]
	077 Move X8, [X2]
	078 NotImplemented "Instruction BLR not yet implemented."
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X28, X31
	082 Move W27, W27
	083 Move X8, [X19+32]
	084 Move X8, [X8+192]
	085 Move X0, [X8]
	086 Move W9, [X0+309]
	087 Move TEMP, X9
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {94}
	091 Call 0x1C5D684
	092 Move X8, [X19+32]
	093 Move X8, [X8+192]
	094 Move X1, [X8+56]
	095 Subtract X8, X29, 12
	096 Subtract X4, X29, 40
	097 Move X2, X22
	098 Move X3, X25
	099 Move X5, X24
	100 Move [X29-12], W28
	101 Move [X29-40], X20
	102 Move [X29-32], X8
	103 Move [X29-24], X24
	104 Call 0x1C18728
	105 Compare X26, 0
	106 JumpIfEqual {156}
	107 Move W21, [X26+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X8, [X26]
	110 Move X1, X24
	111 Move X2, X23
	112 Move W8, [X8+260]
	113 NotImplemented "Instruction NOP not yet implemented."
	114 NotImplemented "Instruction MADD not yet implemented."
	115 Add X0, X8, 32
	116 Call 0x3EB2AC0
	117 Move X8, [X19+32]
	118 Move X8, [X8+192]
	119 Move X0, [X8+64]
	120 Move W8, [X0+309]
	121 Move TEMP, X8
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfEqual {127}
	125 Call 0x1C5D684
	126 Move W21, [X26+24]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 Add X28, X28, 1
	130 NotImplemented "Instruction CMP not yet implemented."
	131 NotImplemented "Instruction LDUR not yet implemented."
	132 Move X1, X26
	133 Move X8, [X0]
	134 Move X9, [X8+472]
	135 Move X2, [X8+480]
	136 NotImplemented "Instruction BLR not yet implemented."
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 Move X8, [X8+40]
	139 NotImplemented "Instruction LDUR not yet implemented."
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Add X31, X29, 0
	142 Move X20, [X31+80]
	143 Move X19, [X31+88]
	144 Move X22, [X31+64]
	145 Move X21, [X31+72]
	146 Move X24, [X31+48]
	147 Move X23, [X31+56]
	148 Move X26, [X31+32]
	149 Move X25, [X31+40]
	150 Move X28, [X31+16]
	151 Move X27, [X31+24]
	152 Move X29, [X31+96]
	153 Move X30, [X31+104]
	154 Return 
	155 Call 0x1C17F28
	156 Call 0x1C17F20
	157 Call 0x3EB2B20

Method: System.Void Write(System.Int32* data, System.Int32 capacity)

Disassembly:
	0x02728960 MOV X20, X2
	0x02728964 MOV X19, X1
	0x02728968 TBNZ X8, 0x0, 0x272898C
	0x0272896C ADRP X0, 0x19D3000
	0x02728970 LDR X0, [X0 + 0xC60]
	0x02728974 BL 0x1C16CF4
	0x02728978 ADRP X0, 0x19CB000
	0x0272897C LDR X0, [X0 + 0x6C0]
	0x02728980 BL 0x1C16CF4
	0x02728984 MOVZ W8, 0x1
	0x02728988 STRB W8, [X23 + 0x64E]
	0x0272898C LDR X0, [X24]
	0x02728990 MOVZ W1, 0x1
	0x02728994 BL 0x1C16D6C
	0x02728998 LDR X9, [X21 + 0x20]
	0x0272899C LDR X8, [X22]
	0x027289A0 MOV X21, X0
	0x027289A4 LDR X9, [X9 + 0xC0]
	0x027289A8 LDR W10, [X8 + 0xE0]
	0x027289AC LDR X22, [X9 + 0x20]
	0x027289B0 CBNZ W10, 0x27289BC
	0x027289B4 MOV X0, X8
	0x027289B8 BL 0x1C16DFC
	0x027289BC MOV X0, X22
	0x027289C0 MOV X1, X31
	0x027289C4 BL 0x338C698
	0x027289C8 CBZ X21, 0x2728A18
	0x027289CC MOV X22, X0
	0x027289D0 CBZ X0, 0x27289E8
	0x027289D4 LDR X8, [X21]
	0x027289D8 MOV X0, X22
	0x027289DC LDR X1, [X8 + 0x40]
	0x027289E0 BL 0x1C16E00
	0x027289E4 CBZ X0, 0x2728A20
	0x027289E8 LDR W8, [X21 + 0x18]
	0x027289EC CBZ W8, 0x2728A1C
	0x027289F0 STR X22, [X21 + 0x20]
	0x027289F4 MOV X0, X20
	0x027289F8 MOV X1, X19
	0x027289FC MOV X2, X21
	0x02728A00 LDP X20, X19, [X31 + 0x30]
	0x02728A04 LDP X22, X21, [X31 + 0x20]
	0x02728A08 LDP X24, X23, [X31 + 0x10]
	0x02728A0C MOV X3, X31
	0x02728A10 LDR X30, [X31], #0x40
	0x02728A14 B 0x3C458C8
	0x02728A18 BL 0x1C16F20
	0x02728A1C BL 0x1C16F28
	0x02728A20 BL 0x1C16F44
	0x02728A24 MOV X1, X31
	0x02728A28 BL 0x1C16DEC
	0x02728A2C STP X30, X21, [X31 - 0x20]!
	0x02728A30 STP X20, X19, [X31 + 0x10]
	0x02728A34 LDR X8, [X3 + 0x20]
	0x02728A38 MOV X20, X3
	0x02728A3C MOV X19, X2
	0x02728A40 MOV X21, X1
	0x02728A44 LDR X8, [X8 + 0xC0]
	0x02728A48 LDR X0, [X8 + 0x28]
	0x02728A4C LDRB W8, [X0 + 0x135]
	0x02728A50 TBNZ X8, 0x0, 0x2728A58
	0x02728A54 BL 0x1C5C684
	0x02728A58 BL 0x1C16F10
	0x02728A5C LDR X8, [X20 + 0x20]
	0x02728A60 MOV X1, X21
	0x02728A64 MOV X2, X19
	0x02728A68 MOV X20, X0
	0x02728A6C LDR X8, [X8 + 0xC0]
	0x02728A70 LDR X3, [X8 + 0x30]
	0x02728A74 BL 0x2E711F0
	0x02728A78 MOV X0, X20
	0x02728A7C LDP X20, X19, [X31 + 0x10]
	0x02728A80 LDP X30, X21, [X31], #0x20
	0x02728A84 RET
	0x02728A88 STR X30, [X31 - 0x20]!
	0x02728A8C STP X20, X19, [X31 + 0x10]
	0x02728A90 LDR X8, [X1 + 0x20]
	0x02728A94 MOV X20, X1
	0x02728A98 MOV X19, X0
	0x02728A9C LDRB W9, [X8 + 0x135]
	0x02728AA0 TBNZ X9, 0x0, 0x2728AB0
	0x02728AA4 MOV X0, X8
	0x02728AA8 BL 0x1C5C684
	0x02728AAC MOV X8, X0
	0x02728AB0 LDR X8, [X8 + 0xC0]
	0x02728AB4 LDR X0, [X8 + 0x28]
	0x02728AB8 LDRB W8, [X0 + 0x135]
	0x02728ABC TBNZ X8, 0x0, 0x2728AC4
	0x02728AC0 BL 0x1C5C684
	0x02728AC4 BL 0x1C16F10
	0x02728AC8 LDR X8, [X20 + 0x20]
	0x02728ACC MOV X20, X0
	0x02728AD0 LDRB W9, [X8 + 0x135]
	0x02728AD4 TBNZ X9, 0x0, 0x2728AE4
	0x02728AD8 MOV X0, X8
	0x02728ADC BL 0x1C5C684
	0x02728AE0 MOV X8, X0
	0x02728AE4 LDR X8, [X8 + 0xC0]
	0x02728AE8 MOV X0, X20
	0x02728AEC MOV X1, X19
	0x02728AF0 LDR X2, [X8 + 0x38]
	0x02728AF4 BL 0x2E712F4
	0x02728AF8 MOV X0, X20
	0x02728AFC LDP X20, X19, [X31 + 0x10]
	0x02728B00 LDR X30, [X31], #0x20
	0x02728B04 RET
	0x02728B08 SUB X31, X31, 0x70
	0x02728B0C STP X29, X30, [X31 + 0x10]
	0x02728B10 STP X28, X27, [X31 + 0x20]
	0x02728B14 STP X26, X25, [X31 + 0x30]
	0x02728B18 STP X24, X23, [X31 + 0x40]
	0x02728B1C STP X22, X21, [X31 + 0x50]
	0x02728B20 STP X20, X19, [X31 + 0x60]
	0x02728B24 ADRP X21, 0x1CB2000
	0x02728B28 LDRB W8, [X21 + 0x64F]
	0x02728B2C MOV X19, X2

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 48
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X28+40]
	017 Move X26, X0
	018 Move X19, X3
	019 Move W25, W2
	020 Move [X29-8], X8
	021 Move X8, [X3+32]
	022 Move X20, X1
	023 Move X8, [X8+192]
	024 Move X0, [X8]
	025 Move X8, [X8+64]
	026 Move W27, [X0+252]
	027 Move W9, [X0+309]
	028 Move W21, [X8+252]
	029 Move W8, W27
	030 Move TEMP, X9
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {36}
	034 Call 0x1C5D684
	035 Move W8, [X0+252]
	036 Add W8, W8, 16
	037 Add X8, X8, 15
	038 Add X9, X31, 0
	039 And X8, X8, 0x1FFFFFFFF
	040 Subtract X22, X9, X8
	041 Add X31, X22, 0
	042 Add X9, X21, 15
	043 Add X8, X31, 0
	044 And X9, X9, 0x1FFFFFFFF
	045 Subtract X23, X8, X9
	046 Add X31, X23, 0
	047 Add X9, X27, 15
	048 Add X8, X31, 0
	049 And X9, X9, 0x1FFFFFFFF
	050 Subtract X24, X8, X9
	051 Add X31, X24, 0
	052 Move X0, X24
	053 Move W1, W31
	054 Move X2, X27
	055 Call 0x3EB2B10
	056 Move X0, X24
	057 Move W1, W31
	058 Move X2, X27
	059 Move [X29-48], X31
	060 Call 0x3EB2B10
	061 Move X8, [X26]
	062 Move X0, X26
	063 Move X9, [X8+456]
	064 Move X1, [X8+464]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move [X29-48], X0
	067 Move X8, [X19+32]
	068 Subtract X0, X29, 48
	069 Move W1, W25
	070 Move X8, [X8+192]
	071 Move X2, [X8+32]
	072 Move X8, [X2]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X26, X31
	076 Move W25, W25
	077 Subtract X27, X29, 12
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 Compare X8, 0
	080 JumpIfEqual {131}
	081 Move W9, [X8+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X9, [X8]
	084 Move X0, X23
	085 Move X2, X21
	086 Move W9, [X9+260]
	087 NotImplemented "Instruction NOP not yet implemented."
	088 NotImplemented "Instruction MADD not yet implemented."
	089 Add X1, X8, 32
	090 Call 0x3EB2AC0
	091 Move X8, [X19+32]
	092 Move X8, [X8+192]
	093 Move X0, [X8]
	094 Move W9, [X0+309]
	095 Move TEMP, X9
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfEqual {102}
	099 Call 0x1C5D684
	100 Move X8, [X19+32]
	101 Move X8, [X8+192]
	102 Move X1, [X8+80]
	103 Subtract X4, X29, 40
	104 Move X2, X22
	105 Move X3, X24
	106 Move X5, X23
	107 Move [X29-12], W26
	108 Move [X29-40], X20
	109 Move [X29-32], X27
	110 Move [X29-24], X23
	111 Call 0x1C18728
	112 Add X26, X26, 1
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X8, [X28+40]
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Add X31, X29, 0
	118 Move X20, [X31+80]
	119 Move X19, [X31+88]
	120 Move X22, [X31+64]
	121 Move X21, [X31+72]
	122 Move X24, [X31+48]
	123 Move X23, [X31+56]
	124 Move X26, [X31+32]
	125 Move X25, [X31+40]
	126 Move X28, [X31+16]
	127 Move X27, [X31+24]
	128 Move X29, [X31+96]
	129 Move X30, [X31+104]
	130 Return 
	131 Call 0x1C17F20
	132 Call 0x1C17F28
	133 Call 0x3EB2B20

Method: System.Void Init(System.Int32 capacity)

Disassembly:
	0x02728B30 MOV W23, W1
	0x02728B34 MOV X20, X0
	0x02728B38 TBNZ X8, 0x0, 0x2728B74
	0x02728B3C ADRP X0, 0x19F5000
	0x02728B40 LDR X0, [X0 + 0xA70]
	0x02728B44 BL 0x1C16CF4
	0x02728B48 ADRP X0, 0x19F5000
	0x02728B4C LDR X0, [X0 + 0xA78]
	0x02728B50 BL 0x1C16CF4
	0x02728B54 ADRP X0, 0x19F5000
	0x02728B58 LDR X0, [X0 + 0xA80]
	0x02728B5C BL 0x1C16CF4
	0x02728B60 ADRP X0, 0x19CB000
	0x02728B64 LDR X0, [X0 + 0x9D0]
	0x02728B68 BL 0x1C16CF4
	0x02728B6C MOVZ W8, 0x1
	0x02728B70 STRB W8, [X21 + 0x64F]
	0x02728B74 CBZ X20, 0x2728D3C
	0x02728B78 MOV X0, X20
	0x02728B7C MOV X1, X31
	0x02728B80 BL 0x3C45B44
	0x02728B84 CBZ X0, 0x2728D3C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move W20, W1
	006 Move X19, X0
	007 Move X8, [X8+192]
	008 Move X8, [X8+88]
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X0, X8
	018 Move W1, W20
	019 Call 0x1C17D6C
	020 Move X8, [X19]
	021 Move X1, X0
	022 Move X0, X19
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X3, [X8+472]
	026 Move X2, [X8+480]
	027 Move X30, [X31+32]
	028 CallNoReturn X3

Method: System.Void .ctor()

Disassembly:
	0x02728B88 LDR W8, [X0 + 0x18]
	0x02728B8C MOV X21, X0

ISIL:
	001 Move X1, X31
	002 Call UnitySurrogateBase..ctor, X0
	003 Return 

