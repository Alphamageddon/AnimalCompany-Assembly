Type: Fusion.Internal.UnityValueSurrogate`2

Method: T get_DataProperty()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void set_DataProperty(T value)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void Read(System.Int32* data, System.Int32 capacity)

Disassembly:
	0x027331FC LDP X20, X19, [X31 + 0x30]
	0x02733200 LDP X22, X21, [X31 + 0x20]
	0x02733204 LDP X24, X23, [X31 + 0x10]
	0x02733208 MOV X3, X31
	0x0273320C LDR X30, [X31], #0x40
	0x02733210 B 0x33EDA6C
	0x02733214 LDR X8, [X20 + 0x20]
	0x02733218 LDR X8, [X8 + 0xC0]
	0x0273321C LDR X0, [X8 + 0x70]
	0x02733220 LDRB W8, [X0 + 0x135]
	0x02733224 TBNZ X8, 0x0, 0x273322C
	0x02733228 BL 0x1C5C684
	0x0273322C LDR X8, [X21]
	0x02733230 LDRB W9, [X0 + 0x130]
	0x02733234 LDRB W10, [X8 + 0x130]
	0x02733238 CMP W10, W9
	0x0273323C B.CS 0x2733314
	0x02733240 MOV X21, X31
	0x02733244 B 0x2733328
	0x02733248 MOV X0, X21
	0x0273324C MOV X1, X31
	0x02733250 BL 0x33F10E8
	0x02733254 MOV X20, X0
	0x02733258 TBZ X22, 0x0, 0x27332D8
	0x0273325C CBZ X20, 0x2733448
	0x02733260 ADRP X8, 0x19EA000
	0x02733264 LDR X8, [X8 + 0xAA0]
	0x02733268 MOV X0, X20
	0x0273326C LDR X1, [X8]
	0x02733270 BL 0x25518BC
	0x02733274 CMP W0, 0x1
	0x02733278 B.LT 0x27332D8
	0x0273327C ADRP X8, 0x19EA000
	0x02733280 LDR X8, [X8 + 0xAA8]
	0x02733284 MOV X0, X20
	0x02733288 MOV W1, W31
	0x0273328C LDR X2, [X8]
	0x02733290 BL 0x2551944
	0x02733294 CBZ X0, 0x27332D8
	0x02733298 LDR X8, [X0 + 0x10]
	0x0273329C MOV X2, X0
	0x027332A0 CBZ X8, 0x27332D8
	0x027332A4 ADRP X9, 0x19C8000
	0x027332A8 LDR X9, [X9 + 0x8A8]
	0x027332AC LDR X10, [X8]
	0x027332B0 LDR X9, [X9]
	0x027332B4 LDRB W12, [X10 + 0x130]
	0x027332B8 LDRB W11, [X9 + 0x130]
	0x027332BC CMP W12, W11
	0x027332C0 B.CC 0x27332D8
	0x027332C4 LDR X10, [X10 + 0xC8]
	0x027332C8 ADD X10, X10, X11, 0x3, LSL
	0x027332CC LDUR X10, [X10 - 0x8]
	0x027332D0 CMP X10, X9
	0x027332D4 B.EQ 0x2733438
	0x027332D8 CBZ X19, 0x2733448
	0x027332DC MOV X0, X19
	0x027332E0 MOV X1, X20
	0x027332E4 LDP X20, X19, [X31 + 0x30]
	0x027332E8 LDP X22, X21, [X31 + 0x20]
	0x027332EC LDP X24, X23, [X31 + 0x10]
	0x027332F0 MOV X2, X31
	0x027332F4 LDR X30, [X31], #0x40
	0x027332F8 B 0x33EE46C
	0x027332FC LDP X20, X19, [X31 + 0x30]
	0x02733300 LDP X22, X21, [X31 + 0x20]
	0x02733304 LDP X24, X23, [X31 + 0x10]
	0x02733308 MOV W0, W31
	0x0273330C LDR X30, [X31], #0x40
	0x02733310 RET
	0x02733314 LDR X8, [X8 + 0xC8]
	0x02733318 ADD X8, X8, X9, 0x3, LSL
	0x0273331C LDUR X8, [X8 - 0x8]
	0x02733320 CMP X8, X0
	0x02733324 CSEL X21, X21, X31, EQ
	0x02733328 LDR X0, [X23]
	0x0273332C LDR W8, [X0 + 0xE0]
	0x02733330 CBNZ W8, 0x2733338
	0x02733334 BL 0x1C16DFC
	0x02733338 MOV X0, X31
	0x0273333C BL 0x33EE5CC
	0x02733340 TBZ X0, 0x0, 0x2733368
	0x02733344 LDR X0, [X23]
	0x02733348 LDR W8, [X0 + 0xE0]
	0x0273334C CBNZ W8, 0x2733354
	0x02733350 BL 0x1C16DFC
	0x02733354 MOVZ W2, 0x1
	0x02733358 MOV W0, W31
	0x0273335C MOV X1, X19
	0x02733360 MOV X3, X31
	0x02733364 BL 0x33EE5D8
	0x02733368 LDR X0, [X23]
	0x0273336C LDR W8, [X0 + 0xE0]
	0x02733370 CBNZ W8, 0x2733378
	0x02733374 BL 0x1C16DFC
	0x02733378 ADRP X22, 0x1CA6000
	0x0273337C LDRB W8, [X22 + 0x829]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Add X29, X31, 0
	013 Subtract X31, X31, 48
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X26+40]
	016 Move X20, X3
	017 Move X21, X1
	018 Move X19, X0
	019 Move [X29-8], X8
	020 Move X27, [X3+32]
	021 Add X27, X27, 192
	022 Move X9, [X27]
	023 Move X8, [X9]
	024 Move W10, [X8+309]
	025 Move W24, [X8+252]
	026 Move TEMP, X10
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {36}
	030 Move X0, X8
	031 Call 0x1C5D684
	032 Move X27, [X20+32]
	033 Move W8, [X0+252]
	034 Add X27, X27, 192
	035 Move X9, [X27]
	036 Move W8, W24
	037 Add W8, W8, 16
	038 Add X8, X8, 15
	039 Add X10, X31, 0
	040 And X8, X8, 0x1FFFFFFFF
	041 Subtract X23, X10, X8
	042 Add X31, X23, 0
	043 Move X8, [X9+24]
	044 Add X9, X31, 0
	045 Move W8, [X8+252]
	046 Add X8, X8, 15
	047 And X8, X8, 0x1FFFFFFFF
	048 Subtract X22, X9, X8
	049 Add X31, X22, 0
	050 Add X9, X24, 15
	051 Add X8, X31, 0
	052 And X9, X9, 0x1FFFFFFFF
	053 Subtract X25, X8, X9
	054 Add X31, X25, 0
	055 Move X0, X25
	056 Move W1, W31
	057 Move X2, X24
	058 Call 0x3EB2B10
	059 Move X0, X25
	060 Move W1, W31
	061 Move X2, X24
	062 Call 0x3EB2B10
	063 Move X8, [X27]
	064 Move X0, [X8]
	065 Move W9, [X0+309]
	066 Move TEMP, X9
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {73}
	070 Call 0x1C5D684
	071 Move X8, [X20+32]
	072 Move X8, [X8+192]
	073 Move X1, [X8+16]
	074 Subtract X8, X29, 12
	075 Subtract X4, X29, 40
	076 Move X2, X23
	077 Move X3, X25
	078 Move X5, X22
	079 Move [X29-12], W31
	080 Move [X29-40], X21
	081 Move [X29-32], X8
	082 Move [X29-24], X22
	083 Call 0x1C18728
	084 Move X8, [X20+32]
	085 Move X8, [X8+192]
	086 Move X8, [X8+24]
	087 Move W8, [X8+40]
	088 Move TEMP, X8
	089 And TEMP, TEMP, -2147483648
	090 Compare TEMP, -2147483648
	091 JumpIfEqual {93}
	092 Move X22, [X22]
	093 Move X8, [X19]
	094 Move [X29-40], X22
	095 Subtract X3, X29, 40
	096 Move X2, X19
	097 Move X1, [X8+512]
	098 Move X4, X22
	099 Move X0, [X1+8]
	100 Move X8, [X1+16]
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move X8, [X26+40]
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Add X31, X29, 0
	106 Move X20, [X31+80]
	107 Move X19, [X31+88]
	108 Move X22, [X31+64]
	109 Move X21, [X31+72]
	110 Move X24, [X31+48]
	111 Move X23, [X31+56]
	112 Move X26, [X31+32]
	113 Move X25, [X31+40]
	114 Move X27, [X31+16]
	115 Move X29, [X31+96]
	116 Move X30, [X31+104]
	117 Return 
	118 Call 0x3EB2B20

Method: System.Void Write(System.Int32* data, System.Int32 capacity)

Disassembly:
	0x02733380 CBNZ W8, 0x27333A4
	0x02733384 ADRP X0, 0x19E8000
	0x02733388 LDR X0, [X0 + 0x728]
	0x0273338C BL 0x1C16CF4
	0x02733390 ADRP X0, 0x19C1000
	0x02733394 LDR X0, [X0 + 0x7B8]
	0x02733398 BL 0x1C16CF4
	0x0273339C MOVZ W8, 0x1
	0x027333A0 STRB W8, [X22 + 0x829]
	0x027333A4 ADRP X22, 0x19C1000
	0x027333A8 LDR X22, [X22 + 0x7B8]
	0x027333AC LDR X0, [X22]
	0x027333B0 LDR W8, [X0 + 0xE0]
	0x027333B4 CBNZ W8, 0x27333C0
	0x027333B8 BL 0x1C16DFC
	0x027333BC LDR X0, [X22]
	0x027333C0 LDR X8, [X0 + 0xB8]
	0x027333C4 LDRB W8, [X8 + 0x10]
	0x027333C8 CBZ W8, 0x27333E8
	0x027333CC LDR X0, [X23]
	0x027333D0 LDR W8, [X0 + 0xE0]
	0x027333D4 CBNZ W8, 0x27333DC
	0x027333D8 BL 0x1C16DFC
	0x027333DC MOV X0, X19
	0x027333E0 MOV X1, X31
	0x027333E4 BL 0x33EE8F8
	0x027333E8 CBZ X21, 0x273340C
	0x027333EC LDR X8, [X20 + 0x20]
	0x027333F0 MOV X0, X21
	0x027333F4 LDR X8, [X8 + 0xC0]
	0x027333F8 LDR X1, [X8 + 0x88]
	0x027333FC BL 0x269F34C
	0x02733400 MOV X1, X0
	0x02733404 CBNZ X19, 0x2733414
	0x02733408 B 0x2733448
	0x0273340C MOV X1, X31
	0x02733410 CBZ X19, 0x2733448
	0x02733414 LDR X8, [X20 + 0x20]
	0x02733418 MOV X0, X19
	0x0273341C LDP X20, X19, [X31 + 0x30]
	0x02733420 LDP X22, X21, [X31 + 0x20]
	0x02733424 LDR X8, [X8 + 0xC0]
	0x02733428 LDP X24, X23, [X31 + 0x10]
	0x0273342C LDR X2, [X8 + 0x90]
	0x02733430 LDR X30, [X31], #0x40
	0x02733434 B 0x269F268
	0x02733438 CBZ X19, 0x2733448
	0x0273343C LDR X1, [X8 + 0x90]
	0x02733440 MOV X0, X19
	0x02733444 B 0x27331FC
	0x02733448 BL 0x1C16F20
	0x0273344C STP X30, X21, [X31 - 0x20]!
	0x02733450 STP X20, X19, [X31 + 0x10]
	0x02733454 MOV X19, X0
	0x02733458 CBZ X1, 0x2733494
	0x0273345C MOV X20, X1
	0x02733460 MOV X0, X1
	0x02733464 MOV X1, X31
	0x02733468 MOV X21, X2
	0x0273346C BL 0x33ED11C
	0x02733470 TBZ X0, 0x0, 0x27334BC
	0x02733474 LDR X8, [X21 + 0x20]
	0x02733478 MOV X0, X19
	0x0273347C MOV X1, X20
	0x02733480 MOV W2, W31
	0x02733484 LDR X8, [X8 + 0xC0]
	0x02733488 LDR X3, [X8 + 0x30]
	0x0273348C BL 0x27330FC
	0x02733490 B 0x27334A8
	0x02733494 CBZ X19, 0x27334D4
	0x02733498 MOV X0, X19
	0x0273349C MOV X1, X31
	0x027334A0 MOV X2, X31
	0x027334A4 BL 0x33EE464
	0x027334A8 MOVZ W8, 0x2
	0x027334AC STRB W8, [X19 + 0x58]
	0x027334B0 LDP X20, X19, [X31 + 0x10]
	0x027334B4 LDP X30, X21, [X31], #0x20
	0x027334B8 RET
	0x027334BC MOV X0, X20
	0x027334C0 MOV X1, X19
	0x027334C4 LDP X20, X19, [X31 + 0x10]
	0x027334C8 MOV X2, X31
	0x027334CC LDP X30, X21, [X31], #0x20
	0x027334D0 B 0x33F47D4
	0x027334D4 BL 0x1C16F20
	0x027334D8 MOVZ W0, 0x1
	0x027334DC RET
	0x027334E0 STP X30, X23, [X31 - 0x30]!
	0x027334E4 STP X22, X21, [X31 + 0x10]
	0x027334E8 STP X20, X19, [X31 + 0x20]
	0x027334EC ADRP X23, 0x1CA7000
	0x027334F0 LDRB W8, [X23 + 0x68D]
	0x027334F4 MOV X21, X3

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Add X29, X31, 0
	012 Subtract X31, X31, 48
	013 NotImplemented "Instruction MRS not yet implemented."
	014 Move X8, [X26+40]
	015 Move X21, X3
	016 Move X19, X1
	017 Move X24, X0
	018 Move [X29-8], X8
	019 Move X8, [X3+32]
	020 Move X9, [X8+192]
	021 Move X8, [X9]
	022 Move W10, [X8+309]
	023 Move W25, [X8+252]
	024 Move TEMP, X10
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, X8
	029 Call 0x1C5D684
	030 Move X9, [X21+32]
	031 Move W8, [X0+252]
	032 Move X9, [X9+192]
	033 Move W8, W25
	034 Add W8, W8, 16
	035 Add X8, X8, 15
	036 Add X10, X31, 0
	037 And X8, X8, 0x1FFFFFFFF
	038 Subtract X20, X10, X8
	039 Add X31, X20, 0
	040 Move X8, [X9+24]
	041 Add X9, X31, 0
	042 Move W8, [X8+252]
	043 Add X8, X8, 15
	044 And X8, X8, 0x1FFFFFFFF
	045 Subtract X22, X9, X8
	046 Add X31, X22, 0
	047 Add X9, X25, 15
	048 Add X8, X31, 0
	049 And X9, X9, 0x1FFFFFFFF
	050 Subtract X23, X8, X9
	051 Add X31, X23, 0
	052 Move X0, X23
	053 Move W1, W31
	054 Move X2, X25
	055 Call 0x3EB2B10
	056 Move X0, X23
	057 Move W1, W31
	058 Move X2, X25
	059 Call 0x3EB2B10
	060 Move X8, [X24]
	061 Move [X29-40], X22
	062 Subtract X3, X29, 40
	063 Move X2, X24
	064 Move X1, [X8+496]
	065 Move X4, X22
	066 Move X0, [X1+8]
	067 Move X8, [X1+16]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X8, [X21+32]
	070 Move X8, [X8+192]
	071 Move X0, [X8]
	072 Move W9, [X0+309]
	073 Move TEMP, X9
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {80}
	077 Call 0x1C5D684
	078 Move X8, [X21+32]
	079 Move X8, [X8+192]
	080 Move X9, [X8+24]
	081 Move X1, [X8+56]
	082 Move W9, [X9+40]
	083 Move TEMP, X9
	084 And TEMP, TEMP, -2147483648
	085 Compare TEMP, -2147483648
	086 JumpIfEqual {88}
	087 Move X22, [X22]
	088 Subtract X8, X29, 12
	089 Subtract X4, X29, 40
	090 Move X2, X20
	091 Move X3, X23
	092 Move X5, X22
	093 Move [X29-12], W31
	094 Move [X29-40], X19
	095 Move [X29-32], X8
	096 Move [X29-24], X22
	097 Call 0x1C18728
	098 Move X8, [X26+40]
	099 NotImplemented "Instruction LDUR not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Add X31, X29, 0
	102 Move X20, [X31+64]
	103 Move X19, [X31+72]
	104 Move X22, [X31+48]
	105 Move X21, [X31+56]
	106 Move X24, [X31+32]
	107 Move X23, [X31+40]
	108 Move X26, [X31+16]
	109 Move X25, [X31+24]
	110 Move X29, [X31+80]
	111 Move X30, [X31+88]
	112 Return 
	113 Call 0x3EB2B20

Method: System.Void Init(System.Int32 capacity)

Disassembly:
	0x027334F8 MOV W22, W2

ISIL:
	001 Return 

Method: System.Void .ctor()

Disassembly:
	0x027334FC MOV X19, X1
	0x02733500 MOV X20, X0

ISIL:
	001 Move X1, X31
	002 Call UnitySurrogateBase..ctor, X0
	003 Return 

