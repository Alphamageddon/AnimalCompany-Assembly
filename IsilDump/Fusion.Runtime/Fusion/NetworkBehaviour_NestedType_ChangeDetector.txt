Type: Fusion.NetworkBehaviour/ChangeDetector

Method: System.Boolean HasChangeCallbacks(System.Type type)

Disassembly:
	0x01E74DA4 LDR W9, [X8 + 0xE0]
	0x01E74DA8 CBNZ W9, 0x1E74DB4
	0x01E74DAC MOV X0, X8
	0x01E74DB0 BL 0x1C16DFC
	0x01E74DB4 ADRP X8, 0x2289000
	0x01E74DB8 LDR X8, [X8 + 0x598]
	0x01E74DBC MOV X0, X19
	0x01E74DC0 MOV X1, X20
	0x01E74DC4 LDR X2, [X8]
	0x01E74DC8 BL 0x2229CD0
	0x01E74DCC LDR X0, [X31]
	0x01E74DD0 LDP X20, X19, [X31 + 0x20]
	0x01E74DD4 LDP X30, X21, [X31 + 0x10]
	0x01E74DD8 ADD X31, X31, 0x30
	0x01E74DDC RET
	0x01E74DE0 BL 0x1C16F20
	0x01E74DE4 STP X30, X21, [X31 - 0x20]!
	0x01E74DE8 STP X20, X19, [X31 + 0x10]
	0x01E74DEC ADRP X20, 0x2565000
	0x01E74DF0 ADRP X21, 0x2282000
	0x01E74DF4 LDRB W8, [X20 + 0x17D]
	0x01E74DF8 LDR X21, [X21 + 0x398]
	0x01E74DFC MOV X19, X0
	0x01E74E00 TBNZ X8, 0x0, 0x1E74E18
	0x01E74E04 ADRP X0, 0x2282000
	0x01E74E08 LDR X0, [X0 + 0x398]
	0x01E74E0C BL 0x1C16CF4
	0x01E74E10 MOVZ W8, 0x1
	0x01E74E14 STRB W8, [X20 + 0x17D]
	0x01E74E18 LDR X0, [X21]
	0x01E74E1C LDR W8, [X0 + 0xE0]
	0x01E74E20 CBNZ W8, 0x1E74E28
	0x01E74E24 BL 0x1C16DFC
	0x01E74E28 LDR W8, [X19]
	0x01E74E2C CBZ W8, 0x1E74E40
	0x01E74E30 LDR W8, [X19 + 0x4]
	0x01E74E34 ORN W8, W31, W8, 0x0
	0x01E74E38 UBFM W0, W8, 0x1F, 0x1F
	0x01E74E3C B 0x1E74E44
	0x01E74E40 MOV W0, W31
	0x01E74E44 LDP X20, X19, [X31 + 0x10]
	0x01E74E48 LDP X30, X21, [X31], #0x20
	0x01E74E4C RET
	0x01E74E50 STP X30, X21, [X31 - 0x20]!
	0x01E74E54 STP X20, X19, [X31 + 0x10]
	0x01E74E58 CBZ X0, 0x1E74EE4
	0x01E74E5C ADRP X21, 0x2564000
	0x01E74E60 LDRB W8, [X21 + 0xA22]
	0x01E74E64 LDR X20, [X0 + 0x38]
	0x01E74E68 MOV X19, X0
	0x01E74E6C CBNZ W8, 0x1E74E84
	0x01E74E70 ADRP X0, 0x227F000
	0x01E74E74 LDR X0, [X0 + 0x598]
	0x01E74E78 BL 0x1C16CF4
	0x01E74E7C MOVZ W8, 0x1
	0x01E74E80 STRB W8, [X21 + 0xA22]
	0x01E74E84 ADRP X8, 0x227F000
	0x01E74E88 LDR X8, [X8 + 0x598]
	0x01E74E8C LDR X0, [X8]
	0x01E74E90 LDR W8, [X0 + 0xE0]
	0x01E74E94 CBNZ W8, 0x1E74E9C
	0x01E74E98 BL 0x1C16DFC
	0x01E74E9C MOV X0, X20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2566000
	007 Move X20, 0x228A000
	008 Move W8, [X21+358]
	009 Move X20, [X20+1216]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x228A000
	016 Move X0, [X0+1216]
	017 Call 0x1C17CF4
	018 Move X0, 0x228A000
	019 Move X0, [X0+1224]
	020 Call 0x1C17CF4
	021 Move X0, 0x228A000
	022 Move X0, [X0+1232]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+358], W8
	026 Move X0, [X20]
	027 Move [X31+12], W31
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X20]
	033 Move X8, [X0+184]
	034 Move X0, [X8]
	035 Compare X0, 0
	036 JumpIfEqual {78}
	037 Move X8, 0x228A000
	038 Move X8, [X8+1224]
	039 Move X1, X19
	040 Move X2, [X8]
	041 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {53}
	046 Move X0, [X20]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X19
	052 Call ChangeDetector.GetPropertyMappping, X0
	053 Move X0, [X20]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {59}
	057 Call 0x1C17DFC
	058 Move X0, [X20]
	059 Move X8, [X0+184]
	060 Move X0, [X8+8]
	061 Compare X0, 0
	062 JumpIfEqual {78}
	063 Move X8, 0x228A000
	064 Move X8, [X8+1232]
	065 Add X2, X31, 12
	066 Move X1, X19
	067 Move X3, [X8]
	068 Call Dictionary`2<Object, Boolean>.TryGetValue, X0, X1, X2
	069 Move W8, [X31+12]
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X30, [X31+16]
	073 Move X21, [X31+24]
	074 And W8, W0, W8
	075 And W0, W8, 1
	076 Add X31, X31, 48
	077 Return X0
	078 Call 0x1C17F20

Method: Fusion.NetworkBehaviour/ChangeDetector/OnChangedPrevCallbackWrapper GetWrapperPrev(System.Reflection.MethodInfo methodInfo)

Disassembly:
	0x022B874C B.LT 0x22B879C
	0x022B8750 SXTW X25, W25
	0x022B8754 MOV W26, W24
	0x022B8758 MOV X24, X20
	0x022B875C LDRSW X27, [X21]
	0x022B8760 CBZ X20, 0x22B877C
	0x022B8764 LDR X8, [X19 + 0x38]
	0x022B8768 MOV X0, X24
	0x022B876C MOV X1, X31
	0x022B8770 LDR X2, [X8 + 0x18]
	0x022B8774 BL 0x337C8BC
	0x022B8778 TBZ X0, 0x1F, 0x22B8788
	0x022B877C MUL X8, X27, X25
	0x022B8780 LDR V0, [X22, X8, LSL]
	0x022B8784 STR D0, [X23]
	0x022B8788 ADD X23, X23, 0x8
	0x022B878C ADD X24, X24, 0x8
	0x022B8790 SUBS X26, X26, 0x1
	0x022B8794 ADD X21, X21, 0x4
	0x022B8798 B.NE 0x22B875C
	0x022B879C LDP X20, X19, [X31 + 0x40]
	0x022B87A0 LDP X22, X21, [X31 + 0x30]
	0x022B87A4 LDP X24, X23, [X31 + 0x20]
	0x022B87A8 LDP X26, X25, [X31 + 0x10]
	0x022B87AC LDP X30, X27, [X31], #0x50
	0x022B87B0 RET
	0x022B87B4 STP X30, X27, [X31 - 0x50]!
	0x022B87B8 STP X26, X25, [X31 + 0x10]
	0x022B87BC STP X24, X23, [X31 + 0x20]
	0x022B87C0 STP X22, X21, [X31 + 0x30]
	0x022B87C4 STP X20, X19, [X31 + 0x40]
	0x022B87C8 LDR X8, [X6 + 0x38]
	0x022B87CC MOV X19, X6
	0x022B87D0 MOV X20, X5
	0x022B87D4 MOV W24, W4
	0x022B87D8 MOV W25, W3
	0x022B87DC MOV X21, X2
	0x022B87E0 MOV X22, X1
	0x022B87E4 MOV X23, X0
	0x022B87E8 CBNZ X8, 0x22B87F4
	0x022B87EC MOV X0, X19
	0x022B87F0 BL 0x1C5C6E0
	0x022B87F4 CMP W24, 0x1
	0x022B87F8 B.LT 0x22B8848
	0x022B87FC SXTW X25, W25
	0x022B8800 MOV W26, W24
	0x022B8804 MOV X24, X20
	0x022B8808 LDR X27, [X21]
	0x022B880C CBZ X20, 0x22B8828
	0x022B8810 LDR X8, [X19 + 0x38]
	0x022B8814 MOV X0, X24
	0x022B8818 MOV X1, X31
	0x022B881C LDR X2, [X8 + 0x18]
	0x022B8820 BL 0x337C8BC
	0x022B8824 TBZ X0, 0x1F, 0x22B8834
	0x022B8828 MUL X8, X27, X25
	0x022B882C LDR V0, [X22, X8, LSL]
	0x022B8830 STR D0, [X23]
	0x022B8834 ADD X21, X21, 0x8
	0x022B8838 ADD X23, X23, 0x8
	0x022B883C SUBS X26, X26, 0x1
	0x022B8840 ADD X24, X24, 0x8
	0x022B8844 B.NE 0x22B8808
	0x022B8848 LDP X20, X19, [X31 + 0x40]
	0x022B884C LDP X22, X21, [X31 + 0x30]
	0x022B8850 LDP X24, X23, [X31 + 0x20]
	0x022B8854 LDP X26, X25, [X31 + 0x10]
	0x022B8858 LDP X30, X27, [X31], #0x50
	0x022B885C RET
	0x022B8860 STP X30, X27, [X31 - 0x50]!
	0x022B8864 STP X26, X25, [X31 + 0x10]
	0x022B8868 STP X24, X23, [X31 + 0x20]
	0x022B886C STP X22, X21, [X31 + 0x30]
	0x022B8870 STP X20, X19, [X31 + 0x40]
	0x022B8874 LDR X8, [X6 + 0x38]
	0x022B8878 MOV X19, X6
	0x022B887C MOV X20, X5
	0x022B8880 MOV W24, W4
	0x022B8884 MOV W25, W3
	0x022B8888 MOV X21, X2
	0x022B888C MOV X22, X1
	0x022B8890 MOV X23, X0
	0x022B8894 CBNZ X8, 0x22B88A0
	0x022B8898 MOV X0, X19
	0x022B889C BL 0x1C5C6E0
	0x022B88A0 CMP W24, 0x1
	0x022B88A4 B.LT 0x22B88F4
	0x022B88A8 SXTW X25, W25
	0x022B88AC MOV W26, W24
	0x022B88B0 MOV X24, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X1+56]
	007 Move X19, X1
	008 Move X21, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {23}
	011 Move X0, 0x1E46000
	012 Move X0, [X0+1536]
	013 Call 0x1C17CF4
	014 Move X0, 0x1E3C000
	015 Move X0, [X0+1728]
	016 Call 0x1C17CF4
	017 Move X8, [X19+56]
	018 Compare X8, 0
	019 JumpIfNotEqual {23}
	020 Move X0, X19
	021 Call 0x1C5D6E0
	022 Move X8, [X19+56]
	023 Move X0, [X8]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Call 0x1C17F10
	031 Move X8, [X19+56]
	032 Move X20, X0
	033 Move X1, [X8+8]
	034 Call 0x2382AD4, X0
	035 Move X8, 0x1E3C000
	036 Move X8, [X8+1728]
	037 Move X0, [X8]
	038 Move X8, [X19+56]
	039 Move W9, [X0+224]
	040 Move X22, [X8+16]
	041 Compare W9, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X22
	045 Move X1, X31
	046 Call Type.GetTypeFromHandle, X0
	047 Move X1, X31
	048 Move X2, X21
	049 Move X3, X31
	050 Call Delegate.CreateDelegate, X0, X1, X2
	051 Compare X20, 0
	052 JumpIfEqual {110}
	053 Move X8, [X19+56]
	054 Move X21, X0
	055 Move X22, [X8+24]
	056 Move W8, [X22+309]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {64}
	061 Move X0, X22
	062 Call 0x1C5D684
	063 Move X22, X0
	064 Compare X21, 0
	065 JumpIfEqual {71}
	066 Move X0, X21
	067 Move X1, X22
	068 Call 0x1C17E00
	069 Compare X0, 0
	070 JumpIfNotEqual {72}
	071 Move X0, X31
	072 Move [X20+16], X0
	073 Move X8, [X19+56]
	074 Move X22, [X8+24]
	075 Move W8, [X22+309]
	076 Move TEMP, X8
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {83}
	080 Move X0, X22
	081 Call 0x1C5D684
	082 Move X22, X0
	083 Compare X21, 0
	084 JumpIfEqual {90}
	085 Move X0, X21
	086 Move X1, X22
	087 Call 0x1C17E00
	088 Compare X0, 0
	089 JumpIfEqual {107}
	090 Move X8, 0x1E46000
	091 Move X8, [X8+1536]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X8, [X19+56]
	095 Move X1, X20
	096 Move X3, X31
	097 Move X19, X0
	098 Move X2, [X8+32]
	099 Call OnChangedPrevCallbackWrapper..ctor, X0, X1, X2
	100 Move X0, X19
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 Move X30, [X31+48]
	106 Return X0
	107 Move X0, X21
	108 Move X1, X22
	109 Call 0x1C181E0
	110 Call 0x1C17F20

Method: Fusion.NetworkBehaviour/ChangeDetector/OnChangedCallbackWrapper GetWrapper(System.Reflection.MethodInfo methodInfo)

Disassembly:
	0x022B85E4 ADRP X0, 0x1E63000
	0x022B85E8 LDR X0, [X0 + 0x6E8]
	0x022B85EC BL 0x1C16CF4
	0x022B85F0 LDR X8, [X20 + 0x38]
	0x022B85F4 CBNZ X8, 0x22B8600
	0x022B85F8 MOV X0, X20
	0x022B85FC BL 0x1C5C6E0
	0x022B8600 ADRP X8, 0x1E63000
	0x022B8604 LDR X8, [X8 + 0x6E8]
	0x022B8608 LDR X0, [X8]
	0x022B860C LDR W8, [X0 + 0xE0]
	0x022B8610 CBNZ W8, 0x22B8618
	0x022B8614 BL 0x1C16DFC
	0x022B8618 LDR X8, [X20 + 0x38]
	0x022B861C LDR X0, [X8]
	0x022B8620 BL 0x229F9F4
	0x022B8624 STR X0, [X19 + 0x10]
	0x022B8628 LDP X20, X19, [X31 + 0x10]
	0x022B862C LDR X30, [X31], #0x20
	0x022B8630 RET
	0x022B8634 STR X30, [X31 - 0x20]!
	0x022B8638 STP X20, X19, [X31 + 0x10]
	0x022B863C LDR X8, [X1 + 0x38]
	0x022B8640 MOV X20, X1
	0x022B8644 MOV X19, X0
	0x022B8648 CBNZ X8, 0x22B8668
	0x022B864C ADRP X0, 0x1E63000
	0x022B8650 LDR X0, [X0 + 0x6E8]
	0x022B8654 BL 0x1C16CF4
	0x022B8658 LDR X8, [X20 + 0x38]
	0x022B865C CBNZ X8, 0x22B8668
	0x022B8660 MOV X0, X20
	0x022B8664 BL 0x1C5C6E0
	0x022B8668 ADRP X8, 0x1E63000
	0x022B866C LDR X8, [X8 + 0x6E8]
	0x022B8670 LDR X0, [X8]
	0x022B8674 LDR W8, [X0 + 0xE0]
	0x022B8678 CBNZ W8, 0x22B8680
	0x022B867C BL 0x1C16DFC
	0x022B8680 LDR X8, [X20 + 0x38]
	0x022B8684 LDR X0, [X8]
	0x022B8688 BL 0x229FB18
	0x022B868C STR X0, [X19 + 0x10]
	0x022B8690 LDP X20, X19, [X31 + 0x10]
	0x022B8694 LDR X30, [X31], #0x20
	0x022B8698 RET
	0x022B869C STR X30, [X31 - 0x20]!
	0x022B86A0 STP X20, X19, [X31 + 0x10]
	0x022B86A4 LDR X8, [X1 + 0x38]
	0x022B86A8 MOV X20, X1
	0x022B86AC MOV X19, X0
	0x022B86B0 CBNZ X8, 0x22B86D0
	0x022B86B4 ADRP X0, 0x1E63000
	0x022B86B8 LDR X0, [X0 + 0x6E8]
	0x022B86BC BL 0x1C16CF4
	0x022B86C0 LDR X8, [X20 + 0x38]
	0x022B86C4 CBNZ X8, 0x22B86D0
	0x022B86C8 MOV X0, X20
	0x022B86CC BL 0x1C5C6E0
	0x022B86D0 ADRP X8, 0x1E63000
	0x022B86D4 LDR X8, [X8 + 0x6E8]
	0x022B86D8 LDR X0, [X8]
	0x022B86DC LDR W8, [X0 + 0xE0]
	0x022B86E0 CBNZ W8, 0x22B86E8
	0x022B86E4 BL 0x1C16DFC
	0x022B86E8 LDR X8, [X20 + 0x38]
	0x022B86EC LDR X0, [X8]
	0x022B86F0 LDR X8, [X0]
	0x022B86F4 BLR X8
	0x022B86F8 STR X0, [X19 + 0x10]
	0x022B86FC LDP X20, X19, [X31 + 0x10]
	0x022B8700 LDR X30, [X31], #0x20
	0x022B8704 RET
	0x022B8708 STP X30, X27, [X31 - 0x50]!
	0x022B870C STP X26, X25, [X31 + 0x10]
	0x022B8710 STP X24, X23, [X31 + 0x20]
	0x022B8714 STP X22, X21, [X31 + 0x30]
	0x022B8718 STP X20, X19, [X31 + 0x40]
	0x022B871C LDR X8, [X6 + 0x38]
	0x022B8720 MOV X19, X6
	0x022B8724 MOV X20, X5
	0x022B8728 MOV W24, W4
	0x022B872C MOV W25, W3
	0x022B8730 MOV X21, X2
	0x022B8734 MOV X22, X1
	0x022B8738 MOV X23, X0
	0x022B873C CBNZ X8, 0x22B8748
	0x022B8740 MOV X0, X19
	0x022B8744 BL 0x1C5C6E0
	0x022B8748 CMP W24, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X1+56]
	007 Move X19, X1
	008 Move X21, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {23}
	011 Move X0, 0x1E46000
	012 Move X0, [X0+1528]
	013 Call 0x1C17CF4
	014 Move X0, 0x1E3C000
	015 Move X0, [X0+1728]
	016 Call 0x1C17CF4
	017 Move X8, [X19+56]
	018 Compare X8, 0
	019 JumpIfNotEqual {23}
	020 Move X0, X19
	021 Call 0x1C5D6E0
	022 Move X8, [X19+56]
	023 Move X0, [X8]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Call 0x1C17F10
	031 Move X8, [X19+56]
	032 Move X20, X0
	033 Move X1, [X8+8]
	034 Call 0x2373274, X0
	035 Move X8, 0x1E3C000
	036 Move X8, [X8+1728]
	037 Move X0, [X8]
	038 Move X8, [X19+56]
	039 Move W9, [X0+224]
	040 Move X22, [X8+16]
	041 Compare W9, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X22
	045 Move X1, X31
	046 Call Type.GetTypeFromHandle, X0
	047 Move X1, X31
	048 Move X2, X21
	049 Move X3, X31
	050 Call Delegate.CreateDelegate, X0, X1, X2
	051 Compare X20, 0
	052 JumpIfEqual {110}
	053 Move X8, [X19+56]
	054 Move X21, X0
	055 Move X22, [X8+24]
	056 Move W8, [X22+309]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {64}
	061 Move X0, X22
	062 Call 0x1C5D684
	063 Move X22, X0
	064 Compare X21, 0
	065 JumpIfEqual {71}
	066 Move X0, X21
	067 Move X1, X22
	068 Call 0x1C17E00
	069 Compare X0, 0
	070 JumpIfNotEqual {72}
	071 Move X0, X31
	072 Move [X20+16], X0
	073 Move X8, [X19+56]
	074 Move X22, [X8+24]
	075 Move W8, [X22+309]
	076 Move TEMP, X8
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {83}
	080 Move X0, X22
	081 Call 0x1C5D684
	082 Move X22, X0
	083 Compare X21, 0
	084 JumpIfEqual {90}
	085 Move X0, X21
	086 Move X1, X22
	087 Call 0x1C17E00
	088 Compare X0, 0
	089 JumpIfEqual {107}
	090 Move X8, 0x1E46000
	091 Move X8, [X8+1528]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X8, [X19+56]
	095 Move X1, X20
	096 Move X3, X31
	097 Move X19, X0
	098 Move X2, [X8+32]
	099 Call OnChangedCallbackWrapper..ctor, X0, X1, X2
	100 Move X0, X19
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 Move X30, [X31+48]
	106 Return X0
	107 Move X0, X21
	108 Move X1, X22
	109 Call 0x1C181E0
	110 Call 0x1C17F20

Method: Fusion.NetworkBehaviour/ChangeDetector/PropertyData[] GetPropertyMappping(System.Type type)

Disassembly:
	0x01E75F2C ADD X8, X8, 0xE40
	0x01E75F30 B 0x1E75F3C
	0x01E75F34 ADRP X8, 0xFFFFFFFFFFB1D000
	0x01E75F38 ADD X8, X8, 0xD90
	0x01E75F3C STR X8, [X19 + 0x18]
	0x01E75F40 ADRP X8, 0xFFFFFFFFFFB1D000
	0x01E75F44 ADD X8, X8, 0xD18
	0x01E75F48 STR X8, [X19 + 0x38]
	0x01E75F4C LDP X20, X19, [X31 + 0x20]
	0x01E75F50 LDP X22, X21, [X31 + 0x10]
	0x01E75F54 LDR X30, [X31], #0x30
	0x01E75F58 RET
	0x01E75F5C ADRP X1, 0xFFFFFFFFFECA6000
	0x01E75F60 ADD X1, X1, 0xEE3
	0x01E75F64 MOV X0, X31
	0x01E75F68 BL 0x1C16F3C
	0x01E75F6C MOV X1, X31
	0x01E75F70 BL 0x1C16DEC
	0x01E75F74 LDR X8, [X0 + 0x40]
	0x01E75F78 LDR X3, [X0 + 0x18]
	0x01E75F7C LDR X2, [X0 + 0x28]
	0x01E75F80 MOV X0, X8
	0x01E75F84 BR X3
	0x01E75F88 SUB X31, X31, 0x20
	0x01E75F8C STP X31, X30, [X31 + 0x8]
	0x01E75F90 STR X1, [X31]
	0x01E75F94 ADD X1, X31, 0x0
	0x01E75F98 BL 0x1C16CB0
	0x01E75F9C LDR X30, [X31 + 0x10]
	0x01E75FA0 ADD X31, X31, 0x20
	0x01E75FA4 RET
	0x01E75FA8 MOV X0, X1
	0x01E75FAC MOV X1, X31
	0x01E75FB0 B 0x1C16CB4
	0x01E75FB4 LDR W8, [X0 + 0x8]
	0x01E75FB8 LDR X0, [X0]
	0x01E75FBC ORR X1, X8, 0x0
	0x01E75FC0 RET
	0x01E75FC4 MOVN W8, 0x0
	0x01E75FC8 STR X1, [X0]
	0x01E75FCC STP W2, W8, [X0 + 0x8]
	0x01E75FD0 RET
	0x01E75FD4 STP X30, X21, [X31 - 0x20]!
	0x01E75FD8 STP X20, X19, [X31 + 0x10]
	0x01E75FDC ADRP X21, 0x2564000
	0x01E75FE0 LDRB W8, [X21 + 0x16C]
	0x01E75FE4 MOV X19, X1
	0x01E75FE8 MOV X20, X0
	0x01E75FEC TBNZ X8, 0x0, 0x1E76004
	0x01E75FF0 ADRP X0, 0x2288000
	0x01E75FF4 LDR X0, [X0 + 0x638]
	0x01E75FF8 BL 0x1C16CF4
	0x01E75FFC MOVZ W8, 0x1
	0x01E76000 STRB W8, [X21 + 0x16C]
	0x01E76004 LDR W8, [X20 + 0x8]
	0x01E76008 CMP W8, 0x1
	0x01E7600C B.LT 0x1E76038
	0x01E76010 ADRP X8, 0x2287000
	0x01E76014 LDR X8, [X8 + 0x638]
	0x01E76018 LDR X0, [X20]
	0x01E7601C MOV X1, X19
	0x01E76020 MOV W2, W31
	0x01E76024 LDR X3, [X8]
	0x01E76028 BL 0x22E7754
	0x01E7602C ORN W8, W31, W0, 0x0
	0x01E76030 UBFM W0, W8, 0x1F, 0x1F
	0x01E76034 B 0x1E7603C
	0x01E76038 MOV W0, W31
	0x01E7603C LDP X20, X19, [X31 + 0x10]
	0x01E76040 LDP X30, X21, [X31], #0x20
	0x01E76044 RET
	0x01E76048 STR X30, [X31 - 0x10]!
	0x01E7604C LDR X8, [X0]
	0x01E76050 CBZ X8, 0x1E76074
	0x01E76054 LDRSW X9, [X0 + 0xC]
	0x01E76058 LDR W10, [X8 + 0x18]
	0x01E7605C CMP W9, W10
	0x01E76060 B.CS 0x1E76078
	0x01E76064 ADD X8, X8, X9, 0x3, LSL
	0x01E76068 LDR X0, [X8 + 0x20]
	0x01E7606C LDR X30, [X31], #0x10
	0x01E76070 RET
	0x01E76074 BL 0x1C16F20
	0x01E76078 BL 0x1C16F28
	0x01E7607C MOVN W8, 0x0
	0x01E76080 STR W8, [X0 + 0xC]
	0x01E76084 RET
	0x01E76088 LDP W9, W8, [X0 + 0x8]
	0x01E7608C ADD W10, W8, 0x1
	0x01E76090 CMP W10, W9
	0x01E76094 CSET W8, LT
	0x01E76098 STR W10, [X0 + 0xC]
	0x01E7609C MOV W0, W8
	0x01E760A0 RET
	0x01E760A4 LDR W0, [X0 + 0xC]
	0x01E760A8 RET
	0x01E760AC LDR W0, [X0 + 0x8]
	0x01E760B0 RET
	0x01E760B4 LDR X8, [X0]
	0x01E760B8 LDR W0, [X8, W1, SXTW]
	0x01E760BC RET
	0x01E760C0 LDR X8, [X0]
	0x01E760C4 LDRSW X9, [X1]
	0x01E760C8 LDR V0, [X8, X9, LSL #2]
	0x01E760CC RET
	0x01E760D0 LDR X8, [X0]
	0x01E760D4 LDRSW X9, [X1]
	0x01E760D8 ADD X8, X8, X9, 0x2, LSL
	0x01E760DC LDP S0, S1, [X8]
	0x01E760E0 RET
	0x01E760E4 LDR X8, [X0]
	0x01E760E8 LDRSW X9, [X1]
	0x01E760EC ADD X8, X8, X9, 0x2, LSL
	0x01E760F0 LDP S0, S1, [X8]
	0x01E760F4 LDR V2, [X8 + 0x8]
	0x01E760F8 RET
	0x01E760FC LDR X8, [X0]
	0x01E76100 LDRSW X9, [X1]
	0x01E76104 ADD X8, X8, X9, 0x2, LSL
	0x01E76108 LDP S0, S1, [X8]
	0x01E7610C LDP S2, S3, [X8 + 0x8]
	0x01E76110 RET
	0x01E76114 LDR X8, [X0]
	0x01E76118 LDRSW X9, [X1]
	0x01E7611C ADD X8, X8, X9, 0x2, LSL
	0x01E76120 LDP S0, S1, [X8]
	0x01E76124 LDP S2, S3, [X8 + 0x8]
	0x01E76128 RET
	0x01E7612C CMP X0, 0x0
	0x01E76130 CSET W8, NE
	0x01E76134 CMP W1, 0x0
	0x01E76138 CSET W9, GT
	0x01E7613C AND W0, W8, W9, 0x0
	0x01E76140 RET
	0x01E76144 STP X30, X19, [X31 - 0x10]!
	0x01E76148 STR X1, [X0]
	0x01E7614C CBZ X1, 0x1E7617C
	0x01E76150 ADD X8, X0, 0x8
	0x01E76154 MOV X19, X0
	0x01E76158 ADD X3, X0, 0x28
	0x01E7615C ADD X2, X0, 0x18
	0x01E76160 MOV X0, X1
	0x01E76164 MOV X1, X8
	0x01E76168 BL 0x1E749E0
	0x01E7616C AND W8, W0, 0x1
	0x01E76170 STRB W8, [X19 + 0x2C]
	0x01E76174 LDP X30, X19, [X31], #0x10
	0x01E76178 RET
	0x01E7617C BL 0x1C16F20
	0x01E76180 SUB X31, X31, 0x50
	0x01E76184 STP X30, X21, [X31 + 0x30]
	0x01E76188 STP X20, X19, [X31 + 0x40]
	0x01E7618C ADRP X21, 0x2563000
	0x01E76190 LDRB W8, [X21 + 0x16D]
	0x01E76194 MOV X20, X1
	0x01E76198 MOV X19, X0
	0x01E7619C TBNZ X8, 0x0, 0x1E761B4
	0x01E761A0 ADRP X0, 0x2287000
	0x01E761A4 LDR X0, [X0 + 0x640]
	0x01E761A8 BL 0x1C16CF4
	0x01E761AC MOVZ W8, 0x1
	0x01E761B0 STRB W8, [X21 + 0x16D]
	0x01E761B4 LDR X0, [X19]
	0x01E761B8 CBZ X0, 0x1E76200
	0x01E761BC ADRP X8, 0x2287000
	0x01E761C0 LDR X8, [X8 + 0x640]
	0x01E761C4 MOV X1, X20
	0x01E761C8 LDR X2, [X8]
	0x01E761CC ADD X8, X31, 0x18
	0x01E761D0 BL 0x222660C
	0x01E761D4 LDUR V0, [X31 + 0x18]
	0x01E761D8 LDR X8, [X31 + 0x28]
	0x01E761DC ADD X1, X31, 0x0
	0x01E761E0 MOV X0, X19
	0x01E761E4 STR V0, [X31]
	0x01E761E8 STR X8, [X31 + 0x10]
	0x01E761EC BL 0x1E76204
	0x01E761F0 LDP X20, X19, [X31 + 0x40]
	0x01E761F4 LDP X30, X21, [X31 + 0x30]
	0x01E761F8 ADD X31, X31, 0x50
	0x01E761FC RET
	0x01E76200 BL 0x1C16F20
	0x01E76204 STP D9, D8, [X31 - 0x40]!
	0x01E76208 STR X30, [X31 + 0x10]
	0x01E7620C STP X22, X21, [X31 + 0x20]
	0x01E76210 STP X20, X19, [X31 + 0x30]
	0x01E76214 ADRP X22, 0x2563000
	0x01E76218 ADRP X21, 0x2287000
	0x01E7621C LDRB W8, [X22 + 0x16E]
	0x01E76220 LDR X21, [X21 + 0x648]
	0x01E76224 MOV X20, X1
	0x01E76228 MOV X19, X0
	0x01E7622C TBNZ X8, 0x0, 0x1E76244
	0x01E76230 ADRP X0, 0x2287000
	0x01E76234 LDR X0, [X0 + 0x648]
	0x01E76238 BL 0x1C16CF4
	0x01E7623C MOVZ W8, 0x1
	0x01E76240 STRB W8, [X22 + 0x16E]
	0x01E76244 LDP X1, X2, [X19 + 0x8]
	0x01E76248 LDP X3, X4, [X19 + 0x18]
	0x01E7624C LDR X5, [X21]
	0x01E76250 MOV X0, X20
	0x01E76254 BL 0x24E78D0
	0x01E76258 AND X21, X0, 0x0
	0x01E7625C UBFM X20, X0, 0x20, 0x3F
	0x01E76260 MOV X0, X21
	0x01E76264 MOV X1, X31
	0x01E76268 BL 0x1E85884
	0x01E7626C MOV X0, X20
	0x01E76270 MOV X1, X31
	0x01E76274 MOV V8.16B, V0.16B
	0x01E76278 BL 0x1E85884
	0x01E7627C MOV X0, X21
	0x01E76280 MOV X1, X31
	0x01E76284 MOV V9.16B, V0.16B
	0x01E76288 BL 0x1E85884
	0x01E7628C LDR V1, [X19 + 0x28]
	0x01E76290 LDP X20, X19, [X31 + 0x30]
	0x01E76294 LDP X22, X21, [X31 + 0x20]
	0x01E76298 LDR X30, [X31 + 0x10]
	0x01E7629C FSUB S0, S9, S0
	0x01E762A0 FMUL S0, S0, S1
	0x01E762A4 FADD S0, S8, S0
	0x01E762A8 LDP D9, D8, [X31], #0x40
	0x01E762AC RET
	0x01E762B0 SUB X31, X31, 0x50
	0x01E762B4 STP X30, X21, [X31 + 0x30]
	0x01E762B8 STP X20, X19, [X31 + 0x40]
	0x01E762BC ADRP X21, 0x2563000
	0x01E762C0 LDRB W8, [X21 + 0x16F]
	0x01E762C4 MOV X20, X1
	0x01E762C8 MOV X19, X0
	0x01E762CC TBNZ X8, 0x0, 0x1E762E4
	0x01E762D0 ADRP X0, 0x2287000
	0x01E762D4 LDR X0, [X0 + 0x650]
	0x01E762D8 BL 0x1C16CF4
	0x01E762DC MOVZ W8, 0x1
	0x01E762E0 STRB W8, [X21 + 0x16F]
	0x01E762E4 LDR X0, [X19]
	0x01E762E8 CBZ X0, 0x1E76330
	0x01E762EC ADRP X8, 0x2287000
	0x01E762F0 LDR X8, [X8 + 0x650]
	0x01E762F4 MOV X1, X20
	0x01E762F8 LDR X2, [X8]
	0x01E762FC ADD X8, X31, 0x18
	0x01E76300 BL 0x22268A0
	0x01E76304 LDUR V0, [X31 + 0x18]
	0x01E76308 LDR X8, [X31 + 0x28]
	0x01E7630C ADD X1, X31, 0x0
	0x01E76310 MOV X0, X19
	0x01E76314 STR V0, [X31]
	0x01E76318 STR X8, [X31 + 0x10]
	0x01E7631C BL 0x1E76334
	0x01E76320 LDP X20, X19, [X31 + 0x40]
	0x01E76324 LDP X30, X21, [X31 + 0x30]
	0x01E76328 ADD X31, X31, 0x50
	0x01E7632C RET
	0x01E76330 BL 0x1C16F20
	0x01E76334 STR X30, [X31 - 0x30]!
	0x01E76338 STP X22, X21, [X31 + 0x10]
	0x01E7633C STP X20, X19, [X31 + 0x20]
	0x01E76340 ADRP X22, 0x2563000
	0x01E76344 ADRP X21, 0x2287000
	0x01E76348 LDRB W8, [X22 + 0x170]
	0x01E7634C LDR X21, [X21 + 0x658]
	0x01E76350 MOV X20, X1
	0x01E76354 MOV X19, X0
	0x01E76358 TBNZ X8, 0x0, 0x1E76370
	0x01E7635C ADRP X0, 0x2287000
	0x01E76360 LDR X0, [X0 + 0x658]
	0x01E76364 BL 0x1C16CF4
	0x01E76368 MOVZ W8, 0x1
	0x01E7636C STRB W8, [X22 + 0x170]
	0x01E76370 LDP X1, X2, [X19 + 0x8]
	0x01E76374 LDP X3, X4, [X19 + 0x18]
	0x01E76378 LDR X5, [X21]
	0x01E7637C MOV X0, X20
	0x01E76380 BL 0x24E8598
	0x01E76384 LDR V2, [X19 + 0x28]
	0x01E76388 LDP X20, X19, [X31 + 0x20]
	0x01E7638C LDP X22, X21, [X31 + 0x10]
	0x01E76390 FSUB S1, S1, S0
	0x01E76394 FMUL S1, S2, S1
	0x01E76398 FADD S0, S0, S1
	0x01E7639C LDR X30, [X31], #0x30
	0x01E763A0 RET
	0x01E763A4 STR X30, [X31 - 0x30]!
	0x01E763A8 STP X22, X21, [X31 + 0x10]
	0x01E763AC STP X20, X19, [X31 + 0x20]
	0x01E763B0 ADRP X21, 0x2563000
	0x01E763B4 ADRP X22, 0x2287000
	0x01E763B8 LDRB W8, [X21 + 0x171]
	0x01E763BC LDR X22, [X22 + 0x660]
	0x01E763C0 MOV X19, X1
	0x01E763C4 MOV X20, X0
	0x01E763C8 TBNZ X8, 0x0, 0x1E763E0
	0x01E763CC ADRP X0, 0x2287000
	0x01E763D0 LDR X0, [X0 + 0x660]
	0x01E763D4 BL 0x1C16CF4
	0x01E763D8 MOVZ W8, 0x1
	0x01E763DC STRB W8, [X21 + 0x171]
	0x01E763E0 LDR X2, [X22]
	0x01E763E4 MOV X0, X20
	0x01E763E8 MOV X1, X19
	0x01E763EC LDP X20, X19, [X31 + 0x20]
	0x01E763F0 LDP X22, X21, [X31 + 0x10]
	0x01E763F4 LDR X30, [X31], #0x30
	0x01E763F8 B 0x2227A00
	0x01E763FC SUB X31, X31, 0x70
	0x01E76400 STR X30, [X31 + 0x40]
	0x01E76404 STP X22, X21, [X31 + 0x50]
	0x01E76408 STP X20, X19, [X31 + 0x60]
	0x01E7640C ADRP X22, 0x2563000
	0x01E76410 ADRP X21, 0x2287000
	0x01E76414 LDRB W8, [X22 + 0x172]
	0x01E76418 LDR X21, [X21 + 0x668]
	0x01E7641C MOV X20, X1
	0x01E76420 MOV X19, X0
	0x01E76424 TBNZ X8, 0x0, 0x1E7643C
	0x01E76428 ADRP X0, 0x2287000
	0x01E7642C LDR X0, [X0 + 0x668]
	0x01E76430 BL 0x1C16CF4
	0x01E76434 MOVZ W8, 0x1
	0x01E76438 STRB W8, [X22 + 0x172]
	0x01E7643C LDR X8, [X20 + 0x10]
	0x01E76440 LDR V0, [X20]
	0x01E76444 LDR X2, [X21]
	0x01E76448 ADD X1, X31, 0x20
	0x01E7644C MOV X0, X19
	0x01E76450 STR X8, [X31 + 0x10]
	0x01E76454 STR V0, [X31]
	0x01E76458 STR V0, [X31 + 0x2]
	0x01E7645C STR X8, [X31 + 0x30]
	0x01E76460 BL 0x22279A4
	0x01E76464 LDP X20, X19, [X31 + 0x60]
	0x01E76468 LDP X22, X21, [X31 + 0x50]
	0x01E7646C LDR X30, [X31 + 0x40]
	0x01E76470 ADD X31, X31, 0x70
	0x01E76474 RET
	0x01E76478 SUB X31, X31, 0x70
	0x01E7647C STR X30, [X31 + 0x40]
	0x01E76480 STP X22, X21, [X31 + 0x50]
	0x01E76484 STP X20, X19, [X31 + 0x60]
	0x01E76488 ADRP X22, 0x2563000
	0x01E7648C ADRP X21, 0x2287000
	0x01E76490 LDRB W8, [X22 + 0x173]
	0x01E76494 LDR X21, [X21 + 0x670]
	0x01E76498 MOV X20, X1
	0x01E7649C MOV X19, X0
	0x01E764A0 TBNZ X8, 0x0, 0x1E764B8
	0x01E764A4 ADRP X0, 0x2287000
	0x01E764A8 LDR X0, [X0 + 0x670]
	0x01E764AC BL 0x1C16CF4
	0x01E764B0 MOVZ W8, 0x1
	0x01E764B4 STRB W8, [X22 + 0x173]
	0x01E764B8 LDR X8, [X20 + 0x10]
	0x01E764BC LDR V0, [X20]
	0x01E764C0 LDR X2, [X21]
	0x01E764C4 ADD X1, X31, 0x20
	0x01E764C8 MOV X0, X19
	0x01E764CC STR X8, [X31 + 0x10]
	0x01E764D0 STR V0, [X31]
	0x01E764D4 STR V0, [X31 + 0x2]
	0x01E764D8 STR X8, [X31 + 0x30]
	0x01E764DC BL 0x22278C4
	0x01E764E0 LDP X20, X19, [X31 + 0x60]
	0x01E764E4 LDP X22, X21, [X31 + 0x50]
	0x01E764E8 LDR X30, [X31 + 0x40]
	0x01E764EC AND W0, W0, 0x1
	0x01E764F0 ADD X31, X31, 0x70
	0x01E764F4 RET
	0x01E764F8 STR X30, [X31 - 0x30]!
	0x01E764FC STP X22, X21, [X31 + 0x10]
	0x01E76500 STP X20, X19, [X31 + 0x20]
	0x01E76504 ADRP X21, 0x2563000
	0x01E76508 ADRP X22, 0x2287000
	0x01E7650C LDRB W8, [X21 + 0x174]
	0x01E76510 LDR X22, [X22 + 0x678]
	0x01E76514 MOV X19, X1
	0x01E76518 MOV X20, X0
	0x01E7651C TBNZ X8, 0x0, 0x1E76534
	0x01E76520 ADRP X0, 0x2287000
	0x01E76524 LDR X0, [X0 + 0x678]
	0x01E76528 BL 0x1C16CF4
	0x01E7652C MOVZ W8, 0x1
	0x01E76530 STRB W8, [X21 + 0x174]
	0x01E76534 LDR X2, [X22]
	0x01E76538 MOV X0, X20
	0x01E7653C MOV X1, X19
	0x01E76540 LDP X20, X19, [X31 + 0x20]
	0x01E76544 LDP X22, X21, [X31 + 0x10]
	0x01E76548 LDR X30, [X31], #0x30
	0x01E7654C B 0x2227924
	0x01E76550 SUB X31, X31, 0x50
	0x01E76554 STP X30, X21, [X31 + 0x30]
	0x01E76558 STP X20, X19, [X31 + 0x40]
	0x01E7655C ADRP X21, 0x2563000
	0x01E76560 LDRB W8, [X21 + 0x175]
	0x01E76564 MOV X20, X1
	0x01E76568 MOV X19, X0
	0x01E7656C TBNZ X8, 0x0, 0x1E76584
	0x01E76570 ADRP X0, 0x2287000
	0x01E76574 LDR X0, [X0 + 0x680]
	0x01E76578 BL 0x1C16CF4
	0x01E7657C MOVZ W8, 0x1
	0x01E76580 STRB W8, [X21 + 0x175]
	0x01E76584 LDR X0, [X19]
	0x01E76588 CBZ X0, 0x1E765D0
	0x01E7658C ADRP X8, 0x2287000
	0x01E76590 LDR X8, [X8 + 0x680]
	0x01E76594 MOV X1, X20
	0x01E76598 LDR X2, [X8]
	0x01E7659C ADD X8, X31, 0x18
	0x01E765A0 BL 0x22269A8
	0x01E765A4 LDUR V0, [X31 + 0x18]
	0x01E765A8 LDR X8, [X31 + 0x28]
	0x01E765AC ADD X1, X31, 0x0
	0x01E765B0 MOV X0, X19
	0x01E765B4 STR V0, [X31]
	0x01E765B8 STR X8, [X31 + 0x10]
	0x01E765BC BL 0x1E765D4
	0x01E765C0 LDP X20, X19, [X31 + 0x40]
	0x01E765C4 LDP X30, X21, [X31 + 0x30]
	0x01E765C8 ADD X31, X31, 0x50
	0x01E765CC RET
	0x01E765D0 BL 0x1C16F20
	0x01E765D4 SUB X31, X31, 0x50
	0x01E765D8 STR X30, [X31 + 0x20]
	0x01E765DC STP X22, X21, [X31 + 0x30]
	0x01E765E0 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X20, 0x2565000
	015 Move X21, 0x2289000
	016 Move W8, [X20+359]
	017 Move X21, [X21+1216]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {85}
	023 Move X0, 0x2289000
	024 Move X0, [X0+1440]
	025 Call 0x1C17CF4
	026 Move X0, 0x2289000
	027 Move X0, [X0+1216]
	028 Call 0x1C17CF4
	029 Move X0, 0x2289000
	030 Move X0, [X0+1336]
	031 Call 0x1C17CF4
	032 Move X0, 0x2289000
	033 Move X0, [X0+1448]
	034 Call 0x1C17CF4
	035 Move X0, 0x2289000
	036 Move X0, [X0+1456]
	037 Call 0x1C17CF4
	038 Move X0, 0x2289000
	039 Move X0, [X0+1464]
	040 Call 0x1C17CF4
	041 Move X0, 0x2289000
	042 Move X0, [X0+1472]
	043 Call 0x1C17CF4
	044 Move X0, 0x2289000
	045 Move X0, [X0+1480]
	046 Call 0x1C17CF4
	047 Move X0, 0x2289000
	048 Move X0, [X0+1488]
	049 Call 0x1C17CF4
	050 Move X0, 0x2289000
	051 Move X0, [X0+1496]
	052 Call 0x1C17CF4
	053 Move X0, 0x2289000
	054 Move X0, [X0+1504]
	055 Call 0x1C17CF4
	056 Move X0, 0x2289000
	057 Move X0, [X0+1512]
	058 Call 0x1C17CF4
	059 Move X0, 0x2289000
	060 Move X0, [X0+1520]
	061 Call 0x1C17CF4
	062 Move X0, 0x227F000
	063 Move X0, [X0+2512]
	064 Call 0x1C17CF4
	065 Move X0, 0x2288000
	066 Move X0, [X0+1528]
	067 Call 0x1C17CF4
	068 Move X0, 0x2288000
	069 Move X0, [X0+1536]
	070 Call 0x1C17CF4
	071 Move X0, 0x2286000
	072 Move X0, [X0+3168]
	073 Call 0x1C17CF4
	074 Move X0, 0x227E000
	075 Move X0, [X0+1728]
	076 Call 0x1C17CF4
	077 Move X0, 0x2288000
	078 Move X0, [X0+1544]
	079 Call 0x1C17CF4
	080 Move X0, 0x2288000
	081 Move X0, [X0+1552]
	082 Call 0x1C17CF4
	083 Move W8, 1
	084 Move [X20+359], W8
	085 Move X0, [X21]
	086 Move [X31+8], X31
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {92}
	090 Call 0x1C17DFC
	091 Move X0, [X21]
	092 Move X8, [X0+184]
	093 Move X8, [X8]
	094 Compare X8, 0
	095 JumpIfNotEqual {114}
	096 Move X8, 0x2288000
	097 Move X8, [X8+1488]
	098 Move X0, [X8]
	099 Call 0x1C17F10
	100 Move X8, 0x2288000
	101 Move X8, [X8+1472]
	102 Move X20, X0
	103 Move X1, [X8]
	104 Call Dictionary`2<Object, Object>..ctor, X0
	105 Move X0, [X21]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {111}
	109 Call 0x1C17DFC
	110 Move X0, [X21]
	111 Move X8, [X0+184]
	112 Move [X8], X20
	113 Move X0, [X21]
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {119}
	117 Call 0x1C17DFC
	118 Move X0, [X21]
	119 Move X8, [X0+184]
	120 Move X0, [X8]
	121 Compare X0, 0
	122 JumpIfEqual {484}
	123 Move X8, 0x2288000
	124 Move X8, [X8+1464]
	125 Add X2, X31, 8
	126 Move X1, X19
	127 Move X3, [X8]
	128 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfEqual {469}
	133 Move X8, 0x2288000
	134 Move X8, [X8+1520]
	135 Move X0, [X8]
	136 Call 0x1C17F10
	137 Move X8, 0x2288000
	138 Move X8, [X8+1512]
	139 Move X20, X0
	140 Move X1, [X8]
	141 Call List`1<PropertyData>..ctor, X0
	142 Compare X19, 0
	143 JumpIfEqual {484}
	144 Move X8, [X19]
	145 Move W1, 52
	146 Move X0, X19
	147 Move X9, [X8+2024]
	148 Move X2, [X8+2032]
	149 NotImplemented "Instruction BLR not yet implemented."
	150 Compare X0, 0
	151 JumpIfEqual {484}
	152 Move X8, [X0+24]
	153 Move X21, X0
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X29, 0x2288000
	156 Move X27, 0x227E000
	157 Move X29, [X29+1336]
	158 Move X27, [X27+1728]
	159 Move X28, X31
	160 And X8, X8, 0
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Add X8, X21, X28
	163 Move X22, [X8+32]
	164 Move X1, [X29]
	165 Move X0, X22
	166 Call 0x21A991C, X0
	167 Compare X0, 0
	168 JumpIfEqual {439}
	169 Move X8, 0x2288000
	170 Move X8, [X8+1448]
	171 Move X23, X0
	172 Move X0, X22
	173 Move X1, [X8]
	174 Call 0x21A991C, X0
	175 Move X25, X0
	176 Compare X0, 0
	177 JumpIfEqual {317}
	178 Move X26, X19
	179 Compare X26, 0
	180 JumpIfEqual {484}
	181 Move X1, [X25+16]
	182 Move W2, 52
	183 Move X0, X26
	184 Move X3, X31
	185 Call Type.GetMethod, X0, X1, X2
	186 Move X8, [X26]
	187 Move X24, X0
	188 Move X0, X26
	189 Move X9, [X8+2072]
	190 Move X1, [X8+2080]
	191 NotImplemented "Instruction BLR not yet implemented."
	192 Move X26, X0
	193 Move X0, X24
	194 Move X1, X31
	195 Move X2, X31
	196 Call MethodInfo.op_Equality, X0, X1
	197 Move TEMP, X0
	198 And TEMP, TEMP, 1
	199 Compare TEMP, 1
	200 JumpIfNotEqual {214}
	201 Move X0, [X27]
	202 Move W8, [X0+224]
	203 Compare W8, 0
	204 JumpIfNotEqual {206}
	205 Call 0x1C17DFC
	206 Move X0, X26
	207 Move X1, X31
	208 Move X2, X31
	209 Call Type.op_Inequality, X0, X1
	210 Move TEMP, X0
	211 And TEMP, TEMP, 1
	212 Compare TEMP, 1
	213 JumpIfEqual {179}
	214 Move X0, X24
	215 Move X1, X31
	216 Move X2, X31
	217 Call MethodInfo.op_Equality, X0, X1
	218 Move TEMP, X0
	219 And TEMP, TEMP, 1
	220 Compare TEMP, 1
	221 JumpIfEqual {439}
	222 Compare X24, 0
	223 JumpIfEqual {484}
	224 Move X8, [X24]
	225 Move X0, X24
	226 Move X9, [X8+584]
	227 Move X1, [X8+592]
	228 NotImplemented "Instruction BLR not yet implemented."
	229 Compare X0, 0
	230 JumpIfEqual {484}
	231 Move X8, [X27]
	232 Move X10, 0x2288000
	233 Move W26, [X0+24]
	234 Move W9, [X8+224]
	235 Move X10, [X10+1440]
	236 Move X25, [X10]
	237 Compare W9, 0
	238 JumpIfNotEqual {241}
	239 Move X0, X8
	240 Call 0x1C17DFC
	241 Move X0, X25
	242 Move X1, X31
	243 Call Type.GetTypeFromHandle, X0
	244 Compare X0, 0
	245 JumpIfEqual {484}
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Move X8, 0x2288000
	248 Move X8, [X8+1552]
	249 Move W2, 40
	250 Move X3, X31
	251 Move X1, [X8]
	252 Call Type.GetMethod, X0, X1, X2
	253 Move X8, 0x2286000
	254 Move X8, [X8+3168]
	255 Move X25, X0
	256 Move W1, 1
	257 Move X8, [X8]
	258 Move X0, X8
	259 Call 0x1C17D6C
	260 Compare X0, 0
	261 JumpIfEqual {484}
	262 Move X8, [X0]
	263 Move X26, X0
	264 Move X0, X19
	265 Move X1, [X8+64]
	266 Call 0x1C17E00
	267 Compare X0, 0
	268 JumpIfEqual {486}
	269 Move W8, [X26+24]
	270 Compare W8, 0
	271 JumpIfEqual {485}
	272 Move [X26+32], X19
	273 Compare X25, 0
	274 JumpIfEqual {484}
	275 Move X8, [X25]
	276 Move X0, X25
	277 Move X1, X26
	278 Move X9, [X8+984]
	279 Move X2, [X8+992]
	280 NotImplemented "Instruction BLR not yet implemented."
	281 Move X8, 0x227E000
	282 Move X8, [X8+2512]
	283 Move X25, X0
	284 Move W1, 1
	285 Move X8, [X8]
	286 Move X0, X8
	287 Call 0x1C17D6C
	288 Compare X0, 0
	289 JumpIfEqual {484}
	290 Move X8, [X0]
	291 Move X26, X0
	292 Move X0, X24
	293 Move X1, [X8+64]
	294 Call 0x1C17E00
	295 Compare X0, 0
	296 JumpIfEqual {486}
	297 Move W8, [X26+24]
	298 Compare W8, 0
	299 JumpIfEqual {485}
	300 Move [X26+32], X24
	301 Compare X25, 0
	302 JumpIfEqual {484}
	303 Move X0, X25
	304 Move X1, X31
	305 Move X2, X26
	306 Move X3, X31
	307 Call MethodBase.Invoke, X0, X1, X2
	308 Move X25, X0
	309 Compare X0, 0
	310 JumpIfEqual {316}
	311 Move X8, 0x2288000
	312 Move X8, [X8+1536]
	313 Move X1, [X8]
	314 Move X8, [X25]
	315 NotImplemented "Instruction CMP not yet implemented."
	316 Move X24, X31
	317 Move X24, X31
	318 Compare X20, 0
	319 JumpIfNotEqual {410}
	320 Move X8, 0x2288000
	321 Move X8, [X8+1544]
	322 Move W2, 40
	323 Move X3, X31
	324 Move X1, [X8]
	325 Call Type.GetMethod, X0, X1, X2
	326 Move X8, 0x2286000
	327 Move X8, [X8+3168]
	328 Move X25, X0
	329 Move W1, 1
	330 Move X8, [X8]
	331 Move X0, X8
	332 Call 0x1C17D6C
	333 Compare X0, 0
	334 JumpIfEqual {484}
	335 Move X8, [X0]
	336 Move X26, X0
	337 Move X0, X19
	338 Move X1, [X8+64]
	339 Call 0x1C17E00
	340 Compare X0, 0
	341 JumpIfEqual {486}
	342 Move W8, [X26+24]
	343 Compare W8, 0
	344 JumpIfEqual {485}
	345 Move [X26+32], X19
	346 Compare X25, 0
	347 JumpIfEqual {484}
	348 Move X8, [X25]
	349 Move X0, X25
	350 Move X1, X26
	351 Move X9, [X8+984]
	352 Move X2, [X8+992]
	353 NotImplemented "Instruction BLR not yet implemented."
	354 Move X8, 0x227E000
	355 Move X8, [X8+2512]
	356 Move X25, X0
	357 Move W1, 1
	358 Move X8, [X8]
	359 Move X0, X8
	360 Call 0x1C17D6C
	361 Compare X0, 0
	362 JumpIfEqual {484}
	363 Move X8, [X0]
	364 Move X26, X0
	365 Move X0, X24
	366 Move X1, [X8+64]
	367 Call 0x1C17E00
	368 Compare X0, 0
	369 JumpIfEqual {486}
	370 Move W8, [X26+24]
	371 Compare W8, 0
	372 JumpIfEqual {485}
	373 Move [X26+32], X24
	374 Compare X25, 0
	375 JumpIfEqual {484}
	376 Move X0, X25
	377 Move X1, X31
	378 Move X2, X26
	379 Move X3, X31
	380 Call MethodBase.Invoke, X0, X1, X2
	381 Move X24, X0
	382 Compare X0, 0
	383 JumpIfEqual {389}
	384 Move X8, 0x2288000
	385 Move X8, [X8+1528]
	386 Move X1, [X8]
	387 Move X8, [X24]
	388 NotImplemented "Instruction CMP not yet implemented."
	389 Move X25, X31
	390 Move X26, 0x2288000
	391 Move X26, [X26+1216]
	392 Move X0, [X26]
	393 Move W8, [X0+224]
	394 Compare W8, 0
	395 JumpIfNotEqual {398}
	396 Call 0x1C17DFC
	397 Move X0, [X26]
	398 Move X8, [X0+184]
	399 Move X0, [X8+8]
	400 Compare X0, 0
	401 JumpIfEqual {484}
	402 Move X8, 0x2288000
	403 Move X8, [X8+1480]
	404 Move W2, 1
	405 Move X1, X19
	406 Move X3, [X8]
	407 Call Dictionary`2<Object, Boolean>.set_Item, X0, X1, X2
	408 Compare X20, 0
	409 JumpIfEqual {484}
	410 Move X9, 0x2288000
	411 Move W10, [X20+28]
	412 Move X8, [X20+16]
	413 Move X9, [X9+1496]
	414 Add W10, W10, 1
	415 Move X9, [X9]
	416 Move [X20+28], W10
	417 Compare X8, 0
	418 JumpIfEqual {484}
	419 NotImplemented "Instruction LDRSW not yet implemented."
	420 Move W11, [X8+24]
	421 NotImplemented "Instruction CMP not yet implemented."
	422 Add W9, W10, 1
	423 Add X8, X8, X10
	424 Move [X20+24], W9
	425 Move [X8+32], X22
	426 Move [X8+40], X23
	427 Move [X8+48], X24
	428 Move [X8+56], X25
	429 Move X8, [X9+32]
	430 Add X1, X31, 16
	431 Move X0, X20
	432 Move X8, [X8+192]
	433 Move X2, [X8+112]
	434 Move [X31+16], X22
	435 Move [X31+24], X23
	436 Move [X31+32], X24
	437 Move [X31+40], X25
	438 Call List`1<PropertyData>.AddWithResize, X0, X1
	439 Move W8, [X21+24]
	440 Add X28, X28, 1
	441 NotImplemented "Instruction CMP not yet implemented."
	442 Move X21, 0x2288000
	443 Move X21, [X21+1216]
	444 Move X0, [X21]
	445 Move W8, [X0+224]
	446 Compare W8, 0
	447 JumpIfNotEqual {450}
	448 Call 0x1C17DFC
	449 Move X0, [X21]
	450 Compare X20, 0
	451 JumpIfEqual {484}
	452 Move X9, 0x2288000
	453 Move X8, [X0+184]
	454 Move X9, [X9+1504]
	455 Move X0, X20
	456 Move X21, [X8]
	457 Move X1, [X9]
	458 Call List`1<PropertyData>.ToArray, X0
	459 Move [X31+8], X0
	460 Compare X21, 0
	461 JumpIfEqual {484}
	462 Move X8, 0x2288000
	463 Move X8, [X8+1456]
	464 Move X2, X0
	465 Move X0, X21
	466 Move X1, X19
	467 Move X3, [X8]
	468 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	469 Move X0, [X31+8]
	470 Move X20, [X31+128]
	471 Move X19, [X31+136]
	472 Move X22, [X31+112]
	473 Move X21, [X31+120]
	474 Move X24, [X31+96]
	475 Move X23, [X31+104]
	476 Move X26, [X31+80]
	477 Move X25, [X31+88]
	478 Move X28, [X31+64]
	479 Move X27, [X31+72]
	480 Move X29, [X31+48]
	481 Move X30, [X31+56]
	482 Add X31, X31, 144
	483 Return X0
	484 Call 0x1C17F20
	485 Call 0x1C17F28
	486 Call 0x1C17F44
	487 Move X1, X31
	488 Call 0x1C17DEC
	489 Move X0, X25
	490 Call 0x1C181E0
	491 Move X0, X24
	492 Call 0x1C181E0

Method: System.Void Finalize()

Disassembly:
	0x01E765E4 ADRP X22, 0x2563000
	0x01E765E8 ADRP X21, 0x2287000
	0x01E765EC LDRB W8, [X22 + 0x176]
	0x01E765F0 LDR X21, [X21 + 0x688]
	0x01E765F4 MOV X20, X1
	0x01E765F8 MOV X19, X0
	0x01E765FC TBNZ X8, 0x0, 0x1E76614
	0x01E76600 ADRP X0, 0x2287000
	0x01E76604 LDR X0, [X0 + 0x688]
	0x01E76608 BL 0x1C16CF4
	0x01E7660C MOVZ W8, 0x1
	0x01E76610 STRB W8, [X22 + 0x176]
	0x01E76614 LDP X1, X2, [X19 + 0x8]
	0x01E76618 LDP X3, X4, [X19 + 0x18]
	0x01E7661C LDR X5, [X21]
	0x01E76620 ADD X8, X31, 0x8
	0x01E76624 MOV X0, X20
	0x01E76628 BL 0x24E89AC
	0x01E7662C LDR V2, [X19 + 0x28]
	0x01E76630 LDR V0, [X31 + 0x8]
	0x01E76634 LDUR V3, [X31 + 0x14]
	0x01E76638 LDR V1, [X31 + 0x10]
	0x01E7663C LDR V4, [X31 + 0x1C]
	0x01E76640 FMOV S5, 1
	0x01E76644 FMIN S5, S2, S5
	0x01E76648 FCMP S2, 0x0
	0x01E7664C FMOV S2, W31
	0x01E76650 FSUB V3.2S, V3.2S, V0.2S
	0x01E76654 FCSEL S2, S5, S2, PL
	0x01E76658 LDP X20, X19, [X31 + 0x40]
	0x01E7665C LDP X22, X21, [X31 + 0x30]
	0x01E76660 LDR X30, [X31 + 0x20]
	0x01E76664 FSUB S4, S4, S1
	0x00000000 INVALID
	0x01E7666C FMUL S2, S4, S2
	0x01E76670 FADD V0.2S, V0.2S, V3.2S
	0x01E76674 FADD S2, S1, S2
	0x01E76678 MOV S1, V0.S[1]
	0x01E7667C ADD X31, X31, 0x50
	0x01E76680 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+32]
	007 Compare X0, 0
	008 JumpIfEqual {11}
	009 Move X1, X31
	010 Call Native.Free, X0
	011 Move X0, X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X1, X31
	015 Move X30, [X31+32]
	016 Move X21, [X31+40]
	017 Call Object.Finalize, X0
	018 Return 
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X21, X0
	021 Move X0, X21
	022 Call 0x3EB2AD0
	023 Move X20, [X0]
	024 Call 0x3EB2AE0
	025 Move X0, X19
	026 Move X1, X31
	027 Call Object.Finalize, X0
	028 Compare X20, 0
	029 JumpIfNotEqual {36}
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return 
	035 Move X20, X31
	036 Move X0, X20
	037 Call 0x1C17F18
	038 Move X21, X0
	039 Move X0, X19
	040 Move X1, X31
	041 Call Object.Finalize, X0
	042 Compare X20, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X21
	045 Call 0x1D2D690
	046 Move X0, X20
	047 Call 0x1C17F18
	048 Call 0x1991590

Method: System.Void Init(Fusion.NetworkBehaviour networkBehaviour, Fusion.NetworkBehaviour/ChangeDetector/Source source, System.Boolean copyInitial = True)

Disassembly:
	0x01E75804 CMP W9, 0x0
	0x01E75808 STR X10, [X31 + 0x10]
	0x01E7580C ADD X10, X8, 0x20
	0x01E75810 CSEL X25, X31, X10, EQ
	0x01E75814 CBNZ X0, 0x1E75850
	0x01E75818 LDR W0, [X8 + 0x18]
	0x01E7581C ADRP X8, 0x2288000
	0x01E75820 LDR X8, [X8 + 0x618]
	0x01E75824 LDR X1, [X8]
	0x01E75828 BL 0x222206C
	0x01E7582C LDR X8, [X21 + 0x18]
	0x01E75830 STR X0, [X21 + 0x20]
	0x01E75834 B 0x1E7584C
	0x01E75838 MOV X9, X21
	0x01E7583C LDR X0, [X9 + 0x20]!
	0x01E75840 STR X9, [X31 + 0x10]
	0x01E75844 CBZ X0, 0x1E75B60
	0x01E75848 MOV X25, X31
	0x01E7584C CBZ X8, 0x1E75B60
	0x01E75850 LDR W8, [X8 + 0x18]
	0x01E75854 MOV X1, X25
	0x01E75858 MOV X3, X31
	0x01E7585C UBFM W2, W8, 0x1E, 0x1D
	0x01E75860 BL 0x1E35764
	0x01E75864 CBZ X24, 0x1E75B60
	0x01E75868 LDR W8, [X24 + 0x18]
	0x01E7586C STR W28, [X31 + 0xC]
	0x01E75870 STP X23, X27, [X31 + 0x18]
	0x01E75874 CMP W8, 0x1
	0x01E75878 B.LT 0x1E75980
	0x01E7587C MOV W28, W31
	0x01E75880 MOV W27, W31
	0x01E75884 CMP W28, W8
	0x01E75888 B.CS 0x1E75B64
	0x01E7588C SXTW X8, W28
	0x01E75890 ADD X9, X24, X8, 0x5, LSL
	0x01E75894 LDP X0, X8, [X9 + 0x20]
	0x01E75898 LDR V0, [X9 + 0x3]
	0x01E7589C STR V0, [X31 + 0x5]
	0x01E758A0 CBZ X8, 0x1E75B60
	0x01E758A4 LDP W29, W19, [X8 + 0x10]
	0x01E758A8 SXTW X29, W29
	0x01E758AC ADD W9, W19, W29
	0x01E758B0 CMP W29, W9
	0x01E758B4 B.GE 0x1E7596C
	0x01E758B8 ADD X9, X25, X29, 0x2, LSL
	0x01E758BC ADD X10, X26, X29, 0x2, LSL
	0x01E758C0 MOV W11, W19
	0x01E758C4 LDR W12, [X9]
	0x01E758C8 LDR W13, [X10]
	0x01E758CC CMP W12, W13
	0x01E758D0 B.NE 0x1E758E8
	0x01E758D4 ADD X9, X9, 0x4
	0x01E758D8 SUBS W11, W11, 0x1
	0x01E758DC ADD X10, X10, 0x4
	0x01E758E0 B.NE 0x1E758C4
	0x01E758E4 B 0x1E7596C
	0x01E758E8 LDR X9, [X21 + 0x38]
	0x01E758EC LDR V0, [X31 + 0x5]
	0x01E758F0 STR V0, [X31 + 0x4]
	0x01E758F4 CBZ X9, 0x1E75B60
	0x01E758F8 LDR V0, [X31 + 0x4]
	0x01E758FC STR V0, [X31 + 0x3]
	0x01E75900 LDR W10, [X9 + 0x18]
	0x01E75904 CMP W27, W10
	0x01E75908 B.CS 0x1E75B64
	0x01E7590C SXTW X23, W27
	0x01E75910 ADD X9, X9, X23, 0x5, LSL
	0x01E75914 STP X0, X8, [X9 + 0x20]
	0x01E75918 LDR V0, [X31 + 0x3]
	0x01E7591C STR V0, [X9 + 0x3]
	0x01E75920 CBZ X0, 0x1E75B60
	0x01E75924 LDR X8, [X0]
	0x01E75928 LDR X20, [X21 + 0x30]
	0x01E7592C LDP X9, X1, [X8 + 0x1A8]
	0x01E75930 BLR X9
	0x01E75934 CBZ X20, 0x1E75B60
	0x01E75938 LDR W8, [X20 + 0x18]
	0x01E7593C CMP W27, W8
	0x01E75940 B.CS 0x1E75B64
	0x01E75944 ADD X8, X20, X23, 0x3, LSL
	0x01E75948 STR X0, [X8 + 0x20]
	0x01E7594C LDR W8, [X31 + 0x2C]
	0x01E75950 ADD W27, W27, 0x1
	0x01E75954 TBZ X8, 0x0, 0x1E7596C
	0x01E75958 ADD X0, X25, X29, 0x2, LSL
	0x01E7595C ADD X1, X26, X29, 0x2, LSL
	0x01E75960 UBFM W2, W19, 0x1E, 0x1D
	0x01E75964 MOV X3, X31
	0x01E75968 BL 0x1E35764
	0x01E7596C LDR W8, [X24 + 0x18]
	0x01E75970 ADD W28, W28, 0x1
	0x01E75974 CMP W28, W8
	0x01E75978 B.LT 0x1E75884
	0x01E7597C B 0x1E75984
	0x01E75980 MOV W27, W31
	0x01E75984 CMP W27, 0x1
	0x01E75988 B.LT 0x1E759B4
	0x01E7598C LDR X8, [X21 + 0x18]
	0x01E75990 CBZ X8, 0x1E75B60
	0x01E75994 LDR X9, [X31 + 0x10]
	0x01E75998 LDR X11, [X8 + 0x18]
	0x01E7599C LDR X10, [X31 + 0x20]
	0x01E759A0 LDR W8, [X31 + 0xC]
	0x01E759A4 LDR X9, [X9]
	0x01E759A8 STP W11, W8, [X10 + 0x8]
	0x01E759AC STR X9, [X10]
	0x01E759B0 B 0x1E759BC
	0x01E759B4 LDR X8, [X31 + 0x20]
	0x01E759B8 STP X31, X31, [X8]
	0x01E759BC LDRB W8, [X21 + 0x40]
	0x01E759C0 CBZ W8, 0x1E75B1C
	0x01E759C4 LDR X8, [X21 + 0x38]
	0x01E759C8 CBZ X8, 0x1E75B1C
	0x01E759CC CMP W27, 0x1
	0x01E759D0 B.LT 0x1E75B1C
	0x01E759D4 ADRP X19, 0x227E000
	0x01E759D8 ADRP X24, 0x2286000
	0x01E759DC LDR X19, [X19 + 0x7D0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x2565000
	009 Move W8, [X23+360]
	010 Move W20, W3
	011 Move W22, W2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {38}
	018 Move X0, 0x2289000
	019 Move X0, [X0+1216]
	020 Call 0x1C17CF4
	021 Move X0, 0x2280000
	022 Move X0, [X0+3672]
	023 Call 0x1C17CF4
	024 Move X0, 0x2286000
	025 Move X0, [X0+1520]
	026 Call 0x1C17CF4
	027 Move X0, 0x2280000
	028 Move X0, [X0+1136]
	029 Call 0x1C17CF4
	030 Move X0, 0x2289000
	031 Move X0, [X0+1416]
	032 Call 0x1C17CF4
	033 Move X0, 0x227F000
	034 Move X0, [X0+2760]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X23+360], W8
	038 Compare X19, 0
	039 JumpIfEqual {139}
	040 Move W1, [X19+112]
	041 Compare W1, 0
	042 JumpIfEqual {131}
	043 Move X24, 0x2280000
	044 Move X8, [X21+24]
	045 Move X24, [X24+1136]
	046 Compare X8, 0
	047 JumpIfEqual {55}
	048 Move [X31+8], X31
	049 Move W1, [X8+24]
	050 Move X2, [X24]
	051 Add X0, X31, 8
	052 Call Nullable`1<Int32>..ctor, X0, X1
	053 Move W8, [X31+12]
	054 Move W1, [X19+112]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X8, 0x2280000
	057 Move X8, [X8+3672]
	058 Move X0, [X8]
	059 Call 0x1C17D6C
	060 Move [X21+24], X0
	061 Move X0, [X21+24]
	062 Compare X0, 0
	063 JumpIfEqual {139}
	064 Move W2, [X0+24]
	065 Move W1, W31
	066 Move X3, X31
	067 Call Array.Clear, X0, X1, X2
	068 Move X23, 0x2289000
	069 Move X23, [X23+1216]
	070 Move X0, X19
	071 Move X1, X31
	072 Call "il2cpp_vm_object_is_inst", X0
	073 Move X8, [X23]
	074 Move X23, X0
	075 Move W9, [X8+224]
	076 Compare W9, 0
	077 JumpIfNotEqual {80}
	078 Move X0, X8
	079 Call 0x1C17DFC
	080 Move X0, X23
	081 Call ChangeDetector.GetPropertyMappping, X0
	082 Compare X0, 0
	083 JumpIfEqual {139}
	084 Move X8, [X21+48]
	085 Move W23, [X0+24]
	086 Compare X8, 0
	087 JumpIfEqual {90}
	088 Move W8, [X8+24]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X8, 0x227F000
	091 Move X8, [X8+2760]
	092 Move W1, W23
	093 Move X0, [X8]
	094 Call 0x1C17D6C
	095 Move [X21+48], X0
	096 Move X8, 0x2289000
	097 Move X8, [X8+1416]
	098 Move W1, W23
	099 Move X0, [X8]
	100 Call 0x1C17D6C
	101 Move [X21+56], X0
	102 Move X0, X19
	103 Move X1, X31
	104 Call Object.GetInstanceID, X0
	105 Move X2, [X24]
	106 Move W1, W0
	107 Add X0, X31, 8
	108 Move [X31+8], X31
	109 Call Nullable`1<Int32>..ctor, X0, X1
	110 Move X8, [X31+8]
	111 Move [X21+40], W22
	112 Move [X21+44], W31
	113 Move [X21+16], X8
	114 Move TEMP, X20
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {131}
	118 Move X8, [X21+24]
	119 Compare X8, 0
	120 JumpIfEqual {139}
	121 Move W9, [X8+24]
	122 Move X1, [X19+80]
	123 Add X8, X8, 32
	124 Move X3, X31
	125 NotImplemented "Instruction CMP not yet implemented."
	126 NotImplemented "Instruction CSEL not yet implemented."
	127 Move W2, W9
	128 ShiftRight W2, 30
	129 And W2, W2, 0x1FFFFFFF
	130 Call Native.MemCpy, X0, X1, X2
	131 Move X20, [X31+48]
	132 Move X19, [X31+56]
	133 Move X22, [X31+32]
	134 Move X21, [X31+40]
	135 Move X24, [X31+16]
	136 Move X23, [X31+24]
	137 Move X30, [X31+64]
	138 Return 
	139 Call 0x1C17F20

Method: Fusion.NetworkBehaviour/ChangeDetector/Enumerable DetectChanges(Fusion.NetworkBehaviour b, out Fusion.NetworkBehaviourBuffer previous, out Fusion.NetworkBehaviourBuffer current, System.Boolean copyChanges = True)

Disassembly:
	0x01E76684 SUB X31, X31, 0x50
	0x01E76688 STP X30, X21, [X31 + 0x30]

ISIL:
	001 And W4, W4, 1

Method: Fusion.NetworkBehaviour/ChangeDetector/Enumerable DetectChanges(Fusion.NetworkBehaviour b, System.Boolean copyChanges = True)

Disassembly:
	0x01E74F5C TBNZ X8, 0x0, 0x1E75058
	0x01E74F60 ADRP X0, 0x2289000
	0x01E74F64 LDR X0, [X0 + 0x5A0]
	0x01E74F68 BL 0x1C16CF4
	0x01E74F6C ADRP X0, 0x2289000
	0x01E74F70 LDR X0, [X0 + 0x4C0]
	0x01E74F74 BL 0x1C16CF4
	0x01E74F78 ADRP X0, 0x2289000
	0x01E74F7C LDR X0, [X0 + 0x538]
	0x01E74F80 BL 0x1C16CF4
	0x01E74F84 ADRP X0, 0x2289000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+24], X31
	003 Move [X31+32], X30
	004 And W4, W2, 1
	005 Add X2, X31, 16
	006 Add X3, X31, 0
	007 Move [X31+8], X31
	008 Move [X31+16], X31
	009 Move [X31], X31
	010 Call ChangeDetector.DetectChangesInternal, X0, X1, X2, X3, X4
	011 Move X30, [X31+32]
	012 Add X31, X31, 48
	013 Return X0

Method: Fusion.NetworkBehaviour/ChangeDetector/Enumerable DetectChangesInternal(Fusion.NetworkBehaviour b, out Fusion.NetworkBehaviourBuffer previous, out Fusion.NetworkBehaviourBuffer current, System.Boolean copyChanges = True)

Disassembly:
	0x01E7668C STP X20, X19, [X31 + 0x40]
	0x01E76690 ADRP X21, 0x2563000
	0x01E76694 LDRB W8, [X21 + 0x177]
	0x01E76698 MOV X20, X1
	0x01E7669C MOV X19, X0
	0x01E766A0 TBNZ X8, 0x0, 0x1E766B8
	0x01E766A4 ADRP X0, 0x2287000
	0x01E766A8 LDR X0, [X0 + 0x690]
	0x01E766AC BL 0x1C16CF4
	0x01E766B0 MOVZ W8, 0x1
	0x01E766B4 STRB W8, [X21 + 0x177]
	0x01E766B8 LDR X0, [X19]
	0x01E766BC CBZ X0, 0x1E76704
	0x01E766C0 ADRP X8, 0x2287000
	0x01E766C4 LDR X8, [X8 + 0x690]
	0x01E766C8 MOV X1, X20
	0x01E766CC LDR X2, [X8]
	0x01E766D0 ADD X8, X31, 0x18
	0x01E766D4 BL 0x2226924
	0x01E766D8 LDUR V0, [X31 + 0x18]
	0x01E766DC LDR X8, [X31 + 0x28]
	0x01E766E0 ADD X1, X31, 0x0
	0x01E766E4 MOV X0, X19
	0x01E766E8 STR V0, [X31]
	0x01E766EC STR X8, [X31 + 0x10]
	0x01E766F0 BL 0x1E76708
	0x01E766F4 LDP X20, X19, [X31 + 0x40]
	0x01E766F8 LDP X30, X21, [X31 + 0x30]
	0x01E766FC ADD X31, X31, 0x50
	0x01E76700 RET
	0x01E76704 BL 0x1C16F20
	0x01E76708 STR X30, [X31 - 0x30]!
	0x01E7670C STP X22, X21, [X31 + 0x10]
	0x01E76710 STP X20, X19, [X31 + 0x20]
	0x01E76714 ADRP X22, 0x2563000
	0x01E76718 ADRP X21, 0x2287000
	0x01E7671C LDRB W8, [X22 + 0x178]
	0x01E76720 LDR X21, [X21 + 0x698]
	0x01E76724 MOV X20, X1
	0x01E76728 MOV X19, X0
	0x01E7672C TBNZ X8, 0x0, 0x1E76744
	0x01E76730 ADRP X0, 0x2287000
	0x01E76734 LDR X0, [X0 + 0x698]
	0x01E76738 BL 0x1C16CF4
	0x01E7673C MOVZ W8, 0x1
	0x01E76740 STRB W8, [X22 + 0x178]
	0x01E76744 LDP X1, X2, [X19 + 0x8]
	0x01E76748 LDP X3, X4, [X19 + 0x18]
	0x01E7674C LDR X5, [X21]
	0x01E76750 MOV X0, X20
	0x01E76754 BL 0x24E8794
	0x01E76758 LDR V4, [X19 + 0x28]
	0x01E7675C FMOV S5, 1
	0x01E76760 LDP X20, X19, [X31 + 0x20]
	0x01E76764 LDP X22, X21, [X31 + 0x10]
	0x01E76768 FMIN S5, S4, S5
	0x01E7676C FCMP S4, 0x0
	0x01E76770 FMOV S4, W31
	0x01E76774 FSUB S2, S2, S0
	0x01E76778 FSUB S3, S3, S1
	0x01E7677C FCSEL S4, S5, S4, PL
	0x01E76780 FMUL S2, S2, S4
	0x01E76784 FMUL S3, S3, S4
	0x01E76788 FADD S0, S0, S2
	0x01E7678C FADD S1, S1, S3
	0x01E76790 LDR X30, [X31], #0x30
	0x01E76794 RET
	0x01E76798 SUB X31, X31, 0x50
	0x01E7679C STP X30, X21, [X31 + 0x30]
	0x01E767A0 STP X20, X19, [X31 + 0x40]
	0x01E767A4 ADRP X21, 0x2563000
	0x01E767A8 LDRB W8, [X21 + 0x179]
	0x01E767AC MOV X20, X1
	0x01E767B0 MOV X19, X0
	0x01E767B4 TBNZ X8, 0x0, 0x1E767CC
	0x01E767B8 ADRP X0, 0x2287000
	0x01E767BC LDR X0, [X0 + 0x6A0]
	0x01E767C0 BL 0x1C16CF4
	0x01E767C4 MOVZ W8, 0x1
	0x01E767C8 STRB W8, [X21 + 0x179]
	0x01E767CC LDR X0, [X19]
	0x01E767D0 CBZ X0, 0x1E76818
	0x01E767D4 ADRP X8, 0x2287000
	0x01E767D8 LDR X8, [X8 + 0x6A0]
	0x01E767DC MOV X1, X20
	0x01E767E0 LDR X2, [X8]
	0x01E767E4 ADD X8, X31, 0x18
	0x01E767E8 BL 0x2226A2C
	0x01E767EC LDUR V0, [X31 + 0x18]
	0x01E767F0 LDR X8, [X31 + 0x28]
	0x01E767F4 ADD X1, X31, 0x0
	0x01E767F8 MOV X0, X19
	0x01E767FC STR V0, [X31]
	0x01E76800 STR X8, [X31 + 0x10]
	0x01E76804 BL 0x1E7681C
	0x01E76808 LDP X20, X19, [X31 + 0x40]
	0x01E7680C LDP X30, X21, [X31 + 0x30]
	0x01E76810 ADD X31, X31, 0x50
	0x01E76814 RET
	0x01E76818 BL 0x1C16F20
	0x01E7681C SUB X31, X31, 0x50
	0x01E76820 STR X30, [X31 + 0x20]
	0x01E76824 STP X22, X21, [X31 + 0x30]
	0x01E76828 STP X20, X19, [X31 + 0x40]
	0x01E7682C ADRP X22, 0x2563000
	0x01E76830 ADRP X21, 0x2287000
	0x01E76834 LDRB W8, [X22 + 0x17A]
	0x01E76838 LDR X21, [X21 + 0x6A8]
	0x01E7683C MOV X20, X1
	0x01E76840 MOV X19, X0
	0x01E76844 TBNZ X8, 0x0, 0x1E7685C
	0x01E76848 ADRP X0, 0x2287000
	0x01E7684C LDR X0, [X0 + 0x6A8]
	0x01E76850 BL 0x1C16CF4
	0x01E76854 MOVZ W8, 0x1
	0x01E76858 STRB W8, [X22 + 0x17A]
	0x01E7685C LDP X1, X2, [X19 + 0x8]
	0x01E76860 LDP X3, X4, [X19 + 0x18]
	0x01E76864 LDR X5, [X21]
	0x01E76868 ADD X8, X31, 0x0
	0x01E7686C MOV X0, X20
	0x01E76870 BL 0x24E8BDC
	0x01E76874 LDR V0, [X19 + 0x28]
	0x01E76878 LDP V1, V2, [X31]
	0x01E7687C FMOV S3, 1
	0x01E76880 LDP X20, X19, [X31 + 0x40]
	0x01E76884 FMIN S3, S0, S3
	0x01E76888 FCMP S0, 0x0
	0x01E7688C FMOV S0, W31
	0x01E76890 FSUB V2.4S, V2.4S, V1.4S
	0x01E76894 FCSEL S0, S3, S0, PL
	0x01E76898 LDP X22, X21, [X31 + 0x30]
	0x01E7689C LDR X30, [X31 + 0x20]
	0x00000000 INVALID
	0x01E768A4 FADD V0.4S, V1.4S, V0.4S
	0x01E768A8 MOV S1, V0.S[1]
	0x01E768AC MOV S2, V0.S[2]
	0x01E768B0 MOV S3, V0.S[3]
	0x01E768B4 ADD X31, X31, 0x50
	0x01E768B8 RET
	0x01E768BC SUB X31, X31, 0x50
	0x01E768C0 STP X30, X21, [X31 + 0x30]
	0x01E768C4 STP X20, X19, [X31 + 0x40]
	0x01E768C8 ADRP X21, 0x2563000
	0x01E768CC LDRB W8, [X21 + 0x17B]
	0x01E768D0 MOV X20, X1
	0x01E768D4 MOV X19, X0
	0x01E768D8 TBNZ X8, 0x0, 0x1E768F0
	0x01E768DC ADRP X0, 0x2287000
	0x01E768E0 LDR X0, [X0 + 0x6B0]
	0x01E768E4 BL 0x1C16CF4
	0x01E768E8 MOVZ W8, 0x1
	0x01E768EC STRB W8, [X21 + 0x17B]
	0x01E768F0 LDR X0, [X19]
	0x01E768F4 CBZ X0, 0x1E7693C
	0x01E768F8 ADRP X8, 0x2287000
	0x01E768FC LDR X8, [X8 + 0x6B0]
	0x01E76900 MOV X1, X20
	0x01E76904 LDR X2, [X8]
	0x01E76908 ADD X8, X31, 0x18
	0x01E7690C BL 0x222681C
	0x01E76910 LDUR V0, [X31 + 0x18]
	0x01E76914 LDR X8, [X31 + 0x28]
	0x01E76918 ADD X1, X31, 0x0
	0x01E7691C MOV X0, X19
	0x01E76920 STR V0, [X31]
	0x01E76924 STR X8, [X31 + 0x10]
	0x01E76928 BL 0x1E76940
	0x01E7692C LDP X20, X19, [X31 + 0x40]
	0x01E76930 LDP X30, X21, [X31 + 0x30]
	0x01E76934 ADD X31, X31, 0x50
	0x01E76938 RET
	0x01E7693C BL 0x1C16F20
	0x01E76940 SUB X31, X31, 0x60
	0x01E76944 STR X30, [X31 + 0x30]
	0x01E76948 STP X22, X21, [X31 + 0x40]
	0x01E7694C STP X20, X19, [X31 + 0x50]
	0x01E76950 ADRP X22, 0x2563000
	0x01E76954 ADRP X21, 0x2287000
	0x01E76958 LDRB W8, [X22 + 0x17C]
	0x01E7695C LDR X21, [X21 + 0x6B8]
	0x01E76960 MOV X20, X1
	0x01E76964 MOV X19, X0
	0x01E76968 TBNZ X8, 0x0, 0x1E76980
	0x01E7696C ADRP X0, 0x2287000
	0x01E76970 LDR X0, [X0 + 0x6B8]
	0x01E76974 BL 0x1C16CF4
	0x01E76978 MOVZ W8, 0x1
	0x01E7697C STRB W8, [X22 + 0x17C]
	0x01E76980 LDP X1, X2, [X19 + 0x8]
	0x01E76984 LDP X3, X4, [X19 + 0x18]
	0x01E76988 LDR X5, [X21]
	0x01E7698C ADD X8, X31, 0x10
	0x01E76990 MOV X0, X20
	0x01E76994 BL 0x24E8350
	0x01E76998 LDP S0, S1, [X31 + 0x10]
	0x01E7699C LDP S2, S3, [X31 + 0x18]
	0x01E769A0 LDP S4, S5, [X31 + 0x20]
	0x01E769A4 LDP S6, S7, [X31 + 0x28]
	0x01E769A8 LDR V16, [X19 + 0x28]
	0x01E769AC MOV X0, X31
	0x01E769B0 STR S16, [X31]
	0x01E769B4 BL 0x3C2A2F8
	0x01E769B8 LDP X20, X19, [X31 + 0x50]
	0x01E769BC LDP X22, X21, [X31 + 0x40]
	0x01E769C0 LDR X30, [X31 + 0x30]
	0x01E769C4 ADD X31, X31, 0x60
	0x01E769C8 RET
	0x01E769CC LDRB W8, [X0 + 0x2C]
	0x01E769D0 AND W0, W8, 0x1
	0x01E769D4 RET
	0x01E769D8 MOV X0, X31
	0x01E769DC RET
	0x01E769E0 STR X30, [X31 - 0x30]!
	0x01E769E4 STP X22, X21, [X31 + 0x10]
	0x01E769E8 STP X20, X19, [X31 + 0x20]
	0x01E769EC ADRP X21, 0x2563000
	0x01E769F0 ADRP X22, 0x2280000
	0x01E769F4 LDRB W8, [X21 + 0x17E]
	0x01E769F8 LDR X22, [X22 + 0x398]
	0x01E769FC MOV X19, X1
	0x01E76A00 MOV X20, X0
	0x01E76A04 TBNZ X8, 0x0, 0x1E76A1C
	0x01E76A08 ADRP X0, 0x2280000
	0x01E76A0C LDR X0, [X0 + 0x398]
	0x01E76A10 BL 0x1C16CF4
	0x01E76A14 MOVZ W8, 0x1
	0x01E76A18 STRB W8, [X21 + 0x17E]
	0x01E76A1C LDR X0, [X22]
	0x01E76A20 LDR W8, [X0 + 0xE0]
	0x01E76A24 CBNZ W8, 0x1E76A2C
	0x01E76A28 BL 0x1C16DFC
	0x01E76A2C LDR W8, [X20]
	0x01E76A30 CMP W8, W19
	0x01E76A34 B.NE 0x1E76A4C
	0x01E76A38 LDR W8, [X20 + 0x4]
	0x01E76A3C UBFM X9, X19, 0x20, 0x3F
	0x01E76A40 CMP W8, W9
	0x01E76A44 CSET W0, EQ
	0x01E76A48 B 0x1E76A50
	0x01E76A4C MOV W0, W31
	0x01E76A50 LDP X20, X19, [X31 + 0x20]
	0x01E76A54 LDP X22, X21, [X31 + 0x10]
	0x01E76A58 LDR X30, [X31], #0x30
	0x01E76A5C RET
	0x01E76A60 STP X30, X21, [X31 - 0x20]!
	0x01E76A64 STP X20, X19, [X31 + 0x10]
	0x01E76A68 ADRP X21, 0x2563000
	0x01E76A6C LDRB W8, [X21 + 0x17F]
	0x01E76A70 MOV X20, X1
	0x01E76A74 MOV X19, X0
	0x01E76A78 TBNZ X8, 0x0, 0x1E76A90
	0x01E76A7C ADRP X0, 0x2287000
	0x01E76A80 LDR X0, [X0 + 0x6C0]
	0x01E76A84 BL 0x1C16CF4
	0x01E76A88 MOVZ W8, 0x1
	0x01E76A8C STRB W8, [X21 + 0x17F]
	0x01E76A90 CBZ X20, 0x1E76B10
	0x01E76A94 ADRP X8, 0x2287000
	0x01E76A98 LDR X8, [X8 + 0x6C0]
	0x01E76A9C LDR X9, [X20]
	0x01E76AA0 LDR X8, [X8]
	0x01E76AA4 CMP X9, X8
	0x01E76AA8 B.NE 0x1E76B10
	0x01E76AAC MOV X0, X20
	0x01E76AB0 BL 0x1C16E08
	0x01E76AB4 ADRP X21, 0x2562000
	0x01E76AB8 LDRB W8, [X21 + 0xA20]
	0x01E76ABC LDR X20, [X0]
	0x01E76AC0 CBNZ W8, 0x1E76AD8
	0x01E76AC4 ADRP X0, 0x2280000
	0x01E76AC8 LDR X0, [X0 + 0x398]
	0x01E76ACC BL 0x1C16CF4
	0x01E76AD0 MOVZ W8, 0x1
	0x01E76AD4 STRB W8, [X21 + 0xA20]
	0x01E76AD8 ADRP X8, 0x2280000
	0x01E76ADC LDR X8, [X8 + 0x398]
	0x01E76AE0 LDR X0, [X8]
	0x01E76AE4 LDR W8, [X0 + 0xE0]
	0x01E76AE8 CBNZ W8, 0x1E76AF0
	0x01E76AEC BL 0x1C16DFC
	0x01E76AF0 LDR W8, [X19]
	0x01E76AF4 CMP W8, W20
	0x01E76AF8 B.NE 0x1E76B10
	0x01E76AFC LDR W8, [X19 + 0x4]
	0x01E76B00 UBFM X9, X20, 0x20, 0x3F
	0x01E76B04 CMP W8, W9
	0x01E76B08 CSET W0, EQ
	0x01E76B0C B 0x1E76B14
	0x01E76B10 MOV W0, W31
	0x01E76B14 LDP X20, X19, [X31 + 0x10]
	0x01E76B18 LDP X30, X21, [X31], #0x20
	0x01E76B1C RET
	0x01E76B20 STP X30, X21, [X31 - 0x20]!
	0x01E76B24 STP X20, X19, [X31 + 0x10]
	0x01E76B28 ADRP X20, 0x2563000
	0x01E76B2C ADRP X21, 0x2280000
	0x01E76B30 LDRB W8, [X20 + 0x180]
	0x01E76B34 LDR X21, [X21 + 0x398]
	0x01E76B38 MOV X19, X0
	0x01E76B3C TBNZ X8, 0x0, 0x1E76B54
	0x01E76B40 ADRP X0, 0x2280000
	0x01E76B44 LDR X0, [X0 + 0x398]
	0x01E76B48 BL 0x1C16CF4
	0x01E76B4C MOVZ W8, 0x1
	0x01E76B50 STRB W8, [X20 + 0x180]
	0x01E76B54 LDR X0, [X21]
	0x01E76B58 LDR W8, [X0 + 0xE0]
	0x01E76B5C CBNZ W8, 0x1E76B64
	0x01E76B60 BL 0x1C16DFC
	0x01E76B64 LDP W8, W9, [X19]
	0x01E76B68 LDP X20, X19, [X31 + 0x10]
	0x01E76B6C MOVZ W10, 0x18D
	0x01E76B70 MUL W8, W8, W10
	0x01E76B74 EOR W0, W8, W9, 0x0
	0x01E76B78 LDP X30, X21, [X31], #0x20
	0x01E76B7C RET
	0x01E76B80 SUB X31, X31, 0x40
	0x01E76B84 STP X30, X23, [X31 + 0x10]
	0x01E76B88 STP X22, X21, [X31 + 0x20]
	0x01E76B8C STP X20, X19, [X31 + 0x30]
	0x01E76B90 ADRP X23, 0x2563000
	0x01E76B94 ADRP X20, 0x2280000
	0x01E76B98 ADRP X22, 0x227D000
	0x01E76B9C ADRP X21, 0x2287000
	0x01E76BA0 LDRB W8, [X23 + 0x181]
	0x01E76BA4 LDR X20, [X20 + 0x398]
	0x01E76BA8 LDR X22, [X22 + 0x758]
	0x01E76BAC LDR X21, [X21 + 0x6C8]
	0x01E76BB0 MOV X19, X0
	0x01E76BB4 TBNZ X8, 0x0, 0x1E76BE4
	0x01E76BB8 ADRP X0, 0x227D000
	0x01E76BBC LDR X0, [X0 + 0x758]
	0x01E76BC0 BL 0x1C16CF4
	0x01E76BC4 ADRP X0, 0x2280000
	0x01E76BC8 LDR X0, [X0 + 0x398]
	0x01E76BCC BL 0x1C16CF4
	0x01E76BD0 ADRP X0, 0x2287000

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+144], X29
	003 Move [X31+152], X30
	004 Move [X31+160], X28
	005 Move [X31+168], X27
	006 Move [X31+176], X26
	007 Move [X31+184], X25
	008 Move [X31+192], X24
	009 Move [X31+200], X23
	010 Move [X31+208], X22
	011 Move [X31+216], X21
	012 Move [X31+224], X20
	013 Move [X31+232], X19
	014 Move X19, 0x2564000
	015 Move W8, [X19+361]
	016 Move X23, X3
	017 Move X27, X2
	018 Move X22, X1
	019 Move X21, X0
	020 Move [X31+44], W4
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {36}
	025 Move X0, 0x2288000
	026 Move X0, [X0+1216]
	027 Call 0x1C17CF4
	028 Move X0, 0x2288000
	029 Move X0, [X0+1560]
	030 Call 0x1C17CF4
	031 Move X0, 0x2285000
	032 Move X0, [X0+1520]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X19+361], W8
	036 Move [X31+128], X31
	037 Move [X31+136], X31
	038 Move [X31+112], X31
	039 Move [X31+120], X31
	040 Move [X31+108], W31
	041 Move [X31+80], X31
	042 Move [X31+88], X31
	043 Compare X22, 0
	044 JumpIfEqual {356}
	045 Move X0, X22
	046 Move X1, X31
	047 Call Object.GetInstanceID, X0
	048 Move W8, [X21+20]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X26, [X22+80]
	051 Move X0, X22
	052 Move X1, X31
	053 Call "il2cpp_vm_object_is_inst", X0
	054 Move X8, 0x2288000
	055 Move X8, [X8+1216]
	056 Move X24, X0
	057 Move X8, [X8]
	058 Move W9, [X8+224]
	059 Compare W9, 0
	060 JumpIfNotEqual {63}
	061 Move X0, X8
	062 Call 0x1C17DFC
	063 Move X0, X24
	064 Call ChangeDetector.GetPropertyMappping, X0
	065 Move W8, [X21+40]
	066 Move W28, [X21+44]
	067 Move X24, X0
	068 Compare W8, 0
	069 JumpIfEqual {96}
	070 Add X1, X31, 128
	071 Add X2, X31, 112
	072 Add X3, X31, 108
	073 Move X0, X22
	074 Move X4, X31
	075 Add X19, X31, 128
	076 Add X20, X31, 112
	077 Call RenderTimeline.GetRenderBuffers, X0, X1, X2, X3
	078 Move W8, [X21+40]
	079 Add X9, X20, 12
	080 NotImplemented "Instruction CMP not yet implemented."
	081 NotImplemented "Instruction CSEL not yet implemented."
	082 Move X26, [X8]
	083 Add X8, X19, 12
	084 NotImplemented "Instruction CSEL not yet implemented."
	085 Compare X26, 0
	086 JumpIfEqual {90}
	087 Move W9, [X8]
	088 Move W8, [X21+44]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X1, X31
	091 Move X0, X31
	092 Move [X23], X31
	093 Move [X23+8], X31
	094 Move [X27], X31
	095 Move [X27+8], X31
	096 Move X8, [X22+64]
	097 Compare X8, 0
	098 JumpIfEqual {356}
	099 Move X8, [X8+48]
	100 Compare X8, 0
	101 JumpIfEqual {356}
	102 Move X8, [X8+80]
	103 Compare X8, 0
	104 JumpIfEqual {106}
	105 Move W9, [X8+72]
	106 Move W9, W31
	107 Move X8, [X21+24]
	108 Move [X21+44], W9
	109 Compare X8, 0
	110 JumpIfEqual {128}
	111 Move X10, X21
	112 Move W9, [X8+24]
	113 Add X10, X10, 32
	114 Move X0, [X10]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move [X31+16], X10
	117 Add X10, X8, 32
	118 NotImplemented "Instruction CSEL not yet implemented."
	119 Compare X0, 0
	120 JumpIfNotEqual {137}
	121 Move W0, [X8+24]
	122 Move X8, 0x2288000
	123 Move X8, [X8+1560]
	124 Move X1, [X8]
	125 Call Native.MallocAndClearArray, X0
	126 Move X8, [X21+24]
	127 Move [X21+32], X0
	128 Move X9, X21
	129 Add X9, X9, 32
	130 Move X0, [X9]
	131 Move [X31+16], X9
	132 Compare X0, 0
	133 JumpIfEqual {356}
	134 Move X25, X31
	135 Compare X8, 0
	136 JumpIfEqual {356}
	137 Move W8, [X8+24]
	138 Move X1, X25
	139 Move X3, X31
	140 Move W2, W8
	141 ShiftRight W2, 30
	142 And W2, W2, 0x1FFFFFFF
	143 Call Native.MemCpy, X0, X1, X2
	144 Compare X24, 0
	145 JumpIfEqual {356}
	146 Move W8, [X24+24]
	147 Move [X31+12], W28
	148 Move [X31+24], X23
	149 Move [X31+32], X27
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move W28, W31
	152 Move W27, W31
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move X8, W28
	155 Add X9, X24, X8
	156 Move X0, [X9+32]
	157 Move X8, [X9+40]
	158 Move V0, [X9+3]
	159 Move [X31+5], V0
	160 Compare X8, 0
	161 JumpIfEqual {356}
	162 Move W29, [X8+16]
	163 Move W19, [X8+20]
	164 Move X29, W29
	165 Add W9, W19, W29
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Add X9, X25, X29
	168 Add X10, X26, X29
	169 Move W11, W19
	170 Move W12, [X9]
	171 Move W13, [X10]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Add X9, X9, 4
	174 Subtract W11, W11, 1
	175 Add X10, X10, 4
	176 Move X9, [X21+56]
	177 Move V0, [X31+5]
	178 Move [X31+4], V0
	179 Compare X9, 0
	180 JumpIfEqual {356}
	181 Move V0, [X31+4]
	182 Move [X31+3], V0
	183 Move W10, [X9+24]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move X23, W27
	186 Add X9, X9, X23
	187 Move [X9+32], X0
	188 Move [X9+40], X8
	189 Move V0, [X31+3]
	190 Move [X9+3], V0
	191 Compare X0, 0
	192 JumpIfEqual {356}
	193 Move X8, [X0]
	194 Move X20, [X21+48]
	195 Move X9, [X8+424]
	196 Move X1, [X8+432]
	197 NotImplemented "Instruction BLR not yet implemented."
	198 Compare X20, 0
	199 JumpIfEqual {356}
	200 Move W8, [X20+24]
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Add X8, X20, X23
	203 Move [X8+32], X0
	204 Move W8, [X31+44]
	205 Add W27, W27, 1
	206 Move TEMP, X8
	207 And TEMP, TEMP, 1
	208 Compare TEMP, 1
	209 JumpIfNotEqual {217}
	210 Add X0, X25, X29
	211 Add X1, X26, X29
	212 Move W2, W19
	213 ShiftRight W2, 30
	214 And W2, W2, 0x1FFFFFFF
	215 Move X3, X31
	216 Call Native.MemCpy, X0, X1, X2
	217 Move W8, [X24+24]
	218 Add W28, W28, 1
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Move W27, W31
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move X8, [X21+24]
	223 Compare X8, 0
	224 JumpIfEqual {356}
	225 Move X9, [X31+16]
	226 Move X11, [X8+24]
	227 Move X10, [X31+32]
	228 Move W8, [X31+12]
	229 Move X9, [X9]
	230 Move [X10+8], W11
	231 Move [X10+12], W8
	232 Move [X10], X9
	233 Move X8, [X31+32]
	234 Move [X8], X31
	235 Move [X8+8], X31
	236 Move W8, [X21+64]
	237 Compare W8, 0
	238 JumpIfEqual {331}
	239 Move X8, [X21+56]
	240 Compare X8, 0
	241 JumpIfEqual {331}
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move X19, 0x227E000
	244 Move X24, 0x2286000
	245 Move X19, [X19+2000]
	246 Move X24, [X24+2224]
	247 Move X28, X31
	248 Move X29, X31
	249 Move W25, W27
	250 Move W9, [X8+24]
	251 NotImplemented "Instruction CMP not yet implemented."
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Add X9, X8, X28
	254 Move X23, [X9+48]
	255 Move X8, [X9+56]
	256 Compare X8, 0
	257 JumpIfEqual {266}
	258 Move X9, [X31+32]
	259 Move X0, [X8+64]
	260 Move X4, [X8+40]
	261 Move X2, [X9]
	262 Move X3, [X9+8]
	263 Move X9, [X8+24]
	264 Move X1, X22
	265 NotImplemented "Instruction BLR not yet implemented."
	266 Compare X23, 0
	267 JumpIfEqual {273}
	268 Move X0, [X23+64]
	269 Move X8, [X23+24]
	270 Move X2, [X23+40]
	271 Move X1, X22
	272 NotImplemented "Instruction BLR not yet implemented."
	273 Add X29, X29, 1
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Move X8, [X21+56]
	276 Add X28, X28, 32
	277 Compare X8, 0
	278 JumpIfNotEqual {250}
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move X20, X0
	281 Move X0, X20
	282 Call 0x3EB2AD0
	283 Move X20, X0
	284 Move X0, X19
	285 Call 0x1C17D08
	286 Move X8, [X20]
	287 Move X1, [X8]
	288 Call 0x1C18270
	289 Move TEMP, X0
	290 And TEMP, TEMP, 1
	291 Compare TEMP, 1
	292 JumpIfNotEqual {358}
	293 Move X20, [X20]
	294 Call 0x3EB2AE0
	295 Move X0, X24
	296 Call 0x1C17D08
	297 Move W8, [X0+224]
	298 Compare W8, 0
	299 JumpIfNotEqual {301}
	300 Call 0x1C17DFC
	301 Move X0, X20
	302 Move X1, X31
	303 Call Log.Exception, X0
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Move X20, X0
	306 Move X0, X20
	307 Call 0x3EB2AD0
	308 Move X20, X0
	309 Move X0, X19
	310 Call 0x1C17D08
	311 Move X8, [X20]
	312 Move X1, [X8]
	313 Call 0x1C18270
	314 Move TEMP, X0
	315 And TEMP, TEMP, 1
	316 Compare TEMP, 1
	317 JumpIfNotEqual {366}
	318 Move X20, [X20]
	319 Call 0x3EB2AE0
	320 Move X0, X24
	321 Call 0x1C17D08
	322 Move W8, [X0+224]
	323 Compare W8, 0
	324 JumpIfNotEqual {326}
	325 Call 0x1C17DFC
	326 Move X0, X20
	327 Move X1, X31
	328 Call Log.Exception, X0
	329 Compare X23, 0
	330 JumpIfNotEqual {268}
	331 Move X8, [X21+24]
	332 Compare X8, 0
	333 JumpIfEqual {356}
	334 Move X8, [X8+24]
	335 Move W9, [X21+44]
	336 Move X10, [X31+24]
	337 Move W1, W27
	338 Move [X10], X26
	339 Move [X10+8], W8
	340 Move [X10+12], W9
	341 Move X0, [X21+48]
	342 Move X20, [X31+224]
	343 Move X19, [X31+232]
	344 Move X22, [X31+208]
	345 Move X21, [X31+216]
	346 Move X24, [X31+192]
	347 Move X23, [X31+200]
	348 Move X26, [X31+176]
	349 Move X25, [X31+184]
	350 Move X28, [X31+160]
	351 Move X27, [X31+168]
	352 Move X29, [X31+144]
	353 Move X30, [X31+152]
	354 Add X31, X31, 240
	355 Return X0
	356 Call 0x1C17F20
	357 Call 0x1C17F28
	358 Move W0, 8
	359 Call 0x3EB2AF0
	360 Move X8, [X20]
	361 Move [X0], X8
	362 Move X1, 0x203F000
	363 Add X1, X1, 3672
	364 Move X2, X31
	365 Call 0x3EB2B00
	366 Move W0, 8
	367 Call 0x3EB2AF0
	368 Move X8, [X20]
	369 Move [X0], X8
	370 Move X1, 0x203F000
	371 Add X1, X1, 3672
	372 Move X2, X31
	373 Call 0x3EB2B00
	374 Move X20, X0
	375 Call 0x3EB2AE0
	376 Move X20, X0
	377 Call 0x3EB2AE0
	378 Move X0, X20
	379 Call 0x1D2D690
	380 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x01E757FC LDR W9, [X8 + 0x18]
	0x01E75800 LDR X0, [X10 + 0x20]!

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x01E76BE0 STRB W8, [X23 + 0x181]
	0x01E76BE4 LDR W8, [X19]
	0x01E76BE8 LDR X0, [X20]
	0x01E76BEC ADD X1, X31, 0x8
	0x01E76BF0 STR W8, [X31 + 0x8]
	0x01E76BF4 BL 0x1C16E04
	0x01E76BF8 MOV X20, X0
	0x01E76BFC LDR W8, [X19 + 0x4]
	0x01E76C00 LDR X0, [X22]
	0x01E76C04 ADD X1, X31, 0x4
	0x01E76C08 STR W8, [X31 + 0x4]
	0x01E76C0C BL 0x1C16E04
	0x01E76C10 LDR X8, [X21]
	0x01E76C14 MOV X2, X0
	0x01E76C18 MOV X1, X20
	0x01E76C1C MOV X3, X31
	0x01E76C20 MOV X0, X8
	0x01E76C24 BL 0x3227BD4
	0x01E76C28 LDP X20, X19, [X31 + 0x30]
	0x01E76C2C LDP X22, X21, [X31 + 0x20]
	0x01E76C30 LDP X30, X23, [X31 + 0x10]
	0x01E76C34 ADD X31, X31, 0x40
	0x01E76C38 RET
	0x01E76C3C STP X30, X21, [X31 - 0x20]!
	0x01E76C40 STP X20, X19, [X31 + 0x10]
	0x01E76C44 ADRP X21, 0x2562000
	0x01E76C48 LDRB W8, [X21 + 0xA20]
	0x01E76C4C MOV X19, X1
	0x01E76C50 MOV X20, X0
	0x01E76C54 CBNZ W8, 0x1E76C6C
	0x01E76C58 ADRP X0, 0x2280000
	0x01E76C5C LDR X0, [X0 + 0x398]
	0x01E76C60 BL 0x1C16CF4
	0x01E76C64 MOVZ W8, 0x1
	0x01E76C68 STRB W8, [X21 + 0xA20]
	0x01E76C6C ADRP X8, 0x2280000
	0x01E76C70 LDR X8, [X8 + 0x398]
	0x01E76C74 LDR X0, [X8]
	0x01E76C78 LDR W8, [X0 + 0xE0]
	0x01E76C7C CBNZ W8, 0x1E76C84
	0x01E76C80 BL 0x1C16DFC
	0x01E76C84 UBFM X8, X19, 0x20, 0x3F
	0x01E76C88 UBFM X9, X20, 0x20, 0x3F
	0x01E76C8C CMP W20, W19
	0x01E76C90 LDP X20, X19, [X31 + 0x10]
	0x01E76C94 CSET W10, EQ
	0x01E76C98 CMP W9, W8
	0x01E76C9C CSET W8, EQ
	0x01E76CA0 AND W0, W10, W8, 0x0
	0x01E76CA4 LDP X30, X21, [X31], #0x20
	0x01E76CA8 RET
	0x01E76CAC STP X30, X21, [X31 - 0x20]!
	0x01E76CB0 STP X20, X19, [X31 + 0x10]
	0x01E76CB4 ADRP X21, 0x2562000
	0x01E76CB8 LDRB W8, [X21 + 0xA20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x2564000
	009 Move X24, 0x2288000
	010 Move X19, 0x2288000
	011 Move X20, 0x2288000
	012 Move X22, 0x2288000
	013 Move X21, 0x2288000
	014 Move W8, [X23+362]
	015 Move X24, [X24+1488]
	016 Move X19, [X19+1472]
	017 Move X20, [X20+1216]
	018 Move X22, [X22+1568]
	019 Move X21, [X21+1576]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0x2288000
	025 Move X0, [X0+1216]
	026 Call 0x1C17CF4
	027 Move X0, 0x2288000
	028 Move X0, [X0+1472]
	029 Call 0x1C17CF4
	030 Move X0, 0x2288000
	031 Move X0, [X0+1576]
	032 Call 0x1C17CF4
	033 Move X0, 0x2288000
	034 Move X0, [X0+1488]
	035 Call 0x1C17CF4
	036 Move X0, 0x2288000
	037 Move X0, [X0+1568]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X23+362], W8
	041 Move X0, [X24]
	042 Call 0x1C17F10
	043 Move X1, [X19]
	044 Move X19, X0
	045 Call Dictionary`2<Object, Object>..ctor, X0
	046 Move X8, [X20]
	047 Move X8, [X8+184]
	048 Move [X8], X19
	049 Move X0, [X22]
	050 Call 0x1C17F10
	051 Move X1, [X21]
	052 Move X19, X0
	053 Call Dictionary`2<Object, Boolean>..ctor, X0
	054 Move X8, [X20]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X24, [X31+16]
	058 Move X23, [X31+24]
	059 Move X8, [X8+184]
	060 Move [X8+8], X19
	061 Move X20, [X31+48]
	062 Move X19, [X31+56]
	063 Move X30, [X31+64]
	064 Return 

