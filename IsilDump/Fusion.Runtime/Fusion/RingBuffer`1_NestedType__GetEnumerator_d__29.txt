Type: Fusion.RingBuffer`1/<GetEnumerator>d__29

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x02399A58 ADD X9, X31, 0x0
	0x02399A5C ADD X10, X19, 0xF
	0x02399A60 AND X10, X10, 0x1FFFFFFFF
	0x02399A64 SUB X20, X9, X10
	0x02399A68 ADD X31, X20, 0x0
	0x02399A6C SUB X9, X29, 0x28
	0x02399A70 SUB X10, X29, 0x20
	0x02399A74 STP X31, X9, [X29 - 0x40]
	0x02399A78 STUR X10, [X29 - 0x30]
	0x02399A7C LDR X8, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x02399A80 LDR X1, [X8 + 0x80]
	0x02399A84 MOV X0, X21
	0x02399A88 BL 0x1C16D18
	0x02399A8C LDUR X8, [X29 - 0x28]
	0x02399A90 LDR W21, [X0]
	0x02399A94 LDUR X0, [X29 - 0x20]
	0x02399A98 LDR X8, [X8 + 0x20]

ISIL:
	001 Move W8, [X0+16]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Add W31, W8, 3
	004 Call 0x2399E34, X0
	005 Return 
	006 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x02399A9C LDR X8, [X8 + 0xC0]
	0x02399AA0 LDR X8, [X8]
	0x02399AA4 LDR X8, [X8 + 0x80]
	0x02399AA8 ADD X1, X8, 0x40
	0x02399AAC BL 0x1C16D18
	0x02399AB0 CBZ W21, 0x2399B48
	0x02399AB4 CMP W21, 0x1
	0x02399AB8 B.NE 0x2399CB8
	0x02399ABC LDP X8, X22, [X29 - 0x28]
	0x02399AC0 LDR X8, [X8 + 0x20]
	0x02399AC4 LDR X8, [X8 + 0xC0]
	0x02399AC8 LDR X8, [X8]
	0x02399ACC LDR X21, [X8 + 0x80]
	0x02399AD0 MOVZ W1, 0x4
	0x02399AD4 MOV X0, X21
	0x02399AD8 BL 0x1C16D14
	0x02399ADC MOV X0, X22
	0x02399AE0 MOV X1, X21
	0x02399AE4 BL 0x1C16D18
	0x02399AE8 MOVN W8, 0x2
	0x02399AEC STR W8, [X0]
	0x02399AF0 LDP X8, X0, [X29 - 0x28]
	0x02399AF4 LDR X8, [X8 + 0x20]
	0x02399AF8 LDR X8, [X8 + 0xC0]
	0x02399AFC LDR X8, [X8]
	0x02399B00 LDR X8, [X8 + 0x80]
	0x02399B04 ADD X1, X8, 0xA0
	0x02399B08 BL 0x1C16D18
	0x02399B0C LDP X8, X22, [X29 - 0x28]
	0x02399B10 LDR W23, [X0]
	0x02399B14 LDR X8, [X8 + 0x20]
	0x02399B18 LDR X8, [X8 + 0xC0]
	0x02399B1C LDR X8, [X8]
	0x02399B20 LDR X8, [X8 + 0x80]
	0x02399B24 ADD X21, X8, 0xA0
	0x02399B28 MOVZ W1, 0x4
	0x02399B2C MOV X0, X21
	0x02399B30 BL 0x1C16D14
	0x02399B34 MOV X0, X22
	0x02399B38 MOV X1, X21
	0x02399B3C BL 0x1C16D18
	0x02399B40 ADD W8, W23, 0x1
	0x02399B44 B 0x2399E5C
	0x02399B48 LDP X8, X23, [X29 - 0x28]
	0x02399B4C LDR X21, [X0]
	0x02399B50 LDR X8, [X8 + 0x20]
	0x02399B54 LDR X8, [X8 + 0xC0]
	0x02399B58 LDR X8, [X8]
	0x02399B5C LDR X22, [X8 + 0x80]
	0x02399B60 MOVZ W1, 0x4
	0x02399B64 MOV X0, X22
	0x02399B68 BL 0x1C16D14
	0x02399B6C MOV X0, X23
	0x02399B70 MOV X1, X22
	0x02399B74 BL 0x1C16D18
	0x02399B78 MOVN W8, 0x0
	0x02399B7C STR W8, [X0]
	0x02399B80 CBZ X21, 0x2399C90
	0x02399B84 LDUR X8, [X29 - 0x28]
	0x02399B88 LDR X8, [X8 + 0x20]
	0x02399B8C LDR X8, [X8 + 0xC0]
	0x02399B90 LDR X1, [X8 + 0x18]
	0x02399B94 LDR X8, [X1]
	0x02399B98 MOV X0, X21
	0x02399B9C BLR X8
	0x02399BA0 MOV X21, X0
	0x02399BA4 CBZ X0, 0x2399C94
	0x02399BA8 LDUR X8, [X29 - 0x28]
	0x02399BAC LDR X8, [X8 + 0x20]
	0x02399BB0 LDR X8, [X8 + 0xC0]
	0x02399BB4 LDR X1, [X8 + 0x28]
	0x02399BB8 LDRB W8, [X1 + 0x135]
	0x02399BBC TBNZ X8, 0x0, 0x2399BCC
	0x02399BC0 MOV X0, X1
	0x02399BC4 BL 0x1C5C684
	0x02399BC8 MOV X1, X0
	0x02399BCC LDR X8, [X21]
	0x02399BD0 LDRH W9, [X8 + 0x12E]
	0x02399BD4 CBZ X9, 0x2399BF8
	0x02399BD8 LDR X10, [X8 + 0xB0]
	0x02399BDC ADD X10, X10, 0x8
	0x02399BE0 LDUR X11, [X10 - 0x8]
	0x02399BE4 CMP X11, X1
	0x02399BE8 B.EQ 0x2399C08
	0x02399BEC SUBS X9, X9, 0x1
	0x02399BF0 ADD X10, X10, 0x10
	0x02399BF4 B.NE 0x2399BE0
	0x02399BF8 MOV X0, X21
	0x02399BFC MOV W2, W31
	0x02399C00 BL 0x1C5C788
	0x02399C04 B 0x2399C14
	0x02399C08 LDRSW X9, [X10]
	0x02399C0C ADD X8, X8, X9, 0x4, LSL
	0x02399C10 ADD X0, X8, 0x138
	0x02399C14 LDP X8, X1, [X0]
	0x02399C18 MOV X0, X21
	0x02399C1C BLR X8
	0x02399C20 LDP X8, X23, [X29 - 0x28]
	0x02399C24 MOV X21, X0
	0x02399C28 LDR X8, [X8 + 0x20]
	0x02399C2C LDR X8, [X8 + 0xC0]
	0x02399C30 LDR X8, [X8]
	0x02399C34 LDR X8, [X8 + 0x80]
	0x02399C38 ADD X22, X8, 0x60
	0x02399C3C MOVZ W1, 0x8
	0x02399C40 MOV X0, X22
	0x02399C44 BL 0x1C16D14
	0x02399C48 MOV X0, X23
	0x02399C4C MOV X1, X22
	0x02399C50 BL 0x1C16D18
	0x02399C54 STR X21, [X0]
	0x02399C58 LDP X8, X22, [X29 - 0x28]
	0x02399C5C LDR X8, [X8 + 0x20]
	0x02399C60 LDR X8, [X8 + 0xC0]
	0x02399C64 LDR X8, [X8]
	0x02399C68 LDR X21, [X8 + 0x80]
	0x02399C6C MOVZ W1, 0x4
	0x02399C70 MOV X0, X21
	0x02399C74 BL 0x1C16D14
	0x02399C78 MOV X0, X22
	0x02399C7C MOV X1, X21
	0x02399C80 BL 0x1C16D18
	0x02399C84 MOVN W8, 0x2
	0x02399C88 STR W8, [X0]
	0x02399C8C B 0x2399CC0
	0x02399C90 BL 0x1C16F20
	0x02399C94 BL 0x1C16F20
	0x02399C98 B 0x239A128
	0x02399C9C B 0x239A128
	0x02399CA0 B 0x239A128
	0x02399CA4 B 0x239A128
	0x02399CA8 B 0x239A128
	0x02399CAC B 0x239A128
	0x02399CB0 B 0x239A128
	0x02399CB4 B 0x239A128
	0x02399CB8 MOV W0, W31
	0x02399CBC B 0x239A0BC
	0x02399CC0 LDP X8, X0, [X29 - 0x28]
	0x02399CC4 LDR X8, [X8 + 0x20]
	0x02399CC8 LDR X8, [X8 + 0xC0]
	0x02399CCC LDR X8, [X8]
	0x02399CD0 LDR X8, [X8 + 0x80]
	0x02399CD4 ADD X1, X8, 0x60
	0x02399CD8 BL 0x1C16D18
	0x02399CDC LDR X21, [X0]
	0x02399CE0 CBZ X21, 0x239A0E8
	0x02399CE4 ADRP X10, 0x1D5A000
	0x02399CE8 LDR X8, [X21]
	0x02399CEC LDR X10, [X10 + 0xE18]
	0x02399CF0 LDRH W9, [X8 + 0x12E]
	0x02399CF4 LDR X1, [X10]
	0x02399CF8 CBZ X9, 0x2399D1C
	0x02399CFC LDR X10, [X8 + 0xB0]
	0x02399D00 ADD X10, X10, 0x8
	0x02399D04 LDUR X11, [X10 - 0x8]
	0x02399D08 CMP X11, X1
	0x02399D0C B.EQ 0x2399D2C
	0x02399D10 SUBS X9, X9, 0x1
	0x02399D14 ADD X10, X10, 0x10
	0x02399D18 B.NE 0x2399D04
	0x02399D1C MOV X0, X21
	0x02399D20 MOV W2, W31
	0x02399D24 BL 0x1C5C788
	0x02399D28 B 0x2399D38
	0x02399D2C LDRSW X9, [X10]
	0x02399D30 ADD X8, X8, X9, 0x4, LSL
	0x02399D34 ADD X0, X8, 0x138
	0x02399D38 LDP X8, X1, [X0]
	0x02399D3C MOV X0, X21
	0x02399D40 BLR X8
	0x02399D44 TBZ X0, 0x0, 0x2399F10
	0x02399D48 LDP X8, X0, [X29 - 0x28]
	0x02399D4C LDR X8, [X8 + 0x20]
	0x02399D50 LDR X8, [X8 + 0xC0]
	0x02399D54 LDR X8, [X8]
	0x02399D58 LDR X8, [X8 + 0x80]
	0x02399D5C ADD X1, X8, 0x60
	0x02399D60 BL 0x1C16D18
	0x02399D64 LDR X21, [X0]
	0x02399D68 CBZ X21, 0x239A0EC
	0x02399D6C LDUR X8, [X29 - 0x28]
	0x02399D70 LDR X8, [X8 + 0x20]
	0x02399D74 LDR X8, [X8 + 0xC0]
	0x02399D78 LDR X1, [X8 + 0x38]
	0x02399D7C LDRB W8, [X1 + 0x135]
	0x02399D80 TBNZ X8, 0x0, 0x2399D90
	0x02399D84 MOV X0, X1
	0x02399D88 BL 0x1C5C684
	0x02399D8C MOV X1, X0
	0x02399D90 LDR X8, [X21]
	0x02399D94 LDRH W9, [X8 + 0x12E]
	0x02399D98 CBZ X9, 0x2399DBC
	0x02399D9C LDR X10, [X8 + 0xB0]
	0x02399DA0 ADD X10, X10, 0x8
	0x02399DA4 LDUR X11, [X10 - 0x8]
	0x02399DA8 CMP X11, X1
	0x02399DAC B.EQ 0x2399DCC
	0x02399DB0 SUBS X9, X9, 0x1
	0x02399DB4 ADD X10, X10, 0x10
	0x02399DB8 B.NE 0x2399DA4
	0x02399DBC MOV X0, X21
	0x02399DC0 MOV W2, W31
	0x02399DC4 BL 0x1C5C788
	0x02399DC8 B 0x2399DD8
	0x02399DCC LDRSW X9, [X10]
	0x02399DD0 ADD X8, X8, X9, 0x4, LSL
	0x02399DD4 ADD X0, X8, 0x138
	0x02399DD8 LDR X1, [X0 + 0x8]
	0x02399DDC LDP X0, X8, [X1 + 0x8]
	0x02399DE0 SUB X4, X29, 0x18
	0x02399DE4 MOV X2, X21
	0x02399DE8 MOV X3, X31
	0x02399DEC BLR X8
	0x02399DF0 LDP X8, X22, [X29 - 0x28]
	0x02399DF4 LDP X25, X23, [X29 - 0x18]
	0x02399DF8 LDR X8, [X8 + 0x20]
	0x02399DFC LDR X8, [X8 + 0xC0]
	0x02399E00 LDR X8, [X8]
	0x02399E04 LDR X8, [X8 + 0x80]
	0x02399E08 ADD X21, X8, 0x80
	0x02399E0C MOVZ W1, 0x10
	0x02399E10 MOV X0, X21
	0x02399E14 BL 0x1C16D14
	0x02399E18 MOV X0, X22
	0x02399E1C MOV X1, X21
	0x02399E20 BL 0x1C16D18
	0x02399E24 STP X25, X23, [X0]
	0x02399E28 LDP X8, X22, [X29 - 0x28]
	0x02399E2C LDR X8, [X8 + 0x20]
	0x02399E30 LDR X8, [X8 + 0xC0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0x2041000
	007 Move W8, [X21+2396]
	008 Move X20, X1
	009 Move X19, X0
	010 Move [X31+32], X1
	011 Move [X31+40], X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x1D5B000
	017 Move X0, [X0+3608]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2396], W8
	021 Add X8, X31, 40
	022 Add X9, X31, 32
	023 Move [X31+16], X8
	024 Move [X31+24], X9
	025 Move W8, [X19+16]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Compare W8, 0
	028 JumpIfNotEqual {91}
	029 Move X0, [X19+32]
	030 Move TEMP, 0
	031 Not TEMP
	032 Move W8, TEMP
	033 Move [X19+16], W8
	034 Compare X0, 0
	035 JumpIfEqual {89}
	036 Move X8, [X20+32]
	037 Move X8, [X8+192]
	038 Move X1, [X8+24]
	039 Call 0x25D167C, X0
	040 Move X19, X0
	041 Compare X0, 0
	042 JumpIfEqual {90}
	043 Move X8, [X31+32]
	044 Move X8, [X8+32]
	045 Move X8, [X8+192]
	046 Move X1, [X8+40]
	047 Move W8, [X1+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {55}
	052 Move X0, X1
	053 Call 0x1C5D684
	054 Move X1, X0
	055 Move X8, [X19]
	056 NotImplemented "Instruction LDRH not yet implemented."
	057 Compare X9, 0
	058 JumpIfEqual {65}
	059 Move X10, [X8+176]
	060 Add X10, X10, 8
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Subtract X9, X9, 1
	064 Add X10, X10, 16
	065 Move X0, X19
	066 Move W2, W31
	067 Call 0x1C5D788
	068 Move W8, [X19+64]
	069 Move TEMP, 2
	070 Not TEMP
	071 Move W9, TEMP
	072 Move [X19+16], W9
	073 Add W21, W8, 1
	074 Move [X19+64], W21
	075 NotImplemented "Instruction LDRSW not yet implemented."
	076 Add X8, X8, X9
	077 Add X0, X8, 312
	078 Move X8, [X0]
	079 Move X1, [X0+8]
	080 Move X0, X19
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move X8, [X31+40]
	083 Move TEMP, 2
	084 Not TEMP
	085 Move W9, TEMP
	086 Move X19, X0
	087 Move [X8+40], X0
	088 Move [X8+16], W9
	089 Call 0x1C17F20
	090 Call 0x1C17F20
	091 Move W0, W31
	092 Move X19, [X0+40]
	093 Compare X19, 0
	094 JumpIfEqual {223}
	095 Move X8, [X31+32]
	096 Move X8, [X8+32]
	097 Move X8, [X8+192]
	098 Move X1, [X8+56]
	099 Move W8, [X1+309]
	100 Move TEMP, X8
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {107}
	104 Move X0, X1
	105 Call 0x1C5D684
	106 Move X1, X0
	107 Move X8, [X19]
	108 NotImplemented "Instruction LDRH not yet implemented."
	109 Compare X9, 0
	110 JumpIfEqual {117}
	111 Move X10, [X8+176]
	112 Add X10, X10, 8
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Subtract X9, X9, 1
	116 Add X10, X10, 16
	117 Move X0, X19
	118 Move W2, W31
	119 Call 0x1C5D788
	120 NotImplemented "Instruction LDRSW not yet implemented."
	121 Add X8, X8, X9
	122 Add X0, X8, 312
	123 Move X8, [X0]
	124 Move X1, [X0+8]
	125 Move X0, X19
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Move X20, [X31+32]
	128 Move X19, [X31+40]
	129 Move W21, W31
	130 Move [X19+48], X0
	131 Move [X19+56], X1
	132 Move [X19+64], W31
	133 Move X8, [X20+32]
	134 Move X8, [X8+192]
	135 Move X0, [X8+88]
	136 Move W8, [X0+309]
	137 Move TEMP, X8
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfEqual {142}
	141 Call 0x1C5D684
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Move W9, [X19+60]
	147 Move X8, [X31+40]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Add X19, X8, 48
	150 Move [X19], X31
	151 Move [X19+8], X31
	152 Move X19, [X8+40]
	153 Compare X19, 0
	154 JumpIfEqual {222}
	155 Move X10, 0x1D5B000
	156 Move X8, [X19]
	157 Move X10, [X10+3608]
	158 NotImplemented "Instruction LDRH not yet implemented."
	159 Move X1, [X10]
	160 Compare X9, 0
	161 JumpIfEqual {168}
	162 Move X10, [X8+176]
	163 Add X10, X10, 8
	164 NotImplemented "Instruction LDUR not yet implemented."
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Subtract X9, X9, 1
	167 Add X10, X10, 16
	168 Move X0, X19
	169 Move W2, W31
	170 Call 0x1C5D788
	171 NotImplemented "Instruction LDRSW not yet implemented."
	172 Add X8, X8, X9
	173 Add X0, X8, 312
	174 Move X8, [X0]
	175 Move X1, [X0+8]
	176 Move X0, X19
	177 NotImplemented "Instruction BLR not yet implemented."
	178 Move W8, W0
	179 Move X0, [X31+40]
	180 Move TEMP, X8
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfEqual {92}
	184 Call 0x2399E34, X0
	185 Move X8, [X31+40]
	186 Move W0, W31
	187 Move [X8+40], X31
	188 Move X8, [X31+32]
	189 Move X8, [X8+32]
	190 Move X8, [X8+192]
	191 Move X0, [X8+88]
	192 Move W8, [X0+309]
	193 Move TEMP, X8
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfEqual {198}
	197 Call 0x1C5D684
	198 Move W8, [X0+224]
	199 Compare W8, 0
	200 JumpIfNotEqual {202}
	201 Call 0x1C17DFC
	202 Move X8, [X19]
	203 Compare X8, 0
	204 JumpIfEqual {224}
	205 Move X9, [X31+40]
	206 Move W12, [X8+24]
	207 Move W10, [X9+64]
	208 Move W11, [X9+56]
	209 Add W10, W11, W10
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Add X8, X8, W10
	212 Move V0, [X8+32]
	213 Move W0, 1
	214 Move [X9+16], W0
	215 Move [X9+24], D0
	216 Move X20, [X31+64]
	217 Move X19, [X31+72]
	218 Move X30, [X31+48]
	219 Move X21, [X31+56]
	220 Add X31, X31, 80
	221 Return X0
	222 Call 0x1C17F20
	223 Call 0x1C17F20
	224 Call 0x1C17F20
	225 Call 0x1C17F28
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Call 0x3EB2AD0
	228 Move X19, [X0]
	229 Move [X31+8], X19
	230 Call 0x3EB2AE0
	231 Compare X19, 0
	232 JumpIfEqual {91}
	233 Add X8, X31, 8
	234 Add X0, X8, 8
	235 Call 0x199EE80
	236 Move X0, X19
	237 Call 0x1C17F18
	238 Compare X19, 0
	239 JumpIfNotEqual {241}
	240 Call 0x1D2D690
	241 Move X0, [X31+40]
	242 Move W8, [X0+16]
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Add W31, W8, 3
	245 Call 0x2399E34, X0
	246 Move X0, X19
	247 Call 0x1C17F18
	248 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x02399E34 LDR X8, [X8]
	0x02399E38 LDR X8, [X8 + 0x80]
	0x02399E3C ADD X21, X8, 0xA0
	0x02399E40 MOVZ W1, 0x4
	0x02399E44 MOV X0, X21
	0x02399E48 BL 0x1C16D14
	0x02399E4C MOV X0, X22
	0x02399E50 MOV X1, X21
	0x02399E54 BL 0x1C16D18
	0x02399E58 MOV W8, W31
	0x02399E5C STR W8, [X0]
	0x02399E60 LDP X8, X0, [X29 - 0x28]
	0x02399E64 LDR X8, [X8 + 0x20]
	0x02399E68 LDR X8, [X8 + 0xC0]
	0x02399E6C LDR X8, [X8]
	0x02399E70 LDR X8, [X8 + 0x80]
	0x02399E74 ADD X1, X8, 0xA0
	0x02399E78 BL 0x1C16D18
	0x02399E7C LDUR X9, [X29 - 0x28]
	0x02399E80 MOV X8, X0
	0x02399E84 LDR W21, [X8]
	0x02399E88 LDR X9, [X9 + 0x20]
	0x02399E8C LDR X9, [X9 + 0xC0]
	0x02399E90 LDR X0, [X9 + 0x58]
	0x02399E94 LDRB W9, [X0 + 0x135]
	0x02399E98 TBNZ X9, 0x0, 0x2399EA0
	0x02399E9C BL 0x1C5C684
	0x02399EA0 LDR W8, [X0 + 0xE0]
	0x02399EA4 CBNZ W8, 0x2399EAC
	0x02399EA8 BL 0x1C16DFC
	0x02399EAC LDP X8, X0, [X29 - 0x28]
	0x02399EB0 LDR X8, [X8 + 0x20]
	0x02399EB4 LDR X8, [X8 + 0xC0]
	0x02399EB8 LDR X9, [X8 + 0x78]
	0x02399EBC LDR X8, [X8]
	0x02399EC0 LDR X22, [X9]
	0x02399EC4 LDR X8, [X8 + 0x80]
	0x02399EC8 ADD X1, X8, 0x80
	0x02399ECC BL 0x1C16D18
	0x02399ED0 LDUR X8, [X29 - 0x28]
	0x02399ED4 LDR X8, [X8 + 0x20]
	0x02399ED8 LDR X8, [X8 + 0xC0]
	0x02399EDC LDR X1, [X8 + 0x78]
	0x02399EE0 BLR X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x2041000
	005 Move W8, [X19+2397]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1D5B000
	012 Move X0, [X0+3584]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X19+2397], W8
	016 Move X19, [X20+40]
	017 Move TEMP, 0
	018 Not TEMP
	019 Move W8, TEMP
	020 Move [X20+16], W8
	021 Compare X19, 0
	022 JumpIfEqual {39}
	023 Move X10, 0x1D5B000
	024 Move X8, [X19]
	025 Move X10, [X10+3584]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move X0, X19
	037 Move W2, W31
	038 Call 0x1C5D788
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return 
	043 NotImplemented "Instruction LDRSW not yet implemented."
	044 Add X8, X8, X9
	045 Add X0, X8, 312
	046 Move X2, [X0]
	047 Move X1, [X0+8]
	048 Move X0, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 CallNoReturn X2

Method: T System.Collections.Generic.IEnumerator<T>.get_Current()

Disassembly:
	0x02399EE4 CMP W21, W0
	0x02399EE8 B.LT 0x2399F68

ISIL:
	001 Move V0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x02399EEC LDP X8, X0, [X29 - 0x28]
	0x02399EF0 LDR X8, [X8 + 0x20]
	0x02399EF4 LDR X8, [X8 + 0xC0]
	0x02399EF8 LDR X8, [X8]
	0x02399EFC LDR X8, [X8 + 0x80]
	0x02399F00 ADD X1, X8, 0x80
	0x02399F04 BL 0x1C16D18
	0x02399F08 STP X31, X31, [X0]
	0x02399F0C B 0x2399CC0
	0x02399F10 LDP X8, X0, [X29 - 0x28]
	0x02399F14 LDR X8, [X8 + 0x20]
	0x02399F18 LDR X8, [X8 + 0xC0]
	0x02399F1C LDR X1, [X8 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1D5B000
	005 Move X0, [X0+2880]
	006 Move X19, X1
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X1, X31
	010 Move X20, X0
	011 Call NotSupportedException..ctor, X0
	012 Move X0, X20
	013 Move X1, X19
	014 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x02399F20 LDR X8, [X1]
	0x02399F24 BLR X8
	0x02399F28 LDP X8, X20, [X29 - 0x28]
	0x02399F2C LDR X8, [X8 + 0x20]
	0x02399F30 LDR X8, [X8 + 0xC0]
	0x02399F34 LDR X8, [X8]
	0x02399F38 LDR X8, [X8 + 0x80]
	0x02399F3C ADD X19, X8, 0x60
	0x02399F40 MOVZ W1, 0x8
	0x02399F44 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move V0, [X0+24]
	003 Move [X31+8], D0
	004 Move X8, [X1+32]
	005 Add X1, X31, 8
	006 Move X8, [X8+192]
	007 Move X0, [X8+112]
	008 Call 0x1C17E04
	009 Move X30, [X31+16]
	010 Return X0

