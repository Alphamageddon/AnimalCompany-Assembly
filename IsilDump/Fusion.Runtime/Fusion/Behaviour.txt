Type: Fusion.Behaviour

Method: T AddBehaviour()

Disassembly:
	0x021A0DFC LDR X8, [X19 + 0x38]
	0x021A0E00 LDR X0, [X8 + 0x8]
	0x021A0E04 LDRB W8, [X0 + 0x135]
	0x021A0E08 TBNZ X8, 0x0, 0x21A0E10
	0x021A0E0C BL 0x1C5C684
	0x021A0E10 LDR X8, [X0 + 0xB8]
	0x021A0E14 LDR X0, [X8]
	0x021A0E18 LDP X30, X19, [X31], #0x10
	0x021A0E1C RET
	0x021A0E20 STP X30, X19, [X31 - 0x10]!
	0x021A0E24 LDR X8, [X0 + 0x38]
	0x021A0E28 MOV X19, X0
	0x021A0E2C CBNZ X8, 0x21A0E3C
	0x021A0E30 MOV X0, X19
	0x021A0E34 BL 0x1C5C6E0
	0x021A0E38 LDR X8, [X19 + 0x38]
	0x021A0E3C LDR X0, [X8 + 0x8]
	0x021A0E40 LDRB W8, [X0 + 0x135]
	0x021A0E44 TBNZ X8, 0x0, 0x21A0E4C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X19, X1
	006 Move X20, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {11}
	009 Move X0, X19
	010 Call 0x1C5D6E0
	011 Compare X20, 0
	012 JumpIfEqual {25}
	013 Move X0, X20
	014 Move X1, X31
	015 Call Component.get_gameObject, X0
	016 Compare X0, 0
	017 JumpIfEqual {25}
	018 Move X8, [X19+56]
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X1, [X8]
	022 Move X30, [X31+32]
	023 Call 0x21E61FC, X0
	024 Return X0
	025 Call 0x1C17F20

Method: System.Boolean TryGetBehaviour(out T behaviour)

Disassembly:
	0x021A0E94 LDR X8, [X19 + 0x38]
	0x021A0E98 LDR X0, [X8 + 0x8]
	0x021A0E9C LDRB W8, [X0 + 0x135]
	0x021A0EA0 TBNZ X8, 0x0, 0x21A0EA8
	0x021A0EA4 BL 0x1C5C684
	0x021A0EA8 LDR W8, [X0 + 0xE0]
	0x021A0EAC CBNZ W8, 0x21A0EB4
	0x021A0EB0 BL 0x1C16DFC
	0x021A0EB4 LDR X8, [X19 + 0x38]
	0x021A0EB8 LDR X0, [X8 + 0x8]
	0x021A0EBC LDRB W8, [X0 + 0x135]
	0x021A0EC0 TBNZ X8, 0x0, 0x21A0EC8
	0x021A0EC4 BL 0x1C5C684
	0x021A0EC8 LDR X8, [X0 + 0xB8]
	0x021A0ECC LDR X0, [X8]
	0x021A0ED0 LDP X30, X19, [X31], #0x10
	0x021A0ED4 RET
	0x021A0ED8 STP X30, X19, [X31 - 0x10]!
	0x021A0EDC LDR X8, [X0 + 0x38]
	0x021A0EE0 MOV X19, X0
	0x021A0EE4 CBNZ X8, 0x21A0EF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X20, X2
	007 Move X19, X1
	008 Move X21, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X20
	012 Call 0x1C5D6E0
	013 Compare X21, 0
	014 JumpIfEqual {29}
	015 Move X0, X21
	016 Move X1, X31
	017 Call Component.get_gameObject, X0
	018 Compare X0, 0
	019 JumpIfEqual {29}
	020 Move X8, [X20+56]
	021 Move X1, X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X2, [X8+8]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Call 0x21E7600, X0, X1
	028 Return X0
	029 Call 0x1C17F20

Method: T GetBehaviour()

Disassembly:
	0x021A0E48 BL 0x1C5C684
	0x021A0E4C LDR W8, [X0 + 0xE0]
	0x021A0E50 CBNZ W8, 0x21A0E58
	0x021A0E54 BL 0x1C16DFC
	0x021A0E58 LDR X8, [X19 + 0x38]
	0x021A0E5C LDR X0, [X8 + 0x8]
	0x021A0E60 LDRB W8, [X0 + 0x135]
	0x021A0E64 TBNZ X8, 0x0, 0x21A0E6C
	0x021A0E68 BL 0x1C5C684
	0x021A0E6C LDR X8, [X0 + 0xB8]
	0x021A0E70 LDR X0, [X8]
	0x021A0E74 LDP X30, X19, [X31], #0x10
	0x021A0E78 RET
	0x021A0E7C STP X30, X19, [X31 - 0x10]!
	0x021A0E80 LDR X8, [X0 + 0x38]
	0x021A0E84 MOV X19, X0
	0x021A0E88 CBNZ X8, 0x21A0E98
	0x021A0E8C MOV X0, X19
	0x021A0E90 BL 0x1C5C6E0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X19, X1
	006 Move X20, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {11}
	009 Move X0, X19
	010 Call 0x1C5D6E0
	011 Compare X20, 0
	012 JumpIfEqual {25}
	013 Move X0, X20
	014 Move X1, X31
	015 Call Component.get_gameObject, X0
	016 Compare X0, 0
	017 JumpIfEqual {25}
	018 Move X8, [X19+56]
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X1, [X8]
	022 Move X30, [X31+32]
	023 Call 0x21E6548, X0
	024 Return X0
	025 Call 0x1C17F20

Method: System.Void DestroyBehaviour(Fusion.Behaviour behaviour)

Disassembly:
	0x01E87AA0 LDP X30, X21, [X31], #0x20
	0x01E87AA4 B 0x21EB454
	0x01E87AA8 SUB X31, X31, 0x50
	0x01E87AAC STR X30, [X31 + 0x20]
	0x01E87AB0 STP X22, X21, [X31 + 0x30]
	0x01E87AB4 STP X20, X19, [X31 + 0x40]
	0x01E87AB8 MRS X21, 0xC000
	0x01E87ABC LDR X8, [X21 + 0x28]
	0x01E87AC0 ADRP X22, 0x2552000
	0x01E87AC4 MOV X20, X1
	0x01E87AC8 MOV X19, X0
	0x01E87ACC STR X8, [X31 + 0x18]
	0x01E87AD0 LDRB W8, [X22 + 0x219]
	0x01E87AD4 TBNZ X8, 0x0, 0x1E87AEC
	0x01E87AD8 ADRP X0, 0x2276000
	0x01E87ADC LDR X0, [X0 + 0xF18]
	0x01E87AE0 BL 0x1C16CF4
	0x01E87AE4 MOVZ W8, 0x1
	0x01E87AE8 STRB W8, [X22 + 0x219]
	0x01E87AEC CBZ X20, 0x1E87B38
	0x01E87AF0 ADRP X8, 0x2276000
	0x01E87AF4 LDR X8, [X8 + 0xF18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2553000
	006 Move X21, 0x226D000
	007 Move W8, [X20+522]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x226D000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+522], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Object.Destroy, X0
	031 Return 

Method: System.Void Fusion.ILogDumpable.Dump(System.Text.StringBuilder builder)

Disassembly:
	0x01E87AF8 LDR X9, [X20]
	0x01E87AFC LDR X8, [X8]
	0x01E87B00 CMP X9, X8

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+392]
	003 Move X2, [X8+400]
	004 CallNoReturn X3

Method: System.Void GetDumpString(System.Text.StringBuilder builder)

Disassembly:
	0x01E87B04 B.NE 0x1E87B38
	0x01E87B08 MOV X0, X20
	0x01E87B0C BL 0x1C16E08
	0x01E87B10 LDP X8, X9, [X0]
	0x01E87B14 STP X8, X9, [X31 + 0x8]
	0x01E87B18 LDR X9, [X19]
	0x01E87B1C CMP X9, X8
	0x01E87B20 B.NE 0x1E87B38
	0x01E87B24 LDR X8, [X19 + 0x8]
	0x01E87B28 LDR X9, [X31 + 0x10]
	0x01E87B2C CMP X8, X9
	0x01E87B30 CSET W0, EQ
	0x01E87B34 B 0x1E87B3C
	0x01E87B38 MOV W0, W31
	0x01E87B3C LDR X8, [X21 + 0x28]
	0x01E87B40 LDR X9, [X31 + 0x18]
	0x01E87B44 CMP X8, X9
	0x01E87B48 B.NE 0x1E87B60
	0x01E87B4C LDP X20, X19, [X31 + 0x40]
	0x01E87B50 LDP X22, X21, [X31 + 0x30]
	0x01E87B54 LDR X30, [X31 + 0x20]
	0x01E87B58 ADD X31, X31, 0x50
	0x01E87B5C RET
	0x01E87B60 BL 0x3EB1B20
	0x01E87B64 SUB X31, X31, 0x30
	0x01E87B68 STR X30, [X31 + 0x20]
	0x01E87B6C MRS X8, 0xC000
	0x01E87B70 LDR X9, [X8 + 0x28]
	0x01E87B74 STR X9, [X31 + 0x18]
	0x01E87B78 STP X1, X2, [X31 + 0x8]
	0x01E87B7C LDR X9, [X0]
	0x01E87B80 CMP X9, X1
	0x01E87B84 B.NE 0x1E87B9C
	0x01E87B88 LDR X9, [X0 + 0x8]
	0x01E87B8C LDR X10, [X31 + 0x10]
	0x01E87B90 CMP X9, X10
	0x01E87B94 CSET W0, EQ

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2553000
	006 Move W8, [X21+523]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x226D000
	014 Move X0, [X0+3784]
	015 Call 0x1C17CF4
	016 Move X0, 0x226D000
	017 Move X0, [X0+2120]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+523], W8
	021 Compare X19, 0
	022 JumpIfEqual {46}
	023 Move X8, 0x226D000
	024 Move X8, [X8+3784]
	025 Move X21, 0x226D000
	026 Move X0, X19
	027 Move X2, X31
	028 Move X1, [X8]
	029 Move X21, [X21+2120]
	030 Call StringBuilder.Append, X0, X1
	031 Move X0, X20
	032 Call Behaviour.get_DebugNameThreadSafe, X0
	033 Move X1, X0
	034 Move X0, X19
	035 Move X2, X31
	036 Call StringBuilder.Append, X0, X1
	037 Move X1, [X21]
	038 Move X0, X19
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X2, X31
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Call StringBuilder.Append, X0, X1
	045 Return 
	046 Call 0x1C17F20

Method: System.String get_DebugNameThreadSafe()

Disassembly:
	0x01E87B98 B 0x1E87BA0
	0x01E87B9C MOV W0, W31
	0x01E87BA0 LDR X8, [X8 + 0x28]
	0x01E87BA4 LDR X9, [X31 + 0x18]
	0x01E87BA8 CMP X8, X9
	0x01E87BAC B.NE 0x1E87BBC
	0x01E87BB0 LDR X30, [X31 + 0x20]
	0x01E87BB4 ADD X31, X31, 0x30
	0x01E87BB8 RET
	0x01E87BBC BL 0x3EB1B20
	0x01E87BC0 MOVN W1, 0x0
	0x01E87BC4 RET
	0x01E87BC8 MOVN W8, 0x0
	0x01E87BCC STR X1, [X0]
	0x01E87BD0 STR W8, [X0 + 0x8]
	0x01E87BD4 RET
	0x01E87BD8 SUB X31, X31, 0x30
	0x01E87BDC STP X30, X21, [X31 + 0x10]
	0x01E87BE0 STP X20, X19, [X31 + 0x20]
	0x01E87BE4 ADRP X21, 0x2552000
	0x01E87BE8 ADRP X20, 0x2276000
	0x01E87BEC LDRB W8, [X21 + 0x21A]
	0x01E87BF0 LDR X20, [X20 + 0xF20]
	0x01E87BF4 MOV X19, X0
	0x01E87BF8 TBNZ X8, 0x0, 0x1E87C10
	0x01E87BFC ADRP X0, 0x2276000
	0x01E87C00 LDR X0, [X0 + 0xF20]
	0x01E87C04 BL 0x1C16CF4
	0x01E87C08 MOVZ W8, 0x1
	0x01E87C0C STRB W8, [X21 + 0x21A]
	0x01E87C10 LDR X0, [X20]
	0x01E87C14 MOVN W8, 0x0
	0x01E87C18 ADD X1, X31, 0x0
	0x01E87C1C STP X19, X8, [X31]
	0x01E87C20 BL 0x1C16E04
	0x01E87C24 LDP X20, X19, [X31 + 0x20]
	0x01E87C28 LDP X30, X21, [X31 + 0x10]
	0x01E87C2C ADD X31, X31, 0x30
	0x01E87C30 RET
	0x01E87C34 SUB X31, X31, 0x30
	0x01E87C38 STP X30, X21, [X31 + 0x10]
	0x01E87C3C STP X20, X19, [X31 + 0x20]
	0x01E87C40 ADRP X21, 0x2552000
	0x01E87C44 ADRP X20, 0x2276000
	0x01E87C48 LDRB W8, [X21 + 0x21B]
	0x01E87C4C LDR X20, [X20 + 0xF20]
	0x01E87C50 MOV X19, X0
	0x01E87C54 TBNZ X8, 0x0, 0x1E87C6C
	0x01E87C58 ADRP X0, 0x2276000
	0x01E87C5C LDR X0, [X0 + 0xF20]
	0x01E87C60 BL 0x1C16CF4
	0x01E87C64 MOVZ W8, 0x1
	0x01E87C68 STRB W8, [X21 + 0x21B]
	0x01E87C6C LDR X0, [X20]
	0x01E87C70 MOVN W8, 0x0
	0x01E87C74 ADD X1, X31, 0x0
	0x01E87C78 STP X19, X8, [X31]
	0x01E87C7C BL 0x1C16E04
	0x01E87C80 LDP X20, X19, [X31 + 0x20]
	0x01E87C84 LDP X30, X21, [X31 + 0x10]
	0x01E87C88 ADD X31, X31, 0x30
	0x01E87C8C RET
	0x01E87C90 SUB X31, X31, 0x40
	0x01E87C94 STR X30, [X31 + 0x30]
	0x01E87C98 MRS X8, 0xC000
	0x01E87C9C LDR X9, [X8 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2553000
	006 Move X21, 0x226D000
	007 Move W8, [X20+524]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x226D000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x2277000
	018 Move X0, [X0+3744]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+524], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X19
	028 Move X1, X31
	029 Call Object.op_Implicit, X0
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {37}
	034 Move X0, X19
	035 Move X1, X31
	036 Call Object.get_name, X0
	037 Move X8, 0x2277000
	038 Move X8, [X8+3744]
	039 Move X0, [X8]
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return X0
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X19, X0
	047 Move X0, X19
	048 Call 0x3EB2AD0
	049 Move X19, X0
	050 Move X0, 0x2273000
	051 Move X0, [X0+3264]
	052 Call 0x1C17D08
	053 Move X8, [X19]
	054 Move X1, [X8]
	055 Call 0x1C18270
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {69}
	060 Call 0x3EB2AE0
	061 Move X0, 0x2277000
	062 Move X0, [X0+3752]
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X30, [X31+32]
	066 Move X21, [X31+40]
	067 Call 0x1C17D08
	068 Return X0
	069 Move W0, 8
	070 Call 0x3EB2AF0
	071 Move X8, [X19]
	072 Move [X0], X8
	073 Move X1, 0x202E000
	074 Add X1, X1, 3672
	075 Move X2, X31
	076 Call 0x3EB2B00
	077 Move X19, X0
	078 Call 0x3EB2AE0
	079 Move X0, X19
	080 Call 0x1D2D690
	081 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x01E83058 LDP X24, X23, [X31 + 0x70]
	0x01E8305C LDP X26, X25, [X31 + 0x60]

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

