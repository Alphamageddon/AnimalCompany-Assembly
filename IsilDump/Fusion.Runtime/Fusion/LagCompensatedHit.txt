Type: Fusion.LagCompensatedHit

Method: Fusion.LagCompensatedHit op_Explicit(UnityEngine.RaycastHit raycastHit)

Disassembly:
	0x01E853C8 LDR W8, [X23 + 0x18]
	0x01E853CC CMP W24, W8
	0x01E853D0 B.LT 0x1E85310
	0x01E853D4 LDP X20, X19, [X31 + 0x40]
	0x01E853D8 LDP X22, X21, [X31 + 0x30]
	0x01E853DC LDP X24, X23, [X31 + 0x20]
	0x01E853E0 LDP X30, X25, [X31 + 0x10]
	0x01E853E4 ADD X31, X31, 0x50
	0x01E853E8 RET
	0x01E853EC BL 0x1C16F20
	0x01E853F0 BL 0x1C16F28
	0x01E853F4 STP X30, X23, [X31 - 0x30]!
	0x01E853F8 STP X22, X21, [X31 + 0x10]
	0x01E853FC STP X20, X19, [X31 + 0x20]
	0x01E85400 ADRP X21, 0x2554000
	0x01E85404 LDRB W8, [X21 + 0x203]
	0x01E85408 MOV X19, X1
	0x01E8540C MOV X20, X0
	0x01E85410 TBNZ X8, 0x0, 0x1E85428
	0x01E85414 ADRP X0, 0x2278000
	0x01E85418 LDR X0, [X0 + 0xE78]
	0x01E8541C BL 0x1C16CF4
	0x01E85420 MOVZ W8, 0x1
	0x01E85424 STRB W8, [X21 + 0x203]
	0x01E85428 LDR X21, [X20 + 0xA8]
	0x01E8542C CBZ X21, 0x1E854DC
	0x01E85430 LDR X8, [X21 + 0x18]
	0x01E85434 CMP W8, 0x1
	0x01E85438 B.LT 0x1E854DC
	0x01E8543C ADRP X23, 0x2278000
	0x01E85440 LDR X23, [X23 + 0xE78]
	0x01E85444 MOV W22, W31
	0x01E85448 CMP W22, W8
	0x01E8544C B.CS 0x1E854F0
	0x01E85450 ADD X9, X21, W22, 0x3, SXTW
	0x01E85454 LDR X9, [X9 + 0x20]
	0x01E85458 CBZ X9, 0x1E854EC
	0x01E8545C LDR W20, [X9 + 0x54]
	0x01E85460 CMP W20, 0x1
	0x01E85464 B.LT 0x1E854D0
	0x01E85468 CBZ X19, 0x1E854EC
	0x01E8546C LDR X8, [X19]
	0x01E85470 LDR X1, [X23]
	0x01E85474 LDRH W9, [X8 + 0x12E]
	0x01E85478 CBZ X9, 0x1E8549C
	0x01E8547C LDR X10, [X8 + 0xB0]
	0x01E85480 ADD X10, X10, 0x8
	0x01E85484 LDUR X11, [X10 - 0x8]
	0x01E85488 CMP X11, X1
	0x01E8548C B.EQ 0x1E854AC
	0x01E85490 SUBS X9, X9, 0x1
	0x01E85494 ADD X10, X10, 0x10
	0x01E85498 B.NE 0x1E85484
	0x01E8549C MOVZ W2, 0x3
	0x01E854A0 MOV X0, X19
	0x01E854A4 BL 0x1C5C788
	0x01E854A8 B 0x1E854BC
	0x01E854AC LDR W9, [X10]
	0x01E854B0 ADD W9, W9, 0x3
	0x01E854B4 ADD X8, X8, W9, 0x4, SXTW
	0x01E854B8 ADD X0, X8, 0x138
	0x01E854BC LDP X8, X2, [X0]
	0x01E854C0 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], D14
	003 Move [X31+64], D13
	004 Move [X31+72], D12
	005 Move [X31+80], D11
	006 Move [X31+88], D10
	007 Move [X31+96], D9
	008 Move [X31+104], D8
	009 Move [X31+112], X30
	010 Move [X31+120], X21
	011 Move [X31+128], X20
	012 Move [X31+136], X19
	013 Move X1, X31
	014 Move X20, X0
	015 Move X19, X8
	016 Move [X31], X31
	017 Move [X31+8], X31
	018 Call RaycastHit.get_normal, X0
	019 Move X0, X20
	020 Move X1, X31
	021 Move V9, V0
	022 Move V10, V1
	023 Move V11, V2
	024 Call RaycastHit.get_distance, X0
	025 Move X0, X20
	026 Move X1, X31
	027 Move V8, V0
	028 Call RaycastHit.get_point, X0
	029 Move X0, X20
	030 Move X1, X31
	031 Move V12, V0
	032 Move V13, V1
	033 Move V14, V2
	034 Move [X31+24], X31
	035 Move [X31+32], X31
	036 Move [X31+40], W31
	037 Move [X31+16], X31
	038 Call RaycastHit.get_collider, X0
	039 Compare X0, 0
	040 JumpIfEqual {81}
	041 Move X1, X31
	042 Call Component.get_gameObject, X0
	043 Move X21, X0
	044 Move X0, X20
	045 Move X1, X31
	046 Call RaycastHit.get_collider, X0
	047 Move X8, -20541440
	048 Move W9, [X31+40]
	049 Move X10, [X31+32]
	050 Move V1, [X31]
	051 Move V0, [X31+16]
	052 Move V2, [X8+2200]
	053 Move [X19+8], X21
	054 Move [X19+16], S9
	055 Move [X19+24], S10
	056 Move [X19+24], S11
	057 Move [X19+32], S12
	058 Move [X19+32], S13
	059 Move [X19+40], S14
	060 Move [X19+72], X31
	061 Move [X19+80], X0
	062 Move [X19+68], S8
	063 Move [X19+40], X10
	064 Move [X19+48], W9
	065 Move [X19+52], V0
	066 Move [X19], D2
	067 Move [X19+88], V1
	068 Move X20, [X31+128]
	069 Move X19, [X31+136]
	070 Move X30, [X31+112]
	071 Move X21, [X31+120]
	072 Move D9, [X31+96]
	073 Move D8, [X31+104]
	074 Move D11, [X31+80]
	075 Move D10, [X31+88]
	076 Move D13, [X31+64]
	077 Move D12, [X31+72]
	078 Move V14, [X31+48]
	079 Add X31, X31, 144
	080 Return X0
	081 Call 0x1C17F20

Method: Fusion.LagCompensatedHit op_Explicit(UnityEngine.RaycastHit2D raycastHit2D)

Disassembly:
	0x01E854C4 MOV W1, W20
	0x01E854C8 BLR X8
	0x01E854CC LDR X8, [X21 + 0x18]
	0x01E854D0 ADD W22, W22, 0x1
	0x01E854D4 CMP W22, W8
	0x01E854D8 B.LT 0x1E85448
	0x01E854DC LDP X20, X19, [X31 + 0x20]
	0x01E854E0 LDP X22, X21, [X31 + 0x10]
	0x01E854E4 LDP X30, X23, [X31], #0x30
	0x01E854E8 RET
	0x01E854EC BL 0x1C16F20
	0x01E854F0 BL 0x1C16F28
	0x01E854F4 STR X30, [X31 - 0x20]!
	0x01E854F8 STP X20, X19, [X31 + 0x10]
	0x01E854FC MOV X1, X31
	0x01E85500 MOV X20, X0
	0x01E85504 MOV X19, X8
	0x01E85508 BL 0x3C32E90
	0x01E8550C CBZ X0, 0x1E855A0
	0x01E85510 LDP S1, S2, [X20 + 0x8C]
	0x01E85514 LDR V0, [X20 + 0x88]
	0x01E85518 MOV X1, X31
	0x01E8551C BL 0x3C3DE4C
	0x01E85520 LDR V3, [X20 + 0x84]
	0x01E85524 MOVI D4, 0x0
	0x01E85528 MOV V0.S[1], V1.S[0]
	0x01E8552C FMOV S5, W31
	0x01E85530 UNIMPLEMENTED
	0x01E85534 FSUB S16, S2, S3
	0x01E85538 FADD S2, S2, S3
	0x01E8553C FSUB V3.2S, V0.2S, V1.2S
	0x01E85540 MOVI V6.2S, 0x3F, 0x18
	0x01E85544 FMOV S7, 0.5
	0x01E85548 FSUB S5, S5, S16
	0x01E8554C FADD V0.2S, V0.2S, V1.2S
	0x01E85550 FSUB V1.2S, V4.2S, V3.2S
	0x01E85554 FMUL S4, S5, S7
	0x00000000 INVALID
	0x01E8555C FADD S5, S16, S4
	0x01E85560 FADD V3.2S, V3.2S, V1.2S
	0x01E85564 FSUB S4, S5, S4
	0x01E85568 FSUB V1.2S, V3.2S, V1.2S
	0x01E8556C FSUB S2, S2, S4
	0x01E85570 FSUB V0.2S, V0.2S, V1.2S
	0x01E85574 FMUL S2, S2, S7
	0x00000000 INVALID
	0x01E8557C FADD S3, S4, S2
	0x01E85580 FADD V1.2S, V1.2S, V0.2S
	0x01E85584 STR S3, [X19 + 0x8]
	0x01E85588 STUR D0, [X19 + 0xC]
	0x01E8558C STR D1, [X19]
	0x01E85590 STR S2, [X19 + 0x14]
	0x01E85594 LDP X20, X19, [X31 + 0x10]
	0x01E85598 LDR X30, [X31], #0x20
	0x01E8559C RET
	0x01E855A0 BL 0x1C16F20
	0x01E855A4 ADRP X8, 0xFFFFFFFFFEC65000
	0x01E855A8 LDR V0, [X8 + 0xA9]
	0x01E855AC MOVZ W8, 0x3

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], D12
	003 Move [X31+48], D11
	004 Move [X31+56], D10
	005 Move [X31+64], D9
	006 Move [X31+72], D8
	007 Move [X31+80], X30
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X1, X31
	012 Move X20, X0
	013 Move X19, X8
	014 Call RaycastHit2D.get_normal, X0
	015 Move X0, X20
	016 Move X1, X31
	017 Move V9, V0
	018 Move V10, V1
	019 Call RaycastHit2D.get_distance, X0
	020 Move X0, X20
	021 Move X1, X31
	022 Move V8, V0
	023 Call RaycastHit2D.get_point, X0
	024 Move X0, X20
	025 Move X1, X31
	026 Move V11, V0
	027 Move V12, V1
	028 Move [X31+8], X31
	029 Move [X31+16], X31
	030 Move [X31+24], W31
	031 Move [X31], X31
	032 Call RaycastHit2D.get_collider, X0
	033 Compare X0, 0
	034 JumpIfEqual {73}
	035 Move X1, X31
	036 Call Component.get_gameObject, X0
	037 Move X21, X0
	038 Move X0, X20
	039 Move X1, X31
	040 Call RaycastHit2D.get_collider, X0
	041 Move X8, -20541440
	042 Move W9, [X31+24]
	043 Move V0, [X8+3784]
	044 Move X8, [X31+16]
	045 Move V1, [X31]
	046 Move [X19+8], X21
	047 Move [X19+16], S9
	048 Move [X19+24], S10
	049 Move [X19+24], W31
	050 Move [X19+28], S11
	051 Move [X19+36], S12
	052 Move [X19+36], W31
	053 Move [X19+68], S8
	054 Move [X19+72], X31
	055 Move [X19+80], X31
	056 Move [X19+40], X8
	057 Move [X19+48], W9
	058 Move [X19+52], V1
	059 Move [X19], D0
	060 Move [X19+88], X0
	061 Move [X19+96], X31
	062 Move X20, [X31+96]
	063 Move X19, [X31+104]
	064 Move X30, [X31+80]
	065 Move X21, [X31+88]
	066 Move D9, [X31+64]
	067 Move D8, [X31+72]
	068 Move D11, [X31+48]
	069 Move D10, [X31+56]
	070 Move V12, [X31+32]
	071 Add X31, X31, 112
	072 Return X0
	073 Call 0x1C17F20

Method: Fusion.LagCompensatedHit FromHitboxHit(ref Fusion.LagCompensation.HitboxHit hitboxHit)

Disassembly:
	0x01E845C4 STP X20, X19, [X31 + 0x50]
	0x01E845C8 SUB X31, X31, 0x1A0
	0x01E845CC ADRP X22, 0x2555000
	0x01E845D0 LDRB W8, [X22 + 0x1FA]
	0x01E845D4 MOV W19, W2
	0x01E845D8 MOV W21, W1
	0x01E845DC MOV X20, X0
	0x01E845E0 TBNZ X8, 0x0, 0x1E84604
	0x01E845E4 ADRP X0, 0x2279000
	0x01E845E8 LDR X0, [X0 + 0xDA8]
	0x01E845EC BL 0x1C16CF4
	0x01E845F0 ADRP X0, 0x2279000
	0x01E845F4 LDR X0, [X0 + 0xE50]
	0x01E845F8 BL 0x1C16CF4
	0x01E845FC MOVZ W8, 0x1
	0x01E84600 STRB W8, [X22 + 0x1FA]
	0x01E84604 CMP W21, W19
	0x01E84608 B.GE 0x1E847C0
	0x01E8460C CBZ X20, 0x1E847E0
	0x01E84610 ADRP X26, 0x2279000
	0x01E84614 LDR X26, [X26 + 0xDA8]
	0x01E84618 ADD X8, X31, 0x138
	0x01E8461C MOV X0, X20
	0x01E84620 MOV W1, W19
	0x01E84624 LDR X2, [X26]
	0x01E84628 BL 0x2FECABC
	0x01E8462C ADRP X25, 0x2279000
	0x01E84630 LDR V8, [X31 + 0x198]
	0x01E84634 LDR X25, [X25 + 0xE50]
	0x01E84638 MOV W22, W21
	0x01E8463C MOV W23, W21
	0x01E84640 LDR X2, [X26]
	0x01E84644 ADD X8, X31, 0x138
	0x01E84648 MOV X0, X20
	0x01E8464C MOV W1, W23
	0x01E84650 BL 0x2FECABC
	0x01E84654 LDR V0, [X31 + 0x198]
	0x01E84658 FCMP S0, S8
	0x01E8465C B.PL 0x1E846FC
	0x01E84660 LDR X2, [X26]
	0x01E84664 ADD X8, X31, 0x138
	0x01E84668 MOV X0, X20
	0x01E8466C MOV W1, W22
	0x01E84670 BL 0x2FECABC
	0x01E84674 ADD X0, X31, 0xD0
	0x01E84678 ADD X1, X31, 0x138
	0x01E8467C MOVZ W2, 0x68
	0x01E84680 BL 0x3EB1AC0
	0x01E84684 LDR X2, [X26]
	0x01E84688 ADD X8, X31, 0x138
	0x01E8468C MOV X0, X20
	0x01E84690 MOV W1, W23
	0x01E84694 BL 0x2FECABC
	0x01E84698 ADD X0, X31, 0x68

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+80], D8
	003 Move [X31+88], X30
	004 Move [X31+96], X20
	005 Move [X31+104], X19
	006 Move [X31], X31
	007 Move [X31+8], X31
	008 Move W9, [X0+20]
	009 NotImplemented "Instruction LDUR not yet implemented."
	010 Move X20, X0
	011 Move [X31+72], W9
	012 Move [X31+64], X10
	013 Move W9, [X0+8]
	014 Move X10, [X0]
	015 Move V8, [X0+24]
	016 Move [X31+56], W9
	017 Move [X31+48], X10
	018 Move W9, [X0+48]
	019 Move X10, [X0+40]
	020 Move [X31+40], W9
	021 Move [X31+32], X10
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 Move [X31+1], V0
	024 Move X0, [X0+32]
	025 Compare X0, 0
	026 JumpIfEqual {60}
	027 Move X1, X31
	028 Move X19, X8
	029 Call Component.get_gameObject, X0
	030 Move X9, -20537344
	031 Move X10, [X31+64]
	032 Move V0, [X9+3776]
	033 Move W9, [X31+72]
	034 Move X8, [X20+32]
	035 Move [X19+8], X0
	036 Move [X19+16], X10
	037 Move X10, [X31+48]
	038 Move [X19+24], W9
	039 Move W9, [X31+56]
	040 Move V1, [X31+1]
	041 Move [X19+28], X10
	042 Move X10, [X31+32]
	043 Move [X19+36], W9
	044 Move W9, [X31+40]
	045 Move [X19+52], V1
	046 Move V1, [X31]
	047 Move [X19+68], S8
	048 Move [X19+40], X10
	049 Move [X19+48], W9
	050 Move [X19+72], X8
	051 Move [X19+80], X31
	052 Move [X19], D0
	053 Move [X19+88], V1
	054 Move X20, [X31+96]
	055 Move X19, [X31+104]
	056 Move X30, [X31+88]
	057 Move V8, [X31+80]
	058 Add X31, X31, 112
	059 Return X0
	060 Call 0x1C17F20

Method: System.Void QuickSort(System.Collections.Generic.List`1<Fusion.LagCompensatedHit> hits, System.Int32 low, System.Int32 high)

Disassembly:
	0x01E855B0 MOV X1, X31
	0x01E855B4 STR W8, [X0 + 0x80]
	0x01E855B8 STUR V0, [X0 + 0x94]
	0x01E855BC B 0x1E74F04
	0x01E855C0 SUB X31, X31, 0x20
	0x01E855C4 STP X30, X19, [X31 + 0x10]
	0x01E855C8 CBZ X1, 0x1E85624
	0x01E855CC MOV X0, X1
	0x01E855D0 MOV X1, X31
	0x01E855D4 MOV X19, X2
	0x01E855D8 BL 0x3C32E90
	0x01E855DC CBZ X0, 0x1E85624
	0x01E855E0 MOV X1, X31
	0x01E855E4 BL 0x3C3F58C
	0x01E855E8 STP S0, S1, [X31]
	0x01E855EC STR S2, [X31 + 0x8]
	0x01E855F0 CBZ X19, 0x1E85624
	0x01E855F4 MOV X0, X19
	0x01E855F8 MOV X1, X31
	0x01E855FC BL 0x3C32E90
	0x01E85600 CBZ X0, 0x1E85624
	0x01E85604 MOV X1, X31
	0x01E85608 BL 0x3C3F58C
	0x01E8560C ADD X0, X31, 0x0
	0x01E85610 MOV X1, X31
	0x01E85614 BL 0x338FCB8
	0x01E85618 LDP X30, X19, [X31 + 0x10]
	0x01E8561C ADD X31, X31, 0x20
	0x01E85620 RET
	0x01E85624 BL 0x1C16F20
	0x01E85628 MOV X1, X31
	0x01E8562C B 0x33BDD8C
	0x01E85630 SUB X31, X31, 0x20
	0x01E85634 STP X30, X19, [X31 + 0x10]
	0x01E85638 CBZ X1, 0x1E856A0
	0x01E8563C MOV X0, X1
	0x01E85640 MOV X1, X31
	0x01E85644 MOV X19, X2
	0x01E85648 BL 0x3C32E90
	0x01E8564C CBZ X0, 0x1E856A0
	0x01E85650 MOV X1, X31
	0x01E85654 BL 0x3C3F58C
	0x01E85658 STP S0, S1, [X31]
	0x01E8565C STR S2, [X31 + 0x8]
	0x01E85660 CBZ X19, 0x1E856A0
	0x01E85664 MOV X0, X19
	0x01E85668 MOV X1, X31
	0x01E8566C BL 0x3C32E90
	0x01E85670 CBZ X0, 0x1E856A0
	0x01E85674 ADD X8, X31, 0x0
	0x01E85678 MOV X1, X31
	0x01E8567C ORR X19, X8, 0x7
	0x01E85680 BL 0x3C3F58C
	0x01E85684 MOV V0.16B, V1.16B
	0x01E85688 MOV X0, X19
	0x01E8568C MOV X1, X31
	0x01E85690 BL 0x338FCB8
	0x01E85694 LDP X30, X19, [X31 + 0x10]
	0x01E85698 ADD X31, X31, 0x20
	0x01E8569C RET
	0x01E856A0 BL 0x1C16F20
	0x01E856A4 MOV X1, X31
	0x01E856A8 B 0x33BDD8C
	0x01E856AC SUB X31, X31, 0x20
	0x01E856B0 STP X30, X19, [X31 + 0x10]
	0x01E856B4 CBZ X1, 0x1E8571C
	0x01E856B8 MOV X0, X1
	0x01E856BC MOV X1, X31
	0x01E856C0 MOV X19, X2
	0x01E856C4 BL 0x3C32E90
	0x01E856C8 CBZ X0, 0x1E8571C
	0x01E856CC MOV X1, X31
	0x01E856D0 BL 0x3C3F58C
	0x01E856D4 STP S0, S1, [X31]
	0x01E856D8 STR S2, [X31 + 0x8]
	0x01E856DC CBZ X19, 0x1E8571C
	0x01E856E0 MOV X0, X19
	0x01E856E4 MOV X1, X31
	0x01E856E8 BL 0x3C32E90
	0x01E856EC CBZ X0, 0x1E8571C
	0x01E856F0 ADD X8, X31, 0x0
	0x01E856F4 MOV X1, X31
	0x01E856F8 ADD X19, X8, 0x8
	0x01E856FC BL 0x3C3F58C
	0x01E85700 MOV V0.16B, V2.16B
	0x01E85704 MOV X0, X19
	0x01E85708 MOV X1, X31
	0x01E8570C BL 0x338FCB8
	0x01E85710 LDP X30, X19, [X31 + 0x10]
	0x01E85714 ADD X31, X31, 0x20
	0x01E85718 RET
	0x01E8571C BL 0x1C16F20
	0x01E85720 MOV X1, X31
	0x01E85724 B 0x33BDD8C
	0x01E85728 LDR W8, [X0]
	0x01E8572C CMP W8, W1
	0x01E85730 CSEL W8, W1, W8, LT
	0x01E85734 B.LT 0x1E85744
	0x01E85738 CMP W8, W2
	0x01E8573C B.GT 0x1E85744
	0x01E85740 RET
	0x01E85744 CMP W8, W2
	0x01E85748 CSEL W8, W2, W8, GT
	0x01E8574C STR W8, [X0]
	0x01E85750 RET
	0x01E85754 CMP W0, W1
	0x01E85758 CSEL X8, X0, X1, LT
	0x01E8575C AND X0, X8, 0x0
	0x01E85760 RET
	0x01E85764 CMP W0, W1
	0x01E85768 CSEL X8, X0, X1, GT
	0x01E8576C AND X0, X8, 0x0
	0x01E85770 RET
	0x01E85774 CMP W0, W1
	0x01E85778 B.EQ 0x1E8587C
	0x01E8577C STR D8, [X31 - 0x10]!
	0x01E85780 STR X30, [X31 + 0x8]
	0x01E85784 ADRP X8, 0xFFFFFFFFFEC68000
	0x01E85788 LDR V8, [X8 + 0xA90]
	0x01E8578C SCVTF D1, W0
	0x01E85790 SCVTF D2, W1
	0x01E85794 MOVZ W9, 0x43B40000
	0x01E85798 FDIV D1, D1, D8
	0x01E8579C FDIV D2, D2, D8
	0x00000000 INVALID
	0x00000000 INVALID
	0x01E857A8 FMOV S4, W9
	0x01E857AC FSUB S2, S2, S1
	0x01E857B0 MOVZ W8, 0xC3B40000
	0x01E857B4 FDIV S6, S2, S4
	0x01E857B8 FMOV S5, W8
	0x01E857BC FRINTM S6, S6
	0x01E857C0 FMUL S6, S6, S5
	0x01E857C4 FADD S2, S2, S6
	0x01E857C8 FMOV S3, W31
	0x01E857CC MOVZ W9, 0x43340000
	0x01E857D0 FCMP S2, 0x0
	0x01E857D4 FMIN S2, S2, S4
	0x01E857D8 FMOV S6, W9
	0x01E857DC FCSEL S2, S2, S3, PL
	0x01E857E0 FCMP S2, S6

ISIL:
	001 Move [X31-96], D8
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Subtract X31, X31, 416
	013 Move X22, 0x2555000
	014 Move W8, [X22+506]
	015 Move W19, W2
	016 Move W21, W1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x2279000
	023 Move X0, [X0+3496]
	024 Call 0x1C17CF4
	025 Move X0, 0x2279000
	026 Move X0, [X0+3664]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+506], W8
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Compare X20, 0
	032 JumpIfEqual {152}
	033 Move X26, 0x2279000
	034 Move X26, [X26+3496]
	035 Add X8, X31, 312
	036 Move X0, X20
	037 Move W1, W19
	038 Move X2, [X26]
	039 Call List`1<LagCompensatedHit>.get_Item, X0, X1
	040 Move X25, 0x2279000
	041 Move V8, [X31+408]
	042 Move X25, [X25+3664]
	043 Move W22, W21
	044 Move W23, W21
	045 Move X2, [X26]
	046 Add X8, X31, 312
	047 Move X0, X20
	048 Move W1, W23
	049 Call List`1<LagCompensatedHit>.get_Item, X0, X1
	050 Move V0, [X31+408]
	051 NotImplemented "Instruction FCMP not yet implemented."
	052 Move X2, [X26]
	053 Add X8, X31, 312
	054 Move X0, X20
	055 Move W1, W22
	056 Call List`1<LagCompensatedHit>.get_Item, X0, X1
	057 Add X0, X31, 208
	058 Add X1, X31, 312
	059 Move W2, 104
	060 Call 0x3EB2AC0
	061 Move X2, [X26]
	062 Add X8, X31, 312
	063 Move X0, X20
	064 Move W1, W23
	065 Call List`1<LagCompensatedHit>.get_Item, X0, X1
	066 Add X0, X31, 104
	067 Add X1, X31, 312
	068 Move W2, 104
	069 Call 0x3EB2AC0
	070 Move X24, [X25]
	071 Add X0, X31, 312
	072 Add X1, X31, 104
	073 Move W2, 104
	074 Call 0x3EB2AC0
	075 Add X2, X31, 312
	076 Move X0, X20
	077 Move W1, W22
	078 Move X3, X24
	079 Call List`1<LagCompensatedHit>.set_Item, X0, X1, X2
	080 Move X24, [X25]
	081 Add X0, X31, 312
	082 Add X1, X31, 208
	083 Move W2, 104
	084 Call 0x3EB2AC0
	085 Add X2, X31, 312
	086 Move X0, X20
	087 Move W1, W23
	088 Move X3, X24
	089 Call List`1<LagCompensatedHit>.set_Item, X0, X1, X2
	090 Add W22, W22, 1
	091 Add W23, W23, 1
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X2, [X26]
	094 Add X8, X31, 312
	095 Move X0, X20
	096 Move W1, W22
	097 Call List`1<LagCompensatedHit>.get_Item, X0, X1
	098 Add X0, X31, 208
	099 Add X1, X31, 312
	100 Move W2, 104
	101 Call 0x3EB2AC0
	102 Move X2, [X26]
	103 Add X8, X31, 312
	104 Move X0, X20
	105 Move W1, W19
	106 Call List`1<LagCompensatedHit>.get_Item, X0, X1
	107 Add X0, X31, 0
	108 Add X1, X31, 312
	109 Move W2, 104
	110 Call 0x3EB2AC0
	111 Move X23, [X25]
	112 Add X0, X31, 312
	113 Add X1, X31, 0
	114 Move W2, 104
	115 Call 0x3EB2AC0
	116 Add X2, X31, 312
	117 Move X0, X20
	118 Move W1, W22
	119 Move X3, X23
	120 Call List`1<LagCompensatedHit>.set_Item, X0, X1, X2
	121 Move X23, [X25]
	122 Add X0, X31, 312
	123 Add X1, X31, 208
	124 Move W2, 104
	125 Call 0x3EB2AC0
	126 Add X2, X31, 312
	127 Move X0, X20
	128 Move W1, W19
	129 Move X3, X23
	130 Call List`1<LagCompensatedHit>.set_Item, X0, X1, X2
	131 Subtract W2, W22, 1
	132 Move X0, X20
	133 Move W1, W21
	134 Call LagCompensatedHit.QuickSort, X0, X1, X2
	135 Add W1, W22, 1
	136 Move X0, X20
	137 Move W2, W19
	138 Call LagCompensatedHit.QuickSort, X0, X1, X2
	139 Add X31, X31, 416
	140 Move X20, [X31+80]
	141 Move X19, [X31+88]
	142 Move X22, [X31+64]
	143 Move X21, [X31+72]
	144 Move X24, [X31+48]
	145 Move X23, [X31+56]
	146 Move X26, [X31+32]
	147 Move X25, [X31+40]
	148 Move X29, [X31+16]
	149 Move X30, [X31+24]
	150 Move V8, [X31+96]
	151 Return 
	152 Call 0x1C17F20

Method: System.Void QuickSortDistance(System.Collections.Generic.List`1<Fusion.LagCompensatedHit> hits, System.Int32 low, System.Int32 high)

Disassembly:
	0x01E857E4 FMOV S6, 1
	0x01E857E8 FADD S5, S2, S5
	0x01E857EC FMIN S6, S0, S6
	0x01E857F0 FCSEL S2, S5, S2, GT
	0x01E857F4 FCMP S0, 0x0
	0x01E857F8 FCSEL S0, S6, S3, PL
	0x01E857FC FMUL S0, S0, S2
	0x01E85800 FADD S1, S0, S1
	0x01E85804 FCMP S1, S4
	0x01E85808 FCVT S0, S1
	0x01E8580C B.LE 0x1E85820
	0x01E85810 ADRP X8, 0xFFFFFFFFFEC69000
	0x01E85814 LDR V1, [X8 + 0x2C8]
	0x01E85818 BL 0x3EB1C10
	0x01E8581C B 0x1E85850
	0x01E85820 FCMP S1, 0x0
	0x01E85824 B.PL 0x1E85850
	0x01E85828 MOVZ W8, 0xC3B40000
	0x01E8582C FMOV S2, W8
	0x01E85830 FCMP S1, S2
	0x01E85834 B.PL 0x1E85844
	0x01E85838 ADRP X8, 0xFFFFFFFFFEC68000
	0x01E8583C LDR V1, [X8 + 0xA98]
	0x01E85840 BL 0x3EB1C10
	0x01E85844 ADRP X8, 0xFFFFFFFFFEC69000
	0x01E85848 LDR V1, [X8 + 0x2C8]
	0x01E8584C FADD D0, D0, D1
	0x01E85850 FMUL D0, D0, D8
	0x01E85854 FMOV D1, 0.5
	0x01E85858 MOVZ X8, 0x7FF00000
	0x01E8585C LDR X30, [X31 + 0x8]
	0x01E85860 FADD D0, D0, D1
	0x01E85864 FMOV D1, X8
	0x01E85868 FCVTZS W8, D0
	0x01E8586C FCMP D0, D1
	0x01E85870 MOVZ W9, 0x80000000
	0x01E85874 CSEL X0, X9, X8, EQ
	0x01E85878 LDR V8, [X31], #0x10
	0x01E8587C AND X0, X0, 0x0
	0x01E85880 RET
	0x01E85884 ADRP X8, 0xFFFFFFFFFEC68000
	0x01E85888 LDR V0, [X8 + 0xA90]
	0x01E8588C SCVTF D1, W0
	0x01E85890 FDIV D0, D1, D0
	0x00000000 INVALID
	0x01E85898 RET
	0x01E8589C STR X30, [X31 - 0x10]!
	0x01E858A0 MOVZ W8, 0x43B40000
	0x01E858A4 MOV V1.16B, V0.16B
	0x01E858A8 FMOV S0, W8
	0x01E858AC FCMP S1, S0
	0x01E858B0 FCVT S0, S1
	0x01E858B4 B.LE 0x1E858C8
	0x01E858B8 ADRP X8, 0xFFFFFFFFFEC69000
	0x01E858BC LDR V1, [X8 + 0x2C8]
	0x01E858C0 BL 0x3EB1C10
	0x01E858C4 B 0x1E858F8
	0x01E858C8 FCMP S1, 0x0
	0x01E858CC B.PL 0x1E858F8
	0x01E858D0 MOVZ W8, 0xC3B40000
	0x01E858D4 FMOV S2, W8
	0x01E858D8 FCMP S1, S2
	0x01E858DC B.PL 0x1E858EC
	0x01E858E0 ADRP X8, 0xFFFFFFFFFEC68000
	0x01E858E4 LDR V1, [X8 + 0xA98]
	0x01E858E8 BL 0x3EB1C10
	0x01E858EC ADRP X8, 0xFFFFFFFFFEC69000
	0x01E858F0 LDR V1, [X8 + 0x2C8]
	0x01E858F4 FADD D0, D0, D1
	0x01E858F8 ADRP X8, 0xFFFFFFFFFEC68000
	0x01E858FC LDR V1, [X8 + 0xA90]
	0x01E85900 MOVZ X8, 0x7FF00000
	0x01E85904 FMOV D2, 0.5
	0x01E85908 FMOV D3, X8
	0x01E8590C FMUL D0, D0, D1
	0x01E85910 FADD D0, D0, D2
	0x01E85914 FCVTZS W8, D0
	0x01E85918 FCMP D0, D3
	0x01E8591C MOVZ W9, 0x80000000
	0x01E85920 CSEL X0, X9, X8, EQ
	0x01E85924 LDR X30, [X31], #0x10
	0x01E85928 RET
	0x01E8592C CMP W2, W1
	0x01E85930 CSEL W8, W1, W2, LT
	0x01E85934 CSEL W9, W2, W1, LT
	0x01E85938 CMP W8, W0
	0x01E8593C CSEL W8, W8, W0, LT
	0x01E85940 CMP W9, W0
	0x01E85944 CSEL W0, W9, W8, GT
	0x01E85948 RET
	0x01E8594C CMP W0, W1
	0x01E85950 CSET W0, LT
	0x01E85954 RET
	0x01E85958 CMP W0, W1
	0x01E8595C CSET W0, LE
	0x01E85960 RET
	0x01E85964 CMP W0, W1
	0x01E85968 CSET W0, GT
	0x01E8596C RET
	0x01E85970 CMP W0, W1
	0x01E85974 CSET W0, GE
	0x01E85978 RET
	0x01E8597C CMP W0, W1
	0x01E85980 CSET W0, EQ
	0x01E85984 RET
	0x01E85988 CMP W0, W1
	0x01E8598C CSET W0, NE
	0x01E85990 RET
	0x01E85994 LDR W8, [X0]
	0x01E85998 CMP W8, W1
	0x01E8599C CSET W0, EQ
	0x01E859A0 RET
	0x01E859A4 STP X30, X21, [X31 - 0x20]!
	0x01E859A8 STP X20, X19, [X31 + 0x10]
	0x01E859AC ADRP X21, 0x2554000
	0x01E859B0 LDRB W8, [X21 + 0x204]
	0x01E859B4 MOV X20, X1
	0x01E859B8 MOV X19, X0
	0x01E859BC TBNZ X8, 0x0, 0x1E859D4
	0x01E859C0 ADRP X0, 0x2278000
	0x01E859C4 LDR X0, [X0 + 0xE80]
	0x01E859C8 BL 0x1C16CF4
	0x01E859CC MOVZ W8, 0x1
	0x01E859D0 STRB W8, [X21 + 0x204]
	0x01E859D4 CBZ X20, 0x1E859F0
	0x01E859D8 ADRP X8, 0x2278000
	0x01E859DC LDR X8, [X8 + 0xE80]
	0x01E859E0 LDR X9, [X20]
	0x01E859E4 LDR X8, [X8]
	0x01E859E8 CMP X9, X8
	0x01E859EC B.EQ 0x1E859F8
	0x01E859F0 MOV W0, W31
	0x01E859F4 B 0x1E85A10
	0x01E859F8 MOV X0, X20
	0x01E859FC BL 0x1C16E08
	0x01E85A00 LDR W8, [X0]
	0x01E85A04 LDR W9, [X19]
	0x01E85A08 CMP W9, W8
	0x01E85A0C CSET W0, EQ
	0x01E85A10 LDP X20, X19, [X31 + 0x10]
	0x01E85A14 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-96], D8
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Subtract X31, X31, 416
	013 Move X22, 0x2555000
	014 Move W8, [X22+507]
	015 Move W19, W2
	016 Move W21, W1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x2279000
	023 Move X0, [X0+3496]
	024 Call 0x1C17CF4
	025 Move X0, 0x2279000
	026 Move X0, [X0+3664]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+507], W8
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Compare X20, 0
	032 JumpIfEqual {152}
	033 Move X26, 0x2279000
	034 Move X26, [X26+3496]
	035 Add X8, X31, 312
	036 Move X0, X20
	037 Move W1, W19
	038 Move X2, [X26]
	039 Call List`1<LagCompensatedHit>.get_Item, X0, X1
	040 Move X25, 0x2279000
	041 Move V8, [X31+380]
	042 Move X25, [X25+3664]
	043 Move W22, W21
	044 Move W23, W21
	045 Move X2, [X26]
	046 Add X8, X31, 312
	047 Move X0, X20
	048 Move W1, W23
	049 Call List`1<LagCompensatedHit>.get_Item, X0, X1
	050 Move V0, [X31+380]
	051 NotImplemented "Instruction FCMP not yet implemented."
	052 Move X2, [X26]
	053 Add X8, X31, 312
	054 Move X0, X20
	055 Move W1, W22
	056 Call List`1<LagCompensatedHit>.get_Item, X0, X1
	057 Add X0, X31, 208
	058 Add X1, X31, 312
	059 Move W2, 104
	060 Call 0x3EB2AC0
	061 Move X2, [X26]
	062 Add X8, X31, 312
	063 Move X0, X20
	064 Move W1, W23
	065 Call List`1<LagCompensatedHit>.get_Item, X0, X1
	066 Add X0, X31, 104
	067 Add X1, X31, 312
	068 Move W2, 104
	069 Call 0x3EB2AC0
	070 Move X24, [X25]
	071 Add X0, X31, 312
	072 Add X1, X31, 104
	073 Move W2, 104
	074 Call 0x3EB2AC0
	075 Add X2, X31, 312
	076 Move X0, X20
	077 Move W1, W22
	078 Move X3, X24
	079 Call List`1<LagCompensatedHit>.set_Item, X0, X1, X2
	080 Move X24, [X25]
	081 Add X0, X31, 312
	082 Add X1, X31, 208
	083 Move W2, 104
	084 Call 0x3EB2AC0
	085 Add X2, X31, 312
	086 Move X0, X20
	087 Move W1, W23
	088 Move X3, X24
	089 Call List`1<LagCompensatedHit>.set_Item, X0, X1, X2
	090 Add W22, W22, 1
	091 Add W23, W23, 1
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X2, [X26]
	094 Add X8, X31, 312
	095 Move X0, X20
	096 Move W1, W22
	097 Call List`1<LagCompensatedHit>.get_Item, X0, X1
	098 Add X0, X31, 208
	099 Add X1, X31, 312
	100 Move W2, 104
	101 Call 0x3EB2AC0
	102 Move X2, [X26]
	103 Add X8, X31, 312
	104 Move X0, X20
	105 Move W1, W19
	106 Call List`1<LagCompensatedHit>.get_Item, X0, X1
	107 Add X0, X31, 0
	108 Add X1, X31, 312
	109 Move W2, 104
	110 Call 0x3EB2AC0
	111 Move X23, [X25]
	112 Add X0, X31, 312
	113 Add X1, X31, 0
	114 Move W2, 104
	115 Call 0x3EB2AC0
	116 Add X2, X31, 312
	117 Move X0, X20
	118 Move W1, W22
	119 Move X3, X23
	120 Call List`1<LagCompensatedHit>.set_Item, X0, X1, X2
	121 Move X23, [X25]
	122 Add X0, X31, 312
	123 Add X1, X31, 208
	124 Move W2, 104
	125 Call 0x3EB2AC0
	126 Add X2, X31, 312
	127 Move X0, X20
	128 Move W1, W19
	129 Move X3, X23
	130 Call List`1<LagCompensatedHit>.set_Item, X0, X1, X2
	131 Subtract W2, W22, 1
	132 Move X0, X20
	133 Move W1, W21
	134 Call LagCompensatedHit.QuickSortDistance, X0, X1, X2
	135 Add W1, W22, 1
	136 Move X0, X20
	137 Move W2, W19
	138 Call LagCompensatedHit.QuickSortDistance, X0, X1, X2
	139 Add X31, X31, 416
	140 Move X20, [X31+80]
	141 Move X19, [X31+88]
	142 Move X22, [X31+64]
	143 Move X21, [X31+72]
	144 Move X24, [X31+48]
	145 Move X23, [X31+56]
	146 Move X26, [X31+32]
	147 Move X25, [X31+40]
	148 Move X29, [X31+16]
	149 Move X30, [X31+24]
	150 Move V8, [X31+96]
	151 Return 
	152 Call 0x1C17F20

