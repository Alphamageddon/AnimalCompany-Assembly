Type: Fusion.SimulationBehaviourUpdater/<>c

Method: System.Void .cctor()

Disassembly:
	0x01E7E010 LDP S10, S9, [X31 + 0x1C]
	0x01E7E014 LDR V8, [X31 + 0x18]
	0x01E7E018 LDP S4, S0, [X31 + 0x48]
	0x01E7E01C FMOV S1, 1
	0x01E7E020 LDP S6, S5, [X31 + 0x40]
	0x01E7E024 LDR V7, [X31 + 0x3C]
	0x01E7E028 FMIN S1, S0, S1
	0x01E7E02C FCMP S0, 0x0
	0x01E7E030 FMOV S2, W31
	0x01E7E034 FCSEL S1, S1, S2, PL
	0x01E7E038 STR V1, [X31 + 0x2]
	0x01E7E03C STR S0, [X31]
	0x01E7E040 MOV V0.16B, V9.16B
	0x01E7E044 MOV V1.16B, V10.16B
	0x01E7E048 MOV V2.16B, V8.16B
	0x01E7E04C MOV V3.16B, V11.16B
	0x01E7E050 MOV X0, X31
	0x01E7E054 BL 0x3C2A2F8
	0x01E7E058 CBZ X19, 0x1E7E11C
	0x01E7E05C MOV V9.16B, V2.16B
	0x01E7E060 LDR V2, [X31 + 0x2]
	0x01E7E064 MOV V11.16B, V0.16B
	0x01E7E068 MOV V10.16B, V1.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x255C000
	005 Move X20, 0x2280000
	006 Move W8, [X19+439]
	007 Move X20, [X20+2568]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2280000
	013 Move X0, [X0+2568]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+439], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x01E7E06C FSUB S0, S15, S13
	0x01E7E070 FSUB V1.2S, V14.2S, V12.2S

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <BuildTypeOrder>b__12_0(System.Type x)

Disassembly:
	0x01E7E074 LDR W8, [X31 + 0x38]
	0x01E7E078 FMUL S0, S0, S2
	0x00000000 INVALID
	0x01E7E080 FADD S2, S13, S0
	0x01E7E084 FADD V0.2S, V12.2S, V1.2S
	0x01E7E088 MOV V8.16B, V3.16B

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {7}
	003 Move X0, X1
	004 Move X1, X31
	005 Call Type.get_IsInterface, X0
	006 Return X0
	007 Move [X31-16], X30
	008 Call 0x1C17F20

Method: System.Int32 <BuildTypeOrder>b__12_1(Fusion.SimulationBehaviourUpdater/BehaviourList a, Fusion.SimulationBehaviourUpdater/BehaviourList b)

Disassembly:
	0x01E7E08C MOV S1, V0.S[1]
	0x01E7E090 TBZ X8, 0x0, 0x1E7E0C0
	0x01E7E094 MOV X0, X19
	0x01E7E098 MOV X1, X31
	0x01E7E09C BL 0x3C3EC04
	0x01E7E0A0 MOV X0, X19
	0x01E7E0A4 MOV V0.16B, V11.16B
	0x01E7E0A8 MOV V1.16B, V10.16B
	0x01E7E0AC MOV V2.16B, V9.16B
	0x01E7E0B0 MOV V3.16B, V8.16B

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {13}
	004 Compare X2, 0
	005 JumpIfEqual {13}
	006 Move W8, [X2+24]
	007 Add X0, X1, 24
	008 Move X2, X31
	009 Move W1, W8
	010 Move X30, [X31+16]
	011 Call Int32.CompareTo, X0, X1
	012 Return X0
	013 Call 0x1C17F20

Method: System.String <FindList>b__24_0(System.Collections.Generic.KeyValuePair`2<System.Type, Fusion.SimulationBehaviourUpdater/BehaviourList> x)

Disassembly:
	0x01E7E0B4 MOV X1, X31
	0x01E7E0B8 BL 0x3C3F8B8
	0x01E7E0BC B 0x1E7E0DC
	0x01E7E0C0 MOV X0, X19
	0x01E7E0C4 MOV V3.16B, V11.16B
	0x01E7E0C8 MOV V4.16B, V10.16B
	0x01E7E0CC MOV V5.16B, V9.16B
	0x01E7E0D0 MOV V6.16B, V8.16B
	0x01E7E0D4 MOV X1, X31
	0x01E7E0D8 BL 0x3C40000
	0x01E7E0DC LDR X8, [X29 + 0x28]
	0x01E7E0E0 LDR X9, [X31 + 0xA8]
	0x01E7E0E4 CMP X8, X9
	0x01E7E0E8 B.NE 0x1E7E120
	0x01E7E0EC LDP X20, X19, [X31 + 0x140]
	0x01E7E0F0 LDP X22, X21, [X31 + 0x130]
	0x01E7E0F4 LDP X24, X23, [X31 + 0x120]
	0x01E7E0F8 LDP X26, X25, [X31 + 0x110]
	0x01E7E0FC LDP X28, X27, [X31 + 0x100]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x255C000
	005 Move W8, [X20+440]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2280000
	012 Move X0, [X0+2856]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+440], W8
	016 Compare X19, 0
	017 JumpIfEqual {26}
	018 Move X8, [X19]
	019 Move X0, X19
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X2, [X8+360]
	023 Move X1, [X8+368]
	024 Move X30, [X31+32]
	025 CallNoReturn X2
	026 Call 0x1C17F20

