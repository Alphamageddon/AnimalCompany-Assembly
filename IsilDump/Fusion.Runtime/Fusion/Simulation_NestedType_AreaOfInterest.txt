Type: Fusion.Simulation/AreaOfInterest

Method: System.ValueTuple`3<System.Int32, System.Int32, System.Int32> GetGridSize()

Disassembly:
	0x01ECBDB0 MOV X1, X20
	0x01ECBDB4 BL 0x3EB1AC0
	0x01ECBDB8 ADD X1, X31, 0x78
	0x01ECBDBC MOV X0, X19
	0x01ECBDC0 MOV X2, X31
	0x01ECBDC4 BL 0x1EC0B70
	0x01ECBDC8 LDR X0, [X24]
	0x01ECBDCC BL 0x1C16F10
	0x01ECBDD0 ADD X8, X31, 0x8
	0x01ECBDD4 MOV X20, X0
	0x01ECBDD8 BL 0x1EDA504
	0x01ECBDDC ADD X1, X31, 0x8
	0x01ECBDE0 MOV X0, X20
	0x01ECBDE4 BL 0x1EDA6E4
	0x01ECBDE8 LDR X0, [X23]
	0x01ECBDEC BL 0x1C16F10
	0x01ECBDF0 LDR X2, [X21]
	0x01ECBDF4 MOV X1, X19
	0x01ECBDF8 MOV X3, X31
	0x01ECBDFC MOV X21, X0
	0x01ECBE00 BL 0x1EDD0E4
	0x01ECBE04 CBZ X20, 0x1ECBEA8
	0x01ECBE08 ADRP X23, 0x2233000
	0x01ECBE0C ADRP X24, 0x2234000
	0x01ECBE10 ADRP X25, 0x2234000
	0x01ECBE14 LDR X23, [X23 + 0x448]
	0x01ECBE18 LDR X24, [X24 + 0xDA8]
	0x01ECBE1C LDR X25, [X25 + 0xDB0]
	0x01ECBE20 MOVZ W1, 0x1
	0x01ECBE24 MOV X0, X20
	0x01ECBE28 MOV X2, X21
	0x01ECBE2C BL 0x1ECBEDC
	0x01ECBE30 STR X20, [X19 + 0x68]
	0x01ECBE34 LDR X0, [X23]
	0x01ECBE38 BL 0x1C16F10
	0x01ECBE3C MOVZ W1, 0x80
	0x01ECBE40 MOV X2, X31

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x250F000
	006 Move X19, 0x2234000
	007 Move W8, [X20+1213]
	008 Move X19, [X19+2720]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x2234000
	014 Move X0, [X0+2720]
	015 Call 0x1C17CF4
	016 Move X0, 0x2235000
	017 Move X0, [X0+3440]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+1213], W8
	021 Move X0, [X19]
	022 Move X20, 0x2235000
	023 Move W8, [X0+224]
	024 Move X20, [X20+3440]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X19]
	029 Move X8, [X0+184]
	030 Move X4, [X20]
	031 Add X0, X31, 0
	032 Move W1, [X8]
	033 Move W2, [X8+4]
	034 Move W3, [X8+8]
	035 Move [X31+8], W31
	036 Move [X31], X31
	037 Call ValueTuple`3<Int32, Int32, Int32>..ctor, X0, X1, X2, X3
	038 Move X0, [X31]
	039 Move W1, [X31+8]
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+16]
	043 Add X31, X31, 48
	044 Return X0

Method: System.Int32 GetCellSize()

Disassembly:
	0x01ECBE44 MOV X20, X0
	0x01ECBE48 BL 0x1EBE034
	0x01ECBE4C STR X20, [X19 + 0x1B8]
	0x01ECBE50 LDR X0, [X24]
	0x01ECBE54 LDR X20, [X19 + 0x60]
	0x01ECBE58 BL 0x1C16F10
	0x01ECBE5C MOV X1, X20
	0x01ECBE60 MOV X21, X0
	0x01ECBE64 BL 0x1ECBFBC
	0x01ECBE68 STR X21, [X19 + 0x1C0]
	0x01ECBE6C LDR X0, [X25]
	0x01ECBE70 MOVZ W1, 0x80
	0x01ECBE74 BL 0x1C16D6C
	0x01ECBE78 STR X0, [X19 + 0x1C8]
	0x01ECBE7C LDR X8, [X22 + 0x28]
	0x01ECBE80 LDR X9, [X31 + 0xC8]
	0x01ECBE84 CMP X8, X9
	0x01ECBE88 B.NE 0x1ECBEAC
	0x01ECBE8C LDP X20, X19, [X31 + 0x110]
	0x01ECBE90 LDP X22, X21, [X31 + 0x100]
	0x01ECBE94 LDP X24, X23, [X31 + 0xF0]
	0x01ECBE98 LDP X30, X25, [X31 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x250F000
	005 Move X19, 0x2234000
	006 Move W8, [X20+1214]
	007 Move X19, [X19+2720]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2234000
	013 Move X0, [X0+2720]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1214], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8+12]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void SphereToCells(UnityEngine.Vector3 position, System.Single radius, System.Collections.Generic.HashSet`1<System.Int32> cells)

Disassembly:
	0x01ECBE9C LDR X29, [X31 + 0xD0]
	0x01ECBEA0 ADD X31, X31, 0x120
	0x01ECBEA4 RET
	0x01ECBEA8 BL 0x1C16F20
	0x01ECBEAC BL 0x3EB1B20
	0x01ECBEB0 SUB X31, X31, 0x80
	0x01ECBEB4 STP X30, X19, [X31 + 0x70]
	0x01ECBEB8 ADD X8, X31, 0x0
	0x01ECBEBC MOV X19, X0
	0x01ECBEC0 BL 0x1EDA504
	0x01ECBEC4 ADD X1, X31, 0x0
	0x01ECBEC8 MOV X0, X19
	0x01ECBECC BL 0x1EDA6E4
	0x01ECBED0 LDP X30, X19, [X31 + 0x70]
	0x01ECBED4 ADD X31, X31, 0x80
	0x01ECBED8 RET
	0x01ECBEDC STR X30, [X31 - 0x30]!
	0x01ECBEE0 STP X22, X21, [X31 + 0x10]
	0x01ECBEE4 STP X20, X19, [X31 + 0x20]
	0x01ECBEE8 ADRP X22, 0x250E000
	0x01ECBEEC LDRB W8, [X22 + 0x550]
	0x01ECBEF0 MOV X19, X2
	0x01ECBEF4 MOV W21, W1
	0x01ECBEF8 MOV X20, X0
	0x01ECBEFC TBNZ X8, 0x0, 0x1ECBF14
	0x01ECBF00 ADRP X0, 0x2234000
	0x01ECBF04 LDR X0, [X0 + 0xDB8]
	0x01ECBF08 BL 0x1C16CF4
	0x01ECBF0C MOVZ W8, 0x1
	0x01ECBF10 STRB W8, [X22 + 0x550]
	0x01ECBF14 CMP W21, 0x2
	0x01ECBF18 B.EQ 0x1ECBF34
	0x01ECBF1C CMP W21, 0x1
	0x01ECBF20 B.EQ 0x1ECBF40
	0x01ECBF24 CBNZ W21, 0x1ECBF88
	0x01ECBF28 LDR X0, [X20 + 0x1D0]
	0x01ECBF2C CBNZ X0, 0x1ECBF48
	0x01ECBF30 B 0x1ECBFB8
	0x01ECBF34 LDR X0, [X20 + 0x1E0]
	0x01ECBF38 CBNZ X0, 0x1ECBF48
	0x01ECBF3C B 0x1ECBFB8
	0x01ECBF40 LDR X0, [X20 + 0x1D8]
	0x01ECBF44 CBZ X0, 0x1ECBFB8
	0x01ECBF48 ADRP X9, 0x2234000
	0x01ECBF4C LDR X9, [X9 + 0xDB8]
	0x01ECBF50 LDR W10, [X0 + 0x1C]
	0x01ECBF54 LDR X8, [X0 + 0x10]
	0x01ECBF58 LDR X9, [X9]
	0x01ECBF5C ADD W10, W10, 0x1
	0x01ECBF60 STR W10, [X0 + 0x1C]
	0x01ECBF64 CBZ X8, 0x1ECBFB8
	0x01ECBF68 LDRSW X10, [X0 + 0x18]
	0x01ECBF6C LDR W11, [X8 + 0x18]
	0x01ECBF70 CMP W10, W11
	0x01ECBF74 B.CS 0x1ECBF98
	0x01ECBF78 ADD W9, W10, 0x1
	0x01ECBF7C ADD X8, X8, X10, 0x3, LSL
	0x01ECBF80 STR W9, [X0 + 0x18]
	0x01ECBF84 STR X19, [X8 + 0x20]
	0x01ECBF88 LDP X20, X19, [X31 + 0x20]
	0x01ECBF8C LDP X22, X21, [X31 + 0x10]
	0x01ECBF90 LDR X30, [X31], #0x30
	0x01ECBF94 RET
	0x01ECBF98 LDR X8, [X9 + 0x20]
	0x01ECBF9C MOV X1, X19
	0x01ECBFA0 LDP X20, X19, [X31 + 0x20]
	0x01ECBFA4 LDP X22, X21, [X31 + 0x10]
	0x01ECBFA8 LDR X8, [X8 + 0xC0]
	0x01ECBFAC LDR X2, [X8 + 0x70]
	0x01ECBFB0 LDR X30, [X31], #0x30
	0x01ECBFB4 B 0x301BF90
	0x01ECBFB8 BL 0x1C16F20
	0x01ECBFBC STR X30, [X31 - 0x50]!
	0x01ECBFC0 STP X26, X25, [X31 + 0x10]
	0x01ECBFC4 STP X24, X23, [X31 + 0x20]
	0x01ECBFC8 STP X22, X21, [X31 + 0x30]
	0x01ECBFCC STP X20, X19, [X31 + 0x40]
	0x01ECBFD0 ADRP X21, 0x250E000
	0x01ECBFD4 LDRB W8, [X21 + 0x52E]
	0x01ECBFD8 MOV X20, X1
	0x01ECBFDC MOV X19, X0
	0x01ECBFE0 TBNZ X8, 0x0, 0x1ECC034
	0x01ECBFE4 ADRP X0, 0x2234000
	0x01ECBFE8 LDR X0, [X0 + 0x988]
	0x01ECBFEC BL 0x1C16CF4
	0x01ECBFF0 ADRP X0, 0x2234000
	0x01ECBFF4 LDR X0, [X0 + 0xDC0]
	0x01ECBFF8 BL 0x1C16CF4
	0x01ECBFFC ADRP X0, 0x2234000
	0x01ECC000 LDR X0, [X0 + 0xDC8]
	0x01ECC004 BL 0x1C16CF4
	0x01ECC008 ADRP X0, 0x2233000
	0x01ECC00C LDR X0, [X0 + 0x9B8]

ISIL:
	001 Move [X31-160], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X29
	009 Move [X31+72], X30
	010 Move [X31+80], X28
	011 Move [X31+88], X27
	012 Move [X31+96], X26
	013 Move [X31+104], X25
	014 Move [X31+112], X24
	015 Move [X31+120], X23
	016 Move [X31+128], X22
	017 Move [X31+136], X21
	018 Move [X31+144], X20
	019 Move [X31+152], X19
	020 Move X20, 0x250F000
	021 Move X26, 0x2234000
	022 Move W8, [X20+1215]
	023 Move X26, [X26+2720]
	024 Move X19, X0
	025 Move V8, V3
	026 Move V9, V2
	027 Move V10, V1
	028 Move V11, V0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {41}
	033 Move X0, 0x2234000
	034 Move X0, [X0+2720]
	035 Call 0x1C17CF4
	036 Move X0, 0x222B000
	037 Move X0, [X0+2520]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+1215], W8
	041 Move X0, [X26]
	042 Subtract S14, S11, S8
	043 Subtract S13, S10, S8
	044 Subtract S12, S9, S8
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move V0, V14
	050 Move V1, V13
	051 Move V2, V12
	052 Call AreaOfInterest.ToCellCoords, X0
	053 Add S0, S11, S8
	054 Add S1, S10, S8
	055 Add S2, S9, S8
	056 Move X20, X0
	057 Move X21, X1
	058 Call AreaOfInterest.ToCellCoords, X0
	059 Move X22, X0
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X29, 0x222B000
	062 Move X29, [X29+2520]
	063 Move X23, X1
	064 Move X27, X20
	065 ShiftRight X27, 32
	066 And X27, X27, 0x7FFFFFFF
	067 Move X28, X22
	068 ShiftRight X28, 32
	069 And X28, X28, 0x7FFFFFFF
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move W24, W27
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move W25, W21
	074 Move X0, [X26]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move W0, W20
	080 Move W1, W24
	081 Move W2, W25
	082 Call AreaOfInterest.ToCell, X0, X1, X2
	083 Compare X19, 0
	084 JumpIfEqual {115}
	085 Move X2, [X29]
	086 Move W1, W0
	087 Move X0, X19
	088 Call HashSet`1<Int32>.Add, X0, X1
	089 Add W25, W25, 1
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Add W24, W24, 1
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Add W20, W20, 1
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X20, [X31+144]
	096 Move X19, [X31+152]
	097 Move X22, [X31+128]
	098 Move X21, [X31+136]
	099 Move X24, [X31+112]
	100 Move X23, [X31+120]
	101 Move X26, [X31+96]
	102 Move X25, [X31+104]
	103 Move X28, [X31+80]
	104 Move X27, [X31+88]
	105 Move X29, [X31+64]
	106 Move X30, [X31+72]
	107 Move D9, [X31+48]
	108 Move D8, [X31+56]
	109 Move D11, [X31+32]
	110 Move D10, [X31+40]
	111 Move D13, [X31+16]
	112 Move D12, [X31+24]
	113 Move V14, [X31+160]
	114 Return 
	115 Call 0x1C17F20

Method: System.ValueTuple`3<System.Int32, System.Int32, System.Int32> ToCellCoords(UnityEngine.Vector3 position)

Disassembly:
	0x01ECC010 BL 0x1C16CF4
	0x01ECC014 ADRP X0, 0x2233000
	0x01ECC018 LDR X0, [X0 + 0xDD0]
	0x01ECC01C BL 0x1C16CF4
	0x01ECC020 ADRP X0, 0x2232000
	0x01ECC024 LDR X0, [X0 + 0x168]
	0x01ECC028 BL 0x1C16CF4
	0x01ECC02C MOVZ W8, 0x1
	0x01ECC030 STRB W8, [X21 + 0x52E]
	0x01ECC034 MOV X0, X19
	0x01ECC038 MOV X1, X31
	0x01ECC03C BL 0x33BDD8C
	0x01ECC040 STR X20, [X19 + 0x10]
	0x01ECC044 CBZ X20, 0x1ECC108
	0x01ECC048 LDR X8, [X20 + 0x40]
	0x01ECC04C CBZ X8, 0x1ECC108
	0x01ECC050 ADRP X9, 0x2232000
	0x01ECC054 LDR X9, [X9 + 0x168]
	0x01ECC058 ADRP X26, 0x2233000
	0x01ECC05C ADRP X25, 0x2233000
	0x01ECC060 ADRP X24, 0x2233000
	0x01ECC064 LDR X0, [X9]
	0x01ECC068 ADRP X23, 0x2233000
	0x01ECC06C ADRP X22, 0x2233000
	0x01ECC070 LDR X26, [X26 + 0xDD0]
	0x01ECC074 LDR X25, [X25 + 0xDC8]
	0x01ECC078 LDR W9, [X0 + 0xE0]
	0x01ECC07C LDP X21, X20, [X8 + 0x28]
	0x01ECC080 LDR X24, [X24 + 0xDC0]
	0x01ECC084 LDR X23, [X23 + 0x9B8]
	0x01ECC088 LDR X22, [X22 + 0x988]
	0x01ECC08C CBNZ W9, 0x1ECC094
	0x01ECC090 BL 0x1C16DFC
	0x01ECC094 MOV X0, X21
	0x01ECC098 MOV X1, X20
	0x01ECC09C MOV X2, X31
	0x01ECC0A0 BL 0x1E916D0
	0x01ECC0A4 STP X0, X1, [X19 + 0x18]
	0x01ECC0A8 LDR X0, [X26]
	0x01ECC0AC BL 0x1C16F10
	0x01ECC0B0 MOV X1, X31
	0x01ECC0B4 MOV X20, X0
	0x01ECC0B8 BL 0x1E90400
	0x01ECC0BC LDR X0, [X25]
	0x01ECC0C0 BL 0x1C16F10
	0x01ECC0C4 LDR X2, [X24]
	0x01ECC0C8 MOV X1, X20
	0x01ECC0CC MOV X21, X0
	0x01ECC0D0 BL 0x2AF2AD4
	0x01ECC0D4 STR X21, [X19 + 0x28]
	0x01ECC0D8 LDR X0, [X23]
	0x01ECC0DC BL 0x1C16F10
	0x01ECC0E0 LDR X1, [X22]
	0x01ECC0E4 MOV X20, X0
	0x01ECC0E8 BL 0x2AEFA88
	0x01ECC0EC STR X20, [X19 + 0x30]
	0x01ECC0F0 LDP X20, X19, [X31 + 0x40]
	0x01ECC0F4 LDP X22, X21, [X31 + 0x30]
	0x01ECC0F8 LDP X24, X23, [X31 + 0x20]
	0x01ECC0FC LDP X26, X25, [X31 + 0x10]
	0x01ECC100 LDR X30, [X31], #0x50
	0x01ECC104 RET
	0x01ECC108 BL 0x1C16F20
	0x01ECC10C SUB X31, X31, 0x30
	0x01ECC110 STP X30, X19, [X31 + 0x20]
	0x01ECC114 MRS X19, 0xC000
	0x01ECC118 LDR X8, [X19 + 0x28]
	0x01ECC11C MOV X4, X31
	0x01ECC120 STR X8, [X31 + 0x18]
	0x01ECC124 LDR X8, [X1 + 0x10]
	0x01ECC128 LDR V0, [X1]
	0x01ECC12C LDR X0, [X0 + 0x130]
	0x01ECC130 ADD X1, X31, 0x0
	0x01ECC134 STR X8, [X31 + 0x10]

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x250E000
	011 Move X19, 0x2233000
	012 Move W8, [X20+1216]
	013 Move X19, [X19+2720]
	014 Move V10, V2
	015 Move V9, V1
	016 Move V8, V0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x2233000
	022 Move X0, [X0+2720]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1216], W8
	026 Move X0, [X19]
	027 Move W9, [X0+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {33}
	030 Call 0x1C17DFC
	031 Move X0, [X19]
	032 Move W9, [X0+224]
	033 Move X8, [X0+184]
	034 Move V0, [X8+12]
	035 NotImplemented "Instruction SCVTF not yet implemented."
	036 NotImplemented "Instruction FDIV not yet implemented."
	037 NotImplemented "Instruction FDIV not yet implemented."
	038 NotImplemented "Instruction FDIV not yet implemented."
	039 Compare W9, 0
	040 JumpIfNotEqual {44}
	041 Call 0x1C17DFC
	042 Move X8, [X19]
	043 Move X8, [X8+184]
	044 Move W10, 0x7F800000
	045 NotImplemented "Instruction FCMP not yet implemented."
	046 Move S0, W10
	047 NotImplemented "Instruction FCVTZS not yet implemented."
	048 Move W11, 0x80000000
	049 NotImplemented "Instruction CSET not yet implemented."
	050 NotImplemented "Instruction FCMP not yet implemented."
	051 NotImplemented "Instruction CSEL not yet implemented."
	052 NotImplemented "Instruction FCMP not yet implemented."
	053 NotImplemented "Instruction FCVTZS not yet implemented."
	054 Subtract W9, W9, W10
	055 NotImplemented "Instruction CSET not yet implemented."
	056 NotImplemented "Instruction FCMP not yet implemented."
	057 NotImplemented "Instruction CSEL not yet implemented."
	058 NotImplemented "Instruction FCMP not yet implemented."
	059 NotImplemented "Instruction FCVTZS not yet implemented."
	060 Subtract W10, W12, W10
	061 NotImplemented "Instruction CSET not yet implemented."
	062 NotImplemented "Instruction FCMP not yet implemented."
	063 NotImplemented "Instruction CSEL not yet implemented."
	064 Subtract W11, W11, W12
	065 Move W13, [X8]
	066 Move W12, [X8+4]
	067 Move W8, [X8+8]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 NotImplemented "Instruction CINC not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Add W0, W11, W13
	072 NotImplemented "Instruction CINC not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 NotImplemented "Instruction CINC not yet implemented."
	075 Add W1, W10, W11
	076 Add W2, W9, W8
	077 Call AreaOfInterest.ClampCellCoords, X0, X1, X2
	078 Move X20, [X31+64]
	079 Move X19, [X31+72]
	080 Move X30, [X31+48]
	081 Move D9, [X31+32]
	082 Move D8, [X31+40]
	083 Move D11, [X31+16]
	084 Move D10, [X31+24]
	085 And X1, X1, 0
	086 Move D13, [X31+80]
	087 Move D12, [X31+88]
	088 Return X0

Method: System.ValueTuple`3<System.Int32, System.Int32, System.Int32> ToCellCoords(System.Int32 index)

Disassembly:
	0x01ECC2A8 CSET W1, EQ
	0x01ECC2AC MOV X0, X19
	0x01ECC2B0 MOV X2, X31
	0x01ECC2B4 BL 0x1EC536C
	0x01ECC2B8 ADRP X8, 0x222B000
	0x01ECC2BC LDR X8, [X8 + 0xFD8]
	0x01ECC2C0 CMP W21, W20
	0x01ECC2C4 CSET W1, EQ
	0x01ECC2C8 ADD X0, X31, 0xC
	0x01ECC2CC LDR X2, [X8]
	0x01ECC2D0 STRH W31, [X31 + 0xC]
	0x01ECC2D4 BL 0x242D570
	0x01ECC2D8 LDRH W8, [X31 + 0xC]
	0x01ECC2DC STRH W8, [X19 + 0x1D4]
	0x01ECC2E0 LDP X20, X19, [X31 + 0x30]
	0x01ECC2E4 LDP X22, X21, [X31 + 0x20]
	0x01ECC2E8 LDR X30, [X31 + 0x10]
	0x01ECC2EC ADD X31, X31, 0x40
	0x01ECC2F0 RET
	0x01ECC2F4 BL 0x1C16F20
	0x01ECC2F8 STR X30, [X31 - 0x20]!
	0x01ECC2FC STP X20, X19, [X31 + 0x10]
	0x01ECC300 ADRP X20, 0x250D000
	0x01ECC304 LDRB W8, [X20 + 0x4CD]
	0x01ECC308 MOV X19, X0
	0x01ECC30C TBNZ X8, 0x0, 0x1ECC324
	0x01ECC310 ADRP X0, 0x2232000
	0x01ECC314 LDR X0, [X0 + 0xA90]
	0x01ECC318 BL 0x1C16CF4
	0x01ECC31C MOVZ W8, 0x1
	0x01ECC320 STRB W8, [X20 + 0x4CD]
	0x01ECC324 LDR X19, [X19 + 0x40]
	0x01ECC328 CBZ X19, 0x1ECC398
	0x01ECC32C ADRP X10, 0x2232000
	0x01ECC330 LDR X8, [X19]
	0x01ECC334 LDR X10, [X10 + 0xA90]
	0x01ECC338 LDRH W9, [X8 + 0x12E]
	0x01ECC33C LDR X1, [X10]
	0x01ECC340 CBZ X9, 0x1ECC364
	0x01ECC344 LDR X10, [X8 + 0xB0]
	0x01ECC348 ADD X10, X10, 0x8
	0x01ECC34C LDUR X11, [X10 - 0x8]
	0x01ECC350 CMP X11, X1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x250E000
	007 Move X20, 0x2233000
	008 Move W8, [X21+1217]
	009 Move X20, [X20+2720]
	010 Move W19, W0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x2233000
	016 Move X0, [X0+2720]
	017 Call 0x1C17CF4
	018 Move X0, 0x2234000
	019 Move X0, [X0+3440]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+1217], W8
	023 Move X0, [X20]
	024 Move X21, 0x2234000
	025 Subtract W19, W19, 1
	026 Move W8, [X0+224]
	027 Move X21, [X21+3440]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X20]
	032 Move X8, [X0+184]
	033 Move X4, [X21]
	034 Add X0, X31, 0
	035 Move W9, [X8]
	036 Move W8, [X8+4]
	037 Move [X31+8], W31
	038 Move [X31], X31
	039 Multiply W8, W8, W9
	040 NotImplemented "Instruction SDIV not yet implemented."
	041 NotImplemented "Instruction MSUB not yet implemented."
	042 NotImplemented "Instruction SDIV not yet implemented."
	043 NotImplemented "Instruction MSUB not yet implemented."
	044 Call ValueTuple`3<Int32, Int32, Int32>..ctor, X0, X1, X2, X3
	045 Move X0, [X31]
	046 Move W1, [X31+8]
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X30, [X31+16]
	050 Move X21, [X31+24]
	051 Add X31, X31, 48
	052 Return X0

Method: UnityEngine.Vector3 ToCellCenter(System.Int32 index)

Disassembly:
	0x01ECC354 B.EQ 0x1ECC374
	0x01ECC358 SUBS X9, X9, 0x1
	0x01ECC35C ADD X10, X10, 0x10
	0x01ECC360 B.NE 0x1ECC34C
	0x01ECC364 MOVZ W2, 0x2
	0x01ECC368 MOV X0, X19
	0x01ECC36C BL 0x1C5C788
	0x01ECC370 B 0x1ECC384
	0x01ECC374 LDR W9, [X10]
	0x01ECC378 ADD W9, W9, 0x2
	0x01ECC37C ADD X8, X8, W9, 0x4, SXTW
	0x01ECC380 ADD X0, X8, 0x138
	0x01ECC384 LDP X2, X1, [X0]
	0x01ECC388 MOV X0, X19
	0x01ECC38C LDP X20, X19, [X31 + 0x10]
	0x01ECC390 LDR X30, [X31], #0x20
	0x01ECC394 BR X2
	0x01ECC398 BL 0x1C16F20
	0x01ECC39C STR X1, [X0 + 0x1A8]
	0x01ECC3A0 RET
	0x01ECC3A4 STR X30, [X31 - 0x10]!
	0x01ECC3A8 LDR X8, [X0]
	0x01ECC3AC LDR X9, [X8 + 0x268]
	0x01ECC3B0 LDR X1, [X8 + 0x270]
	0x01ECC3B4 BLR X9
	0x01ECC3B8 AND X0, X0, 0x0
	0x01ECC3BC LDR X30, [X31], #0x10
	0x01ECC3C0 RET
	0x01ECC3C4 STR X30, [X31 - 0x10]!
	0x01ECC3C8 LDR X8, [X0 + 0x1A8]
	0x01ECC3CC CBZ X8, 0x1ECC3DC
	0x01ECC3D0 LDRSH W0, [X8 + 0x1A]
	0x01ECC3D4 LDR X30, [X31], #0x10
	0x01ECC3D8 RET
	0x01ECC3DC BL 0x1C16F20
	0x01ECC3E0 STP X30, X21, [X31 - 0x20]!
	0x01ECC3E4 STP X20, X19, [X31 + 0x10]
	0x01ECC3E8 ADRP X21, 0x250D000
	0x01ECC3EC LDRB W8, [X21 + 0x4CE]
	0x01ECC3F0 MOV W20, W2
	0x01ECC3F4 MOV X19, X0
	0x01ECC3F8 TBNZ X8, 0x0, 0x1ECC410
	0x01ECC3FC ADRP X0, 0x2232000
	0x01ECC400 LDR X0, [X0 + 0xA90]
	0x01ECC404 BL 0x1C16CF4
	0x01ECC408 MOVZ W8, 0x1
	0x01ECC40C STRB W8, [X21 + 0x4CE]
	0x01ECC410 LDR X21, [X19 + 0x40]
	0x01ECC414 STR X31, [X19 + 0x1A8]
	0x01ECC418 CBZ X21, 0x1ECC490
	0x01ECC41C ADRP X10, 0x2232000
	0x01ECC420 LDR X8, [X21]
	0x01ECC424 LDR X10, [X10 + 0xA90]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x250E000
	005 Move W8, [X20+1218]
	006 Move W19, W0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2233000
	012 Move X0, [X0+2720]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1218], W8
	016 Add W31, W19, 1
	017 Move X20, 0x2233000
	018 Move X20, [X20+2720]
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move W0, W19
	025 Call AreaOfInterest.ToCellCoords, X0
	026 Move X8, [X20]
	027 Move X9, X0
	028 ShiftRight X9, 32
	029 And X9, X9, 0x7FFFFFFF
	030 Move X8, [X8+184]
	031 Move W10, [X8]
	032 Move W11, [X8+4]
	033 Move W8, [X8+8]
	034 Move W12, [X8+12]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CINC not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CINC not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CINC not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CINC not yet implemented."
	043 Subtract W10, W0, W10
	044 Subtract W9, W9, W11
	045 Subtract W8, W1, W8
	046 Multiply W10, W10, W12
	047 Multiply W9, W9, W12
	048 Multiply W8, W8, W12
	049 Add W10, W10, W13
	050 Add W9, W9, W13
	051 Add W8, W8, W13
	052 NotImplemented "Instruction SCVTF not yet implemented."
	053 NotImplemented "Instruction SCVTF not yet implemented."
	054 NotImplemented "Instruction SCVTF not yet implemented."
	055 Move S0, W31
	056 Move S1, W31
	057 Move S2, W31
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 Return X0

Method: System.Int32 ToCell(UnityEngine.Vector3 position)

Disassembly:
	0x01ECC428 LDRH W9, [X8 + 0x12E]
	0x01ECC42C LDR X1, [X10]
	0x01ECC430 CBZ X9, 0x1ECC454
	0x01ECC434 LDR X10, [X8 + 0xB0]
	0x01ECC438 ADD X10, X10, 0x8
	0x01ECC43C LDUR X11, [X10 - 0x8]
	0x01ECC440 CMP X11, X1
	0x01ECC444 B.EQ 0x1ECC464
	0x01ECC448 SUBS X9, X9, 0x1
	0x01ECC44C ADD X10, X10, 0x10
	0x01ECC450 B.NE 0x1ECC43C
	0x01ECC454 MOVZ W2, 0x10
	0x01ECC458 MOV X0, X21
	0x01ECC45C BL 0x1C5C788
	0x01ECC460 B 0x1ECC474
	0x01ECC464 LDR W9, [X10]
	0x01ECC468 ADD W9, W9, 0x10
	0x01ECC46C ADD X8, X8, W9, 0x4, SXTW
	0x01ECC470 ADD X0, X8, 0x138
	0x01ECC474 LDP X8, X2, [X0]
	0x01ECC478 MOV X0, X21
	0x01ECC47C MOV W1, W20
	0x01ECC480 BLR X8
	0x01ECC484 LDP X20, X19, [X31 + 0x10]
	0x01ECC488 LDP X30, X21, [X31], #0x20
	0x01ECC48C RET
	0x01ECC490 BL 0x1C16F20
	0x01ECC494 CMP W1, 0x1
	0x01ECC498 MOV X20, X0
	0x01ECC49C B.NE 0x1ECC534
	0x01ECC4A0 MOV X0, X20
	0x01ECC4A4 BL 0x3EB1AD0
	0x01ECC4A8 MOV X20, X0

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x250E000
	008 Move X19, 0x2233000
	009 Move W8, [X20+1219]
	010 Move X19, [X19+2720]
	011 Move V8, V2
	012 Move V9, V1
	013 Move V10, V0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x2233000
	019 Move X0, [X0+2720]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1219], W8
	023 Move X0, [X19]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move V0, V10
	029 Move V1, V9
	030 Move V2, V8
	031 Call AreaOfInterest.ToCellCoords, X0
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X30, [X31+24]
	035 Move D9, [X31+8]
	036 Move D8, [X31+16]
	037 Move X8, X0
	038 ShiftRight X8, 32
	039 And X8, X8, 0x7FFFFFFF
	040 Move X2, X1
	041 Move W1, W8
	042 Move V10, [X31+48]
	043 Call AreaOfInterest.ToCell, X0, X1, X2
	044 Return X0

Method: System.Int32 ToCell(System.Int32 x, System.Int32 y, System.Int32 z)

Disassembly:
	0x01ECC138 STR V0, [X31]
	0x01ECC13C BL 0x1EFF1B4
	0x01ECC140 LDR X8, [X19 + 0x28]
	0x01ECC144 LDR X9, [X31 + 0x18]
	0x01ECC148 CMP X8, X9
	0x01ECC14C B.NE 0x1ECC15C
	0x01ECC150 LDP X30, X19, [X31 + 0x20]
	0x01ECC154 ADD X31, X31, 0x30
	0x01ECC158 RET
	0x01ECC15C BL 0x3EB1B20
	0x01ECC160 LDR X0, [X0 + 0x130]
	0x01ECC164 MOV X5, X31
	0x01ECC168 B 0x1EFF8A8
	0x01ECC16C SUB X31, X31, 0x40
	0x01ECC170 STR X30, [X31 + 0x10]
	0x01ECC174 STP X22, X21, [X31 + 0x20]
	0x01ECC178 STP X20, X19, [X31 + 0x30]
	0x01ECC17C ADRP X21, 0x250D000
	0x01ECC180 ADRP X20, 0x222A000
	0x01ECC184 LDRB W8, [X21 + 0x4CC]
	0x01ECC188 LDR X20, [X20 + 0x398]
	0x01ECC18C MOV X19, X0
	0x01ECC190 TBNZ X8, 0x0, 0x1ECC1E4
	0x01ECC194 ADRP X0, 0x222A000
	0x01ECC198 LDR X0, [X0 + 0x398]
	0x01ECC19C BL 0x1C16CF4
	0x01ECC1A0 ADRP X0, 0x222B000
	0x01ECC1A4 LDR X0, [X0 + 0xFD8]
	0x01ECC1A8 BL 0x1C16CF4
	0x01ECC1AC ADRP X0, 0x222B000
	0x01ECC1B0 LDR X0, [X0 + 0xBF0]
	0x01ECC1B4 BL 0x1C16CF4
	0x01ECC1B8 ADRP X0, 0x222B000
	0x01ECC1BC LDR X0, [X0 + 0xBF8]
	0x01ECC1C0 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x250E000
	008 Move X22, 0x2233000
	009 Move W8, [X23+1220]
	010 Move X22, [X22+2720]
	011 Move W19, W2
	012 Move W20, W1
	013 Move W21, W0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x2233000
	019 Move X0, [X0+2720]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+1220], W8
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move W0, W21
	029 Move W1, W20
	030 Move W2, W19
	031 Call AreaOfInterest.ClampCellCoords, X0, X1, X2
	032 Move X8, [X22]
	033 Move X10, X0
	034 ShiftRight X10, 32
	035 And X10, X10, 0x7FFFFFFF
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X8, [X8+184]
	041 Move W8, [X8]
	042 Move W9, [X8+4]
	043 NotImplemented "Instruction MADD not yet implemented."
	044 NotImplemented "Instruction MADD not yet implemented."
	045 Add W0, W8, 1
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Return X0

Method: System.ValueTuple`3<System.Int32, System.Int32, System.Int32> ClampCellCoords(System.Int32 x, System.Int32 y, System.Int32 z)

Disassembly:
	0x01ECC1C4 ADRP X0, 0x222A000
	0x01ECC1C8 LDR X0, [X0 + 0xE40]
	0x01ECC1CC BL 0x1C16CF4
	0x01ECC1D0 ADRP X0, 0x222C000
	0x01ECC1D4 LDR X0, [X0 + 0x28]
	0x01ECC1D8 BL 0x1C16CF4
	0x01ECC1DC MOVZ W8, 0x1
	0x01ECC1E0 STRB W8, [X21 + 0x4CC]
	0x01ECC1E4 LDR X0, [X20]
	0x01ECC1E8 STR X31, [X31 + 0x18]
	0x01ECC1EC ADRP X20, 0x222C000
	0x01ECC1F0 LDR W8, [X0 + 0xE0]
	0x01ECC1F4 LDR X20, [X20 + 0x28]
	0x01ECC1F8 CBNZ W8, 0x1ECC200
	0x01ECC1FC BL 0x1C16DFC
	0x01ECC200 MOV X0, X31
	0x01ECC204 BL 0x1E92E48
	0x01ECC208 LDR X3, [X20]
	0x01ECC20C AND X1, X0, 0x0
	0x01ECC210 ADD X2, X31, 0x18
	0x01ECC214 MOV X0, X19
	0x01ECC218 BL 0x2255240
	0x01ECC21C TBZ X0, 0x0, 0x1ECC2E0
	0x01ECC220 LDR X8, [X31 + 0x18]
	0x01ECC224 CBZ X8, 0x1ECC2F4
	0x01ECC228 LDR X9, [X19]
	0x01ECC22C LDR W21, [X8 + 0x18]
	0x01ECC230 MOV X0, X19
	0x01ECC234 LDR X8, [X9 + 0x268]
	0x01ECC238 LDR X1, [X9 + 0x270]
	0x01ECC23C BLR X8
	0x01ECC240 ADRP X8, 0x222A000
	0x01ECC244 LDR X8, [X8 + 0xE40]
	0x01ECC248 MOV X20, X0
	0x01ECC24C LDR X8, [X8]
	0x01ECC250 LDR W9, [X8 + 0xE0]
	0x01ECC254 CBNZ W9, 0x1ECC260
	0x01ECC258 MOV X0, X8
	0x01ECC25C BL 0x1C16DFC
	0x01ECC260 MOV X0, X19
	0x01ECC264 MOV X1, X31
	0x01ECC268 BL 0x1EC0810
	0x01ECC26C CMP W0, 0x2
	0x01ECC270 B.NE 0x1ECC2B8
	0x01ECC274 LDRB W8, [X19 + 0x1D4]
	0x01ECC278 CBZ W8, 0x1ECC2B8
	0x01ECC27C ADRP X8, 0x222B000
	0x01ECC280 LDR X8, [X8 + 0xBF8]
	0x01ECC284 ADD X0, X19, 0x1D4
	0x01ECC288 CMP W21, W20
	0x01ECC28C CSET W22, EQ
	0x01ECC290 LDR X1, [X8]
	0x01ECC294 BL 0x242D58C
	0x01ECC298 AND W8, W0, 0x1
	0x01ECC29C CMP W22, W8
	0x01ECC2A0 B.EQ 0x1ECC2B8
	0x01ECC2A4 CMP W21, W20

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x250E000
	009 Move X23, 0x2233000
	010 Move W8, [X22+1221]
	011 Move X23, [X23+2720]
	012 Move W19, W2
	013 Move W20, W1
	014 Move W21, W0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x2233000
	020 Move X0, [X0+2720]
	021 Call 0x1C17CF4
	022 Move X0, 0x2234000
	023 Move X0, [X0+3440]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+1221], W8
	027 Move X0, [X23]
	028 Move X22, 0x2234000
	029 Move W8, [X0+224]
	030 Move X22, [X22+3440]
	031 Compare W8, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1C17DFC
	034 Move X0, [X23]
	035 Move X8, [X0+184]
	036 Move X4, [X22]
	037 Add X0, X31, 0
	038 Move W9, [X8]
	039 Move W10, [X8+4]
	040 Move W8, [X8+8]
	041 Move [X31+8], W31
	042 Move [X31], X31
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Subtract W9, W9, 1
	045 NotImplemented "Instruction CSEL not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract W11, W10, 1
	048 NotImplemented "Instruction CSEL not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Subtract W9, W8, 1
	053 NotImplemented "Instruction CSEL not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 NotImplemented "Instruction CSEL not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction CSEL not yet implemented."
	058 Call ValueTuple`3<Int32, Int32, Int32>..ctor, X0, X1, X2, X3
	059 Move X0, [X31]
	060 Move W1, [X31+8]
	061 Move X20, [X31+48]
	062 Move X19, [X31+56]
	063 Move X22, [X31+32]
	064 Move X21, [X31+40]
	065 Move X30, [X31+16]
	066 Move X23, [X31+24]
	067 Add X31, X31, 64
	068 Return X0

Method: System.Void .cctor()

Disassembly:
	0x01ECC4C8 LDR X20, [X20]
	0x01ECC4CC BL 0x3EB1AE0
	0x01ECC4D0 ADRP X0, 0x222F000
	0x01ECC4D4 LDR X0, [X0 + 0x8B0]
	0x01ECC4D8 BL 0x1C16D08
	0x01ECC4DC LDR W8, [X0 + 0xE0]
	0x01ECC4E0 CBNZ W8, 0x1ECC4E8
	0x01ECC4E4 BL 0x1C16DFC
	0x01ECC4E8 ADRP X0, 0x2233000
	0x01ECC4EC LDR X0, [X0 + 0xDD8]
	0x01ECC4F0 BL 0x1C16D08
	0x01ECC4F4 MOV X2, X0
	0x01ECC4F8 MOV X0, X19
	0x01ECC4FC MOV X1, X20
	0x01ECC500 LDP X20, X19, [X31 + 0x10]
	0x01ECC504 LDP X30, X21, [X31], #0x20
	0x01ECC508 B 0x2213878
	0x01ECC50C MOVZ W0, 0x8
	0x01ECC510 BL 0x3EB1AF0
	0x01ECC514 LDR X8, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x250E000
	005 Move X20, 0x2233000
	006 Move W8, [X19+1222]
	007 Move X20, [X20+2720]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2233000
	013 Move X0, [X0+2720]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1222], W8
	017 Move X8, [X20]
	018 Move X9, -20840448
	019 Move V0, [X9+149]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X8, [X8+184]
	023 Move [X8], V0
	024 Move X30, [X31+32]
	025 Return 

Method: System.Int32 <ClampCellCoords>g__Clamp|15_0(System.Int32 v, System.Int32 max)

Disassembly:
	0x01ECC4AC ADRP X0, 0x2227000
	0x01ECC4B0 LDR X0, [X0 + 0x7D0]
	0x01ECC4B4 BL 0x1C16D08
	0x01ECC4B8 LDR X8, [X20]
	0x01ECC4BC LDR X1, [X8]
	0x01ECC4C0 BL 0x1C17270
	0x01ECC4C4 TBZ X0, 0x0, 0x1ECC50C

ISIL:
	001 Move TEMP, X0
	002 And TEMP, TEMP, -2147483648
	003 Compare TEMP, -2147483648
	004 JumpIfEqual {9}
	005 Subtract W8, W1, 1
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 Return X0
	009 Move W0, W31
	010 Return X0

