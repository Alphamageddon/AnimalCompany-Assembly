Type: Fusion.NetworkArray`1/Enumerator

Method: T get_Current()

Disassembly:
	0x02BB764C TBNZ X8, 0x0, 0x2BB7654
	0x02BB7650 BL 0x1C5C684
	0x02BB7654 LDR X8, [X0 + 0xC0]
	0x02BB7658 ADD X1, X31, 0xC
	0x02BB765C LDR X0, [X8 + 0x10]
	0x02BB7660 BL 0x1C16E04
	0x02BB7664 LDP X20, X19, [X31 + 0x10]
	0x02BB7668 LDR X30, [X31], #0x20
	0x02BB766C RET
	0x02BB7670 BL 0x1C16F20
	0x02BB7674 STP X30, X19, [X31 - 0x10]!
	0x02BB7678 LDR X8, [X0]
	0x02BB767C CBZ X8, 0x2BB76AC
	0x02BB7680 LDR W9, [X0 + 0xC]
	0x02BB7684 LDR W8, [X8 + 0x1C]
	0x02BB7688 MOV X19, X0
	0x02BB768C CMP W9, W8
	0x02BB7690 B.EQ 0x2BB769C
	0x02BB7694 MOV X0, X31
	0x02BB7698 BL 0x339E09C
	0x02BB769C STR W31, [X19 + 0x8]
	0x02BB76A0 STRH W31, [X19 + 0x10]
	0x02BB76A4 LDP X30, X19, [X31], #0x10
	0x02BB76A8 RET
	0x02BB76AC BL 0x1C16F20
	0x02BB76B0 STR X30, [X31 - 0x10]!
	0x02BB76B4 STR X1, [X0]
	0x02BB76B8 STR W31, [X0 + 0x8]
	0x02BB76BC CBZ X1, 0x2BB76D4
	0x02BB76C0 LDR W8, [X1 + 0x38]
	0x02BB76C4 STP X31, X31, [X0 + 0x10]
	0x02BB76C8 STR W8, [X0 + 0xC]
	0x02BB76CC LDR X30, [X31], #0x10
	0x02BB76D0 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X0
	006 Move X0, [X1+32]
	007 Move W21, [X20]
	008 Move X19, X1
	009 Move W8, [X0+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {15}
	014 Call 0x1C5D684
	015 Move W8, [X20+16]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X0, [X19+32]
	018 Move W19, [X20]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move X8, [X0+192]
	026 Add X0, X20, 8
	027 Move W1, W19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X2, [X8+32]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call 0x240BCF4, X0, X1
	034 Return X0
	035 Move X0, 0x1547000
	036 Move X0, [X0+3960]
	037 Call 0x1C17D08
	038 Call 0x1C17F10
	039 Move X1, X31
	040 Move X20, X0
	041 Call IndexOutOfRangeException..ctor, X0
	042 Move X0, X20
	043 Move X1, X19
	044 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x02BB76D4 BL 0x1C16F20
	0x02BB76D8 RET
	0x02BB76DC STR X30, [X31 - 0x20]!
	0x02BB76E0 STP X20, X19, [X31 + 0x10]
	0x02BB76E4 LDR X10, [X0]
	0x02BB76E8 CBZ X10, 0x2BB7788
	0x02BB76EC LDR W8, [X0 + 0xC]
	0x02BB76F0 LDR W9, [X10 + 0x38]
	0x02BB76F4 CMP W8, W9
	0x02BB76F8 B.NE 0x2BB778C
	0x02BB76FC LDR W8, [X0 + 0x8]
	0x02BB7700 LDR W9, [X10 + 0x24]
	0x02BB7704 CMP W8, W9
	0x02BB7708 B.GE 0x2BB7740
	0x02BB770C LDR X10, [X10 + 0x18]
	0x02BB7710 CBZ X10, 0x2BB7788
	0x02BB7714 LDR W11, [X10 + 0x18]
	0x02BB7718 MOVZ W12, 0x18
	0x02BB771C CMP W8, W11
	0x02BB7720 B.CS 0x2BB7784
	0x02BB7724 SMADDL X13, X8, X12, X10
	0x02BB7728 LDR W13, [X13 + 0x20]
	0x02BB772C TBZ X13, 0x1F, 0x2BB7754
	0x02BB7730 ADD W8, W8, 0x1
	0x02BB7734 CMP W8, W9
	0x02BB7738 STR W8, [X0 + 0x8]
	0x02BB773C B.LT 0x2BB771C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {15}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move X8, X0
	015 Move X8, [X8+192]
	016 Move X0, X20
	017 Move X1, [X8+48]
	018 Call 0x2BB764C, X0
	019 And W8, W0, 1
	020 Move [X31+12], W8
	021 Move X0, [X19+32]
	022 Move W8, [X0+309]
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {28}
	027 Call 0x1C5D684
	028 Move X8, [X0+192]
	029 Add X1, X31, 12
	030 Move X0, [X8+40]
	031 Call 0x1C17E04
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Void .ctor(Fusion.NetworkArray`1<T> array)

Disassembly:
	0x02BB7740 MOV W8, W31
	0x02BB7744 ADD W9, W9, 0x1
	0x02BB7748 STR W9, [X0 + 0x8]
	0x02BB774C STP X31, X31, [X0 + 0x10]
	0x02BB7750 B 0x2BB7774
	0x02BB7754 SXTW X9, W8
	0x02BB7758 MOVZ W11, 0x18

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0], W8
	005 Move X8, [X1+16]
	006 Move V0, [X1]
	007 Move [X0+24], X8
	008 Move [X0+8], V0
	009 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x02BB775C MADD X9, X9, X11, X10
	0x02BB7760 LDUR V0, [X9 + 0x28]
	0x02BB7764 ADD W8, W8, 0x1
	0x02BB7768 STR W8, [X0 + 0x8]
	0x02BB776C MOVZ W8, 0x1
	0x02BB7770 STR V0, [X0 + 0x1]
	0x02BB7774 LDP X20, X19, [X31 + 0x10]
	0x02BB7778 MOV W0, W8
	0x02BB777C LDR X30, [X31], #0x20
	0x02BB7780 RET
	0x02BB7784 BL 0x1C16F28
	0x02BB7788 BL 0x1C16F20
	0x02BB778C ADRP X0, 0x153C000
	0x02BB7790 LDR X0, [X0 + 0x5B0]
	0x02BB7794 MOV X19, X1
	0x02BB7798 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0]
	005 Move X19, X0
	006 Add W20, W8, 1
	007 Move [X0], W20
	008 Move X0, [X1+32]
	009 Move W8, [X0+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {15}
	014 Call 0x1C5D684
	015 Move W8, [X19+16]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 NotImplemented "Instruction CSET not yet implemented."
	020 Move X30, [X31+32]
	021 Return X0

Method: System.Void Reset()

Disassembly:
	0x02BB779C BL 0x1C16F10
	0x02BB77A0 MOV X20, X0
	0x02BB77A4 ADRP X0, 0x1566000

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0], W8
	005 Return 

Method: System.Void Dispose()

Disassembly:
	0x02BB77A8 LDR X0, [X0 + 0x288]
	0x02BB77AC BL 0x1C16D08
	0x02BB77B0 MOV X1, X0
	0x02BB77B4 MOV X0, X20
	0x02BB77B8 MOV X2, X31

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0+8], X31
	005 Move [X0+16], X31
	006 Move [X0+24], X31
	007 Move [X0], W8
	008 Return 

