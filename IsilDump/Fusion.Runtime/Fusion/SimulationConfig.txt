Type: Fusion.SimulationConfig

Method: System.Boolean get_SchedulingEnabled()

Disassembly:
	0x01ED3A50 ADD X10, X10, 0x10
	0x01ED3A54 B.NE 0x1ED3A40
	0x01ED3A58 MOVZ W2, 0x1D

ISIL:
	001 Move W8, [X0+20]
	002 And W0, W8, 1
	003 Return X0

Method: System.Boolean get_AreaOfInterestEnabled()

Disassembly:
	0x01ED5BCC BL 0x1C16CF4
	0x01ED5BD0 ADRP X0, 0x2229000
	0x01ED5BD4 LDR X0, [X0 + 0x798]
	0x01ED5BD8 BL 0x1C16CF4
	0x01ED5BDC MOVZ W8, 0x1

ISIL:
	001 Move W8, [X0+20]
	002 Move W9, 3
	003 NotImplemented "Instruction BICS not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: System.Boolean get_SchedulingWithoutAOI()

Disassembly:
	0x01ED856C MOV X1, X20
	0x01ED8570 LDR X2, [X8]
	0x01ED8574 BL 0x2A689C0
	0x01ED8578 LDR X0, [X19 + 0xE0]
	0x01ED857C CBZ X0, 0x1ED85A4
	0x01ED8580 ADRP X8, 0x2227000

ISIL:
	001 Move W8, [X0+20]
	002 Move W9, 3
	003 NotImplemented "Instruction BICS not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 And W0, W8, W9
	006 Return X0

Method: System.Int32 get_InputTotalWordCount()

Disassembly:
	0x01ECF6BC MOVZ W2, 0x23
	0x01ECF6C0 MOV X0, X19
	0x01ECF6C4 BL 0x1C5C788

ISIL:
	001 Move W8, [X0+16]
	002 Add W0, W8, 4
	003 Return X0

Method: Fusion.SimulationConfig Init(System.Nullable`1<System.Int32> playerCountOverride, System.Nullable`1<System.Int32> inputWordCount)

Disassembly:
	0x01ED8584 LDR X8, [X8 + 0xC70]
	0x01ED8588 MOV X1, X20
	0x01ED858C LDR X2, [X8]
	0x01ED8590 BL 0x2DB96D0
	0x01ED8594 LDP X20, X19, [X31 + 0x20]
	0x01ED8598 LDP X30, X21, [X31 + 0x10]
	0x01ED859C ADD X31, X31, 0x30
	0x01ED85A0 RET
	0x01ED85A4 BL 0x1C16F20
	0x01ED85A8 SUB X31, X31, 0x30
	0x01ED85AC STP X30, X21, [X31 + 0x10]
	0x01ED85B0 STP X20, X19, [X31 + 0x20]
	0x01ED85B4 ADRP X21, 0x2501000
	0x01ED85B8 LDRB W8, [X21 + 0x526]
	0x01ED85BC MOV X19, X1
	0x01ED85C0 MOV X20, X0
	0x01ED85C4 TBNZ X8, 0x0, 0x1ED85DC
	0x01ED85C8 ADRP X0, 0x221F000
	0x01ED85CC LDR X0, [X0 + 0xFD8]
	0x01ED85D0 BL 0x1C16CF4
	0x01ED85D4 MOVZ W8, 0x1
	0x01ED85D8 STRB W8, [X21 + 0x526]
	0x01ED85DC AND X1, X19, 0x0
	0x01ED85E0 MOV X0, X20
	0x01ED85E4 MOV W2, W31
	0x01ED85E8 MOV W3, W31
	0x01ED85EC BL 0x1ED0A18
	0x01ED85F0 CBZ X0, 0x1ED8620
	0x01ED85F4 ADRP X9, 0x221F000
	0x01ED85F8 LDR W8, [X0 + 0x34]
	0x01ED85FC LDR X9, [X9 + 0xFD8]
	0x01ED8600 ADD X0, X31, 0xC
	0x01ED8604 STRH W31, [X31 + 0xC]
	0x01ED8608 CMP W8, 0x0
	0x01ED860C LDR X2, [X9]
	0x01ED8610 CSET W1, EQ
	0x01ED8614 BL 0x242D570
	0x01ED8618 LDRH W0, [X31 + 0xC]
	0x01ED861C B 0x1ED8624
	0x01ED8620 STRH W31, [X31 + 0xC]
	0x01ED8624 LDP X20, X19, [X31 + 0x20]
	0x01ED8628 LDP X30, X21, [X31 + 0x10]
	0x01ED862C ADD X31, X31, 0x30
	0x01ED8630 RET
	0x01ED8634 STR X30, [X31 - 0x20]!
	0x01ED8638 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X1
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x2502000
	009 Move W8, [X22+1296]
	010 Move X20, X2
	011 Move X19, X1
	012 Move X21, X0
	013 Move [X31+8], X2
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x221F000
	019 Move X0, [X0+3832]
	020 Call 0x1C17CF4
	021 Move X0, 0x221F000
	022 Move X0, [X0+3840]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+1296], W8
	026 Move X22, 0x221F000
	027 Move X22, [X22+3840]
	028 Move X0, X21
	029 Call SimulationConfig.Copy, X0
	030 And W31, W19, 255
	031 Move X19, X0
	032 Move X1, [X22]
	033 Add X0, X31, 24
	034 Call Nullable`1<Int32>.get_Value, X0
	035 Compare X19, 0
	036 JumpIfEqual {54}
	037 Move [X19+36], W0
	038 Move W20, [X31+8]
	039 And W31, W20, 255
	040 Move X1, [X22]
	041 Add X0, X31, 8
	042 Call Nullable`1<Int32>.get_Value, X0
	043 Compare X19, 0
	044 JumpIfEqual {54}
	045 Move [X19+16], W0
	046 Move X0, X19
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X30, [X31+16]
	052 Add X31, X31, 64
	053 Return X0
	054 Call 0x1C17F20

Method: Fusion.SimulationConfig Copy()

Disassembly:
	0x01ED863C CBZ X1, 0x1ED8678
	0x01ED8640 MOV X20, X1
	0x01ED8644 MOV X19, X0
	0x01ED8648 ADD X1, X0, 0x48
	0x01ED864C MOV X0, X20
	0x01ED8650 MOV X2, X31
	0x01ED8654 BL 0x1EC7238
	0x01ED8658 ADD X1, X19, 0x60
	0x01ED865C MOV X0, X20
	0x01ED8660 MOV X2, X31
	0x01ED8664 BL 0x1EC7238
	0x01ED8668 STR X31, [X19 + 0x78]
	0x01ED866C LDP X20, X19, [X31 + 0x10]
	0x01ED8670 LDR X30, [X31], #0x20
	0x01ED8674 RET
	0x01ED8678 BL 0x1C16F20
	0x01ED867C SUB X31, X31, 0xC0
	0x01ED8680 STR X30, [X31 + 0x80]
	0x01ED8684 STP X24, X23, [X31 + 0x90]
	0x01ED8688 STP X22, X21, [X31 + 0xA0]
	0x01ED868C STP X20, X19, [X31 + 0xB0]
	0x01ED8690 MRS X20, 0xC000
	0x01ED8694 LDR X8, [X20 + 0x28]
	0x01ED8698 MOVI V0.2D, 0x0
	0x01ED869C MOV X19, X0
	0x01ED86A0 ADD X21, X0, 0x98
	0x01ED86A4 STR X8, [X31 + 0x78]
	0x01ED86A8 STR W31, [X31 + 0x70]
	0x01ED86AC STP V0, V0, [X31 + 0x50]
	0x01ED86B0 LDRB W8, [X0 + 0xA8]
	0x01ED86B4 CMP W8, 0x1
	0x01ED86B8 B.NE 0x1ED86D8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2502000
	005 Move W8, [X20+1297]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2228000
	012 Move X0, [X0+968]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1297], W8
	016 Move X0, X19
	017 Move X1, X31
	018 Call Object.MemberwiseClone, X0
	019 Compare X0, 0
	020 JumpIfEqual {32}
	021 Move X9, 0x2228000
	022 Move X9, [X9+968]
	023 Move X8, [X0]
	024 Move X1, [X9]
	025 Move W10, [X8+304]
	026 Move W9, [X1+304]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X8, [X8+200]
	029 Add X8, X8, X9
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0
	036 Call 0x1C181E0

Method: System.Void .ctor()

Disassembly:
	0x01ED86BC ADRP X23, 0x2500000
	0x01ED86C0 ADRP X22, 0x2223000
	0x01ED86C4 LDRB W8, [X23 + 0xF18]
	0x01ED86C8 LDR X22, [X22 + 0x708]
	0x01ED86CC CBZ W8, 0x1ED875C
	0x01ED86D0 LDR X23, [X19 + 0xA0]
	0x01ED86D4 B 0x1ED8780
	0x01ED86D8 ADD X8, X31, 0x8
	0x01ED86DC MOV X0, X31
	0x01ED86E0 BL 0x1E37474
	0x01ED86E4 LDR X8, [X31 + 0x18]
	0x01ED86E8 LDUR V0, [X31 + 0x8]
	0x01ED86EC STR X8, [X31 + 0x30]
	0x01ED86F0 STR V0, [X31 + 0x2]
	0x01ED86F4 STR X8, [X21 + 0x10]
	0x01ED86F8 STR V0, [X21]
	0x01ED86FC LDR X0, [X19 + 0x10]
	0x01ED8700 CBZ X0, 0x1ED88B8
	0x01ED8704 MOV X1, X31
	0x01ED8708 BL 0x1EC03FC
	0x01ED870C TBZ X0, 0x0, 0x1ED8890
	0x01ED8710 LDR X0, [X19 + 0x10]
	0x01ED8714 CBZ X0, 0x1ED88B8
	0x01ED8718 MOV X1, X31
	0x01ED871C BL 0x1EC0864
	0x01ED8720 LDR X9, [X19 + 0x10]
	0x01ED8724 CBZ X9, 0x1ED88B8
	0x01ED8728 ADD X8, X31, 0x20
	0x01ED872C TBZ X0, 0x0, 0x1ED8858
	0x01ED8730 MOV X0, X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2502000
	006 Move X21, 0x2227000
	007 Move W8, [X20+1298]
	008 Move X21, [X21+360]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2227000
	015 Move X0, [X0+360]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1298], W8
	019 Move W20, 1
	020 Move W8, 10
	021 Move [X19+20], W20
	022 Move [X19+36], W8
	023 Move X0, [X21]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X31
	029 Call TickRate.get_Default
	030 Move [X19+40], X0
	031 Move [X19+48], X1
	032 Move [X19+61], W20
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Call Object..ctor, X0
	040 Return 

