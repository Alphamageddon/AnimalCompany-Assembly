Type: Fusion.CloudServicesMetadata

Method: Fusion.NetworkRunnerInitializeArgs get_RunnerInitializeArgs()

Disassembly:
	0x01E6FCC0 CBNZ W8, 0x1E6FCC8
	0x01E6FCC4 BL 0x1C16DFC
	0x01E6FCC8 MOV X0, X20
	0x01E6FCCC MOV X1, X31

ISIL:
	001 Add X1, X0, 16
	002 Move W2, 248
	003 Move X0, X8
	004 Call 0x3EB2AC0
	005 Return X0

Method: System.Void set_RunnerInitializeArgs(Fusion.NetworkRunnerInitializeArgs value)

Disassembly:
	0x01E6FCD0 BL 0x338C698
	0x01E6FCD4 MOV X1, X0
	0x01E6FCD8 CBZ X19, 0x1E6FEC0
	0x01E6FCDC MOV X0, X19
	0x01E6FCE0 MOV X2, X31
	0x01E6FCE4 BL 0x1E7B718

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X0, 16
	003 Move W2, 248
	004 Call 0x3EB2B30
	005 Move X30, [X31+16]
	006 Return 

Method: Fusion.NATPunchStage get_CurrentPunchStage()

Disassembly:
	0x01E6FCE8 MOV W20, W0
	0x01E6FCEC CMP W0, 0x1

ISIL:
	001 Move W0, [X0+264]
	002 Return X0

Method: System.Void set_CurrentPunchStage(Fusion.NATPunchStage value)

Disassembly:
	0x01E6FCF0 B.LT 0x1E6FF4C
	0x01E6FCF4 ADRP X27, 0x228E000

ISIL:
	001 Move [X0+264], W1
	002 Return 

Method: Fusion.JoinProcessStage get_CurrentJoinStage()

Disassembly:
	0x01E6FCF8 LDR X27, [X27 + 0x3A8]
	0x01E6FCFC MOV W21, W31

ISIL:
	001 Move W0, [X0+268]
	002 Return X0

Method: System.Void set_CurrentJoinStage(Fusion.JoinProcessStage value)

Disassembly:
	0x01E6FD00 MOV X28, X31
	0x01E6FD04 LDR X0, [X26]

ISIL:
	001 Move [X0+268], W1
	002 Return 

Method: Fusion.Protocol.ProtocolMessageVersion get_CurrentProtocolMessageVersion()

Disassembly:
	0x01E6FD08 LDR X22, [X25]
	0x01E6FD0C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move W0, [X0+272]
	002 Return X0

Method: System.Void set_CurrentProtocolMessageVersion(Fusion.Protocol.ProtocolMessageVersion value)

Disassembly:
	0x01E6FD10 CBNZ W8, 0x1E6FD18
	0x01E6FD14 BL 0x1C16DFC

ISIL:
	001 Move [X0+272], W1
	002 Return 

Method: Fusion.Protocol.ReflexiveInfo get_RemoteReflexiveInfo()

Disassembly:
	0x01E6FD18 MOV X0, X22
	0x01E6FD1C MOV X1, X31

ISIL:
	001 Move X0, [X0+280]
	002 Return X0

Method: System.Void set_RemoteReflexiveInfo(Fusion.Protocol.ReflexiveInfo value)

Disassembly:
	0x01E6FD20 BL 0x338C698
	0x01E6FD24 MOV X1, X0

ISIL:
	001 Move [X0+280], X1
	002 Return 

Method: Fusion.Sockets.Stun.StunResult get_LocalReflexiveInfo()

Disassembly:
	0x01E6FD28 ADD X3, X31, 0x8
	0x01E6FD2C MOV X0, X19

ISIL:
	001 Move X0, [X0+336]
	002 Return X0

Method: System.Void set_LocalReflexiveInfo(Fusion.Sockets.Stun.StunResult value)

Disassembly:
	0x01E6ECB8 LDR X30, [X31], #0x30
	0x01E6ECBC B 0x262EF7C

ISIL:
	001 Move [X0+336], X1
	002 Return 

Method: System.Byte[] get_UniqueId()

Disassembly:
	0x01E6FD30 MOV W2, W21
	0x01E6FD34 MOV X4, X31

ISIL:
	001 Move X0, [X0+288]
	002 Return X0

Method: System.Void set_UniqueId(System.Byte[] value)

Disassembly:
	0x01E6FD38 BL 0x1E7B788
	0x01E6FD3C LDR X22, [X31 + 0x8]

ISIL:
	001 Move [X0+288], X1
	002 Return 

Method: System.Int32 get_PlayerRef()

Disassembly:
	0x01E6FD40 STR X0, [X31]
	0x01E6FD44 CBZ X22, 0x1E6FE08

ISIL:
	001 Move W0, [X0+296]
	002 Return X0

Method: System.Void set_PlayerRef(System.Int32 value)

Disassembly:
	0x01E6FD48 CBZ X22, 0x1E6FE38
	0x01E6FD4C LDR W8, [X22 + 0x30]

ISIL:
	001 Move [X0+296], W1
	002 Return 

Method: Fusion.Encryption.EncryptionToken get_EncryptionToken()

Disassembly:
	0x01E6FD50 LDR X29, [X22 + 0x28]
	0x01E6FD54 ANDS W31, W8, 0x1C

ISIL:
	001 Move X0, [X0+304]
	002 Return X0

Method: System.Void set_EncryptionToken(Fusion.Encryption.EncryptionToken value)

Disassembly:
	0x01E6FD58 CSET W9, EQ
	0x01E6FD5C ANDS W31, W8, 0x3

ISIL:
	001 Move [X0+304], X1
	002 Return 

Method: System.Void .ctor()

Disassembly:
	0x01E6A290 LDR X9, [X9 + 0xC8]
	0x01E6A294 ADD X9, X9, X10, 0x3, LSL
	0x01E6A298 LDUR X9, [X9 - 0x8]
	0x01E6A29C CMP X9, X8
	0x01E6A2A0 B.EQ 0x1E6A354
	0x01E6A2A4 MOV X0, X20
	0x01E6A2A8 MOV X1, X31
	0x01E6A2AC BL 0x1E5FE44
	0x01E6A2B0 CBZ X19, 0x1E6A3B0
	0x01E6A2B4 STR X0, [X19 + 0x10]
	0x01E6A2B8 MOV X0, X20
	0x01E6A2BC MOV X1, X31
	0x01E6A2C0 BL 0x1E5FE64
	0x01E6A2C4 AND W8, W0, 0x1
	0x01E6A2C8 MOV X0, X20
	0x01E6A2CC MOV X1, X31
	0x01E6A2D0 STRB W8, [X19 + 0x31]
	0x01E6A2D4 BL 0x1E5FE6C
	0x01E6A2D8 AND W8, W0, 0x1
	0x01E6A2DC MOV X0, X20
	0x01E6A2E0 MOV X1, X31
	0x01E6A2E4 STRB W8, [X19 + 0x32]
	0x01E6A2E8 BL 0x1E5FE5C
	0x01E6A2EC STR W0, [X19 + 0x2C]
	0x01E6A2F0 LDR W0, [X20 + 0x58]
	0x01E6A2F4 ADRP X22, 0x2293000
	0x01E6A2F8 ADRP X23, 0x2293000
	0x01E6A2FC LDR X22, [X22 + 0x90]
	0x01E6A300 LDR X23, [X23 + 0x88]
	0x01E6A304 STR W0, [X19 + 0x28]
	0x01E6A308 MOV X0, X20
	0x01E6A30C MOV X1, X31
	0x01E6A310 STR X21, [X19 + 0x18]
	0x01E6A314 BL 0x1E62764
	0x01E6A318 LDR X8, [X22]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2570000
	007 Move X21, 0x2294000
	008 Move X20, 0x2294000
	009 Move W8, [X22+319]
	010 Move X21, [X21+24]
	011 Move X20, [X20+32]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2294000
	018 Move X0, [X0+32]
	019 Call 0x1C17CF4
	020 Move X0, 0x2294000
	021 Move X0, [X0+24]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+319], W8
	025 Move W8, 10
	026 Move TEMP, 0
	027 Not TEMP
	028 Move W9, TEMP
	029 Move [X19+272], W8
	030 Move [X19+296], W9
	031 Move X0, [X21]
	032 Call 0x1C17F10
	033 Move X1, [X20]
	034 Move X20, X0
	035 Call Dictionary`2<Int64, Object>..ctor, X0
	036 Move [X19+328], X20
	037 Move X0, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X1, X31
	043 Move X30, [X31+48]
	044 Call Object..ctor, X0
	045 Return 

Method: System.Void .cctor()

Disassembly:
	0x01E6FD60 CSET W8, NE
	0x01E6FD64 ANDS W8, W9, W8, 0x0
	0x01E6FD68 CSEL X28, X29, X28, NE
	0x01E6FD6C TBZ X8, 0x0, 0x1E6FDFC
	0x01E6FD70 CBZ X22, 0x1E6FE40
	0x01E6FD74 LDR X23, [X27]
	0x01E6FD78 MOV X0, X22
	0x01E6FD7C MOV X1, X23
	0x01E6FD80 BL 0x1C16E00
	0x01E6FD84 CBZ X0, 0x1E6FE58
	0x01E6FD88 LDR X24, [X27]
	0x01E6FD8C MOV X0, X22
	0x01E6FD90 MOV X1, X24
	0x01E6FD94 BL 0x1C16E00
	0x01E6FD98 MOV X23, X0
	0x01E6FD9C CBZ X0, 0x1E6FE48
	0x01E6FDA0 LDR X8, [X23]
	0x01E6FDA4 LDRH W9, [X8 + 0x12E]
	0x01E6FDA8 CBZ X9, 0x1E6FDCC
	0x01E6FDAC LDR X10, [X8 + 0xB0]
	0x01E6FDB0 ADD X10, X10, 0x8
	0x01E6FDB4 LDUR X11, [X10 - 0x8]
	0x01E6FDB8 CMP X11, X24
	0x01E6FDBC B.EQ 0x1E6FDE0
	0x01E6FDC0 SUBS X9, X9, 0x1
	0x01E6FDC4 ADD X10, X10, 0x10
	0x01E6FDC8 B.NE 0x1E6FDB4
	0x01E6FDCC MOV X0, X23
	0x01E6FDD0 MOV X1, X24
	0x01E6FDD4 MOV W2, W31
	0x01E6FDD8 BL 0x1C5C788
	0x01E6FDDC B 0x1E6FDEC
	0x01E6FDE0 LDRSW X9, [X10]
	0x01E6FDE4 ADD X8, X8, X9, 0x4, LSL
	0x01E6FDE8 ADD X0, X8, 0x138
	0x01E6FDEC LDP X8, X1, [X0]
	0x01E6FDF0 MOV X0, X23
	0x01E6FDF4 BLR X8
	0x01E6FDF8 MOV X29, X28
	0x01E6FDFC MOV X22, X29
	0x01E6FE00 STR X29, [X31 + 0x8]
	0x01E6FE04 CBNZ X29, 0x1E6FD48
	0x01E6FE08 MOVZ W23, 0x7
	0x01E6FE0C ADD X0, X31, 0x0
	0x01E6FE10 MOV X1, X31
	0x01E6FE14 BL 0x1E79B10
	0x01E6FE18 CBNZ X22, 0x1E6FEB8
	0x01E6FE1C CMP W23, 0x7
	0x01E6FE20 B.EQ 0x1E6FE28
	0x01E6FE24 CBNZ W23, 0x1E6FF4C
	0x01E6FE28 ADD W21, W21, 0x1
	0x01E6FE2C CMP W21, W20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x256B000
	008 Move X22, 0x228E000
	009 Move X19, 0x228F000
	010 Move X20, 0x228E000
	011 Move X21, 0x228F000
	012 Move W8, [X23+320]
	013 Move X22, [X22+352]
	014 Move X19, [X19+776]
	015 Move X20, [X20+3920]
	016 Move X21, [X21+784]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x228E000
	022 Move X0, [X0+3920]
	023 Call 0x1C17CF4
	024 Move X0, 0x228E000
	025 Move X0, [X0+352]
	026 Call 0x1C17CF4
	027 Move X0, 0x228F000
	028 Move X0, [X0+776]
	029 Call 0x1C17CF4
	030 Move X0, 0x228F000
	031 Move X0, [X0+784]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X23+320], W8
	035 Move X0, [X22]
	036 Call 0x1C17F10
	037 Move X1, [X19]
	038 Move W2, W31
	039 Move X3, X31
	040 Move X19, X0
	041 Call TypedLobby..ctor, X0, X1, X2
	042 Move X8, [X20]
	043 Move X8, [X8+184]
	044 Move [X8], X19
	045 Move X0, [X22]
	046 Call 0x1C17F10
	047 Move X1, [X21]
	048 Move W2, W31
	049 Move X3, X31
	050 Move X19, X0
	051 Call TypedLobby..ctor, X0, X1, X2
	052 Move X8, [X20]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X8, [X8+184]
	056 Move [X8+8], X19
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X30, [X31+48]
	060 Move X23, [X31+56]
	061 Return 

