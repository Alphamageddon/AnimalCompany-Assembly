Type: Fusion.NetworkRunner/SpawnArgs

Method: System.Void .ctor(in Fusion.NetworkRunner/SpawnArgs other, Fusion.NetworkObjectSpawnDelegate del)

Disassembly:
	0x01EB2DDC TBZ X8, 0x0, 0x1EB2E98
	0x01EB2DE0 LDR X8, [X0 + 0x50]
	0x01EB2DE4 STR X8, [X31 + 0x58]
	0x01EB2DE8 ADD X0, X31, 0x58
	0x01EB2DEC MOV X1, X31
	0x01EB2DF0 BL 0x1E959F4
	0x01EB2DF4 MOV X8, X0
	0x01EB2DF8 LDR X0, [X24]
	0x01EB2DFC STR X8, [X31 + 0x50]
	0x01EB2E00 LDR W8, [X0 + 0xE0]
	0x01EB2E04 CBNZ W8, 0x1EB2E0C
	0x01EB2E08 BL 0x1C16DFC
	0x01EB2E0C ADD X0, X31, 0x50
	0x01EB2E10 MOV X1, X31
	0x01EB2E14 BL 0x1E99108
	0x01EB2E18 TBNZ X0, 0x0, 0x1EB2E48
	0x01EB2E1C CBZ X19, 0x1EB2E50
	0x01EB2E20 LDR X8, [X31 + 0x68]
	0x01EB2E24 LDR X1, [X31 + 0x58]
	0x01EB2E28 LDP X2, X3, [X8 + 0x30]
	0x01EB2E2C MOV X0, X19
	0x01EB2E30 BL 0x1E9D3D8
	0x01EB2E34 LDR X8, [X31 + 0x68]
	0x01EB2E38 STR X0, [X8 + 0x58]
	0x01EB2E3C CBZ X0, 0x1EB2E48
	0x01EB2E40 LDRB W9, [X0 + 0x60]
	0x01EB2E44 TBZ X9, 0x1, 0x1EB2EB0
	0x01EB2E48 LDR X8, [X31 + 0x68]
	0x01EB2E4C B 0x1EB2DC8
	0x01EB2E50 BL 0x1C16F20
	0x01EB2E54 B 0x1EB2ED8
	0x01EB2E58 B 0x1EB2E5C
	0x01EB2E5C MOV X22, X1
	0x01EB2E60 MOV X21, X0
	0x01EB2E64 CMP W22, 0x1
	0x01EB2E68 B.NE 0x1EB2F48
	0x01EB2E6C MOV X0, X21
	0x01EB2E70 BL 0x3EB1AD0
	0x01EB2E74 MOV X21, X0
	0x01EB2E78 MOV X0, X20
	0x01EB2E7C BL 0x1C16D08
	0x01EB2E80 LDR X8, [X21]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2528000
	007 Move W8, [X22+938]
	008 Move X20, X2
	009 Move X21, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2245000
	016 Move X0, [X0+2896]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+938], W8
	020 Move W2, 88
	021 Move X0, X19
	022 Move X1, X21
	023 Call 0x3EB2B30
	024 Move X0, [X19+64]
	025 Compare X0, 0
	026 JumpIfEqual {41}
	027 Move X1, X20
	028 Move X2, X31
	029 Call Delegate.Combine, X0, X1
	030 Compare X0, 0
	031 JumpIfEqual {42}
	032 Move X8, 0x2245000
	033 Move X8, [X8+2896]
	034 Move X1, [X8]
	035 Move X8, [X0]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move [X19+64], X0
	038 Move X8, [X0]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Call 0x1C181E0
	041 Move [X19+64], X20
	042 Move [X19+64], X0
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Return 

Method: System.Void .ctor(Fusion.NetworkObjectTypeId typeId, System.Nullable`1<UnityEngine.Vector3> position, System.Nullable`1<UnityEngine.Quaternion> rotation, System.Nullable`1<Fusion.PlayerRef> inputAuthority, System.Object onBeforeSpawned, Fusion.NetworkSpawnFlags flags, Fusion.NetworkObjectSpawnDelegate spawned, System.Boolean synchronous, Fusion.NetworkObject resumeNO)

Disassembly:
	0x01EAFB60 STR W9, [X31 + 0x28]
	0x01EAFB64 STR X31, [X31 + 0x50]
	0x01EAFB68 BL 0x1EAB01C
	0x01EAFB6C ADRP X22, 0x252A000
	0x01EAFB70 LDR W20, [X31 + 0x68]
	0x01EAFB74 LDRB W8, [X22 + 0x3BF]
	0x01EAFB78 LDR X21, [X31 + 0x70]
	0x01EAFB7C CBZ W8, 0x1EAFBF0
	0x01EAFB80 CBZ X21, 0x1EAFC08
	0x01EAFB84 ADRP X8, 0x2247000
	0x01EAFB88 LDR X8, [X8 + 0xBA8]
	0x01EAFB8C LDR X9, [X21]
	0x01EAFB90 LDR X1, [X8]
	0x01EAFB94 LDRB W11, [X9 + 0x130]
	0x01EAFB98 LDRB W10, [X1 + 0x130]
	0x01EAFB9C CMP W11, W10
	0x01EAFBA0 B.CC 0x1EAFBE8
	0x01EAFBA4 LDR X9, [X9 + 0xC8]

ISIL:
	001 Move W8, [X31+8]
	002 Move [X0], X1
	003 Move [X0+8], X2
	004 Move [X0+16], X3
	005 Move X9, [X31+16]
	006 Move X10, [X31]
	007 Move V0, [X4]
	008 Move W12, [X4+16]
	009 NotImplemented "Instruction SXTH not yet implemented."
	010 Or W13, W11, 0x10000
	011 And W31, W8, 1
	012 NotImplemented "Instruction CSEL not yet implemented."
	013 Move [X0+44], X5
	014 Move [X0+56], X6
	015 Move [X0+64], X10
	016 Move [X0+80], X9
	017 Move [X0+40], W12
	018 Move [X0+24], V0
	019 Move [X0+72], W8
	020 Return 

Method: System.Boolean get_Synchronous()

Disassembly:
	0x01EAF150 STUR X21, [X31 + 0x4C]
	0x01EAF154 STR W31, [X31 + 0x54]
	0x01EAF158 STP X20, X31, [X31 + 0x58]

ISIL:
	001 Move W8, [X0+74]
	002 And W0, W8, 1
	003 Return X0

Method: System.Boolean get_DontDestroyOnLoad()

Disassembly:
	0x01EAF348 MOV X19, X0
	0x01EAF34C ADRP X0, 0x224F000
	0x01EAF350 LDR X0, [X0 + 0xF18]

ISIL:
	001 Move W8, [X0+72]
	002 And W0, W8, 1
	003 Return X0

Method: System.Nullable`1<System.Boolean> get_MasterClientOverride()

Disassembly:
	0x01EAF5AC LDR X9, [X9 + 0xC8]
	0x01EAF5B0 ADD X9, X9, X10, 0x3, LSL
	0x01EAF5B4 LDUR X9, [X9 - 0x8]
	0x01EAF5B8 CMP X9, X1
	0x01EAF5BC B.NE 0x1EAF5F0
	0x01EAF5C0 STR X21, [X19]
	0x01EAF5C4 LDR X9, [X21]
	0x01EAF5C8 LDR X1, [X8]
	0x01EAF5CC LDRB W10, [X9 + 0x130]
	0x01EAF5D0 LDRB W8, [X1 + 0x130]
	0x01EAF5D4 CMP W10, W8
	0x01EAF5D8 B.CC 0x1EAF5F0
	0x01EAF5DC LDR X9, [X9 + 0xC8]
	0x01EAF5E0 ADD X8, X9, X8, 0x3, LSL
	0x01EAF5E4 LDUR X8, [X8 - 0x8]
	0x01EAF5E8 CMP X8, X1
	0x01EAF5EC B.EQ 0x1EAF614
	0x01EAF5F0 MOV X0, X21
	0x01EAF5F4 BL 0x1C171E0
	0x01EAF5F8 ADRP X0, 0x2247000
	0x01EAF5FC LDR X0, [X0 + 0xBA8]
	0x01EAF600 BL 0x1C16CF4
	0x01EAF604 MOVZ W8, 0x1
	0x01EAF608 STRB W8, [X22 + 0x3BF]
	0x01EAF60C CBNZ X21, 0x1EAF58C
	0x01EAF610 STR X31, [X19]
	0x01EAF614 LDR X8, [X28 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x252B000
	005 Move W8, [X20+939]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2249000
	012 Move X0, [X0+4056]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+939], W8
	016 Move W8, [X19+72]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 2
	019 Compare TEMP, 2
	020 JumpIfEqual {26}
	021 NotImplemented "Instruction STRH not yet implemented."
	022 Move TEMP, X8
	023 And TEMP, TEMP, 4
	024 Compare TEMP, 4
	025 JumpIfEqual {27}
	026 NotImplemented "Instruction STRH not yet implemented."
	027 Move X9, 0x2249000
	028 Move X9, [X9+4056]
	029 Move W1, W8
	030 ShiftRight W1, 1
	031 And W1, W1, 1
	032 Add X0, X31, 12
	033 Move X2, [X9]
	034 Call Nullable`1<Boolean>..ctor, X0, X1
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Return X0

Method: System.String ToString()

Disassembly:
	0x01EB3054 MOV X1, X0
	0x01EB3058 MOV X0, X19
	0x01EB305C BL 0x1C16DEC
	0x01EB3060 LDR X0, [X0 + 0x18]
	0x01EB3064 RET
	0x01EB3068 STR X30, [X31 - 0x20]!
	0x01EB306C STP X20, X19, [X31 + 0x10]
	0x01EB3070 ADRP X20, 0x2526000
	0x01EB3074 LDRB W8, [X20 + 0x3B7]
	0x01EB3078 MOV X19, X0
	0x01EB307C TBNZ X8, 0x0, 0x1EB3094
	0x01EB3080 ADRP X0, 0x224B000
	0x01EB3084 LDR X0, [X0 + 0x700]
	0x01EB3088 BL 0x1C16CF4
	0x01EB308C MOVZ W8, 0x1
	0x01EB3090 STRB W8, [X20 + 0x3B7]
	0x01EB3094 LDR W8, [X19 + 0x10]
	0x01EB3098 ADDS W31, W8, 0x2
	0x01EB309C B.NE 0x1EB30BC
	0x01EB30A0 LDR W20, [X19 + 0x20]
	0x01EB30A4 MOV X0, X31
	0x01EB30A8 BL 0x33C151C
	0x01EB30AC CMP W20, W0
	0x01EB30B0 B.NE 0x1EB30BC
	0x01EB30B4 STR W31, [X19 + 0x10]
	0x01EB30B8 B 0x1EB30F4
	0x01EB30BC ADRP X8, 0x224B000
	0x01EB30C0 LDR X8, [X8 + 0x700]
	0x01EB30C4 LDR X0, [X8]
	0x01EB30C8 BL 0x1C16F10
	0x01EB30CC MOV X1, X31
	0x01EB30D0 MOV X20, X0
	0x01EB30D4 BL 0x33BDD8C
	0x01EB30D8 MOV X0, X31
	0x01EB30DC STR W31, [X20 + 0x10]
	0x01EB30E0 BL 0x33C151C
	0x01EB30E4 STR W0, [X20 + 0x20]
	0x01EB30E8 LDR X8, [X19 + 0x28]
	0x01EB30EC MOV X19, X20
	0x01EB30F0 STR X8, [X20 + 0x28]
	0x01EB30F4 MOV X0, X19
	0x01EB30F8 LDP X20, X19, [X31 + 0x10]
	0x01EB30FC LDR X30, [X31], #0x20
	0x01EB3100 RET
	0x01EB3104 B 0x1EB3068
	0x01EB3108 LDR W8, [X0 + 0x10]
	0x01EB310C CMP W8, 0x1
	0x01EB3110 B.EQ 0x1EB311C
	0x01EB3114 ADDS W31, W8, 0x3
	0x01EB3118 B.NE 0x1EB3120
	0x01EB311C B 0x1EB3424
	0x01EB3120 RET
	0x01EB3124 SUB X31, X31, 0x90
	0x01EB3128 STP X30, X0, [X31 + 0x60]
	0x01EB312C STP X22, X21, [X31 + 0x70]
	0x01EB3130 STP X20, X19, [X31 + 0x80]
	0x01EB3134 ADRP X19, 0x2526000
	0x01EB3138 LDRB W8, [X19 + 0x3B8]
	0x01EB313C MOV X20, X0
	0x01EB3140 TBNZ X8, 0x0, 0x1EB31A0
	0x01EB3144 ADRP X0, 0x224C000
	0x01EB3148 LDR X0, [X0 + 0xD8]
	0x01EB314C BL 0x1C16CF4
	0x01EB3150 ADRP X0, 0x224C000
	0x01EB3154 LDR X0, [X0 + 0xE0]
	0x01EB3158 BL 0x1C16CF4
	0x01EB315C ADRP X0, 0x224C000
	0x01EB3160 LDR X0, [X0 + 0xE8]
	0x01EB3164 BL 0x1C16CF4
	0x01EB3168 ADRP X0, 0x224B000
	0x01EB316C LDR X0, [X0 + 0x378]
	0x01EB3170 BL 0x1C16CF4
	0x01EB3174 ADRP X0, 0x224B000
	0x01EB3178 LDR X0, [X0 + 0x798]
	0x01EB317C BL 0x1C16CF4
	0x01EB3180 ADRP X0, 0x224C000
	0x01EB3184 LDR X0, [X0 + 0xF0]
	0x01EB3188 BL 0x1C16CF4
	0x01EB318C ADRP X0, 0x224C000
	0x01EB3190 LDR X0, [X0 + 0x108]
	0x01EB3194 BL 0x1C16CF4
	0x01EB3198 MOVZ W8, 0x1
	0x01EB319C STRB W8, [X19 + 0x3B8]
	0x01EB31A0 ADD X8, X31, 0x68
	0x01EB31A4 STP X31, X31, [X31 + 0x50]
	0x01EB31A8 STR X31, [X31 + 0x38]
	0x01EB31AC STP X8, X31, [X31 + 0x40]
	0x01EB31B0 LDR W8, [X20 + 0x10]
	0x01EB31B4 LDR X19, [X20 + 0x30]
	0x01EB31B8 CMP W8, 0x1
	0x01EB31BC B.EQ 0x1EB3268
	0x01EB31C0 CBNZ W8, 0x1EB33C8
	0x01EB31C4 MOVN W8, 0x0
	0x01EB31C8 STR W8, [X20 + 0x10]
	0x01EB31CC CBZ X19, 0x1EB3364
	0x01EB31D0 LDR X0, [X19 + 0x50]
	0x01EB31D4 CBZ X0, 0x1EB3368
	0x01EB31D8 ADRP X9, 0x224B000
	0x01EB31DC LDR X9, [X9 + 0x798]
	0x01EB31E0 LDR X8, [X0]
	0x01EB31E4 LDR X1, [X9]
	0x01EB31E8 LDRB W10, [X8 + 0x130]
	0x01EB31EC LDRB W9, [X1 + 0x130]
	0x01EB31F0 CMP W10, W9
	0x01EB31F4 B.CC 0x1EB3360
	0x01EB31F8 LDR X8, [X8 + 0xC8]
	0x01EB31FC ADD X8, X8, X9, 0x3, LSL
	0x01EB3200 LDUR X8, [X8 - 0x8]
	0x01EB3204 CMP X8, X1
	0x01EB3208 B.NE 0x1EB3360
	0x01EB320C MOV X1, X31
	0x01EB3210 BL 0x1ED17A4
	0x01EB3214 CBZ X0, 0x1EB336C
	0x01EB3218 ADRP X8, 0x224C000
	0x01EB321C LDR X8, [X8 + 0xD8]
	0x01EB3220 LDR X1, [X8]
	0x01EB3224 BL 0x2A642B8
	0x01EB3228 CBZ X0, 0x1EB3370
	0x01EB322C ADRP X8, 0x224C000
	0x01EB3230 LDR X8, [X8 + 0xF0]
	0x01EB3234 LDR X1, [X8]
	0x01EB3238 ADD X8, X31, 0x8
	0x01EB323C BL 0x27552F8
	0x01EB3240 LDUR V0, [X31 + 0x8]
	0x01EB3244 LDR X8, [X31 + 0x18]
	0x01EB3248 LDR X20, [X31 + 0x68]
	0x01EB324C MOVN W9, 0x2
	0x01EB3250 STR V0, [X31 + 0x2]
	0x01EB3254 STR X8, [X31 + 0x30]
	0x01EB3258 STR X8, [X20 + 0x48]
	0x01EB325C STUR V0, [X20 + 0x38]
	0x01EB3260 STR W9, [X20 + 0x10]
	0x01EB3264 B 0x1EB3270
	0x01EB3268 MOVN W8, 0x2
	0x01EB326C STR W8, [X20 + 0x10]
	0x01EB3270 ADRP X21, 0x224C000
	0x01EB3274 ADRP X22, 0x224B000
	0x01EB3278 LDR X21, [X21 + 0xE0]
	0x01EB327C LDR X22, [X22 + 0x378]
	0x01EB3280 LDR X1, [X21]
	0x01EB3284 ADD X0, X20, 0x38
	0x01EB3288 BL 0x2C03CD0
	0x01EB328C MOV W8, W0
	0x01EB3290 LDR X0, [X31 + 0x68]
	0x01EB3294 TBZ X8, 0x0, 0x1EB3310
	0x01EB3298 LDR X8, [X0 + 0x48]
	0x01EB329C STR X8, [X31 + 0x58]
	0x01EB32A0 ADD X0, X31, 0x58
	0x01EB32A4 MOV X1, X31
	0x01EB32A8 BL 0x1E959F4
	0x01EB32AC MOV X8, X0
	0x01EB32B0 LDR X0, [X22]
	0x01EB32B4 STR X8, [X31 + 0x48]
	0x01EB32B8 LDR W8, [X0 + 0xE0]
	0x01EB32BC CBNZ W8, 0x1EB32C4
	0x01EB32C0 BL 0x1C16DFC
	0x01EB32C4 ADD X0, X31, 0x48
	0x01EB32C8 MOV X1, X31
	0x01EB32CC BL 0x1E99108
	0x01EB32D0 TBZ X0, 0x0, 0x1EB3308
	0x01EB32D4 ADD X0, X31, 0x58
	0x01EB32D8 MOV X1, X31
	0x01EB32DC BL 0x1E959F4
	0x01EB32E0 MOV X1, X0
	0x01EB32E4 CBZ X19, 0x1EB335C
	0x01EB32E8 ADD X2, X31, 0x50
	0x01EB32EC MOV X0, X19
	0x01EB32F0 BL 0x1EA325C
	0x01EB32F4 TBZ X0, 0x0, 0x1EB3308
	0x01EB32F8 LDR X1, [X31 + 0x50]
	0x01EB32FC CBZ X1, 0x1EB3308
	0x01EB3300 LDRB W8, [X1 + 0x60]
	0x01EB3304 TBZ X8, 0x1, 0x1EB3328
	0x01EB3308 LDR X20, [X31 + 0x68]
	0x01EB330C B 0x1EB3280
	0x01EB3310 BL 0x1EB3424
	0x01EB3314 LDR X8, [X31 + 0x68]
	0x01EB3318 MOV W0, W31
	0x01EB331C STP X31, X31, [X8 + 0x38]
	0x01EB3320 STR X31, [X8 + 0x48]
	0x01EB3324 B 0x1EB33CC
	0x01EB3328 ADRP X8, 0x224C000
	0x01EB332C LDR X2, [X31 + 0x58]
	0x01EB3330 LDR X8, [X8 + 0x108]
	0x01EB3334 STP X31, X31, [X31 + 0x20]
	0x01EB3338 LDR X3, [X8]
	0x01EB333C ADD X0, X31, 0x20
	0x01EB3340 BL 0x27AAEC8
	0x01EB3344 LDR X8, [X31 + 0x68]
	0x01EB3348 LDR V0, [X31 + 0x2]
	0x01EB334C MOVZ W0, 0x1
	0x01EB3350 STR W0, [X8 + 0x10]
	0x01EB3354 STUR V0, [X8 + 0x18]
	0x01EB3358 B 0x1EB33CC
	0x01EB335C BL 0x1C16F20
	0x01EB3360 BL 0x1C171E0
	0x01EB3364 BL 0x1C16F20
	0x01EB3368 BL 0x1C16F20
	0x01EB336C BL 0x1C16F20
	0x01EB3370 BL 0x1C16F20
	0x01EB3374 B 0x1EB33AC
	0x01EB3378 B 0x1EB33AC
	0x01EB337C B 0x1EB33AC
	0x01EB3380 B 0x1EB33AC
	0x01EB3384 B 0x1EB33AC
	0x01EB3388 B 0x1EB33AC
	0x01EB338C B 0x1EB33AC
	0x01EB3390 B 0x1EB33AC
	0x01EB3394 B 0x1EB33AC
	0x01EB3398 B 0x1EB33AC
	0x01EB339C B 0x1EB33AC
	0x01EB33A0 B 0x1EB33AC
	0x01EB33A4 B 0x1EB33AC
	0x01EB33A8 B 0x1EB33AC
	0x01EB33AC CMP W1, 0x1
	0x01EB33B0 B.NE 0x1EB33F8
	0x01EB33B4 BL 0x3EB1AD0
	0x01EB33B8 LDR X19, [X0]
	0x01EB33BC STR X19, [X31 + 0x38]
	0x01EB33C0 BL 0x3EB1AE0
	0x01EB33C4 CBNZ X19, 0x1EB33E0
	0x01EB33C8 MOV W0, W31
	0x01EB33CC LDP X20, X19, [X31 + 0x80]
	0x01EB33D0 LDP X22, X21, [X31 + 0x70]
	0x01EB33D4 LDR X30, [X31 + 0x60]
	0x01EB33D8 ADD X31, X31, 0x90
	0x01EB33DC RET
	0x01EB33E0 ADD X8, X31, 0x38
	0x01EB33E4 ADD X0, X8, 0x8
	0x01EB33E8 BL 0x1996C4C
	0x01EB33EC MOV X0, X19
	0x01EB33F0 BL 0x1C16F18
	0x01EB33F4 CBNZ X19, 0x1EB33FC
	0x01EB33F8 BL 0x1D2C690
	0x01EB33FC LDR X0, [X31 + 0x68]
	0x01EB3400 LDR W8, [X0 + 0x10]
	0x01EB3404 CMP W8, 0x1
	0x01EB3408 B.EQ 0x1EB3414
	0x01EB340C ADDS W31, W8, 0x3
	0x01EB3410 B.NE 0x1EB3418
	0x01EB3414 BL 0x1EB3424
	0x01EB3418 MOV X0, X19
	0x01EB341C BL 0x1C16F18
	0x01EB3420 BL 0x1990590
	0x01EB3424 STP X30, X21, [X31 - 0x20]!
	0x01EB3428 STP X20, X19, [X31 + 0x10]
	0x01EB342C ADRP X21, 0x2526000
	0x01EB3430 ADRP X20, 0x224C000
	0x01EB3434 LDRB W8, [X21 + 0x3B9]
	0x01EB3438 LDR X20, [X20 + 0xF8]
	0x01EB343C MOV X19, X0
	0x01EB3440 TBNZ X8, 0x0, 0x1EB3458
	0x01EB3444 ADRP X0, 0x224C000
	0x01EB3448 LDR X0, [X0 + 0xF8]
	0x01EB344C BL 0x1C16CF4
	0x01EB3450 MOVZ W8, 0x1
	0x01EB3454 STRB W8, [X21 + 0x3B9]
	0x01EB3458 MOVN W8, 0x0
	0x01EB345C STR W8, [X19 + 0x10]
	0x01EB3460 LDR X1, [X20]
	0x01EB3464 ADD X0, X19, 0x38
	0x01EB3468 LDP X20, X19, [X31 + 0x10]
	0x01EB346C LDP X30, X21, [X31], #0x20
	0x01EB3470 B 0x2C03CCC
	0x01EB3474 LDP X8, X1, [X0 + 0x18]
	0x01EB3478 MOV X0, X8
	0x01EB347C RET
	0x01EB3480 STP X30, X19, [X31 - 0x10]!
	0x01EB3484 ADRP X0, 0x2240000
	0x01EB3488 LDR X0, [X0 + 0xB40]
	0x01EB348C BL 0x1C16D08
	0x01EB3490 BL 0x1C16F10
	0x01EB3494 MOV X1, X31
	0x01EB3498 MOV X19, X0
	0x01EB349C BL 0x3380310
	0x01EB34A0 ADRP X0, 0x224C000
	0x01EB34A4 LDR X0, [X0 + 0x110]
	0x01EB34A8 BL 0x1C16D08
	0x01EB34AC MOV X1, X0
	0x01EB34B0 MOV X0, X19
	0x01EB34B4 BL 0x1C16DEC
	0x01EB34B8 SUB X31, X31, 0x30
	0x01EB34BC STP X30, X21, [X31 + 0x10]
	0x01EB34C0 STP X20, X19, [X31 + 0x20]
	0x01EB34C4 ADRP X21, 0x2526000
	0x01EB34C8 ADRP X20, 0x224C000
	0x01EB34CC LDRB W8, [X21 + 0x3BA]
	0x01EB34D0 LDR X20, [X20 + 0x118]
	0x01EB34D4 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X20, 0x2527000
	011 Move X21, 0x2241000
	012 Move W8, [X20+940]
	013 Move X21, [X21+2288]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {81}
	019 Move X0, 0x224C000
	020 Move X0, [X0+888]
	021 Call 0x1C17CF4
	022 Move X0, 0x224C000
	023 Move X0, [X0+2904]
	024 Call 0x1C17CF4
	025 Move X0, 0x2244000
	026 Move X0, [X0+3544]
	027 Call 0x1C17CF4
	028 Move X0, 0x2244000
	029 Move X0, [X0+3552]
	030 Call 0x1C17CF4
	031 Move X0, 0x224D000
	032 Move X0, [X0+144]
	033 Call 0x1C17CF4
	034 Move X0, 0x224D000
	035 Move X0, [X0+152]
	036 Call 0x1C17CF4
	037 Move X0, 0x224D000
	038 Move X0, [X0+160]
	039 Call 0x1C17CF4
	040 Move X0, 0x224D000
	041 Move X0, [X0+168]
	042 Call 0x1C17CF4
	043 Move X0, 0x2241000
	044 Move X0, [X0+2288]
	045 Call 0x1C17CF4
	046 Move X0, 0x2245000
	047 Move X0, [X0+1784]
	048 Call 0x1C17CF4
	049 Move X0, 0x2245000
	050 Move X0, [X0+2344]
	051 Call 0x1C17CF4
	052 Move X0, 0x224D000
	053 Move X0, [X0+176]
	054 Call 0x1C17CF4
	055 Move X0, 0x2245000
	056 Move X0, [X0+1128]
	057 Call 0x1C17CF4
	058 Move X0, 0x2241000
	059 Move X0, [X0+2104]
	060 Call 0x1C17CF4
	061 Move X0, 0x224C000
	062 Move X0, [X0+920]
	063 Call 0x1C17CF4
	064 Move X0, 0x224D000
	065 Move X0, [X0+184]
	066 Call 0x1C17CF4
	067 Move X0, 0x224D000
	068 Move X0, [X0+192]
	069 Call 0x1C17CF4
	070 Move X0, 0x224D000
	071 Move X0, [X0+200]
	072 Call 0x1C17CF4
	073 Move X0, 0x2241000
	074 Move X0, [X0+3784]
	075 Call 0x1C17CF4
	076 Move X0, 0x2241000
	077 Move X0, [X0+2120]
	078 Call 0x1C17CF4
	079 Move W8, 1
	080 Move [X20+940], W8
	081 Move X0, [X21]
	082 Call 0x1C17F10
	083 Move X1, X31
	084 Move X20, X0
	085 Call StringBuilder..ctor, X0
	086 Compare X20, 0
	087 JumpIfEqual {331}
	088 Move X8, 0x2241000
	089 Move X8, [X8+3784]
	090 Move X0, X20
	091 Move X2, X31
	092 Move X1, [X8]
	093 Call StringBuilder.Append, X0, X1
	094 Compare X0, 0
	095 JumpIfEqual {331}
	096 Move X8, 0x224D000
	097 Move X8, [X8+176]
	098 Move X2, X31
	099 Move X1, [X8]
	100 Call StringBuilder.Append, X0, X1
	101 Compare X0, 0
	102 JumpIfEqual {331}
	103 Move X22, 0x2245000
	104 Move X22, [X22+2344]
	105 Move X23, 0x224C000
	106 Move X2, X31
	107 Move X1, [X22]
	108 Move X23, [X23+888]
	109 Call StringBuilder.Append, X0, X1
	110 Move X21, X0
	111 Move X8, [X19]
	112 Move X0, [X23]
	113 Add X1, X31, 0
	114 Move [X31], X8
	115 Call 0x1C17E04
	116 Compare X21, 0
	117 JumpIfEqual {331}
	118 Move X23, 0x2241000
	119 Move X23, [X23+2104]
	120 Move X1, X0
	121 Move X0, X21
	122 Move X2, X31
	123 Call StringBuilder.Append, X0, X1
	124 Move X24, X19
	125 Add X24, X24, 8
	126 Move W8, [X24]
	127 Compare W8, 0
	128 JumpIfEqual {159}
	129 Move X1, [X23]
	130 Move X0, X20
	131 Move X2, X31
	132 Call StringBuilder.Append, X0, X1
	133 Compare X0, 0
	134 JumpIfEqual {331}
	135 Move X8, 0x2245000
	136 Move X8, [X8+1128]
	137 Move X2, X31
	138 Move X1, [X8]
	139 Call StringBuilder.Append, X0, X1
	140 Compare X0, 0
	141 JumpIfEqual {331}
	142 Move X1, [X22]
	143 Move X25, 0x224D000
	144 Move X25, [X25+152]
	145 Move X2, X31
	146 Call StringBuilder.Append, X0, X1
	147 Move X21, X0
	148 Move V0, [X24]
	149 Move X0, [X25]
	150 Add X1, X31, 0
	151 Move [X31], V0
	152 Call 0x1C17E04
	153 Compare X21, 0
	154 JumpIfEqual {331}
	155 Move X1, X0
	156 Move X0, X21
	157 Move X2, X31
	158 Call StringBuilder.Append, X0, X1
	159 Move X24, X19
	160 Add X24, X24, 24
	161 Move W8, [X24]
	162 Compare W8, 0
	163 JumpIfEqual {196}
	164 Move X1, [X23]
	165 Move X0, X20
	166 Move X2, X31
	167 Call StringBuilder.Append, X0, X1
	168 Compare X0, 0
	169 JumpIfEqual {331}
	170 Move X8, 0x224D000
	171 Move X8, [X8+184]
	172 Move X2, X31
	173 Move X1, [X8]
	174 Call StringBuilder.Append, X0, X1
	175 Compare X0, 0
	176 JumpIfEqual {331}
	177 Move X1, [X22]
	178 Move X25, 0x224D000
	179 Move X25, [X25+160]
	180 Move X2, X31
	181 Call StringBuilder.Append, X0, X1
	182 Move X21, X0
	183 Move W8, [X24+16]
	184 Move V0, [X24]
	185 Move X0, [X25]
	186 Add X1, X31, 0
	187 Move [X31+16], W8
	188 Move [X31], V0
	189 Call 0x1C17E04
	190 Compare X21, 0
	191 JumpIfEqual {331}
	192 Move X1, X0
	193 Move X0, X21
	194 Move X2, X31
	195 Call StringBuilder.Append, X0, X1
	196 Move W8, [X19+44]
	197 Compare W8, 0
	198 JumpIfEqual {229}
	199 Move X1, [X23]
	200 Move X0, X20
	201 Move X2, X31
	202 Call StringBuilder.Append, X0, X1
	203 Compare X0, 0
	204 JumpIfEqual {331}
	205 Move X8, 0x224C000
	206 Move X8, [X8+920]
	207 Move X2, X31
	208 Move X1, [X8]
	209 Call StringBuilder.Append, X0, X1
	210 Compare X0, 0
	211 JumpIfEqual {331}
	212 Move X1, [X22]
	213 Move X24, 0x224D000
	214 Move X24, [X24+144]
	215 Move X2, X31
	216 Call StringBuilder.Append, X0, X1
	217 Move X21, X0
	218 NotImplemented "Instruction LDUR not yet implemented."
	219 Move X0, [X24]
	220 Add X1, X31, 0
	221 Move [X31], X8
	222 Call 0x1C17E04
	223 Compare X21, 0
	224 JumpIfEqual {331}
	225 Move X1, X0
	226 Move X0, X21
	227 Move X2, X31
	228 Call StringBuilder.Append, X0, X1
	229 Move X8, [X19+56]
	230 Compare X8, 0
	231 JumpIfEqual {253}
	232 Move X1, [X23]
	233 Move X0, X20
	234 Move X2, X31
	235 Call StringBuilder.Append, X0, X1
	236 Compare X0, 0
	237 JumpIfEqual {331}
	238 Move X8, 0x224D000
	239 Move X8, [X8+200]
	240 Move X2, X31
	241 Move X1, [X8]
	242 Call StringBuilder.Append, X0, X1
	243 Compare X0, 0
	244 JumpIfEqual {331}
	245 Move X1, [X22]
	246 Move X2, X31
	247 Call StringBuilder.Append, X0, X1
	248 Compare X0, 0
	249 JumpIfEqual {331}
	250 Move X1, [X19+56]
	251 Move X2, X31
	252 Call StringBuilder.Append, X0, X1
	253 Move X8, [X19+64]
	254 Compare X8, 0
	255 JumpIfEqual {277}
	256 Move X1, [X23]
	257 Move X0, X20
	258 Move X2, X31
	259 Call StringBuilder.Append, X0, X1
	260 Compare X0, 0
	261 JumpIfEqual {331}
	262 Move X8, 0x2245000
	263 Move X8, [X8+1784]
	264 Move X2, X31
	265 Move X1, [X8]
	266 Call StringBuilder.Append, X0, X1
	267 Compare X0, 0
	268 JumpIfEqual {331}
	269 Move X1, [X22]
	270 Move X2, X31
	271 Call StringBuilder.Append, X0, X1
	272 Compare X0, 0
	273 JumpIfEqual {331}
	274 Move X1, [X19+64]
	275 Move X2, X31
	276 Call StringBuilder.Append, X0, X1
	277 Move W8, [X19+72]
	278 Compare W8, 0
	279 JumpIfEqual {310}
	280 Move X1, [X23]
	281 Move X0, X20
	282 Move X2, X31
	283 Call StringBuilder.Append, X0, X1
	284 Compare X0, 0
	285 JumpIfEqual {331}
	286 Move X8, 0x224D000
	287 Move X8, [X8+192]
	288 Move X2, X31
	289 Move X1, [X8]
	290 Call StringBuilder.Append, X0, X1
	291 Compare X0, 0
	292 JumpIfEqual {331}
	293 Move X1, [X22]
	294 Move X22, 0x224D000
	295 Move X22, [X22+168]
	296 Move X2, X31
	297 Call StringBuilder.Append, X0, X1
	298 Move X21, X0
	299 Move W8, [X19+72]
	300 Move X0, [X22]
	301 Add X1, X31, 0
	302 Move [X31], W8
	303 Call 0x1C17E04
	304 Compare X21, 0
	305 JumpIfEqual {331}
	306 Move X1, X0
	307 Move X0, X21
	308 Move X2, X31
	309 Call StringBuilder.Append, X0, X1
	310 Move X8, 0x2241000
	311 Move X8, [X8+2120]
	312 Move X0, X20
	313 Move X2, X31
	314 Move X1, [X8]
	315 Call StringBuilder.Append, X0, X1
	316 Move X8, [X20]
	317 Move X0, X20
	318 Move X9, [X8+360]
	319 Move X1, [X8+368]
	320 NotImplemented "Instruction BLR not yet implemented."
	321 Move X20, [X31+80]
	322 Move X19, [X31+88]
	323 Move X22, [X31+64]
	324 Move X21, [X31+72]
	325 Move X24, [X31+48]
	326 Move X23, [X31+56]
	327 Move X30, [X31+32]
	328 Move X25, [X31+40]
	329 Add X31, X31, 96
	330 Return X0
	331 Call 0x1C17F20

