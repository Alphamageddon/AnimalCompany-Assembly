Type: Fusion.Allocator/Config

Method: System.Int32 get_BlockByteSize()

Disassembly:
	0x01E66B2C MOV X2, X31
	0x01E66B30 SUB W11, W10, W9
	0x01E66B34 STR W11, [X19 + 0x68]
	0x01E66B38 LDR X11, [X31 + 0x78]

ISIL:
	001 Move W8, [X0]
	002 Move W9, 1
	003 NotImplemented "Instruction LSLV not yet implemented."
	004 Return X0

Method: System.Int32 get_BlockWordCount()

Disassembly:
	0x01E67CB8 MOV W1, W20
	0x01E67CBC MOV X2, X19
	0x01E67CC0 MOV X3, X31
	0x01E67CC4 MOV X21, X0
	0x01E67CC8 BL 0x1EB3CE4
	0x01E67CCC LDR X2, [X23]

ISIL:
	001 Move W8, [X0]
	002 Move W9, 1
	003 NotImplemented "Instruction LSLV not yet implemented."
	004 Add W8, W8, 7
	005 NotImplemented "Instruction SBFM not yet implemented."
	006 Return X0

Method: System.Int32 get_HeapSizeUsable()

Disassembly:
	0x01E66A28 B 0x1E3585C
	0x01E66A2C RET
	0x01E66A30 SUB X31, X31, 0xE0

ISIL:
	001 Move W8, [X0]
	002 Move W9, [X0+4]
	003 NotImplemented "Instruction LSLV not yet implemented."
	004 Return X0

Method: System.Int32 get_HeapSizeAllocated()

Disassembly:
	0x01E67CD0 MOV X0, X22
	0x01E67CD4 MOV X1, X21
	0x01E67CD8 LDP X20, X19, [X31 + 0x20]
	0x01E67CDC LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move W8, [X0]
	002 Move W9, [X0+4]
	003 NotImplemented "Instruction LSLV not yet implemented."
	004 Add W0, W8, 8
	005 Return X0

Method: System.Void .ctor(Fusion.PageSizes shift, System.Int32 count, System.Int32 globalsSize)

Disassembly:
	0x01E67EF0 BL 0x1C16CF4
	0x01E67EF4 MOVZ W8, 0x1
	0x01E67EF8 STRB W8, [X22 + 0x107]
	0x01E67EFC LDR X0, [X21]
	0x01E67F00 LDR W8, [X0 + 0xE0]
	0x01E67F04 CBNZ W8, 0x1E67F10
	0x01E67F08 BL 0x1C16DFC
	0x01E67F0C LDR X0, [X21]
	0x01E67F10 LDR X8, [X0 + 0xB8]
	0x01E67F14 LDR X8, [X8 + 0x10]
	0x01E67F18 CBZ X8, 0x1E67F2C
	0x01E67F1C LDR X8, [X20 + 0x28]
	0x01E67F20 CBZ X8, 0x1E68030
	0x01E67F24 LDR X9, [X8 + 0x1A8]
	0x01E67F28 CBZ X9, 0x1E67F40
	0x01E67F2C MOV W0, W31
	0x01E67F30 LDP X20, X19, [X31 + 0x20]
	0x01E67F34 LDP X22, X21, [X31 + 0x10]
	0x01E67F38 LDR X30, [X31], #0x30
	0x01E67F3C RET
	0x01E67F40 CMP W19, 0xE
	0x01E67F44 B.EQ 0x1E67F5C
	0x01E67F48 CMP W19, 0x6
	0x01E67F4C MOV W0, W31
	0x01E67F50 B.NE 0x1E67F30
	0x01E67F54 LDRB W9, [X20 + 0x11]
	0x01E67F58 CBZ W9, 0x1E67F30
	0x01E67F5C MOV X0, X8
	0x01E67F60 MOV X1, X31
	0x01E67F64 BL 0x1E9DEF4
	0x01E67F68 TBZ X0, 0x0, 0x1E67FB0
	0x01E67F6C LDR X8, [X20 + 0x28]
	0x01E67F70 CBZ X8, 0x1E68030

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x2573000
	009 Move X23, 0x228D000
	010 Move W8, [X24+253]
	011 Move X23, [X23+1448]
	012 Move W19, W3
	013 Move W21, W2
	014 Move W22, W1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x228D000
	021 Move X0, [X0+1448]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+253], W8
	025 Move [X20], W22
	026 Move X0, [X23]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move W0, 1
	032 Move W1, W21
	033 Move X2, X31
	034 Call Math.Max, X0, X1
	035 Move [X20+4], W0
	036 Move [X20+8], W19
	037 Move X20, [X31+48]
	038 Move X19, [X31+56]
	039 Move X22, [X31+32]
	040 Move X21, [X31+40]
	041 Move X24, [X31+16]
	042 Move X23, [X31+24]
	043 Move X30, [X31+64]
	044 Return 

Method: System.Boolean Equals(Fusion.Allocator/Config other)

Disassembly:
	0x01E67F74 LDR W8, [X8 + 0x188]
	0x01E67F78 CMP W8, 0x3
	0x01E67F7C B.LT 0x1E67F2C
	0x01E67F80 CMP W19, 0xE
	0x01E67F84 B.NE 0x1E67FE0
	0x01E67F88 LDR X8, [X20 + 0x30]
	0x01E67F8C CBZ X8, 0x1E68030
	0x01E67F90 LDR X0, [X8 + 0x38]
	0x01E67F94 CBZ X0, 0x1E68030
	0x01E67F98 MOV X1, X31

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, [X0+4]
	004 Move X9, X1
	005 ShiftRight X9, 32
	006 And X9, X9, 0x7FFFFFFF
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Return X0
	010 Move W0, W31
	011 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x01E67F9C BL 0x1E4C7B8
	0x01E67FA0 AND W8, W0, 0x1
	0x01E67FA4 STRB W8, [X20 + 0x11]
	0x01E67FA8 TBZ X0, 0x0, 0x1E67FE4
	0x01E67FAC B 0x1E67FEC
	0x01E67FB0 LDR X0, [X20 + 0x28]
	0x01E67FB4 CBZ X0, 0x1E68030
	0x01E67FB8 MOV X1, X31
	0x01E67FBC BL 0x1E9E87C
	0x01E67FC0 TBZ X0, 0x0, 0x1E67F2C
	0x01E67FC4 LDR X0, [X20 + 0x28]
	0x01E67FC8 CBZ X0, 0x1E68030
	0x01E67FCC MOV X1, X31
	0x01E67FD0 BL 0x1EB0B24
	0x01E67FD4 CMP W0, 0x2
	0x01E67FD8 B.NE 0x1E67F2C
	0x01E67FDC B 0x1E67F6C
	0x01E67FE0 STRB W31, [X20 + 0x11]
	0x01E67FE4 MOVZ W8, 0x1
	0x01E67FE8 STRB W8, [X20 + 0x10]
	0x01E67FEC LDR X0, [X21]
	0x01E67FF0 LDR W8, [X0 + 0xE0]
	0x01E67FF4 CBNZ W8, 0x1E68000
	0x01E67FF8 BL 0x1C16DFC
	0x01E67FFC LDR X0, [X21]
	0x01E68000 LDR X8, [X0 + 0xB8]
	0x01E68004 LDR X8, [X8 + 0x10]
	0x01E68008 CBZ X8, 0x1E68034
	0x01E6800C LDR X1, [X20 + 0x28]
	0x01E68010 LDR X0, [X8 + 0x40]
	0x01E68014 LDRB W3, [X20 + 0x11]
	0x01E68018 LDR X9, [X8 + 0x18]
	0x01E6801C LDR X4, [X8 + 0x28]
	0x01E68020 MOV W2, W19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2573000
	006 Move W8, [X21+254]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2296000
	014 Move X0, [X0+3600]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+254], W8
	018 Compare X20, 0
	019 JumpIfEqual {36}
	020 Move X8, 0x2296000
	021 Move X8, [X8+3600]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X20
	026 Call 0x1C17E08
	027 Move X8, [X0]
	028 Move W9, [X19]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W9, [X19+4]
	031 Move X8, X8
	032 ShiftRight X8, 32
	033 And X8, X8, 0x7FFFFFFF
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CSET not yet implemented."
	036 Move W0, W31
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x01E68024 BLR X9
	0x01E68028 MOVZ W0, 0x1
	0x01E6802C B 0x1E67F30
	0x01E68030 BL 0x1C16F20
	0x01E68034 BL 0x1C16F20

ISIL:
	001 Move W8, [X0]
	002 Move W9, [X0+4]
	003 Move W10, 397
	004 Multiply W8, W8, W10
	005 Xor W0, W8, W9
	006 Return X0

Method: System.String ToString()

Disassembly:
	0x01E68038 B 0x1E6803C
	0x01E6803C MOV X19, X0
	0x01E68040 CMP W1, 0x1
	0x01E68044 B.NE 0x1E680C8
	0x01E68048 MOV X0, X19
	0x01E6804C BL 0x3EB1AD0
	0x01E68050 MOV X19, X0
	0x01E68054 ADRP X0, 0x228B000
	0x01E68058 LDR X0, [X0 + 0x7D0]
	0x01E6805C BL 0x1C16D08
	0x01E68060 LDR X8, [X19]
	0x01E68064 LDR X1, [X8]
	0x01E68068 BL 0x1C17270
	0x01E6806C TBZ X0, 0x0, 0x1E680A0
	0x01E68070 LDR X19, [X19]
	0x01E68074 BL 0x3EB1AE0
	0x01E68078 ADRP X0, 0x2293000
	0x01E6807C LDR X0, [X0 + 0x8B0]
	0x01E68080 BL 0x1C16D08
	0x01E68084 LDR W8, [X0 + 0xE0]
	0x01E68088 CBNZ W8, 0x1E68090
	0x01E6808C BL 0x1C16DFC
	0x01E68090 MOV X0, X19
	0x01E68094 MOV X1, X31
	0x01E68098 BL 0x1E3E4C8
	0x01E6809C B 0x1E68028
	0x01E680A0 MOVZ W0, 0x8
	0x01E680A4 BL 0x3EB1AF0
	0x01E680A8 LDR X8, [X19]
	0x01E680AC STR X8, [X0]
	0x01E680B0 ADRP X1, 0x204C000
	0x01E680B4 ADD X1, X1, 0xE58
	0x01E680B8 MOV X2, X31
	0x01E680BC BL 0x3EB1B00
	0x01E680C0 MOV X19, X0
	0x01E680C4 BL 0x3EB1AE0
	0x01E680C8 MOV X0, X19
	0x01E680CC BL 0x1D2C690
	0x01E680D0 BL 0x1990590
	0x01E680D4 SUB W8, W0, 0x1
	0x01E680D8 AND W9, W8, 0xFF
	0x01E680DC CMP W9, 0x5
	0x01E680E0 B.HI 0x1E680F8
	0x01E680E4 ADRP X9, 0xFFFFFFFFFECC5000
	0x01E680E8 SXTB X8, W8
	0x01E680EC ADD X9, X9, 0xBAC
	0x01E680F0 LDR W0, [X9, X8, LSL #2]
	0x01E680F4 RET
	0x01E680F8 MOVZ W0, 0x1
	0x01E680FC RET
	0x01E68100 RET
	0x01E68104 RET
	0x01E68108 STR X30, [X31 - 0x10]!
	0x01E6810C LDR X8, [X0 + 0x28]
	0x01E68110 CBZ X8, 0x1E6812C
	0x01E68114 LDR X8, [X8 + 0x198]
	0x01E68118 CBZ X8, 0x1E6812C
	0x01E6811C STRB W31, [X8 + 0x10]
	0x01E68120 STP X31, X31, [X8 + 0x18]
	0x01E68124 LDR X30, [X31], #0x10
	0x01E68128 RET
	0x01E6812C BL 0x1C16F20
	0x01E68130 STRB W31, [X0 + 0x10]
	0x01E68134 STP X31, X31, [X0 + 0x18]
	0x01E68138 RET
	0x01E6813C STR X30, [X31 - 0x10]!
	0x01E68140 LDR X8, [X0 + 0x28]
	0x01E68144 CBZ X8, 0x1E68160
	0x01E68148 LDR X8, [X8 + 0x198]
	0x01E6814C CBZ X8, 0x1E68160
	0x01E68150 STRB W31, [X8 + 0x10]
	0x01E68154 STP X31, X31, [X8 + 0x18]
	0x01E68158 LDR X30, [X31], #0x10
	0x01E6815C RET
	0x01E68160 BL 0x1C16F20
	0x01E68164 RET
	0x01E68168 B 0x1E67C40
	0x01E6816C B 0x1E67C40
	0x01E68170 B 0x1E67C40
	0x01E68174 STR X30, [X31 - 0x20]!
	0x01E68178 STP X20, X19, [X31 + 0x10]
	0x01E6817C ADRP X20, 0x2571000
	0x01E68180 LDRB W8, [X20 + 0x105]
	0x01E68184 MOV X19, X0
	0x01E68188 TBNZ X8, 0x0, 0x1E681AC
	0x01E6818C ADRP X0, 0x2294000
	0x01E68190 LDR X0, [X0 + 0xE88]
	0x01E68194 BL 0x1C16CF4
	0x01E68198 ADRP X0, 0x228B000
	0x01E6819C LDR X0, [X0 + 0x988]
	0x01E681A0 BL 0x1C16CF4
	0x01E681A4 MOVZ W8, 0x1
	0x01E681A8 STRB W8, [X20 + 0x105]
	0x01E681AC LDR X8, [X19 + 0x28]
	0x01E681B0 CBZ X8, 0x1E6821C
	0x01E681B4 LDR X20, [X8 + 0x198]
	0x01E681B8 CBZ X20, 0x1E6821C
	0x01E681BC MOVZ W8, 0x1
	0x01E681C0 STRB W8, [X20 + 0x10]
	0x01E681C4 LDR X8, [X19 + 0x30]
	0x01E681C8 CBZ X8, 0x1E6821C
	0x01E681CC LDR X8, [X8 + 0x38]
	0x01E681D0 CBZ X8, 0x1E6821C
	0x01E681D4 LDR X9, [X8 + 0xF0]
	0x01E681D8 CBZ X9, 0x1E6821C
	0x01E681DC LDR X9, [X9 + 0x10]
	0x01E681E0 STR X9, [X20 + 0x18]
	0x01E681E4 LDR X0, [X8 + 0x140]
	0x01E681E8 CBZ X0, 0x1E6821C
	0x01E681EC ADRP X8, 0x2294000
	0x01E681F0 ADRP X9, 0x228B000
	0x01E681F4 LDR X8, [X8 + 0xE88]
	0x01E681F8 LDR X9, [X9 + 0x988]
	0x01E681FC MOV X3, X31
	0x01E68200 LDR X1, [X8]
	0x01E68204 LDR X2, [X9]
	0x01E68208 BL 0x32293BC
	0x01E6820C STR X0, [X20 + 0x20]
	0x01E68210 LDP X20, X19, [X31 + 0x10]
	0x01E68214 LDR X30, [X31], #0x20
	0x01E68218 RET
	0x01E6821C BL 0x1C16F20
	0x01E68220 STR X30, [X31 - 0x10]!
	0x01E68224 LDR X8, [X0 + 0x28]
	0x01E68228 CBZ X8, 0x1E68244
	0x01E6822C LDR X8, [X8 + 0x198]
	0x01E68230 CBZ X8, 0x1E68244
	0x01E68234 STRB W31, [X8 + 0x10]
	0x01E68238 STP X31, X31, [X8 + 0x18]
	0x01E6823C LDR X30, [X31], #0x10
	0x01E68240 RET
	0x01E68244 BL 0x1C16F20
	0x01E68248 B 0x1E6824C
	0x01E6824C SUB X31, X31, 0xA0
	0x01E68250 STP X29, X30, [X31 + 0x40]
	0x01E68254 STP X28, X27, [X31 + 0x50]
	0x01E68258 STP X26, X25, [X31 + 0x60]
	0x01E6825C STP X24, X23, [X31 + 0x70]
	0x01E68260 STP X22, X21, [X31 + 0x80]
	0x01E68264 STP X20, X19, [X31 + 0x90]
	0x01E68268 ADRP X21, 0x2571000
	0x01E6826C LDRB W8, [X21 + 0x113]
	0x01E68270 MOV X20, X1
	0x01E68274 MOV X19, X0
	0x01E68278 TBNZ X8, 0x0, 0x1E68314
	0x01E6827C ADRP X0, 0x2294000
	0x01E68280 LDR X0, [X0 + 0xE90]
	0x01E68284 BL 0x1C16CF4
	0x01E68288 ADRP X0, 0x2294000
	0x01E6828C LDR X0, [X0 + 0xE98]
	0x01E68290 BL 0x1C16CF4
	0x01E68294 ADRP X0, 0x2294000
	0x01E68298 LDR X0, [X0 + 0xEA0]
	0x01E6829C BL 0x1C16CF4
	0x01E682A0 ADRP X0, 0x2294000
	0x01E682A4 LDR X0, [X0 + 0xEA8]
	0x01E682A8 BL 0x1C16CF4
	0x01E682AC ADRP X0, 0x2294000
	0x01E682B0 LDR X0, [X0 + 0xEB0]
	0x01E682B4 BL 0x1C16CF4
	0x01E682B8 ADRP X0, 0x2294000
	0x01E682BC LDR X0, [X0 + 0xEB8]
	0x01E682C0 BL 0x1C16CF4
	0x01E682C4 ADRP X0, 0x2294000
	0x01E682C8 LDR X0, [X0 + 0xEC0]
	0x01E682CC BL 0x1C16CF4
	0x01E682D0 ADRP X0, 0x2294000
	0x01E682D4 LDR X0, [X0 + 0xEC8]
	0x01E682D8 BL 0x1C16CF4
	0x01E682DC ADRP X0, 0x2294000
	0x01E682E0 LDR X0, [X0 + 0xED0]
	0x01E682E4 BL 0x1C16CF4
	0x01E682E8 ADRP X0, 0x2294000
	0x01E682EC LDR X0, [X0 + 0xED8]
	0x01E682F0 BL 0x1C16CF4
	0x01E682F4 ADRP X0, 0x2294000
	0x01E682F8 LDR X0, [X0 + 0xEE0]
	0x01E682FC BL 0x1C16CF4
	0x01E68300 ADRP X0, 0x2294000
	0x01E68304 LDR X0, [X0 + 0xEE8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X19, 0x2572000
	008 Move X21, 0x228C000
	009 Move X22, 0x228C000
	010 Move W8, [X19+255]
	011 Move X21, [X21+2512]
	012 Move X22, [X22+1880]
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x228C000
	019 Move X0, [X0+1880]
	020 Call 0x1C17CF4
	021 Move X0, 0x228C000
	022 Move X0, [X0+2512]
	023 Call 0x1C17CF4
	024 Move X0, 0x2295000
	025 Move X0, [X0+3608]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+255], W8
	029 Move X0, [X21]
	030 Move W1, 8
	031 Call 0x1C17D6C
	032 Move X19, X0
	033 Move X0, [X22]
	034 Move W8, 12
	035 Add X1, X31, 44
	036 Move [X31+44], W8
	037 Call 0x1C17E04
	038 Compare X19, 0
	039 JumpIfEqual {200}
	040 Move X21, X0
	041 Compare X0, 0
	042 JumpIfEqual {49}
	043 Move X8, [X19]
	044 Move X0, X21
	045 Move X1, [X8+64]
	046 Call 0x1C17E00
	047 Compare X0, 0
	048 JumpIfEqual {197}
	049 Move W8, [X19+24]
	050 Compare W8, 0
	051 JumpIfEqual {196}
	052 Move [X19+32], X21
	053 Move W8, [X20]
	054 Move X0, [X22]
	055 Add X1, X31, 40
	056 Move [X31+40], W8
	057 Call 0x1C17E04
	058 Move X21, X0
	059 Compare X0, 0
	060 JumpIfEqual {67}
	061 Move X8, [X19]
	062 Move X0, X21
	063 Move X1, [X8+64]
	064 Call 0x1C17E00
	065 Compare X0, 0
	066 JumpIfEqual {197}
	067 Move W8, [X19+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move [X19+40], X21
	070 Move W8, [X20+4]
	071 Move X0, [X22]
	072 Add X1, X31, 28
	073 Move [X31+28], W8
	074 Call 0x1C17E04
	075 Move X21, X0
	076 Compare X0, 0
	077 JumpIfEqual {84}
	078 Move X8, [X19]
	079 Move X0, X21
	080 Move X1, [X8+64]
	081 Call 0x1C17E00
	082 Compare X0, 0
	083 JumpIfEqual {197}
	084 Move W8, [X19+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move [X19+48], X21
	087 Move W8, [X20+8]
	088 Move X0, [X22]
	089 Add X1, X31, 24
	090 Move [X31+24], W8
	091 Call 0x1C17E04
	092 Move X21, X0
	093 Compare X0, 0
	094 JumpIfEqual {101}
	095 Move X8, [X19]
	096 Move X0, X21
	097 Move X1, [X8+64]
	098 Call 0x1C17E00
	099 Compare X0, 0
	100 JumpIfEqual {197}
	101 Move W8, [X19+24]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move [X19+56], X21
	104 Move W8, [X20]
	105 Move X0, [X22]
	106 Move W9, 1
	107 Add X1, X31, 20
	108 NotImplemented "Instruction LSLV not yet implemented."
	109 Move [X31+20], W8
	110 Call 0x1C17E04
	111 Move X21, X0
	112 Compare X0, 0
	113 JumpIfEqual {120}
	114 Move X8, [X19]
	115 Move X0, X21
	116 Move X1, [X8+64]
	117 Call 0x1C17E00
	118 Compare X0, 0
	119 JumpIfEqual {197}
	120 Move W8, [X19+24]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move [X19+64], X21
	123 Move W8, [X20]
	124 Move W9, 1
	125 Move X0, [X22]
	126 Add X1, X31, 16
	127 NotImplemented "Instruction LSLV not yet implemented."
	128 Add W8, W8, 7
	129 NotImplemented "Instruction SBFM not yet implemented."
	130 Move [X31+16], W8
	131 Call 0x1C17E04
	132 Move X21, X0
	133 Compare X0, 0
	134 JumpIfEqual {141}
	135 Move X8, [X19]
	136 Move X0, X21
	137 Move X1, [X8+64]
	138 Call 0x1C17E00
	139 Compare X0, 0
	140 JumpIfEqual {197}
	141 Move W8, [X19+24]
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move [X19+72], X21
	144 Move W8, [X20]
	145 Move W9, [X20+4]
	146 Move X0, [X22]
	147 Add X1, X31, 12
	148 NotImplemented "Instruction LSLV not yet implemented."
	149 Move [X31+12], W8
	150 Call 0x1C17E04
	151 Move X21, X0
	152 Compare X0, 0
	153 JumpIfEqual {160}
	154 Move X8, [X19]
	155 Move X0, X21
	156 Move X1, [X8+64]
	157 Call 0x1C17E00
	158 Compare X0, 0
	159 JumpIfEqual {197}
	160 Move W8, [X19+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move [X19+80], X21
	163 Move W8, [X20]
	164 Move W9, [X20+4]
	165 Move X0, [X22]
	166 Add X1, X31, 8
	167 NotImplemented "Instruction LSLV not yet implemented."
	168 Add W8, W8, 8
	169 Move [X31+8], W8
	170 Call 0x1C17E04
	171 Move X20, X0
	172 Compare X0, 0
	173 JumpIfEqual {180}
	174 Move X8, [X19]
	175 Move X0, X20
	176 Move X1, [X8+64]
	177 Call 0x1C17E00
	178 Compare X0, 0
	179 JumpIfEqual {197}
	180 Move W8, [X19+24]
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X8, 0x2295000
	183 Move X8, [X8+3608]
	184 Move [X19+88], X20
	185 Move X1, X19
	186 Move X2, X31
	187 Move X0, [X8]
	188 Call String.Format, X0, X1
	189 Move X20, [X31+64]
	190 Move X19, [X31+72]
	191 Move X22, [X31+48]
	192 Move X21, [X31+56]
	193 Move X30, [X31+32]
	194 Add X31, X31, 80
	195 Return X0
	196 Call 0x1C17F28
	197 Call 0x1C17F44
	198 Move X1, X31
	199 Call 0x1C17DEC
	200 Call 0x1C17F20

