Type: Fusion.HitboxRoot/HitboxComparerZ

Method: System.Int32 Compare(Fusion.HitboxRoot a, Fusion.HitboxRoot b)

Disassembly:
	0x01E866AC MOVZ W1, 0x1
	0x01E866B0 MOV X0, X21
	0x01E866B4 MOV W3, W20
	0x01E866B8 STR X9, [X22]
	0x01E866BC STR X10, [X8 + 0x20]
	0x01E866C0 BL 0x1E868E4
	0x01E866C4 SUB X23, X23, 0x1
	0x01E866C8 CMP X23, 0x2
	0x01E866CC SUB W19, W19, 0x1
	0x01E866D0 B.GT 0x1E86688
	0x01E866D4 LDP X20, X19, [X31 + 0x30]
	0x01E866D8 LDP X22, X21, [X31 + 0x20]
	0x01E866DC LDP X24, X23, [X31 + 0x10]
	0x01E866E0 LDR X30, [X31], #0x40
	0x01E866E4 RET
	0x01E866E8 BL 0x1C16F28
	0x01E866EC BL 0x1C16F20
	0x01E866F0 STR X30, [X31 - 0x50]!
	0x01E866F4 STP X26, X25, [X31 + 0x10]
	0x01E866F8 STP X24, X23, [X31 + 0x20]
	0x01E866FC STP X22, X21, [X31 + 0x30]
	0x01E86700 STP X20, X19, [X31 + 0x40]
	0x01E86704 ADRP X22, 0x2553000
	0x01E86708 LDRB W8, [X22 + 0x208]
	0x01E8670C MOV W21, W2
	0x01E86710 MOV W19, W1
	0x01E86714 MOV X20, X0
	0x01E86718 TBNZ X8, 0x0, 0x1E86730
	0x01E8671C ADRP X0, 0x2277000

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {36}
	006 Move X0, X1
	007 Move X1, X31
	008 Move X19, X2
	009 Call Component.get_transform, X0
	010 Compare X0, 0
	011 JumpIfEqual {36}
	012 Move X1, X31
	013 Call Transform.get_position, X0
	014 Move [X31], S0
	015 Move [X31+8], S1
	016 Move [X31+8], S2
	017 Compare X19, 0
	018 JumpIfEqual {36}
	019 Move X0, X19
	020 Move X1, X31
	021 Call Component.get_transform, X0
	022 Compare X0, 0
	023 JumpIfEqual {36}
	024 Add X8, X31, 0
	025 Move X1, X31
	026 Add X19, X8, 8
	027 Call Transform.get_position, X0
	028 Move V0, V2
	029 Move X0, X19
	030 Move X1, X31
	031 Call Single.CompareTo, X0, V0
	032 Move X30, [X31+16]
	033 Move X19, [X31+24]
	034 Add X31, X31, 32
	035 Return X0
	036 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01E86720 LDR X0, [X0 + 0xE98]
	0x01E86724 BL 0x1C16CF4

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

