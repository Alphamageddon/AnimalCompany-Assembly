Type: Fusion.NetworkInputUtils

Method: System.Void LoadTypes()

Disassembly:
	0x01EDE428 B.NE 0x1EDE614
	0x01EDE42C MOV X0, X19
	0x01EDE430 MOV X1, X31
	0x01EDE434 BL 0x1E35868
	0x01EDE438 LDR W8, [X20 + 0x10]
	0x01EDE43C LDRB W9, [X20 + 0x14]
	0x01EDE440 MOV W21, W0
	0x01EDE444 STR W0, [X31]
	0x01EDE448 UBFM W27, W8, 0x1E, 0x1D
	0x01EDE44C CBZ W9, 0x1EDE538
	0x01EDE450 LDR X8, [X19]
	0x01EDE454 MOV X0, X19
	0x01EDE458 LDR X9, [X8 + 0x3C8]
	0x01EDE45C LDR X1, [X8 + 0x3D0]
	0x01EDE460 BLR X9
	0x01EDE464 ADRP X8, 0x2222000
	0x01EDE468 ADRP X9, 0x2222000
	0x01EDE46C LDR X8, [X8 + 0x338]
	0x01EDE470 LDR X9, [X9 + 0x310]
	0x01EDE474 AND W0, W0, 0x1
	0x01EDE478 MOV X2, X19
	0x01EDE47C LDR X1, [X8]
	0x01EDE480 LDR X3, [X9]
	0x01EDE484 BL 0x2181A98
	0x01EDE488 LDR X8, [X19]
	0x01EDE48C MOV X0, X19
	0x01EDE490 LDR X9, [X8 + 0x468]
	0x01EDE494 LDR X1, [X8 + 0x470]
	0x01EDE498 BLR X9
	0x01EDE49C CBZ X0, 0x1EDE5FC
	0x01EDE4A0 LDR X8, [X0 + 0x18]
	0x01EDE4A4 MOV X22, X0
	0x01EDE4A8 CMP W8, 0x1
	0x01EDE4AC B.LT 0x1EDE538
	0x01EDE4B0 ADRP X21, 0x2222000
	0x01EDE4B4 LDR X21, [X21 + 0x318]
	0x01EDE4B8 MOV X28, X31
	0x01EDE4BC AND X8, X8, 0x0
	0x01EDE4C0 ADD X29, X22, 0x20
	0x01EDE4C4 CMP X28, W8, UXTW
	0x01EDE4C8 B.CS 0x1EDE600
	0x01EDE4CC LDR X0, [X26]
	0x01EDE4D0 LDR X23, [X29, X28, LSL #3]
	0x01EDE4D4 LDR X24, [X21]
	0x01EDE4D8 LDR W8, [X0 + 0xE0]
	0x01EDE4DC CBNZ W8, 0x1EDE4E4
	0x01EDE4E0 BL 0x1C16DFC
	0x01EDE4E4 MOV X0, X24
	0x01EDE4E8 MOV X1, X31
	0x01EDE4EC BL 0x338C698
	0x01EDE4F0 CBZ X0, 0x1EDE5FC
	0x01EDE4F4 LDR X8, [X0]
	0x01EDE4F8 MOV X1, X23
	0x01EDE4FC LDR X9, [X8 + 0x2A8]
	0x01EDE500 LDR X2, [X8 + 0x2B0]
	0x01EDE504 BLR X9
	0x01EDE508 TBZ X0, 0x0, 0x1EDE528
	0x01EDE50C LDR X0, [X25]
	0x01EDE510 LDR W8, [X0 + 0xE0]
	0x01EDE514 CBNZ W8, 0x1EDE51C
	0x01EDE518 BL 0x1C16DFC
	0x01EDE51C MOV X0, X23
	0x01EDE520 BL 0x1EDE2B0
	0x01EDE524 ADD W27, W27, W0, 0x2, LSL
	0x01EDE528 LDR W8, [X22 + 0x18]
	0x01EDE52C ADD X28, X28, 0x1
	0x01EDE530 CMP X28, W8, SXTW
	0x01EDE534 B.LT 0x1EDE4C4
	0x01EDE538 LDR W23, [X31]
	0x01EDE53C CMP W27, W23
	0x01EDE540 B.EQ 0x1EDE59C
	0x01EDE544 ADRP X21, 0x2215000
	0x01EDE548 LDR X21, [X21 + 0x758]
	0x01EDE54C ADD X1, X31, 0x8
	0x01EDE550 STR W27, [X31 + 0x8]
	0x01EDE554 LDR X0, [X21]
	0x01EDE558 BL 0x1C16E04
	0x01EDE55C MOV X22, X0
	0x01EDE560 LDR X0, [X21]
	0x01EDE564 ADD X1, X31, 0x4
	0x01EDE568 STR W23, [X31 + 0x4]
	0x01EDE56C BL 0x1C16E04
	0x01EDE570 ADRP X8, 0x2222000
	0x01EDE574 LDR X8, [X8 + 0x330]
	0x01EDE578 MOV X3, X0
	0x01EDE57C MOV X1, X19
	0x01EDE580 MOV X2, X22
	0x01EDE584 LDR X8, [X8]
	0x01EDE588 MOV X4, X31
	0x01EDE58C MOV X0, X8
	0x01EDE590 BL 0x3227C18
	0x01EDE594 MOV X1, X31
	0x01EDE598 BL 0x1E3B98C
	0x01EDE59C LDR X0, [X25]
	0x01EDE5A0 LDR W8, [X0 + 0xE0]
	0x01EDE5A4 CBNZ W8, 0x1EDE5B0
	0x01EDE5A8 BL 0x1C16DFC
	0x01EDE5AC LDR X0, [X25]
	0x01EDE5B0 LDR X8, [X0 + 0xB8]
	0x01EDE5B4 LDR W2, [X20 + 0x10]
	0x01EDE5B8 LDR X0, [X8]
	0x01EDE5BC STR W2, [X31 + 0xC]
	0x01EDE5C0 CBZ X0, 0x1EDE5FC
	0x01EDE5C4 ADRP X8, 0x221F000
	0x01EDE5C8 LDR X8, [X8 + 0x708]
	0x01EDE5CC MOV X1, X19
	0x01EDE5D0 LDR X3, [X8]
	0x01EDE5D4 BL 0x2A9EF9C
	0x01EDE5D8 LDR W0, [X31 + 0xC]
	0x01EDE5DC LDP X20, X19, [X31 + 0x60]
	0x01EDE5E0 LDP X22, X21, [X31 + 0x50]
	0x01EDE5E4 LDP X24, X23, [X31 + 0x40]
	0x01EDE5E8 LDP X26, X25, [X31 + 0x30]
	0x01EDE5EC LDP X28, X27, [X31 + 0x20]
	0x01EDE5F0 LDP X29, X30, [X31 + 0x10]
	0x01EDE5F4 ADD X31, X31, 0x70
	0x01EDE5F8 RET
	0x01EDE5FC BL 0x1C16F20
	0x01EDE600 BL 0x1C16F28
	0x01EDE604 MOV X0, X19
	0x01EDE608 MOV X1, X31
	0x01EDE60C BL 0x1E35868
	0x01EDE610 BL 0x1C16F20
	0x01EDE614 MOV X0, X20
	0x01EDE618 BL 0x1C171E0
	0x01EDE61C STR X30, [X31 - 0x30]!
	0x01EDE620 STP X22, X21, [X31 + 0x10]
	0x01EDE624 STP X20, X19, [X31 + 0x20]
	0x01EDE628 ADRP X21, 0x24FB000
	0x01EDE62C ADRP X22, 0x221F000
	0x01EDE630 ADRP X19, 0x221F000
	0x01EDE634 ADRP X20, 0x2220000
	0x01EDE638 LDRB W8, [X21 + 0x56D]
	0x01EDE63C LDR X22, [X22 + 0x800]
	0x01EDE640 LDR X19, [X19 + 0x808]
	0x01EDE644 LDR X20, [X20 + 0x328]
	0x01EDE648 TBNZ X8, 0x0, 0x1EDE678
	0x01EDE64C ADRP X0, 0x221F000
	0x01EDE650 LDR X0, [X0 + 0x808]
	0x01EDE654 BL 0x1C16CF4
	0x01EDE658 ADRP X0, 0x221F000
	0x01EDE65C LDR X0, [X0 + 0x800]
	0x01EDE660 BL 0x1C16CF4
	0x01EDE664 ADRP X0, 0x2220000
	0x01EDE668 LDR X0, [X0 + 0x328]
	0x01EDE66C BL 0x1C16CF4
	0x01EDE670 MOVZ W8, 0x1
	0x01EDE674 STRB W8, [X21 + 0x56D]
	0x01EDE678 LDR X0, [X22]
	0x01EDE67C BL 0x1C16F10
	0x01EDE680 LDR X1, [X19]
	0x01EDE684 MOV X19, X0
	0x01EDE688 BL 0x2A9E704
	0x01EDE68C LDR X8, [X20]
	0x01EDE690 LDP X22, X21, [X31 + 0x10]
	0x01EDE694 LDR X8, [X8 + 0xB8]
	0x01EDE698 STR X19, [X8]
	0x01EDE69C LDP X20, X19, [X31 + 0x20]
	0x01EDE6A0 LDR X30, [X31], #0x30
	0x01EDE6A4 RET
	0x01EDE6A8 MOV X1, X31
	0x01EDE6AC B 0x33BDD8C
	0x01EDE6B0 STR X30, [X31 - 0x10]!
	0x01EDE6B4 LDR X8, [X0 + 0x10]
	0x01EDE6B8 CBZ X8, 0x1EDE6D4
	0x01EDE6BC LDR W9, [X8 + 0x18]
	0x01EDE6C0 CMP W9, 0x1
	0x01EDE6C4 B.LS 0x1EDE6D8
	0x01EDE6C8 ADD X0, X8, 0x98
	0x01EDE6CC LDR X30, [X31], #0x10
	0x01EDE6D0 RET
	0x01EDE6D4 BL 0x1C16F20
	0x01EDE6D8 BL 0x1C16F28
	0x01EDE6DC STP X30, X21, [X31 - 0x20]!
	0x01EDE6E0 STP X20, X19, [X31 + 0x10]
	0x01EDE6E4 ADRP X21, 0x24FB000
	0x01EDE6E8 LDRB W8, [X21 + 0x56E]
	0x01EDE6EC MOV X19, X1
	0x01EDE6F0 MOV X20, X0
	0x01EDE6F4 TBNZ X8, 0x0, 0x1EDE70C
	0x01EDE6F8 ADRP X0, 0x2222000
	0x01EDE6FC LDR X0, [X0 + 0x340]
	0x01EDE700 BL 0x1C16CF4
	0x01EDE704 MOVZ W8, 0x1
	0x01EDE708 STRB W8, [X21 + 0x56E]
	0x01EDE70C CBZ X19, 0x1EDE7BC
	0x01EDE710 ADRP X9, 0x2222000
	0x01EDE714 LDR X9, [X9 + 0x340]
	0x01EDE718 LDR X8, [X19]
	0x01EDE71C LDR X1, [X9]
	0x01EDE720 LDRB W10, [X8 + 0x130]
	0x01EDE724 LDRB W9, [X1 + 0x130]
	0x01EDE728 CMP W10, W9
	0x01EDE72C B.CC 0x1EDE7C0
	0x01EDE730 LDR X8, [X8 + 0xC8]
	0x01EDE734 ADD X8, X8, X9, 0x3, LSL
	0x01EDE738 LDUR X8, [X8 - 0x8]
	0x01EDE73C CMP X8, X1
	0x01EDE740 B.NE 0x1EDE7C0
	0x01EDE744 LDR X0, [X20 + 0x10]
	0x01EDE748 CBZ X0, 0x1EDE7BC
	0x01EDE74C LDR W8, [X19 + 0x38]
	0x01EDE750 LDR W9, [X0 + 0x18]
	0x01EDE754 SUBS W1, W8, W9
	0x01EDE758 B.LE 0x1EDE76C
	0x01EDE75C MOV X0, X20
	0x01EDE760 BL 0x1EDE7C8
	0x01EDE764 LDR X0, [X20 + 0x10]
	0x01EDE768 CBZ X0, 0x1EDE7BC
	0x01EDE76C LDR W2, [X0 + 0x18]
	0x01EDE770 MOV W1, W31
	0x01EDE774 MOV X3, X31
	0x01EDE778 BL 0x339FA34
	0x01EDE77C LDR X0, [X19 + 0x10]
	0x01EDE780 LDR X2, [X20 + 0x10]
	0x01EDE784 LDR W4, [X19 + 0x38]
	0x01EDE788 MOV W1, W31
	0x01EDE78C MOV W3, W31
	0x01EDE790 MOV X5, X31
	0x01EDE794 BL 0x339FCE8
	0x01EDE798 LDR W8, [X19 + 0x20]
	0x01EDE79C STR W8, [X20 + 0x20]
	0x01EDE7A0 LDR V0, [X19 + 0x38]
	0x01EDE7A4 STR D0, [X20 + 0x38]
	0x01EDE7A8 LDR W8, [X19 + 0x40]
	0x01EDE7AC STR W8, [X20 + 0x40]
	0x01EDE7B0 LDP X20, X19, [X31 + 0x10]
	0x01EDE7B4 LDP X30, X21, [X31], #0x20
	0x01EDE7B8 RET
	0x01EDE7BC BL 0x1C16F20
	0x01EDE7C0 MOV X0, X19
	0x01EDE7C4 BL 0x1C171E0
	0x01EDE7C8 STP D9, D8, [X31 - 0x40]!
	0x01EDE7CC STP X30, X23, [X31 + 0x10]
	0x01EDE7D0 STP X22, X21, [X31 + 0x20]
	0x01EDE7D4 STP X20, X19, [X31 + 0x30]
	0x01EDE7D8 ADRP X21, 0x24FB000
	0x01EDE7DC LDRB W8, [X21 + 0x576]
	0x01EDE7E0 MOV W20, W1
	0x01EDE7E4 MOV X19, X0
	0x01EDE7E8 TBNZ X8, 0x0, 0x1EDE80C
	0x01EDE7EC ADRP X0, 0x2222000
	0x01EDE7F0 LDR X0, [X0 + 0x348]
	0x01EDE7F4 BL 0x1C16CF4
	0x01EDE7F8 ADRP X0, 0x2215000
	0x01EDE7FC LDR X0, [X0 + 0x5A8]
	0x01EDE800 BL 0x1C16CF4
	0x01EDE804 MOVZ W8, 0x1
	0x01EDE808 STRB W8, [X21 + 0x576]
	0x01EDE80C LDR X21, [X19 + 0x10]!
	0x01EDE810 CBZ X21, 0x1EDE8D0
	0x01EDE814 ADRP X22, 0x2215000
	0x01EDE818 LDR X22, [X22 + 0x5A8]
	0x01EDE81C LDR V0, [X21 + 0x18]
	0x01EDE820 ADRP X23, 0x24FA000
	0x01EDE824 LDRB W8, [X23 + 0xA23]
	0x01EDE828 SCVTF S1, W20
	0x01EDE82C SCVTF S0, S0
	0x01EDE830 FDIV S8, S1, S0
	0x01EDE834 FMOV S9, 1
	0x01EDE838 CBNZ W8, 0x1EDE850
	0x01EDE83C ADRP X0, 0x2215000
	0x01EDE840 LDR X0, [X0 + 0x5A8]
	0x01EDE844 BL 0x1C16CF4
	0x01EDE848 MOVZ W8, 0x1
	0x01EDE84C STRB W8, [X23 + 0xA23]
	0x01EDE850 LDR X0, [X22]
	0x01EDE854 ADRP X20, 0x2222000
	0x01EDE858 FADD S8, S8, S9
	0x01EDE85C LDR W8, [X0 + 0xE0]
	0x01EDE860 LDR X20, [X20 + 0x348]
	0x01EDE864 CBZ W8, 0x1EDE870
	0x01EDE868 FRINTM S8, S8
	0x01EDE86C B 0x1EDE888
	0x01EDE870 BL 0x1C16DFC
	0x01EDE874 LDR X0, [X22]
	0x01EDE878 FRINTM S8, S8
	0x01EDE87C LDR W8, [X0 + 0xE0]
	0x01EDE880 CBNZ W8, 0x1EDE888
	0x01EDE884 BL 0x1C16DFC
	0x01EDE888 MOVZ W8, 0x7F800000
	0x01EDE88C FMOV S0, W8
	0x01EDE890 FCVTZS W9, S8
	0x01EDE894 FCMP S8, S0
	0x01EDE898 MOVZ W8, 0x80000000
	0x01EDE89C CSEL W1, W8, W9, EQ
	0x01EDE8A0 MOVZ W0, 0x2
	0x01EDE8A4 MOV X2, X31
	0x01EDE8A8 BL 0x337EDF0
	0x01EDE8AC LDR W8, [X21 + 0x18]
	0x01EDE8B0 LDR X2, [X20]
	0x01EDE8B4 LDP X22, X21, [X31 + 0x20]
	0x01EDE8B8 LDP X30, X23, [X31 + 0x10]
	0x01EDE8BC MUL W1, W0, W8
	0x01EDE8C0 MOV X0, X19
	0x01EDE8C4 LDP X20, X19, [X31 + 0x30]
	0x01EDE8C8 LDP D9, D8, [X31], #0x40
	0x01EDE8CC B 0x2114FBC
	0x01EDE8D0 BL 0x1C16F20
	0x01EDE8D4 LDR W0, [X0 + 0x3C]
	0x01EDE8D8 RET
	0x01EDE8DC STR X30, [X31 - 0x10]!
	0x01EDE8E0 LDR W8, [X0 + 0x40]
	0x01EDE8E4 CBZ W8, 0x1EDE91C
	0x01EDE8E8 STR W8, [X1]
	0x01EDE8EC LDR X8, [X0 + 0x10]
	0x01EDE8F0 CBZ X8, 0x1EDE984
	0x01EDE8F4 LDRSW X9, [X0 + 0x40]
	0x01EDE8F8 LDR W10, [X8 + 0x18]
	0x01EDE8FC CMP W9, W10
	0x01EDE900 B.CS 0x1EDE980
	0x01EDE904 MOVZ W10, 0x78
	0x01EDE908 MADD X9, X9, X10, X8
	0x01EDE90C LDR W9, [X9 + 0x84]
	0x01EDE910 STR W9, [X0 + 0x40]
	0x01EDE914 LDR W9, [X1]
	0x01EDE918 B 0x1EDE934
	0x01EDE91C LDR W9, [X0 + 0x38]
	0x01EDE920 ADD W8, W9, 0x1
	0x01EDE924 STR W8, [X0 + 0x38]
	0x01EDE928 STR W9, [X1]
	0x01EDE92C LDR X8, [X0 + 0x10]
	0x01EDE930 CBZ X8, 0x1EDE984
	0x01EDE934 LDR W10, [X8 + 0x18]
	0x01EDE938 CMP W9, W10
	0x01EDE93C B.CS 0x1EDE980
	0x01EDE940 MOVZ W10, 0x78
	0x01EDE944 MOVI V0.2D, 0x0
	0x01EDE948 SMADDL X8, X9, X10, X8
	0x01EDE94C MOVZ W9, 0x1
	0x01EDE950 STR V0, [X8 + 0x20]!
	0x01EDE954 STR X31, [X8 + 0x70]
	0x01EDE958 STP V0, V0, [X8 + 0x50]
	0x01EDE95C STP V0, V0, [X8 + 0x30]
	0x01EDE960 STP V0, V0, [X8 + 0x10]
	0x01EDE964 STRB W9, [X8 + 0x60]
	0x01EDE968 LDR W9, [X0 + 0x3C]
	0x01EDE96C ADD W9, W9, 0x1
	0x01EDE970 STR W9, [X0 + 0x3C]
	0x01EDE974 MOV X0, X8
	0x01EDE978 LDR X30, [X31], #0x10
	0x01EDE97C RET
	0x01EDE980 BL 0x1C16F28
	0x01EDE984 BL 0x1C16F20
	0x01EDE988 STR X30, [X31 - 0x10]!
	0x01EDE98C LDR X8, [X0 + 0x10]
	0x01EDE990 CBZ X8, 0x1EDE9C8
	0x01EDE994 LDR W9, [X8 + 0x18]
	0x01EDE998 CMP W9, W1
	0x01EDE99C B.LS 0x1EDE9CC
	0x01EDE9A0 MOVZ W9, 0x78
	0x01EDE9A4 SMADDL X8, X1, X9, X8
	0x01EDE9A8 STRB W31, [X8 + 0x80]
	0x01EDE9AC LDR W9, [X0 + 0x40]
	0x01EDE9B0 STR W9, [X8 + 0x84]
	0x01EDE9B4 LDR W8, [X0 + 0x3C]
	0x01EDE9B8 SUB W8, W8, 0x1
	0x01EDE9BC STP W8, W1, [X0 + 0x3C]
	0x01EDE9C0 LDR X30, [X31], #0x10
	0x01EDE9C4 RET
	0x01EDE9C8 BL 0x1C16F20
	0x01EDE9CC BL 0x1C16F28
	0x01EDE9D0 STR X30, [X31 - 0x10]!
	0x01EDE9D4 LDR X8, [X0 + 0x10]
	0x01EDE9D8 CBZ X8, 0x1EDE9FC
	0x01EDE9DC LDR W9, [X8 + 0x18]
	0x01EDE9E0 CMP W9, W1
	0x01EDE9E4 B.LS 0x1EDEA00
	0x01EDE9E8 MOVZ W9, 0x78
	0x01EDE9EC SMADDL X8, X1, X9, X8
	0x01EDE9F0 ADD X0, X8, 0x20
	0x01EDE9F4 LDR X30, [X31], #0x10
	0x01EDE9F8 RET
	0x01EDE9FC BL 0x1C16F20
	0x01EDEA00 BL 0x1C16F28
	0x01EDEA04 STR X30, [X31 - 0x30]!
	0x01EDEA08 STP X22, X21, [X31 + 0x10]
	0x01EDEA0C STP X20, X19, [X31 + 0x20]
	0x01EDEA10 ADRP X21, 0x24FB000
	0x01EDEA14 LDRB W8, [X21 + 0x56F]
	0x01EDEA18 MOV X20, X1
	0x01EDEA1C MOV X19, X0
	0x01EDEA20 TBNZ X8, 0x0, 0x1EDEA38
	0x01EDEA24 ADRP X0, 0x2222000
	0x01EDEA28 LDR X0, [X0 + 0x350]
	0x01EDEA2C BL 0x1C16CF4
	0x01EDEA30 MOVZ W8, 0x1
	0x01EDEA34 STRB W8, [X21 + 0x56F]
	0x01EDEA38 STR W31, [X31 + 0xC]
	0x01EDEA3C LDR X21, [X19 + 0x18]
	0x01EDEA40 CBZ X21, 0x1EDEAE4
	0x01EDEA44 ADRP X22, 0x24FB000
	0x01EDEA48 LDRB W8, [X22 + 0x5A4]
	0x01EDEA4C CBNZ W8, 0x1EDEA64
	0x01EDEA50 ADRP X0, 0x2222000
	0x01EDEA54 LDR X0, [X0 + 0x358]
	0x01EDEA58 BL 0x1C16CF4
	0x01EDEA5C MOVZ W8, 0x1
	0x01EDEA60 STRB W8, [X22 + 0x5A4]
	0x01EDEA64 LDR X0, [X21 + 0x10]
	0x01EDEA68 CBZ X0, 0x1EDEAE4
	0x01EDEA6C ADRP X8, 0x2222000
	0x01EDEA70 LDR X8, [X8 + 0x358]
	0x01EDEA74 ADD X2, X31, 0xC
	0x01EDEA78 MOV X1, X20
	0x01EDEA7C LDR X3, [X8]
	0x01EDEA80 BL 0x2AA09F8
	0x01EDEA84 TBZ X0, 0x0, 0x1EDEAD4
	0x01EDEA88 LDR X8, [X19 + 0x10]
	0x01EDEA8C CBZ X8, 0x1EDEAE4
	0x01EDEA90 LDRSW X9, [X31 + 0xC]
	0x01EDEA94 LDR W10, [X8 + 0x18]
	0x01EDEA98 CMP W9, W10
	0x01EDEA9C B.CS 0x1EDEAE8
	0x01EDEAA0 ADRP X10, 0x2222000
	0x01EDEAA4 LDR X10, [X10 + 0x350]
	0x01EDEAA8 MOVZ W11, 0x78
	0x01EDEAAC MADD X8, X9, X11, X8
	0x01EDEAB0 ADD X20, X8, 0x20
	0x01EDEAB4 LDR X0, [X10]
	0x01EDEAB8 LDR W10, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0x24FC000
	015 Move X28, 0x2223000
	016 Move W8, [X19+1379]
	017 Move X28, [X28+560]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {81}
	022 Move X0, 0x2223000
	023 Move X0, [X0+568]
	024 Call 0x1C17CF4
	025 Move X0, 0x2220000
	026 Move X0, [X0+2352]
	027 Call 0x1C17CF4
	028 Move X0, 0x2220000
	029 Move X0, [X0+1800]
	030 Call 0x1C17CF4
	031 Move X0, 0x2220000
	032 Move X0, [X0+2056]
	033 Call 0x1C17CF4
	034 Move X0, 0x2220000
	035 Move X0, [X0+2048]
	036 Call 0x1C17CF4
	037 Move X0, 0x2223000
	038 Move X0, [X0+576]
	039 Call 0x1C17CF4
	040 Move X0, 0x2223000
	041 Move X0, [X0+584]
	042 Call 0x1C17CF4
	043 Move X0, 0x2223000
	044 Move X0, [X0+592]
	045 Call 0x1C17CF4
	046 Move X0, 0x2223000
	047 Move X0, [X0+600]
	048 Call 0x1C17CF4
	049 Move X0, 0x2223000
	050 Move X0, [X0+608]
	051 Call 0x1C17CF4
	052 Move X0, 0x2223000
	053 Move X0, [X0+616]
	054 Call 0x1C17CF4
	055 Move X0, 0x2223000
	056 Move X0, [X0+624]
	057 Call 0x1C17CF4
	058 Move X0, 0x2223000
	059 Move X0, [X0+560]
	060 Call 0x1C17CF4
	061 Move X0, 0x2223000
	062 Move X0, [X0+632]
	063 Call 0x1C17CF4
	064 Move X0, 0x2223000
	065 Move X0, [X0+640]
	066 Call 0x1C17CF4
	067 Move X0, 0x2216000
	068 Move X0, [X0+1728]
	069 Call 0x1C17CF4
	070 Move X0, 0x2223000
	071 Move X0, [X0+648]
	072 Call 0x1C17CF4
	073 Move X0, 0x2223000
	074 Move X0, [X0+656]
	075 Call 0x1C17CF4
	076 Move X0, 0x2223000
	077 Move X0, [X0+664]
	078 Call 0x1C17CF4
	079 Move W8, 1
	080 Move [X19+1379], W8
	081 Move X8, [X28]
	082 Move X8, [X8+184]
	083 Move W9, [X8]
	084 Compare W9, 0
	085 JumpIfNotEqual {397}
	086 Move W9, 1
	087 Move [X8], W9
	088 Move X20, 0x2220000
	089 Move X20, [X20+2048]
	090 Move X0, [X20]
	091 Call 0x1C17F10
	092 Move X21, 0x2220000
	093 Move X21, [X21+2056]
	094 Move X19, X0
	095 Move X1, [X21]
	096 Call Dictionary`2<Object, Int32>..ctor, X0
	097 Move X8, [X28]
	098 Move X8, [X8+184]
	099 Move [X8+8], X19
	100 Move X0, [X20]
	101 Call 0x1C17F10
	102 Move X1, [X21]
	103 Move X19, X0
	104 Call Dictionary`2<Object, Int32>..ctor, X0
	105 Move X8, [X28]
	106 Move X8, [X8+184]
	107 Move [X8+16], X19
	108 Move X8, 0x2223000
	109 Move X8, [X8+624]
	110 Move X0, [X8]
	111 Call 0x1C17F10
	112 Move X8, 0x2223000
	113 Move X8, [X8+600]
	114 Move X19, X0
	115 Move X1, [X8]
	116 Call List`1<ValueTuple`2<Object, Object>>..ctor, X0
	117 Move X0, X31
	118 Call AppDomain.get_CurrentDomain
	119 Compare X0, 0
	120 JumpIfEqual {411}
	121 Move X1, X31
	122 Call AppDomain.GetAssemblies, X0
	123 Compare X0, 0
	124 JumpIfEqual {411}
	125 Move X8, [X0+24]
	126 Move X20, X0
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X22, 0x2223000
	129 Move X23, 0x2216000
	130 Move X24, 0x2223000
	131 Move X22, [X22+576]
	132 Move X23, [X23+1728]
	133 Move X24, [X24+632]
	134 Move X29, X31
	135 And X8, X8, 0
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Add X8, X20, X29
	138 Move X25, [X8+32]
	139 Move X8, 0x2220000
	140 Move X8, [X8+2352]
	141 Move X0, X25
	142 Move X1, [X8]
	143 Call 0x21A985C, X0
	144 Compare X0, 0
	145 JumpIfEqual {149}
	146 Move W8, [X20+24]
	147 Add X29, X29, 1
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Compare X25, 0
	150 JumpIfEqual {291}
	151 Move X8, [X25]
	152 Move X1, [X8+560]
	153 Move X9, [X8+552]
	154 Move X0, X25
	155 NotImplemented "Instruction BLR not yet implemented."
	156 Move X25, X0
	157 Compare X0, 0
	158 JumpIfEqual {292}
	159 Move W8, [X25+24]
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move W21, W31
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Add X8, X25, W21
	164 Move X26, [X8+32]
	165 Compare X26, 0
	166 JumpIfEqual {289}
	167 Move X0, X26
	168 Move X1, X31
	169 Call Type.get_IsValueType, X0
	170 Move TEMP, X0
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfNotEqual {257}
	174 Move X0, [X23]
	175 Move X27, [X22]
	176 Move W8, [X0+224]
	177 Compare W8, 0
	178 JumpIfNotEqual {180}
	179 Call 0x1C17DFC
	180 Move X0, X27
	181 Move X1, X31
	182 Call Type.GetTypeFromHandle, X0
	183 Compare X0, 0
	184 JumpIfEqual {290}
	185 Move X8, [X0]
	186 Move X9, [X8+680]
	187 Move X2, [X8+688]
	188 Move X1, X26
	189 NotImplemented "Instruction BLR not yet implemented."
	190 Move TEMP, X0
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfNotEqual {257}
	194 Move X0, [X23]
	195 Move X27, [X24]
	196 Move W8, [X0+224]
	197 Compare W8, 0
	198 JumpIfNotEqual {200}
	199 Call 0x1C17DFC
	200 Move X0, X27
	201 Move X1, X31
	202 Call Type.GetTypeFromHandle, X0
	203 Move X1, X0
	204 Move X8, [X26]
	205 Move X9, [X8+520]
	206 Move X3, [X8+528]
	207 Move X0, X26
	208 Move W2, W31
	209 NotImplemented "Instruction BLR not yet implemented."
	210 Move X8, X0
	211 Compare X0, 0
	212 JumpIfEqual {260}
	213 Move W9, [X8+24]
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move X2, [X8+32]
	216 Compare X2, 0
	217 JumpIfEqual {257}
	218 Move X8, 0x2223000
	219 Move X8, [X8+640]
	220 Move X9, [X2]
	221 Move X8, [X8]
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Move X8, 0x2223000
	224 Move X8, [X8+664]
	225 Move [X31], X31
	226 Move [X31+8], X31
	227 Move X3, [X8]
	228 Add X0, X31, 0
	229 Move X1, X26
	230 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	231 Compare X19, 0
	232 JumpIfEqual {261}
	233 Move X9, 0x2223000
	234 Move X1, [X31]
	235 Move X2, [X31+8]
	236 Move W10, [X19+28]
	237 Move X8, [X19+16]
	238 Move X9, [X9+584]
	239 Add W10, W10, 1
	240 Move X9, [X9]
	241 Move [X19+28], W10
	242 Compare X8, 0
	243 JumpIfEqual {262}
	244 NotImplemented "Instruction LDRSW not yet implemented."
	245 Move W11, [X8+24]
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Add W9, W10, 1
	248 Add X8, X8, X10
	249 Move [X19+24], W9
	250 Move [X8+32], X1
	251 Move [X8+40], X2
	252 Move X8, [X9+32]
	253 Move X8, [X8+192]
	254 Move X3, [X8+112]
	255 Move X0, X19
	256 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	257 Move W8, [X25+24]
	258 Add W21, W21, 1
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Call 0x1C17F20
	261 Call 0x1C17F20
	262 Call 0x1C17F20
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Call 0x3EB2AD0
	265 Move X26, X0
	266 Move X0, 0x2216000
	267 Move X0, [X0+2000]
	268 Call 0x1C17D08
	269 Move X8, [X26]
	270 Move X1, [X8]
	271 Call 0x1C18270
	272 Move TEMP, X0
	273 And TEMP, TEMP, 1
	274 Compare TEMP, 1
	275 JumpIfNotEqual {293}
	276 Move X26, [X26]
	277 Call 0x3EB2AE0
	278 Move X0, 0x221E000
	279 Move X0, [X0+2224]
	280 Call 0x1C17D08
	281 Move W8, [X0+224]
	282 Compare W8, 0
	283 JumpIfNotEqual {285}
	284 Call 0x1C17DFC
	285 Move X0, X26
	286 Move X1, X31
	287 Call Log.Exception, X0
	288 Call 0x1C17F28
	289 Call 0x1C17F20
	290 Call 0x1C17F20
	291 Call 0x1C17F20
	292 Call 0x1C17F20
	293 Move W0, 8
	294 Call 0x3EB2AF0
	295 Move X8, [X26]
	296 Move [X0], X8
	297 Move X1, 0x1FD7000
	298 Add X1, X1, 3672
	299 Move X2, X31
	300 Call 0x3EB2B00
	301 Move X25, X1
	302 Move X26, X0
	303 Call 0x3EB2AE0
	304 Move X0, X26
	305 Move X1, X25
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Call 0x3EB2AD0
	308 Move X25, X0
	309 Move X0, 0x221C000
	310 Move X0, [X0+3264]
	311 Call 0x1C17D08
	312 Move X8, [X25]
	313 Move X1, [X8]
	314 Call 0x1C18270
	315 Move TEMP, X0
	316 And TEMP, TEMP, 1
	317 Compare TEMP, 1
	318 JumpIfNotEqual {414}
	319 Call 0x3EB2AE0
	320 Move X22, 0x2223000
	321 Move X22, [X22+656]
	322 Move X0, [X22]
	323 Move W8, [X0+224]
	324 Compare W8, 0
	325 JumpIfNotEqual {328}
	326 Call 0x1C17DFC
	327 Move X0, [X22]
	328 Move X8, [X0+184]
	329 Move X20, [X8+8]
	330 Compare X20, 0
	331 JumpIfNotEqual {353}
	332 Move W8, [X0+224]
	333 Compare W8, 0
	334 JumpIfNotEqual {337}
	335 Call 0x1C17DFC
	336 Move X0, [X22]
	337 Move X9, 0x2223000
	338 Move X8, [X0+184]
	339 Move X9, [X9+568]
	340 Move X21, [X8]
	341 Move X0, [X9]
	342 Call 0x1C17F10
	343 Move X8, 0x2223000
	344 Move X8, [X8+648]
	345 Move X1, X21
	346 Move X3, X31
	347 Move X20, X0
	348 Move X2, [X8]
	349 Call Comparison`1<ValueTuple`2<Object, Object>>..ctor, X0, X1, X2
	350 Move X8, [X22]
	351 Move X8, [X8+184]
	352 Move [X8+8], X20
	353 Compare X19, 0
	354 JumpIfEqual {411}
	355 Move X8, 0x2223000
	356 Move X8, [X8+592]
	357 Move X0, X19
	358 Move X1, X20
	359 Move X2, [X8]
	360 Call List`1<ValueTuple`2<Object, Object>>.Sort, X0, X1
	361 Move W8, [X19+24]
	362 NotImplemented "Instruction CMP not yet implemented."
	363 Move X23, 0x2223000
	364 Move X24, 0x2220000
	365 Move X23, [X23+616]
	366 Move X24, [X24+1800]
	367 Move W20, W31
	368 Move X2, [X23]
	369 Move X0, X19
	370 Move W1, W20
	371 Call List`1<ValueTuple`2<Object, Object>>.get_Item, X0, X1
	372 Move X8, [X28]
	373 Move X21, X0
	374 Move X8, [X8+184]
	375 Move X0, [X8+16]
	376 Compare X0, 0
	377 JumpIfEqual {411}
	378 Move X3, [X24]
	379 Add W20, W20, 1
	380 Move X22, X1
	381 Move X1, X21
	382 Move W2, W20
	383 Call Dictionary`2<Object, Int32>.Add, X0, X1, X2
	384 Compare X22, 0
	385 JumpIfEqual {411}
	386 Move X8, [X28]
	387 Move X8, [X8+184]
	388 Move X0, [X8+8]
	389 Compare X0, 0
	390 JumpIfEqual {411}
	391 Move W2, [X22+16]
	392 Move X3, [X24]
	393 Move X1, X21
	394 Call Dictionary`2<Object, Int32>.Add, X0, X1, X2
	395 Move W8, [X19+24]
	396 NotImplemented "Instruction CMP not yet implemented."
	397 Move X20, [X31+96]
	398 Move X19, [X31+104]
	399 Move X22, [X31+80]
	400 Move X21, [X31+88]
	401 Move X24, [X31+64]
	402 Move X23, [X31+72]
	403 Move X26, [X31+48]
	404 Move X25, [X31+56]
	405 Move X28, [X31+32]
	406 Move X27, [X31+40]
	407 Move X29, [X31+16]
	408 Move X30, [X31+24]
	409 Add X31, X31, 112
	410 Return 
	411 Call 0x1C17F20
	412 Call 0x1C17F28
	413 Move X19, X0
	414 Move W0, 8
	415 Call 0x3EB2AF0
	416 Move X8, [X25]
	417 Move [X0], X8
	418 Move X1, 0x1FD7000
	419 Add X1, X1, 3672
	420 Move X2, X31
	421 Call 0x3EB2B00
	422 Call 0x1991590
	423 Move X19, X0
	424 Call 0x3EB2AE0
	425 Move X0, X19
	426 Call 0x1D2D690
	427 Call 0x1991590

Method: System.Int32 GetMaxWordCount()

Disassembly:
	0x01EDEABC CBNZ W10, 0x1EDEAC4
	0x01EDEAC0 BL 0x1C16DFC
	0x01EDEAC4 MOV X0, X20
	0x01EDEAC8 MOV X1, X19
	0x01EDEACC MOV X2, X31
	0x01EDEAD0 BL 0x1EEA280
	0x01EDEAD4 LDP X20, X19, [X31 + 0x20]
	0x01EDEAD8 LDP X22, X21, [X31 + 0x10]
	0x01EDEADC LDR X30, [X31], #0x30
	0x01EDEAE0 RET
	0x01EDEAE4 BL 0x1C16F20
	0x01EDEAE8 BL 0x1C16F28
	0x01EDEAEC STR X30, [X31 - 0x30]!
	0x01EDEAF0 STP X22, X21, [X31 + 0x10]
	0x01EDEAF4 STP X20, X19, [X31 + 0x20]
	0x01EDEAF8 MOV W19, W3
	0x01EDEAFC MOV X20, X2
	0x01EDEB00 MOV X21, X1
	0x01EDEB04 MOV X22, X0
	0x01EDEB08 BL 0x1EDE6B0
	0x01EDEB0C MOV X1, X0
	0x01EDEB10 MOV X0, X22
	0x01EDEB14 MOV X2, X21
	0x01EDEB18 MOV X3, X20
	0x01EDEB1C MOV W4, W19
	0x01EDEB20 LDP X20, X19, [X31 + 0x20]
	0x01EDEB24 LDP X22, X21, [X31 + 0x10]
	0x01EDEB28 LDR X30, [X31], #0x30
	0x01EDEB2C B 0x1EDEB30
	0x01EDEB30 STP X29, X30, [X31 - 0x60]!
	0x01EDEB34 STP X28, X27, [X31 + 0x10]
	0x01EDEB38 STP X26, X25, [X31 + 0x20]
	0x01EDEB3C STP X24, X23, [X31 + 0x30]
	0x01EDEB40 STP X22, X21, [X31 + 0x40]
	0x01EDEB44 STP X20, X19, [X31 + 0x50]
	0x01EDEB48 ADRP X23, 0x2222000
	0x01EDEB4C ADRP X24, 0x2222000
	0x01EDEB50 ADRP X25, 0x2222000
	0x01EDEB54 LDR X23, [X23 + 0x350]
	0x01EDEB58 LDR X24, [X24 + 0x360]
	0x01EDEB5C LDR X25, [X25 + 0x368]
	0x01EDEB60 MOV W19, W4
	0x01EDEB64 MOV X20, X3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x24FC000
	005 Move X19, 0x2223000
	006 Move W8, [X20+1380]
	007 Move X19, [X19+560]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x2223000
	013 Move X0, [X0+672]
	014 Call 0x1C17CF4
	015 Move X0, 0x2223000
	016 Move X0, [X0+680]
	017 Call 0x1C17CF4
	018 Move X0, 0x2223000
	019 Move X0, [X0+560]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1380], W8
	023 Call NetworkInputUtils.LoadTypes
	024 Move X8, [X19]
	025 Move X8, [X8+184]
	026 Move X0, [X8+8]
	027 Compare X0, 0
	028 JumpIfEqual {51}
	029 Move X8, 0x2223000
	030 Move X8, [X8+672]
	031 Move X1, [X8]
	032 Call Dictionary`2<Object, Int32>.get_Count, X0
	033 Compare W0, 0
	034 JumpIfEqual {47}
	035 Move X8, [X19]
	036 Move X8, [X8+184]
	037 Move X0, [X8+8]
	038 Compare X0, 0
	039 JumpIfEqual {51}
	040 Move X8, 0x2223000
	041 Move X8, [X8+680]
	042 Move X1, [X8]
	043 Call Dictionary`2<Object, Int32>.get_Values, X0
	044 Move X1, X31
	045 Call Enumerable.Max, X0
	046 Add W0, W0, 1
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Return X0
	051 Call 0x1C17F20

Method: System.Int32 GetWordCount(System.Type type)

Disassembly:
	0x01EDEB68 MOV X21, X2
	0x01EDEB6C MOV X26, X1
	0x01EDEB70 MOV X22, X0
	0x01EDEB74 ADRP X27, 0x24FB000
	0x01EDEB78 MOVZ W28, 0x78
	0x01EDEB7C MOVZ W29, 0x1
	0x01EDEB80 LDRB W8, [X27 + 0x570]
	0x01EDEB84 TBNZ X8, 0x0, 0x1EDEBA4
	0x01EDEB88 MOV X0, X23
	0x01EDEB8C BL 0x1C16CF4
	0x01EDEB90 MOV X0, X25
	0x01EDEB94 BL 0x1C16CF4
	0x01EDEB98 MOV X0, X24
	0x01EDEB9C BL 0x1C16CF4
	0x01EDEBA0 STRB W29, [X27 + 0x570]
	0x01EDEBA4 LDR X0, [X23]
	0x01EDEBA8 LDR W8, [X0 + 0xE0]
	0x01EDEBAC CBNZ W8, 0x1EDEBB4
	0x01EDEBB0 BL 0x1C16DFC
	0x01EDEBB4 LDR W8, [X26 + 0x48]
	0x01EDEBB8 CMP W8, 0x1
	0x01EDEBBC B.LT 0x1EDECF0
	0x01EDEBC0 CBZ X21, 0x1EDED0C
	0x01EDEBC4 LDR X8, [X21]
	0x01EDEBC8 LDR X1, [X24]
	0x01EDEBCC LDRH W9, [X8 + 0x12E]
	0x01EDEBD0 CBZ X9, 0x1EDEBF4
	0x01EDEBD4 LDR X10, [X8 + 0xB0]
	0x01EDEBD8 ADD X10, X10, 0x8
	0x01EDEBDC LDUR X11, [X10 - 0x8]
	0x01EDEBE0 CMP X11, X1
	0x01EDEBE4 B.EQ 0x1EDEC04
	0x01EDEBE8 SUBS X9, X9, 0x1
	0x01EDEBEC ADD X10, X10, 0x10
	0x01EDEBF0 B.NE 0x1EDEBDC
	0x01EDEBF4 MOV X0, X21
	0x01EDEBF8 MOV W2, W31
	0x01EDEBFC BL 0x1C5C788
	0x01EDEC00 B 0x1EDEC10
	0x01EDEC04 LDRSW X9, [X10]
	0x01EDEC08 ADD X8, X8, X9, 0x4, LSL
	0x01EDEC0C ADD X0, X8, 0x138
	0x01EDEC10 LDP X8, X2, [X0]
	0x01EDEC14 ADD X1, X26, 0x18
	0x01EDEC18 MOV X0, X21
	0x01EDEC1C BLR X8
	0x01EDEC20 TBZ X0, 0x0, 0x1EDECF0
	0x01EDEC24 LDR X0, [X23]
	0x01EDEC28 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x24FC000
	007 Move X20, 0x2223000
	008 Move W8, [X21+1381]
	009 Move X20, [X20+560]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x2220000
	016 Move X0, [X0+1808]
	017 Call 0x1C17CF4
	018 Move X0, 0x2223000
	019 Move X0, [X0+560]
	020 Call 0x1C17CF4
	021 Move X0, 0x2223000
	022 Move X0, [X0+688]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+1381], W8
	026 Move [X31+12], W31
	027 Call NetworkInputUtils.LoadTypes
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move X0, [X8+8]
	031 Compare X0, 0
	032 JumpIfEqual {61}
	033 Move X8, 0x2220000
	034 Move X8, [X8+1808]
	035 Add X2, X31, 12
	036 Move X1, X19
	037 Move X3, [X8]
	038 Call Dictionary`2<Object, Int32>.TryGetValue, X0, X1, X2
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {44}
	043 Move W0, [X31+12]
	044 Move X8, 0x2223000
	045 Move X8, [X8+688]
	046 Move X1, X19
	047 Move X2, X31
	048 Move X0, [X8]
	049 Call String.Format, X0, X1
	050 Move X1, X31
	051 Call Assert.AlwaysFail, X0
	052 Move TEMP, 0
	053 Not TEMP
	054 Move W0, TEMP
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X30, [X31+16]
	058 Move X21, [X31+24]
	059 Add X31, X31, 48
	060 Return X0
	061 Call 0x1C17F20

Method: System.Int32 GetTypeKey(System.Type type)

Disassembly:
	0x01EDEC2C CBNZ W8, 0x1EDEC34
	0x01EDEC30 BL 0x1C16DFC
	0x01EDEC34 LDRB W8, [X26 + 0x70]
	0x01EDEC38 CBZ W8, 0x1EDEC84
	0x01EDEC3C LDRB W8, [X26 + 0x58]
	0x01EDEC40 CBZ W8, 0x1EDEC84
	0x01EDEC44 LDR X0, [X23]
	0x01EDEC48 LDR W8, [X0 + 0xE0]
	0x01EDEC4C CBNZ W8, 0x1EDEC54
	0x01EDEC50 BL 0x1C16DFC
	0x01EDEC54 LDR X1, [X26 + 0x68]
	0x01EDEC58 CBZ X1, 0x1EDEC84
	0x01EDEC5C LDRB W8, [X1 + 0x30]
	0x01EDEC60 TBNZ X8, 0x3, 0x1EDEC84
	0x01EDEC64 LDR X8, [X1 + 0x40]
	0x01EDEC68 CBZ X8, 0x1EDEC84
	0x01EDEC6C LDRB W8, [X8 + 0x60]
	0x01EDEC70 TBNZ X8, 0x1, 0x1EDEC84
	0x01EDEC74 CBZ X20, 0x1EDED0C
	0x01EDEC78 LDR X2, [X25]
	0x01EDEC7C MOV X0, X20
	0x01EDEC80 BL 0x2DBEF30
	0x01EDEC84 LDR X0, [X23]
	0x01EDEC88 LDR W8, [X0 + 0xE0]
	0x01EDEC8C CBNZ W8, 0x1EDEC94
	0x01EDEC90 BL 0x1C16DFC
	0x01EDEC94 CBZ X22, 0x1EDED0C
	0x01EDEC98 LDR X8, [X22 + 0x10]
	0x01EDEC9C CBZ X8, 0x1EDED0C
	0x01EDECA0 LDRSW X9, [X26 + 0x50]
	0x01EDECA4 LDR W10, [X8 + 0x18]
	0x01EDECA8 CMP W9, W10
	0x01EDECAC B.CS 0x1EDED10
	0x01EDECB0 MADD X8, X9, X28, X8
	0x01EDECB4 ADD X1, X8, 0x20
	0x01EDECB8 MOV X0, X22
	0x01EDECBC MOV X2, X21
	0x01EDECC0 MOV X3, X20
	0x01EDECC4 MOV W4, W19
	0x01EDECC8 BL 0x1EDEB30
	0x01EDECCC LDR X8, [X22 + 0x10]
	0x01EDECD0 CBZ X8, 0x1EDED0C
	0x01EDECD4 LDRSW X9, [X26 + 0x54]
	0x01EDECD8 LDR W10, [X8 + 0x18]
	0x01EDECDC CMP W9, W10
	0x01EDECE0 B.CS 0x1EDED10
	0x01EDECE4 MADD X8, X9, X28, X8
	0x01EDECE8 ADD X26, X8, 0x20
	0x01EDECEC B 0x1EDEB80

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x24FC000
	007 Move X20, 0x2223000
	008 Move W8, [X21+1382]
	009 Move X20, [X20+560]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x2220000
	016 Move X0, [X0+1808]
	017 Call 0x1C17CF4
	018 Move X0, 0x2223000
	019 Move X0, [X0+560]
	020 Call 0x1C17CF4
	021 Move X0, 0x2223000
	022 Move X0, [X0+696]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+1382], W8
	026 Move [X31+12], W31
	027 Call NetworkInputUtils.LoadTypes
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move X0, [X8+16]
	031 Compare X0, 0
	032 JumpIfEqual {61}
	033 Move X8, 0x2220000
	034 Move X8, [X8+1808]
	035 Add X2, X31, 12
	036 Move X1, X19
	037 Move X3, [X8]
	038 Call Dictionary`2<Object, Int32>.TryGetValue, X0, X1, X2
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {44}
	043 Move W0, [X31+12]
	044 Move X8, 0x2223000
	045 Move X8, [X8+696]
	046 Move X1, X19
	047 Move X2, X31
	048 Move X0, [X8]
	049 Call String.Format, X0, X1
	050 Move X1, X31
	051 Call Assert.AlwaysFail, X0
	052 Move TEMP, 0
	053 Not TEMP
	054 Move W0, TEMP
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X30, [X31+16]
	058 Move X21, [X31+24]
	059 Add X31, X31, 48
	060 Return X0
	061 Call 0x1C17F20

Method: System.Type GetType(System.Int32 typeKey)

Disassembly:
	0x01EDECF0 LDP X20, X19, [X31 + 0x50]
	0x01EDECF4 LDP X22, X21, [X31 + 0x40]
	0x01EDECF8 LDP X24, X23, [X31 + 0x30]
	0x01EDECFC LDP X26, X25, [X31 + 0x20]
	0x01EDED00 LDP X28, X27, [X31 + 0x10]
	0x01EDED04 LDP X29, X30, [X31], #0x60
	0x01EDED08 RET
	0x01EDED0C BL 0x1C16F20
	0x01EDED10 BL 0x1C16F28
	0x01EDED14 SUB X31, X31, 0xA0
	0x01EDED18 STR X30, [X31 + 0x40]
	0x01EDED1C STP X28, X27, [X31 + 0x50]
	0x01EDED20 STP X26, X25, [X31 + 0x60]
	0x01EDED24 STP X24, X23, [X31 + 0x70]
	0x01EDED28 STP X22, X21, [X31 + 0x80]
	0x01EDED2C STP X20, X19, [X31 + 0x90]
	0x01EDED30 ADRP X20, 0x24FB000
	0x01EDED34 LDRB W8, [X20 + 0x571]
	0x01EDED38 MOV X19, X0
	0x01EDED3C TBNZ X8, 0x0, 0x1EDED90
	0x01EDED40 ADRP X0, 0x2222000
	0x01EDED44 LDR X0, [X0 + 0x350]
	0x01EDED48 BL 0x1C16CF4
	0x01EDED4C ADRP X0, 0x221C000
	0x01EDED50 LDR X0, [X0 + 0x830]
	0x01EDED54 BL 0x1C16CF4
	0x01EDED58 ADRP X0, 0x221C000
	0x01EDED5C LDR X0, [X0 + 0x838]
	0x01EDED60 BL 0x1C16CF4
	0x01EDED64 ADRP X0, 0x221C000
	0x01EDED68 LDR X0, [X0 + 0x840]
	0x01EDED6C BL 0x1C16CF4
	0x01EDED70 ADRP X0, 0x221C000
	0x01EDED74 LDR X0, [X0 + 0x678]
	0x01EDED78 BL 0x1C16CF4
	0x01EDED7C ADRP X0, 0x221C000
	0x01EDED80 LDR X0, [X0 + 0x848]
	0x01EDED84 BL 0x1C16CF4
	0x01EDED88 MOVZ W8, 0x1
	0x01EDED8C STRB W8, [X20 + 0x571]
	0x01EDED90 STP X31, X31, [X31 + 0x20]
	0x01EDED94 STR X31, [X31 + 0x30]
	0x01EDED98 LDR X0, [X19 + 0x28]
	0x01EDED9C CBZ X0, 0x1EDEEA8
	0x01EDEDA0 ADRP X8, 0x221C000
	0x01EDEDA4 LDR X8, [X8 + 0x848]
	0x01EDEDA8 ADRP X23, 0x221C000
	0x01EDEDAC LDR X23, [X23 + 0x838]
	0x01EDEDB0 ADRP X20, 0x2222000
	0x01EDEDB4 LDR X1, [X8]
	0x01EDEDB8 ADRP X21, 0x221C000
	0x01EDEDBC ADRP X22, 0x221C000
	0x01EDEDC0 LDR X20, [X20 + 0x350]
	0x01EDEDC4 LDR X21, [X21 + 0x678]
	0x01EDEDC8 LDR X22, [X22 + 0x830]
	0x01EDEDCC ADD X8, X31, 0x8
	0x01EDEDD0 BL 0x2DAAA30
	0x01EDEDD4 LDUR V0, [X31 + 0x8]
	0x01EDEDD8 LDR X8, [X31 + 0x18]
	0x01EDEDDC ADRP X24, 0x24FB000
	0x01EDEDE0 MOVZ W25, 0x1
	0x01EDEDE4 STR V0, [X31 + 0x2]
	0x01EDEDE8 STR X8, [X31 + 0x30]
	0x01EDEDEC MOVZ W26, 0x78
	0x01EDEDF0 LDR X1, [X23]
	0x01EDEDF4 ADD X0, X31, 0x20
	0x01EDEDF8 BL 0x2BBDA6C
	0x01EDEDFC TBZ X0, 0x0, 0x1EDEE64
	0x01EDEE00 LDR X27, [X19 + 0x10]
	0x01EDEE04 CBZ X27, 0x1EDEEA0
	0x01EDEE08 LDRSW X28, [X31 + 0x30]
	0x01EDEE0C LDR W8, [X27 + 0x18]
	0x01EDEE10 CMP W28, W8
	0x01EDEE14 B.CS 0x1EDEEA4
	0x01EDEE18 LDR X0, [X20]
	0x01EDEE1C LDR W8, [X0 + 0xE0]
	0x01EDEE20 CBNZ W8, 0x1EDEE28
	0x01EDEE24 BL 0x1C16DFC
	0x01EDEE28 LDRB W8, [X24 + 0x5A6]
	0x01EDEE2C CBNZ W8, 0x1EDEE3C
	0x01EDEE30 MOV X0, X20
	0x01EDEE34 BL 0x1C16CF4
	0x01EDEE38 STRB W25, [X24 + 0x5A6]
	0x01EDEE3C LDR X0, [X20]
	0x01EDEE40 LDR W8, [X0 + 0xE0]
	0x01EDEE44 CBNZ W8, 0x1EDEE4C
	0x01EDEE48 BL 0x1C16DFC
	0x01EDEE4C MADD X8, X28, X26, X27
	0x01EDEE50 LDR W1, [X8 + 0x68]
	0x01EDEE54 MOVZ W2, 0x1
	0x01EDEE58 MOV X0, X19
	0x01EDEE5C BL 0x1EE11D0
	0x01EDEE60 B 0x1EDEDF0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0x24FC000
	007 Move X20, 0x2223000
	008 Move W8, [X21+1383]
	009 Move X20, [X20+560]
	010 Move W19, W0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {38}
	015 Move X0, 0x2223000
	016 Move X0, [X0+704]
	017 Call 0x1C17CF4
	018 Move X0, 0x2223000
	019 Move X0, [X0+712]
	020 Call 0x1C17CF4
	021 Move X0, 0x2223000
	022 Move X0, [X0+720]
	023 Call 0x1C17CF4
	024 Move X0, 0x2223000
	025 Move X0, [X0+728]
	026 Call 0x1C17CF4
	027 Move X0, 0x2223000
	028 Move X0, [X0+736]
	029 Call 0x1C17CF4
	030 Move X0, 0x2223000
	031 Move X0, [X0+744]
	032 Call 0x1C17CF4
	033 Move X0, 0x2223000
	034 Move X0, [X0+560]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+1383], W8
	038 NotImplemented "Instruction MOVI not yet implemented."
	039 Move [X31+32], X31
	040 Move [X31], V0
	041 Move [X31+8], V0
	042 Call NetworkInputUtils.LoadTypes
	043 Move X8, [X20]
	044 Move X8, [X8+184]
	045 Move X0, [X8+16]
	046 Compare X0, 0
	047 JumpIfEqual {78}
	048 Move X8, 0x2223000
	049 Move X8, [X8+704]
	050 Move X20, 0x2223000
	051 Move X21, 0x2223000
	052 Move X1, [X8]
	053 Move X20, [X20+720]
	054 Move X21, [X21+712]
	055 Add X8, X31, 0
	056 Call Dictionary`2<Object, Int32>.GetEnumerator, X0
	057 Move X1, [X20]
	058 Add X0, X31, 0
	059 Call Enumerator<Object, Int32>.MoveNext, X0
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {67}
	064 Move W8, [X31+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X19, [X31+16]
	067 Move X19, X31
	068 Move X1, [X21]
	069 Add X0, X31, 0
	070 Call Enumerator<Object, Int32>.Dispose, X0
	071 Move X0, X19
	072 Move X20, [X31+64]
	073 Move X19, [X31+72]
	074 Move X30, [X31+48]
	075 Move X21, [X31+56]
	076 Add X31, X31, 80
	077 Return X0
	078 Call 0x1C17F20
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X20, X0
	081 Move X0, X20
	082 Call 0x3EB2AD0
	083 Move X19, [X0]
	084 Call 0x3EB2AE0
	085 Move X1, [X21]
	086 Add X0, X31, 0
	087 Call Enumerator<Object, Int32>.Dispose, X0
	088 Compare X19, 0
	089 JumpIfEqual {71}
	090 Move X0, X19
	091 Call 0x1C17F18
	092 Move X19, X31
	093 Move X20, X0
	094 Move X1, [X21]
	095 Add X0, X31, 0
	096 Call Enumerator<Object, Int32>.Dispose, X0
	097 Compare X19, 0
	098 JumpIfNotEqual {101}
	099 Move X0, X20
	100 Call 0x1D2D690
	101 Move X0, X19
	102 Call 0x1C17F18
	103 Call 0x1991590

Method: System.Void ResetStatics()

Disassembly:
	0x01EDEE64 LDR X1, [X22]
	0x01EDEE68 ADD X0, X31, 0x20
	0x01EDEE6C BL 0x2BBDA68
	0x01EDEE70 LDR X0, [X19 + 0x28]
	0x01EDEE74 CBZ X0, 0x1EDEEA8
	0x01EDEE78 LDR X1, [X21]
	0x01EDEE7C BL 0x2DAA53C
	0x01EDEE80 LDP X20, X19, [X31 + 0x90]
	0x01EDEE84 LDP X22, X21, [X31 + 0x80]
	0x01EDEE88 LDP X24, X23, [X31 + 0x70]
	0x01EDEE8C LDP X26, X25, [X31 + 0x60]
	0x01EDEE90 LDP X28, X27, [X31 + 0x50]
	0x01EDEE94 LDR X30, [X31 + 0x40]
	0x01EDEE98 ADD X31, X31, 0xA0
	0x01EDEE9C RET
	0x01EDEEA0 BL 0x1C16F20
	0x01EDEEA4 BL 0x1C16F28
	0x01EDEEA8 BL 0x1C16F20
	0x01EDEEAC B 0x1EDEEB4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x24FC000
	005 Move X20, 0x2223000
	006 Move W8, [X19+1384]
	007 Move X20, [X20+560]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2223000
	013 Move X0, [X0+560]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1384], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move [X8], W31
	022 Move [X8+8], X31
	023 Move [X8+16], X31
	024 Move X30, [X31+32]
	025 Return 

