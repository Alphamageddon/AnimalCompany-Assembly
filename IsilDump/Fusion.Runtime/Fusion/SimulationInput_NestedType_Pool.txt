Type: Fusion.SimulationInput/Pool

Method: System.Void .ctor(Fusion.SimulationConfig config, Fusion.Allocator* allocator)

Disassembly:
	0x01ED9CF4 LDR X2, [X21]
	0x01ED9CF8 ADD X1, X31, 0x8
	0x01ED9CFC MOV X0, X19
	0x01ED9D00 STR W20, [X31 + 0x8]
	0x01ED9D04 BL 0x2255698
	0x01ED9D08 LDR W8, [X31 + 0x8]
	0x01ED9D0C LDP X22, X21, [X31 + 0x10]
	0x01ED9D10 SUB W0, W8, W20
	0x01ED9D14 LDP X20, X19, [X31 + 0x20]
	0x01ED9D18 LDR X30, [X31], #0x30
	0x01ED9D1C RET
	0x01ED9D20 STP X30, X27, [X31 - 0x50]!
	0x01ED9D24 STP X26, X25, [X31 + 0x10]
	0x01ED9D28 STP X24, X23, [X31 + 0x20]
	0x01ED9D2C STP X22, X21, [X31 + 0x30]
	0x01ED9D30 STP X20, X19, [X31 + 0x40]
	0x01ED9D34 ADRP X21, 0x2500000
	0x01ED9D38 ADRP X24, 0x221D000
	0x01ED9D3C LDRB W8, [X21 + 0x546]
	0x01ED9D40 LDR X24, [X24 + 0xE40]
	0x01ED9D44 MOV X19, X1
	0x01ED9D48 MOV X20, X0
	0x01ED9D4C TBNZ X8, 0x0, 0x1ED9D70
	0x01ED9D50 ADRP X0, 0x2221000
	0x01ED9D54 LDR X0, [X0 + 0xC68]
	0x01ED9D58 BL 0x1C16CF4
	0x01ED9D5C ADRP X0, 0x221D000
	0x01ED9D60 LDR X0, [X0 + 0xE40]
	0x01ED9D64 BL 0x1C16CF4
	0x01ED9D68 MOVZ W8, 0x1
	0x01ED9D6C STRB W8, [X21 + 0x546]
	0x01ED9D70 MOVZ W1, 0xA
	0x01ED9D74 MOV X0, X19
	0x01ED9D78 MOV X2, X31
	0x01ED9D7C BL 0x1EFA5C0
	0x01ED9D80 MOV W22, W0
	0x01ED9D84 MOVZ W1, 0x10
	0x01ED9D88 MOV X0, X19
	0x01ED9D8C MOV X2, X31
	0x01ED9D90 BL 0x1EFA5C0
	0x01ED9D94 LDR X8, [X24]
	0x01ED9D98 MOV W21, W0
	0x01ED9D9C LDR W9, [X8 + 0xE0]
	0x01ED9DA0 CBNZ W9, 0x1ED9DAC
	0x01ED9DA4 MOV X0, X8
	0x01ED9DA8 BL 0x1C16DFC
	0x01ED9DAC ADRP X25, 0x2500000
	0x01ED9DB0 LDRB W8, [X25 + 0x561]
	0x01ED9DB4 CBNZ W8, 0x1ED9DCC
	0x01ED9DB8 ADRP X0, 0x221D000
	0x01ED9DBC LDR X0, [X0 + 0xE40]
	0x01ED9DC0 BL 0x1C16CF4
	0x01ED9DC4 MOVZ W8, 0x1
	0x01ED9DC8 STRB W8, [X25 + 0x561]
	0x01ED9DCC MOVZ W1, 0x1
	0x01ED9DD0 MOV X0, X19

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x2501000
	011 Move X25, 0x2228000
	012 Move X22, 0x2228000
	013 Move X24, 0x2228000
	014 Move X23, 0x2228000
	015 Move W8, [X26+1334]
	016 Move X25, [X25+208]
	017 Move X22, [X22+216]
	018 Move X24, [X24+224]
	019 Move X23, [X23+232]
	020 Move X20, X2
	021 Move X21, X1
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {41}
	027 Move X0, 0x2228000
	028 Move X0, [X0+232]
	029 Call 0x1C17CF4
	030 Move X0, 0x2228000
	031 Move X0, [X0+224]
	032 Call 0x1C17CF4
	033 Move X0, 0x2228000
	034 Move X0, [X0+216]
	035 Call 0x1C17CF4
	036 Move X0, 0x2228000
	037 Move X0, [X0+208]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X26+1334], W8
	041 Move X0, X19
	042 Move X1, X31
	043 Call Object..ctor, X0
	044 Move X0, [X25]
	045 Call 0x1C17F10
	046 Move X1, [X22]
	047 Move X22, X0
	048 Call Stack`1<Object>..ctor, X0
	049 Move [X19+24], X22
	050 Move X0, [X24]
	051 Call 0x1C17F10
	052 Move X1, [X23]
	053 Move X22, X0
	054 Call List`1<Object>..ctor, X0
	055 Move [X19+32], X22
	056 Move [X19+40], X21
	057 Move [X19+16], X20
	058 Move [X19+48], W31
	059 Move X20, [X31+64]
	060 Move X19, [X31+72]
	061 Move X22, [X31+48]
	062 Move X21, [X31+56]
	063 Move X24, [X31+32]
	064 Move X23, [X31+40]
	065 Move X26, [X31+16]
	066 Move X25, [X31+24]
	067 Move X30, [X31+80]
	068 Return 

Method: Fusion.SimulationInput Acquire()

Disassembly:
	0x01ECF11C CBZ X0, 0x1ECF3AC
	0x01ECF120 LDR W8, [X20 + 0x18]
	0x01ECF124 CMP W8, 0x1
	0x01ECF128 B.LS 0x1ECF3A8
	0x01ECF12C ADRP X23, 0x2230000
	0x01ECF130 LDR X23, [X23 + 0xEB0]
	0x01ECF134 STR X21, [X20 + 0x28]
	0x01ECF138 LDR X0, [X23]
	0x01ECF13C CBZ X0, 0x1ECF154
	0x01ECF140 LDR X8, [X20]
	0x01ECF144 LDR X1, [X8 + 0x40]
	0x01ECF148 BL 0x1C16E00
	0x01ECF14C CBZ X0, 0x1ECF3AC
	0x01ECF150 LDR W8, [X20 + 0x18]
	0x01ECF154 CMP W8, 0x2
	0x01ECF158 B.LS 0x1ECF3A8
	0x01ECF15C LDR X8, [X23]
	0x01ECF160 ADD X1, X31, 0x18
	0x01ECF164 STR X8, [X20 + 0x30]
	0x01ECF168 LDRB W8, [X19 + 0x1]
	0x01ECF16C LDR X0, [X22]
	0x01ECF170 STRB W8, [X31 + 0x18]
	0x01ECF174 BL 0x1C16E04
	0x01ECF178 MOV X21, X0
	0x01ECF17C CBZ X0, 0x1ECF194
	0x01ECF180 LDR X8, [X20]
	0x01ECF184 MOV X0, X21
	0x01ECF188 LDR X1, [X8 + 0x40]
	0x01ECF18C BL 0x1C16E00
	0x01ECF190 CBZ X0, 0x1ECF3AC
	0x01ECF194 LDR W8, [X20 + 0x18]
	0x01ECF198 CMP W8, 0x3
	0x01ECF19C B.LS 0x1ECF3A8
	0x01ECF1A0 ADRP X23, 0x2230000
	0x01ECF1A4 LDR X23, [X23 + 0xEB8]
	0x01ECF1A8 STR X21, [X20 + 0x38]
	0x01ECF1AC LDR X0, [X23]
	0x01ECF1B0 CBZ X0, 0x1ECF1C8
	0x01ECF1B4 LDR X8, [X20]
	0x01ECF1B8 LDR X1, [X8 + 0x40]
	0x01ECF1BC BL 0x1C16E00
	0x01ECF1C0 CBZ X0, 0x1ECF3AC
	0x01ECF1C4 LDR W8, [X20 + 0x18]
	0x01ECF1C8 CMP W8, 0x4
	0x01ECF1CC B.LS 0x1ECF3A8
	0x01ECF1D0 LDR X8, [X23]
	0x01ECF1D4 ADD X1, X31, 0x14
	0x01ECF1D8 STR X8, [X20 + 0x40]
	0x01ECF1DC LDRB W8, [X19 + 0x2]
	0x01ECF1E0 LDR X0, [X22]
	0x01ECF1E4 STRB W8, [X31 + 0x14]
	0x01ECF1E8 BL 0x1C16E04
	0x01ECF1EC MOV X21, X0
	0x01ECF1F0 CBZ X0, 0x1ECF208
	0x01ECF1F4 LDR X8, [X20]
	0x01ECF1F8 MOV X0, X21
	0x01ECF1FC LDR X1, [X8 + 0x40]
	0x01ECF200 BL 0x1C16E00
	0x01ECF204 CBZ X0, 0x1ECF3AC
	0x01ECF208 LDR W8, [X20 + 0x18]
	0x01ECF20C CMP W8, 0x5
	0x01ECF210 B.LS 0x1ECF3A8
	0x01ECF214 ADRP X23, 0x2230000
	0x01ECF218 LDR X23, [X23 + 0xEA8]
	0x01ECF21C STR X21, [X20 + 0x48]
	0x01ECF220 LDR X0, [X23]
	0x01ECF224 CBZ X0, 0x1ECF23C
	0x01ECF228 LDR X8, [X20]
	0x01ECF22C LDR X1, [X8 + 0x40]
	0x01ECF230 BL 0x1C16E00
	0x01ECF234 CBZ X0, 0x1ECF3AC
	0x01ECF238 LDR W8, [X20 + 0x18]
	0x01ECF23C CMP W8, 0x6
	0x01ECF240 B.LS 0x1ECF3A8
	0x01ECF244 LDR X8, [X23]
	0x01ECF248 ADD X1, X31, 0x10
	0x01ECF24C STR X8, [X20 + 0x50]
	0x01ECF250 LDRB W8, [X19 + 0x3]
	0x01ECF254 LDR X0, [X22]
	0x01ECF258 STRB W8, [X31 + 0x10]
	0x01ECF25C BL 0x1C16E04
	0x01ECF260 MOV X21, X0
	0x01ECF264 CBZ X0, 0x1ECF27C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x250B000
	005 Move W8, [X19+1335]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {28}
	011 Move X0, 0x2230000
	012 Move X0, [X0+1104]
	013 Call 0x1C17CF4
	014 Move X0, 0x2231000
	015 Move X0, [X0+3632]
	016 Call 0x1C17CF4
	017 Move X0, 0x2231000
	018 Move X0, [X0+3640]
	019 Call 0x1C17CF4
	020 Move X0, 0x2231000
	021 Move X0, [X0+3648]
	022 Call 0x1C17CF4
	023 Move X0, 0x2231000
	024 Move X0, [X0+3656]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X19+1335], W8
	028 Move X0, [X20+24]
	029 Compare X0, 0
	030 JumpIfEqual {90}
	031 Move W8, [X0+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, 0x2231000
	034 Move X8, [X8+3648]
	035 Move X1, [X8]
	036 Call Stack`1<Object>.Pop, X0
	037 Compare X0, 0
	038 JumpIfEqual {90}
	039 Move X19, X0
	040 Move [X0+20], W31
	041 Move X8, 0x2231000
	042 Move X8, [X8+3640]
	043 Move X0, [X8]
	044 Call 0x1C17F10
	045 Move X1, X31
	046 Move X19, X0
	047 Call Object..ctor, X0
	048 Move X8, [X20+40]
	049 Compare X8, 0
	050 JumpIfEqual {90}
	051 Move X9, 0x2230000
	052 Move X0, [X20+16]
	053 Move W8, [X8+16]
	054 Move X9, [X9+1104]
	055 Add W1, W8, 4
	056 Move X2, [X9]
	057 Call 0x227A794, X0, X1
	058 Compare X19, 0
	059 JumpIfEqual {90}
	060 Move [X19+32], X0
	061 Move X0, [X20+32]
	062 Compare X0, 0
	063 JumpIfEqual {90}
	064 Move X9, 0x2231000
	065 Move X9, [X9+3632]
	066 Move W10, [X0+28]
	067 Move X8, [X0+16]
	068 Move X9, [X9]
	069 Add W10, W10, 1
	070 Move [X0+28], W10
	071 Compare X8, 0
	072 JumpIfEqual {90}
	073 NotImplemented "Instruction LDRSW not yet implemented."
	074 Move W11, [X8+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Add W9, W10, 1
	077 Add X8, X8, X10
	078 Move [X0+24], W9
	079 Move [X8+32], X19
	080 Move X8, [X9+32]
	081 Move X1, X19
	082 Move X8, [X8+192]
	083 Move X2, [X8+112]
	084 Call List`1<Object>.AddWithResize, X0, X1
	085 Move X0, X19
	086 Move X20, [X31+16]
	087 Move X19, [X31+24]
	088 Move X30, [X31+32]
	089 Return X0
	090 Call 0x1C17F20

Method: System.Void Release(Fusion.SimulationInput input)

Disassembly:
	0x01ECE2E4 LDR X0, [X0 + 0xE60]
	0x01ECE2E8 BL 0x1C16CF4
	0x01ECE2EC MOVZ W8, 0x1
	0x01ECE2F0 STRB W8, [X22 + 0x535]
	0x01ECE2F4 LDR X0, [X19 + 0x28]
	0x01ECE2F8 CBZ X0, 0x1ECE418
	0x01ECE2FC ADRP X8, 0x2231000
	0x01ECE300 LDR X8, [X8 + 0xE28]
	0x01ECE304 LDR X1, [X8]
	0x01ECE308 BL 0x2AF3128
	0x01ECE30C LDR X8, [X19 + 0x10]
	0x01ECE310 CBZ X8, 0x1ECE418
	0x01ECE314 LDR X8, [X8 + 0x40]
	0x01ECE318 CBZ X8, 0x1ECE418
	0x01ECE31C ADRP X9, 0x2230000
	0x01ECE320 LDR X9, [X9 + 0x168]
	0x01ECE324 MOV W22, W0
	0x01ECE328 ADRP X25, 0x2231000
	0x01ECE32C LDP X24, X23, [X8 + 0x28]
	0x01ECE330 LDR X0, [X9]
	0x01ECE334 LDR W9, [X0 + 0xE0]
	0x01ECE338 LDR X25, [X25 + 0xE60]
	0x01ECE33C CBNZ W9, 0x1ECE344
	0x01ECE340 BL 0x1C16DFC
	0x01ECE344 MOV X0, X24
	0x01ECE348 MOV X1, X23
	0x01ECE34C MOV X2, X31
	0x01ECE350 BL 0x1E916D0
	0x01ECE354 LDR X1, [X25]
	0x01ECE358 CMP W22, W0
	0x01ECE35C CSET W0, LT
	0x01ECE360 MOV X2, X31
	0x01ECE364 BL 0x1E3BA60
	0x01ECE368 CBZ X20, 0x1ECE418
	0x01ECE36C LDR X8, [X20 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x250C000
	006 Move W8, [X21+1336]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2232000
	014 Move X0, [X0+3608]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1336], W8
	018 Compare X19, 0
	019 JumpIfEqual {48}
	020 Move X8, [X20+40]
	021 Compare X8, 0
	022 JumpIfEqual {48}
	023 Move W8, [X8+16]
	024 Move X0, [X19+32]
	025 Move X2, X31
	026 Move W8, W8
	027 ShiftRight W8, 30
	028 And W8, W8, 0x1FFFFFFF
	029 Add W1, W8, 16
	030 Call Native.MemClear, X0, X1
	031 Move W8, 1
	032 Move [X19+16], W31
	033 Move [X19+20], W8
	034 Move [X19+24], W31
	035 Move X0, [X20+24]
	036 Compare X0, 0
	037 JumpIfEqual {48}
	038 Move X8, 0x2232000
	039 Move X8, [X8+3608]
	040 Move X1, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X2, [X8]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Call Stack`1<Object>.Push, X0, X1
	047 Return 
	048 Call 0x1C17F20

Method: System.Void Dispose()

Disassembly:
	0x01ED9DD4 MOV X2, X31
	0x01ED9DD8 BL 0x1EF9B00
	0x01ED9DDC CMP X0, 0x1
	0x01ED9DE0 MOV X27, X31
	0x01ED9DE4 B.NE 0x1ED9E1C
	0x01ED9DE8 MOV X0, X19
	0x01ED9DEC MOV X1, X31
	0x01ED9DF0 BL 0x1EFA464
	0x01ED9DF4 LDR X8, [X24]
	0x01ED9DF8 MOV W23, W0
	0x01ED9DFC LDR W9, [X8 + 0xE0]
	0x01ED9E00 CBNZ W9, 0x1ED9E0C
	0x01ED9E04 MOV X0, X8
	0x01ED9E08 BL 0x1C16DFC
	0x01ED9E0C MOV W0, W23
	0x01ED9E10 MOV X1, X31
	0x01ED9E14 BL 0x1E8D9BC
	0x01ED9E18 AND X27, X0, 0x0
	0x01ED9E1C LDRB W8, [X25 + 0x561]
	0x01ED9E20 CBNZ W8, 0x1ED9E38
	0x01ED9E24 ADRP X0, 0x221D000
	0x01ED9E28 LDR X0, [X0 + 0xE40]
	0x01ED9E2C BL 0x1C16CF4
	0x01ED9E30 MOVZ W8, 0x1
	0x01ED9E34 STRB W8, [X25 + 0x561]
	0x01ED9E38 MOVZ W1, 0x1
	0x01ED9E3C MOV X0, X19
	0x01ED9E40 MOV X2, X31
	0x01ED9E44 BL 0x1EF9B00
	0x01ED9E48 CMP X0, 0x1
	0x01ED9E4C B.NE 0x1ED9E88
	0x01ED9E50 MOV X0, X19
	0x01ED9E54 MOV X1, X31
	0x01ED9E58 BL 0x1EFA464
	0x01ED9E5C LDR X8, [X24]
	0x01ED9E60 MOV W23, W0
	0x01ED9E64 LDR W9, [X8 + 0xE0]
	0x01ED9E68 CBNZ W9, 0x1ED9E74

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2501000
	006 Move W8, [X20+1337]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x2228000
	013 Move X0, [X0+240]
	014 Call 0x1C17CF4
	015 Move X0, 0x2228000
	016 Move X0, [X0+248]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1337], W8
	020 Move X0, [X19+32]
	021 Move W8, 1
	022 Move [X19+48], W8
	023 Compare X0, 0
	024 JumpIfEqual {41}
	025 Move X21, 0x2228000
	026 Move X21, [X21+248]
	027 Move W20, W31
	028 Move W8, [X0+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X2, [X21]
	031 Move W1, W20
	032 Call List`1<Object>.get_Item, X0, X1
	033 Compare X0, 0
	034 JumpIfEqual {41}
	035 Move X1, [X19+16]
	036 Call SimulationInput.Dispose, X0, X1
	037 Move X0, [X19+32]
	038 Add W20, W20, 1
	039 Compare X0, 0
	040 JumpIfNotEqual {28}
	041 Call 0x1C17F20
	042 Move [X19+24], X31
	043 Move [X19+32], X31
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return 

