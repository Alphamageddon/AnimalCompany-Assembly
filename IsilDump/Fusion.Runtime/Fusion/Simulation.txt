Type: Fusion.Simulation

Method: System.Void GetAreaOfInterestGizmoData(System.Collections.Generic.List`1<System.ValueTuple`4<UnityEngine.Vector3, UnityEngine.Vector3, System.Int32, System.Int32>> result)

Disassembly:
	0x01EBF658 ADRP X8, 0x223B000
	0x01EBF65C LDR X8, [X8 + 0x830]
	0x01EBF660 ADD X0, X31, 0x20
	0x01EBF664 LDR X1, [X8]
	0x01EBF668 BL 0x2BBDA68
	0x01EBF66C LDR X0, [X31 + 0x38]
	0x01EBF670 CBZ X0, 0x1EBF6CC
	0x01EBF674 ADRP X8, 0x223B000
	0x01EBF678 LDR X8, [X8 + 0x678]
	0x01EBF67C LDR X1, [X8]
	0x01EBF680 BL 0x2DAA53C
	0x01EBF684 LDR X0, [X31 + 0x38]
	0x01EBF688 CBZ X0, 0x1EBF6CC
	0x01EBF68C ADRP X8, 0x223B000
	0x01EBF690 LDR X8, [X8 + 0x680]
	0x01EBF694 MOV X1, X21
	0x01EBF698 LDR X2, [X8]
	0x01EBF69C BL 0x2DAB04C
	0x01EBF6A0 LDP X20, X19, [X31 + 0x90]
	0x01EBF6A4 LDP X22, X21, [X31 + 0x80]
	0x01EBF6A8 LDP X24, X23, [X31 + 0x70]
	0x01EBF6AC LDP X26, X25, [X31 + 0x60]
	0x01EBF6B0 LDP X28, X27, [X31 + 0x50]
	0x01EBF6B4 LDP X29, X30, [X31 + 0x40]
	0x01EBF6B8 ADD X31, X31, 0xA0
	0x01EBF6BC RET
	0x01EBF6C0 BL 0x1C16F20
	0x01EBF6C4 BL 0x1C16F20
	0x01EBF6C8 BL 0x1C16F20
	0x01EBF6CC BL 0x1C16F20
	0x01EBF6D0 B 0x1EBF6E8
	0x01EBF6D4 B 0x1EBF6E8
	0x01EBF6D8 B 0x1EBF6E8
	0x01EBF6DC B 0x1EBF77C
	0x01EBF6E0 B 0x1EBF77C
	0x01EBF6E4 B 0x1EBF6E8
	0x01EBF6E8 STR X0, [X31]
	0x01EBF6EC MOVZ W28, 0x1
	0x01EBF6F0 B 0x1EBF714
	0x01EBF6F4 B 0x1EBF77C
	0x01EBF6F8 B 0x1EBF77C
	0x01EBF6FC B 0x1EBF77C
	0x01EBF700 B 0x1EBF710
	0x01EBF704 STR X0, [X31]
	0x01EBF708 MOV W28, W31
	0x01EBF70C B 0x1EBF714
	0x01EBF710 STR X0, [X31]
	0x01EBF714 CMP W1, 0x1
	0x01EBF718 B.NE 0x1EBF74C
	0x01EBF71C LDR X0, [X31]
	0x01EBF720 BL 0x3EB1AD0
	0x01EBF724 LDR X22, [X0]
	0x01EBF728 BL 0x3EB1AE0
	0x01EBF72C ADRP X8, 0x223B000
	0x01EBF730 LDR X8, [X8 + 0x830]
	0x01EBF734 ADD X0, X31, 0x20
	0x01EBF738 LDR X1, [X8]
	0x01EBF73C BL 0x2BBDA68
	0x01EBF740 CBZ X22, 0x1EBF590
	0x01EBF744 MOV X0, X22
	0x01EBF748 BL 0x1C16F18
	0x01EBF74C MOV X22, X31
	0x01EBF750 B 0x1EBF758
	0x01EBF754 STR X0, [X31]
	0x01EBF758 ADRP X8, 0x223B000
	0x01EBF75C LDR X8, [X8 + 0x830]
	0x01EBF760 LDR X1, [X8]
	0x01EBF764 ADD X0, X31, 0x20
	0x01EBF768 BL 0x2BBDA68
	0x01EBF76C CBZ X22, 0x1EBF7D8
	0x01EBF770 MOV X0, X22
	0x01EBF774 BL 0x1C16F18
	0x01EBF778 B 0x1EBF77C
	0x01EBF77C CMP W1, 0x1
	0x01EBF780 B.NE 0x1EBF7B0
	0x01EBF784 BL 0x3EB1AD0
	0x01EBF788 LDR X19, [X0]
	0x01EBF78C BL 0x3EB1AE0
	0x01EBF790 ADRP X8, 0x223B000
	0x01EBF794 LDR X8, [X8 + 0x830]
	0x01EBF798 ADD X0, X31, 0x20
	0x01EBF79C LDR X1, [X8]
	0x01EBF7A0 BL 0x2BBDA68
	0x01EBF7A4 CBZ X19, 0x1EBF66C
	0x01EBF7A8 MOV X0, X19
	0x01EBF7AC BL 0x1C16F18
	0x01EBF7B0 STR X0, [X31]
	0x01EBF7B4 MOV X19, X31
	0x01EBF7B8 B 0x1EBF7C0
	0x01EBF7BC STR X0, [X31]
	0x01EBF7C0 ADRP X8, 0x223B000
	0x01EBF7C4 LDR X8, [X8 + 0x830]
	0x01EBF7C8 LDR X1, [X8]
	0x01EBF7CC ADD X0, X31, 0x20
	0x01EBF7D0 BL 0x2BBDA68
	0x01EBF7D4 CBNZ X19, 0x1EBF7E0
	0x01EBF7D8 LDR X0, [X31]
	0x01EBF7DC BL 0x1D2C690
	0x01EBF7E0 MOV X0, X19
	0x01EBF7E4 BL 0x1C16F18
	0x01EBF7E8 BL 0x1990590
	0x01EBF7EC STR X30, [X31 - 0x40]!
	0x01EBF7F0 STP X24, X23, [X31 + 0x10]
	0x01EBF7F4 STP X22, X21, [X31 + 0x20]
	0x01EBF7F8 STP X20, X19, [X31 + 0x30]
	0x01EBF7FC ADRP X22, 0x251A000
	0x01EBF800 LDRB W8, [X22 + 0x44D]
	0x01EBF804 MOV X21, X2
	0x01EBF808 MOV X20, X1
	0x01EBF80C MOV X19, X0
	0x01EBF810 TBNZ X8, 0x0, 0x1EBF828
	0x01EBF814 ADRP X0, 0x223F000
	0x01EBF818 LDR X0, [X0 + 0xA90]
	0x01EBF81C BL 0x1C16CF4
	0x01EBF820 MOVZ W8, 0x1
	0x01EBF824 STRB W8, [X22 + 0x44D]
	0x01EBF828 STR X31, [X31 + 0x8]
	0x01EBF82C CBZ X20, 0x1EBF944
	0x01EBF830 AND X22, X21, 0x0
	0x01EBF834 MOV X0, X20
	0x01EBF838 MOV X1, X22
	0x01EBF83C MOV W2, W31
	0x01EBF840 MOV W3, W31
	0x01EBF844 MOV X4, X31
	0x01EBF848 BL 0x1ED0A18
	0x01EBF84C CBZ X0, 0x1EBF930
	0x01EBF850 LDR W8, [X0 + 0x50]
	0x01EBF854 MOV X21, X0
	0x01EBF858 AND W8, W8, 0x3
	0x01EBF85C CMP W8, 0x1
	0x01EBF860 B.NE 0x1EBF8DC
	0x01EBF864 LDR X23, [X19 + 0x40]
	0x01EBF868 CBZ X23, 0x1EBF944
	0x01EBF86C ADRP X10, 0x223F000
	0x01EBF870 LDR X8, [X23]
	0x01EBF874 LDR W24, [X20 + 0x28]
	0x01EBF878 LDR X10, [X10 + 0xA90]
	0x01EBF87C LDRH W9, [X8 + 0x12E]
	0x01EBF880 LDR X1, [X10]
	0x01EBF884 CBZ X9, 0x1EBF8A8
	0x01EBF888 LDR X10, [X8 + 0xB0]
	0x01EBF88C ADD X10, X10, 0x8
	0x01EBF890 LDUR X11, [X10 - 0x8]
	0x01EBF894 CMP X11, X1
	0x01EBF898 B.EQ 0x1EBF8B8
	0x01EBF89C SUBS X9, X9, 0x1
	0x01EBF8A0 ADD X10, X10, 0x10
	0x01EBF8A4 B.NE 0x1EBF890
	0x01EBF8A8 MOVZ W2, 0x21
	0x01EBF8AC MOV X0, X23
	0x01EBF8B0 BL 0x1C5C788
	0x01EBF8B4 B 0x1EBF8C8
	0x01EBF8B8 LDR W9, [X10]
	0x01EBF8BC ADD W9, W9, 0x21
	0x01EBF8C0 ADD X8, X8, W9, 0x4, SXTW
	0x01EBF8C4 ADD X0, X8, 0x138
	0x01EBF8C8 LDP X8, X3, [X0]
	0x01EBF8CC MOV X0, X23
	0x01EBF8D0 MOV X1, X24
	0x01EBF8D4 MOV X2, X22
	0x01EBF8D8 BLR X8
	0x01EBF8DC ADD X2, X31, 0x8
	0x01EBF8E0 MOV X0, X19
	0x01EBF8E4 MOV X1, X22
	0x01EBF8E8 BL 0x1EC0278
	0x01EBF8EC TBZ X0, 0x0, 0x1EBF914
	0x01EBF8F0 LDR X2, [X31 + 0x8]
	0x01EBF8F4 CBZ X2, 0x1EBF944
	0x01EBF8F8 LDR W8, [X2 + 0xA0]
	0x01EBF8FC CMP W8, 0x1
	0x01EBF900 B.LT 0x1EBF914
	0x01EBF904 MOV X0, X20
	0x01EBF908 MOV X1, X21
	0x01EBF90C MOV X3, X31
	0x01EBF910 BL 0x1ED47C0
	0x01EBF914 LDRB W8, [X21 + 0x50]
	0x01EBF918 TBZ X8, 0x0, 0x1EBF930
	0x01EBF91C MOVZ W1, 0x1
	0x01EBF920 MOV X0, X21
	0x01EBF924 MOV X2, X19
	0x01EBF928 MOV X3, X31
	0x01EBF92C BL 0x1E94D40
	0x01EBF930 LDP X20, X19, [X31 + 0x30]
	0x01EBF934 LDP X22, X21, [X31 + 0x20]
	0x01EBF938 LDP X24, X23, [X31 + 0x10]
	0x01EBF93C LDR X30, [X31], #0x40
	0x01EBF940 RET
	0x01EBF944 BL 0x1C16F20
	0x01EBF948 STR X30, [X31 - 0x40]!
	0x01EBF94C STP X24, X23, [X31 + 0x10]
	0x01EBF950 STP X22, X21, [X31 + 0x20]
	0x01EBF954 STP X20, X19, [X31 + 0x30]
	0x01EBF958 ADRP X23, 0x251A000
	0x01EBF95C ADRP X22, 0x2240000
	0x01EBF960 LDRB W8, [X23 + 0x44C]
	0x01EBF964 LDR X22, [X22 + 0x8F8]
	0x01EBF968 MOV X21, X2
	0x01EBF96C MOV X20, X1
	0x01EBF970 MOV X19, X0
	0x01EBF974 TBNZ X8, 0x0, 0x1EBF9A4
	0x01EBF978 ADRP X0, 0x223F000
	0x01EBF97C LDR X0, [X0 + 0xA90]
	0x01EBF980 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 336
	002 Move [X31+176], D14
	003 Move [X31+192], D13
	004 Move [X31+200], D12
	005 Move [X31+208], D11
	006 Move [X31+216], D10
	007 Move [X31+224], D9
	008 Move [X31+232], D8
	009 Move [X31+240], X29
	010 Move [X31+248], X30
	011 Move [X31+256], X28
	012 Move [X31+264], X27
	013 Move [X31+272], X26
	014 Move [X31+280], X25
	015 Move [X31+288], X24
	016 Move [X31+296], X23
	017 Move [X31+304], X22
	018 Move [X31+312], X21
	019 Move [X31+320], X20
	020 Move [X31+328], X19
	021 Move X21, 0x251B000
	022 Move W8, [X21+1092]
	023 Move X19, X1
	024 Move X20, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {61}
	029 Move X0, 0x2240000
	030 Move X0, [X0+2720]
	031 Call 0x1C17CF4
	032 Move X0, 0x2241000
	033 Move X0, [X0+2120]
	034 Call 0x1C17CF4
	035 Move X0, 0x2241000
	036 Move X0, [X0+2128]
	037 Call 0x1C17CF4
	038 Move X0, 0x2241000
	039 Move X0, [X0+2136]
	040 Call 0x1C17CF4
	041 Move X0, 0x2241000
	042 Move X0, [X0+2144]
	043 Call 0x1C17CF4
	044 Move X0, 0x2241000
	045 Move X0, [X0+2152]
	046 Call 0x1C17CF4
	047 Move X0, 0x2241000
	048 Move X0, [X0+2160]
	049 Call 0x1C17CF4
	050 Move X0, 0x2241000
	051 Move X0, [X0+2168]
	052 Call 0x1C17CF4
	053 Move X0, 0x2241000
	054 Move X0, [X0+2176]
	055 Call 0x1C17CF4
	056 Move X0, 0x2241000
	057 Move X0, [X0+2184]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X21+1092], W8
	061 NotImplemented "Instruction MOVI not yet implemented."
	062 Move [X31+128], X31
	063 Move [X31+96], V0
	064 Move [X31+104], V0
	065 Compare X19, 0
	066 JumpIfEqual {210}
	067 Move W8, [X19+28]
	068 Add W8, W8, 1
	069 Move [X19+24], W31
	070 Move [X19+28], W8
	071 Move X0, [X20+16]
	072 Compare X0, 0
	073 JumpIfEqual {210}
	074 Move X8, 0x2241000
	075 Move X8, [X8+2120]
	076 Move X23, 0x2241000
	077 Move X24, 0x2240000
	078 Move X23, [X23+2136]
	079 Move X24, [X24+2720]
	080 Move X1, [X8]
	081 Move X25, 0x2241000
	082 Move X26, 0x2241000
	083 Move X22, 0x2241000
	084 Move X25, [X25+2184]
	085 Move X26, [X26+2168]
	086 Move X22, [X22+2128]
	087 Add X8, X31, 48
	088 Call Dictionary`2<Int32, Object>.GetEnumerator, X0
	089 Move V0, [X31+48]
	090 Move V1, [X31+64]
	091 Move X8, [X31+80]
	092 Move X20, 0x2235000
	093 Move X20, [X20+1440]
	094 Move X27, 0x251A000
	095 Move W28, 1
	096 Move [X31+96], V0
	097 Move [X31+104], V1
	098 Move [X31+128], X8
	099 Move X1, [X23]
	100 Add X0, X31, 96
	101 Call Enumerator<Int32, Object>.MoveNext, X0
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {184}
	106 Move X0, [X24]
	107 Move W21, [X31+112]
	108 Move X29, [X31+120]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Move W0, W21
	114 Move X1, X31
	115 Call AreaOfInterest.ToCellCenter, X0
	116 Move W8, [X27+2139]
	117 Move V8, V0
	118 Move V9, V1
	119 Move V10, V2
	120 Compare W8, 0
	121 JumpIfNotEqual {125}
	122 Move X0, X20
	123 Call 0x1C17CF4
	124 Move [X27+2139], W28
	125 Compare X29, 0
	126 JumpIfEqual {208}
	127 Move X8, [X20]
	128 Move X9, [X24]
	129 Add X0, X29, 48
	130 Move X8, [X8+184]
	131 Move X9, [X9+184]
	132 Move S11, [X8+12]
	133 Move S12, [X8+16]
	134 Move V13, [X8+20]
	135 Move V14, [X9+12]
	136 Move X1, X31
	137 Call BitSet256.GetSetCount, X0
	138 Move W1, W0
	139 Move W2, [X29+24]
	140 Move X3, [X25]
	141 NotImplemented "Instruction SCVTF not yet implemented."
	142 Multiply S3, S11, S0
	143 Multiply S4, S12, S0
	144 Multiply S5, S13, S0
	145 NotImplemented "Instruction MOVI not yet implemented."
	146 Move [X31+16], V0
	147 Move [X31+24], V0
	148 Add X0, X31, 16
	149 Move V0, V8
	150 Move V1, V9
	151 Move V2, V10
	152 Call ValueTuple`4<Vector3, Vector3, Int32, Int32>..ctor, X0, X1, X2, X3, X4
	153 Move V0, [X31+16]
	154 Move V1, [X31+32]
	155 Move X10, [X26]
	156 Move [X31+144], V0
	157 Move [X31+152], V1
	158 Move W9, [X19+28]
	159 Move X8, [X19+16]
	160 Add W9, W9, 1
	161 Move [X19+28], W9
	162 Compare X8, 0
	163 JumpIfEqual {209}
	164 NotImplemented "Instruction LDRSW not yet implemented."
	165 Move W11, [X8+24]
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Add W10, W9, 1
	168 Move [X19+24], W10
	169 Move V1, [X31+144]
	170 Move V0, [X31+160]
	171 Add X8, X8, X9
	172 Move [X8+32], V1
	173 Move [X8+40], V0
	174 Move X8, [X10+32]
	175 Move V0, [X31+144]
	176 Move V1, [X31+160]
	177 Move X8, [X8+192]
	178 Move X2, [X8+112]
	179 Move [X31+48], V0
	180 Move [X31+56], V1
	181 Add X1, X31, 48
	182 Move X0, X19
	183 Call List`1<ValueTuple`4<Vector3, Vector3, Int32, Int32>>.AddWithResize, X0, X1
	184 Move X1, [X22]
	185 Add X0, X31, 96
	186 Call Enumerator<Int32, Object>.Dispose, X0
	187 Move X20, [X31+320]
	188 Move X19, [X31+328]
	189 Move X22, [X31+304]
	190 Move X21, [X31+312]
	191 Move X24, [X31+288]
	192 Move X23, [X31+296]
	193 Move X26, [X31+272]
	194 Move X25, [X31+280]
	195 Move X28, [X31+256]
	196 Move X27, [X31+264]
	197 Move X29, [X31+240]
	198 Move X30, [X31+248]
	199 Move D9, [X31+224]
	200 Move D8, [X31+232]
	201 Move D11, [X31+208]
	202 Move D10, [X31+216]
	203 Move D13, [X31+192]
	204 Move D12, [X31+200]
	205 Move V14, [X31+176]
	206 Add X31, X31, 336
	207 Return 
	208 Call 0x1C17F20
	209 Call 0x1C17F20
	210 Call 0x1C17F20
	211 Move X19, X0
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Move X0, X19
	214 Call 0x3EB2AD0
	215 Move X20, [X0]
	216 Call 0x3EB2AE0
	217 Move X1, [X22]
	218 Add X0, X31, 96
	219 Call Enumerator<Int32, Object>.Dispose, X0
	220 Compare X20, 0
	221 JumpIfEqual {187}
	222 Move X0, X20
	223 Call 0x1C17F18
	224 Move X20, X31
	225 Move X19, X0
	226 Move X1, [X22]
	227 Add X0, X31, 96
	228 Call Enumerator<Int32, Object>.Dispose, X0
	229 Compare X20, 0
	230 JumpIfNotEqual {233}
	231 Move X0, X19
	232 Call 0x1D2D690
	233 Move X0, X20
	234 Call 0x1C17F18
	235 Call 0x1991590

Method: System.Collections.Generic.List`1<Fusion.NetworkId> GetObjectsInAreaOfInterestForPlayer(Fusion.PlayerRef player)

Disassembly:
	0x01EBF984 ADRP X0, 0x2240000
	0x01EBF988 LDR X0, [X0 + 0x900]
	0x01EBF98C BL 0x1C16CF4
	0x01EBF990 ADRP X0, 0x2240000
	0x01EBF994 LDR X0, [X0 + 0x8F8]
	0x01EBF998 BL 0x1C16CF4
	0x01EBF99C MOVZ W8, 0x1
	0x01EBF9A0 STRB W8, [X23 + 0x44C]
	0x01EBF9A4 AND X21, X21, 0x0
	0x01EBF9A8 ADD X2, X31, 0x8
	0x01EBF9AC MOV X0, X19
	0x01EBF9B0 MOV X1, X21
	0x01EBF9B4 STR X31, [X31 + 0x8]
	0x01EBF9B8 BL 0x1EC0278
	0x01EBF9BC LDR X1, [X22]
	0x01EBF9C0 AND W0, W0, 0x1
	0x01EBF9C4 MOV X2, X31
	0x01EBF9C8 BL 0x1E3BA60
	0x01EBF9CC LDR X8, [X31 + 0x8]
	0x01EBF9D0 CBZ X8, 0x1EBFAD8
	0x01EBF9D4 ADRP X9, 0x2240000
	0x01EBF9D8 LDR W8, [X8 + 0xA0]
	0x01EBF9DC LDR X9, [X9 + 0x900]
	0x01EBF9E0 MOV X2, X31
	0x01EBF9E4 CMP W8, 0x0
	0x01EBF9E8 LDR X1, [X9]
	0x01EBF9EC CSET W0, GT
	0x01EBF9F0 BL 0x1E3BA60
	0x01EBF9F4 CBZ X20, 0x1EBFAD8
	0x01EBF9F8 MOVZ W2, 0x1
	0x01EBF9FC MOV X0, X20
	0x01EBFA00 MOV X1, X21
	0x01EBFA04 MOV W3, W31
	0x01EBFA08 MOV X4, X31
	0x01EBFA0C BL 0x1ED0A18
	0x01EBFA10 CBZ X0, 0x1EBFAD8
	0x01EBFA14 LDRB W8, [X0 + 0x50]
	0x01EBFA18 MOV X22, X0
	0x01EBFA1C ANDS W31, W8, 0x3
	0x01EBFA20 B.NE 0x1EBFA9C
	0x01EBFA24 LDR X23, [X19 + 0x40]
	0x01EBFA28 CBZ X23, 0x1EBFAD8
	0x01EBFA2C ADRP X10, 0x223F000
	0x01EBFA30 LDR X8, [X23]
	0x01EBFA34 LDR W24, [X20 + 0x28]
	0x01EBFA38 LDR X10, [X10 + 0xA90]
	0x01EBFA3C LDRH W9, [X8 + 0x12E]
	0x01EBFA40 LDR X1, [X10]
	0x01EBFA44 CBZ X9, 0x1EBFA68
	0x01EBFA48 LDR X10, [X8 + 0xB0]
	0x01EBFA4C ADD X10, X10, 0x8
	0x01EBFA50 LDUR X11, [X10 - 0x8]
	0x01EBFA54 CMP X11, X1
	0x01EBFA58 B.EQ 0x1EBFA78
	0x01EBFA5C SUBS X9, X9, 0x1
	0x01EBFA60 ADD X10, X10, 0x10
	0x01EBFA64 B.NE 0x1EBFA50
	0x01EBFA68 MOVZ W2, 0x20
	0x01EBFA6C MOV X0, X23
	0x01EBFA70 BL 0x1C5C788
	0x01EBFA74 B 0x1EBFA88
	0x01EBFA78 LDR W9, [X10]
	0x01EBFA7C ADD W9, W9, 0x20
	0x01EBFA80 ADD X8, X8, W9, 0x4, SXTW
	0x01EBFA84 ADD X0, X8, 0x138
	0x01EBFA88 LDP X8, X3, [X0]
	0x01EBFA8C MOV X0, X23
	0x01EBFA90 MOV X1, X24
	0x01EBFA94 MOV X2, X21
	0x01EBFA98 BLR X8
	0x01EBFA9C LDR X2, [X31 + 0x8]
	0x01EBFAA0 MOV X0, X20
	0x01EBFAA4 MOV X1, X22
	0x01EBFAA8 MOV X3, X31
	0x01EBFAAC BL 0x1ED47C0
	0x01EBFAB0 MOVZ W1, 0x1
	0x01EBFAB4 MOV X0, X22
	0x01EBFAB8 MOV X2, X19
	0x01EBFABC MOV X3, X31
	0x01EBFAC0 BL 0x1E94D10
	0x01EBFAC4 LDP X20, X19, [X31 + 0x30]
	0x01EBFAC8 LDP X22, X21, [X31 + 0x20]
	0x01EBFACC LDP X24, X23, [X31 + 0x10]
	0x01EBFAD0 LDR X30, [X31], #0x40
	0x01EBFAD4 RET
	0x01EBFAD8 BL 0x1C16F20
	0x01EBFADC SUB X31, X31, 0xA0
	0x01EBFAE0 STR X30, [X31 + 0x60]
	0x01EBFAE4 STP X24, X23, [X31 + 0x70]
	0x01EBFAE8 STP X22, X21, [X31 + 0x80]
	0x01EBFAEC STP X20, X19, [X31 + 0x90]
	0x01EBFAF0 ADRP X23, 0x251A000
	0x01EBFAF4 LDRB W8, [X23 + 0x44B]
	0x01EBFAF8 MOV W22, W3
	0x01EBFAFC MOV X19, X2
	0x01EBFB00 MOV X21, X1
	0x01EBFB04 MOV X20, X0
	0x01EBFB08 TBNZ X8, 0x0, 0x1EBFB74
	0x01EBFB0C ADRP X0, 0x2240000
	0x01EBFB10 LDR X0, [X0 + 0x8E8]
	0x01EBFB14 BL 0x1C16CF4
	0x01EBFB18 ADRP X0, 0x223B000
	0x01EBFB1C LDR X0, [X0 + 0x830]
	0x01EBFB20 BL 0x1C16CF4
	0x01EBFB24 ADRP X0, 0x223B000
	0x01EBFB28 LDR X0, [X0 + 0x838]
	0x01EBFB2C BL 0x1C16CF4
	0x01EBFB30 ADRP X0, 0x223B000
	0x01EBFB34 LDR X0, [X0 + 0x840]
	0x01EBFB38 BL 0x1C16CF4
	0x01EBFB3C ADRP X0, 0x223B000
	0x01EBFB40 LDR X0, [X0 + 0x848]
	0x01EBFB44 BL 0x1C16CF4
	0x01EBFB48 ADRP X0, 0x2240000
	0x01EBFB4C LDR X0, [X0 + 0x908]
	0x01EBFB50 BL 0x1C16CF4
	0x01EBFB54 ADRP X0, 0x2240000
	0x01EBFB58 LDR X0, [X0 + 0x910]
	0x01EBFB5C BL 0x1C16CF4
	0x01EBFB60 ADRP X0, 0x2240000
	0x01EBFB64 LDR X0, [X0 + 0x918]
	0x01EBFB68 BL 0x1C16CF4
	0x01EBFB6C MOVZ W8, 0x1
	0x01EBFB70 STRB W8, [X23 + 0x44B]
	0x01EBFB74 STR X31, [X31 + 0x68]
	0x01EBFB78 STP X31, X31, [X31]
	0x01EBFB7C STR X31, [X31 + 0x10]
	0x01EBFB80 TBZ X22, 0x0, 0x1EBFBB0
	0x01EBFB84 CBZ X19, 0x1EBFD2C
	0x01EBFB88 LDP W2, W8, [X19 + 0x18]
	0x01EBFB8C ADD W8, W8, 0x1
	0x01EBFB90 CMP W2, 0x1
	0x01EBFB94 STP W31, W8, [X19 + 0x18]
	0x01EBFB98 B.LT 0x1EBFBB4
	0x01EBFB9C LDR X0, [X19 + 0x10]
	0x01EBFBA0 MOV W1, W31
	0x01EBFBA4 MOV X3, X31
	0x01EBFBA8 BL 0x339FA34
	0x01EBFBAC B 0x1EBFBB4
	0x01EBFBB0 CBZ X19, 0x1EBFD2C
	0x01EBFBB4 CBZ X21, 0x1EBFD2C
	0x01EBFBB8 LDR W23, [X19 + 0x18]
	0x01EBFBBC LDR X22, [X20 + 0x20]
	0x01EBFBC0 MOV X0, X21
	0x01EBFBC4 MOV X1, X31
	0x01EBFBC8 BL 0x1ED810C
	0x01EBFBCC CBZ X22, 0x1EBFD2C
	0x01EBFBD0 ADRP X8, 0x2240000
	0x01EBFBD4 LDR X8, [X8 + 0x8E8]
	0x01EBFBD8 MOV W1, W0
	0x01EBFBDC ADD X2, X31, 0x68
	0x01EBFBE0 MOV X0, X22
	0x01EBFBE4 LDR X3, [X8]
	0x01EBFBE8 BL 0x2A150AC
	0x01EBFBEC TBZ X0, 0x0, 0x1EBFD00
	0x01EBFBF0 LDR X0, [X31 + 0x68]
	0x01EBFBF4 CBZ X0, 0x1EBFD2C
	0x01EBFBF8 ADRP X8, 0x223B000
	0x01EBFBFC LDR X8, [X8 + 0x848]
	0x01EBFC00 LDR X1, [X8]
	0x01EBFC04 ADD X8, X31, 0x40
	0x01EBFC08 BL 0x2DAAA30
	0x01EBFC0C LDR V0, [X31 + 0x4]
	0x01EBFC10 LDR X8, [X31 + 0x50]
	0x01EBFC14 ADRP X21, 0x223B000
	0x01EBFC18 ADRP X22, 0x2240000
	0x01EBFC1C LDR X21, [X21 + 0x838]
	0x01EBFC20 LDR X22, [X22 + 0x908]
	0x01EBFC24 STR V0, [X31]
	0x01EBFC28 STR X8, [X31 + 0x10]
	0x01EBFC2C MOVZ W24, 0x18
	0x01EBFC30 LDR X1, [X21]
	0x01EBFC34 ADD X0, X31, 0x0
	0x01EBFC38 BL 0x2BBDA6C
	0x01EBFC3C TBZ X0, 0x0, 0x1EBFCEC
	0x01EBFC40 LDR W1, [X31 + 0x10]
	0x01EBFC44 MOV X0, X20
	0x01EBFC48 MOV W2, W31
	0x01EBFC4C BL 0x1EBEC78
	0x01EBFC50 MOV X8, X0
	0x01EBFC54 CBZ X0, 0x1EBFD24
	0x01EBFC58 LDR W9, [X8 + 0x18]!
	0x01EBFC5C CMP W9, 0x1
	0x01EBFC60 B.LT 0x1EBFC30
	0x01EBFC64 LDR X9, [X8 + 0x10]
	0x01EBFC68 LDR V0, [X8]
	0x01EBFC6C LDR X10, [X22]
	0x01EBFC70 STR X9, [X31 + 0x30]
	0x01EBFC74 STR V0, [X31 + 0x2]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X23, 0x251B000
	009 Move X22, 0x2241000
	010 Move X19, 0x2241000
	011 Move W8, [X23+1093]
	012 Move X22, [X22+40]
	013 Move X19, [X19+48]
	014 Move X21, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {46}
	020 Move X0, 0x223C000
	021 Move X0, [X0+2096]
	022 Call 0x1C17CF4
	023 Move X0, 0x223C000
	024 Move X0, [X0+2104]
	025 Call 0x1C17CF4
	026 Move X0, 0x223C000
	027 Move X0, [X0+2112]
	028 Call 0x1C17CF4
	029 Move X0, 0x223C000
	030 Move X0, [X0+2120]
	031 Call 0x1C17CF4
	032 Move X0, 0x2240000
	033 Move X0, [X0+2776]
	034 Call 0x1C17CF4
	035 Move X0, 0x2241000
	036 Move X0, [X0+48]
	037 Call 0x1C17CF4
	038 Move X0, 0x2241000
	039 Move X0, [X0+40]
	040 Call 0x1C17CF4
	041 Move X0, 0x2238000
	042 Move X0, [X0+3648]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X23+1093], W8
	046 Move X0, [X22]
	047 Move [X31+32], X31
	048 Move [X31+40], X31
	049 Move [X31+48], X31
	050 Call 0x1C17F10
	051 Move X1, [X19]
	052 Move X19, X0
	053 Call List`1<NetworkId>..ctor, X0
	054 Move X0, [X20+56]
	055 Compare X0, 0
	056 JumpIfEqual {183}
	057 Move X1, X31
	058 Call NetworkRunner.get_IsServer, X0
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {172}
	063 Move X8, [X20+88]
	064 Compare X8, 0
	065 JumpIfEqual {183}
	066 Move W8, [X8+20]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X22, 0x2238000
	069 Move X22, [X22+3648]
	070 Move X0, [X22]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X0, [X22]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X22, 0x251A000
	082 Move W8, [X22+2931]
	083 Compare W8, 0
	084 JumpIfNotEqual {90}
	085 Move X0, 0x223A000
	086 Move X0, [X0+32]
	087 Call 0x1C17CF4
	088 Move W8, 1
	089 Move [X22+2931], W8
	090 Move [X31+8], X31
	091 Move X0, [X20+184]
	092 Compare X0, 0
	093 JumpIfEqual {183}
	094 Move X8, 0x223A000
	095 Move X8, [X8+32]
	096 And X1, X21, 0
	097 Add X2, X31, 8
	098 Move X3, [X8]
	099 Call Dictionary`2<PlayerRef, Object>.TryGetValue, X0, X1, X2
	100 Move X8, [X31+8]
	101 Compare X8, 0
	102 JumpIfEqual {172}
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfNotEqual {172}
	107 Move X0, [X8+48]
	108 Compare X0, 0
	109 JumpIfEqual {183}
	110 Move X8, 0x223C000
	111 Move X8, [X8+2120]
	112 Move X1, [X8]
	113 Add X8, X31, 8
	114 Call HashSet`1<Int32>.GetEnumerator, X0
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 Move X8, [X31+24]
	117 Move X22, 0x223C000
	118 Move X22, [X22+2104]
	119 Move [X31+2], V0
	120 Move [X31+48], X8
	121 Move X23, 0x2240000
	122 Move X23, [X23+2776]
	123 Move X1, [X22]
	124 Add X0, X31, 32
	125 Call Enumerator<Int32>.MoveNext, X0
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfNotEqual {167}
	130 Move W1, [X31+48]
	131 Move X0, X20
	132 Move W2, W31
	133 Call Simulation.AOI_GetCell, X0, X1, X2
	134 Compare X0, 0
	135 JumpIfEqual {123}
	136 Move X21, [X0+32]
	137 Compare X21, 0
	138 JumpIfEqual {123}
	139 Move X0, X21
	140 Move X1, X31
	141 Call NetworkObjectMeta.get_Id, X0
	142 Compare X19, 0
	143 JumpIfEqual {181}
	144 Move W10, [X19+28]
	145 Move X8, [X19+16]
	146 Move X9, [X23]
	147 Add W10, W10, 1
	148 Move [X19+28], W10
	149 Compare X8, 0
	150 JumpIfEqual {182}
	151 NotImplemented "Instruction LDRSW not yet implemented."
	152 Move W11, [X8+24]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Add W9, W10, 1
	155 Add X8, X8, X10
	156 Move [X19+24], W9
	157 Move [X8+32], W0
	158 Move X8, [X9+32]
	159 And X1, X0, 0
	160 Move X8, [X8+192]
	161 Move X2, [X8+112]
	162 Move X0, X19
	163 Call List`1<NetworkId>.AddWithResize, X0, X1
	164 Move X21, [X21+128]
	165 Compare X21, 0
	166 JumpIfNotEqual {139}
	167 Move X8, 0x223C000
	168 Move X8, [X8+2096]
	169 Add X0, X31, 32
	170 Move X1, [X8]
	171 Call Enumerator<Int32>.Dispose, X0
	172 Move X0, X19
	173 Move X20, [X31+96]
	174 Move X19, [X31+104]
	175 Move X22, [X31+80]
	176 Move X21, [X31+88]
	177 Move X30, [X31+64]
	178 Move X23, [X31+72]
	179 Add X31, X31, 112
	180 Return X0
	181 Call 0x1C17F20
	182 Call 0x1C17F20
	183 Call 0x1C17F20
	184 Move X20, X0
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X0, X20
	187 Call 0x3EB2AD0
	188 Move X21, [X0]
	189 Call 0x3EB2AE0
	190 Move X8, 0x223C000
	191 Move X8, [X8+2096]
	192 Add X0, X31, 32
	193 Move X1, [X8]
	194 Call Enumerator<Int32>.Dispose, X0
	195 Compare X21, 0
	196 JumpIfEqual {172}
	197 Move X0, X21
	198 Call 0x1C17F18
	199 Move X21, X31
	200 Move X20, X0
	201 Move X8, 0x223C000
	202 Move X8, [X8+2096]
	203 Move X1, [X8]
	204 Add X0, X31, 32
	205 Call Enumerator<Int32>.Dispose, X0
	206 Compare X21, 0
	207 JumpIfNotEqual {210}
	208 Move X0, X20
	209 Call 0x1D2D690
	210 Move X0, X21
	211 Call 0x1C17F18
	212 Call 0x1991590

Method: System.Void GetObjectsAndPlayersInAreaOfInterestCell(System.Int32 cellKey, System.Collections.Generic.List`1<Fusion.PlayerRef> players, System.Collections.Generic.List`1<Fusion.NetworkId> objects)

Disassembly:
	0x01EBFDA0 MOV X0, X20
	0x01EBFDA4 BL 0x1D2C690
	0x01EBFDA8 MOV X0, X21
	0x01EBFDAC BL 0x1C16F18
	0x01EBFDB0 BL 0x1990590
	0x01EBFDB4 SUB X31, X31, 0x90
	0x01EBFDB8 STP X30, X23, [X31 + 0x60]
	0x01EBFDBC STP X22, X21, [X31 + 0x70]
	0x01EBFDC0 STP X20, X19, [X31 + 0x80]
	0x01EBFDC4 MRS X23, 0xC000
	0x01EBFDC8 LDR X8, [X23 + 0x28]
	0x01EBFDCC MOVI V0.2D, 0x0
	0x01EBFDD0 STR X8, [X31 + 0x58]
	0x01EBFDD4 STR X31, [X31 + 0x50]
	0x01EBFDD8 STP V0, V0, [X31 + 0x30]
	0x01EBFDDC STR W31, [X31 + 0x4]
	0x01EBFDE0 CBZ X1, 0x1EBFEB0
	0x01EBFDE4 MOV X20, X1
	0x01EBFDE8 LDR W1, [X1 + 0xA0]
	0x01EBFDEC CBZ W1, 0x1EBFE8C
	0x01EBFDF0 MOV W21, W2
	0x01EBFDF4 MOV W2, W31
	0x01EBFDF8 MOV X19, X0
	0x01EBFDFC BL 0x1EBEC78
	0x01EBFE00 CBZ X0, 0x1EBFEB0
	0x01EBFE04 MOV X22, X0
	0x01EBFE08 ADD X0, X0, 0x18
	0x01EBFE0C MOV X1, X20
	0x01EBFE10 MOV X2, X31
	0x01EBFE14 BL 0x1E980B0
	0x01EBFE18 TBZ X21, 0x0, 0x1EBFE8C
	0x01EBFE1C MOV X0, X20
	0x01EBFE20 MOV X1, X31
	0x01EBFE24 BL 0x1E97370
	0x01EBFE28 MOV X20, X0
	0x01EBFE2C ADD X0, X22, 0x30
	0x01EBFE30 ADD X8, X31, 0x8
	0x01EBFE34 MOV X1, X31
	0x01EBFE38 BL 0x1E889A8
	0x01EBFE3C LDUR V0, [X31 + 0x8]
	0x01EBFE40 LDUR V1, [X31 + 0x18]
	0x01EBFE44 LDR X8, [X31 + 0x28]
	0x01EBFE48 ADD X0, X31, 0x30
	0x01EBFE4C ADD X1, X31, 0x4
	0x01EBFE50 MOV X2, X31
	0x01EBFE54 STP V0, V1, [X31 + 0x30]
	0x01EBFE58 STR X8, [X31 + 0x50]
	0x01EBFE5C BL 0x1E8911C
	0x01EBFE60 TBZ X0, 0x0, 0x1EBFE8C
	0x01EBFE64 AND X20, X20, 0x0
	0x01EBFE68 LDR W1, [X31 + 0x4]
	0x01EBFE6C MOV X0, X19
	0x01EBFE70 MOV X2, X20
	0x01EBFE74 BL 0x1EBFEB8
	0x01EBFE78 ADD X0, X31, 0x30
	0x01EBFE7C ADD X1, X31, 0x4
	0x01EBFE80 MOV X2, X31
	0x01EBFE84 BL 0x1E8911C
	0x01EBFE88 TBNZ X0, 0x0, 0x1EBFE68
	0x01EBFE8C LDR X8, [X23 + 0x28]
	0x01EBFE90 LDR X9, [X31 + 0x58]
	0x01EBFE94 CMP X8, X9
	0x01EBFE98 B.NE 0x1EBFEB4
	0x01EBFE9C LDP X20, X19, [X31 + 0x80]
	0x01EBFEA0 LDP X22, X21, [X31 + 0x70]
	0x01EBFEA4 LDP X30, X23, [X31 + 0x60]
	0x01EBFEA8 ADD X31, X31, 0x90
	0x01EBFEAC RET
	0x01EBFEB0 BL 0x1C16F20
	0x01EBFEB4 BL 0x3EB1B20
	0x01EBFEB8 STR X30, [X31 - 0x30]!
	0x01EBFEBC STP X22, X21, [X31 + 0x10]
	0x01EBFEC0 STP X20, X19, [X31 + 0x20]
	0x01EBFEC4 ADRP X22, 0x251A000
	0x01EBFEC8 LDRB W8, [X22 + 0x4B5]
	0x01EBFECC MOV X19, X2
	0x01EBFED0 MOV W21, W1
	0x01EBFED4 MOV X20, X0
	0x01EBFED8 CBNZ W8, 0x1EBFEF0
	0x01EBFEDC ADRP X0, 0x2240000
	0x01EBFEE0 LDR X0, [X0 + 0x8D0]
	0x01EBFEE4 BL 0x1C16CF4
	0x01EBFEE8 MOVZ W8, 0x1
	0x01EBFEEC STRB W8, [X22 + 0x4B5]
	0x01EBFEF0 STR X31, [X31 + 0x8]
	0x01EBFEF4 LDR X0, [X20 + 0xB0]
	0x01EBFEF8 CBZ X0, 0x1EBFF3C
	0x01EBFEFC ADRP X8, 0x2240000
	0x01EBFF00 LDR X8, [X8 + 0x8D0]
	0x01EBFF04 ADD X2, X31, 0x8
	0x01EBFF08 MOV W1, W21
	0x01EBFF0C LDR X3, [X8]
	0x01EBFF10 BL 0x2A150AC
	0x01EBFF14 LDR X8, [X31 + 0x8]
	0x01EBFF18 ANDS W31, W0, 0x1
	0x01EBFF1C AND X2, X19, 0x0
	0x01EBFF20 MOV X0, X20
	0x01EBFF24 CSEL X1, X8, X31, NE
	0x01EBFF28 BL 0x1EBF7EC
	0x01EBFF2C LDP X20, X19, [X31 + 0x20]
	0x01EBFF30 LDP X22, X21, [X31 + 0x10]
	0x01EBFF34 LDR X30, [X31], #0x30
	0x01EBFF38 RET
	0x01EBFF3C BL 0x1C16F20
	0x01EBFF40 SUB X31, X31, 0x180
	0x01EBFF44 STP X29, X30, [X31 + 0x130]
	0x01EBFF48 STP X26, X25, [X31 + 0x140]
	0x01EBFF4C STP X24, X23, [X31 + 0x150]
	0x01EBFF50 STP X22, X21, [X31 + 0x160]
	0x01EBFF54 STP X20, X19, [X31 + 0x170]
	0x01EBFF58 MRS X25, 0xC000
	0x01EBFF5C LDR X8, [X25 + 0x28]
	0x01EBFF60 ADD X26, X31, 0x80
	0x01EBFF64 MOVI V0.2D, 0x0
	0x01EBFF68 STR X8, [X31 + 0x128]
	0x01EBFF6C STR X31, [X26 + 0xA0]
	0x01EBFF70 STP V0, V0, [X26 + 0x80]
	0x01EBFF74 STR X31, [X26 + 0x70]
	0x01EBFF78 STP V0, V0, [X26 + 0x50]
	0x01EBFF7C STR X31, [X31 + 0x8]
	0x01EBFF80 STR X31, [X26 + 0x40]
	0x01EBFF84 STP V0, V0, [X26 + 0x20]
	0x01EBFF88 STR W31, [X31 + 0x4]
	0x01EBFF8C CBZ X1, 0x1EC01E8
	0x01EBFF90 LDR W8, [X1 + 0xA0]
	0x01EBFF94 MOV W22, W2
	0x01EBFF98 MOV X21, X1
	0x01EBFF9C CMP W8, W2
	0x01EBFFA0 B.EQ 0x1EC01BC
	0x01EBFFA4 MOV X19, X0
	0x01EBFFA8 MOV X0, X21
	0x01EBFFAC MOV X1, X31
	0x01EBFFB0 BL 0x1E97370
	0x01EBFFB4 LDR W1, [X21 + 0xA0]
	0x01EBFFB8 MOV X20, X0
	0x01EBFFBC CMP W1, 0x1
	0x01EBFFC0 B.LT 0x1EC0004
	0x01EBFFC4 MOV X0, X19
	0x01EBFFC8 MOV W2, W31
	0x01EBFFCC BL 0x1EBEC78
	0x01EBFFD0 CBZ X0, 0x1EC01E8
	0x01EBFFD4 MOV X23, X0
	0x01EBFFD8 ADD X0, X0, 0x18
	0x01EBFFDC MOV X1, X21
	0x01EBFFE0 MOV X2, X31
	0x01EBFFE4 BL 0x1E980B0
	0x01EBFFE8 MOV X0, X23
	0x01EBFFEC MOV X1, X31
	0x01EBFFF0 BL 0x1ECAD70
	0x01EBFFF4 TBZ X0, 0x0, 0x1EC0008
	0x01EBFFF8 MOV X0, X19
	0x01EBFFFC MOV X1, X23
	0x01EC0000 BL 0x1EBF024
	0x01EC0004 MOV X23, X31
	0x01EC0008 MOVZ W2, 0x1
	0x01EC000C MOV X0, X19
	0x01EC0010 MOV W1, W22
	0x01EC0014 BL 0x1EBEC78
	0x01EC0018 STR W22, [X21 + 0xA0]
	0x01EC001C CBZ X0, 0x1EC01E8
	0x01EC0020 MOV X24, X0

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+112], X26
	004 Move [X31+120], X25
	005 Move [X31+128], X24
	006 Move [X31+136], X23
	007 Move [X31+144], X22
	008 Move [X31+152], X21
	009 Move [X31+160], X20
	010 Move [X31+168], X19
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X24+40]
	013 Move X23, 0x251B000
	014 Move X21, X3
	015 Move X19, X2
	016 Move [X31+88], X8
	017 Move W8, [X23+1094]
	018 Move W22, W1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0x2240000
	025 Move X0, [X0+2776]
	026 Call 0x1C17CF4
	027 Move X0, 0x2241000
	028 Move X0, [X0+2232]
	029 Call 0x1C17CF4
	030 Move X0, 0x2241000
	031 Move X0, [X0+2240]
	032 Call 0x1C17CF4
	033 Move X0, 0x2241000
	034 Move X0, [X0+2248]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X23+1094], W8
	038 NotImplemented "Instruction MOVI not yet implemented."
	039 Move [X31+80], X31
	040 Move [X31+48], V0
	041 Move [X31+56], V0
	042 Move [X31+4], W31
	043 Compare X19, 0
	044 JumpIfEqual {194}
	045 Move W8, [X19+28]
	046 Add W8, W8, 1
	047 Move [X19+24], W31
	048 Move [X19+28], W8
	049 Compare X21, 0
	050 JumpIfEqual {194}
	051 Move W8, [X21+28]
	052 Move X0, X20
	053 Move W1, W22
	054 Move W2, W31
	055 Add W8, W8, 1
	056 Move [X21+24], W31
	057 Move [X21+28], W8
	058 Call Simulation.AOI_GetCell, X0, X1, X2
	059 Compare X0, 0
	060 JumpIfEqual {180}
	061 Move X23, [X0+32]
	062 Move X22, X0
	063 Compare X23, 0
	064 JumpIfEqual {93}
	065 Move X25, 0x2240000
	066 Move X25, [X25+2776]
	067 Move X0, X23
	068 Move X1, X31
	069 Call NetworkObjectMeta.get_Id, X0
	070 Move W10, [X21+28]
	071 Move X8, [X21+16]
	072 Move X9, [X25]
	073 Add W10, W10, 1
	074 Move [X21+28], W10
	075 Compare X8, 0
	076 JumpIfEqual {194}
	077 NotImplemented "Instruction LDRSW not yet implemented."
	078 Move W11, [X8+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Add W9, W10, 1
	081 Add X8, X8, X10
	082 Move [X21+24], W9
	083 Move [X8+32], W0
	084 Move X8, [X9+32]
	085 And X1, X0, 0
	086 Move X0, X21
	087 Move X8, [X8+192]
	088 Move X2, [X8+112]
	089 Call List`1<NetworkId>.AddWithResize, X0, X1
	090 Move X23, [X23+128]
	091 Compare X23, 0
	092 JumpIfNotEqual {67}
	093 Add X22, X22, 48
	094 Move X8, [X22]
	095 Compare X8, 0
	096 JumpIfNotEqual {106}
	097 Move X8, [X22+8]
	098 Compare X8, 0
	099 JumpIfNotEqual {106}
	100 Move X8, [X22+16]
	101 Compare X8, 0
	102 JumpIfNotEqual {106}
	103 Move X8, [X22+24]
	104 Compare X8, 0
	105 JumpIfEqual {180}
	106 Add X8, X31, 8
	107 Move X0, X22
	108 Move X1, X31
	109 Call BitSet256.GetIterator, X0
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 Move X8, [X31+40]
	113 Add X0, X31, 48
	114 Add X1, X31, 4
	115 Move X2, X31
	116 Move [X31+48], V0
	117 Move [X31+56], V1
	118 Move [X31+80], X8
	119 Call Iterator.Next, X0, X1
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {180}
	124 Move X21, 0x2241000
	125 Move X26, 0x2241000
	126 Move X21, [X21+2256]
	127 Move X26, [X26+2232]
	128 Move X23, 0x251B000
	129 Move W25, 1
	130 Move W8, [X23+1205]
	131 Move W22, [X31+4]
	132 Compare W8, 0
	133 JumpIfNotEqual {137}
	134 Move X0, X21
	135 Call 0x1C17CF4
	136 Move [X23+1205], W25
	137 Move [X31+8], X31
	138 Move X0, [X20+176]
	139 Compare X0, 0
	140 JumpIfEqual {194}
	141 Move X3, [X21]
	142 Add X2, X31, 8
	143 Move W1, W22
	144 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	145 Move X8, [X31+8]
	146 Compare X8, 0
	147 JumpIfEqual {194}
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {194}
	152 Move W10, [X19+28]
	153 Move W1, [X8+40]
	154 Move X8, [X19+16]
	155 Move X9, [X26]
	156 Add W10, W10, 1
	157 Move [X19+28], W10
	158 Compare X8, 0
	159 JumpIfEqual {194}
	160 NotImplemented "Instruction LDRSW not yet implemented."
	161 Move W11, [X8+24]
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Add W9, W10, 1
	164 Add X8, X8, X10
	165 Move [X19+24], W9
	166 Move [X8+32], W1
	167 Move X8, [X9+32]
	168 Move X0, X19
	169 Move X8, [X8+192]
	170 Move X2, [X8+112]
	171 Call List`1<PlayerRef>.AddWithResize, X0, X1
	172 Add X0, X31, 48
	173 Add X1, X31, 4
	174 Move X2, X31
	175 Call Iterator.Next, X0, X1
	176 Move TEMP, X0
	177 And TEMP, TEMP, 1
	178 Compare TEMP, 1
	179 JumpIfEqual {130}
	180 Move X8, [X24+40]
	181 Move X9, [X31+88]
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move X20, [X31+160]
	184 Move X19, [X31+168]
	185 Move X22, [X31+144]
	186 Move X21, [X31+152]
	187 Move X24, [X31+128]
	188 Move X23, [X31+136]
	189 Move X26, [X31+112]
	190 Move X25, [X31+120]
	191 Move X30, [X31+96]
	192 Add X31, X31, 176
	193 Return 
	194 Call 0x1C17F20
	195 Call 0x3EB2B20

Method: Fusion.Simulation/AreaOfInterestCell AOI_GetCell(System.Int32 cellKey, System.Boolean create)

Disassembly:
	0x01EBFC78 LDR W9, [X19 + 0x1C]
	0x01EBFC7C LDR X8, [X19 + 0x10]
	0x01EBFC80 ADD W9, W9, 0x1
	0x01EBFC84 STR W9, [X19 + 0x1C]
	0x01EBFC88 CBZ X8, 0x1EBFD28
	0x01EBFC8C LDRSW X9, [X19 + 0x18]
	0x01EBFC90 LDR W11, [X8 + 0x18]
	0x01EBFC94 CMP W9, W11
	0x01EBFC98 B.CS 0x1EBFCC0
	0x01EBFC9C ADD W10, W9, 0x1
	0x01EBFCA0 STR W10, [X19 + 0x18]
	0x01EBFCA4 LDR X10, [X31 + 0x30]
	0x01EBFCA8 LDR V0, [X31 + 0x2]
	0x01EBFCAC NOP
	0x01EBFCB0 MADD X8, X9, X24, X8
	0x01EBFCB4 STR X10, [X8 + 0x30]
	0x01EBFCB8 STR V0, [X8 + 0x2]
	0x01EBFCBC B 0x1EBFC30
	0x01EBFCC0 LDR X8, [X10 + 0x20]
	0x01EBFCC4 LDR V0, [X31 + 0x2]
	0x01EBFCC8 LDR X9, [X31 + 0x30]
	0x01EBFCCC LDR X8, [X8 + 0xC0]
	0x01EBFCD0 LDR X2, [X8 + 0x70]
	0x01EBFCD4 STR V0, [X31 + 0x4]
	0x01EBFCD8 STR X9, [X31 + 0x50]
	0x01EBFCDC ADD X1, X31, 0x40
	0x01EBFCE0 MOV X0, X19
	0x01EBFCE4 BL 0x31175AC
	0x01EBFCE8 B 0x1EBFC30
	0x01EBFCEC ADRP X8, 0x223B000
	0x01EBFCF0 LDR X8, [X8 + 0x830]
	0x01EBFCF4 ADD X0, X31, 0x0
	0x01EBFCF8 LDR X1, [X8]
	0x01EBFCFC BL 0x2BBDA68
	0x01EBFD00 LDR W8, [X19 + 0x18]
	0x01EBFD04 LDP X20, X19, [X31 + 0x90]
	0x01EBFD08 LDP X22, X21, [X31 + 0x80]
	0x01EBFD0C LDR X30, [X31 + 0x60]
	0x01EBFD10 CMP W8, W23
	0x01EBFD14 LDP X24, X23, [X31 + 0x70]
	0x01EBFD18 CSET W0, GT
	0x01EBFD1C ADD X31, X31, 0xA0
	0x01EBFD20 RET
	0x01EBFD24 BL 0x1C16F20
	0x01EBFD28 BL 0x1C16F20
	0x01EBFD2C BL 0x1C16F20
	0x01EBFD30 B 0x1EBFD40
	0x01EBFD34 B 0x1EBFD40
	0x01EBFD38 B 0x1EBFD40
	0x01EBFD3C B 0x1EBFD40
	0x01EBFD40 MOV X20, X0
	0x01EBFD44 CMP W1, 0x1
	0x01EBFD48 B.NE 0x1EBFD7C
	0x01EBFD4C MOV X0, X20
	0x01EBFD50 BL 0x3EB1AD0
	0x01EBFD54 LDR X21, [X0]
	0x01EBFD58 BL 0x3EB1AE0
	0x01EBFD5C ADRP X8, 0x223B000
	0x01EBFD60 LDR X8, [X8 + 0x830]
	0x01EBFD64 ADD X0, X31, 0x0
	0x01EBFD68 LDR X1, [X8]
	0x01EBFD6C BL 0x2BBDA68
	0x01EBFD70 CBZ X21, 0x1EBFD00
	0x01EBFD74 MOV X0, X21
	0x01EBFD78 BL 0x1C16F18
	0x01EBFD7C MOV X21, X31
	0x01EBFD80 B 0x1EBFD88
	0x01EBFD84 MOV X20, X0
	0x01EBFD88 ADRP X8, 0x223B000
	0x01EBFD8C LDR X8, [X8 + 0x830]
	0x01EBFD90 LDR X1, [X8]
	0x01EBFD94 ADD X0, X31, 0x0
	0x01EBFD98 BL 0x2BBDA68
	0x01EBFD9C CBNZ X21, 0x1EBFDA8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x251B000
	007 Move W8, [X22+1095]
	008 Move W21, W2
	009 Move W19, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x2241000
	016 Move X0, [X0+2192]
	017 Call 0x1C17CF4
	018 Move X0, 0x2241000
	019 Move X0, [X0+2200]
	020 Call 0x1C17CF4
	021 Move X0, 0x2241000
	022 Move X0, [X0+2208]
	023 Call 0x1C17CF4
	024 Move X0, 0x2241000
	025 Move X0, [X0+2216]
	026 Call 0x1C17CF4
	027 Move X0, 0x2241000
	028 Move X0, [X0+2224]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+1095], W8
	032 Move [X31+8], X31
	033 Move X0, [X20+16]
	034 Compare X0, 0
	035 JumpIfEqual {88}
	036 Move X8, 0x2241000
	037 Move X8, [X8+2208]
	038 Add X2, X31, 8
	039 Move W1, W19
	040 Move X3, [X8]
	041 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {81}
	046 Move TEMP, X21
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {60}
	050 Move X0, [X20+24]
	051 Compare X0, 0
	052 JumpIfEqual {88}
	053 Move W8, [X0+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X8, 0x2241000
	056 Move X8, [X8+2216]
	057 Move X1, [X8]
	058 Call Stack`1<Object>.Pop, X0
	059 Move X21, X0
	060 Move X0, X31
	061 Move X8, 0x2241000
	062 Move X8, [X8+2192]
	063 Move X0, [X8]
	064 Call 0x1C17F10
	065 Move X1, X31
	066 Move X21, X0
	067 Call AreaOfInterestCell..ctor, X0
	068 Move [X31+8], X21
	069 Compare X21, 0
	070 JumpIfEqual {88}
	071 Move [X21+16], W19
	072 Move X0, [X20+16]
	073 Compare X0, 0
	074 JumpIfEqual {88}
	075 Move X8, 0x2241000
	076 Move X8, [X8+2200]
	077 Move W1, W19
	078 Move X2, X21
	079 Move X3, [X8]
	080 Call Dictionary`2<Int32, Object>.Add, X0, X1, X2
	081 Move X0, [X31+8]
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X30, [X31+48]
	087 Return X0
	088 Call 0x1C17F20

Method: System.Void AOI_ReleaseCell(Fusion.Simulation/AreaOfInterestCell cell)

Disassembly:
	0x01EC0024 ADD X0, X0, 0x18
	0x01EC0028 MOV X1, X21
	0x01EC002C MOV X2, X31
	0x01EC0030 BL 0x1E97FAC
	0x01EC0034 CBZ X23, 0x1EC015C
	0x01EC0038 LDP V1, V0, [X24 + 0x30]
	0x01EC003C ADD X21, X23, 0x30
	0x01EC0040 ADD X1, X31, 0x80
	0x01EC0044 MOV X0, X21
	0x01EC0048 MOV X2, X31
	0x01EC004C STR V0, [X26 + 0x1]
	0x01EC0050 STR V1, [X31 + 0x8]
	0x01EC0054 BL 0x1E88F6C
	0x01EC0058 TBNZ X0, 0x0, 0x1EC01BC
	0x01EC005C ADD X8, X31, 0x58
	0x01EC0060 MOV X0, X21
	0x01EC0064 MOV X1, X31
	0x01EC0068 ADD X22, X24, 0x30
	0x01EC006C BL 0x1E889A8
	0x01EC0070 LDUR V0, [X31 + 0x58]
	0x01EC0074 LDUR V1, [X31 + 0x68]
	0x01EC0078 LDR X8, [X31 + 0x78]
	0x01EC007C ADD X1, X31, 0x30
	0x01EC0080 MOV X2, X31
	0x01EC0084 STP V0, V1, [X26 + 0x80]
	0x01EC0088 STR X8, [X26 + 0xA0]
	0x01EC008C LDP V1, V0, [X22]
	0x01EC0090 ADD X8, X31, 0x100
	0x01EC0094 ORR X0, X8, 0xF
	0x01EC0098 STP V1, V0, [X31 + 0x30]
	0x01EC009C BL 0x1E88C64
	0x01EC00A0 ADD X0, X31, 0x100
	0x01EC00A4 ADD X1, X31, 0xC
	0x01EC00A8 MOV X2, X31
	0x01EC00AC BL 0x1E8911C
	0x01EC00B0 TBZ X0, 0x0, 0x1EC00DC
	0x01EC00B4 AND X23, X20, 0x0
	0x01EC00B8 LDR W1, [X31 + 0xC]
	0x01EC00BC MOV X0, X19
	0x01EC00C0 MOV X2, X23
	0x01EC00C4 BL 0x1EBFEB8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x251A000
	006 Move W8, [X21+1096]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x2240000
	014 Move X0, [X0+2264]
	015 Call 0x1C17CF4
	016 Move X0, 0x2240000
	017 Move X0, [X0+2272]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1096], W8
	021 Compare X19, 0
	022 JumpIfEqual {57}
	023 Move X0, X19
	024 Move X1, X31
	025 Call AreaOfInterestCell.get_Empty, X0
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {52}
	030 Move W1, [X19+16]
	031 Move [X19+16], W31
	032 Move X0, [X20+16]
	033 Compare X0, 0
	034 JumpIfEqual {57}
	035 Move X8, 0x2240000
	036 Move X8, [X8+2264]
	037 Move X2, [X8]
	038 Call Dictionary`2<Int32, Object>.Remove, X0, X1
	039 Move X0, [X20+24]
	040 Compare X0, 0
	041 JumpIfEqual {57}
	042 Move X8, 0x2240000
	043 Move X8, [X8+2272]
	044 Move X1, X19
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X2, [X8]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call Stack`1<Object>.Push, X0, X1
	051 Return 
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Return 
	057 Call 0x1C17F20

Method: System.Void AOI_RemoveConnection(Fusion.SimulationConnection sc)

Disassembly:
	0x01EC00C8 ADD X0, X31, 0x100
	0x01EC00CC ADD X1, X31, 0xC
	0x01EC00D0 MOV X2, X31
	0x01EC00D4 BL 0x1E8911C
	0x01EC00D8 TBNZ X0, 0x0, 0x1EC00B8
	0x01EC00DC ADD X8, X31, 0x58
	0x01EC00E0 MOV X0, X22
	0x01EC00E4 MOV X1, X31
	0x01EC00E8 BL 0x1E889A8
	0x01EC00EC LDUR V0, [X31 + 0x58]
	0x01EC00F0 LDUR V1, [X31 + 0x68]
	0x01EC00F4 LDR X8, [X31 + 0x78]
	0x01EC00F8 ADD X1, X31, 0x10
	0x01EC00FC MOV X2, X31
	0x01EC0100 STP V0, V1, [X26 + 0x50]
	0x01EC0104 STR X8, [X26 + 0x70]
	0x01EC0108 LDP V1, V0, [X21]
	0x01EC010C ADD X8, X31, 0xD0
	0x01EC0110 ORR X0, X8, 0xF
	0x01EC0114 STP V1, V0, [X31 + 0x10]
	0x01EC0118 BL 0x1E88C64
	0x01EC011C ADD X0, X31, 0xD0
	0x01EC0120 ADD X1, X31, 0x8
	0x01EC0124 MOV X2, X31
	0x01EC0128 BL 0x1E8911C
	0x01EC012C TBZ X0, 0x0, 0x1EC01BC
	0x01EC0130 AND X20, X20, 0x0
	0x01EC0134 LDR W1, [X31 + 0x8]
	0x01EC0138 MOV X0, X19
	0x01EC013C MOV X2, X20
	0x01EC0140 BL 0x1EC01F0
	0x01EC0144 ADD X0, X31, 0xD0
	0x01EC0148 ADD X1, X31, 0x8
	0x01EC014C MOV X2, X31
	0x01EC0150 BL 0x1E8911C
	0x01EC0154 TBNZ X0, 0x0, 0x1EC0134
	0x01EC0158 B 0x1EC01BC
	0x01EC015C ADD X0, X24, 0x30
	0x01EC0160 ADD X8, X31, 0x58
	0x01EC0164 MOV X1, X31
	0x01EC0168 BL 0x1E889A8
	0x01EC016C LDUR V0, [X31 + 0x58]
	0x01EC0170 LDUR V1, [X31 + 0x68]
	0x01EC0174 LDR X8, [X31 + 0x78]
	0x01EC0178 ADD X0, X31, 0xA0
	0x01EC017C ADD X1, X31, 0x4
	0x01EC0180 MOV X2, X31
	0x01EC0184 STP V0, V1, [X26 + 0x20]
	0x01EC0188 STR X8, [X26 + 0x40]
	0x01EC018C BL 0x1E8911C
	0x01EC0190 TBZ X0, 0x0, 0x1EC01BC
	0x01EC0194 AND X20, X20, 0x0
	0x01EC0198 LDR W1, [X31 + 0x4]
	0x01EC019C MOV X0, X19
	0x01EC01A0 MOV X2, X20
	0x01EC01A4 BL 0x1EC01F0
	0x01EC01A8 ADD X0, X31, 0xA0
	0x01EC01AC ADD X1, X31, 0x4
	0x01EC01B0 MOV X2, X31
	0x01EC01B4 BL 0x1E8911C
	0x01EC01B8 TBNZ X0, 0x0, 0x1EC0198
	0x01EC01BC LDR X8, [X25 + 0x28]
	0x01EC01C0 LDR X9, [X31 + 0x128]
	0x01EC01C4 CMP X8, X9
	0x01EC01C8 B.NE 0x1EC01EC
	0x01EC01CC LDP X20, X19, [X31 + 0x170]
	0x01EC01D0 LDP X22, X21, [X31 + 0x160]
	0x01EC01D4 LDP X24, X23, [X31 + 0x150]
	0x01EC01D8 LDP X26, X25, [X31 + 0x140]
	0x01EC01DC LDP X29, X30, [X31 + 0x130]
	0x01EC01E0 ADD X31, X31, 0x180
	0x01EC01E4 RET
	0x01EC01E8 BL 0x1C16F20
	0x01EC01EC BL 0x3EB1B20
	0x01EC01F0 STR X30, [X31 - 0x30]!
	0x01EC01F4 STP X22, X21, [X31 + 0x10]
	0x01EC01F8 STP X20, X19, [X31 + 0x20]
	0x01EC01FC ADRP X22, 0x2519000
	0x01EC0200 LDRB W8, [X22 + 0x4B5]
	0x01EC0204 MOV X19, X2
	0x01EC0208 MOV W21, W1
	0x01EC020C MOV X20, X0
	0x01EC0210 CBNZ W8, 0x1EC0228
	0x01EC0214 ADRP X0, 0x223F000
	0x01EC0218 LDR X0, [X0 + 0x8D0]
	0x01EC021C BL 0x1C16CF4
	0x01EC0220 MOVZ W8, 0x1
	0x01EC0224 STRB W8, [X22 + 0x4B5]
	0x01EC0228 STR X31, [X31 + 0x8]
	0x01EC022C LDR X0, [X20 + 0xB0]
	0x01EC0230 CBZ X0, 0x1EC0274
	0x01EC0234 ADRP X8, 0x223F000
	0x01EC0238 LDR X8, [X8 + 0x8D0]
	0x01EC023C ADD X2, X31, 0x8
	0x01EC0240 MOV W1, W21
	0x01EC0244 LDR X3, [X8]
	0x01EC0248 BL 0x2A150AC
	0x01EC024C LDR X8, [X31 + 0x8]
	0x01EC0250 ANDS W31, W0, 0x1
	0x01EC0254 AND X2, X19, 0x0
	0x01EC0258 MOV X0, X20
	0x01EC025C CSEL X1, X8, X31, NE
	0x01EC0260 BL 0x1EBF948
	0x01EC0264 LDP X20, X19, [X31 + 0x20]
	0x01EC0268 LDP X22, X21, [X31 + 0x10]
	0x01EC026C LDR X30, [X31], #0x30
	0x01EC0270 RET
	0x01EC0274 BL 0x1C16F20
	0x01EC0278 STR X30, [X31 - 0x30]!
	0x01EC027C STP X22, X21, [X31 + 0x10]
	0x01EC0280 STP X20, X19, [X31 + 0x20]
	0x01EC0284 ADRP X22, 0x2519000
	0x01EC0288 LDRB W8, [X22 + 0x4A2]
	0x01EC028C MOV X19, X2
	0x01EC0290 MOV X20, X1
	0x01EC0294 MOV X21, X0
	0x01EC0298 TBNZ X8, 0x0, 0x1EC02B0
	0x01EC029C ADRP X0, 0x223F000
	0x01EC02A0 LDR X0, [X0 + 0x920]
	0x01EC02A4 BL 0x1C16CF4
	0x01EC02A8 MOVZ W8, 0x1
	0x01EC02AC STRB W8, [X22 + 0x4A2]
	0x01EC02B0 STR X31, [X19]
	0x01EC02B4 LDR X0, [X21 + 0x150]
	0x01EC02B8 CBZ X0, 0x1EC02E0
	0x01EC02BC ADRP X8, 0x223F000
	0x01EC02C0 LDR X8, [X8 + 0x920]
	0x01EC02C4 AND X1, X20, 0x0
	0x01EC02C8 MOV X2, X19
	0x01EC02CC LDP X20, X19, [X31 + 0x20]
	0x01EC02D0 LDR X3, [X8]
	0x01EC02D4 LDP X22, X21, [X31 + 0x10]
	0x01EC02D8 LDR X30, [X31], #0x30
	0x01EC02DC B 0x2A6903C
	0x01EC02E0 BL 0x1C16F20
	0x01EC02E4 STP X30, X19, [X31 - 0x10]!
	0x01EC02E8 MOV X19, X8
	0x01EC02EC BL 0x1EC0308
	0x01EC02F0 LDP V0, V1, [X0]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X21, 0x251A000
	009 Move W8, [X21+1097]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x2240000
	017 Move X0, [X0+2280]
	018 Call 0x1C17CF4
	019 Move X0, 0x223B000
	020 Move X0, [X0+2096]
	021 Call 0x1C17CF4
	022 Move X0, 0x223B000
	023 Move X0, [X0+2104]
	024 Call 0x1C17CF4
	025 Move X0, 0x223B000
	026 Move X0, [X0+2112]
	027 Call 0x1C17CF4
	028 Move X0, 0x223B000
	029 Move X0, [X0+1656]
	030 Call 0x1C17CF4
	031 Move X0, 0x223B000
	032 Move X0, [X0+2120]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+1097], W8
	036 Move [X31+48], X31
	037 Move [X31+56], X31
	038 Move [X31+32], X31
	039 Move [X31+40], X31
	040 Compare X20, 0
	041 JumpIfEqual {130}
	042 Move X0, X20
	043 Move X1, X31
	044 Call SimulationConnection.get_ConnectionIndex, X0
	045 Move X8, [X19+32]
	046 Compare X8, 0
	047 JumpIfEqual {130}
	048 Move X9, 0x2240000
	049 Move X9, [X9+2280]
	050 Move W20, W0
	051 Add X2, X31, 56
	052 Move X0, X8
	053 Move X3, [X9]
	054 Move W1, W20
	055 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {121}
	060 Move X0, [X31+56]
	061 Compare X0, 0
	062 JumpIfEqual {130}
	063 Move X8, 0x223B000
	064 Move X8, [X8+2120]
	065 Move X1, [X8]
	066 Add X8, X31, 8
	067 Call HashSet`1<Int32>.GetEnumerator, X0
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 Move X8, [X31+24]
	070 Move X23, 0x223B000
	071 Add W9, W20, 63
	072 Move [X31+2], V0
	073 Move [X31+48], X8
	074 Move X23, [X23+2104]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move W10, 1
	077 NotImplemented "Instruction CSEL not yet implemented."
	078 NotImplemented "Instruction LSLV not yet implemented."
	079 NotImplemented "Instruction SBFM not yet implemented."
	080 NotImplemented "Instruction ORN not yet implemented."
	081 Move X1, [X23]
	082 Add X0, X31, 32
	083 Call Enumerator<Int32>.MoveNext, X0
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {109}
	088 Move W1, [X31+48]
	089 Move X0, X19
	090 Move W2, W31
	091 Call Simulation.AOI_GetCell, X0, X1, X2
	092 Move X20, X0
	093 Compare X0, 0
	094 JumpIfEqual {129}
	095 Add X8, X20, X21
	096 Move X9, [X8+48]
	097 And X9, X9, X22
	098 Move [X8+48], X9
	099 Move X0, X20
	100 Move X1, X31
	101 Call AreaOfInterestCell.get_Empty, X0
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {81}
	106 Move X0, X19
	107 Move X1, X20
	108 Call Simulation.AOI_ReleaseCell, X0, X1
	109 Move X8, 0x223B000
	110 Move X8, [X8+2096]
	111 Add X0, X31, 32
	112 Move X1, [X8]
	113 Call Enumerator<Int32>.Dispose, X0
	114 Move X0, [X31+56]
	115 Compare X0, 0
	116 JumpIfEqual {130}
	117 Move X8, 0x223B000
	118 Move X8, [X8+1656]
	119 Move X1, [X8]
	120 Call HashSet`1<Int32>.Clear, X0
	121 Move X20, [X31+96]
	122 Move X19, [X31+104]
	123 Move X22, [X31+80]
	124 Move X21, [X31+88]
	125 Move X30, [X31+64]
	126 Move X23, [X31+72]
	127 Add X31, X31, 112
	128 Return 
	129 Call 0x1C17F20
	130 Call 0x1C17F20
	131 Move X19, X0
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X0, X19
	134 Call 0x3EB2AD0
	135 Move X20, [X0]
	136 Call 0x3EB2AE0
	137 Move X8, 0x223B000
	138 Move X8, [X8+2096]
	139 Add X0, X31, 32
	140 Move X1, [X8]
	141 Call Enumerator<Int32>.Dispose, X0
	142 Compare X20, 0
	143 JumpIfEqual {114}
	144 Move X0, X20
	145 Call 0x1C17F18
	146 Move X20, X31
	147 Move X19, X0
	148 Move X8, 0x223B000
	149 Move X8, [X8+2096]
	150 Move X1, [X8]
	151 Add X0, X31, 32
	152 Call Enumerator<Int32>.Dispose, X0
	153 Compare X20, 0
	154 JumpIfNotEqual {157}
	155 Move X0, X19
	156 Call 0x1D2D690
	157 Move X0, X20
	158 Call 0x1C17F18
	159 Call 0x1991590

Method: System.Void AOI_UpdateAreaOfInterest(Fusion.SimulationConnection sc)

Disassembly:
	0x01EC02F4 LDR W8, [X0 + 0x20]
	0x01EC02F8 STP V0, V1, [X19]
	0x01EC02FC STR W8, [X19 + 0x20]
	0x01EC0300 LDP X30, X19, [X31], #0x10
	0x01EC0304 RET
	0x01EC0308 SUB X31, X31, 0x30
	0x01EC030C STP X30, X21, [X31 + 0x10]
	0x01EC0310 STP X20, X19, [X31 + 0x20]
	0x01EC0314 ADRP X21, 0x2519000
	0x01EC0318 ADRP X20, 0x2236000
	0x01EC031C LDRB W8, [X21 + 0x44E]
	0x01EC0320 LDR X20, [X20 + 0x398]
	0x01EC0324 MOV X19, X0
	0x01EC0328 TBNZ X8, 0x0, 0x1EC034C
	0x01EC032C ADRP X0, 0x2236000
	0x01EC0330 LDR X0, [X0 + 0x398]
	0x01EC0334 BL 0x1C16CF4
	0x01EC0338 ADRP X0, 0x2238000
	0x01EC033C LDR X0, [X0 + 0x28]
	0x01EC0340 BL 0x1C16CF4
	0x01EC0344 MOVZ W8, 0x1
	0x01EC0348 STRB W8, [X21 + 0x44E]
	0x01EC034C LDR X0, [X20]
	0x01EC0350 STR X31, [X31 + 0x8]
	0x01EC0354 ADRP X20, 0x2238000
	0x01EC0358 LDR W8, [X0 + 0xE0]
	0x01EC035C LDR X20, [X20 + 0x28]
	0x01EC0360 CBNZ W8, 0x1EC0368
	0x01EC0364 BL 0x1C16DFC
	0x01EC0368 MOV X0, X31
	0x01EC036C BL 0x1E92E48
	0x01EC0370 LDR X3, [X20]
	0x01EC0374 AND X1, X0, 0x0
	0x01EC0378 ADD X2, X31, 0x8
	0x01EC037C MOV X0, X19
	0x01EC0380 BL 0x2255240
	0x01EC0384 TBZ X0, 0x0, 0x1EC039C
	0x01EC0388 LDR X0, [X31 + 0x8]
	0x01EC038C LDP X20, X19, [X31 + 0x20]
	0x01EC0390 LDP X30, X21, [X31 + 0x10]
	0x01EC0394 ADD X31, X31, 0x30
	0x01EC0398 RET
	0x01EC039C ADRP X0, 0x2233000
	0x01EC03A0 LDR X0, [X0 + 0x5B0]
	0x01EC03A4 BL 0x1C16D08
	0x01EC03A8 BL 0x1C16F10
	0x01EC03AC MOV X19, X0
	0x01EC03B0 ADRP X0, 0x223F000
	0x01EC03B4 LDR X0, [X0 + 0x928]
	0x01EC03B8 BL 0x1C16D08
	0x01EC03BC MOV X1, X0
	0x01EC03C0 MOV X0, X19
	0x01EC03C4 MOV X2, X31
	0x01EC03C8 BL 0x337DF1C
	0x01EC03CC ADRP X0, 0x223F000
	0x01EC03D0 LDR X0, [X0 + 0x930]
	0x01EC03D4 BL 0x1C16D08
	0x01EC03D8 MOV X1, X0
	0x01EC03DC MOV X0, X19
	0x01EC03E0 BL 0x1C16DEC
	0x01EC03E4 LDR X8, [X0 + 0x28]
	0x01EC03E8 ADD X8, X8, 0x1
	0x01EC03EC STR X8, [X0 + 0x28]
	0x01EC03F0 RET
	0x01EC03F4 LDR X0, [X0 + 0x28]
	0x01EC03F8 RET
	0x01EC03FC SUB X31, X31, 0x30
	0x01EC0400 STP X30, X21, [X31 + 0x10]
	0x01EC0404 STP X20, X19, [X31 + 0x20]
	0x01EC0408 ADRP X21, 0x2519000
	0x01EC040C ADRP X20, 0x2236000
	0x01EC0410 LDRB W8, [X21 + 0x44F]
	0x01EC0414 LDR X20, [X20 + 0x398]
	0x01EC0418 MOV X19, X0
	0x01EC041C TBNZ X8, 0x0, 0x1EC0440
	0x01EC0420 ADRP X0, 0x2236000
	0x01EC0424 LDR X0, [X0 + 0x398]
	0x01EC0428 BL 0x1C16CF4
	0x01EC042C ADRP X0, 0x2238000
	0x01EC0430 LDR X0, [X0 + 0x28]
	0x01EC0434 BL 0x1C16CF4
	0x01EC0438 MOVZ W8, 0x1
	0x01EC043C STRB W8, [X21 + 0x44F]
	0x01EC0440 LDR X0, [X20]
	0x01EC0444 STR X31, [X31 + 0x8]
	0x01EC0448 ADRP X20, 0x2238000
	0x01EC044C LDR W8, [X0 + 0xE0]
	0x01EC0450 LDR X20, [X20 + 0x28]
	0x01EC0454 CBNZ W8, 0x1EC045C
	0x01EC0458 BL 0x1C16DFC
	0x01EC045C MOV X0, X31
	0x01EC0460 BL 0x1E92E48
	0x01EC0464 LDR X3, [X20]
	0x01EC0468 AND X1, X0, 0x0
	0x01EC046C ADD X2, X31, 0x8
	0x01EC0470 MOV X0, X19
	0x01EC0474 BL 0x2255240
	0x01EC0478 LDP X20, X19, [X31 + 0x20]
	0x01EC047C LDP X30, X21, [X31 + 0x10]
	0x01EC0480 AND W0, W0, 0x1
	0x01EC0484 ADD X31, X31, 0x30
	0x01EC0488 RET
	0x01EC048C SUB X31, X31, 0x50
	0x01EC0490 STP X30, X21, [X31 + 0x30]
	0x01EC0494 STP X20, X19, [X31 + 0x40]
	0x01EC0498 MRS X21, 0xC000
	0x01EC049C LDR X8, [X21 + 0x28]
	0x01EC04A0 MOVI V0.2D, 0x0
	0x01EC04A4 MOV X19, X0
	0x01EC04A8 STR X8, [X31 + 0x28]
	0x01EC04AC STR W31, [X31 + 0x20]
	0x01EC04B0 STP V0, V0, [X31]
	0x01EC04B4 BL 0x1EBDF30
	0x01EC04B8 MOV W20, W0
	0x01EC04BC MOV X0, X19
	0x01EC04C0 BL 0x1EC0308
	0x01EC04C4 LDP V0, V1, [X0]
	0x01EC04C8 LDR W8, [X0 + 0x20]
	0x01EC04CC ADD X0, X31, 0x0
	0x01EC04D0 MOV X1, X31
	0x01EC04D4 STP V0, V1, [X31]
	0x01EC04D8 STR W8, [X31 + 0x20]
	0x01EC04DC TBZ X20, 0x0, 0x1EC04E8
	0x01EC04E0 BL 0x1E918E8
	0x01EC04E4 B 0x1EC04EC
	0x01EC04E8 BL 0x1E91938
	0x01EC04EC LDR X8, [X21 + 0x28]
	0x01EC04F0 LDR X9, [X31 + 0x28]
	0x01EC04F4 CMP X8, X9
	0x01EC04F8 B.NE 0x1EC050C
	0x01EC04FC LDP X20, X19, [X31 + 0x40]
	0x01EC0500 LDP X30, X21, [X31 + 0x30]
	0x01EC0504 ADD X31, X31, 0x50
	0x01EC0508 RET
	0x01EC050C BL 0x3EB1B20
	0x01EC0510 STR X30, [X31 - 0x10]!
	0x01EC0514 BL 0x1EC0308
	0x01EC0518 LDR W0, [X0]
	0x01EC051C LDR X30, [X31], #0x10
	0x01EC0520 RET
	0x01EC0524 SUB X31, X31, 0x40
	0x01EC0528 STP X30, X19, [X31 + 0x30]
	0x01EC052C MRS X19, 0xC000
	0x01EC0530 LDR X8, [X19 + 0x28]
	0x01EC0534 MOVI V0.2D, 0x0
	0x01EC0538 STR X8, [X31 + 0x28]
	0x01EC053C STR W31, [X31 + 0x20]
	0x01EC0540 STP V0, V0, [X31]
	0x01EC0544 BL 0x1EC0308
	0x01EC0548 LDP V0, V1, [X0]
	0x01EC054C LDR W8, [X0 + 0x20]
	0x01EC0550 ADD X0, X31, 0x0
	0x01EC0554 MOV X1, X31
	0x01EC0558 STP V0, V1, [X31]
	0x01EC055C STR W8, [X31 + 0x20]
	0x01EC0560 BL 0x1E918F8
	0x01EC0564 LDR X8, [X19 + 0x28]
	0x01EC0568 LDR X9, [X31 + 0x28]
	0x01EC056C CMP X8, X9
	0x01EC0570 B.NE 0x1EC0580
	0x01EC0574 LDP X30, X19, [X31 + 0x30]
	0x01EC0578 ADD X31, X31, 0x40
	0x01EC057C RET
	0x01EC0580 BL 0x3EB1B20
	0x01EC0584 SUB X31, X31, 0x40
	0x01EC0588 STP X30, X19, [X31 + 0x30]
	0x01EC058C MRS X19, 0xC000
	0x01EC0590 LDR X8, [X19 + 0x28]
	0x01EC0594 MOVI V0.2D, 0x0
	0x01EC0598 STR X8, [X31 + 0x28]
	0x01EC059C STR W31, [X31 + 0x20]
	0x01EC05A0 STP V0, V0, [X31]
	0x01EC05A4 BL 0x1EC0308
	0x01EC05A8 LDP V0, V1, [X0]
	0x01EC05AC LDR W8, [X0 + 0x20]
	0x01EC05B0 ADD X0, X31, 0x0
	0x01EC05B4 MOV X1, X31
	0x01EC05B8 STP V0, V1, [X31]
	0x01EC05BC STR W8, [X31 + 0x20]
	0x01EC05C0 BL 0x1E918F8
	0x01EC05C4 LDR X8, [X19 + 0x28]
	0x01EC05C8 LDR X9, [X31 + 0x28]
	0x01EC05CC CMP X8, X9
	0x01EC05D0 B.NE 0x1EC05E4
	0x01EC05D4 LDP X30, X19, [X31 + 0x30]
	0x00000000 INVALID
	0x01EC05DC ADD X31, X31, 0x40
	0x01EC05E0 RET
	0x01EC05E4 BL 0x3EB1B20
	0x01EC05E8 STR X30, [X31 - 0x20]!
	0x01EC05EC STP X20, X19, [X31 + 0x10]
	0x01EC05F0 MOV X19, X0
	0x01EC05F4 BL 0x1EBDF30
	0x01EC05F8 MOV W20, W0
	0x01EC05FC MOV X0, X19
	0x01EC0600 BL 0x1EC0308
	0x01EC0604 ADD X8, X0, 0x4
	0x01EC0608 ADD X9, X0, 0xC
	0x01EC060C ANDS W31, W20, 0x1
	0x01EC0610 CSEL X8, X9, X8, NE
	0x01EC0614 LDR W0, [X8]
	0x01EC0618 LDP X20, X19, [X31 + 0x10]
	0x01EC061C LDR X30, [X31], #0x20
	0x01EC0620 RET
	0x01EC0624 SUB X31, X31, 0x50
	0x01EC0628 STP X30, X21, [X31 + 0x30]
	0x01EC062C STP X20, X19, [X31 + 0x40]
	0x01EC0630 MRS X21, 0xC000
	0x01EC0634 LDR X8, [X21 + 0x28]
	0x01EC0638 MOVI V0.2D, 0x0
	0x01EC063C MOV X19, X0
	0x01EC0640 STR X8, [X31 + 0x28]
	0x01EC0644 STR W31, [X31 + 0x20]
	0x01EC0648 STP V0, V0, [X31]
	0x01EC064C BL 0x1EBDF30
	0x01EC0650 MOV W20, W0
	0x01EC0654 MOV X0, X19
	0x01EC0658 BL 0x1EC0308
	0x01EC065C LDP V0, V1, [X0]
	0x01EC0660 LDR W8, [X0 + 0x20]
	0x01EC0664 ADD X0, X31, 0x0
	0x01EC0668 MOV X1, X31
	0x01EC066C STP V0, V1, [X31]
	0x01EC0670 STR W8, [X31 + 0x20]
	0x01EC0674 TBZ X20, 0x0, 0x1EC0680
	0x01EC0678 BL 0x1E918C8
	0x01EC067C B 0x1EC0684
	0x01EC0680 BL 0x1E91918
	0x01EC0684 LDR X8, [X21 + 0x28]
	0x01EC0688 LDR X9, [X31 + 0x28]
	0x01EC068C CMP X8, X9
	0x01EC0690 B.NE 0x1EC06A4
	0x01EC0694 LDP X20, X19, [X31 + 0x40]
	0x01EC0698 LDP X30, X21, [X31 + 0x30]
	0x01EC069C ADD X31, X31, 0x50
	0x01EC06A0 RET
	0x01EC06A4 BL 0x3EB1B20
	0x01EC06A8 SUB X31, X31, 0x50
	0x01EC06AC STP X30, X21, [X31 + 0x30]
	0x01EC06B0 STP X20, X19, [X31 + 0x40]
	0x01EC06B4 MRS X21, 0xC000
	0x01EC06B8 LDR X8, [X21 + 0x28]
	0x01EC06BC MOVI V0.2D, 0x0
	0x01EC06C0 MOV X19, X0
	0x01EC06C4 STR X8, [X31 + 0x28]
	0x01EC06C8 STR W31, [X31 + 0x20]
	0x01EC06CC STP V0, V0, [X31]
	0x01EC06D0 BL 0x1EBDF30
	0x01EC06D4 MOV W20, W0
	0x01EC06D8 MOV X0, X19
	0x01EC06DC BL 0x1EC0308
	0x01EC06E0 LDP V0, V1, [X0]
	0x01EC06E4 LDR W8, [X0 + 0x20]
	0x01EC06E8 ADD X0, X31, 0x0
	0x01EC06EC MOV X1, X31
	0x01EC06F0 STP V0, V1, [X31]
	0x01EC06F4 STR W8, [X31 + 0x20]
	0x01EC06F8 TBZ X20, 0x0, 0x1EC0704
	0x01EC06FC BL 0x1E918A8
	0x01EC0700 B 0x1EC0708
	0x01EC0704 BL 0x1E918F8
	0x01EC0708 LDR X8, [X21 + 0x28]
	0x01EC070C LDR X9, [X31 + 0x28]
	0x01EC0710 CMP X8, X9
	0x01EC0714 B.NE 0x1EC072C
	0x01EC0718 LDP X20, X19, [X31 + 0x40]
	0x01EC071C LDP X30, X21, [X31 + 0x30]
	0x00000000 INVALID
	0x01EC0724 ADD X31, X31, 0x50
	0x01EC0728 RET
	0x01EC072C BL 0x3EB1B20
	0x01EC0730 LDRB W0, [X0 + 0x30]
	0x01EC0734 RET
	0x01EC0738 LDR V0, [X0 + 0x7C]
	0x01EC073C RET
	0x01EC0740 LDRB W0, [X0 + 0xDA]
	0x01EC0744 RET
	0x01EC0748 LDRB W0, [X0 + 0xD8]
	0x01EC074C RET
	0x01EC0750 LDRB W0, [X0 + 0xD9]
	0x01EC0754 RET
	0x01EC0758 LDRB W8, [X0 + 0xDA]
	0x01EC075C CMP W8, 0x0
	0x01EC0760 CSET W0, EQ
	0x01EC0764 RET
	0x01EC0768 LDR W8, [X0 + 0x50]
	0x01EC076C CMP W8, 0x2
	0x01EC0770 CSET W0, EQ
	0x01EC0774 RET
	0x01EC0778 LDR W0, [X0 + 0x48]
	0x01EC077C RET
	0x01EC0780 SUB X31, X31, 0x50
	0x01EC0784 STR X30, [X31 + 0x30]
	0x01EC0788 STP X20, X19, [X31 + 0x40]
	0x01EC078C MRS X20, 0xC000
	0x01EC0790 LDR X8, [X20 + 0x28]
	0x01EC0794 MOVI V0.2D, 0x0
	0x01EC0798 STR X8, [X31 + 0x28]
	0x01EC079C LDR W19, [X0 + 0x48]
	0x01EC07A0 STR W31, [X31 + 0x20]
	0x01EC07A4 STP V0, V0, [X31]
	0x01EC07A8 BL 0x1EC0308
	0x01EC07AC LDP V0, V1, [X0]
	0x01EC07B0 LDR W8, [X0 + 0x20]
	0x01EC07B4 ADD X0, X31, 0x0
	0x01EC07B8 MOV X1, X31
	0x01EC07BC STP V0, V1, [X31]
	0x01EC07C0 STR W8, [X31 + 0x20]
	0x01EC07C4 BL 0x1E918F8
	0x01EC07C8 LDR X8, [X20 + 0x28]
	0x01EC07CC LDR X9, [X31 + 0x28]
	0x01EC07D0 CMP X8, X9
	0x01EC07D4 B.NE 0x1EC07F0
	0x01EC07D8 SCVTF D1, W19
	0x01EC07DC LDP X20, X19, [X31 + 0x40]
	0x01EC07E0 LDR X30, [X31 + 0x30]
	0x01EC07E4 FMUL D0, D0, D1
	0x01EC07E8 ADD X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X21, 0x251A000
	015 Move W8, [X21+1098]
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {60}
	022 Move X0, 0x2240000
	023 Move X0, [X0+2288]
	024 Call 0x1C17CF4
	025 Move X0, 0x2240000
	026 Move X0, [X0+2280]
	027 Call 0x1C17CF4
	028 Move X0, 0x223B000
	029 Move X0, [X0+2096]
	030 Call 0x1C17CF4
	031 Move X0, 0x223B000
	032 Move X0, [X0+2104]
	033 Call 0x1C17CF4
	034 Move X0, 0x223B000
	035 Move X0, [X0+2112]
	036 Call 0x1C17CF4
	037 Move X0, 0x223B000
	038 Move X0, [X0+1656]
	039 Call 0x1C17CF4
	040 Move X0, 0x2235000
	041 Move X0, [X0+3576]
	042 Call 0x1C17CF4
	043 Move X0, 0x223B000
	044 Move X0, [X0+2120]
	045 Call 0x1C17CF4
	046 Move X0, 0x223B000
	047 Move X0, [X0+1664]
	048 Call 0x1C17CF4
	049 Move X0, 0x223B000
	050 Move X0, [X0+1672]
	051 Call 0x1C17CF4
	052 Move X0, 0x223B000
	053 Move X0, [X0+2128]
	054 Call 0x1C17CF4
	055 Move X0, 0x2235000
	056 Move X0, [X0+3592]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X21+1098], W8
	060 Move [X31+48], X31
	061 Move [X31+56], X31
	062 Move [X31+32], X31
	063 Move [X31+40], X31
	064 Compare X19, 0
	065 JumpIfEqual {281}
	066 Move X8, [X19+48]
	067 Compare X8, 0
	068 JumpIfEqual {281}
	069 Move W9, [X19+44]
	070 Compare W9, 0
	071 JumpIfNotEqual {75}
	072 Move W8, [X8+32]
	073 Compare W8, 0
	074 JumpIfEqual {281}
	075 Move X0, X19
	076 Move X1, X31
	077 Call SimulationConnection.get_ConnectionIndex, X0
	078 Move X8, [X20+32]
	079 Compare X8, 0
	080 JumpIfEqual {298}
	081 Move X9, 0x2240000
	082 Move X9, [X9+2280]
	083 Move W22, W0
	084 Add X2, X31, 56
	085 Move X0, X8
	086 Move X3, [X9]
	087 Move W1, W22
	088 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {113}
	093 Move X8, 0x2235000
	094 Move X21, [X20+32]
	095 Move X8, [X8+3592]
	096 Move X0, [X8]
	097 Call 0x1C17F10
	098 Move X8, 0x223B000
	099 Move X8, [X8+1672]
	100 Move X23, X0
	101 Move X1, [X8]
	102 Call HashSet`1<Int32>..ctor, X0
	103 Move [X31+56], X23
	104 Compare X21, 0
	105 JumpIfEqual {298}
	106 Move X8, 0x2240000
	107 Move X8, [X8+2288]
	108 Move X0, X21
	109 Move W1, W22
	110 Move X2, X23
	111 Move X3, [X8]
	112 Call Dictionary`2<Int32, Object>.Add, X0, X1, X2
	113 Move W8, 1
	114 Move [X19+44], W8
	115 Move X0, [X31+56]
	116 Compare X0, 0
	117 JumpIfEqual {298}
	118 Move X27, 0x223B000
	119 Move X21, [X19+48]
	120 Move X27, [X27+2120]
	121 Add X8, X31, 8
	122 Move X1, [X27]
	123 Call HashSet`1<Int32>.GetEnumerator, X0
	124 NotImplemented "Instruction LDUR not yet implemented."
	125 Move X8, [X31+24]
	126 Move X23, 0x223B000
	127 Move X23, [X23+2104]
	128 Move [X31+2], V0
	129 Move [X31+48], X8
	130 Move X26, 0x2235000
	131 Move X26, [X26+3576]
	132 Add W9, W22, 63
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move W10, 1
	135 NotImplemented "Instruction CSEL not yet implemented."
	136 NotImplemented "Instruction LSLV not yet implemented."
	137 Move W28, W31
	138 NotImplemented "Instruction SBFM not yet implemented."
	139 NotImplemented "Instruction ORN not yet implemented."
	140 Move X1, [X23]
	141 Add X0, X31, 32
	142 Call Enumerator<Int32>.MoveNext, X0
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {194}
	147 Compare X21, 0
	148 JumpIfEqual {295}
	149 Move W22, [X31+48]
	150 Move X2, [X26]
	151 Move X0, X21
	152 Move W1, W22
	153 Call HashSet`1<Int32>.Contains, X0, X1
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfEqual {140}
	158 Move X0, X20
	159 Move W1, W22
	160 Move W2, W31
	161 Call Simulation.AOI_GetCell, X0, X1, X2
	162 Move X22, X0
	163 Move W28, 1
	164 Compare X0, 0
	165 JumpIfEqual {140}
	166 Add X8, X22, X25
	167 Move X9, [X8+48]
	168 And X9, X9, X29
	169 Move [X8+48], X9
	170 Move X8, [X22+32]
	171 Compare X8, 0
	172 JumpIfEqual {182}
	173 Move X28, [X8+128]
	174 Move X0, X8
	175 Move X1, X31
	176 Call NetworkObjectMeta.get_Id, X0
	177 And X2, X0, 0
	178 Move X0, X20
	179 Move X1, X19
	180 Call Simulation.ExitAreaOfInterest, X0, X1, X2
	181 Move X8, X28
	182 Move X0, X22
	183 Move X1, X31
	184 Call AreaOfInterestCell.get_Empty, X0
	185 Move W28, 1
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {140}
	190 Move W28, 1
	191 Move X0, X20
	192 Move X1, X22
	193 Call Simulation.AOI_ReleaseCell, X0, X1
	194 Move X8, 0x223B000
	195 Move X8, [X8+2096]
	196 Add X0, X31, 32
	197 Move X1, [X8]
	198 Call Enumerator<Int32>.Dispose, X0
	199 Move TEMP, X28
	200 And TEMP, TEMP, 1
	201 Compare TEMP, 1
	202 JumpIfNotEqual {205}
	203 Compare X21, 0
	204 JumpIfNotEqual {213}
	205 Move X8, [X31+56]
	206 Compare X8, 0
	207 JumpIfEqual {298}
	208 Compare X21, 0
	209 JumpIfEqual {298}
	210 Move W8, [X8+32]
	211 Move W9, [X21+32]
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Move X1, [X27]
	214 Add X8, X31, 8
	215 Move X0, X21
	216 Call HashSet`1<Int32>.GetEnumerator, X0
	217 NotImplemented "Instruction LDUR not yet implemented."
	218 Move X8, [X31+24]
	219 Move [X31+2], V0
	220 Move [X31+48], X8
	221 Move X1, [X23]
	222 Add X0, X31, 32
	223 Call Enumerator<Int32>.MoveNext, X0
	224 Move TEMP, X0
	225 And TEMP, TEMP, 1
	226 Compare TEMP, 1
	227 JumpIfNotEqual {261}
	228 Move X0, [X31+56]
	229 Compare X0, 0
	230 JumpIfEqual {296}
	231 Move W22, [X31+48]
	232 Move X2, [X26]
	233 Move W1, W22
	234 Call HashSet`1<Int32>.Contains, X0, X1
	235 Move TEMP, X0
	236 And TEMP, TEMP, 1
	237 Compare TEMP, 1
	238 JumpIfEqual {221}
	239 Move W2, 1
	240 Move X0, X20
	241 Move W1, W22
	242 Call Simulation.AOI_GetCell, X0, X1, X2
	243 Compare X0, 0
	244 JumpIfEqual {297}
	245 Add X8, X0, X25
	246 Move X9, [X8+48]
	247 Or X9, X9, X24
	248 Move [X8+48], X9
	249 Move X8, [X0+32]
	250 Compare X8, 0
	251 JumpIfEqual {221}
	252 Move X22, [X8+128]
	253 Move X0, X8
	254 Move X1, X31
	255 Call NetworkObjectMeta.get_Id, X0
	256 And X2, X0, 0
	257 Move X0, X20
	258 Move X1, X19
	259 Call Simulation.EnterAreaOfInterest, X0, X1, X2
	260 Move X8, X22
	261 Move X8, 0x223B000
	262 Move X8, [X8+2096]
	263 Add X0, X31, 32
	264 Move X1, [X8]
	265 Call Enumerator<Int32>.Dispose, X0
	266 Move X0, [X31+56]
	267 Compare X0, 0
	268 JumpIfEqual {298}
	269 Move X8, 0x223B000
	270 Move X8, [X8+1656]
	271 Move X1, [X8]
	272 Call HashSet`1<Int32>.Clear, X0
	273 Move X0, [X31+56]
	274 Compare X0, 0
	275 JumpIfEqual {298}
	276 Move X8, 0x223B000
	277 Move X8, [X8+1664]
	278 Move X1, X21
	279 Move X2, [X8]
	280 Call HashSet`1<Int32>.UnionWith, X0, X1
	281 Move X20, [X31+144]
	282 Move X19, [X31+152]
	283 Move X22, [X31+128]
	284 Move X21, [X31+136]
	285 Move X24, [X31+112]
	286 Move X23, [X31+120]
	287 Move X26, [X31+96]
	288 Move X25, [X31+104]
	289 Move X28, [X31+80]
	290 Move X27, [X31+88]
	291 Move X29, [X31+64]
	292 Move X30, [X31+72]
	293 Add X31, X31, 160
	294 Return 
	295 Call 0x1C17F20
	296 Call 0x1C17F20
	297 Call 0x1C17F20
	298 Call 0x1C17F20
	299 Move [X31], X0
	300 Move W28, 1
	301 Move [X31], X0
	302 Move W28, W31
	303 Move [X31], X0
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Move X0, [X31]
	306 Call 0x3EB2AD0
	307 Move X22, [X0]
	308 Call 0x3EB2AE0
	309 Move X8, 0x223B000
	310 Move X8, [X8+2096]
	311 Add X0, X31, 32
	312 Move X1, [X8]
	313 Call Enumerator<Int32>.Dispose, X0
	314 Compare X22, 0
	315 JumpIfEqual {199}
	316 Move X0, X22
	317 Call 0x1C17F18
	318 Move X22, X31
	319 Move [X31], X0
	320 Move X8, 0x223B000
	321 Move X8, [X8+2096]
	322 Move X1, [X8]
	323 Add X0, X31, 32
	324 Call Enumerator<Int32>.Dispose, X0
	325 Compare X22, 0
	326 JumpIfEqual {352}
	327 Move X0, X22
	328 Call 0x1C17F18
	329 NotImplemented "Instruction CMP not yet implemented."
	330 Call 0x3EB2AD0
	331 Move X19, [X0]
	332 Call 0x3EB2AE0
	333 Move X8, 0x223B000
	334 Move X8, [X8+2096]
	335 Add X0, X31, 32
	336 Move X1, [X8]
	337 Call Enumerator<Int32>.Dispose, X0
	338 Compare X19, 0
	339 JumpIfEqual {266}
	340 Move X0, X19
	341 Call 0x1C17F18
	342 Move [X31], X0
	343 Move X19, X31
	344 Move [X31], X0
	345 Move X8, 0x223B000
	346 Move X8, [X8+2096]
	347 Move X1, [X8]
	348 Add X0, X31, 32
	349 Call Enumerator<Int32>.Dispose, X0
	350 Compare X19, 0
	351 JumpIfNotEqual {354}
	352 Move X0, [X31]
	353 Call 0x1D2D690
	354 Move X0, X19
	355 Call 0x1C17F18
	356 Call 0x1991590

Method: System.Boolean AOI_Query(Fusion.SimulationConnection sc, System.Collections.Generic.List`1<Fusion.NetworkObjectMeta/List> result, System.Boolean clearResult)

Disassembly:
	0x01EC0ADC RET
	0x01EC0AE0 STP X30, X21, [X31 - 0x20]!
	0x01EC0AE4 STP X20, X19, [X31 + 0x10]
	0x01EC0AE8 ADRP X20, 0x2519000
	0x01EC0AEC ADRP X21, 0x223F000
	0x01EC0AF0 LDRB W8, [X20 + 0x456]
	0x01EC0AF4 LDR X21, [X21 + 0x940]
	0x01EC0AF8 MOV X19, X0
	0x01EC0AFC TBNZ X8, 0x0, 0x1EC0B14
	0x01EC0B00 ADRP X0, 0x223F000
	0x01EC0B04 LDR X0, [X0 + 0x940]
	0x01EC0B08 BL 0x1C16CF4
	0x01EC0B0C MOVZ W8, 0x1
	0x01EC0B10 STRB W8, [X20 + 0x456]
	0x01EC0B14 LDR X0, [X21]
	0x01EC0B18 BL 0x1C16F10
	0x01EC0B1C MOVN W1, 0x1
	0x01EC0B20 MOV X2, X31
	0x01EC0B24 MOV X20, X0
	0x01EC0B28 BL 0x1ED71E4
	0x01EC0B2C CBZ X20, 0x1EC0B44
	0x01EC0B30 STR X19, [X20 + 0x28]
	0x01EC0B34 MOV X0, X20
	0x01EC0B38 LDP X20, X19, [X31 + 0x10]
	0x01EC0B3C LDP X30, X21, [X31], #0x20
	0x01EC0B40 RET
	0x01EC0B44 BL 0x1C16F20
	0x01EC0B48 LDR X9, [X0 + 0x128]
	0x01EC0B4C ADD X9, X9, 0x128
	0x01EC0B50 LDR X10, [X9 + 0x10]
	0x01EC0B54 LDR V0, [X9]
	0x01EC0B58 STR X10, [X8 + 0x10]
	0x01EC0B5C STR V0, [X8]
	0x01EC0B60 RET
	0x01EC0B64 LDR X0, [X0 + 0x128]
	0x01EC0B68 MOV X1, X31
	0x01EC0B6C B 0x1EFD51C
	0x01EC0B70 SUB X31, X31, 0xE0
	0x01EC0B74 STP X29, X30, [X31 + 0x80]
	0x01EC0B78 STP X28, X27, [X31 + 0x90]
	0x01EC0B7C STP X26, X25, [X31 + 0xA0]
	0x01EC0B80 STP X24, X23, [X31 + 0xB0]
	0x01EC0B84 STP X22, X21, [X31 + 0xC0]
	0x01EC0B88 STP X20, X19, [X31 + 0xD0]
	0x01EC0B8C STR X1, [X31 + 0x8]
	0x01EC0B90 MRS X8, 0xC000
	0x01EC0B94 ADRP X22, 0x223F000
	0x01EC0B98 LDR X22, [X22 + 0x948]
	0x01EC0B9C STR X8, [X31]
	0x01EC0BA0 LDR X8, [X8 + 0x28]
	0x01EC0BA4 ADRP X21, 0x223F000
	0x01EC0BA8 ADRP X29, 0x223F000
	0x01EC0BAC ADRP X28, 0x223F000
	0x01EC0BB0 ADRP X24, 0x2519000
	0x01EC0BB4 LDR X21, [X21 + 0x950]
	0x01EC0BB8 LDR X29, [X29 + 0x958]
	0x01EC0BBC LDR X28, [X28 + 0x960]
	0x01EC0BC0 STR X8, [X31 + 0x78]
	0x01EC0BC4 ADRP X27, 0x223F000
	0x01EC0BC8 ADRP X26, 0x223F000
	0x01EC0BCC ADRP X23, 0x223F000
	0x01EC0BD0 ADRP X20, 0x223F000
	0x01EC0BD4 ADRP X25, 0x2236000
	0x01EC0BD8 LDRB W8, [X24 + 0x457]
	0x01EC0BDC LDR X27, [X27 + 0x968]
	0x01EC0BE0 LDR X26, [X26 + 0x970]
	0x01EC0BE4 LDR X23, [X23 + 0x978]
	0x01EC0BE8 LDR X20, [X20 + 0x980]
	0x01EC0BEC LDR X25, [X25 + 0xE40]
	0x01EC0BF0 MOV X19, X0
	0x01EC0BF4 TBNZ X8, 0x0, 0x1EC0DC8
	0x01EC0BF8 ADRP X0, 0x223F000
	0x01EC0BFC LDR X0, [X0 + 0x950]
	0x01EC0C00 BL 0x1C16CF4
	0x01EC0C04 ADRP X0, 0x223F000
	0x01EC0C08 LDR X0, [X0 + 0x988]
	0x01EC0C0C BL 0x1C16CF4
	0x01EC0C10 ADRP X0, 0x223F000
	0x01EC0C14 LDR X0, [X0 + 0x990]
	0x01EC0C18 BL 0x1C16CF4
	0x01EC0C1C ADRP X0, 0x223F000
	0x01EC0C20 LDR X0, [X0 + 0x980]
	0x01EC0C24 BL 0x1C16CF4
	0x01EC0C28 ADRP X0, 0x223F000
	0x01EC0C2C LDR X0, [X0 + 0x970]
	0x01EC0C30 BL 0x1C16CF4
	0x01EC0C34 ADRP X0, 0x223F000
	0x01EC0C38 LDR X0, [X0 + 0x998]
	0x01EC0C3C BL 0x1C16CF4
	0x01EC0C40 ADRP X0, 0x223F000
	0x01EC0C44 LDR X0, [X0 + 0x9A0]
	0x01EC0C48 BL 0x1C16CF4
	0x01EC0C4C ADRP X0, 0x223F000
	0x01EC0C50 LDR X0, [X0 + 0x9A8]
	0x01EC0C54 BL 0x1C16CF4
	0x01EC0C58 ADRP X0, 0x223F000
	0x01EC0C5C LDR X0, [X0 + 0x9B0]
	0x01EC0C60 BL 0x1C16CF4
	0x01EC0C64 ADRP X0, 0x223F000
	0x01EC0C68 LDR X0, [X0 + 0x9B8]
	0x01EC0C6C BL 0x1C16CF4
	0x01EC0C70 ADRP X0, 0x223F000
	0x01EC0C74 LDR X0, [X0 + 0x978]
	0x01EC0C78 BL 0x1C16CF4
	0x01EC0C7C ADRP X0, 0x223F000
	0x01EC0C80 LDR X0, [X0 + 0x9C0]
	0x01EC0C84 BL 0x1C16CF4
	0x01EC0C88 ADRP X0, 0x223F000
	0x01EC0C8C LDR X0, [X0 + 0x9C8]
	0x01EC0C90 BL 0x1C16CF4
	0x01EC0C94 ADRP X0, 0x223F000
	0x01EC0C98 LDR X0, [X0 + 0x968]
	0x01EC0C9C BL 0x1C16CF4
	0x01EC0CA0 ADRP X0, 0x223F000
	0x01EC0CA4 LDR X0, [X0 + 0x948]
	0x01EC0CA8 BL 0x1C16CF4
	0x01EC0CAC ADRP X0, 0x223F000
	0x01EC0CB0 LDR X0, [X0 + 0x9D0]
	0x01EC0CB4 BL 0x1C16CF4
	0x01EC0CB8 ADRP X0, 0x223F000
	0x01EC0CBC LDR X0, [X0 + 0x9D8]
	0x01EC0CC0 BL 0x1C16CF4
	0x01EC0CC4 ADRP X0, 0x223F000
	0x01EC0CC8 LDR X0, [X0 + 0x9E0]
	0x01EC0CCC BL 0x1C16CF4
	0x01EC0CD0 ADRP X0, 0x223F000
	0x01EC0CD4 LDR X0, [X0 + 0x9E8]
	0x01EC0CD8 BL 0x1C16CF4
	0x01EC0CDC ADRP X0, 0x223F000
	0x01EC0CE0 LDR X0, [X0 + 0x9F0]
	0x01EC0CE4 BL 0x1C16CF4
	0x01EC0CE8 ADRP X0, 0x223F000
	0x01EC0CEC LDR X0, [X0 + 0x9F8]
	0x01EC0CF0 BL 0x1C16CF4
	0x01EC0CF4 ADRP X0, 0x223F000
	0x01EC0CF8 LDR X0, [X0 + 0xA00]
	0x01EC0CFC BL 0x1C16CF4
	0x01EC0D00 ADRP X0, 0x223F000
	0x01EC0D04 LDR X0, [X0 + 0xA08]
	0x01EC0D08 BL 0x1C16CF4
	0x01EC0D0C ADRP X0, 0x223F000
	0x01EC0D10 LDR X0, [X0 + 0xA10]
	0x01EC0D14 BL 0x1C16CF4
	0x01EC0D18 ADRP X0, 0x2236000
	0x01EC0D1C LDR X0, [X0 + 0x398]
	0x01EC0D20 BL 0x1C16CF4
	0x01EC0D24 ADRP X0, 0x223E000
	0x01EC0D28 LDR X0, [X0 + 0x378]
	0x01EC0D2C BL 0x1C16CF4
	0x01EC0D30 ADRP X0, 0x2236000
	0x01EC0D34 LDR X0, [X0 + 0xE40]
	0x01EC0D38 BL 0x1C16CF4
	0x01EC0D3C ADRP X0, 0x223F000
	0x01EC0D40 LDR X0, [X0 + 0xA18]
	0x01EC0D44 BL 0x1C16CF4
	0x01EC0D48 ADRP X0, 0x223F000
	0x01EC0D4C LDR X0, [X0 + 0xA20]
	0x01EC0D50 BL 0x1C16CF4
	0x01EC0D54 ADRP X0, 0x223F000
	0x01EC0D58 LDR X0, [X0 + 0xA28]
	0x01EC0D5C BL 0x1C16CF4
	0x01EC0D60 ADRP X0, 0x223F000
	0x01EC0D64 LDR X0, [X0 + 0xA30]
	0x01EC0D68 BL 0x1C16CF4
	0x01EC0D6C ADRP X0, 0x223F000
	0x01EC0D70 LDR X0, [X0 + 0xA38]
	0x01EC0D74 BL 0x1C16CF4
	0x01EC0D78 ADRP X0, 0x223F000
	0x01EC0D7C LDR X0, [X0 + 0xA40]
	0x01EC0D80 BL 0x1C16CF4
	0x01EC0D84 ADRP X0, 0x223F000
	0x01EC0D88 LDR X0, [X0 + 0x960]
	0x01EC0D8C BL 0x1C16CF4
	0x01EC0D90 ADRP X0, 0x223F000
	0x01EC0D94 LDR X0, [X0 + 0xA48]
	0x01EC0D98 BL 0x1C16CF4
	0x01EC0D9C ADRP X0, 0x223F000
	0x01EC0DA0 LDR X0, [X0 + 0xA50]
	0x01EC0DA4 BL 0x1C16CF4
	0x01EC0DA8 ADRP X0, 0x223F000
	0x01EC0DAC LDR X0, [X0 + 0x958]
	0x01EC0DB0 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+112], X24
	004 Move [X31+120], X23
	005 Move [X31+128], X22
	006 Move [X31+136], X21
	007 Move [X31+144], X20
	008 Move [X31+152], X19
	009 Move X23, 0x251A000
	010 Move W8, [X23+1099]
	011 Move W22, W3
	012 Move X19, X2
	013 Move X21, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {45}
	019 Move X0, 0x2240000
	020 Move X0, [X0+2280]
	021 Call 0x1C17CF4
	022 Move X0, 0x223B000
	023 Move X0, [X0+2096]
	024 Call 0x1C17CF4
	025 Move X0, 0x223B000
	026 Move X0, [X0+2104]
	027 Call 0x1C17CF4
	028 Move X0, 0x223B000
	029 Move X0, [X0+2112]
	030 Call 0x1C17CF4
	031 Move X0, 0x223B000
	032 Move X0, [X0+2120]
	033 Call 0x1C17CF4
	034 Move X0, 0x2240000
	035 Move X0, [X0+2312]
	036 Call 0x1C17CF4
	037 Move X0, 0x2240000
	038 Move X0, [X0+2320]
	039 Call 0x1C17CF4
	040 Move X0, 0x2240000
	041 Move X0, [X0+2328]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X23+1099], W8
	045 Move [X31+104], X31
	046 Move [X31], X31
	047 Move [X31+8], X31
	048 Move [X31+16], X31
	049 Move TEMP, X22
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {65}
	053 Compare X19, 0
	054 JumpIfEqual {172}
	055 Move W2, [X19+24]
	056 Move W8, [X19+28]
	057 Add W8, W8, 1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move [X19+24], W31
	060 Move [X19+28], W8
	061 Move X0, [X19+16]
	062 Move W1, W31
	063 Move X3, X31
	064 Call Array.Clear, X0, X1, X2
	065 Compare X19, 0
	066 JumpIfEqual {172}
	067 Compare X21, 0
	068 JumpIfEqual {172}
	069 Move W23, [X19+24]
	070 Move X22, [X20+32]
	071 Move X0, X21
	072 Move X1, X31
	073 Call SimulationConnection.get_ConnectionIndex, X0
	074 Compare X22, 0
	075 JumpIfEqual {172}
	076 Move X8, 0x2240000
	077 Move X8, [X8+2280]
	078 Move W1, W0
	079 Add X2, X31, 104
	080 Move X0, X22
	081 Move X3, [X8]
	082 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {158}
	087 Move X0, [X31+104]
	088 Compare X0, 0
	089 JumpIfEqual {172}
	090 Move X8, 0x223B000
	091 Move X8, [X8+2120]
	092 Move X1, [X8]
	093 Add X8, X31, 64
	094 Call HashSet`1<Int32>.GetEnumerator, X0
	095 Move V0, [X31+4]
	096 Move X8, [X31+80]
	097 Move X21, 0x223B000
	098 Move X22, 0x2240000
	099 Move X21, [X21+2104]
	100 Move X22, [X22+2312]
	101 Move [X31], V0
	102 Move [X31+16], X8
	103 Move W24, 24
	104 Move X1, [X21]
	105 Add X0, X31, 0
	106 Call Enumerator<Int32>.MoveNext, X0
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {153}
	111 Move W1, [X31+16]
	112 Move X0, X20
	113 Move W2, W31
	114 Call Simulation.AOI_GetCell, X0, X1, X2
	115 Move X8, X0
	116 Compare X0, 0
	117 JumpIfEqual {170}
	118 Add X8, X8, 24
	119 Move W9, [X8]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X9, [X8+16]
	122 Move V0, [X8]
	123 Move X10, [X22]
	124 Move [X31+48], X9
	125 Move [X31+2], V0
	126 Move W9, [X19+28]
	127 Move X8, [X19+16]
	128 Add W9, W9, 1
	129 Move [X19+28], W9
	130 Compare X8, 0
	131 JumpIfEqual {171}
	132 NotImplemented "Instruction LDRSW not yet implemented."
	133 Move W11, [X8+24]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Add W10, W9, 1
	136 Move [X19+24], W10
	137 Move X10, [X31+48]
	138 Move V0, [X31+2]
	139 NotImplemented "Instruction NOP not yet implemented."
	140 NotImplemented "Instruction MADD not yet implemented."
	141 Move [X8+48], X10
	142 Move [X8+2], V0
	143 Move X8, [X10+32]
	144 Move V0, [X31+2]
	145 Move X9, [X31+48]
	146 Move X8, [X8+192]
	147 Move X2, [X8+112]
	148 Move [X31+4], V0
	149 Move [X31+80], X9
	150 Add X1, X31, 64
	151 Move X0, X19
	152 Call List`1<List>.AddWithResize, X0, X1
	153 Move X8, 0x223B000
	154 Move X8, [X8+2096]
	155 Add X0, X31, 0
	156 Move X1, [X8]
	157 Call Enumerator<Int32>.Dispose, X0
	158 Move W8, [X19+24]
	159 Move X20, [X31+144]
	160 Move X19, [X31+152]
	161 Move X22, [X31+128]
	162 Move X21, [X31+136]
	163 Move X30, [X31+96]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X24, [X31+112]
	166 Move X23, [X31+120]
	167 NotImplemented "Instruction CSET not yet implemented."
	168 Add X31, X31, 160
	169 Return X0
	170 Call 0x1C17F20
	171 Call 0x1C17F20
	172 Call 0x1C17F20
	173 Move X20, X0
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X0, X20
	176 Call 0x3EB2AD0
	177 Move X21, [X0]
	178 Call 0x3EB2AE0
	179 Move X8, 0x223B000
	180 Move X8, [X8+2096]
	181 Add X0, X31, 0
	182 Move X1, [X8]
	183 Call Enumerator<Int32>.Dispose, X0
	184 Compare X21, 0
	185 JumpIfEqual {158}
	186 Move X0, X21
	187 Call 0x1C17F18
	188 Move X21, X31
	189 Move X20, X0
	190 Move X8, 0x223B000
	191 Move X8, [X8+2096]
	192 Move X1, [X8]
	193 Add X0, X31, 0
	194 Call Enumerator<Int32>.Dispose, X0
	195 Compare X21, 0
	196 JumpIfNotEqual {199}
	197 Move X0, X20
	198 Call 0x1D2D690
	199 Move X0, X21
	200 Call 0x1C17F18
	201 Call 0x1991590

Method: System.Void AOI_RemoveFromAreaOfInterest(Fusion.NetworkObjectMeta meta, System.Boolean invokeExit = False)

Disassembly:
	0x01EC0DB4 ADRP X0, 0x223F000
	0x01EC0DB8 LDR X0, [X0 + 0xA58]
	0x01EC0DBC BL 0x1C16CF4
	0x01EC0DC0 MOVZ W8, 0x1
	0x01EC0DC4 STRB W8, [X24 + 0x457]
	0x01EC0DC8 LDR X0, [X22]
	0x01EC0DCC BL 0x1C16F10
	0x01EC0DD0 LDR X1, [X21]
	0x01EC0DD4 MOV X21, X0
	0x01EC0DD8 BL 0x2A12DD4
	0x01EC0DDC STR X21, [X19 + 0x10]
	0x01EC0DE0 LDR X0, [X29]
	0x01EC0DE4 BL 0x1C16F10
	0x01EC0DE8 LDR X1, [X28]
	0x01EC0DEC MOV X21, X0
	0x01EC0DF0 BL 0x2601D04
	0x01EC0DF4 STR X21, [X19 + 0x18]
	0x01EC0DF8 LDR X0, [X27]
	0x01EC0DFC BL 0x1C16F10
	0x01EC0E00 LDR X1, [X26]
	0x01EC0E04 MOV X21, X0
	0x01EC0E08 BL 0x2A12DD4
	0x01EC0E0C STR X21, [X19 + 0x20]
	0x01EC0E10 LDR X0, [X23]
	0x01EC0E14 BL 0x1C16F10
	0x01EC0E18 LDR X1, [X20]
	0x01EC0E1C MOV X21, X0
	0x01EC0E20 BL 0x2A12DD4
	0x01EC0E24 STR X21, [X19 + 0xB0]
	0x01EC0E28 LDR X0, [X25]
	0x01EC0E2C LDR W8, [X0 + 0xE0]
	0x01EC0E30 CBNZ W8, 0x1EC0E38
	0x01EC0E34 BL 0x1C16DFC
	0x01EC0E38 ADRP X20, 0x2519000
	0x01EC0E3C LDRB W8, [X20 + 0x4B6]
	0x01EC0E40 CBNZ W8, 0x1EC0E58
	0x01EC0E44 ADRP X0, 0x2236000
	0x01EC0E48 LDR X0, [X0 + 0xE40]
	0x01EC0E4C BL 0x1C16CF4
	0x01EC0E50 MOVZ W8, 0x1
	0x01EC0E54 STRB W8, [X20 + 0x4B6]
	0x01EC0E58 ADRP X20, 0x223F000
	0x01EC0E5C ADRP X22, 0x223F000
	0x01EC0E60 LDR X20, [X20 + 0x9C8]
	0x01EC0E64 LDR X22, [X22 + 0x990]
	0x01EC0E68 LDR X0, [X25]
	0x01EC0E6C ADRP X26, 0x223F000
	0x01EC0E70 MOV X21, X25
	0x01EC0E74 ADRP X25, 0x223F000
	0x01EC0E78 ADRP X29, 0x223F000
	0x01EC0E7C ADRP X28, 0x223F000
	0x01EC0E80 ADRP X27, 0x223F000
	0x01EC0E84 ADRP X23, 0x223F000
	0x01EC0E88 LDR X26, [X26 + 0xA28]
	0x01EC0E8C LDR X25, [X25 + 0xA20]
	0x01EC0E90 LDR X29, [X29 + 0x9E0]
	0x01EC0E94 LDR W8, [X0 + 0xE0]
	0x01EC0E98 LDR X28, [X28 + 0x9A8]
	0x01EC0E9C LDR X27, [X27 + 0xA50]
	0x01EC0EA0 LDR X23, [X23 + 0xA48]
	0x01EC0EA4 CBNZ W8, 0x1EC0EB0
	0x01EC0EA8 BL 0x1C16DFC
	0x01EC0EAC LDR X0, [X21]
	0x01EC0EB0 MOV X24, X21
	0x01EC0EB4 LDR X8, [X0 + 0xB8]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+104], X23
	004 Move [X31+112], X22
	005 Move [X31+120], X21
	006 Move [X31+128], X20
	007 Move [X31+136], X19
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X23+40]
	010 NotImplemented "Instruction MOVI not yet implemented."
	011 Move [X31+88], X8
	012 Move [X31+80], X31
	013 Move [X31+48], V0
	014 Move [X31+56], V0
	015 Move [X31+4], W31
	016 Compare X1, 0
	017 JumpIfEqual {83}
	018 Move X20, X1
	019 Move W1, [X1+160]
	020 Compare W1, 0
	021 JumpIfEqual {72}
	022 Move W21, W2
	023 Move W2, W31
	024 Move X19, X0
	025 Call Simulation.AOI_GetCell, X0, X1, X2
	026 Compare X0, 0
	027 JumpIfEqual {83}
	028 Move X22, X0
	029 Add X0, X0, 24
	030 Move X1, X20
	031 Move X2, X31
	032 Call List.Remove, X0, X1
	033 Move TEMP, X21
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {72}
	037 Move X0, X20
	038 Move X1, X31
	039 Call NetworkObjectMeta.get_Id, X0
	040 Move X20, X0
	041 Add X0, X22, 48
	042 Add X8, X31, 8
	043 Move X1, X31
	044 Call BitSet256.GetIterator, X0
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 Move X8, [X31+40]
	048 Add X0, X31, 48
	049 Add X1, X31, 4
	050 Move X2, X31
	051 Move [X31+48], V0
	052 Move [X31+56], V1
	053 Move [X31+80], X8
	054 Call Iterator.Next, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {72}
	059 And X20, X20, 0
	060 Move W1, [X31+4]
	061 Move X0, X19
	062 Move X2, X20
	063 Call Simulation.ExitAreaOfInterest, X0, X1, X2
	064 Add X0, X31, 48
	065 Add X1, X31, 4
	066 Move X2, X31
	067 Call Iterator.Next, X0, X1
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {60}
	072 Move X8, [X23+40]
	073 Move X9, [X31+88]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X20, [X31+128]
	076 Move X19, [X31+136]
	077 Move X22, [X31+112]
	078 Move X21, [X31+120]
	079 Move X30, [X31+96]
	080 Move X23, [X31+104]
	081 Add X31, X31, 144
	082 Return 
	083 Call 0x1C17F20
	084 Call 0x3EB2B20

Method: System.Void AOI_UpdateAreaOfInterest(Fusion.NetworkObjectMeta meta, System.Int32 newCellKey)

Disassembly:
	0x01EC0F40 LDR X8, [X8 + 0x9E8]
	0x01EC0F44 LDR X0, [X8]
	0x01EC0F48 BL 0x1C16F10
	0x01EC0F4C MOV X1, X31
	0x01EC0F50 MOV X21, X0
	0x01EC0F54 BL 0x1EF0750
	0x01EC0F58 LDR X28, [X31 + 0x8]
	0x01EC0F5C STR X21, [X19 + 0xE0]
	0x01EC0F60 LDR W8, [X28]
	0x01EC0F64 STR W8, [X19 + 0x4C]
	0x01EC0F68 LDR X8, [X28 + 0x28]
	0x01EC0F6C CBZ X8, 0x1EC1394
	0x01EC0F70 LDR X8, [X8 + 0x40]
	0x01EC0F74 STR X8, [X19 + 0x58]
	0x01EC0F78 LDR X8, [X28 + 0x28]
	0x01EC0F7C STR X8, [X19 + 0x60]
	0x01EC0F80 CBZ X8, 0x1EC1394
	0x01EC0F84 LDR X0, [X8 + 0x70]
	0x01EC0F88 CBZ X0, 0x1EC1394
	0x01EC0F8C MOV X1, X31
	0x01EC0F90 BL 0x1ED7734
	0x01EC0F94 AND X1, X1, 0x0
	0x01EC0F98 MOV X2, X31
	0x01EC0F9C BL 0x1E66A30
	0x01EC0FA0 LDR X8, [X19 + 0x60]
	0x01EC0FA4 STR X0, [X19 + 0x198]
	0x01EC0FA8 CBZ X8, 0x1EC1394
	0x01EC0FAC LDR X0, [X8 + 0x70]
	0x01EC0FB0 CBZ X0, 0x1EC1394
	0x01EC0FB4 ADRP X20, 0x223F000
	0x01EC0FB8 LDR X20, [X20 + 0xA18]
	0x01EC0FBC MOV X1, X31
	0x01EC0FC0 BL 0x1ED7734
	0x01EC0FC4 AND X1, X1, 0x0
	0x01EC0FC8 MOV X2, X31
	0x01EC0FCC BL 0x1E66A30
	0x01EC0FD0 STR X0, [X19 + 0x1A0]
	0x01EC0FD4 LDR X9, [X28 + 0x30]
	0x01EC0FD8 MOVZ W8, 0x1
	0x01EC0FDC STRH W31, [X19 + 0x30]
	0x01EC0FE0 STRB W8, [X19 + 0xDC]
	0x01EC0FE4 STR X9, [X19 + 0x40]
	0x01EC0FE8 LDR X0, [X20]
	0x01EC0FEC LDR X22, [X19 + 0x58]
	0x01EC0FF0 LDR X23, [X19 + 0x198]
	0x01EC0FF4 BL 0x1C16F10
	0x01EC0FF8 MOV X1, X22
	0x01EC0FFC MOV X2, X23
	0x01EC1000 MOV X3, X31
	0x01EC1004 MOV X21, X0
	0x01EC1008 BL 0x1ED8CF4
	0x01EC100C STR X21, [X19 + 0x98]
	0x01EC1010 CBZ X21, 0x1EC1394
	0x01EC1014 MOV X0, X21
	0x01EC1018 MOV X1, X31
	0x01EC101C BL 0x1ECE11C
	0x01EC1020 LDR X8, [X19 + 0x58]
	0x01EC1024 STR X0, [X19 + 0x90]
	0x01EC1028 CBZ X8, 0x1EC1394
	0x01EC102C ADRP X9, 0x223E000
	0x01EC1030 LDR X9, [X9 + 0xA40]
	0x01EC1034 LDR W21, [X8 + 0x24]
	0x01EC1038 LDR X0, [X9]
	0x01EC103C BL 0x1C16F10
	0x01EC1040 MOV W1, W21
	0x01EC1044 MOV X2, X31
	0x01EC1048 MOV X22, X0
	0x01EC104C BL 0x1ED8E74
	0x01EC1050 STR X22, [X19 + 0xA0]
	0x01EC1054 ADRP X20, 0x2518000
	0x01EC1058 LDRB W8, [X20 + 0x4B6]
	0x01EC105C CBNZ W8, 0x1EC1074
	0x01EC1060 ADRP X0, 0x2235000
	0x01EC1064 LDR X0, [X0 + 0xE40]
	0x01EC1068 BL 0x1C16CF4
	0x01EC106C MOVZ W8, 0x1
	0x01EC1070 STRB W8, [X20 + 0x4B6]
	0x01EC1074 LDR X0, [X24]
	0x01EC1078 ADRP X22, 0x223E000
	0x01EC107C ADRP X20, 0x223E000
	0x01EC1080 ADRP X23, 0x2235000
	0x01EC1084 LDR W8, [X0 + 0xE0]
	0x01EC1088 LDR X22, [X22 + 0xA10]
	0x01EC108C LDR X20, [X20 + 0x9F0]
	0x01EC1090 LDR X23, [X23 + 0x398]
	0x01EC1094 CBNZ W8, 0x1EC10A0
	0x01EC1098 BL 0x1C16DFC
	0x01EC109C LDR X0, [X24]
	0x01EC10A0 LDR X8, [X0 + 0xB8]
	0x01EC10A4 LDR X0, [X22]
	0x01EC10A8 LDR X21, [X8]
	0x01EC10AC BL 0x1C16F10
	0x01EC10B0 LDR X2, [X20]
	0x01EC10B4 MOV X1, X21
	0x01EC10B8 MOV X22, X0
	0x01EC10BC BL 0x2DC2D18
	0x01EC10C0 STR X22, [X19 + 0xC0]
	0x01EC10C4 LDR X0, [X23]
	0x01EC10C8 LDR W8, [X0 + 0xE0]
	0x01EC10CC CBNZ W8, 0x1EC10D4
	0x01EC10D0 BL 0x1C16DFC
	0x01EC10D4 ADRP X24, 0x2518000
	0x01EC10D8 LDRB W8, [X24 + 0x4B7]
	0x01EC10DC CBNZ W8, 0x1EC10F4
	0x01EC10E0 ADRP X0, 0x2235000
	0x01EC10E4 LDR X0, [X0 + 0x398]
	0x01EC10E8 BL 0x1C16CF4
	0x01EC10EC MOVZ W8, 0x1
	0x01EC10F0 STRB W8, [X24 + 0x4B7]
	0x01EC10F4 LDR X0, [X23]
	0x01EC10F8 ADRP X22, 0x223E000
	0x01EC10FC ADRP X20, 0x223E000
	0x01EC1100 ADRP X25, 0x223D000
	0x01EC1104 LDR W8, [X0 + 0xE0]
	0x01EC1108 LDR X22, [X22 + 0x9D8]
	0x01EC110C LDR X20, [X20 + 0x998]
	0x01EC1110 LDR X25, [X25 + 0x378]
	0x01EC1114 CBNZ W8, 0x1EC1120
	0x01EC1118 BL 0x1C16DFC
	0x01EC111C LDR X0, [X23]
	0x01EC1120 LDR X8, [X0 + 0xB8]
	0x01EC1124 LDR X0, [X22]
	0x01EC1128 LDR X21, [X8]
	0x01EC112C BL 0x1C16F10
	0x01EC1130 LDR X2, [X20]
	0x01EC1134 MOV X1, X21
	0x01EC1138 MOV X22, X0
	0x01EC113C BL 0x2A66CAC
	0x01EC1140 STR X22, [X19 + 0x150]
	0x01EC1144 LDR X0, [X25]
	0x01EC1148 LDR W8, [X0 + 0xE0]
	0x01EC114C CBNZ W8, 0x1EC1154
	0x01EC1150 BL 0x1C16DFC
	0x01EC1154 ADRP X20, 0x2518000
	0x01EC1158 LDRB W8, [X20 + 0x4B8]
	0x01EC115C CBNZ W8, 0x1EC1174
	0x01EC1160 ADRP X0, 0x223D000
	0x01EC1164 LDR X0, [X0 + 0x378]
	0x01EC1168 BL 0x1C16CF4
	0x01EC116C MOVZ W8, 0x1
	0x01EC1170 STRB W8, [X20 + 0x4B8]
	0x01EC1174 LDR X0, [X25]
	0x01EC1178 ADRP X22, 0x223E000
	0x01EC117C ADRP X20, 0x223E000
	0x01EC1180 ADRP X27, 0x223E000
	0x01EC1184 ADRP X26, 0x223E000
	0x01EC1188 LDR W8, [X0 + 0xE0]
	0x01EC118C LDR X22, [X22 + 0x9C0]
	0x01EC1190 LDR X20, [X20 + 0x9B0]
	0x01EC1194 LDR X27, [X27 + 0x9D0]
	0x01EC1198 LDR X26, [X26 + 0x9A0]
	0x01EC119C CBNZ W8, 0x1EC11A8
	0x01EC11A0 BL 0x1C16DFC
	0x01EC11A4 LDR X0, [X25]
	0x01EC11A8 LDR X8, [X0 + 0xB8]
	0x01EC11AC LDR X0, [X22]
	0x01EC11B0 LDR X21, [X8]
	0x01EC11B4 BL 0x1C16F10
	0x01EC11B8 LDR X2, [X20]
	0x01EC11BC MOV X1, X21
	0x01EC11C0 MOV X22, X0
	0x01EC11C4 BL 0x2A82D24
	0x01EC11C8 STR X22, [X19 + 0x158]
	0x01EC11CC LDR X0, [X27]
	0x01EC11D0 BL 0x1C16F10
	0x01EC11D4 LDR X1, [X26]
	0x01EC11D8 MOV X21, X0
	0x01EC11DC BL 0x2AE35D0
	0x01EC11E0 STR X21, [X19 + 0x178]
	0x01EC11E4 LDR X0, [X27]
	0x01EC11E8 BL 0x1C16F10
	0x01EC11EC LDR X1, [X26]

ISIL:
	001 Subtract X31, X31, 384
	002 Move [X31+304], X29
	003 Move [X31+312], X30
	004 Move [X31+320], X26
	005 Move [X31+328], X25
	006 Move [X31+336], X24
	007 Move [X31+344], X23
	008 Move [X31+352], X22
	009 Move [X31+360], X21
	010 Move [X31+368], X20
	011 Move [X31+376], X19
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X25+40]
	014 Add X26, X31, 128
	015 NotImplemented "Instruction MOVI not yet implemented."
	016 Move [X31+296], X8
	017 Move [X26+160], X31
	018 Move [X26+128], V0
	019 Move [X26+136], V0
	020 Move [X26+112], X31
	021 Move [X26+80], V0
	022 Move [X26+88], V0
	023 Move [X31+8], X31
	024 Move [X26+64], X31
	025 Move [X26+32], V0
	026 Move [X26+40], V0
	027 Move [X31+4], W31
	028 Compare X1, 0
	029 JumpIfEqual {216}
	030 Move W8, [X1+160]
	031 Move W22, W2
	032 Move X21, X1
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X19, X0
	035 Move X0, X21
	036 Move X1, X31
	037 Call NetworkObjectMeta.get_Id, X0
	038 Move W1, [X21+160]
	039 Move X20, X0
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X0, X19
	042 Move W2, W31
	043 Call Simulation.AOI_GetCell, X0, X1, X2
	044 Compare X0, 0
	045 JumpIfEqual {216}
	046 Move X23, X0
	047 Add X0, X0, 24
	048 Move X1, X21
	049 Move X2, X31
	050 Call List.Remove, X0, X1
	051 Move X0, X23
	052 Move X1, X31
	053 Call AreaOfInterestCell.get_Empty, X0
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {62}
	058 Move X0, X19
	059 Move X1, X23
	060 Call Simulation.AOI_ReleaseCell, X0, X1
	061 Move X23, X31
	062 Move W2, 1
	063 Move X0, X19
	064 Move W1, W22
	065 Call Simulation.AOI_GetCell, X0, X1, X2
	066 Move [X21+160], W22
	067 Compare X0, 0
	068 JumpIfEqual {216}
	069 Move X24, X0
	070 Add X0, X0, 24
	071 Move X1, X21
	072 Move X2, X31
	073 Call List.AddLast, X0, X1
	074 Compare X23, 0
	075 JumpIfEqual {170}
	076 Move V1, [X24+48]
	077 Move V0, [X24+64]
	078 Add X21, X23, 48
	079 Add X1, X31, 128
	080 Move X0, X21
	081 Move X2, X31
	082 Move [X26+1], V0
	083 Move [X31+8], V1
	084 Call BitSet256.Equals, X0, X1
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfEqual {201}
	089 Add X8, X31, 88
	090 Move X0, X21
	091 Move X1, X31
	092 Add X22, X24, 48
	093 Call BitSet256.GetIterator, X0
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 Move X8, [X31+120]
	097 Add X1, X31, 48
	098 Move X2, X31
	099 Move [X26+128], V0
	100 Move [X26+136], V1
	101 Move [X26+160], X8
	102 Move V1, [X22]
	103 Move V0, [X22+16]
	104 Add X8, X31, 256
	105 Or X0, X8, 15
	106 Move [X31+48], V1
	107 Move [X31+56], V0
	108 Call BitSet256.AndNot, X0, X1
	109 Add X0, X31, 256
	110 Add X1, X31, 12
	111 Move X2, X31
	112 Call Iterator.Next, X0, X1
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {130}
	117 And X23, X20, 0
	118 Move W1, [X31+12]
	119 Move X0, X19
	120 Move X2, X23
	121 Call Simulation.ExitAreaOfInterest, X0, X1, X2
	122 Add X0, X31, 256
	123 Add X1, X31, 12
	124 Move X2, X31
	125 Call Iterator.Next, X0, X1
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfEqual {118}
	130 Add X8, X31, 88
	131 Move X0, X22
	132 Move X1, X31
	133 Call BitSet256.GetIterator, X0
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 Move X8, [X31+120]
	137 Add X1, X31, 16
	138 Move X2, X31
	139 Move [X26+80], V0
	140 Move [X26+88], V1
	141 Move [X26+112], X8
	142 Move V1, [X21]
	143 Move V0, [X21+16]
	144 Add X8, X31, 208
	145 Or X0, X8, 15
	146 Move [X31+16], V1
	147 Move [X31+24], V0
	148 Call BitSet256.AndNot, X0, X1
	149 Add X0, X31, 208
	150 Add X1, X31, 8
	151 Move X2, X31
	152 Call Iterator.Next, X0, X1
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfNotEqual {201}
	157 And X20, X20, 0
	158 Move W1, [X31+8]
	159 Move X0, X19
	160 Move X2, X20
	161 Call Simulation.EnterAreaOfInterest, X0, X1, X2
	162 Add X0, X31, 208
	163 Add X1, X31, 8
	164 Move X2, X31
	165 Call Iterator.Next, X0, X1
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfEqual {158}
	170 Add X0, X24, 48
	171 Add X8, X31, 88
	172 Move X1, X31
	173 Call BitSet256.GetIterator, X0
	174 NotImplemented "Instruction LDUR not yet implemented."
	175 NotImplemented "Instruction LDUR not yet implemented."
	176 Move X8, [X31+120]
	177 Add X0, X31, 160
	178 Add X1, X31, 4
	179 Move X2, X31
	180 Move [X26+32], V0
	181 Move [X26+40], V1
	182 Move [X26+64], X8
	183 Call Iterator.Next, X0, X1
	184 Move TEMP, X0
	185 And TEMP, TEMP, 1
	186 Compare TEMP, 1
	187 JumpIfNotEqual {201}
	188 And X20, X20, 0
	189 Move W1, [X31+4]
	190 Move X0, X19
	191 Move X2, X20
	192 Call Simulation.EnterAreaOfInterest, X0, X1, X2
	193 Add X0, X31, 160
	194 Add X1, X31, 4
	195 Move X2, X31
	196 Call Iterator.Next, X0, X1
	197 Move TEMP, X0
	198 And TEMP, TEMP, 1
	199 Compare TEMP, 1
	200 JumpIfEqual {189}
	201 Move X8, [X25+40]
	202 Move X9, [X31+296]
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move X20, [X31+368]
	205 Move X19, [X31+376]
	206 Move X22, [X31+352]
	207 Move X21, [X31+360]
	208 Move X24, [X31+336]
	209 Move X23, [X31+344]
	210 Move X26, [X31+320]
	211 Move X25, [X31+328]
	212 Move X29, [X31+304]
	213 Move X30, [X31+312]
	214 Add X31, X31, 384
	215 Return 
	216 Call 0x1C17F20
	217 Call 0x3EB2B20

Method: System.Void EnterAreaOfInterest(System.Int32 connection, Fusion.NetworkId id)

Disassembly:
	0x01EC11F0 MOV X21, X0
	0x01EC11F4 BL 0x2AE35D0
	0x01EC11F8 STR X21, [X19 + 0x180]
	0x01EC11FC LDRB W8, [X24 + 0x4B7]
	0x01EC1200 CBNZ W8, 0x1EC1218
	0x01EC1204 ADRP X0, 0x2235000
	0x01EC1208 LDR X0, [X0 + 0x398]
	0x01EC120C BL 0x1C16CF4
	0x01EC1210 MOVZ W8, 0x1
	0x01EC1214 STRB W8, [X24 + 0x4B7]
	0x01EC1218 LDR X0, [X23]
	0x01EC121C ADRP X24, 0x223E000
	0x01EC1220 ADRP X20, 0x223E000
	0x01EC1224 ADRP X27, 0x223E000
	0x01EC1228 ADRP X26, 0x223E000
	0x01EC122C ADRP X25, 0x223E000
	0x01EC1230 LDR X24, [X24 + 0xA08]
	0x01EC1234 LDR W8, [X0 + 0xE0]
	0x01EC1238 LDR X20, [X20 + 0xA00]
	0x01EC123C LDR X27, [X27 + 0xA38]
	0x01EC1240 LDR X26, [X26 + 0xA30]
	0x01EC1244 LDR X25, [X25 + 0xA58]
	0x01EC1248 CBNZ W8, 0x1EC1254
	0x01EC124C BL 0x1C16DFC
	0x01EC1250 LDR X0, [X23]
	0x01EC1254 LDR X8, [X0 + 0xB8]
	0x01EC1258 LDR X0, [X24]
	0x01EC125C LDR X21, [X8]
	0x01EC1260 BL 0x1C16F10
	0x01EC1264 LDR X2, [X20]
	0x01EC1268 MOV X1, X21
	0x01EC126C MOV X22, X0
	0x01EC1270 BL 0x2DB8E90
	0x01EC1274 STR X22, [X19 + 0x188]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2519000
	007 Move W8, [X22+1205]
	008 Move X19, X2
	009 Move W21, W1
	010 Move X20, X0
	011 Compare W8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, 0x223F000
	014 Move X0, [X0+2256]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X22+1205], W8
	018 Move [X31+8], X31
	019 Move X0, [X20+176]
	020 Compare X0, 0
	021 JumpIfEqual {40}
	022 Move X8, 0x223F000
	023 Move X8, [X8+2256]
	024 Add X2, X31, 8
	025 Move W1, W21
	026 Move X3, [X8]
	027 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	028 Move X8, [X31+8]
	029 And W31, W0, 1
	030 And X2, X19, 0
	031 Move X0, X20
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 Call Simulation.EnterAreaOfInterest, X0, X1, X2
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Return 
	040 Call 0x1C17F20

Method: System.Void EnterAreaOfInterest(Fusion.SimulationConnection connection, Fusion.NetworkId id)

Disassembly:
	0x01EC0948 ADRP X0, 0x223E000
	0x01EC094C LDR X0, [X0 + 0xA90]
	0x01EC0950 BL 0x1C16CF4
	0x01EC0954 MOVZ W8, 0x1
	0x01EC0958 STRB W8, [X20 + 0x453]
	0x01EC095C LDR X19, [X19 + 0x40]
	0x01EC0960 CBZ X19, 0x1EC09D0
	0x01EC0964 ADRP X10, 0x223E000
	0x01EC0968 LDR X8, [X19]
	0x01EC096C LDR X10, [X10 + 0xA90]
	0x01EC0970 LDRH W9, [X8 + 0x12E]
	0x01EC0974 LDR X1, [X10]
	0x01EC0978 CBZ X9, 0x1EC099C
	0x01EC097C LDR X10, [X8 + 0xB0]
	0x01EC0980 ADD X10, X10, 0x8
	0x01EC0984 LDUR X11, [X10 - 0x8]
	0x01EC0988 CMP X11, X1
	0x01EC098C B.EQ 0x1EC09AC
	0x01EC0990 SUBS X9, X9, 0x1
	0x01EC0994 ADD X10, X10, 0x10
	0x01EC0998 B.NE 0x1EC0984
	0x01EC099C MOVZ W2, 0x1B
	0x01EC09A0 MOV X0, X19
	0x01EC09A4 BL 0x1C5C788
	0x01EC09A8 B 0x1EC09BC
	0x01EC09AC LDR W9, [X10]
	0x01EC09B0 ADD W9, W9, 0x1B
	0x01EC09B4 ADD X8, X8, W9, 0x4, SXTW
	0x01EC09B8 ADD X0, X8, 0x138
	0x01EC09BC LDP X2, X1, [X0]
	0x01EC09C0 MOV X0, X19
	0x01EC09C4 LDP X20, X19, [X31 + 0x10]
	0x01EC09C8 LDR X30, [X31], #0x20
	0x01EC09CC BR X2
	0x01EC09D0 BL 0x1C16F20
	0x01EC09D4 STP X30, X21, [X31 - 0x20]!
	0x01EC09D8 STP X20, X19, [X31 + 0x10]
	0x01EC09DC ADRP X20, 0x2519000
	0x01EC09E0 ADRP X21, 0x223F000
	0x01EC09E4 LDRB W8, [X20 + 0x454]
	0x01EC09E8 LDR X21, [X21 + 0x938]
	0x01EC09EC MOV X19, X0
	0x01EC09F0 TBNZ X8, 0x0, 0x1EC0A08
	0x01EC09F4 ADRP X0, 0x223F000
	0x01EC09F8 LDR X0, [X0 + 0x938]
	0x01EC09FC BL 0x1C16CF4
	0x01EC0A00 MOVZ W8, 0x1
	0x01EC0A04 STRB W8, [X20 + 0x454]
	0x01EC0A08 LDR X0, [X21]
	0x01EC0A0C BL 0x1C16F10
	0x01EC0A10 MOVN W1, 0x1
	0x01EC0A14 MOV X2, X31
	0x01EC0A18 MOV X20, X0
	0x01EC0A1C BL 0x1ED6DBC
	0x01EC0A20 CBZ X20, 0x1EC0A38
	0x01EC0A24 STR X19, [X20 + 0x20]
	0x01EC0A28 MOV X0, X20
	0x01EC0A2C LDP X20, X19, [X31 + 0x10]
	0x01EC0A30 LDP X30, X21, [X31], #0x20
	0x01EC0A34 RET
	0x01EC0A38 BL 0x1C16F20
	0x01EC0A3C LDRB W8, [X0 + 0x30]
	0x01EC0A40 CMP W8, 0x0
	0x01EC0A44 CSET W0, EQ
	0x01EC0A48 RET
	0x01EC0A4C LDR X0, [X0 + 0xA8]
	0x01EC0A50 RET
	0x01EC0A54 LDR X0, [X0 + 0x40]
	0x01EC0A58 RET
	0x01EC0A5C LDRB W0, [X0 + 0xD0]
	0x01EC0A60 RET
	0x01EC0A64 LDRB W0, [X0 + 0xDB]
	0x01EC0A68 RET
	0x01EC0A6C STR X30, [X31 - 0x20]!
	0x01EC0A70 STP X20, X19, [X31 + 0x10]
	0x01EC0A74 ADRP X20, 0x2519000
	0x01EC0A78 LDRB W8, [X20 + 0x455]
	0x01EC0A7C MOV X19, X0
	0x01EC0A80 TBNZ X8, 0x0, 0x1EC0AA4
	0x01EC0A84 ADRP X0, 0x2237000
	0x01EC0A88 LDR X0, [X0 + 0xBF0]
	0x01EC0A8C BL 0x1C16CF4
	0x01EC0A90 ADRP X0, 0x2237000
	0x01EC0A94 LDR X0, [X0 + 0xBF8]
	0x01EC0A98 BL 0x1C16CF4
	0x01EC0A9C MOVZ W8, 0x1
	0x01EC0AA0 STRB W8, [X20 + 0x455]
	0x01EC0AA4 LDRB W8, [X19 + 0xDD]!
	0x01EC0AA8 CBZ W8, 0x1EC0AC8
	0x01EC0AAC ADRP X8, 0x2237000
	0x01EC0AB0 LDR X8, [X8 + 0xBF8]
	0x01EC0AB4 MOV X0, X19
	0x01EC0AB8 LDP X20, X19, [X31 + 0x10]
	0x01EC0ABC LDR X1, [X8]
	0x01EC0AC0 LDR X30, [X31], #0x20
	0x01EC0AC4 B 0x242D58C
	0x01EC0AC8 LDP X20, X19, [X31 + 0x10]
	0x01EC0ACC MOV W0, W31
	0x01EC0AD0 LDR X30, [X31], #0x20
	0x01EC0AD4 RET
	0x01EC0AD8 LDRB W0, [X0 + 0xDC]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x251A000
	009 Move X22, 0x2240000
	010 Move W8, [X23+1100]
	011 Move X22, [X22+2296]
	012 Move X21, X2
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x223F000
	020 Move X0, [X0+2704]
	021 Call 0x1C17CF4
	022 Move X0, 0x2240000
	023 Move X0, [X0+2304]
	024 Call 0x1C17CF4
	025 Move X0, 0x2240000
	026 Move X0, [X0+2296]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+1100], W8
	030 And X21, X21, 0
	031 Add X2, X31, 8
	032 Move X0, X19
	033 Move X1, X21
	034 Move [X31+8], X31
	035 Call Simulation.TryGetMeta, X0, X1, X2
	036 Move X1, [X22]
	037 And W0, W0, 1
	038 Move X2, X31
	039 Call Assert.Always, X0, X1
	040 Move X8, [X31+8]
	041 Compare X8, 0
	042 JumpIfEqual {112}
	043 Move X9, 0x2240000
	044 Move W8, [X8+160]
	045 Move X9, [X9+2304]
	046 Move X2, X31
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X1, [X9]
	049 NotImplemented "Instruction CSET not yet implemented."
	050 Call Assert.Always, X0, X1
	051 Compare X20, 0
	052 JumpIfEqual {112}
	053 Move W2, 1
	054 Move X0, X20
	055 Move X1, X21
	056 Move W3, W31
	057 Move X4, X31
	058 Call SimulationConnection.GetObjectData, X0, X1, X2, X3
	059 Compare X0, 0
	060 JumpIfEqual {112}
	061 Move W8, [X0+80]
	062 Move X22, X0
	063 And W31, W8, 3
	064 Move X23, [X19+64]
	065 Compare X23, 0
	066 JumpIfEqual {112}
	067 Move X10, 0x223F000
	068 Move X8, [X23]
	069 Move W24, [X20+40]
	070 Move X10, [X10+2704]
	071 NotImplemented "Instruction LDRH not yet implemented."
	072 Move X1, [X10]
	073 Compare X9, 0
	074 JumpIfEqual {81}
	075 Move X10, [X8+176]
	076 Add X10, X10, 8
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Subtract X9, X9, 1
	080 Add X10, X10, 16
	081 Move W2, 32
	082 Move X0, X23
	083 Call 0x1C5D788
	084 Move W9, [X10]
	085 Add W9, W9, 32
	086 Add X8, X8, W9
	087 Add X0, X8, 312
	088 Move X8, [X0]
	089 Move X3, [X0+8]
	090 Move X0, X23
	091 Move X1, X24
	092 Move X2, X21
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move X2, [X31+8]
	095 Move X0, X20
	096 Move X1, X22
	097 Move X3, X31
	098 Call SimulationConnection.SetActive, X0, X1, X2
	099 Move W1, 1
	100 Move X0, X22
	101 Move X2, X19
	102 Move X3, X31
	103 Call NetworkObjectConnectionData.SetPlayerDataFlag, X0, X1, X2
	104 Move X20, [X31+48]
	105 Move X19, [X31+56]
	106 Move X22, [X31+32]
	107 Move X21, [X31+40]
	108 Move X24, [X31+16]
	109 Move X23, [X31+24]
	110 Move X30, [X31+64]
	111 Return 
	112 Call 0x1C17F20

Method: System.Void ExitAreaOfInterest(System.Int32 connection, Fusion.NetworkId id)

Disassembly:
	0x01EC0EB8 LDR X0, [X20]
	0x01EC0EBC LDR X21, [X8]
	0x01EC0EC0 BL 0x1C16F10
	0x01EC0EC4 LDR X2, [X22]
	0x01EC0EC8 MOV X1, X21
	0x01EC0ECC MOV X22, X0
	0x01EC0ED0 BL 0x2AE6640
	0x01EC0ED4 STR X22, [X19 + 0xB8]
	0x01EC0ED8 LDR X0, [X26]
	0x01EC0EDC BL 0x1C16F10
	0x01EC0EE0 LDR X1, [X25]
	0x01EC0EE4 MOV X21, X0
	0x01EC0EE8 BL 0x24EF52C
	0x01EC0EEC STR X21, [X19 + 0xF0]
	0x01EC0EF0 LDR X0, [X29]
	0x01EC0EF4 BL 0x1C16F10
	0x01EC0EF8 LDR X1, [X28]
	0x01EC0EFC MOV X21, X0
	0x01EC0F00 BL 0x2B20634
	0x01EC0F04 STR X21, [X19 + 0x100]
	0x01EC0F08 LDR X0, [X27]
	0x01EC0F0C BL 0x1C16F10
	0x01EC0F10 LDR X1, [X23]
	0x01EC0F14 MOV X21, X0
	0x01EC0F18 BL 0x2601D04
	0x01EC0F1C MOVZ W8, 0x3FF
	0x01EC0F20 MOVZ W9, 0x1
	0x01EC0F24 MOV X0, X19
	0x01EC0F28 MOV X1, X31
	0x01EC0F2C STR X21, [X19 + 0x140]
	0x01EC0F30 STR W8, [X19 + 0x148]
	0x01EC0F34 STR W9, [X19 + 0x190]
	0x01EC0F38 BL 0x33BDD8C
	0x01EC0F3C ADRP X8, 0x223F000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x251A000
	007 Move W8, [X22+1205]
	008 Move X19, X2
	009 Move W21, W1
	010 Move X20, X0
	011 Compare W8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, 0x2240000
	014 Move X0, [X0+2256]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X22+1205], W8
	018 Move [X31+8], X31
	019 Move X0, [X20+176]
	020 Compare X0, 0
	021 JumpIfEqual {40}
	022 Move X8, 0x2240000
	023 Move X8, [X8+2256]
	024 Add X2, X31, 8
	025 Move W1, W21
	026 Move X3, [X8]
	027 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	028 Move X8, [X31+8]
	029 And W31, W0, 1
	030 And X2, X19, 0
	031 Move X0, X20
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 Call Simulation.ExitAreaOfInterest, X0, X1, X2
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Return 
	040 Call 0x1C17F20

Method: System.Void ExitAreaOfInterest(Fusion.SimulationConnection connection, Fusion.NetworkId id)

Disassembly:
	0x01EC07EC RET
	0x01EC07F0 BL 0x3EB1B20
	0x01EC07F4 STR X30, [X31 - 0x10]!
	0x01EC07F8 LDR X8, [X0 + 0xA0]
	0x01EC07FC CBZ X8, 0x1EC080C
	0x01EC0800 LDR W0, [X8 + 0x10]
	0x01EC0804 LDR X30, [X31], #0x10
	0x01EC0808 RET
	0x01EC080C BL 0x1C16F20
	0x01EC0810 STR X30, [X31 - 0x10]!
	0x01EC0814 LDR X8, [X0 + 0x58]
	0x01EC0818 CBZ X8, 0x1EC0828
	0x01EC081C LDR W0, [X8 + 0x38]
	0x01EC0820 LDR X30, [X31], #0x10
	0x01EC0824 RET
	0x01EC0828 BL 0x1C16F20
	0x01EC082C LDR W0, [X0 + 0x4C]
	0x01EC0830 RET
	0x01EC0834 LDR W0, [X0 + 0x50]
	0x01EC0838 RET
	0x01EC083C LDR X0, [X0 + 0x58]
	0x01EC0840 RET
	0x01EC0844 LDR X0, [X0 + 0x60]
	0x01EC0848 RET
	0x01EC084C LDR V0, [X0 + 0x78]
	0x01EC0850 RET
	0x01EC0854 LDR W0, [X0 + 0x74]
	0x01EC0858 RET
	0x01EC085C LDR W0, [X0 + 0x70]
	0x01EC0860 RET
	0x01EC0864 STR X30, [X31 - 0x20]!
	0x01EC0868 STP X20, X19, [X31 + 0x10]
	0x01EC086C ADRP X20, 0x2519000
	0x01EC0870 LDRB W8, [X20 + 0x451]
	0x01EC0874 MOV X19, X0
	0x01EC0878 TBNZ X8, 0x0, 0x1EC0890
	0x01EC087C ADRP X0, 0x223E000
	0x01EC0880 LDR X0, [X0 + 0x7E0]
	0x01EC0884 BL 0x1C16CF4
	0x01EC0888 MOVZ W8, 0x1
	0x01EC088C STRB W8, [X20 + 0x451]
	0x01EC0890 CBZ X19, 0x1EC08B4
	0x01EC0894 ADRP X8, 0x223E000
	0x01EC0898 LDR X8, [X8 + 0x7E0]
	0x01EC089C LDR X9, [X19]
	0x01EC08A0 LDR X8, [X8]
	0x01EC08A4 LDRB W11, [X9 + 0x130]
	0x01EC08A8 LDRB W10, [X8 + 0x130]
	0x01EC08AC CMP W11, W10
	0x01EC08B0 B.CS 0x1EC08BC
	0x01EC08B4 MOV W0, W31
	0x01EC08B8 B 0x1EC08D0
	0x01EC08BC LDR X9, [X9 + 0xC8]
	0x01EC08C0 ADD X9, X9, X10, 0x3, LSL
	0x01EC08C4 LDUR X9, [X9 - 0x8]
	0x01EC08C8 CMP X9, X8
	0x01EC08CC CSET W0, EQ
	0x01EC08D0 LDP X20, X19, [X31 + 0x10]
	0x01EC08D4 LDR X30, [X31], #0x20
	0x01EC08D8 RET
	0x01EC08DC LDR W8, [X0 + 0x4C]
	0x01EC08E0 CMP W8, 0x4
	0x01EC08E4 CSET W9, EQ
	0x01EC08E8 CMP W8, 0x2
	0x01EC08EC CSET W8, EQ
	0x01EC08F0 ORR W0, W9, W8, 0x0
	0x01EC08F4 RET
	0x01EC08F8 STR X30, [X31 - 0x10]!
	0x01EC08FC LDR W8, [X0 + 0x4C]
	0x01EC0900 CMP W8, 0x2
	0x01EC0904 B.NE 0x1EC0920
	0x01EC0908 LDR X8, [X0 + 0x58]
	0x01EC090C CBZ X8, 0x1EC092C
	0x01EC0910 LDR W8, [X8 + 0x24]
	0x01EC0914 CMP W8, 0x1
	0x01EC0918 CSET W0, EQ
	0x01EC091C B 0x1EC0924
	0x01EC0920 MOV W0, W31
	0x01EC0924 LDR X30, [X31], #0x10
	0x01EC0928 RET
	0x01EC092C BL 0x1C16F20
	0x01EC0930 STR X30, [X31 - 0x20]!
	0x01EC0934 STP X20, X19, [X31 + 0x10]
	0x01EC0938 ADRP X20, 0x2519000
	0x01EC093C LDRB W8, [X20 + 0x453]
	0x01EC0940 MOV X19, X0
	0x01EC0944 TBNZ X8, 0x0, 0x1EC095C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x251A000
	009 Move W8, [X22+1101]
	010 Move X21, X2
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x223F000
	018 Move X0, [X0+2704]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+1101], W8
	022 Move [X31+8], X31
	023 Compare X20, 0
	024 JumpIfEqual {103}
	025 And X22, X21, 0
	026 Move X0, X20
	027 Move X1, X22
	028 Move W2, W31
	029 Move W3, W31
	030 Move X4, X31
	031 Call SimulationConnection.GetObjectData, X0, X1, X2, X3
	032 Compare X0, 0
	033 JumpIfEqual {95}
	034 Move W8, [X0+80]
	035 Move X21, X0
	036 And W8, W8, 3
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X23, [X19+64]
	039 Compare X23, 0
	040 JumpIfEqual {103}
	041 Move X10, 0x223F000
	042 Move X8, [X23]
	043 Move W24, [X20+40]
	044 Move X10, [X10+2704]
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Move X1, [X10]
	047 Compare X9, 0
	048 JumpIfEqual {55}
	049 Move X10, [X8+176]
	050 Add X10, X10, 8
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X9, X9, 1
	054 Add X10, X10, 16
	055 Move W2, 33
	056 Move X0, X23
	057 Call 0x1C5D788
	058 Move W9, [X10]
	059 Add W9, W9, 33
	060 Add X8, X8, W9
	061 Add X0, X8, 312
	062 Move X8, [X0]
	063 Move X3, [X0+8]
	064 Move X0, X23
	065 Move X1, X24
	066 Move X2, X22
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Add X2, X31, 8
	069 Move X0, X19
	070 Move X1, X22
	071 Call Simulation.TryGetMeta, X0, X1, X2
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {85}
	076 Move X2, [X31+8]
	077 Compare X2, 0
	078 JumpIfEqual {103}
	079 Move W8, [X2+160]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X0, X20
	082 Move X1, X21
	083 Move X3, X31
	084 Call SimulationConnection.SetActive, X0, X1, X2
	085 Move W8, [X21+80]
	086 Move TEMP, X8
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {95}
	090 Move W1, 1
	091 Move X0, X21
	092 Move X2, X19
	093 Move X3, X31
	094 Call NetworkObjectConnectionData.ClearPlayerDataFlag, X0, X1, X2
	095 Move X20, [X31+48]
	096 Move X19, [X31+56]
	097 Move X22, [X31+32]
	098 Move X21, [X31+40]
	099 Move X24, [X31+16]
	100 Move X23, [X31+24]
	101 Move X30, [X31+64]
	102 Return 
	103 Call 0x1C17F20

Method: Fusion.Tick get_LatestServerTick()

Disassembly:
	

ISIL:
No ISIL was generated
Method: Fusion.SimulationRuntimeConfig get_RuntimeConfig()

Disassembly:
	0x01EC12E4 LDR X0, [X25]
	0x01EC12E8 BL 0x1C16F10
	0x01EC12EC MOV X1, X19
	0x01EC12F0 MOV X2, X31
	0x01EC12F4 MOV X20, X0
	0x01EC12F8 BL 0x1ED229C
	0x01EC12FC LDR X8, [X19 + 0x58]
	0x01EC1300 STR X20, [X19 + 0xA8]
	0x01EC1304 CBZ X8, 0x1EC1394

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X8
	004 Call Simulation.get_RuntimeConfigPtr, X0
	005 Move V0, [X0]
	006 Move V1, [X0+16]
	007 Move W8, [X0+32]
	008 Move [X19], V0
	009 Move [X19+8], V1
	010 Move [X19+32], W8
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return X0

Method: Fusion.SimulationRuntimeConfig* get_RuntimeConfigPtr()

Disassembly:
	0x01EC1308 LDR W8, [X8 + 0x14]
	0x01EC130C ADRP X22, 0x223E000
	0x01EC1310 ADRP X21, 0x223E000
	0x01EC1314 LDR X22, [X22 + 0x9B8]
	0x01EC1318 LDR X21, [X21 + 0x988]
	0x01EC131C ORN W8, W31, W8, 0x0
	0x01EC1320 ANDS W31, W8, 0x3
	0x01EC1324 B.NE 0x1EC1348
	0x01EC1328 LDR X0, [X24]
	0x01EC132C BL 0x1C16F10
	0x01EC1330 ADRP X8, 0x223E000
	0x01EC1334 LDR X8, [X8 + 0x9F8]
	0x01EC1338 MOV X20, X0
	0x01EC133C LDR X1, [X8]
	0x01EC1340 BL 0x2DB8E4C
	0x01EC1344 STR X20, [X19 + 0xF8]
	0x01EC1348 LDR X0, [X22]
	0x01EC134C BL 0x1C16F10
	0x01EC1350 LDR X1, [X21]
	0x01EC1354 MOV X20, X0
	0x01EC1358 BL 0x2AEFA88
	0x01EC135C LDR X8, [X31]
	0x01EC1360 STR X20, [X19 + 0xE8]
	0x01EC1364 LDR X8, [X8 + 0x28]
	0x01EC1368 LDR X9, [X31 + 0x78]
	0x01EC136C CMP X8, X9
	0x01EC1370 B.NE 0x1EC1398
	0x01EC1374 LDP X20, X19, [X31 + 0xD0]
	0x01EC1378 LDP X22, X21, [X31 + 0xC0]
	0x01EC137C LDP X24, X23, [X31 + 0xB0]
	0x01EC1380 LDP X26, X25, [X31 + 0xA0]
	0x01EC1384 LDP X28, X27, [X31 + 0x90]
	0x01EC1388 LDP X29, X30, [X31 + 0x80]
	0x01EC138C ADD X31, X31, 0xE0
	0x01EC1390 RET
	0x01EC1394 BL 0x1C16F20
	0x01EC1398 BL 0x3EB1B20
	0x01EC139C STR X29, [X31 - 0x50]!
	0x01EC13A0 STP X30, X25, [X31 + 0x10]
	0x01EC13A4 STP X24, X23, [X31 + 0x20]
	0x01EC13A8 STP X22, X21, [X31 + 0x30]
	0x01EC13AC STP X20, X19, [X31 + 0x40]
	0x01EC13B0 SUB X31, X31, 0x310
	0x01EC13B4 MRS X22, 0xC000
	0x01EC13B8 LDR X8, [X22 + 0x28]
	0x01EC13BC ADRP X23, 0x2518000
	0x01EC13C0 MOV X21, X2
	0x01EC13C4 MOV X20, X1
	0x01EC13C8 STR X8, [X31 + 0x308]
	0x01EC13CC LDRB W8, [X23 + 0x48F]
	0x01EC13D0 MOV X19, X0
	0x01EC13D4 TBNZ X8, 0x0, 0x1EC13EC
	0x01EC13D8 ADRP X0, 0x2239000
	0x01EC13DC LDR X0, [X0 + 0x2E8]
	0x01EC13E0 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2519000
	007 Move X20, 0x2236000
	008 Move W8, [X21+1102]
	009 Move X20, [X20+920]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x2236000
	016 Move X0, [X0+920]
	017 Call 0x1C17CF4
	018 Move X0, 0x2238000
	019 Move X0, [X0+40]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+1102], W8
	023 Move X0, [X20]
	024 Move [X31+8], X31
	025 Move X20, 0x2238000
	026 Move W8, [X0+224]
	027 Move X20, [X20+40]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X31
	032 Call NetworkId.get_RuntimeConfig
	033 Move X3, [X20]
	034 And X1, X0, 0
	035 Add X2, X31, 8
	036 Move X0, X19
	037 Call Simulation.TryGetStructData, X0, X1, X2
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {49}
	042 Move X0, [X31+8]
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X30, [X31+16]
	046 Move X21, [X31+24]
	047 Add X31, X31, 48
	048 Return X0
	049 Move X0, 0x2233000
	050 Move X0, [X0+1456]
	051 Call 0x1C17D08
	052 Call 0x1C17F10
	053 Move X19, X0
	054 Move X0, 0x223F000
	055 Move X0, [X0+2344]
	056 Call 0x1C17D08
	057 Move X1, X0
	058 Move X0, X19
	059 Move X2, X31
	060 Call InvalidOperationException..ctor, X0, X1
	061 Move X0, 0x223F000
	062 Move X0, [X0+2352]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X19
	066 Call 0x1C17DEC

Method: System.Void InterpolateSequenceIncrement()

Disassembly:
	0x01EC13E4 MOVZ W8, 0x1
	0x01EC13E8 STRB W8, [X23 + 0x48F]
	0x01EC13EC LDR X8, [X19 + 0x60]
	0x01EC13F0 CBZ X8, 0x1EC1590

ISIL:
	001 Move X8, [X0+40]
	002 Add X8, X8, 1
	003 Move [X0+40], X8
	004 Return 

Method: System.UInt64 get_InterpolateSequence()

Disassembly:
	0x01EC13F4 LDR X0, [X8 + 0x50]
	0x01EC13F8 LDR X8, [X21 + 0x10]

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Boolean get_HasRuntimeConfig()

Disassembly:
	0x01EC13FC LDR V0, [X21]
	0x01EC1400 ADD X23, X31, 0x100
	0x01EC1404 STR X8, [X31 + 0x220]
	0x01EC1408 STR V0, [X23 + 0x11]
	0x01EC140C CBZ X0, 0x1EC1590
	0x01EC1410 LDR X8, [X31 + 0x220]
	0x01EC1414 LDR V0, [X23 + 0x11]
	0x01EC1418 ADD X1, X31, 0x100
	0x01EC141C MOV X2, X31
	0x01EC1420 STR X8, [X31 + 0x110]
	0x01EC1424 ADD X8, X31, 0x118
	0x01EC1428 STR V0, [X23]
	0x01EC142C ADD X24, X31, 0x118
	0x01EC1430 BL 0x1ED79B8
	0x01EC1434 LDR W21, [X31 + 0x118]
	0x01EC1438 LDUR X23, [X23 + 0x24]
	0x01EC143C ADD X1, X24, 0x18
	0x01EC1440 ADD X0, X31, 0x228
	0x01EC1444 MOVZ W2, 0x68
	0x01EC1448 BL 0x3EB1AC0
	0x01EC144C LDR X8, [X19 + 0x60]
	0x01EC1450 CBZ X8, 0x1EC1590
	0x01EC1454 LDR X0, [X8 + 0x68]
	0x01EC1458 CBZ X0, 0x1EC1590
	0x01EC145C ADD X8, X31, 0x118
	0x01EC1460 MOV X1, X31
	0x01EC1464 BL 0x1ED7B6C
	0x01EC1468 ADD X8, X31, 0x228
	0x01EC146C ADD X0, X8, 0x68
	0x01EC1470 ADD X1, X31, 0x118
	0x01EC1474 MOVZ W2, 0x78
	0x01EC1478 BL 0x3EB1AC0
	0x01EC147C LDR W8, [X19 + 0x4C]
	0x01EC1480 CMP W8, 0x2
	0x01EC1484 B.NE 0x1EC14A4
	0x01EC1488 LDR X8, [X19 + 0x58]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2519000
	007 Move X20, 0x2236000
	008 Move W8, [X21+1103]
	009 Move X20, [X20+920]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x2236000
	016 Move X0, [X0+920]
	017 Call 0x1C17CF4
	018 Move X0, 0x2238000
	019 Move X0, [X0+40]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+1103], W8
	023 Move X0, [X20]
	024 Move [X31+8], X31
	025 Move X20, 0x2238000
	026 Move W8, [X0+224]
	027 Move X20, [X20+40]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X31
	032 Call NetworkId.get_RuntimeConfig
	033 Move X3, [X20]
	034 And X1, X0, 0
	035 Add X2, X31, 8
	036 Move X0, X19
	037 Call Simulation.TryGetStructData, X0, X1, X2
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X30, [X31+16]
	041 Move X21, [X31+24]
	042 And W0, W0, 1
	043 Add X31, X31, 48
	044 Return X0

Method: System.Int32 get_TickStride()

Disassembly:
	0x01EC148C CBZ X8, 0x1EC1590
	0x01EC1490 LDR W8, [X8 + 0x24]
	0x01EC1494 CMP W8, 0x1
	0x01EC1498 B.NE 0x1EC14A4
	0x01EC149C MOV W24, W31
	0x01EC14A0 B 0x1EC14DC
	0x01EC14A4 MOV X0, X19
	0x01EC14A8 BL 0x1EC0864
	0x01EC14AC TBZ X0, 0x0, 0x1EC14B8
	0x01EC14B0 MOVZ W24, 0x1
	0x01EC14B4 B 0x1EC14DC
	0x01EC14B8 LDR X9, [X19 + 0x58]
	0x01EC14BC CBZ X9, 0x1EC1590
	0x01EC14C0 LDR W8, [X19 + 0x4C]
	0x01EC14C4 LDR W24, [X9 + 0x24]
	0x01EC14C8 CMP W8, 0x4
	0x01EC14CC B.EQ 0x1EC14D8
	0x01EC14D0 CMP W8, 0x2
	0x01EC14D4 B.NE 0x1EC14DC
	0x01EC14D8 SUB W24, W24, 0x1
	0x01EC14DC ADRP X25, 0x2239000
	0x01EC14E0 LDR X25, [X25 + 0x2E8]
	0x01EC14E4 ADD X8, X31, 0x8
	0x01EC14E8 ADD X0, X8, 0x18
	0x01EC14EC ADD X1, X31, 0x228
	0x01EC14F0 MOVZ W2, 0xE0
	0x01EC14F4 STR X20, [X19 + 0x120]
	0x01EC14F8 BL 0x3EB1AC0
	0x01EC14FC MOVZ W8, 0x1
	0x01EC1500 MOVZ W9, 0x2000
	0x01EC1504 ADD X0, X31, 0x8
	0x01EC1508 MOV X1, X20
	0x01EC150C MOV X2, X31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 NotImplemented "Instruction MRS not yet implemented."
	007 Move X8, [X21+40]
	008 NotImplemented "Instruction MOVI not yet implemented."
	009 Move X19, X0
	010 Move [X31+40], X8
	011 Move [X31+32], W31
	012 Move [X31], V0
	013 Move [X31+8], V0
	014 Call Simulation.get_IsServer, X0
	015 Move W20, W0
	016 Move X0, X19
	017 Call Simulation.get_RuntimeConfigPtr, X0
	018 Move V0, [X0]
	019 Move V1, [X0+16]
	020 Move W8, [X0+32]
	021 Add X0, X31, 0
	022 Move X1, X31
	023 Move [X31], V0
	024 Move [X31+8], V1
	025 Move [X31+32], W8
	026 Move TEMP, X20
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {31}
	030 Call Resolved.get_ServerTickStride, X0
	031 Call Resolved.get_ClientTickStride, X0
	032 Move X8, [X21+40]
	033 Move X9, [X31+40]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0
	041 Call 0x3EB2B20

Method: System.Int32 get_TickRate()

Disassembly:
	0x01EC1510 STP W8, W24, [X31 + 0xC]
	0x01EC1514 STUR X23, [X31 + 0x14]
	0x01EC1518 STR W21, [X31 + 0x8]
	0x01EC151C STR W9, [X31 + 0x1C]
	0x01EC1520 BL 0x1EFDD70

ISIL:
	001 Move [X31-16], X30
	002 Call Simulation.get_RuntimeConfigPtr, X0
	003 Move W0, [X0]
	004 Move X30, [X31+16]
	005 Return X0

Method: System.Double get_TickDeltaDouble()

Disassembly:
	0x01EC1524 MOV W1, W31
	0x01EC1528 MOV X2, X31
	0x01EC152C STR X0, [X19 + 0x128]
	0x01EC1530 BL 0x1EFD54C
	0x01EC1534 STR X0, [X19 + 0x130]
	0x01EC1538 MOV X0, X31
	0x01EC153C BL 0x33C18F4
	0x01EC1540 LDR X8, [X25]
	0x01EC1544 MOV W20, W0
	0x01EC1548 MOV X0, X8
	0x01EC154C BL 0x1C16F10
	0x01EC1550 MOV W1, W20
	0x01EC1554 MOV X2, X31
	0x01EC1558 MOV X21, X0
	0x01EC155C BL 0x338E5E8
	0x01EC1560 STR X21, [X19 + 0x138]
	0x01EC1564 LDR X8, [X22 + 0x28]
	0x01EC1568 LDR X9, [X31 + 0x308]
	0x01EC156C CMP X8, X9
	0x01EC1570 B.NE 0x1EC1594
	0x01EC1574 ADD X31, X31, 0x310
	0x01EC1578 LDP X20, X19, [X31 + 0x40]
	0x01EC157C LDP X22, X21, [X31 + 0x30]
	0x01EC1580 LDP X24, X23, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 NotImplemented "Instruction MRS not yet implemented."
	005 Move X8, [X19+40]
	006 NotImplemented "Instruction MOVI not yet implemented."
	007 Move [X31+40], X8
	008 Move [X31+32], W31
	009 Move [X31], V0
	010 Move [X31+8], V0
	011 Call Simulation.get_RuntimeConfigPtr, X0
	012 Move V0, [X0]
	013 Move V1, [X0+16]
	014 Move W8, [X0+32]
	015 Add X0, X31, 0
	016 Move X1, X31
	017 Move [X31], V0
	018 Move [X31+8], V1
	019 Move [X31+32], W8
	020 Call Resolved.get_ClientTickDelta, X0
	021 Move X8, [X19+40]
	022 Move X9, [X31+40]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X30, [X31+48]
	025 Move X19, [X31+56]
	026 Add X31, X31, 64
	027 Return V0
	028 Call 0x3EB2B20

Method: System.Single get_TickDeltaFloat()

Disassembly:
	0x01EC1584 LDP X30, X25, [X31 + 0x10]
	0x01EC1588 LDR X29, [X31], #0x50
	0x01EC158C RET
	0x01EC1590 BL 0x1C16F20
	0x01EC1594 BL 0x3EB1B20
	0x01EC1598 STP X30, X21, [X31 - 0x20]!
	0x01EC159C STP X20, X19, [X31 + 0x10]
	0x01EC15A0 ADRP X21, 0x2518000
	0x01EC15A4 LDRB W8, [X21 + 0x458]
	0x01EC15A8 MOV X20, X1
	0x01EC15AC MOV X19, X0
	0x01EC15B0 TBNZ X8, 0x0, 0x1EC15C8
	0x01EC15B4 ADRP X0, 0x223E000
	0x01EC15B8 LDR X0, [X0 + 0xA60]
	0x01EC15BC BL 0x1C16CF4
	0x01EC15C0 MOVZ W8, 0x1
	0x01EC15C4 STRB W8, [X21 + 0x458]
	0x01EC15C8 CBZ X20, 0x1EC1604
	0x01EC15CC LDR X8, [X20 + 0xD0]
	0x01EC15D0 CBZ X8, 0x1EC1604
	0x01EC15D4 LDR X0, [X19 + 0xB0]
	0x01EC15D8 CBZ X0, 0x1EC1604
	0x01EC15DC ADRP X9, 0x223E000
	0x01EC15E0 LDR X9, [X9 + 0xA60]
	0x01EC15E4 LDRSH W1, [X8 + 0x1A]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 NotImplemented "Instruction MRS not yet implemented."
	005 Move X8, [X19+40]
	006 NotImplemented "Instruction MOVI not yet implemented."
	007 Move [X31+40], X8
	008 Move [X31+32], W31
	009 Move [X31], V0
	010 Move [X31+8], V0
	011 Call Simulation.get_RuntimeConfigPtr, X0
	012 Move V0, [X0]
	013 Move V1, [X0+16]
	014 Move W8, [X0+32]
	015 Add X0, X31, 0
	016 Move X1, X31
	017 Move [X31], V0
	018 Move [X31+8], V1
	019 Move [X31+32], W8
	020 Call Resolved.get_ClientTickDelta, X0
	021 Move X8, [X19+40]
	022 Move X9, [X31+40]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X30, [X31+48]
	025 Move X19, [X31+56]
	026 NotImplemented "Instruction INVALID not yet implemented."
	027 Add X31, X31, 64
	028 Return V0
	029 Call 0x3EB2B20

Method: System.Int32 get_SendRate()

Disassembly:
	0x01EC15E8 LDR X2, [X9]
	0x01EC15EC BL 0x2A135EC
	0x01EC15F0 CBZ X0, 0x1EC1604
	0x01EC15F4 LDR W0, [X0 + 0x28]
	0x01EC15F8 LDP X20, X19, [X31 + 0x10]
	0x01EC15FC LDP X30, X21, [X31], #0x20
	0x01EC1600 RET
	0x01EC1604 BL 0x1C16F20
	0x01EC1608 STP X30, X21, [X31 - 0x20]!
	0x01EC160C STP X20, X19, [X31 + 0x10]
	0x01EC1610 ADRP X21, 0x2518000
	0x01EC1614 LDRB W8, [X21 + 0x459]
	0x01EC1618 MOV X19, X1
	0x01EC161C MOV X20, X0
	0x01EC1620 TBNZ X8, 0x0, 0x1EC1638

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Call Simulation.get_IsServer, X0
	006 Move W20, W0
	007 Move X0, X19
	008 Call Simulation.get_RuntimeConfigPtr, X0
	009 Add X8, X0, 4
	010 Add X9, X0, 12
	011 And W31, W20, 1
	012 NotImplemented "Instruction CSEL not yet implemented."
	013 Move W0, [X8]
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Return X0

Method: System.Double get_SendDelta()

Disassembly:
	0x01EC1624 ADRP X0, 0x223E000
	0x01EC1628 LDR X0, [X0 + 0xA60]
	0x01EC162C BL 0x1C16CF4
	0x01EC1630 MOVZ W8, 0x1
	0x01EC1634 STRB W8, [X21 + 0x459]
	0x01EC1638 CBZ X19, 0x1EC166C
	0x01EC163C LDR X0, [X20 + 0xB0]
	0x01EC1640 CBZ X0, 0x1EC166C
	0x01EC1644 ADRP X8, 0x223E000
	0x01EC1648 LDR X8, [X8 + 0xA60]
	0x01EC164C LDRSH W1, [X19 + 0x1A]
	0x01EC1650 LDR X2, [X8]
	0x01EC1654 BL 0x2A135EC
	0x01EC1658 CBZ X0, 0x1EC166C
	0x01EC165C LDR W0, [X0 + 0x28]
	0x01EC1660 LDP X20, X19, [X31 + 0x10]
	0x01EC1664 LDP X30, X21, [X31], #0x20
	0x01EC1668 RET
	0x01EC166C BL 0x1C16F20
	0x01EC1670 SUB X31, X31, 0x30
	0x01EC1674 STP X30, X21, [X31 + 0x10]
	0x01EC1678 STP X20, X19, [X31 + 0x20]
	0x01EC167C ADRP X21, 0x2518000
	0x01EC1680 LDRB W8, [X21 + 0x45A]
	0x01EC1684 MOV X19, X1
	0x01EC1688 MOV X20, X0
	0x01EC168C TBNZ X8, 0x0, 0x1EC16A4
	0x01EC1690 ADRP X0, 0x2237000
	0x01EC1694 LDR X0, [X0 + 0x20]
	0x01EC1698 BL 0x1C16CF4
	0x01EC169C MOVZ W8, 0x1
	0x01EC16A0 STRB W8, [X21 + 0x45A]
	0x01EC16A4 STR X31, [X31 + 0x8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 NotImplemented "Instruction MRS not yet implemented."
	007 Move X8, [X21+40]
	008 NotImplemented "Instruction MOVI not yet implemented."
	009 Move X19, X0
	010 Move [X31+40], X8
	011 Move [X31+32], W31
	012 Move [X31], V0
	013 Move [X31+8], V0
	014 Call Simulation.get_IsServer, X0
	015 Move W20, W0
	016 Move X0, X19
	017 Call Simulation.get_RuntimeConfigPtr, X0
	018 Move V0, [X0]
	019 Move V1, [X0+16]
	020 Move W8, [X0+32]
	021 Add X0, X31, 0
	022 Move X1, X31
	023 Move [X31], V0
	024 Move [X31+8], V1
	025 Move [X31+32], W8
	026 Move TEMP, X20
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {31}
	030 Call Resolved.get_ServerSendDelta, X0
	031 Call Resolved.get_ClientSendDelta, X0
	032 Move X8, [X21+40]
	033 Move X9, [X31+40]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return V0
	041 Call 0x3EB2B20

Method: System.Single get_DeltaTime()

Disassembly:
	0x01EC16A8 LDR X0, [X20 + 0xB8]
	0x01EC16AC CBZ X0, 0x1EC16F4
	0x01EC16B0 ADRP X8, 0x2237000
	0x01EC16B4 LDR X8, [X8 + 0x20]
	0x01EC16B8 AND X1, X19, 0x0
	0x01EC16BC ADD X2, X31, 0x8
	0x01EC16C0 LDR X3, [X8]
	0x01EC16C4 BL 0x2AE89D0
	0x01EC16C8 TBZ X0, 0x0, 0x1EC16E0
	0x01EC16CC LDR X0, [X31 + 0x8]
	0x01EC16D0 CBZ X0, 0x1EC16F4
	0x01EC16D4 MOV X1, X31
	0x01EC16D8 BL 0x1ED810C
	0x01EC16DC B 0x1EC16E4
	0x01EC16E0 MOVN W0, 0x0
	0x01EC16E4 LDP X20, X19, [X31 + 0x20]
	0x01EC16E8 LDP X30, X21, [X31 + 0x10]
	0x01EC16EC ADD X31, X31, 0x30
	0x01EC16F0 RET
	0x01EC16F4 BL 0x1C16F20
	0x01EC16F8 STP X30, X23, [X31 - 0x30]!
	0x01EC16FC STP X22, X21, [X31 + 0x10]
	0x01EC1700 STP X20, X19, [X31 + 0x20]
	0x01EC1704 ADRP X23, 0x2518000
	0x01EC1708 LDRB W8, [X23 + 0x45B]
	0x01EC170C MOV X19, X3
	0x01EC1710 MOV X22, X2
	0x01EC1714 MOV W20, W1
	0x01EC1718 MOV X21, X0
	0x01EC171C TBNZ X8, 0x0, 0x1EC1734
	0x01EC1720 ADRP X0, 0x223E000
	0x01EC1724 LDR X0, [X0 + 0xA68]
	0x01EC1728 BL 0x1C16CF4
	0x01EC172C MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 NotImplemented "Instruction MRS not yet implemented."
	007 Move X8, [X21+40]
	008 NotImplemented "Instruction MOVI not yet implemented."
	009 Move X19, X0
	010 Move [X31+40], X8
	011 Move [X31+32], W31
	012 Move [X31], V0
	013 Move [X31+8], V0
	014 Call Simulation.get_IsServer, X0
	015 Move W20, W0
	016 Move X0, X19
	017 Call Simulation.get_RuntimeConfigPtr, X0
	018 Move V0, [X0]
	019 Move V1, [X0+16]
	020 Move W8, [X0+32]
	021 Add X0, X31, 0
	022 Move X1, X31
	023 Move [X31], V0
	024 Move [X31+8], V1
	025 Move [X31+32], W8
	026 Move TEMP, X20
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {31}
	030 Call Resolved.get_ServerTickDelta, X0
	031 Call Resolved.get_ClientTickDelta, X0
	032 Move X8, [X21+40]
	033 Move X9, [X31+40]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 NotImplemented "Instruction INVALID not yet implemented."
	040 Add X31, X31, 80
	041 Return V0
	042 Call 0x3EB2B20

Method: System.Boolean get_IsShutdown()

Disassembly:
	0x01EC1730 STRB W8, [X23 + 0x45B]
	0x01EC1734 LDR X21, [X21 + 0x100]

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.Single get_LocalAlpha()

Disassembly:
	0x01EC1738 MOV X0, X22
	0x01EC173C MOV W1, W31

ISIL:
	001 Move V0, [X0+124]
	002 Return V0

Method: System.Boolean get_IsResimulation()

Disassembly:
	0x01EC1740 MOV X2, X31
	0x01EC1744 BL 0x3317114

ISIL:
	001 Move W0, [X0+218]
	002 Return X0

Method: System.Boolean get_IsLastTick()

Disassembly:
	0x01EC1748 CBZ X21, 0x1EC1778
	0x01EC174C ADRP X8, 0x223E000

ISIL:
	001 Move W0, [X0+216]
	002 Return X0

Method: System.Boolean get_IsFirstTick()

Disassembly:
	0x01EC1750 LDR X8, [X8 + 0xA68]
	0x01EC1754 MOV W2, W20

ISIL:
	001 Move W0, [X0+217]
	002 Return X0

Method: System.Boolean get_IsForward()

Disassembly:
	0x01EC1758 MOV X1, X0
	0x01EC175C BFM X2, X19, 0x20, 0x1F
	0x01EC1760 LDR X3, [X8]
	0x01EC1764 MOV X0, X21

ISIL:
	001 Move W8, [X0+218]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_IsLocalPlayerFirstExecution()

Disassembly:
	0x01EC1768 LDP X20, X19, [X31 + 0x20]
	0x01EC176C LDP X22, X21, [X31 + 0x10]
	0x01EC1770 LDP X30, X23, [X31], #0x30
	0x01EC1774 B 0x2B20ED4

ISIL:
	001 Move W8, [X0+80]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: Fusion.Tick get_Tick()

Disassembly:
	0x01EC1778 BL 0x1C16F20
	0x01EC177C SUB X31, X31, 0x40

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: Fusion.Tick get_TickPrevious()

Disassembly:
	0x01EBEFA8 LDR W11, [X8 + 0x18]
	0x01EBEFAC CMP W10, W11
	0x01EBEFB0 B.CS 0x1EBEFC8
	0x01EBEFB4 ADD W9, W10, 0x1
	0x01EBEFB8 ADD X8, X8, X10, 0x2, LSL
	0x01EBEFBC STR W9, [X19 + 0x18]
	0x01EBEFC0 STR W1, [X8 + 0x20]
	0x01EBEFC4 B 0x1EBEFDC
	0x01EBEFC8 LDR X8, [X9 + 0x20]
	0x01EBEFCC MOV X0, X19
	0x01EBEFD0 LDR X8, [X8 + 0xC0]
	0x01EBEFD4 LDR X2, [X8 + 0x70]
	0x01EBEFD8 BL 0x3024D50
	0x01EBEFDC ADD X0, X31, 0x30
	0x01EBEFE0 ADD X1, X31, 0x4
	0x01EBEFE4 MOV X2, X31
	0x01EBEFE8 BL 0x1E8911C
	0x01EBEFEC TBNZ X0, 0x0, 0x1EBEF48
	0x01EBEFF0 LDR X8, [X24 + 0x28]
	0x01EBEFF4 LDR X9, [X31 + 0x58]
	0x01EBEFF8 CMP X8, X9
	0x01EBEFFC B.NE 0x1EBF020
	0x01EBF000 LDP X20, X19, [X31 + 0xA0]
	0x01EBF004 LDP X22, X21, [X31 + 0x90]
	0x01EBF008 LDP X24, X23, [X31 + 0x80]
	0x01EBF00C LDP X26, X25, [X31 + 0x70]
	0x01EBF010 LDR X30, [X31 + 0x60]
	0x01EBF014 ADD X31, X31, 0xB0
	0x01EBF018 RET
	0x01EBF01C BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x251C000
	006 Move X20, 0x2236000
	007 Move W8, [X21+1104]
	008 Move X20, [X20+1448]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2236000
	015 Move X0, [X0+1448]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1104], W8
	019 Move W21, [X19+72]
	020 Move X0, X19
	021 Call Simulation.get_TickStride, X0
	022 Move X8, [X20]
	023 Move W19, W0
	024 Move W9, [X8+224]
	025 Compare W9, 0
	026 JumpIfNotEqual {29}
	027 Move X0, X8
	028 Call 0x1C17DFC
	029 Subtract W1, W21, W19
	030 Move W0, W31
	031 Move X2, X31
	032 Call Math.Max, X0, X1
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 NotImplemented "Instruction BIC not yet implemented."
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0

Method: System.Double get_Time()

Disassembly:
	0x01EC1780 STP X30, X21, [X31 + 0x20]
	0x01EC1784 STP X20, X19, [X31 + 0x30]
	0x01EC1788 ADRP X21, 0x2518000
	0x01EC178C LDRB W8, [X21 + 0x45C]
	0x01EC1790 MOV X19, X1
	0x01EC1794 MOV X20, X0
	0x01EC1798 TBNZ X8, 0x0, 0x1EC17BC
	0x01EC179C ADRP X0, 0x223E000
	0x01EC17A0 LDR X0, [X0 + 0xA70]
	0x01EC17A4 BL 0x1C16CF4
	0x01EC17A8 ADRP X0, 0x223E000
	0x01EC17AC LDR X0, [X0 + 0xA78]
	0x01EC17B0 BL 0x1C16CF4
	0x01EC17B4 MOVZ W8, 0x1
	0x01EC17B8 STRB W8, [X21 + 0x45C]
	0x01EC17BC STR X31, [X31 + 0x8]
	0x01EC17C0 LDR X20, [X20 + 0x100]
	0x01EC17C4 MOV X0, X19
	0x01EC17C8 MOV W1, W31
	0x01EC17CC MOV X2, X31
	0x01EC17D0 BL 0x3317114
	0x01EC17D4 CBZ X20, 0x1EC183C
	0x01EC17D8 ADRP X8, 0x223E000
	0x01EC17DC LDR X8, [X8 + 0xA70]
	0x01EC17E0 MOV X1, X0
	0x01EC17E4 ADD X2, X31, 0x8
	0x01EC17E8 MOV X0, X20
	0x01EC17EC LDR X3, [X8]
	0x01EC17F0 BL 0x2B228A4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 NotImplemented "Instruction MRS not yet implemented."
	006 Move X8, [X20+40]
	007 NotImplemented "Instruction MOVI not yet implemented."
	008 Move [X31+40], X8
	009 Move W19, [X0+72]
	010 Move [X31+32], W31
	011 Move [X31], V0
	012 Move [X31+8], V0
	013 Call Simulation.get_RuntimeConfigPtr, X0
	014 Move V0, [X0]
	015 Move V1, [X0+16]
	016 Move W8, [X0+32]
	017 Add X0, X31, 0
	018 Move X1, X31
	019 Move [X31], V0
	020 Move [X31+8], V1
	021 Move [X31+32], W8
	022 Call Resolved.get_ClientTickDelta, X0
	023 Move X8, [X20+40]
	024 Move X9, [X31+40]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction SCVTF not yet implemented."
	027 Move X20, [X31+64]
	028 Move X19, [X31+72]
	029 Move X30, [X31+48]
	030 Multiply D0, D0, D1
	031 Add X31, X31, 80
	032 Return V0
	033 Call 0x3EB2B20

Method: System.Int32 get_InputCount()

Disassembly:
	0x01EC17F4 TBZ X0, 0x0, 0x1EC181C
	0x01EC17F8 ADRP X8, 0x223E000
	0x01EC17FC LDR X1, [X31 + 0x8]
	0x01EC1800 LDR X8, [X8 + 0xA78]
	0x01EC1804 ADD X0, X31, 0x10
	0x01EC1808 STR X31, [X31 + 0x10]
	0x01EC180C STR W31, [X31 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+160]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+16]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: Fusion.Topologies get_Topology()

Disassembly:
	0x01EC1810 LDR X2, [X8]
	0x01EC1814 BL 0x243F104
	0x01EC1818 B 0x1EC1824
	0x01EC181C STR W31, [X31 + 0x18]
	0x01EC1820 STR X31, [X31 + 0x10]
	0x01EC1824 LDR X0, [X31 + 0x10]
	0x01EC1828 LDR W1, [X31 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+88]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+56]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: Fusion.SimulationModes get_Mode()

Disassembly:
	0x01EC182C LDP X20, X19, [X31 + 0x30]
	0x01EC1830 LDP X30, X21, [X31 + 0x20]

ISIL:
	001 Move W0, [X0+76]
	002 Return X0

Method: Fusion.SimulationStages get_Stage()

Disassembly:
	0x01EC1834 ADD X31, X31, 0x40
	0x01EC1838 RET

ISIL:
	001 Move W0, [X0+80]
	002 Return X0

Method: Fusion.SimulationConfig get_Config()

Disassembly:
	0x01EC183C BL 0x1C16F20
	0x01EC1840 STR X30, [X31 - 0x30]!

ISIL:
	001 Move X0, [X0+88]
	002 Return X0

Method: Fusion.NetworkProjectConfig get_ProjectConfig()

Disassembly:
	0x01EC1844 STP X22, X21, [X31 + 0x10]
	0x01EC1848 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move X0, [X0+96]
	002 Return X0

Method: System.Single get_RemoteAlpha()

Disassembly:
	0x01EC184C ADRP X21, 0x2518000
	0x01EC1850 ADRP X22, 0x2232000

ISIL:
	001 Move V0, [X0+120]
	002 Return V0

Method: Fusion.Tick get_RemoteTickPrevious()

Disassembly:
	0x01EC1854 LDRB W8, [X21 + 0x45D]
	0x01EC1858 LDR X22, [X22 + 0x618]

ISIL:
	001 Move W0, [X0+116]
	002 Return X0

Method: Fusion.Tick get_RemoteTick()

Disassembly:
	0x01EC185C MOV X20, X1
	0x01EC1860 MOV X19, X0

ISIL:
	001 Move W0, [X0+112]
	002 Return X0

Method: System.Boolean get_IsClient()

Disassembly:
	0x01EC1864 TBNZ X8, 0x0, 0x1EC187C
	0x01EC1868 ADRP X0, 0x2232000
	0x01EC186C LDR X0, [X0 + 0x618]
	0x01EC1870 BL 0x1C16CF4
	0x01EC1874 MOVZ W8, 0x1
	0x01EC1878 STRB W8, [X21 + 0x45D]
	0x01EC187C LDR X0, [X22]
	0x01EC1880 MOVZ W1, 0x8
	0x01EC1884 BL 0x1C16D6C
	0x01EC1888 CBZ X0, 0x1EC18E8
	0x01EC188C LDR W8, [X0 + 0x18]
	0x01EC1890 MOV X1, X0
	0x01EC1894 UBFM X9, X8, 0x20, 0x1F
	0x01EC1898 CMP X9, 0x1
	0x01EC189C B.LT 0x1EC18C8
	0x01EC18A0 MOV X9, X31
	0x01EC18A4 SXTW X10, W8
	0x01EC18A8 ADD X11, X1, 0x20
	0x01EC18AC CMP X9, X8
	0x01EC18B0 B.CS 0x1EC18E4
	0x01EC18B4 LDRB W12, [X20, X9, LSL]
	0x01EC18B8 STRB W12, [X11, X9, LSL]
	0x01EC18BC ADD X9, X9, 0x1
	0x01EC18C0 CMP X9, X10
	0x01EC18C4 B.LT 0x1EC18AC
	0x01EC18C8 MOV X0, X19
	0x01EC18CC BL 0x1EC177C
	0x01EC18D0 LDP X20, X19, [X31 + 0x20]
	0x01EC18D4 LDP X22, X21, [X31 + 0x10]
	0x01EC18D8 AND X1, X1, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2519000
	005 Move W8, [X20+1105]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x223E000
	012 Move X0, [X0+2016]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1105], W8
	016 Compare X19, 0
	017 JumpIfEqual {25}
	018 Move X8, 0x223E000
	019 Move X8, [X8+2016]
	020 Move X9, [X19]
	021 Move X8, [X8]
	022 Move W11, [X9+304]
	023 Move W10, [X8+304]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 Move X9, [X9+200]
	027 Add X9, X9, X10
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CSET not yet implemented."
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0

Method: System.Boolean get_IsServer()

Disassembly:
	0x01EBEF30 ADRP X21, 0x2241000
	0x01EBEF34 ADRP X26, 0x2241000
	0x01EBEF38 LDR X21, [X21 + 0x8D0]
	0x01EBEF3C LDR X26, [X26 + 0x8B8]
	0x01EBEF40 ADRP X23, 0x251B000
	0x01EBEF44 MOVZ W25, 0x1
	0x01EBEF48 LDRB W8, [X23 + 0x4B5]
	0x01EBEF4C LDR W22, [X31 + 0x4]
	0x01EBEF50 CBNZ W8, 0x1EBEF60
	0x01EBEF54 MOV X0, X21
	0x01EBEF58 BL 0x1C16CF4
	0x01EBEF5C STRB W25, [X23 + 0x4B5]
	0x01EBEF60 STR X31, [X31 + 0x8]
	0x01EBEF64 LDR X0, [X20 + 0xB0]
	0x01EBEF68 CBZ X0, 0x1EBF01C
	0x01EBEF6C LDR X3, [X21]
	0x01EBEF70 ADD X2, X31, 0x8
	0x01EBEF74 MOV W1, W22
	0x01EBEF78 BL 0x2A150AC
	0x01EBEF7C LDR X8, [X31 + 0x8]
	0x01EBEF80 CBZ X8, 0x1EBF01C
	0x01EBEF84 TBZ X0, 0x0, 0x1EBF01C
	0x01EBEF88 LDR W10, [X19 + 0x1C]
	0x01EBEF8C LDR W1, [X8 + 0x28]
	0x01EBEF90 LDR X8, [X19 + 0x10]
	0x01EBEF94 LDR X9, [X26]
	0x01EBEF98 ADD W10, W10, 0x1
	0x01EBEF9C STR W10, [X19 + 0x1C]
	0x01EBEFA0 CBZ X8, 0x1EBF01C
	0x01EBEFA4 LDRSW X10, [X19 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x251C000
	005 Move W8, [X20+1106]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2241000
	012 Move X0, [X0+1944]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1106], W8
	016 Compare X19, 0
	017 JumpIfEqual {25}
	018 Move X8, 0x2241000
	019 Move X8, [X8+1944]
	020 Move X9, [X19]
	021 Move X8, [X8]
	022 Move W11, [X9+304]
	023 Move W10, [X8+304]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 Move X9, [X9+200]
	027 Add X9, X9, X10
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CSET not yet implemented."
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0

Method: System.Boolean get_IsPlayer()

Disassembly:
	0x01EC18DC LDR X30, [X31], #0x30
	0x01EC18E0 RET
	0x01EC18E4 BL 0x1C16F28
	0x01EC18E8 BL 0x1C16F20
	0x01EC18EC STR X30, [X31 - 0x20]!
	0x01EC18F0 STP X20, X19, [X31 + 0x10]
	0x01EC18F4 ADRP X20, 0x2518000

ISIL:
	001 Move W8, [X0+76]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSET not yet implemented."
	006 Or W0, W9, W8
	007 Return X0

Method: System.Boolean get_IsSinglePlayer()

Disassembly:
	0x01EC18F8 LDRB W8, [X20 + 0x45E]
	0x01EC18FC MOV X19, X0
	0x01EC1900 TBNZ X8, 0x0, 0x1EC1918
	0x01EC1904 ADRP X0, 0x223D000
	0x01EC1908 LDR X0, [X0 + 0x7C0]
	0x01EC190C BL 0x1C16CF4
	0x01EC1910 MOVZ W8, 0x1
	0x01EC1914 STRB W8, [X20 + 0x45E]
	0x01EC1918 MOV X0, X19
	0x01EC191C BL 0x1EC0864
	0x01EC1920 TBNZ X0, 0x0, 0x1EC1994
	0x01EC1924 LDR X20, [X19 + 0x68]
	0x01EC1928 CBZ X20, 0x1EC19A0
	0x01EC192C ADRP X10, 0x223D000

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+76]
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X8, [X0+88]
	005 Compare X8, 0
	006 JumpIfEqual {13}
	007 Move W8, [X8+36]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CSET not yet implemented."
	010 Move W0, W31
	011 Move X30, [X31+16]
	012 Return X0
	013 Call 0x1C17F20

Method: System.Boolean get_IsMasterClient()

Disassembly:
	0x01EC1930 LDR X8, [X20]
	0x01EC1934 LDR X10, [X10 + 0x7C0]
	0x01EC1938 LDRH W9, [X8 + 0x12E]
	0x01EC193C LDR X1, [X10]
	0x01EC1940 CBZ X9, 0x1EC1964
	0x01EC1944 LDR X10, [X8 + 0xB0]
	0x01EC1948 ADD X10, X10, 0x8
	0x01EC194C LDUR X11, [X10 - 0x8]
	0x01EC1950 CMP X11, X1
	0x01EC1954 B.EQ 0x1EC1974
	0x01EC1958 SUBS X9, X9, 0x1
	0x01EC195C ADD X10, X10, 0x10
	0x01EC1960 B.NE 0x1EC194C
	0x01EC1964 MOVZ W2, 0x9
	0x01EC1968 MOV X0, X20
	0x01EC196C BL 0x1C5C788
	0x01EC1970 B 0x1EC1984
	0x01EC1974 LDR W9, [X10]
	0x01EC1978 ADD W9, W9, 0x9
	0x01EC197C ADD X8, X8, W9, 0x4, SXTW
	0x01EC1980 ADD X0, X8, 0x138
	0x01EC1984 LDP X8, X1, [X0]
	0x01EC1988 MOV X0, X20
	0x01EC198C BLR X8
	0x01EC1990 STR D1, [X19 + 0xC8]
	0x01EC1994 LDP X20, X19, [X31 + 0x10]
	0x01EC1998 LDR X30, [X31], #0x20
	0x01EC199C RET
	0x01EC19A0 BL 0x1C16F20
	0x01EC19A4 SUB X31, X31, 0x90
	0x01EC19A8 STR X30, [X31 + 0x40]
	0x01EC19AC STP X26, X25, [X31 + 0x50]
	0x01EC19B0 STP X24, X23, [X31 + 0x60]
	0x01EC19B4 STP X22, X21, [X31 + 0x70]
	0x01EC19B8 STP X20, X19, [X31 + 0x80]
	0x01EC19BC ADRP X26, 0x2518000
	0x01EC19C0 ADRP X25, 0x223E000
	0x01EC19C4 LDRB W8, [X26 + 0x45F]
	0x01EC19C8 LDR X25, [X25 + 0xA80]
	0x01EC19CC MOV W20, W4
	0x01EC19D0 MOV W22, W2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2519000
	005 Move W8, [X20+1107]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x223E000
	012 Move X0, [X0+2704]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1107], W8
	016 Move X19, [X19+64]
	017 Compare X19, 0
	018 JumpIfEqual {46}
	019 Move X10, 0x223E000
	020 Move X8, [X19]
	021 Move X10, [X10+2704]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move W2, 27
	033 Move X0, X19
	034 Call 0x1C5D788
	035 Move W9, [X10]
	036 Add W9, W9, 27
	037 Add X8, X8, W9
	038 Add X0, X8, 312
	039 Move X2, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 CallNoReturn X2
	046 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<Fusion.PlayerRef> get_ActivePlayers()

Disassembly:
	0x01EC19D4 MOV W21, W1
	0x01EC19D8 MOV X19, X0
	0x01EC19DC AND W24, W2, 0x1
	0x01EC19E0 AND W23, W3, 0x1
	0x01EC19E4 TBNZ X8, 0x0, 0x1EC1A5C
	0x01EC19E8 ADRP X0, 0x223E000
	0x01EC19EC LDR X0, [X0 + 0xA88]
	0x01EC19F0 BL 0x1C16CF4
	0x01EC19F4 ADRP X0, 0x223E000
	0x01EC19F8 LDR X0, [X0 + 0xA90]
	0x01EC19FC BL 0x1C16CF4
	0x01EC1A00 ADRP X0, 0x223D000
	0x01EC1A04 LDR X0, [X0 + 0x810]
	0x01EC1A08 BL 0x1C16CF4
	0x01EC1A0C ADRP X0, 0x223E000
	0x01EC1A10 LDR X0, [X0 + 0xA98]
	0x01EC1A14 BL 0x1C16CF4
	0x01EC1A18 ADRP X0, 0x223E000
	0x01EC1A1C LDR X0, [X0 + 0xAA0]
	0x01EC1A20 BL 0x1C16CF4
	0x01EC1A24 ADRP X0, 0x223E000
	0x01EC1A28 LDR X0, [X0 + 0xAA8]
	0x01EC1A2C BL 0x1C16CF4
	0x01EC1A30 ADRP X0, 0x223D000
	0x01EC1A34 LDR X0, [X0 + 0xA90]
	0x01EC1A38 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2519000
	006 Move X21, 0x223F000
	007 Move W8, [X20+1108]
	008 Move X21, [X21+2360]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x223F000
	015 Move X0, [X0+2360]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1108], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move TEMP, 1
	022 Not TEMP
	023 Move W1, TEMP
	024 Move X2, X31
	025 Move X20, X0
	026 Call <get_ActivePlayers>d__138..ctor, X0, X1
	027 Compare X20, 0
	028 JumpIfEqual {36}
	029 Move [X20+32], X19
	030 Move X0, X20
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0
	036 Call 0x1C17F20

Method: System.Boolean get_IsRunning()

Disassembly:
	0x01EC1A3C ADRP X0, 0x223E000
	0x01EC1A40 LDR X0, [X0 + 0xAB0]
	0x01EC1A44 BL 0x1C16CF4
	0x01EC1A48 ADRP X0, 0x223E000

ISIL:
	001 Move W8, [X0+48]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: Fusion.Simulation/StateReplicator get_Replicator()

Disassembly:
	0x01EC1A4C LDR X0, [X0 + 0xA80]
	0x01EC1A50 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+168]
	002 Return X0

Method: Fusion.Simulation/ICallbacks get_Callbacks()

Disassembly:
	0x01EC1A54 MOVZ W8, 0x1
	0x01EC1A58 STRB W8, [X26 + 0x45F]

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Boolean get_IsResume()

Disassembly:
	0x01EC1A5C LDR X0, [X25]
	0x01EC1A60 MOV X1, X31

ISIL:
	001 Move W0, [X0+208]
	002 Return X0

Method: System.Boolean get_IsInTick()

Disassembly:
	0x01EC1A64 STP X31, X31, [X31 + 0x20]
	0x01EC1A68 STR X31, [X31 + 0x30]

ISIL:
	001 Move W0, [X0+219]
	002 Return X0

Method: System.Boolean get_IsPaused()

Disassembly:
	0x01EC1A6C STR X31, [X31 + 0x48]
	0x01EC1A70 BL 0x1E32108
	0x01EC1A74 CMP W21, 0x4
	0x01EC1A78 CSET W8, EQ
	0x01EC1A7C STRB W24, [X19 + 0xD8]
	0x01EC1A80 STRB W23, [X19 + 0xD9]
	0x01EC1A84 STRB W8, [X19 + 0xDA]
	0x01EC1A88 B.EQ 0x1EC1BAC
	0x01EC1A8C TBZ X22, 0x0, 0x1EC1BAC
	0x01EC1A90 LDR X22, [X19 + 0x40]
	0x01EC1A94 CBZ X22, 0x1EC1C78
	0x01EC1A98 ADRP X10, 0x223D000
	0x01EC1A9C LDR X8, [X22]
	0x01EC1AA0 LDR X10, [X10 + 0xA90]
	0x01EC1AA4 LDRH W9, [X8 + 0x12E]
	0x01EC1AA8 LDR X1, [X10]
	0x01EC1AAC CBZ X9, 0x1EC1AD0
	0x01EC1AB0 LDR X10, [X8 + 0xB0]
	0x01EC1AB4 ADD X10, X10, 0x8
	0x01EC1AB8 LDUR X11, [X10 - 0x8]
	0x01EC1ABC CMP X11, X1
	0x01EC1AC0 B.EQ 0x1EC1AE0
	0x01EC1AC4 SUBS X9, X9, 0x1
	0x01EC1AC8 ADD X10, X10, 0x10
	0x01EC1ACC B.NE 0x1EC1AB8
	0x01EC1AD0 MOVZ W2, 0xE
	0x01EC1AD4 MOV X0, X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2519000
	005 Move W8, [X20+1109]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x2237000
	012 Move X0, [X0+3056]
	013 Call 0x1C17CF4
	014 Move X0, 0x2237000
	015 Move X0, [X0+3064]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1109], W8
	019 Add X19, X19, 221
	020 Move W8, [X19]
	021 Compare W8, 0
	022 JumpIfEqual {32}
	023 Move X8, 0x2237000
	024 Move X8, [X8+3064]
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, [X8]
	029 Move X30, [X31+32]
	030 Call Nullable`1<Boolean>.get_Value, X0
	031 Return X0
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move W0, W31
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Boolean get_IsWaitingForTheInitialTick()

Disassembly:
	0x01EC1AD8 BL 0x1C5C788
	0x01EC1ADC B 0x1EC1AF0

ISIL:
	001 Move W0, [X0+220]
	002 Return X0

Method: System.Collections.Generic.IEnumerable`1<Fusion.SimulationConnection> get_Connections()

Disassembly:
	0x01EC1AE0 LDR W9, [X10]
	0x01EC1AE4 ADD W9, W9, 0xE
	0x01EC1AE8 ADD X8, X8, W9, 0x4, SXTW
	0x01EC1AEC ADD X0, X8, 0x138
	0x01EC1AF0 LDP X8, X1, [X0]
	0x01EC1AF4 MOV X0, X22
	0x01EC1AF8 BLR X8
	0x01EC1AFC LDR X0, [X19 + 0x150]
	0x01EC1B00 CBZ X0, 0x1EC1C7C
	0x01EC1B04 ADRP X8, 0x223D000
	0x01EC1B08 LDR X8, [X8 + 0x810]
	0x01EC1B0C LDR X1, [X8]
	0x01EC1B10 BL 0x2A673D0
	0x01EC1B14 CBZ X0, 0x1EC1C80
	0x01EC1B18 ADRP X8, 0x223E000
	0x01EC1B1C LDR X8, [X8 + 0xAB0]
	0x01EC1B20 LDR X1, [X8]
	0x01EC1B24 ADD X8, X31, 0x8
	0x01EC1B28 BL 0x2755900
	0x01EC1B2C LDUR V0, [X31 + 0x8]
	0x01EC1B30 LDR X8, [X31 + 0x18]
	0x01EC1B34 ADRP X23, 0x223E000
	0x01EC1B38 STR V0, [X31 + 0x2]
	0x01EC1B3C STR X8, [X31 + 0x30]
	0x01EC1B40 LDR X23, [X23 + 0xAA0]
	0x01EC1B44 LDR X1, [X23]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2519000
	006 Move X21, 0x223F000
	007 Move W8, [X20+1110]
	008 Move X21, [X21+2368]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x223F000
	015 Move X0, [X0+2368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1110], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move TEMP, 1
	022 Not TEMP
	023 Move W1, TEMP
	024 Move X2, X31
	025 Move X20, X0
	026 Call <get_Connections>d__154..ctor, X0, X1
	027 Compare X20, 0
	028 JumpIfEqual {36}
	029 Move [X20+40], X19
	030 Move X0, X20
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0
	036 Call 0x1C17F20

Method: Fusion.Sockets.NetAddress get_LocalAddress()

Disassembly:
	0x01EC1B48 ADD X0, X31, 0x20
	0x01EC1B4C BL 0x2C04490
	0x01EC1B50 TBZ X0, 0x0, 0x1EC1B90
	0x01EC1B54 LDR X22, [X31 + 0x30]
	0x01EC1B58 CBZ X22, 0x1EC1C6C
	0x01EC1B5C MOV X0, X22
	0x01EC1B60 MOV X1, X31

ISIL:
	001 Move X9, [X0+296]
	002 Add X9, X9, 296
	003 Move X10, [X9+16]
	004 Move V0, [X9]
	005 Move [X8+16], X10
	006 Move [X8], V0
	007 Return X0

Method: Fusion.Sockets.NetConfig* get_NetConfigPointer()

Disassembly:
	0x01EC1B64 BL 0x1E9733C
	0x01EC1B68 TBZ X0, 0x0, 0x1EC1B44
	0x01EC1B6C MOV X0, X22

ISIL:
	001 Move X0, [X0+296]
	002 Move X1, X31
	003 Call NetPeer.GetConfigPointer, X0
	004 Return X0

Method: Fusion.PlayerRef get_LocalPlayer()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Double GetPlayerRtt(Fusion.PlayerRef player)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void RecvPacket()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void WritePackets()

Disassembly:
	

ISIL:
No ISIL was generated
Method: Fusion.SimulationInput GetInput(Fusion.Tick tick, Fusion.PlayerRef player)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void .ctor(Fusion.SimulationArgs args)

Disassembly:
	0x01EC1B70 MOV X1, X31
	0x01EC1B74 BL 0x1E97458
	0x01EC1B78 STR X0, [X31 + 0x48]
	0x01EC1B7C LDR X1, [X22 + 0xB0]
	0x01EC1B80 ADD X0, X31, 0x48
	0x01EC1B84 MOV X2, X31
	0x01EC1B88 BL 0x1E96914
	0x01EC1B8C B 0x1EC1B44
	0x01EC1B90 MOV X22, X31
	0x01EC1B94 ADRP X8, 0x223E000
	0x01EC1B98 LDR X8, [X8 + 0xA98]
	0x01EC1B9C LDR X1, [X8]
	0x01EC1BA0 ADD X0, X31, 0x20
	0x01EC1BA4 BL 0x2C0448C
	0x01EC1BA8 CBNZ X22, 0x1EC1C8C
	0x01EC1BAC MOV X0, X19
	0x01EC1BB0 BL 0x1EC048C
	0x01EC1BB4 MOV W1, W0
	0x01EC1BB8 ADD X0, X19, 0x48
	0x01EC1BBC MOV X2, X31
	0x01EC1BC0 BL 0x1E9023C
	0x01EC1BC4 STR W0, [X19 + 0x48]
	0x01EC1BC8 MOV X0, X19
	0x01EC1BCC BL 0x1EBDF30
	0x01EC1BD0 TBZ X0, 0x0, 0x1EC1C28
	0x01EC1BD4 LDR X22, [X19 + 0xE8]
	0x01EC1BD8 LDR W23, [X19 + 0x48]
	0x01EC1BDC MOV X0, X19
	0x01EC1BE0 BL 0x1EC0308
	0x01EC1BE4 CBZ X22, 0x1EC1C84
	0x01EC1BE8 ADRP X9, 0x223E000
	0x01EC1BEC LDR W8, [X0]
	0x01EC1BF0 LDR X9, [X9 + 0xA90]
	0x01EC1BF4 SUB W8, W23, W8
	0x01EC1BF8 LDR X2, [X9]
	0x01EC1BFC BIC W1, W8, W8, 0x1F
	0x01EC1C00 MOV X0, X22
	0x01EC1C04 BL 0x2AF16FC
	0x01EC1C08 LDR X0, [X19 + 0xE8]
	0x01EC1C0C CBZ X0, 0x1EC1C88
	0x01EC1C10 ADRP X8, 0x223E000
	0x01EC1C14 LDR V0, [X19 + 0xC8]
	0x01EC1C18 LDR W1, [X19 + 0x48]
	0x01EC1C1C LDR X8, [X8 + 0xA88]
	0x01EC1C20 LDR X2, [X8]
	0x01EC1C24 BL 0x2AF0340
	0x01EC1C28 AND W2, W20, 0x1
	0x01EC1C2C MOV X0, X19
	0x01EC1C30 MOV W1, W21
	0x01EC1C34 BL 0x1EC1E38
	0x01EC1C38 MOV X20, X31
	0x01EC1C3C MOV X0, X31
	0x01EC1C40 STRH W31, [X19 + 0xD8]
	0x01EC1C44 STRB W31, [X19 + 0xDA]
	0x01EC1C48 BL 0x1E32194
	0x01EC1C4C CBNZ X20, 0x1EC1C70
	0x01EC1C50 LDP X20, X19, [X31 + 0x80]
	0x01EC1C54 LDP X22, X21, [X31 + 0x70]
	0x01EC1C58 LDP X24, X23, [X31 + 0x60]
	0x01EC1C5C LDP X26, X25, [X31 + 0x50]
	0x01EC1C60 LDR X30, [X31 + 0x40]
	0x01EC1C64 ADD X31, X31, 0x90
	0x01EC1C68 RET
	0x01EC1C6C BL 0x1C16F20
	0x01EC1C70 MOV X0, X20
	0x01EC1C74 BL 0x1C16F18
	0x01EC1C78 BL 0x1C16F20
	0x01EC1C7C BL 0x1C16F20
	0x01EC1C80 BL 0x1C16F20
	0x01EC1C84 BL 0x1C16F20
	0x01EC1C88 BL 0x1C16F20
	0x01EC1C8C MOV X0, X22
	0x01EC1C90 BL 0x1C16F18
	0x01EC1C94 B 0x1EC1CC4
	0x01EC1C98 B 0x1EC1CC4
	0x01EC1C9C B 0x1EC1CC4
	0x01EC1CA0 B 0x1EC1CC4
	0x01EC1CA4 B 0x1EC1CC4
	0x01EC1CA8 B 0x1EC1CC4
	0x01EC1CAC B 0x1EC1CC4
	0x01EC1CB0 B 0x1EC1CC4
	0x01EC1CB4 B 0x1EC1CC4
	0x01EC1CB8 B 0x1EC1CC4
	0x01EC1CBC B 0x1EC1CC4
	0x01EC1CC0 B 0x1EC1CC4
	0x01EC1CC4 MOV X23, X0
	0x01EC1CC8 MOV W20, W1
	0x01EC1CCC B 0x1EC1D20
	0x01EC1CD0 B 0x1EC1CE0
	0x01EC1CD4 B 0x1EC1CE0
	0x01EC1CD8 B 0x1EC1CE0
	0x01EC1CDC B 0x1EC1CE0
	0x01EC1CE0 MOV X23, X0
	0x01EC1CE4 CMP W1, 0x1
	0x01EC1CE8 B.NE 0x1EC1D00
	0x01EC1CEC MOV X0, X23
	0x01EC1CF0 BL 0x3EB1AD0
	0x01EC1CF4 LDR X22, [X0]
	0x01EC1CF8 BL 0x3EB1AE0
	0x01EC1CFC B 0x1EC1B94
	0x01EC1D00 MOV X22, X31
	0x01EC1D04 ADRP X8, 0x223E000
	0x01EC1D08 LDR X8, [X8 + 0xA98]
	0x01EC1D0C MOV W20, W1
	0x01EC1D10 LDR X1, [X8]
	0x01EC1D14 ADD X0, X31, 0x20
	0x01EC1D18 BL 0x2C0448C
	0x01EC1D1C CBNZ X22, 0x1EC1D90
	0x01EC1D20 CMP W20, 0x1
	0x01EC1D24 B.NE 0x1EC1DE4
	0x01EC1D28 MOV X0, X23
	0x01EC1D2C BL 0x3EB1AD0
	0x01EC1D30 MOV X20, X0
	0x01EC1D34 ADRP X0, 0x2232000
	0x01EC1D38 LDR X0, [X0 + 0x7D0]
	0x01EC1D3C BL 0x1C16D08
	0x01EC1D40 LDR X8, [X20]
	0x01EC1D44 LDR X1, [X8]
	0x01EC1D48 BL 0x1C17270
	0x01EC1D4C TBZ X0, 0x0, 0x1EC1D98
	0x01EC1D50 LDR X20, [X20]
	0x01EC1D54 BL 0x3EB1AE0
	0x01EC1D58 ADRP X0, 0x223A000
	0x01EC1D5C LDR X0, [X0 + 0x8B0]
	0x01EC1D60 BL 0x1C16D08
	0x01EC1D64 LDR W8, [X0 + 0xE0]
	0x01EC1D68 CBNZ W8, 0x1EC1D70
	0x01EC1D6C BL 0x1C16DFC
	0x01EC1D70 ADRP X0, 0x223E000
	0x01EC1D74 LDR X0, [X0 + 0xAB8]
	0x01EC1D78 BL 0x1C16D08
	0x01EC1D7C MOV X2, X0
	0x01EC1D80 MOV X0, X19
	0x01EC1D84 MOV X1, X20
	0x01EC1D88 BL 0x2213878
	0x01EC1D8C B 0x1EC1C38
	0x01EC1D90 MOV X0, X22
	0x01EC1D94 BL 0x1C16F18
	0x01EC1D98 MOVZ W0, 0x8
	0x01EC1D9C BL 0x3EB1AF0
	0x01EC1DA0 LDR X8, [X20]
	0x01EC1DA4 STR X8, [X0]
	0x01EC1DA8 ADRP X1, 0x1FF3000
	0x01EC1DAC ADD X1, X1, 0xE58
	0x01EC1DB0 MOV X2, X31
	0x01EC1DB4 BL 0x3EB1B00
	0x01EC1DB8 MOV X23, X0
	0x01EC1DBC MOV W20, W1
	0x01EC1DC0 B 0x1EC1DE4
	0x01EC1DC4 MOV X23, X0
	0x01EC1DC8 B 0x1EC1D04
	0x01EC1DCC MOV X20, X1
	0x01EC1DD0 MOV X23, X0
	0x01EC1DD4 BL 0x3EB1AE0
	0x01EC1DD8 B 0x1EC1DE4
	0x01EC1DDC MOV X20, X1
	0x01EC1DE0 MOV X23, X0
	0x01EC1DE4 MOVZ W8, 0x1
	0x01EC1DE8 CMP W20, W8
	0x01EC1DEC B.NE 0x1EC1E04
	0x01EC1DF0 MOV X0, X23
	0x01EC1DF4 BL 0x3EB1AD0
	0x01EC1DF8 LDR X20, [X0]
	0x01EC1DFC BL 0x3EB1AE0
	0x01EC1E00 B 0x1EC1C3C
	0x01EC1E04 MOV X20, X31
	0x01EC1E08 B 0x1EC1E10
	0x01EC1E0C MOV X23, X0
	0x01EC1E10 STRH W31, [X19 + 0xD8]
	0x01EC1E14 STRB W31, [X19 + 0xDA]
	0x01EC1E18 MOV X0, X31
	0x01EC1E1C BL 0x1E32194
	0x01EC1E20 CBNZ X20, 0x1EC1E2C
	0x01EC1E24 MOV X0, X23
	0x01EC1E28 BL 0x1D2C690
	0x01EC1E2C MOV X0, X20
	0x01EC1E30 BL 0x1C16F18
	0x01EC1E34 BL 0x1990590
	0x01EC1E38 SUB X31, X31, 0xB0
	0x01EC1E3C STP X30, X0, [X31 + 0x60]
	0x01EC1E40 STP X26, X25, [X31 + 0x70]
	0x01EC1E44 STP X24, X23, [X31 + 0x80]
	0x01EC1E48 STP X22, X21, [X31 + 0x90]
	0x01EC1E4C STP X20, X19, [X31 + 0xA0]
	0x01EC1E50 ADRP X21, 0x2518000
	0x01EC1E54 LDRB W8, [X21 + 0x482]
	0x01EC1E58 MOV W20, W1
	0x01EC1E5C MOV X19, X0
	0x01EC1E60 AND W9, W2, 0x1
	0x01EC1E64 STRB W9, [X31 + 0x5C]
	0x01EC1E68 TBNZ X8, 0x0, 0x1EC1ED4
	0x01EC1E6C ADRP X0, 0x223E000
	0x01EC1E70 LDR X0, [X0 + 0xAC0]
	0x01EC1E74 BL 0x1C16CF4
	0x01EC1E78 ADRP X0, 0x223E000
	0x01EC1E7C LDR X0, [X0 + 0xAC8]
	0x01EC1E80 BL 0x1C16CF4
	0x01EC1E84 ADRP X0, 0x223E000
	0x01EC1E88 LDR X0, [X0 + 0xAD0]
	0x01EC1E8C BL 0x1C16CF4
	0x01EC1E90 ADRP X0, 0x223E000
	0x01EC1E94 LDR X0, [X0 + 0xAD8]
	0x01EC1E98 BL 0x1C16CF4
	0x01EC1E9C ADRP X0, 0x223E000
	0x01EC1EA0 LDR X0, [X0 + 0xAE0]
	0x01EC1EA4 BL 0x1C16CF4
	0x01EC1EA8 ADRP X0, 0x223D000
	0x01EC1EAC LDR X0, [X0 + 0xA90]
	0x01EC1EB0 BL 0x1C16CF4
	0x01EC1EB4 ADRP X0, 0x223E000
	0x01EC1EB8 LDR X0, [X0 + 0xAE8]
	0x01EC1EBC BL 0x1C16CF4
	0x01EC1EC0 ADRP X0, 0x223E000
	0x01EC1EC4 LDR X0, [X0 + 0xAF0]
	0x01EC1EC8 BL 0x1C16CF4
	0x01EC1ECC MOVZ W8, 0x1
	0x01EC1ED0 STRB W8, [X21 + 0x482]
	0x01EC1ED4 ADD X8, X31, 0x68
	0x01EC1ED8 ADD X9, X31, 0x5C
	0x01EC1EDC STP X31, X8, [X31 + 0x18]
	0x01EC1EE0 ADD X8, X31, 0x3C
	0x01EC1EE4 STP X31, X31, [X31 + 0x40]
	0x01EC1EE8 STR X31, [X31 + 0x50]
	0x01EC1EEC STR W31, [X31 + 0x3C]
	0x01EC1EF0 STP X9, X8, [X31 + 0x28]
	0x01EC1EF4 LDR X8, [X19 + 0x28]
	0x01EC1EF8 LDR X0, [X19 + 0xC0]
	0x01EC1EFC STR W20, [X19 + 0x50]
	0x01EC1F00 ADD X8, X8, 0x1
	0x01EC1F04 STR X8, [X19 + 0x28]
	0x01EC1F08 CBZ X0, 0x1EC21EC
	0x01EC1F0C ADRP X8, 0x223E000
	0x01EC1F10 LDR X8, [X8 + 0xAE0]
	0x01EC1F14 LDR X1, [X8]
	0x01EC1F18 ADD X8, X31, 0x0
	0x01EC1F1C BL 0x2DC3818
	0x01EC1F20 ADRP X19, 0x223E000
	0x01EC1F24 ADRP X20, 0x223E000
	0x01EC1F28 ADRP X25, 0x223E000
	0x01EC1F2C ADRP X22, 0x223D000
	0x01EC1F30 LDR X19, [X19 + 0xAD0]
	0x01EC1F34 LDR X20, [X20 + 0xAC8]
	0x01EC1F38 LDR X25, [X25 + 0xAE8]
	0x01EC1F3C LDR X22, [X22 + 0xA90]
	0x01EC1F40 LDR V0, [X31]
	0x01EC1F44 LDR X8, [X31 + 0x10]
	0x01EC1F48 ADRP X23, 0x223E000
	0x01EC1F4C ADRP X24, 0x223E000
	0x01EC1F50 LDR X23, [X23 + 0xAF0]
	0x01EC1F54 LDR X24, [X24 + 0xAC0]
	0x01EC1F58 STR V0, [X31 + 0x4]
	0x01EC1F5C STR X8, [X31 + 0x50]
	0x01EC1F60 LDR X1, [X19]
	0x01EC1F64 ADD X0, X31, 0x40
	0x01EC1F68 BL 0x2BC5F20
	0x01EC1F6C TBZ X0, 0x0, 0x1EC1FAC
	0x01EC1F70 LDR X0, [X31 + 0x68]
	0x01EC1F74 LDR W2, [X31 + 0x50]
	0x01EC1F78 LDR X8, [X0]
	0x01EC1F7C LDR W1, [X0 + 0x48]
	0x01EC1F80 LDR X9, [X8 + 0x2A8]
	0x01EC1F84 LDR X3, [X8 + 0x2B0]
	0x01EC1F88 BLR X9
	0x01EC1F8C MOV X1, X0
	0x01EC1F90 CBZ X1, 0x1EC1F60
	0x01EC1F94 LDR X8, [X31 + 0x68]
	0x01EC1F98 LDR X0, [X8 + 0xA0]
	0x01EC1F9C CBZ X0, 0x1EC21E8
	0x01EC1FA0 MOV X2, X31
	0x01EC1FA4 BL 0x1ED90AC
	0x01EC1FA8 B 0x1EC1F60
	0x01EC1FAC MOV X19, X31
	0x01EC1FB0 LDR X1, [X20]
	0x01EC1FB4 ADD X0, X31, 0x40
	0x01EC1FB8 BL 0x2BC5F1C
	0x01EC1FBC CBNZ X19, 0x1EC21F0
	0x01EC1FC0 LDR X0, [X31 + 0x68]
	0x01EC1FC4 BL 0x1EC0864
	0x01EC1FC8 LDR X8, [X31 + 0x68]
	0x01EC1FCC TBZ X0, 0x0, 0x1EC2010
	0x01EC1FD0 LDRB W9, [X8 + 0xD9]
	0x01EC1FD4 CBZ W9, 0x1EC2010
	0x01EC1FD8 LDRB W9, [X8 + 0xDA]
	0x01EC1FDC CBNZ W9, 0x1EC1FF4
	0x01EC1FE0 LDR X9, [X8 + 0x58]
	0x01EC1FE4 CBZ X9, 0x1EC2208
	0x01EC1FE8 LDR W9, [X9 + 0x38]
	0x01EC1FEC CMP W9, 0x2
	0x01EC1FF0 B.NE 0x1EC2010
	0x01EC1FF4 LDR W20, [X8 + 0x50]
	0x01EC1FF8 MOVZ W9, 0x2
	0x01EC1FFC STR W9, [X8 + 0x50]
	0x01EC2000 MOV X0, X8
	0x01EC2004 BL 0x1EC6C5C
	0x01EC2008 LDR X8, [X31 + 0x68]
	0x01EC200C STR W20, [X8 + 0x50]
	0x01EC2010 LDRB W9, [X8 + 0xDC]
	0x01EC2014 CBZ W9, 0x1EC2030
	0x01EC2018 LDR X9, [X8]
	0x01EC201C STRB W31, [X8 + 0xDC]
	0x01EC2020 LDR X1, [X9 + 0x340]
	0x01EC2024 LDR X10, [X9 + 0x338]
	0x01EC2028 MOV X0, X8
	0x01EC202C BLR X10
	0x01EC2030 LDR X0, [X25]
	0x01EC2034 MOV X1, X31
	0x01EC2038 BL 0x1E32108
	0x01EC203C LDR X8, [X31 + 0x68]
	0x01EC2040 LDR X19, [X8 + 0x40]
	0x01EC2044 CBZ X19, 0x1EC21F8
	0x01EC2048 LDR X8, [X19]
	0x01EC204C LDR X1, [X22]
	0x01EC2050 LDRH W9, [X8 + 0x12E]
	0x01EC2054 CBZ X9, 0x1EC2078
	0x01EC2058 LDR X10, [X8 + 0xB0]
	0x01EC205C ADD X10, X10, 0x8
	0x01EC2060 LDUR X11, [X10 - 0x8]
	0x01EC2064 CMP X11, X1
	0x01EC2068 B.EQ 0x1EC2088
	0x01EC206C SUBS X9, X9, 0x1
	0x01EC2070 ADD X10, X10, 0x10
	0x01EC2074 B.NE 0x1EC2060
	0x01EC2078 MOVZ W2, 0x9
	0x01EC207C MOV X0, X19
	0x01EC2080 BL 0x1C5C788
	0x01EC2084 B 0x1EC2098
	0x01EC2088 LDR W9, [X10]
	0x01EC208C ADD W9, W9, 0x9
	0x01EC2090 ADD X8, X8, W9, 0x4, SXTW
	0x01EC2094 ADD X0, X8, 0x138
	0x01EC2098 LDP X8, X1, [X0]
	0x01EC209C MOV X0, X19
	0x01EC20A0 BLR X8
	0x01EC20A4 MOV X0, X31
	0x01EC20A8 BL 0x1E32194
	0x01EC20AC LDR X0, [X31 + 0x68]
	0x01EC20B0 LDR W1, [X0 + 0x48]
	0x01EC20B4 BL 0x1EC6E44
	0x01EC20B8 LDR X0, [X31 + 0x68]
	0x01EC20BC MOVZ W8, 0x1
	0x01EC20C0 STRB W8, [X0 + 0xDB]
	0x01EC20C4 BL 0x1EC44A8
	0x01EC20C8 LDR X8, [X31 + 0x68]
	0x01EC20CC LDR X0, [X8 + 0x180]
	0x01EC20D0 CBZ X0, 0x1EC21FC
	0x01EC20D4 LDR X1, [X24]
	0x01EC20D8 BL 0x2AE401C
	0x01EC20DC LDR X8, [X31 + 0x68]
	0x01EC20E0 LDR X19, [X8 + 0x40]
	0x01EC20E4 CBZ X19, 0x1EC2204
	0x01EC20E8 LDR X8, [X19]
	0x01EC20EC LDR X1, [X22]
	0x01EC20F0 LDRH W9, [X8 + 0x12E]
	0x01EC20F4 CBZ X9, 0x1EC2118
	0x01EC20F8 LDR X10, [X8 + 0xB0]
	0x01EC20FC ADD X10, X10, 0x8
	0x01EC2100 LDUR X11, [X10 - 0x8]
	0x01EC2104 CMP X11, X1
	0x01EC2108 B.EQ 0x1EC2128
	0x01EC210C SUBS X9, X9, 0x1
	0x01EC2110 ADD X10, X10, 0x10
	0x01EC2114 B.NE 0x1EC2100
	0x01EC2118 MOV X0, X19
	0x01EC211C MOV W2, W31
	0x01EC2120 BL 0x1C5C788
	0x01EC2124 B 0x1EC2134
	0x01EC2128 LDRSW X9, [X10]
	0x01EC212C ADD X8, X8, X9, 0x4, LSL
	0x01EC2130 ADD X0, X8, 0x138
	0x01EC2134 LDP X8, X1, [X0]
	0x01EC2138 MOV X0, X19
	0x01EC213C BLR X8
	0x01EC2140 LDR X8, [X31 + 0x68]
	0x01EC2144 STRB W31, [X8 + 0xDB]
	0x01EC2148 LDR X0, [X23]
	0x01EC214C MOV X1, X31
	0x01EC2150 BL 0x1E32108
	0x01EC2154 LDR X8, [X31 + 0x68]
	0x01EC2158 LDR X19, [X8 + 0x40]
	0x01EC215C CBZ X19, 0x1EC2200
	0x01EC2160 LDR X8, [X19]
	0x01EC2164 LDR X1, [X22]
	0x01EC2168 LDRH W9, [X8 + 0x12E]
	0x01EC216C CBZ X9, 0x1EC2190
	0x01EC2170 LDR X10, [X8 + 0xB0]
	0x01EC2174 ADD X10, X10, 0x8
	0x01EC2178 LDUR X11, [X10 - 0x8]
	0x01EC217C CMP X11, X1
	0x01EC2180 B.EQ 0x1EC21A0
	0x01EC2184 SUBS X9, X9, 0x1
	0x01EC2188 ADD X10, X10, 0x10
	0x01EC218C B.NE 0x1EC2178
	0x01EC2190 MOVZ W2, 0x8
	0x01EC2194 MOV X0, X19
	0x01EC2198 BL 0x1C5C788
	0x01EC219C B 0x1EC21B0
	0x01EC21A0 LDR W9, [X10]
	0x01EC21A4 ADD W9, W9, 0x8
	0x01EC21A8 ADD X8, X8, W9, 0x4, SXTW
	0x01EC21AC ADD X0, X8, 0x138
	0x01EC21B0 LDP X8, X1, [X0]
	0x01EC21B4 MOV X0, X19
	0x01EC21B8 BLR X8
	0x01EC21BC MOV X0, X31
	0x01EC21C0 BL 0x1E32194
	0x01EC21C4 ADD X0, X31, 0x18
	0x01EC21C8 BL 0x1997920
	0x01EC21CC LDP X20, X19, [X31 + 0xA0]
	0x01EC21D0 LDP X22, X21, [X31 + 0x90]
	0x01EC21D4 LDP X24, X23, [X31 + 0x80]
	0x01EC21D8 LDP X26, X25, [X31 + 0x70]
	0x01EC21DC LDR X30, [X31 + 0x60]
	0x01EC21E0 ADD X31, X31, 0xB0
	0x01EC21E4 RET
	0x01EC21E8 BL 0x1C16F20
	0x01EC21EC BL 0x1C16F20
	0x01EC21F0 MOV X0, X19
	0x01EC21F4 BL 0x1C16F18
	0x01EC21F8 BL 0x1C16F20
	0x01EC21FC BL 0x1C16F20
	0x01EC2200 BL 0x1C16F20
	0x01EC2204 BL 0x1C16F20
	0x01EC2208 BL 0x1C16F20
	0x01EC220C B 0x1EC23A8
	0x01EC2210 CMP W1, 0x1
	0x01EC2214 MOV X21, X0
	0x01EC2218 B.NE 0x1EC2240
	0x01EC221C MOV X0, X21
	0x01EC2220 BL 0x3EB1AD0
	0x01EC2224 LDR X19, [X0]
	0x01EC2228 BL 0x3EB1AE0
	0x01EC222C LDR X8, [X31 + 0x68]
	0x01EC2230 STR W20, [X8 + 0x50]
	0x01EC2234 CBZ X19, 0x1EC2010
	0x01EC2238 MOV X0, X19
	0x01EC223C BL 0x1C16F18
	0x01EC2240 LDR X8, [X31 + 0x68]
	0x01EC2244 MOV W26, W1
	0x01EC2248 STR W20, [X8 + 0x50]
	0x01EC224C B 0x1EC23F8
	0x01EC2250 B 0x1EC23A8
	0x01EC2254 LDR X8, [X31 + 0x68]
	0x01EC2258 STR W20, [X8 + 0x50]
	0x01EC225C CBZ X19, 0x1EC23A8
	0x01EC2260 MOV X0, X19
	0x01EC2264 BL 0x1C16F18
	0x01EC2268 B 0x1EC2288
	0x01EC226C B 0x1EC23A8
	0x01EC2270 B 0x1EC23A8
	0x01EC2274 B 0x1EC23A8
	0x01EC2278 B 0x1EC23A8
	0x01EC227C B 0x1EC2288
	0x01EC2280 B 0x1EC23A8
	0x01EC2284 B 0x1EC23A8
	0x01EC2288 MOV X21, X0
	0x01EC228C MOV W26, W1
	0x01EC2290 CMP W1, 0x1
	0x01EC2294 B.NE 0x1EC2350
	0x01EC2298 MOV X0, X21
	0x01EC229C BL 0x3EB1AD0
	0x01EC22A0 MOV X19, X0
	0x01EC22A4 ADRP X0, 0x2231000
	0x01EC22A8 LDR X0, [X0 + 0x7D0]
	0x01EC22AC BL 0x1C16D08
	0x01EC22B0 LDR X8, [X19]
	0x01EC22B4 LDR X1, [X8]
	0x01EC22B8 BL 0x1C17270
	0x01EC22BC TBZ X0, 0x0, 0x1EC2304
	0x01EC22C0 LDR X19, [X19]
	0x01EC22C4 BL 0x3EB1AE0
	0x01EC22C8 ADRP X0, 0x2239000
	0x01EC22CC LDR X0, [X0 + 0x8B0]
	0x01EC22D0 BL 0x1C16D08
	0x01EC22D4 LDR W8, [X0 + 0xE0]
	0x01EC22D8 CBNZ W8, 0x1EC22E0
	0x01EC22DC BL 0x1C16DFC
	0x01EC22E0 LDR X20, [X31 + 0x68]
	0x01EC22E4 ADRP X0, 0x223D000
	0x01EC22E8 LDR X0, [X0 + 0xAB8]
	0x01EC22EC BL 0x1C16D08
	0x01EC22F0 MOV X2, X0
	0x01EC22F4 MOV X0, X20
	0x01EC22F8 MOV X1, X19
	0x01EC22FC BL 0x2213878
	0x01EC2300 B 0x1EC2140
	0x01EC2304 MOVZ W0, 0x8
	0x01EC2308 BL 0x3EB1AF0
	0x01EC230C LDR X8, [X19]
	0x01EC2310 STR X8, [X0]
	0x01EC2314 ADRP X1, 0x1FF2000
	0x01EC2318 ADD X1, X1, 0xE58
	0x01EC231C MOV X2, X31
	0x01EC2320 BL 0x3EB1B00
	0x01EC2324 B 0x1EC2494
	0x01EC2328 MOV X21, X0
	0x01EC232C MOV W26, W1
	0x01EC2330 B 0x1EC2350
	0x01EC2334 MOV X20, X1
	0x01EC2338 MOV X21, X0
	0x01EC233C BL 0x3EB1AE0
	0x01EC2340 MOV W26, W20
	0x01EC2344 B 0x1EC2350
	0x01EC2348 MOV X26, X1
	0x01EC234C MOV X21, X0
	0x01EC2350 MOVZ W8, 0x1
	0x01EC2354 CMP W26, W8
	0x01EC2358 B.NE 0x1EC2380
	0x01EC235C MOV X0, X21
	0x01EC2360 BL 0x3EB1AD0
	0x01EC2364 LDR X19, [X0]
	0x01EC2368 BL 0x3EB1AE0
	0x01EC236C LDR X8, [X31 + 0x68]
	0x01EC2370 STRB W31, [X8 + 0xDB]
	0x01EC2374 CBZ X19, 0x1EC2148
	0x01EC2378 MOV X0, X19
	0x01EC237C BL 0x1C16F18
	0x01EC2380 LDR X8, [X31 + 0x68]
	0x01EC2384 STRB W31, [X8 + 0xDB]
	0x01EC2388 B 0x1EC23F8
	0x01EC238C B 0x1EC23A8
	0x01EC2390 LDR X8, [X31 + 0x68]
	0x01EC2394 STRB W31, [X8 + 0xDB]
	0x01EC2398 CBZ X19, 0x1EC23A8

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X29
	003 Move [X31+136], X30
	004 Move [X31+144], X28
	005 Move [X31+152], X27
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move [X31+8], X1
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X22, 0x223F000
	017 Move X22, [X22+2376]
	018 Move [X31], X8
	019 Move X8, [X8+40]
	020 Move X21, 0x223F000
	021 Move X29, 0x223F000
	022 Move X28, 0x223F000
	023 Move X24, 0x2519000
	024 Move X21, [X21+2384]
	025 Move X29, [X29+2392]
	026 Move X28, [X28+2400]
	027 Move [X31+120], X8
	028 Move X27, 0x223F000
	029 Move X26, 0x223F000
	030 Move X23, 0x223F000
	031 Move X20, 0x223F000
	032 Move X25, 0x2236000
	033 Move W8, [X24+1111]
	034 Move X27, [X27+2408]
	035 Move X26, [X26+2416]
	036 Move X23, [X23+2424]
	037 Move X20, [X20+2432]
	038 Move X25, [X25+3648]
	039 Move X19, X0
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {160}
	044 Move X0, 0x223F000
	045 Move X0, [X0+2384]
	046 Call 0x1C17CF4
	047 Move X0, 0x223F000
	048 Move X0, [X0+2440]
	049 Call 0x1C17CF4
	050 Move X0, 0x223F000
	051 Move X0, [X0+2448]
	052 Call 0x1C17CF4
	053 Move X0, 0x223F000
	054 Move X0, [X0+2432]
	055 Call 0x1C17CF4
	056 Move X0, 0x223F000
	057 Move X0, [X0+2416]
	058 Call 0x1C17CF4
	059 Move X0, 0x223F000
	060 Move X0, [X0+2456]
	061 Call 0x1C17CF4
	062 Move X0, 0x223F000
	063 Move X0, [X0+2464]
	064 Call 0x1C17CF4
	065 Move X0, 0x223F000
	066 Move X0, [X0+2472]
	067 Call 0x1C17CF4
	068 Move X0, 0x223F000
	069 Move X0, [X0+2480]
	070 Call 0x1C17CF4
	071 Move X0, 0x223F000
	072 Move X0, [X0+2488]
	073 Call 0x1C17CF4
	074 Move X0, 0x223F000
	075 Move X0, [X0+2424]
	076 Call 0x1C17CF4
	077 Move X0, 0x223F000
	078 Move X0, [X0+2496]
	079 Call 0x1C17CF4
	080 Move X0, 0x223F000
	081 Move X0, [X0+2504]
	082 Call 0x1C17CF4
	083 Move X0, 0x223F000
	084 Move X0, [X0+2408]
	085 Call 0x1C17CF4
	086 Move X0, 0x223F000
	087 Move X0, [X0+2376]
	088 Call 0x1C17CF4
	089 Move X0, 0x223F000
	090 Move X0, [X0+2512]
	091 Call 0x1C17CF4
	092 Move X0, 0x223F000
	093 Move X0, [X0+2520]
	094 Call 0x1C17CF4
	095 Move X0, 0x223F000
	096 Move X0, [X0+2528]
	097 Call 0x1C17CF4
	098 Move X0, 0x223F000
	099 Move X0, [X0+2536]
	100 Call 0x1C17CF4
	101 Move X0, 0x223F000
	102 Move X0, [X0+2544]
	103 Call 0x1C17CF4
	104 Move X0, 0x223F000
	105 Move X0, [X0+2552]
	106 Call 0x1C17CF4
	107 Move X0, 0x223F000
	108 Move X0, [X0+2560]
	109 Call 0x1C17CF4
	110 Move X0, 0x223F000
	111 Move X0, [X0+2568]
	112 Call 0x1C17CF4
	113 Move X0, 0x223F000
	114 Move X0, [X0+2576]
	115 Call 0x1C17CF4
	116 Move X0, 0x2236000
	117 Move X0, [X0+920]
	118 Call 0x1C17CF4
	119 Move X0, 0x223E000
	120 Move X0, [X0+888]
	121 Call 0x1C17CF4
	122 Move X0, 0x2236000
	123 Move X0, [X0+3648]
	124 Call 0x1C17CF4
	125 Move X0, 0x223F000
	126 Move X0, [X0+2584]
	127 Call 0x1C17CF4
	128 Move X0, 0x223F000
	129 Move X0, [X0+2592]
	130 Call 0x1C17CF4
	131 Move X0, 0x223F000
	132 Move X0, [X0+2600]
	133 Call 0x1C17CF4
	134 Move X0, 0x223F000
	135 Move X0, [X0+2608]
	136 Call 0x1C17CF4
	137 Move X0, 0x223F000
	138 Move X0, [X0+2616]
	139 Call 0x1C17CF4
	140 Move X0, 0x223F000
	141 Move X0, [X0+2624]
	142 Call 0x1C17CF4
	143 Move X0, 0x223F000
	144 Move X0, [X0+2400]
	145 Call 0x1C17CF4
	146 Move X0, 0x223F000
	147 Move X0, [X0+2632]
	148 Call 0x1C17CF4
	149 Move X0, 0x223F000
	150 Move X0, [X0+2640]
	151 Call 0x1C17CF4
	152 Move X0, 0x223F000
	153 Move X0, [X0+2392]
	154 Call 0x1C17CF4
	155 Move X0, 0x223F000
	156 Move X0, [X0+2648]
	157 Call 0x1C17CF4
	158 Move W8, 1
	159 Move [X24+1111], W8
	160 Move X0, [X22]
	161 Call 0x1C17F10
	162 Move X1, [X21]
	163 Move X21, X0
	164 Call Dictionary`2<Int32, Object>..ctor, X0
	165 Move [X19+16], X21
	166 Move X0, [X29]
	167 Call 0x1C17F10
	168 Move X1, [X28]
	169 Move X21, X0
	170 Call Stack`1<Object>..ctor, X0
	171 Move [X19+24], X21
	172 Move X0, [X27]
	173 Call 0x1C17F10
	174 Move X1, [X26]
	175 Move X21, X0
	176 Call Dictionary`2<Int32, Object>..ctor, X0
	177 Move [X19+32], X21
	178 Move X0, [X23]
	179 Call 0x1C17F10
	180 Move X1, [X20]
	181 Move X21, X0
	182 Call Dictionary`2<Int32, Object>..ctor, X0
	183 Move [X19+176], X21
	184 Move X0, [X25]
	185 Move W8, [X0+224]
	186 Compare W8, 0
	187 JumpIfNotEqual {189}
	188 Call 0x1C17DFC
	189 Move X20, 0x2519000
	190 Move W8, [X20+1206]
	191 Compare W8, 0
	192 JumpIfNotEqual {198}
	193 Move X0, 0x2236000
	194 Move X0, [X0+3648]
	195 Call 0x1C17CF4
	196 Move W8, 1
	197 Move [X20+1206], W8
	198 Move X20, 0x223F000
	199 Move X22, 0x223F000
	200 Move X20, [X20+2504]
	201 Move X22, [X22+2448]
	202 Move X0, [X25]
	203 Move X26, 0x223F000
	204 Move X21, X25
	205 Move X25, 0x223F000
	206 Move X29, 0x223F000
	207 Move X28, 0x223F000
	208 Move X27, 0x223F000
	209 Move X23, 0x223F000
	210 Move X26, [X26+2600]
	211 Move X25, [X25+2592]
	212 Move X29, [X29+2528]
	213 Move W8, [X0+224]
	214 Move X28, [X28+2472]
	215 Move X27, [X27+2640]
	216 Move X23, [X23+2632]
	217 Compare W8, 0
	218 JumpIfNotEqual {221}
	219 Call 0x1C17DFC
	220 Move X0, [X21]
	221 Move X24, X21
	222 Move X8, [X0+184]
	223 Move X0, [X20]
	224 Move X21, [X8]
	225 Call 0x1C17F10
	226 Move X2, [X22]
	227 Move X1, X21
	228 Move X22, X0
	229 Call Dictionary`2<PlayerRef, Object>..ctor, X0, X1
	230 Move [X19+184], X22
	231 Move X0, [X26]
	232 Call 0x1C17F10
	233 Move X1, [X25]
	234 Move X21, X0
	235 Call Queue`1<ValueTuple`2<PlayerRef, Boolean>>..ctor, X0
	236 Move [X19+240], X21
	237 Move X0, [X29]
	238 Call 0x1C17F10
	239 Move X1, [X28]
	240 Move X21, X0
	241 Call Dictionary`2<UInt64, PlayerRefMapping>..ctor, X0
	242 Move [X19+256], X21
	243 Move X0, [X27]
	244 Call 0x1C17F10
	245 Move X1, [X23]
	246 Move X21, X0
	247 Call Stack`1<Object>..ctor, X0
	248 Move W8, 1023
	249 Move W9, 1
	250 Move X0, X19
	251 Move X1, X31
	252 Move [X19+320], X21
	253 Move [X19+328], W8
	254 Move [X19+400], W9
	255 Call Object..ctor, X0
	256 Move X8, 0x223F000
	257 Move X8, [X8+2536]
	258 Move X0, [X8]
	259 Call 0x1C17F10
	260 Move X1, X31
	261 Move X21, X0
	262 Call FusionStatisticsManager..ctor, X0
	263 Move X28, [X31+8]
	264 Move [X19+224], X21
	265 Move W8, [X28]
	266 Move [X19+76], W8
	267 Move X8, [X28+40]
	268 Compare X8, 0
	269 JumpIfEqual {556}
	270 Move X8, [X8+64]
	271 Move [X19+88], X8
	272 Move X8, [X28+40]
	273 Move [X19+96], X8
	274 Compare X8, 0
	275 JumpIfEqual {556}
	276 Move X0, [X8+112]
	277 Compare X0, 0
	278 JumpIfEqual {556}
	279 Move X1, X31
	280 Call HeapConfiguration.ToAllocatorConfig, X0
	281 And X1, X1, 0
	282 Move X2, X31
	283 Call Allocator.Create, X0
	284 Move X8, [X19+96]
	285 Move [X19+408], X0
	286 Compare X8, 0
	287 JumpIfEqual {556}
	288 Move X0, [X8+112]
	289 Compare X0, 0
	290 JumpIfEqual {556}
	291 Move X20, 0x223F000
	292 Move X20, [X20+2584]
	293 Move X1, X31
	294 Call HeapConfiguration.ToAllocatorConfig, X0
	295 And X1, X1, 0
	296 Move X2, X31
	297 Call Allocator.Create, X0
	298 Move [X19+416], X0
	299 Move X9, [X28+48]
	300 Move W8, 1
	301 NotImplemented "Instruction STRH not yet implemented."
	302 Move [X19+220], W8
	303 Move [X19+64], X9
	304 Move X0, [X20]
	305 Move X22, [X19+88]
	306 Move X23, [X19+408]
	307 Call 0x1C17F10
	308 Move X1, X22
	309 Move X2, X23
	310 Move X3, X31
	311 Move X21, X0
	312 Call Pool..ctor, X0, X1, X2
	313 Move [X19+152], X21
	314 Compare X21, 0
	315 JumpIfEqual {556}
	316 Move X0, X21
	317 Move X1, X31
	318 Call Pool.Acquire, X0
	319 Move X8, [X19+88]
	320 Move [X19+144], X0
	321 Compare X8, 0
	322 JumpIfEqual {556}
	323 Move X9, 0x223E000
	324 Move X9, [X9+2624]
	325 Move W21, [X8+36]
	326 Move X0, [X9]
	327 Call 0x1C17F10
	328 Move W1, W21
	329 Move X2, X31
	330 Move X22, X0
	331 Call SimulationInputCollection..ctor, X0, X1
	332 Move [X19+160], X22
	333 Move X20, 0x2518000
	334 Move W8, [X20+1206]
	335 Compare W8, 0
	336 JumpIfNotEqual {342}
	337 Move X0, 0x2235000
	338 Move X0, [X0+3648]
	339 Call 0x1C17CF4
	340 Move W8, 1
	341 Move [X20+1206], W8
	342 Move X0, [X24]
	343 Move X22, 0x223E000
	344 Move X20, 0x223E000
	345 Move X23, 0x2235000
	346 Move W8, [X0+224]
	347 Move X22, [X22+2576]
	348 Move X20, [X20+2544]
	349 Move X23, [X23+920]
	350 Compare W8, 0
	351 JumpIfNotEqual {354}
	352 Call 0x1C17DFC
	353 Move X0, [X24]
	354 Move X8, [X0+184]
	355 Move X0, [X22]
	356 Move X21, [X8]
	357 Call 0x1C17F10
	358 Move X2, [X20]
	359 Move X1, X21
	360 Move X22, X0
	361 Call HashSet`1<PlayerRef>..ctor, X0, X1
	362 Move [X19+192], X22
	363 Move X0, [X23]
	364 Move W8, [X0+224]
	365 Compare W8, 0
	366 JumpIfNotEqual {368}
	367 Call 0x1C17DFC
	368 Move X24, 0x2518000
	369 Move W8, [X24+1207]
	370 Compare W8, 0
	371 JumpIfNotEqual {377}
	372 Move X0, 0x2235000
	373 Move X0, [X0+920]
	374 Call 0x1C17CF4
	375 Move W8, 1
	376 Move [X24+1207], W8
	377 Move X0, [X23]
	378 Move X22, 0x223E000
	379 Move X20, 0x223E000
	380 Move X25, 0x223D000
	381 Move W8, [X0+224]
	382 Move X22, [X22+2520]
	383 Move X20, [X20+2456]
	384 Move X25, [X25+888]
	385 Compare W8, 0
	386 JumpIfNotEqual {389}
	387 Call 0x1C17DFC
	388 Move X0, [X23]
	389 Move X8, [X0+184]
	390 Move X0, [X22]
	391 Move X21, [X8]
	392 Call 0x1C17F10
	393 Move X2, [X20]
	394 Move X1, X21
	395 Move X22, X0
	396 Call Dictionary`2<NetworkId, Object>..ctor, X0, X1
	397 Move [X19+336], X22
	398 Move X0, [X25]
	399 Move W8, [X0+224]
	400 Compare W8, 0
	401 JumpIfNotEqual {403}
	402 Call 0x1C17DFC
	403 Move X20, 0x2518000
	404 Move W8, [X20+1208]
	405 Compare W8, 0
	406 JumpIfNotEqual {412}
	407 Move X0, 0x223D000
	408 Move X0, [X0+888]
	409 Call 0x1C17CF4
	410 Move W8, 1
	411 Move [X20+1208], W8
	412 Move X0, [X25]
	413 Move X22, 0x223E000
	414 Move X20, 0x223E000
	415 Move X27, 0x223E000
	416 Move X26, 0x223E000
	417 Move W8, [X0+224]
	418 Move X22, [X22+2496]
	419 Move X20, [X20+2480]
	420 Move X27, [X27+2512]
	421 Move X26, [X26+2464]
	422 Compare W8, 0
	423 JumpIfNotEqual {426}
	424 Call 0x1C17DFC
	425 Move X0, [X25]
	426 Move X8, [X0+184]
	427 Move X0, [X22]
	428 Move X21, [X8]
	429 Call 0x1C17F10
	430 Move X2, [X20]
	431 Move X1, X21
	432 Move X22, X0
	433 Call Dictionary`2<NetworkObjectTypeId, Object>..ctor, X0, X1
	434 Move [X19+344], X22
	435 Move X0, [X27]
	436 Call 0x1C17F10
	437 Move X1, [X26]
	438 Move X21, X0
	439 Call Dictionary`2<PlayerRef, NetworkId>..ctor, X0
	440 Move [X19+376], X21
	441 Move X0, [X27]
	442 Call 0x1C17F10
	443 Move X1, [X26]
	444 Move X21, X0
	445 Call Dictionary`2<PlayerRef, NetworkId>..ctor, X0
	446 Move [X19+384], X21
	447 Move W8, [X24+1207]
	448 Compare W8, 0
	449 JumpIfNotEqual {455}
	450 Move X0, 0x2235000
	451 Move X0, [X0+920]
	452 Call 0x1C17CF4
	453 Move W8, 1
	454 Move [X24+1207], W8
	455 Move X0, [X23]
	456 Move X24, 0x223E000
	457 Move X20, 0x223E000
	458 Move X27, 0x223E000
	459 Move X26, 0x223E000
	460 Move X25, 0x223E000
	461 Move X24, [X24+2568]
	462 Move W8, [X0+224]
	463 Move X20, [X20+2560]
	464 Move X27, [X27+2616]
	465 Move X26, [X26+2608]
	466 Move X25, [X25+2648]
	467 Compare W8, 0
	468 JumpIfNotEqual {471}
	469 Call 0x1C17DFC
	470 Move X0, [X23]
	471 Move X8, [X0+184]
	472 Move X0, [X24]
	473 Move X21, [X8]
	474 Call 0x1C17F10
	475 Move X2, [X20]
	476 Move X1, X21
	477 Move X22, X0
	478 Call HashSet`1<NetworkId>..ctor, X0, X1
	479 Move [X19+392], X22
	480 Move X0, [X27]
	481 Call 0x1C17F10
	482 Move X1, X19
	483 Move X2, X31
	484 Move X21, X0
	485 Call SendContext..ctor, X0, X1
	486 Move [X19+264], X21
	487 Move X0, [X26]
	488 Call 0x1C17F10
	489 Move X1, X19
	490 Move X2, X31
	491 Move X21, X0
	492 Call RecvContext..ctor, X0, X1
	493 Move [X19+272], X21
	494 Move X21, [X28+32]
	495 Add X0, X31, 40
	496 Move W2, 80
	497 Move X1, X28
	498 Call 0x3EB2AC0
	499 NotImplemented "Instruction LDUR not yet implemented."
	500 Move X8, [X31+64]
	501 Add X2, X31, 16
	502 Move X0, X19
	503 Move X1, X21
	504 Move [X31+1], V0
	505 Move [X31+32], X8
	506 Call Simulation.NetworkInit, X0, X1, X2
	507 Move X0, [X25]
	508 Call 0x1C17F10
	509 Move X1, X19
	510 Move X2, X31
	511 Move X20, X0
	512 Call StateReplicator..ctor, X0, X1
	513 Move X8, [X19+88]
	514 Move [X19+168], X20
	515 Compare X8, 0
	516 JumpIfEqual {556}
	517 Move W8, [X8+20]
	518 Move X22, 0x223E000
	519 Move X21, 0x223E000
	520 Move X22, [X22+2488]
	521 Move X21, [X21+2440]
	522 NotImplemented "Instruction ORN not yet implemented."
	523 And W31, W8, 3
	524 Move X0, [X24]
	525 Call 0x1C17F10
	526 Move X8, 0x223E000
	527 Move X8, [X8+2552]
	528 Move X20, X0
	529 Move X1, [X8]
	530 Call HashSet`1<NetworkId>..ctor, X0
	531 Move [X19+248], X20
	532 Move X0, [X22]
	533 Call 0x1C17F10
	534 Move X1, [X21]
	535 Move X20, X0
	536 Call Dictionary`2<Tick, Double>..ctor, X0
	537 Move X8, [X31]
	538 Move [X19+232], X20
	539 Move X8, [X8+40]
	540 Move X9, [X31+120]
	541 NotImplemented "Instruction CMP not yet implemented."
	542 Move X20, [X31+208]
	543 Move X19, [X31+216]
	544 Move X22, [X31+192]
	545 Move X21, [X31+200]
	546 Move X24, [X31+176]
	547 Move X23, [X31+184]
	548 Move X26, [X31+160]
	549 Move X25, [X31+168]
	550 Move X28, [X31+144]
	551 Move X27, [X31+152]
	552 Move X29, [X31+128]
	553 Move X30, [X31+136]
	554 Add X31, X31, 224
	555 Return 
	556 Call 0x1C17F20
	557 Call 0x3EB2B20

Method: Fusion.PlayerRef Connection2Player(Fusion.SimulationConnection c)

Disassembly:
	0x01EC2598 ADD X31, X31, 0x30
	0x01EC259C RET
	0x01EC25A0 BL 0x1C16F20
	0x01EC25A4 STR X30, [X31 - 0x30]!
	0x01EC25A8 STP X22, X21, [X31 + 0x10]
	0x01EC25AC STP X20, X19, [X31 + 0x20]
	0x01EC25B0 ADRP X22, 0x2517000
	0x01EC25B4 LDRB W8, [X22 + 0x461]
	0x01EC25B8 MOV W21, W2
	0x01EC25BC MOV X19, X1
	0x01EC25C0 MOV X20, X0
	0x01EC25C4 TBNZ X8, 0x0, 0x1EC25DC
	0x01EC25C8 ADRP X0, 0x223D000
	0x01EC25CC LDR X0, [X0 + 0xAF8]
	0x01EC25D0 BL 0x1C16CF4
	0x01EC25D4 MOVZ W8, 0x1
	0x01EC25D8 STRB W8, [X22 + 0x461]
	0x01EC25DC LDR X8, [X20 + 0x58]
	0x01EC25E0 CBZ X8, 0x1EC2638
	0x01EC25E4 LDR W8, [X8 + 0x38]
	0x01EC25E8 CMP W8, 0x2
	0x01EC25EC B.NE 0x1EC2628
	0x01EC25F0 ADRP X9, 0x223D000
	0x01EC25F4 LDR X9, [X9 + 0xAF8]
	0x01EC25F8 ANDS W31, W21, 0x1
	0x01EC25FC MOVZ X8, 0x1
	0x01EC2600 CSEL X2, X8, X31, NE
	0x01EC2604 LDR X4, [X9]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2518000
	006 Move W8, [X21+1112]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x223E000
	014 Move X0, [X0+2656]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1112], W8
	018 Compare X20, 0
	019 JumpIfEqual {39}
	020 Move X8, [X20+208]
	021 Compare X8, 0
	022 JumpIfEqual {39}
	023 Move X0, [X19+176]
	024 Compare X0, 0
	025 JumpIfEqual {39}
	026 Move X9, 0x223E000
	027 Move X9, [X9+2656]
	028 NotImplemented "Instruction LDRSH not yet implemented."
	029 Move X2, [X9]
	030 Call Dictionary`2<Int32, Object>.get_Item, X0, X1
	031 Compare X0, 0
	032 JumpIfEqual {39}
	033 Move W0, [X0+40]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0
	039 Call 0x1C17F20

Method: Fusion.PlayerRef Connection2Player(Fusion.Sockets.NetConnection* c)

Disassembly:
	0x01EC2608 BFM X2, X19, 0x0, 0x1F
	0x01EC260C MOV X0, X20
	0x01EC2610 LDP X20, X19, [X31 + 0x20]
	0x01EC2614 LDP X22, X21, [X31 + 0x10]
	0x01EC2618 MOVZ W1, 0x4
	0x01EC261C MOV X3, X31
	0x01EC2620 LDR X30, [X31], #0x30
	0x01EC2624 B 0x2254F40
	0x01EC2628 LDP X20, X19, [X31 + 0x20]
	0x01EC262C LDP X22, X21, [X31 + 0x10]
	0x01EC2630 LDR X30, [X31], #0x30
	0x01EC2634 RET
	0x01EC2638 BL 0x1C16F20
	0x01EC263C SUB X31, X31, 0x50
	0x01EC2640 STP X30, X23, [X31 + 0x20]
	0x01EC2644 STP X22, X21, [X31 + 0x30]
	0x01EC2648 STP X20, X19, [X31 + 0x40]
	0x01EC264C ADRP X23, 0x2517000
	0x01EC2650 LDRB W8, [X23 + 0x462]
	0x01EC2654 MOV W19, W3
	0x01EC2658 MOV X21, X2
	0x01EC265C MOV X22, X1
	0x01EC2660 MOV X20, X0
	0x01EC2664 STR W22, [X31 + 0x10]
	0x01EC2668 TBNZ X8, 0x0, 0x1EC268C
	0x01EC266C ADRP X0, 0x2234000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2518000
	006 Move W8, [X21+1113]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x223E000
	014 Move X0, [X0+2656]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1113], W8
	018 Compare X19, 0
	019 JumpIfEqual {36}
	020 Move X0, [X20+176]
	021 Compare X0, 0
	022 JumpIfEqual {36}
	023 Move X8, 0x223E000
	024 Move X8, [X8+2656]
	025 NotImplemented "Instruction LDRSH not yet implemented."
	026 Move X2, [X8]
	027 Call Dictionary`2<Int32, Object>.get_Item, X0, X1
	028 Compare X0, 0
	029 JumpIfEqual {36}
	030 Move W0, [X0+40]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0
	036 Call 0x1C17F20

Method: System.Int32 Player2Connection(Fusion.PlayerRef player)

Disassembly:
	0x01EC2670 LDR X0, [X0 + 0xE40]
	0x01EC2674 BL 0x1C16CF4
	0x01EC2678 ADRP X0, 0x223D000
	0x01EC267C LDR X0, [X0 + 0xB00]
	0x01EC2680 BL 0x1C16CF4
	0x01EC2684 MOVZ W8, 0x1
	0x01EC2688 STRB W8, [X23 + 0x462]
	0x01EC268C STR X31, [X31 + 0x8]
	0x01EC2690 LDR X8, [X20 + 0x58]
	0x01EC2694 CBZ X8, 0x1EC27FC
	0x01EC2698 LDR W9, [X8 + 0x14]
	0x01EC269C ORN W9, W31, W9, 0x0
	0x01EC26A0 ANDS W31, W9, 0x3
	0x01EC26A4 B.NE 0x1EC27E8
	0x01EC26A8 LDR W8, [X8 + 0x38]
	0x01EC26AC CMP W8, 0x2
	0x01EC26B0 B.NE 0x1EC270C
	0x01EC26B4 ADRP X8, 0x2234000
	0x01EC26B8 LDR X8, [X8 + 0xE40]
	0x01EC26BC LDR X0, [X8]
	0x01EC26C0 LDR W8, [X0 + 0xE0]
	0x01EC26C4 CBNZ W8, 0x1EC26CC
	0x01EC26C8 BL 0x1C16DFC
	0x01EC26CC ADD X0, X31, 0x10
	0x01EC26D0 MOV X1, X31
	0x01EC26D4 BL 0x1E8D834
	0x01EC26D8 ADRP X9, 0x223D000
	0x01EC26DC LDR X9, [X9 + 0xB00]
	0x01EC26E0 ANDS W31, W19, 0x1
	0x01EC26E4 MOVZ X8, 0x1
	0x01EC26E8 CSEL X2, X8, X31, NE
	0x01EC26EC LDR X5, [X9]
	0x01EC26F0 BFM X2, X21, 0x0, 0x1F
	0x01EC26F4 MOV W3, W0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2518000
	007 Move W8, [X21+1114]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2237000
	015 Move X0, [X0+32]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1114], W8
	019 Move [X31+8], X31
	020 Move X0, [X20+184]
	021 Compare X0, 0
	022 JumpIfEqual {47}
	023 Move X8, 0x2237000
	024 Move X8, [X8+32]
	025 And X1, X19, 0
	026 Add X2, X31, 8
	027 Move X3, [X8]
	028 Call Dictionary`2<PlayerRef, Object>.TryGetValue, X0, X1, X2
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {38}
	033 Move X0, [X31+8]
	034 Compare X0, 0
	035 JumpIfEqual {47}
	036 Move X1, X31
	037 Call SimulationConnection.get_ConnectionIndex, X0
	038 Move TEMP, 0
	039 Not TEMP
	040 Move W0, TEMP
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+16]
	044 Move X21, [X31+24]
	045 Add X31, X31, 48
	046 Return X0
	047 Call 0x1C17F20

Method: System.Void RegisterUniqueIdPlayerMapping(System.Int32 actorid, System.Byte[] id, Fusion.PlayerRef playerRef)

Disassembly:
	0x01EC26F8 MOVZ W1, 0x3
	0x01EC26FC MOV X0, X20
	0x01EC2700 MOV X4, X31
	0x01EC2704 BL 0x2254F64
	0x01EC2708 B 0x1EC27E8
	0x01EC270C LDR X8, [X20]
	0x01EC2710 MOV X0, X20
	0x01EC2714 LDR X9, [X8 + 0x268]
	0x01EC2718 LDR X1, [X8 + 0x270]
	0x01EC271C BLR X9
	0x01EC2720 ADRP X8, 0x2234000
	0x01EC2724 LDR X8, [X8 + 0xE40]
	0x01EC2728 MOV X23, X0
	0x01EC272C LDR X8, [X8]
	0x01EC2730 LDR W9, [X8 + 0xE0]
	0x01EC2734 CBNZ W9, 0x1EC2740
	0x01EC2738 MOV X0, X8
	0x01EC273C BL 0x1C16DFC
	0x01EC2740 CMP W22, W23
	0x01EC2744 B.EQ 0x1EC27E8
	0x01EC2748 AND X1, X22, 0x0
	0x01EC274C MOV X0, X20
	0x01EC2750 BL 0x1EC2800
	0x01EC2754 TBZ X0, 0x0, 0x1EC27E8
	0x01EC2758 AND X1, X21, 0x0
	0x01EC275C ADD X2, X31, 0x8
	0x01EC2760 MOV X0, X20
	0x01EC2764 BL 0x1EC0278
	0x01EC2768 TBZ X0, 0x0, 0x1EC27E8
	0x01EC276C ADRP X22, 0x2516000
	0x01EC2770 LDRB W8, [X22 + 0xB73]
	0x01EC2774 LDR W21, [X31 + 0x10]
	0x01EC2778 CBNZ W8, 0x1EC2790

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x2518000
	008 Move W8, [X23+1115]
	009 Move X19, X3
	010 Move X22, X2
	011 Move W20, W1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x223E000
	018 Move X0, [X0+2664]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+1115], W8
	022 Move X21, [X21+256]
	023 Move X0, X22
	024 Move W1, W31
	025 Move X2, X31
	026 Call BitConverter.ToUInt64, X0, X1
	027 Compare X21, 0
	028 JumpIfEqual {44}
	029 Move X8, 0x223E000
	030 Move X8, [X8+2664]
	031 Move W2, W20
	032 Move X1, X0
	033 NotImplemented "Instruction BFM not yet implemented."
	034 Move X3, [X8]
	035 Move X0, X21
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Move X23, [X31+56]
	042 Call Dictionary`2<UInt64, PlayerRefMapping>.set_Item, X0, X1, X2
	043 Return 
	044 Call 0x1C17F20

Method: System.Nullable`1<Fusion.Simulation/PlayerRefMapping> GetPlayerRefMapping(System.Byte[] id)

Disassembly:
	0x01EC277C ADRP X0, 0x2236000
	0x01EC2780 LDR X0, [X0 + 0x20]
	0x01EC2784 BL 0x1C16CF4
	0x01EC2788 MOVZ W8, 0x1
	0x01EC278C STRB W8, [X22 + 0xB73]
	0x01EC2790 STR X31, [X31 + 0x18]
	0x01EC2794 LDR X0, [X20 + 0xB8]
	0x01EC2798 CBZ X0, 0x1EC27FC
	0x01EC279C ADRP X8, 0x2236000
	0x01EC27A0 LDR X8, [X8 + 0x20]
	0x01EC27A4 ADD X2, X31, 0x18
	0x01EC27A8 MOV X1, X21
	0x01EC27AC LDR X3, [X8]
	0x01EC27B0 BL 0x2AE89D0
	0x01EC27B4 LDR X8, [X31 + 0x18]
	0x01EC27B8 ANDS W31, W0, 0x1
	0x01EC27BC CSEL X0, X8, X31, NE
	0x01EC27C0 TBZ X19, 0x0, 0x1EC27D8
	0x01EC27C4 CBZ X0, 0x1EC27E8
	0x01EC27C8 LDR X1, [X31 + 0x8]
	0x01EC27CC MOV X2, X31
	0x01EC27D0 BL 0x1ED88C0
	0x01EC27D4 B 0x1EC27E8
	0x01EC27D8 CBZ X0, 0x1EC27E8
	0x01EC27DC LDR X1, [X31 + 0x8]
	0x01EC27E0 MOV X2, X31
	0x01EC27E4 BL 0x1ED8A64
	0x01EC27E8 LDP X20, X19, [X31 + 0x40]
	0x01EC27EC LDP X22, X21, [X31 + 0x30]
	0x01EC27F0 LDP X30, X23, [X31 + 0x20]
	0x01EC27F4 ADD X31, X31, 0x50
	0x01EC27F8 RET
	0x01EC27FC BL 0x1C16F20
	0x01EC2800 STP X30, X21, [X31 - 0x20]!
	0x01EC2804 STP X20, X19, [X31 + 0x10]
	0x01EC2808 ADRP X21, 0x2517000
	0x01EC280C LDRB W8, [X21 + 0x465]
	0x01EC2810 MOV X19, X1
	0x01EC2814 MOV X20, X0
	0x01EC2818 TBNZ X8, 0x0, 0x1EC2830
	0x01EC281C ADRP X0, 0x223D000
	0x01EC2820 LDR X0, [X0 + 0xB08]
	0x01EC2824 BL 0x1C16CF4
	0x01EC2828 MOVZ W8, 0x1
	0x01EC282C STRB W8, [X21 + 0x465]
	0x01EC2830 LDR X0, [X20 + 0xC0]
	0x01EC2834 CBZ X0, 0x1EC2854
	0x01EC2838 ADRP X8, 0x223D000
	0x01EC283C LDR X8, [X8 + 0xB08]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x2518000
	007 Move W8, [X21+1116]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x223E000
	015 Move X0, [X0+2672]
	016 Call 0x1C17CF4
	017 Move X0, 0x223E000
	018 Move X0, [X0+2680]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1116], W8
	022 Move [X31+8], X31
	023 Move X20, [X20+256]
	024 Move X0, X19
	025 Move W1, W31
	026 Move X2, X31
	027 Call BitConverter.ToUInt64, X0, X1
	028 Compare X20, 0
	029 JumpIfEqual {59}
	030 Move X8, 0x223E000
	031 Move X8, [X8+2672]
	032 Move X1, X0
	033 Add X2, X31, 8
	034 Move X0, X20
	035 Move X3, [X8]
	036 Call Dictionary`2<UInt64, PlayerRefMapping>.TryGetValue, X0, X1, X2
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {49}
	041 Move X8, 0x223E000
	042 Move X1, [X31+8]
	043 Move X8, [X8+2680]
	044 Add X0, X31, 16
	045 Move [X31+16], X31
	046 Move [X31+24], W31
	047 Move X2, [X8]
	048 Call Nullable`1<PlayerRefMapping>..ctor, X0, X1
	049 Move [X31+24], W31
	050 Move [X31+16], X31
	051 Move X0, [X31+16]
	052 Move W1, [X31+24]
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Add X31, X31, 64
	058 Return X0
	059 Call 0x1C17F20

Method: System.Nullable`1<Fusion.Simulation/PlayerRefMapping> GetPlayerRefMapping(System.Byte* id)

Disassembly:
	0x01EC2840 AND X1, X19, 0x0
	0x01EC2844 LDP X20, X19, [X31 + 0x10]
	0x01EC2848 LDR X2, [X8]
	0x01EC284C LDP X30, X21, [X31], #0x20
	0x01EC2850 B 0x2DC3380
	0x01EC2854 BL 0x1C16F20
	0x01EC2858 STP X30, X21, [X31 - 0x20]!
	0x01EC285C STP X20, X19, [X31 + 0x10]
	0x01EC2860 ADRP X21, 0x2517000
	0x01EC2864 LDRB W8, [X21 + 0x463]
	0x01EC2868 MOV X19, X1
	0x01EC286C MOV X20, X0
	0x01EC2870 TBNZ X8, 0x0, 0x1EC2888
	0x01EC2874 ADRP X0, 0x223D000
	0x01EC2878 LDR X0, [X0 + 0xB10]
	0x01EC287C BL 0x1C16CF4
	0x01EC2880 MOVZ W8, 0x1
	0x01EC2884 STRB W8, [X21 + 0x463]
	0x01EC2888 LDR X0, [X20 + 0x198]
	0x01EC288C MOV X1, X19
	0x01EC2890 MOV X2, X31
	0x01EC2894 BL 0x1E659FC
	0x01EC2898 TBZ X0, 0x0, 0x1EC28B4
	0x01EC289C LDR X0, [X20 + 0x198]
	0x01EC28A0 MOV X1, X19
	0x01EC28A4 LDP X20, X19, [X31 + 0x10]
	0x01EC28A8 MOV X2, X31
	0x01EC28AC LDP X30, X21, [X31], #0x20
	0x01EC28B0 B 0x1E667A8
	0x01EC28B4 ADRP X8, 0x223D000
	0x01EC28B8 LDR X8, [X8 + 0xB10]
	0x01EC28BC LDP X20, X19, [X31 + 0x10]
	0x01EC28C0 MOV X1, X31
	0x01EC28C4 LDR X0, [X8]
	0x01EC28C8 LDP X30, X21, [X31], #0x20
	0x01EC28CC B 0x1E3B98C
	0x01EC28D0 STR X30, [X31 - 0x20]!
	0x01EC28D4 STP X20, X19, [X31 + 0x10]
	0x01EC28D8 MOV X20, X0
	0x01EC28DC LDR X0, [X0 + 0x198]
	0x01EC28E0 MOV X2, X31
	0x01EC28E4 MOV W19, W1
	0x01EC28E8 BL 0x1E6645C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2518000
	007 Move X22, 0x2232000
	008 Move W8, [X21+1117]
	009 Move X22, [X22+1560]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2232000
	017 Move X0, [X0+1560]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1117], W8
	021 Move X0, [X22]
	022 Move W1, 8
	023 Call 0x1C17D6C
	024 Compare X0, 0
	025 JumpIfEqual {50}
	026 Move W8, [X0+24]
	027 Move X1, X0
	028 Move X9, X8
	029 ShiftRight X9, 32
	030 And X9, X9, 0x7FFFFFFF
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X9, X31
	033 Move X10, W8
	034 Add X11, X1, 32
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W12, [X20]
	037 Move [X11], W12
	038 Add X9, X9, 1
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X0, X19
	041 Call Simulation.GetPlayerRefMapping, X0, X1
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 And X1, X1, 0
	047 Move X30, [X31+48]
	048 Return X0
	049 Call 0x1C17F28
	050 Call 0x1C17F20

Method: System.Void CalculateUpdateTime()

Disassembly:
	0x01EC28EC TBZ X0, 0x0, 0x1EC2908
	0x01EC28F0 LDR X0, [X20 + 0x198]
	0x01EC28F4 MOV W1, W19
	0x01EC28F8 LDP X20, X19, [X31 + 0x10]
	0x01EC28FC MOV X2, X31
	0x01EC2900 LDR X30, [X31], #0x20
	0x01EC2904 B 0x1E65C6C
	0x01EC2908 LDP X20, X19, [X31 + 0x10]
	0x01EC290C MOV X0, X31
	0x01EC2910 LDR X30, [X31], #0x20
	0x01EC2914 RET
	0x01EC2918 LDRB W8, [X0 + 0x30]
	0x01EC291C CBZ W8, 0x1EC2924
	0x01EC2920 RET
	0x01EC2924 B 0x1EC2928
	0x01EC2928 SUB X31, X31, 0x50
	0x01EC292C STR X30, [X31 + 0x20]
	0x01EC2930 STP X22, X21, [X31 + 0x30]
	0x01EC2934 STP X20, X19, [X31 + 0x40]
	0x01EC2938 ADRP X20, 0x2517000
	0x01EC293C LDRB W8, [X20 + 0x492]
	0x01EC2940 MOV X19, X0
	0x01EC2944 TBNZ X8, 0x0, 0x1EC298C
	0x01EC2948 ADRP X0, 0x223C000
	0x01EC294C LDR X0, [X0 + 0xB90]
	0x01EC2950 BL 0x1C16CF4
	0x01EC2954 ADRP X0, 0x223C000
	0x01EC2958 LDR X0, [X0 + 0xB98]
	0x01EC295C BL 0x1C16CF4
	0x01EC2960 ADRP X0, 0x223C000
	0x01EC2964 LDR X0, [X0 + 0xBA0]
	0x01EC2968 BL 0x1C16CF4
	0x01EC296C ADRP X0, 0x223C000
	0x01EC2970 LDR X0, [X0 + 0xBA8]
	0x01EC2974 BL 0x1C16CF4
	0x01EC2978 ADRP X0, 0x223C000
	0x01EC297C LDR X0, [X0 + 0xBB0]
	0x01EC2980 BL 0x1C16CF4
	0x01EC2984 MOVZ W8, 0x1
	0x01EC2988 STRB W8, [X20 + 0x492]
	0x01EC298C STP X31, X31, [X31 + 0x8]
	0x01EC2990 STR X31, [X31 + 0x18]
	0x01EC2994 LDR X8, [X19]
	0x01EC2998 MOV X0, X19
	0x01EC299C LDR X9, [X8 + 0x368]
	0x01EC29A0 LDR X1, [X8 + 0x370]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2518000
	005 Move W8, [X20+1118]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x223D000
	012 Move X0, [X0+1984]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1118], W8
	016 Move X0, X19
	017 Call Simulation.get_IsClient, X0
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {50}
	022 Move X20, [X19+104]
	023 Compare X20, 0
	024 JumpIfEqual {54}
	025 Move X10, 0x223D000
	026 Move X8, [X20]
	027 Move X10, [X10+1984]
	028 NotImplemented "Instruction LDRH not yet implemented."
	029 Move X1, [X10]
	030 Compare X9, 0
	031 JumpIfEqual {38}
	032 Move X10, [X8+176]
	033 Add X10, X10, 8
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Subtract X9, X9, 1
	037 Add X10, X10, 16
	038 Move W2, 9
	039 Move X0, X20
	040 Call 0x1C5D788
	041 Move W9, [X10]
	042 Add W9, W9, 9
	043 Add X8, X8, W9
	044 Add X0, X8, 312
	045 Move X8, [X0]
	046 Move X1, [X0+8]
	047 Move X0, X20
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move [X19+200], D1
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Return 
	054 Call 0x1C17F20

Method: System.Void StepSimulation(Fusion.SimulationStages stage, System.Boolean lastTick, System.Boolean firstTick, System.Boolean freeInput)

Disassembly:
	0x01EC29A4 BLR X9
	0x01EC29A8 LDR X0, [X19 + 0xB0]
	0x01EC29AC CBZ X0, 0x1EC2A58
	0x01EC29B0 ADRP X8, 0x223C000
	0x01EC29B4 LDR X8, [X8 + 0xB90]
	0x01EC29B8 LDR X1, [X8]
	0x01EC29BC BL 0x2A1352C
	0x01EC29C0 CBZ X0, 0x1EC2A58
	0x01EC29C4 ADRP X8, 0x223C000
	0x01EC29C8 LDR X8, [X8 + 0xBB0]
	0x01EC29CC ADRP X21, 0x223C000
	0x01EC29D0 ADRP X20, 0x223C000
	0x01EC29D4 LDR X1, [X8]
	0x01EC29D8 LDR X21, [X21 + 0xBA0]
	0x01EC29DC LDR X20, [X20 + 0xB98]
	0x01EC29E0 ADD X8, X31, 0x8
	0x01EC29E4 BL 0x274B2CC
	0x01EC29E8 LDR X1, [X21]
	0x01EC29EC ADD X0, X31, 0x8
	0x01EC29F0 BL 0x2BF5F4C
	0x01EC29F4 TBZ X0, 0x0, 0x1EC2A1C
	0x01EC29F8 LDR X22, [X31 + 0x18]
	0x01EC29FC CBZ X22, 0x1EC2A54
	0x01EC2A00 ADD X1, X22, 0x48
	0x01EC2A04 MOV X0, X19
	0x01EC2A08 BL 0x1EC7238
	0x01EC2A0C ADD X1, X22, 0x60
	0x01EC2A10 MOV X0, X19
	0x01EC2A14 BL 0x1EC7238
	0x01EC2A18 B 0x1EC29E8
	0x01EC2A1C LDR X1, [X20]
	0x01EC2A20 ADD X0, X31, 0x8
	0x01EC2A24 BL 0x2BF5F48
	0x01EC2A28 LDP X1, X0, [X19 + 0x120]
	0x01EC2A2C MOV X2, X19
	0x01EC2A30 MOV X3, X31
	0x01EC2A34 BL 0x1EFE3D8
	0x01EC2A38 STP X31, X31, [X19 + 0x120]
	0x01EC2A3C STR X31, [X19 + 0x130]
	0x01EC2A40 LDP X20, X19, [X31 + 0x40]
	0x01EC2A44 LDP X22, X21, [X31 + 0x30]
	0x01EC2A48 LDR X30, [X31 + 0x20]
	0x01EC2A4C ADD X31, X31, 0x50
	0x01EC2A50 RET
	0x01EC2A54 BL 0x1C16F20
	0x01EC2A58 BL 0x1C16F20
	0x01EC2A5C B 0x1EC2A68
	0x01EC2A60 B 0x1EC2A68
	0x01EC2A64 B 0x1EC2A68
	0x01EC2A68 MOV X20, X0
	0x01EC2A6C CMP W1, 0x1
	0x01EC2A70 B.NE 0x1EC2AA4
	0x01EC2A74 MOV X0, X20
	0x01EC2A78 BL 0x3EB1AD0
	0x01EC2A7C LDR X21, [X0]
	0x01EC2A80 BL 0x3EB1AE0
	0x01EC2A84 ADRP X8, 0x223C000
	0x01EC2A88 LDR X8, [X8 + 0xB98]
	0x01EC2A8C ADD X0, X31, 0x8
	0x01EC2A90 LDR X1, [X8]
	0x01EC2A94 BL 0x2BF5F48
	0x01EC2A98 CBZ X21, 0x1EC2A28
	0x01EC2A9C MOV X0, X21
	0x01EC2AA0 BL 0x1C16F18
	0x01EC2AA4 MOV X21, X31
	0x01EC2AA8 B 0x1EC2AB0
	0x01EC2AAC MOV X20, X0
	0x01EC2AB0 ADRP X8, 0x223C000
	0x01EC2AB4 LDR X8, [X8 + 0xB98]
	0x01EC2AB8 LDR X1, [X8]
	0x01EC2ABC ADD X0, X31, 0x8
	0x01EC2AC0 BL 0x2BF5F48
	0x01EC2AC4 CBNZ X21, 0x1EC2AD0
	0x01EC2AC8 MOV X0, X20
	0x01EC2ACC BL 0x1D2C690
	0x01EC2AD0 MOV X0, X21
	0x01EC2AD4 BL 0x1C16F18
	0x01EC2AD8 BL 0x1990590
	0x01EC2ADC STR X30, [X31 - 0x20]!
	0x01EC2AE0 STP X20, X19, [X31 + 0x10]
	0x01EC2AE4 ADRP X20, 0x2517000
	0x01EC2AE8 LDRB W8, [X20 + 0x464]
	0x01EC2AEC MOV X19, X0
	0x01EC2AF0 TBNZ X8, 0x0, 0x1EC2B08
	0x01EC2AF4 ADRP X0, 0x223C000
	0x01EC2AF8 LDR X0, [X0 + 0x798]
	0x01EC2AFC BL 0x1C16CF4
	0x01EC2B00 MOVZ W8, 0x1
	0x01EC2B04 STRB W8, [X20 + 0x464]
	0x01EC2B08 LDRB W8, [X19 + 0x30]
	0x01EC2B0C CBNZ W8, 0x1EC2B80
	0x01EC2B10 LDR X0, [X19 + 0x98]
	0x01EC2B14 MOVZ W8, 0x1
	0x01EC2B18 STRB W8, [X19 + 0x30]
	0x01EC2B1C CBZ X0, 0x1EC2BA0
	0x01EC2B20 MOV X1, X31
	0x01EC2B24 BL 0x1ED8DD4
	0x01EC2B28 LDR X0, [X19 + 0x198]
	0x01EC2B2C MOV X1, X31
	0x01EC2B30 STP X31, X31, [X19 + 0x90]
	0x01EC2B34 BL 0x1E66A20
	0x01EC2B38 LDR X0, [X19 + 0x1A0]
	0x01EC2B3C MOV X1, X31
	0x01EC2B40 STR X31, [X19 + 0x198]
	0x01EC2B44 BL 0x1E66A20
	0x01EC2B48 STR X31, [X19 + 0x1A0]
	0x01EC2B4C ADRP X8, 0x223C000
	0x01EC2B50 LDR X8, [X8 + 0x798]
	0x01EC2B54 LDR X9, [X19]
	0x01EC2B58 LDR X8, [X8]
	0x01EC2B5C LDRB W11, [X9 + 0x130]
	0x01EC2B60 LDRB W10, [X8 + 0x130]
	0x01EC2B64 CMP W11, W10
	0x01EC2B68 B.CC 0x1EC2B80
	0x01EC2B6C LDR X9, [X9 + 0xC8]
	0x01EC2B70 ADD X9, X9, X10, 0x3, LSL
	0x01EC2B74 LDUR X9, [X9 - 0x8]
	0x01EC2B78 CMP X9, X8
	0x01EC2B7C B.EQ 0x1EC2B8C
	0x01EC2B80 LDP X20, X19, [X31 + 0x10]
	0x01EC2B84 LDR X30, [X31], #0x20
	0x01EC2B88 RET
	0x01EC2B8C MOV X0, X19
	0x01EC2B90 LDP X20, X19, [X31 + 0x10]
	0x01EC2B94 MOV X1, X31
	0x01EC2B98 LDR X30, [X31], #0x20
	0x01EC2B9C B 0x1ED1B8C
	0x01EC2BA0 BL 0x1C16F20
	0x01EC2BA4 SUB X31, X31, 0x30
	0x01EC2BA8 STP X30, X21, [X31 + 0x10]
	0x01EC2BAC STP X20, X19, [X31 + 0x20]
	0x01EC2BB0 AND X20, X1, 0x0
	0x01EC2BB4 MOV W19, W2
	0x01EC2BB8 ADD X2, X31, 0x8
	0x01EC2BBC MOV X1, X20
	0x01EC2BC0 MOV X21, X0
	0x01EC2BC4 STR X31, [X31 + 0x8]
	0x01EC2BC8 BL 0x1EC0278
	0x01EC2BCC TBZ X0, 0x0, 0x1EC2BE0
	0x01EC2BD0 LDR X1, [X31 + 0x8]
	0x01EC2BD4 MOV X0, X21
	0x01EC2BD8 MOV W2, W31
	0x01EC2BDC BL 0x1EBFDB4
	0x01EC2BE0 LDR X0, [X21 + 0xA8]
	0x01EC2BE4 CBZ X0, 0x1EC2C08
	0x01EC2BE8 MOV X1, X20
	0x01EC2BEC MOV W2, W19
	0x01EC2BF0 MOV X3, X31
	0x01EC2BF4 BL 0x1ED625C
	0x01EC2BF8 LDP X20, X19, [X31 + 0x20]
	0x01EC2BFC LDP X30, X21, [X31 + 0x10]
	0x01EC2C00 ADD X31, X31, 0x30
	0x01EC2C04 RET
	0x01EC2C08 BL 0x1C16F20
	0x01EC2C0C STP X30, X23, [X31 - 0x30]!
	0x01EC2C10 STP X22, X21, [X31 + 0x10]
	0x01EC2C14 STP X20, X19, [X31 + 0x20]
	0x01EC2C18 ADRP X22, 0x2517000
	0x01EC2C1C LDRB W8, [X22 + 0x466]
	0x01EC2C20 MOV X21, X2
	0x01EC2C24 MOV X19, X1
	0x01EC2C28 MOV X20, X0
	0x01EC2C2C TBNZ X8, 0x0, 0x1EC2C74
	0x01EC2C30 ADRP X0, 0x223D000
	0x01EC2C34 LDR X0, [X0 + 0xB18]
	0x01EC2C38 BL 0x1C16CF4
	0x01EC2C3C ADRP X0, 0x223D000
	0x01EC2C40 LDR X0, [X0 + 0xB20]
	0x01EC2C44 BL 0x1C16CF4
	0x01EC2C48 ADRP X0, 0x2234000
	0x01EC2C4C LDR X0, [X0 + 0xE40]
	0x01EC2C50 BL 0x1C16CF4
	0x01EC2C54 ADRP X0, 0x223D000
	0x01EC2C58 LDR X0, [X0 + 0xB28]
	0x01EC2C5C BL 0x1C16CF4
	0x01EC2C60 ADRP X0, 0x223D000
	0x01EC2C64 LDR X0, [X0 + 0xB30]
	0x01EC2C68 BL 0x1C16CF4
	0x01EC2C6C MOVZ W8, 0x1
	0x01EC2C70 STRB W8, [X22 + 0x466]
	0x01EC2C74 LDR X0, [X20 + 0xC0]
	0x01EC2C78 CBZ X0, 0x1EC2D5C
	0x01EC2C7C ADRP X8, 0x223D000
	0x01EC2C80 LDR X8, [X8 + 0xB20]
	0x01EC2C84 ADRP X23, 0x223D000
	0x01EC2C88 AND X22, X19, 0x0
	0x01EC2C8C MOV X1, X22
	0x01EC2C90 LDR X2, [X8]
	0x01EC2C94 LDR X23, [X23 + 0xB30]
	0x01EC2C98 BL 0x2DC3E24
	0x01EC2C9C LDR X1, [X23]
	0x01EC2CA0 AND W0, W0, 0x1
	0x01EC2CA4 MOV X2, X31
	0x01EC2CA8 BL 0x1E3BA60
	0x01EC2CAC CBZ X21, 0x1EC2CE0
	0x01EC2CB0 STR W19, [X21 + 0x28]
	0x01EC2CB4 LDR X0, [X20 + 0xB8]
	0x01EC2CB8 CBZ X0, 0x1EC2D5C
	0x01EC2CBC ADRP X8, 0x223D000
	0x01EC2CC0 LDR X8, [X8 + 0xB18]
	0x01EC2CC4 MOV X1, X22
	0x01EC2CC8 MOV X2, X21
	0x01EC2CCC LDP X20, X19, [X31 + 0x20]
	0x01EC2CD0 LDR X3, [X8]
	0x01EC2CD4 LDP X22, X21, [X31 + 0x10]
	0x01EC2CD8 LDP X30, X23, [X31], #0x30
	0x01EC2CDC B 0x2AE6ECC
	0x01EC2CE0 MOV X0, X20
	0x01EC2CE4 BL 0x1EBDF30
	0x01EC2CE8 TBZ X0, 0x0, 0x1EC2D38
	0x01EC2CEC LDR W8, [X20 + 0x4C]
	0x01EC2CF0 CMP W8, 0x2
	0x01EC2CF4 B.NE 0x1EC2D38
	0x01EC2CF8 LDR X8, [X20]
	0x01EC2CFC MOV X0, X20
	0x01EC2D00 LDR X9, [X8 + 0x268]
	0x01EC2D04 LDR X1, [X8 + 0x270]
	0x01EC2D08 BLR X9
	0x01EC2D0C ADRP X8, 0x2234000
	0x01EC2D10 LDR X8, [X8 + 0xE40]
	0x01EC2D14 MOV X20, X0
	0x01EC2D18 LDR X8, [X8]
	0x01EC2D1C LDR W9, [X8 + 0xE0]
	0x01EC2D20 CBNZ W9, 0x1EC2D2C
	0x01EC2D24 MOV X0, X8
	0x01EC2D28 BL 0x1C16DFC
	0x01EC2D2C CMP W20, W19
	0x01EC2D30 CSET W0, EQ
	0x01EC2D34 B 0x1EC2D3C
	0x01EC2D38 MOV W0, W31
	0x01EC2D3C ADRP X8, 0x223D000
	0x01EC2D40 LDR X8, [X8 + 0xB28]
	0x01EC2D44 LDP X20, X19, [X31 + 0x20]
	0x01EC2D48 LDP X22, X21, [X31 + 0x10]
	0x01EC2D4C MOV X2, X31
	0x01EC2D50 LDR X1, [X8]
	0x01EC2D54 LDP X30, X23, [X31], #0x30
	0x01EC2D58 B 0x1E3BA60
	0x01EC2D5C BL 0x1C16F20
	0x01EC2D60 STR X30, [X31 - 0x30]!
	0x01EC2D64 STP X22, X21, [X31 + 0x10]
	0x01EC2D68 STP X20, X19, [X31 + 0x20]
	0x01EC2D6C ADRP X21, 0x2517000
	0x01EC2D70 LDRB W8, [X21 + 0x467]
	0x01EC2D74 MOV X20, X1
	0x01EC2D78 MOV X19, X0
	0x01EC2D7C TBNZ X8, 0x0, 0x1EC2DC4
	0x01EC2D80 ADRP X0, 0x223D000
	0x01EC2D84 LDR X0, [X0 + 0xB38]
	0x01EC2D88 BL 0x1C16CF4
	0x01EC2D8C ADRP X0, 0x223D000
	0x01EC2D90 LDR X0, [X0 + 0xB40]
	0x01EC2D94 BL 0x1C16CF4
	0x01EC2D98 ADRP X0, 0x2234000
	0x01EC2D9C LDR X0, [X0 + 0xE40]
	0x01EC2DA0 BL 0x1C16CF4
	0x01EC2DA4 ADRP X0, 0x223D000
	0x01EC2DA8 LDR X0, [X0 + 0xB48]
	0x01EC2DAC BL 0x1C16CF4
	0x01EC2DB0 ADRP X0, 0x223D000
	0x01EC2DB4 LDR X0, [X0 + 0xB50]
	0x01EC2DB8 BL 0x1C16CF4
	0x01EC2DBC MOVZ W8, 0x1
	0x01EC2DC0 STRB W8, [X21 + 0x467]
	0x01EC2DC4 LDR X0, [X19 + 0xC0]
	0x01EC2DC8 CBZ X0, 0x1EC2EA0
	0x01EC2DCC ADRP X8, 0x223D000
	0x01EC2DD0 LDR X8, [X8 + 0xB40]
	0x01EC2DD4 ADRP X22, 0x223D000
	0x01EC2DD8 AND X21, X20, 0x0
	0x01EC2DDC MOV X1, X21
	0x01EC2DE0 LDR X2, [X8]
	0x01EC2DE4 LDR X22, [X22 + 0xB48]
	0x01EC2DE8 BL 0x2DC3558
	0x01EC2DEC LDR X1, [X22]
	0x01EC2DF0 AND W0, W0, 0x1
	0x01EC2DF4 MOV X2, X31
	0x01EC2DF8 BL 0x1E3BA60
	0x01EC2DFC MOV X0, X19
	0x01EC2E00 BL 0x1EBDF30
	0x01EC2E04 TBZ X0, 0x0, 0x1EC2E60
	0x01EC2E08 LDR W8, [X19 + 0x4C]
	0x01EC2E0C CMP W8, 0x2
	0x01EC2E10 B.NE 0x1EC2E60
	0x01EC2E14 LDR X8, [X19]
	0x01EC2E18 MOV X0, X19
	0x01EC2E1C LDR X9, [X8 + 0x268]
	0x01EC2E20 LDR X1, [X8 + 0x270]
	0x01EC2E24 BLR X9
	0x01EC2E28 ADRP X8, 0x2234000
	0x01EC2E2C LDR X8, [X8 + 0xE40]
	0x01EC2E30 MOV X22, X0
	0x01EC2E34 LDR X8, [X8]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+80], X26
	004 Move [X31+88], X25
	005 Move [X31+96], X24
	006 Move [X31+104], X23
	007 Move [X31+112], X22
	008 Move [X31+120], X21
	009 Move [X31+128], X20
	010 Move [X31+136], X19
	011 Move X26, 0x2518000
	012 Move X25, 0x223E000
	013 Move W8, [X26+1119]
	014 Move X25, [X25+2688]
	015 Move W20, W4
	016 Move W22, W2
	017 Move W21, W1
	018 Move X19, X0
	019 And W24, W2, 1
	020 And W23, W3, 1
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {54}
	025 Move X0, 0x223E000
	026 Move X0, [X0+2696]
	027 Call 0x1C17CF4
	028 Move X0, 0x223E000
	029 Move X0, [X0+2704]
	030 Call 0x1C17CF4
	031 Move X0, 0x223D000
	032 Move X0, [X0+2064]
	033 Call 0x1C17CF4
	034 Move X0, 0x223E000
	035 Move X0, [X0+2712]
	036 Call 0x1C17CF4
	037 Move X0, 0x223E000
	038 Move X0, [X0+2720]
	039 Call 0x1C17CF4
	040 Move X0, 0x223E000
	041 Move X0, [X0+2728]
	042 Call 0x1C17CF4
	043 Move X0, 0x223D000
	044 Move X0, [X0+2704]
	045 Call 0x1C17CF4
	046 Move X0, 0x223E000
	047 Move X0, [X0+2736]
	048 Call 0x1C17CF4
	049 Move X0, 0x223E000
	050 Move X0, [X0+2688]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X26+1119], W8
	054 Move X0, [X25]
	055 Move X1, X31
	056 Move [X31+32], X31
	057 Move [X31+40], X31
	058 Move [X31+48], X31
	059 Move [X31+72], X31
	060 Call EngineProfiler.Begin, X0
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CSET not yet implemented."
	063 Move [X19+216], W24
	064 Move [X19+217], W23
	065 Move [X19+218], W8
	066 Move TEMP, X22
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {150}
	070 Move X22, [X19+64]
	071 Compare X22, 0
	072 JumpIfEqual {211}
	073 Move X10, 0x223D000
	074 Move X8, [X22]
	075 Move X10, [X10+2704]
	076 NotImplemented "Instruction LDRH not yet implemented."
	077 Move X1, [X10]
	078 Compare X9, 0
	079 JumpIfEqual {86}
	080 Move X10, [X8+176]
	081 Add X10, X10, 8
	082 NotImplemented "Instruction LDUR not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Subtract X9, X9, 1
	085 Add X10, X10, 16
	086 Move W2, 14
	087 Move X0, X22
	088 Call 0x1C5D788
	089 Move W9, [X10]
	090 Add W9, W9, 14
	091 Add X8, X8, W9
	092 Add X0, X8, 312
	093 Move X8, [X0]
	094 Move X1, [X0+8]
	095 Move X0, X22
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X0, [X19+336]
	098 Compare X0, 0
	099 JumpIfEqual {212}
	100 Move X8, 0x223D000
	101 Move X8, [X8+2064]
	102 Move X1, [X8]
	103 Call Dictionary`2<NetworkId, Object>.get_Values, X0
	104 Compare X0, 0
	105 JumpIfEqual {213}
	106 Move X8, 0x223E000
	107 Move X8, [X8+2736]
	108 Move X1, [X8]
	109 Add X8, X31, 8
	110 Call ValueCollection<NetworkId, Object>.GetEnumerator, X0
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 Move X8, [X31+24]
	113 Move X23, 0x223E000
	114 Move [X31+2], V0
	115 Move [X31+48], X8
	116 Move X23, [X23+2720]
	117 Move X1, [X23]
	118 Add X0, X31, 32
	119 Call Enumerator<NetworkId, Object>.MoveNext, X0
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {142}
	124 Move X22, [X31+48]
	125 Compare X22, 0
	126 JumpIfEqual {208}
	127 Move X0, X22
	128 Move X1, X31
	129 Call NetworkObjectMeta.get_IsObject, X0
	130 Move TEMP, X0
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfNotEqual {117}
	134 Move X0, X22
	135 Move X1, X31
	136 Call NetworkObjectMeta.get_Previous, X0
	137 Move [X31+72], X0
	138 Move X1, [X22+176]
	139 Add X0, X31, 72
	140 Move X2, X31
	141 Call NetworkObjectHeaderSnapshotRef.CopyFrom, X0, X1
	142 Move X22, X31
	143 Move X8, 0x223E000
	144 Move X8, [X8+2712]
	145 Move X1, [X8]
	146 Add X0, X31, 32
	147 Call Enumerator<NetworkId, Object>.Dispose, X0
	148 Compare X22, 0
	149 JumpIfNotEqual {216}
	150 Move X0, X19
	151 Call Simulation.get_TickStride, X0
	152 Move W1, W0
	153 Add X0, X19, 72
	154 Move X2, X31
	155 Call Tick.Next, X0, X1
	156 Move [X19+72], W0
	157 Move X0, X19
	158 Call Simulation.get_IsServer, X0
	159 Move TEMP, X0
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfNotEqual {186}
	163 Move X22, [X19+232]
	164 Move W23, [X19+72]
	165 Move X0, X19
	166 Call Simulation.get_RuntimeConfigPtr, X0
	167 Compare X22, 0
	168 JumpIfEqual {214}
	169 Move X9, 0x223E000
	170 Move W8, [X0]
	171 Move X9, [X9+2704]
	172 Subtract W8, W23, W8
	173 Move X2, [X9]
	174 NotImplemented "Instruction BIC not yet implemented."
	175 Move X0, X22
	176 Call Dictionary`2<Tick, Double>.Remove, X0, X1
	177 Move X0, [X19+232]
	178 Compare X0, 0
	179 JumpIfEqual {215}
	180 Move X8, 0x223E000
	181 Move V0, [X19+200]
	182 Move W1, [X19+72]
	183 Move X8, [X8+2696]
	184 Move X2, [X8]
	185 Call Dictionary`2<Tick, Double>.Add, X0, X1, V0
	186 And W2, W20, 1
	187 Move X0, X19
	188 Move W1, W21
	189 Call Simulation.InvokeTick, X0, X1, X2
	190 Move X20, X31
	191 Move X0, X31
	192 NotImplemented "Instruction STRH not yet implemented."
	193 Move [X19+218], W31
	194 Call EngineProfiler.End
	195 Compare X20, 0
	196 JumpIfNotEqual {209}
	197 Move X20, [X31+128]
	198 Move X19, [X31+136]
	199 Move X22, [X31+112]
	200 Move X21, [X31+120]
	201 Move X24, [X31+96]
	202 Move X23, [X31+104]
	203 Move X26, [X31+80]
	204 Move X25, [X31+88]
	205 Move X30, [X31+64]
	206 Add X31, X31, 144
	207 Return 
	208 Call 0x1C17F20
	209 Move X0, X20
	210 Call 0x1C17F18
	211 Call 0x1C17F20
	212 Call 0x1C17F20
	213 Call 0x1C17F20
	214 Call 0x1C17F20
	215 Call 0x1C17F20
	216 Move X0, X22
	217 Call 0x1C17F18
	218 Move X23, X0
	219 Move W20, W1
	220 Move X23, X0
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move X0, X23
	223 Call 0x3EB2AD0
	224 Move X22, [X0]
	225 Call 0x3EB2AE0
	226 Move X22, X31
	227 Move X8, 0x223E000
	228 Move X8, [X8+2712]
	229 Move W20, W1
	230 Move X1, [X8]
	231 Add X0, X31, 32
	232 Call Enumerator<NetworkId, Object>.Dispose, X0
	233 Compare X22, 0
	234 JumpIfNotEqual {265}
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Move X0, X23
	237 Call 0x3EB2AD0
	238 Move X20, X0
	239 Move X0, 0x2232000
	240 Move X0, [X0+2000]
	241 Call 0x1C17D08
	242 Move X8, [X20]
	243 Move X1, [X8]
	244 Call 0x1C18270
	245 Move TEMP, X0
	246 And TEMP, TEMP, 1
	247 Compare TEMP, 1
	248 JumpIfNotEqual {267}
	249 Move X20, [X20]
	250 Call 0x3EB2AE0
	251 Move X0, 0x223A000
	252 Move X0, [X0+2224]
	253 Call 0x1C17D08
	254 Move W8, [X0+224]
	255 Compare W8, 0
	256 JumpIfNotEqual {258}
	257 Call 0x1C17DFC
	258 Move X0, 0x223E000
	259 Move X0, [X0+2744]
	260 Call 0x1C17D08
	261 Move X2, X0
	262 Move X0, X19
	263 Move X1, X20
	264 Call 0x2214878, X0, X1
	265 Move X0, X22
	266 Call 0x1C17F18
	267 Move W0, 8
	268 Call 0x3EB2AF0
	269 Move X8, [X20]
	270 Move [X0], X8
	271 Move X1, 0x1FF3000
	272 Add X1, X1, 3672
	273 Move X2, X31
	274 Call 0x3EB2B00
	275 Move X23, X0
	276 Move W20, W1
	277 Move X23, X0
	278 Move X20, X1
	279 Move X23, X0
	280 Call 0x3EB2AE0
	281 Move X20, X1
	282 Move X23, X0
	283 Move W8, 1
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Move X0, X23
	286 Call 0x3EB2AD0
	287 Move X20, [X0]
	288 Call 0x3EB2AE0
	289 Move X20, X31
	290 Move X23, X0
	291 NotImplemented "Instruction STRH not yet implemented."
	292 Move [X19+218], W31
	293 Move X0, X31
	294 Call EngineProfiler.End
	295 Compare X20, 0
	296 JumpIfNotEqual {299}
	297 Move X0, X23
	298 Call 0x1D2D690
	299 Move X0, X20
	300 Call 0x1C17F18
	301 Call 0x1991590

Method: System.Void AfterUpdate()

Disassembly:
	0x01EC34F8 MOV X3, X31

ISIL:
	001 Return 

Method: System.Void NetworkConnected(Fusion.Sockets.NetConnection* connection)

Disassembly:
	0x01EC34FC LDR X30, [X31], #0x10

ISIL:
	001 Return 

Method: System.Void NetworkDisconnected(Fusion.Sockets.NetConnection* connection, Fusion.Sockets.NetDisconnectReason reason)

Disassembly:
	0x01EC3500 B 0x1DBF8E4

ISIL:
	001 Return 

Method: System.Void NetworkReceiveDone()

Disassembly:
	0x01EC3504 BL 0x1C16F20

ISIL:
	001 Return 

Method: System.Void NoSimulation()

Disassembly:
	0x01EC3508 STR X30, [X31 - 0x30]!

ISIL:
	001 Return 

Method: System.Int32 BeforeSimulation()

Disassembly:
	0x01EC350C STP X22, X21, [X31 + 0x10]
	0x01EC3510 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void BeforeFirstTick()

Disassembly:
	0x01EC3514 LDR X8, [X0 + 0x58]

ISIL:
	001 Return 

Method: System.Void SinglePlayerSetPaused(System.Boolean paused)

Disassembly:
	0x01EC3518 CBZ X8, 0x1EC363C
	0x01EC351C LDR W8, [X8 + 0x38]
	0x01EC3520 MOV X19, X0
	0x01EC3524 MOV X20, X1
	0x01EC3528 CMP W8, 0x1
	0x01EC352C B.NE 0x1EC3544
	0x01EC3530 MOV X0, X19
	0x01EC3534 BL 0x1EBDF30
	0x01EC3538 TBZ X0, 0x0, 0x1EC357C
	0x01EC353C MOVZ W0, 0x1
	0x01EC3540 B 0x1EC362C
	0x01EC3544 LDR X8, [X19]
	0x01EC3548 MOV X0, X19
	0x01EC354C LDR X9, [X8 + 0x268]
	0x01EC3550 LDR X1, [X8 + 0x270]
	0x01EC3554 BLR X9
	0x01EC3558 CBZ X20, 0x1EC363C
	0x01EC355C LDR X8, [X20 + 0xB0]
	0x01EC3560 CBZ X8, 0x1EC363C
	0x01EC3564 LDR W1, [X8 + 0x20]
	0x01EC3568 AND X2, X0, 0x0
	0x01EC356C MOV X0, X19
	0x01EC3570 MOV X3, X31
	0x01EC3574 BL 0x1DBF8E4
	0x01EC3578 TBNZ X0, 0x0, 0x1EC353C
	0x01EC357C ADRP X21, 0x2516000
	0x01EC3580 LDRB W8, [X21 + 0x4B9]
	0x01EC3584 CBNZ W8, 0x1EC359C
	0x01EC3588 ADRP X0, 0x2233000
	0x01EC358C LDR X0, [X0 + 0xE40]
	0x01EC3590 BL 0x1C16CF4
	0x01EC3594 MOVZ W8, 0x1
	0x01EC3598 STRB W8, [X21 + 0x4B9]
	0x01EC359C CBZ X20, 0x1EC363C
	0x01EC35A0 LDR X8, [X20 + 0xB0]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2517000
	007 Move W8, [X21+1120]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2235000
	015 Move X0, [X0+4056]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1120], W8
	019 Move W8, [X19+76]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X8, [X19+88]
	022 Compare X8, 0
	023 JumpIfEqual {41}
	024 Move W8, [X8+36]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, 0x2235000
	027 Move X8, [X8+4056]
	028 And W1, W20, 1
	029 Add X0, X31, 12
	030 NotImplemented "Instruction STRH not yet implemented."
	031 Move X2, [X8]
	032 Call Nullable`1<Boolean>..ctor, X0, X1
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 NotImplemented "Instruction STURH not yet implemented."
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X30, [X31+16]
	038 Move X21, [X31+24]
	039 Add X31, X31, 48
	040 Return 
	041 Call 0x1C17F20

Method: System.Void RequestStateAuthority(Fusion.NetworkId id, System.Boolean wants)

Disassembly:
	0x01EC35A4 CBZ X8, 0x1EC3628
	0x01EC35A8 LDR X8, [X19]
	0x01EC35AC MOV X0, X19
	0x01EC35B0 LDR X9, [X8 + 0x268]
	0x01EC35B4 LDR X1, [X8 + 0x270]
	0x01EC35B8 BLR X9
	0x01EC35BC ADRP X22, 0x2233000
	0x01EC35C0 LDR X22, [X22 + 0xE40]
	0x01EC35C4 MOV X21, X0
	0x01EC35C8 LDR X8, [X22]
	0x01EC35CC LDR W9, [X8 + 0xE0]
	0x01EC35D0 CBNZ W9, 0x1EC35DC
	0x01EC35D4 MOV X0, X8
	0x01EC35D8 BL 0x1C16DFC
	0x01EC35DC CMP W21, 0x1
	0x01EC35E0 B.LT 0x1EC3628
	0x01EC35E4 LDR X8, [X20 + 0xB0]
	0x01EC35E8 CBZ X8, 0x1EC363C
	0x01EC35EC LDR X9, [X19]
	0x01EC35F0 LDR W20, [X8 + 0x1C]
	0x01EC35F4 MOV X0, X19
	0x01EC35F8 LDR X8, [X9 + 0x268]
	0x01EC35FC LDR X1, [X9 + 0x270]
	0x01EC3600 BLR X8
	0x01EC3604 LDR X8, [X22]
	0x01EC3608 MOV X19, X0
	0x01EC360C LDR W9, [X8 + 0xE0]
	0x01EC3610 CBNZ W9, 0x1EC361C
	0x01EC3614 MOV X0, X8
	0x01EC3618 BL 0x1C16DFC
	0x01EC361C CMP W20, W19
	0x01EC3620 CSET W0, EQ
	0x01EC3624 B 0x1EC362C
	0x01EC3628 MOV W0, W31
	0x01EC362C LDP X20, X19, [X31 + 0x20]
	0x01EC3630 LDP X22, X21, [X31 + 0x10]
	0x01EC3634 LDR X30, [X31], #0x30
	0x01EC3638 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2517000
	007 Move W8, [X22+1121]
	008 Move W21, W2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x223D000
	016 Move X0, [X0+2808]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1121], W8
	020 Move X8, [X20+88]
	021 Compare X8, 0
	022 JumpIfEqual {48}
	023 Move W8, [X8+56]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X9, 0x223D000
	026 Move X9, [X9+2808]
	027 And W31, W21, 1
	028 Move X8, 1
	029 NotImplemented "Instruction CSEL not yet implemented."
	030 Move X4, [X9]
	031 NotImplemented "Instruction BFM not yet implemented."
	032 Move X0, X20
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move W1, 4
	038 Move X3, X31
	039 Move X30, [X31+48]
	040 Call Simulation.SendInternalSimulationMessage, X0, X1, X2, X3
	041 Return 
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Return 
	048 Call 0x1C17F20

Method: System.Void SetPlayerAlwaysInterested(Fusion.PlayerRef player, Fusion.NetworkId id, System.Boolean alwaysInterested)

Disassembly:
	0x01EC363C BL 0x1C16F20
	0x01EC3640 STR X30, [X31 - 0x30]!
	0x01EC3644 STP X22, X21, [X31 + 0x10]
	0x01EC3648 STP X20, X19, [X31 + 0x20]
	0x01EC364C LDR X8, [X0 + 0x58]
	0x01EC3650 CBZ X8, 0x1EC3774
	0x01EC3654 LDR W8, [X8 + 0x38]
	0x01EC3658 MOV X19, X0
	0x01EC365C MOV X20, X1
	0x01EC3660 CMP W8, 0x1
	0x01EC3664 B.NE 0x1EC367C
	0x01EC3668 MOV X0, X19
	0x01EC366C BL 0x1EBDF30
	0x01EC3670 TBZ X0, 0x0, 0x1EC36B4
	0x01EC3674 MOVZ W0, 0x1
	0x01EC3678 B 0x1EC3764
	0x01EC367C LDR X8, [X19]
	0x01EC3680 MOV X0, X19
	0x01EC3684 LDR X9, [X8 + 0x268]
	0x01EC3688 LDR X1, [X8 + 0x270]
	0x01EC368C BLR X9
	0x01EC3690 CBZ X20, 0x1EC3774
	0x01EC3694 LDR X8, [X20 + 0x20]
	0x01EC3698 CBZ X8, 0x1EC3774
	0x01EC369C LDR W1, [X8 + 0x20]
	0x01EC36A0 AND X2, X0, 0x0
	0x01EC36A4 MOV X0, X19
	0x01EC36A8 MOV X3, X31
	0x01EC36AC BL 0x1DBF8E4
	0x01EC36B0 TBNZ X0, 0x0, 0x1EC3674
	0x01EC36B4 ADRP X21, 0x2516000
	0x01EC36B8 LDRB W8, [X21 + 0x2EE]
	0x01EC36BC CBNZ W8, 0x1EC36D4
	0x01EC36C0 ADRP X0, 0x2233000
	0x01EC36C4 LDR X0, [X0 + 0xE40]
	0x01EC36C8 BL 0x1C16CF4
	0x01EC36CC MOVZ W8, 0x1
	0x01EC36D0 STRB W8, [X21 + 0x2EE]
	0x01EC36D4 CBZ X20, 0x1EC3774
	0x01EC36D8 LDR X8, [X20 + 0x20]
	0x01EC36DC CBZ X8, 0x1EC3760
	0x01EC36E0 LDR X8, [X19]
	0x01EC36E4 MOV X0, X19
	0x01EC36E8 LDR X9, [X8 + 0x268]
	0x01EC36EC LDR X1, [X8 + 0x270]
	0x01EC36F0 BLR X9
	0x01EC36F4 ADRP X22, 0x2233000
	0x01EC36F8 LDR X22, [X22 + 0xE40]
	0x01EC36FC MOV X21, X0
	0x01EC3700 LDR X8, [X22]
	0x01EC3704 LDR W9, [X8 + 0xE0]
	0x01EC3708 CBNZ W9, 0x1EC3714
	0x01EC370C MOV X0, X8
	0x01EC3710 BL 0x1C16DFC
	0x01EC3714 CMP W21, 0x1
	0x01EC3718 B.LT 0x1EC3760
	0x01EC371C LDR X8, [X20 + 0x20]
	0x01EC3720 CBZ X8, 0x1EC3774
	0x01EC3724 LDR X9, [X19]
	0x01EC3728 LDR W20, [X8 + 0x1C]
	0x01EC372C MOV X0, X19
	0x01EC3730 LDR X8, [X9 + 0x268]
	0x01EC3734 LDR X1, [X9 + 0x270]
	0x01EC3738 BLR X8
	0x01EC373C LDR X8, [X22]
	0x01EC3740 MOV X19, X0
	0x01EC3744 LDR W9, [X8 + 0xE0]
	0x01EC3748 CBNZ W9, 0x1EC3754
	0x01EC374C MOV X0, X8
	0x01EC3750 BL 0x1C16DFC
	0x01EC3754 CMP W20, W19
	0x01EC3758 CSET W0, EQ
	0x01EC375C B 0x1EC3764
	0x01EC3760 MOV W0, W31
	0x01EC3764 LDP X20, X19, [X31 + 0x20]
	0x01EC3768 LDP X22, X21, [X31 + 0x10]
	0x01EC376C LDR X30, [X31], #0x30
	0x01EC3770 RET
	0x01EC3774 BL 0x1C16F20
	0x01EC3778 STR X30, [X31 - 0x30]!
	0x01EC377C STP X22, X21, [X31 + 0x10]
	0x01EC3780 STP X20, X19, [X31 + 0x20]
	0x01EC3784 ADRP X21, 0x2516000
	0x01EC3788 LDRB W8, [X21 + 0x46D]
	0x01EC378C MOV X20, X1
	0x01EC3790 MOV X19, X0
	0x01EC3794 TBNZ X8, 0x0, 0x1EC37AC
	0x01EC3798 ADRP X0, 0x2233000
	0x01EC379C LDR X0, [X0 + 0xE40]
	0x01EC37A0 BL 0x1C16CF4
	0x01EC37A4 MOVZ W8, 0x1
	0x01EC37A8 STRB W8, [X21 + 0x46D]
	0x01EC37AC CBZ X20, 0x1EC384C
	0x01EC37B0 LDR X8, [X20 + 0xB0]
	0x01EC37B4 CBZ X8, 0x1EC3838
	0x01EC37B8 LDR X8, [X19]
	0x01EC37BC ADRP X22, 0x2233000
	0x01EC37C0 MOV X0, X19
	0x01EC37C4 LDR X9, [X8 + 0x268]
	0x01EC37C8 LDR X1, [X8 + 0x270]
	0x01EC37CC LDR X22, [X22 + 0xE40]
	0x01EC37D0 BLR X9
	0x01EC37D4 LDR X8, [X22]
	0x01EC37D8 MOV X21, X0
	0x01EC37DC LDR W9, [X8 + 0xE0]
	0x01EC37E0 CBNZ W9, 0x1EC37EC
	0x01EC37E4 MOV X0, X8
	0x01EC37E8 BL 0x1C16DFC
	0x01EC37EC CMP W21, 0x1
	0x01EC37F0 B.LT 0x1EC3838
	0x01EC37F4 LDR X8, [X20 + 0xB0]
	0x01EC37F8 CBZ X8, 0x1EC384C
	0x01EC37FC LDR X9, [X19]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X23, 0x2517000
	009 Move W8, [X23+1122]
	010 Move W19, W3
	011 Move X21, X2
	012 Move X22, X1
	013 Move X20, X0
	014 Move [X31+16], W22
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x2234000
	020 Move X0, [X0+3648]
	021 Call 0x1C17CF4
	022 Move X0, 0x223D000
	023 Move X0, [X0+2816]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+1122], W8
	027 Move [X31+8], X31
	028 Move X8, [X20+88]
	029 Compare X8, 0
	030 JumpIfEqual {133}
	031 Move W9, [X8+20]
	032 NotImplemented "Instruction ORN not yet implemented."
	033 And W31, W9, 3
	034 Move W8, [X8+56]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, 0x2234000
	037 Move X8, [X8+3648]
	038 Move X0, [X8]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Add X0, X31, 16
	044 Move X1, X31
	045 Call PlayerRef.get_AsIndex, X0
	046 Move X9, 0x223D000
	047 Move X9, [X9+2816]
	048 And W31, W19, 1
	049 Move X8, 1
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 Move X5, [X9]
	052 NotImplemented "Instruction BFM not yet implemented."
	053 Move W3, W0
	054 Move W1, 3
	055 Move X0, X20
	056 Move X4, X31
	057 Call Simulation.SendInternalSimulationMessage, X0, X1, X2, X3
	058 Move X8, [X20]
	059 Move X0, X20
	060 Move X9, [X8+616]
	061 Move X1, [X8+624]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X8, 0x2234000
	064 Move X8, [X8+3648]
	065 Move X23, X0
	066 Move X8, [X8]
	067 Move W9, [X8+224]
	068 Compare W9, 0
	069 JumpIfNotEqual {72}
	070 Move X0, X8
	071 Call 0x1C17DFC
	072 NotImplemented "Instruction CMP not yet implemented."
	073 And X1, X22, 0
	074 Move X0, X20
	075 Call Simulation.PlayerValid, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {125}
	080 And X1, X21, 0
	081 Add X2, X31, 8
	082 Move X0, X20
	083 Call Simulation.TryGetMeta, X0, X1, X2
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {125}
	088 Move X22, 0x2516000
	089 Move W8, [X22+2931]
	090 Move W21, [X31+16]
	091 Compare W8, 0
	092 JumpIfNotEqual {98}
	093 Move X0, 0x2236000
	094 Move X0, [X0+32]
	095 Call 0x1C17CF4
	096 Move W8, 1
	097 Move [X22+2931], W8
	098 Move [X31+24], X31
	099 Move X0, [X20+184]
	100 Compare X0, 0
	101 JumpIfEqual {133}
	102 Move X8, 0x2236000
	103 Move X8, [X8+32]
	104 Add X2, X31, 24
	105 Move X1, X21
	106 Move X3, [X8]
	107 Call Dictionary`2<PlayerRef, Object>.TryGetValue, X0, X1, X2
	108 Move X8, [X31+24]
	109 And W31, W0, 1
	110 NotImplemented "Instruction CSEL not yet implemented."
	111 Move TEMP, X19
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {120}
	115 Compare X0, 0
	116 JumpIfEqual {125}
	117 Move X1, [X31+8]
	118 Move X2, X31
	119 Call SimulationConnection.AddAlwaysInterested, X0, X1
	120 Compare X0, 0
	121 JumpIfEqual {125}
	122 Move X1, [X31+8]
	123 Move X2, X31
	124 Call SimulationConnection.RemoveAlwaysInterested, X0, X1
	125 Move X20, [X31+64]
	126 Move X19, [X31+72]
	127 Move X22, [X31+48]
	128 Move X21, [X31+56]
	129 Move X30, [X31+32]
	130 Move X23, [X31+40]
	131 Add X31, X31, 80
	132 Return 
	133 Call 0x1C17F20

Method: System.Void TempFree(System.Void* ptr)

Disassembly:
	0x01EC3858 STP X20, X19, [X31 + 0x20]
	0x01EC385C ADRP X21, 0x2516000
	0x01EC3860 LDRB W8, [X21 + 0x46E]
	0x01EC3864 MOV X20, X1
	0x01EC3868 MOV X19, X0
	0x01EC386C TBNZ X8, 0x0, 0x1EC3884
	0x01EC3870 ADRP X0, 0x2233000
	0x01EC3874 LDR X0, [X0 + 0xE40]
	0x01EC3878 BL 0x1C16CF4
	0x01EC387C MOVZ W8, 0x1
	0x01EC3880 STRB W8, [X21 + 0x46E]
	0x01EC3884 CBZ X20, 0x1EC3924
	0x01EC3888 LDR X8, [X20 + 0x20]
	0x01EC388C CBZ X8, 0x1EC3910
	0x01EC3890 LDR X8, [X19]
	0x01EC3894 ADRP X22, 0x2233000
	0x01EC3898 MOV X0, X19
	0x01EC389C LDR X9, [X8 + 0x268]
	0x01EC38A0 LDR X1, [X8 + 0x270]
	0x01EC38A4 LDR X22, [X22 + 0xE40]
	0x01EC38A8 BLR X9
	0x01EC38AC LDR X8, [X22]
	0x01EC38B0 MOV X21, X0
	0x01EC38B4 LDR W9, [X8 + 0xE0]
	0x01EC38B8 CBNZ W9, 0x1EC38C4
	0x01EC38BC MOV X0, X8
	0x01EC38C0 BL 0x1C16DFC
	0x01EC38C4 CMP W21, 0x1
	0x01EC38C8 B.LT 0x1EC3910
	0x01EC38CC LDR X8, [X20 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2517000
	006 Move W8, [X21+1123]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x223D000
	014 Move X0, [X0+2832]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1123], W8
	018 Move X0, [X20+408]
	019 Move X1, X19
	020 Move X2, X31
	021 Call Allocator.IsPointerInHeap, X0, X1
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {35}
	026 Move X0, [X20+408]
	027 Move X1, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X2, X31
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call Allocator.Free, X0, X1
	034 Return 
	035 Move X8, 0x223D000
	036 Move X8, [X8+2832]
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X1, X31
	040 Move X0, [X8]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Call Assert.AlwaysFail, X0
	044 Return 

Method: System.Void* TempAlloc(System.Int32 size)

Disassembly:
	0x01EC38D0 CBZ X8, 0x1EC3924
	0x01EC38D4 LDR X9, [X19]
	0x01EC38D8 LDR W20, [X8 + 0x1C]
	0x01EC38DC MOV X0, X19
	0x01EC38E0 LDR X8, [X9 + 0x268]
	0x01EC38E4 LDR X1, [X9 + 0x270]
	0x01EC38E8 BLR X8
	0x01EC38EC LDR X8, [X22]
	0x01EC38F0 MOV X19, X0
	0x01EC38F4 LDR W9, [X8 + 0xE0]
	0x01EC38F8 CBNZ W9, 0x1EC3904
	0x01EC38FC MOV X0, X8
	0x01EC3900 BL 0x1C16DFC
	0x01EC3904 CMP W20, W19
	0x01EC3908 CSET W0, EQ
	0x01EC390C B 0x1EC3914
	0x01EC3910 MOV W0, W31
	0x01EC3914 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X0, [X0+408]
	006 Move X2, X31
	007 Move W19, W1
	008 Call Allocator.CanAllocSizeAssert_Temp, X0, X1
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {21}
	013 Move X0, [X20+408]
	014 Move W1, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X2, X31
	018 Move X30, [X31+32]
	019 Call Allocator.AllocAndClear, X0, X1
	020 Return X0
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X0, X31
	024 Move X30, [X31+32]
	025 Return X0

Method: T* TempAlloc()

Disassembly:
	0x02256010 MOV X0, X20
	0x02256014 BL 0x1C5C6E0
	0x02256018 CBZ X21, 0x22560D4

ISIL:
	001 Move W1, 32
	002 Move X2, X31
	003 Call Simulation.TempAlloc, X0, X1
	004 Return X0

Method: T* TempAllocArray(System.Int32 length)

Disassembly:
	0x02256068 MOV W2, W31
	0x0225606C BL 0x1C5C788
	0x02256070 B 0x2256080
	0x02256074 LDRSW X9, [X10]

ISIL:
	001 Add W8, W1, W1
	002 Move W1, W8
	003 ShiftRight W1, 30
	004 And W1, W1, 0x1FFFFFFF
	005 Move X2, X31
	006 Call Simulation.TempAlloc, X0, X1
	007 Return X0

Method: T* TempDoubleArray(T* oldArray, System.Int32 oldLength)

Disassembly:
	0x022560C0 LDP X20, X19, [X31 + 0x20]
	0x022560C4 LDP X22, X21, [X31 + 0x10]
	0x022560C8 LDR X4, [X3]
	0x022560CC LDR X30, [X31], #0x30
	0x022560D0 BR X4
	0x022560D4 BL 0x1C16F20
	0x022560D8 STR X30, [X31 - 0x30]!
	0x022560DC STP X22, X21, [X31 + 0x10]
	0x022560E0 STP X20, X19, [X31 + 0x20]
	0x022560E4 LDR X8, [X2 + 0x38]
	0x022560E8 MOV X20, X2
	0x022560EC MOV X19, X1
	0x022560F0 MOV X21, X0
	0x022560F4 CBNZ X8, 0x2256114
	0x022560F8 ADRP X0, 0x1EC6000
	0x022560FC LDR X0, [X0 + 0x4F8]
	0x02256100 BL 0x1C16CF4
	0x02256104 LDR X8, [X20 + 0x38]
	0x02256108 CBNZ X8, 0x2256114
	0x0225610C MOV X0, X20
	0x02256110 BL 0x1C5C6E0
	0x02256114 CBZ X21, 0x22561CC
	0x02256118 LDR X8, [X20 + 0x38]
	0x0225611C LDR X1, [X8 + 0x10]
	0x02256120 LDRB W8, [X1 + 0x135]
	0x02256124 TBNZ X8, 0x0, 0x2256134
	0x02256128 MOV X0, X1
	0x0225612C BL 0x1C5C684
	0x02256130 MOV X1, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move W21, W2
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {14}
	012 Move X0, X3
	013 Call 0x1C5D6E0
	014 Add W22, W21, W21
	015 Move W1, W22
	016 ShiftRight W1, 29
	017 And W1, W1, 0xFFFFFFF
	018 Move X0, X20
	019 Move X2, X31
	020 Call Simulation.TempAlloc, X0, X1
	021 Move W2, W22
	022 ShiftRight W2, 30
	023 And W2, W2, 0x1FFFFFFF
	024 Move X1, X19
	025 Move X3, X31
	026 Move X21, X0
	027 Call Native.MemCpy, X0, X1, X2
	028 Move X0, X20
	029 Move X1, X19
	030 Move X2, X31
	031 Call Simulation.TempFree, X0, X1
	032 Move X0, X21
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return X0

Method: System.Void ShutdownNativeSocket()

Disassembly:
	0x01EC3918 LDP X22, X21, [X31 + 0x10]
	0x01EC391C LDR X30, [X31], #0x30
	0x01EC3920 RET
	0x01EC3924 BL 0x1C16F20

ISIL:
	001 Move W8, [X0+48]
	002 Compare W8, 0
	003 Invalid "Jump target not found in method."
	004 Return 

Method: System.Void Dispose()

Disassembly:
	0x01EC3ADC MOV X19, X0
	0x01EC3AE0 TBNZ X8, 0x0, 0x1EC3B10
	0x01EC3AE4 ADRP X0, 0x2233000
	0x01EC3AE8 LDR X0, [X0 + 0x398]
	0x01EC3AEC BL 0x1C16CF4
	0x01EC3AF0 ADRP X0, 0x2233000
	0x01EC3AF4 LDR X0, [X0 + 0xE40]
	0x01EC3AF8 BL 0x1C16CF4
	0x01EC3AFC ADRP X0, 0x2235000
	0x01EC3B00 LDR X0, [X0 + 0x28]
	0x01EC3B04 BL 0x1C16CF4
	0x01EC3B08 MOVZ W8, 0x1
	0x01EC3B0C STRB W8, [X21 + 0x46F]
	0x01EC3B10 STR X31, [X31 + 0x8]
	0x01EC3B14 LDR X8, [X19 + 0x58]
	0x01EC3B18 CBZ X8, 0x1EC3BDC
	0x01EC3B1C LDR W8, [X8 + 0x38]
	0x01EC3B20 CMP W8, 0x1
	0x01EC3B24 B.EQ 0x1EC3BB0
	0x01EC3B28 CMP W8, 0x2
	0x01EC3B2C B.NE 0x1EC3BB8
	0x01EC3B30 CBZ X20, 0x1EC3BDC
	0x01EC3B34 LDR X21, [X20 + 0x20]
	0x01EC3B38 CBZ X21, 0x1EC3BDC
	0x01EC3B3C ADRP X8, 0x2233000
	0x01EC3B40 LDR X8, [X8 + 0xE40]
	0x01EC3B44 LDR X0, [X8]
	0x01EC3B48 LDR W8, [X0 + 0xE0]
	0x01EC3B4C CBNZ W8, 0x1EC3B54
	0x01EC3B50 BL 0x1C16DFC
	0x01EC3B54 LDR W8, [X21 + 0x20]
	0x01EC3B58 ADDS W31, W8, 0x1
	0x01EC3B5C B.NE 0x1EC3BBC
	0x01EC3B60 ADRP X8, 0x2233000
	0x01EC3B64 LDR X8, [X8 + 0x398]
	0x01EC3B68 LDR X0, [X8]
	0x01EC3B6C LDR W8, [X0 + 0xE0]
	0x01EC3B70 CBNZ W8, 0x1EC3B78
	0x01EC3B74 BL 0x1C16DFC
	0x01EC3B78 MOV X0, X31
	0x01EC3B7C BL 0x1E92E48
	0x01EC3B80 ADRP X8, 0x2235000
	0x01EC3B84 LDR X8, [X8 + 0x28]
	0x01EC3B88 AND X1, X0, 0x0
	0x01EC3B8C ADD X2, X31, 0x8
	0x01EC3B90 MOV X0, X19
	0x01EC3B94 LDR X3, [X8]
	0x01EC3B98 BL 0x2255240
	0x01EC3B9C TBZ X0, 0x0, 0x1EC3BB0
	0x01EC3BA0 LDR X8, [X31 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2517000
	005 Move W8, [X20+1124]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x223C000
	012 Move X0, [X0+1944]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1124], W8
	016 Move W8, [X19+48]
	017 Compare W8, 0
	018 JumpIfNotEqual {47}
	019 Move X0, [X19+152]
	020 Move W8, 1
	021 Move [X19+48], W8
	022 Compare X0, 0
	023 JumpIfEqual {58}
	024 Move X1, X31
	025 Call Pool.Dispose, X0
	026 Move X0, [X19+408]
	027 Move X1, X31
	028 Move [X19+144], X31
	029 Move [X19+152], X31
	030 Call Allocator.Dispose, X0
	031 Move X0, [X19+416]
	032 Move X1, X31
	033 Move [X19+408], X31
	034 Call Allocator.Dispose, X0
	035 Move [X19+416], X31
	036 Move X8, 0x223C000
	037 Move X8, [X8+1944]
	038 Move X9, [X19]
	039 Move X8, [X8]
	040 Move W11, [X9+304]
	041 Move W10, [X8+304]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X9, [X9+200]
	044 Add X9, X9, X10
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Return 
	051 Move X0, X19
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X1, X31
	055 Move X30, [X31+32]
	056 Call Server.DisposeHostMigration, X0
	057 Return 
	058 Call 0x1C17F20

Method: System.Void Destroy(Fusion.NetworkId id, Fusion.NetworkObjectDestroyFlags flags)

Disassembly:
	0x01EC3BA4 CBZ X8, 0x1EC3BDC
	0x01EC3BA8 LDR W8, [X8 + 0x18]
	0x01EC3BAC B 0x1EC3BC8
	0x01EC3BB0 MOV W8, W31
	0x01EC3BB4 B 0x1EC3BC8
	0x01EC3BB8 CBZ X20, 0x1EC3BDC
	0x01EC3BBC LDR X8, [X20 + 0x20]
	0x01EC3BC0 CBZ X8, 0x1EC3BDC
	0x01EC3BC4 LDR W8, [X8 + 0x20]
	0x01EC3BC8 LDP X20, X19, [X31 + 0x20]
	0x01EC3BCC LDP X30, X21, [X31 + 0x10]
	0x01EC3BD0 MOV W0, W8
	0x01EC3BD4 ADD X31, X31, 0x30
	0x01EC3BD8 RET
	0x01EC3BDC BL 0x1C16F20
	0x01EC3BE0 SUB X31, X31, 0x30
	0x01EC3BE4 STP X30, X21, [X31 + 0x10]
	0x01EC3BE8 STP X20, X19, [X31 + 0x20]
	0x01EC3BEC ADRP X21, 0x2516000
	0x01EC3BF0 LDRB W8, [X21 + 0x470]
	0x01EC3BF4 MOV X19, X1
	0x01EC3BF8 MOV X20, X0
	0x01EC3BFC TBNZ X8, 0x0, 0x1EC3C14
	0x01EC3C00 ADRP X0, 0x2230000
	0x01EC3C04 LDR X0, [X0 + 0x618]
	0x01EC3C08 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 And X20, X1, 0
	007 Move W19, W2
	008 Add X2, X31, 8
	009 Move X1, X20
	010 Move X21, X0
	011 Move [X31+8], X31
	012 Call Simulation.TryGetMeta, X0, X1, X2
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {21}
	017 Move X1, [X31+8]
	018 Move X0, X21
	019 Move W2, W31
	020 Call Simulation.AOI_RemoveFromAreaOfInterest, X0, X1, X2
	021 Move X0, [X21+168]
	022 Compare X0, 0
	023 JumpIfEqual {34}
	024 Move X1, X20
	025 Move W2, W19
	026 Move X3, X31
	027 Call StateReplicator.OnObjectDestroyed, X0, X1, X2
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X30, [X31+16]
	031 Move X21, [X31+24]
	032 Add X31, X31, 48
	033 Return 
	034 Call 0x1C17F20

Method: System.Boolean PlayerValid(Fusion.PlayerRef player)

Disassembly:
	0x01EC3800 LDR W20, [X8 + 0x1C]
	0x01EC3804 MOV X0, X19
	0x01EC3808 LDR X8, [X9 + 0x268]
	0x01EC380C LDR X1, [X9 + 0x270]
	0x01EC3810 BLR X8
	0x01EC3814 LDR X8, [X22]
	0x01EC3818 MOV X19, X0
	0x01EC381C LDR W9, [X8 + 0xE0]
	0x01EC3820 CBNZ W9, 0x1EC382C
	0x01EC3824 MOV X0, X8
	0x01EC3828 BL 0x1C16DFC
	0x01EC382C CMP W20, W19
	0x01EC3830 CSET W0, EQ
	0x01EC3834 B 0x1EC383C
	0x01EC3838 MOV W0, W31
	0x01EC383C LDP X20, X19, [X31 + 0x20]
	0x01EC3840 LDP X22, X21, [X31 + 0x10]
	0x01EC3844 LDR X30, [X31], #0x30
	0x01EC3848 RET
	0x01EC384C BL 0x1C16F20
	0x01EC3850 STR X30, [X31 - 0x30]!
	0x01EC3854 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2517000
	006 Move W8, [X21+1125]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x223D000
	014 Move X0, [X0+2824]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1125], W8
	018 Move X0, [X20+192]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x223D000
	022 Move X8, [X8+2824]
	023 And X1, X19, 0
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call HashSet`1<PlayerRef>.Contains, X0, X1
	030 Return X0
	031 Call 0x1C17F20

Method: System.Void PlayerAdd(Fusion.PlayerRef player, Fusion.SimulationConnection connection)

Disassembly:
	0x01EC3C0C MOVZ W8, 0x1
	0x01EC3C10 STRB W8, [X21 + 0x470]
	0x01EC3C14 AND X19, X19, 0x0
	0x01EC3C18 MOV X0, X20
	0x01EC3C1C MOV X1, X19
	0x01EC3C20 BL 0x1EC2800
	0x01EC3C24 TBZ X0, 0x0, 0x1EC3CBC
	0x01EC3C28 ADRP X21, 0x2515000
	0x01EC3C2C LDRB W8, [X21 + 0xB73]
	0x01EC3C30 CBNZ W8, 0x1EC3C48
	0x01EC3C34 ADRP X0, 0x2235000
	0x01EC3C38 LDR X0, [X0 + 0x20]
	0x01EC3C3C BL 0x1C16CF4
	0x01EC3C40 MOVZ W8, 0x1
	0x01EC3C44 STRB W8, [X21 + 0xB73]
	0x01EC3C48 STR X31, [X31 + 0x8]
	0x01EC3C4C LDR X0, [X20 + 0xB8]
	0x01EC3C50 CBZ X0, 0x1EC3CF4
	0x01EC3C54 ADRP X8, 0x2235000
	0x01EC3C58 LDR X8, [X8 + 0x20]
	0x01EC3C5C ADD X2, X31, 0x8
	0x01EC3C60 MOV X1, X19
	0x01EC3C64 LDR X3, [X8]
	0x01EC3C68 BL 0x2AE89D0
	0x01EC3C6C LDR X20, [X31 + 0x8]
	0x01EC3C70 CBZ X20, 0x1EC3CF4
	0x01EC3C74 TBZ X0, 0x0, 0x1EC3CF4
	0x01EC3C78 LDR X8, [X20 + 0xD0]
	0x01EC3C7C CBZ X8, 0x1EC3CF4
	0x01EC3C80 LDR X9, [X8 + 0x108]
	0x01EC3C84 CBZ X9, 0x1EC3CBC
	0x01EC3C88 LDR W1, [X8 + 0x110]
	0x01EC3C8C CMP W1, 0x1
	0x01EC3C90 B.LT 0x1EC3CBC
	0x01EC3C94 ADRP X8, 0x2230000
	0x01EC3C98 LDR X8, [X8 + 0x618]
	0x01EC3C9C LDR X0, [X8]
	0x01EC3CA0 BL 0x1C16D6C
	0x01EC3CA4 MOV X19, X0
	0x01EC3CA8 CBZ X0, 0x1EC3CD8
	0x01EC3CAC LDR W8, [X19 + 0x18]
	0x01EC3CB0 CBZ W8, 0x1EC3CD4
	0x01EC3CB4 ADD X0, X19, 0x20
	0x01EC3CB8 B 0x1EC3CD8
	0x01EC3CBC MOV X19, X31
	0x01EC3CC0 MOV X0, X19
	0x01EC3CC4 LDP X20, X19, [X31 + 0x20]
	0x01EC3CC8 LDP X30, X21, [X31 + 0x10]
	0x01EC3CCC ADD X31, X31, 0x30
	0x01EC3CD0 RET
	0x01EC3CD4 MOV X0, X31
	0x01EC3CD8 LDR X8, [X20 + 0xD0]
	0x01EC3CDC CBZ X8, 0x1EC3CF4
	0x01EC3CE0 LDR X1, [X8 + 0x108]
	0x01EC3CE4 LDR W2, [X8 + 0x110]
	0x01EC3CE8 MOV X3, X31
	0x01EC3CEC BL 0x1E35764
	0x01EC3CF0 B 0x1EC3CC0
	0x01EC3CF4 BL 0x1C16F20
	0x01EC3CF8 STR X30, [X31 - 0x30]!
	0x01EC3CFC STP X22, X21, [X31 + 0x10]
	0x01EC3D00 STP X20, X19, [X31 + 0x20]
	0x01EC3D04 AND X20, X1, 0x0
	0x01EC3D08 MOV X1, X20
	0x01EC3D0C MOV X21, X0
	0x01EC3D10 MOV X19, X8
	0x01EC3D14 BL 0x1EC2800
	0x01EC3D18 TBZ X0, 0x0, 0x1EC3D88
	0x01EC3D1C ADRP X22, 0x2515000
	0x01EC3D20 LDRB W8, [X22 + 0xB73]
	0x01EC3D24 CBNZ W8, 0x1EC3D3C
	0x01EC3D28 ADRP X0, 0x2235000
	0x01EC3D2C LDR X0, [X0 + 0x20]
	0x01EC3D30 BL 0x1C16CF4
	0x01EC3D34 MOVZ W8, 0x1
	0x01EC3D38 STRB W8, [X22 + 0xB73]
	0x01EC3D3C STR X31, [X31 + 0x8]
	0x01EC3D40 LDR X0, [X21 + 0xB8]
	0x01EC3D44 CBZ X0, 0x1EC3DA0
	0x01EC3D48 ADRP X8, 0x2235000
	0x01EC3D4C LDR X8, [X8 + 0x20]
	0x01EC3D50 ADD X2, X31, 0x8
	0x01EC3D54 MOV X1, X20
	0x01EC3D58 LDR X3, [X8]
	0x01EC3D5C BL 0x2AE89D0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x2517000
	008 Move W8, [X22+1126]
	009 Move X21, X2
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x223D000
	017 Move X0, [X0+2840]
	018 Call 0x1C17CF4
	019 Move X0, 0x223D000
	020 Move X0, [X0+2848]
	021 Call 0x1C17CF4
	022 Move X0, 0x2234000
	023 Move X0, [X0+3648]
	024 Call 0x1C17CF4
	025 Move X0, 0x223D000
	026 Move X0, [X0+2856]
	027 Call 0x1C17CF4
	028 Move X0, 0x223D000
	029 Move X0, [X0+2864]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+1126], W8
	033 Move X0, [X20+192]
	034 Compare X0, 0
	035 JumpIfEqual {104}
	036 Move X8, 0x223D000
	037 Move X8, [X8+2848]
	038 Move X23, 0x223D000
	039 And X22, X19, 0
	040 Move X1, X22
	041 Move X2, [X8]
	042 Move X23, [X23+2864]
	043 Call HashSet`1<PlayerRef>.Add, X0, X1
	044 Move X1, [X23]
	045 And W0, W0, 1
	046 Move X2, X31
	047 Call Assert.Always, X0, X1
	048 Compare X21, 0
	049 JumpIfEqual {67}
	050 Move [X21+40], W19
	051 Move X0, [X20+184]
	052 Compare X0, 0
	053 JumpIfEqual {104}
	054 Move X8, 0x223D000
	055 Move X8, [X8+2840]
	056 Move X1, X22
	057 Move X2, X21
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X3, [X8]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+48]
	064 Move X23, [X31+56]
	065 Call Dictionary`2<PlayerRef, Object>.Add, X0, X1, X2
	066 Return 
	067 Move X0, X20
	068 Call Simulation.get_IsServer, X0
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {91}
	073 Move W8, [X20+76]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X8, [X20]
	076 Move X0, X20
	077 Move X9, [X8+616]
	078 Move X1, [X8+624]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X8, 0x2234000
	081 Move X8, [X8+3648]
	082 Move X20, X0
	083 Move X8, [X8]
	084 Move W9, [X8+224]
	085 Compare W9, 0
	086 JumpIfNotEqual {89}
	087 Move X0, X8
	088 Call 0x1C17DFC
	089 NotImplemented "Instruction CMP not yet implemented."
	090 NotImplemented "Instruction CSET not yet implemented."
	091 Move W0, W31
	092 Move X8, 0x223D000
	093 Move X8, [X8+2856]
	094 Move X20, [X31+32]
	095 Move X19, [X31+40]
	096 Move X22, [X31+16]
	097 Move X21, [X31+24]
	098 Move X2, X31
	099 Move X1, [X8]
	100 Move X30, [X31+48]
	101 Move X23, [X31+56]
	102 Call Assert.Always, X0, X1
	103 Return 
	104 Call 0x1C17F20

Method: System.Void PlayerRemove(Fusion.PlayerRef player)

Disassembly:
	0x01EC3D60 LDR X8, [X31 + 0x8]
	0x01EC3D64 CBZ X8, 0x1EC3D88
	0x01EC3D68 TBZ X0, 0x0, 0x1EC3D88
	0x01EC3D6C LDR X8, [X8 + 0xD0]
	0x01EC3D70 CBZ X8, 0x1EC3DA0
	0x01EC3D74 LDR X9, [X8 + 0x38]
	0x01EC3D78 LDUR V0, [X8 + 0x28]
	0x01EC3D7C STR X9, [X19 + 0x10]
	0x01EC3D80 STR V0, [X19]
	0x01EC3D84 B 0x1EC3D90
	0x01EC3D88 STP X31, X31, [X19]
	0x01EC3D8C STR X31, [X19 + 0x10]
	0x01EC3D90 LDP X20, X19, [X31 + 0x20]
	0x01EC3D94 LDP X22, X21, [X31 + 0x10]
	0x01EC3D98 LDR X30, [X31], #0x30
	0x01EC3D9C RET
	0x01EC3DA0 BL 0x1C16F20
	0x01EC3DA4 SUB X31, X31, 0x30
	0x01EC3DA8 STP X30, X21, [X31 + 0x10]
	0x01EC3DAC STP X20, X19, [X31 + 0x20]
	0x01EC3DB0 AND X19, X1, 0x0
	0x01EC3DB4 MOV X1, X19
	0x01EC3DB8 MOV X20, X0
	0x01EC3DBC BL 0x1EC2800
	0x01EC3DC0 TBZ X0, 0x0, 0x1EC3E2C
	0x01EC3DC4 ADRP X21, 0x2515000
	0x01EC3DC8 LDRB W8, [X21 + 0xB73]
	0x01EC3DCC CBNZ W8, 0x1EC3DE4
	0x01EC3DD0 ADRP X0, 0x2235000
	0x01EC3DD4 LDR X0, [X0 + 0x20]
	0x01EC3DD8 BL 0x1C16CF4
	0x01EC3DDC MOVZ W8, 0x1
	0x01EC3DE0 STRB W8, [X21 + 0xB73]
	0x01EC3DE4 STR X31, [X31 + 0x8]
	0x01EC3DE8 LDR X0, [X20 + 0xB8]
	0x01EC3DEC CBZ X0, 0x1EC3E40
	0x01EC3DF0 ADRP X8, 0x2235000
	0x01EC3DF4 LDR X8, [X8 + 0x20]
	0x01EC3DF8 ADD X2, X31, 0x8
	0x01EC3DFC MOV X1, X19
	0x01EC3E00 LDR X3, [X8]
	0x01EC3E04 BL 0x2AE89D0
	0x01EC3E08 LDR X9, [X31 + 0x8]
	0x01EC3E0C MOV W8, W0
	0x01EC3E10 MOV X0, X31
	0x01EC3E14 CBZ X9, 0x1EC3E30
	0x01EC3E18 TBZ X8, 0x0, 0x1EC3E30
	0x01EC3E1C LDR X8, [X9 + 0xD0]
	0x01EC3E20 CBZ X8, 0x1EC3E40
	0x01EC3E24 LDR X0, [X8 + 0x128]
	0x01EC3E28 B 0x1EC3E30
	0x01EC3E2C MOV X0, X31
	0x01EC3E30 LDP X20, X19, [X31 + 0x20]
	0x01EC3E34 LDP X30, X21, [X31 + 0x10]
	0x01EC3E38 ADD X31, X31, 0x30
	0x01EC3E3C RET
	0x01EC3E40 BL 0x1C16F20
	0x01EC3E44 STR X30, [X31 - 0x10]!
	0x01EC3E48 LDR X0, [X0 + 0xA0]
	0x01EC3E4C CBZ X0, 0x1EC3E60
	0x01EC3E50 AND X1, X1, 0x0
	0x01EC3E54 MOV X2, X31
	0x01EC3E58 LDR X30, [X31], #0x10
	0x01EC3E5C B 0x1ED8FC8
	0x01EC3E60 BL 0x1C16F20
	0x01EC3E64 SUB X31, X31, 0x30
	0x01EC3E68 STP X30, X21, [X31 + 0x10]
	0x01EC3E6C STP X20, X19, [X31 + 0x20]
	0x01EC3E70 ADRP X21, 0x2516000
	0x01EC3E74 LDRB W8, [X21 + 0x471]
	0x01EC3E78 MOV X20, X1
	0x01EC3E7C MOV X19, X0
	0x01EC3E80 TBNZ X8, 0x0, 0x1EC3EA4
	0x01EC3E84 ADRP X0, 0x223C000
	0x01EC3E88 LDR X0, [X0 + 0xB58]
	0x01EC3E8C BL 0x1C16CF4
	0x01EC3E90 ADRP X0, 0x223C000
	0x01EC3E94 LDR X0, [X0 + 0xB60]
	0x01EC3E98 BL 0x1C16CF4
	0x01EC3E9C MOVZ W8, 0x1
	0x01EC3EA0 STRB W8, [X21 + 0x471]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2517000
	007 Move W8, [X21+1127]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x223D000
	015 Move X0, [X0+2872]
	016 Call 0x1C17CF4
	017 Move X0, 0x223D000
	018 Move X0, [X0+2880]
	019 Call 0x1C17CF4
	020 Move X0, 0x2234000
	021 Move X0, [X0+3648]
	022 Call 0x1C17CF4
	023 Move X0, 0x223D000
	024 Move X0, [X0+2888]
	025 Call 0x1C17CF4
	026 Move X0, 0x223D000
	027 Move X0, [X0+2896]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+1127], W8
	031 Move X0, [X19+192]
	032 Compare X0, 0
	033 JumpIfEqual {95}
	034 Move X8, 0x223D000
	035 Move X8, [X8+2880]
	036 Move X22, 0x223D000
	037 And X21, X20, 0
	038 Move X1, X21
	039 Move X2, [X8]
	040 Move X22, [X22+2888]
	041 Call HashSet`1<PlayerRef>.Remove, X0, X1
	042 Move X1, [X22]
	043 And W0, W0, 1
	044 Move X2, X31
	045 Call Assert.Always, X0, X1
	046 Move X0, X19
	047 Call Simulation.get_IsServer, X0
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {75}
	052 Move W8, [X19+76]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X8, [X19]
	055 Move X0, X19
	056 Move X9, [X8+616]
	057 Move X1, [X8+624]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X8, 0x2234000
	060 Move X8, [X8+3648]
	061 Move X22, X0
	062 Move X8, [X8]
	063 Move W9, [X8+224]
	064 Compare W9, 0
	065 JumpIfNotEqual {68}
	066 Move X0, X8
	067 Call 0x1C17DFC
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X30, [X31+48]
	074 Return 
	075 Move X0, [X19+184]
	076 Compare X0, 0
	077 JumpIfEqual {95}
	078 Move X8, 0x223D000
	079 Move X8, [X8+2872]
	080 Move X19, 0x223D000
	081 Move X1, X21
	082 Move X2, [X8]
	083 Move X19, [X19+2896]
	084 Call Dictionary`2<PlayerRef, Object>.Remove, X0, X1
	085 Move X1, [X19]
	086 Move X20, [X31+32]
	087 Move X19, [X31+40]
	088 Move X22, [X31+16]
	089 Move X21, [X31+24]
	090 And W0, W0, 1
	091 Move X2, X31
	092 Move X30, [X31+48]
	093 Call Assert.Always, X0, X1
	094 Return 
	095 Call 0x1C17F20

Method: System.Boolean IsHostPlayer(Fusion.PlayerRef player)

Disassembly:
	0x01EC3EA4 MOV X0, X19
	0x01EC3EA8 STR W31, [X31 + 0x8]
	0x01EC3EAC BL 0x1EC0864
	0x01EC3EB0 TBNZ X0, 0x0, 0x1EC3F1C
	0x01EC3EB4 AND X20, X20, 0x0
	0x01EC3EB8 MOV X0, X19
	0x01EC3EBC MOV X1, X20
	0x01EC3EC0 MOV W2, W31
	0x01EC3EC4 BL 0x1EC3F30
	0x01EC3EC8 CBZ X0, 0x1EC3F1C
	0x01EC3ECC LDR X0, [X19 + 0x178]
	0x01EC3ED0 CBZ X0, 0x1EC3F2C
	0x01EC3ED4 ADRP X8, 0x223C000
	0x01EC3ED8 LDR X8, [X8 + 0xB60]
	0x01EC3EDC ADD X2, X31, 0x8
	0x01EC3EE0 MOV X1, X20
	0x01EC3EE4 LDR X3, [X8]
	0x01EC3EE8 BL 0x2AE588C
	0x01EC3EEC TBZ X0, 0x0, 0x1EC3F1C
	0x01EC3EF0 LDR X0, [X19 + 0x178]
	0x01EC3EF4 CBZ X0, 0x1EC3F2C
	0x01EC3EF8 ADRP X8, 0x223C000
	0x01EC3EFC LDR X8, [X8 + 0xB58]
	0x01EC3F00 MOV X1, X20
	0x01EC3F04 LDR X2, [X8]
	0x01EC3F08 BL 0x2AE5264
	0x01EC3F0C LDR W1, [X31 + 0x8]
	0x01EC3F10 MOVZ W2, 0x2
	0x01EC3F14 MOV X0, X19
	0x01EC3F18 BL 0x1EC2BA4
	0x01EC3F1C LDP X20, X19, [X31 + 0x20]
	0x01EC3F20 LDP X30, X21, [X31 + 0x10]
	0x01EC3F24 ADD X31, X31, 0x30
	0x01EC3F28 RET
	0x01EC3F2C BL 0x1C16F20
	0x01EC3F30 SUB X31, X31, 0xB0
	0x01EC3F34 STR X30, [X31 + 0x50]
	0x01EC3F38 STP X28, X27, [X31 + 0x60]
	0x01EC3F3C STP X26, X25, [X31 + 0x70]
	0x01EC3F40 STP X24, X23, [X31 + 0x80]
	0x01EC3F44 STP X22, X21, [X31 + 0x90]
	0x01EC3F48 STP X20, X19, [X31 + 0xA0]
	0x01EC3F4C ADRP X22, 0x2516000
	0x01EC3F50 ADRP X24, 0x2233000
	0x01EC3F54 LDRB W8, [X22 + 0x472]
	0x01EC3F58 LDR X24, [X24 + 0xE40]
	0x01EC3F5C MOV W21, W2
	0x01EC3F60 MOV X20, X1
	0x01EC3F64 MOV X19, X0
	0x01EC3F68 TBNZ X8, 0x0, 0x1EC404C
	0x01EC3F6C ADRP X0, 0x223C000
	0x01EC3F70 LDR X0, [X0 + 0xB68]
	0x01EC3F74 BL 0x1C16CF4
	0x01EC3F78 ADRP X0, 0x223C000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2517000
	007 Move X21, 0x2234000
	008 Move W8, [X22+1128]
	009 Move X21, [X21+920]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x2234000
	017 Move X0, [X0+920]
	018 Call 0x1C17CF4
	019 Move X0, 0x2234000
	020 Move X0, [X0+3648]
	021 Call 0x1C17CF4
	022 Move X0, 0x2236000
	023 Move X0, [X0+40]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+1128], W8
	027 Move X0, [X21]
	028 Move [X31+8], X31
	029 Move X21, 0x2236000
	030 Move W8, [X0+224]
	031 Move X21, [X21+40]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X31
	036 Call NetworkId.get_RuntimeConfig
	037 Move X3, [X21]
	038 And X1, X0, 0
	039 Add X2, X31, 8
	040 Move X0, X20
	041 Call Simulation.TryGetStructData, X0, X1, X2
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {59}
	046 Move X8, [X31+8]
	047 Compare X8, 0
	048 JumpIfEqual {66}
	049 Move X9, 0x2234000
	050 Move X9, [X9+3648]
	051 Move W20, [X8+28]
	052 Move X0, [X9]
	053 Move W9, [X0+224]
	054 Compare W9, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction CSET not yet implemented."
	059 Move W0, W31
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X30, [X31+48]
	065 Return X0
	066 Call 0x1C17F20

Method: System.Boolean TryGetHostPlayer(out Fusion.PlayerRef player)

Disassembly:
	0x01EC3F7C LDR X0, [X0 + 0xB70]
	0x01EC3F80 BL 0x1C16CF4
	0x01EC3F84 ADRP X0, 0x223C000
	0x01EC3F88 LDR X0, [X0 + 0xB60]
	0x01EC3F8C BL 0x1C16CF4
	0x01EC3F90 ADRP X0, 0x223C000
	0x01EC3F94 LDR X0, [X0 + 0xB78]
	0x01EC3F98 BL 0x1C16CF4
	0x01EC3F9C ADRP X0, 0x223C000
	0x01EC3FA0 LDR X0, [X0 + 0xB80]
	0x01EC3FA4 BL 0x1C16CF4
	0x01EC3FA8 ADRP X0, 0x223C000
	0x01EC3FAC LDR X0, [X0 + 0xB88]
	0x01EC3FB0 BL 0x1C16CF4
	0x01EC3FB4 ADRP X0, 0x223C000
	0x01EC3FB8 LDR X0, [X0 + 0xB90]
	0x01EC3FBC BL 0x1C16CF4
	0x01EC3FC0 ADRP X0, 0x2233000
	0x01EC3FC4 LDR X0, [X0 + 0x398]
	0x01EC3FC8 BL 0x1C16CF4
	0x01EC3FCC ADRP X0, 0x223B000
	0x01EC3FD0 LDR X0, [X0 + 0x378]
	0x01EC3FD4 BL 0x1C16CF4
	0x01EC3FD8 ADRP X0, 0x223B000
	0x01EC3FDC LDR X0, [X0 + 0x748]
	0x01EC3FE0 BL 0x1C16CF4
	0x01EC3FE4 ADRP X0, 0x2233000
	0x01EC3FE8 LDR X0, [X0 + 0xE40]
	0x01EC3FEC BL 0x1C16CF4
	0x01EC3FF0 ADRP X0, 0x223C000
	0x01EC3FF4 LDR X0, [X0 + 0xB98]
	0x01EC3FF8 BL 0x1C16CF4
	0x01EC3FFC ADRP X0, 0x223C000
	0x01EC4000 LDR X0, [X0 + 0xBA0]
	0x01EC4004 BL 0x1C16CF4
	0x01EC4008 ADRP X0, 0x223B000
	0x01EC400C LDR X0, [X0 + 0xBA8]
	0x01EC4010 BL 0x1C16CF4
	0x01EC4014 ADRP X0, 0x223B000
	0x01EC4018 LDR X0, [X0 + 0xBB0]
	0x01EC401C BL 0x1C16CF4
	0x01EC4020 ADRP X0, 0x2234000
	0x01EC4024 LDR X0, [X0 + 0x28]
	0x01EC4028 BL 0x1C16CF4
	0x01EC402C ADRP X0, 0x223B000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2517000
	007 Move X21, 0x2234000
	008 Move W8, [X22+1129]
	009 Move X21, [X21+920]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x2234000
	017 Move X0, [X0+920]
	018 Call 0x1C17CF4
	019 Move X0, 0x2236000
	020 Move X0, [X0+40]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1129], W8
	024 Move X0, [X21]
	025 Move [X31+8], X31
	026 Move X21, 0x2236000
	027 Move W8, [X0+224]
	028 Move X21, [X21+40]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X31
	033 Call NetworkId.get_RuntimeConfig
	034 Move X3, [X21]
	035 And X1, X0, 0
	036 Add X2, X31, 8
	037 Move X0, X20
	038 Call Simulation.TryGetStructData, X0, X1, X2
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {48}
	043 Move X8, [X31+8]
	044 Compare X8, 0
	045 JumpIfEqual {56}
	046 Move W8, [X8+28]
	047 Move [X19], W8
	048 Move [X19], W31
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 And W0, W0, 1
	054 Move X30, [X31+48]
	055 Return X0
	056 Call 0x1C17F20

Method: System.Nullable`1<System.Boolean> IsInterestedIn(Fusion.NetworkObject obj, Fusion.PlayerRef player)

Disassembly:
	0x01EC4030 LDR X0, [X0 + 0xBB8]
	0x01EC4034 BL 0x1C16CF4
	0x01EC4038 ADRP X0, 0x223B000
	0x01EC403C LDR X0, [X0 + 0xBC0]
	0x01EC4040 BL 0x1C16CF4
	0x01EC4044 MOVZ W8, 0x1
	0x01EC4048 STRB W8, [X22 + 0x472]
	0x01EC404C LDR X0, [X24]
	0x01EC4050 STR X31, [X31 + 0x58]
	0x01EC4054 STR W31, [X31 + 0x48]
	0x01EC4058 STR X31, [X31 + 0x40]
	0x01EC405C STP X31, X31, [X31 + 0x20]
	0x01EC4060 STR X31, [X31 + 0x30]
	0x01EC4064 STR X31, [X31 + 0x18]
	0x01EC4068 LDR W8, [X0 + 0xE0]
	0x01EC406C CBNZ W8, 0x1EC4074
	0x01EC4070 BL 0x1C16DFC
	0x01EC4074 ADDS W31, W20, 0x1
	0x01EC4078 B.NE 0x1EC40D0
	0x01EC407C ADRP X8, 0x2232000
	0x01EC4080 LDR X8, [X8 + 0x398]
	0x01EC4084 LDR X0, [X8]
	0x01EC4088 LDR W8, [X0 + 0xE0]
	0x01EC408C CBNZ W8, 0x1EC4094
	0x01EC4090 BL 0x1C16DFC
	0x01EC4094 MOV X0, X31
	0x01EC4098 BL 0x1E92E48
	0x01EC409C ADRP X8, 0x2234000
	0x01EC40A0 LDR X8, [X8 + 0x28]
	0x01EC40A4 AND X1, X0, 0x0
	0x01EC40A8 ADD X2, X31, 0x58
	0x01EC40AC MOV X0, X19
	0x01EC40B0 LDR X3, [X8]
	0x01EC40B4 BL 0x2255240
	0x01EC40B8 TBZ X0, 0x0, 0x1EC40CC
	0x01EC40BC LDR X8, [X31 + 0x58]
	0x01EC40C0 CBZ X8, 0x1EC436C
	0x01EC40C4 LDR W20, [X8 + 0x18]
	0x01EC40C8 B 0x1EC40D0
	0x01EC40CC MOVN W20, 0x0
	0x01EC40D0 LDR X0, [X24]
	0x01EC40D4 LDR W8, [X0 + 0xE0]
	0x01EC40D8 CBZ W8, 0x1EC40E4
	0x01EC40DC CBNZ W20, 0x1EC40EC
	0x01EC40E0 B 0x1EC4340
	0x01EC40E4 BL 0x1C16DFC
	0x01EC40E8 CBZ W20, 0x1EC4340
	0x01EC40EC LDR X0, [X24]
	0x01EC40F0 ADRP X23, 0x223B000
	0x01EC40F4 ADRP X22, 0x223B000
	0x01EC40F8 LDR W8, [X0 + 0xE0]
	0x01EC40FC LDR X23, [X23 + 0xBC0]
	0x01EC4100 LDR X22, [X22 + 0xB68]
	0x01EC4104 CBNZ W8, 0x1EC410C
	0x01EC4108 BL 0x1C16DFC
	0x01EC410C LDR X1, [X23]
	0x01EC4110 LDR X3, [X22]
	0x01EC4114 CMP W20, 0x0
	0x01EC4118 MOV W22, W20
	0x01EC411C CSET W0, GT
	0x01EC4120 MOV X2, X22
	0x01EC4124 BL 0x2181B00
	0x01EC4128 LDR X0, [X19 + 0x178]
	0x01EC412C CBZ X0, 0x1EC436C
	0x01EC4130 ADRP X8, 0x223B000
	0x01EC4134 LDR X8, [X8 + 0xB60]
	0x01EC4138 ADD X2, X31, 0x48
	0x01EC413C MOV X1, X22
	0x01EC4140 LDR X3, [X8]
	0x01EC4144 BL 0x2AE588C
	0x01EC4148 TBZ X0, 0x0, 0x1EC4174
	0x01EC414C ADRP X8, 0x223B000
	0x01EC4150 LDR W1, [X31 + 0x48]
	0x01EC4154 LDR X8, [X8 + 0xBA8]
	0x01EC4158 ADD X2, X31, 0x40
	0x01EC415C MOV X0, X19
	0x01EC4160 LDR X3, [X8]
	0x01EC4164 BL 0x22552C8
	0x01EC4168 TBZ X0, 0x0, 0x1EC4174
	0x01EC416C LDR X21, [X31 + 0x40]
	0x01EC4170 B 0x1EC4344
	0x01EC4174 LDR X0, [X19 + 0x188]
	0x01EC4178 CBZ X0, 0x1EC436C
	0x01EC417C ADRP X8, 0x223B000
	0x01EC4180 LDR X8, [X8 + 0xB90]
	0x01EC4184 LDR X1, [X8]
	0x01EC4188 ADD X8, X31, 0x0
	0x01EC418C BL 0x2DB9990
	0x01EC4190 LDR V0, [X31]
	0x01EC4194 LDR X8, [X31 + 0x10]
	0x01EC4198 ADRP X26, 0x223B000
	0x01EC419C ADRP X25, 0x223A000
	0x01EC41A0 LDR X26, [X26 + 0xB80]
	0x01EC41A4 LDR X25, [X25 + 0x378]
	0x01EC41A8 STR V0, [X31 + 0x2]
	0x01EC41AC STR X8, [X31 + 0x30]
	0x01EC41B0 ADRP X27, 0x223B000
	0x01EC41B4 LDR X27, [X27 + 0xBB0]
	0x01EC41B8 LDR X1, [X26]
	0x01EC41BC ADD X0, X31, 0x20
	0x01EC41C0 BL 0x2BC2C98
	0x01EC41C4 TBZ X0, 0x0, 0x1EC4260
	0x01EC41C8 LDR X0, [X25]
	0x01EC41CC LDR W23, [X31 + 0x30]
	0x01EC41D0 LDR W8, [X0 + 0xE0]
	0x01EC41D4 CBNZ W8, 0x1EC41DC
	0x01EC41D8 BL 0x1C16DFC
	0x01EC41DC MOV X0, X31
	0x01EC41E0 BL 0x1E98E98
	0x01EC41E4 LDR X4, [X27]
	0x01EC41E8 MOV X2, X0
	0x01EC41EC ADD X3, X31, 0x18
	0x01EC41F0 MOV X0, X19
	0x01EC41F4 MOV X1, X23
	0x01EC41F8 BL 0x22553D8
	0x01EC41FC TBZ X0, 0x0, 0x1EC41B8
	0x01EC4200 LDR X8, [X31 + 0x18]
	0x01EC4204 CBZ X8, 0x1EC4368
	0x01EC4208 LDR X0, [X24]
	0x01EC420C LDR W28, [X8]
	0x01EC4210 LDR W9, [X0 + 0xE0]
	0x01EC4214 CBNZ W9, 0x1EC421C
	0x01EC4218 BL 0x1C16DFC
	0x01EC421C CMP W28, W20
	0x01EC4220 B.NE 0x1EC41B8
	0x01EC4224 LDR X0, [X19 + 0x178]
	0x01EC4228 CBZ X0, 0x1EC4370
	0x01EC422C ADRP X8, 0x223B000
	0x01EC4230 LDR X8, [X8 + 0xB70]
	0x01EC4234 LDR X3, [X8]
	0x01EC4238 MOV X1, X22
	0x01EC423C MOV X2, X23
	0x01EC4240 BL 0x2AE3E84
	0x01EC4244 ADRP X8, 0x223B000
	0x01EC4248 LDR X21, [X31 + 0x18]
	0x01EC424C LDR X8, [X8 + 0xB78]
	0x01EC4250 ADD X0, X31, 0x20
	0x01EC4254 LDR X1, [X8]
	0x01EC4258 BL 0x2BC2C94
	0x01EC425C B 0x1EC4344
	0x01EC4260 ADRP X8, 0x223B000
	0x01EC4264 LDR X8, [X8 + 0xB78]
	0x01EC4268 ADD X0, X31, 0x20
	0x01EC426C LDR X1, [X8]
	0x01EC4270 BL 0x2BC2C94
	0x01EC4274 TBZ X21, 0x0, 0x1EC4340
	0x01EC4278 MOV X0, X19
	0x01EC427C BL 0x1EBDF30
	0x01EC4280 TBZ X0, 0x0, 0x1EC4340
	0x01EC4284 MOV X0, X19
	0x01EC4288 BL 0x1EC4400
	0x01EC428C LDR X8, [X25]
	0x01EC4290 MOV X21, X0
	0x01EC4294 LDR W9, [X8 + 0xE0]
	0x01EC4298 CBNZ W9, 0x1EC42A4
	0x01EC429C MOV X0, X8
	0x01EC42A0 BL 0x1C16DFC
	0x01EC42A4 MOV X0, X31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0x2516000
	008 Move W8, [X22+1130]
	009 Move X21, X2
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x2234000
	017 Move X0, [X0+4056]
	018 Call 0x1C17CF4
	019 Move X0, 0x2233000
	020 Move X0, [X0+3648]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1130], W8
	024 Move [X31], X31
	025 Move X0, [X20+88]
	026 Compare X0, 0
	027 JumpIfEqual {195}
	028 Move X1, X31
	029 Call SimulationConfig.get_AreaOfInterestEnabled, X0
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {136}
	034 Move X0, X20
	035 Call Simulation.get_IsClient, X0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {51}
	040 Move X8, [X20+88]
	041 Compare X8, 0
	042 JumpIfEqual {195}
	043 Move W8, [X8+56]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X0, X20
	046 Call Simulation.get_IsServer, X0
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {136}
	051 And X21, X21, 0
	052 Move X0, X20
	053 Move X1, X21
	054 Call Simulation.PlayerValid, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {116}
	059 Move X0, X20
	060 Move X1, X21
	061 Call Simulation.IsHostPlayer, X0, X1
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {136}
	066 Move X22, 0x2515000
	067 Move W8, [X22+2931]
	068 Compare W8, 0
	069 JumpIfNotEqual {75}
	070 Move X0, 0x2235000
	071 Move X0, [X0+32]
	072 Call 0x1C17CF4
	073 Move W8, 1
	074 Move [X22+2931], W8
	075 Move [X31+24], X31
	076 Move X0, [X20+184]
	077 Compare X0, 0
	078 JumpIfEqual {195}
	079 Move X8, 0x2235000
	080 Move X8, [X8+32]
	081 Add X2, X31, 24
	082 Move X1, X21
	083 Move X3, [X8]
	084 Call Dictionary`2<PlayerRef, Object>.TryGetValue, X0, X1, X2
	085 Move X20, [X31+24]
	086 Move W21, W0
	087 Move X0, X19
	088 Move X1, X31
	089 Call NetworkObject.op_Implicit, X0
	090 Compare X20, 0
	091 JumpIfEqual {195}
	092 Move TEMP, X21
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {195}
	096 And X1, X0, 0
	097 Add X2, X31, 0
	098 Move X0, X20
	099 Move X3, X31
	100 Call SimulationConnection.TryGetObjectData, X0, X1, X2
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {189}
	105 Move X0, [X31]
	106 Compare X0, 0
	107 JumpIfEqual {195}
	108 Move W1, 3
	109 Move X2, X31
	110 Call NetworkObjectConnectionData.HasAnyPlayerDataFlag, X0, X1
	111 Move X8, 0x2234000
	112 Move X8, [X8+4056]
	113 NotImplemented "Instruction STRH not yet implemented."
	114 And W1, W0, 1
	115 Move X2, [X8]
	116 NotImplemented "Instruction STRH not yet implemented."
	117 Move X8, [X20]
	118 Move X0, X20
	119 Move X9, [X8+616]
	120 Move X1, [X8+624]
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Compare X19, 0
	123 JumpIfEqual {195}
	124 Move X8, [X19+32]
	125 Compare X8, 0
	126 JumpIfEqual {195}
	127 Move W1, [X8+32]
	128 And X2, X0, 0
	129 Move X0, X20
	130 Move X3, X31
	131 Call 0x1DC08E4
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfNotEqual {151}
	136 Move X8, 0x2234000
	137 Move X8, [X8+4056]
	138 NotImplemented "Instruction STRH not yet implemented."
	139 Move X2, [X8]
	140 Add X0, X31, 12
	141 Move W1, 1
	142 Call Nullable`1<Boolean>..ctor, X0, X1
	143 NotImplemented "Instruction LDRH not yet implemented."
	144 Move X20, [X31+48]
	145 Move X19, [X31+56]
	146 Move X22, [X31+32]
	147 Move X21, [X31+40]
	148 Move X30, [X31+16]
	149 Add X31, X31, 64
	150 Return X0
	151 Move X8, [X20]
	152 Move X0, X20
	153 Move X9, [X8+616]
	154 Move X1, [X8+624]
	155 NotImplemented "Instruction BLR not yet implemented."
	156 Move X8, 0x2233000
	157 Move X8, [X8+3648]
	158 Move X22, X0
	159 Move X8, [X8]
	160 Move W9, [X8+224]
	161 Compare W9, 0
	162 JumpIfNotEqual {165}
	163 Move X0, X8
	164 Call 0x1C17DFC
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Compare X19, 0
	167 JumpIfEqual {195}
	168 Move X8, [X19+56]
	169 Compare X8, 0
	170 JumpIfEqual {195}
	171 Move X9, 0x2234000
	172 Move W8, [X8+168]
	173 Move X9, [X9+4056]
	174 NotImplemented "Instruction STRH not yet implemented."
	175 And W31, W8, 3
	176 Move X2, [X9]
	177 NotImplemented "Instruction CSET not yet implemented."
	178 Add X0, X31, 12
	179 And X1, X21, 0
	180 Move X0, X20
	181 Call Simulation.IsHostPlayer, X0, X1
	182 NotImplemented "Instruction STRH not yet implemented."
	183 Move TEMP, X0
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfNotEqual {143}
	187 Move X8, 0x2234000
	188 Move X8, [X8+4056]
	189 Move X8, 0x2234000
	190 Move X8, [X8+4056]
	191 Add X0, X31, 12
	192 Move W1, W31
	193 NotImplemented "Instruction STRH not yet implemented."
	194 Move X2, [X8]
	195 Call 0x1C17F20

Method: System.Boolean IsInputAuthority(Fusion.NetworkObject networkObject, Fusion.PlayerRef playerRef)

Disassembly:
	0x01EC42A8 BL 0x1E98E98
	0x01EC42AC ADRP X8, 0x223A000
	0x01EC42B0 LDR X8, [X8 + 0x748]
	0x01EC42B4 MOV X1, X0
	0x01EC42B8 ADD X0, X31, 0x0
	0x01EC42BC STR W31, [X31 + 0x8]
	0x01EC42C0 LDR X2, [X8]
	0x01EC42C4 STR X31, [X31]
	0x01EC42C8 BL 0x2436A24
	0x01EC42CC ADRP X8, 0x223B000
	0x01EC42D0 LDR X3, [X31]
	0x01EC42D4 LDR W4, [X31 + 0x8]
	0x01EC42D8 LDR X8, [X8 + 0xBA0]
	0x01EC42DC AND X1, X21, 0x0
	0x01EC42E0 MOV X0, X19
	0x01EC42E4 MOV W2, W31
	0x01EC42E8 LDR X5, [X8]
	0x01EC42EC BL 0x2254D30
	0x01EC42F0 MOV X21, X0
	0x01EC42F4 CBZ X0, 0x1EC4344
	0x01EC42F8 STR W20, [X21]
	0x01EC42FC ADRP X8, 0x223B000
	0x01EC4300 LDR X8, [X8 + 0xBB8]
	0x01EC4304 LDR X19, [X19 + 0xF0]
	0x01EC4308 ADD X0, X31, 0x0
	0x01EC430C MOVZ W2, 0x1
	0x01EC4310 LDR X3, [X8]
	0x01EC4314 MOV X1, X22
	0x01EC4318 STR X31, [X31]
	0x01EC431C BL 0x27AC8D0
	0x01EC4320 CBZ X19, 0x1EC436C
	0x01EC4324 ADRP X8, 0x223B000
	0x01EC4328 LDR X1, [X31]
	0x01EC432C LDR X8, [X8 + 0xB98]
	0x01EC4330 MOV X0, X19
	0x01EC4334 LDR X2, [X8]
	0x01EC4338 BL 0x24EF9E4
	0x01EC433C B 0x1EC4344

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2516000
	007 Move X21, 0x2233000
	008 Move W8, [X22+1131]
	009 Move X21, [X21+3648]
	010 Move X19, X2
	011 Move X20, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2233000
	017 Move X0, [X0+3648]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1131], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfEqual {40}
	025 Compare W19, 0
	026 JumpIfEqual {43}
	027 Compare X20, 0
	028 JumpIfEqual {50}
	029 Move X8, [X20+32]
	030 Compare X8, 0
	031 JumpIfEqual {50}
	032 Move X0, [X21]
	033 Move W20, [X8+28]
	034 Move W9, [X0+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSET not yet implemented."
	040 Call 0x1C17DFC
	041 Compare W19, 0
	042 JumpIfNotEqual {27}
	043 Move W0, W31
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Return X0
	050 Call 0x1C17F20

Method: System.Boolean IsStateAuthority(Fusion.PlayerRef stateSource, Fusion.PlayerRef playerRef)

Disassembly:
	0x01EC4340 MOV X21, X31
	0x01EC4344 MOV X0, X21
	0x01EC4348 LDP X20, X19, [X31 + 0xA0]
	0x01EC434C LDP X22, X21, [X31 + 0x90]
	0x01EC4350 LDP X24, X23, [X31 + 0x80]
	0x01EC4354 LDP X26, X25, [X31 + 0x70]
	0x01EC4358 LDP X28, X27, [X31 + 0x60]
	0x01EC435C LDR X30, [X31 + 0x50]
	0x01EC4360 ADD X31, X31, 0xB0
	0x01EC4364 RET
	0x01EC4368 BL 0x1C16F20
	0x01EC436C BL 0x1C16F20
	0x01EC4370 BL 0x1C16F20
	0x01EC4374 B 0x1EC438C
	0x01EC4378 B 0x1EC438C
	0x01EC437C B 0x1EC438C
	0x01EC4380 B 0x1EC438C
	0x01EC4384 B 0x1EC438C
	0x01EC4388 B 0x1EC438C
	0x01EC438C MOV X23, X0
	0x01EC4390 CMP W1, 0x1
	0x01EC4394 B.NE 0x1EC43C8
	0x01EC4398 MOV X0, X23
	0x01EC439C BL 0x3EB1AD0
	0x01EC43A0 LDR X24, [X0]
	0x01EC43A4 BL 0x3EB1AE0
	0x01EC43A8 ADRP X8, 0x223B000
	0x01EC43AC LDR X8, [X8 + 0xB78]
	0x01EC43B0 ADD X0, X31, 0x20
	0x01EC43B4 LDR X1, [X8]
	0x01EC43B8 BL 0x2BC2C94
	0x01EC43BC CBZ X24, 0x1EC4274
	0x01EC43C0 MOV X0, X24
	0x01EC43C4 BL 0x1C16F18
	0x01EC43C8 MOV X24, X31
	0x01EC43CC B 0x1EC43D4
	0x01EC43D0 MOV X23, X0
	0x01EC43D4 ADRP X8, 0x223B000
	0x01EC43D8 LDR X8, [X8 + 0xB78]
	0x01EC43DC LDR X1, [X8]
	0x01EC43E0 ADD X0, X31, 0x20
	0x01EC43E4 BL 0x2BC2C94
	0x01EC43E8 CBNZ X24, 0x1EC43F4
	0x01EC43EC MOV X0, X23
	0x01EC43F0 BL 0x1D2C690
	0x01EC43F4 MOV X0, X24
	0x01EC43F8 BL 0x1C16F18
	0x01EC43FC BL 0x1990590
	0x01EC4400 STR X30, [X31 - 0x20]!
	0x01EC4404 STP X20, X19, [X31 + 0x10]
	0x01EC4408 ADRP X20, 0x2515000
	0x01EC440C LDRB W8, [X20 + 0x4A5]
	0x01EC4410 MOV X19, X0
	0x01EC4414 TBNZ X8, 0x0, 0x1EC442C
	0x01EC4418 ADRP X0, 0x223A000
	0x01EC441C LDR X0, [X0 + 0x7E0]
	0x01EC4420 BL 0x1C16CF4
	0x01EC4424 MOVZ W8, 0x1
	0x01EC4428 STRB W8, [X20 + 0x4A5]
	0x01EC442C LDR W8, [X19 + 0x148]
	0x01EC4430 MOV X0, X19
	0x01EC4434 ADD W20, W8, 0x1
	0x01EC4438 STR W20, [X19 + 0x148]
	0x01EC443C BL 0x1EC0864
	0x01EC4440 TBZ X0, 0x0, 0x1EC448C
	0x01EC4444 ADRP X9, 0x223A000
	0x01EC4448 LDR X9, [X9 + 0x7E0]
	0x01EC444C LDR X8, [X19]
	0x01EC4450 LDR X1, [X9]
	0x01EC4454 LDRB W10, [X8 + 0x130]
	0x01EC4458 LDRB W9, [X1 + 0x130]
	0x01EC445C CMP W10, W9
	0x01EC4460 B.CC 0x1EC449C
	0x01EC4464 LDR X8, [X8 + 0xC8]
	0x01EC4468 ADD X8, X8, X9, 0x3, LSL
	0x01EC446C LDUR X8, [X8 - 0x8]
	0x01EC4470 CMP X8, X1
	0x01EC4474 B.NE 0x1EC449C
	0x01EC4478 LDR X8, [X19 + 0x1A8]
	0x01EC447C CBZ X8, 0x1EC44A4
	0x01EC4480 LDR W8, [X8 + 0x138]
	0x01EC4484 AND W20, W20, 0x7FFFF
	0x01EC4488 BFM W20, W8, 0xD, 0xC
	0x01EC448C MOV W0, W20
	0x01EC4490 LDP X20, X19, [X31 + 0x10]
	0x01EC4494 LDR X30, [X31], #0x20
	0x01EC4498 RET
	0x01EC449C MOV X0, X19
	0x01EC44A0 BL 0x1C171E0
	0x01EC44A4 BL 0x1C16F20
	0x01EC44A8 SUB X31, X31, 0xA0
	0x01EC44AC STP X29, X30, [X31 + 0x40]
	0x01EC44B0 STP X28, X27, [X31 + 0x50]
	0x01EC44B4 STP X26, X25, [X31 + 0x60]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x2516000
	009 Move X22, 0x2233000
	010 Move W8, [X23+1132]
	011 Move X22, [X22+3648]
	012 Move X19, X2
	013 Move X21, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x2233000
	020 Move X0, [X0+920]
	021 Call 0x1C17CF4
	022 Move X0, 0x2233000
	023 Move X0, [X0+3648]
	024 Call 0x1C17CF4
	025 Move X0, 0x2235000
	026 Move X0, [X0+40]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+1132], W8
	030 Move X0, [X22]
	031 Move [X31+8], X31
	032 Move [X31], W31
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfEqual {38}
	036 Compare W19, 0
	037 JumpIfNotEqual {41}
	038 Call 0x1C17DFC
	039 Compare W19, 0
	040 JumpIfEqual {106}
	041 Move X0, [X22]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move W0, 1
	048 Move X0, [X22]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfEqual {88}
	052 Compare W21, 0
	053 JumpIfEqual {91}
	054 Move X0, [X22]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Add W31, W21, 1
	060 Move X8, 0x2233000
	061 Move X8, [X8+920]
	062 Move X0, [X8]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X31
	068 Call NetworkId.get_RuntimeConfig
	069 Move X8, 0x2235000
	070 Move X8, [X8+40]
	071 And X1, X0, 0
	072 Add X2, X31, 8
	073 Move X0, X20
	074 Move X3, [X8]
	075 Call Simulation.TryGetStructData, X0, X1, X2
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {106}
	080 Move X8, [X31+8]
	081 Compare X8, 0
	082 JumpIfEqual {115}
	083 Move X0, [X22]
	084 Move W20, [X8+24]
	085 Move W9, [X0+224]
	086 Compare W9, 0
	087 JumpIfNotEqual {104}
	088 Call 0x1C17DFC
	089 Compare W21, 0
	090 JumpIfNotEqual {54}
	091 Add X1, X31, 0
	092 Move X0, X20
	093 Call Simulation.TryGetHostPlayer, X0, X1
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {106}
	098 Move X0, [X22]
	099 Move W20, [X31]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 NotImplemented "Instruction CMP not yet implemented."
	105 NotImplemented "Instruction CSET not yet implemented."
	106 Move W0, W31
	107 Move X20, [X31+48]
	108 Move X19, [X31+56]
	109 Move X22, [X31+32]
	110 Move X21, [X31+40]
	111 Move X30, [X31+16]
	112 Move X23, [X31+24]
	113 Add X31, X31, 64
	114 Return X0
	115 Call 0x1C17F20

Method: System.Boolean IsStateAuthority(Fusion.NetworkObject networkObject, Fusion.PlayerRef playerRef)

Disassembly:
	0x01EC44B8 STP X24, X23, [X31 + 0x70]
	0x01EC44BC STP X22, X21, [X31 + 0x80]
	0x01EC44C0 STP X20, X19, [X31 + 0x90]
	0x01EC44C4 ADRP X20, 0x2515000
	0x01EC44C8 LDRB W8, [X20 + 0x473]
	0x01EC44CC MOV X19, X0
	0x01EC44D0 TBNZ X8, 0x0, 0x1EC4548
	0x01EC44D4 ADRP X0, 0x223A000
	0x01EC44D8 LDR X0, [X0 + 0x810]
	0x01EC44DC BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {13}
	004 Move X8, [X1+32]
	005 Compare X8, 0
	006 JumpIfEqual {13}
	007 Move W1, [X8+32]
	008 And X2, X2, 0
	009 Move X3, X31
	010 Move X30, [X31+16]
	011 Call 0x1DC08E4
	012 Return X0
	013 Call 0x1C17F20

Method: System.Boolean IsStateAuthority(Fusion.NetworkObjectMeta networkObject, Fusion.PlayerRef playerRef)

Disassembly:
	0x01EC44E0 ADRP X0, 0x223B000
	0x01EC44E4 LDR X0, [X0 + 0xA98]
	0x01EC44E8 BL 0x1C16CF4
	0x01EC44EC ADRP X0, 0x223B000
	0x01EC44F0 LDR X0, [X0 + 0xAA0]
	0x01EC44F4 BL 0x1C16CF4
	0x01EC44F8 ADRP X0, 0x223B000
	0x01EC44FC LDR X0, [X0 + 0xAA8]
	0x01EC4500 BL 0x1C16CF4
	0x01EC4504 ADRP X0, 0x223A000

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {13}
	004 Move X8, [X1+176]
	005 Compare X8, 0
	006 JumpIfEqual {13}
	007 Move W1, [X8+32]
	008 And X2, X2, 0
	009 Move X3, X31
	010 Move X30, [X31+16]
	011 Call 0x1DC08E4
	012 Return X0
	013 Call 0x1C17F20

Method: System.Boolean IsLocalSimulationStateOrInputAuthority(Fusion.NetworkObjectMeta meta)

Disassembly:
	0x01EC4508 LDR X0, [X0 + 0xA90]
	0x01EC450C BL 0x1C16CF4
	0x01EC4510 ADRP X0, 0x2232000
	0x01EC4514 LDR X0, [X0 + 0xE40]
	0x01EC4518 BL 0x1C16CF4
	0x01EC451C ADRP X0, 0x223B000
	0x01EC4520 LDR X0, [X0 + 0xBC8]
	0x01EC4524 BL 0x1C16CF4
	0x01EC4528 ADRP X0, 0x223B000
	0x01EC452C LDR X0, [X0 + 0xBD0]
	0x01EC4530 BL 0x1C16CF4
	0x01EC4534 ADRP X0, 0x223B000
	0x01EC4538 LDR X0, [X0 + 0xAB0]
	0x01EC453C BL 0x1C16CF4
	0x01EC4540 MOVZ W8, 0x1
	0x01EC4544 STRB W8, [X20 + 0x473]
	0x01EC4548 STP X31, X31, [X31 + 0x20]
	0x01EC454C STR X31, [X31 + 0x30]
	0x01EC4550 LDR X20, [X19 + 0x40]
	0x01EC4554 CBZ X20, 0x1EC49A4
	0x01EC4558 ADRP X27, 0x223A000
	0x01EC455C LDR X8, [X20]
	0x01EC4560 LDR X27, [X27 + 0xA90]
	0x01EC4564 LDRH W9, [X8 + 0x12E]
	0x01EC4568 LDR X1, [X27]
	0x01EC456C CBZ X9, 0x1EC4590
	0x01EC4570 LDR X10, [X8 + 0xB0]
	0x01EC4574 ADD X10, X10, 0x8
	0x01EC4578 LDUR X11, [X10 - 0x8]
	0x01EC457C CMP X11, X1
	0x01EC4580 B.EQ 0x1EC45A0
	0x01EC4584 SUBS X9, X9, 0x1
	0x01EC4588 ADD X10, X10, 0x10
	0x01EC458C B.NE 0x1EC4578
	0x01EC4590 MOVZ W2, 0x1C
	0x01EC4594 MOV X0, X20
	0x01EC4598 BL 0x1C5C788
	0x01EC459C B 0x1EC45B0
	0x01EC45A0 LDR W9, [X10]
	0x01EC45A4 ADD W9, W9, 0x1C
	0x01EC45A8 ADD X8, X8, W9, 0x4, SXTW
	0x01EC45AC ADD X0, X8, 0x138
	0x01EC45B0 LDP X8, X1, [X0]
	0x01EC45B4 MOV X0, X20
	0x01EC45B8 BLR X8
	0x01EC45BC TBZ X0, 0x0, 0x1EC4984
	0x01EC45C0 LDR X0, [X19 + 0xF0]
	0x01EC45C4 CBZ X0, 0x1EC49A4
	0x01EC45C8 ADRP X28, 0x223B000
	0x01EC45CC ADRP X21, 0x223B000
	0x01EC45D0 ADRP X20, 0x2234000
	0x01EC45D4 LDR X28, [X28 + 0xBC8]
	0x01EC45D8 LDR X21, [X21 + 0xAA0]
	0x01EC45DC LDR X20, [X20 + 0x20]
	0x01EC45E0 ADRP X22, 0x2514000
	0x01EC45E4 MOVZ W29, 0x1
	0x01EC45E8 LDR W8, [X0 + 0x20]
	0x01EC45EC CMP W8, 0x0
	0x01EC45F0 B.LE 0x1EC4984
	0x01EC45F4 LDR X1, [X28]
	0x01EC45F8 BL 0x24EFB6C
	0x01EC45FC MOV X23, X0
	0x01EC4600 TBNZ X0, 0x0, 0x1EC464C
	0x01EC4604 LDR X24, [X19 + 0x40]
	0x01EC4608 CBZ X24, 0x1EC484C
	0x01EC460C LDR X8, [X24]
	0x01EC4610 LDR X1, [X27]
	0x01EC4614 LDRH W9, [X8 + 0x12E]
	0x01EC4618 CBZ X9, 0x1EC463C
	0x01EC461C LDR X10, [X8 + 0xB0]
	0x01EC4620 ADD X10, X10, 0x8
	0x01EC4624 LDUR X11, [X10 - 0x8]
	0x01EC4628 CMP X11, X1
	0x01EC462C B.EQ 0x1EC4694
	0x01EC4630 SUBS X9, X9, 0x1
	0x01EC4634 ADD X10, X10, 0x10
	0x01EC4638 B.NE 0x1EC4624
	0x01EC463C MOVZ W2, 0x15

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0+88]
	007 Compare X8, 0
	008 JumpIfEqual {93}
	009 Move W8, [X8+56]
	010 Move X19, X0
	011 Move X20, X1
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X0, X19
	014 Call Simulation.get_IsServer, X0
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {39}
	019 Move W0, 1
	020 Move X8, [X19]
	021 Move X0, X19
	022 Move X9, [X8+616]
	023 Move X1, [X8+624]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Compare X20, 0
	026 JumpIfEqual {93}
	027 Move X8, [X20+176]
	028 Compare X8, 0
	029 JumpIfEqual {93}
	030 Move W1, [X8+32]
	031 And X2, X0, 0
	032 Move X0, X19
	033 Move X3, X31
	034 Call 0x1DC08E4
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {19}
	039 Move X21, 0x2516000
	040 Move W8, [X21+1209]
	041 Compare W8, 0
	042 JumpIfNotEqual {48}
	043 Move X0, 0x2233000
	044 Move X0, [X0+3648]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X21+1209], W8
	048 Compare X20, 0
	049 JumpIfEqual {93}
	050 Move X8, [X20+176]
	051 Compare X8, 0
	052 JumpIfEqual {86}
	053 Move X8, [X19]
	054 Move X0, X19
	055 Move X9, [X8+616]
	056 Move X1, [X8+624]
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move X22, 0x2233000
	059 Move X22, [X22+3648]
	060 Move X21, X0
	061 Move X8, [X22]
	062 Move W9, [X8+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X8
	066 Call 0x1C17DFC
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X8, [X20+176]
	069 Compare X8, 0
	070 JumpIfEqual {93}
	071 Move X9, [X19]
	072 Move W20, [X8+28]
	073 Move X0, X19
	074 Move X8, [X9+616]
	075 Move X1, [X9+624]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move X8, [X22]
	078 Move X19, X0
	079 Move W9, [X8+224]
	080 Compare W9, 0
	081 JumpIfNotEqual {84}
	082 Move X0, X8
	083 Call 0x1C17DFC
	084 NotImplemented "Instruction CMP not yet implemented."
	085 NotImplemented "Instruction CSET not yet implemented."
	086 Move W0, W31
	087 Move X20, [X31+32]
	088 Move X19, [X31+40]
	089 Move X22, [X31+16]
	090 Move X21, [X31+24]
	091 Move X30, [X31+48]
	092 Return X0
	093 Call 0x1C17F20

Method: System.Boolean IsLocalSimulationStateOrInputSource(Fusion.NetworkObject obj)

Disassembly:
	0x01EC4640 MOV X0, X24
	0x01EC4644 BL 0x1C5C788
	0x01EC4648 B 0x1EC46A4
	0x01EC464C LDR X25, [X19 + 0x40]
	0x01EC4650 CBZ X25, 0x1EC4854
	0x01EC4654 LDR X8, [X25]
	0x01EC4658 LDR X1, [X27]
	0x01EC465C LDRH W9, [X8 + 0x12E]
	0x01EC4660 CBZ X9, 0x1EC4684
	0x01EC4664 LDR X10, [X8 + 0xB0]
	0x01EC4668 ADD X10, X10, 0x8
	0x01EC466C LDUR X11, [X10 - 0x8]
	0x01EC4670 CMP X11, X1
	0x01EC4674 B.EQ 0x1EC46B8
	0x01EC4678 SUBS X9, X9, 0x1
	0x01EC467C ADD X10, X10, 0x10
	0x01EC4680 B.NE 0x1EC466C
	0x01EC4684 MOVZ W2, 0x14
	0x01EC4688 MOV X0, X25
	0x01EC468C BL 0x1C5C788
	0x01EC4690 B 0x1EC46C8
	0x01EC4694 LDR W9, [X10]
	0x01EC4698 ADD W9, W9, 0x15
	0x01EC469C ADD X8, X8, W9, 0x4, SXTW
	0x01EC46A0 ADD X0, X8, 0x138
	0x01EC46A4 LDP X8, X2, [X0]
	0x01EC46A8 AND X1, X23, 0x0
	0x01EC46AC MOV X0, X24
	0x01EC46B0 BLR X8
	0x01EC46B4 B 0x1EC496C
	0x01EC46B8 LDR W9, [X10]
	0x01EC46BC ADD W9, W9, 0x14
	0x01EC46C0 ADD X8, X8, W9, 0x4, SXTW
	0x01EC46C4 ADD X0, X8, 0x138
	0x01EC46C8 LDP X8, X2, [X0]
	0x01EC46CC AND X24, X23, 0x0
	0x01EC46D0 MOV X0, X25
	0x01EC46D4 MOV X1, X24
	0x01EC46D8 BLR X8
	0x01EC46DC MOV X0, X19
	0x01EC46E0 BL 0x1EBDF30
	0x01EC46E4 TBZ X0, 0x0, 0x1EC496C
	0x01EC46E8 LDR X0, [X19 + 0x58]
	0x01EC46EC CBZ X0, 0x1EC485C
	0x01EC46F0 MOV X1, X31
	0x01EC46F4 BL 0x1ED756C
	0x01EC46F8 TBZ X0, 0x0, 0x1EC496C
	0x01EC46FC LDR X8, [X19]
	0x01EC4700 LDR X1, [X8 + 0x270]
	0x01EC4704 LDR X9, [X8 + 0x268]
	0x01EC4708 MOV X0, X19
	0x01EC470C BLR X9
	0x01EC4710 ADRP X8, 0x2232000
	0x01EC4714 LDR X8, [X8 + 0xE40]
	0x01EC4718 MOV X25, X0
	0x01EC471C LDR X0, [X8]
	0x01EC4720 LDR W8, [X0 + 0xE0]
	0x01EC4724 CBNZ W8, 0x1EC472C
	0x01EC4728 BL 0x1C16DFC
	0x01EC472C CMP W23, W25
	0x01EC4730 B.EQ 0x1EC496C
	0x01EC4734 LDR X0, [X19 + 0x150]
	0x01EC4738 CBZ X0, 0x1EC4864
	0x01EC473C ADRP X8, 0x223A000
	0x01EC4740 LDR X8, [X8 + 0x810]
	0x01EC4744 LDR X1, [X8]
	0x01EC4748 BL 0x2A673D0
	0x01EC474C CBZ X0, 0x1EC486C
	0x01EC4750 ADRP X8, 0x223B000
	0x01EC4754 LDR X8, [X8 + 0xAB0]
	0x01EC4758 LDR X1, [X8]
	0x01EC475C ADD X8, X31, 0x8
	0x01EC4760 BL 0x2755900
	0x01EC4764 LDUR V0, [X31 + 0x8]
	0x01EC4768 LDR X8, [X31 + 0x18]
	0x01EC476C STR V0, [X31 + 0x2]
	0x01EC4770 STR X8, [X31 + 0x30]
	0x01EC4774 LDR X1, [X21]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0+88]
	007 Compare X8, 0
	008 JumpIfEqual {93}
	009 Move W8, [X8+56]
	010 Move X19, X0
	011 Move X20, X1
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X0, X19
	014 Call Simulation.get_IsServer, X0
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {39}
	019 Move W0, 1
	020 Move X8, [X19]
	021 Move X0, X19
	022 Move X9, [X8+616]
	023 Move X1, [X8+624]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Compare X20, 0
	026 JumpIfEqual {93}
	027 Move X8, [X20+32]
	028 Compare X8, 0
	029 JumpIfEqual {93}
	030 Move W1, [X8+32]
	031 And X2, X0, 0
	032 Move X0, X19
	033 Move X3, X31
	034 Call 0x1DC08E4
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {19}
	039 Move X21, 0x2516000
	040 Move W8, [X21+750]
	041 Compare W8, 0
	042 JumpIfNotEqual {48}
	043 Move X0, 0x2233000
	044 Move X0, [X0+3648]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X21+750], W8
	048 Compare X20, 0
	049 JumpIfEqual {93}
	050 Move X8, [X20+32]
	051 Compare X8, 0
	052 JumpIfEqual {86}
	053 Move X8, [X19]
	054 Move X0, X19
	055 Move X9, [X8+616]
	056 Move X1, [X8+624]
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move X22, 0x2233000
	059 Move X22, [X22+3648]
	060 Move X21, X0
	061 Move X8, [X22]
	062 Move W9, [X8+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X8
	066 Call 0x1C17DFC
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X8, [X20+32]
	069 Compare X8, 0
	070 JumpIfEqual {93}
	071 Move X9, [X19]
	072 Move W20, [X8+28]
	073 Move X0, X19
	074 Move X8, [X9+616]
	075 Move X1, [X9+624]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move X8, [X22]
	078 Move X19, X0
	079 Move W9, [X8+224]
	080 Compare W9, 0
	081 JumpIfNotEqual {84}
	082 Move X0, X8
	083 Call 0x1C17DFC
	084 NotImplemented "Instruction CMP not yet implemented."
	085 NotImplemented "Instruction CSET not yet implemented."
	086 Move W0, W31
	087 Move X20, [X31+32]
	088 Move X19, [X31+40]
	089 Move X22, [X31+16]
	090 Move X21, [X31+24]
	091 Move X30, [X31+48]
	092 Return X0
	093 Call 0x1C17F20

Method: System.Boolean IsLocalSimulationInputAuthority(Fusion.NetworkObjectMeta meta)

Disassembly:
	0x01EC4778 ADD X0, X31, 0x20
	0x01EC477C BL 0x2C04490
	0x01EC4780 TBZ X0, 0x0, 0x1EC4804
	0x01EC4784 LDR X25, [X31 + 0x30]
	0x01EC4788 CBZ X25, 0x1EC4834
	0x01EC478C MOV X0, X25
	0x01EC4790 MOV X1, X31
	0x01EC4794 BL 0x1E97320
	0x01EC4798 TBNZ X0, 0x0, 0x1EC4774
	0x01EC479C LDRB W8, [X22 + 0xB73]
	0x01EC47A0 CBNZ W8, 0x1EC47B0
	0x01EC47A4 MOV X0, X20
	0x01EC47A8 BL 0x1C16CF4
	0x01EC47AC STRB W29, [X22 + 0xB73]
	0x01EC47B0 STR X31, [X31 + 0x38]
	0x01EC47B4 LDR X0, [X19 + 0xB8]
	0x01EC47B8 CBZ X0, 0x1EC483C
	0x01EC47BC LDR X3, [X20]
	0x01EC47C0 ADD X2, X31, 0x38
	0x01EC47C4 MOV X1, X24
	0x01EC47C8 BL 0x2AE89D0
	0x01EC47CC LDR X8, [X31 + 0x38]
	0x01EC47D0 ANDS W31, W0, 0x1
	0x01EC47D4 CSEL X26, X8, X31, NE
	0x01EC47D8 MOV X0, X25
	0x01EC47DC MOV X1, X31
	0x01EC47E0 BL 0x1E97370
	0x01EC47E4 CBZ X26, 0x1EC4844
	0x01EC47E8 AND X1, X0, 0x0
	0x01EC47EC MOVZ W2, 0x1
	0x01EC47F0 MOV X0, X26
	0x01EC47F4 MOV W3, W31
	0x01EC47F8 MOV X4, X31
	0x01EC47FC BL 0x1ED0A18
	0x01EC4800 B 0x1EC4774
	0x01EC4804 MOV X25, X31
	0x01EC4808 MOVZ W24, 0x6
	0x01EC480C ADRP X8, 0x223B000
	0x01EC4810 LDR X8, [X8 + 0xA98]
	0x01EC4814 LDR X1, [X8]
	0x01EC4818 ADD X0, X31, 0x20
	0x01EC481C BL 0x2C0448C
	0x01EC4820 CBNZ X25, 0x1EC4874
	0x01EC4824 CMP W24, 0x6
	0x01EC4828 B.EQ 0x1EC496C
	0x01EC482C CBZ W24, 0x1EC4604
	0x01EC4830 B 0x1EC4984
	0x01EC4834 BL 0x1C16F20
	0x01EC4838 B 0x1EC49D8
	0x01EC483C BL 0x1C16F20
	0x01EC4840 B 0x1EC49A8
	0x01EC4844 BL 0x1C16F20
	0x01EC4848 B 0x1EC49A8
	0x01EC484C BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2516000
	007 Move W8, [X21+1133]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2233000
	015 Move X0, [X0+3648]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1133], W8
	019 Compare X20, 0
	020 JumpIfEqual {64}
	021 Move X8, [X20+176]
	022 Compare X8, 0
	023 JumpIfEqual {57}
	024 Move X8, [X19]
	025 Move X22, 0x2233000
	026 Move X0, X19
	027 Move X9, [X8+616]
	028 Move X1, [X8+624]
	029 Move X22, [X22+3648]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X8, [X22]
	032 Move X21, X0
	033 Move W9, [X8+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X8, [X20+176]
	040 Compare X8, 0
	041 JumpIfEqual {64}
	042 Move X9, [X19]
	043 Move W20, [X8+28]
	044 Move X0, X19
	045 Move X8, [X9+616]
	046 Move X1, [X9+624]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X8, [X22]
	049 Move X19, X0
	050 Move W9, [X8+224]
	051 Compare W9, 0
	052 JumpIfNotEqual {55}
	053 Move X0, X8
	054 Call 0x1C17DFC
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CSET not yet implemented."
	057 Move W0, W31
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X30, [X31+48]
	063 Return X0
	064 Call 0x1C17F20

Method: System.Boolean IsLocalSimulationInputAuthority(Fusion.NetworkObject obj)

Disassembly:
	0x01EC4850 B 0x1EC49D8
	0x01EC4854 BL 0x1C16F20
	0x01EC4858 B 0x1EC49B0
	0x01EC485C BL 0x1C16F20
	0x01EC4860 B 0x1EC49D8
	0x01EC4864 BL 0x1C16F20
	0x01EC4868 B 0x1EC49D8
	0x01EC486C BL 0x1C16F20
	0x01EC4870 B 0x1EC49D8
	0x01EC4874 MOV X0, X25
	0x01EC4878 BL 0x1C16F18
	0x01EC487C B 0x1EC49A8
	0x01EC4880 B 0x1EC48C0
	0x01EC4884 B 0x1EC48C0
	0x01EC4888 B 0x1EC48C0
	0x01EC488C B 0x1EC48C0
	0x01EC4890 B 0x1EC48C0
	0x01EC4894 B 0x1EC48C0
	0x01EC4898 B 0x1EC48C0
	0x01EC489C B 0x1EC48C0
	0x01EC48A0 B 0x1EC48C0
	0x01EC48A4 B 0x1EC48D0
	0x01EC48A8 B 0x1EC48D0
	0x01EC48AC B 0x1EC48D0
	0x01EC48B0 B 0x1EC48D0
	0x01EC48B4 B 0x1EC48C0
	0x01EC48B8 B 0x1EC48D0
	0x01EC48BC B 0x1EC48C0
	0x01EC48C0 MOV X24, X1
	0x01EC48C4 B 0x1EC4914
	0x01EC48C8 B 0x1EC48D0
	0x01EC48CC B 0x1EC48D0
	0x01EC48D0 MOV X24, X1
	0x01EC48D4 CMP W24, 0x1
	0x01EC48D8 B.NE 0x1EC48F0
	0x01EC48DC BL 0x3EB1AD0
	0x01EC48E0 LDR X25, [X0]
	0x01EC48E4 BL 0x3EB1AE0
	0x01EC48E8 MOV W24, W31
	0x01EC48EC B 0x1EC480C
	0x01EC48F0 MOV X23, X0
	0x01EC48F4 MOV X25, X31
	0x01EC48F8 ADRP X8, 0x223B000
	0x01EC48FC LDR X8, [X8 + 0xA98]
	0x01EC4900 LDR X1, [X8]
	0x01EC4904 ADD X0, X31, 0x20
	0x01EC4908 BL 0x2C0448C
	0x01EC490C MOV X0, X23
	0x01EC4910 CBNZ X25, 0x1EC49A8
	0x01EC4914 CMP W24, 0x1
	0x01EC4918 B.NE 0x1EC49B0
	0x01EC491C BL 0x3EB1AD0
	0x01EC4920 MOV X23, X0
	0x01EC4924 ADRP X0, 0x222F000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2516000
	007 Move W8, [X21+1134]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2233000
	015 Move X0, [X0+3648]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1134], W8
	019 Compare X20, 0
	020 JumpIfEqual {64}
	021 Move X8, [X20+32]
	022 Compare X8, 0
	023 JumpIfEqual {57}
	024 Move X8, [X19]
	025 Move X22, 0x2233000
	026 Move X0, X19
	027 Move X9, [X8+616]
	028 Move X1, [X8+624]
	029 Move X22, [X22+3648]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X8, [X22]
	032 Move X21, X0
	033 Move W9, [X8+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X8, [X20+32]
	040 Compare X8, 0
	041 JumpIfEqual {64}
	042 Move X9, [X19]
	043 Move W20, [X8+28]
	044 Move X0, X19
	045 Move X8, [X9+616]
	046 Move X1, [X9+624]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X8, [X22]
	049 Move X19, X0
	050 Move W9, [X8+224]
	051 Compare W9, 0
	052 JumpIfNotEqual {55}
	053 Move X0, X8
	054 Call 0x1C17DFC
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CSET not yet implemented."
	057 Move W0, W31
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X30, [X31+48]
	063 Return X0
	064 Call 0x1C17F20

Method: System.Boolean IsLocalSimulationStateAuthority(Fusion.NetworkObjectMeta meta)

Disassembly:
	0x01EC4928 LDR X0, [X0 + 0x7D0]
	0x01EC492C BL 0x1C16D08
	0x01EC4930 LDR X8, [X23]
	0x01EC4934 LDR X1, [X8]
	0x01EC4938 BL 0x1C17270
	0x01EC493C TBZ X0, 0x0, 0x1EC49B8
	0x01EC4940 LDR X23, [X23]
	0x01EC4944 BL 0x3EB1AE0
	0x01EC4948 ADRP X0, 0x2237000
	0x01EC494C LDR X0, [X0 + 0x8B0]
	0x01EC4950 BL 0x1C16D08
	0x01EC4954 LDR W8, [X0 + 0xE0]
	0x01EC4958 CBNZ W8, 0x1EC4960
	0x01EC495C BL 0x1C16DFC
	0x01EC4960 MOV X0, X23
	0x01EC4964 MOV X1, X31
	0x01EC4968 BL 0x1E3E4C8
	0x01EC496C LDR X0, [X19 + 0xF0]
	0x01EC4970 CBNZ X0, 0x1EC45E8
	0x01EC4974 B 0x1EC49A4
	0x01EC4978 MOV X24, X1
	0x01EC497C MOV X23, X0
	0x01EC4980 B 0x1EC48F8
	0x01EC4984 LDP X20, X19, [X31 + 0x90]
	0x01EC4988 LDP X22, X21, [X31 + 0x80]
	0x01EC498C LDP X24, X23, [X31 + 0x70]
	0x01EC4990 LDP X26, X25, [X31 + 0x60]
	0x01EC4994 LDP X28, X27, [X31 + 0x50]
	0x01EC4998 LDP X29, X30, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+88]
	005 Compare X8, 0
	006 JumpIfEqual {36}
	007 Move W8, [X8+56]
	008 Move X19, X0
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X0, X19
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X30, [X31+32]
	014 Call Simulation.get_IsServer, X0
	015 Return X0
	016 Move X8, [X19]
	017 Move X20, X1
	018 Move X0, X19
	019 Move X9, [X8+616]
	020 Move X1, [X8+624]
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Compare X20, 0
	023 JumpIfEqual {36}
	024 Move X8, [X20+176]
	025 Compare X8, 0
	026 JumpIfEqual {36}
	027 Move W1, [X8+32]
	028 And X2, X0, 0
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X3, X31
	033 Move X30, [X31+32]
	034 Call 0x1DC08E4
	035 Return X0
	036 Call 0x1C17F20

Method: System.Boolean IsLocalSimulationStateAuthority(Fusion.NetworkObject obj)

Disassembly:
	0x01EC499C ADD X31, X31, 0xA0
	0x01EC49A0 RET
	0x01EC49A4 BL 0x1C16F20
	0x01EC49A8 MOV X0, X25
	0x01EC49AC BL 0x1C16F18
	0x01EC49B0 MOV X19, X0
	0x01EC49B4 B 0x1EC49E4
	0x01EC49B8 MOVZ W0, 0x8
	0x01EC49BC BL 0x3EB1AF0
	0x01EC49C0 LDR X8, [X23]
	0x01EC49C4 STR X8, [X0]
	0x01EC49C8 ADRP X1, 0x1FF0000
	0x01EC49CC ADD X1, X1, 0xE58
	0x01EC49D0 MOV X2, X31
	0x01EC49D4 BL 0x3EB1B00
	0x01EC49D8 B 0x1EC49DC
	0x01EC49DC MOV X19, X0
	0x01EC49E0 BL 0x3EB1AE0
	0x01EC49E4 MOV X0, X19
	0x01EC49E8 BL 0x1D2C690
	0x01EC49EC BL 0x1990590
	0x01EC49F0 BL 0x1990590
	0x01EC49F4 SUB X31, X31, 0x30
	0x01EC49F8 STP X30, X21, [X31 + 0x10]
	0x01EC49FC STP X20, X19, [X31 + 0x20]
	0x01EC4A00 ADRP X21, 0x2515000
	0x01EC4A04 LDRB W8, [X21 + 0x474]
	0x01EC4A08 MOV X20, X1
	0x01EC4A0C MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+88]
	005 Compare X8, 0
	006 JumpIfEqual {36}
	007 Move W8, [X8+56]
	008 Move X19, X0
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X0, X19
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X30, [X31+32]
	014 Call Simulation.get_IsServer, X0
	015 Return X0
	016 Move X8, [X19]
	017 Move X20, X1
	018 Move X0, X19
	019 Move X9, [X8+616]
	020 Move X1, [X8+624]
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Compare X20, 0
	023 JumpIfEqual {36}
	024 Move X8, [X20+32]
	025 Compare X8, 0
	026 JumpIfEqual {36}
	027 Move W1, [X8+32]
	028 And X2, X0, 0
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X3, X31
	033 Move X30, [X31+32]
	034 Call 0x1DC08E4
	035 Return X0
	036 Call 0x1C17F20

Method: System.Boolean IsLocalSimulationStateAuthority(Fusion.NetworkId id)

Disassembly:
	0x01EC4A10 TBNZ X8, 0x0, 0x1EC4A28
	0x01EC4A14 ADRP X0, 0x2230000
	0x01EC4A18 LDR X0, [X0 + 0x470]
	0x01EC4A1C BL 0x1C16CF4
	0x01EC4A20 MOVZ W8, 0x1
	0x01EC4A24 STRB W8, [X21 + 0x474]
	0x01EC4A28 ADRP X21, 0x2230000
	0x01EC4A2C LDR X21, [X21 + 0x470]
	0x01EC4A30 AND X1, X20, 0x0
	0x01EC4A34 MOVZ W2, 0x1
	0x01EC4A38 MOV X0, X19
	0x01EC4A3C BL 0x1EC3F30
	0x01EC4A40 CBZ X0, 0x1EC4A4C
	0x01EC4A44 LDR W1, [X0 + 0x8]
	0x01EC4A48 B 0x1EC4A50
	0x01EC4A4C MOV W1, W31
	0x01EC4A50 LDR X2, [X21]
	0x01EC4A54 ADD X0, X31, 0x8
	0x01EC4A58 STR X31, [X31 + 0x8]
	0x01EC4A5C BL 0x24341FC
	0x01EC4A60 LDR X0, [X31 + 0x8]
	0x01EC4A64 LDP X20, X19, [X31 + 0x20]
	0x01EC4A68 LDP X30, X21, [X31 + 0x10]
	0x01EC4A6C ADD X31, X31, 0x30
	0x01EC4A70 RET
	0x01EC4A74 SUB X31, X31, 0x30
	0x01EC4A78 STP X30, X21, [X31 + 0x10]
	0x01EC4A7C STP X20, X19, [X31 + 0x20]
	0x01EC4A80 ADRP X21, 0x2515000
	0x01EC4A84 LDRB W8, [X21 + 0x475]
	0x01EC4A88 MOV X20, X1
	0x01EC4A8C MOV X19, X0
	0x01EC4A90 TBNZ X8, 0x0, 0x1EC4AA8
	0x01EC4A94 ADRP X0, 0x223B000
	0x01EC4A98 LDR X0, [X0 + 0xB60]
	0x01EC4A9C BL 0x1C16CF4
	0x01EC4AA0 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 And X1, X1, 0
	005 Add X2, X31, 8
	006 Move X19, X0
	007 Move [X31+8], X31
	008 Call Simulation.TryGetMeta, X0, X1, X2
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {20}
	013 Move X8, [X19+88]
	014 Compare X8, 0
	015 JumpIfEqual {42}
	016 Move W8, [X8+56]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X0, X19
	019 Call Simulation.get_IsServer, X0
	020 Move W0, W31
	021 Move X8, [X19]
	022 Move X20, [X31+8]
	023 Move X0, X19
	024 Move X9, [X8+616]
	025 Move X1, [X8+624]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Compare X20, 0
	028 JumpIfEqual {42}
	029 Move X8, [X20+176]
	030 Compare X8, 0
	031 JumpIfEqual {42}
	032 Move W1, [X8+32]
	033 And X2, X0, 0
	034 Move X0, X19
	035 Move X3, X31
	036 Call 0x1DC08E4
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 And W0, W0, 1
	040 Move X30, [X31+32]
	041 Return X0
	042 Call 0x1C17F20

Method: Fusion.PlayerRef GetInputAuthority(Fusion.NetworkObject networkObject)

Disassembly:
	0x01EC4AA4 STRB W8, [X21 + 0x475]
	0x01EC4AA8 AND X20, X20, 0x0
	0x01EC4AAC MOV X0, X19
	0x01EC4AB0 MOV X1, X20
	0x01EC4AB4 MOV W2, W31
	0x01EC4AB8 STR W31, [X31 + 0x8]
	0x01EC4ABC BL 0x1EC3F30
	0x01EC4AC0 CBZ X0, 0x1EC4ACC

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {10}
	004 Move X8, [X1+32]
	005 Compare X8, 0
	006 JumpIfEqual {10}
	007 Move W0, [X8+28]
	008 Move X30, [X31+16]
	009 Return X0
	010 Call 0x1C17F20

Method: Fusion.PlayerRef GetStateAuthority(Fusion.NetworkObject networkObject)

Disassembly:
	0x01EC4AC4 LDR W8, [X0 + 0x4]
	0x01EC4AC8 B 0x1EC4AF8
	0x01EC4ACC LDR X0, [X19 + 0x180]
	0x01EC4AD0 CBZ X0, 0x1EC4B0C
	0x01EC4AD4 ADRP X8, 0x223B000
	0x01EC4AD8 LDR X8, [X8 + 0xB60]
	0x01EC4ADC ADD X2, X31, 0x8
	0x01EC4AE0 MOV X1, X20
	0x01EC4AE4 LDR X3, [X8]
	0x01EC4AE8 BL 0x2AE588C
	0x01EC4AEC LDR W8, [X31 + 0x8]
	0x01EC4AF0 ANDS W31, W0, 0x1
	0x01EC4AF4 CSEL W8, W8, W31, NE
	0x01EC4AF8 LDP X20, X19, [X31 + 0x20]
	0x01EC4AFC LDP X30, X21, [X31 + 0x10]
	0x01EC4B00 MOV W0, W8
	0x01EC4B04 ADD X31, X31, 0x30
	0x01EC4B08 RET
	0x01EC4B0C BL 0x1C16F20
	0x01EC4B10 STR X30, [X31 - 0x30]!
	0x01EC4B14 STP X22, X21, [X31 + 0x10]
	0x01EC4B18 STP X20, X19, [X31 + 0x20]
	0x01EC4B1C ADRP X22, 0x2515000
	0x01EC4B20 LDRB W8, [X22 + 0x476]
	0x01EC4B24 MOV X21, X2
	0x01EC4B28 MOV X20, X1
	0x01EC4B2C MOV X19, X0
	0x01EC4B30 TBNZ X8, 0x0, 0x1EC4B54
	0x01EC4B34 ADRP X0, 0x2232000
	0x01EC4B38 LDR X0, [X0 + 0xE40]
	0x01EC4B3C BL 0x1C16CF4
	0x01EC4B40 ADRP X0, 0x223B000
	0x01EC4B44 LDR X0, [X0 + 0xBD8]
	0x01EC4B48 BL 0x1C16CF4
	0x01EC4B4C MOVZ W8, 0x1
	0x01EC4B50 STRB W8, [X22 + 0x476]
	0x01EC4B54 STR X31, [X31 + 0x8]
	0x01EC4B58 LDR X8, [X19 + 0x58]
	0x01EC4B5C CBZ X8, 0x1EC4C6C
	0x01EC4B60 LDR W22, [X8 + 0x38]
	0x01EC4B64 MOV X0, X19
	0x01EC4B68 BL 0x1EC0864
	0x01EC4B6C CMP W22, 0x1
	0x01EC4B70 B.NE 0x1EC4B7C
	0x01EC4B74 TBZ X0, 0x0, 0x1EC4C30
	0x01EC4B78 B 0x1EC4C5C
	0x01EC4B7C TBZ X0, 0x0, 0x1EC4C30
	0x01EC4B80 AND X21, X21, 0x0
	0x01EC4B84 ADD X2, X31, 0x8
	0x01EC4B88 MOV X0, X19
	0x01EC4B8C MOV X1, X21
	0x01EC4B90 BL 0x1EC4C70
	0x01EC4B94 TBZ X0, 0x0, 0x1EC4C5C
	0x01EC4B98 LDR X8, [X31 + 0x8]
	0x01EC4B9C CBZ X8, 0x1EC4C6C
	0x01EC4BA0 LDR X9, [X19]
	0x01EC4BA4 LDR W22, [X8 + 0x20]
	0x01EC4BA8 MOV X0, X19
	0x01EC4BAC LDR X8, [X9 + 0x268]
	0x01EC4BB0 LDR X1, [X9 + 0x270]
	0x01EC4BB4 BLR X8
	0x01EC4BB8 AND X2, X0, 0x0
	0x01EC4BBC MOV X0, X19
	0x01EC4BC0 MOV X1, X22
	0x01EC4BC4 MOV X3, X31
	0x01EC4BC8 BL 0x1DBF8E4
	0x01EC4BCC TBZ X0, 0x0, 0x1EC4C5C
	0x01EC4BD0 LDR X8, [X19]
	0x01EC4BD4 MOV X0, X19
	0x01EC4BD8 LDR X9, [X8 + 0x268]
	0x01EC4BDC LDR X1, [X8 + 0x270]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2516000
	007 Move W8, [X21+1135]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x2233000
	015 Move X0, [X0+920]
	016 Call 0x1C17CF4
	017 Move X0, 0x2233000
	018 Move X0, [X0+3648]
	019 Call 0x1C17CF4
	020 Move X0, 0x2235000
	021 Move X0, [X0+40]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1135], W8
	025 Move [X31+8], X31
	026 Move X8, [X19+88]
	027 Compare X8, 0
	028 JumpIfEqual {84}
	029 Move W8, [X8+56]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Compare X20, 0
	033 JumpIfEqual {84}
	034 Move X21, [X20+32]
	035 Compare X21, 0
	036 JumpIfEqual {84}
	037 Move X8, 0x2233000
	038 Move X8, [X8+3648]
	039 Move X0, [X8]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move W8, [X21+32]
	045 Add W31, W8, 1
	046 Move X8, 0x2233000
	047 Move X8, [X8+920]
	048 Move X0, [X8]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X31
	054 Call NetworkId.get_RuntimeConfig
	055 Move X8, 0x2235000
	056 Move X8, [X8+40]
	057 And X1, X0, 0
	058 Add X2, X31, 8
	059 Move X0, X19
	060 Move X3, [X8]
	061 Call Simulation.TryGetStructData, X0, X1, X2
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {70}
	066 Move X8, [X31+8]
	067 Compare X8, 0
	068 JumpIfEqual {84}
	069 Move W8, [X8+24]
	070 Move W8, W31
	071 Compare X20, 0
	072 JumpIfEqual {84}
	073 Move X8, [X20+32]
	074 Compare X8, 0
	075 JumpIfEqual {84}
	076 Move W8, [X8+32]
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X30, [X31+16]
	080 Move X21, [X31+24]
	081 Move W0, W8
	082 Add X31, X31, 48
	083 Return X0
	084 Call 0x1C17F20

Method: System.Byte[] GetPlayerConnectionToken(Fusion.PlayerRef player)

Disassembly:
	0x01EC4BE0 BLR X9
	0x01EC4BE4 ADRP X8, 0x2232000
	0x01EC4BE8 LDR X8, [X8 + 0xE40]
	0x01EC4BEC MOV X22, X0
	0x01EC4BF0 LDR X8, [X8]
	0x01EC4BF4 LDR W9, [X8 + 0xE0]
	0x01EC4BF8 CBNZ W9, 0x1EC4C04
	0x01EC4BFC MOV X0, X8
	0x01EC4C00 BL 0x1C16DFC
	0x01EC4C04 CMP W20, W22
	0x01EC4C08 B.NE 0x1EC4C5C
	0x01EC4C0C ADRP X8, 0x223B000
	0x01EC4C10 LDR X8, [X8 + 0xBD8]
	0x01EC4C14 MOVZ W1, 0x6
	0x01EC4C18 MOV X0, X19
	0x01EC4C1C MOV X2, X21
	0x01EC4C20 LDR X4, [X8]
	0x01EC4C24 MOV X3, X31
	0x01EC4C28 BL 0x2254F1C
	0x01EC4C2C B 0x1EC4C5C
	0x01EC4C30 AND X20, X20, 0x0
	0x01EC4C34 MOV X0, X19
	0x01EC4C38 MOV X1, X20
	0x01EC4C3C BL 0x1EC2800
	0x01EC4C40 TBZ X0, 0x0, 0x1EC4C5C
	0x01EC4C44 MOVZ W2, 0x1
	0x01EC4C48 MOV X0, X19
	0x01EC4C4C MOV X1, X20
	0x01EC4C50 BL 0x1EC3F30
	0x01EC4C54 CBZ X0, 0x1EC4C6C
	0x01EC4C58 STR W21, [X0 + 0x4]
	0x01EC4C5C LDP X20, X19, [X31 + 0x20]
	0x01EC4C60 LDP X22, X21, [X31 + 0x10]
	0x01EC4C64 LDR X30, [X31], #0x30
	0x01EC4C68 RET
	0x01EC4C6C BL 0x1C16F20
	0x01EC4C70 STR X30, [X31 - 0x30]!
	0x01EC4C74 STP X22, X21, [X31 + 0x10]
	0x01EC4C78 STP X20, X19, [X31 + 0x20]
	0x01EC4C7C ADRP X22, 0x2515000
	0x01EC4C80 LDRB W8, [X22 + 0x4A6]
	0x01EC4C84 MOV X19, X2
	0x01EC4C88 MOV X20, X1
	0x01EC4C8C MOV X21, X0
	0x01EC4C90 TBNZ X8, 0x0, 0x1EC4CA8
	0x01EC4C94 ADRP X0, 0x223B000
	0x01EC4C98 LDR X0, [X0 + 0x920]
	0x01EC4C9C BL 0x1C16CF4
	0x01EC4CA0 MOVZ W8, 0x1
	0x01EC4CA4 STRB W8, [X22 + 0x4A6]
	0x01EC4CA8 STR X31, [X31 + 0x8]
	0x01EC4CAC LDR X0, [X21 + 0x150]
	0x01EC4CB0 CBZ X0, 0x1EC4CFC
	0x01EC4CB4 ADRP X8, 0x223B000
	0x01EC4CB8 LDR X8, [X8 + 0x920]
	0x01EC4CBC AND X1, X20, 0x0
	0x01EC4CC0 ADD X2, X31, 0x8
	0x01EC4CC4 LDR X3, [X8]
	0x01EC4CC8 BL 0x2A6903C
	0x01EC4CCC TBZ X0, 0x0, 0x1EC4CE4
	0x01EC4CD0 LDR X8, [X31 + 0x8]
	0x01EC4CD4 CBZ X8, 0x1EC4CFC
	0x01EC4CD8 LDR X8, [X8 + 0xB0]
	0x01EC4CDC STR X8, [X19]
	0x01EC4CE0 B 0x1EC4CE8
	0x01EC4CE4 STR X31, [X19]
	0x01EC4CE8 LDP X20, X19, [X31 + 0x20]
	0x01EC4CEC LDP X22, X21, [X31 + 0x10]
	0x01EC4CF0 AND W0, W0, 0x1
	0x01EC4CF4 LDR X30, [X31], #0x30

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2516000
	007 Move W8, [X21+1136]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2230000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1136], W8
	019 And X19, X19, 0
	020 Move X0, X20
	021 Move X1, X19
	022 Call Simulation.PlayerValid, X0, X1
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {72}
	027 Move X21, 0x2515000
	028 Move W8, [X21+2931]
	029 Compare W8, 0
	030 JumpIfNotEqual {36}
	031 Move X0, 0x2235000
	032 Move X0, [X0+32]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+2931], W8
	036 Move [X31+8], X31
	037 Move X0, [X20+184]
	038 Compare X0, 0
	039 JumpIfEqual {88}
	040 Move X8, 0x2235000
	041 Move X8, [X8+32]
	042 Add X2, X31, 8
	043 Move X1, X19
	044 Move X3, [X8]
	045 Call Dictionary`2<PlayerRef, Object>.TryGetValue, X0, X1, X2
	046 Move X20, [X31+8]
	047 Compare X20, 0
	048 JumpIfEqual {88}
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {88}
	053 Move X8, [X20+208]
	054 Compare X8, 0
	055 JumpIfEqual {88}
	056 Move X9, [X8+264]
	057 Compare X9, 0
	058 JumpIfEqual {72}
	059 Move W1, [X8+272]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X8, 0x2230000
	062 Move X8, [X8+1560]
	063 Move X0, [X8]
	064 Call 0x1C17D6C
	065 Move X19, X0
	066 Compare X0, 0
	067 JumpIfEqual {81}
	068 Move W8, [X19+24]
	069 Compare W8, 0
	070 JumpIfEqual {80}
	071 Add X0, X19, 32
	072 Move X19, X31
	073 Move X0, X19
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X30, [X31+16]
	077 Move X21, [X31+24]
	078 Add X31, X31, 48
	079 Return X0
	080 Move X0, X31
	081 Move X8, [X20+208]
	082 Compare X8, 0
	083 JumpIfEqual {88}
	084 Move X1, [X8+264]
	085 Move W2, [X8+272]
	086 Move X3, X31
	087 Call Native.MemCpy, X0, X1, X2
	088 Call 0x1C17F20

Method: Fusion.Sockets.NetAddress GetPlayerAddress(Fusion.PlayerRef player)

Disassembly:
	0x01EC4CF8 RET
	0x01EC4CFC BL 0x1C16F20
	0x01EC4D00 SUB X31, X31, 0x20
	0x01EC4D04 STP X30, X19, [X31 + 0x10]
	0x01EC4D08 LDR X0, [X0 + 0x130]
	0x01EC4D0C MOV X1, X31
	0x01EC4D10 BL 0x1EFF18C
	0x01EC4D14 STP X0, X1, [X31]
	0x01EC4D18 ADD X0, X31, 0x0
	0x01EC4D1C MOV X1, X31
	0x01EC4D20 BL 0x1EFD1D8
	0x01EC4D24 MOV W19, W0
	0x01EC4D28 TBZ X0, 0x0, 0x1EC4D44
	0x01EC4D2C ADD X0, X31, 0x0
	0x01EC4D30 MOV X1, X31
	0x01EC4D34 BL 0x1EFD150
	0x01EC4D38 LDR W8, [X0 + 0x40]
	0x01EC4D3C CMP W8, 0x3
	0x01EC4D40 B.NE 0x1EC4D18
	0x01EC4D44 AND W0, W19, 0x1
	0x01EC4D48 LDP X30, X19, [X31 + 0x10]
	0x01EC4D4C ADD X31, X31, 0x20
	0x01EC4D50 RET
	0x01EC4D54 STR X30, [X31 - 0x30]!
	0x01EC4D58 STP X22, X21, [X31 + 0x10]
	0x01EC4D5C STP X20, X19, [X31 + 0x20]
	0x01EC4D60 ADRP X21, 0x2515000
	0x01EC4D64 ADRP X22, 0x223B000
	0x01EC4D68 LDRB W8, [X21 + 0x477]
	0x01EC4D6C LDR X22, [X22 + 0xBE0]
	0x01EC4D70 MOV W20, W1
	0x01EC4D74 MOV X19, X0
	0x01EC4D78 TBNZ X8, 0x0, 0x1EC4D9C
	0x01EC4D7C ADRP X0, 0x223A000
	0x01EC4D80 LDR X0, [X0 + 0xA90]
	0x01EC4D84 BL 0x1C16CF4
	0x01EC4D88 ADRP X0, 0x223B000
	0x01EC4D8C LDR X0, [X0 + 0xBE0]
	0x01EC4D90 BL 0x1C16CF4
	0x01EC4D94 MOVZ W8, 0x1
	0x01EC4D98 STRB W8, [X21 + 0x477]
	0x01EC4D9C LDR X0, [X22]
	0x01EC4DA0 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 And X20, X1, 0
	007 Move X1, X20
	008 Move X21, X0
	009 Move X19, X8
	010 Call Simulation.PlayerValid, X0, X1
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {48}
	015 Move X22, 0x2515000
	016 Move W8, [X22+2931]
	017 Compare W8, 0
	018 JumpIfNotEqual {24}
	019 Move X0, 0x2235000
	020 Move X0, [X0+32]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2931], W8
	024 Move [X31+8], X31
	025 Move X0, [X21+184]
	026 Compare X0, 0
	027 JumpIfEqual {57}
	028 Move X8, 0x2235000
	029 Move X8, [X8+32]
	030 Add X2, X31, 8
	031 Move X1, X20
	032 Move X3, [X8]
	033 Call Dictionary`2<PlayerRef, Object>.TryGetValue, X0, X1, X2
	034 Move X8, [X31+8]
	035 Compare X8, 0
	036 JumpIfEqual {48}
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {48}
	041 Move X8, [X8+208]
	042 Compare X8, 0
	043 JumpIfEqual {57}
	044 Move X9, [X8+56]
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 Move [X19+16], X9
	047 Move [X19], V0
	048 Move [X19], X31
	049 Move [X19+8], X31
	050 Move [X19+16], X31
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Return X0
	057 Call 0x1C17F20

Method: System.Int64 GetPlayerUniqueId(Fusion.PlayerRef player)

Disassembly:
	0x01EC4DA4 BL 0x1E32108
	0x01EC4DA8 LDR X21, [X19 + 0x40]
	0x01EC4DAC CBZ X21, 0x1EC4E2C
	0x01EC4DB0 ADRP X10, 0x223A000
	0x01EC4DB4 LDR X8, [X21]
	0x01EC4DB8 LDR X10, [X10 + 0xA90]
	0x01EC4DBC LDRH W9, [X8 + 0x12E]
	0x01EC4DC0 LDR X1, [X10]
	0x01EC4DC4 CBZ X9, 0x1EC4DE8
	0x01EC4DC8 LDR X10, [X8 + 0xB0]
	0x01EC4DCC ADD X10, X10, 0x8
	0x01EC4DD0 LDUR X11, [X10 - 0x8]
	0x01EC4DD4 CMP X11, X1
	0x01EC4DD8 B.EQ 0x1EC4DF8
	0x01EC4DDC SUBS X9, X9, 0x1
	0x01EC4DE0 ADD X10, X10, 0x10
	0x01EC4DE4 B.NE 0x1EC4DD0
	0x01EC4DE8 MOVZ W2, 0xD
	0x01EC4DEC MOV X0, X21
	0x01EC4DF0 BL 0x1C5C788
	0x01EC4DF4 B 0x1EC4E08
	0x01EC4DF8 LDR W9, [X10]
	0x01EC4DFC ADD W9, W9, 0xD
	0x01EC4E00 ADD X8, X8, W9, 0x4, SXTW
	0x01EC4E04 ADD X0, X8, 0x138
	0x01EC4E08 LDP X8, X2, [X0]
	0x01EC4E0C MOV X0, X21
	0x01EC4E10 MOV W1, W20
	0x01EC4E14 BLR X8
	0x01EC4E18 LDP X20, X19, [X31 + 0x20]
	0x01EC4E1C LDP X22, X21, [X31 + 0x10]
	0x01EC4E20 MOV X0, X31
	0x01EC4E24 LDR X30, [X31], #0x30
	0x01EC4E28 B 0x1E32194
	0x01EC4E2C BL 0x1C16F20
	0x01EC4E30 CMP W1, 0x1
	0x01EC4E34 MOV X20, X0
	0x01EC4E38 B.NE 0x1EC4ECC
	0x01EC4E3C MOV X0, X20
	0x01EC4E40 BL 0x3EB1AD0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 And X19, X1, 0
	007 Move X1, X19
	008 Move X20, X0
	009 Call Simulation.PlayerValid, X0, X1
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {46}
	014 Move X21, 0x2515000
	015 Move W8, [X21+2931]
	016 Compare W8, 0
	017 JumpIfNotEqual {23}
	018 Move X0, 0x2235000
	019 Move X0, [X0+32]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2931], W8
	023 Move [X31+8], X31
	024 Move X0, [X20+184]
	025 Compare X0, 0
	026 JumpIfEqual {53}
	027 Move X8, 0x2235000
	028 Move X8, [X8+32]
	029 Add X2, X31, 8
	030 Move X1, X19
	031 Move X3, [X8]
	032 Call Dictionary`2<PlayerRef, Object>.TryGetValue, X0, X1, X2
	033 Move X9, [X31+8]
	034 Move W8, W0
	035 Move X0, X31
	036 Compare X9, 0
	037 JumpIfEqual {47}
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {47}
	042 Move X8, [X9+208]
	043 Compare X8, 0
	044 JumpIfEqual {53}
	045 Move X0, [X8+296]
	046 Move X0, X31
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X30, [X31+16]
	050 Move X21, [X31+24]
	051 Add X31, X31, 48
	052 Return X0
	053 Call 0x1C17F20

Method: Fusion.SimulationInput GetInputForPlayer(Fusion.PlayerRef player)

Disassembly:
	0x01EC4E44 MOV X20, X0
	0x01EC4E48 ADRP X0, 0x222F000
	0x01EC4E4C LDR X0, [X0 + 0x7D0]
	0x01EC4E50 BL 0x1C16D08
	0x01EC4E54 LDR X8, [X20]
	0x01EC4E58 LDR X1, [X8]
	0x01EC4E5C BL 0x1C17270
	0x01EC4E60 TBZ X0, 0x0, 0x1EC4EA4

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+160]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 And X1, X1, 0
	006 Move X2, X31
	007 Move X30, [X31+16]
	008 Call SimulationInputCollection.GetByPlayer, X0, X1
	009 Return X0
	010 Call 0x1C17F20

Method: System.Void DeletePlayerSimulationData(Fusion.PlayerRef player)

Disassembly:
	0x01EC4E64 LDR X20, [X20]
	0x01EC4E68 BL 0x3EB1AE0
	0x01EC4E6C ADRP X0, 0x2237000
	0x01EC4E70 LDR X0, [X0 + 0x8B0]
	0x01EC4E74 BL 0x1C16D08
	0x01EC4E78 LDR W8, [X0 + 0xE0]
	0x01EC4E7C CBNZ W8, 0x1EC4E84
	0x01EC4E80 BL 0x1C16DFC
	0x01EC4E84 ADRP X0, 0x223B000
	0x01EC4E88 LDR X0, [X0 + 0xAB8]
	0x01EC4E8C BL 0x1C16D08
	0x01EC4E90 MOV X2, X0
	0x01EC4E94 MOV X0, X19
	0x01EC4E98 MOV X1, X20
	0x01EC4E9C BL 0x2213878
	0x01EC4EA0 B 0x1EC4E18
	0x01EC4EA4 MOVZ W0, 0x8
	0x01EC4EA8 BL 0x3EB1AF0
	0x01EC4EAC LDR X8, [X20]
	0x01EC4EB0 STR X8, [X0]
	0x01EC4EB4 ADRP X1, 0x1FF0000
	0x01EC4EB8 ADD X1, X1, 0xE58
	0x01EC4EBC MOV X2, X31
	0x01EC4EC0 BL 0x3EB1B00
	0x01EC4EC4 MOV X20, X0
	0x01EC4EC8 BL 0x3EB1AE0
	0x01EC4ECC MOV X0, X20
	0x01EC4ED0 BL 0x1D2C690
	0x01EC4ED4 BL 0x1990590
	0x01EC4ED8 STP X30, X21, [X31 - 0x20]!
	0x01EC4EDC STP X20, X19, [X31 + 0x10]
	0x01EC4EE0 ADRP X20, 0x2515000
	0x01EC4EE4 ADRP X21, 0x223B000
	0x01EC4EE8 LDRB W8, [X20 + 0x478]
	0x01EC4EEC LDR X21, [X21 + 0xBE8]
	0x01EC4EF0 MOV X19, X0
	0x01EC4EF4 TBNZ X8, 0x0, 0x1EC4F18
	0x01EC4EF8 ADRP X0, 0x223A000
	0x01EC4EFC LDR X0, [X0 + 0xA90]
	0x01EC4F00 BL 0x1C16CF4
	0x01EC4F04 ADRP X0, 0x223B000
	0x01EC4F08 LDR X0, [X0 + 0xBE8]
	0x01EC4F0C BL 0x1C16CF4
	0x01EC4F10 MOVZ W8, 0x1
	0x01EC4F14 STRB W8, [X20 + 0x478]
	0x01EC4F18 LDR X0, [X21]
	0x01EC4F1C MOV X1, X31
	0x01EC4F20 BL 0x1E32108
	0x01EC4F24 LDR X20, [X19 + 0x40]
	0x01EC4F28 CBZ X20, 0x1EC4FA0
	0x01EC4F2C ADRP X10, 0x223A000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2516000
	007 Move W8, [X21+1137]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x223C000
	015 Move X0, [X0+2904]
	016 Call 0x1C17CF4
	017 Move X0, 0x223C000
	018 Move X0, [X0+2912]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1137], W8
	022 Move X0, X19
	023 Move [X31+8], W31
	024 Call Simulation.get_IsClient, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {61}
	029 And X20, X20, 0
	030 Move X0, X19
	031 Move X1, X20
	032 Move W2, W31
	033 Call Simulation.GetPlayerSimulationData, X0, X1, X2
	034 Compare X0, 0
	035 JumpIfEqual {61}
	036 Move X0, [X19+376]
	037 Compare X0, 0
	038 JumpIfEqual {67}
	039 Move X8, 0x223C000
	040 Move X8, [X8+2912]
	041 Add X2, X31, 8
	042 Move X1, X20
	043 Move X3, [X8]
	044 Call Dictionary`2<PlayerRef, NetworkId>.TryGetValue, X0, X1, X2
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {61}
	049 Move X0, [X19+376]
	050 Compare X0, 0
	051 JumpIfEqual {67}
	052 Move X8, 0x223C000
	053 Move X8, [X8+2904]
	054 Move X1, X20
	055 Move X2, [X8]
	056 Call Dictionary`2<PlayerRef, NetworkId>.Remove, X0, X1
	057 Move W1, [X31+8]
	058 Move W2, 2
	059 Move X0, X19
	060 Call Simulation.Destroy, X0, X1, X2
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X30, [X31+16]
	064 Move X21, [X31+24]
	065 Add X31, X31, 48
	066 Return 
	067 Call 0x1C17F20

Method: Fusion.Simulation/PlayerSimulationData* GetPlayerSimulationData(Fusion.PlayerRef player, System.Boolean create)

Disassembly:
	0x01EC4F30 LDR X8, [X20]
	0x01EC4F34 LDR X10, [X10 + 0xA90]
	0x01EC4F38 LDRH W9, [X8 + 0x12E]
	0x01EC4F3C LDR X1, [X10]
	0x01EC4F40 CBZ X9, 0x1EC4F64
	0x01EC4F44 LDR X10, [X8 + 0xB0]
	0x01EC4F48 ADD X10, X10, 0x8
	0x01EC4F4C LDUR X11, [X10 - 0x8]
	0x01EC4F50 CMP X11, X1
	0x01EC4F54 B.EQ 0x1EC4F74
	0x01EC4F58 SUBS X9, X9, 0x1
	0x01EC4F5C ADD X10, X10, 0x10
	0x01EC4F60 B.NE 0x1EC4F4C
	0x01EC4F64 MOVZ W2, 0xC
	0x01EC4F68 MOV X0, X20
	0x01EC4F6C BL 0x1C5C788
	0x01EC4F70 B 0x1EC4F84
	0x01EC4F74 LDR W9, [X10]
	0x01EC4F78 ADD W9, W9, 0xC
	0x01EC4F7C ADD X8, X8, W9, 0x4, SXTW
	0x01EC4F80 ADD X0, X8, 0x138
	0x01EC4F84 LDP X8, X1, [X0]
	0x01EC4F88 MOV X0, X20
	0x01EC4F8C BLR X8
	0x01EC4F90 LDP X20, X19, [X31 + 0x10]
	0x01EC4F94 MOV X0, X31
	0x01EC4F98 LDP X30, X21, [X31], #0x20
	0x01EC4F9C B 0x1E32194
	0x01EC4FA0 BL 0x1C16F20
	0x01EC4FA4 CMP W1, 0x1
	0x01EC4FA8 MOV X20, X0
	0x01EC4FAC B.NE 0x1EC5040
	0x01EC4FB0 MOV X0, X20
	0x01EC4FB4 BL 0x3EB1AD0
	0x01EC4FB8 MOV X20, X0
	0x01EC4FBC ADRP X0, 0x222F000
	0x01EC4FC0 LDR X0, [X0 + 0x7D0]
	0x01EC4FC4 BL 0x1C16D08
	0x01EC4FC8 LDR X8, [X20]
	0x01EC4FCC LDR X1, [X8]
	0x01EC4FD0 BL 0x1C17270
	0x01EC4FD4 TBZ X0, 0x0, 0x1EC5018
	0x01EC4FD8 LDR X20, [X20]
	0x01EC4FDC BL 0x3EB1AE0
	0x01EC4FE0 ADRP X0, 0x2237000
	0x01EC4FE4 LDR X0, [X0 + 0x8B0]
	0x01EC4FE8 BL 0x1C16D08
	0x01EC4FEC LDR W8, [X0 + 0xE0]
	0x01EC4FF0 CBNZ W8, 0x1EC4FF8
	0x01EC4FF4 BL 0x1C16DFC
	0x01EC4FF8 ADRP X0, 0x223B000
	0x01EC4FFC LDR X0, [X0 + 0xAB8]
	0x01EC5000 BL 0x1C16D08
	0x01EC5004 MOV X2, X0
	0x01EC5008 MOV X0, X19
	0x01EC500C MOV X1, X20
	0x01EC5010 BL 0x2213878
	0x01EC5014 B 0x1EC4F90
	0x01EC5018 MOVZ W0, 0x8
	0x01EC501C BL 0x3EB1AF0
	0x01EC5020 LDR X8, [X20]
	0x01EC5024 STR X8, [X0]
	0x01EC5028 ADRP X1, 0x1FEF000
	0x01EC502C ADD X1, X1, 0xE58
	0x01EC5030 MOV X2, X31
	0x01EC5034 BL 0x3EB1B00
	0x01EC5038 MOV X20, X0
	0x01EC503C BL 0x3EB1AE0
	0x01EC5040 MOV X0, X20
	0x01EC5044 BL 0x1D2C690
	0x01EC5048 BL 0x1990590
	0x01EC504C STP X30, X23, [X31 - 0x30]!
	0x01EC5050 STP X22, X21, [X31 + 0x10]
	0x01EC5054 STP X20, X19, [X31 + 0x20]
	0x01EC5058 ADRP X22, 0x2514000
	0x01EC505C ADRP X23, 0x223A000
	0x01EC5060 LDRB W8, [X22 + 0x479]
	0x01EC5064 LDR X23, [X23 + 0xBF0]
	0x01EC5068 MOV W20, W2
	0x01EC506C MOV W21, W1
	0x01EC5070 MOV X19, X0
	0x01EC5074 TBNZ X8, 0x0, 0x1EC5098
	0x01EC5078 ADRP X0, 0x2239000
	0x01EC507C LDR X0, [X0 + 0xA90]
	0x01EC5080 BL 0x1C16CF4
	0x01EC5084 ADRP X0, 0x223A000
	0x01EC5088 LDR X0, [X0 + 0xBF0]
	0x01EC508C BL 0x1C16CF4
	0x01EC5090 MOVZ W8, 0x1
	0x01EC5094 STRB W8, [X22 + 0x479]
	0x01EC5098 LDR X0, [X23]
	0x01EC509C MOV X1, X31
	0x01EC50A0 BL 0x1E32108
	0x01EC50A4 LDR X22, [X19 + 0x40]
	0x01EC50A8 CBZ X22, 0x1EC512C
	0x01EC50AC ADRP X10, 0x2239000
	0x01EC50B0 LDR X8, [X22]
	0x01EC50B4 LDR X10, [X10 + 0xA90]
	0x01EC50B8 LDRH W9, [X8 + 0x12E]
	0x01EC50BC LDR X1, [X10]
	0x01EC50C0 CBZ X9, 0x1EC50E4
	0x01EC50C4 LDR X10, [X8 + 0xB0]
	0x01EC50C8 ADD X10, X10, 0x8
	0x01EC50CC LDUR X11, [X10 - 0x8]
	0x01EC50D0 CMP X11, X1
	0x01EC50D4 B.EQ 0x1EC50F4
	0x01EC50D8 SUBS X9, X9, 0x1
	0x01EC50DC ADD X10, X10, 0x10
	0x01EC50E0 B.NE 0x1EC50CC
	0x01EC50E4 MOVZ W2, 0xB
	0x01EC50E8 MOV X0, X22
	0x01EC50EC BL 0x1C5C788
	0x01EC50F0 B 0x1EC5104
	0x01EC50F4 LDR W9, [X10]
	0x01EC50F8 ADD W9, W9, 0xB
	0x01EC50FC ADD X8, X8, W9, 0x4, SXTW
	0x01EC5100 ADD X0, X8, 0x138
	0x01EC5104 LDP X8, X3, [X0]
	0x01EC5108 AND W1, W21, 0x1
	0x01EC510C MOV X0, X22
	0x01EC5110 MOV W2, W20
	0x01EC5114 BLR X8
	0x01EC5118 LDP X20, X19, [X31 + 0x20]
	0x01EC511C LDP X22, X21, [X31 + 0x10]
	0x01EC5120 MOV X0, X31
	0x01EC5124 LDP X30, X23, [X31], #0x30
	0x01EC5128 B 0x1E32194
	0x01EC512C BL 0x1C16F20
	0x01EC5130 CMP W1, 0x1
	0x01EC5134 MOV X20, X0
	0x01EC5138 B.NE 0x1EC51CC
	0x01EC513C MOV X0, X20
	0x01EC5140 BL 0x3EB1AD0
	0x01EC5144 MOV X20, X0
	0x01EC5148 ADRP X0, 0x222E000
	0x01EC514C LDR X0, [X0 + 0x7D0]
	0x01EC5150 BL 0x1C16D08
	0x01EC5154 LDR X8, [X20]
	0x01EC5158 LDR X1, [X8]
	0x01EC515C BL 0x1C17270
	0x01EC5160 TBZ X0, 0x0, 0x1EC51A4
	0x01EC5164 LDR X20, [X20]
	0x01EC5168 BL 0x3EB1AE0
	0x01EC516C ADRP X0, 0x2236000
	0x01EC5170 LDR X0, [X0 + 0x8B0]
	0x01EC5174 BL 0x1C16D08
	0x01EC5178 LDR W8, [X0 + 0xE0]
	0x01EC517C CBNZ W8, 0x1EC5184
	0x01EC5180 BL 0x1C16DFC
	0x01EC5184 ADRP X0, 0x223A000
	0x01EC5188 LDR X0, [X0 + 0xAB8]
	0x01EC518C BL 0x1C16D08
	0x01EC5190 MOV X2, X0
	0x01EC5194 MOV X0, X19
	0x01EC5198 MOV X1, X20
	0x01EC519C BL 0x2213878
	0x01EC51A0 B 0x1EC5118
	0x01EC51A4 MOVZ W0, 0x8
	0x01EC51A8 BL 0x3EB1AF0
	0x01EC51AC LDR X8, [X20]
	0x01EC51B0 STR X8, [X0]
	0x01EC51B4 ADRP X1, 0x1FEF000
	0x01EC51B8 ADD X1, X1, 0xE58
	0x01EC51BC MOV X2, X31
	0x01EC51C0 BL 0x3EB1B00
	0x01EC51C4 MOV X20, X0
	0x01EC51C8 BL 0x3EB1AE0
	0x01EC51CC MOV X0, X20
	0x01EC51D0 BL 0x1D2C690
	0x01EC51D4 BL 0x1990590
	0x01EC51D8 STP X30, X23, [X31 - 0x30]!
	0x01EC51DC STP X22, X21, [X31 + 0x10]
	0x01EC51E0 STP X20, X19, [X31 + 0x20]
	0x01EC51E4 ADRP X22, 0x2514000
	0x01EC51E8 ADRP X23, 0x223A000
	0x01EC51EC LDRB W8, [X22 + 0x47A]
	0x01EC51F0 LDR X23, [X23 + 0xBF8]
	0x01EC51F4 MOV W20, W2
	0x01EC51F8 MOV W21, W1
	0x01EC51FC MOV X19, X0
	0x01EC5200 TBNZ X8, 0x0, 0x1EC5224
	0x01EC5204 ADRP X0, 0x2239000
	0x01EC5208 LDR X0, [X0 + 0xA90]
	0x01EC520C BL 0x1C16CF4
	0x01EC5210 ADRP X0, 0x223A000
	0x01EC5214 LDR X0, [X0 + 0xBF8]
	0x01EC5218 BL 0x1C16CF4
	0x01EC521C MOVZ W8, 0x1
	0x01EC5220 STRB W8, [X22 + 0x47A]
	0x01EC5224 LDR X0, [X23]
	0x01EC5228 MOV X1, X31
	0x01EC522C BL 0x1E32108
	0x01EC5230 LDR X22, [X19 + 0x40]
	0x01EC5234 CBZ X22, 0x1EC52B8
	0x01EC5238 ADRP X10, 0x2239000
	0x01EC523C LDR X8, [X22]
	0x01EC5240 LDR X10, [X10 + 0xA90]
	0x01EC5244 LDRH W9, [X8 + 0x12E]
	0x01EC5248 LDR X1, [X10]
	0x01EC524C CBZ X9, 0x1EC5270
	0x01EC5250 LDR X10, [X8 + 0xB0]
	0x01EC5254 ADD X10, X10, 0x8
	0x01EC5258 LDUR X11, [X10 - 0x8]
	0x01EC525C CMP X11, X1
	0x01EC5260 B.EQ 0x1EC5280
	0x01EC5264 SUBS X9, X9, 0x1
	0x01EC5268 ADD X10, X10, 0x10
	0x01EC526C B.NE 0x1EC5258
	0x01EC5270 MOVZ W2, 0xA
	0x01EC5274 MOV X0, X22
	0x01EC5278 BL 0x1C5C788
	0x01EC527C B 0x1EC5290
	0x01EC5280 LDR W9, [X10]
	0x01EC5284 ADD W9, W9, 0xA
	0x01EC5288 ADD X8, X8, W9, 0x4, SXTW
	0x01EC528C ADD X0, X8, 0x138
	0x01EC5290 LDP X8, X3, [X0]
	0x01EC5294 AND W1, W21, 0x1
	0x01EC5298 MOV X0, X22
	0x01EC529C MOV W2, W20
	0x01EC52A0 BLR X8
	0x01EC52A4 LDP X20, X19, [X31 + 0x20]
	0x01EC52A8 LDP X22, X21, [X31 + 0x10]
	0x01EC52AC MOV X0, X31
	0x01EC52B0 LDP X30, X23, [X31], #0x30
	0x01EC52B4 B 0x1E32194
	0x01EC52B8 BL 0x1C16F20
	0x01EC52BC CMP W1, 0x1
	0x01EC52C0 MOV X20, X0
	0x01EC52C4 B.NE 0x1EC5358
	0x01EC52C8 MOV X0, X20
	0x01EC52CC BL 0x3EB1AD0
	0x01EC52D0 MOV X20, X0
	0x01EC52D4 ADRP X0, 0x222E000
	0x01EC52D8 LDR X0, [X0 + 0x7D0]
	0x01EC52DC BL 0x1C16D08
	0x01EC52E0 LDR X8, [X20]
	0x01EC52E4 LDR X1, [X8]
	0x01EC52E8 BL 0x1C17270
	0x01EC52EC TBZ X0, 0x0, 0x1EC5330
	0x01EC52F0 LDR X20, [X20]
	0x01EC52F4 BL 0x3EB1AE0
	0x01EC52F8 ADRP X0, 0x2236000
	0x01EC52FC LDR X0, [X0 + 0x8B0]
	0x01EC5300 BL 0x1C16D08
	0x01EC5304 LDR W8, [X0 + 0xE0]
	0x01EC5308 CBNZ W8, 0x1EC5310
	0x01EC530C BL 0x1C16DFC
	0x01EC5310 ADRP X0, 0x223A000
	0x01EC5314 LDR X0, [X0 + 0xAB8]
	0x01EC5318 BL 0x1C16D08
	0x01EC531C MOV X2, X0
	0x01EC5320 MOV X0, X19
	0x01EC5324 MOV X1, X20
	0x01EC5328 BL 0x2213878
	0x01EC532C B 0x1EC52A4
	0x01EC5330 MOVZ W0, 0x8
	0x01EC5334 BL 0x3EB1AF0
	0x01EC5338 LDR X8, [X20]
	0x01EC533C STR X8, [X0]
	0x01EC5340 ADRP X1, 0x1FEF000
	0x01EC5344 ADD X1, X1, 0xE58
	0x01EC5348 MOV X2, X31
	0x01EC534C BL 0x3EB1B00
	0x01EC5350 MOV X20, X0
	0x01EC5354 BL 0x3EB1AE0
	0x01EC5358 MOV X0, X20
	0x01EC535C BL 0x1D2C690
	0x01EC5360 BL 0x1990590
	0x01EC5364 RET
	0x01EC5368 RET
	0x01EC536C SUB X31, X31, 0xC0
	0x01EC5370 STP X29, X30, [X31 + 0x60]
	0x01EC5374 STP X28, X27, [X31 + 0x70]
	0x01EC5378 STP X26, X25, [X31 + 0x80]
	0x01EC537C STP X24, X23, [X31 + 0x90]
	0x01EC5380 STP X22, X21, [X31 + 0xA0]
	0x01EC5384 STP X20, X19, [X31 + 0xB0]
	0x01EC5388 ADRP X21, 0x2514000
	0x01EC538C LDRB W8, [X21 + 0x47B]
	0x01EC5390 MOV W19, W1
	0x01EC5394 MOV X20, X0
	0x01EC5398 TBNZ X8, 0x0, 0x1EC5410
	0x01EC539C ADRP X0, 0x2239000
	0x01EC53A0 LDR X0, [X0 + 0xA40]
	0x01EC53A4 BL 0x1C16CF4
	0x01EC53A8 ADRP X0, 0x2239000
	0x01EC53AC LDR X0, [X0 + 0xA48]
	0x01EC53B0 BL 0x1C16CF4
	0x01EC53B4 ADRP X0, 0x2239000
	0x01EC53B8 LDR X0, [X0 + 0xA50]
	0x01EC53BC BL 0x1C16CF4
	0x01EC53C0 ADRP X0, 0x2239000
	0x01EC53C4 LDR X0, [X0 + 0xA58]
	0x01EC53C8 BL 0x1C16CF4
	0x01EC53CC ADRP X0, 0x2239000
	0x01EC53D0 LDR X0, [X0 + 0xA90]
	0x01EC53D4 BL 0x1C16CF4
	0x01EC53D8 ADRP X0, 0x223A000
	0x01EC53DC LDR X0, [X0 + 0xC00]
	0x01EC53E0 BL 0x1C16CF4
	0x01EC53E4 ADRP X0, 0x2239000
	0x01EC53E8 LDR X0, [X0 + 0xA60]
	0x01EC53EC BL 0x1C16CF4
	0x01EC53F0 ADRP X0, 0x2231000
	0x01EC53F4 LDR X0, [X0 + 0x398]
	0x01EC53F8 BL 0x1C16CF4
	0x01EC53FC ADRP X0, 0x222E000

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X30
	003 Move [X31+96], X28
	004 Move [X31+104], X27
	005 Move [X31+112], X26
	006 Move [X31+120], X25
	007 Move [X31+128], X24
	008 Move [X31+136], X23
	009 Move [X31+144], X22
	010 Move [X31+152], X21
	011 Move [X31+160], X20
	012 Move [X31+168], X19
	013 Move X22, 0x2516000
	014 Move X24, 0x2233000
	015 Move W8, [X22+1138]
	016 Move X24, [X24+3648]
	017 Move W21, W2
	018 Move X20, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {80}
	024 Move X0, 0x223C000
	025 Move X0, [X0+2920]
	026 Call 0x1C17CF4
	027 Move X0, 0x223C000
	028 Move X0, [X0+2928]
	029 Call 0x1C17CF4
	030 Move X0, 0x223C000
	031 Move X0, [X0+2912]
	032 Call 0x1C17CF4
	033 Move X0, 0x223C000
	034 Move X0, [X0+2936]
	035 Call 0x1C17CF4
	036 Move X0, 0x223C000
	037 Move X0, [X0+2944]
	038 Call 0x1C17CF4
	039 Move X0, 0x223C000
	040 Move X0, [X0+2952]
	041 Call 0x1C17CF4
	042 Move X0, 0x223C000
	043 Move X0, [X0+2960]
	044 Call 0x1C17CF4
	045 Move X0, 0x2233000
	046 Move X0, [X0+920]
	047 Call 0x1C17CF4
	048 Move X0, 0x223B000
	049 Move X0, [X0+888]
	050 Call 0x1C17CF4
	051 Move X0, 0x223B000
	052 Move X0, [X0+1864]
	053 Call 0x1C17CF4
	054 Move X0, 0x2233000
	055 Move X0, [X0+3648]
	056 Call 0x1C17CF4
	057 Move X0, 0x223C000
	058 Move X0, [X0+2968]
	059 Call 0x1C17CF4
	060 Move X0, 0x223C000
	061 Move X0, [X0+2976]
	062 Call 0x1C17CF4
	063 Move X0, 0x223B000
	064 Move X0, [X0+2984]
	065 Call 0x1C17CF4
	066 Move X0, 0x223B000
	067 Move X0, [X0+2992]
	068 Call 0x1C17CF4
	069 Move X0, 0x2234000
	070 Move X0, [X0+40]
	071 Call 0x1C17CF4
	072 Move X0, 0x223B000
	073 Move X0, [X0+3000]
	074 Call 0x1C17CF4
	075 Move X0, 0x223B000
	076 Move X0, [X0+3008]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X22+1138], W8
	080 Move X0, [X24]
	081 Move [X31+88], X31
	082 Move [X31+72], W31
	083 Move [X31+64], X31
	084 Move [X31+32], X31
	085 Move [X31+40], X31
	086 Move [X31+48], X31
	087 Move [X31+24], X31
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Add W31, W20, 1
	093 Move X8, 0x2232000
	094 Move X8, [X8+920]
	095 Move X0, [X8]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move X0, X31
	101 Call NetworkId.get_RuntimeConfig
	102 Move X8, 0x2234000
	103 Move X8, [X8+40]
	104 And X1, X0, 0
	105 Add X2, X31, 88
	106 Move X0, X19
	107 Move X3, [X8]
	108 Call Simulation.TryGetStructData, X0, X1, X2
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {117}
	113 Move X8, [X31+88]
	114 Compare X8, 0
	115 JumpIfEqual {318}
	116 Move W20, [X8+24]
	117 Move TEMP, 0
	118 Not TEMP
	119 Move W20, TEMP
	120 Move X0, [X24]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfEqual {126}
	124 Compare W20, 0
	125 JumpIfNotEqual {129}
	126 Call 0x1C17DFC
	127 Compare W20, 0
	128 JumpIfEqual {302}
	129 Move X0, [X24]
	130 Move X23, 0x223B000
	131 Move X22, 0x223B000
	132 Move W8, [X0+224]
	133 Move X23, [X23+3008]
	134 Move X22, [X22+2920]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Move X1, [X23]
	139 Move X3, [X22]
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move W22, W20
	142 NotImplemented "Instruction CSET not yet implemented."
	143 Move X2, X22
	144 Call Assert.Always, X0, X1, X2
	145 Move X0, [X19+376]
	146 Compare X0, 0
	147 JumpIfEqual {318}
	148 Move X8, 0x223B000
	149 Move X8, [X8+2912]
	150 Add X2, X31, 72
	151 Move X1, X22
	152 Move X3, [X8]
	153 Call Dictionary`2<PlayerRef, NetworkId>.TryGetValue, X0, X1, X2
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfNotEqual {170}
	158 Move X8, 0x223B000
	159 Move W1, [X31+72]
	160 Move X8, [X8+2984]
	161 Add X2, X31, 64
	162 Move X0, X19
	163 Move X3, [X8]
	164 Call Simulation.TryGetStructData, X0, X1, X2
	165 Move TEMP, X0
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfNotEqual {170}
	169 Move X21, [X31+64]
	170 Move X0, [X19+392]
	171 Compare X0, 0
	172 JumpIfEqual {318}
	173 Move X8, 0x223B000
	174 Move X8, [X8+2960]
	175 Move X1, [X8]
	176 Add X8, X31, 0
	177 Call HashSet`1<NetworkId>.GetEnumerator, X0
	178 Move V0, [X31]
	179 Move X8, [X31+16]
	180 Move X26, 0x223B000
	181 Move X25, 0x223A000
	182 Move X26, [X26+2944]
	183 Move X25, [X25+888]
	184 Move [X31+2], V0
	185 Move [X31+48], X8
	186 Move X27, 0x223B000
	187 Move X27, [X27+2992]
	188 Move X1, [X26]
	189 Add X0, X31, 32
	190 Call Enumerator<NetworkId>.MoveNext, X0
	191 Move TEMP, X0
	192 And TEMP, TEMP, 1
	193 Compare TEMP, 1
	194 JumpIfNotEqual {238}
	195 Move X0, [X25]
	196 Move W23, [X31+48]
	197 Move W8, [X0+224]
	198 Compare W8, 0
	199 JumpIfNotEqual {201}
	200 Call 0x1C17DFC
	201 Move X0, X31
	202 Call NetworkObjectTypeId.get_PlayerData
	203 Move X4, [X27]
	204 Move X2, X0
	205 Add X3, X31, 24
	206 Move X0, X19
	207 Move X1, X23
	208 Call Simulation.TryGetStructData, X0, X1, X2, X3
	209 Move TEMP, X0
	210 And TEMP, TEMP, 1
	211 Compare TEMP, 1
	212 JumpIfNotEqual {188}
	213 Move X8, [X31+24]
	214 Compare X8, 0
	215 JumpIfEqual {317}
	216 Move X0, [X24]
	217 Move W28, [X8]
	218 Move W9, [X0+224]
	219 Compare W9, 0
	220 JumpIfNotEqual {222}
	221 Call 0x1C17DFC
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Move X0, [X19+376]
	224 Compare X0, 0
	225 JumpIfEqual {319}
	226 Move X8, 0x223B000
	227 Move X8, [X8+2928]
	228 Move X3, [X8]
	229 Move X1, X22
	230 Move X2, X23
	231 Call Dictionary`2<PlayerRef, NetworkId>.Add, X0, X1, X2
	232 Move X8, 0x223B000
	233 Move X21, [X31+24]
	234 Move X8, [X8+2936]
	235 Add X0, X31, 32
	236 Move X1, [X8]
	237 Call Enumerator<NetworkId>.Dispose, X0
	238 Move X8, 0x223B000
	239 Move X8, [X8+2936]
	240 Add X0, X31, 32
	241 Move X1, [X8]
	242 Call Enumerator<NetworkId>.Dispose, X0
	243 Move TEMP, X21
	244 And TEMP, TEMP, 1
	245 Compare TEMP, 1
	246 JumpIfNotEqual {302}
	247 Move X0, X19
	248 Call Simulation.get_IsServer, X0
	249 Move TEMP, X0
	250 And TEMP, TEMP, 1
	251 Compare TEMP, 1
	252 JumpIfNotEqual {302}
	253 Move X0, X19
	254 Call Simulation.GetNextId, X0
	255 Move X8, [X25]
	256 Move X21, X0
	257 Move W9, [X8+224]
	258 Compare W9, 0
	259 JumpIfNotEqual {262}
	260 Move X0, X8
	261 Call 0x1C17DFC
	262 Move X0, X31
	263 Call NetworkObjectTypeId.get_PlayerData
	264 Move X8, 0x223A000
	265 Move X8, [X8+1864]
	266 Move X1, X0
	267 Add X0, X31, 0
	268 Move [X31+8], W31
	269 Move X2, [X8]
	270 Move [X31], X31
	271 Call Nullable`1<NetworkObjectTypeId>..ctor, X0, X1
	272 Move X8, 0x223B000
	273 Move X3, [X31]
	274 Move W4, [X31+8]
	275 Move X8, [X8+2976]
	276 And X1, X21, 0
	277 Move X0, X19
	278 Move W2, W31
	279 Move X5, [X8]
	280 Call Simulation.AllocateStruct, X0, X1, X2, X3
	281 Move X21, X0
	282 Compare X0, 0
	283 JumpIfEqual {303}
	284 Move [X21], W20
	285 Move X8, 0x223B000
	286 Move X8, [X8+3000]
	287 Move X19, [X19+240]
	288 Add X0, X31, 0
	289 Move W2, 1
	290 Move X3, [X8]
	291 Move X1, X22
	292 Move [X31], X31
	293 Call ValueTuple`2<PlayerRef, Boolean>..ctor, X0, X1, X2
	294 Compare X19, 0
	295 JumpIfEqual {318}
	296 Move X8, 0x223B000
	297 Move X1, [X31]
	298 Move X8, [X8+2968]
	299 Move X0, X19
	300 Move X2, [X8]
	301 Call Queue`1<ValueTuple`2<PlayerRef, Boolean>>.Enqueue, X0, X1
	302 Move X21, X31
	303 Move X0, X21
	304 Move X20, [X31+160]
	305 Move X19, [X31+168]
	306 Move X22, [X31+144]
	307 Move X21, [X31+152]
	308 Move X24, [X31+128]
	309 Move X23, [X31+136]
	310 Move X26, [X31+112]
	311 Move X25, [X31+120]
	312 Move X28, [X31+96]
	313 Move X27, [X31+104]
	314 Move X30, [X31+80]
	315 Add X31, X31, 176
	316 Return X0
	317 Call 0x1C17F20
	318 Call 0x1C17F20
	319 Call 0x1C17F20
	320 Move X23, X0
	321 NotImplemented "Instruction CMP not yet implemented."
	322 Move X0, X23
	323 Call 0x3EB2AD0
	324 Move X24, [X0]
	325 Call 0x3EB2AE0
	326 Move X8, 0x223B000
	327 Move X8, [X8+2936]
	328 Add X0, X31, 32
	329 Move X1, [X8]
	330 Call Enumerator<NetworkId>.Dispose, X0
	331 Compare X24, 0
	332 JumpIfEqual {243}
	333 Move X0, X24
	334 Call 0x1C17F18
	335 Move X24, X31
	336 Move X23, X0
	337 Move X8, 0x223B000
	338 Move X8, [X8+2936]
	339 Move X1, [X8]
	340 Add X0, X31, 32
	341 Call Enumerator<NetworkId>.Dispose, X0
	342 Compare X24, 0
	343 JumpIfNotEqual {346}
	344 Move X0, X23
	345 Call 0x1D2D690
	346 Move X0, X24
	347 Call 0x1C17F18
	348 Call 0x1991590

Method: System.Void InvokePlayerJoinedLeft()

Disassembly:
	0x01EC54A8 LDR X1, [X8]
	0x01EC54AC ADRP X28, 0x222E000
	0x01EC54B0 ADRP X29, 0x2239000
	0x01EC54B4 ADRP X25, 0x2239000
	0x01EC54B8 LDR X28, [X28 + 0x598]
	0x01EC54BC LDR X29, [X29 + 0xA90]
	0x01EC54C0 LDR X25, [X25 + 0xA48]
	0x01EC54C4 ADD X8, X31, 0x0
	0x01EC54C8 MOV X0, X9
	0x01EC54CC BL 0x2A67974
	0x01EC54D0 LDP V0, V1, [X31]
	0x01EC54D4 LDR X8, [X31 + 0x20]
	0x01EC54D8 STP V0, V1, [X31 + 0x30]
	0x01EC54DC STR X8, [X31 + 0x50]
	0x01EC54E0 LDR X1, [X26]
	0x01EC54E4 ADD X0, X31, 0x30
	0x01EC54E8 BL 0x2C03E60
	0x01EC54EC TBZ X0, 0x0, 0x1EC56D4
	0x01EC54F0 LDR X0, [X27]
	0x01EC54F4 LDP X24, X23, [X31 + 0x40]
	0x01EC54F8 LDR W8, [X0 + 0xE0]
	0x01EC54FC CBNZ W8, 0x1EC5504
	0x01EC5500 BL 0x1C16DFC
	0x01EC5504 SUB W8, W24, 0x1
	0x01EC5508 CMP W8, 0x3FF
	0x01EC550C B.CC 0x1EC54E0
	0x01EC5510 CBZ X23, 0x1EC5700
	0x01EC5514 LDR X0, [X28]
	0x01EC5518 LDR X22, [X23 + 0xB8]
	0x01EC551C LDR W8, [X0 + 0xE0]
	0x01EC5520 CBNZ W8, 0x1EC5528
	0x01EC5524 BL 0x1C16DFC
	0x01EC5528 MOV X0, X22
	0x01EC552C MOV X1, X31
	0x01EC5530 BL 0x3C38948
	0x01EC5534 TBZ X0, 0x0, 0x1EC5548
	0x01EC5538 LDR X8, [X23 + 0xB8]
	0x01EC553C CBZ X8, 0x1EC5710
	0x01EC5540 LDRB W8, [X8 + 0x5E]
	0x01EC5544 TBZ X8, 0x1, 0x1EC54E0
	0x01EC5548 CBZ X21, 0x1EC5708
	0x01EC554C AND X22, X24, 0x0
	0x01EC5550 MOVZ W2, 0x1
	0x01EC5554 MOV X0, X21
	0x01EC5558 MOV X1, X22
	0x01EC555C MOV W3, W31
	0x01EC5560 MOV X4, X31
	0x01EC5564 BL 0x1ED0A18
	0x01EC5568 MOV X24, X0
	0x01EC556C MOV X0, X23
	0x01EC5570 MOV X1, X31
	0x01EC5574 BL 0x1E93330
	0x01EC5578 STR X0, [X31 + 0x28]
	0x01EC557C MOV X0, X23
	0x01EC5580 MOV X1, X31
	0x01EC5584 BL 0x1E973B8
	0x01EC5588 MOV X1, X0
	0x01EC558C ADD X0, X31, 0x28
	0x01EC5590 MOV X2, X31
	0x01EC5594 BL 0x1E969D0
	0x01EC5598 MOV X0, X23
	0x01EC559C MOV X1, X31
	0x01EC55A0 BL 0x1E93330
	0x01EC55A4 STR X0, [X31 + 0x28]
	0x01EC55A8 MOV X0, X23
	0x01EC55AC MOV X1, X31
	0x01EC55B0 BL 0x1E97458
	0x01EC55B4 MOV X1, X0
	0x01EC55B8 ADD X0, X31, 0x28
	0x01EC55BC MOV X2, X31
	0x01EC55C0 BL 0x1E969D0
	0x01EC55C4 MOV X0, X23
	0x01EC55C8 MOV X1, X31
	0x01EC55CC BL 0x1E93330
	0x01EC55D0 STR X0, [X31 + 0x28]
	0x01EC55D4 LDR X1, [X23 + 0xB0]
	0x01EC55D8 ADD X0, X31, 0x28
	0x01EC55DC MOV X2, X31
	0x01EC55E0 BL 0x1E9698C
	0x01EC55E4 MOV X0, X21
	0x01EC55E8 MOV X1, X24
	0x01EC55EC MOV X2, X23
	0x01EC55F0 MOV X3, X31
	0x01EC55F4 BL 0x1ED47C0
	0x01EC55F8 LDR X23, [X20 + 0x40]
	0x01EC55FC CBZ X23, 0x1EC570C
	0x01EC5600 LDR X8, [X23]
	0x01EC5604 LDR X1, [X29]
	0x01EC5608 LDRH W9, [X8 + 0x12E]
	0x01EC560C CBZ X9, 0x1EC5630
	0x01EC5610 LDR X10, [X8 + 0xB0]
	0x01EC5614 ADD X10, X10, 0x8
	0x01EC5618 LDUR X11, [X10 - 0x8]
	0x01EC561C CMP X11, X1
	0x01EC5620 B.EQ 0x1EC5640
	0x01EC5624 SUBS X9, X9, 0x1
	0x01EC5628 ADD X10, X10, 0x10
	0x01EC562C B.NE 0x1EC5618
	0x01EC5630 MOVZ W2, 0x1F
	0x01EC5634 MOV X0, X23
	0x01EC5638 BL 0x1C5C788
	0x01EC563C B 0x1EC5650
	0x01EC5640 LDR W9, [X10]
	0x01EC5644 ADD W9, W9, 0x1F
	0x01EC5648 ADD X8, X8, W9, 0x4, SXTW
	0x01EC564C ADD X0, X8, 0x138
	0x01EC5650 LDP X8, X3, [X0]
	0x01EC5654 AND W2, W19, 0x1
	0x01EC5658 MOV X0, X23
	0x01EC565C MOV X1, X22
	0x01EC5660 BLR X8
	0x01EC5664 LDR X23, [X20 + 0x40]
	0x01EC5668 CBZ X23, 0x1EC5704
	0x01EC566C LDR X8, [X23]
	0x01EC5670 LDR X1, [X29]
	0x01EC5674 LDRH W9, [X8 + 0x12E]
	0x01EC5678 CBZ X9, 0x1EC569C
	0x01EC567C LDR X10, [X8 + 0xB0]
	0x01EC5680 ADD X10, X10, 0x8
	0x01EC5684 LDUR X11, [X10 - 0x8]
	0x01EC5688 CMP X11, X1
	0x01EC568C B.EQ 0x1EC56AC
	0x01EC5690 SUBS X9, X9, 0x1
	0x01EC5694 ADD X10, X10, 0x10
	0x01EC5698 B.NE 0x1EC5684
	0x01EC569C MOVZ W2, 0x1D
	0x01EC56A0 MOV X0, X23
	0x01EC56A4 BL 0x1C5C788
	0x01EC56A8 B 0x1EC56BC
	0x01EC56AC LDR W9, [X10]
	0x01EC56B0 ADD W9, W9, 0x1D
	0x01EC56B4 ADD X8, X8, W9, 0x4, SXTW
	0x01EC56B8 ADD X0, X8, 0x138
	0x01EC56BC LDP X8, X3, [X0]
	0x01EC56C0 AND W2, W19, 0x1
	0x01EC56C4 MOV X0, X23
	0x01EC56C8 MOV X1, X22
	0x01EC56CC BLR X8
	0x01EC56D0 B 0x1EC54E0
	0x01EC56D4 LDR X1, [X25]
	0x01EC56D8 ADD X0, X31, 0x30
	0x01EC56DC BL 0x2C03F78
	0x01EC56E0 LDP X20, X19, [X31 + 0xB0]
	0x01EC56E4 LDP X22, X21, [X31 + 0xA0]
	0x01EC56E8 LDP X24, X23, [X31 + 0x90]
	0x01EC56EC LDP X26, X25, [X31 + 0x80]
	0x01EC56F0 LDP X28, X27, [X31 + 0x70]
	0x01EC56F4 LDP X29, X30, [X31 + 0x60]
	0x01EC56F8 ADD X31, X31, 0xC0
	0x01EC56FC RET
	0x01EC5700 BL 0x1C16F20
	0x01EC5704 BL 0x1C16F20
	0x01EC5708 BL 0x1C16F20
	0x01EC570C BL 0x1C16F20
	0x01EC5710 BL 0x1C16F20
	0x01EC5714 BL 0x1C16F20
	0x01EC5718 B 0x1EC5768
	0x01EC571C B 0x1EC5768
	0x01EC5720 B 0x1EC5768
	0x01EC5724 B 0x1EC5768
	0x01EC5728 B 0x1EC5768
	0x01EC572C B 0x1EC5768
	0x01EC5730 B 0x1EC5768
	0x01EC5734 B 0x1EC5768
	0x01EC5738 B 0x1EC5768
	0x01EC573C B 0x1EC5768
	0x01EC5740 B 0x1EC5768
	0x01EC5744 B 0x1EC5768
	0x01EC5748 B 0x1EC5768
	0x01EC574C B 0x1EC5768
	0x01EC5750 B 0x1EC5768
	0x01EC5754 B 0x1EC5768
	0x01EC5758 B 0x1EC5768
	0x01EC575C B 0x1EC5768
	0x01EC5760 B 0x1EC5768
	0x01EC5764 B 0x1EC5768
	0x01EC5768 MOV X19, X0
	0x01EC576C CMP W1, 0x1
	0x01EC5770 B.NE 0x1EC579C
	0x01EC5774 MOV X0, X19
	0x01EC5778 BL 0x3EB1AD0
	0x01EC577C LDR X20, [X0]
	0x01EC5780 BL 0x3EB1AE0
	0x01EC5784 LDR X1, [X25]
	0x01EC5788 ADD X0, X31, 0x30
	0x01EC578C BL 0x2C03F78
	0x01EC5790 CBZ X20, 0x1EC56E0
	0x01EC5794 MOV X0, X20
	0x01EC5798 BL 0x1C16F18
	0x01EC579C MOV X20, X31
	0x01EC57A0 B 0x1EC57A8
	0x01EC57A4 MOV X19, X0
	0x01EC57A8 LDR X1, [X25]
	0x01EC57AC ADD X0, X31, 0x30
	0x01EC57B0 BL 0x2C03F78
	0x01EC57B4 CBNZ X20, 0x1EC57C0
	0x01EC57B8 MOV X0, X19
	0x01EC57BC BL 0x1D2C690
	0x01EC57C0 MOV X0, X20
	0x01EC57C4 BL 0x1C16F18
	0x01EC57C8 BL 0x1990590
	0x01EC57CC STR D8, [X31 - 0x30]!
	0x01EC57D0 STR X30, [X31 + 0x8]
	0x01EC57D4 STP X22, X21, [X31 + 0x10]
	0x01EC57D8 STP X20, X19, [X31 + 0x20]
	0x01EC57DC ADRP X20, 0x2514000
	0x01EC57E0 LDRB W8, [X20 + 0x47C]
	0x01EC57E4 MOV X19, X0
	0x01EC57E8 TBNZ X8, 0x0, 0x1EC580C
	0x01EC57EC ADRP X0, 0x2239000
	0x01EC57F0 LDR X0, [X0 + 0x7C0]
	0x01EC57F4 BL 0x1C16CF4
	0x01EC57F8 ADRP X0, 0x222E000
	0x01EC57FC LDR X0, [X0 + 0x5A8]
	0x01EC5800 BL 0x1C16CF4
	0x01EC5804 MOVZ W8, 0x1
	0x01EC5808 STRB W8, [X20 + 0x47C]
	0x01EC580C MOV X0, X19
	0x01EC5810 BL 0x1EC03FC
	0x01EC5814 TBZ X0, 0x0, 0x1EC58CC
	0x01EC5818 LDR X20, [X19 + 0x68]
	0x01EC581C CBZ X20, 0x1EC59CC
	0x01EC5820 ADRP X21, 0x2239000
	0x01EC5824 LDR X8, [X20]
	0x01EC5828 LDR X21, [X21 + 0x7C0]
	0x01EC582C LDRH W9, [X8 + 0x12E]
	0x01EC5830 LDR X1, [X21]
	0x01EC5834 CBZ X9, 0x1EC5858
	0x01EC5838 LDR X10, [X8 + 0xB0]
	0x01EC583C ADD X10, X10, 0x8
	0x01EC5840 LDUR X11, [X10 - 0x8]
	0x01EC5844 CMP X11, X1
	0x01EC5848 B.EQ 0x1EC5868
	0x01EC584C SUBS X9, X9, 0x1
	0x01EC5850 ADD X10, X10, 0x10
	0x01EC5854 B.NE 0x1EC5840
	0x01EC5858 MOV X0, X20
	0x01EC585C MOV W2, W31
	0x01EC5860 BL 0x1C5C788
	0x01EC5864 B 0x1EC5874
	0x01EC5868 LDRSW X9, [X10]
	0x01EC586C ADD X8, X8, X9, 0x4, LSL
	0x01EC5870 ADD X0, X8, 0x138
	0x01EC5874 LDP X8, X1, [X0]
	0x01EC5878 MOV X0, X20
	0x01EC587C BLR X8
	0x01EC5880 TBZ X0, 0x0, 0x1EC58CC
	0x01EC5884 LDR X20, [X19 + 0x68]
	0x01EC5888 CBZ X20, 0x1EC59CC
	0x01EC588C LDR X8, [X20]
	0x01EC5890 LDR X1, [X21]
	0x01EC5894 LDRH W9, [X8 + 0x12E]
	0x01EC5898 CBZ X9, 0x1EC58BC
	0x01EC589C LDR X10, [X8 + 0xB0]
	0x01EC58A0 ADD X10, X10, 0x8
	0x01EC58A4 LDUR X11, [X10 - 0x8]
	0x01EC58A8 CMP X11, X1
	0x01EC58AC B.EQ 0x1EC58E4
	0x01EC58B0 SUBS X9, X9, 0x1
	0x01EC58B4 ADD X10, X10, 0x10
	0x01EC58B8 B.NE 0x1EC58A4
	0x01EC58BC MOVZ W2, 0x9
	0x01EC58C0 MOV X0, X20
	0x01EC58C4 BL 0x1C5C788
	0x01EC58C8 B 0x1EC58F4
	0x01EC58CC LDP X20, X19, [X31 + 0x20]
	0x01EC58D0 LDP X22, X21, [X31 + 0x10]
	0x01EC58D4 LDR X30, [X31 + 0x8]
	0x01EC58D8 MOV W0, W31
	0x01EC58DC LDR V8, [X31], #0x30
	0x01EC58E0 RET
	0x01EC58E4 LDR W9, [X10]
	0x01EC58E8 ADD W9, W9, 0x9
	0x01EC58EC ADD X8, X8, W9, 0x4, SXTW
	0x01EC58F0 ADD X0, X8, 0x138
	0x01EC58F4 LDP X8, X1, [X0]
	0x01EC58F8 MOV X0, X20
	0x01EC58FC BLR X8
	0x01EC5900 MOV X0, X19
	0x01EC5904 MOV V8.16B, V1.16B
	0x01EC5908 BL 0x1EC0308
	0x01EC590C LDR X8, [X19]
	0x01EC5910 LDR W21, [X0]
	0x01EC5914 MOV X0, X19
	0x01EC5918 LDR X9, [X8 + 0x248]
	0x01EC591C LDR X1, [X8 + 0x250]
	0x01EC5920 BLR X9
	0x01EC5924 MOV X20, X0
	0x01EC5928 MOV X0, X19
	0x01EC592C BL 0x1EC0308
	0x01EC5930 ADRP X9, 0x222E000
	0x01EC5934 LDR X9, [X9 + 0x5A8]
	0x01EC5938 MOV X8, X0
	0x01EC593C LDR W22, [X8]
	0x01EC5940 LDR X0, [X9]
	0x01EC5944 LDR W9, [X0 + 0xE0]
	0x01EC5948 CBNZ W9, 0x1EC5950
	0x01EC594C BL 0x1C16DFC
	0x01EC5950 SCVTF D0, W21
	0x01EC5954 MOVZ X8, 0x7FF00000
	0x01EC5958 FMUL D0, D8, D0
	0x01EC595C FMOV D1, X8
	0x01EC5960 MOVZ W9, 0x80000000
	0x01EC5964 FCVTZS W8, D0
	0x01EC5968 FCMP D0, D1
	0x01EC596C CSEL W0, W9, W8, EQ
	0x01EC5970 ADD W1, W22, W20
	0x01EC5974 MOV X2, X31
	0x01EC5978 BL 0x337EE94
	0x01EC597C LDR W21, [X19 + 0x48]
	0x01EC5980 MOV W20, W0
	0x01EC5984 MOV X0, X19
	0x01EC5988 BL 0x1EC048C
	0x01EC598C SUB W8, W20, W21
	0x01EC5990 SDIV W0, W8, W0
	0x01EC5994 MOV W1, W31
	0x01EC5998 MOV X2, X31
	0x01EC599C BL 0x337EDF0
	0x01EC59A0 MOV W20, W0
	0x01EC59A4 MOV X0, X19
	0x01EC59A8 BL 0x1EC0308
	0x01EC59AC LDR W1, [X0]
	0x01EC59B0 MOV W0, W20
	0x01EC59B4 LDP X20, X19, [X31 + 0x20]
	0x01EC59B8 LDP X22, X21, [X31 + 0x10]
	0x01EC59BC LDR X30, [X31 + 0x8]
	0x01EC59C0 MOV X2, X31
	0x01EC59C4 LDR V8, [X31], #0x30
	0x01EC59C8 B 0x337EE94
	0x01EC59CC BL 0x1C16F20
	0x01EC59D0 SUB X31, X31, 0x80
	0x01EC59D4 STP D9, D8, [X31 + 0x30]
	0x01EC59D8 STR X30, [X31 + 0x40]
	0x01EC59DC STP X24, X23, [X31 + 0x50]
	0x01EC59E0 STP X22, X21, [X31 + 0x60]
	0x01EC59E4 STP X20, X19, [X31 + 0x70]
	0x01EC59E8 MRS X22, 0xC000
	0x01EC59EC LDR X8, [X22 + 0x28]
	0x01EC59F0 ADRP X20, 0x2514000

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X20, 0x2515000
	015 Move W8, [X20+1139]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {50}
	021 Move X0, 0x223A000
	022 Move X0, [X0+2064]
	023 Call 0x1C17CF4
	024 Move X0, 0x223B000
	025 Move X0, [X0+2712]
	026 Call 0x1C17CF4
	027 Move X0, 0x223B000
	028 Move X0, [X0+2720]
	029 Call 0x1C17CF4
	030 Move X0, 0x223B000
	031 Move X0, [X0+2728]
	032 Call 0x1C17CF4
	033 Move X0, 0x223A000
	034 Move X0, [X0+2704]
	035 Call 0x1C17CF4
	036 Move X0, 0x2232000
	037 Move X0, [X0+3648]
	038 Call 0x1C17CF4
	039 Move X0, 0x223B000
	040 Move X0, [X0+3016]
	041 Call 0x1C17CF4
	042 Move X0, 0x223B000
	043 Move X0, [X0+3024]
	044 Call 0x1C17CF4
	045 Move X0, 0x223B000
	046 Move X0, [X0+2736]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X20+1139], W8
	050 Move [X31+32], X31
	051 Move [X31+40], X31
	052 Move [X31+48], X31
	053 Move X20, [X19+64]
	054 Compare X20, 0
	055 JumpIfEqual {332}
	056 Move X27, 0x223A000
	057 Move X8, [X20]
	058 Move X27, [X27+2704]
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Move X1, [X27]
	061 Compare X9, 0
	062 JumpIfEqual {69}
	063 Move X10, [X8+176]
	064 Add X10, X10, 8
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract X9, X9, 1
	068 Add X10, X10, 16
	069 Move W2, 28
	070 Move X0, X20
	071 Call 0x1C5D788
	072 Move W9, [X10]
	073 Add W9, W9, 28
	074 Add X8, X8, W9
	075 Add X0, X8, 312
	076 Move X8, [X0]
	077 Move X1, [X0+8]
	078 Move X0, X20
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {318}
	084 Move X0, [X19+240]
	085 Compare X0, 0
	086 JumpIfEqual {332}
	087 Move X28, 0x223B000
	088 Move X21, 0x223B000
	089 Move X20, 0x2234000
	090 Move X28, [X28+3016]
	091 Move X21, [X21+2720]
	092 Move X20, [X20+32]
	093 Move X22, 0x2514000
	094 Move W29, 1
	095 Move W8, [X0+32]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X1, [X28]
	098 Call Queue`1<ValueTuple`2<PlayerRef, Boolean>>.Dequeue, X0
	099 Move X23, X0
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {121}
	104 Move X24, [X19+64]
	105 Compare X24, 0
	106 JumpIfEqual {264}
	107 Move X8, [X24]
	108 Move X1, [X27]
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 Compare X9, 0
	111 JumpIfEqual {118}
	112 Move X10, [X8+176]
	113 Add X10, X10, 8
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Subtract X9, X9, 1
	117 Add X10, X10, 16
	118 Move W2, 21
	119 Move X0, X24
	120 Call 0x1C5D788
	121 Move X25, [X19+64]
	122 Compare X25, 0
	123 JumpIfEqual {265}
	124 Move X8, [X25]
	125 Move X1, [X27]
	126 NotImplemented "Instruction LDRH not yet implemented."
	127 Compare X9, 0
	128 JumpIfEqual {135}
	129 Move X10, [X8+176]
	130 Add X10, X10, 8
	131 NotImplemented "Instruction LDUR not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Subtract X9, X9, 1
	134 Add X10, X10, 16
	135 Move W2, 20
	136 Move X0, X25
	137 Call 0x1C5D788
	138 Move W9, [X10]
	139 Add W9, W9, 21
	140 Add X8, X8, W9
	141 Add X0, X8, 312
	142 Move X8, [X0]
	143 Move X2, [X0+8]
	144 And X1, X23, 0
	145 Move X0, X24
	146 NotImplemented "Instruction BLR not yet implemented."
	147 Move W9, [X10]
	148 Add W9, W9, 20
	149 Add X8, X8, W9
	150 Add X0, X8, 312
	151 Move X8, [X0]
	152 Move X2, [X0+8]
	153 And X24, X23, 0
	154 Move X0, X25
	155 Move X1, X24
	156 NotImplemented "Instruction BLR not yet implemented."
	157 Move X0, X19
	158 Call Simulation.get_IsServer, X0
	159 Move TEMP, X0
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfNotEqual {313}
	163 Move X0, [X19+88]
	164 Compare X0, 0
	165 JumpIfEqual {266}
	166 Move X1, X31
	167 Call SimulationConfig.get_SchedulingWithoutAOI, X0
	168 Move TEMP, X0
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfNotEqual {313}
	172 Move X8, [X19]
	173 Move X1, [X8+624]
	174 Move X9, [X8+616]
	175 Move X0, X19
	176 NotImplemented "Instruction BLR not yet implemented."
	177 Move X8, 0x2232000
	178 Move X8, [X8+3648]
	179 Move X25, X0
	180 Move X0, [X8]
	181 Move W8, [X0+224]
	182 Compare W8, 0
	183 JumpIfNotEqual {185}
	184 Call 0x1C17DFC
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X0, [X19+336]
	187 Compare X0, 0
	188 JumpIfEqual {267}
	189 Move X8, 0x223A000
	190 Move X8, [X8+2064]
	191 Move X1, [X8]
	192 Call Dictionary`2<NetworkId, Object>.get_Values, X0
	193 Compare X0, 0
	194 JumpIfEqual {268}
	195 Move X8, 0x223B000
	196 Move X8, [X8+2736]
	197 Move X1, [X8]
	198 Add X8, X31, 8
	199 Call ValueCollection<NetworkId, Object>.GetEnumerator, X0
	200 NotImplemented "Instruction LDUR not yet implemented."
	201 Move X8, [X31+24]
	202 Move [X31+2], V0
	203 Move [X31+48], X8
	204 Move X1, [X21]
	205 Add X0, X31, 32
	206 Call Enumerator<NetworkId, Object>.MoveNext, X0
	207 Move TEMP, X0
	208 And TEMP, TEMP, 1
	209 Compare TEMP, 1
	210 JumpIfNotEqual {249}
	211 Move X25, [X31+48]
	212 Compare X25, 0
	213 JumpIfEqual {261}
	214 Move X0, X25
	215 Move X1, X31
	216 Call NetworkObjectMeta.get_IsStruct, X0
	217 Move TEMP, X0
	218 And TEMP, TEMP, 1
	219 Compare TEMP, 1
	220 JumpIfEqual {204}
	221 Move W8, [X22+2931]
	222 Compare W8, 0
	223 JumpIfNotEqual {227}
	224 Move X0, X20
	225 Call 0x1C17CF4
	226 Move [X22+2931], W29
	227 Move [X31+56], X31
	228 Move X0, [X19+184]
	229 Compare X0, 0
	230 JumpIfEqual {262}
	231 Move X3, [X20]
	232 Add X2, X31, 56
	233 Move X1, X24
	234 Call Dictionary`2<PlayerRef, Object>.TryGetValue, X0, X1, X2
	235 Move X8, [X31+56]
	236 And W31, W0, 1
	237 NotImplemented "Instruction CSEL not yet implemented."
	238 Move X0, X25
	239 Move X1, X31
	240 Call NetworkObjectMeta.get_Id, X0
	241 Compare X26, 0
	242 JumpIfEqual {263}
	243 And X1, X0, 0
	244 Move W2, 1
	245 Move X0, X26
	246 Move W3, W31
	247 Move X4, X31
	248 Call SimulationConnection.GetObjectData, X0, X1, X2, X3
	249 Move X25, X31
	250 Move W24, 6
	251 Move X8, 0x223B000
	252 Move X8, [X8+2712]
	253 Move X1, [X8]
	254 Add X0, X31, 32
	255 Call Enumerator<NetworkId, Object>.Dispose, X0
	256 Compare X25, 0
	257 JumpIfNotEqual {269}
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Compare W24, 0
	260 JumpIfEqual {104}
	261 Call 0x1C17F20
	262 Call 0x1C17F20
	263 Call 0x1C17F20
	264 Call 0x1C17F20
	265 Call 0x1C17F20
	266 Call 0x1C17F20
	267 Call 0x1C17F20
	268 Call 0x1C17F20
	269 Move X0, X25
	270 Call 0x1C17F18
	271 Move X24, X1
	272 Move X24, X1
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Call 0x3EB2AD0
	275 Move X25, [X0]
	276 Call 0x3EB2AE0
	277 Move W24, W31
	278 Move X23, X0
	279 Move X25, X31
	280 Move X8, 0x223B000
	281 Move X8, [X8+2712]
	282 Move X1, [X8]
	283 Add X0, X31, 32
	284 Call Enumerator<NetworkId, Object>.Dispose, X0
	285 Move X0, X23
	286 Compare X25, 0
	287 JumpIfNotEqual {333}
	288 NotImplemented "Instruction CMP not yet implemented."
	289 Call 0x3EB2AD0
	290 Move X23, X0
	291 Move X0, 0x222F000
	292 Move X0, [X0+2000]
	293 Call 0x1C17D08
	294 Move X8, [X23]
	295 Move X1, [X8]
	296 Call 0x1C18270
	297 Move TEMP, X0
	298 And TEMP, TEMP, 1
	299 Compare TEMP, 1
	300 JumpIfNotEqual {336}
	301 Move X23, [X23]
	302 Call 0x3EB2AE0
	303 Move X0, 0x2237000
	304 Move X0, [X0+2224]
	305 Call 0x1C17D08
	306 Move W8, [X0+224]
	307 Compare W8, 0
	308 JumpIfNotEqual {310}
	309 Call 0x1C17DFC
	310 Move X0, X23
	311 Move X1, X31
	312 Call Log.Exception, X0
	313 Move X0, [X19+240]
	314 Compare X0, 0
	315 JumpIfNotEqual {95}
	316 Move X24, X1
	317 Move X23, X0
	318 Move X20, [X31+144]
	319 Move X19, [X31+152]
	320 Move X22, [X31+128]
	321 Move X21, [X31+136]
	322 Move X24, [X31+112]
	323 Move X23, [X31+120]
	324 Move X26, [X31+96]
	325 Move X25, [X31+104]
	326 Move X28, [X31+80]
	327 Move X27, [X31+88]
	328 Move X29, [X31+64]
	329 Move X30, [X31+72]
	330 Add X31, X31, 160
	331 Return 
	332 Call 0x1C17F20
	333 Move X0, X25
	334 Call 0x1C17F18
	335 Move X19, X0
	336 Move W0, 8
	337 Call 0x3EB2AF0
	338 Move X8, [X23]
	339 Move [X0], X8
	340 Move X1, 0x1FF0000
	341 Add X1, X1, 3672
	342 Move X2, X31
	343 Call 0x3EB2B00
	344 Move X19, X0
	345 Call 0x3EB2AE0
	346 Move X0, X19
	347 Call 0x1D2D690
	348 Call 0x1991590
	349 Call 0x1991590

Method: System.Nullable`1<System.Int32> GetPlayerActorId(Fusion.PlayerRef player)

Disassembly:
	0x01EC59F4 MOV V8.16B, V0.16B
	0x01EC59F8 MOV X19, X0
	0x01EC59FC STR X8, [X31 + 0x28]
	0x01EC5A00 LDRB W8, [X20 + 0x47D]
	0x01EC5A04 TBNZ X8, 0x0, 0x1EC5A4C
	0x01EC5A08 ADRP X0, 0x2239000
	0x01EC5A0C LDR X0, [X0 + 0x7C0]
	0x01EC5A10 BL 0x1C16CF4
	0x01EC5A14 ADRP X0, 0x2235000
	0x01EC5A18 LDR X0, [X0 + 0xC68]
	0x01EC5A1C BL 0x1C16CF4
	0x01EC5A20 ADRP X0, 0x223A000
	0x01EC5A24 LDR X0, [X0 + 0xC08]
	0x01EC5A28 BL 0x1C16CF4
	0x01EC5A2C ADRP X0, 0x223A000
	0x01EC5A30 LDR X0, [X0 + 0xC10]
	0x01EC5A34 BL 0x1C16CF4
	0x01EC5A38 ADRP X0, 0x223A000
	0x01EC5A3C LDR X0, [X0 + 0xC18]
	0x01EC5A40 BL 0x1C16CF4
	0x01EC5A44 MOVZ W8, 0x1
	0x01EC5A48 STRB W8, [X20 + 0x47D]
	0x01EC5A4C FCMP D8, 0x0
	0x01EC5A50 MOV W20, W31
	0x01EC5A54 B.EQ 0x1EC5F64
	0x01EC5A58 LDRB W8, [X19 + 0x30]
	0x01EC5A5C CBNZ W8, 0x1EC5F64
	0x01EC5A60 ADRP X8, 0x223A000
	0x01EC5A64 LDR X8, [X8 + 0xC08]
	0x01EC5A68 MOV X1, X31
	0x01EC5A6C LDR X0, [X8]
	0x01EC5A70 BL 0x1E32108

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2515000
	007 Move W8, [X21+1140]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2230000
	015 Move X0, [X0+1136]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1140], W8
	019 Move X21, 0x2230000
	020 Move X21, [X21+1136]
	021 And X1, X20, 0
	022 Move W2, 1
	023 Move X0, X19
	024 Call Simulation.GetPlayerSimulationData, X0, X1, X2
	025 Compare X0, 0
	026 JumpIfEqual {28}
	027 Move W1, [X0+8]
	028 Move W1, W31
	029 Move X2, [X21]
	030 Add X0, X31, 8
	031 Move [X31+8], X31
	032 Call Nullable`1<Int32>..ctor, X0, X1
	033 Move X0, [X31+8]
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X30, [X31+16]
	037 Move X21, [X31+24]
	038 Add X31, X31, 48
	039 Return X0

Method: Fusion.NetworkId GetPlayerObjectId(Fusion.PlayerRef player)

Disassembly:
	0x01EC5A74 LDR X8, [X19]
	0x01EC5A78 MOV X0, X19
	0x01EC5A7C LDR X9, [X8 + 0x348]
	0x01EC5A80 LDR X1, [X8 + 0x350]
	0x01EC5A84 BLR X9
	0x01EC5A88 MOV X0, X19
	0x01EC5A8C BL 0x1EC60F0
	0x01EC5A90 MOV X0, X19
	0x01EC5A94 BL 0x1EC03FC
	0x01EC5A98 TBZ X0, 0x0, 0x1EC5C28
	0x01EC5A9C LDR X20, [X19 + 0x68]
	0x01EC5AA0 CBZ X20, 0x1EC5F94
	0x01EC5AA4 ADRP X21, 0x2239000
	0x01EC5AA8 LDR X8, [X20]
	0x01EC5AAC LDR X21, [X21 + 0x7C0]
	0x01EC5AB0 LDRH W9, [X8 + 0x12E]
	0x01EC5AB4 LDR X1, [X21]
	0x01EC5AB8 CBZ X9, 0x1EC5ADC
	0x01EC5ABC LDR X10, [X8 + 0xB0]
	0x01EC5AC0 ADD X10, X10, 0x8
	0x01EC5AC4 LDUR X11, [X10 - 0x8]
	0x01EC5AC8 CMP X11, X1
	0x01EC5ACC B.EQ 0x1EC5AEC
	0x01EC5AD0 SUBS X9, X9, 0x1
	0x01EC5AD4 ADD X10, X10, 0x10
	0x01EC5AD8 B.NE 0x1EC5AC4
	0x01EC5ADC MOV X0, X20
	0x01EC5AE0 MOV W2, W31
	0x01EC5AE4 BL 0x1C5C788
	0x01EC5AE8 B 0x1EC5AF8
	0x01EC5AEC LDRSW X9, [X10]
	0x01EC5AF0 ADD X8, X8, X9, 0x4, LSL
	0x01EC5AF4 ADD X0, X8, 0x138
	0x01EC5AF8 LDP X8, X1, [X0]
	0x01EC5AFC MOV X0, X20
	0x01EC5B00 BLR X8
	0x01EC5B04 TBZ X0, 0x0, 0x1EC5C28
	0x01EC5B08 LDR X20, [X19 + 0x68]
	0x01EC5B0C CBZ X20, 0x1EC5F94

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2515000
	007 Move W8, [X21+1141]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x223B000
	015 Move X0, [X0+2912]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1141], W8
	019 And X20, X20, 0
	020 Move X0, X19
	021 Move X1, X20
	022 Move W2, W31
	023 Move [X31+8], W31
	024 Call Simulation.GetPlayerSimulationData, X0, X1, X2
	025 Compare X0, 0
	026 JumpIfEqual {28}
	027 Move W8, [X0+4]
	028 Move X0, [X19+384]
	029 Compare X0, 0
	030 JumpIfEqual {47}
	031 Move X8, 0x223B000
	032 Move X8, [X8+2912]
	033 Add X2, X31, 8
	034 Move X1, X20
	035 Move X3, [X8]
	036 Call Dictionary`2<PlayerRef, NetworkId>.TryGetValue, X0, X1, X2
	037 Move W8, [X31+8]
	038 And W31, W0, 1
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+16]
	043 Move X21, [X31+24]
	044 Move W0, W8
	045 Add X31, X31, 48
	046 Return X0
	047 Call 0x1C17F20

Method: System.Void SetPlayerObjectId(Fusion.PlayerRef player, Fusion.NetworkId id)

Disassembly:
	0x01EC5B10 LDR X8, [X20]
	0x01EC5B14 LDR X1, [X21]
	0x01EC5B18 LDRH W9, [X8 + 0x12E]
	0x01EC5B1C CBZ X9, 0x1EC5B40
	0x01EC5B20 LDR X10, [X8 + 0xB0]
	0x01EC5B24 ADD X10, X10, 0x8
	0x01EC5B28 LDUR X11, [X10 - 0x8]
	0x01EC5B2C CMP X11, X1
	0x01EC5B30 B.EQ 0x1EC5B50
	0x01EC5B34 SUBS X9, X9, 0x1
	0x01EC5B38 ADD X10, X10, 0x10
	0x01EC5B3C B.NE 0x1EC5B28
	0x01EC5B40 MOVZ W2, 0x5
	0x01EC5B44 MOV X0, X20
	0x01EC5B48 BL 0x1C5C788
	0x01EC5B4C B 0x1EC5B60
	0x01EC5B50 LDR W9, [X10]
	0x01EC5B54 ADD W9, W9, 0x5
	0x01EC5B58 ADD X8, X8, W9, 0x4, SXTW
	0x01EC5B5C ADD X0, X8, 0x138
	0x01EC5B60 LDP X8, X1, [X0]
	0x01EC5B64 MOV X0, X20
	0x01EC5B68 MOV V0.16B, V8.16B
	0x01EC5B6C BLR X8
	0x01EC5B70 LDR X0, [X19 + 0x38]
	0x01EC5B74 CBZ X0, 0x1EC5F94
	0x01EC5B78 LDRB W8, [X0 + 0x88]
	0x01EC5B7C CBNZ W8, 0x1EC5B88
	0x01EC5B80 MOV X1, X31
	0x01EC5B84 BL 0x1EA0488
	0x01EC5B88 MOV X0, X19
	0x01EC5B8C BL 0x1EBDF30
	0x01EC5B90 TBZ X0, 0x0, 0x1EC5C28
	0x01EC5B94 ADRP X20, 0x2514000
	0x01EC5B98 LDRB W8, [X20 + 0x4BA]
	0x01EC5B9C CBNZ W8, 0x1EC5BB4
	0x01EC5BA0 ADRP X0, 0x2239000
	0x01EC5BA4 LDR X0, [X0 + 0x7C0]
	0x01EC5BA8 BL 0x1C16CF4
	0x01EC5BAC MOVZ W8, 0x1
	0x01EC5BB0 STRB W8, [X20 + 0x4BA]
	0x01EC5BB4 MOV X0, X19
	0x01EC5BB8 BL 0x1EC0864
	0x01EC5BBC TBNZ X0, 0x0, 0x1EC5C28
	0x01EC5BC0 LDR X20, [X19 + 0x68]
	0x01EC5BC4 CBZ X20, 0x1EC5F94
	0x01EC5BC8 LDR X8, [X20]
	0x01EC5BCC LDR X1, [X21]
	0x01EC5BD0 LDRH W9, [X8 + 0x12E]
	0x01EC5BD4 CBZ X9, 0x1EC5BF8
	0x01EC5BD8 LDR X10, [X8 + 0xB0]
	0x01EC5BDC ADD X10, X10, 0x8
	0x01EC5BE0 LDUR X11, [X10 - 0x8]
	0x01EC5BE4 CMP X11, X1
	0x01EC5BE8 B.EQ 0x1EC5C08
	0x01EC5BEC SUBS X9, X9, 0x1
	0x01EC5BF0 ADD X10, X10, 0x10
	0x01EC5BF4 B.NE 0x1EC5BE0
	0x01EC5BF8 MOVZ W2, 0x9
	0x01EC5BFC MOV X0, X20
	0x01EC5C00 BL 0x1C5C788
	0x01EC5C04 B 0x1EC5C18
	0x01EC5C08 LDR W9, [X10]
	0x01EC5C0C ADD W9, W9, 0x9
	0x01EC5C10 ADD X8, X8, W9, 0x4, SXTW
	0x01EC5C14 ADD X0, X8, 0x138
	0x01EC5C18 LDP X8, X1, [X0]
	0x01EC5C1C MOV X0, X20
	0x01EC5C20 BLR X8
	0x01EC5C24 STR D1, [X19 + 0xC8]
	0x01EC5C28 MOV X0, X19
	0x01EC5C2C BL 0x1EC57CC
	0x01EC5C30 MOV W20, W0
	0x01EC5C34 CMP W0, 0x1
	0x01EC5C38 B.LT 0x1EC5D20
	0x01EC5C3C LDRB W8, [X19 + 0x31]
	0x01EC5C40 CBNZ W8, 0x1EC5D20
	0x01EC5C44 MOV X0, X19
	0x01EC5C48 MOV W1, W20
	0x01EC5C4C BL 0x1EC4D54
	0x01EC5C50 ADRP X8, 0x223A000
	0x01EC5C54 LDR X8, [X8 + 0xC10]
	0x01EC5C58 MOV X1, X31
	0x01EC5C5C LDR X0, [X8]
	0x01EC5C60 BL 0x1E32108
	0x01EC5C64 LDR X8, [X19]
	0x01EC5C68 MOV X0, X19
	0x01EC5C6C LDR X9, [X8 + 0x328]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2515000
	007 Move W8, [X22+1142]
	008 Move X21, X2
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x2232000
	016 Move X0, [X0+3648]
	017 Call 0x1C17CF4
	018 Move X0, 0x223B000
	019 Move X0, [X0+3032]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1142], W8
	023 Move [X31+8], X31
	024 Move X8, [X19+88]
	025 Compare X8, 0
	026 JumpIfEqual {110}
	027 Move W22, [X8+56]
	028 Move X0, X19
	029 Call Simulation.get_IsClient, X0
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {89}
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {89}
	039 And X21, X21, 0
	040 Add X2, X31, 8
	041 Move X0, X19
	042 Move X1, X21
	043 Call Simulation.TryGetObject, X0, X1, X2
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {104}
	048 Move X8, [X31+8]
	049 Compare X8, 0
	050 JumpIfEqual {110}
	051 Move X9, [X19]
	052 Move W22, [X8+32]
	053 Move X0, X19
	054 Move X8, [X9+616]
	055 Move X1, [X9+624]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 And X2, X0, 0
	058 Move X0, X19
	059 Move X1, X22
	060 Move X3, X31
	061 Call 0x1DC08E4
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {104}
	066 Move X8, [X19]
	067 Move X0, X19
	068 Move X9, [X8+616]
	069 Move X1, [X8+624]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move X8, 0x2232000
	072 Move X8, [X8+3648]
	073 Move X22, X0
	074 Move X8, [X8]
	075 Move W9, [X8+224]
	076 Compare W9, 0
	077 JumpIfNotEqual {80}
	078 Move X0, X8
	079 Call 0x1C17DFC
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X8, 0x223B000
	082 Move X8, [X8+3032]
	083 Move W1, 6
	084 Move X0, X19
	085 Move X2, X21
	086 Move X4, [X8]
	087 Move X3, X31
	088 Call Simulation.SendInternalSimulationMessage, X0, X1, X2, X3
	089 And X20, X20, 0
	090 Move X0, X19
	091 Move X1, X20
	092 Call Simulation.PlayerValid, X0, X1
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {104}
	097 Move W2, 1
	098 Move X0, X19
	099 Move X1, X20
	100 Call Simulation.GetPlayerSimulationData, X0, X1, X2
	101 Compare X0, 0
	102 JumpIfEqual {110}
	103 Move [X0+4], W21
	104 Move X20, [X31+32]
	105 Move X19, [X31+40]
	106 Move X22, [X31+16]
	107 Move X21, [X31+24]
	108 Move X30, [X31+48]
	109 Return 
	110 Call 0x1C17F20

Method: System.Boolean HasAnyActiveConnections()

Disassembly:
	0x01EC5D00 LDR X9, [X8 + 0x358]
	0x01EC5D04 LDR X1, [X8 + 0x360]
	0x01EC5D08 BLR X9
	0x01EC5D0C MOV X0, X31
	0x01EC5D10 BL 0x1E32194
	0x01EC5D14 MOV X0, X19
	0x01EC5D18 BL 0x1EC61D0
	0x01EC5D1C B 0x1EC5D34
	0x01EC5D20 LDR X8, [X19]
	0x01EC5D24 MOV X0, X19
	0x01EC5D28 LDR X9, [X8 + 0x318]
	0x01EC5D2C LDR X1, [X8 + 0x320]
	0x01EC5D30 BLR X9
	0x01EC5D34 MOV X0, X19
	0x01EC5D38 BL 0x1EC63FC
	0x01EC5D3C MOV X0, X31
	0x01EC5D40 BL 0x1E32194
	0x01EC5D44 LDR X8, [X19]
	0x01EC5D48 MOV X0, X19
	0x01EC5D4C LDR X9, [X8 + 0x2D8]
	0x01EC5D50 LDR X1, [X8 + 0x2E0]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X0, [X0+304]
	005 Move X1, X31
	006 Call NetPeerGroup.ConnectionIterator, X0
	007 Move [X31], X0
	008 Move [X31+8], X1
	009 Add X0, X31, 0
	010 Move X1, X31
	011 Call Iterator.Next, X0
	012 Move W19, W0
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {22}
	017 Add X0, X31, 0
	018 Move X1, X31
	019 Call Iterator.get_Current, X0
	020 Move W8, [X0+64]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 And W0, W19, 1
	023 Move X30, [X31+16]
	024 Move X19, [X31+24]
	025 Add X31, X31, 32
	026 Return X0

Method: System.Void InvokeOnBeforeSimulation(System.Int32 forwardTickCount)

Disassembly:
	0x01EC5D54 BLR X9
	0x01EC5D58 MOV X0, X19
	0x01EC5D5C BL 0x1EC03FC
	0x01EC5D60 TBZ X0, 0x0, 0x1EC5F64
	0x01EC5D64 LDR X21, [X19 + 0x68]
	0x01EC5D68 CBZ X21, 0x1EC5F94
	0x01EC5D6C ADRP X23, 0x2239000
	0x01EC5D70 LDR X8, [X21]
	0x01EC5D74 LDR X23, [X23 + 0x7C0]
	0x01EC5D78 LDRH W9, [X8 + 0x12E]
	0x01EC5D7C LDR X1, [X23]
	0x01EC5D80 CBZ X9, 0x1EC5DA4
	0x01EC5D84 LDR X10, [X8 + 0xB0]
	0x01EC5D88 ADD X10, X10, 0x8
	0x01EC5D8C LDUR X11, [X10 - 0x8]
	0x01EC5D90 CMP X11, X1
	0x01EC5D94 B.EQ 0x1EC5DB4
	0x01EC5D98 SUBS X9, X9, 0x1
	0x01EC5D9C ADD X10, X10, 0x10
	0x01EC5DA0 B.NE 0x1EC5D8C
	0x01EC5DA4 MOV X0, X21
	0x01EC5DA8 MOV W2, W31
	0x01EC5DAC BL 0x1C5C788
	0x01EC5DB0 B 0x1EC5DC0
	0x01EC5DB4 LDRSW X9, [X10]
	0x01EC5DB8 ADD X8, X8, X9, 0x4, LSL
	0x01EC5DBC ADD X0, X8, 0x138
	0x01EC5DC0 LDP X8, X1, [X0]
	0x01EC5DC4 MOV X0, X21
	0x01EC5DC8 BLR X8
	0x01EC5DCC TBZ X0, 0x0, 0x1EC5F64
	0x01EC5DD0 LDR W8, [X19 + 0x4C]
	0x01EC5DD4 CMP W8, 0x4
	0x01EC5DD8 B.EQ 0x1EC5DE4
	0x01EC5DDC CMP W8, 0x2
	0x01EC5DE0 B.NE 0x1EC5F64
	0x01EC5DE4 LDR V0, [X19 + 0x7C]
	0x01EC5DE8 LDR X21, [X19 + 0x68]
	0x01EC5DEC STR S0, [X19 + 0x8C]
	0x01EC5DF0 CBZ X21, 0x1EC5F94
	0x01EC5DF4 LDR X8, [X21]
	0x01EC5DF8 LDR X1, [X23]
	0x01EC5DFC LDRH W9, [X8 + 0x12E]
	0x01EC5E00 CBZ X9, 0x1EC5E24
	0x01EC5E04 LDR X10, [X8 + 0xB0]
	0x01EC5E08 ADD X10, X10, 0x8
	0x01EC5E0C LDUR X11, [X10 - 0x8]
	0x01EC5E10 CMP X11, X1
	0x01EC5E14 B.EQ 0x1EC5E34
	0x01EC5E18 SUBS X9, X9, 0x1
	0x01EC5E1C ADD X10, X10, 0x10
	0x01EC5E20 B.NE 0x1EC5E0C
	0x01EC5E24 MOVZ W2, 0x9
	0x01EC5E28 MOV X0, X21
	0x01EC5E2C BL 0x1C5C788
	0x01EC5E30 B 0x1EC5E44
	0x01EC5E34 LDR W9, [X10]
	0x01EC5E38 ADD W9, W9, 0x9
	0x01EC5E3C ADD X8, X8, W9, 0x4, SXTW
	0x01EC5E40 ADD X0, X8, 0x138
	0x01EC5E44 LDP X8, X1, [X0]
	0x01EC5E48 MOV X0, X21
	0x01EC5E4C BLR X8
	0x01EC5E50 LDR W21, [X19 + 0x48]
	0x01EC5E54 MOVI V0.2D, 0x0
	0x01EC5E58 MOV X0, X19
	0x01EC5E5C MOV V8.16B, V1.16B
	0x01EC5E60 STR W31, [X31 + 0x20]
	0x01EC5E64 STP V0, V0, [X31]
	0x01EC5E68 BL 0x1EC0308
	0x01EC5E6C LDP V0, V1, [X0]
	0x01EC5E70 LDR W8, [X0 + 0x20]
	0x01EC5E74 ADD X0, X31, 0x0
	0x01EC5E78 MOV X1, X31
	0x01EC5E7C STP V0, V1, [X31]
	0x01EC5E80 STR W8, [X31 + 0x20]
	0x01EC5E84 BL 0x1E918F8
	0x01EC5E88 MOV X0, X19
	0x01EC5E8C MOV V9.16B, V0.16B
	0x01EC5E90 BL 0x1EC0308
	0x01EC5E94 ADRP X9, 0x2235000
	0x01EC5E98 LDR X9, [X9 + 0xC68]
	0x01EC5E9C MOV X8, X0
	0x01EC5EA0 LDR W24, [X8]
	0x01EC5EA4 LDR X0, [X9]
	0x01EC5EA8 LDR W9, [X0 + 0xE0]
	0x01EC5EAC CBNZ W9, 0x1EC5EB4
	0x01EC5EB0 BL 0x1C16DFC
	0x01EC5EB4 SCVTF D0, W21
	0x01EC5EB8 FMUL D0, D9, D0
	0x01EC5EBC FSUB D0, D8, D0
	0x01EC5EC0 SCVTF D1, W24
	0x01EC5EC4 FMUL D0, D0, D1
	0x01EC5EC8 MOV X0, X31
	0x01EC5ECC BL 0x1E351AC
	0x00000000 INVALID
	0x01EC5ED4 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2515000
	007 Move X22, 0x223B000
	008 Move W8, [X21+1143]
	009 Move X22, [X22+3040]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x223A000
	017 Move X0, [X0+2704]
	018 Call 0x1C17CF4
	019 Move X0, 0x223B000
	020 Move X0, [X0+3040]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1143], W8
	024 Move X0, [X22]
	025 Move X1, X31
	026 Call EngineProfiler.Begin, X0
	027 Move X21, [X19+64]
	028 Compare X21, 0
	029 JumpIfEqual {63}
	030 Move X10, 0x223A000
	031 Move X8, [X21]
	032 Move X10, [X10+2704]
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move X1, [X10]
	035 Compare X9, 0
	036 JumpIfEqual {43}
	037 Move X10, [X8+176]
	038 Add X10, X10, 8
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract X9, X9, 1
	042 Add X10, X10, 16
	043 Move W2, 13
	044 Move X0, X21
	045 Call 0x1C5D788
	046 Move W9, [X10]
	047 Add W9, W9, 13
	048 Add X8, X8, W9
	049 Add X0, X8, 312
	050 Move X8, [X0]
	051 Move X2, [X0+8]
	052 Move X0, X21
	053 Move W1, W20
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X0, X31
	060 Move X30, [X31+48]
	061 Call EngineProfiler.End
	062 Return 
	063 Call 0x1C17F20
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X20, X0
	066 Move X0, X20
	067 Call 0x3EB2AD0
	068 Move X20, X0
	069 Move X0, 0x222F000
	070 Move X0, [X0+2000]
	071 Call 0x1C17D08
	072 Move X8, [X20]
	073 Move X1, [X8]
	074 Call 0x1C18270
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {95}
	079 Move X20, [X20]
	080 Call 0x3EB2AE0
	081 Move X0, 0x2237000
	082 Move X0, [X0+2224]
	083 Call 0x1C17D08
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move X0, 0x223B000
	089 Move X0, [X0+2744]
	090 Call 0x1C17D08
	091 Move X2, X0
	092 Move X0, X19
	093 Move X1, X20
	094 Call 0x2214878, X0, X1
	095 Move W0, 8
	096 Call 0x3EB2AF0
	097 Move X8, [X20]
	098 Move [X0], X8
	099 Move X1, 0x1FF0000
	100 Add X1, X1, 3672
	101 Move X2, X31
	102 Call 0x3EB2B00
	103 Move X20, X0
	104 Call 0x3EB2AE0
	105 Move X0, X20
	106 Call 0x1D2D690
	107 Call 0x1991590

Method: System.Void InvokeOnAfterSimulation()

Disassembly:
	0x01EC5ED8 STR S0, [X19 + 0x7C]
	0x01EC5EDC BL 0x1EC0864
	0x01EC5EE0 TBNZ X0, 0x0, 0x1EC5EEC
	0x01EC5EE4 LDR V0, [X19 + 0x7C]
	0x01EC5EE8 STR S0, [X19 + 0x78]
	0x01EC5EEC MOV X0, X19
	0x01EC5EF0 BL 0x1EC0864
	0x01EC5EF4 TBZ X0, 0x0, 0x1EC5F64
	0x01EC5EF8 LDR X21, [X19 + 0x68]
	0x01EC5EFC CBZ X21, 0x1EC5F94
	0x01EC5F00 LDR X8, [X21]
	0x01EC5F04 LDR X19, [X19 + 0xE0]
	0x01EC5F08 LDR X1, [X23]
	0x01EC5F0C LDRH W9, [X8 + 0x12E]
	0x01EC5F10 CBZ X9, 0x1EC5F34
	0x01EC5F14 LDR X10, [X8 + 0xB0]
	0x01EC5F18 ADD X10, X10, 0x8
	0x01EC5F1C LDUR X11, [X10 - 0x8]
	0x01EC5F20 CMP X11, X1
	0x01EC5F24 B.EQ 0x1EC5F44
	0x01EC5F28 SUBS X9, X9, 0x1
	0x01EC5F2C ADD X10, X10, 0x10
	0x01EC5F30 B.NE 0x1EC5F1C
	0x01EC5F34 MOVZ W2, 0xA
	0x01EC5F38 MOV X0, X21
	0x01EC5F3C BL 0x1C5C788
	0x01EC5F40 B 0x1EC5F54
	0x01EC5F44 LDR W9, [X10]
	0x01EC5F48 ADD W9, W9, 0xA
	0x01EC5F4C ADD X8, X8, W9, 0x4, SXTW
	0x01EC5F50 ADD X0, X8, 0x138
	0x01EC5F54 LDP X8, X2, [X0]
	0x01EC5F58 MOV X0, X21
	0x01EC5F5C MOV X1, X19
	0x01EC5F60 BLR X8
	0x01EC5F64 LDR X8, [X22 + 0x28]
	0x01EC5F68 LDR X9, [X31 + 0x28]
	0x01EC5F6C CMP X8, X9
	0x01EC5F70 B.NE 0x1EC5F98
	0x01EC5F74 MOV W0, W20
	0x01EC5F78 LDP X20, X19, [X31 + 0x70]
	0x01EC5F7C LDP X22, X21, [X31 + 0x60]
	0x01EC5F80 LDP X24, X23, [X31 + 0x50]
	0x01EC5F84 LDR X30, [X31 + 0x40]
	0x01EC5F88 LDP D9, D8, [X31 + 0x30]
	0x01EC5F8C ADD X31, X31, 0x80
	0x01EC5F90 RET
	0x01EC5F94 BL 0x1C16F20
	0x01EC5F98 BL 0x3EB1B20
	0x01EC5F9C B 0x1EC6048
	0x01EC5FA0 CMP W1, 0x1
	0x01EC5FA4 MOV X21, X0
	0x01EC5FA8 B.NE 0x1EC60E4
	0x01EC5FAC MOV X0, X21
	0x01EC5FB0 BL 0x3EB1AD0
	0x01EC5FB4 MOV X21, X0
	0x01EC5FB8 ADRP X0, 0x222E000
	0x01EC5FBC LDR X0, [X0 + 0x7D0]
	0x01EC5FC0 BL 0x1C16D08
	0x01EC5FC4 LDR X8, [X21]
	0x01EC5FC8 LDR X1, [X8]
	0x01EC5FCC BL 0x1C17270
	0x01EC5FD0 TBZ X0, 0x0, 0x1EC6014
	0x01EC5FD4 LDR X21, [X21]
	0x01EC5FD8 BL 0x3EB1AE0
	0x01EC5FDC ADRP X0, 0x2236000
	0x01EC5FE0 LDR X0, [X0 + 0x8B0]
	0x01EC5FE4 BL 0x1C16D08
	0x01EC5FE8 LDR W8, [X0 + 0xE0]
	0x01EC5FEC CBNZ W8, 0x1EC5FF4
	0x01EC5FF0 BL 0x1C16DFC
	0x01EC5FF4 ADRP X0, 0x223A000
	0x01EC5FF8 LDR X0, [X0 + 0xAB8]
	0x01EC5FFC BL 0x1C16D08
	0x01EC6000 MOV X2, X0
	0x01EC6004 MOV X0, X19
	0x01EC6008 MOV X1, X21
	0x01EC600C BL 0x2213878
	0x01EC6010 B 0x1EC5D34
	0x01EC6014 MOVZ W0, 0x8
	0x01EC6018 BL 0x3EB1AF0
	0x01EC601C LDR X8, [X21]
	0x01EC6020 STR X8, [X0]
	0x01EC6024 ADRP X1, 0x1FEE000
	0x01EC6028 ADD X1, X1, 0xE58
	0x01EC602C MOV X2, X31
	0x01EC6030 BL 0x3EB1B00
	0x01EC6034 B 0x1EC60DC
	0x01EC6038 MOV X21, X0
	0x01EC603C BL 0x3EB1AE0
	0x01EC6040 B 0x1EC60E4
	0x01EC6044 B 0x1EC6048
	0x01EC6048 MOV X21, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2515000
	006 Move X21, 0x223B000
	007 Move W8, [X20+1144]
	008 Move X21, [X21+3048]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x223A000
	015 Move X0, [X0+2704]
	016 Call 0x1C17CF4
	017 Move X0, 0x223B000
	018 Move X0, [X0+3048]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1144], W8
	022 Move X0, [X21]
	023 Move X1, X31
	024 Call EngineProfiler.Begin, X0
	025 Move X20, [X19+64]
	026 Compare X20, 0
	027 JumpIfEqual {59}
	028 Move X10, 0x223A000
	029 Move X8, [X20]
	030 Move X10, [X10+2704]
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X10]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move W2, 12
	042 Move X0, X20
	043 Call 0x1C5D788
	044 Move W9, [X10]
	045 Add W9, W9, 12
	046 Add X8, X8, W9
	047 Add X0, X8, 312
	048 Move X8, [X0]
	049 Move X1, [X0+8]
	050 Move X0, X20
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X0, X31
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Call EngineProfiler.End
	058 Return 
	059 Call 0x1C17F20
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X20, X0
	062 Move X0, X20
	063 Call 0x3EB2AD0
	064 Move X20, X0
	065 Move X0, 0x222F000
	066 Move X0, [X0+2000]
	067 Call 0x1C17D08
	068 Move X8, [X20]
	069 Move X1, [X8]
	070 Call 0x1C18270
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {91}
	075 Move X20, [X20]
	076 Call 0x3EB2AE0
	077 Move X0, 0x2237000
	078 Move X0, [X0+2224]
	079 Call 0x1C17D08
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X0, 0x223B000
	085 Move X0, [X0+2744]
	086 Call 0x1C17D08
	087 Move X2, X0
	088 Move X0, X19
	089 Move X1, X20
	090 Call 0x2214878, X0, X1
	091 Move W0, 8
	092 Call 0x3EB2AF0
	093 Move X8, [X20]
	094 Move [X0], X8
	095 Move X1, 0x1FEF000
	096 Add X1, X1, 3672
	097 Move X2, X31
	098 Call 0x3EB2B00
	099 Move X20, X0
	100 Call 0x3EB2AE0
	101 Move X0, X20
	102 Call 0x1D2D690
	103 Call 0x1991590

Method: System.Void InvokeOnBeforeAllTicks(System.Boolean resimulation, System.Int32 ticks)

Disassembly:
	0x01EC604C CMP W1, 0x1
	0x01EC6050 B.NE 0x1EC60E4
	0x01EC6054 MOV X0, X21
	0x01EC6058 BL 0x3EB1AD0
	0x01EC605C MOV X21, X0
	0x01EC6060 ADRP X0, 0x222D000
	0x01EC6064 LDR X0, [X0 + 0x7D0]
	0x01EC6068 BL 0x1C16D08
	0x01EC606C LDR X8, [X21]
	0x01EC6070 LDR X1, [X8]
	0x01EC6074 BL 0x1C17270
	0x01EC6078 TBZ X0, 0x0, 0x1EC60BC
	0x01EC607C LDR X21, [X21]
	0x01EC6080 BL 0x3EB1AE0
	0x01EC6084 ADRP X0, 0x2235000
	0x01EC6088 LDR X0, [X0 + 0x8B0]
	0x01EC608C BL 0x1C16D08
	0x01EC6090 LDR W8, [X0 + 0xE0]
	0x01EC6094 CBNZ W8, 0x1EC609C
	0x01EC6098 BL 0x1C16DFC
	0x01EC609C ADRP X0, 0x2239000
	0x01EC60A0 LDR X0, [X0 + 0xAB8]
	0x01EC60A4 BL 0x1C16D08
	0x01EC60A8 MOV X2, X0
	0x01EC60AC MOV X0, X19
	0x01EC60B0 MOV X1, X21
	0x01EC60B4 BL 0x2213878
	0x01EC60B8 B 0x1EC5CDC
	0x01EC60BC MOVZ W0, 0x8
	0x01EC60C0 BL 0x3EB1AF0
	0x01EC60C4 LDR X8, [X21]
	0x01EC60C8 STR X8, [X0]
	0x01EC60CC ADRP X1, 0x1FEE000
	0x01EC60D0 ADD X1, X1, 0xE58
	0x01EC60D4 MOV X2, X31
	0x01EC60D8 BL 0x3EB1B00
	0x01EC60DC MOV X21, X0
	0x01EC60E0 BL 0x3EB1AE0
	0x01EC60E4 MOV X0, X21
	0x01EC60E8 BL 0x1D2C690
	0x01EC60EC BL 0x1990590
	0x01EC60F0 STP X30, X21, [X31 - 0x20]!
	0x01EC60F4 STP X20, X19, [X31 + 0x10]
	0x01EC60F8 ADRP X20, 0x2513000
	0x01EC60FC LDRB W8, [X20 + 0x491]
	0x01EC6100 MOV X19, X0
	0x01EC6104 TBNZ X8, 0x0, 0x1EC6128
	0x01EC6108 ADRP X0, 0x2234000
	0x01EC610C LDR X0, [X0 + 0x2E8]
	0x01EC6110 BL 0x1C16CF4
	0x01EC6114 ADRP X0, 0x2239000
	0x01EC6118 LDR X0, [X0 + 0xC20]
	0x01EC611C BL 0x1C16CF4
	0x01EC6120 MOVZ W8, 0x1
	0x01EC6124 STRB W8, [X20 + 0x491]
	0x01EC6128 LDR X8, [X19 + 0x128]
	0x01EC612C CBZ X8, 0x1EC61C4
	0x01EC6130 ADRP X8, 0x2239000
	0x01EC6134 LDR X8, [X8 + 0xC20]
	0x01EC6138 MOV X1, X31
	0x01EC613C LDR X0, [X8]
	0x01EC6140 BL 0x1E32108
	0x01EC6144 LDR X20, [X19 + 0x138]
	0x01EC6148 CBNZ X20, 0x1EC6180
	0x01EC614C MOV X0, X31
	0x01EC6150 BL 0x33C18F4
	0x01EC6154 ADRP X8, 0x2234000
	0x01EC6158 LDR X8, [X8 + 0x2E8]
	0x01EC615C MOV W21, W0
	0x01EC6160 LDR X8, [X8]
	0x01EC6164 MOV X0, X8
	0x01EC6168 BL 0x1C16F10
	0x01EC616C MOV W1, W21
	0x01EC6170 MOV X2, X31
	0x01EC6174 MOV X20, X0
	0x01EC6178 BL 0x338E5E8
	0x01EC617C STR X20, [X19 + 0x138]
	0x01EC6180 LDP X1, X0, [X19 + 0x120]
	0x01EC6184 MOV X2, X20
	0x01EC6188 MOV X3, X31
	0x01EC618C BL 0x1EFD930
	0x01EC6190 LDR X0, [X19 + 0x130]
	0x01EC6194 MOV X1, X19
	0x01EC6198 MOV X2, X31
	0x01EC619C BL 0x1EFFB84
	0x01EC61A0 LDR X8, [X19]
	0x01EC61A4 MOV X0, X19
	0x01EC61A8 LDR X9, [X8 + 0x308]
	0x01EC61AC LDR X1, [X8 + 0x310]
	0x01EC61B0 BLR X9
	0x01EC61B4 LDP X20, X19, [X31 + 0x10]
	0x01EC61B8 MOV X0, X31
	0x01EC61BC LDP X30, X21, [X31], #0x20
	0x01EC61C0 B 0x1E32194
	0x01EC61C4 LDP X20, X19, [X31 + 0x10]
	0x01EC61C8 LDP X30, X21, [X31], #0x20
	0x01EC61CC RET
	0x01EC61D0 SUB X31, X31, 0x60
	0x01EC61D4 STP D9, D8, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x2514000
	008 Move X23, 0x223A000
	009 Move W8, [X22+1145]
	010 Move X23, [X23+3056]
	011 Move W20, W2
	012 Move W21, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x2239000
	019 Move X0, [X0+2704]
	020 Call 0x1C17CF4
	021 Move X0, 0x223A000
	022 Move X0, [X0+3056]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+1145], W8
	026 Move X0, [X23]
	027 Move X1, X31
	028 Call EngineProfiler.Begin, X0
	029 Move X22, [X19+64]
	030 Compare X22, 0
	031 JumpIfEqual {67}
	032 Move X10, 0x2239000
	033 Move X8, [X22]
	034 Move X10, [X10+2704]
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X1, [X10]
	037 Compare X9, 0
	038 JumpIfEqual {45}
	039 Move X10, [X8+176]
	040 Add X10, X10, 8
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract X9, X9, 1
	044 Add X10, X10, 16
	045 Move W2, 11
	046 Move X0, X22
	047 Call 0x1C5D788
	048 Move W9, [X10]
	049 Add W9, W9, 11
	050 Add X8, X8, W9
	051 Add X0, X8, 312
	052 Move X8, [X0]
	053 Move X3, [X0+8]
	054 And W1, W21, 1
	055 Move X0, X22
	056 Move W2, W20
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X0, X31
	063 Move X30, [X31+48]
	064 Move X23, [X31+56]
	065 Call EngineProfiler.End
	066 Return 
	067 Call 0x1C17F20
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X20, X0
	070 Move X0, X20
	071 Call 0x3EB2AD0
	072 Move X20, X0
	073 Move X0, 0x222E000
	074 Move X0, [X0+2000]
	075 Call 0x1C17D08
	076 Move X8, [X20]
	077 Move X1, [X8]
	078 Call 0x1C18270
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {99}
	083 Move X20, [X20]
	084 Call 0x3EB2AE0
	085 Move X0, 0x2236000
	086 Move X0, [X0+2224]
	087 Call 0x1C17D08
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move X0, 0x223A000
	093 Move X0, [X0+2744]
	094 Call 0x1C17D08
	095 Move X2, X0
	096 Move X0, X19
	097 Move X1, X20
	098 Call 0x2214878, X0, X1
	099 Move W0, 8
	100 Call 0x3EB2AF0
	101 Move X8, [X20]
	102 Move [X0], X8
	103 Move X1, 0x1FEF000
	104 Add X1, X1, 3672
	105 Move X2, X31
	106 Call 0x3EB2B00
	107 Move X20, X0
	108 Call 0x3EB2AE0
	109 Move X0, X20
	110 Call 0x1D2D690
	111 Call 0x1991590

Method: System.Void InvokeOnAfterAllTicks(System.Boolean resimulation, System.Int32 ticks)

Disassembly:
	0x01EC61D8 STR X30, [X31 + 0x20]
	0x01EC61DC STP X24, X23, [X31 + 0x30]
	0x01EC61E0 STP X22, X21, [X31 + 0x40]
	0x01EC61E4 STP X20, X19, [X31 + 0x50]
	0x01EC61E8 ADRP X20, 0x2513000
	0x01EC61EC LDRB W8, [X20 + 0x47F]
	0x01EC61F0 MOV X19, X0
	0x01EC61F4 TBNZ X8, 0x0, 0x1EC620C
	0x01EC61F8 ADRP X0, 0x2239000
	0x01EC61FC LDR X0, [X0 + 0xC28]
	0x01EC6200 BL 0x1C16CF4
	0x01EC6204 MOVZ W8, 0x1
	0x01EC6208 STRB W8, [X20 + 0x47F]
	0x01EC620C STP X31, X31, [X31]
	0x01EC6210 LDR W21, [X19 + 0x48]
	0x01EC6214 LDR W22, [X19 + 0xD4]
	0x01EC6218 MOV X0, X19
	0x01EC621C BL 0x1EC0308
	0x01EC6220 LDR W23, [X0]
	0x01EC6224 MOV X0, X19
	0x01EC6228 BL 0x1EBDF30
	0x01EC622C MOV W20, W0
	0x01EC6230 MOV X0, X19
	0x01EC6234 BL 0x1EC0308
	0x01EC6238 ADD X8, X0, 0x4
	0x01EC623C ADD X9, X0, 0xC
	0x01EC6240 ANDS W31, W20, 0x1
	0x01EC6244 CSEL X8, X9, X8, NE
	0x01EC6248 LDR W8, [X8]
	0x01EC624C SUB W9, W21, W22
	0x01EC6250 SDIV W8, W23, W8
	0x01EC6254 CMP W9, W8
	0x01EC6258 B.LT 0x1EC63DC
	0x01EC625C LDR W9, [X19 + 0x48]
	0x01EC6260 LDR X8, [X19 + 0x58]
	0x01EC6264 STR W9, [X19 + 0xD4]
	0x01EC6268 CBZ X8, 0x1EC63F8
	0x01EC626C LDR W8, [X8 + 0x14]
	0x01EC6270 ORN W8, W31, W8, 0x0
	0x01EC6274 ANDS W31, W8, 0x3
	0x01EC6278 B.NE 0x1EC6284
	0x01EC627C MOV X0, X19
	0x01EC6280 BL 0x1EC646C
	0x01EC6284 ADRP X8, 0x2239000
	0x01EC6288 LDR X8, [X8 + 0xC28]
	0x01EC628C MOV X1, X31
	0x01EC6290 LDR X0, [X8]
	0x01EC6294 BL 0x1E32108
	0x01EC6298 LDR X0, [X19 + 0xA8]
	0x01EC629C CBZ X0, 0x1EC63F8
	0x01EC62A0 MOV X1, X31
	0x01EC62A4 BL 0x1ED5898
	0x01EC62A8 LDR X0, [X19 + 0x130]
	0x01EC62AC MOV X1, X31
	0x01EC62B0 BL 0x1EFF18C
	0x01EC62B4 STP X0, X1, [X31]
	0x01EC62B8 ADD X0, X31, 0x0
	0x01EC62BC MOV X1, X31
	0x01EC62C0 BL 0x1EFD1D8
	0x01EC62C4 TBZ X0, 0x0, 0x1EC63D4
	0x01EC62C8 ADRP X20, 0x2239000
	0x01EC62CC LDR X20, [X20 + 0xA60]
	0x01EC62D0 ADRP X23, 0x2513000
	0x01EC62D4 MOVZ W24, 0x1
	0x01EC62D8 FMOV D8, 1
	0x01EC62DC FMOV D9, 0.5
	0x01EC62E0 ADD X0, X31, 0x0
	0x01EC62E4 MOV X1, X31
	0x01EC62E8 BL 0x1EFD150
	0x01EC62EC LDRB W8, [X23 + 0x4BB]
	0x01EC62F0 MOV X22, X0
	0x01EC62F4 CBNZ W8, 0x1EC6304
	0x01EC62F8 MOV X0, X20
	0x01EC62FC BL 0x1C16CF4
	0x01EC6300 STRB W24, [X23 + 0x4BB]
	0x01EC6304 LDR X0, [X19 + 0xB0]
	0x01EC6308 CBZ X0, 0x1EC63F8
	0x01EC630C LDR W8, [X22 + 0x18]
	0x01EC6310 LDR X2, [X20]
	0x01EC6314 SBFM W1, W8, 0x10, 0x1F
	0x01EC6318 BL 0x2A135EC
	0x01EC631C CBZ X0, 0x1EC63F8
	0x01EC6320 MOV X21, X0
	0x01EC6324 LDR X0, [X0 + 0xD8]
	0x01EC6328 LDR X1, [X22 + 0x18]
	0x01EC632C MOV X2, X31
	0x01EC6330 BL 0x1EFC3FC
	0x01EC6334 TBZ X0, 0x0, 0x1EC63C4
	0x01EC6338 LDR X0, [X19 + 0x130]
	0x01EC633C MOV X1, X22
	0x01EC6340 MOV X2, X31
	0x01EC6344 BL 0x1F014BC
	0x01EC6348 FCMP D0, D8
	0x01EC634C B.LT 0x1EC636C
	0x01EC6350 LDR X0, [X19 + 0x130]
	0x01EC6354 MOV X1, X31
	0x01EC6358 BL 0x1EFF010
	0x01EC635C LDR V1, [X21 + 0x78]
	0x01EC6360 FSUB D0, D0, D1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x2514000
	008 Move X23, 0x223A000
	009 Move W8, [X22+1146]
	010 Move X23, [X23+3064]
	011 Move W20, W2
	012 Move W21, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x2239000
	019 Move X0, [X0+2704]
	020 Call 0x1C17CF4
	021 Move X0, 0x223A000
	022 Move X0, [X0+3064]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+1146], W8
	026 Move X0, [X23]
	027 Move X1, X31
	028 Call EngineProfiler.Begin, X0
	029 Move X22, [X19+64]
	030 Compare X22, 0
	031 JumpIfEqual {67}
	032 Move X10, 0x2239000
	033 Move X8, [X22]
	034 Move X10, [X10+2704]
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X1, [X10]
	037 Compare X9, 0
	038 JumpIfEqual {45}
	039 Move X10, [X8+176]
	040 Add X10, X10, 8
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract X9, X9, 1
	044 Add X10, X10, 16
	045 Move W2, 10
	046 Move X0, X22
	047 Call 0x1C5D788
	048 Move W9, [X10]
	049 Add W9, W9, 10
	050 Add X8, X8, W9
	051 Add X0, X8, 312
	052 Move X8, [X0]
	053 Move X3, [X0+8]
	054 And W1, W21, 1
	055 Move X0, X22
	056 Move W2, W20
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X0, X31
	063 Move X30, [X31+48]
	064 Move X23, [X31+56]
	065 Call EngineProfiler.End
	066 Return 
	067 Call 0x1C17F20
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X20, X0
	070 Move X0, X20
	071 Call 0x3EB2AD0
	072 Move X20, X0
	073 Move X0, 0x222E000
	074 Move X0, [X0+2000]
	075 Call 0x1C17D08
	076 Move X8, [X20]
	077 Move X1, [X8]
	078 Call 0x1C18270
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {99}
	083 Move X20, [X20]
	084 Call 0x3EB2AE0
	085 Move X0, 0x2236000
	086 Move X0, [X0+2224]
	087 Call 0x1C17D08
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move X0, 0x223A000
	093 Move X0, [X0+2744]
	094 Call 0x1C17D08
	095 Move X2, X0
	096 Move X0, X19
	097 Move X1, X20
	098 Call 0x2214878, X0, X1
	099 Move W0, 8
	100 Call 0x3EB2AF0
	101 Move X8, [X20]
	102 Move [X0], X8
	103 Move X1, 0x1FEF000
	104 Add X1, X1, 3672
	105 Move X2, X31
	106 Call 0x3EB2B00
	107 Move X20, X0
	108 Call 0x3EB2AE0
	109 Move X0, X20
	110 Call 0x1D2D690
	111 Call 0x1991590

Method: System.Void BeforeUpdate()

Disassembly:
	0x01EC6364 FCMP D0, D9

ISIL:
	001 Return 

Method: System.Void AfterSimulation()

Disassembly:
	0x01EC6368 B.MI 0x1EC63C4

ISIL:
	001 Return 

Method: System.Void UpdateSimulationStateForMasterClientObjects(System.Boolean isMasterClient)

Disassembly:
	0x01EC636C LDR X0, [X19 + 0x108]
	0x01EC6370 CBZ X0, 0x1EC63F8
	0x01EC6374 LDR W2, [X19 + 0x48]
	0x01EC6378 MOV X1, X21
	0x01EC637C MOV X3, X31
	0x01EC6380 BL 0x1ECF474
	0x01EC6384 TBZ X0, 0x0, 0x1EC63C4
	0x01EC6388 MOV X0, X19
	0x01EC638C BL 0x1EC6860
	0x01EC6390 LDR X8, [X19]
	0x01EC6394 MOV X0, X19
	0x01EC6398 LDR X9, [X8 + 0x298]
	0x01EC639C LDR X1, [X8 + 0x2A0]
	0x01EC63A0 BLR X9
	0x01EC63A4 LDR X0, [X19 + 0x108]
	0x01EC63A8 CBZ X0, 0x1EC63F8
	0x01EC63AC MOV X1, X31
	0x01EC63B0 BL 0x1ECF5DC
	0x01EC63B4 LDR X0, [X19 + 0x130]
	0x01EC63B8 MOV X1, X31
	0x01EC63BC BL 0x1EFF010
	0x01EC63C0 STR D0, [X21 + 0x78]
	0x01EC63C4 ADD X0, X31, 0x0
	0x01EC63C8 MOV X1, X31
	0x01EC63CC BL 0x1EFD1D8
	0x01EC63D0 TBNZ X0, 0x0, 0x1EC62E0
	0x01EC63D4 MOV X0, X31
	0x01EC63D8 BL 0x1E32194
	0x01EC63DC LDP X20, X19, [X31 + 0x50]
	0x01EC63E0 LDP X22, X21, [X31 + 0x40]
	0x01EC63E4 LDP X24, X23, [X31 + 0x30]
	0x01EC63E8 LDR X30, [X31 + 0x20]
	0x01EC63EC LDP D9, D8, [X31 + 0x10]
	0x01EC63F0 ADD X31, X31, 0x60
	0x01EC63F4 RET
	0x01EC63F8 BL 0x1C16F20
	0x01EC63FC STR X30, [X31 - 0x20]!
	0x01EC6400 STP X20, X19, [X31 + 0x10]
	0x01EC6404 ADRP X20, 0x2513000
	0x01EC6408 LDRB W8, [X20 + 0x490]
	0x01EC640C MOV X19, X0
	0x01EC6410 TBNZ X8, 0x0, 0x1EC6428
	0x01EC6414 ADRP X0, 0x2239000
	0x01EC6418 LDR X0, [X0 + 0xC30]
	0x01EC641C BL 0x1C16CF4
	0x01EC6420 MOVZ W8, 0x1
	0x01EC6424 STRB W8, [X20 + 0x490]
	0x01EC6428 LDR X8, [X19 + 0x128]
	0x01EC642C CBZ X8, 0x1EC6460
	0x01EC6430 ADRP X8, 0x2239000
	0x01EC6434 LDR X8, [X8 + 0xC30]
	0x01EC6438 MOV X1, X31
	0x01EC643C LDR X0, [X8]
	0x01EC6440 BL 0x1E32108
	0x01EC6444 LDP X1, X0, [X19 + 0x120]
	0x01EC6448 MOV X2, X31
	0x01EC644C BL 0x1EFDCB8
	0x01EC6450 LDP X20, X19, [X31 + 0x10]
	0x01EC6454 MOV X0, X31
	0x01EC6458 LDR X30, [X31], #0x20
	0x01EC645C B 0x1E32194
	0x01EC6460 LDP X20, X19, [X31 + 0x10]
	0x01EC6464 LDR X30, [X31], #0x20
	0x01EC6468 RET
	0x01EC646C SUB X31, X31, 0xA0
	0x01EC6470 STR D10, [X31 + 0x50]
	0x01EC6474 STP D9, D8, [X31 + 0x60]
	0x01EC6478 STP X30, X23, [X31 + 0x70]
	0x01EC647C STP X22, X21, [X31 + 0x80]
	0x01EC6480 STP X20, X19, [X31 + 0x90]
	0x01EC6484 ADRP X20, 0x2513000
	0x01EC6488 LDRB W8, [X20 + 0x47E]
	0x01EC648C MOV X19, X0
	0x01EC6490 TBNZ X8, 0x0, 0x1EC6508
	0x01EC6494 ADRP X0, 0x2238000
	0x01EC6498 LDR X0, [X0 + 0xAA0]
	0x01EC649C BL 0x1C16CF4
	0x01EC64A0 ADRP X0, 0x2238000
	0x01EC64A4 LDR X0, [X0 + 0x810]
	0x01EC64A8 BL 0x1C16CF4
	0x01EC64AC ADRP X0, 0x2239000
	0x01EC64B0 LDR X0, [X0 + 0xA98]
	0x01EC64B4 BL 0x1C16CF4
	0x01EC64B8 ADRP X0, 0x2239000
	0x01EC64BC LDR X0, [X0 + 0xAA0]
	0x01EC64C0 BL 0x1C16CF4
	0x01EC64C4 ADRP X0, 0x2239000
	0x01EC64C8 LDR X0, [X0 + 0xAA8]
	0x01EC64CC BL 0x1C16CF4
	0x01EC64D0 ADRP X0, 0x2230000
	0x01EC64D4 LDR X0, [X0 + 0xDD8]
	0x01EC64D8 BL 0x1C16CF4
	0x01EC64DC ADRP X0, 0x2237000
	0x01EC64E0 LDR X0, [X0 + 0xB60]
	0x01EC64E4 BL 0x1C16CF4
	0x01EC64E8 ADRP X0, 0x2239000
	0x01EC64EC LDR X0, [X0 + 0xAB0]
	0x01EC64F0 BL 0x1C16CF4
	0x01EC64F4 ADRP X0, 0x2239000
	0x01EC64F8 LDR X0, [X0 + 0xC38]
	0x01EC64FC BL 0x1C16CF4
	0x01EC6500 MOVZ W8, 0x1
	0x01EC6504 STRB W8, [X20 + 0x47E]
	0x01EC6508 MOV X0, X19
	0x01EC650C STP X31, X31, [X31 + 0x30]
	0x01EC6510 STR X31, [X31 + 0x40]
	0x01EC6514 STP X31, X31, [X31 + 0x20]
	0x01EC6518 BL 0x1EBDF30
	0x01EC651C TBZ X0, 0x0, 0x1EC665C
	0x01EC6520 LDR X8, [X19 + 0x58]
	0x01EC6524 CBZ X8, 0x1EC6680
	0x01EC6528 LDR W8, [X8 + 0x14]
	0x01EC652C ORN W8, W31, W8, 0x0
	0x01EC6530 ANDS W31, W8, 0x3
	0x01EC6534 B.NE 0x1EC665C
	0x01EC6538 ADRP X8, 0x2239000
	0x01EC653C LDR X8, [X8 + 0xC38]
	0x01EC6540 MOV X1, X31
	0x01EC6544 LDR X0, [X8]
	0x01EC6548 BL 0x1E32108
	0x01EC654C LDR X0, [X19 + 0x150]
	0x01EC6550 CBZ X0, 0x1EC6680
	0x01EC6554 ADRP X8, 0x2238000
	0x01EC6558 LDR X8, [X8 + 0x810]
	0x01EC655C LDR X1, [X8]
	0x01EC6560 BL 0x2A673D0
	0x01EC6564 CBZ X0, 0x1EC6680
	0x01EC6568 ADRP X8, 0x2239000
	0x01EC656C LDR X8, [X8 + 0xAB0]
	0x01EC6570 LDR X1, [X8]
	0x01EC6574 ADD X8, X31, 0x8
	0x01EC6578 BL 0x2755900
	0x01EC657C LDUR V0, [X31 + 0x8]
	0x01EC6580 LDR X8, [X31 + 0x18]
	0x01EC6584 ADRP X21, 0x2239000
	0x01EC6588 ADRP X22, 0x2237000
	0x01EC658C LDR X21, [X21 + 0xAA0]
	0x01EC6590 LDR X22, [X22 + 0xB60]
	0x01EC6594 STR V0, [X31 + 0x3]
	0x01EC6598 STR X8, [X31 + 0x40]
	0x01EC659C ADRP X23, 0x2238000
	0x01EC65A0 LDR X23, [X23 + 0xAA0]
	0x01EC65A4 LDR X1, [X21]
	0x01EC65A8 ADD X0, X31, 0x30
	0x01EC65AC BL 0x2C04490
	0x01EC65B0 TBZ X0, 0x0, 0x1EC6640
	0x01EC65B4 LDR X20, [X31 + 0x40]
	0x01EC65B8 CBZ X20, 0x1EC6678
	0x01EC65BC LDR X8, [X20 + 0xB0]
	0x01EC65C0 CBZ X8, 0x1EC667C
	0x01EC65C4 LDRB W8, [X8 + 0x19]
	0x01EC65C8 TBZ X8, 0x0, 0x1EC65A4
	0x01EC65CC MOV X0, X20
	0x01EC65D0 MOV X1, X31
	0x01EC65D4 BL 0x1E972EC
	0x01EC65D8 MOV X2, X0
	0x01EC65DC MOV X0, X19
	0x01EC65E0 BL 0x1EC6714
	0x01EC65E4 ANDS W31, W0, 0xFF
	0x01EC65E8 STP X0, X1, [X31 + 0x20]
	0x01EC65EC B.EQ 0x1EC65A4
	0x01EC65F0 LDR X1, [X22]
	0x01EC65F4 ADD X0, X31, 0x20
	0x01EC65F8 BL 0x243C008
	0x01EC65FC LDR X0, [X23]
	0x01EC6600 MOV V8.16B, V0.16B
	0x01EC6604 MOV V9.16B, V1.16B
	0x01EC6608 MOV V10.16B, V2.16B
	0x01EC660C LDR W8, [X0 + 0xE0]
	0x01EC6610 CBNZ W8, 0x1EC6618
	0x01EC6614 BL 0x1C16DFC
	0x01EC6618 MOV V0.16B, V8.16B
	0x01EC661C MOV V1.16B, V9.16B
	0x01EC6620 MOV V2.16B, V10.16B
	0x01EC6624 MOV X0, X31
	0x01EC6628 BL 0x1ECB428
	0x01EC662C MOV W2, W0
	0x01EC6630 MOV X0, X19
	0x01EC6634 MOV X1, X20
	0x01EC6638 BL 0x1EBFF40
	0x01EC663C B 0x1EC65A4
	0x01EC6640 ADRP X8, 0x2239000
	0x01EC6644 LDR X8, [X8 + 0xA98]
	0x01EC6648 ADD X0, X31, 0x30
	0x01EC664C LDR X1, [X8]
	0x01EC6650 BL 0x2C0448C
	0x01EC6654 MOV X0, X31
	0x01EC6658 BL 0x1E32194
	0x01EC665C LDP X20, X19, [X31 + 0x90]
	0x01EC6660 LDP X22, X21, [X31 + 0x80]
	0x01EC6664 LDP X30, X23, [X31 + 0x70]
	0x01EC6668 LDP D9, D8, [X31 + 0x60]
	0x01EC666C LDR V10, [X31 + 0x50]
	0x01EC6670 ADD X31, X31, 0xA0
	0x01EC6674 RET
	0x01EC6678 BL 0x1C16F20
	0x01EC667C BL 0x1C16F20
	0x01EC6680 BL 0x1C16F20
	0x01EC6684 B 0x1EC66A0
	0x01EC6688 B 0x1EC66A0
	0x01EC668C B 0x1EC66A0
	0x01EC6690 B 0x1EC66A0
	0x01EC6694 B 0x1EC66A0
	0x01EC6698 B 0x1EC66A0
	0x01EC669C B 0x1EC66A0
	0x01EC66A0 MOV X19, X0
	0x01EC66A4 CMP W1, 0x1
	0x01EC66A8 B.NE 0x1EC66DC
	0x01EC66AC MOV X0, X19
	0x01EC66B0 BL 0x3EB1AD0
	0x01EC66B4 LDR X20, [X0]
	0x01EC66B8 BL 0x3EB1AE0
	0x01EC66BC ADRP X8, 0x2239000
	0x01EC66C0 LDR X8, [X8 + 0xA98]
	0x01EC66C4 ADD X0, X31, 0x30
	0x01EC66C8 LDR X1, [X8]
	0x01EC66CC BL 0x2C0448C
	0x01EC66D0 CBZ X20, 0x1EC6654
	0x01EC66D4 MOV X0, X20
	0x01EC66D8 BL 0x1C16F18
	0x01EC66DC MOV X20, X31
	0x01EC66E0 B 0x1EC66E8
	0x01EC66E4 MOV X19, X0
	0x01EC66E8 ADRP X8, 0x2239000
	0x01EC66EC LDR X8, [X8 + 0xA98]
	0x01EC66F0 LDR X1, [X8]
	0x01EC66F4 ADD X0, X31, 0x30
	0x01EC66F8 BL 0x2C0448C
	0x01EC66FC CBNZ X20, 0x1EC6708
	0x01EC6700 MOV X0, X19
	0x01EC6704 BL 0x1D2C690
	0x01EC6708 MOV X0, X20
	0x01EC670C BL 0x1C16F18
	0x01EC6710 BL 0x1990590
	0x01EC6714 SUB X31, X31, 0x50
	0x01EC6718 STR X30, [X31 + 0x20]
	0x01EC671C STP X22, X21, [X31 + 0x30]
	0x01EC6720 STP X20, X19, [X31 + 0x40]
	0x01EC6724 ADRP X21, 0x2513000
	0x01EC6728 LDRB W8, [X21 + 0x4B3]
	0x01EC672C MOV X20, X2
	0x01EC6730 MOV X19, X0
	0x01EC6734 TBNZ X8, 0x0, 0x1EC6758
	0x01EC6738 ADRP X0, 0x2230000
	0x01EC673C LDR X0, [X0 + 0x398]
	0x01EC6740 BL 0x1C16CF4
	0x01EC6744 ADRP X0, 0x2230000
	0x01EC6748 LDR X0, [X0 + 0xB58]
	0x01EC674C BL 0x1C16CF4
	0x01EC6750 MOVZ W8, 0x1
	0x01EC6754 STRB W8, [X21 + 0x4B3]
	0x01EC6758 STR X31, [X31 + 0x28]
	0x01EC675C STR X31, [X31 + 0x8]
	0x01EC6760 CBZ X20, 0x1EC67C4
	0x01EC6764 ADRP X21, 0x2230000
	0x01EC6768 LDR X21, [X21 + 0x398]
	0x01EC676C LDR X0, [X21]
	0x01EC6770 LDR W22, [X20 + 0x34]
	0x01EC6774 LDR W8, [X0 + 0xE0]
	0x01EC6778 CBNZ W8, 0x1EC6780
	0x01EC677C BL 0x1C16DFC
	0x01EC6780 CBZ W22, 0x1EC6808
	0x01EC6784 LDR W1, [X20 + 0x34]
	0x01EC6788 ADD X2, X31, 0x28
	0x01EC678C MOV X0, X19
	0x01EC6790 BL 0x1EC0278
	0x01EC6794 TBZ X0, 0x0, 0x1EC6844
	0x01EC6798 LDR X0, [X31 + 0x28]
	0x01EC679C CBZ X0, 0x1EC67C4
	0x01EC67A0 MOV X1, X31
	0x01EC67A4 BL 0x1E97248
	0x01EC67A8 TBZ X0, 0x0, 0x1EC6844
	0x01EC67AC LDR X0, [X31 + 0x28]
	0x01EC67B0 CBZ X0, 0x1EC67C4
	0x01EC67B4 MOV X1, X31
	0x01EC67B8 BL 0x1E972EC
	0x01EC67BC MOV X20, X0
	0x01EC67C0 CBNZ X0, 0x1EC676C
	0x01EC67C4 BL 0x1C16F20
	0x01EC67C8 LDR W1, [X20]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X21, 0x2514000
	015 Move W8, [X21+1147]
	016 Move W19, W1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {51}
	022 Move X0, 0x2239000
	023 Move X0, [X0+2624]
	024 Call 0x1C17CF4
	025 Move X0, 0x2239000
	026 Move X0, [X0+2632]
	027 Call 0x1C17CF4
	028 Move X0, 0x2239000
	029 Move X0, [X0+2640]
	030 Call 0x1C17CF4
	031 Move X0, 0x2239000
	032 Move X0, [X0+2648]
	033 Call 0x1C17CF4
	034 Move X0, 0x2239000
	035 Move X0, [X0+2704]
	036 Call 0x1C17CF4
	037 Move X0, 0x223A000
	038 Move X0, [X0+3072]
	039 Call 0x1C17CF4
	040 Move X0, 0x2239000
	041 Move X0, [X0+2656]
	042 Call 0x1C17CF4
	043 Move X0, 0x2231000
	044 Move X0, [X0+920]
	045 Call 0x1C17CF4
	046 Move X0, 0x222E000
	047 Move X0, [X0+1432]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X21+1147], W8
	051 NotImplemented "Instruction MOVI not yet implemented."
	052 Move [X31+80], X31
	053 Move [X31+40], X31
	054 Move [X31+48], V0
	055 Move [X31+56], V0
	056 Move X8, [X20]
	057 Move X0, X20
	058 Move X9, [X8+616]
	059 Move X1, [X8+624]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move X22, 0x2513000
	062 Move W8, [X22+2931]
	063 Move X21, X0
	064 Compare W8, 0
	065 JumpIfNotEqual {71}
	066 Move X0, 0x2233000
	067 Move X0, [X0+32]
	068 Call 0x1C17CF4
	069 Move W8, 1
	070 Move [X22+2931], W8
	071 Move [X31], X31
	072 Move X0, [X20+184]
	073 Compare X0, 0
	074 JumpIfEqual {269}
	075 Move X8, 0x2233000
	076 Move X8, [X8+32]
	077 And X1, X21, 0
	078 Add X2, X31, 0
	079 Move X3, [X8]
	080 Call Dictionary`2<PlayerRef, Object>.TryGetValue, X0, X1, X2
	081 Move X8, [X31]
	082 Move X9, [X20+336]
	083 And W31, W0, 1
	084 NotImplemented "Instruction CSEL not yet implemented."
	085 Compare X9, 0
	086 JumpIfEqual {269}
	087 Move X8, 0x2239000
	088 Move X8, [X8+2624]
	089 Move X26, 0x2239000
	090 Move X27, 0x2231000
	091 Move X26, [X26+2640]
	092 Move X27, [X27+920]
	093 Move X1, [X8]
	094 Move X28, 0x222E000
	095 Move X29, 0x2239000
	096 Move X25, 0x2239000
	097 Move X28, [X28+1432]
	098 Move X29, [X29+2704]
	099 Move X25, [X25+2632]
	100 Add X8, X31, 0
	101 Move X0, X9
	102 Call Dictionary`2<NetworkId, Object>.GetEnumerator, X0
	103 Move V0, [X31]
	104 Move V1, [X31+16]
	105 Move X8, [X31+32]
	106 Move [X31+48], V0
	107 Move [X31+56], V1
	108 Move [X31+80], X8
	109 Move X1, [X26]
	110 Add X0, X31, 48
	111 Call Enumerator<NetworkId, Object>.MoveNext, X0
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {247}
	116 Move X0, [X27]
	117 Move X24, [X31+64]
	118 Move X23, [X31+72]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {123}
	122 Call 0x1C17DFC
	123 Subtract W8, W24, 1
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Compare X23, 0
	126 JumpIfEqual {264}
	127 Move X0, [X28]
	128 Move X22, [X23+184]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move X0, X22
	134 Move X1, X31
	135 Call Object.op_Implicit, X0
	136 Move TEMP, X0
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfNotEqual {148}
	140 Move X8, [X23+184]
	141 Compare X8, 0
	142 JumpIfEqual {268}
	143 Move W8, [X8+94]
	144 Move TEMP, X8
	145 And TEMP, TEMP, 2
	146 Compare TEMP, 2
	147 JumpIfNotEqual {109}
	148 Compare X21, 0
	149 JumpIfEqual {266}
	150 And X22, X24, 0
	151 Move W2, 1
	152 Move X0, X21
	153 Move X1, X22
	154 Move W3, W31
	155 Move X4, X31
	156 Call SimulationConnection.GetObjectData, X0, X1, X2, X3
	157 Move X24, X0
	158 Move X0, X23
	159 Move X1, X31
	160 Call NetworkObjectMeta.get_SnapshotLatest, X0
	161 Move [X31+40], X0
	162 Move X0, X23
	163 Move X1, X31
	164 Call NetworkObjectMeta.get_Shadow, X0
	165 Move X1, X0
	166 Add X0, X31, 40
	167 Move X2, X31
	168 Call NetworkObjectHeaderSnapshotRef.CopyTo, X0, X1
	169 Move X0, X23
	170 Move X1, X31
	171 Call NetworkObjectMeta.get_SnapshotLatest, X0
	172 Move [X31+40], X0
	173 Move X0, X23
	174 Move X1, X31
	175 Call NetworkObjectMeta.get_Previous, X0
	176 Move X1, X0
	177 Add X0, X31, 40
	178 Move X2, X31
	179 Call NetworkObjectHeaderSnapshotRef.CopyTo, X0, X1
	180 Move X0, X23
	181 Move X1, X31
	182 Call NetworkObjectMeta.get_SnapshotLatest, X0
	183 Move [X31+40], X0
	184 Move X1, [X23+176]
	185 Add X0, X31, 40
	186 Move X2, X31
	187 Call NetworkObjectHeaderSnapshotRef.CopyTo, X0, X1
	188 Move X0, X21
	189 Move X1, X24
	190 Move X2, X23
	191 Move X3, X31
	192 Call SimulationConnection.SetActive, X0, X1, X2
	193 Move X23, [X20+64]
	194 Compare X23, 0
	195 JumpIfEqual {267}
	196 Move X8, [X23]
	197 Move X1, [X29]
	198 NotImplemented "Instruction LDRH not yet implemented."
	199 Compare X9, 0
	200 JumpIfEqual {207}
	201 Move X10, [X8+176]
	202 Add X10, X10, 8
	203 NotImplemented "Instruction LDUR not yet implemented."
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Subtract X9, X9, 1
	206 Add X10, X10, 16
	207 Move W2, 31
	208 Move X0, X23
	209 Call 0x1C5D788
	210 Move W9, [X10]
	211 Add W9, W9, 31
	212 Add X8, X8, W9
	213 Add X0, X8, 312
	214 Move X8, [X0]
	215 Move X3, [X0+8]
	216 And W2, W19, 1
	217 Move X0, X23
	218 Move X1, X22
	219 NotImplemented "Instruction BLR not yet implemented."
	220 Move X23, [X20+64]
	221 Compare X23, 0
	222 JumpIfEqual {265}
	223 Move X8, [X23]
	224 Move X1, [X29]
	225 NotImplemented "Instruction LDRH not yet implemented."
	226 Compare X9, 0
	227 JumpIfEqual {234}
	228 Move X10, [X8+176]
	229 Add X10, X10, 8
	230 NotImplemented "Instruction LDUR not yet implemented."
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Subtract X9, X9, 1
	233 Add X10, X10, 16
	234 Move W2, 29
	235 Move X0, X23
	236 Call 0x1C5D788
	237 Move W9, [X10]
	238 Add W9, W9, 29
	239 Add X8, X8, W9
	240 Add X0, X8, 312
	241 Move X8, [X0]
	242 Move X3, [X0+8]
	243 And W2, W19, 1
	244 Move X0, X23
	245 Move X1, X22
	246 NotImplemented "Instruction BLR not yet implemented."
	247 Move X1, [X25]
	248 Add X0, X31, 48
	249 Call Enumerator<NetworkId, Object>.Dispose, X0
	250 Move X20, [X31+176]
	251 Move X19, [X31+184]
	252 Move X22, [X31+160]
	253 Move X21, [X31+168]
	254 Move X24, [X31+144]
	255 Move X23, [X31+152]
	256 Move X26, [X31+128]
	257 Move X25, [X31+136]
	258 Move X28, [X31+112]
	259 Move X27, [X31+120]
	260 Move X29, [X31+96]
	261 Move X30, [X31+104]
	262 Add X31, X31, 192
	263 Return 
	264 Call 0x1C17F20
	265 Call 0x1C17F20
	266 Call 0x1C17F20
	267 Call 0x1C17F20
	268 Call 0x1C17F20
	269 Call 0x1C17F20
	270 Move X19, X0
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Move X0, X19
	273 Call 0x3EB2AD0
	274 Move X20, [X0]
	275 Call 0x3EB2AE0
	276 Move X1, [X25]
	277 Add X0, X31, 48
	278 Call Enumerator<NetworkId, Object>.Dispose, X0
	279 Compare X20, 0
	280 JumpIfEqual {250}
	281 Move X0, X20
	282 Call 0x1C17F18
	283 Move X20, X31
	284 Move X19, X0
	285 Move X1, [X25]
	286 Add X0, X31, 48
	287 Call Enumerator<NetworkId, Object>.Dispose, X0
	288 Compare X20, 0
	289 JumpIfNotEqual {292}
	290 Move X0, X19
	291 Call 0x1D2D690
	292 Move X0, X20
	293 Call 0x1C17F18
	294 Call 0x1991590

Method: System.Int32 CalculateForwardTicks()

Disassembly:
	0x01EC67CC ADD X2, X31, 0x8
	0x01EC67D0 MOV X0, X19
	0x01EC67D4 BL 0x1EC0278
	0x01EC67D8 TBZ X0, 0x0, 0x1EC6844
	0x01EC67DC LDR X0, [X31 + 0x8]
	0x01EC67E0 CBZ X0, 0x1EC67C4
	0x01EC67E4 MOV X1, X31
	0x01EC67E8 BL 0x1E97248
	0x01EC67EC TBZ X0, 0x0, 0x1EC6844
	0x01EC67F0 LDR X0, [X31 + 0x8]
	0x01EC67F4 CBZ X0, 0x1EC67C4
	0x01EC67F8 MOV X1, X31
	0x01EC67FC BL 0x1E972EC
	0x01EC6800 MOV X20, X0
	0x01EC6804 CBZ X0, 0x1EC67C4
	0x01EC6808 LDR X0, [X21]
	0x01EC680C LDR W22, [X20]
	0x01EC6810 LDR W8, [X0 + 0xE0]
	0x01EC6814 CBNZ W8, 0x1EC681C
	0x01EC6818 BL 0x1C16DFC
	0x01EC681C CBNZ W22, 0x1EC67C8
	0x01EC6820 ADRP X8, 0x2230000
	0x01EC6824 LDP S0, S1, [X20 + 0x8]
	0x01EC6828 LDR V2, [X20 + 0x10]
	0x01EC682C LDR X8, [X8 + 0xB58]
	0x01EC6830 ADD X0, X31, 0x10
	0x01EC6834 STP X31, X31, [X31 + 0x10]
	0x01EC6838 LDR X1, [X8]
	0x01EC683C BL 0x243BFEC
	0x01EC6840 B 0x1EC6848
	0x01EC6844 STP X31, X31, [X31 + 0x10]
	0x01EC6848 LDP X0, X1, [X31 + 0x10]
	0x01EC684C LDP X20, X19, [X31 + 0x40]
	0x01EC6850 LDP X22, X21, [X31 + 0x30]
	0x01EC6854 LDR X30, [X31 + 0x20]
	0x01EC6858 ADD X31, X31, 0x50
	0x01EC685C RET
	0x01EC6860 STR X30, [X31 - 0x20]!
	0x01EC6864 STP X20, X19, [X31 + 0x10]
	0x01EC6868 ADRP X20, 0x2513000
	0x01EC686C LDRB W8, [X20 + 0x480]
	0x01EC6870 MOV X19, X0
	0x01EC6874 TBNZ X8, 0x0, 0x1EC68A4
	0x01EC6878 ADRP X0, 0x2239000
	0x01EC687C LDR X0, [X0 + 0xC40]
	0x01EC6880 BL 0x1C16CF4
	0x01EC6884 ADRP X0, 0x2239000
	0x01EC6888 LDR X0, [X0 + 0xC48]
	0x01EC688C BL 0x1C16CF4
	0x01EC6890 ADRP X0, 0x2239000
	0x01EC6894 LDR X0, [X0 + 0xC50]
	0x01EC6898 BL 0x1C16CF4
	0x01EC689C MOVZ W8, 0x1
	0x01EC68A0 STRB W8, [X20 + 0x480]
	0x01EC68A4 LDR X8, [X19 + 0x108]
	0x01EC68A8 CBZ X8, 0x1EC699C
	0x01EC68AC LDR X0, [X8 + 0x20]
	0x01EC68B0 MOV X1, X31
	0x01EC68B4 BL 0x1EF987C
	0x01EC68B8 LDR X9, [X19 + 0x108]
	0x01EC68BC CBZ X9, 0x1EC699C
	0x01EC68C0 LDR X8, [X9 + 0x38]
	0x01EC68C4 CBZ X8, 0x1EC699C
	0x01EC68C8 LDR X2, [X9 + 0x20]
	0x01EC68CC MOVZ W11, 0x2380
	0x01EC68D0 LDR W10, [X2 + 0x50]
	0x01EC68D4 SUB W3, W11, W10
	0x01EC68D8 CMP W3, 0x1
	0x01EC68DC B.LT 0x1EC6990
	0x01EC68E0 LDR X9, [X9 + 0x28]
	0x01EC68E4 CBZ X9, 0x1EC699C
	0x01EC68E8 LDR W20, [X8 + 0x60]
	0x01EC68EC ADD X1, X8, 0x60
	0x01EC68F0 ADD X4, X9, 0x8
	0x01EC68F4 MOVZ W5, 0x1
	0x01EC68F8 MOV X0, X19
	0x01EC68FC BL 0x1EC69A0
	0x01EC6900 CMP W20, 0x1
	0x01EC6904 B.LT 0x1EC6990
	0x01EC6908 LDR X8, [X19 + 0x108]
	0x01EC690C CBZ X8, 0x1EC699C
	0x01EC6910 LDRB W9, [X8 + 0x18]
	0x01EC6914 CBNZ W9, 0x1EC6990
	0x01EC6918 LDR X8, [X8 + 0x38]
	0x01EC691C CBZ X8, 0x1EC699C
	0x01EC6920 LDR X19, [X8 + 0x68]
	0x01EC6924 CBZ X19, 0x1EC699C
	0x01EC6928 LDR X8, [X19 + 0x8]
	0x01EC692C CBZ X8, 0x1EC699C
	0x01EC6930 LDR W2, [X8 + 0xC]
	0x01EC6934 ADRP X8, 0x2239000
	0x01EC6938 LDR X8, [X8 + 0xC50]
	0x01EC693C CMP W2, 0x0
	0x01EC6940 CSET W0, GT
	0x01EC6944 LDR X1, [X8]
	0x01EC6948 ADRP X8, 0x2239000
	0x01EC694C LDR X8, [X8 + 0xC40]
	0x01EC6950 LDR X3, [X8]
	0x01EC6954 BL 0x21819F4
	0x01EC6958 LDR X8, [X19 + 0x8]
	0x01EC695C ADRP X9, 0x2239000
	0x01EC6960 MOV X2, X31
	0x01EC6964 LDR W8, [X8 + 0x14]
	0x01EC6968 LDR X9, [X9 + 0xC48]
	0x01EC696C ANDS W31, W8, 0x100
	0x01EC6970 LDR X1, [X9]
	0x01EC6974 CSET W0, EQ
	0x01EC6978 BL 0x1E3BA60
	0x01EC697C LDR X8, [X19 + 0x8]
	0x01EC6980 LDR W9, [X8 + 0x14]
	0x01EC6984 STR W31, [X8 + 0xC]
	0x01EC6988 ORR W9, W9, 0x100
	0x01EC698C STR W9, [X8 + 0x14]
	0x01EC6990 LDP X20, X19, [X31 + 0x10]
	0x01EC6994 LDR X30, [X31], #0x20
	0x01EC6998 RET
	0x01EC699C BL 0x1C16F20
	0x01EC69A0 SUB X31, X31, 0x70
	0x01EC69A4 STP X29, X30, [X31 + 0x10]
	0x01EC69A8 STP X28, X27, [X31 + 0x20]
	0x01EC69AC STP X26, X25, [X31 + 0x30]
	0x01EC69B0 STP X24, X23, [X31 + 0x40]
	0x01EC69B4 STP X22, X21, [X31 + 0x50]
	0x01EC69B8 STP X20, X19, [X31 + 0x60]
	0x01EC69BC ADRP X23, 0x2513000
	0x01EC69C0 LDRB W8, [X23 + 0x484]
	0x01EC69C4 MOV W25, W5
	0x01EC69C8 MOV X20, X4
	0x01EC69CC MOV W24, W3

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2514000
	008 Move W8, [X20+1148]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2239000
	015 Move X0, [X0+1984]
	016 Call 0x1C17CF4
	017 Move X0, 0x222E000
	018 Move X0, [X0+1448]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1148], W8
	022 Move X0, X19
	023 Call Simulation.get_HasRuntimeConfig, X0
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {75}
	028 Move X20, [X19+104]
	029 Compare X20, 0
	030 JumpIfEqual {146}
	031 Move X21, 0x2239000
	032 Move X8, [X20]
	033 Move X21, [X21+1984]
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Move X1, [X21]
	036 Compare X9, 0
	037 JumpIfEqual {44}
	038 Move X10, [X8+176]
	039 Add X10, X10, 8
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Subtract X9, X9, 1
	043 Add X10, X10, 16
	044 Move X0, X20
	045 Move W2, W31
	046 Call 0x1C5D788
	047 NotImplemented "Instruction LDRSW not yet implemented."
	048 Add X8, X8, X9
	049 Add X0, X8, 312
	050 Move X8, [X0]
	051 Move X1, [X0+8]
	052 Move X0, X20
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {75}
	058 Move X20, [X19+104]
	059 Compare X20, 0
	060 JumpIfEqual {146}
	061 Move X8, [X20]
	062 Move X1, [X21]
	063 NotImplemented "Instruction LDRH not yet implemented."
	064 Compare X9, 0
	065 JumpIfEqual {72}
	066 Move X10, [X8+176]
	067 Add X10, X10, 8
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Subtract X9, X9, 1
	071 Add X10, X10, 16
	072 Move W2, 9
	073 Move X0, X20
	074 Call 0x1C5D788
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X30, [X31+8]
	080 Move W0, W31
	081 Move V8, [X31+48]
	082 Return X0
	083 Move W9, [X10]
	084 Add W9, W9, 9
	085 Add X8, X8, W9
	086 Add X0, X8, 312
	087 Move X8, [X0]
	088 Move X1, [X0+8]
	089 Move X0, X20
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move X0, X19
	092 Move V8, V1
	093 Call Simulation.get_RuntimeConfigPtr, X0
	094 Move X8, [X19]
	095 Move W21, [X0]
	096 Move X0, X19
	097 Move X9, [X8+584]
	098 Move X1, [X8+592]
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move X20, X0
	101 Move X0, X19
	102 Call Simulation.get_RuntimeConfigPtr, X0
	103 Move X9, 0x222E000
	104 Move X9, [X9+1448]
	105 Move X8, X0
	106 Move W22, [X8]
	107 Move X0, [X9]
	108 Move W9, [X0+224]
	109 Compare W9, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 NotImplemented "Instruction SCVTF not yet implemented."
	113 Move X8, 0x7FF00000
	114 Multiply D0, D8, D0
	115 Move D1, X8
	116 Move W9, 0x80000000
	117 NotImplemented "Instruction FCVTZS not yet implemented."
	118 NotImplemented "Instruction FCMP not yet implemented."
	119 NotImplemented "Instruction CSEL not yet implemented."
	120 Add W1, W22, W20
	121 Move X2, X31
	122 Call Math.Min, X0, X1
	123 Move W21, [X19+72]
	124 Move W20, W0
	125 Move X0, X19
	126 Call Simulation.get_TickStride, X0
	127 Subtract W8, W20, W21
	128 NotImplemented "Instruction SDIV not yet implemented."
	129 Move W1, W31
	130 Move X2, X31
	131 Call Math.Max, X0, X1
	132 Move W20, W0
	133 Move X0, X19
	134 Call Simulation.get_RuntimeConfigPtr, X0
	135 Move W1, [X0]
	136 Move W0, W20
	137 Move X20, [X31+32]
	138 Move X19, [X31+40]
	139 Move X22, [X31+16]
	140 Move X21, [X31+24]
	141 Move X30, [X31+8]
	142 Move X2, X31
	143 Move V8, [X31+48]
	144 Call Math.Min, X0, X1
	145 Return X0
	146 Call 0x1C17F20

Method: System.Int32 Update(System.Double dt)

Disassembly:
	0x01EC69D0 MOV X19, X2
	0x01EC69D4 MOV X22, X1
	0x01EC69D8 MOV X21, X0
	0x01EC69DC TBNZ X8, 0x0, 0x1EC6A0C
	0x01EC69E0 ADRP X0, 0x2231000
	0x01EC69E4 LDR X0, [X0 + 0xF48]
	0x01EC69E8 BL 0x1C16CF4
	0x01EC69EC ADRP X0, 0x2238000
	0x01EC69F0 LDR X0, [X0 + 0xB58]
	0x01EC69F4 BL 0x1C16CF4
	0x01EC69F8 ADRP X0, 0x2238000
	0x01EC69FC LDR X0, [X0 + 0xB60]
	0x01EC6A00 BL 0x1C16CF4
	0x01EC6A04 MOVZ W8, 0x1
	0x01EC6A08 STRB W8, [X23 + 0x484]
	0x01EC6A0C STR X31, [X31 + 0x8]
	0x01EC6A10 LDR W26, [X19 + 0x50]
	0x01EC6A14 MOV X0, X19
	0x01EC6A18 MOV X1, X31
	0x01EC6A1C BL 0x1EF9F9C
	0x01EC6A20 MOV X0, X21
	0x01EC6A24 BL 0x1EBDF30
	0x01EC6A28 LDR W8, [X22]
	0x01EC6A2C CMP W8, 0x1
	0x01EC6A30 B.LT 0x1EC6BBC
	0x01EC6A34 ADRP X27, 0x2238000
	0x01EC6A38 LDR X27, [X27 + 0xB60]
	0x01EC6A3C MOV W23, W0
	0x01EC6A40 ADD W29, W26, W24
	0x01EC6A44 LDR X24, [X22 + 0x8]
	0x01EC6A48 LDR W26, [X19 + 0x50]
	0x01EC6A4C STR X31, [X31 + 0x8]
	0x01EC6A50 TBZ X23, 0x0, 0x1EC6A8C
	0x01EC6A54 CBZ X24, 0x1EC6BFC
	0x01EC6A58 LDR X8, [X24 + 0x8]
	0x01EC6A5C LDRB W9, [X8 + 0x14]
	0x01EC6A60 ANDS W31, W9, 0x30
	0x01EC6A64 B.EQ 0x1EC6A8C
	0x01EC6A68 LDR W1, [X8 + 0x18]
	0x01EC6A6C ADRP X8, 0x2231000
	0x01EC6A70 LDR X8, [X8 + 0xF48]
	0x01EC6A74 ADD X0, X31, 0x8
	0x01EC6A78 LDR X2, [X8]
	0x01EC6A7C BL 0x2437428
	0x01EC6A80 LDR X8, [X24 + 0x8]
	0x01EC6A84 CBZ X8, 0x1EC6BFC
	0x01EC6A88 STR W31, [X8 + 0x18]
	0x01EC6A8C MOV X0, X24
	0x01EC6A90 MOV X1, X19
	0x01EC6A94 MOV X2, X31
	0x01EC6A98 BL 0x1ED9CB4
	0x01EC6A9C TBNZ X0, 0x1F, 0x1EC6AB0
	0x01EC6AA0 LDP W8, W9, [X19 + 0x50]
	0x01EC6AA4 ADD W8, W8, W0
	0x01EC6AA8 CMP W8, W9
	0x01EC6AAC B.LE 0x1EC6B50
	0x01EC6AB0 MOV X25, X31
	0x01EC6AB4 MOVZ W26, 0x6
	0x01EC6AB8 LDRB W8, [X31 + 0x8]
	0x01EC6ABC CBZ W8, 0x1EC6ADC
	0x01EC6AC0 CBZ X24, 0x1EC6BFC
	0x01EC6AC4 LDR X1, [X27]
	0x01EC6AC8 LDR X28, [X24 + 0x8]
	0x01EC6ACC ADD X0, X31, 0x8
	0x01EC6AD0 BL 0x2437440
	0x01EC6AD4 CBZ X28, 0x1EC6BFC
	0x01EC6AD8 STR W0, [X28 + 0x18]
	0x01EC6ADC CBNZ X25, 0x1EC6C00
	0x01EC6AE0 CBZ W26, 0x1EC6AEC
	0x01EC6AE4 CMP W26, 0x8
	0x01EC6AE8 B.NE 0x1EC6BB4
	0x01EC6AEC LDR X8, [X21 + 0x108]
	0x01EC6AF0 CBZ X8, 0x1EC6BFC
	0x01EC6AF4 LDRB W9, [X8 + 0x18]
	0x01EC6AF8 MOV X0, X22
	0x01EC6AFC ADD W9, W9, 0x1
	0x01EC6B00 STRB W9, [X8 + 0x18]
	0x01EC6B04 LDR X1, [X22 + 0x8]
	0x01EC6B08 BL 0x1EBD4F8
	0x01EC6B0C CBZ X24, 0x1EC6BFC
	0x01EC6B10 LDR X8, [X24 + 0x8]
	0x01EC6B14 LDRB W8, [X8 + 0x14]
	0x01EC6B18 TBNZ X8, 0x3, 0x1EC6B2C
	0x01EC6B1C MOV X0, X20
	0x01EC6B20 MOV X1, X24
	0x01EC6B24 BL 0x1EBD3F4
	0x01EC6B28 B 0x1EC6B3C
	0x01EC6B2C MOV X0, X21
	0x01EC6B30 MOV X1, X24
	0x01EC6B34 MOV X2, X31
	0x01EC6B38 BL 0x1EDA078
	0x01EC6B3C LDR W8, [X22]
	0x01EC6B40 MOV W25, W31
	0x01EC6B44 CMP W8, 0x0
	0x01EC6B48 B.GT 0x1EC6A44
	0x01EC6B4C B 0x1EC6BBC
	0x01EC6B50 MOV X0, X24
	0x01EC6B54 MOV X1, X19
	0x01EC6B58 MOV X2, X31
	0x01EC6B5C BL 0x1ED9C5C
	0x01EC6B60 LDR W8, [X19 + 0x50]
	0x01EC6B64 CMP W8, W29
	0x01EC6B68 CSET W8, LT
	0x01EC6B6C ORR W8, W25, W8, 0x0
	0x01EC6B70 TBZ X8, 0x0, 0x1EC6B80
	0x01EC6B74 MOV X25, X31
	0x01EC6B78 MOVZ W26, 0x8
	0x01EC6B7C B 0x1EC6AB8
	0x01EC6B80 MOV X25, X31
	0x01EC6B84 STR W26, [X19 + 0x50]
	0x01EC6B88 B 0x1EC6AB4
	0x01EC6B8C B 0x1EC6B90
	0x01EC6B90 MOV X26, X0
	0x01EC6B94 CMP W1, 0x1
	0x01EC6B98 B.NE 0x1EC6C08
	0x01EC6B9C MOV X0, X26
	0x01EC6BA0 BL 0x3EB1AD0
	0x01EC6BA4 LDR X25, [X0]
	0x01EC6BA8 BL 0x3EB1AE0
	0x01EC6BAC MOV W26, W31
	0x01EC6BB0 B 0x1EC6AB8
	0x01EC6BB4 CMP W26, 0x6
	0x01EC6BB8 B.NE 0x1EC6BDC
	0x01EC6BBC LDR X8, [X21 + 0x108]
	0x01EC6BC0 CBZ X8, 0x1EC6BFC
	0x01EC6BC4 LDRB W0, [X8 + 0x18]
	0x01EC6BC8 MOV X1, X31
	0x01EC6BCC BL 0x1E32430
	0x01EC6BD0 MOV X0, X19
	0x01EC6BD4 MOV X1, X31
	0x01EC6BD8 BL 0x1EF9F9C
	0x01EC6BDC LDP X20, X19, [X31 + 0x60]
	0x01EC6BE0 LDP X22, X21, [X31 + 0x50]
	0x01EC6BE4 LDP X24, X23, [X31 + 0x40]
	0x01EC6BE8 LDP X26, X25, [X31 + 0x30]
	0x01EC6BEC LDP X28, X27, [X31 + 0x20]
	0x01EC6BF0 LDP X29, X30, [X31 + 0x10]
	0x01EC6BF4 ADD X31, X31, 0x70
	0x01EC6BF8 RET
	0x01EC6BFC BL 0x1C16F20
	0x01EC6C00 MOV X0, X25
	0x01EC6C04 BL 0x1C16F18
	0x01EC6C08 MOV X25, X31
	0x01EC6C0C B 0x1EC6C14
	0x01EC6C10 MOV X26, X0
	0x01EC6C14 LDRB W8, [X31 + 0x8]
	0x01EC6C18 CBNZ W8, 0x1EC6C28
	0x01EC6C1C CBNZ X25, 0x1EC6C50
	0x01EC6C20 MOV X0, X26
	0x01EC6C24 BL 0x1D2C690
	0x01EC6C28 CBNZ X24, 0x1EC6C30
	0x01EC6C2C BL 0x1C16F20
	0x01EC6C30 LDR X19, [X24 + 0x8]
	0x01EC6C34 LDR X1, [X27]
	0x01EC6C38 ADD X0, X31, 0x8
	0x01EC6C3C BL 0x2437440
	0x01EC6C40 CBNZ X19, 0x1EC6C48
	0x01EC6C44 BL 0x1C16F20
	0x01EC6C48 STR W0, [X19 + 0x18]
	0x01EC6C4C CBZ X25, 0x1EC6C20
	0x01EC6C50 MOV X0, X25
	0x01EC6C54 BL 0x1C16F18
	0x01EC6C58 BL 0x1990590
	0x01EC6C5C STR X30, [X31 - 0x30]!
	0x01EC6C60 STP X22, X21, [X31 + 0x10]
	0x01EC6C64 STP X20, X19, [X31 + 0x20]
	0x01EC6C68 ADRP X19, 0x2513000
	0x01EC6C6C LDRB W8, [X19 + 0x481]
	0x01EC6C70 MOV X20, X0
	0x01EC6C74 TBNZ X8, 0x0, 0x1EC6C8C
	0x01EC6C78 ADRP X0, 0x2238000
	0x01EC6C7C LDR X0, [X0 + 0xA90]
	0x01EC6C80 BL 0x1C16CF4
	0x01EC6C84 MOVZ W8, 0x1
	0x01EC6C88 STRB W8, [X19 + 0x481]
	0x01EC6C8C LDR X19, [X20 + 0x40]
	0x01EC6C90 CBZ X19, 0x1EC6D88
	0x01EC6C94 ADRP X22, 0x2238000
	0x01EC6C98 LDR X8, [X19]
	0x01EC6C9C LDR X22, [X22 + 0xA90]
	0x01EC6CA0 LDRH W9, [X8 + 0x12E]
	0x01EC6CA4 LDR X1, [X22]
	0x01EC6CA8 CBZ X9, 0x1EC6CCC
	0x01EC6CAC LDR X10, [X8 + 0xB0]
	0x01EC6CB0 ADD X10, X10, 0x8
	0x01EC6CB4 LDUR X11, [X10 - 0x8]
	0x01EC6CB8 CMP X11, X1
	0x01EC6CBC B.EQ 0x1EC6CDC
	0x01EC6CC0 SUBS X9, X9, 0x1
	0x01EC6CC4 ADD X10, X10, 0x10
	0x01EC6CC8 B.NE 0x1EC6CB4
	0x01EC6CCC MOVZ W2, 0x16
	0x01EC6CD0 MOV X0, X19
	0x01EC6CD4 BL 0x1C5C788
	0x01EC6CD8 B 0x1EC6CEC
	0x01EC6CDC LDR W9, [X10]
	0x01EC6CE0 ADD W9, W9, 0x16
	0x01EC6CE4 ADD X8, X8, W9, 0x4, SXTW
	0x01EC6CE8 ADD X0, X8, 0x138
	0x01EC6CEC LDP X8, X1, [X0]
	0x01EC6CF0 MOV X0, X19
	0x01EC6CF4 BLR X8
	0x01EC6CF8 TBZ X0, 0x0, 0x1EC6D78
	0x01EC6CFC LDR X0, [X20 + 0xA8]
	0x01EC6D00 CBZ X0, 0x1EC6D8C
	0x01EC6D04 MOV X1, X31
	0x01EC6D08 BL 0x1ED4BE0
	0x01EC6D0C MOV X19, X31
	0x01EC6D10 LDR X20, [X20 + 0x40]
	0x01EC6D14 CBZ X20, 0x1EC6D88
	0x01EC6D18 LDR X8, [X20]
	0x01EC6D1C LDR X1, [X22]
	0x01EC6D20 LDRH W9, [X8 + 0x12E]
	0x01EC6D24 CBZ X9, 0x1EC6D48
	0x01EC6D28 LDR X10, [X8 + 0xB0]
	0x01EC6D2C ADD X10, X10, 0x8
	0x01EC6D30 LDUR X11, [X10 - 0x8]
	0x01EC6D34 CMP X11, X1
	0x01EC6D38 B.EQ 0x1EC6D58
	0x01EC6D3C SUBS X9, X9, 0x1
	0x01EC6D40 ADD X10, X10, 0x10
	0x01EC6D44 B.NE 0x1EC6D30
	0x01EC6D48 MOVZ W2, 0x17
	0x01EC6D4C MOV X0, X20
	0x01EC6D50 BL 0x1C5C788
	0x01EC6D54 B 0x1EC6D68
	0x01EC6D58 LDR W9, [X10]
	0x01EC6D5C ADD W9, W9, 0x17
	0x01EC6D60 ADD X8, X8, W9, 0x4, SXTW
	0x01EC6D64 ADD X0, X8, 0x138
	0x01EC6D68 LDP X8, X1, [X0]
	0x01EC6D6C MOV X0, X20
	0x01EC6D70 BLR X8
	0x01EC6D74 CBNZ X19, 0x1EC6D90
	0x01EC6D78 LDP X20, X19, [X31 + 0x20]
	0x01EC6D7C LDP X22, X21, [X31 + 0x10]
	0x01EC6D80 LDR X30, [X31], #0x30
	0x01EC6D84 RET
	0x01EC6D88 BL 0x1C16F20
	0x01EC6D8C BL 0x1C16F20
	0x01EC6D90 MOV X0, X19
	0x01EC6D94 BL 0x1C16F18
	0x01EC6D98 CMP W1, 0x1
	0x01EC6D9C MOV X21, X0
	0x01EC6DA0 B.NE 0x1EC6DB8
	0x01EC6DA4 MOV X0, X21
	0x01EC6DA8 BL 0x3EB1AD0
	0x01EC6DAC LDR X19, [X0]
	0x01EC6DB0 BL 0x3EB1AE0
	0x01EC6DB4 B 0x1EC6D10
	0x01EC6DB8 MOV X19, X31
	0x01EC6DBC B 0x1EC6DC4
	0x01EC6DC0 MOV X21, X0
	0x01EC6DC4 LDR X20, [X20 + 0x40]
	0x01EC6DC8 CBNZ X20, 0x1EC6DD0
	0x01EC6DCC BL 0x1C16F20
	0x01EC6DD0 LDR X8, [X20]
	0x01EC6DD4 LDR X1, [X22]
	0x01EC6DD8 LDRH W9, [X8 + 0x12E]
	0x01EC6DDC CBZ X9, 0x1EC6E00
	0x01EC6DE0 LDR X10, [X8 + 0xB0]
	0x01EC6DE4 ADD X10, X10, 0x8
	0x01EC6DE8 LDUR X11, [X10 - 0x8]
	0x01EC6DEC CMP X11, X1
	0x01EC6DF0 B.EQ 0x1EC6E10
	0x01EC6DF4 SUBS X9, X9, 0x1
	0x01EC6DF8 ADD X10, X10, 0x10
	0x01EC6DFC B.NE 0x1EC6DE8
	0x01EC6E00 MOVZ W2, 0x17
	0x01EC6E04 MOV X0, X20
	0x01EC6E08 BL 0x1C5C788
	0x01EC6E0C B 0x1EC6E20
	0x01EC6E10 LDR W9, [X10]
	0x01EC6E14 ADD W9, W9, 0x17
	0x01EC6E18 ADD X8, X8, W9, 0x4, SXTW
	0x01EC6E1C ADD X0, X8, 0x138
	0x01EC6E20 LDP X8, X1, [X0]
	0x01EC6E24 MOV X0, X20
	0x01EC6E28 BLR X8
	0x01EC6E2C CBNZ X19, 0x1EC6E38
	0x01EC6E30 MOV X0, X21
	0x01EC6E34 BL 0x1D2C690
	0x01EC6E38 MOV X0, X19
	0x01EC6E3C BL 0x1C16F18
	0x01EC6E40 BL 0x1990590
	0x01EC6E44 SUB X31, X31, 0xC0
	0x01EC6E48 STP X29, X30, [X31 + 0x60]
	0x01EC6E4C STP X28, X27, [X31 + 0x70]
	0x01EC6E50 STP X26, X25, [X31 + 0x80]
	0x01EC6E54 STP X24, X23, [X31 + 0x90]
	0x01EC6E58 STP X22, X21, [X31 + 0xA0]
	0x01EC6E5C STP X20, X19, [X31 + 0xB0]
	0x01EC6E60 ADRP X22, 0x2513000
	0x01EC6E64 ADRP X21, 0x2239000
	0x01EC6E68 LDRB W8, [X22 + 0x483]
	0x01EC6E6C LDR X21, [X21 + 0xC58]
	0x01EC6E70 MOV W20, W1
	0x01EC6E74 MOV X19, X0
	0x01EC6E78 TBNZ X8, 0x0, 0x1EC6E9C
	0x01EC6E7C ADRP X0, 0x2238000
	0x01EC6E80 LDR X0, [X0 + 0xA90]
	0x01EC6E84 BL 0x1C16CF4
	0x01EC6E88 ADRP X0, 0x2239000
	0x01EC6E8C LDR X0, [X0 + 0xC58]
	0x01EC6E90 BL 0x1C16CF4
	0x01EC6E94 MOVZ W8, 0x1
	0x01EC6E98 STRB W8, [X22 + 0x483]
	0x01EC6E9C LDR X0, [X21]
	0x01EC6EA0 MOV X1, X31
	0x01EC6EA4 STP X31, X31, [X31 + 0x20]
	0x01EC6EA8 BL 0x1E32108
	0x01EC6EAC LDR X0, [X19 + 0x130]
	0x01EC6EB0 MOV X1, X31
	0x01EC6EB4 BL 0x1EFF18C
	0x01EC6EB8 STP X0, X1, [X31 + 0x50]
	0x01EC6EBC ADD X0, X31, 0x50
	0x01EC6EC0 MOV X1, X31
	0x01EC6EC4 BL 0x1EFD1D8
	0x01EC6EC8 TBZ X0, 0x0, 0x1EC70F4
	0x01EC6ECC ADRP X29, 0x2238000
	0x01EC6ED0 LDR X29, [X29 + 0xA90]
	0x01EC6ED4 ADD X8, X31, 0x30
	0x01EC6ED8 ADD X28, X8, 0x8
	0x01EC6EDC ADD X0, X31, 0x50
	0x01EC6EE0 MOV X1, X31
	0x01EC6EE4 BL 0x1EFD150
	0x01EC6EE8 LDR W8, [X0 + 0x40]
	0x01EC6EEC CMP W8, 0x3
	0x01EC6EF0 B.NE 0x1EC70E4
	0x01EC6EF4 ADD X0, X31, 0x50
	0x01EC6EF8 MOV X1, X31
	0x01EC6EFC STP X31, X31, [X31 + 0x30]
	0x01EC6F00 STR X31, [X31 + 0x40]
	0x01EC6F04 BL 0x1EFD150
	0x01EC6F08 ADRP X8, 0x2513000
	0x01EC6F0C LDRB W8, [X8 + 0x4BB]
	0x01EC6F10 MOV X22, X0
	0x01EC6F14 CBNZ W8, 0x1EC6F30
	0x01EC6F18 ADRP X0, 0x2239000
	0x01EC6F1C LDR X0, [X0 + 0xA60]
	0x01EC6F20 BL 0x1C16CF4
	0x01EC6F24 ADRP X8, 0x2513000
	0x01EC6F28 MOVZ W9, 0x1
	0x01EC6F2C STRB W9, [X8 + 0x4BB]
	0x01EC6F30 LDR X0, [X19 + 0xB0]
	0x01EC6F34 CBZ X0, 0x1EC711C
	0x01EC6F38 ADRP X9, 0x2239000
	0x01EC6F3C LDR W8, [X22 + 0x18]
	0x01EC6F40 LDR X9, [X9 + 0xA60]
	0x01EC6F44 SBFM W1, W8, 0x10, 0x1F
	0x01EC6F48 LDR X2, [X9]
	0x01EC6F4C BL 0x2A135EC
	0x01EC6F50 CBZ X0, 0x1EC711C
	0x01EC6F54 MOV X23, X0
	0x01EC6F58 LDR X0, [X0 + 0xD8]
	0x01EC6F5C LDR X1, [X22 + 0x18]
	0x01EC6F60 MOV X2, X31
	0x01EC6F64 BL 0x1EFC3FC
	0x01EC6F68 ANDS W31, W0, 0x1
	0x01EC6F6C CSEL X22, X23, X31, NE
	0x01EC6F70 STR X22, [X31 + 0x48]
	0x01EC6F74 CBZ X22, 0x1EC711C
	0x01EC6F78 MOV X27, X22
	0x01EC6F7C LDR W8, [X27 + 0x48]!
	0x01EC6F80 CMP W8, 0x1
	0x01EC6F84 B.LT 0x1EC70AC
	0x01EC6F88 MOV W26, W31
	0x01EC6F8C LDR X23, [X22 + 0x50]
	0x01EC6F90 STR X23, [X31 + 0x28]
	0x01EC6F94 CBZ X23, 0x1EC711C
	0x01EC6F98 LDR X24, [X23 + 0x8]
	0x01EC6F9C CBZ X24, 0x1EC711C
	0x01EC6FA0 LDR W8, [X24]
	0x01EC6FA4 LDR W21, [X24 + 0x14]
	0x01EC6FA8 CMP W8, W20
	0x01EC6FAC B.LE 0x1EC6FB4
	0x01EC6FB0 TBZ X21, 0x7, 0x1EC70B0
	0x01EC6FB4 UBFM W8, W21, 0x3, 0x3
	0x01EC6FB8 STRB W8, [X31 + 0x20]
	0x01EC6FBC TBNZ X21, 0x3, 0x1EC6FD4
	0x01EC6FC0 LDR X8, [X22 + 0x38]
	0x01EC6FC4 LDR X9, [X23]
	0x01EC6FC8 ADD X8, X8, 0x1
	0x01EC6FCC CMP X9, X8
	0x01EC6FD0 B.NE 0x1EC70B0
	0x01EC6FD4 TBNZ X21, 0x6, 0x1EC708C
	0x01EC6FD8 LDR X25, [X19 + 0x40]
	0x01EC6FDC CBZ X25, 0x1EC7120
	0x01EC6FE0 LDR X8, [X25]
	0x01EC6FE4 LDR X1, [X29]
	0x01EC6FE8 LDRH W9, [X8 + 0x12E]
	0x01EC6FEC CBZ X9, 0x1EC7010
	0x01EC6FF0 LDR X10, [X8 + 0xB0]
	0x01EC6FF4 ADD X10, X10, 0x8
	0x01EC6FF8 LDUR X11, [X10 - 0x8]
	0x01EC6FFC CMP X11, X1
	0x01EC7000 B.EQ 0x1EC7020
	0x01EC7004 SUBS X9, X9, 0x1
	0x01EC7008 ADD X10, X10, 0x10
	0x01EC700C B.NE 0x1EC6FF8
	0x01EC7010 MOVZ W2, 0x5
	0x01EC7014 MOV X0, X25
	0x01EC7018 BL 0x1C5C788
	0x01EC701C B 0x1EC7030
	0x01EC7020 LDR W9, [X10]
	0x01EC7024 ADD W9, W9, 0x5
	0x01EC7028 ADD X8, X8, W9, 0x4, SXTW
	0x01EC702C ADD X0, X8, 0x138
	0x01EC7030 LDP X8, X2, [X0]
	0x01EC7034 MOV X0, X25
	0x01EC7038 MOV X1, X24
	0x01EC703C BLR X8
	0x01EC7040 CMP W0, 0x2
	0x01EC7044 B.NE 0x1EC708C
	0x01EC7048 AND W8, W21, 0x8
	0x01EC704C UBFM W8, W8, 0x3, 0x1F
	0x01EC7050 CBZ W8, 0x1EC70B0
	0x01EC7054 MOV X0, X27
	0x01EC7058 MOV X1, X23
	0x01EC705C BL 0x1EBD4F8
	0x01EC7060 LDR X8, [X31 + 0x40]
	0x01EC7064 ADD X9, X8, 0x18
	0x01EC7068 CMP X8, 0x0
	0x01EC706C STP X8, X31, [X23 + 0x10]
	0x01EC7070 CSEL X8, X28, X9, EQ
	0x01EC7074 STR X23, [X8]
	0x01EC7078 LDR W8, [X31 + 0x30]
	0x01EC707C STR X23, [X31 + 0x40]
	0x01EC7080 ADD W26, W8, 0x1
	0x01EC7084 STR W26, [X31 + 0x30]
	0x01EC7088 B 0x1EC709C
	0x01EC708C ADD X1, X31, 0x48
	0x01EC7090 ADD X2, X31, 0x20
	0x01EC7094 MOV X0, X19
	0x01EC7098 BL 0x1EC71C4
	0x01EC709C LDR W8, [X22 + 0x48]
	0x01EC70A0 CMP W8, 0x0
	0x01EC70A4 B.GT 0x1EC6F8C
	0x01EC70A8 B 0x1EC70B0
	0x01EC70AC MOV W26, W31
	0x01EC70B0 CMP W26, 0x1
	0x01EC70B4 B.LT 0x1EC70E4
	0x01EC70B8 LDR X8, [X27 + 0x10]
	0x01EC70BC LDR V0, [X27]
	0x01EC70C0 ADD X0, X31, 0x30
	0x01EC70C4 ADD X1, X31, 0x0
	0x01EC70C8 STR X8, [X31 + 0x10]
	0x01EC70CC STR V0, [X31]
	0x01EC70D0 BL 0x1EBD5A0
	0x01EC70D4 LDR X8, [X31 + 0x40]
	0x01EC70D8 LDR V0, [X31 + 0x3]
	0x01EC70DC STR X8, [X27 + 0x10]
	0x01EC70E0 STR V0, [X27]
	0x01EC70E4 ADD X0, X31, 0x50
	0x01EC70E8 MOV X1, X31
	0x01EC70EC BL 0x1EFD1D8

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], D9
	003 Move [X31+56], D8
	004 Move [X31+64], X30
	005 Move [X31+80], X24
	006 Move [X31+88], X23
	007 Move [X31+96], X22
	008 Move [X31+104], X21
	009 Move [X31+112], X20
	010 Move [X31+120], X19
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X22+40]
	013 Move X20, 0x2514000
	014 Move V8, V0
	015 Move X19, X0
	016 Move [X31+40], X8
	017 Move W8, [X20+1149]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {39}
	022 Move X0, 0x2239000
	023 Move X0, [X0+1984]
	024 Call 0x1C17CF4
	025 Move X0, 0x2235000
	026 Move X0, [X0+3176]
	027 Call 0x1C17CF4
	028 Move X0, 0x223A000
	029 Move X0, [X0+3080]
	030 Call 0x1C17CF4
	031 Move X0, 0x223A000
	032 Move X0, [X0+3088]
	033 Call 0x1C17CF4
	034 Move X0, 0x223A000
	035 Move X0, [X0+3096]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+1149], W8
	039 NotImplemented "Instruction FCMP not yet implemented."
	040 Move W20, W31
	041 Move W8, [X19+48]
	042 Compare W8, 0
	043 JumpIfNotEqual {392}
	044 Move X8, 0x223A000
	045 Move X8, [X8+3080]
	046 Move X1, X31
	047 Move X0, [X8]
	048 Call EngineProfiler.Begin, X0
	049 Move X8, [X19]
	050 Move X0, X19
	051 Move X9, [X8+840]
	052 Move X1, [X8+848]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X0, X19
	055 Call Simulation.NetworkRecv, X0
	056 Move X0, X19
	057 Call Simulation.get_HasRuntimeConfig, X0
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {173}
	062 Move X20, [X19+104]
	063 Compare X20, 0
	064 JumpIfEqual {407}
	065 Move X21, 0x2239000
	066 Move X8, [X20]
	067 Move X21, [X21+1984]
	068 NotImplemented "Instruction LDRH not yet implemented."
	069 Move X1, [X21]
	070 Compare X9, 0
	071 JumpIfEqual {78}
	072 Move X10, [X8+176]
	073 Add X10, X10, 8
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Subtract X9, X9, 1
	077 Add X10, X10, 16
	078 Move X0, X20
	079 Move W2, W31
	080 Call 0x1C5D788
	081 NotImplemented "Instruction LDRSW not yet implemented."
	082 Add X8, X8, X9
	083 Add X0, X8, 312
	084 Move X8, [X0]
	085 Move X1, [X0+8]
	086 Move X0, X20
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {173}
	092 Move X20, [X19+104]
	093 Compare X20, 0
	094 JumpIfEqual {407}
	095 Move X8, [X20]
	096 Move X1, [X21]
	097 NotImplemented "Instruction LDRH not yet implemented."
	098 Compare X9, 0
	099 JumpIfEqual {106}
	100 Move X10, [X8+176]
	101 Add X10, X10, 8
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Subtract X9, X9, 1
	105 Add X10, X10, 16
	106 Move W2, 5
	107 Move X0, X20
	108 Call 0x1C5D788
	109 Move W9, [X10]
	110 Add W9, W9, 5
	111 Add X8, X8, W9
	112 Add X0, X8, 312
	113 Move X8, [X0]
	114 Move X1, [X0+8]
	115 Move X0, X20
	116 Move V0, V8
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move X0, [X19+56]
	119 Compare X0, 0
	120 JumpIfEqual {407}
	121 Move W8, [X0+136]
	122 Compare W8, 0
	123 JumpIfNotEqual {126}
	124 Move X1, X31
	125 Call NetworkRunner.OnRuntimeConfigReady, X0
	126 Move X0, X19
	127 Call Simulation.get_IsServer, X0
	128 Move TEMP, X0
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfNotEqual {173}
	132 Move X20, 0x2514000
	133 Move W8, [X20+1210]
	134 Compare W8, 0
	135 JumpIfNotEqual {141}
	136 Move X0, 0x2239000
	137 Move X0, [X0+1984]
	138 Call 0x1C17CF4
	139 Move W8, 1
	140 Move [X20+1210], W8
	141 Move X0, X19
	142 Call Simulation.get_IsClient, X0
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfEqual {173}
	147 Move X20, [X19+104]
	148 Compare X20, 0
	149 JumpIfEqual {407}
	150 Move X8, [X20]
	151 Move X1, [X21]
	152 NotImplemented "Instruction LDRH not yet implemented."
	153 Compare X9, 0
	154 JumpIfEqual {161}
	155 Move X10, [X8+176]
	156 Add X10, X10, 8
	157 NotImplemented "Instruction LDUR not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Subtract X9, X9, 1
	160 Add X10, X10, 16
	161 Move W2, 9
	162 Move X0, X20
	163 Call 0x1C5D788
	164 Move W9, [X10]
	165 Add W9, W9, 9
	166 Add X8, X8, W9
	167 Add X0, X8, 312
	168 Move X8, [X0]
	169 Move X1, [X0+8]
	170 Move X0, X20
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Move [X19+200], D1
	173 Move X0, X19
	174 Call Simulation.CalculateForwardTicks, X0
	175 Move W20, W0
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move W8, [X19+49]
	178 Compare W8, 0
	179 JumpIfNotEqual {233}
	180 Move X0, X19
	181 Move W1, W20
	182 Call Simulation.InvokeOnBeforeSimulation, X0, X1
	183 Move X8, 0x223A000
	184 Move X8, [X8+3088]
	185 Move X1, X31
	186 Move X0, [X8]
	187 Call EngineProfiler.Begin, X0
	188 Move X8, [X19]
	189 Move X0, X19
	190 Move X9, [X8+808]
	191 Move X1, [X8+816]
	192 NotImplemented "Instruction BLR not yet implemented."
	193 Move X0, X31
	194 Call EngineProfiler.End
	195 Move X0, X19
	196 Move W1, W31
	197 Move W2, W20
	198 Call Simulation.InvokeOnBeforeAllTicks, X0, X1, X2
	199 Move W21, W31
	200 Move X0, X19
	201 Call Simulation.get_IsServer, X0
	202 Add W8, W20, W21
	203 NotImplemented "Instruction CMP not yet implemented."
	204 NotImplemented "Instruction CSET not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 NotImplemented "Instruction CSET not yet implemented."
	207 And W4, W0, 1
	208 Move W1, 2
	209 Move X0, X19
	210 Call Simulation.StepSimulation, X0, X1, X2, X3, X4
	211 Subtract W21, W21, 1
	212 Add W31, W20, W21
	213 Move X0, X19
	214 Move W1, W31
	215 Move W2, W20
	216 Call Simulation.InvokeOnAfterAllTicks, X0, X1, X2
	217 Move X0, X19
	218 Call Simulation.InvokeOnAfterSimulation, X0
	219 Move X8, 0x223A000
	220 Move X8, [X8+3096]
	221 Move X1, X31
	222 Move X0, [X8]
	223 Call EngineProfiler.Begin, X0
	224 Move X8, [X19]
	225 Move X0, X19
	226 Move X9, [X8+856]
	227 Move X1, [X8+864]
	228 NotImplemented "Instruction BLR not yet implemented."
	229 Move X0, X31
	230 Call EngineProfiler.End
	231 Move X0, X19
	232 Call Simulation.PreparePackets, X0
	233 Move X8, [X19]
	234 Move X0, X19
	235 Move X9, [X8+792]
	236 Move X1, [X8+800]
	237 NotImplemented "Instruction BLR not yet implemented."
	238 Move X0, X19
	239 Call Simulation.NetworkSend, X0
	240 Move X0, X31
	241 Call EngineProfiler.End
	242 Move X8, [X19]
	243 Move X0, X19
	244 Move X9, [X8+728]
	245 Move X1, [X8+736]
	246 NotImplemented "Instruction BLR not yet implemented."
	247 Move X0, X19
	248 Call Simulation.get_HasRuntimeConfig, X0
	249 Move TEMP, X0
	250 And TEMP, TEMP, 1
	251 Compare TEMP, 1
	252 JumpIfNotEqual {392}
	253 Move X21, [X19+104]
	254 Compare X21, 0
	255 JumpIfEqual {407}
	256 Move X23, 0x2239000
	257 Move X8, [X21]
	258 Move X23, [X23+1984]
	259 NotImplemented "Instruction LDRH not yet implemented."
	260 Move X1, [X23]
	261 Compare X9, 0
	262 JumpIfEqual {269}
	263 Move X10, [X8+176]
	264 Add X10, X10, 8
	265 NotImplemented "Instruction LDUR not yet implemented."
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Subtract X9, X9, 1
	268 Add X10, X10, 16
	269 Move X0, X21
	270 Move W2, W31
	271 Call 0x1C5D788
	272 NotImplemented "Instruction LDRSW not yet implemented."
	273 Add X8, X8, X9
	274 Add X0, X8, 312
	275 Move X8, [X0]
	276 Move X1, [X0+8]
	277 Move X0, X21
	278 NotImplemented "Instruction BLR not yet implemented."
	279 Move TEMP, X0
	280 And TEMP, TEMP, 1
	281 Compare TEMP, 1
	282 JumpIfNotEqual {392}
	283 Move W8, [X19+76]
	284 NotImplemented "Instruction CMP not yet implemented."
	285 NotImplemented "Instruction CMP not yet implemented."
	286 Move V0, [X19+124]
	287 Move X21, [X19+104]
	288 Move [X19+140], S0
	289 Compare X21, 0
	290 JumpIfEqual {407}
	291 Move X8, [X21]
	292 Move X1, [X23]
	293 NotImplemented "Instruction LDRH not yet implemented."
	294 Compare X9, 0
	295 JumpIfEqual {302}
	296 Move X10, [X8+176]
	297 Add X10, X10, 8
	298 NotImplemented "Instruction LDUR not yet implemented."
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Subtract X9, X9, 1
	301 Add X10, X10, 16
	302 Move W2, 9
	303 Move X0, X21
	304 Call 0x1C5D788
	305 Move W9, [X10]
	306 Add W9, W9, 9
	307 Add X8, X8, W9
	308 Add X0, X8, 312
	309 Move X8, [X0]
	310 Move X1, [X0+8]
	311 Move X0, X21
	312 NotImplemented "Instruction BLR not yet implemented."
	313 Move W21, [X19+72]
	314 NotImplemented "Instruction MOVI not yet implemented."
	315 Move X0, X19
	316 Move V8, V1
	317 Move [X31+32], W31
	318 Move [X31], V0
	319 Move [X31+8], V0
	320 Call Simulation.get_RuntimeConfigPtr, X0
	321 Move V0, [X0]
	322 Move V1, [X0+16]
	323 Move W8, [X0+32]
	324 Add X0, X31, 0
	325 Move X1, X31
	326 Move [X31], V0
	327 Move [X31+8], V1
	328 Move [X31+32], W8
	329 Call Resolved.get_ClientTickDelta, X0
	330 Move X0, X19
	331 Move V9, V0
	332 Call Simulation.get_RuntimeConfigPtr, X0
	333 Move X9, 0x2235000
	334 Move X9, [X9+3176]
	335 Move X8, X0
	336 Move W24, [X8]
	337 Move X0, [X9]
	338 Move W9, [X0+224]
	339 Compare W9, 0
	340 JumpIfNotEqual {342}
	341 Call 0x1C17DFC
	342 NotImplemented "Instruction SCVTF not yet implemented."
	343 Multiply D0, D9, D0
	344 Subtract D0, D8, D0
	345 NotImplemented "Instruction SCVTF not yet implemented."
	346 Multiply D0, D0, D1
	347 Move X0, X31
	348 Call Maths.Clamp01, V0
	349 NotImplemented "Instruction INVALID not yet implemented."
	350 Move X0, X19
	351 Move [X19+124], S0
	352 Call Simulation.get_IsClient, X0
	353 Move TEMP, X0
	354 And TEMP, TEMP, 1
	355 Compare TEMP, 1
	356 JumpIfEqual {359}
	357 Move V0, [X19+124]
	358 Move [X19+120], S0
	359 Move X0, X19
	360 Call Simulation.get_IsClient, X0
	361 Move TEMP, X0
	362 And TEMP, TEMP, 1
	363 Compare TEMP, 1
	364 JumpIfNotEqual {392}
	365 Move X21, [X19+104]
	366 Compare X21, 0
	367 JumpIfEqual {407}
	368 Move X8, [X21]
	369 Move X19, [X19+224]
	370 Move X1, [X23]
	371 NotImplemented "Instruction LDRH not yet implemented."
	372 Compare X9, 0
	373 JumpIfEqual {380}
	374 Move X10, [X8+176]
	375 Add X10, X10, 8
	376 NotImplemented "Instruction LDUR not yet implemented."
	377 NotImplemented "Instruction CMP not yet implemented."
	378 Subtract X9, X9, 1
	379 Add X10, X10, 16
	380 Move W2, 10
	381 Move X0, X21
	382 Call 0x1C5D788
	383 Move W9, [X10]
	384 Add W9, W9, 10
	385 Add X8, X8, W9
	386 Add X0, X8, 312
	387 Move X8, [X0]
	388 Move X2, [X0+8]
	389 Move X0, X21
	390 Move X1, X19
	391 NotImplemented "Instruction BLR not yet implemented."
	392 Move X8, [X22+40]
	393 Move X9, [X31+40]
	394 NotImplemented "Instruction CMP not yet implemented."
	395 Move W0, W20
	396 Move X20, [X31+112]
	397 Move X19, [X31+120]
	398 Move X22, [X31+96]
	399 Move X21, [X31+104]
	400 Move X24, [X31+80]
	401 Move X23, [X31+88]
	402 Move X30, [X31+64]
	403 Move D9, [X31+48]
	404 Move D8, [X31+56]
	405 Add X31, X31, 128
	406 Return X0
	407 Call 0x1C17F20
	408 Call 0x3EB2B20
	409 NotImplemented "Instruction CMP not yet implemented."
	410 Move X21, X0
	411 Move X0, X21
	412 Call 0x3EB2AD0
	413 Move X21, X0
	414 Move X0, 0x222E000
	415 Move X0, [X0+2000]
	416 Call 0x1C17D08
	417 Move X8, [X21]
	418 Move X1, [X8]
	419 Call 0x1C18270
	420 Move TEMP, X0
	421 And TEMP, TEMP, 1
	422 Compare TEMP, 1
	423 JumpIfNotEqual {440}
	424 Move X21, [X21]
	425 Call 0x3EB2AE0
	426 Move X0, 0x2236000
	427 Move X0, [X0+2224]
	428 Call 0x1C17D08
	429 Move W8, [X0+224]
	430 Compare W8, 0
	431 JumpIfNotEqual {433}
	432 Call 0x1C17DFC
	433 Move X0, 0x223A000
	434 Move X0, [X0+2744]
	435 Call 0x1C17D08
	436 Move X2, X0
	437 Move X0, X19
	438 Move X1, X21
	439 Call 0x2214878, X0, X1
	440 Move W0, 8
	441 Call 0x3EB2AF0
	442 Move X8, [X21]
	443 Move [X0], X8
	444 Move X1, 0x1FEE000
	445 Add X1, X1, 3672
	446 Move X2, X31
	447 Call 0x3EB2B00
	448 Move X21, X0
	449 Call 0x3EB2AE0
	450 Move X21, X0
	451 NotImplemented "Instruction CMP not yet implemented."
	452 Move X0, X21
	453 Call 0x3EB2AD0
	454 Move X21, X0
	455 Move X0, 0x222D000
	456 Move X0, [X0+2000]
	457 Call 0x1C17D08
	458 Move X8, [X21]
	459 Move X1, [X8]
	460 Call 0x1C18270
	461 Move TEMP, X0
	462 And TEMP, TEMP, 1
	463 Compare TEMP, 1
	464 JumpIfNotEqual {481}
	465 Move X21, [X21]
	466 Call 0x3EB2AE0
	467 Move X0, 0x2235000
	468 Move X0, [X0+2224]
	469 Call 0x1C17D08
	470 Move W8, [X0+224]
	471 Compare W8, 0
	472 JumpIfNotEqual {474}
	473 Call 0x1C17DFC
	474 Move X0, 0x2239000
	475 Move X0, [X0+2744]
	476 Call 0x1C17D08
	477 Move X2, X0
	478 Move X0, X19
	479 Move X1, X21
	480 Call 0x2214878, X0, X1
	481 Move W0, 8
	482 Call 0x3EB2AF0
	483 Move X8, [X21]
	484 Move [X0], X8
	485 Move X1, 0x1FEE000
	486 Add X1, X1, 3672
	487 Move X2, X31
	488 Call 0x3EB2B00
	489 Move X21, X0
	490 Call 0x3EB2AE0
	491 Move X0, X21
	492 Call 0x1D2D690
	493 Call 0x1991590

Method: System.Void UpdateAreaOfInterest()

Disassembly:
	0x01EC746C MOV X1, X21
	0x01EC7470 BL 0x1EBD438
	0x01EC7474 B 0x1EC7458
	0x01EC7478 LDP X20, X19, [X31 + 0x10]
	0x01EC747C MOV X0, X1
	0x01EC7480 MOV X1, X31
	0x01EC7484 LDP X30, X21, [X31], #0x20
	0x01EC7488 B 0x1EF9F38
	0x01EC748C BL 0x1C16F20
	0x01EC7490 SUB X31, X31, 0x30
	0x01EC7494 STP X30, X21, [X31 + 0x10]
	0x01EC7498 STP X20, X19, [X31 + 0x20]
	0x01EC749C ADRP X21, 0x2512000
	0x01EC74A0 LDRB W8, [X21 + 0x485]
	0x01EC74A4 MOV W19, W1
	0x01EC74A8 MOV X20, X0
	0x01EC74AC TBNZ X8, 0x0, 0x1EC74C4
	0x01EC74B0 ADRP X0, 0x2238000
	0x01EC74B4 LDR X0, [X0 + 0x8D0]
	0x01EC74B8 BL 0x1C16CF4
	0x01EC74BC MOVZ W8, 0x1
	0x01EC74C0 STRB W8, [X21 + 0x485]
	0x01EC74C4 STR X31, [X31 + 0x8]
	0x01EC74C8 LDR X0, [X20 + 0xB0]
	0x01EC74CC CBZ X0, 0x1EC7504
	0x01EC74D0 ADRP X8, 0x2238000
	0x01EC74D4 LDR X8, [X8 + 0x8D0]
	0x01EC74D8 ADD X2, X31, 0x8
	0x01EC74DC MOV W1, W19
	0x01EC74E0 LDR X3, [X8]
	0x01EC74E4 BL 0x2A150AC
	0x01EC74E8 LDR X8, [X31 + 0x8]
	0x01EC74EC LDP X20, X19, [X31 + 0x20]
	0x01EC74F0 LDP X30, X21, [X31 + 0x10]
	0x01EC74F4 ANDS W31, W0, 0x1
	0x01EC74F8 CSEL X0, X8, X31, NE
	0x01EC74FC ADD X31, X31, 0x30
	0x01EC7500 RET
	0x01EC7504 BL 0x1C16F20
	0x01EC7508 SUB X31, X31, 0x30
	0x01EC750C STP X30, X21, [X31 + 0x10]
	0x01EC7510 STP X20, X19, [X31 + 0x20]
	0x01EC7514 ADRP X21, 0x2512000
	0x01EC7518 LDRB W8, [X21 + 0x486]
	0x01EC751C MOV X19, X1
	0x01EC7520 MOV X20, X0
	0x01EC7524 TBNZ X8, 0x0, 0x1EC753C
	0x01EC7528 ADRP X0, 0x2231000
	0x01EC752C LDR X0, [X0 + 0x20]
	0x01EC7530 BL 0x1C16CF4
	0x01EC7534 MOVZ W8, 0x1
	0x01EC7538 STRB W8, [X21 + 0x486]
	0x01EC753C STR X31, [X31 + 0x8]
	0x01EC7540 LDR X0, [X20 + 0xB8]
	0x01EC7544 CBZ X0, 0x1EC757C
	0x01EC7548 ADRP X8, 0x2231000
	0x01EC754C LDR X8, [X8 + 0x20]
	0x01EC7550 AND X1, X19, 0x0
	0x01EC7554 ADD X2, X31, 0x8
	0x01EC7558 LDR X3, [X8]
	0x01EC755C BL 0x2AE89D0
	0x01EC7560 LDR X8, [X31 + 0x8]
	0x01EC7564 LDP X20, X19, [X31 + 0x20]
	0x01EC7568 LDP X30, X21, [X31 + 0x10]
	0x01EC756C ANDS W31, W0, 0x1
	0x01EC7570 CSEL X0, X8, X31, NE
	0x01EC7574 ADD X31, X31, 0x30
	0x01EC7578 RET
	0x01EC757C BL 0x1C16F20
	0x01EC7580 STR X30, [X31 - 0x30]!
	0x01EC7584 STP X22, X21, [X31 + 0x10]
	0x01EC7588 STP X20, X19, [X31 + 0x20]
	0x01EC758C ADRP X22, 0x2512000
	0x01EC7590 LDRB W8, [X22 + 0x487]
	0x01EC7594 MOV X19, X2
	0x01EC7598 MOV X20, X1
	0x01EC759C MOV X21, X0
	0x01EC75A0 TBNZ X8, 0x0, 0x1EC75B8
	0x01EC75A4 ADRP X0, 0x2231000
	0x01EC75A8 LDR X0, [X0 + 0x20]
	0x01EC75AC BL 0x1C16CF4
	0x01EC75B0 MOVZ W8, 0x1
	0x01EC75B4 STRB W8, [X22 + 0x487]
	0x01EC75B8 LDR X0, [X21 + 0xB8]
	0x01EC75BC CBZ X0, 0x1EC75E4
	0x01EC75C0 ADRP X8, 0x2231000
	0x01EC75C4 LDR X8, [X8 + 0x20]
	0x01EC75C8 AND X1, X20, 0x0
	0x01EC75CC MOV X2, X19
	0x01EC75D0 LDP X20, X19, [X31 + 0x20]
	0x01EC75D4 LDR X3, [X8]
	0x01EC75D8 LDP X22, X21, [X31 + 0x10]
	0x01EC75DC LDR X30, [X31], #0x30
	0x01EC75E0 B 0x2AE89D0
	0x01EC75E4 BL 0x1C16F20
	0x01EC75E8 SUB X31, X31, 0x30
	0x01EC75EC STP X30, X21, [X31 + 0x10]
	0x01EC75F0 STP X20, X19, [X31 + 0x20]
	0x01EC75F4 ADRP X21, 0x2512000
	0x01EC75F8 LDRB W8, [X21 + 0x488]
	0x01EC75FC MOV X19, X1
	0x01EC7600 MOV X20, X0
	0x01EC7604 TBNZ X8, 0x0, 0x1EC7628
	0x01EC7608 ADRP X0, 0x2231000
	0x01EC760C LDR X0, [X0 + 0x20]
	0x01EC7610 BL 0x1C16CF4
	0x01EC7614 ADRP X0, 0x222D000
	0x01EC7618 LDR X0, [X0 + 0x470]
	0x01EC761C BL 0x1C16CF4
	0x01EC7620 MOVZ W8, 0x1
	0x01EC7624 STRB W8, [X21 + 0x488]
	0x01EC7628 STR X31, [X31]
	0x01EC762C LDR X0, [X20 + 0xB8]
	0x01EC7630 CBZ X0, 0x1EC769C
	0x01EC7634 ADRP X8, 0x2231000
	0x01EC7638 LDR X8, [X8 + 0x20]
	0x01EC763C AND X1, X19, 0x0
	0x01EC7640 ADD X2, X31, 0x0
	0x01EC7644 LDR X3, [X8]
	0x01EC7648 BL 0x2AE89D0
	0x01EC764C TBZ X0, 0x0, 0x1EC7684
	0x01EC7650 LDR X0, [X31]
	0x01EC7654 CBZ X0, 0x1EC769C
	0x01EC7658 MOV X1, X31
	0x01EC765C BL 0x1ED810C
	0x01EC7660 ADRP X8, 0x222D000
	0x01EC7664 LDR X8, [X8 + 0x470]
	0x01EC7668 MOV W1, W0
	0x01EC766C ADD X0, X31, 0x8
	0x01EC7670 STR X31, [X31 + 0x8]
	0x01EC7674 LDR X2, [X8]
	0x01EC7678 BL 0x24341FC
	0x01EC767C LDR X0, [X31 + 0x8]
	0x01EC7680 B 0x1EC768C
	0x01EC7684 MOV X0, X31
	0x01EC7688 STR X31, [X31 + 0x8]
	0x01EC768C LDP X20, X19, [X31 + 0x20]
	0x01EC7690 LDP X30, X21, [X31 + 0x10]
	0x01EC7694 ADD X31, X31, 0x30
	0x01EC7698 RET
	0x01EC769C BL 0x1C16F20
	0x01EC76A0 STP X30, X21, [X31 - 0x20]!
	0x01EC76A4 STP X20, X19, [X31 + 0x10]
	0x01EC76A8 ADRP X21, 0x2512000
	0x01EC76AC LDRB W8, [X21 + 0x489]
	0x01EC76B0 MOV X19, X1
	0x01EC76B4 MOV X20, X0
	0x01EC76B8 TBNZ X8, 0x0, 0x1EC76D0
	0x01EC76BC ADRP X0, 0x2238000
	0x01EC76C0 LDR X0, [X0 + 0xA60]
	0x01EC76C4 BL 0x1C16CF4
	0x01EC76C8 MOVZ W8, 0x1
	0x01EC76CC STRB W8, [X21 + 0x489]
	0x01EC76D0 LDR X0, [X20 + 0xB0]
	0x01EC76D4 CBZ X0, 0x1EC771C
	0x01EC76D8 ADRP X8, 0x2238000
	0x01EC76DC LDR X8, [X8 + 0xA60]
	0x01EC76E0 LDR W9, [X19 + 0x18]
	0x01EC76E4 LDR X2, [X8]
	0x01EC76E8 SBFM W1, W9, 0x10, 0x1F
	0x01EC76EC BL 0x2A135EC
	0x01EC76F0 CBZ X0, 0x1EC771C
	0x01EC76F4 MOV X20, X0
	0x01EC76F8 LDR X0, [X0 + 0xD8]
	0x01EC76FC LDR X1, [X19 + 0x18]
	0x01EC7700 MOV X2, X31
	0x01EC7704 BL 0x1EFC3FC
	0x01EC7708 ANDS W31, W0, 0x1
	0x01EC770C CSEL X0, X20, X31, NE
	0x01EC7710 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], D10
	003 Move [X31+96], D9
	004 Move [X31+104], D8
	005 Move [X31+112], X30
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 Move X20, 0x2513000
	012 Move W8, [X20+1150]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {47}
	018 Move X0, 0x2238000
	019 Move X0, [X0+2720]
	020 Call 0x1C17CF4
	021 Move X0, 0x2238000
	022 Move X0, [X0+2064]
	023 Call 0x1C17CF4
	024 Move X0, 0x2239000
	025 Move X0, [X0+2712]
	026 Call 0x1C17CF4
	027 Move X0, 0x2239000
	028 Move X0, [X0+2720]
	029 Call 0x1C17CF4
	030 Move X0, 0x2239000
	031 Move X0, [X0+2728]
	032 Call 0x1C17CF4
	033 Move X0, 0x2230000
	034 Move X0, [X0+3544]
	035 Call 0x1C17CF4
	036 Move X0, 0x2237000
	037 Move X0, [X0+2912]
	038 Call 0x1C17CF4
	039 Move X0, 0x2239000
	040 Move X0, [X0+2736]
	041 Call 0x1C17CF4
	042 Move X0, 0x2239000
	043 Move X0, [X0+3128]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X20+1150], W8
	047 Move X0, X19
	048 Move [X31+48], X31
	049 Move [X31+56], X31
	050 Move [X31+64], X31
	051 Move [X31+32], X31
	052 Move [X31+40], X31
	053 Call Simulation.get_IsServer, X0
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {147}
	058 Move X8, [X19+88]
	059 Compare X8, 0
	060 JumpIfEqual {160}
	061 Move W8, [X8+20]
	062 NotImplemented "Instruction ORN not yet implemented."
	063 And W31, W8, 3
	064 Move X8, 0x2239000
	065 Move X8, [X8+3128]
	066 Move X1, X31
	067 Move X0, [X8]
	068 Call EngineProfiler.Begin, X0
	069 Move X0, [X19+336]
	070 Compare X0, 0
	071 JumpIfEqual {160}
	072 Move X8, 0x2238000
	073 Move X8, [X8+2064]
	074 Move X1, [X8]
	075 Call Dictionary`2<NetworkId, Object>.get_Values, X0
	076 Compare X0, 0
	077 JumpIfEqual {160}
	078 Move X8, 0x2239000
	079 Move X8, [X8+2736]
	080 Move X1, [X8]
	081 Add X8, X31, 8
	082 Call ValueCollection<NetworkId, Object>.GetEnumerator, X0
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 Move X8, [X31+24]
	085 Move X21, 0x2239000
	086 Move X22, 0x2237000
	087 Move X21, [X21+2720]
	088 Move X22, [X22+2912]
	089 Move [X31+3], V0
	090 Move [X31+64], X8
	091 Move X23, 0x2238000
	092 Move X23, [X23+2720]
	093 Move X1, [X21]
	094 Add X0, X31, 48
	095 Call Enumerator<NetworkId, Object>.MoveNext, X0
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {140}
	100 Move X20, [X31+64]
	101 Compare X20, 0
	102 JumpIfEqual {158}
	103 Move X8, [X20+176]
	104 Compare X8, 0
	105 JumpIfEqual {159}
	106 Move W8, [X8+25]
	107 Move TEMP, X8
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {93}
	111 Move X0, X20
	112 Move X1, X31
	113 Call NetworkObjectMeta.get_MainTRSPData, X0
	114 Move X2, X0
	115 Move X0, X19
	116 Call Simulation.<UpdateAreaOfInterest>g__ResolveCellPosition|232_0, X0, X1, X2
	117 And W31, W0, 255
	118 Move [X31+32], X0
	119 Move [X31+40], X1
	120 Move X1, [X22]
	121 Add X0, X31, 32
	122 Call Nullable`1<Vector3>.get_Value, X0
	123 Move X0, [X23]
	124 Move V8, V0
	125 Move V9, V1
	126 Move V10, V2
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 Move V0, V8
	132 Move V1, V9
	133 Move V2, V10
	134 Move X0, X31
	135 Call AreaOfInterest.ToCell, X0
	136 Move W2, W0
	137 Move X0, X19
	138 Move X1, X20
	139 Call Simulation.AOI_UpdateAreaOfInterest, X0, X1, X2
	140 Move X8, 0x2239000
	141 Move X8, [X8+2712]
	142 Add X0, X31, 48
	143 Move X1, [X8]
	144 Call Enumerator<NetworkId, Object>.Dispose, X0
	145 Move X0, X31
	146 Call EngineProfiler.End
	147 Move X20, [X31+144]
	148 Move X19, [X31+152]
	149 Move X22, [X31+128]
	150 Move X21, [X31+136]
	151 Move X30, [X31+112]
	152 Move X23, [X31+120]
	153 Move D9, [X31+96]
	154 Move D8, [X31+104]
	155 Move V10, [X31+80]
	156 Add X31, X31, 160
	157 Return 
	158 Call 0x1C17F20
	159 Call 0x1C17F20
	160 Call 0x1C17F20
	161 Move X19, X0
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X0, X19
	164 Call 0x3EB2AD0
	165 Move X20, [X0]
	166 Call 0x3EB2AE0
	167 Move X8, 0x2239000
	168 Move X8, [X8+2712]
	169 Add X0, X31, 48
	170 Move X1, [X8]
	171 Call Enumerator<NetworkId, Object>.Dispose, X0
	172 Compare X20, 0
	173 JumpIfEqual {145}
	174 Move X0, X20
	175 Call 0x1C17F18
	176 Move X20, X31
	177 Move X19, X0
	178 Move X8, 0x2239000
	179 Move X8, [X8+2712]
	180 Move X1, [X8]
	181 Add X0, X31, 48
	182 Call Enumerator<NetworkId, Object>.Dispose, X0
	183 Compare X20, 0
	184 JumpIfNotEqual {187}
	185 Move X0, X19
	186 Call 0x1D2D690
	187 Move X0, X20
	188 Call 0x1C17F18
	189 Call 0x1991590

Method: System.Void PreparePackets()

Disassembly:
	0x01EC71D0 MOV X19, X2
	0x01EC71D4 MOV X20, X0
	0x01EC71D8 CBZ W8, 0x1EC71E8
	0x01EC71DC LDR X8, [X1]
	0x01EC71E0 CBNZ X8, 0x1EC7210
	0x01EC71E4 B 0x1EC7234
	0x01EC71E8 LDR X9, [X19 + 0x8]
	0x01EC71EC CBZ X9, 0x1EC7234
	0x01EC71F0 LDR X8, [X1]
	0x01EC71F4 CBZ X8, 0x1EC7234
	0x01EC71F8 LDR X10, [X8 + 0x38]
	0x01EC71FC LDR X9, [X9]
	0x01EC7200 ADD X10, X10, 0x1
	0x01EC7204 CMP X9, X10
	0x01EC7208 B.NE 0x1EC7210
	0x01EC720C STR X9, [X8 + 0x38]
	0x01EC7210 LDR X1, [X19 + 0x8]
	0x01EC7214 ADD X0, X8, 0x48
	0x01EC7218 BL 0x1EBD4F8
	0x01EC721C LDR X1, [X19 + 0x8]
	0x01EC7220 MOV X0, X20
	0x01EC7224 LDP X20, X19, [X31 + 0x10]
	0x01EC7228 MOV X2, X31
	0x01EC722C LDR X30, [X31], #0x20
	0x01EC7230 B 0x1EDA078
	0x01EC7234 BL 0x1C16F20
	0x01EC7238 STP X30, X21, [X31 - 0x20]!
	0x01EC723C STP X20, X19, [X31 + 0x10]
	0x01EC7240 LDR W8, [X1]
	0x01EC7244 MOV X19, X1
	0x01EC7248 CMP W8, 0x1
	0x01EC724C B.LT 0x1EC7280
	0x01EC7250 MOV X20, X0
	0x01EC7254 LDR X21, [X19 + 0x8]
	0x01EC7258 MOV X0, X19
	0x01EC725C MOV X1, X21
	0x01EC7260 BL 0x1EBD4F8
	0x01EC7264 MOV X0, X20
	0x01EC7268 MOV X1, X21
	0x01EC726C MOV X2, X31
	0x01EC7270 BL 0x1EDA078
	0x01EC7274 LDR W8, [X19]
	0x01EC7278 CMP W8, 0x0
	0x01EC727C B.GT 0x1EC7254
	0x01EC7280 STP X31, X31, [X19]
	0x01EC7284 STR X31, [X19 + 0x10]
	0x01EC7288 LDP X20, X19, [X31 + 0x10]
	0x01EC728C LDP X30, X21, [X31], #0x20
	0x01EC7290 RET
	0x01EC7294 STP X30, X21, [X31 - 0x20]!
	0x01EC7298 STP X20, X19, [X31 + 0x10]
	0x01EC729C MOV X21, X2
	0x01EC72A0 MOV X19, X1
	0x01EC72A4 MOV X20, X0
	0x01EC72A8 BL 0x1EBDF30
	0x01EC72AC TBZ X0, 0x0, 0x1EC72BC
	0x01EC72B0 CBZ X19, 0x1EC72E8
	0x01EC72B4 STR W21, [X19 + 0x4]
	0x01EC72B8 B 0x1EC72DC
	0x01EC72BC LDRB W8, [X19 + 0x14]
	0x01EC72C0 TBZ X8, 0x4, 0x1EC72DC
	0x01EC72C4 LDR X8, [X20]
	0x01EC72C8 MOV X0, X20
	0x01EC72CC LDR X9, [X8 + 0x268]
	0x01EC72D0 LDR X1, [X8 + 0x270]
	0x01EC72D4 BLR X9
	0x01EC72D8 STR W0, [X19 + 0x18]
	0x01EC72DC LDP X20, X19, [X31 + 0x10]
	0x01EC72E0 LDP X30, X21, [X31], #0x20
	0x01EC72E4 RET
	0x01EC72E8 BL 0x1C16F20
	0x01EC72EC STP X30, X21, [X31 - 0x20]!
	0x01EC72F0 STP X20, X19, [X31 + 0x10]
	0x01EC72F4 LDR X8, [X0 + 0x110]
	0x01EC72F8 CBZ X8, 0x1EC748C
	0x01EC72FC MOV X19, X0
	0x01EC7300 LDR X0, [X8 + 0x28]
	0x01EC7304 MOV X1, X31
	0x01EC7308 BL 0x1EF987C
	0x01EC730C LDR X8, [X19 + 0x110]
	0x01EC7310 CBZ X8, 0x1EC748C
	0x01EC7314 LDR X0, [X8 + 0x28]
	0x01EC7318 MOV X1, X31
	0x01EC731C BL 0x1EF9F38
	0x01EC7320 LDR X8, [X19 + 0x110]
	0x01EC7324 CBZ X8, 0x1EC748C
	0x01EC7328 LDRB W20, [X8 + 0x1C]
	0x01EC732C MOV X1, X31
	0x01EC7330 MOV W0, W20
	0x01EC7334 BL 0x1E323C4
	0x01EC7338 LDR X8, [X19 + 0x110]
	0x01EC733C CBZ X8, 0x1EC748C
	0x01EC7340 LDR X1, [X8 + 0x28]
	0x01EC7344 CMP W20, 0x0
	0x01EC7348 B.LE 0x1EC7478
	0x01EC734C MOV X0, X19
	0x01EC7350 MOV X2, X31
	0x01EC7354 BL 0x1ED9D20
	0x01EC7358 CBZ X0, 0x1EC748C
	0x01EC735C LDR X1, [X0 + 0x8]
	0x01EC7360 MOV X21, X0
	0x01EC7364 LDRB W8, [X1 + 0x14]
	0x01EC7368 TBNZ X8, 0x3, 0x1EC73D4
	0x01EC736C LDR X8, [X19 + 0x110]
	0x01EC7370 CBZ X8, 0x1EC748C
	0x01EC7374 LDR X9, [X8 + 0x30]
	0x01EC7378 CBZ X9, 0x1EC748C
	0x01EC737C LDR X10, [X21]
	0x01EC7380 LDR X9, [X9 + 0x38]
	0x01EC7384 CMP X10, X9
	0x01EC7388 B.LS 0x1EC7448
	0x01EC738C LDR W2, [X8 + 0x18]
	0x01EC7390 MOV X0, X19
	0x01EC7394 BL 0x1EC7294
	0x01EC7398 LDR X8, [X19 + 0x110]
	0x01EC739C CBZ X8, 0x1EC748C
	0x01EC73A0 LDR X8, [X8 + 0x30]
	0x01EC73A4 CBZ X8, 0x1EC748C
	0x01EC73A8 LDR W9, [X8 + 0x48]
	0x01EC73AC CMP W9, 0x1
	0x01EC73B0 B.LT 0x1EC73F8
	0x01EC73B4 LDR X9, [X8 + 0x58]
	0x01EC73B8 CBZ X9, 0x1EC73F8
	0x01EC73BC LDR X10, [X9 + 0x8]
	0x01EC73C0 LDRB W10, [X10 + 0x14]
	0x01EC73C4 TBZ X10, 0x3, 0x1EC7408
	0x01EC73C8 LDR X9, [X9 + 0x10]
	0x01EC73CC CBNZ X9, 0x1EC73BC
	0x01EC73D0 B 0x1EC73F8
	0x01EC73D4 LDR X8, [X19 + 0x110]
	0x01EC73D8 CBZ X8, 0x1EC748C
	0x01EC73DC LDR W2, [X8 + 0x18]
	0x01EC73E0 MOV X0, X19
	0x01EC73E4 BL 0x1EC7294
	0x01EC73E8 LDR X8, [X19 + 0x110]
	0x01EC73EC CBZ X8, 0x1EC748C
	0x01EC73F0 LDR X8, [X8 + 0x30]
	0x01EC73F4 CBZ X8, 0x1EC748C
	0x01EC73F8 ADD X0, X8, 0x48

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X20, 0x2513000
	012 Move W8, [X20+1151]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x2239000
	019 Move X0, [X0+3112]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1151], W8
	023 Move [X31], X31
	024 Move [X31+8], X31
	025 Move W21, [X19+72]
	026 Move W22, [X19+212]
	027 Move X0, X19
	028 Call Simulation.get_RuntimeConfigPtr, X0
	029 Move W23, [X0]
	030 Move X0, X19
	031 Call Simulation.get_IsServer, X0
	032 Move W20, W0
	033 Move X0, X19
	034 Call Simulation.get_RuntimeConfigPtr, X0
	035 Add X8, X0, 4
	036 Add X9, X0, 12
	037 And W31, W20, 1
	038 NotImplemented "Instruction CSEL not yet implemented."
	039 Move W8, [X8]
	040 Subtract W9, W21, W22
	041 NotImplemented "Instruction SDIV not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move W9, [X19+72]
	044 Move X8, [X19+88]
	045 Move [X19+212], W9
	046 Compare X8, 0
	047 JumpIfEqual {167}
	048 Move W8, [X8+20]
	049 NotImplemented "Instruction ORN not yet implemented."
	050 And W31, W8, 3
	051 Move X0, X19
	052 Call Simulation.UpdateAreaOfInterest, X0
	053 Move X8, 0x2239000
	054 Move X8, [X8+3112]
	055 Move X1, X31
	056 Move X0, [X8]
	057 Call EngineProfiler.Begin, X0
	058 Move X0, [X19+168]
	059 Compare X0, 0
	060 JumpIfEqual {167}
	061 Move X1, X31
	062 Call StateReplicator.UpdateChangedStructSet, X0
	063 Move X0, [X19+304]
	064 Move X1, X31
	065 Call NetPeerGroup.ConnectionIterator, X0
	066 Move [X31], X0
	067 Move [X31+8], X1
	068 Add X0, X31, 0
	069 Move X1, X31
	070 Call Iterator.Next, X0
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {154}
	075 Move X20, 0x2239000
	076 Move X20, [X20+2656]
	077 Move X23, 0x2513000
	078 Move W24, 1
	079 Move D8, 1
	080 Move D9, 0.5
	081 Add X0, X31, 0
	082 Move X1, X31
	083 Call Iterator.get_Current, X0
	084 Move W8, [X23+1211]
	085 Move X22, X0
	086 Compare W8, 0
	087 JumpIfNotEqual {91}
	088 Move X0, X20
	089 Call 0x1C17CF4
	090 Move [X23+1211], W24
	091 Move X0, [X19+176]
	092 Compare X0, 0
	093 JumpIfEqual {167}
	094 Move W8, [X22+24]
	095 Move X2, [X20]
	096 NotImplemented "Instruction SBFM not yet implemented."
	097 Call Dictionary`2<Int32, Object>.get_Item, X0, X1
	098 Compare X0, 0
	099 JumpIfEqual {167}
	100 Move X21, X0
	101 Move X0, [X0+216]
	102 Move X1, [X22+24]
	103 Move X2, X31
	104 Call NetConnectionId.op_Equality, X0, X1
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {147}
	109 Move X0, [X19+304]
	110 Move X1, X22
	111 Move X2, X31
	112 Call NetPeerGroup.GetConnectionIdleTime, X0, X1
	113 NotImplemented "Instruction FCMP not yet implemented."
	114 Move X0, [X19+304]
	115 Move X1, X31
	116 Call NetPeerGroup.get_Time, X0
	117 Move V1, [X21+120]
	118 Subtract D0, D0, D1
	119 NotImplemented "Instruction FCMP not yet implemented."
	120 Move X0, [X19+264]
	121 Compare X0, 0
	122 JumpIfEqual {167}
	123 Move W2, [X19+72]
	124 Move X1, X21
	125 Move X3, X31
	126 Call SendContext.Init, X0, X1, X2
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfNotEqual {147}
	131 Move X0, X19
	132 Call Simulation.WriteMessages, X0
	133 Move X8, [X19]
	134 Move X0, X19
	135 Move X9, [X8+664]
	136 Move X1, [X8+672]
	137 NotImplemented "Instruction BLR not yet implemented."
	138 Move X0, [X19+264]
	139 Compare X0, 0
	140 JumpIfEqual {167}
	141 Move X1, X31
	142 Call SendContext.Send, X0
	143 Move X0, [X19+304]
	144 Move X1, X31
	145 Call NetPeerGroup.get_Time, X0
	146 Move [X21+120], D0
	147 Add X0, X31, 0
	148 Move X1, X31
	149 Call Iterator.Next, X0
	150 Move TEMP, X0
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfEqual {81}
	154 Move X0, X31
	155 Call EngineProfiler.End
	156 Move X20, [X31+80]
	157 Move X19, [X31+88]
	158 Move X22, [X31+64]
	159 Move X21, [X31+72]
	160 Move X24, [X31+48]
	161 Move X23, [X31+56]
	162 Move X30, [X31+32]
	163 Move D9, [X31+16]
	164 Move D8, [X31+24]
	165 Add X31, X31, 96
	166 Return 
	167 Call 0x1C17F20

Method: System.Void WriteMessages()

Disassembly:
	0x01EC7860 LDR X1, [X8]
	0x01EC7864 LDR X23, [X23 + 0xBA0]
	0x01EC7868 LDR X22, [X22 + 0xB98]
	0x01EC786C ADD X8, X31, 0x8
	0x01EC7870 BL 0x274B2CC
	0x01EC7874 LDR X1, [X23]
	0x01EC7878 ADD X0, X31, 0x8
	0x01EC787C BL 0x2BF5F4C
	0x01EC7880 TBZ X0, 0x0, 0x1EC78C8
	0x01EC7884 LDR X21, [X31 + 0x18]
	0x01EC7888 MOV X0, X19
	0x01EC788C MOV X1, X31
	0x01EC7890 BL 0x1E97370
	0x01EC7894 CBZ X21, 0x1EC78E8
	0x01EC7898 AND X1, X0, 0x0
	0x01EC789C MOVZ W2, 0x1
	0x01EC78A0 MOV X0, X21
	0x01EC78A4 MOV W3, W31
	0x01EC78A8 MOV X4, X31
	0x01EC78AC BL 0x1ED0A18
	0x01EC78B0 CBZ X0, 0x1EC78EC
	0x01EC78B4 MOVZ W1, 0x2
	0x01EC78B8 MOV X2, X20
	0x01EC78BC MOV X3, X31
	0x01EC78C0 BL 0x1E94D10
	0x01EC78C4 B 0x1EC7874
	0x01EC78C8 LDR X1, [X22]
	0x01EC78CC ADD X0, X31, 0x8
	0x01EC78D0 BL 0x2BF5F48
	0x01EC78D4 LDP X20, X19, [X31 + 0x40]
	0x01EC78D8 LDP X22, X21, [X31 + 0x30]
	0x01EC78DC LDP X30, X23, [X31 + 0x20]
	0x01EC78E0 ADD X31, X31, 0x50
	0x01EC78E4 RET
	0x01EC78E8 BL 0x1C16F20
	0x01EC78EC BL 0x1C16F20
	0x01EC78F0 BL 0x1C16F20
	0x01EC78F4 B 0x1EC7904
	0x01EC78F8 B 0x1EC7904
	0x01EC78FC B 0x1EC7904
	0x01EC7900 B 0x1EC7904
	0x01EC7904 MOV X19, X0
	0x01EC7908 CMP W1, 0x1
	0x01EC790C B.NE 0x1EC7938
	0x01EC7910 MOV X0, X19
	0x01EC7914 BL 0x3EB1AD0
	0x01EC7918 LDR X20, [X0]
	0x01EC791C BL 0x3EB1AE0
	0x01EC7920 LDR X1, [X22]
	0x01EC7924 ADD X0, X31, 0x8
	0x01EC7928 BL 0x2BF5F48
	0x01EC792C CBZ X20, 0x1EC78D4
	0x01EC7930 MOV X0, X20
	0x01EC7934 BL 0x1C16F18
	0x01EC7938 MOV X20, X31
	0x01EC793C B 0x1EC7944
	0x01EC7940 MOV X19, X0
	0x01EC7944 LDR X1, [X22]
	0x01EC7948 ADD X0, X31, 0x8
	0x01EC794C BL 0x2BF5F48
	0x01EC7950 CBNZ X20, 0x1EC795C
	0x01EC7954 MOV X0, X19
	0x01EC7958 BL 0x1D2C690
	0x01EC795C MOV X0, X20
	0x01EC7960 BL 0x1C16F18
	0x01EC7964 BL 0x1990590
	0x01EC7968 SUB X31, X31, 0x50
	0x01EC796C STR X30, [X31 + 0x20]
	0x01EC7970 STP X22, X21, [X31 + 0x30]
	0x01EC7974 STP X20, X19, [X31 + 0x40]
	0x01EC7978 ADRP X21, 0x2512000
	0x01EC797C LDRB W8, [X21 + 0x48B]
	0x01EC7980 MOV X20, X1
	0x01EC7984 MOV X19, X0
	0x01EC7988 TBNZ X8, 0x0, 0x1EC79DC
	0x01EC798C ADRP X0, 0x2237000
	0x01EC7990 LDR X0, [X0 + 0xB90]
	0x01EC7994 BL 0x1C16CF4
	0x01EC7998 ADRP X0, 0x2237000
	0x01EC799C LDR X0, [X0 + 0xB98]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2513000
	005 Move W8, [X20+1152]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x2239000
	012 Move X0, [X0+3136]
	013 Call 0x1C17CF4
	014 Move X0, 0x2239000
	015 Move X0, [X0+3144]
	016 Call 0x1C17CF4
	017 Move X0, 0x2239000
	018 Move X0, [X0+3152]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1152], W8
	022 Move X8, [X19+264]
	023 Compare X8, 0
	024 JumpIfEqual {92}
	025 Move X0, [X8+32]
	026 Move X1, X31
	027 Call NetBitBuffer.GetOffset, X0
	028 Move X9, [X19+264]
	029 Compare X9, 0
	030 JumpIfEqual {92}
	031 Move X8, [X9+56]
	032 Compare X8, 0
	033 JumpIfEqual {92}
	034 Move X2, [X9+32]
	035 Move W11, 0x2380
	036 Move W10, [X2+80]
	037 Subtract W3, W11, W10
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X9, [X9+40]
	040 Compare X9, 0
	041 JumpIfEqual {92}
	042 Move W20, [X8+96]
	043 Add X1, X8, 96
	044 Add X4, X9, 8
	045 Move W5, 1
	046 Move X0, X19
	047 Call Simulation.ConsumeAndWriteMessagesIntoBuffer, X0, X1, X2, X3, X4, X5
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X8, [X19+264]
	050 Compare X8, 0
	051 JumpIfEqual {92}
	052 Move W9, [X8+24]
	053 Compare W9, 0
	054 JumpIfNotEqual {88}
	055 Move X8, [X8+56]
	056 Compare X8, 0
	057 JumpIfEqual {92}
	058 Move X19, [X8+104]
	059 Compare X19, 0
	060 JumpIfEqual {92}
	061 Move X8, [X19+8]
	062 Compare X8, 0
	063 JumpIfEqual {92}
	064 Move W2, [X8+12]
	065 Move X8, 0x2239000
	066 Move X8, [X8+3152]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction CSET not yet implemented."
	069 Move X1, [X8]
	070 Move X8, 0x2239000
	071 Move X8, [X8+3136]
	072 Move X3, [X8]
	073 Call 0x21829F4, X0, X1, X2
	074 Move X8, [X19+8]
	075 Move X9, 0x2239000
	076 Move X2, X31
	077 Move W8, [X8+20]
	078 Move X9, [X9+3144]
	079 And W31, W8, 256
	080 Move X1, [X9]
	081 NotImplemented "Instruction CSET not yet implemented."
	082 Call Assert.Always, X0, X1
	083 Move X8, [X19+8]
	084 Move W9, [X8+20]
	085 Move [X8+12], W31
	086 Or W9, W9, 256
	087 Move [X8+20], W9
	088 Move X20, [X31+16]
	089 Move X19, [X31+24]
	090 Move X30, [X31+32]
	091 Return 
	092 Call 0x1C17F20

Method: System.Void UpdateRemotePrefabs()

Disassembly:
	0x01EC7C5C STP W0, W9, [X31 + 0x20]
	0x01EC7C60 STR W22, [X31 + 0x28]
	0x01EC7C64 STUR X21, [X31 + 0x2C]
	0x01EC7C68 STUR X20, [X31 + 0x34]
	0x01EC7C6C STR V0, [X31 + 0x1]
	0x01EC7C70 STR W31, [X31 + 0x3C]
	0x01EC7C74 LDR W4, [X19 + 0x18]
	0x01EC7C78 ADD X2, X31, 0x10
	0x01EC7C7C MOV X0, X8
	0x01EC7C80 MOV X5, X31
	0x01EC7C84 BL 0x1F00620
	0x01EC7C88 LDR X8, [X25 + 0x28]
	0x01EC7C8C LDR X9, [X31 + 0x68]
	0x01EC7C90 CMP X8, X9
	0x01EC7C94 B.NE 0x1EC7CB8
	0x01EC7C98 LDP X20, X19, [X31 + 0xB0]
	0x01EC7C9C LDP X22, X21, [X31 + 0xA0]
	0x01EC7CA0 LDP X24, X23, [X31 + 0x90]
	0x01EC7CA4 LDP X26, X25, [X31 + 0x80]
	0x01EC7CA8 LDR X30, [X31 + 0x70]
	0x01EC7CAC ADD X31, X31, 0xC0
	0x01EC7CB0 RET
	0x01EC7CB4 BL 0x1C16F20
	0x01EC7CB8 BL 0x3EB1B20
	0x01EC7CBC MOVZ W8, 0x1
	0x01EC7CC0 STRB W8, [X0 + 0x31]
	0x01EC7CC4 RET
	0x01EC7CC8 LDR X0, [X0 + 0x38]
	0x01EC7CCC RET
	0x01EC7CD0 RET
	0x01EC7CD4 RET
	0x01EC7CD8 STR X30, [X31 - 0x20]!
	0x01EC7CDC STP X20, X19, [X31 + 0x10]
	0x01EC7CE0 ADRP X19, 0x2512000
	0x01EC7CE4 ADRP X20, 0x222C000
	0x01EC7CE8 LDRB W8, [X19 + 0x48D]
	0x01EC7CEC LDR X20, [X20 + 0x8F0]
	0x01EC7CF0 TBNZ X8, 0x0, 0x1EC7D08
	0x01EC7CF4 ADRP X0, 0x222C000
	0x01EC7CF8 LDR X0, [X0 + 0x8F0]
	0x01EC7CFC BL 0x1C16CF4
	0x01EC7D00 MOVZ W8, 0x1
	0x01EC7D04 STRB W8, [X19 + 0x48D]
	0x01EC7D08 LDR X0, [X20]
	0x01EC7D0C BL 0x1C16F10
	0x01EC7D10 MOV X1, X31
	0x01EC7D14 MOV X19, X0
	0x01EC7D18 BL 0x3231AC4
	0x01EC7D1C CBZ X19, 0x1EC7D38
	0x01EC7D20 LDR X8, [X19]
	0x01EC7D24 MOV X0, X19
	0x01EC7D28 LDP X20, X19, [X31 + 0x10]
	0x01EC7D2C LDP X2, X1, [X8 + 0x168]
	0x01EC7D30 LDR X30, [X31], #0x20
	0x01EC7D34 BR X2
	0x01EC7D38 BL 0x1C16F20
	0x01EC7D3C STR X30, [X31 - 0x20]!
	0x01EC7D40 STP X20, X19, [X31 + 0x10]
	0x01EC7D44 ADRP X19, 0x2512000
	0x01EC7D48 ADRP X20, 0x222C000
	0x01EC7D4C LDRB W8, [X19 + 0x48E]
	0x01EC7D50 LDR X20, [X20 + 0x8F0]
	0x01EC7D54 TBNZ X8, 0x0, 0x1EC7D6C
	0x01EC7D58 ADRP X0, 0x222C000
	0x01EC7D5C LDR X0, [X0 + 0x8F0]
	0x01EC7D60 BL 0x1C16CF4
	0x01EC7D64 MOVZ W8, 0x1
	0x01EC7D68 STRB W8, [X19 + 0x48E]
	0x01EC7D6C LDR X0, [X20]
	0x01EC7D70 BL 0x1C16F10
	0x01EC7D74 MOV X1, X31
	0x01EC7D78 MOV X19, X0
	0x01EC7D7C BL 0x3231AC4
	0x01EC7D80 CBZ X19, 0x1EC7D9C
	0x01EC7D84 LDR X8, [X19]
	0x01EC7D88 MOV X0, X19
	0x01EC7D8C LDP X20, X19, [X31 + 0x10]
	0x01EC7D90 LDP X2, X1, [X8 + 0x168]
	0x01EC7D94 LDR X30, [X31], #0x20
	0x01EC7D98 BR X2
	0x01EC7D9C BL 0x1C16F20
	0x01EC7DA0 LDR X8, [X0 + 0x130]
	0x01EC7DA4 CBZ X8, 0x1EC7DB4
	0x01EC7DA8 LDR V0, [X8 + 0x160]
	0x01EC7DAC FCMP D0, 0x0
	0x01EC7DB0 B.NE 0x1EC7DBC
	0x01EC7DB4 MOV W0, W31
	0x01EC7DB8 RET
	0x01EC7DBC FMOV D1, 1
	0x01EC7DC0 MOVZ X8, 0x7FF00000
	0x01EC7DC4 FDIV D0, D1, D0
	0x01EC7DC8 FMOV D1, X8
	0x01EC7DCC FCVTZS W8, D0
	0x01EC7DD0 FCMP D0, D1
	0x01EC7DD4 MOVZ W9, 0x80000000
	0x01EC7DD8 CSEL W0, W9, W8, EQ
	0x01EC7DDC RET
	0x01EC7DE0 STP X30, X21, [X31 - 0x20]!
	0x01EC7DE4 STP X20, X19, [X31 + 0x10]
	0x01EC7DE8 LDR X8, [X0 + 0x130]
	0x01EC7DEC CBZ X8, 0x1EC7E48
	0x01EC7DF0 MOV X19, X0
	0x01EC7DF4 MOV W20, W1
	0x01EC7DF8 BL 0x1EBDF30
	0x01EC7DFC MOV W21, W0
	0x01EC7E00 MOV X0, X19
	0x01EC7E04 BL 0x1EC0308
	0x01EC7E08 LDR X8, [X19 + 0x130]
	0x01EC7E0C ADD X9, X0, 0x4
	0x01EC7E10 ADD X10, X0, 0xC
	0x01EC7E14 ANDS W31, W21, 0x1
	0x01EC7E18 CSEL X10, X10, X9, NE
	0x01EC7E1C CMP W20, 0x1
	0x01EC7E20 CSINC W9, W20, W31, GT
	0x01EC7E24 CBZ X8, 0x1EC7E54
	0x01EC7E28 LDR W10, [X10]
	0x01EC7E2C FMOV S1, 1
	0x01EC7E30 CMP W9, W10
	0x01EC7E34 CSEL W9, W10, W9, GT
	0x01EC7E38 SCVTF S0, W9
	0x01EC7E3C FDIV S0, S1, S0
	0x01EC7E40 FCVT S0, S0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x2513000
	007 Move W8, [X19+1153]
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2238000
	014 Move X0, [X0+2704]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X19+1153], W8
	018 Move X19, [X20+64]
	019 Compare X19, 0
	020 JumpIfEqual {88}
	021 Move X22, 0x2238000
	022 Move X8, [X19]
	023 Move X22, [X22+2704]
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Move X1, [X22]
	026 Compare X9, 0
	027 JumpIfEqual {34}
	028 Move X10, [X8+176]
	029 Add X10, X10, 8
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Subtract X9, X9, 1
	033 Add X10, X10, 16
	034 Move W2, 22
	035 Move X0, X19
	036 Call 0x1C5D788
	037 Move W9, [X10]
	038 Add W9, W9, 22
	039 Add X8, X8, W9
	040 Add X0, X8, 312
	041 Move X8, [X0]
	042 Move X1, [X0+8]
	043 Move X0, X19
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {82}
	049 Move X0, [X20+168]
	050 Compare X0, 0
	051 JumpIfEqual {89}
	052 Move X1, X31
	053 Call StateReplicator.UpdateRemotePrefabs, X0
	054 Move X19, X31
	055 Move X20, [X20+64]
	056 Compare X20, 0
	057 JumpIfEqual {88}
	058 Move X8, [X20]
	059 Move X1, [X22]
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Compare X9, 0
	062 JumpIfEqual {69}
	063 Move X10, [X8+176]
	064 Add X10, X10, 8
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract X9, X9, 1
	068 Add X10, X10, 16
	069 Move W2, 23
	070 Move X0, X20
	071 Call 0x1C5D788
	072 Move W9, [X10]
	073 Add W9, W9, 23
	074 Add X8, X8, W9
	075 Add X0, X8, 312
	076 Move X8, [X0]
	077 Move X1, [X0+8]
	078 Move X0, X20
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Compare X19, 0
	081 JumpIfNotEqual {90}
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X30, [X31+48]
	087 Return 
	088 Call 0x1C17F20
	089 Call 0x1C17F20
	090 Move X0, X19
	091 Call 0x1C17F18
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X21, X0
	094 Move X0, X21
	095 Call 0x3EB2AD0
	096 Move X19, [X0]
	097 Call 0x3EB2AE0
	098 Move X19, X31
	099 Move X21, X0
	100 Move X20, [X20+64]
	101 Compare X20, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17F20
	104 Move X8, [X20]
	105 Move X1, [X22]
	106 NotImplemented "Instruction LDRH not yet implemented."
	107 Compare X9, 0
	108 JumpIfEqual {115}
	109 Move X10, [X8+176]
	110 Add X10, X10, 8
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Subtract X9, X9, 1
	114 Add X10, X10, 16
	115 Move W2, 23
	116 Move X0, X20
	117 Call 0x1C5D788
	118 Move W9, [X10]
	119 Add W9, W9, 23
	120 Add X8, X8, W9
	121 Add X0, X8, 312
	122 Move X8, [X0]
	123 Move X1, [X0+8]
	124 Move X0, X20
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Compare X19, 0
	127 JumpIfNotEqual {130}
	128 Move X0, X21
	129 Call 0x1D2D690
	130 Move X0, X19
	131 Call 0x1C17F18
	132 Call 0x1991590

Method: System.Void InvokeTick(Fusion.SimulationStages stage, System.Boolean releaseAllInputs)

Disassembly:
	0x01EC2E38 LDR W9, [X8 + 0xE0]
	0x01EC2E3C CBNZ W9, 0x1EC2E48
	0x01EC2E40 MOV X0, X8
	0x01EC2E44 BL 0x1C16DFC
	0x01EC2E48 CMP W22, W20
	0x01EC2E4C B.NE 0x1EC2E60
	0x01EC2E50 LDP X20, X19, [X31 + 0x20]
	0x01EC2E54 LDP X22, X21, [X31 + 0x10]
	0x01EC2E58 LDR X30, [X31], #0x30
	0x01EC2E5C RET
	0x01EC2E60 LDR X0, [X19 + 0xB8]
	0x01EC2E64 CBZ X0, 0x1EC2EA0
	0x01EC2E68 ADRP X8, 0x223D000
	0x01EC2E6C LDR X8, [X8 + 0xB38]
	0x01EC2E70 ADRP X19, 0x223D000
	0x01EC2E74 MOV X1, X21
	0x01EC2E78 LDR X2, [X8]
	0x01EC2E7C LDR X19, [X19 + 0xB50]
	0x01EC2E80 BL 0x2AE8354
	0x01EC2E84 LDR X1, [X19]
	0x01EC2E88 LDP X20, X19, [X31 + 0x20]
	0x01EC2E8C LDP X22, X21, [X31 + 0x10]
	0x01EC2E90 AND W0, W0, 0x1
	0x01EC2E94 MOV X2, X31
	0x01EC2E98 LDR X30, [X31], #0x30
	0x01EC2E9C B 0x1E3BA60
	0x01EC2EA0 BL 0x1C16F20
	0x01EC2EA4 STR X30, [X31 - 0x30]!
	0x01EC2EA8 STP X22, X21, [X31 + 0x10]
	0x01EC2EAC STP X20, X19, [X31 + 0x20]
	0x01EC2EB0 ADRP X22, 0x2517000
	0x01EC2EB4 ADRP X21, 0x2234000
	0x01EC2EB8 LDRB W8, [X22 + 0x468]
	0x01EC2EBC LDR X21, [X21 + 0x398]
	0x01EC2EC0 MOV X19, X1
	0x01EC2EC4 MOV X20, X0
	0x01EC2EC8 TBNZ X8, 0x0, 0x1EC2EF8
	0x01EC2ECC ADRP X0, 0x2234000
	0x01EC2ED0 LDR X0, [X0 + 0x398]
	0x01EC2ED4 BL 0x1C16CF4
	0x01EC2ED8 ADRP X0, 0x2234000
	0x01EC2EDC LDR X0, [X0 + 0xE40]
	0x01EC2EE0 BL 0x1C16CF4
	0x01EC2EE4 ADRP X0, 0x2236000
	0x01EC2EE8 LDR X0, [X0 + 0x28]
	0x01EC2EEC BL 0x1C16CF4
	0x01EC2EF0 MOVZ W8, 0x1
	0x01EC2EF4 STRB W8, [X22 + 0x468]
	0x01EC2EF8 LDR X0, [X21]
	0x01EC2EFC STR X31, [X31 + 0x8]
	0x01EC2F00 ADRP X21, 0x2236000
	0x01EC2F04 LDR W8, [X0 + 0xE0]
	0x01EC2F08 LDR X21, [X21 + 0x28]
	0x01EC2F0C CBNZ W8, 0x1EC2F14
	0x01EC2F10 BL 0x1C16DFC
	0x01EC2F14 MOV X0, X31
	0x01EC2F18 BL 0x1E92E48
	0x01EC2F1C LDR X3, [X21]
	0x01EC2F20 AND X1, X0, 0x0
	0x01EC2F24 ADD X2, X31, 0x8
	0x01EC2F28 MOV X0, X20
	0x01EC2F2C BL 0x2255240
	0x01EC2F30 TBZ X0, 0x0, 0x1EC2F64
	0x01EC2F34 LDR X8, [X31 + 0x8]
	0x01EC2F38 CBZ X8, 0x1EC2F78
	0x01EC2F3C ADRP X9, 0x2234000
	0x01EC2F40 LDR X9, [X9 + 0xE40]
	0x01EC2F44 LDR W20, [X8 + 0x1C]
	0x01EC2F48 LDR X0, [X9]
	0x01EC2F4C LDR W9, [X0 + 0xE0]
	0x01EC2F50 CBNZ W9, 0x1EC2F58
	0x01EC2F54 BL 0x1C16DFC
	0x01EC2F58 CMP W20, W19
	0x01EC2F5C CSET W0, EQ
	0x01EC2F60 B 0x1EC2F68
	0x01EC2F64 MOV W0, W31
	0x01EC2F68 LDP X20, X19, [X31 + 0x20]
	0x01EC2F6C LDP X22, X21, [X31 + 0x10]
	0x01EC2F70 LDR X30, [X31], #0x30
	0x01EC2F74 RET
	0x01EC2F78 BL 0x1C16F20
	0x01EC2F7C STR X30, [X31 - 0x30]!
	0x01EC2F80 STP X22, X21, [X31 + 0x10]
	0x01EC2F84 STP X20, X19, [X31 + 0x20]
	0x01EC2F88 ADRP X22, 0x2517000
	0x01EC2F8C ADRP X21, 0x2234000
	0x01EC2F90 LDRB W8, [X22 + 0x469]
	0x01EC2F94 LDR X21, [X21 + 0x398]
	0x01EC2F98 MOV X19, X1
	0x01EC2F9C MOV X20, X0
	0x01EC2FA0 TBNZ X8, 0x0, 0x1EC2FC4
	0x01EC2FA4 ADRP X0, 0x2234000
	0x01EC2FA8 LDR X0, [X0 + 0x398]
	0x01EC2FAC BL 0x1C16CF4
	0x01EC2FB0 ADRP X0, 0x2236000
	0x01EC2FB4 LDR X0, [X0 + 0x28]
	0x01EC2FB8 BL 0x1C16CF4
	0x01EC2FBC MOVZ W8, 0x1
	0x01EC2FC0 STRB W8, [X22 + 0x469]
	0x01EC2FC4 LDR X0, [X21]
	0x01EC2FC8 STR X31, [X31 + 0x8]
	0x01EC2FCC ADRP X21, 0x2236000
	0x01EC2FD0 LDR W8, [X0 + 0xE0]
	0x01EC2FD4 LDR X21, [X21 + 0x28]
	0x01EC2FD8 CBNZ W8, 0x1EC2FE0
	0x01EC2FDC BL 0x1C16DFC
	0x01EC2FE0 MOV X0, X31
	0x01EC2FE4 BL 0x1E92E48
	0x01EC2FE8 LDR X3, [X21]
	0x01EC2FEC AND X1, X0, 0x0
	0x01EC2FF0 ADD X2, X31, 0x8
	0x01EC2FF4 MOV X0, X20
	0x01EC2FF8 BL 0x2255240
	0x01EC2FFC TBZ X0, 0x0, 0x1EC3014
	0x01EC3000 LDR X8, [X31 + 0x8]
	0x01EC3004 CBZ X8, 0x1EC302C
	0x01EC3008 LDR W8, [X8 + 0x1C]
	0x01EC300C STR W8, [X19]
	0x01EC3010 B 0x1EC3018
	0x01EC3014 STR W31, [X19]
	0x01EC3018 LDP X20, X19, [X31 + 0x20]
	0x01EC301C LDP X22, X21, [X31 + 0x10]
	0x01EC3020 AND W0, W0, 0x1
	0x01EC3024 LDR X30, [X31], #0x30
	0x01EC3028 RET
	0x01EC302C BL 0x1C16F20
	0x01EC3030 SUB X31, X31, 0x40
	0x01EC3034 STR X30, [X31 + 0x10]
	0x01EC3038 STP X22, X21, [X31 + 0x20]
	0x01EC303C STP X20, X19, [X31 + 0x30]
	0x01EC3040 ADRP X22, 0x2516000
	0x01EC3044 LDRB W8, [X22 + 0x46A]
	0x01EC3048 MOV X21, X2
	0x01EC304C MOV X19, X1
	0x01EC3050 MOV X20, X0
	0x01EC3054 TBNZ X8, 0x0, 0x1EC3078
	0x01EC3058 ADRP X0, 0x2234000
	0x01EC305C LDR X0, [X0 + 0xFD8]
	0x01EC3060 BL 0x1C16CF4
	0x01EC3064 ADRP X0, 0x2233000
	0x01EC3068 LDR X0, [X0 + 0xE40]
	0x01EC306C BL 0x1C16CF4
	0x01EC3070 MOVZ W8, 0x1
	0x01EC3074 STRB W8, [X22 + 0x46A]
	0x01EC3078 STR X31, [X31]
	0x01EC307C LDR X0, [X20 + 0x58]
	0x01EC3080 CBZ X0, 0x1EC32A4
	0x01EC3084 MOV X1, X31
	0x01EC3088 BL 0x1ED4BCC
	0x01EC308C TBZ X0, 0x0, 0x1EC31C8
	0x01EC3090 MOV X0, X20
	0x01EC3094 BL 0x1EC0864
	0x01EC3098 TBZ X0, 0x0, 0x1EC30C0
	0x01EC309C LDR X8, [X20 + 0x58]
	0x01EC30A0 CBZ X8, 0x1EC32A4
	0x01EC30A4 LDR W8, [X8 + 0x38]
	0x01EC30A8 CMP W8, 0x1
	0x01EC30AC B.NE 0x1EC3190
	0x01EC30B0 MOV X0, X20
	0x01EC30B4 BL 0x1EBDF30
	0x01EC30B8 TBNZ X0, 0x0, 0x1EC31C8
	0x01EC30BC B 0x1EC31FC
	0x01EC30C0 AND X21, X21, 0x0
	0x01EC30C4 MOV X0, X20
	0x01EC30C8 MOV X1, X21
	0x01EC30CC BL 0x1EC2800
	0x01EC30D0 TBZ X0, 0x0, 0x1EC3188
	0x01EC30D4 MOV X0, X20
	0x01EC30D8 MOV X1, X21
	0x01EC30DC BL 0x1EC2EA4
	0x01EC30E0 TBNZ X0, 0x0, 0x1EC31C8
	0x01EC30E4 ADRP X22, 0x2515000
	0x01EC30E8 LDRB W8, [X22 + 0xB73]
	0x01EC30EC CBNZ W8, 0x1EC3104
	0x01EC30F0 ADRP X0, 0x2235000
	0x01EC30F4 LDR X0, [X0 + 0x20]
	0x01EC30F8 BL 0x1C16CF4
	0x01EC30FC MOVZ W8, 0x1
	0x01EC3100 STRB W8, [X22 + 0xB73]
	0x01EC3104 STR X31, [X31 + 0x18]
	0x01EC3108 LDR X0, [X20 + 0xB8]
	0x01EC310C CBZ X0, 0x1EC32A4
	0x01EC3110 ADRP X8, 0x2235000
	0x01EC3114 LDR X8, [X8 + 0x20]
	0x01EC3118 ADD X2, X31, 0x18
	0x01EC311C MOV X1, X21
	0x01EC3120 LDR X3, [X8]
	0x01EC3124 BL 0x2AE89D0
	0x01EC3128 LDR X20, [X31 + 0x18]
	0x01EC312C MOV W21, W0
	0x01EC3130 MOV X0, X19
	0x01EC3134 MOV X1, X31
	0x01EC3138 BL 0x1E944EC
	0x01EC313C CBZ X20, 0x1EC32A4
	0x01EC3140 TBZ X21, 0x0, 0x1EC32A4
	0x01EC3144 AND X1, X0, 0x0
	0x01EC3148 ADD X2, X31, 0x0
	0x01EC314C MOV X0, X20
	0x01EC3150 MOV X3, X31
	0x01EC3154 BL 0x1ED5868
	0x01EC3158 TBZ X0, 0x0, 0x1EC3288
	0x01EC315C LDR X0, [X31]
	0x01EC3160 CBZ X0, 0x1EC32A4
	0x01EC3164 MOVZ W1, 0x3
	0x01EC3168 MOV X2, X31
	0x01EC316C BL 0x1E94D80
	0x01EC3170 ADRP X8, 0x2234000
	0x01EC3174 LDR X8, [X8 + 0xFD8]
	0x01EC3178 STRH W31, [X31 + 0xC]
	0x01EC317C AND W1, W0, 0x1
	0x01EC3180 LDR X2, [X8]
	0x01EC3184 B 0x1EC3260
	0x01EC3188 STRH W31, [X31 + 0xC]
	0x01EC318C B 0x1EC31E4
	0x01EC3190 LDR X8, [X20]
	0x01EC3194 MOV X0, X20
	0x01EC3198 LDR X9, [X8 + 0x268]
	0x01EC319C LDR X1, [X8 + 0x270]
	0x01EC31A0 BLR X9
	0x01EC31A4 CBZ X19, 0x1EC32A4
	0x01EC31A8 LDR X8, [X19 + 0x20]
	0x01EC31AC CBZ X8, 0x1EC32A4
	0x01EC31B0 LDR W1, [X8 + 0x20]
	0x01EC31B4 AND X2, X0, 0x0
	0x01EC31B8 MOV X0, X20
	0x01EC31BC MOV X3, X31
	0x01EC31C0 BL 0x1DBF8E4
	0x01EC31C4 TBZ X0, 0x0, 0x1EC31FC
	0x01EC31C8 ADRP X8, 0x2234000
	0x01EC31CC LDR X8, [X8 + 0xFD8]
	0x01EC31D0 STRH W31, [X31 + 0xC]
	0x01EC31D4 LDR X2, [X8]
	0x01EC31D8 ADD X0, X31, 0xC
	0x01EC31DC MOVZ W1, 0x1
	0x01EC31E0 BL 0x242D570
	0x01EC31E4 LDRH W0, [X31 + 0xC]
	0x01EC31E8 LDP X20, X19, [X31 + 0x30]
	0x01EC31EC LDP X22, X21, [X31 + 0x20]
	0x01EC31F0 LDR X30, [X31 + 0x10]
	0x01EC31F4 ADD X31, X31, 0x40
	0x01EC31F8 RET
	0x01EC31FC LDR X8, [X20]
	0x01EC3200 MOV X0, X20
	0x01EC3204 LDR X9, [X8 + 0x268]
	0x01EC3208 LDR X1, [X8 + 0x270]
	0x01EC320C BLR X9
	0x01EC3210 ADRP X8, 0x2233000
	0x01EC3214 LDR X8, [X8 + 0xE40]
	0x01EC3218 MOV X22, X0
	0x01EC321C LDR X8, [X8]
	0x01EC3220 LDR W9, [X8 + 0xE0]
	0x01EC3224 CBNZ W9, 0x1EC3230
	0x01EC3228 MOV X0, X8
	0x01EC322C BL 0x1C16DFC
	0x01EC3230 CMP W22, W21
	0x01EC3234 B.NE 0x1EC3268
	0x01EC3238 CBZ X19, 0x1EC32A4
	0x01EC323C LDR X8, [X19 + 0x38]
	0x01EC3240 CBZ X8, 0x1EC32A4
	0x01EC3244 ADRP X9, 0x2234000
	0x01EC3248 LDR W8, [X8 + 0xA8]
	0x01EC324C LDR X9, [X9 + 0xFD8]
	0x01EC3250 STRH W31, [X31 + 0xC]
	0x01EC3254 ANDS W31, W8, 0x3
	0x01EC3258 LDR X2, [X9]
	0x01EC325C CSET W1, NE
	0x01EC3260 ADD X0, X31, 0xC
	0x01EC3264 B 0x1EC31E0
	0x01EC3268 AND X1, X21, 0x0
	0x01EC326C MOV X0, X20
	0x01EC3270 BL 0x1EC2EA4
	0x01EC3274 STRH W31, [X31 + 0xC]
	0x01EC3278 TBZ X0, 0x0, 0x1EC31E4
	0x01EC327C ADRP X8, 0x2234000
	0x01EC3280 LDR X8, [X8 + 0xFD8]
	0x01EC3284 B 0x1EC31D4
	0x01EC3288 ADRP X8, 0x2234000
	0x01EC328C LDR X8, [X8 + 0xFD8]
	0x01EC3290 ADD X0, X31, 0xC
	0x01EC3294 MOV W1, W31
	0x01EC3298 STRH W31, [X31 + 0xC]
	0x01EC329C LDR X2, [X8]
	0x01EC32A0 B 0x1EC31E0
	0x01EC32A4 BL 0x1C16F20
	0x01EC32A8 STR X30, [X31 - 0x30]!
	0x01EC32AC STP X22, X21, [X31 + 0x10]
	0x01EC32B0 STP X20, X19, [X31 + 0x20]
	0x01EC32B4 ADRP X22, 0x2516000
	0x01EC32B8 ADRP X21, 0x2233000
	0x01EC32BC LDRB W8, [X22 + 0x46B]
	0x01EC32C0 LDR X21, [X21 + 0xE40]
	0x01EC32C4 MOV X19, X2
	0x01EC32C8 MOV X20, X1
	0x01EC32CC TBNZ X8, 0x0, 0x1EC32E4
	0x01EC32D0 ADRP X0, 0x2233000
	0x01EC32D4 LDR X0, [X0 + 0xE40]
	0x01EC32D8 BL 0x1C16CF4
	0x01EC32DC MOVZ W8, 0x1
	0x01EC32E0 STRB W8, [X22 + 0x46B]
	0x01EC32E4 LDR X0, [X21]
	0x01EC32E8 LDR W8, [X0 + 0xE0]
	0x01EC32EC CBZ W8, 0x1EC3320
	0x01EC32F0 CBZ W19, 0x1EC3328
	0x01EC32F4 CBZ X20, 0x1EC333C
	0x01EC32F8 LDR X8, [X20 + 0x20]
	0x01EC32FC CBZ X8, 0x1EC333C
	0x01EC3300 LDR X0, [X21]
	0x01EC3304 LDR W20, [X8 + 0x1C]
	0x01EC3308 LDR W9, [X0 + 0xE0]
	0x01EC330C CBNZ W9, 0x1EC3314
	0x01EC3310 BL 0x1C16DFC
	0x01EC3314 CMP W20, W19
	0x01EC3318 CSET W0, EQ
	0x01EC331C B 0x1EC332C
	0x01EC3320 BL 0x1C16DFC
	0x01EC3324 CBNZ W19, 0x1EC32F4
	0x01EC3328 MOV W0, W31
	0x01EC332C LDP X20, X19, [X31 + 0x20]
	0x01EC3330 LDP X22, X21, [X31 + 0x10]
	0x01EC3334 LDR X30, [X31], #0x30
	0x01EC3338 RET
	0x01EC333C BL 0x1C16F20
	0x01EC3340 SUB X31, X31, 0x40
	0x01EC3344 STP X30, X23, [X31 + 0x10]
	0x01EC3348 STP X22, X21, [X31 + 0x20]
	0x01EC334C STP X20, X19, [X31 + 0x30]
	0x01EC3350 ADRP X23, 0x2516000
	0x01EC3354 ADRP X22, 0x2233000
	0x01EC3358 LDRB W8, [X23 + 0x46C]
	0x01EC335C LDR X22, [X22 + 0xE40]
	0x01EC3360 MOV X19, X2
	0x01EC3364 MOV X21, X1
	0x01EC3368 MOV X20, X0
	0x01EC336C TBNZ X8, 0x0, 0x1EC339C
	0x01EC3370 ADRP X0, 0x2233000
	0x01EC3374 LDR X0, [X0 + 0x398]
	0x01EC3378 BL 0x1C16CF4
	0x01EC337C ADRP X0, 0x2233000
	0x01EC3380 LDR X0, [X0 + 0xE40]
	0x01EC3384 BL 0x1C16CF4
	0x01EC3388 ADRP X0, 0x2235000
	0x01EC338C LDR X0, [X0 + 0x28]
	0x01EC3390 BL 0x1C16CF4
	0x01EC3394 MOVZ W8, 0x1
	0x01EC3398 STRB W8, [X23 + 0x46C]
	0x01EC339C LDR X0, [X22]
	0x01EC33A0 STR X31, [X31 + 0x8]
	0x01EC33A4 STR W31, [X31]
	0x01EC33A8 LDR W8, [X0 + 0xE0]
	0x01EC33AC CBZ W8, 0x1EC33B8
	0x01EC33B0 CBNZ W19, 0x1EC33C0
	0x01EC33B4 B 0x1EC349C
	0x01EC33B8 BL 0x1C16DFC
	0x01EC33BC CBZ W19, 0x1EC349C
	0x01EC33C0 LDR X0, [X22]
	0x01EC33C4 LDR W8, [X0 + 0xE0]
	0x01EC33C8 CBNZ W8, 0x1EC33D0
	0x01EC33CC BL 0x1C16DFC
	0x01EC33D0 CMP W21, W19
	0x01EC33D4 B.NE 0x1EC33E0
	0x01EC33D8 MOVZ W0, 0x1
	0x01EC33DC B 0x1EC34A0
	0x01EC33E0 LDR X0, [X22]
	0x01EC33E4 LDR W8, [X0 + 0xE0]
	0x01EC33E8 CBZ W8, 0x1EC3464
	0x01EC33EC CBZ W21, 0x1EC346C
	0x01EC33F0 LDR X0, [X22]
	0x01EC33F4 LDR W8, [X0 + 0xE0]
	0x01EC33F8 CBNZ W8, 0x1EC3400
	0x01EC33FC BL 0x1C16DFC
	0x01EC3400 ADDS W31, W21, 0x1
	0x01EC3404 B.NE 0x1EC349C
	0x01EC3408 ADRP X8, 0x2233000
	0x01EC340C LDR X8, [X8 + 0x398]
	0x01EC3410 LDR X0, [X8]
	0x01EC3414 LDR W8, [X0 + 0xE0]
	0x01EC3418 CBNZ W8, 0x1EC3420
	0x01EC341C BL 0x1C16DFC
	0x01EC3420 MOV X0, X31
	0x01EC3424 BL 0x1E92E48
	0x01EC3428 ADRP X8, 0x2235000
	0x01EC342C LDR X8, [X8 + 0x28]
	0x01EC3430 AND X1, X0, 0x0
	0x01EC3434 ADD X2, X31, 0x8
	0x01EC3438 MOV X0, X20
	0x01EC343C LDR X3, [X8]
	0x01EC3440 BL 0x2255240
	0x01EC3444 TBZ X0, 0x0, 0x1EC349C
	0x01EC3448 LDR X8, [X31 + 0x8]
	0x01EC344C CBZ X8, 0x1EC34B4
	0x01EC3450 LDR X0, [X22]
	0x01EC3454 LDR W20, [X8 + 0x18]
	0x01EC3458 LDR W9, [X0 + 0xE0]
	0x01EC345C CBNZ W9, 0x1EC3490
	0x01EC3460 B 0x1EC348C
	0x01EC3464 BL 0x1C16DFC
	0x01EC3468 CBNZ W21, 0x1EC33F0
	0x01EC346C ADD X1, X31, 0x0
	0x01EC3470 MOV X0, X20
	0x01EC3474 BL 0x1EC2F7C
	0x01EC3478 TBZ X0, 0x0, 0x1EC349C
	0x01EC347C LDR X0, [X22]
	0x01EC3480 LDR W20, [X31]
	0x01EC3484 LDR W8, [X0 + 0xE0]
	0x01EC3488 CBNZ W8, 0x1EC3490
	0x01EC348C BL 0x1C16DFC
	0x01EC3490 CMP W20, W19
	0x01EC3494 CSET W0, EQ
	0x01EC3498 B 0x1EC34A0
	0x01EC349C MOV W0, W31
	0x01EC34A0 LDP X20, X19, [X31 + 0x30]
	0x01EC34A4 LDP X22, X21, [X31 + 0x20]
	0x01EC34A8 LDP X30, X23, [X31 + 0x10]
	0x01EC34AC ADD X31, X31, 0x40
	0x01EC34B0 RET
	0x01EC34B4 BL 0x1C16F20
	0x01EC34B8 STR X30, [X31 - 0x10]!
	0x01EC34BC CBZ X1, 0x1EC34DC
	0x01EC34C0 LDR X8, [X1 + 0x20]
	0x01EC34C4 CBZ X8, 0x1EC34DC
	0x01EC34C8 LDR W1, [X8 + 0x20]
	0x01EC34CC AND X2, X2, 0x0
	0x01EC34D0 MOV X3, X31
	0x01EC34D4 LDR X30, [X31], #0x10
	0x01EC34D8 B 0x1DBF8E4
	0x01EC34DC BL 0x1C16F20
	0x01EC34E0 STR X30, [X31 - 0x10]!
	0x01EC34E4 CBZ X1, 0x1EC3504
	0x01EC34E8 LDR X8, [X1 + 0xB0]
	0x01EC34EC CBZ X8, 0x1EC3504
	0x01EC34F0 LDR W1, [X8 + 0x20]
	0x01EC34F4 AND X2, X2, 0x0

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+104], X0
	004 Move [X31+112], X26
	005 Move [X31+120], X25
	006 Move [X31+128], X24
	007 Move [X31+136], X23
	008 Move [X31+144], X22
	009 Move [X31+152], X21
	010 Move [X31+160], X20
	011 Move [X31+168], X19
	012 Move X21, 0x2518000
	013 Move W8, [X21+1154]
	014 Move W20, W1
	015 Move X19, X0
	016 And W9, W2, 1
	017 Move [X31+92], W9
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {48}
	022 Move X0, 0x223E000
	023 Move X0, [X0+2752]
	024 Call 0x1C17CF4
	025 Move X0, 0x223E000
	026 Move X0, [X0+2760]
	027 Call 0x1C17CF4
	028 Move X0, 0x223E000
	029 Move X0, [X0+2768]
	030 Call 0x1C17CF4
	031 Move X0, 0x223E000
	032 Move X0, [X0+2776]
	033 Call 0x1C17CF4
	034 Move X0, 0x223E000
	035 Move X0, [X0+2784]
	036 Call 0x1C17CF4
	037 Move X0, 0x223D000
	038 Move X0, [X0+2704]
	039 Call 0x1C17CF4
	040 Move X0, 0x223E000
	041 Move X0, [X0+2792]
	042 Call 0x1C17CF4
	043 Move X0, 0x223E000
	044 Move X0, [X0+2800]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X21+1154], W8
	048 Add X8, X31, 104
	049 Add X9, X31, 92
	050 Move [X31+24], X31
	051 Move [X31+32], X8
	052 Add X8, X31, 60
	053 Move [X31+64], X31
	054 Move [X31+72], X31
	055 Move [X31+80], X31
	056 Move [X31+60], W31
	057 Move [X31+40], X9
	058 Move [X31+48], X8
	059 Move X8, [X19+40]
	060 Move X0, [X19+192]
	061 Move [X19+80], W20
	062 Add X8, X8, 1
	063 Move [X19+40], X8
	064 Compare X0, 0
	065 JumpIfEqual {266}
	066 Move X8, 0x223E000
	067 Move X8, [X8+2784]
	068 Move X1, [X8]
	069 Add X8, X31, 0
	070 Call HashSet`1<PlayerRef>.GetEnumerator, X0
	071 Move X19, 0x223E000
	072 Move X20, 0x223E000
	073 Move X25, 0x223E000
	074 Move X22, 0x223D000
	075 Move X19, [X19+2768]
	076 Move X20, [X20+2760]
	077 Move X25, [X25+2792]
	078 Move X22, [X22+2704]
	079 Move V0, [X31]
	080 Move X8, [X31+16]
	081 Move X23, 0x223E000
	082 Move X24, 0x223E000
	083 Move X23, [X23+2800]
	084 Move X24, [X24+2752]
	085 Move [X31+4], V0
	086 Move [X31+80], X8
	087 Move X1, [X19]
	088 Add X0, X31, 64
	089 Call Enumerator<PlayerRef>.MoveNext, X0
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {110}
	094 Move X0, [X31+104]
	095 Move W2, [X31+80]
	096 Move X8, [X0]
	097 Move W1, [X0+72]
	098 Move X9, [X8+680]
	099 Move X3, [X8+688]
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Move X1, X0
	102 Compare X1, 0
	103 JumpIfEqual {87}
	104 Move X8, [X31+104]
	105 Move X0, [X8+160]
	106 Compare X0, 0
	107 JumpIfEqual {265}
	108 Move X2, X31
	109 Call SimulationInputCollection.AddInput, X0, X1
	110 Move X19, X31
	111 Move X1, [X20]
	112 Add X0, X31, 64
	113 Call Enumerator<PlayerRef>.Dispose, X0
	114 Compare X19, 0
	115 JumpIfNotEqual {267}
	116 Move X0, [X31+104]
	117 Call Simulation.get_IsClient, X0
	118 Move X8, [X31+104]
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {141}
	123 Move W9, [X8+217]
	124 Compare W9, 0
	125 JumpIfEqual {141}
	126 Move W9, [X8+218]
	127 Compare W9, 0
	128 JumpIfNotEqual {134}
	129 Move X9, [X8+88]
	130 Compare X9, 0
	131 JumpIfEqual {273}
	132 Move W9, [X9+56]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move W20, [X8+80]
	135 Move W9, 2
	136 Move [X8+80], W9
	137 Move X0, X8
	138 Call Simulation.UpdateRemotePrefabs, X0
	139 Move X8, [X31+104]
	140 Move [X8+80], W20
	141 Move W9, [X8+220]
	142 Compare W9, 0
	143 JumpIfEqual {150}
	144 Move X9, [X8]
	145 Move [X8+220], W31
	146 Move X1, [X9+832]
	147 Move X10, [X9+824]
	148 Move X0, X8
	149 NotImplemented "Instruction BLR not yet implemented."
	150 Move X0, [X25]
	151 Move X1, X31
	152 Call EngineProfiler.Begin, X0
	153 Move X8, [X31+104]
	154 Move X19, [X8+64]
	155 Compare X19, 0
	156 JumpIfEqual {269}
	157 Move X8, [X19]
	158 Move X1, [X22]
	159 NotImplemented "Instruction LDRH not yet implemented."
	160 Compare X9, 0
	161 JumpIfEqual {168}
	162 Move X10, [X8+176]
	163 Add X10, X10, 8
	164 NotImplemented "Instruction LDUR not yet implemented."
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Subtract X9, X9, 1
	167 Add X10, X10, 16
	168 Move W2, 9
	169 Move X0, X19
	170 Call 0x1C5D788
	171 Move W9, [X10]
	172 Add W9, W9, 9
	173 Add X8, X8, W9
	174 Add X0, X8, 312
	175 Move X8, [X0]
	176 Move X1, [X0+8]
	177 Move X0, X19
	178 NotImplemented "Instruction BLR not yet implemented."
	179 Move X0, X31
	180 Call EngineProfiler.End
	181 Move X0, [X31+104]
	182 Move W1, [X0+72]
	183 Call Simulation.DeliverMessages, X0, X1
	184 Move X0, [X31+104]
	185 Move W8, 1
	186 Move [X0+219], W8
	187 Call Simulation.InvokePlayerJoinedLeft, X0
	188 Move X8, [X31+104]
	189 Move X0, [X8+384]
	190 Compare X0, 0
	191 JumpIfEqual {270}
	192 Move X1, [X24]
	193 Call Dictionary`2<PlayerRef, NetworkId>.Clear, X0
	194 Move X8, [X31+104]
	195 Move X19, [X8+64]
	196 Compare X19, 0
	197 JumpIfEqual {272}
	198 Move X8, [X19]
	199 Move X1, [X22]
	200 NotImplemented "Instruction LDRH not yet implemented."
	201 Compare X9, 0
	202 JumpIfEqual {209}
	203 Move X10, [X8+176]
	204 Add X10, X10, 8
	205 NotImplemented "Instruction LDUR not yet implemented."
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Subtract X9, X9, 1
	208 Add X10, X10, 16
	209 Move X0, X19
	210 Move W2, W31
	211 Call 0x1C5D788
	212 NotImplemented "Instruction LDRSW not yet implemented."
	213 Add X8, X8, X9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X1, [X0+8]
	217 Move X0, X19
	218 NotImplemented "Instruction BLR not yet implemented."
	219 Move X8, [X31+104]
	220 Move [X8+219], W31
	221 Move X0, [X23]
	222 Move X1, X31
	223 Call EngineProfiler.Begin, X0
	224 Move X8, [X31+104]
	225 Move X19, [X8+64]
	226 Compare X19, 0
	227 JumpIfEqual {271}
	228 Move X8, [X19]
	229 Move X1, [X22]
	230 NotImplemented "Instruction LDRH not yet implemented."
	231 Compare X9, 0
	232 JumpIfEqual {239}
	233 Move X10, [X8+176]
	234 Add X10, X10, 8
	235 NotImplemented "Instruction LDUR not yet implemented."
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Subtract X9, X9, 1
	238 Add X10, X10, 16
	239 Move W2, 8
	240 Move X0, X19
	241 Call 0x1C5D788
	242 Move W9, [X10]
	243 Add W9, W9, 8
	244 Add X8, X8, W9
	245 Add X0, X8, 312
	246 Move X8, [X0]
	247 Move X1, [X0+8]
	248 Move X0, X19
	249 NotImplemented "Instruction BLR not yet implemented."
	250 Move X0, X31
	251 Call EngineProfiler.End
	252 Add X0, X31, 24
	253 Call 0x1998920
	254 Move X20, [X31+160]
	255 Move X19, [X31+168]
	256 Move X22, [X31+144]
	257 Move X21, [X31+152]
	258 Move X24, [X31+128]
	259 Move X23, [X31+136]
	260 Move X26, [X31+112]
	261 Move X25, [X31+120]
	262 Move X30, [X31+96]
	263 Add X31, X31, 176
	264 Return 
	265 Call 0x1C17F20
	266 Call 0x1C17F20
	267 Move X0, X19
	268 Call 0x1C17F18
	269 Call 0x1C17F20
	270 Call 0x1C17F20
	271 Call 0x1C17F20
	272 Call 0x1C17F20
	273 Call 0x1C17F20
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Move X21, X0
	276 Move X0, X21
	277 Call 0x3EB2AD0
	278 Move X19, [X0]
	279 Call 0x3EB2AE0
	280 Move X8, [X31+104]
	281 Move [X8+80], W20
	282 Compare X19, 0
	283 JumpIfEqual {141}
	284 Move X0, X19
	285 Call 0x1C17F18
	286 Move X8, [X31+104]
	287 Move W26, W1
	288 Move [X8+80], W20
	289 Move X8, [X31+104]
	290 Move [X8+80], W20
	291 Compare X19, 0
	292 JumpIfEqual {364}
	293 Move X0, X19
	294 Call 0x1C17F18
	295 Move X21, X0
	296 Move W26, W1
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Move X0, X21
	299 Call 0x3EB2AD0
	300 Move X19, X0
	301 Move X0, 0x2231000
	302 Move X0, [X0+2000]
	303 Call 0x1C17D08
	304 Move X8, [X19]
	305 Move X1, [X8]
	306 Call 0x1C18270
	307 Move TEMP, X0
	308 And TEMP, TEMP, 1
	309 Compare TEMP, 1
	310 JumpIfNotEqual {328}
	311 Move X19, [X19]
	312 Call 0x3EB2AE0
	313 Move X0, 0x2239000
	314 Move X0, [X0+2224]
	315 Call 0x1C17D08
	316 Move W8, [X0+224]
	317 Compare W8, 0
	318 JumpIfNotEqual {320}
	319 Call 0x1C17DFC
	320 Move X20, [X31+104]
	321 Move X0, 0x223D000
	322 Move X0, [X0+2744]
	323 Call 0x1C17D08
	324 Move X2, X0
	325 Move X0, X20
	326 Move X1, X19
	327 Call 0x2214878, X0, X1
	328 Move W0, 8
	329 Call 0x3EB2AF0
	330 Move X8, [X19]
	331 Move [X0], X8
	332 Move X1, 0x1FF2000
	333 Add X1, X1, 3672
	334 Move X2, X31
	335 Call 0x3EB2B00
	336 Move X21, X0
	337 Move W26, W1
	338 Move X20, X1
	339 Move X21, X0
	340 Call 0x3EB2AE0
	341 Move W26, W20
	342 Move X26, X1
	343 Move X21, X0
	344 Move W8, 1
	345 NotImplemented "Instruction CMP not yet implemented."
	346 Move X0, X21
	347 Call 0x3EB2AD0
	348 Move X19, [X0]
	349 Call 0x3EB2AE0
	350 Move X8, [X31+104]
	351 Move [X8+219], W31
	352 Compare X19, 0
	353 JumpIfEqual {221}
	354 Move X0, X19
	355 Call 0x1C17F18
	356 Move X8, [X31+104]
	357 Move [X8+219], W31
	358 Move X8, [X31+104]
	359 Move [X8+219], W31
	360 Compare X19, 0
	361 JumpIfEqual {364}
	362 Move X0, X19
	363 Call 0x1C17F18
	364 Move X21, X0
	365 Move W26, W1
	366 Move X21, X0
	367 NotImplemented "Instruction CMP not yet implemented."
	368 Move X0, X21
	369 Call 0x3EB2AD0
	370 Move X19, [X0]
	371 Call 0x3EB2AE0
	372 Move X19, X31
	373 Move W26, W1
	374 Move X1, [X20]
	375 Add X0, X31, 64
	376 Call Enumerator<PlayerRef>.Dispose, X0
	377 Compare X19, 0
	378 JumpIfNotEqual {410}
	379 NotImplemented "Instruction CMP not yet implemented."
	380 Move X0, X21
	381 Call 0x3EB2AD0
	382 Move X19, X0
	383 Move X0, 0x2231000
	384 Move X0, [X0+2000]
	385 Call 0x1C17D08
	386 Move X8, [X19]
	387 Move X1, [X8]
	388 Call 0x1C18270
	389 Move TEMP, X0
	390 And TEMP, TEMP, 1
	391 Compare TEMP, 1
	392 JumpIfNotEqual {412}
	393 Move X19, [X19]
	394 Call 0x3EB2AE0
	395 Move X0, 0x2239000
	396 Move X0, [X0+2224]
	397 Call 0x1C17D08
	398 Move W8, [X0+224]
	399 Compare W8, 0
	400 JumpIfNotEqual {402}
	401 Call 0x1C17DFC
	402 Move X20, [X31+104]
	403 Move X0, 0x223D000
	404 Move X0, [X0+2744]
	405 Call 0x1C17D08
	406 Move X2, X0
	407 Move X0, X20
	408 Move X1, X19
	409 Call 0x2214878, X0, X1
	410 Move X0, X19
	411 Call 0x1C17F18
	412 Move W0, 8
	413 Call 0x3EB2AF0
	414 Move X8, [X19]
	415 Move [X0], X8
	416 Move X1, 0x1FF2000
	417 Add X1, X1, 3672
	418 Move X2, X31
	419 Call 0x3EB2B00
	420 Move X21, X0
	421 Move X20, X1
	422 Move X21, X0
	423 Call 0x3EB2AE0
	424 Move W26, W20
	425 Move X21, X0
	426 Move W26, W1
	427 Move W8, 1
	428 NotImplemented "Instruction CMP not yet implemented."
	429 Move X0, X21
	430 Call 0x3EB2AD0
	431 Move X8, [X0]
	432 Move [X31+24], X8
	433 Call 0x3EB2AE0
	434 Move X21, X0
	435 Add X0, X31, 24
	436 Call 0x1998920
	437 Move X0, X21
	438 Call 0x1D2D690
	439 Call 0x1991590

Method: Fusion.SimulationMessageInternalTypes GetMessageInternalType(Fusion.SimulationMessage* message)

Disassembly:
	0x01EC81B0 MOVZ W2, 0x1
	0x01EC81B4 MOV X0, X19

ISIL:
	001 Move W0, [X1+28]
	002 Return X0

Method: System.Void* GetMessageInternalData(Fusion.SimulationMessage* message)

Disassembly:
	0x01EC81B8 BL 0x1EC3F30
	0x01EC81BC LDR X1, [X22]

ISIL:
	001 Add X0, X1, 32
	002 Return X0

Method: T GetMessageInternalData(Fusion.SimulationMessage* message)

Disassembly:
	0x02255E48 CBNZ W8, 0x2255E50
	0x02255E4C BL 0x1C16DFC
	0x02255E50 MOV W0, W23
	0x02255E54 MOV X1, X31
	0x02255E58 BL 0x1E34CBC
	0x02255E5C LDR X8, [X25]
	0x02255E60 MOV W23, W0
	0x02255E64 LDR X9, [X20 + 0x8]
	0x02255E68 LDR X0, [X8 + 0x8]
	0x02255E6C ADD X20, X9, 0x1C
	0x02255E70 LDRB W10, [X0 + 0x135]
	0x02255E74 TBNZ X10, 0x0, 0x2255E80
	0x02255E78 BL 0x1C5C684
	0x02255E7C LDR X8, [X25]
	0x02255E80 LDUR X2, [X29 - 0x38]
	0x02255E84 LDR X1, [X8 + 0x40]
	0x02255E88 SUB X8, X29, 0x18
	0x02255E8C SUB X4, X29, 0x28
	0x02255E90 SUB X5, X29, 0x18
	0x02255E94 MOV X3, X19
	0x02255E98 STUR W23, [X29 - 0x18]
	0x02255E9C STP X20, X8, [X29 - 0x28]
	0x02255EA0 BL 0x1C17728
	0x02255EA4 LDUR X8, [X29 - 0x30]
	0x02255EA8 LDR X8, [X8 + 0x28]
	0x02255EAC LDUR X9, [X29 - 0x8]
	0x02255EB0 CMP X8, X9
	0x02255EB4 B.NE 0x2255EE0
	0x02255EB8 MOV W0, W22
	0x02255EBC ADD X31, X29, 0x0
	0x02255EC0 LDP X20, X19, [X31 + 0x50]
	0x02255EC4 LDP X22, X21, [X31 + 0x40]
	0x02255EC8 LDP X24, X23, [X31 + 0x30]
	0x02255ECC LDP X26, X25, [X31 + 0x20]
	0x02255ED0 LDP X28, X27, [X31 + 0x10]
	0x02255ED4 LDP X29, X30, [X31], #0x60
	0x02255ED8 RET
	0x02255EDC BL 0x1C16F20
	0x02255EE0 BL 0x3EB1B20
	0x02255EE4 STR X30, [X31 - 0x30]!
	0x02255EE8 STP X22, X21, [X31 + 0x10]
	0x02255EEC STP X20, X19, [X31 + 0x20]
	0x02255EF0 LDR X8, [X2 + 0x38]

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Add X29, X31, 0
	009 Subtract X31, X31, 16
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X23+40]
	012 Move X19, X2
	013 Move X20, X1
	014 Move [X29-8], X8
	015 Move X8, [X3+56]
	016 Compare X8, 0
	017 JumpIfNotEqual {22}
	018 Move X0, X3
	019 Move X21, X3
	020 Call 0x1C5D6E0
	021 Move X8, [X21+56]
	022 Move X8, [X8]
	023 Move W21, [X8+252]
	024 Add X8, X31, 0
	025 Add X9, X21, 15
	026 And X9, X9, 0x1FFFFFFFF
	027 Subtract X22, X8, X9
	028 Add X31, X22, 0
	029 Add X1, X20, 32
	030 Move X0, X22
	031 Move X2, X21
	032 Call 0x3EB2AC0
	033 Move X0, X19
	034 Move X1, X22
	035 Move X2, X21
	036 Call 0x3EB2AC0
	037 Move X8, [X23+40]
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X31, X29, 0
	041 Move X20, [X31+48]
	042 Move X19, [X31+56]
	043 Move X22, [X31+32]
	044 Move X21, [X31+40]
	045 Move X23, [X31+16]
	046 Move X29, [X31+64]
	047 Move X30, [X31+72]
	048 Return X0
	049 Call 0x3EB2B20

Method: System.Void OnMessageInternal(Fusion.SimulationMessage* message)

Disassembly:
	0x01EC81C0 ADD X0, X31, 0x0

ISIL:
	001 Return 

Method: System.Void DeliverMessages(System.Int32 tick)

Disassembly:
	0x01EC7E44 STR D0, [X8 + 0x160]
	0x01EC7E48 LDP X20, X19, [X31 + 0x10]
	0x01EC7E4C LDP X30, X21, [X31], #0x20
	0x01EC7E50 RET
	0x01EC7E54 BL 0x1C16F20
	0x01EC7E58 RET
	0x01EC7E5C LDR X8, [X0 + 0x128]
	0x01EC7E60 CBZ X8, 0x1EC7E70
	0x01EC7E64 LDR X0, [X0 + 0x130]
	0x01EC7E68 MOV X3, X31
	0x01EC7E6C B 0x1F00854
	0x01EC7E70 MOV W0, W31
	0x01EC7E74 STR X31, [X2]
	0x01EC7E78 RET
	0x01EC7E7C STP X30, X23, [X31 - 0x30]!
	0x01EC7E80 STP X22, X21, [X31 + 0x10]
	0x01EC7E84 STP X20, X19, [X31 + 0x20]
	0x01EC7E88 ADRP X23, 0x2512000
	0x01EC7E8C LDRB W8, [X23 + 0x493]
	0x01EC7E90 MOV X19, X3
	0x01EC7E94 MOV X20, X2
	0x01EC7E98 MOV X21, X1
	0x01EC7E9C MOV X22, X0
	0x01EC7EA0 TBNZ X8, 0x0, 0x1EC7EB8
	0x01EC7EA4 ADRP X0, 0x2238000
	0x01EC7EA8 LDR X0, [X0 + 0xC78]
	0x01EC7EAC BL 0x1C16CF4
	0x01EC7EB0 MOVZ W8, 0x1
	0x01EC7EB4 STRB W8, [X23 + 0x493]
	0x01EC7EB8 LDR X8, [X22 + 0x128]
	0x01EC7EBC CBZ X8, 0x1EC7EF8
	0x01EC7EC0 LDR X0, [X22 + 0x130]
	0x01EC7EC4 MOV X1, X21
	0x01EC7EC8 MOV X2, X20
	0x01EC7ECC MOV X3, X19
	0x01EC7ED0 MOV X4, X31
	0x01EC7ED4 BL 0x1F008C4
	0x01EC7ED8 TBZ X0, 0x0, 0x1EC7EE4
	0x01EC7EDC MOVZ W0, 0x1
	0x01EC7EE0 B 0x1EC7EFC
	0x01EC7EE4 ADRP X8, 0x2238000
	0x01EC7EE8 LDR X8, [X8 + 0xC78]
	0x01EC7EEC MOV X1, X31
	0x01EC7EF0 LDR X0, [X8]
	0x01EC7EF4 BL 0x1E3B98C
	0x01EC7EF8 MOV W0, W31
	0x01EC7EFC LDP X20, X19, [X31 + 0x20]
	0x01EC7F00 LDP X22, X21, [X31 + 0x10]
	0x01EC7F04 LDP X30, X23, [X31], #0x30
	0x01EC7F08 RET
	0x01EC7F0C SUB X31, X31, 0x30
	0x01EC7F10 STP X30, X19, [X31 + 0x20]
	0x01EC7F14 MRS X19, 0xC000
	0x01EC7F18 LDR X8, [X19 + 0x28]
	0x01EC7F1C STR X8, [X31 + 0x18]
	0x01EC7F20 LDR X8, [X0 + 0x128]
	0x01EC7F24 CBZ X8, 0x1EC7F4C
	0x01EC7F28 LDR X8, [X1 + 0x10]
	0x01EC7F2C LDR V0, [X1]
	0x01EC7F30 LDR X0, [X0 + 0x130]
	0x01EC7F34 ADD X1, X31, 0x0
	0x01EC7F38 MOV X4, X31
	0x01EC7F3C STR X8, [X31 + 0x10]
	0x01EC7F40 STR V0, [X31]
	0x01EC7F44 BL 0x1F00D7C
	0x01EC7F48 B 0x1EC7F50
	0x01EC7F4C MOV W0, W31
	0x01EC7F50 LDR X8, [X19 + 0x28]
	0x01EC7F54 LDR X9, [X31 + 0x18]
	0x01EC7F58 CMP X8, X9
	0x01EC7F5C B.NE 0x1EC7F70
	0x01EC7F60 LDP X30, X19, [X31 + 0x20]
	0x01EC7F64 AND W0, W0, 0x1
	0x01EC7F68 ADD X31, X31, 0x30
	0x01EC7F6C RET
	0x01EC7F70 BL 0x3EB1B20
	0x01EC7F74 SUB X31, X31, 0x90
	0x01EC7F78 STR X30, [X31 + 0x50]
	0x01EC7F7C STP X24, X23, [X31 + 0x60]
	0x01EC7F80 STP X22, X21, [X31 + 0x70]
	0x01EC7F84 STP X20, X19, [X31 + 0x80]
	0x01EC7F88 MRS X24, 0xC000
	0x01EC7F8C LDR X8, [X24 + 0x28]
	0x01EC7F90 ADRP X23, 0x2512000
	0x01EC7F94 MOV W21, W3
	0x01EC7F98 MOV W22, W2
	0x01EC7F9C STR X8, [X31 + 0x48]
	0x01EC7FA0 LDRB W8, [X23 + 0x494]
	0x01EC7FA4 MOV X19, X1
	0x01EC7FA8 MOV X20, X0
	0x01EC7FAC TBNZ X8, 0x0, 0x1EC7FC4
	0x01EC7FB0 ADRP X0, 0x2237000
	0x01EC7FB4 LDR X0, [X0 + 0xA90]
	0x01EC7FB8 BL 0x1C16CF4
	0x01EC7FBC MOVZ W8, 0x1
	0x01EC7FC0 STRB W8, [X23 + 0x494]
	0x01EC7FC4 STRB W31, [X31 + 0xC]
	0x01EC7FC8 STP X31, X31, [X31 + 0x30]
	0x01EC7FCC STR X31, [X31 + 0x40]
	0x01EC7FD0 LDR X23, [X20 + 0x40]
	0x01EC7FD4 CBZ X23, 0x1EC80A0
	0x01EC7FD8 ADRP X10, 0x2237000
	0x01EC7FDC LDR X8, [X23]
	0x01EC7FE0 LDR X10, [X10 + 0xA90]
	0x01EC7FE4 LDRH W9, [X8 + 0x12E]
	0x01EC7FE8 LDR X1, [X10]
	0x01EC7FEC CBZ X9, 0x1EC8010
	0x01EC7FF0 LDR X10, [X8 + 0xB0]
	0x01EC7FF4 ADD X10, X10, 0x8
	0x01EC7FF8 LDUR X11, [X10 - 0x8]
	0x01EC7FFC CMP X11, X1
	0x01EC8000 B.EQ 0x1EC8020
	0x01EC8004 SUBS X9, X9, 0x1
	0x01EC8008 ADD X10, X10, 0x10
	0x01EC800C B.NE 0x1EC7FF8
	0x01EC8010 MOVZ W2, 0x1A
	0x01EC8014 MOV X0, X23
	0x01EC8018 BL 0x1C5C788
	0x01EC801C B 0x1EC8030
	0x01EC8020 LDR W9, [X10]
	0x01EC8024 ADD W9, W9, 0x1A
	0x01EC8028 ADD X8, X8, W9, 0x4, SXTW
	0x01EC802C ADD X0, X8, 0x138
	0x01EC8030 LDP X8, X5, [X0]
	0x01EC8034 ADD X3, X31, 0xC
	0x01EC8038 ADD X4, X31, 0x30
	0x01EC803C MOV X0, X23
	0x01EC8040 MOV W1, W22
	0x01EC8044 MOV W2, W21
	0x01EC8048 BLR X8
	0x01EC804C LDRB W8, [X31 + 0xC]
	0x01EC8050 CBZ W8, 0x1EC8078
	0x01EC8054 LDR V0, [X31 + 0x3]
	0x01EC8058 LDR X8, [X31 + 0x40]
	0x01EC805C LDR X0, [X20 + 0x130]
	0x01EC8060 ADD X2, X31, 0x10
	0x01EC8064 MOV X1, X19
	0x01EC8068 MOV X3, X31
	0x01EC806C STR V0, [X31 + 0x1]
	0x01EC8070 STR X8, [X31 + 0x20]
	0x01EC8074 BL 0x1F00794
	0x01EC8078 LDR X8, [X24 + 0x28]
	0x01EC807C LDR X9, [X31 + 0x48]
	0x01EC8080 CMP X8, X9
	0x01EC8084 B.NE 0x1EC80A4
	0x01EC8088 LDP X20, X19, [X31 + 0x80]
	0x01EC808C LDP X22, X21, [X31 + 0x70]
	0x01EC8090 LDP X24, X23, [X31 + 0x60]
	0x01EC8094 LDR X30, [X31 + 0x50]
	0x01EC8098 ADD X31, X31, 0x90
	0x01EC809C RET
	0x01EC80A0 BL 0x1C16F20
	0x01EC80A4 BL 0x3EB1B20
	0x01EC80A8 RET
	0x01EC80AC SUB X31, X31, 0x40
	0x01EC80B0 STR X30, [X31 + 0x10]
	0x01EC80B4 STP X22, X21, [X31 + 0x20]
	0x01EC80B8 STP X20, X19, [X31 + 0x30]
	0x01EC80BC ADRP X22, 0x2511000
	0x01EC80C0 ADRP X21, 0x2237000
	0x01EC80C4 LDRB W8, [X22 + 0x495]
	0x01EC80C8 LDR X21, [X21 + 0xC80]
	0x01EC80CC MOV X20, X1
	0x01EC80D0 MOV X19, X0
	0x01EC80D4 TBNZ X8, 0x0, 0x1EC811C
	0x01EC80D8 ADRP X0, 0x2237000
	0x01EC80DC LDR X0, [X0 + 0xC88]
	0x01EC80E0 BL 0x1C16CF4
	0x01EC80E4 ADRP X0, 0x2236000
	0x01EC80E8 LDR X0, [X0 + 0xA90]
	0x01EC80EC BL 0x1C16CF4
	0x01EC80F0 ADRP X0, 0x2237000
	0x01EC80F4 LDR X0, [X0 + 0xC90]
	0x01EC80F8 BL 0x1C16CF4
	0x01EC80FC ADRP X0, 0x2237000
	0x01EC8100 LDR X0, [X0 + 0xC98]
	0x01EC8104 BL 0x1C16CF4
	0x01EC8108 ADRP X0, 0x2237000
	0x01EC810C LDR X0, [X0 + 0xC80]
	0x01EC8110 BL 0x1C16CF4
	0x01EC8114 MOVZ W8, 0x1
	0x01EC8118 STRB W8, [X22 + 0x495]
	0x01EC811C LDR X0, [X21]
	0x01EC8120 STR W31, [X31 + 0x8]
	0x01EC8124 STR X31, [X31]
	0x01EC8128 BL 0x1C16F10
	0x01EC812C MOV X1, X19
	0x01EC8130 MOV X2, X31
	0x01EC8134 MOV X21, X0
	0x01EC8138 BL 0x1ED8140
	0x01EC813C LDR X0, [X19 + 0xB0]
	0x01EC8140 CBZ X0, 0x1EC82F0
	0x01EC8144 ADRP X8, 0x2237000
	0x01EC8148 LDR X8, [X8 + 0xC88]
	0x01EC814C LDR W9, [X20 + 0x18]
	0x01EC8150 MOV X2, X21
	0x01EC8154 LDR X3, [X8]
	0x01EC8158 SBFM W1, W9, 0x10, 0x1F
	0x01EC815C BL 0x2A1368C
	0x01EC8160 CBZ X21, 0x1EC82F0
	0x01EC8164 STR X20, [X21 + 0xD0]
	0x01EC8168 LDR X8, [X20 + 0x18]
	0x01EC816C MOV X0, X19
	0x01EC8170 STR X8, [X21 + 0xD8]
	0x01EC8174 BL 0x1EBDF30
	0x01EC8178 TBZ X0, 0x0, 0x1EC81D0
	0x01EC817C LDR X1, [X20 + 0x130]
	0x01EC8180 MOV X0, X19
	0x01EC8184 BL 0x1EC1840
	0x01EC8188 ANDS W31, W0, 0xFF
	0x01EC818C STR X0, [X31]
	0x01EC8190 STR W1, [X31 + 0x8]
	0x01EC8194 B.EQ 0x1EC82F4
	0x01EC8198 ADRP X22, 0x2237000
	0x01EC819C LDR X22, [X22 + 0xC98]
	0x01EC81A0 ADD X0, X31, 0x0
	0x01EC81A4 LDR X1, [X22]
	0x01EC81A8 BL 0x243F11C
	0x01EC81AC UBFM X1, X0, 0x20, 0x3F

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X22, 0x2513000
	015 Move X21, 0x2239000
	016 Move W8, [X22+1155]
	017 Move X21, [X21+3160]
	018 Move W20, W1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x2238000
	025 Move X0, [X0+2704]
	026 Call 0x1C17CF4
	027 Move X0, 0x2239000
	028 Move X0, [X0+3160]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+1155], W8
	032 Move X0, [X21]
	033 Move X1, X31
	034 Move [X31+32], X31
	035 Move [X31+40], X31
	036 Call EngineProfiler.Begin, X0
	037 Move X0, [X19+304]
	038 Move X1, X31
	039 Call NetPeerGroup.ConnectionIterator, X0
	040 Move [X31+80], X0
	041 Move [X31+88], X1
	042 Add X0, X31, 80
	043 Move X1, X31
	044 Call Iterator.Next, X0
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {204}
	049 Move X29, 0x2238000
	050 Move X29, [X29+2704]
	051 Add X8, X31, 48
	052 Add X28, X8, 8
	053 Add X0, X31, 80
	054 Move X1, X31
	055 Call Iterator.get_Current, X0
	056 Move W8, [X0+64]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add X0, X31, 80
	059 Move X1, X31
	060 Move [X31+48], X31
	061 Move [X31+56], X31
	062 Move [X31+64], X31
	063 Call Iterator.get_Current, X0
	064 Move X8, 0x2513000
	065 Move W8, [X8+1211]
	066 Move X22, X0
	067 Compare W8, 0
	068 JumpIfNotEqual {75}
	069 Move X0, 0x2239000
	070 Move X0, [X0+2656]
	071 Call 0x1C17CF4
	072 Move X8, 0x2513000
	073 Move W9, 1
	074 Move [X8+1211], W9
	075 Move X0, [X19+176]
	076 Compare X0, 0
	077 JumpIfEqual {220}
	078 Move X9, 0x2239000
	079 Move W8, [X22+24]
	080 Move X9, [X9+2656]
	081 NotImplemented "Instruction SBFM not yet implemented."
	082 Move X2, [X9]
	083 Call Dictionary`2<Int32, Object>.get_Item, X0, X1
	084 Compare X0, 0
	085 JumpIfEqual {220}
	086 Move X23, X0
	087 Move X0, [X0+216]
	088 Move X1, [X22+24]
	089 Move X2, X31
	090 Call NetConnectionId.op_Equality, X0, X1
	091 And W31, W0, 1
	092 NotImplemented "Instruction CSEL not yet implemented."
	093 Move [X31+72], X22
	094 Compare X22, 0
	095 JumpIfEqual {220}
	096 Move X27, X22
	097 Add X27, X27, 72
	098 Move W8, [X27]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move W26, W31
	101 Move X23, [X22+80]
	102 Move [X31+40], X23
	103 Compare X23, 0
	104 JumpIfEqual {220}
	105 Move X24, [X23+8]
	106 Compare X24, 0
	107 JumpIfEqual {220}
	108 Move W8, [X24]
	109 Move W21, [X24+20]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move TEMP, X21
	112 And TEMP, TEMP, 128
	113 Compare TEMP, 128
	114 JumpIfNotEqual {185}
	115 Move W8, W21
	116 ShiftRight W8, 3
	117 And W8, W8, 7
	118 Move [X31+32], W8
	119 Move TEMP, X21
	120 And TEMP, TEMP, 8
	121 Compare TEMP, 8
	122 JumpIfEqual {127}
	123 Move X8, [X22+56]
	124 Move X9, [X23]
	125 Add X8, X8, 1
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move TEMP, X21
	128 And TEMP, TEMP, 64
	129 Compare TEMP, 64
	130 JumpIfEqual {178}
	131 Move X25, [X19+64]
	132 Compare X25, 0
	133 JumpIfEqual {221}
	134 Move X8, [X25]
	135 Move X1, [X29]
	136 NotImplemented "Instruction LDRH not yet implemented."
	137 Compare X9, 0
	138 JumpIfEqual {145}
	139 Move X10, [X8+176]
	140 Add X10, X10, 8
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Subtract X9, X9, 1
	144 Add X10, X10, 16
	145 Move W2, 5
	146 Move X0, X25
	147 Call 0x1C5D788
	148 Move W9, [X10]
	149 Add W9, W9, 5
	150 Add X8, X8, W9
	151 Add X0, X8, 312
	152 Move X8, [X0]
	153 Move X2, [X0+8]
	154 Move X0, X25
	155 Move X1, X24
	156 NotImplemented "Instruction BLR not yet implemented."
	157 NotImplemented "Instruction CMP not yet implemented."
	158 And W8, W21, 8
	159 Move W8, W8
	160 ShiftRight W8, 3
	161 And W8, W8, 0x7FFFFFFF
	162 Compare W8, 0
	163 JumpIfEqual {185}
	164 Move X0, X27
	165 Move X1, X23
	166 Call SimulationMessageList.Remove, X0, X1
	167 Move X8, [X31+64]
	168 Add X9, X8, 24
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move [X23+16], X8
	171 Move [X23+24], X31
	172 NotImplemented "Instruction CSEL not yet implemented."
	173 Move [X8], X23
	174 Move W8, [X31+48]
	175 Move [X31+64], X23
	176 Add W26, W8, 1
	177 Move [X31+48], W26
	178 Add X1, X31, 72
	179 Add X2, X31, 32
	180 Move X0, X19
	181 Call Simulation.<DeliverMessages>g__ConsumeMessage|241_0, X0, X1, X2
	182 Move W8, [X22+72]
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move W26, W31
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X8, [X27+16]
	187 Move V0, [X27]
	188 Add X0, X31, 48
	189 Add X1, X31, 0
	190 Move [X31+16], X8
	191 Move [X31], V0
	192 Call SimulationMessageList.Concat, X0, X1
	193 Move X8, [X31+64]
	194 Move V0, [X31+3]
	195 Move [X27+16], X8
	196 Move [X27], V0
	197 Add X0, X31, 80
	198 Move X1, X31
	199 Call Iterator.Next, X0
	200 Move TEMP, X0
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfEqual {53}
	204 Move X0, X31
	205 Call EngineProfiler.End
	206 Move X20, [X31+176]
	207 Move X19, [X31+184]
	208 Move X22, [X31+160]
	209 Move X21, [X31+168]
	210 Move X24, [X31+144]
	211 Move X23, [X31+152]
	212 Move X26, [X31+128]
	213 Move X25, [X31+136]
	214 Move X28, [X31+112]
	215 Move X27, [X31+120]
	216 Move X29, [X31+96]
	217 Move X30, [X31+104]
	218 Add X31, X31, 192
	219 Return 
	220 Call 0x1C17F20
	221 Call 0x1C17F20
	222 Move X20, X0
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Move X0, X20
	225 Call 0x3EB2AD0
	226 Move X20, X0
	227 Move X0, 0x2232000
	228 Move X0, [X0+3264]
	229 Call 0x1C17D08
	230 Move X8, [X20]
	231 Move X1, [X8]
	232 Call 0x1C18270
	233 Move TEMP, X0
	234 And TEMP, TEMP, 1
	235 Compare TEMP, 1
	236 JumpIfNotEqual {245}
	237 Move X20, [X20]
	238 Call 0x3EB2AE0
	239 Add X1, X31, 72
	240 Add X2, X31, 32
	241 Move X0, X19
	242 Call Simulation.<DeliverMessages>g__ConsumeMessage|241_0, X0, X1, X2
	243 Move X0, X20
	244 Call 0x1C17F18
	245 Move W0, 8
	246 Call 0x3EB2AF0
	247 Move X8, [X20]
	248 Move [X0], X8
	249 Move X1, 0x1FED000
	250 Add X1, X1, 3672
	251 Move X2, X31
	252 Call 0x3EB2B00
	253 Move X20, X0
	254 Call 0x3EB2AE0
	255 Move X0, X20
	256 Call 0x1D2D690
	257 Call 0x1991590

Method: System.Void FreeMessages(ref Fusion.SimulationMessageList list)

Disassembly:
	0x01EC8238 BLR X8
	0x01EC823C AND X1, X0, 0x0
	0x01EC8240 MOV X0, X19
	0x01EC8244 MOV X2, X21
	0x01EC8248 BL 0x1EC2C0C
	0x01EC824C LDR X8, [X19]
	0x01EC8250 MOV X0, X19
	0x01EC8254 MOV X1, X20
	0x01EC8258 LDR X9, [X8 + 0x2E8]
	0x01EC825C LDR X2, [X8 + 0x2F0]
	0x01EC8260 BLR X9
	0x01EC8264 MOV X0, X19
	0x01EC8268 BL 0x1EC0864
	0x01EC826C TBZ X0, 0x0, 0x1EC82DC
	0x01EC8270 LDR X20, [X19 + 0x40]
	0x01EC8274 CBZ X20, 0x1EC8328
	0x01EC8278 ADRP X10, 0x2236000
	0x01EC827C LDR X8, [X20]
	0x01EC8280 LDR X10, [X10 + 0xA90]
	0x01EC8284 LDRH W9, [X8 + 0x12E]
	0x01EC8288 LDR X1, [X10]
	0x01EC828C CBZ X9, 0x1EC82B0
	0x01EC8290 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X1]
	006 Move X19, X1
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X20, X0
	009 Move X21, [X19+8]
	010 Move X0, X19
	011 Move X1, X21
	012 Call SimulationMessageList.Remove, X0, X1
	013 Move X0, X20
	014 Move X1, X21
	015 Move X2, X31
	016 Call SimulationMessageEnvelope.Free, X0, X1
	017 Move W8, [X19]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move [X19], X31
	020 Move [X19+8], X31
	021 Move [X19+16], X31
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 

Method: System.Void ConsumeAndWriteMessagesIntoBuffer(ref Fusion.SimulationMessageList inList, Fusion.Sockets.NetBitBuffer* buffer, System.Int32 bitCapacity, ref Fusion.SimulationMessageList outList, System.Boolean allowFirstMessageOverflow = True)

Disassembly:
	0x01EC79A0 BL 0x1C16CF4
	0x01EC79A4 ADRP X0, 0x2237000
	0x01EC79A8 LDR X0, [X0 + 0xBA0]
	0x01EC79AC BL 0x1C16CF4
	0x01EC79B0 ADRP X0, 0x2237000
	0x01EC79B4 LDR X0, [X0 + 0xBA8]
	0x01EC79B8 BL 0x1C16CF4
	0x01EC79BC ADRP X0, 0x2238000
	0x01EC79C0 LDR X0, [X0 + 0xC70]
	0x01EC79C4 BL 0x1C16CF4
	0x01EC79C8 ADRP X0, 0x2237000
	0x01EC79CC LDR X0, [X0 + 0xBB0]
	0x01EC79D0 BL 0x1C16CF4
	0x01EC79D4 MOVZ W8, 0x1
	0x01EC79D8 STRB W8, [X21 + 0x48B]
	0x01EC79DC STP X31, X31, [X31 + 0x8]
	0x01EC79E0 STR X31, [X31 + 0x18]
	0x01EC79E4 LDR X0, [X19 + 0xF8]
	0x01EC79E8 CBZ X0, 0x1EC7A94
	0x01EC79EC ADRP X8, 0x2238000
	0x01EC79F0 LDR X8, [X8 + 0xC70]
	0x01EC79F4 AND X20, X20, 0x0
	0x01EC79F8 MOV X1, X20
	0x01EC79FC LDR X2, [X8]
	0x01EC7A00 BL 0x2DB96D0
	0x01EC7A04 LDR X0, [X19 + 0xB0]
	0x01EC7A08 CBZ X0, 0x1EC7AAC
	0x01EC7A0C ADRP X8, 0x2237000
	0x01EC7A10 LDR X8, [X8 + 0xB90]
	0x01EC7A14 LDR X1, [X8]
	0x01EC7A18 BL 0x2A1352C
	0x01EC7A1C CBZ X0, 0x1EC7AAC
	0x01EC7A20 ADRP X8, 0x2237000
	0x01EC7A24 LDR X8, [X8 + 0xBB0]
	0x01EC7A28 ADRP X22, 0x2237000
	0x01EC7A2C ADRP X21, 0x2237000
	0x01EC7A30 LDR X1, [X8]
	0x01EC7A34 LDR X22, [X22 + 0xBA0]
	0x01EC7A38 LDR X21, [X21 + 0xB98]
	0x01EC7A3C ADD X8, X31, 0x8
	0x01EC7A40 BL 0x274B2CC
	0x01EC7A44 LDR X1, [X22]
	0x01EC7A48 ADD X0, X31, 0x8
	0x01EC7A4C BL 0x2BF5F4C
	0x01EC7A50 TBZ X0, 0x0, 0x1EC7A88
	0x01EC7A54 LDR X0, [X31 + 0x18]
	0x01EC7A58 CBZ X0, 0x1EC7AA8
	0x01EC7A5C MOV X1, X20
	0x01EC7A60 MOV W2, W31
	0x01EC7A64 MOV W3, W31
	0x01EC7A68 MOV X4, X31
	0x01EC7A6C BL 0x1ED0A18
	0x01EC7A70 CBZ X0, 0x1EC7A44
	0x01EC7A74 MOVZ W1, 0x2
	0x01EC7A78 MOV X2, X19
	0x01EC7A7C MOV X3, X31
	0x01EC7A80 BL 0x1E94D40
	0x01EC7A84 B 0x1EC7A44
	0x01EC7A88 LDR X1, [X21]
	0x01EC7A8C ADD X0, X31, 0x8
	0x01EC7A90 BL 0x2BF5F48
	0x01EC7A94 LDP X20, X19, [X31 + 0x40]
	0x01EC7A98 LDP X22, X21, [X31 + 0x30]
	0x01EC7A9C LDR X30, [X31 + 0x20]
	0x01EC7AA0 ADD X31, X31, 0x50
	0x01EC7AA4 RET
	0x01EC7AA8 BL 0x1C16F20
	0x01EC7AAC BL 0x1C16F20
	0x01EC7AB0 B 0x1EC7ABC
	0x01EC7AB4 B 0x1EC7ABC
	0x01EC7AB8 B 0x1EC7ABC
	0x01EC7ABC MOV X19, X0
	0x01EC7AC0 CMP W1, 0x1
	0x01EC7AC4 B.NE 0x1EC7AF0
	0x01EC7AC8 MOV X0, X19
	0x01EC7ACC BL 0x3EB1AD0
	0x01EC7AD0 LDR X20, [X0]
	0x01EC7AD4 BL 0x3EB1AE0
	0x01EC7AD8 LDR X1, [X21]
	0x01EC7ADC ADD X0, X31, 0x8
	0x01EC7AE0 BL 0x2BF5F48
	0x01EC7AE4 CBZ X20, 0x1EC7A94
	0x01EC7AE8 MOV X0, X20
	0x01EC7AEC BL 0x1C16F18
	0x01EC7AF0 MOV X20, X31
	0x01EC7AF4 B 0x1EC7AFC
	0x01EC7AF8 MOV X19, X0
	0x01EC7AFC LDR X1, [X21]
	0x01EC7B00 ADD X0, X31, 0x8
	0x01EC7B04 BL 0x2BF5F48
	0x01EC7B08 CBNZ X20, 0x1EC7B14
	0x01EC7B0C MOV X0, X19
	0x01EC7B10 BL 0x1D2C690
	0x01EC7B14 MOV X0, X20
	0x01EC7B18 BL 0x1C16F18
	0x01EC7B1C BL 0x1990590
	0x01EC7B20 SUB X31, X31, 0xC0
	0x01EC7B24 STR X30, [X31 + 0x70]
	0x01EC7B28 STP X26, X25, [X31 + 0x80]
	0x01EC7B2C STP X24, X23, [X31 + 0x90]
	0x01EC7B30 STP X22, X21, [X31 + 0xA0]
	0x01EC7B34 STP X20, X19, [X31 + 0xB0]
	0x01EC7B38 MRS X25, 0xC000
	0x01EC7B3C LDR X8, [X25 + 0x28]
	0x01EC7B40 ADRP X26, 0x2512000
	0x01EC7B44 MOV X19, X5
	0x01EC7B48 MOV X20, X4
	0x01EC7B4C STR X8, [X31 + 0x68]
	0x01EC7B50 LDRB W8, [X26 + 0x48C]
	0x01EC7B54 MOV X21, X3
	0x01EC7B58 MOV W22, W2
	0x01EC7B5C MOV W24, W1
	0x01EC7B60 MOV X23, X0
	0x01EC7B64 TBNZ X8, 0x0, 0x1EC7B7C
	0x01EC7B68 ADRP X0, 0x222F000
	0x01EC7B6C LDR X0, [X0 + 0xE40]
	0x01EC7B70 BL 0x1C16CF4
	0x01EC7B74 MOVZ W8, 0x1
	0x01EC7B78 STRB W8, [X26 + 0x48C]
	0x01EC7B7C ADRP X26, 0x2512000
	0x01EC7B80 LDRB W8, [X26 + 0x4B5]
	0x01EC7B84 STR W31, [X31 + 0x8]
	0x01EC7B88 CBNZ W8, 0x1EC7BA0
	0x01EC7B8C ADRP X0, 0x2238000
	0x01EC7B90 LDR X0, [X0 + 0x8D0]
	0x01EC7B94 BL 0x1C16CF4
	0x01EC7B98 MOVZ W8, 0x1
	0x01EC7B9C STRB W8, [X26 + 0x4B5]
	0x01EC7BA0 STR X31, [X31 + 0x58]
	0x01EC7BA4 LDR X0, [X23 + 0xB0]
	0x01EC7BA8 CBZ X0, 0x1EC7CB4
	0x01EC7BAC ADRP X8, 0x2238000
	0x01EC7BB0 LDR X8, [X8 + 0x8D0]
	0x01EC7BB4 ADRP X26, 0x222F000
	0x01EC7BB8 ADD X2, X31, 0x58
	0x01EC7BBC MOV W1, W24
	0x01EC7BC0 LDR X3, [X8]
	0x01EC7BC4 LDR X26, [X26 + 0xE40]
	0x01EC7BC8 BL 0x2A150AC
	0x01EC7BCC LDR X8, [X31 + 0x58]
	0x01EC7BD0 STP X31, X31, [X31 + 0x58]
	0x01EC7BD4 LDR X9, [X23]
	0x01EC7BD8 ANDS W31, W0, 0x1
	0x01EC7BDC MOV X0, X23
	0x01EC7BE0 CSEL X24, X8, X31, NE
	0x01EC7BE4 LDR X10, [X9 + 0x268]
	0x01EC7BE8 LDR X1, [X9 + 0x270]
	0x01EC7BEC BLR X10
	0x01EC7BF0 LDR X8, [X26]
	0x01EC7BF4 STR W0, [X31 + 0x8]
	0x01EC7BF8 LDR W9, [X8 + 0xE0]
	0x01EC7BFC CBNZ W9, 0x1EC7C08
	0x01EC7C00 MOV X0, X8
	0x01EC7C04 BL 0x1C16DFC
	0x01EC7C08 ADD X0, X31, 0x8
	0x01EC7C0C MOV X1, X31
	0x01EC7C10 BL 0x1E8D834
	0x01EC7C14 LDR W8, [X23 + 0x118]
	0x01EC7C18 ADD W9, W8, 0x1
	0x01EC7C1C STR W9, [X23 + 0x118]
	0x01EC7C20 CBZ X19, 0x1EC7C3C
	0x01EC7C24 LDR W8, [X19 + 0x18]
	0x01EC7C28 ADD X10, X19, 0x20
	0x01EC7C2C CMP W8, 0x0
	0x01EC7C30 CSEL X3, X31, X10, EQ
	0x01EC7C34 CBNZ X24, 0x1EC7C44
	0x01EC7C38 B 0x1EC7CB4
	0x01EC7C3C MOV X3, X31
	0x01EC7C40 CBZ X24, 0x1EC7CB4
	0x01EC7C44 LDR X8, [X23 + 0x130]
	0x01EC7C48 LDUR V0, [X31 + 0x58]
	0x01EC7C4C LDR X1, [X24 + 0xD0]
	0x01EC7C50 STR V0, [X31 + 0x4]
	0x01EC7C54 CBZ X19, 0x1EC7CB4
	0x01EC7C58 LDR V0, [X31 + 0x4]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0x2513000
	015 Move W8, [X23+1156]
	016 Move W25, W5
	017 Move X20, X4
	018 Move W24, W3
	019 Move X19, X2
	020 Move X22, X1
	021 Move X21, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {37}
	026 Move X0, 0x2231000
	027 Move X0, [X0+3912]
	028 Call 0x1C17CF4
	029 Move X0, 0x2238000
	030 Move X0, [X0+2904]
	031 Call 0x1C17CF4
	032 Move X0, 0x2238000
	033 Move X0, [X0+2912]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+1156], W8
	037 Move [X31+8], X31
	038 Move W26, [X19+80]
	039 Move X0, X19
	040 Move X1, X31
	041 Call NetBitBuffer.PadToByteBoundary, X0
	042 Move X0, X21
	043 Call Simulation.get_IsServer, X0
	044 Move W8, [X22]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X27, 0x2238000
	047 Move X27, [X27+2912]
	048 Move W23, W0
	049 Add W29, W26, W24
	050 Move X24, [X22+8]
	051 Move W26, [X19+80]
	052 Move [X31+8], X31
	053 Move TEMP, X23
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {72}
	057 Compare X24, 0
	058 JumpIfEqual {177}
	059 Move X8, [X24+8]
	060 Move W9, [X8+20]
	061 And W31, W9, 48
	062 Move W1, [X8+24]
	063 Move X8, 0x2231000
	064 Move X8, [X8+3912]
	065 Add X0, X31, 8
	066 Move X2, [X8]
	067 Call Nullable`1<PlayerRef>..ctor, X0, X1
	068 Move X8, [X24+8]
	069 Compare X8, 0
	070 JumpIfEqual {177}
	071 Move [X8+24], W31
	072 Move X0, X24
	073 Move X1, X19
	074 Move X2, X31
	075 Call SimulationMessageEnvelope.GetBitCount, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, -2147483648
	078 Compare TEMP, -2147483648
	079 JumpIfEqual {84}
	080 Move W8, [X19+80]
	081 Move W9, [X19+84]
	082 Add W8, W8, W0
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X25, X31
	085 Move W26, 6
	086 Move W8, [X31+8]
	087 Compare W8, 0
	088 JumpIfEqual {98}
	089 Compare X24, 0
	090 JumpIfEqual {177}
	091 Move X1, [X27]
	092 Move X28, [X24+8]
	093 Add X0, X31, 8
	094 Call Nullable`1<PlayerRef>.get_Value, X0
	095 Compare X28, 0
	096 JumpIfEqual {177}
	097 Move [X28+24], W0
	098 Compare X25, 0
	099 JumpIfNotEqual {178}
	100 Compare W26, 0
	101 JumpIfEqual {103}
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X8, [X21+264]
	104 Compare X8, 0
	105 JumpIfEqual {177}
	106 Move W9, [X8+24]
	107 Move X0, X22
	108 Add W9, W9, 1
	109 Move [X8+24], W9
	110 Move X1, [X22+8]
	111 Call SimulationMessageList.Remove, X0, X1
	112 Compare X24, 0
	113 JumpIfEqual {177}
	114 Move X8, [X24+8]
	115 Move W8, [X8+20]
	116 Move TEMP, X8
	117 And TEMP, TEMP, 8
	118 Compare TEMP, 8
	119 JumpIfEqual {123}
	120 Move X0, X20
	121 Move X1, X24
	122 Call SimulationMessageList.AddLast, X0, X1
	123 Move X0, X21
	124 Move X1, X24
	125 Move X2, X31
	126 Call SimulationMessageEnvelope.Free, X0, X1
	127 Move W8, [X22]
	128 Move W25, W31
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X0, X24
	131 Move X1, X19
	132 Move X2, X31
	133 Call SimulationMessageEnvelope.Write, X0, X1
	134 Move W8, [X19+80]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 NotImplemented "Instruction CSET not yet implemented."
	137 Or W8, W25, W8
	138 Move TEMP, X8
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfNotEqual {144}
	142 Move X25, X31
	143 Move W26, 8
	144 Move X25, X31
	145 Move [X19+80], W26
	146 Move X26, X0
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X0, X26
	149 Call 0x3EB2AD0
	150 Move X25, [X0]
	151 Call 0x3EB2AE0
	152 Move W26, W31
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move X8, [X21+264]
	155 Compare X8, 0
	156 JumpIfEqual {177}
	157 Move W0, [X8+24]
	158 Move X1, X31
	159 Call EngineProfiler.RpcOut, X0
	160 Move X0, X19
	161 Move X1, X31
	162 Call NetBitBuffer.PadToByteBoundary, X0
	163 Move X20, [X31+96]
	164 Move X19, [X31+104]
	165 Move X22, [X31+80]
	166 Move X21, [X31+88]
	167 Move X24, [X31+64]
	168 Move X23, [X31+72]
	169 Move X26, [X31+48]
	170 Move X25, [X31+56]
	171 Move X28, [X31+32]
	172 Move X27, [X31+40]
	173 Move X29, [X31+16]
	174 Move X30, [X31+24]
	175 Add X31, X31, 112
	176 Return 
	177 Call 0x1C17F20
	178 Move X0, X25
	179 Call 0x1C17F18
	180 Move X25, X31
	181 Move X26, X0
	182 Move W8, [X31+8]
	183 Compare W8, 0
	184 JumpIfNotEqual {189}
	185 Compare X25, 0
	186 JumpIfNotEqual {202}
	187 Move X0, X26
	188 Call 0x1D2D690
	189 Compare X24, 0
	190 JumpIfNotEqual {192}
	191 Call 0x1C17F20
	192 Move X19, [X24+8]
	193 Move X1, [X27]
	194 Add X0, X31, 8
	195 Call Nullable`1<PlayerRef>.get_Value, X0
	196 Compare X19, 0
	197 JumpIfNotEqual {199}
	198 Call 0x1C17F20
	199 Move [X19+24], W0
	200 Compare X25, 0
	201 JumpIfEqual {187}
	202 Move X0, X25
	203 Call 0x1C17F18
	204 Call 0x1991590

Method: System.Void ResolveMessageSourceAndTarget(Fusion.SimulationMessage* msg, Fusion.PlayerRef sourcePlayer)

Disassembly:
	0x01EC8294 ADD X10, X10, 0x8
	0x01EC8298 LDUR X11, [X10 - 0x8]
	0x01EC829C CMP X11, X1
	0x01EC82A0 B.EQ 0x1EC82C0
	0x01EC82A4 SUBS X9, X9, 0x1
	0x01EC82A8 ADD X10, X10, 0x10
	0x01EC82AC B.NE 0x1EC8298
	0x01EC82B0 MOVZ W2, 0xF
	0x01EC82B4 MOV X0, X20
	0x01EC82B8 BL 0x1C5C788
	0x01EC82BC B 0x1EC82D0
	0x01EC82C0 LDR W9, [X10]
	0x01EC82C4 ADD W9, W9, 0xF
	0x01EC82C8 ADD X8, X8, W9, 0x4, SXTW
	0x01EC82CC ADD X0, X8, 0x138
	0x01EC82D0 LDP X8, X1, [X0]
	0x01EC82D4 MOV X0, X20
	0x01EC82D8 BLR X8
	0x01EC82DC LDP X20, X19, [X31 + 0x30]
	0x01EC82E0 LDP X22, X21, [X31 + 0x20]
	0x01EC82E4 LDR X30, [X31 + 0x10]
	0x01EC82E8 ADD X31, X31, 0x40

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, X2
	006 Move X19, X1
	007 Move X20, X0
	008 Call Simulation.get_IsServer, X0
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {16}
	013 Compare X19, 0
	014 JumpIfEqual {32}
	015 Move [X19+4], W21
	016 Move W8, [X19+20]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 16
	019 Compare TEMP, 16
	020 JumpIfNotEqual {27}
	021 Move X8, [X20]
	022 Move X0, X20
	023 Move X9, [X8+616]
	024 Move X1, [X8+624]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move [X19+24], W0
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 
	032 Call 0x1C17F20

Method: System.Void RecvMessages()

Disassembly:
	0x01EC82EC RET
	0x01EC82F0 BL 0x1C16F20
	0x01EC82F4 ADRP X0, 0x222B000
	0x01EC82F8 LDR X0, [X0 + 0x7D0]
	0x01EC82FC BL 0x1C16D08
	0x01EC8300 BL 0x1C16F10
	0x01EC8304 MOV X1, X31
	0x01EC8308 MOV X19, X0
	0x01EC830C BL 0x33B2C54
	0x01EC8310 ADRP X0, 0x2237000
	0x01EC8314 LDR X0, [X0 + 0xCA0]
	0x01EC8318 BL 0x1C16D08
	0x01EC831C MOV X1, X0
	0x01EC8320 MOV X0, X19
	0x01EC8324 BL 0x1C16DEC
	0x01EC8328 BL 0x1C16F20
	0x01EC832C B 0x1EC8330
	0x01EC8330 MOV X20, X0
	0x01EC8334 CMP W1, 0x1
	0x01EC8338 B.NE 0x1EC83CC
	0x01EC833C MOV X0, X20
	0x01EC8340 BL 0x3EB1AD0
	0x01EC8344 MOV X20, X0
	0x01EC8348 ADRP X0, 0x222B000
	0x01EC834C LDR X0, [X0 + 0x7D0]
	0x01EC8350 BL 0x1C16D08
	0x01EC8354 LDR X8, [X20]
	0x01EC8358 LDR X1, [X8]
	0x01EC835C BL 0x1C17270
	0x01EC8360 TBZ X0, 0x0, 0x1EC83A4
	0x01EC8364 LDR X20, [X20]
	0x01EC8368 BL 0x3EB1AE0
	0x01EC836C ADRP X0, 0x2233000
	0x01EC8370 LDR X0, [X0 + 0x8B0]
	0x01EC8374 BL 0x1C16D08
	0x01EC8378 LDR W8, [X0 + 0xE0]
	0x01EC837C CBNZ W8, 0x1EC8384
	0x01EC8380 BL 0x1C16DFC
	0x01EC8384 ADRP X0, 0x2237000
	0x01EC8388 LDR X0, [X0 + 0xAB8]
	0x01EC838C BL 0x1C16D08
	0x01EC8390 MOV X2, X0
	0x01EC8394 MOV X0, X19
	0x01EC8398 MOV X1, X20
	0x01EC839C BL 0x2213878
	0x01EC83A0 B 0x1EC82DC
	0x01EC83A4 MOVZ W0, 0x8
	0x01EC83A8 BL 0x3EB1AF0
	0x01EC83AC LDR X8, [X20]
	0x01EC83B0 STR X8, [X0]
	0x01EC83B4 ADRP X1, 0x1FEC000
	0x01EC83B8 ADD X1, X1, 0xE58
	0x01EC83BC MOV X2, X31
	0x01EC83C0 BL 0x3EB1B00
	0x01EC83C4 MOV X20, X0
	0x01EC83C8 BL 0x3EB1AE0
	0x01EC83CC MOV X0, X20
	0x01EC83D0 BL 0x1D2C690
	0x01EC83D4 BL 0x1990590
	0x01EC83D8 SUB X31, X31, 0x50
	0x01EC83DC STR X30, [X31 + 0x10]
	0x01EC83E0 STP X24, X23, [X31 + 0x20]
	0x01EC83E4 STP X22, X21, [X31 + 0x30]
	0x01EC83E8 STP X20, X19, [X31 + 0x40]
	0x01EC83EC ADRP X21, 0x2511000
	0x01EC83F0 LDRB W8, [X21 + 0x496]
	0x01EC83F4 MOV W23, W2
	0x01EC83F8 MOV X20, X1
	0x01EC83FC MOV X19, X0
	0x01EC8400 TBNZ X8, 0x0, 0x1EC843C
	0x01EC8404 ADRP X0, 0x2237000
	0x01EC8408 LDR X0, [X0 + 0xB38]
	0x01EC840C BL 0x1C16CF4
	0x01EC8410 ADRP X0, 0x2237000
	0x01EC8414 LDR X0, [X0 + 0xCA8]
	0x01EC8418 BL 0x1C16CF4
	0x01EC841C ADRP X0, 0x2237000
	0x01EC8420 LDR X0, [X0 + 0xC90]
	0x01EC8424 BL 0x1C16CF4
	0x01EC8428 ADRP X0, 0x2237000
	0x01EC842C LDR X0, [X0 + 0xC98]
	0x01EC8430 BL 0x1C16CF4
	0x01EC8434 MOVZ W8, 0x1
	0x01EC8438 STRB W8, [X21 + 0x496]
	0x01EC843C ADRP X21, 0x2511000
	0x01EC8440 LDRB W8, [X21 + 0x4BB]
	0x01EC8444 STR W31, [X31 + 0x8]
	0x01EC8448 STR X31, [X31]
	0x01EC844C CBNZ W8, 0x1EC8464
	0x01EC8450 ADRP X0, 0x2237000
	0x01EC8454 LDR X0, [X0 + 0xA60]
	0x01EC8458 BL 0x1C16CF4
	0x01EC845C MOVZ W8, 0x1
	0x01EC8460 STRB W8, [X21 + 0x4BB]
	0x01EC8464 LDR X0, [X19 + 0xB0]
	0x01EC8468 CBZ X0, 0x1EC85B4
	0x01EC846C ADRP X9, 0x2237000
	0x01EC8470 LDR W8, [X20 + 0x18]
	0x01EC8474 LDR X9, [X9 + 0xA60]
	0x01EC8478 SBFM W1, W8, 0x10, 0x1F
	0x01EC847C LDR X2, [X9]
	0x01EC8480 BL 0x2A135EC
	0x01EC8484 CBZ X0, 0x1EC85B4
	0x01EC8488 MOV X21, X0
	0x01EC848C LDR X0, [X0 + 0xD8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0+272]
	006 Compare X8, 0
	007 JumpIfEqual {125}
	008 Move X19, X0
	009 Move X0, [X8+40]
	010 Move X1, X31
	011 Call NetBitBuffer.GetOffset, X0
	012 Move X8, [X19+272]
	013 Compare X8, 0
	014 JumpIfEqual {125}
	015 Move X0, [X8+40]
	016 Move X1, X31
	017 Call NetBitBuffer.SeekToByteBoundary, X0
	018 Move X8, [X19+272]
	019 Compare X8, 0
	020 JumpIfEqual {125}
	021 Move W20, [X8+28]
	022 Move X1, X31
	023 Move W0, W20
	024 Call EngineProfiler.RpcIn, X0
	025 Move X8, [X19+272]
	026 Compare X8, 0
	027 JumpIfEqual {125}
	028 Move X1, [X8+40]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X0, X19
	031 Move X2, X31
	032 Call SimulationMessageEnvelope.Read, X0, X1
	033 Compare X0, 0
	034 JumpIfEqual {125}
	035 Move X1, [X0+8]
	036 Move X21, X0
	037 Move W8, [X1+20]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 8
	040 Compare TEMP, 8
	041 JumpIfEqual {74}
	042 Move X8, [X19+272]
	043 Compare X8, 0
	044 JumpIfEqual {125}
	045 Move X9, [X8+48]
	046 Compare X9, 0
	047 JumpIfEqual {125}
	048 Move X10, [X21]
	049 Move X9, [X9+56]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W2, [X8+24]
	052 Move X0, X19
	053 Call Simulation.ResolveMessageSourceAndTarget, X0, X1, X2
	054 Move X8, [X19+272]
	055 Compare X8, 0
	056 JumpIfEqual {125}
	057 Move X8, [X8+48]
	058 Compare X8, 0
	059 JumpIfEqual {125}
	060 Move W9, [X8+72]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X9, [X8+88]
	063 Compare X9, 0
	064 JumpIfEqual {86}
	065 Move X10, [X9+8]
	066 Move W10, [X10+20]
	067 Move TEMP, X10
	068 And TEMP, TEMP, 8
	069 Compare TEMP, 8
	070 JumpIfNotEqual {89}
	071 Move X9, [X9+16]
	072 Compare X9, 0
	073 JumpIfNotEqual {65}
	074 Move X8, [X19+272]
	075 Compare X8, 0
	076 JumpIfEqual {125}
	077 Move W2, [X8+24]
	078 Move X0, X19
	079 Call Simulation.ResolveMessageSourceAndTarget, X0, X1, X2
	080 Move X8, [X19+272]
	081 Compare X8, 0
	082 JumpIfEqual {125}
	083 Move X8, [X8+48]
	084 Compare X8, 0
	085 JumpIfEqual {125}
	086 Add X0, X8, 72
	087 Move X1, X21
	088 Call SimulationMessageList.AddLast, X0, X1
	089 Move X10, [X9]
	090 Move X9, [X21]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X2, [X8+80]
	093 Compare X2, 0
	094 JumpIfEqual {110}
	095 Move X10, [X2+8]
	096 Move W10, [X10+20]
	097 Move TEMP, X10
	098 And TEMP, TEMP, 8
	099 Compare TEMP, 8
	100 JumpIfEqual {103}
	101 Move X10, [X2]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X2, [X2+24]
	104 Compare X2, 0
	105 JumpIfNotEqual {95}
	106 Move X0, X19
	107 Move X1, X21
	108 Move X2, X31
	109 Call SimulationMessageEnvelope.Free, X0, X1
	110 Move X8, [X19+272]
	111 Subtract W20, W20, 1
	112 Compare X8, 0
	113 JumpIfNotEqual {28}
	114 Add X0, X8, 72
	115 Move X1, X21
	116 Call SimulationMessageList.AddBefore, X0, X1, X2
	117 Move X20, [X31+16]
	118 Move X19, [X31+24]
	119 Move X0, X1
	120 Move X1, X31
	121 Move X30, [X31+32]
	122 Move X21, [X31+40]
	123 Call NetBitBuffer.SeekToByteBoundary, X0
	124 Return 
	125 Call 0x1C17F20

Method: Fusion.SimulationConnection GetSimulationConnectionByIndex(System.Int32 index)

Disassembly:
	0x01EC8490 LDR X1, [X20 + 0x18]
	0x01EC8494 MOV X2, X31
	0x01EC8498 BL 0x1EFC3FC
	0x01EC849C LDR X8, [X19]
	0x01EC84A0 MOV W22, W0
	0x01EC84A4 ANDS W31, W0, 0x1
	0x01EC84A8 MOV X0, X19
	0x01EC84AC LDR X9, [X8 + 0x2B8]
	0x01EC84B0 LDR X2, [X8 + 0x2C0]
	0x01EC84B4 MOV X1, X20
	0x01EC84B8 CSEL X21, X21, X31, NE
	0x01EC84BC BLR X9
	0x01EC84C0 LDR X8, [X19]
	0x01EC84C4 MOV X24, X0
	0x01EC84C8 MOV X0, X19
	0x01EC84CC MOV X1, X20
	0x01EC84D0 LDR X9, [X8 + 0x2F8]
	0x01EC84D4 LDR X3, [X8 + 0x300]
	0x01EC84D8 MOV W2, W23
	0x01EC84DC BLR X9
	0x01EC84E0 MOV X0, X19
	0x01EC84E4 BL 0x1EBDF30
	0x01EC84E8 TBZ X0, 0x0, 0x1EC8538
	0x01EC84EC CBZ X21, 0x1EC84FC
	0x01EC84F0 MOV X0, X19
	0x01EC84F4 MOV X1, X21
	0x01EC84F8 BL 0x1EBF0C8
	0x01EC84FC LDR X1, [X20 + 0x130]
	0x01EC8500 MOV X0, X19
	0x01EC8504 BL 0x1EC1840

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2512000
	007 Move W8, [X21+1157]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2238000
	015 Move X0, [X0+2256]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1157], W8
	019 Move [X31+8], X31
	020 Move X0, [X20+176]
	021 Compare X0, 0
	022 JumpIfEqual {38}
	023 Move X8, 0x2238000
	024 Move X8, [X8+2256]
	025 Add X2, X31, 8
	026 Move W1, W19
	027 Move X3, [X8]
	028 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	029 Move X8, [X31+8]
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X30, [X31+16]
	033 Move X21, [X31+24]
	034 And W31, W0, 1
	035 NotImplemented "Instruction CSEL not yet implemented."
	036 Add X31, X31, 48
	037 Return X0
	038 Call 0x1C17F20

Method: Fusion.SimulationConnection GetSimulationConnectionForPlayer(Fusion.PlayerRef player)

Disassembly:
	0x01EC8508 ANDS W31, W0, 0xFF
	0x01EC850C STR X0, [X31]
	0x01EC8510 STR W1, [X31 + 0x8]
	0x01EC8514 B.EQ 0x1EC85B8
	0x01EC8518 ADRP X8, 0x2237000
	0x01EC851C LDR X8, [X8 + 0xC98]
	0x01EC8520 ADD X0, X31, 0x0
	0x01EC8524 LDR X1, [X8]
	0x01EC8528 BL 0x243F11C
	0x01EC852C UBFM X1, X0, 0x20, 0x3F
	0x01EC8530 MOV X0, X19
	0x01EC8534 BL 0x1EC3E64
	0x01EC8538 AND X23, X24, 0x0
	0x01EC853C MOV X0, X19
	0x01EC8540 MOV X1, X23
	0x01EC8544 BL 0x1EC2D60
	0x01EC8548 LDR X0, [X19 + 0xB8]
	0x01EC854C CBZ X0, 0x1EC85B4
	0x01EC8550 ADRP X8, 0x2237000
	0x01EC8554 LDR X8, [X8 + 0xB38]
	0x01EC8558 MOV X1, X23
	0x01EC855C LDR X2, [X8]
	0x01EC8560 BL 0x2AE8354
	0x01EC8564 LDR X0, [X19 + 0xB0]
	0x01EC8568 CBZ X0, 0x1EC85B4
	0x01EC856C ADRP X8, 0x2237000
	0x01EC8570 LDR X8, [X8 + 0xCA8]
	0x01EC8574 LDR W9, [X20 + 0x18]
	0x01EC8578 LDR X2, [X8]
	0x01EC857C SBFM W1, W9, 0x10, 0x1F

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2512000
	007 Move W8, [X21+1158]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2231000
	015 Move X0, [X0+32]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1158], W8
	019 Move [X31+8], X31
	020 Move X0, [X20+184]
	021 Compare X0, 0
	022 JumpIfEqual {38}
	023 Move X8, 0x2231000
	024 Move X8, [X8+32]
	025 And X1, X19, 0
	026 Add X2, X31, 8
	027 Move X3, [X8]
	028 Call Dictionary`2<PlayerRef, Object>.TryGetValue, X0, X1, X2
	029 Move X8, [X31+8]
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X30, [X31+16]
	033 Move X21, [X31+24]
	034 And W31, W0, 1
	035 NotImplemented "Instruction CSEL not yet implemented."
	036 Add X31, X31, 48
	037 Return X0
	038 Call 0x1C17F20

Method: System.Boolean TryGetSimulationConnectionForPlayer(Fusion.PlayerRef player, out Fusion.SimulationConnection sc)

Disassembly:
	0x01EC8580 BL 0x2A14A88
	0x01EC8584 TBZ X22, 0x0, 0x1EC859C
	0x01EC8588 CBZ X21, 0x1EC85B4
	0x01EC858C MOV X0, X21
	0x01EC8590 MOV X1, X19
	0x01EC8594 MOV X2, X31
	0x01EC8598 BL 0x1ED8634
	0x01EC859C LDP X20, X19, [X31 + 0x40]
	0x01EC85A0 LDP X22, X21, [X31 + 0x30]
	0x01EC85A4 LDP X24, X23, [X31 + 0x20]
	0x01EC85A8 LDR X30, [X31 + 0x10]
	0x01EC85AC ADD X31, X31, 0x50
	0x01EC85B0 RET
	0x01EC85B4 BL 0x1C16F20
	0x01EC85B8 ADRP X0, 0x222B000
	0x01EC85BC LDR X0, [X0 + 0x7D0]
	0x01EC85C0 BL 0x1C16D08
	0x01EC85C4 BL 0x1C16F10
	0x01EC85C8 MOV X1, X31
	0x01EC85CC MOV X19, X0
	0x01EC85D0 BL 0x33B2C54
	0x01EC85D4 ADRP X0, 0x2237000
	0x01EC85D8 LDR X0, [X0 + 0xCB0]
	0x01EC85DC BL 0x1C16D08
	0x01EC85E0 MOV X1, X0
	0x01EC85E4 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2512000
	007 Move W8, [X22+1159]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2231000
	016 Move X0, [X0+32]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1159], W8
	020 Move X0, [X21+184]
	021 Compare X0, 0
	022 JumpIfEqual {35}
	023 Move X8, 0x2231000
	024 Move X8, [X8+32]
	025 And X1, X20, 0
	026 Move X2, X19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X3, [X8]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Call Dictionary`2<PlayerRef, Object>.TryGetValue, X0, X1, X2
	034 Return X0
	035 Call 0x1C17F20

Method: System.Nullable`1<System.Int32> GetConnectionIndexForPlayer(Fusion.PlayerRef player)

Disassembly:
	0x01EC85E8 BL 0x1C16DEC
	0x01EC85EC SUB X31, X31, 0x130
	0x01EC85F0 STR X29, [X31 + 0xE0]
	0x01EC85F4 STP X30, X25, [X31 + 0xF0]
	0x01EC85F8 STP X24, X23, [X31 + 0x100]
	0x01EC85FC STP X22, X21, [X31 + 0x110]
	0x01EC8600 STP X20, X19, [X31 + 0x120]
	0x01EC8604 MRS X24, 0xC000
	0x01EC8608 LDR X8, [X24 + 0x28]
	0x01EC860C ADRP X23, 0x2511000
	0x01EC8610 MOV X20, X3
	0x01EC8614 MOV X19, X2
	0x01EC8618 STR X8, [X31 + 0xD8]
	0x01EC861C LDRB W8, [X23 + 0x497]
	0x01EC8620 MOV X22, X1
	0x01EC8624 MOV X21, X0
	0x01EC8628 TBNZ X8, 0x0, 0x1EC8664
	0x01EC862C ADRP X0, 0x222B000
	0x01EC8630 LDR X0, [X0 + 0x618]
	0x01EC8634 BL 0x1C16CF4
	0x01EC8638 ADRP X0, 0x2230000
	0x01EC863C LDR X0, [X0 + 0x20]
	0x01EC8640 BL 0x1C16CF4
	0x01EC8644 ADRP X0, 0x2236000
	0x01EC8648 LDR X0, [X0 + 0xA90]
	0x01EC864C BL 0x1C16CF4
	0x01EC8650 ADRP X0, 0x222E000
	0x01EC8654 LDR X0, [X0 + 0xE40]
	0x01EC8658 BL 0x1C16CF4
	0x01EC865C MOVZ W8, 0x1
	0x01EC8660 STRB W8, [X23 + 0x497]
	0x01EC8664 MOV X0, X21
	0x01EC8668 STR W31, [X31 + 0x8]
	0x01EC866C STR X31, [X31]
	0x01EC8670 BL 0x1EBDF30
	0x01EC8674 TBZ X0, 0x0, 0x1EC86E4
	0x01EC8678 LDR W25, [X19 + 0x18]
	0x01EC867C ADDS W31, W25, 0x1
	0x01EC8680 B.EQ 0x1EC86CC
	0x01EC8684 LDR X8, [X21]
	0x01EC8688 MOV X0, X21
	0x01EC868C LDR X9, [X8 + 0x268]
	0x01EC8690 LDR X1, [X8 + 0x270]
	0x01EC8694 BLR X9
	0x01EC8698 ADRP X23, 0x222E000
	0x01EC869C LDR X23, [X23 + 0xE40]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2512000
	007 Move W8, [X21+1160]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2231000
	015 Move X0, [X0+32]
	016 Call 0x1C17CF4
	017 Move X0, 0x222D000
	018 Move X0, [X0+1136]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1160], W8
	022 Move [X31], X31
	023 Move X0, [X20+184]
	024 Compare X0, 0
	025 JumpIfEqual {57}
	026 Move X8, 0x2231000
	027 Move X8, [X8+32]
	028 And X1, X19, 0
	029 Add X2, X31, 0
	030 Move X3, [X8]
	031 Call Dictionary`2<PlayerRef, Object>.TryGetValue, X0, X1, X2
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {49}
	036 Move X0, [X31]
	037 Compare X0, 0
	038 JumpIfEqual {57}
	039 Move X1, X31
	040 Call SimulationConnection.get_ConnectionIndex, X0
	041 Move X8, 0x222D000
	042 Move X8, [X8+1136]
	043 Move W1, W0
	044 Add X0, X31, 8
	045 Move [X31+8], X31
	046 Move X2, [X8]
	047 Call Nullable`1<Int32>..ctor, X0, X1
	048 Move X0, [X31+8]
	049 Move X0, X31
	050 Move [X31+8], X31
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X30, [X31+16]
	054 Move X21, [X31+24]
	055 Add X31, X31, 48
	056 Return X0
	057 Call 0x1C17F20

Method: Fusion.SimulationConnection GetSimulationConnection(Fusion.Sockets.NetConnection* c)

Disassembly:
	0x01EC86A0 STR W0, [X31 + 0x8]
	0x01EC86A4 LDR X8, [X23]
	0x01EC86A8 LDR W9, [X8 + 0xE0]
	0x01EC86AC CBNZ W9, 0x1EC86B8
	0x01EC86B0 MOV X0, X8
	0x01EC86B4 BL 0x1C16DFC
	0x01EC86B8 ADD X0, X31, 0x8
	0x01EC86BC MOV X1, X31
	0x01EC86C0 BL 0x1E8D834
	0x01EC86C4 CMP W25, W0
	0x01EC86C8 B.NE 0x1EC87F4
	0x01EC86CC LDR X8, [X21 + 0x60]
	0x01EC86D0 CBZ X8, 0x1EC88CC
	0x01EC86D4 LDR X8, [X8 + 0x50]
	0x01EC86D8 CBZ X8, 0x1EC88CC
	0x01EC86DC LDRB W8, [X8 + 0x20]
	0x01EC86E0 TBZ X8, 0x0, 0x1EC880C
	0x01EC86E4 ADRP X8, 0x222B000
	0x01EC86E8 LDR X8, [X8 + 0x618]
	0x01EC86EC LDR W1, [X19 + 0x8]
	0x01EC86F0 LDR X0, [X8]
	0x01EC86F4 BL 0x1C16D6C
	0x01EC86F8 MOV X23, X0
	0x01EC86FC CBZ X0, 0x1EC8714
	0x01EC8700 LDR W8, [X23 + 0x18]
	0x01EC8704 CBZ W8, 0x1EC8710
	0x01EC8708 ADD X0, X23, 0x20
	0x01EC870C B 0x1EC8714
	0x01EC8710 MOV X0, X31
	0x01EC8714 LDR W2, [X19 + 0x8]
	0x01EC8718 MOV X1, X20
	0x01EC871C MOV X3, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2512000
	006 Move W8, [X21+1161]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2238000
	014 Move X0, [X0+2656]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1161], W8
	018 Move X0, [X20+176]
	019 Compare X0, 0
	020 JumpIfEqual {41}
	021 Move X8, 0x2238000
	022 Move X8, [X8+2656]
	023 Move W9, [X19+24]
	024 Move X2, [X8]
	025 NotImplemented "Instruction SBFM not yet implemented."
	026 Call Dictionary`2<Int32, Object>.get_Item, X0, X1
	027 Compare X0, 0
	028 JumpIfEqual {41}
	029 Move X20, X0
	030 Move X0, [X0+216]
	031 Move X1, [X19+24]
	032 Move X2, X31
	033 Call NetConnectionId.op_Equality, X0, X1
	034 And W31, W0, 1
	035 NotImplemented "Instruction CSEL not yet implemented."
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return X0
	041 Call 0x1C17F20

Method: System.Void AddToGlobalObjectInterest(Fusion.NetworkObjectMeta meta)

Disassembly:
	0x01EC8720 BL 0x1E35764
	0x01EC8724 LDR X8, [X21]
	0x01EC8728 LDR X20, [X21 + 0x40]
	0x01EC872C MOV X0, X21
	0x01EC8730 MOV X1, X22
	0x01EC8734 LDR X9, [X8 + 0x2B8]
	0x01EC8738 LDR X2, [X8 + 0x2C0]
	0x01EC873C BLR X9
	0x01EC8740 LDP V1, V0, [X19 + 0x10]
	0x01EC8744 LDR V2, [X19]
	0x01EC8748 STP V1, V0, [X31 + 0x50]
	0x01EC874C STR V2, [X31 + 0x4]
	0x01EC8750 CBZ X20, 0x1EC88CC
	0x01EC8754 LDP V0, V1, [X31 + 0x40]
	0x01EC8758 LDR V2, [X31 + 0x6]
	0x01EC875C ADRP X10, 0x2236000
	0x01EC8760 AND X19, X0, 0x0
	0x01EC8764 STP V0, V1, [X31 + 0x10]
	0x01EC8768 STR V2, [X31 + 0x3]
	0x01EC876C LDR X8, [X20]
	0x01EC8770 LDR X10, [X10 + 0xA90]
	0x01EC8774 LDRH W9, [X8 + 0x12E]
	0x01EC8778 LDR X1, [X10]
	0x01EC877C CBZ X9, 0x1EC87A0
	0x01EC8780 LDR X10, [X8 + 0xB0]
	0x01EC8784 ADD X10, X10, 0x8
	0x01EC8788 LDUR X11, [X10 - 0x8]
	0x01EC878C CMP X11, X1
	0x01EC8790 B.EQ 0x1EC87B0
	0x01EC8794 SUBS X9, X9, 0x1
	0x01EC8798 ADD X10, X10, 0x10
	0x01EC879C B.NE 0x1EC8788
	0x01EC87A0 MOVZ W2, 0x13
	0x01EC87A4 MOV X0, X20
	0x01EC87A8 BL 0x1C5C788
	0x01EC87AC B 0x1EC87C0
	0x01EC87B0 LDR W9, [X10]
	0x01EC87B4 ADD W9, W9, 0x13
	0x01EC87B8 ADD X8, X8, W9, 0x4, SXTW
	0x01EC87BC ADD X0, X8, 0x138
	0x01EC87C0 LDP V0, V1, [X31 + 0x10]
	0x01EC87C4 LDR V2, [X31 + 0x3]
	0x01EC87C8 LDR X8, [X0]
	0x01EC87CC ADD X2, X31, 0xA0
	0x01EC87D0 STP V0, V1, [X31 + 0xA0]
	0x01EC87D4 STR V2, [X31 + 0xC]
	0x01EC87D8 LDR X5, [X0 + 0x8]
	0x01EC87DC MOV X0, X20
	0x01EC87E0 MOV X1, X19
	0x01EC87E4 MOV W3, W31
	0x01EC87E8 MOV X4, X23
	0x01EC87EC BLR X8
	0x01EC87F0 B 0x1EC8820
	0x01EC87F4 LDR X8, [X21 + 0x60]
	0x01EC87F8 CBZ X8, 0x1EC88CC
	0x01EC87FC LDR X8, [X8 + 0x50]
	0x01EC8800 CBZ X8, 0x1EC88CC
	0x01EC8804 LDRB W8, [X8 + 0x20]
	0x01EC8808 TBNZ X8, 0x1, 0x1EC884C
	0x01EC880C LDR X0, [X21 + 0x130]
	0x01EC8810 MOV X1, X22
	0x01EC8814 MOV X2, X31
	0x01EC8818 MOV X3, X31
	0x01EC881C BL 0x1EFF96C
	0x01EC8820 LDR X8, [X24 + 0x28]
	0x01EC8824 LDR X9, [X31 + 0xD8]
	0x01EC8828 CMP X8, X9
	0x01EC882C B.NE 0x1EC88D0
	0x01EC8830 LDP X20, X19, [X31 + 0x120]
	0x01EC8834 LDP X22, X21, [X31 + 0x110]
	0x01EC8838 LDP X24, X23, [X31 + 0x100]
	0x01EC883C LDP X30, X25, [X31 + 0xF0]
	0x01EC8840 LDR X29, [X31 + 0xE0]
	0x01EC8844 ADD X31, X31, 0x130
	0x01EC8848 RET
	0x01EC884C LDR X0, [X23]
	0x01EC8850 LDR X22, [X21 + 0xB8]
	0x01EC8854 LDR W23, [X19 + 0x18]
	0x01EC8858 LDR W8, [X0 + 0xE0]
	0x01EC885C CBNZ W8, 0x1EC8864
	0x01EC8860 BL 0x1C16DFC
	0x01EC8864 MOV W0, W23
	0x01EC8868 MOV X1, X31
	0x01EC886C BL 0x1E8D9BC
	0x01EC8870 CBZ X22, 0x1EC88CC
	0x01EC8874 ADRP X8, 0x2230000
	0x01EC8878 LDR X8, [X8 + 0x20]
	0x01EC887C AND X1, X0, 0x0
	0x01EC8880 ADD X2, X31, 0x0
	0x01EC8884 MOV X0, X22
	0x01EC8888 LDR X3, [X8]
	0x01EC888C BL 0x2AE89D0
	0x01EC8890 TBZ X0, 0x0, 0x1EC8820
	0x01EC8894 LDR X8, [X31]
	0x01EC8898 CBZ X8, 0x1EC88CC
	0x01EC889C LDP V2, V0, [X19 + 0x10]
	0x01EC88A0 LDR V1, [X19]
	0x01EC88A4 LDR X0, [X21 + 0x130]
	0x01EC88A8 LDR X1, [X8 + 0xD0]
	0x01EC88AC STP V2, V0, [X31 + 0x80]
	0x01EC88B0 STR V1, [X31 + 0x7]
	0x01EC88B4 LDR W4, [X19 + 0x8]
	0x01EC88B8 ADD X2, X31, 0x70
	0x01EC88BC MOV X3, X20
	0x01EC88C0 MOV X5, X31
	0x01EC88C4 BL 0x1F00620
	0x01EC88C8 B 0x1EC8820
	0x01EC88CC BL 0x1C16F20
	0x01EC88D0 BL 0x3EB1B20
	0x01EC88D4 SUB X31, X31, 0xB0
	0x01EC88D8 STR X30, [X31 + 0x70]
	0x01EC88DC STP X24, X23, [X31 + 0x80]
	0x01EC88E0 STP X22, X21, [X31 + 0x90]
	0x01EC88E4 STP X20, X19, [X31 + 0xA0]
	0x01EC88E8 MRS X23, 0xC000
	0x01EC88EC LDR X8, [X23 + 0x28]
	0x01EC88F0 ADRP X24, 0x2511000
	0x01EC88F4 MOV X22, X3
	0x01EC88F8 MOV X19, X2
	0x01EC88FC STR X8, [X31 + 0x68]
	0x01EC8900 LDRB W8, [X24 + 0x498]
	0x01EC8904 MOV X21, X1
	0x01EC8908 MOV X20, X0
	0x01EC890C TBNZ X8, 0x0, 0x1EC8930
	0x01EC8910 ADRP X0, 0x2237000
	0x01EC8914 LDR X0, [X0 + 0xA70]
	0x01EC8918 BL 0x1C16CF4
	0x01EC891C ADRP X0, 0x2236000
	0x01EC8920 LDR X0, [X0 + 0xA90]
	0x01EC8924 BL 0x1C16CF4
	0x01EC8928 MOVZ W8, 0x1
	0x01EC892C STRB W8, [X24 + 0x498]
	0x01EC8930 MOV X0, X22
	0x01EC8934 MOV W1, W31
	0x01EC8938 MOV X2, X31
	0x01EC893C STR X31, [X31 + 0x8]
	0x01EC8940 BL 0x3317114
	0x01EC8944 LDR X8, [X20 + 0x100]
	0x01EC8948 CBZ X8, 0x1EC8A44
	0x01EC894C ADRP X9, 0x2237000
	0x01EC8950 LDR X9, [X9 + 0xA70]
	0x01EC8954 MOV X1, X0
	0x01EC8958 ADD X2, X31, 0x8
	0x01EC895C MOV X0, X8
	0x01EC8960 LDR X3, [X9]
	0x01EC8964 BL 0x2B228A4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X21, 0x2512000
	009 Move W8, [X21+1162]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {42}
	016 Move X0, 0x2237000
	017 Move X0, [X0+2960]
	018 Call 0x1C17CF4
	019 Move X0, 0x2237000
	020 Move X0, [X0+2968]
	021 Call 0x1C17CF4
	022 Move X0, 0x2237000
	023 Move X0, [X0+2976]
	024 Call 0x1C17CF4
	025 Move X0, 0x2237000
	026 Move X0, [X0+2984]
	027 Call 0x1C17CF4
	028 Move X0, 0x2238000
	029 Move X0, [X0+3168]
	030 Call 0x1C17CF4
	031 Move X0, 0x222F000
	032 Move X0, [X0+920]
	033 Call 0x1C17CF4
	034 Move X0, 0x2237000
	035 Move X0, [X0+2992]
	036 Call 0x1C17CF4
	037 Move X0, 0x2238000
	038 Move X0, [X0+3176]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X21+1162], W8
	042 Move [X31+8], X31
	043 Move [X31+16], X31
	044 Move [X31+24], X31
	045 Move X21, [X20+248]
	046 Compare X21, 0
	047 JumpIfEqual {128}
	048 Compare X19, 0
	049 JumpIfEqual {138}
	050 Move X22, 0x2238000
	051 Move X22, [X22+3168]
	052 Move X0, X19
	053 Move X1, X31
	054 Call NetworkObjectMeta.get_Id, X0
	055 Move X2, [X22]
	056 And X1, X0, 0
	057 Move X0, X21
	058 Call HashSet`1<NetworkId>.Add, X0, X1
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {82}
	063 Move X0, X19
	064 Move X1, X31
	065 Call NetworkObjectMeta.get_Id, X0
	066 Move X8, 0x222F000
	067 Move X8, [X8+920]
	068 Move [X31], W0
	069 Add X1, X31, 0
	070 Move X8, [X8]
	071 Move X0, X8
	072 Call 0x1C17E04
	073 Move X8, 0x2238000
	074 Move X8, [X8+3176]
	075 Move X1, X0
	076 Move X2, X31
	077 Move X8, [X8]
	078 Move X0, X8
	079 Call String.Format, X0, X1
	080 Move X1, X31
	081 Call Assert.AlwaysFail, X0
	082 Move X0, [X20+176]
	083 Compare X0, 0
	084 JumpIfEqual {138}
	085 Move X8, 0x2237000
	086 Move X8, [X8+2960]
	087 Move X1, [X8]
	088 Call Dictionary`2<Int32, Object>.get_Values, X0
	089 Compare X0, 0
	090 JumpIfEqual {138}
	091 Move X8, 0x2237000
	092 Move X8, [X8+2992]
	093 Move X23, 0x2237000
	094 Move X22, 0x2237000
	095 Move X1, [X8]
	096 Move X23, [X23+2976]
	097 Move X22, [X22+2968]
	098 Add X8, X31, 8
	099 Call ValueCollection<Int32, Object>.GetEnumerator, X0
	100 Move X1, [X23]
	101 Add X0, X31, 8
	102 Call Enumerator<Int32, Object>.MoveNext, X0
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfNotEqual {125}
	107 Move X21, [X31+24]
	108 Move X0, X19
	109 Move X1, X31
	110 Call NetworkObjectMeta.get_Id, X0
	111 Compare X21, 0
	112 JumpIfEqual {136}
	113 And X1, X0, 0
	114 Move W2, 1
	115 Move X0, X21
	116 Move W3, W31
	117 Move X4, X31
	118 Call SimulationConnection.GetObjectData, X0, X1, X2, X3
	119 Compare X0, 0
	120 JumpIfEqual {137}
	121 Move W1, 2
	122 Move X2, X20
	123 Move X3, X31
	124 Call NetworkObjectConnectionData.SetPlayerDataFlag, X0, X1, X2
	125 Move X1, [X22]
	126 Add X0, X31, 8
	127 Call Enumerator<Int32, Object>.Dispose, X0
	128 Move X20, [X31+64]
	129 Move X19, [X31+72]
	130 Move X22, [X31+48]
	131 Move X21, [X31+56]
	132 Move X30, [X31+32]
	133 Move X23, [X31+40]
	134 Add X31, X31, 80
	135 Return 
	136 Call 0x1C17F20
	137 Call 0x1C17F20
	138 Call 0x1C17F20
	139 Move X19, X0
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move X0, X19
	142 Call 0x3EB2AD0
	143 Move X20, [X0]
	144 Call 0x3EB2AE0
	145 Move X1, [X22]
	146 Add X0, X31, 8
	147 Call Enumerator<Int32, Object>.Dispose, X0
	148 Compare X20, 0
	149 JumpIfEqual {128}
	150 Move X0, X20
	151 Call 0x1C17F18
	152 Move X20, X31
	153 Move X19, X0
	154 Move X1, [X22]
	155 Add X0, X31, 8
	156 Call Enumerator<Int32, Object>.Dispose, X0
	157 Compare X20, 0
	158 JumpIfNotEqual {161}
	159 Move X0, X19
	160 Call 0x1D2D690
	161 Move X0, X20
	162 Call 0x1C17F18
	163 Call 0x1991590

Method: System.Void RemoveFromGlobalObjectInterest(Fusion.NetworkId id)

Disassembly:
	0x01EC8968 TBZ X0, 0x0, 0x1EC89DC
	0x01EC896C LDR X20, [X20 + 0x40]
	0x01EC8970 LDR X8, [X21 + 0x10]
	0x01EC8974 LDR V0, [X21]
	0x01EC8978 STR X8, [X31 + 0x40]
	0x01EC897C STR V0, [X31 + 0x3]
	0x01EC8980 CBZ X20, 0x1EC8A44
	0x01EC8984 LDR V0, [X31 + 0x3]
	0x01EC8988 LDR X8, [X31 + 0x40]
	0x01EC898C ADRP X10, 0x2236000
	0x01EC8990 STR V0, [X31 + 0x1]
	0x01EC8994 STR X8, [X31 + 0x20]
	0x01EC8998 LDR X8, [X20]
	0x01EC899C LDR X10, [X10 + 0xA90]
	0x01EC89A0 LDRH W9, [X8 + 0x12E]
	0x01EC89A4 LDR X1, [X10]
	0x01EC89A8 CBZ X9, 0x1EC89CC
	0x01EC89AC LDR X10, [X8 + 0xB0]
	0x01EC89B0 ADD X10, X10, 0x8
	0x01EC89B4 LDUR X11, [X10 - 0x8]
	0x01EC89B8 CMP X11, X1
	0x01EC89BC B.EQ 0x1EC89E4
	0x01EC89C0 SUBS X9, X9, 0x1
	0x01EC89C4 ADD X10, X10, 0x10
	0x01EC89C8 B.NE 0x1EC89B4
	0x01EC89CC MOVZ W2, 0x11
	0x01EC89D0 MOV X0, X20
	0x01EC89D4 BL 0x1C5C788
	0x01EC89D8 B 0x1EC89F4
	0x01EC89DC MOVZ W0, 0x2
	0x01EC89E0 B 0x1EC8A1C
	0x01EC89E4 LDR W9, [X10]
	0x01EC89E8 ADD W9, W9, 0x11
	0x01EC89EC ADD X8, X8, W9, 0x4, SXTW
	0x01EC89F0 ADD X0, X8, 0x138
	0x01EC89F4 LDR V0, [X31 + 0x1]
	0x01EC89F8 LDR X8, [X31 + 0x20]
	0x01EC89FC LDR X9, [X0]
	0x01EC8A00 ADD X1, X31, 0x50
	0x01EC8A04 STR V0, [X31 + 0x5]
	0x01EC8A08 STR X8, [X31 + 0x60]
	0x01EC8A0C LDR X3, [X0 + 0x8]
	0x01EC8A10 MOV X0, X20
	0x01EC8A14 MOV X2, X19
	0x01EC8A18 BLR X9
	0x01EC8A1C LDR X8, [X23 + 0x28]
	0x01EC8A20 LDR X9, [X31 + 0x68]
	0x01EC8A24 CMP X8, X9
	0x01EC8A28 B.NE 0x1EC8A48
	0x01EC8A2C LDP X20, X19, [X31 + 0xA0]
	0x01EC8A30 LDP X22, X21, [X31 + 0x90]
	0x01EC8A34 LDP X24, X23, [X31 + 0x80]
	0x01EC8A38 LDR X30, [X31 + 0x70]
	0x01EC8A3C ADD X31, X31, 0xB0
	0x01EC8A40 RET
	0x01EC8A44 BL 0x1C16F20
	0x01EC8A48 BL 0x3EB1B20
	0x01EC8A4C SUB X31, X31, 0x90
	0x01EC8A50 STP X30, X23, [X31 + 0x60]
	0x01EC8A54 STP X22, X21, [X31 + 0x70]
	0x01EC8A58 STP X20, X19, [X31 + 0x80]
	0x01EC8A5C MRS X23, 0xC000
	0x01EC8A60 LDR X8, [X23 + 0x28]
	0x01EC8A64 ADRP X21, 0x2511000
	0x01EC8A68 MOV W20, W2
	0x01EC8A6C MOV X22, X1
	0x01EC8A70 STR X8, [X31 + 0x58]
	0x01EC8A74 LDRB W8, [X21 + 0x499]
	0x01EC8A78 MOV X19, X0
	0x01EC8A7C TBNZ X8, 0x0, 0x1EC8A94
	0x01EC8A80 ADRP X0, 0x2236000
	0x01EC8A84 LDR X0, [X0 + 0xA90]
	0x01EC8A88 BL 0x1C16CF4
	0x01EC8A8C MOVZ W8, 0x1
	0x01EC8A90 STRB W8, [X21 + 0x499]
	0x01EC8A94 LDR X21, [X19 + 0x40]
	0x01EC8A98 LDR X8, [X22 + 0x10]
	0x01EC8A9C LDR V0, [X22]
	0x01EC8AA0 STR X8, [X31 + 0x30]
	0x01EC8AA4 STR V0, [X31 + 0x2]
	0x01EC8AA8 CBZ X21, 0x1EC8B60
	0x01EC8AAC LDR V0, [X31 + 0x2]
	0x01EC8AB0 LDR X8, [X31 + 0x30]
	0x01EC8AB4 ADRP X10, 0x2236000
	0x01EC8AB8 STR V0, [X31]
	0x01EC8ABC STR X8, [X31 + 0x10]
	0x01EC8AC0 LDR X8, [X21]
	0x01EC8AC4 LDR X10, [X10 + 0xA90]
	0x01EC8AC8 LDRH W9, [X8 + 0x12E]
	0x01EC8ACC LDR X1, [X10]
	0x01EC8AD0 CBZ X9, 0x1EC8AF4
	0x01EC8AD4 LDR X10, [X8 + 0xB0]
	0x01EC8AD8 ADD X10, X10, 0x8
	0x01EC8ADC LDUR X11, [X10 - 0x8]
	0x01EC8AE0 CMP X11, X1
	0x01EC8AE4 B.EQ 0x1EC8B04
	0x01EC8AE8 SUBS X9, X9, 0x1
	0x01EC8AEC ADD X10, X10, 0x10
	0x01EC8AF0 B.NE 0x1EC8ADC
	0x01EC8AF4 MOVZ W2, 0x12
	0x01EC8AF8 MOV X0, X21
	0x01EC8AFC BL 0x1C5C788
	0x01EC8B00 B 0x1EC8B14
	0x01EC8B04 LDR W9, [X10]
	0x01EC8B08 ADD W9, W9, 0x12
	0x01EC8B0C ADD X8, X8, W9, 0x4, SXTW
	0x01EC8B10 ADD X0, X8, 0x138
	0x01EC8B14 LDR V0, [X31]
	0x01EC8B18 LDR X8, [X31 + 0x10]
	0x01EC8B1C LDR X9, [X0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X21, 0x2512000
	008 Move W8, [X21+1163]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0x2237000
	016 Move X0, [X0+2960]
	017 Call 0x1C17CF4
	018 Move X0, 0x2237000
	019 Move X0, [X0+2968]
	020 Call 0x1C17CF4
	021 Move X0, 0x2237000
	022 Move X0, [X0+2976]
	023 Call 0x1C17CF4
	024 Move X0, 0x2237000
	025 Move X0, [X0+2984]
	026 Call 0x1C17CF4
	027 Move X0, 0x2238000
	028 Move X0, [X0+3184]
	029 Call 0x1C17CF4
	030 Move X0, 0x2237000
	031 Move X0, [X0+2992]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+1163], W8
	035 Move [X31+8], X31
	036 Move [X31+16], X31
	037 Move [X31+24], X31
	038 Move X0, [X19+248]
	039 Compare X0, 0
	040 JumpIfEqual {89}
	041 Move X8, 0x2238000
	042 Move X8, [X8+3184]
	043 And X20, X20, 0
	044 Move X1, X20
	045 Move X2, [X8]
	046 Call HashSet`1<NetworkId>.Remove, X0, X1
	047 Move X0, [X19+176]
	048 Compare X0, 0
	049 JumpIfEqual {97}
	050 Move X8, 0x2237000
	051 Move X8, [X8+2960]
	052 Move X1, [X8]
	053 Call Dictionary`2<Int32, Object>.get_Values, X0
	054 Compare X0, 0
	055 JumpIfEqual {97}
	056 Move X8, 0x2237000
	057 Move X8, [X8+2992]
	058 Move X22, 0x2237000
	059 Move X21, 0x2237000
	060 Move X1, [X8]
	061 Move X22, [X22+2976]
	062 Move X21, [X21+2968]
	063 Add X8, X31, 8
	064 Call ValueCollection<Int32, Object>.GetEnumerator, X0
	065 Move X1, [X22]
	066 Add X0, X31, 8
	067 Call Enumerator<Int32, Object>.MoveNext, X0
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {86}
	072 Move X0, [X31+24]
	073 Compare X0, 0
	074 JumpIfEqual {96}
	075 Move X1, X20
	076 Move W2, W31
	077 Move W3, W31
	078 Move X4, X31
	079 Call SimulationConnection.GetObjectData, X0, X1, X2, X3
	080 Compare X0, 0
	081 JumpIfEqual {65}
	082 Move W1, 2
	083 Move X2, X19
	084 Move X3, X31
	085 Call NetworkObjectConnectionData.ClearPlayerDataFlag, X0, X1, X2
	086 Move X1, [X21]
	087 Add X0, X31, 8
	088 Call Enumerator<Int32, Object>.Dispose, X0
	089 Move X20, [X31+64]
	090 Move X19, [X31+72]
	091 Move X22, [X31+48]
	092 Move X21, [X31+56]
	093 Move X30, [X31+32]
	094 Add X31, X31, 80
	095 Return 
	096 Call 0x1C17F20
	097 Call 0x1C17F20
	098 Move X19, X0
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X0, X19
	101 Call 0x3EB2AD0
	102 Move X20, [X0]
	103 Call 0x3EB2AE0
	104 Move X1, [X21]
	105 Add X0, X31, 8
	106 Call Enumerator<Int32, Object>.Dispose, X0
	107 Compare X20, 0
	108 JumpIfEqual {89}
	109 Move X0, X20
	110 Call 0x1C17F18
	111 Move X20, X31
	112 Move X19, X0
	113 Move X1, [X21]
	114 Add X0, X31, 8
	115 Call Enumerator<Int32, Object>.Dispose, X0
	116 Compare X20, 0
	117 JumpIfNotEqual {120}
	118 Move X0, X19
	119 Call 0x1D2D690
	120 Move X0, X20
	121 Call 0x1C17F18
	122 Call 0x1991590

Method: System.Void SendReliableData(System.Int32 connection, System.Int32 target, Fusion.Sockets.ReliableKey key, System.Byte[] data)

Disassembly:
	0x01EC8B20 STR V0, [X31 + 0x4]
	0x01EC8B24 STR X8, [X31 + 0x50]
	0x01EC8B28 LDR X3, [X0 + 0x8]
	0x01EC8B2C ADD X1, X31, 0x40
	0x01EC8B30 MOV X0, X21
	0x01EC8B34 MOV W2, W20
	0x01EC8B38 BLR X9
	0x01EC8B3C LDR X8, [X23 + 0x28]
	0x01EC8B40 LDR X9, [X31 + 0x58]
	0x01EC8B44 CMP X8, X9
	0x01EC8B48 B.NE 0x1EC8B64
	0x01EC8B4C LDP X20, X19, [X31 + 0x80]
	0x01EC8B50 LDP X22, X21, [X31 + 0x70]
	0x01EC8B54 LDP X30, X23, [X31 + 0x60]
	0x01EC8B58 ADD X31, X31, 0x90
	0x01EC8B5C RET
	0x01EC8B60 BL 0x1C16F20
	0x01EC8B64 BL 0x3EB1B20
	0x01EC8B68 CMP W1, 0x1
	0x01EC8B6C MOV X20, X0
	0x01EC8B70 B.NE 0x1EC8C04
	0x01EC8B74 MOV X0, X20
	0x01EC8B78 BL 0x3EB1AD0
	0x01EC8B7C MOV X20, X0
	0x01EC8B80 ADRP X0, 0x222B000
	0x01EC8B84 LDR X0, [X0 + 0x7D0]
	0x01EC8B88 BL 0x1C16D08
	0x01EC8B8C LDR X8, [X20]
	0x01EC8B90 LDR X1, [X8]
	0x01EC8B94 BL 0x1C17270
	0x01EC8B98 TBZ X0, 0x0, 0x1EC8BDC
	0x01EC8B9C LDR X20, [X20]
	0x01EC8BA0 BL 0x3EB1AE0
	0x01EC8BA4 ADRP X0, 0x2233000
	0x01EC8BA8 LDR X0, [X0 + 0x8B0]
	0x01EC8BAC BL 0x1C16D08
	0x01EC8BB0 LDR W8, [X0 + 0xE0]
	0x01EC8BB4 CBNZ W8, 0x1EC8BBC
	0x01EC8BB8 BL 0x1C16DFC
	0x01EC8BBC ADRP X0, 0x2237000
	0x01EC8BC0 LDR X0, [X0 + 0xAB8]
	0x01EC8BC4 BL 0x1C16D08
	0x01EC8BC8 MOV X2, X0
	0x01EC8BCC MOV X0, X19
	0x01EC8BD0 MOV X1, X20
	0x01EC8BD4 BL 0x2213878
	0x01EC8BD8 B 0x1EC8B3C
	0x01EC8BDC MOVZ W0, 0x8
	0x01EC8BE0 BL 0x3EB1AF0
	0x01EC8BE4 LDR X8, [X20]
	0x01EC8BE8 STR X8, [X0]
	0x01EC8BEC ADRP X1, 0x1FEC000
	0x01EC8BF0 ADD X1, X1, 0xE58
	0x01EC8BF4 MOV X2, X31
	0x01EC8BF8 BL 0x3EB1B00
	0x01EC8BFC MOV X20, X0
	0x01EC8C00 BL 0x3EB1AE0
	0x01EC8C04 MOV X0, X20
	0x01EC8C08 BL 0x1D2C690
	0x01EC8C0C BL 0x1990590
	0x01EC8C10 STR X30, [X31 - 0x20]!
	0x01EC8C14 STP X20, X19, [X31 + 0x10]
	0x01EC8C18 ADRP X19, 0x2511000
	0x01EC8C1C ADRP X20, 0x2237000
	0x01EC8C20 LDRB W8, [X19 + 0x49A]
	0x01EC8C24 LDR X20, [X20 + 0xCB8]
	0x01EC8C28 TBNZ X8, 0x0, 0x1EC8C40
	0x01EC8C2C ADRP X0, 0x2237000
	0x01EC8C30 LDR X0, [X0 + 0xCB8]
	0x01EC8C34 BL 0x1C16CF4
	0x01EC8C38 MOVZ W8, 0x1
	0x01EC8C3C STRB W8, [X19 + 0x49A]
	0x01EC8C40 LDR X0, [X20]
	0x01EC8C44 LDP X20, X19, [X31 + 0x10]
	0x01EC8C48 MOV X1, X31
	0x01EC8C4C LDR X30, [X31], #0x20
	0x01EC8C50 B 0x1E3B98C
	0x01EC8C54 STP X30, X23, [X31 - 0x30]!
	0x01EC8C58 STP X22, X21, [X31 + 0x10]
	0x01EC8C5C STP X20, X19, [X31 + 0x20]
	0x01EC8C60 ADRP X23, 0x2511000
	0x01EC8C64 LDRB W8, [X23 + 0x4BB]
	0x01EC8C68 LDR X21, [X0 + 0x110]
	0x01EC8C6C MOV X20, X2
	0x01EC8C70 MOV X19, X0
	0x01EC8C74 MOV X22, X1
	0x01EC8C78 CBNZ W8, 0x1EC8C90
	0x01EC8C7C ADRP X0, 0x2237000
	0x01EC8C80 LDR X0, [X0 + 0xA60]
	0x01EC8C84 BL 0x1C16CF4
	0x01EC8C88 MOVZ W8, 0x1
	0x01EC8C8C STRB W8, [X23 + 0x4BB]
	0x01EC8C90 LDR X0, [X19 + 0xB0]
	0x01EC8C94 CBZ X0, 0x1EC8DB4
	0x01EC8C98 ADRP X9, 0x2237000
	0x01EC8C9C LDR W8, [X22 + 0x18]
	0x01EC8CA0 LDR X9, [X9 + 0xA60]
	0x01EC8CA4 SBFM W1, W8, 0x10, 0x1F
	0x01EC8CA8 LDR X2, [X9]
	0x01EC8CAC BL 0x2A135EC
	0x01EC8CB0 CBZ X0, 0x1EC8DB4
	0x01EC8CB4 MOV X23, X0
	0x01EC8CB8 LDR X0, [X0 + 0xD8]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+112], X30
	003 Move [X31+128], X26
	004 Move [X31+136], X25
	005 Move [X31+144], X24
	006 Move [X31+152], X23
	007 Move [X31+160], X22
	008 Move [X31+168], X21
	009 Move [X31+176], X20
	010 Move [X31+184], X19
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X25+40]
	013 Move X26, 0x2512000
	014 Move X19, X5
	015 Move X20, X4
	016 Move [X31+104], X8
	017 Move W8, [X26+1164]
	018 Move X21, X3
	019 Move W22, W2
	020 Move W24, W1
	021 Move X23, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x222F000
	027 Move X0, [X0+3648]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X26+1164], W8
	031 Move X26, 0x2512000
	032 Move W8, [X26+1205]
	033 Move [X31+8], W31
	034 Compare W8, 0
	035 JumpIfNotEqual {41}
	036 Move X0, 0x2238000
	037 Move X0, [X0+2256]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X26+1205], W8
	041 Move [X31+88], X31
	042 Move X0, [X23+176]
	043 Compare X0, 0
	044 JumpIfEqual {120}
	045 Move X8, 0x2238000
	046 Move X8, [X8+2256]
	047 Move X26, 0x222F000
	048 Add X2, X31, 88
	049 Move W1, W24
	050 Move X3, [X8]
	051 Move X26, [X26+3648]
	052 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	053 Move X8, [X31+88]
	054 Move [X31+88], X31
	055 Move [X31+96], X31
	056 Move X9, [X23]
	057 And W31, W0, 1
	058 Move X0, X23
	059 NotImplemented "Instruction CSEL not yet implemented."
	060 Move X10, [X9+616]
	061 Move X1, [X9+624]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X8, [X26]
	064 Move [X31+8], W0
	065 Move W9, [X8+224]
	066 Compare W9, 0
	067 JumpIfNotEqual {70}
	068 Move X0, X8
	069 Call 0x1C17DFC
	070 Add X0, X31, 8
	071 Move X1, X31
	072 Call PlayerRef.get_AsIndex, X0
	073 Move W8, [X23+280]
	074 Add W9, W8, 1
	075 Move [X23+280], W9
	076 Compare X19, 0
	077 JumpIfEqual {84}
	078 Move W8, [X19+24]
	079 Add X10, X19, 32
	080 NotImplemented "Instruction CMP not yet implemented."
	081 NotImplemented "Instruction CSEL not yet implemented."
	082 Compare X24, 0
	083 JumpIfNotEqual {87}
	084 Move X3, X31
	085 Compare X24, 0
	086 JumpIfEqual {120}
	087 Move X8, [X23+304]
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 Move X1, [X24+208]
	090 Move [X31+4], V0
	091 Compare X19, 0
	092 JumpIfEqual {120}
	093 Move V0, [X31+4]
	094 Move [X31+32], W0
	095 Move [X31+36], W9
	096 Move [X31+40], W22
	097 Move [X31+44], X21
	098 Move [X31+52], X20
	099 Move [X31+1], V0
	100 Move [X31+60], W31
	101 Move W4, [X19+24]
	102 Add X2, X31, 16
	103 Move X0, X8
	104 Move X5, X31
	105 Call NetPeerGroup.SendReliable, X0, X1, X2, X3, X4
	106 Move X8, [X25+40]
	107 Move X9, [X31+104]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X20, [X31+176]
	110 Move X19, [X31+184]
	111 Move X22, [X31+160]
	112 Move X21, [X31+168]
	113 Move X24, [X31+144]
	114 Move X23, [X31+152]
	115 Move X26, [X31+128]
	116 Move X25, [X31+136]
	117 Move X30, [X31+112]
	118 Add X31, X31, 192
	119 Return 
	120 Call 0x1C17F20
	121 Call 0x3EB2B20

Method: System.Void NotifyWaitingForShutdown()

Disassembly:
	0x01EC8CBC LDR X1, [X22 + 0x18]
	0x01EC8CC0 MOV X2, X31
	0x01EC8CC4 BL 0x1EFC3FC

ISIL:
	001 Move W8, 1
	002 Move [X0+49], W8
	003 Return 

Method: Fusion.ILogSource Fusion.ILogSourceProxy.get_LogSource()

Disassembly:
	0x01EC8CC8 CBZ X21, 0x1EC8DB4
	0x01EC8CCC ANDS W31, W0, 0x1

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void DumpObject(Fusion.NetworkId id, System.Text.StringBuilder sb)

Disassembly:
	0x01EC8CD0 CSEL X1, X23, X31, NE

ISIL:
	001 Return 

Method: System.Void DumpObject(Fusion.NetworkObjectHeader* header, System.Text.StringBuilder sb)

Disassembly:
	0x01EC8CD4 MOV X0, X21

ISIL:
	001 Return 

Method: System.String DumpObject(Fusion.NetworkId id)

Disassembly:
	0x01EC8CD8 MOV X2, X20
	0x01EC8CDC MOV X3, X31
	0x01EC8CE0 BL 0x1ECF3E4
	0x01EC8CE4 LDR X8, [X19 + 0x110]
	0x01EC8CE8 CBZ X8, 0x1EC8DB4
	0x01EC8CEC LDR X0, [X8 + 0x30]
	0x01EC8CF0 CBZ X0, 0x1EC8DB4
	0x01EC8CF4 MOV X1, X31
	0x01EC8CF8 BL 0x1ED867C
	0x01EC8CFC MOV X0, X19
	0x01EC8D00 BL 0x1EC72EC
	0x01EC8D04 LDR X8, [X19]
	0x01EC8D08 LDR X1, [X8 + 0x290]
	0x01EC8D0C LDR X9, [X8 + 0x288]
	0x01EC8D10 MOV X0, X19
	0x01EC8D14 BLR X9
	0x01EC8D18 LDP X20, X19, [X31 + 0x20]
	0x01EC8D1C LDP X22, X21, [X31 + 0x10]
	0x01EC8D20 LDP X30, X23, [X31], #0x30
	0x01EC8D24 RET
	0x01EC8D28 CMP W1, 0x1
	0x01EC8D2C MOV X20, X0
	0x01EC8D30 B.NE 0x1EC8DE0
	0x01EC8D34 MOV X0, X20
	0x01EC8D38 BL 0x3EB1AD0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x2512000
	005 Move X20, 0x222C000
	006 Move W8, [X19+1165]
	007 Move X20, [X20+2288]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x222C000
	013 Move X0, [X0+2288]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1165], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call StringBuilder..ctor, X0
	022 Compare X19, 0
	023 JumpIfEqual {32}
	024 Move X8, [X19]
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X2, [X8+360]
	029 Move X1, [X8+368]
	030 Move X30, [X31+32]
	031 CallNoReturn X2
	032 Call 0x1C17F20

Method: System.String DumpObject(Fusion.NetworkObjectHeader* ptr)

Disassembly:
	0x01EC8D3C MOV X20, X0
	0x01EC8D40 ADRP X0, 0x222B000
	0x01EC8D44 LDR X0, [X0 + 0x7D0]
	0x01EC8D48 BL 0x1C16D08
	0x01EC8D4C LDR X8, [X20]
	0x01EC8D50 LDR X1, [X8]
	0x01EC8D54 BL 0x1C17270
	0x01EC8D58 TBZ X0, 0x0, 0x1EC8DB8
	0x01EC8D5C LDR X20, [X20]
	0x01EC8D60 BL 0x3EB1AE0
	0x01EC8D64 ADRP X0, 0x2233000
	0x01EC8D68 LDR X0, [X0 + 0x8B0]
	0x01EC8D6C BL 0x1C16D08
	0x01EC8D70 LDR W8, [X0 + 0xE0]
	0x01EC8D74 CBNZ W8, 0x1EC8D7C
	0x01EC8D78 BL 0x1C16DFC
	0x01EC8D7C ADRP X0, 0x2237000
	0x01EC8D80 LDR X0, [X0 + 0xAB8]
	0x01EC8D84 BL 0x1C16D08
	0x01EC8D88 MOV X2, X0
	0x01EC8D8C MOV X0, X19
	0x01EC8D90 MOV X1, X20
	0x01EC8D94 BL 0x2213878
	0x01EC8D98 LDR X0, [X19 + 0x110]
	0x01EC8D9C CBZ X0, 0x1EC8DB4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x2512000
	005 Move X20, 0x222C000
	006 Move W8, [X19+1166]
	007 Move X20, [X20+2288]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x222C000
	013 Move X0, [X0+2288]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1166], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call StringBuilder..ctor, X0
	022 Compare X19, 0
	023 JumpIfEqual {32}
	024 Move X8, [X19]
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X2, [X8+360]
	029 Move X1, [X8+368]
	030 Move X30, [X31+32]
	031 CallNoReturn X2
	032 Call 0x1C17F20

Method: System.Int32 get_ReliableDataSendRate()

Disassembly:
	0x01EC8DA0 LDP X20, X19, [X31 + 0x20]
	0x01EC8DA4 LDP X22, X21, [X31 + 0x10]
	0x01EC8DA8 MOV X1, X31
	0x01EC8DAC LDP X30, X23, [X31], #0x30
	0x01EC8DB0 B 0x1ECF428
	0x01EC8DB4 BL 0x1C16F20
	0x01EC8DB8 MOVZ W0, 0x8
	0x01EC8DBC BL 0x3EB1AF0
	0x01EC8DC0 LDR X8, [X20]
	0x01EC8DC4 STR X8, [X0]
	0x01EC8DC8 ADRP X1, 0x1FEC000
	0x01EC8DCC ADD X1, X1, 0xE58
	0x01EC8DD0 MOV X2, X31
	0x01EC8DD4 BL 0x3EB1B00
	0x01EC8DD8 MOV X20, X0
	0x01EC8DDC BL 0x3EB1AE0

ISIL:
	001 Move X8, [X0+304]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move V0, [X8+352]
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move W0, W31
	007 Return X0
	008 Move D1, 1
	009 Move X8, 0x7FF00000
	010 NotImplemented "Instruction FDIV not yet implemented."
	011 Move D1, X8
	012 NotImplemented "Instruction FCVTZS not yet implemented."
	013 NotImplemented "Instruction FCMP not yet implemented."
	014 Move W9, 0x80000000
	015 NotImplemented "Instruction CSEL not yet implemented."
	016 Return X0

Method: System.Void set_ReliableDataSendRate(System.Int32 value)

Disassembly:
	0x01EC8DE0 MOV X0, X20
	0x01EC8DE4 BL 0x1D2C690
	0x01EC8DE8 BL 0x1990590
	0x01EC8DEC STP X30, X25, [X31 - 0x40]!
	0x01EC8DF0 STP X24, X23, [X31 + 0x10]
	0x01EC8DF4 STP X22, X21, [X31 + 0x20]
	0x01EC8DF8 STP X20, X19, [X31 + 0x30]
	0x01EC8DFC LDR W8, [X1 + 0x40]
	0x01EC8E00 MOV X19, X2
	0x01EC8E04 MOV X20, X0
	0x01EC8E08 CMP W8, 0x3
	0x01EC8E0C B.NE 0x1EC8ED4
	0x01EC8E10 ADRP X22, 0x2511000
	0x01EC8E14 LDRB W8, [X22 + 0x4BB]
	0x01EC8E18 MOV X21, X1
	0x01EC8E1C CBNZ W8, 0x1EC8E34
	0x01EC8E20 ADRP X0, 0x2237000
	0x01EC8E24 LDR X0, [X0 + 0xA60]
	0x01EC8E28 BL 0x1C16CF4
	0x01EC8E2C MOVZ W8, 0x1
	0x01EC8E30 STRB W8, [X22 + 0x4BB]
	0x01EC8E34 LDR X0, [X20 + 0xB0]
	0x01EC8E38 CBZ X0, 0x1EC8F04
	0x01EC8E3C ADRP X9, 0x2237000
	0x01EC8E40 LDR W8, [X21 + 0x18]
	0x01EC8E44 LDR X9, [X9 + 0xA60]
	0x01EC8E48 SBFM W1, W8, 0x10, 0x1F
	0x01EC8E4C LDR X2, [X9]
	0x01EC8E50 BL 0x2A135EC
	0x01EC8E54 CBZ X0, 0x1EC8F04

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0+304]
	006 Compare X8, 0
	007 JumpIfEqual {31}
	008 Move X19, X0
	009 Move W20, W1
	010 Call Simulation.get_IsServer, X0
	011 Move W21, W0
	012 Move X0, X19
	013 Call Simulation.get_RuntimeConfigPtr, X0
	014 Move X8, [X19+304]
	015 Add X9, X0, 4
	016 Add X10, X0, 12
	017 And W31, W21, 1
	018 NotImplemented "Instruction CSEL not yet implemented."
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CSINC not yet implemented."
	021 Compare X8, 0
	022 JumpIfEqual {36}
	023 Move W10, [X10]
	024 Move S1, 1
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CSEL not yet implemented."
	027 NotImplemented "Instruction SCVTF not yet implemented."
	028 NotImplemented "Instruction FDIV not yet implemented."
	029 NotImplemented "Instruction FCVT not yet implemented."
	030 Move [X8+352], D0
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 
	036 Call 0x1C17F20

Method: System.Void NetworkInit(Fusion.Sockets.INetSocket socket, Fusion.Sockets.NetAddress address)

Disassembly:
	0x01EC239C MOV X0, X19
	0x01EC23A0 BL 0x1C16F18
	0x01EC23A4 B 0x1EC23A8
	0x01EC23A8 MOV X21, X0
	0x01EC23AC MOV W26, W1
	0x01EC23B0 B 0x1EC23F8
	0x01EC23B4 B 0x1EC23C0
	0x01EC23B8 B 0x1EC23C0
	0x01EC23BC B 0x1EC23C0
	0x01EC23C0 MOV X21, X0
	0x01EC23C4 CMP W1, 0x1
	0x01EC23C8 B.NE 0x1EC23E0
	0x01EC23CC MOV X0, X21
	0x01EC23D0 BL 0x3EB1AD0
	0x01EC23D4 LDR X19, [X0]
	0x01EC23D8 BL 0x3EB1AE0
	0x01EC23DC B 0x1EC1FB0
	0x01EC23E0 MOV X19, X31
	0x01EC23E4 MOV W26, W1
	0x01EC23E8 LDR X1, [X20]
	0x01EC23EC ADD X0, X31, 0x40
	0x01EC23F0 BL 0x2BC5F1C
	0x01EC23F4 CBNZ X19, 0x1EC246C
	0x01EC23F8 CMP W26, 0x1
	0x01EC23FC B.NE 0x1EC24BC
	0x01EC2400 MOV X0, X21
	0x01EC2404 BL 0x3EB1AD0
	0x01EC2408 MOV X19, X0
	0x01EC240C ADRP X0, 0x2231000
	0x01EC2410 LDR X0, [X0 + 0x7D0]
	0x01EC2414 BL 0x1C16D08
	0x01EC2418 LDR X8, [X19]
	0x01EC241C LDR X1, [X8]
	0x01EC2420 BL 0x1C17270
	0x01EC2424 TBZ X0, 0x0, 0x1EC2474
	0x01EC2428 LDR X19, [X19]
	0x01EC242C BL 0x3EB1AE0
	0x01EC2430 ADRP X0, 0x2239000
	0x01EC2434 LDR X0, [X0 + 0x8B0]
	0x01EC2438 BL 0x1C16D08
	0x01EC243C LDR W8, [X0 + 0xE0]
	0x01EC2440 CBNZ W8, 0x1EC2448
	0x01EC2444 BL 0x1C16DFC
	0x01EC2448 LDR X20, [X31 + 0x68]
	0x01EC244C ADRP X0, 0x223D000
	0x01EC2450 LDR X0, [X0 + 0xAB8]
	0x01EC2454 BL 0x1C16D08
	0x01EC2458 MOV X2, X0
	0x01EC245C MOV X0, X20
	0x01EC2460 MOV X1, X19
	0x01EC2464 BL 0x2213878
	0x01EC2468 B 0x1EC21C4
	0x01EC246C MOV X0, X19
	0x01EC2470 BL 0x1C16F18
	0x01EC2474 MOVZ W0, 0x8
	0x01EC2478 BL 0x3EB1AF0
	0x01EC247C LDR X8, [X19]
	0x01EC2480 STR X8, [X0]
	0x01EC2484 ADRP X1, 0x1FF2000
	0x01EC2488 ADD X1, X1, 0xE58
	0x01EC248C MOV X2, X31
	0x01EC2490 BL 0x3EB1B00
	0x01EC2494 B 0x1EC24B4
	0x01EC2498 MOV X21, X0
	0x01EC249C B 0x1EC23E4
	0x01EC24A0 MOV X20, X1
	0x01EC24A4 MOV X21, X0
	0x01EC24A8 BL 0x3EB1AE0
	0x01EC24AC MOV W26, W20
	0x01EC24B0 B 0x1EC24BC
	0x01EC24B4 MOV X21, X0
	0x01EC24B8 MOV W26, W1
	0x01EC24BC MOVZ W8, 0x1
	0x01EC24C0 CMP W26, W8
	0x01EC24C4 B.NE 0x1EC24E4
	0x01EC24C8 MOV X0, X21
	0x01EC24CC BL 0x3EB1AD0
	0x01EC24D0 LDR X8, [X0]
	0x01EC24D4 STR X8, [X31 + 0x18]
	0x01EC24D8 BL 0x3EB1AE0
	0x01EC24DC B 0x1EC21C4
	0x01EC24E0 MOV X21, X0
	0x01EC24E4 ADD X0, X31, 0x18
	0x01EC24E8 BL 0x1997920
	0x01EC24EC MOV X0, X21
	0x01EC24F0 BL 0x1D2C690
	0x01EC24F4 BL 0x1990590
	0x01EC24F8 RET
	0x01EC24FC RET
	0x01EC2500 RET
	0x01EC2504 RET
	0x01EC2508 RET
	0x01EC250C MOV W0, W31
	0x01EC2510 RET
	0x01EC2514 RET
	0x01EC2518 SUB X31, X31, 0x30
	0x01EC251C STP X30, X21, [X31 + 0x10]
	0x01EC2520 STP X20, X19, [X31 + 0x20]
	0x01EC2524 ADRP X21, 0x2517000
	0x01EC2528 LDRB W8, [X21 + 0x460]
	0x01EC252C MOV W20, W1
	0x01EC2530 MOV X19, X0
	0x01EC2534 TBNZ X8, 0x0, 0x1EC254C
	0x01EC2538 ADRP X0, 0x2235000
	0x01EC253C LDR X0, [X0 + 0xFD8]
	0x01EC2540 BL 0x1C16CF4
	0x01EC2544 MOVZ W8, 0x1
	0x01EC2548 STRB W8, [X21 + 0x460]
	0x01EC254C LDR W8, [X19 + 0x4C]
	0x01EC2550 CMP W8, 0x2
	0x01EC2554 B.NE 0x1EC2590
	0x01EC2558 LDR X8, [X19 + 0x58]
	0x01EC255C CBZ X8, 0x1EC25A0
	0x01EC2560 LDR W8, [X8 + 0x24]
	0x01EC2564 CMP W8, 0x1
	0x01EC2568 B.NE 0x1EC2590
	0x01EC256C ADRP X8, 0x2235000
	0x01EC2570 LDR X8, [X8 + 0xFD8]
	0x01EC2574 AND W1, W20, 0x1
	0x01EC2578 ADD X0, X31, 0xC
	0x01EC257C STRH W31, [X31 + 0xC]
	0x01EC2580 LDR X2, [X8]
	0x01EC2584 BL 0x242D570
	0x01EC2588 LDRH W8, [X31 + 0xC]
	0x01EC258C STURH W8, [X19 + 0xDD]
	0x01EC2590 LDP X20, X19, [X31 + 0x20]
	0x01EC2594 LDP X30, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-80], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Subtract X31, X31, 784
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X22+40]
	013 Move X23, 0x2518000
	014 Move X21, X2
	015 Move X20, X1
	016 Move [X31+776], X8
	017 Move W8, [X23+1167]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x2239000
	024 Move X0, [X0+744]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+1167], W8
	028 Move X8, [X19+96]
	029 Compare X8, 0
	030 JumpIfEqual {140}
	031 Move X0, [X8+80]
	032 Move X8, [X21+16]
	033 Move V0, [X21]
	034 Add X23, X31, 256
	035 Move [X31+544], X8
	036 Move [X23+17], V0
	037 Compare X0, 0
	038 JumpIfEqual {140}
	039 Move X8, [X31+544]
	040 Move V0, [X23+17]
	041 Add X1, X31, 256
	042 Move X2, X31
	043 Move [X31+272], X8
	044 Add X8, X31, 280
	045 Move [X23], V0
	046 Add X24, X31, 280
	047 Call NetworkConfiguration.ToNetConfig, X0, X1
	048 Move W21, [X31+280]
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 Add X1, X24, 24
	051 Add X0, X31, 552
	052 Move W2, 104
	053 Call 0x3EB2AC0
	054 Move X8, [X19+96]
	055 Compare X8, 0
	056 JumpIfEqual {140}
	057 Move X0, [X8+104]
	058 Compare X0, 0
	059 JumpIfEqual {140}
	060 Add X8, X31, 280
	061 Move X1, X31
	062 Call NetworkSimulationConfiguration.Create, X0
	063 Add X8, X31, 552
	064 Add X0, X8, 104
	065 Add X1, X31, 280
	066 Move W2, 120
	067 Call 0x3EB2AC0
	068 Move W8, [X19+76]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X8, [X19+88]
	071 Compare X8, 0
	072 JumpIfEqual {140}
	073 Move W8, [X8+36]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move W24, W31
	076 Move X0, X19
	077 Call Simulation.get_IsClient, X0
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {83}
	082 Move W24, 1
	083 Move X9, [X19+88]
	084 Compare X9, 0
	085 JumpIfEqual {140}
	086 Move W8, [X19+76]
	087 Move W24, [X9+36]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Subtract W24, W24, 1
	091 Move X25, 0x2239000
	092 Move X25, [X25+744]
	093 Add X8, X31, 8
	094 Add X0, X8, 24
	095 Add X1, X31, 552
	096 Move W2, 224
	097 Move [X19+288], X20
	098 Call 0x3EB2AC0
	099 Move W8, 1
	100 Move W9, 0x2000
	101 Add X0, X31, 8
	102 Move X1, X20
	103 Move X2, X31
	104 Move [X31+12], W8
	105 Move [X31+16], W24
	106 Move [X31+20], X23
	107 Move [X31+8], W21
	108 Move [X31+28], W9
	109 Call NetPeer.Initialize, X0, X1
	110 Move W1, W31
	111 Move X2, X31
	112 Move [X19+296], X0
	113 Call NetPeer.GetGroup, X0, X1
	114 Move [X19+304], X0
	115 Move X0, X31
	116 Call Environment.get_TickCount
	117 Move X8, [X25]
	118 Move W20, W0
	119 Move X0, X8
	120 Call 0x1C17F10
	121 Move W1, W20
	122 Move X2, X31
	123 Move X21, X0
	124 Call Random..ctor, X0, X1
	125 Move [X19+312], X21
	126 Move X8, [X22+40]
	127 Move X9, [X31+776]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Add X31, X31, 784
	130 Move X20, [X31+64]
	131 Move X19, [X31+72]
	132 Move X22, [X31+48]
	133 Move X21, [X31+56]
	134 Move X24, [X31+32]
	135 Move X23, [X31+40]
	136 Move X30, [X31+16]
	137 Move X25, [X31+24]
	138 Move X29, [X31+80]
	139 Return 
	140 Call 0x1C17F20
	141 Call 0x3EB2B20

Method: System.Void NetworkSend()

Disassembly:
	0x01EC73FC MOV X1, X21
	0x01EC7400 BL 0x1EBD3F4
	0x01EC7404 B 0x1EC7458
	0x01EC7408 LDR X10, [X9]
	0x01EC740C LDR X9, [X21]
	0x01EC7410 CMP X10, X9
	0x01EC7414 B.CC 0x1EC73F8
	0x01EC7418 LDR X2, [X8 + 0x50]
	0x01EC741C CBZ X2, 0x1EC7458
	0x01EC7420 LDR X10, [X2 + 0x8]
	0x01EC7424 LDRB W10, [X10 + 0x14]
	0x01EC7428 TBNZ X10, 0x3, 0x1EC7438
	0x01EC742C LDR X10, [X2]
	0x01EC7430 CMP X10, X9
	0x01EC7434 B.CS 0x1EC7444
	0x01EC7438 LDR X2, [X2 + 0x18]
	0x01EC743C CBNZ X2, 0x1EC7420
	0x01EC7440 B 0x1EC7458
	0x01EC7444 B.NE 0x1EC7468
	0x01EC7448 MOV X0, X19
	0x01EC744C MOV X1, X21
	0x01EC7450 MOV X2, X31
	0x01EC7454 BL 0x1EDA078
	0x01EC7458 LDR X8, [X19 + 0x110]
	0x01EC745C SUB W20, W20, 0x1
	0x01EC7460 CBNZ X8, 0x1EC7340
	0x01EC7464 B 0x1EC748C
	0x01EC7468 ADD X0, X8, 0x48

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2513000
	005 Move W8, [X20+1168]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2239000
	012 Move X0, [X0+3120]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1168], W8
	016 Move X8, [X19+296]
	017 Compare X8, 0
	018 JumpIfEqual {34}
	019 Move X8, 0x2239000
	020 Move X8, [X8+3120]
	021 Move X1, X31
	022 Move X0, [X8]
	023 Call EngineProfiler.Begin, X0
	024 Move X1, [X19+288]
	025 Move X0, [X19+296]
	026 Move X2, X31
	027 Call NetPeer.Send, X0, X1
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X0, X31
	031 Move X30, [X31+32]
	032 Call EngineProfiler.End
	033 Return 
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return 

Method: System.Void NetworkRecv()

Disassembly:
	0x01EC70F0 TBNZ X0, 0x0, 0x1EC6EDC
	0x01EC70F4 MOV X0, X31
	0x01EC70F8 BL 0x1E32194
	0x01EC70FC LDP X20, X19, [X31 + 0xB0]
	0x01EC7100 LDP X22, X21, [X31 + 0xA0]
	0x01EC7104 LDP X24, X23, [X31 + 0x90]
	0x01EC7108 LDP X26, X25, [X31 + 0x80]
	0x01EC710C LDP X28, X27, [X31 + 0x70]
	0x01EC7110 LDP X29, X30, [X31 + 0x60]
	0x01EC7114 ADD X31, X31, 0xC0
	0x01EC7118 RET
	0x01EC711C BL 0x1C16F20
	0x01EC7120 BL 0x1C16F20
	0x01EC7124 B 0x1EC7128
	0x01EC7128 MOV X20, X0
	0x01EC712C CMP W1, 0x1
	0x01EC7130 B.NE 0x1EC71A4
	0x01EC7134 MOV X0, X20
	0x01EC7138 BL 0x3EB1AD0
	0x01EC713C MOV X20, X0
	0x01EC7140 ADRP X0, 0x2232000
	0x01EC7144 LDR X0, [X0 + 0xCC0]
	0x01EC7148 BL 0x1C16D08
	0x01EC714C LDR X8, [X20]
	0x01EC7150 LDR X1, [X8]
	0x01EC7154 BL 0x1C17270
	0x01EC7158 TBZ X0, 0x0, 0x1EC717C
	0x01EC715C LDR X20, [X20]
	0x01EC7160 BL 0x3EB1AE0
	0x01EC7164 ADD X1, X31, 0x48
	0x01EC7168 ADD X2, X31, 0x20
	0x01EC716C MOV X0, X19
	0x01EC7170 BL 0x1EC71C4
	0x01EC7174 MOV X0, X20
	0x01EC7178 BL 0x1C16F18
	0x01EC717C MOVZ W0, 0x8
	0x01EC7180 BL 0x3EB1AF0
	0x01EC7184 LDR X8, [X20]
	0x01EC7188 STR X8, [X0]
	0x01EC718C ADRP X1, 0x1FED000
	0x01EC7190 ADD X1, X1, 0xE58
	0x01EC7194 MOV X2, X31
	0x01EC7198 BL 0x3EB1B00
	0x01EC719C MOV X20, X0
	0x01EC71A0 BL 0x3EB1AE0
	0x01EC71A4 MOV X0, X20
	0x01EC71A8 BL 0x1D2C690
	0x01EC71AC BL 0x1990590
	0x01EC71B0 LDR W0, [X1 + 0x1C]
	0x01EC71B4 RET
	0x01EC71B8 ADD X0, X1, 0x20
	0x01EC71BC RET
	0x01EC71C0 RET
	0x01EC71C4 STR X30, [X31 - 0x20]!
	0x01EC71C8 STP X20, X19, [X31 + 0x10]
	0x01EC71CC LDRB W8, [X2]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2513000
	006 Move W8, [X20+1169]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x2234000
	013 Move X0, [X0+744]
	014 Call 0x1C17CF4
	015 Move X0, 0x2239000
	016 Move X0, [X0+3104]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1169], W8
	020 Move X8, [X19+296]
	021 Compare X8, 0
	022 JumpIfEqual {65}
	023 Move X8, 0x2239000
	024 Move X8, [X8+3104]
	025 Move X1, X31
	026 Move X0, [X8]
	027 Call EngineProfiler.Begin, X0
	028 Move X20, [X19+312]
	029 Compare X20, 0
	030 JumpIfNotEqual {44}
	031 Move X0, X31
	032 Call Environment.get_TickCount
	033 Move X8, 0x2234000
	034 Move X8, [X8+744]
	035 Move W21, W0
	036 Move X8, [X8]
	037 Move X0, X8
	038 Call 0x1C17F10
	039 Move W1, W21
	040 Move X2, X31
	041 Move X20, X0
	042 Call Random..ctor, X0, X1
	043 Move [X19+312], X20
	044 Move X1, [X19+288]
	045 Move X0, [X19+296]
	046 Move X2, X20
	047 Move X3, X31
	048 Call NetPeer.Recv, X0, X1, X2
	049 Move X0, [X19+304]
	050 Move X1, X19
	051 Move X2, X31
	052 Call NetPeerGroup.Update, X0, X1
	053 Move X8, [X19]
	054 Move X0, X19
	055 Move X9, [X8+776]
	056 Move X1, [X8+784]
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X0, X31
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Call EngineProfiler.End
	064 Return 
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Return 

Method: System.Void NetworkShutdown()

Disassembly:
	0x01EC3928 STR X30, [X31 - 0x20]!
	0x01EC392C STP X20, X19, [X31 + 0x10]
	0x01EC3930 LDR X8, [X0 + 0x58]
	0x01EC3934 CBZ X8, 0x1EC3998
	0x01EC3938 LDR W8, [X8 + 0x38]
	0x01EC393C MOV X19, X0
	0x01EC3940 CMP W8, 0x1
	0x01EC3944 B.NE 0x1EC3958
	0x01EC3948 MOV X0, X19
	0x01EC394C LDP X20, X19, [X31 + 0x10]
	0x01EC3950 LDR X30, [X31], #0x20
	0x01EC3954 B 0x1EBDF30
	0x01EC3958 LDR X8, [X19]
	0x01EC395C MOV X20, X1
	0x01EC3960 MOV X0, X19
	0x01EC3964 LDR X9, [X8 + 0x268]
	0x01EC3968 LDR X1, [X8 + 0x270]
	0x01EC396C BLR X9
	0x01EC3970 CBZ X20, 0x1EC3998
	0x01EC3974 LDR X8, [X20 + 0xB0]
	0x01EC3978 CBZ X8, 0x1EC3998
	0x01EC397C LDR W1, [X8 + 0x20]
	0x01EC3980 AND X2, X0, 0x0
	0x01EC3984 MOV X0, X19
	0x01EC3988 LDP X20, X19, [X31 + 0x10]
	0x01EC398C MOV X3, X31
	0x01EC3990 LDR X30, [X31], #0x20
	0x01EC3994 B 0x1DBF8E4
	0x01EC3998 BL 0x1C16F20
	0x01EC399C STR X30, [X31 - 0x20]!
	0x01EC39A0 STP X20, X19, [X31 + 0x10]
	0x01EC39A4 LDR X8, [X0 + 0x58]
	0x01EC39A8 CBZ X8, 0x1EC3A0C
	0x01EC39AC LDR W8, [X8 + 0x38]
	0x01EC39B0 MOV X19, X0
	0x01EC39B4 CMP W8, 0x1
	0x01EC39B8 B.NE 0x1EC39CC
	0x01EC39BC MOV X0, X19
	0x01EC39C0 LDP X20, X19, [X31 + 0x10]
	0x01EC39C4 LDR X30, [X31], #0x20
	0x01EC39C8 B 0x1EBDF30
	0x01EC39CC LDR X8, [X19]
	0x01EC39D0 MOV X20, X1
	0x01EC39D4 MOV X0, X19
	0x01EC39D8 LDR X9, [X8 + 0x268]
	0x01EC39DC LDR X1, [X8 + 0x270]
	0x01EC39E0 BLR X9
	0x01EC39E4 CBZ X20, 0x1EC3A0C
	0x01EC39E8 LDR X8, [X20 + 0x20]
	0x01EC39EC CBZ X8, 0x1EC3A0C
	0x01EC39F0 LDR W1, [X8 + 0x20]
	0x01EC39F4 AND X2, X0, 0x0
	0x01EC39F8 MOV X0, X19
	0x01EC39FC LDP X20, X19, [X31 + 0x10]
	0x01EC3A00 MOV X3, X31
	0x01EC3A04 LDR X30, [X31], #0x20
	0x01EC3A08 B 0x1DBF8E4
	0x01EC3A0C BL 0x1C16F20
	0x01EC3A10 STR X30, [X31 - 0x20]!
	0x01EC3A14 STP X20, X19, [X31 + 0x10]
	0x01EC3A18 AND X1, X1, 0x0
	0x01EC3A1C ADD X2, X31, 0x8
	0x01EC3A20 MOV X19, X0
	0x01EC3A24 STR X31, [X31 + 0x8]
	0x01EC3A28 BL 0x1EC0278
	0x01EC3A2C TBZ X0, 0x0, 0x1EC3A50
	0x01EC3A30 LDR X8, [X19 + 0x58]
	0x01EC3A34 CBZ X8, 0x1EC3AA0
	0x01EC3A38 LDR W8, [X8 + 0x38]
	0x01EC3A3C CMP W8, 0x1
	0x01EC3A40 B.NE 0x1EC3A58
	0x01EC3A44 MOV X0, X19
	0x01EC3A48 BL 0x1EBDF30
	0x01EC3A4C B 0x1EC3A90
	0x01EC3A50 MOV W0, W31
	0x01EC3A54 B 0x1EC3A90
	0x01EC3A58 LDR X8, [X19]
	0x01EC3A5C LDR X20, [X31 + 0x8]
	0x01EC3A60 MOV X0, X19
	0x01EC3A64 LDR X9, [X8 + 0x268]
	0x01EC3A68 LDR X1, [X8 + 0x270]
	0x01EC3A6C BLR X9
	0x01EC3A70 CBZ X20, 0x1EC3AA0
	0x01EC3A74 LDR X8, [X20 + 0xB0]
	0x01EC3A78 CBZ X8, 0x1EC3AA0
	0x01EC3A7C LDR W1, [X8 + 0x20]
	0x01EC3A80 AND X2, X0, 0x0
	0x01EC3A84 MOV X0, X19
	0x01EC3A88 MOV X3, X31
	0x01EC3A8C BL 0x1DBF8E4
	0x01EC3A90 LDP X20, X19, [X31 + 0x10]
	0x01EC3A94 AND W0, W0, 0x1
	0x01EC3A98 LDR X30, [X31], #0x20
	0x01EC3A9C RET
	0x01EC3AA0 BL 0x1C16F20
	0x01EC3AA4 STR X30, [X31 - 0x10]!
	0x01EC3AA8 CBZ X1, 0x1EC3AC0
	0x01EC3AAC LDR X8, [X1 + 0x20]
	0x01EC3AB0 CBZ X8, 0x1EC3AC0
	0x01EC3AB4 LDR W0, [X8 + 0x1C]
	0x01EC3AB8 LDR X30, [X31], #0x10
	0x01EC3ABC RET
	0x01EC3AC0 BL 0x1C16F20
	0x01EC3AC4 SUB X31, X31, 0x30
	0x01EC3AC8 STP X30, X21, [X31 + 0x10]
	0x01EC3ACC STP X20, X19, [X31 + 0x20]
	0x01EC3AD0 ADRP X21, 0x2516000
	0x01EC3AD4 LDRB W8, [X21 + 0x46F]
	0x01EC3AD8 MOV X20, X1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X20, 0x2517000
	008 Move W8, [X20+1170]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x223C000
	015 Move X0, [X0+2960]
	016 Call 0x1C17CF4
	017 Move X0, 0x223C000
	018 Move X0, [X0+2968]
	019 Call 0x1C17CF4
	020 Move X0, 0x223C000
	021 Move X0, [X0+2976]
	022 Call 0x1C17CF4
	023 Move X0, 0x223C000
	024 Move X0, [X0+2984]
	025 Call 0x1C17CF4
	026 Move X0, 0x223C000
	027 Move X0, [X0+2992]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1170], W8
	031 Move [X31+8], X31
	032 Move [X31+16], X31
	033 Move [X31+24], X31
	034 Move X8, [X19]
	035 Move X0, X19
	036 Move X9, [X8+872]
	037 Move X1, [X8+880]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X0, [X19+176]
	040 Compare X0, 0
	041 JumpIfEqual {92}
	042 Move X8, 0x223C000
	043 Move X8, [X8+2960]
	044 Move X1, [X8]
	045 Call Dictionary`2<Int32, Object>.get_Values, X0
	046 Compare X0, 0
	047 JumpIfEqual {92}
	048 Move X8, 0x223C000
	049 Move X8, [X8+2992]
	050 Move X21, 0x223C000
	051 Move X20, 0x223C000
	052 Move X1, [X8]
	053 Move X21, [X21+2976]
	054 Move X20, [X20+2968]
	055 Add X8, X31, 8
	056 Call ValueCollection<Int32, Object>.GetEnumerator, X0
	057 Move X1, [X21]
	058 Add X0, X31, 8
	059 Call Enumerator<Int32, Object>.MoveNext, X0
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {73}
	064 Move X22, [X31+24]
	065 Compare X22, 0
	066 JumpIfEqual {91}
	067 Add X1, X22, 72
	068 Move X0, X19
	069 Call Simulation.FreeMessages, X0, X1
	070 Add X1, X22, 96
	071 Move X0, X19
	072 Call Simulation.FreeMessages, X0, X1
	073 Move X1, [X20]
	074 Add X0, X31, 8
	075 Call Enumerator<Int32, Object>.Dispose, X0
	076 Move X1, [X19+288]
	077 Move X0, [X19+296]
	078 Move X2, X19
	079 Move X3, X31
	080 Call NetPeer.Destroy, X0, X1, X2
	081 Move [X19+288], X31
	082 Move [X19+296], X31
	083 Move [X19+304], X31
	084 Move X20, [X31+64]
	085 Move X19, [X31+72]
	086 Move X22, [X31+48]
	087 Move X21, [X31+56]
	088 Move X30, [X31+32]
	089 Add X31, X31, 80
	090 Return 
	091 Call 0x1C17F20
	092 Call 0x1C17F20
	093 Move X20, X0
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X0, X20
	096 Call 0x3EB2AD0
	097 Move X21, [X0]
	098 Call 0x3EB2AE0
	099 Move X8, 0x223C000
	100 Move X8, [X8+2968]
	101 Add X0, X31, 8
	102 Move X1, [X8]
	103 Call Enumerator<Int32, Object>.Dispose, X0
	104 Compare X21, 0
	105 JumpIfEqual {76}
	106 Move X0, X21
	107 Call 0x1C17F18
	108 Move X21, X31
	109 Move X20, X0
	110 Move X8, 0x223C000
	111 Move X8, [X8+2968]
	112 Move X1, [X8]
	113 Add X0, X31, 8
	114 Call Enumerator<Int32, Object>.Dispose, X0
	115 Compare X21, 0
	116 JumpIfNotEqual {119}
	117 Move X0, X20
	118 Call 0x1D2D690
	119 Move X0, X21
	120 Call 0x1C17F18
	121 Call 0x1991590

Method: System.Void OnNetworkShutdown()

Disassembly:
	0x01EC8E58 MOV X22, X0

ISIL:
	001 Return 

Method: System.Boolean NetworkGetBuffer(Fusion.Sockets.NetConnection* connection, out Fusion.Sockets.NetBitBuffer* buffer)

Disassembly:
	0x01EC8E5C LDR X0, [X0 + 0xD8]
	0x01EC8E60 LDR X1, [X21 + 0x18]
	0x01EC8E64 MOV X2, X31
	0x01EC8E68 BL 0x1EFC3FC
	0x01EC8E6C ANDS W31, W0, 0x1
	0x01EC8E70 CSEL X25, X22, X31, NE
	0x01EC8E74 CBZ X19, 0x1EC8F04
	0x01EC8E78 MOV X22, X19

ISIL:
	001 Move X8, [X0+296]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X0, [X0+304]
	005 Move X3, X31
	006 Call NetPeerGroup.GetNotifyDataBuffer, X0, X1, X2
	007 Return X0
	008 Move W0, W31
	009 Move [X2], X31
	010 Return X0

Method: System.Boolean NetworkSendBuffer(Fusion.Sockets.NetConnection* connection, Fusion.Sockets.NetBitBuffer* buffer, Fusion.SimulationPacketEnvelope* envelope)

Disassembly:
	0x01EC8E7C LDR W8, [X22 + 0x8]!
	0x01EC8E80 CMP W8, 0x1
	0x01EC8E84 B.LT 0x1EC8EB8
	0x01EC8E88 ADD X23, X25, 0x60
	0x01EC8E8C LDR X24, [X19 + 0x10]
	0x01EC8E90 MOV X0, X22
	0x01EC8E94 MOV X1, X24
	0x01EC8E98 BL 0x1EBD4F8
	0x01EC8E9C CBZ X25, 0x1EC8F04
	0x01EC8EA0 MOV X0, X23
	0x01EC8EA4 MOV X1, X24
	0x01EC8EA8 BL 0x1EBD3B0
	0x01EC8EAC LDR W8, [X22]
	0x01EC8EB0 CMP W8, 0x0
	0x01EC8EB4 B.GT 0x1EC8E8C
	0x01EC8EB8 LDR X0, [X20 + 0xA8]
	0x01EC8EBC CBZ X0, 0x1EC8F04
	0x01EC8EC0 MOV X1, X21
	0x01EC8EC4 MOV X2, X19
	0x01EC8EC8 MOV X3, X31
	0x01EC8ECC BL 0x1ED6974
	0x01EC8ED0 B 0x1EC8EE4
	0x01EC8ED4 CBZ X19, 0x1EC8F04
	0x01EC8ED8 ADD X1, X19, 0x8
	0x01EC8EDC MOV X0, X20
	0x01EC8EE0 BL 0x1EC7238
	0x01EC8EE4 MOV X0, X20
	0x01EC8EE8 MOV X1, X19
	0x01EC8EEC LDP X20, X19, [X31 + 0x30]
	0x01EC8EF0 LDP X22, X21, [X31 + 0x20]
	0x01EC8EF4 LDP X24, X23, [X31 + 0x10]
	0x01EC8EF8 MOV X2, X31
	0x01EC8EFC LDP X30, X25, [X31], #0x40
	0x01EC8F00 B 0x1EDA3E8
	0x01EC8F04 BL 0x1C16F20
	0x01EC8F08 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x2512000
	008 Move W8, [X23+1171]
	009 Move X19, X3
	010 Move X20, X2
	011 Move X21, X1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x2238000
	018 Move X0, [X0+3192]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+1171], W8
	022 Move X8, [X22+296]
	023 Compare X8, 0
	024 JumpIfEqual {41}
	025 Move X0, [X22+304]
	026 Move X1, X21
	027 Move X2, X20
	028 Move X3, X19
	029 Move X4, X31
	030 Call NetPeerGroup.SendNotifyDataBuffer, X0, X1, X2, X3
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {36}
	035 Move W0, 1
	036 Move X8, 0x2238000
	037 Move X8, [X8+3192]
	038 Move X1, X31
	039 Move X0, [X8]
	040 Call Assert.AlwaysFail, X0
	041 Move W0, W31
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Return X0

Method: System.Boolean NetworkSendPing(Fusion.Sockets.NetAddress address, System.Void* data, System.Int32 length)

Disassembly:
	0x01EC8F0C STP X20, X19, [X31 + 0x10]
	0x01EC8F10 CBZ X2, 0x1EC8F58
	0x01EC8F14 MOV X21, X1
	0x01EC8F18 ADD X1, X2, 0x8
	0x01EC8F1C MOV X19, X2
	0x01EC8F20 MOV X20, X0
	0x01EC8F24 BL 0x1EC7238
	0x01EC8F28 LDR X0, [X20 + 0xA8]
	0x01EC8F2C CBZ X0, 0x1EC8F58
	0x01EC8F30 MOV X1, X21
	0x01EC8F34 MOV X2, X19
	0x01EC8F38 MOV X3, X31
	0x01EC8F3C BL 0x1ED6A7C
	0x01EC8F40 MOV X0, X20
	0x01EC8F44 MOV X1, X19
	0x01EC8F48 LDP X20, X19, [X31 + 0x10]
	0x01EC8F4C MOV X2, X31
	0x01EC8F50 LDP X30, X21, [X31], #0x20
	0x01EC8F54 B 0x1EDA3E8
	0x01EC8F58 BL 0x1C16F20
	0x01EC8F5C STR X30, [X31 - 0x20]!
	0x01EC8F60 STP X20, X19, [X31 + 0x10]
	0x01EC8F64 LDRB W9, [X1 + 0x18]
	0x01EC8F68 LDR X8, [X1]
	0x01EC8F6C CMP W9, 0x8
	0x01EC8F70 B.NE 0x1EC8F88

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 NotImplemented "Instruction MRS not yet implemented."
	005 Move X8, [X19+40]
	006 Move [X31+24], X8
	007 Move X8, [X0+296]
	008 Compare X8, 0
	009 JumpIfEqual {18}
	010 Move X8, [X1+16]
	011 Move V0, [X1]
	012 Move X0, [X0+304]
	013 Add X1, X31, 0
	014 Move X4, X31
	015 Move [X31+16], X8
	016 Move [X31], V0
	017 Call NetPeerGroup.SendUnconnectedData, X0, X1, X2, X3
	018 Move W0, W31
	019 Move X8, [X19+40]
	020 Move X9, [X31+24]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X30, [X31+32]
	023 Move X19, [X31+40]
	024 And W0, W0, 1
	025 Add X31, X31, 48
	026 Return X0
	027 Call 0x3EB2B20

Method: System.Void Fusion.Sockets.INetPeerGroupCallbacks.OnConnectionAttempt(Fusion.Sockets.NetConnection* connection, System.Int32 attempt, System.Int32 totalConnectionAttempts)

Disassembly:
	0x01EC8F74 LDP X20, X19, [X31 + 0x10]
	0x01EC8F78 MOV X0, X8
	0x01EC8F7C MOV X1, X31
	0x01EC8F80 LDR X30, [X31], #0x20
	0x01EC8F84 B 0x1E3585C
	0x01EC8F88 CBZ X8, 0x1EC8FB4
	0x01EC8F8C MOV X19, X1
	0x01EC8F90 ADD X1, X8, 0x8
	0x01EC8F94 MOV X20, X0
	0x01EC8F98 BL 0x1EC7238
	0x01EC8F9C LDR X1, [X19]
	0x01EC8FA0 MOV X0, X20
	0x01EC8FA4 LDP X20, X19, [X31 + 0x10]
	0x01EC8FA8 MOV X2, X31
	0x01EC8FAC LDR X30, [X31], #0x20
	0x01EC8FB0 B 0x1EDA3E8
	0x01EC8FB4 BL 0x1C16F20
	0x01EC8FB8 LDRB W8, [X2 + 0x18]
	0x01EC8FBC CMP W8, 0x8
	0x01EC8FC0 B.EQ 0x1EC8FD4
	0x01EC8FC4 CMP W8, 0x3
	0x01EC8FC8 B.NE 0x1EC8FE0
	0x01EC8FCC LDR X2, [X2]
	0x01EC8FD0 B 0x1EC8DEC
	0x01EC8FD4 LDR X0, [X2]
	0x01EC8FD8 MOV X1, X31
	0x01EC8FDC B 0x1E3585C
	0x01EC8FE0 RET
	0x01EC8FE4 LDRB W8, [X2 + 0x18]
	0x01EC8FE8 CMP W8, 0x8
	0x01EC8FEC B.EQ 0x1EC9000
	0x01EC8FF0 CMP W8, 0x3
	0x01EC8FF4 B.NE 0x1EC900C
	0x01EC8FF8 LDR X2, [X2]
	0x01EC8FFC B 0x1EC8F08
	0x01EC9000 LDR X0, [X2]
	0x01EC9004 MOV X1, X31
	0x01EC9008 B 0x1E3585C
	0x01EC900C RET
	0x01EC9010 LDR W0, [X0 + 0x148]
	0x01EC9014 RET
	0x01EC9018 STR X30, [X31 - 0x20]!
	0x01EC901C STP X20, X19, [X31 + 0x10]
	0x01EC9020 ADRP X20, 0x2510000
	0x01EC9024 LDRB W8, [X20 + 0x49B]
	0x01EC9028 MOV X19, X0
	0x01EC902C TBNZ X8, 0x0, 0x1EC9044
	0x01EC9030 ADRP X0, 0x2236000
	0x01EC9034 LDR X0, [X0 + 0xCC0]
	0x01EC9038 BL 0x1C16CF4
	0x01EC903C MOVZ W8, 0x1
	0x01EC9040 STRB W8, [X20 + 0x49B]
	0x01EC9044 LDR X0, [X19 + 0x150]
	0x01EC9048 CBZ X0, 0x1EC9064
	0x01EC904C ADRP X8, 0x2236000
	0x01EC9050 LDR X8, [X8 + 0xCC0]
	0x01EC9054 LDP X20, X19, [X31 + 0x10]
	0x01EC9058 LDR X1, [X8]
	0x01EC905C LDR X30, [X31], #0x20
	0x01EC9060 B 0x2A67300
	0x01EC9064 BL 0x1C16F20
	0x01EC9068 LDR X0, [X0 + 0x150]
	0x01EC906C RET
	0x01EC9070 STR X30, [X31 - 0x20]!
	0x01EC9074 STP X20, X19, [X31 + 0x10]
	0x01EC9078 ADRP X20, 0x2510000
	0x01EC907C LDRB W8, [X20 + 0x49C]
	0x01EC9080 MOV X19, X0
	0x01EC9084 TBNZ X8, 0x0, 0x1EC90B4
	0x01EC9088 ADRP X0, 0x2236000
	0x01EC908C LDR X0, [X0 + 0xCC8]
	0x01EC9090 BL 0x1C16CF4
	0x01EC9094 ADRP X0, 0x2236000
	0x01EC9098 LDR X0, [X0 + 0xCD0]
	0x01EC909C BL 0x1C16CF4
	0x01EC90A0 ADRP X0, 0x2236000
	0x01EC90A4 LDR X0, [X0 + 0xCD8]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+96], X24
	004 Move [X31+104], X23
	005 Move [X31+112], X22
	006 Move [X31+120], X21
	007 Move [X31+128], X20
	008 Move [X31+136], X19
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X24+40]
	011 Move X23, 0x2512000
	012 Move W21, W3
	013 Move W22, W2
	014 Move [X31+72], X8
	015 Move W8, [X23+1172]
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x2237000
	023 Move X0, [X0+2704]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+1172], W8
	027 Move [X31+12], W31
	028 Move [X31+48], X31
	029 Move [X31+56], X31
	030 Move [X31+64], X31
	031 Move X23, [X20+64]
	032 Compare X23, 0
	033 JumpIfEqual {86}
	034 Move X10, 0x2237000
	035 Move X8, [X23]
	036 Move X10, [X10+2704]
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Move X1, [X10]
	039 Compare X9, 0
	040 JumpIfEqual {47}
	041 Move X10, [X8+176]
	042 Add X10, X10, 8
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Subtract X9, X9, 1
	046 Add X10, X10, 16
	047 Move W2, 26
	048 Move X0, X23
	049 Call 0x1C5D788
	050 Move W9, [X10]
	051 Add W9, W9, 26
	052 Add X8, X8, W9
	053 Add X0, X8, 312
	054 Move X8, [X0]
	055 Move X5, [X0+8]
	056 Add X3, X31, 12
	057 Add X4, X31, 48
	058 Move X0, X23
	059 Move W1, W22
	060 Move W2, W21
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move W8, [X31+12]
	063 Compare W8, 0
	064 JumpIfEqual {74}
	065 Move V0, [X31+3]
	066 Move X8, [X31+64]
	067 Move X0, [X20+304]
	068 Add X2, X31, 16
	069 Move X1, X19
	070 Move X3, X31
	071 Move [X31+1], V0
	072 Move [X31+32], X8
	073 Call NetPeerGroup.ChangeConnectionAddressDuringConnecting, X0, X1, X2
	074 Move X8, [X24+40]
	075 Move X9, [X31+72]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X20, [X31+128]
	078 Move X19, [X31+136]
	079 Move X22, [X31+112]
	080 Move X21, [X31+120]
	081 Move X24, [X31+96]
	082 Move X23, [X31+104]
	083 Move X30, [X31+80]
	084 Add X31, X31, 144
	085 Return 
	086 Call 0x1C17F20
	087 Call 0x3EB2B20

Method: System.Void Fusion.Sockets.INetPeerGroupCallbacks.OnUnconnectedData(Fusion.Sockets.NetBitBuffer* buffer)

Disassembly:
	0x01EC90A8 BL 0x1C16CF4

ISIL:
	001 Return 

Method: System.Void Fusion.Sockets.INetPeerGroupCallbacks.OnConnected(Fusion.Sockets.NetConnection* connection)

Disassembly:
	0x01EC90AC MOVZ W8, 0x1
	0x01EC90B0 STRB W8, [X20 + 0x49C]
	0x01EC90B4 LDR X0, [X19 + 0x140]
	0x01EC90B8 CBZ X0, 0x1EC9114
	0x01EC90BC LDR W8, [X0 + 0x18]
	0x01EC90C0 CMP W8, 0x0
	0x01EC90C4 B.LE 0x1EC90E0
	0x01EC90C8 ADRP X8, 0x2236000
	0x01EC90CC LDR X8, [X8 + 0xCD0]
	0x01EC90D0 LDP X20, X19, [X31 + 0x10]
	0x01EC90D4 LDR X1, [X8]
	0x01EC90D8 LDR X30, [X31], #0x20
	0x01EC90DC B 0x26022C0
	0x01EC90E0 ADRP X8, 0x2236000
	0x01EC90E4 LDR X19, [X19 + 0x198]
	0x01EC90E8 LDR X8, [X8 + 0xCC8]
	0x01EC90EC LDR X0, [X8]
	0x01EC90F0 BL 0x1C16F10
	0x01EC90F4 MOV X1, X19
	0x01EC90F8 MOV X2, X31
	0x01EC90FC MOV X20, X0
	0x01EC9100 BL 0x1E96A38
	0x01EC9104 MOV X0, X20
	0x01EC9108 LDP X20, X19, [X31 + 0x10]
	0x01EC910C LDR X30, [X31], #0x20
	0x01EC9110 RET
	0x01EC9114 BL 0x1C16F20
	0x01EC9118 LDR X0, [X0 + 0x1A0]
	0x01EC911C MOV X1, X31
	0x01EC9120 B 0x1E6619C
	0x01EC9124 LDR X0, [X0 + 0x198]
	0x01EC9128 MOV X1, X31
	0x01EC912C B 0x1E6619C
	0x01EC9130 LDR X0, [X0 + 0x1A0]
	0x01EC9134 MOV X1, X31
	0x01EC9138 B 0x1E66414
	0x01EC913C LDR X0, [X0 + 0x198]
	0x01EC9140 MOV X1, X31
	0x01EC9144 B 0x1E66414
	0x01EC9148 CMP W1, 0x0
	0x01EC914C MOVZ W8, 0x1A0
	0x01EC9150 MOVZ W9, 0x198
	0x01EC9154 CSEL X8, X9, X8, EQ
	0x01EC9158 LDR X0, [X0, X8, LSL]
	0x01EC915C MOV X1, X2
	0x01EC9160 MOV X3, X31
	0x01EC9164 MOV X2, X0
	0x01EC9168 B 0x1E66214
	0x01EC916C STP X30, X21, [X31 - 0x20]!
	0x01EC9170 STP X20, X19, [X31 + 0x10]
	0x01EC9174 ADRP X21, 0x2510000
	0x01EC9178 LDRB W8, [X21 + 0x49D]
	0x01EC917C MOV X19, X1
	0x01EC9180 MOV X20, X0
	0x01EC9184 TBNZ X8, 0x0, 0x1EC919C
	0x01EC9188 ADRP X0, 0x2236000
	0x01EC918C LDR X0, [X0 + 0xCE0]
	0x01EC9190 BL 0x1C16CF4
	0x01EC9194 MOVZ W8, 0x1
	0x01EC9198 STRB W8, [X21 + 0x49D]
	0x01EC919C CBZ X19, 0x1EC91D0
	0x01EC91A0 MOV X0, X19
	0x01EC91A4 MOV X1, X31
	0x01EC91A8 BL 0x1E96AE4
	0x01EC91AC LDR X0, [X20 + 0x140]
	0x01EC91B0 CBZ X0, 0x1EC91D0
	0x01EC91B4 ADRP X8, 0x2236000
	0x01EC91B8 LDR X8, [X8 + 0xCE0]
	0x01EC91BC MOV X1, X19
	0x01EC91C0 LDP X20, X19, [X31 + 0x10]
	0x01EC91C4 LDR X2, [X8]
	0x01EC91C8 LDP X30, X21, [X31], #0x20
	0x01EC91CC B 0x2602314
	0x01EC91D0 BL 0x1C16F20
	0x01EC91D4 MOV X8, X1
	0x01EC91D8 LDR X1, [X1]
	0x01EC91DC CBZ X1, 0x1EC91E8
	0x01EC91E0 STR X31, [X8]
	0x01EC91E4 B 0x1EC916C
	0x01EC91E8 RET
	0x01EC91EC SUB X31, X31, 0x30
	0x01EC91F0 STP X30, X21, [X31 + 0x10]
	0x01EC91F4 STP X20, X19, [X31 + 0x20]
	0x01EC91F8 ADRP X21, 0x2510000
	0x01EC91FC LDRB W8, [X21 + 0x49E]
	0x01EC9200 MOV X20, X1
	0x01EC9204 MOV X19, X0
	0x01EC9208 TBNZ X8, 0x0, 0x1EC9220
	0x01EC920C ADRP X0, 0x222A000
	0x01EC9210 LDR X0, [X0 + 0x598]
	0x01EC9214 BL 0x1C16CF4
	0x01EC9218 MOVZ W8, 0x1
	0x01EC921C STRB W8, [X21 + 0x49E]
	0x01EC9220 AND X1, X20, 0x0
	0x01EC9224 ADD X2, X31, 0x8
	0x01EC9228 MOV X0, X19
	0x01EC922C STR X31, [X31 + 0x8]
	0x01EC9230 BL 0x1EC0278
	0x01EC9234 TBZ X0, 0x0, 0x1EC9288
	0x01EC9238 LDR X8, [X31 + 0x8]
	0x01EC923C CBZ X8, 0x1EC92A0
	0x01EC9240 ADRP X9, 0x222A000
	0x01EC9244 LDR X9, [X9 + 0x598]
	0x01EC9248 LDR X19, [X8 + 0xB8]
	0x01EC924C LDR X0, [X9]
	0x01EC9250 LDR W9, [X0 + 0xE0]
	0x01EC9254 CBNZ W9, 0x1EC925C
	0x01EC9258 BL 0x1C16DFC
	0x01EC925C MOV X0, X19
	0x01EC9260 MOV X1, X31
	0x01EC9264 BL 0x3C38948
	0x01EC9268 TBZ X0, 0x0, 0x1EC9288
	0x01EC926C LDR X8, [X31 + 0x8]
	0x01EC9270 CBZ X8, 0x1EC92A0
	0x01EC9274 LDR X0, [X8 + 0xB8]
	0x01EC9278 CBZ X0, 0x1EC92A0
	0x01EC927C MOV X1, X31
	0x01EC9280 BL 0x1E93540
	0x01EC9284 B 0x1EC928C
	0x01EC9288 MOV W0, W31
	0x01EC928C LDP X20, X19, [X31 + 0x20]
	0x01EC9290 LDP X30, X21, [X31 + 0x10]
	0x01EC9294 AND W0, W0, 0x1
	0x01EC9298 ADD X31, X31, 0x30
	0x01EC929C RET
	0x01EC92A0 BL 0x1C16F20
	0x01EC92A4 STP X30, X21, [X31 - 0x20]!
	0x01EC92A8 STP X20, X19, [X31 + 0x10]
	0x01EC92AC ADRP X20, 0x2510000
	0x01EC92B0 ADRP X21, 0x222A000
	0x01EC92B4 LDRB W8, [X20 + 0x49F]
	0x01EC92B8 LDR X21, [X21 + 0x598]
	0x01EC92BC MOV X19, X1
	0x01EC92C0 TBNZ X8, 0x0, 0x1EC92D8
	0x01EC92C4 ADRP X0, 0x222A000
	0x01EC92C8 LDR X0, [X0 + 0x598]
	0x01EC92CC BL 0x1C16CF4
	0x01EC92D0 MOVZ W8, 0x1
	0x01EC92D4 STRB W8, [X20 + 0x49F]
	0x01EC92D8 LDR X0, [X21]
	0x01EC92DC LDR W8, [X0 + 0xE0]
	0x01EC92E0 CBNZ W8, 0x1EC92E8
	0x01EC92E4 BL 0x1C16DFC
	0x01EC92E8 MOV X0, X19
	0x01EC92EC MOV X1, X31
	0x01EC92F0 BL 0x3C38948
	0x01EC92F4 TBZ X0, 0x0, 0x1EC9310
	0x01EC92F8 CBZ X19, 0x1EC9320
	0x01EC92FC MOV X0, X19
	0x01EC9300 LDP X20, X19, [X31 + 0x10]
	0x01EC9304 MOV X1, X31
	0x01EC9308 LDP X30, X21, [X31], #0x20
	0x01EC930C B 0x1E93540
	0x01EC9310 LDP X20, X19, [X31 + 0x10]
	0x01EC9314 MOV W0, W31
	0x01EC9318 LDP X30, X21, [X31], #0x20
	0x01EC931C RET
	0x01EC9320 BL 0x1C16F20
	0x01EC9324 STR X30, [X31 - 0x20]!
	0x01EC9328 STP X20, X19, [X31 + 0x10]
	0x01EC932C ADRP X20, 0x2510000
	0x01EC9330 LDRB W8, [X20 + 0x4A0]
	0x01EC9334 MOV X19, X1
	0x01EC9338 TBNZ X8, 0x0, 0x1EC9350
	0x01EC933C ADRP X0, 0x222A000
	0x01EC9340 LDR X0, [X0 + 0x598]
	0x01EC9344 BL 0x1C16CF4
	0x01EC9348 MOVZ W8, 0x1
	0x01EC934C STRB W8, [X20 + 0x4A0]
	0x01EC9350 CBZ X19, 0x1EC9398
	0x01EC9354 ADRP X8, 0x222A000
	0x01EC9358 LDR X8, [X8 + 0x598]
	0x01EC935C LDR X20, [X19 + 0xB8]
	0x01EC9360 LDR X0, [X8]
	0x01EC9364 LDR W8, [X0 + 0xE0]
	0x01EC9368 CBNZ W8, 0x1EC9370
	0x01EC936C BL 0x1C16DFC
	0x01EC9370 MOV X0, X20
	0x01EC9374 MOV X1, X31
	0x01EC9378 BL 0x3C38948
	0x01EC937C TBZ X0, 0x0, 0x1EC9398
	0x01EC9380 LDR X0, [X19 + 0xB8]
	0x01EC9384 CBZ X0, 0x1EC93A8
	0x01EC9388 LDP X20, X19, [X31 + 0x10]
	0x01EC938C MOV X1, X31
	0x01EC9390 LDR X30, [X31], #0x20
	0x01EC9394 B 0x1E93540
	0x01EC9398 LDP X20, X19, [X31 + 0x10]
	0x01EC939C MOV W0, W31
	0x01EC93A0 LDR X30, [X31], #0x20
	0x01EC93A4 RET
	0x01EC93A8 BL 0x1C16F20
	0x01EC93AC STP X30, X21, [X31 - 0x20]!
	0x01EC93B0 STP X20, X19, [X31 + 0x10]
	0x01EC93B4 ADRP X21, 0x2510000
	0x01EC93B8 LDRB W8, [X21 + 0x4A1]
	0x01EC93BC MOV X19, X1
	0x01EC93C0 MOV X20, X0
	0x01EC93C4 TBNZ X8, 0x0, 0x1EC93DC
	0x01EC93C8 ADRP X0, 0x2236000
	0x01EC93CC LDR X0, [X0 + 0xCE8]
	0x01EC93D0 BL 0x1C16CF4
	0x01EC93D4 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0x2511000
	008 Move X21, 0x2237000
	009 Move W8, [X22+1173]
	010 Move X21, [X21+3200]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0x2237000
	018 Move X0, [X0+3208]
	019 Call 0x1C17CF4
	020 Move X0, 0x2236000
	021 Move X0, [X0+2704]
	022 Call 0x1C17CF4
	023 Move X0, 0x2237000
	024 Move X0, [X0+3216]
	025 Call 0x1C17CF4
	026 Move X0, 0x2237000
	027 Move X0, [X0+3224]
	028 Call 0x1C17CF4
	029 Move X0, 0x2237000
	030 Move X0, [X0+3200]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+1173], W8
	034 Move X0, [X21]
	035 Move [X31+8], W31
	036 Move [X31], X31
	037 Call 0x1C17F10
	038 Move X1, X19
	039 Move X2, X31
	040 Move X21, X0
	041 Call SimulationConnection..ctor, X0, X1
	042 Move X0, [X19+176]
	043 Compare X0, 0
	044 JumpIfEqual {163}
	045 Move X8, 0x2237000
	046 Move X8, [X8+3208]
	047 Move W9, [X20+24]
	048 Move X2, X21
	049 Move X3, [X8]
	050 NotImplemented "Instruction SBFM not yet implemented."
	051 Call Dictionary`2<Int32, Object>.Add, X0, X1, X2
	052 Compare X21, 0
	053 JumpIfEqual {163}
	054 Move [X21+208], X20
	055 Move X8, [X20+24]
	056 Move X0, X19
	057 Move [X21+216], X8
	058 Call Simulation.get_IsServer, X0
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {86}
	063 Move X1, [X20+304]
	064 Move X0, X19
	065 Call Simulation.GetPlayerRefMapping, X0, X1
	066 And W31, W0, 255
	067 Move [X31], X0
	068 Move [X31+8], W1
	069 Move X22, 0x2237000
	070 Move X22, [X22+3224]
	071 Add X0, X31, 0
	072 Move X1, [X22]
	073 Call Nullable`1<PlayerRefMapping>.get_Value, X0
	074 Move X1, X0
	075 ShiftRight X1, 32
	076 And X1, X1, 0x7FFFFFFF
	077 Move W2, 1
	078 Move X0, X19
	079 Call Simulation.GetPlayerSimulationData, X0, X1, X2
	080 Move X1, [X22]
	081 Add X0, X31, 0
	082 Call Nullable`1<PlayerRefMapping>.get_Value, X0
	083 Move X1, X0
	084 ShiftRight X1, 32
	085 And X1, X1, 0x7FFFFFFF
	086 Move X22, [X19+64]
	087 Compare X22, 0
	088 JumpIfEqual {163}
	089 Move X10, 0x2236000
	090 Move X8, [X22]
	091 Move X10, [X10+2704]
	092 NotImplemented "Instruction LDRH not yet implemented."
	093 Move X1, [X10]
	094 Compare X9, 0
	095 JumpIfEqual {102}
	096 Move X10, [X8+176]
	097 Add X10, X10, 8
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Subtract X9, X9, 1
	101 Add X10, X10, 16
	102 Move W2, 35
	103 Move X0, X22
	104 Call 0x1C5D788
	105 Move W9, [X10]
	106 Add W9, W9, 35
	107 Add X8, X8, W9
	108 Add X0, X8, 312
	109 Move X8, [X0]
	110 Move X1, [X0+8]
	111 Move X0, X22
	112 NotImplemented "Instruction BLR not yet implemented."
	113 And X1, X0, 0
	114 Move X0, X19
	115 Move X2, X21
	116 Call Simulation.PlayerAdd, X0, X1, X2
	117 Move X8, [X19]
	118 Move X0, X19
	119 Move X1, X20
	120 Move X9, [X8+744]
	121 Move X2, [X8+752]
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Move X0, X19
	124 Call Simulation.get_IsClient, X0
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {156}
	129 Move X20, [X19+64]
	130 Compare X20, 0
	131 JumpIfEqual {177}
	132 Move X10, 0x2236000
	133 Move X8, [X20]
	134 Move X10, [X10+2704]
	135 NotImplemented "Instruction LDRH not yet implemented."
	136 Move X1, [X10]
	137 Compare X9, 0
	138 JumpIfEqual {145}
	139 Move X10, [X8+176]
	140 Add X10, X10, 8
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Subtract X9, X9, 1
	144 Add X10, X10, 16
	145 Move W2, 15
	146 Move X0, X20
	147 Call 0x1C5D788
	148 Move W9, [X10]
	149 Add W9, W9, 15
	150 Add X8, X8, W9
	151 Add X0, X8, 312
	152 Move X8, [X0]
	153 Move X1, [X0+8]
	154 Move X0, X20
	155 NotImplemented "Instruction BLR not yet implemented."
	156 Move X20, [X31+48]
	157 Move X19, [X31+56]
	158 Move X22, [X31+32]
	159 Move X21, [X31+40]
	160 Move X30, [X31+16]
	161 Add X31, X31, 64
	162 Return 
	163 Call 0x1C17F20
	164 Move X0, 0x222B000
	165 Move X0, [X0+2000]
	166 Call 0x1C17D08
	167 Call 0x1C17F10
	168 Move X1, X31
	169 Move X19, X0
	170 Call Exception..ctor, X0
	171 Move X0, 0x2237000
	172 Move X0, [X0+3232]
	173 Call 0x1C17D08
	174 Move X1, X0
	175 Move X0, X19
	176 Call 0x1C17DEC
	177 Call 0x1C17F20
	178 Move X20, X0
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X0, X20
	181 Call 0x3EB2AD0
	182 Move X20, X0
	183 Move X0, 0x222B000
	184 Move X0, [X0+2000]
	185 Call 0x1C17D08
	186 Move X8, [X20]
	187 Move X1, [X8]
	188 Call 0x1C18270
	189 Move TEMP, X0
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfNotEqual {209}
	193 Move X20, [X20]
	194 Call 0x3EB2AE0
	195 Move X0, 0x2233000
	196 Move X0, [X0+2224]
	197 Call 0x1C17D08
	198 Move W8, [X0+224]
	199 Compare W8, 0
	200 JumpIfNotEqual {202}
	201 Call 0x1C17DFC
	202 Move X0, 0x2237000
	203 Move X0, [X0+2744]
	204 Call 0x1C17D08
	205 Move X2, X0
	206 Move X0, X19
	207 Move X1, X20
	208 Call 0x2214878, X0, X1
	209 Move W0, 8
	210 Call 0x3EB2AF0
	211 Move X8, [X20]
	212 Move [X0], X8
	213 Move X1, 0x1FEC000
	214 Add X1, X1, 3672
	215 Move X2, X31
	216 Call 0x3EB2B00
	217 Move X20, X0
	218 Call 0x3EB2AE0
	219 Move X0, X20
	220 Call 0x1D2D690
	221 Call 0x1991590

Method: System.Void Fusion.Sockets.INetPeerGroupCallbacks.OnDisconnected(Fusion.Sockets.NetConnection* connection, Fusion.Sockets.NetDisconnectReason reason)

Disassembly:
	0x01EC93D8 STRB W8, [X21 + 0x4A1]
	0x01EC93DC LDR X0, [X20 + 0x150]
	0x01EC93E0 CBZ X0, 0x1EC9400
	0x01EC93E4 ADRP X8, 0x2236000
	0x01EC93E8 LDR X8, [X8 + 0xCE8]
	0x01EC93EC AND X1, X19, 0x0
	0x01EC93F0 LDP X20, X19, [X31 + 0x10]
	0x01EC93F4 LDR X2, [X8]
	0x01EC93F8 LDP X30, X21, [X31], #0x20
	0x01EC93FC B 0x2A6773C
	0x01EC9400 BL 0x1C16F20
	0x01EC9404 RET
	0x01EC9408 STP X30, X21, [X31 - 0x20]!
	0x01EC940C STP X20, X19, [X31 + 0x10]
	0x01EC9410 ADRP X21, 0x2510000
	0x01EC9414 LDRB W8, [X21 + 0x4A3]
	0x01EC9418 MOV X19, X1
	0x01EC941C MOV X20, X0
	0x01EC9420 TBNZ X8, 0x0, 0x1EC9438
	0x01EC9424 ADRP X0, 0x2236000
	0x01EC9428 LDR X0, [X0 + 0xCF0]
	0x01EC942C BL 0x1C16CF4
	0x01EC9430 MOVZ W8, 0x1
	0x01EC9434 STRB W8, [X21 + 0x4A3]
	0x01EC9438 LDR X0, [X20 + 0x150]
	0x01EC943C CBZ X0, 0x1EC945C
	0x01EC9440 ADRP X8, 0x2236000
	0x01EC9444 LDR X8, [X8 + 0xCF0]
	0x01EC9448 AND X1, X19, 0x0
	0x01EC944C LDP X20, X19, [X31 + 0x10]
	0x01EC9450 LDR X2, [X8]
	0x01EC9454 LDP X30, X21, [X31], #0x20
	0x01EC9458 B 0x2A67490
	0x01EC945C BL 0x1C16F20
	0x01EC9460 STP X30, X21, [X31 - 0x20]!
	0x01EC9464 STP X20, X19, [X31 + 0x10]
	0x01EC9468 ADRP X21, 0x2510000
	0x01EC946C LDRB W8, [X21 + 0x4A4]
	0x01EC9470 MOV X19, X1
	0x01EC9474 MOV X20, X0
	0x01EC9478 TBNZ X8, 0x0, 0x1EC9490
	0x01EC947C ADRP X0, 0x2236000
	0x01EC9480 LDR X0, [X0 + 0xCF0]
	0x01EC9484 BL 0x1C16CF4
	0x01EC9488 MOVZ W8, 0x1
	0x01EC948C STRB W8, [X21 + 0x4A4]
	0x01EC9490 LDR X0, [X20 + 0x150]
	0x01EC9494 CBZ X0, 0x1EC94C0
	0x01EC9498 ADRP X8, 0x2236000
	0x01EC949C LDR X8, [X8 + 0xCF0]
	0x01EC94A0 AND X1, X19, 0x0
	0x01EC94A4 LDR X2, [X8]
	0x01EC94A8 BL 0x2A67490
	0x01EC94AC CBZ X0, 0x1EC94C0
	0x01EC94B0 LDR X0, [X0 + 0xB0]
	0x01EC94B4 LDP X20, X19, [X31 + 0x10]
	0x01EC94B8 LDP X30, X21, [X31], #0x20
	0x01EC94BC RET
	0x01EC94C0 BL 0x1C16F20
	0x01EC94C4 STR X30, [X31 - 0x10]!
	0x01EC94C8 AND X1, X1, 0x0
	0x01EC94CC ADD X2, X31, 0x8
	0x01EC94D0 STR X31, [X31 + 0x8]
	0x01EC94D4 BL 0x1EC0278
	0x01EC94D8 MOV W8, W0
	0x01EC94DC MOV X0, X31
	0x01EC94E0 TBZ X8, 0x0, 0x1EC9510
	0x01EC94E4 LDR X0, [X31 + 0x8]
	0x01EC94E8 CBZ X0, 0x1EC9518
	0x01EC94EC MOV X1, X31
	0x01EC94F0 BL 0x1E93320
	0x01EC94F4 MOV W8, W0
	0x01EC94F8 MOV X0, X31
	0x01EC94FC TBZ X8, 0x0, 0x1EC9510
	0x01EC9500 LDR X0, [X31 + 0x8]
	0x01EC9504 CBZ X0, 0x1EC9518
	0x01EC9508 MOV X1, X31
	0x01EC950C BL 0x1E93330
	0x01EC9510 LDR X30, [X31], #0x10
	0x01EC9514 RET
	0x01EC9518 BL 0x1C16F20
	0x01EC951C STR X30, [X31 - 0x30]!
	0x01EC9520 STP X22, X21, [X31 + 0x10]
	0x01EC9524 STP X20, X19, [X31 + 0x20]
	0x01EC9528 ADRP X22, 0x2510000
	0x01EC952C LDRB W8, [X22 + 0x4A7]
	0x01EC9530 MOV X19, X2
	0x01EC9534 MOV X20, X1
	0x01EC9538 MOV X21, X0
	0x01EC953C TBNZ X8, 0x0, 0x1EC9554
	0x01EC9540 ADRP X0, 0x2236000
	0x01EC9544 LDR X0, [X0 + 0x920]
	0x01EC9548 BL 0x1C16CF4
	0x01EC954C MOVZ W8, 0x1
	0x01EC9550 STRB W8, [X22 + 0x4A7]
	0x01EC9554 STR X31, [X31 + 0x8]
	0x01EC9558 LDR X0, [X21 + 0x150]
	0x01EC955C CBZ X0, 0x1EC95A8
	0x01EC9560 ADRP X8, 0x2236000
	0x01EC9564 LDR X8, [X8 + 0x920]
	0x01EC9568 AND X1, X20, 0x0
	0x01EC956C ADD X2, X31, 0x8
	0x01EC9570 LDR X3, [X8]
	0x01EC9574 BL 0x2A6903C
	0x01EC9578 TBZ X0, 0x0, 0x1EC9590
	0x01EC957C LDR X8, [X31 + 0x8]
	0x01EC9580 CBZ X8, 0x1EC95A8
	0x01EC9584 LDR X8, [X8 + 0xB0]
	0x01EC9588 STR X8, [X19]
	0x01EC958C B 0x1EC9594
	0x01EC9590 STR X31, [X19]
	0x01EC9594 LDP X20, X19, [X31 + 0x20]
	0x01EC9598 LDP X22, X21, [X31 + 0x10]
	0x01EC959C AND W0, W0, 0x1
	0x01EC95A0 LDR X30, [X31], #0x30
	0x01EC95A4 RET
	0x01EC95A8 BL 0x1C16F20
	0x01EC95AC SUB X31, X31, 0x20
	0x01EC95B0 STP X30, X19, [X31 + 0x10]
	0x01EC95B4 MOV X19, X2
	0x01EC95B8 AND X1, X1, 0x0
	0x01EC95BC ADD X2, X31, 0x8
	0x01EC95C0 STR X31, [X31 + 0x8]
	0x01EC95C4 BL 0x1EC95F0
	0x01EC95C8 TBZ X0, 0x0, 0x1EC95DC
	0x01EC95CC LDR X8, [X31 + 0x8]
	0x01EC95D0 ADD X8, X8, 0x50
	0x01EC95D4 STR X8, [X19]
	0x01EC95D8 B 0x1EC95E0
	0x01EC95DC STR X31, [X19]
	0x01EC95E0 LDP X30, X19, [X31 + 0x10]
	0x01EC95E4 AND W0, W0, 0x1
	0x01EC95E8 ADD X31, X31, 0x20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X21, 0x2511000
	010 Move W8, [X21+1174]
	011 Move W23, W2
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x2237000
	019 Move X0, [X0+2872]
	020 Call 0x1C17CF4
	021 Move X0, 0x2237000
	022 Move X0, [X0+3240]
	023 Call 0x1C17CF4
	024 Move X0, 0x2237000
	025 Move X0, [X0+3216]
	026 Call 0x1C17CF4
	027 Move X0, 0x2237000
	028 Move X0, [X0+3224]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+1174], W8
	032 Move X21, 0x2511000
	033 Move W8, [X21+1211]
	034 Move [X31+8], W31
	035 Move [X31], X31
	036 Compare W8, 0
	037 JumpIfNotEqual {43}
	038 Move X0, 0x2237000
	039 Move X0, [X0+2656]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X21+1211], W8
	043 Move X0, [X19+176]
	044 Compare X0, 0
	045 JumpIfEqual {143}
	046 Move X9, 0x2237000
	047 Move W8, [X20+24]
	048 Move X9, [X9+2656]
	049 NotImplemented "Instruction SBFM not yet implemented."
	050 Move X2, [X9]
	051 Call Dictionary`2<Int32, Object>.get_Item, X0, X1
	052 Compare X0, 0
	053 JumpIfEqual {143}
	054 Move X21, X0
	055 Move X0, [X0+216]
	056 Move X1, [X20+24]
	057 Move X2, X31
	058 Call NetConnectionId.op_Equality, X0, X1
	059 Move X8, [X19]
	060 Move W22, W0
	061 And W31, W0, 1
	062 Move X0, X19
	063 Move X9, [X8+696]
	064 Move X2, [X8+704]
	065 Move X1, X20
	066 NotImplemented "Instruction CSEL not yet implemented."
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move X8, [X19]
	069 Move X24, X0
	070 Move X0, X19
	071 Move X1, X20
	072 Move X9, [X8+760]
	073 Move X3, [X8+768]
	074 Move W2, W23
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X0, X19
	077 Call Simulation.get_IsServer, X0
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {103}
	082 Compare X21, 0
	083 JumpIfEqual {87}
	084 Move X0, X19
	085 Move X1, X21
	086 Call Simulation.AOI_RemoveConnection, X0, X1
	087 Move X1, [X20+304]
	088 Move X0, X19
	089 Call Simulation.GetPlayerRefMapping, X0, X1
	090 And W31, W0, 255
	091 Move [X31], X0
	092 Move [X31+8], W1
	093 Move X8, 0x2237000
	094 Move X8, [X8+3224]
	095 Add X0, X31, 0
	096 Move X1, [X8]
	097 Call Nullable`1<PlayerRefMapping>.get_Value, X0
	098 Move X1, X0
	099 ShiftRight X1, 32
	100 And X1, X1, 0x7FFFFFFF
	101 Move X0, X19
	102 Call Simulation.DeletePlayerSimulationData, X0, X1
	103 And X23, X24, 0
	104 Move X0, X19
	105 Move X1, X23
	106 Call Simulation.PlayerRemove, X0, X1
	107 Move X0, [X19+184]
	108 Compare X0, 0
	109 JumpIfEqual {143}
	110 Move X8, 0x2237000
	111 Move X8, [X8+2872]
	112 Move X1, X23
	113 Move X2, [X8]
	114 Call Dictionary`2<PlayerRef, Object>.Remove, X0, X1
	115 Move X0, [X19+176]
	116 Compare X0, 0
	117 JumpIfEqual {143}
	118 Move X8, 0x2237000
	119 Move X8, [X8+3240]
	120 Move W9, [X20+24]
	121 Move X2, [X8]
	122 NotImplemented "Instruction SBFM not yet implemented."
	123 Call Dictionary`2<Int32, Object>.Remove, X0, X1
	124 Move TEMP, X22
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfNotEqual {134}
	128 Compare X21, 0
	129 JumpIfEqual {143}
	130 Move X0, X21
	131 Move X1, X19
	132 Move X2, X31
	133 Call SimulationConnection.Free, X0, X1
	134 Move X20, [X31+64]
	135 Move X19, [X31+72]
	136 Move X22, [X31+48]
	137 Move X21, [X31+56]
	138 Move X24, [X31+32]
	139 Move X23, [X31+40]
	140 Move X30, [X31+16]
	141 Add X31, X31, 80
	142 Return 
	143 Call 0x1C17F20
	144 Move X0, 0x222B000
	145 Move X0, [X0+2000]
	146 Call 0x1C17D08
	147 Call 0x1C17F10
	148 Move X1, X31
	149 Move X19, X0
	150 Call Exception..ctor, X0
	151 Move X0, 0x2237000
	152 Move X0, [X0+3248]
	153 Call 0x1C17D08
	154 Move X1, X0
	155 Move X0, X19
	156 Call 0x1C17DEC

Method: System.Void Fusion.Sockets.INetPeerGroupCallbacks.OnReliableData(Fusion.Sockets.NetConnection* connection, Fusion.Sockets.ReliableId id, System.Byte* data)

Disassembly:
	0x01EC95EC RET
	0x01EC95F0 STR X30, [X31 - 0x30]!
	0x01EC95F4 STP X22, X21, [X31 + 0x10]
	0x01EC95F8 STP X20, X19, [X31 + 0x20]
	0x01EC95FC ADRP X22, 0x2510000
	0x01EC9600 LDRB W8, [X22 + 0x4A8]
	0x01EC9604 MOV X19, X2
	0x01EC9608 MOV X20, X1
	0x01EC960C MOV X21, X0
	0x01EC9610 TBNZ X8, 0x0, 0x1EC9628
	0x01EC9614 ADRP X0, 0x2236000
	0x01EC9618 LDR X0, [X0 + 0x920]
	0x01EC961C BL 0x1C16CF4
	0x01EC9620 MOVZ W8, 0x1
	0x01EC9624 STRB W8, [X22 + 0x4A8]
	0x01EC9628 STR X31, [X31 + 0x8]
	0x01EC962C LDR X0, [X21 + 0x150]
	0x01EC9630 CBZ X0, 0x1EC967C
	0x01EC9634 ADRP X8, 0x2236000
	0x01EC9638 LDR X8, [X8 + 0x920]
	0x01EC963C AND X1, X20, 0x0
	0x01EC9640 ADD X2, X31, 0x8
	0x01EC9644 LDR X3, [X8]
	0x01EC9648 BL 0x2A6903C
	0x01EC964C TBZ X0, 0x0, 0x1EC9664
	0x01EC9650 LDR X8, [X31 + 0x8]
	0x01EC9654 CBZ X8, 0x1EC967C
	0x01EC9658 LDR X8, [X8 + 0xB0]
	0x01EC965C STR X8, [X19]
	0x01EC9660 B 0x1EC9668
	0x01EC9664 STR X31, [X19]
	0x01EC9668 LDP X20, X19, [X31 + 0x20]
	0x01EC966C LDP X22, X21, [X31 + 0x10]
	0x01EC9670 AND W0, W0, 0x1
	0x01EC9674 LDR X30, [X31], #0x30
	0x01EC9678 RET
	0x01EC967C BL 0x1C16F20
	0x01EC9680 STR X30, [X31 - 0x20]!
	0x01EC9684 STP X20, X19, [X31 + 0x10]
	0x01EC9688 MOV X20, X2
	0x01EC968C AND X1, X1, 0x0
	0x01EC9690 ADD X2, X31, 0x8
	0x01EC9694 MOV X19, X3
	0x01EC9698 STR X31, [X31 + 0x8]
	0x01EC969C BL 0x1EC95F0
	0x01EC96A0 TBZ X0, 0x0, 0x1EC96C8
	0x01EC96A4 LDR X8, [X31 + 0x8]
	0x01EC96A8 ADD X9, X8, 0x50
	0x01EC96AC STR X9, [X20]
	0x01EC96B0 CBZ X8, 0x1EC96E4
	0x01EC96B4 LDRSH W9, [X8 + 0x4]
	0x01EC96B8 LDRSH W8, [X8 + 0x6]
	0x01EC96BC SUB W8, W9, W8
	0x01EC96C0 SUB W8, W8, 0x14
	0x01EC96C4 B 0x1EC96D0
	0x01EC96C8 MOV W8, W31
	0x01EC96CC STR X31, [X20]
	0x01EC96D0 STR W8, [X19]
	0x01EC96D4 LDP X20, X19, [X31 + 0x10]
	0x01EC96D8 AND W0, W0, 0x1
	0x01EC96DC LDR X30, [X31], #0x20
	0x01EC96E0 RET
	0x01EC96E4 BL 0x1C16F20
	0x01EC96E8 STR X30, [X31 - 0x30]!
	0x01EC96EC STP X22, X21, [X31 + 0x10]
	0x01EC96F0 STP X20, X19, [X31 + 0x20]
	0x01EC96F4 ADRP X22, 0x2510000
	0x01EC96F8 LDRB W8, [X22 + 0x4A9]
	0x01EC96FC MOV X19, X2
	0x01EC9700 MOV X20, X1
	0x01EC9704 MOV X21, X0
	0x01EC9708 TBNZ X8, 0x0, 0x1EC9720
	0x01EC970C ADRP X0, 0x2236000
	0x01EC9710 LDR X0, [X0 + 0x920]
	0x01EC9714 BL 0x1C16CF4
	0x01EC9718 MOVZ W8, 0x1
	0x01EC971C STRB W8, [X22 + 0x4A9]
	0x01EC9720 STR X31, [X31 + 0x8]
	0x01EC9724 LDR X0, [X21 + 0x150]
	0x01EC9728 CBZ X0, 0x1EC9784
	0x01EC972C ADRP X8, 0x2236000
	0x01EC9730 LDR X8, [X8 + 0x920]
	0x01EC9734 AND X1, X20, 0x0
	0x01EC9738 ADD X2, X31, 0x8
	0x01EC973C LDR X3, [X8]
	0x01EC9740 BL 0x2A6903C
	0x01EC9744 TBZ X0, 0x0, 0x1EC9768
	0x01EC9748 LDR X8, [X31 + 0x8]
	0x01EC974C CBZ X8, 0x1EC9784
	0x01EC9750 LDR X8, [X8 + 0xB8]
	0x01EC9754 CBZ X8, 0x1EC9768
	0x01EC9758 LDRB W9, [X8 + 0x60]
	0x01EC975C TBNZ X9, 0x1, 0x1EC9768
	0x01EC9760 MOVZ W0, 0x1
	0x01EC9764 B 0x1EC9770
	0x01EC9768 MOV X8, X31
	0x01EC976C MOV W0, W31
	0x01EC9770 STR X8, [X19]
	0x01EC9774 LDP X20, X19, [X31 + 0x20]
	0x01EC9778 LDP X22, X21, [X31 + 0x10]
	0x01EC977C LDR X30, [X31], #0x30
	0x01EC9780 RET
	0x01EC9784 BL 0x1C16F20
	0x01EC9788 STR X30, [X31 - 0x30]!
	0x01EC978C STP X22, X21, [X31 + 0x10]
	0x01EC9790 STP X20, X19, [X31 + 0x20]
	0x01EC9794 ADRP X22, 0x2510000
	0x01EC9798 LDRB W8, [X22 + 0x4AA]
	0x01EC979C MOV X19, X2
	0x01EC97A0 MOV X20, X1
	0x01EC97A4 MOV X21, X0
	0x01EC97A8 TBNZ X8, 0x0, 0x1EC97C0
	0x01EC97AC ADRP X0, 0x2236000
	0x01EC97B0 LDR X0, [X0 + 0xCF8]
	0x01EC97B4 BL 0x1C16CF4
	0x01EC97B8 MOVZ W8, 0x1
	0x01EC97BC STRB W8, [X22 + 0x4AA]
	0x01EC97C0 STR X31, [X31 + 0x8]
	0x01EC97C4 LDR X0, [X21 + 0x158]
	0x01EC97C8 CBZ X0, 0x1EC9824
	0x01EC97CC ADRP X8, 0x2236000
	0x01EC97D0 LDR X8, [X8 + 0xCF8]
	0x01EC97D4 ADD X2, X31, 0x8
	0x01EC97D8 MOV X1, X20
	0x01EC97DC LDR X3, [X8]
	0x01EC97E0 BL 0x2A850A4
	0x01EC97E4 TBZ X0, 0x0, 0x1EC9808
	0x01EC97E8 LDR X8, [X31 + 0x8]
	0x01EC97EC CBZ X8, 0x1EC9824
	0x01EC97F0 LDR X8, [X8 + 0xB8]
	0x01EC97F4 CBZ X8, 0x1EC9808
	0x01EC97F8 LDRB W9, [X8 + 0x60]
	0x01EC97FC TBNZ X9, 0x1, 0x1EC9808
	0x01EC9800 MOVZ W0, 0x1
	0x01EC9804 B 0x1EC9810
	0x01EC9808 MOV X8, X31
	0x01EC980C MOV W0, W31
	0x01EC9810 STR X8, [X19]
	0x01EC9814 LDP X20, X19, [X31 + 0x20]
	0x01EC9818 LDP X22, X21, [X31 + 0x10]
	0x01EC981C LDR X30, [X31], #0x30
	0x01EC9820 RET
	0x01EC9824 BL 0x1C16F20
	0x01EC9828 SUB X31, X31, 0x40
	0x01EC982C STR X30, [X31 + 0x10]
	0x01EC9830 STP X22, X21, [X31 + 0x20]
	0x01EC9834 STP X20, X19, [X31 + 0x30]
	0x01EC9838 ADRP X22, 0x2510000
	0x01EC983C LDRB W8, [X22 + 0x4AB]
	0x01EC9840 MOV W21, W2
	0x01EC9844 MOV X20, X1
	0x01EC9848 MOV X19, X0
	0x01EC984C STR X3, [X31]
	0x01EC9850 STR W4, [X31 + 0x8]
	0x01EC9854 TBNZ X8, 0x0, 0x1EC986C
	0x01EC9858 ADRP X0, 0x2236000
	0x01EC985C LDR X0, [X0 + 0xD00]
	0x01EC9860 BL 0x1C16CF4
	0x01EC9864 MOVZ W8, 0x1
	0x01EC9868 STRB W8, [X22 + 0x4AB]
	0x01EC986C LDUR X2, [X31 + 0x4]
	0x01EC9870 ADD W3, W21, 0x14
	0x01EC9874 AND X1, X20, 0x0
	0x01EC9878 MOVZ W4, 0x1
	0x01EC987C MOV X0, X19
	0x01EC9880 MOV X5, X31
	0x01EC9884 MOV X6, X31
	0x01EC9888 BL 0x1EC98AC
	0x01EC988C CBZ X0, 0x1EC98A8
	0x01EC9890 LDR X0, [X0 + 0xB0]
	0x01EC9894 LDP X20, X19, [X31 + 0x30]
	0x01EC9898 LDP X22, X21, [X31 + 0x20]
	0x01EC989C LDR X30, [X31 + 0x10]
	0x01EC98A0 ADD X31, X31, 0x40
	0x01EC98A4 RET
	0x01EC98A8 BL 0x1C16F20
	0x01EC98AC SUB X31, X31, 0x50
	0x01EC98B0 STP X30, X25, [X31 + 0x10]
	0x01EC98B4 STP X24, X23, [X31 + 0x20]
	0x01EC98B8 STP X22, X21, [X31 + 0x30]
	0x01EC98BC STP X20, X19, [X31 + 0x40]
	0x01EC98C0 ADRP X21, 0x2510000
	0x01EC98C4 STP X6, X5, [X31]
	0x01EC98C8 ADRP X22, 0x2236000
	0x01EC98CC LDRB W8, [X21 + 0x4AC]
	0x01EC98D0 LDR X22, [X22 + 0xD08]

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+224], X29
	003 Move [X31+240], X30
	004 Move [X31+248], X25
	005 Move [X31+256], X24
	006 Move [X31+264], X23
	007 Move [X31+272], X22
	008 Move [X31+280], X21
	009 Move [X31+288], X20
	010 Move [X31+296], X19
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X24+40]
	013 Move X23, 0x2511000
	014 Move X20, X3
	015 Move X19, X2
	016 Move [X31+216], X8
	017 Move W8, [X23+1175]
	018 Move X22, X1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0x222B000
	025 Move X0, [X0+1560]
	026 Call 0x1C17CF4
	027 Move X0, 0x2230000
	028 Move X0, [X0+32]
	029 Call 0x1C17CF4
	030 Move X0, 0x2236000
	031 Move X0, [X0+2704]
	032 Call 0x1C17CF4
	033 Move X0, 0x222E000
	034 Move X0, [X0+3648]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X23+1175], W8
	038 Move X0, X21
	039 Move [X31+8], W31
	040 Move [X31], X31
	041 Call Simulation.get_IsServer, X0
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {77}
	046 Move W25, [X19+24]
	047 Add W31, W25, 1
	048 Move X8, [X21]
	049 Move X0, X21
	050 Move X9, [X8+616]
	051 Move X1, [X8+624]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X23, 0x222E000
	054 Move X23, [X23+3648]
	055 Move [X31+8], W0
	056 Move X8, [X23]
	057 Move W9, [X8+224]
	058 Compare W9, 0
	059 JumpIfNotEqual {62}
	060 Move X0, X8
	061 Call 0x1C17DFC
	062 Add X0, X31, 8
	063 Move X1, X31
	064 Call PlayerRef.get_AsIndex, X0
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X8, [X21+96]
	067 Compare X8, 0
	068 JumpIfEqual {219}
	069 Move X8, [X8+80]
	070 Compare X8, 0
	071 JumpIfEqual {219}
	072 Move W8, [X8+32]
	073 Move TEMP, X8
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {161}
	077 Move X8, 0x222B000
	078 Move X8, [X8+1560]
	079 Move W1, [X19+8]
	080 Move X0, [X8]
	081 Call 0x1C17D6C
	082 Move X23, X0
	083 Compare X0, 0
	084 JumpIfEqual {90}
	085 Move W8, [X23+24]
	086 Compare W8, 0
	087 JumpIfEqual {89}
	088 Add X0, X23, 32
	089 Move X0, X31
	090 Move W2, [X19+8]
	091 Move X1, X20
	092 Move X3, X31
	093 Call Native.MemCpy, X0, X1, X2
	094 Move X8, [X21]
	095 Move X20, [X21+64]
	096 Move X0, X21
	097 Move X1, X22
	098 Move X9, [X8+696]
	099 Move X2, [X8+704]
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Move V1, [X19+16]
	102 Move V0, [X19+32]
	103 Move V2, [X19]
	104 Move [X31+80], V1
	105 Move [X31+88], V0
	106 Move [X31+4], V2
	107 Compare X20, 0
	108 JumpIfEqual {219}
	109 Move V0, [X31+64]
	110 Move V1, [X31+80]
	111 Move V2, [X31+6]
	112 Move X10, 0x2236000
	113 And X19, X0, 0
	114 Move [X31+16], V0
	115 Move [X31+24], V1
	116 Move [X31+3], V2
	117 Move X8, [X20]
	118 Move X10, [X10+2704]
	119 NotImplemented "Instruction LDRH not yet implemented."
	120 Move X1, [X10]
	121 Compare X9, 0
	122 JumpIfEqual {129}
	123 Move X10, [X8+176]
	124 Add X10, X10, 8
	125 NotImplemented "Instruction LDUR not yet implemented."
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Subtract X9, X9, 1
	128 Add X10, X10, 16
	129 Move W2, 19
	130 Move X0, X20
	131 Call 0x1C5D788
	132 Move W9, [X10]
	133 Add W9, W9, 19
	134 Add X8, X8, W9
	135 Add X0, X8, 312
	136 Move V0, [X31+16]
	137 Move V1, [X31+32]
	138 Move V2, [X31+3]
	139 Move X8, [X0]
	140 Add X2, X31, 160
	141 Move [X31+160], V0
	142 Move [X31+168], V1
	143 Move [X31+12], V2
	144 Move X5, [X0+8]
	145 Move X0, X20
	146 Move X1, X19
	147 Move W3, W31
	148 Move X4, X23
	149 NotImplemented "Instruction BLR not yet implemented."
	150 Move X8, [X21+96]
	151 Compare X8, 0
	152 JumpIfEqual {219}
	153 Move X8, [X8+80]
	154 Compare X8, 0
	155 JumpIfEqual {219}
	156 Move W8, [X8+32]
	157 Move TEMP, X8
	158 And TEMP, TEMP, 2
	159 Compare TEMP, 2
	160 JumpIfEqual {180}
	161 Move X0, [X21+304]
	162 Move X1, X22
	163 Move X2, X31
	164 Move X3, X31
	165 Call NetPeerGroup.Disconnect, X0, X1, X2
	166 Move X8, [X24+40]
	167 Move X9, [X31+216]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X20, [X31+288]
	170 Move X19, [X31+296]
	171 Move X22, [X31+272]
	172 Move X21, [X31+280]
	173 Move X24, [X31+256]
	174 Move X23, [X31+264]
	175 Move X30, [X31+240]
	176 Move X25, [X31+248]
	177 Move X29, [X31+224]
	178 Add X31, X31, 304
	179 Return 
	180 Move X0, [X23]
	181 Move X22, [X21+184]
	182 Move W23, [X19+24]
	183 Move W8, [X0+224]
	184 Compare W8, 0
	185 JumpIfNotEqual {187}
	186 Call 0x1C17DFC
	187 Move W0, W23
	188 Move X1, X31
	189 Call PlayerRef.FromIndex, X0
	190 Compare X22, 0
	191 JumpIfEqual {219}
	192 Move X8, 0x2230000
	193 Move X8, [X8+32]
	194 And X1, X0, 0
	195 Add X2, X31, 0
	196 Move X0, X22
	197 Move X3, [X8]
	198 Call Dictionary`2<PlayerRef, Object>.TryGetValue, X0, X1, X2
	199 Move TEMP, X0
	200 And TEMP, TEMP, 1
	201 Compare TEMP, 1
	202 JumpIfNotEqual {166}
	203 Move X8, [X31]
	204 Compare X8, 0
	205 JumpIfEqual {219}
	206 Move V2, [X19+16]
	207 Move V0, [X19+32]
	208 Move V1, [X19]
	209 Move X0, [X21+304]
	210 Move X1, [X8+208]
	211 Move [X31+128], V2
	212 Move [X31+136], V0
	213 Move [X31+7], V1
	214 Move W4, [X19+8]
	215 Add X2, X31, 112
	216 Move X3, X20
	217 Move X5, X31
	218 Call NetPeerGroup.SendReliable, X0, X1, X2, X3, X4
	219 Call 0x1C17F20
	220 Call 0x3EB2B20

Method: Fusion.Sockets.OnConnectionRequestReply Fusion.Sockets.INetPeerGroupCallbacks.OnConnectionRequest(Fusion.Sockets.NetAddress remoteAddres, System.Byte[] token, System.Byte[] uniqueid)

Disassembly:
	0x01EC98D4 MOV W20, W4
	0x01EC98D8 MOV W23, W3
	0x01EC98DC MOV X24, X2
	0x01EC98E0 MOV X25, X1
	0x01EC98E4 MOV X19, X0
	0x01EC98E8 TBNZ X8, 0x0, 0x1EC996C
	0x01EC98EC ADRP X0, 0x2236000
	0x01EC98F0 LDR X0, [X0 + 0xD10]
	0x01EC98F4 BL 0x1C16CF4
	0x01EC98F8 ADRP X0, 0x2236000
	0x01EC98FC LDR X0, [X0 + 0xD18]
	0x01EC9900 BL 0x1C16CF4
	0x01EC9904 ADRP X0, 0x2236000
	0x01EC9908 LDR X0, [X0 + 0xC60]
	0x01EC990C BL 0x1C16CF4
	0x01EC9910 ADRP X0, 0x2235000
	0x01EC9914 LDR X0, [X0 + 0x438]
	0x01EC9918 BL 0x1C16CF4
	0x01EC991C ADRP X0, 0x2235000
	0x01EC9920 LDR X0, [X0 + 0x378]
	0x01EC9924 BL 0x1C16CF4
	0x01EC9928 ADRP X0, 0x2236000
	0x01EC992C LDR X0, [X0 + 0xD20]
	0x01EC9930 BL 0x1C16CF4
	0x01EC9934 ADRP X0, 0x2236000
	0x01EC9938 LDR X0, [X0 + 0xD28]
	0x01EC993C BL 0x1C16CF4
	0x01EC9940 ADRP X0, 0x2236000
	0x01EC9944 LDR X0, [X0 + 0xD30]
	0x01EC9948 BL 0x1C16CF4
	0x01EC994C ADRP X0, 0x2236000
	0x01EC9950 LDR X0, [X0 + 0xD38]
	0x01EC9954 BL 0x1C16CF4
	0x01EC9958 ADRP X0, 0x2236000
	0x01EC995C LDR X0, [X0 + 0xD08]
	0x01EC9960 BL 0x1C16CF4
	0x01EC9964 MOVZ W8, 0x1
	0x01EC9968 STRB W8, [X21 + 0x4AC]
	0x01EC996C AND X21, X25, 0x0
	0x01EC9970 MOV X0, X19
	0x01EC9974 MOV X1, X21
	0x01EC9978 BL 0x1EC93AC
	0x01EC997C LDR X1, [X22]
	0x01EC9980 ORN W8, W31, W0, 0x0
	0x01EC9984 AND W0, W8, 0x1
	0x01EC9988 MOV X2, X31
	0x01EC998C BL 0x1E3BA60
	0x01EC9990 LDR X0, [X19 + 0x1A0]
	0x01EC9994 UBFM W1, W23, 0x1E, 0x1D
	0x01EC9998 MOV X2, X31
	0x01EC999C BL 0x1E65C6C
	0x01EC99A0 CBZ X0, 0x1EC9B00
	0x01EC99A4 STR W25, [X0]
	0x01EC99A8 MOV X25, X0
	0x01EC99AC STR X24, [X25 + 0x8]!
	0x01EC99B0 STRH W23, [X0 + 0x4]
	0x01EC99B4 ADRP X23, 0x2235000
	0x01EC99B8 LDRB W8, [X31 + 0x8]
	0x01EC99BC LDR X23, [X23 + 0x438]
	0x01EC99C0 MOV X22, X0
	0x01EC99C4 CBZ W8, 0x1EC9A00
	0x01EC99C8 LDRB W8, [X31]
	0x01EC99CC CBZ W8, 0x1EC9A00
	0x01EC99D0 ADRP X8, 0x2236000
	0x01EC99D4 LDR X8, [X8 + 0xD38]
	0x01EC99D8 ADD X0, X31, 0x8
	0x01EC99DC LDR X1, [X8]
	0x01EC99E0 BL 0x2435DB4
	0x01EC99E4 STR W0, [X22 + 0x10]
	0x01EC99E8 ADRP X8, 0x2236000
	0x01EC99EC LDR X8, [X8 + 0xD30]
	0x01EC99F0 ADD X0, X31, 0x0
	0x01EC99F4 LDR X1, [X8]
	0x01EC99F8 BL 0x2436694
	0x01EC99FC STR W0, [X22 + 0x14]
	0x01EC9A00 LDR X0, [X23]
	0x01EC9A04 LDR X24, [X19 + 0x198]
	0x01EC9A08 BL 0x1C16F10
	0x01EC9A0C MOV X1, X19
	0x01EC9A10 MOV X2, X24
	0x01EC9A14 MOV X3, X31
	0x01EC9A18 MOV X23, X0
	0x01EC9A1C BL 0x1E97518
	0x01EC9A20 CBZ X23, 0x1EC9B00
	0x01EC9A24 STR X22, [X23 + 0xB0]
	0x01EC9A28 LDR X0, [X19 + 0x150]
	0x01EC9A2C CBZ X0, 0x1EC9B00
	0x01EC9A30 ADRP X8, 0x2236000
	0x01EC9A34 LDR X8, [X8 + 0xD10]
	0x01EC9A38 LDR W1, [X22]
	0x01EC9A3C ADRP X24, 0x2235000
	0x01EC9A40 MOV X2, X23
	0x01EC9A44 LDR X3, [X8]
	0x01EC9A48 LDR X24, [X24 + 0x378]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+128], X24
	004 Move [X31+136], X23
	005 Move [X31+144], X22
	006 Move [X31+152], X21
	007 Move [X31+160], X20
	008 Move [X31+168], X19
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X23+40]
	011 Move X24, 0x2511000
	012 Move X22, X3
	013 Move X19, X2
	014 Move [X31+104], X8
	015 Move W8, [X24+1176]
	016 Move X21, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x2237000
	023 Move X0, [X0+2672]
	024 Call 0x1C17CF4
	025 Move X0, 0x2236000
	026 Move X0, [X0+2704]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X24+1176], W8
	030 Move X0, X22
	031 Move W1, W31
	032 Move X2, X31
	033 Move [X31+8], X31
	034 Call BitConverter.ToUInt64, X0, X1
	035 Move X8, [X20+256]
	036 Compare X8, 0
	037 JumpIfEqual {103}
	038 Move X9, 0x2237000
	039 Move X9, [X9+2672]
	040 Move X1, X0
	041 Add X2, X31, 8
	042 Move X0, X8
	043 Move X3, [X9]
	044 Call Dictionary`2<UInt64, PlayerRefMapping>.TryGetValue, X0, X1, X2
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {76}
	049 Move X20, [X20+64]
	050 Move X8, [X21+16]
	051 Move V0, [X21]
	052 Move [X31+64], X8
	053 Move [X31+3], V0
	054 Compare X20, 0
	055 JumpIfEqual {103}
	056 Move V0, [X31+3]
	057 Move X8, [X31+64]
	058 Move X10, 0x2236000
	059 Move [X31+1], V0
	060 Move [X31+32], X8
	061 Move X8, [X20]
	062 Move X10, [X10+2704]
	063 NotImplemented "Instruction LDRH not yet implemented."
	064 Move X1, [X10]
	065 Compare X9, 0
	066 JumpIfEqual {73}
	067 Move X10, [X8+176]
	068 Add X10, X10, 8
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Subtract X9, X9, 1
	072 Add X10, X10, 16
	073 Move W2, 17
	074 Move X0, X20
	075 Call 0x1C5D788
	076 Move W0, 2
	077 Move W9, [X10]
	078 Add W9, W9, 17
	079 Add X8, X8, W9
	080 Add X0, X8, 312
	081 Move V0, [X31+1]
	082 Move X8, [X31+32]
	083 Move X9, [X0]
	084 Add X1, X31, 80
	085 Move [X31+5], V0
	086 Move [X31+96], X8
	087 Move X3, [X0+8]
	088 Move X0, X20
	089 Move X2, X19
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move X8, [X23+40]
	092 Move X9, [X31+104]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X20, [X31+160]
	095 Move X19, [X31+168]
	096 Move X22, [X31+144]
	097 Move X21, [X31+152]
	098 Move X24, [X31+128]
	099 Move X23, [X31+136]
	100 Move X30, [X31+112]
	101 Add X31, X31, 176
	102 Return X0
	103 Call 0x1C17F20
	104 Call 0x3EB2B20

Method: System.Void Fusion.Sockets.INetPeerGroupCallbacks.OnConnectionFailed(Fusion.Sockets.NetAddress address, Fusion.Sockets.NetConnectFailedReason reason)

Disassembly:
	0x01EC9A4C BL 0x2A67538
	0x01EC9A50 LDR X0, [X24]
	0x01EC9A54 LDR W8, [X0 + 0xE0]
	0x01EC9A58 CBNZ W8, 0x1EC9A60
	0x01EC9A5C BL 0x1C16DFC
	0x01EC9A60 MOV X0, X25
	0x01EC9A64 MOV X1, X31
	0x01EC9A68 BL 0x1E99108
	0x01EC9A6C TBZ X0, 0x0, 0x1EC9A90
	0x01EC9A70 LDR X0, [X19 + 0x158]
	0x01EC9A74 CBZ X0, 0x1EC9B00
	0x01EC9A78 ADRP X8, 0x2236000
	0x01EC9A7C LDR X1, [X25]
	0x01EC9A80 LDR X8, [X8 + 0xD18]
	0x01EC9A84 MOV X2, X23
	0x01EC9A88 LDR X3, [X8]
	0x01EC9A8C BL 0x2A83598
	0x01EC9A90 LDR W8, [X19 + 0x4C]
	0x01EC9A94 CMP W8, 0x2
	0x01EC9A98 B.NE 0x1EC9AAC
	0x01EC9A9C ADD X0, X19, 0x160
	0x01EC9AA0 MOV X1, X23
	0x01EC9AA4 MOV X2, X31
	0x01EC9AA8 BL 0x1E9823C
	0x01EC9AAC TBZ X20, 0x0, 0x1EC9AE4
	0x01EC9AB0 LDR W8, [X22 + 0x18]
	0x01EC9AB4 ORR W8, W8, 0x20
	0x01EC9AB8 STR W8, [X22 + 0x18]
	0x01EC9ABC LDR X0, [X19 + 0x188]
	0x01EC9AC0 CBZ X0, 0x1EC9B00
	0x01EC9AC4 ADRP X8, 0x2236000
	0x01EC9AC8 LDR X8, [X8 + 0xC60]
	0x01EC9ACC MOV X1, X21
	0x01EC9AD0 LDR X2, [X8]
	0x01EC9AD4 BL 0x2DB9F9C
	0x01EC9AD8 LDR W8, [X19 + 0x190]
	0x01EC9ADC ADD W8, W8, 0x1
	0x01EC9AE0 STR W8, [X19 + 0x190]
	0x01EC9AE4 MOV X0, X23
	0x01EC9AE8 LDP X20, X19, [X31 + 0x40]
	0x01EC9AEC LDP X22, X21, [X31 + 0x30]
	0x01EC9AF0 LDP X24, X23, [X31 + 0x20]
	0x01EC9AF4 LDP X30, X25, [X31 + 0x10]
	0x01EC9AF8 ADD X31, X31, 0x50
	0x01EC9AFC RET
	0x01EC9B00 BL 0x1C16F20
	0x01EC9B04 SUB X31, X31, 0x80
	0x01EC9B08 STP X30, X23, [X31 + 0x50]
	0x01EC9B0C STP X22, X21, [X31 + 0x60]
	0x01EC9B10 STP X20, X19, [X31 + 0x70]
	0x01EC9B14 ADRP X21, 0x2510000
	0x01EC9B18 ADRP X23, 0x222D000
	0x01EC9B1C LDRB W8, [X21 + 0x4AD]
	0x01EC9B20 LDR X23, [X23 + 0x398]
	0x01EC9B24 MOV X20, X1
	0x01EC9B28 MOV X19, X0
	0x01EC9B2C TBNZ X8, 0x0, 0x1EC9C04
	0x01EC9B30 ADRP X0, 0x2235000
	0x01EC9B34 LDR X0, [X0 + 0x418]
	0x01EC9B38 BL 0x1C16CF4
	0x01EC9B3C ADRP X0, 0x2236000
	0x01EC9B40 LDR X0, [X0 + 0xB70]
	0x01EC9B44 BL 0x1C16CF4
	0x01EC9B48 ADRP X0, 0x2236000
	0x01EC9B4C LDR X0, [X0 + 0xD40]
	0x01EC9B50 BL 0x1C16CF4
	0x01EC9B54 ADRP X0, 0x2236000
	0x01EC9B58 LDR X0, [X0 + 0xD48]
	0x01EC9B5C BL 0x1C16CF4
	0x01EC9B60 ADRP X0, 0x2236000
	0x01EC9B64 LDR X0, [X0 + 0xD50]
	0x01EC9B68 BL 0x1C16CF4
	0x01EC9B6C ADRP X0, 0x2236000
	0x01EC9B70 LDR X0, [X0 + 0x920]
	0x01EC9B74 BL 0x1C16CF4
	0x01EC9B78 ADRP X0, 0x2235000
	0x01EC9B7C LDR X0, [X0 + 0xB90]
	0x01EC9B80 BL 0x1C16CF4
	0x01EC9B84 ADRP X0, 0x2235000
	0x01EC9B88 LDR X0, [X0 + 0xB98]
	0x01EC9B8C BL 0x1C16CF4
	0x01EC9B90 ADRP X0, 0x2235000
	0x01EC9B94 LDR X0, [X0 + 0xBA0]
	0x01EC9B98 BL 0x1C16CF4
	0x01EC9B9C ADRP X0, 0x2235000
	0x01EC9BA0 LDR X0, [X0 + 0xBA8]
	0x01EC9BA4 BL 0x1C16CF4
	0x01EC9BA8 ADRP X0, 0x2236000
	0x01EC9BAC LDR X0, [X0 + 0xC70]
	0x01EC9BB0 BL 0x1C16CF4
	0x01EC9BB4 ADRP X0, 0x222D000
	0x01EC9BB8 LDR X0, [X0 + 0x398]
	0x01EC9BBC BL 0x1C16CF4
	0x01EC9BC0 ADRP X0, 0x2235000
	0x01EC9BC4 LDR X0, [X0 + 0x378]
	0x01EC9BC8 BL 0x1C16CF4
	0x01EC9BCC ADRP X0, 0x222D000
	0x01EC9BD0 LDR X0, [X0 + 0xE40]
	0x01EC9BD4 BL 0x1C16CF4
	0x01EC9BD8 ADRP X0, 0x2236000
	0x01EC9BDC LDR X0, [X0 + 0xB98]
	0x01EC9BE0 BL 0x1C16CF4
	0x01EC9BE4 ADRP X0, 0x2235000
	0x01EC9BE8 LDR X0, [X0 + 0xBB0]
	0x01EC9BEC BL 0x1C16CF4
	0x01EC9BF0 ADRP X0, 0x2236000
	0x01EC9BF4 LDR X0, [X0 + 0xBB8]
	0x01EC9BF8 BL 0x1C16CF4
	0x01EC9BFC MOVZ W8, 0x1
	0x01EC9C00 STRB W8, [X21 + 0x4AD]
	0x01EC9C04 LDR X0, [X23]
	0x01EC9C08 STP X31, X31, [X31 + 0x40]
	0x01EC9C0C STP X31, X31, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+104], X23
	004 Move [X31+112], X22
	005 Move [X31+120], X21
	006 Move [X31+128], X20
	007 Move [X31+136], X19
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X23+40]
	010 Move X21, 0x2511000
	011 Move W20, W2
	012 Move X22, X1
	013 Move [X31+88], X8
	014 Move W8, [X21+1177]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x2236000
	021 Move X0, [X0+2704]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1177], W8
	025 Move X21, [X19+64]
	026 Move X8, [X22+16]
	027 Move V0, [X22]
	028 Move [X31+48], X8
	029 Move [X31+2], V0
	030 Compare X21, 0
	031 JumpIfEqual {77}
	032 Move V0, [X31+2]
	033 Move X8, [X31+48]
	034 Move X10, 0x2236000
	035 Move [X31], V0
	036 Move [X31+16], X8
	037 Move X8, [X21]
	038 Move X10, [X10+2704]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Move X1, [X10]
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move W2, 18
	050 Move X0, X21
	051 Call 0x1C5D788
	052 Move W9, [X10]
	053 Add W9, W9, 18
	054 Add X8, X8, W9
	055 Add X0, X8, 312
	056 Move V0, [X31]
	057 Move X8, [X31+16]
	058 Move X9, [X0]
	059 Move [X31+4], V0
	060 Move [X31+80], X8
	061 Move X3, [X0+8]
	062 Add X1, X31, 64
	063 Move X0, X21
	064 Move W2, W20
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X8, [X23+40]
	067 Move X9, [X31+88]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X20, [X31+128]
	070 Move X19, [X31+136]
	071 Move X22, [X31+112]
	072 Move X21, [X31+120]
	073 Move X30, [X31+96]
	074 Move X23, [X31+104]
	075 Add X31, X31, 144
	076 Return 
	077 Call 0x1C17F20
	078 Call 0x3EB2B20
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X20, X0
	081 Move X0, X20
	082 Call 0x3EB2AD0
	083 Move X20, X0
	084 Move X0, 0x222B000
	085 Move X0, [X0+2000]
	086 Call 0x1C17D08
	087 Move X8, [X20]
	088 Move X1, [X8]
	089 Call 0x1C18270
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {110}
	094 Move X20, [X20]
	095 Call 0x3EB2AE0
	096 Move X0, 0x2233000
	097 Move X0, [X0+2224]
	098 Call 0x1C17D08
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Move X0, 0x2237000
	104 Move X0, [X0+2744]
	105 Call 0x1C17D08
	106 Move X2, X0
	107 Move X0, X19
	108 Move X1, X20
	109 Call 0x2214878, X0, X1
	110 Move W0, 8
	111 Call 0x3EB2AF0
	112 Move X8, [X20]
	113 Move [X0], X8
	114 Move X1, 0x1FEC000
	115 Add X1, X1, 3672
	116 Move X2, X31
	117 Call 0x3EB2B00
	118 Move X20, X0
	119 Call 0x3EB2AE0
	120 Move X0, X20
	121 Call 0x1D2D690
	122 Call 0x1991590

Method: System.Void Fusion.Sockets.INetPeerGroupCallbacks.OnUnreliableData(Fusion.Sockets.NetConnection* connection, Fusion.Sockets.NetBitBuffer* buffer)

Disassembly:
	0x01EC9C10 STP X31, X31, [X31 + 0x20]
	0x01EC9C14 LDR W8, [X0 + 0xE0]
	0x01EC9C18 CBZ W8, 0x1EC9C24
	0x01EC9C1C CBNZ W20, 0x1EC9C2C
	0x01EC9C20 B 0x1EC9FA4
	0x01EC9C24 BL 0x1C16DFC
	0x01EC9C28 CBZ W20, 0x1EC9FA4
	0x01EC9C2C LDR X0, [X19 + 0x150]
	0x01EC9C30 CBZ X0, 0x1EC9FB8
	0x01EC9C34 ADRP X8, 0x2236000
	0x01EC9C38 LDR X8, [X8 + 0x920]
	0x01EC9C3C AND X20, X20, 0x0
	0x01EC9C40 ADD X2, X31, 0x48
	0x01EC9C44 MOV X1, X20
	0x01EC9C48 LDR X3, [X8]
	0x01EC9C4C BL 0x2A6903C
	0x01EC9C50 TBZ X0, 0x0, 0x1EC9FA4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x2511000
	005 Move X20, 0x2237000
	006 Move W8, [X19+1178]
	007 Move X20, [X20+3256]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2237000
	013 Move X0, [X0+3256]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1178], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X1, X31
	021 Move X30, [X31+32]
	022 Call Assert.AlwaysFail, X0
	023 Return 

Method: System.Void Fusion.Sockets.INetPeerGroupCallbacks.OnNotifyData(Fusion.Sockets.NetConnection* c, Fusion.Sockets.NetBitBuffer* buffer)

Disassembly:
	0x01EC9C54 LDR X0, [X19 + 0x150]
	0x01EC9C58 CBZ X0, 0x1EC9FB8
	0x01EC9C5C ADRP X8, 0x2236000
	0x01EC9C60 LDR X8, [X8 + 0xD48]
	0x01EC9C64 MOV X1, X20
	0x01EC9C68 LDR X2, [X8]
	0x01EC9C6C BL 0x2A689C0
	0x01EC9C70 MOV X0, X19
	0x01EC9C74 BL 0x1EBDF30
	0x01EC9C78 LDR X8, [X19 + 0x58]
	0x01EC9C7C TBZ X0, 0x0, 0x1EC9C88
	0x01EC9C80 CBNZ X8, 0x1EC9C98
	0x01EC9C84 B 0x1EC9FB8
	0x01EC9C88 CBZ X8, 0x1EC9FB8
	0x01EC9C8C LDR W9, [X8 + 0x38]
	0x01EC9C90 CMP W9, 0x2
	0x01EC9C94 B.NE 0x1EC9D4C
	0x01EC9C98 MOV X0, X8
	0x01EC9C9C MOV X1, X31
	0x01EC9CA0 BL 0x1ED2A50
	0x01EC9CA4 TBZ X0, 0x0, 0x1EC9D4C
	0x01EC9CA8 LDR X0, [X19 + 0xB0]
	0x01EC9CAC CBZ X0, 0x1EC9FB8
	0x01EC9CB0 ADRP X8, 0x2235000
	0x01EC9CB4 LDR X8, [X8 + 0xB90]
	0x01EC9CB8 LDR X1, [X8]
	0x01EC9CBC BL 0x2A1352C
	0x01EC9CC0 CBZ X0, 0x1EC9FB8
	0x01EC9CC4 ADRP X8, 0x2235000
	0x01EC9CC8 LDR X8, [X8 + 0xBB0]
	0x01EC9CCC LDR X1, [X8]
	0x01EC9CD0 ADD X8, X31, 0x8
	0x01EC9CD4 BL 0x274B2CC
	0x01EC9CD8 LDUR V0, [X31 + 0x8]
	0x01EC9CDC LDR X8, [X31 + 0x18]
	0x01EC9CE0 ADRP X22, 0x2235000
	0x01EC9CE4 STR V0, [X31 + 0x3]
	0x01EC9CE8 STR X8, [X31 + 0x40]
	0x01EC9CEC LDR X22, [X22 + 0xBA0]
	0x01EC9CF0 LDR X1, [X22]
	0x01EC9CF4 ADD X0, X31, 0x30
	0x01EC9CF8 BL 0x2BF5F4C
	0x01EC9CFC TBZ X0, 0x0, 0x1EC9D38
	0x01EC9D00 LDR X21, [X31 + 0x40]
	0x01EC9D04 CBZ X21, 0x1EC9FBC
	0x01EC9D08 ADD X2, X31, 0x28
	0x01EC9D0C MOV X0, X21
	0x01EC9D10 MOV X1, X20
	0x01EC9D14 MOV X3, X31
	0x01EC9D18 BL 0x1ED5868
	0x01EC9D1C TBZ X0, 0x0, 0x1EC9CF0
	0x01EC9D20 LDR X0, [X21 + 0xC8]
	0x01EC9D24 CBZ X0, 0x1EC9FC0
	0x01EC9D28 LDR X1, [X31 + 0x28]
	0x01EC9D2C MOV X2, X31
	0x01EC9D30 BL 0x1E989BC
	0x01EC9D34 B 0x1EC9CF0
	0x01EC9D38 ADRP X8, 0x2235000
	0x01EC9D3C LDR X8, [X8 + 0xB98]
	0x01EC9D40 ADD X0, X31, 0x30
	0x01EC9D44 LDR X1, [X8]
	0x01EC9D48 BL 0x2BF5F48
	0x01EC9D4C MOV X0, X19
	0x01EC9D50 BL 0x1EBDF30
	0x01EC9D54 TBZ X0, 0x0, 0x1EC9D7C
	0x01EC9D58 LDR X0, [X19 + 0x58]
	0x01EC9D5C CBZ X0, 0x1EC9FB8
	0x01EC9D60 MOV X1, X31
	0x01EC9D64 BL 0x1ED4BCC
	0x01EC9D68 TBZ X0, 0x0, 0x1EC9D7C
	0x01EC9D6C LDR X1, [X31 + 0x48]
	0x01EC9D70 MOVZ W2, 0x1
	0x01EC9D74 MOV X0, X19
	0x01EC9D78 BL 0x1EBFDB4
	0x01EC9D7C LDR W8, [X19 + 0x4C]
	0x01EC9D80 CMP W8, 0x2
	0x01EC9D84 B.NE 0x1EC9D98
	0x01EC9D88 LDR X1, [X31 + 0x48]
	0x01EC9D8C ADD X0, X19, 0x160
	0x01EC9D90 MOV X2, X31
	0x01EC9D94 BL 0x1E98340
	0x01EC9D98 LDR X0, [X31 + 0x48]
	0x01EC9D9C CBZ X0, 0x1EC9FB8
	0x01EC9DA0 MOV X1, X31
	0x01EC9DA4 BL 0x1E97358
	0x01EC9DA8 ADRP X22, 0x2235000
	0x01EC9DAC LDR X22, [X22 + 0x378]
	0x01EC9DB0 STR X0, [X31 + 0x20]
	0x01EC9DB4 LDR X8, [X22]
	0x01EC9DB8 LDR W9, [X8 + 0xE0]
	0x01EC9DBC CBNZ W9, 0x1EC9DC8
	0x01EC9DC0 MOV X0, X8
	0x01EC9DC4 BL 0x1C16DFC
	0x01EC9DC8 ADD X0, X31, 0x20
	0x01EC9DCC MOV X1, X31
	0x01EC9DD0 BL 0x1E99108
	0x01EC9DD4 TBZ X0, 0x0, 0x1EC9E3C
	0x01EC9DD8 LDR X0, [X31 + 0x48]
	0x01EC9DDC CBZ X0, 0x1EC9FB8
	0x01EC9DE0 LDR X21, [X19 + 0x158]
	0x01EC9DE4 MOV X1, X31
	0x01EC9DE8 BL 0x1E97358

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x2511000
	008 Move W8, [X23+1211]
	009 Move X21, [X0+272]
	010 Move X20, X2
	011 Move X19, X0
	012 Move X22, X1
	013 Compare W8, 0
	014 JumpIfNotEqual {20}
	015 Move X0, 0x2237000
	016 Move X0, [X0+2656]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X23+1211], W8
	020 Move X0, [X19+176]
	021 Compare X0, 0
	022 JumpIfEqual {109}
	023 Move X9, 0x2237000
	024 Move W8, [X22+24]
	025 Move X9, [X9+2656]
	026 NotImplemented "Instruction SBFM not yet implemented."
	027 Move X2, [X9]
	028 Call Dictionary`2<Int32, Object>.get_Item, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {109}
	031 Move X23, X0
	032 Move X0, [X0+216]
	033 Move X1, [X22+24]
	034 Move X2, X31
	035 Call NetConnectionId.op_Equality, X0, X1
	036 Compare X21, 0
	037 JumpIfEqual {109}
	038 And W31, W0, 1
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 Move X0, X21
	041 Move X2, X20
	042 Move X3, X31
	043 Call RecvContext.Init, X0, X1, X2
	044 Move X8, [X19+272]
	045 Compare X8, 0
	046 JumpIfEqual {109}
	047 Move X0, [X8+48]
	048 Compare X0, 0
	049 JumpIfEqual {109}
	050 Move X1, X31
	051 Call SimulationConnection.PacketReceiveDelta, X0
	052 Move X0, X19
	053 Call Simulation.RecvMessages, X0
	054 Move X8, [X19]
	055 Move X1, [X8+656]
	056 Move X9, [X8+648]
	057 Move X0, X19
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+48]
	064 Move X23, [X31+56]
	065 Return 
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X20, X0
	068 Move X0, X20
	069 Call 0x3EB2AD0
	070 Move X20, X0
	071 Move X0, 0x222B000
	072 Move X0, [X0+2000]
	073 Call 0x1C17D08
	074 Move X8, [X20]
	075 Move X1, [X8]
	076 Call 0x1C18270
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {110}
	081 Move X20, [X20]
	082 Call 0x3EB2AE0
	083 Move X0, 0x2233000
	084 Move X0, [X0+2224]
	085 Call 0x1C17D08
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X0, 0x2237000
	091 Move X0, [X0+2744]
	092 Call 0x1C17D08
	093 Move X2, X0
	094 Move X0, X19
	095 Move X1, X20
	096 Call 0x2214878, X0, X1
	097 Move X0, [X19+272]
	098 Compare X0, 0
	099 JumpIfEqual {109}
	100 Move X20, [X31+32]
	101 Move X19, [X31+40]
	102 Move X22, [X31+16]
	103 Move X21, [X31+24]
	104 Move X1, X31
	105 Move X30, [X31+48]
	106 Move X23, [X31+56]
	107 Call RecvContext.Done, X0
	108 Return 
	109 Call 0x1C17F20
	110 Move W0, 8
	111 Call 0x3EB2AF0
	112 Move X8, [X20]
	113 Move [X0], X8
	114 Move X1, 0x1FEC000
	115 Add X1, X1, 3672
	116 Move X2, X31
	117 Call 0x3EB2B00
	118 Move X20, X0
	119 Call 0x3EB2AE0
	120 Move X0, X20
	121 Call 0x1D2D690
	122 Call 0x1991590

Method: System.Void OnEnvelopeLost(Fusion.Sockets.NetConnection* connection, Fusion.SimulationPacketEnvelope* envelope)

Disassembly:
	0x01EC9DEC CBZ X21, 0x1EC9FB8
	0x01EC9DF0 ADRP X8, 0x2236000
	0x01EC9DF4 LDR X8, [X8 + 0xD40]
	0x01EC9DF8 MOV X1, X0
	0x01EC9DFC MOV X0, X21
	0x01EC9E00 LDR X2, [X8]
	0x01EC9E04 BL 0x2A837A0
	0x01EC9E08 TBZ X0, 0x0, 0x1EC9E3C
	0x01EC9E0C LDR X0, [X31 + 0x48]
	0x01EC9E10 CBZ X0, 0x1EC9FB8
	0x01EC9E14 LDR X21, [X19 + 0x158]
	0x01EC9E18 MOV X1, X31
	0x01EC9E1C BL 0x1E97358
	0x01EC9E20 CBZ X21, 0x1EC9FB8
	0x01EC9E24 ADRP X8, 0x2236000
	0x01EC9E28 LDR X8, [X8 + 0xD50]
	0x01EC9E2C MOV X1, X0
	0x01EC9E30 MOV X0, X21
	0x01EC9E34 LDR X2, [X8]
	0x01EC9E38 BL 0x2A84A10
	0x01EC9E3C LDR X8, [X31 + 0x48]
	0x01EC9E40 CBZ X8, 0x1EC9FB8
	0x01EC9E44 LDR X8, [X8 + 0xB0]
	0x01EC9E48 CBZ X8, 0x1EC9FB8
	0x01EC9E4C LDRB W8, [X8 + 0x18]
	0x01EC9E50 TBZ X8, 0x5, 0x1EC9F74
	0x01EC9E54 LDR X0, [X19 + 0x188]
	0x01EC9E58 CBZ X0, 0x1EC9FB8
	0x01EC9E5C ADRP X8, 0x2236000
	0x01EC9E60 LDR X8, [X8 + 0xC70]
	0x01EC9E64 MOV X1, X20
	0x01EC9E68 LDR X2, [X8]
	0x01EC9E6C BL 0x2DB96D0
	0x01EC9E70 LDR W8, [X19 + 0x190]
	0x01EC9E74 ADD W8, W8, 0x1
	0x01EC9E78 STR W8, [X19 + 0x190]
	0x01EC9E7C LDR X0, [X31 + 0x48]
	0x01EC9E80 CBZ X0, 0x1EC9FB8
	0x01EC9E84 MOV X1, X31
	0x01EC9E88 BL 0x1E97314
	0x01EC9E8C CBZ X0, 0x1EC9FB8
	0x01EC9E90 ADRP X8, 0x222D000
	0x01EC9E94 LDR X8, [X8 + 0xE40]
	0x01EC9E98 MOV X21, X0
	0x01EC9E9C LDR W20, [X21]
	0x01EC9EA0 LDR X0, [X8]
	0x01EC9EA4 LDR W8, [X0 + 0xE0]
	0x01EC9EA8 CBNZ W8, 0x1EC9EB0
	0x01EC9EAC BL 0x1C16DFC
	0x01EC9EB0 CMP W20, 0x1
	0x01EC9EB4 B.LT 0x1EC9F74
	0x01EC9EB8 LDR X8, [X31 + 0x48]
	0x01EC9EBC CBZ X8, 0x1EC9FB8
	0x01EC9EC0 LDR X8, [X8 + 0xB0]
	0x01EC9EC4 CBZ X8, 0x1EC9FB8
	0x01EC9EC8 LDR X0, [X22]
	0x01EC9ECC LDR X22, [X8 + 0x8]
	0x01EC9ED0 LDR W9, [X0 + 0xE0]
	0x01EC9ED4 CBNZ W9, 0x1EC9EDC
	0x01EC9ED8 BL 0x1C16DFC
	0x01EC9EDC MOV X0, X31
	0x01EC9EE0 BL 0x1E98E98
	0x01EC9EE4 CMP W22, W0
	0x01EC9EE8 B.NE 0x1EC9F74
	0x01EC9EEC UBFM X8, X22, 0x20, 0x3F
	0x01EC9EF0 UBFM X9, X0, 0x20, 0x3F
	0x01EC9EF4 CMP W8, W9
	0x01EC9EF8 B.NE 0x1EC9F74
	0x01EC9EFC LDR X0, [X23]
	0x01EC9F00 LDR W22, [X21 + 0x4]
	0x01EC9F04 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move W8, [X1+64]
	010 Move X19, X2
	011 Move X20, X0
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X22, 0x2511000
	014 Move W8, [X22+1211]
	015 Move X21, X1
	016 Compare W8, 0
	017 JumpIfNotEqual {23}
	018 Move X0, 0x2237000
	019 Move X0, [X0+2656]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1211], W8
	023 Move X0, [X20+176]
	024 Compare X0, 0
	025 JumpIfEqual {84}
	026 Move X9, 0x2237000
	027 Move W8, [X21+24]
	028 Move X9, [X9+2656]
	029 NotImplemented "Instruction SBFM not yet implemented."
	030 Move X2, [X9]
	031 Call Dictionary`2<Int32, Object>.get_Item, X0, X1
	032 Compare X0, 0
	033 JumpIfEqual {84}
	034 Move X22, X0
	035 Move X0, [X0+216]
	036 Move X1, [X21+24]
	037 Move X2, X31
	038 Call NetConnectionId.op_Equality, X0, X1
	039 And W31, W0, 1
	040 NotImplemented "Instruction CSEL not yet implemented."
	041 Compare X19, 0
	042 JumpIfEqual {84}
	043 Move X22, X19
	044 Add X22, X22, 8
	045 Move W8, [X22]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Add X23, X25, 96
	048 Move X24, [X19+16]
	049 Move X0, X22
	050 Move X1, X24
	051 Call SimulationMessageList.Remove, X0, X1
	052 Compare X25, 0
	053 JumpIfEqual {84}
	054 Move X0, X23
	055 Move X1, X24
	056 Call SimulationMessageList.AddFirst, X0, X1
	057 Move W8, [X22]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X0, [X20+168]
	060 Compare X0, 0
	061 JumpIfEqual {84}
	062 Move X1, X21
	063 Move X2, X19
	064 Move X3, X31
	065 Call StateReplicator.OnPacketLost, X0, X1, X2
	066 Compare X19, 0
	067 JumpIfEqual {84}
	068 Add X1, X19, 8
	069 Move X0, X20
	070 Call Simulation.FreeMessages, X0, X1
	071 Move X0, X20
	072 Move X1, X19
	073 Move X20, [X31+48]
	074 Move X19, [X31+56]
	075 Move X22, [X31+32]
	076 Move X21, [X31+40]
	077 Move X24, [X31+16]
	078 Move X23, [X31+24]
	079 Move X2, X31
	080 Move X30, [X31+64]
	081 Move X25, [X31+72]
	082 Call SimulationPacketEnvelope.Free, X0, X1
	083 Return 
	084 Call 0x1C17F20

Method: System.Void OnEnvelopeDelivered(Fusion.Sockets.NetConnection* connection, Fusion.SimulationPacketEnvelope* envelope)

Disassembly:
	0x01EC9F08 CBNZ W8, 0x1EC9F10
	0x01EC9F0C BL 0x1C16DFC
	0x01EC9F10 CBZ W22, 0x1EC9F34
	0x01EC9F14 LDR X0, [X19 + 0x180]
	0x01EC9F18 CBZ X0, 0x1EC9FB8
	0x01EC9F1C ADRP X8, 0x2236000
	0x01EC9F20 LDR W2, [X21 + 0x4]
	0x01EC9F24 LDR X8, [X8 + 0xB70]
	0x01EC9F28 MOV X1, X20
	0x01EC9F2C LDR X3, [X8]
	0x01EC9F30 BL 0x2AE3E84
	0x01EC9F34 ADRP X8, 0x2236000
	0x01EC9F38 LDR X21, [X19 + 0xF0]
	0x01EC9F3C LDR X8, [X8 + 0xBB8]
	0x01EC9F40 ADD X0, X31, 0x8
	0x01EC9F44 MOV X1, X20
	0x01EC9F48 MOV W2, W31
	0x01EC9F4C LDR X3, [X8]
	0x01EC9F50 STR X31, [X31 + 0x8]
	0x01EC9F54 BL 0x27AC8D0
	0x01EC9F58 CBZ X21, 0x1EC9FB8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X2, 0
	006 JumpIfEqual {28}
	007 Move X21, X1
	008 Add X1, X2, 8
	009 Move X19, X2
	010 Move X20, X0
	011 Call Simulation.FreeMessages, X0, X1
	012 Move X0, [X20+168]
	013 Compare X0, 0
	014 JumpIfEqual {28}
	015 Move X1, X21
	016 Move X2, X19
	017 Move X3, X31
	018 Call StateReplicator.OnPacketDelivered, X0, X1, X2
	019 Move X0, X20
	020 Move X1, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X2, X31
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Call SimulationPacketEnvelope.Free, X0, X1
	027 Return 
	028 Call 0x1C17F20

Method: System.Void Fusion.Sockets.INetPeerGroupCallbacks.OnNotifyDispose(Fusion.Sockets.NetSendEnvelope envelope)

Disassembly:
	0x01EC9F5C ADRP X8, 0x2236000
	0x01EC9F60 LDR X1, [X31 + 0x8]
	0x01EC9F64 LDR X8, [X8 + 0xB98]
	0x01EC9F68 MOV X0, X21
	0x01EC9F6C LDR X2, [X8]
	0x01EC9F70 BL 0x24EF9E4
	0x01EC9F74 LDR X8, [X31 + 0x48]
	0x01EC9F78 CBZ X8, 0x1EC9FB8
	0x01EC9F7C ADRP X9, 0x2235000
	0x01EC9F80 LDR X0, [X19 + 0x1A0]
	0x01EC9F84 LDR X9, [X9 + 0x418]
	0x01EC9F88 ADD X1, X8, 0xB0
	0x01EC9F8C LDR X2, [X9]
	0x01EC9F90 BL 0x22798EC
	0x01EC9F94 LDR X0, [X31 + 0x48]
	0x01EC9F98 CBZ X0, 0x1EC9FB8
	0x01EC9F9C MOV X1, X31
	0x01EC9FA0 BL 0x1E97548
	0x01EC9FA4 LDP X20, X19, [X31 + 0x70]
	0x01EC9FA8 LDP X22, X21, [X31 + 0x60]
	0x01EC9FAC LDP X30, X23, [X31 + 0x50]
	0x01EC9FB0 ADD X31, X31, 0x80
	0x01EC9FB4 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W9, [X1+24]
	005 Move X8, [X1]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X20, [X31+16]
	008 Move X19, [X31+24]
	009 Move X0, X8
	010 Move X1, X31
	011 Move X30, [X31+32]
	012 Call Native.Free, X0
	013 Return 
	014 Compare X8, 0
	015 JumpIfEqual {28}
	016 Move X19, X1
	017 Add X1, X8, 8
	018 Move X20, X0
	019 Call Simulation.FreeMessages, X0, X1
	020 Move X1, [X19]
	021 Move X0, X20
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X2, X31
	025 Move X30, [X31+32]
	026 Call SimulationPacketEnvelope.Free, X0, X1
	027 Return 
	028 Call 0x1C17F20

Method: System.Void Fusion.Sockets.INetPeerGroupCallbacks.OnNotifyLost(Fusion.Sockets.NetConnection* connection, Fusion.Sockets.NetSendEnvelope envelope)

Disassembly:
	0x01EC9FB8 BL 0x1C16F20
	0x01EC9FBC BL 0x1C16F20
	0x01EC9FC0 BL 0x1C16F20
	0x01EC9FC4 B 0x1EC9FD4
	0x01EC9FC8 B 0x1EC9FD4
	0x01EC9FCC B 0x1EC9FD4
	0x01EC9FD0 B 0x1EC9FD4
	0x01EC9FD4 MOV X21, X0
	0x01EC9FD8 CMP W1, 0x1
	0x01EC9FDC B.NE 0x1ECA010
	0x01EC9FE0 MOV X0, X21

ISIL:
	001 Move W8, [X2+24]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X2, [X2]
	005 Call Simulation.OnEnvelopeLost, X0, X1, X2
	006 Return 
	007 Move X0, [X2]
	008 Move X1, X31
	009 Call Native.Free, X0
	010 Return 
	011 Return 

Method: System.Void Fusion.Sockets.INetPeerGroupCallbacks.OnNotifyDelivered(Fusion.Sockets.NetConnection* connection, Fusion.Sockets.NetSendEnvelope envelope)

Disassembly:
	0x01EC9FE4 BL 0x3EB1AD0
	0x01EC9FE8 LDR X22, [X0]
	0x01EC9FEC BL 0x3EB1AE0
	0x01EC9FF0 ADRP X8, 0x2235000
	0x01EC9FF4 LDR X8, [X8 + 0xB98]
	0x01EC9FF8 ADD X0, X31, 0x30
	0x01EC9FFC LDR X1, [X8]
	0x01ECA000 BL 0x2BF5F48
	0x01ECA004 CBZ X22, 0x1EC9D4C
	0x01ECA008 MOV X0, X22
	0x01ECA00C BL 0x1C16F18

ISIL:
	001 Move W8, [X2+24]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X2, [X2]
	005 Call Simulation.OnEnvelopeDelivered, X0, X1, X2
	006 Return 
	007 Move X0, [X2]
	008 Move X1, X31
	009 Call Native.Free, X0
	010 Return 
	011 Return 

Method: System.UInt32 get_IdCounter()

Disassembly:
	0x01ECA010 MOV X22, X31
	0x01ECA014 B 0x1ECA01C

ISIL:
	001 Move W0, [X0+328]
	002 Return X0

Method: System.Int32 get_ObjectCount()

Disassembly:
	0x01ECA018 MOV X21, X0
	0x01ECA01C ADRP X8, 0x2234000
	0x01ECA020 LDR X8, [X8 + 0xB98]
	0x01ECA024 LDR X1, [X8]
	0x01ECA028 ADD X0, X31, 0x30
	0x01ECA02C BL 0x2BF5F48
	0x01ECA030 CBNZ X22, 0x1ECA03C
	0x01ECA034 MOV X0, X21
	0x01ECA038 BL 0x1D2C690
	0x01ECA03C MOV X0, X22
	0x01ECA040 BL 0x1C16F18
	0x01ECA044 BL 0x1990590
	0x01ECA048 SUB X31, X31, 0x50
	0x01ECA04C STP X30, X23, [X31 + 0x20]
	0x01ECA050 STP X22, X21, [X31 + 0x30]
	0x01ECA054 STP X20, X19, [X31 + 0x40]
	0x01ECA058 ADRP X21, 0x250F000
	0x01ECA05C ADRP X22, 0x222C000
	0x01ECA060 LDRB W8, [X21 + 0x4AE]
	0x01ECA064 LDR X22, [X22 + 0xE40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2510000
	005 Move W8, [X20+1179]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2236000
	012 Move X0, [X0+3264]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1179], W8
	016 Move X0, [X19+336]
	017 Compare X0, 0
	018 JumpIfEqual {27}
	019 Move X8, 0x2236000
	020 Move X8, [X8+3264]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X1, [X8]
	024 Move X30, [X31+32]
	025 Call Dictionary`2<NetworkId, Object>.get_Count, X0
	026 Return X0
	027 Call 0x1C17F20

Method: System.Collections.Generic.Dictionary`2<Fusion.NetworkId, Fusion.NetworkObjectMeta> get_Objects()

Disassembly:
	0x01ECA068 MOV X20, X1
	0x01ECA06C MOV X19, X0

ISIL:
	001 Move X0, [X0+336]
	002 Return X0

Method: Fusion.NetworkObjectHeaderSnapshot GetSnapshot()

Disassembly:
	0x01ECA070 TBNZ X8, 0x0, 0x1ECA0A0
	0x01ECA074 ADRP X0, 0x222C000
	0x01ECA078 LDR X0, [X0 + 0xEF8]
	0x01ECA07C BL 0x1C16CF4
	0x01ECA080 ADRP X0, 0x222C000
	0x01ECA084 LDR X0, [X0 + 0xF00]
	0x01ECA088 BL 0x1C16CF4
	0x01ECA08C ADRP X0, 0x222C000
	0x01ECA090 LDR X0, [X0 + 0xE40]
	0x01ECA094 BL 0x1C16CF4
	0x01ECA098 MOVZ W8, 0x1
	0x01ECA09C STRB W8, [X21 + 0x4AE]
	0x01ECA0A0 STP X31, X31, [X31]
	0x01ECA0A4 LDR X8, [X19]
	0x01ECA0A8 MOV X0, X19
	0x01ECA0AC LDR X9, [X8 + 0x268]
	0x01ECA0B0 LDR X1, [X8 + 0x270]
	0x01ECA0B4 BLR X9
	0x01ECA0B8 LDR X8, [X22]
	0x01ECA0BC MOV X21, X0
	0x01ECA0C0 LDR W9, [X8 + 0xE0]
	0x01ECA0C4 CBNZ W9, 0x1ECA0D0
	0x01ECA0C8 MOV X0, X8
	0x01ECA0CC BL 0x1C16DFC
	0x01ECA0D0 CMP W20, W21
	0x01ECA0D4 B.NE 0x1ECA0E0
	0x01ECA0D8 MOVZ W0, 0x1
	0x01ECA0DC B 0x1ECA2B0
	0x01ECA0E0 MOV X0, X19
	0x01ECA0E4 BL 0x1EBDF30
	0x01ECA0E8 LDR X8, [X22]
	0x01ECA0EC MOV W21, W0
	0x01ECA0F0 LDR W9, [X8 + 0xE0]
	0x01ECA0F4 CBZ W9, 0x1ECA18C
	0x01ECA0F8 TBZ X21, 0x0, 0x1ECA198
	0x01ECA0FC CBZ W20, 0x1ECA0D8
	0x01ECA100 ADRP X22, 0x250F000
	0x01ECA104 LDRB W8, [X22 + 0x3BC]
	0x01ECA108 CBNZ W8, 0x1ECA12C
	0x01ECA10C ADRP X0, 0x222E000
	0x01ECA110 LDR X0, [X0 + 0x20]
	0x01ECA114 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2510000
	005 Move W8, [X20+1180]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x2236000
	012 Move X0, [X0+3272]
	013 Call 0x1C17CF4
	014 Move X0, 0x2236000
	015 Move X0, [X0+3280]
	016 Call 0x1C17CF4
	017 Move X0, 0x2236000
	018 Move X0, [X0+3288]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1180], W8
	022 Move X0, [X19+320]
	023 Compare X0, 0
	024 JumpIfEqual {49}
	025 Move W8, [X0+24]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, 0x2236000
	028 Move X8, [X8+3280]
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X1, [X8]
	032 Move X30, [X31+32]
	033 Call Stack`1<Object>.Pop, X0
	034 Return X0
	035 Move X8, 0x2236000
	036 Move X19, [X19+408]
	037 Move X8, [X8+3272]
	038 Move X0, [X8]
	039 Call 0x1C17F10
	040 Move X1, X19
	041 Move X2, X31
	042 Move X20, X0
	043 Call NetworkObjectHeaderSnapshot..ctor, X0, X1
	044 Move X0, X20
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Return X0
	049 Call 0x1C17F20

Method: System.Int32 GetObjectsAllocatorUsedSegmentsInBytes()

Disassembly:
	0x01ECA118 ADRP X0, 0x222A000
	0x01ECA11C LDR X0, [X0 + 0x470]
	0x01ECA120 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+416]
	002 Move X1, X31
	003 Call Allocator.GetTotalSegmentsUsedInBytes, X0
	004 Return X0

Method: System.Int32 GetGeneralAllocatorUsedSegmentsInBytes()

Disassembly:
	0x01ECA124 MOVZ W8, 0x1
	0x01ECA128 STRB W8, [X22 + 0x3BC]
	0x01ECA12C STR X31, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+408]
	002 Move X1, X31
	003 Call Allocator.GetTotalSegmentsUsedInBytes, X0
	004 Return X0

Method: System.Int32 GetObjectsAllocatorFreeSegmentsInBytes()

Disassembly:
	0x01ECA130 LDR X0, [X19 + 0xB8]
	0x01ECA134 CBZ X0, 0x1ECA2C4
	0x01ECA138 ADRP X23, 0x222E000

ISIL:
	001 Move X0, [X0+416]
	002 Move X1, X31
	003 Call Allocator.GetFreeSegmentsInBytes, X0
	004 Return X0

Method: System.Int32 GetGeneralAllocatorFreeSegmentsInBytes()

Disassembly:
	0x01ECA13C LDR X23, [X23 + 0x20]
	0x01ECA140 AND X21, X20, 0x0
	0x01ECA144 ADD X2, X31, 0x10

ISIL:
	001 Move X0, [X0+408]
	002 Move X1, X31
	003 Call Allocator.GetFreeSegmentsInBytes, X0
	004 Return X0

Method: System.Void GetMemorySnapshot(Fusion.Statistics.MemoryStatisticsSnapshot/TargetAllocator targetAllocator, ref Fusion.Statistics.MemoryStatisticsSnapshot snapshot)

Disassembly:
	0x01ECA148 MOV X1, X21
	0x01ECA14C LDR X3, [X23]
	0x01ECA150 BL 0x2AE89D0
	0x01ECA154 TBZ X0, 0x0, 0x1ECA1C8
	0x01ECA158 LDR X0, [X31 + 0x10]
	0x01ECA15C CBZ X0, 0x1ECA2C4
	0x01ECA160 MOV X1, X31
	0x01ECA164 BL 0x1ED810C
	0x01ECA168 ADRP X8, 0x222A000

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, 416
	003 Move W9, 408
	004 NotImplemented "Instruction CSEL not yet implemented."
	005 Move X0, [X0]
	006 Move X1, X2
	007 Move X3, X31
	008 Move X2, X0
	009 Call Allocator.GetMemorySnapshot, X0, X1, X2
	010 Return 

Method: System.Void SnapshotRelease(Fusion.NetworkObjectHeaderSnapshot snapshot)

Disassembly:
	0x01ECA16C LDR X8, [X8 + 0x470]
	0x01ECA170 MOV W1, W0
	0x01ECA174 ADD X0, X31, 0x18
	0x01ECA178 STR X31, [X31 + 0x18]
	0x01ECA17C LDR X2, [X8]
	0x01ECA180 BL 0x24341FC
	0x01ECA184 LDR X8, [X31 + 0x18]
	0x01ECA188 B 0x1ECA1CC
	0x01ECA18C MOV X0, X8
	0x01ECA190 BL 0x1C16DFC
	0x01ECA194 TBNZ X21, 0x0, 0x1ECA0FC
	0x01ECA198 CMP W20, 0x0
	0x01ECA19C B.LE 0x1ECA1A8
	0x01ECA1A0 MOVZ W0, 0x2
	0x01ECA1A4 B 0x1ECA2B0
	0x01ECA1A8 LDR X0, [X22]
	0x01ECA1AC LDR W8, [X0 + 0xE0]
	0x01ECA1B0 CBNZ W8, 0x1ECA1B8
	0x01ECA1B4 BL 0x1C16DFC
	0x01ECA1B8 CMP W20, 0x0
	0x01ECA1BC CSET W8, EQ
	0x01ECA1C0 UBFM W0, W8, 0x1F, 0x1E
	0x01ECA1C4 B 0x1ECA2B0
	0x01ECA1C8 MOV X8, X31
	0x01ECA1CC ANDS W31, W8, 0xFF
	0x01ECA1D0 STR X8, [X31]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2510000
	006 Move W8, [X21+1181]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2236000
	014 Move X0, [X0+3296]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1181], W8
	018 Compare X19, 0
	019 JumpIfEqual {36}
	020 Move X0, X19
	021 Move X1, X31
	022 Call NetworkObjectHeaderSnapshot.Release, X0
	023 Move X0, [X20+320]
	024 Compare X0, 0
	025 JumpIfEqual {36}
	026 Move X8, 0x2236000
	027 Move X8, [X8+3296]
	028 Move X1, X19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X2, [X8]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Call Stack`1<Object>.Push, X0, X1
	035 Return 
	036 Call 0x1C17F20

Method: System.Void SnapshotRelease(ref Fusion.NetworkObjectHeaderSnapshot snapshot)

Disassembly:
	0x01ECA1D4 B.EQ 0x1ECA2AC
	0x01ECA1D8 LDRB W8, [X22 + 0x3BC]
	0x01ECA1DC LDR X20, [X19 + 0x130]
	0x01ECA1E0 CBNZ W8, 0x1ECA204
	0x01ECA1E4 ADRP X0, 0x222E000
	0x01ECA1E8 LDR X0, [X0 + 0x20]

ISIL:
	001 Move X8, X1
	002 Move X1, [X1]
	003 Compare X1, 0
	004 JumpIfEqual {8}
	005 Move [X8], X31
	006 Call Simulation.SnapshotRelease, X0, X1
	007 Return 
	008 Return 

Method: System.Boolean IsSimulated(Fusion.NetworkId id)

Disassembly:
	0x01ECA1EC BL 0x1C16CF4
	0x01ECA1F0 ADRP X0, 0x222A000
	0x01ECA1F4 LDR X0, [X0 + 0x470]
	0x01ECA1F8 BL 0x1C16CF4
	0x01ECA1FC MOVZ W8, 0x1
	0x01ECA200 STRB W8, [X22 + 0x3BC]
	0x01ECA204 STR X31, [X31 + 0x10]
	0x01ECA208 LDR X0, [X19 + 0xB8]
	0x01ECA20C CBZ X0, 0x1ECA2C4
	0x01ECA210 LDR X3, [X23]
	0x01ECA214 ADD X2, X31, 0x10
	0x01ECA218 MOV X1, X21
	0x01ECA21C BL 0x2AE89D0
	0x01ECA220 TBZ X0, 0x0, 0x1ECA258
	0x01ECA224 LDR X0, [X31 + 0x10]
	0x01ECA228 CBZ X0, 0x1ECA2C4
	0x01ECA22C MOV X1, X31
	0x01ECA230 BL 0x1ED810C
	0x01ECA234 ADRP X8, 0x222A000
	0x01ECA238 LDR X8, [X8 + 0x470]
	0x01ECA23C MOV W1, W0
	0x01ECA240 ADD X0, X31, 0x18
	0x01ECA244 STR X31, [X31 + 0x18]
	0x01ECA248 LDR X2, [X8]
	0x01ECA24C BL 0x24341FC
	0x01ECA250 LDR X8, [X31 + 0x18]
	0x01ECA254 B 0x1ECA25C
	0x01ECA258 MOV X8, X31
	0x01ECA25C ADRP X9, 0x222C000
	0x01ECA260 LDR X9, [X9 + 0xF00]
	0x01ECA264 ADD X0, X31, 0x0
	0x01ECA268 STR X8, [X31]
	0x01ECA26C LDR X1, [X9]
	0x01ECA270 BL 0x2434214
	0x01ECA274 MOV W1, W0
	0x01ECA278 ADD X2, X31, 0x8
	0x01ECA27C MOV X0, X20
	0x01ECA280 MOV X3, X31
	0x01ECA284 BL 0x1EFF144
	0x01ECA288 TBZ X0, 0x0, 0x1ECA2AC
	0x01ECA28C LDR X0, [X31 + 0x8]
	0x01ECA290 MOV X1, X31
	0x01ECA294 BL 0x1EFBDE4
	0x01ECA298 TBZ X0, 0x0, 0x1ECA2AC
	0x01ECA29C LDR X8, [X31 + 0x8]
	0x01ECA2A0 LDR W8, [X8 + 0x40]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2510000
	007 Move W8, [X21+1182]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x222A000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1182], W8
	019 And X1, X20, 0
	020 Add X2, X31, 8
	021 Move X0, X19
	022 Move [X31+8], X31
	023 Call Simulation.TryGetMeta, X0, X1, X2
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {54}
	028 Move X8, [X31+8]
	029 Compare X8, 0
	030 JumpIfEqual {62}
	031 Move X9, 0x222A000
	032 Move X9, [X9+1432]
	033 Move X19, [X8+184]
	034 Move X0, [X9]
	035 Move W9, [X0+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X19
	040 Move X1, X31
	041 Call Object.op_Implicit, X0
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {54}
	046 Move X8, [X31+8]
	047 Compare X8, 0
	048 JumpIfEqual {62}
	049 Move X0, [X8+184]
	050 Compare X0, 0
	051 JumpIfEqual {62}
	052 Move X1, X31
	053 Call NetworkObject.get_IsInSimulation, X0
	054 Move W0, W31
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X30, [X31+16]
	058 Move X21, [X31+24]
	059 And W0, W0, 1
	060 Add X31, X31, 48
	061 Return X0
	062 Call 0x1C17F20

Method: System.Boolean IsSimulated(Fusion.NetworkObject obj)

Disassembly:
	0x01ECA2A4 CMP W8, 0x3
	0x01ECA2A8 B.EQ 0x1ECA1A0
	0x01ECA2AC MOV W0, W31
	0x01ECA2B0 LDP X20, X19, [X31 + 0x40]
	0x01ECA2B4 LDP X22, X21, [X31 + 0x30]
	0x01ECA2B8 LDP X30, X23, [X31 + 0x20]
	0x01ECA2BC ADD X31, X31, 0x50
	0x01ECA2C0 RET
	0x01ECA2C4 BL 0x1C16F20
	0x01ECA2C8 SUB X31, X31, 0x90
	0x01ECA2CC STP X30, X25, [X31 + 0x50]
	0x01ECA2D0 STP X24, X23, [X31 + 0x60]
	0x01ECA2D4 STP X22, X21, [X31 + 0x70]
	0x01ECA2D8 STP X20, X19, [X31 + 0x80]
	0x01ECA2DC ADRP X21, 0x250F000
	0x01ECA2E0 LDRB W8, [X21 + 0x4AF]
	0x01ECA2E4 MOV X19, X1
	0x01ECA2E8 MOV X20, X0
	0x01ECA2EC TBNZ X8, 0x0, 0x1ECA31C
	0x01ECA2F0 ADRP X0, 0x222C000
	0x01ECA2F4 LDR X0, [X0 + 0xEF8]
	0x01ECA2F8 BL 0x1C16CF4
	0x01ECA2FC ADRP X0, 0x222C000
	0x01ECA300 LDR X0, [X0 + 0xF00]
	0x01ECA304 BL 0x1C16CF4
	0x01ECA308 ADRP X0, 0x222C000
	0x01ECA30C LDR X0, [X0 + 0xE40]
	0x01ECA310 BL 0x1C16CF4
	0x01ECA314 MOVZ W8, 0x1
	0x01ECA318 STRB W8, [X21 + 0x4AF]
	0x01ECA31C STR W31, [X31 + 0x3C]
	0x01ECA320 STP X31, X31, [X31 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2510000
	006 Move X21, 0x222A000
	007 Move W8, [X20+1183]
	008 Move X21, [X21+1432]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x222A000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1183], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X1, X31
	026 Call Object.op_Implicit, X0
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {41}
	031 Compare X19, 0
	032 JumpIfEqual {47}
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Call NetworkObject.get_IsInSimulation, X0
	040 Return X0
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move W0, W31
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return X0
	047 Call 0x1C17F20

Method: System.Boolean IsSimulated(Fusion.NetworkObjectMeta meta)

Disassembly:
	0x01ECA324 STR W31, [X31 + 0x24]
	0x01ECA328 STP X31, X31, [X31 + 0x10]
	0x01ECA32C STR W31, [X31 + 0xC]
	0x01ECA330 LDRB W8, [X19 + 0x14]
	0x01ECA334 MOVZ W9, 0x45
	0x01ECA338 MOV X21, X31
	0x01ECA33C ANDS W31, W8, W9, 0x0
	0x01ECA340 B.NE 0x1ECA348
	0x01ECA344 LDR W21, [X19 + 0x1C]
	0x01ECA348 LDR W8, [X20 + 0x48]
	0x01ECA34C STR W8, [X19]
	0x01ECA350 MOV X0, X20
	0x01ECA354 BL 0x1EC0864
	0x01ECA358 TBZ X0, 0x0, 0x1ECA3D8
	0x01ECA35C ADRP X8, 0x222C000
	0x01ECA360 LDR X8, [X8 + 0xE40]
	0x01ECA364 LDR X0, [X8]
	0x01ECA368 LDR W8, [X0 + 0xE0]
	0x01ECA36C CBNZ W8, 0x1ECA374
	0x01ECA370 BL 0x1C16DFC
	0x01ECA374 MOV X0, X31
	0x01ECA378 BL 0x1E8D7EC
	0x01ECA37C LDR X0, [X20 + 0x130]
	0x01ECA380 MOV W1, W31
	0x01ECA384 MOV X2, X31
	0x01ECA388 BL 0x1EFF12C
	0x01ECA38C MOV X22, X0
	0x01ECA390 MOV X1, X31
	0x01ECA394 BL 0x1EFBDE4
	0x01ECA398 TBZ X0, 0x0, 0x1ECA658
	0x01ECA39C LDR W8, [X22 + 0x40]
	0x01ECA3A0 CMP W8, 0x3
	0x01ECA3A4 B.NE 0x1ECA658
	0x01ECA3A8 ADD X3, X31, 0x3C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2510000
	005 Move W8, [X20+1184]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x222A000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1184], W8
	016 Compare X19, 0
	017 JumpIfEqual {42}
	018 Move X8, 0x222A000
	019 Move X8, [X8+1432]
	020 Move X20, [X19+184]
	021 Move X0, [X8]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X31
	028 Call Object.op_Implicit, X0
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {42}
	033 Move X0, [X19+184]
	034 Compare X0, 0
	035 JumpIfEqual {47}
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X1, X31
	039 Move X30, [X31+32]
	040 Call NetworkObject.get_IsInSimulation, X0
	041 Return X0
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move W0, W31
	045 Move X30, [X31+32]
	046 Return X0
	047 Call 0x1C17F20

Method: System.Boolean HasObject(Fusion.NetworkId id)

Disassembly:
	0x01ECA3AC MOV X0, X20
	0x01ECA3B0 MOV X1, X22
	0x01ECA3B4 MOV X2, X21
	0x01ECA3B8 BL 0x1ECA850
	0x01ECA3BC TBZ X0, 0x0, 0x1ECA6DC
	0x01ECA3C0 MOV X0, X20
	0x01ECA3C4 MOV X1, X19
	0x01ECA3C8 MOV X2, X22
	0x01ECA3CC BL 0x1ECAA20
	0x01ECA3D0 MOVZ W22, 0x101
	0x01ECA3D4 B 0x1ECA6B4
	0x01ECA3D8 LDRB W8, [X19 + 0x14]
	0x01ECA3DC ANDS W31, W8, 0x30
	0x01ECA3E0 B.EQ 0x1ECA474
	0x01ECA3E4 LDR W22, [X19 + 0x18]
	0x01ECA3E8 STR W31, [X19 + 0x18]
	0x01ECA3EC ADRP X24, 0x250F000
	0x01ECA3F0 LDRB W8, [X24 + 0x3BC]
	0x01ECA3F4 CBNZ W8, 0x1ECA418
	0x01ECA3F8 ADRP X0, 0x222E000
	0x01ECA3FC LDR X0, [X0 + 0x20]
	0x01ECA400 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2510000
	006 Move W8, [X21+1185]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2236000
	014 Move X0, [X0+3304]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1185], W8
	018 Move X0, [X20+336]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x2236000
	022 Move X8, [X8+3304]
	023 And X1, X19, 0
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Dictionary`2<NetworkId, Object>.ContainsKey, X0, X1
	030 Return X0
	031 Call 0x1C17F20

Method: System.Void LogAllObjectIds()

Disassembly:
	0x01ECA404 ADRP X0, 0x222A000

ISIL:
	001 Return 

Method: System.Boolean TryGetMeta(Fusion.NetworkId id, out Fusion.NetworkObjectMeta meta)

Disassembly:
	0x01EC1278 LDR X0, [X27]
	0x01EC127C BL 0x1C16F10
	0x01EC1280 MOV X1, X19
	0x01EC1284 MOV X2, X31
	0x01EC1288 MOV X21, X0
	0x01EC128C BL 0x1ECF44C
	0x01EC1290 STR X21, [X19 + 0x108]
	0x01EC1294 LDR X0, [X26]
	0x01EC1298 BL 0x1C16F10
	0x01EC129C MOV X1, X19
	0x01EC12A0 MOV X2, X31
	0x01EC12A4 MOV X21, X0
	0x01EC12A8 BL 0x1ECF3BC
	0x01EC12AC STR X21, [X19 + 0x110]
	0x01EC12B0 LDR X21, [X28 + 0x20]
	0x01EC12B4 ADD X0, X31, 0x28
	0x01EC12B8 MOVZ W2, 0x50
	0x01EC12BC MOV X1, X28
	0x01EC12C0 BL 0x3EB1AC0
	0x01EC12C4 LDUR V0, [X31 + 0x30]
	0x01EC12C8 LDR X8, [X31 + 0x40]
	0x01EC12CC ADD X2, X31, 0x10
	0x01EC12D0 MOV X0, X19
	0x01EC12D4 MOV X1, X21
	0x01EC12D8 STR V0, [X31 + 0x1]
	0x01EC12DC STR X8, [X31 + 0x20]
	0x01EC12E0 BL 0x1EC139C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2519000
	007 Move W8, [X22+1186]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x223F000
	016 Move X0, [X0+2336]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1186], W8
	020 Move [X19], X31
	021 Move X0, [X21+336]
	022 Compare X0, 0
	023 JumpIfEqual {36}
	024 Move X8, 0x223F000
	025 Move X8, [X8+2336]
	026 And X1, X20, 0
	027 Move X2, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X3, [X8]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Call Dictionary`2<NetworkId, Object>.TryGetValue, X0, X1, X2
	035 Return X0
	036 Call 0x1C17F20

Method: Fusion.NetworkObjectMeta GetMeta(Fusion.NetworkId id)

Disassembly:
	0x01ECA408 LDR X0, [X0 + 0x470]
	0x01ECA40C BL 0x1C16CF4
	0x01ECA410 MOVZ W8, 0x1
	0x01ECA414 STRB W8, [X24 + 0x3BC]
	0x01ECA418 STR X31, [X31 + 0x40]
	0x01ECA41C LDR X0, [X20 + 0xB8]
	0x01ECA420 CBZ X0, 0x1ECA708
	0x01ECA424 ADRP X25, 0x222E000
	0x01ECA428 LDR X25, [X25 + 0x20]
	0x01ECA42C LDR X3, [X25]
	0x01ECA430 ADD X2, X31, 0x40
	0x01ECA434 MOV X1, X22
	0x01ECA438 BL 0x2AE89D0
	0x01ECA43C TBZ X0, 0x0, 0x1ECA548
	0x01ECA440 LDR X0, [X31 + 0x40]
	0x01ECA444 CBZ X0, 0x1ECA710
	0x01ECA448 MOV X1, X31
	0x01ECA44C BL 0x1ED810C
	0x01ECA450 MOV W1, W0
	0x01ECA454 ADRP X8, 0x222A000
	0x01ECA458 LDR X8, [X8 + 0x470]
	0x01ECA45C STR X31, [X31 + 0x48]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2510000
	006 Move W8, [X21+1187]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2236000
	014 Move X0, [X0+3312]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1187], W8
	018 Move X0, [X20+336]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x2236000
	022 Move X8, [X8+3312]
	023 And X1, X19, 0
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Dictionary`2<NetworkId, Object>.get_Item, X0, X1
	030 Return X0
	031 Call 0x1C17F20

Method: Fusion.NetworkObjectHeader* GetObject(Fusion.NetworkId id)

Disassembly:
	0x01ECA460 LDR X2, [X8]
	0x01ECA464 ADD X0, X31, 0x48
	0x01ECA468 BL 0x24341FC
	0x01ECA46C LDR X8, [X31 + 0x48]
	0x01ECA470 B 0x1ECA54C
	0x01ECA474 LDR X0, [X20 + 0x130]
	0x01ECA478 MOV X1, X31
	0x01ECA47C BL 0x1EFF18C
	0x01ECA480 MOV W23, W31
	0x01ECA484 MOV W22, W31
	0x01ECA488 STP X0, X1, [X31 + 0x10]
	0x01ECA48C ADD X0, X31, 0x10
	0x01ECA490 MOV X1, X31
	0x01ECA494 BL 0x1EFD1D8
	0x01ECA498 TBZ X0, 0x0, 0x1ECA528
	0x01ECA49C ADD X0, X31, 0x10
	0x01ECA4A0 MOV X1, X31
	0x01ECA4A4 BL 0x1EFD150
	0x01ECA4A8 LDR W8, [X0 + 0x40]
	0x01ECA4AC CMP W8, 0x3
	0x01ECA4B0 B.NE 0x1ECA48C
	0x01ECA4B4 ADD X0, X31, 0x10
	0x01ECA4B8 MOV X1, X31
	0x01ECA4BC BL 0x1EFD150
	0x01ECA4C0 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2510000
	006 Move W8, [X21+1188]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2236000
	014 Move X0, [X0+3312]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1188], W8
	018 Move X0, [X20+336]
	019 Compare X0, 0
	020 JumpIfEqual {34}
	021 Move X8, 0x2236000
	022 Move X8, [X8+3312]
	023 And X1, X19, 0
	024 Move X2, [X8]
	025 Call Dictionary`2<NetworkId, Object>.get_Item, X0, X1
	026 Compare X0, 0
	027 JumpIfEqual {34}
	028 Move X0, [X0+176]
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0
	034 Call 0x1C17F20

Method: Fusion.NetworkId GetNextId()

Disassembly:
	0x01EC5400 LDR X0, [X0 + 0x598]
	0x01EC5404 BL 0x1C16CF4
	0x01EC5408 MOVZ W8, 0x1
	0x01EC540C STRB W8, [X21 + 0x47B]
	0x01EC5410 MOVI V0.2D, 0x0
	0x01EC5414 STR X31, [X31 + 0x50]
	0x01EC5418 STR X31, [X31 + 0x28]
	0x01EC541C STP V0, V0, [X31 + 0x30]
	0x01EC5420 LDR X8, [X20]
	0x01EC5424 MOV X0, X20
	0x01EC5428 LDR X9, [X8 + 0x268]
	0x01EC542C LDR X1, [X8 + 0x270]
	0x01EC5430 BLR X9
	0x01EC5434 ADRP X22, 0x2513000
	0x01EC5438 LDRB W8, [X22 + 0xB73]
	0x01EC543C MOV X21, X0
	0x01EC5440 CBNZ W8, 0x1EC5458
	0x01EC5444 ADRP X0, 0x2233000
	0x01EC5448 LDR X0, [X0 + 0x20]
	0x01EC544C BL 0x1C16CF4
	0x01EC5450 MOVZ W8, 0x1
	0x01EC5454 STRB W8, [X22 + 0xB73]
	0x01EC5458 STR X31, [X31]
	0x01EC545C LDR X0, [X20 + 0xB8]
	0x01EC5460 CBZ X0, 0x1EC5714
	0x01EC5464 ADRP X8, 0x2233000
	0x01EC5468 LDR X8, [X8 + 0x20]
	0x01EC546C AND X1, X21, 0x0
	0x01EC5470 ADD X2, X31, 0x0
	0x01EC5474 LDR X3, [X8]
	0x01EC5478 BL 0x2AE89D0
	0x01EC547C LDR X8, [X31]
	0x01EC5480 LDR X9, [X20 + 0x150]
	0x01EC5484 ANDS W31, W0, 0x1
	0x01EC5488 CSEL X21, X8, X31, NE
	0x01EC548C CBZ X9, 0x1EC5714
	0x01EC5490 ADRP X8, 0x2239000
	0x01EC5494 LDR X8, [X8 + 0xA40]
	0x01EC5498 ADRP X26, 0x2239000
	0x01EC549C ADRP X27, 0x2231000
	0x01EC54A0 LDR X26, [X26 + 0xA50]
	0x01EC54A4 LDR X27, [X27 + 0x398]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2515000
	005 Move W8, [X20+1189]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x223A000
	012 Move X0, [X0+2016]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1189], W8
	016 Move W8, [X19+328]
	017 Move X0, X19
	018 Add W20, W8, 1
	019 Move [X19+328], W20
	020 Call Simulation.get_IsClient, X0
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {42}
	025 Move X9, 0x223A000
	026 Move X9, [X9+2016]
	027 Move X8, [X19]
	028 Move X1, [X9]
	029 Move W10, [X8+304]
	030 Move W9, [X1+304]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X8, [X8+200]
	033 Add X8, X8, X9
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, [X19+424]
	037 Compare X8, 0
	038 JumpIfEqual {49}
	039 Move W8, [X8+312]
	040 And W20, W20, 0x7FFFF
	041 NotImplemented "Instruction BFM not yet implemented."
	042 Move W0, W20
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Return X0
	047 Move X0, X19
	048 Call 0x1C181E0
	049 Call 0x1C17F20

Method: Fusion.NetworkObjectHeaderSnapshotRef GetLatestSnapshot(Fusion.NetworkId id)

Disassembly:
	0x01ECA4C4 LDR X8, [X20]
	0x01ECA4C8 LDR X9, [X8 + 0x2B8]
	0x01ECA4CC LDR X2, [X8 + 0x2C0]
	0x01ECA4D0 MOV X0, X20
	0x01ECA4D4 BLR X9
	0x01ECA4D8 ADD X0, X31, 0x10
	0x01ECA4DC MOV X1, X31
	0x01ECA4E0 BL 0x1EFD150
	0x01ECA4E4 MOV X1, X0
	0x01ECA4E8 ADD X3, X31, 0xC
	0x01ECA4EC MOV X0, X20
	0x01ECA4F0 MOV X2, X21
	0x01ECA4F4 BL 0x1ECA850
	0x01ECA4F8 MOVZ W22, 0x1
	0x01ECA4FC TBZ X0, 0x0, 0x1ECA48C
	0x01ECA500 ADD X0, X31, 0x10
	0x01ECA504 MOV X1, X31
	0x01ECA508 BL 0x1EFD150
	0x01ECA50C MOV X2, X0
	0x01ECA510 MOV X0, X20
	0x01ECA514 MOV X1, X19
	0x01ECA518 BL 0x1ECAA20

ISIL:
	001 Move [X31-16], X30
	002 And X1, X1, 0
	003 Add X2, X31, 8
	004 Move [X31+8], X31
	005 Call Simulation.TryGetMeta, X0, X1, X2
	006 Move W8, W0
	007 Move X0, X31
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {28}
	012 Move X0, [X31+8]
	013 Compare X0, 0
	014 JumpIfEqual {30}
	015 Move X1, X31
	016 Call NetworkObjectMeta.get_HasSnapshots, X0
	017 Move W8, W0
	018 Move X0, X31
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {28}
	023 Move X0, [X31+8]
	024 Compare X0, 0
	025 JumpIfEqual {30}
	026 Move X1, X31
	027 Call NetworkObjectMeta.get_SnapshotLatest, X0
	028 Move X30, [X31+16]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Boolean TryGetObject(Fusion.NetworkId id, out Fusion.NetworkObjectHeader* header)

Disassembly:
	0x01EC5C70 LDR X1, [X8 + 0x330]
	0x01EC5C74 BLR X9
	0x01EC5C78 MOV X0, X31
	0x01EC5C7C BL 0x1E32194
	0x01EC5C80 MOV X0, X19
	0x01EC5C84 MOV W1, W31
	0x01EC5C88 MOV W2, W20
	0x01EC5C8C BL 0x1EC504C
	0x01EC5C90 MOV W21, W31
	0x01EC5C94 MOV X0, X19
	0x01EC5C98 BL 0x1EBDF30
	0x01EC5C9C ADD W8, W20, W21
	0x01EC5CA0 CMP W8, 0x1
	0x01EC5CA4 CSET W2, EQ
	0x01EC5CA8 CMP W21, 0x0
	0x01EC5CAC CSET W3, EQ
	0x01EC5CB0 AND W4, W0, 0x1
	0x01EC5CB4 MOVZ W1, 0x2
	0x01EC5CB8 MOV X0, X19
	0x01EC5CBC BL 0x1EC19A4
	0x01EC5CC0 SUB W21, W21, 0x1
	0x01EC5CC4 ADDS W31, W20, W21
	0x01EC5CC8 B.NE 0x1EC5C94
	0x01EC5CCC MOV X0, X19
	0x01EC5CD0 MOV W1, W31
	0x01EC5CD4 MOV W2, W20
	0x01EC5CD8 BL 0x1EC51D8
	0x01EC5CDC MOV X0, X19
	0x01EC5CE0 BL 0x1EC4ED8
	0x01EC5CE4 ADRP X8, 0x223A000
	0x01EC5CE8 LDR X8, [X8 + 0xC18]
	0x01EC5CEC MOV X1, X31
	0x01EC5CF0 LDR X0, [X8]
	0x01EC5CF4 BL 0x1E32108
	0x01EC5CF8 LDR X8, [X19]
	0x01EC5CFC MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2515000
	007 Move W8, [X22+1190]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x223B000
	016 Move X0, [X0+2336]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1190], W8
	020 Move [X31+8], X31
	021 Move X0, [X21+336]
	022 Compare X0, 0
	023 JumpIfEqual {47}
	024 Move X8, 0x223B000
	025 Move X8, [X8+2336]
	026 And X1, X20, 0
	027 Add X2, X31, 8
	028 Move X3, [X8]
	029 Call Dictionary`2<NetworkId, Object>.TryGetValue, X0, X1, X2
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {39}
	034 Move X8, [X31+8]
	035 Compare X8, 0
	036 JumpIfEqual {47}
	037 Move X8, [X8+176]
	038 Move [X19], X8
	039 Move [X19], X31
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 And W0, W0, 1
	045 Move X30, [X31+48]
	046 Return X0
	047 Call 0x1C17F20

Method: System.Boolean TryGetHeader(Fusion.NetworkId id, out Fusion.NetworkObjectHeader* header)

Disassembly:
	0x01ECA51C ADD W23, W23, 0x1
	0x01ECA520 MOVZ W22, 0x1
	0x01ECA524 B 0x1ECA48C
	0x01ECA528 MOV X21, X31
	0x01ECA52C TBZ X22, 0x0, 0x1ECA6D0
	0x01ECA530 CMP W23, 0x0
	0x01ECA534 MOVZ W8, 0x503
	0x01ECA538 MOVZ W9, 0xE08
	0x01ECA53C CSEL W22, W9, W8, EQ
	0x01ECA540 CBNZ W23, 0x1ECA6B0
	0x01ECA544 B 0x1ECA660
	0x01ECA548 MOV X8, X31
	0x01ECA54C ANDS W31, W8, 0xFF
	0x01ECA550 STR X8, [X31 + 0x28]
	0x01ECA554 B.EQ 0x1ECA658
	0x01ECA558 LDRB W8, [X24 + 0x3BC]
	0x01ECA55C LDR X23, [X20 + 0x130]
	0x01ECA560 CBNZ W8, 0x1ECA584
	0x01ECA564 ADRP X0, 0x222E000
	0x01ECA568 LDR X0, [X0 + 0x20]
	0x01ECA56C BL 0x1C16CF4
	0x01ECA570 ADRP X0, 0x222A000
	0x01ECA574 LDR X0, [X0 + 0x470]
	0x01ECA578 BL 0x1C16CF4
	0x01ECA57C MOVZ W8, 0x1
	0x01ECA580 STRB W8, [X24 + 0x3BC]
	0x01ECA584 STR X31, [X31 + 0x40]
	0x01ECA588 LDR X0, [X20 + 0xB8]
	0x01ECA58C CBZ X0, 0x1ECA70C
	0x01ECA590 LDR X3, [X25]
	0x01ECA594 ADD X2, X31, 0x40
	0x01ECA598 MOV X1, X22
	0x01ECA59C BL 0x2AE89D0
	0x01ECA5A0 TBZ X0, 0x0, 0x1ECA5D8
	0x01ECA5A4 LDR X0, [X31 + 0x40]
	0x01ECA5A8 CBZ X0, 0x1ECA714

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2510000
	007 Move W8, [X22+1191]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2236000
	016 Move X0, [X0+2336]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1191], W8
	020 Move [X31+8], X31
	021 Move X0, [X21+336]
	022 Compare X0, 0
	023 JumpIfEqual {47}
	024 Move X8, 0x2236000
	025 Move X8, [X8+2336]
	026 And X1, X20, 0
	027 Add X2, X31, 8
	028 Move X3, [X8]
	029 Call Dictionary`2<NetworkId, Object>.TryGetValue, X0, X1, X2
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {39}
	034 Move X8, [X31+8]
	035 Compare X8, 0
	036 JumpIfEqual {47}
	037 Move X8, [X8+176]
	038 Move [X19], X8
	039 Move [X19], X31
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 And W0, W0, 1
	045 Move X30, [X31+48]
	046 Return X0
	047 Call 0x1C17F20

Method: System.Boolean TryGetStructData(Fusion.NetworkId id, out T* value)

Disassembly:
	0x022561B8 LDR X3, [X8 + 0x20]
	0x022561BC LDP X20, X19, [X31 + 0x20]
	0x022561C0 LDP X22, X21, [X31 + 0x10]
	0x022561C4 LDR X30, [X31], #0x30
	0x022561C8 B 0x2256C2C
	0x022561CC BL 0x1C16F20
	0x022561D0 STR X29, [X31 - 0x60]!
	0x022561D4 STP X30, X27, [X31 + 0x10]
	0x022561D8 STP X26, X25, [X31 + 0x20]
	0x022561DC STP X24, X23, [X31 + 0x30]
	0x022561E0 STP X22, X21, [X31 + 0x40]
	0x022561E4 STP X20, X19, [X31 + 0x50]
	0x022561E8 SUB X31, X31, 0x1E0
	0x022561EC LDR X8, [X3 + 0x38]
	0x022561F0 MOV X19, X3
	0x022561F4 MOV W20, W2
	0x022561F8 MOV X21, X1

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, X2
	005 And X1, X1, 0
	006 Add X2, X31, 8
	007 Move X3, X31
	008 Move [X31+8], X31
	009 Call Simulation.TryGetStructData, X0, X1, X2
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {16}
	014 Move X8, [X31+8]
	015 Move [X19], X8
	016 Move [X19], X31
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 And W0, W0, 1
	020 Add X31, X31, 32
	021 Return X0

Method: System.Boolean TryGetStructData(Fusion.NetworkId id, Fusion.NetworkObjectTypeId typeId, out T* value)

Disassembly:
	0x0225630C LDRSW X9, [X10]
	0x02256310 ADD X8, X8, X9, 0x4, LSL
	0x02256314 ADD X0, X8, 0x138
	0x02256318 LDP X9, X2, [X0]
	0x0225631C ADD X8, X31, 0x1B0
	0x02256320 MOV X0, X22
	0x02256324 MOV W1, W23
	0x02256328 BLR X9
	0x0225632C LDP V0, V1, [X31 + 0x1B0]
	0x02256330 LDUR V2, [X25 + 0x4C]
	0x02256334 STP V0, V1, [X31 + 0xC0]
	0x02256338 STUR V2, [X26 + 0x4C]
	0x0225633C CBZ X21, 0x22566A8
	0x02256340 LDR X8, [X19 + 0x38]
	0x02256344 LDR X1, [X8]
	0x02256348 LDRB W8, [X1 + 0x135]
	0x0225634C TBNZ X8, 0x0, 0x225635C
	0x02256350 MOV X0, X1
	0x02256354 BL 0x1C5C684
	0x02256358 MOV X1, X0
	0x0225635C LDP V0, V1, [X31 + 0xF0]
	0x02256360 LDUR V2, [X26 + 0x7C]
	0x02256364 LDP V3, V4, [X31 + 0xC0]
	0x02256368 LDUR V5, [X26 + 0x4C]
	0x0225636C STP V0, V1, [X31 + 0x90]
	0x02256370 STUR V2, [X26 + 0x1C]
	0x02256374 STP V3, V4, [X31 + 0x60]
	0x02256378 STUR V5, [X31 + 0x7C]
	0x0225637C LDR X8, [X21]
	0x02256380 LDRH W9, [X8 + 0x12E]
	0x02256384 CBZ X9, 0x22563A8
	0x02256388 LDR X10, [X8 + 0xB0]
	0x0225638C ADD X10, X10, 0x8
	0x02256390 LDUR X11, [X10 - 0x8]
	0x02256394 CMP X11, X1
	0x02256398 B.EQ 0x22563B8
	0x0225639C SUBS X9, X9, 0x1
	0x022563A0 ADD X10, X10, 0x10
	0x022563A4 B.NE 0x2256390
	0x022563A8 MOV X0, X21
	0x022563AC MOV W2, W31
	0x022563B0 BL 0x1C5C788
	0x022563B4 B 0x22563C4
	0x022563B8 LDRSW X9, [X10]
	0x022563BC ADD X8, X8, X9, 0x4, LSL
	0x022563C0 ADD X0, X8, 0x138
	0x022563C4 LDP V0, V1, [X31 + 0x90]
	0x022563C8 LDUR V2, [X26 + 0x1C]
	0x022563CC LDP V3, V4, [X31 + 0x60]
	0x022563D0 LDUR V5, [X31 + 0x7C]
	0x022563D4 LDR X8, [X0]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x2184000
	009 Move W8, [X23+2174]
	010 Move X19, X3
	011 Move X20, X2
	012 Move X22, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x1EA9000
	019 Move X0, [X0+888]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+2174], W8
	023 And X1, X22, 0
	024 Add X2, X31, 8
	025 Move X0, X21
	026 Move X3, X31
	027 Move [X31+8], X31
	028 Call Simulation.TryGetStruct, X0, X1, X2
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {56}
	033 Move X8, [X31+8]
	034 Compare X8, 0
	035 JumpIfEqual {66}
	036 Move X9, 0x1EA9000
	037 Move X9, [X9+888]
	038 Move X21, [X8+8]
	039 Move X0, [X9]
	040 Move W9, [X0+224]
	041 Compare W9, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X8, X21
	046 ShiftRight X8, 32
	047 And X8, X8, 0x7FFFFFFF
	048 Move X9, X20
	049 ShiftRight X9, 32
	050 And X9, X9, 0x7FFFFFFF
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X8, [X31+8]
	053 Move W0, 1
	054 Add X8, X8, 80
	055 Move [X19], X8
	056 Move W0, W31
	057 Move [X19], X31
	058 Move X20, [X31+48]
	059 Move X19, [X31+56]
	060 Move X22, [X31+32]
	061 Move X21, [X31+40]
	062 Move X30, [X31+16]
	063 Move X23, [X31+24]
	064 Add X31, X31, 64
	065 Return X0
	066 Call 0x1C17F20

Method: System.Boolean TryGetStructData(Fusion.NetworkId id, out System.Int32* value)

Disassembly:
	0x01ECA5AC MOV X1, X31
	0x01ECA5B0 BL 0x1ED810C
	0x01ECA5B4 MOV W1, W0
	0x01ECA5B8 ADRP X8, 0x222A000
	0x01ECA5BC LDR X8, [X8 + 0x470]
	0x01ECA5C0 STR X31, [X31 + 0x48]
	0x01ECA5C4 LDR X2, [X8]
	0x01ECA5C8 ADD X0, X31, 0x48
	0x01ECA5CC BL 0x24341FC
	0x01ECA5D0 LDR X8, [X31 + 0x48]
	0x01ECA5D4 B 0x1ECA5DC
	0x01ECA5D8 MOV X8, X31
	0x01ECA5DC ADRP X9, 0x222C000
	0x01ECA5E0 LDR X9, [X9 + 0xF00]
	0x01ECA5E4 STR X8, [X31 + 0x28]
	0x01ECA5E8 LDR X1, [X9]
	0x01ECA5EC ADD X0, X31, 0x28

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, X2
	005 And X1, X1, 0
	006 Add X2, X31, 8
	007 Move [X31+8], X31
	008 Call Simulation.TryGetStruct, X0, X1, X2
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {16}
	013 Move X8, [X31+8]
	014 Add X8, X8, 80
	015 Move [X19], X8
	016 Move [X19], X31
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 And W0, W0, 1
	020 Add X31, X31, 32
	021 Return X0

Method: System.Boolean TryGetStructData(Fusion.NetworkId id, out System.Int32* value, out System.Int32 wordCount)

Disassembly:
	0x01ECA680 ADRP X9, 0x2235000
	0x01ECA684 LDR W8, [X19 + 0x10]
	0x01ECA688 LDR X9, [X9 + 0xD58]
	0x01ECA68C MOV X2, X31
	0x01ECA690 CMP W8, 0x0
	0x01ECA694 LDR X1, [X9]
	0x01ECA698 CSET W0, EQ
	0x01ECA69C BL 0x1E3BA60
	0x01ECA6A0 CBZ X20, 0x1ECA704
	0x01ECA6A4 MOV X0, X20
	0x01ECA6A8 MOV X1, X19
	0x01ECA6AC BL 0x1EC2858
	0x01ECA6B0 CBNZ X21, 0x1ECA6FC
	0x01ECA6B4 MOV W0, W22
	0x01ECA6B8 LDP X20, X19, [X31 + 0x80]
	0x01ECA6BC LDP X22, X21, [X31 + 0x70]
	0x01ECA6C0 LDP X24, X23, [X31 + 0x60]
	0x01ECA6C4 LDP X30, X25, [X31 + 0x50]
	0x01ECA6C8 ADD X31, X31, 0x90
	0x01ECA6CC RET
	0x01ECA6D0 MOVZ W22, 0x607
	0x01ECA6D4 CBNZ W23, 0x1ECA6B0
	0x01ECA6D8 B 0x1ECA660
	0x01ECA6DC LDR W0, [X31 + 0x3C]
	0x01ECA6E0 BL 0x1ECA9C4
	0x01ECA6E4 MOV X21, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X2
	005 And X1, X1, 0
	006 Add X2, X31, 8
	007 Move X19, X3
	008 Move [X31+8], X31
	009 Call Simulation.TryGetStruct, X0, X1, X2
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {23}
	014 Move X8, [X31+8]
	015 Add X9, X8, 80
	016 Move [X20], X9
	017 Compare X8, 0
	018 JumpIfEqual {31}
	019 NotImplemented "Instruction LDRSH not yet implemented."
	020 NotImplemented "Instruction LDRSH not yet implemented."
	021 Subtract W8, W9, W8
	022 Subtract W8, W8, 20
	023 Move W8, W31
	024 Move [X20], X31
	025 Move [X19], W8
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 And W0, W0, 1
	029 Move X30, [X31+32]
	030 Return X0
	031 Call 0x1C17F20

Method: System.Boolean TryGetStruct(Fusion.NetworkId id, out Fusion.NetworkObjectHeader* value)

Disassembly:
	0x01ECA5F0 BL 0x2434214
	0x01ECA5F4 MOV W1, W0
	0x01ECA5F8 ADD X2, X31, 0x30
	0x01ECA5FC MOV X0, X23
	0x01ECA600 MOV X3, X31
	0x01ECA604 BL 0x1EFF144
	0x01ECA608 TBZ X0, 0x0, 0x1ECA658
	0x01ECA60C LDR X0, [X31 + 0x30]
	0x01ECA610 MOV X1, X31
	0x01ECA614 BL 0x1EFBDE4
	0x01ECA618 TBZ X0, 0x0, 0x1ECA658
	0x01ECA61C LDR X1, [X31 + 0x30]
	0x01ECA620 LDR W8, [X1 + 0x40]
	0x01ECA624 CMP W8, 0x3
	0x01ECA628 B.NE 0x1ECA658
	0x01ECA62C ADD X3, X31, 0x24
	0x01ECA630 MOV X0, X20
	0x01ECA634 MOV X2, X21
	0x01ECA638 BL 0x1ECA850
	0x01ECA63C TBZ X0, 0x0, 0x1ECA6F0
	0x01ECA640 LDR X2, [X31 + 0x30]
	0x01ECA644 MOV X0, X20
	0x01ECA648 MOV X1, X19
	0x01ECA64C BL 0x1ECAA20
	0x01ECA650 MOVZ W22, 0x102
	0x01ECA654 B 0x1ECA6B4
	0x01ECA658 MOV X21, X31
	0x01ECA65C MOVZ W22, 0x206
	0x01ECA660 ADRP X23, 0x250F000
	0x01ECA664 LDRB W8, [X23 + 0x4BC]
	0x01ECA668 CBNZ W8, 0x1ECA680
	0x01ECA66C ADRP X0, 0x2235000
	0x01ECA670 LDR X0, [X0 + 0xD58]
	0x01ECA674 BL 0x1C16CF4
	0x01ECA678 MOVZ W8, 0x1
	0x01ECA67C STRB W8, [X23 + 0x4BC]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2510000
	007 Move W8, [X22+1192]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2236000
	016 Move X0, [X0+2336]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1192], W8
	020 Move [X31+8], X31
	021 Move X0, [X21+336]
	022 Compare X0, 0
	023 JumpIfEqual {47}
	024 Move X8, 0x2236000
	025 Move X8, [X8+2336]
	026 And X1, X20, 0
	027 Add X2, X31, 8
	028 Move X3, [X8]
	029 Call Dictionary`2<NetworkId, Object>.TryGetValue, X0, X1, X2
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {39}
	034 Move X8, [X31+8]
	035 Compare X8, 0
	036 JumpIfEqual {47}
	037 Move X8, [X8+176]
	038 Move [X19], X8
	039 Move [X19], X31
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 And W0, W0, 1
	045 Move X30, [X31+48]
	046 Return X0
	047 Call 0x1C17F20

Method: System.Boolean TryGetInstance(Fusion.NetworkId id, out Fusion.NetworkObject instance)

Disassembly:
	0x01ECA6E8 MOVZ W22, 0xA05
	0x01ECA6EC B 0x1ECA660
	0x01ECA6F0 LDR W0, [X31 + 0x24]
	0x01ECA6F4 BL 0x1ECA9C4
	0x01ECA6F8 B 0x1ECA6E4
	0x01ECA6FC MOV X0, X21
	0x01ECA700 BL 0x1C16F18
	0x01ECA704 BL 0x1C16F20
	0x01ECA708 BL 0x1C16F20
	0x01ECA70C BL 0x1C16F20
	0x01ECA710 BL 0x1C16F20
	0x01ECA714 BL 0x1C16F20
	0x01ECA718 B 0x1ECA77C
	0x01ECA71C B 0x1ECA76C
	0x01ECA720 B 0x1ECA76C
	0x01ECA724 B 0x1ECA76C
	0x01ECA728 B 0x1ECA76C
	0x01ECA72C B 0x1ECA76C
	0x01ECA730 B 0x1ECA76C
	0x01ECA734 B 0x1ECA76C
	0x01ECA738 B 0x1ECA77C
	0x01ECA73C B 0x1ECA77C
	0x01ECA740 B 0x1ECA77C
	0x01ECA744 B 0x1ECA77C
	0x01ECA748 B 0x1ECA76C
	0x01ECA74C B 0x1ECA76C
	0x01ECA750 B 0x1ECA76C
	0x01ECA754 B 0x1ECA76C
	0x01ECA758 B 0x1ECA76C
	0x01ECA75C B 0x1ECA76C
	0x01ECA760 B 0x1ECA76C
	0x01ECA764 B 0x1ECA76C
	0x01ECA768 B 0x1ECA76C
	0x01ECA76C MOV X21, X0
	0x01ECA770 STR W31, [X31 + 0x8]
	0x01ECA774 B 0x1ECA784
	0x01ECA778 B 0x1ECA77C
	0x01ECA77C MOV X21, X0
	0x01ECA780 STR W23, [X31 + 0x8]
	0x01ECA784 CMP W1, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2510000
	007 Move W8, [X22+1193]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2236000
	016 Move X0, [X0+2336]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1193], W8
	020 Move [X31+8], X31
	021 Move X0, [X21+336]
	022 Compare X0, 0
	023 JumpIfEqual {55}
	024 Move X8, 0x2236000
	025 Move X8, [X8+2336]
	026 And X1, X20, 0
	027 Add X2, X31, 8
	028 Move X3, [X8]
	029 Call Dictionary`2<NetworkId, Object>.TryGetValue, X0, X1, X2
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {46}
	034 Move X8, [X31+8]
	035 Compare X8, 0
	036 JumpIfEqual {55}
	037 Move X8, [X8+184]
	038 Compare X8, 0
	039 JumpIfEqual {46}
	040 Move W9, [X8+96]
	041 Move TEMP, X9
	042 And TEMP, TEMP, 2
	043 Compare TEMP, 2
	044 JumpIfEqual {46}
	045 Move W0, 1
	046 Move X8, X31
	047 Move W0, W31
	048 Move [X19], X8
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Return X0
	055 Call 0x1C17F20

Method: System.Boolean TryGetSceneInstance(Fusion.NetworkObjectTypeId sceneObjectTypeId, out Fusion.NetworkObject instance)

Disassembly:
	0x01ECA788 B.NE 0x1ECA7B0
	0x01ECA78C MOV X0, X21
	0x01ECA790 BL 0x3EB1AD0
	0x01ECA794 LDR X23, [X0]
	0x01ECA798 BL 0x3EB1AE0
	0x01ECA79C MOV X21, X23
	0x01ECA7A0 LDR W23, [X31 + 0x8]
	0x01ECA7A4 MOV W22, W31
	0x01ECA7A8 CBNZ W23, 0x1ECA6B0
	0x01ECA7AC B 0x1ECA660
	0x01ECA7B0 MOV X23, X31
	0x01ECA7B4 B 0x1ECA7BC
	0x01ECA7B8 MOV X21, X0
	0x01ECA7BC LDR W8, [X31 + 0x8]
	0x01ECA7C0 CBNZ W8, 0x1ECA818
	0x01ECA7C4 ADRP X22, 0x250F000
	0x01ECA7C8 LDRB W8, [X22 + 0x4BC]
	0x01ECA7CC CBNZ W8, 0x1ECA7E4
	0x01ECA7D0 ADRP X0, 0x2235000
	0x01ECA7D4 LDR X0, [X0 + 0xD58]
	0x01ECA7D8 BL 0x1C16CF4
	0x01ECA7DC MOVZ W8, 0x1
	0x01ECA7E0 STRB W8, [X22 + 0x4BC]
	0x01ECA7E4 ADRP X9, 0x2235000
	0x01ECA7E8 LDR W8, [X19 + 0x10]
	0x01ECA7EC LDR X9, [X9 + 0xD58]
	0x01ECA7F0 CMP W8, 0x0
	0x01ECA7F4 LDR X1, [X9]
	0x01ECA7F8 CSET W0, EQ
	0x01ECA7FC MOV X2, X31
	0x01ECA800 BL 0x1E3BA60
	0x01ECA804 CBNZ X20, 0x1ECA80C
	0x01ECA808 BL 0x1C16F20
	0x01ECA80C MOV X0, X20
	0x01ECA810 MOV X1, X19
	0x01ECA814 BL 0x1EC2858
	0x01ECA818 CBNZ X23, 0x1ECA824
	0x01ECA81C MOV X0, X21
	0x01ECA820 BL 0x1D2C690
	0x01ECA824 MOV X0, X23

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2510000
	007 Move W8, [X22+1194]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2236000
	016 Move X0, [X0+3320]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1194], W8
	020 Move [X31+8], X31
	021 Move X0, [X21+344]
	022 Compare X0, 0
	023 JumpIfEqual {55}
	024 Move X8, 0x2236000
	025 Move X8, [X8+3320]
	026 Add X2, X31, 8
	027 Move X1, X20
	028 Move X3, [X8]
	029 Call Dictionary`2<NetworkObjectTypeId, Object>.TryGetValue, X0, X1, X2
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {46}
	034 Move X8, [X31+8]
	035 Compare X8, 0
	036 JumpIfEqual {55}
	037 Move X8, [X8+184]
	038 Compare X8, 0
	039 JumpIfEqual {46}
	040 Move W9, [X8+96]
	041 Move TEMP, X9
	042 And TEMP, TEMP, 2
	043 Compare TEMP, 2
	044 JumpIfEqual {46}
	045 Move W0, 1
	046 Move X8, X31
	047 Move W0, W31
	048 Move [X19], X8
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Return X0
	055 Call 0x1C17F20

Method: T* AllocateStruct(Fusion.NetworkId id, System.Int32 extraWords = 0, System.Nullable`1<Fusion.NetworkObjectTypeId> objectTypeId = null)

Disassembly:
	0x02255C34 CBZ X8, 0x2255EDC
	0x02255C38 LDR X9, [X25]
	0x02255C3C LDR W1, [X8 + 0x18]
	0x02255C40 MOV X0, X19
	0x02255C44 LDR X2, [X9 + 0x18]
	0x02255C48 LDR X8, [X2]
	0x02255C4C BLR X8
	0x02255C50 LDR X9, [X20 + 0x8]
	0x02255C54 CBZ X9, 0x2255EDC
	0x02255C58 LDR X8, [X25]
	0x02255C5C LDR W24, [X9 + 0x14]
	0x02255C60 MOVZ W10, 0xFFFD
	0x02255C64 LDR X0, [X8 + 0x8]
	0x02255C68 AND W28, W24, W10, 0x0
	0x02255C6C LDRB W9, [X0 + 0x135]
	0x02255C70 TBNZ X9, 0x0, 0x2255C7C
	0x02255C74 BL 0x1C5C684
	0x02255C78 LDR X8, [X25]
	0x02255C7C LDR X1, [X8 + 0x20]
	0x02255C80 CMP W28, 0x0
	0x02255C84 CSET W8, NE
	0x02255C88 STURB W8, [X29 - 0x18]
	0x02255C8C SUB X8, X29, 0x18
	0x02255C90 SUB X4, X29, 0x28
	0x02255C94 SUB X5, X29, 0xC
	0x02255C98 MOV X2, X27
	0x02255C9C MOV X3, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W21, W2
	008 Move X22, X1
	009 Move X23, X0
	010 Move W0, 36
	011 Move W1, 4
	012 Move X2, X31
	013 Move X19, X4
	014 Move X20, X3
	015 Call Native.RoundToAlignment, X0, X1
	016 Add W8, W0, 3
	017 NotImplemented "Instruction CMP not yet implemented."
	018 NotImplemented "Instruction CSEL not yet implemented."
	019 And X1, X22, 0
	020 Add W2, W21, W8
	021 And X4, X19, 0
	022 Move X0, X23
	023 Move X3, X20
	024 Move X5, X31
	025 Call Simulation.AllocateStruct, X0, X1, X2, X3
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Add X0, X0, 80
	031 Move X30, [X31+48]
	032 Move X23, [X31+56]
	033 Return X0

Method: Fusion.NetworkObjectHeader* AllocateStruct(Fusion.NetworkId id, System.Int32 words, System.Nullable`1<Fusion.NetworkObjectTypeId> objectTypeId = null)

Disassembly:
	0x01ECA828 BL 0x1C16F18
	0x01ECA82C BL 0x1990590
	0x01ECA830 LDRB W8, [X1 + 0x14]
	0x01ECA834 MOVZ W9, 0x45
	0x01ECA838 ANDS W31, W8, W9, 0x0
	0x01ECA83C B.EQ 0x1ECA848
	0x01ECA840 MOV X0, X31
	0x01ECA844 RET
	0x01ECA848 LDR W0, [X1 + 0x1C]
	0x01ECA84C RET
	0x01ECA850 STR X30, [X31 - 0x40]!
	0x01ECA854 STP X24, X23, [X31 + 0x10]
	0x01ECA858 STP X22, X21, [X31 + 0x20]
	0x01ECA85C STP X20, X19, [X31 + 0x30]
	0x01ECA860 ADRP X24, 0x250F000
	0x01ECA864 ADRP X23, 0x222C000
	0x01ECA868 LDRB W8, [X24 + 0x4B2]
	0x01ECA86C LDR X23, [X23 + 0x398]
	0x01ECA870 MOV X19, X3
	0x01ECA874 MOV X22, X2
	0x01ECA878 MOV X21, X1
	0x01ECA87C MOV X20, X0
	0x01ECA880 TBNZ X8, 0x0, 0x1ECA8A4
	0x01ECA884 ADRP X0, 0x222C000
	0x01ECA888 LDR X0, [X0 + 0x398]
	0x01ECA88C BL 0x1C16CF4
	0x01ECA890 ADRP X0, 0x2233000
	0x01ECA894 LDR X0, [X0 + 0x170]
	0x01ECA898 BL 0x1C16CF4
	0x01ECA89C MOVZ W8, 0x1
	0x01ECA8A0 STRB W8, [X24 + 0x4B2]
	0x01ECA8A4 LDR X0, [X23]
	0x01ECA8A8 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0x2510000
	008 Move W8, [X22+1195]
	009 Move W21, W2
	010 Move X20, X1
	011 Move X19, X0
	012 Move [X31], X3
	013 Move [X31+8], W4
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x2236000
	019 Move X0, [X0+3328]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1195], W8
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 Add W3, W21, 20
	025 And X1, X20, 0
	026 Move W4, 1
	027 Move X0, X19
	028 Move X5, X31
	029 Move X6, X31
	030 Call Simulation.AllocateObject, X0, X1, X2, X3, X4, X5, X6
	031 Compare X0, 0
	032 JumpIfEqual {41}
	033 Move X0, [X0+176]
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 Move X22, [X31+32]
	037 Move X21, [X31+40]
	038 Move X30, [X31+16]
	039 Add X31, X31, 64
	040 Return X0
	041 Call 0x1C17F20

Method: T* AllocateStructArray(Fusion.NetworkId id, System.Int32 elements, System.Nullable`1<Fusion.NetworkObjectTypeId> objectTypeId = null)

Disassembly:
	0x02255D9C LDRB W8, [X8 + 0x14]
	0x02255DA0 TBNZ X8, 0x3, 0x2255DF0
	0x02255DA4 LDR X8, [X25]
	0x02255DA8 LDR X21, [X20]
	0x02255DAC LDR X0, [X8 + 0x8]
	0x02255DB0 LDRB W9, [X0 + 0x135]
	0x02255DB4 TBNZ X9, 0x0, 0x2255DC0
	0x02255DB8 BL 0x1C5C684
	0x02255DBC LDR X8, [X25]
	0x02255DC0 LDR X1, [X8 + 0x30]
	0x02255DC4 MOVZ W8, 0x10
	0x02255DC8 SUB X9, X29, 0x18
	0x02255DCC STUR W8, [X29 - 0xC]
	0x02255DD0 SUB X8, X29, 0xC
	0x02255DD4 SUB X4, X29, 0x28
	0x02255DD8 SUB X5, X29, 0xC
	0x02255DDC MOV X2, X23
	0x02255DE0 MOV X3, X19
	0x02255DE4 STUR X9, [X29 - 0x28]
	0x02255DE8 STP X8, X21, [X29 - 0x20]
	0x02255DEC BL 0x1C17728
	0x02255DF0 LDR X8, [X25]
	0x02255DF4 LDR X0, [X8 + 0x8]
	0x02255DF8 LDRB W9, [X0 + 0x135]
	0x02255DFC TBNZ X9, 0x0, 0x2255E08
	0x02255E00 BL 0x1C5C684
	0x02255E04 LDR X8, [X25]
	0x02255E08 LDR X1, [X8 + 0x38]
	0x02255E0C SUB X5, X29, 0x28
	0x02255E10 MOV X2, X22
	0x02255E14 MOV X3, X19
	0x02255E18 MOV X4, X31
	0x02255E1C BL 0x1C17728
	0x02255E20 LDR X8, [X20 + 0x8]
	0x02255E24 CBZ X8, 0x2255EDC
	0x02255E28 LDR W23, [X8 + 0xC]
	0x02255E2C LDUR W22, [X29 - 0x28]
	0x02255E30 CMP W23, 0x1
	0x02255E34 B.LT 0x2255EA4
	0x02255E38 ADRP X8, 0x1EA5000
	0x02255E3C LDR X8, [X8 + 0xC68]
	0x02255E40 LDR X0, [X8]
	0x02255E44 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X5+56]
	009 Move X20, X4
	010 Move X19, X3
	011 Move W21, W2
	012 Move X22, X1
	013 Move X23, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {20}
	016 Move X0, X5
	017 Move X24, X5
	018 Call 0x1C5D6E0
	019 Move X8, [X24+56]
	020 Move X8, [X8]
	021 Move W1, 4
	022 Move X2, X31
	023 Move W0, [X8+252]
	024 Call Native.RoundToAlignment, X0, X1
	025 Add W8, W0, 3
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CSEL not yet implemented."
	028 NotImplemented "Instruction SBFM not yet implemented."
	029 And X1, X22, 0
	030 Multiply W2, W8, W21
	031 And X4, X20, 0
	032 Move X0, X23
	033 Move X3, X19
	034 Move X5, X31
	035 Call Simulation.AllocateStruct, X0, X1, X2, X3
	036 Compare X0, 0
	037 JumpIfEqual {51}
	038 Move W8, [X0+24]
	039 Move X20, [X31+48]
	040 Move X19, [X31+56]
	041 Move X22, [X31+32]
	042 Move X21, [X31+40]
	043 Move X24, [X31+16]
	044 Move X23, [X31+24]
	045 Or W9, W8, 128
	046 Add X8, X0, 80
	047 Move [X0+24], W9
	048 Move X0, X8
	049 Move X30, [X31+64]
	050 Return X0
	051 Call 0x1C17F20

Method: Fusion.NetworkObjectMeta AllocateObject(Fusion.NetworkId id, Fusion.NetworkObjectTypeId type, System.Int32 wordCount, System.Boolean isStruct, System.Nullable`1<Fusion.NetworkId> nestingRoot = null, System.Nullable`1<Fusion.NetworkObjectNestingKey> nestingKey = null)

Disassembly:
	0x01ECA8AC CBZ W8, 0x1ECA8B8
	0x01ECA8B0 CBNZ W22, 0x1ECA8C0
	0x01ECA8B4 B 0x1ECA994
	0x01ECA8B8 BL 0x1C16DFC
	0x01ECA8BC CBZ W22, 0x1ECA994
	0x01ECA8C0 ADRP X23, 0x250F000
	0x01ECA8C4 LDRB W8, [X23 + 0x4BB]
	0x01ECA8C8 CBNZ W8, 0x1ECA8E0
	0x01ECA8CC ADRP X0, 0x2235000
	0x01ECA8D0 LDR X0, [X0 + 0xA60]
	0x01ECA8D4 BL 0x1C16CF4
	0x01ECA8D8 MOVZ W8, 0x1
	0x01ECA8DC STRB W8, [X23 + 0x4BB]
	0x01ECA8E0 LDR X0, [X20 + 0xB0]
	0x01ECA8E4 CBZ X0, 0x1ECA9C0
	0x01ECA8E8 ADRP X9, 0x2235000
	0x01ECA8EC LDR W8, [X21 + 0x18]
	0x01ECA8F0 LDR X9, [X9 + 0xA60]
	0x01ECA8F4 SBFM W1, W8, 0x10, 0x1F
	0x01ECA8F8 LDR X2, [X9]
	0x01ECA8FC BL 0x2A135EC
	0x01ECA900 CBZ X0, 0x1ECA9C0
	0x01ECA904 MOV X23, X0
	0x01ECA908 LDR X0, [X0 + 0xD8]
	0x01ECA90C LDR X1, [X21 + 0x18]
	0x01ECA910 MOV X2, X31
	0x01ECA914 BL 0x1EFC3FC
	0x01ECA918 TBZ X0, 0x0, 0x1ECA9C0
	0x01ECA91C AND X22, X22, 0x0
	0x01ECA920 MOV X0, X23
	0x01ECA924 MOV X1, X22
	0x01ECA928 MOV X2, X31
	0x01ECA92C BL 0x1ED85A8
	0x01ECA930 UBFM W8, W0, 0x8, 0xF
	0x01ECA934 CBNZ W8, 0x1ECA994
	0x01ECA938 LDR X8, [X20 + 0x58]
	0x01ECA93C CBZ X8, 0x1ECA9C0
	0x01ECA940 LDR W8, [X8 + 0x14]
	0x01ECA944 ORN W8, W31, W8, 0x0
	0x01ECA948 ANDS W31, W8, 0x3
	0x01ECA94C B.NE 0x1ECA994
	0x01ECA950 MOV X0, X20
	0x01ECA954 BL 0x1EBDF30
	0x01ECA958 TBZ X0, 0x0, 0x1ECA994
	0x01ECA95C LDR X8, [X20]
	0x01ECA960 MOV X0, X20
	0x01ECA964 MOV X1, X21
	0x01ECA968 LDR X9, [X8 + 0x2B8]
	0x01ECA96C LDR X2, [X8 + 0x2C0]
	0x01ECA970 BLR X9
	0x01ECA974 LDR X8, [X20 + 0xA8]
	0x01ECA978 CBZ X8, 0x1ECA9C0
	0x01ECA97C AND X1, X0, 0x0
	0x01ECA980 MOV X0, X8
	0x01ECA984 MOV X2, X22
	0x01ECA988 MOV X3, X31
	0x01ECA98C BL 0x1ED5750
	0x01ECA990 TBZ X0, 0x0, 0x1ECA9B4
	0x01ECA994 MOV W8, W31
	0x01ECA998 MOVZ W0, 0x1
	0x01ECA99C STR W8, [X19]
	0x01ECA9A0 LDP X20, X19, [X31 + 0x30]
	0x01ECA9A4 LDP X22, X21, [X31 + 0x20]
	0x01ECA9A8 LDP X24, X23, [X31 + 0x10]
	0x01ECA9AC LDR X30, [X31], #0x40
	0x01ECA9B0 RET
	0x01ECA9B4 MOV W0, W31
	0x01ECA9B8 MOVZ W8, 0x1
	0x01ECA9BC B 0x1ECA99C
	0x01ECA9C0 BL 0x1C16F20
	0x01ECA9C4 CMP W0, 0x1
	0x01ECA9C8 B.NE 0x1ECA9D4
	0x01ECA9CC MOVZ W0, 0xA05
	0x01ECA9D0 RET
	0x01ECA9D4 STP X30, X19, [X31 - 0x10]!
	0x01ECA9D8 ADRP X0, 0x2231000
	0x01ECA9DC LDR X0, [X0 + 0x760]
	0x01ECA9E0 BL 0x1C16D08
	0x01ECA9E4 BL 0x1C16F10
	0x01ECA9E8 MOV X19, X0
	0x01ECA9EC ADRP X0, 0x2235000
	0x01ECA9F0 LDR X0, [X0 + 0xD60]
	0x01ECA9F4 BL 0x1C16D08
	0x01ECA9F8 MOV X1, X0
	0x01ECA9FC MOV X0, X19
	0x01ECAA00 MOV X2, X31
	0x01ECAA04 BL 0x3316014
	0x01ECAA08 ADRP X0, 0x2235000
	0x01ECAA0C LDR X0, [X0 + 0xD68]
	0x01ECAA10 BL 0x1C16D08
	0x01ECAA14 MOV X1, X0
	0x01ECAA18 MOV X0, X19
	0x01ECAA1C BL 0x1C16DEC
	0x01ECAA20 STR X30, [X31 - 0x30]!
	0x01ECAA24 STP X22, X21, [X31 + 0x10]
	0x01ECAA28 STP X20, X19, [X31 + 0x20]
	0x01ECAA2C ADRP X22, 0x250F000
	0x01ECAA30 LDRB W8, [X22 + 0x4BB]
	0x01ECAA34 MOV X21, X2
	0x01ECAA38 MOV X19, X1
	0x01ECAA3C MOV X20, X0
	0x01ECAA40 CBNZ W8, 0x1ECAA58
	0x01ECAA44 ADRP X0, 0x2235000
	0x01ECAA48 LDR X0, [X0 + 0xA60]
	0x01ECAA4C BL 0x1C16CF4
	0x01ECAA50 MOVZ W8, 0x1
	0x01ECAA54 STRB W8, [X22 + 0x4BB]
	0x01ECAA58 LDR X0, [X20 + 0xB0]
	0x01ECAA5C CBZ X0, 0x1ECAAE8
	0x01ECAA60 ADRP X9, 0x2235000
	0x01ECAA64 LDR W8, [X21 + 0x18]
	0x01ECAA68 LDR X9, [X9 + 0xA60]
	0x01ECAA6C SBFM W1, W8, 0x10, 0x1F
	0x01ECAA70 LDR X2, [X9]
	0x01ECAA74 BL 0x2A135EC
	0x01ECAA78 CBZ X0, 0x1ECAAE8
	0x01ECAA7C MOV X22, X0
	0x01ECAA80 LDR X0, [X0 + 0xD8]
	0x01ECAA84 LDR X1, [X21 + 0x18]
	0x01ECAA88 MOV X2, X31
	0x01ECAA8C BL 0x1EFC3FC
	0x01ECAA90 LDRB W9, [X19 + 0x14]
	0x01ECAA94 ANDS W31, W0, 0x1
	0x01ECAA98 CSEL X8, X22, X31, NE
	0x01ECAA9C TBNZ X9, 0x3, 0x1ECAAB4
	0x01ECAAA0 CBZ X8, 0x1ECAAE8
	0x01ECAAA4 LDR X9, [X8 + 0x40]
	0x01ECAAA8 ADD X2, X9, 0x1
	0x01ECAAAC STR X2, [X8 + 0x40]
	0x01ECAAB0 B 0x1ECAABC
	0x01ECAAB4 CBZ X8, 0x1ECAAE8
	0x01ECAAB8 MOV X2, X31
	0x01ECAABC MOV X0, X20
	0x01ECAAC0 MOV X1, X19
	0x01ECAAC4 MOV X3, X31
	0x01ECAAC8 ADD X21, X8, 0x60
	0x01ECAACC BL 0x1ED9FFC
	0x01ECAAD0 MOV X1, X0
	0x01ECAAD4 MOV X0, X21
	0x01ECAAD8 LDP X20, X19, [X31 + 0x20]
	0x01ECAADC LDP X22, X21, [X31 + 0x10]
	0x01ECAAE0 LDR X30, [X31], #0x30
	0x01ECAAE4 B 0x1EBD3F4
	0x01ECAAE8 BL 0x1C16F20
	0x01ECAAEC SUB X31, X31, 0x40
	0x01ECAAF0 STR X30, [X31 + 0x10]
	0x01ECAAF4 STP X22, X21, [X31 + 0x20]
	0x01ECAAF8 STP X20, X19, [X31 + 0x30]
	0x01ECAAFC ADRP X22, 0x250F000
	0x01ECAB00 LDRB W8, [X22 + 0x4B0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x2510000
	011 Move [X31], X6
	012 Move [X31+8], X5
	013 Move X22, 0x2236000
	014 Move W8, [X21+1196]
	015 Move X22, [X22+3336]
	016 Move W20, W4
	017 Move W23, W3
	018 Move X24, X2
	019 Move X25, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {57}
	025 Move X0, 0x2236000
	026 Move X0, [X0+3344]
	027 Call 0x1C17CF4
	028 Move X0, 0x2236000
	029 Move X0, [X0+3352]
	030 Call 0x1C17CF4
	031 Move X0, 0x2236000
	032 Move X0, [X0+3168]
	033 Call 0x1C17CF4
	034 Move X0, 0x2235000
	035 Move X0, [X0+1080]
	036 Call 0x1C17CF4
	037 Move X0, 0x2235000
	038 Move X0, [X0+888]
	039 Call 0x1C17CF4
	040 Move X0, 0x2236000
	041 Move X0, [X0+3360]
	042 Call 0x1C17CF4
	043 Move X0, 0x2236000
	044 Move X0, [X0+3368]
	045 Call 0x1C17CF4
	046 Move X0, 0x2236000
	047 Move X0, [X0+3376]
	048 Call 0x1C17CF4
	049 Move X0, 0x2236000
	050 Move X0, [X0+3384]
	051 Call 0x1C17CF4
	052 Move X0, 0x2236000
	053 Move X0, [X0+3336]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X21+1196], W8
	057 And X21, X25, 0
	058 Move X0, X19
	059 Move X1, X21
	060 Call Simulation.HasObject, X0, X1
	061 Move X1, [X22]
	062 NotImplemented "Instruction ORN not yet implemented."
	063 And W0, W8, 1
	064 Move X2, X31
	065 Call Assert.Always, X0, X1
	066 Move X0, [X19+416]
	067 Move W1, W23
	068 ShiftRight W1, 30
	069 And W1, W1, 0x1FFFFFFF
	070 Move X2, X31
	071 Call Allocator.AllocAndClear, X0, X1
	072 Compare X0, 0
	073 JumpIfEqual {177}
	074 Move [X0], W25
	075 Move X25, X0
	076 Move [X25+8], X24
	077 NotImplemented "Instruction STRH not yet implemented."
	078 Move X23, 0x2235000
	079 Move W8, [X31+8]
	080 Move X23, [X23+1080]
	081 Move X22, X0
	082 Compare W8, 0
	083 JumpIfEqual {99}
	084 Move W8, [X31]
	085 Compare W8, 0
	086 JumpIfEqual {99}
	087 Move X8, 0x2236000
	088 Move X8, [X8+3384]
	089 Add X0, X31, 8
	090 Move X1, [X8]
	091 Call Nullable`1<NetworkId>.get_Value, X0
	092 Move [X22+16], W0
	093 Move X8, 0x2236000
	094 Move X8, [X8+3376]
	095 Add X0, X31, 0
	096 Move X1, [X8]
	097 Call Nullable`1<NetworkObjectNestingKey>.get_Value, X0
	098 Move [X22+20], W0
	099 Move X0, [X23]
	100 Move X24, [X19+408]
	101 Call 0x1C17F10
	102 Move X1, X19
	103 Move X2, X24
	104 Move X3, X31
	105 Move X23, X0
	106 Call NetworkObjectMeta..ctor, X0, X1, X2
	107 Compare X23, 0
	108 JumpIfEqual {177}
	109 Move [X23+176], X22
	110 Move X0, [X19+336]
	111 Compare X0, 0
	112 JumpIfEqual {177}
	113 Move X8, 0x2236000
	114 Move X8, [X8+3344]
	115 Move W1, [X22]
	116 Move X24, 0x2235000
	117 Move X2, X23
	118 Move X3, [X8]
	119 Move X24, [X24+888]
	120 Call Dictionary`2<NetworkId, Object>.Add, X0, X1, X2
	121 Move X0, [X24]
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {126}
	125 Call 0x1C17DFC
	126 Move X0, X25
	127 Move X1, X31
	128 Call NetworkObjectTypeId.get_IsSceneObject, X0
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {142}
	133 Move X0, [X19+344]
	134 Compare X0, 0
	135 JumpIfEqual {177}
	136 Move X8, 0x2236000
	137 Move X1, [X25]
	138 Move X8, [X8+3352]
	139 Move X2, X23
	140 Move X3, [X8]
	141 Call Dictionary`2<NetworkObjectTypeId, Object>.set_Item, X0, X1, X2
	142 Move W8, [X19+76]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Add X0, X19, 352
	145 Move X1, X23
	146 Move X2, X31
	147 Call ListMigration.AddLast, X0, X1
	148 Move TEMP, X20
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {166}
	152 Move W8, [X22+24]
	153 Or W8, W8, 32
	154 Move [X22+24], W8
	155 Move X0, [X19+392]
	156 Compare X0, 0
	157 JumpIfEqual {177}
	158 Move X8, 0x2236000
	159 Move X8, [X8+3168]
	160 Move X1, X21
	161 Move X2, [X8]
	162 Call HashSet`1<NetworkId>.Add, X0, X1
	163 Move W8, [X19+400]
	164 Add W8, W8, 1
	165 Move [X19+400], W8
	166 Move X0, X23
	167 Move X20, [X31+64]
	168 Move X19, [X31+72]
	169 Move X22, [X31+48]
	170 Move X21, [X31+56]
	171 Move X24, [X31+32]
	172 Move X23, [X31+40]
	173 Move X30, [X31+16]
	174 Move X25, [X31+24]
	175 Add X31, X31, 80
	176 Return X0
	177 Call 0x1C17F20

Method: System.Void FreeObject(Fusion.NetworkId id)

Disassembly:
	0x01ECAB04 MOV X21, X2
	0x01ECAB08 MOV X19, X1
	0x01ECAB0C MOV X20, X0
	0x01ECAB10 TBNZ X8, 0x0, 0x1ECAB28
	0x01ECAB14 ADRP X0, 0x222C000
	0x01ECAB18 LDR X0, [X0 + 0xE40]
	0x01ECAB1C BL 0x1C16CF4
	0x01ECAB20 MOVZ W8, 0x1
	0x01ECAB24 STRB W8, [X22 + 0x4B0]
	0x01ECAB28 ADRP X22, 0x250F000
	0x01ECAB2C LDRB W8, [X22 + 0x2F1]
	0x01ECAB30 STR X31, [X31 + 0x18]
	0x01ECAB34 STR X31, [X31 + 0x8]
	0x01ECAB38 STR W31, [X31 + 0x4]
	0x01ECAB3C CBNZ W8, 0x1ECAB54
	0x01ECAB40 ADRP X0, 0x222E000
	0x01ECAB44 LDR X0, [X0 + 0x20]
	0x01ECAB48 BL 0x1C16CF4
	0x01ECAB4C MOVZ W8, 0x1
	0x01ECAB50 STRB W8, [X22 + 0x2F1]
	0x01ECAB54 LDR X0, [X20 + 0xB8]
	0x01ECAB58 CBZ X0, 0x1ECAC68
	0x01ECAB5C ADRP X8, 0x222E000
	0x01ECAB60 LDR X8, [X8 + 0x20]
	0x01ECAB64 AND X1, X21, 0x0
	0x01ECAB68 ADD X2, X31, 0x18
	0x01ECAB6C LDR X3, [X8]
	0x01ECAB70 BL 0x2AE89D0
	0x01ECAB74 TBZ X0, 0x0, 0x1ECAC50
	0x01ECAB78 LDR X0, [X31 + 0x18]
	0x01ECAB7C CBZ X0, 0x1ECAC68
	0x01ECAB80 LDR X21, [X20 + 0x130]
	0x01ECAB84 MOV X1, X31
	0x01ECAB88 BL 0x1ED810C
	0x01ECAB8C MOV W1, W0
	0x01ECAB90 ADD X2, X31, 0x8
	0x01ECAB94 MOV X0, X21
	0x01ECAB98 MOV X3, X31
	0x01ECAB9C BL 0x1EFF144
	0x01ECABA0 TBZ X0, 0x0, 0x1ECAC50
	0x01ECABA4 LDR X0, [X31 + 0x8]
	0x01ECABA8 MOV X1, X31
	0x01ECABAC BL 0x1EFBDE4
	0x01ECABB0 TBZ X0, 0x0, 0x1ECAC50
	0x01ECABB4 LDR X1, [X31 + 0x8]
	0x01ECABB8 LDR W8, [X1 + 0x40]
	0x01ECABBC CMP W8, 0x3
	0x01ECABC0 B.NE 0x1ECAC50
	0x01ECABC4 LDRB W8, [X19 + 0x14]
	0x01ECABC8 MOVZ W9, 0x45
	0x01ECABCC ANDS W31, W8, W9, 0x0
	0x01ECABD0 B.EQ 0x1ECABDC
	0x01ECABD4 MOV X2, X31
	0x01ECABD8 B 0x1ECABE0
	0x01ECABDC LDR W2, [X19 + 0x1C]
	0x01ECABE0 ADD X3, X31, 0x4
	0x01ECABE4 MOV X0, X20
	0x01ECABE8 BL 0x1ECA850
	0x01ECABEC TBZ X0, 0x0, 0x1ECAC50
	0x01ECABF0 LDRB W8, [X19 + 0x14]
	0x01ECABF4 LDR W9, [X20 + 0x48]
	0x01ECABF8 ANDS W31, W8, 0x30
	0x01ECABFC STR W9, [X19]
	0x01ECAC00 B.EQ 0x1ECAC28
	0x01ECAC04 ADRP X8, 0x222C000
	0x01ECAC08 LDR X8, [X8 + 0xE40]
	0x01ECAC0C LDR X0, [X8]
	0x01ECAC10 LDR W8, [X0 + 0xE0]
	0x01ECAC14 CBNZ W8, 0x1ECAC1C
	0x01ECAC18 BL 0x1C16DFC
	0x01ECAC1C MOV X0, X31
	0x01ECAC20 BL 0x1E8D7EC
	0x01ECAC24 STR W0, [X19 + 0x18]
	0x01ECAC28 LDR W8, [X19 + 0xC]
	0x01ECAC2C CBNZ W8, 0x1ECAC38
	0x01ECAC30 LDR W8, [X19 + 0x8]
	0x01ECAC34 STR W8, [X19 + 0xC]
	0x01ECAC38 LDR X2, [X31 + 0x8]
	0x01ECAC3C MOV X0, X20
	0x01ECAC40 MOV X1, X19
	0x01ECAC44 BL 0x1ECAA20
	0x01ECAC48 MOVZ W0, 0x1
	0x01ECAC4C B 0x1ECAC54
	0x01ECAC50 MOV W0, W31
	0x01ECAC54 LDP X20, X19, [X31 + 0x30]
	0x01ECAC58 LDP X22, X21, [X31 + 0x20]
	0x01ECAC5C LDR X30, [X31 + 0x10]
	0x01ECAC60 ADD X31, X31, 0x40
	0x01ECAC64 RET
	0x01ECAC68 BL 0x1C16F20
	0x01ECAC6C STR X30, [X31 - 0x40]!
	0x01ECAC70 STP X24, X23, [X31 + 0x10]
	0x01ECAC74 STP X22, X21, [X31 + 0x20]
	0x01ECAC78 STP X20, X19, [X31 + 0x30]
	0x01ECAC7C ADRP X20, 0x250F000
	0x01ECAC80 LDRB W8, [X20 + 0x4B1]
	0x01ECAC84 MOV X21, X4
	0x01ECAC88 MOV W22, W3
	0x01ECAC8C MOV X23, X2
	0x01ECAC90 MOV W24, W1
	0x01ECAC94 MOV X19, X0
	0x01ECAC98 STR X4, [X31 + 0x8]
	0x01ECAC9C TBNZ X8, 0x0, 0x1ECACC0
	0x01ECACA0 ADRP X0, 0x2234000
	0x01ECACA4 LDR X0, [X0 + 0xB58]
	0x01ECACA8 BL 0x1C16CF4
	0x01ECACAC ADRP X0, 0x2234000
	0x01ECACB0 LDR X0, [X0 + 0xB60]
	0x01ECACB4 BL 0x1C16CF4
	0x01ECACB8 MOVZ W8, 0x1
	0x01ECACBC STRB W8, [X20 + 0x4B1]
	0x01ECACC0 ADD W1, W22, 0x4
	0x01ECACC4 MOV X0, X19
	0x01ECACC8 MOV X2, X31
	0x01ECACCC BL 0x1ED9318
	0x01ECACD0 CBZ X0, 0x1ECAD6C
	0x01ECACD4 LDR W8, [X0 + 0x14]
	0x01ECACD8 MOV X20, X0
	0x01ECACDC STR W24, [X0 + 0x1C]
	0x01ECACE0 MOV X1, X23
	0x01ECACE4 ORR W8, W8, 0x40
	0x01ECACE8 STR W8, [X0 + 0x14]
	0x01ECACEC ADD X0, X0, 0x20
	0x01ECACF0 MOV W2, W22
	0x01ECACF4 MOV X3, X31
	0x01ECACF8 BL 0x1E35764
	0x01ECACFC ANDS W31, W21, 0xFF
	0x01ECAD00 B.EQ 0x1ECAD24
	0x01ECAD04 ADRP X8, 0x2234000
	0x01ECAD08 LDR X8, [X8 + 0xB60]
	0x01ECAD0C ADD X0, X31, 0x8
	0x01ECAD10 LDR X1, [X8]
	0x01ECAD14 BL 0x2437440
	0x01ECAD18 STR W0, [X20 + 0x18]
	0x01ECAD1C MOVZ W8, 0x10
	0x01ECAD20 B 0x1ECAD38
	0x01ECAD24 MOV X0, X19
	0x01ECAD28 STR W31, [X20 + 0x18]
	0x01ECAD2C BL 0x1EC0864
	0x01ECAD30 TBZ X0, 0x0, 0x1ECAD44
	0x01ECAD34 MOVZ W8, 0x20
	0x01ECAD38 LDR W9, [X20 + 0x14]
	0x01ECAD3C ORR W8, W9, W8, 0x0
	0x01ECAD40 STR W8, [X20 + 0x14]
	0x01ECAD44 LDR W8, [X20 + 0x8]
	0x01ECAD48 MOV X0, X19
	0x01ECAD4C MOV X1, X20
	0x01ECAD50 STR W8, [X20 + 0xC]
	0x01ECAD54 BL 0x1ECA2C8
	0x01ECAD58 LDP X20, X19, [X31 + 0x30]
	0x01ECAD5C LDP X22, X21, [X31 + 0x20]
	0x01ECAD60 LDP X24, X23, [X31 + 0x10]
	0x01ECAD64 LDR X30, [X31], #0x40
	0x01ECAD68 RET
	0x01ECAD6C BL 0x1C16F20
	0x01ECAD70 LDR W8, [X0 + 0x18]
	0x01ECAD74 CBNZ W8, 0x1ECAD90
	0x01ECAD78 LDR X8, [X0 + 0x30]
	0x01ECAD7C CBNZ X8, 0x1ECAD90
	0x01ECAD80 LDR X8, [X0 + 0x38]
	0x01ECAD84 CBNZ X8, 0x1ECAD90
	0x01ECAD88 LDR X8, [X0 + 0x40]
	0x01ECAD8C CBZ X8, 0x1ECAD98
	0x01ECAD90 MOV W0, W31
	0x01ECAD94 RET
	0x01ECAD98 LDR X8, [X0 + 0x48]
	0x01ECAD9C CMP X8, 0x0
	0x01ECADA0 CSET W0, EQ
	0x01ECADA4 RET
	0x01ECADA8 MOV X1, X31
	0x01ECADAC B 0x33BDD8C
	0x01ECADB0 SUB X31, X31, 0x30
	0x01ECADB4 STR X30, [X31 + 0x10]
	0x01ECADB8 STP X20, X19, [X31 + 0x20]
	0x01ECADBC ADRP X20, 0x250F000
	0x01ECADC0 ADRP X19, 0x2234000
	0x01ECADC4 LDRB W8, [X20 + 0x4BD]
	0x01ECADC8 LDR X19, [X19 + 0xAA0]
	0x01ECADCC TBNZ X8, 0x0, 0x1ECADF0
	0x01ECADD0 ADRP X0, 0x2234000
	0x01ECADD4 LDR X0, [X0 + 0xAA0]
	0x01ECADD8 BL 0x1C16CF4
	0x01ECADDC ADRP X0, 0x2235000
	0x01ECADE0 LDR X0, [X0 + 0xD70]
	0x01ECADE4 BL 0x1C16CF4
	0x01ECADE8 MOVZ W8, 0x1
	0x01ECADEC STRB W8, [X20 + 0x4BD]
	0x01ECADF0 LDR X0, [X19]
	0x01ECADF4 ADRP X20, 0x2235000
	0x01ECADF8 LDR W8, [X0 + 0xE0]
	0x01ECADFC LDR X20, [X20 + 0xD70]
	0x01ECAE00 CBNZ W8, 0x1ECAE0C
	0x01ECAE04 BL 0x1C16DFC
	0x01ECAE08 LDR X0, [X19]
	0x01ECAE0C LDR X8, [X0 + 0xB8]
	0x01ECAE10 LDR X4, [X20]
	0x01ECAE14 ADD X0, X31, 0x0
	0x01ECAE18 LDP W1, W2, [X8]
	0x01ECAE1C LDR W3, [X8 + 0x8]
	0x01ECAE20 STR W31, [X31 + 0x8]
	0x01ECAE24 STR X31, [X31]
	0x01ECAE28 BL 0x27BA60C
	0x01ECAE2C LDR X0, [X31]
	0x01ECAE30 LDR W1, [X31 + 0x8]
	0x01ECAE34 LDP X20, X19, [X31 + 0x20]
	0x01ECAE38 LDR X30, [X31 + 0x10]
	0x01ECAE3C ADD X31, X31, 0x30
	0x01ECAE40 RET
	0x01ECAE44 STR X30, [X31 - 0x20]!
	0x01ECAE48 STP X20, X19, [X31 + 0x10]
	0x01ECAE4C ADRP X20, 0x250F000
	0x01ECAE50 ADRP X19, 0x2234000
	0x01ECAE54 LDRB W8, [X20 + 0x4BE]
	0x01ECAE58 LDR X19, [X19 + 0xAA0]
	0x01ECAE5C TBNZ X8, 0x0, 0x1ECAE74
	0x01ECAE60 ADRP X0, 0x2234000
	0x01ECAE64 LDR X0, [X0 + 0xAA0]
	0x01ECAE68 BL 0x1C16CF4
	0x01ECAE6C MOVZ W8, 0x1
	0x01ECAE70 STRB W8, [X20 + 0x4BE]
	0x01ECAE74 LDR X0, [X19]
	0x01ECAE78 LDR W8, [X0 + 0xE0]
	0x01ECAE7C CBNZ W8, 0x1ECAE88
	0x01ECAE80 BL 0x1C16DFC
	0x01ECAE84 LDR X0, [X19]
	0x01ECAE88 LDR X8, [X0 + 0xB8]
	0x01ECAE8C LDP X20, X19, [X31 + 0x10]
	0x01ECAE90 LDR W0, [X8 + 0xC]
	0x01ECAE94 LDR X30, [X31], #0x20
	0x01ECAE98 RET
	0x01ECAE9C STR D14, [X31 - 0xA0]!
	0x01ECAEA0 STP D13, D12, [X31 + 0x10]
	0x01ECAEA4 STP D11, D10, [X31 + 0x20]
	0x01ECAEA8 STP D9, D8, [X31 + 0x30]
	0x01ECAEAC STP X29, X30, [X31 + 0x40]
	0x01ECAEB0 STP X28, X27, [X31 + 0x50]
	0x01ECAEB4 STP X26, X25, [X31 + 0x60]
	0x01ECAEB8 STP X24, X23, [X31 + 0x70]
	0x01ECAEBC STP X22, X21, [X31 + 0x80]
	0x01ECAEC0 STP X20, X19, [X31 + 0x90]
	0x01ECAEC4 ADRP X20, 0x250F000
	0x01ECAEC8 ADRP X26, 0x2234000
	0x01ECAECC LDRB W8, [X20 + 0x4BF]
	0x01ECAED0 LDR X26, [X26 + 0xAA0]
	0x01ECAED4 MOV X19, X0
	0x01ECAED8 MOV V8.16B, V3.16B
	0x01ECAEDC MOV V9.16B, V2.16B
	0x01ECAEE0 MOV V10.16B, V1.16B
	0x01ECAEE4 MOV V11.16B, V0.16B
	0x01ECAEE8 TBNZ X8, 0x0, 0x1ECAF0C
	0x01ECAEEC ADRP X0, 0x2234000
	0x01ECAEF0 LDR X0, [X0 + 0xAA0]
	0x01ECAEF4 BL 0x1C16CF4
	0x01ECAEF8 ADRP X0, 0x222B000
	0x01ECAEFC LDR X0, [X0 + 0x9D8]
	0x01ECAF00 BL 0x1C16CF4
	0x01ECAF04 MOVZ W8, 0x1
	0x01ECAF08 STRB W8, [X20 + 0x4BF]
	0x01ECAF0C LDR X0, [X26]
	0x01ECAF10 FSUB S14, S11, S8
	0x01ECAF14 FSUB S13, S10, S8
	0x01ECAF18 FSUB S12, S9, S8
	0x01ECAF1C LDR W8, [X0 + 0xE0]
	0x01ECAF20 CBNZ W8, 0x1ECAF28
	0x01ECAF24 BL 0x1C16DFC
	0x01ECAF28 MOV V0.16B, V14.16B
	0x01ECAF2C MOV V1.16B, V13.16B
	0x01ECAF30 MOV V2.16B, V12.16B
	0x01ECAF34 BL 0x1ECB010
	0x01ECAF38 FADD S0, S11, S8
	0x01ECAF3C FADD S1, S10, S8
	0x01ECAF40 FADD S2, S9, S8
	0x01ECAF44 MOV X20, X0
	0x01ECAF48 MOV X21, X1
	0x01ECAF4C BL 0x1ECB010
	0x01ECAF50 MOV X22, X0
	0x01ECAF54 CMP W20, W22
	0x01ECAF58 B.GT 0x1ECAFE0
	0x01ECAF5C ADRP X29, 0x222B000
	0x01ECAF60 LDR X29, [X29 + 0x9D8]
	0x01ECAF64 MOV X23, X1
	0x01ECAF68 UBFM X27, X20, 0x20, 0x3F
	0x01ECAF6C UBFM X28, X22, 0x20, 0x3F
	0x01ECAF70 CMP W27, W28
	0x01ECAF74 MOV W24, W27
	0x01ECAF78 B.GT 0x1ECAFD4
	0x01ECAF7C CMP W21, W23
	0x01ECAF80 MOV W25, W21
	0x01ECAF84 B.GT 0x1ECAFC8
	0x01ECAF88 LDR X0, [X26]
	0x01ECAF8C LDR W8, [X0 + 0xE0]
	0x01ECAF90 CBNZ W8, 0x1ECAF98
	0x01ECAF94 BL 0x1C16DFC
	0x01ECAF98 MOV W0, W20
	0x01ECAF9C MOV W1, W24
	0x01ECAFA0 MOV W2, W25
	0x01ECAFA4 BL 0x1ECB138
	0x01ECAFA8 CBZ X19, 0x1ECB00C
	0x01ECAFAC LDR X2, [X29]
	0x01ECAFB0 MOV W1, W0
	0x01ECAFB4 MOV X0, X19
	0x01ECAFB8 BL 0x2DAB03C
	0x01ECAFBC ADD W25, W25, 0x1
	0x01ECAFC0 CMP W25, W23
	0x01ECAFC4 B.LE 0x1ECAF88
	0x01ECAFC8 ADD W24, W24, 0x1
	0x01ECAFCC CMP W24, W28
	0x01ECAFD0 B.LE 0x1ECAF7C
	0x01ECAFD4 ADD W20, W20, 0x1
	0x01ECAFD8 CMP W20, W22
	0x01ECAFDC B.LE 0x1ECAF70
	0x01ECAFE0 LDP X20, X19, [X31 + 0x90]
	0x01ECAFE4 LDP X22, X21, [X31 + 0x80]
	0x01ECAFE8 LDP X24, X23, [X31 + 0x70]
	0x01ECAFEC LDP X26, X25, [X31 + 0x60]
	0x01ECAFF0 LDP X28, X27, [X31 + 0x50]
	0x01ECAFF4 LDP X29, X30, [X31 + 0x40]
	0x01ECAFF8 LDP D9, D8, [X31 + 0x30]
	0x01ECAFFC LDP D11, D10, [X31 + 0x20]
	0x01ECB000 LDP D13, D12, [X31 + 0x10]
	0x01ECB004 LDR V14, [X31], #0xA0
	0x01ECB008 RET
	0x01ECB00C BL 0x1C16F20
	0x01ECB010 STP D13, D12, [X31 - 0x50]!
	0x01ECB014 STP D11, D10, [X31 + 0x10]
	0x01ECB018 STP D9, D8, [X31 + 0x20]
	0x01ECB01C STR X30, [X31 + 0x30]
	0x01ECB020 STP X20, X19, [X31 + 0x40]
	0x01ECB024 ADRP X20, 0x250E000
	0x01ECB028 ADRP X19, 0x2233000
	0x01ECB02C LDRB W8, [X20 + 0x4C0]
	0x01ECB030 LDR X19, [X19 + 0xAA0]
	0x01ECB034 MOV V10.16B, V2.16B
	0x01ECB038 MOV V9.16B, V1.16B
	0x01ECB03C MOV V8.16B, V0.16B
	0x01ECB040 TBNZ X8, 0x0, 0x1ECB058
	0x01ECB044 ADRP X0, 0x2233000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], X30
	003 Move [X31+88], X23
	004 Move [X31+96], X22
	005 Move [X31+104], X21
	006 Move [X31+112], X20
	007 Move [X31+120], X19
	008 Move X21, 0x2510000
	009 Move X23, 0x222D000
	010 Move W8, [X21+1197]
	011 Move X23, [X23+920]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {71}
	018 Move X0, 0x2235000
	019 Move X0, [X0+1048]
	020 Call 0x1C17CF4
	021 Move X0, 0x2236000
	022 Move X0, [X0+2928]
	023 Call 0x1C17CF4
	024 Move X0, 0x2236000
	025 Move X0, [X0+3392]
	026 Call 0x1C17CF4
	027 Move X0, 0x2236000
	028 Move X0, [X0+3400]
	029 Call 0x1C17CF4
	030 Move X0, 0x2236000
	031 Move X0, [X0+3408]
	032 Call 0x1C17CF4
	033 Move X0, 0x2236000
	034 Move X0, [X0+2336]
	035 Call 0x1C17CF4
	036 Move X0, 0x2235000
	037 Move X0, [X0+2960]
	038 Call 0x1C17CF4
	039 Move X0, 0x2235000
	040 Move X0, [X0+2968]
	041 Call 0x1C17CF4
	042 Move X0, 0x2235000
	043 Move X0, [X0+2976]
	044 Call 0x1C17CF4
	045 Move X0, 0x2235000
	046 Move X0, [X0+2984]
	047 Call 0x1C17CF4
	048 Move X0, 0x2236000
	049 Move X0, [X0+3184]
	050 Call 0x1C17CF4
	051 Move X0, 0x222D000
	052 Move X0, [X0+920]
	053 Call 0x1C17CF4
	054 Move X0, 0x2235000
	055 Move X0, [X0+888]
	056 Call 0x1C17CF4
	057 Move X0, 0x222D000
	058 Move X0, [X0+3648]
	059 Call 0x1C17CF4
	060 Move X0, 0x2236000
	061 Move X0, [X0+2968]
	062 Call 0x1C17CF4
	063 Move X0, 0x2235000
	064 Move X0, [X0+2992]
	065 Call 0x1C17CF4
	066 Move X0, 0x2236000
	067 Move X0, [X0+3000]
	068 Call 0x1C17CF4
	069 Move W8, 1
	070 Move [X21+1197], W8
	071 Move X0, [X23]
	072 Move [X31+64], X31
	073 Move [X31+72], X31
	074 Move [X31+48], X31
	075 Move [X31+56], X31
	076 Move [X31+32], X31
	077 Move [X31+40], X31
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfEqual {83}
	081 Compare W20, 0
	082 JumpIfNotEqual {86}
	083 Call 0x1C17DFC
	084 Compare W20, 0
	085 JumpIfEqual {365}
	086 Move X0, [X19+336]
	087 Compare X0, 0
	088 JumpIfEqual {373}
	089 Move X8, 0x2236000
	090 Move X8, [X8+2336]
	091 And X20, X20, 0
	092 Add X2, X31, 72
	093 Move X1, X20
	094 Move X3, [X8]
	095 Call Dictionary`2<NetworkId, Object>.TryGetValue, X0, X1, X2
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {365}
	100 Move X0, [X19+336]
	101 Compare X0, 0
	102 JumpIfEqual {373}
	103 Move X8, 0x2236000
	104 Move X8, [X8+3400]
	105 Move X1, X20
	106 Move X2, [X8]
	107 Call Dictionary`2<NetworkId, Object>.Remove, X0, X1
	108 Move X0, X19
	109 Call Simulation.get_IsServer, X0
	110 Move X8, [X19+88]
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {117}
	115 Compare X8, 0
	116 JumpIfNotEqual {121}
	117 Compare X8, 0
	118 JumpIfEqual {373}
	119 Move W9, [X8+56]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X0, X8
	122 Move X1, X31
	123 Call SimulationConfig.get_SchedulingEnabled, X0
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfNotEqual {178}
	128 Move X0, [X19+176]
	129 Compare X0, 0
	130 JumpIfEqual {373}
	131 Move X8, 0x2235000
	132 Move X8, [X8+2960]
	133 Move X1, [X8]
	134 Call Dictionary`2<Int32, Object>.get_Values, X0
	135 Compare X0, 0
	136 JumpIfEqual {373}
	137 Move X8, 0x2235000
	138 Move X8, [X8+2992]
	139 Move X1, [X8]
	140 Add X8, X31, 8
	141 Call ValueCollection<Int32, Object>.GetEnumerator, X0
	142 NotImplemented "Instruction LDUR not yet implemented."
	143 Move X8, [X31+24]
	144 Move X22, 0x2235000
	145 Move [X31+3], V0
	146 Move [X31+64], X8
	147 Move X22, [X22+2976]
	148 Move X1, [X22]
	149 Add X0, X31, 48
	150 Call Enumerator<Int32, Object>.MoveNext, X0
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfNotEqual {173}
	155 Move X21, [X31+64]
	156 Compare X21, 0
	157 JumpIfEqual {374}
	158 Add X2, X31, 40
	159 Move X0, X21
	160 Move X1, X20
	161 Move X3, X31
	162 Call SimulationConnection.TryGetObjectData, X0, X1, X2
	163 Move TEMP, X0
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfNotEqual {148}
	167 Move X0, [X21+200]
	168 Compare X0, 0
	169 JumpIfEqual {375}
	170 Move X1, [X31+40]
	171 Move X2, X31
	172 Call NetworkObjectPriorityList.Remove, X0, X1
	173 Move X8, 0x2235000
	174 Move X8, [X8+2968]
	175 Add X0, X31, 48
	176 Move X1, [X8]
	177 Call Enumerator<Int32, Object>.Dispose, X0
	178 Move X0, X19
	179 Call Simulation.get_IsServer, X0
	180 Move TEMP, X0
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfNotEqual {197}
	184 Move X0, [X19+88]
	185 Compare X0, 0
	186 JumpIfEqual {373}
	187 Move X1, X31
	188 Call SimulationConfig.get_AreaOfInterestEnabled, X0
	189 Move TEMP, X0
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfNotEqual {197}
	193 Move X1, [X31+72]
	194 Move W2, 1
	195 Move X0, X19
	196 Call Simulation.AOI_RemoveFromAreaOfInterest, X0, X1, X2
	197 Move W8, [X19+76]
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move X1, [X31+72]
	200 Add X0, X19, 352
	201 Move X2, X31
	202 Call ListMigration.Remove, X0, X1
	203 Move X0, [X31+72]
	204 Compare X0, 0
	205 JumpIfEqual {373}
	206 Move X1, X31
	207 Call NetworkObjectMeta.get_Type, X0
	208 Move X22, 0x2235000
	209 Move X22, [X22+888]
	210 Move [X31+32], X0
	211 Move X8, [X22]
	212 Move W9, [X8+224]
	213 Compare W9, 0
	214 JumpIfNotEqual {217}
	215 Move X0, X8
	216 Call 0x1C17DFC
	217 Add X0, X31, 32
	218 Move X1, X31
	219 Call NetworkObjectTypeId.get_IsSceneObject, X0
	220 Move TEMP, X0
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfNotEqual {256}
	224 Move X0, [X31+72]
	225 Compare X0, 0
	226 JumpIfEqual {373}
	227 Move X21, [X19+344]
	228 Move X1, X31
	229 Call NetworkObjectMeta.get_Type, X0
	230 Compare X21, 0
	231 JumpIfEqual {373}
	232 Move X8, 0x2236000
	233 Move X8, [X8+3392]
	234 Move X1, X0
	235 Move X0, X21
	236 Move X2, [X8]
	237 Call Dictionary`2<NetworkObjectTypeId, Object>.ContainsKey, X0, X1
	238 Move TEMP, X0
	239 And TEMP, TEMP, 1
	240 Compare TEMP, 1
	241 JumpIfNotEqual {256}
	242 Move X0, [X31+72]
	243 Compare X0, 0
	244 JumpIfEqual {373}
	245 Move X21, [X19+344]
	246 Move X1, X31
	247 Call NetworkObjectMeta.get_Type, X0
	248 Compare X21, 0
	249 JumpIfEqual {373}
	250 Move X8, 0x2236000
	251 Move X8, [X8+3408]
	252 Move X1, X0
	253 Move X0, X21
	254 Move X2, [X8]
	255 Call Dictionary`2<NetworkObjectTypeId, Object>.Remove, X0, X1
	256 Move X8, [X31+72]
	257 Compare X8, 0
	258 JumpIfEqual {373}
	259 Move X8, [X8+176]
	260 Compare X8, 0
	261 JumpIfEqual {373}
	262 Move W8, [X8+24]
	263 Move TEMP, X8
	264 And TEMP, TEMP, 32
	265 Compare TEMP, 32
	266 JumpIfNotEqual {351}
	267 Move X0, [X19+392]
	268 Compare X0, 0
	269 JumpIfEqual {373}
	270 Move X8, 0x2236000
	271 Move X8, [X8+3184]
	272 Move X1, X20
	273 Move X2, [X8]
	274 Call HashSet`1<NetworkId>.Remove, X0, X1
	275 Move W8, [X19+400]
	276 Add W8, W8, 1
	277 Move [X19+400], W8
	278 Move X0, [X31+72]
	279 Compare X0, 0
	280 JumpIfEqual {373}
	281 Move X1, X31
	282 Call NetworkObjectMeta.get_DataPointer, X0
	283 Compare X0, 0
	284 JumpIfEqual {373}
	285 Move X8, 0x222D000
	286 Move X8, [X8+3648]
	287 Move X21, X0
	288 Move W20, [X21]
	289 Move X0, [X8]
	290 Move W8, [X0+224]
	291 Compare W8, 0
	292 JumpIfNotEqual {294}
	293 Call 0x1C17DFC
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Move X8, [X31+72]
	296 Compare X8, 0
	297 JumpIfEqual {373}
	298 Move X8, [X8+176]
	299 Compare X8, 0
	300 JumpIfEqual {373}
	301 Move X0, [X22]
	302 Move X22, [X8+8]
	303 Move W9, [X0+224]
	304 Compare W9, 0
	305 JumpIfNotEqual {307}
	306 Call 0x1C17DFC
	307 Move X0, X31
	308 Call NetworkObjectTypeId.get_PlayerData
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Move X8, X22
	311 ShiftRight X8, 32
	312 And X8, X8, 0x7FFFFFFF
	313 Move X9, X0
	314 ShiftRight X9, 32
	315 And X9, X9, 0x7FFFFFFF
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Move X0, [X23]
	318 Move W22, [X21+4]
	319 Move W8, [X0+224]
	320 Compare W8, 0
	321 JumpIfNotEqual {323}
	322 Call 0x1C17DFC
	323 Compare W22, 0
	324 JumpIfEqual {334}
	325 Move X0, [X19+384]
	326 Compare X0, 0
	327 JumpIfEqual {373}
	328 Move X8, 0x2236000
	329 Move W2, [X21+4]
	330 Move X8, [X8+2928]
	331 Move X1, X20
	332 Move X3, [X8]
	333 Call Dictionary`2<PlayerRef, NetworkId>.Add, X0, X1, X2
	334 Move X8, 0x2236000
	335 Move X21, [X19+240]
	336 Move X8, [X8+3000]
	337 Add X0, X31, 8
	338 Move X1, X20
	339 Move W2, W31
	340 Move X3, [X8]
	341 Move [X31+8], X31
	342 Call ValueTuple`2<PlayerRef, Boolean>..ctor, X0, X1, X2
	343 Compare X21, 0
	344 JumpIfEqual {373}
	345 Move X8, 0x2236000
	346 Move X1, [X31+8]
	347 Move X8, [X8+2968]
	348 Move X0, X21
	349 Move X2, [X8]
	350 Call Queue`1<ValueTuple`2<PlayerRef, Boolean>>.Enqueue, X0, X1
	351 Move X8, [X31+72]
	352 Compare X8, 0
	353 JumpIfEqual {373}
	354 Move X9, 0x2235000
	355 Move X0, [X19+416]
	356 Move X9, [X9+1048]
	357 Add X1, X8, 176
	358 Move X2, [X9]
	359 Call Allocator.FreeCheckedRef, X0, X1
	360 Move X0, [X31+72]
	361 Compare X0, 0
	362 JumpIfEqual {373}
	363 Move X1, X31
	364 Call NetworkObjectMeta.Release, X0
	365 Move X20, [X31+112]
	366 Move X19, [X31+120]
	367 Move X22, [X31+96]
	368 Move X21, [X31+104]
	369 Move X30, [X31+80]
	370 Move X23, [X31+88]
	371 Add X31, X31, 128
	372 Return 
	373 Call 0x1C17F20
	374 Call 0x1C17F20
	375 Call 0x1C17F20
	376 Move X21, X0
	377 NotImplemented "Instruction CMP not yet implemented."
	378 Move X0, X21
	379 Call 0x3EB2AD0
	380 Move X22, [X0]
	381 Call 0x3EB2AE0
	382 Move X8, 0x2235000
	383 Move X8, [X8+2968]
	384 Add X0, X31, 48
	385 Move X1, [X8]
	386 Call Enumerator<Int32, Object>.Dispose, X0
	387 Compare X22, 0
	388 JumpIfEqual {178}
	389 Move X0, X22
	390 Call 0x1C17F18
	391 Move X22, X31
	392 Move X21, X0
	393 Move X8, 0x2234000
	394 Move X8, [X8+2968]
	395 Move X1, [X8]
	396 Add X0, X31, 48
	397 Call Enumerator<Int32, Object>.Dispose, X0
	398 Compare X22, 0
	399 JumpIfNotEqual {402}
	400 Move X0, X21
	401 Call 0x1D2D690
	402 Move X0, X22
	403 Call 0x1C17F18
	404 Call 0x1991590

Method: Fusion.RpcTargetStatus GetRpcTargetStatus(Fusion.PlayerRef target)

Disassembly:
	0x01ECB048 LDR X0, [X0 + 0xAA0]
	0x01ECB04C BL 0x1C16CF4
	0x01ECB050 MOVZ W8, 0x1
	0x01ECB054 STRB W8, [X20 + 0x4C0]
	0x01ECB058 LDR X0, [X19]
	0x01ECB05C LDR W9, [X0 + 0xE0]
	0x01ECB060 CBNZ W9, 0x1ECB070
	0x01ECB064 BL 0x1C16DFC
	0x01ECB068 LDR X0, [X19]
	0x01ECB06C LDR W9, [X0 + 0xE0]
	0x01ECB070 LDR X8, [X0 + 0xB8]
	0x01ECB074 LDR V0, [X8 + 0xC]
	0x01ECB078 SCVTF S0, S0
	0x01ECB07C FDIV S11, S8, S0
	0x01ECB080 FDIV S12, S9, S0
	0x01ECB084 FDIV S13, S10, S0
	0x01ECB088 CBNZ W9, 0x1ECB098
	0x01ECB08C BL 0x1C16DFC
	0x01ECB090 LDR X8, [X19]
	0x01ECB094 LDR X8, [X8 + 0xB8]
	0x01ECB098 MOVZ W10, 0x7F800000
	0x01ECB09C FCMP S10, 0x0
	0x01ECB0A0 FMOV S0, W10
	0x01ECB0A4 FCVTZS W9, S13
	0x01ECB0A8 MOVZ W11, 0x80000000
	0x01ECB0AC CSET W10, MI
	0x01ECB0B0 FCMP S13, S0
	0x01ECB0B4 CSEL W9, W11, W9, EQ
	0x01ECB0B8 FCMP S9, 0x0
	0x01ECB0BC FCVTZS W12, S12
	0x01ECB0C0 SUB W9, W9, W10
	0x01ECB0C4 CSET W10, MI
	0x01ECB0C8 FCMP S12, S0
	0x01ECB0CC CSEL W12, W11, W12, EQ
	0x01ECB0D0 FCMP S8, 0x0
	0x01ECB0D4 FCVTZS W13, S11
	0x01ECB0D8 SUB W10, W12, W10
	0x01ECB0DC CSET W12, MI
	0x01ECB0E0 FCMP S11, S0
	0x01ECB0E4 CSEL W11, W11, W13, EQ
	0x01ECB0E8 SUB W11, W11, W12
	0x01ECB0EC LDP W13, W12, [X8]
	0x01ECB0F0 LDR W8, [X8 + 0x8]
	0x01ECB0F4 CMP W13, 0x0
	0x01ECB0F8 CINC W13, W13, LT
	0x01ECB0FC CMP W12, 0x0
	0x01ECB100 ADD W0, W11, W13, 0x1, ASR
	0x01ECB104 CINC W11, W12, LT
	0x01ECB108 CMP W8, 0x0
	0x01ECB10C CINC W8, W8, LT
	0x01ECB110 ADD W1, W10, W11, 0x1, ASR
	0x01ECB114 ADD W2, W9, W8, 0x1, ASR
	0x01ECB118 BL 0x1ECB1C4
	0x01ECB11C LDP X20, X19, [X31 + 0x40]
	0x01ECB120 LDR X30, [X31 + 0x30]
	0x01ECB124 LDP D9, D8, [X31 + 0x20]
	0x01ECB128 LDP D11, D10, [X31 + 0x10]
	0x01ECB12C AND X1, X1, 0x0
	0x01ECB130 LDP D13, D12, [X31], #0x50
	0x01ECB134 RET
	0x01ECB138 STP X30, X23, [X31 - 0x30]!
	0x01ECB13C STP X22, X21, [X31 + 0x10]
	0x01ECB140 STP X20, X19, [X31 + 0x20]
	0x01ECB144 ADRP X23, 0x250E000
	0x01ECB148 ADRP X22, 0x2233000
	0x01ECB14C LDRB W8, [X23 + 0x4C4]
	0x01ECB150 LDR X22, [X22 + 0xAA0]
	0x01ECB154 MOV W19, W2
	0x01ECB158 MOV W20, W1
	0x01ECB15C MOV W21, W0
	0x01ECB160 TBNZ X8, 0x0, 0x1ECB178
	0x01ECB164 ADRP X0, 0x2233000
	0x01ECB168 LDR X0, [X0 + 0xAA0]
	0x01ECB16C BL 0x1C16CF4
	0x01ECB170 MOVZ W8, 0x1
	0x01ECB174 STRB W8, [X23 + 0x4C4]
	0x01ECB178 LDR X0, [X22]
	0x01ECB17C LDR W8, [X0 + 0xE0]
	0x01ECB180 CBNZ W8, 0x1ECB188
	0x01ECB184 BL 0x1C16DFC
	0x01ECB188 MOV W0, W21
	0x01ECB18C MOV W1, W20
	0x01ECB190 MOV W2, W19
	0x01ECB194 BL 0x1ECB1C4
	0x01ECB198 LDR X8, [X22]
	0x01ECB19C UBFM X10, X0, 0x20, 0x3F
	0x01ECB1A0 LDP X20, X19, [X31 + 0x20]
	0x01ECB1A4 LDP X22, X21, [X31 + 0x10]
	0x01ECB1A8 LDR X8, [X8 + 0xB8]
	0x01ECB1AC LDP W8, W9, [X8]
	0x01ECB1B0 MADD W9, W9, W1, W10
	0x01ECB1B4 MADD W8, W9, W8, W0
	0x01ECB1B8 ADD W0, W8, 0x1
	0x01ECB1BC LDP X30, X23, [X31], #0x30
	0x01ECB1C0 RET
	0x01ECB1C4 SUB X31, X31, 0x40
	0x01ECB1C8 STP X30, X23, [X31 + 0x10]
	0x01ECB1CC STP X22, X21, [X31 + 0x20]
	0x01ECB1D0 STP X20, X19, [X31 + 0x30]
	0x01ECB1D4 ADRP X22, 0x250E000
	0x01ECB1D8 ADRP X23, 0x2233000
	0x01ECB1DC LDRB W8, [X22 + 0x4C5]
	0x01ECB1E0 LDR X23, [X23 + 0xAA0]
	0x01ECB1E4 MOV W19, W2
	0x01ECB1E8 MOV W20, W1
	0x01ECB1EC MOV W21, W0
	0x01ECB1F0 TBNZ X8, 0x0, 0x1ECB214
	0x01ECB1F4 ADRP X0, 0x2233000
	0x01ECB1F8 LDR X0, [X0 + 0xAA0]
	0x01ECB1FC BL 0x1C16CF4
	0x01ECB200 ADRP X0, 0x2234000
	0x01ECB204 LDR X0, [X0 + 0xD70]
	0x01ECB208 BL 0x1C16CF4
	0x01ECB20C MOVZ W8, 0x1
	0x01ECB210 STRB W8, [X22 + 0x4C5]
	0x01ECB214 LDR X0, [X23]
	0x01ECB218 ADRP X22, 0x2234000
	0x01ECB21C LDR W8, [X0 + 0xE0]
	0x01ECB220 LDR X22, [X22 + 0xD70]
	0x01ECB224 CBNZ W8, 0x1ECB230
	0x01ECB228 BL 0x1C16DFC
	0x01ECB22C LDR X0, [X23]
	0x01ECB230 LDR X8, [X0 + 0xB8]
	0x01ECB234 LDR X4, [X22]
	0x01ECB238 ADD X0, X31, 0x0
	0x01ECB23C LDP W9, W10, [X8]
	0x01ECB240 LDR W8, [X8 + 0x8]
	0x01ECB244 STR W31, [X31 + 0x8]
	0x01ECB248 STR X31, [X31]
	0x01ECB24C CMP W9, W21
	0x01ECB250 SUB W9, W9, 0x1
	0x01ECB254 CSEL W9, W21, W9, GT
	0x01ECB258 CMP W21, 0x0
	0x01ECB25C SUB W11, W10, 0x1
	0x01ECB260 CSEL W1, W31, W9, LT
	0x01ECB264 CMP W10, W20
	0x01ECB268 CSEL W10, W20, W11, GT
	0x01ECB26C CMP W20, 0x0
	0x01ECB270 SUB W9, W8, 0x1
	0x01ECB274 CSEL W2, W31, W10, LT
	0x01ECB278 CMP W8, W19
	0x01ECB27C CSEL W8, W19, W9, GT
	0x01ECB280 CMP W19, 0x0
	0x01ECB284 CSEL W3, W31, W8, LT
	0x01ECB288 BL 0x27BA60C
	0x01ECB28C LDR X0, [X31]
	0x01ECB290 LDR W1, [X31 + 0x8]
	0x01ECB294 LDP X20, X19, [X31 + 0x30]
	0x01ECB298 LDP X22, X21, [X31 + 0x20]
	0x01ECB29C LDP X30, X23, [X31 + 0x10]
	0x01ECB2A0 ADD X31, X31, 0x40
	0x01ECB2A4 RET
	0x01ECB2A8 SUB X31, X31, 0x30
	0x01ECB2AC STP X30, X21, [X31 + 0x10]
	0x01ECB2B0 STP X20, X19, [X31 + 0x20]
	0x01ECB2B4 ADRP X21, 0x250E000
	0x01ECB2B8 ADRP X20, 0x2233000
	0x01ECB2BC LDRB W8, [X21 + 0x4C1]
	0x01ECB2C0 LDR X20, [X20 + 0xAA0]
	0x01ECB2C4 MOV W19, W0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X21, 0x250F000
	009 Move X22, 0x222C000
	010 Move W8, [X21+1198]
	011 Move X22, [X22+3648]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x222C000
	019 Move X0, [X0+3832]
	020 Call 0x1C17CF4
	021 Move X0, 0x222C000
	022 Move X0, [X0+3840]
	023 Call 0x1C17CF4
	024 Move X0, 0x222C000
	025 Move X0, [X0+3648]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1198], W8
	029 Move [X31], X31
	030 Move [X31+8], X31
	031 Move X8, [X19]
	032 Move X0, X19
	033 Move X9, [X8+616]
	034 Move X1, [X8+624]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move X8, [X22]
	037 Move X21, X0
	038 Move W9, [X8+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X8
	042 Call 0x1C17DFC
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W0, 1
	045 Move X0, X19
	046 Call Simulation.get_IsServer, X0
	047 Move X8, [X22]
	048 Move W21, W0
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfEqual {98}
	052 Move TEMP, X21
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {104}
	056 Compare W20, 0
	057 JumpIfEqual {44}
	058 Move X22, 0x250F000
	059 Move W8, [X22+956]
	060 Compare W8, 0
	061 JumpIfNotEqual {70}
	062 Move X0, 0x222E000
	063 Move X0, [X0+32]
	064 Call 0x1C17CF4
	065 Move X0, 0x222A000
	066 Move X0, [X0+1136]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X22+956], W8
	070 Move [X31+16], X31
	071 Move X0, [X19+184]
	072 Compare X0, 0
	073 JumpIfEqual {191}
	074 Move X23, 0x222E000
	075 Move X23, [X23+32]
	076 And X21, X20, 0
	077 Add X2, X31, 16
	078 Move X1, X21
	079 Move X3, [X23]
	080 Call Dictionary`2<PlayerRef, Object>.TryGetValue, X0, X1, X2
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {116}
	085 Move X0, [X31+16]
	086 Compare X0, 0
	087 JumpIfEqual {191}
	088 Move X1, X31
	089 Call SimulationConnection.get_ConnectionIndex, X0
	090 Move X8, 0x222A000
	091 Move X8, [X8+1136]
	092 Move W1, W0
	093 Add X0, X31, 24
	094 Move [X31+24], X31
	095 Move X2, [X8]
	096 Call Nullable`1<Int32>..ctor, X0, X1
	097 Move X8, [X31+24]
	098 Move X0, X8
	099 Call 0x1C17DFC
	100 Move TEMP, X21
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {56}
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move W0, 2
	106 Move X0, [X22]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 NotImplemented "Instruction CMP not yet implemented."
	112 NotImplemented "Instruction CSET not yet implemented."
	113 Move W0, W8
	114 ShiftRight W0, 31
	115 And W0, W0, 0x3FFFFFFF
	116 Move X8, X31
	117 And W31, W8, 255
	118 Move [X31], X8
	119 Move W8, [X22+956]
	120 Move X20, [X19+304]
	121 Compare W8, 0
	122 JumpIfNotEqual {131}
	123 Move X0, 0x222E000
	124 Move X0, [X0+32]
	125 Call 0x1C17CF4
	126 Move X0, 0x222A000
	127 Move X0, [X0+1136]
	128 Call 0x1C17CF4
	129 Move W8, 1
	130 Move [X22+956], W8
	131 Move [X31+16], X31
	132 Move X0, [X19+184]
	133 Compare X0, 0
	134 JumpIfEqual {191}
	135 Move X3, [X23]
	136 Add X2, X31, 16
	137 Move X1, X21
	138 Call Dictionary`2<PlayerRef, Object>.TryGetValue, X0, X1, X2
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfNotEqual {156}
	143 Move X0, [X31+16]
	144 Compare X0, 0
	145 JumpIfEqual {191}
	146 Move X1, X31
	147 Call SimulationConnection.get_ConnectionIndex, X0
	148 Move X8, 0x222A000
	149 Move X8, [X8+1136]
	150 Move W1, W0
	151 Add X0, X31, 24
	152 Move [X31+24], X31
	153 Move X2, [X8]
	154 Call Nullable`1<Int32>..ctor, X0, X1
	155 Move X8, [X31+24]
	156 Move X8, X31
	157 Move X9, 0x222C000
	158 Move X9, [X9+3840]
	159 Add X0, X31, 0
	160 Move [X31], X8
	161 Move X1, [X9]
	162 Call Nullable`1<Int32>.get_Value, X0
	163 Move W1, W0
	164 Add X2, X31, 8
	165 Move X0, X20
	166 Move X3, X31
	167 Call NetPeerGroup.TryGetConnectionByIndex, X0, X1, X2
	168 Move TEMP, X0
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfNotEqual {182}
	172 Move X0, [X31+8]
	173 Move X1, X31
	174 Call NetConnection.get_Active, X0
	175 Move TEMP, X0
	176 And TEMP, TEMP, 1
	177 Compare TEMP, 1
	178 JumpIfNotEqual {182}
	179 Move X8, [X31+8]
	180 Move W8, [X8+64]
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move W0, W31
	183 Move X20, [X31+64]
	184 Move X19, [X31+72]
	185 Move X22, [X31+48]
	186 Move X21, [X31+56]
	187 Move X30, [X31+32]
	188 Move X23, [X31+40]
	189 Add X31, X31, 80
	190 Return X0
	191 Call 0x1C17F20

Method: Fusion.RpcSendMessageResult SendMessage(Fusion.SimulationMessage* message)

Disassembly:
	0x01ECB2C8 TBNZ X8, 0x0, 0x1ECB2EC
	0x01ECB2CC ADRP X0, 0x2233000
	0x01ECB2D0 LDR X0, [X0 + 0xAA0]
	0x01ECB2D4 BL 0x1C16CF4
	0x01ECB2D8 ADRP X0, 0x2234000
	0x01ECB2DC LDR X0, [X0 + 0xD70]
	0x01ECB2E0 BL 0x1C16CF4
	0x01ECB2E4 MOVZ W8, 0x1
	0x01ECB2E8 STRB W8, [X21 + 0x4C1]
	0x01ECB2EC LDR X0, [X20]
	0x01ECB2F0 ADRP X21, 0x2234000
	0x01ECB2F4 SUB W19, W19, 0x1
	0x01ECB2F8 LDR W8, [X0 + 0xE0]
	0x01ECB2FC LDR X21, [X21 + 0xD70]
	0x01ECB300 CBNZ W8, 0x1ECB30C
	0x01ECB304 BL 0x1C16DFC
	0x01ECB308 LDR X0, [X20]
	0x01ECB30C LDR X8, [X0 + 0xB8]
	0x01ECB310 LDR X4, [X21]
	0x01ECB314 ADD X0, X31, 0x0
	0x01ECB318 LDP W9, W8, [X8]
	0x01ECB31C STR W31, [X31 + 0x8]
	0x01ECB320 STR X31, [X31]
	0x01ECB324 MUL W8, W8, W9
	0x01ECB328 SDIV W3, W19, W8
	0x01ECB32C MSUB W8, W8, W3, W19
	0x01ECB330 SDIV W2, W8, W9
	0x01ECB334 MSUB W1, W2, W9, W8
	0x01ECB338 BL 0x27BA60C
	0x01ECB33C LDR X0, [X31]
	0x01ECB340 LDR W1, [X31 + 0x8]
	0x01ECB344 LDP X20, X19, [X31 + 0x20]
	0x01ECB348 LDP X30, X21, [X31 + 0x10]
	0x01ECB34C ADD X31, X31, 0x30
	0x01ECB350 RET
	0x01ECB354 STR X30, [X31 - 0x20]!
	0x01ECB358 STP X20, X19, [X31 + 0x10]
	0x01ECB35C ADRP X20, 0x250E000
	0x01ECB360 LDRB W8, [X20 + 0x4C2]
	0x01ECB364 MOV W19, W0
	0x01ECB368 TBNZ X8, 0x0, 0x1ECB380
	0x01ECB36C ADRP X0, 0x2233000
	0x01ECB370 LDR X0, [X0 + 0xAA0]
	0x01ECB374 BL 0x1C16CF4
	0x01ECB378 MOVZ W8, 0x1
	0x01ECB37C STRB W8, [X20 + 0x4C2]
	0x01ECB380 ADDS W31, W19, 0x1
	0x01ECB384 B.EQ 0x1ECB410
	0x01ECB388 ADRP X20, 0x2233000
	0x01ECB38C LDR X20, [X20 + 0xAA0]
	0x01ECB390 LDR X0, [X20]
	0x01ECB394 LDR W8, [X0 + 0xE0]
	0x01ECB398 CBNZ W8, 0x1ECB3A0
	0x01ECB39C BL 0x1C16DFC
	0x01ECB3A0 MOV W0, W19
	0x01ECB3A4 BL 0x1ECB2A8
	0x01ECB3A8 LDR X8, [X20]
	0x01ECB3AC UBFM X9, X0, 0x20, 0x3F
	0x01ECB3B0 LDR X8, [X8 + 0xB8]
	0x01ECB3B4 LDP W10, W11, [X8]
	0x01ECB3B8 LDP W8, W12, [X8 + 0x8]
	0x01ECB3BC CMP W10, 0x0
	0x01ECB3C0 CINC W10, W10, LT
	0x01ECB3C4 CMP W12, 0x0
	0x01ECB3C8 CINC W13, W12, LT
	0x01ECB3CC CMP W11, 0x0
	0x01ECB3D0 CINC W11, W11, LT
	0x01ECB3D4 CMP W8, 0x0
	0x01ECB3D8 CINC W8, W8, LT
	0x01ECB3DC SUB W10, W0, W10, 0x1, ASR
	0x01ECB3E0 SUB W9, W9, W11, 0x1, ASR
	0x01ECB3E4 SUB W8, W1, W8, 0x1, ASR
	0x01ECB3E8 MUL W10, W10, W12
	0x01ECB3EC MUL W9, W9, W12
	0x01ECB3F0 MUL W8, W8, W12
	0x01ECB3F4 ADD W10, W10, W13, 0x1, ASR
	0x01ECB3F8 ADD W9, W9, W13, 0x1, ASR
	0x01ECB3FC ADD W8, W8, W13, 0x1, ASR
	0x01ECB400 SCVTF S0, W10
	0x01ECB404 SCVTF S1, W9
	0x01ECB408 SCVTF S2, W8
	0x01ECB40C B 0x1ECB41C
	0x01ECB410 FMOV S0, W31
	0x01ECB414 FMOV S1, W31
	0x01ECB418 FMOV S2, W31
	0x01ECB41C LDP X20, X19, [X31 + 0x10]
	0x01ECB420 LDR X30, [X31], #0x20
	0x01ECB424 RET
	0x01ECB428 STR D10, [X31 - 0x30]!
	0x01ECB42C STP D9, D8, [X31 + 0x8]
	0x01ECB430 STR X30, [X31 + 0x18]
	0x01ECB434 STP X20, X19, [X31 + 0x20]
	0x01ECB438 ADRP X20, 0x250E000
	0x01ECB43C ADRP X19, 0x2233000
	0x01ECB440 LDRB W8, [X20 + 0x4C3]
	0x01ECB444 LDR X19, [X19 + 0xAA0]
	0x01ECB448 MOV V8.16B, V2.16B
	0x01ECB44C MOV V9.16B, V1.16B
	0x01ECB450 MOV V10.16B, V0.16B
	0x01ECB454 TBNZ X8, 0x0, 0x1ECB46C
	0x01ECB458 ADRP X0, 0x2233000
	0x01ECB45C LDR X0, [X0 + 0xAA0]
	0x01ECB460 BL 0x1C16CF4
	0x01ECB464 MOVZ W8, 0x1
	0x01ECB468 STRB W8, [X20 + 0x4C3]
	0x01ECB46C LDR X0, [X19]
	0x01ECB470 LDR W8, [X0 + 0xE0]
	0x01ECB474 CBNZ W8, 0x1ECB47C
	0x01ECB478 BL 0x1C16DFC
	0x01ECB47C MOV V0.16B, V10.16B
	0x01ECB480 MOV V1.16B, V9.16B
	0x01ECB484 MOV V2.16B, V8.16B
	0x01ECB488 BL 0x1ECB010
	0x01ECB48C LDP X20, X19, [X31 + 0x20]
	0x01ECB490 LDR X30, [X31 + 0x18]
	0x01ECB494 LDP D9, D8, [X31 + 0x8]
	0x01ECB498 UBFM X8, X0, 0x20, 0x3F
	0x01ECB49C MOV X2, X1
	0x01ECB4A0 MOV W1, W8
	0x01ECB4A4 LDR V10, [X31], #0x30
	0x01ECB4A8 B 0x1ECB138
	0x01ECB4AC TBNZ X0, 0x1F, 0x1ECB4C0
	0x01ECB4B0 SUB W8, W1, 0x1
	0x01ECB4B4 CMP W0, W1
	0x01ECB4B8 CSEL W0, W0, W8, LT
	0x01ECB4BC RET
	0x01ECB4C0 MOV W0, W31
	0x01ECB4C4 RET
	0x01ECB4C8 STR X30, [X31 - 0x20]!
	0x01ECB4CC STP X20, X19, [X31 + 0x10]
	0x01ECB4D0 ADRP X19, 0x250E000
	0x01ECB4D4 ADRP X20, 0x2233000
	0x01ECB4D8 LDRB W8, [X19 + 0x4C6]
	0x01ECB4DC LDR X20, [X20 + 0xAA0]
	0x01ECB4E0 TBNZ X8, 0x0, 0x1ECB4F8
	0x01ECB4E4 ADRP X0, 0x2233000
	0x01ECB4E8 LDR X0, [X0 + 0xAA0]
	0x01ECB4EC BL 0x1C16CF4
	0x01ECB4F0 MOVZ W8, 0x1
	0x01ECB4F4 STRB W8, [X19 + 0x4C6]
	0x01ECB4F8 LDR X8, [X20]
	0x01ECB4FC ADRP X9, 0xFFFFFFFFFEC20000
	0x01ECB500 LDR V0, [X9 + 0x95]
	0x01ECB504 LDP X20, X19, [X31 + 0x10]
	0x01ECB508 LDR X8, [X8 + 0xB8]
	0x01ECB50C STR V0, [X8]
	0x01ECB510 LDR X30, [X31], #0x20
	0x01ECB514 RET
	0x01ECB518 SUB X31, X31, 0x50
	0x01ECB51C STR X30, [X31 + 0x30]
	0x01ECB520 STP X20, X19, [X31 + 0x40]
	0x01ECB524 MRS X20, 0xC000
	0x01ECB528 LDR X8, [X20 + 0x28]
	0x01ECB52C MOV X1, X31
	0x01ECB530 MOV X19, X0
	0x01ECB534 STR X8, [X31 + 0x28]
	0x01ECB538 BL 0x1EC0810
	0x01ECB53C CMP W0, 0x2
	0x01ECB540 B.EQ 0x1ECB554
	0x01ECB544 LDR X8, [X19 + 0x60]
	0x01ECB548 CBZ X8, 0x1ECB58C
	0x01ECB54C LDR X0, [X8 + 0x48]
	0x01ECB550 CBNZ X0, 0x1ECB56C
	0x01ECB554 ADD X8, X31, 0x0
	0x01ECB558 MOV X0, X19
	0x01ECB55C MOV X1, X31
	0x01ECB560 BL 0x1EC02E4
	0x01ECB564 LDP X0, X1, [X31]
	0x01ECB568 BL 0x1ECB594
	0x01ECB56C LDR X8, [X20 + 0x28]
	0x01ECB570 LDR X9, [X31 + 0x28]
	0x01ECB574 CMP X8, X9
	0x01ECB578 B.NE 0x1ECB590
	0x01ECB57C LDP X20, X19, [X31 + 0x40]
	0x01ECB580 LDR X30, [X31 + 0x30]
	0x01ECB584 ADD X31, X31, 0x50
	0x01ECB588 RET
	0x01ECB58C BL 0x1C16F20
	0x01ECB590 BL 0x3EB1B20
	0x01ECB594 STR X30, [X31 - 0x30]!
	0x01ECB598 STP X22, X21, [X31 + 0x10]
	0x01ECB59C STP X20, X19, [X31 + 0x20]
	0x01ECB5A0 ADRP X19, 0x250E000
	0x01ECB5A4 ADRP X22, 0x2234000
	0x01ECB5A8 LDRB W8, [X19 + 0x518]
	0x01ECB5AC LDR X22, [X22 + 0xD78]
	0x01ECB5B0 MOV X20, X1
	0x01ECB5B4 UBFM X21, X0, 0x20, 0x3F
	0x01ECB5B8 TBNZ X8, 0x0, 0x1ECB5D0
	0x01ECB5BC ADRP X0, 0x2234000
	0x01ECB5C0 LDR X0, [X0 + 0xD78]
	0x01ECB5C4 BL 0x1C16CF4
	0x01ECB5C8 MOVZ W8, 0x1
	0x01ECB5CC STRB W8, [X19 + 0x518]
	0x01ECB5D0 LDR X0, [X22]
	0x01ECB5D4 BL 0x1C16F10
	0x01ECB5D8 ADRP X8, 0xFFFFFFFFFEC21000
	0x01ECB5DC LDR V0, [X8 + 0x99]
	0x01ECB5E0 MOVZ X8, 0x40140000
	0x01ECB5E4 MOVI V1.2S, 0x2
	0x01ECB5E8 MOV X1, X31
	0x01ECB5EC MOV X19, X0
	0x01ECB5F0 STR X8, [X0 + 0x20]
	0x01ECB5F4 STR V0, [X0 + 0x1]
	0x01ECB5F8 STR D1, [X0 + 0x28]
	0x01ECB5FC BL 0x33BDD8C
	0x01ECB600 CMP W21, 0x20
	0x01ECB604 B.LE 0x1ECB62C
	0x01ECB608 CMP W21, 0x64
	0x01ECB60C B.LE 0x1ECB650
	0x01ECB610 CMP W21, 0x80
	0x01ECB614 B.LE 0x1ECB698
	0x01ECB618 CMP W21, 0x100
	0x01ECB61C B.EQ 0x1ECB6D0
	0x01ECB620 CMP W21, 0xF0
	0x01ECB624 B.EQ 0x1ECB6D0
	0x01ECB628 B 0x1ECB6E0
	0x01ECB62C CMP W21, 0x10
	0x01ECB630 B.LE 0x1ECB66C
	0x01ECB634 CMP W21, 0x18
	0x01ECB638 B.LE 0x1ECB6AC
	0x01ECB63C CMP W21, 0x1E
	0x01ECB640 B.EQ 0x1ECB6D0
	0x01ECB644 CMP W21, 0x20
	0x01ECB648 B.EQ 0x1ECB6D0
	0x01ECB64C B 0x1ECB6E0
	0x01ECB650 CMP W21, 0x3C
	0x01ECB654 B.LE 0x1ECB6C0
	0x01ECB658 CMP W21, 0x40
	0x01ECB65C B.EQ 0x1ECB6D0
	0x01ECB660 CMP W21, 0x64
	0x01ECB664 B.EQ 0x1ECB6D0
	0x01ECB668 B 0x1ECB6E0
	0x01ECB66C B.HI 0x1ECB6E0
	0x01ECB670 MOVZ W8, 0x1
	0x01ECB674 MOVZ W10, 0x500
	0x01ECB678 LSLV W9, W8, W21
	0x01ECB67C MOVK W10, 0x10000
	0x01ECB680 ANDS W31, W9, W10, 0x0
	0x01ECB684 B.EQ 0x1ECB6E0
	0x01ECB688 MOVZ X9, 0x40240000
	0x01ECB68C STR X9, [X19 + 0x18]
	0x01ECB690 STR W8, [X19 + 0x28]
	0x01ECB694 B 0x1ECB6E0
	0x01ECB698 CMP W21, 0x78
	0x01ECB69C B.EQ 0x1ECB6D0
	0x01ECB6A0 CMP W21, 0x80
	0x01ECB6A4 B.EQ 0x1ECB6D0
	0x01ECB6A8 B 0x1ECB6E0
	0x01ECB6AC CMP W21, 0x14
	0x01ECB6B0 B.EQ 0x1ECB6D0
	0x01ECB6B4 CMP W21, 0x18
	0x01ECB6B8 B.EQ 0x1ECB6D0
	0x01ECB6BC B 0x1ECB6E0
	0x01ECB6C0 CMP W21, 0x32
	0x01ECB6C4 B.EQ 0x1ECB6D0
	0x01ECB6C8 CMP W21, 0x3C
	0x01ECB6CC B.NE 0x1ECB6E0
	0x01ECB6D0 MOVZ X8, 0x40140000
	0x01ECB6D4 MOVZ W9, 0x1
	0x01ECB6D8 STR X8, [X19 + 0x18]
	0x01ECB6DC STR W9, [X19 + 0x28]
	0x01ECB6E0 UBFM X8, X20, 0x20, 0x3F
	0x01ECB6E4 CMP W8, 0x20
	0x01ECB6E8 B.LE 0x1ECB710
	0x01ECB6EC CMP W8, 0x64
	0x01ECB6F0 B.LE 0x1ECB734
	0x01ECB6F4 CMP W8, 0x80
	0x01ECB6F8 B.LE 0x1ECB774
	0x01ECB6FC CMP W8, 0x100
	0x01ECB700 B.EQ 0x1ECB7B4
	0x01ECB704 CMP W8, 0xF0
	0x01ECB708 B.EQ 0x1ECB7B4
	0x01ECB70C B 0x1ECB7C4
	0x01ECB710 CMP W8, 0x10
	0x01ECB714 B.LE 0x1ECB750
	0x01ECB718 CMP W8, 0x18
	0x01ECB71C B.LE 0x1ECB788
	0x01ECB720 CMP W8, 0x1E
	0x01ECB724 B.EQ 0x1ECB798
	0x01ECB728 CMP W8, 0x20
	0x01ECB72C B.EQ 0x1ECB798
	0x01ECB730 B 0x1ECB7C4
	0x01ECB734 CMP W8, 0x3C
	0x01ECB738 B.LE 0x1ECB7A4
	0x01ECB73C CMP W8, 0x40
	0x01ECB740 B.EQ 0x1ECB7B4
	0x01ECB744 CMP W8, 0x64
	0x01ECB748 B.EQ 0x1ECB7B4
	0x01ECB74C B 0x1ECB7C4
	0x01ECB750 B.HI 0x1ECB7C4
	0x01ECB754 MOVZ W9, 0x1
	0x01ECB758 MOVZ W10, 0x500
	0x01ECB75C LSLV W8, W9, W8
	0x01ECB760 MOVK W10, 0x10000
	0x01ECB764 ANDS W31, W8, W10, 0x0
	0x01ECB768 B.EQ 0x1ECB7C4
	0x01ECB76C MOVZ X8, 0x40240000
	0x01ECB770 B 0x1ECB7BC
	0x01ECB774 CMP W8, 0x78
	0x01ECB778 B.EQ 0x1ECB7B4
	0x01ECB77C CMP W8, 0x80
	0x01ECB780 B.EQ 0x1ECB7B4
	0x01ECB784 B 0x1ECB7C4
	0x01ECB788 CMP W8, 0x14
	0x01ECB78C B.EQ 0x1ECB798
	0x01ECB790 CMP W8, 0x18
	0x01ECB794 B.NE 0x1ECB7C4
	0x01ECB798 MOVZ X8, 0x40140000
	0x01ECB79C MOVZ W9, 0x1
	0x01ECB7A0 B 0x1ECB7BC
	0x01ECB7A4 CMP W8, 0x32
	0x01ECB7A8 B.EQ 0x1ECB7B4
	0x01ECB7AC CMP W8, 0x3C
	0x01ECB7B0 B.NE 0x1ECB7C4
	0x01ECB7B4 MOVZ X8, 0x40140000
	0x01ECB7B8 MOVZ W9, 0x2
	0x01ECB7BC STR X8, [X19 + 0x20]
	0x01ECB7C0 STR W9, [X19 + 0x2C]
	0x01ECB7C4 MOV X0, X19
	0x01ECB7C8 LDP X20, X19, [X31 + 0x20]
	0x01ECB7CC LDP X22, X21, [X31 + 0x10]
	0x01ECB7D0 LDR X30, [X31], #0x30
	0x01ECB7D4 RET
	0x01ECB7D8 LDR X0, [X0 + 0x1A8]
	0x01ECB7DC RET
	0x01ECB7E0 STR X30, [X31 - 0x20]!
	0x01ECB7E4 STP X20, X19, [X31 + 0x10]
	0x01ECB7E8 ADRP X20, 0x250E000
	0x01ECB7EC LDRB W8, [X20 + 0x4C7]
	0x01ECB7F0 MOV X19, X0
	0x01ECB7F4 TBNZ X8, 0x0, 0x1ECB80C
	0x01ECB7F8 ADRP X0, 0x2233000
	0x01ECB7FC LDR X0, [X0 + 0x488]
	0x01ECB800 BL 0x1C16CF4
	0x01ECB804 MOVZ W8, 0x1
	0x01ECB808 STRB W8, [X20 + 0x4C7]
	0x01ECB80C LDR X0, [X19 + 0x1B8]
	0x01ECB810 CBZ X0, 0x1ECB858
	0x01ECB814 MOV X1, X31
	0x01ECB818 BL 0x1EBE0C0
	0x01ECB81C MOV W8, W0
	0x01ECB820 MOV X0, X31
	0x01ECB824 TBNZ X8, 0x0, 0x1ECB84C
	0x01ECB828 LDR X8, [X19 + 0x1B8]
	0x01ECB82C CBZ X8, 0x1ECB858

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+88], X25
	004 Move [X31+96], X24
	005 Move [X31+104], X23
	006 Move [X31+112], X22
	007 Move [X31+120], X21
	008 Move [X31+128], X20
	009 Move [X31+136], X19
	010 Move X21, 0x250F000
	011 Move W8, [X21+1199]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x222C000
	019 Move X0, [X0+3832]
	020 Call 0x1C17CF4
	021 Move X0, 0x222C000
	022 Move X0, [X0+3840]
	023 Call 0x1C17CF4
	024 Move X0, 0x222C000
	025 Move X0, [X0+3648]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1199], W8
	029 Move [X31+60], W31
	030 Move [X31+40], X31
	031 Move [X31+48], X31
	032 Move [X31+36], W31
	033 Move [X31+16], X31
	034 Move [X31+24], X31
	035 Move [X31+12], W31
	036 Move W8, [X19+20]
	037 Move W9, 69
	038 Move X21, X31
	039 And W31, W8, W9
	040 Move W21, [X19+28]
	041 Move W8, [X20+72]
	042 Move [X19], W8
	043 Move X0, X20
	044 Call Simulation.get_IsClient, X0
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {85}
	049 Move X8, 0x222C000
	050 Move X8, [X8+3648]
	051 Move X0, [X8]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X31
	057 Call PlayerRef.get_None
	058 Move X0, [X20+304]
	059 Move W1, W31
	060 Move X2, X31
	061 Call NetPeerGroup.GetConnectionByIndex, X0, X1
	062 Move X22, X0
	063 Move X1, X31
	064 Call NetConnection.get_Active, X0
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {268}
	069 Move W8, [X22+64]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Add X3, X31, 60
	072 Move X0, X20
	073 Move X1, X22
	074 Move X2, X21
	075 Call Simulation.VerifyMessageTargetObject, X0, X1, X2, X3
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {308}
	080 Move X0, X20
	081 Move X1, X19
	082 Move X2, X22
	083 Call Simulation.SendMessageInternal, X0, X1, X2
	084 Move W22, 257
	085 Move W8, [X19+20]
	086 And W31, W8, 48
	087 Move W22, [X19+24]
	088 Move [X19+24], W31
	089 Move X24, 0x250F000
	090 Move W8, [X24+956]
	091 Compare W8, 0
	092 JumpIfNotEqual {101}
	093 Move X0, 0x222E000
	094 Move X0, [X0+32]
	095 Call 0x1C17CF4
	096 Move X0, 0x222A000
	097 Move X0, [X0+1136]
	098 Call 0x1C17CF4
	099 Move W8, 1
	100 Move [X24+956], W8
	101 Move [X31+64], X31
	102 Move X0, [X20+184]
	103 Compare X0, 0
	104 JumpIfEqual {317}
	105 Move X25, 0x222E000
	106 Move X25, [X25+32]
	107 Move X3, [X25]
	108 Add X2, X31, 64
	109 Move X1, X22
	110 Call Dictionary`2<PlayerRef, Object>.TryGetValue, X0, X1, X2
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {189}
	115 Move X0, [X31+64]
	116 Compare X0, 0
	117 JumpIfEqual {319}
	118 Move X1, X31
	119 Call SimulationConnection.get_ConnectionIndex, X0
	120 Move W1, W0
	121 Move X8, 0x222A000
	122 Move X8, [X8+1136]
	123 Move [X31+72], X31
	124 Move X2, [X8]
	125 Add X0, X31, 72
	126 Call Nullable`1<Int32>..ctor, X0, X1
	127 Move X8, [X31+72]
	128 Move X0, [X20+304]
	129 Move X1, X31
	130 Call NetPeerGroup.ConnectionIterator, X0
	131 Move W23, W31
	132 Move W22, W31
	133 Move [X31+16], X0
	134 Move [X31+24], X1
	135 Add X0, X31, 16
	136 Move X1, X31
	137 Call Iterator.Next, X0
	138 Move TEMP, X0
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfNotEqual {178}
	142 Add X0, X31, 16
	143 Move X1, X31
	144 Call Iterator.get_Current, X0
	145 Move W8, [X0+64]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Add X0, X31, 16
	148 Move X1, X31
	149 Call Iterator.get_Current, X0
	150 Move X1, X0
	151 Move X8, [X20]
	152 Move X9, [X8+696]
	153 Move X2, [X8+704]
	154 Move X0, X20
	155 NotImplemented "Instruction BLR not yet implemented."
	156 Add X0, X31, 16
	157 Move X1, X31
	158 Call Iterator.get_Current, X0
	159 Move X1, X0
	160 Add X3, X31, 12
	161 Move X0, X20
	162 Move X2, X21
	163 Call Simulation.VerifyMessageTargetObject, X0, X1, X2, X3
	164 Move W22, 1
	165 Move TEMP, X0
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfNotEqual {135}
	169 Add X0, X31, 16
	170 Move X1, X31
	171 Call Iterator.get_Current, X0
	172 Move X2, X0
	173 Move X0, X20
	174 Move X1, X19
	175 Call Simulation.SendMessageInternal, X0, X1, X2
	176 Add W23, W23, 1
	177 Move W22, 1
	178 Move X21, X31
	179 Move TEMP, X22
	180 And TEMP, TEMP, 1
	181 Compare TEMP, 1
	182 JumpIfNotEqual {305}
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move W8, 1283
	185 Move W9, 3592
	186 NotImplemented "Instruction CSEL not yet implemented."
	187 Compare W23, 0
	188 JumpIfNotEqual {292}
	189 Move X8, X31
	190 And W31, W8, 255
	191 Move [X31+40], X8
	192 Move W8, [X24+956]
	193 Move X23, [X20+304]
	194 Compare W8, 0
	195 JumpIfNotEqual {204}
	196 Move X0, 0x222E000
	197 Move X0, [X0+32]
	198 Call 0x1C17CF4
	199 Move X0, 0x222A000
	200 Move X0, [X0+1136]
	201 Call 0x1C17CF4
	202 Move W8, 1
	203 Move [X24+956], W8
	204 Move [X31+64], X31
	205 Move X0, [X20+184]
	206 Compare X0, 0
	207 JumpIfEqual {318}
	208 Move X3, [X25]
	209 Add X2, X31, 64
	210 Move X1, X22
	211 Call Dictionary`2<PlayerRef, Object>.TryGetValue, X0, X1, X2
	212 Move TEMP, X0
	213 And TEMP, TEMP, 1
	214 Compare TEMP, 1
	215 JumpIfNotEqual {229}
	216 Move X0, [X31+64]
	217 Compare X0, 0
	218 JumpIfEqual {320}
	219 Move X1, X31
	220 Call SimulationConnection.get_ConnectionIndex, X0
	221 Move W1, W0
	222 Move X8, 0x222A000
	223 Move X8, [X8+1136]
	224 Move [X31+72], X31
	225 Move X2, [X8]
	226 Add X0, X31, 72
	227 Call Nullable`1<Int32>..ctor, X0, X1
	228 Move X8, [X31+72]
	229 Move X8, X31
	230 Move X9, 0x222C000
	231 Move X9, [X9+3840]
	232 Move [X31+40], X8
	233 Move X1, [X9]
	234 Add X0, X31, 40
	235 Call Nullable`1<Int32>.get_Value, X0
	236 Move W1, W0
	237 Add X2, X31, 48
	238 Move X0, X23
	239 Move X3, X31
	240 Call NetPeerGroup.TryGetConnectionByIndex, X0, X1, X2
	241 Move TEMP, X0
	242 And TEMP, TEMP, 1
	243 Compare TEMP, 1
	244 JumpIfNotEqual {268}
	245 Move X0, [X31+48]
	246 Move X1, X31
	247 Call NetConnection.get_Active, X0
	248 Move TEMP, X0
	249 And TEMP, TEMP, 1
	250 Compare TEMP, 1
	251 JumpIfNotEqual {268}
	252 Move X1, [X31+48]
	253 Move W8, [X1+64]
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Add X3, X31, 36
	256 Move X0, X20
	257 Move X2, X21
	258 Call Simulation.VerifyMessageTargetObject, X0, X1, X2, X3
	259 Move TEMP, X0
	260 And TEMP, TEMP, 1
	261 Compare TEMP, 1
	262 JumpIfNotEqual {312}
	263 Move X2, [X31+48]
	264 Move X0, X20
	265 Move X1, X19
	266 Call Simulation.SendMessageInternal, X0, X1, X2
	267 Move W22, 258
	268 Move X21, X31
	269 Move W22, 518
	270 Move X23, 0x250F000
	271 Move W8, [X23+1212]
	272 Compare W8, 0
	273 JumpIfNotEqual {279}
	274 Move X0, 0x2235000
	275 Move X0, [X0+3416]
	276 Call 0x1C17CF4
	277 Move W8, 1
	278 Move [X23+1212], W8
	279 Move X9, 0x2235000
	280 Move W8, [X19+16]
	281 Move X9, [X9+3416]
	282 Move X2, X31
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Move X1, [X9]
	285 NotImplemented "Instruction CSET not yet implemented."
	286 Call Assert.Always, X0, X1
	287 Compare X20, 0
	288 JumpIfEqual {316}
	289 Move X0, X20
	290 Move X1, X19
	291 Call Simulation.TempFree, X0, X1
	292 Compare X21, 0
	293 JumpIfNotEqual {314}
	294 Move W0, W22
	295 Move X20, [X31+128]
	296 Move X19, [X31+136]
	297 Move X22, [X31+112]
	298 Move X21, [X31+120]
	299 Move X24, [X31+96]
	300 Move X23, [X31+104]
	301 Move X30, [X31+80]
	302 Move X25, [X31+88]
	303 Add X31, X31, 144
	304 Return X0
	305 Move W22, 1543
	306 Compare W23, 0
	307 JumpIfNotEqual {292}
	308 Move W0, [X31+60]
	309 Call Simulation.<SendMessage>g__VerifyResultToSendMessageResult|342_0, X0
	310 Move X21, X31
	311 Move W22, 2565
	312 Move W0, [X31+36]
	313 Call Simulation.<SendMessage>g__VerifyResultToSendMessageResult|342_0, X0
	314 Move X0, X21
	315 Call 0x1C17F18
	316 Call 0x1C17F20
	317 Call 0x1C17F20
	318 Call 0x1C17F20
	319 Call 0x1C17F20
	320 Call 0x1C17F20
	321 Move X21, X0
	322 Move [X31+8], W31
	323 Move X21, X0
	324 Move [X31+8], W23
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Move X0, X21
	327 Call 0x3EB2AD0
	328 Move X23, [X0]
	329 Call 0x3EB2AE0
	330 Move X21, X23
	331 Move W23, [X31+8]
	332 Move W22, W31
	333 Compare W23, 0
	334 JumpIfNotEqual {292}
	335 Move X23, X31
	336 Move X21, X0
	337 Move W8, [X31+8]
	338 Compare W8, 0
	339 JumpIfNotEqual {363}
	340 Move X22, 0x250F000
	341 Move W8, [X22+1212]
	342 Compare W8, 0
	343 JumpIfNotEqual {349}
	344 Move X0, 0x2235000
	345 Move X0, [X0+3416]
	346 Call 0x1C17CF4
	347 Move W8, 1
	348 Move [X22+1212], W8
	349 Move X9, 0x2235000
	350 Move W8, [X19+16]
	351 Move X9, [X9+3416]
	352 NotImplemented "Instruction CMP not yet implemented."
	353 Move X1, [X9]
	354 NotImplemented "Instruction CSET not yet implemented."
	355 Move X2, X31
	356 Call Assert.Always, X0, X1
	357 Compare X20, 0
	358 JumpIfNotEqual {360}
	359 Call 0x1C17F20
	360 Move X0, X20
	361 Move X1, X19
	362 Call Simulation.TempFree, X0, X1
	363 Compare X23, 0
	364 JumpIfNotEqual {367}
	365 Move X0, X21
	366 Call 0x1D2D690
	367 Move X0, X23
	368 Call 0x1C17F18
	369 Call 0x1991590

Method: System.Boolean ForwardMessage(Fusion.SimulationMessage* message, Fusion.PlayerRef target, System.Boolean required)

Disassembly:
	0x01ECBAEC ADD X3, X31, 0x48
	0x01ECBAF0 MOV X0, X20
	0x01ECBAF4 MOV X1, X21
	0x01ECBAF8 BL 0x22553D8
	0x01ECBAFC TBZ X0, 0x0, 0x1ECBAB8
	0x01ECBB00 LDR X8, [X31 + 0x48]
	0x01ECBB04 CBZ X8, 0x1ECBB94
	0x01ECBB08 CBZ X19, 0x1ECBB98
	0x01ECBB0C LDR W10, [X19 + 0x1C]
	0x01ECBB10 LDR W1, [X8]
	0x01ECBB14 LDR X8, [X19 + 0x10]
	0x01ECBB18 LDR X9, [X26]
	0x01ECBB1C ADD W10, W10, 0x1
	0x01ECBB20 STR W10, [X19 + 0x1C]
	0x01ECBB24 CBZ X8, 0x1ECBB90
	0x01ECBB28 LDRSW X10, [X19 + 0x18]
	0x01ECBB2C LDR W11, [X8 + 0x18]
	0x01ECBB30 CMP W10, W11
	0x01ECBB34 B.CS 0x1ECBB4C
	0x01ECBB38 ADD W9, W10, 0x1
	0x01ECBB3C ADD X8, X8, X10, 0x2, LSL
	0x01ECBB40 STR W9, [X19 + 0x18]
	0x01ECBB44 STR W1, [X8 + 0x20]
	0x01ECBB48 B 0x1ECBAB8
	0x01ECBB4C LDR X8, [X9 + 0x20]
	0x01ECBB50 LDR X8, [X8 + 0xC0]
	0x01ECBB54 LDR X2, [X8 + 0x70]
	0x01ECBB58 MOV X0, X19
	0x01ECBB5C BL 0x3024D50
	0x01ECBB60 B 0x1ECBAB8
	0x01ECBB64 LDR X1, [X22]
	0x01ECBB68 ADD X0, X31, 0x20
	0x01ECBB6C BL 0x2BC2C94
	0x01ECBB70 MOV X0, X19
	0x01ECBB74 LDP X20, X19, [X31 + 0x80]
	0x01ECBB78 LDP X22, X21, [X31 + 0x70]
	0x01ECBB7C LDP X24, X23, [X31 + 0x60]
	0x01ECBB80 LDP X26, X25, [X31 + 0x50]
	0x01ECBB84 LDR X30, [X31 + 0x40]
	0x01ECBB88 ADD X31, X31, 0x90
	0x01ECBB8C RET
	0x01ECBB90 BL 0x1C16F20
	0x01ECBB94 BL 0x1C16F20
	0x01ECBB98 BL 0x1C16F20
	0x01ECBB9C BL 0x1C16F20
	0x01ECBBA0 B 0x1ECBBB8
	0x01ECBBA4 B 0x1ECBBB8
	0x01ECBBA8 B 0x1ECBBB8
	0x01ECBBAC B 0x1ECBBB8
	0x01ECBBB0 B 0x1ECBBB8
	0x01ECBBB4 B 0x1ECBBB8
	0x01ECBBB8 CMP W1, 0x1
	0x01ECBBBC B.NE 0x1ECBBE4
	0x01ECBBC0 BL 0x3EB1AD0
	0x01ECBBC4 LDR X20, [X0]
	0x01ECBBC8 BL 0x3EB1AE0
	0x01ECBBCC LDR X1, [X22]
	0x01ECBBD0 ADD X0, X31, 0x20
	0x01ECBBD4 BL 0x2BC2C94
	0x01ECBBD8 CBZ X20, 0x1ECBB70
	0x01ECBBDC MOV X0, X20
	0x01ECBBE0 BL 0x1C16F18
	0x01ECBBE4 MOV X19, X0
	0x01ECBBE8 MOV X20, X31
	0x01ECBBEC B 0x1ECBBF4
	0x01ECBBF0 MOV X19, X0
	0x01ECBBF4 LDR X1, [X22]
	0x01ECBBF8 ADD X0, X31, 0x20
	0x01ECBBFC BL 0x2BC2C94
	0x01ECBC00 CBNZ X20, 0x1ECBC0C
	0x01ECBC04 MOV X0, X19
	0x01ECBC08 BL 0x1D2C690
	0x01ECBC0C MOV X0, X20
	0x01ECBC10 BL 0x1C16F18
	0x01ECBC14 BL 0x1990590
	0x01ECBC18 STP X30, X19, [X31 - 0x10]!
	0x01ECBC1C LDR X1, [X0 + 0x1A8]
	0x01ECBC20 MOV X19, X0
	0x01ECBC24 CBZ X1, 0x1ECBC44
	0x01ECBC28 LDR X0, [X19 + 0x130]
	0x01ECBC2C MOV X2, X31
	0x01ECBC30 MOV X3, X31
	0x01ECBC34 BL 0x1EFF96C
	0x01ECBC38 MOV X0, X19
	0x01ECBC3C MOV X1, X31
	0x01ECBC40 BL 0x1EC63FC
	0x01ECBC44 STR X31, [X19 + 0x1A8]
	0x01ECBC48 LDP X30, X19, [X31], #0x10
	0x01ECBC4C RET
	0x01ECBC50 STR X30, [X31 - 0x30]!
	0x01ECBC54 STP X22, X21, [X31 + 0x10]
	0x01ECBC58 STP X20, X19, [X31 + 0x20]
	0x01ECBC5C ADRP X21, 0x250E000
	0x01ECBC60 ADRP X22, 0x222B000
	0x01ECBC64 LDRB W8, [X21 + 0x4CA]
	0x01ECBC68 LDR X22, [X22 + 0xE40]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0x250F000
	008 Move W8, [X22+1200]
	009 Move X21, X2
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x222C000
	017 Move X0, [X0+3648]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1200], W8
	021 Move X22, 0x250F000
	022 Move W8, [X22+753]
	023 Move [X31+24], X31
	024 Move [X31+8], X31
	025 Move [X31+4], W31
	026 Compare W8, 0
	027 JumpIfNotEqual {33}
	028 Move X0, 0x222E000
	029 Move X0, [X0+32]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+753], W8
	033 Move X0, [X20+184]
	034 Compare X0, 0
	035 JumpIfEqual {115}
	036 Move X8, 0x222E000
	037 Move X8, [X8+32]
	038 And X1, X21, 0
	039 Add X2, X31, 24
	040 Move X3, [X8]
	041 Call Dictionary`2<PlayerRef, Object>.TryGetValue, X0, X1, X2
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {107}
	046 Move X0, [X31+24]
	047 Compare X0, 0
	048 JumpIfEqual {115}
	049 Move X21, [X20+304]
	050 Move X1, X31
	051 Call SimulationConnection.get_ConnectionIndex, X0
	052 Move W1, W0
	053 Add X2, X31, 8
	054 Move X0, X21
	055 Move X3, X31
	056 Call NetPeerGroup.TryGetConnectionByIndex, X0, X1, X2
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {107}
	061 Move X0, [X31+8]
	062 Move X1, X31
	063 Call NetConnection.get_Active, X0
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {107}
	068 Move X1, [X31+8]
	069 Move W8, [X1+64]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move W8, [X19+20]
	072 Move W9, 69
	073 And W31, W8, W9
	074 Move X2, X31
	075 Move W2, [X19+28]
	076 Add X3, X31, 4
	077 Move X0, X20
	078 Call Simulation.VerifyMessageTargetObject, X0, X1, X2, X3
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {107}
	083 Move W8, [X19+20]
	084 Move W9, [X20+72]
	085 And W31, W8, 48
	086 Move [X19], W9
	087 Move X8, 0x222C000
	088 Move X8, [X8+3648]
	089 Move X0, [X8]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move X0, X31
	095 Call PlayerRef.get_None
	096 Move [X19+24], W0
	097 Move W8, [X19+12]
	098 Compare W8, 0
	099 JumpIfNotEqual {102}
	100 Move W8, [X19+8]
	101 Move [X19+12], W8
	102 Move X2, [X31+8]
	103 Move X0, X20
	104 Move X1, X19
	105 Call Simulation.SendMessageInternal, X0, X1, X2
	106 Move W0, 1
	107 Move W0, W31
	108 Move X20, [X31+48]
	109 Move X19, [X31+56]
	110 Move X22, [X31+32]
	111 Move X21, [X31+40]
	112 Move X30, [X31+16]
	113 Add X31, X31, 64
	114 Return X0
	115 Call 0x1C17F20

Method: Fusion.NetworkId GetMessageTargetObjectIdForVerification(Fusion.SimulationMessage* message)

Disassembly:
	0x01ECB830 LDR X0, [X8 + 0x10]
	0x01ECB834 CBZ X0, 0x1ECB858
	0x01ECB838 ADRP X8, 0x2233000
	0x01ECB83C LDR X8, [X8 + 0x488]
	0x01ECB840 LDR X1, [X8]
	0x01ECB844 BL 0x25D2974
	0x01ECB848 LDR W0, [X0 + 0x4]
	0x01ECB84C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move W8, [X1+20]
	002 Move W9, 69
	003 And W31, W8, W9
	004 Move X0, X31
	005 Return X0
	006 Move W0, [X1+28]
	007 Return X0

Method: System.Void SendInternalSimulationMessage(Fusion.SimulationMessageInternalTypes type, T buffer, System.Nullable`1<Fusion.PlayerRef> target = null)

Disassembly:
	0x02255EF4 MOV X20, X2
	0x02255EF8 MOV X19, X1
	0x02255EFC MOV X21, X0
	0x02255F00 CBNZ X8, 0x2255F20
	0x02255F04 ADRP X0, 0x1EC7000
	0x02255F08 LDR X0, [X0 + 0x4F8]
	0x02255F0C BL 0x1C16CF4
	0x02255F10 LDR X8, [X20 + 0x38]
	0x02255F14 CBNZ X8, 0x2255F20
	0x02255F18 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+8], X3
	003 Move [X31+16], X30
	004 Move [X31], X2
	005 Add X2, X31, 0
	006 Move W3, 16
	007 Move X5, X31
	008 Call Simulation.SendInternalSimulationMessage, X0, X1, X2, X3, X4
	009 Move X30, [X31+16]
	010 Add X31, X31, 32
	011 Return 

Method: System.Void SendInternalSimulationMessage(Fusion.SimulationMessageInternalTypes type, System.Void* buffer, System.Int32 bufferLength, System.Nullable`1<Fusion.PlayerRef> target = null)

Disassembly:
	0x01ECBC6C MOV X20, X1
	0x01ECBC70 MOV X19, X0
	0x01ECBC74 TBNZ X8, 0x0, 0x1ECBC8C
	0x01ECBC78 ADRP X0, 0x222B000
	0x01ECBC7C LDR X0, [X0 + 0xE40]
	0x01ECBC80 BL 0x1C16CF4
	0x01ECBC84 MOVZ W8, 0x1
	0x01ECBC88 STRB W8, [X21 + 0x4CA]
	0x01ECBC8C LDR X8, [X19]
	0x01ECBC90 MOV X0, X19
	0x01ECBC94 LDR X9, [X8 + 0x268]
	0x01ECBC98 LDR X1, [X8 + 0x270]
	0x01ECBC9C BLR X9
	0x01ECBCA0 LDR X8, [X22]
	0x01ECBCA4 MOV X21, X0
	0x01ECBCA8 LDR W9, [X8 + 0xE0]
	0x01ECBCAC CBNZ W9, 0x1ECBCB8
	0x01ECBCB0 MOV X0, X8
	0x01ECBCB4 BL 0x1C16DFC
	0x01ECBCB8 CMP W20, W21
	0x01ECBCBC B.EQ 0x1ECBCE4
	0x01ECBCC0 LDR X0, [X22]
	0x01ECBCC4 LDR W8, [X0 + 0xE0]
	0x01ECBCC8 CBNZ W8, 0x1ECBCD0
	0x01ECBCCC BL 0x1C16DFC
	0x01ECBCD0 MOV X0, X31
	0x01ECBCD4 BL 0x1E8D7EC
	0x01ECBCD8 CMP W20, W0
	0x01ECBCDC FMOV D0, X31
	0x01ECBCE0 B.NE 0x1ECBCF8
	0x01ECBCE4 LDR X8, [X19 + 0x1A8]
	0x01ECBCE8 CBZ X8, 0x1ECBCF4
	0x01ECBCEC LDR V0, [X8 + 0x48]
	0x01ECBCF0 B 0x1ECBCF8
	0x01ECBCF4 FMOV D0, X31
	0x01ECBCF8 LDP X20, X19, [X31 + 0x20]
	0x01ECBCFC LDP X22, X21, [X31 + 0x10]
	0x01ECBD00 LDR X30, [X31], #0x30
	0x01ECBD04 RET
	0x01ECBD08 SUB X31, X31, 0x120
	0x01ECBD0C STR X29, [X31 + 0xD0]
	0x01ECBD10 STP X30, X25, [X31 + 0xE0]
	0x01ECBD14 STP X24, X23, [X31 + 0xF0]
	0x01ECBD18 STP X22, X21, [X31 + 0x100]
	0x01ECBD1C STP X20, X19, [X31 + 0x110]
	0x01ECBD20 MRS X22, 0xC000
	0x01ECBD24 LDR X8, [X22 + 0x28]
	0x01ECBD28 ADRP X25, 0x250E000
	0x01ECBD2C ADRP X24, 0x2234000
	0x01ECBD30 ADRP X23, 0x2234000
	0x01ECBD34 STR X8, [X31 + 0xC8]
	0x01ECBD38 ADRP X21, 0x2234000
	0x01ECBD3C LDRB W8, [X25 + 0x4CB]
	0x01ECBD40 LDR X24, [X24 + 0xD90]
	0x01ECBD44 LDR X23, [X23 + 0xD98]
	0x01ECBD48 LDR X21, [X21 + 0xDA0]
	0x01ECBD4C MOV X20, X1
	0x01ECBD50 MOV X19, X0
	0x01ECBD54 TBNZ X8, 0x0, 0x1ECBDA8
	0x01ECBD58 ADRP X0, 0x2234000
	0x01ECBD5C LDR X0, [X0 + 0xDA8]
	0x01ECBD60 BL 0x1C16CF4
	0x01ECBD64 ADRP X0, 0x2234000
	0x01ECBD68 LDR X0, [X0 + 0xD90]
	0x01ECBD6C BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x250F000
	009 Move W8, [X20+1201]
	010 Move X21, X4
	011 Move W22, W3
	012 Move X23, X2
	013 Move W24, W1
	014 Move X19, X0
	015 Move [X31+8], X4
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x2234000
	021 Move X0, [X0+2904]
	022 Call 0x1C17CF4
	023 Move X0, 0x2234000
	024 Move X0, [X0+2912]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+1201], W8
	028 Add W1, W22, 4
	029 Move X0, X19
	030 Move X2, X31
	031 Call SimulationMessage.Allocate, X0, X1
	032 Compare X0, 0
	033 JumpIfEqual {76}
	034 Move W8, [X0+20]
	035 Move X20, X0
	036 Move [X0+28], W24
	037 Move X1, X23
	038 Or W8, W8, 64
	039 Move [X0+20], W8
	040 Add X0, X0, 32
	041 Move W2, W22
	042 Move X3, X31
	043 Call Native.MemCpy, X0, X1, X2
	044 And W31, W21, 255
	045 Move X8, 0x2234000
	046 Move X8, [X8+2912]
	047 Add X0, X31, 8
	048 Move X1, [X8]
	049 Call Nullable`1<PlayerRef>.get_Value, X0
	050 Move [X20+24], W0
	051 Move W8, 16
	052 Move X0, X19
	053 Move [X20+24], W31
	054 Call Simulation.get_IsClient, X0
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {63}
	059 Move W8, 32
	060 Move W9, [X20+20]
	061 Or W8, W9, W8
	062 Move [X20+20], W8
	063 Move W8, [X20+8]
	064 Move X0, X19
	065 Move X1, X20
	066 Move [X20+12], W8
	067 Call Simulation.SendMessage, X0, X1
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Return 
	076 Call 0x1C17F20

Method: System.Boolean VerifyMessageTargetObject(Fusion.Sockets.NetConnection* netConnection, Fusion.NetworkId id, out Fusion.Simulation/TargetObjectVerificationResult result)

Disassembly:
	0x01ECB850 LDR X30, [X31], #0x20
	0x01ECB854 RET
	0x01ECB858 BL 0x1C16F20
	0x01ECB85C STR X30, [X31 - 0x20]!
	0x01ECB860 STP X20, X19, [X31 + 0x10]
	0x01ECB864 LDR X8, [X0]
	0x01ECB868 MOV X19, X0
	0x01ECB86C LDR X9, [X8 + 0x248]
	0x01ECB870 LDR X1, [X8 + 0x250]
	0x01ECB874 BLR X9
	0x01ECB878 MOV X20, X0
	0x01ECB87C MOV X0, X19
	0x01ECB880 MOV X1, X31
	0x01ECB884 BL 0x1EC0524
	0x01ECB888 SCVTF D1, W20
	0x01ECB88C LDP X20, X19, [X31 + 0x10]
	0x01ECB890 FMUL D0, D0, D1
	0x01ECB894 LDR X30, [X31], #0x20
	0x01ECB898 RET
	0x01ECB89C LDR X8, [X0 + 0x1A8]
	0x01ECB8A0 CMP X8, 0x0
	0x01ECB8A4 CSET W0, NE
	0x01ECB8A8 RET
	0x01ECB8AC LDR X9, [X0 + 0x1A8]
	0x01ECB8B0 CBZ X9, 0x1ECB8C8
	0x01ECB8B4 LDR X10, [X9 + 0x38]
	0x01ECB8B8 LDUR V0, [X9 + 0x28]
	0x01ECB8BC STR X10, [X8 + 0x10]
	0x01ECB8C0 STR V0, [X8]
	0x01ECB8C4 RET
	0x01ECB8C8 STP X31, X31, [X8]
	0x01ECB8CC STR X31, [X8 + 0x10]
	0x01ECB8D0 RET
	0x01ECB8D4 LDR X8, [X0 + 0x1A8]
	0x01ECB8D8 CBZ X8, 0x1ECB8E4
	0x01ECB8DC LDR V0, [X8 + 0x48]
	0x01ECB8E0 RET
	0x01ECB8E4 FMOV D0, X31
	0x01ECB8E8 RET
	0x01ECB8EC STR X30, [X31 - 0x20]!
	0x01ECB8F0 STP X20, X19, [X31 + 0x10]
	0x01ECB8F4 ADRP X20, 0x250E000
	0x01ECB8F8 LDRB W8, [X20 + 0x4C8]
	0x01ECB8FC MOV X19, X0
	0x01ECB900 TBNZ X8, 0x0, 0x1ECB918
	0x01ECB904 ADRP X0, 0x2233000
	0x01ECB908 LDR X0, [X0 + 0xA90]
	0x01ECB90C BL 0x1C16CF4
	0x01ECB910 MOVZ W8, 0x1
	0x01ECB914 STRB W8, [X20 + 0x4C8]
	0x01ECB918 LDR X19, [X19 + 0x40]
	0x01ECB91C CBZ X19, 0x1ECB994
	0x01ECB920 ADRP X10, 0x2233000
	0x01ECB924 LDR X8, [X19]
	0x01ECB928 LDR X10, [X10 + 0xA90]
	0x01ECB92C LDRH W9, [X8 + 0x12E]
	0x01ECB930 LDR X1, [X10]
	0x01ECB934 CBZ X9, 0x1ECB958
	0x01ECB938 LDR X10, [X8 + 0xB0]
	0x01ECB93C ADD X10, X10, 0x8
	0x01ECB940 LDUR X11, [X10 - 0x8]
	0x01ECB944 CMP X11, X1
	0x01ECB948 B.EQ 0x1ECB968
	0x01ECB94C SUBS X9, X9, 0x1
	0x01ECB950 ADD X10, X10, 0x10
	0x01ECB954 B.NE 0x1ECB940
	0x01ECB958 MOVZ W2, 0x23
	0x01ECB95C MOV X0, X19
	0x01ECB960 BL 0x1C5C788
	0x01ECB964 B 0x1ECB978
	0x01ECB968 LDR W9, [X10]
	0x01ECB96C ADD W9, W9, 0x23
	0x01ECB970 ADD X8, X8, W9, 0x4, SXTW
	0x01ECB974 ADD X0, X8, 0x138
	0x01ECB978 LDP X8, X1, [X0]
	0x01ECB97C MOV X0, X19
	0x01ECB980 BLR X8
	0x01ECB984 LDP X20, X19, [X31 + 0x10]
	0x01ECB988 AND X0, X0, 0x0
	0x01ECB98C LDR X30, [X31], #0x20
	0x01ECB990 RET
	0x01ECB994 BL 0x1C16F20
	0x01ECB998 SUB X31, X31, 0x90
	0x01ECB99C STR X30, [X31 + 0x40]
	0x01ECB9A0 STP X26, X25, [X31 + 0x50]
	0x01ECB9A4 STP X24, X23, [X31 + 0x60]
	0x01ECB9A8 STP X22, X21, [X31 + 0x70]
	0x01ECB9AC STP X20, X19, [X31 + 0x80]
	0x01ECB9B0 ADRP X22, 0x250E000
	0x01ECB9B4 ADRP X21, 0x2234000
	0x01ECB9B8 ADRP X19, 0x2234000
	0x01ECB9BC LDRB W8, [X22 + 0x4C9]
	0x01ECB9C0 LDR X21, [X21 + 0xD80]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x250F000
	009 Move X23, 0x222C000
	010 Move W8, [X24+1202]
	011 Move X23, [X23+920]
	012 Move X19, X3
	013 Move X22, X2
	014 Move X21, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x222C000
	021 Move X0, [X0+920]
	022 Call 0x1C17CF4
	023 Move X0, 0x2233000
	024 Move X0, [X0+368]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+1202], W8
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfEqual {34}
	032 Compare W22, 0
	033 JumpIfNotEqual {37}
	034 Call 0x1C17DFC
	035 Compare W22, 0
	036 JumpIfEqual {106}
	037 Move X23, 0x250F000
	038 Move W8, [X23+1211]
	039 Compare W8, 0
	040 JumpIfNotEqual {46}
	041 Move X0, 0x2235000
	042 Move X0, [X0+2656]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X23+1211], W8
	046 Move X0, [X20+176]
	047 Compare X0, 0
	048 JumpIfEqual {119}
	049 Move X9, 0x2235000
	050 Move W8, [X21+24]
	051 Move X9, [X9+2656]
	052 NotImplemented "Instruction SBFM not yet implemented."
	053 Move X2, [X9]
	054 Call Dictionary`2<Int32, Object>.get_Item, X0, X1
	055 Compare X0, 0
	056 JumpIfEqual {119}
	057 Move X23, X0
	058 Move X0, [X0+216]
	059 Move X1, [X21+24]
	060 Move X2, X31
	061 Call NetConnectionId.op_Equality, X0, X1
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {119}
	066 And X22, X22, 0
	067 Move X0, X23
	068 Move X1, X22
	069 Move X2, X31
	070 Call SimulationConnection.ObjectData_IsCreateUnconfirmed, X0, X1
	071 Move W8, W0
	072 ShiftRight W8, 8
	073 And W8, W8, 0x7FFF
	074 Compare W8, 0
	075 JumpIfNotEqual {106}
	076 Move X8, [X20+88]
	077 Compare X8, 0
	078 JumpIfEqual {119}
	079 Move W8, [X8+20]
	080 NotImplemented "Instruction ORN not yet implemented."
	081 And W31, W8, 3
	082 Move X0, X20
	083 Call Simulation.get_IsServer, X0
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {106}
	088 Move X8, [X20]
	089 Move X0, X20
	090 Move X1, X21
	091 Move X9, [X8+696]
	092 Move X2, [X8+704]
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move X8, [X20+168]
	095 Compare X8, 0
	096 JumpIfEqual {119}
	097 And X1, X0, 0
	098 Move X0, X8
	099 Move X2, X22
	100 Move X3, X31
	101 Call StateReplicator.HasObjectInterest, X0, X1, X2
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {117}
	106 Move W8, W31
	107 Move W0, 1
	108 Move [X19], W8
	109 Move X20, [X31+48]
	110 Move X19, [X31+56]
	111 Move X22, [X31+32]
	112 Move X21, [X31+40]
	113 Move X24, [X31+16]
	114 Move X23, [X31+24]
	115 Move X30, [X31+64]
	116 Return X0
	117 Move W0, W31
	118 Move W8, 1
	119 Call 0x1C17F20

Method: System.Void SendMessageInternal(Fusion.SimulationMessage* message, Fusion.Sockets.NetConnection* netConnection)

Disassembly:
	0x01ECBA20 BL 0x1C16CF4
	0x01ECBA24 ADRP X0, 0x2233000
	0x01ECBA28 LDR X0, [X0 + 0x378]
	0x01ECBA2C BL 0x1C16CF4
	0x01ECBA30 ADRP X0, 0x2234000
	0x01ECBA34 LDR X0, [X0 + 0xBB0]
	0x01ECBA38 BL 0x1C16CF4
	0x01ECBA3C MOVZ W8, 0x1
	0x01ECBA40 STRB W8, [X22 + 0x4C9]
	0x01ECBA44 LDR X0, [X21]
	0x01ECBA48 STP X31, X31, [X31 + 0x20]
	0x01ECBA4C STR X31, [X31 + 0x30]
	0x01ECBA50 STR X31, [X31 + 0x48]
	0x01ECBA54 BL 0x1C16F10
	0x01ECBA58 LDR X1, [X19]
	0x01ECBA5C MOV X19, X0
	0x01ECBA60 BL 0x3024554
	0x01ECBA64 LDR X0, [X20 + 0x188]
	0x01ECBA68 CBZ X0, 0x1ECBB9C
	0x01ECBA6C ADRP X8, 0x2234000
	0x01ECBA70 LDR X8, [X8 + 0xB90]
	0x01ECBA74 ADRP X23, 0x2234000
	0x01ECBA78 ADRP X24, 0x2233000
	0x01ECBA7C LDR X23, [X23 + 0xB80]
	0x01ECBA80 LDR X24, [X24 + 0x378]
	0x01ECBA84 LDR X1, [X8]
	0x01ECBA88 ADRP X25, 0x2234000
	0x01ECBA8C ADRP X26, 0x2234000
	0x01ECBA90 ADRP X22, 0x2234000
	0x01ECBA94 LDR X25, [X25 + 0xBB0]
	0x01ECBA98 LDR X26, [X26 + 0x8B8]
	0x01ECBA9C LDR X22, [X22 + 0xB78]
	0x01ECBAA0 ADD X8, X31, 0x8
	0x01ECBAA4 BL 0x2DB9990
	0x01ECBAA8 LDUR V0, [X31 + 0x8]
	0x01ECBAAC LDR X8, [X31 + 0x18]
	0x01ECBAB0 STR V0, [X31 + 0x2]
	0x01ECBAB4 STR X8, [X31 + 0x30]
	0x01ECBAB8 LDR X1, [X23]
	0x01ECBABC ADD X0, X31, 0x20
	0x01ECBAC0 BL 0x2BC2C98
	0x01ECBAC4 TBZ X0, 0x0, 0x1ECBB64
	0x01ECBAC8 LDR X0, [X24]
	0x01ECBACC LDR W21, [X31 + 0x30]
	0x01ECBAD0 LDR W8, [X0 + 0xE0]
	0x01ECBAD4 CBNZ W8, 0x1ECBADC
	0x01ECBAD8 BL 0x1C16DFC
	0x01ECBADC MOV X0, X31
	0x01ECBAE0 BL 0x1E98E98
	0x01ECBAE4 LDR X4, [X25]
	0x01ECBAE8 MOV X2, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x250F000
	007 Move W8, [X22+1211]
	008 Move X21, X2
	009 Move X19, X1
	010 Move X20, X0
	011 Compare W8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, 0x2235000
	014 Move X0, [X0+2656]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X22+1211], W8
	018 Move X0, [X20+176]
	019 Compare X0, 0
	020 JumpIfEqual {63}
	021 Move X9, 0x2235000
	022 Move W8, [X21+24]
	023 Move X9, [X9+2656]
	024 NotImplemented "Instruction SBFM not yet implemented."
	025 Move X2, [X9]
	026 Call Dictionary`2<Int32, Object>.get_Item, X0, X1
	027 Compare X0, 0
	028 JumpIfEqual {63}
	029 Move X22, X0
	030 Move X0, [X0+216]
	031 Move X1, [X21+24]
	032 Move X2, X31
	033 Call NetConnectionId.op_Equality, X0, X1
	034 Move W9, [X19+20]
	035 And W31, W0, 1
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Move TEMP, X9
	038 And TEMP, TEMP, 8
	039 Compare TEMP, 8
	040 JumpIfEqual {46}
	041 Compare X8, 0
	042 JumpIfEqual {63}
	043 Move X9, [X8+64]
	044 Add X2, X9, 1
	045 Move [X8+64], X2
	046 Compare X8, 0
	047 JumpIfEqual {63}
	048 Move X2, X31
	049 Move X0, X20
	050 Move X1, X19
	051 Move X3, X31
	052 Add X21, X8, 96
	053 Call SimulationMessageEnvelope.Allocate, X0, X1, X2
	054 Move X1, X0
	055 Move X0, X21
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 Call SimulationMessageList.AddLast, X0, X1
	062 Return 
	063 Call 0x1C17F20

Method: System.Nullable`1<UnityEngine.Vector3> <UpdateAreaOfInterest>g__ResolveCellPosition|232_0(Fusion.NetworkObjectMeta m, Fusion.NetworkTRSPData* trsp)

Disassembly:
	0x01EC7714 LDP X30, X21, [X31], #0x20
	0x01EC7718 RET
	0x01EC771C BL 0x1C16F20
	0x01EC7720 SUB X31, X31, 0x50
	0x01EC7724 STP X30, X23, [X31 + 0x20]
	0x01EC7728 STP X22, X21, [X31 + 0x30]
	0x01EC772C STP X20, X19, [X31 + 0x40]
	0x01EC7730 ADRP X21, 0x2512000
	0x01EC7734 LDRB W8, [X21 + 0x48A]
	0x01EC7738 MOV X19, X1
	0x01EC773C MOV X20, X0
	0x01EC7740 TBNZ X8, 0x0, 0x1EC77AC
	0x01EC7744 ADRP X0, 0x2237000
	0x01EC7748 LDR X0, [X0 + 0xB90]
	0x01EC774C BL 0x1C16CF4
	0x01EC7750 ADRP X0, 0x2237000
	0x01EC7754 LDR X0, [X0 + 0xB98]
	0x01EC7758 BL 0x1C16CF4
	0x01EC775C ADRP X0, 0x2237000
	0x01EC7760 LDR X0, [X0 + 0xBA0]
	0x01EC7764 BL 0x1C16CF4
	0x01EC7768 ADRP X0, 0x2237000
	0x01EC776C LDR X0, [X0 + 0xBA8]
	0x01EC7770 BL 0x1C16CF4
	0x01EC7774 ADRP X0, 0x2238000
	0x01EC7778 LDR X0, [X0 + 0xC60]
	0x01EC777C BL 0x1C16CF4
	0x01EC7780 ADRP X0, 0x222F000
	0x01EC7784 LDR X0, [X0 + 0x398]
	0x01EC7788 BL 0x1C16CF4
	0x01EC778C ADRP X0, 0x2237000
	0x01EC7790 LDR X0, [X0 + 0xBB0]
	0x01EC7794 BL 0x1C16CF4
	0x01EC7798 ADRP X0, 0x2238000
	0x01EC779C LDR X0, [X0 + 0xC68]
	0x01EC77A0 BL 0x1C16CF4
	0x01EC77A4 MOVZ W8, 0x1
	0x01EC77A8 STRB W8, [X21 + 0x48A]
	0x01EC77AC STP X31, X31, [X31 + 0x8]
	0x01EC77B0 STR X31, [X31 + 0x18]
	0x01EC77B4 LDR X21, [X20 + 0xF8]
	0x01EC77B8 CBZ X21, 0x1EC78D4
	0x01EC77BC CBZ X19, 0x1EC78F0
	0x01EC77C0 ADRP X22, 0x2238000
	0x01EC77C4 LDR X22, [X22 + 0xC60]
	0x01EC77C8 MOV X0, X19
	0x01EC77CC MOV X1, X31
	0x01EC77D0 BL 0x1E97370
	0x01EC77D4 LDR X2, [X22]
	0x01EC77D8 AND X1, X0, 0x0
	0x01EC77DC MOV X0, X21
	0x01EC77E0 BL 0x2DB9F9C
	0x01EC77E4 TBNZ X0, 0x0, 0x1EC7834
	0x01EC77E8 MOV X0, X19
	0x01EC77EC MOV X1, X31
	0x01EC77F0 BL 0x1E97370
	0x01EC77F4 ADRP X8, 0x222F000
	0x01EC77F8 LDR X8, [X8 + 0x398]
	0x01EC77FC STR W0, [X31]
	0x01EC7800 ADD X1, X31, 0x0
	0x01EC7804 LDR X8, [X8]
	0x01EC7808 MOV X0, X8
	0x01EC780C BL 0x1C16E04
	0x01EC7810 ADRP X8, 0x2238000
	0x01EC7814 LDR X8, [X8 + 0xC68]
	0x01EC7818 MOV X1, X0
	0x01EC781C MOV X2, X31
	0x01EC7820 LDR X8, [X8]
	0x01EC7824 MOV X0, X8
	0x01EC7828 BL 0x321EFD0
	0x01EC782C MOV X1, X31
	0x01EC7830 BL 0x1E3B98C
	0x01EC7834 LDR X0, [X20 + 0xB0]
	0x01EC7838 CBZ X0, 0x1EC78F0
	0x01EC783C ADRP X8, 0x2237000
	0x01EC7840 LDR X8, [X8 + 0xB90]
	0x01EC7844 LDR X1, [X8]
	0x01EC7848 BL 0x2A1352C
	0x01EC784C CBZ X0, 0x1EC78F0
	0x01EC7850 ADRP X8, 0x2237000
	0x01EC7854 LDR X8, [X8 + 0xBB0]
	0x01EC7858 ADRP X23, 0x2237000
	0x01EC785C ADRP X22, 0x2237000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X21, 0x2513000
	008 Move W8, [X21+1203]
	009 Move X20, X2
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x2230000
	016 Move X0, [X0+920]
	017 Call 0x1C17CF4
	018 Move X0, 0x2230000
	019 Move X0, [X0+2904]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+1203], W8
	023 Move [X31+40], X31
	024 Move [X31+8], X31
	025 Compare X20, 0
	026 JumpIfEqual {62}
	027 Move X21, 0x2230000
	028 Move X21, [X21+920]
	029 Move X0, [X21]
	030 Move W22, [X20+52]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Compare W22, 0
	036 JumpIfEqual {88}
	037 Move W1, [X20+52]
	038 Add X2, X31, 40
	039 Move X0, X19
	040 Call Simulation.TryGetMeta, X0, X1, X2
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {106}
	045 Move X0, [X31+40]
	046 Compare X0, 0
	047 JumpIfEqual {62}
	048 Move X1, X31
	049 Call NetworkObjectMeta.get_HasMainTRSP, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {106}
	054 Move X0, [X31+40]
	055 Compare X0, 0
	056 JumpIfEqual {62}
	057 Move X1, X31
	058 Call NetworkObjectMeta.get_MainTRSPData, X0
	059 Move X20, X0
	060 Compare X0, 0
	061 JumpIfNotEqual {29}
	062 Call 0x1C17F20
	063 Move W1, [X20]
	064 Add X2, X31, 8
	065 Move X0, X19
	066 Call Simulation.TryGetMeta, X0, X1, X2
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {106}
	071 Move X0, [X31+8]
	072 Compare X0, 0
	073 JumpIfEqual {62}
	074 Move X1, X31
	075 Call NetworkObjectMeta.get_HasMainTRSP, X0
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {106}
	080 Move X0, [X31+8]
	081 Compare X0, 0
	082 JumpIfEqual {62}
	083 Move X1, X31
	084 Call NetworkObjectMeta.get_MainTRSPData, X0
	085 Move X20, X0
	086 Compare X0, 0
	087 JumpIfEqual {62}
	088 Move X0, [X21]
	089 Move W22, [X20]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Compare W22, 0
	095 JumpIfNotEqual {63}
	096 Move X8, 0x2230000
	097 Move S0, [X20+8]
	098 Move S1, [X20+12]
	099 Move V2, [X20+16]
	100 Move X8, [X8+2904]
	101 Add X0, X31, 16
	102 Move [X31+16], X31
	103 Move [X31+24], X31
	104 Move X1, [X8]
	105 Call Nullable`1<Vector3>..ctor, X0, X1
	106 Move [X31+16], X31
	107 Move [X31+24], X31
	108 Move X0, [X31+16]
	109 Move X1, [X31+24]
	110 Move X20, [X31+64]
	111 Move X19, [X31+72]
	112 Move X22, [X31+48]
	113 Move X21, [X31+56]
	114 Move X30, [X31+32]
	115 Add X31, X31, 80
	116 Return X0

Method: System.Void <DeliverMessages>g__ConsumeMessage|241_0(ref Fusion.Simulation/<>c__DisplayClass241_0 param_0, ref Fusion.Simulation/<>c__DisplayClass241_1 param_1)

Disassembly:
	0x01EC81C4 BL 0x243F11C
	0x01EC81C8 UBFM X1, X0, 0x20, 0x3F
	0x01EC81CC B 0x1EC8240
	0x01EC81D0 LDR X22, [X19 + 0x40]
	0x01EC81D4 CBZ X22, 0x1EC82F0
	0x01EC81D8 ADRP X10, 0x2236000
	0x01EC81DC LDR X8, [X22]
	0x01EC81E0 LDR X10, [X10 + 0xA90]
	0x01EC81E4 LDRH W9, [X8 + 0x12E]
	0x01EC81E8 LDR X1, [X10]
	0x01EC81EC CBZ X9, 0x1EC8210
	0x01EC81F0 LDR X10, [X8 + 0xB0]
	0x01EC81F4 ADD X10, X10, 0x8
	0x01EC81F8 LDUR X11, [X10 - 0x8]
	0x01EC81FC CMP X11, X1
	0x01EC8200 B.EQ 0x1EC8220
	0x01EC8204 SUBS X9, X9, 0x1
	0x01EC8208 ADD X10, X10, 0x10
	0x01EC820C B.NE 0x1EC81F8
	0x01EC8210 MOVZ W2, 0x23
	0x01EC8214 MOV X0, X22
	0x01EC8218 BL 0x1C5C788
	0x01EC821C B 0x1EC8230
	0x01EC8220 LDR W9, [X10]
	0x01EC8224 ADD W9, W9, 0x23
	0x01EC8228 ADD X8, X8, W9, 0x4, SXTW
	0x01EC822C ADD X0, X8, 0x138
	0x01EC8230 LDP X8, X1, [X0]
	0x01EC8234 MOV X0, X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X2]
	005 Move X19, X2
	006 Move X20, X0
	007 Compare W8, 0
	008 JumpIfEqual {12}
	009 Move X8, [X1]
	010 Compare X8, 0
	011 JumpIfNotEqual {23}
	012 Move X9, [X19+8]
	013 Compare X9, 0
	014 JumpIfEqual {34}
	015 Move X8, [X1]
	016 Compare X8, 0
	017 JumpIfEqual {34}
	018 Move X10, [X8+56]
	019 Move X9, [X9]
	020 Add X10, X10, 1
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X8+56], X9
	023 Move X1, [X19+8]
	024 Add X0, X8, 72
	025 Call SimulationMessageList.Remove, X0, X1
	026 Move X1, [X19+8]
	027 Move X0, X20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X2, X31
	031 Move X30, [X31+32]
	032 Call SimulationMessageEnvelope.Free, X0, X1
	033 Return 
	034 Call 0x1C17F20

Method: Fusion.RpcSendMessageResult <SendMessage>g__VerifyResultToSendMessageResult|342_0(Fusion.Simulation/TargetObjectVerificationResult status)

Disassembly:
	0x01ECB9C4 LDR X19, [X19 + 0xD88]
	0x01ECB9C8 MOV X20, X0
	0x01ECB9CC TBNZ X8, 0x0, 0x1ECBA44
	0x01ECB9D0 ADRP X0, 0x2234000
	0x01ECB9D4 LDR X0, [X0 + 0xB78]
	0x01ECB9D8 BL 0x1C16CF4
	0x01ECB9DC ADRP X0, 0x2234000
	0x01ECB9E0 LDR X0, [X0 + 0xB80]
	0x01ECB9E4 BL 0x1C16CF4
	0x01ECB9E8 ADRP X0, 0x2234000
	0x01ECB9EC LDR X0, [X0 + 0xB88]
	0x01ECB9F0 BL 0x1C16CF4
	0x01ECB9F4 ADRP X0, 0x2234000
	0x01ECB9F8 LDR X0, [X0 + 0xB90]
	0x01ECB9FC BL 0x1C16CF4
	0x01ECBA00 ADRP X0, 0x2234000
	0x01ECBA04 LDR X0, [X0 + 0x8B8]
	0x01ECBA08 BL 0x1C16CF4
	0x01ECBA0C ADRP X0, 0x2234000
	0x01ECBA10 LDR X0, [X0 + 0xD88]
	0x01ECBA14 BL 0x1C16CF4
	0x01ECBA18 ADRP X0, 0x2234000
	0x01ECBA1C LDR X0, [X0 + 0xD80]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W0, 2565
	003 Return X0
	004 Move [X31-16], X30
	005 Move [X31-8], X19
	006 Move X0, 0x2231000
	007 Move X0, [X0+1888]
	008 Call 0x1C17D08
	009 Call 0x1C17F10
	010 Move X19, X0
	011 Move X0, 0x2235000
	012 Move X0, [X0+3424]
	013 Call 0x1C17D08
	014 Move X1, X0
	015 Move X0, X19
	016 Move X2, X31
	017 Call ArgumentOutOfRangeException..ctor, X0, X1
	018 Move X0, 0x2235000
	019 Move X0, [X0+3432]
	020 Call 0x1C17D08
	021 Move X1, X0
	022 Move X0, X19
	023 Call 0x1C17DEC

