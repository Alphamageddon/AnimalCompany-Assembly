Type: Fusion.NetworkBehaviour

Method: System.Boolean get_StateBufferIsValid()

Disassembly:
	0x01E74930 CBZ X8, 0x1E74940
	0x01E74934 LDR W8, [X8 + 0x18]
	0x01E74938 CMP W8, W23
	0x01E7493C B.GE 0x1E74970

ISIL:
	001 Move X8, [X0+80]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: Fusion.NetworkBehaviourBuffer get_StateBuffer()

Disassembly:
	0x01E74940 ADRP X8, 0x227F000
	0x01E74944 LDR X8, [X8 + 0xAC8]
	0x01E74948 MOV W1, W23
	0x01E7494C LDR X0, [X8]
	0x01E74950 BL 0x1C16D6C
	0x01E74954 STR X0, [X21 + 0x30]
	0x01E74958 ADRP X8, 0x2289000
	0x01E7495C LDR X8, [X8 + 0x588]
	0x01E74960 MOV W1, W23
	0x01E74964 LDR X0, [X8]
	0x01E74968 BL 0x1C16D6C
	0x01E7496C STR X0, [X21 + 0x38]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+56]
	003 Compare X8, 0
	004 JumpIfEqual {14}
	005 Move X8, [X8+80]
	006 Compare X8, 0
	007 JumpIfEqual {14}
	008 Move W1, [X0+112]
	009 Move W8, [X8+72]
	010 Move X0, [X0+80]
	011 NotImplemented "Instruction BFM not yet implemented."
	012 Move X30, [X31+16]
	013 Return X0
	014 Call 0x1C17F20

Method: System.ValueTuple`2<System.Int32, System.Int32> get_WordInfo()

Disassembly:
	0x01E7497C LDR X2, [X24]
	0x01E74980 MOV W1, W0
	0x01E74984 ADD X0, X31, 0x8
	0x01E74988 STR X31, [X31 + 0x8]
	0x01E7498C BL 0x24341FC
	0x01E74990 LDR X8, [X31 + 0x8]
	0x01E74994 STP W22, W31, [X21 + 0x28]
	0x01E74998 STR X8, [X21 + 0x10]
	0x01E7499C TBZ X20, 0x0, 0x1E749C8
	0x01E749A0 LDR X8, [X21 + 0x18]
	0x01E749A4 CBZ X8, 0x1E749DC
	0x01E749A8 LDR W9, [X8 + 0x18]
	0x01E749AC LDR X1, [X19 + 0x50]
	0x01E749B0 ADD X8, X8, 0x20
	0x01E749B4 MOV X3, X31
	0x01E749B8 CMP W9, 0x0
	0x01E749BC CSEL X0, X31, X8, EQ
	0x01E749C0 UBFM W2, W9, 0x1E, 0x1D
	0x01E749C4 BL 0x1E35764
	0x01E749C8 LDP X20, X19, [X31 + 0x30]
	0x01E749CC LDP X22, X21, [X31 + 0x20]
	0x01E749D0 LDP X24, X23, [X31 + 0x10]
	0x01E749D4 LDR X30, [X31], #0x40
	0x01E749D8 RET

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2566000
	007 Move X20, 0x2287000
	008 Move W8, [X21+345]
	009 Move X20, [X20+3400]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2287000
	016 Move X0, [X0+3400]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+345], W8
	020 Move W1, [X19+108]
	021 Move W2, [X19+112]
	022 Move X3, [X20]
	023 Add X0, X31, 8
	024 Move [X31+8], X31
	025 Call ValueTuple`2<Int32, Int32>..ctor, X0, X1, X2
	026 Move X0, [X31+8]
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X30, [X31+16]
	030 Move X21, [X31+24]
	031 Add X31, X31, 48
	032 Return X0

Method: Fusion.Tick get_ChangedTick()

Disassembly:
	0x01E749DC BL 0x1C16F20
	0x01E749E0 STR X30, [X31 - 0x20]!
	0x01E749E4 STP X20, X19, [X31 + 0x10]
	0x01E749E8 MOV X4, X31
	0x01E749EC MOV X19, X2
	0x01E749F0 MOV X20, X1
	0x01E749F4 BL 0x1EBDCE0
	0x01E749F8 LDR X8, [X20]
	0x01E749FC CBZ X8, 0x1E74A24
	0x01E74A00 LDR W8, [X20 + 0x8]
	0x01E74A04 CMP W8, 0x1
	0x01E74A08 B.LT 0x1E74A24

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+64]
	005 Compare X0, 0
	006 JumpIfEqual {15}
	007 Move X1, X31
	008 Call NetworkObject.get_BehaviourChangedTickArray, X0
	009 NotImplemented "Instruction LDRSW not yet implemented."
	010 Move W8, [X0]
	011 NotImplemented "Instruction BIC not yet implemented."
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return X0
	015 Call 0x1C17F20

Method: Fusion.NetworkBehaviourId get_Id()

Disassembly:
	0x01E74A0C LDR X8, [X19]
	0x01E74A10 CBZ X8, 0x1E74A24
	0x01E74A14 LDR W8, [X19 + 0x8]
	0x01E74A18 CMP W8, 0x0
	0x01E74A1C CSET W0, GT
	0x01E74A20 B 0x1E74A28
	0x01E74A24 MOV W0, W31
	0x01E74A28 LDP X20, X19, [X31 + 0x10]
	0x01E74A2C LDR X30, [X31], #0x20

ISIL:
	001 Move X8, [X0+64]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X8, [X8+32]
	005 Compare X8, 0
	006 JumpIfEqual {8}
	007 Move W8, [X8]
	008 Move W9, [X0+104]
	009 NotImplemented "Instruction BFM not yet implemented."
	010 Move X0, X8
	011 Return X0

Method: System.Boolean get_HasInputAuthority()

Disassembly:
	0x01E74A30 RET
	0x01E74A34 LDR X8, [X0]
	0x01E74A38 CBZ X8, 0x1E74A4C
	0x01E74A3C LDR W8, [X0 + 0x8]
	0x01E74A40 CMP W8, 0x0
	0x01E74A44 CSET W0, GT
	0x01E74A48 RET
	0x01E74A4C MOV W0, W31

ISIL:
	001 Move X0, [X0+64]
	002 Compare X0, 0
	003 JumpIfEqual {12}
	004 Move W8, [X0+96]
	005 Move TEMP, X8
	006 And TEMP, TEMP, 2
	007 Compare TEMP, 2
	008 JumpIfEqual {12}
	009 Move X1, X31
	010 Call NetworkObject.get_HasInputAuthority, X0
	011 Return X0
	012 Move W0, W31
	013 Return X0

Method: System.Boolean get_HasStateAuthority()

Disassembly:
	0x01E74A50 RET
	0x01E74A54 MOVZ W0, 0x1
	0x01E74A58 RET
	0x01E74A5C MOV X0, X1
	0x01E74A60 MOV X1, X2
	0x01E74A64 B 0x1E74A68
	0x01E74A68 STP X30, X21, [X31 - 0x20]!
	0x01E74A6C STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+64]
	002 Compare X0, 0
	003 JumpIfEqual {12}
	004 Move W8, [X0+96]
	005 Move TEMP, X8
	006 And TEMP, TEMP, 2
	007 Compare TEMP, 2
	008 JumpIfEqual {12}
	009 Move X1, X31
	010 Call NetworkObject.get_HasStateAuthority, X0
	011 Return X0
	012 Move W0, W31
	013 Return X0

Method: System.Boolean get_IsProxy()

Disassembly:
	0x01E74A70 ADRP X21, 0x2565000
	0x01E74A74 LDRB W8, [X21 + 0x162]
	0x01E74A78 MOV X19, X1
	0x01E74A7C MOV X20, X0
	0x01E74A80 TBNZ X8, 0x0, 0x1E74AA4
	0x01E74A84 ADRP X0, 0x2289000
	0x01E74A88 LDR X0, [X0 + 0x590]
	0x01E74A8C BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+64]
	002 Compare X0, 0
	003 JumpIfEqual {12}
	004 Move W8, [X0+96]
	005 Move TEMP, X8
	006 And TEMP, TEMP, 2
	007 Compare TEMP, 2
	008 JumpIfEqual {12}
	009 Move X1, X31
	010 Call NetworkObject.get_IsProxy, X0
	011 Return X0
	012 Move W0, W31
	013 Return X0

Method: System.Nullable`1<System.Int32> get_DynamicWordCount()

Disassembly:
	0x01E74A90 ADRP X0, 0x2282000
	0x01E74A94 LDR X0, [X0 + 0xA78]

ISIL:
	001 Move X0, X31
	002 Return X0

Method: System.Boolean get_IsEditorWritable()

Disassembly:
	0x01E74A98 BL 0x1C16CF4
	0x01E74A9C MOVZ W8, 0x1
	0x01E74AA0 STRB W8, [X21 + 0x162]
	0x01E74AA4 CBZ X20, 0x1E74AFC
	0x01E74AA8 LDR X8, [X20 + 0x40]
	0x01E74AAC CBZ X8, 0x1E74AD0
	0x01E74AB0 LDR X8, [X8 + 0x20]
	0x01E74AB4 CBZ X8, 0x1E74ABC
	0x01E74AB8 LDR W8, [X8]
	0x01E74ABC STR W8, [X19]
	0x01E74AC0 LDR W8, [X20 + 0x68]
	0x01E74AC4 MOVZ W0, 0x8
	0x01E74AC8 STR W8, [X19 + 0x4]
	0x01E74ACC B 0x1E74B04
	0x01E74AD0 ADRP X8, 0x2282000
	0x01E74AD4 LDR X8, [X8 + 0xA78]
	0x01E74AD8 LDR X0, [X8]
	0x01E74ADC LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+64]
	005 Compare X0, 0
	006 JumpIfEqual {26}
	007 Move W8, [X0+96]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 2
	010 Compare TEMP, 2
	011 JumpIfEqual {26}
	012 Move X1, X31
	013 Call NetworkObject.get_IsValid, X0
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {26}
	018 Move X0, [X19+64]
	019 Compare X0, 0
	020 JumpIfEqual {30}
	021 Move X1, X31
	022 Move X30, [X31+16]
	023 Move X19, [X31+24]
	024 Call NetworkObject.get_HasStateAuthority, X0
	025 Return X0
	026 Move W0, 1
	027 Move X30, [X31+16]
	028 Move X19, [X31+24]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Int32 GetLocalAuthorityMask()

Disassembly:
	0x01E74AE0 CBNZ W8, 0x1E74AE8
	0x01E74AE4 BL 0x1C16DFC
	0x01E74AE8 ADRP X8, 0x2289000
	0x01E74AEC LDR X8, [X8 + 0x590]
	0x01E74AF0 MOV X0, X20
	0x01E74AF4 LDR X1, [X8]
	0x01E74AF8 BL 0x2229CD8
	0x01E74AFC MOVZ W0, 0x4
	0x01E74B00 STR W31, [X19]
	0x01E74B04 LDP X20, X19, [X31 + 0x10]
	0x01E74B08 LDP X30, X21, [X31], #0x20
	0x01E74B0C RET
	0x01E74B10 SUB X31, X31, 0x40
	0x01E74B14 STP X30, X23, [X31 + 0x10]
	0x01E74B18 STP X22, X21, [X31 + 0x20]
	0x01E74B1C STP X20, X19, [X31 + 0x30]
	0x01E74B20 ADRP X23, 0x2565000
	0x01E74B24 ADRP X20, 0x2282000
	0x01E74B28 LDRB W8, [X23 + 0x163]
	0x01E74B2C LDR X20, [X20 + 0x398]
	0x01E74B30 MOV X19, X2
	0x01E74B34 MOV X22, X1
	0x01E74B38 MOV X21, X0
	0x01E74B3C TBNZ X8, 0x0, 0x1E74B84
	0x01E74B40 ADRP X0, 0x2289000
	0x01E74B44 LDR X0, [X0 + 0x598]
	0x01E74B48 BL 0x1C16CF4
	0x01E74B4C ADRP X0, 0x2282000
	0x01E74B50 LDR X0, [X0 + 0xA78]
	0x01E74B54 BL 0x1C16CF4
	0x01E74B58 ADRP X0, 0x2289000
	0x01E74B5C LDR X0, [X0 + 0x558]
	0x01E74B60 BL 0x1C16CF4
	0x01E74B64 ADRP X0, 0x2282000
	0x01E74B68 LDR X0, [X0 + 0x398]
	0x01E74B6C BL 0x1C16CF4
	0x01E74B70 ADRP X0, 0x227F000
	0x01E74B74 LDR X0, [X0 + 0x6C0]
	0x01E74B78 BL 0x1C16CF4
	0x01E74B7C MOVZ W8, 0x1
	0x01E74B80 STRB W8, [X23 + 0x163]
	0x01E74B84 LDR X0, [X20]
	0x01E74B88 STR X31, [X31 + 0x8]
	0x01E74B8C LDR W20, [X22]
	0x01E74B90 LDR W8, [X0 + 0xE0]
	0x01E74B94 CBZ W8, 0x1E74BF4
	0x01E74B98 CBZ W20, 0x1E74BFC
	0x01E74B9C CBZ X21, 0x1E74C98
	0x01E74BA0 LDR W22, [X22 + 0x4]
	0x01E74BA4 ADD X2, X31, 0x8
	0x01E74BA8 MOV X0, X21
	0x01E74BAC MOV X1, X20
	0x01E74BB0 MOV X3, X31
	0x01E74BB4 BL 0x1EA323C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2566000
	006 Move W8, [X21+415]
	007 Move X20, [X0+56]
	008 Move X19, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x2280000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X21+415], W8
	016 Move X8, 0x2280000
	017 Move X8, [X8+1432]
	018 Move X0, [X8]
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move X0, X20
	024 Move X1, X31
	025 Call Object.op_Implicit, X0
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {45}
	030 Move X8, [X19+64]
	031 Compare X8, 0
	032 JumpIfEqual {51}
	033 Move W9, [X8+96]
	034 Move TEMP, X9
	035 And TEMP, TEMP, 2
	036 Compare TEMP, 2
	037 JumpIfEqual {52}
	038 Move X0, X8
	039 Move X1, X31
	040 Call NetworkObject.get_HasStateAuthority, X0
	041 Move X8, [X19+64]
	042 Move W19, W0
	043 Compare X8, 0
	044 JumpIfNotEqual {53}
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move W0, W31
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return X0
	051 Move W19, W31
	052 Move W19, W31
	053 Move W9, [X8+96]
	054 Move TEMP, X9
	055 And TEMP, TEMP, 2
	056 Compare TEMP, 2
	057 JumpIfEqual {61}
	058 Move X0, X8
	059 Move X1, X31
	060 Call NetworkObject.get_HasInputAuthority, X0
	061 Move W0, W31
	062 And W8, W19, 1
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 And W1, W0, 1
	066 Move W0, W8
	067 Move X2, X31
	068 Move X30, [X31+32]
	069 Move X21, [X31+40]
	070 Call AuthorityMasks.Create, X0, X1
	071 Return X0

Method: System.Void ReplicateTo(Fusion.PlayerRef player, System.Boolean replicate)

Disassembly:
	0x01E74BB8 TBZ X0, 0x0, 0x1E74C08
	0x01E74BBC TBNZ X22, 0x1F, 0x1E74C10
	0x01E74BC0 LDR X8, [X31 + 0x8]
	0x01E74BC4 CBZ X8, 0x1E74C98
	0x01E74BC8 LDR X8, [X8 + 0x78]
	0x01E74BCC CBZ X8, 0x1E74C98
	0x01E74BD0 LDR W9, [X8 + 0x18]
	0x01E74BD4 CMP W22, W9
	0x01E74BD8 B.GE 0x1E74C10
	0x01E74BDC CMP W22, W9
	0x01E74BE0 B.CS 0x1E74C9C
	0x01E74BE4 ADD X8, X8, X22, 0x3, LSL

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 Move X0, [X0+56]
	004 Compare X0, 0
	005 JumpIfEqual {14}
	006 And X9, X1, 0
	007 And W3, W2, 1
	008 Move X1, X8
	009 Move X2, X9
	010 Move X4, X31
	011 Move X30, [X31+16]
	012 Call NetworkRunner.SetBehaviourReplicateTo, X0, X1, X2, X3
	013 Return 
	014 Call 0x1C17F20

Method: System.Void ReplicateToAll(System.Boolean replicate)

Disassembly:
	0x01E74BE8 LDR X8, [X8 + 0x20]
	0x01E74BEC STR X8, [X19]
	0x01E74BF0 B 0x1E74C80
	0x01E74BF4 BL 0x1C16DFC
	0x01E74BF8 CBNZ W20, 0x1E74B9C
	0x01E74BFC STR X31, [X19]
	0x01E74C00 MOVZ W0, 0x4
	0x01E74C04 B 0x1E74C84
	0x01E74C08 STR X31, [X19]
	0x01E74C0C B 0x1E74C80

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 Move X0, [X0+56]
	004 Compare X0, 0
	005 JumpIfEqual {12}
	006 And W2, W1, 1
	007 Move X1, X8
	008 Move X3, X31
	009 Move X30, [X31+16]
	010 Call NetworkRunner.SetBehaviourReplicateToAll, X0, X1, X2
	011 Return 
	012 Call 0x1C17F20

Method: System.Void ResetState()

Disassembly:
	0x01E74C10 STR X31, [X19]
	0x01E74C14 ADRP X8, 0x227F000
	0x01E74C18 LDR X8, [X8 + 0x6C0]
	0x01E74C1C BFM X20, X22, 0x20, 0x1F
	0x01E74C20 LDR X0, [X8]
	0x01E74C24 ADRP X8, 0x2289000
	0x01E74C28 LDR X8, [X8 + 0x558]
	0x01E74C2C LDR W9, [X0 + 0xE0]
	0x01E74C30 LDR X19, [X8]
	0x01E74C34 CBNZ W9, 0x1E74C3C
	0x01E74C38 BL 0x1C16DFC
	0x01E74C3C MOV X0, X19
	0x01E74C40 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+112]
	004 Move X19, X0
	005 Move X0, [X0+80]
	006 Move X2, X31
	007 Move W1, W8
	008 ShiftRight W1, 30
	009 And W1, W1, 0x1FFFFFFF
	010 Call Native.MemClear, X0, X1
	011 Move X8, [X19]
	012 Move X0, X19
	013 Move W1, W31
	014 Move X3, [X8+504]
	015 Move X2, [X8+512]
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 CallNoReturn X3

Method: System.Void CopyStateFrom(Fusion.NetworkBehaviour source)

Disassembly:
	0x01E74C44 BL 0x338C698
	0x01E74C48 ADRP X8, 0x2282000
	0x01E74C4C LDR X8, [X8 + 0xA78]
	0x01E74C50 MOV X19, X0
	0x01E74C54 LDR X8, [X8]
	0x01E74C58 LDR W9, [X8 + 0xE0]
	0x01E74C5C CBNZ W9, 0x1E74C68
	0x01E74C60 MOV X0, X8
	0x01E74C64 BL 0x1C16DFC
	0x01E74C68 ADRP X8, 0x2289000
	0x01E74C6C LDR X8, [X8 + 0x598]
	0x01E74C70 MOV X0, X20
	0x01E74C74 MOV X1, X19
	0x01E74C78 LDR X2, [X8]
	0x01E74C7C BL 0x2229CD0
	0x01E74C80 MOVZ W0, 0x8
	0x01E74C84 LDP X20, X19, [X31 + 0x30]
	0x01E74C88 LDP X22, X21, [X31 + 0x20]
	0x01E74C8C LDP X30, X23, [X31 + 0x10]
	0x01E74C90 ADD X31, X31, 0x40
	0x01E74C94 RET
	0x01E74C98 BL 0x1C16F20
	0x01E74C9C BL 0x1C16F28
	0x01E74CA0 CBZ X1, 0x1E74CBC
	0x01E74CA4 LDR X8, [X1 + 0x40]
	0x01E74CA8 CBZ X8, 0x1E74CC4
	0x01E74CAC LDR X8, [X8 + 0x20]
	0x01E74CB0 CBZ X8, 0x1E74CC4
	0x01E74CB4 LDR W0, [X8]
	0x01E74CB8 B 0x1E74CC8
	0x01E74CBC MOV X0, X31
	0x01E74CC0 RET
	0x01E74CC4 MOV X0, X31
	0x01E74CC8 LDR W8, [X1 + 0x68]
	0x01E74CCC BFM X0, X8, 0x20, 0x1F
	0x01E74CD0 RET
	0x01E74CD4 SUB X31, X31, 0x30
	0x01E74CD8 STP X30, X21, [X31 + 0x10]
	0x01E74CDC STP X20, X19, [X31 + 0x20]
	0x01E74CE0 ADRP X21, 0x2565000
	0x01E74CE4 LDRB W8, [X21 + 0x164]
	0x01E74CE8 MOV X19, X1
	0x01E74CEC MOV X20, X0
	0x01E74CF0 STR X1, [X31 + 0x8]
	0x01E74CF4 TBNZ X8, 0x0, 0x1E74D30
	0x01E74CF8 ADRP X0, 0x2289000
	0x01E74CFC LDR X0, [X0 + 0x598]
	0x01E74D00 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2566000
	007 Move W8, [X21+346]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2280000
	015 Move X0, [X0+1728]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+346], W8
	019 Move X0, X20
	020 Move X1, X31
	021 Call "il2cpp_vm_object_is_inst", X0
	022 Compare X19, 0
	023 JumpIfEqual {65}
	024 Move X22, 0x2280000
	025 Move X22, [X22+1728]
	026 Move X21, X0
	027 Move X0, X19
	028 Move X1, X31
	029 Call "il2cpp_vm_object_is_inst", X0
	030 Move X8, [X22]
	031 Move X22, X0
	032 Move W9, [X8+224]
	033 Compare W9, 0
	034 JumpIfNotEqual {37}
	035 Move X0, X8
	036 Call 0x1C17DFC
	037 Move X0, X21
	038 Move X1, X22
	039 Move X2, X31
	040 Call Type.op_Equality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {59}
	045 Move W8, [X20+112]
	046 Move X0, [X20+80]
	047 Move X1, [X19+80]
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move W2, W8
	053 ShiftRight W2, 30
	054 And W2, W2, 0x1FFFFFFF
	055 Move X3, X31
	056 Move X30, [X31+48]
	057 Call Native.MemCpy, X0, X1, X2
	058 Return 
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+48]
	064 Return 
	065 Call 0x1C17F20

Method: System.Void FixedUpdateNetwork()

Disassembly:
	0x01E74D04 ADRP X0, 0x2282000

ISIL:
	001 Return 

Method: System.Void CopyBackingFieldsToState(System.Boolean firstTime)

Disassembly:
	0x01E74D08 LDR X0, [X0 + 0xA78]

ISIL:
	001 Return 

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x01E74D0C BL 0x1C16CF4

ISIL:
	001 Return 

Method: System.Void PreSpawned()

Disassembly:
	0x01E74D10 ADRP X0, 0x2289000
	0x01E74D14 LDR X0, [X0 + 0x558]
	0x01E74D18 BL 0x1C16CF4
	0x01E74D1C ADRP X0, 0x227F000
	0x01E74D20 LDR X0, [X0 + 0x6C0]
	0x01E74D24 BL 0x1C16CF4
	0x01E74D28 MOVZ W8, 0x1
	0x01E74D2C STRB W8, [X21 + 0x164]
	0x01E74D30 ADD X0, X31, 0x8
	0x01E74D34 STR X31, [X31]
	0x01E74D38 BL 0x1E74DE4
	0x01E74D3C MOV W8, W0
	0x01E74D40 MOV X0, X31
	0x01E74D44 TBZ X8, 0x0, 0x1E74DD0
	0x01E74D48 CBZ X20, 0x1E74DE0
	0x01E74D4C ADD X2, X31, 0x0
	0x01E74D50 MOV X0, X20
	0x01E74D54 MOV X1, X19
	0x01E74D58 MOV X3, X31
	0x01E74D5C BL 0x1EA32F8
	0x01E74D60 TBNZ X0, 0x0, 0x1E74DCC
	0x01E74D64 ADRP X8, 0x227F000
	0x01E74D68 LDR X8, [X8 + 0x6C0]
	0x01E74D6C LDR X0, [X8]
	0x01E74D70 ADRP X8, 0x2289000
	0x01E74D74 LDR X8, [X8 + 0x558]
	0x01E74D78 LDR W9, [X0 + 0xE0]
	0x01E74D7C LDR X20, [X8]
	0x01E74D80 CBNZ W9, 0x1E74D88
	0x01E74D84 BL 0x1C16DFC
	0x01E74D88 MOV X0, X20
	0x01E74D8C MOV X1, X31
	0x01E74D90 BL 0x338C698
	0x01E74D94 ADRP X8, 0x2282000
	0x01E74D98 LDR X8, [X8 + 0xA78]
	0x01E74D9C MOV X20, X0
	0x01E74DA0 LDR X8, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2566000
	006 Move X20, 0x228A000
	007 Move W8, [X21+347]
	008 Move X20, [X20+1216]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x228A000
	015 Move X0, [X0+1216]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+347], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call "il2cpp_vm_object_is_inst", X0
	022 Move X8, [X20]
	023 Move X20, X0
	024 Move W9, [X8+224]
	025 Compare W9, 0
	026 JumpIfNotEqual {29}
	027 Move X0, X8
	028 Call 0x1C17DFC
	029 Move X0, X20
	030 Call ChangeDetector.HasChangeCallbacks, X0
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {44}
	035 Move W1, 1
	036 Move W2, 1
	037 Move X0, X19
	038 Move W20, 1
	039 Call NetworkBehaviour.GetChangeDetector, X0, X1, X2
	040 Move [X19+120], X0
	041 Compare X0, 0
	042 JumpIfEqual {49}
	043 Move [X0+64], W20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return 
	049 Call 0x1C17F20

Method: System.Void PreRender()

Disassembly:
	0x01E74F24 STR W8, [X0 + 0x30]
	0x01E74F28 B 0x1E82058
	0x01E74F2C SUB X31, X31, 0x90
	0x01E74F30 STP X29, X30, [X31 + 0x30]
	0x01E74F34 STP X28, X27, [X31 + 0x40]
	0x01E74F38 STP X26, X25, [X31 + 0x50]
	0x01E74F3C STP X24, X23, [X31 + 0x60]
	0x01E74F40 STP X22, X21, [X31 + 0x70]
	0x01E74F44 STP X20, X19, [X31 + 0x80]
	0x01E74F48 ADRP X20, 0x2565000
	0x01E74F4C ADRP X21, 0x2289000
	0x01E74F50 LDRB W8, [X20 + 0x167]
	0x01E74F54 LDR X21, [X21 + 0x4C0]
	0x01E74F58 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X1, X0
	004 Move X0, [X0+120]
	005 Compare X0, 0
	006 JumpIfEqual {15}
	007 Add X2, X31, 16
	008 Add X3, X31, 0
	009 Move W4, 1
	010 Move [X31+16], X31
	011 Move [X31+24], X31
	012 Move [X31], X31
	013 Move [X31+8], X31
	014 Call ChangeDetector.DetectChangesInternal, X0, X1, X2, X3, X4
	015 Move X30, [X31+32]
	016 Add X31, X31, 48
	017 Return 

Method: System.Void Spawned()

Disassembly:
	0x01E74F88 LDR X0, [X0 + 0x5A8]

ISIL:
	001 Return 

Method: System.Void Despawned(Fusion.NetworkRunner runner, System.Boolean hasState)

Disassembly:
	0x01E74F8C BL 0x1C16CF4

ISIL:
	001 Return 

Method: T ReinterpretState(System.Int32 offset = 0)

Disassembly:
	0x022285A8 MOV X20, X0
	0x022285AC LDR X8, [X19 + 0x38]
	0x022285B0 LDR X1, [X8 + 0xA0]

ISIL:
	001 Move X8, [X0+80]
	002 Add X0, X8, W1
	003 Return X0

Method: Fusion.NetworkBehaviour/BehaviourReader`1<T> GetBehaviourReader(System.String property)

Disassembly:
	0x02226BDC SUB X31, X31, 0x50
	0x02226BE0 STR X30, [X31 + 0x20]
	0x02226BE4 STP X22, X21, [X31 + 0x30]
	0x02226BE8 STP X20, X19, [X31 + 0x40]
	0x02226BEC LDR X9, [X2 + 0x38]
	0x02226BF0 MOV X20, X1
	0x02226BF4 MOV X21, X0
	0x02226BF8 MOV X19, X8
	0x02226BFC CBNZ X9, 0x2226C24
	0x02226C00 ADRP X0, 0x1ECD000
	0x02226C04 LDR X0, [X0 + 0x6C0]
	0x02226C08 MOV X22, X2
	0x02226C0C BL 0x1C16CF4
	0x02226C10 LDR X9, [X22 + 0x38]
	0x02226C14 CBNZ X9, 0x2226C24
	0x02226C18 MOV X0, X22
	0x02226C1C BL 0x1C5C6E0
	0x02226C20 LDR X9, [X22 + 0x38]
	0x02226C24 ADRP X8, 0x1ECD000
	0x02226C28 LDR X8, [X8 + 0x6C0]
	0x02226C2C LDR X22, [X9]
	0x02226C30 LDR X0, [X8]
	0x02226C34 LDR W8, [X0 + 0xE0]
	0x02226C38 CBNZ W8, 0x2226C40
	0x02226C3C BL 0x1C16DFC
	0x02226C40 MOV X0, X22
	0x02226C44 MOV X1, X31
	0x02226C48 BL 0x338C698
	0x02226C4C MOV X2, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X9, [X2+56]
	008 Move X20, X1
	009 Move X21, X0
	010 Move X19, X8
	011 Compare X9, 0
	012 JumpIfNotEqual {15}
	013 Move X0, X2
	014 Call 0x1C5D6E0
	015 Compare X21, 0
	016 JumpIfEqual {37}
	017 Move X22, [X21+56]
	018 Move X0, X21
	019 Move X1, X31
	020 Call "il2cpp_vm_object_is_inst", X0
	021 Move X1, X0
	022 Add X8, X31, 0
	023 Move X0, X22
	024 Move X2, X20
	025 Call 0x2226D10, X0, X1, X2
	026 Move V1, [X31]
	027 Move V0, [X31+16]
	028 Move X22, [X31+48]
	029 Move X21, [X31+56]
	030 Move X30, [X31+32]
	031 Move [X19], V1
	032 Move [X19+8], V0
	033 Move X20, [X31+64]
	034 Move X19, [X31+72]
	035 Add X31, X31, 80
	036 Return X0
	037 Call 0x1C17F20

Method: Fusion.NetworkBehaviour/ArrayReader`1<T> GetArrayReader(System.String property)

Disassembly:
	0x02226A60 CBNZ X0, 0x2226A7C
	0x02226A64 MOV X0, X22
	0x02226A68 MOV X1, X31
	0x02226A6C BL 0x33BE520
	0x02226A70 MOV X1, X31
	0x02226A74 BL 0x1E73F90
	0x02226A78 STR X0, [X22 + 0x48]
	0x02226A7C LDR X8, [X21 + 0x38]
	0x02226A80 MOV X1, X20
	0x02226A84 LDR X2, [X8]
	0x02226A88 ADD X8, X31, 0x8
	0x02226A8C BL 0x2227234
	0x02226A90 LDP X8, X30, [X31 + 0x18]
	0x02226A94 LDUR V0, [X31 + 0x8]
	0x02226A98 LDP X22, X21, [X31 + 0x30]
	0x02226A9C STR X8, [X19 + 0x10]
	0x02226AA0 STR V0, [X19]
	0x02226AA4 LDP X20, X19, [X31 + 0x40]
	0x02226AA8 ADD X31, X31, 0x50
	0x02226AAC RET
	0x02226AB0 SUB X31, X31, 0x50
	0x02226AB4 STR X30, [X31 + 0x20]
	0x02226AB8 STP X22, X21, [X31 + 0x30]
	0x02226ABC STP X20, X19, [X31 + 0x40]
	0x02226AC0 LDR X9, [X2 + 0x38]
	0x02226AC4 MOV X21, X2
	0x02226AC8 MOV X20, X1
	0x02226ACC MOV X22, X0
	0x02226AD0 MOV X19, X8
	0x02226AD4 CBNZ X9, 0x2226AE0
	0x02226AD8 MOV X0, X21
	0x02226ADC BL 0x1C5C6E0
	0x02226AE0 LDR X0, [X22 + 0x48]
	0x02226AE4 CBNZ X0, 0x2226B00
	0x02226AE8 MOV X0, X22
	0x02226AEC MOV X1, X31
	0x02226AF0 BL 0x33BE520
	0x02226AF4 MOV X1, X31
	0x02226AF8 BL 0x1E73F90
	0x02226AFC STR X0, [X22 + 0x48]
	0x02226B00 LDR X8, [X21 + 0x38]
	0x02226B04 MOV X1, X20
	0x02226B08 LDR X2, [X8]
	0x02226B0C ADD X8, X31, 0x8

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X9, [X2+56]
	010 Move X21, X2
	011 Move X20, X1
	012 Move X22, X0
	013 Move X19, X8
	014 Compare X9, 0
	015 JumpIfNotEqual {18}
	016 Move X0, X21
	017 Call 0x1C5D6E0
	018 Compare X22, 0
	019 JumpIfEqual {58}
	020 Move X0, X22
	021 Move X1, X31
	022 Call "il2cpp_vm_object_is_inst", X0
	023 Move X8, [X21+56]
	024 Move X23, X0
	025 Move X1, [X8]
	026 Move X8, [X8+8]
	027 Move W9, [X1+309]
	028 Move X24, [X8]
	029 Move TEMP, X9
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {36}
	033 Move X0, X1
	034 Call 0x1C5D684
	035 Move X1, X0
	036 Move X0, X22
	037 Call 0x1C17E00
	038 Move X8, [X21+56]
	039 Move X2, X0
	040 Move X0, X23
	041 Move X1, X20
	042 Move X3, [X8+8]
	043 Add X8, X31, 0
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move V1, [X31]
	046 Move V0, [X31+16]
	047 Move X22, [X31+64]
	048 Move X21, [X31+72]
	049 Move X24, [X31+48]
	050 Move X23, [X31+56]
	051 Move X30, [X31+32]
	052 Move [X19], V1
	053 Move [X19+8], V0
	054 Move X20, [X31+80]
	055 Move X19, [X31+88]
	056 Add X31, X31, 96
	057 Return X0
	058 Call 0x1C17F20

Method: Fusion.NetworkBehaviour/LinkListReader`1<T> GetLinkListReader(System.String property)

Disassembly:
	0x02227490 MOV X19, X0
	0x02227494 ADRP X0, 0x1ED5000
	0x02227498 LDR X0, [X0 + 0x758]
	0x0222749C BL 0x1C16D08
	0x022274A0 BL 0x1C16F10
	0x022274A4 MOV X20, X0
	0x022274A8 ADRP X0, 0x1EF5000
	0x022274AC LDR X0, [X0 + 0x1A0]
	0x022274B0 BL 0x1C16D08
	0x022274B4 MOV X1, X0
	0x022274B8 MOV X0, X20
	0x022274BC MOV X2, X31
	0x022274C0 BL 0x33802E4
	0x022274C4 MOV X0, X20
	0x022274C8 MOV X1, X19
	0x022274CC BL 0x1C16DEC
	0x022274D0 STR X30, [X31 - 0x20]!
	0x022274D4 STP X20, X19, [X31 + 0x10]
	0x022274D8 ADRP X0, 0x1ED5000
	0x022274DC LDR X0, [X0 + 0x758]
	0x022274E0 MOV X19, X1
	0x022274E4 BL 0x1C16D08
	0x022274E8 BL 0x1C16F10
	0x022274EC MOV X20, X0
	0x022274F0 ADRP X0, 0x1EF5000
	0x022274F4 LDR X0, [X0 + 0x1A0]
	0x022274F8 BL 0x1C16D08
	0x022274FC MOV X1, X0
	0x02227500 MOV X0, X20
	0x02227504 MOV X2, X31
	0x02227508 BL 0x33802E4
	0x0222750C MOV X0, X20
	0x02227510 MOV X1, X19
	0x02227514 BL 0x1C16DEC
	0x02227518 STR X30, [X31 - 0x20]!
	0x0222751C STP X20, X19, [X31 + 0x10]
	0x02227520 MOV X19, X0
	0x02227524 ADRP X0, 0x1ED5000
	0x02227528 LDR X0, [X0 + 0x758]
	0x0222752C BL 0x1C16D08
	0x02227530 BL 0x1C16F10
	0x02227534 MOV X20, X0
	0x02227538 ADRP X0, 0x1EF5000
	0x0222753C LDR X0, [X0 + 0x1A0]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X9, [X2+56]
	010 Move X21, X2
	011 Move X20, X1
	012 Move X22, X0
	013 Move X19, X8
	014 Compare X9, 0
	015 JumpIfNotEqual {18}
	016 Move X0, X21
	017 Call 0x1C5D6E0
	018 Compare X22, 0
	019 JumpIfEqual {58}
	020 Move X0, X22
	021 Move X1, X31
	022 Call "il2cpp_vm_object_is_inst", X0
	023 Move X8, [X21+56]
	024 Move X23, X0
	025 Move X1, [X8]
	026 Move X8, [X8+8]
	027 Move W9, [X1+309]
	028 Move X24, [X8]
	029 Move TEMP, X9
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {36}
	033 Move X0, X1
	034 Call 0x1C5D684
	035 Move X1, X0
	036 Move X0, X22
	037 Call 0x1C17E00
	038 Move X8, [X21+56]
	039 Move X2, X0
	040 Move X0, X23
	041 Move X1, X20
	042 Move X3, [X8+8]
	043 Add X8, X31, 0
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move V1, [X31]
	046 Move V0, [X31+16]
	047 Move X22, [X31+64]
	048 Move X21, [X31+72]
	049 Move X24, [X31+48]
	050 Move X23, [X31+56]
	051 Move X30, [X31+32]
	052 Move [X19], V1
	053 Move [X19+8], V0
	054 Move X20, [X31+80]
	055 Move X19, [X31+88]
	056 Add X31, X31, 96
	057 Return X0
	058 Call 0x1C17F20

Method: Fusion.NetworkBehaviour/DictionaryReader`2<K, V> GetDictionaryReader(System.String property)

Disassembly:
	0x02226DA0 ADD X8, X31, 0x8
	0x02226DA4 MOV X0, X21
	0x02226DA8 MOV X1, X20
	0x02226DAC MOV X3, X31
	0x02226DB0 BL 0x1E743E0
	0x02226DB4 LDP X8, X30, [X31 + 0x18]
	0x02226DB8 LDUR V0, [X31 + 0x8]
	0x02226DBC LDP X22, X21, [X31 + 0x30]
	0x02226DC0 STR X8, [X19 + 0x10]
	0x02226DC4 STR V0, [X19]
	0x02226DC8 LDP X20, X19, [X31 + 0x40]
	0x02226DCC ADD X31, X31, 0x50
	0x02226DD0 RET
	0x02226DD4 SUB X31, X31, 0x50
	0x02226DD8 STR X30, [X31 + 0x20]
	0x02226DDC STP X22, X21, [X31 + 0x30]
	0x02226DE0 STP X20, X19, [X31 + 0x40]
	0x02226DE4 LDR X9, [X2 + 0x38]
	0x02226DE8 MOV X20, X1
	0x02226DEC MOV X21, X0
	0x02226DF0 MOV X19, X8
	0x02226DF4 CBNZ X9, 0x2226E1C
	0x02226DF8 ADRP X0, 0x1ECD000
	0x02226DFC LDR X0, [X0 + 0x6C0]
	0x02226E00 MOV X22, X2
	0x02226E04 BL 0x1C16CF4
	0x02226E08 LDR X9, [X22 + 0x38]
	0x02226E0C CBNZ X9, 0x2226E1C
	0x02226E10 MOV X0, X22
	0x02226E14 BL 0x1C5C6E0
	0x02226E18 LDR X9, [X22 + 0x38]
	0x02226E1C ADRP X8, 0x1ECD000
	0x02226E20 LDR X8, [X8 + 0x6C0]
	0x02226E24 LDR X22, [X9]
	0x02226E28 LDR X0, [X8]
	0x02226E2C LDR W8, [X0 + 0xE0]
	0x02226E30 CBNZ W8, 0x2226E38
	0x02226E34 BL 0x1C16DFC
	0x02226E38 MOV X0, X22
	0x02226E3C MOV X1, X31
	0x02226E40 BL 0x338C698
	0x02226E44 MOV X2, X0
	0x02226E48 ADD X8, X31, 0x8
	0x02226E4C MOV X0, X21
	0x02226E50 MOV X1, X20
	0x02226E54 MOV X3, X31
	0x02226E58 BL 0x1E743E0
	0x02226E5C LDP X8, X30, [X31 + 0x18]
	0x02226E60 LDUR V0, [X31 + 0x8]
	0x02226E64 LDP X22, X21, [X31 + 0x30]
	0x02226E68 STR X8, [X19 + 0x10]
	0x02226E6C STR V0, [X19]
	0x02226E70 LDP X20, X19, [X31 + 0x40]
	0x02226E74 ADD X31, X31, 0x50
	0x02226E78 RET
	0x02226E7C SUB X31, X31, 0x50
	0x02226E80 STR X30, [X31 + 0x20]
	0x02226E84 STP X22, X21, [X31 + 0x30]
	0x02226E88 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X9, [X2+56]
	011 Move X21, X2
	012 Move X20, X1
	013 Move X22, X0
	014 Move X19, X8
	015 Compare X9, 0
	016 JumpIfNotEqual {19}
	017 Move X0, X21
	018 Call 0x1C5D6E0
	019 Compare X22, 0
	020 JumpIfEqual {76}
	021 Move X0, X22
	022 Move X1, X31
	023 Call "il2cpp_vm_object_is_inst", X0
	024 Move X8, [X21+56]
	025 Move X23, X0
	026 Move X1, [X8]
	027 Move X8, [X8+16]
	028 Move W9, [X1+309]
	029 Move X25, [X8]
	030 Move TEMP, X9
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {37}
	034 Move X0, X1
	035 Call 0x1C5D684
	036 Move X1, X0
	037 Move X0, X22
	038 Call 0x1C17E00
	039 Move X8, [X21+56]
	040 Move X24, X0
	041 Move X1, [X8+8]
	042 Move W8, [X1+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {50}
	047 Move X0, X1
	048 Call 0x1C5D684
	049 Move X1, X0
	050 Move X0, X22
	051 Call 0x1C17E00
	052 Move X8, [X21+56]
	053 Move X3, X0
	054 Move X0, X23
	055 Move X1, X20
	056 Move X4, [X8+16]
	057 Add X8, X31, 8
	058 Move X2, X24
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X8, [X31+40]
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 Move X22, [X31+80]
	064 Move X21, [X31+88]
	065 Move [X19+32], X8
	066 Move X24, [X31+64]
	067 Move X23, [X31+72]
	068 Move [X19], V1
	069 Move [X19+8], V0
	070 Move X20, [X31+96]
	071 Move X19, [X31+104]
	072 Move X30, [X31+48]
	073 Move X25, [X31+56]
	074 Add X31, X31, 112
	075 Return X0
	076 Call 0x1C17F20

Method: Fusion.NetworkBehaviour/BehaviourReader`1<T> GetBehaviourReader(Fusion.NetworkRunner runner, System.Type behaviourType, System.String property)

Disassembly:
	0x02226D10 LDUR V0, [X31 + 0x8]
	0x02226D14 LDP X22, X21, [X31 + 0x30]
	0x02226D18 STR X8, [X19 + 0x10]
	0x02226D1C STR V0, [X19]
	0x02226D20 LDP X20, X19, [X31 + 0x40]
	0x02226D24 ADD X31, X31, 0x50
	0x02226D28 RET
	0x02226D2C SUB X31, X31, 0x50
	0x02226D30 STR X30, [X31 + 0x20]
	0x02226D34 STP X22, X21, [X31 + 0x30]
	0x02226D38 STP X20, X19, [X31 + 0x40]
	0x02226D3C LDR X9, [X2 + 0x38]
	0x02226D40 MOV X20, X1
	0x02226D44 MOV X21, X0
	0x02226D48 MOV X19, X8
	0x02226D4C CBNZ X9, 0x2226D74
	0x02226D50 ADRP X0, 0x1ECD000
	0x02226D54 LDR X0, [X0 + 0x6C0]
	0x02226D58 MOV X22, X2
	0x02226D5C BL 0x1C16CF4
	0x02226D60 LDR X9, [X22 + 0x38]
	0x02226D64 CBNZ X9, 0x2226D74
	0x02226D68 MOV X0, X22
	0x02226D6C BL 0x1C5C6E0
	0x02226D70 LDR X9, [X22 + 0x38]
	0x02226D74 ADRP X8, 0x1ECD000
	0x02226D78 LDR X8, [X8 + 0x6C0]
	0x02226D7C LDR X22, [X9]
	0x02226D80 LDR X0, [X8]
	0x02226D84 LDR W8, [X0 + 0xE0]
	0x02226D88 CBNZ W8, 0x2226D90
	0x02226D8C BL 0x1C16DFC
	0x02226D90 MOV X0, X22
	0x02226D94 MOV X1, X31
	0x02226D98 BL 0x338C698
	0x02226D9C MOV X2, X0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X24, 0x21B4000
	010 Move X23, 0x1EF7000
	011 Move X19, X8
	012 Move W8, [X24+2171]
	013 Move X23, [X23+408]
	014 Move X21, X2
	015 Move X22, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x1EF7000
	022 Move X0, [X0+408]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X24+2171], W8
	026 Move X2, [X23]
	027 Add X8, X31, 8
	028 Move X0, X22
	029 Move X1, X21
	030 Move [X31+8], X31
	031 Move [X31+16], X31
	032 Move [X31+24], X31
	033 Call 0x2227E7C, X0, X1
	034 Move X8, [X31+24]
	035 Move X30, [X31+32]
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 Move [X19], X20
	038 Move X22, [X31+64]
	039 Move X21, [X31+72]
	040 Move [X19+24], X8
	041 Move [X19+8], V0
	042 Move X20, [X31+80]
	043 Move X19, [X31+88]
	044 Move X24, [X31+48]
	045 Move X23, [X31+56]
	046 Add X31, X31, 96
	047 Return X0

Method: Fusion.NetworkBehaviour/BehaviourReader`1<TProperty> GetBehaviourReader(Fusion.NetworkRunner runner, System.String property)

Disassembly:
	0x02226C50 ADD X8, X31, 0x8
	0x02226C54 MOV X0, X21
	0x02226C58 MOV X1, X20
	0x02226C5C MOV X3, X31
	0x02226C60 BL 0x1E743E0
	0x02226C64 LDP X8, X30, [X31 + 0x18]
	0x02226C68 LDUR V0, [X31 + 0x8]
	0x02226C6C LDP X22, X21, [X31 + 0x30]
	0x02226C70 STR X8, [X19 + 0x10]
	0x02226C74 STR V0, [X19]
	0x02226C78 LDP X20, X19, [X31 + 0x40]
	0x02226C7C ADD X31, X31, 0x50
	0x02226C80 RET
	0x02226C84 SUB X31, X31, 0x50
	0x02226C88 STR X30, [X31 + 0x20]
	0x02226C8C STP X22, X21, [X31 + 0x30]
	0x02226C90 STP X20, X19, [X31 + 0x40]
	0x02226C94 LDR X9, [X2 + 0x38]
	0x02226C98 MOV X20, X1
	0x02226C9C MOV X21, X0
	0x02226CA0 MOV X19, X8
	0x02226CA4 CBNZ X9, 0x2226CCC
	0x02226CA8 ADRP X0, 0x1ECD000
	0x02226CAC LDR X0, [X0 + 0x6C0]
	0x02226CB0 MOV X22, X2
	0x02226CB4 BL 0x1C16CF4
	0x02226CB8 LDR X9, [X22 + 0x38]
	0x02226CBC CBNZ X9, 0x2226CCC
	0x02226CC0 MOV X0, X22
	0x02226CC4 BL 0x1C5C6E0
	0x02226CC8 LDR X9, [X22 + 0x38]
	0x02226CCC ADRP X8, 0x1ECD000
	0x02226CD0 LDR X8, [X8 + 0x6C0]
	0x02226CD4 LDR X22, [X9]
	0x02226CD8 LDR X0, [X8]
	0x02226CDC LDR W8, [X0 + 0xE0]
	0x02226CE0 CBNZ W8, 0x2226CE8
	0x02226CE4 BL 0x1C16DFC
	0x02226CE8 MOV X0, X22
	0x02226CEC MOV X1, X31
	0x02226CF0 BL 0x338C698
	0x02226CF4 MOV X2, X0
	0x02226CF8 ADD X8, X31, 0x8
	0x02226CFC MOV X0, X21
	0x02226D00 MOV X1, X20
	0x02226D04 MOV X3, X31
	0x02226D08 BL 0x1E743E0
	0x02226D0C LDP X8, X30, [X31 + 0x18]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X9, [X2+56]
	008 Move X21, X1
	009 Move X19, X0
	010 Move X20, X8
	011 Compare X9, 0
	012 JumpIfNotEqual {26}
	013 Move X0, 0x1EF7000
	014 Move X0, [X0+408]
	015 Move X22, X2
	016 Call 0x1C17CF4
	017 Move X0, 0x1ECE000
	018 Move X0, [X0+1728]
	019 Call 0x1C17CF4
	020 Move X9, [X22+56]
	021 Compare X9, 0
	022 JumpIfNotEqual {26}
	023 Move X0, X22
	024 Call 0x1C5D6E0
	025 Move X9, [X22+56]
	026 Move X8, 0x1ECE000
	027 Move X8, [X8+1728]
	028 Move [X31+8], X31
	029 Move [X31+16], X31
	030 Move [X31+24], X31
	031 Move X22, [X9+8]
	032 Move X0, [X8]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X22
	038 Move X1, X31
	039 Call Type.GetTypeFromHandle, X0
	040 Move X8, 0x1EF7000
	041 Move X8, [X8+408]
	042 Move X1, X21
	043 Move X2, [X8]
	044 Add X8, X31, 8
	045 Call 0x2227E7C, X0, X1
	046 Move X8, [X31+24]
	047 Move X30, [X31+32]
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move [X20], X19
	050 Move X22, [X31+48]
	051 Move X21, [X31+56]
	052 Move [X20+24], X8
	053 Move [X20+8], V0
	054 Move X20, [X31+64]
	055 Move X19, [X31+72]
	056 Add X31, X31, 80
	057 Return X0

Method: Fusion.NetworkBehaviour/PropertyReader`1<TProperty> GetPropertyReader(System.String property)

Disassembly:
	0x02227B38 ADD X8, X31, 0x0
	0x02227B3C SUB X27, X8, X27
	0x02227B40 ADD X31, X27, 0x0
	0x02227B44 MOV X0, X27
	0x02227B48 MOV W1, W31
	0x02227B4C MOV X2, X21
	0x02227B50 BL 0x3EB1B10
	0x02227B54 LDP X8, X9, [X20 + 0x8]
	0x02227B58 LDR X1, [X19 + 0x8]
	0x02227B5C LDP X10, X11, [X20 + 0x18]
	0x02227B60 SUB X12, X29, 0x18
	0x02227B64 LDUR X2, [X29 - 0x58]
	0x02227B68 LDR X0, [X1]
	0x02227B6C STP X8, X9, [X29 - 0x18]
	0x02227B70 SUB X8, X29, 0x28
	0x02227B74 STP X10, X11, [X29 - 0x28]
	0x02227B78 STP X12, X8, [X29 - 0x40]
	0x02227B7C STUR X26, [X29 - 0x30]
	0x02227B80 LDR X8, [X1 + 0x10]
	0x02227B84 SUB X3, X29, 0x40
	0x02227B88 MOV X4, X26
	0x02227B8C BLR X8
	0x02227B90 LDUR X2, [X29 - 0x60]
	0x02227B94 MOV X0, X28
	0x02227B98 MOV X1, X26
	0x02227B9C BL 0x3EB1AC0
	0x02227BA0 LDR X8, [X23 + 0x38]
	0x02227BA4 MOV X0, X28
	0x02227BA8 LDR X8, [X8 + 0x18]
	0x02227BAC LDR X1, [X8 + 0x80]
	0x02227BB0 BL 0x1C16D18
	0x02227BB4 MOV X1, X0
	0x02227BB8 MOV X0, X22
	0x02227BBC MOV X2, X21
	0x02227BC0 BL 0x3EB1AC0
	0x02227BC4 MOV X0, X25
	0x02227BC8 MOV X1, X22
	0x02227BCC MOV X2, X21
	0x02227BD0 BL 0x3EB1AC0
	0x02227BD4 LDR X8, [X23 + 0x38]
	0x02227BD8 MOV X0, X28

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X9, [X1+56]
	008 Move X21, X1
	009 Move X20, X0
	010 Move X19, X8
	011 Compare X9, 0
	012 JumpIfNotEqual {22}
	013 Move X0, 0x1ECD000
	014 Move X0, [X0+1728]
	015 Call 0x1C17CF4
	016 Move X9, [X21+56]
	017 Compare X9, 0
	018 JumpIfNotEqual {22}
	019 Move X0, X21
	020 Call 0x1C5D6E0
	021 Move X9, [X21+56]
	022 Move X8, 0x1ECD000
	023 Move X8, [X8+1728]
	024 Move X22, [X9]
	025 Move X0, [X8]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X22
	031 Move X1, X31
	032 Call Type.GetTypeFromHandle, X0
	033 Move X8, [X21+56]
	034 Move X1, X20
	035 Move X2, [X8+8]
	036 Add X8, X31, 8
	037 Move X9, [X2]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X8, [X31+24]
	040 Move X30, [X31+32]
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 Move X22, [X31+48]
	043 Move X21, [X31+56]
	044 Move [X19+16], X8
	045 Move [X19], V0
	046 Move X20, [X31+64]
	047 Move X19, [X31+72]
	048 Add X31, X31, 80
	049 Return X0

Method: Fusion.NetworkBehaviour/PropertyReader`1<T> GetPropertyReader(System.Type behaviourType, System.String property)

Disassembly:
	0x02227E7C B.EQ 0x2227E94
	0x02227E80 UBFM X8, X8, 0x20, 0x3F
	0x02227E84 CMP W22, W8
	0x02227E88 B.NE 0x2227E94
	0x02227E8C LDR X1, [X21]
	0x02227E90 B 0x2227EB8
	0x02227E94 LDR X8, [X20 + 0x38]
	0x02227E98 LDR X0, [X8 + 0x20]
	0x02227E9C LDRB W8, [X0 + 0x135]
	0x02227EA0 TBNZ X8, 0x0, 0x2227EA8
	0x02227EA4 BL 0x1C5C684
	0x02227EA8 MOV W1, W22
	0x02227EAC BL 0x1C16D6C
	0x02227EB0 MOV X1, X0
	0x02227EB4 STR X0, [X21]
	0x02227EB8 LDR X8, [X20 + 0x38]
	0x02227EBC MOVZ W2, 0x1
	0x02227EC0 MOV X0, X19
	0x02227EC4 LDR X3, [X8 + 0x28]
	0x02227EC8 BL 0x240B518
	0x02227ECC LDP X20, X19, [X31 + 0x20]
	0x02227ED0 LDP X22, X21, [X31 + 0x10]
	0x02227ED4 LDR X30, [X31], #0x30
	0x02227ED8 RET
	0x02227EDC STR X30, [X31 - 0x30]!
	0x02227EE0 STP X22, X21, [X31 + 0x10]
	0x02227EE4 STP X20, X19, [X31 + 0x20]
	0x02227EE8 LDR X8, [X2 + 0x38]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X9, [X2+56]
	008 Move X21, X2
	009 Move X20, X1
	010 Move X22, X0
	011 Move X19, X8
	012 Compare X9, 0
	013 JumpIfNotEqual {16}
	014 Move X0, X21
	015 Call 0x1C5D6E0
	016 Move X0, X22
	017 Move X1, X31
	018 Call NetworkBehaviour.GetReadersForType, X0
	019 Move X8, [X21+56]
	020 Move X1, X20
	021 Move X2, [X8]
	022 Add X8, X31, 8
	023 Call NetworkBehaviour.GetPropertyReader, X0, X1
	024 Move X8, [X31+24]
	025 Move X30, [X31+32]
	026 NotImplemented "Instruction LDUR not yet implemented."
	027 Move X22, [X31+48]
	028 Move X21, [X31+56]
	029 Move [X19+16], X8
	030 Move [X19], V0
	031 Move X20, [X31+64]
	032 Move X19, [X31+72]
	033 Add X31, X31, 80
	034 Return X0

Method: Fusion.NetworkBehaviour/ArrayReader`1<T> GetArrayReader(System.Type behaviourType, System.String property, Fusion.IElementReaderWriter`1<T> readerWriter = null)

Disassembly:
	0x02226B10 LDR X9, [X2]
	0x02226B14 BLR X9
	0x02226B18 LDP X8, X30, [X31 + 0x18]
	0x02226B1C LDUR V0, [X31 + 0x8]
	0x02226B20 LDP X22, X21, [X31 + 0x30]
	0x02226B24 STR X8, [X19 + 0x10]
	0x02226B28 STR V0, [X19]
	0x02226B2C LDP X20, X19, [X31 + 0x40]
	0x02226B30 ADD X31, X31, 0x50
	0x02226B34 RET
	0x02226B38 SUB X31, X31, 0x50
	0x02226B3C STR X30, [X31 + 0x20]
	0x02226B40 STP X22, X21, [X31 + 0x30]
	0x02226B44 STP X20, X19, [X31 + 0x40]
	0x02226B48 LDR X9, [X1 + 0x38]
	0x02226B4C MOV X21, X1
	0x02226B50 MOV X20, X0
	0x02226B54 MOV X19, X8
	0x02226B58 CBNZ X9, 0x2226B7C
	0x02226B5C ADRP X0, 0x1ECD000
	0x02226B60 LDR X0, [X0 + 0x6C0]
	0x02226B64 BL 0x1C16CF4
	0x02226B68 LDR X9, [X21 + 0x38]
	0x02226B6C CBNZ X9, 0x2226B7C
	0x02226B70 MOV X0, X21
	0x02226B74 BL 0x1C5C6E0
	0x02226B78 LDR X9, [X21 + 0x38]
	0x02226B7C ADRP X8, 0x1ECD000
	0x02226B80 LDR X8, [X8 + 0x6C0]
	0x02226B84 LDR X22, [X9]
	0x02226B88 LDR X0, [X8]
	0x02226B8C LDR W8, [X0 + 0xE0]
	0x02226B90 CBNZ W8, 0x2226B98
	0x02226B94 BL 0x1C16DFC
	0x02226B98 MOV X0, X22
	0x02226B9C MOV X1, X31
	0x02226BA0 BL 0x338C698
	0x02226BA4 LDR X8, [X21 + 0x38]
	0x02226BA8 MOV X1, X20
	0x02226BAC LDR X2, [X8 + 0x8]
	0x02226BB0 ADD X8, X31, 0x8
	0x02226BB4 LDR X9, [X2]
	0x02226BB8 BLR X9
	0x02226BBC LDP X8, X30, [X31 + 0x18]
	0x02226BC0 LDUR V0, [X31 + 0x8]
	0x02226BC4 LDP X22, X21, [X31 + 0x30]
	0x02226BC8 STR X8, [X19 + 0x10]
	0x02226BCC STR V0, [X19]
	0x02226BD0 LDP X20, X19, [X31 + 0x40]
	0x02226BD4 ADD X31, X31, 0x50
	0x02226BD8 RET

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X9, [X3+56]
	009 Move X22, X3
	010 Move X19, X2
	011 Move X21, X1
	012 Move X23, X0
	013 Move X20, X8
	014 Compare X9, 0
	015 JumpIfNotEqual {24}
	016 Move X0, 0x1ECE000
	017 Move X0, [X0+1728]
	018 Call 0x1C17CF4
	019 Move X8, [X22+56]
	020 Compare X8, 0
	021 JumpIfNotEqual {24}
	022 Move X0, X22
	023 Call 0x1C5D6E0
	024 Move X0, X23
	025 Move X1, X31
	026 Call NetworkBehaviour.GetReadersForType, X0
	027 Move X8, 0x1ECE000
	028 Move X8, [X8+1728]
	029 Move X9, [X22+56]
	030 Move X22, X0
	031 Move X8, [X8]
	032 Move X23, [X9+8]
	033 Move W10, [X8+224]
	034 Compare W10, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Move X0, X23
	039 Move X1, X31
	040 Call Type.GetTypeFromHandle, X0
	041 Move X2, X0
	042 Add X8, X31, 8
	043 Move X0, X22
	044 Move X1, X21
	045 Move X3, X31
	046 Call NetworkBehaviour.GetPropertyReaderData, X0, X1, X2
	047 Move X8, [X31+24]
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X22, [X31+80]
	050 Move X21, [X31+88]
	051 Move X30, [X31+64]
	052 Move X23, [X31+72]
	053 Move [X20+16], X8
	054 Move [X20+24], X19
	055 Move [X20], V0
	056 Move X20, [X31+96]
	057 Move X19, [X31+104]
	058 Move [X31+48], X8
	059 Move [X31+2], V0
	060 Add X31, X31, 112
	061 Return X0

Method: Fusion.NetworkBehaviour/DictionaryReader`2<K, V> GetDictionaryReader(System.Type behaviourType, System.String property, Fusion.IElementReaderWriter`1<K> keyReaderWriter = null, Fusion.IElementReaderWriter`1<V> valueReaderWriter = null)

Disassembly:
	0x02226E8C LDR X9, [X2 + 0x38]
	0x02226E90 MOV X21, X2
	0x02226E94 MOV X20, X1
	0x02226E98 MOV X22, X0
	0x02226E9C MOV X19, X8
	0x02226EA0 CBNZ X9, 0x2226EAC
	0x02226EA4 MOV X0, X21
	0x02226EA8 BL 0x1C5C6E0
	0x02226EAC MOV X0, X22
	0x02226EB0 MOV X1, X31
	0x02226EB4 BL 0x1E73F90
	0x02226EB8 LDR X8, [X21 + 0x38]
	0x02226EBC MOV X1, X20
	0x02226EC0 LDR X2, [X8]
	0x02226EC4 ADD X8, X31, 0x8
	0x02226EC8 BL 0x2226EEC
	0x02226ECC LDP X8, X30, [X31 + 0x18]
	0x02226ED0 LDUR V0, [X31 + 0x8]
	0x02226ED4 LDP X22, X21, [X31 + 0x30]
	0x02226ED8 STR X8, [X19 + 0x10]
	0x02226EDC STR V0, [X19]
	0x02226EE0 LDP X20, X19, [X31 + 0x40]
	0x02226EE4 ADD X31, X31, 0x50
	0x02226EE8 RET
	0x02226EEC SUB X31, X31, 0x50
	0x02226EF0 STR X30, [X31 + 0x20]
	0x02226EF4 STP X22, X21, [X31 + 0x30]
	0x02226EF8 STP X20, X19, [X31 + 0x40]
	0x02226EFC LDR X9, [X2 + 0x38]
	0x02226F00 MOV X20, X1
	0x02226F04 MOV X21, X0
	0x02226F08 MOV X19, X8
	0x02226F0C CBNZ X9, 0x2226F34
	0x02226F10 ADRP X0, 0x1ECD000
	0x02226F14 LDR X0, [X0 + 0x6C0]
	0x02226F18 MOV X22, X2
	0x02226F1C BL 0x1C16CF4
	0x02226F20 LDR X9, [X22 + 0x38]
	0x02226F24 CBNZ X9, 0x2226F34
	0x02226F28 MOV X0, X22
	0x02226F2C BL 0x1C5C6E0
	0x02226F30 LDR X9, [X22 + 0x38]
	0x02226F34 ADRP X8, 0x1ECD000
	0x02226F38 LDR X8, [X8 + 0x6C0]
	0x02226F3C LDR X22, [X9]
	0x02226F40 LDR X0, [X8]
	0x02226F44 LDR W8, [X0 + 0xE0]
	0x02226F48 CBNZ W8, 0x2226F50
	0x02226F4C BL 0x1C16DFC
	0x02226F50 MOV X0, X22
	0x02226F54 MOV X1, X31
	0x02226F58 BL 0x338C698
	0x02226F5C MOV X2, X0
	0x02226F60 ADD X8, X31, 0x8
	0x02226F64 MOV X0, X21

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X9, [X4+56]
	010 Move X23, X4
	011 Move X19, X3
	012 Move X20, X2
	013 Move X22, X1
	014 Move X24, X0
	015 Move X21, X8
	016 Compare X9, 0
	017 JumpIfNotEqual {26}
	018 Move X0, 0x1ECE000
	019 Move X0, [X0+1728]
	020 Call 0x1C17CF4
	021 Move X8, [X23+56]
	022 Compare X8, 0
	023 JumpIfNotEqual {26}
	024 Move X0, X23
	025 Call 0x1C5D6E0
	026 Move X0, X24
	027 Move X1, X31
	028 Call NetworkBehaviour.GetReadersForType, X0
	029 Move X8, 0x1ECE000
	030 Move X8, [X8+1728]
	031 Move X9, [X23+56]
	032 Move X23, X0
	033 Move X8, [X8]
	034 Move X24, [X9+8]
	035 Move W10, [X8+224]
	036 Compare W10, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X24
	041 Move X1, X31
	042 Call Type.GetTypeFromHandle, X0
	043 Move X2, X0
	044 Add X8, X31, 8
	045 Move X0, X23
	046 Move X1, X22
	047 Move X3, X31
	048 Call NetworkBehaviour.GetPropertyReaderData, X0, X1, X2
	049 Move X8, [X31+24]
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 Move [X21+32], X19
	052 Move X24, [X31+80]
	053 Move X23, [X31+88]
	054 Move [X21+16], X8
	055 Move [X21+24], X20
	056 Move [X21], V0
	057 Move X20, [X31+112]
	058 Move X19, [X31+120]
	059 Move X22, [X31+96]
	060 Move X21, [X31+104]
	061 Move X30, [X31+64]
	062 Move [X31+48], X8
	063 Move [X31+2], V0
	064 Add X31, X31, 128
	065 Return X0

Method: Fusion.NetworkBehaviour/LinkListReader`1<T> GetLinkListReader(System.Type behaviourType, System.String property, Fusion.IElementReaderWriter`1<T> readerWriter = null)

Disassembly:
	0x02227540 BL 0x1C16D08
	0x02227544 MOV X1, X0
	0x02227548 MOV X0, X20
	0x0222754C MOV X2, X31
	0x02227550 BL 0x33802E4
	0x02227554 MOV X0, X20
	0x02227558 MOV X1, X19
	0x0222755C BL 0x1C16DEC
	0x02227560 STR X30, [X31 - 0x20]!
	0x02227564 STP X20, X19, [X31 + 0x10]
	0x02227568 ADRP X0, 0x1ED5000
	0x0222756C LDR X0, [X0 + 0x758]
	0x02227570 MOV X19, X1
	0x02227574 BL 0x1C16D08
	0x02227578 BL 0x1C16F10
	0x0222757C MOV X20, X0
	0x02227580 ADRP X0, 0x1EF5000
	0x02227584 LDR X0, [X0 + 0x1A0]
	0x02227588 BL 0x1C16D08
	0x0222758C MOV X1, X0
	0x02227590 MOV X0, X20
	0x02227594 MOV X2, X31
	0x02227598 BL 0x33802E4
	0x0222759C MOV X0, X20
	0x022275A0 MOV X1, X19
	0x022275A4 BL 0x1C16DEC
	0x022275A8 LDR X8, [X0 + 0x50]
	0x022275AC ADD X0, X8, W1, 0x2, SXTW
	0x022275B0 RET
	0x022275B4 LDR X8, [X0 + 0x50]
	0x022275B8 ADD X0, X8, W1, 0x2, SXTW
	0x022275BC RET
	0x022275C0 LDR X8, [X0 + 0x50]
	0x022275C4 ADD X0, X8, W1, 0x2, SXTW
	0x022275C8 RET
	0x022275CC LDR X8, [X0 + 0x50]
	0x022275D0 ADD X0, X8, W1, 0x2, SXTW
	0x022275D4 RET
	0x022275D8 LDR X8, [X0 + 0x50]
	0x022275DC ADD X0, X8, W1, 0x2, SXTW
	0x022275E0 RET
	0x022275E4 LDR X8, [X0 + 0x50]
	0x022275E8 ADD X0, X8, W1, 0x2, SXTW
	0x022275EC RET
	0x022275F0 LDR X8, [X0 + 0x50]
	0x022275F4 ADD X0, X8, W1, 0x2, SXTW
	0x022275F8 RET
	0x022275FC LDR X8, [X0]
	0x02227600 LDRSW X9, [X1]
	0x02227604 LDR W0, [X8, X9, LSL #2]
	0x02227608 RET

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X9, [X3+56]
	009 Move X22, X3
	010 Move X19, X2
	011 Move X21, X1
	012 Move X23, X0
	013 Move X20, X8
	014 Compare X9, 0
	015 JumpIfNotEqual {24}
	016 Move X0, 0x1ECD000
	017 Move X0, [X0+1728]
	018 Call 0x1C17CF4
	019 Move X8, [X22+56]
	020 Compare X8, 0
	021 JumpIfNotEqual {24}
	022 Move X0, X22
	023 Call 0x1C5D6E0
	024 Move X0, X23
	025 Move X1, X31
	026 Call NetworkBehaviour.GetReadersForType, X0
	027 Move X8, 0x1ECD000
	028 Move X8, [X8+1728]
	029 Move X9, [X22+56]
	030 Move X22, X0
	031 Move X8, [X8]
	032 Move X23, [X9+8]
	033 Move W10, [X8+224]
	034 Compare W10, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Move X0, X23
	039 Move X1, X31
	040 Call Type.GetTypeFromHandle, X0
	041 Move X2, X0
	042 Add X8, X31, 8
	043 Move X0, X22
	044 Move X1, X21
	045 Move X3, X31
	046 Call NetworkBehaviour.GetPropertyReaderData, X0, X1, X2
	047 Move X8, [X31+24]
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X22, [X31+80]
	050 Move X21, [X31+88]
	051 Move X30, [X31+64]
	052 Move X23, [X31+72]
	053 Move [X20+16], X8
	054 Move [X20+24], X19
	055 Move [X20], V0
	056 Move X20, [X31+96]
	057 Move X19, [X31+104]
	058 Move [X31+48], X8
	059 Move [X31+2], V0
	060 Add X31, X31, 112
	061 Return X0

Method: Fusion.NetworkBehaviour/PropertyReader`1<T> GetPropertyReader(System.String property)

Disassembly:
	0x0222760C LDRSW X8, [X1]
	0x02227610 LDR X9, [X0]
	0x02227614 UBFM X8, X8, 0x3E, 0x3D
	0x02227618 LDRB W0, [X8, X9, LSL]
	0x0222761C RET
	0x02227620 LDR X9, [X0]
	0x02227624 LDRSW X10, [X1]
	0x02227628 MOVZ W2, 0x64
	0x0222762C MOV X0, X8
	0x02227630 ADD X1, X9, X10, 0x2, LSL
	0x02227634 B 0x3EB1AC0
	0x02227638 LDR X8, [X0]
	0x0222763C LDRSW X9, [X1]
	0x02227640 LDR W0, [X8, X9, LSL #2]
	0x02227644 RET
	0x02227648 LDRSW X8, [X1]
	0x0222764C LDR X9, [X0]
	0x02227650 UBFM X8, X8, 0x3E, 0x3D
	0x02227654 LDR X0, [X8, X9, LSL]
	0x02227658 RET
	0x0222765C STP X30, X21, [X31 - 0x20]!
	0x02227660 STP X20, X19, [X31 + 0x10]
	0x02227664 LDR X8, [X2 + 0x38]
	0x02227668 MOV X19, X1
	0x0222766C MOV X20, X0
	0x02227670 CBNZ X8, 0x2227684
	0x02227674 MOV X0, X2
	0x02227678 MOV X21, X2
	0x0222767C BL 0x1C5C6E0
	0x02227680 LDR X8, [X21 + 0x38]
	0x02227684 LDP X1, X2, [X20]
	0x02227688 LDR X3, [X8 + 0x8]
	0x0222768C MOV X0, X19

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X9, [X2+56]
	008 Move X21, X2
	009 Move X20, X1
	010 Move X22, X0
	011 Move X19, X8
	012 Compare X9, 0
	013 JumpIfNotEqual {16}
	014 Move X0, X21
	015 Call 0x1C5D6E0
	016 Move X0, [X22+72]
	017 Compare X0, 0
	018 JumpIfNotEqual {25}
	019 Move X0, X22
	020 Move X1, X31
	021 Call "il2cpp_vm_object_is_inst", X0
	022 Move X1, X31
	023 Call NetworkBehaviour.GetReadersForType, X0
	024 Move [X22+72], X0
	025 Move X8, [X21+56]
	026 Move X1, X20
	027 Move X2, [X8]
	028 Add X8, X31, 8
	029 Call 0x2227BDC, X0, X1
	030 Move X8, [X31+24]
	031 Move X30, [X31+32]
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 Move X22, [X31+48]
	034 Move X21, [X31+56]
	035 Move [X19+16], X8
	036 Move [X19], V0
	037 Move X20, [X31+64]
	038 Move X19, [X31+72]
	039 Add X31, X31, 80
	040 Return X0

Method: Fusion.NetworkBehaviour/ReadersForType GetReadersForType(System.Type type)

Disassembly:
	0x01E74F90 ADRP X0, 0x2289000
	0x01E74F94 LDR X0, [X0 + 0x5B0]
	0x01E74F98 BL 0x1C16CF4
	0x01E74F9C ADRP X0, 0x2289000
	0x01E74FA0 LDR X0, [X0 + 0x5B8]
	0x01E74FA4 BL 0x1C16CF4
	0x01E74FA8 ADRP X0, 0x2289000
	0x01E74FAC LDR X0, [X0 + 0x5C0]
	0x01E74FB0 BL 0x1C16CF4
	0x01E74FB4 ADRP X0, 0x2289000
	0x01E74FB8 LDR X0, [X0 + 0x5C8]
	0x01E74FBC BL 0x1C16CF4
	0x01E74FC0 ADRP X0, 0x2289000
	0x01E74FC4 LDR X0, [X0 + 0x5D0]
	0x01E74FC8 BL 0x1C16CF4
	0x01E74FCC ADRP X0, 0x2289000
	0x01E74FD0 LDR X0, [X0 + 0x5D8]
	0x01E74FD4 BL 0x1C16CF4
	0x01E74FD8 ADRP X0, 0x2289000
	0x01E74FDC LDR X0, [X0 + 0x5E0]
	0x01E74FE0 BL 0x1C16CF4
	0x01E74FE4 ADRP X0, 0x2289000
	0x01E74FE8 LDR X0, [X0 + 0x5E8]
	0x01E74FEC BL 0x1C16CF4
	0x01E74FF0 ADRP X0, 0x2289000
	0x01E74FF4 LDR X0, [X0 + 0x5F0]
	0x01E74FF8 BL 0x1C16CF4
	0x01E74FFC ADRP X0, 0x227F000
	0x01E75000 LDR X0, [X0 + 0x9D0]
	0x01E75004 BL 0x1C16CF4
	0x01E75008 ADRP X0, 0x2288000
	0x01E7500C LDR X0, [X0 + 0x5F8]
	0x01E75010 BL 0x1C16CF4
	0x01E75014 ADRP X0, 0x2288000
	0x01E75018 LDR X0, [X0 + 0x600]
	0x01E7501C BL 0x1C16CF4
	0x01E75020 ADRP X0, 0x2286000
	0x01E75024 LDR X0, [X0 + 0xC60]
	0x01E75028 BL 0x1C16CF4
	0x01E7502C ADRP X0, 0x227E000
	0x01E75030 LDR X0, [X0 + 0x6C0]
	0x01E75034 BL 0x1C16CF4
	0x01E75038 ADRP X0, 0x2288000
	0x01E7503C LDR X0, [X0 + 0x608]
	0x01E75040 BL 0x1C16CF4
	0x01E75044 ADRP X0, 0x2288000
	0x01E75048 LDR X0, [X0 + 0x610]
	0x01E7504C BL 0x1C16CF4
	0x01E75050 MOVZ W8, 0x1
	0x01E75054 STRB W8, [X20 + 0x167]
	0x01E75058 LDR X0, [X21]
	0x01E7505C STR X31, [X31 + 0x8]
	0x01E75060 LDR W8, [X0 + 0xE0]
	0x01E75064 CBNZ W8, 0x1E75070
	0x01E75068 BL 0x1C16DFC
	0x01E7506C LDR X0, [X21]
	0x01E75070 LDR X8, [X0 + 0xB8]
	0x01E75074 LDR X8, [X8]
	0x01E75078 CBNZ X8, 0x1E750C0
	0x01E7507C ADRP X8, 0x2288000
	0x01E75080 LDR X8, [X8 + 0x5D0]
	0x01E75084 LDR X0, [X8]
	0x01E75088 BL 0x1C16F10
	0x01E7508C ADRP X8, 0x2288000
	0x01E75090 LDR X8, [X8 + 0x5C0]
	0x01E75094 MOV X20, X0
	0x01E75098 LDR X1, [X8]
	0x01E7509C BL 0x2AA4804
	0x01E750A0 LDR X0, [X21]
	0x01E750A4 LDR W8, [X0 + 0xE0]
	0x01E750A8 CBNZ W8, 0x1E750B4
	0x01E750AC BL 0x1C16DFC
	0x01E750B0 LDR X0, [X21]
	0x01E750B4 LDR X8, [X0 + 0xB8]
	0x01E750B8 STR X20, [X8]
	0x01E750BC LDR X0, [X21]
	0x01E750C0 LDR W8, [X0 + 0xE0]
	0x01E750C4 CBNZ W8, 0x1E750D0
	0x01E750C8 BL 0x1C16DFC
	0x01E750CC LDR X0, [X21]
	0x01E750D0 LDR X8, [X0 + 0xB8]
	0x01E750D4 LDR X0, [X8]
	0x01E750D8 CBZ X0, 0x1E755C0
	0x01E750DC ADRP X8, 0x2288000
	0x01E750E0 LDR X8, [X8 + 0x5B8]
	0x01E750E4 ADD X2, X31, 0x8
	0x01E750E8 MOV X1, X19
	0x01E750EC LDR X3, [X8]
	0x01E750F0 BL 0x2AA6B2C
	0x01E750F4 TBNZ X0, 0x0, 0x1E7559C
	0x01E750F8 ADRP X8, 0x2288000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2566000
	007 Move X21, 0x228A000
	008 Move W8, [X20+348]
	009 Move X21, [X21+1240]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0x228A000
	016 Move X0, [X0+1248]
	017 Call 0x1C17CF4
	018 Move X0, 0x228A000
	019 Move X0, [X0+1256]
	020 Call 0x1C17CF4
	021 Move X0, 0x228A000
	022 Move X0, [X0+1264]
	023 Call 0x1C17CF4
	024 Move X0, 0x228A000
	025 Move X0, [X0+1272]
	026 Call 0x1C17CF4
	027 Move X0, 0x228A000
	028 Move X0, [X0+1240]
	029 Call 0x1C17CF4
	030 Move X0, 0x228A000
	031 Move X0, [X0+1280]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+348], W8
	035 Move X8, [X21]
	036 Move [X31+8], X31
	037 Move X8, [X8+184]
	038 Move X0, [X8]
	039 Compare X0, 0
	040 JumpIfNotEqual {58}
	041 Move X8, 0x2289000
	042 Move X8, [X8+1272]
	043 Move X0, [X8]
	044 Call 0x1C17F10
	045 Move X8, 0x2289000
	046 Move X8, [X8+1264]
	047 Move X20, X0
	048 Move X1, [X8]
	049 Call Dictionary`2<Object, Object>..ctor, X0
	050 Move X8, [X21]
	051 Move X8, [X8+184]
	052 Move [X8], X20
	053 Move X8, [X21]
	054 Move X8, [X8+184]
	055 Move X0, [X8]
	056 Compare X0, 0
	057 JumpIfEqual {106}
	058 Move X8, 0x2289000
	059 Move X8, [X8+1256]
	060 Add X2, X31, 8
	061 Move X1, X19
	062 Move X3, [X8]
	063 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {99}
	068 Move X8, [X21]
	069 Move X9, 0x2289000
	070 Move X8, [X8+184]
	071 Move X9, [X9+1280]
	072 Move X20, [X8]
	073 Move X0, [X9]
	074 Call 0x1C17F10
	075 Move X21, X0
	076 Call ReadersForType..ctor, X0
	077 Move [X31+8], X21
	078 Compare X20, 0
	079 JumpIfEqual {106}
	080 Move X8, 0x2289000
	081 Move X8, [X8+1248]
	082 Move X0, X20
	083 Move X1, X19
	084 Move X2, X21
	085 Move X3, [X8]
	086 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	087 Compare X19, 0
	088 JumpIfEqual {106}
	089 Move X8, [X19]
	090 Move X20, [X31+8]
	091 Move W1, 52
	092 Move X0, X19
	093 Move X9, [X8+2024]
	094 Move X2, [X8+2032]
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Compare X20, 0
	097 JumpIfEqual {106}
	098 Move [X20+16], X0
	099 Move X0, [X31+8]
	100 Move X20, [X31+32]
	101 Move X19, [X31+40]
	102 Move X30, [X31+16]
	103 Move X21, [X31+24]
	104 Add X31, X31, 48
	105 Return X0
	106 Call 0x1C17F20

Method: System.Boolean IsArray(System.Type type)

Disassembly:
	0x01E7517C BL 0x21A891C
	0x01E75180 CBZ X0, 0x1E7552C
	0x01E75184 ADRP X8, 0x2288000
	0x01E75188 LDR X8, [X8 + 0x5A8]
	0x01E7518C MOV X23, X0
	0x01E75190 MOV X0, X22
	0x01E75194 LDR X1, [X8]
	0x01E75198 BL 0x21A891C
	0x01E7519C MOV X25, X0
	0x01E751A0 CBZ X0, 0x1E7537C
	0x01E751A4 MOV X26, X19
	0x01E751A8 CBZ X26, 0x1E755C0
	0x01E751AC LDR X1, [X25 + 0x10]
	0x01E751B0 MOVZ W2, 0x34
	0x01E751B4 MOV X0, X26
	0x01E751B8 MOV X3, X31
	0x01E751BC BL 0x3397600
	0x01E751C0 LDR X8, [X26]
	0x01E751C4 MOV X24, X0
	0x01E751C8 MOV X0, X26
	0x01E751CC LDR X9, [X8 + 0x818]
	0x01E751D0 LDR X1, [X8 + 0x820]
	0x01E751D4 BLR X9
	0x01E751D8 MOV X26, X0
	0x01E751DC MOV X0, X24
	0x01E751E0 MOV X1, X31
	0x01E751E4 MOV X2, X31
	0x01E751E8 BL 0x32C2354
	0x01E751EC TBZ X0, 0x0, 0x1E75214
	0x01E751F0 LDR X0, [X27]
	0x01E751F4 LDR W8, [X0 + 0xE0]
	0x01E751F8 CBNZ W8, 0x1E75200
	0x01E751FC BL 0x1C16DFC
	0x01E75200 MOV X0, X26
	0x01E75204 MOV X1, X31
	0x01E75208 MOV X2, X31
	0x01E7520C BL 0x3395F0C
	0x01E75210 TBNZ X0, 0x0, 0x1E751A8
	0x01E75214 MOV X0, X24
	0x01E75218 MOV X1, X31
	0x01E7521C MOV X2, X31
	0x01E75220 BL 0x32C2354
	0x01E75224 TBNZ X0, 0x0, 0x1E7552C
	0x01E75228 CBZ X24, 0x1E755C0
	0x01E7522C LDR X8, [X24]
	0x01E75230 MOV X0, X24
	0x01E75234 LDR X9, [X8 + 0x248]
	0x01E75238 LDR X1, [X8 + 0x250]
	0x01E7523C BLR X9
	0x01E75240 CBZ X0, 0x1E755C0
	0x01E75244 LDR X8, [X27]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2565000
	005 Move W8, [X20+349]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x2289000
	012 Move X0, [X0+1304]
	013 Call 0x1C17CF4
	014 Move X0, 0x227F000
	015 Move X0, [X0+1728]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+349], W8
	019 Compare X19, 0
	020 JumpIfEqual {63}
	021 Move X8, [X19]
	022 Move X0, X19
	023 Move X9, [X8+968]
	024 Move X1, [X8+976]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {58}
	030 Move X8, [X19]
	031 Move X0, X19
	032 Move X9, [X8+1096]
	033 Move X1, [X8+1104]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X8, 0x227F000
	036 Move X8, [X8+1728]
	037 Move X9, 0x2289000
	038 Move X19, X0
	039 Move X8, [X8]
	040 Move X9, [X9+1304]
	041 Move W10, [X8+224]
	042 Move X20, [X9]
	043 Compare W10, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X0, X20
	048 Move X1, X31
	049 Call Type.GetTypeFromHandle, X0
	050 Move X1, X0
	051 Move X0, X19
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X2, X31
	055 Move X30, [X31+32]
	056 Call Type.op_Equality, X0, X1
	057 Return X0
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move W0, W31
	061 Move X30, [X31+32]
	062 Return X0
	063 Call 0x1C17F20

Method: System.Boolean IsList(System.Type type)

Disassembly:
	0x01E75248 ADRP X10, 0x2288000
	0x01E7524C LDR W26, [X0 + 0x18]
	0x01E75250 LDR W9, [X8 + 0xE0]
	0x01E75254 LDR X10, [X10 + 0x5A0]
	0x01E75258 LDR X25, [X10]
	0x01E7525C CBNZ W9, 0x1E75268
	0x01E75260 MOV X0, X8
	0x01E75264 BL 0x1C16DFC
	0x01E75268 MOV X0, X25
	0x01E7526C MOV X1, X31
	0x01E75270 BL 0x338C698
	0x01E75274 CBZ X0, 0x1E755C0
	0x01E75278 CMP W26, 0x1
	0x01E7527C B.NE 0x1E75388
	0x01E75280 ADRP X8, 0x2288000
	0x01E75284 LDR X8, [X8 + 0x610]
	0x01E75288 MOVZ W2, 0x28
	0x01E7528C MOV X3, X31
	0x01E75290 LDR X1, [X8]
	0x01E75294 BL 0x3397600
	0x01E75298 ADRP X8, 0x2286000
	0x01E7529C LDR X8, [X8 + 0xC60]
	0x01E752A0 MOV X25, X0
	0x01E752A4 MOVZ W1, 0x1
	0x01E752A8 LDR X8, [X8]
	0x01E752AC MOV X0, X8
	0x01E752B0 BL 0x1C16D6C
	0x01E752B4 CBZ X0, 0x1E755C0
	0x01E752B8 LDR X8, [X0]
	0x01E752BC MOV X26, X0
	0x01E752C0 MOV X0, X19
	0x01E752C4 LDR X1, [X8 + 0x40]
	0x01E752C8 BL 0x1C16E00
	0x01E752CC CBZ X0, 0x1E755C8
	0x01E752D0 LDR W8, [X26 + 0x18]
	0x01E752D4 CBZ W8, 0x1E755C4
	0x01E752D8 STR X19, [X26 + 0x20]
	0x01E752DC CBZ X25, 0x1E755C0
	0x01E752E0 LDR X8, [X25]
	0x01E752E4 MOV X0, X25
	0x01E752E8 MOV X1, X26
	0x01E752EC LDR X9, [X8 + 0x3D8]
	0x01E752F0 LDR X2, [X8 + 0x3E0]
	0x01E752F4 BLR X9
	0x01E752F8 ADRP X8, 0x227E000
	0x01E752FC LDR X8, [X8 + 0x9D0]
	0x01E75300 MOV X25, X0
	0x01E75304 MOVZ W1, 0x1
	0x01E75308 LDR X8, [X8]
	0x01E7530C MOV X0, X8
	0x01E75310 BL 0x1C16D6C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2565000
	005 Move W8, [X20+350]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x2289000
	012 Move X0, [X0+1312]
	013 Call 0x1C17CF4
	014 Move X0, 0x227F000
	015 Move X0, [X0+1728]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+350], W8
	019 Compare X19, 0
	020 JumpIfEqual {63}
	021 Move X8, [X19]
	022 Move X0, X19
	023 Move X9, [X8+968]
	024 Move X1, [X8+976]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {58}
	030 Move X8, [X19]
	031 Move X0, X19
	032 Move X9, [X8+1096]
	033 Move X1, [X8+1104]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X8, 0x227F000
	036 Move X8, [X8+1728]
	037 Move X9, 0x2289000
	038 Move X19, X0
	039 Move X8, [X8]
	040 Move X9, [X9+1312]
	041 Move W10, [X8+224]
	042 Move X20, [X9]
	043 Compare W10, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X0, X20
	048 Move X1, X31
	049 Call Type.GetTypeFromHandle, X0
	050 Move X1, X0
	051 Move X0, X19
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X2, X31
	055 Move X30, [X31+32]
	056 Call Type.op_Equality, X0, X1
	057 Return X0
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move W0, W31
	061 Move X30, [X31+32]
	062 Return X0
	063 Call 0x1C17F20

Method: System.Boolean IsDict(System.Type type)

Disassembly:
	0x01E75314 CBZ X0, 0x1E755C0
	0x01E75318 LDR X8, [X0]
	0x01E7531C MOV X26, X0
	0x01E75320 MOV X0, X24
	0x01E75324 LDR X1, [X8 + 0x40]
	0x01E75328 BL 0x1C16E00
	0x01E7532C CBZ X0, 0x1E755C8
	0x01E75330 LDR W8, [X26 + 0x18]
	0x01E75334 CBZ W8, 0x1E755C4
	0x01E75338 STR X24, [X26 + 0x20]
	0x01E7533C CBZ X25, 0x1E755C0
	0x01E75340 MOV X0, X25
	0x01E75344 MOV X1, X31
	0x01E75348 MOV X2, X26
	0x01E7534C MOV X3, X31
	0x01E75350 BL 0x32CE4E0
	0x01E75354 MOV X25, X0
	0x01E75358 CBZ X0, 0x1E75374
	0x01E7535C ADRP X8, 0x2288000
	0x01E75360 LDR X8, [X8 + 0x600]
	0x01E75364 LDR X1, [X8]
	0x01E75368 LDR X8, [X25]
	0x01E7536C CMP X8, X1
	0x01E75370 B.NE 0x1E755D4
	0x01E75374 MOV X24, X31
	0x01E75378 B 0x1E75480
	0x01E7537C MOV X24, X31
	0x01E75380 CBNZ X20, 0x1E754C4
	0x01E75384 B 0x1E755C0
	0x01E75388 ADRP X8, 0x2288000
	0x01E7538C LDR X8, [X8 + 0x608]
	0x01E75390 MOVZ W2, 0x28
	0x01E75394 MOV X3, X31
	0x01E75398 LDR X1, [X8]
	0x01E7539C BL 0x3397600
	0x01E753A0 ADRP X8, 0x2286000
	0x01E753A4 LDR X8, [X8 + 0xC60]
	0x01E753A8 MOV X25, X0
	0x01E753AC MOVZ W1, 0x1
	0x01E753B0 LDR X8, [X8]
	0x01E753B4 MOV X0, X8
	0x01E753B8 BL 0x1C16D6C
	0x01E753BC CBZ X0, 0x1E755C0
	0x01E753C0 LDR X8, [X0]
	0x01E753C4 MOV X26, X0
	0x01E753C8 MOV X0, X19
	0x01E753CC LDR X1, [X8 + 0x40]
	0x01E753D0 BL 0x1C16E00
	0x01E753D4 CBZ X0, 0x1E755C8
	0x01E753D8 LDR W8, [X26 + 0x18]
	0x01E753DC CBZ W8, 0x1E755C4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2565000
	005 Move W8, [X20+351]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x2289000
	012 Move X0, [X0+1320]
	013 Call 0x1C17CF4
	014 Move X0, 0x227F000
	015 Move X0, [X0+1728]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+351], W8
	019 Compare X19, 0
	020 JumpIfEqual {63}
	021 Move X8, [X19]
	022 Move X0, X19
	023 Move X9, [X8+968]
	024 Move X1, [X8+976]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {58}
	030 Move X8, [X19]
	031 Move X0, X19
	032 Move X9, [X8+1096]
	033 Move X1, [X8+1104]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X8, 0x227F000
	036 Move X8, [X8+1728]
	037 Move X9, 0x2289000
	038 Move X19, X0
	039 Move X8, [X8]
	040 Move X9, [X9+1320]
	041 Move W10, [X8+224]
	042 Move X20, [X9]
	043 Compare W10, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X0, X20
	048 Move X1, X31
	049 Call Type.GetTypeFromHandle, X0
	050 Move X1, X0
	051 Move X0, X19
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X2, X31
	055 Move X30, [X31+32]
	056 Call Type.op_Equality, X0, X1
	057 Return X0
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move W0, W31
	061 Move X30, [X31+32]
	062 Return X0
	063 Call 0x1C17F20

Method: Fusion.NetworkBehaviour/PropertyReader`1<T> GetPropertyReader(Fusion.NetworkBehaviour/ReadersForType readersForType, System.String property)

Disassembly:
	0x02227BDC LDR X8, [X8 + 0x18]
	0x02227BE0 LDR X8, [X8 + 0x80]
	0x02227BE4 ADD X1, X8, 0x20
	0x02227BE8 BL 0x1C16D18
	0x02227BEC MOV X1, X0
	0x02227BF0 MOV X0, X24
	0x02227BF4 MOV X2, X21
	0x02227BF8 BL 0x3EB1AC0
	0x02227BFC MOV X0, X27
	0x02227C00 MOV X1, X24
	0x02227C04 MOV X2, X21
	0x02227C08 BL 0x3EB1AC0
	0x02227C0C LDR V0, [X20 + 0x28]
	0x02227C10 FMOV S1, 0.5
	0x02227C14 MOV X0, X22
	0x02227C18 MOV X2, X21
	0x02227C1C FCMP S0, S1
	0x02227C20 CSEL X1, X25, X27, MI
	0x02227C24 BL 0x3EB1AC0
	0x02227C28 LDUR X0, [X29 - 0x50]
	0x02227C2C MOV X1, X22
	0x02227C30 MOV X2, X21
	0x02227C34 BL 0x3EB1AC0
	0x02227C38 LDUR X8, [X29 - 0x48]
	0x02227C3C LDR X8, [X8 + 0x28]
	0x02227C40 LDUR X9, [X29 - 0x8]
	0x02227C44 CMP X8, X9
	0x02227C48 B.NE 0x2227C6C
	0x02227C4C ADD X31, X29, 0x0
	0x02227C50 LDP X20, X19, [X31 + 0x50]
	0x02227C54 LDP X22, X21, [X31 + 0x40]
	0x02227C58 LDP X24, X23, [X31 + 0x30]
	0x02227C5C LDP X26, X25, [X31 + 0x20]
	0x02227C60 LDP X28, X27, [X31 + 0x10]
	0x02227C64 LDP X29, X30, [X31], #0x60
	0x02227C68 RET
	0x02227C6C BL 0x3EB1B20
	0x02227C70 STP X29, X30, [X31 - 0x50]!
	0x02227C74 STR X25, [X31 + 0x10]
	0x02227C78 STP X24, X23, [X31 + 0x20]
	0x02227C7C STP X22, X21, [X31 + 0x30]
	0x02227C80 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X9, [X2+56]
	008 Move X20, X1
	009 Move X21, X0
	010 Move X19, X8
	011 Compare X9, 0
	012 JumpIfNotEqual {23}
	013 Move X0, 0x1ECD000
	014 Move X0, [X0+1728]
	015 Move X22, X2
	016 Call 0x1C17CF4
	017 Move X9, [X22+56]
	018 Compare X9, 0
	019 JumpIfNotEqual {23}
	020 Move X0, X22
	021 Call 0x1C5D6E0
	022 Move X9, [X22+56]
	023 Move X8, 0x1ECD000
	024 Move X8, [X8+1728]
	025 Move X22, [X9]
	026 Move X0, [X8]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X22
	032 Move X1, X31
	033 Call Type.GetTypeFromHandle, X0
	034 Move X2, X0
	035 Add X8, X31, 8
	036 Move X0, X21
	037 Move X1, X20
	038 Move X3, X31
	039 Call NetworkBehaviour.GetPropertyReaderData, X0, X1, X2
	040 Move X8, [X31+24]
	041 Move X30, [X31+32]
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 Move X22, [X31+48]
	044 Move X21, [X31+56]
	045 Move [X19+16], X8
	046 Move [X19], V0
	047 Move X20, [X31+64]
	048 Move X19, [X31+72]
	049 Add X31, X31, 80
	050 Return X0

Method: Fusion.NetworkBehaviour/PropertyReaderData GetPropertyReaderData(Fusion.NetworkBehaviour/ReadersForType readersForType, System.String property, System.Type typeExpected)

Disassembly:
	0x01E753E0 STR X19, [X26 + 0x20]
	0x01E753E4 CBZ X25, 0x1E755C0
	0x01E753E8 LDR X8, [X25]
	0x01E753EC MOV X0, X25
	0x01E753F0 MOV X1, X26
	0x01E753F4 LDR X9, [X8 + 0x3D8]
	0x01E753F8 LDR X2, [X8 + 0x3E0]
	0x01E753FC BLR X9
	0x01E75400 ADRP X8, 0x227E000
	0x01E75404 LDR X8, [X8 + 0x9D0]
	0x01E75408 MOV X25, X0
	0x01E7540C MOVZ W1, 0x1
	0x01E75410 LDR X8, [X8]
	0x01E75414 MOV X0, X8
	0x01E75418 BL 0x1C16D6C
	0x01E7541C CBZ X0, 0x1E755C0
	0x01E75420 LDR X8, [X0]
	0x01E75424 MOV X26, X0
	0x01E75428 MOV X0, X24
	0x01E7542C LDR X1, [X8 + 0x40]
	0x01E75430 BL 0x1C16E00
	0x01E75434 CBZ X0, 0x1E755C8
	0x01E75438 LDR W8, [X26 + 0x18]
	0x01E7543C CBZ W8, 0x1E755C4
	0x01E75440 STR X24, [X26 + 0x20]
	0x01E75444 CBZ X25, 0x1E755C0
	0x01E75448 MOV X0, X25
	0x01E7544C MOV X1, X31
	0x01E75450 MOV X2, X26
	0x01E75454 MOV X3, X31
	0x01E75458 BL 0x32CE4E0
	0x01E7545C MOV X24, X0
	0x01E75460 CBZ X0, 0x1E7547C
	0x01E75464 ADRP X8, 0x2288000
	0x01E75468 LDR X8, [X8 + 0x5F8]
	0x01E7546C LDR X1, [X8]
	0x01E75470 LDR X8, [X24]
	0x01E75474 CMP X8, X1
	0x01E75478 B.NE 0x1E755DC
	0x01E7547C MOV X25, X31
	0x01E75480 ADRP X26, 0x2288000
	0x01E75484 LDR X26, [X26 + 0x4C0]
	0x01E75488 LDR X0, [X26]
	0x01E7548C LDR W8, [X0 + 0xE0]
	0x01E75490 CBNZ W8, 0x1E7549C
	0x01E75494 BL 0x1C16DFC
	0x01E75498 LDR X0, [X26]
	0x01E7549C LDR X8, [X0 + 0xB8]
	0x01E754A0 LDR X0, [X8 + 0x8]
	0x01E754A4 CBZ X0, 0x1E755C0
	0x01E754A8 ADRP X8, 0x2288000
	0x01E754AC LDR X8, [X8 + 0x5C8]
	0x01E754B0 MOVZ W2, 0x1
	0x01E754B4 MOV X1, X19
	0x01E754B8 LDR X3, [X8]
	0x01E754BC BL 0x2A89728
	0x01E754C0 CBZ X20, 0x1E755C0
	0x01E754C4 ADRP X9, 0x2288000
	0x01E754C8 LDR W10, [X20 + 0x1C]
	0x01E754CC LDR X8, [X20 + 0x10]
	0x01E754D0 LDR X9, [X9 + 0x5D8]
	0x01E754D4 ADD W10, W10, 0x1
	0x01E754D8 LDR X9, [X9]
	0x01E754DC STR W10, [X20 + 0x1C]
	0x01E754E0 CBZ X8, 0x1E755C0
	0x01E754E4 LDRSW X10, [X20 + 0x18]
	0x01E754E8 LDR W11, [X8 + 0x18]
	0x01E754EC CMP W10, W11
	0x01E754F0 B.CS 0x1E7550C
	0x01E754F4 ADD W9, W10, 0x1
	0x01E754F8 ADD X8, X8, X10, 0x5, LSL
	0x01E754FC STR W9, [X20 + 0x18]
	0x01E75500 STP X22, X23, [X8 + 0x20]
	0x01E75504 STP X24, X25, [X8 + 0x30]
	0x01E75508 B 0x1E7552C
	0x01E7550C LDR X8, [X9 + 0x20]
	0x01E75510 ADD X1, X31, 0x10
	0x01E75514 MOV X0, X20
	0x01E75518 LDR X8, [X8 + 0xC0]
	0x01E7551C LDR X2, [X8 + 0x70]
	0x01E75520 STP X22, X23, [X31 + 0x10]
	0x01E75524 STP X24, X25, [X31 + 0x20]
	0x01E75528 BL 0x318D818
	0x01E7552C LDR W8, [X21 + 0x18]
	0x01E75530 ADD X28, X28, 0x1
	0x01E75534 CMP X28, W8, SXTW
	0x01E75538 B.LT 0x1E75164
	0x01E7553C ADRP X21, 0x2288000
	0x01E75540 LDR X21, [X21 + 0x4C0]
	0x01E75544 LDR X0, [X21]
	0x01E75548 LDR W8, [X0 + 0xE0]
	0x01E7554C CBNZ W8, 0x1E75558
	0x01E75550 BL 0x1C16DFC
	0x01E75554 LDR X0, [X21]
	0x01E75558 CBZ X20, 0x1E755C0
	0x01E7555C ADRP X9, 0x2288000
	0x01E75560 LDR X8, [X0 + 0xB8]
	0x01E75564 LDR X9, [X9 + 0x5E0]
	0x01E75568 MOV X0, X20
	0x01E7556C LDR X21, [X8]
	0x01E75570 LDR X1, [X9]
	0x01E75574 BL 0x318F9A4
	0x01E75578 STR X0, [X31 + 0x8]
	0x01E7557C CBZ X21, 0x1E755C0
	0x01E75580 ADRP X8, 0x2288000
	0x01E75584 LDR X8, [X8 + 0x5B0]
	0x01E75588 MOV X2, X0
	0x01E7558C MOV X0, X21
	0x01E75590 MOV X1, X19
	0x01E75594 LDR X3, [X8]
	0x01E75598 BL 0x2AA5098
	0x01E7559C LDR X0, [X31 + 0x8]
	0x01E755A0 LDP X20, X19, [X31 + 0x80]
	0x01E755A4 LDP X22, X21, [X31 + 0x70]
	0x01E755A8 LDP X24, X23, [X31 + 0x60]
	0x01E755AC LDP X26, X25, [X31 + 0x50]
	0x01E755B0 LDP X28, X27, [X31 + 0x40]
	0x01E755B4 LDP X29, X30, [X31 + 0x30]
	0x01E755B8 ADD X31, X31, 0x90
	0x01E755BC RET
	0x01E755C0 BL 0x1C16F20
	0x01E755C4 BL 0x1C16F28
	0x01E755C8 BL 0x1C16F44
	0x01E755CC MOV X1, X31
	0x01E755D0 BL 0x1C16DEC
	0x01E755D4 MOV X0, X25
	0x01E755D8 BL 0x1C171E0
	0x01E755DC MOV X0, X24
	0x01E755E0 BL 0x1C171E0
	0x01E755E4 STP X30, X21, [X31 - 0x20]!
	0x01E755E8 STP X20, X19, [X31 + 0x10]
	0x01E755EC MOV X19, X0
	0x01E755F0 LDR X0, [X0 + 0x20]
	0x01E755F4 CBZ X0, 0x1E75600
	0x01E755F8 MOV X1, X31
	0x01E755FC BL 0x1E3585C
	0x01E75600 MOV X0, X19
	0x01E75604 LDP X20, X19, [X31 + 0x10]
	0x01E75608 MOV X1, X31
	0x01E7560C LDP X30, X21, [X31], #0x20
	0x01E75610 B 0x33CB4DC
	0x01E75614 CMP W1, 0x1
	0x01E75618 MOV X21, X0
	0x01E7561C B.NE 0x1E7564C
	0x01E75620 MOV X0, X21
	0x01E75624 BL 0x3EB1AD0
	0x01E75628 LDR X20, [X0]
	0x01E7562C BL 0x3EB1AE0
	0x01E75630 MOV X0, X19
	0x01E75634 MOV X1, X31
	0x01E75638 BL 0x33CB4DC
	0x01E7563C CBNZ X20, 0x1E75654
	0x01E75640 LDP X20, X19, [X31 + 0x10]
	0x01E75644 LDP X30, X21, [X31], #0x20
	0x01E75648 RET
	0x01E7564C MOV X20, X31
	0x01E75650 B 0x1E75660
	0x01E75654 MOV X0, X20
	0x01E75658 BL 0x1C16F18
	0x01E7565C MOV X21, X0
	0x01E75660 MOV X0, X19
	0x01E75664 MOV X1, X31
	0x01E75668 BL 0x33CB4DC
	0x01E7566C CBNZ X20, 0x1E75678
	0x01E75670 MOV X0, X21
	0x01E75674 BL 0x1D2C690
	0x01E75678 MOV X0, X20
	0x01E7567C BL 0x1C16F18
	0x01E75680 BL 0x1990590
	0x01E75684 AND W4, W4, 0x1
	0x01E75688 B 0x1E7568C
	0x01E7568C SUB X31, X31, 0xF0
	0x01E75690 STP X29, X30, [X31 + 0x90]
	0x01E75694 STP X28, X27, [X31 + 0xA0]
	0x01E75698 STP X26, X25, [X31 + 0xB0]
	0x01E7569C STP X24, X23, [X31 + 0xC0]
	0x01E756A0 STP X22, X21, [X31 + 0xD0]
	0x01E756A4 STP X20, X19, [X31 + 0xE0]
	0x01E756A8 ADRP X19, 0x2564000
	0x01E756AC LDRB W8, [X19 + 0x169]
	0x01E756B0 MOV X23, X3
	0x01E756B4 MOV X27, X2
	0x01E756B8 MOV X22, X1
	0x01E756BC MOV X21, X0
	0x01E756C0 STR W4, [X31 + 0x2C]
	0x01E756C4 TBNZ X8, 0x0, 0x1E756F4
	0x01E756C8 ADRP X0, 0x2288000
	0x01E756CC LDR X0, [X0 + 0x4C0]
	0x01E756D0 BL 0x1C16CF4
	0x01E756D4 ADRP X0, 0x2288000
	0x01E756D8 LDR X0, [X0 + 0x618]
	0x01E756DC BL 0x1C16CF4
	0x01E756E0 ADRP X0, 0x2285000
	0x01E756E4 LDR X0, [X0 + 0x5F0]
	0x01E756E8 BL 0x1C16CF4
	0x01E756EC MOVZ W8, 0x1
	0x01E756F0 STRB W8, [X19 + 0x169]
	0x01E756F4 STP X31, X31, [X31 + 0x80]
	0x01E756F8 STP X31, X31, [X31 + 0x70]
	0x01E756FC STR W31, [X31 + 0x6C]
	0x01E75700 STP X31, X31, [X31 + 0x50]
	0x01E75704 CBZ X22, 0x1E75B60
	0x01E75708 MOV X0, X22
	0x01E7570C MOV X1, X31
	0x01E75710 BL 0x3C385F8
	0x01E75714 LDR W8, [X21 + 0x14]
	0x01E75718 CMP W0, W8
	0x01E7571C B.NE 0x1E757B4
	0x01E75720 LDR X26, [X22 + 0x50]
	0x01E75724 MOV X0, X22
	0x01E75728 MOV X1, X31
	0x01E7572C BL 0x33BE520
	0x01E75730 ADRP X8, 0x2288000
	0x01E75734 LDR X8, [X8 + 0x4C0]
	0x01E75738 MOV X24, X0
	0x01E7573C LDR X8, [X8]
	0x01E75740 LDR W9, [X8 + 0xE0]
	0x01E75744 CBNZ W9, 0x1E75750
	0x01E75748 MOV X0, X8
	0x01E7574C BL 0x1C16DFC
	0x01E75750 MOV X0, X24
	0x01E75754 BL 0x1E74F2C
	0x01E75758 LDP W8, W28, [X21 + 0x28]
	0x01E7575C MOV X24, X0
	0x01E75760 CBZ W8, 0x1E757C8
	0x01E75764 ADD X1, X31, 0x80
	0x01E75768 ADD X2, X31, 0x70
	0x01E7576C ADD X3, X31, 0x6C
	0x01E75770 MOV X0, X22
	0x01E75774 MOV X4, X31
	0x01E75778 ADD X19, X31, 0x80
	0x01E7577C ADD X20, X31, 0x70
	0x01E75780 BL 0x1EBDCE0
	0x01E75784 LDR W8, [X21 + 0x28]
	0x01E75788 ADD X9, X20, 0xC
	0x01E7578C CMP W8, 0x1
	0x01E75790 CSEL X8, X19, X20, EQ
	0x01E75794 LDR X26, [X8]
	0x01E75798 ADD X8, X19, 0xC
	0x01E7579C CSEL X8, X8, X9, EQ
	0x01E757A0 CBZ X26, 0x1E757B4
	0x01E757A4 LDR W9, [X8]
	0x01E757A8 LDR W8, [X21 + 0x2C]
	0x01E757AC CMP W8, W9
	0x01E757B0 B.NE 0x1E757EC
	0x01E757B4 MOV X1, X31
	0x01E757B8 MOV X0, X31
	0x01E757BC STP X31, X31, [X23]
	0x01E757C0 STP X31, X31, [X27]
	0x01E757C4 B 0x1E75B40
	0x01E757C8 LDR X8, [X22 + 0x40]
	0x01E757CC CBZ X8, 0x1E75B60
	0x01E757D0 LDR X8, [X8 + 0x30]
	0x01E757D4 CBZ X8, 0x1E75B60
	0x01E757D8 LDR X8, [X8 + 0x50]
	0x01E757DC CBZ X8, 0x1E757E8
	0x01E757E0 LDR W9, [X8 + 0x48]
	0x01E757E4 B 0x1E757EC
	0x01E757E8 MOV W9, W31
	0x01E757EC LDR X8, [X21 + 0x18]
	0x01E757F0 STR W9, [X21 + 0x2C]
	0x01E757F4 CBZ X8, 0x1E75838
	0x01E757F8 MOV X10, X21

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+88], X27
	004 Move [X31+96], X26
	005 Move [X31+104], X25
	006 Move [X31+112], X24
	007 Move [X31+120], X23
	008 Move [X31+128], X22
	009 Move [X31+136], X21
	010 Move [X31+144], X20
	011 Move [X31+152], X19
	012 Move X23, 0x2565000
	013 Move W9, [X23+352]
	014 Move X22, X2
	015 Move X19, X1
	016 Move X21, X0
	017 Move X20, X8
	018 Move TEMP, X9
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {45}
	022 Move X0, 0x2289000
	023 Move X0, [X0+1328]
	024 Call 0x1C17CF4
	025 Move X0, 0x2289000
	026 Move X0, [X0+1336]
	027 Call 0x1C17CF4
	028 Move X0, 0x2289000
	029 Move X0, [X0+1344]
	030 Call 0x1C17CF4
	031 Move X0, 0x2289000
	032 Move X0, [X0+1352]
	033 Call 0x1C17CF4
	034 Move X0, 0x2289000
	035 Move X0, [X0+1360]
	036 Call 0x1C17CF4
	037 Move X0, 0x2289000
	038 Move X0, [X0+1368]
	039 Call 0x1C17CF4
	040 Move X0, 0x227F000
	041 Move X0, [X0+1728]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X23+352], W8
	045 Move [X31+24], X31
	046 Move [X31+32], X31
	047 Move [X31+40], X31
	048 Compare X21, 0
	049 JumpIfEqual {89}
	050 Move X0, [X21+24]
	051 Compare X0, 0
	052 JumpIfEqual {89}
	053 Move X8, 0x2289000
	054 Move X8, [X8+1352]
	055 Add X2, X31, 24
	056 Move X1, X19
	057 Move X3, [X8]
	058 Call Dictionary`2<Object, PropertyReaderData>.TryGetValue, X0, X1, X2
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {238}
	063 Move X8, [X21+16]
	064 Compare X8, 0
	065 JumpIfEqual {89}
	066 Move W23, 4
	067 Move W9, [X8+24]
	068 Subtract X24, X23, 4
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X0, [X8]
	072 Compare X0, 0
	073 JumpIfEqual {89}
	074 Move X8, [X0]
	075 Move X9, [X8+424]
	076 Move X1, [X8+432]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X1, X19
	079 Move X2, X31
	080 Call String.op_Equality, X0, X1
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfEqual {91}
	085 Move X8, [X21+16]
	086 Add X23, X23, 1
	087 Compare X8, 0
	088 JumpIfNotEqual {67}
	089 Call 0x1C17F20
	090 Move X23, X31
	091 Move X8, [X21+16]
	092 Compare X8, 0
	093 JumpIfEqual {89}
	094 Move W9, [X8+24]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X23, [X8]
	097 Move X0, X23
	098 Move X1, X31
	099 Move X2, X31
	100 Call PropertyInfo.op_Equality, X0, X1
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {255}
	105 Move X8, 0x2289000
	106 Move X8, [X8+1336]
	107 Move X0, X23
	108 Move X1, [X8]
	109 Call 0x21A991C, X0
	110 Compare X0, 0
	111 JumpIfEqual {276}
	112 Compare X23, 0
	113 JumpIfEqual {89}
	114 Move X8, [X23]
	115 Move X24, X0
	116 Move X0, X23
	117 Move X9, [X8+584]
	118 Move X1, [X8+592]
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Compare X0, 0
	121 JumpIfEqual {89}
	122 Move X1, X31
	123 Move X25, X0
	124 Call Type.get_IsPointer, X0
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfEqual {136}
	129 Move X0, X25
	130 Move X1, X31
	131 Call Type.get_IsByRef, X0
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfNotEqual {142}
	136 Move X8, [X25]
	137 Move X0, X25
	138 Move X9, [X8+1064]
	139 Move X1, [X8+1072]
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Move X25, X0
	142 Move X27, 0x227F000
	143 Move X27, [X27+1728]
	144 Move X8, 0x2289000
	145 Move X0, [X27]
	146 Move X8, [X8+1368]
	147 Move W9, [X0+224]
	148 Move X26, [X8]
	149 Compare W9, 0
	150 JumpIfNotEqual {152}
	151 Call 0x1C17DFC
	152 Move X0, X26
	153 Move X1, X31
	154 Call Type.GetTypeFromHandle, X0
	155 Compare X0, 0
	156 JumpIfEqual {89}
	157 Move X8, [X0]
	158 Move X1, X25
	159 Move X9, [X8+680]
	160 Move X2, [X8+688]
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfNotEqual {178}
	166 Move X8, 0x2289000
	167 Move X0, [X27]
	168 Move X8, [X8+1360]
	169 Move W9, [X0+224]
	170 Move X25, [X8]
	171 Compare W9, 0
	172 JumpIfNotEqual {174}
	173 Call 0x1C17DFC
	174 Move X0, X25
	175 Move X1, X31
	176 Call Type.GetTypeFromHandle, X0
	177 Move X25, X0
	178 Move X0, [X27]
	179 Move W8, [X0+224]
	180 Compare W8, 0
	181 JumpIfNotEqual {183}
	182 Call 0x1C17DFC
	183 Move X0, X25
	184 Move X1, X22
	185 Move X2, X31
	186 Call Type.op_Inequality, X0, X1
	187 Move TEMP, X0
	188 And TEMP, TEMP, 1
	189 Compare TEMP, 1
	190 JumpIfEqual {288}
	191 Move [X31+24], X31
	192 Move [X31+32], X31
	193 Move [X31+32], X25
	194 Move [X31+40], X31
	195 Move W8, [X24+16]
	196 Move X0, X25
	197 Move [X31+24], W8
	198 Call NetworkBehaviour.IsArray, X0
	199 Move TEMP, X0
	200 And TEMP, TEMP, 1
	201 Compare TEMP, 1
	202 JumpIfEqual {215}
	203 Move X0, X25
	204 Call NetworkBehaviour.IsList, X0
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfEqual {215}
	209 Move X0, X25
	210 Call NetworkBehaviour.IsDict, X0
	211 Move TEMP, X0
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfNotEqual {221}
	215 Move X8, 0x2289000
	216 Move X8, [X8+1328]
	217 Move X0, X23
	218 Move X1, [X8]
	219 Call 0x21A991C, X0
	220 Move [X31+40], X0
	221 Move X0, [X21+24]
	222 NotImplemented "Instruction LDUR not yet implemented."
	223 Move X8, [X31+40]
	224 Move [X31], V0
	225 Move [X31+16], X8
	226 Compare X0, 0
	227 JumpIfEqual {89}
	228 Move X8, 0x2289000
	229 Move X8, [X8+1344]
	230 Move V0, [X31]
	231 Move X9, [X31+16]
	232 Add X2, X31, 48
	233 Move X3, [X8]
	234 Move X1, X19
	235 Move [X31+3], V0
	236 Move [X31+64], X9
	237 Call Dictionary`2<Object, PropertyReaderData>.Add, X0, X1, X2
	238 Move X8, [X31+40]
	239 NotImplemented "Instruction LDUR not yet implemented."
	240 Move X22, [X31+128]
	241 Move X21, [X31+136]
	242 Move X24, [X31+112]
	243 Move X23, [X31+120]
	244 Move [X20+16], X8
	245 Move [X20], V0
	246 Move X20, [X31+144]
	247 Move X19, [X31+152]
	248 Move X26, [X31+96]
	249 Move X25, [X31+104]
	250 Move X30, [X31+80]
	251 Move X27, [X31+88]
	252 Add X31, X31, 160
	253 Return X0
	254 Call 0x1C17F28
	255 Move X0, 0x2289000
	256 Move X0, [X0+1376]
	257 Call 0x1C17D08
	258 Move X20, X0
	259 Move X0, 0x2289000
	260 Move X0, [X0+1384]
	261 Call 0x1C17D08
	262 Move X2, X0
	263 Move X0, X20
	264 Move X1, X19
	265 Move X3, X31
	266 Call String.Concat, X0, X1, X2
	267 Move X19, X0
	268 Move X0, 0x2282000
	269 Move X0, [X0+120]
	270 Call 0x1C17D08
	271 Call 0x1C17F10
	272 Move X1, X19
	273 Move X2, X31
	274 Move X20, X0
	275 Call KeyNotFoundException..ctor, X0, X1
	276 Move X0, 0x2289000
	277 Move X0, [X0+1376]
	278 Call 0x1C17D08
	279 Move X20, X0
	280 Move X0, 0x2289000
	281 Move X0, [X0+1392]
	282 Call 0x1C17D08
	283 Move X2, X0
	284 Move X0, X20
	285 Move X1, X19
	286 Move X3, X31
	287 Call String.Concat, X0, X1, X2
	288 Move X0, X23
	289 Call 0x19913C0
	290 Move X8, [X23]
	291 Move X0, X23
	292 Move X9, [X8+584]
	293 Move X1, [X8+592]
	294 NotImplemented "Instruction BLR not yet implemented."
	295 Move X20, X0
	296 Move X0, 0x2289000
	297 Move X0, [X0+1400]
	298 Call 0x1C17D08
	299 Move X1, X19
	300 Move X2, X20
	301 Move X3, X22
	302 Move X4, X31
	303 Call String.Format, X0, X1, X2, X3
	304 Move X19, X0
	305 Move X0, 0x227F000
	306 Move X0, [X0+1456]
	307 Call 0x1C17D08
	308 Call 0x1C17F10
	309 Move X1, X19
	310 Move X2, X31
	311 Move X20, X0
	312 Call InvalidOperationException..ctor, X0, X1
	313 Move X0, 0x2289000
	314 Move X0, [X0+1408]
	315 Call 0x1C17D08
	316 Move X1, X0
	317 Move X0, X20
	318 Call 0x1C17DEC

Method: Fusion.NetworkBehaviour/ChangeDetector GetChangeDetector(Fusion.NetworkBehaviour/ChangeDetector/Source source, System.Boolean copyInitial = True)

Disassembly:
	0x01E74EA0 MOV X1, X31
	0x01E74EA4 BL 0x3C38948
	0x01E74EA8 MOV W8, W0
	0x01E74EAC MOV X0, X31
	0x01E74EB0 TBZ X8, 0x0, 0x1E74ED8
	0x01E74EB4 LDR X8, [X19 + 0x40]
	0x01E74EB8 CBZ X8, 0x1E74ECC
	0x01E74EBC LDR X8, [X8 + 0x20]
	0x01E74EC0 CBZ X8, 0x1E74ECC
	0x01E74EC4 LDR W0, [X8]
	0x01E74EC8 B 0x1E74ED0
	0x01E74ECC MOV X0, X31
	0x01E74ED0 LDR W8, [X19 + 0x68]
	0x01E74ED4 BFM X0, X8, 0x20, 0x1F
	0x01E74ED8 LDP X20, X19, [X31 + 0x10]
	0x01E74EDC LDP X30, X21, [X31], #0x20
	0x01E74EE0 RET
	0x01E74EE4 BL 0x1C16F20
	0x01E74EE8 RET
	0x01E74EEC STP X1, X2, [X0 + 0x38]
	0x01E74EF0 STR W3, [X0 + 0x68]
	0x01E74EF4 RET
	0x01E74EF8 STP X31, X31, [X0 + 0x38]
	0x01E74EFC STR W31, [X0 + 0x68]
	0x01E74F00 RET
	0x01E74F04 MOVZ W8, 0x1
	0x01E74F08 MOVZ W9, 0x10
	0x01E74F0C MOV X1, X31
	0x01E74F10 STRB W8, [X0 + 0x74]
	0x01E74F14 STR W9, [X0 + 0x30]
	0x01E74F18 B 0x1E82058
	0x01E74F1C MOVZ W8, 0x10
	0x01E74F20 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x2566000
	008 Move X23, 0x228A000
	009 Move W8, [X22+353]
	010 Move X23, [X23+1216]
	011 Move W21, W2
	012 Move W19, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x228A000
	019 Move X0, [X0+1216]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+353], W8
	023 Move X0, [X23]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X22, X0
	027 Call Object..ctor, X0
	028 Compare X22, 0
	029 JumpIfEqual {43}
	030 And W3, W21, 1
	031 Move X0, X22
	032 Move X1, X20
	033 Move W2, W19
	034 Call ChangeDetector.Init, X0, X1, X2, X3
	035 Move X0, X22
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Move X23, [X31+56]
	042 Return X0
	043 Call 0x1C17F20

Method: System.Boolean TryGetSnapshotsBuffers(out Fusion.NetworkBehaviourBuffer from, out Fusion.NetworkBehaviourBuffer to, out System.Single alpha)

Disassembly:
	0x01E759E0 LDR X24, [X24 + 0x8B0]
	0x01E759E4 MOV X28, X31
	0x01E759E8 MOV X29, X31
	0x01E759EC MOV W25, W27
	0x01E759F0 LDR W9, [X8 + 0x18]
	0x01E759F4 CMP X29, W9, SXTW
	0x01E759F8 B.GE 0x1E75B1C
	0x01E759FC CMP X29, X9
	0x01E75A00 B.CS 0x1E75B64
	0x01E75A04 ADD X9, X8, X28
	0x01E75A08 LDP X23, X8, [X9 + 0x30]
	0x01E75A0C CBZ X8, 0x1E75A2C
	0x01E75A10 LDR X9, [X31 + 0x20]
	0x01E75A14 LDR X0, [X8 + 0x40]
	0x01E75A18 LDR X4, [X8 + 0x28]
	0x01E75A1C LDP X2, X3, [X9]
	0x01E75A20 LDR X9, [X8 + 0x18]
	0x01E75A24 MOV X1, X22
	0x01E75A28 BLR X9
	0x01E75A2C CBZ X23, 0x1E75A44
	0x01E75A30 LDR X0, [X23 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X4, X31
	005 Move X19, X2
	006 Move X20, X1
	007 Call RenderTimeline.GetRenderBuffers, X0, X1, X2, X3
	008 Move X8, [X20]
	009 Compare X8, 0
	010 JumpIfEqual {19}
	011 Move W8, [X20+8]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X8, [X19]
	014 Compare X8, 0
	015 JumpIfEqual {19}
	016 Move W8, [X19+8]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 NotImplemented "Instruction CSET not yet implemented."
	019 Move W0, W31
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Boolean ReplicateTo(Fusion.PlayerRef player)

Disassembly:
	0x01E75A54 ADD X28, X28, 0x20
	0x01E75A58 CBNZ X8, 0x1E759F0

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Nullable`1<T> GetInput()

Disassembly:
	0x02226F68 MOV X1, X20
	0x02226F6C MOV X3, X31
	0x02226F70 BL 0x1E743E0
	0x02226F74 LDP X8, X30, [X31 + 0x18]
	0x02226F78 LDUR V0, [X31 + 0x8]
	0x02226F7C LDP X22, X21, [X31 + 0x30]
	0x02226F80 STR X8, [X19 + 0x10]
	0x02226F84 STR V0, [X19]
	0x02226F88 LDP X20, X19, [X31 + 0x40]
	0x02226F8C ADD X31, X31, 0x50
	0x02226F90 RET
	0x02226F94 SUB X31, X31, 0x50
	0x02226F98 STR X30, [X31 + 0x20]
	0x02226F9C STP X22, X21, [X31 + 0x30]
	0x02226FA0 STP X20, X19, [X31 + 0x40]
	0x02226FA4 LDR X9, [X2 + 0x38]
	0x02226FA8 MOV X20, X1
	0x02226FAC MOV X21, X0
	0x02226FB0 MOV X19, X8
	0x02226FB4 CBNZ X9, 0x2226FDC
	0x02226FB8 ADRP X0, 0x1ECD000
	0x02226FBC LDR X0, [X0 + 0x6C0]
	0x02226FC0 MOV X22, X2
	0x02226FC4 BL 0x1C16CF4
	0x02226FC8 LDR X9, [X22 + 0x38]
	0x02226FCC CBNZ X9, 0x2226FDC
	0x02226FD0 MOV X0, X22
	0x02226FD4 BL 0x1C5C6E0
	0x02226FD8 LDR X9, [X22 + 0x38]
	0x02226FDC ADRP X8, 0x1ECD000
	0x02226FE0 LDR X8, [X8 + 0x6C0]
	0x02226FE4 LDR X22, [X9]
	0x02226FE8 LDR X0, [X8]
	0x02226FEC LDR W8, [X0 + 0xE0]
	0x02226FF0 CBNZ W8, 0x2226FF8
	0x02226FF4 BL 0x1C16DFC
	0x02226FF8 MOV X0, X22
	0x02226FFC MOV X1, X31
	0x02227000 BL 0x338C698
	0x02227004 MOV X2, X0
	0x02227008 ADD X8, X31, 0x8
	0x0222700C MOV X0, X21
	0x02227010 MOV X1, X20
	0x02227014 MOV X3, X31
	0x02227018 BL 0x1E743E0
	0x0222701C LDP X8, X30, [X31 + 0x18]
	0x02227020 LDUR V0, [X31 + 0x8]
	0x02227024 LDP X22, X21, [X31 + 0x30]
	0x02227028 STR X8, [X19 + 0x10]
	0x0222702C STR V0, [X19]
	0x02227030 LDP X20, X19, [X31 + 0x40]
	0x02227034 ADD X31, X31, 0x50
	0x02227038 RET
	0x0222703C SUB X31, X31, 0x50
	0x02227040 STR X30, [X31 + 0x20]
	0x02227044 STP X22, X21, [X31 + 0x30]
	0x02227048 STP X20, X19, [X31 + 0x40]
	0x0222704C LDR X9, [X2 + 0x38]
	0x02227050 MOV X20, X1
	0x02227054 MOV X21, X0
	0x02227058 MOV X19, X8
	0x0222705C CBNZ X9, 0x2227084
	0x02227060 ADRP X0, 0x1ECC000
	0x02227064 LDR X0, [X0 + 0x6C0]
	0x02227068 MOV X22, X2
	0x0222706C BL 0x1C16CF4
	0x02227070 LDR X9, [X22 + 0x38]
	0x02227074 CBNZ X9, 0x2227084
	0x02227078 MOV X0, X22
	0x0222707C BL 0x1C5C6E0
	0x02227080 LDR X9, [X22 + 0x38]
	0x02227084 ADRP X8, 0x1ECC000
	0x02227088 LDR X8, [X8 + 0x6C0]
	0x0222708C LDR X22, [X9]
	0x02227090 LDR X0, [X8]
	0x02227094 LDR W8, [X0 + 0xE0]
	0x02227098 CBNZ W8, 0x22270A0
	0x0222709C BL 0x1C16DFC
	0x022270A0 MOV X0, X22
	0x022270A4 MOV X1, X31
	0x022270A8 BL 0x338C698
	0x022270AC MOV X2, X0
	0x022270B0 ADD X8, X31, 0x8
	0x022270B4 MOV X0, X21
	0x022270B8 MOV X1, X20
	0x022270BC MOV X3, X31
	0x022270C0 BL 0x1E743E0
	0x022270C4 LDP X8, X30, [X31 + 0x18]
	0x022270C8 LDUR V0, [X31 + 0x8]
	0x022270CC LDP X22, X21, [X31 + 0x30]
	0x022270D0 STR X8, [X19 + 0x10]
	0x022270D4 STR V0, [X19]
	0x022270D8 LDP X20, X19, [X31 + 0x40]
	0x022270DC ADD X31, X31, 0x50
	0x022270E0 RET
	0x022270E4 SUB X31, X31, 0x50
	0x022270E8 STR X30, [X31 + 0x20]
	0x022270EC STP X22, X21, [X31 + 0x30]
	0x022270F0 STP X20, X19, [X31 + 0x40]
	0x022270F4 LDR X9, [X2 + 0x38]
	0x022270F8 MOV X20, X1
	0x022270FC MOV X21, X0
	0x02227100 MOV X19, X8
	0x02227104 CBNZ X9, 0x222712C
	0x02227108 ADRP X0, 0x1ECC000
	0x0222710C LDR X0, [X0 + 0x6C0]
	0x02227110 MOV X22, X2
	0x02227114 BL 0x1C16CF4
	0x02227118 LDR X9, [X22 + 0x38]
	0x0222711C CBNZ X9, 0x222712C
	0x02227120 MOV X0, X22
	0x02227124 BL 0x1C5C6E0
	0x02227128 LDR X9, [X22 + 0x38]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Add X29, X31, 0
	013 Subtract X31, X31, 32
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X26+40]
	016 Move X22, X2
	017 Move X19, X1
	018 Move X23, X0
	019 Move [X29-8], X8
	020 Move X8, [X2+56]
	021 Compare X8, 0
	022 JumpIfNotEqual {26}
	023 Move X0, X22
	024 Call 0x1C5D6E0
	025 Move X8, [X22+56]
	026 Move X8, [X8+8]
	027 Move W20, [X8+252]
	028 Add X8, X31, 0
	029 Add X9, X20, 15
	030 And X9, X9, 0x1FFFFFFFF
	031 Subtract X21, X8, X9
	032 Add X31, X21, 0
	033 Add X8, X31, 0
	034 Subtract X24, X8, X9
	035 Add X31, X24, 0
	036 Move X0, X24
	037 Move W1, W31
	038 Move X2, X20
	039 Call 0x3EB2B10
	040 Compare X23, 0
	041 JumpIfEqual {142}
	042 Move X8, [X23+64]
	043 Compare X8, 0
	044 JumpIfEqual {114}
	045 Move W9, [X8+96]
	046 Move TEMP, X9
	047 And TEMP, TEMP, 2
	048 Compare TEMP, 2
	049 JumpIfEqual {114}
	050 Move X9, [X8+48]
	051 Compare X9, 0
	052 JumpIfEqual {142}
	053 Move X8, [X8+32]
	054 Compare X8, 0
	055 JumpIfEqual {142}
	056 Move X0, [X9+80]
	057 Compare X0, 0
	058 JumpIfEqual {142}
	059 Move W1, [X8+28]
	060 Move X2, X31
	061 Call Simulation.PlayerValid, X0, X1
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {114}
	066 Move X8, [X23+64]
	067 Compare X8, 0
	068 JumpIfEqual {142}
	069 Move X27, 0x21B2000
	070 Move W9, [X27+2594]
	071 Move X25, [X8+48]
	072 Compare W9, 0
	073 JumpIfNotEqual {79}
	074 Move X0, 0x1ECD000
	075 Move X0, [X0+1432]
	076 Call 0x1C17CF4
	077 Move W8, 1
	078 Move [X27+2594], W8
	079 Move X8, 0x1ECD000
	080 Move X8, [X8+1432]
	081 Move X0, [X8]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move X0, X25
	087 Move X1, X31
	088 Call Object.op_Implicit, X0
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {114}
	093 Move X9, [X23+64]
	094 Compare X9, 0
	095 JumpIfEqual {142}
	096 Move X8, [X9+32]
	097 Compare X8, 0
	098 JumpIfEqual {142}
	099 Move X2, [X9+48]
	100 Compare X2, 0
	101 JumpIfEqual {142}
	102 Move X9, [X22+56]
	103 Move W8, [X8+28]
	104 Subtract X3, X29, 32
	105 Move X4, X21
	106 Move X1, [X9]
	107 Subtract X9, X29, 16
	108 Move X0, [X1]
	109 Move [X29-16], W8
	110 Move [X29-32], X9
	111 Move [X29-24], X21
	112 Move X8, [X1+16]
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Move X0, X24
	115 Move W1, W31
	116 Move X2, X20
	117 Call 0x3EB2B10
	118 Move X0, X21
	119 Move X1, X24
	120 Move X2, X20
	121 Call 0x3EB2AC0
	122 Move X0, X19
	123 Move X1, X21
	124 Move X2, X20
	125 Call 0x3EB2AC0
	126 Move X8, [X26+40]
	127 NotImplemented "Instruction LDUR not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Add X31, X29, 0
	130 Move X20, [X31+80]
	131 Move X19, [X31+88]
	132 Move X22, [X31+64]
	133 Move X21, [X31+72]
	134 Move X24, [X31+48]
	135 Move X23, [X31+56]
	136 Move X26, [X31+32]
	137 Move X25, [X31+40]
	138 Move X27, [X31+16]
	139 Move X29, [X31+96]
	140 Move X30, [X31+104]
	141 Return X0
	142 Call 0x1C17F20
	143 Call 0x3EB2B20

Method: System.Boolean GetInput(out T input)

Disassembly:
	0x0222712C ADRP X8, 0x1ECC000
	0x02227130 LDR X8, [X8 + 0x6C0]
	0x02227134 LDR X22, [X9]
	0x02227138 LDR X0, [X8]
	0x0222713C LDR W8, [X0 + 0xE0]
	0x02227140 CBNZ W8, 0x2227148
	0x02227144 BL 0x1C16DFC
	0x02227148 MOV X0, X22
	0x0222714C MOV X1, X31
	0x02227150 BL 0x338C698
	0x02227154 MOV X2, X0
	0x02227158 ADD X8, X31, 0x8
	0x0222715C MOV X0, X21
	0x02227160 MOV X1, X20
	0x02227164 MOV X3, X31
	0x02227168 BL 0x1E743E0
	0x0222716C LDP X8, X30, [X31 + 0x18]
	0x02227170 LDUR V0, [X31 + 0x8]
	0x02227174 LDP X22, X21, [X31 + 0x30]
	0x02227178 STR X8, [X19 + 0x10]
	0x0222717C STR V0, [X19]
	0x02227180 LDP X20, X19, [X31 + 0x40]
	0x02227184 ADD X31, X31, 0x50
	0x02227188 RET
	0x0222718C SUB X31, X31, 0x50
	0x02227190 STR X30, [X31 + 0x20]
	0x02227194 STP X22, X21, [X31 + 0x30]
	0x02227198 STP X20, X19, [X31 + 0x40]
	0x0222719C LDR X9, [X2 + 0x38]
	0x022271A0 MOV X20, X1
	0x022271A4 MOV X21, X0
	0x022271A8 MOV X19, X8
	0x022271AC CBNZ X9, 0x22271D4
	0x022271B0 ADRP X0, 0x1ECC000
	0x022271B4 LDR X0, [X0 + 0x6C0]
	0x022271B8 MOV X22, X2
	0x022271BC BL 0x1C16CF4
	0x022271C0 LDR X9, [X22 + 0x38]
	0x022271C4 CBNZ X9, 0x22271D4
	0x022271C8 MOV X0, X22
	0x022271CC BL 0x1C5C6E0
	0x022271D0 LDR X9, [X22 + 0x38]
	0x022271D4 ADRP X8, 0x1ECC000
	0x022271D8 LDR X8, [X8 + 0x6C0]
	0x022271DC LDR X22, [X9]
	0x022271E0 LDR X0, [X8]
	0x022271E4 LDR W8, [X0 + 0xE0]
	0x022271E8 CBNZ W8, 0x22271F0
	0x022271EC BL 0x1C16DFC
	0x022271F0 MOV X0, X22
	0x022271F4 MOV X1, X31
	0x022271F8 BL 0x338C698
	0x022271FC MOV X2, X0
	0x02227200 ADD X8, X31, 0x8
	0x02227204 MOV X0, X21
	0x02227208 MOV X1, X20
	0x0222720C MOV X3, X31
	0x02227210 BL 0x1E743E0
	0x02227214 LDP X8, X30, [X31 + 0x18]
	0x02227218 LDUR V0, [X31 + 0x8]
	0x0222721C LDP X22, X21, [X31 + 0x30]
	0x02227220 STR X8, [X19 + 0x10]
	0x02227224 STR V0, [X19]
	0x02227228 LDP X20, X19, [X31 + 0x40]
	0x0222722C ADD X31, X31, 0x50
	0x02227230 RET
	0x02227234 SUB X31, X31, 0x50
	0x02227238 STR X30, [X31 + 0x20]
	0x0222723C STP X22, X21, [X31 + 0x30]
	0x02227240 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X2+56]
	008 Move X20, X2
	009 Move X19, X1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {15}
	013 Move X0, X20
	014 Call 0x1C5D6E0
	015 Compare X21, 0
	016 JumpIfEqual {101}
	017 Move X8, [X21+64]
	018 Compare X8, 0
	019 JumpIfEqual {89}
	020 Move W9, [X8+96]
	021 Move TEMP, X9
	022 And TEMP, TEMP, 2
	023 Compare TEMP, 2
	024 JumpIfEqual {89}
	025 Move X9, [X8+48]
	026 Compare X9, 0
	027 JumpIfEqual {101}
	028 Move X8, [X8+32]
	029 Compare X8, 0
	030 JumpIfEqual {101}
	031 Move X0, [X9+80]
	032 Compare X0, 0
	033 JumpIfEqual {101}
	034 Move W1, [X8+28]
	035 Move X2, X31
	036 Call Simulation.PlayerValid, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {89}
	041 Move X8, [X21+64]
	042 Compare X8, 0
	043 JumpIfEqual {101}
	044 Move X23, 0x21B2000
	045 Move W9, [X23+2594]
	046 Move X22, [X8+48]
	047 Compare W9, 0
	048 JumpIfNotEqual {54}
	049 Move X0, 0x1ECD000
	050 Move X0, [X0+1432]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X23+2594], W8
	054 Move X8, 0x1ECD000
	055 Move X8, [X8+1432]
	056 Move X0, [X8]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X22
	062 Move X1, X31
	063 Call Object.op_Implicit, X0
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {89}
	068 Move X9, [X21+64]
	069 Compare X9, 0
	070 JumpIfEqual {101}
	071 Move X8, [X9+32]
	072 Compare X8, 0
	073 JumpIfEqual {101}
	074 Move X0, [X9+48]
	075 Compare X0, 0
	076 JumpIfEqual {101}
	077 Move X9, [X20+56]
	078 Move W1, [X8+28]
	079 Move X2, X19
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X3, [X9+8]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X30, [X31+48]
	086 Move X23, [X31+56]
	087 Call 0x222CE74, X0, X1, X2
	088 Return X0
	089 Move W2, 168
	090 Move X0, X19
	091 Move W1, W31
	092 Call 0x3EB2B10
	093 Move X20, [X31+32]
	094 Move X19, [X31+40]
	095 Move X22, [X31+16]
	096 Move X21, [X31+24]
	097 Move W0, W31
	098 Move X30, [X31+48]
	099 Move X23, [X31+56]
	100 Return X0
	101 Call 0x1C17F20

Method: System.Int32 NetworkSerialize(Fusion.NetworkRunner runner, Fusion.NetworkBehaviour obj, System.Byte* data)

Disassembly:
	0x01E75A5C B 0x1E75B60
	0x01E75A60 CMP W1, 0x1
	0x01E75A64 MOV X20, X0

ISIL:
	001 Move X0, X1
	002 Move X1, X2

Method: System.Int32 NetworkSerialize(Fusion.NetworkBehaviour obj, System.Byte* data)

Disassembly:
	0x01E75A68 B.NE 0x1E75BC8
	0x01E75A6C MOV X0, X20
	0x01E75A70 BL 0x3EB1AD0
	0x01E75A74 MOV X20, X0
	0x01E75A78 MOV X0, X19
	0x01E75A7C BL 0x1C16D08
	0x01E75A80 LDR X8, [X20]
	0x01E75A84 LDR X1, [X8]
	0x01E75A88 BL 0x1C17270
	0x01E75A8C TBZ X0, 0x0, 0x1E75B68
	0x01E75A90 LDR X20, [X20]
	0x01E75A94 BL 0x3EB1AE0
	0x01E75A98 MOV X0, X24
	0x01E75A9C BL 0x1C16D08
	0x01E75AA0 LDR W8, [X0 + 0xE0]
	0x01E75AA4 CBNZ W8, 0x1E75AAC
	0x01E75AA8 BL 0x1C16DFC
	0x01E75AAC MOV X0, X20
	0x01E75AB0 MOV X1, X31
	0x01E75AB4 BL 0x1E3E4C8
	0x01E75AB8 B 0x1E75A44
	0x01E75ABC CMP W1, 0x1
	0x01E75AC0 MOV X20, X0
	0x01E75AC4 B.NE 0x1E75BC8
	0x01E75AC8 MOV X0, X20
	0x01E75ACC BL 0x3EB1AD0
	0x01E75AD0 MOV X20, X0
	0x01E75AD4 MOV X0, X19
	0x01E75AD8 BL 0x1C16D08
	0x01E75ADC LDR X8, [X20]
	0x01E75AE0 LDR X1, [X8]
	0x01E75AE4 BL 0x1C17270
	0x01E75AE8 TBZ X0, 0x0, 0x1E75B8C
	0x01E75AEC LDR X20, [X20]
	0x01E75AF0 BL 0x3EB1AE0
	0x01E75AF4 MOV X0, X24
	0x01E75AF8 BL 0x1C16D08
	0x01E75AFC LDR W8, [X0 + 0xE0]
	0x01E75B00 CBNZ W8, 0x1E75B08
	0x01E75B04 BL 0x1C16DFC
	0x01E75B08 MOV X0, X20
	0x01E75B0C MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2565000
	006 Move W8, [X21+354]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x2289000
	014 Move X0, [X0+1424]
	015 Call 0x1C17CF4
	016 Move X0, 0x2282000
	017 Move X0, [X0+2680]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+354], W8
	021 Compare X20, 0
	022 JumpIfEqual {46}
	023 Move X8, [X20+64]
	024 Compare X8, 0
	025 JumpIfEqual {34}
	026 Move X8, [X8+32]
	027 Compare X8, 0
	028 JumpIfEqual {30}
	029 Move W8, [X8]
	030 Move [X19], W8
	031 Move W8, [X20+104]
	032 Move W0, 8
	033 Move [X19+4], W8
	034 Move X8, 0x2282000
	035 Move X8, [X8+2680]
	036 Move X0, [X8]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X8, 0x2289000
	042 Move X8, [X8+1424]
	043 Move X0, X20
	044 Move X1, [X8]
	045 Call 0x222ACD8, X0
	046 Move W0, 4
	047 Move [X19], W31
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return X0

Method: System.Int32 NetworkDeserialize(Fusion.NetworkRunner runner, System.Byte* data, ref Fusion.NetworkBehaviour result)

Disassembly:
	0x01E75B10 BL 0x1E3E4C8
	0x01E75B14 CBNZ X23, 0x1E75A30
	0x01E75B18 B 0x1E75A44
	0x01E75B1C LDR X8, [X21 + 0x18]
	0x01E75B20 CBZ X8, 0x1E75B60
	0x01E75B24 LDR X8, [X8 + 0x18]
	0x01E75B28 LDR W9, [X21 + 0x2C]
	0x01E75B2C LDR X10, [X31 + 0x18]
	0x01E75B30 MOV W1, W27
	0x01E75B34 STR X26, [X10]
	0x01E75B38 STP W8, W9, [X10 + 0x8]
	0x01E75B3C LDR X0, [X21 + 0x30]
	0x01E75B40 LDP X20, X19, [X31 + 0xE0]
	0x01E75B44 LDP X22, X21, [X31 + 0xD0]
	0x01E75B48 LDP X24, X23, [X31 + 0xC0]
	0x01E75B4C LDP X26, X25, [X31 + 0xB0]
	0x01E75B50 LDP X28, X27, [X31 + 0xA0]
	0x01E75B54 LDP X29, X30, [X31 + 0x90]
	0x01E75B58 ADD X31, X31, 0xF0
	0x01E75B5C RET
	0x01E75B60 BL 0x1C16F20
	0x01E75B64 BL 0x1C16F28
	0x01E75B68 MOVZ W0, 0x8
	0x01E75B6C BL 0x3EB1AF0
	0x01E75B70 LDR X8, [X20]
	0x01E75B74 STR X8, [X0]
	0x01E75B78 ADRP X1, 0x203F000
	0x01E75B7C ADD X1, X1, 0xE58
	0x01E75B80 MOV X2, X31
	0x01E75B84 BL 0x3EB1B00
	0x01E75B88 B 0x1E75BAC
	0x01E75B8C MOVZ W0, 0x8
	0x01E75B90 BL 0x3EB1AF0
	0x01E75B94 LDR X8, [X20]
	0x01E75B98 STR X8, [X0]
	0x01E75B9C ADRP X1, 0x203F000
	0x01E75BA0 ADD X1, X1, 0xE58
	0x01E75BA4 MOV X2, X31
	0x01E75BA8 BL 0x3EB1B00
	0x01E75BAC B 0x1E75BB4
	0x01E75BB0 B 0x1E75BC0
	0x01E75BB4 MOV X20, X0
	0x01E75BB8 BL 0x3EB1AE0
	0x01E75BBC B 0x1E75BC8
	0x01E75BC0 MOV X20, X0
	0x01E75BC4 BL 0x3EB1AE0
	0x01E75BC8 MOV X0, X20
	0x01E75BCC BL 0x1D2C690
	0x01E75BD0 BL 0x1990590
	0x01E75BD4 STR X1, [X0]
	0x01E75BD8 STR W2, [X0 + 0x8]
	0x01E75BDC RET
	0x01E75BE0 STR X30, [X31 - 0x40]!
	0x01E75BE4 STP X24, X23, [X31 + 0x10]
	0x01E75BE8 STP X22, X21, [X31 + 0x20]
	0x01E75BEC STP X20, X19, [X31 + 0x30]
	0x01E75BF0 ADRP X23, 0x2564000
	0x01E75BF4 ADRP X24, 0x2288000
	0x01E75BF8 ADRP X19, 0x2288000
	0x01E75BFC ADRP X20, 0x2288000
	0x01E75C00 ADRP X22, 0x2288000
	0x01E75C04 ADRP X21, 0x2288000
	0x01E75C08 LDRB W8, [X23 + 0x16A]
	0x01E75C0C LDR X24, [X24 + 0x5D0]
	0x01E75C10 LDR X19, [X19 + 0x5C0]
	0x01E75C14 LDR X20, [X20 + 0x4C0]
	0x01E75C18 LDR X22, [X22 + 0x620]
	0x01E75C1C LDR X21, [X21 + 0x628]
	0x01E75C20 TBNZ X8, 0x0, 0x1E75C68
	0x01E75C24 ADRP X0, 0x2288000
	0x01E75C28 LDR X0, [X0 + 0x4C0]
	0x01E75C2C BL 0x1C16CF4
	0x01E75C30 ADRP X0, 0x2288000
	0x01E75C34 LDR X0, [X0 + 0x5C0]
	0x01E75C38 BL 0x1C16CF4
	0x01E75C3C ADRP X0, 0x2288000
	0x01E75C40 LDR X0, [X0 + 0x628]
	0x01E75C44 BL 0x1C16CF4
	0x01E75C48 ADRP X0, 0x2288000
	0x01E75C4C LDR X0, [X0 + 0x5D0]
	0x01E75C50 BL 0x1C16CF4
	0x01E75C54 ADRP X0, 0x2288000
	0x01E75C58 LDR X0, [X0 + 0x620]
	0x01E75C5C BL 0x1C16CF4
	0x01E75C60 MOVZ W8, 0x1
	0x01E75C64 STRB W8, [X23 + 0x16A]
	0x01E75C68 LDR X0, [X24]
	0x01E75C6C BL 0x1C16F10
	0x01E75C70 LDR X1, [X19]
	0x01E75C74 MOV X19, X0
	0x01E75C78 BL 0x2AA4804
	0x01E75C7C LDR X8, [X20]
	0x01E75C80 LDR X8, [X8 + 0xB8]
	0x01E75C84 STR X19, [X8]
	0x01E75C88 LDR X0, [X22]
	0x01E75C8C BL 0x1C16F10
	0x01E75C90 LDR X1, [X21]
	0x01E75C94 MOV X19, X0
	0x01E75C98 BL 0x2A88E9C
	0x01E75C9C LDR X8, [X20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x2565000
	009 Move X20, 0x2282000
	010 Move W8, [X23+355]
	011 Move X20, [X20+920]
	012 Move X19, X2
	013 Move X22, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0x2289000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move X0, 0x2282000
	023 Move X0, [X0+2680]
	024 Call 0x1C17CF4
	025 Move X0, 0x2289000
	026 Move X0, [X0+1368]
	027 Call 0x1C17CF4
	028 Move X0, 0x2282000
	029 Move X0, [X0+920]
	030 Call 0x1C17CF4
	031 Move X0, 0x227F000
	032 Move X0, [X0+1728]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X23+355], W8
	036 Move X0, [X20]
	037 Move [X31+8], X31
	038 Move W20, [X22]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfEqual {72}
	042 Compare W20, 0
	043 JumpIfEqual {75}
	044 Compare X21, 0
	045 JumpIfEqual {117}
	046 Move W22, [X22+4]
	047 Add X2, X31, 8
	048 Move X0, X21
	049 Move X1, X20
	050 Move X3, X31
	051 Call NetworkRunner.TryFindObject, X0, X1, X2
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {77}
	056 Move TEMP, X22
	057 And TEMP, TEMP, -2147483648
	058 Compare TEMP, -2147483648
	059 JumpIfEqual {78}
	060 Move X8, [X31+8]
	061 Compare X8, 0
	062 JumpIfEqual {117}
	063 Move X8, [X8+120]
	064 Compare X8, 0
	065 JumpIfEqual {117}
	066 Move W9, [X8+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Add X8, X8, X22
	070 Move X8, [X8+32]
	071 Move [X19], X8
	072 Call 0x1C17DFC
	073 Compare W20, 0
	074 JumpIfNotEqual {44}
	075 Move [X19], X31
	076 Move W0, 4
	077 Move [X19], X31
	078 Move [X19], X31
	079 Move X8, 0x227F000
	080 Move X8, [X8+1728]
	081 NotImplemented "Instruction BFM not yet implemented."
	082 Move X0, [X8]
	083 Move X8, 0x2289000
	084 Move X8, [X8+1368]
	085 Move W9, [X0+224]
	086 Move X19, [X8]
	087 Compare W9, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X0, X19
	091 Move X1, X31
	092 Call Type.GetTypeFromHandle, X0
	093 Move X8, 0x2282000
	094 Move X8, [X8+2680]
	095 Move X19, X0
	096 Move X8, [X8]
	097 Move W9, [X8+224]
	098 Compare W9, 0
	099 JumpIfNotEqual {102}
	100 Move X0, X8
	101 Call 0x1C17DFC
	102 Move X8, 0x2289000
	103 Move X8, [X8+1432]
	104 Move X0, X20
	105 Move X1, X19
	106 Move X2, [X8]
	107 Call 0x222ACD0, X0, X1
	108 Move W0, 8
	109 Move X20, [X31+48]
	110 Move X19, [X31+56]
	111 Move X22, [X31+32]
	112 Move X21, [X31+40]
	113 Move X30, [X31+16]
	114 Move X23, [X31+24]
	115 Add X31, X31, 64
	116 Return X0
	117 Call 0x1C17F20
	118 Call 0x1C17F28

Method: Fusion.NetworkBehaviourId NetworkWrap(Fusion.NetworkRunner runner, Fusion.NetworkBehaviour obj)

Disassembly:
	0x01E75CA0 LDP X22, X21, [X31 + 0x20]
	0x01E75CA4 LDP X24, X23, [X31 + 0x10]
	0x01E75CA8 LDR X8, [X8 + 0xB8]
	0x01E75CAC STR X19, [X8 + 0x8]
	0x01E75CB0 LDP X20, X19, [X31 + 0x30]
	0x01E75CB4 LDR X30, [X31], #0x40
	0x01E75CB8 RET
	0x01E75CBC STR X30, [X31 - 0x30]!
	0x01E75CC0 STP X22, X21, [X31 + 0x10]
	0x01E75CC4 STP X20, X19, [X31 + 0x20]
	0x01E75CC8 LDR X8, [X2 + 0x8]
	0x01E75CCC STP X1, X2, [X0 + 0x20]
	0x01E75CD0 MOV X19, X0

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {10}
	003 Move X8, [X1+64]
	004 Compare X8, 0
	005 JumpIfEqual {12}
	006 Move X8, [X8+32]
	007 Compare X8, 0
	008 JumpIfEqual {12}
	009 Move W0, [X8]
	010 Move X0, X31
	011 Return X0
	012 Move X0, X31
	013 Move W8, [X1+104]
	014 NotImplemented "Instruction BFM not yet implemented."
	015 Return X0

Method: Fusion.NetworkBehaviour NetworkUnwrap(Fusion.NetworkRunner runner, Fusion.NetworkBehaviourId wrapper)

Disassembly:
	0x01E75CD4 MOV X20, X2
	0x01E75CD8 STR X8, [X0 + 0x10]
	0x01E75CDC LDRB W22, [X2 + 0x52]
	0x01E75CE0 STR X0, [X0 + 0x40]
	0x01E75CE4 MOV X0, X2
	0x01E75CE8 MOV X21, X1
	0x01E75CEC BL 0x1C16D84
	0x01E75CF0 TBZ X0, 0x0, 0x1E75D08
	0x01E75CF4 CMP W22, 0x2
	0x01E75CF8 B.NE 0x1E75D44
	0x01E75CFC ADRP X8, 0xFFFFFFFFFFB1D000
	0x01E75D00 ADD X8, X8, 0xB38
	0x01E75D04 B 0x1E75D88
	0x01E75D08 CMP W22, 0x1
	0x01E75D0C B.NE 0x1E75D40
	0x01E75D10 LDRB W8, [X19 + 0x70]
	0x01E75D14 CBZ W8, 0x1E75D58
	0x01E75D18 MOV X0, X20
	0x01E75D1C BL 0x1C16D7C
	0x01E75D20 MOV W21, W0
	0x01E75D24 MOV X0, X20
	0x01E75D28 BL 0x1C17238
	0x01E75D2C TBZ X21, 0x0, 0x1E75D64
	0x01E75D30 TBZ X0, 0x0, 0x1E75D74
	0x01E75D34 ADRP X8, 0xFFFFFFFFFFB1D000
	0x01E75D38 ADD X8, X8, 0xC74
	0x01E75D3C B 0x1E75D88
	0x01E75D40 CBZ X21, 0x1E75DA8
	0x01E75D44 LDR X8, [X19 + 0x10]
	0x01E75D48 LDR X9, [X19 + 0x20]
	0x01E75D4C STR X8, [X19 + 0x18]
	0x01E75D50 STR X9, [X19 + 0x40]
	0x01E75D54 B 0x1E75D8C
	0x01E75D58 ADRP X8, 0xFFFFFFFFFFB1D000
	0x01E75D5C ADD X8, X8, 0xB10
	0x01E75D60 B 0x1E75D88
	0x01E75D64 TBZ X0, 0x0, 0x1E75D80
	0x01E75D68 ADRP X8, 0xFFFFFFFFFFB1D000
	0x01E75D6C ADD X8, X8, 0xB84
	0x01E75D70 B 0x1E75D88
	0x01E75D74 ADRP X8, 0xFFFFFFFFFFB1D000
	0x01E75D78 ADD X8, X8, 0xC20
	0x01E75D7C B 0x1E75D88
	0x01E75D80 ADRP X8, 0xFFFFFFFFFFB1D000
	0x01E75D84 ADD X8, X8, 0xB50
	0x01E75D88 STR X8, [X19 + 0x18]
	0x01E75D8C ADRP X8, 0xFFFFFFFFFFB1D000
	0x01E75D90 ADD X8, X8, 0xAB0
	0x01E75D94 STR X8, [X19 + 0x38]
	0x01E75D98 LDP X20, X19, [X31 + 0x20]
	0x01E75D9C LDP X22, X21, [X31 + 0x10]
	0x01E75DA0 LDR X30, [X31], #0x30
	0x01E75DA4 RET
	0x01E75DA8 ADRP X1, 0xFFFFFFFFFECA6000
	0x01E75DAC ADD X1, X1, 0xEE3
	0x01E75DB0 MOV X0, X31
	0x01E75DB4 BL 0x1C16F3C
	0x01E75DB8 MOV X1, X31
	0x01E75DBC BL 0x1C16DEC
	0x01E75DC0 LDR X8, [X0 + 0x40]
	0x01E75DC4 LDR X5, [X0 + 0x18]
	0x01E75DC8 LDR X4, [X0 + 0x28]
	0x01E75DCC MOV X0, X8
	0x01E75DD0 BR X5
	0x01E75DD4 SUB X31, X31, 0x70
	0x01E75DD8 STP X3, X30, [X31 + 0x28]
	0x01E75DDC STP X24, X23, [X31 + 0x40]
	0x01E75DE0 STP X22, X21, [X31 + 0x50]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2565000
	007 Move W8, [X21+356]
	008 Move X19, X1
	009 Move X20, X0
	010 Move [X31+8], X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x2289000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move X0, 0x2282000
	019 Move X0, [X0+2680]
	020 Call 0x1C17CF4
	021 Move X0, 0x2289000
	022 Move X0, [X0+1368]
	023 Call 0x1C17CF4
	024 Move X0, 0x227F000
	025 Move X0, [X0+1728]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+356], W8
	029 Add X0, X31, 8
	030 Move [X31], X31
	031 Call NetworkBehaviourId.get_IsValid, X0
	032 Move W8, W0
	033 Move X0, X31
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {78}
	038 Compare X20, 0
	039 JumpIfEqual {84}
	040 Add X2, X31, 0
	041 Move X0, X20
	042 Move X1, X19
	043 Move X3, X31
	044 Call NetworkRunner.TryFindBehaviour, X0, X1, X2
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {77}
	049 Move X8, 0x227F000
	050 Move X8, [X8+1728]
	051 Move X0, [X8]
	052 Move X8, 0x2289000
	053 Move X8, [X8+1368]
	054 Move W9, [X0+224]
	055 Move X20, [X8]
	056 Compare W9, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, X20
	060 Move X1, X31
	061 Call Type.GetTypeFromHandle, X0
	062 Move X8, 0x2282000
	063 Move X8, [X8+2680]
	064 Move X20, X0
	065 Move X8, [X8]
	066 Move W9, [X8+224]
	067 Compare W9, 0
	068 JumpIfNotEqual {71}
	069 Move X0, X8
	070 Call 0x1C17DFC
	071 Move X8, 0x2289000
	072 Move X8, [X8+1432]
	073 Move X0, X19
	074 Move X1, X20
	075 Move X2, [X8]
	076 Call 0x222ACD0, X0, X1
	077 Move X0, [X31]
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X30, [X31+16]
	081 Move X21, [X31+24]
	082 Add X31, X31, 48
	083 Return X0
	084 Call 0x1C17F20

Method: Fusion.NetworkBehaviourId op_Implicit(Fusion.NetworkBehaviour behaviour)

Disassembly:
	0x01E75E50 LDP X20, X19, [X31 + 0x60]
	0x01E75E54 LDP X22, X21, [X31 + 0x50]
	0x01E75E58 LDP X24, X23, [X31 + 0x40]
	0x01E75E5C LDR X30, [X31 + 0x30]
	0x01E75E60 ADD X31, X31, 0x70
	0x01E75E64 RET
	0x01E75E68 MOV X0, X1
	0x01E75E6C MOV X1, X31
	0x01E75E70 B 0x1C16CB4
	0x01E75E74 STR X30, [X31 - 0x30]!
	0x01E75E78 STP X22, X21, [X31 + 0x10]
	0x01E75E7C STP X20, X19, [X31 + 0x20]
	0x01E75E80 LDR X8, [X2 + 0x8]
	0x01E75E84 STP X1, X2, [X0 + 0x20]
	0x01E75E88 MOV X19, X0
	0x01E75E8C MOV X20, X2
	0x01E75E90 STR X8, [X0 + 0x10]
	0x01E75E94 LDRB W22, [X2 + 0x52]
	0x01E75E98 STR X0, [X0 + 0x40]
	0x01E75E9C MOV X0, X2
	0x01E75EA0 MOV X21, X1
	0x01E75EA4 BL 0x1C16D84
	0x01E75EA8 TBZ X0, 0x0, 0x1E75EC0
	0x01E75EAC CMP W22, 0x1
	0x01E75EB0 B.NE 0x1E75EC8
	0x01E75EB4 ADRP X8, 0xFFFFFFFFFFB1D000
	0x01E75EB8 ADD X8, X8, 0xD80
	0x01E75EBC B 0x1E75F3C
	0x01E75EC0 CBZ W22, 0x1E75EDC
	0x01E75EC4 CBZ X21, 0x1E75F5C
	0x01E75EC8 LDR X8, [X19 + 0x10]
	0x01E75ECC LDR X9, [X19 + 0x20]
	0x01E75ED0 STR X8, [X19 + 0x18]
	0x01E75ED4 STR X9, [X19 + 0x40]
	0x01E75ED8 B 0x1E75F40
	0x01E75EDC LDRB W8, [X19 + 0x70]
	0x01E75EE0 CBZ W8, 0x1E75F0C
	0x01E75EE4 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X0, 0
	006 JumpIfEqual {49}
	007 Move X21, 0x2564000
	008 Move W8, [X21+2594]
	009 Move X20, [X0+56]
	010 Move X19, X0
	011 Compare W8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, 0x227F000
	014 Move X0, [X0+1432]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2594], W8
	018 Move X8, 0x227F000
	019 Move X8, [X8+1432]
	020 Move X0, [X8]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Call Object.op_Implicit, X0
	028 Move W8, W0
	029 Move X0, X31
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {44}
	034 Move X8, [X19+64]
	035 Compare X8, 0
	036 JumpIfEqual {41}
	037 Move X8, [X8+32]
	038 Compare X8, 0
	039 JumpIfEqual {41}
	040 Move W0, [X8]
	041 Move X0, X31
	042 Move W8, [X19+104]
	043 NotImplemented "Instruction BFM not yet implemented."
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0
	049 Call 0x1C17F20

Method: System.Void InvokeWeavedCode()

Disassembly:
	0x01E75EE8 BL 0x1C16D7C

ISIL:
	001 Return 

Method: T MakeRef()

Disassembly:
	0x02228518 ADD X8, X8, W9, 0x4, SXTW
	0x0222851C ADD X0, X8, 0x138
	0x02228520 LDP X8, X2, [X0]
	0x02228524 UBFM X9, X21, 0x20, 0x3F
	0x02228528 FMOV S0, W9
	0x0222852C MOV X0, X22
	0x02228530 MOV W1, W21
	0x02228534 BLR X8
	0x02228538 B 0x2228488
	0x0222853C MOV X21, X31
	0x02228540 LDR X8, [X19 + 0x38]
	0x02228544 ADD X0, X31, 0x50
	0x02228548 LDR X1, [X8 + 0xA0]
	0x0222854C BL 0x2C1CC18
	0x02228550 CBNZ X21, 0x222856C
	0x02228554 LDP X20, X19, [X31 + 0xC0]
	0x02228558 LDP X22, X21, [X31 + 0xB0]
	0x0222855C LDR X30, [X31 + 0xA0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, 0x1ED5000
	006 Move X0, [X0+1880]
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X20, X0
	010 Move X0, 0x1EF5000
	011 Move X0, [X0+416]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X20
	015 Move X2, X31
	016 Call NotImplementedException..ctor, X0, X1
	017 Move X0, X20
	018 Move X1, X19
	019 Call 0x1C17DEC

Method: T MakeRef(T defaultValue)

Disassembly:
	0x02228560 ADD X31, X31, 0xD0
	0x02228564 RET
	0x02228568 BL 0x1C16F20
	0x0222856C MOV X0, X21
	0x02228570 BL 0x1C16F18
	0x02228574 B 0x2228580
	0x02228578 B 0x2228580
	0x0222857C B 0x2228580
	0x02228580 MOV X20, X0
	0x02228584 CMP W1, 0x1
	0x02228588 B.NE 0x22285A0
	0x0222858C MOV X0, X20
	0x02228590 BL 0x3EB1AD0
	0x02228594 LDR X21, [X0]
	0x02228598 BL 0x3EB1AE0
	0x0222859C B 0x2228540
	0x022285A0 MOV X21, X31
	0x022285A4 B 0x22285AC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1ED5000
	005 Move X0, [X0+1880]
	006 Move X19, X1
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X20, X0
	010 Move X0, 0x1EF5000
	011 Move X0, [X0+416]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X20
	015 Move X2, X31
	016 Call NotImplementedException..ctor, X0, X1
	017 Move X0, X20
	018 Move X1, X19
	019 Call 0x1C17DEC

Method: T* MakePtr()

Disassembly:
	0x02228488 LDR X8, [X19 + 0x38]
	0x0222848C LDR X1, [X8 + 0x98]
	0x02228490 ADD X0, X31, 0x50
	0x02228494 BL 0x2C1CA00
	0x02228498 TBZ X0, 0x0, 0x222853C
	0x0222849C LDR X8, [X19 + 0x38]
	0x022284A0 LDR X1, [X8 + 0x48]
	0x022284A4 ADD X0, X31, 0x50
	0x022284A8 BL 0x2C1CAAC
	0x022284AC LDR X22, [X20]
	0x022284B0 CBZ X22, 0x2228568
	0x022284B4 LDR X8, [X19 + 0x38]
	0x022284B8 MOV X21, X0
	0x022284BC LDR X1, [X8 + 0x88]
	0x022284C0 LDRB W8, [X1 + 0x135]
	0x022284C4 TBNZ X8, 0x0, 0x22284D4
	0x022284C8 MOV X0, X1
	0x022284CC BL 0x1C5C684

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, 0x1ED5000
	006 Move X0, [X0+1880]
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X20, X0
	010 Move X0, 0x1EF5000
	011 Move X0, [X0+416]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X20
	015 Move X2, X31
	016 Call NotImplementedException..ctor, X0, X1
	017 Move X0, X20
	018 Move X1, X19
	019 Call 0x1C17DEC

Method: T* MakePtr(T defaultValue)

Disassembly:
	0x022284D0 MOV X1, X0
	0x022284D4 LDR X8, [X22]
	0x022284D8 LDRH W9, [X8 + 0x12E]
	0x022284DC CBZ X9, 0x2228500
	0x022284E0 LDR X10, [X8 + 0xB0]
	0x022284E4 ADD X10, X10, 0x8
	0x022284E8 LDUR X11, [X10 - 0x8]
	0x022284EC CMP X11, X1
	0x022284F0 B.EQ 0x2228510
	0x022284F4 SUBS X9, X9, 0x1
	0x022284F8 ADD X10, X10, 0x10
	0x022284FC B.NE 0x22284E8
	0x02228500 MOVZ W2, 0x5
	0x02228504 MOV X0, X22
	0x02228508 BL 0x1C5C788
	0x0222850C B 0x2228520
	0x02228510 LDR W9, [X10]
	0x02228514 ADD W9, W9, 0x5

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1ED5000
	005 Move X0, [X0+1880]
	006 Move X19, X1
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X20, X0
	010 Move X0, 0x1EF5000
	011 Move X0, [X0+416]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X20
	015 Move X2, X31
	016 Call NotImplementedException..ctor, X0, X1
	017 Move X0, X20
	018 Move X1, X19
	019 Call 0x1C17DEC

Method: Fusion.NetworkBehaviourUtils/ArrayInitializer`1<T> MakeInitializer(T[] array)

Disassembly:
	0x022283F8 MOV X1, X0
	0x022283FC LDR X8, [X22]
	0x02228400 LDRH W9, [X8 + 0x12E]
	0x02228404 CBZ X9, 0x2228428
	0x02228408 LDR X10, [X8 + 0xB0]
	0x0222840C ADD X10, X10, 0x8
	0x02228410 LDUR X11, [X10 - 0x8]
	0x02228414 CMP X11, X1
	0x02228418 B.EQ 0x2228448
	0x0222841C SUBS X9, X9, 0x1
	0x02228420 ADD X10, X10, 0x10
	0x02228424 B.NE 0x2228410
	0x02228428 MOVZ W2, 0x3
	0x0222842C MOV X0, X22
	0x02228430 BL 0x1C5C788
	0x02228434 B 0x2228458
	0x02228438 LDR X0, [X8 + 0x10]
	0x0222843C BL 0x2278924

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1ED5000
	005 Move X0, [X0+1880]
	006 Move X19, X1
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X20, X0
	010 Move X0, 0x1EF5000
	011 Move X0, [X0+416]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X20
	015 Move X2, X31
	016 Call NotImplementedException..ctor, X0, X1
	017 Move X0, X20
	018 Move X1, X19
	019 Call 0x1C17DEC

Method: Fusion.NetworkBehaviourUtils/DictionaryInitializer`2<K, V> MakeInitializer(System.Collections.Generic.Dictionary`2<K, V> dictionary)

Disassembly:
	0x02228440 STR X0, [X20]
	0x02228444 B 0x2228464
	0x02228448 LDR W9, [X10]
	0x0222844C ADD W9, W9, 0x3
	0x02228450 ADD X8, X8, W9, 0x4, SXTW
	0x02228454 ADD X0, X8, 0x138
	0x02228458 LDP X8, X1, [X0]
	0x0222845C MOV X0, X22
	0x02228460 BLR X8
	0x02228464 LDR X8, [X19 + 0x38]
	0x02228468 MOV X0, X21
	0x0222846C LDR X1, [X8 + 0x30]
	0x02228470 ADD X8, X31, 0x8
	0x02228474 BL 0x2416BB8
	0x02228478 ADD X0, X31, 0x50
	0x0222847C ADD X1, X31, 0x8
	0x02228480 MOVZ W2, 0x48
	0x02228484 BL 0x3EB1AC0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1ED5000
	005 Move X0, [X0+1880]
	006 Move X19, X1
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X20, X0
	010 Move X0, 0x1EF5000
	011 Move X0, [X0+416]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X20
	015 Move X2, X31
	016 Call NotImplementedException..ctor, X0, X1
	017 Move X0, X20
	018 Move X1, X19
	019 Call 0x1C17DEC

Method: System.Void MakeOwned(Fusion.NetworkRunner runner, Fusion.NetworkObject obj, System.Int32 index)

Disassembly:
	0x01E75EEC MOV W21, W0
	0x01E75EF0 MOV X0, X20
	0x01E75EF4 BL 0x1C17238

ISIL:
	001 Move [X0+56], X1
	002 Move [X0+64], X2
	003 Move [X0+104], W3
	004 Return 

Method: System.Void MakeUnowned()

Disassembly:
	0x01E75EF8 TBZ X21, 0x0, 0x1E75F18
	0x01E75EFC TBZ X0, 0x0, 0x1E75F28
	0x01E75F00 ADRP X8, 0xFFFFFFFFFFB1D000

ISIL:
	001 Move [X0+56], X31
	002 Move [X0+64], X31
	003 Move [X0+104], W31
	004 Return 

Method: System.Void .ctor()

Disassembly:
	0x01E75F04 ADD X8, X8, 0xE7C
	0x01E75F08 B 0x1E75F3C
	0x01E75F0C ADRP X8, 0xFFFFFFFFFFB1D000
	0x01E75F10 ADD X8, X8, 0xD60
	0x01E75F14 B 0x1E75F3C
	0x01E75F18 TBZ X0, 0x0, 0x1E75F34

ISIL:
	001 Move W8, 1
	002 Move W9, 16
	003 Move X1, X31
	004 Move [X0+116], W8
	005 Move [X0+48], W9
	006 Call Behaviour..ctor, X0
	007 Return 

