Type: Fusion.PlayerRef

Method: System.Collections.Generic.IEqualityComparer`1<Fusion.PlayerRef> get_Comparer()

Disassembly:
	0x01E8E794 LDUR X11, [X10 - 0x8]
	0x01E8E798 CMP X11, X1
	0x01E8E79C B.EQ 0x1E8E7BC
	0x01E8E7A0 SUBS X9, X9, 0x1
	0x01E8E7A4 ADD X10, X10, 0x10
	0x01E8E7A8 B.NE 0x1E8E794
	0x01E8E7AC MOV X0, X19
	0x01E8E7B0 MOV W2, W31
	0x01E8E7B4 BL 0x1C5C788
	0x01E8E7B8 B 0x1E8E7C8
	0x01E8E7BC LDRSW X9, [X10]
	0x01E8E7C0 ADD X8, X8, X9, 0x4, LSL
	0x01E8E7C4 ADD X0, X8, 0x138
	0x01E8E7C8 LDP X8, X1, [X0]
	0x01E8E7CC MOV X0, X19
	0x01E8E7D0 BLR X8
	0x01E8E7D4 MOV X19, X0
	0x01E8E7D8 LDR X0, [X24]
	0x01E8E7DC LDR X20, [X23]
	0x01E8E7E0 LDR W8, [X0 + 0xE0]
	0x01E8E7E4 CBNZ W8, 0x1E8E7EC
	0x01E8E7E8 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x254C000
	005 Move X19, 0x2269000
	006 Move W8, [X20+583]
	007 Move X19, [X19+3648]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2269000
	013 Move X0, [X0+3648]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+583], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: Fusion.PlayerRef get_None()

Disassembly:
	0x01E8E7EC MOV X0, X20
	0x01E8E7F0 MOV X1, X31

ISIL:
	001 Move X0, X31
	002 Return X0

Method: Fusion.PlayerRef get_MasterClient()

Disassembly:
	0x01E8E7F4 BL 0x338C698
	0x01E8E7F8 CBZ X0, 0x1E8E84C

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W0, TEMP
	004 Return X0

Method: System.Boolean get_IsRealPlayer()

Disassembly:
	0x01E8E7FC LDR X8, [X0]
	0x01E8E800 LDR X9, [X8 + 0x2A8]
	0x01E8E804 LDR X2, [X8 + 0x2B0]
	0x01E8E808 MOV X1, X19

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_IsNone()

Disassembly:
	0x01E8E80C BLR X9
	0x01E8E810 LDR X8, [X31 + 0x18]
	0x01E8E814 TBNZ X0, 0x0, 0x1E8E838
	0x01E8E818 LDR X19, [X8 + 0x28]

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_IsMasterClient()

Disassembly:
	0x01E8E81C CBNZ X19, 0x1E8E710
	0x01E8E820 BL 0x1C16F20
	0x01E8E824 BL 0x1E8E8F8
	0x01E8E828 LDR X8, [X31 + 0x18]

ISIL:
	001 Move W8, [X0]
	002 Add W31, W8, 1
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Int32 get_RawEncoded()

Disassembly:
	0x01E8E82C MOV W0, W31
	0x01E8E830 STR X31, [X8 + 0x28]

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.Int32 get_AsIndex()

Disassembly:
	0x01E8E834 B 0x1E8E89C
	0x01E8E838 MOVZ W0, 0x1
	0x01E8E83C STR X19, [X8 + 0x18]

ISIL:
	001 Move W8, [X0]
	002 Subtract W0, W8, 1
	003 Return X0

Method: System.Int32 get_PlayerId()

Disassembly:
	0x01E8E840 STR W0, [X8 + 0x10]
	0x01E8E844 B 0x1E8E89C
	0x01E8E848 BL 0x1C16F20

ISIL:
	001 Move W8, [X0]
	002 Subtract W0, W8, 1
	003 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x01E8E84C BL 0x1C16F20
	0x01E8E850 BL 0x1C16F20
	0x01E8E854 B 0x1E8E87C
	0x01E8E858 B 0x1E8E87C
	0x01E8E85C B 0x1E8E87C
	0x01E8E860 B 0x1E8E87C
	0x01E8E864 B 0x1E8E87C
	0x01E8E868 B 0x1E8E87C
	0x01E8E86C B 0x1E8E87C
	0x01E8E870 B 0x1E8E87C
	0x01E8E874 B 0x1E8E87C
	0x01E8E878 B 0x1E8E87C
	0x01E8E87C CMP W1, 0x1
	0x01E8E880 B.NE 0x1E8E8CC
	0x01E8E884 BL 0x3EB1AD0
	0x01E8E888 LDR X19, [X0]
	0x01E8E88C STR X19, [X31]
	0x01E8E890 BL 0x3EB1AE0
	0x01E8E894 CBNZ X19, 0x1E8E8B4
	0x01E8E898 MOV W0, W31
	0x01E8E89C LDP X20, X19, [X31 + 0x40]
	0x01E8E8A0 LDP X22, X21, [X31 + 0x30]
	0x01E8E8A4 LDP X24, X23, [X31 + 0x20]
	0x01E8E8A8 LDR X30, [X31 + 0x10]
	0x01E8E8AC ADD X31, X31, 0x50
	0x01E8E8B0 RET
	0x01E8E8B4 ADD X8, X31, 0x0
	0x01E8E8B8 ADD X0, X8, 0x8
	0x01E8E8BC BL 0x1996454
	0x01E8E8C0 MOV X0, X19
	0x01E8E8C4 BL 0x1C16F18
	0x01E8E8C8 CBNZ X19, 0x1E8E8D0
	0x01E8E8CC BL 0x1D2C690
	0x01E8E8D0 LDR X0, [X31 + 0x18]
	0x01E8E8D4 LDR W8, [X0 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x254C000
	006 Move W8, [X21+584]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2269000
	014 Move X0, [X0+3648]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+584], W8
	018 Compare X20, 0
	019 JumpIfEqual {25}
	020 Move X21, 0x2269000
	021 Move X21, [X21+3648]
	022 Move X9, [X20]
	023 Move X8, [X21]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 Move X0, X20
	027 Call 0x1C17E08
	028 Move X8, X0
	029 Move X0, [X21]
	030 Move W20, [X8]
	031 Move W9, [X0+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move W8, [X19]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CSET not yet implemented."
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x01E8E8E8 BL 0x1E8E8F8
	0x01E8E8EC MOV X0, X19

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.String ToString()

Disassembly:
	0x01E8E8F0 BL 0x1C16F18
	0x01E8E8F4 BL 0x1990590
	0x01E8E8F8 STR X30, [X31 - 0x20]!
	0x01E8E8FC STP X20, X19, [X31 + 0x10]
	0x01E8E900 ADRP X19, 0x254B000
	0x01E8E904 LDRB W8, [X19 + 0x259]
	0x01E8E908 MOV X20, X0
	0x01E8E90C TBNZ X8, 0x0, 0x1E8E924
	0x01E8E910 ADRP X0, 0x2265000
	0x01E8E914 LDR X0, [X0 + 0xE00]
	0x01E8E918 BL 0x1C16CF4
	0x01E8E91C MOVZ W8, 0x1
	0x01E8E920 STRB W8, [X19 + 0x259]
	0x01E8E924 LDR X19, [X20 + 0x28]
	0x01E8E928 MOVN W8, 0x0
	0x01E8E92C STR W8, [X20 + 0x10]
	0x01E8E930 CBZ X19, 0x1E8E97C
	0x01E8E934 ADRP X10, 0x2265000
	0x01E8E938 LDR X8, [X19]
	0x01E8E93C LDR X10, [X10 + 0xE00]
	0x01E8E940 LDRH W9, [X8 + 0x12E]
	0x01E8E944 LDR X1, [X10]
	0x01E8E948 CBZ X9, 0x1E8E96C
	0x01E8E94C LDR X10, [X8 + 0xB0]
	0x01E8E950 ADD X10, X10, 0x8
	0x01E8E954 LDUR X11, [X10 - 0x8]
	0x01E8E958 CMP X11, X1
	0x01E8E95C B.EQ 0x1E8E988
	0x01E8E960 SUBS X9, X9, 0x1
	0x01E8E964 ADD X10, X10, 0x10
	0x01E8E968 B.NE 0x1E8E954
	0x01E8E96C MOV X0, X19
	0x01E8E970 MOV W2, W31
	0x01E8E974 BL 0x1C5C788
	0x01E8E978 B 0x1E8E994
	0x01E8E97C LDP X20, X19, [X31 + 0x10]
	0x01E8E980 LDR X30, [X31], #0x20
	0x01E8E984 RET
	0x01E8E988 LDRSW X9, [X10]
	0x01E8E98C ADD X8, X8, X9, 0x4, LSL
	0x01E8E990 ADD X0, X8, 0x138
	0x01E8E994 LDP X2, X1, [X0]
	0x01E8E998 MOV X0, X19
	0x01E8E99C LDP X20, X19, [X31 + 0x10]
	0x01E8E9A0 LDR X30, [X31], #0x20
	0x01E8E9A4 BR X2
	0x01E8E9A8 LDR X0, [X0 + 0x18]
	0x01E8E9AC RET
	0x01E8E9B0 STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x254C000
	005 Move W8, [X20+585]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {25}
	011 Move X0, 0x2266000
	012 Move X0, [X0+1880]
	013 Call 0x1C17CF4
	014 Move X0, 0x2271000
	015 Move X0, [X0+56]
	016 Call 0x1C17CF4
	017 Move X0, 0x2271000
	018 Move X0, [X0+64]
	019 Call 0x1C17CF4
	020 Move X0, 0x2271000
	021 Move X0, [X0+72]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+585], W8
	025 Move W8, [X19]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, 0x2266000
	028 Move X9, [X9+1880]
	029 Move X19, 0x2271000
	030 Subtract W8, W8, 1
	031 Add X1, X31, 12
	032 Move X0, [X9]
	033 Move X19, [X19+72]
	034 Move [X31+12], W8
	035 Call 0x1C17E04
	036 Move X8, [X19]
	037 Move X1, X0
	038 Move X2, X31
	039 Move X0, X8
	040 Call String.Format, X0, X1
	041 Add W31, W8, 1
	042 Move X8, 0x2271000
	043 Move X8, [X8+56]
	044 Move X8, 0x2271000
	045 Move X8, [X8+64]
	046 Move X0, [X8]
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Return X0

Method: Fusion.PlayerRef FromEncoded(System.Int32 encoded)

Disassembly:
	0x01E8E9B4 ADRP X0, 0x2265000
	0x01E8E9B8 LDR X0, [X0 + 0xB40]

ISIL:
	001 Move W0, W0
	002 Return X0

Method: Fusion.PlayerRef FromIndex(System.Int32 index)

Disassembly:
	0x01E8E9BC BL 0x1C16D08
	0x01E8E9C0 BL 0x1C16F10

ISIL:
	001 Add W0, W0, 1
	002 Return X0

Method: System.Boolean op_Equality(Fusion.PlayerRef a, Fusion.PlayerRef b)

Disassembly:
	0x01E8E9C4 MOV X1, X31
	0x01E8E9C8 MOV X19, X0
	0x01E8E9CC BL 0x3380310

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Boolean op_Inequality(Fusion.PlayerRef a, Fusion.PlayerRef b)

Disassembly:
	0x01E8E9D0 ADRP X0, 0x2270000
	0x01E8E9D4 LDR X0, [X0 + 0xB0]
	0x01E8E9D8 BL 0x1C16D08

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Void Write(Fusion.Sockets.NetBitBuffer* buffer, Fusion.PlayerRef playerRef)

Disassembly:
	0x01E8E9DC MOV X1, X0
	0x01E8E9E0 MOV X0, X19
	0x01E8E9E4 BL 0x1C16DEC
	0x01E8E9E8 LDR X0, [X0 + 0x18]
	0x01E8E9EC RET
	0x01E8E9F0 STR X30, [X31 - 0x20]!
	0x01E8E9F4 STP X20, X19, [X31 + 0x10]
	0x01E8E9F8 ADRP X20, 0x254B000
	0x01E8E9FC LDRB W8, [X20 + 0x25A]
	0x01E8EA00 MOV X19, X0
	0x01E8EA04 TBNZ X8, 0x0, 0x1E8EA1C
	0x01E8EA08 ADRP X0, 0x2270000
	0x01E8EA0C LDR X0, [X0 + 0x98]
	0x01E8EA10 BL 0x1C16CF4
	0x01E8EA14 MOVZ W8, 0x1
	0x01E8EA18 STRB W8, [X20 + 0x25A]
	0x01E8EA1C LDR W8, [X19 + 0x10]
	0x01E8EA20 ADDS W31, W8, 0x2
	0x01E8EA24 B.NE 0x1E8EA44
	0x01E8EA28 LDR W20, [X19 + 0x20]
	0x01E8EA2C MOV X0, X31
	0x01E8EA30 BL 0x33C151C
	0x01E8EA34 CMP W20, W0
	0x01E8EA38 B.NE 0x1E8EA44
	0x01E8EA3C STR W31, [X19 + 0x10]
	0x01E8EA40 B 0x1E8EA70
	0x01E8EA44 ADRP X8, 0x2270000
	0x01E8EA48 LDR X8, [X8 + 0x98]
	0x01E8EA4C LDR X0, [X8]
	0x01E8EA50 BL 0x1C16F10
	0x01E8EA54 MOV X1, X31
	0x01E8EA58 MOV X19, X0
	0x01E8EA5C BL 0x33BDD8C
	0x01E8EA60 MOV X0, X31
	0x01E8EA64 STR W31, [X19 + 0x10]
	0x01E8EA68 BL 0x33C151C
	0x01E8EA6C STR W0, [X19 + 0x20]
	0x01E8EA70 MOV X0, X19
	0x01E8EA74 LDP X20, X19, [X31 + 0x10]
	0x01E8EA78 LDR X30, [X31], #0x20
	0x01E8EA7C RET
	0x01E8EA80 B 0x1E8E9F0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x254C000
	007 Move X21, 0x2269000
	008 Move W8, [X22+586]
	009 Move X21, [X21+3648]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2269000
	017 Move X0, [X0+3648]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+586], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CSET not yet implemented."
	028 Move W2, 1
	029 Move X0, X19
	030 Move X3, X31
	031 Call NetBitBuffer.Write, X0, X1, X2
	032 Subtract W20, W20, 1
	033 Move X0, [X21]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X19
	039 Move W1, W20
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X2, X31
	045 Move X30, [X31+48]
	046 Call NetBitBuffer.WriteInt32VarLength, X0, X1
	047 Return 
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Return 

Method: System.Void Write(T* buffer, Fusion.PlayerRef playerRef)

Disassembly:
	0x022327A8 BL 0x3227BD4
	0x022327AC ADRP X8, 0x1EC1000
	0x022327B0 LDR X8, [X8 + 0xA28]
	0x022327B4 MOV X23, X0
	0x022327B8 LDR X8, [X8]
	0x022327BC LDR W9, [X8 + 0xE0]
	0x022327C0 CBNZ W9, 0x22327CC
	0x022327C4 MOV X0, X8
	0x022327C8 BL 0x1C16DFC
	0x022327CC MOV X0, X23
	0x022327D0 MOV X1, X31
	0x022327D4 BL 0x3C06A04
	0x022327D8 LDR X8, [X22 + 0x38]
	0x022327DC MOV X0, X21
	0x022327E0 MOV X2, X20
	0x022327E4 LDR X8, [X8 + 0x8]
	0x022327E8 LDR W8, [X8 + 0x28]
	0x022327EC CMP W8, 0x0
	0x022327F0 SUB X8, X29, 0x10
	0x022327F4 CSEL X1, X24, X8, LT
	0x022327F8 BL 0x3EB1AC0
	0x022327FC MOV X0, X27
	0x02232800 MOV X1, X21
	0x02232804 MOV X2, X20
	0x02232808 BL 0x3EB1AC0
	0x0223280C LDR X8, [X28 + 0x28]
	0x02232810 LDUR X9, [X29 - 0x8]
	0x02232814 CMP X8, X9
	0x02232818 B.NE 0x2232840
	0x0223281C ADD X31, X29, 0x0
	0x02232820 LDP X20, X19, [X31 + 0x50]
	0x02232824 LDP X22, X21, [X31 + 0x40]
	0x02232828 LDP X24, X23, [X31 + 0x30]
	0x0223282C LDP X26, X25, [X31 + 0x20]
	0x02232830 LDP X28, X27, [X31 + 0x10]
	0x02232834 LDP X29, X30, [X31], #0x60
	0x02232838 RET
	0x0223283C BL 0x1C16F20
	0x02232840 BL 0x3EB1B20
	0x02232844 STR X30, [X31 - 0x40]!
	0x02232848 STP X24, X23, [X31 + 0x10]
	0x0223284C STP X22, X21, [X31 + 0x20]
	0x02232850 STP X20, X19, [X31 + 0x30]
	0x02232854 LDR X8, [X2 + 0x38]
	0x02232858 MOV X20, X2
	0x0223285C MOV X19, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X1
	007 Move [X31+8], W21
	008 Move X8, [X2+56]
	009 Move X19, X2
	010 Move X20, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {21}
	013 Move X0, 0x1EC5000
	014 Move X0, [X0+3648]
	015 Call 0x1C17CF4
	016 Move X8, [X19+56]
	017 Compare X8, 0
	018 JumpIfNotEqual {21}
	019 Move X0, X19
	020 Call 0x1C5D6E0
	021 Move X22, 0x1EC5000
	022 Move X22, [X22+3648]
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSET not yet implemented."
	030 Move W2, 1
	031 Move X0, X20
	032 Move X3, X31
	033 Call NetBitBuffer.Write, X0, X1, X2
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X0, [X22]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Add X0, X31, 8
	041 Move X1, X31
	042 Call PlayerRef.get_AsIndex, X0
	043 Move X8, [X19+56]
	044 Move W1, W0
	045 Move X0, X20
	046 Move X2, [X8+24]
	047 Call NetBitBuffer.WriteInt32VarLength, X0, X1
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Return 

Method: Fusion.PlayerRef Read(Fusion.Sockets.NetBitBuffer* buffer)

Disassembly:
	0x01E8EA84 RET
	0x01E8EA88 STP X30, X21, [X31 - 0x20]!
	0x01E8EA8C STP X20, X19, [X31 + 0x10]
	0x01E8EA90 ADRP X20, 0x254B000
	0x01E8EA94 LDRB W8, [X20 + 0x25B]
	0x01E8EA98 MOV X19, X0
	0x01E8EA9C TBNZ X8, 0x0, 0x1E8EAC0
	0x01E8EAA0 ADRP X0, 0x226F000
	0x01E8EAA4 LDR X0, [X0 + 0x948]
	0x01E8EAA8 BL 0x1C16CF4
	0x01E8EAAC ADRP X0, 0x2265000
	0x01E8EAB0 LDR X0, [X0 + 0x6C0]
	0x01E8EAB4 BL 0x1C16CF4
	0x01E8EAB8 MOVZ W8, 0x1
	0x01E8EABC STRB W8, [X20 + 0x25B]
	0x01E8EAC0 LDR W8, [X19 + 0x10]
	0x01E8EAC4 CMP W8, 0x1
	0x01E8EAC8 B.EQ 0x1E8EB00
	0x01E8EACC CBNZ W8, 0x1E8EB0C
	0x01E8EAD0 MOVN W8, 0x0
	0x01E8EAD4 MOV X0, X31
	0x01E8EAD8 STR W8, [X19 + 0x10]
	0x01E8EADC BL 0x33C0128
	0x01E8EAE0 CBZ X0, 0x1E8EC0C
	0x01E8EAE4 MOV X1, X31
	0x01E8EAE8 BL 0x33C0134
	0x01E8EAEC MOV W8, W31
	0x01E8EAF0 STR X0, [X19 + 0x28]
	0x01E8EAF4 STR W31, [X19 + 0x30]
	0x01E8EAF8 CBNZ X0, 0x1E8EBDC
	0x01E8EAFC B 0x1E8EC0C
	0x01E8EB00 MOVN W8, 0x0
	0x01E8EB04 STR W8, [X19 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x254C000
	005 Move W8, [X20+587]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2269000
	012 Move X0, [X0+3648]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+587], W8
	016 Move W1, 1
	017 Move X0, X19
	018 Move X2, X31
	019 Call NetBitBuffer.Read, X0, X1
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X0, X31
	022 Move X20, 0x2269000
	023 Move X20, [X20+3648]
	024 Move X0, X19
	025 Move X1, X31
	026 Call NetBitBuffer.ReadInt32VarLength, X0
	027 Move X8, [X20]
	028 Move W19, W0
	029 Move W9, [X8+224]
	030 Compare W9, 0
	031 JumpIfNotEqual {34}
	032 Move X0, X8
	033 Call 0x1C17DFC
	034 Add W0, W19, 1
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Return X0

Method: System.Boolean Equals(Fusion.PlayerRef other)

Disassembly:
	0x01E8E8D8 CMP W8, 0x1
	0x01E8E8DC B.EQ 0x1E8E8E8
	0x01E8E8E0 ADDS W31, W8, 0x3
	0x01E8E8E4 B.NE 0x1E8E8EC

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Void .cctor()

Disassembly:
	0x01E8EB08 B 0x1E8EBA4
	0x01E8EB0C MOV W0, W31
	0x01E8EB10 B 0x1E8EC00
	0x01E8EB14 B.CS 0x1E8EC10
	0x01E8EB18 ADD X8, X0, W8, 0x3, SXTW
	0x01E8EB1C LDR X0, [X8 + 0x20]
	0x01E8EB20 CBZ X0, 0x1E8EC0C
	0x01E8EB24 LDR X8, [X0]
	0x01E8EB28 LDR X9, [X8 + 0x228]
	0x01E8EB2C LDR X1, [X8 + 0x230]
	0x01E8EB30 BLR X9
	0x01E8EB34 MOV W9, W31
	0x01E8EB38 STR X0, [X19 + 0x38]
	0x01E8EB3C STR W31, [X19 + 0x40]
	0x01E8EB40 CBNZ X0, 0x1E8EBB8
	0x01E8EB44 B 0x1E8EC0C
	0x01E8EB48 B.CS 0x1E8EC10
	0x01E8EB4C ADRP X8, 0x2265000
	0x01E8EB50 LDR X8, [X8 + 0x6C0]
	0x01E8EB54 ADRP X10, 0x226F000
	0x01E8EB58 ADD X9, X0, W9, 0x3, SXTW
	0x01E8EB5C LDR X8, [X8]
	0x01E8EB60 LDR X10, [X10 + 0x948]
	0x01E8EB64 LDR X20, [X9 + 0x20]
	0x01E8EB68 LDR W9, [X8 + 0xE0]
	0x01E8EB6C LDR X21, [X10]
	0x01E8EB70 CBNZ W9, 0x1E8EB7C
	0x01E8EB74 MOV X0, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x254C000
	006 Move X21, 0x2271000
	007 Move X20, 0x2269000
	008 Move W8, [X19+588]
	009 Move X21, [X21+80]
	010 Move X20, [X20+3648]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x2271000
	016 Move X0, [X0+80]
	017 Call 0x1C17CF4
	018 Move X0, 0x2269000
	019 Move X0, [X0+3648]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+588], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X19, X0
	027 Call Object..ctor, X0
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move [X8], X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

