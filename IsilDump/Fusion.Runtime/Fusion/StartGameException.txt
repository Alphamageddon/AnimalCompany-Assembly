Type: Fusion.StartGameException

Method: Fusion.ShutdownReason get_ShutdownReason()

Disassembly:
	0x01EBBCCC MOV X2, X31
	0x01EBBCD0 LDR X30, [X31], #0x30

ISIL:
	001 Move W0, [X0+140]
	002 Return X0

Method: System.Void set_ShutdownReason(Fusion.ShutdownReason value)

Disassembly:
	0x01EBBCD4 B 0x3C3169C
	0x01EBBCD8 ADRP X8, 0x2244000

ISIL:
	001 Move [X0+140], W1
	002 Return 

Method: System.Void .ctor(Fusion.ShutdownReason shutdownReason = 1, System.String customMsg = null)

Disassembly:
	0x01EB4CE4 ADD X0, X19, 0x150
	0x01EB4CE8 MOV X1, X31
	0x01EB4CEC BL 0x33DDC30
	0x01EB4CF0 LDR X0, [X19 + 0x108]
	0x01EB4CF4 CBZ X0, 0x1EB4D24
	0x01EB4CF8 ADRP X8, 0x2247000
	0x01EB4CFC LDR X8, [X8 + 0xD68]
	0x01EB4D00 LDR X1, [X8]
	0x01EB4D04 BL 0x2AA4E88
	0x01EB4D08 CMP W0, 0xB
	0x01EB4D0C B.GE 0x1EB5560
	0x01EB4D10 LDR X0, [X19 + 0x108]
	0x01EB4D14 MOV X1, X31
	0x01EB4D18 BL 0x1E627C4
	0x01EB4D1C CMP W0, 0x1F5
	0x01EB4D20 B.GE 0x1EB55A8
	0x01EB4D24 LDR W8, [X19 + 0x28]
	0x01EB4D28 CMP W8, 0x2
	0x01EB4D2C B.NE 0x1EB4DE4
	0x01EB4D30 LDR X8, [X19 + 0xA0]
	0x01EB4D34 CBZ X8, 0x1EB5618
	0x01EB4D38 LDR X8, [X8 + 0x40]
	0x01EB4D3C CBZ X8, 0x1EB561C
	0x01EB4D40 ADRP X23, 0x224A000
	0x01EB4D44 LDUR V0, [X8 + 0x28]
	0x01EB4D48 LDR X23, [X23 + 0x168]
	0x01EB4D4C STR V0, [X28 + 0x11]
	0x01EB4D50 LDR X0, [X23]
	0x01EB4D54 LDR W8, [X0 + 0xE0]
	0x01EB4D58 CBNZ W8, 0x1EB4D60
	0x01EB4D5C BL 0x1C16DFC
	0x01EB4D60 MOV X0, X31
	0x01EB4D64 BL 0x1E90AC8
	0x01EB4D68 ADRP X24, 0x224B000
	0x01EB4D6C LDR V0, [X28 + 0x11]
	0x01EB4D70 LDR X24, [X24 + 0x218]
	0x01EB4D74 MOV X21, X0
	0x01EB4D78 MOV X22, X1
	0x01EB4D7C STR V0, [X28 + 0x12]
	0x01EB4D80 LDR X0, [X24]
	0x01EB4D84 ADD X1, X31, 0x4B0
	0x01EB4D88 BL 0x1C16E04
	0x01EB4D8C MOV X1, X0
	0x01EB4D90 LDR X8, [X24]
	0x01EB4D94 MOVN X9, 0x0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X22, 0x2526000
	008 Move W8, [X22+1053]
	009 Move X21, X2
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x2240000
	017 Move X0, [X0+2000]
	018 Call 0x1C17CF4
	019 Move X0, 0x2244000
	020 Move X0, [X0+3768]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1053], W8
	024 Move X22, 0x2240000
	025 Move X22, [X22+2000]
	026 Compare X21, 0
	027 JumpIfNotEqual {41}
	028 Move X8, 0x2244000
	029 Move X8, [X8+3768]
	030 Move TEMP, 0
	031 Not TEMP
	032 Move X9, TEMP
	033 Add X0, X31, 8
	034 Move X1, X31
	035 Move X8, [X8]
	036 Move [X31+24], W19
	037 Move [X31+8], X8
	038 Move [X31+16], X9
	039 Call Enum.ToString, X0
	040 Move X21, X0
	041 Move X0, [X22]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X20
	047 Move X1, X21
	048 Move X2, X31
	049 Call Exception..ctor, X0, X1
	050 Move [X20+140], W19
	051 Move X20, [X31+64]
	052 Move X19, [X31+72]
	053 Move X22, [X31+48]
	054 Move X21, [X31+56]
	055 Move X30, [X31+32]
	056 Add X31, X31, 80
	057 Return 

Method: System.String ToString()

Disassembly:
	0x01EBBCDC LDR X8, [X8 + 0x710]
	0x01EBBCE0 LDR X0, [X8]
	0x01EBBCE4 BL 0x1C16F10
	0x01EBBCE8 ADRP X8, 0x2244000
	0x01EBBCEC LDR X8, [X8 + 0x730]
	0x01EBBCF0 MOV X1, X19
	0x01EBBCF4 MOV X3, X31
	0x01EBBCF8 MOV X21, X0
	0x01EBBCFC LDR X2, [X8]
	0x01EBBD00 BL 0x2A6B948
	0x01EBBD04 MOV X0, X20
	0x01EBBD08 MOV X1, X21
	0x01EBBD0C LDP X20, X19, [X31 + 0x20]
	0x01EBBD10 LDP X22, X21, [X31 + 0x10]
	0x01EBBD14 MOV X2, X31
	0x01EBBD18 LDR X30, [X31], #0x30
	0x01EBBD1C B 0x33F3F94
	0x01EBBD20 BL 0x1C16F20
	0x01EBBD24 MOV X1, X31
	0x01EBBD28 B 0x33BDD8C
	0x01EBBD2C LDP X8, X1, [X0]
	0x01EBBD30 MOV X0, X8
	0x01EBBD34 RET
	0x01EBBD38 LDR V0, [X1]
	0x01EBBD3C STR V0, [X0]
	0x01EBBD40 RET
	0x01EBBD44 STR X30, [X31 - 0x10]!
	0x01EBBD48 BL 0x1EBB250
	0x01EBBD4C ORN W8, W31, W0, 0x0
	0x01EBBD50 AND W0, W8, 0x1
	0x01EBBD54 LDR X30, [X31], #0x10
	0x01EBBD58 RET
	0x01EBBD5C RET
	0x01EBBD60 MOV X0, X31
	0x01EBBD64 RET
	0x01EBBD68 B 0x1EBB250
	0x01EBBD6C STR X30, [X31 - 0x20]!
	0x01EBBD70 STP X20, X19, [X31 + 0x10]
	0x01EBBD74 ADRP X20, 0x251E000
	0x01EBBD78 LDRB W8, [X20 + 0x428]
	0x01EBBD7C MOV X19, X0
	0x01EBBD80 TBNZ X8, 0x0, 0x1EBBD98
	0x01EBBD84 ADRP X0, 0x2244000
	0x01EBBD88 LDR X0, [X0 + 0x470]
	0x01EBBD8C BL 0x1C16CF4
	0x01EBBD90 MOVZ W8, 0x1
	0x01EBBD94 STRB W8, [X20 + 0x428]
	0x01EBBD98 MOV X0, X19
	0x01EBBD9C STR W31, [X31 + 0x8]
	0x01EBBDA0 BL 0x1EBB250
	0x01EBBDA4 TBNZ X0, 0x0, 0x1EBBDE8
	0x01EBBDA8 MOV X0, X19
	0x01EBBDAC STR W31, [X31 + 0x8]
	0x01EBBDB0 BL 0x1EBB250
	0x01EBBDB4 TBNZ X0, 0x0, 0x1EBBDE8
	0x01EBBDB8 ADRP X20, 0x2244000
	0x01EBBDBC LDR X20, [X20 + 0x470]
	0x01EBBDC0 LDR X0, [X20]
	0x01EBBDC4 LDR W8, [X0 + 0xE0]
	0x01EBBDC8 CBNZ W8, 0x1EBBDD0
	0x01EBBDCC BL 0x1C16DFC
	0x01EBBDD0 ADD X0, X31, 0x8
	0x01EBBDD4 MOV X1, X31
	0x01EBBDD8 BL 0x33DF18C
	0x01EBBDDC MOV X0, X19
	0x01EBBDE0 BL 0x1EBB250
	0x01EBBDE4 TBZ X0, 0x0, 0x1EBBDC0
	0x01EBBDE8 MOV X0, X19
	0x01EBBDEC BL 0x1EBB574
	0x01EBBDF0 LDP X20, X19, [X31 + 0x10]
	0x01EBBDF4 LDR X30, [X31], #0x20
	0x01EBBDF8 RET
	0x01EBBDFC STR X30, [X31 - 0x30]!
	0x01EBBE00 STP X22, X21, [X31 + 0x10]
	0x01EBBE04 STP X20, X19, [X31 + 0x20]
	0x01EBBE08 ADRP X21, 0x251E000
	0x01EBBE0C ADRP X22, 0x2244000
	0x01EBBE10 LDRB W8, [X21 + 0x429]
	0x01EBBE14 LDR X22, [X22 + 0x738]
	0x01EBBE18 MOV X20, X1
	0x01EBBE1C MOV X19, X0
	0x01EBBE20 TBNZ X8, 0x0, 0x1EBBE5C
	0x01EBBE24 ADRP X0, 0x2243000
	0x01EBBE28 LDR X0, [X0 + 0xDA0]
	0x01EBBE2C BL 0x1C16CF4
	0x01EBBE30 ADRP X0, 0x2244000
	0x01EBBE34 LDR X0, [X0 + 0x738]
	0x01EBBE38 BL 0x1C16CF4
	0x01EBBE3C ADRP X0, 0x2244000
	0x01EBBE40 LDR X0, [X0 + 0x740]
	0x01EBBE44 BL 0x1C16CF4
	0x01EBBE48 ADRP X0, 0x2244000
	0x01EBBE4C LDR X0, [X0 + 0x748]
	0x01EBBE50 BL 0x1C16CF4
	0x01EBBE54 MOVZ W8, 0x1
	0x01EBBE58 STRB W8, [X21 + 0x429]
	0x01EBBE5C LDR X0, [X22]
	0x01EBBE60 BL 0x1C16F10
	0x01EBBE64 MOV X1, X31
	0x01EBBE68 MOV X21, X0
	0x01EBBE6C BL 0x33BDD8C
	0x01EBBE70 CBZ X21, 0x1EBBF1C
	0x01EBBE74 MOV X0, X19
	0x01EBBE78 STR X20, [X21 + 0x10]
	0x01EBBE7C BL 0x1EBB250
	0x01EBBE80 TBZ X0, 0x0, 0x1EBBEA8
	0x01EBBE84 LDR X8, [X21 + 0x10]
	0x01EBBE88 CBZ X8, 0x1EBBF1C
	0x01EBBE8C LDR X2, [X8 + 0x18]
	0x01EBBE90 LDR X0, [X8 + 0x40]
	0x01EBBE94 LDR X1, [X8 + 0x28]
	0x01EBBE98 LDP X20, X19, [X31 + 0x20]
	0x01EBBE9C LDP X22, X21, [X31 + 0x10]
	0x01EBBEA0 LDR X30, [X31], #0x30
	0x01EBBEA4 BR X2
	0x01EBBEA8 ADRP X8, 0x2244000
	0x01EBBEAC LDR X8, [X8 + 0x748]
	0x01EBBEB0 LDR X0, [X8]
	0x01EBBEB4 BL 0x1C16F10
	0x01EBBEB8 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x251F000
	007 Move X21, 0x2239000
	008 Move W8, [X20+1054]
	009 Move X21, [X21+2512]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0x2239000
	016 Move X0, [X0+2512]
	017 Call 0x1C17CF4
	018 Move X0, 0x223D000
	019 Move X0, [X0+3768]
	020 Call 0x1C17CF4
	021 Move X0, 0x2245000
	022 Move X0, [X0+1608]
	023 Call 0x1C17CF4
	024 Move X0, 0x2245000
	025 Move X0, [X0+1616]
	026 Call 0x1C17CF4
	027 Move X0, 0x2245000
	028 Move X0, [X0+1624]
	029 Call 0x1C17CF4
	030 Move X0, 0x2245000
	031 Move X0, [X0+1632]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+1054], W8
	035 Move X0, [X21]
	036 Move W1, 5
	037 Call 0x1C17D6C
	038 Compare X0, 0
	039 JumpIfEqual {136}
	040 Move X21, 0x2245000
	041 Move X21, [X21+1624]
	042 Move X20, X0
	043 Move X0, [X21]
	044 Compare X0, 0
	045 JumpIfEqual {51}
	046 Move X8, [X20]
	047 Move X1, [X8+64]
	048 Call 0x1C17E00
	049 Compare X0, 0
	050 JumpIfEqual {133}
	051 Move W8, [X20+24]
	052 Compare W8, 0
	053 JumpIfEqual {132}
	054 Move X9, [X21]
	055 Move X21, 0x2245000
	056 Move X21, [X21+1608]
	057 Move [X20+32], X9
	058 Move X0, [X21]
	059 Compare X0, 0
	060 JumpIfEqual {67}
	061 Move X8, [X20]
	062 Move X1, [X8+64]
	063 Call 0x1C17E00
	064 Compare X0, 0
	065 JumpIfEqual {133}
	066 Move W8, [X20+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X8, [X21]
	069 Move X9, 0x223D000
	070 Move X9, [X9+3768]
	071 Add X1, X31, 12
	072 Move [X20+40], X8
	073 Move W8, [X19+140]
	074 Move X0, [X9]
	075 Move [X31+12], W8
	076 Call 0x1C17E04
	077 Move X21, X0
	078 Compare X0, 0
	079 JumpIfEqual {86}
	080 Move X8, [X20]
	081 Move X0, X21
	082 Move X1, [X8+64]
	083 Call 0x1C17E00
	084 Compare X0, 0
	085 JumpIfEqual {133}
	086 Move W8, [X20+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X22, 0x2245000
	089 Move X22, [X22+1616]
	090 Move [X20+48], X21
	091 Move X0, [X22]
	092 Compare X0, 0
	093 JumpIfEqual {100}
	094 Move X8, [X20]
	095 Move X1, [X8+64]
	096 Call 0x1C17E00
	097 Compare X0, 0
	098 JumpIfEqual {133}
	099 Move W8, [X20+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X8, [X22]
	102 Move X0, X19
	103 Move [X20+56], X8
	104 Move X8, [X19]
	105 Move X9, [X8+392]
	106 Move X1, [X8+400]
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move X19, X0
	109 Compare X0, 0
	110 JumpIfEqual {117}
	111 Move X8, [X20]
	112 Move X0, X19
	113 Move X1, [X8+64]
	114 Call 0x1C17E00
	115 Compare X0, 0
	116 JumpIfEqual {133}
	117 Move W8, [X20+24]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X8, 0x2245000
	120 Move X8, [X8+1632]
	121 Move [X20+64], X19
	122 Move X1, X20
	123 Move X2, X31
	124 Move X0, [X8]
	125 Call String.Format, X0, X1
	126 Move X20, [X31+32]
	127 Move X19, [X31+40]
	128 Move X22, [X31+16]
	129 Move X21, [X31+24]
	130 Move X30, [X31+48]
	131 Return X0
	132 Call 0x1C17F28
	133 Call 0x1C17F44
	134 Move X1, X31
	135 Call 0x1C17DEC
	136 Call 0x1C17F20

