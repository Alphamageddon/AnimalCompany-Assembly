Type: Fusion.NetworkPrefabTable/<GetEntries>d__12

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01E9CE74 STR X8, [X19 + 0x38]
	0x01E9CE78 LDP X20, X19, [X31 + 0x10]
	0x01E9CE7C LDP X30, X21, [X31], #0x20
	0x01E9CE80 RET
	0x01E9CE84 ADRP X1, 0xFFFFFFFFFEC7F000
	0x01E9CE88 ADD X1, X1, 0xEE3
	0x01E9CE8C MOV X0, X31
	0x01E9CE90 BL 0x1C16F3C
	0x01E9CE94 MOV X1, X31
	0x01E9CE98 BL 0x1C16DEC
	0x01E9CE9C LDR X8, [X0 + 0x40]
	0x01E9CEA0 LDR X4, [X0 + 0x18]
	0x01E9CEA4 LDR X3, [X0 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+40], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01E9CEA8 MOV X0, X8

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01E9CEAC BR X4
	0x01E9CEB0 SUB X31, X31, 0x30
	0x01E9CEB4 STP X31, X30, [X31 + 0x18]
	0x01E9CEB8 STP X1, X2, [X31 + 0x8]
	0x01E9CEBC ADD X1, X31, 0x8
	0x01E9CEC0 MOV X2, X3
	0x01E9CEC4 MOV X3, X4
	0x01E9CEC8 BL 0x1C16CB0
	0x01E9CECC LDR X30, [X31 + 0x20]
	0x01E9CED0 ADD X31, X31, 0x30
	0x01E9CED4 RET
	0x01E9CED8 MOV X0, X1
	0x01E9CEDC MOV X1, X31
	0x01E9CEE0 B 0x1C16CB4
	0x01E9CEE4 MOV X1, X31
	0x01E9CEE8 B 0x33A51F0
	0x01E9CEEC MOVZ W8, 0xA
	0x01E9CEF0 MOV X1, X31
	0x01E9CEF4 STR W8, [X0 + 0x14]
	0x01E9CEF8 B 0x33BDD8C
	0x01E9CEFC LDR W0, [X0 + 0x10]
	0x01E9CF00 RET
	0x01E9CF04 STR W1, [X0 + 0x10]
	0x01E9CF08 RET
	0x01E9CF0C LDR X0, [X0 + 0x18]
	0x01E9CF10 RET
	0x01E9CF14 STR X1, [X0 + 0x18]
	0x01E9CF18 RET
	0x01E9CF1C LDR X8, [X0 + 0x20]
	0x01E9CF20 CBZ X8, 0x1E9CF2C
	0x01E9CF24 LDR X0, [X8 + 0x38]
	0x01E9CF28 RET
	0x01E9CF2C MOV X0, X31
	0x01E9CF30 RET
	0x01E9CF34 SUB X31, X31, 0x30
	0x01E9CF38 STR X30, [X31 + 0x10]
	0x01E9CF3C STP X20, X19, [X31 + 0x20]
	0x01E9CF40 ADRP X20, 0x253D000
	0x01E9CF44 LDRB W8, [X20 + 0x2FF]
	0x01E9CF48 MOV X19, X0
	0x01E9CF4C TBNZ X8, 0x0, 0x1E9CF88
	0x01E9CF50 ADRP X0, 0x225E000
	0x01E9CF54 LDR X0, [X0 + 0x5F0]
	0x01E9CF58 BL 0x1C16CF4
	0x01E9CF5C ADRP X0, 0x2262000
	0x01E9CF60 LDR X0, [X0 + 0x468]
	0x01E9CF64 BL 0x1C16CF4
	0x01E9CF68 ADRP X0, 0x2258000
	0x01E9CF6C LDR X0, [X0 + 0x470]
	0x01E9CF70 BL 0x1C16CF4
	0x01E9CF74 ADRP X0, 0x225A000
	0x01E9CF78 LDR X0, [X0 + 0xEF8]
	0x01E9CF7C BL 0x1C16CF4
	0x01E9CF80 MOVZ W8, 0x1
	0x01E9CF84 STRB W8, [X20 + 0x2FF]
	0x01E9CF88 LDR X8, [X19 + 0x20]
	0x01E9CF8C CBZ X8, 0x1E9CFE4
	0x01E9CF90 ADRP X9, 0x2258000
	0x01E9CF94 LDR X9, [X9 + 0x470]
	0x01E9CF98 LDR W1, [X8 + 0x28]
	0x01E9CF9C ADD X0, X31, 0x8
	0x01E9CFA0 STR X31, [X31 + 0x8]
	0x01E9CFA4 LDR X2, [X9]
	0x01E9CFA8 BL 0x24341FC
	0x01E9CFAC LDR X8, [X31 + 0x8]
	0x01E9CFB0 ANDS W31, W8, 0xFF
	0x01E9CFB4 B.EQ 0x1E9CFE4
	0x01E9CFB8 ADRP X9, 0x2262000
	0x01E9CFBC LDR X9, [X9 + 0x468]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x253E000
	006 Move W8, [X20+756]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x2263000
	013 Move X0, [X0+1472]
	014 Call 0x1C17CF4
	015 Move X0, 0x2263000
	016 Move X0, [X0+1488]
	017 Call 0x1C17CF4
	018 Move X0, 0x2263000
	019 Move X0, [X0+1608]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+756], W8
	023 Move W8, [X19+16]
	024 Move X20, [X19+48]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Compare W8, 0
	027 JumpIfNotEqual {73}
	028 Move TEMP, 0
	029 Not TEMP
	030 Move W8, TEMP
	031 Move W0, W31
	032 Move [X19+16], W8
	033 Move [X19+56], W31
	034 Move W8, [X19+56]
	035 Move TEMP, 0
	036 Not TEMP
	037 Move W9, TEMP
	038 Move [X19+16], W9
	039 Add W0, W8, 1
	040 Move [X19+56], W0
	041 Compare X20, 0
	042 JumpIfEqual {79}
	043 Move X8, [X20+24]
	044 Compare X8, 0
	045 JumpIfEqual {79}
	046 Move W8, [X8+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X1, X31
	049 Call NetworkPrefabId.FromIndex, X0
	050 Move X8, [X20+24]
	051 Compare X8, 0
	052 JumpIfEqual {79}
	053 Move X9, 0x2263000
	054 Move W1, [X19+56]
	055 Move X9, [X9+1488]
	056 Move X20, X0
	057 Move X0, X8
	058 Move X2, [X9]
	059 Call List`1<Object>.get_Item, X0, X1
	060 Move X8, 0x2263000
	061 Move X8, [X8+1608]
	062 Move X2, X0
	063 And X1, X20, 0
	064 Add X0, X31, 0
	065 Move X3, [X8]
	066 Move [X31], X31
	067 Move [X31+8], X31
	068 Call ValueTuple`2<NetworkPrefabId, Object>..ctor, X0, X1, X2
	069 Move V0, [X31]
	070 Move W0, 1
	071 Move [X19+16], W0
	072 Move [X19+24], V0
	073 Move W0, W31
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X30, [X31+16]
	077 Add X31, X31, 48
	078 Return X0
	079 Call 0x1C17F20

Method: System.ValueTuple`2<Fusion.NetworkPrefabId, Fusion.INetworkPrefabSource> System.Collections.Generic.IEnumerator<System.ValueTuple<Fusion.NetworkPrefabId,Fusion.INetworkPrefabSource>>.get_Current()

Disassembly:
	0x01E9CFC0 UBFM X8, X8, 0x20, 0x3F
	0x01E9CFC4 CMP W8, 0x0
	0x01E9CFC8 CSEL X1, X8, X31, GT

ISIL:
	001 Move X8, [X0+24]
	002 Move X1, [X0+32]
	003 Move X0, X8
	004 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01E9CFCC LDR X2, [X9]
	0x01E9CFD0 ADD X0, X31, 0x18
	0x01E9CFD4 STR X31, [X31 + 0x18]
	0x01E9CFD8 BL 0x243AFBC
	0x01E9CFDC LDR X0, [X31 + 0x18]
	0x01E9CFE0 B 0x1E9CFEC
	0x01E9CFE4 MOV X0, X31
	0x01E9CFE8 STR X31, [X31 + 0x18]
	0x01E9CFEC LDP X20, X19, [X31 + 0x20]
	0x01E9CFF0 LDR X30, [X31 + 0x10]
	0x01E9CFF4 ADD X31, X31, 0x30
	0x01E9CFF8 RET
	0x01E9CFFC STR X30, [X31 - 0x20]!
	0x01E9D000 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x2258000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2263000
	011 Move X0, [X0+1616]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01E9D004 ADRP X20, 0x253C000
	0x01E9D008 LDRB W8, [X20 + 0x300]
	0x01E9D00C MOV X19, X0
	0x01E9D010 TBNZ X8, 0x0, 0x1E9D028
	0x01E9D014 ADRP X0, 0x2261000
	0x01E9D018 LDR X0, [X0 + 0x6E8]
	0x01E9D01C BL 0x1C16CF4
	0x01E9D020 MOVZ W8, 0x1
	0x01E9D024 STRB W8, [X20 + 0x300]
	0x01E9D028 LDR X8, [X19 + 0x20]
	0x01E9D02C CBZ X8, 0x1E9D054
	0x01E9D030 ADRP X9, 0x2261000
	0x01E9D034 LDR X9, [X9 + 0x6E8]
	0x01E9D038 LDR W1, [X8 + 0x2C]
	0x01E9D03C ADD X0, X31, 0x8
	0x01E9D040 STR X31, [X31 + 0x8]
	0x01E9D044 LDR X2, [X9]
	0x01E9D048 BL 0x2435D9C
	0x01E9D04C LDR X0, [X31 + 0x8]
	0x01E9D050 B 0x1E9D05C
	0x01E9D054 MOV X0, X31
	0x01E9D058 STR X31, [X31 + 0x8]
	0x01E9D05C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x253D000
	007 Move X20, 0x2262000
	008 Move W8, [X21+757]
	009 Move X20, [X20+1624]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2262000
	016 Move X0, [X0+1624]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+757], W8
	020 NotImplemented "Instruction LDUR not yet implemented."
	021 Move X0, [X20]
	022 Add X1, X31, 0
	023 Move [X31], V0
	024 Call 0x1C17E04
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X30, [X31+16]
	028 Move X21, [X31+24]
	029 Add X31, X31, 48
	030 Return X0

Method: System.Collections.Generic.IEnumerator`1<System.ValueTuple`2<Fusion.NetworkPrefabId, Fusion.INetworkPrefabSource>> System.Collections.Generic.IEnumerable<System.ValueTuple<Fusion.NetworkPrefabId,Fusion.INetworkPrefabSource>>.GetEnumerator()

Disassembly:
	0x01E9D060 LDR X30, [X31], #0x20
	0x01E9D064 RET
	0x01E9D068 LDR X0, [X0 + 0x20]
	0x01E9D06C RET
	0x01E9D070 STR X30, [X31 - 0x30]!
	0x01E9D074 STP X22, X21, [X31 + 0x10]
	0x01E9D078 STP X20, X19, [X31 + 0x20]
	0x01E9D07C MOV X21, X1
	0x01E9D080 MOV X1, X31
	0x01E9D084 MOV W19, W3
	0x01E9D088 MOV X20, X2
	0x01E9D08C MOV X22, X0
	0x01E9D090 BL 0x33BDD8C
	0x01E9D094 STP X20, X21, [X22 + 0x18]
	0x01E9D098 STR W19, [X22 + 0x10]
	0x01E9D09C LDP X20, X19, [X31 + 0x20]
	0x01E9D0A0 LDP X22, X21, [X31 + 0x10]
	0x01E9D0A4 LDR X30, [X31], #0x30
	0x01E9D0A8 RET
	0x01E9D0AC STR X30, [X31 - 0x20]!
	0x01E9D0B0 STP X20, X19, [X31 + 0x10]
	0x01E9D0B4 ADRP X20, 0x253C000
	0x01E9D0B8 LDRB W8, [X20 + 0x301]
	0x01E9D0BC MOV X19, X0
	0x01E9D0C0 TBNZ X8, 0x0, 0x1E9D0D8
	0x01E9D0C4 ADRP X0, 0x2261000
	0x01E9D0C8 LDR X0, [X0 + 0x6F0]
	0x01E9D0CC BL 0x1C16CF4
	0x01E9D0D0 MOVZ W8, 0x1
	0x01E9D0D4 STRB W8, [X20 + 0x301]
	0x01E9D0D8 LDR X8, [X19 + 0x50]
	0x01E9D0DC CBZ X8, 0x1E9D104
	0x01E9D0E0 LDRB W8, [X8 + 0xD0]
	0x01E9D0E4 CBZ W8, 0x1E9D104
	0x01E9D0E8 LDR X8, [X19 + 0x80]
	0x01E9D0EC CBZ X8, 0x1E9D104
	0x01E9D0F0 LDR X0, [X8 + 0x10]
	0x01E9D0F4 CBZ X0, 0x1E9D114
	0x01E9D0F8 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x253D000
	005 Move W8, [X20+758]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2262000
	012 Move X0, [X0+1384]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+758], W8
	016 Move W8, [X19+16]
	017 Add W31, W8, 2
	018 Move W20, [X19+40]
	019 Move X0, X31
	020 Call Environment.get_CurrentManagedThreadId
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X19+16], W31
	023 Move X8, 0x2262000
	024 Move X8, [X8+1384]
	025 Move X0, [X8]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X20, X0
	029 Call Object..ctor, X0
	030 Move X0, X31
	031 Move [X20+16], W31
	032 Call Environment.get_CurrentManagedThreadId
	033 Move [X20+40], W0
	034 Move X8, [X19+48]
	035 Move X19, X20
	036 Move [X20+48], X8
	037 Move X0, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x01E9D0FC BL 0x33ED11C

ISIL:
	001 Call <GetEntries>d__12.System.Collections.Generic.IEnumerable<System.ValueTuple<Fusion.NetworkPrefabId,Fusion.INetworkPrefabSource>>.GetEnumerator, X0
	002 Return X0

