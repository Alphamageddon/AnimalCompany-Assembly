Type: Fusion.FixedArray`1/Enumerator

Method: T get_Current()

Disassembly:
	0x02BC44A4 MOV X19, X0
	0x02BC44A8 CMP W9, W8
	0x02BC44AC B.EQ 0x2BC44B8
	0x02BC44B0 MOV X0, X31
	0x02BC44B4 BL 0x339E09C
	0x02BC44B8 STR W31, [X19 + 0x8]
	0x02BC44BC STR X31, [X19 + 0x10]
	0x02BC44C0 LDP X30, X19, [X31], #0x10
	0x02BC44C4 RET
	0x02BC44C8 BL 0x1C16F20
	0x02BC44CC STR X30, [X31 - 0x10]!
	0x02BC44D0 STR X1, [X0]
	0x02BC44D4 STR W31, [X0 + 0x8]
	0x02BC44D8 CBZ X1, 0x2BC44F0
	0x02BC44DC LDR W8, [X1 + 0x1C]
	0x02BC44E0 STR X31, [X0 + 0x10]
	0x02BC44E4 STR W8, [X0 + 0xC]
	0x02BC44E8 LDR X30, [X31], #0x10
	0x02BC44EC RET
	0x02BC44F0 BL 0x1C16F20
	0x02BC44F4 RET
	0x02BC44F8 STP X30, X19, [X31 - 0x10]!
	0x02BC44FC LDR X9, [X0]
	0x02BC4500 CBZ X9, 0x2BC4584
	0x02BC4504 LDR W8, [X0 + 0xC]
	0x02BC4508 LDR W10, [X9 + 0x1C]
	0x02BC450C MOV X19, X0
	0x02BC4510 CMP W8, W10
	0x02BC4514 B.NE 0x2BC4558
	0x02BC4518 LDRSW X8, [X19 + 0x8]
	0x02BC451C LDR W10, [X9 + 0x18]
	0x02BC4520 CMP W8, W10
	0x02BC4524 B.CS 0x2BC4558
	0x02BC4528 LDR X9, [X9 + 0x10]
	0x02BC452C CBZ X9, 0x2BC4584
	0x02BC4530 LDR W10, [X9 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X0
	006 Move X0, [X1+32]
	007 Move W21, [X20]
	008 Move X19, X1
	009 Move W8, [X0+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {15}
	014 Call 0x1C5D684
	015 Move W8, [X20+16]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X0, [X19+32]
	018 Move W19, [X20]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move X8, [X0+192]
	026 Add X0, X20, 8
	027 Move W1, W19
	028 Move X2, [X8+32]
	029 Call 0x2D20A44, X0, X1
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0
	036 Move X0, 0x153A000
	037 Move X0, [X0+3960]
	038 Call 0x1C17D08
	039 Call 0x1C17F10
	040 Move X1, X31
	041 Move X20, X0
	042 Call IndexOutOfRangeException..ctor, X0
	043 Move X0, X20
	044 Move X1, X19
	045 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x02BC4534 CMP W8, W10
	0x02BC4538 B.CS 0x2BC4588
	0x02BC453C ADD X9, X9, X8, 0x3, LSL
	0x02BC4540 LDR X9, [X9 + 0x20]
	0x02BC4544 ADD W8, W8, 0x1
	0x02BC4548 STR W8, [X19 + 0x8]
	0x02BC454C MOVZ W0, 0x1
	0x02BC4550 STR X9, [X19 + 0x10]
	0x02BC4554 B 0x2BC457C
	0x02BC4558 LDR X0, [X1 + 0x20]
	0x02BC455C LDRB W8, [X0 + 0x135]
	0x02BC4560 TBNZ X8, 0x0, 0x2BC4568
	0x02BC4564 BL 0x1C5C684
	0x02BC4568 LDR X8, [X0 + 0xC0]
	0x02BC456C MOV X0, X19
	0x02BC4570 LDR X1, [X8 + 0x28]
	0x02BC4574 BL 0x2BC458C
	0x02BC4578 MOV W0, W31
	0x02BC457C LDP X30, X19, [X31], #0x10
	0x02BC4580 RET
	0x02BC4584 BL 0x1C16F20
	0x02BC4588 BL 0x1C16F28
	0x02BC458C STR X30, [X31 - 0x20]!
	0x02BC4590 STP X20, X19, [X31 + 0x10]
	0x02BC4594 LDR X8, [X0]
	0x02BC4598 CBZ X8, 0x2BC45CC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {15}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move X8, X0
	015 Move X8, [X8+192]
	016 Move X0, X20
	017 Move X1, [X8+56]
	018 Call 0x2BC44A4, X0
	019 NotImplemented "Instruction STRH not yet implemented."
	020 Move X0, [X19+32]
	021 Move W8, [X0+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {27}
	026 Call 0x1C5D684
	027 Move X8, [X0+192]
	028 Add X1, X31, 12
	029 Move X0, [X8+48]
	030 Call 0x1C17E04
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0

Method: System.Void .ctor(Fusion.FixedArray`1<T> array)

Disassembly:
	0x02BC459C LDR W9, [X0 + 0xC]
	0x02BC45A0 LDR W10, [X8 + 0x1C]
	0x02BC45A4 CMP W9, W10
	0x02BC45A8 B.NE 0x2BC45D0

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0], W8
	005 Move [X0+8], X1
	006 Move [X0+16], X2
	007 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x02BC45AC LDR W8, [X8 + 0x18]
	0x02BC45B0 LDP X20, X19, [X31 + 0x10]
	0x02BC45B4 STR X31, [X0 + 0x10]
	0x02BC45B8 ADD W8, W8, 0x1
	0x02BC45BC STR W8, [X0 + 0x8]
	0x02BC45C0 MOV W0, W31
	0x02BC45C4 LDR X30, [X31], #0x20
	0x02BC45C8 RET
	0x02BC45CC BL 0x1C16F20
	0x02BC45D0 ADRP X0, 0x152F000
	0x02BC45D4 LDR X0, [X0 + 0x5B0]
	0x02BC45D8 MOV X19, X1
	0x02BC45DC BL 0x1C16D08
	0x02BC45E0 BL 0x1C16F10
	0x02BC45E4 MOV X1, X31
	0x02BC45E8 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0]
	005 Move X19, X0
	006 Add W20, W8, 1
	007 Move [X0], W20
	008 Move X0, [X1+32]
	009 Move W8, [X0+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {15}
	014 Call 0x1C5D684
	015 Move W8, [X19+16]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 NotImplemented "Instruction CSET not yet implemented."
	020 Move X30, [X31+32]
	021 Return X0

Method: System.Void Reset()

Disassembly:
	0x02BC45EC BL 0x337DEC0
	0x02BC45F0 MOV X0, X20
	0x02BC45F4 MOV X1, X19

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0], W8
	005 Return 

Method: System.Void Dispose()

Disassembly:
	0x02BC45F8 BL 0x1C16DEC
	0x02BC45FC LDR X0, [X0 + 0x10]
	0x02BC4600 RET
	0x02BC4604 STR X30, [X31 - 0x20]!

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0+8], X31
	005 Move [X0+16], X31
	006 Move [X0], W8
	007 Return 

