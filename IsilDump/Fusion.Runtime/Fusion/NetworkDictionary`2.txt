Type: Fusion.NetworkDictionary`2

Method: System.Int32 get__free()

Disassembly:
	0x024166DC LDP X9, X3, [X8 + 0x1B8]
	0x024166E0 BLR X9
	0x024166E4 TBNZ X0, 0x0, 0x2416718

ISIL:
	001 Move X8, [X0]
	002 Move W0, [X8]
	003 Return X0

Method: System.Void set__free(System.Int32 value)

Disassembly:
	0x024166E8 LDR X0, [X19 + 0x20]
	0x024166EC LDRB W8, [X0 + 0x135]
	0x024166F0 TBNZ X8, 0x0, 0x24166F8

ISIL:
	001 Move X8, [X0]
	002 Move [X8], W1
	003 Return 

Method: System.Int32 get__freeCount()

Disassembly:
	0x024166F4 BL 0x1C5C684
	0x024166F8 LDR W8, [X20 + 0x18]
	0x024166FC LDR W9, [X20 + 0xC]

ISIL:
	001 Move X8, [X0]
	002 Move W0, [X8+4]
	003 Return X0

Method: System.Void set__freeCount(System.Int32 value)

Disassembly:
	0x02416700 LDRSW X10, [X20 + 0x20]
	0x02416704 LDR X11, [X20]
	0x02416708 MADD W8, W8, W22, W9

ISIL:
	001 Move X8, [X0]
	002 Move [X8+4], W1
	003 Return 

Method: System.Int32 get__usedCount()

Disassembly:
	0x0241670C ADD X8, X10, W8, SXTW
	0x02416710 LDR W22, [X11, X8, LSL #2]
	0x02416714 CBNZ W22, 0x24166A0

ISIL:
	001 Move X8, [X0]
	002 Move W0, [X8+8]
	003 Return X0

Method: System.Void set__usedCount(System.Int32 value)

Disassembly:
	0x02416718 MOV W0, W22
	0x0241671C LDP X20, X19, [X31 + 0x30]
	0x02416720 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move X8, [X0]
	002 Move [X8+8], W1
	003 Return 

Method: System.Int32 get_Count()

Disassembly:
	0x02416724 LDP X24, X23, [X31 + 0x10]
	0x02416728 LDR X30, [X31], #0x40
	0x0241672C RET
	0x02416730 BL 0x1C16F20
	0x02416734 LDR W8, [X0 + 0x8]
	0x02416738 UDIV W9, W1, W8
	0x0241673C MSUB W0, W9, W8, W1
	0x02416740 RET
	0x02416744 LDR W8, [X0 + 0x18]
	0x02416748 LDRSW X9, [X0 + 0x20]
	0x0241674C LDR X10, [X0]
	0x02416750 MOV X2, X31
	0x02416754 MUL W11, W8, W1
	0x02416758 ADD X9, X9, W11, SXTW
	0x0241675C ADD X0, X10, X9, 0x2, LSL
	0x02416760 UBFM W1, W8, 0x1E, 0x1D
	0x02416764 B 0x1E35770
	0x02416768 STR X30, [X31 - 0x40]!
	0x0241676C STP X24, X23, [X31 + 0x10]
	0x02416770 STP X22, X21, [X31 + 0x20]
	0x02416774 STP X20, X19, [X31 + 0x30]
	0x02416778 LDR X19, [X0 + 0x28]
	0x0241677C CBZ X19, 0x2416838
	0x02416780 MOV X8, X0
	0x02416784 LDR X0, [X2 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X19, X0
	006 Add X9, X8, 309
	007 NotImplemented "Instruction LDRH not yet implemented."
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {18}
	012 Move X0, X8
	013 Move X20, X1
	014 Call 0x1C5D684
	015 Move X8, [X20+32]
	016 Add X9, X8, 309
	017 NotImplemented "Instruction LDRH not yet implemented."
	018 Move X10, [X19]
	019 Move W20, [X10+8]
	020 Move TEMP, X9
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {27}
	024 Move X0, X8
	025 Call 0x1C5D684
	026 Move X10, [X19]
	027 Move W8, [X10+4]
	028 NotImplemented "Instruction ORN not yet implemented."
	029 Add W0, W20, W8
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return X0

Method: System.Int32 get_Capacity()

Disassembly:
	0x02416788 LDR X21, [X8]
	0x0241678C LDRSW X22, [X8 + 0x20]
	0x02416790 LDR W23, [X8 + 0x18]

ISIL:
	001 Move W8, [X0+8]
	002 Subtract W0, W8, 1
	003 Return X0

Method: V get_Item(K key)

Disassembly:
	0x02416794 LDRB W9, [X0 + 0x135]
	0x02416798 LDR W24, [X8 + 0x10]
	0x0241679C MOV W20, W1
	0x024167A0 TBNZ X9, 0x0, 0x24167A8
	0x024167A4 BL 0x1C5C684
	0x024167A8 LDR X8, [X0 + 0xC0]
	0x024167AC LDR X1, [X8 + 0x40]
	0x024167B0 LDRB W8, [X1 + 0x135]
	0x024167B4 TBNZ X8, 0x0, 0x24167C4
	0x024167B8 MOV X0, X1
	0x024167BC BL 0x1C5C684
	0x024167C0 MOV X1, X0
	0x024167C4 LDR X8, [X19]
	0x024167C8 LDRH W9, [X8 + 0x12E]
	0x024167CC CBZ X9, 0x24167F0
	0x024167D0 LDR X10, [X8 + 0xB0]
	0x024167D4 ADD X10, X10, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move W19, W1
	006 Move X20, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {15}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move X8, X0
	015 Move X8, [X8+192]
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X2, [X8+40]
	021 Move X30, [X31+32]
	022 Call 0x2416D08, X0, X1
	023 Return X0

Method: System.Void set_Item(K key, V value)

Disassembly:
	0x024167D8 LDUR X11, [X10 - 0x8]
	0x024167DC CMP X11, X1
	0x024167E0 B.EQ 0x2416800
	0x024167E4 SUBS X9, X9, 0x1
	0x024167E8 ADD X10, X10, 0x10
	0x024167EC B.NE 0x24167D8
	0x024167F0 MOV X0, X19
	0x024167F4 MOV W2, W31
	0x024167F8 BL 0x1C5C788
	0x024167FC B 0x241680C
	0x02416800 LDRSW X9, [X10]
	0x02416804 ADD X8, X8, X9, 0x4, LSL
	0x02416808 ADD X0, X8, 0x138
	0x0241680C MADD W8, W23, W20, W24
	0x02416810 ADD X8, X22, W8, SXTW
	0x02416814 LDP X4, X3, [X0]
	0x02416818 ADD X1, X21, X8, 0x2, LSL
	0x0241681C MOV X0, X19
	0x02416820 LDP X20, X19, [X31 + 0x30]
	0x02416824 LDP X22, X21, [X31 + 0x20]
	0x02416828 LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move V8, V0
	007 Move W19, W1
	008 Move X20, X0
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X8, [X8+192]
	018 Move X0, X20
	019 Move W1, W19
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X2, [X8+56]
	023 Move X30, [X31+8]
	024 Move V0, V8
	025 Move V8, [X31+32]
	026 Call 0x2416D94, X0, X1, X2
	027 Return 

Method: System.Void .ctor(System.Int32* data, System.Int32 capacity, Fusion.IElementReaderWriter`1<K> keyReaderWriter, Fusion.IElementReaderWriter`1<V> valReaderWriter)

Disassembly:
	0x0241682C MOV W2, W31
	0x02416830 LDR X30, [X31], #0x40
	0x02416834 BR X4
	0x02416838 BL 0x1C16F20
	0x0241683C STP X30, X25, [X31 - 0x40]!
	0x02416840 STP X24, X23, [X31 + 0x10]
	0x02416844 STP X22, X21, [X31 + 0x20]
	0x02416848 STP X20, X19, [X31 + 0x30]
	0x0241684C LDR X20, [X0 + 0x28]
	0x02416850 CBZ X20, 0x2416918
	0x02416854 MOV X8, X0
	0x02416858 LDR X0, [X3 + 0x20]
	0x0241685C LDR X22, [X8]
	0x02416860 LDRSW X23, [X8 + 0x20]
	0x02416864 LDR W24, [X8 + 0x18]
	0x02416868 LDRB W9, [X0 + 0x135]
	0x0241686C LDR W25, [X8 + 0x10]
	0x02416870 MOV W19, W2
	0x02416874 MOV W21, W1
	0x02416878 TBNZ X9, 0x0, 0x2416880
	0x0241687C BL 0x1C5C684
	0x02416880 LDR X8, [X0 + 0xC0]
	0x02416884 LDR X1, [X8 + 0x40]
	0x02416888 LDRB W8, [X1 + 0x135]
	0x0241688C TBNZ X8, 0x0, 0x241689C
	0x02416890 MOV X0, X1
	0x02416894 BL 0x1C5C684
	0x02416898 MOV X1, X0
	0x0241689C LDR X8, [X20]
	0x024168A0 LDRH W9, [X8 + 0x12E]
	0x024168A4 CBZ X9, 0x24168C8
	0x024168A8 LDR X10, [X8 + 0xB0]
	0x024168AC ADD X10, X10, 0x8
	0x024168B0 LDUR X11, [X10 - 0x8]
	0x024168B4 CMP X11, X1
	0x024168B8 B.EQ 0x24168D8
	0x024168BC SUBS X9, X9, 0x1
	0x024168C0 ADD X10, X10, 0x10
	0x024168C4 B.NE 0x24168B0
	0x024168C8 MOVZ W2, 0x1
	0x024168CC MOV X0, X20
	0x024168D0 BL 0x1C5C788
	0x024168D4 B 0x24168E8
	0x024168D8 LDR W9, [X10]
	0x024168DC ADD W9, W9, 0x1
	0x024168E0 ADD X8, X8, W9, 0x4, SXTW
	0x024168E4 ADD X0, X8, 0x138
	0x024168E8 MADD W8, W24, W21, W25
	0x024168EC ADD X8, X23, W8, SXTW
	0x024168F0 LDP X5, X4, [X0]
	0x024168F4 ADD X1, X22, X8, 0x2, LSL
	0x024168F8 MOV X0, X20
	0x024168FC MOV W3, W19
	0x02416900 LDP X20, X19, [X31 + 0x30]
	0x02416904 LDP X22, X21, [X31 + 0x20]
	0x02416908 LDP X24, X23, [X31 + 0x10]
	0x0241690C MOV W2, W31
	0x02416910 LDP X30, X25, [X31], #0x40
	0x02416914 BR X5
	0x02416918 BL 0x1C16F20
	0x0241691C STR X30, [X31 - 0x40]!
	0x02416920 STP X24, X23, [X31 + 0x10]
	0x02416924 STP X22, X21, [X31 + 0x20]
	0x02416928 STP X20, X19, [X31 + 0x30]
	0x0241692C LDR X19, [X0 + 0x30]
	0x02416930 CBZ X19, 0x24169E8
	0x02416934 MOV X8, X0
	0x02416938 LDR X0, [X2 + 0x20]
	0x0241693C LDR X21, [X8]
	0x02416940 LDRSW X22, [X8 + 0x20]
	0x02416944 LDP W24, W23, [X8 + 0x14]
	0x02416948 LDRB W9, [X0 + 0x135]
	0x0241694C MOV W20, W1
	0x02416950 TBNZ X9, 0x0, 0x2416958
	0x02416954 BL 0x1C5C684
	0x02416958 LDR X8, [X0 + 0xC0]
	0x0241695C LDR X1, [X8 + 0x50]
	0x02416960 LDRB W8, [X1 + 0x135]
	0x02416964 TBNZ X8, 0x0, 0x2416974
	0x02416968 MOV X0, X1
	0x0241696C BL 0x1C5C684
	0x02416970 MOV X1, X0
	0x02416974 LDR X8, [X19]
	0x02416978 LDRH W9, [X8 + 0x12E]
	0x0241697C CBZ X9, 0x24169A0
	0x02416980 LDR X10, [X8 + 0xB0]
	0x02416984 ADD X10, X10, 0x8
	0x02416988 LDUR X11, [X10 - 0x8]
	0x0241698C CMP X11, X1
	0x02416990 B.EQ 0x24169B0
	0x02416994 SUBS X9, X9, 0x1
	0x02416998 ADD X10, X10, 0x10
	0x0241699C B.NE 0x2416988
	0x024169A0 MOV X0, X19
	0x024169A4 MOV W2, W31
	0x024169A8 BL 0x1C5C788
	0x024169AC B 0x24169BC
	0x024169B0 LDRSW X9, [X10]
	0x024169B4 ADD X8, X8, X9, 0x4, LSL
	0x024169B8 ADD X0, X8, 0x138
	0x024169BC MADD W8, W23, W20, W24
	0x024169C0 ADD X8, X22, W8, SXTW
	0x024169C4 LDP X4, X3, [X0]
	0x024169C8 ADD X1, X21, X8, 0x2, LSL
	0x024169CC MOV X0, X19
	0x024169D0 LDP X20, X19, [X31 + 0x30]
	0x024169D4 LDP X22, X21, [X31 + 0x20]
	0x024169D8 LDP X24, X23, [X31 + 0x10]
	0x024169DC MOV W2, W31
	0x024169E0 LDR X30, [X31], #0x40
	0x024169E4 BR X4
	0x024169E8 BL 0x1C16F20
	0x024169EC STR D8, [X31 - 0x40]!
	0x024169F0 STR X30, [X31 + 0x8]
	0x024169F4 STP X24, X23, [X31 + 0x10]
	0x024169F8 STP X22, X21, [X31 + 0x20]
	0x024169FC STP X20, X19, [X31 + 0x30]
	0x02416A00 LDR X19, [X0 + 0x30]
	0x02416A04 CBZ X19, 0x2416ACC
	0x02416A08 MOV X8, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Compare X3, 0
	010 JumpIfEqual {154}
	011 Move X19, X0
	012 Move X0, [X5+32]
	013 Move X20, X5
	014 Move X22, X4
	015 Move X24, X3
	016 Move W8, [X0+309]
	017 Move W21, W2
	018 Move X23, X1
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Move X8, [X0+192]
	025 Move X1, [X8+64]
	026 Move W8, [X1+309]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {34}
	031 Move X0, X1
	032 Call 0x1C5D684
	033 Move X1, X0
	034 Move X8, [X24]
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Compare X9, 0
	037 JumpIfEqual {44}
	038 Move X10, [X8+176]
	039 Add X10, X10, 8
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Subtract X9, X9, 1
	043 Add X10, X10, 16
	044 Move W2, 2
	045 Move X0, X24
	046 Call 0x1C5D788
	047 Move W9, [X10]
	048 Add W9, W9, 2
	049 Add X8, X8, W9
	050 Add X0, X8, 312
	051 Move X8, [X0]
	052 Move X1, [X0+8]
	053 Move X0, X24
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Compare X22, 0
	056 JumpIfEqual {154}
	057 Move W25, W0
	058 Move X0, [X20+32]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 Move X8, [X0+192]
	066 Move X1, [X8+80]
	067 Move W8, [X1+309]
	068 Move TEMP, X8
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {75}
	072 Move X0, X1
	073 Call 0x1C5D684
	074 Move X1, X0
	075 Move X8, [X22]
	076 NotImplemented "Instruction LDRH not yet implemented."
	077 Compare X9, 0
	078 JumpIfEqual {85}
	079 Move X10, [X8+176]
	080 Add X10, X10, 8
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Subtract X9, X9, 1
	084 Add X10, X10, 16
	085 Move W2, 2
	086 Move X0, X22
	087 Call 0x1C5D788
	088 Move W9, [X10]
	089 Add W9, W9, 2
	090 Add X8, X8, W9
	091 Add X0, X8, 312
	092 Move X8, [X0]
	093 Move X1, [X0+8]
	094 Move X0, X22
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move X8, -26378240
	097 Move V0, [X8+1600]
	098 Add W9, W25, 1
	099 Move W10, 3
	100 Add W11, W21, 3
	101 Add W8, W0, W9
	102 Move [X19+40], X24
	103 Move [X19+48], X22
	104 Move [X19], X23
	105 Move [X19+8], W21
	106 Move [X19+20], W9
	107 Move [X19+24], W8
	108 Move [X19+12], D0
	109 Move [X19+28], W10
	110 Move [X19+32], W11
	111 Move X0, [X20+32]
	112 Move W8, [X0+309]
	113 Move TEMP, X8
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfEqual {118}
	117 Call 0x1C5D684
	118 Move X8, [X0+192]
	119 Move X0, [X8+96]
	120 Call 0x211E35C
	121 Move [X19+56], X0
	122 Move X0, [X20+32]
	123 Move W8, [X0+309]
	124 Move TEMP, X8
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {129}
	128 Call 0x1C5D684
	129 Move X8, [X19]
	130 Add X8, X8, 8
	131 Move W9, [X8]
	132 Compare W9, 0
	133 JumpIfNotEqual {145}
	134 Move X0, [X20+32]
	135 Move W9, [X0+309]
	136 Move TEMP, X9
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfEqual {143}
	140 Call 0x1C5D684
	141 Move X8, [X19]
	142 Add X8, X8, 8
	143 Move W9, 1
	144 Move [X8], W9
	145 Move X20, [X31+48]
	146 Move X19, [X31+56]
	147 Move X22, [X31+32]
	148 Move X21, [X31+40]
	149 Move X24, [X31+16]
	150 Move X23, [X31+24]
	151 Move X30, [X31+64]
	152 Move X25, [X31+72]
	153 Return 
	154 Call 0x1C17F20

Method: Fusion.NetworkDictionaryReadOnly`2<K, V> ToReadOnly()

Disassembly:
	0x02416A0C LDR X0, [X2 + 0x20]
	0x02416A10 LDR X21, [X8]
	0x02416A14 LDRSW X22, [X8 + 0x20]
	0x02416A18 LDP W24, W23, [X8 + 0x14]
	0x02416A1C LDRB W9, [X0 + 0x135]
	0x02416A20 MOV V8.16B, V0.16B
	0x02416A24 MOV W20, W1
	0x02416A28 TBNZ X9, 0x0, 0x2416A30
	0x02416A2C BL 0x1C5C684
	0x02416A30 LDR X8, [X0 + 0xC0]
	0x02416A34 LDR X1, [X8 + 0x50]
	0x02416A38 LDRB W8, [X1 + 0x135]
	0x02416A3C TBNZ X8, 0x0, 0x2416A4C
	0x02416A40 MOV X0, X1
	0x02416A44 BL 0x1C5C684
	0x02416A48 MOV X1, X0
	0x02416A4C LDR X8, [X19]
	0x02416A50 LDRH W9, [X8 + 0x12E]
	0x02416A54 CBZ X9, 0x2416A78
	0x02416A58 LDR X10, [X8 + 0xB0]
	0x02416A5C ADD X10, X10, 0x8
	0x02416A60 LDUR X11, [X10 - 0x8]
	0x02416A64 CMP X11, X1
	0x02416A68 B.EQ 0x2416A88
	0x02416A6C SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 NotImplemented "Instruction MOVI not yet implemented."
	008 Move X19, [X0]
	009 Move W21, [X0+8]
	010 Move X22, [X0+40]
	011 Move X23, [X0+48]
	012 Move [X8+32], V0
	013 Move [X8+40], V0
	014 Move [X8], V0
	015 Move [X8+8], V0
	016 Move X0, [X1+32]
	017 Move X20, X8
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Move X8, [X0+192]
	025 Move X0, X20
	026 Move X1, X19
	027 Move W2, W21
	028 Move X5, [X8+136]
	029 Move X3, X22
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X4, X23
	035 Move X30, [X31+48]
	036 Move X23, [X31+56]
	037 Call 0x2415278, X0, X1, X2, X3, X4
	038 Return X0

Method: System.Void Clear()

Disassembly:
	0x02416A70 ADD X10, X10, 0x10
	0x02416A74 B.NE 0x2416A60
	0x02416A78 MOVZ W2, 0x1
	0x02416A7C MOV X0, X19
	0x02416A80 BL 0x1C5C788
	0x02416A84 B 0x2416A98
	0x02416A88 LDR W9, [X10]
	0x02416A8C ADD W9, W9, 0x1
	0x02416A90 ADD X8, X8, W9, 0x4, SXTW
	0x02416A94 ADD X0, X8, 0x138
	0x02416A98 MADD W8, W23, W20, W24
	0x02416A9C ADD X8, X22, W8, SXTW
	0x02416AA0 LDP X4, X3, [X0]
	0x02416AA4 ADD X1, X21, X8, 0x2, LSL
	0x02416AA8 MOV X0, X19
	0x02416AAC LDP X20, X19, [X31 + 0x30]
	0x02416AB0 LDP X22, X21, [X31 + 0x20]
	0x02416AB4 LDP X24, X23, [X31 + 0x10]
	0x02416AB8 LDR X30, [X31 + 0x8]
	0x02416ABC MOV W2, W31
	0x02416AC0 MOV V0.16B, V8.16B
	0x02416AC4 LDR V8, [X31], #0x40
	0x02416AC8 BR X4
	0x02416ACC BL 0x1C16F20
	0x02416AD0 LDR W8, [X0 + 0x18]
	0x02416AD4 LDR W9, [X0 + 0xC]
	0x02416AD8 LDRSW X10, [X0 + 0x20]
	0x02416ADC LDR X11, [X0]
	0x02416AE0 MADD W8, W8, W1, W9
	0x02416AE4 ADD X8, X10, W8, SXTW
	0x02416AE8 LDR W0, [X11, X8, LSL #2]
	0x02416AEC RET
	0x02416AF0 LDR W8, [X0 + 0x18]
	0x02416AF4 LDR W9, [X0 + 0xC]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X20, X1
	006 Move X19, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {15}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move X8, [X20+32]
	015 Move X9, [X19]
	016 Move W10, 1
	017 Move [X9+8], W10
	018 Move W10, [X8+309]
	019 Move TEMP, X10
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {27}
	023 Move X0, X8
	024 Call 0x1C5D684
	025 Move X9, [X19]
	026 Move X8, [X20+32]
	027 Move [X9], W31
	028 Move W10, [X8+309]
	029 Move TEMP, X10
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {36}
	033 Move X0, X8
	034 Call 0x1C5D684
	035 Move X9, [X19]
	036 Move [X9+4], W31
	037 NotImplemented "Instruction LDRSW not yet implemented."
	038 Move W10, [X19+8]
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X2, X31
	042 Add X0, X9, X8
	043 Move W1, W10
	044 ShiftRight W1, 30
	045 And W1, W1, 0x1FFFFFFF
	046 Move X30, [X31+32]
	047 Call Native.MemClear, X0, X1
	048 Return 

Method: System.Boolean ContainsKey(K key)

Disassembly:
	0x02416AF8 LDRSW X10, [X0 + 0x20]
	0x02416AFC LDR X11, [X0]
	0x02416B00 MADD W8, W8, W1, W9
	0x02416B04 ADD X8, X10, W8, SXTW
	0x02416B08 STR W2, [X11, X8, LSL #2]
	0x02416B0C RET
	0x02416B10 STR X30, [X31 - 0x20]!
	0x02416B14 STP X20, X19, [X31 + 0x10]
	0x02416B18 LDR X20, [X0 + 0x28]
	0x02416B1C CBZ X20, 0x2416BB4
	0x02416B20 LDR X0, [X2 + 0x20]
	0x02416B24 MOV W19, W1
	0x02416B28 LDRB W8, [X0 + 0x135]
	0x02416B2C TBNZ X8, 0x0, 0x2416B34
	0x02416B30 BL 0x1C5C684
	0x02416B34 LDR X8, [X0 + 0xC0]
	0x02416B38 LDR X1, [X8 + 0x40]
	0x02416B3C LDRB W8, [X1 + 0x135]
	0x02416B40 TBNZ X8, 0x0, 0x2416B50
	0x02416B44 MOV X0, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move W19, W1
	006 Move X20, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {15}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move X8, X0
	015 Move X8, [X8+192]
	016 Move X0, X20
	017 Move W1, W19
	018 Move X2, [X8+160]
	019 Call 0x24175A4, X0, X1
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CSET not yet implemented."
	024 Move X30, [X31+32]
	025 Return X0

Method: System.Boolean ContainsValue(V value, System.Collections.Generic.IEqualityComparer`1<V> equalityComparer = null)

Disassembly:
	0x02416B48 BL 0x1C5C684
	0x02416B4C MOV X1, X0
	0x02416B50 LDR X8, [X20]
	0x02416B54 LDRH W9, [X8 + 0x12E]
	0x02416B58 CBZ X9, 0x2416B7C
	0x02416B5C LDR X10, [X8 + 0xB0]
	0x02416B60 ADD X10, X10, 0x8
	0x02416B64 LDUR X11, [X10 - 0x8]
	0x02416B68 CMP X11, X1
	0x02416B6C B.EQ 0x2416B8C
	0x02416B70 SUBS X9, X9, 0x1
	0x02416B74 ADD X10, X10, 0x10
	0x02416B78 B.NE 0x2416B64
	0x02416B7C MOVZ W2, 0x4
	0x02416B80 MOV X0, X20
	0x02416B84 BL 0x1C5C788
	0x02416B88 B 0x2416B9C
	0x02416B8C LDR W9, [X10]
	0x02416B90 ADD W9, W9, 0x4
	0x02416B94 ADD X8, X8, W9, 0x4, SXTW
	0x02416B98 ADD X0, X8, 0x138
	0x02416B9C LDP X3, X2, [X0]
	0x02416BA0 MOV X0, X20
	0x02416BA4 MOV W1, W19
	0x02416BA8 LDP X20, X19, [X31 + 0x10]
	0x02416BAC LDR X30, [X31], #0x20
	0x02416BB0 BR X3
	0x02416BB4 BL 0x1C16F20
	0x02416BB8 SUB X31, X31, 0x90
	0x02416BBC STP X30, X19, [X31 + 0x80]
	0x02416BC0 LDP V0, V1, [X0]
	0x02416BC4 LDP V2, V3, [X0 + 0x20]
	0x02416BC8 MOVI V4.2D, 0x0
	0x02416BCC STR X31, [X8 + 0x40]
	0x02416BD0 STP V4, V4, [X8 + 0x20]
	0x02416BD4 STP V2, V3, [X31 + 0x20]
	0x02416BD8 STP V0, V1, [X31]
	0x02416BDC STP V4, V4, [X8]
	0x02416BE0 LDR X0, [X1 + 0x20]
	0x02416BE4 MOV X19, X8
	0x02416BE8 LDRB W8, [X0 + 0x135]
	0x02416BEC TBNZ X8, 0x0, 0x2416BF4
	0x02416BF0 BL 0x1C5C684
	0x02416BF4 LDR X8, [X0 + 0xC0]
	0x02416BF8 LDP V0, V1, [X31]
	0x02416BFC LDP V2, V3, [X31 + 0x20]
	0x02416C00 ADD X1, X31, 0x40
	0x02416C04 LDR X2, [X8 + 0x1B0]
	0x02416C08 MOV X0, X19
	0x02416C0C STP V0, V1, [X31 + 0x40]
	0x02416C10 STP V2, V3, [X31 + 0x60]
	0x02416C14 BL 0x2C1C9DC
	0x02416C18 LDP X30, X19, [X31 + 0x80]
	0x02416C1C ADD X31, X31, 0x90
	0x02416C20 RET
	0x02416C24 SUB X31, X31, 0xB0
	0x02416C28 STR X30, [X31 + 0x90]
	0x02416C2C STP X20, X19, [X31 + 0xA0]
	0x02416C30 LDR X8, [X1 + 0x20]
	0x02416C34 MOV X19, X1
	0x02416C38 MOV X20, X0
	0x02416C3C LDRB W9, [X8 + 0x135]
	0x02416C40 TBNZ X9, 0x0, 0x2416C50
	0x02416C44 MOV X0, X8
	0x02416C48 BL 0x1C5C684
	0x02416C4C MOV X8, X0
	0x02416C50 LDR X8, [X8 + 0xC0]
	0x02416C54 MOV X0, X20
	0x02416C58 LDR X1, [X8 + 0xA8]
	0x02416C5C ADD X8, X31, 0x0
	0x02416C60 BL 0x2416BB8
	0x02416C64 ADD X0, X31, 0x48
	0x02416C68 ADD X1, X31, 0x0
	0x02416C6C MOVZ W2, 0x48
	0x02416C70 BL 0x3EB1AC0
	0x02416C74 ADD X0, X31, 0x0
	0x02416C78 ADD X1, X31, 0x48
	0x02416C7C MOVZ W2, 0x48
	0x02416C80 BL 0x3EB1AC0
	0x02416C84 LDR X0, [X19 + 0x20]
	0x02416C88 LDRB W8, [X0 + 0x135]
	0x02416C8C TBNZ X8, 0x0, 0x2416C94
	0x02416C90 BL 0x1C5C684
	0x02416C94 LDR X8, [X0 + 0xC0]
	0x02416C98 ADD X1, X31, 0x0
	0x02416C9C LDR X0, [X8 + 0xB0]
	0x02416CA0 BL 0x1C16E04
	0x02416CA4 LDP X20, X19, [X31 + 0xA0]
	0x02416CA8 LDR X30, [X31 + 0x90]
	0x02416CAC ADD X31, X31, 0xB0
	0x02416CB0 RET
	0x02416CB4 SUB X31, X31, 0xB0
	0x02416CB8 STR X30, [X31 + 0x90]
	0x02416CBC STP X20, X19, [X31 + 0xA0]
	0x02416CC0 LDR X8, [X1 + 0x20]
	0x02416CC4 MOV X19, X1
	0x02416CC8 MOV X20, X0
	0x02416CCC LDRB W9, [X8 + 0x135]
	0x02416CD0 TBNZ X9, 0x0, 0x2416CE0
	0x02416CD4 MOV X0, X8
	0x02416CD8 BL 0x1C5C684
	0x02416CDC MOV X8, X0
	0x02416CE0 LDR X8, [X8 + 0xC0]
	0x02416CE4 MOV X0, X20
	0x02416CE8 LDR X1, [X8 + 0xA8]
	0x02416CEC ADD X8, X31, 0x0
	0x02416CF0 BL 0x2416BB8
	0x02416CF4 ADD X0, X31, 0x48
	0x02416CF8 ADD X1, X31, 0x0
	0x02416CFC MOVZ W2, 0x48
	0x02416D00 BL 0x3EB1AC0
	0x02416D04 ADD X0, X31, 0x0

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+160], D8
	003 Move [X31+168], X30
	004 Move [X31+176], X22
	005 Move [X31+184], X21
	006 Move [X31+192], X20
	007 Move [X31+200], X19
	008 Move V8, V0
	009 NotImplemented "Instruction MOVI not yet implemented."
	010 Move [X31+144], X31
	011 Move [X31+112], V0
	012 Move [X31+120], V0
	013 Move [X31+80], V0
	014 Move [X31+88], V0
	015 Move X8, [X2+32]
	016 Move X19, X2
	017 Move X20, X1
	018 Move X21, X0
	019 Move W9, [X8+309]
	020 Move TEMP, X9
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {27}
	024 Move X0, X8
	025 Call 0x1C5D684
	026 Move X8, X0
	027 Move X8, [X8+192]
	028 Move X0, X21
	029 Move X1, [X8+168]
	030 Add X8, X31, 8
	031 Call 0x2417BB8, X0
	032 Add X0, X31, 80
	033 Add X1, X31, 8
	034 Move W2, 72
	035 Call 0x3EB2AC0
	036 Compare X20, 0
	037 JumpIfNotEqual {49}
	038 Move X0, [X19+32]
	039 Move W8, [X0+309]
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {45}
	044 Call 0x1C5D684
	045 Move X8, [X0+192]
	046 Move X0, [X8+192]
	047 Call 0x211D348
	048 Move X20, X0
	049 Move X0, [X19+32]
	050 Move W8, [X0+309]
	051 Move TEMP, X8
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {56}
	055 Call 0x1C5D684
	056 Move X8, [X0+192]
	057 Add X0, X31, 80
	058 Move X1, [X8+264]
	059 Call 0x2C1DA00, X0
	060 Move X8, [X19+32]
	061 Move W21, W0
	062 Move W9, [X8+309]
	063 Move TEMP, X9
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {70}
	067 Move X0, X8
	068 Call 0x1C5D684
	069 Move X8, X0
	070 Move X8, [X8+192]
	071 Move TEMP, X21
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {135}
	075 Move X1, [X8+216]
	076 Add X0, X31, 80
	077 Call 0x2C1DAAC, X0
	078 Move X8, [X19+32]
	079 Move X22, X0
	080 Move W9, [X8+309]
	081 Move TEMP, X9
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfEqual {87}
	085 Move X0, X8
	086 Call 0x1C5D684
	087 Compare X20, 0
	088 JumpIfEqual {147}
	089 Move X0, [X19+32]
	090 Move W8, [X0+309]
	091 Move TEMP, X8
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfEqual {96}
	095 Call 0x1C5D684
	096 Move X8, [X0+192]
	097 Move X1, [X8+184]
	098 Move W8, [X1+309]
	099 Move TEMP, X8
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {106}
	103 Move X0, X1
	104 Call 0x1C5D684
	105 Move X1, X0
	106 Move X8, [X20]
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 Compare X9, 0
	109 JumpIfEqual {116}
	110 Move X10, [X8+176]
	111 Add X10, X10, 8
	112 NotImplemented "Instruction LDUR not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Subtract X9, X9, 1
	115 Add X10, X10, 16
	116 Move X0, X20
	117 Move W2, W31
	118 Call 0x1C5D788
	119 NotImplemented "Instruction LDRSW not yet implemented."
	120 Add X8, X8, X9
	121 Add X0, X8, 312
	122 Move X8, [X0]
	123 Move X1, [X0+8]
	124 Move X9, X22
	125 ShiftRight X9, 32
	126 And X9, X9, 0x7FFFFFFF
	127 Move S0, W9
	128 Move X0, X20
	129 Move V1, V8
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfNotEqual {49}
	135 Move X1, [X8+272]
	136 Add X0, X31, 80
	137 Call 0x2C1DC18, X0
	138 And W0, W21, 1
	139 Move X20, [X31+192]
	140 Move X19, [X31+200]
	141 Move X22, [X31+176]
	142 Move X21, [X31+184]
	143 Move X30, [X31+168]
	144 Move V8, [X31+160]
	145 Add X31, X31, 208
	146 Return X0
	147 Call 0x1C17F20

Method: V Get(K key)

Disassembly:
	0x02416D08 ADD X1, X31, 0x48
	0x02416D0C MOVZ W2, 0x48
	0x02416D10 BL 0x3EB1AC0
	0x02416D14 LDR X0, [X19 + 0x20]
	0x02416D18 LDRB W8, [X0 + 0x135]
	0x02416D1C TBNZ X8, 0x0, 0x2416D24
	0x02416D20 BL 0x1C5C684
	0x02416D24 LDR X8, [X0 + 0xC0]
	0x02416D28 ADD X1, X31, 0x0
	0x02416D2C LDR X0, [X8 + 0xB0]
	0x02416D30 BL 0x1C16E04
	0x02416D34 LDP X20, X19, [X31 + 0xA0]
	0x02416D38 LDR X30, [X31 + 0x90]
	0x02416D3C ADD X31, X31, 0xB0
	0x02416D40 RET
	0x02416D44 STR D8, [X31 - 0x30]!
	0x02416D48 STP X30, X21, [X31 + 0x10]
	0x02416D4C STP X20, X19, [X31 + 0x20]
	0x02416D50 LDR X8, [X2 + 0x20]
	0x02416D54 MOV X20, X2
	0x02416D58 MOV X21, X1
	0x02416D5C MOV X19, X0
	0x02416D60 LDRB W9, [X8 + 0x135]
	0x02416D64 TBNZ X9, 0x0, 0x2416D74
	0x02416D68 MOV X0, X8
	0x02416D6C BL 0x1C5C684
	0x02416D70 MOV X8, X0
	0x02416D74 LDR X8, [X8 + 0xC0]
	0x02416D78 LDR X1, [X8 + 0xE8]
	0x02416D7C LDRB W8, [X1 + 0x135]
	0x02416D80 TBNZ X8, 0x0, 0x2416D90
	0x02416D84 MOV X0, X1
	0x02416D88 BL 0x1C5C684
	0x02416D8C MOV X1, X0
	0x02416D90 CBZ X21, 0x2416E28

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move [X31+12], W31
	007 Move X8, [X2+32]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Move W9, [X8+309]
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X8
	017 Call 0x1C5D684
	018 Move X8, X0
	019 Move X8, [X8+192]
	020 Add X2, X31, 12
	021 Move X0, X21
	022 Move W1, W20
	023 Move X3, [X8+280]
	024 Call 0x2416ED8, X0, X1, X2
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {36}
	029 Move V0, [X31+12]
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X30, [X31+16]
	033 Move X21, [X31+24]
	034 Add X31, X31, 48
	035 Return X0
	036 Move X0, 0x1CE1000
	037 Move X0, [X0+120]
	038 Call 0x1C17D08
	039 Call 0x1C17F10
	040 Move X1, X31
	041 Move X20, X0
	042 Call KeyNotFoundException..ctor, X0
	043 Move X0, X20
	044 Move X1, X19
	045 Call 0x1C17DEC

Method: V Set(K key, V value)

Disassembly:
	0x02416D94 LDR X8, [X21]
	0x02416D98 LDR X9, [X1 + 0x40]
	0x02416D9C MOV X0, X21
	0x02416DA0 LDR X8, [X8 + 0x40]
	0x02416DA4 CMP X8, X9
	0x02416DA8 B.NE 0x2416E2C
	0x02416DAC BL 0x1C16E08
	0x02416DB0 MOV X8, X0
	0x02416DB4 LDR X0, [X20 + 0x20]
	0x02416DB8 LDR W21, [X8]
	0x02416DBC LDR V8, [X8 + 0x4]
	0x02416DC0 ADD X9, X0, 0x135
	0x02416DC4 LDRH W9, [X9]
	0x02416DC8 TBZ X9, 0x0, 0x2416DFC
	0x02416DCC TBZ X9, 0x0, 0x2416E10
	0x02416DD0 TBNZ X9, 0x0, 0x2416DD8
	0x02416DD4 BL 0x1C5C684
	0x02416DD8 LDR X8, [X0 + 0xC0]
	0x02416DDC MOV X0, X19
	0x02416DE0 MOV W1, W21
	0x02416DE4 LDP X20, X19, [X31 + 0x20]
	0x02416DE8 LDR X2, [X8 + 0x1C8]
	0x02416DEC LDP X30, X21, [X31 + 0x10]
	0x02416DF0 MOV V0.16B, V8.16B
	0x02416DF4 LDR V8, [X31], #0x30
	0x02416DF8 B 0x2415E40
	0x02416DFC BL 0x1C5C684
	0x02416E00 LDR X0, [X20 + 0x20]
	0x02416E04 ADD X8, X0, 0x135
	0x02416E08 LDRH W9, [X8]
	0x02416E0C TBNZ X9, 0x0, 0x2416DD0
	0x02416E10 BL 0x1C5C684
	0x02416E14 LDR X0, [X20 + 0x20]
	0x02416E18 ADD X8, X0, 0x135
	0x02416E1C LDRH W9, [X8]
	0x02416E20 TBZ X9, 0x0, 0x2416DD4
	0x02416E24 B 0x2416DD8
	0x02416E28 BL 0x1C16F20
	0x02416E2C BL 0x1C171E0
	0x02416E30 STP X30, X23, [X31 - 0x30]!
	0x02416E34 STP X22, X21, [X31 + 0x10]
	0x02416E38 STP X20, X19, [X31 + 0x20]
	0x02416E3C MOV X21, X0

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X21, X2
	008 Move V8, V0
	009 Move W19, W1
	010 Move W9, [X8+309]
	011 Move X20, X0
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X8
	017 Call 0x1C5D684
	018 Move X8, X0
	019 Move X8, [X8+192]
	020 Move X0, X20
	021 Move W1, W19
	022 Move X2, [X8+160]
	023 Call 0x24175A4, X0, X1
	024 Move X8, [X21+32]
	025 Move W21, W0
	026 Move W9, [X8+309]
	027 Move TEMP, X9
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {34}
	031 Move X0, X8
	032 Call 0x1C5D684
	033 Move X8, X0
	034 Move X8, [X8+192]
	035 Compare W21, 0
	036 JumpIfEqual {42}
	037 Move X2, [X8+304]
	038 Move X0, X20
	039 Move W1, W21
	040 Move V0, V8
	041 Call 0x242FFC0
	042 Move X2, [X8+296]
	043 Move X0, X20
	044 Move W1, W19
	045 Move V0, V8
	046 Call 0x24172A8, X0, X1, X2
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X30, [X31+16]
	050 Move X21, [X31+24]
	051 Move V0, V8
	052 Move V8, [X31+48]
	053 Return X0

Method: System.Boolean Add(K key, V value)

Disassembly:
	0x02416E40 LDR X0, [X1 + 0x20]
	0x02416E44 LDR X19, [X21]
	0x02416E48 MOV X20, X8
	0x02416E4C ADD X9, X0, 0x135
	0x02416E50 LDRH W9, [X9]
	0x02416E54 TBNZ X9, 0x0, 0x2416E6C
	0x02416E58 MOV X22, X1
	0x02416E5C BL 0x1C5C684
	0x02416E60 LDR X0, [X22 + 0x20]
	0x02416E64 ADD X8, X0, 0x135
	0x02416E68 LDRH W9, [X8]
	0x02416E6C LDR W23, [X21 + 0x8]
	0x02416E70 LDP X22, X21, [X21 + 0x28]
	0x02416E74 MOVI V0.2D, 0x0
	0x02416E78 STP V0, V0, [X20 + 0x20]
	0x02416E7C STP V0, V0, [X20]
	0x02416E80 TBNZ X9, 0x0, 0x2416E88
	0x02416E84 BL 0x1C5C684
	0x02416E88 LDR X8, [X0 + 0xC0]
	0x02416E8C MOV X0, X20
	0x02416E90 MOV X1, X19
	0x02416E94 MOV X3, X22
	0x02416E98 LDR X5, [X8 + 0x88]
	0x02416E9C MOV X4, X21
	0x02416EA0 LDP X20, X19, [X31 + 0x20]
	0x02416EA4 LDP X22, X21, [X31 + 0x10]
	0x02416EA8 SUB W2, W23, 0x1
	0x02416EAC LDP X30, X23, [X31], #0x30
	0x02416EB0 B 0x2414278
	0x02416EB4 LDR X8, [X0]
	0x02416EB8 LDR W0, [X8]
	0x02416EBC RET
	0x02416EC0 LDR X8, [X0]
	0x02416EC4 STR W1, [X8]
	0x02416EC8 RET
	0x02416ECC LDR X8, [X0]
	0x02416ED0 LDR W0, [X8 + 0x4]
	0x02416ED4 RET

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X2+32]
	008 Move X21, X2
	009 Move V8, V0
	010 Move W19, W1
	011 Move W9, [X8+309]
	012 Move X20, X0
	013 Move TEMP, X9
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {20}
	017 Move X0, X8
	018 Call 0x1C5D684
	019 Move X8, X0
	020 Move X8, [X8+192]
	021 Move X0, X20
	022 Move W1, W19
	023 Move X2, [X8+160]
	024 Call 0x24175A4, X0, X1
	025 Move W22, W0
	026 Compare W0, 0
	027 JumpIfNotEqual {41}
	028 Move X0, [X21+32]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+192]
	036 Move X0, X20
	037 Move W1, W19
	038 Move V0, V8
	039 Move X2, [X8+296]
	040 Call 0x24172A8, X0, X1, X2
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+8]
	047 NotImplemented "Instruction CSET not yet implemented."
	048 Move V8, [X31+48]
	049 Return X0

Method: System.Boolean TryGet(K key, out V value)

Disassembly:
	0x02416ED8 LDR X8, [X0]
	0x02416EDC STR W1, [X8 + 0x4]
	0x02416EE0 RET
	0x02416EE4 LDR X8, [X0]
	0x02416EE8 LDR W0, [X8 + 0x8]
	0x02416EEC RET
	0x02416EF0 LDR X8, [X0]
	0x02416EF4 STR W1, [X8 + 0x8]
	0x02416EF8 RET
	0x02416EFC STP X30, X21, [X31 - 0x20]!
	0x02416F00 STP X20, X19, [X31 + 0x10]
	0x02416F04 LDR X8, [X1 + 0x20]
	0x02416F08 MOV X20, X1
	0x02416F0C MOV X19, X0
	0x02416F10 ADD X9, X8, 0x135
	0x02416F14 LDRH W9, [X9]
	0x02416F18 TBNZ X9, 0x0, 0x2416F34
	0x02416F1C MOV X0, X8
	0x02416F20 BL 0x1C5C684
	0x02416F24 LDR X8, [X20 + 0x20]
	0x02416F28 ADD X9, X8, 0x135
	0x02416F2C LDRH W9, [X9]
	0x02416F30 B 0x2416F38
	0x02416F34 MOV X0, X8
	0x02416F38 LDR X10, [X0 + 0xC0]
	0x02416F3C LDR X10, [X10 + 0x8]
	0x02416F40 LDR X21, [X10]
	0x02416F44 TBNZ X9, 0x0, 0x2416F54
	0x02416F48 MOV X0, X8
	0x02416F4C BL 0x1C5C684
	0x02416F50 MOV X8, X0
	0x02416F54 LDR X8, [X8 + 0xC0]
	0x02416F58 MOV X0, X19
	0x02416F5C LDR X1, [X8 + 0x8]
	0x02416F60 BLR X21
	0x02416F64 LDR X8, [X20 + 0x20]
	0x02416F68 MOV W21, W0
	0x02416F6C ADD X9, X8, 0x135

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+32]
	007 Move X22, X3
	008 Move X19, X2
	009 Move W21, W1
	010 Move W9, [X8+309]
	011 Move X20, X0
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X8
	017 Call 0x1C5D684
	018 Move X8, X0
	019 Move X8, [X8+192]
	020 Move X0, X20
	021 Move W1, W21
	022 Move X2, [X8+160]
	023 Call 0x24175A4, X0, X1
	024 Move W21, W0
	025 Compare W0, 0
	026 JumpIfEqual {40}
	027 Move X0, [X22+32]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Move X8, [X0+192]
	035 Move X0, X20
	036 Move W1, W21
	037 Move X2, [X8+312]
	038 Call 0x24300A4
	039 Move [X19], S0
	040 Move [X19], W31
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 NotImplemented "Instruction CSET not yet implemented."
	047 Move X30, [X31+48]
	048 Return X0

Method: System.Boolean Remove(K key)

Disassembly:
	0x02416F70 LDRH W9, [X9]
	0x02416F74 TBNZ X9, 0x0, 0x2416F90
	0x02416F78 MOV X0, X8
	0x02416F7C BL 0x1C5C684
	0x02416F80 LDR X8, [X20 + 0x20]
	0x02416F84 ADD X9, X8, 0x135
	0x02416F88 LDRH W9, [X9]
	0x02416F8C B 0x2416F94
	0x02416F90 MOV X0, X8
	0x02416F94 LDR X10, [X0 + 0xC0]
	0x02416F98 LDR X10, [X10 + 0x18]
	0x02416F9C LDR X20, [X10]
	0x02416FA0 TBNZ X9, 0x0, 0x2416FB0
	0x02416FA4 MOV X0, X8
	0x02416FA8 BL 0x1C5C684
	0x02416FAC MOV X8, X0
	0x02416FB0 LDR X8, [X8 + 0xC0]
	0x02416FB4 MOV X0, X19
	0x02416FB8 LDR X1, [X8 + 0x18]
	0x02416FBC BLR X20
	0x02416FC0 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move [X31+12], W31
	005 Move X8, [X2+32]
	006 Move W19, W1
	007 Move X20, X0
	008 Move W9, [X8+309]
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {16}
	013 Move X0, X8
	014 Call 0x1C5D684
	015 Move X8, X0
	016 Move X8, [X8+192]
	017 Add X2, X31, 12
	018 Move X0, X20
	019 Move W1, W19
	020 Move X3, [X8+320]
	021 Call 0x2416FC4, X0, X1, X2
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 And W0, W0, 1
	025 Move X30, [X31+32]
	026 Return X0

Method: System.Boolean Remove(K key, out V value)

Disassembly:
	0x02416FC4 ORN W8, W31, W0, 0x0
	0x02416FC8 ADD W0, W21, W8
	0x02416FCC LDP X30, X21, [X31], #0x20
	0x02416FD0 RET
	0x02416FD4 LDR W8, [X0 + 0x8]
	0x02416FD8 SUB W0, W8, 0x1
	0x02416FDC RET
	0x02416FE0 STP X29, X30, [X31 - 0x60]!
	0x02416FE4 STP X28, X27, [X31 + 0x10]
	0x02416FE8 STP X26, X25, [X31 + 0x20]
	0x02416FEC STP X24, X23, [X31 + 0x30]
	0x02416FF0 STP X22, X21, [X31 + 0x40]
	0x02416FF4 STP X20, X19, [X31 + 0x50]
	0x02416FF8 ADD X29, X31, 0x0
	0x02416FFC SUB X31, X31, 0x20
	0x02417000 MRS X28, 0xC000
	0x02417004 LDR X8, [X28 + 0x28]
	0x02417008 MOV X21, X3
	0x0241700C MOV X19, X2
	0x02417010 MOV X26, X1
	0x02417014 STUR X8, [X29 - 0x8]
	0x02417018 STUR X1, [X29 - 0x20]
	0x0241701C LDR X22, [X3 + 0x20]
	0x02417020 MOV X20, X0
	0x02417024 ADD X8, X22, 0x135
	0x02417028 LDRH W8, [X8]
	0x0241702C TBNZ X8, 0x0, 0x2417048
	0x02417030 MOV X0, X22
	0x02417034 BL 0x1C5C684
	0x02417038 LDR X22, [X21 + 0x20]
	0x0241703C ADD X8, X22, 0x135
	0x02417040 LDRH W8, [X8]
	0x02417044 B 0x241704C
	0x02417048 MOV X0, X22
	0x0241704C LDR X9, [X0 + 0xC0]
	0x02417050 LDR X9, [X9 + 0x20]
	0x02417054 LDR W27, [X9 + 0xFC]
	0x02417058 TBNZ X8, 0x0, 0x2417074
	0x0241705C MOV X0, X22
	0x02417060 BL 0x1C5C684
	0x02417064 LDR X22, [X21 + 0x20]
	0x02417068 ADD X8, X22, 0x135
	0x0241706C LDRH W8, [X8]
	0x02417070 B 0x2417078
	0x02417074 MOV X0, X22
	0x02417078 LDR X9, [X0 + 0xC0]
	0x0241707C ADD X10, X27, 0xF
	0x02417080 AND X10, X10, 0x1FFFFFFFF
	0x02417084 LDR X9, [X9 + 0x30]
	0x02417088 LDR W23, [X9 + 0xFC]
	0x0241708C ADD X9, X31, 0x0
	0x02417090 SUB X25, X9, X10
	0x02417094 ADD X31, X25, 0x0
	0x02417098 ADD X10, X23, 0xF
	0x0241709C ADD X9, X31, 0x0
	0x024170A0 AND X10, X10, 0x1FFFFFFFF
	0x024170A4 SUB X24, X9, X10
	0x024170A8 ADD X31, X24, 0x0
	0x024170AC TBNZ X8, 0x0, 0x24170C0
	0x024170B0 MOV X0, X22
	0x024170B4 BL 0x1C5C684
	0x024170B8 LDR X22, [X21 + 0x20]
	0x024170BC B 0x24170C4
	0x024170C0 MOV X0, X22
	0x024170C4 LDR X8, [X0 + 0xC0]
	0x024170C8 MOV X0, X25
	0x024170CC MOV X2, X27
	0x024170D0 LDR X8, [X8 + 0x20]
	0x024170D4 LDR W8, [X8 + 0x28]
	0x024170D8 CMP W8, 0x0
	0x024170DC SUB X8, X29, 0x20
	0x024170E0 CSEL X1, X26, X8, LT
	0x024170E4 BL 0x3EB1AC0
	0x024170E8 ADD X8, X22, 0x135
	0x024170EC LDRH W8, [X8]
	0x024170F0 TBNZ X8, 0x0, 0x241710C
	0x024170F4 MOV X0, X22
	0x024170F8 BL 0x1C5C684
	0x024170FC LDR X22, [X21 + 0x20]
	0x02417100 ADD X8, X22, 0x135
	0x02417104 LDRH W8, [X8]
	0x02417108 B 0x2417110
	0x0241710C MOV X0, X22
	0x02417110 LDR X9, [X0 + 0xC0]
	0x02417114 LDR X9, [X9 + 0x28]
	0x02417118 LDR X26, [X9]
	0x0241711C TBNZ X8, 0x0, 0x2417138
	0x02417120 MOV X0, X22
	0x02417124 BL 0x1C5C684
	0x02417128 LDR X22, [X21 + 0x20]
	0x0241712C ADD X8, X22, 0x135
	0x02417130 LDRH W8, [X8]
	0x02417134 B 0x241713C
	0x02417138 MOV X0, X22
	0x0241713C LDR X9, [X0 + 0xC0]
	0x02417140 LDR X21, [X9 + 0x28]
	0x02417144 TBNZ X8, 0x0, 0x2417154
	0x02417148 MOV X0, X22
	0x0241714C BL 0x1C5C684
	0x02417150 MOV X22, X0
	0x02417154 LDR X8, [X22 + 0xC0]
	0x02417158 LDR X8, [X8 + 0x20]
	0x0241715C LDR W8, [X8 + 0x28]
	0x02417160 TBNZ X8, 0x1F, 0x2417168
	0x02417164 LDR X25, [X25]
	0x02417168 STP X25, X24, [X29 - 0x18]
	0x0241716C LDR X8, [X21 + 0x10]
	0x02417170 SUB X3, X29, 0x18
	0x02417174 MOV X0, X26
	0x02417178 MOV X1, X21
	0x0241717C MOV X2, X20
	0x02417180 MOV X4, X24
	0x02417184 BLR X8
	0x02417188 MOV X0, X19
	0x0241718C MOV X1, X24
	0x02417190 MOV X2, X23
	0x02417194 BL 0x3EB1AC0
	0x02417198 LDR X8, [X28 + 0x28]
	0x0241719C LDUR X9, [X29 - 0x8]
	0x024171A0 CMP X8, X9
	0x024171A4 B.NE 0x24171C8
	0x024171A8 ADD X31, X29, 0x0
	0x024171AC LDP X20, X19, [X31 + 0x50]
	0x024171B0 LDP X22, X21, [X31 + 0x40]
	0x024171B4 LDP X24, X23, [X31 + 0x30]
	0x024171B8 LDP X26, X25, [X31 + 0x20]
	0x024171BC LDP X28, X27, [X31 + 0x10]
	0x024171C0 LDP X29, X30, [X31], #0x60
	0x024171C4 RET
	0x024171C8 BL 0x3EB1B20
	0x024171CC STP X29, X30, [X31 - 0x60]!
	0x024171D0 STP X28, X27, [X31 + 0x10]
	0x024171D4 STP X26, X25, [X31 + 0x20]
	0x024171D8 STP X24, X23, [X31 + 0x30]
	0x024171DC STP X22, X21, [X31 + 0x40]
	0x024171E0 STP X20, X19, [X31 + 0x50]
	0x024171E4 ADD X29, X31, 0x0
	0x024171E8 SUB X31, X31, 0x40
	0x024171EC MRS X19, 0xC000
	0x024171F0 LDR X8, [X19 + 0x28]
	0x024171F4 MOV X20, X3
	0x024171F8 MOV X25, X2
	0x024171FC MOV X26, X1
	0x02417200 STUR X8, [X29 - 0x8]
	0x02417204 STP X2, X1, [X29 - 0x30]
	0x02417208 LDR X24, [X3 + 0x20]
	0x0241720C STUR X0, [X29 - 0x38]
	0x02417210 ADD X8, X24, 0x135
	0x02417214 LDRH W8, [X8]
	0x02417218 TBNZ X8, 0x0, 0x2417234
	0x0241721C MOV X0, X24
	0x02417220 BL 0x1C5C684
	0x02417224 LDR X24, [X20 + 0x20]
	0x02417228 ADD X8, X24, 0x135
	0x0241722C LDRH W8, [X8]
	0x02417230 B 0x2417238
	0x02417234 MOV X0, X24
	0x02417238 LDR X9, [X0 + 0xC0]
	0x0241723C LDR X9, [X9 + 0x20]
	0x02417240 LDR W28, [X9 + 0xFC]
	0x02417244 TBNZ X8, 0x0, 0x2417260
	0x02417248 MOV X0, X24
	0x0241724C BL 0x1C5C684
	0x02417250 LDR X24, [X20 + 0x20]
	0x02417254 ADD X8, X24, 0x135
	0x02417258 LDRH W8, [X8]
	0x0241725C B 0x2417264
	0x02417260 MOV X0, X24
	0x02417264 LDR X9, [X0 + 0xC0]
	0x02417268 ADD X10, X28, 0xF
	0x0241726C AND X10, X10, 0x1FFFFFFFF
	0x02417270 LDR X9, [X9 + 0x30]
	0x02417274 LDR W27, [X9 + 0xFC]
	0x02417278 ADD X9, X31, 0x0
	0x0241727C SUB X21, X9, X10
	0x02417280 ADD X31, X21, 0x0
	0x02417284 ADD X10, X27, 0xF
	0x02417288 ADD X9, X31, 0x0
	0x0241728C AND X10, X10, 0x1FFFFFFFF
	0x02417290 SUB X23, X9, X10
	0x02417294 ADD X31, X23, 0x0
	0x02417298 ADD X9, X31, 0x0
	0x0241729C SUB X22, X9, X10
	0x024172A0 ADD X31, X22, 0x0
	0x024172A4 TBNZ X8, 0x0, 0x24172B8

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, X0
	011 Move X0, [X3+32]
	012 Move X24, [X19]
	013 NotImplemented "Instruction LDRSW not yet implemented."
	014 Move X20, X3
	015 Move W8, [X0+309]
	016 Move X21, X2
	017 Move W23, W1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Move X22, [X19+40]
	024 Compare X22, 0
	025 JumpIfEqual {243}
	026 Move X8, [X0+192]
	027 Move X8, [X8+328]
	028 Move X0, [X8+32]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+192]
	036 Move X1, [X8+64]
	037 Move W8, [X1+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {45}
	042 Move X0, X1
	043 Call 0x1C5D684
	044 Move X1, X0
	045 Move X8, [X22]
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Compare X9, 0
	048 JumpIfEqual {55}
	049 Move X10, [X8+176]
	050 Add X10, X10, 8
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X9, X9, 1
	054 Add X10, X10, 16
	055 Move W2, 4
	056 Move X0, X22
	057 Call 0x1C5D788
	058 Move W9, [X10]
	059 Add W9, W9, 4
	060 Add X8, X8, W9
	061 Add X0, X8, 312
	062 Move X8, [X0]
	063 Move X2, [X0+8]
	064 Move X0, X22
	065 Move W1, W23
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X8, [X20+32]
	068 Move W22, W0
	069 Move W9, [X8+309]
	070 Move TEMP, X9
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {76}
	074 Move X0, X8
	075 Call 0x1C5D684
	076 Move W8, [X19+8]
	077 NotImplemented "Instruction UDIV not yet implemented."
	078 NotImplemented "Instruction MSUB not yet implemented."
	079 Add X8, X8, X25
	080 Add X25, X24, X8
	081 Move W8, [X25]
	082 Compare W8, 0
	083 JumpIfEqual {129}
	084 Move W26, W31
	085 Move X0, [X20+32]
	086 Move X24, [X19+56]
	087 Move W22, W8
	088 Move W9, [X0+309]
	089 Move TEMP, X9
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {94}
	093 Call 0x1C5D684
	094 Move X8, [X0+192]
	095 Move X0, X19
	096 Move W1, W22
	097 Move X2, [X8+344]
	098 Call 0x2430174
	099 Compare X24, 0
	100 JumpIfEqual {243}
	101 Move X8, [X24]
	102 Move W1, W0
	103 Move X0, X24
	104 Move W2, W23
	105 Move X9, [X8+440]
	106 Move X3, [X8+448]
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfEqual {131}
	112 Move X0, [X20+32]
	113 Move W8, [X0+309]
	114 Move TEMP, X8
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfEqual {119}
	118 Call 0x1C5D684
	119 Move W8, [X19+24]
	120 Move W9, [X19+12]
	121 NotImplemented "Instruction LDRSW not yet implemented."
	122 Move X11, [X19]
	123 Move W26, W22
	124 NotImplemented "Instruction MADD not yet implemented."
	125 Add X8, X10, W8
	126 Move W8, [X11]
	127 Compare W8, 0
	128 JumpIfNotEqual {85}
	129 Move W0, W31
	130 Move [X21], W31
	131 Move X0, [X20+32]
	132 Move W8, [X0+309]
	133 Move TEMP, X8
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfEqual {138}
	137 Call 0x1C5D684
	138 Move W10, [X19+24]
	139 Move W11, [X19+12]
	140 NotImplemented "Instruction LDRSW not yet implemented."
	141 Move X8, [X19]
	142 NotImplemented "Instruction MADD not yet implemented."
	143 Add X12, X9, W12
	144 Move W23, [X8]
	145 Compare W26, 0
	146 JumpIfEqual {161}
	147 Move X0, [X20+32]
	148 Move W12, [X0+309]
	149 Move TEMP, X12
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfEqual {158}
	153 Call 0x1C5D684
	154 Move X8, [X19]
	155 NotImplemented "Instruction LDRSW not yet implemented."
	156 Move W10, [X19+24]
	157 Move W11, [X19+12]
	158 NotImplemented "Instruction MADD not yet implemented."
	159 Add X9, X9, W10
	160 Add X25, X8, X9
	161 Move [X25], W23
	162 Move X0, [X20+32]
	163 Move W8, [X0+309]
	164 Move TEMP, X8
	165 And TEMP, TEMP, 1
	166 Compare TEMP, 1
	167 JumpIfEqual {169}
	168 Call 0x1C5D684
	169 Move X8, [X0+192]
	170 Move X0, X19
	171 Move W1, W22
	172 Move X2, [X8+312]
	173 Call 0x24300A4
	174 Move [X21], S0
	175 Move X0, [X20+32]
	176 Add X8, X0, 309
	177 NotImplemented "Instruction LDRH not yet implemented."
	178 Move TEMP, X9
	179 And TEMP, TEMP, 1
	180 Compare TEMP, 1
	181 JumpIfEqual {186}
	182 Call 0x1C5D684
	183 Move X0, [X20+32]
	184 Add X8, X0, 309
	185 NotImplemented "Instruction LDRH not yet implemented."
	186 Move X8, [X19]
	187 Move W21, [X8]
	188 Move TEMP, X9
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfEqual {195}
	192 Call 0x1C5D684
	193 Move X8, [X19]
	194 Move X0, [X20+32]
	195 Move W9, [X19+24]
	196 Move W10, [X19+12]
	197 NotImplemented "Instruction LDRSW not yet implemented."
	198 NotImplemented "Instruction MADD not yet implemented."
	199 Add X9, X11, W9
	200 Move [X8], W21
	201 Move W9, [X0+309]
	202 Move TEMP, X9
	203 And TEMP, TEMP, 1
	204 Compare TEMP, 1
	205 JumpIfEqual {209}
	206 Call 0x1C5D684
	207 Move X8, [X19]
	208 Move X0, [X20+32]
	209 Move [X8], W22
	210 Add X9, X0, 309
	211 NotImplemented "Instruction LDRH not yet implemented."
	212 Move TEMP, X9
	213 And TEMP, TEMP, 1
	214 Compare TEMP, 1
	215 JumpIfEqual {221}
	216 Call 0x1C5D684
	217 Move X0, [X20+32]
	218 Move X8, [X19]
	219 Add X9, X0, 309
	220 NotImplemented "Instruction LDRH not yet implemented."
	221 Add X8, X8, 4
	222 Move W10, [X8]
	223 Add W20, W10, 1
	224 Move TEMP, X9
	225 And TEMP, TEMP, 1
	226 Compare TEMP, 1
	227 JumpIfEqual {231}
	228 Call 0x1C5D684
	229 Move X8, [X19]
	230 Add X8, X8, 4
	231 Move [X8], W20
	232 Move W0, 1
	233 Move X20, [X31+64]
	234 Move X19, [X31+72]
	235 Move X22, [X31+48]
	236 Move X21, [X31+56]
	237 Move X24, [X31+32]
	238 Move X23, [X31+40]
	239 Move X26, [X31+16]
	240 Move X25, [X31+24]
	241 Move X30, [X31+80]
	242 Return X0
	243 Call 0x1C17F20

Method: System.Int32 Insert(K key, V val)

Disassembly:
	0x024172A8 MOV X0, X24
	0x024172AC BL 0x1C5C684
	0x024172B0 LDR X24, [X20 + 0x20]
	0x024172B4 B 0x24172BC
	0x024172B8 MOV X0, X24
	0x024172BC LDR X8, [X0 + 0xC0]
	0x024172C0 MOV X0, X21
	0x024172C4 MOV X2, X28
	0x024172C8 LDR X8, [X8 + 0x20]
	0x024172CC LDR W8, [X8 + 0x28]
	0x024172D0 CMP W8, 0x0
	0x024172D4 SUB X8, X29, 0x28
	0x024172D8 CSEL X1, X26, X8, LT
	0x024172DC BL 0x3EB1AC0
	0x024172E0 LDRB W8, [X24 + 0x135]
	0x024172E4 TBNZ X8, 0x0, 0x24172F8
	0x024172E8 MOV X0, X24
	0x024172EC BL 0x1C5C684
	0x024172F0 LDR X24, [X20 + 0x20]
	0x024172F4 B 0x24172FC
	0x024172F8 MOV X0, X24
	0x024172FC LDR X8, [X0 + 0xC0]
	0x02417300 MOV X0, X23
	0x02417304 MOV X2, X27
	0x02417308 LDR X8, [X8 + 0x30]
	0x0241730C LDR W8, [X8 + 0x28]
	0x02417310 CMP W8, 0x0
	0x02417314 SUB X8, X29, 0x30
	0x02417318 CSEL X1, X25, X8, LT
	0x0241731C BL 0x3EB1AC0
	0x02417320 ADD X8, X24, 0x135
	0x02417324 LDRH W8, [X8]
	0x02417328 TBNZ X8, 0x0, 0x2417344
	0x0241732C MOV X0, X24
	0x02417330 BL 0x1C5C684
	0x02417334 LDR X24, [X20 + 0x20]
	0x02417338 ADD X8, X24, 0x135
	0x0241733C LDRH W8, [X8]
	0x02417340 B 0x2417348
	0x02417344 MOV X0, X24
	0x02417348 LDR X9, [X0 + 0xC0]
	0x0241734C LDR X9, [X9 + 0x38]
	0x02417350 LDR X25, [X9]
	0x02417354 TBNZ X8, 0x0, 0x2417370
	0x02417358 MOV X0, X24
	0x0241735C BL 0x1C5C684
	0x02417360 LDR X24, [X20 + 0x20]
	0x02417364 ADD X8, X24, 0x135
	0x02417368 LDRH W8, [X8]
	0x0241736C B 0x2417374
	0x02417370 MOV X0, X24
	0x02417374 LDR X9, [X0 + 0xC0]
	0x02417378 LDR X26, [X9 + 0x38]
	0x0241737C TBNZ X8, 0x0, 0x241738C
	0x02417380 MOV X0, X24
	0x02417384 BL 0x1C5C684
	0x02417388 MOV X24, X0
	0x0241738C LDR X8, [X24 + 0xC0]
	0x02417390 LDR X8, [X8 + 0x20]
	0x02417394 LDR W8, [X8 + 0x28]
	0x02417398 TBNZ X8, 0x1F, 0x24173A0
	0x0241739C LDR X21, [X21]
	0x024173A0 LDR X0, [X20 + 0x20]
	0x024173A4 LDRB W8, [X0 + 0x135]
	0x024173A8 TBNZ X8, 0x0, 0x24173B0
	0x024173AC BL 0x1C5C684
	0x024173B0 LDR X8, [X0 + 0xC0]
	0x024173B4 LDR X8, [X8 + 0x30]
	0x024173B8 LDR W8, [X8 + 0x28]
	0x024173BC TBNZ X8, 0x1F, 0x24173C4
	0x024173C0 LDR X23, [X23]
	0x024173C4 STP X21, X23, [X29 - 0x20]
	0x024173C8 STUR X22, [X29 - 0x10]
	0x024173CC LDR X8, [X26 + 0x10]
	0x024173D0 LDUR X2, [X29 - 0x38]
	0x024173D4 SUB X3, X29, 0x20
	0x024173D8 MOV X0, X25
	0x024173DC MOV X1, X26
	0x024173E0 MOV X4, X22
	0x024173E4 BLR X8
	0x024173E8 LDR X8, [X19 + 0x28]
	0x024173EC LDUR X9, [X29 - 0x8]
	0x024173F0 CMP X8, X9
	0x024173F4 B.NE 0x2417418
	0x024173F8 ADD X31, X29, 0x0
	0x024173FC LDP X20, X19, [X31 + 0x50]
	0x02417400 LDP X22, X21, [X31 + 0x40]
	0x02417404 LDP X24, X23, [X31 + 0x30]
	0x02417408 LDP X26, X25, [X31 + 0x20]
	0x0241740C LDP X28, X27, [X31 + 0x10]
	0x02417410 LDP X29, X30, [X31], #0x60
	0x02417414 RET
	0x02417418 BL 0x3EB1B20
	0x0241741C SUB X31, X31, 0x50
	0x02417420 STP X30, X25, [X31 + 0x10]
	0x02417424 STP X24, X23, [X31 + 0x20]
	0x02417428 STP X22, X21, [X31 + 0x30]
	0x0241742C STP X20, X19, [X31 + 0x40]
	0x02417430 CBZ X3, 0x24176D0
	0x02417434 MOV X19, X0
	0x02417438 LDR X0, [X5 + 0x20]
	0x0241743C MOV X20, X5
	0x02417440 MOV X22, X4
	0x02417444 MOV X24, X3
	0x02417448 LDRB W8, [X0 + 0x135]
	0x0241744C MOV W21, W2
	0x02417450 MOV X23, X1
	0x02417454 TBNZ X8, 0x0, 0x241745C
	0x02417458 BL 0x1C5C684
	0x0241745C LDR X8, [X0 + 0xC0]
	0x02417460 LDR X1, [X8 + 0x40]
	0x02417464 LDRB W8, [X1 + 0x135]
	0x02417468 TBNZ X8, 0x0, 0x2417478
	0x0241746C MOV X0, X1
	0x02417470 BL 0x1C5C684
	0x02417474 MOV X1, X0
	0x02417478 LDR X8, [X24]
	0x0241747C LDRH W9, [X8 + 0x12E]
	0x02417480 CBZ X9, 0x24174A4
	0x02417484 LDR X10, [X8 + 0xB0]
	0x02417488 ADD X10, X10, 0x8
	0x0241748C LDUR X11, [X10 - 0x8]
	0x02417490 CMP X11, X1
	0x02417494 B.EQ 0x24174B4
	0x02417498 SUBS X9, X9, 0x1
	0x0241749C ADD X10, X10, 0x10
	0x024174A0 B.NE 0x241748C
	0x024174A4 MOVZ W2, 0x2
	0x024174A8 MOV X0, X24
	0x024174AC BL 0x1C5C788
	0x024174B0 B 0x24174C4
	0x024174B4 LDR W9, [X10]
	0x024174B8 ADD W9, W9, 0x2
	0x024174BC ADD X8, X8, W9, 0x4, SXTW
	0x024174C0 ADD X0, X8, 0x138
	0x024174C4 LDP X8, X1, [X0]
	0x024174C8 MOV X0, X24
	0x024174CC BLR X8
	0x024174D0 CBZ X22, 0x24176D0
	0x024174D4 MOV W25, W0
	0x024174D8 LDR X0, [X20 + 0x20]
	0x024174DC LDRB W8, [X0 + 0x135]
	0x024174E0 TBNZ X8, 0x0, 0x24174E8
	0x024174E4 BL 0x1C5C684
	0x024174E8 LDR X8, [X0 + 0xC0]
	0x024174EC LDR X1, [X8 + 0x50]
	0x024174F0 LDRB W8, [X1 + 0x135]
	0x024174F4 TBNZ X8, 0x0, 0x2417504
	0x024174F8 MOV X0, X1
	0x024174FC BL 0x1C5C684
	0x02417500 MOV X1, X0
	0x02417504 LDR X8, [X22]
	0x02417508 LDRH W9, [X8 + 0x12E]
	0x0241750C CBZ X9, 0x2417530
	0x02417510 LDR X10, [X8 + 0xB0]
	0x02417514 ADD X10, X10, 0x8
	0x02417518 LDUR X11, [X10 - 0x8]
	0x0241751C CMP X11, X1
	0x02417520 B.EQ 0x2417540
	0x02417524 SUBS X9, X9, 0x1
	0x02417528 ADD X10, X10, 0x10
	0x0241752C B.NE 0x2417518
	0x02417530 MOVZ W2, 0x2
	0x02417534 MOV X0, X22
	0x02417538 BL 0x1C5C788
	0x0241753C B 0x2417550
	0x02417540 LDR W9, [X10]
	0x02417544 ADD W9, W9, 0x2
	0x02417548 ADD X8, X8, W9, 0x4, SXTW
	0x0241754C ADD X0, X8, 0x138
	0x02417550 LDP X8, X1, [X0]
	0x02417554 MOV X0, X22
	0x02417558 BLR X8
	0x0241755C ADRP X8, 0xFFFFFFFFFE6D6000
	0x02417560 LDR V0, [X8 + 0x640]
	0x02417564 ADD W9, W25, 0x1
	0x02417568 MOVZ W10, 0x3
	0x0241756C ADD W11, W21, 0x3
	0x02417570 ADD W8, W0, W9
	0x02417574 STP X24, X22, [X19 + 0x28]
	0x02417578 STR X23, [X19]
	0x0241757C STR W21, [X19 + 0x8]
	0x02417580 STP W9, W8, [X19 + 0x14]
	0x02417584 STUR D0, [X19 + 0xC]
	0x02417588 STP W10, W11, [X19 + 0x1C]
	0x0241758C LDR X8, [X20 + 0x20]
	0x02417590 ADD X9, X8, 0x135
	0x02417594 LDRH W9, [X9]
	0x02417598 TBNZ X9, 0x0, 0x24175B4
	0x0241759C MOV X0, X8
	0x024175A0 BL 0x1C5C684

ISIL:
	001 Move [X31-96], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0x1FC3000
	013 Move W8, [X22+2495]
	014 Move X20, X2
	015 Move V8, V0
	016 Move W21, W1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x1D06000
	023 Move X0, [X0+3160]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+2495], W8
	027 Move X0, [X20+32]
	028 Add X8, X0, 309
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {38}
	034 Call 0x1C5D684
	035 Move X0, [X20+32]
	036 Add X8, X0, 309
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Move X24, [X19]
	039 Move W22, [X24]
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {46}
	044 Call 0x1C5D684
	045 Move X24, [X19]
	046 Compare W22, 0
	047 JumpIfEqual {95}
	048 Move X0, [X20+32]
	049 Move W22, [X24]
	050 Add X8, X0, 309
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {61}
	056 Call 0x1C5D684
	057 Move X0, [X20+32]
	058 Move X24, [X19]
	059 Add X8, X0, 309
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Move W9, [X19+24]
	062 Move W10, [X19+12]
	063 NotImplemented "Instruction LDRSW not yet implemented."
	064 NotImplemented "Instruction MADD not yet implemented."
	065 Add X9, X11, W9
	066 Move W23, [X24]
	067 Move TEMP, X8
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {74}
	071 Call 0x1C5D684
	072 Move X24, [X19]
	073 Move X0, [X20+32]
	074 Move [X24], W23
	075 Add X8, X0, 309
	076 NotImplemented "Instruction LDRH not yet implemented."
	077 Move TEMP, X8
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {86}
	081 Call 0x1C5D684
	082 Move X0, [X20+32]
	083 Move X24, [X19]
	084 Add X8, X0, 309
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Move W9, [X24+4]
	087 Subtract W23, W9, 1
	088 Move TEMP, X8
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {94}
	092 Call 0x1C5D684
	093 Move X24, [X19]
	094 Move [X24+4], W23
	095 Move W8, [X24+8]
	096 Move W9, [X19+8]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X8, 0x1D06000
	099 Move X8, [X8+3160]
	100 Move X1, X31
	101 Move X0, [X8]
	102 Call Assert.AlwaysFail, X0
	103 Move X0, [X20+32]
	104 Add X8, X0, 309
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Move TEMP, X8
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfEqual {114}
	110 Call 0x1C5D684
	111 Move X0, [X20+32]
	112 Add X8, X0, 309
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Move X24, [X19]
	115 Move W22, [X24+8]
	116 Add W23, W22, 1
	117 Move TEMP, X8
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfEqual {123}
	121 Call 0x1C5D684
	122 Move X24, [X19]
	123 Move [X24+8], W23
	124 Move X0, [X20+32]
	125 NotImplemented "Instruction LDRSW not yet implemented."
	126 Move W8, [X0+309]
	127 Move TEMP, X8
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfEqual {132}
	131 Call 0x1C5D684
	132 Move X23, [X19+40]
	133 Compare X23, 0
	134 JumpIfEqual {248}
	135 Move X8, [X0+192]
	136 Move X8, [X8+328]
	137 Move X0, [X8+32]
	138 Move W8, [X0+309]
	139 Move TEMP, X8
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfEqual {144}
	143 Call 0x1C5D684
	144 Move X8, [X0+192]
	145 Move X1, [X8+64]
	146 Move W8, [X1+309]
	147 Move TEMP, X8
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfEqual {154}
	151 Move X0, X1
	152 Call 0x1C5D684
	153 Move X1, X0
	154 Move X8, [X23]
	155 NotImplemented "Instruction LDRH not yet implemented."
	156 Compare X9, 0
	157 JumpIfEqual {164}
	158 Move X10, [X8+176]
	159 Add X10, X10, 8
	160 NotImplemented "Instruction LDUR not yet implemented."
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Subtract X9, X9, 1
	163 Add X10, X10, 16
	164 Move W2, 4
	165 Move X0, X23
	166 Call 0x1C5D788
	167 Move W9, [X10]
	168 Add W9, W9, 4
	169 Add X8, X8, W9
	170 Add X0, X8, 312
	171 Move X8, [X0]
	172 Move X2, [X0+8]
	173 Move X0, X23
	174 Move W1, W21
	175 NotImplemented "Instruction BLR not yet implemented."
	176 Move X8, [X20+32]
	177 Move W23, W0
	178 Add X9, X8, 309
	179 NotImplemented "Instruction LDRH not yet implemented."
	180 Move TEMP, X9
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfEqual {189}
	184 Move X0, X8
	185 Call 0x1C5D684
	186 Move X8, [X20+32]
	187 Add X9, X8, 309
	188 NotImplemented "Instruction LDRH not yet implemented."
	189 Move W26, [X19+8]
	190 NotImplemented "Instruction UDIV not yet implemented."
	191 Move TEMP, X9
	192 And TEMP, TEMP, 1
	193 Compare TEMP, 1
	194 JumpIfEqual {198}
	195 Move X0, X8
	196 Call 0x1C5D684
	197 Move X8, X0
	198 Move X8, [X8+192]
	199 Move X0, X19
	200 Move W1, W22
	201 Move W2, W21
	202 Move X3, [X8+384]
	203 NotImplemented "Instruction MSUB not yet implemented."
	204 Call 0x2430248
	205 Move X0, [X20+32]
	206 Move W8, [X0+309]
	207 Move TEMP, X8
	208 And TEMP, TEMP, 1
	209 Compare TEMP, 1
	210 JumpIfEqual {212}
	211 Call 0x1C5D684
	212 Move X8, [X0+192]
	213 Move X0, X19
	214 Move W1, W22
	215 Move V0, V8
	216 Move X2, [X8+304]
	217 Call 0x242FFC0
	218 Move X0, [X20+32]
	219 Add X20, X25, W23
	220 Move W21, [X24]
	221 Move W8, [X0+309]
	222 Move TEMP, X8
	223 And TEMP, TEMP, 1
	224 Compare TEMP, 1
	225 JumpIfEqual {227}
	226 Call 0x1C5D684
	227 Move W8, [X19+24]
	228 Move W9, [X19+12]
	229 NotImplemented "Instruction LDRSW not yet implemented."
	230 Move X11, [X19]
	231 Move W0, W22
	232 NotImplemented "Instruction MADD not yet implemented."
	233 Add X8, X10, W8
	234 Move [X11], W21
	235 Move [X24], W22
	236 Move X20, [X31+80]
	237 Move X19, [X31+88]
	238 Move X22, [X31+64]
	239 Move X21, [X31+72]
	240 Move X24, [X31+48]
	241 Move X23, [X31+56]
	242 Move X26, [X31+32]
	243 Move X25, [X31+40]
	244 Move X30, [X31+16]
	245 Move X27, [X31+24]
	246 Move V8, [X31+96]
	247 Return X0
	248 Call 0x1C17F20

Method: System.Int32 Find(K key)

Disassembly:
	0x024175A4 LDR X8, [X20 + 0x20]
	0x024175A8 ADD X9, X8, 0x135
	0x024175AC LDRH W9, [X9]
	0x024175B0 B 0x24175B8
	0x024175B4 MOV X0, X8
	0x024175B8 LDR X10, [X0 + 0xC0]
	0x024175BC LDR X10, [X10 + 0x60]
	0x024175C0 LDR X21, [X10]
	0x024175C4 TBNZ X9, 0x0, 0x24175D4
	0x024175C8 MOV X0, X8
	0x024175CC BL 0x1C5C684
	0x024175D0 MOV X8, X0
	0x024175D4 LDR X8, [X8 + 0xC0]
	0x024175D8 LDR X0, [X8 + 0x60]
	0x024175DC BLR X21
	0x024175E0 STR X0, [X19 + 0x38]
	0x024175E4 LDR X8, [X20 + 0x20]
	0x024175E8 ADD X9, X8, 0x135
	0x024175EC LDRH W9, [X9]
	0x024175F0 TBNZ X9, 0x0, 0x241760C
	0x024175F4 MOV X0, X8
	0x024175F8 BL 0x1C5C684
	0x024175FC LDR X8, [X20 + 0x20]
	0x02417600 ADD X9, X8, 0x135
	0x02417604 LDRH W9, [X9]
	0x02417608 B 0x2417610
	0x0241760C MOV X0, X8
	0x02417610 LDR X10, [X0 + 0xC0]
	0x02417614 LDR X10, [X10 + 0x8]
	0x02417618 LDR X21, [X10]
	0x0241761C TBNZ X9, 0x0, 0x241762C
	0x02417620 MOV X0, X8
	0x02417624 BL 0x1C5C684
	0x02417628 MOV X8, X0
	0x0241762C LDR X8, [X8 + 0xC0]
	0x02417630 MOV X0, X19
	0x02417634 LDR X1, [X8 + 0x8]
	0x02417638 BLR X21
	0x0241763C CBZ W0, 0x2417658
	0x02417640 LDP X20, X19, [X31 + 0x40]
	0x02417644 LDP X22, X21, [X31 + 0x30]
	0x02417648 LDP X24, X23, [X31 + 0x20]
	0x0241764C LDP X30, X25, [X31 + 0x10]
	0x02417650 ADD X31, X31, 0x50
	0x02417654 RET
	0x02417658 LDR X8, [X20 + 0x20]
	0x0241765C ADD X9, X8, 0x135
	0x02417660 LDRH W9, [X9]
	0x02417664 TBNZ X9, 0x0, 0x2417680
	0x02417668 MOV X0, X8
	0x0241766C BL 0x1C5C684
	0x02417670 LDR X8, [X20 + 0x20]
	0x02417674 ADD X9, X8, 0x135
	0x02417678 LDRH W9, [X9]
	0x0241767C B 0x2417684
	0x02417680 MOV X0, X8
	0x02417684 LDR X10, [X0 + 0xC0]
	0x02417688 LDR X10, [X10 + 0x78]
	0x0241768C LDR X3, [X10]
	0x02417690 TBNZ X9, 0x0, 0x24176A8
	0x02417694 MOV X0, X8
	0x02417698 STR X3, [X31 + 0x8]
	0x0241769C BL 0x1C5C684
	0x024176A0 LDR X3, [X31 + 0x8]
	0x024176A4 MOV X8, X0
	0x024176A8 LDR X8, [X8 + 0xC0]
	0x024176AC MOV X0, X19
	0x024176B0 LDP X20, X19, [X31 + 0x40]
	0x024176B4 LDP X22, X21, [X31 + 0x30]
	0x024176B8 LDR X2, [X8 + 0x78]
	0x024176BC LDP X24, X23, [X31 + 0x20]
	0x024176C0 LDP X30, X25, [X31 + 0x10]
	0x024176C4 MOVZ W1, 0x1
	0x024176C8 ADD X31, X31, 0x50
	0x024176CC BR X3
	0x024176D0 BL 0x1C16F20
	0x024176D4 STP X30, X23, [X31 - 0x30]!
	0x024176D8 STP X22, X21, [X31 + 0x10]
	0x024176DC STP X20, X19, [X31 + 0x20]
	0x024176E0 MOVI V0.2D, 0x0
	0x024176E4 LDR X19, [X0]
	0x024176E8 LDR W21, [X0 + 0x8]
	0x024176EC LDP X22, X23, [X0 + 0x28]
	0x024176F0 STP V0, V0, [X8 + 0x20]
	0x024176F4 STP V0, V0, [X8]
	0x024176F8 LDR X0, [X1 + 0x20]
	0x024176FC MOV X20, X8
	0x02417700 LDRB W8, [X0 + 0x135]
	0x02417704 TBNZ X8, 0x0, 0x241770C
	0x02417708 BL 0x1C5C684
	0x0241770C LDR X8, [X0 + 0xC0]
	0x02417710 MOV X0, X20
	0x02417714 MOV X1, X19
	0x02417718 MOV W2, W21
	0x0241771C LDR X5, [X8 + 0x88]
	0x02417720 MOV X3, X22
	0x02417724 LDP X20, X19, [X31 + 0x20]
	0x02417728 LDP X22, X21, [X31 + 0x10]
	0x0241772C MOV X4, X23
	0x02417730 LDP X30, X23, [X31], #0x30

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, X0
	009 Move X0, [X2+32]
	010 Move X23, [X20]
	011 NotImplemented "Instruction LDRSW not yet implemented."
	012 Move X19, X2
	013 Move W8, [X0+309]
	014 Move W21, W1
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Move X22, [X20+40]
	021 Compare X22, 0
	022 JumpIfEqual {131}
	023 Move X8, [X0+192]
	024 Move X8, [X8+328]
	025 Move X0, [X8+32]
	026 Move W8, [X0+309]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {32}
	031 Call 0x1C5D684
	032 Move X8, [X0+192]
	033 Move X1, [X8+64]
	034 Move W8, [X1+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {42}
	039 Move X0, X1
	040 Call 0x1C5D684
	041 Move X1, X0
	042 Move X8, [X22]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Compare X9, 0
	045 JumpIfEqual {52}
	046 Move X10, [X8+176]
	047 Add X10, X10, 8
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Subtract X9, X9, 1
	051 Add X10, X10, 16
	052 Move W2, 4
	053 Move X0, X22
	054 Call 0x1C5D788
	055 Move W9, [X10]
	056 Add W9, W9, 4
	057 Add X8, X8, W9
	058 Add X0, X8, 312
	059 Move X8, [X0]
	060 Move X2, [X0+8]
	061 Move X0, X22
	062 Move W1, W21
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move X8, [X19+32]
	065 Move W22, W0
	066 Move W9, [X8+309]
	067 Move TEMP, X9
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {73}
	071 Move X0, X8
	072 Call 0x1C5D684
	073 Move W8, [X20+8]
	074 NotImplemented "Instruction UDIV not yet implemented."
	075 NotImplemented "Instruction MSUB not yet implemented."
	076 Add X8, X8, X24
	077 Move W22, [X23]
	078 Compare W22, 0
	079 JumpIfEqual {122}
	080 Move X0, [X19+32]
	081 Move X23, [X20+56]
	082 Move W8, [X0+309]
	083 Move TEMP, X8
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {88}
	087 Call 0x1C5D684
	088 Move X8, [X0+192]
	089 Move X0, X20
	090 Move W1, W22
	091 Move X2, [X8+344]
	092 Call 0x2430174
	093 Compare X23, 0
	094 JumpIfEqual {131}
	095 Move X8, [X23]
	096 Move W1, W0
	097 Move X0, X23
	098 Move W2, W21
	099 Move X9, [X8+440]
	100 Move X3, [X8+448]
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfEqual {122}
	106 Move X0, [X19+32]
	107 Move W8, [X0+309]
	108 Move TEMP, X8
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfEqual {113}
	112 Call 0x1C5D684
	113 Move W8, [X20+24]
	114 Move W9, [X20+12]
	115 NotImplemented "Instruction LDRSW not yet implemented."
	116 Move X11, [X20]
	117 NotImplemented "Instruction MADD not yet implemented."
	118 Add X8, X10, W8
	119 Move W22, [X11]
	120 Compare W22, 0
	121 JumpIfNotEqual {80}
	122 Move W0, W22
	123 Move X20, [X31+48]
	124 Move X19, [X31+56]
	125 Move X22, [X31+32]
	126 Move X21, [X31+40]
	127 Move X24, [X31+16]
	128 Move X23, [X31+24]
	129 Move X30, [X31+64]
	130 Return X0
	131 Call 0x1C17F20

Method: System.UInt32 GetBucketFromHashCode(System.Int32 hash)

Disassembly:
	0x02417734 B 0x2414924
	0x02417738 STP X30, X21, [X31 - 0x20]!
	0x0241773C STP X20, X19, [X31 + 0x10]
	0x02417740 LDR X8, [X1 + 0x20]

ISIL:
	001 Move W8, [X0+8]
	002 NotImplemented "Instruction UDIV not yet implemented."
	003 NotImplemented "Instruction MSUB not yet implemented."
	004 Return X0

Method: System.Void ClrEntry(System.Int32 entry)

Disassembly:
	0x02417744 MOV X20, X1
	0x02417748 MOV X19, X0
	0x0241774C ADD X9, X8, 0x135
	0x02417750 LDRH W9, [X9]
	0x02417754 TBNZ X9, 0x0, 0x2417770
	0x02417758 MOV X0, X8
	0x0241775C BL 0x1C5C684
	0x02417760 LDR X8, [X20 + 0x20]
	0x02417764 ADD X9, X8, 0x135

ISIL:
	001 Move W8, [X0+24]
	002 NotImplemented "Instruction LDRSW not yet implemented."
	003 Move X10, [X0]
	004 Move X2, X31
	005 Multiply W11, W8, W1
	006 Add X9, X9, W11
	007 Add X0, X10, X9
	008 Move W1, W8
	009 ShiftRight W1, 30
	010 And W1, W1, 0x1FFFFFFF
	011 Call Native.MemClear, X0, X1
	012 Return 

Method: K GetKey(System.Int32 entry)

Disassembly:
	0x02417768 LDRH W9, [X9]
	0x0241776C B 0x2417774
	0x02417770 MOV X0, X8
	0x02417774 LDR X10, [X0 + 0xC0]
	0x02417778 LDR X10, [X10 + 0x78]
	0x0241777C LDR X21, [X10]
	0x02417780 TBNZ X9, 0x0, 0x2417790
	0x02417784 MOV X0, X8
	0x02417788 BL 0x1C5C684
	0x0241778C MOV X8, X0
	0x02417790 LDR X8, [X8 + 0xC0]
	0x02417794 MOVZ W1, 0x1
	0x02417798 MOV X0, X19
	0x0241779C LDR X2, [X8 + 0x78]
	0x024177A0 BLR X21
	0x024177A4 LDR X8, [X20 + 0x20]
	0x024177A8 ADD X9, X8, 0x135
	0x024177AC LDRH W9, [X9]
	0x024177B0 TBNZ X9, 0x0, 0x24177CC
	0x024177B4 MOV X0, X8
	0x024177B8 BL 0x1C5C684
	0x024177BC LDR X8, [X20 + 0x20]
	0x024177C0 ADD X9, X8, 0x135
	0x024177C4 LDRH W9, [X9]
	0x024177C8 B 0x24177D0
	0x024177CC MOV X0, X8
	0x024177D0 LDR X10, [X0 + 0xC0]
	0x024177D4 LDR X10, [X10 + 0x90]
	0x024177D8 LDR X21, [X10]
	0x024177DC TBNZ X9, 0x0, 0x24177EC
	0x024177E0 MOV X0, X8
	0x024177E4 BL 0x1C5C684
	0x024177E8 MOV X8, X0
	0x024177EC LDR X8, [X8 + 0xC0]
	0x024177F0 MOV X0, X19
	0x024177F4 MOV W1, W31
	0x024177F8 LDR X2, [X8 + 0x90]
	0x024177FC BLR X21
	0x02417800 LDR X8, [X20 + 0x20]
	0x02417804 ADD X9, X8, 0x135
	0x02417808 LDRH W9, [X9]
	0x0241780C TBNZ X9, 0x0, 0x2417828
	0x02417810 MOV X0, X8
	0x02417814 BL 0x1C5C684
	0x02417818 LDR X8, [X20 + 0x20]
	0x0241781C ADD X9, X8, 0x135
	0x02417820 LDRH W9, [X9]
	0x02417824 B 0x241782C
	0x02417828 MOV X0, X8
	0x0241782C LDR X10, [X0 + 0xC0]
	0x02417830 LDR X10, [X10 + 0x98]
	0x02417834 LDR X20, [X10]
	0x02417838 TBNZ X9, 0x0, 0x2417848

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, [X0+40]
	009 Compare X19, 0
	010 JumpIfEqual {65}
	011 Move X8, X0
	012 Move X0, [X2+32]
	013 Move X21, [X8]
	014 NotImplemented "Instruction LDRSW not yet implemented."
	015 Move W23, [X8+24]
	016 Move W9, [X0+309]
	017 Move W24, [X8+16]
	018 Move W20, W1
	019 Move TEMP, X9
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Move X8, [X0+192]
	025 Move X1, [X8+64]
	026 Move W8, [X1+309]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {34}
	031 Move X0, X1
	032 Call 0x1C5D684
	033 Move X1, X0
	034 Move X8, [X19]
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Compare X9, 0
	037 JumpIfEqual {44}
	038 Move X10, [X8+176]
	039 Add X10, X10, 8
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Subtract X9, X9, 1
	043 Add X10, X10, 16
	044 Move X0, X19
	045 Move W2, W31
	046 Call 0x1C5D788
	047 NotImplemented "Instruction LDRSW not yet implemented."
	048 Add X8, X8, X9
	049 Add X0, X8, 312
	050 NotImplemented "Instruction MADD not yet implemented."
	051 Add X8, X22, W8
	052 Move X4, [X0]
	053 Move X3, [X0+8]
	054 Add X1, X21, X8
	055 Move X0, X19
	056 Move X20, [X31+48]
	057 Move X19, [X31+56]
	058 Move X22, [X31+32]
	059 Move X21, [X31+40]
	060 Move X24, [X31+16]
	061 Move X23, [X31+24]
	062 Move W2, W31
	063 Move X30, [X31+64]
	064 CallNoReturn X4
	065 Call 0x1C17F20

Method: System.Void SetKey(System.Int32 entry, K key)

Disassembly:
	0x0241783C MOV X0, X8
	0x02417840 BL 0x1C5C684
	0x02417844 MOV X8, X0
	0x02417848 LDR X8, [X8 + 0xC0]
	0x0241784C MOV X0, X19
	0x02417850 MOV W1, W31
	0x02417854 LDR X2, [X8 + 0x98]
	0x02417858 BLR X20
	0x0241785C LDR X8, [X19]
	0x02417860 LDRSW X9, [X19 + 0x1C]
	0x02417864 LDR W10, [X19 + 0x8]
	0x02417868 LDP X20, X19, [X31 + 0x10]
	0x0241786C MOV X2, X31
	0x02417870 ADD X0, X8, X9, 0x2, LSL
	0x02417874 UBFM W1, W10, 0x1E, 0x1D
	0x02417878 LDP X30, X21, [X31], #0x20
	0x0241787C B 0x1E35770
	0x02417880 STP X29, X30, [X31 - 0x50]!
	0x02417884 STR X25, [X31 + 0x10]
	0x02417888 STP X24, X23, [X31 + 0x20]
	0x0241788C STP X22, X21, [X31 + 0x30]
	0x02417890 STP X20, X19, [X31 + 0x40]
	0x02417894 ADD X29, X31, 0x0
	0x02417898 SUB X31, X31, 0x20
	0x0241789C MRS X25, 0xC000
	0x024178A0 LDR X8, [X25 + 0x28]
	0x024178A4 MOV X22, X2
	0x024178A8 MOV X23, X1
	0x024178AC MOV X19, X0
	0x024178B0 STUR X8, [X29 - 0x8]
	0x024178B4 STUR X1, [X29 - 0x20]
	0x024178B8 LDR X20, [X2 + 0x20]
	0x024178BC ADD X8, X20, 0x135
	0x024178C0 LDRH W8, [X8]
	0x024178C4 TBNZ X8, 0x0, 0x24178E0
	0x024178C8 MOV X0, X20
	0x024178CC BL 0x1C5C684
	0x024178D0 LDR X20, [X22 + 0x20]
	0x024178D4 ADD X8, X20, 0x135
	0x024178D8 LDRH W8, [X8]
	0x024178DC B 0x24178E4
	0x024178E0 MOV X0, X20
	0x024178E4 LDR X9, [X0 + 0xC0]
	0x024178E8 LDR X9, [X9 + 0x20]
	0x024178EC LDR W24, [X9 + 0xFC]
	0x024178F0 ADD X9, X31, 0x0
	0x024178F4 ADD X10, X24, 0xF
	0x024178F8 AND X10, X10, 0x1FFFFFFFF
	0x024178FC SUB X21, X9, X10
	0x02417900 ADD X31, X21, 0x0
	0x02417904 TBNZ X8, 0x0, 0x2417918
	0x02417908 MOV X0, X20
	0x0241790C BL 0x1C5C684
	0x02417910 LDR X20, [X22 + 0x20]
	0x02417914 B 0x241791C
	0x02417918 MOV X0, X20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, [X0+40]
	010 Compare X20, 0
	011 JumpIfEqual {70}
	012 Move X8, X0
	013 Move X0, [X3+32]
	014 Move X22, [X8]
	015 NotImplemented "Instruction LDRSW not yet implemented."
	016 Move W24, [X8+24]
	017 Move W9, [X0+309]
	018 Move W25, [X8+16]
	019 Move W19, W2
	020 Move W21, W1
	021 Move TEMP, X9
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Move X8, [X0+192]
	027 Move X1, [X8+64]
	028 Move W8, [X1+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {36}
	033 Move X0, X1
	034 Call 0x1C5D684
	035 Move X1, X0
	036 Move X8, [X20]
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Compare X9, 0
	039 JumpIfEqual {46}
	040 Move X10, [X8+176]
	041 Add X10, X10, 8
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Subtract X9, X9, 1
	045 Add X10, X10, 16
	046 Move W2, 1
	047 Move X0, X20
	048 Call 0x1C5D788
	049 Move W9, [X10]
	050 Add W9, W9, 1
	051 Add X8, X8, W9
	052 Add X0, X8, 312
	053 NotImplemented "Instruction MADD not yet implemented."
	054 Add X8, X23, W8
	055 Move X5, [X0]
	056 Move X4, [X0+8]
	057 Add X1, X22, X8
	058 Move X0, X20
	059 Move W3, W19
	060 Move X20, [X31+48]
	061 Move X19, [X31+56]
	062 Move X22, [X31+32]
	063 Move X21, [X31+40]
	064 Move X24, [X31+16]
	065 Move X23, [X31+24]
	066 Move W2, W31
	067 Move X30, [X31+64]
	068 Move X25, [X31+72]
	069 CallNoReturn X5
	070 Call 0x1C17F20

Method: V GetVal(System.Int32 entry)

Disassembly:
	0x0241791C LDR X8, [X0 + 0xC0]
	0x02417920 MOV X0, X21
	0x02417924 MOV X2, X24
	0x02417928 LDR X8, [X8 + 0x20]
	0x0241792C LDR W8, [X8 + 0x28]
	0x02417930 CMP W8, 0x0
	0x02417934 SUB X8, X29, 0x20
	0x02417938 CSEL X1, X23, X8, LT
	0x0241793C BL 0x3EB1AC0
	0x02417940 ADD X8, X20, 0x135
	0x02417944 LDRH W8, [X8]
	0x02417948 TBNZ X8, 0x0, 0x2417964
	0x0241794C MOV X0, X20
	0x02417950 BL 0x1C5C684
	0x02417954 LDR X20, [X22 + 0x20]
	0x02417958 ADD X8, X20, 0x135
	0x0241795C LDRH W8, [X8]
	0x02417960 B 0x2417968
	0x02417964 MOV X0, X20
	0x02417968 LDR X9, [X0 + 0xC0]
	0x0241796C LDR X9, [X9 + 0xA0]
	0x02417970 LDR X23, [X9]
	0x02417974 TBNZ X8, 0x0, 0x2417990
	0x02417978 MOV X0, X20
	0x0241797C BL 0x1C5C684
	0x02417980 LDR X20, [X22 + 0x20]
	0x02417984 ADD X8, X20, 0x135
	0x02417988 LDRH W8, [X8]
	0x0241798C B 0x2417994
	0x02417990 MOV X0, X20
	0x02417994 LDR X9, [X0 + 0xC0]
	0x02417998 LDR X22, [X9 + 0xA0]
	0x0241799C TBNZ X8, 0x0, 0x24179AC
	0x024179A0 MOV X0, X20
	0x024179A4 BL 0x1C5C684
	0x024179A8 MOV X20, X0
	0x024179AC LDR X8, [X20 + 0xC0]
	0x024179B0 LDR X8, [X8 + 0x20]
	0x024179B4 LDR W8, [X8 + 0x28]
	0x024179B8 TBNZ X8, 0x1F, 0x24179C0
	0x024179BC LDR X21, [X21]
	0x024179C0 STUR X21, [X29 - 0x18]
	0x024179C4 LDR X8, [X22 + 0x10]
	0x024179C8 SUB X3, X29, 0x18
	0x024179CC SUB X4, X29, 0xC
	0x024179D0 MOV X0, X23
	0x024179D4 MOV X1, X22
	0x024179D8 MOV X2, X19
	0x024179DC BLR X8
	0x024179E0 LDUR W8, [X29 - 0xC]
	0x024179E4 LDR X9, [X25 + 0x28]
	0x024179E8 LDUR X10, [X29 - 0x8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, [X0+48]
	009 Compare X19, 0
	010 JumpIfEqual {65}
	011 Move X8, X0
	012 Move X0, [X2+32]
	013 Move X21, [X8]
	014 NotImplemented "Instruction LDRSW not yet implemented."
	015 Move W24, [X8+20]
	016 Move W23, [X8+24]
	017 Move W9, [X0+309]
	018 Move W20, W1
	019 Move TEMP, X9
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Move X8, [X0+192]
	025 Move X1, [X8+80]
	026 Move W8, [X1+309]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {34}
	031 Move X0, X1
	032 Call 0x1C5D684
	033 Move X1, X0
	034 Move X8, [X19]
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Compare X9, 0
	037 JumpIfEqual {44}
	038 Move X10, [X8+176]
	039 Add X10, X10, 8
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Subtract X9, X9, 1
	043 Add X10, X10, 16
	044 Move X0, X19
	045 Move W2, W31
	046 Call 0x1C5D788
	047 NotImplemented "Instruction LDRSW not yet implemented."
	048 Add X8, X8, X9
	049 Add X0, X8, 312
	050 NotImplemented "Instruction MADD not yet implemented."
	051 Add X8, X22, W8
	052 Move X4, [X0]
	053 Move X3, [X0+8]
	054 Add X1, X21, X8
	055 Move X0, X19
	056 Move X20, [X31+48]
	057 Move X19, [X31+56]
	058 Move X22, [X31+32]
	059 Move X21, [X31+40]
	060 Move X24, [X31+16]
	061 Move X23, [X31+24]
	062 Move W2, W31
	063 Move X30, [X31+64]
	064 CallNoReturn X4
	065 Call 0x1C17F20

Method: System.Void SetVal(System.Int32 entry, V val)

Disassembly:
	0x024179EC CMP W8, 0x0
	0x024179F0 CSET W0, NE
	0x024179F4 CMP X9, X10
	0x024179F8 B.NE 0x2417A18
	0x024179FC ADD X31, X29, 0x0
	0x02417A00 LDP X20, X19, [X31 + 0x40]
	0x02417A04 LDP X22, X21, [X31 + 0x30]
	0x02417A08 LDP X24, X23, [X31 + 0x20]
	0x02417A0C LDR X25, [X31 + 0x10]
	0x02417A10 LDP X29, X30, [X31], #0x50
	0x02417A14 RET
	0x02417A18 BL 0x3EB1B20
	0x02417A1C STP X29, X30, [X31 - 0x60]!
	0x02417A20 STP X28, X27, [X31 + 0x10]
	0x02417A24 STP X26, X25, [X31 + 0x20]
	0x02417A28 STP X24, X23, [X31 + 0x30]
	0x02417A2C STP X22, X21, [X31 + 0x40]
	0x02417A30 STP X20, X19, [X31 + 0x50]
	0x02417A34 ADD X29, X31, 0x0
	0x02417A38 SUB X31, X31, 0xE0
	0x02417A3C MRS X9, 0xC000
	0x02417A40 LDR X8, [X9 + 0x28]
	0x02417A44 MOV X19, X3
	0x02417A48 MOV X22, X2
	0x02417A4C MOV X24, X0
	0x02417A50 STUR X8, [X29 - 0x10]
	0x02417A54 STUR X1, [X29 - 0x20]
	0x02417A58 LDR X28, [X3 + 0x20]
	0x02417A5C STUR X1, [X29 - 0xC8]
	0x02417A60 STUR X9, [X29 - 0xD8]
	0x02417A64 ADD X8, X28, 0x135
	0x02417A68 LDRH W8, [X8]
	0x02417A6C TBNZ X8, 0x0, 0x2417A88
	0x02417A70 MOV X0, X28
	0x02417A74 BL 0x1C5C684
	0x02417A78 LDR X28, [X19 + 0x20]
	0x02417A7C ADD X8, X28, 0x135
	0x02417A80 LDRH W8, [X8]
	0x02417A84 B 0x2417A8C
	0x02417A88 MOV X0, X28
	0x02417A8C LDR X9, [X0 + 0xC0]
	0x02417A90 LDR X9, [X9 + 0xE8]
	0x02417A94 LDR W9, [X9 + 0xFC]
	0x02417A98 STUR X9, [X29 - 0xC0]
	0x02417A9C TBNZ X8, 0x0, 0x2417AB0
	0x02417AA0 MOV X0, X28
	0x02417AA4 BL 0x1C5C684
	0x02417AA8 LDR X28, [X19 + 0x20]
	0x02417AAC B 0x2417AB4
	0x02417AB0 MOV X0, X28
	0x02417AB4 LDR X8, [X0 + 0xC0]
	0x02417AB8 LDR X8, [X8 + 0x30]
	0x02417ABC LDR W9, [X8 + 0xFC]
	0x02417AC0 ADD X8, X31, 0x0
	0x02417AC4 STUR X9, [X29 - 0xD0]
	0x02417AC8 ADD X9, X9, 0xF
	0x02417ACC AND X9, X9, 0x1FFFFFFFF

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X19, [X0+48]
	010 Compare X19, 0
	011 JumpIfEqual {70}
	012 Move X8, X0
	013 Move X0, [X2+32]
	014 Move X21, [X8]
	015 NotImplemented "Instruction LDRSW not yet implemented."
	016 Move W24, [X8+20]
	017 Move W23, [X8+24]
	018 Move W9, [X0+309]
	019 Move V8, V0
	020 Move W20, W1
	021 Move TEMP, X9
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Move X8, [X0+192]
	027 Move X1, [X8+80]
	028 Move W8, [X1+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {36}
	033 Move X0, X1
	034 Call 0x1C5D684
	035 Move X1, X0
	036 Move X8, [X19]
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Compare X9, 0
	039 JumpIfEqual {46}
	040 Move X10, [X8+176]
	041 Add X10, X10, 8
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Subtract X9, X9, 1
	045 Add X10, X10, 16
	046 Move W2, 1
	047 Move X0, X19
	048 Call 0x1C5D788
	049 Move W9, [X10]
	050 Add W9, W9, 1
	051 Add X8, X8, W9
	052 Add X0, X8, 312
	053 NotImplemented "Instruction MADD not yet implemented."
	054 Add X8, X22, W8
	055 Move X4, [X0]
	056 Move X3, [X0+8]
	057 Add X1, X21, X8
	058 Move X0, X19
	059 Move X20, [X31+48]
	060 Move X19, [X31+56]
	061 Move X22, [X31+32]
	062 Move X21, [X31+40]
	063 Move X24, [X31+16]
	064 Move X23, [X31+24]
	065 Move X30, [X31+8]
	066 Move W2, W31
	067 Move V0, V8
	068 Move V8, [X31+64]
	069 CallNoReturn X4
	070 Call 0x1C17F20

Method: System.Int32 GetNxt(System.Int32 entry)

Disassembly:
	0x02417AD0 SUB X23, X8, X9
	0x02417AD4 ADD X31, X23, 0x0
	0x02417AD8 ADD X8, X31, 0x0
	0x02417ADC SUB X21, X8, X9
	0x02417AE0 ADD X31, X21, 0x0
	0x02417AE4 LDUR X2, [X29 - 0xC0]
	0x02417AE8 ADD X8, X31, 0x0
	0x02417AEC ADD X9, X2, 0xF

ISIL:
	001 Move W8, [X0+24]
	002 Move W9, [X0+12]
	003 NotImplemented "Instruction LDRSW not yet implemented."
	004 Move X11, [X0]
	005 NotImplemented "Instruction MADD not yet implemented."
	006 Add X8, X10, W8
	007 Move W0, [X11]
	008 Return X0

Method: System.Void SetNxt(System.Int32 entry, System.Int32 next)

Disassembly:
	0x02417AF0 AND X9, X9, 0x1FFFFFFFF
	0x02417AF4 SUB X26, X8, X9
	0x02417AF8 ADD X31, X26, 0x0
	0x02417AFC ADD X8, X31, 0x0
	0x02417B00 MOVI V0.2D, 0x0
	0x02417B04 SUB X27, X8, X9
	0x02417B08 STUR X31, [X29 - 0x30]
	0x02417B0C STP V0, V0, [X29 - 0x50]

ISIL:
	001 Move W8, [X0+24]
	002 Move W9, [X0+12]
	003 NotImplemented "Instruction LDRSW not yet implemented."
	004 Move X11, [X0]
	005 NotImplemented "Instruction MADD not yet implemented."
	006 Add X8, X10, W8
	007 Move [X11], W2
	008 Return 

Method: System.Int32 GetKeyHashCode(K key)

Disassembly:
	0x02417B10 STP V0, V0, [X29 - 0x70]
	0x02417B14 ADD X31, X27, 0x0
	0x02417B18 MOV X0, X27
	0x02417B1C MOV W1, W31
	0x02417B20 BL 0x3EB1B10
	0x02417B24 ADD X8, X28, 0x135
	0x02417B28 LDRH W8, [X8]
	0x02417B2C TBNZ X8, 0x0, 0x2417B48
	0x02417B30 MOV X0, X28
	0x02417B34 BL 0x1C5C684
	0x02417B38 LDR X28, [X19 + 0x20]
	0x02417B3C ADD X8, X28, 0x135
	0x02417B40 LDRH W8, [X8]
	0x02417B44 B 0x2417B4C
	0x02417B48 MOV X0, X28
	0x02417B4C LDR X9, [X0 + 0xC0]
	0x02417B50 LDR X9, [X9 + 0xA8]
	0x02417B54 LDR X20, [X9]
	0x02417B58 TBNZ X8, 0x0, 0x2417B68
	0x02417B5C MOV X0, X28
	0x02417B60 BL 0x1C5C684
	0x02417B64 MOV X28, X0
	0x02417B68 LDR X8, [X28 + 0xC0]
	0x02417B6C MOV X0, X24
	0x02417B70 LDR X1, [X8 + 0xA8]
	0x02417B74 SUB X8, X29, 0xB8
	0x02417B78 BLR X20
	0x02417B7C SUB X0, X29, 0x70
	0x02417B80 SUB X1, X29, 0xB8
	0x02417B84 MOVZ W2, 0x48
	0x02417B88 BL 0x3EB1AC0
	0x02417B8C CBNZ X22, 0x2417BE8
	0x02417B90 LDR X8, [X19 + 0x20]
	0x02417B94 ADD X9, X8, 0x135
	0x02417B98 LDRH W9, [X9]
	0x02417B9C TBNZ X9, 0x0, 0x2417BB8
	0x02417BA0 MOV X0, X8
	0x02417BA4 BL 0x1C5C684
	0x02417BA8 LDR X8, [X19 + 0x20]
	0x02417BAC ADD X9, X8, 0x135
	0x02417BB0 LDRH W9, [X9]
	0x02417BB4 B 0x2417BBC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, [X0+40]
	005 Compare X20, 0
	006 JumpIfEqual {50}
	007 Move X0, [X2+32]
	008 Move W19, W1
	009 Move W8, [X0+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {15}
	014 Call 0x1C5D684
	015 Move X8, [X0+192]
	016 Move X1, [X8+64]
	017 Move W8, [X1+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {25}
	022 Move X0, X1
	023 Call 0x1C5D684
	024 Move X1, X0
	025 Move X8, [X20]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Compare X9, 0
	028 JumpIfEqual {35}
	029 Move X10, [X8+176]
	030 Add X10, X10, 8
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract X9, X9, 1
	034 Add X10, X10, 16
	035 Move W2, 4
	036 Move X0, X20
	037 Call 0x1C5D788
	038 Move W9, [X10]
	039 Add W9, W9, 4
	040 Add X8, X8, W9
	041 Add X0, X8, 312
	042 Move X3, [X0]
	043 Move X2, [X0+8]
	044 Move X0, X20
	045 Move W1, W19
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 CallNoReturn X3
	050 Call 0x1C17F20

Method: Fusion.NetworkDictionary`2/Enumerator<K, V> GetEnumerator()

Disassembly:
	0x02417BB8 MOV X0, X8
	0x02417BBC LDR X10, [X0 + 0xC0]
	0x02417BC0 LDR X10, [X10 + 0xC0]
	0x02417BC4 LDR X20, [X10]
	0x02417BC8 TBNZ X9, 0x0, 0x2417BD8
	0x02417BCC MOV X0, X8
	0x02417BD0 BL 0x1C5C684
	0x02417BD4 MOV X8, X0
	0x02417BD8 LDR X8, [X8 + 0xC0]
	0x02417BDC LDR X0, [X8 + 0xC0]
	0x02417BE0 BLR X20
	0x02417BE4 MOV X22, X0
	0x02417BE8 LDR X8, [X19 + 0x20]
	0x02417BEC ADD X9, X8, 0x135
	0x02417BF0 LDRH W9, [X9]
	0x02417BF4 TBNZ X9, 0x0, 0x2417C10
	0x02417BF8 MOV X0, X8
	0x02417BFC BL 0x1C5C684
	0x02417C00 LDR X8, [X19 + 0x20]
	0x02417C04 ADD X9, X8, 0x135
	0x02417C08 LDRH W9, [X9]
	0x02417C0C B 0x2417C14
	0x02417C10 MOV X0, X8
	0x02417C14 LDR X10, [X0 + 0xC0]
	0x02417C18 LDR X10, [X10 + 0x108]
	0x02417C1C LDR X20, [X10]
	0x02417C20 TBNZ X9, 0x0, 0x2417C30

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+128], X30
	003 Move [X31+136], X19
	004 Move V0, [X0]
	005 Move V1, [X0+16]
	006 Move V2, [X0+32]
	007 Move V3, [X0+48]
	008 NotImplemented "Instruction MOVI not yet implemented."
	009 Move [X8+64], X31
	010 Move [X8+32], V4
	011 Move [X8+40], V4
	012 Move [X31+32], V2
	013 Move [X31+40], V3
	014 Move [X31], V0
	015 Move [X31+8], V1
	016 Move [X8], V4
	017 Move [X8+8], V4
	018 Move X0, [X1+32]
	019 Move X19, X8
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Move X8, [X0+192]
	027 Move V0, [X31]
	028 Move V1, [X31+16]
	029 Move V2, [X31+32]
	030 Move V3, [X31+48]
	031 Add X1, X31, 64
	032 Move X2, [X8+432]
	033 Move X0, X19
	034 Move [X31+64], V0
	035 Move [X31+72], V1
	036 Move [X31+96], V2
	037 Move [X31+104], V3
	038 Call 0x2C1D9DC, X0, X1
	039 Move X30, [X31+128]
	040 Move X19, [X31+136]
	041 Add X31, X31, 144
	042 Return X0

Method: System.Collections.Generic.IEnumerator`1<System.Collections.Generic.KeyValuePair`2<K, V>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K,V>>.GetEnumerator()

Disassembly:
	0x02417C24 MOV X0, X8
	0x02417C28 BL 0x1C5C684
	0x02417C2C MOV X8, X0
	0x02417C30 LDR X8, [X8 + 0xC0]
	0x02417C34 SUB X0, X29, 0x70
	0x02417C38 LDR X1, [X8 + 0x108]
	0x02417C3C BLR X20
	0x02417C40 LDR X8, [X19 + 0x20]
	0x02417C44 MOV W28, W0
	0x02417C48 LDRB W9, [X8 + 0x135]
	0x02417C4C TBNZ X9, 0x0, 0x2417C5C
	0x02417C50 MOV X0, X8
	0x02417C54 BL 0x1C5C684
	0x02417C58 MOV X8, X0
	0x02417C5C LDR X8, [X8 + 0xC0]
	0x02417C60 TBZ X28, 0x0, 0x2417E44
	0x02417C64 LDR X0, [X19 + 0x20]
	0x02417C68 LDR X8, [X8 + 0xD8]
	0x02417C6C LDRB W9, [X0 + 0x135]
	0x02417C70 LDR X20, [X8]
	0x02417C74 TBNZ X9, 0x0, 0x2417C7C
	0x02417C78 BL 0x1C5C684
	0x02417C7C LDR X8, [X0 + 0xC0]
	0x02417C80 SUB X2, X29, 0x70
	0x02417C84 SUB X3, X29, 0xB8
	0x02417C88 MOV X0, X20
	0x02417C8C LDR X1, [X8 + 0xD8]
	0x02417C90 STUR X26, [X29 - 0xB8]
	0x02417C94 MOV X4, X26
	0x02417C98 LDR X8, [X1 + 0x10]
	0x02417C9C BLR X8
	0x02417CA0 LDUR X2, [X29 - 0xC0]
	0x02417CA4 MOV X0, X27
	0x02417CA8 MOV X1, X26
	0x02417CAC BL 0x3EB1AC0
	0x02417CB0 LDR X8, [X19 + 0x20]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+144], X30
	003 Move [X31+160], X20
	004 Move [X31+168], X19
	005 Move X8, [X1+32]
	006 Move X19, X1
	007 Move X20, X0
	008 Move W9, [X8+309]
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {16}
	013 Move X0, X8
	014 Call 0x1C5D684
	015 Move X8, X0
	016 Move X8, [X8+192]
	017 Move X0, X20
	018 Move X1, [X8+168]
	019 Add X8, X31, 0
	020 Call 0x2417BB8, X0
	021 Add X0, X31, 72
	022 Add X1, X31, 0
	023 Move W2, 72
	024 Call 0x3EB2AC0
	025 Add X0, X31, 0
	026 Add X1, X31, 72
	027 Move W2, 72
	028 Call 0x3EB2AC0
	029 Move X0, [X19+32]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Move X8, [X0+192]
	037 Add X1, X31, 0
	038 Move X0, [X8+176]
	039 Call 0x1C17E04
	040 Move X20, [X31+160]
	041 Move X19, [X31+168]
	042 Move X30, [X31+144]
	043 Add X31, X31, 176
	044 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x02417CB4 ADD X9, X8, 0x135
	0x02417CB8 LDRH W9, [X9]
	0x02417CBC TBNZ X9, 0x0, 0x2417CD8
	0x02417CC0 MOV X0, X8
	0x02417CC4 BL 0x1C5C684
	0x02417CC8 LDR X8, [X19 + 0x20]
	0x02417CCC ADD X9, X8, 0x135
	0x02417CD0 LDRH W9, [X9]
	0x02417CD4 B 0x2417CDC
	0x02417CD8 MOV X0, X8
	0x02417CDC LDR X10, [X0 + 0xC0]
	0x02417CE0 LDR X10, [X10 + 0xF0]
	0x02417CE4 LDR X20, [X10]
	0x02417CE8 TBNZ X9, 0x0, 0x2417CF8
	0x02417CEC MOV X0, X8
	0x02417CF0 BL 0x1C5C684
	0x02417CF4 MOV X8, X0
	0x02417CF8 LDR X8, [X8 + 0xC0]
	0x02417CFC SUB X3, X29, 0xB8
	0x02417D00 MOV X0, X20
	0x02417D04 MOV X2, X27
	0x02417D08 LDR X1, [X8 + 0xF0]
	0x02417D0C STUR X23, [X29 - 0xB8]
	0x02417D10 MOV X4, X23
	0x02417D14 LDR X8, [X1 + 0x10]
	0x02417D18 BLR X8
	0x02417D1C LDR X0, [X19 + 0x20]
	0x02417D20 LDRB W8, [X0 + 0x135]
	0x02417D24 TBNZ X8, 0x0, 0x2417D2C
	0x02417D28 BL 0x1C5C684
	0x02417D2C LDR X8, [X0 + 0xC0]
	0x02417D30 SUB X9, X29, 0x20
	0x02417D34 MOV X0, X21
	0x02417D38 LDR X8, [X8 + 0x30]
	0x02417D3C LDR W8, [X8 + 0x28]
	0x02417D40 CMP W8, 0x0

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+144], X30
	003 Move [X31+160], X20
	004 Move [X31+168], X19
	005 Move X8, [X1+32]
	006 Move X19, X1
	007 Move X20, X0
	008 Move W9, [X8+309]
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {16}
	013 Move X0, X8
	014 Call 0x1C5D684
	015 Move X8, X0
	016 Move X8, [X8+192]
	017 Move X0, X20
	018 Move X1, [X8+168]
	019 Add X8, X31, 0
	020 Call 0x2417BB8, X0
	021 Add X0, X31, 72
	022 Add X1, X31, 0
	023 Move W2, 72
	024 Call 0x3EB2AC0
	025 Add X0, X31, 0
	026 Add X1, X31, 72
	027 Move W2, 72
	028 Call 0x3EB2AC0
	029 Move X0, [X19+32]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Move X8, [X0+192]
	037 Add X1, X31, 0
	038 Move X0, [X8+176]
	039 Call 0x1C17E04
	040 Move X20, [X31+160]
	041 Move X19, [X31+168]
	042 Move X30, [X31+144]
	043 Add X31, X31, 176
	044 Return X0

Method: System.Void Fusion.INetworkDictionary.Add(System.Object item)

Disassembly:
	0x02417D44 LDP X2, X8, [X29 - 0xD0]
	0x02417D48 CSEL X1, X8, X9, LT
	0x02417D4C BL 0x3EB1AC0
	0x02417D50 CBZ X22, 0x2417EA4
	0x02417D54 LDR X0, [X19 + 0x20]
	0x02417D58 LDRB W8, [X0 + 0x135]
	0x02417D5C TBNZ X8, 0x0, 0x2417D64
	0x02417D60 BL 0x1C5C684
	0x02417D64 LDR X8, [X0 + 0xC0]
	0x02417D68 LDR X20, [X8 + 0xB8]
	0x02417D6C LDRB W8, [X20 + 0x135]
	0x02417D70 TBNZ X8, 0x0, 0x2417D80
	0x02417D74 MOV X0, X20
	0x02417D78 BL 0x1C5C684
	0x02417D7C MOV X20, X0
	0x02417D80 LDR X0, [X19 + 0x20]
	0x02417D84 LDRB W8, [X0 + 0x135]
	0x02417D88 TBNZ X8, 0x0, 0x2417D90
	0x02417D8C BL 0x1C5C684
	0x02417D90 LDR X8, [X0 + 0xC0]
	0x02417D94 MOV X24, X23
	0x02417D98 LDR X8, [X8 + 0x30]
	0x02417D9C LDR W8, [X8 + 0x28]
	0x02417DA0 TBNZ X8, 0x1F, 0x2417DA8
	0x02417DA4 LDR X24, [X23]
	0x02417DA8 LDR X0, [X19 + 0x20]
	0x02417DAC LDRB W8, [X0 + 0x135]
	0x02417DB0 TBNZ X8, 0x0, 0x2417DB8
	0x02417DB4 BL 0x1C5C684
	0x02417DB8 LDR X8, [X0 + 0xC0]
	0x02417DBC MOV X25, X21
	0x02417DC0 LDR X8, [X8 + 0x30]
	0x02417DC4 LDR W8, [X8 + 0x28]
	0x02417DC8 TBNZ X8, 0x1F, 0x2417DD0
	0x02417DCC LDR X25, [X21]
	0x02417DD0 LDR X8, [X22]
	0x02417DD4 LDRH W9, [X8 + 0x12E]
	0x02417DD8 CBZ X9, 0x2417DFC
	0x02417DDC LDR X10, [X8 + 0xB0]
	0x02417DE0 ADD X10, X10, 0x8
	0x02417DE4 LDUR X11, [X10 - 0x8]
	0x02417DE8 CMP X11, X20
	0x02417DEC B.EQ 0x2417E10
	0x02417DF0 SUBS X9, X9, 0x1
	0x02417DF4 ADD X10, X10, 0x10
	0x02417DF8 B.NE 0x2417DE4
	0x02417DFC MOV X0, X22
	0x02417E00 MOV X1, X20
	0x02417E04 MOV W2, W31
	0x02417E08 BL 0x1C5C788
	0x02417E0C B 0x2417E1C
	0x02417E10 LDRSW X9, [X10]
	0x02417E14 ADD X8, X8, X9, 0x4, LSL
	0x02417E18 ADD X0, X8, 0x138
	0x02417E1C STP X24, X25, [X29 - 0xB8]
	0x02417E20 LDR X1, [X0 + 0x8]
	0x02417E24 SUB X3, X29, 0xB8
	0x02417E28 SUB X4, X29, 0x14
	0x02417E2C MOV X2, X22

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X20, X2
	008 Move X21, X1
	009 Move X19, X0
	010 Move W9, [X8+309]
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {18}
	015 Move X0, X8
	016 Call 0x1C5D684
	017 Move X8, X0
	018 Move X8, [X8+192]
	019 Move X1, [X8+232]
	020 Move W8, [X1+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {28}
	025 Move X0, X1
	026 Call 0x1C5D684
	027 Move X1, X0
	028 Compare X21, 0
	029 JumpIfEqual {83}
	030 Move X8, [X21]
	031 Move X9, [X1+64]
	032 Move X0, X21
	033 Move X8, [X8+64]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Call 0x1C17E08
	036 Move X8, X0
	037 Move X0, [X20+32]
	038 Move W21, [X8]
	039 Move V8, [X8+4]
	040 Add X9, X0, 309
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move TEMP, X9
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {67}
	046 Move TEMP, X9
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {75}
	050 Move TEMP, X9
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {55}
	054 Call 0x1C5D684
	055 Move X8, [X0+192]
	056 Move X0, X19
	057 Move W1, W21
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X2, [X8+456]
	061 Move X30, [X31+16]
	062 Move X21, [X31+24]
	063 Move V0, V8
	064 Move V8, [X31+48]
	065 Call 0x2416E40, X0, X1, X2
	066 Return 
	067 Call 0x1C5D684
	068 Move X0, [X20+32]
	069 Add X8, X0, 309
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Move TEMP, X9
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {50}
	075 Call 0x1C5D684
	076 Move X0, [X20+32]
	077 Add X8, X0, 309
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 Move TEMP, X9
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {54}
	083 Call 0x1C17F20
	084 Call 0x1C181E0

Method: Fusion.NetworkDictionaryReadOnly`2<K, V> op_Implicit(Fusion.NetworkDictionary`2<K, V> value)

Disassembly:
	0x02417E30 LDP X0, X8, [X1 + 0x8]
	0x02417E34 BLR X8
	0x02417E38 LDURB W8, [X29 - 0x14]
	0x02417E3C CBZ W8, 0x2417BE8
	0x02417E40 B 0x2417E6C
	0x02417E44 LDR X0, [X19 + 0x20]
	0x02417E48 LDR X8, [X8 + 0x110]
	0x02417E4C LDRB W9, [X0 + 0x135]
	0x02417E50 LDR X19, [X8]
	0x02417E54 TBNZ X9, 0x0, 0x2417E5C
	0x02417E58 BL 0x1C5C684
	0x02417E5C LDR X8, [X0 + 0xC0]
	0x02417E60 SUB X0, X29, 0x70
	0x02417E64 LDR X1, [X8 + 0x110]
	0x02417E68 BLR X19
	0x02417E6C LDUR X8, [X29 - 0xD8]
	0x02417E70 LDR X8, [X8 + 0x28]
	0x02417E74 LDUR X9, [X29 - 0x10]
	0x02417E78 CMP X8, X9
	0x02417E7C B.NE 0x2417EA8
	0x02417E80 AND W0, W28, 0x1
	0x02417E84 ADD X31, X29, 0x0
	0x02417E88 LDP X20, X19, [X31 + 0x50]
	0x02417E8C LDP X22, X21, [X31 + 0x40]
	0x02417E90 LDP X24, X23, [X31 + 0x30]
	0x02417E94 LDP X26, X25, [X31 + 0x20]
	0x02417E98 LDP X28, X27, [X31 + 0x10]
	0x02417E9C LDP X29, X30, [X31], #0x60
	0x02417EA0 RET
	0x02417EA4 BL 0x1C16F20
	0x02417EA8 BL 0x3EB1B20
	0x02417EAC STP X29, X30, [X31 - 0x60]!
	0x02417EB0 STP X28, X27, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, X0
	008 Move X0, [X1+32]
	009 Move X19, [X21]
	010 Move X20, X8
	011 Add X9, X0, 309
	012 NotImplemented "Instruction LDRH not yet implemented."
	013 Move TEMP, X9
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X22, X1
	018 Call 0x1C5D684
	019 Move X0, [X22+32]
	020 Add X8, X0, 309
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 Move W23, [X21+8]
	023 Move X22, [X21+40]
	024 Move X21, [X21+48]
	025 NotImplemented "Instruction MOVI not yet implemented."
	026 Move [X20+32], V0
	027 Move [X20+40], V0
	028 Move [X20], V0
	029 Move [X20+8], V0
	030 Move TEMP, X9
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+192]
	036 Move X0, X20
	037 Move X1, X19
	038 Move X3, X22
	039 Move X5, [X8+136]
	040 Move X4, X21
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Subtract W2, W23, 1
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Call 0x2415278, X0, X1, X2, X3, X4
	049 Return X0

