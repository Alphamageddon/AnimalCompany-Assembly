Type: Fusion.NetworkId

Method: Fusion.NetworkId/EqualityComparer get_Comparer()

Disassembly:
	0x01E93DCC CBZ X19, 0x1E93E9C
	0x01E93DD0 LDR W8, [X19 + 0x60]
	0x01E93DD4 TBNZ X8, 0x1, 0x1E93E9C
	0x01E93DD8 ORR W8, W8, 0x2
	0x01E93DDC STR W8, [X19 + 0x60]
	0x01E93DE0 ADRP X21, 0x2545000
	0x01E93DE4 LDRB W8, [X21 + 0xA22]
	0x01E93DE8 LDR X20, [X19 + 0x30]
	0x01E93DEC CBNZ W8, 0x1E93E04
	0x01E93DF0 ADRP X0, 0x2260000
	0x01E93DF4 LDR X0, [X0 + 0x598]
	0x01E93DF8 BL 0x1C16CF4
	0x01E93DFC MOVZ W8, 0x1
	0x01E93E00 STRB W8, [X21 + 0xA22]
	0x01E93E04 ADRP X8, 0x2260000
	0x01E93E08 LDR X8, [X8 + 0x598]
	0x01E93E0C LDR X0, [X8]
	0x01E93E10 LDR W8, [X0 + 0xE0]
	0x01E93E14 CBNZ W8, 0x1E93E1C
	0x01E93E18 BL 0x1C16DFC
	0x01E93E1C MOV X0, X20
	0x01E93E20 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2547000
	005 Move X19, 0x2264000
	006 Move W8, [X20+656]
	007 Move X19, [X19+920]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2264000
	013 Move X0, [X0+920]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+656], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Boolean get_IsValid()

Disassembly:
	0x01E93E24 BL 0x3C38948
	0x01E93E28 TBZ X0, 0x0, 0x1E93E5C
	0x01E93E2C LDR X9, [X19 + 0x20]
	0x01E93E30 LDR X8, [X19 + 0x30]

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_IsReserved()

Disassembly:
	0x01E93E34 CBZ X9, 0x1E93E80
	0x01E93E38 CBZ X8, 0x1E93EA8
	0x01E93E3C LDR X9, [X8 + 0x50]
	0x01E93E40 CBZ X9, 0x1E93E80
	0x01E93E44 MOV X0, X19

ISIL:
	001 Move W8, [X0]
	002 Subtract W8, W8, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: Fusion.NetworkId get_RuntimeConfig()

Disassembly:
	0x01E93E48 BL 0x1E93668
	0x01E93E4C LDR X8, [X19 + 0x30]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: Fusion.NetworkId get_SceneInfo()

Disassembly:
	0x01E93E50 TBZ X0, 0x0, 0x1E93E80
	0x01E93E54 MOVZ W2, 0x3

ISIL:
	001 Move W0, 3
	002 Return X0

Method: Fusion.NetworkId get_PhysicsInfo()

Disassembly:
	0x01E93E58 B 0x1E93E84
	0x01E93E5C LDR X8, [X19 + 0x30]

ISIL:
	001 Move W0, 4
	002 Return X0

Method: System.Void .ctor(System.UInt32 raw)

Disassembly:
	0x01E93E60 CBZ X8, 0x1E93E98
	0x01E93E64 ADRP X8, 0x2263000

ISIL:
	001 Move [X0], W1
	002 Return 

Method: System.Boolean Equals(Fusion.NetworkId other)

Disassembly:
	0x01E93E68 LDR X8, [X8 + 0x398]
	0x01E93E6C LDR X0, [X8]
	0x01E93E70 LDR W8, [X0 + 0xE0]
	0x01E93E74 CBNZ W8, 0x1E93E98

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Int32 CompareTo(Fusion.NetworkId other)

Disassembly:
	0x01E93E78 BL 0x1C16DFC
	0x01E93E7C B 0x1E93E98
	0x01E93E80 MOVZ W2, 0x1

ISIL:
	001 Move W8, [X0]
	002 Subtract W0, W8, W1
	003 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x01E93E84 CBZ X8, 0x1E93EA8
	0x01E93E88 MOV X0, X8
	0x01E93E8C MOV X1, X19
	0x01E93E90 MOV X3, X31
	0x01E93E94 BL 0x1EA399C
	0x01E93E98 STR X31, [X19 + 0x20]
	0x01E93E9C LDP X20, X19, [X31 + 0x10]
	0x01E93EA0 LDP X30, X21, [X31], #0x20
	0x01E93EA4 RET
	0x01E93EA8 BL 0x1C16F20
	0x01E93EAC B 0x1E93DA0
	0x01E93EB0 LDR W8, [X0 + 0x60]
	0x01E93EB4 STR X31, [X0 + 0x30]
	0x01E93EB8 STR X31, [X0 + 0x20]
	0x01E93EBC STUR X31, [X0 + 0x64]
	0x01E93EC0 AND W8, W8, 0xF000FFFF
	0x01E93EC4 STR W8, [X0 + 0x60]
	0x01E93EC8 RET
	0x01E93ECC STR X30, [X31 - 0x10]!
	0x01E93ED0 LDR X8, [X0 + 0x20]
	0x01E93ED4 CBZ X8, 0x1E93EF0
	0x01E93ED8 STR W31, [X8 + 0x1C]
	0x01E93EDC LDR X8, [X0 + 0x20]
	0x01E93EE0 CBZ X8, 0x1E93EF0
	0x01E93EE4 STR W31, [X8 + 0x20]
	0x01E93EE8 LDR X30, [X31], #0x10
	0x01E93EEC RET
	0x01E93EF0 BL 0x1C16F20
	0x01E93EF4 STP X30, X23, [X31 - 0x30]!
	0x01E93EF8 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2547000
	006 Move W8, [X21+657]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2264000
	014 Move X0, [X0+920]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+657], W8
	018 Compare X20, 0
	019 JumpIfEqual {25}
	020 Move X8, 0x2264000
	021 Move X8, [X8+920]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 Move X0, X20
	027 Call 0x1C17E08
	028 Move W8, [X0]
	029 Move W9, [X19]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0

Method: System.Int32 System.IComparable.CompareTo(System.Object obj)

Disassembly:
	0x01E93EFC STP X20, X19, [X31 + 0x20]
	0x01E93F00 ADRP X20, 0x2546000
	0x01E93F04 LDRB W8, [X20 + 0x29D]
	0x01E93F08 MOV X19, X0
	0x01E93F0C TBNZ X8, 0x0, 0x1E93F3C
	0x01E93F10 ADRP X0, 0x2263000
	0x01E93F14 LDR X0, [X0 + 0xA78]
	0x01E93F18 BL 0x1C16CF4
	0x01E93F1C ADRP X0, 0x226B000
	0x01E93F20 LDR X0, [X0 + 0x320]
	0x01E93F24 BL 0x1C16CF4
	0x01E93F28 ADRP X0, 0x226B000
	0x01E93F2C LDR X0, [X0 + 0x328]
	0x01E93F30 BL 0x1C16CF4
	0x01E93F34 MOVZ W8, 0x1
	0x01E93F38 STRB W8, [X20 + 0x29D]
	0x01E93F3C CBZ X19, 0x1E93FE0
	0x01E93F40 LDRB W8, [X19 + 0x60]
	0x01E93F44 TBNZ X8, 0x1, 0x1E93FE0
	0x01E93F48 ADRP X8, 0x226B000
	0x01E93F4C LDR X8, [X8 + 0x328]
	0x01E93F50 LDR X0, [X8]
	0x01E93F54 LDR W8, [X0 + 0xE0]
	0x01E93F58 CBNZ W8, 0x1E93F60
	0x01E93F5C BL 0x1C16DFC
	0x01E93F60 ADRP X8, 0x226B000
	0x01E93F64 LDR X8, [X8 + 0x320]
	0x01E93F68 LDR X0, [X8]
	0x01E93F6C BL 0x222C62C
	0x01E93F70 LDR X8, [X19 + 0x78]
	0x01E93F74 CBZ X8, 0x1E93FDC
	0x01E93F78 ADRP X23, 0x2263000
	0x01E93F7C LDR X23, [X23 + 0xA78]
	0x01E93F80 MOV W20, W0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2547000
	006 Move W8, [X21+658]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2264000
	014 Move X0, [X0+920]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+658], W8
	018 Compare X20, 0
	019 JumpIfEqual {25}
	020 Move X21, 0x2264000
	021 Move X21, [X21+920]
	022 Move X9, [X20]
	023 Move X8, [X21]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 Move X0, X20
	027 Call 0x1C17E08
	028 Move X8, X0
	029 Move X0, [X21]
	030 Move W20, [X8]
	031 Move W9, [X0+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move W8, [X19]
	036 Subtract W0, W8, W20
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return X0

Method: System.Boolean op_Equality(Fusion.NetworkId a, Fusion.NetworkId b)

Disassembly:
	0x01E93F84 MOV X22, X31
	0x01E93F88 LDR X9, [X8 + 0x18]
	0x01E93F8C CMP W22, W9

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Boolean op_Inequality(Fusion.NetworkId a, Fusion.NetworkId b)

Disassembly:
	0x01E93F90 B.GE 0x1E93FE8
	0x01E93F94 CMP W22, W9
	0x01E93F98 B.CS 0x1E94074

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Boolean op_Implicit(Fusion.NetworkId id)

Disassembly:
	0x01E93F9C ADD X8, X8, X22, 0x3, LSL
	0x01E93FA0 LDR X21, [X8 + 0x20]
	0x01E93FA4 CBZ X21, 0x1E93FFC

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Void Write(Fusion.Sockets.NetBitBuffer* buffer, Fusion.NetworkId id)

Disassembly:
	0x01E93FA8 LDRB W8, [X21 + 0x30]
	0x01E93FAC TBNZ X8, 0x3, 0x1E93FFC
	0x01E93FB0 LDR X0, [X23]

ISIL:
	001 Move W2, 8
	002 Move X3, X31
	003 Call NetBitBuffer.WriteUInt32VarLength, X0, X1, X2
	004 Return 

Method: Fusion.NetworkId Read(Fusion.Sockets.NetBitBuffer* buffer)

Disassembly:
	0x01E93FB4 LDR W8, [X0 + 0xE0]
	0x01E93FB8 CBNZ W8, 0x1E93FC0
	0x01E93FBC BL 0x1C16DFC
	0x01E93FC0 MOV X0, X21
	0x01E93FC4 MOV X1, X31
	0x01E93FC8 BL 0x1E76F90
	0x01E93FCC LDR X8, [X19 + 0x78]

ISIL:
	001 Move [X31-16], X30
	002 Move W1, 8
	003 Move X2, X31
	004 Call NetBitBuffer.ReadUInt32VarLength, X0, X1
	005 Move W0, W0
	006 Move X30, [X31+16]
	007 Return X0

Method: System.Void Write(Fusion.Sockets.NetBitBuffer* buffer)

Disassembly:
	0x01E93FD0 ADD W20, W0, W20
	0x01E93FD4 ADD X22, X22, 0x1
	0x01E93FD8 CBNZ X8, 0x1E93F88
	0x01E93FDC BL 0x1C16F20
	0x01E93FE0 MOV W0, W31
	0x01E93FE4 B 0x1E93FEC
	0x01E93FE8 ADD W0, W20, W9
	0x01E93FEC LDP X20, X19, [X31 + 0x20]
	0x01E93FF0 LDP X22, X21, [X31 + 0x10]
	0x01E93FF4 LDP X30, X23, [X31], #0x30
	0x01E93FF8 RET
	0x01E93FFC MOV X0, X19
	0x01E94000 BL 0x1E93354
	0x01E94004 MOV X19, X0
	0x01E94008 ADRP X0, 0x226A000
	0x01E9400C LDR X0, [X0 + 0x330]
	0x01E94010 BL 0x1C16D08
	0x01E94014 MOV X20, X0
	0x01E94018 ADRP X0, 0x226A000
	0x01E9401C LDR X0, [X0 + 0x338]
	0x01E94020 BL 0x1C16D08
	0x01E94024 MOV X2, X0
	0x01E94028 MOV X0, X20
	0x01E9402C MOV X1, X19
	0x01E94030 MOV X3, X31
	0x01E94034 BL 0x32274B8
	0x01E94038 MOV X19, X0
	0x01E9403C ADRP X0, 0x225F000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2547000
	007 Move X21, 0x2264000
	008 Move W8, [X22+659]
	009 Move X21, [X21+920]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2264000
	017 Move X0, [X0+920]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+659], W8
	021 Move X0, [X21]
	022 Move W20, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X19
	028 Move W1, W20
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move W2, 8
	034 Move X3, X31
	035 Move X30, [X31+48]
	036 Call NetBitBuffer.WriteUInt32VarLength, X0, X1, X2
	037 Return 

Method: System.Int32 GetHashCode()

Disassembly:
	0x01E94040 LDR X0, [X0 + 0x7D0]
	0x01E94044 BL 0x1C16D08

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.String ToString()

Disassembly:
	0x01E94048 BL 0x1C16F10
	0x01E9404C MOV X1, X19
	0x01E94050 MOV X2, X31
	0x01E94054 MOV X20, X0
	0x01E94058 BL 0x33B2C70
	0x01E9405C ADRP X0, 0x226A000
	0x01E94060 LDR X0, [X0 + 0x340]
	0x01E94064 BL 0x1C16D08
	0x01E94068 MOV X1, X0
	0x01E9406C MOV X0, X20
	0x01E94070 BL 0x1C16DEC
	0x01E94074 BL 0x1C16F28
	0x01E94078 STP X30, X21, [X31 - 0x20]!
	0x01E9407C STP X20, X19, [X31 + 0x10]
	0x01E94080 ADRP X21, 0x2545000
	0x01E94084 LDRB W8, [X21 + 0x19F]
	0x01E94088 LDR X20, [X0 + 0x30]
	0x01E9408C MOV X19, X0
	0x01E94090 CBNZ W8, 0x1E940A8
	0x01E94094 ADRP X0, 0x225F000
	0x01E94098 LDR X0, [X0 + 0x598]
	0x01E9409C BL 0x1C16CF4
	0x01E940A0 MOVZ W8, 0x1
	0x01E940A4 STRB W8, [X21 + 0x19F]
	0x01E940A8 ADRP X8, 0x225F000
	0x01E940AC LDR X8, [X8 + 0x598]
	0x01E940B0 LDR X0, [X8]
	0x01E940B4 LDR W8, [X0 + 0xE0]
	0x01E940B8 CBNZ W8, 0x1E940C0
	0x01E940BC BL 0x1C16DFC
	0x01E940C0 MOV X0, X20
	0x01E940C4 MOV X1, X31
	0x01E940C8 BL 0x3C38948
	0x01E940CC TBZ X0, 0x0, 0x1E94100
	0x01E940D0 MOV X0, X19
	0x01E940D4 BL 0x1E93668
	0x01E940D8 MOV W20, W0
	0x01E940DC MOV X0, X19
	0x01E940E0 BL 0x1E93588
	0x01E940E4 AND W8, W20, 0x1
	0x01E940E8 LDP X20, X19, [X31 + 0x10]
	0x01E940EC AND W1, W0, 0x1
	0x01E940F0 MOV W0, W8
	0x01E940F4 MOV X2, X31
	0x01E940F8 LDP X30, X21, [X31], #0x20
	0x01E940FC B 0x1E9C14C
	0x01E94100 LDP X20, X19, [X31 + 0x10]
	0x01E94104 MOV W0, W31
	0x01E94108 LDP X30, X21, [X31], #0x20
	0x01E9410C RET
	0x01E94110 STP X30, X23, [X31 - 0x30]!
	0x01E94114 STP X22, X21, [X31 + 0x10]
	0x01E94118 STP X20, X19, [X31 + 0x20]
	0x01E9411C ADRP X21, 0x2545000
	0x01E94120 ADRP X22, 0x2262000
	0x01E94124 LDRB W8, [X21 + 0x29E]
	0x01E94128 LDR X22, [X22 + 0xE40]
	0x01E9412C MOV X19, X1
	0x01E94130 MOV X20, X0
	0x01E94134 TBNZ X8, 0x0, 0x1E9414C
	0x01E94138 ADRP X0, 0x2262000
	0x01E9413C LDR X0, [X0 + 0xE40]
	0x01E94140 BL 0x1C16CF4
	0x01E94144 MOVZ W8, 0x1
	0x01E94148 STRB W8, [X21 + 0x29E]
	0x01E9414C LDR X0, [X22]
	0x01E94150 LDR W8, [X0 + 0xE0]
	0x01E94154 CBZ W8, 0x1E9418C
	0x01E94158 CBZ W19, 0x1E94194
	0x01E9415C LDR X8, [X20 + 0x30]
	0x01E94160 CBZ X8, 0x1E94224
	0x01E94164 LDR X0, [X8 + 0x50]
	0x01E94168 CBZ X0, 0x1E94224
	0x01E9416C LDR X8, [X20 + 0x20]
	0x01E94170 CBZ X8, 0x1E94224
	0x01E94174 LDR W1, [X8 + 0x20]
	0x01E94178 AND X2, X19, 0x0
	0x01E9417C MOV X3, X31
	0x01E94180 BL 0x1DBF8E4
	0x01E94184 MOV W21, W0
	0x01E94188 B 0x1E94198

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2546000
	007 Move X21, 0x2263000
	008 Move W8, [X20+660]
	009 Move X21, [X21+920]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {41}
	015 Move X0, 0x2263000
	016 Move X0, [X0+920]
	017 Call 0x1C17CF4
	018 Move X0, 0x2268000
	019 Move X0, [X0+1824]
	020 Call 0x1C17CF4
	021 Move X0, 0x226B000
	022 Move X0, [X0+712]
	023 Call 0x1C17CF4
	024 Move X0, 0x226B000
	025 Move X0, [X0+720]
	026 Call 0x1C17CF4
	027 Move X0, 0x226B000
	028 Move X0, [X0+728]
	029 Call 0x1C17CF4
	030 Move X0, 0x226B000
	031 Move X0, [X0+736]
	032 Call 0x1C17CF4
	033 Move X0, 0x226B000
	034 Move X0, [X0+744]
	035 Call 0x1C17CF4
	036 Move X0, 0x226B000
	037 Move X0, [X0+752]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+660], W8
	041 Move X0, [X21]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move W8, [X19]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X9, -20340736
	049 Add X9, X9, 3088
	050 NotImplemented "Instruction ADR not yet implemented."
	051 Move W11, [X9]
	052 Add X10, X10, X11
	053 CallNoReturn X10
	054 Move X8, 0x226B000
	055 Move X8, [X8+752]
	056 Move X9, 0x2268000
	057 Move X9, [X9+1824]
	058 Add X1, X31, 12
	059 Move [X31+12], W8
	060 Move X0, [X9]
	061 Call 0x1C17E04
	062 Move X8, 0x226B000
	063 Move X8, [X8+736]
	064 Move X1, X0
	065 Move X2, X31
	066 Move X8, [X8]
	067 Move X0, X8
	068 Call String.Format, X0, X1
	069 Move X8, 0x226B000
	070 Move X8, [X8+728]
	071 Move X8, 0x226B000
	072 Move X8, [X8+720]
	073 Move X8, 0x226B000
	074 Move X8, [X8+712]
	075 Move X8, 0x226B000
	076 Move X8, [X8+744]
	077 Move X0, [X8]
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X30, [X31+16]
	081 Move X21, [X31+24]
	082 Add X31, X31, 48
	083 Return X0

Method: System.String ToNamePrefixString()

Disassembly:
	0x01E9418C BL 0x1C16DFC
	0x01E94190 CBNZ W19, 0x1E9415C
	0x01E94194 MOVZ W21, 0x1
	0x01E94198 LDR X8, [X20 + 0x30]
	0x01E9419C CBZ X8, 0x1E94224
	0x01E941A0 LDR X8, [X8 + 0x50]
	0x01E941A4 CBZ X8, 0x1E94224
	0x01E941A8 ADRP X23, 0x2545000
	0x01E941AC LDRB W8, [X23 + 0x2F0]
	0x01E941B0 CBNZ W8, 0x1E941C8
	0x01E941B4 ADRP X0, 0x2262000
	0x01E941B8 LDR X0, [X0 + 0xE40]
	0x01E941BC BL 0x1C16CF4
	0x01E941C0 MOVZ W8, 0x1
	0x01E941C4 STRB W8, [X23 + 0x2F0]
	0x01E941C8 LDR X0, [X22]
	0x01E941CC LDR W8, [X0 + 0xE0]
	0x01E941D0 CBZ W8, 0x1E94200
	0x01E941D4 CBZ W19, 0x1E94208
	0x01E941D8 LDR X8, [X20 + 0x20]
	0x01E941DC CBZ X8, 0x1E94224
	0x01E941E0 LDR X0, [X22]
	0x01E941E4 LDR W20, [X8 + 0x1C]
	0x01E941E8 LDR W9, [X0 + 0xE0]
	0x01E941EC CBNZ W9, 0x1E941F4
	0x01E941F0 BL 0x1C16DFC
	0x01E941F4 CMP W20, W19
	0x01E941F8 CSET W1, EQ
	0x01E941FC B 0x1E9420C
	0x01E94200 BL 0x1C16DFC
	0x01E94204 CBNZ W19, 0x1E941D8
	0x01E94208 MOV W1, W31
	0x01E9420C AND W0, W21, 0x1
	0x01E94210 LDP X20, X19, [X31 + 0x20]
	0x01E94214 LDP X22, X21, [X31 + 0x10]
	0x01E94218 MOV X2, X31
	0x01E9421C LDP X30, X23, [X31], #0x30
	0x01E94220 B 0x1E9C14C
	0x01E94224 BL 0x1C16F20
	0x01E94228 SUB X31, X31, 0x50
	0x01E9422C STP X30, X25, [X31 + 0x10]
	0x01E94230 STP X24, X23, [X31 + 0x20]
	0x01E94234 STP X22, X21, [X31 + 0x30]
	0x01E94238 STP X20, X19, [X31 + 0x40]
	0x01E9423C ADRP X21, 0x2545000
	0x01E94240 LDRB W8, [X21 + 0x29F]
	0x01E94244 MOV X20, X1
	0x01E94248 MOV X19, X0
	0x01E9424C TBNZ X8, 0x0, 0x1E94264
	0x01E94250 ADRP X0, 0x2262000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2546000
	007 Move X21, 0x2263000
	008 Move W8, [X20+661]
	009 Move X21, [X21+920]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x2263000
	016 Move X0, [X0+920]
	017 Call 0x1C17CF4
	018 Move X0, 0x2268000
	019 Move X0, [X0+1824]
	020 Call 0x1C17CF4
	021 Move X0, 0x226B000
	022 Move X0, [X0+760]
	023 Call 0x1C17CF4
	024 Move X0, 0x226B000
	025 Move X0, [X0+768]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+661], W8
	029 Move X0, [X21]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move W8, [X19]
	035 Compare W8, 0
	036 JumpIfEqual {50}
	037 Move X9, 0x2268000
	038 Move X9, [X9+1824]
	039 Move X19, 0x226B000
	040 Add X1, X31, 12
	041 Move X0, [X9]
	042 Move X19, [X19+768]
	043 Move [X31+12], W8
	044 Call 0x1C17E04
	045 Move X8, [X19]
	046 Move X1, X0
	047 Move X2, X31
	048 Move X0, X8
	049 Call String.Format, X0, X1
	050 Move X8, 0x226B000
	051 Move X8, [X8+760]
	052 Move X0, [X8]
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X30, [X31+16]
	056 Move X21, [X31+24]
	057 Add X31, X31, 48
	058 Return X0

Method: System.Void .cctor()

Disassembly:
	0x01E94254 LDR X0, [X0 + 0xE40]
	0x01E94258 BL 0x1C16CF4
	0x01E9425C MOVZ W8, 0x1
	0x01E94260 STRB W8, [X21 + 0x29F]
	0x01E94264 STP X31, X31, [X31]
	0x01E94268 LDR X0, [X19 + 0x30]
	0x01E9426C CBZ X0, 0x1E94410
	0x01E94270 MOV X1, X31
	0x01E94274 BL 0x1E9E4EC
	0x01E94278 CMP W0, 0x1
	0x01E9427C B.NE 0x1E943B4
	0x01E94280 LDR X8, [X19 + 0x20]
	0x01E94284 CBZ X8, 0x1E94410
	0x01E94288 LDR W21, [X8 + 0x1C]
	0x01E9428C MOV X0, X19
	0x01E94290 STR W20, [X8 + 0x1C]
	0x01E94294 BL 0x1E9343C
	0x01E94298 CBZ X0, 0x1E94410
	0x01E9429C LDR X8, [X0 + 0x58]
	0x01E942A0 CBZ X8, 0x1E94410
	0x01E942A4 LDR W8, [X8 + 0x14]
	0x01E942A8 ORN W8, W31, W8, 0x0
	0x01E942AC ANDS W31, W8, 0x3
	0x01E942B0 B.NE 0x1E943F8
	0x01E942B4 ADRP X25, 0x2262000
	0x01E942B8 LDR X25, [X25 + 0xE40]
	0x01E942BC LDR X0, [X25]
	0x01E942C0 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x2546000
	006 Move X21, 0x226B000
	007 Move X20, 0x2263000
	008 Move W8, [X19+662]
	009 Move X21, [X21+776]
	010 Move X20, [X20+920]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x226B000
	016 Move X0, [X0+776]
	017 Call 0x1C17CF4
	018 Move X0, 0x2263000
	019 Move X0, [X0+920]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+662], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X19, X0
	027 Call Object..ctor, X0
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move [X8], X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

