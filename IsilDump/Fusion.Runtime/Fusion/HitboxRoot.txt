Type: Fusion.HitboxRoot

Method: System.Boolean get_HitboxRootActive()

Disassembly:
	0x01E85A18 RET
	0x01E85A1C LDR W0, [X0]
	0x01E85A20 RET
	0x01E85A24 MOVZ W10, 0xBE59
	0x01E85A28 ADD W8, W1, W0
	0x01E85A2C MOVK W10, 0x4A900000
	0x01E85A30 MOVZ W9, 0xEE80
	0x01E85A34 SMADDL X10, X8, X10, X31
	0x01E85A38 MOVK W9, 0x360000
	0x01E85A3C UBFM X12, X10, 0x3F, 0x3F
	0x01E85A40 SBFM X10, X10, 0x34, 0x3F
	0x01E85A44 ORR W11, W9, 0x1
	0x01E85A48 ADD W10, W10, W12
	0x01E85A4C MSUB W9, W10, W9, W8
	0x01E85A50 CMP W8, W11
	0x01E85A54 CSEL W0, W8, W9, LT
	0x01E85A58 RET
	0x01E85A5C MOVZ W9, 0xEE80
	0x01E85A60 SUB W8, W0, W1
	0x01E85A64 MOVK W9, 0x360000
	0x01E85A68 ADD W9, W8, W9
	0x01E85A6C CMP W8, 0x0
	0x01E85A70 CSEL W0, W8, W9, GE

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2555000
	006 Move X21, 0x2279000
	007 Move W8, [X20+508]
	008 Move X21, [X21+3416]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2279000
	015 Move X0, [X0+3416]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+508], W8
	019 Move X2, [X21]
	020 Move X0, X19
	021 Move W1, W31
	022 Call NetworkBehaviour.ReinterpretState, X0, X1
	023 Move W8, [X0]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 And W31, W8, 1
	027 NotImplemented "Instruction CSET not yet implemented."
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.Void set_HitboxRootActive(System.Boolean value)

Disassembly:
	0x01E85A74 RET
	0x01E85A78 ADRP X8, 0xFFFFFFFFFEC68000
	0x01E85A7C LDR V0, [X8 + 0xA90]
	0x01E85A80 SCVTF D1, W0
	0x01E85A84 FDIV D0, D1, D0
	0x01E85A88 RET
	0x01E85A8C STR D8, [X31 - 0x10]!
	0x01E85A90 STR X30, [X31 + 0x8]
	0x01E85A94 ADRP X8, 0xFFFFFFFFFEC69000
	0x01E85A98 LDR V8, [X8 + 0x2C8]
	0x01E85A9C FCMP D0, D8
	0x01E85AA0 B.LE 0x1E85AB0
	0x01E85AA4 MOV V1.16B, V8.16B
	0x01E85AA8 BL 0x3EB1C10
	0x01E85AAC B 0x1E85AD0
	0x01E85AB0 FCMP D0, 0x0
	0x01E85AB4 B.PL 0x1E85AD0
	0x01E85AB8 ADRP X8, 0xFFFFFFFFFEC68000
	0x01E85ABC LDR V1, [X8 + 0xA98]
	0x01E85AC0 FCMP D0, D1
	0x01E85AC4 B.PL 0x1E85ACC
	0x01E85AC8 BL 0x3EB1C10
	0x01E85ACC FADD D0, D0, D8
	0x01E85AD0 ADRP X8, 0xFFFFFFFFFEC68000
	0x01E85AD4 LDR V1, [X8 + 0xA90]
	0x01E85AD8 MOVZ X8, 0x7FF00000
	0x01E85ADC FMOV D2, 0.5

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2555000
	007 Move X22, 0x2279000
	008 Move W8, [X21+509]
	009 Move X22, [X22+3416]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2279000
	017 Move X0, [X0+3416]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+509], W8
	021 Move X2, [X22]
	022 Move X0, X20
	023 Move W1, W31
	024 Call NetworkBehaviour.ReinterpretState, X0, X1
	025 Move W8, [X0]
	026 NotImplemented "Instruction ORN not yet implemented."
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 NotImplemented "Instruction BFM not yet implemented."
	032 Move [X0], W8
	033 Move X30, [X31+48]
	034 Return 

Method: System.Boolean get_Registered()

Disassembly:
	0x01E8508C LDR V0, [X21 + 0x24]
	0x01E85090 FABS S0, S0
	0x01E85094 B 0x1E850F8
	0x01E85098 LDRB W8, [X24 + 0x784]
	0x01E8509C CBNZ W8, 0x1E850AC
	0x01E850A0 MOV X0, X20
	0x01E850A4 BL 0x1C16CF4
	0x01E850A8 STRB W25, [X24 + 0x784]

ISIL:
	001 Move X8, [X0+176]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move W8, [X8+48]
	005 And W31, W8, 8
	006 NotImplemented "Instruction CSET not yet implemented."
	007 Return X0
	008 Move W0, W31
	009 Return X0

Method: Fusion.HitboxManager get_Manager()

Disassembly:
	0x01E85AE0 LDR X30, [X31 + 0x8]
	0x01E85AE4 FMUL D0, D0, D1

ISIL:
	001 Move X0, [X0+176]
	002 Return X0

Method: System.Void set_Manager(Fusion.HitboxManager value)

Disassembly:
	0x01E85AE8 FMOV D3, X8
	0x01E85AEC FADD D0, D0, D2

ISIL:
	001 Move [X0+176], X1
	002 Return 

Method: System.Boolean get_InInterest()

Disassembly:
	0x01E850AC LDR X0, [X20]
	0x01E850B0 LDP S11, S10, [X21 + 0x2C]
	0x01E850B4 LDR V9, [X21 + 0x34]
	0x01E850B8 LDR W8, [X0 + 0xE0]
	0x01E850BC CBNZ W8, 0x1E850C4
	0x01E850C0 BL 0x1C16DFC
	0x01E850C4 FMUL S0, S11, S11
	0x01E850C8 FMUL S1, S10, S10
	0x01E850CC FADD S0, S0, S1
	0x01E850D0 FMUL S1, S9, S9
	0x01E850D4 FADD S0, S0, S1
	0x01E850D8 FSQRT S0, S0
	0x01E850DC B 0x1E850F8
	0x01E850E0 LDR V0, [X21 + 0x38]
	0x01E850E4 LDR V1, [X21 + 0x28]
	0x01E850E8 FMOV S2, 0.5
	0x01E850EC FMUL S0, S0, S2
	0x01E850F0 FCMP S0, S1
	0x01E850F4 FCSEL S0, S0, S1, GT
	0x01E850F8 FADD S8, S8, S0
	0x01E850FC FCMP S8, S15
	0x01E85100 B.LE 0x1E85108
	0x01E85104 MOV V15.16B, V8.16B
	0x01E85108 LDR W8, [X22 + 0x18]
	0x01E8510C ADD W23, W23, 0x1
	0x01E85110 CMP W23, W8
	0x01E85114 B.LT 0x1E84FA0
	0x01E85118 B 0x1E85120
	0x01E8511C FMOV S15, W31
	0x01E85120 STR S15, [X19 + 0x84]
	0x01E85124 LDP X20, X19, [X31 + 0x80]
	0x01E85128 LDP X22, X21, [X31 + 0x70]
	0x01E8512C LDP X24, X23, [X31 + 0x60]
	0x01E85130 LDP X30, X25, [X31 + 0x50]
	0x01E85134 LDP D9, D8, [X31 + 0x40]
	0x01E85138 LDP D11, D10, [X31 + 0x30]
	0x01E8513C LDP D13, D12, [X31 + 0x20]
	0x01E85140 LDP D15, D14, [X31 + 0x10]
	0x01E85144 ADD X31, X31, 0x90
	0x01E85148 RET

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2555000
	007 Move W8, [X20+510]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2279000
	014 Move X0, [X0+72]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+510], W8
	018 Move X20, [X19+56]
	019 Compare X20, 0
	020 JumpIfEqual {48}
	021 Move X21, 0x2279000
	022 Move X19, [X19+64]
	023 Move X21, [X21+72]
	024 Move X0, X20
	025 Move X1, X31
	026 Call NetworkRunner.get_LocalPlayer, X0
	027 Move X8, [X20+80]
	028 Compare X8, 0
	029 JumpIfEqual {35}
	030 And X2, X0, 0
	031 Move X0, X8
	032 Move X1, X19
	033 Move X3, X31
	034 Call 0x1DC0658
	035 Move W0, W31
	036 Move X2, [X21]
	037 NotImplemented "Instruction STRH not yet implemented."
	038 Add X0, X31, 12
	039 Move W1, 1
	040 Call Nullable`1<Boolean>.GetValueOrDefault, X0, X1
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+16]
	044 Move X21, [X31+24]
	045 And W0, W0, 1
	046 Add X31, X31, 48
	047 Return X0
	048 Call 0x1C17F20

Method: System.Void Awake()

Disassembly:
	0x01E85AF0 FCVTZS W8, D0
	0x01E85AF4 FCMP D0, D3
	0x01E85AF8 MOVZ W9, 0x80000000
	0x01E85AFC CSEL X0, X9, X8, EQ
	0x01E85B00 LDR V8, [X31], #0x10
	0x01E85B04 RET
	0x01E85B08 CMP W0, 0x169

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Component.get_transform, X0
	006 Move [X19+184], X0
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 

Method: System.Void OnDrawGizmos()

Disassembly:
	0x01E85B0C B.GE 0x1E85B24
	0x01E85B10 TBZ X0, 0x1F, 0x1E85B40
	0x01E85B14 ADDS W31, W0, 0x169
	0x01E85B18 B.LE 0x1E85B4C
	0x01E85B1C ADD W0, W0, 0x168
	0x01E85B20 B 0x1E85B40
	0x01E85B24 MOVZ W9, 0x6C17
	0x01E85B28 UBFM W8, W0, 0x3, 0x1F
	0x01E85B2C MOVK W9, 0x16C10000
	0x01E85B30 UMADDL X8, X8, X9, X31
	0x01E85B34 UBFM X8, X8, 0x22, 0x3F
	0x01E85B38 MOVZ W9, 0x168
	0x01E85B3C MSUB W0, W8, W9, W0
	0x01E85B40 MOVZ W8, 0x2710
	0x01E85B44 MUL W0, W0, W8
	0x01E85B48 RET
	0x01E85B4C SUB W8, W31, W0
	0x01E85B50 MOVZ W9, 0x6C17
	0x01E85B54 MOVK W9, 0x16C10000
	0x01E85B58 UBFM W8, W8, 0x3, 0x1F
	0x01E85B5C UMADDL X8, X8, X9, X31
	0x01E85B60 UBFM X8, X8, 0x22, 0x3F
	0x01E85B64 MOVZ W9, 0x168
	0x01E85B68 MADD W8, W8, W9, W0
	0x01E85B6C ADD W0, W8, 0x168
	0x01E85B70 B 0x1E85B40
	0x01E85B74 STR X30, [X31 - 0x30]!
	0x01E85B78 STP X22, X21, [X31 + 0x10]
	0x01E85B7C STP X20, X19, [X31 + 0x20]
	0x01E85B80 ADRP X20, 0x2554000
	0x01E85B84 LDRB W8, [X20 + 0x205]
	0x01E85B88 MOV X19, X0
	0x01E85B8C TBNZ X8, 0x0, 0x1E85BB0
	0x01E85B90 ADRP X0, 0x226E000
	0x01E85B94 LDR X0, [X0 + 0x758]
	0x01E85B98 BL 0x1C16CF4
	0x01E85B9C ADRP X0, 0x2278000
	0x01E85BA0 LDR X0, [X0 + 0xE88]
	0x01E85BA4 BL 0x1C16CF4
	0x01E85BA8 MOVZ W8, 0x1
	0x01E85BAC STRB W8, [X20 + 0x205]
	0x01E85BB0 LDRSW X8, [X19]
	0x01E85BB4 MOVZ W9, 0x8BAD
	0x01E85BB8 MOVK W9, 0x68DB0000
	0x01E85BBC ADD X0, X31, 0xC
	0x01E85BC0 MUL X9, X8, X9
	0x01E85BC4 UBFM X10, X9, 0x3F, 0x3F
	0x01E85BC8 SBFM X9, X9, 0x2C, 0x3F
	0x01E85BCC ADD W9, W9, W10
	0x01E85BD0 MOVZ W10, 0x2710
	0x01E85BD4 MSUB W8, W9, W10, W8
	0x01E85BD8 MOV X1, X31
	0x01E85BDC STR W8, [X31 + 0xC]
	0x01E85BE0 BL 0x337B6E0
	0x01E85BE4 CBZ X0, 0x1E85C84
	0x01E85BE8 LDR W8, [X0 + 0x10]
	0x01E85BEC ADRP X22, 0x226E000
	0x01E85BF0 ADRP X21, 0x2278000
	0x01E85BF4 LDR X22, [X22 + 0x758]
	0x01E85BF8 LDR X21, [X21 + 0xE88]
	0x01E85BFC MOV X20, X0
	0x01E85C00 CMP W8, 0x3
	0x01E85C04 B.GT 0x1E85C30
	0x01E85C08 MOVZ W9, 0x4
	0x01E85C0C SUB W2, W9, W8
	0x01E85C10 MOVZ W1, 0x30
	0x01E85C14 MOV X0, X31
	0x01E85C18 MOV X3, X31
	0x01E85C1C BL 0x322EAF4
	0x01E85C20 MOV X1, X20
	0x01E85C24 MOV X2, X31
	0x01E85C28 BL 0x321B938

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+176], D14
	003 Move [X31+192], D13
	004 Move [X31+200], D12
	005 Move [X31+208], D11
	006 Move [X31+216], D10
	007 Move [X31+224], D9
	008 Move [X31+232], D8
	009 Move [X31+240], X29
	010 Move [X31+248], X30
	011 Move [X31+256], X20
	012 Move [X31+264], X19
	013 NotImplemented "Instruction MOVI not yet implemented."
	014 Move X1, X31
	015 Move X19, X0
	016 Move [X31+168], W31
	017 Move [X31+152], X31
	018 Move [X31+160], X31
	019 Move [X31+144], X31
	020 Move [X31+112], V0
	021 Move [X31+120], V0
	022 Move [X31+80], V0
	023 Move [X31+88], V0
	024 Call Component.get_transform, X0
	025 Compare X0, 0
	026 JumpIfEqual {96}
	027 Add X1, X31, 160
	028 Add X2, X31, 144
	029 Move X3, X31
	030 Call Transform.GetPositionAndRotation, X0, X1, X2
	031 Move X20, 0x2554000
	032 Move S8, [X31+160]
	033 Move S9, [X31+164]
	034 Move V10, [X31+168]
	035 Move S11, [X31+144]
	036 Move S12, [X31+148]
	037 Move W8, [X20+2139]
	038 Move S14, [X31+152]
	039 Move S13, [X31+156]
	040 Compare W8, 0
	041 JumpIfNotEqual {47}
	042 Move X0, 0x226F000
	043 Move X0, [X0+1440]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X20+2139], W8
	047 Move X8, 0x226F000
	048 Move X8, [X8+1440]
	049 Move V1, V9
	050 Move V2, V10
	051 Move V3, V11
	052 Move X8, [X8]
	053 Move V4, V12
	054 Move V5, V14
	055 Move V6, V13
	056 Move X8, [X8+184]
	057 Move X0, X31
	058 Move V0, [X8+20]
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 Add X8, X31, 16
	061 Move [X31+8], S0
	062 Move V0, V8
	063 Move [X31], X9
	064 Call Matrix4x4.TRS, X0, X1, X2
	065 Move V0, [X31+16]
	066 Move V1, [X31+32]
	067 Move V2, [X31+48]
	068 Move V3, [X31+64]
	069 Add X1, X31, 80
	070 Move X0, X19
	071 Move [X31+80], V0
	072 Move [X31+88], V1
	073 Move [X31+112], V2
	074 Move [X31+120], V3
	075 Move X8, [X19]
	076 Move S0, [X19+148]
	077 Move S1, [X19+152]
	078 Move S2, [X19+156]
	079 Move S3, [X19+160]
	080 Move X9, [X8+584]
	081 Move X2, [X8+592]
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move X20, [X31+256]
	084 Move X19, [X31+264]
	085 Move X29, [X31+240]
	086 Move X30, [X31+248]
	087 Move D9, [X31+224]
	088 Move D8, [X31+232]
	089 Move D11, [X31+208]
	090 Move D10, [X31+216]
	091 Move D13, [X31+192]
	092 Move D12, [X31+200]
	093 Move V14, [X31+176]
	094 Add X31, X31, 272
	095 Return 
	096 Call 0x1C17F20

Method: System.Void DrawGizmos(UnityEngine.Color color, ref UnityEngine.Matrix4x4 localToWorldMatrix)

Disassembly:
	0x01E85C2C MOV X20, X0
	0x01E85C30 LDRSW X8, [X19]
	0x01E85C34 MOVZ W9, 0x8BAD
	0x01E85C38 MOVK W9, 0x68DB0000
	0x01E85C3C LDR X0, [X22]
	0x01E85C40 MUL X8, X8, X9
	0x01E85C44 UBFM X9, X8, 0x3F, 0x3F
	0x01E85C48 SBFM X8, X8, 0x2C, 0x3F
	0x01E85C4C ADD W8, W8, W9
	0x01E85C50 ADD X1, X31, 0x8
	0x01E85C54 STR W8, [X31 + 0x8]
	0x01E85C58 BL 0x1C16E04
	0x01E85C5C LDR X8, [X21]
	0x01E85C60 MOV X1, X0
	0x01E85C64 MOV X2, X20
	0x01E85C68 MOV X3, X31
	0x01E85C6C MOV X0, X8
	0x01E85C70 BL 0x3227BD4
	0x01E85C74 LDP X20, X19, [X31 + 0x20]
	0x01E85C78 LDP X22, X21, [X31 + 0x10]
	0x01E85C7C LDR X30, [X31], #0x30
	0x01E85C80 RET
	0x01E85C84 BL 0x1C16F20
	0x01E85C88 CMP W0, 0x1
	0x01E85C8C B.LT 0x1E85CA4
	0x01E85C90 MOV W8, W31
	0x01E85C94 UBFM W0, W0, 0x1, 0x1F
	0x01E85C98 ADD W8, W8, 0x1
	0x01E85C9C CBNZ W0, 0x1E85C94
	0x01E85CA0 B 0x1E85CA8
	0x01E85CA4 MOV W8, W31
	0x01E85CA8 MOV W0, W8
	0x01E85CAC RET
	0x01E85CB0 STR X30, [X31 - 0x10]!
	0x01E85CB4 CMP W2, 0x2
	0x01E85CB8 B.GE 0x1E85CC4
	0x01E85CBC LDR X30, [X31], #0x10
	0x01E85CC0 RET
	0x01E85CC4 CBZ X0, 0x1E85CFC
	0x01E85CC8 LDR W8, [X0 + 0x18]
	0x01E85CCC CMP W8, 0x1
	0x01E85CD0 B.LT 0x1E85CE8
	0x01E85CD4 MOV W3, W31
	0x01E85CD8 UBFM W8, W8, 0x1, 0x1F
	0x01E85CDC ADD W3, W3, 0x2
	0x01E85CE0 CBNZ W8, 0x1E85CD8
	0x01E85CE4 B 0x1E85CEC
	0x01E85CE8 MOV W3, W31
	0x01E85CEC ADD W8, W1, W2
	0x01E85CF0 SUB W2, W8, 0x1
	0x01E85CF4 LDR X30, [X31], #0x10
	0x01E85CF8 B 0x1E85D00
	0x01E85CFC BL 0x1C16F20
	0x01E85D00 STP X30, X23, [X31 - 0x30]!
	0x01E85D04 STP X22, X21, [X31 + 0x10]
	0x01E85D08 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], D11
	003 Move [X31+136], D10
	004 Move [X31+144], D9
	005 Move [X31+152], D8
	006 Move [X31+160], X30
	007 Move [X31+168], X19
	008 Move V8, V3
	009 Move V9, V2
	010 Move V10, V1
	011 Move V11, V0
	012 Move V1, [X1+32]
	013 Move V0, [X1+48]
	014 Move V3, [X1]
	015 Move V2, [X1+16]
	016 Move X19, X0
	017 Add X0, X31, 64
	018 Move X1, X31
	019 Move [X31+96], V1
	020 Move [X31+104], V0
	021 Move [X31+64], V3
	022 Move [X31+72], V2
	023 Call Gizmos.set_matrix, X0
	024 Move V0, V11
	025 Move V1, V10
	026 Move V2, V9
	027 Move V3, V8
	028 Move X0, X31
	029 Call Gizmos.set_color, X0
	030 Move S1, [X19+140]
	031 Move S2, [X19+144]
	032 Move S3, [X19+132]
	033 Move S0, [X19+136]
	034 Move X0, X31
	035 Call Gizmos.DrawWireSphere, X0, V0
	036 Move S0, 1
	037 Move S1, 1
	038 Move S2, 1
	039 Move S3, 1
	040 Move X0, X31
	041 Call Gizmos.set_color, X0
	042 Move X19, 0x2554000
	043 Move W8, [X19+2752]
	044 Compare W8, 0
	045 JumpIfNotEqual {51}
	046 Move X0, 0x2273000
	047 Move X0, [X0+624]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X19+2752], W8
	051 Move X8, 0x2273000
	052 Move X8, [X8+624]
	053 Add X0, X31, 0
	054 Move X1, X31
	055 Move X8, [X8]
	056 Move X8, [X8+184]
	057 Move V1, [X8+96]
	058 Move V0, [X8+112]
	059 Move V2, [X8+64]
	060 Move V3, [X8+80]
	061 Move [X31+32], V1
	062 Move [X31+40], V0
	063 Move [X31], V2
	064 Move [X31+8], V3
	065 Call Gizmos.set_matrix, X0
	066 Move X30, [X31+160]
	067 Move X19, [X31+168]
	068 Move D9, [X31+144]
	069 Move D8, [X31+152]
	070 Move D11, [X31+128]
	071 Move D10, [X31+136]
	072 Add X31, X31, 176
	073 Return 

Method: System.Void InitHitboxes()

Disassembly:
	0x01E85D0C CMP W2, W1
	0x01E85D10 B.LE 0x1E85DA8
	0x01E85D14 MOV W19, W2
	0x01E85D18 MOV W20, W1
	0x01E85D1C MOV X21, X0
	0x01E85D20 SUB W22, W3, 0x1
	0x01E85D24 SUB W8, W19, W20
	0x01E85D28 ADD W9, W8, 0x1
	0x01E85D2C CMP W9, 0x10
	0x01E85D30 B.LE 0x1E85D78
	0x01E85D34 ADDS W31, W22, 0x1
	0x01E85D38 B.EQ 0x1E85DB8
	0x01E85D3C MOV X0, X21
	0x01E85D40 MOV W1, W20
	0x01E85D44 MOV W2, W19
	0x01E85D48 BL 0x1E86004
	0x01E85D4C MOV W23, W0
	0x01E85D50 ADD W1, W0, 0x1
	0x01E85D54 MOV X0, X21
	0x01E85D58 MOV W2, W19
	0x01E85D5C MOV W3, W22
	0x01E85D60 BL 0x1E85D00
	0x01E85D64 SUB W19, W23, 0x1
	0x01E85D68 CMP W19, W20
	0x01E85D6C SUB W22, W22, 0x1
	0x01E85D70 B.GT 0x1E85D24
	0x01E85D74 B 0x1E85DA8
	0x01E85D78 CBZ W8, 0x1E85DA8
	0x01E85D7C CMP W8, 0x2
	0x01E85D80 B.EQ 0x1E85DD4
	0x01E85D84 MOV X0, X21
	0x01E85D88 MOV W1, W20
	0x01E85D8C CMP W8, 0x1
	0x01E85D90 B.EQ 0x1E85E00
	0x01E85D94 MOV W2, W19
	0x01E85D98 LDP X20, X19, [X31 + 0x20]
	0x01E85D9C LDP X22, X21, [X31 + 0x10]
	0x01E85DA0 LDP X30, X23, [X31], #0x30
	0x01E85DA4 B 0x1E85E74
	0x01E85DA8 LDP X20, X19, [X31 + 0x20]
	0x01E85DAC LDP X22, X21, [X31 + 0x10]
	0x01E85DB0 LDP X30, X23, [X31], #0x30
	0x01E85DB4 RET
	0x01E85DB8 MOV X0, X21
	0x01E85DBC MOV W1, W20
	0x01E85DC0 MOV W2, W19
	0x01E85DC4 LDP X20, X19, [X31 + 0x20]
	0x01E85DC8 LDP X22, X21, [X31 + 0x10]
	0x01E85DCC LDP X30, X23, [X31], #0x30
	0x01E85DD0 B 0x1E85F10
	0x01E85DD4 SUB W22, W19, 0x1
	0x01E85DD8 MOV X0, X21
	0x01E85DDC MOV W1, W20
	0x01E85DE0 MOV W2, W22
	0x01E85DE4 BL 0x1E85E1C
	0x01E85DE8 MOV X0, X21
	0x01E85DEC MOV W1, W20
	0x01E85DF0 MOV W2, W19
	0x01E85DF4 BL 0x1E85E1C
	0x01E85DF8 MOV X0, X21
	0x01E85DFC MOV W1, W22
	0x01E85E00 MOV W2, W19
	0x01E85E04 LDP X20, X19, [X31 + 0x20]
	0x01E85E08 LDP X22, X21, [X31 + 0x10]
	0x01E85E0C LDP X30, X23, [X31], #0x30
	0x01E85E10 B 0x1E85E1C
	0x01E85E14 SUB W0, W0, W1
	0x01E85E18 RET
	0x01E85E1C STR X30, [X31 - 0x10]!
	0x01E85E20 CMP W1, W2
	0x01E85E24 B.EQ 0x1E85E64
	0x01E85E28 CBZ X0, 0x1E85E70
	0x01E85E2C LDR W10, [X0 + 0x18]
	0x01E85E30 CMP W10, W1
	0x01E85E34 B.LS 0x1E85E6C
	0x01E85E38 ADD X8, X0, W1, 0x2, SXTW
	0x01E85E3C LDR W9, [X8 + 0x20]!
	0x01E85E40 CMP W10, W2
	0x01E85E44 B.LS 0x1E85E6C
	0x01E85E48 ADD X10, X0, W2, 0x2, SXTW
	0x01E85E4C LDR W11, [X10 + 0x20]!
	0x01E85E50 SUB W12, W9, W11
	0x01E85E54 CMP W12, 0x1
	0x01E85E58 B.LT 0x1E85E64
	0x01E85E5C STR W11, [X8]
	0x01E85E60 STR W9, [X10]
	0x01E85E64 LDR X30, [X31], #0x10
	0x01E85E68 RET
	0x01E85E6C BL 0x1C16F28
	0x01E85E70 BL 0x1C16F20
	0x01E85E74 STR X30, [X31 - 0x10]!
	0x01E85E78 CMP W1, W2
	0x01E85E7C B.GE 0x1E85F00
	0x01E85E80 CBZ X0, 0x1E85F0C
	0x01E85E84 LDR W8, [X0 + 0x18]
	0x01E85E88 SXTW X9, W1
	0x01E85E8C SXTW X10, W2
	0x01E85E90 MOV X12, X9
	0x01E85E94 ADD X11, X12, 0x1
	0x01E85E98 CMP W11, W8
	0x01E85E9C B.CS 0x1E85F08
	0x01E85EA0 ADD X13, X0, X11, 0x2, LSL
	0x01E85EA4 LDR W13, [X13 + 0x20]
	0x01E85EA8 CMP X12, X9
	0x01E85EAC B.LT 0x1E85EE0
	0x01E85EB0 CMP W12, W8
	0x01E85EB4 B.CS 0x1E85F08
	0x01E85EB8 ADD X14, X0, W12, 0x2, SXTW
	0x01E85EBC LDR W14, [X14 + 0x20]
	0x01E85EC0 CMP W13, W14
	0x01E85EC4 B.PL 0x1E85EE0
	0x01E85EC8 ADD W15, W12, 0x1
	0x01E85ECC SUB W12, W12, 0x1
	0x01E85ED0 ADD X15, X0, W15, 0x2, SXTW
	0x01E85ED4 CMP W12, W1
	0x01E85ED8 STR W14, [X15 + 0x20]
	0x01E85EDC B.GE 0x1E85EB0
	0x01E85EE0 ADD W12, W12, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2555000
	007 Move X20, 0x2279000
	008 Move W8, [X21+511]
	009 Move X20, [X20+2952]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {38}
	015 Move X0, 0x2279000
	016 Move X0, [X0+3672]
	017 Call 0x1C17CF4
	018 Move X0, 0x226F000
	019 Move X0, [X0+2600]
	020 Call 0x1C17CF4
	021 Move X0, 0x226F000
	022 Move X0, [X0+1880]
	023 Call 0x1C17CF4
	024 Move X0, 0x2279000
	025 Move X0, [X0+3680]
	026 Call 0x1C17CF4
	027 Move X0, 0x2279000
	028 Move X0, [X0+3688]
	029 Call 0x1C17CF4
	030 Move X0, 0x2279000
	031 Move X0, [X0+2952]
	032 Call 0x1C17CF4
	033 Move X0, 0x2279000
	034 Move X0, [X0+3696]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+511], W8
	038 Move X22, 0x2279000
	039 Move W21, [X19+128]
	040 Move X22, [X22+3688]
	041 Move X0, X19
	042 Move X1, X31
	043 Call Component.get_transform, X0
	044 Move X8, [X20]
	045 Move X20, X0
	046 Move W9, [X8+224]
	047 Compare W9, 0
	048 JumpIfNotEqual {51}
	049 Move X0, X8
	050 Call 0x1C17DFC
	051 Move X3, [X22]
	052 Move W2, W21
	053 ShiftRight W2, 1
	054 And W2, W2, 1
	055 Move X0, X20
	056 Move X1, X31
	057 Call 0x2224D74, X0, X1, X2
	058 Compare X0, 0
	059 JumpIfEqual {127}
	060 Move X8, 0x2279000
	061 Move X8, [X8+3680]
	062 Move X1, [X8]
	063 Call List`1<Object>.ToArray, X0
	064 Move X20, X19
	065 Move [X20+168], X0
	066 Compare X0, 0
	067 JumpIfEqual {127}
	068 Move W8, [X0+24]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X8, 0x226F000
	071 Move X8, [X8+1880]
	072 Add X1, X31, 12
	073 Move X0, [X8]
	074 Move W8, 31
	075 Move [X31+12], W8
	076 Call 0x1C17E04
	077 Move X8, 0x2279000
	078 Move X8, [X8+3696]
	079 Move X1, X0
	080 Move X2, X31
	081 Move X8, [X8]
	082 Move X0, X8
	083 Call String.Format, X0, X1
	084 Move X8, 0x226F000
	085 Move X8, [X8+2600]
	086 Move X21, X0
	087 Move X8, [X8]
	088 Move W9, [X8+224]
	089 Compare W9, 0
	090 JumpIfNotEqual {93}
	091 Move X0, X8
	092 Call 0x1C17DFC
	093 Move X0, X21
	094 Move X1, X31
	095 Call Debug.LogWarning, X0
	096 Move X8, 0x2279000
	097 Move X8, [X8+3672]
	098 Move W1, 31
	099 Move X0, X20
	100 Move X2, [X8]
	101 Call Array.Resize, X0, X1
	102 Move X0, [X20]
	103 Compare X0, 0
	104 JumpIfEqual {127}
	105 Move W8, [X0+24]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move W9, W31
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Add X10, X0, W9
	110 Move X10, [X10+32]
	111 Compare X10, 0
	112 JumpIfEqual {127}
	113 Move [X10+80], W9
	114 Add W9, W9, 1
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move [X10+72], X19
	117 Move V0, [X19+132]
	118 NotImplemented "Instruction FCMP not yet implemented."
	119 Move X0, X19
	120 Call HitboxRoot.SetMinBoundingRadius, X0
	121 Move X20, [X31+32]
	122 Move X19, [X31+40]
	123 Move X22, [X31+16]
	124 Move X21, [X31+24]
	125 Move X30, [X31+48]
	126 Return 
	127 Call 0x1C17F20
	128 Call 0x1C17F28

Method: System.Void SetMinBoundingRadius()

Disassembly:
	0x01E85EE4 CMP W12, W8
	0x01E85EE8 B.CS 0x1E85F08
	0x01E85EEC ADD X12, X0, W12, 0x2, SXTW
	0x01E85EF0 CMP X11, X10
	0x01E85EF4 STR W13, [X12 + 0x20]
	0x01E85EF8 MOV X12, X11
	0x01E85EFC B.NE 0x1E85E94
	0x01E85F00 LDR X30, [X31], #0x10
	0x01E85F04 RET
	0x01E85F08 BL 0x1C16F28
	0x01E85F0C BL 0x1C16F20
	0x01E85F10 STR X30, [X31 - 0x40]!
	0x01E85F14 STP X24, X23, [X31 + 0x10]
	0x01E85F18 STP X22, X21, [X31 + 0x20]
	0x01E85F1C STP X20, X19, [X31 + 0x30]
	0x01E85F20 ADRP X22, 0x2554000
	0x01E85F24 LDRB W8, [X22 + 0x207]
	0x01E85F28 MOV W19, W2
	0x01E85F2C MOV W20, W1
	0x01E85F30 MOV X21, X0
	0x01E85F34 TBNZ X8, 0x0, 0x1E85F4C
	0x01E85F38 ADRP X0, 0x2278000
	0x01E85F3C LDR X0, [X0 + 0xE90]
	0x01E85F40 BL 0x1C16CF4
	0x01E85F44 MOVZ W8, 0x1
	0x01E85F48 STRB W8, [X22 + 0x207]
	0x01E85F4C SUB W8, W19, W20
	0x01E85F50 ADD W22, W8, 0x1
	0x01E85F54 CMP W22, 0x2
	0x01E85F58 B.LT 0x1E85FE8
	0x01E85F5C UBFM W23, W22, 0x1, 0x1F
	0x01E85F60 MOV X0, X21
	0x01E85F64 MOV W1, W23
	0x01E85F68 MOV W2, W22
	0x01E85F6C MOV W3, W20
	0x01E85F70 BL 0x1E86148
	0x01E85F74 SUBS W23, W23, 0x1
	0x01E85F78 B.GT 0x1E85F60
	0x01E85F7C CMP W22, 0x2
	0x01E85F80 B.LT 0x1E85FE8
	0x01E85F84 CBZ X21, 0x1E86000
	0x01E85F88 ADD X8, X21, W20, 0x2, SXTW
	0x01E85F8C MOV W9, W22
	0x01E85F90 ADD X22, X8, 0x20
	0x01E85F94 ADD X23, X9, 0x1
	0x01E85F98 SUB W24, W31, W20
	0x01E85F9C LDR W8, [X21 + 0x18]
	0x01E85FA0 CMP W8, W20
	0x01E85FA4 B.LS 0x1E85FFC
	0x01E85FA8 CMP W19, W8
	0x01E85FAC B.CS 0x1E85FFC
	0x01E85FB0 ADD X8, X21, W19, 0x2, SXTW
	0x01E85FB4 LDR W9, [X8 + 0x20]
	0x01E85FB8 LDR W10, [X22]
	0x01E85FBC ADD W2, W24, W19
	0x01E85FC0 MOVZ W1, 0x1
	0x01E85FC4 MOV X0, X21
	0x01E85FC8 MOV W3, W20
	0x01E85FCC STR W9, [X22]
	0x01E85FD0 STR W10, [X8 + 0x20]
	0x01E85FD4 BL 0x1E86148
	0x01E85FD8 SUB X23, X23, 0x1
	0x01E85FDC CMP X23, 0x2
	0x01E85FE0 SUB W19, W19, 0x1
	0x01E85FE4 B.GT 0x1E85F9C
	0x01E85FE8 LDP X20, X19, [X31 + 0x30]
	0x01E85FEC LDP X22, X21, [X31 + 0x20]
	0x01E85FF0 LDP X24, X23, [X31 + 0x10]
	0x01E85FF4 LDR X30, [X31], #0x40
	0x01E85FF8 RET
	0x01E85FFC BL 0x1C16F28
	0x01E86000 BL 0x1C16F20
	0x01E86004 STR X30, [X31 - 0x30]!
	0x01E86008 STP X22, X21, [X31 + 0x10]
	0x01E8600C STP X20, X19, [X31 + 0x20]
	0x01E86010 ADRP X22, 0x2553000
	0x01E86014 LDRB W8, [X22 + 0x206]
	0x01E86018 MOV W21, W2
	0x01E8601C MOV W19, W1
	0x01E86020 MOV X20, X0
	0x01E86024 TBNZ X8, 0x0, 0x1E8603C
	0x01E86028 ADRP X0, 0x2277000
	0x01E8602C LDR X0, [X0 + 0xE90]
	0x01E86030 BL 0x1C16CF4
	0x01E86034 MOVZ W8, 0x1
	0x01E86038 STRB W8, [X22 + 0x206]
	0x01E8603C SUB W8, W21, W19
	0x01E86040 CMP W8, 0x0
	0x01E86044 CINC W8, W8, LT
	0x01E86048 ADD W22, W19, W8, 0x1, ASR
	0x01E8604C MOV X0, X20
	0x01E86050 MOV W1, W19
	0x01E86054 MOV W2, W22
	0x01E86058 BL 0x1E85E1C
	0x01E8605C MOV X0, X20
	0x01E86060 MOV W1, W19
	0x01E86064 MOV W2, W21
	0x01E86068 BL 0x1E85E1C
	0x01E8606C MOV X0, X20
	0x01E86070 MOV W1, W22
	0x01E86074 MOV W2, W21
	0x01E86078 BL 0x1E85E1C
	0x01E8607C CBZ X20, 0x1E86144
	0x01E86080 LDR W8, [X20 + 0x18]
	0x01E86084 CMP W22, W8
	0x01E86088 B.CS 0x1E86140
	0x01E8608C ADD X12, X20, W22, 0x2, SXTW
	0x01E86090 LDR W11, [X12 + 0x20]!
	0x01E86094 SUB W10, W21, 0x1
	0x01E86098 CMP W10, W8
	0x01E8609C B.CS 0x1E86140
	0x01E860A0 ADD X9, X20, W10, 0x2, SXTW
	0x01E860A4 LDR W13, [X9 + 0x20]!
	0x01E860A8 CMP W10, W19
	0x01E860AC STR W13, [X12]
	0x01E860B0 STR W11, [X9]
	0x01E860B4 B.LE 0x1E86108
	0x01E860B8 MOV W12, W10
	0x01E860BC ADD W19, W19, 0x1
	0x01E860C0 CMP W19, W8
	0x01E860C4 B.CS 0x1E86140
	0x01E860C8 ADD X13, X20, W19, 0x2, SXTW
	0x01E860CC LDR W14, [X13 + 0x20]!
	0x01E860D0 CMP W14, W11
	0x01E860D4 B.MI 0x1E860BC
	0x01E860D8 SUB W12, W12, 0x1
	0x01E860DC CMP W12, W8
	0x01E860E0 B.CS 0x1E86140
	0x01E860E4 ADD X15, X20, W12, 0x2, SXTW
	0x01E860E8 LDR W16, [X15 + 0x20]!
	0x01E860EC CMP W11, W16
	0x01E860F0 B.MI 0x1E860D8
	0x01E860F4 CMP W19, W12
	0x01E860F8 B.GE 0x1E86108
	0x01E860FC STR W16, [X13]
	0x01E86100 STR W14, [X15]
	0x01E86104 B 0x1E860BC
	0x01E86108 CMP W19, W10
	0x01E8610C B.EQ 0x1E8612C
	0x01E86110 CMP W19, W8
	0x01E86114 B.CS 0x1E86140
	0x01E86118 ADD X8, X20, W19, 0x2, SXTW
	0x01E8611C LDR W10, [X9]
	0x01E86120 LDR W11, [X8 + 0x20]
	0x01E86124 STR W10, [X8 + 0x20]
	0x01E86128 STR W11, [X9]
	0x01E8612C MOV W0, W19
	0x01E86130 LDP X20, X19, [X31 + 0x20]
	0x01E86134 LDP X22, X21, [X31 + 0x10]
	0x01E86138 LDR X30, [X31], #0x30
	0x01E8613C RET
	0x01E86140 BL 0x1C16F28
	0x01E86144 BL 0x1C16F20
	0x01E86148 STR X30, [X31 - 0x10]!
	0x01E8614C CBZ X0, 0x1E86214
	0x01E86150 LDR W8, [X0 + 0x18]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+88], X25
	012 Move [X31+96], X24
	013 Move [X31+104], X23
	014 Move [X31+112], X22
	015 Move [X31+120], X21
	016 Move [X31+128], X20
	017 Move [X31+136], X19
	018 Move X8, [X0+168]
	019 Compare X8, 0
	020 JumpIfEqual {178}
	021 Move X8, [X8+24]
	022 Compare X8, 0
	023 JumpIfEqual {160}
	024 Move X1, X31
	025 Move X19, X0
	026 Call Component.get_transform, X0
	027 Compare X0, 0
	028 JumpIfEqual {178}
	029 Move X1, X31
	030 Call Transform.get_position, X0
	031 Move X0, X19
	032 Move X1, X31
	033 Move V8, V0
	034 Move V9, V1
	035 Move V10, V2
	036 Call Component.get_transform, X0
	037 Compare X0, 0
	038 JumpIfEqual {178}
	039 Move X1, X31
	040 Call Transform.get_rotation, X0
	041 Move S4, [X19+136]
	042 Move S5, [X19+140]
	043 Move V6, [X19+144]
	044 Move X0, X31
	045 Call Quaternion.op_Multiply, X0, X1
	046 Move X22, [X19+168]
	047 Compare X22, 0
	048 JumpIfEqual {178}
	049 Move W8, [X22+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add S3, S8, S0
	052 Add S0, S9, S1
	053 Move [X31+8], S0
	054 Move [X31+16], S3
	055 Move X20, 0x226F000
	056 Move X20, [X20+1448]
	057 Move W23, W31
	058 Add S14, S10, S2
	059 Move S15, W31
	060 Move X24, 0x2554000
	061 Move W25, 1
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Add X8, X22, W23
	064 Move X21, [X8+32]
	065 Compare X21, 0
	066 JumpIfEqual {178}
	067 Move W8, [X21+32]
	068 Compare W8, 0
	069 JumpIfEqual {155}
	070 Move X0, X21
	071 Move X1, X31
	072 Call Component.get_transform, X0
	073 Compare X0, 0
	074 JumpIfEqual {178}
	075 Move X1, X31
	076 Call Transform.get_position, X0
	077 Move X0, X21
	078 Move X1, X31
	079 Move V8, V0
	080 Move V9, V1
	081 Move V10, V2
	082 Call Component.get_transform, X0
	083 Compare X0, 0
	084 JumpIfEqual {178}
	085 Move X1, X31
	086 Call Transform.get_rotation, X0
	087 Move S4, [X21+60]
	088 Move S5, [X21+64]
	089 Move V6, [X21+68]
	090 Move X0, X31
	091 Call Quaternion.op_Multiply, X0, X1
	092 Move W8, [X24+1924]
	093 Move V11, V0
	094 Move V12, V1
	095 Move V13, V2
	096 Compare W8, 0
	097 JumpIfNotEqual {101}
	098 Move X0, X20
	099 Call 0x1C17CF4
	100 Move [X24+1924], W25
	101 Move X0, [X20]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move V3, [X31+12]
	107 Add S0, S8, S11
	108 Add S1, S9, S12
	109 Add S2, S10, S13
	110 Subtract S0, S0, S3
	111 Move V3, [X31+8]
	112 Move W8, [X21+32]
	113 Subtract S2, S2, S14
	114 Multiply S0, S0, S0
	115 Subtract S1, S1, S3
	116 Multiply S1, S1, S1
	117 Multiply S2, S2, S2
	118 Add S0, S0, S1
	119 Add S0, S2, S0
	120 NotImplemented "Instruction CMP not yet implemented."
	121 NotImplemented "Instruction FSQRT not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move V0, [X21+36]
	125 NotImplemented "Instruction FABS not yet implemented."
	126 Move W8, [X24+1924]
	127 Compare W8, 0
	128 JumpIfNotEqual {132}
	129 Move X0, X20
	130 Call 0x1C17CF4
	131 Move [X24+1924], W25
	132 Move X0, [X20]
	133 Move S11, [X21+44]
	134 Move S10, [X21+48]
	135 Move V9, [X21+52]
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {140}
	139 Call 0x1C17DFC
	140 Multiply S0, S11, S11
	141 Multiply S1, S10, S10
	142 Add S0, S0, S1
	143 Multiply S1, S9, S9
	144 Add S0, S0, S1
	145 NotImplemented "Instruction FSQRT not yet implemented."
	146 Move V0, [X21+56]
	147 Move V1, [X21+40]
	148 Move S2, 0.5
	149 Multiply S0, S0, S2
	150 NotImplemented "Instruction FCMP not yet implemented."
	151 NotImplemented "Instruction FCSEL not yet implemented."
	152 Add S8, S8, S0
	153 NotImplemented "Instruction FCMP not yet implemented."
	154 Move V15, V8
	155 Move W8, [X22+24]
	156 Add W23, W23, 1
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move S15, W31
	159 Move [X19+132], S15
	160 Move X20, [X31+128]
	161 Move X19, [X31+136]
	162 Move X22, [X31+112]
	163 Move X21, [X31+120]
	164 Move X24, [X31+96]
	165 Move X23, [X31+104]
	166 Move X30, [X31+80]
	167 Move X25, [X31+88]
	168 Move D9, [X31+64]
	169 Move D8, [X31+72]
	170 Move D11, [X31+48]
	171 Move D10, [X31+56]
	172 Move D13, [X31+32]
	173 Move D12, [X31+40]
	174 Move D15, [X31+16]
	175 Move D14, [X31+24]
	176 Add X31, X31, 144
	177 Return 
	178 Call 0x1C17F20
	179 Call 0x1C17F28

Method: System.Void SetHitboxActive(Fusion.Hitbox hitbox, System.Boolean setActive)

Disassembly:
	0x01E8292C MOV X2, X19
	0x01E82930 STP W8, W21, [X1 + 0x10]
	0x01E82934 STR X9, [X1 + 0x40]
	0x01E82938 BL 0x1E82258
	0x01E8293C LDP X20, X19, [X31 + 0x80]
	0x01E82940 LDP X22, X21, [X31 + 0x70]
	0x01E82944 LDP X24, X23, [X31 + 0x60]
	0x01E82948 LDP X26, X25, [X31 + 0x50]
	0x01E8294C LDP X30, X27, [X31 + 0x40]
	0x01E82950 LDP D9, D8, [X31 + 0x30]
	0x01E82954 LDP D11, D10, [X31 + 0x20]
	0x01E82958 LDP D13, D12, [X31 + 0x10]
	0x01E8295C LDR V14, [X31], #0x90
	0x01E82960 RET
	0x01E82964 BL 0x1C16F20
	0x01E82968 SUB X31, X31, 0x80
	0x01E8296C STP D11, D10, [X31 + 0x10]
	0x01E82970 STP D9, D8, [X31 + 0x20]
	0x01E82974 STP X30, X31, [X31 + 0x30]
	0x01E82978 STP X26, X25, [X31 + 0x40]
	0x01E8297C STP X24, X23, [X31 + 0x50]
	0x01E82980 STP X22, X21, [X31 + 0x60]
	0x01E82984 STP X20, X19, [X31 + 0x70]
	0x01E82988 MOV W20, W5
	0x01E8298C MOV W23, W4
	0x01E82990 MOV W25, W3
	0x01E82994 MOV X19, X2
	0x01E82998 MOV X26, X1
	0x01E8299C AND X1, X1, 0x0
	0x01E829A0 ADD X2, X31, 0x38
	0x01E829A4 ADD X3, X31, 0x8
	0x01E829A8 ADD X4, X31, 0x0
	0x01E829AC MOV X5, X31
	0x01E829B0 MOV X21, X7
	0x01E829B4 MOV W22, W6
	0x01E829B8 MOV V8.16B, V3.16B
	0x01E829BC MOV V9.16B, V2.16B
	0x01E829C0 MOV V10.16B, V1.16B
	0x01E829C4 MOV V11.16B, V0.16B
	0x01E829C8 MOV X24, X0
	0x01E829CC STP X31, X31, [X31]
	0x01E829D0 BL 0x1E89388
	0x01E829D4 LDR X8, [X24 + 0x78]
	0x01E829D8 CBZ X8, 0x1E82A80
	0x01E829DC STR W26, [X8 + 0x1C]
	0x01E829E0 LDR X8, [X24 + 0x78]
	0x01E829E4 CBZ X8, 0x1E82A80
	0x01E829E8 STP S11, S10, [X8 + 0x48]
	0x01E829EC STR S9, [X8 + 0x50]
	0x01E829F0 LDR X8, [X24 + 0x78]
	0x01E829F4 CBZ X8, 0x1E82A80
	0x01E829F8 STR S8, [X8 + 0x54]
	0x01E829FC LDR X9, [X31 + 0x38]
	0x01E82A00 STR X9, [X8 + 0x20]
	0x01E82A04 LDR X8, [X24 + 0x78]
	0x01E82A08 CBZ X8, 0x1E82A80
	0x01E82A0C LDR X9, [X31 + 0x8]
	0x01E82A10 STR X9, [X8 + 0x38]
	0x01E82A14 LDR X8, [X24 + 0x78]
	0x01E82A18 CBZ X8, 0x1E82A80
	0x01E82A1C LDR X9, [X31]
	0x01E82A20 MOV W0, W25
	0x01E82A24 MOV X1, X31
	0x01E82A28 STR X9, [X8 + 0x30]
	0x01E82A2C LDR X26, [X24 + 0x78]
	0x01E82A30 BL 0x3C35CBC
	0x01E82A34 CBZ X26, 0x1E82A80
	0x01E82A38 STR W0, [X26 + 0x18]
	0x01E82A3C LDR X1, [X24 + 0x78]
	0x01E82A40 CBZ X1, 0x1E82A80
	0x01E82A44 AND W3, W20, 0x1
	0x01E82A48 MOV X0, X24
	0x01E82A4C MOV X2, X19
	0x01E82A50 STP W22, W23, [X1 + 0x10]
	0x01E82A54 STR X21, [X1 + 0x40]
	0x01E82A58 BL 0x1E82258
	0x01E82A5C LDP X20, X19, [X31 + 0x70]
	0x01E82A60 LDP X22, X21, [X31 + 0x60]
	0x01E82A64 LDP X24, X23, [X31 + 0x50]
	0x01E82A68 LDP X26, X25, [X31 + 0x40]
	0x01E82A6C LDR X30, [X31 + 0x30]
	0x01E82A70 LDP D9, D8, [X31 + 0x20]
	0x01E82A74 LDP D11, D10, [X31 + 0x10]
	0x01E82A78 ADD X31, X31, 0x80
	0x01E82A7C RET
	0x01E82A80 BL 0x1C16F20
	0x01E82A84 STR D8, [X31 - 0x60]!
	0x01E82A88 STP X30, X27, [X31 + 0x10]
	0x01E82A8C STP X26, X25, [X31 + 0x20]
	0x01E82A90 STP X24, X23, [X31 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {54}
	008 Move W8, [X1+80]
	009 Move X20, X1
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X9, [X20+72]
	012 Move X21, X0
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X9, [X21+168]
	015 Compare X9, 0
	016 JumpIfEqual {54}
	017 Move W10, [X9+24]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Add X8, X9, X8
	020 Move X8, [X8+32]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X22, 0x2558000
	023 Move W8, [X22+559]
	024 Move W19, W2
	025 Compare W8, 0
	026 JumpIfNotEqual {32}
	027 Move X0, 0x227C000
	028 Move X0, [X0+3416]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+559], W8
	032 Move X8, 0x227C000
	033 Move X8, [X8+3416]
	034 Move X0, X21
	035 Move W1, W31
	036 Move X2, [X8]
	037 Call NetworkBehaviour.ReinterpretState, X0, X1
	038 Move W8, [X20+80]
	039 Move W9, [X0]
	040 Move W10, 1
	041 And W31, W19, 1
	042 Add W8, W8, 1
	043 NotImplemented "Instruction LSLV not yet implemented."
	044 Or W10, W8, W9
	045 NotImplemented "Instruction BIC not yet implemented."
	046 NotImplemented "Instruction CSEL not yet implemented."
	047 Move [X0], W8
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Return 
	054 Call 0x1C17F20
	055 Move [X31+12], W8
	056 Move X19, 0x2272000
	057 Move X19, [X19+1880]
	058 Move X0, X19
	059 Call 0x1C17D08
	060 Add X1, X31, 12
	061 Call 0x1C17E04
	062 Move X20, X0
	063 Move W8, 31
	064 Move X0, X19
	065 Move [X31+8], W8
	066 Call 0x1C17D08
	067 Add X1, X31, 8
	068 Call 0x1C17E04
	069 Move X19, X0
	070 Move X0, 0x227C000
	071 Move X0, [X0+3424]
	072 Call 0x1C17D08
	073 Move X1, X20
	074 Move X2, X19
	075 Move X3, X31
	076 Call String.Format, X0, X1, X2
	077 Move X19, X0
	078 Move X0, 0x227A000
	079 Move X0, [X0+1888]
	080 Call 0x1C17D08
	081 Call 0x1C17F10
	082 Move X1, X19
	083 Move X2, X31
	084 Move X20, X0
	085 Call ArgumentOutOfRangeException..ctor, X0, X1
	086 Move X0, 0x227C000
	087 Move X0, [X0+3440]
	088 Call 0x1C17D08
	089 Move X1, X0
	090 Move X0, X20
	091 Call 0x1C17DEC
	092 Call 0x1C17F28

Method: System.Void SetHitboxActiveFastUnchecked(Fusion.Hitbox hitbox, System.Boolean setActive)

Disassembly:
	0x01E86154 SUB W10, W3, 0x1
	0x01E86158 ADD W13, W10, W1
	0x01E8615C CMP W13, W8
	0x01E86160 B.CS 0x1E86210
	0x01E86164 ADD X9, X0, W13, 0x2, SXTW
	0x01E86168 CMP W2, 0x0
	0x01E8616C LDR W9, [X9 + 0x20]
	0x01E86170 CINC W11, W2, LT
	0x01E86174 SBFM W11, W11, 0x1, 0x1F
	0x01E86178 CMP W11, W1
	0x01E8617C B.LT 0x1E861F8
	0x01E86180 UBFM W12, W1, 0x1F, 0x1E
	0x01E86184 CMP W12, W2
	0x01E86188 B.GE 0x1E861B8
	0x01E8618C ADD W13, W12, W3
	0x01E86190 SUB W14, W13, 0x1
	0x01E86194 CMP W14, W8
	0x01E86198 B.CS 0x1E86210
	0x01E8619C CMP W13, W8
	0x01E861A0 B.CS 0x1E86210
	0x01E861A4 ADD X15, X0, 0x20
	0x01E861A8 LDR W14, [X15, W14, SXTW]
	0x01E861AC LDR W13, [X15, W13, SXTW]
	0x01E861B0 SUB W13, W14, W13
	0x01E861B4 ORR W12, W12, W13, 0x1F
	0x01E861B8 ADD W14, W10, W12
	0x01E861BC CMP W14, W8
	0x01E861C0 B.CS 0x1E86210
	0x01E861C4 ADD X13, X0, W14, 0x2, SXTW
	0x01E861C8 LDR W15, [X13 + 0x20]
	0x01E861CC ADD W13, W10, W1
	0x01E861D0 CMP W9, W15
	0x01E861D4 B.PL 0x1E861F8
	0x01E861D8 CMP W13, W8
	0x01E861DC B.CS 0x1E86210
	0x01E861E0 ADD X13, X0, W13, 0x2, SXTW

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x2554000
	008 Move X23, 0x2278000
	009 Move W8, [X22+512]
	010 Move X23, [X23+3416]
	011 Move W19, W2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x2278000
	019 Move X0, [X0+3416]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+512], W8
	023 Move X2, [X23]
	024 Move X0, X21
	025 Move W1, W31
	026 Call NetworkBehaviour.ReinterpretState, X0, X1
	027 Compare X20, 0
	028 JumpIfEqual {46}
	029 Move W8, [X20+80]
	030 Move W9, [X0]
	031 Move W10, 1
	032 And W31, W19, 1
	033 Add W8, W8, 1
	034 NotImplemented "Instruction LSLV not yet implemented."
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Or W10, W8, W9
	040 NotImplemented "Instruction BIC not yet implemented."
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 Move [X0], W8
	043 Move X30, [X31+48]
	044 Move X23, [X31+56]
	045 Return 
	046 Call 0x1C17F20

Method: System.Boolean IsHitboxActive(Fusion.Hitbox hitbox)

Disassembly:
	0x01E827AC BL 0x3C35CBC
	0x01E827B0 CBZ X26, 0x1E82804
	0x01E827B4 STR W0, [X26 + 0x18]
	0x01E827B8 LDR X1, [X24 + 0x70]
	0x01E827BC CBZ X1, 0x1E82804
	0x01E827C0 AND W3, W21, 0x1
	0x01E827C4 MOV X0, X24
	0x01E827C8 MOV X2, X19
	0x01E827CC STP W22, W23, [X1 + 0x10]
	0x01E827D0 STR X20, [X1 + 0x40]
	0x01E827D4 BL 0x1E82258
	0x01E827D8 LDP X20, X19, [X31 + 0x90]
	0x01E827DC LDP X22, X21, [X31 + 0x80]
	0x01E827E0 LDP X24, X23, [X31 + 0x70]
	0x01E827E4 LDP X26, X25, [X31 + 0x60]
	0x01E827E8 LDR X30, [X31 + 0x58]
	0x01E827EC LDP D9, D8, [X31 + 0x48]
	0x01E827F0 LDP D11, D10, [X31 + 0x38]
	0x01E827F4 LDP D13, D12, [X31 + 0x28]
	0x01E827F8 LDR V14, [X31 + 0x20]
	0x01E827FC ADD X31, X31, 0xA0
	0x01E82800 RET
	0x01E82804 BL 0x1C16F20
	0x01E82808 STR D14, [X31 - 0x90]!
	0x01E8280C STP D13, D12, [X31 + 0x10]
	0x01E82810 STP D11, D10, [X31 + 0x20]
	0x01E82814 STP D9, D8, [X31 + 0x30]
	0x01E82818 STP X30, X27, [X31 + 0x40]
	0x01E8281C STP X26, X25, [X31 + 0x50]
	0x01E82820 STP X24, X23, [X31 + 0x60]
	0x01E82824 STP X22, X21, [X31 + 0x70]
	0x01E82828 STP X20, X19, [X31 + 0x80]
	0x01E8282C ADRP X27, 0x2557000
	0x01E82830 LDRB W8, [X27 + 0x1E7]
	0x01E82834 MOV W21, W7
	0x01E82838 MOV W20, W6
	0x01E8283C MOV W23, W5
	0x01E82840 MOV X19, X4
	0x01E82844 MOV X24, X3
	0x01E82848 MOV X25, X2
	0x01E8284C MOV W26, W1
	0x01E82850 MOV V8.16B, V6.16B
	0x01E82854 MOV V9.16B, V5.16B
	0x01E82858 MOV V10.16B, V4.16B
	0x01E8285C MOV V11.16B, V3.16B
	0x01E82860 MOV V12.16B, V2.16B
	0x01E82864 MOV V13.16B, V1.16B
	0x01E82868 MOV V14.16B, V0.16B
	0x01E8286C MOV X22, X0
	0x01E82870 TBNZ X8, 0x0, 0x1E82888
	0x01E82874 ADRP X0, 0x2272000
	0x01E82878 LDR X0, [X0 + 0x470]
	0x01E8287C BL 0x1C16CF4
	0x01E82880 MOVZ W8, 0x1
	0x01E82884 STRB W8, [X27 + 0x1E7]
	0x01E82888 LDR X8, [X22 + 0x70]
	0x01E8288C CBZ X8, 0x1E82964
	0x01E82890 STR W31, [X8 + 0x1C]
	0x01E82894 LDR X8, [X22 + 0x70]
	0x01E82898 CBZ X8, 0x1E82964
	0x01E8289C STP S14, S13, [X8 + 0x54]
	0x01E828A0 STR S12, [X8 + 0x5C]
	0x01E828A4 LDR X8, [X22 + 0x70]
	0x01E828A8 CBZ X8, 0x1E82964
	0x01E828AC STP S11, S10, [X8 + 0x48]
	0x01E828B0 STR S9, [X8 + 0x50]
	0x01E828B4 LDR X27, [X22 + 0x70]
	0x01E828B8 CBZ X27, 0x1E82964
	0x01E828BC ADRP X8, 0x2272000
	0x01E828C0 LDR X8, [X8 + 0x470]
	0x01E828C4 STR S8, [X27 + 0x60]
	0x01E828C8 ADD X0, X31, 0x8
	0x01E828CC MOV W1, W26
	0x01E828D0 LDR X2, [X8]
	0x01E828D4 STR X31, [X31 + 0x8]
	0x01E828D8 BL 0x24341FC
	0x01E828DC LDR X8, [X31 + 0x8]
	0x01E828E0 STR X8, [X27 + 0x20]
	0x01E828E4 LDR X8, [X22 + 0x70]
	0x01E828E8 CBZ X8, 0x1E82964
	0x01E828EC STR X25, [X8 + 0x38]
	0x01E828F0 LDR X8, [X22 + 0x70]
	0x01E828F4 CBZ X8, 0x1E82964
	0x01E828F8 STR X24, [X8 + 0x30]
	0x01E828FC LDR X24, [X22 + 0x70]
	0x01E82900 MOV W0, W23
	0x01E82904 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {50}
	008 Move W8, [X1+80]
	009 Move X19, X1
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X9, [X19+72]
	012 Move X20, X0
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X9, [X20+168]
	015 Compare X9, 0
	016 JumpIfEqual {50}
	017 Move W10, [X9+24]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Add X8, X9, X8
	020 Move X8, [X8+32]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W0, W31
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X30, [X31+16]
	026 Move X21, [X31+24]
	027 Add X31, X31, 48
	028 Return X0
	029 Move X21, 0x2558000
	030 Move W8, [X21+554]
	031 Compare W8, 0
	032 JumpIfNotEqual {38}
	033 Move X0, 0x227C000
	034 Move X0, [X0+3416]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+554], W8
	038 Move X8, 0x227C000
	039 Move X8, [X8+3416]
	040 Move X0, X20
	041 Move W1, W31
	042 Move X2, [X8]
	043 Call NetworkBehaviour.ReinterpretState, X0, X1
	044 Move W8, [X19+80]
	045 Move W9, [X0]
	046 Add W8, W8, 1
	047 NotImplemented "Instruction LSRV not yet implemented."
	048 And W31, W8, 1
	049 NotImplemented "Instruction CSET not yet implemented."
	050 Call 0x1C17F20
	051 Move [X31+12], W8
	052 Move X19, 0x2272000
	053 Move X19, [X19+1880]
	054 Move X0, X19
	055 Call 0x1C17D08
	056 Add X1, X31, 12
	057 Call 0x1C17E04
	058 Move X20, X0
	059 Move W8, 31
	060 Move X0, X19
	061 Move [X31+8], W8
	062 Call 0x1C17D08
	063 Add X1, X31, 8
	064 Call 0x1C17E04
	065 Move X19, X0
	066 Move X0, 0x227C000
	067 Move X0, [X0+3424]
	068 Call 0x1C17D08
	069 Move X1, X20
	070 Move X2, X19
	071 Move X3, X31
	072 Call String.Format, X0, X1, X2
	073 Move X19, X0
	074 Move X0, 0x227A000
	075 Move X0, [X0+1888]
	076 Call 0x1C17D08
	077 Call 0x1C17F10
	078 Move X1, X19
	079 Move X2, X31
	080 Move X20, X0
	081 Call ArgumentOutOfRangeException..ctor, X0, X1
	082 Move X0, 0x227C000
	083 Move X0, [X0+3432]
	084 Call 0x1C17D08
	085 Move X1, X0
	086 Move X0, X20
	087 Call 0x1C17DEC
	088 Call 0x1C17F28

Method: System.Boolean IsHitboxActiveFastUnchecked(Fusion.Hitbox hitbox)

Disassembly:
	0x01E861E4 CMP W12, W11
	0x01E861E8 MOV W1, W12
	0x01E861EC STR W15, [X13 + 0x20]
	0x01E861F0 B.LE 0x1E86180
	0x01E861F4 MOV W13, W14
	0x01E861F8 CMP W13, W8
	0x01E861FC B.CS 0x1E86210
	0x01E86200 ADD X8, X0, W13, 0x2, SXTW
	0x01E86204 STR W9, [X8 + 0x20]
	0x01E86208 LDR X30, [X31], #0x10
	0x01E8620C RET
	0x01E86210 BL 0x1C16F28
	0x01E86214 BL 0x1C16F20
	0x01E86218 STR X30, [X31 - 0x10]!
	0x01E8621C CMP W2, 0x2
	0x01E86220 B.GE 0x1E8622C
	0x01E86224 LDR X30, [X31], #0x10
	0x01E86228 RET
	0x01E8622C CBZ X0, 0x1E86264
	0x01E86230 LDR W8, [X0 + 0x18]
	0x01E86234 CMP W8, 0x1
	0x01E86238 B.LT 0x1E86250
	0x01E8623C MOV W3, W31
	0x01E86240 UBFM W8, W8, 0x1, 0x1F
	0x01E86244 ADD W3, W3, 0x2
	0x01E86248 CBNZ W8, 0x1E86240
	0x01E8624C B 0x1E86254
	0x01E86250 MOV W3, W31
	0x01E86254 ADD W8, W1, W2
	0x01E86258 SUB W2, W8, 0x1
	0x01E8625C LDR X30, [X31], #0x10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2554000
	007 Move X22, 0x2278000
	008 Move W8, [X21+513]
	009 Move X22, [X22+3416]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2278000
	017 Move X0, [X0+3416]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+513], W8
	021 Move X2, [X22]
	022 Move X0, X20
	023 Move W1, W31
	024 Call NetworkBehaviour.ReinterpretState, X0, X1
	025 Compare X19, 0
	026 JumpIfEqual {39}
	027 Move W8, [X19+80]
	028 Move W9, [X0]
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Add W8, W8, 1
	034 NotImplemented "Instruction LSRV not yet implemented."
	035 And W31, W8, 1
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Move X30, [X31+48]
	038 Return X0
	039 Call 0x1C17F20

Method: System.Void Despawned(Fusion.NetworkRunner runner, System.Boolean hasState)

Disassembly:
	0x01E86260 B 0x1E86268
	0x01E86264 BL 0x1C16F20
	0x01E86268 STP X30, X23, [X31 - 0x30]!
	0x01E8626C STP X22, X21, [X31 + 0x10]
	0x01E86270 STP X20, X19, [X31 + 0x20]
	0x01E86274 CMP W2, W1
	0x01E86278 B.LE 0x1E86310
	0x01E8627C MOV W19, W2
	0x01E86280 MOV W20, W1
	0x01E86284 MOV X21, X0
	0x01E86288 SUB W22, W3, 0x1
	0x01E8628C SUB W8, W19, W20
	0x01E86290 ADD W9, W8, 0x1
	0x01E86294 CMP W9, 0x10
	0x01E86298 B.LE 0x1E862E0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+176]
	003 Compare X8, 0
	004 JumpIfEqual {19}
	005 Move W9, [X8+48]
	006 Move TEMP, X9
	007 And TEMP, TEMP, 8
	008 Compare TEMP, 8
	009 JumpIfEqual {19}
	010 Move [X0+176], X31
	011 Move X1, X0
	012 Move X0, [X8+144]
	013 Compare X0, 0
	014 JumpIfEqual {21}
	015 Move X2, X31
	016 Move X30, [X31+16]
	017 Call HitboxBuffer.Remove, X0, X1
	018 Return 
	019 Move X30, [X31+16]
	020 Return 
	021 Call 0x1C17F20

Method: System.Void RegisterColliders(Fusion.LagCompensation.IHitboxColliderContainer container, System.Int32 tick)

Disassembly:
	0x01E8629C ADDS W31, W22, 0x1
	0x01E862A0 B.EQ 0x1E86320
	0x01E862A4 MOV X0, X21
	0x01E862A8 MOV W1, W20
	0x01E862AC MOV W2, W19
	0x01E862B0 BL 0x1E866F0
	0x01E862B4 MOV W23, W0
	0x01E862B8 ADD W1, W0, 0x1
	0x01E862BC MOV X0, X21
	0x01E862C0 MOV W2, W19
	0x01E862C4 MOV W3, W22
	0x01E862C8 BL 0x1E86268
	0x01E862CC SUB W19, W23, 0x1
	0x01E862D0 CMP W19, W20
	0x01E862D4 SUB W22, W22, 0x1
	0x01E862D8 B.GT 0x1E8628C
	0x01E862DC B 0x1E86310
	0x01E862E0 CBZ W8, 0x1E86310
	0x01E862E4 CMP W8, 0x2
	0x01E862E8 B.EQ 0x1E8633C
	0x01E862EC MOV X0, X21
	0x01E862F0 MOV W1, W20
	0x01E862F4 CMP W8, 0x1
	0x01E862F8 B.EQ 0x1E86368
	0x01E862FC MOV W2, W19
	0x01E86300 LDP X20, X19, [X31 + 0x20]
	0x01E86304 LDP X22, X21, [X31 + 0x10]
	0x01E86308 LDP X30, X23, [X31], #0x30
	0x01E8630C B 0x1E864B8
	0x01E86310 LDP X20, X19, [X31 + 0x20]
	0x01E86314 LDP X22, X21, [X31 + 0x10]
	0x01E86318 LDP X30, X23, [X31], #0x30
	0x01E8631C RET
	0x01E86320 MOV X0, X21
	0x01E86324 MOV W1, W20
	0x01E86328 MOV W2, W19
	0x01E8632C LDP X20, X19, [X31 + 0x20]
	0x01E86330 LDP X22, X21, [X31 + 0x10]
	0x01E86334 LDP X30, X23, [X31], #0x30
	0x01E86338 B 0x1E865FC
	0x01E8633C SUB W22, W19, 0x1
	0x01E86340 MOV X0, X21
	0x01E86344 MOV W1, W20
	0x01E86348 MOV W2, W22
	0x01E8634C BL 0x1E863AC
	0x01E86350 MOV X0, X21
	0x01E86354 MOV W1, W20
	0x01E86358 MOV W2, W19
	0x01E8635C BL 0x1E863AC
	0x01E86360 MOV X0, X21
	0x01E86364 MOV W1, W22
	0x01E86368 MOV W2, W19
	0x01E8636C LDP X20, X19, [X31 + 0x20]
	0x01E86370 LDP X22, X21, [X31 + 0x10]
	0x01E86374 LDP X30, X23, [X31], #0x30
	0x01E86378 B 0x1E863AC
	0x01E8637C STR X30, [X31 - 0x10]!
	0x01E86380 CBZ X0, 0x1E863A8
	0x01E86384 LDR X0, [X0 + 0x20]
	0x01E86388 CBZ X0, 0x1E863A8
	0x01E8638C CBZ X1, 0x1E863A8
	0x01E86390 LDR X8, [X1 + 0x20]
	0x01E86394 CBZ X8, 0x1E863A8
	0x01E86398 LDR W1, [X8]
	0x01E8639C MOV X2, X31
	0x01E863A0 LDR X30, [X31], #0x10
	0x01E863A4 B 0x1E90258
	0x01E863A8 BL 0x1C16F20
	0x01E863AC STP X30, X25, [X31 - 0x40]!
	0x01E863B0 STP X24, X23, [X31 + 0x10]
	0x01E863B4 STP X22, X21, [X31 + 0x20]
	0x01E863B8 STP X20, X19, [X31 + 0x30]
	0x01E863BC CMP W1, W2
	0x01E863C0 B.EQ 0x1E86490
	0x01E863C4 MOV X20, X0
	0x01E863C8 CBZ X0, 0x1E864A4
	0x01E863CC LDR W9, [X20 + 0x18]
	0x01E863D0 MOV W21, W1
	0x01E863D4 CMP W9, W1
	0x01E863D8 B.LS 0x1E864A8
	0x01E863DC ADD X25, X20, W21, 0x3, SXTW
	0x01E863E0 LDR X8, [X25 + 0x20]!
	0x01E863E4 MOV W19, W2
	0x01E863E8 CMP W9, W2
	0x01E863EC B.LS 0x1E864A8
	0x01E863F0 ADD X24, X20, W19, 0x3, SXTW

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x2554000
	011 Move W8, [X22+514]
	012 Move W19, W2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x2278000
	020 Move X0, [X0+3704]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+514], W8
	024 Move [X31+12], W31
	025 Move W8, [X21+128]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {32}
	030 Move X0, X21
	031 Call HitboxRoot.InitHitboxes, X0
	032 Move X23, [X21+168]
	033 Compare X23, 0
	034 JumpIfEqual {92}
	035 Move W8, [X23+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X25, 0x2278000
	038 Move X25, [X25+3704]
	039 Move W24, W31
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Compare X20, 0
	042 JumpIfEqual {102}
	043 Move X8, [X20]
	044 Add X9, X23, W24
	045 Move X21, [X9+32]
	046 Move X1, [X25]
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Compare X9, 0
	049 JumpIfEqual {56}
	050 Move X10, [X8+176]
	051 Add X10, X10, 8
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Subtract X9, X9, 1
	055 Add X10, X10, 16
	056 Move X0, X20
	057 Move W2, W31
	058 Call 0x1C5D788
	059 NotImplemented "Instruction LDRSW not yet implemented."
	060 Add X8, X8, X9
	061 Add X0, X8, 312
	062 Move X8, [X0]
	063 Move X2, [X0+8]
	064 Add X1, X31, 12
	065 Move X0, X20
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Compare X21, 0
	068 JumpIfEqual {102}
	069 Move X22, X0
	070 Move X0, X21
	071 Move X1, X31
	072 Call Component.get_gameObject, X0
	073 Compare X0, 0
	074 JumpIfEqual {102}
	075 Move X1, X31
	076 Call GameObject.get_activeSelf, X0
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {83}
	081 Move X0, X21
	082 Call Hitbox.CacheInfo, X0
	083 Move X0, X21
	084 Move X1, X22
	085 Move W2, W19
	086 Call Hitbox.SetColliderData, X0, X1, X2
	087 Move W8, [X31+12]
	088 Add W24, W24, 1
	089 Move [X21+84], W8
	090 Move W8, [X23+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X20, [X31+64]
	093 Move X19, [X31+72]
	094 Move X22, [X31+48]
	095 Move X21, [X31+56]
	096 Move X24, [X31+32]
	097 Move X23, [X31+40]
	098 Move X30, [X31+16]
	099 Move X25, [X31+24]
	100 Add X31, X31, 80
	101 Return 
	102 Call 0x1C17F20
	103 Call 0x1C17F28

Method: System.Void DeregisterColliders(Fusion.LagCompensation.IHitboxColliderContainer container)

Disassembly:
	0x01E863F4 LDR X9, [X24 + 0x20]!
	0x01E863F8 CBZ X8, 0x1E864A4
	0x01E863FC LDR X0, [X8 + 0x20]
	0x01E86400 CBZ X0, 0x1E864A4
	0x01E86404 CBZ X9, 0x1E864A4
	0x01E86408 LDR X8, [X9 + 0x20]
	0x01E8640C CBZ X8, 0x1E864A4
	0x01E86410 LDR W1, [X8]
	0x01E86414 MOV X2, X31
	0x01E86418 BL 0x1E90258
	0x01E8641C CMP W0, 0x1
	0x01E86420 B.LT 0x1E86490
	0x01E86424 LDR W8, [X20 + 0x18]
	0x01E86428 CMP W8, W21
	0x01E8642C B.LS 0x1E864A8
	0x01E86430 CMP W8, W19
	0x01E86434 B.LS 0x1E864A8
	0x01E86438 LDR X23, [X24]
	0x01E8643C LDR X22, [X25]
	0x01E86440 CBZ X23, 0x1E8645C
	0x01E86444 LDR X8, [X20]
	0x01E86448 MOV X0, X23
	0x01E8644C LDR X1, [X8 + 0x40]
	0x01E86450 BL 0x1C16E00
	0x01E86454 CBZ X0, 0x1E864AC
	0x01E86458 LDR W8, [X20 + 0x18]
	0x01E8645C CMP W8, W21
	0x01E86460 B.LS 0x1E864A8
	0x01E86464 STR X23, [X25]
	0x01E86468 CBZ X22, 0x1E86484
	0x01E8646C LDR X8, [X20]
	0x01E86470 MOV X0, X22
	0x01E86474 LDR X1, [X8 + 0x40]
	0x01E86478 BL 0x1C16E00
	0x01E8647C CBZ X0, 0x1E864AC
	0x01E86480 LDR W8, [X20 + 0x18]
	0x01E86484 CMP W8, W19
	0x01E86488 B.LS 0x1E864A8
	0x01E8648C STR X22, [X24]
	0x01E86490 LDP X20, X19, [X31 + 0x30]
	0x01E86494 LDP X22, X21, [X31 + 0x20]
	0x01E86498 LDP X24, X23, [X31 + 0x10]
	0x01E8649C LDP X30, X25, [X31], #0x40
	0x01E864A0 RET
	0x01E864A4 BL 0x1C16F20
	0x01E864A8 BL 0x1C16F28
	0x01E864AC BL 0x1C16F44
	0x01E864B0 MOV X1, X31
	0x01E864B4 BL 0x1C16DEC
	0x01E864B8 STR X30, [X31 - 0x50]!
	0x01E864BC STP X26, X25, [X31 + 0x10]
	0x01E864C0 STP X24, X23, [X31 + 0x20]
	0x01E864C4 STP X22, X21, [X31 + 0x30]
	0x01E864C8 STP X20, X19, [X31 + 0x40]
	0x01E864CC CMP W1, W2
	0x01E864D0 B.GE 0x1E865D0
	0x01E864D4 MOV X20, X0
	0x01E864D8 CBZ X0, 0x1E865E8
	0x01E864DC LDR X8, [X20 + 0x18]
	0x01E864E0 MOV W19, W1
	0x01E864E4 SXTW X23, W19
	0x01E864E8 SXTW X24, W2
	0x01E864EC MOV X26, X23
	0x01E864F0 ADD X25, X26, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x2554000
	008 Move W8, [X21+515]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2278000
	016 Move X0, [X0+3704]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+515], W8
	020 Move X21, [X20+168]
	021 Compare X21, 0
	022 JumpIfEqual {63}
	023 Move X8, [X21+24]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X23, 0x2278000
	026 Move X23, [X23+3704]
	027 Move W22, W31
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Add X9, X21, W22
	030 Move X9, [X9+32]
	031 Compare X9, 0
	032 JumpIfEqual {70}
	033 Move W20, [X9+84]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Compare X19, 0
	036 JumpIfEqual {70}
	037 Move X8, [X19]
	038 Move X1, [X23]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Compare X9, 0
	041 JumpIfEqual {48}
	042 Move X10, [X8+176]
	043 Add X10, X10, 8
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Subtract X9, X9, 1
	047 Add X10, X10, 16
	048 Move W2, 3
	049 Move X0, X19
	050 Call 0x1C5D788
	051 Move W9, [X10]
	052 Add W9, W9, 3
	053 Add X8, X8, W9
	054 Add X0, X8, 312
	055 Move X8, [X0]
	056 Move X2, [X0+8]
	057 Move X0, X19
	058 Move W1, W20
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X8, [X21+24]
	061 Add W22, W22, 1
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 Move X23, [X31+56]
	069 Return 
	070 Call 0x1C17F20
	071 Call 0x1C17F28

Method: UnityEngine.Bounds GetBounds()

Disassembly:
	0x01E864F4 CMP W25, W8
	0x01E864F8 B.CS 0x1E865EC
	0x01E864FC ADD X9, X20, X25, 0x3, LSL
	0x01E86500 LDR X21, [X9 + 0x20]
	0x01E86504 CMP X26, X23
	0x01E86508 B.GE 0x1E86514
	0x01E8650C CBNZ X21, 0x1E86598
	0x01E86510 B 0x1E865AC
	0x01E86514 CMP W26, W8
	0x01E86518 B.CS 0x1E865EC
	0x01E8651C ADD X22, X20, W26, 0x3, SXTW
	0x01E86520 LDR X8, [X22 + 0x20]!
	0x01E86524 CBZ X21, 0x1E865E8
	0x01E86528 LDR X0, [X21 + 0x20]
	0x01E8652C CBZ X0, 0x1E865E8
	0x01E86530 CBZ X8, 0x1E865E8
	0x01E86534 LDR X8, [X8 + 0x20]
	0x01E86538 CBZ X8, 0x1E865E8
	0x01E8653C LDR W1, [X8]
	0x01E86540 MOV X2, X31
	0x01E86544 BL 0x1E90258
	0x01E86548 TBZ X0, 0x1F, 0x1E86598
	0x01E8654C LDR X8, [X20 + 0x18]
	0x01E86550 CMP W26, W8
	0x01E86554 B.CS 0x1E865EC
	0x01E86558 LDR X22, [X22]
	0x01E8655C CBZ X22, 0x1E86578
	0x01E86560 LDR X8, [X20]
	0x01E86564 MOV X0, X22
	0x01E86568 LDR X1, [X8 + 0x40]
	0x01E8656C BL 0x1C16E00
	0x01E86570 CBZ X0, 0x1E865F0
	0x01E86574 LDR X8, [X20 + 0x18]
	0x01E86578 ADD W9, W26, 0x1
	0x01E8657C CMP W9, W8
	0x01E86580 B.CS 0x1E865EC
	0x01E86584 SUB W26, W26, 0x1
	0x01E86588 ADD X9, X20, W9, 0x3, SXTW
	0x01E8658C CMP W26, W19
	0x01E86590 STR X22, [X9 + 0x20]
	0x01E86594 B.GE 0x1E86514
	0x01E86598 LDR X8, [X20]
	0x01E8659C MOV X0, X21
	0x01E865A0 LDR X1, [X8 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X20, X0
	006 Move X19, X8
	007 Call Component.get_transform, X0
	008 Compare X0, 0
	009 JumpIfEqual {48}
	010 Move S1, [X20+140]
	011 Move S2, [X20+144]
	012 Move V0, [X20+136]
	013 Move X1, X31
	014 Call Transform.TransformPoint, X0, X1
	015 Move V3, [X20+132]
	016 NotImplemented "Instruction MOVI not yet implemented."
	017 Move V0.S[1], V1.S[0]
	018 Move S5, W31
	019 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	020 Subtract S16, S2, S3
	021 Add S2, S2, S3
	022 Subtract V3, V0, V1
	023 NotImplemented "Instruction MOVI not yet implemented."
	024 Move S7, 0.5
	025 Subtract S5, S5, S16
	026 Add V0, V0, V1
	027 Subtract V1, V4, V3
	028 Multiply S4, S5, S7
	029 NotImplemented "Instruction INVALID not yet implemented."
	030 Add S5, S16, S4
	031 Add V3, V3, V1
	032 Subtract S4, S5, S4
	033 Subtract V1, V3, V1
	034 Subtract S2, S2, S4
	035 Subtract V0, V0, V1
	036 Multiply S2, S2, S7
	037 NotImplemented "Instruction INVALID not yet implemented."
	038 Add S3, S4, S2
	039 Add V1, V1, V0
	040 Move [X19+8], S3
	041 Move [X19+12], D0
	042 Move [X19], D1
	043 Move [X19+20], S2
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return X0
	048 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01E865A4 BL 0x1C16E00
	0x01E865A8 CBZ X0, 0x1E865F0
	0x01E865AC LDR X8, [X20 + 0x18]
	0x01E865B0 ADD W9, W26, 0x1
	0x01E865B4 CMP W9, W8
	0x01E865B8 B.CS 0x1E865EC
	0x01E865BC ADD X9, X20, W9, 0x3, SXTW

ISIL:
	001 Move X8, -20557824
	002 Move V0, [X8+169]
	003 Move W8, 3
	004 Move X1, X31
	005 Move [X0+128], W8
	006 Move [X0+148], V0
	007 Call NetworkBehaviour..ctor, X0
	008 Return 

