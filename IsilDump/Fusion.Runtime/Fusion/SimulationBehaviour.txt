Type: Fusion.SimulationBehaviour

Method: System.Boolean get_CanReceiveRenderCallback()

Disassembly:
	0x01E7A744 ADRP X0, 0x2279000
	0x01E7A748 LDR X0, [X0 + 0x7D0]
	0x01E7A74C BL 0x1C16D08
	0x01E7A750 LDR X8, [X22]

ISIL:
	001 Move W8, [X0+48]
	002 And W31, W8, 28
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_CanReceiveSimulationCallback()

Disassembly:
	0x01E7A754 LDR X1, [X8]
	0x01E7A758 BL 0x1C17270
	0x01E7A75C TBZ X0, 0x0, 0x1E7A790
	0x01E7A760 BL 0x3EB1AE0
	0x01E7A764 B 0x1E7A6BC
	0x01E7A768 MOV X0, X19
	0x01E7A76C LDP X20, X19, [X31 + 0x50]

ISIL:
	001 Move W8, [X0+48]
	002 And W31, W8, 28
	003 NotImplemented "Instruction CSET not yet implemented."
	004 And W31, W8, 3
	005 NotImplemented "Instruction CSET not yet implemented."
	006 And W0, W9, W8
	007 Return X0

Method: Fusion.NetworkRunner get_Runner()

Disassembly:
	0x01E7A770 LDP X22, X21, [X31 + 0x40]
	0x01E7A774 LDP X24, X23, [X31 + 0x30]

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: Fusion.NetworkObject get_Object()

Disassembly:
	0x01E7A778 LDP X26, X25, [X31 + 0x20]
	0x01E7A77C LDP X28, X27, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void FixedUpdateNetwork()

Disassembly:
	0x01E7A780 LDP X29, X30, [X31], #0x60

ISIL:
	001 Return 

Method: System.Void PreRender()

Disassembly:
	0x01E7A784 RET

ISIL:
	001 Return 

Method: System.Void Render()

Disassembly:
	0x01E7A788 BL 0x1C16F28

ISIL:
	001 Return 

Method: System.Void OnDestroy()

Disassembly:
	0x01E7A78C BL 0x1C16F20
	0x01E7A790 MOVZ W0, 0x8
	0x01E7A794 BL 0x3EB1AF0
	0x01E7A798 LDR X8, [X22]
	0x01E7A79C STR X8, [X0]
	0x01E7A7A0 ADRP X1, 0x203A000
	0x01E7A7A4 ADD X1, X1, 0xE58
	0x01E7A7A8 MOV X2, X31
	0x01E7A7AC BL 0x3EB1B00
	0x01E7A7B0 B 0x1E7A7B4
	0x01E7A7B4 MOV X22, X0
	0x01E7A7B8 BL 0x3EB1AE0
	0x01E7A7BC MOV X0, X22
	0x01E7A7C0 BL 0x1D2C690
	0x01E7A7C4 BL 0x1990590
	0x01E7A7C8 SUB X31, X31, 0x50
	0x01E7A7CC STR X30, [X31 + 0x10]
	0x01E7A7D0 STP X24, X23, [X31 + 0x20]
	0x01E7A7D4 STP X22, X21, [X31 + 0x30]
	0x01E7A7D8 STP X20, X19, [X31 + 0x40]
	0x01E7A7DC ADRP X20, 0x255F000
	0x01E7A7E0 ADRP X22, 0x2283000
	0x01E7A7E4 ADRP X23, 0x2279000
	0x01E7A7E8 ADRP X21, 0x2283000
	0x01E7A7EC ADRP X24, 0x2283000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2560000
	006 Move X21, 0x227D000
	007 Move W8, [X20+411]
	008 Move X21, [X21+2680]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x227D000
	015 Move X0, [X0+2680]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+411], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Compare X19, 0
	025 JumpIfEqual {34}
	026 Move W8, [X19+48]
	027 Or W8, W8, 8
	028 Move [X19+48], W8
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 
	034 Call 0x1C17F20

Method: System.Void OnEnable()

Disassembly:
	0x01E7A7F0 LDRB W8, [X20 + 0x1A3]
	0x01E7A7F4 LDR X22, [X22 + 0x948]
	0x01E7A7F8 LDR X23, [X23 + 0x6C0]
	0x01E7A7FC LDR X21, [X21 + 0x950]
	0x01E7A800 LDR X24, [X24 + 0x958]
	0x01E7A804 MOV X19, X0
	0x01E7A808 TBNZ X8, 0x0, 0x1E7A8B8
	0x01E7A80C ADRP X0, 0x2283000
	0x01E7A810 LDR X0, [X0 + 0x958]
	0x01E7A814 BL 0x1C16CF4
	0x01E7A818 ADRP X0, 0x2283000
	0x01E7A81C LDR X0, [X0 + 0x960]
	0x01E7A820 BL 0x1C16CF4
	0x01E7A824 ADRP X0, 0x2283000
	0x01E7A828 LDR X0, [X0 + 0x948]
	0x01E7A82C BL 0x1C16CF4
	0x01E7A830 ADRP X0, 0x2279000
	0x01E7A834 LDR X0, [X0 + 0x6C0]
	0x01E7A838 BL 0x1C16CF4
	0x01E7A83C ADRP X0, 0x2283000
	0x01E7A840 LDR X0, [X0 + 0x950]
	0x01E7A844 BL 0x1C16CF4
	0x01E7A848 MOVZ W8, 0x1
	0x01E7A84C STRB W8, [X20 + 0x1A3]
	0x01E7A850 B 0x1E7A8B8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2560000
	006 Move X21, 0x227D000
	007 Move W8, [X20+412]
	008 Move X21, [X21+2680]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x227D000
	015 Move X0, [X0+2680]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+412], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Compare X19, 0
	025 JumpIfEqual {34}
	026 Move W8, [X19+48]
	027 And W8, W8, 0xFFFFFFEF
	028 Move [X19+48], W8
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 
	034 Call 0x1C17F20

Method: System.Void OnDisable()

Disassembly:
	0x01E7A854 LDR X0, [X23]
	0x01E7A858 LDR X20, [X24]
	0x01E7A85C LDR W8, [X0 + 0xE0]
	0x01E7A860 CBNZ W8, 0x1E7A868
	0x01E7A864 BL 0x1C16DFC
	0x01E7A868 MOV X0, X20
	0x01E7A86C MOV X1, X31
	0x01E7A870 BL 0x338C698
	0x01E7A874 CBZ X19, 0x1E7A9B4
	0x01E7A878 LDR X8, [X19]
	0x01E7A87C MOV X1, X0
	0x01E7A880 MOVZ W2, 0x1
	0x01E7A884 MOV X0, X19
	0x01E7A888 LDR X9, [X8 + 0x208]
	0x01E7A88C LDR X3, [X8 + 0x210]
	0x01E7A890 BLR X9
	0x01E7A894 CBZ X0, 0x1E7A9B4
	0x01E7A898 LDR X8, [X0 + 0x18]
	0x01E7A89C CBNZ X8, 0x1E7A914
	0x01E7A8A0 LDR X8, [X19]
	0x01E7A8A4 MOV X0, X19
	0x01E7A8A8 LDR X9, [X8 + 0x818]
	0x01E7A8AC LDR X1, [X8 + 0x820]
	0x01E7A8B0 BLR X9
	0x01E7A8B4 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2560000
	006 Move X21, 0x227D000
	007 Move W8, [X20+413]
	008 Move X21, [X21+2680]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x227D000
	015 Move X0, [X0+2680]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+413], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Compare X19, 0
	025 JumpIfEqual {34}
	026 Move W8, [X19+48]
	027 Or W8, W8, 16
	028 Move [X19+48], W8
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 
	034 Call 0x1C17F20

Method: System.Void MakeOwned(Fusion.NetworkRunner runner, Fusion.NetworkObject obj)

Disassembly:
	0x01E7A8B8 LDR X0, [X23]
	0x01E7A8BC LDR X20, [X22]

ISIL:
	001 Move [X0+56], X1
	002 Move [X0+64], X2
	003 Return 

Method: System.Void MakeUnowned()

Disassembly:
	0x01E7A8C0 LDR W8, [X0 + 0xE0]
	0x01E7A8C4 CBNZ W8, 0x1E7A8CC

ISIL:
	001 Move [X0+56], X31
	002 Move [X0+64], X31
	003 Return 

Method: System.Void DebugNotifySpawned()

Disassembly:
	0x01E7A8C8 BL 0x1C16DFC

ISIL:
	001 Return 

Method: System.Void DebugNotifyDespawned()

Disassembly:
	0x01E7A8CC MOV X0, X20

ISIL:
	001 Return 

Method: System.Void GetDumpString(System.Text.StringBuilder builder)

Disassembly:
	0x01E7A8D0 MOV X1, X31
	0x01E7A8D4 BL 0x338C698
	0x01E7A8D8 CBZ X0, 0x1E7A9B4
	0x01E7A8DC LDR X8, [X0]
	0x01E7A8E0 MOV X1, X19
	0x01E7A8E4 LDR X9, [X8 + 0x2A8]
	0x01E7A8E8 LDR X2, [X8 + 0x2B0]
	0x01E7A8EC BLR X9
	0x01E7A8F0 TBNZ X0, 0x0, 0x1E7A854
	0x01E7A8F4 LDR X4, [X21]
	0x01E7A8F8 ADD X0, X31, 0x0
	0x01E7A8FC MOVZ W1, 0x7
	0x01E7A900 MOVZ W2, 0x6
	0x01E7A904 MOVZ W3, 0x3
	0x01E7A908 STR W31, [X31 + 0x8]
	0x01E7A90C STR X31, [X31]
	0x01E7A910 B 0x1E7A990
	0x01E7A914 CBZ W8, 0x1E7A9BC
	0x01E7A918 LDR X0, [X0 + 0x20]
	0x01E7A91C CBZ X0, 0x1E7A9B4
	0x01E7A920 ADRP X9, 0x2283000
	0x01E7A924 LDR X9, [X9 + 0x960]
	0x01E7A928 LDR X8, [X0]
	0x01E7A92C LDR X1, [X9]
	0x01E7A930 LDRB W10, [X8 + 0x130]
	0x01E7A934 LDRB W9, [X1 + 0x130]
	0x01E7A938 CMP W10, W9
	0x01E7A93C B.CC 0x1E7A9B8
	0x01E7A940 LDR X8, [X8 + 0xC8]
	0x01E7A944 ADD X8, X8, X9, 0x3, LSL
	0x01E7A948 LDUR X8, [X8 - 0x8]
	0x01E7A94C CMP X8, X1
	0x01E7A950 B.NE 0x1E7A9B8
	0x01E7A954 LDP W10, W9, [X0 + 0x10]
	0x01E7A958 LDR W12, [X0 + 0x18]
	0x01E7A95C MOVZ W8, 0x7
	0x01E7A960 LDR X4, [X21]
	0x01E7A964 CMP W9, 0x0
	0x01E7A968 MOVZ W11, 0x6
	0x01E7A96C CSEL W1, W8, W9, EQ
	0x01E7A970 CMP W10, 0x0
	0x01E7A974 MOVZ W13, 0x3
	0x01E7A978 CSEL W2, W11, W10, EQ
	0x01E7A97C CMP W12, 0x0
	0x01E7A980 STR W31, [X31 + 0x8]
	0x01E7A984 CSEL W3, W13, W12, EQ
	0x01E7A988 STR X31, [X31]
	0x01E7A98C ADD X0, X31, 0x0
	0x01E7A990 BL 0x27BC9FC
	0x01E7A994 LDR X0, [X31]
	0x01E7A998 LDR W1, [X31 + 0x8]
	0x01E7A99C LDP X20, X19, [X31 + 0x40]
	0x01E7A9A0 LDP X22, X21, [X31 + 0x30]
	0x01E7A9A4 LDP X24, X23, [X31 + 0x20]
	0x01E7A9A8 LDR X30, [X31 + 0x10]
	0x01E7A9AC ADD X31, X31, 0x50
	0x01E7A9B0 RET
	0x01E7A9B4 BL 0x1C16F20
	0x01E7A9B8 BL 0x1C171E0
	0x01E7A9BC BL 0x1C16F28
	0x01E7A9C0 SUB X31, X31, 0x40
	0x01E7A9C4 STP X30, X23, [X31 + 0x10]
	0x01E7A9C8 STP X22, X21, [X31 + 0x20]
	0x01E7A9CC STP X20, X19, [X31 + 0x30]
	0x01E7A9D0 ADRP X21, 0x255F000
	0x01E7A9D4 LDRB W8, [X21 + 0x1A4]
	0x01E7A9D8 MOV X20, X1
	0x01E7A9DC MOV X19, X0
	0x01E7A9E0 TBNZ X8, 0x0, 0x1E7AA1C
	0x01E7A9E4 ADRP X0, 0x227C000
	0x01E7A9E8 LDR X0, [X0 + 0xEF8]
	0x01E7A9EC BL 0x1C16CF4
	0x01E7A9F0 ADRP X0, 0x227C000
	0x01E7A9F4 LDR X0, [X0 + 0xF00]
	0x01E7A9F8 BL 0x1C16CF4
	0x01E7A9FC ADRP X0, 0x2283000
	0x01E7AA00 LDR X0, [X0 + 0x968]
	0x01E7AA04 BL 0x1C16CF4
	0x01E7AA08 ADRP X0, 0x2279000
	0x01E7AA0C LDR X0, [X0 + 0x6C0]
	0x01E7AA10 BL 0x1C16CF4
	0x01E7AA14 MOVZ W8, 0x1
	0x01E7AA18 STRB W8, [X21 + 0x1A4]
	0x01E7AA1C ADRP X22, 0x2283000
	0x01E7AA20 ADRP X23, 0x2279000
	0x01E7AA24 LDR X22, [X22 + 0x968]
	0x01E7AA28 LDR X23, [X23 + 0x6C0]
	0x01E7AA2C LDR X0, [X23]
	0x01E7AA30 LDR X21, [X22]
	0x01E7AA34 LDR W8, [X0 + 0xE0]
	0x01E7AA38 CBNZ W8, 0x1E7AA40
	0x01E7AA3C BL 0x1C16DFC
	0x01E7AA40 MOV X0, X21
	0x01E7AA44 MOV X1, X31
	0x01E7AA48 BL 0x338C698
	0x01E7AA4C MOV X1, X0
	0x01E7AA50 MOV X0, X20
	0x01E7AA54 MOV X2, X31
	0x01E7AA58 BL 0x3395F0C
	0x01E7AA5C TBZ X0, 0x0, 0x1E7AAA0
	0x01E7AA60 LDR X0, [X19 + 0x38]
	0x01E7AA64 CBZ X0, 0x1E7AAD0
	0x01E7AA68 MOV X1, X20
	0x01E7AA6C MOV X2, X31
	0x01E7AA70 BL 0x1EB7414
	0x01E7AA74 ANDS W31, W0, 0xFF
	0x01E7AA78 STR X0, [X31 + 0x8]
	0x01E7AA7C B.NE 0x1E7AAA8
	0x01E7AA80 CBZ X20, 0x1E7AAD0
	0x01E7AA84 LDR X8, [X20]
	0x01E7AA88 MOV X0, X20
	0x01E7AA8C LDR X9, [X8 + 0x818]
	0x01E7AA90 LDR X1, [X8 + 0x820]
	0x01E7AA94 BLR X9
	0x01E7AA98 MOV X20, X0
	0x01E7AA9C B 0x1E7AA2C
	0x01E7AAA0 MOV W0, W31
	0x01E7AAA4 B 0x1E7AABC
	0x01E7AAA8 ADRP X8, 0x227C000
	0x01E7AAAC LDR X8, [X8 + 0xF00]
	0x01E7AAB0 ADD X0, X31, 0x8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2560000
	007 Move W8, [X21+414]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0x2284000
	015 Move X0, [X0+1240]
	016 Call 0x1C17CF4
	017 Move X0, 0x2283000
	018 Move X0, [X0+3712]
	019 Call 0x1C17CF4
	020 Move X0, 0x227A000
	021 Move X0, [X0+3544]
	022 Call 0x1C17CF4
	023 Move X0, 0x2284000
	024 Move X0, [X0+2200]
	025 Call 0x1C17CF4
	026 Move X0, 0x227A000
	027 Move X0, [X0+3784]
	028 Call 0x1C17CF4
	029 Move X0, 0x227A000
	030 Move X0, [X0+2120]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+414], W8
	034 Compare X19, 0
	035 JumpIfEqual {140}
	036 Move X8, 0x227A000
	037 Move X8, [X8+3784]
	038 Move X21, 0x2283000
	039 Move X0, X19
	040 Move X2, X31
	041 Move X1, [X8]
	042 Move X21, [X21+3712]
	043 Call StringBuilder.Append, X0, X1
	044 Move X0, X20
	045 Move X1, X31
	046 Call Behaviour.get_DebugNameThreadSafe, X0
	047 Move X1, X0
	048 Move X0, X19
	049 Move X2, X31
	050 Call StringBuilder.Append, X0, X1
	051 Compare X20, 0
	052 JumpIfEqual {102}
	053 Move X8, 0x2284000
	054 Move X8, [X8+1240]
	055 Move X9, [X20]
	056 Move X8, [X8]
	057 Move W11, [X9+304]
	058 Move W10, [X8+304]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X9, [X9+200]
	061 Add X9, X9, X10
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X8, [X20+64]
	065 Compare X8, 0
	066 JumpIfEqual {71}
	067 Move X8, [X8+32]
	068 Compare X8, 0
	069 JumpIfEqual {71}
	070 Move W8, [X8]
	071 Move W9, [X20+104]
	072 Add X0, X31, 8
	073 NotImplemented "Instruction BFM not yet implemented."
	074 Move [X31+8], X8
	075 Call NetworkBehaviourId.get_IsValid, X0
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {102}
	080 Move X8, 0x227A000
	081 Move X8, [X8+3544]
	082 Move X0, X19
	083 Move X2, X31
	084 Move X1, [X8]
	085 Call StringBuilder.Append, X0, X1
	086 Move X8, [X20+64]
	087 Compare X8, 0
	088 JumpIfEqual {93}
	089 Move X8, [X8+32]
	090 Compare X8, 0
	091 JumpIfEqual {93}
	092 Move W8, [X8]
	093 Move W9, [X20+104]
	094 Add X0, X31, 8
	095 NotImplemented "Instruction BFM not yet implemented."
	096 Move [X31+8], X8
	097 Call NetworkBehaviourId.ToString, X0
	098 Move X1, X0
	099 Move X0, X19
	100 Move X2, X31
	101 Call StringBuilder.Append, X0, X1
	102 Move X0, X19
	103 Move X1, X31
	104 Call StringBuilder.get_Length, X0
	105 Move X8, [X21]
	106 Move X21, [X20+56]
	107 Move W20, W0
	108 Move W9, [X8+224]
	109 Compare W9, 0
	110 JumpIfNotEqual {113}
	111 Move X0, X8
	112 Call 0x1C17DFC
	113 Move X22, 0x227A000
	114 Move X22, [X22+2120]
	115 Move X0, X19
	116 Move X1, X21
	117 Move X2, X31
	118 Call NetworkRunner.TryGetPrettyRunnerName, X0, X1
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {130}
	123 Move X8, 0x2284000
	124 Move X8, [X8+2200]
	125 Move X0, X19
	126 Move W1, W20
	127 Move X3, X31
	128 Move X2, [X8]
	129 Call StringBuilder.Insert, X0, X1, X2
	130 Move X1, [X22]
	131 Move X0, X19
	132 Move X20, [X31+32]
	133 Move X19, [X31+40]
	134 Move X22, [X31+16]
	135 Move X21, [X31+24]
	136 Move X2, X31
	137 Move X30, [X31+48]
	138 Call StringBuilder.Append, X0, X1
	139 Return 
	140 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01E75F1C ADRP X8, 0xFFFFFFFFFFB1D000
	0x01E75F20 ADD X8, X8, 0xDBC
	0x01E75F24 B 0x1E75F3C
	0x01E75F28 ADRP X8, 0xFFFFFFFFFFB1D000

ISIL:
	001 Move W8, 16
	002 Move X1, X31
	003 Move [X0+48], W8
	004 Call Behaviour..ctor, X0
	005 Return 

