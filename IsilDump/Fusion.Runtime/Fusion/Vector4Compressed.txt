Type: Fusion.Vector4Compressed

Method: System.Single get_X()

Disassembly:
	0x01E8C494 LDR X0, [X22]
	0x01E8C498 LDR W8, [X0 + 0xE0]
	0x01E8C49C CBNZ W8, 0x1E8C4C0
	0x01E8C4A0 BL 0x1C16DFC
	0x01E8C4A4 LDRB W8, [X21 + 0xE90]
	0x01E8C4A8 CBNZ W8, 0x1E8C4C0
	0x01E8C4AC ADRP X0, 0x226E000
	0x01E8C4B0 LDR X0, [X0 + 0xC68]
	0x01E8C4B4 BL 0x1C16CF4
	0x01E8C4B8 MOVZ W8, 0x1
	0x01E8C4BC STRB W8, [X21 + 0xE90]
	0x01E8C4C0 LDR X0, [X22]
	0x01E8C4C4 LDR W8, [X0 + 0xE0]
	0x01E8C4C8 CBNZ W8, 0x1E8C4EC
	0x01E8C4CC BL 0x1C16DFC
	0x01E8C4D0 LDRB W8, [X21 + 0xE90]
	0x01E8C4D4 CBNZ W8, 0x1E8C4EC
	0x01E8C4D8 ADRP X0, 0x226E000
	0x01E8C4DC LDR X0, [X0 + 0xC68]
	0x01E8C4E0 BL 0x1C16CF4
	0x01E8C4E4 MOVZ W8, 0x1
	0x01E8C4E8 STRB W8, [X21 + 0xE90]
	0x01E8C4EC LDR X0, [X22]
	0x01E8C4F0 LDR W8, [X0 + 0xE0]
	0x01E8C4F4 CBNZ W8, 0x1E8C518
	0x01E8C4F8 BL 0x1C16DFC
	0x01E8C4FC LDRB W8, [X21 + 0xE90]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x254D000
	005 Move W8, [X20+3728]
	006 Move W19, [X0]
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0x226F000
	010 Move X0, [X0+3176]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X20+3728], W8
	014 Move X8, 0x226F000
	015 Move X8, [X8+3176]
	016 Move X0, [X8]
	017 Move W8, [X0+224]
	018 Compare W8, 0
	019 JumpIfNotEqual {21}
	020 Call 0x1C17DFC
	021 And W8, W19, 1
	022 Subtract W8, W31, W8
	023 Xor W8, W8, W19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W9, 0x3A800000
	027 NotImplemented "Instruction SCVTF not yet implemented."
	028 Move S1, W9
	029 Multiply S0, S0, S1
	030 Move X30, [X31+32]
	031 Return V0

Method: System.Void set_X(System.Single value)

Disassembly:
	0x01E8C500 CBNZ W8, 0x1E8C518
	0x01E8C504 ADRP X0, 0x226E000
	0x01E8C508 LDR X0, [X0 + 0xC68]
	0x01E8C50C BL 0x1C16CF4
	0x01E8C510 MOVZ W8, 0x1
	0x01E8C514 STRB W8, [X21 + 0xE90]
	0x01E8C518 LDR X0, [X22]
	0x01E8C51C LDR W8, [X0 + 0xE0]
	0x01E8C520 CBNZ W8, 0x1E8C528
	0x01E8C524 BL 0x1C16DFC
	0x01E8C528 UBFM X9, X20, 0x20, 0x3F
	0x01E8C52C FMOV S0, W20
	0x01E8C530 UNIMPLEMENTED
	0x01E8C534 UBFM X8, X19, 0x20, 0x3F
	0x01E8C538 UNIMPLEMENTED
	0x01E8C53C MOVI V1.4S, 0x1
	0x01E8C540 UNIMPLEMENTED
	0x01E8C544 UNIMPLEMENTED
	0x01E8C548 AND V0.16B, V0.16B, V1.16B
	0x01E8C54C UNIMPLEMENTED
	0x01E8C550 MOVZ W10, 0x3A800000
	0x00000000 INVALID
	0x01E8C558 LDP X20, X19, [X31 + 0x20]
	0x01E8C55C LDP X22, X21, [X31 + 0x10]
	0x01E8C560 UNIMPLEMENTED
	0x01E8C564 UNIMPLEMENTED
	0x00000000 INVALID
	0x01E8C56C MOV S1, V0.S[1]
	0x01E8C570 MOV S2, V0.S[2]
	0x01E8C574 MOV S3, V0.S[3]
	0x01E8C578 LDR X30, [X31], #0x30
	0x01E8C57C RET
	0x01E8C580 LDR W8, [X0]
	0x01E8C584 CMP W8, W1
	0x01E8C588 B.NE 0x1E8C5BC
	0x01E8C58C LDR W8, [X0 + 0x4]
	0x01E8C590 UBFM X9, X1, 0x20, 0x3F
	0x01E8C594 CMP W8, W9
	0x01E8C598 B.NE 0x1E8C5BC
	0x01E8C59C LDR W8, [X0 + 0x8]
	0x01E8C5A0 CMP W8, W2

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x254D000
	006 Move W8, [X20+3727]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x226F000
	012 Move X0, [X0+3176]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3727], W8
	016 Move X8, 0x226F000
	017 Move X8, [X8+3176]
	018 Move X0, [X8]
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move W8, S8
	024 Move W9, 0x44800000
	025 Move W8, W8
	026 ShiftRight W8, 31
	027 And W8, W8, 0x7FFFFFFF
	028 Move S0, 0.5
	029 Move S1, W9
	030 NotImplemented "Instruction UCVTF not yet implemented."
	031 Move W9, 0x7F800000
	032 Multiply S1, S8, S1
	033 Subtract S0, S0, S2
	034 Move S2, W9
	035 Add S0, S1, S0
	036 NotImplemented "Instruction FCVTZS not yet implemented."
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 Move W9, 0x80000000
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 NotImplemented "Instruction SBFM not yet implemented."
	041 Xor W8, W9, W8
	042 Move [X19], W8
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+8]
	046 Move V8, [X31+32]
	047 Return 

Method: System.Single get_Y()

Disassembly:
	0x01E8C5A4 B.NE 0x1E8C5BC
	0x01E8C5A8 LDR W8, [X0 + 0xC]
	0x01E8C5AC UBFM X9, X2, 0x20, 0x3F
	0x01E8C5B0 CMP W8, W9
	0x01E8C5B4 CSET W0, EQ
	0x01E8C5B8 RET
	0x01E8C5BC MOV W0, W31
	0x01E8C5C0 RET
	0x01E8C5C4 STP X30, X21, [X31 - 0x20]!
	0x01E8C5C8 STP X20, X19, [X31 + 0x10]
	0x01E8C5CC ADRP X21, 0x254D000
	0x01E8C5D0 LDRB W8, [X21 + 0x23A]
	0x01E8C5D4 MOV X20, X1
	0x01E8C5D8 MOV X19, X0
	0x01E8C5DC TBNZ X8, 0x0, 0x1E8C5F4
	0x01E8C5E0 ADRP X0, 0x2271000
	0x01E8C5E4 LDR X0, [X0 + 0xFC8]
	0x01E8C5E8 BL 0x1C16CF4
	0x01E8C5EC MOVZ W8, 0x1
	0x01E8C5F0 STRB W8, [X21 + 0x23A]
	0x01E8C5F4 CBZ X20, 0x1E8C65C
	0x01E8C5F8 ADRP X8, 0x2271000
	0x01E8C5FC LDR X8, [X8 + 0xFC8]
	0x01E8C600 LDR X9, [X20]
	0x01E8C604 LDR X8, [X8]
	0x01E8C608 CMP X9, X8
	0x01E8C60C B.NE 0x1E8C65C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x254D000
	005 Move W8, [X20+3728]
	006 Move W19, [X0+4]
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0x226F000
	010 Move X0, [X0+3176]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X20+3728], W8
	014 Move X8, 0x226F000
	015 Move X8, [X8+3176]
	016 Move X0, [X8]
	017 Move W8, [X0+224]
	018 Compare W8, 0
	019 JumpIfNotEqual {21}
	020 Call 0x1C17DFC
	021 And W8, W19, 1
	022 Subtract W8, W31, W8
	023 Xor W8, W8, W19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W9, 0x3A800000
	027 NotImplemented "Instruction SCVTF not yet implemented."
	028 Move S1, W9
	029 Multiply S0, S0, S1
	030 Move X30, [X31+32]
	031 Return V0

Method: System.Void set_Y(System.Single value)

Disassembly:
	0x01E8C610 MOV X0, X20
	0x01E8C614 BL 0x1C16E08
	0x01E8C618 LDR X8, [X0]
	0x01E8C61C LDR W9, [X19]
	0x01E8C620 CMP W9, W8
	0x01E8C624 B.NE 0x1E8C65C
	0x01E8C628 LDR W9, [X19 + 0x4]
	0x01E8C62C UBFM X8, X8, 0x20, 0x3F
	0x01E8C630 CMP W9, W8
	0x01E8C634 B.NE 0x1E8C65C
	0x01E8C638 LDR X8, [X0 + 0x8]
	0x01E8C63C LDR W9, [X19 + 0x8]
	0x01E8C640 CMP W9, W8
	0x01E8C644 B.NE 0x1E8C65C
	0x01E8C648 LDR W9, [X19 + 0xC]
	0x01E8C64C UBFM X8, X8, 0x20, 0x3F
	0x01E8C650 CMP W9, W8
	0x01E8C654 CSET W0, EQ
	0x01E8C658 B 0x1E8C660
	0x01E8C65C MOV W0, W31
	0x01E8C660 LDP X20, X19, [X31 + 0x10]
	0x01E8C664 LDP X30, X21, [X31], #0x20
	0x01E8C668 RET
	0x01E8C66C LDP W8, W9, [X0]
	0x01E8C670 LDP W10, W11, [X0 + 0x8]
	0x01E8C674 MOVZ W12, 0x18D
	0x01E8C678 MUL W8, W8, W12
	0x01E8C67C EOR W8, W8, W9, 0x0
	0x01E8C680 MUL W8, W8, W12
	0x01E8C684 EOR W8, W8, W10, 0x0
	0x01E8C688 MUL W8, W8, W12
	0x01E8C68C EOR W0, W8, W11, 0x0
	0x01E8C690 RET
	0x01E8C694 MOV X8, X0
	0x01E8C698 CMP W8, W2
	0x01E8C69C B.NE 0x1E8C6D0
	0x01E8C6A0 CMP W1, W3
	0x01E8C6A4 MOV W0, W31
	0x01E8C6A8 B.NE 0x1E8C6CC
	0x01E8C6AC UBFM X8, X8, 0x20, 0x3F
	0x01E8C6B0 UBFM X9, X2, 0x20, 0x3F

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x254D000
	006 Move W8, [X20+3727]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x226F000
	012 Move X0, [X0+3176]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3727], W8
	016 Move X8, 0x226F000
	017 Move X8, [X8+3176]
	018 Move X0, [X8]
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move W8, S8
	024 Move W9, 0x44800000
	025 Move W8, W8
	026 ShiftRight W8, 31
	027 And W8, W8, 0x7FFFFFFF
	028 Move S0, 0.5
	029 Move S1, W9
	030 NotImplemented "Instruction UCVTF not yet implemented."
	031 Move W9, 0x7F800000
	032 Multiply S1, S8, S1
	033 Subtract S0, S0, S2
	034 Move S2, W9
	035 Add S0, S1, S0
	036 NotImplemented "Instruction FCVTZS not yet implemented."
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 Move W9, 0x80000000
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 NotImplemented "Instruction SBFM not yet implemented."
	041 Xor W8, W9, W8
	042 Move [X19+4], W8
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+8]
	046 Move V8, [X31+32]
	047 Return 

Method: System.Single get_Z()

Disassembly:
	0x01E8C6B4 CMP W8, W9
	0x01E8C6B8 B.NE 0x1E8C6CC
	0x01E8C6BC UBFM X8, X1, 0x20, 0x3F
	0x01E8C6C0 UBFM X9, X3, 0x20, 0x3F
	0x01E8C6C4 CMP W8, W9
	0x01E8C6C8 CSET W0, EQ
	0x01E8C6CC RET
	0x01E8C6D0 MOV W0, W31
	0x01E8C6D4 RET
	0x01E8C6D8 MOV X8, X0
	0x01E8C6DC CMP W8, W2
	0x01E8C6E0 B.NE 0x1E8C714
	0x01E8C6E4 CMP W1, W3
	0x01E8C6E8 MOVZ W0, 0x1
	0x01E8C6EC B.NE 0x1E8C710
	0x01E8C6F0 UBFM X8, X8, 0x20, 0x3F
	0x01E8C6F4 UBFM X9, X2, 0x20, 0x3F
	0x01E8C6F8 CMP W8, W9
	0x01E8C6FC B.NE 0x1E8C710
	0x01E8C700 UBFM X8, X1, 0x20, 0x3F
	0x01E8C704 UBFM X9, X3, 0x20, 0x3F
	0x01E8C708 CMP W8, W9
	0x01E8C70C CSET W0, NE
	0x01E8C710 RET
	0x01E8C714 MOVZ W0, 0x1
	0x01E8C718 RET
	0x01E8C71C STR D8, [X31 - 0x30]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x254D000
	005 Move W8, [X20+3728]
	006 Move W19, [X0+8]
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0x226F000
	010 Move X0, [X0+3176]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X20+3728], W8
	014 Move X8, 0x226F000
	015 Move X8, [X8+3176]
	016 Move X0, [X8]
	017 Move W8, [X0+224]
	018 Compare W8, 0
	019 JumpIfNotEqual {21}
	020 Call 0x1C17DFC
	021 And W8, W19, 1
	022 Subtract W8, W31, W8
	023 Xor W8, W8, W19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W9, 0x3A800000
	027 NotImplemented "Instruction SCVTF not yet implemented."
	028 Move S1, W9
	029 Multiply S0, S0, S1
	030 Move X30, [X31+32]
	031 Return V0

Method: System.Void set_Z(System.Single value)

Disassembly:
	0x01E8C720 STP X30, X21, [X31 + 0x10]
	0x01E8C724 STP X20, X19, [X31 + 0x20]
	0x01E8C728 ADRP X20, 0x254D000
	0x01E8C72C ADRP X21, 0x226E000
	0x01E8C730 LDRB W8, [X20 + 0x23B]
	0x01E8C734 LDR X21, [X21 + 0xC68]
	0x01E8C738 MOV W19, W0
	0x01E8C73C MOV V8.16B, V0.16B
	0x01E8C740 TBNZ X8, 0x0, 0x1E8C758
	0x01E8C744 ADRP X0, 0x226E000
	0x01E8C748 LDR X0, [X0 + 0xC68]
	0x01E8C74C BL 0x1C16CF4
	0x01E8C750 MOVZ W8, 0x1
	0x01E8C754 STRB W8, [X20 + 0x23B]
	0x01E8C758 LDR X0, [X21]
	0x01E8C75C LDR W8, [X0 + 0xE0]
	0x01E8C760 CBNZ W8, 0x1E8C768
	0x01E8C764 BL 0x1C16DFC
	0x01E8C768 FMOV W8, S8
	0x01E8C76C UBFM W8, W8, 0x1F, 0x1F
	0x01E8C770 SCVTF S0, W19
	0x01E8C774 FMOV S1, 0.5
	0x01E8C778 UCVTF S2, W8
	0x01E8C77C MOVZ W9, 0x7F800000
	0x01E8C780 FMUL S0, S0, S8
	0x01E8C784 FSUB S1, S1, S2
	0x01E8C788 FMOV S2, W9
	0x01E8C78C FADD S0, S0, S1
	0x01E8C790 FCVTZS W8, S0
	0x01E8C794 FCMP S0, S2
	0x01E8C798 MOVZ W9, 0x80000000
	0x01E8C79C LDP X20, X19, [X31 + 0x20]
	0x01E8C7A0 LDP X30, X21, [X31 + 0x10]
	0x01E8C7A4 CSEL W8, W9, W8, EQ
	0x01E8C7A8 SBFM W9, W8, 0x1F, 0x1F
	0x01E8C7AC EOR W0, W9, W8, 0x1
	0x01E8C7B0 LDR V8, [X31], #0x30
	0x01E8C7B4 RET
	0x01E8C7B8 STR D8, [X31 - 0x30]!
	0x01E8C7BC STP X30, X21, [X31 + 0x10]
	0x01E8C7C0 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x254D000
	006 Move W8, [X20+3727]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x226F000
	012 Move X0, [X0+3176]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3727], W8
	016 Move X8, 0x226F000
	017 Move X8, [X8+3176]
	018 Move X0, [X8]
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move W8, S8
	024 Move W9, 0x44800000
	025 Move W8, W8
	026 ShiftRight W8, 31
	027 And W8, W8, 0x7FFFFFFF
	028 Move S0, 0.5
	029 Move S1, W9
	030 NotImplemented "Instruction UCVTF not yet implemented."
	031 Move W9, 0x7F800000
	032 Multiply S1, S8, S1
	033 Subtract S0, S0, S2
	034 Move S2, W9
	035 Add S0, S1, S0
	036 NotImplemented "Instruction FCVTZS not yet implemented."
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 Move W9, 0x80000000
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 NotImplemented "Instruction SBFM not yet implemented."
	041 Xor W8, W9, W8
	042 Move [X19+8], W8
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+8]
	046 Move V8, [X31+32]
	047 Return 

Method: System.Single get_W()

Disassembly:
	0x01E8C7C4 ADRP X20, 0x254D000
	0x01E8C7C8 ADRP X21, 0x226E000
	0x01E8C7CC LDRB W8, [X20 + 0x23C]
	0x01E8C7D0 LDR X21, [X21 + 0xC68]
	0x01E8C7D4 MOV V8.16B, V0.16B
	0x01E8C7D8 MOV W19, W0
	0x01E8C7DC TBNZ X8, 0x0, 0x1E8C7F4
	0x01E8C7E0 ADRP X0, 0x226E000
	0x01E8C7E4 LDR X0, [X0 + 0xC68]
	0x01E8C7E8 BL 0x1C16CF4
	0x01E8C7EC MOVZ W8, 0x1
	0x01E8C7F0 STRB W8, [X20 + 0x23C]
	0x01E8C7F4 LDR X0, [X21]
	0x01E8C7F8 LDR W8, [X0 + 0xE0]
	0x01E8C7FC CBNZ W8, 0x1E8C804
	0x01E8C800 BL 0x1C16DFC
	0x01E8C804 AND W8, W19, 0x1
	0x01E8C808 SUB W8, W31, W8
	0x01E8C80C EOR W8, W8, W19, 0x1
	0x01E8C810 LDP X20, X19, [X31 + 0x20]
	0x01E8C814 LDP X30, X21, [X31 + 0x10]
	0x01E8C818 SCVTF S0, W8
	0x01E8C81C FDIV S0, S0, S8
	0x01E8C820 LDR V8, [X31], #0x30
	0x01E8C824 RET
	0x01E8C828 STR X30, [X31 - 0x10]!
	0x01E8C82C CBZ X0, 0x1E8C840

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x254D000
	005 Move W8, [X20+3728]
	006 Move W19, [X0+12]
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0x226F000
	010 Move X0, [X0+3176]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X20+3728], W8
	014 Move X8, 0x226F000
	015 Move X8, [X8+3176]
	016 Move X0, [X8]
	017 Move W8, [X0+224]
	018 Compare W8, 0
	019 JumpIfNotEqual {21}
	020 Call 0x1C17DFC
	021 And W8, W19, 1
	022 Subtract W8, W31, W8
	023 Xor W8, W8, W19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W9, 0x3A800000
	027 NotImplemented "Instruction SCVTF not yet implemented."
	028 Move S1, W9
	029 Multiply S0, S0, S1
	030 Move X30, [X31+32]
	031 Return V0

Method: System.Void set_W(System.Single value)

Disassembly:
	0x01E8C830 MOV W2, W1
	0x01E8C834 LDR W1, [X0 + 0x10]
	0x01E8C838 LDR X30, [X31], #0x10
	0x01E8C83C B 0x1E8C844
	0x01E8C840 BL 0x1C16F20
	0x01E8C844 STR X30, [X31 - 0x40]!
	0x01E8C848 STP X24, X23, [X31 + 0x10]
	0x01E8C84C STP X22, X21, [X31 + 0x20]
	0x01E8C850 STP X20, X19, [X31 + 0x30]
	0x01E8C854 MOV W19, W2
	0x01E8C858 SUBS W23, W1, 0x1
	0x01E8C85C B.LT 0x1E8C8C4
	0x01E8C860 MOV X21, X0
	0x01E8C864 CBZ X0, 0x1E8C8E8
	0x01E8C868 MOV W20, W1
	0x01E8C86C MOV W22, W31
	0x01E8C870 MOV W24, W19
	0x01E8C874 MOV X0, X21
	0x01E8C878 MOV W1, W22
	0x01E8C87C MOV X2, X31
	0x01E8C880 BL 0x3222A1C
	0x01E8C884 ADD W8, W19, W19, 0x5, LSL
	0x01E8C888 AND W9, W0, 0xFFFF
	0x01E8C88C CMP W22, W23
	0x01E8C890 EOR W19, W8, W9, 0x0
	0x01E8C894 B.EQ 0x1E8C8C8
	0x01E8C898 ADD W1, W22, 0x1
	0x01E8C89C MOV X0, X21
	0x01E8C8A0 MOV X2, X31
	0x01E8C8A4 BL 0x3222A1C
	0x01E8C8A8 ADD W8, W24, W24, 0x5, LSL
	0x01E8C8AC AND W9, W0, 0xFFFF
	0x01E8C8B0 ADD W22, W22, 0x2
	0x01E8C8B4 CMP W22, W20
	0x01E8C8B8 EOR W24, W8, W9, 0x0
	0x01E8C8BC B.LT 0x1E8C874
	0x01E8C8C0 B 0x1E8C8C8
	0x01E8C8C4 MOV W24, W19
	0x01E8C8C8 MOVZ W8, 0x8B65
	0x01E8C8CC MOVK W8, 0x5D580000
	0x01E8C8D0 MADD W0, W24, W8, W19

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x254D000
	006 Move W8, [X20+3727]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x226F000
	012 Move X0, [X0+3176]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3727], W8
	016 Move X8, 0x226F000
	017 Move X8, [X8+3176]
	018 Move X0, [X8]
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move W8, S8
	024 Move W9, 0x44800000
	025 Move W8, W8
	026 ShiftRight W8, 31
	027 And W8, W8, 0x7FFFFFFF
	028 Move S0, 0.5
	029 Move S1, W9
	030 NotImplemented "Instruction UCVTF not yet implemented."
	031 Move W9, 0x7F800000
	032 Multiply S1, S8, S1
	033 Subtract S0, S0, S2
	034 Move S2, W9
	035 Add S0, S1, S0
	036 NotImplemented "Instruction FCVTZS not yet implemented."
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 Move W9, 0x80000000
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 NotImplemented "Instruction SBFM not yet implemented."
	041 Xor W8, W9, W8
	042 Move [X19+12], W8
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+8]
	046 Move V8, [X31+32]
	047 Return 

Method: Fusion.Vector4Compressed op_Implicit(UnityEngine.Vector4 v)

Disassembly:
	0x01E8C8D4 LDP X20, X19, [X31 + 0x30]
	0x01E8C8D8 LDP X22, X21, [X31 + 0x20]
	0x01E8C8DC LDP X24, X23, [X31 + 0x10]
	0x01E8C8E0 LDR X30, [X31], #0x40
	0x01E8C8E4 RET
	0x01E8C8E8 BL 0x1C16F20
	0x01E8C8EC ADD W8, W0, W0, 0x5, LSL
	0x01E8C8F0 EOR W0, W8, W1, 0x0
	0x01E8C8F4 RET
	0x01E8C8F8 ADD W8, W0, W0, 0x5, LSL
	0x01E8C8FC EOR W8, W8, W1, 0x0
	0x01E8C900 ADD W8, W8, W8, 0x5, LSL
	0x01E8C904 EOR W0, W8, W2, 0x0
	0x01E8C908 RET
	0x01E8C90C STR X30, [X31 - 0x10]!
	0x01E8C910 CBZ X0, 0x1E8C95C
	0x01E8C914 LDR W8, [X0 + 0x18]
	0x01E8C918 UBFM X9, X8, 0x20, 0x1F
	0x01E8C91C CMP X9, 0x1
	0x01E8C920 B.LT 0x1E8C94C
	0x01E8C924 SXTW X9, W8
	0x01E8C928 ADD X10, X0, 0x20
	0x01E8C92C CBZ X8, 0x1E8C958
	0x01E8C930 LDRB W11, [X10], #0x1
	0x01E8C934 UBFM W12, W1, 0x1B, 0x1A
	0x01E8C938 SUB W12, W12, W1
	0x01E8C93C SUB X9, X9, 0x1
	0x01E8C940 ADD W1, W12, W11
	0x01E8C944 SUB X8, X8, 0x1
	0x01E8C948 CBNZ X9, 0x1E8C92C
	0x01E8C94C MOV W0, W1
	0x01E8C950 LDR X30, [X31], #0x10
	0x01E8C954 RET
	0x01E8C958 BL 0x1C16F28
	0x01E8C95C BL 0x1C16F20
	0x01E8C960 STP X30, X21, [X31 - 0x20]!
	0x01E8C964 STP X20, X19, [X31 + 0x10]
	0x01E8C968 CBZ X0, 0x1E8C9C0
	0x01E8C96C LDR W8, [X0 + 0x10]
	0x01E8C970 MOV W19, W1
	0x01E8C974 MOV X20, X0
	0x01E8C978 CMP W8, 0x1
	0x01E8C97C B.LT 0x1E8C9B0
	0x01E8C980 MOV W21, W31
	0x01E8C984 MOV X0, X20
	0x01E8C988 MOV W1, W21
	0x01E8C98C MOV X2, X31
	0x01E8C990 BL 0x3222A1C
	0x01E8C994 LDR W8, [X20 + 0x10]
	0x01E8C998 UBFM W9, W19, 0x1B, 0x1A
	0x01E8C99C SUB W9, W9, W19
	0x01E8C9A0 ADD W21, W21, 0x1
	0x01E8C9A4 CMP W21, W8
	0x01E8C9A8 ADD W19, W9, W0, UXTH
	0x01E8C9AC B.LT 0x1E8C984
	0x01E8C9B0 MOV W0, W19
	0x01E8C9B4 LDP X20, X19, [X31 + 0x10]
	0x01E8C9B8 LDP X30, X21, [X31], #0x20
	0x01E8C9BC RET
	0x01E8C9C0 BL 0x1C16F20
	0x01E8C9C4 ADRP X8, 0xFFFFFFFFFEC60000
	0x01E8C9C8 ADRP X9, 0xFFFFFFFFFEC60000
	0x01E8C9CC LDR V0, [X8 + 0x61]
	0x01E8C9D0 LDR V1, [X9 + 0x7B]
	0x01E8C9D4 MOVZ W8, 0x3FC00000
	0x01E8C9D8 MOV X1, X31
	0x01E8C9DC STR W8, [X0 + 0x30]
	0x01E8C9E0 STP V0, V1, [X0 + 0x10]
	0x01E8C9E4 B 0x33BDD8C
	0x01E8C9E8 STR X30, [X31 - 0x40]!
	0x01E8C9EC STP X24, X23, [X31 + 0x10]
	0x01E8C9F0 STP X22, X21, [X31 + 0x20]
	0x01E8C9F4 STP X20, X19, [X31 + 0x30]
	0x01E8C9F8 ADRP X21, 0x254D000
	0x01E8C9FC LDRB W8, [X21 + 0x23D]
	0x01E8CA00 MOV X19, X1
	0x01E8CA04 MOV X20, X0
	0x01E8CA08 TBNZ X8, 0x0, 0x1E8CA2C
	0x01E8CA0C ADRP X0, 0x2271000
	0x01E8CA10 LDR X0, [X0 + 0xFD0]
	0x01E8CA14 BL 0x1C16CF4
	0x01E8CA18 ADRP X0, 0x2271000
	0x01E8CA1C LDR X0, [X0 + 0xFD8]
	0x01E8CA20 BL 0x1C16CF4
	0x01E8CA24 MOVZ W8, 0x1
	0x01E8CA28 STRB W8, [X21 + 0x23D]
	0x01E8CA2C CBZ X20, 0x1E8CAA0
	0x01E8CA30 LDR W8, [X20 + 0x18]
	0x01E8CA34 MOV W22, W31
	0x01E8CA38 SUBS W23, W8, 0x1
	0x01E8CA3C B.MI 0x1E8CA84
	0x01E8CA40 ADRP X24, 0x2271000
	0x01E8CA44 LDR X24, [X24 + 0xFD8]
	0x01E8CA48 LDR X2, [X24]
	0x01E8CA4C SUB W8, W23, W22
	0x01E8CA50 ADD W21, W22, W8, 0x1, ASR
	0x01E8CA54 MOV X0, X20
	0x01E8CA58 MOV W1, W21
	0x01E8CA5C BL 0x30167BC
	0x01E8CA60 SUBS W8, W0, W19
	0x01E8CA64 B.EQ 0x1E8CA88
	0x01E8CA68 TBZ X8, 0x1F, 0x1E8CA7C
	0x01E8CA6C ADD W22, W21, 0x1
	0x01E8CA70 CMP W23, W22
	0x01E8CA74 B.GE 0x1E8CA48
	0x01E8CA78 B 0x1E8CA84
	0x01E8CA7C SUB W23, W21, 0x1
	0x01E8CA80 B 0x1E8CA70
	0x01E8CA84 ORN W21, W31, W22, 0x0
	0x01E8CA88 MOV W0, W21
	0x01E8CA8C LDP X20, X19, [X31 + 0x30]
	0x01E8CA90 LDP X22, X21, [X31 + 0x20]
	0x01E8CA94 LDP X24, X23, [X31 + 0x10]
	0x01E8CA98 LDR X30, [X31], #0x40
	0x01E8CA9C RET
	0x01E8CAA0 BL 0x1C16F20
	0x01E8CAA4 STP X30, X21, [X31 - 0x20]!
	0x01E8CAA8 STP X20, X19, [X31 + 0x10]
	0x01E8CAAC ADRP X21, 0x254D000
	0x01E8CAB0 LDRB W8, [X21 + 0x23E]
	0x01E8CAB4 MOV X20, X1
	0x01E8CAB8 MOV X19, X0
	0x01E8CABC TBNZ X8, 0x0, 0x1E8CAD4
	0x01E8CAC0 ADRP X0, 0x2271000
	0x01E8CAC4 LDR X0, [X0 + 0xFE0]
	0x01E8CAC8 BL 0x1C16CF4
	0x01E8CACC MOVZ W8, 0x1
	0x01E8CAD0 STRB W8, [X21 + 0x23E]
	0x01E8CAD4 AND X20, X20, 0x0
	0x01E8CAD8 MOV X0, X19
	0x01E8CADC MOV X1, X20
	0x01E8CAE0 BL 0x1E8C9E8
	0x01E8CAE4 MOV W21, W0
	0x01E8CAE8 TBZ X0, 0x1F, 0x1E8CB0C
	0x01E8CAEC CBZ X19, 0x1E8CB1C
	0x01E8CAF0 ADRP X8, 0x2271000
	0x01E8CAF4 LDR X8, [X8 + 0xFE0]
	0x01E8CAF8 ORN W1, W31, W21, 0x0
	0x01E8CAFC MOV X0, X19
	0x01E8CB00 MOV X2, X20
	0x01E8CB04 LDR X3, [X8]
	0x01E8CB08 BL 0x30179F8
	0x01E8CB0C LDP X20, X19, [X31 + 0x10]
	0x01E8CB10 UBFM W0, W21, 0x1F, 0x1F

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X19, 0x254D000
	012 Move W8, [X19+3727]
	013 Move V8, V3
	014 Move V9, V2
	015 Move V10, V1
	016 Move V11, V0
	017 Compare W8, 0
	018 JumpIfNotEqual {24}
	019 Move X0, 0x226F000
	020 Move X0, [X0+3176]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X19+3727], W8
	024 Move X20, 0x226F000
	025 Move X20, [X20+3176]
	026 Move X0, [X20]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfEqual {31}
	030 Move W8, W31
	031 Call 0x1C17DFC
	032 Move W8, [X19+3727]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSET not yet implemented."
	035 Move W9, S11
	036 Move W10, 0x44800000
	037 Move W9, W9
	038 ShiftRight W9, 31
	039 And W9, W9, 0x7FFFFFFF
	040 Move S0, 0.5
	041 Move S1, W10
	042 NotImplemented "Instruction UCVTF not yet implemented."
	043 Move W11, 0x7F800000
	044 Multiply S1, S11, S1
	045 Subtract S0, S0, S2
	046 Move S3, W11
	047 Add S0, S1, S0
	048 NotImplemented "Instruction FCVTZS not yet implemented."
	049 NotImplemented "Instruction FCMP not yet implemented."
	050 Move W10, 0x80000000
	051 NotImplemented "Instruction CSEL not yet implemented."
	052 Compare W8, 0
	053 JumpIfEqual {59}
	054 Move X0, 0x226F000
	055 Move X0, [X0+3176]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X19+3727], W8
	059 Move X0, [X20]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfEqual {64}
	063 Move W8, W31
	064 Call 0x1C17DFC
	065 Move W8, [X19+3727]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 NotImplemented "Instruction CSET not yet implemented."
	068 Move W9, S10
	069 Move W10, 0x44800000
	070 Move W9, W9
	071 ShiftRight W9, 31
	072 And W9, W9, 0x7FFFFFFF
	073 Move S0, 0.5
	074 Move S1, W10
	075 NotImplemented "Instruction UCVTF not yet implemented."
	076 Move W11, 0x7F800000
	077 Multiply S1, S10, S1
	078 Subtract S0, S0, S2
	079 Move S3, W11
	080 Add S0, S1, S0
	081 NotImplemented "Instruction FCVTZS not yet implemented."
	082 NotImplemented "Instruction FCMP not yet implemented."
	083 Move W10, 0x80000000
	084 NotImplemented "Instruction CSEL not yet implemented."
	085 Compare W8, 0
	086 JumpIfEqual {92}
	087 Move X0, 0x226F000
	088 Move X0, [X0+3176]
	089 Call 0x1C17CF4
	090 Move W8, 1
	091 Move [X19+3727], W8
	092 Move X0, [X20]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfEqual {97}
	096 Move W8, W31
	097 Call 0x1C17DFC
	098 Move W8, [X19+3727]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 NotImplemented "Instruction CSET not yet implemented."
	101 Move W9, S9
	102 Move W10, 0x44800000
	103 Move W9, W9
	104 ShiftRight W9, 31
	105 And W9, W9, 0x7FFFFFFF
	106 Move S0, 0.5
	107 Move S1, W10
	108 NotImplemented "Instruction UCVTF not yet implemented."
	109 Move W11, 0x7F800000
	110 Multiply S1, S9, S1
	111 Subtract S0, S0, S2
	112 Move S3, W11
	113 Add S0, S1, S0
	114 NotImplemented "Instruction FCVTZS not yet implemented."
	115 NotImplemented "Instruction FCMP not yet implemented."
	116 Move W10, 0x80000000
	117 NotImplemented "Instruction CSEL not yet implemented."
	118 Compare W8, 0
	119 JumpIfEqual {125}
	120 Move X0, 0x226F000
	121 Move X0, [X0+3176]
	122 Call 0x1C17CF4
	123 Move W8, 1
	124 Move [X19+3727], W8
	125 Move X0, [X20]
	126 Move W8, [X0+224]
	127 Compare W8, 0
	128 JumpIfNotEqual {130}
	129 Call 0x1C17DFC
	130 NotImplemented "Instruction SBFM not yet implemented."
	131 Xor W1, W8, W23
	132 NotImplemented "Instruction SBFM not yet implemented."
	133 Move W10, S8
	134 Xor W0, W8, W21
	135 Move W8, 0x44800000
	136 Move W10, W10
	137 ShiftRight W10, 31
	138 And W10, W10, 0x7FFFFFFF
	139 Move S0, 0.5
	140 Move S1, W8
	141 NotImplemented "Instruction UCVTF not yet implemented."
	142 Move W8, 0x7F800000
	143 Multiply S1, S8, S1
	144 Subtract S0, S0, S2
	145 Move S2, W8
	146 Add S0, S1, S0
	147 NotImplemented "Instruction SBFM not yet implemented."
	148 Move W10, 0x80000000
	149 NotImplemented "Instruction FCVTZS not yet implemented."
	150 NotImplemented "Instruction FCMP not yet implemented."
	151 Xor W9, W9, W22
	152 NotImplemented "Instruction CSEL not yet implemented."
	153 Move X20, [X31+64]
	154 Move X19, [X31+72]
	155 Move X22, [X31+48]
	156 Move X21, [X31+56]
	157 Move X30, [X31+32]
	158 Move X23, [X31+40]
	159 Move D9, [X31+16]
	160 Move D8, [X31+24]
	161 NotImplemented "Instruction SBFM not yet implemented."
	162 Xor W8, W10, W8
	163 NotImplemented "Instruction BFM not yet implemented."
	164 NotImplemented "Instruction BFM not yet implemented."
	165 Move D11, [X31+80]
	166 Move D10, [X31+88]
	167 Return X0

Method: UnityEngine.Vector4 op_Implicit(Fusion.Vector4Compressed q)

Disassembly:
	0x01E8CB14 LDP X30, X21, [X31], #0x20
	0x01E8CB18 RET
	0x01E8CB1C BL 0x1C16F20
	0x01E8CB20 STP X30, X21, [X31 - 0x20]!
	0x01E8CB24 STP X20, X19, [X31 + 0x10]
	0x01E8CB28 ADRP X21, 0x254D000
	0x01E8CB2C LDRB W8, [X21 + 0x23F]
	0x01E8CB30 MOV X20, X1
	0x01E8CB34 MOV X19, X0
	0x01E8CB38 TBNZ X8, 0x0, 0x1E8CB50
	0x01E8CB3C ADRP X0, 0x2271000
	0x01E8CB40 LDR X0, [X0 + 0xFE8]
	0x01E8CB44 BL 0x1C16CF4
	0x01E8CB48 MOVZ W8, 0x1
	0x01E8CB4C STRB W8, [X21 + 0x23F]
	0x01E8CB50 AND X1, X20, 0x0
	0x01E8CB54 MOV X0, X19
	0x01E8CB58 BL 0x1E8C9E8
	0x01E8CB5C MOV W20, W0
	0x01E8CB60 TBNZ X0, 0x1F, 0x1E8CB80
	0x01E8CB64 CBZ X19, 0x1E8CB94
	0x01E8CB68 ADRP X8, 0x2271000
	0x01E8CB6C LDR X8, [X8 + 0xFE8]
	0x01E8CB70 MOV X0, X19
	0x01E8CB74 MOV W1, W20
	0x01E8CB78 LDR X2, [X8]
	0x01E8CB7C BL 0x301854C
	0x01E8CB80 ORN W8, W31, W20, 0x0
	0x01E8CB84 LDP X20, X19, [X31 + 0x10]
	0x01E8CB88 UBFM W0, W8, 0x1F, 0x1F
	0x01E8CB8C LDP X30, X21, [X31], #0x20
	0x01E8CB90 RET
	0x01E8CB94 BL 0x1C16F20
	0x01E8CB98 STR X30, [X31 - 0x40]!
	0x01E8CB9C STP X24, X23, [X31 + 0x10]
	0x01E8CBA0 STP X22, X21, [X31 + 0x20]
	0x01E8CBA4 STP X20, X19, [X31 + 0x30]
	0x01E8CBA8 ADRP X22, 0x254D000
	0x01E8CBAC LDRB W8, [X22 + 0x240]
	0x01E8CBB0 MOV X20, X3
	0x01E8CBB4 MOV X19, X2
	0x01E8CBB8 MOV W21, W1
	0x01E8CBBC TBNZ X8, 0x0, 0x1E8CBEC
	0x01E8CBC0 ADRP X0, 0x2267000
	0x01E8CBC4 LDR X0, [X0 + 0xA28]
	0x01E8CBC8 BL 0x1C16CF4
	0x01E8CBCC ADRP X0, 0x2271000
	0x01E8CBD0 LDR X0, [X0 + 0xFF0]
	0x01E8CBD4 BL 0x1C16CF4
	0x01E8CBD8 ADRP X0, 0x2270000
	0x01E8CBDC LDR X0, [X0 + 0xD20]
	0x01E8CBE0 BL 0x1C16CF4
	0x01E8CBE4 MOVZ W8, 0x1
	0x01E8CBE8 STRB W8, [X22 + 0x240]
	0x01E8CBEC ADRP X8, 0x2271000
	0x01E8CBF0 ADRP X24, 0x2270000
	0x01E8CBF4 ADRP X23, 0x2267000
	0x01E8CBF8 LDR X8, [X8 + 0xFF0]
	0x01E8CBFC LDR X24, [X24 + 0xD20]
	0x01E8CC00 LDR X23, [X23 + 0xA28]
	0x01E8CC04 AND W9, W21, 0xFF
	0x01E8CC08 SUB W10, W9, 0x2
	0x01E8CC0C CMP W10, 0x3
	0x01E8CC10 B.CS 0x1E8CC34
	0x01E8CC14 LDP X21, X20, [X20]
	0x01E8CC18 LDR X22, [X8]
	0x01E8CC1C CBZ X19, 0x1E8CC60
	0x01E8CC20 LDR X8, [X19]
	0x01E8CC24 MOV X0, X19
	0x01E8CC28 LDP X9, X1, [X8 + 0x168]
	0x01E8CC2C BLR X9
	0x01E8CC30 B 0x1E8CC64
	0x01E8CC34 CBZ W9, 0x1E8CCB8
	0x01E8CC38 CMP W9, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x254D000
	007 Move W8, [X21+3728]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare W8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, 0x226F000
	013 Move X0, [X0+3176]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X21+3728], W8
	017 Move X22, 0x226F000
	018 Move X22, [X22+3176]
	019 Move X0, [X22]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {32}
	023 Call 0x1C17DFC
	024 Move W8, [X21+3728]
	025 Compare W8, 0
	026 JumpIfNotEqual {32}
	027 Move X0, 0x226F000
	028 Move X0, [X0+3176]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+3728], W8
	032 Move X0, [X22]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {45}
	036 Call 0x1C17DFC
	037 Move W8, [X21+3728]
	038 Compare W8, 0
	039 JumpIfNotEqual {45}
	040 Move X0, 0x226F000
	041 Move X0, [X0+3176]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+3728], W8
	045 Move X0, [X22]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {58}
	049 Call 0x1C17DFC
	050 Move W8, [X21+3728]
	051 Compare W8, 0
	052 JumpIfNotEqual {58}
	053 Move X0, 0x226F000
	054 Move X0, [X0+3176]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X21+3728], W8
	058 Move X0, [X22]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X9, X20
	064 ShiftRight X9, 32
	065 And X9, X9, 0x7FFFFFFF
	066 Move S0, W20
	067 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	068 Move X8, X19
	069 ShiftRight X8, 32
	070 And X8, X8, 0x7FFFFFFF
	071 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	072 NotImplemented "Instruction MOVI not yet implemented."
	073 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	074 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	075 And V0, V0, V1
	076 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	077 Move W10, 0x3A800000
	078 NotImplemented "Instruction INVALID not yet implemented."
	079 Move X20, [X31+32]
	080 Move X19, [X31+40]
	081 Move X22, [X31+16]
	082 Move X21, [X31+24]
	083 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	084 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	085 NotImplemented "Instruction INVALID not yet implemented."
	086 Move S1, V0.S[1]
	087 Move S2, V0.S[2]
	088 Move S3, V0.S[3]
	089 Move X30, [X31+48]
	090 Return X0

Method: System.Boolean Equals(Fusion.Vector4Compressed other)

Disassembly:
	0x01E8CC3C B.NE 0x1E8CCD8
	0x01E8CC40 LDP X21, X20, [X20]
	0x01E8CC44 LDR X22, [X8]
	0x01E8CC48 CBZ X19, 0x1E8CD44
	0x01E8CC4C LDR X8, [X19]
	0x01E8CC50 MOV X0, X19
	0x01E8CC54 LDP X9, X1, [X8 + 0x168]
	0x01E8CC58 BLR X9
	0x01E8CC5C B 0x1E8CD48
	0x01E8CC60 MOV X0, X31
	0x01E8CC64 LDR X8, [X24]
	0x01E8CC68 CMP X0, 0x0
	0x01E8CC6C MOV X1, X21
	0x01E8CC70 MOV X2, X20
	0x01E8CC74 CSEL X3, X8, X0, EQ
	0x01E8CC78 MOV X0, X22
	0x01E8CC7C MOV X4, X31

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, [X0+4]
	004 Move X9, X1
	005 ShiftRight X9, 32
	006 And X9, X9, 0x7FFFFFFF
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W8, [X0+8]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W8, [X0+12]
	011 Move X9, X2
	012 ShiftRight X9, 32
	013 And X9, X9, 0x7FFFFFFF
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CSET not yet implemented."
	016 Return X0
	017 Move W0, W31
	018 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x01E8CC80 BL 0x3227C18
	0x01E8CC84 LDR X8, [X23]
	0x01E8CC88 MOV X19, X0
	0x01E8CC8C LDR W9, [X8 + 0xE0]
	0x01E8CC90 CBNZ W9, 0x1E8CC9C
	0x01E8CC94 MOV X0, X8
	0x01E8CC98 BL 0x1C16DFC
	0x01E8CC9C MOV X0, X19
	0x01E8CCA0 LDP X20, X19, [X31 + 0x30]
	0x01E8CCA4 LDP X22, X21, [X31 + 0x20]
	0x01E8CCA8 LDP X24, X23, [X31 + 0x10]
	0x01E8CCAC MOV X1, X31
	0x01E8CCB0 LDR X30, [X31], #0x40
	0x01E8CCB4 B 0x3C06048
	0x01E8CCB8 LDP X21, X20, [X20]
	0x01E8CCBC LDR X22, [X8]
	0x01E8CCC0 CBZ X19, 0x1E8CCEC
	0x01E8CCC4 LDR X8, [X19]
	0x01E8CCC8 MOV X0, X19
	0x01E8CCCC LDP X9, X1, [X8 + 0x168]
	0x01E8CCD0 BLR X9
	0x01E8CCD4 B 0x1E8CCF0
	0x01E8CCD8 LDP X20, X19, [X31 + 0x30]
	0x01E8CCDC LDP X22, X21, [X31 + 0x20]
	0x01E8CCE0 LDP X24, X23, [X31 + 0x10]
	0x01E8CCE4 LDR X30, [X31], #0x40
	0x01E8CCE8 RET
	0x01E8CCEC MOV X0, X31
	0x01E8CCF0 LDR X8, [X24]
	0x01E8CCF4 CMP X0, 0x0
	0x01E8CCF8 MOV X1, X21
	0x01E8CCFC MOV X2, X20
	0x01E8CD00 CSEL X3, X8, X0, EQ
	0x01E8CD04 MOV X0, X22
	0x01E8CD08 MOV X4, X31
	0x01E8CD0C BL 0x3227C18
	0x01E8CD10 LDR X8, [X23]
	0x01E8CD14 MOV X19, X0
	0x01E8CD18 LDR W9, [X8 + 0xE0]
	0x01E8CD1C CBNZ W9, 0x1E8CD28
	0x01E8CD20 MOV X0, X8
	0x01E8CD24 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x254E000
	006 Move W8, [X21+569]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2272000
	014 Move X0, [X0+4032]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+569], W8
	018 Compare X20, 0
	019 JumpIfEqual {44}
	020 Move X8, 0x2272000
	021 Move X8, [X8+4032]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X20
	026 Call 0x1C17E08
	027 Move X8, [X0]
	028 Move W9, [X19]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W9, [X19+4]
	031 Move X8, X8
	032 ShiftRight X8, 32
	033 And X8, X8, 0x7FFFFFFF
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X8, [X0+8]
	036 Move W9, [X19+8]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W9, [X19+12]
	039 Move X8, X8
	040 ShiftRight X8, 32
	041 And X8, X8, 0x7FFFFFFF
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CSET not yet implemented."
	044 Move W0, W31
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x01E8CD28 MOV X0, X19
	0x01E8CD2C LDP X20, X19, [X31 + 0x30]
	0x01E8CD30 LDP X22, X21, [X31 + 0x20]
	0x01E8CD34 LDP X24, X23, [X31 + 0x10]
	0x01E8CD38 MOV X1, X31
	0x01E8CD3C LDR X30, [X31], #0x40
	0x01E8CD40 B 0x3C0649C
	0x01E8CD44 MOV X0, X31
	0x01E8CD48 LDR X8, [X24]
	0x01E8CD4C CMP X0, 0x0

ISIL:
	001 Move W8, [X0]
	002 Move W9, [X0+4]
	003 Move W10, [X0+8]
	004 Move W11, [X0+12]
	005 Move W12, 397
	006 Multiply W8, W8, W12
	007 Xor W8, W8, W9
	008 Multiply W8, W8, W12
	009 Xor W8, W8, W10
	010 Multiply W8, W8, W12
	011 Xor W0, W8, W11
	012 Return X0

Method: System.Boolean op_Equality(Fusion.Vector4Compressed left, Fusion.Vector4Compressed right)

Disassembly:
	0x01E8CD50 MOV X1, X21
	0x01E8CD54 MOV X2, X20
	0x01E8CD58 CSEL X3, X8, X0, EQ
	0x01E8CD5C MOV X0, X22
	0x01E8CD60 MOV X4, X31
	0x01E8CD64 BL 0x3227C18
	0x01E8CD68 LDR X8, [X23]
	0x01E8CD6C MOV X19, X0
	0x01E8CD70 LDR W9, [X8 + 0xE0]
	0x01E8CD74 CBNZ W9, 0x1E8CD80
	0x01E8CD78 MOV X0, X8
	0x01E8CD7C BL 0x1C16DFC
	0x01E8CD80 MOV X0, X19
	0x01E8CD84 LDP X20, X19, [X31 + 0x30]
	0x01E8CD88 LDP X22, X21, [X31 + 0x20]
	0x01E8CD8C LDP X24, X23, [X31 + 0x10]
	0x01E8CD90 MOV X1, X31

ISIL:
	001 Move X8, X0
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move W0, W31
	005 Move X8, X8
	006 ShiftRight X8, 32
	007 And X8, X8, 0x7FFFFFFF
	008 Move X9, X2
	009 ShiftRight X9, 32
	010 And X9, X9, 0x7FFFFFFF
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X8, X1
	013 ShiftRight X8, 32
	014 And X8, X8, 0x7FFFFFFF
	015 Move X9, X3
	016 ShiftRight X9, 32
	017 And X9, X9, 0x7FFFFFFF
	018 NotImplemented "Instruction CMP not yet implemented."
	019 NotImplemented "Instruction CSET not yet implemented."
	020 Return X0
	021 Move W0, W31
	022 Return X0

Method: System.Boolean op_Inequality(Fusion.Vector4Compressed left, Fusion.Vector4Compressed right)

Disassembly:
	0x01E8CD94 LDR X30, [X31], #0x40
	0x01E8CD98 B 0x3C06A04
	0x01E8CD9C STP X30, X21, [X31 - 0x20]!
	0x01E8CDA0 STP X20, X19, [X31 + 0x10]
	0x01E8CDA4 ADRP X20, 0x254D000
	0x01E8CDA8 ADRP X21, 0x2267000
	0x01E8CDAC LDRB W8, [X20 + 0x241]
	0x01E8CDB0 LDR X21, [X21 + 0xA28]
	0x01E8CDB4 MOV X19, X1
	0x01E8CDB8 TBNZ X8, 0x0, 0x1E8CDD0
	0x01E8CDBC ADRP X0, 0x2267000
	0x01E8CDC0 LDR X0, [X0 + 0xA28]
	0x01E8CDC4 BL 0x1C16CF4
	0x01E8CDC8 MOVZ W8, 0x1
	0x01E8CDCC STRB W8, [X20 + 0x241]
	0x01E8CDD0 LDR X0, [X21]
	0x01E8CDD4 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move X8, X0
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move W0, 1
	005 Move X8, X8
	006 ShiftRight X8, 32
	007 And X8, X8, 0x7FFFFFFF
	008 Move X9, X2
	009 ShiftRight X9, 32
	010 And X9, X9, 0x7FFFFFFF
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X8, X1
	013 ShiftRight X8, 32
	014 And X8, X8, 0x7FFFFFFF
	015 Move X9, X3
	016 ShiftRight X9, 32
	017 And X9, X9, 0x7FFFFFFF
	018 NotImplemented "Instruction CMP not yet implemented."
	019 NotImplemented "Instruction CSET not yet implemented."
	020 Return X0
	021 Move W0, 1
	022 Return X0

