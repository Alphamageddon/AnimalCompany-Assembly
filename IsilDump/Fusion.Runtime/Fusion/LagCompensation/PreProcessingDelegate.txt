Type: Fusion.LagCompensation.PreProcessingDelegate

Method: System.Void .ctor(System.Object object, System.IntPtr method)

Disassembly:
	0x01EEE1DC STP X31, X31, [X31 + 0x80]
	0x01EEE1E0 STP V0, V0, [X31 + 0x60]
	0x01EEE1E4 STR W31, [X31 + 0x90]
	0x01EEE1E8 CBZ X22, 0x1EEE500
	0x01EEE1EC MOV X0, X22
	0x01EEE1F0 MOV X1, X31
	0x01EEE1F4 BL 0x3C32ECC
	0x01EEE1F8 LDP X10, X8, [X31 + 0x80]
	0x01EEE1FC LDR W9, [X31 + 0x90]
	0x01EEE200 LDP V0, V1, [X31 + 0x60]
	0x01EEE204 STP X10, X8, [X31 + 0x30]
	0x01EEE208 STR W9, [X31 + 0x40]
	0x01EEE20C STP V0, V1, [X31 + 0x10]
	0x01EEE210 CBZ X19, 0x1EEE500
	0x01EEE214 LDP X10, X8, [X31 + 0x30]
	0x01EEE218 LDR W9, [X31 + 0x40]
	0x01EEE21C LDP V0, V1, [X31 + 0x10]
	0x01EEE220 STP X10, X8, [X31 + 0xC0]
	0x01EEE224 STR W9, [X31 + 0xD0]
	0x01EEE228 STP V0, V1, [X31 + 0xA0]
	0x01EEE22C LDR W10, [X19 + 0x1C]
	0x01EEE230 LDR X8, [X19 + 0x10]
	0x01EEE234 LDR X9, [X27]
	0x01EEE238 ADD W10, W10, 0x1
	0x01EEE23C STR W10, [X19 + 0x1C]
	0x01EEE240 CBZ X8, 0x1EEE500
	0x01EEE244 LDRSW X10, [X19 + 0x18]
	0x01EEE248 LDR W11, [X8 + 0x18]
	0x01EEE24C CMP W10, W11
	0x01EEE250 B.CS 0x1EEE29C
	0x01EEE254 ADD W9, W10, 0x1
	0x01EEE258 MADD X8, X10, X28, X8
	0x01EEE25C STR W9, [X19 + 0x18]
	0x01EEE260 STR D8, [X8 + 0x20]
	0x01EEE264 LDR W9, [X31 + 0xD0]
	0x01EEE268 LDR X10, [X31 + 0xC8]
	0x01EEE26C STR W9, [X8 + 0x38]
	0x01EEE270 STP X0, X10, [X8 + 0x28]
	0x01EEE274 LDP V0, V1, [X31 + 0xA0]
	0x01EEE278 LDR X9, [X31 + 0xC0]
	0x01EEE27C STUR X31, [X8 + 0x6C]
	0x01EEE280 STUR X31, [X8 + 0x64]
	0x01EEE284 STR W31, [X8 + 0x74]
	0x01EEE288 STUR X9, [X8 + 0x5C]
	0x01EEE28C STUR V1, [X8 + 0x4C]
	0x01EEE290 STUR V0, [X8 + 0x3C]
	0x01EEE294 STP X22, X31, [X8 + 0x78]
	0x01EEE298 B 0x1EEE2E4
	0x01EEE29C LDR X8, [X9 + 0x20]
	0x01EEE2A0 LDR W10, [X31 + 0xD0]
	0x01EEE2A4 LDP V0, V1, [X31 + 0xA0]
	0x01EEE2A8 ADD X1, X31, 0xD8
	0x01EEE2AC LDR X8, [X8 + 0xC0]
	0x01EEE2B0 LDR X2, [X8 + 0x70]
	0x01EEE2B4 LDP X8, X9, [X31 + 0xC0]
	0x01EEE2B8 STR X0, [X31 + 0xE0]
	0x01EEE2BC MOV X0, X19
	0x01EEE2C0 STR D8, [X31 + 0xD8]
	0x01EEE2C4 STR W10, [X24 + 0x8]
	0x01EEE2C8 STR X9, [X24]
	0x01EEE2CC STR X8, [X25 + 0x20]
	0x01EEE2D0 STP V0, V1, [X25]
	0x01EEE2D4 STP X31, X31, [X26]
	0x01EEE2D8 STR W31, [X26 + 0x10]
	0x01EEE2DC STP X22, X31, [X31 + 0x130]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+8]
	007 Move [X0+32], X1
	008 Move [X0+40], X2
	009 Move X19, X0
	010 Move X20, X2
	011 Move [X0+16], X8
	012 Move W22, [X2+82]
	013 Move [X0+64], X0
	014 Move X0, X2
	015 Move X21, X1
	016 Call 0x1C17D84
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {24}
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X8, -5591040
	023 Add X8, X8, 1420
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W8, [X19+112]
	026 Compare W8, 0
	027 JumpIfEqual {49}
	028 Move X0, X20
	029 Call 0x1C17D7C
	030 Move W21, W0
	031 Move X0, X20
	032 Call 0x1C18238
	033 Move TEMP, X21
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {51}
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {57}
	041 Move X8, -5591040
	042 Add X8, X8, 1736
	043 Compare X21, 0
	044 JumpIfEqual {71}
	045 Move X8, [X19+16]
	046 Move X9, [X19+32]
	047 Move [X19+24], X8
	048 Move [X19+64], X9
	049 Move X8, -5591040
	050 Add X8, X8, 1380
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {59}
	055 Move X8, -5591040
	056 Add X8, X8, 1496
	057 Move X8, -5591040
	058 Add X8, X8, 1652
	059 Move X8, -5591040
	060 Add X8, X8, 1444
	061 Move [X19+24], X8
	062 Move X8, -5591040
	063 Add X8, X8, 1284
	064 Move [X19+56], X8
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X30, [X31+48]
	070 Return 
	071 Move X1, -20783104
	072 Add X1, X1, 3811
	073 Move X0, X31
	074 Call 0x1C17F3C
	075 Move X1, X31
	076 Call 0x1C17DEC

Method: System.Void Invoke(Fusion.LagCompensation.Query query, System.Collections.Generic.HashSet`1<Fusion.HitboxRoot> rootCandidates, System.Collections.Generic.HashSet`1<System.Int32> processedColliderIndices)

Disassembly:
	0x01EEE2E0 BL 0x2FECE74
	0x01EEE2E4 ADD W23, W23, 0x1
	0x01EEE2E8 CMP W21, W23
	0x01EEE2EC B.NE 0x1EEE1BC
	0x01EEE2F0 B 0x1EEE4D0

ISIL:
	001 Move X8, [X0+64]
	002 Move X5, [X0+24]
	003 Move X4, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X5

Method: System.IAsyncResult BeginInvoke(Fusion.LagCompensation.Query query, System.Collections.Generic.HashSet`1<Fusion.HitboxRoot> rootCandidates, System.Collections.Generic.HashSet`1<System.Int32> processedColliderIndices, System.AsyncCallback callback, System.Object object)

Disassembly:
	0x01EEE2F4 CBZ X21, 0x1EEE500
	0x01EEE2F8 MOV X0, X21
	0x01EEE2FC MOV X1, X31
	0x01EEE300 BL 0x1EA6D70
	0x01EEE304 STR W0, [X31 + 0x98]
	0x01EEE308 LDR W0, [X20 + 0x18]
	0x01EEE30C LDP S8, S9, [X20 + 0x48]
	0x01EEE310 LDP S10, S11, [X20 + 0x50]
	0x01EEE314 LDP S12, S13, [X20 + 0x58]
	0x01EEE318 LDR X21, [X20 + 0x70]
	0x01EEE31C LDR V14, [X20 + 0x60]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+24], X31
	003 Move [X31+32], X30
	004 Move [X31], X1
	005 Move [X31+8], X2
	006 Move [X31+16], X3
	007 Add X1, X31, 0
	008 Move X2, X4
	009 Move X3, X5
	010 Call 0x1C17CB0
	011 Move X30, [X31+32]
	012 Add X31, X31, 48
	013 Return X0

Method: System.Void EndInvoke(System.IAsyncResult result)

Disassembly:
	0x01EEE320 LDUR X22, [X20 + 0x64]
	0x01EEE324 LDR V15, [X20 + 0x6C]
	0x01EEE328 MOV X1, X31

ISIL:
	001 Move X0, X1
	002 Move X1, X31
	003 Call 0x1C17CB4
	004 Return 

