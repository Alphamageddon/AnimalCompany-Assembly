Type: Fusion.LagCompensation.Query

Method: System.Void .ctor(ref Fusion.LagCompensation.QueryParams qParams)

Disassembly:
	0x01EEE52C STR V7, [X0]
	0x01EEE530 STR V6, [X0 + 0x5]
	0x01EEE534 STR W2, [X0 + 0x60]
	0x01EEE538 RET
	0x01EEE53C LDR X8, [X0]
	0x01EEE540 LDP X3, X2, [X8 + 0x188]
	0x01EEE544 BR X3
	0x01EEE548 STP X30, X23, [X31 - 0x30]!
	0x01EEE54C STP X22, X21, [X31 + 0x10]
	0x01EEE550 STP X20, X19, [X31 + 0x20]
	0x01EEE554 ADRP X23, 0x24EB000
	0x01EEE558 ADRP X22, 0x220B000
	0x01EEE55C ADRP X21, 0x220F000
	0x01EEE560 LDRB W8, [X23 + 0x5C3]
	0x01EEE564 LDR X22, [X22 + 0x488]
	0x01EEE568 LDR X21, [X21 + 0xE00]
	0x01EEE56C MOV X20, X1
	0x01EEE570 MOV X19, X0
	0x01EEE574 TBNZ X8, 0x0, 0x1EEE598
	0x01EEE578 ADRP X0, 0x220F000
	0x01EEE57C LDR X0, [X0 + 0xE00]
	0x01EEE580 BL 0x1C16CF4
	0x01EEE584 ADRP X0, 0x220B000
	0x01EEE588 LDR X0, [X0 + 0x488]
	0x01EEE58C BL 0x1C16CF4
	0x01EEE590 MOVZ W8, 0x1
	0x01EEE594 STRB W8, [X23 + 0x5C3]
	0x01EEE598 MOV X0, X19
	0x01EEE59C MOV X1, X20
	0x01EEE5A0 BL 0x1EED52C
	0x01EEE5A4 LDR W8, [X20 + 0x4C]
	0x01EEE5A8 LDUR X9, [X20 + 0x44]
	0x01EEE5AC STR W8, [X19 + 0x50]
	0x01EEE5B0 STR X9, [X19 + 0x48]
	0x01EEE5B4 LDR W8, [X20 + 0x40]
	0x01EEE5B8 LDR X9, [X20 + 0x38]
	0x01EEE5BC STR W8, [X19 + 0x5C]
	0x01EEE5C0 STUR X9, [X19 + 0x54]
	0x01EEE5C4 LDR V0, [X20 + 0x50]
	0x01EEE5C8 STR S0, [X19 + 0x60]
	0x01EEE5CC LDR W1, [X20 + 0x54]
	0x01EEE5D0 LDR X0, [X22]
	0x01EEE5D4 BL 0x1C16D6C
	0x01EEE5D8 STR X0, [X19 + 0xB8]
	0x01EEE5DC LDR W1, [X20 + 0x54]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x24EC000
	007 Move X21, 0x2207000
	008 Move W8, [X22+1474]
	009 Move X21, [X21+1136]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2207000
	017 Move X0, [X0+1136]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1474], W8
	021 Move X0, X19
	022 Move X1, X31
	023 Call Object..ctor, X0
	024 Move X8, [X20+40]
	025 Add X0, X31, 8
	026 Move [X19+64], X8
	027 Move W8, [X20+4]
	028 Move [X19+16], W8
	029 Move W8, [X20+8]
	030 Move [X19+24], W8
	031 Move X8, [X20+48]
	032 Move [X19+40], X8
	033 Move W8, [X20]
	034 Move [X19+20], W8
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 Move [X19+56], X8
	037 Move W8, [X20+12]
	038 Move [X19+28], W8
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 Move [X19+48], X8
	041 Move W1, [X20+16]
	042 Move X2, [X21]
	043 Move [X31+8], X31
	044 Call Nullable`1<Int32>..ctor, X0, X1
	045 Move X8, [X31+8]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move [X19+32], X8
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X30, [X31+48]
	052 Return 

Method: System.Boolean Fusion.LagCompensation.IBoundsTraversalTest.Check(ref Fusion.LagCompensation.AABB bounds)

Disassembly:
	0x01EEF53C BL 0x2BBDA6C
	0x01EEF540 TBZ X0, 0x0, 0x1EEF658
	0x01EEF544 CBZ X20, 0x1EEF694

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+392]
	003 Move X2, [X8+400]
	004 CallNoReturn X3

Method: System.Boolean Check(ref Fusion.LagCompensation.AABB bounds)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean NarrowPhase(Fusion.LagCompensation.IHitboxColliderContainer container, System.Collections.Generic.HashSet`1<System.Int32> candidates, System.Collections.Generic.List`1<Fusion.LagCompensation.HitboxHit> hits)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void PerformStaticQuery(Fusion.NetworkRunner runner, System.Collections.Generic.List`1<Fusion.LagCompensatedHit> hits, Fusion.HitOptions options)

Disassembly:
	

ISIL:
No ISIL was generated
Method: Fusion.LagCompensation.HitboxHit CreateHitboxHit(ref Fusion.LagCompensation.HitboxCollider collider, UnityEngine.Vector3 point, System.Single distance, UnityEngine.Vector3 normal)

Disassembly:
	0x01EEF050 LDR X8, [X21 + 0x20]
	0x01EEF054 ADD X0, X31, 0x138
	0x01EEF058 ADD X1, X31, 0xD0
	0x01EEF05C MOVZ W2, 0x68
	0x01EEF060 LDR X8, [X8 + 0xC0]
	0x01EEF064 LDR X21, [X8 + 0x70]
	0x01EEF068 BL 0x3EB1AC0
	0x01EEF06C ADD X1, X31, 0x138
	0x01EEF070 MOV X0, X19
	0x01EEF074 MOV X2, X21
	0x01EEF078 BL 0x2FECE74
	0x01EEF07C ADD X22, X22, 0x1
	0x01EEF080 CMP X23, X22
	0x01EEF084 ADD X24, X24, 0x24
	0x01EEF088 B.NE 0x1EEEFAC
	0x01EEF08C B 0x1EEF200
	0x01EEF090 CBZ X21, 0x1EEF22C

ISIL:
	001 Move X13, [X1+112]
	002 Move W10, [X1+124]
	003 Move [X8], S0
	004 Move [X8+8], S1
	005 Move [X8+8], S2
	006 Move [X8+16], S4
	007 Move [X8+16], S5
	008 Move [X8+24], S6
	009 Move [X8+24], S3
	010 Move [X8+28], W31
	011 Move W9, [X1+448]
	012 Move X11, [X1+440]
	013 Add X12, X1, 452
	014 Move [X8+48], W9
	015 Move [X8+32], X13
	016 Move [X8+40], X11
	017 Move V0, [X12]
	018 Move [X8+68], W10
	019 Move [X8+72], X31
	020 Move [X8+52], V0
	021 Return X0

