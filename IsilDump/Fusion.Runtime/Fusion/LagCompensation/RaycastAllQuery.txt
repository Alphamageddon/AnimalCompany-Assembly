Type: Fusion.LagCompensation.RaycastAllQuery

Method: System.Void .ctor(ref Fusion.LagCompensation.RaycastQueryParams raycastQueryParams)

Disassembly:
	0x01EEF548 LDR X8, [X20]
	0x01EEF54C LDR W22, [X31 + 0x40]
	0x01EEF550 LDR X1, [X26]
	0x01EEF554 LDRH W9, [X8 + 0x12E]
	0x01EEF558 CBZ X9, 0x1EEF57C
	0x01EEF55C LDR X10, [X8 + 0xB0]
	0x01EEF560 ADD X10, X10, 0x8
	0x01EEF564 LDUR X11, [X10 - 0x8]
	0x01EEF568 CMP X11, X1
	0x01EEF56C B.EQ 0x1EEF58C
	0x01EEF570 SUBS X9, X9, 0x1
	0x01EEF574 ADD X10, X10, 0x10
	0x01EEF578 B.NE 0x1EEF564
	0x01EEF57C MOVZ W2, 0x2
	0x01EEF580 MOV X0, X20
	0x01EEF584 BL 0x1C5C788
	0x01EEF588 B 0x1EEF59C
	0x01EEF58C LDR W9, [X10]
	0x01EEF590 ADD W9, W9, 0x2
	0x01EEF594 ADD X8, X8, W9, 0x4, SXTW
	0x01EEF598 ADD X0, X8, 0x138
	0x01EEF59C LDP X8, X2, [X0]
	0x01EEF5A0 MOV X0, X20
	0x01EEF5A4 MOV W1, W22
	0x01EEF5A8 BLR X8
	0x01EEF5AC LDP S1, S2, [X21 + 0x58]
	0x01EEF5B0 LDP S3, S4, [X21 + 0x48]
	0x01EEF5B4 LDP S5, S0, [X21 + 0x50]
	0x01EEF5B8 LDR V6, [X21 + 0x60]
	0x01EEF5BC MOV X22, X0
	0x01EEF5C0 ADD X2, X31, 0x20
	0x01EEF5C4 ADD X3, X31, 0x10
	0x01EEF5C8 ADD X4, X31, 0xC
	0x01EEF5CC MOV X1, X0
	0x01EEF5D0 BL 0x1EEEA28
	0x01EEF5D4 LDR V9, [X31 + 0xC]
	0x01EEF5D8 FCMP S9, S8
	0x01EEF5DC CSET W8, LT
	0x01EEF5E0 AND W8, W0, W8, 0x0
	0x01EEF5E4 TBZ X8, 0x0, 0x1EEF534
	0x01EEF5E8 LDR V0, [X31 + 0x20]
	0x01EEF5EC LDR V1, [X31 + 0x28]
	0x01EEF5F0 LDR V2, [X31 + 0x10]
	0x01EEF5F4 LDR V3, [X31 + 0x18]
	0x01EEF5F8 LDR X8, [X22 + 0x70]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x24EB000
	008 Move X22, 0x220B000
	009 Move X21, 0x220F000
	010 Move W8, [X23+1475]
	011 Move X22, [X22+1160]
	012 Move X21, [X21+3584]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x220F000
	020 Move X0, [X0+3584]
	021 Call 0x1C17CF4
	022 Move X0, 0x220B000
	023 Move X0, [X0+1160]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+1475], W8
	027 Move X0, X19
	028 Move X1, X20
	029 Call Query..ctor, X0, X1
	030 Move W8, [X20+76]
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 Move [X19+80], W8
	033 Move [X19+72], X9
	034 Move W8, [X20+64]
	035 Move X9, [X20+56]
	036 Move [X19+92], W8
	037 Move [X19+84], X9
	038 Move V0, [X20+80]
	039 Move [X19+96], S0
	040 Move W1, [X20+84]
	041 Move X0, [X22]
	042 Call 0x1C17D6C
	043 Move [X19+184], X0
	044 Move W1, [X20+84]
	045 Move X0, [X21]
	046 Call 0x1C17D6C
	047 Move [X19+192], X0
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Move X23, [X31+56]
	054 Return 

Method: System.Void .ctor(ref Fusion.LagCompensation.RaycastQueryParams raycastQueryParams, UnityEngine.RaycastHit[] physXRaycastHitsCache, UnityEngine.RaycastHit2D[] box2DRaycastHitCache)

Disassembly:
	0x01EEF644 ADD X2, X31, 0x50
	0x01EEF648 MOV X0, X19
	0x01EEF64C BL 0x2FCC18C
	0x01EEF650 MOV V8.16B, V9.16B
	0x01EEF654 B 0x1EEF534
	0x01EEF658 LDR X1, [X24]
	0x01EEF65C ADD X0, X31, 0x30
	0x01EEF660 BL 0x2BBDA68
	0x01EEF664 LDR W8, [X19 + 0x18]
	0x01EEF668 LDP X20, X19, [X31 + 0x100]
	0x01EEF66C LDP X22, X21, [X31 + 0xF0]
	0x01EEF670 LDP X26, X25, [X31 + 0xD0]
	0x01EEF674 CMP W8, W23
	0x01EEF678 LDP X24, X23, [X31 + 0xE0]
	0x01EEF67C LDP X28, X27, [X31 + 0xC0]
	0x01EEF680 LDP X29, X30, [X31 + 0xB0]
	0x01EEF684 LDP D9, D8, [X31 + 0xA0]
	0x01EEF688 CSET W0, GT
	0x01EEF68C ADD X31, X31, 0x110
	0x01EEF690 RET
	0x01EEF694 BL 0x1C16F20
	0x01EEF698 BL 0x1C16F20
	0x01EEF69C B 0x1EEF6AC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X3
	007 Move X20, X2
	008 Move X21, X1
	009 Move X22, X0
	010 Call Query..ctor, X0, X1
	011 Move W8, [X21+76]
	012 NotImplemented "Instruction LDUR not yet implemented."
	013 Move [X22+80], W8
	014 Move [X22+72], X9
	015 Move W8, [X21+64]
	016 Move X9, [X21+56]
	017 Move [X22+92], W8
	018 Move [X22+84], X9
	019 Move V0, [X21+80]
	020 Move [X22+184], X20
	021 Move [X22+192], X19
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move [X22+96], S0
	025 Move X22, [X31+16]
	026 Move X21, [X31+24]
	027 Move X30, [X31+48]
	028 Return 

Method: System.Boolean NarrowPhase(Fusion.LagCompensation.IHitboxColliderContainer container, System.Collections.Generic.HashSet`1<System.Int32> candidates, System.Collections.Generic.List`1<Fusion.LagCompensation.HitboxHit> hits)

Disassembly:
	0x01EEF6A0 B 0x1EEF6AC
	0x01EEF6A4 B 0x1EEF6AC
	0x01EEF6A8 B 0x1EEF6AC
	0x01EEF6AC MOV X20, X0
	0x01EEF6B0 CMP W1, 0x1
	0x01EEF6B4 B.NE 0x1EEF6E0
	0x01EEF6B8 MOV X0, X20
	0x01EEF6BC BL 0x3EB1AD0
	0x01EEF6C0 LDR X21, [X0]
	0x01EEF6C4 BL 0x3EB1AE0
	0x01EEF6C8 LDR X1, [X24]
	0x01EEF6CC ADD X0, X31, 0x30
	0x01EEF6D0 BL 0x2BBDA68
	0x01EEF6D4 CBZ X21, 0x1EEF664
	0x01EEF6D8 MOV X0, X21
	0x01EEF6DC BL 0x1C16F18
	0x01EEF6E0 MOV X21, X31
	0x01EEF6E4 B 0x1EEF6EC
	0x01EEF6E8 MOV X20, X0
	0x01EEF6EC LDR X1, [X24]
	0x01EEF6F0 ADD X0, X31, 0x30
	0x01EEF6F4 BL 0x2BBDA68
	0x01EEF6F8 CBNZ X21, 0x1EEF704
	0x01EEF6FC MOV X0, X20
	0x01EEF700 BL 0x1D2C690
	0x01EEF704 MOV X0, X21
	0x01EEF708 BL 0x1C16F18
	0x01EEF70C BL 0x1990590
	0x01EEF710 STR D14, [X31 - 0x70]!
	0x01EEF714 STP D13, D12, [X31 + 0x8]
	0x01EEF718 STP D11, D10, [X31 + 0x18]
	0x01EEF71C STP D9, D8, [X31 + 0x28]
	0x01EEF720 STR X29, [X31 + 0x38]
	0x01EEF724 STP X30, X23, [X31 + 0x40]
	0x01EEF728 STP X22, X21, [X31 + 0x50]
	0x01EEF72C STP X20, X19, [X31 + 0x60]
	0x01EEF730 SUB X31, X31, 0x1B0
	0x01EEF734 ADRP X23, 0x24EA000
	0x01EEF738 LDRB W8, [X23 + 0x5C7]
	0x01EEF73C MOV W22, W3
	0x01EEF740 MOV X19, X2
	0x01EEF744 MOV X21, X1
	0x01EEF748 MOV X20, X0
	0x01EEF74C TBNZ X8, 0x0, 0x1EEF770
	0x01EEF750 ADRP X0, 0x220E000
	0x01EEF754 LDR X0, [X0 + 0xD80]
	0x01EEF758 BL 0x1C16CF4
	0x01EEF75C ADRP X0, 0x2204000
	0x01EEF760 LDR X0, [X0 + 0x598]
	0x01EEF764 BL 0x1C16CF4
	0x01EEF768 MOVZ W8, 0x1
	0x01EEF76C STRB W8, [X23 + 0x5C7]
	0x01EEF770 STR W31, [X31 + 0xD0]
	0x01EEF774 STR W31, [X31 + 0xC8]
	0x01EEF778 TBNZ X22, 0x0, 0x1EEF858
	0x01EEF77C TBZ X22, 0x1, 0x1EEF988
	0x01EEF780 CBZ X21, 0x1EEF9B0
	0x01EEF784 MOV X0, X21
	0x01EEF788 MOV X1, X31
	0x01EEF78C ADD X22, X31, 0xD8
	0x01EEF790 BL 0x1EA6E74
	0x01EEF794 STR W0, [X31 + 0xC8]
	0x01EEF798 LDR W0, [X20 + 0x18]
	0x01EEF79C LDP S8, S9, [X20 + 0x54]
	0x01EEF7A0 LDP S10, S11, [X20 + 0x48]
	0x01EEF7A4 LDR V12, [X20 + 0x60]
	0x01EEF7A8 MOV X1, X31
	0x01EEF7AC BL 0x3C35CB8
	0x01EEF7B0 MOV W1, W0
	0x01EEF7B4 ADD X8, X31, 0xD8
	0x01EEF7B8 ADD X0, X31, 0xC8
	0x01EEF7BC MOV V0.16B, V8.16B
	0x01EEF7C0 MOV V1.16B, V9.16B
	0x01EEF7C4 MOV V2.16B, V10.16B
	0x01EEF7C8 MOV V3.16B, V11.16B
	0x01EEF7CC MOV V4.16B, V12.16B
	0x01EEF7D0 MOV X2, X31
	0x01EEF7D4 BL 0x3C87A44
	0x01EEF7D8 LDR W8, [X31 + 0xF8]
	0x01EEF7DC LDP V1, V0, [X22]
	0x01EEF7E0 ADD X21, X20, 0x90
	0x01EEF7E4 MOV X0, X21
	0x01EEF7E8 MOV X1, X31
	0x01EEF7EC STR W8, [X31 + 0x160]
	0x01EEF7F0 STP V1, V0, [X31 + 0x140]
	0x01EEF7F4 STR W8, [X20 + 0xB0]
	0x01EEF7F8 STP V1, V0, [X20 + 0x90]
	0x01EEF7FC BL 0x3C896B8
	0x01EEF800 ADRP X8, 0x2204000
	0x01EEF804 LDR X8, [X8 + 0x598]
	0x01EEF808 MOV X20, X0
	0x01EEF80C LDR X8, [X8]
	0x01EEF810 LDR W9, [X8 + 0xE0]
	0x01EEF814 CBNZ W9, 0x1EEF820
	0x01EEF818 MOV X0, X8
	0x01EEF81C BL 0x1C16DFC
	0x01EEF820 MOV X0, X20
	0x01EEF824 MOV X1, X31
	0x01EEF828 MOV X2, X31
	0x01EEF82C BL 0x3C354F8
	0x01EEF830 TBZ X0, 0x0, 0x1EEF988
	0x01EEF834 LDR W8, [X21 + 0x20]
	0x01EEF838 LDP V1, V0, [X21]
	0x01EEF83C ADD X0, X31, 0x0
	0x01EEF840 MOV X1, X31
	0x01EEF844 STR W8, [X31 + 0x20]
	0x01EEF848 ADD X8, X31, 0x140
	0x01EEF84C STP V1, V0, [X31]
	0x01EEF850 BL 0x1E844C4
	0x01EEF854 B 0x1EEF8E4
	0x01EEF858 CBZ X21, 0x1EEF9B0
	0x01EEF85C MOV X0, X21
	0x01EEF860 MOV X1, X31
	0x01EEF864 BL 0x1EA6D70
	0x01EEF868 STR W0, [X31 + 0xD0]
	0x01EEF86C LDR W0, [X20 + 0x18]
	0x01EEF870 LDP S8, S9, [X20 + 0x58]
	0x01EEF874 LDP S10, S11, [X20 + 0x48]
	0x01EEF878 LDP S13, S12, [X20 + 0x50]
	0x01EEF87C LDR V14, [X20 + 0x60]
	0x01EEF880 MOV X1, X31
	0x01EEF884 ADD X21, X20, 0x64
	0x01EEF888 BL 0x3C35CB8
	0x01EEF88C LDR W3, [X20 + 0x10]
	0x01EEF890 MOV W2, W0
	0x01EEF894 ADD X0, X31, 0xD0
	0x01EEF898 MOV V0.16B, V12.16B
	0x01EEF89C MOV V1.16B, V8.16B
	0x01EEF8A0 MOV V2.16B, V9.16B
	0x01EEF8A4 MOV V3.16B, V10.16B
	0x01EEF8A8 MOV V4.16B, V11.16B
	0x01EEF8AC MOV V5.16B, V13.16B
	0x01EEF8B0 MOV X1, X21
	0x01EEF8B4 MOV V6.16B, V14.16B
	0x01EEF8B8 MOV X4, X31
	0x01EEF8BC BL 0x3C8AFA0
	0x01EEF8C0 TBZ X0, 0x0, 0x1EEF988
	0x01EEF8C4 LDUR V0, [X21 + 0x1C]
	0x01EEF8C8 LDP V2, V1, [X21]
	0x01EEF8CC ADD X8, X31, 0x140
	0x01EEF8D0 ADD X0, X31, 0x30
	0x01EEF8D4 MOV X1, X31
	0x01EEF8D8 STUR V0, [X31 + 0x4C]
	0x01EEF8DC STP V2, V1, [X31 + 0x30]
	0x01EEF8E0 BL 0x1E843C8
	0x01EEF8E4 ADD X0, X31, 0x60
	0x01EEF8E8 ADD X1, X31, 0x140
	0x01EEF8EC MOVZ W2, 0x68
	0x01EEF8F0 BL 0x3EB1AC0
	0x01EEF8F4 CBZ X19, 0x1EEF9B0
	0x01EEF8F8 ADRP X8, 0x220E000
	0x01EEF8FC LDR X8, [X8 + 0xD80]
	0x01EEF900 ADD X0, X31, 0xD8
	0x01EEF904 ADD X1, X31, 0x60
	0x01EEF908 MOVZ W2, 0x68
	0x01EEF90C LDR X20, [X8]
	0x01EEF910 BL 0x3EB1AC0
	0x01EEF914 LDR W9, [X19 + 0x1C]
	0x01EEF918 LDR X8, [X19 + 0x10]
	0x01EEF91C ADD W9, W9, 0x1
	0x01EEF920 STR W9, [X19 + 0x1C]
	0x01EEF924 CBZ X8, 0x1EEF9B0
	0x01EEF928 LDRSW X9, [X19 + 0x18]
	0x01EEF92C LDR W10, [X8 + 0x18]
	0x01EEF930 CMP W9, W10
	0x01EEF934 B.CS 0x1EEF95C
	0x01EEF938 MOVZ W11, 0x68
	0x01EEF93C MADD X8, X9, X11, X8
	0x01EEF940 ADD W10, W9, 0x1
	0x01EEF944 ADD X0, X8, 0x20
	0x01EEF948 ADD X1, X31, 0xD8
	0x01EEF94C MOVZ W2, 0x68
	0x01EEF950 STR W10, [X19 + 0x18]
	0x01EEF954 BL 0x3EB1AC0
	0x01EEF958 B 0x1EEF988
	0x01EEF95C LDR X8, [X20 + 0x20]
	0x01EEF960 ADD X0, X31, 0x140
	0x01EEF964 ADD X1, X31, 0xD8
	0x01EEF968 MOVZ W2, 0x68
	0x01EEF96C LDR X8, [X8 + 0xC0]
	0x01EEF970 LDR X20, [X8 + 0x70]
	0x01EEF974 BL 0x3EB1AC0
	0x01EEF978 ADD X1, X31, 0x140
	0x01EEF97C MOV X0, X19
	0x01EEF980 MOV X2, X20
	0x01EEF984 BL 0x2FECE74
	0x01EEF988 ADD X31, X31, 0x1B0
	0x01EEF98C LDP X20, X19, [X31 + 0x60]
	0x01EEF990 LDP X22, X21, [X31 + 0x50]
	0x01EEF994 LDP X30, X23, [X31 + 0x40]
	0x01EEF998 LDR X29, [X31 + 0x38]
	0x01EEF99C LDP D9, D8, [X31 + 0x28]
	0x01EEF9A0 LDP D11, D10, [X31 + 0x18]
	0x01EEF9A4 LDP D13, D12, [X31 + 0x8]
	0x01EEF9A8 LDR V14, [X31], #0x70
	0x01EEF9AC RET
	0x01EEF9B0 BL 0x1C16F20
	0x01EEF9B4 LDP V7, V16, [X1]
	0x01EEF9B8 LDR V17, [X1 + 0x2]
	0x01EEF9BC LDR X8, [X1 + 0x30]
	0x01EEF9C0 STP S0, S1, [X0 + 0x38]
	0x01EEF9C4 STP S2, S3, [X0 + 0x40]
	0x01EEF9C8 STP S4, S5, [X0 + 0x48]
	0x01EEF9CC STR S6, [X0 + 0x50]
	0x01EEF9D0 STR X8, [X0 + 0x30]
	0x01EEF9D4 STP V16, V17, [X0 + 0x10]
	0x01EEF9D8 STR V7, [X0]
	0x01EEF9DC STR W2, [X0 + 0x54]
	0x01EEF9E0 RET
	0x01EEF9E4 STP X30, X23, [X31 - 0x30]!
	0x01EEF9E8 STP X22, X21, [X31 + 0x10]
	0x01EEF9EC STP X20, X19, [X31 + 0x20]
	0x01EEF9F0 ADRP X23, 0x24EA000
	0x01EEF9F4 ADRP X22, 0x2209000
	0x01EEF9F8 ADRP X21, 0x220E000
	0x01EEF9FC LDRB W8, [X23 + 0x5C8]
	0x01EEFA00 LDR X22, [X22 + 0x138]
	0x01EEFA04 LDR X21, [X21 + 0xDF0]
	0x01EEFA08 MOV X20, X1
	0x01EEFA0C MOV X19, X0
	0x01EEFA10 TBNZ X8, 0x0, 0x1EEFA34
	0x01EEFA14 ADRP X0, 0x220E000
	0x01EEFA18 LDR X0, [X0 + 0xDF0]
	0x01EEFA1C BL 0x1C16CF4
	0x01EEFA20 ADRP X0, 0x2209000
	0x01EEFA24 LDR X0, [X0 + 0x138]

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+192], X29
	003 Move [X31+200], X30
	004 Move [X31+208], X28
	005 Move [X31+216], X27
	006 Move [X31+224], X26
	007 Move [X31+232], X25
	008 Move [X31+240], X24
	009 Move [X31+248], X23
	010 Move [X31+256], X22
	011 Move [X31+264], X21
	012 Move [X31+272], X20
	013 Move [X31+280], X19
	014 Move X23, 0x24EB000
	015 Move W8, [X23+1476]
	016 Move X19, X3
	017 Move X22, X2
	018 Move X20, X1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {47}
	024 Move X0, 0x220C000
	025 Move X0, [X0+2096]
	026 Call 0x1C17CF4
	027 Move X0, 0x220C000
	028 Move X0, [X0+2104]
	029 Call 0x1C17CF4
	030 Move X0, 0x220C000
	031 Move X0, [X0+2112]
	032 Call 0x1C17CF4
	033 Move X0, 0x220C000
	034 Move X0, [X0+2120]
	035 Call 0x1C17CF4
	036 Move X0, 0x220F000
	037 Move X0, [X0+3704]
	038 Call 0x1C17CF4
	039 Move X0, 0x2212000
	040 Move X0, [X0+1464]
	041 Call 0x1C17CF4
	042 Move X0, 0x220F000
	043 Move X0, [X0+3472]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X23+1476], W8
	047 Move [X31+48], X31
	048 Move [X31+56], X31
	049 Move [X31+64], X31
	050 Move [X31+40], W31
	051 Move [X31+32], X31
	052 Move [X31+24], W31
	053 Move [X31+16], X31
	054 Move [X31+12], W31
	055 Compare X19, 0
	056 JumpIfEqual {226}
	057 Compare X22, 0
	058 JumpIfEqual {226}
	059 Move X8, 0x220C000
	060 Move X26, 0x220C000
	061 Move X8, [X8+2120]
	062 Move X26, [X26+2104]
	063 Move W9, [X19+24]
	064 Move X27, 0x220F000
	065 Move X1, [X8]
	066 Move X28, 0x2212000
	067 Move [X31+8], W9
	068 Move X27, [X27+3704]
	069 Move X28, [X28+1464]
	070 Add X8, X31, 112
	071 Move X0, X22
	072 Add X25, X31, 112
	073 Add X23, X31, 112
	074 Call HashSet`1<Int32>.GetEnumerator, X0
	075 Move V0, [X31+7]
	076 Move X8, [X31+128]
	077 Add X29, X23, 40
	078 Add X24, X23, 52
	079 Move [X31+3], V0
	080 Move [X31+64], X8
	081 Move W23, 80
	082 Move X1, [X26]
	083 Add X0, X31, 48
	084 Call Enumerator<Int32>.MoveNext, X0
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {201}
	089 Compare X20, 0
	090 JumpIfEqual {224}
	091 Move X8, [X20]
	092 Move W22, [X31+64]
	093 Move X1, [X27]
	094 NotImplemented "Instruction LDRH not yet implemented."
	095 Compare X9, 0
	096 JumpIfEqual {103}
	097 Move X10, [X8+176]
	098 Add X10, X10, 8
	099 NotImplemented "Instruction LDUR not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Subtract X9, X9, 1
	102 Add X10, X10, 16
	103 Move W2, 2
	104 Move X0, X20
	105 Call 0x1C5D788
	106 Move W9, [X10]
	107 Add W9, W9, 2
	108 Add X8, X8, W9
	109 Add X0, X8, 312
	110 Move X8, [X0]
	111 Move X2, [X0+8]
	112 Move X0, X20
	113 Move W1, W22
	114 NotImplemented "Instruction BLR not yet implemented."
	115 Move S1, [X21+88]
	116 Move S2, [X21+92]
	117 Move S3, [X21+72]
	118 Move S4, [X21+76]
	119 Move S5, [X21+80]
	120 Move S0, [X21+84]
	121 Move V6, [X21+96]
	122 Move X22, X0
	123 Add X2, X31, 32
	124 Add X3, X31, 16
	125 Add X4, X31, 12
	126 Move X1, X0
	127 Call RaycastQuery.NarrowPhaseRay, X0, X1, X2, X3, V0, X4, X5, X6
	128 Move TEMP, X0
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfNotEqual {82}
	132 Move W10, [X22+448]
	133 Move X11, [X22+440]
	134 Move X9, [X22+112]
	135 Move W8, [X22+124]
	136 Add X12, X22, 452
	137 Move [X31+104], W10
	138 Move [X31+96], X11
	139 Move V7, [X12]
	140 Move S3, [X31+32]
	141 Move S2, [X31+36]
	142 Move V1, [X31+40]
	143 Move S0, [X31+12]
	144 Move S6, [X31+16]
	145 Move [X31+5], V7
	146 Move W12, [X19+28]
	147 Move S5, [X31+20]
	148 Move S4, [X31+24]
	149 Move X10, [X19+16]
	150 Move X11, [X28]
	151 Add W12, W12, 1
	152 Move [X19+28], W12
	153 Compare X10, 0
	154 JumpIfEqual {225}
	155 NotImplemented "Instruction LDRSW not yet implemented."
	156 Move W13, [X10+24]
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Add W11, W12, 1
	159 NotImplemented "Instruction MADD not yet implemented."
	160 Move [X19+24], W11
	161 Move [X10+32], S3
	162 Move [X10+40], S2
	163 Move [X10+40], S1
	164 Move [X10+48], S6
	165 Move [X10+48], S5
	166 Move [X10+56], S4
	167 Move [X10+56], S0
	168 Move [X10+60], W31
	169 Move [X10+64], X9
	170 Move W9, [X31+104]
	171 Move X11, [X31+96]
	172 Move [X10+80], W9
	173 Move [X10+72], X11
	174 Move V0, [X31+5]
	175 Move [X10+100], W8
	176 Move [X10+104], X31
	177 Move [X10+84], V0
	178 Move X10, [X11+32]
	179 Move X11, [X31+96]
	180 Move W12, [X31+104]
	181 Move V7, [X31+5]
	182 Move X10, [X10+192]
	183 Move X2, [X10+112]
	184 Move [X31+112], S3
	185 Move [X31+120], S2
	186 Move [X31+120], S1
	187 Move [X31+128], S6
	188 Move [X31+128], S5
	189 Move [X31+136], S4
	190 Move [X31+136], S0
	191 Move [X31+140], W31
	192 Move [X25+32], X9
	193 Move [X29+8], W12
	194 Move [X29], X11
	195 Move [X24], V7
	196 Move [X31+180], W8
	197 Move [X25+72], X31
	198 Add X1, X31, 112
	199 Move X0, X19
	200 Call List`1<HitboxHit>.AddWithResize, X0, X1
	201 Move X8, 0x220C000
	202 Move X8, [X8+2096]
	203 Add X0, X31, 48
	204 Move X1, [X8]
	205 Call Enumerator<Int32>.Dispose, X0
	206 Move W8, [X19+24]
	207 Move W9, [X31+8]
	208 Move X20, [X31+272]
	209 Move X19, [X31+280]
	210 Move X22, [X31+256]
	211 Move X21, [X31+264]
	212 Move X24, [X31+240]
	213 Move X23, [X31+248]
	214 Move X26, [X31+224]
	215 Move X25, [X31+232]
	216 Move X28, [X31+208]
	217 Move X27, [X31+216]
	218 Move X29, [X31+192]
	219 Move X30, [X31+200]
	220 NotImplemented "Instruction CMP not yet implemented."
	221 NotImplemented "Instruction CSET not yet implemented."
	222 Add X31, X31, 288
	223 Return X0
	224 Call 0x1C17F20
	225 Call 0x1C17F20
	226 Call 0x1C17F20
	227 Move X20, X0
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Move X0, X20
	230 Call 0x3EB2AD0
	231 Move X21, [X0]
	232 Call 0x3EB2AE0
	233 Move X8, 0x220C000
	234 Move X8, [X8+2096]
	235 Add X0, X31, 48
	236 Move X1, [X8]
	237 Call Enumerator<Int32>.Dispose, X0
	238 Compare X21, 0
	239 JumpIfEqual {206}
	240 Move X0, X21
	241 Call 0x1C17F18
	242 Move X21, X31
	243 Move X20, X0
	244 Move X8, 0x220C000
	245 Move X8, [X8+2096]
	246 Move X1, [X8]
	247 Add X0, X31, 48
	248 Call Enumerator<Int32>.Dispose, X0
	249 Compare X21, 0
	250 JumpIfNotEqual {253}
	251 Move X0, X20
	252 Call 0x1D2D690
	253 Move X0, X21
	254 Call 0x1C17F18
	255 Call 0x1991590

Method: System.Void PerformStaticQuery(Fusion.NetworkRunner runner, System.Collections.Generic.List`1<Fusion.LagCompensatedHit> hits, Fusion.HitOptions options)

Disassembly:
	0x01EEFECC MOV X19, X3
	0x01EEFED0 MOV X20, X2
	0x01EEFED4 MOV V8.16B, V3.16B
	0x01EEFED8 MOV V9.16B, V2.16B
	0x01EEFEDC MOV X21, X1
	0x01EEFEE0 CMP W8, 0x3
	0x01EEFEE4 MOV V11.16B, V0.16B
	0x01EEFEE8 B.EQ 0x1EEFFF8
	0x01EEFEEC CMP W8, 0x2
	0x01EEFEF0 B.EQ 0x1EF0120
	0x01EEFEF4 CMP W8, 0x1
	0x01EEFEF8 B.NE 0x1EF018C
	0x01EEFEFC ADD X8, X31, 0x60
	0x01EEFF00 MOV X0, X21
	0x01EEFF04 BL 0x1EEBAE0
	0x01EEFF08 LDP V0, V1, [X31 + 0x60]
	0x01EEFF0C LDP V2, V3, [X31 + 0x80]
	0x01EEFF10 ADD X8, X31, 0x20
	0x01EEFF14 ADD X0, X31, 0xA0
	0x01EEFF18 MOV X1, X31
	0x01EEFF1C STP V0, V1, [X31 + 0xA0]
	0x01EEFF20 STP V2, V3, [X31 + 0xC0]
	0x01EEFF24 BL 0x3C271CC
	0x01EEFF28 LDP V0, V1, [X31 + 0x20]
	0x01EEFF2C LDP V2, V3, [X31 + 0x40]
	0x01EEFF30 ADD X0, X31, 0xA0
	0x01EEFF34 MOV X1, X31
	0x01EEFF38 STP V0, V1, [X31 + 0xA0]
	0x01EEFF3C STP V2, V3, [X31 + 0xC0]
	0x01EEFF40 MOV V0.16B, V11.16B
	0x01EEFF44 MOV V1.16B, V10.16B
	0x01EEFF48 MOV V2.16B, V9.16B
	0x01EEFF4C BL 0x3C281F8
	0x01EEFF50 LDP S3, S4, [X21 + 0x48]
	0x01EEFF54 LDP S5, S6, [X21 + 0x50]
	0x01EEFF58 LDP S7, S16, [X21 + 0x58]
	0x01EEFF5C ADD X0, X31, 0x100
	0x01EEFF60 FSUB S3, S0, S3
	0x01EEFF64 FSUB S4, S1, S4
	0x01EEFF68 FSUB S5, S2, S5
	0x01EEFF6C MOV V0.16B, V6.16B
	0x01EEFF70 MOV V1.16B, V7.16B
	0x01EEFF74 MOV V2.16B, V16.16B
	0x01EEFF78 MOV V6.16B, V8.16B
	0x01EEFF7C MOV X1, X31
	0x01EEFF80 BL 0x1EE6DD8
	0x01EEFF84 TBZ X0, 0x0, 0x1EF018C
	0x01EEFF88 ADD X8, X31, 0x60
	0x01EEFF8C MOV X0, X21
	0x01EEFF90 BL 0x1EEBAE0
	0x01EEFF94 LDP V0, V1, [X31 + 0x60]
	0x01EEFF98 LDP V2, V3, [X31 + 0x80]
	0x01EEFF9C LDR V4, [X31 + 0x100]
	0x01EEFFA0 LDR V5, [X31 + 0x108]
	0x01EEFFA4 STP V0, V1, [X31 + 0xA0]
	0x01EEFFA8 STP V2, V3, [X31 + 0xC0]
	0x01EEFFAC LDR V0, [X21 + 0x48]
	0x01EEFFB0 LDR V1, [X21 + 0x50]
	0x01EEFFB4 ADD X0, X31, 0xA0
	0x01EEFFB8 MOV X1, X31
	0x01EEFFBC FADD V0.2S, V4.2S, V0.2S
	0x01EEFFC0 FADD S2, S5, S1
	0x01EEFFC4 MOV S1, V0.S[1]
	0x01EEFFC8 BL 0x3C281F8
	0x01EEFFCC ADD X8, X31, 0x20
	0x01EEFFD0 MOV X0, X21
	0x01EEFFD4 STP S0, S1, [X20]
	0x01EEFFD8 STR S2, [X20 + 0x8]
	0x01EEFFDC BL 0x1EEBAE0
	0x01EEFFE0 LDP V3, V4, [X31 + 0x20]
	0x01EEFFE4 LDP V5, V6, [X31 + 0x40]
	0x01EEFFE8 LDR V0, [X31 + 0x10C]
	0x01EEFFEC LDR V1, [X31 + 0x110]
	0x01EEFFF0 LDR V2, [X31 + 0x114]
	0x01EEFFF4 B 0x1EF0100
	0x01EEFFF8 ADD X8, X31, 0x60
	0x01EEFFFC MOV X0, X21
	0x01EF0000 BL 0x1EEBAE0
	0x01EF0004 LDP V0, V1, [X31 + 0x60]
	0x01EF0008 LDP V2, V3, [X31 + 0x80]
	0x01EF000C ADD X8, X31, 0x20
	0x01EF0010 ADD X0, X31, 0xA0
	0x01EF0014 MOV X1, X31
	0x01EF0018 STP V0, V1, [X31 + 0xA0]
	0x01EF001C STP V2, V3, [X31 + 0xC0]
	0x01EF0020 BL 0x3C271CC
	0x01EF0024 LDP V0, V1, [X31 + 0x20]
	0x01EF0028 LDP V2, V3, [X31 + 0x40]
	0x01EF002C ADD X0, X31, 0xA0
	0x01EF0030 MOV X1, X31
	0x01EF0034 STP V0, V1, [X31 + 0xA0]
	0x01EF0038 STP V2, V3, [X31 + 0xC0]
	0x01EF003C MOV V0.16B, V11.16B
	0x01EF0040 MOV V1.16B, V10.16B
	0x01EF0044 MOV V2.16B, V9.16B
	0x01EF0048 BL 0x3C281F8
	0x01EF004C MOV X0, X21
	0x01EF0050 MOV V9.16B, V0.16B
	0x01EF0054 MOV V10.16B, V1.16B
	0x01EF0058 MOV V11.16B, V2.16B
	0x01EF005C BL 0x1EED0BC
	0x01EF0060 MOV X0, X21
	0x01EF0064 MOV V12.16B, V0.16B
	0x01EF0068 MOV V13.16B, V1.16B
	0x01EF006C MOV V14.16B, V2.16B
	0x01EF0070 BL 0x1EED148
	0x01EF0074 LDR V6, [X21 + 0x60]
	0x01EF0078 MOV V3.16B, V0.16B
	0x01EF007C MOV V4.16B, V1.16B
	0x01EF0080 MOV V5.16B, V2.16B
	0x01EF0084 ADD X0, X31, 0xE0
	0x01EF0088 MOV V0.16B, V12.16B
	0x01EF008C MOV V1.16B, V13.16B
	0x01EF0090 MOV V2.16B, V14.16B
	0x01EF0094 MOV X1, X31
	0x01EF0098 STR S8, [X31 + 0x10]
	0x01EF009C STP S10, S11, [X31 + 0x4]
	0x01EF00A0 STR S9, [X31]
	0x01EF00A4 BL 0x1EE702C
	0x01EF00A8 TBZ X0, 0x0, 0x1EF018C
	0x01EF00AC ADD X8, X31, 0x60
	0x01EF00B0 MOV X0, X21
	0x01EF00B4 BL 0x1EEBAE0
	0x01EF00B8 LDP V3, V4, [X31 + 0x60]
	0x01EF00BC LDP V5, V6, [X31 + 0x80]
	0x01EF00C0 LDP S0, S1, [X31 + 0xE0]
	0x01EF00C4 LDR V2, [X31 + 0xE8]
	0x01EF00C8 ADD X0, X31, 0xA0
	0x01EF00CC MOV X1, X31
	0x01EF00D0 STP V3, V4, [X31 + 0xA0]
	0x01EF00D4 STP V5, V6, [X31 + 0xC0]
	0x01EF00D8 BL 0x3C281F8
	0x01EF00DC ADD X8, X31, 0x20
	0x01EF00E0 MOV X0, X21
	0x01EF00E4 STP S0, S1, [X20]
	0x01EF00E8 STR S2, [X20 + 0x8]
	0x01EF00EC BL 0x1EEBAE0
	0x01EF00F0 LDP V3, V4, [X31 + 0x20]
	0x01EF00F4 LDP V5, V6, [X31 + 0x40]
	0x01EF00F8 LDP S0, S1, [X31 + 0xEC]
	0x01EF00FC LDR V2, [X31 + 0xF4]
	0x01EF0100 ADD X0, X31, 0xA0
	0x01EF0104 MOV X1, X31
	0x01EF0108 STP V3, V4, [X31 + 0xA0]
	0x01EF010C STP V5, V6, [X31 + 0xC0]
	0x01EF0110 BL 0x3C282D0
	0x01EF0114 STP S0, S1, [X19]
	0x01EF0118 STR S2, [X19 + 0x8]
	0x01EF011C B 0x1EF0184
	0x01EF0120 ADD X8, X31, 0x60
	0x01EF0124 MOV X0, X21
	0x01EF0128 BL 0x1EEBAE0
	0x01EF012C LDP V0, V1, [X31 + 0x60]
	0x01EF0130 LDP V2, V3, [X31 + 0x80]
	0x01EF0134 ADD X0, X31, 0xA0
	0x01EF0138 MOV X1, X31
	0x01EF013C STP V0, V1, [X31 + 0xA0]
	0x01EF0140 STP V2, V3, [X31 + 0xC0]
	0x01EF0144 LDP S0, S1, [X21 + 0x48]
	0x01EF0148 LDR V2, [X21 + 0x50]
	0x01EF014C BL 0x3C281F8
	0x01EF0150 LDR V7, [X21 + 0x60]
	0x01EF0154 MOV V4.16B, V0.16B
	0x01EF0158 MOV V5.16B, V1.16B
	0x01EF015C MOV V6.16B, V2.16B
	0x01EF0160 MOV V0.16B, V11.16B
	0x01EF0164 MOV V1.16B, V10.16B
	0x01EF0168 MOV V2.16B, V9.16B
	0x01EF016C MOV V3.16B, V8.16B
	0x01EF0170 MOV X0, X20
	0x01EF0174 MOV X1, X19
	0x01EF0178 MOV X2, X31
	0x01EF017C BL 0x1EE87A8
	0x01EF0180 TBZ X0, 0x0, 0x1EF018C
	0x01EF0184 MOVZ W0, 0x1
	0x01EF0188 B 0x1EF01A0
	0x01EF018C MOV W0, W31
	0x01EF0190 STR W31, [X20 + 0x8]
	0x01EF0194 STR X31, [X20]
	0x01EF0198 STR W31, [X19 + 0x8]
	0x01EF019C STR X31, [X19]
	0x01EF01A0 LDP X20, X19, [X31 + 0x170]
	0x01EF01A4 LDP X30, X21, [X31 + 0x160]
	0x01EF01A8 LDR X29, [X31 + 0x158]
	0x01EF01AC LDP D9, D8, [X31 + 0x148]
	0x01EF01B0 LDP D11, D10, [X31 + 0x138]
	0x01EF01B4 LDP D13, D12, [X31 + 0x128]
	0x01EF01B8 LDR V14, [X31 + 0x120]
	0x01EF01BC ADD X31, X31, 0x180
	0x01EF01C0 RET
	0x01EF01C4 SUB X31, X31, 0x1A0
	0x01EF01C8 STP D11, D10, [X31 + 0x120]
	0x01EF01CC STP D9, D8, [X31 + 0x130]
	0x01EF01D0 STP X29, X30, [X31 + 0x140]
	0x01EF01D4 STP X28, X27, [X31 + 0x150]
	0x01EF01D8 STP X26, X25, [X31 + 0x160]
	0x01EF01DC STP X24, X23, [X31 + 0x170]
	0x01EF01E0 STP X22, X21, [X31 + 0x180]
	0x01EF01E4 STP X20, X19, [X31 + 0x190]
	0x01EF01E8 ADRP X23, 0x24E9000
	0x01EF01EC LDRB W8, [X23 + 0x5CA]
	0x01EF01F0 MOV W22, W3
	0x01EF01F4 MOV X19, X2
	0x01EF01F8 MOV X21, X1
	0x01EF01FC MOV X20, X0
	0x01EF0200 TBNZ X8, 0x0, 0x1EF0218
	0x01EF0204 ADRP X0, 0x220D000
	0x01EF0208 LDR X0, [X0 + 0xD80]
	0x01EF020C BL 0x1C16CF4
	0x01EF0210 MOVZ W8, 0x1
	0x01EF0214 STRB W8, [X23 + 0x5CA]
	0x01EF0218 STR W31, [X31 + 0x78]
	0x01EF021C STR W31, [X31 + 0x38]
	0x01EF0220 TBNZ X22, 0x0, 0x1EF03E0
	0x01EF0224 TBZ X22, 0x1, 0x1EF0598
	0x01EF0228 CBZ X21, 0x1EF05C0
	0x01EF022C MOV X0, X21
	0x01EF0230 MOV X1, X31

ISIL:
	001 Move [X31-144], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X29
	009 Move [X31+72], X30
	010 Move [X31+80], X26
	011 Move [X31+88], X25
	012 Move [X31+96], X24
	013 Move [X31+104], X23
	014 Move [X31+112], X22
	015 Move [X31+120], X21
	016 Move [X31+128], X20
	017 Move [X31+136], X19
	018 Subtract X31, X31, 416
	019 Move X23, 0x24EB000
	020 Move W8, [X23+1477]
	021 Move W22, W3
	022 Move X19, X2
	023 Move X21, X1
	024 Move X20, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0x220F000
	030 Move X0, [X0+3456]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+1477], W8
	034 Move [X31+424], W31
	035 Move [X31+200], W31
	036 Move TEMP, X22
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {133}
	040 Move TEMP, X22
	041 And TEMP, TEMP, 2
	042 Compare TEMP, 2
	043 JumpIfNotEqual {229}
	044 Compare X21, 0
	045 JumpIfEqual {248}
	046 Move X0, X21
	047 Move X1, X31
	048 Call NetworkRunner.GetPhysicsScene2D, X0
	049 Move [X31+200], W0
	050 Move W0, [X20+24]
	051 Move S8, [X20+84]
	052 Move S9, [X20+88]
	053 Move S10, [X20+72]
	054 Move S11, [X20+76]
	055 Move V12, [X20+96]
	056 Move X21, [X20+192]
	057 Move X1, X31
	058 Call LayerMask.op_Implicit, X0
	059 Move W2, W0
	060 Add X0, X31, 200
	061 Move V0, V8
	062 Move V1, V9
	063 Move V2, V10
	064 Move V3, V11
	065 Move V4, V12
	066 Move X1, X21
	067 Move X3, X31
	068 Call PhysicsScene2D.Raycast, X0, X1, X2, V0, X3, X4
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X26, 0x220F000
	071 Move X26, [X26+3456]
	072 Move X22, X31
	073 Move W23, W0
	074 Move W24, 32
	075 Move W25, 104
	076 Move X8, [X20+192]
	077 Compare X8, 0
	078 JumpIfEqual {248}
	079 Move W9, [X8+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Add X8, X8, X24
	082 Move W9, [X8+32]
	083 Move V1, [X8]
	084 Move V0, [X8+16]
	085 Add X8, X31, 312
	086 Add X0, X31, 0
	087 Move X1, X31
	088 Move [X31+32], W9
	089 Move [X31], V1
	090 Move [X31+8], V0
	091 Call LagCompensatedHit.op_Explicit, X0
	092 Add X0, X31, 96
	093 Add X1, X31, 312
	094 Move W2, 104
	095 Call 0x3EB2AC0
	096 Compare X19, 0
	097 JumpIfEqual {248}
	098 Move X21, [X26]
	099 Add X0, X31, 208
	100 Add X1, X31, 96
	101 Move W2, 104
	102 Call 0x3EB2AC0
	103 Move W9, [X19+28]
	104 Move X8, [X19+16]
	105 Add W9, W9, 1
	106 Move [X19+28], W9
	107 Compare X8, 0
	108 JumpIfEqual {248}
	109 NotImplemented "Instruction LDRSW not yet implemented."
	110 Move W10, [X8+24]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 NotImplemented "Instruction MADD not yet implemented."
	113 Add W10, W9, 1
	114 Add X0, X8, 32
	115 Add X1, X31, 208
	116 Move W2, 104
	117 Move [X19+24], W10
	118 Call 0x3EB2AC0
	119 Move X8, [X21+32]
	120 Add X0, X31, 312
	121 Add X1, X31, 208
	122 Move W2, 104
	123 Move X8, [X8+192]
	124 Move X21, [X8+112]
	125 Call 0x3EB2AC0
	126 Add X1, X31, 312
	127 Move X0, X19
	128 Move X2, X21
	129 Call List`1<LagCompensatedHit>.AddWithResize, X0, X1
	130 Add X22, X22, 1
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Add X24, X24, 36
	133 Compare X21, 0
	134 JumpIfEqual {248}
	135 Move X0, X21
	136 Move X1, X31
	137 Call NetworkRunner.GetPhysicsScene, X0
	138 Move [X31+424], W0
	139 Move W0, [X20+24]
	140 Move S8, [X20+88]
	141 Move S9, [X20+92]
	142 Move S10, [X20+72]
	143 Move S11, [X20+76]
	144 Move S13, [X20+80]
	145 Move S12, [X20+84]
	146 Move X21, [X20+184]
	147 Move V14, [X20+96]
	148 Move X1, X31
	149 Call LayerMask.op_Implicit, X0
	150 Move W3, [X20+16]
	151 Move W2, W0
	152 Add X0, X31, 424
	153 Move V0, V12
	154 Move V1, V8
	155 Move V2, V9
	156 Move V3, V10
	157 Move V4, V11
	158 Move V5, V13
	159 Move X1, X21
	160 Move V6, V14
	161 Move X4, X31
	162 Call PhysicsScene.Raycast, X0, X1, X2, X3, V0, X4, X5
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move X26, 0x220E000
	165 Move X26, [X26+3456]
	166 Move X22, X31
	167 Move W23, W0
	168 Move W24, 32
	169 Move W25, 104
	170 Move X8, [X20+184]
	171 Compare X8, 0
	172 JumpIfEqual {248}
	173 Move W9, [X8+24]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Add X8, X8, X24
	176 Move W9, [X8+40]
	177 Move X10, [X8+32]
	178 Move V1, [X8]
	179 Move V0, [X8+16]
	180 Add X8, X31, 312
	181 Add X0, X31, 48
	182 Move X1, X31
	183 Move [X31+88], W9
	184 Move [X31+80], X10
	185 Move [X31+48], V1
	186 Move [X31+56], V0
	187 Call LagCompensatedHit.op_Explicit, X0
	188 Add X0, X31, 96
	189 Add X1, X31, 312
	190 Move W2, 104
	191 Call 0x3EB2AC0
	192 Compare X19, 0
	193 JumpIfEqual {248}
	194 Move X21, [X26]
	195 Add X0, X31, 208
	196 Add X1, X31, 96
	197 Move W2, 104
	198 Call 0x3EB2AC0
	199 Move W9, [X19+28]
	200 Move X8, [X19+16]
	201 Add W9, W9, 1
	202 Move [X19+28], W9
	203 Compare X8, 0
	204 JumpIfEqual {248}
	205 NotImplemented "Instruction LDRSW not yet implemented."
	206 Move W10, [X8+24]
	207 NotImplemented "Instruction CMP not yet implemented."
	208 NotImplemented "Instruction MADD not yet implemented."
	209 Add W10, W9, 1
	210 Add X0, X8, 32
	211 Add X1, X31, 208
	212 Move W2, 104
	213 Move [X19+24], W10
	214 Call 0x3EB2AC0
	215 Move X8, [X21+32]
	216 Add X0, X31, 312
	217 Add X1, X31, 208
	218 Move W2, 104
	219 Move X8, [X8+192]
	220 Move X21, [X8+112]
	221 Call 0x3EB2AC0
	222 Add X1, X31, 312
	223 Move X0, X19
	224 Move X2, X21
	225 Call List`1<LagCompensatedHit>.AddWithResize, X0, X1
	226 Add X22, X22, 1
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Add X24, X24, 44
	229 Add X31, X31, 416
	230 Move X20, [X31+128]
	231 Move X19, [X31+136]
	232 Move X22, [X31+112]
	233 Move X21, [X31+120]
	234 Move X24, [X31+96]
	235 Move X23, [X31+104]
	236 Move X26, [X31+80]
	237 Move X25, [X31+88]
	238 Move X29, [X31+64]
	239 Move X30, [X31+72]
	240 Move D9, [X31+48]
	241 Move D8, [X31+56]
	242 Move D11, [X31+32]
	243 Move D10, [X31+40]
	244 Move D13, [X31+16]
	245 Move D12, [X31+24]
	246 Move V14, [X31+144]
	247 Return 
	248 Call 0x1C17F20
	249 Call 0x1C17F28

