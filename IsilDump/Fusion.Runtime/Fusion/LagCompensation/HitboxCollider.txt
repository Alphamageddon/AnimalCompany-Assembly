Type: Fusion.LagCompensation.HitboxCollider

Method: UnityEngine.Matrix4x4 get_LocalToWorld()

Disassembly:
	0x01EECAE0 LDRSW X9, [X20 + 0x20]
	0x01EECAE4 LDR W10, [X8 + 0x18]
	0x01EECAE8 CMP W9, W10
	0x01EECAEC B.CS 0x1EECBAC
	0x01EECAF0 MOVZ W10, 0x1D8
	0x01EECAF4 MADD X9, X9, X10, X8
	0x01EECAF8 LDR W9, [X9 + 0xA4]
	0x01EECAFC STR W9, [X20 + 0x20]
	0x01EECB00 LDR W9, [X19]
	0x01EECB04 B 0x1EECB50
	0x01EECB08 LDR X8, [X20 + 0x10]
	0x01EECB0C CBZ X8, 0x1EECBB0
	0x01EECB10 LDR W9, [X20 + 0x18]
	0x01EECB14 LDR W1, [X8 + 0x18]
	0x01EECB18 CMP W9, W1
	0x01EECB1C B.GE 0x1EECB30
	0x01EECB20 ADD W10, W9, 0x1
	0x01EECB24 STR W10, [X20 + 0x18]
	0x01EECB28 STR W9, [X19]
	0x01EECB2C B 0x1EECB50
	0x01EECB30 MOV X0, X20
	0x01EECB34 BL 0x1EEC9B4
	0x01EECB38 LDR W9, [X20 + 0x18]
	0x01EECB3C LDR X8, [X20 + 0x10]
	0x01EECB40 ADD W10, W9, 0x1
	0x01EECB44 STR W10, [X20 + 0x18]
	0x01EECB48 STR W9, [X19]
	0x01EECB4C CBZ X8, 0x1EECBB0
	0x01EECB50 LDR W10, [X8 + 0x18]
	0x01EECB54 CMP W9, W10
	0x01EECB58 B.CS 0x1EECBAC
	0x01EECB5C MOVZ W10, 0x1D8
	0x01EECB60 SMADDL X8, X9, X10, X8
	0x01EECB64 ADD X0, X8, 0x20
	0x01EECB68 MOVZ W2, 0x1D8
	0x01EECB6C MOV W1, W31
	0x01EECB70 BL 0x3EB1B10
	0x01EECB74 LDR X8, [X20 + 0x10]
	0x01EECB78 CBZ X8, 0x1EECBB0
	0x01EECB7C LDRSW X9, [X19]
	0x01EECB80 LDR W10, [X8 + 0x18]
	0x01EECB84 CMP W9, W10
	0x01EECB88 B.CS 0x1EECBAC
	0x01EECB8C LDP X20, X19, [X31 + 0x10]
	0x01EECB90 MOVZ W10, 0x1D8
	0x01EECB94 MADD X8, X9, X10, X8
	0x01EECB98 MOVZ W9, 0x1
	0x01EECB9C ADD X0, X8, 0x20
	0x01EECBA0 STRB W9, [X8 + 0xA0]
	0x01EECBA4 LDR X30, [X31], #0x20
	0x01EECBA8 RET
	0x01EECBAC BL 0x1C16F28
	0x01EECBB0 BL 0x1C16F20
	0x01EECBB4 STR X30, [X31 - 0x20]!
	0x01EECBB8 STP X20, X19, [X31 + 0x10]
	0x01EECBBC LDR X8, [X0 + 0x10]
	0x01EECBC0 CBZ X8, 0x1EECC68
	0x01EECBC4 LDP W9, W10, [X0 + 0x18]
	0x01EECBC8 MOV X19, X1
	0x01EECBCC LDR W1, [X8 + 0x18]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], D14
	003 Move [X31+24], D13
	004 Move [X31+32], D12
	005 Move [X31+40], D11
	006 Move [X31+48], D10
	007 Move [X31+56], D9
	008 Move [X31+64], D8
	009 Move [X31+72], X30
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, X8
	015 Move W8, [X0+68]
	016 Add X20, X0, 4
	017 Compare W8, 0
	018 JumpIfNotEqual {55}
	019 Move X22, 0x24ED000
	020 Move V8, [X0+440]
	021 Move V9, [X0+444]
	022 Move V10, [X0+448]
	023 Move V11, [X0+452]
	024 Move V12, [X0+456]
	025 Move V13, [X0+460]
	026 Move W8, [X22+2139]
	027 Move V14, [X0+464]
	028 Move X21, X0
	029 Compare W8, 0
	030 JumpIfNotEqual {36}
	031 Move X0, 0x2208000
	032 Move X0, [X0+1440]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+2139], W8
	036 Move X8, 0x2208000
	037 Move X8, [X8+1440]
	038 Move X0, X20
	039 Move V1, V9
	040 Move V2, V10
	041 Move X8, [X8]
	042 Move V3, V11
	043 Move V4, V12
	044 Move V5, V13
	045 Move X8, [X8+184]
	046 Move V6, V14
	047 Move V0, [X8+20]
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move [X31+8], S0
	050 Move V0, V8
	051 Move [X31], X9
	052 Call HitboxCollider.CustomTRS, X0, X1, X2, X3
	053 Move W8, 1
	054 Move [X21+68], W8
	055 Move V1, [X20+32]
	056 Move V0, [X20+48]
	057 Move V3, [X20]
	058 Move V2, [X20+16]
	059 Move X22, [X31+80]
	060 Move X21, [X31+88]
	061 Move X30, [X31+72]
	062 Move [X19+32], V1
	063 Move [X19+40], V0
	064 Move [X19], V3
	065 Move [X19+8], V2
	066 Move X20, [X31+96]
	067 Move X19, [X31+104]
	068 Move D9, [X31+56]
	069 Move D8, [X31+64]
	070 Move D11, [X31+40]
	071 Move D10, [X31+48]
	072 Move D13, [X31+24]
	073 Move D12, [X31+32]
	074 Move V14, [X31+16]
	075 Add X31, X31, 112
	076 Return X0

Method: System.Boolean get_IsBoxNarrowDataInitialized()

Disassembly:
	0x01EEE0A8 STP X29, X30, [X31 + 0x180]
	0x01EEE0AC STP X28, X27, [X31 + 0x190]

ISIL:
	001 Move W0, [X0+436]
	002 Return X0

Method: System.Void set_IsBoxNarrowDataInitialized(System.Boolean value)

Disassembly:
	0x01EEE0B0 STP X26, X25, [X31 + 0x1A0]
	0x01EEE0B4 STP X24, X23, [X31 + 0x1B0]
	0x01EEE0B8 STP X22, X21, [X31 + 0x1C0]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+436], W8
	003 Return 

Method: UnityEngine.Vector3 get_CapsuleLocalTopCenter()

Disassembly:
	0x01EEE0BC STP X20, X19, [X31 + 0x1D0]
	0x01EEE0C0 ADRP X23, 0x24EB000
	0x01EEE0C4 LDRB W8, [X23 + 0x5C1]
	0x01EEE0C8 MOV W22, W3
	0x01EEE0CC MOV X19, X2
	0x01EEE0D0 MOV X21, X1
	0x01EEE0D4 MOV X20, X0
	0x01EEE0D8 TBNZ X8, 0x0, 0x1EEE0F0
	0x01EEE0DC ADRP X0, 0x220F000
	0x01EEE0E0 LDR X0, [X0 + 0xD80]
	0x01EEE0E4 BL 0x1C16CF4
	0x01EEE0E8 MOVZ W8, 0x1
	0x01EEE0EC STRB W8, [X23 + 0x5C1]
	0x01EEE0F0 STR W31, [X31 + 0x98]
	0x01EEE0F4 STP X31, X31, [X31 + 0x50]
	0x01EEE0F8 STR W31, [X31 + 0x48]
	0x01EEE0FC TBNZ X22, 0x0, 0x1EEE2F4
	0x01EEE100 TBZ X22, 0x1, 0x1EEE4D0
	0x01EEE104 LDP S0, S1, [X20 + 0x60]
	0x01EEE108 LDP S2, S3, [X20 + 0x68]
	0x01EEE10C ADD X0, X31, 0x50
	0x01EEE110 ADD X1, X31, 0x5C
	0x01EEE114 MOV X2, X31
	0x01EEE118 BL 0x3C2A6A8
	0x01EEE11C ADRP X8, 0xFFFFFFFFFEBFC000
	0x01EEE120 LDR V0, [X31 + 0x5C]
	0x01EEE124 LDR V1, [X8 + 0x448]
	0x01EEE128 FMUL S0, S0, S1
	0x01EEE12C STR S0, [X31 + 0x5C]
	0x01EEE130 CBZ X21, 0x1EEE500
	0x01EEE134 MOV X0, X21
	0x01EEE138 MOV X1, X31
	0x01EEE13C BL 0x1EA6E74
	0x01EEE140 STR W0, [X31 + 0x48]
	0x01EEE144 LDR W0, [X20 + 0x18]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x24EB000
	007 Move V8, [X0+72]
	008 Move W8, [X20+1926]
	009 Move V9, [X0+80]
	010 Move X19, X0
	011 Compare W8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, 0x2206000
	014 Move X0, [X0+1440]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+1926], W8
	018 Move X8, 0x2206000
	019 Move X8, [X8+1440]
	020 Move S1, [X19+96]
	021 Move S0, [X19+100]
	022 Move S2, 0.5
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X8, [X8]
	026 Multiply S0, S0, S2
	027 NotImplemented "Instruction FCMP not yet implemented."
	028 NotImplemented "Instruction FCSEL not yet implemented."
	029 Move X8, [X8+184]
	030 Subtract S0, S0, S1
	031 Move X30, [X31+16]
	032 Move V2, [X8+24]
	033 Move V3, [X8+32]
	034 NotImplemented "Instruction INVALID not yet implemented."
	035 Multiply S2, S3, S0
	036 Add V0, V8, V1
	037 Add S2, S9, S2
	038 Move S1, V0.S[1]
	039 Move D9, [X31+48]
	040 Move D8, [X31+56]
	041 Return X0

Method: UnityEngine.Vector3 get_CapsuleLocalBottomCenter()

Disassembly:
	0x01EEE148 LDR V8, [X31 + 0x5C]
	0x01EEE14C LDP S9, S10, [X20 + 0x48]
	0x01EEE150 LDP S11, S12, [X20 + 0x54]
	0x01EEE154 LDR X21, [X20 + 0x78]
	0x01EEE158 MOV X1, X31
	0x01EEE15C BL 0x3C35CB8
	0x01EEE160 MOV W2, W0
	0x01EEE164 ADD X0, X31, 0x48
	0x01EEE168 MOV V0.16B, V9.16B
	0x01EEE16C MOV V1.16B, V10.16B
	0x01EEE170 MOV V2.16B, V11.16B
	0x01EEE174 MOV V3.16B, V12.16B
	0x01EEE178 MOV V4.16B, V8.16B
	0x01EEE17C MOV X1, X21
	0x01EEE180 MOV X3, X31
	0x01EEE184 BL 0x3C88460
	0x01EEE188 CMP W0, 0x1
	0x01EEE18C B.LT 0x1EEE4D0
	0x01EEE190 ADRP X9, 0xFFFFFFFFFEBFF000
	0x01EEE194 ADRP X27, 0x220F000
	0x01EEE198 LDR V8, [X9 + 0xEC8]
	0x01EEE19C LDR X27, [X27 + 0xD80]
	0x01EEE1A0 ADD X8, X31, 0xD8
	0x01EEE1A4 MOV W21, W0
	0x01EEE1A8 MOV W23, W31
	0x01EEE1AC ADD X24, X8, 0x10
	0x01EEE1B0 ADD X25, X8, 0x1C
	0x01EEE1B4 ADD X26, X8, 0x44
	0x01EEE1B8 MOVZ W28, 0x68
	0x01EEE1BC LDR X8, [X20 + 0x78]
	0x01EEE1C0 CBZ X8, 0x1EEE500
	0x01EEE1C4 LDR W9, [X8 + 0x18]
	0x01EEE1C8 CMP W23, W9
	0x01EEE1CC B.CS 0x1EEE504
	0x01EEE1D0 ADD X8, X8, W23, 0x3, SXTW

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x24EB000
	007 Move V8, [X0+72]
	008 Move W8, [X20+2749]
	009 Move V9, [X0+80]
	010 Move X19, X0
	011 Compare W8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, 0x2206000
	014 Move X0, [X0+1440]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+2749], W8
	018 Move X8, 0x2206000
	019 Move X8, [X8+1440]
	020 Move S1, [X19+96]
	021 Move S0, [X19+100]
	022 Move S2, 0.5
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X8, [X8]
	026 Multiply S0, S0, S2
	027 NotImplemented "Instruction FCMP not yet implemented."
	028 NotImplemented "Instruction FCSEL not yet implemented."
	029 Move X8, [X8+184]
	030 Subtract S0, S0, S1
	031 Move X30, [X31+16]
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 Move V3, [X8+44]
	034 NotImplemented "Instruction INVALID not yet implemented."
	035 Multiply S2, S3, S0
	036 Add V0, V8, V1
	037 Add S2, S9, S2
	038 Move S1, V0.S[1]
	039 Move D9, [X31+48]
	040 Move D8, [X31+56]
	041 Return X0

Method: System.Void Lerp(ref Fusion.LagCompensation.HitboxCollider from, ref Fusion.LagCompensation.HitboxCollider to, System.Single alpha, ref Fusion.LagCompensation.HitboxCollider result)

Disassembly:
	0x01EEC974 BL 0x1C16F20
	0x01EEC978 LDR W8, [X0 + 0x18]
	0x01EEC97C SUB W0, W8, 0x1
	0x01EEC980 RET
	0x01EEC984 STP X30, X19, [X31 - 0x10]!
	0x01EEC988 LDR W2, [X0 + 0x1C]
	0x01EEC98C MOV X19, X0
	0x01EEC990 CMP W2, 0x1
	0x01EEC994 B.LT 0x1EEC9A8
	0x01EEC998 LDR X0, [X19 + 0x10]
	0x01EEC99C LDR W1, [X19 + 0x18]
	0x01EEC9A0 MOV X3, X31
	0x01EEC9A4 BL 0x339FA34
	0x01EEC9A8 STR W31, [X19 + 0x1C]
	0x01EEC9AC LDP X30, X19, [X31], #0x10
	0x01EEC9B0 RET
	0x01EEC9B4 STP D9, D8, [X31 - 0x40]!
	0x01EEC9B8 STP X30, X23, [X31 + 0x10]
	0x01EEC9BC STP X22, X21, [X31 + 0x20]
	0x01EEC9C0 STP X20, X19, [X31 + 0x30]
	0x01EEC9C4 ADRP X21, 0x24ED000
	0x01EEC9C8 LDRB W8, [X21 + 0x5B9]
	0x01EEC9CC MOV W20, W1
	0x01EEC9D0 MOV X19, X0
	0x01EEC9D4 TBNZ X8, 0x0, 0x1EEC9F8
	0x01EEC9D8 ADRP X0, 0x2214000
	0x01EEC9DC LDR X0, [X0 + 0x5A8]
	0x01EEC9E0 BL 0x1C16CF4
	0x01EEC9E4 ADRP X0, 0x2207000
	0x01EEC9E8 LDR X0, [X0 + 0x5A8]
	0x01EEC9EC BL 0x1C16CF4
	0x01EEC9F0 MOVZ W8, 0x1
	0x01EEC9F4 STRB W8, [X21 + 0x5B9]
	0x01EEC9F8 LDR X8, [X19 + 0x10]!
	0x01EEC9FC CBZ X8, 0x1EECAB8
	0x01EECA00 ADRP X22, 0x2207000
	0x01EECA04 LDR X22, [X22 + 0x5A8]
	0x01EECA08 LDR W21, [X8 + 0x18]
	0x01EECA0C ADRP X23, 0x24EC000
	0x01EECA10 LDRB W8, [X23 + 0xA23]
	0x01EECA14 SCVTF S0, W20
	0x01EECA18 SCVTF S1, W21
	0x01EECA1C FDIV S8, S0, S1
	0x01EECA20 FMOV S9, 1
	0x01EECA24 CBNZ W8, 0x1EECA3C
	0x01EECA28 ADRP X0, 0x2207000
	0x01EECA2C LDR X0, [X0 + 0x5A8]
	0x01EECA30 BL 0x1C16CF4
	0x01EECA34 MOVZ W8, 0x1
	0x01EECA38 STRB W8, [X23 + 0xA23]
	0x01EECA3C LDR X0, [X22]
	0x01EECA40 ADRP X20, 0x2214000
	0x01EECA44 FADD S8, S8, S9
	0x01EECA48 LDR W8, [X0 + 0xE0]
	0x01EECA4C LDR X20, [X20 + 0x5A8]
	0x01EECA50 CBZ W8, 0x1EECA5C
	0x01EECA54 FRINTM S8, S8
	0x01EECA58 B 0x1EECA74
	0x01EECA5C BL 0x1C16DFC
	0x01EECA60 LDR X0, [X22]
	0x01EECA64 FRINTM S8, S8
	0x01EECA68 LDR W8, [X0 + 0xE0]
	0x01EECA6C CBNZ W8, 0x1EECA74
	0x01EECA70 BL 0x1C16DFC
	0x01EECA74 MOVZ W8, 0x7F800000
	0x01EECA78 FMOV S0, W8
	0x01EECA7C FCVTZS W9, S8
	0x01EECA80 FCMP S8, S0
	0x01EECA84 MOVZ W8, 0x80000000
	0x01EECA88 CSEL W1, W8, W9, EQ
	0x01EECA8C MOVZ W0, 0x2
	0x01EECA90 MOV X2, X31
	0x01EECA94 BL 0x337EDF0
	0x01EECA98 LDR X2, [X20]
	0x01EECA9C MUL W1, W0, W21
	0x01EECAA0 MOV X0, X19
	0x01EECAA4 LDP X20, X19, [X31 + 0x30]
	0x01EECAA8 LDP X22, X21, [X31 + 0x20]
	0x01EECAAC LDP X30, X23, [X31 + 0x10]
	0x01EECAB0 LDP D9, D8, [X31], #0x40
	0x01EECAB4 B 0x2115E64
	0x01EECAB8 BL 0x1C16F20
	0x01EECABC STR X30, [X31 - 0x20]!
	0x01EECAC0 STP X20, X19, [X31 + 0x10]
	0x01EECAC4 LDR W8, [X0 + 0x20]
	0x01EECAC8 MOV X20, X0
	0x01EECACC MOV X19, X1
	0x01EECAD0 CBZ W8, 0x1EECB08
	0x01EECAD4 STR W8, [X19]
	0x01EECAD8 LDR X8, [X20 + 0x10]
	0x01EECADC CBZ X8, 0x1EECBB0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D8
	003 Move [X31+32], X30
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X19, X2
	008 Move X21, X0
	009 Move X20, X1
	010 Move W2, 472
	011 Move X0, X19
	012 Move X1, X21
	013 Move V8, V0
	014 Call 0x3EB2B30
	015 Move V0, [X21+72]
	016 Move V1, [X21+80]
	017 Move V2, [X20+72]
	018 Move V3, [X20+80]
	019 Move S4, 1
	020 NotImplemented "Instruction FCMP not yet implemented."
	021 Move S5, W31
	022 NotImplemented "Instruction FMIN not yet implemented."
	023 NotImplemented "Instruction FCSEL not yet implemented."
	024 Subtract V2, V2, V0
	025 Subtract S3, S3, S1
	026 NotImplemented "Instruction INVALID not yet implemented."
	027 Multiply S3, S4, S3
	028 Add V0, V0, V2
	029 Add S1, S1, S3
	030 Move [X19+72], D0
	031 Move [X19+80], S1
	032 Move V0, [X21+96]
	033 Move V1, [X20+96]
	034 Move X0, X31
	035 Subtract S1, S1, S0
	036 Multiply S1, S4, S1
	037 Add S0, S0, S1
	038 Move [X19+96], S0
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 Move V1, [X21+92]
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 Move V3, [X20+92]
	043 Subtract V2, V2, V0
	044 Subtract S3, S3, S1
	045 NotImplemented "Instruction INVALID not yet implemented."
	046 Multiply S3, S4, S3
	047 Add V0, V0, V2
	048 Add S1, S1, S3
	049 Move [X19+84], D0
	050 Move [X19+92], S1
	051 Move V0, [X21+100]
	052 Move V1, [X20+100]
	053 Subtract S1, S1, S0
	054 Multiply S1, S4, S1
	055 Add S0, S0, S1
	056 Move [X19+100], S0
	057 Move V0, [X21+440]
	058 Move V1, [X21+448]
	059 Move V2, [X20+440]
	060 Move V3, [X20+448]
	061 Subtract V2, V2, V0
	062 Subtract S3, S3, S1
	063 NotImplemented "Instruction INVALID not yet implemented."
	064 Multiply S3, S4, S3
	065 Add V0, V0, V2
	066 Add S1, S1, S3
	067 Move [X19+440], D0
	068 Move [X19+448], S1
	069 Move V0, [X21+452]
	070 Move V1, [X21+456]
	071 Move V2, [X21+460]
	072 Move V3, [X21+464]
	073 Move V4, [X20+452]
	074 Move V5, [X20+456]
	075 Move V6, [X20+460]
	076 Move V7, [X20+464]
	077 Move [X31], S8
	078 Call Quaternion.Lerp, X0, X1, V0
	079 Move [X19+452], S0
	080 Move S0, 0.5
	081 NotImplemented "Instruction FCMP not yet implemented."
	082 Move [X19+456], S1
	083 Move [X19+460], S2
	084 Move [X19+464], S3
	085 NotImplemented "Instruction CSEL not yet implemented."
	086 Move W8, [X8+120]
	087 Move [X19+436], W31
	088 Move X30, [X31+32]
	089 Move X21, [X31+40]
	090 Move V8, [X31+16]
	091 Move [X19+120], W8
	092 Move X20, [X31+48]
	093 Move X19, [X31+56]
	094 Add X31, X31, 64
	095 Return 

Method: System.Void InitNarrowData()

Disassembly:
	0x01EECDFC BL 0x1C16D08
	0x01EECE00 MOV X1, X21
	0x01EECE04 MOV X2, X19
	0x01EECE08 MOV X3, X31
	0x01EECE0C BL 0x3227BD4
	0x01EECE10 MOV X19, X0
	0x01EECE14 ADRP X0, 0x2211000
	0x01EECE18 LDR X0, [X0 + 0xF78]
	0x01EECE1C BL 0x1C16D08
	0x01EECE20 BL 0x1C16F10
	0x01EECE24 MOV X1, X19
	0x01EECE28 MOV X2, X31
	0x01EECE2C MOV X20, X0
	0x01EECE30 BL 0x3379B6C
	0x01EECE34 ADRP X0, 0x2211000
	0x01EECE38 LDR X0, [X0 + 0xF80]
	0x01EECE3C BL 0x1C16D08
	0x01EECE40 MOV X1, X0
	0x01EECE44 MOV X0, X20
	0x01EECE48 BL 0x1C16DEC
	0x01EECE4C BL 0x1C16F20
	0x01EECE50 BL 0x1C16F28
	0x01EECE54 STR X30, [X31 - 0x40]!
	0x01EECE58 STP X24, X23, [X31 + 0x10]
	0x01EECE5C STP X22, X21, [X31 + 0x20]
	0x01EECE60 STP X20, X19, [X31 + 0x30]
	0x01EECE64 ADRP X21, 0x24ED000
	0x01EECE68 LDRB W8, [X21 + 0x5BC]
	0x01EECE6C MOV X19, X1
	0x01EECE70 MOV X20, X0
	0x01EECE74 TBNZ X8, 0x0, 0x1EECE8C
	0x01EECE78 ADRP X0, 0x2211000
	0x01EECE7C LDR X0, [X0 + 0xF68]
	0x01EECE80 BL 0x1C16CF4
	0x01EECE84 MOVZ W8, 0x1
	0x01EECE88 STRB W8, [X21 + 0x5BC]
	0x01EECE8C CBZ X19, 0x1EECFC0
	0x01EECE90 ADRP X21, 0x24ED000
	0x01EECE94 LDRB W8, [X21 + 0x22B]
	0x01EECE98 CBNZ W8, 0x1EECEB0
	0x01EECE9C ADRP X0, 0x2211000
	0x01EECEA0 LDR X0, [X0 + 0xD58]
	0x01EECEA4 BL 0x1C16CF4
	0x01EECEA8 MOVZ W8, 0x1
	0x01EECEAC STRB W8, [X21 + 0x22B]
	0x01EECEB0 ADRP X8, 0x2211000
	0x01EECEB4 LDR X8, [X8 + 0xD58]
	0x01EECEB8 MOV X0, X19
	0x01EECEBC MOV W1, W31
	0x01EECEC0 LDR X2, [X8]
	0x01EECEC4 BL 0x22275E4
	0x01EECEC8 LDR X22, [X19 + 0xA8]
	0x01EECECC CBZ X22, 0x1EECFC0
	0x01EECED0 LDR W8, [X22 + 0x18]
	0x01EECED4 CMP W8, 0x1
	0x01EECED8 B.LT 0x1EECF38
	0x01EECEDC LDR W23, [X0]
	0x01EECEE0 MOV W24, W31
	0x01EECEE4 CMP W24, W8
	0x01EECEE8 B.CS 0x1EECFC4
	0x01EECEEC ADD X8, X22, W24, 0x3, SXTW

ISIL:
	001 Subtract X31, X31, 480
	002 Move [X31+384], D15
	003 Move [X31+392], D14
	004 Move [X31+400], D13
	005 Move [X31+408], D12
	006 Move [X31+416], D11
	007 Move [X31+424], D10
	008 Move [X31+432], D9
	009 Move [X31+440], D8
	010 Move [X31+448], X29
	011 Move [X31+456], X30
	012 Move [X31+464], X20
	013 Move [X31+472], X19
	014 NotImplemented "Instruction MOVI not yet implemented."
	015 Move [X31+352], V0
	016 Move [X31+360], V0
	017 Move [X31+320], V0
	018 Move [X31+328], V0
	019 Move W8, [X0]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move W8, [X0+436]
	022 Move X19, X0
	023 Compare W8, 0
	024 JumpIfNotEqual {62}
	025 Move V8, [X19+440]
	026 Move V9, [X19+444]
	027 Move V10, [X19+448]
	028 Add X8, X31, 320
	029 Move X0, X19
	030 Call HitboxCollider.get_LocalToWorld, X0
	031 Add X0, X31, 320
	032 Move X1, X31
	033 Call Matrix4x4.get_rotation, X0
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 Move V15, [X19+92]
	036 Add X0, X31, 16
	037 Move W2, 300
	038 Move W1, W31
	039 Move V11, V0
	040 Move V12, V1
	041 Move V13, V2
	042 Move V14, V3
	043 Call 0x3EB2B10
	044 Add X0, X31, 16
	045 Move V0, V8
	046 Move V1, V9
	047 Move V2, V10
	048 Move V3, V11
	049 Move V4, V12
	050 Move V5, V13
	051 Move V6, V14
	052 Move X1, X31
	053 Move [X31+8], S15
	054 Move [X31], X20
	055 Call BoxNarrowData..ctor, X0, X1, X2, X3
	056 Add X0, X19, 136
	057 Add X1, X31, 16
	058 Move W2, 300
	059 Call 0x3EB2AC0
	060 Move W8, 1
	061 Move [X19+436], W8
	062 Move X20, [X31+464]
	063 Move X19, [X31+472]
	064 Move X29, [X31+448]
	065 Move X30, [X31+456]
	066 Move D9, [X31+432]
	067 Move D8, [X31+440]
	068 Move D11, [X31+416]
	069 Move D10, [X31+424]
	070 Move D13, [X31+400]
	071 Move D12, [X31+408]
	072 Move D15, [X31+384]
	073 Move D14, [X31+392]
	074 Add X31, X31, 480
	075 Return 

Method: System.Void ResetCachedMatrix()

Disassembly:
	0x01EEE1D4 LDR X22, [X8 + 0x20]
	0x01EEE1D8 MOVI V0.2D, 0x0

ISIL:
	001 Move [X0+68], W31
	002 Return 

Method: System.Void CustomTRS(ref UnityEngine.Matrix4x4 res, UnityEngine.Vector3 t, UnityEngine.Quaternion r, UnityEngine.Vector3 s)

Disassembly:
	0x01EEDFC8 LDR V2, [X31 + 0xB8]
	0x01EEDFCC MOV X0, X21
	0x01EEDFD0 MOV X1, X31
	0x01EEDFD4 BL 0x1EE9410
	0x01EEDFD8 LDR V3, [X21]
	0x01EEDFDC LDR V4, [X21 + 0x8]
	0x01EEDFE0 MOV V0.S[1], V1.S[0]
	0x01EEDFE4 FADD V0.2S, V0.2S, V3.2S
	0x01EEDFE8 FADD S1, S2, S4
	0x01EEDFEC STR D0, [X20]
	0x01EEDFF0 STR S1, [X20 + 0x8]
	0x01EEDFF4 LDP S0, S1, [X31 + 0xBC]
	0x01EEDFF8 LDR V2, [X31 + 0xC4]
	0x01EEDFFC MOV X0, X21
	0x01EEE000 MOV X1, X31
	0x01EEE004 BL 0x1EE9410
	0x01EEE008 STP S0, S1, [X19]
	0x01EEE00C STR S2, [X19 + 0x8]
	0x01EEE010 MOVZ W0, 0x1
	0x01EEE014 B 0x1EEE02C
	0x01EEE018 MOV W0, W31
	0x01EEE01C STR W31, [X20 + 0x8]
	0x01EEE020 STR X31, [X20]
	0x01EEE024 STR W31, [X19 + 0x8]
	0x01EEE028 STR X31, [X19]
	0x01EEE02C LDP X20, X19, [X31 + 0x120]
	0x01EEE030 LDP X22, X21, [X31 + 0x110]
	0x01EEE034 LDP X29, X30, [X31 + 0x100]
	0x01EEE038 LDP D9, D8, [X31 + 0xF0]
	0x01EEE03C LDP D11, D10, [X31 + 0xE0]
	0x01EEE040 LDP D13, D12, [X31 + 0xD0]
	0x01EEE044 AND W0, W0, 0x1
	0x01EEE048 ADD X31, X31, 0x130
	0x01EEE04C RET
	0x01EEE050 LDR X13, [X1 + 0x70]
	0x01EEE054 LDR W10, [X1 + 0x7C]
	0x01EEE058 STP S0, S1, [X8]
	0x01EEE05C STP S2, S4, [X8 + 0x8]
	0x01EEE060 STP S5, S6, [X8 + 0x10]
	0x01EEE064 STR S3, [X8 + 0x18]
	0x01EEE068 STR W31, [X8 + 0x1C]
	0x01EEE06C LDR W9, [X1 + 0x1C0]
	0x01EEE070 LDR X11, [X1 + 0x1B8]
	0x01EEE074 ADD X12, X1, 0x1C4
	0x01EEE078 STR W9, [X8 + 0x30]
	0x01EEE07C STP X13, X11, [X8 + 0x20]
	0x01EEE080 LDR V0, [X12]
	0x01EEE084 STR W10, [X8 + 0x44]
	0x01EEE088 STR X31, [X8 + 0x48]
	0x01EEE08C STUR V0, [X8 + 0x34]
	0x01EEE090 RET
	0x01EEE094 SUB X31, X31, 0x1E0
	0x01EEE098 STP D15, D14, [X31 + 0x140]
	0x01EEE09C STP D13, D12, [X31 + 0x150]
	0x01EEE0A0 STP D11, D10, [X31 + 0x160]
	0x01EEE0A4 STP D9, D8, [X31 + 0x170]

ISIL:
	001 Move S16, [X31+4]
	002 Move S7, [X31+8]
	003 Move V17, [X31]
	004 Multiply S18, S4, S4
	005 Multiply S19, S5, S5
	006 Multiply S25, S3, S3
	007 Multiply S21, S3, S4
	008 Multiply S22, S5, S6
	009 Multiply S23, S3, S5
	010 Multiply S24, S4, S6
	011 Multiply S4, S4, S5
	012 Multiply S3, S3, S6
	013 Move [X0+48], S0
	014 Move [X0+56], S1
	015 Add S0, S18, S19
	016 Add S6, S25, S19
	017 Move S20, 1
	018 Add S19, S4, S3
	019 Subtract S3, S4, S3
	020 Add S4, S25, S18
	021 Add S0, S0, S0
	022 Add S6, S6, S6
	023 Move [X0+56], S2
	024 Add S1, S21, S22
	025 Subtract S2, S23, S24
	026 Subtract S5, S21, S22
	027 Add S21, S23, S24
	028 Add S4, S4, S4
	029 Subtract S0, S20, S0
	030 Subtract S6, S20, S6
	031 Subtract S4, S20, S4
	032 Multiply S0, S17, S0
	033 Multiply S1, S17, S1
	034 Multiply S2, S17, S2
	035 Multiply S5, S16, S5
	036 Multiply S6, S16, S6
	037 Multiply S16, S16, S19
	038 Multiply S17, S7, S21
	039 Multiply S3, S7, S3
	040 Move W8, 0x3F800000
	041 Multiply S4, S7, S4
	042 Add S1, S1, S1
	043 Add S2, S2, S2
	044 Add S5, S5, S5
	045 Add S7, S16, S16
	046 Add S16, S17, S17
	047 Add S3, S3, S3
	048 Move [X0+12], W31
	049 Move [X0+28], W31
	050 Move [X0+44], W31
	051 Move [X0+36], S3
	052 Move [X0+44], S4
	053 Move [X0], S0
	054 Move [X0+8], S1
	055 Move [X0+8], S2
	056 Move [X0+16], S5
	057 Move [X0+24], S6
	058 Move [X0+24], S7
	059 Move [X0+32], S16
	060 Move [X0+60], W8
	061 Return 

