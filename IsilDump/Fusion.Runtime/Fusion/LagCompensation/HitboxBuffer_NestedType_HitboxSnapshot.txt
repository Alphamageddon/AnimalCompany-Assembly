Type: Fusion.LagCompensation.HitboxBuffer/HitboxSnapshot

Method: System.Int32 get_CollidersCapacity()

Disassembly:
	0x01EED95C LDR V3, [X31 + 0x194]
	0x01EED960 LDR V2, [X31 + 0x198]
	0x01EED964 LDR V1, [X31 + 0x180]
	0x01EED968 LDR V0, [X31 + 0x184]
	0x01EED96C LDR V6, [X10]
	0x01EED970 LDR V5, [X31 + 0x188]
	0x01EED974 STR V6, [X31 + 0x1]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+24]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Int32 get_CollidersCount()

Disassembly:
	0x01EED978 CBZ X19, 0x1EEDA90
	0x01EED97C LDR X10, [X31 + 0x20]
	0x01EED980 LDR W11, [X31 + 0x28]

ISIL:
	001 Move W8, [X0+24]
	002 Subtract W0, W8, 1
	003 Return X0

Method: System.Void .ctor(Fusion.LagCompensation.Mapper mapper, System.Collections.Generic.List`1<Fusion.HitboxRoot> initialObjects, System.Int32 hitboxCapacity, System.Single expansionFactor)

Disassembly:
	0x01EEBF68 STRB W8, [X24 + 0x5B5]
	0x01EEBF6C MOV X1, X21
	0x01EEBF70 STR X31, [X31 + 0x18]
	0x01EEBF74 STR X31, [X31 + 0x8]
	0x01EEBF78 BL 0x1EEC0C8
	0x01EEBF7C LDR X2, [X23]
	0x01EEBF80 MOV W1, W0
	0x01EEBF84 ADD X0, X31, 0x0
	0x01EEBF88 STR X31, [X31]
	0x01EEBF8C BL 0x24341FC
	0x01EEBF90 CBZ X21, 0x1EEC0C4
	0x01EEBF94 LDR X8, [X31]
	0x01EEBF98 MOV X23, X21
	0x01EEBF9C STR X8, [X23 + 0x20]!
	0x01EEBFA0 LDR X0, [X22 + 0x30]
	0x01EEBFA4 CBZ X0, 0x1EEC0C4
	0x01EEBFA8 ADRP X8, 0x2215000
	0x01EEBFAC LDR X8, [X8 + 0x578]
	0x01EEBFB0 ADRP X24, 0x220B000
	0x01EEBFB4 LDR X1, [X8]
	0x01EEBFB8 LDR X24, [X24 + 0xF00]
	0x01EEBFBC BL 0x2DBE450
	0x01EEBFC0 LDR X1, [X24]
	0x01EEBFC4 MOV X0, X23
	0x01EEBFC8 BL 0x2434214
	0x01EEBFCC MOV W1, W0
	0x01EEBFD0 ADD X2, X31, 0x18
	0x01EEBFD4 MOV X0, X22
	0x01EEBFD8 BL 0x1EEB8C4
	0x01EEBFDC LDR X23, [X31 + 0x18]
	0x01EEBFE0 CBZ X23, 0x1EEC0C4
	0x01EEBFE4 LDR X2, [X22 + 0x30]
	0x01EEBFE8 MOV X0, X23
	0x01EEBFEC MOV X1, X21
	0x01EEBFF0 BL 0x1EEC280
	0x01EEBFF4 LDR W8, [X21 + 0x14]
	0x01EEBFF8 TBZ X8, 0x2, 0x1EEC068
	0x01EEBFFC MOV X0, X21
	0x01EEC000 LDRB W8, [X0 + 0x38]!
	0x01EEC004 CBZ W8, 0x1EEC068
	0x01EEC008 LDRB W8, [X21 + 0x30]
	0x01EEC00C CBZ W8, 0x1EEC068
	0x01EEC010 LDR X1, [X24]
	0x01EEC014 BL 0x2434214
	0x01EEC018 MOV W1, W0
	0x01EEC01C ADD X2, X31, 0x8
	0x01EEC020 MOV X0, X22
	0x01EEC024 BL 0x1EEB8C4
	0x01EEC028 LDR X24, [X31 + 0x8]
	0x01EEC02C CBZ X24, 0x1EEC0C4
	0x01EEC030 LDR X2, [X22 + 0x30]
	0x01EEC034 MOV X0, X24
	0x01EEC038 MOV X1, X21
	0x01EEC03C BL 0x1EEC280
	0x01EEC040 LDR X8, [X21 + 0x40]
	0x01EEC044 CBZ X8, 0x1EEC090
	0x01EEC048 LDR X2, [X22 + 0x30]
	0x01EEC04C LDR X9, [X8 + 0x18]
	0x01EEC050 LDR X0, [X8 + 0x40]
	0x01EEC054 LDR X4, [X8 + 0x28]
	0x01EEC058 MOV X1, X21
	0x01EEC05C MOV X3, X20
	0x01EEC060 BLR X9
	0x01EEC064 B 0x1EEC090
	0x01EEC068 LDR X8, [X21 + 0x40]
	0x01EEC06C CBZ X8, 0x1EEC08C
	0x01EEC070 LDR X2, [X22 + 0x30]
	0x01EEC074 LDR X9, [X8 + 0x18]
	0x01EEC078 LDR X0, [X8 + 0x40]
	0x01EEC07C LDR X4, [X8 + 0x28]
	0x01EEC080 MOV X1, X21
	0x01EEC084 MOV X3, X20
	0x01EEC088 BLR X9
	0x01EEC08C MOV X24, X31
	0x01EEC090 LDR X2, [X22 + 0x30]
	0x01EEC094 MOV X0, X21
	0x01EEC098 MOV X1, X23
	0x01EEC09C MOV X3, X20
	0x01EEC0A0 MOV X4, X24
	0x01EEC0A4 BL 0x1EEC354
	0x01EEC0A8 STR X23, [X19]
	0x01EEC0AC LDP X20, X19, [X31 + 0x40]
	0x01EEC0B0 LDP X22, X21, [X31 + 0x30]
	0x01EEC0B4 LDP X24, X23, [X31 + 0x20]
	0x01EEC0B8 LDR X30, [X31 + 0x10]
	0x01EEC0BC ADD X31, X31, 0x50
	0x01EEC0C0 RET
	0x01EEC0C4 BL 0x1C16F20
	0x01EEC0C8 SUB X31, X31, 0x40
	0x01EEC0CC STP D9, D8, [X31 + 0x10]
	0x01EEC0D0 STP X30, X21, [X31 + 0x20]
	0x01EEC0D4 STP X20, X19, [X31 + 0x30]
	0x01EEC0D8 ADRP X20, 0x24ED000
	0x01EEC0DC LDRB W8, [X20 + 0x5B6]
	0x01EEC0E0 MOV X19, X1
	0x01EEC0E4 TBNZ X8, 0x0, 0x1EEC114
	0x01EEC0E8 ADRP X0, 0x220A000
	0x01EEC0EC LDR X0, [X0 + 0xEF8]
	0x01EEC0F0 BL 0x1C16CF4
	0x01EEC0F4 ADRP X0, 0x220A000
	0x01EEC0F8 LDR X0, [X0 + 0xF00]
	0x01EEC0FC BL 0x1C16CF4
	0x01EEC100 ADRP X0, 0x220B000
	0x01EEC104 LDR X0, [X0 + 0x118]
	0x01EEC108 BL 0x1C16CF4
	0x01EEC10C MOVZ W8, 0x1
	0x01EEC110 STRB W8, [X20 + 0x5B6]
	0x01EEC114 CBZ X19, 0x1EEC27C
	0x01EEC118 MOV X20, X19
	0x01EEC11C ADRP X21, 0x220A000
	0x01EEC120 LDRB W8, [X20 + 0x38]!
	0x01EEC124 LDR X21, [X21 + 0xF00]
	0x01EEC128 CBZ W8, 0x1EEC1F8
	0x01EEC12C LDRB W8, [X19 + 0x14]
	0x01EEC130 TBNZ X8, 0x2, 0x1EEC1F8
	0x01EEC134 LDR X1, [X21]
	0x01EEC138 ADD X0, X19, 0x20
	0x01EEC13C BL 0x2434214
	0x01EEC140 LDR X1, [X21]
	0x01EEC144 MOV W21, W0
	0x01EEC148 MOV X0, X20
	0x01EEC14C BL 0x2434214
	0x01EEC150 ADRP X8, 0x220B000
	0x01EEC154 LDR X8, [X8 + 0x118]
	0x01EEC158 MOV W20, W0
	0x01EEC15C ADD X0, X19, 0x30
	0x01EEC160 LDR X1, [X8]
	0x01EEC164 BL 0x243AC20
	0x01EEC168 ADRP X19, 0x24ED000
	0x01EEC16C FMOV S2, 1
	0x01EEC170 LDRB W8, [X19 + 0x5D7]
	0x01EEC174 SCVTF S8, W21
	0x01EEC178 SCVTF S1, W20
	0x01EEC17C FCMP S0, 0x0
	0x01EEC180 FMIN S0, S0, S2
	0x01EEC184 FMOV S2, W31
	0x01EEC188 FCSEL S0, S0, S2, PL
	0x01EEC18C FSUB S1, S1, S8
	0x01EEC190 FMUL S9, S1, S0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], D8
	003 Move [X31+40], X30
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X24, 0x24EF000
	011 Move X23, 0x2209000
	012 Move W8, [X24+1463]
	013 Move X23, [X23+1448]
	014 Move V8, V0
	015 Move W22, W3
	016 Move X20, X2
	017 Move X21, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {46}
	023 Move X0, 0x2216000
	024 Move X0, [X0+832]
	025 Call 0x1C17CF4
	026 Move X0, 0x2216000
	027 Move X0, [X0+1080]
	028 Call 0x1C17CF4
	029 Move X0, 0x2216000
	030 Move X0, [X0+1088]
	031 Call 0x1C17CF4
	032 Move X0, 0x2216000
	033 Move X0, [X0+1096]
	034 Call 0x1C17CF4
	035 Move X0, 0x2216000
	036 Move X0, [X0+1392]
	037 Call 0x1C17CF4
	038 Move X0, 0x2216000
	039 Move X0, [X0+1104]
	040 Call 0x1C17CF4
	041 Move X0, 0x2209000
	042 Move X0, [X0+1448]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X24+1463], W8
	046 Move X24, 0x2215000
	047 Move X24, [X24+1392]
	048 Move W8, 1
	049 Move X0, X19
	050 Move X1, X31
	051 Move [X31+8], X31
	052 Move [X31+16], X31
	053 Move [X31+24], X31
	054 Move [X19+24], W8
	055 Call Object..ctor, X0
	056 Move X0, [X23]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move W0, 16
	062 Move W1, W22
	063 Move X2, X31
	064 Call Math.Max, X0, X1
	065 Move X8, [X24]
	066 Move W22, W0
	067 Move W1, W22
	068 Move X0, X8
	069 Call 0x1C17D6C
	070 Move [X19+16], X0
	071 Compare X20, 0
	072 JumpIfEqual {100}
	073 Move X8, 0x2215000
	074 Move X8, [X8+1104]
	075 Move X24, 0x2215000
	076 Move X23, 0x2215000
	077 Move X0, X20
	078 Move X1, [X8]
	079 Move X24, [X24+1088]
	080 Move X23, [X23+1080]
	081 Add X8, X31, 8
	082 Call List`1<Object>.GetEnumerator, X0
	083 Move X1, [X24]
	084 Add X0, X31, 8
	085 Call Enumerator<Object>.MoveNext, X0
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {97}
	090 Move X0, [X31+24]
	091 Compare X0, 0
	092 JumpIfEqual {125}
	093 Move X1, X19
	094 Move W2, W31
	095 Move X3, X31
	096 Call HitboxRoot.RegisterColliders, X0, X1, X2
	097 Move X1, [X23]
	098 Add X0, X31, 8
	099 Call Enumerator<Object>.Dispose, X0
	100 Move X8, 0x2215000
	101 Move X8, [X8+832]
	102 Move X0, [X8]
	103 Call 0x1C17F10
	104 Move W2, W22
	105 ShiftRight W2, 31
	106 And W2, W2, 0x3FFFFFFF
	107 Move W4, 3
	108 Move X1, X21
	109 Move X3, X20
	110 Move V0, V8
	111 Move X5, X31
	112 Move X23, X0
	113 Call BVH..ctor, X0, X1, X2, X3, V0, X4
	114 Move [X19+40], X23
	115 Move X20, [X31+80]
	116 Move X19, [X31+88]
	117 Move X22, [X31+64]
	118 Move X21, [X31+72]
	119 Move X24, [X31+48]
	120 Move X23, [X31+56]
	121 Move X30, [X31+40]
	122 Move V8, [X31+32]
	123 Add X31, X31, 96
	124 Return 
	125 Call 0x1C17F20
	126 Move X23, X0
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X0, X23
	129 Call 0x3EB2AD0
	130 Move X24, [X0]
	131 Call 0x3EB2AE0
	132 Move X8, 0x2215000
	133 Move X8, [X8+1080]
	134 Add X0, X31, 8
	135 Move X1, [X8]
	136 Call Enumerator<Object>.Dispose, X0
	137 Compare X24, 0
	138 JumpIfEqual {100}
	139 Move X0, X24
	140 Call 0x1C17F18
	141 Move X24, X31
	142 Move X23, X0
	143 Move X8, 0x2215000
	144 Move X8, [X8+1080]
	145 Move X1, [X8]
	146 Add X0, X31, 8
	147 Call Enumerator<Object>.Dispose, X0
	148 Compare X24, 0
	149 JumpIfNotEqual {152}
	150 Move X0, X23
	151 Call 0x1D2D690
	152 Move X0, X24
	153 Call 0x1C17F18
	154 Call 0x1991590

Method: System.Void CopyFrom(System.Int32 tick, System.Int32 dataTick, Fusion.LagCompensation.HitboxBuffer/HitboxSnapshot from)

Disassembly:
	0x01EEC240 FRINTP D0, D0
	0x01EEC244 B 0x1EEC250
	0x01EEC248 FADD D0, D8, D1
	0x01EEC24C FRINTM D0, D0
	0x01EEC250 MOVZ X8, 0x7FF00000
	0x01EEC254 LDP X20, X19, [X31 + 0x30]
	0x01EEC258 LDP X30, X21, [X31 + 0x20]
	0x01EEC25C LDP D9, D8, [X31 + 0x10]
	0x01EEC260 FMOV D1, X8
	0x01EEC264 FCVTZS W9, D0
	0x01EEC268 FCMP D0, D1
	0x01EEC26C MOVZ W8, 0x80000000
	0x01EEC270 CSEL W0, W8, W9, EQ
	0x01EEC274 ADD X31, X31, 0x40
	0x01EEC278 RET
	0x01EEC27C BL 0x1C16F20
	0x01EEC280 STR X30, [X31 - 0x30]!
	0x01EEC284 STP X22, X21, [X31 + 0x10]
	0x01EEC288 STP X20, X19, [X31 + 0x20]
	0x01EEC28C ADRP X22, 0x24ED000
	0x01EEC290 LDRB W8, [X22 + 0x5BD]
	0x01EEC294 MOV X19, X2
	0x01EEC298 MOV X20, X1
	0x01EEC29C MOV X21, X0
	0x01EEC2A0 TBNZ X8, 0x0, 0x1EEC2B8
	0x01EEC2A4 ADRP X0, 0x2211000
	0x01EEC2A8 LDR X0, [X0 + 0xF68]
	0x01EEC2AC BL 0x1C16CF4
	0x01EEC2B0 MOVZ W8, 0x1
	0x01EEC2B4 STRB W8, [X22 + 0x5BD]
	0x01EEC2B8 CBZ X20, 0x1EEC350
	0x01EEC2BC LDR W0, [X20 + 0x18]
	0x01EEC2C0 LDR X21, [X21 + 0x28]
	0x01EEC2C4 MOV X1, X31
	0x01EEC2C8 BL 0x3C35CB8
	0x01EEC2CC CBZ X21, 0x1EEC350
	0x01EEC2D0 ADRP X10, 0x2211000
	0x01EEC2D4 LDR X8, [X21]
	0x01EEC2D8 LDR X10, [X10 + 0xF68]
	0x01EEC2DC MOV W22, W0
	0x01EEC2E0 LDRH W9, [X8 + 0x12E]
	0x01EEC2E4 LDR X1, [X10]
	0x01EEC2E8 CBZ X9, 0x1EEC30C
	0x01EEC2EC LDR X10, [X8 + 0xB0]
	0x01EEC2F0 ADD X10, X10, 0x8
	0x01EEC2F4 LDUR X11, [X10 - 0x8]
	0x01EEC2F8 CMP X11, X1
	0x01EEC2FC B.EQ 0x1EEC31C
	0x01EEC300 SUBS X9, X9, 0x1
	0x01EEC304 ADD X10, X10, 0x10
	0x01EEC308 B.NE 0x1EEC2F4
	0x01EEC30C MOVZ W2, 0x1
	0x01EEC310 MOV X0, X21
	0x01EEC314 BL 0x1C5C788
	0x01EEC318 B 0x1EEC32C
	0x01EEC31C LDR W9, [X10]
	0x01EEC320 ADD W9, W9, 0x1
	0x01EEC324 ADD X8, X8, W9, 0x4, SXTW
	0x01EEC328 ADD X0, X8, 0x138
	0x01EEC32C LDP X5, X4, [X0]
	0x01EEC330 MOV X0, X21
	0x01EEC334 MOV X1, X20
	0x01EEC338 MOV X2, X19
	0x01EEC33C MOV W3, W22
	0x01EEC340 LDP X20, X19, [X31 + 0x20]
	0x01EEC344 LDP X22, X21, [X31 + 0x10]
	0x01EEC348 LDR X30, [X31], #0x30
	0x01EEC34C BR X5
	0x01EEC350 BL 0x1C16F20
	0x01EEC354 SUB X31, X31, 0xC0
	0x01EEC358 STP X29, X30, [X31 + 0x60]
	0x01EEC35C STP X28, X27, [X31 + 0x70]
	0x01EEC360 STP X26, X25, [X31 + 0x80]
	0x01EEC364 STP X24, X23, [X31 + 0x90]
	0x01EEC368 STP X22, X21, [X31 + 0xA0]
	0x01EEC36C STP X20, X19, [X31 + 0xB0]
	0x01EEC370 ADRP X20, 0x24ED000
	0x01EEC374 LDRB W8, [X20 + 0x5BE]
	0x01EEC378 MOV X19, X4
	0x01EEC37C MOV X22, X3
	0x01EEC380 MOV X24, X2
	0x01EEC384 MOV X21, X1
	0x01EEC388 MOV X23, X0
	0x01EEC38C TBNZ X8, 0x0, 0x1EEC410
	0x01EEC390 ADRP X0, 0x2214000
	0x01EEC394 LDR X0, [X0 + 0x580]
	0x01EEC398 BL 0x1C16CF4
	0x01EEC39C ADRP X0, 0x2214000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x24EE000
	009 Move W8, [X23+1464]
	010 Move X19, X3
	011 Move W21, W2
	012 Move W22, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x2212000
	019 Move X0, [X0+3944]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+1464], W8
	023 Move W2, [X20+28]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, [X20+16]
	026 Move W1, [X20+24]
	027 Move X3, X31
	028 Call Array.Clear, X0, X1, X2
	029 Move [X20+28], W31
	030 Compare X19, 0
	031 JumpIfEqual {99}
	032 Move X23, [X20+40]
	033 Compare X23, 0
	034 JumpIfEqual {99}
	035 Move X10, 0x2212000
	036 Move X8, [X23]
	037 Move X10, [X10+3944]
	038 Move X24, [X19+40]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Move X1, [X10]
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move X0, X23
	050 Move W2, W31
	051 Call 0x1C5D788
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 Add X8, X8, X9
	054 Add X0, X8, 312
	055 Move X8, [X0]
	056 Move X2, [X0+8]
	057 Move X0, X23
	058 Move X1, X24
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X2, [X20+16]
	061 Move [X20+48], W22
	062 Move [X20+52], W21
	063 Compare X2, 0
	064 JumpIfEqual {99}
	065 Move W8, [X2+24]
	066 Move W4, [X19+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move W9, [X20+24]
	069 Move X0, X20
	070 Subtract W1, W9, W8
	071 Call HitboxSnapshot.ResizeCollidersArray, X0, X1
	072 Move X2, [X20+16]
	073 Move W4, [X19+24]
	074 Move X0, [X19+16]
	075 Move W1, W31
	076 Move W3, W31
	077 Move X5, X31
	078 Call Array.Copy, X0, X1, X2, X3, X4
	079 Move X0, [X20+16]
	080 Compare X0, 0
	081 JumpIfEqual {99}
	082 Move W1, [X19+24]
	083 Move W8, [X0+24]
	084 Move X3, X31
	085 Subtract W2, W8, W1
	086 Call Array.Clear, X0, X1, X2
	087 Move W8, [X19+24]
	088 Move X22, [X31+32]
	089 Move X21, [X31+40]
	090 Move X24, [X31+16]
	091 Move X23, [X31+24]
	092 Move [X20+24], W8
	093 Move W8, [X19+32]
	094 Move [X20+32], W8
	095 Move X20, [X31+48]
	096 Move X19, [X31+56]
	097 Move X30, [X31+64]
	098 Return 
	099 Call 0x1C17F20

Method: Fusion.LagCompensation.HitboxCollider GetNextCollider(out System.Int32 index)

Disassembly:
	0x01EEDABC B 0x1EEDAC0
	0x01EEDAC0 MOV X8, X1
	0x01EEDAC4 MOV X19, X0
	0x01EEDAC8 CMP W8, 0x1
	0x01EEDACC B.NE 0x1EEDB00
	0x01EEDAD0 MOV X0, X19
	0x01EEDAD4 BL 0x3EB1AD0
	0x01EEDAD8 LDR X20, [X0]
	0x01EEDADC BL 0x3EB1AE0
	0x01EEDAE0 ADRP X8, 0x220D000
	0x01EEDAE4 LDR X8, [X8 + 0x830]
	0x01EEDAE8 ADD X0, X31, 0x1A0
	0x01EEDAEC LDR X1, [X8]
	0x01EEDAF0 BL 0x2BBDA68
	0x01EEDAF4 CBZ X20, 0x1EEDA60
	0x01EEDAF8 MOV X0, X20
	0x01EEDAFC BL 0x1C16F18
	0x01EEDB00 MOV X20, X31
	0x01EEDB04 B 0x1EEDB0C
	0x01EEDB08 MOV X19, X0
	0x01EEDB0C ADRP X8, 0x220D000
	0x01EEDB10 LDR X8, [X8 + 0x830]
	0x01EEDB14 LDR X1, [X8]
	0x01EEDB18 ADD X0, X31, 0x1A0
	0x01EEDB1C BL 0x2BBDA68
	0x01EEDB20 CBNZ X20, 0x1EEDB2C
	0x01EEDB24 MOV X0, X19
	0x01EEDB28 BL 0x1D2C690
	0x01EEDB2C MOV X0, X20
	0x01EEDB30 BL 0x1C16F18
	0x01EEDB34 BL 0x1990590
	0x01EEDB38 SUB X31, X31, 0x1C0
	0x01EEDB3C STP D13, D12, [X31 + 0x160]
	0x01EEDB40 STP D11, D10, [X31 + 0x170]
	0x01EEDB44 STP D9, D8, [X31 + 0x180]
	0x01EEDB48 STR X29, [X31 + 0x190]
	0x01EEDB4C STP X30, X21, [X31 + 0x1A0]
	0x01EEDB50 STP X20, X19, [X31 + 0x1B0]
	0x01EEDB54 MOV X20, X0
	0x01EEDB58 ADD X0, X31, 0x30
	0x01EEDB5C MOVZ W2, 0x12C
	0x01EEDB60 MOV W1, W31
	0x01EEDB64 MOV X19, X8
	0x01EEDB68 BL 0x3EB1B10
	0x01EEDB6C ADRP X21, 0x24EB000
	0x01EEDB70 LDRB W8, [X21 + 0x793]
	0x01EEDB74 LDP D9, D8, [X20 + 0x60]
	0x01EEDB78 CBNZ W8, 0x1EEDB90
	0x01EEDB7C ADRP X0, 0x2207000
	0x01EEDB80 LDR X0, [X0 + 0x5A8]
	0x01EEDB84 BL 0x1C16CF4
	0x01EEDB88 MOVZ W8, 0x1
	0x01EEDB8C STRB W8, [X21 + 0x793]
	0x01EEDB90 ADRP X8, 0x2207000
	0x01EEDB94 LDR X8, [X8 + 0x5A8]
	0x01EEDB98 LDR X8, [X8]
	0x01EEDB9C LDR X8, [X8 + 0xB8]
	0x01EEDBA0 LDP D0, D1, [X8]
	0x01EEDBA4 ADRP X8, 0xFFFFFFFFFEBFD000
	0x01EEDBA8 LDR V2, [X8 + 0x1B4]
	0x00000000 INVALID
	0x01EEDBB0 UNIMPLEMENTED

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+32]
	005 Move X20, X0
	006 Move X19, X1
	007 Compare W8, 0
	008 JumpIfEqual {21}
	009 Move [X19], W8
	010 Move X8, [X20+16]
	011 Compare X8, 0
	012 JumpIfEqual {63}
	013 NotImplemented "Instruction LDRSW not yet implemented."
	014 Move W10, [X8+24]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move W10, 472
	017 NotImplemented "Instruction MADD not yet implemented."
	018 Move W9, [X9+164]
	019 Move [X20+32], W9
	020 Move W9, [X19]
	021 Move X8, [X20+16]
	022 Compare X8, 0
	023 JumpIfEqual {63}
	024 Move W9, [X20+24]
	025 Move W1, [X8+24]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Add W10, W9, 1
	028 Move [X20+24], W10
	029 Move [X19], W9
	030 Move X0, X20
	031 Call HitboxSnapshot.ResizeCollidersArray, X0, X1
	032 Move W9, [X20+24]
	033 Move X8, [X20+16]
	034 Add W10, W9, 1
	035 Move [X20+24], W10
	036 Move [X19], W9
	037 Compare X8, 0
	038 JumpIfEqual {63}
	039 Move W10, [X8+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W10, 472
	042 NotImplemented "Instruction SMADDL not yet implemented."
	043 Add X0, X8, 32
	044 Move W2, 472
	045 Move W1, W31
	046 Call 0x3EB2B10
	047 Move X8, [X20+16]
	048 Compare X8, 0
	049 JumpIfEqual {63}
	050 NotImplemented "Instruction LDRSW not yet implemented."
	051 Move W10, [X8+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move W10, 472
	056 NotImplemented "Instruction MADD not yet implemented."
	057 Move W9, 1
	058 Add X0, X8, 32
	059 Move [X8+160], W9
	060 Move X30, [X31+32]
	061 Return X0
	062 Call 0x1C17F28
	063 Call 0x1C17F20

Method: System.Void ResizeCollidersArray(System.Int32 minimumIncrease)

Disassembly:
	0x01EED9B4 CMP W12, W13
	0x01EED9B8 B.CS 0x1EED9FC
	0x01EED9BC ADD W11, W12, 0x1
	0x01EED9C0 MADD X10, X12, X29, X10
	0x01EED9C4 STR W11, [X19 + 0x18]
	0x01EED9C8 STP S4, S3, [X10 + 0x20]
	0x01EED9CC STP S2, S1, [X10 + 0x28]
	0x01EED9D0 STP S0, S5, [X10 + 0x30]
	0x01EED9D4 STP X31, X9, [X10 + 0x38]
	0x01EED9D8 LDR W9, [X31 + 0x1C8]
	0x01EED9DC LDR X11, [X31 + 0x1C0]
	0x01EED9E0 STR W9, [X10 + 0x50]
	0x01EED9E4 STR X11, [X10 + 0x48]
	0x01EED9E8 LDR V0, [X31 + 0x3]
	0x01EED9EC STR W8, [X10 + 0x64]
	0x01EED9F0 STR X31, [X10 + 0x68]
	0x01EED9F4 STUR V0, [X10 + 0x54]
	0x01EED9F8 B 0x1EEDA44
	0x01EED9FC LDR X10, [X11 + 0x20]
	0x01EEDA00 LDR X11, [X31 + 0x1C0]
	0x01EEDA04 LDR V6, [X31 + 0x3]
	0x01EEDA08 LDR X10, [X10 + 0xC0]
	0x01EEDA0C LDR X2, [X10 + 0x70]
	0x01EEDA10 STP X31, X9, [X31 + 0x68]
	0x01EEDA14 LDR W9, [X31 + 0x1C8]
	0x01EEDA18 STP S4, S3, [X31 + 0x50]
	0x01EEDA1C STP S2, S1, [X31 + 0x58]
	0x01EEDA20 STP S0, S5, [X31 + 0x60]
	0x01EEDA24 STR W9, [X27 + 0x8]
	0x01EEDA28 STR X11, [X27]
	0x01EEDA2C STR V6, [X28]
	0x01EEDA30 STR W8, [X31 + 0x94]
	0x01EEDA34 STR X31, [X31 + 0x98]
	0x01EEDA38 ADD X1, X31, 0x50
	0x01EEDA3C MOV X0, X19
	0x01EEDA40 BL 0x2FCAD98
	0x01EEDA44 MOVZ W23, 0x1
	0x01EEDA48 B 0x1EED8A4
	0x01EEDA4C ADRP X8, 0x220D000
	0x01EEDA50 LDR X8, [X8 + 0x830]
	0x01EEDA54 ADD X0, X31, 0x1A0
	0x01EEDA58 LDR X1, [X8]
	0x01EEDA5C BL 0x2BBDA68
	0x01EEDA60 AND W0, W23, 0x1
	0x01EEDA64 ADD X31, X31, 0x1D0
	0x01EEDA68 LDP X20, X19, [X31 + 0x50]
	0x01EEDA6C LDP X22, X21, [X31 + 0x40]
	0x01EEDA70 LDP X24, X23, [X31 + 0x30]
	0x01EEDA74 LDP X26, X25, [X31 + 0x20]
	0x01EEDA78 LDP X28, X27, [X31 + 0x10]
	0x01EEDA7C LDP X29, X30, [X31], #0x60
	0x01EEDA80 RET
	0x01EEDA84 BL 0x1C16F20
	0x01EEDA88 BL 0x1C16F20
	0x01EEDA8C BL 0x1C16F20
	0x01EEDA90 BL 0x1C16F20
	0x01EEDA94 B 0x1EEDA98
	0x01EEDA98 MOV X8, X1
	0x01EEDA9C MOV X19, X0
	0x01EEDAA0 MOVZ W23, 0x1
	0x01EEDAA4 B 0x1EEDAC8
	0x01EEDAA8 MOV X8, X1
	0x01EEDAAC MOV X19, X0
	0x01EEDAB0 MOV W23, W31
	0x01EEDAB4 B 0x1EEDAC8
	0x01EEDAB8 B 0x1EEDAC0

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x24ED000
	010 Move W8, [X21+1465]
	011 Move W20, W1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2214000
	018 Move X0, [X0+1448]
	019 Call 0x1C17CF4
	020 Move X0, 0x2207000
	021 Move X0, [X0+1448]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1465], W8
	025 Add X19, X19, 16
	026 Move X8, [X19]
	027 Compare X8, 0
	028 JumpIfEqual {82}
	029 Move X22, 0x2207000
	030 Move X22, [X22+1448]
	031 Move W21, [X8+24]
	032 Move X23, 0x24EC000
	033 Move W8, [X23+2595]
	034 NotImplemented "Instruction SCVTF not yet implemented."
	035 NotImplemented "Instruction SCVTF not yet implemented."
	036 NotImplemented "Instruction FDIV not yet implemented."
	037 Move S9, 1
	038 Compare W8, 0
	039 JumpIfNotEqual {45}
	040 Move X0, 0x2207000
	041 Move X0, [X0+1448]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X23+2595], W8
	045 Move X0, [X22]
	046 Move X20, 0x2214000
	047 Add S8, S8, S9
	048 Move W8, [X0+224]
	049 Move X20, [X20+1448]
	050 Compare W8, 0
	051 JumpIfEqual {53}
	052 NotImplemented "Instruction FRINTM not yet implemented."
	053 Call 0x1C17DFC
	054 Move X0, [X22]
	055 NotImplemented "Instruction FRINTM not yet implemented."
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move W8, 0x7F800000
	061 Move S0, W8
	062 NotImplemented "Instruction FCVTZS not yet implemented."
	063 NotImplemented "Instruction FCMP not yet implemented."
	064 Move W8, 0x80000000
	065 NotImplemented "Instruction CSEL not yet implemented."
	066 Move W0, 2
	067 Move X2, X31
	068 Call Math.Max, X0, X1
	069 Move X2, [X20]
	070 Multiply W1, W0, W21
	071 Move X0, X19
	072 Move X20, [X31+48]
	073 Move X19, [X31+56]
	074 Move X22, [X31+32]
	075 Move X21, [X31+40]
	076 Move X30, [X31+16]
	077 Move X23, [X31+24]
	078 Move D9, [X31+64]
	079 Move D8, [X31+72]
	080 Call Array.Resize, X0, X1
	081 Return 
	082 Call 0x1C17F20

Method: Fusion.LagCompensation.HitboxCollider GetNextTempCollider(out System.Int32 tmpIndex)

Disassembly:
	0x00000000 INVALID
	0x01EEDBB8 FADD V0.2S, V0.2S, V3.2S
	0x01EEDBBC FADD V0.2S, V1.2S, V0.2S
	0x01EEDBC0 UNIMPLEMENTED
	0x01EEDBC4 FADD V0.2S, V1.2S, V0.2S
	0x01EEDBC8 FCMP S0, S2
	0x01EEDBCC B.LE 0x1EEDC1C
	0x01EEDBD0 ADD X0, X31, 0x30
	0x01EEDBD4 MOVZ W2, 0x12C
	0x01EEDBD8 MOV W1, W31
	0x01EEDBDC BL 0x3EB1B10
	0x01EEDBE0 LDUR X8, [X20 + 0x54]
	0x01EEDBE4 LDR W9, [X20 + 0x5C]
	0x01EEDBE8 LDP S0, S1, [X20 + 0x48]
	0x01EEDBEC LDR V2, [X20 + 0x50]
	0x01EEDBF0 LDP S4, S5, [X20 + 0x64]
	0x01EEDBF4 LDR V6, [X20 + 0x6C]
	0x01EEDBF8 LDP S7, S3, [X20 + 0x5C]
	0x01EEDBFC ADD X0, X31, 0x30
	0x01EEDC00 MOV X1, X31
	0x01EEDC04 STR X8, [X20 + 0x80]
	0x01EEDC08 STR W9, [X20 + 0x88]
	0x01EEDC0C STR S7, [X31 + 0x8]
	0x01EEDC10 STR X8, [X31]
	0x01EEDC14 BL 0x1EE9030
	0x01EEDC18 B 0x1EEDD68
	0x01EEDC1C LDP S0, S1, [X20 + 0x48]
	0x01EEDC20 LDR V2, [X20 + 0x50]
	0x01EEDC24 LDP S4, S5, [X20 + 0x64]
	0x01EEDC28 LDR V6, [X20 + 0x6C]
	0x01EEDC2C LDUR X8, [X20 + 0x54]
	0x01EEDC30 LDP S7, S3, [X20 + 0x5C]
	0x01EEDC34 ADD X0, X31, 0x30
	0x01EEDC38 MOV X1, X31
	0x01EEDC3C STR X8, [X31]
	0x01EEDC40 STR S7, [X31 + 0x8]
	0x01EEDC44 BL 0x1EE9030
	0x01EEDC48 LDP S0, S1, [X31 + 0xFC]
	0x01EEDC4C LDR V2, [X31 + 0x104]
	0x01EEDC50 LDR V3, [X31 + 0x108]
	0x01EEDC54 LDR V4, [X31 + 0x10C]
	0x01EEDC58 LDR V5, [X31 + 0x110]
	0x01EEDC5C ADD X0, X31, 0x18
	0x01EEDC60 MOV X1, X31
	0x01EEDC64 STP X31, X31, [X31 + 0x20]
	0x01EEDC68 STR X31, [X31 + 0x18]
	0x01EEDC6C BL 0x1EE8EE4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+16]
	005 Compare X8, 0
	006 JumpIfEqual {49}
	007 Move W9, [X0+24]
	008 Move W10, [X0+28]
	009 Move X19, X1
	010 Move W1, [X8+24]
	011 Move X20, X0
	012 Add W9, W9, W10
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Add W10, W10, 1
	015 Move [X20+28], W10
	016 Move [X19], W9
	017 Move X0, X20
	018 Call HitboxSnapshot.ResizeCollidersArray, X0, X1
	019 Move W9, [X20+24]
	020 Move W10, [X20+28]
	021 Move X8, [X20+16]
	022 Add W9, W10, W9
	023 Add W10, W10, 1
	024 Move [X20+28], W10
	025 Move [X19], W9
	026 Compare X8, 0
	027 JumpIfEqual {49}
	028 Move W10, [X8+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W10, 472
	031 NotImplemented "Instruction SMADDL not yet implemented."
	032 Add X0, X8, 32
	033 Move W2, 472
	034 Move W1, W31
	035 Call 0x3EB2B10
	036 Move X8, [X20+16]
	037 Compare X8, 0
	038 JumpIfEqual {49}
	039 NotImplemented "Instruction LDRSW not yet implemented."
	040 Move W10, [X8+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move W10, 472
	045 NotImplemented "Instruction MADD not yet implemented."
	046 Add X0, X8, 32
	047 Move X30, [X31+32]
	048 Return X0
	049 Call 0x1C17F20
	050 Call 0x1C17F28

Method: System.Void ReleaseTempColliders()

Disassembly:
	0x01EED984 LDR V6, [X31 + 0x1]
	0x01EED988 STR X10, [X31 + 0x1C0]
	0x01EED98C STR W11, [X31 + 0x1C8]
	0x01EED990 STR V6, [X31 + 0x3]
	0x01EED994 LDR W12, [X19 + 0x1C]
	0x01EED998 LDR X10, [X19 + 0x10]
	0x01EED99C LDR X11, [X26]
	0x01EED9A0 ADD W12, W12, 0x1
	0x01EED9A4 STR W12, [X19 + 0x1C]
	0x01EED9A8 CBZ X10, 0x1EEDA8C
	0x01EED9AC LDRSW X12, [X19 + 0x18]
	0x01EED9B0 LDR W13, [X10 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W2, [X0+28]
	004 Move X19, X0
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X0, [X19+16]
	007 Move W1, [X19+24]
	008 Move X3, X31
	009 Call Array.Clear, X0, X1, X2
	010 Move [X19+28], W31
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return 

Method: System.Void ReleaseCollider(System.Int32 index)

Disassembly:
	0x01EEDC70 LDR V0, [X31 + 0x108]
	0x01EEDC74 LDR V1, [X31 + 0x10C]
	0x01EEDC78 LDR V2, [X31 + 0x110]
	0x01EEDC7C LDR V3, [X31 + 0x114]
	0x01EEDC80 LDR V4, [X31 + 0x118]
	0x01EEDC84 LDR V5, [X31 + 0x11C]
	0x01EEDC88 LDR V8, [X31 + 0x18]
	0x01EEDC8C LDR V9, [X31 + 0x20]
	0x01EEDC90 ADD X0, X31, 0x18
	0x01EEDC94 MOV X1, X31
	0x01EEDC98 STP X31, X31, [X31 + 0x20]
	0x01EEDC9C STR X31, [X31 + 0x18]
	0x01EEDCA0 BL 0x1EE8EE4
	0x01EEDCA4 LDR V0, [X31 + 0x114]
	0x01EEDCA8 LDR V1, [X31 + 0x118]
	0x01EEDCAC LDR V2, [X31 + 0x11C]
	0x01EEDCB0 LDR V3, [X31 + 0x120]
	0x01EEDCB4 LDR V4, [X31 + 0x124]
	0x01EEDCB8 LDR V5, [X31 + 0x128]
	0x01EEDCBC LDR V10, [X31 + 0x18]
	0x01EEDCC0 LDR V11, [X31 + 0x20]
	0x01EEDCC4 ADD X0, X31, 0x18
	0x01EEDCC8 MOV X1, X31
	0x01EEDCCC STP X31, X31, [X31 + 0x20]
	0x01EEDCD0 STR X31, [X31 + 0x18]
	0x01EEDCD4 BL 0x1EE8EE4
	0x01EEDCD8 LDR V1, [X31 + 0x124]
	0x01EEDCDC LDR V2, [X31 + 0x128]
	0x01EEDCE0 LDP S3, S4, [X31 + 0xFC]
	0x01EEDCE4 LDR V0, [X31 + 0x120]
	0x01EEDCE8 LDR V5, [X31 + 0x104]
	0x01EEDCEC LDR V12, [X31 + 0x18]
	0x01EEDCF0 LDR V13, [X31 + 0x20]
	0x01EEDCF4 ADD X0, X31, 0x18
	0x01EEDCF8 MOV X1, X31
	0x01EEDCFC STP X31, X31, [X31 + 0x20]
	0x01EEDD00 STR X31, [X31 + 0x18]
	0x01EEDD04 BL 0x1EE8EE4
	0x01EEDD08 LDR V0, [X31 + 0x18]
	0x01EEDD0C LDR V1, [X31 + 0x20]
	0x01EEDD10 UNIMPLEMENTED
	0x01EEDD14 FABS S3, S9
	0x01EEDD18 UNIMPLEMENTED
	0x01EEDD1C FABS S5, S11
	0x00000000 INVALID
	0x01EEDD24 FCMP S3, S5
	0x01EEDD28 UNIMPLEMENTED
	0x01EEDD2C FABS S7, S13
	0x00000000 INVALID
	0x01EEDD34 FCSEL S3, S3, S5, GT
	0x00000000 INVALID
	0x01EEDD3C FCMP S3, S7
	0x01EEDD40 UNIMPLEMENTED
	0x01EEDD44 FABS S1, S1
	0x00000000 INVALID
	0x01EEDD4C FCSEL S3, S3, S7, GT
	0x00000000 INVALID
	0x01EEDD54 FCMP S3, S1
	0x00000000 INVALID
	0x01EEDD5C FCSEL S1, S3, S1, GT
	0x01EEDD60 STR D0, [X20 + 0x80]
	0x01EEDD64 STR S1, [X20 + 0x88]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X8, [X0+16]
	008 Compare X8, 0
	009 JumpIfEqual {63}
	010 Move W9, [X8+24]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W9, 472
	013 NotImplemented "Instruction UMADDL not yet implemented."
	014 Move [X8+160], W31
	015 Move W9, [X0+32]
	016 Move X20, [X31+32]
	017 Move X19, [X31+40]
	018 Move X30, [X31+16]
	019 Move X21, [X31+24]
	020 Move [X8+164], W9
	021 Move [X0+32], W1
	022 Add X31, X31, 48
	023 Return 
	024 Move [X31+12], W1
	025 Move X19, 0x2207000
	026 Move X19, [X19+1880]
	027 Move X20, X0
	028 Move X0, X19
	029 Call 0x1C17D08
	030 Add X1, X31, 12
	031 Call 0x1C17E04
	032 Move X21, X0
	033 Move X0, X20
	034 Call HitboxSnapshot.get_CollidersCapacity, X0
	035 Move [X31+8], W0
	036 Move X0, X19
	037 Call 0x1C17D08
	038 Add X1, X31, 8
	039 Call 0x1C17E04
	040 Move X19, X0
	041 Move X0, 0x2211000
	042 Move X0, [X0+3952]
	043 Call 0x1C17D08
	044 Move X1, X21
	045 Move X2, X19
	046 Move X3, X31
	047 Call String.Format, X0, X1, X2
	048 Move X19, X0
	049 Move X0, 0x2211000
	050 Move X0, [X0+3960]
	051 Call 0x1C17D08
	052 Call 0x1C17F10
	053 Move X1, X19
	054 Move X2, X31
	055 Move X20, X0
	056 Call IndexOutOfRangeException..ctor, X0, X1
	057 Move X0, 0x2214000
	058 Move X0, [X0+1456]
	059 Call 0x1C17D08
	060 Move X1, X0
	061 Move X0, X20
	062 Call 0x1C17DEC
	063 Call 0x1C17F20
	064 Call 0x1C17F28

Method: Fusion.LagCompensation.HitboxCollider GetCollider(System.Int32 index)

Disassembly:
	0x01EEDD68 ADD X1, X31, 0x30
	0x01EEDD6C MOVZ W2, 0x12C
	0x01EEDD70 MOV X0, X19
	0x01EEDD74 BL 0x3EB1AC0
	0x01EEDD78 LDP X20, X19, [X31 + 0x1B0]
	0x01EEDD7C LDP X30, X21, [X31 + 0x1A0]
	0x01EEDD80 LDR X29, [X31 + 0x190]
	0x01EEDD84 LDP D9, D8, [X31 + 0x180]
	0x01EEDD88 LDP D11, D10, [X31 + 0x170]
	0x01EEDD8C LDP D13, D12, [X31 + 0x160]
	0x01EEDD90 ADD X31, X31, 0x1C0
	0x01EEDD94 RET
	0x01EEDD98 SUB X31, X31, 0x130
	0x01EEDD9C STP D13, D12, [X31 + 0xD0]
	0x01EEDDA0 STP D11, D10, [X31 + 0xE0]
	0x01EEDDA4 STP D9, D8, [X31 + 0xF0]
	0x01EEDDA8 STP X29, X30, [X31 + 0x100]
	0x01EEDDAC STP X22, X21, [X31 + 0x110]
	0x01EEDDB0 STP X20, X19, [X31 + 0x120]
	0x01EEDDB4 MOVI V0.2D, 0x0
	0x01EEDDB8 STP X31, X31, [X31 + 0xB0]
	0x01EEDDBC STR W31, [X31 + 0xC8]
	0x01EEDDC0 STR X31, [X31 + 0xC0]
	0x01EEDDC4 STP V0, V0, [X31 + 0x90]
	0x01EEDDC8 STP V0, V0, [X31 + 0x70]
	0x01EEDDCC LDR W8, [X2]
	0x01EEDDD0 MOV X19, X5
	0x01EEDDD4 MOV X20, X4
	0x01EEDDD8 MOV X22, X2
	0x01EEDDDC CMP W8, 0x3
	0x01EEDDE0 MOV X21, X1
	0x01EEDDE4 B.EQ 0x1EEDEB8
	0x01EEDDE8 CMP W8, 0x2
	0x01EEDDEC B.EQ 0x1EEDE18
	0x01EEDDF0 CMP W8, 0x1
	0x01EEDDF4 B.NE 0x1EEE018
	0x01EEDDF8 ADD X1, X22, 0x88
	0x01EEDDFC AND W2, W3, 0x1
	0x01EEDE00 MOV X0, X21
	0x01EEDE04 MOV X3, X20
	0x01EEDE08 MOV X4, X19
	0x01EEDE0C MOV X5, X31
	0x01EEDE10 BL 0x1EE32D4
	0x01EEDE14 B 0x1EEE02C
	0x01EEDE18 LDR V0, [X22 + 0x1B8]
	0x01EEDE1C LDR V2, [X21]
	0x01EEDE20 LDR V1, [X22 + 0x1C0]
	0x01EEDE24 LDR V3, [X21 + 0x8]
	0x01EEDE28 MOV X0, X21
	0x01EEDE2C FSUB V0.2S, V0.2S, V2.2S
	0x01EEDE30 MOV X1, X31
	0x01EEDE34 FSUB S2, S1, S3
	0x01EEDE38 MOV S1, V0.S[1]
	0x01EEDE3C BL 0x1EE6D00
	0x01EEDE40 LDR V5, [X21 + 0x14]
	0x01EEDE44 MOV V3.16B, V0.16B
	0x01EEDE48 MOV V4.16B, V1.16B
	0x01EEDE4C LDP S0, S1, [X21 + 0xC]
	0x01EEDE50 LDR V6, [X22 + 0x60]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X8, [X0+16]
	008 Compare X8, 0
	009 JumpIfEqual {60}
	010 Move W9, [X8+24]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X20, [X31+32]
	013 Move X19, [X31+40]
	014 Move X30, [X31+16]
	015 Move X21, [X31+24]
	016 Move W9, 472
	017 NotImplemented "Instruction UMADDL not yet implemented."
	018 Add X0, X8, 32
	019 Add X31, X31, 48
	020 Return X0
	021 Move [X31+12], W1
	022 Move X19, 0x2207000
	023 Move X19, [X19+1880]
	024 Move X20, X0
	025 Move X0, X19
	026 Call 0x1C17D08
	027 Add X1, X31, 12
	028 Call 0x1C17E04
	029 Move X21, X0
	030 Move X0, X20
	031 Call HitboxSnapshot.get_CollidersCapacity, X0
	032 Move [X31+8], W0
	033 Move X0, X19
	034 Call 0x1C17D08
	035 Add X1, X31, 8
	036 Call 0x1C17E04
	037 Move X19, X0
	038 Move X0, 0x2211000
	039 Move X0, [X0+3952]
	040 Call 0x1C17D08
	041 Move X1, X21
	042 Move X2, X19
	043 Move X3, X31
	044 Call String.Format, X0, X1, X2
	045 Move X19, X0
	046 Move X0, 0x2211000
	047 Move X0, [X0+3960]
	048 Call 0x1C17D08
	049 Call 0x1C17F10
	050 Move X1, X19
	051 Move X2, X31
	052 Move X20, X0
	053 Call IndexOutOfRangeException..ctor, X0, X1
	054 Move X0, 0x2211000
	055 Move X0, [X0+3968]
	056 Call 0x1C17D08
	057 Move X1, X0
	058 Move X0, X20
	059 Call 0x1C17DEC
	060 Call 0x1C17F20
	061 Call 0x1C17F28

Method: System.Void Add(Fusion.HitboxRoot h, Fusion.Statistics.LagCompensationStatisticsManager lagCompStatManager)

Disassembly:
	0x01EEC3F4 LDR X0, [X0 + 0x598]
	0x01EEC3F8 BL 0x1C16CF4
	0x01EEC3FC ADRP X0, 0x220A000
	0x01EEC400 LDR X0, [X0 + 0xE40]
	0x01EEC404 BL 0x1C16CF4
	0x01EEC408 MOVZ W8, 0x1
	0x01EEC40C STRB W8, [X20 + 0x5BE]
	0x01EEC410 STP X31, X31, [X31 + 0x40]
	0x01EEC414 STR X31, [X31 + 0x50]
	0x01EEC418 STR X31, [X31 + 0x38]
	0x01EEC41C CBZ X23, 0x1EEC880
	0x01EEC420 ADRP X9, 0x220A000
	0x01EEC424 LDRB W8, [X23 + 0x14]
	0x01EEC428 LDR X9, [X9 + 0xE40]
	0x01EEC42C TBNZ X8, 0x3, 0x1EEC438
	0x01EEC430 STR W31, [X31 + 0xC]
	0x01EEC434 B 0x1EEC458
	0x01EEC438 LDR X0, [X9]
	0x01EEC43C LDR W8, [X0 + 0xE0]
	0x01EEC440 CBNZ W8, 0x1EEC448
	0x01EEC444 BL 0x1C16DFC
	0x01EEC448 LDR W8, [X23 + 0x1C]
	0x01EEC44C CMP W8, 0x0
	0x01EEC450 CSET W8, GT
	0x01EEC454 STR W8, [X31 + 0xC]
	0x01EEC458 STR X23, [X31 + 0x18]
	0x01EEC45C CBZ X19, 0x1EEC46C
	0x01EEC460 LDR W8, [X23 + 0x14]
	0x01EEC464 UBFM W23, W8, 0x2, 0x2
	0x01EEC468 B 0x1EEC470
	0x01EEC46C MOV W23, W31
	0x01EEC470 STR X22, [X31 + 0x10]
	0x01EEC474 CBZ X24, 0x1EEC880
	0x01EEC478 ADRP X8, 0x2214000
	0x01EEC47C LDR X8, [X8 + 0x598]
	0x01EEC480 ADRP X29, 0x2211000
	0x01EEC484 LDR X29, [X29 + 0xE78]
	0x01EEC488 MOV X0, X24
	0x01EEC48C LDR X1, [X8]
	0x01EEC490 ADD X8, X31, 0x20
	0x01EEC494 BL 0x2DBE924
	0x01EEC498 LDR X8, [X31 + 0x30]
	0x01EEC49C LDR V0, [X31 + 0x2]
	0x01EEC4A0 STR X8, [X31 + 0x50]
	0x01EEC4A4 LDR X8, [X31 + 0x18]
	0x01EEC4A8 STR V0, [X31 + 0x4]
	0x01EEC4AC ADD X8, X8, 0x30
	0x01EEC4B0 STR X8, [X31]
	0x01EEC4B4 ADRP X8, 0x2214000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x24EE000
	006 Move W8, [X21+1466]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2212000
	014 Move X0, [X0+3944]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1466], W8
	018 Compare X19, 0
	019 JumpIfEqual {57}
	020 Move W2, [X20+52]
	021 Move X0, X19
	022 Move X1, X20
	023 Move X3, X31
	024 Call HitboxRoot.RegisterColliders, X0, X1, X2
	025 Move X20, [X20+40]
	026 Compare X20, 0
	027 JumpIfEqual {57}
	028 Move X10, 0x2212000
	029 Move X8, [X20]
	030 Move X10, [X10+3944]
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X10]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move W2, 2
	042 Move X0, X20
	043 Call 0x1C5D788
	044 Move W9, [X10]
	045 Add W9, W9, 2
	046 Add X8, X8, W9
	047 Add X0, X8, 312
	048 Move X3, [X0]
	049 Move X2, [X0+8]
	050 Move X0, X20
	051 Move X1, X19
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 CallNoReturn X3
	057 Call 0x1C17F20

Method: System.Boolean Remove(Fusion.HitboxRoot hr)

Disassembly:
	0x01EEC4F0 LDR X8, [X8 + 0xE40]
	0x01EEC4F4 MOV X24, X0
	0x01EEC4F8 LDR X9, [X31 + 0x18]
	0x01EEC4FC LDR X0, [X8]
	0x01EEC500 LDR W22, [X9 + 0x1C]
	0x01EEC504 LDR W8, [X0 + 0xE0]
	0x01EEC508 CBNZ W8, 0x1EEC510
	0x01EEC50C BL 0x1C16DFC
	0x01EEC510 CMP W22, W24
	0x01EEC514 B.EQ 0x1EEC4B4
	0x01EEC518 B 0x1EEC520
	0x01EEC51C CBZ X20, 0x1EEC87C
	0x01EEC520 LDR X22, [X20 + 0xA8]
	0x01EEC524 CBZ X22, 0x1EEC870
	0x01EEC528 LDR W8, [X22 + 0x18]
	0x01EEC52C CMP W8, 0x1
	0x01EEC530 B.LT 0x1EEC4B4
	0x01EEC534 MOV W20, W31
	0x01EEC538 CMP W20, W8
	0x01EEC53C B.CS 0x1EEC85C
	0x01EEC540 ADD X8, X22, W20, 0x3, SXTW
	0x01EEC544 LDR X9, [X8 + 0x20]
	0x01EEC548 CBZ X9, 0x1EEC854
	0x01EEC54C CBZ X21, 0x1EEC858
	0x01EEC550 LDR X8, [X21]
	0x01EEC554 LDR W25, [X9 + 0x54]
	0x01EEC558 LDR X1, [X29]
	0x01EEC55C LDRH W9, [X8 + 0x12E]
	0x01EEC560 CBZ X9, 0x1EEC584
	0x01EEC564 LDR X10, [X8 + 0xB0]
	0x01EEC568 ADD X10, X10, 0x8
	0x01EEC56C LDUR X11, [X10 - 0x8]
	0x01EEC570 CMP X11, X1
	0x01EEC574 B.EQ 0x1EEC594
	0x01EEC578 SUBS X9, X9, 0x1
	0x01EEC57C ADD X10, X10, 0x10
	0x01EEC580 B.NE 0x1EEC56C
	0x01EEC584 MOVZ W2, 0x2
	0x01EEC588 MOV X0, X21
	0x01EEC58C BL 0x1C5C788
	0x01EEC590 B 0x1EEC5A4
	0x01EEC594 LDR W9, [X10]
	0x01EEC598 ADD W9, W9, 0x2
	0x01EEC59C ADD X8, X8, W9, 0x4, SXTW
	0x01EEC5A0 ADD X0, X8, 0x138
	0x01EEC5A4 LDP X8, X2, [X0]
	0x01EEC5A8 MOV X0, X21
	0x01EEC5AC MOV W1, W25

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x24EE000
	006 Move W8, [X21+1467]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2212000
	014 Move X0, [X0+3944]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1467], W8
	018 Compare X19, 0
	019 JumpIfEqual {56}
	020 Move X0, X19
	021 Move X1, X20
	022 Move X2, X31
	023 Call HitboxRoot.DeregisterColliders, X0, X1
	024 Move X20, [X20+40]
	025 Compare X20, 0
	026 JumpIfEqual {56}
	027 Move X10, 0x2212000
	028 Move X8, [X20]
	029 Move X10, [X10+3944]
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Move X1, [X10]
	032 Compare X9, 0
	033 JumpIfEqual {40}
	034 Move X10, [X8+176]
	035 Add X10, X10, 8
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Subtract X9, X9, 1
	039 Add X10, X10, 16
	040 Move W2, 3
	041 Move X0, X20
	042 Call 0x1C5D788
	043 Move W9, [X10]
	044 Add W9, W9, 3
	045 Add X8, X8, W9
	046 Add X0, X8, 312
	047 Move X3, [X0]
	048 Move X2, [X0+8]
	049 Move X0, X20
	050 Move X1, X19
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 CallNoReturn X3
	056 Call 0x1C17F20

Method: System.Void Update(Fusion.HitboxRoot h, Fusion.Statistics.LagCompensationStatisticsManager lagCompStatManager)

Disassembly:
	0x01EEDE54 MOV V7.16B, V2.16B
	0x01EEDE58 ADD X0, X31, 0xB0
	0x01EEDE5C MOV V2.16B, V5.16B
	0x01EEDE60 MOV V5.16B, V7.16B
	0x01EEDE64 MOV X1, X31
	0x01EEDE68 BL 0x1EE6DD8
	0x01EEDE6C TBZ X0, 0x0, 0x1EEE018
	0x01EEDE70 LDP S0, S1, [X31 + 0xB0]
	0x01EEDE74 LDR V2, [X31 + 0xB8]
	0x01EEDE78 MOV X0, X21
	0x01EEDE7C MOV X1, X31
	0x01EEDE80 BL 0x1EE9410
	0x01EEDE84 LDR V3, [X21]
	0x01EEDE88 LDR V4, [X21 + 0x8]
	0x01EEDE8C MOV V0.S[1], V1.S[0]
	0x01EEDE90 FADD V0.2S, V0.2S, V3.2S
	0x01EEDE94 FADD S1, S2, S4
	0x01EEDE98 STR D0, [X20]
	0x01EEDE9C STR S1, [X20 + 0x8]
	0x01EEDEA0 LDP S0, S1, [X31 + 0xBC]
	0x01EEDEA4 LDR V2, [X31 + 0xC4]
	0x01EEDEA8 FNEG S0, S0
	0x01EEDEAC FNEG S1, S1
	0x01EEDEB0 FNEG S2, S2
	0x01EEDEB4 B 0x1EEDFFC
	0x01EEDEB8 ADD X8, X31, 0x70
	0x01EEDEBC MOV X0, X22
	0x01EEDEC0 BL 0x1EEBAE0
	0x01EEDEC4 MOV X0, X22
	0x01EEDEC8 BL 0x1EED0BC
	0x01EEDECC ADD X0, X31, 0x70
	0x01EEDED0 MOV X1, X31
	0x01EEDED4 BL 0x3C28278
	0x01EEDED8 LDP S3, S4, [X21]
	0x01EEDEDC LDR V5, [X21 + 0x8]
	0x01EEDEE0 MOV X0, X21
	0x01EEDEE4 MOV X1, X31
	0x01EEDEE8 FSUB S0, S0, S3
	0x01EEDEEC FSUB S1, S1, S4
	0x01EEDEF0 FSUB S2, S2, S5
	0x01EEDEF4 BL 0x1EE6D00
	0x01EEDEF8 ADD X8, X31, 0x30
	0x01EEDEFC MOV X0, X22
	0x01EEDF00 MOV V8.16B, V0.16B
	0x01EEDF04 MOV V9.16B, V1.16B
	0x01EEDF08 MOV V10.16B, V2.16B
	0x01EEDF0C BL 0x1EEBAE0
	0x01EEDF10 LDP V0, V1, [X31 + 0x30]
	0x01EEDF14 LDP V2, V3, [X31 + 0x50]
	0x01EEDF18 MOV X0, X22
	0x01EEDF1C STP V0, V1, [X31 + 0x70]
	0x01EEDF20 STP V2, V3, [X31 + 0x90]
	0x01EEDF24 BL 0x1EED148
	0x01EEDF28 ADD X0, X31, 0x70
	0x01EEDF2C MOV X1, X31
	0x01EEDF30 BL 0x3C28278
	0x01EEDF34 LDP S3, S4, [X21]
	0x01EEDF38 LDR V5, [X21 + 0x8]
	0x01EEDF3C MOV X0, X21
	0x01EEDF40 MOV X1, X31
	0x01EEDF44 FSUB S0, S0, S3
	0x01EEDF48 FSUB S1, S1, S4
	0x01EEDF4C FSUB S2, S2, S5
	0x01EEDF50 BL 0x1EE6D00
	0x01EEDF54 MOV V11.16B, V0.16B
	0x01EEDF58 MOV V13.16B, V2.16B
	0x01EEDF5C LDR V0, [X22 + 0x1B8]
	0x01EEDF60 LDR V2, [X21]
	0x01EEDF64 MOV V12.16B, V1.16B
	0x01EEDF68 LDR V1, [X22 + 0x1C0]
	0x01EEDF6C LDR V3, [X21 + 0x8]
	0x01EEDF70 FSUB V0.2S, V0.2S, V2.2S
	0x01EEDF74 MOV X0, X21
	0x01EEDF78 MOV X1, X31
	0x01EEDF7C FSUB S2, S1, S3
	0x01EEDF80 MOV S1, V0.S[1]
	0x01EEDF84 BL 0x1EE6D00
	0x01EEDF88 LDR V3, [X22 + 0x60]
	0x01EEDF8C LDR V4, [X21 + 0x14]
	0x01EEDF90 LDUR X8, [X21 + 0xC]
	0x01EEDF94 ADD X0, X31, 0xB0
	0x01EEDF98 STR S3, [X31 + 0x10]
	0x01EEDF9C STR S4, [X31 + 0x20]
	0x01EEDFA0 MOV V3.16B, V8.16B
	0x01EEDFA4 MOV V4.16B, V9.16B
	0x01EEDFA8 MOV V5.16B, V10.16B
	0x01EEDFAC MOV X1, X31
	0x01EEDFB0 STR X8, [X31 + 0x18]
	0x01EEDFB4 STP S12, S13, [X31 + 0x4]
	0x01EEDFB8 STR S11, [X31]
	0x01EEDFBC BL 0x1EE766C
	0x01EEDFC0 TBZ X0, 0x0, 0x1EEE018
	0x01EEDFC4 LDP S0, S1, [X31 + 0xB0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x24ED000
	009 Move W8, [X21+1468]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2211000
	017 Move X0, [X0+3944]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1468], W8
	021 Compare X19, 0
	022 JumpIfEqual {104}
	023 Move X21, 0x24ED000
	024 Move W8, [X21+555]
	025 Compare W8, 0
	026 JumpIfNotEqual {32}
	027 Move X0, 0x2211000
	028 Move X0, [X0+3416]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+555], W8
	032 Move X8, 0x2211000
	033 Move X8, [X8+3416]
	034 Move X0, X19
	035 Move W1, W31
	036 Move X2, [X8]
	037 Call NetworkBehaviour.ReinterpretState, X0, X1
	038 Move X22, [X19+168]
	039 Compare X22, 0
	040 JumpIfEqual {104}
	041 Move W8, [X22+24]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move W23, [X0]
	044 Move W24, W31
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Add X8, X22, W24
	047 Move X21, [X8+32]
	048 Compare X21, 0
	049 JumpIfEqual {104}
	050 Move W1, [X21+84]
	051 Move X0, X20
	052 Move X2, X31
	053 Call 0x1E8A774
	054 Move X1, X0
	055 Move TEMP, X23
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {63}
	059 Move W2, [X20+52]
	060 Move X0, X21
	061 Move X3, X31
	062 Call Hitbox.SetColliderData, X0, X1, X2
	063 Move [X1+104], W31
	064 Move W8, [X22+24]
	065 Add W24, W24, 1
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X21, [X20+40]
	068 Compare X21, 0
	069 JumpIfEqual {104}
	070 Move X10, 0x2211000
	071 Move X8, [X21]
	072 Move X10, [X10+3944]
	073 Move W20, [X20+52]
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Move X1, [X10]
	076 Compare X9, 0
	077 JumpIfEqual {84}
	078 Move X10, [X8+176]
	079 Add X10, X10, 8
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract X9, X9, 1
	083 Add X10, X10, 16
	084 Move W2, 4
	085 Move X0, X21
	086 Call 0x1C5D788
	087 Move W9, [X10]
	088 Add W9, W9, 4
	089 Add X8, X8, W9
	090 Add X0, X8, 312
	091 Move X4, [X0]
	092 Move X3, [X0+8]
	093 Move X0, X21
	094 Move X1, X19
	095 Move W2, W20
	096 Move X20, [X31+48]
	097 Move X19, [X31+56]
	098 Move X22, [X31+32]
	099 Move X21, [X31+40]
	100 Move X24, [X31+16]
	101 Move X23, [X31+24]
	102 Move X30, [X31+64]
	103 CallNoReturn X4
	104 Call 0x1C17F20
	105 Call 0x1C17F28

Method: System.Void QueryBroadphase(Fusion.LagCompensation.Query query, System.Collections.Generic.HashSet`1<Fusion.HitboxRoot> broadphaseCandidates)

Disassembly:
	0x01EED280 B 0x1EED2A8
	0x01EED284 TBZ X0, 0x0, 0x1EED2A0
	0x01EED288 ADRP X8, 0xFFFFFFFFFFAAB000
	0x01EED28C ADD X8, X8, 0x5D8
	0x01EED290 B 0x1EED2A8
	0x01EED294 ADRP X8, 0xFFFFFFFFFFAAB000
	0x01EED298 ADD X8, X8, 0x674
	0x01EED29C B 0x1EED2A8
	0x01EED2A0 ADRP X8, 0xFFFFFFFFFFAAB000
	0x01EED2A4 ADD X8, X8, 0x5A4
	0x01EED2A8 STR X8, [X19 + 0x18]
	0x01EED2AC ADRP X8, 0xFFFFFFFFFFAAB000
	0x01EED2B0 ADD X8, X8, 0x504
	0x01EED2B4 STR X8, [X19 + 0x38]
	0x01EED2B8 LDP X20, X19, [X31 + 0x20]
	0x01EED2BC LDP X22, X21, [X31 + 0x10]
	0x01EED2C0 LDR X30, [X31], #0x30
	0x01EED2C4 RET
	0x01EED2C8 ADRP X1, 0xFFFFFFFFFEC2E000
	0x01EED2CC ADD X1, X1, 0xEE3
	0x01EED2D0 MOV X0, X31
	0x01EED2D4 BL 0x1C16F3C
	0x01EED2D8 MOV X1, X31
	0x01EED2DC BL 0x1C16DEC
	0x01EED2E0 LDR X8, [X0 + 0x40]
	0x01EED2E4 LDR X5, [X0 + 0x18]
	0x01EED2E8 LDR X4, [X0 + 0x28]
	0x01EED2EC MOV X0, X8
	0x01EED2F0 BR X5
	0x01EED2F4 SUB X31, X31, 0x30
	0x01EED2F8 STP X31, X30, [X31 + 0x18]
	0x01EED2FC STP X1, X2, [X31]
	0x01EED300 STR X3, [X31 + 0x10]
	0x01EED304 ADD X1, X31, 0x0
	0x01EED308 MOV X2, X4
	0x01EED30C MOV X3, X5
	0x01EED310 BL 0x1C16CB0
	0x01EED314 LDR X30, [X31 + 0x20]
	0x01EED318 ADD X31, X31, 0x30
	0x01EED31C RET
	0x01EED320 MOV X0, X1
	0x01EED324 MOV X1, X31
	0x01EED328 B 0x1C16CB4
	0x01EED32C LDR V0, [X1]
	0x01EED330 LDR V1, [X1 + 0x8]
	0x01EED334 STR D0, [X0]
	0x01EED338 STR S1, [X0 + 0x8]
	0x01EED33C LDUR V0, [X1 + 0xC]
	0x01EED340 LDR V1, [X1 + 0x14]
	0x01EED344 STUR D0, [X0 + 0xC]
	0x01EED348 STR S1, [X0 + 0x14]
	0x01EED34C LDR V0, [X1]
	0x01EED350 LDR V1, [X1 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x24ED000
	007 Move W8, [X22+1469]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2211000
	016 Move X0, [X0+3944]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1469], W8
	020 Compare X20, 0
	021 JumpIfEqual {61}
	022 Move W0, [X20+24]
	023 Move X21, [X21+40]
	024 Move X1, X31
	025 Call LayerMask.op_Implicit, X0
	026 Compare X21, 0
	027 JumpIfEqual {61}
	028 Move X10, 0x2211000
	029 Move X8, [X21]
	030 Move X10, [X10+3944]
	031 Move W22, W0
	032 NotImplemented "Instruction LDRH not yet implemented."
	033 Move X1, [X10]
	034 Compare X9, 0
	035 JumpIfEqual {42}
	036 Move X10, [X8+176]
	037 Add X10, X10, 8
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Subtract X9, X9, 1
	041 Add X10, X10, 16
	042 Move W2, 1
	043 Move X0, X21
	044 Call 0x1C5D788
	045 Move W9, [X10]
	046 Add W9, W9, 1
	047 Add X8, X8, W9
	048 Add X0, X8, 312
	049 Move X5, [X0]
	050 Move X4, [X0+8]
	051 Move X0, X21
	052 Move X1, X20
	053 Move X2, X19
	054 Move W3, W22
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 CallNoReturn X5
	061 Call 0x1C17F20

Method: System.Void ProcessBroadphaseRootCandidates(Fusion.LagCompensation.Query query, Fusion.LagCompensation.IHitboxColliderContainer fromContainer, System.Collections.Generic.HashSet`1<Fusion.HitboxRoot> rootCandidates, System.Collections.Generic.HashSet`1<System.Int32> processedColliderIndices, Fusion.LagCompensation.IHitboxColliderContainer toContainer = null)

Disassembly:
	0x01EED354 LDUR V2, [X1 + 0xC]
	0x01EED358 LDR V3, [X1 + 0x14]
	0x01EED35C FSUB V0.2S, V0.2S, V2.2S
	0x01EED360 FSUB S1, S1, S3
	0x01EED364 STR D0, [X0 + 0x18]
	0x01EED368 STR S1, [X0 + 0x20]
	0x01EED36C LDR V0, [X1]
	0x01EED370 LDR V1, [X1 + 0x8]
	0x01EED374 LDUR V2, [X1 + 0xC]
	0x01EED378 LDR V3, [X1 + 0x14]
	0x01EED37C FADD V0.2S, V0.2S, V2.2S
	0x01EED380 FADD S1, S1, S3
	0x01EED384 STUR D0, [X0 + 0x24]
	0x01EED388 STR S1, [X0 + 0x2C]
	0x01EED38C RET
	0x01EED390 STP S0, S1, [X0]
	0x01EED394 STP S2, S3, [X0 + 0x8]
	0x01EED398 FSUB S6, S0, S3
	0x01EED39C FSUB S7, S1, S4
	0x01EED3A0 FSUB S16, S2, S5
	0x01EED3A4 FADD S0, S0, S3
	0x01EED3A8 FADD S1, S1, S4
	0x01EED3AC FADD S2, S2, S5
	0x01EED3B0 STP S4, S5, [X0 + 0x10]
	0x01EED3B4 STP S6, S7, [X0 + 0x18]
	0x01EED3B8 STP S16, S0, [X0 + 0x20]
	0x01EED3BC STP S1, S2, [X0 + 0x28]
	0x01EED3C0 RET
	0x01EED3C4 LDP V1, V0, [X1 + 0x10]
	0x01EED3C8 LDR V2, [X1]
	0x01EED3CC LDR X8, [X1 + 0x30]
	0x01EED3D0 STP V1, V0, [X0 + 0x10]
	0x01EED3D4 STR V2, [X0]
	0x01EED3D8 STP X8, X2, [X0 + 0x30]
	0x01EED3DC RET
	0x01EED3E0 SUB X31, X31, 0x1C0
	0x01EED3E4 STP D15, D14, [X31 + 0x140]
	0x01EED3E8 STP D13, D12, [X31 + 0x150]
	0x01EED3EC STP D11, D10, [X31 + 0x160]
	0x01EED3F0 STP D9, D8, [X31 + 0x170]
	0x01EED3F4 STR X29, [X31 + 0x180]
	0x01EED3F8 STP X30, X23, [X31 + 0x190]
	0x01EED3FC STP X22, X21, [X31 + 0x1A0]
	0x01EED400 STP X20, X19, [X31 + 0x1B0]
	0x01EED404 ADRP X23, 0x24EC000
	0x01EED408 ADRP X22, 0x220B000
	0x01EED40C ADRP X21, 0x2210000
	0x01EED410 LDRB W8, [X23 + 0x5BF]
	0x01EED414 LDR X22, [X22 + 0x138]
	0x01EED418 LDR X21, [X21 + 0xDF0]
	0x01EED41C MOV X20, X1
	0x01EED420 MOV X19, X0
	0x01EED424 TBNZ X8, 0x0, 0x1EED448
	0x01EED428 ADRP X0, 0x2210000
	0x01EED42C LDR X0, [X0 + 0xDF0]
	0x01EED430 BL 0x1C16CF4
	0x01EED434 ADRP X0, 0x220B000
	0x01EED438 LDR X0, [X0 + 0x138]
	0x01EED43C BL 0x1C16CF4
	0x01EED440 MOVZ W8, 0x1
	0x01EED444 STRB W8, [X23 + 0x5BF]
	0x01EED448 MOV X0, X19
	0x01EED44C MOV X1, X20
	0x01EED450 BL 0x1EED52C
	0x01EED454 LDR V0, [X20 + 0x5]
	0x01EED458 STR V0, [X19 + 0x6]
	0x01EED45C LDR W8, [X20 + 0x4C]
	0x01EED460 LDUR X9, [X20 + 0x44]
	0x01EED464 STR W8, [X19 + 0x5C]
	0x01EED468 STUR X9, [X19 + 0x54]
	0x01EED46C LDR W8, [X20 + 0x40]
	0x01EED470 LDR X9, [X20 + 0x38]
	0x01EED474 STR W8, [X19 + 0x50]
	0x01EED478 STR X9, [X19 + 0x48]
	0x01EED47C LDR W1, [X20 + 0x60]
	0x01EED480 LDR X0, [X22]
	0x01EED484 BL 0x1C16D6C
	0x01EED488 STR X0, [X19 + 0x70]
	0x01EED48C LDR W1, [X20 + 0x60]
	0x01EED490 LDR X0, [X21]
	0x01EED494 BL 0x1C16D6C
	0x01EED498 LDP S8, S9, [X19 + 0x48]
	0x01EED49C LDR V10, [X19 + 0x50]
	0x01EED4A0 LDP S11, S12, [X19 + 0x64]
	0x01EED4A4 LDR V13, [X19 + 0x6C]
	0x01EED4A8 LDUR X20, [X19 + 0x54]
	0x01EED4AC LDP S15, S14, [X19 + 0x5C]
	0x01EED4B0 STR X0, [X19 + 0x78]
	0x01EED4B4 ADD X0, X31, 0x10
	0x01EED4B8 MOVZ W2, 0x12C
	0x01EED4BC MOV W1, W31
	0x01EED4C0 BL 0x3EB1B10
	0x01EED4C4 ADD X0, X31, 0x10
	0x01EED4C8 MOV V0.16B, V8.16B
	0x01EED4CC MOV V1.16B, V9.16B
	0x01EED4D0 MOV V2.16B, V10.16B
	0x01EED4D4 MOV V3.16B, V14.16B
	0x01EED4D8 MOV V4.16B, V11.16B
	0x01EED4DC MOV V5.16B, V12.16B
	0x01EED4E0 MOV V6.16B, V13.16B
	0x01EED4E4 MOV X1, X31
	0x01EED4E8 STR S15, [X31 + 0x8]
	0x01EED4EC STR X20, [X31]
	0x01EED4F0 BL 0x1EE9030
	0x01EED4F4 ADD X0, X19, 0xA4
	0x01EED4F8 ADD X1, X31, 0x10
	0x01EED4FC MOVZ W2, 0x12C
	0x01EED500 BL 0x3EB1AC0
	0x01EED504 LDP X20, X19, [X31 + 0x1B0]
	0x01EED508 LDP X22, X21, [X31 + 0x1A0]
	0x01EED50C LDP X30, X23, [X31 + 0x190]
	0x01EED510 LDR X29, [X31 + 0x180]
	0x01EED514 LDP D9, D8, [X31 + 0x170]
	0x01EED518 LDP D11, D10, [X31 + 0x160]
	0x01EED51C LDP D13, D12, [X31 + 0x150]
	0x01EED520 LDP D15, D14, [X31 + 0x140]
	0x01EED524 ADD X31, X31, 0x1C0
	0x01EED528 RET
	0x01EED52C STR X30, [X31 - 0x30]!
	0x01EED530 STP X22, X21, [X31 + 0x10]
	0x01EED534 STP X20, X19, [X31 + 0x20]
	0x01EED538 ADRP X22, 0x24EC000
	0x01EED53C ADRP X21, 0x2207000
	0x01EED540 LDRB W8, [X22 + 0x5C2]
	0x01EED544 LDR X21, [X21 + 0x470]
	0x01EED548 MOV X20, X1
	0x01EED54C MOV X19, X0
	0x01EED550 TBNZ X8, 0x0, 0x1EED568
	0x01EED554 ADRP X0, 0x2207000
	0x01EED558 LDR X0, [X0 + 0x470]
	0x01EED55C BL 0x1C16CF4
	0x01EED560 MOVZ W8, 0x1
	0x01EED564 STRB W8, [X22 + 0x5C2]
	0x01EED568 MOV X0, X19
	0x01EED56C MOV X1, X31
	0x01EED570 BL 0x33BDD8C
	0x01EED574 LDR X8, [X20 + 0x28]
	0x01EED578 ADD X0, X31, 0x8
	0x01EED57C STR X8, [X19 + 0x40]
	0x01EED580 LDR W8, [X20 + 0x4]
	0x01EED584 STR W8, [X19 + 0x10]
	0x01EED588 LDR W8, [X20 + 0x8]
	0x01EED58C STR W8, [X19 + 0x18]
	0x01EED590 LDR X8, [X20 + 0x30]
	0x01EED594 STR X8, [X19 + 0x28]
	0x01EED598 LDR W8, [X20]
	0x01EED59C STR W8, [X19 + 0x14]
	0x01EED5A0 LDUR X8, [X20 + 0x14]
	0x01EED5A4 STR X8, [X19 + 0x38]
	0x01EED5A8 LDR W8, [X20 + 0xC]
	0x01EED5AC STR W8, [X19 + 0x1C]
	0x01EED5B0 LDUR X8, [X20 + 0x1C]
	0x01EED5B4 STR X8, [X19 + 0x30]
	0x01EED5B8 LDR W1, [X20 + 0x10]
	0x01EED5BC LDR X2, [X21]
	0x01EED5C0 STR X31, [X31 + 0x8]
	0x01EED5C4 BL 0x24341FC
	0x01EED5C8 LDR X8, [X31 + 0x8]
	0x01EED5CC LDP X22, X21, [X31 + 0x10]
	0x01EED5D0 STR X8, [X19 + 0x20]
	0x01EED5D4 LDP X20, X19, [X31 + 0x20]
	0x01EED5D8 LDR X30, [X31], #0x30
	0x01EED5DC RET
	0x01EED5E0 SUB X31, X31, 0x1B0
	0x01EED5E4 STP D15, D14, [X31 + 0x140]
	0x01EED5E8 STP D13, D12, [X31 + 0x150]
	0x01EED5EC STP D11, D10, [X31 + 0x160]
	0x01EED5F0 STP D9, D8, [X31 + 0x170]
	0x01EED5F4 STP X29, X30, [X31 + 0x180]
	0x01EED5F8 STP X22, X21, [X31 + 0x190]
	0x01EED5FC STP X20, X19, [X31 + 0x1A0]
	0x01EED600 MOV X19, X3
	0x01EED604 MOV X20, X2
	0x01EED608 MOV X21, X1
	0x01EED60C MOV X22, X0
	0x01EED610 BL 0x1EED52C
	0x01EED614 LDR V0, [X21 + 0x5]
	0x01EED618 ADD X0, X31, 0x10
	0x01EED61C MOVZ W2, 0x12C
	0x01EED620 MOV W1, W31
	0x01EED624 STR V0, [X22 + 0x6]
	0x01EED628 LDR W8, [X21 + 0x4C]
	0x01EED62C LDUR X9, [X21 + 0x44]
	0x01EED630 LDP S8, S9, [X22 + 0x64]
	0x01EED634 LDR V10, [X22 + 0x6C]
	0x01EED638 STR W8, [X22 + 0x5C]
	0x01EED63C STUR X9, [X22 + 0x54]
	0x01EED640 LDR X8, [X21 + 0x38]
	0x01EED644 LDR W9, [X21 + 0x40]
	0x01EED648 LDUR X21, [X22 + 0x54]
	0x01EED64C LDP S15, S14, [X22 + 0x5C]
	0x01EED650 STR X8, [X22 + 0x48]
	0x01EED654 STR W9, [X22 + 0x50]
	0x01EED658 LDP S11, S12, [X22 + 0x48]
	0x01EED65C LDR V13, [X22 + 0x50]
	0x01EED660 STP X20, X19, [X22 + 0x70]
	0x01EED664 BL 0x3EB1B10
	0x01EED668 ADD X0, X31, 0x10
	0x01EED66C MOV V0.16B, V11.16B
	0x01EED670 MOV V1.16B, V12.16B
	0x01EED674 MOV V2.16B, V13.16B
	0x01EED678 MOV V3.16B, V14.16B
	0x01EED67C MOV V4.16B, V8.16B
	0x01EED680 MOV V5.16B, V9.16B
	0x01EED684 MOV V6.16B, V10.16B
	0x01EED688 MOV X1, X31
	0x01EED68C STR S15, [X31 + 0x8]
	0x01EED690 STR X21, [X31]
	0x01EED694 BL 0x1EE9030
	0x01EED698 ADD X0, X22, 0xA4
	0x01EED69C ADD X1, X31, 0x10
	0x01EED6A0 MOVZ W2, 0x12C
	0x01EED6A4 BL 0x3EB1AC0
	0x01EED6A8 LDP X20, X19, [X31 + 0x1A0]
	0x01EED6AC LDP X22, X21, [X31 + 0x190]
	0x01EED6B0 LDP X29, X30, [X31 + 0x180]
	0x01EED6B4 LDP D9, D8, [X31 + 0x170]
	0x01EED6B8 LDP D11, D10, [X31 + 0x160]
	0x01EED6BC LDP D13, D12, [X31 + 0x150]
	0x01EED6C0 LDP D15, D14, [X31 + 0x140]
	0x01EED6C4 ADD X31, X31, 0x1B0
	0x01EED6C8 RET
	0x01EED6CC FSUB S6, S0, S3
	0x01EED6D0 FADD S0, S0, S3
	0x01EED6D4 FSUB S3, S1, S4
	0x01EED6D8 FADD S1, S1, S4
	0x01EED6DC FSUB S4, S2, S5
	0x01EED6E0 FADD S2, S2, S5
	0x01EED6E4 STP S6, S3, [X0 + 0x8C]
	0x01EED6E8 STP S4, S0, [X0 + 0x94]
	0x01EED6EC STP S1, S2, [X0 + 0x9C]
	0x01EED6F0 RET
	0x01EED6F4 LDUR X8, [X0 + 0x54]
	0x01EED6F8 LDP S1, S3, [X0 + 0x48]
	0x01EED6FC LDR V5, [X0 + 0x50]
	0x01EED700 STR X8, [X0 + 0x80]
	0x01EED704 LDR W8, [X0 + 0x5C]
	0x01EED708 LDP S4, S6, [X0 + 0x80]
	0x01EED70C STR W8, [X0 + 0x88]
	0x01EED710 LDR V7, [X0 + 0x88]
	0x01EED714 FSUB S16, S1, S4
	0x01EED718 FSUB S2, S3, S6
	0x01EED71C FADD S4, S1, S4
	0x01EED720 FSUB S0, S5, S7
	0x01EED724 FADD S3, S3, S6
	0x01EED728 FADD S1, S5, S7
	0x01EED72C STP S16, S2, [X0 + 0x8C]
	0x01EED730 STP S0, S4, [X0 + 0x94]
	0x01EED734 STP S3, S1, [X0 + 0x9C]
	0x01EED738 LDR V5, [X1 + 0x24]
	0x01EED73C FCMP S16, S5
	0x01EED740 B.HI 0x1EED774
	0x01EED744 LDR V5, [X1 + 0x18]
	0x01EED748 FCMP S4, S5
	0x01EED74C B.LT 0x1EED774
	0x01EED750 LDR V4, [X1 + 0x28]
	0x01EED754 FCMP S2, S4
	0x01EED758 B.HI 0x1EED774
	0x01EED75C LDR V2, [X1 + 0x1C]
	0x01EED760 FCMP S3, S2
	0x01EED764 B.LT 0x1EED774
	0x01EED768 LDR V2, [X1 + 0x2C]
	0x01EED76C FCMP S0, S2
	0x01EED770 B.LS 0x1EED77C
	0x01EED774 MOV W0, W31
	0x01EED778 RET
	0x01EED77C LDR V0, [X1 + 0x20]
	0x01EED780 FCMP S1, S0
	0x01EED784 CSET W0, GE
	0x01EED788 RET
	0x01EED78C STP X29, X30, [X31 - 0x60]!
	0x01EED790 STP X28, X27, [X31 + 0x10]
	0x01EED794 STP X26, X25, [X31 + 0x20]
	0x01EED798 STP X24, X23, [X31 + 0x30]
	0x01EED79C STP X22, X21, [X31 + 0x40]
	0x01EED7A0 STP X20, X19, [X31 + 0x50]
	0x01EED7A4 SUB X31, X31, 0x1D0
	0x01EED7A8 ADRP X23, 0x24EC000
	0x01EED7AC LDRB W8, [X23 + 0x5C0]
	0x01EED7B0 MOV X19, X3
	0x01EED7B4 MOV X22, X2
	0x01EED7B8 MOV X20, X1
	0x01EED7BC MOV X21, X0
	0x01EED7C0 TBNZ X8, 0x0, 0x1EED814
	0x01EED7C4 ADRP X0, 0x220D000
	0x01EED7C8 LDR X0, [X0 + 0x830]
	0x01EED7CC BL 0x1C16CF4
	0x01EED7D0 ADRP X0, 0x220D000
	0x01EED7D4 LDR X0, [X0 + 0x838]
	0x01EED7D8 BL 0x1C16CF4
	0x01EED7DC ADRP X0, 0x220D000
	0x01EED7E0 LDR X0, [X0 + 0x840]
	0x01EED7E4 BL 0x1C16CF4
	0x01EED7E8 ADRP X0, 0x220D000
	0x01EED7EC LDR X0, [X0 + 0x848]
	0x01EED7F0 BL 0x1C16CF4
	0x01EED7F4 ADRP X0, 0x2210000
	0x01EED7F8 LDR X0, [X0 + 0xE78]
	0x01EED7FC BL 0x1C16CF4
	0x01EED800 ADRP X0, 0x2213000
	0x01EED804 LDR X0, [X0 + 0x5B8]
	0x01EED808 BL 0x1C16CF4
	0x01EED80C MOVZ W8, 0x1
	0x01EED810 STRB W8, [X23 + 0x5C0]
	0x01EED814 ADD X8, X31, 0x50
	0x01EED818 MOV X0, X21
	0x01EED81C STP X31, X31, [X31 + 0x1A0]
	0x01EED820 STR X31, [X31 + 0x1B0]
	0x01EED824 STR W31, [X31 + 0x198]
	0x01EED828 STR X31, [X31 + 0x190]
	0x01EED82C STR W31, [X31 + 0x188]
	0x01EED830 STR X31, [X31 + 0x180]
	0x01EED834 ADD X28, X31, 0x50
	0x01EED838 BL 0x1EEDB38
	0x01EED83C ADD X21, X21, 0xA4
	0x01EED840 ADD X1, X31, 0x50
	0x01EED844 MOVZ W2, 0x12C
	0x01EED848 MOV X0, X21
	0x01EED84C BL 0x3EB1AC0
	0x01EED850 CBZ X22, 0x1EEDA88
	0x01EED854 ADRP X8, 0x220D000
	0x01EED858 LDR X8, [X8 + 0x848]
	0x01EED85C ADRP X24, 0x220D000
	0x01EED860 LDR X24, [X24 + 0x838]
	0x01EED864 ADRP X25, 0x2210000
	0x01EED868 LDR X1, [X8]
	0x01EED86C ADRP X26, 0x2213000
	0x01EED870 LDR X25, [X25 + 0xE78]
	0x01EED874 LDR X26, [X26 + 0x5B8]
	0x01EED878 ADD X8, X31, 0x30
	0x01EED87C MOV X0, X22
	0x01EED880 BL 0x2DAAA30
	0x01EED884 LDR V0, [X31 + 0x3]
	0x01EED888 LDR X8, [X31 + 0x40]
	0x01EED88C MOV W23, W31
	0x01EED890 ADD X27, X28, 0x28
	0x01EED894 ADD X28, X28, 0x34
	0x01EED898 STR V0, [X31 + 0x1A]
	0x01EED89C STR X8, [X31 + 0x1B0]
	0x01EED8A0 MOVZ W29, 0x50
	0x01EED8A4 LDR X1, [X24]
	0x01EED8A8 ADD X0, X31, 0x1A0
	0x01EED8AC BL 0x2BBDA6C
	0x01EED8B0 TBZ X0, 0x0, 0x1EEDA4C
	0x01EED8B4 CBZ X20, 0x1EEDA84
	0x01EED8B8 LDR X8, [X20]
	0x01EED8BC LDR W22, [X31 + 0x1B0]
	0x01EED8C0 LDR X1, [X25]
	0x01EED8C4 LDRH W9, [X8 + 0x12E]
	0x01EED8C8 CBZ X9, 0x1EED8EC
	0x01EED8CC LDR X10, [X8 + 0xB0]
	0x01EED8D0 ADD X10, X10, 0x8
	0x01EED8D4 LDUR X11, [X10 - 0x8]
	0x01EED8D8 CMP X11, X1
	0x01EED8DC B.EQ 0x1EED8FC
	0x01EED8E0 SUBS X9, X9, 0x1
	0x01EED8E4 ADD X10, X10, 0x10
	0x01EED8E8 B.NE 0x1EED8D4
	0x01EED8EC MOVZ W2, 0x2
	0x01EED8F0 MOV X0, X20
	0x01EED8F4 BL 0x1C5C788
	0x01EED8F8 B 0x1EED90C
	0x01EED8FC LDR W9, [X10]
	0x01EED900 ADD W9, W9, 0x2
	0x01EED904 ADD X8, X8, W9, 0x4, SXTW
	0x01EED908 ADD X0, X8, 0x138
	0x01EED90C LDP X8, X2, [X0]
	0x01EED910 MOV X0, X20
	0x01EED914 MOV W1, W22
	0x01EED918 BLR X8
	0x01EED91C MOV X22, X0
	0x01EED920 ADD X4, X31, 0x190
	0x01EED924 ADD X5, X31, 0x180
	0x01EED928 MOVZ W3, 0x1
	0x01EED92C MOV X1, X21
	0x01EED930 MOV X2, X0
	0x01EED934 BL 0x1EEDD98
	0x01EED938 TBZ X0, 0x0, 0x1EED8A4
	0x01EED93C LDR W10, [X22 + 0x1C0]
	0x01EED940 LDR X11, [X22 + 0x1B8]
	0x01EED944 LDR X9, [X22 + 0x70]
	0x01EED948 LDR W8, [X22 + 0x7C]
	0x01EED94C STR W10, [X31 + 0x28]
	0x01EED950 STR X11, [X31 + 0x20]
	0x01EED954 ADD X10, X22, 0x1C4
	0x01EED958 LDR V4, [X31 + 0x190]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X20, 0x24ED000
	015 Move W8, [X20+1470]
	016 Move X19, X4
	017 Move X22, X3
	018 Move X24, X2
	019 Move X21, X1
	020 Move X23, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {57}
	025 Move X0, 0x2214000
	026 Move X0, [X0+1408]
	027 Call 0x1C17CF4
	028 Move X0, 0x2214000
	029 Move X0, [X0+1416]
	030 Call 0x1C17CF4
	031 Move X0, 0x2214000
	032 Move X0, [X0+1424]
	033 Call 0x1C17CF4
	034 Move X0, 0x2209000
	035 Move X0, [X0+2520]
	036 Call 0x1C17CF4
	037 Move X0, 0x2214000
	038 Move X0, [X0+1432]
	039 Call 0x1C17CF4
	040 Move X0, 0x2214000
	041 Move X0, [X0+1440]
	042 Call 0x1C17CF4
	043 Move X0, 0x2211000
	044 Move X0, [X0+3704]
	045 Call 0x1C17CF4
	046 Move X0, 0x220B000
	047 Move X0, [X0+280]
	048 Call 0x1C17CF4
	049 Move X0, 0x2207000
	050 Move X0, [X0+1432]
	051 Call 0x1C17CF4
	052 Move X0, 0x220A000
	053 Move X0, [X0+3648]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X20+1470], W8
	057 Move [X31+64], X31
	058 Move [X31+72], X31
	059 Move [X31+80], X31
	060 Move [X31+56], X31
	061 Compare X23, 0
	062 JumpIfEqual {370}
	063 Move X9, 0x220A000
	064 Move W8, [X23+20]
	065 Move X9, [X9+3648]
	066 Move TEMP, X8
	067 And TEMP, TEMP, 8
	068 Compare TEMP, 8
	069 JumpIfEqual {71}
	070 Move [X31+12], W31
	071 Move X0, [X9]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move W8, [X23+28]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 NotImplemented "Instruction CSET not yet implemented."
	079 Move [X31+12], W8
	080 Move [X31+24], X23
	081 Compare X19, 0
	082 JumpIfEqual {87}
	083 Move W8, [X23+20]
	084 Move W23, W8
	085 ShiftRight W23, 2
	086 And W23, W23, 3
	087 Move W23, W31
	088 Move [X31+16], X22
	089 Compare X24, 0
	090 JumpIfEqual {370}
	091 Move X8, 0x2214000
	092 Move X8, [X8+1432]
	093 Move X29, 0x2211000
	094 Move X29, [X29+3704]
	095 Move X0, X24
	096 Move X1, [X8]
	097 Add X8, X31, 32
	098 Call HashSet`1<Object>.GetEnumerator, X0
	099 Move X8, [X31+48]
	100 Move V0, [X31+2]
	101 Move [X31+80], X8
	102 Move X8, [X31+24]
	103 Move [X31+4], V0
	104 Add X8, X8, 48
	105 Move [X31], X8
	106 Move X8, 0x2214000
	107 Move X8, [X8+1416]
	108 Move X1, [X8]
	109 Add X0, X31, 64
	110 Call Enumerator<Object>.MoveNext, X0
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {340}
	115 Move X20, [X31+80]
	116 Move W8, [X31+12]
	117 Compare W8, 0
	118 JumpIfEqual {137}
	119 Compare X20, 0
	120 JumpIfEqual {368}
	121 Move X0, [X20+64]
	122 Compare X0, 0
	123 JumpIfEqual {367}
	124 Move X1, X31
	125 Call NetworkObject.get_InputAuthority, X0
	126 Move X8, 0x220A000
	127 Move X8, [X8+3648]
	128 Move X24, X0
	129 Move X9, [X31+24]
	130 Move X0, [X8]
	131 Move W22, [X9+28]
	132 Move W8, [X0+224]
	133 Compare W8, 0
	134 JumpIfNotEqual {136}
	135 Call 0x1C17DFC
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Compare X20, 0
	138 JumpIfEqual {369}
	139 Move X22, [X20+168]
	140 Compare X22, 0
	141 JumpIfEqual {366}
	142 Move W8, [X22+24]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move W20, W31
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Add X8, X22, W20
	147 Move X9, [X8+32]
	148 Compare X9, 0
	149 JumpIfEqual {359}
	150 Compare X21, 0
	151 JumpIfEqual {360}
	152 Move X8, [X21]
	153 Move W25, [X9+84]
	154 Move X1, [X29]
	155 NotImplemented "Instruction LDRH not yet implemented."
	156 Compare X9, 0
	157 JumpIfEqual {164}
	158 Move X10, [X8+176]
	159 Add X10, X10, 8
	160 NotImplemented "Instruction LDUR not yet implemented."
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Subtract X9, X9, 1
	163 Add X10, X10, 16
	164 Move W2, 2
	165 Move X0, X21
	166 Call 0x1C5D788
	167 Move W9, [X10]
	168 Add W9, W9, 2
	169 Add X8, X8, W9
	170 Add X0, X8, 312
	171 Move X8, [X0]
	172 Move X2, [X0+8]
	173 Move X0, X21
	174 Move W1, W25
	175 NotImplemented "Instruction BLR not yet implemented."
	176 Move W8, [X0+104]
	177 Move X24, X0
	178 Compare W8, 0
	179 JumpIfEqual {200}
	180 Move X8, [X31+24]
	181 Move W0, [X8+24]
	182 Move X1, X31
	183 Call LayerMask.op_Implicit, X0
	184 Move W8, [X24+120]
	185 And W31, W8, W0
	186 Move W8, [X24+128]
	187 Compare W8, 0
	188 JumpIfEqual {200}
	189 Move X0, [X31+16]
	190 Compare X0, 0
	191 JumpIfEqual {363}
	192 Move X8, 0x2209000
	193 Move X8, [X8+2520]
	194 Move X2, [X8]
	195 Move W1, W25
	196 Call HashSet`1<Int32>.Add, X0, X1
	197 Move W27, W31
	198 Compare W23, 0
	199 JumpIfNotEqual {203}
	200 Move W27, 1
	201 Compare W23, 0
	202 JumpIfEqual {337}
	203 Compare X19, 0
	204 JumpIfEqual {362}
	205 Move X8, [X19]
	206 Move X1, [X29]
	207 NotImplemented "Instruction LDRH not yet implemented."
	208 Compare X9, 0
	209 JumpIfEqual {216}
	210 Move X10, [X8+176]
	211 Add X10, X10, 8
	212 NotImplemented "Instruction LDUR not yet implemented."
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Subtract X9, X9, 1
	215 Add X10, X10, 16
	216 Move W2, 2
	217 Move X0, X19
	218 Call 0x1C5D788
	219 Move W9, [X10]
	220 Add W9, W9, 2
	221 Add X8, X8, W9
	222 Add X0, X8, 312
	223 Move X8, [X0]
	224 Move X2, [X0+8]
	225 Move X0, X19
	226 Move W1, W25
	227 NotImplemented "Instruction BLR not yet implemented."
	228 Move W8, [X0+104]
	229 Move X26, X0
	230 Compare W8, 0
	231 JumpIfEqual {337}
	232 Move W8, [X26+128]
	233 Compare W8, 0
	234 JumpIfEqual {337}
	235 Move TEMP, X27
	236 And TEMP, TEMP, 1
	237 Compare TEMP, 1
	238 JumpIfEqual {256}
	239 Move X8, 0x2207000
	240 Move X8, [X8+1432]
	241 Move X27, [X24+112]
	242 Move X28, [X26+112]
	243 Move X0, [X8]
	244 Move W8, [X0+224]
	245 Compare W8, 0
	246 JumpIfNotEqual {248}
	247 Call 0x1C17DFC
	248 Move X0, X27
	249 Move X1, X28
	250 Move X2, X31
	251 Call Object.op_Inequality, X0, X1
	252 Move TEMP, X0
	253 And TEMP, TEMP, 1
	254 Compare TEMP, 1
	255 JumpIfNotEqual {270}
	256 Move X8, [X21]
	257 Move X1, [X29]
	258 NotImplemented "Instruction LDRH not yet implemented."
	259 Compare X9, 0
	260 JumpIfEqual {267}
	261 Move X10, [X8+176]
	262 Add X10, X10, 8
	263 NotImplemented "Instruction LDUR not yet implemented."
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Subtract X9, X9, 1
	266 Add X10, X10, 16
	267 Move W2, 1
	268 Move X0, X21
	269 Call 0x1C5D788
	270 Move X0, [X31+16]
	271 Compare X0, 0
	272 JumpIfEqual {365}
	273 Move X8, 0x2214000
	274 Move X8, [X8+1440]
	275 Move X2, [X8]
	276 Move W1, W25
	277 Call HashSet`1<Int32>.Remove, X0, X1
	278 Move X8, [X21]
	279 Move X1, [X29]
	280 NotImplemented "Instruction LDRH not yet implemented."
	281 Compare X9, 0
	282 JumpIfEqual {289}
	283 Move X10, [X8+176]
	284 Add X10, X10, 8
	285 NotImplemented "Instruction LDUR not yet implemented."
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Subtract X9, X9, 1
	288 Add X10, X10, 16
	289 Move W2, 1
	290 Move X0, X21
	291 Call 0x1C5D788
	292 Move W9, [X10]
	293 Add W9, W9, 1
	294 Add X8, X8, W9
	295 Add X0, X8, 312
	296 Move X8, [X0]
	297 Move X2, [X0+8]
	298 Add X1, X31, 60
	299 Move X0, X21
	300 NotImplemented "Instruction BLR not yet implemented."
	301 Move W2, 472
	302 Move X1, X26
	303 Call 0x3EB2B30
	304 Move X0, [X31+16]
	305 Compare X0, 0
	306 JumpIfEqual {364}
	307 Move X8, 0x2209000
	308 Move W1, [X31+60]
	309 Move X8, [X8+2520]
	310 Move X2, [X8]
	311 Call HashSet`1<Int32>.Add, X0, X1
	312 Move W9, [X10]
	313 Add W9, W9, 1
	314 Add X8, X8, W9
	315 Add X0, X8, 312
	316 Move X8, [X0]
	317 Move X2, [X0+8]
	318 Add X1, X31, 56
	319 Move X0, X21
	320 NotImplemented "Instruction BLR not yet implemented."
	321 Move X8, 0x220B000
	322 Move X8, [X8+280]
	323 Move X25, X0
	324 Move X1, [X8]
	325 Move X0, [X31]
	326 Call Nullable`1<Single>.get_Value, X0
	327 Move X0, X24
	328 Move X1, X26
	329 Move X2, X25
	330 Call HitboxCollider.Lerp, X0, X1, V0, X2
	331 Move X8, 0x2209000
	332 Move W1, [X31+56]
	333 Move X8, [X8+2520]
	334 Move X2, [X8]
	335 Move X0, [X31+16]
	336 Call HashSet`1<Int32>.Add, X0, X1
	337 Move W8, [X22+24]
	338 Add W20, W20, 1
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Move X8, 0x2214000
	341 Move X8, [X8+1408]
	342 Add X0, X31, 64
	343 Move X1, [X8]
	344 Call Enumerator<Object>.Dispose, X0
	345 Move X20, [X31+176]
	346 Move X19, [X31+184]
	347 Move X22, [X31+160]
	348 Move X21, [X31+168]
	349 Move X24, [X31+144]
	350 Move X23, [X31+152]
	351 Move X26, [X31+128]
	352 Move X25, [X31+136]
	353 Move X28, [X31+112]
	354 Move X27, [X31+120]
	355 Move X29, [X31+96]
	356 Move X30, [X31+104]
	357 Add X31, X31, 192
	358 Return 
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F28
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Call 0x1C17F20
	365 Call 0x1C17F20
	366 Call 0x1C17F20
	367 Call 0x1C17F20
	368 Call 0x1C17F20
	369 Call 0x1C17F20
	370 Call 0x1C17F20
	371 Move X19, X0
	372 NotImplemented "Instruction CMP not yet implemented."
	373 Move X0, X19
	374 Call 0x3EB2AD0
	375 Move X20, [X0]
	376 Call 0x3EB2AE0
	377 Move X8, 0x2214000
	378 Move X8, [X8+1408]
	379 Add X0, X31, 64
	380 Move X1, [X8]
	381 Call Enumerator<Object>.Dispose, X0
	382 Compare X20, 0
	383 JumpIfEqual {345}
	384 Move X0, X20
	385 Call 0x1C17F18
	386 Move X20, X31
	387 Move X19, X0
	388 Move X8, 0x2214000
	389 Move X8, [X8+1408]
	390 Move X1, [X8]
	391 Add X0, X31, 64
	392 Call Enumerator<Object>.Dispose, X0
	393 Compare X20, 0
	394 JumpIfNotEqual {397}
	395 Move X0, X19
	396 Call 0x1D2D690
	397 Move X0, X20
	398 Call 0x1C17F18
	399 Call 0x1991590

