Type: Fusion.LagCompensation.BVHNodeDrawInfo

Method: System.Void .ctor(Fusion.LagCompensation.HitboxBuffer buffer)

Disassembly:
	0x01EEA470 STR S11, [X19 + 0x8]
	0x01EEA474 STR S8, [X19 + 0x14]
	0x01EEA478 STUR D5, [X19 + 0xC]
	0x01EEA47C CBZ X20, 0x1EEA524
	0x01EEA480 LDR V1, [X20 + 0x44]
	0x01EEA484 FADD S0, S8, S8
	0x01EEA488 FADD V2.2S, V5.2S, V5.2S
	0x01EEA48C MOVI V3.2S, 0x3F, 0x18
	0x01EEA490 FMOV S4, 0.5
	0x00000000 INVALID

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: UnityEngine.Bounds get_Bounds()

Disassembly:
	0x01EEA498 FMUL S0, S0, S1
	0x00000000 INVALID
	0x01EEA4A0 FMUL S0, S0, S4
	0x01EEA4A4 FADD V1.2S, V5.2S, V1.2S
	0x01EEA4A8 FADD S0, S8, S0
	0x01EEA4AC STUR D1, [X19 + 0xC]
	0x01EEA4B0 STR S0, [X19 + 0x14]
	0x01EEA4B4 LDR X0, [X21]
	0x01EEA4B8 LDR W8, [X0 + 0xE0]
	0x01EEA4BC CBNZ W8, 0x1EEA4C4
	0x01EEA4C0 BL 0x1C16DFC
	0x01EEA4C4 LDR X8, [X19 + 0x10]
	0x01EEA4C8 LDR V0, [X19]
	0x01EEA4CC MOVI V1.2D, 0x0
	0x01EEA4D0 ADD X0, X31, 0x50
	0x01EEA4D4 ADD X1, X31, 0x30
	0x01EEA4D8 MOV X2, X31
	0x01EEA4DC STP V1, V1, [X31 + 0x60]
	0x01EEA4E0 STR X8, [X31 + 0x40]
	0x01EEA4E4 STR V0, [X31 + 0x3]
	0x01EEA4E8 STR V1, [X31 + 0x5]
	0x01EEA4EC BL 0x1EED32C
	0x01EEA4F0 LDP V1, V0, [X31 + 0x60]
	0x01EEA4F4 LDR V2, [X31 + 0x5]
	0x01EEA4F8 MOVZ W0, 0x1
	0x01EEA4FC STUR V0, [X19 + 0x38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X0, [X0+16]
	006 Compare X0, 0
	007 JumpIfEqual {29}
	008 Move X1, X31
	009 Move X19, X8
	010 Call HitboxBuffer.get_BVH, X0
	011 Compare X0, 0
	012 JumpIfEqual {29}
	013 Move X8, [X0+16]
	014 Compare X8, 0
	015 JumpIfEqual {29}
	016 NotImplemented "Instruction LDRSW not yet implemented."
	017 Move W10, [X8+24]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move W10, 120
	020 NotImplemented "Instruction MADD not yet implemented."
	021 Move X9, [X8+48]
	022 Move V0, [X8+2]
	023 Move [X19+16], X9
	024 Move [X19], V0
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return X0
	029 Call 0x1C17F20
	030 Call 0x1C17F28

Method: System.Int32 get_Depth()

Disassembly:
	0x01EEA500 STUR V1, [X19 + 0x28]
	0x01EEA504 STUR V2, [X19 + 0x18]
	0x01EEA508 LDP X20, X19, [X31 + 0xC0]
	0x01EEA50C LDP X30, X21, [X31 + 0xB0]
	0x01EEA510 LDP D9, D8, [X31 + 0xA0]
	0x01EEA514 LDP D11, D10, [X31 + 0x90]
	0x01EEA518 LDR V12, [X31 + 0x80]
	0x01EEA51C ADD X31, X31, 0xD0
	0x01EEA520 RET
	0x01EEA524 BL 0x1C16F20
	0x01EEA528 STR X30, [X31 - 0x40]!
	0x01EEA52C STP X24, X23, [X31 + 0x10]
	0x01EEA530 STP X22, X21, [X31 + 0x20]
	0x01EEA534 STP X20, X19, [X31 + 0x30]
	0x01EEA538 ADRP X23, 0x24EF000
	0x01EEA53C ADRP X24, 0x2216000
	0x01EEA540 ADRP X21, 0x2216000
	0x01EEA544 ADRP X22, 0x2216000
	0x01EEA548 LDRB W8, [X23 + 0x5AB]
	0x01EEA54C LDR X24, [X24 + 0x500]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+16]
	005 Compare X0, 0
	006 JumpIfEqual {23}
	007 Move X1, X31
	008 Call HitboxBuffer.get_BVH, X0
	009 Compare X0, 0
	010 JumpIfEqual {23}
	011 Move X8, [X0+16]
	012 Compare X8, 0
	013 JumpIfEqual {23}
	014 NotImplemented "Instruction LDRSW not yet implemented."
	015 Move W10, [X8+24]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W10, 120
	018 NotImplemented "Instruction MADD not yet implemented."
	019 Move W0, [X8+124]
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Return X0
	023 Call 0x1C17F20
	024 Call 0x1C17F28

Method: System.Int32 get_MaxDepth()

Disassembly:
	0x01EEA550 LDR X21, [X21 + 0x508]
	0x01EEA554 LDR X22, [X22 + 0x510]
	0x01EEA558 MOV X20, X1
	0x01EEA55C MOV X19, X0
	0x01EEA560 TBNZ X8, 0x0, 0x1EEA590
	0x01EEA564 ADRP X0, 0x2216000
	0x01EEA568 LDR X0, [X0 + 0x510]
	0x01EEA56C BL 0x1C16CF4
	0x01EEA570 ADRP X0, 0x2216000
	0x01EEA574 LDR X0, [X0 + 0x508]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {12}
	005 Move X1, X31
	006 Call HitboxBuffer.get_BVH, X0
	007 Compare X0, 0
	008 JumpIfEqual {12}
	009 Move W0, [X0+32]
	010 Move X30, [X31+16]
	011 Return X0
	012 Call 0x1C17F20

Method: Fusion.LagCompensation.BVHNodeDrawInfo FromBVHNode(ref Fusion.LagCompensation.BVHNode node)

Disassembly:
	0x01EEA578 BL 0x1C16CF4
	0x01EEA57C ADRP X0, 0x2216000
	0x01EEA580 LDR X0, [X0 + 0x500]
	0x01EEA584 BL 0x1C16CF4
	0x01EEA588 MOVZ W8, 0x1
	0x01EEA58C STRB W8, [X23 + 0x5AB]
	0x01EEA590 LDR X0, [X24]
	0x01EEA594 BL 0x1C16F10
	0x01EEA598 LDR X1, [X21]
	0x01EEA59C MOV X21, X0
	0x01EEA5A0 BL 0x25FFE8C
	0x01EEA5A4 MOV X0, X19
	0x01EEA5A8 MOV X1, X31
	0x01EEA5AC STR X21, [X19 + 0x20]
	0x01EEA5B0 BL 0x33BDD8C
	0x01EEA5B4 STR X20, [X19 + 0x10]
	0x01EEA5B8 LDR X0, [X22]
	0x01EEA5BC BL 0x1C16F10
	0x01EEA5C0 MOV X1, X20
	0x01EEA5C4 MOV X2, X31
	0x01EEA5C8 MOV X21, X0
	0x01EEA5CC BL 0x1EE9470
	0x01EEA5D0 STR X21, [X19 + 0x18]
	0x01EEA5D4 LDP X20, X19, [X31 + 0x30]
	0x01EEA5D8 LDP X22, X21, [X31 + 0x20]
	0x01EEA5DC LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x24F0000
	007 Move X22, 0x2217000
	008 Move W8, [X21+1429]
	009 Move X22, [X22+848]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2217000
	017 Move X0, [X0+848]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1429], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W8, [X20+72]
	027 Move X0, X19
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move [X19+24], W8
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X30, [X31+48]
	034 Return X0

