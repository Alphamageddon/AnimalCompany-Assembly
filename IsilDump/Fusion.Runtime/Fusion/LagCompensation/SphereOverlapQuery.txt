Type: Fusion.LagCompensation.SphereOverlapQuery

Method: System.Void .ctor(ref Fusion.LagCompensation.SphereOverlapQueryParams sphereOverlapParams)

Disassembly:
	0x01EF09E4 RET
	0x01EF09E8 STR S0, [X0 + 0x20]
	0x01EF09EC RET
	0x01EF09F0 LDR V0, [X0 + 0x24]
	0x01EF09F4 RET
	0x01EF09F8 STR S0, [X0 + 0x24]
	0x01EF09FC RET
	0x01EF0A00 LDR V0, [X0 + 0x28]
	0x01EF0A04 RET
	0x01EF0A08 STR S0, [X0 + 0x28]
	0x01EF0A0C RET
	0x01EF0A10 LDR V0, [X0 + 0x2C]
	0x01EF0A14 RET
	0x01EF0A18 STR S0, [X0 + 0x2C]
	0x01EF0A1C RET
	0x01EF0A20 LDR V0, [X0 + 0x30]
	0x01EF0A24 RET
	0x01EF0A28 STR S0, [X0 + 0x30]
	0x01EF0A2C RET
	0x01EF0A30 LDR W0, [X0 + 0x34]
	0x01EF0A34 RET
	0x01EF0A38 STR W1, [X0 + 0x34]
	0x01EF0A3C RET
	0x01EF0A40 LDR W0, [X0 + 0x38]
	0x01EF0A44 RET
	0x01EF0A48 STR W1, [X0 + 0x38]
	0x01EF0A4C RET
	0x01EF0A50 LDR W0, [X0 + 0x3C]
	0x01EF0A54 RET
	0x01EF0A58 STR W1, [X0 + 0x3C]
	0x01EF0A5C RET
	0x01EF0A60 LDR W0, [X0 + 0x40]
	0x01EF0A64 RET
	0x01EF0A68 STR W1, [X0 + 0x40]
	0x01EF0A6C RET
	0x01EF0A70 LDR W0, [X0 + 0x44]
	0x01EF0A74 RET
	0x01EF0A78 STR W1, [X0 + 0x44]
	0x01EF0A7C RET
	0x01EF0A80 LDR W0, [X0 + 0x48]
	0x01EF0A84 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x24EA000
	008 Move X22, 0x2209000
	009 Move X21, 0x220E000
	010 Move W8, [X23+1480]
	011 Move X22, [X22+312]
	012 Move X21, [X21+3568]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x220E000
	020 Move X0, [X0+3568]
	021 Call 0x1C17CF4
	022 Move X0, 0x2209000
	023 Move X0, [X0+312]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+1480], W8
	027 Move X0, X19
	028 Move X1, X20
	029 Call Query..ctor, X0, X1
	030 Move W8, [X20+64]
	031 Move X9, [X20+56]
	032 Move [X19+80], W8
	033 Move [X19+72], X9
	034 Move V0, [X20+68]
	035 Move [X19+84], S0
	036 Move W1, [X20+72]
	037 Move X0, [X22]
	038 Call 0x1C17D6C
	039 Move [X19+88], X0
	040 Move W1, [X20+72]
	041 Move X0, [X21]
	042 Call 0x1C17D6C
	043 Move [X19+96], X0
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Move X23, [X31+56]
	050 Return 

Method: System.Void .ctor(ref Fusion.LagCompensation.SphereOverlapQueryParams sphereOverlapParams, UnityEngine.Collider[] physXOverlapHitsCache, UnityEngine.Collider2D[] box2DOverlapHitsCache)

Disassembly:
	0x01EF0A88 STR W1, [X0 + 0x48]
	0x01EF0A8C RET
	0x01EF0A90 LDR W0, [X0 + 0x4C]
	0x01EF0A94 RET
	0x01EF0A98 STR W1, [X0 + 0x4C]
	0x01EF0A9C RET
	0x01EF0AA0 LDR W0, [X0 + 0x50]
	0x01EF0AA4 RET
	0x01EF0AA8 STR W1, [X0 + 0x50]
	0x01EF0AAC RET
	0x01EF0AB0 LDR W8, [X0 + 0x4C]
	0x01EF0AB4 UBFM W0, W8, 0x1E, 0x1D
	0x01EF0AB8 RET
	0x01EF0ABC LDR W8, [X0 + 0x50]
	0x01EF0AC0 UBFM W0, W8, 0x1E, 0x1D
	0x01EF0AC4 RET
	0x01EF0AC8 TBNZ X2, 0x0, 0x1EF0AD4
	0x01EF0ACC LDR W8, [X0 + 0x10]
	0x01EF0AD0 ADD W1, W8, W1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X3
	007 Move X20, X2
	008 Move X21, X1
	009 Move X22, X0
	010 Call Query..ctor, X0, X1
	011 Move W8, [X21+64]
	012 Move X9, [X21+56]
	013 Move [X22+80], W8
	014 Move [X22+72], X9
	015 Move V0, [X21+68]
	016 Move [X22+88], X20
	017 Move [X22+96], X19
	018 Move X20, [X31+32]
	019 Move X19, [X31+40]
	020 Move [X22+84], S0
	021 Move X22, [X31+16]
	022 Move X21, [X31+24]
	023 Move X30, [X31+48]
	024 Return 

Method: System.Boolean Check(ref Fusion.LagCompensation.AABB bounds)

Disassembly:
	0x01EF0AD4 STR W1, [X0 + 0x10]
	0x01EF0AD8 RET
	0x01EF0ADC TBNZ X2, 0x0, 0x1EF0AE8
	0x01EF0AE0 LDR W8, [X0 + 0x14]
	0x01EF0AE4 ADD W1, W8, W1
	0x01EF0AE8 STR W1, [X0 + 0x14]
	0x01EF0AEC RET
	0x01EF0AF0 TBNZ X2, 0x0, 0x1EF0AFC
	0x01EF0AF4 LDR W8, [X0 + 0x18]
	0x01EF0AF8 ADD W1, W8, W1

ISIL:
	001 Move V3, [X0+72]
	002 Move V5, [X1]
	003 Move S4, [X0+80]
	004 Move S6, [X0+84]
	005 Move S7, [X1+8]
	006 Move S0, [X1+12]
	007 Move S1, [X1+16]
	008 Move S2, [X1+20]
	009 Subtract V3, V3, V5
	010 Move X0, X31
	011 Subtract S5, S4, S7
	012 Move S4, V3.S[1]
	013 Call LagCompensationUtils.LocalAABBSphereIntersection, X0, X1, V0
	014 Return X0

Method: System.Boolean NarrowPhase(Fusion.LagCompensation.IHitboxColliderContainer container, System.Collections.Generic.HashSet`1<System.Int32> candidates, System.Collections.Generic.List`1<Fusion.LagCompensation.HitboxHit> hits)

Disassembly:
	0x01EF0AFC STR W1, [X0 + 0x18]
	0x01EF0B00 RET
	0x01EF0B04 TBNZ X2, 0x0, 0x1EF0B10
	0x01EF0B08 LDR W8, [X0 + 0x1C]
	0x01EF0B0C ADD W1, W8, W1
	0x01EF0B10 STR W1, [X0 + 0x1C]
	0x01EF0B14 RET
	0x01EF0B18 TBNZ X1, 0x0, 0x1EF0B24
	0x01EF0B1C LDR V1, [X0 + 0x20]
	0x01EF0B20 FADD S0, S1, S0
	0x01EF0B24 STR S0, [X0 + 0x20]
	0x01EF0B28 RET
	0x01EF0B2C TBNZ X1, 0x0, 0x1EF0B38
	0x01EF0B30 LDR V1, [X0 + 0x24]
	0x01EF0B34 FADD S0, S1, S0
	0x01EF0B38 STR S0, [X0 + 0x24]
	0x01EF0B3C RET
	0x01EF0B40 TBNZ X1, 0x0, 0x1EF0B4C
	0x01EF0B44 LDR V1, [X0 + 0x28]
	0x01EF0B48 FADD S0, S1, S0
	0x01EF0B4C STR S0, [X0 + 0x28]
	0x01EF0B50 RET
	0x01EF0B54 TBNZ X1, 0x0, 0x1EF0B60
	0x01EF0B58 LDR V1, [X0 + 0x2C]
	0x01EF0B5C FADD S0, S1, S0
	0x01EF0B60 STR S0, [X0 + 0x2C]
	0x01EF0B64 RET
	0x01EF0B68 TBNZ X1, 0x0, 0x1EF0B74
	0x01EF0B6C LDR V1, [X0 + 0x30]
	0x01EF0B70 FADD S0, S1, S0
	0x01EF0B74 STR S0, [X0 + 0x30]
	0x01EF0B78 RET
	0x01EF0B7C TBNZ X2, 0x0, 0x1EF0B88
	0x01EF0B80 LDR W8, [X0 + 0x34]
	0x01EF0B84 ADD W1, W8, W1
	0x01EF0B88 STR W1, [X0 + 0x34]
	0x01EF0B8C RET
	0x01EF0B90 TBNZ X2, 0x0, 0x1EF0B9C
	0x01EF0B94 LDR W8, [X0 + 0x38]
	0x01EF0B98 ADD W1, W8, W1
	0x01EF0B9C STR W1, [X0 + 0x38]
	0x01EF0BA0 RET
	0x01EF0BA4 TBNZ X2, 0x0, 0x1EF0BB0
	0x01EF0BA8 LDR W8, [X0 + 0x3C]
	0x01EF0BAC ADD W1, W8, W1
	0x01EF0BB0 STR W1, [X0 + 0x3C]
	0x01EF0BB4 RET
	0x01EF0BB8 TBNZ X2, 0x0, 0x1EF0BC4
	0x01EF0BBC LDR W8, [X0 + 0x40]
	0x01EF0BC0 ADD W1, W8, W1
	0x01EF0BC4 STR W1, [X0 + 0x40]
	0x01EF0BC8 RET
	0x01EF0BCC TBNZ X2, 0x0, 0x1EF0BD8
	0x01EF0BD0 LDR W8, [X0 + 0x44]
	0x01EF0BD4 ADD W1, W8, W1
	0x01EF0BD8 STR W1, [X0 + 0x44]
	0x01EF0BDC RET
	0x01EF0BE0 TBNZ X2, 0x0, 0x1EF0BEC
	0x01EF0BE4 LDR W8, [X0 + 0x48]
	0x01EF0BE8 ADD W1, W8, W1
	0x01EF0BEC STR W1, [X0 + 0x48]
	0x01EF0BF0 RET
	0x01EF0BF4 TBNZ X2, 0x0, 0x1EF0C00
	0x01EF0BF8 LDR W8, [X0 + 0x4C]
	0x01EF0BFC ADD W1, W8, W1
	0x01EF0C00 STR W1, [X0 + 0x4C]
	0x01EF0C04 RET
	0x01EF0C08 TBNZ X2, 0x0, 0x1EF0C14
	0x01EF0C0C LDR W8, [X0 + 0x50]
	0x01EF0C10 ADD W1, W8, W1
	0x01EF0C14 STR W1, [X0 + 0x50]
	0x01EF0C18 RET
	0x01EF0C1C LDR V0, [X0 + 0x54]
	0x01EF0C20 RET
	0x01EF0C24 STR S0, [X0 + 0x54]
	0x01EF0C28 RET
	0x01EF0C2C LDR W0, [X0 + 0x58]
	0x01EF0C30 RET
	0x01EF0C34 STR W1, [X0 + 0x58]
	0x01EF0C38 RET
	0x01EF0C3C LDR V0, [X0 + 0x5C]
	0x01EF0C40 RET
	0x01EF0C44 STR S0, [X0 + 0x5C]
	0x01EF0C48 RET
	0x01EF0C4C LDR V0, [X0 + 0x60]
	0x01EF0C50 RET
	0x01EF0C54 STR S0, [X0 + 0x60]
	0x01EF0C58 RET
	0x01EF0C5C LDR V0, [X0 + 0x64]
	0x01EF0C60 RET
	0x01EF0C64 STR S0, [X0 + 0x64]
	0x01EF0C68 RET
	0x01EF0C6C LDR V0, [X0 + 0x68]
	0x01EF0C70 RET
	0x01EF0C74 STR S0, [X0 + 0x68]
	0x01EF0C78 RET
	0x01EF0C7C LDR V0, [X0 + 0x6C]
	0x01EF0C80 RET
	0x01EF0C84 STR S0, [X0 + 0x6C]
	0x01EF0C88 RET
	0x01EF0C8C TBNZ X1, 0x0, 0x1EF0C98
	0x01EF0C90 LDR V1, [X0 + 0x54]
	0x01EF0C94 FADD S0, S1, S0
	0x01EF0C98 STR S0, [X0 + 0x54]
	0x01EF0C9C RET
	0x01EF0CA0 TBNZ X2, 0x0, 0x1EF0CAC
	0x01EF0CA4 LDR W8, [X0 + 0x58]
	0x01EF0CA8 ADD W1, W8, W1
	0x01EF0CAC STR W1, [X0 + 0x58]
	0x01EF0CB0 RET
	0x01EF0CB4 TBNZ X1, 0x0, 0x1EF0CC0
	0x01EF0CB8 LDR V1, [X0 + 0x5C]
	0x01EF0CBC FADD S0, S1, S0
	0x01EF0CC0 STR S0, [X0 + 0x5C]
	0x01EF0CC4 RET
	0x01EF0CC8 TBNZ X1, 0x0, 0x1EF0CD4
	0x01EF0CCC LDR V1, [X0 + 0x60]
	0x01EF0CD0 FADD S0, S1, S0
	0x01EF0CD4 STR S0, [X0 + 0x60]
	0x01EF0CD8 RET
	0x01EF0CDC TBNZ X1, 0x0, 0x1EF0CE8
	0x01EF0CE0 LDR V1, [X0 + 0x64]
	0x01EF0CE4 FADD S0, S1, S0
	0x01EF0CE8 STR S0, [X0 + 0x64]
	0x01EF0CEC RET
	0x01EF0CF0 TBNZ X1, 0x0, 0x1EF0CFC
	0x01EF0CF4 LDR V1, [X0 + 0x68]
	0x01EF0CF8 FADD S0, S1, S0
	0x01EF0CFC STR S0, [X0 + 0x68]
	0x01EF0D00 RET
	0x01EF0D04 TBNZ X1, 0x0, 0x1EF0D10
	0x01EF0D08 LDR V1, [X0 + 0x6C]
	0x01EF0D0C FADD S0, S1, S0
	0x01EF0D10 STR S0, [X0 + 0x6C]
	0x01EF0D14 RET
	0x01EF0D18 LDR X0, [X0 + 0x10]
	0x01EF0D1C RET
	0x01EF0D20 LDR X0, [X0 + 0x18]
	0x01EF0D24 RET
	0x01EF0D28 STP X30, X21, [X31 - 0x20]!
	0x01EF0D2C STP X20, X19, [X31 + 0x10]
	0x01EF0D30 ADRP X20, 0x24E9000
	0x01EF0D34 ADRP X21, 0x2210000
	0x01EF0D38 LDRB W8, [X20 + 0x5CD]
	0x01EF0D3C LDR X21, [X21 + 0x600]
	0x01EF0D40 MOV X19, X0
	0x01EF0D44 TBNZ X8, 0x0, 0x1EF0D5C
	0x01EF0D48 ADRP X0, 0x2210000
	0x01EF0D4C LDR X0, [X0 + 0x600]
	0x01EF0D50 BL 0x1C16CF4
	0x01EF0D54 MOVZ W8, 0x1
	0x01EF0D58 STRB W8, [X20 + 0x5CD]
	0x01EF0D5C MOV X0, X19
	0x01EF0D60 MOV X1, X31
	0x01EF0D64 BL 0x33BDD8C
	0x01EF0D68 LDR X0, [X21]
	0x01EF0D6C BL 0x1C16F10
	0x01EF0D70 MOV X1, X31
	0x01EF0D74 MOV X20, X0
	0x01EF0D78 BL 0x33BDD8C
	0x01EF0D7C STR X20, [X19 + 0x10]
	0x01EF0D80 LDR X0, [X21]
	0x01EF0D84 BL 0x1C16F10
	0x01EF0D88 MOV X1, X31
	0x01EF0D8C MOV X20, X0
	0x01EF0D90 BL 0x33BDD8C
	0x01EF0D94 STR X20, [X19 + 0x18]
	0x01EF0D98 LDP X20, X19, [X31 + 0x10]
	0x01EF0D9C LDP X30, X21, [X31], #0x20
	0x01EF0DA0 RET
	0x01EF0DA4 MOV X1, X31
	0x01EF0DA8 B 0x33BDD8C
	0x01EF0DAC STP X30, X19, [X31 - 0x10]!
	0x01EF0DB0 MOV X19, X0
	0x01EF0DB4 LDR X0, [X0 + 0x10]
	0x01EF0DB8 CBZ X0, 0x1EF0DE8
	0x01EF0DBC LDR X1, [X19 + 0x18]
	0x01EF0DC0 BL 0x1EF0DEC
	0x01EF0DC4 LDR X8, [X19 + 0x18]
	0x01EF0DC8 CBZ X8, 0x1EF0DE8
	0x01EF0DCC MOVI V0.2D, 0x0
	0x01EF0DD0 STR X31, [X8 + 0x10]
	0x01EF0DD4 STR W31, [X8 + 0x18]
	0x01EF0DD8 STP V0, V0, [X8 + 0x20]
	0x01EF0DDC STR V0, [X8 + 0x4]
	0x01EF0DE0 LDP X30, X19, [X31], #0x10
	0x01EF0DE4 RET
	0x01EF0DE8 BL 0x1C16F20
	0x01EF0DEC STR X30, [X31 - 0x10]!
	0x01EF0DF0 CBZ X1, 0x1EF0E24
	0x01EF0DF4 LDR V0, [X1 + 0x10]
	0x01EF0DF8 STR D0, [X0 + 0x10]
	0x01EF0DFC LDR W8, [X1 + 0x18]
	0x01EF0E00 STR W8, [X0 + 0x18]
	0x01EF0E04 LDR V0, [X1 + 0x2]
	0x01EF0E08 STR V0, [X0 + 0x2]
	0x01EF0E0C LDR V0, [X1 + 0x3]
	0x01EF0E10 STR V0, [X0 + 0x3]
	0x01EF0E14 LDR V0, [X1 + 0x4]
	0x01EF0E18 STR V0, [X0 + 0x4]
	0x01EF0E1C LDR X30, [X31], #0x10
	0x01EF0E20 RET
	0x01EF0E24 BL 0x1C16F20
	0x01EF0E28 MOVI V0.2D, 0x0
	0x01EF0E2C STR X31, [X0 + 0x10]
	0x01EF0E30 STR W31, [X0 + 0x18]
	0x01EF0E34 STP V0, V0, [X0 + 0x20]
	0x01EF0E38 STR V0, [X0 + 0x4]
	0x01EF0E3C RET
	0x01EF0E40 LDP D3, D0, [X0 + 0x38]
	0x01EF0E44 LDP D1, D2, [X0 + 0x20]
	0x01EF0E48 LDR V4, [X0 + 0x30]
	0x01EF0E4C LDR V5, [X0 + 0x48]
	0x01EF0E50 FADD D0, D0, D1
	0x01EF0E54 FADD D0, D0, D2
	0x01EF0E58 FADD D0, D0, D3
	0x01EF0E5C FADD D0, D0, D4
	0x01EF0E60 FADD D0, D0, D5
	0x01EF0E64 RET
	0x01EF0E68 LDR W0, [X0 + 0x10]
	0x01EF0E6C RET
	0x01EF0E70 STR W1, [X0 + 0x10]
	0x01EF0E74 RET
	0x01EF0E78 LDR W0, [X0 + 0x14]
	0x01EF0E7C RET

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+224], X29
	003 Move [X31+232], X30
	004 Move [X31+240], X28
	005 Move [X31+248], X27
	006 Move [X31+256], X26
	007 Move [X31+264], X25
	008 Move [X31+272], X24
	009 Move [X31+280], X23
	010 Move [X31+288], X22
	011 Move [X31+296], X21
	012 Move [X31+304], X20
	013 Move [X31+312], X19
	014 Move X23, 0x24EA000
	015 Move W8, [X23+1481]
	016 Move X19, X3
	017 Move X22, X2
	018 Move X20, X1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {44}
	024 Move X0, 0x220B000
	025 Move X0, [X0+2096]
	026 Call 0x1C17CF4
	027 Move X0, 0x220B000
	028 Move X0, [X0+2104]
	029 Call 0x1C17CF4
	030 Move X0, 0x220B000
	031 Move X0, [X0+2112]
	032 Call 0x1C17CF4
	033 Move X0, 0x220B000
	034 Move X0, [X0+2120]
	035 Call 0x1C17CF4
	036 Move X0, 0x220E000
	037 Move X0, [X0+3704]
	038 Call 0x1C17CF4
	039 Move X0, 0x2211000
	040 Move X0, [X0+1464]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X23+1481], W8
	044 Move [X31+80], X31
	045 Move [X31+88], X31
	046 Move [X31+96], X31
	047 Move [X31+72], W31
	048 Move [X31+64], X31
	049 Move [X31+56], W31
	050 Move [X31+48], X31
	051 Compare X22, 0
	052 JumpIfEqual {216}
	053 Move X8, 0x220B000
	054 Move X8, [X8+2120]
	055 Move X24, 0x220B000
	056 Move X24, [X24+2104]
	057 Move X25, 0x220E000
	058 Move X1, [X8]
	059 Move X26, 0x2211000
	060 Move X25, [X25+3704]
	061 Move X26, [X26+1464]
	062 Add X8, X31, 144
	063 Move X0, X22
	064 Add X28, X31, 144
	065 Call HashSet`1<Int32>.GetEnumerator, X0
	066 Move V0, [X31+9]
	067 Move X8, [X31+160]
	068 Move W23, W31
	069 Add X27, X28, 40
	070 Add X28, X28, 52
	071 Move [X31+5], V0
	072 Move [X31+96], X8
	073 Move W29, 80
	074 Move X1, [X24]
	075 Add X0, X31, 80
	076 Call Enumerator<Int32>.MoveNext, X0
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {195}
	081 Compare X20, 0
	082 JumpIfEqual {215}
	083 Move X8, [X20]
	084 Move W22, [X31+96]
	085 Move X1, [X25]
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Compare X9, 0
	088 JumpIfEqual {95}
	089 Move X10, [X8+176]
	090 Add X10, X10, 8
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Subtract X9, X9, 1
	094 Add X10, X10, 16
	095 Move W2, 2
	096 Move X0, X20
	097 Call 0x1C5D788
	098 Move W9, [X10]
	099 Add W9, W9, 2
	100 Add X8, X8, W9
	101 Add X0, X8, 312
	102 Move X8, [X0]
	103 Move X2, [X0+8]
	104 Move X0, X20
	105 Move W1, W22
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move S0, [X21+72]
	108 Move S1, [X21+76]
	109 Move S2, [X21+80]
	110 Move S3, [X21+84]
	111 Move X22, X0
	112 Add X2, X31, 64
	113 Add X3, X31, 48
	114 Move X1, X0
	115 Call SphereOverlapQuery.NarrowPhaseSphere, X0, X1, X2, V0, X3, X4
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {74}
	120 Move W10, [X22+448]
	121 Move X11, [X22+440]
	122 Move X9, [X22+112]
	123 Move W8, [X22+124]
	124 Move [X31+40], W10
	125 Move [X31+32], X11
	126 Add X10, X22, 452
	127 Move S4, [X31+64]
	128 Move S3, [X31+68]
	129 Move V2, [X31+72]
	130 Move S1, [X31+48]
	131 Move S0, [X31+52]
	132 Move V6, [X10]
	133 Move V5, [X31+56]
	134 Move [X31+1], V6
	135 Compare X19, 0
	136 JumpIfEqual {218}
	137 Move X10, [X31+32]
	138 Move W11, [X31+40]
	139 Move V6, [X31+1]
	140 Move [X31+128], X10
	141 Move [X31+136], W11
	142 Move [X31+7], V6
	143 Move W12, [X19+28]
	144 Move X10, [X19+16]
	145 Move X11, [X26]
	146 Add W12, W12, 1
	147 Move [X19+28], W12
	148 Compare X10, 0
	149 JumpIfEqual {217}
	150 NotImplemented "Instruction LDRSW not yet implemented."
	151 Move W13, [X10+24]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Add W11, W12, 1
	154 NotImplemented "Instruction MADD not yet implemented."
	155 Move [X19+24], W11
	156 Move [X10+32], S4
	157 Move [X10+40], S3
	158 Move [X10+40], S2
	159 Move [X10+48], S1
	160 Move [X10+48], S0
	161 Move [X10+56], S5
	162 Move [X10+56], X31
	163 Move [X10+64], X9
	164 Move W9, [X31+136]
	165 Move X11, [X31+128]
	166 Move [X10+80], W9
	167 Move [X10+72], X11
	168 Move V0, [X31+7]
	169 Move [X10+100], W8
	170 Move [X10+104], X31
	171 Move [X10+84], V0
	172 Move X10, [X11+32]
	173 Move X11, [X31+128]
	174 Move V6, [X31+7]
	175 Move X10, [X10+192]
	176 Move X2, [X10+112]
	177 Move [X31+168], X31
	178 Move [X31+176], X9
	179 Move W9, [X31+136]
	180 Move [X31+144], S4
	181 Move [X31+152], S3
	182 Move [X31+152], S2
	183 Move [X31+160], S1
	184 Move [X31+160], S0
	185 Move [X31+168], S5
	186 Move [X27+8], W9
	187 Move [X27], X11
	188 Move [X28], V6
	189 Move [X31+212], W8
	190 Move [X31+216], X31
	191 Add X1, X31, 144
	192 Move X0, X19
	193 Call List`1<HitboxHit>.AddWithResize, X0, X1
	194 Move W23, 1
	195 Move X8, 0x220B000
	196 Move X8, [X8+2096]
	197 Add X0, X31, 80
	198 Move X1, [X8]
	199 Call Enumerator<Int32>.Dispose, X0
	200 And W0, W23, 1
	201 Move X20, [X31+304]
	202 Move X19, [X31+312]
	203 Move X22, [X31+288]
	204 Move X21, [X31+296]
	205 Move X24, [X31+272]
	206 Move X23, [X31+280]
	207 Move X26, [X31+256]
	208 Move X25, [X31+264]
	209 Move X28, [X31+240]
	210 Move X27, [X31+248]
	211 Move X29, [X31+224]
	212 Move X30, [X31+232]
	213 Add X31, X31, 320
	214 Return X0
	215 Call 0x1C17F20
	216 Call 0x1C17F20
	217 Call 0x1C17F20
	218 Call 0x1C17F20
	219 Move X8, X1
	220 Move X19, X0
	221 Move W23, 1
	222 Move X8, X1
	223 Move X19, X0
	224 Move W23, W31
	225 Move X8, X1
	226 Move X19, X0
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move X0, X19
	229 Call 0x3EB2AD0
	230 Move X20, [X0]
	231 Call 0x3EB2AE0
	232 Move X8, 0x220B000
	233 Move X8, [X8+2096]
	234 Add X0, X31, 80
	235 Move X1, [X8]
	236 Call Enumerator<Int32>.Dispose, X0
	237 Compare X20, 0
	238 JumpIfEqual {200}
	239 Move X0, X20
	240 Call 0x1C17F18
	241 Move X20, X31
	242 Move X19, X0
	243 Move X8, 0x220B000
	244 Move X8, [X8+2096]
	245 Move X1, [X8]
	246 Add X0, X31, 80
	247 Call Enumerator<Int32>.Dispose, X0
	248 Compare X20, 0
	249 JumpIfNotEqual {252}
	250 Move X0, X19
	251 Call 0x1D2D690
	252 Move X0, X20
	253 Call 0x1C17F18
	254 Call 0x1991590

Method: System.Void PerformStaticQuery(Fusion.NetworkRunner runner, System.Collections.Generic.List`1<Fusion.LagCompensatedHit> hits, Fusion.HitOptions options)

Disassembly:
	0x01EF11C4 BL 0x1C16F20
	0x01EF11C8 STP X30, X23, [X31 - 0x30]!
	0x01EF11CC STP X22, X21, [X31 + 0x10]
	0x01EF11D0 STP X20, X19, [X31 + 0x20]
	0x01EF11D4 ADRP X23, 0x24E8000
	0x01EF11D8 LDRB W8, [X23 + 0x5D3]
	0x01EF11DC MOV X20, X3
	0x01EF11E0 MOV X19, X2
	0x01EF11E4 MOV X22, X1
	0x01EF11E8 MOV X21, X0
	0x01EF11EC TBNZ X8, 0x0, 0x1EF121C
	0x01EF11F0 ADRP X0, 0x220F000
	0x01EF11F4 LDR X0, [X0 + 0x628]
	0x01EF11F8 BL 0x1C16CF4
	0x01EF11FC ADRP X0, 0x220F000
	0x01EF1200 LDR X0, [X0 + 0x630]
	0x01EF1204 BL 0x1C16CF4
	0x01EF1208 ADRP X0, 0x220F000
	0x01EF120C LDR X0, [X0 + 0x30]
	0x01EF1210 BL 0x1C16CF4
	0x01EF1214 MOVZ W8, 0x1
	0x01EF1218 STRB W8, [X23 + 0x5D3]
	0x01EF121C STR X31, [X20]
	0x01EF1220 LDR X0, [X21 + 0x10]
	0x01EF1224 CBZ X0, 0x1EF12B0
	0x01EF1228 ADRP X8, 0x220F000
	0x01EF122C LDR X8, [X8 + 0x30]
	0x01EF1230 AND X22, X22, 0x0
	0x01EF1234 MOV X1, X22
	0x01EF1238 LDR X2, [X8]
	0x01EF123C BL 0x2DB94F8
	0x01EF1240 MOV W23, W0
	0x01EF1244 TBZ X0, 0x0, 0x1EF129C
	0x01EF1248 CBZ X19, 0x1EF12B0
	0x01EF124C ADRP X8, 0x220F000
	0x01EF1250 LDR X8, [X8 + 0x630]
	0x01EF1254 MOV X0, X19
	0x01EF1258 MOV X1, X22
	0x01EF125C MOV X2, X20
	0x01EF1260 LDR X3, [X8]
	0x01EF1264 BL 0x2A6903C
	0x01EF1268 TBNZ X0, 0x0, 0x1EF129C
	0x01EF126C MOV X0, X21
	0x01EF1270 BL 0x1EF103C
	0x01EF1274 STR X0, [X20]
	0x01EF1278 CBZ X0, 0x1EF12B0
	0x01EF127C STP X31, X31, [X0 + 0x10]
	0x01EF1280 ADRP X8, 0x220F000
	0x01EF1284 LDR X8, [X8 + 0x628]
	0x01EF1288 LDR X2, [X20]
	0x01EF128C MOV X0, X19
	0x01EF1290 MOV X1, X22
	0x01EF1294 LDR X3, [X8]
	0x01EF1298 BL 0x2A67538
	0x01EF129C LDP X20, X19, [X31 + 0x20]
	0x01EF12A0 LDP X22, X21, [X31 + 0x10]
	0x01EF12A4 AND W0, W23, 0x1
	0x01EF12A8 LDP X30, X23, [X31], #0x30
	0x01EF12AC RET
	0x01EF12B0 BL 0x1C16F20
	0x01EF12B4 STP X31, X31, [X0 + 0x10]
	0x01EF12B8 RET
	0x01EF12BC STP X30, X19, [X31 - 0x10]!
	0x01EF12C0 MOV X19, X2
	0x01EF12C4 LDR X2, [X0 + 0x20]
	0x01EF12C8 AND X1, X1, 0x0
	0x01EF12CC MOV X3, X19
	0x01EF12D0 BL 0x1EF11C8
	0x01EF12D4 TBNZ X0, 0x0, 0x1EF12DC
	0x01EF12D8 STR X31, [X19]
	0x01EF12DC AND W0, W0, 0x1
	0x01EF12E0 LDP X30, X19, [X31], #0x10
	0x01EF12E4 RET
	0x01EF12E8 STR X30, [X31 - 0x10]!
	0x01EF12EC STR X31, [X31 + 0x8]
	0x01EF12F0 LDR X2, [X0 + 0x18]
	0x01EF12F4 AND X1, X1, 0x0
	0x01EF12F8 ADD X3, X31, 0x8
	0x01EF12FC BL 0x1EF11C8
	0x01EF1300 LDR X30, [X31], #0x10
	0x01EF1304 RET
	0x01EF1308 STR X30, [X31 - 0x10]!
	0x01EF130C STR X31, [X31 + 0x8]
	0x01EF1310 LDR X2, [X0 + 0x18]
	0x01EF1314 AND X1, X1, 0x0
	0x01EF1318 ADD X3, X31, 0x8
	0x01EF131C BL 0x1EF11C8
	0x01EF1320 LDR X30, [X31], #0x10
	0x01EF1324 RET
	0x01EF1328 STR X30, [X31 - 0x10]!
	0x01EF132C STR X31, [X31 + 0x8]
	0x01EF1330 LDR X2, [X0 + 0x18]
	0x01EF1334 AND X1, X1, 0x0
	0x01EF1338 ADD X3, X31, 0x8
	0x01EF133C BL 0x1EF11C8
	0x01EF1340 LDR X30, [X31], #0x10
	0x01EF1344 RET
	0x01EF1348 STR X30, [X31 - 0x10]!
	0x01EF134C STR X31, [X31 + 0x8]
	0x01EF1350 LDR X2, [X0 + 0x18]
	0x01EF1354 AND X1, X1, 0x0
	0x01EF1358 ADD X3, X31, 0x8
	0x01EF135C BL 0x1EF11C8
	0x01EF1360 LDR X30, [X31], #0x10
	0x01EF1364 RET
	0x01EF1368 SUB X31, X31, 0xC0
	0x01EF136C STP X30, X27, [X31 + 0x70]
	0x01EF1370 STP X26, X25, [X31 + 0x80]
	0x01EF1374 STP X24, X23, [X31 + 0x90]
	0x01EF1378 STP X22, X21, [X31 + 0xA0]
	0x01EF137C STP X20, X19, [X31 + 0xB0]
	0x01EF1380 ADRP X20, 0x24E8000
	0x01EF1384 LDRB W8, [X20 + 0x5D4]
	0x01EF1388 MOV X19, X0
	0x01EF138C TBNZ X8, 0x0, 0x1EF1440
	0x01EF1390 ADRP X0, 0x220F000
	0x01EF1394 LDR X0, [X0 + 0x628]
	0x01EF1398 BL 0x1C16CF4
	0x01EF139C ADRP X0, 0x220F000
	0x01EF13A0 LDR X0, [X0 + 0x638]
	0x01EF13A4 BL 0x1C16CF4
	0x01EF13A8 ADRP X0, 0x220F000
	0x01EF13AC LDR X0, [X0 + 0x640]
	0x01EF13B0 BL 0x1C16CF4
	0x01EF13B4 ADRP X0, 0x220F000
	0x01EF13B8 LDR X0, [X0 + 0x648]
	0x01EF13BC BL 0x1C16CF4
	0x01EF13C0 ADRP X0, 0x220F000
	0x01EF13C4 LDR X0, [X0 + 0x650]
	0x01EF13C8 BL 0x1C16CF4
	0x01EF13CC ADRP X0, 0x220F000
	0x01EF13D0 LDR X0, [X0 + 0x658]
	0x01EF13D4 BL 0x1C16CF4
	0x01EF13D8 ADRP X0, 0x220F000
	0x01EF13DC LDR X0, [X0 + 0x660]
	0x01EF13E0 BL 0x1C16CF4
	0x01EF13E4 ADRP X0, 0x220F000
	0x01EF13E8 LDR X0, [X0 + 0x668]
	0x01EF13EC BL 0x1C16CF4
	0x01EF13F0 ADRP X0, 0x220F000
	0x01EF13F4 LDR X0, [X0 + 0x670]
	0x01EF13F8 BL 0x1C16CF4
	0x01EF13FC ADRP X0, 0x220F000
	0x01EF1400 LDR X0, [X0 + 0x678]
	0x01EF1404 BL 0x1C16CF4
	0x01EF1408 ADRP X0, 0x220F000
	0x01EF140C LDR X0, [X0 + 0x680]
	0x01EF1410 BL 0x1C16CF4
	0x01EF1414 ADRP X0, 0x220F000
	0x01EF1418 LDR X0, [X0 + 0x688]
	0x01EF141C BL 0x1C16CF4
	0x01EF1420 ADRP X0, 0x220F000
	0x01EF1424 LDR X0, [X0 + 0x690]
	0x01EF1428 BL 0x1C16CF4
	0x01EF142C ADRP X0, 0x220F000
	0x01EF1430 LDR X0, [X0 + 0x698]
	0x01EF1434 BL 0x1C16CF4
	0x01EF1438 MOVZ W8, 0x1
	0x01EF143C STRB W8, [X20 + 0x5D4]
	0x01EF1440 MOVI V0.2D, 0x0
	0x01EF1444 STP X31, X31, [X31 + 0x50]
	0x01EF1448 STR X31, [X31 + 0x60]
	0x01EF144C STR X31, [X31 + 0x40]
	0x01EF1450 STP V0, V0, [X31 + 0x20]
	0x01EF1454 LDR X0, [X19 + 0x20]
	0x01EF1458 CBZ X0, 0x1EF15A4
	0x01EF145C ADRP X8, 0x220F000
	0x01EF1460 LDR X8, [X8 + 0x648]
	0x01EF1464 LDR X1, [X8]
	0x01EF1468 BL 0x2A673D0
	0x01EF146C CBZ X0, 0x1EF15A4
	0x01EF1470 ADRP X8, 0x220F000
	0x01EF1474 LDR X8, [X8 + 0x698]
	0x01EF1478 ADRP X20, 0x220F000
	0x01EF147C ADRP X21, 0x220F000
	0x01EF1480 ADRP X22, 0x220F000
	0x01EF1484 ADRP X26, 0x220F000
	0x01EF1488 ADRP X24, 0x220F000
	0x01EF148C LDR X20, [X20 + 0x668]
	0x01EF1490 LDR X21, [X21 + 0x690]
	0x01EF1494 LDR X22, [X22 + 0x638]
	0x01EF1498 LDR X26, [X26 + 0x640]
	0x01EF149C LDR X24, [X24 + 0x660]
	0x01EF14A0 LDR X1, [X8]
	0x01EF14A4 ADRP X25, 0x220F000
	0x01EF14A8 ADRP X23, 0x220F000
	0x01EF14AC ADRP X27, 0x220F000
	0x01EF14B0 LDR X25, [X25 + 0x628]
	0x01EF14B4 LDR X23, [X23 + 0x658]
	0x01EF14B8 LDR X27, [X27 + 0x650]
	0x01EF14BC ADD X8, X31, 0x8
	0x01EF14C0 BL 0x2755900
	0x01EF14C4 LDUR V0, [X31 + 0x8]
	0x01EF14C8 LDR X8, [X31 + 0x18]
	0x01EF14CC STR V0, [X31 + 0x5]
	0x01EF14D0 STR X8, [X31 + 0x60]
	0x01EF14D4 LDR X1, [X20]
	0x01EF14D8 ADD X0, X31, 0x50
	0x01EF14DC BL 0x2C04490
	0x01EF14E0 TBZ X0, 0x0, 0x1EF1504
	0x01EF14E4 LDR X1, [X31 + 0x60]
	0x01EF14E8 CBZ X1, 0x1EF159C
	0x01EF14EC STP X31, X31, [X1 + 0x10]
	0x01EF14F0 LDR X0, [X19 + 0x28]
	0x01EF14F4 CBZ X0, 0x1EF15A0
	0x01EF14F8 LDR X2, [X21]
	0x01EF14FC BL 0x2602314
	0x01EF1500 B 0x1EF14D4
	0x01EF1504 LDR X1, [X27]
	0x01EF1508 ADD X0, X31, 0x50
	0x01EF150C BL 0x2C0448C
	0x01EF1510 LDR X0, [X19 + 0x20]
	0x01EF1514 CBZ X0, 0x1EF15A4
	0x01EF1518 LDR X1, [X22]
	0x01EF151C BL 0x2A676D0
	0x01EF1520 LDR X0, [X19 + 0x18]
	0x01EF1524 CBZ X0, 0x1EF15A4
	0x01EF1528 LDR X1, [X26]
	0x01EF152C ADD X8, X31, 0x20
	0x01EF1530 BL 0x2A67974
	0x01EF1534 LDR X1, [X24]
	0x01EF1538 ADD X0, X31, 0x20
	0x01EF153C BL 0x2C03E60
	0x01EF1540 TBZ X0, 0x0, 0x1EF1560
	0x01EF1544 LDR X0, [X19 + 0x20]
	0x01EF1548 CBZ X0, 0x1EF1598
	0x01EF154C LDR W1, [X31 + 0x30]
	0x01EF1550 LDR X2, [X31 + 0x38]
	0x01EF1554 LDR X3, [X25]
	0x01EF1558 BL 0x2A67538
	0x01EF155C B 0x1EF1534
	0x01EF1560 LDR X1, [X23]
	0x01EF1564 ADD X0, X31, 0x20
	0x01EF1568 BL 0x2C03F78
	0x01EF156C LDR X0, [X19 + 0x18]
	0x01EF1570 CBZ X0, 0x1EF15A4
	0x01EF1574 LDR X1, [X22]
	0x01EF1578 BL 0x2A676D0
	0x01EF157C LDP X20, X19, [X31 + 0xB0]
	0x01EF1580 LDP X22, X21, [X31 + 0xA0]
	0x01EF1584 LDP X24, X23, [X31 + 0x90]
	0x01EF1588 LDP X26, X25, [X31 + 0x80]
	0x01EF158C LDP X30, X27, [X31 + 0x70]
	0x01EF1590 ADD X31, X31, 0xC0
	0x01EF1594 RET
	0x01EF1598 BL 0x1C16F20
	0x01EF159C BL 0x1C16F20
	0x01EF15A0 BL 0x1C16F20
	0x01EF15A4 BL 0x1C16F20
	0x01EF15A8 B 0x1EF15BC
	0x01EF15AC B 0x1EF15BC
	0x01EF15B0 B 0x1EF15BC
	0x01EF15B4 B 0x1EF1620
	0x01EF15B8 B 0x1EF1620
	0x01EF15BC MOV X20, X0
	0x01EF15C0 CMP W1, 0x1
	0x01EF15C4 B.NE 0x1EF15F4

ISIL:
	001 Subtract X31, X31, 416
	002 Move [X31+288], D11
	003 Move [X31+296], D10
	004 Move [X31+304], D9
	005 Move [X31+312], D8
	006 Move [X31+320], X29
	007 Move [X31+328], X30
	008 Move [X31+336], X28
	009 Move [X31+344], X27
	010 Move [X31+352], X26
	011 Move [X31+360], X25
	012 Move [X31+368], X24
	013 Move [X31+376], X23
	014 Move [X31+384], X22
	015 Move [X31+392], X21
	016 Move [X31+400], X20
	017 Move [X31+408], X19
	018 Move X23, 0x24E9000
	019 Move W8, [X23+1482]
	020 Move W22, W3
	021 Move X19, X2
	022 Move X21, X1
	023 Move X20, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0x220D000
	029 Move X0, [X0+3456]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X23+1482], W8
	033 Move [X31+120], W31
	034 Move [X31+56], W31
	035 Move TEMP, X22
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {171}
	039 Move TEMP, X22
	040 And TEMP, TEMP, 2
	041 Compare TEMP, 2
	042 JumpIfNotEqual {302}
	043 Compare X21, 0
	044 JumpIfEqual {320}
	045 Move X0, X21
	046 Move X1, X31
	047 Call NetworkRunner.GetPhysicsScene2D, X0
	048 Move [X31+56], W0
	049 Move W0, [X20+24]
	050 Move S8, [X20+72]
	051 Move S9, [X20+76]
	052 Move V10, [X20+84]
	053 Move X21, [X20+96]
	054 Move X1, X31
	055 Call LayerMask.op_Implicit, X0
	056 Move W2, W0
	057 Add X0, X31, 56
	058 Move V0, V8
	059 Move V1, V9
	060 Move V2, V10
	061 Move X1, X21
	062 Move X3, X31
	063 Call PhysicsScene2D.OverlapCircle, X0, X1, V0, X2, X3
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X9, -20983808
	066 Move X27, 0x220D000
	067 Move V8, [X9+3784]
	068 Move X27, [X27+3456]
	069 Add X8, X31, 184
	070 Move W21, W0
	071 Move W23, W31
	072 Add X24, X8, 16
	073 Add X25, X8, 28
	074 Add X26, X8, 68
	075 Move W28, 104
	076 Move X8, [X20+96]
	077 Compare X8, 0
	078 JumpIfEqual {320}
	079 Move W9, [X8+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Add X8, X8, W23
	082 Move X22, [X8+32]
	083 NotImplemented "Instruction MOVI not yet implemented."
	084 Move [X31+96], X31
	085 Move [X31+104], X31
	086 Move [X31+64], V0
	087 Move [X31+72], V0
	088 Move [X31+112], W31
	089 Compare X22, 0
	090 JumpIfEqual {320}
	091 Move X0, X22
	092 Move X1, X31
	093 Call Component.get_gameObject, X0
	094 Move X10, [X31+96]
	095 Move X8, [X31+104]
	096 Move W9, [X31+112]
	097 Move V0, [X31+64]
	098 Move V1, [X31+80]
	099 Move [X31+32], X10
	100 Move [X31+40], X8
	101 Move [X31+48], W9
	102 Move [X31], V0
	103 Move [X31+8], V1
	104 Compare X19, 0
	105 JumpIfEqual {320}
	106 Move X10, [X31+32]
	107 Move X8, [X31+40]
	108 Move W9, [X31+48]
	109 Move V0, [X31]
	110 Move V1, [X31+16]
	111 Move [X31+160], X10
	112 Move [X31+168], X8
	113 Move [X31+176], W9
	114 Move [X31+128], V0
	115 Move [X31+136], V1
	116 Move W10, [X19+28]
	117 Move X8, [X19+16]
	118 Move X9, [X27]
	119 Add W10, W10, 1
	120 Move [X19+28], W10
	121 Compare X8, 0
	122 JumpIfEqual {320}
	123 NotImplemented "Instruction LDRSW not yet implemented."
	124 Move W11, [X8+24]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Add W9, W10, 1
	127 NotImplemented "Instruction MADD not yet implemented."
	128 Move [X19+24], W9
	129 Move [X8+32], D8
	130 Move W9, [X31+176]
	131 Move X10, [X31+168]
	132 Move [X8+56], W9
	133 Move [X8+40], X0
	134 Move [X8+48], X10
	135 Move V0, [X31+128]
	136 Move V1, [X31+144]
	137 Move X9, [X31+160]
	138 Move [X8+108], X31
	139 Move [X8+100], X31
	140 Move [X8+116], W31
	141 Move [X8+92], X9
	142 Move [X8+76], V1
	143 Move [X8+60], V0
	144 Move [X8+120], X22
	145 Move [X8+128], X31
	146 Move X8, [X9+32]
	147 Move W10, [X31+176]
	148 Move V0, [X31+128]
	149 Move V1, [X31+144]
	150 Add X1, X31, 184
	151 Move X8, [X8+192]
	152 Move X2, [X8+112]
	153 Move X8, [X31+160]
	154 Move X9, [X31+168]
	155 Move [X31+192], X0
	156 Move X0, X19
	157 Move [X31+184], D8
	158 Move [X24+8], W10
	159 Move [X24], X9
	160 Move [X25+32], X8
	161 Move [X25], V0
	162 Move [X25+8], V1
	163 Move [X26], X31
	164 Move [X26+8], X31
	165 Move [X26+16], W31
	166 Move [X31+272], X22
	167 Move [X31+280], X31
	168 Call List`1<LagCompensatedHit>.AddWithResize, X0, X1
	169 Add W23, W23, 1
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Compare X21, 0
	172 JumpIfEqual {320}
	173 Move X0, X21
	174 Move X1, X31
	175 Call NetworkRunner.GetPhysicsScene, X0
	176 Move [X31+120], W0
	177 Move W0, [X20+24]
	178 Move S8, [X20+72]
	179 Move S9, [X20+76]
	180 Move S10, [X20+80]
	181 Move S11, [X20+84]
	182 Move X21, [X20+88]
	183 Move X1, X31
	184 Call LayerMask.op_Implicit, X0
	185 Move W3, [X20+16]
	186 Move W2, W0
	187 Add X0, X31, 120
	188 Move V0, V8
	189 Move V1, V9
	190 Move V2, V10
	191 Move V3, V11
	192 Move X1, X21
	193 Move X4, X31
	194 Call PhysicsScene.OverlapSphere, X0, X1, V0, X2, X3, X4
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move X9, -20983808
	197 Move X27, 0x220D000
	198 Move V8, [X9+2200]
	199 Move X27, [X27+3456]
	200 Add X8, X31, 184
	201 Move W21, W0
	202 Move W23, W31
	203 Add X24, X8, 16
	204 Add X25, X8, 28
	205 Add X26, X8, 88
	206 Move W28, 104
	207 Move X8, [X20+88]
	208 Compare X8, 0
	209 JumpIfEqual {320}
	210 Move W9, [X8+24]
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Add X8, X8, W23
	213 Move X22, [X8+32]
	214 NotImplemented "Instruction MOVI not yet implemented."
	215 Move [X31+96], X31
	216 Move [X31+104], X31
	217 Move [X31+64], V0
	218 Move [X31+72], V0
	219 Move [X31+112], W31
	220 Compare X22, 0
	221 JumpIfEqual {320}
	222 Move X0, X22
	223 Move X1, X31
	224 Call Component.get_gameObject, X0
	225 Move X10, [X31+96]
	226 Move X8, [X31+104]
	227 Move W9, [X31+112]
	228 Move V0, [X31+64]
	229 Move V1, [X31+80]
	230 Move [X31+32], X10
	231 Move [X31+40], X8
	232 Move [X31+48], W9
	233 Move [X31], V0
	234 Move [X31+8], V1
	235 Compare X19, 0
	236 JumpIfEqual {320}
	237 Move X10, [X31+32]
	238 Move X8, [X31+40]
	239 Move W9, [X31+48]
	240 Move V0, [X31]
	241 Move V1, [X31+16]
	242 Move [X31+160], X10
	243 Move [X31+168], X8
	244 Move [X31+176], W9
	245 Move [X31+128], V0
	246 Move [X31+136], V1
	247 Move W10, [X19+28]
	248 Move X8, [X19+16]
	249 Move X9, [X27]
	250 Add W10, W10, 1
	251 Move [X19+28], W10
	252 Compare X8, 0
	253 JumpIfEqual {320}
	254 NotImplemented "Instruction LDRSW not yet implemented."
	255 Move W11, [X8+24]
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Add W9, W10, 1
	258 NotImplemented "Instruction MADD not yet implemented."
	259 Move [X19+24], W9
	260 Move [X8+32], D8
	261 Move W9, [X31+176]
	262 Move X10, [X31+168]
	263 Move [X8+56], W9
	264 Move [X8+40], X0
	265 Move [X8+48], X10
	266 Move V0, [X31+128]
	267 Move V1, [X31+144]
	268 Move X9, [X31+160]
	269 Move [X8+100], W31
	270 Move [X8+104], X31
	271 Move [X8+112], X22
	272 Move [X8+76], V1
	273 Move [X8+92], X9
	274 Move [X8+60], V0
	275 Move [X8+120], X31
	276 Move [X8+128], X31
	277 Move X8, [X9+32]
	278 Move W10, [X31+176]
	279 Move V0, [X31+128]
	280 Move V1, [X31+144]
	281 Add X1, X31, 184
	282 Move X8, [X8+192]
	283 Move X2, [X8+112]
	284 Move X8, [X31+160]
	285 Move X9, [X31+168]
	286 Move [X31+192], X0
	287 Move X0, X19
	288 Move [X31+184], D8
	289 Move [X24+8], W10
	290 Move [X24], X9
	291 Move [X25+32], X8
	292 Move [X25], V0
	293 Move [X25+8], V1
	294 Move [X31+252], W31
	295 Move [X31+256], X31
	296 Move [X31+264], X22
	297 Move [X26], X31
	298 Move [X26+8], X31
	299 Call List`1<LagCompensatedHit>.AddWithResize, X0, X1
	300 Add W23, W23, 1
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Move X20, [X31+400]
	303 Move X19, [X31+408]
	304 Move X22, [X31+384]
	305 Move X21, [X31+392]
	306 Move X24, [X31+368]
	307 Move X23, [X31+376]
	308 Move X26, [X31+352]
	309 Move X25, [X31+360]
	310 Move X28, [X31+336]
	311 Move X27, [X31+344]
	312 Move X29, [X31+320]
	313 Move X30, [X31+328]
	314 Move D9, [X31+304]
	315 Move D8, [X31+312]
	316 Move D11, [X31+288]
	317 Move D10, [X31+296]
	318 Add X31, X31, 416
	319 Return 
	320 Call 0x1C17F20
	321 Call 0x1C17F28

Method: System.Boolean NarrowPhaseSphere(ref Fusion.LagCompensation.HitboxCollider c, UnityEngine.Vector3 origin, System.Single radius, out UnityEngine.Vector3 point, out UnityEngine.Vector3 normal)

Disassembly:
	0x01EF0E80 STR W1, [X0 + 0x14]
	0x01EF0E84 RET
	0x01EF0E88 LDR W0, [X0 + 0x18]
	0x01EF0E8C RET
	0x01EF0E90 STR W1, [X0 + 0x18]
	0x01EF0E94 RET
	0x01EF0E98 LDR V0, [X0 + 0x20]
	0x01EF0E9C RET
	0x01EF0EA0 STR D0, [X0 + 0x20]
	0x01EF0EA4 RET
	0x01EF0EA8 LDR V0, [X0 + 0x28]
	0x01EF0EAC RET
	0x01EF0EB0 STR D0, [X0 + 0x28]
	0x01EF0EB4 RET
	0x01EF0EB8 LDR V0, [X0 + 0x30]
	0x01EF0EBC RET
	0x01EF0EC0 STR D0, [X0 + 0x30]
	0x01EF0EC4 RET
	0x01EF0EC8 LDR V0, [X0 + 0x38]
	0x01EF0ECC RET
	0x01EF0ED0 STR D0, [X0 + 0x38]
	0x01EF0ED4 RET
	0x01EF0ED8 LDR V0, [X0 + 0x40]
	0x01EF0EDC RET
	0x01EF0EE0 STR D0, [X0 + 0x40]
	0x01EF0EE4 RET
	0x01EF0EE8 LDR V0, [X0 + 0x48]
	0x01EF0EEC RET
	0x01EF0EF0 STR D0, [X0 + 0x48]
	0x01EF0EF4 RET
	0x01EF0EF8 STR X30, [X31 - 0x10]!
	0x01EF0EFC TBZ X2, 0x0, 0x1EF0F08
	0x01EF0F00 CBNZ X0, 0x1EF0F10
	0x01EF0F04 BL 0x1C16F20
	0x01EF0F08 LDR W8, [X0 + 0x10]
	0x01EF0F0C ADD W1, W8, W1
	0x01EF0F10 STR W1, [X0 + 0x10]
	0x01EF0F14 LDR X30, [X31], #0x10
	0x01EF0F18 RET
	0x01EF0F1C STR X30, [X31 - 0x10]!
	0x01EF0F20 TBZ X2, 0x0, 0x1EF0F2C
	0x01EF0F24 CBNZ X0, 0x1EF0F34
	0x01EF0F28 BL 0x1C16F20
	0x01EF0F2C LDR W8, [X0 + 0x10]
	0x01EF0F30 ADD W1, W8, W1
	0x01EF0F34 STR W1, [X0 + 0x14]
	0x01EF0F38 LDR X30, [X31], #0x10
	0x01EF0F3C RET
	0x01EF0F40 STR X30, [X31 - 0x10]!
	0x01EF0F44 TBZ X2, 0x0, 0x1EF0F50
	0x01EF0F48 CBNZ X0, 0x1EF0F58
	0x01EF0F4C BL 0x1C16F20
	0x01EF0F50 LDR W8, [X0 + 0x18]
	0x01EF0F54 ADD W1, W8, W1
	0x01EF0F58 STR W1, [X0 + 0x18]
	0x01EF0F5C LDR X30, [X31], #0x10
	0x01EF0F60 RET
	0x01EF0F64 STR X30, [X31 - 0x10]!
	0x01EF0F68 TBZ X1, 0x0, 0x1EF0F74
	0x01EF0F6C CBNZ X0, 0x1EF0F7C
	0x01EF0F70 BL 0x1C16F20
	0x01EF0F74 LDR V1, [X0 + 0x20]
	0x01EF0F78 FADD D0, D1, D0
	0x01EF0F7C STR D0, [X0 + 0x20]
	0x01EF0F80 LDR X30, [X31], #0x10
	0x01EF0F84 RET
	0x01EF0F88 STR X30, [X31 - 0x10]!
	0x01EF0F8C TBZ X1, 0x0, 0x1EF0F98
	0x01EF0F90 CBNZ X0, 0x1EF0FA0
	0x01EF0F94 BL 0x1C16F20
	0x01EF0F98 LDR V1, [X0 + 0x28]
	0x01EF0F9C FADD D0, D1, D0
	0x01EF0FA0 STR D0, [X0 + 0x28]
	0x01EF0FA4 LDR X30, [X31], #0x10
	0x01EF0FA8 RET
	0x01EF0FAC STR X30, [X31 - 0x10]!
	0x01EF0FB0 TBZ X1, 0x0, 0x1EF0FBC
	0x01EF0FB4 CBNZ X0, 0x1EF0FC4
	0x01EF0FB8 BL 0x1C16F20
	0x01EF0FBC LDR V1, [X0 + 0x30]
	0x01EF0FC0 FADD D0, D1, D0
	0x01EF0FC4 STR D0, [X0 + 0x30]
	0x01EF0FC8 LDR X30, [X31], #0x10
	0x01EF0FCC RET
	0x01EF0FD0 STR X30, [X31 - 0x10]!
	0x01EF0FD4 TBZ X1, 0x0, 0x1EF0FE0
	0x01EF0FD8 CBNZ X0, 0x1EF0FE8
	0x01EF0FDC BL 0x1C16F20
	0x01EF0FE0 LDR V1, [X0 + 0x38]
	0x01EF0FE4 FADD D0, D1, D0
	0x01EF0FE8 STR D0, [X0 + 0x38]
	0x01EF0FEC LDR X30, [X31], #0x10
	0x01EF0FF0 RET
	0x01EF0FF4 STR X30, [X31 - 0x10]!
	0x01EF0FF8 TBZ X1, 0x0, 0x1EF1004
	0x01EF0FFC CBNZ X0, 0x1EF100C
	0x01EF1000 BL 0x1C16F20
	0x01EF1004 LDR V1, [X0 + 0x40]
	0x01EF1008 FADD D0, D1, D0
	0x01EF100C STR D0, [X0 + 0x40]
	0x01EF1010 LDR X30, [X31], #0x10
	0x01EF1014 RET
	0x01EF1018 STR X30, [X31 - 0x10]!
	0x01EF101C TBZ X1, 0x0, 0x1EF1028
	0x01EF1020 CBNZ X0, 0x1EF1030
	0x01EF1024 BL 0x1C16F20
	0x01EF1028 LDR V1, [X0 + 0x48]
	0x01EF102C FADD D0, D1, D0
	0x01EF1030 STR D0, [X0 + 0x48]
	0x01EF1034 LDR X30, [X31], #0x10
	0x01EF1038 RET
	0x01EF103C STR X30, [X31 - 0x20]!
	0x01EF1040 STP X20, X19, [X31 + 0x10]
	0x01EF1044 ADRP X20, 0x24E8000
	0x01EF1048 LDRB W8, [X20 + 0x5D0]
	0x01EF104C MOV X19, X0
	0x01EF1050 TBNZ X8, 0x0, 0x1EF1080
	0x01EF1054 ADRP X0, 0x220F000
	0x01EF1058 LDR X0, [X0 + 0x608]
	0x01EF105C BL 0x1C16CF4
	0x01EF1060 ADRP X0, 0x220F000
	0x01EF1064 LDR X0, [X0 + 0x610]
	0x01EF1068 BL 0x1C16CF4
	0x01EF106C ADRP X0, 0x220F000
	0x01EF1070 LDR X0, [X0 + 0x618]
	0x01EF1074 BL 0x1C16CF4
	0x01EF1078 MOVZ W8, 0x1
	0x01EF107C STRB W8, [X20 + 0x5D0]
	0x01EF1080 LDR X0, [X19 + 0x28]
	0x01EF1084 CBZ X0, 0x1EF10D8
	0x01EF1088 LDR W8, [X0 + 0x18]
	0x01EF108C CMP W8, 0x0
	0x01EF1090 B.LE 0x1EF10AC
	0x01EF1094 ADRP X8, 0x220F000
	0x01EF1098 LDR X8, [X8 + 0x610]
	0x01EF109C LDP X20, X19, [X31 + 0x10]
	0x01EF10A0 LDR X1, [X8]
	0x01EF10A4 LDR X30, [X31], #0x20
	0x01EF10A8 B 0x26022C0
	0x01EF10AC ADRP X8, 0x220F000
	0x01EF10B0 LDR X8, [X8 + 0x608]
	0x01EF10B4 LDR X0, [X8]
	0x01EF10B8 BL 0x1C16F10
	0x01EF10BC MOV X1, X31
	0x01EF10C0 MOV X19, X0
	0x01EF10C4 BL 0x33BDD8C
	0x01EF10C8 MOV X0, X19
	0x01EF10CC LDP X20, X19, [X31 + 0x10]
	0x01EF10D0 LDR X30, [X31], #0x20
	0x01EF10D4 RET
	0x01EF10D8 BL 0x1C16F20
	0x01EF10DC MOV X1, X31
	0x01EF10E0 B 0x33BDD8C
	0x01EF10E4 STR X30, [X31 - 0x30]!
	0x01EF10E8 STP X22, X21, [X31 + 0x10]
	0x01EF10EC STP X20, X19, [X31 + 0x20]
	0x01EF10F0 ADRP X22, 0x24E8000
	0x01EF10F4 LDRB W8, [X22 + 0x5D1]
	0x01EF10F8 MOV W20, W2
	0x01EF10FC MOV X19, X1
	0x01EF1100 MOV X21, X0
	0x01EF1104 TBNZ X8, 0x0, 0x1EF1128
	0x01EF1108 ADRP X0, 0x220E000
	0x01EF110C LDR X0, [X0 + 0xC60]
	0x01EF1110 BL 0x1C16CF4
	0x01EF1114 ADRP X0, 0x220E000
	0x01EF1118 LDR X0, [X0 + 0xC70]
	0x01EF111C BL 0x1C16CF4
	0x01EF1120 MOVZ W8, 0x1
	0x01EF1124 STRB W8, [X22 + 0x5D1]
	0x01EF1128 LDR X0, [X21 + 0x10]
	0x01EF112C CBZ X0, 0x1EF1174
	0x01EF1130 TBZ X20, 0x0, 0x1EF1154
	0x01EF1134 ADRP X8, 0x220E000
	0x01EF1138 LDR X8, [X8 + 0xC60]
	0x01EF113C AND X1, X19, 0x0
	0x01EF1140 LDP X20, X19, [X31 + 0x20]
	0x01EF1144 LDP X22, X21, [X31 + 0x10]
	0x01EF1148 LDR X2, [X8]
	0x01EF114C LDR X30, [X31], #0x30
	0x01EF1150 B 0x2DB9F9C
	0x01EF1154 ADRP X8, 0x220E000
	0x01EF1158 LDR X8, [X8 + 0xC70]
	0x01EF115C AND X1, X19, 0x0
	0x01EF1160 LDP X20, X19, [X31 + 0x20]
	0x01EF1164 LDP X22, X21, [X31 + 0x10]
	0x01EF1168 LDR X2, [X8]
	0x01EF116C LDR X30, [X31], #0x30
	0x01EF1170 B 0x2DB96D0
	0x01EF1174 BL 0x1C16F20
	0x01EF1178 STR X30, [X31 - 0x20]!
	0x01EF117C STP X20, X19, [X31 + 0x10]
	0x01EF1180 ADRP X20, 0x24E8000
	0x01EF1184 LDRB W8, [X20 + 0x5D2]
	0x01EF1188 MOV X19, X0
	0x01EF118C TBNZ X8, 0x0, 0x1EF11A4
	0x01EF1190 ADRP X0, 0x220F000
	0x01EF1194 LDR X0, [X0 + 0x620]
	0x01EF1198 BL 0x1C16CF4
	0x01EF119C MOVZ W8, 0x1
	0x01EF11A0 STRB W8, [X20 + 0x5D2]
	0x01EF11A4 LDR X0, [X19 + 0x10]
	0x01EF11A8 CBZ X0, 0x1EF11C4
	0x01EF11AC ADRP X8, 0x220F000
	0x01EF11B0 LDR X8, [X8 + 0x620]
	0x01EF11B4 LDP X20, X19, [X31 + 0x10]
	0x01EF11B8 LDR X1, [X8]
	0x01EF11BC LDR X30, [X31], #0x20
	0x01EF11C0 B 0x2DB9498

ISIL:
	001 Subtract X31, X31, 384
	002 Move [X31+288], D14
	003 Move [X31+296], D13
	004 Move [X31+304], D12
	005 Move [X31+312], D11
	006 Move [X31+320], D10
	007 Move [X31+328], D9
	008 Move [X31+336], D8
	009 Move [X31+344], X29
	010 Move [X31+352], X30
	011 Move [X31+360], X21
	012 Move [X31+368], X20
	013 Move [X31+376], X19
	014 Move V10, V1
	015 NotImplemented "Instruction MOVI not yet implemented."
	016 Move [X31+256], X31
	017 Move [X31+264], X31
	018 Move [X31+280], W31
	019 Move [X31+272], X31
	020 Move [X31+224], X31
	021 Move [X31+232], X31
	022 Move [X31+248], W31
	023 Move [X31+240], X31
	024 Move [X31+192], V1
	025 Move [X31+200], V1
	026 Move [X31+160], V1
	027 Move [X31+168], V1
	028 Move W8, [X1]
	029 Move X19, X3
	030 Move X20, X2
	031 Move V8, V3
	032 Move V9, V2
	033 Move X21, X1
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move V11, V0
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add X8, X31, 96
	039 Move X0, X21
	040 Call HitboxCollider.get_LocalToWorld, X0
	041 Move V0, [X31+96]
	042 Move V1, [X31+112]
	043 Move V2, [X31+128]
	044 Move V3, [X31+144]
	045 Add X8, X31, 32
	046 Add X0, X31, 160
	047 Move X1, X31
	048 Move [X31+160], V0
	049 Move [X31+168], V1
	050 Move [X31+192], V2
	051 Move [X31+200], V3
	052 Call Matrix4x4.get_inverse, X0
	053 Move V0, [X31+32]
	054 Move V1, [X31+48]
	055 Move V2, [X31+64]
	056 Move V3, [X31+80]
	057 Add X0, X31, 160
	058 Move X1, X31
	059 Move [X31+160], V0
	060 Move [X31+168], V1
	061 Move [X31+192], V2
	062 Move [X31+200], V3
	063 Move V0, V11
	064 Move V1, V10
	065 Move V2, V9
	066 Call Matrix4x4.MultiplyPoint, X0, X1
	067 Move S3, [X21+72]
	068 Move S4, [X21+76]
	069 Move S5, [X21+80]
	070 Move S6, [X21+84]
	071 Move S7, [X21+88]
	072 Move S16, [X21+92]
	073 Add X0, X31, 256
	074 Subtract S3, S0, S3
	075 Subtract S4, S1, S4
	076 Subtract S5, S2, S5
	077 Move V0, V6
	078 Move V1, V7
	079 Move V2, V16
	080 Move V6, V8
	081 Move X1, X31
	082 Call LagCompensationUtils.LocalAABBSphereContact, X0, X1, V0, X2
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {252}
	087 Add X8, X31, 96
	088 Move X0, X21
	089 Call HitboxCollider.get_LocalToWorld, X0
	090 Move V0, [X31+96]
	091 Move V1, [X31+112]
	092 Move V2, [X31+128]
	093 Move V3, [X31+144]
	094 Move V4, [X31+256]
	095 Move V5, [X31+264]
	096 Move [X31+160], V0
	097 Move [X31+168], V1
	098 Move [X31+192], V2
	099 Move [X31+200], V3
	100 Move V0, [X21+72]
	101 Move V1, [X21+80]
	102 Add X0, X31, 160
	103 Move X1, X31
	104 Add V0, V4, V0
	105 Add S2, S5, S1
	106 Move S1, V0.S[1]
	107 Call Matrix4x4.MultiplyPoint, X0, X1
	108 Add X8, X31, 32
	109 Move X0, X21
	110 Move [X20], S0
	111 Move [X20+8], S1
	112 Move [X20+8], S2
	113 Call HitboxCollider.get_LocalToWorld, X0
	114 Move V3, [X31+32]
	115 Move V4, [X31+48]
	116 Move V5, [X31+64]
	117 Move V6, [X31+80]
	118 Move V0, [X31+268]
	119 Move V1, [X31+272]
	120 Move V2, [X31+276]
	121 Add X8, X31, 96
	122 Move X0, X21
	123 Call HitboxCollider.get_LocalToWorld, X0
	124 Move V0, [X31+96]
	125 Move V1, [X31+112]
	126 Move V2, [X31+128]
	127 Move V3, [X31+144]
	128 Add X8, X31, 32
	129 Add X0, X31, 160
	130 Move X1, X31
	131 Move [X31+160], V0
	132 Move [X31+168], V1
	133 Move [X31+192], V2
	134 Move [X31+200], V3
	135 Call Matrix4x4.get_inverse, X0
	136 Move V0, [X31+32]
	137 Move V1, [X31+48]
	138 Move V2, [X31+64]
	139 Move V3, [X31+80]
	140 Add X0, X31, 160
	141 Move X1, X31
	142 Move [X31+160], V0
	143 Move [X31+168], V1
	144 Move [X31+192], V2
	145 Move [X31+200], V3
	146 Move V0, V11
	147 Move V1, V10
	148 Move V2, V9
	149 Call Matrix4x4.MultiplyPoint, X0, X1
	150 Move X0, X21
	151 Move V9, V0
	152 Move V10, V1
	153 Move V11, V2
	154 Call HitboxCollider.get_CapsuleLocalTopCenter, X0
	155 Move X0, X21
	156 Move V12, V0
	157 Move V13, V1
	158 Move V14, V2
	159 Call HitboxCollider.get_CapsuleLocalBottomCenter, X0
	160 Move V6, [X21+96]
	161 Move V3, V0
	162 Move V4, V1
	163 Move V5, V2
	164 Add X0, X31, 224
	165 Move V0, V12
	166 Move V1, V13
	167 Move V2, V14
	168 Move X1, X31
	169 Move [X31+16], S8
	170 Move [X31+4], S10
	171 Move [X31+12], S11
	172 Move [X31], S9
	173 Call LagCompensationUtils.LocalSphereCapsuleIntersection, X0, X1, V0, X2, V1, X3
	174 Move TEMP, X0
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfNotEqual {252}
	178 Add X8, X31, 96
	179 Move X0, X21
	180 Call HitboxCollider.get_LocalToWorld, X0
	181 Move V3, [X31+96]
	182 Move V4, [X31+112]
	183 Move V5, [X31+128]
	184 Move V6, [X31+144]
	185 Move S0, [X31+224]
	186 Move S1, [X31+228]
	187 Move V2, [X31+232]
	188 Add X0, X31, 160
	189 Move X1, X31
	190 Move [X31+160], V3
	191 Move [X31+168], V4
	192 Move [X31+192], V5
	193 Move [X31+200], V6
	194 Call Matrix4x4.MultiplyPoint, X0, X1
	195 Add X8, X31, 32
	196 Move X0, X21
	197 Move [X20], S0
	198 Move [X20+8], S1
	199 Move [X20+8], S2
	200 Call HitboxCollider.get_LocalToWorld, X0
	201 Move V3, [X31+32]
	202 Move V4, [X31+48]
	203 Move V5, [X31+64]
	204 Move V6, [X31+80]
	205 Move S0, [X31+236]
	206 Move S1, [X31+240]
	207 Move V2, [X31+244]
	208 Add X0, X31, 160
	209 Move X1, X31
	210 Move [X31+160], V3
	211 Move [X31+168], V4
	212 Move [X31+192], V5
	213 Move [X31+200], V6
	214 Call Matrix4x4.MultiplyVector, X0, X1
	215 Move [X19], S0
	216 Move [X19+8], S1
	217 Move [X19+8], S2
	218 Add X8, X31, 96
	219 Move X0, X21
	220 Call HitboxCollider.get_LocalToWorld, X0
	221 Move V0, [X31+96]
	222 Move V1, [X31+112]
	223 Move V2, [X31+128]
	224 Move V3, [X31+144]
	225 Add X0, X31, 160
	226 Move X1, X31
	227 Move [X31+160], V0
	228 Move [X31+168], V1
	229 Move [X31+192], V2
	230 Move [X31+200], V3
	231 Move S0, [X21+72]
	232 Move S1, [X21+76]
	233 Move V2, [X21+80]
	234 Call Matrix4x4.MultiplyPoint, X0, X1
	235 Move V7, [X21+96]
	236 Move V4, V0
	237 Move V5, V1
	238 Move V6, V2
	239 Move V0, V11
	240 Move V1, V10
	241 Move V2, V9
	242 Move V3, V8
	243 Move X0, X20
	244 Move X1, X19
	245 Move X2, X31
	246 Call LagCompensationUtils.SphereSphere, X0, V0, X1, V1, X2, X3
	247 Move TEMP, X0
	248 And TEMP, TEMP, 1
	249 Compare TEMP, 1
	250 JumpIfNotEqual {252}
	251 Move W0, 1
	252 Move W0, W31
	253 Move [X20+8], W31
	254 Move [X20], X31
	255 Move [X19+8], W31
	256 Move [X19], X31
	257 Move X20, [X31+368]
	258 Move X19, [X31+376]
	259 Move X30, [X31+352]
	260 Move X21, [X31+360]
	261 Move X29, [X31+344]
	262 Move D9, [X31+328]
	263 Move D8, [X31+336]
	264 Move D11, [X31+312]
	265 Move D10, [X31+320]
	266 Move D13, [X31+296]
	267 Move D12, [X31+304]
	268 Move V14, [X31+288]
	269 Add X31, X31, 384
	270 Return X0

