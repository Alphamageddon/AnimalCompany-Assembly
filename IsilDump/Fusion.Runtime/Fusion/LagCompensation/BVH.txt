Type: Fusion.LagCompensation.BVH

Method: Fusion.LagCompensation.BVHNode get_rootBVH()

Disassembly:
	0x01EDF6B0 ADRP X0, 0x2214000
	0x01EDF6B4 LDR X0, [X0 + 0x8F0]
	0x01EDF6B8 BL 0x1C16D08
	0x01EDF6BC BL 0x1C16F10
	0x01EDF6C0 MOV X1, X31
	0x01EDF6C4 MOV X21, X0
	0x01EDF6C8 BL 0x3231AC4
	0x01EDF6CC ADRP X0, 0x2214000
	0x01EDF6D0 LDR X0, [X0 + 0x9D0]
	0x01EDF6D4 BL 0x1C16D08
	0x01EDF6D8 MOVZ W1, 0x5

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {10}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add X0, X8, 152
	008 Move X30, [X31+16]
	009 Return X0
	010 Call 0x1C17F20
	011 Call 0x1C17F28

Method: System.Void CopyFrom(Fusion.LagCompensation.ILagCompensationBroadphase other)

Disassembly:
	0x01EDF6DC BL 0x1C16D6C
	0x01EDF6E0 MOV X23, X0
	0x01EDF6E4 BL 0x19903C0
	0x01EDF6E8 MOV X0, X23
	0x01EDF6EC MOV X1, X20
	0x01EDF6F0 BL 0x19980B4
	0x01EDF6F4 MOV X0, X23
	0x01EDF6F8 MOV X1, X31
	0x01EDF6FC MOV X2, X20
	0x01EDF700 BL 0x1993444
	0x01EDF704 MOV X0, X23
	0x01EDF708 BL 0x19903C0
	0x01EDF70C ADRP X20, 0x2221000
	0x01EDF710 LDR X20, [X20 + 0x378]
	0x01EDF714 MOV X0, X20
	0x01EDF718 BL 0x1C16D08
	0x01EDF71C MOV X1, X0
	0x01EDF720 MOV X0, X23
	0x01EDF724 BL 0x19980B4
	0x01EDF728 MOV X0, X20
	0x01EDF72C BL 0x1C16D08
	0x01EDF730 MOV X2, X0
	0x01EDF734 MOVZ W1, 0x1
	0x01EDF738 MOV X0, X23
	0x01EDF73C BL 0x1993444
	0x01EDF740 ADRP X0, 0x2221000
	0x01EDF744 LDR X0, [X0 + 0x350]
	0x01EDF748 BL 0x1C16D08
	0x01EDF74C BL 0x19903D0
	0x01EDF750 LDR W8, [X22 + 0x48]
	0x01EDF754 ADRP X20, 0x2214000
	0x01EDF758 STR W8, [X31]
	0x01EDF75C LDR X20, [X20 + 0x758]
	0x01EDF760 MOV X0, X20
	0x01EDF764 BL 0x1C16D08
	0x01EDF768 ADD X1, X31, 0x0
	0x01EDF76C BL 0x1C16E04
	0x01EDF770 MOV X24, X0
	0x01EDF774 MOV X0, X23
	0x01EDF778 BL 0x19903C0
	0x01EDF77C MOV X0, X23
	0x01EDF780 MOV X1, X24
	0x01EDF784 BL 0x19980B4
	0x01EDF788 MOVZ W1, 0x2
	0x01EDF78C MOV X0, X23
	0x01EDF790 MOV X2, X24
	0x01EDF794 BL 0x1993444
	0x01EDF798 LDR W8, [X22 + 0x50]
	0x01EDF79C MOV X0, X20
	0x01EDF7A0 STR W8, [X31 + 0x1C]
	0x01EDF7A4 BL 0x1C16D08
	0x01EDF7A8 ADD X1, X31, 0x1C
	0x01EDF7AC BL 0x1C16E04
	0x01EDF7B0 MOV X24, X0
	0x01EDF7B4 MOV X0, X23
	0x01EDF7B8 BL 0x19903C0
	0x01EDF7BC MOV X0, X23
	0x01EDF7C0 MOV X1, X24
	0x01EDF7C4 BL 0x19980B4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x24FB000
	006 Move W8, [X21+1390]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2222000
	014 Move X0, [X0+832]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1390], W8
	018 Compare X19, 0
	019 JumpIfEqual {64}
	020 Move X9, 0x2222000
	021 Move X9, [X9+832]
	022 Move X8, [X19]
	023 Move X1, [X9]
	024 Move W10, [X8+304]
	025 Move W9, [X1+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, [X8+200]
	028 Add X8, X8, X9
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, [X20+16]
	032 Compare X0, 0
	033 JumpIfEqual {64}
	034 Move W8, [X19+56]
	035 Move W9, [X0+24]
	036 Subtract W1, W8, W9
	037 Move X0, X20
	038 Call BVH.ResizeNodesArray, X0, X1
	039 Move X0, [X20+16]
	040 Compare X0, 0
	041 JumpIfEqual {64}
	042 Move W2, [X0+24]
	043 Move W1, W31
	044 Move X3, X31
	045 Call Array.Clear, X0, X1, X2
	046 Move X0, [X19+16]
	047 Move X2, [X20+16]
	048 Move W4, [X19+56]
	049 Move W1, W31
	050 Move W3, W31
	051 Move X5, X31
	052 Call Array.Copy, X0, X1, X2, X3, X4
	053 Move W8, [X19+32]
	054 Move [X20+32], W8
	055 Move V0, [X19+56]
	056 Move [X20+56], D0
	057 Move W8, [X19+64]
	058 Move [X20+64], W8
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Return 
	064 Call 0x1C17F20
	065 Move X0, X19
	066 Call 0x1C181E0

Method: System.Int32 get_UsedNodesCount()

Disassembly:
	0x01EDF8D4 FADD S2, S2, S3
	0x01EDF8D8 FSUB S1, S7, S5

ISIL:
	001 Move W0, [X0+60]
	002 Return X0

Method: Fusion.LagCompensation.BVHNode GetNextNode(out System.Int32 index)

Disassembly:
	0x01EDF8DC FSUB V3.2S, V0.2S, V4.2S
	0x01EDF8E0 MOVI V16.2S, 0x3F, 0x18
	0x01EDF8E4 FMUL S1, S1, S17
	0x01EDF8E8 FADD V0.2S, V0.2S, V4.2S
	0x01EDF8EC FSUB V4.2S, V6.2S, V3.2S
	0x01EDF8F0 FADD S5, S5, S1
	0x00000000 INVALID
	0x01EDF8F8 FSUB S1, S5, S1
	0x01EDF8FC FADD V3.2S, V3.2S, V4.2S
	0x01EDF900 FSUB S2, S2, S1
	0x01EDF904 FSUB V3.2S, V3.2S, V4.2S
	0x01EDF908 FMUL S2, S2, S17
	0x01EDF90C FSUB V0.2S, V0.2S, V3.2S
	0x01EDF910 FADD S1, S1, S2
	0x00000000 INVALID
	0x01EDF918 STR S1, [X8 + 0x8]
	0x01EDF91C FADD V1.2S, V3.2S, V0.2S
	0x01EDF920 STUR D0, [X8 + 0xC]
	0x01EDF924 STR D1, [X8]
	0x01EDF928 STR S2, [X8 + 0x14]
	0x01EDF92C RET
	0x01EDF930 STR X30, [X31 - 0x30]!
	0x01EDF934 STP X22, X21, [X31 + 0x10]
	0x01EDF938 STP X20, X19, [X31 + 0x20]
	0x01EDF93C ADRP X21, 0x24FA000
	0x01EDF940 LDRB W8, [X21 + 0x573]
	0x01EDF944 MOV X19, X1
	0x01EDF948 MOV X20, X0
	0x01EDF94C TBNZ X8, 0x0, 0x1EDF964
	0x01EDF950 ADRP X0, 0x2221000
	0x01EDF954 LDR X0, [X0 + 0x350]
	0x01EDF958 BL 0x1C16CF4
	0x01EDF95C MOVZ W8, 0x1
	0x01EDF960 STRB W8, [X21 + 0x573]
	0x01EDF964 STR W31, [X31 + 0xC]
	0x01EDF968 LDR X21, [X20 + 0x18]
	0x01EDF96C CBZ X21, 0x1EDFA18
	0x01EDF970 ADRP X22, 0x24FA000
	0x01EDF974 LDRB W8, [X22 + 0x5A4]
	0x01EDF978 CBNZ W8, 0x1EDF990
	0x01EDF97C ADRP X0, 0x2221000
	0x01EDF980 LDR X0, [X0 + 0x358]
	0x01EDF984 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+64]
	003 Compare W8, 0
	004 JumpIfEqual {17}
	005 Move [X1], W8
	006 Move X8, [X0+16]
	007 Compare X8, 0
	008 JumpIfEqual {46}
	009 NotImplemented "Instruction LDRSW not yet implemented."
	010 Move W10, [X8+24]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W10, 120
	013 NotImplemented "Instruction MADD not yet implemented."
	014 Move W9, [X9+132]
	015 Move [X0+64], W9
	016 Move W9, [X1]
	017 Move W9, [X0+56]
	018 Add W8, W9, 1
	019 Move [X0+56], W8
	020 Move [X1], W9
	021 Move X8, [X0+16]
	022 Compare X8, 0
	023 JumpIfEqual {46}
	024 Move W10, [X8+24]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W10, 120
	027 NotImplemented "Instruction MOVI not yet implemented."
	028 NotImplemented "Instruction SMADDL not yet implemented."
	029 Move W9, 1
	030 Move [X8+32], V0
	031 Move [X8+112], X31
	032 Move [X8+80], V0
	033 Move [X8+88], V0
	034 Move [X8+48], V0
	035 Move [X8+56], V0
	036 Move [X8+16], V0
	037 Move [X8+24], V0
	038 Move [X8+96], W9
	039 Move W9, [X0+60]
	040 Add W9, W9, 1
	041 Move [X0+60], W9
	042 Move X0, X8
	043 Move X30, [X31+16]
	044 Return X0
	045 Call 0x1C17F28
	046 Call 0x1C17F20

Method: System.Void DisposeNode(System.Int32 index)

Disassembly:
	0x01EDF988 MOVZ W8, 0x1
	0x01EDF98C STRB W8, [X22 + 0x5A4]
	0x01EDF990 LDR X0, [X21 + 0x10]
	0x01EDF994 CBZ X0, 0x1EDFA18
	0x01EDF998 ADRP X8, 0x2221000
	0x01EDF99C LDR X8, [X8 + 0x358]
	0x01EDF9A0 ADD X2, X31, 0xC
	0x01EDF9A4 MOV X1, X19
	0x01EDF9A8 LDR X3, [X8]
	0x01EDF9AC BL 0x2AA09F8
	0x01EDF9B0 MOV W21, W0
	0x01EDF9B4 TBZ X0, 0x0, 0x1EDFA04
	0x01EDF9B8 LDR X8, [X20 + 0x10]
	0x01EDF9BC CBZ X8, 0x1EDFA18
	0x01EDF9C0 LDRSW X9, [X31 + 0xC]
	0x01EDF9C4 LDR W10, [X8 + 0x18]
	0x01EDF9C8 CMP W9, W10
	0x01EDF9CC B.CS 0x1EDFA1C

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {18}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W9, 120
	008 NotImplemented "Instruction SMADDL not yet implemented."
	009 Move [X8+128], W31
	010 Move W9, [X0+64]
	011 Move [X8+132], W9
	012 Move W8, [X0+60]
	013 Subtract W8, W8, 1
	014 Move [X0+60], W8
	015 Move [X0+64], W1
	016 Move X30, [X31+16]
	017 Return 
	018 Call 0x1C17F20
	019 Call 0x1C17F28

Method: Fusion.LagCompensation.BVHNode GetNode(System.Int32 index)

Disassembly:
	0x01EDF9D0 ADRP X10, 0x2221000
	0x01EDF9D4 LDR X10, [X10 + 0x350]
	0x01EDF9D8 MOVZ W11, 0x78
	0x01EDF9DC MADD X8, X9, X11, X8
	0x01EDF9E0 ADD X22, X8, 0x20
	0x01EDF9E4 LDR X0, [X10]
	0x01EDF9E8 LDR W10, [X0 + 0xE0]
	0x01EDF9EC CBNZ W10, 0x1EDF9F4
	0x01EDF9F0 BL 0x1C16DFC
	0x01EDF9F4 MOV X0, X22
	0x01EDF9F8 MOV X1, X20
	0x01EDF9FC MOV X2, X19
	0x01EDFA00 BL 0x1EDFA20

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {12}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W9, 120
	008 NotImplemented "Instruction SMADDL not yet implemented."
	009 Add X0, X8, 32
	010 Move X30, [X31+16]
	011 Return X0
	012 Call 0x1C17F20
	013 Call 0x1C17F28

Method: System.Void Update(Fusion.HitboxRoot changed, System.Int32 tick)

Disassembly:
	0x01EDFA04 AND W0, W21, 0x1
	0x01EDFA08 LDP X20, X19, [X31 + 0x20]
	0x01EDFA0C LDP X22, X21, [X31 + 0x10]
	0x01EDFA10 LDR X30, [X31], #0x30
	0x01EDFA14 RET
	0x01EDFA18 BL 0x1C16F20
	0x01EDFA1C BL 0x1C16F28
	0x01EDFA20 STP X30, X23, [X31 - 0x30]!
	0x01EDFA24 STP X22, X21, [X31 + 0x10]
	0x01EDFA28 STP X20, X19, [X31 + 0x20]
	0x01EDFA2C ADRP X23, 0x24FA000
	0x01EDFA30 ADRP X22, 0x2214000
	0x01EDFA34 LDRB W8, [X23 + 0x582]
	0x01EDFA38 LDR X22, [X22 + 0x598]
	0x01EDFA3C MOV X21, X2
	0x01EDFA40 MOV X19, X1
	0x01EDFA44 MOV X20, X0
	0x01EDFA48 TBNZ X8, 0x0, 0x1EDFA6C
	0x01EDFA4C ADRP X0, 0x2221000
	0x01EDFA50 LDR X0, [X0 + 0x350]
	0x01EDFA54 BL 0x1C16CF4
	0x01EDFA58 ADRP X0, 0x2214000
	0x01EDFA5C LDR X0, [X0 + 0x598]
	0x01EDFA60 BL 0x1C16CF4
	0x01EDFA64 MOVZ W8, 0x1
	0x01EDFA68 STRB W8, [X23 + 0x582]
	0x01EDFA6C LDR X0, [X22]
	0x01EDFA70 LDR X22, [X20 + 0x68]
	0x01EDFA74 LDR W8, [X0 + 0xE0]
	0x01EDFA78 CBNZ W8, 0x1EDFA80
	0x01EDFA7C BL 0x1C16DFC
	0x01EDFA80 MOV X0, X22
	0x01EDFA84 MOV X1, X31
	0x01EDFA88 BL 0x3C38948
	0x01EDFA8C TBZ X0, 0x0, 0x1EDFB9C
	0x01EDFA90 CBZ X19, 0x1EDFB98
	0x01EDFA94 LDR X22, [X19 + 0x18]
	0x01EDFA98 CBZ X22, 0x1EDFB98
	0x01EDFA9C ADRP X23, 0x24FA000
	0x01EDFAA0 LDRB W8, [X23 + 0x5A8]
	0x01EDFAA4 CBNZ W8, 0x1EDFABC
	0x01EDFAA8 ADRP X0, 0x2221000
	0x01EDFAAC LDR X0, [X0 + 0x390]
	0x01EDFAB0 BL 0x1C16CF4
	0x01EDFAB4 MOVZ W8, 0x1
	0x01EDFAB8 STRB W8, [X23 + 0x5A8]
	0x01EDFABC LDR X0, [X22 + 0x10]
	0x01EDFAC0 CBZ X0, 0x1EDFB98
	0x01EDFAC4 ADRP X8, 0x2221000
	0x01EDFAC8 LDR X8, [X8 + 0x390]
	0x01EDFACC ADRP X22, 0x2221000
	0x01EDFAD0 MOV X1, X21
	0x01EDFAD4 LDR X2, [X8]
	0x01EDFAD8 LDR X22, [X22 + 0x350]
	0x01EDFADC BL 0x2AA03C4
	0x01EDFAE0 LDR X0, [X22]
	0x01EDFAE4 LDR W8, [X0 + 0xE0]
	0x01EDFAE8 CBNZ W8, 0x1EDFAF0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x24FB000
	007 Move W8, [X21+1391]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2222000
	015 Move X0, [X0+848]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1391], W8
	019 Move [X31+12], W31
	020 Move X21, [X19+24]
	021 Compare X21, 0
	022 JumpIfEqual {71}
	023 Move X22, 0x24FB000
	024 Move W8, [X22+1444]
	025 Compare W8, 0
	026 JumpIfNotEqual {32}
	027 Move X0, 0x2222000
	028 Move X0, [X0+856]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+1444], W8
	032 Move X0, [X21+16]
	033 Compare X0, 0
	034 JumpIfEqual {71}
	035 Move X8, 0x2222000
	036 Move X8, [X8+856]
	037 Add X2, X31, 12
	038 Move X1, X20
	039 Move X3, [X8]
	040 Call Dictionary`2<Object, Int32>.TryGetValue, X0, X1, X2
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {65}
	045 Move X8, [X19+16]
	046 Compare X8, 0
	047 JumpIfEqual {71}
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Move W10, [X8+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X10, 0x2222000
	052 Move X10, [X10+848]
	053 Move W11, 120
	054 NotImplemented "Instruction MADD not yet implemented."
	055 Add X20, X8, 32
	056 Move X0, [X10]
	057 Move W10, [X0+224]
	058 Compare W10, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X20
	062 Move X1, X19
	063 Move X2, X31
	064 Call 0x1EEB280
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X30, [X31+48]
	070 Return 
	071 Call 0x1C17F20
	072 Call 0x1C17F28

Method: System.Void Traverse(Fusion.LagCompensation.IBoundsTraversalTest hitTest, System.Collections.Generic.HashSet`1<Fusion.HitboxRoot> candidateRoots, System.Int32 layerMask)

Disassembly:
	0x01EDFAEC BL 0x1C16DFC
	0x01EDFAF0 LDR W8, [X20 + 0x48]
	0x01EDFAF4 CMP W8, 0x1
	0x01EDFAF8 B.NE 0x1EDFB4C
	0x01EDFAFC LDR X8, [X19 + 0x10]
	0x01EDFB00 CBZ X8, 0x1EDFB98
	0x01EDFB04 LDR W9, [X8 + 0x18]
	0x01EDFB08 CMP W9, 0x1
	0x01EDFB0C B.LS 0x1EDFBE4
	0x01EDFB10 LDR X0, [X22]
	0x01EDFB14 ADD X20, X8, 0x98
	0x01EDFB18 LDR W9, [X0 + 0xE0]
	0x01EDFB1C CBNZ W9, 0x1EDFB24
	0x01EDFB20 BL 0x1C16DFC
	0x01EDFB24 MOV X0, X20
	0x01EDFB28 MOV X1, X19
	0x01EDFB2C LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W19, W3
	007 Move X20, X2
	008 Move X21, X1
	009 Move X22, X0
	010 Call BVH.get_rootBVH, X0
	011 Move X1, X0
	012 Move X0, X22
	013 Move X2, X21
	014 Move X3, X20
	015 Move W4, W19
	016 Move X20, [X31+32]
	017 Move X19, [X31+40]
	018 Move X22, [X31+16]
	019 Move X21, [X31+24]
	020 Move X30, [X31+48]

Method: System.Void TraverseInternal(ref Fusion.LagCompensation.BVHNode curNode, Fusion.LagCompensation.IBoundsTraversalTest hitTest, System.Collections.Generic.HashSet`1<Fusion.HitboxRoot> candidateRoots, System.Int32 layermask)

Disassembly:
	0x01EDFB30 LDP X22, X21, [X31 + 0x10]
	0x01EDFB34 MOVZ W2, 0x1
	0x01EDFB38 MOV W3, W31
	0x01EDFB3C MOV W4, W31
	0x01EDFB40 MOV X5, X31
	0x01EDFB44 LDP X30, X23, [X31], #0x30
	0x01EDFB48 B 0x1EDFD74
	0x01EDFB4C LDR X0, [X22]
	0x01EDFB50 LDR W8, [X0 + 0xE0]
	0x01EDFB54 CBNZ W8, 0x1EDFB5C
	0x01EDFB58 BL 0x1C16DFC
	0x01EDFB5C LDR X8, [X19 + 0x10]
	0x01EDFB60 CBZ X8, 0x1EDFB98
	0x01EDFB64 LDRSW X9, [X20 + 0x4C]
	0x01EDFB68 LDR W10, [X8 + 0x18]
	0x01EDFB6C CMP W9, W10
	0x01EDFB70 B.CS 0x1EDFBE4
	0x01EDFB74 LDR W2, [X20 + 0x48]
	0x01EDFB78 MOV X1, X19
	0x01EDFB7C LDP X20, X19, [X31 + 0x20]
	0x01EDFB80 LDP X22, X21, [X31 + 0x10]
	0x01EDFB84 MOVZ W10, 0x78
	0x01EDFB88 MADD X8, X9, X10, X8
	0x01EDFB8C ADD X0, X8, 0x20
	0x01EDFB90 LDP X30, X23, [X31], #0x30
	0x01EDFB94 B 0x1EE23F4
	0x01EDFB98 BL 0x1C16F20
	0x01EDFB9C ADRP X0, 0x2214000
	0x01EDFBA0 LDR X0, [X0 + 0x7D0]
	0x01EDFBA4 BL 0x1C16D08
	0x01EDFBA8 BL 0x1C16F10
	0x01EDFBAC MOV X19, X0
	0x01EDFBB0 ADRP X0, 0x2221000
	0x01EDFBB4 LDR X0, [X0 + 0x398]
	0x01EDFBB8 BL 0x1C16D08
	0x01EDFBBC MOV X1, X0
	0x01EDFBC0 MOV X0, X19
	0x01EDFBC4 MOV X2, X31
	0x01EDFBC8 BL 0x33B2C70
	0x01EDFBCC ADRP X0, 0x2221000
	0x01EDFBD0 LDR X0, [X0 + 0x3A0]
	0x01EDFBD4 BL 0x1C16D08
	0x01EDFBD8 MOV X1, X0
	0x01EDFBDC MOV X0, X19
	0x01EDFBE0 BL 0x1C16DEC
	0x01EDFBE4 BL 0x1C16F28
	0x01EDFBE8 STR D8, [X31 - 0x70]!
	0x01EDFBEC STP X29, X30, [X31 + 0x10]
	0x01EDFBF0 STP X28, X27, [X31 + 0x20]
	0x01EDFBF4 STP X26, X25, [X31 + 0x30]
	0x01EDFBF8 STP X24, X23, [X31 + 0x40]
	0x01EDFBFC STP X22, X21, [X31 + 0x50]
	0x01EDFC00 STP X20, X19, [X31 + 0x60]
	0x01EDFC04 ADRP X25, 0x24FA000
	0x01EDFC08 ADRP X29, 0x2215000
	0x01EDFC0C ADRP X24, 0x221B000
	0x01EDFC10 ADRP X28, 0x221E000
	0x01EDFC14 ADRP X27, 0x2221000
	0x01EDFC18 ADRP X26, 0x2221000
	0x01EDFC1C LDR X29, [X29 + 0xE08]
	0x01EDFC20 LDRB W8, [X25 + 0x574]
	0x01EDFC24 LDR X24, [X24 + 0x688]
	0x01EDFC28 LDR X28, [X28 + 0xDB8]
	0x01EDFC2C LDR X27, [X27 + 0x3A8]
	0x01EDFC30 LDR X26, [X26 + 0x3B0]
	0x01EDFC34 MOV W21, W4
	0x01EDFC38 MOV V8.16B, V0.16B
	0x01EDFC3C MOV X19, X3
	0x01EDFC40 MOV W23, W2
	0x01EDFC44 MOV X22, X1
	0x01EDFC48 MOV X20, X0
	0x01EDFC4C TBNZ X8, 0x0, 0x1EDFCA0
	0x01EDFC50 ADRP X0, 0x2221000
	0x01EDFC54 LDR X0, [X0 + 0x3B0]
	0x01EDFC58 BL 0x1C16CF4
	0x01EDFC5C ADRP X0, 0x2221000
	0x01EDFC60 LDR X0, [X0 + 0x350]
	0x01EDFC64 BL 0x1C16CF4
	0x01EDFC68 ADRP X0, 0x221B000
	0x01EDFC6C LDR X0, [X0 + 0x688]
	0x01EDFC70 BL 0x1C16CF4
	0x01EDFC74 ADRP X0, 0x2215000
	0x01EDFC78 LDR X0, [X0 + 0xE08]
	0x01EDFC7C BL 0x1C16CF4
	0x01EDFC80 ADRP X0, 0x2221000
	0x01EDFC84 LDR X0, [X0 + 0x3A8]
	0x01EDFC88 BL 0x1C16CF4
	0x01EDFC8C ADRP X0, 0x221E000
	0x01EDFC90 LDR X0, [X0 + 0xDB8]
	0x01EDFC94 BL 0x1C16CF4
	0x01EDFC98 MOVZ W8, 0x1
	0x01EDFC9C STRB W8, [X25 + 0x574]
	0x01EDFCA0 LDR X0, [X29]
	0x01EDFCA4 STR W31, [X31 + 0xC]
	0x01EDFCA8 BL 0x1C16F10
	0x01EDFCAC LDR X1, [X24]
	0x01EDFCB0 MOV X24, X0
	0x01EDFCB4 BL 0x2DA9EF4
	0x01EDFCB8 STR X24, [X20 + 0x28]
	0x01EDFCBC LDR X0, [X28]
	0x01EDFCC0 BL 0x1C16F10
	0x01EDFCC4 LDR X2, [X27]
	0x01EDFCC8 MOVZ W1, 0x2
	0x01EDFCCC MOV X24, X0
	0x01EDFCD0 BL 0x301B830
	0x01EDFCD4 MOVZ W8, 0x1
	0x01EDFCD8 MOV X0, X20
	0x01EDFCDC MOV X1, X31
	0x01EDFCE0 STR X24, [X20 + 0x30]
	0x01EDFCE4 STR W8, [X20 + 0x38]
	0x01EDFCE8 BL 0x33BDD8C
	0x01EDFCEC LDR X0, [X26]
	0x01EDFCF0 CMP W23, 0x20
	0x01EDFCF4 MOVZ W8, 0x20
	0x01EDFCF8 CSEL W1, W23, W8, GT
	0x01EDFCFC BL 0x1C16D6C
	0x01EDFD00 STP X0, X22, [X20 + 0x10]
	0x01EDFD04 ADD X1, X31, 0xC
	0x01EDFD08 MOV X0, X20
	0x01EDFD0C STR S8, [X20 + 0x44]
	0x01EDFD10 STR W21, [X20 + 0x48]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X23, 0x2222000
	014 Move X24, 0x2222000
	015 Move X25, 0x2222000
	016 Move X23, [X23+848]
	017 Move X24, [X24+864]
	018 Move X25, [X25+872]
	019 Move W19, W4
	020 Move X20, X3
	021 Move X21, X2
	022 Move X26, X1
	023 Move X22, X0
	024 Move X27, 0x24FB000
	025 Move W28, 120
	026 Move W29, 1
	027 Move W8, [X27+1392]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {39}
	032 Move X0, X23
	033 Call 0x1C17CF4
	034 Move X0, X25
	035 Call 0x1C17CF4
	036 Move X0, X24
	037 Call 0x1C17CF4
	038 Move [X27+1392], W29
	039 Move X0, [X23]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move W8, [X26+72]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Compare X21, 0
	047 JumpIfEqual {152}
	048 Move X8, [X21]
	049 Move X1, [X24]
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 Compare X9, 0
	052 JumpIfEqual {59}
	053 Move X10, [X8+176]
	054 Add X10, X10, 8
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Subtract X9, X9, 1
	058 Add X10, X10, 16
	059 Move X0, X21
	060 Move W2, W31
	061 Call 0x1C5D788
	062 NotImplemented "Instruction LDRSW not yet implemented."
	063 Add X8, X8, X9
	064 Add X0, X8, 312
	065 Move X8, [X0]
	066 Move X2, [X0+8]
	067 Add X1, X26, 24
	068 Move X0, X21
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {139}
	074 Move X0, [X23]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move W8, [X26+112]
	080 Compare W8, 0
	081 JumpIfEqual {111}
	082 Move W8, [X26+88]
	083 Compare W8, 0
	084 JumpIfEqual {111}
	085 Move X0, [X23]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X1, [X26+104]
	091 Compare X1, 0
	092 JumpIfEqual {111}
	093 Move W8, [X1+48]
	094 Move TEMP, X8
	095 And TEMP, TEMP, 8
	096 Compare TEMP, 8
	097 JumpIfEqual {111}
	098 Move X8, [X1+64]
	099 Compare X8, 0
	100 JumpIfEqual {111}
	101 Move W8, [X8+96]
	102 Move TEMP, X8
	103 And TEMP, TEMP, 2
	104 Compare TEMP, 2
	105 JumpIfEqual {111}
	106 Compare X20, 0
	107 JumpIfEqual {152}
	108 Move X2, [X25]
	109 Move X0, X20
	110 Call HashSet`1<Object>.Add, X0, X1
	111 Move X0, [X23]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1C17DFC
	116 Compare X22, 0
	117 JumpIfEqual {152}
	118 Move X8, [X22+16]
	119 Compare X8, 0
	120 JumpIfEqual {152}
	121 NotImplemented "Instruction LDRSW not yet implemented."
	122 Move W10, [X8+24]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 NotImplemented "Instruction MADD not yet implemented."
	125 Add X1, X8, 32
	126 Move X0, X22
	127 Move X2, X21
	128 Move X3, X20
	129 Move W4, W19
	130 Call BVH.TraverseInternal, X0, X1, X2, X3, X4
	131 Move X8, [X22+16]
	132 Compare X8, 0
	133 JumpIfEqual {152}
	134 NotImplemented "Instruction LDRSW not yet implemented."
	135 Move W10, [X8+24]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 NotImplemented "Instruction MADD not yet implemented."
	138 Add X26, X8, 32
	139 Move X20, [X31+80]
	140 Move X19, [X31+88]
	141 Move X22, [X31+64]
	142 Move X21, [X31+72]
	143 Move X24, [X31+48]
	144 Move X23, [X31+56]
	145 Move X26, [X31+32]
	146 Move X25, [X31+40]
	147 Move X28, [X31+16]
	148 Move X27, [X31+24]
	149 Move X29, [X31+96]
	150 Move X30, [X31+104]
	151 Return 
	152 Call 0x1C17F20
	153 Call 0x1C17F28

Method: System.Void PosUpdateRefit()

Disassembly:
	0x01EDFD14 BL 0x1EDE8DC
	0x01EDFD18 ADRP X8, 0x2221000
	0x01EDFD1C LDR X8, [X8 + 0x350]
	0x01EDFD20 LDR W21, [X31 + 0xC]
	0x01EDFD24 MOV X22, X0
	0x01EDFD28 LDR X8, [X8]
	0x01EDFD2C LDR W9, [X8 + 0xE0]
	0x01EDFD30 CBNZ W9, 0x1EDFD3C
	0x01EDFD34 MOV X0, X8
	0x01EDFD38 BL 0x1C16DFC
	0x01EDFD3C MOV X0, X22
	0x01EDFD40 MOV X1, X20
	0x01EDFD44 MOV W2, W21
	0x01EDFD48 MOV X5, X19
	0x01EDFD4C LDP X20, X19, [X31 + 0x60]
	0x01EDFD50 LDP X22, X21, [X31 + 0x50]
	0x01EDFD54 LDP X24, X23, [X31 + 0x40]
	0x01EDFD58 LDP X26, X25, [X31 + 0x30]
	0x01EDFD5C LDP X28, X27, [X31 + 0x20]
	0x01EDFD60 LDP X29, X30, [X31 + 0x10]
	0x01EDFD64 MOV W3, W31
	0x01EDFD68 MOV W4, W31
	0x01EDFD6C LDR V8, [X31], #0x70
	0x01EDFD70 B 0x1EDFD74
	0x01EDFD74 SUB X31, X31, 0xB0
	0x01EDFD78 STP X30, X25, [X31 + 0x70]
	0x01EDFD7C STP X24, X23, [X31 + 0x80]
	0x01EDFD80 STP X22, X21, [X31 + 0x90]
	0x01EDFD84 STP X20, X19, [X31 + 0xA0]
	0x01EDFD88 ADRP X25, 0x24FA000
	0x01EDFD8C LDRB W8, [X25 + 0x58A]
	0x01EDFD90 MOV X21, X5
	0x01EDFD94 MOV W22, W4
	0x01EDFD98 MOV W23, W3
	0x01EDFD9C MOV W24, W2
	0x01EDFDA0 MOV X20, X1
	0x01EDFDA4 MOV X19, X0
	0x01EDFDA8 TBNZ X8, 0x0, 0x1EDFDD8
	0x01EDFDAC ADRP X0, 0x2221000
	0x01EDFDB0 LDR X0, [X0 + 0x350]
	0x01EDFDB4 BL 0x1C16CF4
	0x01EDFDB8 ADRP X0, 0x2221000
	0x01EDFDBC LDR X0, [X0 + 0x3B8]
	0x01EDFDC0 BL 0x1C16CF4
	0x01EDFDC4 ADRP X0, 0x2221000
	0x01EDFDC8 LDR X0, [X0 + 0x3C0]
	0x01EDFDCC BL 0x1C16CF4
	0x01EDFDD0 MOVZ W8, 0x1
	0x01EDFDD4 STRB W8, [X25 + 0x58A]
	0x01EDFDD8 MOVZ W8, 0x1
	0x01EDFDDC STP W24, W23, [X19 + 0x48]
	0x01EDFDE0 STR X31, [X19 + 0x50]
	0x01EDFDE4 STR X31, [X19 + 0x68]
	0x01EDFDE8 STRB W31, [X19 + 0x70]
	0x01EDFDEC STRB W8, [X19 + 0x58]
	0x01EDFDF0 STR W22, [X19 + 0x5C]
	0x01EDFDF4 CBZ X20, 0x1EE0030
	0x01EDFDF8 LDR W8, [X20 + 0x20]
	0x01EDFDFC CMP W8, W22
	0x01EDFE00 B.GE 0x1EDFE08
	0x01EDFE04 STR W22, [X20 + 0x20]
	0x01EDFE08 STP X31, X31, [X19]
	0x01EDFE0C STR X31, [X19 + 0x10]
	0x01EDFE10 CBZ X21, 0x1EDFF9C
	0x01EDFE14 LDR W8, [X21 + 0x18]
	0x01EDFE18 CMP W8, 0x1
	0x01EDFE1C B.LT 0x1EDFF9C
	0x01EDFE20 B.NE 0x1EDFFB4
	0x01EDFE24 ADRP X8, 0x2221000
	0x01EDFE28 LDR X8, [X8 + 0x3C0]
	0x01EDFE2C MOV X0, X21
	0x01EDFE30 MOV W1, W31
	0x01EDFE34 LDR X2, [X8]
	0x01EDFE38 BL 0x301BCCC
	0x01EDFE3C STR X0, [X19 + 0x68]
	0x01EDFE40 CBZ X0, 0x1EE0030
	0x01EDFE44 ADRP X22, 0x24FA000
	0x01EDFE48 LDRB W8, [X22 + 0x22B]
	0x01EDFE4C MOV X21, X0
	0x01EDFE50 CBNZ W8, 0x1EDFE68
	0x01EDFE54 ADRP X0, 0x221E000
	0x01EDFE58 LDR X0, [X0 + 0xD58]
	0x01EDFE5C BL 0x1C16CF4
	0x01EDFE60 MOVZ W8, 0x1
	0x01EDFE64 STRB W8, [X22 + 0x22B]
	0x01EDFE68 ADRP X8, 0x221E000
	0x01EDFE6C LDR X8, [X8 + 0xD58]
	0x01EDFE70 MOV X0, X21
	0x01EDFE74 MOV W1, W31
	0x01EDFE78 LDR X2, [X8]
	0x01EDFE7C BL 0x22275E4
	0x01EDFE80 LDRB W8, [X0]
	0x01EDFE84 MOVZ W9, 0x1
	0x01EDFE88 STRB W9, [X19 + 0x70]
	0x01EDFE8C ORN W8, W31, W8, 0x0
	0x01EDFE90 AND W8, W8, 0x1
	0x01EDFE94 STRB W8, [X19 + 0x58]
	0x01EDFE98 ADRP X8, 0x2221000
	0x01EDFE9C LDR X8, [X8 + 0x350]
	0x01EDFEA0 LDR X23, [X20 + 0x18]
	0x01EDFEA4 LDR X21, [X19 + 0x68]
	0x01EDFEA8 LDR X0, [X8]
	0x01EDFEAC LDR W8, [X0 + 0xE0]
	0x01EDFEB0 CBNZ W8, 0x1EDFEB8
	0x01EDFEB4 BL 0x1C16DFC
	0x01EDFEB8 CBZ X23, 0x1EE0030
	0x01EDFEBC ADRP X24, 0x24FA000
	0x01EDFEC0 LDRB W8, [X24 + 0x5A9]
	0x01EDFEC4 LDR W22, [X19 + 0x48]
	0x01EDFEC8 CBNZ W8, 0x1EDFEE0
	0x01EDFECC ADRP X0, 0x2221000
	0x01EDFED0 LDR X0, [X0 + 0x3C8]
	0x01EDFED4 BL 0x1C16CF4
	0x01EDFED8 MOVZ W8, 0x1
	0x01EDFEDC STRB W8, [X24 + 0x5A9]
	0x01EDFEE0 LDR X0, [X23 + 0x10]
	0x01EDFEE4 CBZ X0, 0x1EE0030
	0x01EDFEE8 ADRP X8, 0x2221000
	0x01EDFEEC LDR X8, [X8 + 0x3C8]
	0x01EDFEF0 MOV X1, X21
	0x01EDFEF4 MOV W2, W22
	0x01EDFEF8 LDR X3, [X8]
	0x01EDFEFC BL 0x2A9EF88
	0x01EDFF00 ADD X8, X31, 0x8
	0x01EDFF04 MOV X0, X19
	0x01EDFF08 MOV X1, X20
	0x01EDFF0C BL 0x1EE15B0
	0x01EDFF10 LDR X8, [X31 + 0x18]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X30
	003 Move [X31+80], X28
	004 Move [X31+88], X27
	005 Move [X31+96], X26
	006 Move [X31+104], X25
	007 Move [X31+112], X24
	008 Move [X31+120], X23
	009 Move [X31+128], X22
	010 Move [X31+136], X21
	011 Move [X31+144], X20
	012 Move [X31+152], X19
	013 Move X20, 0x24FB000
	014 Move W8, [X20+1393]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0x2222000
	021 Move X0, [X0+848]
	022 Call 0x1C17CF4
	023 Move X0, 0x221C000
	024 Move X0, [X0+2096]
	025 Call 0x1C17CF4
	026 Move X0, 0x221C000
	027 Move X0, [X0+2104]
	028 Call 0x1C17CF4
	029 Move X0, 0x221C000
	030 Move X0, [X0+2112]
	031 Call 0x1C17CF4
	032 Move X0, 0x221C000
	033 Move X0, [X0+1656]
	034 Call 0x1C17CF4
	035 Move X0, 0x221C000
	036 Move X0, [X0+2120]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+1393], W8
	040 Move [X31+32], X31
	041 Move [X31+40], X31
	042 Move [X31+48], X31
	043 Move X0, [X19+40]
	044 Compare X0, 0
	045 JumpIfEqual {123}
	046 Move X8, 0x221C000
	047 Move X8, [X8+2120]
	048 Move X23, 0x221C000
	049 Move X23, [X23+2104]
	050 Move X20, 0x2222000
	051 Move X1, [X8]
	052 Move X21, 0x221C000
	053 Move X22, 0x221C000
	054 Move X20, [X20+848]
	055 Move X21, [X21+1656]
	056 Move X22, [X22+2096]
	057 Add X8, X31, 8
	058 Call HashSet`1<Int32>.GetEnumerator, X0
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 Move X8, [X31+24]
	061 Move X24, 0x24FB000
	062 Move W25, 1
	063 Move [X31+2], V0
	064 Move [X31+48], X8
	065 Move W26, 120
	066 Move X1, [X23]
	067 Add X0, X31, 32
	068 Call Enumerator<Int32>.MoveNext, X0
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {100}
	073 Move X27, [X19+16]
	074 Compare X27, 0
	075 JumpIfEqual {121}
	076 NotImplemented "Instruction LDRSW not yet implemented."
	077 Move W8, [X27+24]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X0, [X20]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move W8, [X24+1446]
	085 Compare W8, 0
	086 JumpIfNotEqual {90}
	087 Move X0, X20
	088 Call 0x1C17CF4
	089 Move [X24+1446], W25
	090 Move X0, [X20]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 NotImplemented "Instruction MADD not yet implemented."
	096 Move W1, [X8+104]
	097 Move W2, 1
	098 Move X0, X19
	099 Call BVHNode.ChildRefit, X0, X1, X2
	100 Move X1, [X22]
	101 Add X0, X31, 32
	102 Call Enumerator<Int32>.Dispose, X0
	103 Move X0, [X19+40]
	104 Compare X0, 0
	105 JumpIfEqual {123}
	106 Move X1, [X21]
	107 Call HashSet`1<Int32>.Clear, X0
	108 Move X20, [X31+144]
	109 Move X19, [X31+152]
	110 Move X22, [X31+128]
	111 Move X21, [X31+136]
	112 Move X24, [X31+112]
	113 Move X23, [X31+120]
	114 Move X26, [X31+96]
	115 Move X25, [X31+104]
	116 Move X28, [X31+80]
	117 Move X27, [X31+88]
	118 Move X30, [X31+64]
	119 Add X31, X31, 160
	120 Return 
	121 Call 0x1C17F20
	122 Call 0x1C17F28
	123 Call 0x1C17F20
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Call 0x3EB2AD0
	126 Move X20, [X0]
	127 Call 0x3EB2AE0
	128 Move X1, [X22]
	129 Add X0, X31, 32
	130 Call Enumerator<Int32>.Dispose, X0
	131 Compare X20, 0
	132 JumpIfEqual {103}
	133 Move X0, X20
	134 Call 0x1C17F18
	135 Move X19, X0
	136 Move X20, X31
	137 Move X19, X0
	138 Move X1, [X22]
	139 Add X0, X31, 32
	140 Call Enumerator<Int32>.Dispose, X0
	141 Compare X20, 0
	142 JumpIfNotEqual {145}
	143 Move X0, X19
	144 Call 0x1D2D690
	145 Move X0, X20
	146 Call 0x1C17F18
	147 Call 0x1991590

Method: System.Void Add(Fusion.HitboxRoot root)

Disassembly:
	0x01EDFF14 LDUR V0, [X31 + 0x8]
	0x01EDFF18 ADD X0, X31, 0x40
	0x01EDFF1C ADD X1, X31, 0x20
	0x01EDFF20 STR X8, [X19 + 0x10]
	0x01EDFF24 STR V0, [X19]
	0x01EDFF28 LDUR V0, [X19 + 0xC]
	0x01EDFF2C LDR V1, [X19 + 0x14]
	0x01EDFF30 LDR V2, [X20 + 0x44]
	0x01EDFF34 MOV X2, X31
	0x01EDFF38 FADD V3.2S, V0.2S, V0.2S
	0x01EDFF3C FADD S4, S1, S1
	0x00000000 INVALID
	0x01EDFF44 FMUL S2, S4, S2
	0x01EDFF48 MOVI V4.2S, 0x3F, 0x18
	0x00000000 INVALID
	0x01EDFF50 FMOV S4, 0.5
	0x01EDFF54 FMUL S2, S2, S4
	0x01EDFF58 FADD V0.2S, V0.2S, V3.2S
	0x01EDFF5C FADD S1, S1, S2
	0x01EDFF60 STUR D0, [X19 + 0xC]
	0x01EDFF64 STR S1, [X19 + 0x14]
	0x01EDFF68 LDR X8, [X19 + 0x10]
	0x01EDFF6C LDR V0, [X19]
	0x01EDFF70 MOVI V1.2D, 0x0
	0x01EDFF74 STP V1, V1, [X31 + 0x50]
	0x01EDFF78 STR X8, [X31 + 0x30]
	0x01EDFF7C STR V0, [X31 + 0x2]
	0x01EDFF80 STR V1, [X31 + 0x4]
	0x01EDFF84 BL 0x1EED32C
	0x01EDFF88 LDP V1, V0, [X31 + 0x50]
	0x01EDFF8C LDR V2, [X31 + 0x4]
	0x01EDFF90 STUR V0, [X19 + 0x38]
	0x01EDFF94 STUR V1, [X19 + 0x28]
	0x01EDFF98 STUR V2, [X19 + 0x18]
	0x01EDFF9C LDP X20, X19, [X31 + 0xA0]
	0x01EDFFA0 LDP X22, X21, [X31 + 0x90]
	0x01EDFFA4 LDP X24, X23, [X31 + 0x80]
	0x01EDFFA8 LDP X30, X25, [X31 + 0x70]
	0x01EDFFAC ADD X31, X31, 0xB0
	0x01EDFFB0 RET
	0x01EDFFB4 ADRP X22, 0x2221000
	0x01EDFFB8 LDR X22, [X22 + 0x350]
	0x01EDFFBC LDR X0, [X22]
	0x01EDFFC0 LDR W8, [X0 + 0xE0]
	0x01EDFFC4 CBNZ W8, 0x1EDFFCC
	0x01EDFFC8 BL 0x1C16DFC
	0x01EDFFCC MOV X0, X19
	0x01EDFFD0 MOV X1, X20
	0x01EDFFD4 MOV X2, X21
	0x01EDFFD8 BL 0x1EE1D98
	0x01EDFFDC ADRP X21, 0x24FA000
	0x01EDFFE0 LDRB W8, [X21 + 0x5A6]
	0x01EDFFE4 CBNZ W8, 0x1EDFFFC
	0x01EDFFE8 ADRP X0, 0x2221000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0x24FB000
	007 Move W8, [X21+1394]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2222000
	015 Move X0, [X0+848]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1394], W8
	019 Compare X19, 0
	020 JumpIfEqual {64}
	021 Move X21, 0x2222000
	022 Move X21, [X21+848]
	023 Add X8, X31, 8
	024 Move X0, X19
	025 Move X1, X31
	026 Call HitboxRoot.GetBounds, X0
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 Move X8, [X31+24]
	029 Move X0, [X21]
	030 Move [X31+2], V0
	031 Move [X31+48], X8
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X8, [X20+16]
	037 Compare X8, 0
	038 JumpIfEqual {64}
	039 Move W9, [X20+56]
	040 Move W1, [X8+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X0, X20
	043 Call BVH.ResizeNodesArray, X0, X1
	044 Move X0, X20
	045 Call BVH.get_rootBVH, X0
	046 Move X8, [X21]
	047 Move X21, X0
	048 Move W9, [X8+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X8
	052 Call 0x1C17DFC
	053 Add X3, X31, 32
	054 Move X0, X20
	055 Move X1, X21
	056 Move X2, X19
	057 Call BVHNode.Add, X0, X1, X2, X3, V0
	058 Move X20, [X31+80]
	059 Move X19, [X31+88]
	060 Move X30, [X31+64]
	061 Move X21, [X31+72]
	062 Add X31, X31, 96
	063 Return 
	064 Call 0x1C17F20

Method: UnityEngine.Bounds BoundsFromSphere(UnityEngine.Vector3 pos, System.Single radius)

Disassembly:
	0x01EE08BC MOV X2, X31
	0x01EE08C0 BL 0x1EEA398
	0x01EE08C4 TBZ X0, 0x0, 0x1EE090C
	0x01EE08C8 LDR X0, [X21]
	0x01EE08CC LDR W8, [X0 + 0xE0]
	0x01EE08D0 CBNZ W8, 0x1EE08D8
	0x01EE08D4 BL 0x1C16DFC
	0x01EE08D8 LDR W1, [X20 + 0x4C]
	0x01EE08DC CMP W1, 0x1
	0x01EE08E0 B.LT 0x1EE090C
	0x01EE08E4 CBZ X19, 0x1EE091C
	0x01EE08E8 LDR X0, [X19 + 0x28]
	0x01EE08EC CBZ X0, 0x1EE091C
	0x01EE08F0 ADRP X8, 0x2215000
	0x01EE08F4 LDR X8, [X8 + 0x9D8]
	0x01EE08F8 LDP X20, X19, [X31 + 0x20]
	0x01EE08FC LDP X22, X21, [X31 + 0x10]
	0x01EE0900 LDR X2, [X8]
	0x01EE0904 LDR X30, [X31], #0x30
	0x01EE0908 B 0x2DAB03C
	0x01EE090C LDP X20, X19, [X31 + 0x20]
	0x01EE0910 LDP X22, X21, [X31 + 0x10]
	0x01EE0914 LDR X30, [X31], #0x30
	0x01EE0918 RET
	0x01EE091C BL 0x1C16F20
	0x01EE0920 SUB X31, X31, 0x60
	0x01EE0924 STP D9, D8, [X31 + 0x20]
	0x01EE0928 STP X30, X23, [X31 + 0x30]
	0x01EE092C STP X22, X21, [X31 + 0x40]

ISIL:
	001 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	002 Subtract S5, S2, S3
	003 Move S7, W31
	004 Move V0.S[1], V1.S[0]
	005 NotImplemented "Instruction MOVI not yet implemented."
	006 Move S17, 0.5
	007 Add S2, S2, S3
	008 Subtract S1, S7, S5
	009 Subtract V3, V0, V4
	010 NotImplemented "Instruction MOVI not yet implemented."
	011 Multiply S1, S1, S17
	012 Add V0, V0, V4
	013 Subtract V4, V6, V3
	014 Add S5, S5, S1
	015 NotImplemented "Instruction INVALID not yet implemented."
	016 Subtract S1, S5, S1
	017 Add V3, V3, V4
	018 Subtract S2, S2, S1
	019 Subtract V3, V3, V4
	020 Multiply S2, S2, S17
	021 Subtract V0, V0, V3
	022 Add S1, S1, S2
	023 NotImplemented "Instruction INVALID not yet implemented."
	024 Move [X8+8], S1
	025 Add V1, V3, V0
	026 Move [X8+12], D0
	027 Move [X8], D1
	028 Move [X8+20], S2
	029 Return X0

Method: System.Boolean Remove(Fusion.HitboxRoot root)

Disassembly:
	0x01EE0930 STP X20, X19, [X31 + 0x50]
	0x01EE0934 ADRP X23, 0x24F9000
	0x01EE0938 LDRB W8, [X23 + 0x579]
	0x01EE093C MOV W21, W3
	0x01EE0940 MOV X22, X2
	0x01EE0944 MOV V8.16B, V2.16B
	0x01EE0948 MOV V9.16B, V0.16B
	0x01EE094C MOV X19, X1
	0x01EE0950 MOV X20, X0
	0x01EE0954 TBNZ X8, 0x0, 0x1EE0974
	0x01EE0958 ADRP X0, 0x2220000
	0x01EE095C LDR X0, [X0 + 0x350]
	0x01EE0960 STP V1, V3, [X31]
	0x01EE0964 BL 0x1C16CF4
	0x01EE0968 LDP V1, V3, [X31]
	0x01EE096C MOVZ W8, 0x1
	0x01EE0970 STRB W8, [X23 + 0x579]
	0x01EE0974 LDR V2, [X22]
	0x01EE0978 LDR V18, [X22 + 0xC]
	0x01EE097C LDUR V17, [X22 + 0x4]
	0x01EE0980 LDR V0, [X22 + 0x10]
	0x01EE0984 FSUB S4, S9, S3
	0x01EE0988 FSUB S5, S2, S18
	0x01EE098C FCMP S4, S5
	0x01EE0990 B.PL 0x1EE09D8
	0x01EE0994 FSUB V5.2S, V17.2S, V0.2S
	0x01EE0998 FADD S7, S2, S18
	0x01EE099C FADD V0.2S, V17.2S, V0.2S
	0x01EE09A0 FMOV S2, 0.5
	0x01EE09A4 MOVI V6.2S, 0x3F, 0x18
	0x01EE09A8 FSUB S7, S7, S4
	0x01EE09AC FSUB V0.2S, V0.2S, V5.2S
	0x01EE09B0 FMUL S18, S7, S2
	0x00000000 INVALID
	0x01EE09B8 FADD S2, S4, S18
	0x01EE09BC FADD V17.2S, V5.2S, V0.2S
	0x01EE09C0 MOVZ W8, 0x1
	0x01EE09C4 STR S18, [X22 + 0xC]
	0x01EE09C8 STR D0, [X22 + 0x10]
	0x01EE09CC STR S2, [X22]
	0x01EE09D0 STUR D17, [X22 + 0x4]
	0x01EE09D4 B 0x1EE09DC
	0x01EE09D8 MOV W8, W31
	0x01EE09DC FADD S5, S2, S18
	0x01EE09E0 FADD S4, S9, S3
	0x01EE09E4 FCMP S4, S5
	0x01EE09E8 B.LE 0x1EE0A2C
	0x01EE09EC FADD V5.2S, V17.2S, V0.2S
	0x01EE09F0 FSUB S2, S2, S18
	0x01EE09F4 FSUB V7.2S, V17.2S, V0.2S
	0x01EE09F8 FMOV S0, 0.5
	0x01EE09FC MOVI V6.2S, 0x3F, 0x18
	0x01EE0A00 FSUB S16, S4, S2
	0x01EE0A04 FSUB V4.2S, V5.2S, V7.2S
	0x01EE0A08 FMUL S18, S16, S0
	0x00000000 INVALID
	0x01EE0A10 FADD S2, S2, S18
	0x01EE0A14 FADD V17.2S, V7.2S, V0.2S
	0x01EE0A18 MOVZ W8, 0x1
	0x01EE0A1C STR S18, [X22 + 0xC]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x24FA000
	007 Move W8, [X21+1395]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2221000
	015 Move X0, [X0+848]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1395], W8
	019 Move [X31+12], W31
	020 Move X21, [X20+24]
	021 Compare X21, 0
	022 JumpIfEqual {73}
	023 Move X22, 0x24FA000
	024 Move W8, [X22+1444]
	025 Compare W8, 0
	026 JumpIfNotEqual {32}
	027 Move X0, 0x2221000
	028 Move X0, [X0+856]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+1444], W8
	032 Move X0, [X21+16]
	033 Compare X0, 0
	034 JumpIfEqual {73}
	035 Move X8, 0x2221000
	036 Move X8, [X8+856]
	037 Add X2, X31, 12
	038 Move X1, X19
	039 Move X3, [X8]
	040 Call Dictionary`2<Object, Int32>.TryGetValue, X0, X1, X2
	041 Move W21, W0
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {66}
	046 Move X8, [X20+16]
	047 Compare X8, 0
	048 JumpIfEqual {73}
	049 NotImplemented "Instruction LDRSW not yet implemented."
	050 Move W10, [X8+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X10, 0x2221000
	053 Move X10, [X10+848]
	054 Move W11, 120
	055 NotImplemented "Instruction MADD not yet implemented."
	056 Add X22, X8, 32
	057 Move X0, [X10]
	058 Move W10, [X0+224]
	059 Compare W10, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X22
	063 Move X1, X20
	064 Move X2, X19
	065 Call BVHNode.Remove, X0, X1, X2
	066 And W0, W21, 1
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+48]
	072 Return X0
	073 Call 0x1C17F20
	074 Call 0x1C17F28

Method: System.Void .ctor(Fusion.LagCompensation.Mapper mapper, System.Int32 nodesCapacity, System.Collections.Generic.List`1<Fusion.HitboxRoot> initialEntries = null, System.Single expansionFactor = 0.15, System.Int32 parentsToExpand = 3)

Disassembly:
	0x01EE0BE8 LDR W8, [X0 + 0xE0]
	0x01EE0BEC CBNZ W8, 0x1EE0BF4
	0x01EE0BF0 BL 0x1C16DFC
	0x01EE0BF4 CBZ X19, 0x1EE0C54
	0x01EE0BF8 LDR X8, [X19 + 0x10]
	0x01EE0BFC CBZ X8, 0x1EE0C54
	0x01EE0C00 LDRSW X9, [X20 + 0x4C]
	0x01EE0C04 LDR W10, [X8 + 0x18]
	0x01EE0C08 CMP W9, W10
	0x01EE0C0C B.CS 0x1EE0C58
	0x01EE0C10 MOV X1, X19
	0x01EE0C14 MOV X2, X20
	0x01EE0C18 LDP X20, X19, [X31 + 0x50]
	0x01EE0C1C LDP X22, X21, [X31 + 0x40]
	0x01EE0C20 LDP X30, X23, [X31 + 0x30]
	0x01EE0C24 LDP D9, D8, [X31 + 0x20]
	0x01EE0C28 MOVZ W10, 0x78
	0x01EE0C2C MADD X8, X9, X10, X8
	0x01EE0C30 ADD X0, X8, 0x20
	0x01EE0C34 ADD X31, X31, 0x60
	0x01EE0C38 B 0x1EE0C5C
	0x01EE0C3C LDP X20, X19, [X31 + 0x50]
	0x01EE0C40 LDP X22, X21, [X31 + 0x40]
	0x01EE0C44 LDP X30, X23, [X31 + 0x30]
	0x01EE0C48 LDP D9, D8, [X31 + 0x20]
	0x01EE0C4C ADD X31, X31, 0x60
	0x01EE0C50 RET
	0x01EE0C54 BL 0x1C16F20
	0x01EE0C58 BL 0x1C16F28
	0x01EE0C5C SUB X31, X31, 0x80
	0x01EE0C60 STR X30, [X31 + 0x50]
	0x01EE0C64 STP X22, X21, [X31 + 0x60]
	0x01EE0C68 STP X20, X19, [X31 + 0x70]
	0x01EE0C6C ADRP X22, 0x24F9000
	0x01EE0C70 LDRB W8, [X22 + 0x587]
	0x01EE0C74 MOV X21, X2
	0x01EE0C78 MOV X19, X1
	0x01EE0C7C MOV X20, X0
	0x01EE0C80 TBNZ X8, 0x0, 0x1EE0C98
	0x01EE0C84 ADRP X0, 0x2220000
	0x01EE0C88 LDR X0, [X0 + 0x350]
	0x01EE0C8C BL 0x1C16CF4
	0x01EE0C90 MOVZ W8, 0x1
	0x01EE0C94 STRB W8, [X22 + 0x587]
	0x01EE0C98 LDR V4, [X21]
	0x01EE0C9C LDR V5, [X21 + 0xC]
	0x01EE0CA0 LDR V2, [X20]
	0x01EE0CA4 LDR V1, [X20 + 0xC]
	0x01EE0CA8 LDUR V3, [X20 + 0x4]
	0x01EE0CAC LDR V0, [X20 + 0x10]
	0x01EE0CB0 FSUB S6, S4, S5
	0x01EE0CB4 FSUB S7, S2, S1
	0x01EE0CB8 FCMP S6, S7
	0x01EE0CBC CSET W8, MI
	0x01EE0CC0 B.PL 0x1EE0D08
	0x01EE0CC4 FSUB V4.2S, V3.2S, V0.2S
	0x01EE0CC8 FADD S1, S2, S1
	0x01EE0CCC FADD V0.2S, V3.2S, V0.2S
	0x01EE0CD0 FMOV S2, 0.5
	0x01EE0CD4 MOVI V3.2S, 0x3F, 0x18
	0x01EE0CD8 FSUB S1, S1, S6
	0x01EE0CDC FSUB V0.2S, V0.2S, V4.2S
	0x01EE0CE0 FMUL S1, S1, S2
	0x00000000 INVALID
	0x01EE0CE8 FADD S2, S6, S1
	0x01EE0CEC FADD V3.2S, V4.2S, V0.2S
	0x01EE0CF0 STR S1, [X20 + 0xC]
	0x01EE0CF4 STR D0, [X20 + 0x10]
	0x01EE0CF8 STR S2, [X20]
	0x01EE0CFC STUR D3, [X20 + 0x4]
	0x01EE0D00 LDR V4, [X21]
	0x01EE0D04 LDR V5, [X21 + 0xC]
	0x01EE0D08 FADD S4, S4, S5
	0x01EE0D0C FADD S5, S2, S1
	0x01EE0D10 FCMP S4, S5
	0x01EE0D14 B.LE 0x1EE0D58
	0x01EE0D18 FADD V5.2S, V3.2S, V0.2S
	0x01EE0D1C FSUB S2, S2, S1
	0x01EE0D20 FSUB V3.2S, V3.2S, V0.2S
	0x01EE0D24 FMOV S0, 0.5
	0x01EE0D28 MOVI V6.2S, 0x3F, 0x18
	0x01EE0D2C FSUB S1, S4, S2
	0x01EE0D30 FSUB V4.2S, V5.2S, V3.2S
	0x01EE0D34 FMUL S1, S1, S0
	0x00000000 INVALID
	0x01EE0D3C FADD S2, S2, S1
	0x01EE0D40 FADD V3.2S, V3.2S, V0.2S
	0x01EE0D44 MOVZ W8, 0x1
	0x01EE0D48 STR S1, [X20 + 0xC]
	0x01EE0D4C STR D0, [X20 + 0x10]
	0x01EE0D50 STR S2, [X20]
	0x01EE0D54 STUR D3, [X20 + 0x4]
	0x01EE0D58 LDR V6, [X21 + 0x4]
	0x01EE0D5C LDR V7, [X21 + 0x10]
	0x01EE0D60 MOV V4.16B, V3.16B
	0x01EE0D64 MOV V16.16B, V0.16B
	0x01EE0D68 MOV V4.S[0], V6.S[0]
	0x01EE0D6C MOV V16.S[0], V7.S[0]
	0x01EE0D70 FSUB V5.2S, V3.2S, V0.2S

ISIL:
	001 Move [X31-112], D8
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X25, 0x24FA000
	015 Move X29, 0x2215000
	016 Move X24, 0x221B000
	017 Move X28, 0x221E000
	018 Move X27, 0x2221000
	019 Move X26, 0x2221000
	020 Move X29, [X29+3592]
	021 Move W8, [X25+1396]
	022 Move X24, [X24+1672]
	023 Move X28, [X28+3512]
	024 Move X27, [X27+936]
	025 Move X26, [X26+944]
	026 Move W21, W4
	027 Move V8, V0
	028 Move X19, X3
	029 Move W23, W2
	030 Move X22, X1
	031 Move X20, X0
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {56}
	036 Move X0, 0x2221000
	037 Move X0, [X0+944]
	038 Call 0x1C17CF4
	039 Move X0, 0x2221000
	040 Move X0, [X0+848]
	041 Call 0x1C17CF4
	042 Move X0, 0x221B000
	043 Move X0, [X0+1672]
	044 Call 0x1C17CF4
	045 Move X0, 0x2215000
	046 Move X0, [X0+3592]
	047 Call 0x1C17CF4
	048 Move X0, 0x2221000
	049 Move X0, [X0+936]
	050 Call 0x1C17CF4
	051 Move X0, 0x221E000
	052 Move X0, [X0+3512]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X25+1396], W8
	056 Move X0, [X29]
	057 Move [X31+12], W31
	058 Call 0x1C17F10
	059 Move X1, [X24]
	060 Move X24, X0
	061 Call HashSet`1<Int32>..ctor, X0
	062 Move [X20+40], X24
	063 Move X0, [X28]
	064 Call 0x1C17F10
	065 Move X2, [X27]
	066 Move W1, 2
	067 Move X24, X0
	068 Call List`1<Object>..ctor, X0, X1
	069 Move W8, 1
	070 Move X0, X20
	071 Move X1, X31
	072 Move [X20+48], X24
	073 Move [X20+56], W8
	074 Call Object..ctor, X0
	075 Move X0, [X26]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move W8, 32
	078 NotImplemented "Instruction CSEL not yet implemented."
	079 Call 0x1C17D6C
	080 Move [X20+16], X0
	081 Move [X20+24], X22
	082 Add X1, X31, 12
	083 Move X0, X20
	084 Move [X20+68], S8
	085 Move [X20+72], W21
	086 Call BVH.GetNextNode, X0, X1
	087 Move X8, 0x2221000
	088 Move X8, [X8+848]
	089 Move W21, [X31+12]
	090 Move X22, X0
	091 Move X8, [X8]
	092 Move W9, [X8+224]
	093 Compare W9, 0
	094 JumpIfNotEqual {97}
	095 Move X0, X8
	096 Call 0x1C17DFC
	097 Move X0, X22
	098 Move X1, X20
	099 Move W2, W21
	100 Move X5, X19
	101 Move X20, [X31+96]
	102 Move X19, [X31+104]
	103 Move X22, [X31+80]
	104 Move X21, [X31+88]
	105 Move X24, [X31+64]
	106 Move X23, [X31+72]
	107 Move X26, [X31+48]
	108 Move X25, [X31+56]
	109 Move X28, [X31+32]
	110 Move X27, [X31+40]
	111 Move X29, [X31+16]
	112 Move X30, [X31+24]
	113 Move W3, W31
	114 Move W4, W31
	115 Move V8, [X31+112]

Method: System.Void BuildNodesLog(System.Text.StringBuilder builder)

Disassembly:
	0x01EE1034 FADD V1.2S, V1.2S, V6.2S
	0x01EE1038 FADD S5, S5, S7
	0x01EE103C FSUB V1.2S, V1.2S, V6.2S
	0x01EE1040 FSUB S5, S5, S7
	0x01EE1044 FSUB V0.2S, V0.2S, V1.2S
	0x01EE1048 FSUB S2, S2, S5
	0x00000000 INVALID
	0x01EE1050 FMUL S2, S2, S4
	0x01EE1054 STUR D0, [X1 + 0xC]
	0x01EE1058 FADD V0.2S, V1.2S, V0.2S
	0x01EE105C FADD S1, S5, S2
	0x01EE1060 STR S2, [X1 + 0x14]
	0x01EE1064 STR D0, [X1]
	0x01EE1068 STR S1, [X1 + 0x8]
	0x01EE106C RET
	0x01EE1070 SUB X31, X31, 0x60
	0x01EE1074 STR D8, [X31 + 0x30]
	0x01EE1078 STP X30, X21, [X31 + 0x40]
	0x01EE107C STP X20, X19, [X31 + 0x50]
	0x01EE1080 ADRP X21, 0x24F8000
	0x01EE1084 LDRB W8, [X21 + 0x57A]
	0x01EE1088 MOV X20, X1
	0x01EE108C MOV X19, X0
	0x01EE1090 TBNZ X8, 0x0, 0x1EE10A8
	0x01EE1094 ADRP X0, 0x221F000
	0x01EE1098 LDR X0, [X0 + 0x350]
	0x01EE109C BL 0x1C16CF4
	0x01EE10A0 MOVZ W8, 0x1
	0x01EE10A4 STRB W8, [X21 + 0x57A]
	0x01EE10A8 ADRP X21, 0x221F000
	0x01EE10AC LDR X8, [X19 + 0x68]
	0x01EE10B0 LDR X21, [X21 + 0x350]
	0x01EE10B4 CBZ X8, 0x1EE119C
	0x01EE10B8 LDRB W9, [X8 + 0x30]
	0x01EE10BC TBNZ X9, 0x3, 0x1EE119C
	0x01EE10C0 LDR X0, [X8 + 0xB8]
	0x01EE10C4 CBZ X0, 0x1EE11CC
	0x01EE10C8 LDP S1, S2, [X8 + 0x8C]
	0x01EE10CC LDR V0, [X8 + 0x88]
	0x01EE10D0 MOV X1, X31
	0x01EE10D4 BL 0x3C3DE4C
	0x01EE10D8 LDR X8, [X19 + 0x68]
	0x01EE10DC CBZ X8, 0x1EE11CC
	0x01EE10E0 LDR X0, [X21]
	0x01EE10E4 LDR V7, [X8 + 0x84]
	0x01EE10E8 MOV V8.16B, V2.16B
	0x01EE10EC LDR W9, [X0 + 0xE0]
	0x01EE10F0 CBNZ W9, 0x1EE1108
	0x01EE10F4 STP V7, V0, [X31 + 0x10]
	0x01EE10F8 STR V1, [X31]
	0x01EE10FC BL 0x1C16DFC
	0x01EE1100 LDP V1, V7, [X31]
	0x01EE1104 LDR V0, [X31 + 0x2]
	0x01EE1108 LDR V2, [X19]
	0x01EE110C LDR V3, [X19 + 0x8]
	0x01EE1110 LDUR V4, [X19 + 0xC]
	0x01EE1114 LDR V5, [X19 + 0x14]
	0x01EE1118 MOV V0.S[1], V1.S[0]
	0x01EE111C UNIMPLEMENTED
	0x01EE1120 FSUB S1, S8, S7
	0x01EE1124 FSUB V16.2S, V0.2S, V17.2S
	0x01EE1128 FADD V2.2S, V2.2S, V4.2S
	0x01EE112C FADD S3, S3, S5
	0x01EE1130 MOVI V6.2S, 0x3F, 0x18
	0x01EE1134 FADD V0.2S, V0.2S, V17.2S
	0x01EE1138 FMOV S17, 0.5
	0x01EE113C FSUB V2.2S, V2.2S, V16.2S
	0x01EE1140 FSUB S3, S3, S1
	0x00000000 INVALID
	0x01EE1148 FMUL S3, S3, S17
	0x01EE114C FADD V4.2S, V16.2S, V2.2S
	0x01EE1150 FADD S1, S1, S3
	0x01EE1154 FADD S7, S8, S7
	0x01EE1158 FSUB V2.2S, V4.2S, V2.2S
	0x01EE115C FSUB S1, S1, S3
	0x01EE1160 FSUB V0.2S, V0.2S, V2.2S
	0x01EE1164 FSUB S3, S7, S1
	0x00000000 INVALID
	0x01EE116C FMUL S3, S3, S17
	0x01EE1170 STUR D0, [X19 + 0xC]
	0x01EE1174 FADD V0.2S, V2.2S, V0.2S
	0x01EE1178 FADD S1, S1, S3
	0x01EE117C STR S3, [X19 + 0x14]
	0x01EE1180 STR D0, [X19]
	0x01EE1184 STR S1, [X19 + 0x8]
	0x01EE1188 LDP X20, X19, [X31 + 0x50]
	0x01EE118C LDP X30, X21, [X31 + 0x40]
	0x01EE1190 LDR V8, [X31 + 0x30]
	0x01EE1194 ADD X31, X31, 0x60
	0x01EE1198 RET
	0x01EE119C LDR X0, [X21]
	0x01EE11A0 LDR W8, [X0 + 0xE0]
	0x01EE11A4 CBNZ W8, 0x1EE11AC
	0x01EE11A8 BL 0x1C16DFC
	0x01EE11AC LDR W1, [X19 + 0x48]
	0x01EE11B0 MOV X0, X20
	0x01EE11B4 LDP X20, X19, [X31 + 0x50]
	0x01EE11B8 LDP X30, X21, [X31 + 0x40]
	0x01EE11BC LDR V8, [X31 + 0x30]
	0x01EE11C0 MOV W2, W31
	0x01EE11C4 ADD X31, X31, 0x60
	0x01EE11C8 B 0x1EE11D0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X21, 0x24F9000
	012 Move X22, 0x2213000
	013 Move X23, 0x2220000
	014 Move W8, [X21+1397]
	015 Move X22, [X22+1880]
	016 Move X23, [X23+976]
	017 Move X19, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x2220000
	024 Move X0, [X0+848]
	025 Call 0x1C17CF4
	026 Move X0, 0x2213000
	027 Move X0, [X0+1880]
	028 Call 0x1C17CF4
	029 Move X0, 0x2220000
	030 Move X0, [X0+984]
	031 Call 0x1C17CF4
	032 Move X0, 0x2220000
	033 Move X0, [X0+976]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+1397], W8
	037 Move W8, [X20+56]
	038 Move X0, [X22]
	039 Add X1, X31, 28
	040 Move [X31+28], W8
	041 Call 0x1C17E04
	042 Move X21, X0
	043 Move W8, [X20+60]
	044 Move X0, [X22]
	045 Add X1, X31, 24
	046 Move [X31+24], W8
	047 Call 0x1C17E04
	048 Move X8, [X23]
	049 Move X2, X0
	050 Move X1, X21
	051 Move X3, X31
	052 Move X0, X8
	053 Call String.Format, X0, X1, X2
	054 Compare X19, 0
	055 JumpIfEqual {112}
	056 Move X1, X0
	057 Move X0, X19
	058 Move X2, X31
	059 Call StringBuilder.AppendLine, X0, X1
	060 Move W8, [X20+56]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X23, 0x2220000
	063 Move X24, 0x2220000
	064 Move X23, [X23+984]
	065 Move X24, [X24+848]
	066 Move X21, X31
	067 Move W25, 32
	068 Move X0, [X22]
	069 Add X1, X31, 12
	070 Move [X31+12], W21
	071 Call 0x1C17E04
	072 Move X8, [X23]
	073 Move X1, X0
	074 Move X2, X31
	075 Move X0, X8
	076 Call String.Format, X0, X1
	077 Move X1, X0
	078 Move X0, X19
	079 Move X2, X31
	080 Call StringBuilder.Append, X0, X1
	081 Move X26, [X20+16]
	082 Compare X26, 0
	083 JumpIfEqual {112}
	084 Move X0, [X24]
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move W8, [X26+24]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Add X0, X26, X25
	092 Move X1, X19
	093 Call BVHNode.BuildLog, X0, X1
	094 Move X0, X19
	095 Move X1, X31
	096 Call StringBuilder.AppendLine, X0
	097 NotImplemented "Instruction LDRSW not yet implemented."
	098 Add X21, X21, 1
	099 Add X25, X25, 120
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X20, [X31+80]
	102 Move X19, [X31+88]
	103 Move X22, [X31+64]
	104 Move X21, [X31+72]
	105 Move X24, [X31+48]
	106 Move X23, [X31+56]
	107 Move X26, [X31+32]
	108 Move X25, [X31+40]
	109 Move X30, [X31+16]
	110 Add X31, X31, 96
	111 Return 
	112 Call 0x1C17F20
	113 Call 0x1C17F28

Method: System.Void ResizeNodesArray(System.Int32 minimumIncrease)

Disassembly:
	0x01EDF7C8 MOVZ W1, 0x3
	0x01EDF7CC MOV X0, X23
	0x01EDF7D0 MOV X2, X24
	0x01EDF7D4 BL 0x1993444
	0x01EDF7D8 LDR W8, [X22 + 0x54]
	0x01EDF7DC MOV X0, X20
	0x01EDF7E0 STR W8, [X31 + 0x18]
	0x01EDF7E4 BL 0x1C16D08
	0x01EDF7E8 ADD X1, X31, 0x18
	0x01EDF7EC BL 0x1C16E04
	0x01EDF7F0 MOV X20, X0
	0x01EDF7F4 MOV X0, X23
	0x01EDF7F8 BL 0x19903C0
	0x01EDF7FC MOV X0, X23
	0x01EDF800 MOV X1, X20
	0x01EDF804 BL 0x19980B4
	0x01EDF808 MOVZ W1, 0x4
	0x01EDF80C MOV X0, X23
	0x01EDF810 MOV X2, X20
	0x01EDF814 BL 0x1993444
	0x01EDF818 ADRP X0, 0x2221000
	0x01EDF81C LDR X0, [X0 + 0x380]
	0x01EDF820 BL 0x1C16D08
	0x01EDF824 MOV X1, X23
	0x01EDF828 MOV X2, X31
	0x01EDF82C BL 0x3227C5C
	0x01EDF830 MOV X20, X0
	0x01EDF834 MOV X0, X21
	0x01EDF838 BL 0x19903C0
	0x01EDF83C MOV X0, X21
	0x01EDF840 MOV X1, X20
	0x01EDF844 MOV X2, X31
	0x01EDF848 BL 0x32338A8
	0x01EDF84C MOV X0, X19
	0x01EDF850 BL 0x19903C0
	0x01EDF854 MOV X0, X19
	0x01EDF858 MOV X1, X21
	0x01EDF85C BL 0x1EE0034
	0x01EDF860 MOV X0, X21
	0x01EDF864 BL 0x19903C0
	0x01EDF868 LDR X8, [X21]
	0x01EDF86C MOV X0, X21
	0x01EDF870 LDP X9, X1, [X8 + 0x168]
	0x01EDF874 BLR X9
	0x01EDF878 MOV X19, X0
	0x01EDF87C ADRP X0, 0x2214000
	0x01EDF880 LDR X0, [X0 + 0x5B0]
	0x01EDF884 BL 0x1C16D08
	0x01EDF888 BL 0x1C16F10
	0x01EDF88C MOV X1, X19
	0x01EDF890 MOV X2, X31
	0x01EDF894 MOV X20, X0
	0x01EDF898 BL 0x337DF1C
	0x01EDF89C ADRP X0, 0x2221000
	0x01EDF8A0 LDR X0, [X0 + 0x388]
	0x01EDF8A4 BL 0x1C16D08
	0x01EDF8A8 MOV X1, X0
	0x01EDF8AC MOV X0, X20
	0x01EDF8B0 BL 0x1C16DEC
	0x01EDF8B4 BL 0x1C16F28
	0x01EDF8B8 BL 0x1C16F20
	0x01EDF8BC UNIMPLEMENTED
	0x01EDF8C0 FSUB S5, S2, S3
	0x01EDF8C4 FMOV S7, W31
	0x01EDF8C8 MOV V0.S[1], V1.S[0]
	0x01EDF8CC MOVI D6, 0x0
	0x01EDF8D0 FMOV S17, 0.5

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x24FB000
	010 Move W8, [X21+1398]
	011 Move W20, W1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2222000
	018 Move X0, [X0+840]
	019 Call 0x1C17CF4
	020 Move X0, 0x2215000
	021 Move X0, [X0+1448]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1398], W8
	025 Add X19, X19, 16
	026 Move X21, [X19]
	027 Compare X21, 0
	028 JumpIfEqual {83}
	029 Move X22, 0x2215000
	030 Move X22, [X22+1448]
	031 Move V0, [X21+24]
	032 Move X23, 0x24FA000
	033 Move W8, [X23+2595]
	034 NotImplemented "Instruction SCVTF not yet implemented."
	035 NotImplemented "Instruction SCVTF not yet implemented."
	036 NotImplemented "Instruction FDIV not yet implemented."
	037 Move S9, 1
	038 Compare W8, 0
	039 JumpIfNotEqual {45}
	040 Move X0, 0x2215000
	041 Move X0, [X0+1448]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X23+2595], W8
	045 Move X0, [X22]
	046 Move X20, 0x2222000
	047 Add S8, S8, S9
	048 Move W8, [X0+224]
	049 Move X20, [X20+840]
	050 Compare W8, 0
	051 JumpIfEqual {53}
	052 NotImplemented "Instruction FRINTM not yet implemented."
	053 Call 0x1C17DFC
	054 Move X0, [X22]
	055 NotImplemented "Instruction FRINTM not yet implemented."
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move W8, 0x7F800000
	061 Move S0, W8
	062 NotImplemented "Instruction FCVTZS not yet implemented."
	063 NotImplemented "Instruction FCMP not yet implemented."
	064 Move W8, 0x80000000
	065 NotImplemented "Instruction CSEL not yet implemented."
	066 Move W0, 2
	067 Move X2, X31
	068 Call Math.Max, X0, X1
	069 Move W8, [X21+24]
	070 Move X2, [X20]
	071 Move X22, [X31+32]
	072 Move X21, [X31+40]
	073 Move X30, [X31+16]
	074 Move X23, [X31+24]
	075 Multiply W1, W0, W8
	076 Move X0, X19
	077 Move X20, [X31+48]
	078 Move X19, [X31+56]
	079 Move D9, [X31+64]
	080 Move D8, [X31+72]
	081 Call Array.Resize, X0, X1
	082 Return 
	083 Call 0x1C17F20

