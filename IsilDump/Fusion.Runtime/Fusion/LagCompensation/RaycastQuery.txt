Type: Fusion.LagCompensation.RaycastQuery

Method: System.Void .ctor(ref Fusion.LagCompensation.RaycastQueryParams raycastQueryParams)

Disassembly:
	0x01EEF5FC LDR W1, [X19 + 0x18]
	0x01EEF600 LDR W9, [X22 + 0x7C]
	0x01EEF604 STR W31, [X31 + 0x6C]
	0x01EEF608 STR D0, [X31 + 0x50]
	0x01EEF60C STR S1, [X31 + 0x58]
	0x01EEF610 STUR D2, [X31 + 0x5C]
	0x01EEF614 STP S3, S9, [X31 + 0x64]
	0x01EEF618 STR X8, [X31 + 0x70]
	0x01EEF61C LDR W8, [X22 + 0x1C0]
	0x01EEF620 LDR X10, [X22 + 0x1B8]
	0x01EEF624 ADD X11, X22, 0x1C4
	0x01EEF628 LDR X3, [X27]
	0x01EEF62C STR W8, [X28 + 0x8]
	0x01EEF630 STR X10, [X28]
	0x01EEF634 LDR V0, [X11]
	0x01EEF638 STR V0, [X29]
	0x01EEF63C STR W9, [X31 + 0x94]
	0x01EEF640 STR X31, [X31 + 0x98]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X20, X0
	006 Call Query..ctor, X0, X1
	007 Move W8, [X19+76]
	008 NotImplemented "Instruction LDUR not yet implemented."
	009 Move [X20+80], W8
	010 Move [X20+72], X9
	011 Move W8, [X19+64]
	012 Move X9, [X19+56]
	013 Move [X20+92], W8
	014 Move [X20+84], X9
	015 Move V0, [X19+80]
	016 Move [X20+96], S0
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Return 

Method: System.Boolean Check(ref Fusion.LagCompensation.AABB bounds)

Disassembly:
	0x01EF0234 BL 0x1EA6E74
	0x01EF0238 STR W0, [X31 + 0x38]
	0x01EF023C LDR W0, [X20 + 0x18]
	0x01EF0240 LDP S8, S9, [X20 + 0x48]
	0x01EF0244 LDR V10, [X20 + 0x54]
	0x01EF0248 LDR X21, [X20 + 0x60]
	0x01EF024C MOV X1, X31
	0x01EF0250 BL 0x3C35CB8
	0x01EF0254 MOV W2, W0
	0x01EF0258 ADD X0, X31, 0x38
	0x01EF025C MOV V0.16B, V8.16B
	0x01EF0260 MOV V1.16B, V9.16B
	0x01EF0264 MOV V2.16B, V10.16B
	0x01EF0268 MOV X1, X21
	0x01EF026C MOV X3, X31
	0x01EF0270 BL 0x3C882F0
	0x01EF0274 CMP W0, 0x1
	0x01EF0278 B.LT 0x1EF0598
	0x01EF027C ADRP X9, 0xFFFFFFFFFEBFD000
	0x01EF0280 ADRP X27, 0x220D000
	0x01EF0284 LDR V8, [X9 + 0xEC8]
	0x01EF0288 LDR X27, [X27 + 0xD80]
	0x01EF028C ADD X8, X31, 0xB8
	0x01EF0290 MOV W21, W0
	0x01EF0294 MOV W23, W31
	0x01EF0298 ADD X24, X8, 0x10
	0x01EF029C ADD X25, X8, 0x1C
	0x01EF02A0 ADD X26, X8, 0x44
	0x01EF02A4 MOVZ W28, 0x68
	0x01EF02A8 LDR X8, [X20 + 0x60]
	0x01EF02AC CBZ X8, 0x1EF05C0
	0x01EF02B0 LDR W9, [X8 + 0x18]
	0x01EF02B4 CMP W23, W9
	0x01EF02B8 B.CS 0x1EF05C4
	0x01EF02BC ADD X8, X8, W23, 0x3, SXTW
	0x01EF02C0 LDR X22, [X8 + 0x20]
	0x01EF02C4 MOVI V0.2D, 0x0
	0x01EF02C8 STP X31, X31, [X31 + 0x60]
	0x01EF02CC STP V0, V0, [X31 + 0x40]
	0x01EF02D0 STR W31, [X31 + 0x70]
	0x01EF02D4 CBZ X22, 0x1EF05C0
	0x01EF02D8 MOV X0, X22
	0x01EF02DC MOV X1, X31
	0x01EF02E0 BL 0x3C32ECC
	0x01EF02E4 LDP X10, X8, [X31 + 0x60]
	0x01EF02E8 LDR W9, [X31 + 0x70]
	0x01EF02EC LDP V0, V1, [X31 + 0x40]
	0x01EF02F0 STP X10, X8, [X31 + 0x20]
	0x01EF02F4 STR W9, [X31 + 0x30]
	0x01EF02F8 STP V0, V1, [X31]
	0x01EF02FC CBZ X19, 0x1EF05C0
	0x01EF0300 LDP X10, X8, [X31 + 0x20]
	0x01EF0304 LDR W9, [X31 + 0x30]
	0x01EF0308 LDP V0, V1, [X31]
	0x01EF030C STP X10, X8, [X31 + 0xA0]
	0x01EF0310 STR W9, [X31 + 0xB0]
	0x01EF0314 STP V0, V1, [X31 + 0x80]
	0x01EF0318 LDR W10, [X19 + 0x1C]
	0x01EF031C LDR X8, [X19 + 0x10]
	0x01EF0320 LDR X9, [X27]
	0x01EF0324 ADD W10, W10, 0x1
	0x01EF0328 STR W10, [X19 + 0x1C]
	0x01EF032C CBZ X8, 0x1EF05C0
	0x01EF0330 LDRSW X10, [X19 + 0x18]
	0x01EF0334 LDR W11, [X8 + 0x18]
	0x01EF0338 CMP W10, W11
	0x01EF033C B.CS 0x1EF0388
	0x01EF0340 ADD W9, W10, 0x1
	0x01EF0344 MADD X8, X10, X28, X8
	0x01EF0348 STR W9, [X19 + 0x18]
	0x01EF034C STR D8, [X8 + 0x20]
	0x01EF0350 LDR W9, [X31 + 0xB0]
	0x01EF0354 LDR X10, [X31 + 0xA8]
	0x01EF0358 STR W9, [X8 + 0x38]
	0x01EF035C STP X0, X10, [X8 + 0x28]
	0x01EF0360 LDP V0, V1, [X31 + 0x80]
	0x01EF0364 LDR X9, [X31 + 0xA0]
	0x01EF0368 STUR X31, [X8 + 0x6C]
	0x01EF036C STUR X31, [X8 + 0x64]
	0x01EF0370 STR W31, [X8 + 0x74]
	0x01EF0374 STUR X9, [X8 + 0x5C]
	0x01EF0378 STUR V1, [X8 + 0x4C]
	0x01EF037C STUR V0, [X8 + 0x3C]
	0x01EF0380 STP X22, X31, [X8 + 0x78]
	0x01EF0384 B 0x1EF03D0
	0x01EF0388 LDR X8, [X9 + 0x20]
	0x01EF038C LDR W10, [X31 + 0xB0]
	0x01EF0390 LDP V0, V1, [X31 + 0x80]
	0x01EF0394 ADD X1, X31, 0xB8
	0x01EF0398 LDR X8, [X8 + 0xC0]
	0x01EF039C LDR X2, [X8 + 0x70]
	0x01EF03A0 LDP X8, X9, [X31 + 0xA0]
	0x01EF03A4 STR X0, [X31 + 0xC0]
	0x01EF03A8 MOV X0, X19
	0x01EF03AC STR D8, [X31 + 0xB8]
	0x01EF03B0 STR W10, [X24 + 0x8]
	0x01EF03B4 STR X9, [X24]
	0x01EF03B8 STR X8, [X25 + 0x20]
	0x01EF03BC STP V0, V1, [X25]
	0x01EF03C0 STP X31, X31, [X26]
	0x01EF03C4 STR W31, [X26 + 0x10]
	0x01EF03C8 STP X22, X31, [X31 + 0x110]
	0x01EF03CC BL 0x2FECE74
	0x01EF03D0 ADD W23, W23, 0x1
	0x01EF03D4 CMP W21, W23
	0x01EF03D8 B.NE 0x1EF02A8
	0x01EF03DC B 0x1EF0598
	0x01EF03E0 CBZ X21, 0x1EF05C0
	0x01EF03E4 MOV X0, X21
	0x01EF03E8 MOV X1, X31
	0x01EF03EC BL 0x1EA6D70
	0x01EF03F0 STR W0, [X31 + 0x78]
	0x01EF03F4 LDR W0, [X20 + 0x18]
	0x01EF03F8 LDP S8, S9, [X20 + 0x48]
	0x01EF03FC LDP S10, S11, [X20 + 0x50]
	0x01EF0400 LDR X21, [X20 + 0x58]
	0x01EF0404 MOV X1, X31
	0x01EF0408 BL 0x3C35CB8
	0x01EF040C LDR W3, [X20 + 0x10]
	0x01EF0410 MOV W2, W0
	0x01EF0414 ADD X0, X31, 0x78

ISIL:
	001 Move V0, [X0+84]
	002 Move S7, [X1+24]
	003 Move S3, [X1+28]
	004 Move V6, [X1+36]
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move W8, W31
	007 Move V1, V7
	008 NotImplemented "Instruction FCMP not yet implemented."
	009 Move W8, W31
	010 Move V1, V6
	011 Move W8, 1
	012 Move S1, W31
	013 Move V2, [X0+88]
	014 Move V4, [X1+32]
	015 Move V16, [X1+40]
	016 NotImplemented "Instruction FCMP not yet implemented."
	017 Move W9, W31
	018 Move W11, W31
	019 Move V5, V3
	020 NotImplemented "Instruction FCMP not yet implemented."
	021 Move W9, W31
	022 Move W11, W31
	023 Move V5, V16
	024 Move W9, 1
	025 Move S5, W31
	026 Move W11, W8
	027 Move S17, [X0+92]
	028 Move S18, [X0+96]
	029 Move V19, [X1+44]
	030 NotImplemented "Instruction FCMP not yet implemented."
	031 Move W10, W31
	032 Move V20, V4
	033 Move V24, [X0+72]
	034 Move S25, -1
	035 Move S26, -1
	036 NotImplemented "Instruction FCMP not yet implemented."
	037 NotImplemented "Instruction CSET not yet implemented."
	038 Or W8, W8, W11
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {45}
	043 Subtract S21, S1, S0
	044 NotImplemented "Instruction FDIV not yet implemented."
	045 Move V22, [X0+76]
	046 NotImplemented "Instruction FCMP not yet implemented."
	047 NotImplemented "Instruction CSET not yet implemented."
	048 Or W8, W9, W8
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {55}
	053 Subtract S21, S5, S2
	054 NotImplemented "Instruction FDIV not yet implemented."
	055 Move V21, [X0+80]
	056 Move S23, -1
	057 NotImplemented "Instruction FCMP not yet implemented."
	058 NotImplemented "Instruction CSET not yet implemented."
	059 Or W8, W10, W8
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {66}
	064 Subtract S23, S20, S17
	065 NotImplemented "Instruction FDIV not yet implemented."
	066 NotImplemented "Instruction FCMP not yet implemented."
	067 NotImplemented "Instruction FCSEL not yet implemented."
	068 NotImplemented "Instruction CSET not yet implemented."
	069 NotImplemented "Instruction FCMP not yet implemented."
	070 Move W8, 2
	071 NotImplemented "Instruction FCSEL not yet implemented."
	072 NotImplemented "Instruction CSEL not yet implemented."
	073 NotImplemented "Instruction FCMP not yet implemented."
	074 Compare W8, 0
	075 JumpIfEqual {82}
	076 Multiply S1, S24, S25
	077 Add S1, S0, S1
	078 NotImplemented "Instruction FCMP not yet implemented."
	079 Move W0, W31
	080 NotImplemented "Instruction FCMP not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Multiply S5, S22, S25
	083 Add S5, S2, S5
	084 NotImplemented "Instruction FCMP not yet implemented."
	085 Move W0, W31
	086 NotImplemented "Instruction FCMP not yet implemented."
	087 NotImplemented "Instruction FCMP not yet implemented."
	088 Multiply S3, S21, S25
	089 Add S20, S17, S3
	090 NotImplemented "Instruction FCMP not yet implemented."
	091 Move W0, W31
	092 NotImplemented "Instruction FCMP not yet implemented."
	093 Subtract S0, S0, S1
	094 Subtract S1, S2, S5
	095 Subtract S2, S17, S20
	096 Multiply S0, S0, S0
	097 Multiply S1, S1, S1
	098 Add S0, S1, S0
	099 Multiply S1, S2, S2
	100 Multiply S3, S18, S18
	101 Add S0, S1, S0
	102 NotImplemented "Instruction FCMP not yet implemented."
	103 NotImplemented "Instruction CSET not yet implemented."
	104 Return X0
	105 NotImplemented "Instruction FCMP not yet implemented."
	106 Move S20, W31
	107 NotImplemented "Instruction CSET not yet implemented."
	108 NotImplemented "Instruction FCSEL not yet implemented."
	109 Xor W11, W11, 1
	110 Compare W11, 0
	111 JumpIfNotEqual {33}
	112 Move W0, 1
	113 Return X0
	114 Move W0, W31
	115 Return X0

Method: System.Boolean NarrowPhase(Fusion.LagCompensation.IHitboxColliderContainer container, System.Collections.Generic.HashSet`1<System.Int32> candidates, System.Collections.Generic.List`1<Fusion.LagCompensation.HitboxHit> hits)

Disassembly:
	0x01EF0418 MOV V0.16B, V8.16B
	0x01EF041C MOV V1.16B, V9.16B
	0x01EF0420 MOV V2.16B, V10.16B
	0x01EF0424 MOV V3.16B, V11.16B
	0x01EF0428 MOV X1, X21
	0x01EF042C MOV X4, X31
	0x01EF0430 BL 0x3C8D758
	0x01EF0434 CMP W0, 0x1
	0x01EF0438 B.LT 0x1EF0598
	0x01EF043C ADRP X9, 0xFFFFFFFFFEBFD000
	0x01EF0440 ADRP X27, 0x220D000
	0x01EF0444 LDR V8, [X9 + 0x898]
	0x01EF0448 LDR X27, [X27 + 0xD80]
	0x01EF044C ADD X8, X31, 0xB8
	0x01EF0450 MOV W21, W0
	0x01EF0454 MOV W23, W31
	0x01EF0458 ADD X24, X8, 0x10
	0x01EF045C ADD X25, X8, 0x1C
	0x01EF0460 ADD X26, X8, 0x58
	0x01EF0464 MOVZ W28, 0x68
	0x01EF0468 LDR X8, [X20 + 0x58]
	0x01EF046C CBZ X8, 0x1EF05C0
	0x01EF0470 LDR W9, [X8 + 0x18]
	0x01EF0474 CMP W23, W9
	0x01EF0478 B.CS 0x1EF05C4
	0x01EF047C ADD X8, X8, W23, 0x3, SXTW
	0x01EF0480 LDR X22, [X8 + 0x20]
	0x01EF0484 MOVI V0.2D, 0x0
	0x01EF0488 STP X31, X31, [X31 + 0x60]
	0x01EF048C STP V0, V0, [X31 + 0x40]
	0x01EF0490 STR W31, [X31 + 0x70]
	0x01EF0494 CBZ X22, 0x1EF05C0
	0x01EF0498 MOV X0, X22
	0x01EF049C MOV X1, X31
	0x01EF04A0 BL 0x3C32ECC
	0x01EF04A4 LDP X10, X8, [X31 + 0x60]
	0x01EF04A8 LDR W9, [X31 + 0x70]
	0x01EF04AC LDP V0, V1, [X31 + 0x40]
	0x01EF04B0 STP X10, X8, [X31 + 0x20]
	0x01EF04B4 STR W9, [X31 + 0x30]
	0x01EF04B8 STP V0, V1, [X31]
	0x01EF04BC CBZ X19, 0x1EF05C0
	0x01EF04C0 LDP X10, X8, [X31 + 0x20]
	0x01EF04C4 LDR W9, [X31 + 0x30]
	0x01EF04C8 LDP V0, V1, [X31]
	0x01EF04CC STP X10, X8, [X31 + 0xA0]
	0x01EF04D0 STR W9, [X31 + 0xB0]
	0x01EF04D4 STP V0, V1, [X31 + 0x80]
	0x01EF04D8 LDR W10, [X19 + 0x1C]
	0x01EF04DC LDR X8, [X19 + 0x10]
	0x01EF04E0 LDR X9, [X27]
	0x01EF04E4 ADD W10, W10, 0x1
	0x01EF04E8 STR W10, [X19 + 0x1C]
	0x01EF04EC CBZ X8, 0x1EF05C0
	0x01EF04F0 LDRSW X10, [X19 + 0x18]
	0x01EF04F4 LDR W11, [X8 + 0x18]
	0x01EF04F8 CMP W10, W11
	0x01EF04FC B.CS 0x1EF0544
	0x01EF0500 ADD W9, W10, 0x1
	0x01EF0504 MADD X8, X10, X28, X8
	0x01EF0508 STR W9, [X19 + 0x18]
	0x01EF050C STR D8, [X8 + 0x20]
	0x01EF0510 LDR W9, [X31 + 0xB0]
	0x01EF0514 LDR X10, [X31 + 0xA8]
	0x01EF0518 STR W9, [X8 + 0x38]
	0x01EF051C STP X0, X10, [X8 + 0x28]
	0x01EF0520 LDP V0, V1, [X31 + 0x80]
	0x01EF0524 LDR X9, [X31 + 0xA0]
	0x01EF0528 STR W31, [X8 + 0x64]
	0x01EF052C STP X31, X22, [X8 + 0x68]
	0x01EF0530 STUR V1, [X8 + 0x4C]
	0x01EF0534 STUR X9, [X8 + 0x5C]
	0x01EF0538 STUR V0, [X8 + 0x3C]
	0x01EF053C STP X31, X31, [X8 + 0x78]
	0x01EF0540 B 0x1EF058C
	0x01EF0544 LDR X8, [X9 + 0x20]
	0x01EF0548 LDR W10, [X31 + 0xB0]
	0x01EF054C LDP V0, V1, [X31 + 0x80]
	0x01EF0550 ADD X1, X31, 0xB8
	0x01EF0554 LDR X8, [X8 + 0xC0]
	0x01EF0558 LDR X2, [X8 + 0x70]
	0x01EF055C LDP X8, X9, [X31 + 0xA0]
	0x01EF0560 STR X0, [X31 + 0xC0]
	0x01EF0564 MOV X0, X19
	0x01EF0568 STR D8, [X31 + 0xB8]
	0x01EF056C STR W10, [X24 + 0x8]
	0x01EF0570 STR X9, [X24]
	0x01EF0574 STR X8, [X25 + 0x20]
	0x01EF0578 STP V0, V1, [X25]
	0x01EF057C STR W31, [X31 + 0xFC]
	0x01EF0580 STP X31, X22, [X31 + 0x100]
	0x01EF0584 STP X31, X31, [X26]
	0x01EF0588 BL 0x2FECE74
	0x01EF058C ADD W23, W23, 0x1
	0x01EF0590 CMP W21, W23
	0x01EF0594 B.NE 0x1EF0468
	0x01EF0598 LDP X20, X19, [X31 + 0x190]
	0x01EF059C LDP X22, X21, [X31 + 0x180]
	0x01EF05A0 LDP X24, X23, [X31 + 0x170]
	0x01EF05A4 LDP X26, X25, [X31 + 0x160]
	0x01EF05A8 LDP X28, X27, [X31 + 0x150]
	0x01EF05AC LDP X29, X30, [X31 + 0x140]
	0x01EF05B0 LDP D9, D8, [X31 + 0x130]
	0x01EF05B4 LDP D11, D10, [X31 + 0x120]
	0x01EF05B8 ADD X31, X31, 0x1A0
	0x01EF05BC RET
	0x01EF05C0 BL 0x1C16F20
	0x01EF05C4 BL 0x1C16F28
	0x01EF05C8 LDP V4, V5, [X1]
	0x01EF05CC LDR V6, [X1 + 0x2]
	0x01EF05D0 LDR X8, [X1 + 0x30]
	0x01EF05D4 STP S0, S1, [X0 + 0x38]
	0x01EF05D8 STP S2, S3, [X0 + 0x40]
	0x01EF05DC STP V5, V6, [X0 + 0x10]
	0x01EF05E0 STR X8, [X0 + 0x30]
	0x01EF05E4 STR V4, [X0]
	0x01EF05E8 STR W2, [X0 + 0x48]
	0x01EF05EC RET
	0x01EF05F0 LDR X0, [X0 + 0x10]
	0x01EF05F4 RET
	0x01EF05F8 LDR X0, [X0 + 0x18]
	0x01EF05FC RET
	0x01EF0600 STP X30, X21, [X31 - 0x20]!
	0x01EF0604 STP X20, X19, [X31 + 0x10]
	0x01EF0608 ADRP X20, 0x24E9000
	0x01EF060C ADRP X21, 0x2210000
	0x01EF0610 LDRB W8, [X20 + 0x5CB]
	0x01EF0614 LDR X21, [X21 + 0x5C8]
	0x01EF0618 MOV X19, X0
	0x01EF061C TBNZ X8, 0x0, 0x1EF0634
	0x01EF0620 ADRP X0, 0x2210000
	0x01EF0624 LDR X0, [X0 + 0x5C8]
	0x01EF0628 BL 0x1C16CF4
	0x01EF062C MOVZ W8, 0x1
	0x01EF0630 STRB W8, [X20 + 0x5CB]
	0x01EF0634 MOV X0, X19
	0x01EF0638 MOV X1, X31
	0x01EF063C BL 0x33BDD8C
	0x01EF0640 LDR X0, [X21]
	0x01EF0644 BL 0x1C16F10
	0x01EF0648 MOV X1, X31
	0x01EF064C MOV X20, X0
	0x01EF0650 BL 0x33BDD8C
	0x01EF0654 STR X20, [X19 + 0x10]
	0x01EF0658 LDR X0, [X21]
	0x01EF065C BL 0x1C16F10
	0x01EF0660 MOV X1, X31
	0x01EF0664 MOV X20, X0
	0x01EF0668 BL 0x33BDD8C
	0x01EF066C STR X20, [X19 + 0x18]
	0x01EF0670 LDP X20, X19, [X31 + 0x10]
	0x01EF0674 LDP X30, X21, [X31], #0x20
	0x01EF0678 RET
	0x01EF067C MOV X1, X31
	0x01EF0680 B 0x33BDD8C
	0x01EF0684 RET
	0x01EF0688 LDR W0, [X0 + 0x10]
	0x01EF068C RET
	0x01EF0690 STR W1, [X0 + 0x10]
	0x01EF0694 RET
	0x01EF0698 LDR W0, [X0 + 0x14]
	0x01EF069C RET
	0x01EF06A0 STR W1, [X0 + 0x14]
	0x01EF06A4 RET
	0x01EF06A8 LDR V0, [X0 + 0x18]
	0x01EF06AC RET
	0x01EF06B0 STR D0, [X0 + 0x18]
	0x01EF06B4 RET
	0x01EF06B8 LDR V0, [X0 + 0x20]
	0x01EF06BC RET
	0x01EF06C0 STR D0, [X0 + 0x20]
	0x01EF06C4 RET
	0x01EF06C8 STP X31, X31, [X0 + 0x10]
	0x01EF06CC STR X31, [X0 + 0x20]
	0x01EF06D0 RET
	0x01EF06D4 STR X30, [X31 - 0x10]!
	0x01EF06D8 CBZ X1, 0x1EF06F4
	0x01EF06DC LDR V0, [X1 + 0x10]
	0x01EF06E0 STR D0, [X0 + 0x10]
	0x01EF06E4 LDUR V0, [X1 + 0x18]
	0x01EF06E8 STUR V0, [X0 + 0x18]
	0x01EF06EC LDR X30, [X31], #0x10
	0x01EF06F0 RET
	0x01EF06F4 BL 0x1C16F20
	0x01EF06F8 LDR W8, [X0 + 0x10]
	0x01EF06FC ADD W8, W8, W1
	0x01EF0700 STR W8, [X0 + 0x10]
	0x01EF0704 RET
	0x01EF0708 LDR W8, [X0 + 0x14]
	0x01EF070C ADD W8, W8, W1

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+160], D9
	003 Move [X31+168], D8
	004 Move [X31+176], X29
	005 Move [X31+184], X30
	006 Move [X31+192], X28
	007 Move [X31+200], X27
	008 Move [X31+208], X26
	009 Move [X31+216], X25
	010 Move [X31+224], X24
	011 Move [X31+232], X23
	012 Move [X31+240], X22
	013 Move [X31+248], X21
	014 Move [X31+256], X20
	015 Move [X31+264], X19
	016 Move X23, 0x24EA000
	017 Move W8, [X23+1478]
	018 Move X19, X3
	019 Move X22, X2
	020 Move X20, X1
	021 Move X21, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {49}
	026 Move X0, 0x220B000
	027 Move X0, [X0+2096]
	028 Call 0x1C17CF4
	029 Move X0, 0x220B000
	030 Move X0, [X0+2104]
	031 Call 0x1C17CF4
	032 Move X0, 0x220B000
	033 Move X0, [X0+2112]
	034 Call 0x1C17CF4
	035 Move X0, 0x220B000
	036 Move X0, [X0+2120]
	037 Call 0x1C17CF4
	038 Move X0, 0x220E000
	039 Move X0, [X0+3704]
	040 Call 0x1C17CF4
	041 Move X0, 0x2211000
	042 Move X0, [X0+1472]
	043 Call 0x1C17CF4
	044 Move X0, 0x220E000
	045 Move X0, [X0+3472]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X23+1478], W8
	049 Move [X31+48], X31
	050 Move [X31+56], X31
	051 Move [X31+64], X31
	052 Move [X31+40], W31
	053 Move [X31+32], X31
	054 Move [X31+24], W31
	055 Move [X31+16], X31
	056 Move [X31+12], W31
	057 Compare X19, 0
	058 JumpIfEqual {192}
	059 Compare X22, 0
	060 JumpIfEqual {192}
	061 Move X8, 0x220B000
	062 Move X8, [X8+2120]
	063 Move X25, 0x220B000
	064 Move X25, [X25+2104]
	065 Move X26, 0x220E000
	066 Move X1, [X8]
	067 Move X27, 0x2211000
	068 Move X24, 0x220B000
	069 Move W23, [X19+24]
	070 Move X26, [X26+3704]
	071 Move X27, [X27+1472]
	072 Move X24, [X24+2096]
	073 Add X8, X31, 80
	074 Move X0, X22
	075 Add X29, X31, 80
	076 Call HashSet`1<Int32>.GetEnumerator, X0
	077 Move V0, [X31+5]
	078 Move X8, [X31+96]
	079 Move TEMP, 0x80800000
	080 Not TEMP
	081 Move W9, TEMP
	082 Add X28, X29, 40
	083 Move [X31+3], V0
	084 Move [X31+64], X8
	085 Add X29, X29, 52
	086 Move S8, W9
	087 Move X1, [X25]
	088 Add X0, X31, 48
	089 Call Enumerator<Int32>.MoveNext, X0
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {169}
	094 Compare X20, 0
	095 JumpIfEqual {191}
	096 Move X8, [X20]
	097 Move W22, [X31+64]
	098 Move X1, [X26]
	099 NotImplemented "Instruction LDRH not yet implemented."
	100 Compare X9, 0
	101 JumpIfEqual {108}
	102 Move X10, [X8+176]
	103 Add X10, X10, 8
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Subtract X9, X9, 1
	107 Add X10, X10, 16
	108 Move W2, 2
	109 Move X0, X20
	110 Call 0x1C5D788
	111 Move W9, [X10]
	112 Add W9, W9, 2
	113 Add X8, X8, W9
	114 Add X0, X8, 312
	115 Move X8, [X0]
	116 Move X2, [X0+8]
	117 Move X0, X20
	118 Move W1, W22
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move S1, [X21+88]
	121 Move S2, [X21+92]
	122 Move S3, [X21+72]
	123 Move S4, [X21+76]
	124 Move S5, [X21+80]
	125 Move S0, [X21+84]
	126 Move V6, [X21+96]
	127 Move X22, X0
	128 Add X2, X31, 32
	129 Add X3, X31, 16
	130 Add X4, X31, 12
	131 Move X1, X0
	132 Call RaycastQuery.NarrowPhaseRay, X0, X1, X2, X3, V0, X4, X5, X6
	133 Move V9, [X31+12]
	134 NotImplemented "Instruction FCMP not yet implemented."
	135 NotImplemented "Instruction CSET not yet implemented."
	136 And W8, W0, W8
	137 Move TEMP, X8
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfNotEqual {87}
	141 Move V0, [X31+32]
	142 Move V1, [X31+40]
	143 Move V2, [X31+16]
	144 Move V3, [X31+24]
	145 Move X8, [X22+112]
	146 Move W1, [X19+24]
	147 Move W9, [X22+124]
	148 Move [X31+108], W31
	149 Move [X31+80], D0
	150 Move [X31+88], S1
	151 Move [X31+92], D2
	152 Move [X31+100], S3
	153 Move [X31+108], S9
	154 Move [X31+112], X8
	155 Move W8, [X22+448]
	156 Move X10, [X22+440]
	157 Add X11, X22, 452
	158 Move X3, [X27]
	159 Move [X28+8], W8
	160 Move [X28], X10
	161 Move V0, [X11]
	162 Move [X29], V0
	163 Move [X31+148], W9
	164 Move [X31+152], X31
	165 Add X2, X31, 80
	166 Move X0, X19
	167 Call List`1<HitboxHit>.Insert, X0, X1, X2
	168 Move V8, V9
	169 Move X1, [X24]
	170 Add X0, X31, 48
	171 Call Enumerator<Int32>.Dispose, X0
	172 Move W8, [X19+24]
	173 Move X20, [X31+256]
	174 Move X19, [X31+264]
	175 Move X22, [X31+240]
	176 Move X21, [X31+248]
	177 Move X26, [X31+208]
	178 Move X25, [X31+216]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X24, [X31+224]
	181 Move X23, [X31+232]
	182 Move X28, [X31+192]
	183 Move X27, [X31+200]
	184 Move X29, [X31+176]
	185 Move X30, [X31+184]
	186 Move D9, [X31+160]
	187 Move D8, [X31+168]
	188 NotImplemented "Instruction CSET not yet implemented."
	189 Add X31, X31, 272
	190 Return X0
	191 Call 0x1C17F20
	192 Call 0x1C17F20
	193 Move X20, X0
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move X0, X20
	196 Call 0x3EB2AD0
	197 Move X21, [X0]
	198 Call 0x3EB2AE0
	199 Move X1, [X24]
	200 Add X0, X31, 48
	201 Call Enumerator<Int32>.Dispose, X0
	202 Compare X21, 0
	203 JumpIfEqual {172}
	204 Move X0, X21
	205 Call 0x1C17F18
	206 Move X21, X31
	207 Move X20, X0
	208 Move X1, [X24]
	209 Add X0, X31, 48
	210 Call Enumerator<Int32>.Dispose, X0
	211 Compare X21, 0
	212 JumpIfNotEqual {215}
	213 Move X0, X20
	214 Call 0x1D2D690
	215 Move X0, X21
	216 Call 0x1C17F18
	217 Call 0x1991590

Method: System.Void PerformStaticQuery(Fusion.NetworkRunner runner, System.Collections.Generic.List`1<Fusion.LagCompensatedHit> hits, Fusion.HitOptions options)

Disassembly:
	0x01EF0710 STR W8, [X0 + 0x14]
	0x01EF0714 RET
	0x01EF0718 LDR V1, [X0 + 0x18]
	0x01EF071C FADD D0, D1, D0
	0x01EF0720 STR D0, [X0 + 0x18]
	0x01EF0724 RET
	0x01EF0728 LDR V1, [X0 + 0x20]
	0x01EF072C FADD D0, D1, D0
	0x01EF0730 STR D0, [X0 + 0x20]
	0x01EF0734 RET
	0x01EF0738 LDR X0, [X0 + 0x18]
	0x01EF073C RET
	0x01EF0740 LDR X0, [X0 + 0x10]
	0x01EF0744 RET
	0x01EF0748 LDR X0, [X0 + 0x20]
	0x01EF074C RET
	0x01EF0750 STR X30, [X31 - 0x30]!
	0x01EF0754 STP X22, X21, [X31 + 0x10]
	0x01EF0758 STP X20, X19, [X31 + 0x20]
	0x01EF075C ADRP X20, 0x24E9000
	0x01EF0760 ADRP X22, 0x2210000
	0x01EF0764 ADRP X21, 0x2210000
	0x01EF0768 LDRB W8, [X20 + 0x5CC]
	0x01EF076C LDR X22, [X22 + 0x5D0]
	0x01EF0770 LDR X21, [X21 + 0x5D8]
	0x01EF0774 MOV X19, X0
	0x01EF0778 TBNZ X8, 0x0, 0x1EF079C
	0x01EF077C ADRP X0, 0x2210000
	0x01EF0780 LDR X0, [X0 + 0x5D0]
	0x01EF0784 BL 0x1C16CF4
	0x01EF0788 ADRP X0, 0x2210000
	0x01EF078C LDR X0, [X0 + 0x5D8]
	0x01EF0790 BL 0x1C16CF4
	0x01EF0794 MOVZ W8, 0x1
	0x01EF0798 STRB W8, [X20 + 0x5CC]
	0x01EF079C MOV X0, X19
	0x01EF07A0 MOV X1, X31
	0x01EF07A4 BL 0x33BDD8C
	0x01EF07A8 LDR X0, [X22]
	0x01EF07AC BL 0x1C16F10
	0x01EF07B0 MOV X1, X31
	0x01EF07B4 MOV X20, X0
	0x01EF07B8 BL 0x33BDD8C
	0x01EF07BC STR X20, [X19 + 0x10]
	0x01EF07C0 LDR X0, [X22]
	0x01EF07C4 BL 0x1C16F10
	0x01EF07C8 MOV X1, X31
	0x01EF07CC MOV X20, X0
	0x01EF07D0 BL 0x33BDD8C
	0x01EF07D4 STR X20, [X19 + 0x18]
	0x01EF07D8 LDR X0, [X21]
	0x01EF07DC BL 0x1C16F10
	0x01EF07E0 MOV X20, X0
	0x01EF07E4 BL 0x1EF0804
	0x01EF07E8 STR X20, [X19 + 0x20]
	0x01EF07EC LDP X20, X19, [X31 + 0x20]
	0x01EF07F0 LDP X22, X21, [X31 + 0x10]
	0x01EF07F4 LDR X30, [X31], #0x30
	0x01EF07F8 RET
	0x01EF07FC MOV X1, X31
	0x01EF0800 B 0x33BDD8C
	0x01EF0804 STR X30, [X31 - 0x50]!
	0x01EF0808 STP X26, X25, [X31 + 0x10]
	0x01EF080C STP X24, X23, [X31 + 0x20]
	0x01EF0810 STP X22, X21, [X31 + 0x30]
	0x01EF0814 STP X20, X19, [X31 + 0x40]
	0x01EF0818 ADRP X26, 0x24E9000
	0x01EF081C ADRP X25, 0x220F000
	0x01EF0820 ADRP X20, 0x220F000
	0x01EF0824 ADRP X24, 0x2210000
	0x01EF0828 ADRP X23, 0x2210000
	0x01EF082C ADRP X22, 0x2210000
	0x01EF0830 ADRP X21, 0x2210000
	0x01EF0834 LDR X25, [X25 + 0xA08]
	0x01EF0838 LDRB W8, [X26 + 0x5CF]
	0x01EF083C LDR X20, [X20 + 0x9F8]
	0x01EF0840 LDR X24, [X24 + 0x5E0]
	0x01EF0844 LDR X23, [X23 + 0x5E8]
	0x01EF0848 LDR X22, [X22 + 0x5F0]
	0x01EF084C LDR X21, [X21 + 0x5F8]
	0x01EF0850 MOV X19, X0
	0x01EF0854 TBNZ X8, 0x0, 0x1EF08A8
	0x01EF0858 ADRP X0, 0x2210000
	0x01EF085C LDR X0, [X0 + 0x5E8]
	0x01EF0860 BL 0x1C16CF4
	0x01EF0864 ADRP X0, 0x2210000
	0x01EF0868 LDR X0, [X0 + 0x5E0]
	0x01EF086C BL 0x1C16CF4
	0x01EF0870 ADRP X0, 0x220F000
	0x01EF0874 LDR X0, [X0 + 0x9F8]
	0x01EF0878 BL 0x1C16CF4
	0x01EF087C ADRP X0, 0x220F000
	0x01EF0880 LDR X0, [X0 + 0xA08]
	0x01EF0884 BL 0x1C16CF4
	0x01EF0888 ADRP X0, 0x2210000
	0x01EF088C LDR X0, [X0 + 0x5F8]
	0x01EF0890 BL 0x1C16CF4
	0x01EF0894 ADRP X0, 0x2210000
	0x01EF0898 LDR X0, [X0 + 0x5F0]
	0x01EF089C BL 0x1C16CF4
	0x01EF08A0 MOVZ W8, 0x1
	0x01EF08A4 STRB W8, [X26 + 0x5CF]
	0x01EF08A8 MOV X0, X19
	0x01EF08AC MOV X1, X31
	0x01EF08B0 BL 0x33BDD8C
	0x01EF08B4 LDR X0, [X25]
	0x01EF08B8 BL 0x1C16F10
	0x01EF08BC LDR X1, [X20]
	0x01EF08C0 MOV X20, X0
	0x01EF08C4 BL 0x2DB8E4C
	0x01EF08C8 STR X20, [X19 + 0x10]
	0x01EF08CC LDR X0, [X24]
	0x01EF08D0 BL 0x1C16F10
	0x01EF08D4 LDR X1, [X23]
	0x01EF08D8 MOV X20, X0
	0x01EF08DC BL 0x2A66C80
	0x01EF08E0 STR X20, [X19 + 0x20]
	0x01EF08E4 LDR X0, [X24]
	0x01EF08E8 BL 0x1C16F10
	0x01EF08EC LDR X1, [X23]
	0x01EF08F0 MOV X20, X0
	0x01EF08F4 BL 0x2A66C80
	0x01EF08F8 STR X20, [X19 + 0x18]
	0x01EF08FC LDR X0, [X22]
	0x01EF0900 BL 0x1C16F10
	0x01EF0904 LDR X1, [X21]
	0x01EF0908 MOV X20, X0
	0x01EF090C BL 0x2601D04
	0x01EF0910 STR X20, [X19 + 0x28]
	0x01EF0914 LDP X20, X19, [X31 + 0x40]
	0x01EF0918 LDP X22, X21, [X31 + 0x30]
	0x01EF091C LDP X24, X23, [X31 + 0x20]
	0x01EF0920 LDP X26, X25, [X31 + 0x10]
	0x01EF0924 LDR X30, [X31], #0x50
	0x01EF0928 RET
	0x01EF092C RET
	0x01EF0930 MOVI V0.2D, 0x0
	0x01EF0934 STP V0, V0, [X0 + 0x50]
	0x01EF0938 STP V0, V0, [X0 + 0x30]
	0x01EF093C STP V0, V0, [X0 + 0x10]
	0x01EF0940 RET
	0x01EF0944 STR X30, [X31 - 0x10]!
	0x01EF0948 CBZ X1, 0x1EF099C
	0x01EF094C LDR V0, [X1 + 0x1]
	0x01EF0950 STR V0, [X0 + 0x1]
	0x01EF0954 LDR V0, [X1 + 0x2]
	0x01EF0958 STR V0, [X0 + 0x2]
	0x01EF095C LDR V0, [X1 + 0x30]
	0x01EF0960 STR S0, [X0 + 0x30]
	0x01EF0964 LDUR V0, [X1 + 0x34]
	0x01EF0968 STUR V0, [X0 + 0x34]
	0x01EF096C LDUR V0, [X1 + 0x44]
	0x01EF0970 STUR V0, [X0 + 0x44]
	0x01EF0974 LDR V0, [X1 + 0x54]
	0x01EF0978 STR S0, [X0 + 0x54]
	0x01EF097C LDR W8, [X1 + 0x58]
	0x01EF0980 STR W8, [X0 + 0x58]
	0x01EF0984 LDUR V0, [X1 + 0x5C]
	0x01EF0988 STUR V0, [X0 + 0x5C]
	0x01EF098C LDR V0, [X1 + 0x6C]
	0x01EF0990 STR S0, [X0 + 0x6C]
	0x01EF0994 LDR X30, [X31], #0x10
	0x01EF0998 RET
	0x01EF099C BL 0x1C16F20
	0x01EF09A0 LDR W0, [X0 + 0x10]
	0x01EF09A4 RET
	0x01EF09A8 STR W1, [X0 + 0x10]
	0x01EF09AC RET
	0x01EF09B0 LDR W0, [X0 + 0x14]

ISIL:
	001 Move [X31-112], D14
	002 Move [X31+8], D13
	003 Move [X31+16], D12
	004 Move [X31+24], D11
	005 Move [X31+32], D10
	006 Move [X31+40], D9
	007 Move [X31+48], D8
	008 Move [X31+56], X29
	009 Move [X31+64], X30
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Subtract X31, X31, 432
	016 Move X23, 0x24EA000
	017 Move W8, [X23+1479]
	018 Move W22, W3
	019 Move X19, X2
	020 Move X21, X1
	021 Move X20, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0x220E000
	027 Move X0, [X0+3456]
	028 Call 0x1C17CF4
	029 Move X0, 0x2204000
	030 Move X0, [X0+1432]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+1479], W8
	034 Move [X31+208], W31
	035 Move [X31+200], W31
	036 Move TEMP, X22
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {109}
	040 Move TEMP, X22
	041 And TEMP, TEMP, 2
	042 Compare TEMP, 2
	043 JumpIfNotEqual {194}
	044 Compare X21, 0
	045 JumpIfEqual {210}
	046 Move X0, X21
	047 Move X1, X31
	048 Add X22, X31, 216
	049 Call NetworkRunner.GetPhysicsScene2D, X0
	050 Move [X31+200], W0
	051 Move W0, [X20+24]
	052 Move S8, [X20+84]
	053 Move S9, [X20+88]
	054 Move S10, [X20+72]
	055 Move S11, [X20+76]
	056 Move V12, [X20+96]
	057 Move X1, X31
	058 Call LayerMask.op_Implicit, X0
	059 Move W1, W0
	060 Add X8, X31, 216
	061 Add X0, X31, 200
	062 Move V0, V8
	063 Move V1, V9
	064 Move V2, V10
	065 Move V3, V11
	066 Move V4, V12
	067 Move X2, X31
	068 Call PhysicsScene2D.Raycast, X0, X1, X2, V0, X3
	069 Move W8, [X31+248]
	070 Move V1, [X22]
	071 Move V0, [X22+16]
	072 Add X21, X20, 144
	073 Move X0, X21
	074 Move X1, X31
	075 Move [X31+352], W8
	076 Move [X31+320], V1
	077 Move [X31+328], V0
	078 Move [X20+176], W8
	079 Move [X20+144], V1
	080 Move [X20+152], V0
	081 Call RaycastHit2D.get_collider, X0
	082 Move X8, 0x2204000
	083 Move X8, [X8+1432]
	084 Move X20, X0
	085 Move X8, [X8]
	086 Move W9, [X8+224]
	087 Compare W9, 0
	088 JumpIfNotEqual {91}
	089 Move X0, X8
	090 Call 0x1C17DFC
	091 Move X0, X20
	092 Move X1, X31
	093 Move X2, X31
	094 Call Object.op_Inequality, X0, X1
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {194}
	099 Move W8, [X21+32]
	100 Move V1, [X21]
	101 Move V0, [X21+16]
	102 Add X0, X31, 0
	103 Move X1, X31
	104 Move [X31+32], W8
	105 Add X8, X31, 320
	106 Move [X31], V1
	107 Move [X31+8], V0
	108 Call LagCompensatedHit.op_Explicit, X0
	109 Compare X21, 0
	110 JumpIfEqual {210}
	111 Move X0, X21
	112 Move X1, X31
	113 Call NetworkRunner.GetPhysicsScene, X0
	114 Move [X31+208], W0
	115 Move W0, [X20+24]
	116 Move S8, [X20+88]
	117 Move S9, [X20+92]
	118 Move S10, [X20+72]
	119 Move S11, [X20+76]
	120 Move S13, [X20+80]
	121 Move S12, [X20+84]
	122 Move V14, [X20+96]
	123 Move X1, X31
	124 Add X21, X20, 100
	125 Call LayerMask.op_Implicit, X0
	126 Move W3, [X20+16]
	127 Move W2, W0
	128 Add X0, X31, 208
	129 Move V0, V12
	130 Move V1, V8
	131 Move V2, V9
	132 Move V3, V10
	133 Move V4, V11
	134 Move V5, V13
	135 Move X1, X21
	136 Move V6, V14
	137 Move X4, X31
	138 Call PhysicsScene.Raycast, X0, X1, X2, X3, V0, X4, X5
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfNotEqual {194}
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 Move V2, [X21]
	145 Move V1, [X21+16]
	146 Add X8, X31, 320
	147 Add X0, X31, 48
	148 Move X1, X31
	149 Move [X31+76], V0
	150 Move [X31+48], V2
	151 Move [X31+56], V1
	152 Call LagCompensatedHit.op_Explicit, X0
	153 Add X0, X31, 96
	154 Add X1, X31, 320
	155 Move W2, 104
	156 Call 0x3EB2AC0
	157 Compare X19, 0
	158 JumpIfEqual {210}
	159 Move X8, 0x220E000
	160 Move X8, [X8+3456]
	161 Add X0, X31, 216
	162 Add X1, X31, 96
	163 Move W2, 104
	164 Move X20, [X8]
	165 Call 0x3EB2AC0
	166 Move W9, [X19+28]
	167 Move X8, [X19+16]
	168 Add W9, W9, 1
	169 Move [X19+28], W9
	170 Compare X8, 0
	171 JumpIfEqual {210}
	172 NotImplemented "Instruction LDRSW not yet implemented."
	173 Move W10, [X8+24]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move W11, 104
	176 NotImplemented "Instruction MADD not yet implemented."
	177 Add W10, W9, 1
	178 Add X0, X8, 32
	179 Add X1, X31, 216
	180 Move W2, 104
	181 Move [X19+24], W10
	182 Call 0x3EB2AC0
	183 Move X8, [X20+32]
	184 Add X0, X31, 320
	185 Add X1, X31, 216
	186 Move W2, 104
	187 Move X8, [X8+192]
	188 Move X20, [X8+112]
	189 Call 0x3EB2AC0
	190 Add X1, X31, 320
	191 Move X0, X19
	192 Move X2, X20
	193 Call List`1<LagCompensatedHit>.AddWithResize, X0, X1
	194 Add X31, X31, 432
	195 Move X20, [X31+96]
	196 Move X19, [X31+104]
	197 Move X22, [X31+80]
	198 Move X21, [X31+88]
	199 Move X30, [X31+64]
	200 Move X23, [X31+72]
	201 Move X29, [X31+56]
	202 Move D9, [X31+40]
	203 Move D8, [X31+48]
	204 Move D11, [X31+24]
	205 Move D10, [X31+32]
	206 Move D13, [X31+8]
	207 Move D12, [X31+16]
	208 Move V14, [X31+112]
	209 Return 
	210 Call 0x1C17F20

Method: System.Boolean NarrowPhaseRay(ref Fusion.LagCompensation.HitboxCollider c, UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, System.Single length, out UnityEngine.Vector3 point, out UnityEngine.Vector3 normal, out System.Single distance)

Disassembly:
	0x01EEFA28 BL 0x1C16CF4
	0x01EEFA2C MOVZ W8, 0x1
	0x01EEFA30 STRB W8, [X23 + 0x5C8]
	0x01EEFA34 MOV X0, X19
	0x01EEFA38 MOV X1, X20
	0x01EEFA3C BL 0x1EED52C
	0x01EEFA40 LDR W8, [X20 + 0x40]
	0x01EEFA44 LDR X9, [X20 + 0x38]
	0x01EEFA48 STR W8, [X19 + 0x50]
	0x01EEFA4C STR X9, [X19 + 0x48]
	0x01EEFA50 LDR V0, [X20 + 0x44]
	0x01EEFA54 STR S0, [X19 + 0x54]
	0x01EEFA58 LDR W1, [X20 + 0x48]
	0x01EEFA5C LDR X0, [X22]
	0x01EEFA60 BL 0x1C16D6C
	0x01EEFA64 STR X0, [X19 + 0x58]
	0x01EEFA68 LDR W1, [X20 + 0x48]
	0x01EEFA6C LDR X0, [X21]
	0x01EEFA70 BL 0x1C16D6C
	0x01EEFA74 STR X0, [X19 + 0x60]
	0x01EEFA78 LDP X20, X19, [X31 + 0x20]
	0x01EEFA7C LDP X22, X21, [X31 + 0x10]
	0x01EEFA80 LDP X30, X23, [X31], #0x30
	0x01EEFA84 RET
	0x01EEFA88 STR X30, [X31 - 0x30]!
	0x01EEFA8C STP X22, X21, [X31 + 0x10]
	0x01EEFA90 STP X20, X19, [X31 + 0x20]
	0x01EEFA94 MOV X19, X3
	0x01EEFA98 MOV X20, X2
	0x01EEFA9C MOV X21, X1
	0x01EEFAA0 MOV X22, X0
	0x01EEFAA4 BL 0x1EED52C
	0x01EEFAA8 LDR W8, [X21 + 0x40]
	0x01EEFAAC LDR X9, [X21 + 0x38]
	0x01EEFAB0 STR W8, [X22 + 0x50]
	0x01EEFAB4 STR X9, [X22 + 0x48]
	0x01EEFAB8 LDR V0, [X21 + 0x44]
	0x01EEFABC STP X20, X19, [X22 + 0x58]
	0x01EEFAC0 LDP X20, X19, [X31 + 0x20]
	0x01EEFAC4 STR S0, [X22 + 0x54]
	0x01EEFAC8 LDP X22, X21, [X31 + 0x10]
	0x01EEFACC LDR X30, [X31], #0x30
	0x01EEFAD0 RET
	0x01EEFAD4 LDR V3, [X0 + 0x48]
	0x01EEFAD8 LDR V5, [X1]
	0x01EEFADC LDP S4, S6, [X0 + 0x50]
	0x01EEFAE0 LDP S7, S0, [X1 + 0x8]
	0x01EEFAE4 LDP S1, S2, [X1 + 0x10]
	0x01EEFAE8 FSUB V3.2S, V3.2S, V5.2S
	0x01EEFAEC MOV X0, X31
	0x01EEFAF0 FSUB S5, S4, S7
	0x01EEFAF4 MOV S4, V3.S[1]
	0x01EEFAF8 B 0x1EE6D54
	0x01EEFAFC SUB X31, X31, 0x140
	0x01EEFB00 STP X29, X30, [X31 + 0xE0]
	0x01EEFB04 STP X28, X27, [X31 + 0xF0]
	0x01EEFB08 STP X26, X25, [X31 + 0x100]
	0x01EEFB0C STP X24, X23, [X31 + 0x110]
	0x01EEFB10 STP X22, X21, [X31 + 0x120]
	0x01EEFB14 STP X20, X19, [X31 + 0x130]
	0x01EEFB18 ADRP X23, 0x24EA000
	0x01EEFB1C LDRB W8, [X23 + 0x5C9]
	0x01EEFB20 MOV X19, X3
	0x01EEFB24 MOV X22, X2
	0x01EEFB28 MOV X20, X1
	0x01EEFB2C MOV X21, X0
	0x01EEFB30 TBNZ X8, 0x0, 0x1EEFB84
	0x01EEFB34 ADRP X0, 0x220B000
	0x01EEFB38 LDR X0, [X0 + 0x830]
	0x01EEFB3C BL 0x1C16CF4
	0x01EEFB40 ADRP X0, 0x220B000
	0x01EEFB44 LDR X0, [X0 + 0x838]
	0x01EEFB48 BL 0x1C16CF4
	0x01EEFB4C ADRP X0, 0x220B000
	0x01EEFB50 LDR X0, [X0 + 0x840]
	0x01EEFB54 BL 0x1C16CF4
	0x01EEFB58 ADRP X0, 0x220B000
	0x01EEFB5C LDR X0, [X0 + 0x848]
	0x01EEFB60 BL 0x1C16CF4
	0x01EEFB64 ADRP X0, 0x220E000
	0x01EEFB68 LDR X0, [X0 + 0xE78]
	0x01EEFB6C BL 0x1C16CF4
	0x01EEFB70 ADRP X0, 0x2211000
	0x01EEFB74 LDR X0, [X0 + 0x5B8]
	0x01EEFB78 BL 0x1C16CF4
	0x01EEFB7C MOVZ W8, 0x1
	0x01EEFB80 STRB W8, [X23 + 0x5C9]
	0x01EEFB84 STP X31, X31, [X31 + 0x50]
	0x01EEFB88 STR X31, [X31 + 0x60]
	0x01EEFB8C STR W31, [X31 + 0x48]
	0x01EEFB90 STR X31, [X31 + 0x40]
	0x01EEFB94 STR W31, [X31 + 0x38]
	0x01EEFB98 STR X31, [X31 + 0x30]
	0x01EEFB9C CBZ X22, 0x1EEFDD0
	0x01EEFBA0 ADRP X8, 0x220B000
	0x01EEFBA4 LDR X8, [X8 + 0x848]
	0x01EEFBA8 ADRP X24, 0x220B000
	0x01EEFBAC LDR X24, [X24 + 0x838]
	0x01EEFBB0 ADRP X25, 0x220E000
	0x01EEFBB4 LDR X1, [X8]
	0x01EEFBB8 ADRP X26, 0x2211000
	0x01EEFBBC LDR X25, [X25 + 0xE78]
	0x01EEFBC0 LDR X26, [X26 + 0x5B8]
	0x01EEFBC4 ADD X8, X31, 0x90
	0x01EEFBC8 MOV X0, X22
	0x01EEFBCC ADD X28, X31, 0x90
	0x01EEFBD0 BL 0x2DAAA30
	0x01EEFBD4 LDR V0, [X31 + 0x9]
	0x01EEFBD8 LDR X8, [X31 + 0xA0]
	0x01EEFBDC MOV W23, W31
	0x01EEFBE0 ADD X27, X28, 0x28
	0x01EEFBE4 ADD X28, X28, 0x34
	0x01EEFBE8 STR V0, [X31 + 0x5]
	0x01EEFBEC STR X8, [X31 + 0x60]
	0x01EEFBF0 MOVZ W29, 0x50
	0x01EEFBF4 LDR X1, [X24]
	0x01EEFBF8 ADD X0, X31, 0x50
	0x01EEFBFC BL 0x2BBDA6C
	0x01EEFC00 TBZ X0, 0x0, 0x1EEFD94
	0x01EEFC04 CBZ X20, 0x1EEFDCC
	0x01EEFC08 LDR X8, [X20]
	0x01EEFC0C LDR W22, [X31 + 0x60]
	0x01EEFC10 LDR X1, [X25]
	0x01EEFC14 LDRH W9, [X8 + 0x12E]
	0x01EEFC18 CBZ X9, 0x1EEFC3C
	0x01EEFC1C LDR X10, [X8 + 0xB0]
	0x01EEFC20 ADD X10, X10, 0x8
	0x01EEFC24 LDUR X11, [X10 - 0x8]
	0x01EEFC28 CMP X11, X1
	0x01EEFC2C B.EQ 0x1EEFC4C
	0x01EEFC30 SUBS X9, X9, 0x1
	0x01EEFC34 ADD X10, X10, 0x10
	0x01EEFC38 B.NE 0x1EEFC24
	0x01EEFC3C MOVZ W2, 0x2
	0x01EEFC40 MOV X0, X20
	0x01EEFC44 BL 0x1C5C788
	0x01EEFC48 B 0x1EEFC5C
	0x01EEFC4C LDR W9, [X10]
	0x01EEFC50 ADD W9, W9, 0x2
	0x01EEFC54 ADD X8, X8, W9, 0x4, SXTW
	0x01EEFC58 ADD X0, X8, 0x138
	0x01EEFC5C LDP X8, X2, [X0]
	0x01EEFC60 MOV X0, X20
	0x01EEFC64 MOV W1, W22
	0x01EEFC68 BLR X8
	0x01EEFC6C LDP S0, S1, [X21 + 0x48]
	0x01EEFC70 LDP S2, S3, [X21 + 0x50]
	0x01EEFC74 MOV X22, X0
	0x01EEFC78 ADD X2, X31, 0x40
	0x01EEFC7C ADD X3, X31, 0x30
	0x01EEFC80 MOV X1, X0
	0x01EEFC84 BL 0x1EEFE80
	0x01EEFC88 TBZ X0, 0x0, 0x1EEFBF4
	0x01EEFC8C LDR W10, [X22 + 0x1C0]
	0x01EEFC90 LDR X11, [X22 + 0x1B8]
	0x01EEFC94 LDR X9, [X22 + 0x70]
	0x01EEFC98 LDR W8, [X22 + 0x7C]
	0x01EEFC9C STR W10, [X31 + 0x28]
	0x01EEFCA0 STR X11, [X31 + 0x20]
	0x01EEFCA4 ADD X10, X22, 0x1C4
	0x01EEFCA8 LDP S4, S3, [X31 + 0x40]
	0x01EEFCAC LDR V2, [X31 + 0x48]
	0x01EEFCB0 LDP S1, S0, [X31 + 0x30]
	0x01EEFCB4 LDR V6, [X10]
	0x01EEFCB8 LDR V5, [X31 + 0x38]
	0x01EEFCBC STR V6, [X31 + 0x1]
	0x01EEFCC0 CBZ X19, 0x1EEFDD8
	0x01EEFCC4 LDR X10, [X31 + 0x20]
	0x01EEFCC8 LDR W11, [X31 + 0x28]
	0x01EEFCCC LDR V6, [X31 + 0x1]
	0x01EEFCD0 STR X10, [X31 + 0x80]
	0x01EEFCD4 STR W11, [X31 + 0x88]
	0x01EEFCD8 STR V6, [X31 + 0x7]
	0x01EEFCDC LDR W12, [X19 + 0x1C]
	0x01EEFCE0 LDR X10, [X19 + 0x10]
	0x01EEFCE4 LDR X11, [X26]
	0x01EEFCE8 ADD W12, W12, 0x1
	0x01EEFCEC STR W12, [X19 + 0x1C]
	0x01EEFCF0 CBZ X10, 0x1EEFDD4
	0x01EEFCF4 LDRSW X12, [X19 + 0x18]
	0x01EEFCF8 LDR W13, [X10 + 0x18]
	0x01EEFCFC CMP W12, W13
	0x01EEFD00 B.CS 0x1EEFD44
	0x01EEFD04 ADD W11, W12, 0x1
	0x01EEFD08 MADD X10, X12, X29, X10
	0x01EEFD0C STR W11, [X19 + 0x18]
	0x01EEFD10 STP S4, S3, [X10 + 0x20]
	0x01EEFD14 STP S2, S1, [X10 + 0x28]
	0x01EEFD18 STP S0, S5, [X10 + 0x30]
	0x01EEFD1C STP X31, X9, [X10 + 0x38]
	0x01EEFD20 LDR W9, [X31 + 0x88]
	0x01EEFD24 LDR X11, [X31 + 0x80]
	0x01EEFD28 STR W9, [X10 + 0x50]
	0x01EEFD2C STR X11, [X10 + 0x48]
	0x01EEFD30 LDR V0, [X31 + 0x7]
	0x01EEFD34 STR W8, [X10 + 0x64]
	0x01EEFD38 STR X31, [X10 + 0x68]
	0x01EEFD3C STUR V0, [X10 + 0x54]
	0x01EEFD40 B 0x1EEFD8C
	0x01EEFD44 LDR X10, [X11 + 0x20]
	0x01EEFD48 LDR X11, [X31 + 0x80]
	0x01EEFD4C LDR V6, [X31 + 0x7]
	0x01EEFD50 LDR X10, [X10 + 0xC0]
	0x01EEFD54 LDR X2, [X10 + 0x70]
	0x01EEFD58 STP X31, X9, [X31 + 0xA8]
	0x01EEFD5C LDR W9, [X31 + 0x88]
	0x01EEFD60 STP S4, S3, [X31 + 0x90]
	0x01EEFD64 STP S2, S1, [X31 + 0x98]
	0x01EEFD68 STP S0, S5, [X31 + 0xA0]
	0x01EEFD6C STR W9, [X27 + 0x8]
	0x01EEFD70 STR X11, [X27]
	0x01EEFD74 STR V6, [X28]
	0x01EEFD78 STR W8, [X31 + 0xD4]
	0x01EEFD7C STR X31, [X31 + 0xD8]
	0x01EEFD80 ADD X1, X31, 0x90
	0x01EEFD84 MOV X0, X19
	0x01EEFD88 BL 0x2FCAD98
	0x01EEFD8C MOVZ W23, 0x1
	0x01EEFD90 B 0x1EEFBF4
	0x01EEFD94 ADRP X8, 0x220B000
	0x01EEFD98 LDR X8, [X8 + 0x830]
	0x01EEFD9C ADD X0, X31, 0x50
	0x01EEFDA0 LDR X1, [X8]
	0x01EEFDA4 BL 0x2BBDA68
	0x01EEFDA8 AND W0, W23, 0x1
	0x01EEFDAC LDP X20, X19, [X31 + 0x130]
	0x01EEFDB0 LDP X22, X21, [X31 + 0x120]
	0x01EEFDB4 LDP X24, X23, [X31 + 0x110]
	0x01EEFDB8 LDP X26, X25, [X31 + 0x100]
	0x01EEFDBC LDP X28, X27, [X31 + 0xF0]
	0x01EEFDC0 LDP X29, X30, [X31 + 0xE0]
	0x01EEFDC4 ADD X31, X31, 0x140
	0x01EEFDC8 RET
	0x01EEFDCC BL 0x1C16F20
	0x01EEFDD0 BL 0x1C16F20
	0x01EEFDD4 BL 0x1C16F20
	0x01EEFDD8 BL 0x1C16F20
	0x01EEFDDC B 0x1EEFDE0
	0x01EEFDE0 MOV X8, X1
	0x01EEFDE4 MOV X19, X0
	0x01EEFDE8 MOVZ W23, 0x1
	0x01EEFDEC B 0x1EEFE10
	0x01EEFDF0 MOV X8, X1
	0x01EEFDF4 MOV X19, X0
	0x01EEFDF8 MOV W23, W31
	0x01EEFDFC B 0x1EEFE10
	0x01EEFE00 B 0x1EEFE08
	0x01EEFE04 B 0x1EEFE08
	0x01EEFE08 MOV X8, X1
	0x01EEFE0C MOV X19, X0
	0x01EEFE10 CMP W8, 0x1
	0x01EEFE14 B.NE 0x1EEFE48
	0x01EEFE18 MOV X0, X19
	0x01EEFE1C BL 0x3EB1AD0
	0x01EEFE20 LDR X20, [X0]
	0x01EEFE24 BL 0x3EB1AE0
	0x01EEFE28 ADRP X8, 0x220B000
	0x01EEFE2C LDR X8, [X8 + 0x830]
	0x01EEFE30 ADD X0, X31, 0x50
	0x01EEFE34 LDR X1, [X8]
	0x01EEFE38 BL 0x2BBDA68
	0x01EEFE3C CBZ X20, 0x1EEFDA8
	0x01EEFE40 MOV X0, X20
	0x01EEFE44 BL 0x1C16F18
	0x01EEFE48 MOV X20, X31
	0x01EEFE4C B 0x1EEFE54
	0x01EEFE50 MOV X19, X0
	0x01EEFE54 ADRP X8, 0x220B000
	0x01EEFE58 LDR X8, [X8 + 0x830]
	0x01EEFE5C LDR X1, [X8]
	0x01EEFE60 ADD X0, X31, 0x50
	0x01EEFE64 BL 0x2BBDA68
	0x01EEFE68 CBNZ X20, 0x1EEFE74
	0x01EEFE6C MOV X0, X19
	0x01EEFE70 BL 0x1D2C690
	0x01EEFE74 MOV X0, X20
	0x01EEFE78 BL 0x1C16F18
	0x01EEFE7C BL 0x1990590
	0x01EEFE80 SUB X31, X31, 0x180
	0x01EEFE84 STR D14, [X31 + 0x120]
	0x01EEFE88 STP D13, D12, [X31 + 0x128]
	0x01EEFE8C STP D11, D10, [X31 + 0x138]
	0x01EEFE90 STP D9, D8, [X31 + 0x148]
	0x01EEFE94 STR X29, [X31 + 0x158]
	0x01EEFE98 STP X30, X21, [X31 + 0x160]
	0x01EEFE9C STP X20, X19, [X31 + 0x170]
	0x01EEFEA0 MOV V10.16B, V1.16B
	0x01EEFEA4 MOVI V1.2D, 0x0
	0x01EEFEA8 STP X31, X31, [X31 + 0x100]
	0x01EEFEAC STR W31, [X31 + 0x118]
	0x01EEFEB0 STR X31, [X31 + 0x110]
	0x01EEFEB4 STP X31, X31, [X31 + 0xE0]
	0x01EEFEB8 STR W31, [X31 + 0xF8]
	0x01EEFEBC STR X31, [X31 + 0xF0]
	0x01EEFEC0 STP V1, V1, [X31 + 0xC0]
	0x01EEFEC4 STP V1, V1, [X31 + 0xA0]
	0x01EEFEC8 LDR W8, [X1]

ISIL:
	001 Move [X31-128], D15
	002 Move [X31-120], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+80], X30
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Subtract X31, X31, 448
	017 Move V13, V1
	018 NotImplemented "Instruction MOVI not yet implemented."
	019 Move [X31+376], W31
	020 Move [X31+368], X31
	021 Move [X31+360], W31
	022 Move [X31+352], X31
	023 Move [X31+344], W31
	024 Move [X31+336], X31
	025 Move [X31+328], W31
	026 Move [X31+320], X31
	027 Move [X31+416], V1
	028 Move [X31+424], V1
	029 Move [X31+384], V1
	030 Move [X31+392], V1
	031 Move [X31+288], V1
	032 Move [X31+296], V1
	033 Move [X31+256], V1
	034 Move [X31+264], V1
	035 Move [X31+224], V1
	036 Move [X31+232], V1
	037 Move [X31+192], V1
	038 Move [X31+200], V1
	039 Move W8, [X1]
	040 Move X22, X4
	041 Move X19, X3
	042 Move X20, X2
	043 Move V8, V6
	044 Move V9, V5
	045 Move V10, V4
	046 Move V11, V3
	047 Move V12, V2
	048 Move X21, X1
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move V14, V0
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add X8, X31, 128
	054 Move X0, X21
	055 Call HitboxCollider.get_LocalToWorld, X0
	056 Move V0, [X31+128]
	057 Move V1, [X31+144]
	058 Move V2, [X31+160]
	059 Move V3, [X31+176]
	060 Add X8, X31, 64
	061 Add X0, X31, 192
	062 Move X1, X31
	063 Move [X31+192], V0
	064 Move [X31+200], V1
	065 Move [X31+224], V2
	066 Move [X31+232], V3
	067 Call Matrix4x4.get_inverse, X0
	068 Move V0, [X31+64]
	069 Move V1, [X31+80]
	070 Move V2, [X31+96]
	071 Move V3, [X31+112]
	072 Add X0, X31, 384
	073 Move X1, X31
	074 Move [X31+384], V0
	075 Move [X31+392], V1
	076 Move [X31+416], V2
	077 Move [X31+424], V3
	078 Move V0, V14
	079 Move V1, V13
	080 Move V2, V12
	081 Call Matrix4x4.MultiplyPoint, X0, X1
	082 Move V3, [X21+72]
	083 Move V4, [X21+80]
	084 Add X0, X31, 384
	085 Move V0.S[1], V1.S[0]
	086 Subtract V0, V0, V3
	087 Subtract S1, S2, S4
	088 Move [X31+368], D0
	089 Move [X31+376], S1
	090 Move V0, V11
	091 Move V1, V10
	092 Move V2, V9
	093 Move X1, X31
	094 Call Matrix4x4.MultiplyVector, X0, X1
	095 Move [X31+352], S0
	096 Move [X31+356], S1
	097 Move [X31+360], S2
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 Move V1, [X21+92]
	100 Add X0, X31, 336
	101 Add X1, X31, 320
	102 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	103 NotImplemented "Instruction FNEG not yet implemented."
	104 Move [X31+336], D0
	105 Move [X31+344], S1
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 Move W9, [X21+92]
	108 Multiply S0, S8, S8
	109 Add X2, X31, 368
	110 Add X3, X31, 352
	111 Move X4, X20
	112 Move X5, X19
	113 Move X6, X22
	114 Move X7, X31
	115 Move [X31+320], X8
	116 Move [X31+328], W9
	117 Call LagCompensationUtils.RayAABB, X0, X1, X2, X3, V0, X4, X5, X6
	118 Move TEMP, X0
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfNotEqual {342}
	122 Add X8, X31, 128
	123 Move X0, X21
	124 Call HitboxCollider.get_LocalToWorld, X0
	125 Move V0, [X31+128]
	126 Move V1, [X31+144]
	127 Move V2, [X31+160]
	128 Move V3, [X31+176]
	129 Add X0, X31, 192
	130 Move [X31+192], V0
	131 Move [X31+200], V1
	132 Move [X31+224], V2
	133 Move [X31+232], V3
	134 Move V0, [X20]
	135 Move V2, [X21+72]
	136 Move V1, [X20+8]
	137 Move V3, [X21+80]
	138 Add V0, V0, V2
	139 Add S2, S1, S3
	140 Move S1, V0.S[1]
	141 Add X8, X31, 128
	142 Move X0, X21
	143 Call HitboxCollider.get_LocalToWorld, X0
	144 Move V0, [X31+128]
	145 Move V1, [X31+144]
	146 Move V2, [X31+160]
	147 Move V3, [X31+176]
	148 Add X8, X31, 64
	149 Add X0, X31, 192
	150 Move X1, X31
	151 Move [X31+192], V0
	152 Move [X31+200], V1
	153 Move [X31+224], V2
	154 Move [X31+232], V3
	155 Call Matrix4x4.get_inverse, X0
	156 Move V0, [X31+64]
	157 Move V1, [X31+80]
	158 Move V2, [X31+96]
	159 Move V3, [X31+112]
	160 Add X0, X31, 256
	161 Move X1, X31
	162 Move [X31+256], V0
	163 Move [X31+264], V1
	164 Move [X31+288], V2
	165 Move [X31+296], V3
	166 Move V0, V14
	167 Move V1, V13
	168 Move V2, V12
	169 Call Matrix4x4.MultiplyPoint, X0, X1
	170 Move [X31+524], S0
	171 Move [X31+520], S1
	172 Move [X31+60], S2
	173 Add X0, X31, 256
	174 Move V0, V11
	175 Move V1, V10
	176 Move V2, V9
	177 Move X1, X31
	178 Call Matrix4x4.MultiplyVector, X0, X1
	179 Move X0, X21
	180 Move V9, V0
	181 Move V10, V1
	182 Move V11, V2
	183 Call HitboxCollider.get_CapsuleLocalTopCenter, X0
	184 Move X0, X21
	185 Move [X31+52], S1
	186 Move [X31+60], S0
	187 Move [X31+48], S2
	188 Call HitboxCollider.get_CapsuleLocalBottomCenter, X0
	189 Move X23, 0x24EA000
	190 Move W8, [X23+1925]
	191 Move V13, [X21+96]
	192 Move V15, V0
	193 Move V12, V1
	194 Move V14, V2
	195 Compare W8, 0
	196 JumpIfNotEqual {202}
	197 Move X0, 0x2205000
	198 Move X0, [X0+1448]
	199 Call 0x1C17CF4
	200 Move W8, 1
	201 Move [X23+1925], W8
	202 Move X8, 0x2205000
	203 Move X8, [X8+1448]
	204 Move X0, [X8]
	205 Move W8, [X0+224]
	206 Compare W8, 0
	207 JumpIfNotEqual {209}
	208 Call 0x1C17DFC
	209 Multiply S0, S9, S9
	210 Multiply S1, S10, S10
	211 Move X8, -20987904
	212 Add S0, S0, S1
	213 Move V1, [X8+380]
	214 Multiply S2, S11, S11
	215 Add S0, S2, S0
	216 NotImplemented "Instruction FSQRT not yet implemented."
	217 NotImplemented "Instruction FCMP not yet implemented."
	218 NotImplemented "Instruction FDIV not yet implemented."
	219 NotImplemented "Instruction FDIV not yet implemented."
	220 NotImplemented "Instruction FDIV not yet implemented."
	221 Add X8, X31, 128
	222 Move X0, X21
	223 Call HitboxCollider.get_LocalToWorld, X0
	224 Move V0, [X31+128]
	225 Move V1, [X31+144]
	226 Move V2, [X31+160]
	227 Move V3, [X31+176]
	228 Add X0, X31, 192
	229 Move X1, X31
	230 Move [X31+192], V0
	231 Move [X31+200], V1
	232 Move [X31+224], V2
	233 Move [X31+232], V3
	234 Move S0, [X21+72]
	235 Move S1, [X21+76]
	236 Move V2, [X21+80]
	237 Call Matrix4x4.MultiplyPoint, X0, X1
	238 Move V3, [X21+96]
	239 Move [X31+4], S1
	240 Move [X31+12], S2
	241 Move [X31], S0
	242 Move V0, V14
	243 Move [X31+16], S3
	244 Move V1, V13
	245 Move V2, V12
	246 Move V3, V11
	247 Move V4, V10
	248 Move V5, V9
	249 Move V6, V8
	250 Move X0, X20
	251 Move X1, X19
	252 Move X2, X22
	253 Move X3, X31
	254 Call LagCompensationUtils.RaySphereIntersection, X0, X1, V0, X2, V1, X3, X4, X5
	255 Move TEMP, X0
	256 And TEMP, TEMP, 1
	257 Compare TEMP, 1
	258 JumpIfEqual {341}
	259 Move X23, 0x24EA000
	260 Move W8, [X23+1923]
	261 Compare W8, 0
	262 JumpIfNotEqual {268}
	263 Move X0, 0x2205000
	264 Move X0, [X0+1440]
	265 Call 0x1C17CF4
	266 Move W8, 1
	267 Move [X23+1923], W8
	268 Move X8, 0x2205000
	269 Move X8, [X8+1440]
	270 Move X8, [X8]
	271 Move X8, [X8+184]
	272 Move S0, [X8]
	273 Move S1, [X8+4]
	274 Move V2, [X8+8]
	275 Move [X31+16], S0
	276 Move V3, [X31+60]
	277 Move V0, [X31+520]
	278 Move [X31+20], S1
	279 Move [X31+28], S2
	280 Move V2, [X31+48]
	281 Move V4, V12
	282 Move [X31+4], S0
	283 Move [X31+12], S3
	284 Move V0, [X31+524]
	285 Move V3, V15
	286 Move V5, V14
	287 Move V6, V13
	288 Move [X31], S0
	289 Move S1, [X31+52]
	290 Move S0, [X31+56]
	291 Move X0, X20
	292 Move X1, X19
	293 Move X2, X22
	294 Move X3, X31
	295 Move [X31+32], S8
	296 Call LagCompensationUtils.LocalRayCapsuleIntersection, X0, X1, V0, X2, X3, V1, X4, X5, X6
	297 Move TEMP, X0
	298 And TEMP, TEMP, 1
	299 Compare TEMP, 1
	300 JumpIfNotEqual {342}
	301 Add X8, X31, 128
	302 Move X0, X21
	303 Call HitboxCollider.get_LocalToWorld, X0
	304 Move V0, [X31+128]
	305 Move V1, [X31+144]
	306 Move V2, [X31+160]
	307 Move V3, [X31+176]
	308 Add X0, X31, 192
	309 Move [X31+192], V0
	310 Move [X31+200], V1
	311 Move [X31+224], V2
	312 Move [X31+232], V3
	313 Move S0, [X20]
	314 Move S1, [X20+4]
	315 Move V2, [X20+8]
	316 Move X1, X31
	317 Call Matrix4x4.MultiplyPoint, X0, X1
	318 Add X8, X31, 64
	319 Move X0, X21
	320 Move [X20], S0
	321 Move [X20+8], S1
	322 Move [X20+8], S2
	323 Call HitboxCollider.get_LocalToWorld, X0
	324 Move V0, [X31+64]
	325 Move V1, [X31+80]
	326 Move V2, [X31+96]
	327 Move V3, [X31+112]
	328 Add X0, X31, 192
	329 Move X1, X31
	330 Move [X31+192], V0
	331 Move [X31+200], V1
	332 Move [X31+224], V2
	333 Move [X31+232], V3
	334 Move S0, [X19]
	335 Move S1, [X19+4]
	336 Move V2, [X19+8]
	337 Call Matrix4x4.MultiplyVector, X0, X1
	338 Move [X19], S0
	339 Move [X19+8], S1
	340 Move [X19+8], S2
	341 Move W0, 1
	342 Move W0, W31
	343 Move [X20+8], W31
	344 Move [X20], X31
	345 Move [X19+8], W31
	346 Move [X19], X31
	347 Move [X22], W31
	348 Add X31, X31, 448
	349 Move X20, [X31+112]
	350 Move X19, [X31+120]
	351 Move X22, [X31+96]
	352 Move X21, [X31+104]
	353 Move X30, [X31+80]
	354 Move X23, [X31+88]
	355 Move X29, [X31+64]
	356 Move D9, [X31+48]
	357 Move D8, [X31+56]
	358 Move D11, [X31+32]
	359 Move D10, [X31+40]
	360 Move D13, [X31+16]
	361 Move D12, [X31+24]
	362 Move D15, [X31+128]
	363 Move D14, [X31+136]
	364 Return X0

