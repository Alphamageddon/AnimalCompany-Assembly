Type: Fusion.LagCompensation.BVHNode

Method: System.Int32 get_Index()

Disassembly:
	0x01EE1640 STR V1, [X31]
	0x01EE1644 BL 0x1C16DFC

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: System.Boolean get_IsValid()

Disassembly:
	0x01EE1648 LDP V1, V6, [X31]
	0x01EE164C LDR V0, [X31 + 0x2]
	0x01EE1650 MOV V0.S[1], V1.S[0]
	0x01EE1654 UNIMPLEMENTED

ISIL:
	001 Move W8, [X0+72]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_IsRootNode()

Disassembly:
	0x01EE1658 FSUB S1, S8, S6
	0x01EE165C MOVI D2, 0x0
	0x01EE1660 FMOV S3, W31
	0x01EE1664 FSUB V7.2S, V0.2S, V16.2S

ISIL:
	001 Move W8, [X0+72]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_HasParent()

Disassembly:
	0x01EE1668 MOVI V4.2S, 0x3F, 0x18
	0x01EE166C FMOV S5, 0.5
	0x01EE1670 FSUB S3, S3, S1
	0x01EE1674 FSUB V2.2S, V2.2S, V7.2S

ISIL:
	001 Move W8, [X0+76]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_HasLeft()

Disassembly:
	0x01EE1678 FMUL S3, S3, S5
	0x00000000 INVALID
	0x01EE1680 FADD S1, S1, S3
	0x01EE1684 FADD V7.2S, V7.2S, V2.2S

ISIL:
	001 Move W8, [X0+80]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_HasRight()

Disassembly:
	0x01EE1688 FADD S6, S8, S6
	0x01EE168C FADD V0.2S, V0.2S, V16.2S
	0x01EE1690 FSUB S1, S1, S3
	0x01EE1694 FSUB V2.2S, V7.2S, V2.2S

ISIL:
	001 Move W8, [X0+84]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: Fusion.LagCompensation.BVHNode GetParent(Fusion.LagCompensation.BVH bvh)

Disassembly:
	0x01EE1698 FSUB S3, S6, S1
	0x01EE169C FSUB V0.2S, V0.2S, V2.2S
	0x01EE16A0 FMUL S3, S3, S5
	0x00000000 INVALID
	0x01EE16A8 FADD S1, S1, S3
	0x01EE16AC FADD V2.2S, V2.2S, V0.2S
	0x01EE16B0 STR S1, [X19 + 0x8]
	0x01EE16B4 STUR D0, [X19 + 0xC]
	0x01EE16B8 STR D2, [X19]
	0x01EE16BC STR S3, [X19 + 0x14]
	0x01EE16C0 B 0x1EE16EC
	0x01EE16C4 LDR X0, [X22]
	0x01EE16C8 LDR W8, [X0 + 0xE0]
	0x01EE16CC CBNZ W8, 0x1EE16D4
	0x01EE16D0 BL 0x1C16DFC

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {15}
	004 Move X8, [X1+16]
	005 Compare X8, 0
	006 JumpIfEqual {15}
	007 NotImplemented "Instruction LDRSW not yet implemented."
	008 Move W10, [X8+24]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W10, 120
	011 NotImplemented "Instruction MADD not yet implemented."
	012 Add X0, X8, 32
	013 Move X30, [X31+16]
	014 Return X0
	015 Call 0x1C17F20
	016 Call 0x1C17F28

Method: Fusion.LagCompensation.BVHNode GetRight(Fusion.LagCompensation.BVH bvh)

Disassembly:
	0x01EE16D4 LDR W1, [X20 + 0x48]
	0x01EE16D8 MOV X0, X21
	0x01EE16DC MOV W2, W31
	0x01EE16E0 BL 0x1EE11D0
	0x01EE16E4 STP X31, X31, [X19]
	0x01EE16E8 STR X31, [X19 + 0x10]
	0x01EE16EC LDP X20, X19, [X31 + 0x50]
	0x01EE16F0 LDP X22, X21, [X31 + 0x40]
	0x01EE16F4 LDR X30, [X31 + 0x38]
	0x01EE16F8 LDR V8, [X31 + 0x30]
	0x01EE16FC ADD X31, X31, 0x60
	0x01EE1700 RET
	0x01EE1704 BL 0x1C16F20
	0x01EE1708 SUB X31, X31, 0xD0
	0x01EE170C STR D12, [X31 + 0x80]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {15}
	004 Move X8, [X1+16]
	005 Compare X8, 0
	006 JumpIfEqual {15}
	007 NotImplemented "Instruction LDRSW not yet implemented."
	008 Move W10, [X8+24]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W10, 120
	011 NotImplemented "Instruction MADD not yet implemented."
	012 Add X0, X8, 32
	013 Move X30, [X31+16]
	014 Return X0
	015 Call 0x1C17F20
	016 Call 0x1C17F28

Method: Fusion.LagCompensation.BVHNode GetLeft(Fusion.LagCompensation.BVH bvh)

Disassembly:
	0x01EE1710 STP D11, D10, [X31 + 0x88]
	0x01EE1714 STP D9, D8, [X31 + 0x98]
	0x01EE1718 STR X30, [X31 + 0xA8]
	0x01EE171C STP X22, X21, [X31 + 0xB0]
	0x01EE1720 STP X20, X19, [X31 + 0xC0]
	0x01EE1724 ADRP X22, 0x24F8000
	0x01EE1728 ADRP X21, 0x221F000
	0x01EE172C LDRB W8, [X22 + 0x57C]
	0x01EE1730 LDR X21, [X21 + 0x350]
	0x01EE1734 MOV X20, X1
	0x01EE1738 MOV X19, X0
	0x01EE173C TBNZ X8, 0x0, 0x1EE1754
	0x01EE1740 ADRP X0, 0x221F000
	0x01EE1744 LDR X0, [X0 + 0x350]
	0x01EE1748 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {15}
	004 Move X8, [X1+16]
	005 Compare X8, 0
	006 JumpIfEqual {15}
	007 NotImplemented "Instruction LDRSW not yet implemented."
	008 Move W10, [X8+24]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W10, 120
	011 NotImplemented "Instruction MADD not yet implemented."
	012 Add X0, X8, 32
	013 Move X30, [X31+16]
	014 Return X0
	015 Call 0x1C17F20
	016 Call 0x1C17F28

Method: System.String ToString()

Disassembly:
	0x01EE174C MOVZ W8, 0x1
	0x01EE1750 STRB W8, [X22 + 0x57C]
	0x01EE1754 LDR X0, [X21]
	0x01EE1758 LDR W8, [X0 + 0xE0]
	0x01EE175C CBNZ W8, 0x1EE1764
	0x01EE1760 BL 0x1C16DFC
	0x01EE1764 ADD X8, X31, 0x50
	0x01EE1768 MOV X0, X19
	0x01EE176C MOV X1, X20
	0x01EE1770 BL 0x1EE15B0
	0x01EE1774 LDUR V1, [X31 + 0x5C]
	0x01EE1778 LDP S9, S10, [X31 + 0x50]
	0x01EE177C LDR V11, [X31 + 0x58]
	0x01EE1780 LDR V0, [X19]
	0x01EE1784 LDR V8, [X31 + 0x64]
	0x01EE1788 LDR X8, [X19 + 0x10]
	0x01EE178C MOV S12, V1.S[1]
	0x01EE1790 STP V1, V0, [X31]
	0x01EE1794 FSUB S0, S9, S1
	0x01EE1798 FSUB S1, S10, S12
	0x01EE179C FSUB S2, S11, S8
	0x01EE17A0 ADD X0, X31, 0x10
	0x01EE17A4 MOV X1, X31
	0x01EE17A8 STR X8, [X31 + 0x20]
	0x01EE17AC BL 0x3C0A198
	0x01EE17B0 TBZ X0, 0x0, 0x1EE17DC
	0x01EE17B4 LDR V0, [X31]
	0x01EE17B8 FADD S1, S10, S12
	0x01EE17BC FADD S2, S11, S8
	0x01EE17C0 ADD X0, X31, 0x10
	0x01EE17C4 FADD S0, S9, S0
	0x01EE17C8 MOV X1, X31
	0x01EE17CC BL 0x3C0A198

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x24F9000
	007 Move X21, 0x2213000
	008 Move X20, 0x2220000
	009 Move W8, [X22+1399]
	010 Move X21, [X21+1880]
	011 Move X20, [X20+1072]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2213000
	018 Move X0, [X0+1880]
	019 Call 0x1C17CF4
	020 Move X0, 0x2220000
	021 Move X0, [X0+1072]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+1399], W8
	025 Move W8, [X19+72]
	026 Move X0, [X21]
	027 Add X1, X31, 12
	028 Move [X31+12], W8
	029 Call 0x1C17E04
	030 Move X8, [X20]
	031 Move X1, X0
	032 Move X2, X31
	033 Move X0, X8
	034 Call String.Format, X0, X1
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Return X0

Method: System.Boolean get_IsLeaf()

Disassembly:
	0x01EE17D0 TBZ X0, 0x0, 0x1EE17DC
	0x01EE17D4 MOV W0, W31

ISIL:
	001 Move W0, [X0+112]
	002 Return X0

Method: System.Boolean get_HasValidRoot()

Disassembly:
	0x01EE17D8 B 0x1EE187C
	0x01EE17DC LDR V5, [X31]
	0x01EE17E0 STP S9, S10, [X19]
	0x01EE17E4 STR S11, [X19 + 0x8]
	0x01EE17E8 STR S8, [X19 + 0x14]
	0x01EE17EC STUR D5, [X19 + 0xC]
	0x01EE17F0 CBZ X20, 0x1EE189C
	0x01EE17F4 LDR V1, [X20 + 0x44]
	0x01EE17F8 FADD S0, S8, S8
	0x01EE17FC FADD V2.2S, V5.2S, V5.2S
	0x01EE1800 MOVI V3.2S, 0x3F, 0x18
	0x01EE1804 FMOV S4, 0.5

ISIL:
	001 Move X8, [X0+104]
	002 Compare X8, 0
	003 JumpIfEqual {16}
	004 Move W9, [X8+48]
	005 Move TEMP, X9
	006 And TEMP, TEMP, 8
	007 Compare TEMP, 8
	008 JumpIfEqual {16}
	009 Move X8, [X8+64]
	010 Compare X8, 0
	011 JumpIfEqual {16}
	012 Move W8, [X8+96]
	013 And W31, W8, 2
	014 NotImplemented "Instruction CSET not yet implemented."
	015 Return X0
	016 Move W0, W31
	017 Return X0

Method: System.Void RefitObjectChanged(Fusion.LagCompensation.BVH bvh)

Disassembly:
	0x00000000 INVALID
	0x01EE180C FMUL S0, S0, S1
	0x00000000 INVALID
	0x01EE1814 FMUL S0, S0, S4
	0x01EE1818 FADD V1.2S, V5.2S, V1.2S
	0x01EE181C FADD S0, S8, S0
	0x01EE1820 STUR D1, [X19 + 0xC]
	0x01EE1824 STR S0, [X19 + 0x14]
	0x01EE1828 LDR X0, [X21]
	0x01EE182C LDR W8, [X0 + 0xE0]
	0x01EE1830 CBNZ W8, 0x1EE1838
	0x01EE1834 BL 0x1C16DFC
	0x01EE1838 LDR X8, [X19 + 0x10]
	0x01EE183C LDR V0, [X19]
	0x01EE1840 MOVI V1.2D, 0x0
	0x01EE1844 ADD X0, X31, 0x50
	0x01EE1848 ADD X1, X31, 0x30
	0x01EE184C MOV X2, X31
	0x01EE1850 STP V1, V1, [X31 + 0x60]
	0x01EE1854 STR X8, [X31 + 0x40]
	0x01EE1858 STR V0, [X31 + 0x3]
	0x01EE185C STR V1, [X31 + 0x5]
	0x01EE1860 BL 0x1EED32C
	0x01EE1864 LDP V1, V0, [X31 + 0x60]
	0x01EE1868 LDR V2, [X31 + 0x5]
	0x01EE186C MOVZ W0, 0x1
	0x01EE1870 STUR V0, [X19 + 0x38]
	0x01EE1874 STUR V1, [X19 + 0x28]
	0x01EE1878 STUR V2, [X19 + 0x18]
	0x01EE187C LDP X20, X19, [X31 + 0xC0]
	0x01EE1880 LDP X22, X21, [X31 + 0xB0]
	0x01EE1884 LDR X30, [X31 + 0xA8]
	0x01EE1888 LDP D9, D8, [X31 + 0x98]
	0x01EE188C LDP D11, D10, [X31 + 0x88]
	0x01EE1890 LDR V12, [X31 + 0x80]
	0x01EE1894 ADD X31, X31, 0xD0
	0x01EE1898 RET
	0x01EE189C BL 0x1C16F20
	0x01EE18A0 LDR V0, [X0]
	0x01EE18A4 LDR V1, [X0 + 0x8]
	0x01EE18A8 LDUR V2, [X0 + 0xC]
	0x01EE18AC LDR V3, [X0 + 0x14]
	0x01EE18B0 FADD V4.2S, V0.2S, V2.2S
	0x01EE18B4 FADD S5, S1, S3
	0x01EE18B8 FSUB V0.2S, V0.2S, V2.2S
	0x01EE18BC FSUB S1, S1, S3
	0x01EE18C0 FSUB V0.2S, V4.2S, V0.2S
	0x01EE18C4 FSUB S1, S5, S1
	0x00000000 INVALID
	0x00000000 INVALID
	0x01EE18D0 FADD V1.2S, V2.2S, V0.2S
	0x01EE18D4 UNIMPLEMENTED
	0x01EE18D8 FADD V0.2S, V0.2S, V1.2S
	0x01EE18DC FADD S0, S0, S0
	0x01EE18E0 RET
	0x01EE18E4 LDR V0, [X0]
	0x01EE18E8 LDR V1, [X0 + 0x8]
	0x01EE18EC LDUR V2, [X0 + 0xC]
	0x01EE18F0 LDR V3, [X0 + 0x14]
	0x01EE18F4 FADD V4.2S, V0.2S, V2.2S
	0x01EE18F8 FADD S5, S1, S3
	0x01EE18FC FSUB V0.2S, V0.2S, V2.2S
	0x01EE1900 FSUB S1, S1, S3
	0x01EE1904 FSUB V0.2S, V4.2S, V0.2S
	0x01EE1908 FSUB S1, S5, S1
	0x00000000 INVALID
	0x00000000 INVALID
	0x01EE1914 FADD V1.2S, V2.2S, V0.2S
	0x01EE1918 UNIMPLEMENTED
	0x01EE191C FADD V0.2S, V0.2S, V1.2S

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x24F9000
	007 Move W8, [X21+1400]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2220000
	015 Move X0, [X0+848]
	016 Call 0x1C17CF4
	017 Move X0, 0x2215000
	018 Move X0, [X0+2520]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1400], W8
	022 Move X21, [X20+104]
	023 Compare X21, 0
	024 JumpIfEqual {91}
	025 Move X22, 0x24F9000
	026 Move W8, [X22+555]
	027 Compare W8, 0
	028 JumpIfNotEqual {34}
	029 Move X0, 0x221D000
	030 Move X0, [X0+3416]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+555], W8
	034 Move X8, 0x221D000
	035 Move X8, [X8+3416]
	036 Move X0, X21
	037 Move W1, W31
	038 Move X2, [X8]
	039 Call NetworkBehaviour.ReinterpretState, X0, X1
	040 Move W8, [X0]
	041 NotImplemented "Instruction ORN not yet implemented."
	042 And W9, W9, 1
	043 Move [X20+88], W9
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {85}
	048 Move X21, 0x2220000
	049 Move X21, [X21+848]
	050 Move X0, [X21]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X20
	056 Move X1, X19
	057 Move X2, X31
	058 Call 0x1EEB398
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {85}
	063 Move X0, [X21]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move W1, [X20+76]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Compare X19, 0
	071 JumpIfEqual {91}
	072 Move X0, [X19+40]
	073 Compare X0, 0
	074 JumpIfEqual {91}
	075 Move X8, 0x2215000
	076 Move X8, [X8+2520]
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X22, [X31+16]
	080 Move X21, [X31+24]
	081 Move X2, [X8]
	082 Move X30, [X31+48]
	083 Call HashSet`1<Int32>.Add, X0, X1
	084 Return 
	085 Move X20, [X31+32]
	086 Move X19, [X31+40]
	087 Move X22, [X31+16]
	088 Move X21, [X31+24]
	089 Move X30, [X31+48]
	090 Return 
	091 Call 0x1C17F20

Method: System.Void ExpandVolume(Fusion.LagCompensation.BVH bvh, UnityEngine.Vector3 objectpos, System.Single radius, ref UnityEngine.Bounds bounds, System.Boolean expandParent)

Disassembly:
	0x01EE1920 FADD S0, S0, S0
	0x01EE1924 RET
	0x01EE1928 LDR V0, [X0]
	0x01EE192C LDR V1, [X0 + 0x8]
	0x01EE1930 LDUR V2, [X0 + 0xC]
	0x01EE1934 LDR V3, [X0 + 0x14]
	0x01EE1938 LDR V5, [X1 + 0x8]
	0x01EE193C LDR V7, [X1 + 0x14]
	0x01EE1940 LDR V4, [X1]
	0x01EE1944 LDUR V6, [X1 + 0xC]
	0x01EE1948 FSUB V20.2S, V0.2S, V2.2S
	0x01EE194C FSUB S19, S5, S7
	0x01EE1950 FADD V0.2S, V0.2S, V2.2S
	0x01EE1954 FSUB S2, S1, S3
	0x01EE1958 FSUB V18.2S, V4.2S, V6.2S
	0x01EE195C FADD S1, S1, S3
	0x01EE1960 FCMP S2, S19
	0x01EE1964 FADD V3.2S, V4.2S, V6.2S
	0x01EE1968 FADD S4, S5, S7
	0x00000000 INVALID
	0x00000000 INVALID
	0x01EE1974 FCSEL S2, S2, S19, MI
	0x01EE1978 FCMP S1, S19
	0x00000000 INVALID
	0x00000000 INVALID
	0x01EE1984 FCSEL S1, S1, S19, GT
	0x01EE1988 MOVI V16.2S, 0x3F, 0x18
	0x01EE198C FMOV S17, 0.5
	0x01EE1990 FSUB V0.2S, V0.2S, V5.2S
	0x01EE1994 FSUB S1, S1, S2
	0x00000000 INVALID
	0x01EE199C FMUL S1, S1, S17
	0x01EE19A0 FADD V5.2S, V5.2S, V0.2S
	0x01EE19A4 FADD S2, S2, S1
	0x01EE19A8 FSUB V6.2S, V5.2S, V0.2S
	0x01EE19AC FADD V0.2S, V0.2S, V5.2S
	0x01EE19B0 FSUB S5, S2, S1
	0x00000000 INVALID
	0x01EE19B8 FADD S1, S1, S2
	0x00000000 INVALID
	0x01EE19C0 FCMP S5, S4
	0x00000000 INVALID
	0x00000000 INVALID
	0x01EE19CC FCSEL S2, S5, S4, MI
	0x01EE19D0 FCMP S1, S4
	0x01EE19D4 FSUB V0.2S, V0.2S, V6.2S
	0x01EE19D8 FCSEL S1, S1, S4, GT
	0x00000000 INVALID
	0x01EE19E0 FSUB S1, S1, S2
	0x01EE19E4 FADD V3.2S, V6.2S, V0.2S
	0x01EE19E8 STUR D0, [X8 + 0xC]
	0x01EE19EC FMUL S0, S1, S17
	0x01EE19F0 FADD S1, S2, S0
	0x01EE19F4 STR D3, [X8]
	0x01EE19F8 STR S1, [X8 + 0x8]
	0x01EE19FC STR S0, [X8 + 0x14]
	0x01EE1A00 RET
	0x01EE1A04 STR X30, [X31 - 0x10]!
	0x01EE1A08 CBZ X0, 0x1EE1A48
	0x01EE1A0C LDR V0, [X0 + 0x84]
	0x01EE1A10 FMOV S1, W31
	0x01EE1A14 FMOV S2, 0.5
	0x01EE1A18 FADD S1, S0, S1
	0x01EE1A1C FMUL S1, S1, S2
	0x01EE1A20 FSUB S3, S1, S0
	0x01EE1A24 FSUB S1, S3, S1
	0x01EE1A28 FSUB S0, S0, S1
	0x01EE1A2C FMUL S0, S0, S2
	0x01EE1A30 FADD S1, S1, S0
	0x01EE1A34 STP S1, S1, [X8]
	0x01EE1A38 STP S1, S0, [X8 + 0x8]
	0x01EE1A3C STP S0, S0, [X8 + 0x10]
	0x01EE1A40 LDR X30, [X31], #0x10
	0x01EE1A44 RET
	0x01EE1A48 BL 0x1C16F20
	0x01EE1A4C SUB X31, X31, 0x90
	0x01EE1A50 STP D15, D14, [X31 + 0x20]
	0x01EE1A54 STP D13, D12, [X31 + 0x30]
	0x01EE1A58 STP D11, D10, [X31 + 0x40]
	0x01EE1A5C STP D9, D8, [X31 + 0x50]
	0x01EE1A60 STR X30, [X31 + 0x60]
	0x01EE1A64 STP X22, X21, [X31 + 0x70]
	0x01EE1A68 STP X20, X19, [X31 + 0x80]
	0x01EE1A6C ADRP X20, 0x24F8000
	0x01EE1A70 LDRB W8, [X20 + 0x57D]
	0x01EE1A74 MOV X19, X0
	0x01EE1A78 TBNZ X8, 0x0, 0x1EE1ACC
	0x01EE1A7C ADRP X0, 0x221F000
	0x01EE1A80 LDR X0, [X0 + 0x350]
	0x01EE1A84 BL 0x1C16CF4
	0x01EE1A88 ADRP X0, 0x221F000
	0x01EE1A8C LDR X0, [X0 + 0x438]
	0x01EE1A90 BL 0x1C16CF4
	0x01EE1A94 ADRP X0, 0x221F000
	0x01EE1A98 LDR X0, [X0 + 0x440]
	0x01EE1A9C BL 0x1C16CF4
	0x01EE1AA0 ADRP X0, 0x221F000
	0x01EE1AA4 LDR X0, [X0 + 0x448]
	0x01EE1AA8 BL 0x1C16CF4
	0x01EE1AAC ADRP X0, 0x221F000
	0x01EE1AB0 LDR X0, [X0 + 0x450]
	0x01EE1AB4 BL 0x1C16CF4
	0x01EE1AB8 ADRP X0, 0x221F000
	0x01EE1ABC LDR X0, [X0 + 0x3C0]
	0x01EE1AC0 BL 0x1C16CF4
	0x01EE1AC4 MOVZ W8, 0x1
	0x01EE1AC8 STRB W8, [X20 + 0x57D]
	0x01EE1ACC STP X31, X31, [X31 + 0x8]
	0x01EE1AD0 STR X31, [X31 + 0x18]
	0x01EE1AD4 CBZ X19, 0x1EE1D24
	0x01EE1AD8 ADRP X8, 0x221F000
	0x01EE1ADC LDR X8, [X8 + 0x3C0]
	0x01EE1AE0 ADRP X21, 0x221F000
	0x01EE1AE4 MOV X0, X19
	0x01EE1AE8 MOV W1, W31
	0x01EE1AEC LDR X2, [X8]
	0x01EE1AF0 LDR X21, [X21 + 0x350]
	0x01EE1AF4 BL 0x301BCCC
	0x01EE1AF8 LDR X8, [X21]
	0x01EE1AFC MOV X20, X0
	0x01EE1B00 LDR W9, [X8 + 0xE0]
	0x01EE1B04 CBNZ W9, 0x1EE1B10
	0x01EE1B08 MOV X0, X8
	0x01EE1B0C BL 0x1C16DFC
	0x01EE1B10 CBZ X20, 0x1EE1D24
	0x01EE1B14 ADRP X8, 0x221F000
	0x01EE1B18 ADRP X22, 0x221F000
	0x01EE1B1C LDR X8, [X8 + 0x450]
	0x01EE1B20 LDR X22, [X22 + 0x440]
	0x01EE1B24 LDR V0, [X20 + 0x84]
	0x01EE1B28 FMOV S14, W31
	0x01EE1B2C FMOV S15, 0.5
	0x01EE1B30 ADRP X20, 0x221F000
	0x01EE1B34 FADD S1, S0, S14
	0x01EE1B38 FMUL S1, S1, S15
	0x01EE1B3C LDR X20, [X20 + 0x438]
	0x01EE1B40 FSUB S2, S1, S0
	0x01EE1B44 LDR X1, [X8]
	0x01EE1B48 FSUB S1, S2, S1
	0x01EE1B4C FSUB S0, S0, S1
	0x01EE1B50 FMUL S8, S0, S15
	0x01EE1B54 ADD X8, X31, 0x8
	0x01EE1B58 MOV X0, X19
	0x01EE1B5C FADD S9, S1, S8
	0x01EE1B60 BL 0x301CB58
	0x01EE1B64 MOV V10.16B, V8.16B
	0x01EE1B68 MOV V11.16B, V8.16B
	0x01EE1B6C MOV V12.16B, V9.16B
	0x01EE1B70 MOV V13.16B, V9.16B
	0x01EE1B74 LDR X1, [X22]
	0x01EE1B78 ADD X0, X31, 0x8
	0x01EE1B7C BL 0x2BC4350
	0x01EE1B80 TBZ X0, 0x0, 0x1EE1CA0
	0x01EE1B84 LDR X0, [X21]
	0x01EE1B88 LDR X19, [X31 + 0x18]
	0x01EE1B8C LDR W8, [X0 + 0xE0]
	0x01EE1B90 CBNZ W8, 0x1EE1B98
	0x01EE1B94 BL 0x1C16DFC
	0x01EE1B98 CBZ X19, 0x1EE1D1C
	0x01EE1B9C LDR V0, [X19 + 0x84]
	0x01EE1BA0 FSUB S1, S13, S11
	0x01EE1BA4 FSUB S2, S12, S10
	0x01EE1BA8 FSUB S3, S9, S8
	0x01EE1BAC FADD S7, S0, S14
	0x01EE1BB0 FMUL S7, S7, S15
	0x01EE1BB4 FSUB S16, S7, S0
	0x01EE1BB8 FSUB S7, S16, S7
	0x01EE1BBC FSUB S0, S0, S7
	0x01EE1BC0 FMUL S0, S0, S15
	0x01EE1BC4 FADD S7, S7, S0
	0x01EE1BC8 FSUB S16, S7, S0
	0x01EE1BCC FCMP S1, S16
	0x01EE1BD0 FCSEL S1, S1, S16, MI
	0x01EE1BD4 FCMP S2, S16
	0x01EE1BD8 FADD S4, S11, S13
	0x01EE1BDC FCSEL S2, S2, S16, MI
	0x01EE1BE0 FCMP S3, S16
	0x01EE1BE4 FADD S5, S10, S12
	0x01EE1BE8 FCSEL S3, S3, S16, MI
	0x01EE1BEC FCMP S4, S16
	0x01EE1BF0 FADD S6, S8, S9
	0x01EE1BF4 FCSEL S4, S4, S16, GT
	0x01EE1BF8 FCMP S5, S16
	0x01EE1BFC FCSEL S5, S5, S16, GT
	0x01EE1C00 FCMP S6, S16
	0x01EE1C04 FSUB S4, S4, S1
	0x01EE1C08 FCSEL S6, S6, S16, GT
	0x01EE1C0C FSUB S5, S5, S2
	0x01EE1C10 FMUL S4, S4, S15
	0x01EE1C14 FSUB S6, S6, S3
	0x01EE1C18 FMUL S5, S5, S15
	0x01EE1C1C FADD S1, S1, S4
	0x01EE1C20 FADD S0, S0, S7
	0x01EE1C24 FMUL S6, S6, S15
	0x01EE1C28 FADD S2, S2, S5
	0x01EE1C2C FSUB S7, S1, S4
	0x01EE1C30 FADD S1, S4, S1
	0x01EE1C34 FADD S3, S3, S6
	0x01EE1C38 FSUB S4, S2, S5
	0x01EE1C3C FCMP S7, S0
	0x01EE1C40 FADD S2, S5, S2
	0x01EE1C44 FSUB S5, S3, S6
	0x01EE1C48 FCSEL S7, S7, S0, MI
	0x01EE1C4C FCMP S4, S0
	0x01EE1C50 FCSEL S4, S4, S0, MI
	0x01EE1C54 FCMP S5, S0
	0x01EE1C58 FCSEL S5, S5, S0, MI

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], D9
	003 Move [X31+40], D8
	004 Move [X31+48], X30
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X23, 0x24F9000
	011 Move W8, [X23+1401]
	012 Move W21, W3
	013 Move X22, X2
	014 Move V8, V2
	015 Move V9, V0
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {31}
	022 Move X0, 0x2220000
	023 Move X0, [X0+848]
	024 Move [X31], V1
	025 Move [X31+8], V3
	026 Call 0x1C17CF4
	027 Move V1, [X31]
	028 Move V3, [X31+16]
	029 Move W8, 1
	030 Move [X23+1401], W8
	031 Move V2, [X22]
	032 Move V18, [X22+12]
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 Move V0, [X22+16]
	035 Subtract S4, S9, S3
	036 Subtract S5, S2, S18
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 Subtract V5, V17, V0
	039 Add S7, S2, S18
	040 Add V0, V17, V0
	041 Move S2, 0.5
	042 NotImplemented "Instruction MOVI not yet implemented."
	043 Subtract S7, S7, S4
	044 Subtract V0, V0, V5
	045 Multiply S18, S7, S2
	046 NotImplemented "Instruction INVALID not yet implemented."
	047 Add S2, S4, S18
	048 Add V17, V5, V0
	049 Move W8, 1
	050 Move [X22+12], S18
	051 Move [X22+16], D0
	052 Move [X22], S2
	053 Move [X22+4], D17
	054 Move W8, W31
	055 Add S5, S2, S18
	056 Add S4, S9, S3
	057 NotImplemented "Instruction FCMP not yet implemented."
	058 Add V5, V17, V0
	059 Subtract S2, S2, S18
	060 Subtract V7, V17, V0
	061 Move S0, 0.5
	062 NotImplemented "Instruction MOVI not yet implemented."
	063 Subtract S16, S4, S2
	064 Subtract V4, V5, V7
	065 Multiply S18, S16, S0
	066 NotImplemented "Instruction INVALID not yet implemented."
	067 Add S2, S2, S18
	068 Add V17, V7, V0
	069 Move W8, 1
	070 Move [X22+12], S18
	071 Move [X22+16], D0
	072 Move [X22], S2
	073 Move [X22+4], D17
	074 Move V4, V17
	075 Move V6, V0
	076 Move V4.S[0], V1.S[0]
	077 Move V6.S[0], V3.S[0]
	078 Subtract V5, V17, V0
	079 Subtract V4, V4, V6
	080 NotImplemented "Instruction INVALID not yet implemented."
	081 Move W9, S5
	082 Move TEMP, X9
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {104}
	086 Add V0, V17, V0
	087 Subtract S5, S2, S18
	088 Add S7, S2, S18
	089 NotImplemented "Instruction MOVI not yet implemented."
	090 Subtract V0, V0, V4
	091 Move S2, 0.5
	092 Subtract S7, S7, S5
	093 NotImplemented "Instruction INVALID not yet implemented."
	094 Multiply S18, S7, S2
	095 Add V17, V4, V0
	096 Add S2, S5, S18
	097 Move S4, V0.S[1]
	098 Move S5, V17.S[1]
	099 Move W8, 1
	100 Move [X22+12], S18
	101 Move [X22+16], D0
	102 Move [X22], S2
	103 Move [X22+4], D17
	104 Move S5, V17.S[1]
	105 Move S4, V0.S[1]
	106 Add S7, S17, S0
	107 Add S6, S1, S3
	108 NotImplemented "Instruction FCMP not yet implemented."
	109 Add S7, S5, S4
	110 Add S16, S2, S18
	111 Subtract S2, S2, S18
	112 Subtract S17, S17, S0
	113 Subtract S5, S5, S4
	114 Move S4, 0.5
	115 Subtract S0, S16, S2
	116 Subtract S6, S6, S17
	117 Subtract S7, S7, S5
	118 Multiply S18, S0, S4
	119 Multiply S0, S6, S4
	120 Multiply S4, S7, S4
	121 Add S2, S2, S18
	122 Add S17, S17, S0
	123 Add S5, S5, S4
	124 Move W8, 1
	125 Move [X22+16], S0
	126 Move [X22+24], S4
	127 Move [X22], S2
	128 Move [X22+8], S17
	129 Move [X22+8], S5
	130 Move [X22+16], S18
	131 Subtract S7, S5, S4
	132 Subtract S6, S8, S3
	133 NotImplemented "Instruction FCMP not yet implemented."
	134 Subtract S7, S2, S18
	135 Subtract S16, S17, S0
	136 Add S1, S2, S18
	137 Add S0, S17, S0
	138 Add S2, S5, S4
	139 Move S4, 0.5
	140 Subtract S1, S1, S7
	141 Subtract S0, S0, S16
	142 Subtract S2, S2, S6
	143 Multiply S18, S1, S4
	144 Multiply S0, S0, S4
	145 Multiply S4, S2, S4
	146 Add S2, S7, S18
	147 Add S17, S16, S0
	148 Add S5, S6, S4
	149 Move W8, 1
	150 Move [X22+16], S0
	151 Move [X22+24], S4
	152 Move [X22], S2
	153 Move [X22+8], S17
	154 Move [X22+8], S5
	155 Move [X22+16], S18
	156 Add S7, S5, S4
	157 Add S6, S8, S3
	158 NotImplemented "Instruction FCMP not yet implemented."
	159 Add S7, S17, S0
	160 Add S16, S2, S18
	161 Subtract S1, S2, S18
	162 Subtract S0, S17, S0
	163 Subtract S2, S5, S4
	164 Move S3, 0.5
	165 Subtract S4, S16, S1
	166 Subtract S5, S7, S0
	167 Subtract S6, S6, S2
	168 Multiply S4, S4, S3
	169 Multiply S5, S5, S3
	170 Multiply S3, S6, S3
	171 Add S1, S1, S4
	172 Add S0, S0, S5
	173 Add S2, S2, S3
	174 Move W8, 1
	175 Move [X22+16], S5
	176 Move [X22+24], S3
	177 Move [X22], S1
	178 Move [X22+8], S0
	179 Move [X22+8], S2
	180 Move [X22+16], S4
	181 And W31, W21, W8
	182 Move X21, 0x2220000
	183 Move X21, [X21+848]
	184 Move X0, [X21]
	185 Move W8, [X0+224]
	186 Compare W8, 0
	187 JumpIfNotEqual {189}
	188 Call 0x1C17DFC
	189 Move W8, [X20+76]
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move X0, [X21]
	192 Move W8, [X0+224]
	193 Compare W8, 0
	194 JumpIfNotEqual {196}
	195 Call 0x1C17DFC
	196 Compare X19, 0
	197 JumpIfEqual {228}
	198 Move X8, [X19+16]
	199 Compare X8, 0
	200 JumpIfEqual {228}
	201 NotImplemented "Instruction LDRSW not yet implemented."
	202 Move W10, [X8+24]
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move X1, X19
	205 Move X2, X20
	206 Move X20, [X31+80]
	207 Move X19, [X31+88]
	208 Move X22, [X31+64]
	209 Move X21, [X31+72]
	210 Move X30, [X31+48]
	211 Move X23, [X31+56]
	212 Move D9, [X31+32]
	213 Move D8, [X31+40]
	214 Move W10, 120
	215 NotImplemented "Instruction MADD not yet implemented."
	216 Add X0, X8, 32
	217 Add X31, X31, 96
	218 Move X20, [X31+80]
	219 Move X19, [X31+88]
	220 Move X22, [X31+64]
	221 Move X21, [X31+72]
	222 Move X30, [X31+48]
	223 Move X23, [X31+56]
	224 Move D9, [X31+32]
	225 Move D8, [X31+40]
	226 Add X31, X31, 96
	227 Return 
	228 Call 0x1C17F20
	229 Call 0x1C17F28

Method: System.Void AssignVolume(UnityEngine.Vector3 pos, System.Single radius, ref UnityEngine.Bounds bounds)

Disassembly:
	0x01EE1FEC MOV X0, X25
	0x01EE1FF0 BL 0x1EE1A4C
	0x01EE1FF4 CBZ X25, 0x1EE2100
	0x01EE1FF8 LDR W24, [X25 + 0x18]
	0x01EE1FFC MOV X0, X21
	0x01EE2000 MOV V8.16B, V0.16B
	0x01EE2004 BL 0x1EE1A4C
	0x01EE2008 CBZ X21, 0x1EE2100
	0x01EE200C LDR V1, [X21 + 0x18]
	0x01EE2010 SCVTF S2, W24
	0x01EE2014 FMUL S2, S8, S2
	0x01EE2018 SCVTF S1, S1
	0x01EE201C FMUL S0, S0, S1
	0x01EE2020 FADD S0, S2, S0
	0x01EE2024 FCMP S0, S9
	0x01EE2028 B.MI 0x1EE2048
	0x01EE202C B.NE 0x1EE2050
	0x01EE2030 MOV X0, X31
	0x01EE2034 BL 0x3C30A30
	0x01EE2038 ADRP X8, 0xFFFFFFFFFEC07000
	0x01EE203C LDR V1, [X8 + 0xFF4]
	0x01EE2040 FCMP S0, S1
	0x01EE2044 B.LE 0x1EE2050
	0x01EE2048 MOV X22, X21
	0x01EE204C MOV X23, X25
	0x01EE2050 CBZ X20, 0x1EE2100
	0x01EE2054 ADD X1, X19, 0x50
	0x01EE2058 MOV X0, X20
	0x01EE205C BL 0x1EDE8DC
	0x01EE2060 MOV X21, X0
	0x01EE2064 ADD X1, X19, 0x54
	0x01EE2068 MOV X0, X20
	0x01EE206C BL 0x1EDE8DC

ISIL:
	001 Move V6, [X1]
	002 Move V7, [X1+8]
	003 NotImplemented "Instruction LDUR not yet implemented."
	004 Move V17, [X1+20]
	005 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	006 Move V0.S[1], V1.S[0]
	007 Subtract S5, S2, S3
	008 Subtract V1, V0, V4
	009 Add V6, V6, V16
	010 Add S7, S7, S17
	011 Add S2, S2, S3
	012 NotImplemented "Instruction MOVI not yet implemented."
	013 Add V0, V0, V4
	014 Move S4, 0.5
	015 Subtract V6, V6, V1
	016 Subtract S7, S7, S5
	017 NotImplemented "Instruction INVALID not yet implemented."
	018 Multiply S7, S7, S4
	019 Add V1, V1, V6
	020 Add S5, S5, S7
	021 Subtract V1, V1, V6
	022 Subtract S5, S5, S7
	023 Subtract V0, V0, V1
	024 Subtract S2, S2, S5
	025 NotImplemented "Instruction INVALID not yet implemented."
	026 Multiply S2, S2, S4
	027 Move [X1+12], D0
	028 Add V0, V1, V0
	029 Add S1, S5, S2
	030 Move [X1+20], S2
	031 Move [X1], D0
	032 Move [X1+8], S1
	033 Return 

Method: System.Void ComputeVolume(Fusion.LagCompensation.BVH bvh)

Disassembly:
	0x01EE2070 LDR X8, [X27]
	0x01EE2074 LDR W26, [X19 + 0x50]
	0x01EE2078 LDR W25, [X19 + 0x48]
	0x01EE207C LDR W27, [X19 + 0x5C]
	0x01EE2080 LDR W9, [X8 + 0xE0]
	0x01EE2084 MOV X24, X0
	0x01EE2088 CBNZ W9, 0x1EE2094
	0x01EE208C MOV X0, X8
	0x01EE2090 BL 0x1C16DFC
	0x01EE2094 ADD W4, W27, 0x1
	0x01EE2098 MOV X0, X21
	0x01EE209C MOV X1, X20
	0x01EE20A0 MOV W2, W26
	0x01EE20A4 MOV W3, W25
	0x01EE20A8 MOV X5, X23
	0x01EE20AC BL 0x1EDFD74
	0x01EE20B0 LDR W8, [X19 + 0x5C]
	0x01EE20B4 LDR W2, [X19 + 0x54]
	0x01EE20B8 LDR W3, [X19 + 0x48]
	0x01EE20BC MOV X0, X24
	0x01EE20C0 ADD W4, W8, 0x1
	0x01EE20C4 MOV X1, X20
	0x01EE20C8 MOV X5, X22
	0x01EE20CC BL 0x1EDFD74
	0x01EE20D0 MOVZ W8, 0x1
	0x01EE20D4 STRB W31, [X19 + 0x70]
	0x01EE20D8 STRB W8, [X19 + 0x58]
	0x01EE20DC LDP X20, X19, [X31 + 0x70]
	0x01EE20E0 LDP X22, X21, [X31 + 0x60]
	0x01EE20E4 LDP X24, X23, [X31 + 0x50]
	0x01EE20E8 LDP X26, X25, [X31 + 0x40]
	0x01EE20EC LDP X28, X27, [X31 + 0x30]
	0x01EE20F0 LDP X29, X30, [X31 + 0x20]
	0x01EE20F4 LDP D9, D8, [X31 + 0x10]
	0x01EE20F8 LDP D11, D10, [X31], #0x80
	0x01EE20FC RET
	0x01EE2100 BL 0x1C16F20
	0x01EE2104 SUB X31, X31, 0x70
	0x01EE2108 STP X29, X30, [X31 + 0x10]
	0x01EE210C STP X28, X27, [X31 + 0x20]
	0x01EE2110 STP X26, X25, [X31 + 0x30]
	0x01EE2114 STP X24, X23, [X31 + 0x40]
	0x01EE2118 STP X22, X21, [X31 + 0x50]
	0x01EE211C STP X20, X19, [X31 + 0x60]
	0x01EE2120 ADRP X22, 0x24F7000
	0x01EE2124 ADRP X24, 0x221E000
	0x01EE2128 LDRB W8, [X22 + 0x57F]
	0x01EE212C LDR X24, [X24 + 0x350]
	0x01EE2130 MOV X21, X2
	0x01EE2134 MOV X20, X1
	0x01EE2138 MOV X19, X0
	0x01EE213C TBNZ X8, 0x0, 0x1EE216C
	0x01EE2140 ADRP X0, 0x221E000
	0x01EE2144 LDR X0, [X0 + 0x350]
	0x01EE2148 BL 0x1C16CF4
	0x01EE214C ADRP X0, 0x221B000
	0x01EE2150 LDR X0, [X0 + 0xDD8]
	0x01EE2154 BL 0x1C16CF4
	0x01EE2158 ADRP X0, 0x221E000
	0x01EE215C LDR X0, [X0 + 0x370]
	0x01EE2160 BL 0x1C16CF4
	0x01EE2164 MOVZ W8, 0x1
	0x01EE2168 STRB W8, [X22 + 0x57F]
	0x01EE216C LDR X0, [X24]
	0x01EE2170 STR X31, [X31 + 0x8]
	0x01EE2174 LDR W8, [X0 + 0xE0]
	0x01EE2178 CBNZ W8, 0x1EE2180
	0x01EE217C BL 0x1C16DFC
	0x01EE2180 CBZ X19, 0x1EE2314
	0x01EE2184 LDR X25, [X19 + 0x10]
	0x01EE2188 CBZ X25, 0x1EE2314
	0x01EE218C LDRSW X26, [X20 + 0x4C]
	0x01EE2190 LDR W8, [X25 + 0x18]
	0x01EE2194 CMP W26, W8
	0x01EE2198 B.CS 0x1EE2318
	0x01EE219C MOVZ W8, 0x78
	0x01EE21A0 MADD X27, X26, X8, X25
	0x01EE21A4 LDR W28, [X27 + 0x74]!
	0x01EE21A8 LDR X0, [X19 + 0x30]
	0x01EE21AC CBZ X0, 0x1EE2314
	0x01EE21B0 LDP W2, W8, [X0 + 0x18]
	0x01EE21B4 LDR W29, [X20 + 0x48]
	0x01EE21B8 ADD W8, W8, 0x1
	0x01EE21BC CMP W2, 0x1
	0x01EE21C0 STP W31, W8, [X0 + 0x18]
	0x01EE21C4 B.LT 0x1EE21E0
	0x01EE21C8 LDR X0, [X0 + 0x10]
	0x01EE21CC MOV W1, W31

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], D8
	003 Move [X31+64], X30
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X21, 0x24F8000
	008 Move W8, [X21+1402]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x221F000
	016 Move X0, [X0+848]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1402], W8
	020 Move X21, 0x221F000
	021 Move X8, [X19+104]
	022 Move X21, [X21+848]
	023 Compare X8, 0
	024 JumpIfEqual {93}
	025 Move W9, [X8+48]
	026 Move TEMP, X9
	027 And TEMP, TEMP, 8
	028 Compare TEMP, 8
	029 JumpIfEqual {93}
	030 Move X0, [X8+184]
	031 Compare X0, 0
	032 JumpIfEqual {107}
	033 Move S1, [X8+140]
	034 Move S2, [X8+144]
	035 Move V0, [X8+136]
	036 Move X1, X31
	037 Call Transform.TransformPoint, X0, X1
	038 Move X8, [X19+104]
	039 Compare X8, 0
	040 JumpIfEqual {107}
	041 Move X0, [X21]
	042 Move V7, [X8+132]
	043 Move V8, V2
	044 Move W9, [X0+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {54}
	047 Move [X31+16], V7
	048 Move [X31+24], V0
	049 Move [X31], V1
	050 Call 0x1C17DFC
	051 Move V1, [X31]
	052 Move V7, [X31+16]
	053 Move V0, [X31+2]
	054 Move V2, [X19]
	055 Move V3, [X19+8]
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 Move V5, [X19+20]
	058 Move V0.S[1], V1.S[0]
	059 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	060 Subtract S1, S8, S7
	061 Subtract V16, V0, V17
	062 Add V2, V2, V4
	063 Add S3, S3, S5
	064 NotImplemented "Instruction MOVI not yet implemented."
	065 Add V0, V0, V17
	066 Move S17, 0.5
	067 Subtract V2, V2, V16
	068 Subtract S3, S3, S1
	069 NotImplemented "Instruction INVALID not yet implemented."
	070 Multiply S3, S3, S17
	071 Add V4, V16, V2
	072 Add S1, S1, S3
	073 Add S7, S8, S7
	074 Subtract V2, V4, V2
	075 Subtract S1, S1, S3
	076 Subtract V0, V0, V2
	077 Subtract S3, S7, S1
	078 NotImplemented "Instruction INVALID not yet implemented."
	079 Multiply S3, S3, S17
	080 Move [X19+12], D0
	081 Add V0, V2, V0
	082 Add S1, S1, S3
	083 Move [X19+20], S3
	084 Move [X19], D0
	085 Move [X19+8], S1
	086 Move X20, [X31+80]
	087 Move X19, [X31+88]
	088 Move X30, [X31+64]
	089 Move X21, [X31+72]
	090 Move V8, [X31+48]
	091 Add X31, X31, 96
	092 Return 
	093 Move X0, [X21]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move W1, [X19+72]
	099 Move X0, X20
	100 Move X20, [X31+80]
	101 Move X19, [X31+88]
	102 Move X30, [X31+64]
	103 Move X21, [X31+72]
	104 Move V8, [X31+48]
	105 Move W2, W31
	106 Add X31, X31, 96
	107 Call 0x1C17F20

Method: UnityEngine.Bounds ComputeMinVolume(Fusion.LagCompensation.BVH bvh)

Disassembly:
	0x01EE25B0 LDR W8, [X20 + 0x54]
	0x01EE25B4 CMP W8, 0x1
	0x01EE25B8 B.LT 0x1EE2608
	0x01EE25BC LDR X0, [X23]
	0x01EE25C0 LDR W9, [X0 + 0xE0]
	0x01EE25C4 CBNZ W9, 0x1EE25D0
	0x01EE25C8 BL 0x1C16DFC
	0x01EE25CC LDR W8, [X20 + 0x54]
	0x01EE25D0 LDR X9, [X19 + 0x10]
	0x01EE25D4 CBZ X9, 0x1EE27D8
	0x01EE25D8 LDR W10, [X9 + 0x18]
	0x01EE25DC CMP W8, W10
	0x01EE25E0 B.CS 0x1EE27DC
	0x01EE25E4 LDR W10, [X20 + 0x48]
	0x01EE25E8 MOVZ W11, 0x78
	0x01EE25EC SMADDL X8, X8, X11, X9
	0x01EE25F0 ADD X0, X8, 0x20
	0x01EE25F4 STR W10, [X8 + 0x6C]
	0x01EE25F8 LDR W9, [X20 + 0x5C]
	0x01EE25FC MOV X1, X19
	0x01EE2600 ADD W2, W9, 0x1
	0x01EE2604 BL 0x1EE2828
	0x01EE2608 LDRB W8, [X20 + 0x70]
	0x01EE260C CBZ W8, 0x1EE26A8
	0x01EE2610 LDR X24, [X19 + 0x18]
	0x01EE2614 CBZ X24, 0x1EE27D8
	0x01EE2618 ADRP X25, 0x24F7000
	0x01EE261C LDRB W8, [X25 + 0x5A8]
	0x01EE2620 LDR X22, [X20 + 0x68]
	0x01EE2624 CBNZ W8, 0x1EE263C
	0x01EE2628 ADRP X0, 0x221E000
	0x01EE262C LDR X0, [X0 + 0x390]
	0x01EE2630 BL 0x1C16CF4
	0x01EE2634 MOVZ W8, 0x1
	0x01EE2638 STRB W8, [X25 + 0x5A8]
	0x01EE263C LDR X0, [X24 + 0x10]
	0x01EE2640 CBZ X0, 0x1EE27D8
	0x01EE2644 ADRP X8, 0x221E000
	0x01EE2648 LDR X8, [X8 + 0x390]
	0x01EE264C MOV X1, X22
	0x01EE2650 LDR X2, [X8]
	0x01EE2654 BL 0x2AA03C4
	0x01EE2658 LDR X24, [X19 + 0x18]
	0x01EE265C CBZ X24, 0x1EE27D8
	0x01EE2660 ADRP X25, 0x24F7000
	0x01EE2664 LDR X22, [X20 + 0x68]
	0x01EE2668 LDRB W8, [X25 + 0x5A9]
	0x01EE266C LDR W20, [X20 + 0x48]
	0x01EE2670 CBNZ W8, 0x1EE2688
	0x01EE2674 ADRP X0, 0x221E000
	0x01EE2678 LDR X0, [X0 + 0x3C8]
	0x01EE267C BL 0x1C16CF4
	0x01EE2680 MOVZ W8, 0x1
	0x01EE2684 STRB W8, [X25 + 0x5A9]
	0x01EE2688 LDR X0, [X24 + 0x10]
	0x01EE268C CBZ X0, 0x1EE27D8
	0x01EE2690 ADRP X8, 0x221E000
	0x01EE2694 LDR X8, [X8 + 0x3C8]
	0x01EE2698 MOV X1, X22
	0x01EE269C MOV W2, W20
	0x01EE26A0 LDR X3, [X8]
	0x01EE26A4 BL 0x2A9EF88
	0x01EE26A8 LDR X0, [X23]
	0x01EE26AC LDR W8, [X0 + 0xE0]
	0x01EE26B0 CBNZ W8, 0x1EE26B8
	0x01EE26B4 BL 0x1C16DFC
	0x01EE26B8 ADD X22, X21, 0x48
	0x01EE26BC B 0x1EE27B4
	0x01EE26C0 LDR X0, [X23]
	0x01EE26C4 LDR W8, [X0 + 0xE0]
	0x01EE26C8 CBNZ W8, 0x1EE26D0
	0x01EE26CC BL 0x1C16DFC
	0x01EE26D0 LDR X24, [X19 + 0x10]
	0x01EE26D4 CBZ X24, 0x1EE27D8
	0x01EE26D8 LDRSW X25, [X20 + 0x4C]
	0x01EE26DC LDR W8, [X24 + 0x18]
	0x01EE26E0 CMP W25, W8
	0x01EE26E4 B.CS 0x1EE27DC
	0x01EE26E8 MOVZ W8, 0x78
	0x01EE26EC MADD X26, X25, X8, X24
	0x01EE26F0 LDR W27, [X22]
	0x01EE26F4 LDR W28, [X26 + 0x70]!
	0x01EE26F8 LDR X0, [X23]
	0x01EE26FC LDR W8, [X0 + 0xE0]
	0x01EE2700 CBNZ W8, 0x1EE2708
	0x01EE2704 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], D8
	003 Move [X31+56], X30
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X22, 0x24F8000
	009 Move W9, [X22+1403]
	010 Move X21, X1
	011 Move X20, X0
	012 Move X19, X8
	013 Move TEMP, X9
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x221F000
	018 Move X0, [X0+848]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+1403], W8
	022 Move X22, 0x221F000
	023 Move X8, [X20+104]
	024 Move X22, [X22+848]
	025 Compare X8, 0
	026 JumpIfEqual {84}
	027 Move W9, [X8+48]
	028 Move TEMP, X9
	029 And TEMP, TEMP, 8
	030 Compare TEMP, 8
	031 JumpIfEqual {84}
	032 Move X0, [X8+184]
	033 Compare X0, 0
	034 JumpIfEqual {104}
	035 Move S1, [X8+140]
	036 Move S2, [X8+144]
	037 Move V0, [X8+136]
	038 Move X1, X31
	039 Call Transform.TransformPoint, X0, X1
	040 Move X8, [X20+104]
	041 Compare X8, 0
	042 JumpIfEqual {104}
	043 Move X0, [X22]
	044 Move V6, [X8+132]
	045 Move V8, V2
	046 Move W9, [X0+224]
	047 Compare W9, 0
	048 JumpIfNotEqual {56}
	049 Move [X31+16], V6
	050 Move [X31+24], V0
	051 Move [X31], V1
	052 Call 0x1C17DFC
	053 Move V1, [X31]
	054 Move V6, [X31+16]
	055 Move V0, [X31+2]
	056 Move V0.S[1], V1.S[0]
	057 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	058 Subtract S1, S8, S6
	059 NotImplemented "Instruction MOVI not yet implemented."
	060 Move S3, W31
	061 Subtract V7, V0, V16
	062 NotImplemented "Instruction MOVI not yet implemented."
	063 Move S5, 0.5
	064 Subtract S3, S3, S1
	065 Subtract V2, V2, V7
	066 Multiply S3, S3, S5
	067 NotImplemented "Instruction INVALID not yet implemented."
	068 Add S1, S1, S3
	069 Add V7, V7, V2
	070 Add S6, S8, S6
	071 Add V0, V0, V16
	072 Subtract S1, S1, S3
	073 Subtract V2, V7, V2
	074 Subtract S3, S6, S1
	075 Subtract V0, V0, V2
	076 Multiply S3, S3, S5
	077 NotImplemented "Instruction INVALID not yet implemented."
	078 Add S1, S1, S3
	079 Add V2, V2, V0
	080 Move [X19+8], S1
	081 Move [X19+12], D0
	082 Move [X19], D2
	083 Move [X19+20], S3
	084 Move X0, [X22]
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move W1, [X20+72]
	090 Move X0, X21
	091 Move W2, W31
	092 Call BVHNode.ChildRefit, X0, X1, X2
	093 Move [X19], X31
	094 Move [X19+8], X31
	095 Move [X19+16], X31
	096 Move X20, [X31+80]
	097 Move X19, [X31+88]
	098 Move X22, [X31+64]
	099 Move X21, [X31+72]
	100 Move X30, [X31+56]
	101 Move V8, [X31+48]
	102 Add X31, X31, 96
	103 Return X0
	104 Call 0x1C17F20

Method: System.Boolean RefitVolume(Fusion.LagCompensation.BVH bvh)

Disassembly:
	0x01EE2708 LDR W8, [X21 + 0x48]
	0x01EE270C CMP W27, W28
	0x01EE2710 B.NE 0x1EE271C
	0x01EE2714 STR W8, [X26]
	0x01EE2718 B 0x1EE2728
	0x01EE271C MOVZ W9, 0x78
	0x01EE2720 MADD X9, X25, X9, X24
	0x01EE2724 STR W8, [X9 + 0x74]
	0x01EE2728 LDR W8, [X20 + 0x4C]
	0x01EE272C LDR W20, [X21 + 0x5C]
	0x01EE2730 STR W8, [X21 + 0x4C]
	0x01EE2734 LDR X0, [X23]
	0x01EE2738 LDR W8, [X0 + 0xE0]
	0x01EE273C CBNZ W8, 0x1EE2744
	0x01EE2740 BL 0x1C16DFC
	0x01EE2744 SUB W2, W20, 0x1
	0x01EE2748 MOV X0, X21
	0x01EE274C MOV X1, X19
	0x01EE2750 BL 0x1EE2828
	0x01EE2754 LDR X20, [X19 + 0x10]
	0x01EE2758 CBZ X20, 0x1EE27D8
	0x01EE275C LDRSW X21, [X21 + 0x4C]
	0x01EE2760 LDR W8, [X20 + 0x18]
	0x01EE2764 CMP W21, W8
	0x01EE2768 B.CS 0x1EE27DC
	0x01EE276C ADRP X24, 0x24F7000
	0x01EE2770 LDRB W8, [X24 + 0x5A6]
	0x01EE2774 CBNZ W8, 0x1EE278C
	0x01EE2778 ADRP X0, 0x221E000
	0x01EE277C LDR X0, [X0 + 0x350]
	0x01EE2780 BL 0x1C16CF4
	0x01EE2784 MOVZ W8, 0x1
	0x01EE2788 STRB W8, [X24 + 0x5A6]
	0x01EE278C LDR X0, [X23]
	0x01EE2790 LDR W8, [X0 + 0xE0]
	0x01EE2794 CBNZ W8, 0x1EE279C
	0x01EE2798 BL 0x1C16DFC
	0x01EE279C MOVZ W8, 0x78
	0x01EE27A0 MADD X8, X21, X8, X20
	0x01EE27A4 LDR W1, [X8 + 0x68]
	0x01EE27A8 MOVZ W2, 0x1
	0x01EE27AC MOV X0, X19
	0x01EE27B0 BL 0x1EE11D0
	0x01EE27B4 LDR W1, [X22]
	0x01EE27B8 MOV X0, X19
	0x01EE27BC LDP X20, X19, [X31 + 0x50]
	0x01EE27C0 LDP X22, X21, [X31 + 0x40]
	0x01EE27C4 LDP X24, X23, [X31 + 0x30]
	0x01EE27C8 LDP X26, X25, [X31 + 0x20]
	0x01EE27CC LDP X28, X27, [X31 + 0x10]
	0x01EE27D0 LDR X30, [X31], #0x60
	0x01EE27D4 B 0x1EDE988
	0x01EE27D8 BL 0x1C16F20
	0x01EE27DC BL 0x1C16F28
	0x01EE27E0 ADRP X0, 0x2211000
	0x01EE27E4 LDR X0, [X0 + 0x7D0]
	0x01EE27E8 BL 0x1C16D08
	0x01EE27EC BL 0x1C16F10
	0x01EE27F0 MOV X19, X0
	0x01EE27F4 ADRP X0, 0x221E000
	0x01EE27F8 LDR X0, [X0 + 0x468]
	0x01EE27FC BL 0x1C16D08
	0x01EE2800 MOV X1, X0
	0x01EE2804 MOV X0, X19
	0x01EE2808 MOV X2, X31
	0x01EE280C BL 0x33B2C70
	0x01EE2810 ADRP X0, 0x221E000
	0x01EE2814 LDR X0, [X0 + 0x470]
	0x01EE2818 BL 0x1C16D08
	0x01EE281C MOV X1, X0
	0x01EE2820 MOV X0, X19
	0x01EE2824 BL 0x1C16DEC
	0x01EE2828 STP X30, X25, [X31 - 0x40]!
	0x01EE282C STP X24, X23, [X31 + 0x10]
	0x01EE2830 STP X22, X21, [X31 + 0x20]
	0x01EE2834 STP X20, X19, [X31 + 0x30]
	0x01EE2838 ADRP X21, 0x221E000
	0x01EE283C LDR X21, [X21 + 0x350]
	0x01EE2840 MOV W19, W2
	0x01EE2844 MOV X20, X1
	0x01EE2848 MOV X22, X0
	0x01EE284C ADRP X23, 0x24F7000
	0x01EE2850 MOVZ W24, 0x78
	0x01EE2854 MOVZ W25, 0x1
	0x01EE2858 LDRB W8, [X23 + 0x583]
	0x01EE285C TBNZ X8, 0x0, 0x1EE286C
	0x01EE2860 MOV X0, X21
	0x01EE2864 BL 0x1C16CF4
	0x01EE2868 STRB W25, [X23 + 0x583]
	0x01EE286C STR W19, [X22 + 0x5C]
	0x01EE2870 CBZ X20, 0x1EE2944
	0x01EE2874 LDR W8, [X20 + 0x20]
	0x01EE2878 CMP W8, W19
	0x01EE287C B.GE 0x1EE2884
	0x01EE2880 STR W19, [X20 + 0x20]
	0x01EE2884 LDR X0, [X21]
	0x01EE2888 LDR W8, [X0 + 0xE0]
	0x01EE288C CBNZ W8, 0x1EE2894
	0x01EE2890 BL 0x1C16DFC
	0x01EE2894 LDR W8, [X22 + 0x50]
	0x01EE2898 CMP W8, 0x1
	0x01EE289C B.LT 0x1EE28DC

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], D12
	003 Move [X31+136], D11
	004 Move [X31+144], D10
	005 Move [X31+152], D9
	006 Move [X31+160], D8
	007 Move [X31+168], X30
	008 Move [X31+176], X22
	009 Move [X31+184], X21
	010 Move [X31+192], X20
	011 Move [X31+200], X19
	012 Move X22, 0x24F8000
	013 Move X21, 0x221F000
	014 Move W8, [X22+1404]
	015 Move X21, [X21+848]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x221F000
	023 Move X0, [X0+848]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+1404], W8
	027 Move X0, [X21]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Add X8, X31, 80
	033 Move X0, X19
	034 Move X1, X20
	035 Call BVHNode.ComputeMinVolume, X0, X1
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 Move S9, [X31+80]
	038 Move S10, [X31+84]
	039 Move V11, [X31+88]
	040 Move V0, [X19]
	041 Move V8, [X31+100]
	042 Move X8, [X19+16]
	043 Move S12, V1.S[1]
	044 Move [X31], V1
	045 Move [X31+8], V0
	046 Subtract S0, S9, S1
	047 Subtract S1, S10, S12
	048 Subtract S2, S11, S8
	049 Add X0, X31, 16
	050 Move X1, X31
	051 Move [X31+32], X8
	052 Call Bounds.Contains, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {69}
	057 Move V0, [X31]
	058 Add S1, S10, S12
	059 Add S2, S11, S8
	060 Add X0, X31, 16
	061 Add S0, S9, S0
	062 Move X1, X31
	063 Call Bounds.Contains, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {69}
	068 Move W0, W31
	069 Move V5, [X31]
	070 Move [X19], S9
	071 Move [X19+8], S10
	072 Move [X19+8], S11
	073 Move [X19+20], S8
	074 Move [X19+12], D5
	075 Compare X20, 0
	076 JumpIfEqual {126}
	077 Move V1, [X20+68]
	078 Add S0, S8, S8
	079 Add V2, V5, V5
	080 NotImplemented "Instruction MOVI not yet implemented."
	081 Move S4, 0.5
	082 NotImplemented "Instruction INVALID not yet implemented."
	083 Multiply S0, S0, S1
	084 NotImplemented "Instruction INVALID not yet implemented."
	085 Multiply S0, S0, S4
	086 Add V1, V5, V1
	087 Add S0, S8, S0
	088 Move [X19+12], D1
	089 Move [X19+20], S0
	090 Move X0, [X21]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X8, [X19+16]
	096 Move V0, [X19]
	097 NotImplemented "Instruction MOVI not yet implemented."
	098 Add X0, X31, 80
	099 Add X1, X31, 48
	100 Move X2, X31
	101 Move [X31+96], V1
	102 Move [X31+104], V1
	103 Move [X31+64], X8
	104 Move [X31+3], V0
	105 Move [X31+5], V1
	106 Call AABB..ctor, X0, X1
	107 Move V1, [X31+96]
	108 Move V0, [X31+112]
	109 Move V2, [X31+5]
	110 Move W0, 1
	111 Move [X19+56], V0
	112 Move [X19+40], V1
	113 Move [X19+24], V2
	114 Move X20, [X31+192]
	115 Move X19, [X31+200]
	116 Move X22, [X31+176]
	117 Move X21, [X31+184]
	118 Move X30, [X31+168]
	119 Move D9, [X31+152]
	120 Move D8, [X31+160]
	121 Move D11, [X31+136]
	122 Move D10, [X31+144]
	123 Move V12, [X31+128]
	124 Add X31, X31, 208
	125 Return X0
	126 Call 0x1C17F20

Method: System.Single SA(UnityEngine.Bounds box)

Disassembly:
	0x01EE28A0 LDR X0, [X21]
	0x01EE28A4 LDR W9, [X0 + 0xE0]
	0x01EE28A8 CBNZ W9, 0x1EE28B4
	0x01EE28AC BL 0x1C16DFC
	0x01EE28B0 LDR W8, [X22 + 0x50]
	0x01EE28B4 LDR X9, [X20 + 0x10]
	0x01EE28B8 CBZ X9, 0x1EE2944
	0x01EE28BC LDR W10, [X9 + 0x18]
	0x01EE28C0 CMP W8, W10
	0x01EE28C4 B.CS 0x1EE2948
	0x01EE28C8 SMADDL X8, X8, X24, X9
	0x01EE28CC ADD X0, X8, 0x20
	0x01EE28D0 ADD W2, W19, 0x1
	0x01EE28D4 MOV X1, X20
	0x01EE28D8 BL 0x1EE2828
	0x01EE28DC LDR X0, [X21]
	0x01EE28E0 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move V0, [X0]
	002 Move V1, [X0+8]
	003 NotImplemented "Instruction LDUR not yet implemented."
	004 Move V3, [X0+20]
	005 Add V4, V0, V2
	006 Add S5, S1, S3
	007 Subtract V0, V0, V2
	008 Subtract S1, S1, S3
	009 Subtract V0, V4, V0
	010 Subtract S1, S5, S1
	011 NotImplemented "Instruction INVALID not yet implemented."
	012 NotImplemented "Instruction INVALID not yet implemented."
	013 Add V1, V2, V0
	014 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	015 Add V0, V0, V1
	016 Add S0, S0, S0
	017 Return V0

Method: System.Single SA(ref UnityEngine.Bounds box)

Disassembly:
	0x01EDFFEC LDR X0, [X0 + 0x350]
	0x01EDFFF0 BL 0x1C16CF4
	0x01EDFFF4 MOVZ W8, 0x1
	0x01EDFFF8 STRB W8, [X21 + 0x5A6]
	0x01EDFFFC LDR X0, [X22]
	0x01EE0000 LDR W8, [X0 + 0xE0]
	0x01EE0004 CBNZ W8, 0x1EE000C
	0x01EE0008 BL 0x1C16DFC
	0x01EE000C LDR W1, [X19 + 0x48]
	0x01EE0010 MOV X0, X20
	0x01EE0014 LDP X20, X19, [X31 + 0xA0]
	0x01EE0018 LDP X22, X21, [X31 + 0x90]
	0x01EE001C LDP X24, X23, [X31 + 0x80]
	0x01EE0020 LDP X30, X25, [X31 + 0x70]
	0x01EE0024 MOV W2, W31
	0x01EE0028 ADD X31, X31, 0xB0
	0x01EE002C B 0x1EE11D0

ISIL:
	001 Move V0, [X0]
	002 Move V1, [X0+8]
	003 NotImplemented "Instruction LDUR not yet implemented."
	004 Move V3, [X0+20]
	005 Add V4, V0, V2
	006 Add S5, S1, S3
	007 Subtract V0, V0, V2
	008 Subtract S1, S1, S3
	009 Subtract V0, V4, V0
	010 Subtract S1, S5, S1
	011 NotImplemented "Instruction INVALID not yet implemented."
	012 NotImplemented "Instruction INVALID not yet implemented."
	013 Add V1, V2, V0
	014 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	015 Add V0, V0, V1
	016 Add S0, S0, S0
	017 Return V0

Method: System.Single SA(ref Fusion.LagCompensation.BVHNode node)

Disassembly:
	0x01EE28E4 CBNZ W8, 0x1EE28EC
	0x01EE28E8 BL 0x1C16DFC
	0x01EE28EC LDR W8, [X22 + 0x54]
	0x01EE28F0 CMP W8, 0x1
	0x01EE28F4 B.LT 0x1EE2930
	0x01EE28F8 LDR X0, [X21]
	0x01EE28FC LDR W9, [X0 + 0xE0]
	0x01EE2900 CBNZ W9, 0x1EE290C
	0x01EE2904 BL 0x1C16DFC
	0x01EE2908 LDR W8, [X22 + 0x54]
	0x01EE290C LDR X9, [X20 + 0x10]
	0x01EE2910 CBZ X9, 0x1EE2944
	0x01EE2914 LDR W10, [X9 + 0x18]
	0x01EE2918 CMP W8, W10
	0x01EE291C B.CS 0x1EE2948
	0x01EE2920 SMADDL X8, X8, X24, X9
	0x01EE2924 ADD X22, X8, 0x20

ISIL:
	001 Move V0, [X0]
	002 Move V1, [X0+8]
	003 NotImplemented "Instruction LDUR not yet implemented."
	004 Move V3, [X0+20]
	005 Add V4, V0, V2
	006 Add S5, S1, S3
	007 Subtract V0, V0, V2
	008 Subtract S1, S1, S3
	009 Subtract V0, V4, V0
	010 Subtract S1, S5, S1
	011 NotImplemented "Instruction INVALID not yet implemented."
	012 NotImplemented "Instruction INVALID not yet implemented."
	013 Add V1, V2, V0
	014 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	015 Add V0, V0, V1
	016 Add S0, S0, S0
	017 Return V0

Method: UnityEngine.Bounds AABBofPair(ref Fusion.LagCompensation.BVHNode nodea, ref Fusion.LagCompensation.BVHNode nodeb)

Disassembly:
	0x01EE2928 ADD W19, W19, 0x1
	0x01EE292C B 0x1EE2858
	0x01EE2930 LDP X20, X19, [X31 + 0x30]
	0x01EE2934 LDP X22, X21, [X31 + 0x20]
	0x01EE2938 LDP X24, X23, [X31 + 0x10]
	0x01EE293C LDP X30, X25, [X31], #0x40
	0x01EE2940 RET
	0x01EE2944 BL 0x1C16F20
	0x01EE2948 BL 0x1C16F28
	0x01EE294C SUB X31, X31, 0x1E0
	0x01EE2950 STP D11, D10, [X31 + 0x180]
	0x01EE2954 STP D9, D8, [X31 + 0x190]
	0x01EE2958 STR X29, [X31 + 0x1A0]
	0x01EE295C STP X30, X23, [X31 + 0x1B0]
	0x01EE2960 STP X22, X21, [X31 + 0x1C0]
	0x01EE2964 STP X20, X19, [X31 + 0x1D0]
	0x01EE2968 ADRP X23, 0x24F7000
	0x01EE296C ADRP X22, 0x221E000
	0x01EE2970 LDRB W8, [X23 + 0x585]
	0x01EE2974 LDR X22, [X22 + 0x350]
	0x01EE2978 MOV X19, X2
	0x01EE297C MOV V8.16B, V3.16B
	0x01EE2980 MOV V9.16B, V2.16B
	0x01EE2984 MOV V10.16B, V1.16B
	0x01EE2988 MOV V11.16B, V0.16B
	0x01EE298C MOV X20, X1
	0x01EE2990 MOV X21, X0
	0x01EE2994 TBNZ X8, 0x0, 0x1EE29B8
	0x01EE2998 ADRP X0, 0x221E000
	0x01EE299C LDR X0, [X0 + 0x350]
	0x01EE29A0 BL 0x1C16CF4
	0x01EE29A4 ADRP X0, 0x221E000
	0x01EE29A8 LDR X0, [X0 + 0x478]
	0x01EE29AC BL 0x1C16CF4
	0x01EE29B0 MOVZ W8, 0x1
	0x01EE29B4 STRB W8, [X23 + 0x585]
	0x01EE29B8 LDR X0, [X22]
	0x01EE29BC LDR W8, [X0 + 0xE0]
	0x01EE29C0 CBNZ W8, 0x1EE29C8
	0x01EE29C4 BL 0x1C16DFC
	0x01EE29C8 ADD X8, X31, 0x78
	0x01EE29CC MOV X0, X21
	0x01EE29D0 BL 0x1EE2B64
	0x01EE29D4 ADD X1, X31, 0x78
	0x01EE29D8 MOV V0.16B, V11.16B
	0x01EE29DC MOV V1.16B, V10.16B
	0x01EE29E0 MOV V2.16B, V9.16B
	0x01EE29E4 MOV V3.16B, V8.16B
	0x01EE29E8 BL 0x1EE2BE0
	0x01EE29EC TBZ X0, 0x0, 0x1EE2B0C
	0x01EE29F0 LDR X8, [X21 + 0x68]
	0x01EE29F4 CBZ X8, 0x1EE2A78
	0x01EE29F8 LDRB W8, [X8 + 0x30]
	0x01EE29FC TBNZ X8, 0x3, 0x1EE2A78
	0x01EE2A00 ADD X0, X31, 0x0

ISIL:
	001 Move V0, [X0]
	002 Move V1, [X0+8]
	003 NotImplemented "Instruction LDUR not yet implemented."
	004 Move V3, [X0+20]
	005 Move V5, [X1+8]
	006 Move V7, [X1+20]
	007 Move V4, [X1]
	008 NotImplemented "Instruction LDUR not yet implemented."
	009 Subtract V20, V0, V2
	010 Subtract S19, S5, S7
	011 Add V0, V0, V2
	012 Subtract S2, S1, S3
	013 Subtract V18, V4, V6
	014 Add S1, S1, S3
	015 NotImplemented "Instruction FCMP not yet implemented."
	016 Add V3, V4, V6
	017 Add S4, S5, S7
	018 NotImplemented "Instruction INVALID not yet implemented."
	019 NotImplemented "Instruction INVALID not yet implemented."
	020 NotImplemented "Instruction FCSEL not yet implemented."
	021 NotImplemented "Instruction FCMP not yet implemented."
	022 NotImplemented "Instruction INVALID not yet implemented."
	023 NotImplemented "Instruction INVALID not yet implemented."
	024 NotImplemented "Instruction FCSEL not yet implemented."
	025 NotImplemented "Instruction MOVI not yet implemented."
	026 Move S17, 0.5
	027 Subtract V0, V0, V5
	028 Subtract S1, S1, S2
	029 NotImplemented "Instruction INVALID not yet implemented."
	030 Multiply S1, S1, S17
	031 Add V5, V5, V0
	032 Add S2, S2, S1
	033 Subtract V6, V5, V0
	034 Add V0, V0, V5
	035 Subtract S5, S2, S1
	036 NotImplemented "Instruction INVALID not yet implemented."
	037 Add S1, S1, S2
	038 NotImplemented "Instruction INVALID not yet implemented."
	039 NotImplemented "Instruction FCMP not yet implemented."
	040 NotImplemented "Instruction INVALID not yet implemented."
	041 NotImplemented "Instruction INVALID not yet implemented."
	042 NotImplemented "Instruction FCSEL not yet implemented."
	043 NotImplemented "Instruction FCMP not yet implemented."
	044 Subtract V0, V0, V6
	045 NotImplemented "Instruction FCSEL not yet implemented."
	046 NotImplemented "Instruction INVALID not yet implemented."
	047 Subtract S1, S1, S2
	048 Add V3, V6, V0
	049 Move [X8+12], D0
	050 Multiply S0, S1, S17
	051 Add S1, S2, S0
	052 Move [X8], D3
	053 Move [X8+8], S1
	054 Move [X8+20], S0
	055 Return X0

Method: UnityEngine.Bounds GetEntryBounds(Fusion.HitboxRoot entry)

Disassembly:
	0x01EE2A04 MOVZ W2, 0x78
	0x01EE2A08 MOV X1, X21
	0x01EE2A0C BL 0x3EB1AC0
	0x01EE2A10 CBZ X19, 0x1EE2B5C
	0x01EE2A14 ADRP X8, 0x221E000
	0x01EE2A18 LDR X8, [X8 + 0x478]
	0x01EE2A1C ADD X0, X31, 0x90
	0x01EE2A20 ADD X1, X31, 0x0
	0x01EE2A24 MOVZ W2, 0x78
	0x01EE2A28 LDR X20, [X8]
	0x01EE2A2C BL 0x3EB1AC0
	0x01EE2A30 LDR W9, [X19 + 0x1C]
	0x01EE2A34 LDR X8, [X19 + 0x10]
	0x01EE2A38 ADD W9, W9, 0x1
	0x01EE2A3C STR W9, [X19 + 0x1C]
	0x01EE2A40 CBZ X8, 0x1EE2B5C
	0x01EE2A44 LDRSW X9, [X19 + 0x18]
	0x01EE2A48 LDR W10, [X8 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {22}
	004 Move V0, [X0+132]
	005 Move S1, W31
	006 Move S2, 0.5
	007 Add S1, S0, S1
	008 Multiply S1, S1, S2
	009 Subtract S3, S1, S0
	010 Subtract S1, S3, S1
	011 Subtract S0, S0, S1
	012 Multiply S0, S0, S2
	013 Add S1, S1, S0
	014 Move [X8], S1
	015 Move [X8+8], S1
	016 Move [X8+8], S1
	017 Move [X8+16], S0
	018 Move [X8+16], S0
	019 Move [X8+24], S0
	020 Move X30, [X31+16]
	021 Return X0
	022 Call 0x1C17F20

Method: System.Single SAofList(System.Collections.Generic.List`1<Fusion.HitboxRoot> entries)

Disassembly:
	0x01EE2A4C CMP W9, W10
	0x01EE2A50 B.CS 0x1EE2B2C
	0x01EE2A54 MOVZ W11, 0x78
	0x01EE2A58 MADD X8, X9, X11, X8
	0x01EE2A5C ADD W10, W9, 0x1
	0x01EE2A60 ADD X0, X8, 0x20
	0x01EE2A64 ADD X1, X31, 0x90
	0x01EE2A68 MOVZ W2, 0x78
	0x01EE2A6C STR W10, [X19 + 0x18]
	0x01EE2A70 BL 0x3EB1AC0
	0x01EE2A74 B 0x1EE2B0C
	0x01EE2A78 LDR X0, [X22]
	0x01EE2A7C LDR W8, [X0 + 0xE0]
	0x01EE2A80 CBNZ W8, 0x1EE2A88
	0x01EE2A84 BL 0x1C16DFC
	0x01EE2A88 CBZ X20, 0x1EE2B5C
	0x01EE2A8C LDR X8, [X20 + 0x10]
	0x01EE2A90 CBZ X8, 0x1EE2B5C
	0x01EE2A94 LDRSW X9, [X21 + 0x50]
	0x01EE2A98 LDR W10, [X8 + 0x18]
	0x01EE2A9C CMP W9, W10
	0x01EE2AA0 B.CS 0x1EE2B60
	0x01EE2AA4 MOVZ W10, 0x78
	0x01EE2AA8 MADD X8, X9, X10, X8
	0x01EE2AAC ADD X0, X8, 0x20
	0x01EE2AB0 MOV X1, X20
	0x01EE2AB4 MOV V0.16B, V11.16B
	0x01EE2AB8 MOV V1.16B, V10.16B
	0x01EE2ABC MOV V2.16B, V9.16B
	0x01EE2AC0 MOV V3.16B, V8.16B
	0x01EE2AC4 MOV X2, X19
	0x01EE2AC8 BL 0x1EE294C
	0x01EE2ACC LDR X8, [X20 + 0x10]
	0x01EE2AD0 CBZ X8, 0x1EE2B5C
	0x01EE2AD4 LDRSW X9, [X21 + 0x54]
	0x01EE2AD8 LDR W10, [X8 + 0x18]
	0x01EE2ADC CMP W9, W10
	0x01EE2AE0 B.CS 0x1EE2B60
	0x01EE2AE4 MOVZ W10, 0x78
	0x01EE2AE8 MADD X8, X9, X10, X8
	0x01EE2AEC ADD X0, X8, 0x20
	0x01EE2AF0 MOV X1, X20
	0x01EE2AF4 MOV V0.16B, V11.16B
	0x01EE2AF8 MOV V1.16B, V10.16B
	0x01EE2AFC MOV V2.16B, V9.16B
	0x01EE2B00 MOV V3.16B, V8.16B
	0x01EE2B04 MOV X2, X19
	0x01EE2B08 BL 0x1EE294C
	0x01EE2B0C LDP X20, X19, [X31 + 0x1D0]
	0x01EE2B10 LDP X22, X21, [X31 + 0x1C0]
	0x01EE2B14 LDP X30, X23, [X31 + 0x1B0]
	0x01EE2B18 LDR X29, [X31 + 0x1A0]
	0x01EE2B1C LDP D9, D8, [X31 + 0x190]
	0x01EE2B20 LDP D11, D10, [X31 + 0x180]
	0x01EE2B24 ADD X31, X31, 0x1E0
	0x01EE2B28 RET
	0x01EE2B2C LDR X8, [X20 + 0x20]
	0x01EE2B30 ADD X0, X31, 0x108
	0x01EE2B34 ADD X1, X31, 0x90
	0x01EE2B38 MOVZ W2, 0x78
	0x01EE2B3C LDR X8, [X8 + 0xC0]
	0x01EE2B40 LDR X20, [X8 + 0x70]
	0x01EE2B44 BL 0x3EB1AC0
	0x01EE2B48 ADD X1, X31, 0x108
	0x01EE2B4C MOV X0, X19
	0x01EE2B50 MOV X2, X20
	0x01EE2B54 BL 0x2F5BD5C
	0x01EE2B58 B 0x1EE2B0C
	0x01EE2B5C BL 0x1C16F20
	0x01EE2B60 BL 0x1C16F28
	0x01EE2B64 LDR V0, [X0]
	0x01EE2B68 LDR V1, [X0 + 0x8]
	0x01EE2B6C LDUR V2, [X0 + 0xC]
	0x01EE2B70 LDR V3, [X0 + 0x14]
	0x01EE2B74 MOVI D4, 0x0
	0x01EE2B78 FMOV S5, W31
	0x01EE2B7C FSUB V16.2S, V0.2S, V2.2S
	0x01EE2B80 FSUB S17, S1, S3
	0x01EE2B84 MOVI V6.2S, 0x3F, 0x18
	0x01EE2B88 FMOV S7, 0.5
	0x01EE2B8C FADD V0.2S, V0.2S, V2.2S
	0x01EE2B90 FADD S1, S1, S3
	0x01EE2B94 FSUB V2.2S, V4.2S, V16.2S
	0x01EE2B98 FSUB S3, S5, S17
	0x00000000 INVALID
	0x01EE2BA0 FMUL S3, S3, S7
	0x01EE2BA4 FADD V4.2S, V16.2S, V2.2S
	0x01EE2BA8 FADD S5, S17, S3
	0x01EE2BAC FSUB V2.2S, V4.2S, V2.2S
	0x01EE2BB0 FSUB S3, S5, S3
	0x01EE2BB4 FSUB V0.2S, V0.2S, V2.2S
	0x01EE2BB8 FSUB S1, S1, S3
	0x00000000 INVALID
	0x01EE2BC0 FMUL S1, S1, S7
	0x01EE2BC4 FADD V2.2S, V2.2S, V0.2S
	0x01EE2BC8 FADD S3, S3, S1
	0x01EE2BCC STUR D0, [X8 + 0xC]
	0x01EE2BD0 STR D2, [X8]
	0x01EE2BD4 STR S3, [X8 + 0x8]
	0x01EE2BD8 STR S1, [X8 + 0x14]
	0x01EE2BDC RET
	0x01EE2BE0 LDR V4, [X1]
	0x01EE2BE4 LDR V5, [X1 + 0xC]
	0x01EE2BE8 FADD S7, S0, S3
	0x01EE2BEC FSUB S6, S4, S5
	0x01EE2BF0 FCMP S7, S6
	0x01EE2BF4 B.MI 0x1EE2C64
	0x01EE2BF8 LDR V6, [X1 + 0x4]
	0x01EE2BFC LDR V7, [X1 + 0x10]
	0x01EE2C00 FADD S17, S1, S3
	0x01EE2C04 FSUB S16, S6, S7
	0x01EE2C08 FCMP S17, S16
	0x01EE2C0C B.MI 0x1EE2C64
	0x01EE2C10 LDR V16, [X1 + 0x8]
	0x01EE2C14 LDR V17, [X1 + 0x14]
	0x01EE2C18 FADD S19, S2, S3
	0x01EE2C1C FSUB S18, S16, S17
	0x01EE2C20 FCMP S19, S18
	0x01EE2C24 B.MI 0x1EE2C64
	0x01EE2C28 FADD S4, S4, S5
	0x01EE2C2C FSUB S0, S0, S3
	0x01EE2C30 FADD S5, S6, S7
	0x01EE2C34 FSUB S1, S1, S3
	0x01EE2C38 FCMP S0, S4
	0x01EE2C3C FADD S6, S16, S17
	0x01EE2C40 FSUB S2, S2, S3
	0x01EE2C44 CSET W8, LE
	0x01EE2C48 FCMP S1, S5
	0x01EE2C4C CSET W9, LE
	0x01EE2C50 FCMP S2, S6
	0x01EE2C54 AND W8, W8, W9, 0x0
	0x01EE2C58 CSET W9, LE
	0x01EE2C5C AND W0, W8, W9, 0x0
	0x01EE2C60 RET
	0x01EE2C64 MOV W0, W31
	0x01EE2C68 RET
	0x01EE2C6C SUB X31, X31, 0x1E0
	0x01EE2C70 STP X29, X30, [X31 + 0x1A0]
	0x01EE2C74 STP X24, X23, [X31 + 0x1B0]
	0x01EE2C78 STP X22, X21, [X31 + 0x1C0]
	0x01EE2C7C STP X20, X19, [X31 + 0x1D0]
	0x01EE2C80 ADRP X24, 0x24F7000
	0x01EE2C84 ADRP X23, 0x221E000
	0x01EE2C88 LDRB W8, [X24 + 0x586]
	0x01EE2C8C LDR X23, [X23 + 0x350]
	0x01EE2C90 MOV X19, X3
	0x01EE2C94 MOV X21, X2
	0x01EE2C98 MOV X20, X1
	0x01EE2C9C MOV X22, X0
	0x01EE2CA0 TBNZ X8, 0x0, 0x1EE2CC4
	0x01EE2CA4 ADRP X0, 0x221E000
	0x01EE2CA8 LDR X0, [X0 + 0x350]
	0x01EE2CAC BL 0x1C16CF4
	0x01EE2CB0 ADRP X0, 0x221E000
	0x01EE2CB4 LDR X0, [X0 + 0x478]
	0x01EE2CB8 BL 0x1C16CF4
	0x01EE2CBC MOVZ W8, 0x1
	0x01EE2CC0 STRB W8, [X24 + 0x586]
	0x01EE2CC4 LDR X0, [X23]
	0x01EE2CC8 LDR W8, [X0 + 0xE0]
	0x01EE2CCC CBNZ W8, 0x1EE2CD4
	0x01EE2CD0 BL 0x1C16DFC
	0x01EE2CD4 ADD X8, X31, 0x128
	0x01EE2CD8 MOV X0, X22
	0x01EE2CDC BL 0x1EE2B64
	0x01EE2CE0 LDR V0, [X31 + 0x128]
	0x01EE2CE4 LDR V1, [X31 + 0x134]
	0x01EE2CE8 LDR V2, [X21]
	0x01EE2CEC LDR V3, [X21 + 0xC]
	0x01EE2CF0 FSUB S4, S0, S1
	0x01EE2CF4 FADD S5, S2, S3
	0x01EE2CF8 FCMP S4, S5
	0x01EE2CFC B.HI 0x1EE2E94
	0x01EE2D00 LDR V4, [X31 + 0x12C]
	0x01EE2D04 LDR V5, [X31 + 0x138]
	0x01EE2D08 LDR V6, [X21 + 0x4]
	0x01EE2D0C LDR V7, [X21 + 0x10]
	0x01EE2D10 FADD S16, S4, S5
	0x01EE2D14 FSUB S17, S6, S7
	0x01EE2D18 FCMP S16, S17
	0x01EE2D1C B.LT 0x1EE2E94
	0x01EE2D20 FADD S0, S0, S1
	0x01EE2D24 FSUB S1, S2, S3
	0x01EE2D28 FCMP S0, S1
	0x01EE2D2C B.LT 0x1EE2E94
	0x01EE2D30 FADD S0, S6, S7
	0x01EE2D34 FSUB S1, S4, S5
	0x01EE2D38 FCMP S1, S0
	0x01EE2D3C B.HI 0x1EE2E94
	0x01EE2D40 LDR V0, [X21 + 0x8]
	0x01EE2D44 LDR V3, [X21 + 0x14]
	0x01EE2D48 LDR V1, [X31 + 0x130]
	0x01EE2D4C LDR V2, [X31 + 0x13C]
	0x01EE2D50 FADD S4, S0, S3
	0x01EE2D54 FSUB S5, S1, S2
	0x01EE2D58 FCMP S5, S4
	0x01EE2D5C B.HI 0x1EE2E94
	0x01EE2D60 FSUB S0, S0, S3
	0x01EE2D64 FADD S1, S1, S2
	0x01EE2D68 FCMP S1, S0
	0x01EE2D6C B.LT 0x1EE2E94
	0x01EE2D70 LDR X8, [X22 + 0x68]
	0x01EE2D74 CBZ X8, 0x1EE2DF8
	0x01EE2D78 LDRB W8, [X8 + 0x30]
	0x01EE2D7C TBNZ X8, 0x3, 0x1EE2DF8
	0x01EE2D80 ADD X0, X31, 0x38
	0x01EE2D84 MOVZ W2, 0x78
	0x01EE2D88 MOV X1, X22
	0x01EE2D8C BL 0x3EB1AC0
	0x01EE2D90 CBZ X19, 0x1EE2EDC
	0x01EE2D94 ADRP X8, 0x221E000

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+32], D15
	003 Move [X31+40], D14
	004 Move [X31+48], D13
	005 Move [X31+56], D12
	006 Move [X31+64], D11
	007 Move [X31+72], D10
	008 Move [X31+80], D9
	009 Move [X31+88], D8
	010 Move [X31+96], X30
	011 Move [X31+112], X22
	012 Move [X31+120], X21
	013 Move [X31+128], X20
	014 Move [X31+136], X19
	015 Move X20, 0x24F8000
	016 Move W8, [X20+1405]
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {42}
	022 Move X0, 0x221F000
	023 Move X0, [X0+848]
	024 Call 0x1C17CF4
	025 Move X0, 0x221F000
	026 Move X0, [X0+1080]
	027 Call 0x1C17CF4
	028 Move X0, 0x221F000
	029 Move X0, [X0+1088]
	030 Call 0x1C17CF4
	031 Move X0, 0x221F000
	032 Move X0, [X0+1096]
	033 Call 0x1C17CF4
	034 Move X0, 0x221F000
	035 Move X0, [X0+1104]
	036 Call 0x1C17CF4
	037 Move X0, 0x221F000
	038 Move X0, [X0+960]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X20+1405], W8
	042 Move [X31+8], X31
	043 Move [X31+16], X31
	044 Move [X31+24], X31
	045 Compare X19, 0
	046 JumpIfEqual {207}
	047 Move X8, 0x221F000
	048 Move X8, [X8+960]
	049 Move X21, 0x221F000
	050 Move X0, X19
	051 Move W1, W31
	052 Move X2, [X8]
	053 Move X21, [X21+848]
	054 Call List`1<Object>.get_Item, X0, X1
	055 Move X8, [X21]
	056 Move X20, X0
	057 Move W9, [X8+224]
	058 Compare W9, 0
	059 JumpIfNotEqual {62}
	060 Move X0, X8
	061 Call 0x1C17DFC
	062 Compare X20, 0
	063 JumpIfEqual {207}
	064 Move X8, 0x221F000
	065 Move X22, 0x221F000
	066 Move X8, [X8+1104]
	067 Move X22, [X22+1088]
	068 Move V0, [X20+132]
	069 Move S14, W31
	070 Move S15, 0.5
	071 Move X20, 0x221F000
	072 Add S1, S0, S14
	073 Multiply S1, S1, S15
	074 Move X20, [X20+1080]
	075 Subtract S2, S1, S0
	076 Move X1, [X8]
	077 Subtract S1, S2, S1
	078 Subtract S0, S0, S1
	079 Multiply S8, S0, S15
	080 Add X8, X31, 8
	081 Move X0, X19
	082 Add S9, S1, S8
	083 Call List`1<Object>.GetEnumerator, X0
	084 Move V10, V8
	085 Move V11, V8
	086 Move V12, V9
	087 Move V13, V9
	088 Move X1, [X22]
	089 Add X0, X31, 8
	090 Call Enumerator<Object>.MoveNext, X0
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {167}
	095 Move X0, [X21]
	096 Move X19, [X31+24]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Compare X19, 0
	102 JumpIfEqual {205}
	103 Move V0, [X19+132]
	104 Subtract S1, S13, S11
	105 Subtract S2, S12, S10
	106 Subtract S3, S9, S8
	107 Add S7, S0, S14
	108 Multiply S7, S7, S15
	109 Subtract S16, S7, S0
	110 Subtract S7, S16, S7
	111 Subtract S0, S0, S7
	112 Multiply S0, S0, S15
	113 Add S7, S7, S0
	114 Subtract S16, S7, S0
	115 NotImplemented "Instruction FCMP not yet implemented."
	116 NotImplemented "Instruction FCSEL not yet implemented."
	117 NotImplemented "Instruction FCMP not yet implemented."
	118 Add S4, S11, S13
	119 NotImplemented "Instruction FCSEL not yet implemented."
	120 NotImplemented "Instruction FCMP not yet implemented."
	121 Add S5, S10, S12
	122 NotImplemented "Instruction FCSEL not yet implemented."
	123 NotImplemented "Instruction FCMP not yet implemented."
	124 Add S6, S8, S9
	125 NotImplemented "Instruction FCSEL not yet implemented."
	126 NotImplemented "Instruction FCMP not yet implemented."
	127 NotImplemented "Instruction FCSEL not yet implemented."
	128 NotImplemented "Instruction FCMP not yet implemented."
	129 Subtract S4, S4, S1
	130 NotImplemented "Instruction FCSEL not yet implemented."
	131 Subtract S5, S5, S2
	132 Multiply S4, S4, S15
	133 Subtract S6, S6, S3
	134 Multiply S5, S5, S15
	135 Add S1, S1, S4
	136 Add S0, S0, S7
	137 Multiply S6, S6, S15
	138 Add S2, S2, S5
	139 Subtract S7, S1, S4
	140 Add S1, S4, S1
	141 Add S3, S3, S6
	142 Subtract S4, S2, S5
	143 NotImplemented "Instruction FCMP not yet implemented."
	144 Add S2, S5, S2
	145 Subtract S5, S3, S6
	146 NotImplemented "Instruction FCSEL not yet implemented."
	147 NotImplemented "Instruction FCMP not yet implemented."
	148 NotImplemented "Instruction FCSEL not yet implemented."
	149 NotImplemented "Instruction FCMP not yet implemented."
	150 NotImplemented "Instruction FCSEL not yet implemented."
	151 NotImplemented "Instruction FCMP not yet implemented."
	152 Add S3, S6, S3
	153 NotImplemented "Instruction FCSEL not yet implemented."
	154 NotImplemented "Instruction FCMP not yet implemented."
	155 NotImplemented "Instruction FCSEL not yet implemented."
	156 NotImplemented "Instruction FCMP not yet implemented."
	157 NotImplemented "Instruction FCSEL not yet implemented."
	158 Subtract S1, S1, S7
	159 Subtract S2, S2, S4
	160 Subtract S0, S0, S5
	161 Multiply S11, S1, S15
	162 Multiply S10, S2, S15
	163 Multiply S8, S0, S15
	164 Add S13, S7, S11
	165 Add S12, S4, S10
	166 Add S9, S5, S8
	167 Move X1, [X20]
	168 Add X0, X31, 8
	169 Call Enumerator<Object>.Dispose, X0
	170 Move X0, [X21]
	171 Move W8, [X0+224]
	172 Compare W8, 0
	173 JumpIfNotEqual {175}
	174 Call 0x1C17DFC
	175 Add S0, S11, S13
	176 Add S1, S10, S12
	177 Add S2, S8, S9
	178 Subtract S3, S13, S11
	179 Subtract S4, S12, S10
	180 Subtract S5, S9, S8
	181 Subtract S0, S0, S3
	182 Subtract S1, S1, S4
	183 Subtract S2, S2, S5
	184 Multiply S3, S1, S0
	185 Multiply S0, S2, S0
	186 Move X20, [X31+128]
	187 Move X19, [X31+136]
	188 Move X22, [X31+112]
	189 Move X21, [X31+120]
	190 Move X30, [X31+96]
	191 Move D9, [X31+80]
	192 Move D8, [X31+88]
	193 Move D11, [X31+64]
	194 Move D10, [X31+72]
	195 Move D13, [X31+48]
	196 Move D12, [X31+56]
	197 Move D15, [X31+32]
	198 Move D14, [X31+40]
	199 Add S0, S3, S0
	200 Multiply S1, S2, S1
	201 Add S0, S1, S0
	202 Add S0, S0, S0
	203 Add X31, X31, 144
	204 Return V0
	205 Move X22, X20
	206 Call 0x1C17F20
	207 Call 0x1C17F20
	208 Move X22, X20
	209 Move X19, X0
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move X0, X19
	212 Call 0x3EB2AD0
	213 Move X20, [X0]
	214 Call 0x3EB2AE0
	215 Move X1, [X22]
	216 Add X0, X31, 8
	217 Call Enumerator<Object>.Dispose, X0
	218 Compare X20, 0
	219 JumpIfEqual {170}
	220 Move X0, X20
	221 Call 0x1C17F18
	222 Move X20, X31
	223 Move X19, X0
	224 Move X1, [X22]
	225 Add X0, X31, 8
	226 Call Enumerator<Object>.Dispose, X0
	227 Compare X20, 0
	228 JumpIfNotEqual {231}
	229 Move X0, X19
	230 Call 0x1D2D690
	231 Move X0, X20
	232 Call 0x1C17F18
	233 Call 0x1991590

Method: System.Void SplitNode(Fusion.LagCompensation.BVH bvh, System.Collections.Generic.List`1<Fusion.HitboxRoot> entries)

Disassembly:
	0x01EE2D98 LDR X8, [X8 + 0x478]
	0x01EE2D9C ADD X0, X31, 0xB0
	0x01EE2DA0 ADD X1, X31, 0x38
	0x01EE2DA4 MOVZ W2, 0x78
	0x01EE2DA8 LDR X20, [X8]
	0x01EE2DAC BL 0x3EB1AC0
	0x01EE2DB0 LDR W9, [X19 + 0x1C]
	0x01EE2DB4 LDR X8, [X19 + 0x10]
	0x01EE2DB8 ADD W9, W9, 0x1
	0x01EE2DBC STR W9, [X19 + 0x1C]
	0x01EE2DC0 CBZ X8, 0x1EE2EDC
	0x01EE2DC4 LDRSW X9, [X19 + 0x18]
	0x01EE2DC8 LDR W10, [X8 + 0x18]
	0x01EE2DCC CMP W9, W10
	0x01EE2DD0 B.CS 0x1EE2EAC
	0x01EE2DD4 MOVZ W11, 0x78
	0x01EE2DD8 MADD X8, X9, X11, X8
	0x01EE2DDC ADD W10, W9, 0x1
	0x01EE2DE0 ADD X0, X8, 0x20
	0x01EE2DE4 ADD X1, X31, 0xB0
	0x01EE2DE8 MOVZ W2, 0x78
	0x01EE2DEC STR W10, [X19 + 0x18]
	0x01EE2DF0 BL 0x3EB1AC0
	0x01EE2DF4 B 0x1EE2E94
	0x01EE2DF8 LDR X0, [X23]
	0x01EE2DFC LDR W8, [X0 + 0xE0]
	0x01EE2E00 CBNZ W8, 0x1EE2E08
	0x01EE2E04 BL 0x1C16DFC
	0x01EE2E08 CBZ X20, 0x1EE2EDC
	0x01EE2E0C LDR X8, [X20 + 0x10]
	0x01EE2E10 CBZ X8, 0x1EE2EDC
	0x01EE2E14 LDRSW X9, [X22 + 0x50]
	0x01EE2E18 LDR W10, [X8 + 0x18]
	0x01EE2E1C CMP W9, W10
	0x01EE2E20 B.CS 0x1EE2EE0
	0x01EE2E24 LDR X11, [X21 + 0x10]
	0x01EE2E28 LDR V0, [X21]
	0x01EE2E2C MOVZ W10, 0x78
	0x01EE2E30 MADD X8, X9, X10, X8
	0x01EE2E34 ADD X0, X8, 0x20
	0x01EE2E38 ADD X2, X31, 0x20
	0x01EE2E3C MOV X1, X20
	0x01EE2E40 MOV X3, X19
	0x01EE2E44 STR X11, [X31 + 0x30]
	0x01EE2E48 STR V0, [X31 + 0x2]
	0x01EE2E4C BL 0x1EE2C6C
	0x01EE2E50 LDR X8, [X20 + 0x10]
	0x01EE2E54 CBZ X8, 0x1EE2EDC
	0x01EE2E58 LDRSW X9, [X22 + 0x54]
	0x01EE2E5C LDR W10, [X8 + 0x18]
	0x01EE2E60 CMP W9, W10
	0x01EE2E64 B.CS 0x1EE2EE0
	0x01EE2E68 LDR X11, [X21 + 0x10]
	0x01EE2E6C LDR V0, [X21]
	0x01EE2E70 MOVZ W10, 0x78
	0x01EE2E74 MADD X8, X9, X10, X8
	0x01EE2E78 ADD X0, X8, 0x20
	0x01EE2E7C ADD X2, X31, 0x0
	0x01EE2E80 MOV X1, X20
	0x01EE2E84 MOV X3, X19
	0x01EE2E88 STR X11, [X31 + 0x10]
	0x01EE2E8C STR V0, [X31]
	0x01EE2E90 BL 0x1EE2C6C
	0x01EE2E94 LDP X20, X19, [X31 + 0x1D0]
	0x01EE2E98 LDP X22, X21, [X31 + 0x1C0]
	0x01EE2E9C LDP X24, X23, [X31 + 0x1B0]
	0x01EE2EA0 LDP X29, X30, [X31 + 0x1A0]
	0x01EE2EA4 ADD X31, X31, 0x1E0
	0x01EE2EA8 RET
	0x01EE2EAC LDR X8, [X20 + 0x20]
	0x01EE2EB0 ADD X0, X31, 0x128
	0x01EE2EB4 ADD X1, X31, 0xB0
	0x01EE2EB8 MOVZ W2, 0x78
	0x01EE2EBC LDR X8, [X8 + 0xC0]
	0x01EE2EC0 LDR X20, [X8 + 0x70]
	0x01EE2EC4 BL 0x3EB1AC0
	0x01EE2EC8 ADD X1, X31, 0x128
	0x01EE2ECC MOV X0, X19
	0x01EE2ED0 MOV X2, X20
	0x01EE2ED4 BL 0x2F5BD5C
	0x01EE2ED8 B 0x1EE2E94
	0x01EE2EDC BL 0x1C16F20
	0x01EE2EE0 BL 0x1C16F28
	0x01EE2EE4 SUB X31, X31, 0x60
	0x01EE2EE8 STP X30, X19, [X31 + 0x50]
	0x01EE2EEC LDR X8, [X0 + 0x10]
	0x01EE2EF0 LDR V0, [X0]
	0x01EE2EF4 MOV X19, X0
	0x01EE2EF8 MOVI V1.2D, 0x0
	0x01EE2EFC ADD X0, X31, 0x20
	0x01EE2F00 ADD X1, X31, 0x0
	0x01EE2F04 MOV X2, X31
	0x01EE2F08 STP V1, V1, [X31 + 0x30]
	0x01EE2F0C STR X8, [X31 + 0x10]
	0x01EE2F10 STR V0, [X31]
	0x01EE2F14 STR V1, [X31 + 0x2]
	0x01EE2F18 BL 0x1EED32C
	0x01EE2F1C LDP V1, V0, [X31 + 0x30]
	0x01EE2F20 LDR V2, [X31 + 0x2]
	0x01EE2F24 STUR V0, [X19 + 0x38]
	0x01EE2F28 STUR V1, [X19 + 0x28]
	0x01EE2F2C STUR V2, [X19 + 0x18]
	0x01EE2F30 LDP X30, X19, [X31 + 0x50]
	0x01EE2F34 ADD X31, X31, 0x60
	0x01EE2F38 RET
	0x01EE2F3C STP X30, X23, [X31 - 0x30]!
	0x01EE2F40 STP X22, X21, [X31 + 0x10]
	0x01EE2F44 STP X20, X19, [X31 + 0x20]
	0x01EE2F48 ADRP X22, 0x24F7000
	0x01EE2F4C ADRP X23, 0x221E000
	0x01EE2F50 LDRB W8, [X22 + 0x588]
	0x01EE2F54 LDR X23, [X23 + 0x350]
	0x01EE2F58 MOV W20, W2
	0x01EE2F5C MOV X19, X1
	0x01EE2F60 MOV X21, X0
	0x01EE2F64 TBNZ X8, 0x0, 0x1EE2F7C
	0x01EE2F68 ADRP X0, 0x221E000
	0x01EE2F6C LDR X0, [X0 + 0x350]
	0x01EE2F70 BL 0x1C16CF4
	0x01EE2F74 MOVZ W8, 0x1
	0x01EE2F78 STRB W8, [X22 + 0x588]
	0x01EE2F7C LDR X0, [X23]
	0x01EE2F80 LDR W8, [X0 + 0xE0]
	0x01EE2F84 CBNZ W8, 0x1EE2F8C
	0x01EE2F88 BL 0x1C16DFC
	0x01EE2F8C LDR W1, [X21 + 0x48]
	0x01EE2F90 AND W2, W20, 0x1
	0x01EE2F94 MOV X0, X19
	0x01EE2F98 LDP X20, X19, [X31 + 0x20]
	0x01EE2F9C LDP X22, X21, [X31 + 0x10]
	0x01EE2FA0 LDP X30, X23, [X31], #0x30
	0x01EE2FA4 B 0x1EE11D0
	0x01EE2FA8 STP X30, X23, [X31 - 0x30]!
	0x01EE2FAC STP X22, X21, [X31 + 0x10]
	0x01EE2FB0 STP X20, X19, [X31 + 0x20]
	0x01EE2FB4 ADRP X19, 0x24F7000
	0x01EE2FB8 ADRP X23, 0x221E000
	0x01EE2FBC ADRP X20, 0x221E000
	0x01EE2FC0 ADRP X22, 0x221E000
	0x01EE2FC4 ADRP X21, 0x221E000
	0x01EE2FC8 LDRB W8, [X19 + 0x58C]
	0x01EE2FCC LDR X23, [X23 + 0x480]
	0x01EE2FD0 LDR X20, [X20 + 0x350]
	0x01EE2FD4 LDR X22, [X22 + 0x488]
	0x01EE2FD8 LDR X21, [X21 + 0x490]
	0x01EE2FDC TBNZ X8, 0x0, 0x1EE3018
	0x01EE2FE0 ADRP X0, 0x221E000
	0x01EE2FE4 LDR X0, [X0 + 0x350]
	0x01EE2FE8 BL 0x1C16CF4
	0x01EE2FEC ADRP X0, 0x221E000
	0x01EE2FF0 LDR X0, [X0 + 0x480]
	0x01EE2FF4 BL 0x1C16CF4
	0x01EE2FF8 ADRP X0, 0x221E000
	0x01EE2FFC LDR X0, [X0 + 0x488]
	0x01EE3000 BL 0x1C16CF4
	0x01EE3004 ADRP X0, 0x221D000
	0x01EE3008 LDR X0, [X0 + 0x490]
	0x01EE300C BL 0x1C16CF4
	0x01EE3010 MOVZ W8, 0x1
	0x01EE3014 STRB W8, [X19 + 0x58C]
	0x01EE3018 LDR X0, [X23]
	0x01EE301C BL 0x1C16F10
	0x01EE3020 MOV X1, X31
	0x01EE3024 MOV X19, X0
	0x01EE3028 BL 0x1E85628
	0x01EE302C LDR X8, [X20]
	0x01EE3030 LDR X8, [X8 + 0xB8]
	0x01EE3034 STR X19, [X8]
	0x01EE3038 LDR X0, [X22]
	0x01EE303C BL 0x1C16F10
	0x01EE3040 MOV X1, X31
	0x01EE3044 MOV X19, X0
	0x01EE3048 BL 0x1E856A4
	0x01EE304C LDR X8, [X20]
	0x01EE3050 LDR X8, [X8 + 0xB8]
	0x01EE3054 STR X19, [X8 + 0x8]
	0x01EE3058 LDR X0, [X21]
	0x01EE305C BL 0x1C16F10
	0x01EE3060 MOV X1, X31
	0x01EE3064 MOV X19, X0
	0x01EE3068 BL 0x1E85720
	0x01EE306C LDR X8, [X20]
	0x01EE3070 LDP X22, X21, [X31 + 0x10]
	0x01EE3074 LDR X8, [X8 + 0xB8]
	0x01EE3078 STR X19, [X8 + 0x10]
	0x01EE307C LDP X20, X19, [X31 + 0x20]
	0x01EE3080 LDP X30, X23, [X31], #0x30
	0x01EE3084 RET
	0x01EE3088 STR X30, [X31 - 0x20]!
	0x01EE308C STP X20, X19, [X31 + 0x10]
	0x01EE3090 ADRP X20, 0x24F6000
	0x01EE3094 LDRB W8, [X20 + 0x58D]
	0x01EE3098 MOV X19, X0
	0x01EE309C TBNZ X8, 0x0, 0x1EE30B4
	0x01EE30A0 ADRP X0, 0x221D000
	0x01EE30A4 LDR X0, [X0 + 0x498]
	0x01EE30A8 BL 0x1C16CF4
	0x01EE30AC MOVZ W8, 0x1
	0x01EE30B0 STRB W8, [X20 + 0x58D]
	0x01EE30B4 LDR X0, [X19 + 0x10]
	0x01EE30B8 CBZ X0, 0x1EE30D4
	0x01EE30BC ADRP X8, 0x221D000
	0x01EE30C0 LDR X8, [X8 + 0x498]
	0x01EE30C4 LDP X20, X19, [X31 + 0x10]
	0x01EE30C8 LDR X1, [X8]
	0x01EE30CC LDR X30, [X31], #0x20
	0x01EE30D0 B 0x2A9ED8C
	0x01EE30D4 BL 0x1C16F20
	0x01EE30D8 STR X30, [X31 - 0x30]!
	0x01EE30DC STP X22, X21, [X31 + 0x10]
	0x01EE30E0 STP X20, X19, [X31 + 0x20]
	0x01EE30E4 ADRP X22, 0x24F6000
	0x01EE30E8 LDRB W8, [X22 + 0x58E]
	0x01EE30EC MOV X19, X2
	0x01EE30F0 MOV X20, X1
	0x01EE30F4 MOV X21, X0
	0x01EE30F8 TBNZ X8, 0x0, 0x1EE3110
	0x01EE30FC ADRP X0, 0x221D000
	0x01EE3100 LDR X0, [X0 + 0x358]

ISIL:
	001 Move [X31-128], D11
	002 Move [X31-120], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X29
	006 Move [X31+40], X30
	007 Move [X31+48], X28
	008 Move [X31+56], X27
	009 Move [X31+64], X26
	010 Move [X31+72], X25
	011 Move [X31+80], X24
	012 Move [X31+88], X23
	013 Move [X31+96], X22
	014 Move [X31+104], X21
	015 Move [X31+112], X20
	016 Move [X31+120], X19
	017 Move X22, 0x24F8000
	018 Move W8, [X22+1406]
	019 Move X21, X2
	020 Move X20, X1
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {40}
	026 Move X0, 0x221F000
	027 Move X0, [X0+848]
	028 Call 0x1C17CF4
	029 Move X0, 0x221F000
	030 Move X0, [X0+1112]
	031 Call 0x1C17CF4
	032 Move X0, 0x221F000
	033 Move X0, [X0+1120]
	034 Call 0x1C17CF4
	035 Move X0, 0x221F000
	036 Move X0, [X0+952]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X22+1406], W8
	040 Compare X21, 0
	041 JumpIfEqual {243}
	042 Move X22, 0x221F000
	043 Move X22, [X22+848]
	044 Move W8, [X21+24]
	045 Move X23, 0x221F000
	046 Move X28, 0x221F000
	047 Move X0, [X22]
	048 Move X23, [X23+1120]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CINC not yet implemented."
	051 Move W9, [X0+224]
	052 Move X28, [X28+1112]
	053 NotImplemented "Instruction SBFM not yet implemented."
	054 Compare W9, 0
	055 JumpIfNotEqual {58}
	056 Call 0x1C17DFC
	057 Move X0, [X22]
	058 Move X8, [X0+184]
	059 Move X2, [X23]
	060 Move X0, X21
	061 Move X1, [X8]
	062 Call List`1<Object>.Sort, X0, X1
	063 Move X3, [X28]
	064 Move X0, X21
	065 Move W1, W31
	066 Move W2, W24
	067 Call List`1<Object>.GetRange, X0, X1, X2
	068 Move W8, [X21+24]
	069 Move X3, [X28]
	070 Move X25, X0
	071 Move X0, X21
	072 Subtract W2, W8, W24
	073 Move W1, W24
	074 Call List`1<Object>.GetRange, X0, X1, X2
	075 Move X26, X0
	076 Move X0, X25
	077 Call BVHNode.SAofList, X0
	078 Compare X25, 0
	079 JumpIfEqual {243}
	080 Move W27, [X25+24]
	081 Move X0, X26
	082 Move V8, V0
	083 Call BVHNode.SAofList, X0
	084 Compare X26, 0
	085 JumpIfEqual {243}
	086 Move X8, [X22]
	087 Move X2, [X23]
	088 Move V11, [X26+24]
	089 Move X0, X21
	090 Move X8, [X8+184]
	091 Move V9, V0
	092 Move X1, [X8+8]
	093 Call List`1<Object>.Sort, X0, X1
	094 Move X3, [X28]
	095 Move X0, X21
	096 Move W1, W31
	097 Move W2, W24
	098 Call List`1<Object>.GetRange, X0, X1, X2
	099 Move W8, [X21+24]
	100 Move X3, [X28]
	101 Move X23, X0
	102 Move X0, X21
	103 Subtract W2, W8, W24
	104 Move W1, W24
	105 Call List`1<Object>.GetRange, X0, X1, X2
	106 Move X22, X0
	107 Move X0, X23
	108 Call BVHNode.SAofList, X0
	109 Compare X23, 0
	110 JumpIfEqual {243}
	111 Move W29, [X23+24]
	112 Move X0, X22
	113 Move V10, V0
	114 Call BVHNode.SAofList, X0
	115 Compare X22, 0
	116 JumpIfEqual {243}
	117 Move V3, [X22+24]
	118 NotImplemented "Instruction SCVTF not yet implemented."
	119 NotImplemented "Instruction SCVTF not yet implemented."
	120 Multiply S1, S8, S1
	121 Multiply S2, S9, S2
	122 Move X27, 0x221F000
	123 Add S8, S1, S2
	124 NotImplemented "Instruction SCVTF not yet implemented."
	125 NotImplemented "Instruction SCVTF not yet implemented."
	126 Move X27, [X27+848]
	127 Multiply S1, S10, S1
	128 Multiply S0, S0, S2
	129 Add S9, S1, S0
	130 NotImplemented "Instruction FCMP not yet implemented."
	131 Move X0, X31
	132 Call Random.get_value
	133 Move X8, -20938752
	134 Move V1, [X8+4084]
	135 NotImplemented "Instruction FCMP not yet implemented."
	136 Move X22, X26
	137 Move X23, X25
	138 Move V9, V8
	139 Move X0, [X27]
	140 Move W8, [X0+224]
	141 Compare W8, 0
	142 JumpIfNotEqual {145}
	143 Call 0x1C17DFC
	144 Move X0, [X27]
	145 Move X8, [X0+184]
	146 Move X0, X21
	147 Move X1, [X8+16]
	148 Move X8, 0x221F000
	149 Move X8, [X8+1120]
	150 Move X2, [X8]
	151 Call List`1<Object>.Sort, X0, X1
	152 Move X3, [X28]
	153 Move X0, X21
	154 Move W1, W31
	155 Move W2, W24
	156 Call List`1<Object>.GetRange, X0, X1, X2
	157 Move W8, [X21+24]
	158 Move X3, [X28]
	159 Move X25, X0
	160 Move X0, X21
	161 Subtract W2, W8, W24
	162 Move W1, W24
	163 Call List`1<Object>.GetRange, X0, X1, X2
	164 Move X21, X0
	165 Move X0, X25
	166 Call BVHNode.SAofList, X0
	167 Compare X25, 0
	168 JumpIfEqual {243}
	169 Move W24, [X25+24]
	170 Move X0, X21
	171 Move V8, V0
	172 Call BVHNode.SAofList, X0
	173 Compare X21, 0
	174 JumpIfEqual {243}
	175 Move V1, [X21+24]
	176 NotImplemented "Instruction SCVTF not yet implemented."
	177 Multiply S2, S8, S2
	178 NotImplemented "Instruction SCVTF not yet implemented."
	179 Multiply S0, S0, S1
	180 Add S0, S2, S0
	181 NotImplemented "Instruction FCMP not yet implemented."
	182 Move X0, X31
	183 Call Random.get_value
	184 Move X8, -20942848
	185 Move V1, [X8+4084]
	186 NotImplemented "Instruction FCMP not yet implemented."
	187 Move X22, X21
	188 Move X23, X25
	189 Compare X20, 0
	190 JumpIfEqual {243}
	191 Add X1, X19, 80
	192 Move X0, X20
	193 Call BVH.GetNextNode, X0, X1
	194 Move X21, X0
	195 Add X1, X19, 84
	196 Move X0, X20
	197 Call BVH.GetNextNode, X0, X1
	198 Move X8, [X27]
	199 Move W26, [X19+80]
	200 Move W25, [X19+72]
	201 Move W27, [X19+92]
	202 Move W9, [X8+224]
	203 Move X24, X0
	204 Compare W9, 0
	205 JumpIfNotEqual {208}
	206 Move X0, X8
	207 Call 0x1C17DFC
	208 Add W4, W27, 1
	209 Move X0, X21
	210 Move X1, X20
	211 Move W2, W26
	212 Move W3, W25
	213 Move X5, X23
	214 Call BVHNode.InitNode, X0, X1, X2, X3, X4, X5
	215 Move W8, [X19+92]
	216 Move W2, [X19+84]
	217 Move W3, [X19+72]
	218 Move X0, X24
	219 Add W4, W8, 1
	220 Move X1, X20
	221 Move X5, X22
	222 Call BVHNode.InitNode, X0, X1, X2, X3, X4, X5
	223 Move W8, 1
	224 Move [X19+112], W31
	225 Move [X19+88], W8
	226 Move X20, [X31+112]
	227 Move X19, [X31+120]
	228 Move X22, [X31+96]
	229 Move X21, [X31+104]
	230 Move X24, [X31+80]
	231 Move X23, [X31+88]
	232 Move X26, [X31+64]
	233 Move X25, [X31+72]
	234 Move X28, [X31+48]
	235 Move X27, [X31+56]
	236 Move X29, [X31+32]
	237 Move X30, [X31+40]
	238 Move D9, [X31+16]
	239 Move D8, [X31+24]
	240 Move D11, [X31+128]
	241 Move D10, [X31+136]
	242 Return 
	243 Call 0x1C17F20

Method: System.Void AddObjectPushdown(Fusion.LagCompensation.BVH bvh, ref Fusion.LagCompensation.BVHNode curNode, Fusion.HitboxRoot entry)

Disassembly:
	0x01EE3104 BL 0x1C16CF4
	0x01EE3108 MOVZ W8, 0x1
	0x01EE310C STRB W8, [X22 + 0x58E]
	0x01EE3110 LDR X0, [X21 + 0x10]
	0x01EE3114 CBZ X0, 0x1EE313C
	0x01EE3118 ADRP X8, 0x221D000
	0x01EE311C LDR X8, [X8 + 0x358]
	0x01EE3120 MOV X1, X20
	0x01EE3124 MOV X2, X19
	0x01EE3128 LDP X20, X19, [X31 + 0x20]
	0x01EE312C LDR X3, [X8]
	0x01EE3130 LDP X22, X21, [X31 + 0x10]
	0x01EE3134 LDR X30, [X31], #0x30
	0x01EE3138 B 0x2AA09F8
	0x01EE313C BL 0x1C16F20
	0x01EE3140 STP X30, X21, [X31 - 0x20]!
	0x01EE3144 STP X20, X19, [X31 + 0x10]
	0x01EE3148 ADRP X21, 0x24F6000
	0x01EE314C LDRB W8, [X21 + 0x58F]
	0x01EE3150 MOV X19, X1
	0x01EE3154 MOV X20, X0
	0x01EE3158 TBNZ X8, 0x0, 0x1EE3170
	0x01EE315C ADRP X0, 0x221D000
	0x01EE3160 LDR X0, [X0 + 0x4A0]
	0x01EE3164 BL 0x1C16CF4
	0x01EE3168 MOVZ W8, 0x1
	0x01EE316C STRB W8, [X21 + 0x58F]
	0x01EE3170 LDR X0, [X20 + 0x10]
	0x01EE3174 CBZ X0, 0x1EE3194
	0x01EE3178 ADRP X8, 0x221D000
	0x01EE317C LDR X8, [X8 + 0x4A0]
	0x01EE3180 MOV X1, X19
	0x01EE3184 LDP X20, X19, [X31 + 0x10]
	0x01EE3188 LDR X2, [X8]
	0x01EE318C LDP X30, X21, [X31], #0x20
	0x01EE3190 B 0x2A9EF1C
	0x01EE3194 BL 0x1C16F20
	0x01EE3198 STR X30, [X31 - 0x30]!
	0x01EE319C STP X22, X21, [X31 + 0x10]
	0x01EE31A0 STP X20, X19, [X31 + 0x20]
	0x01EE31A4 ADRP X22, 0x24F6000
	0x01EE31A8 LDRB W8, [X22 + 0x590]
	0x01EE31AC MOV W19, W2
	0x01EE31B0 MOV X20, X1
	0x01EE31B4 MOV X21, X0
	0x01EE31B8 TBNZ X8, 0x0, 0x1EE31D0
	0x01EE31BC ADRP X0, 0x221D000
	0x01EE31C0 LDR X0, [X0 + 0x3C8]
	0x01EE31C4 BL 0x1C16CF4
	0x01EE31C8 MOVZ W8, 0x1
	0x01EE31CC STRB W8, [X22 + 0x590]
	0x01EE31D0 LDR X0, [X21 + 0x10]
	0x01EE31D4 CBZ X0, 0x1EE31FC
	0x01EE31D8 ADRP X8, 0x221D000
	0x01EE31DC LDR X8, [X8 + 0x3C8]
	0x01EE31E0 MOV X1, X20
	0x01EE31E4 MOV W2, W19
	0x01EE31E8 LDP X20, X19, [X31 + 0x20]
	0x01EE31EC LDR X3, [X8]
	0x01EE31F0 LDP X22, X21, [X31 + 0x10]
	0x01EE31F4 LDR X30, [X31], #0x30
	0x01EE31F8 B 0x2A9EF88
	0x01EE31FC BL 0x1C16F20
	0x01EE3200 STP X30, X21, [X31 - 0x20]!
	0x01EE3204 STP X20, X19, [X31 + 0x10]
	0x01EE3208 ADRP X21, 0x24F6000
	0x01EE320C LDRB W8, [X21 + 0x591]
	0x01EE3210 MOV X19, X1
	0x01EE3214 MOV X20, X0
	0x01EE3218 TBNZ X8, 0x0, 0x1EE3230
	0x01EE321C ADRP X0, 0x221D000
	0x01EE3220 LDR X0, [X0 + 0x390]
	0x01EE3224 BL 0x1C16CF4
	0x01EE3228 MOVZ W8, 0x1
	0x01EE322C STRB W8, [X21 + 0x591]
	0x01EE3230 LDR X0, [X20 + 0x10]
	0x01EE3234 CBZ X0, 0x1EE3254
	0x01EE3238 ADRP X8, 0x221D000
	0x01EE323C LDR X8, [X8 + 0x390]
	0x01EE3240 MOV X1, X19
	0x01EE3244 LDP X20, X19, [X31 + 0x10]
	0x01EE3248 LDR X2, [X8]
	0x01EE324C LDP X30, X21, [X31], #0x20
	0x01EE3250 B 0x2AA03C4
	0x01EE3254 BL 0x1C16F20
	0x01EE3258 STR X30, [X31 - 0x30]!
	0x01EE325C STP X22, X21, [X31 + 0x10]
	0x01EE3260 STP X20, X19, [X31 + 0x20]
	0x01EE3264 ADRP X21, 0x24F6000
	0x01EE3268 ADRP X22, 0x221D000
	0x01EE326C ADRP X20, 0x221D000
	0x01EE3270 LDRB W8, [X21 + 0x592]
	0x01EE3274 LDR X22, [X22 + 0x4A8]
	0x01EE3278 LDR X20, [X20 + 0x4B0]
	0x01EE327C MOV X19, X0
	0x01EE3280 TBNZ X8, 0x0, 0x1EE32A4
	0x01EE3284 ADRP X0, 0x221D000
	0x01EE3288 LDR X0, [X0 + 0x4B0]
	0x01EE328C BL 0x1C16CF4
	0x01EE3290 ADRP X0, 0x221D000
	0x01EE3294 LDR X0, [X0 + 0x4A8]
	0x01EE3298 BL 0x1C16CF4
	0x01EE329C MOVZ W8, 0x1
	0x01EE32A0 STRB W8, [X21 + 0x592]
	0x01EE32A4 LDR X0, [X22]
	0x01EE32A8 BL 0x1C16F10
	0x01EE32AC LDR X1, [X20]
	0x01EE32B0 MOV X20, X0
	0x01EE32B4 BL 0x2A9E704
	0x01EE32B8 STR X20, [X19 + 0x10]
	0x01EE32BC MOV X0, X19
	0x01EE32C0 LDP X20, X19, [X31 + 0x20]
	0x01EE32C4 LDP X22, X21, [X31 + 0x10]
	0x01EE32C8 MOV X1, X31
	0x01EE32CC LDR X30, [X31], #0x30
	0x01EE32D0 B 0x33BDD8C
	0x01EE32D4 STP D15, D14, [X31 - 0x80]!
	0x01EE32D8 STP D13, D12, [X31 + 0x10]
	0x01EE32DC STP D11, D10, [X31 + 0x20]
	0x01EE32E0 STP D9, D8, [X31 + 0x30]
	0x01EE32E4 STR X29, [X31 + 0x40]
	0x01EE32E8 STP X30, X23, [X31 + 0x50]
	0x01EE32EC STP X22, X21, [X31 + 0x60]
	0x01EE32F0 STP X20, X19, [X31 + 0x70]
	0x01EE32F4 SUB X31, X31, 0x1B0
	0x01EE32F8 MOV W20, W2
	0x01EE32FC MOV X21, X1
	0x01EE3300 MOV X23, X0
	0x01EE3304 ADD X0, X31, 0x110
	0x01EE3308 MOVZ W2, 0x90
	0x01EE330C MOV W1, W31
	0x01EE3310 MOV X19, X4
	0x01EE3314 MOV X22, X3
	0x01EE3318 BL 0x3EB1B10

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0x24F7000
	015 Move X24, 0x221E000
	016 Move W8, [X22+1407]
	017 Move X24, [X24+848]
	018 Move X21, X2
	019 Move X20, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {36}
	025 Move X0, 0x221E000
	026 Move X0, [X0+848]
	027 Call 0x1C17CF4
	028 Move X0, 0x221B000
	029 Move X0, [X0+3544]
	030 Call 0x1C17CF4
	031 Move X0, 0x221E000
	032 Move X0, [X0+880]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+1407], W8
	036 Move X0, [X24]
	037 Move [X31+8], X31
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Compare X19, 0
	043 JumpIfEqual {153}
	044 Move X25, [X19+16]
	045 Compare X25, 0
	046 JumpIfEqual {153}
	047 NotImplemented "Instruction LDRSW not yet implemented."
	048 Move W8, [X25+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W8, 120
	051 NotImplemented "Instruction MADD not yet implemented."
	052 Add X27, X27, 116
	053 Move W28, [X27]
	054 Move X0, [X19+48]
	055 Compare X0, 0
	056 JumpIfEqual {153}
	057 Move W2, [X0+24]
	058 Move W8, [X0+28]
	059 Move W29, [X20+72]
	060 Add W8, W8, 1
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move [X0+24], W31
	063 Move [X0+28], W8
	064 Move X0, [X0+16]
	065 Move W1, W31
	066 Move X3, X31
	067 Call Array.Clear, X0, X1, X2
	068 Move X0, [X19+48]
	069 Compare X0, 0
	070 JumpIfEqual {153}
	071 Move X9, 0x221B000
	072 Move X9, [X9+3544]
	073 Move W10, [X0+28]
	074 Move X8, [X0+16]
	075 Move X9, [X9]
	076 Add W10, W10, 1
	077 Move [X0+28], W10
	078 Compare X8, 0
	079 JumpIfEqual {153}
	080 NotImplemented "Instruction LDRSW not yet implemented."
	081 Move W11, [X8+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Add W9, W10, 1
	084 Add X8, X8, X10
	085 Move [X0+24], W9
	086 Move [X8+32], X21
	087 Move X8, [X9+32]
	088 Move X1, X21
	089 Move X8, [X8+192]
	090 Move X2, [X8+112]
	091 Call List`1<Object>.AddWithResize, X0, X1
	092 Add X1, X31, 12
	093 Move X0, X19
	094 Call BVH.GetNextNode, X0, X1
	095 Move W8, 120
	096 Move W21, [X31+12]
	097 NotImplemented "Instruction NOP not yet implemented."
	098 NotImplemented "Instruction MADD not yet implemented."
	099 Move W3, [X8+104]
	100 Move W4, [X20+92]
	101 Move X1, X19
	102 Move W2, W21
	103 Move X5, X31
	104 Move X22, X0
	105 Call BVHNode.InitNode, X0, X1, X2, X3, X4, X5
	106 Add X1, X31, 8
	107 Move X0, X19
	108 Call BVH.GetNextNode, X0, X1
	109 Move W8, [X22+92]
	110 Move W2, [X31+8]
	111 Move X5, [X19+48]
	112 Move X1, X19
	113 Add W4, W8, 1
	114 Move W3, W21
	115 Move X23, X0
	116 Call BVHNode.InitNode, X0, X1, X2, X3, X4, X5
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move [X27], W21
	119 Move W8, 120
	120 NotImplemented "Instruction MADD not yet implemented."
	121 Move [X8+112], W21
	122 Move [X20+76], W21
	123 Move W8, [X22+92]
	124 Add W8, W8, 1
	125 Move [X20+92], W8
	126 Move X0, [X24]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 Move W8, [X20+72]
	132 Move X0, X19
	133 Move W1, W21
	134 Move X20, [X31+96]
	135 Move X19, [X31+104]
	136 Move [X22+80], W8
	137 Move W8, [X23+72]
	138 Move X24, [X31+64]
	139 Move X23, [X31+72]
	140 Move X26, [X31+48]
	141 Move X25, [X31+56]
	142 Move X28, [X31+32]
	143 Move X27, [X31+40]
	144 Move [X22+84], W8
	145 Move X22, [X31+80]
	146 Move X21, [X31+88]
	147 Move X29, [X31+16]
	148 Move X30, [X31+24]
	149 Move W2, 1
	150 Add X31, X31, 112
	151 Call BVHNode.ChildRefit, X0, X1, X2
	152 Return 
	153 Call 0x1C17F20
	154 Call 0x1C17F28

Method: System.Void Add(Fusion.LagCompensation.BVH bvh, ref Fusion.LagCompensation.BVHNode startNode, Fusion.HitboxRoot entry, ref UnityEngine.Bounds newObBox, System.Single newObSah)

Disassembly:
	0x01EE0030 BL 0x1C16F20
	0x01EE0034 SUB X31, X31, 0x60
	0x01EE0038 STR X30, [X31 + 0x10]
	0x01EE003C STP X26, X25, [X31 + 0x20]
	0x01EE0040 STP X24, X23, [X31 + 0x30]
	0x01EE0044 STP X22, X21, [X31 + 0x40]
	0x01EE0048 STP X20, X19, [X31 + 0x50]
	0x01EE004C ADRP X21, 0x24F9000
	0x01EE0050 ADRP X22, 0x2213000
	0x01EE0054 ADRP X23, 0x2220000
	0x01EE0058 LDRB W8, [X21 + 0x575]
	0x01EE005C LDR X22, [X22 + 0x758]
	0x01EE0060 LDR X23, [X23 + 0x3D0]
	0x01EE0064 MOV X19, X1
	0x01EE0068 MOV X20, X0
	0x01EE006C TBNZ X8, 0x0, 0x1EE00A8
	0x01EE0070 ADRP X0, 0x2220000
	0x01EE0074 LDR X0, [X0 + 0x350]
	0x01EE0078 BL 0x1C16CF4
	0x01EE007C ADRP X0, 0x2213000
	0x01EE0080 LDR X0, [X0 + 0x758]
	0x01EE0084 BL 0x1C16CF4
	0x01EE0088 ADRP X0, 0x2220000
	0x01EE008C LDR X0, [X0 + 0x3D8]
	0x01EE0090 BL 0x1C16CF4
	0x01EE0094 ADRP X0, 0x2220000
	0x01EE0098 LDR X0, [X0 + 0x3D0]
	0x01EE009C BL 0x1C16CF4
	0x01EE00A0 MOVZ W8, 0x1
	0x01EE00A4 STRB W8, [X21 + 0x575]
	0x01EE00A8 LDR W8, [X20 + 0x38]
	0x01EE00AC LDR X0, [X22]
	0x01EE00B0 ADD X1, X31, 0x1C
	0x01EE00B4 STR W8, [X31 + 0x1C]
	0x01EE00B8 BL 0x1C16E04
	0x01EE00BC MOV X21, X0
	0x01EE00C0 LDR W8, [X20 + 0x3C]
	0x01EE00C4 LDR X0, [X22]
	0x01EE00C8 ADD X1, X31, 0x18
	0x01EE00CC STR W8, [X31 + 0x18]
	0x01EE00D0 BL 0x1C16E04
	0x01EE00D4 LDR X8, [X23]
	0x01EE00D8 MOV X2, X0
	0x01EE00DC MOV X1, X21
	0x01EE00E0 MOV X3, X31
	0x01EE00E4 MOV X0, X8
	0x01EE00E8 BL 0x3227BD4
	0x01EE00EC CBZ X19, 0x1EE01C4
	0x01EE00F0 MOV X1, X0
	0x01EE00F4 MOV X0, X19
	0x01EE00F8 MOV X2, X31
	0x01EE00FC BL 0x32338A8
	0x01EE0100 LDR W8, [X20 + 0x38]
	0x01EE0104 CMP W8, 0x1
	0x01EE0108 B.LT 0x1EE01A8
	0x01EE010C ADRP X23, 0x2220000
	0x01EE0110 ADRP X24, 0x2220000
	0x01EE0114 LDR X23, [X23 + 0x3D8]
	0x01EE0118 LDR X24, [X24 + 0x350]
	0x01EE011C MOV X21, X31
	0x01EE0120 MOVZ W25, 0x20
	0x01EE0124 LDR X0, [X22]
	0x01EE0128 ADD X1, X31, 0xC
	0x01EE012C STR W21, [X31 + 0xC]
	0x01EE0130 BL 0x1C16E04
	0x01EE0134 LDR X8, [X23]
	0x01EE0138 MOV X1, X0
	0x01EE013C MOV X2, X31
	0x01EE0140 MOV X0, X8
	0x01EE0144 BL 0x321EFD0
	0x01EE0148 MOV X1, X0
	0x01EE014C MOV X0, X19
	0x01EE0150 MOV X2, X31
	0x01EE0154 BL 0x32333E0
	0x01EE0158 LDR X26, [X20 + 0x10]
	0x01EE015C CBZ X26, 0x1EE01C4
	0x01EE0160 LDR X0, [X24]
	0x01EE0164 LDR W8, [X0 + 0xE0]
	0x01EE0168 CBNZ W8, 0x1EE0170
	0x01EE016C BL 0x1C16DFC
	0x01EE0170 LDR W8, [X26 + 0x18]
	0x01EE0174 CMP X21, X8
	0x01EE0178 B.CS 0x1EE01C8
	0x01EE017C ADD X0, X26, X25
	0x01EE0180 MOV X1, X19
	0x01EE0184 BL 0x1EE01CC
	0x01EE0188 MOV X0, X19
	0x01EE018C MOV X1, X31
	0x01EE0190 BL 0x3233888
	0x01EE0194 LDRSW X8, [X20 + 0x38]
	0x01EE0198 ADD X21, X21, 0x1
	0x01EE019C ADD X25, X25, 0x78
	0x01EE01A0 CMP X21, X8
	0x01EE01A4 B.LT 0x1EE0124
	0x01EE01A8 LDP X20, X19, [X31 + 0x50]
	0x01EE01AC LDP X22, X21, [X31 + 0x40]
	0x01EE01B0 LDP X24, X23, [X31 + 0x30]
	0x01EE01B4 LDP X26, X25, [X31 + 0x20]
	0x01EE01B8 LDR X30, [X31 + 0x10]
	0x01EE01BC ADD X31, X31, 0x60
	0x01EE01C0 RET
	0x01EE01C4 BL 0x1C16F20
	0x01EE01C8 BL 0x1C16F28
	0x01EE01CC SUB X31, X31, 0x70
	0x01EE01D0 STP X30, X27, [X31 + 0x20]
	0x01EE01D4 STP X26, X25, [X31 + 0x30]
	0x01EE01D8 STP X24, X23, [X31 + 0x40]
	0x01EE01DC STP X22, X21, [X31 + 0x50]
	0x01EE01E0 STP X20, X19, [X31 + 0x60]
	0x01EE01E4 ADRP X22, 0x24F9000
	0x01EE01E8 ADRP X23, 0x2213000
	0x01EE01EC ADRP X21, 0x2220000
	0x01EE01F0 LDRB W8, [X22 + 0x58B]
	0x01EE01F4 LDR X23, [X23 + 0x758]
	0x01EE01F8 LDR X21, [X21 + 0x3E0]
	0x01EE01FC MOV X19, X1
	0x01EE0200 MOV X20, X0
	0x01EE0204 TBNZ X8, 0x0, 0x1EE02B8
	0x01EE0208 ADRP X0, 0x2213000
	0x01EE020C LDR X0, [X0 + 0xB58]
	0x01EE0210 BL 0x1C16CF4
	0x01EE0214 ADRP X0, 0x2213000
	0x01EE0218 LDR X0, [X0 + 0x758]
	0x01EE021C BL 0x1C16CF4
	0x01EE0220 ADRP X0, 0x2220000
	0x01EE0224 LDR X0, [X0 + 0x3E8]
	0x01EE0228 BL 0x1C16CF4
	0x01EE022C ADRP X0, 0x221B000
	0x01EE0230 LDR X0, [X0 + 0x9B0]
	0x01EE0234 BL 0x1C16CF4
	0x01EE0238 ADRP X0, 0x2220000
	0x01EE023C LDR X0, [X0 + 0x3F0]
	0x01EE0240 BL 0x1C16CF4
	0x01EE0244 ADRP X0, 0x2220000
	0x01EE0248 LDR X0, [X0 + 0x3E0]
	0x01EE024C BL 0x1C16CF4
	0x01EE0250 ADRP X0, 0x2220000
	0x01EE0254 LDR X0, [X0 + 0x3F8]
	0x01EE0258 BL 0x1C16CF4
	0x01EE025C ADRP X0, 0x221C000
	0x01EE0260 LDR X0, [X0 + 0xD20]
	0x01EE0264 BL 0x1C16CF4
	0x01EE0268 ADRP X0, 0x2220000
	0x01EE026C LDR X0, [X0 + 0x400]
	0x01EE0270 BL 0x1C16CF4
	0x01EE0274 ADRP X0, 0x2220000
	0x01EE0278 LDR X0, [X0 + 0x408]
	0x01EE027C BL 0x1C16CF4
	0x01EE0280 ADRP X0, 0x2220000
	0x01EE0284 LDR X0, [X0 + 0x410]
	0x01EE0288 BL 0x1C16CF4
	0x01EE028C ADRP X0, 0x2220000
	0x01EE0290 LDR X0, [X0 + 0x418]
	0x01EE0294 BL 0x1C16CF4
	0x01EE0298 ADRP X0, 0x2220000
	0x01EE029C LDR X0, [X0 + 0x420]
	0x01EE02A0 BL 0x1C16CF4
	0x01EE02A4 ADRP X0, 0x2220000
	0x01EE02A8 LDR X0, [X0 + 0x428]
	0x01EE02AC BL 0x1C16CF4
	0x01EE02B0 MOVZ W8, 0x1
	0x01EE02B4 STRB W8, [X22 + 0x58B]
	0x01EE02B8 LDR W8, [X20 + 0x48]
	0x01EE02BC LDR X0, [X23]
	0x01EE02C0 ADD X1, X31, 0x1C
	0x01EE02C4 STR W8, [X31 + 0x1C]
	0x01EE02C8 BL 0x1C16E04
	0x01EE02CC LDR X8, [X21]
	0x01EE02D0 MOV X1, X0
	0x01EE02D4 MOV X2, X31
	0x01EE02D8 MOV X0, X8
	0x01EE02DC BL 0x321EFD0
	0x01EE02E0 CBZ X19, 0x1EE05C4
	0x01EE02E4 ADRP X24, 0x2213000
	0x01EE02E8 ADRP X26, 0x2220000
	0x01EE02EC ADRP X27, 0x2220000
	0x01EE02F0 ADRP X25, 0x2220000
	0x01EE02F4 ADRP X22, 0x2220000
	0x01EE02F8 ADRP X21, 0x2220000
	0x01EE02FC LDR X24, [X24 + 0xB58]
	0x01EE0300 LDR X26, [X26 + 0x400]
	0x01EE0304 LDR X27, [X27 + 0x3F8]
	0x01EE0308 LDR X25, [X25 + 0x428]
	0x01EE030C LDR X22, [X22 + 0x420]
	0x01EE0310 LDR X21, [X21 + 0x408]
	0x01EE0314 MOV X1, X0
	0x01EE0318 MOV X0, X19
	0x01EE031C MOV X2, X31
	0x01EE0320 BL 0x32333E0
	0x01EE0324 LDRB W8, [X20 + 0x58]
	0x01EE0328 LDR X0, [X24]
	0x01EE032C ADD X1, X31, 0x18
	0x01EE0330 STRB W8, [X31 + 0x18]
	0x01EE0334 BL 0x1C16E04
	0x01EE0338 LDR X8, [X26]
	0x01EE033C MOV X1, X0
	0x01EE0340 MOV X2, X31
	0x01EE0344 MOV X0, X8
	0x01EE0348 BL 0x321EFD0
	0x01EE034C MOV X1, X0
	0x01EE0350 MOV X0, X19
	0x01EE0354 MOV X2, X31
	0x01EE0358 BL 0x32333E0
	0x01EE035C LDRB W8, [X20 + 0x60]
	0x01EE0360 LDR X0, [X24]
	0x01EE0364 ADD X1, X31, 0x14
	0x01EE0368 STRB W8, [X31 + 0x14]
	0x01EE036C BL 0x1C16E04
	0x01EE0370 LDR X8, [X27]
	0x01EE0374 MOV X1, X0
	0x01EE0378 MOV X2, X31
	0x01EE037C MOV X0, X8
	0x01EE0380 BL 0x321EFD0
	0x01EE0384 MOV X1, X0
	0x01EE0388 MOV X0, X19
	0x01EE038C MOV X2, X31
	0x01EE0390 BL 0x32333E0
	0x01EE0394 LDR W8, [X20 + 0x64]
	0x01EE0398 LDR X0, [X23]
	0x01EE039C ADD X1, X31, 0x10
	0x01EE03A0 STR W8, [X31 + 0x10]
	0x01EE03A4 BL 0x1C16E04
	0x01EE03A8 LDR X8, [X25]
	0x01EE03AC MOV X1, X0
	0x01EE03B0 MOV X2, X31
	0x01EE03B4 MOV X0, X8
	0x01EE03B8 BL 0x321EFD0
	0x01EE03BC MOV X1, X0
	0x01EE03C0 MOV X0, X19
	0x01EE03C4 MOV X2, X31
	0x01EE03C8 BL 0x32333E0
	0x01EE03CC LDR W8, [X20 + 0x5C]
	0x01EE03D0 LDR X0, [X23]
	0x01EE03D4 ADD X1, X31, 0xC
	0x01EE03D8 STR W8, [X31 + 0xC]
	0x01EE03DC BL 0x1C16E04
	0x01EE03E0 LDR X8, [X22]
	0x01EE03E4 MOV X1, X0
	0x01EE03E8 MOV X2, X31
	0x01EE03EC MOV X0, X8
	0x01EE03F0 BL 0x321EFD0
	0x01EE03F4 MOV X1, X0
	0x01EE03F8 MOV X0, X19
	0x01EE03FC MOV X2, X31
	0x01EE0400 BL 0x32333E0
	0x01EE0404 LDR X0, [X20 + 0x68]
	0x01EE0408 CBZ X0, 0x1EE0458
	0x01EE040C LDRB W8, [X0 + 0x30]
	0x01EE0410 LDR X22, [X21]
	0x01EE0414 TBNZ X8, 0x3, 0x1EE045C
	0x01EE0418 MOV X21, X31
	0x01EE041C MOV X3, X31
	0x01EE0420 MOVZ W8, 0x1
	0x01EE0424 CBNZ W8, 0x1EE046C
	0x01EE0428 ADRP X8, 0x221C000
	0x01EE042C ADRP X9, 0x221B000
	0x01EE0430 LDR X8, [X8 + 0xD20]
	0x01EE0434 LDR X9, [X9 + 0x9B0]
	0x01EE0438 MOV X0, X3
	0x01EE043C MOV X3, X31
	0x01EE0440 LDR X1, [X8]
	0x01EE0444 LDR X2, [X9]
	0x01EE0448 BL 0x32274B8
	0x01EE044C CBZ X21, 0x1EE05C4
	0x01EE0450 MOV X1, X0
	0x01EE0454 B 0x1EE049C
	0x01EE0458 LDR X22, [X21]
	0x01EE045C MOV W8, W31
	0x01EE0460 MOV X21, X19
	0x01EE0464 MOV X3, X22
	0x01EE0468 CBZ W8, 0x1EE0428
	0x01EE046C CBZ X0, 0x1EE05C4
	0x01EE0470 MOV X1, X31
	0x01EE0474 BL 0x3C389D4
	0x01EE0478 ADRP X8, 0x221B000
	0x01EE047C LDR X8, [X8 + 0x9B0]
	0x01EE0480 MOV X1, X0
	0x01EE0484 MOV X0, X22
	0x01EE0488 MOV X3, X31
	0x01EE048C LDR X2, [X8]
	0x01EE0490 BL 0x32274B8
	0x01EE0494 MOV X1, X0
	0x01EE0498 MOV X21, X19
	0x01EE049C ADRP X26, 0x2220000
	0x01EE04A0 ADRP X27, 0x2220000
	0x01EE04A4 ADRP X25, 0x2220000
	0x01EE04A8 ADRP X22, 0x2220000
	0x01EE04AC LDR X26, [X26 + 0x418]
	0x01EE04B0 LDR X27, [X27 + 0x410]
	0x01EE04B4 LDR X25, [X25 + 0x3E8]
	0x01EE04B8 LDR X22, [X22 + 0x3F0]
	0x01EE04BC MOV X0, X21
	0x01EE04C0 MOV X2, X31
	0x01EE04C4 BL 0x32333E0
	0x01EE04C8 LDR W8, [X20 + 0x4C]
	0x01EE04CC LDR X0, [X23]
	0x01EE04D0 ADD X1, X31, 0x1C
	0x01EE04D4 STR W8, [X31 + 0x1C]
	0x01EE04D8 BL 0x1C16E04
	0x01EE04DC LDR X8, [X26]
	0x01EE04E0 MOV X1, X0
	0x01EE04E4 MOV X2, X31
	0x01EE04E8 MOV X0, X8
	0x01EE04EC BL 0x321EFD0
	0x01EE04F0 MOV X1, X0
	0x01EE04F4 MOV X0, X19
	0x01EE04F8 MOV X2, X31
	0x01EE04FC BL 0x32333E0
	0x01EE0500 LDRB W8, [X20 + 0x70]
	0x01EE0504 LDR X0, [X24]
	0x01EE0508 ADD X1, X31, 0x18
	0x01EE050C STRB W8, [X31 + 0x18]
	0x01EE0510 BL 0x1C16E04
	0x01EE0514 LDR X8, [X27]
	0x01EE0518 MOV X1, X0
	0x01EE051C MOV X2, X31
	0x01EE0520 MOV X0, X8
	0x01EE0524 BL 0x321EFD0
	0x01EE0528 MOV X1, X0
	0x01EE052C MOV X0, X19
	0x01EE0530 MOV X2, X31
	0x01EE0534 BL 0x32333E0
	0x01EE0538 LDR W8, [X20 + 0x50]
	0x01EE053C LDR X0, [X23]
	0x01EE0540 ADD X1, X31, 0x10
	0x01EE0544 STR W8, [X31 + 0x10]
	0x01EE0548 BL 0x1C16E04
	0x01EE054C LDR X8, [X25]
	0x01EE0550 MOV X1, X0
	0x01EE0554 MOV X2, X31
	0x01EE0558 MOV X0, X8
	0x01EE055C BL 0x321EFD0
	0x01EE0560 MOV X1, X0
	0x01EE0564 MOV X0, X19
	0x01EE0568 MOV X2, X31
	0x01EE056C BL 0x32333E0
	0x01EE0570 LDR W8, [X20 + 0x54]
	0x01EE0574 LDR X0, [X23]
	0x01EE0578 ADD X1, X31, 0xC
	0x01EE057C STR W8, [X31 + 0xC]
	0x01EE0580 BL 0x1C16E04
	0x01EE0584 LDR X8, [X22]
	0x01EE0588 MOV X1, X0
	0x01EE058C MOV X2, X31
	0x01EE0590 MOV X0, X8
	0x01EE0594 BL 0x321EFD0
	0x01EE0598 MOV X1, X0
	0x01EE059C MOV X0, X19
	0x01EE05A0 MOV X2, X31
	0x01EE05A4 BL 0x32333E0
	0x01EE05A8 LDP X20, X19, [X31 + 0x60]
	0x01EE05AC LDP X22, X21, [X31 + 0x50]
	0x01EE05B0 LDP X24, X23, [X31 + 0x40]
	0x01EE05B4 LDP X26, X25, [X31 + 0x30]
	0x01EE05B8 LDP X30, X27, [X31 + 0x20]
	0x01EE05BC ADD X31, X31, 0x70
	0x01EE05C0 RET
	0x01EE05C4 BL 0x1C16F20
	0x01EE05C8 STR X30, [X31 - 0x20]!
	0x01EE05CC STP X20, X19, [X31 + 0x10]
	0x01EE05D0 LDR V0, [X1]
	0x01EE05D4 LDUR V2, [X1 + 0xC]
	0x01EE05D8 LDR V1, [X1 + 0x8]
	0x01EE05DC LDR V3, [X1 + 0x14]
	0x01EE05E0 MOV X20, X1
	0x01EE05E4 FSUB V0.2S, V0.2S, V2.2S
	0x01EE05E8 MOV X1, X31
	0x01EE05EC FSUB S2, S1, S3
	0x01EE05F0 MOV S1, V0.S[1]
	0x01EE05F4 MOV X19, X0
	0x01EE05F8 BL 0x3C0A198
	0x01EE05FC TBZ X0, 0x0, 0x1EE0630
	0x01EE0600 LDR V0, [X20]
	0x01EE0604 LDUR V2, [X20 + 0xC]
	0x01EE0608 LDR V1, [X20 + 0x8]
	0x01EE060C LDR V3, [X20 + 0x14]
	0x01EE0610 MOV X0, X19
	0x01EE0614 LDP X20, X19, [X31 + 0x10]
	0x01EE0618 FADD V0.2S, V0.2S, V2.2S
	0x01EE061C FADD S2, S1, S3
	0x01EE0620 MOV S1, V0.S[1]
	0x01EE0624 MOV X1, X31
	0x01EE0628 LDR X30, [X31], #0x20
	0x01EE062C B 0x3C0A198
	0x01EE0630 LDP X20, X19, [X31 + 0x10]
	0x01EE0634 MOV W0, W31
	0x01EE0638 LDR X30, [X31], #0x20
	0x01EE063C RET
	0x01EE0640 LDR W0, [X0 + 0x48]
	0x01EE0644 RET
	0x01EE0648 LDR W8, [X0 + 0x48]
	0x01EE064C CMP W8, 0x0
	0x01EE0650 CSET W0, GT
	0x01EE0654 RET
	0x01EE0658 LDR W8, [X0 + 0x48]
	0x01EE065C CMP W8, 0x1
	0x01EE0660 CSET W0, EQ
	0x01EE0664 RET
	0x01EE0668 LDR W8, [X0 + 0x4C]
	0x01EE066C CMP W8, 0x0
	0x01EE0670 CSET W0, GT
	0x01EE0674 RET
	0x01EE0678 LDR W8, [X0 + 0x50]
	0x01EE067C CMP W8, 0x0
	0x01EE0680 CSET W0, GT
	0x01EE0684 RET
	0x01EE0688 LDR W8, [X0 + 0x54]
	0x01EE068C CMP W8, 0x0
	0x01EE0690 CSET W0, GT
	0x01EE0694 RET
	0x01EE0698 STR X30, [X31 - 0x10]!
	0x01EE069C CBZ X1, 0x1EE06CC
	0x01EE06A0 LDR X8, [X1 + 0x10]
	0x01EE06A4 CBZ X8, 0x1EE06CC
	0x01EE06A8 LDRSW X9, [X0 + 0x4C]
	0x01EE06AC LDR W10, [X8 + 0x18]
	0x01EE06B0 CMP W9, W10
	0x01EE06B4 B.CS 0x1EE06D0
	0x01EE06B8 MOVZ W10, 0x78
	0x01EE06BC MADD X8, X9, X10, X8
	0x01EE06C0 ADD X0, X8, 0x20
	0x01EE06C4 LDR X30, [X31], #0x10
	0x01EE06C8 RET
	0x01EE06CC BL 0x1C16F20
	0x01EE06D0 BL 0x1C16F28
	0x01EE06D4 STR X30, [X31 - 0x10]!
	0x01EE06D8 CBZ X1, 0x1EE0708
	0x01EE06DC LDR X8, [X1 + 0x10]
	0x01EE06E0 CBZ X8, 0x1EE0708
	0x01EE06E4 LDRSW X9, [X0 + 0x54]
	0x01EE06E8 LDR W10, [X8 + 0x18]
	0x01EE06EC CMP W9, W10
	0x01EE06F0 B.CS 0x1EE070C
	0x01EE06F4 MOVZ W10, 0x78
	0x01EE06F8 MADD X8, X9, X10, X8
	0x01EE06FC ADD X0, X8, 0x20
	0x01EE0700 LDR X30, [X31], #0x10
	0x01EE0704 RET
	0x01EE0708 BL 0x1C16F20
	0x01EE070C BL 0x1C16F28
	0x01EE0710 STR X30, [X31 - 0x10]!
	0x01EE0714 CBZ X1, 0x1EE0744
	0x01EE0718 LDR X8, [X1 + 0x10]
	0x01EE071C CBZ X8, 0x1EE0744
	0x01EE0720 LDRSW X9, [X0 + 0x50]
	0x01EE0724 LDR W10, [X8 + 0x18]
	0x01EE0728 CMP W9, W10
	0x01EE072C B.CS 0x1EE0748
	0x01EE0730 MOVZ W10, 0x78
	0x01EE0734 MADD X8, X9, X10, X8
	0x01EE0738 ADD X0, X8, 0x20
	0x01EE073C LDR X30, [X31], #0x10
	0x01EE0740 RET
	0x01EE0744 BL 0x1C16F20
	0x01EE0748 BL 0x1C16F28
	0x01EE074C STR X30, [X31 - 0x30]!
	0x01EE0750 STP X22, X21, [X31 + 0x10]
	0x01EE0754 STP X20, X19, [X31 + 0x20]
	0x01EE0758 ADRP X22, 0x24F9000
	0x01EE075C ADRP X21, 0x2213000
	0x01EE0760 ADRP X20, 0x2220000
	0x01EE0764 LDRB W8, [X22 + 0x577]
	0x01EE0768 LDR X21, [X21 + 0x758]
	0x01EE076C LDR X20, [X20 + 0x430]
	0x01EE0770 MOV X19, X0
	0x01EE0774 TBNZ X8, 0x0, 0x1EE0798
	0x01EE0778 ADRP X0, 0x2213000
	0x01EE077C LDR X0, [X0 + 0x758]
	0x01EE0780 BL 0x1C16CF4
	0x01EE0784 ADRP X0, 0x2220000
	0x01EE0788 LDR X0, [X0 + 0x430]
	0x01EE078C BL 0x1C16CF4
	0x01EE0790 MOVZ W8, 0x1
	0x01EE0794 STRB W8, [X22 + 0x577]
	0x01EE0798 LDR W8, [X19 + 0x48]
	0x01EE079C LDR X0, [X21]
	0x01EE07A0 ADD X1, X31, 0xC
	0x01EE07A4 STR W8, [X31 + 0xC]
	0x01EE07A8 BL 0x1C16E04
	0x01EE07AC LDR X8, [X20]
	0x01EE07B0 MOV X1, X0
	0x01EE07B4 MOV X2, X31
	0x01EE07B8 MOV X0, X8
	0x01EE07BC BL 0x321EFD0
	0x01EE07C0 LDP X20, X19, [X31 + 0x20]
	0x01EE07C4 LDP X22, X21, [X31 + 0x10]
	0x01EE07C8 LDR X30, [X31], #0x30
	0x01EE07CC RET
	0x01EE07D0 LDRB W0, [X0 + 0x70]
	0x01EE07D4 RET
	0x01EE07D8 LDR X8, [X0 + 0x68]
	0x01EE07DC CBZ X8, 0x1EE0800
	0x01EE07E0 LDRB W9, [X8 + 0x30]
	0x01EE07E4 TBNZ X9, 0x3, 0x1EE0800
	0x01EE07E8 LDR X8, [X8 + 0x40]
	0x01EE07EC CBZ X8, 0x1EE0800
	0x01EE07F0 LDRB W8, [X8 + 0x60]
	0x01EE07F4 ANDS W31, W8, 0x2
	0x01EE07F8 CSET W0, EQ
	0x01EE07FC RET
	0x01EE0800 MOV W0, W31
	0x01EE0804 RET
	0x01EE0808 STR X30, [X31 - 0x30]!
	0x01EE080C STP X22, X21, [X31 + 0x10]
	0x01EE0810 STP X20, X19, [X31 + 0x20]
	0x01EE0814 ADRP X21, 0x24F9000
	0x01EE0818 LDRB W8, [X21 + 0x578]
	0x01EE081C MOV X19, X1
	0x01EE0820 MOV X20, X0
	0x01EE0824 TBNZ X8, 0x0, 0x1EE0848
	0x01EE0828 ADRP X0, 0x2220000
	0x01EE082C LDR X0, [X0 + 0x350]
	0x01EE0830 BL 0x1C16CF4
	0x01EE0834 ADRP X0, 0x2215000
	0x01EE0838 LDR X0, [X0 + 0x9D8]
	0x01EE083C BL 0x1C16CF4
	0x01EE0840 MOVZ W8, 0x1
	0x01EE0844 STRB W8, [X21 + 0x578]
	0x01EE0848 LDR X21, [X20 + 0x68]
	0x01EE084C CBZ X21, 0x1EE091C
	0x01EE0850 ADRP X22, 0x24F9000
	0x01EE0854 LDRB W8, [X22 + 0x22B]
	0x01EE0858 CBNZ W8, 0x1EE0870
	0x01EE085C ADRP X0, 0x221D000
	0x01EE0860 LDR X0, [X0 + 0xD58]
	0x01EE0864 BL 0x1C16CF4
	0x01EE0868 MOVZ W8, 0x1
	0x01EE086C STRB W8, [X22 + 0x22B]
	0x01EE0870 ADRP X8, 0x221D000
	0x01EE0874 LDR X8, [X8 + 0xD58]
	0x01EE0878 MOV X0, X21
	0x01EE087C MOV W1, W31
	0x01EE0880 LDR X2, [X8]
	0x01EE0884 BL 0x22275E4
	0x01EE0888 LDR W8, [X0]
	0x01EE088C ORN W9, W31, W8, 0x0
	0x01EE0890 AND W9, W9, 0x1
	0x01EE0894 STRB W9, [X20 + 0x58]
	0x01EE0898 TBNZ X8, 0x0, 0x1EE090C
	0x01EE089C ADRP X21, 0x2220000
	0x01EE08A0 LDR X21, [X21 + 0x350]
	0x01EE08A4 LDR X0, [X21]
	0x01EE08A8 LDR W8, [X0 + 0xE0]
	0x01EE08AC CBNZ W8, 0x1EE08B4
	0x01EE08B0 BL 0x1C16DFC
	0x01EE08B4 MOV X0, X20
	0x01EE08B8 MOV X1, X19

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], D10
	003 Move [X31+40], D9
	004 Move [X31+48], D8
	005 Move [X31+56], X30
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X23, 0x24FA000
	013 Move X24, 0x2221000
	014 Move W8, [X23+1408]
	015 Move X24, [X24+848]
	016 Move X21, X3
	017 Move X20, X2
	018 Move X22, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0x2221000
	025 Move X0, [X0+848]
	026 Call 0x1C17CF4
	027 Move X0, 0x221E000
	028 Move X0, [X0+3544]
	029 Call 0x1C17CF4
	030 Move X0, 0x2221000
	031 Move X0, [X0+880]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X23+1408], W8
	035 Move X0, [X24]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move W8, [X22+80]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X0, [X24]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move W8, [X22+84]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X0, [X24]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move W8, [X22+72]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Compare X19, 0
	057 JumpIfEqual {582}
	058 Move X0, [X19+48]
	059 Compare X0, 0
	060 JumpIfEqual {582}
	061 Move W2, [X0+24]
	062 Move W8, [X0+28]
	063 Add W8, W8, 1
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move [X0+24], W31
	066 Move [X0+28], W8
	067 Move X0, [X0+16]
	068 Move W1, W31
	069 Move X3, X31
	070 Call Array.Clear, X0, X1, X2
	071 Move X0, [X19+48]
	072 Compare X0, 0
	073 JumpIfEqual {582}
	074 Move X21, 0x221E000
	075 Move X21, [X21+3544]
	076 Move W10, [X0+28]
	077 Move X8, [X0+16]
	078 Move X9, [X21]
	079 Add W10, W10, 1
	080 Move [X0+28], W10
	081 Compare X8, 0
	082 JumpIfEqual {582}
	083 NotImplemented "Instruction LDRSW not yet implemented."
	084 Move W11, [X8+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Add W9, W10, 1
	087 Add X8, X8, X10
	088 Move [X0+24], W9
	089 Move [X8+32], X20
	090 Call 0x1C17DFC
	091 Move X0, [X24]
	092 Move W23, [X22+112]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Compare W23, 0
	098 JumpIfNotEqual {381}
	099 Move W8, [X22+80]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X0, [X24]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move W8, [X22+84]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X0, [X24]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Compare X19, 0
	114 JumpIfEqual {582}
	115 Move X12, [X19+16]
	116 Compare X12, 0
	117 JumpIfEqual {582}
	118 NotImplemented "Instruction LDRSW not yet implemented."
	119 Move W10, [X12+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 NotImplemented "Instruction LDRSW not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move W10, 120
	124 Move W11, 120
	125 NotImplemented "Instruction MADD not yet implemented."
	126 Add X12, X12, 32
	127 NotImplemented "Instruction MADD not yet implemented."
	128 NotImplemented "Instruction MADD not yet implemented."
	129 Add X23, X10, 32
	130 Move S4, [X21]
	131 Move S6, [X21+4]
	132 Move S16, [X21+8]
	133 Move S5, [X21+12]
	134 Move S17, [X21+16]
	135 Move S18, [X21+20]
	136 Move S19, [X8+4]
	137 Move S20, [X8+8]
	138 Move S21, [X8+12]
	139 Move S22, [X8+16]
	140 Move V23, [X8+20]
	141 Move S24, [X22]
	142 Move S25, [X22+4]
	143 Move S26, [X22+8]
	144 Move S27, [X22+12]
	145 Move S28, [X22+16]
	146 Move S29, [X22+20]
	147 Move V30, [X23]
	148 Subtract S3, S4, S5
	149 Subtract S2, S6, S17
	150 Subtract S1, S16, S18
	151 Add S5, S4, S5
	152 Add S6, S6, S17
	153 Add S4, S16, S18
	154 Add S16, S19, S22
	155 Add S17, S20, S23
	156 Subtract S18, S19, S22
	157 Subtract S19, S20, S23
	158 Add S20, S24, S27
	159 Add S22, S25, S28
	160 Add S23, S26, S29
	161 Subtract S24, S24, S27
	162 Subtract S25, S25, S28
	163 Subtract S26, S26, S29
	164 Add S27, S30, S21
	165 Subtract S21, S30, S21
	166 Move S7, W31
	167 Subtract S28, S16, S18
	168 Subtract S29, S17, S19
	169 Subtract S30, S20, S24
	170 Subtract S31, S22, S25
	171 Subtract S8, S23, S26
	172 Subtract S9, S27, S21
	173 Move S0, 0.5
	174 Multiply S10, S30, S31
	175 Multiply S30, S30, S8
	176 Multiply S31, S31, S8
	177 Multiply S8, S28, S29
	178 Multiply S28, S9, S28
	179 Multiply S29, S9, S29
	180 Subtract S9, S7, S18
	181 Multiply S9, S9, S0
	182 Add S30, S10, S30
	183 Add S18, S18, S9
	184 Subtract S10, S7, S19
	185 Add S28, S28, S29
	186 Subtract S29, S7, S24
	187 Add S30, S31, S30
	188 Subtract S31, S7, S25
	189 Subtract S18, S18, S9
	190 Subtract S9, S7, S26
	191 Subtract S7, S7, S21
	192 Multiply S29, S29, S0
	193 Multiply S7, S7, S0
	194 Add S24, S24, S29
	195 Add S21, S21, S7
	196 Multiply S10, S10, S0
	197 Subtract S24, S24, S29
	198 Subtract S21, S21, S7
	199 Multiply S31, S31, S0
	200 Add S19, S19, S10
	201 Subtract S16, S16, S18
	202 Subtract S20, S20, S24
	203 Subtract S27, S27, S21
	204 Multiply S9, S9, S0
	205 Add S25, S25, S31
	206 Subtract S19, S19, S10
	207 Multiply S16, S16, S0
	208 Multiply S20, S20, S0
	209 Multiply S27, S27, S0
	210 Add S26, S26, S9
	211 Subtract S25, S25, S31
	212 Add S28, S8, S28
	213 Subtract S17, S17, S19
	214 Add S18, S18, S16
	215 Add S24, S24, S20
	216 Add S21, S21, S27
	217 Subtract S26, S26, S9
	218 Subtract S22, S22, S25
	219 Add S7, S28, S28
	220 Multiply S17, S17, S0
	221 Subtract S28, S18, S16
	222 Add S16, S16, S18
	223 Subtract S18, S24, S20
	224 Add S20, S20, S24
	225 Subtract S24, S21, S27
	226 Subtract S23, S23, S26
	227 Multiply S22, S22, S0
	228 Add S19, S19, S17
	229 NotImplemented "Instruction FCMP not yet implemented."
	230 Multiply S23, S23, S0
	231 Add S25, S25, S22
	232 Subtract S29, S19, S17
	233 NotImplemented "Instruction FCSEL not yet implemented."
	234 NotImplemented "Instruction FCMP not yet implemented."
	235 Add S26, S26, S23
	236 Add S17, S17, S19
	237 Subtract S19, S25, S22
	238 Add S22, S22, S25
	239 Add S21, S27, S21
	240 NotImplemented "Instruction FCSEL not yet implemented."
	241 NotImplemented "Instruction FCMP not yet implemented."
	242 Add S8, S30, S30
	243 Subtract S30, S26, S23
	244 Add S23, S23, S26
	245 NotImplemented "Instruction FCSEL not yet implemented."
	246 NotImplemented "Instruction FCMP not yet implemented."
	247 NotImplemented "Instruction FCSEL not yet implemented."
	248 NotImplemented "Instruction FCMP not yet implemented."
	249 NotImplemented "Instruction FCSEL not yet implemented."
	250 NotImplemented "Instruction FCMP not yet implemented."
	251 Subtract S21, S21, S24
	252 NotImplemented "Instruction FCSEL not yet implemented."
	253 Subtract S16, S16, S25
	254 Multiply S21, S21, S0
	255 Subtract S17, S17, S26
	256 Multiply S16, S16, S0
	257 Add S24, S24, S21
	258 Multiply S17, S17, S0
	259 Add S25, S25, S16
	260 Subtract S27, S24, S21
	261 Add S21, S21, S24
	262 Add S24, S26, S17
	263 Subtract S26, S25, S16
	264 NotImplemented "Instruction FCMP not yet implemented."
	265 Add S16, S16, S25
	266 Subtract S25, S24, S17
	267 NotImplemented "Instruction FCSEL not yet implemented."
	268 NotImplemented "Instruction FCMP not yet implemented."
	269 Add S17, S17, S24
	270 NotImplemented "Instruction FCSEL not yet implemented."
	271 NotImplemented "Instruction FCMP not yet implemented."
	272 NotImplemented "Instruction FCSEL not yet implemented."
	273 NotImplemented "Instruction FCMP not yet implemented."
	274 NotImplemented "Instruction FCSEL not yet implemented."
	275 NotImplemented "Instruction FCMP not yet implemented."
	276 NotImplemented "Instruction FCSEL not yet implemented."
	277 NotImplemented "Instruction FCMP not yet implemented."
	278 Subtract S21, S21, S27
	279 NotImplemented "Instruction FCSEL not yet implemented."
	280 NotImplemented "Instruction FCMP not yet implemented."
	281 Multiply S21, S21, S0
	282 NotImplemented "Instruction FCSEL not yet implemented."
	283 NotImplemented "Instruction FCMP not yet implemented."
	284 Subtract S16, S16, S24
	285 Subtract S17, S17, S25
	286 Add S26, S27, S21
	287 NotImplemented "Instruction FCSEL not yet implemented."
	288 NotImplemented "Instruction FCMP not yet implemented."
	289 Multiply S16, S16, S0
	290 Multiply S17, S17, S0
	291 Add S27, S21, S26
	292 Subtract S21, S26, S21
	293 NotImplemented "Instruction FCSEL not yet implemented."
	294 NotImplemented "Instruction FCMP not yet implemented."
	295 Add S24, S24, S16
	296 Add S25, S25, S17
	297 NotImplemented "Instruction FCSEL not yet implemented."
	298 NotImplemented "Instruction FCMP not yet implemented."
	299 Add S28, S16, S24
	300 Subtract S16, S24, S16
	301 Add S20, S17, S25
	302 Subtract S17, S25, S17
	303 NotImplemented "Instruction FCSEL not yet implemented."
	304 NotImplemented "Instruction FCMP not yet implemented."
	305 Subtract S3, S3, S18
	306 Subtract S21, S27, S21
	307 Subtract S16, S28, S16
	308 Subtract S17, S20, S17
	309 NotImplemented "Instruction FCSEL not yet implemented."
	310 Subtract S2, S2, S19
	311 Multiply S3, S3, S0
	312 Multiply S20, S21, S16
	313 Multiply S21, S21, S17
	314 Multiply S16, S16, S17
	315 Subtract S1, S1, S26
	316 Multiply S2, S2, S0
	317 Add S17, S18, S3
	318 Add S18, S20, S21
	319 Multiply S1, S1, S0
	320 Add S19, S19, S2
	321 Subtract S20, S17, S3
	322 Add S3, S3, S17
	323 Add S16, S16, S18
	324 Add S17, S26, S1
	325 Subtract S18, S19, S2
	326 NotImplemented "Instruction FCMP not yet implemented."
	327 Add S2, S2, S19
	328 Add S9, S16, S16
	329 Subtract S16, S17, S1
	330 NotImplemented "Instruction FCSEL not yet implemented."
	331 NotImplemented "Instruction FCMP not yet implemented."
	332 Add S1, S1, S17
	333 NotImplemented "Instruction FCSEL not yet implemented."
	334 NotImplemented "Instruction FCMP not yet implemented."
	335 NotImplemented "Instruction FCSEL not yet implemented."
	336 NotImplemented "Instruction FCMP not yet implemented."
	337 NotImplemented "Instruction FCSEL not yet implemented."
	338 NotImplemented "Instruction FCMP not yet implemented."
	339 NotImplemented "Instruction FCSEL not yet implemented."
	340 NotImplemented "Instruction FCMP not yet implemented."
	341 Subtract S3, S3, S19
	342 NotImplemented "Instruction FCSEL not yet implemented."
	343 Subtract S2, S2, S17
	344 Multiply S3, S3, S0
	345 Subtract S1, S1, S16
	346 Multiply S2, S2, S0
	347 Add S4, S19, S3
	348 Multiply S0, S1, S0
	349 Add S1, S17, S2
	350 Add S5, S3, S4
	351 Subtract S3, S4, S3
	352 Add S4, S16, S0
	353 Add S6, S2, S1
	354 Subtract S1, S1, S2
	355 Subtract S2, S5, S3
	356 Add S3, S0, S4
	357 Subtract S0, S4, S0
	358 Subtract S1, S6, S1
	359 Subtract S0, S3, S0
	360 Multiply S3, S2, S1
	361 Multiply S2, S2, S0
	362 Add S2, S3, S2
	363 Multiply S0, S1, S0
	364 Add S0, S0, S2
	365 Add S0, S0, S0
	366 Add X8, X31, 0
	367 Move X0, X23
	368 Move X1, X22
	369 Add S10, S7, S0
	370 Call BVHNode.AABBofPair, X0, X1
	371 Add S0, S8, S9
	372 NotImplemented "Instruction FCMP not yet implemented."
	373 NotImplemented "Instruction CSEL not yet implemented."
	374 Move X0, [X24]
	375 Move W8, [X0+224]
	376 Compare W8, 0
	377 JumpIfEqual {90}
	378 Move W8, [X22+112]
	379 Compare W8, 0
	380 JumpIfEqual {99}
	381 Move X0, X19
	382 Move X1, X22
	383 Move X2, X20
	384 Move X20, [X31+96]
	385 Move X19, [X31+104]
	386 Move X22, [X31+80]
	387 Move X21, [X31+88]
	388 Move X24, [X31+64]
	389 Move X23, [X31+72]
	390 Move X30, [X31+56]
	391 Move D9, [X31+40]
	392 Move D8, [X31+48]
	393 Move V10, [X31+32]
	394 Add X31, X31, 112
	395 Call BVHNode.AddObjectPushdown, X0, X1, X2
	396 Return 
	397 Move X8, [X9+32]
	398 Move X1, X20
	399 Move X8, [X8+192]
	400 Move X2, [X8+112]
	401 Call List`1<Object>.AddWithResize, X0, X1
	402 Move W8, [X22+112]
	403 Compare W8, 0
	404 JumpIfEqual {427}
	405 Move X0, [X19+48]
	406 Compare X0, 0
	407 JumpIfEqual {582}
	408 Move W10, [X0+28]
	409 Move X1, [X22+104]
	410 Move X8, [X0+16]
	411 Move X9, [X21]
	412 Add W10, W10, 1
	413 Move [X0+28], W10
	414 Compare X8, 0
	415 JumpIfEqual {582}
	416 NotImplemented "Instruction LDRSW not yet implemented."
	417 Move W11, [X8+24]
	418 NotImplemented "Instruction CMP not yet implemented."
	419 Add W9, W10, 1
	420 Add X8, X8, X10
	421 Move [X0+24], W9
	422 Move [X8+32], X1
	423 Move X8, [X9+32]
	424 Move X8, [X8+192]
	425 Move X2, [X8+112]
	426 Call List`1<Object>.AddWithResize, X0, X1
	427 Move X0, [X24]
	428 Move W8, [X0+224]
	429 Compare W8, 0
	430 JumpIfNotEqual {432}
	431 Call 0x1C17DFC
	432 Move W2, [X22+72]
	433 Move X5, [X19+48]
	434 Move X0, X22
	435 Move X1, X19
	436 Move X20, [X31+96]
	437 Move X19, [X31+104]
	438 Move X22, [X31+80]
	439 Move X21, [X31+88]
	440 Move X24, [X31+64]
	441 Move X23, [X31+72]
	442 Move X30, [X31+56]
	443 Move D9, [X31+40]
	444 Move D8, [X31+48]
	445 Move V10, [X31+32]
	446 Move W3, W31
	447 Move W4, W31
	448 Add X31, X31, 112
	449 Call BVHNode.InitNode, X0, X1, X2, X3, X4, X5
	450 Return 
	451 Move X0, 0x2214000
	452 Move X0, [X0+2288]
	453 Call 0x1C17D08
	454 Call 0x1C17F10
	455 Move X1, X31
	456 Move X21, X0
	457 Call StringBuilder..ctor, X0
	458 Move X0, 0x2214000
	459 Move X0, [X0+2512]
	460 Call 0x1C17D08
	461 Move W1, 5
	462 Call 0x1C17D6C
	463 Move X23, X0
	464 Call 0x19913C0
	465 Move X0, X23
	466 Move X1, X20
	467 Call 0x19990B4
	468 Move X0, X23
	469 Move X1, X31
	470 Move X2, X20
	471 Call 0x1994444
	472 Move X0, X23
	473 Call 0x19913C0
	474 Move X20, 0x2221000
	475 Move X20, [X20+888]
	476 Move X0, X20
	477 Call 0x1C17D08
	478 Move X1, X0
	479 Move X0, X23
	480 Call 0x19990B4
	481 Move X0, X20
	482 Call 0x1C17D08
	483 Move X2, X0
	484 Move W1, 1
	485 Move X0, X23
	486 Call 0x1994444
	487 Move X0, 0x2221000
	488 Move X0, [X0+848]
	489 Call 0x1C17D08
	490 Call 0x19913D0
	491 Move W8, [X22+72]
	492 Move X20, 0x2214000
	493 Move [X31], W8
	494 Move X20, [X20+1880]
	495 Move X0, X20
	496 Call 0x1C17D08
	497 Add X1, X31, 0
	498 Call 0x1C17E04
	499 Move X24, X0
	500 Move X0, X23
	501 Call 0x19913C0
	502 Move X0, X23
	503 Move X1, X24
	504 Call 0x19990B4
	505 Move W1, 2
	506 Move X0, X23
	507 Move X2, X24
	508 Call 0x1994444
	509 Move W8, [X22+80]
	510 Move X0, X20
	511 Move [X31+28], W8
	512 Call 0x1C17D08
	513 Add X1, X31, 28
	514 Call 0x1C17E04
	515 Move X24, X0
	516 Move X0, X23
	517 Call 0x19913C0
	518 Move X0, X23
	519 Move X1, X24
	520 Call 0x19990B4
	521 Move W1, 3
	522 Move X0, X23
	523 Move X2, X24
	524 Call 0x1994444
	525 Move W8, [X22+84]
	526 Move X0, X20
	527 Move [X31+24], W8
	528 Call 0x1C17D08
	529 Add X1, X31, 24
	530 Call 0x1C17E04
	531 Move X20, X0
	532 Move X0, X23
	533 Call 0x19913C0
	534 Move X0, X23
	535 Move X1, X20
	536 Call 0x19990B4
	537 Move W1, 4
	538 Move X0, X23
	539 Move X2, X20
	540 Call 0x1994444
	541 Move X0, 0x2221000
	542 Move X0, [X0+896]
	543 Call 0x1C17D08
	544 Move X1, X23
	545 Move X2, X31
	546 Call String.Format, X0, X1
	547 Move X20, X0
	548 Move X0, X21
	549 Call 0x19913C0
	550 Move X0, X21
	551 Move X1, X20
	552 Move X2, X31
	553 Call StringBuilder.AppendLine, X0, X1
	554 Move X0, X19
	555 Call 0x19913C0
	556 Move X0, X19
	557 Move X1, X21
	558 Call BVH.BuildNodesLog, X0, X1
	559 Move X0, X21
	560 Call 0x19913C0
	561 Move X8, [X21]
	562 Move X0, X21
	563 Move X9, [X8+360]
	564 Move X1, [X8+368]
	565 NotImplemented "Instruction BLR not yet implemented."
	566 Move X19, X0
	567 Move X0, 0x2214000
	568 Move X0, [X0+1456]
	569 Call 0x1C17D08
	570 Call 0x1C17F10
	571 Move X1, X19
	572 Move X2, X31
	573 Move X20, X0
	574 Call InvalidOperationException..ctor, X0, X1
	575 Move X0, 0x2221000
	576 Move X0, [X0+904]
	577 Call 0x1C17D08
	578 Move X1, X0
	579 Move X0, X20
	580 Call 0x1C17DEC
	581 Call 0x1C17F28
	582 Call 0x1C17F20

Method: System.Int32 NodesCount(Fusion.LagCompensation.BVH bvh)

Disassembly:
	0x01EE331C MOVI V0.2D, 0x0
	0x01EE3320 STP V0, V0, [X31 + 0xF0]
	0x01EE3324 STP V0, V0, [X31 + 0xD0]
	0x01EE3328 STP V0, V0, [X31 + 0xB0]
	0x01EE332C STR W31, [X22 + 0x8]
	0x01EE3330 STR X31, [X22]
	0x01EE3334 STR W31, [X19 + 0x8]
	0x01EE3338 STR X31, [X19]
	0x01EE333C LDP S5, S0, [X23 + 0x10]
	0x01EE3340 LDP S7, S16, [X23 + 0x18]
	0x01EE3344 LDP S19, S15, [X21 + 0x18]
	0x01EE3348 LDP S29, S18, [X21 + 0x20]
	0x01EE334C STR S0, [X31 + 0x1F8]
	0x01EE3350 LDP S4, S0, [X21 + 0x10]
	0x01EE3354 LDP S13, S27, [X21 + 0x28]
	0x01EE3358 LDP S14, S12, [X21 + 0x30]
	0x01EE335C LDP S17, S3, [X23 + 0x20]
	0x01EE3360 STR S0, [X31 + 0x1FC]
	0x01EE3364 LDR V0, [X21]
	0x01EE3368 LDP S1, S6, [X21 + 0x8]
	0x01EE336C LDR V20, [X23]
	0x01EE3370 LDP S22, S21, [X23 + 0x8]
	0x01EE3374 LDR V25, [X21 + 0x38]
	0x01EE3378 ADRP X8, 0xFFFFFFFFFEC06000
	0x01EE337C LDR V2, [X8 + 0xF28]
	0x01EE3380 FMUL S23, S7, S19
	0x01EE3384 FMUL S26, S16, S15
	0x01EE3388 FMUL S30, S7, S18
	0x01EE338C FMUL S31, S16, S13
	0x01EE3390 FMUL S28, S17, S29
	0x01EE3394 FMUL S8, S17, S27
	0x01EE3398 FSUB V0.2S, V0.2S, V20.2S
	0x01EE339C FMUL S20, S7, S14
	0x01EE33A0 FSUB S1, S1, S22
	0x01EE33A4 FMUL S22, S16, S12
	0x01EE33A8 FADD S23, S23, S26
	0x01EE33AC FADD S31, S30, S31
	0x01EE33B0 FMUL S26, S17, S25
	0x01EE33B4 FADD S20, S20, S22
	0x01EE33B8 FADD S9, S28, S23
	0x01EE33BC FADD S22, S8, S31
	0x01EE33C0 FMUL S11, S7, V0.S[0]
	0x01EE33C4 FMUL S16, S16, V0.S[1]
	0x01EE33C8 FADD S7, S26, S20
	0x01EE33CC FABS S20, S9
	0x01EE33D0 FABS S23, S22
	0x01EE33D4 FMUL S17, S17, S1
	0x01EE33D8 FADD S16, S11, S16
	0x01EE33DC FABS S26, S7
	0x01EE33E0 FADD S31, S20, S2
	0x01EE33E4 FADD S30, S23, S2
	0x01EE33E8 FADD S17, S17, S16
	0x01EE33EC FADD S16, S26, S2
	0x01EE33F0 FMUL S26, S6, S31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x221E000
	010 Move X20, [X20+848]
	011 Move X19, X1
	012 Move X21, X0
	013 Move W22, W31
	014 Move X23, 0x24F7000
	015 Move W24, 120
	016 Move W25, 1
	017 Move W8, [X23+1409]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {25}
	022 Move X0, X20
	023 Call 0x1C17CF4
	024 Move [X23+1409], W25
	025 Move X8, [X21+104]
	026 Compare X8, 0
	027 JumpIfEqual {33}
	028 Move W8, [X8+48]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 8
	031 Compare TEMP, 8
	032 JumpIfNotEqual {59}
	033 Move X0, [X20]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Compare X19, 0
	039 JumpIfEqual {69}
	040 Move X8, [X19+16]
	041 Compare X8, 0
	042 JumpIfEqual {69}
	043 NotImplemented "Instruction LDRSW not yet implemented."
	044 Move W10, [X8+24]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction MADD not yet implemented."
	047 Add X0, X8, 32
	048 Move X1, X19
	049 Call BVHNode.NodesCount, X0, X1
	050 Move X8, [X19+16]
	051 Compare X8, 0
	052 JumpIfEqual {69}
	053 NotImplemented "Instruction LDRSW not yet implemented."
	054 Move W10, [X8+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction MADD not yet implemented."
	057 Add X21, X8, 32
	058 Add W22, W0, W22
	059 Add W0, W22, 1
	060 Move X20, [X31+48]
	061 Move X19, [X31+56]
	062 Move X22, [X31+32]
	063 Move X21, [X31+40]
	064 Move X24, [X31+16]
	065 Move X23, [X31+24]
	066 Move X30, [X31+64]
	067 Move X25, [X31+72]
	068 Return X0
	069 Call 0x1C17F20
	070 Call 0x1C17F28

Method: System.Void Remove(Fusion.LagCompensation.BVH bvh, Fusion.HitboxRoot entry)

Disassembly:
	0x01EE0A20 STR D0, [X22 + 0x10]
	0x01EE0A24 STR S2, [X22]
	0x01EE0A28 STUR D17, [X22 + 0x4]
	0x01EE0A2C MOV V4.16B, V17.16B
	0x01EE0A30 MOV V6.16B, V0.16B
	0x01EE0A34 MOV V4.S[0], V1.S[0]
	0x01EE0A38 MOV V6.S[0], V3.S[0]
	0x01EE0A3C FSUB V5.2S, V17.2S, V0.2S
	0x01EE0A40 FSUB V4.2S, V4.2S, V6.2S
	0x00000000 INVALID
	0x01EE0A48 FMOV W9, S5
	0x01EE0A4C TBZ X9, 0x0, 0x1EE0A9C
	0x01EE0A50 FADD V0.2S, V17.2S, V0.2S
	0x01EE0A54 FSUB S5, S2, S18
	0x01EE0A58 FADD S7, S2, S18
	0x01EE0A5C MOVI V6.2S, 0x3F, 0x18
	0x01EE0A60 FSUB V0.2S, V0.2S, V4.2S
	0x01EE0A64 FMOV S2, 0.5
	0x01EE0A68 FSUB S7, S7, S5
	0x00000000 INVALID
	0x01EE0A70 FMUL S18, S7, S2
	0x01EE0A74 FADD V17.2S, V4.2S, V0.2S
	0x01EE0A78 FADD S2, S5, S18
	0x01EE0A7C MOV S4, V0.S[1]
	0x01EE0A80 MOV S5, V17.S[1]
	0x01EE0A84 MOVZ W8, 0x1
	0x01EE0A88 STR S18, [X22 + 0xC]
	0x01EE0A8C STR D0, [X22 + 0x10]
	0x01EE0A90 STR S2, [X22]
	0x01EE0A94 STUR D17, [X22 + 0x4]
	0x01EE0A98 B 0x1EE0AA4
	0x01EE0A9C MOV S5, V17.S[1]
	0x01EE0AA0 MOV S4, V0.S[1]
	0x01EE0AA4 FADD S7, S17, S0
	0x01EE0AA8 FADD S6, S1, S3
	0x01EE0AAC FCMP S6, S7
	0x01EE0AB0 B.LE 0x1EE0B00
	0x01EE0AB4 FADD S7, S5, S4
	0x01EE0AB8 FADD S16, S2, S18
	0x01EE0ABC FSUB S2, S2, S18
	0x01EE0AC0 FSUB S17, S17, S0
	0x01EE0AC4 FSUB S5, S5, S4
	0x01EE0AC8 FMOV S4, 0.5
	0x01EE0ACC FSUB S0, S16, S2
	0x01EE0AD0 FSUB S6, S6, S17
	0x01EE0AD4 FSUB S7, S7, S5
	0x01EE0AD8 FMUL S18, S0, S4
	0x01EE0ADC FMUL S0, S6, S4
	0x01EE0AE0 FMUL S4, S7, S4
	0x01EE0AE4 FADD S2, S2, S18
	0x01EE0AE8 FADD S17, S17, S0
	0x01EE0AEC FADD S5, S5, S4
	0x01EE0AF0 MOVZ W8, 0x1
	0x01EE0AF4 STP S0, S4, [X22 + 0x10]
	0x01EE0AF8 STP S2, S17, [X22]
	0x01EE0AFC STP S5, S18, [X22 + 0x8]
	0x01EE0B00 FSUB S7, S5, S4
	0x01EE0B04 FSUB S6, S8, S3
	0x01EE0B08 FCMP S6, S7
	0x01EE0B0C B.PL 0x1EE0B5C
	0x01EE0B10 FSUB S7, S2, S18
	0x01EE0B14 FSUB S16, S17, S0
	0x01EE0B18 FADD S1, S2, S18
	0x01EE0B1C FADD S0, S17, S0
	0x01EE0B20 FADD S2, S5, S4
	0x01EE0B24 FMOV S4, 0.5
	0x01EE0B28 FSUB S1, S1, S7
	0x01EE0B2C FSUB S0, S0, S16
	0x01EE0B30 FSUB S2, S2, S6
	0x01EE0B34 FMUL S18, S1, S4
	0x01EE0B38 FMUL S0, S0, S4
	0x01EE0B3C FMUL S4, S2, S4
	0x01EE0B40 FADD S2, S7, S18
	0x01EE0B44 FADD S17, S16, S0
	0x01EE0B48 FADD S5, S6, S4
	0x01EE0B4C MOVZ W8, 0x1
	0x01EE0B50 STP S0, S4, [X22 + 0x10]
	0x01EE0B54 STP S2, S17, [X22]
	0x01EE0B58 STP S5, S18, [X22 + 0x8]
	0x01EE0B5C FADD S7, S5, S4
	0x01EE0B60 FADD S6, S8, S3
	0x01EE0B64 FCMP S6, S7
	0x01EE0B68 B.LE 0x1EE0BB8
	0x01EE0B6C FADD S7, S17, S0
	0x01EE0B70 FADD S16, S2, S18
	0x01EE0B74 FSUB S1, S2, S18
	0x01EE0B78 FSUB S0, S17, S0
	0x01EE0B7C FSUB S2, S5, S4
	0x01EE0B80 FMOV S3, 0.5
	0x01EE0B84 FSUB S4, S16, S1
	0x01EE0B88 FSUB S5, S7, S0
	0x01EE0B8C FSUB S6, S6, S2
	0x01EE0B90 FMUL S4, S4, S3
	0x01EE0B94 FMUL S5, S5, S3
	0x01EE0B98 FMUL S3, S6, S3
	0x01EE0B9C FADD S1, S1, S4
	0x01EE0BA0 FADD S0, S0, S5
	0x01EE0BA4 FADD S2, S2, S3
	0x01EE0BA8 MOVZ W8, 0x1
	0x01EE0BAC STP S5, S3, [X22 + 0x10]
	0x01EE0BB0 STP S1, S0, [X22]
	0x01EE0BB4 STP S2, S4, [X22 + 0x8]
	0x01EE0BB8 ANDS W31, W21, W8, 0x0
	0x01EE0BBC B.EQ 0x1EE0C3C
	0x01EE0BC0 ADRP X21, 0x2220000
	0x01EE0BC4 LDR X21, [X21 + 0x350]
	0x01EE0BC8 LDR X0, [X21]
	0x01EE0BCC LDR W8, [X0 + 0xE0]
	0x01EE0BD0 CBNZ W8, 0x1EE0BD8
	0x01EE0BD4 BL 0x1C16DFC
	0x01EE0BD8 LDR W8, [X20 + 0x4C]
	0x01EE0BDC CMP W8, 0x1
	0x01EE0BE0 B.LT 0x1EE0C3C
	0x01EE0BE4 LDR X0, [X21]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x24FA000
	008 Move X22, 0x2214000
	009 Move W8, [X23+1410]
	010 Move X22, [X22+1432]
	011 Move X21, X2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x2221000
	019 Move X0, [X0+848]
	020 Call 0x1C17CF4
	021 Move X0, 0x2214000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+1410], W8
	026 Move X0, [X22]
	027 Move X22, [X20+104]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X22
	033 Move X1, X31
	034 Call Object.op_Implicit, X0
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {120}
	039 Compare X19, 0
	040 JumpIfEqual {119}
	041 Move X22, [X19+24]
	042 Compare X22, 0
	043 JumpIfEqual {119}
	044 Move X23, 0x24FA000
	045 Move W8, [X23+1448]
	046 Compare W8, 0
	047 JumpIfNotEqual {53}
	048 Move X0, 0x2221000
	049 Move X0, [X0+912]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X23+1448], W8
	053 Move X0, [X22+16]
	054 Compare X0, 0
	055 JumpIfEqual {119}
	056 Move X8, 0x2221000
	057 Move X8, [X8+912]
	058 Move X22, 0x2221000
	059 Move X1, X21
	060 Move X2, [X8]
	061 Move X22, [X22+848]
	062 Call Dictionary`2<Object, Int32>.Remove, X0, X1
	063 Move X0, [X22]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move W8, [X20+72]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X8, [X19+16]
	071 Compare X8, 0
	072 JumpIfEqual {119}
	073 Move W9, [X8+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X0, [X22]
	076 Add X20, X8, 152
	077 Move W9, [X0+224]
	078 Compare W9, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X0, X20
	082 Move X1, X19
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move W2, 1
	088 Move W3, W31
	089 Move W4, W31
	090 Move X5, X31
	091 Move X30, [X31+48]
	092 Move X23, [X31+56]
	093 Call BVHNode.InitNode, X0, X1, X2, X3, X4, X5
	094 Return 
	095 Move X0, [X22]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move X8, [X19+16]
	101 Compare X8, 0
	102 JumpIfEqual {119}
	103 NotImplemented "Instruction LDRSW not yet implemented."
	104 Move W10, [X8+24]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move W2, [X20+72]
	107 Move X1, X19
	108 Move X20, [X31+32]
	109 Move X19, [X31+40]
	110 Move X22, [X31+16]
	111 Move X21, [X31+24]
	112 Move W10, 120
	113 NotImplemented "Instruction MADD not yet implemented."
	114 Add X0, X8, 32
	115 Move X30, [X31+48]
	116 Move X23, [X31+56]
	117 Call BVHNode.RemoveLeaf, X0, X1, X2
	118 Return 
	119 Call 0x1C17F20
	120 Move X0, 0x2214000
	121 Move X0, [X0+2000]
	122 Call 0x1C17D08
	123 Call 0x1C17F10
	124 Move X19, X0
	125 Move X0, 0x2221000
	126 Move X0, [X0+920]
	127 Call 0x1C17D08
	128 Move X1, X0
	129 Move X0, X19
	130 Move X2, X31
	131 Call Exception..ctor, X0, X1
	132 Move X0, 0x2221000
	133 Move X0, [X0+928]
	134 Call 0x1C17D08
	135 Move X1, X0
	136 Move X0, X19
	137 Call 0x1C17DEC
	138 Call 0x1C17F28

Method: System.Void SetDepth(Fusion.LagCompensation.BVH bvh, System.Int32 newdepth)

Disassembly:
	0x01EE3828 FMUL S3, S6, S3
	0x01EE382C FMUL S5, S5, S30
	0x01EE3830 FMUL S16, S14, S24
	0x01EE3834 FMUL S17, S8, S27
	0x01EE3838 FMUL S18, S19, S18
	0x01EE383C FADD S3, S5, S3
	0x01EE3840 FABD S5, S7, S7
	0x01EE3844 FADD S7, S18, S17
	0x01EE3848 FADD S3, S3, S7
	0x01EE384C FSUB S18, S3, S5
	0x01EE3850 FCMP S18, 0x0
	0x01EE3854 B.LS 0x1EE3FFC
	0x01EE3858 FCMP S18, S10
	0x01EE385C B.PL 0x1EE38C4
	0x01EE3860 TBZ X20, 0x0, 0x1EE38C4
	0x01EE3864 LDP S3, S5, [X23 + 0x1C]
	0x01EE3868 LDP S16, S7, [X21 + 0x28]
	0x01EE386C LDR V17, [X21 + 0x24]
	0x01EE3870 LDR V19, [X23 + 0x18]
	0x01EE3874 FMUL S20, S3, S7
	0x01EE3878 FMUL S21, S5, S16
	0x01EE387C FMUL S5, S5, S17
	0x01EE3880 FMUL S7, S19, S7
	0x01EE3884 FMUL S16, S19, S16
	0x01EE3888 FMUL S3, S3, S17
	0x01EE388C FSUB S20, S20, S21
	0x01EE3890 FSUB S19, S5, S7
	0x01EE3894 LDR V21, [X31 + 0x38]
	0x01EE3898 FSUB S3, S16, S3
	0x01EE389C FMUL S5, S20, S20
	0x01EE38A0 FMUL S7, S19, S19
	0x01EE38A4 FADD S5, S5, S7
	0x01EE38A8 FMUL S7, S3, S3
	0x01EE38AC FADD S5, S7, S5
	0x01EE38B0 FCMP S5, S2
	0x01EE38B4 B.LE 0x1EE38C4
	0x01EE38B8 MOV V10.16B, V18.16B
	0x01EE38BC STP S20, S19, [X19]
	0x01EE38C0 STR S3, [X19 + 0x8]
	0x01EE38C4 LDR V3, [X31 + 0x24]
	0x01EE38C8 FCMP S3, S31
	0x01EE38CC B.PL 0x1EE3978
	0x01EE38D0 LDP S7, S18, [X31 + 0x18]
	0x01EE38D4 LDR V19, [X31 + 0x1F8]
	0x01EE38D8 FMUL S3, S6, S23
	0x01EE38DC FMUL S5, S4, S30
	0x01EE38E0 FMUL S7, S7, S13
	0x01EE38E4 FMUL S16, S12, S24
	0x01EE38E8 FMUL S17, S8, S29
	0x01EE38EC FMUL S18, S19, S18
	0x01EE38F0 FADD S3, S5, S3
	0x01EE38F4 FABD S5, S7, S7
	0x01EE38F8 FADD S7, S18, S17
	0x01EE38FC FADD S3, S3, S7
	0x01EE3900 FSUB S18, S3, S5
	0x01EE3904 FCMP S18, 0x0
	0x01EE3908 B.LS 0x1EE3FFC
	0x01EE390C FCMP S18, S10
	0x01EE3910 B.PL 0x1EE3978
	0x01EE3914 TBZ X20, 0x0, 0x1EE3978
	0x01EE3918 LDP S3, S5, [X23 + 0x1C]
	0x01EE391C LDP S16, S7, [X21 + 0x34]
	0x01EE3920 LDR V17, [X21 + 0x30]
	0x01EE3924 LDR V19, [X23 + 0x18]
	0x01EE3928 FMUL S20, S3, S7
	0x01EE392C FMUL S21, S5, S16
	0x01EE3930 FMUL S5, S5, S17
	0x01EE3934 FMUL S7, S19, S7
	0x01EE3938 FMUL S16, S19, S16
	0x01EE393C FMUL S3, S3, S17
	0x01EE3940 FSUB S20, S20, S21
	0x01EE3944 FSUB S19, S5, S7
	0x01EE3948 LDR V21, [X31 + 0x38]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x221E000
	010 Move X21, [X21+848]
	011 Move W19, W2
	012 Move X20, X1
	013 Move X22, X0
	014 Move X23, 0x24F7000
	015 Move W24, 120
	016 Move W25, 1
	017 Move W8, [X23+1411]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {25}
	022 Move X0, X21
	023 Call 0x1C17CF4
	024 Move [X23+1411], W25
	025 Move [X22+92], W19
	026 Compare X20, 0
	027 JumpIfEqual {84}
	028 Move W8, [X20+32]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move [X20+32], W19
	031 Move X0, [X21]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move W8, [X22+80]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, [X21]
	039 Move W9, [X0+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move W8, [X22+80]
	044 Move X9, [X20+16]
	045 Compare X9, 0
	046 JumpIfEqual {84}
	047 Move W10, [X9+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction SMADDL not yet implemented."
	050 Add X0, X8, 32
	051 Add W2, W19, 1
	052 Move X1, X20
	053 Call BVHNode.SetDepth, X0, X1, X2
	054 Move X0, [X21]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move W8, [X22+84]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X0, [X21]
	062 Move W9, [X0+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {67}
	065 Call 0x1C17DFC
	066 Move W8, [X22+84]
	067 Move X9, [X20+16]
	068 Compare X9, 0
	069 JumpIfEqual {84}
	070 Move W10, [X9+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 NotImplemented "Instruction SMADDL not yet implemented."
	073 Add X22, X8, 32
	074 Add W19, W19, 1
	075 Move X20, [X31+48]
	076 Move X19, [X31+56]
	077 Move X22, [X31+32]
	078 Move X21, [X31+40]
	079 Move X24, [X31+16]
	080 Move X23, [X31+24]
	081 Move X30, [X31+64]
	082 Move X25, [X31+72]
	083 Return 
	084 Call 0x1C17F20
	085 Call 0x1C17F28

Method: System.Void RemoveLeaf(Fusion.LagCompensation.BVH bvh, System.Int32 removeIndex)

Disassembly:
	0x01EE33F4 FMUL S28, S4, S30
	0x01EE33F8 FMUL S11, S4, S16
	0x01EE33FC FADD S26, S26, S28
	0x01EE3400 FADD S26, S26, S11
	0x01EE3404 FABS S20, S17
	0x01EE3408 FADD S26, S21, S26
	0x01EE340C LDP S10, S24, [X23 + 0x28]
	0x01EE3410 FSUB S8, S26, S20
	0x01EE3414 LDP S20, S28, [X23 + 0x30]
	0x01EE3418 LDR V26, [X23 + 0x38]
	0x01EE341C MOV W0, W31
	0x01EE3420 FCMP S8, 0x0
	0x01EE3424 STR D0, [X31 + 0x1A0]
	0x01EE3428 STR S1, [X31 + 0x1A8]
	0x01EE342C B.LS 0x1EE4000
	0x01EE3430 STP S31, S17, [X31 + 0x30]
	0x01EE3434 MOV V31.16B, V9.16B
	0x01EE3438 MOV V23.16B, V22.16B
	0x01EE343C STP S7, S16, [X31 + 0x20]
	0x01EE3440 STR S21, [X31 + 0x38]
	0x01EE3444 MOV V22.16B, V5.16B
	0x01EE3448 FMUL S9, S19, S3
	0x01EE344C FMUL S21, S15, S10
	0x01EE3450 FMUL S16, S18, S3
	0x01EE3454 FMUL S5, S13, S10
	0x01EE3458 FMUL S7, S29, S24
	0x01EE345C FADD S21, S9, S21
	0x01EE3460 FMUL S9, S14, S3
	0x01EE3464 FADD S5, S16, S5
	0x01EE3468 FMUL S16, S12, S10
	0x01EE346C FMUL S17, S27, S24
	0x01EE3470 FADD S16, S9, S16
	0x01EE3474 FMUL S9, S25, S24
	0x01EE3478 FADD S21, S7, S21
	0x01EE347C FMUL S3, S3, V0.S[0]
	0x01EE3480 FMUL S10, S10, V0.S[1]
	0x01EE3484 MOVN W8, 0x80800000
	0x01EE3488 FADD S7, S17, S5
	0x01EE348C FADD S17, S9, S16
	0x01EE3490 FABS S5, S21
	0x01EE3494 FMUL S24, S24, S1
	0x01EE3498 FADD S3, S3, S10
	0x01EE349C FMOV S10, W8
	0x01EE34A0 MOV V9.16B, V7.16B
	0x01EE34A4 FABS S7, S7
	0x01EE34A8 FABS S16, S17
	0x01EE34AC FADD S5, S5, S2
	0x01EE34B0 FCMP S8, S10
	0x01EE34B4 STR S21, [X31 + 0x2C]
	0x01EE34B8 STR S5, [X31 + 0x3C]
	0x01EE34BC FADD S5, S7, S2
	0x01EE34C0 FADD S16, S16, S2
	0x01EE34C4 FADD S21, S24, S3
	0x01EE34C8 MOV V24.16B, V22.16B
	0x01EE34CC B.PL 0x1EE34E8
	0x01EE34D0 TBZ X20, 0x0, 0x1EE34E8
	0x01EE34D4 LDR W8, [X23 + 0x20]
	0x01EE34D8 LDR X9, [X23 + 0x18]
	0x01EE34DC MOV V10.16B, V8.16B
	0x01EE34E0 STR W8, [X19 + 0x8]
	0x01EE34E4 STR X9, [X19]
	0x01EE34E8 LDR V3, [X31 + 0x3C]
	0x01EE34EC LDR V7, [X31 + 0x1FC]
	0x01EE34F0 STR S5, [X31 + 0x28]
	0x01EE34F4 FMUL S5, S4, S5
	0x01EE34F8 FMUL S3, S6, S3
	0x01EE34FC FMUL S7, S7, S16
	0x01EE3500 FADD S3, S3, S5
	0x01EE3504 FADD S3, S7, S3
	0x01EE3508 FABS S5, S21
	0x01EE350C FADD S3, S24, S3
	0x01EE3510 MOV V8.16B, V24.16B
	0x01EE3514 FSUB S24, S3, S5
	0x01EE3518 FCMP S24, 0x0
	0x01EE351C B.LS 0x1EE3FFC
	0x01EE3520 STP S17, S16, [X31 + 0x18]
	0x01EE3524 FMUL S3, S19, S20
	0x01EE3528 FMUL S5, S15, S28
	0x01EE352C FMUL S7, S18, S20
	0x01EE3530 FMUL S16, S13, S28
	0x01EE3534 FMUL S17, S14, S20
	0x01EE3538 FMUL S18, S12, S28
	0x01EE353C MOV V22.16B, V21.16B
	0x01EE3540 FMUL S19, S29, S26
	0x01EE3544 FMUL S21, S27, S26
	0x01EE3548 FMUL S25, S25, S26
	0x01EE354C FADD S3, S3, S5
	0x01EE3550 FADD S5, S7, S16
	0x01EE3554 FADD S7, S17, S18
	0x01EE3558 FMUL S20, S20, V0.S[0]
	0x01EE355C FMUL S27, S28, V0.S[1]
	0x01EE3560 FADD S15, S19, S3
	0x01EE3564 FADD S14, S21, S5
	0x01EE3568 FADD S12, S25, S7
	0x01EE356C FMUL S26, S26, S1
	0x01EE3570 FADD S16, S20, S27
	0x01EE3574 FABS S3, S15
	0x01EE3578 FABS S5, S14
	0x01EE357C FABS S7, S12
	0x01EE3580 FCMP S24, S10
	0x01EE3584 FADD S25, S3, S2
	0x01EE3588 FADD S27, S5, S2
	0x01EE358C FADD S29, S7, S2
	0x01EE3590 FADD S13, S26, S16
	0x01EE3594 B.PL 0x1EE35BC
	0x01EE3598 LDR V21, [X31 + 0x38]
	0x01EE359C LDR V19, [X31 + 0x1F8]
	0x01EE35A0 TBZ X20, 0x0, 0x1EE35C4
	0x01EE35A4 LDR W8, [X23 + 0x2C]
	0x01EE35A8 LDUR X9, [X23 + 0x24]
	0x01EE35AC MOV V10.16B, V24.16B
	0x01EE35B0 STR W8, [X19 + 0x8]
	0x01EE35B4 STR X9, [X19]
	0x01EE35B8 B 0x1EE35C4
	0x01EE35BC LDR V21, [X31 + 0x38]
	0x01EE35C0 LDR V19, [X31 + 0x1F8]
	0x01EE35C4 LDR V7, [X31 + 0x1FC]
	0x01EE35C8 FMUL S3, S6, S25
	0x01EE35CC FMUL S5, S4, S27
	0x01EE35D0 FADD S3, S3, S5
	0x01EE35D4 FMUL S7, S7, S29
	0x01EE35D8 FADD S3, S7, S3
	0x01EE35DC FABS S5, S13
	0x01EE35E0 FADD S3, S19, S3
	0x01EE35E4 FSUB S3, S3, S5
	0x01EE35E8 FCMP S3, 0x0
	0x01EE35EC B.LS 0x1EE3FFC
	0x01EE35F0 MOV V24.16B, V22.16B
	0x01EE35F4 FCMP S3, S10
	0x01EE35F8 B.PL 0x1EE3614
	0x01EE35FC TBZ X20, 0x0, 0x1EE3614
	0x01EE3600 LDR W8, [X23 + 0x38]
	0x01EE3604 LDR X9, [X23 + 0x30]
	0x01EE3608 MOV V10.16B, V3.16B
	0x01EE360C STR W8, [X19 + 0x8]
	0x01EE3610 STR X9, [X19]
	0x01EE3614 LDP S16, S3, [X31 + 0x30]
	0x01EE3618 LDR V5, [X31 + 0x2C]
	0x01EE361C LDR V17, [X31 + 0x3C]
	0x01EE3620 FMUL S7, S15, S13
	0x01EE3624 FMUL S3, S31, S3
	0x01EE3628 FMUL S5, S5, S24
	0x01EE362C FMUL S16, S21, S16
	0x01EE3630 FMUL S17, S8, S17
	0x01EE3634 FMUL S18, S19, S25
	0x01EE3638 FADD S3, S3, S5
	0x01EE363C FADD S5, S16, S17
	0x01EE3640 FADD S3, S7, S3
	0x01EE3644 FADD S5, S5, S18
	0x01EE3648 FABS S3, S3
	0x01EE364C FADD S5, S6, S5
	0x01EE3650 FSUB S3, S5, S3
	0x01EE3654 FCMP S3, 0x0
	0x01EE3658 B.LS 0x1EE3FFC
	0x01EE365C MOV V22.16B, V23.16B
	0x01EE3660 MOV V23.16B, V30.16B
	0x01EE3664 FCMP S3, S10
	0x01EE3668 B.PL 0x1EE3684
	0x01EE366C TBZ X20, 0x0, 0x1EE3684
	0x01EE3670 LDR W8, [X21 + 0x20]
	0x01EE3674 LDR X9, [X21 + 0x18]
	0x01EE3678 MOV V10.16B, V3.16B
	0x01EE367C STR W8, [X19 + 0x8]
	0x01EE3680 STR X9, [X19]
	0x01EE3684 LDR V3, [X31 + 0x34]
	0x01EE3688 LDR V17, [X31 + 0x28]
	0x01EE368C FMUL S5, S9, S24
	0x01EE3690 FMUL S16, S21, S23
	0x01EE3694 FMUL S3, S22, S3
	0x01EE3698 FMUL S17, S8, S17
	0x01EE369C FMUL S7, S14, S13
	0x01EE36A0 FMUL S18, S19, S27
	0x01EE36A4 FADD S3, S3, S5
	0x01EE36A8 FADD S5, S16, S17
	0x01EE36AC FADD S3, S7, S3
	0x01EE36B0 FADD S5, S5, S18
	0x01EE36B4 FABS S3, S3
	0x01EE36B8 FADD S5, S4, S5
	0x01EE36BC FSUB S3, S5, S3
	0x01EE36C0 FCMP S3, 0x0
	0x01EE36C4 B.LS 0x1EE3FFC
	0x01EE36C8 MOV V28.16B, V31.16B
	0x01EE36CC FCMP S3, S10
	0x01EE36D0 B.PL 0x1EE36EC
	0x01EE36D4 TBZ X20, 0x0, 0x1EE36EC
	0x01EE36D8 LDR W8, [X21 + 0x2C]
	0x01EE36DC LDUR X9, [X21 + 0x24]
	0x01EE36E0 MOV V10.16B, V3.16B
	0x01EE36E4 STR W8, [X19 + 0x8]
	0x01EE36E8 STR X9, [X19]
	0x01EE36EC LDP S3, S16, [X31 + 0x20]
	0x01EE36F0 LDP S30, S5, [X31 + 0x30]
	0x01EE36F4 FMUL S7, S12, S13
	0x01EE36F8 FMUL S18, S19, S29
	0x01EE36FC FMUL S16, S21, S16
	0x01EE3700 FMUL S3, S3, S5
	0x01EE3704 LDP S5, S17, [X31 + 0x18]
	0x01EE3708 FMUL S5, S5, S24
	0x01EE370C FADD S3, S3, S5
	0x01EE3710 FADD S3, S7, S3
	0x01EE3714 LDR V7, [X31 + 0x1FC]
	0x01EE3718 FMUL S17, S8, S17
	0x01EE371C FADD S5, S16, S17
	0x01EE3720 FADD S5, S5, S18
	0x01EE3724 FABS S3, S3
	0x01EE3728 FADD S5, S7, S5
	0x01EE372C FSUB S3, S5, S3
	0x01EE3730 FCMP S3, 0x0
	0x01EE3734 B.LS 0x1EE3FFC
	0x01EE3738 FCMP S3, S10
	0x01EE373C B.PL 0x1EE3758
	0x01EE3740 TBZ X20, 0x0, 0x1EE3758
	0x01EE3744 LDR W8, [X21 + 0x38]
	0x01EE3748 LDR X9, [X21 + 0x30]
	0x01EE374C MOV V10.16B, V3.16B
	0x01EE3750 STR W8, [X19 + 0x8]
	0x01EE3754 STR X9, [X19]
	0x01EE3758 ADRP X8, 0xFFFFFFFFFEC07000
	0x01EE375C LDR V31, [X8 + 0x3CC]
	0x01EE3760 FCMP S30, S31
	0x01EE3764 B.PL 0x1EE3810
	0x01EE3768 LDR V3, [X31 + 0x1FC]
	0x01EE376C LDR V5, [X31 + 0x2C]
	0x01EE3770 LDR V17, [X31 + 0x3C]
	0x01EE3774 FMUL S7, S15, S24
	0x01EE3778 FMUL S3, S3, S23
	0x01EE377C FMUL S5, S5, S13
	0x01EE3780 FMUL S16, S8, S25
	0x01EE3784 FMUL S17, S19, S17
	0x01EE3788 FADD S3, S3, S11
	0x01EE378C FABD S5, S5, S5
	0x01EE3790 FADD S7, S17, S16
	0x01EE3794 FADD S3, S3, S7
	0x01EE3798 FSUB S18, S3, S5
	0x01EE379C FCMP S18, 0x0
	0x01EE37A0 B.LS 0x1EE3FFC
	0x01EE37A4 FCMP S18, S10
	0x01EE37A8 B.PL 0x1EE3810
	0x01EE37AC TBZ X20, 0x0, 0x1EE3810
	0x01EE37B0 LDP S3, S5, [X23 + 0x1C]
	0x01EE37B4 LDP S16, S7, [X21 + 0x1C]
	0x01EE37B8 LDR V17, [X21 + 0x18]
	0x01EE37BC LDR V19, [X23 + 0x18]
	0x01EE37C0 FMUL S20, S3, S7
	0x01EE37C4 FMUL S21, S5, S16
	0x01EE37C8 FMUL S5, S5, S17
	0x01EE37CC FMUL S7, S19, S7
	0x01EE37D0 FMUL S16, S19, S16
	0x01EE37D4 FMUL S3, S3, S17
	0x01EE37D8 FSUB S20, S20, S21
	0x01EE37DC FSUB S19, S5, S7
	0x01EE37E0 LDR V21, [X31 + 0x38]
	0x01EE37E4 FSUB S3, S16, S3
	0x01EE37E8 FMUL S5, S20, S20
	0x01EE37EC FMUL S7, S19, S19
	0x01EE37F0 FADD S5, S5, S7
	0x01EE37F4 FMUL S7, S3, S3
	0x01EE37F8 FADD S5, S7, S5
	0x01EE37FC FCMP S5, S2
	0x01EE3800 B.LE 0x1EE3810
	0x01EE3804 MOV V10.16B, V18.16B
	0x01EE3808 STP S20, S19, [X19]
	0x01EE380C STR S3, [X19 + 0x8]
	0x01EE3810 FCMP S23, S31
	0x01EE3814 B.PL 0x1EE38C4
	0x01EE3818 LDP S3, S18, [X31 + 0x24]
	0x01EE381C LDR V5, [X31 + 0x1FC]
	0x01EE3820 LDR V19, [X31 + 0x1F8]
	0x01EE3824 FMUL S7, S9, S13

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x24F7000
	013 Move W8, [X21+1412]
	014 Move W22, W2
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x221E000
	022 Move X0, [X0+848]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+1412], W8
	026 Move W8, [X20+80]
	027 Move X23, 0x221E000
	028 Move X23, [X23+848]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X0, [X23]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Compare X19, 0
	036 JumpIfEqual {277}
	037 Move X8, [X19+16]
	038 Compare X8, 0
	039 JumpIfEqual {277}
	040 Move W9, [X20+80]
	041 Move W10, [X8+24]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction LDRSW not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W10, 120
	046 NotImplemented "Instruction MADD not yet implemented."
	047 Add X21, X8, 32
	048 Move [X20+80], W31
	049 Move W8, [X20+84]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, [X23]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Compare X19, 0
	057 JumpIfEqual {277}
	058 Move X8, [X19+16]
	059 Compare X8, 0
	060 JumpIfEqual {277}
	061 Move W9, [X20+84]
	062 Move W10, [X8+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 NotImplemented "Instruction LDRSW not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move W10, 120
	067 NotImplemented "Instruction MADD not yet implemented."
	068 Add X21, X8, 32
	069 Move [X20+84], W31
	070 Move X0, X19
	071 Move W1, W22
	072 Call BVH.DisposeNode, X0, X1
	073 Move X0, [X23]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move X22, X20
	079 Add X22, X22, 72
	080 Move W8, [X22]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move W2, 120
	083 Move X0, X20
	084 Move X1, X21
	085 Call 0x3EB2B30
	086 Move X8, -20926464
	087 Move V0, [X8+3776]
	088 Move [X20+92], W31
	089 Move [X20+72], D0
	090 Move X0, [X23]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move W8, [X20+80]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X0, [X23]
	098 Move W9, [X0+224]
	099 Compare W9, 0
	100 JumpIfNotEqual {103}
	101 Call 0x1C17DFC
	102 Move W8, [X20+80]
	103 Move X9, [X19+16]
	104 Compare X9, 0
	105 JumpIfEqual {277}
	106 Move W10, [X9+24]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move W10, [X20+72]
	109 Move W11, 120
	110 NotImplemented "Instruction SMADDL not yet implemented."
	111 Add X0, X8, 32
	112 Move [X8+108], W10
	113 Move W9, [X20+92]
	114 Move X1, X19
	115 Add W2, W9, 1
	116 Call BVHNode.SetDepth, X0, X1, X2
	117 Move X0, [X23]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Move W8, [X20+84]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X0, [X23]
	125 Move W9, [X0+224]
	126 Compare W9, 0
	127 JumpIfNotEqual {130}
	128 Call 0x1C17DFC
	129 Move W8, [X20+84]
	130 Move X9, [X19+16]
	131 Compare X9, 0
	132 JumpIfEqual {277}
	133 Move W10, [X9+24]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move W10, [X20+72]
	136 Move W11, 120
	137 NotImplemented "Instruction SMADDL not yet implemented."
	138 Add X0, X8, 32
	139 Move [X8+108], W10
	140 Move W9, [X20+92]
	141 Move X1, X19
	142 Add W2, W9, 1
	143 Call BVHNode.SetDepth, X0, X1, X2
	144 Move W8, [X20+112]
	145 Compare W8, 0
	146 JumpIfEqual {191}
	147 Move X24, [X19+24]
	148 Compare X24, 0
	149 JumpIfEqual {277}
	150 Move X25, 0x24F7000
	151 Move W8, [X25+1448]
	152 Move X22, [X20+104]
	153 Compare W8, 0
	154 JumpIfNotEqual {160}
	155 Move X0, 0x221E000
	156 Move X0, [X0+912]
	157 Call 0x1C17CF4
	158 Move W8, 1
	159 Move [X25+1448], W8
	160 Move X0, [X24+16]
	161 Compare X0, 0
	162 JumpIfEqual {277}
	163 Move X8, 0x221E000
	164 Move X8, [X8+912]
	165 Move X1, X22
	166 Move X2, [X8]
	167 Call Dictionary`2<Object, Int32>.Remove, X0, X1
	168 Move X24, [X19+24]
	169 Compare X24, 0
	170 JumpIfEqual {277}
	171 Move X25, 0x24F7000
	172 Move X22, [X20+104]
	173 Move W8, [X25+1449]
	174 Move W20, [X20+72]
	175 Compare W8, 0
	176 JumpIfNotEqual {182}
	177 Move X0, 0x221E000
	178 Move X0, [X0+968]
	179 Call 0x1C17CF4
	180 Move W8, 1
	181 Move [X25+1449], W8
	182 Move X0, [X24+16]
	183 Compare X0, 0
	184 JumpIfEqual {277}
	185 Move X8, 0x221E000
	186 Move X8, [X8+968]
	187 Move X1, X22
	188 Move W2, W20
	189 Move X3, [X8]
	190 Call Dictionary`2<Object, Int32>.set_Item, X0, X1, X2
	191 Move X0, [X23]
	192 Move W8, [X0+224]
	193 Compare W8, 0
	194 JumpIfNotEqual {196}
	195 Call 0x1C17DFC
	196 Add X22, X21, 72
	197 Move X0, [X23]
	198 Move W8, [X0+224]
	199 Compare W8, 0
	200 JumpIfNotEqual {202}
	201 Call 0x1C17DFC
	202 Move X24, [X19+16]
	203 Compare X24, 0
	204 JumpIfEqual {277}
	205 NotImplemented "Instruction LDRSW not yet implemented."
	206 Move W8, [X24+24]
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Move W8, 120
	209 NotImplemented "Instruction MADD not yet implemented."
	210 Move W27, [X22]
	211 Add X26, X26, 112
	212 Move W28, [X26]
	213 Move X0, [X23]
	214 Move W8, [X0+224]
	215 Compare W8, 0
	216 JumpIfNotEqual {218}
	217 Call 0x1C17DFC
	218 Move W8, [X21+72]
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Move [X26], W8
	221 Move W9, 120
	222 NotImplemented "Instruction MADD not yet implemented."
	223 Move [X9+116], W8
	224 Move W8, [X20+76]
	225 Move W20, [X21+92]
	226 Move [X21+76], W8
	227 Move X0, [X23]
	228 Move W8, [X0+224]
	229 Compare W8, 0
	230 JumpIfNotEqual {232}
	231 Call 0x1C17DFC
	232 Subtract W2, W20, 1
	233 Move X0, X21
	234 Move X1, X19
	235 Call BVHNode.SetDepth, X0, X1, X2
	236 Move X20, [X19+16]
	237 Compare X20, 0
	238 JumpIfEqual {277}
	239 NotImplemented "Instruction LDRSW not yet implemented."
	240 Move W8, [X20+24]
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move X24, 0x24F7000
	243 Move W8, [X24+1446]
	244 Compare W8, 0
	245 JumpIfNotEqual {251}
	246 Move X0, 0x221E000
	247 Move X0, [X0+848]
	248 Call 0x1C17CF4
	249 Move W8, 1
	250 Move [X24+1446], W8
	251 Move X0, [X23]
	252 Move W8, [X0+224]
	253 Compare W8, 0
	254 JumpIfNotEqual {256}
	255 Call 0x1C17DFC
	256 Move W8, 120
	257 NotImplemented "Instruction MADD not yet implemented."
	258 Move W1, [X8+104]
	259 Move W2, 1
	260 Move X0, X19
	261 Call BVHNode.ChildRefit, X0, X1, X2
	262 Move W1, [X22]
	263 Move X0, X19
	264 Move X20, [X31+80]
	265 Move X19, [X31+88]
	266 Move X22, [X31+64]
	267 Move X21, [X31+72]
	268 Move X24, [X31+48]
	269 Move X23, [X31+56]
	270 Move X26, [X31+32]
	271 Move X25, [X31+40]
	272 Move X28, [X31+16]
	273 Move X27, [X31+24]
	274 Move X30, [X31+96]
	275 Call BVH.DisposeNode, X0, X1
	276 Return 
	277 Call 0x1C17F20
	278 Call 0x1C17F28
	279 Move X0, 0x2211000
	280 Move X0, [X0+2000]
	281 Call 0x1C17D08
	282 Call 0x1C17F10
	283 Move X19, X0
	284 Move X0, 0x221E000
	285 Move X0, [X0+1128]
	286 Call 0x1C17D08
	287 Move X1, X0
	288 Move X0, X19
	289 Move X2, X31
	290 Call Exception..ctor, X0, X1
	291 Move X0, 0x221E000
	292 Move X0, [X0+1136]
	293 Call 0x1C17D08
	294 Move X1, X0
	295 Move X0, X19
	296 Call 0x1C17DEC

Method: System.Void FindOverlappingLeaves(Fusion.LagCompensation.BVH bvh, UnityEngine.Vector3 origin, System.Single radius, System.Collections.Generic.List`1<Fusion.LagCompensation.BVHNode> overlapList)

Disassembly:
	0x01EE394C FSUB S3, S16, S3
	0x01EE3950 FMUL S5, S20, S20
	0x01EE3954 FMUL S7, S19, S19
	0x01EE3958 FADD S5, S5, S7
	0x01EE395C FMUL S7, S3, S3
	0x01EE3960 FADD S5, S7, S5
	0x01EE3964 FCMP S5, S2
	0x01EE3968 B.LE 0x1EE3978
	0x01EE396C MOV V10.16B, V18.16B
	0x01EE3970 STP S20, S19, [X19]
	0x01EE3974 STR S3, [X19 + 0x8]
	0x01EE3978 LDR V3, [X31 + 0x3C]
	0x01EE397C FCMP S3, S31
	0x01EE3980 B.PL 0x1EE3A40
	0x01EE3984 LDR V5, [X31 + 0x1FC]
	0x01EE3988 LDR V7, [X31 + 0x28]
	0x01EE398C LDR V3, [X31 + 0x1C]
	0x01EE3990 LDR V18, [X31 + 0x1F8]
	0x01EE3994 FMUL S16, S28, S13
	0x01EE3998 FMUL S5, S5, S7
	0x01EE399C LDR V7, [X31 + 0x34]
	0x01EE39A0 FMUL S3, S4, S3
	0x01EE39A4 FMUL S17, S21, S25
	0x01EE39A8 FMUL S18, S18, S30
	0x01EE39AC FMUL S7, S15, S7
	0x01EE39B0 FADD S3, S3, S5
	0x01EE39B4 FABD S5, S7, S7
	0x01EE39B8 FADD S7, S18, S17
	0x01EE39BC FADD S3, S3, S7
	0x01EE39C0 FSUB S18, S3, S5
	0x01EE39C4 FCMP S18, 0x0
	0x01EE39C8 B.LS 0x1EE3FFC
	0x01EE39CC FCMP S18, S10
	0x01EE39D0 B.PL 0x1EE3A40
	0x01EE39D4 TBZ X20, 0x0, 0x1EE3A40
	0x01EE39D8 LDP S3, S5, [X23 + 0x28]
	0x01EE39DC LDP S16, S7, [X21 + 0x1C]
	0x01EE39E0 LDR V17, [X21 + 0x18]
	0x01EE39E4 LDR V19, [X23 + 0x24]
	0x01EE39E8 FMUL S20, S3, S7
	0x01EE39EC FMUL S21, S5, S16
	0x01EE39F0 FMUL S5, S5, S17
	0x01EE39F4 FMUL S7, S19, S7
	0x01EE39F8 FMUL S16, S19, S16
	0x01EE39FC FMUL S3, S3, S17
	0x01EE3A00 FSUB S20, S20, S21
	0x01EE3A04 FSUB S19, S5, S7
	0x01EE3A08 FSUB S3, S16, S3
	0x01EE3A0C FMUL S5, S20, S20
	0x01EE3A10 FMUL S7, S19, S19
	0x01EE3A14 FADD S5, S5, S7
	0x01EE3A18 FMUL S7, S3, S3
	0x01EE3A1C FADD S5, S7, S5
	0x01EE3A20 LDR V21, [X31 + 0x38]
	0x01EE3A24 FCMP S5, S2
	0x01EE3A28 LDR V5, [X31 + 0x28]
	0x01EE3A2C B.LE 0x1EE3A44
	0x01EE3A30 MOV V10.16B, V18.16B
	0x01EE3A34 STP S20, S19, [X19]
	0x01EE3A38 STR S3, [X19 + 0x8]
	0x01EE3A3C B 0x1EE3A44
	0x01EE3A40 LDR V5, [X31 + 0x28]
	0x01EE3A44 FCMP S5, S31
	0x01EE3A48 B.PL 0x1EE3B0C
	0x01EE3A4C LDR V5, [X31 + 0x1FC]
	0x01EE3A50 LDR V7, [X31 + 0x3C]
	0x01EE3A54 LDR V3, [X31 + 0x1C]
	0x01EE3A58 LDR V18, [X31 + 0x1F8]
	0x01EE3A5C FMUL S16, S22, S13
	0x01EE3A60 FMUL S5, S5, S7
	0x01EE3A64 LDR V7, [X31 + 0x34]
	0x01EE3A68 FMUL S3, S6, S3
	0x01EE3A6C FMUL S17, S21, S27
	0x01EE3A70 FMUL S18, S18, S23
	0x01EE3A74 FMUL S7, S14, S7
	0x01EE3A78 FADD S3, S3, S5
	0x01EE3A7C FABD S5, S7, S7
	0x01EE3A80 FADD S7, S18, S17
	0x01EE3A84 FADD S3, S3, S7
	0x01EE3A88 FSUB S18, S3, S5
	0x01EE3A8C FCMP S18, 0x0
	0x01EE3A90 B.LS 0x1EE3FFC
	0x01EE3A94 FCMP S18, S10
	0x01EE3A98 B.PL 0x1EE3B08
	0x01EE3A9C TBZ X20, 0x0, 0x1EE3B08
	0x01EE3AA0 LDP S3, S5, [X23 + 0x28]
	0x01EE3AA4 LDP S16, S7, [X21 + 0x28]
	0x01EE3AA8 LDR V17, [X21 + 0x24]
	0x01EE3AAC LDR V19, [X23 + 0x24]
	0x01EE3AB0 FMUL S20, S3, S7
	0x01EE3AB4 FMUL S21, S5, S16
	0x01EE3AB8 FMUL S5, S5, S17
	0x01EE3ABC FMUL S7, S19, S7
	0x01EE3AC0 FMUL S16, S19, S16
	0x01EE3AC4 FMUL S3, S3, S17
	0x01EE3AC8 FSUB S20, S20, S21
	0x01EE3ACC FSUB S19, S5, S7
	0x01EE3AD0 FSUB S3, S16, S3
	0x01EE3AD4 FMUL S5, S20, S20
	0x01EE3AD8 FMUL S7, S19, S19
	0x01EE3ADC FADD S5, S5, S7
	0x01EE3AE0 FMUL S7, S3, S3
	0x01EE3AE4 FADD S5, S7, S5
	0x01EE3AE8 LDR V21, [X31 + 0x38]
	0x01EE3AEC FCMP S5, S2
	0x01EE3AF0 LDR V5, [X31 + 0x28]
	0x01EE3AF4 B.LE 0x1EE3B0C
	0x01EE3AF8 MOV V10.16B, V18.16B
	0x01EE3AFC STP S20, S19, [X19]
	0x01EE3B00 STR S3, [X19 + 0x8]
	0x01EE3B04 B 0x1EE3B0C
	0x01EE3B08 LDR V5, [X31 + 0x28]
	0x01EE3B0C LDR V3, [X31 + 0x1C]
	0x01EE3B10 FCMP S3, S31
	0x01EE3B14 B.PL 0x1EE3BD4
	0x01EE3B18 FMUL S3, S6, S5
	0x01EE3B1C LDR V5, [X31 + 0x3C]
	0x01EE3B20 LDR V7, [X31 + 0x34]
	0x01EE3B24 LDP S16, S18, [X31 + 0x20]
	0x01EE3B28 LDR V19, [X31 + 0x1F8]
	0x01EE3B2C FMUL S5, S4, S5
	0x01EE3B30 FMUL S7, S12, S7
	0x01EE3B34 FMUL S16, S16, S13
	0x01EE3B38 FMUL S17, S21, S29
	0x01EE3B3C FMUL S18, S19, S18
	0x01EE3B40 FADD S3, S3, S5
	0x01EE3B44 FABD S5, S7, S7
	0x01EE3B48 FADD S7, S18, S17
	0x01EE3B4C FADD S3, S3, S7
	0x01EE3B50 FSUB S18, S3, S5
	0x01EE3B54 FCMP S18, 0x0
	0x01EE3B58 B.LS 0x1EE3FFC
	0x01EE3B5C FCMP S18, S10
	0x01EE3B60 B.PL 0x1EE3BD0

ISIL:
	001 Subtract X31, X31, 480
	002 Move [X31+384], D11
	003 Move [X31+392], D10
	004 Move [X31+400], D9
	005 Move [X31+408], D8
	006 Move [X31+416], X29
	007 Move [X31+432], X30
	008 Move [X31+440], X23
	009 Move [X31+448], X22
	010 Move [X31+456], X21
	011 Move [X31+464], X20
	012 Move [X31+472], X19
	013 Move X23, 0x24F7000
	014 Move X22, 0x221E000
	015 Move W8, [X23+1413]
	016 Move X22, [X22+848]
	017 Move X19, X2
	018 Move V8, V3
	019 Move V9, V2
	020 Move V10, V1
	021 Move V11, V0
	022 Move X20, X1
	023 Move X21, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {36}
	028 Move X0, 0x221E000
	029 Move X0, [X0+848]
	030 Call 0x1C17CF4
	031 Move X0, 0x221E000
	032 Move X0, [X0+1144]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X23+1413], W8
	036 Move X0, [X22]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Add X8, X31, 120
	042 Move X0, X21
	043 Call BVHNode.ToBounds, X0
	044 Add X1, X31, 120
	045 Move V0, V11
	046 Move V1, V10
	047 Move V2, V9
	048 Move V3, V8
	049 Call BVHNode.BoundsIntersectsSphere, X0, X1, X2, V0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {131}
	054 Move X8, [X21+104]
	055 Compare X8, 0
	056 JumpIfEqual {92}
	057 Move W8, [X8+48]
	058 Move TEMP, X8
	059 And TEMP, TEMP, 8
	060 Compare TEMP, 8
	061 JumpIfEqual {92}
	062 Add X0, X31, 0
	063 Move W2, 120
	064 Move X1, X21
	065 Call 0x3EB2AC0
	066 Compare X19, 0
	067 JumpIfEqual {155}
	068 Move X8, 0x221E000
	069 Move X8, [X8+1144]
	070 Add X0, X31, 144
	071 Add X1, X31, 0
	072 Move W2, 120
	073 Move X20, [X8]
	074 Call 0x3EB2AC0
	075 Move W9, [X19+28]
	076 Move X8, [X19+16]
	077 Add W9, W9, 1
	078 Move [X19+28], W9
	079 Compare X8, 0
	080 JumpIfEqual {155}
	081 NotImplemented "Instruction LDRSW not yet implemented."
	082 Move W10, [X8+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move W11, 120
	085 NotImplemented "Instruction MADD not yet implemented."
	086 Add W10, W9, 1
	087 Add X0, X8, 32
	088 Add X1, X31, 144
	089 Move W2, 120
	090 Move [X19+24], W10
	091 Call 0x3EB2AC0
	092 Move X0, [X22]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Compare X20, 0
	098 JumpIfEqual {155}
	099 Move X8, [X20+16]
	100 Compare X8, 0
	101 JumpIfEqual {155}
	102 NotImplemented "Instruction LDRSW not yet implemented."
	103 Move W10, [X8+24]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move W10, 120
	106 NotImplemented "Instruction MADD not yet implemented."
	107 Add X0, X8, 32
	108 Move X1, X20
	109 Move V0, V11
	110 Move V1, V10
	111 Move V2, V9
	112 Move V3, V8
	113 Move X2, X19
	114 Call BVHNode.FindOverlappingLeaves, X0, X1, X2, V0, X3
	115 Move X8, [X20+16]
	116 Compare X8, 0
	117 JumpIfEqual {155}
	118 NotImplemented "Instruction LDRSW not yet implemented."
	119 Move W10, [X8+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move W10, 120
	122 NotImplemented "Instruction MADD not yet implemented."
	123 Add X0, X8, 32
	124 Move X1, X20
	125 Move V0, V11
	126 Move V1, V10
	127 Move V2, V9
	128 Move V3, V8
	129 Move X2, X19
	130 Call BVHNode.FindOverlappingLeaves, X0, X1, X2, V0, X3
	131 Move X20, [X31+464]
	132 Move X19, [X31+472]
	133 Move X22, [X31+448]
	134 Move X21, [X31+456]
	135 Move X30, [X31+432]
	136 Move X23, [X31+440]
	137 Move X29, [X31+416]
	138 Move D9, [X31+400]
	139 Move D8, [X31+408]
	140 Move D11, [X31+384]
	141 Move D10, [X31+392]
	142 Add X31, X31, 480
	143 Return 
	144 Move X8, [X20+32]
	145 Add X0, X31, 264
	146 Add X1, X31, 144
	147 Move W2, 120
	148 Move X8, [X8+192]
	149 Move X20, [X8+112]
	150 Call 0x3EB2AC0
	151 Add X1, X31, 264
	152 Move X0, X19
	153 Move X2, X20
	154 Call List`1<BVHNode>.AddWithResize, X0, X1
	155 Call 0x1C17F20
	156 Call 0x1C17F28

Method: System.Boolean BoundsIntersectsSphere(UnityEngine.Bounds bounds, UnityEngine.Vector3 origin, System.Single radius)

Disassembly:
	0x01EE3BE0 LDR V17, [X31 + 0x2C]
	0x01EE3BE4 LDR V5, [X31 + 0x1FC]
	0x01EE3BE8 FMUL S3, S4, S29
	0x01EE3BEC FMUL S7, S28, S24
	0x01EE3BF0 FMUL S16, S17, S16
	0x01EE3BF4 LDR V17, [X31 + 0x3C]
	0x01EE3BF8 FMUL S5, S5, S27
	0x01EE3BFC FMUL S18, S8, S30
	0x01EE3C00 FADD S3, S3, S5
	0x01EE3C04 FMUL S17, S21, S17
	0x01EE3C08 FABD S5, S7, S7
	0x01EE3C0C FADD S7, S18, S17
	0x01EE3C10 FADD S3, S7, S3
	0x01EE3C14 FSUB S18, S3, S5
	0x01EE3C18 FCMP S18, 0x0
	0x01EE3C1C B.LS 0x1EE3FFC
	0x01EE3C20 FCMP S18, S10
	0x01EE3C24 B.PL 0x1EE3C94
	0x01EE3C28 TBZ X20, 0x0, 0x1EE3C94
	0x01EE3C2C LDP S3, S5, [X23 + 0x34]
	0x01EE3C30 LDP S16, S7, [X21 + 0x1C]
	0x01EE3C34 LDR V17, [X21 + 0x18]
	0x01EE3C38 LDR V19, [X23 + 0x30]
	0x01EE3C3C FMUL S20, S3, S7
	0x01EE3C40 FMUL S21, S5, S16
	0x01EE3C44 FMUL S5, S5, S17
	0x01EE3C48 FMUL S7, S19, S7
	0x01EE3C4C FMUL S16, S19, S16
	0x01EE3C50 FMUL S3, S3, S17
	0x01EE3C54 FSUB S20, S20, S21
	0x01EE3C58 FSUB S19, S5, S7
	0x01EE3C5C FSUB S3, S16, S3
	0x01EE3C60 FMUL S5, S20, S20
	0x01EE3C64 FMUL S7, S19, S19
	0x01EE3C68 FADD S5, S5, S7

ISIL:
	001 Move V4, [X1]
	002 Move V5, [X1+12]
	003 Add S7, S0, S3
	004 Subtract S6, S4, S5
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move V6, [X1+4]
	007 Move V7, [X1+16]
	008 Add S17, S1, S3
	009 Subtract S16, S6, S7
	010 NotImplemented "Instruction FCMP not yet implemented."
	011 Move V16, [X1+8]
	012 Move V17, [X1+20]
	013 Add S19, S2, S3
	014 Subtract S18, S16, S17
	015 NotImplemented "Instruction FCMP not yet implemented."
	016 Add S4, S4, S5
	017 Subtract S0, S0, S3
	018 Add S5, S6, S7
	019 Subtract S1, S1, S3
	020 NotImplemented "Instruction FCMP not yet implemented."
	021 Add S6, S16, S17
	022 Subtract S2, S2, S3
	023 NotImplemented "Instruction CSET not yet implemented."
	024 NotImplemented "Instruction FCMP not yet implemented."
	025 NotImplemented "Instruction CSET not yet implemented."
	026 NotImplemented "Instruction FCMP not yet implemented."
	027 And W8, W8, W9
	028 NotImplemented "Instruction CSET not yet implemented."
	029 And W0, W8, W9
	030 Return X0
	031 Move W0, W31
	032 Return X0

Method: System.Void FindOverlappingLeaves(Fusion.LagCompensation.BVH bvh, UnityEngine.Bounds aabb, System.Collections.Generic.List`1<Fusion.LagCompensation.BVHNode> overlapList)

Disassembly:
	0x01EE3C6C FMUL S7, S3, S3
	0x01EE3C70 FADD S5, S7, S5
	0x01EE3C74 LDR V21, [X31 + 0x38]
	0x01EE3C78 FCMP S5, S2
	0x01EE3C7C LDR V5, [X31 + 0x28]
	0x01EE3C80 B.LE 0x1EE3C98
	0x01EE3C84 MOV V10.16B, V18.16B
	0x01EE3C88 STP S20, S19, [X19]
	0x01EE3C8C STR S3, [X19 + 0x8]
	0x01EE3C90 B 0x1EE3C98
	0x01EE3C94 LDR V5, [X31 + 0x28]
	0x01EE3C98 FCMP S27, S31
	0x01EE3C9C B.PL 0x1EE3D4C
	0x01EE3CA0 MOV V17.16B, V5.16B
	0x01EE3CA4 LDR V5, [X31 + 0x1FC]
	0x01EE3CA8 LDR V16, [X31 + 0x34]
	0x01EE3CAC FMUL S3, S6, S29
	0x01EE3CB0 FMUL S7, S22, S24
	0x01EE3CB4 FMUL S5, S5, S25
	0x01EE3CB8 FMUL S16, S9, S16
	0x01EE3CBC FMUL S17, S21, S17
	0x01EE3CC0 FMUL S18, S8, S23
	0x01EE3CC4 FADD S3, S3, S5
	0x01EE3CC8 FABD S5, S7, S7
	0x01EE3CCC FADD S7, S18, S17
	0x01EE3CD0 FADD S3, S7, S3
	0x01EE3CD4 FSUB S18, S3, S5
	0x01EE3CD8 FCMP S18, 0x0
	0x01EE3CDC B.LS 0x1EE3FFC
	0x01EE3CE0 FCMP S18, S10
	0x01EE3CE4 B.PL 0x1EE3D4C
	0x01EE3CE8 TBZ X20, 0x0, 0x1EE3D4C
	0x01EE3CEC LDP S3, S5, [X23 + 0x34]
	0x01EE3CF0 LDP S16, S7, [X21 + 0x28]
	0x01EE3CF4 LDR V17, [X21 + 0x24]
	0x01EE3CF8 LDR V19, [X23 + 0x30]
	0x01EE3CFC FMUL S20, S3, S7
	0x01EE3D00 FMUL S21, S5, S16
	0x01EE3D04 FMUL S5, S5, S17
	0x01EE3D08 FMUL S7, S19, S7
	0x01EE3D0C FMUL S16, S19, S16
	0x01EE3D10 FMUL S3, S3, S17
	0x01EE3D14 FSUB S20, S20, S21
	0x01EE3D18 FSUB S19, S5, S7
	0x01EE3D1C LDR V21, [X31 + 0x38]
	0x01EE3D20 FSUB S3, S16, S3
	0x01EE3D24 FMUL S5, S20, S20
	0x01EE3D28 FMUL S7, S19, S19
	0x01EE3D2C FADD S5, S5, S7
	0x01EE3D30 FMUL S7, S3, S3
	0x01EE3D34 FADD S5, S7, S5
	0x01EE3D38 FCMP S5, S2
	0x01EE3D3C B.LE 0x1EE3D4C
	0x01EE3D40 MOV V10.16B, V18.16B
	0x01EE3D44 STP S20, S19, [X19]
	0x01EE3D48 STR S3, [X19 + 0x8]
	0x01EE3D4C FCMP S29, S31
	0x01EE3D50 B.PL 0x1EE3DFC
	0x01EE3D54 FMUL S3, S6, S27
	0x01EE3D58 LDR V6, [X31 + 0x34]
	0x01EE3D5C LDR V7, [X31 + 0x18]
	0x01EE3D60 LDP S5, S16, [X31 + 0x20]
	0x01EE3D64 FMUL S4, S4, S25
	0x01EE3D68 FADD S3, S3, S4
	0x01EE3D6C FMUL S6, S7, S6
	0x01EE3D70 LDR V7, [X31 + 0x1C]
	0x01EE3D74 FMUL S5, S5, S24
	0x01EE3D78 FMUL S16, S8, S16
	0x01EE3D7C FABD S4, S5, S5
	0x01EE3D80 FMUL S7, S21, S7
	0x01EE3D84 FADD S5, S16, S7
	0x01EE3D88 FADD S3, S5, S3
	0x01EE3D8C FSUB S3, S3, S4
	0x01EE3D90 FCMP S3, 0x0
	0x01EE3D94 B.LS 0x1EE3FFC
	0x01EE3D98 FCMP S3, S10
	0x01EE3D9C B.PL 0x1EE3DFC
	0x01EE3DA0 TBZ X20, 0x0, 0x1EE3DFC
	0x01EE3DA4 LDP S3, S4, [X23 + 0x34]
	0x01EE3DA8 LDP S6, S5, [X21 + 0x34]
	0x01EE3DAC LDR V7, [X21 + 0x30]
	0x01EE3DB0 LDR V16, [X23 + 0x30]
	0x01EE3DB4 FMUL S17, S3, S5
	0x01EE3DB8 FMUL S18, S4, S6
	0x01EE3DBC FMUL S4, S4, S7
	0x01EE3DC0 FMUL S19, S16, S5
	0x01EE3DC4 FMUL S6, S16, S6
	0x01EE3DC8 FMUL S3, S3, S7
	0x01EE3DCC FSUB S5, S17, S18
	0x01EE3DD0 FSUB S4, S4, S19
	0x01EE3DD4 FSUB S3, S6, S3
	0x01EE3DD8 FMUL S6, S5, S5
	0x01EE3DDC FMUL S7, S4, S4
	0x01EE3DE0 FADD S6, S6, S7
	0x01EE3DE4 FMUL S7, S3, S3
	0x01EE3DE8 FADD S6, S7, S6
	0x01EE3DEC FCMP S6, S2
	0x01EE3DF0 B.LE 0x1EE3DFC
	0x01EE3DF4 STP S5, S4, [X19]
	0x01EE3DF8 STR S3, [X19 + 0x8]
	0x01EE3DFC LDR W8, [X21 + 0x44]
	0x01EE3E00 LDUR X9, [X21 + 0x3C]
	0x01EE3E04 ADD X10, X31, 0x110
	0x01EE3E08 ADD X1, X21, 0xCC
	0x01EE3E0C STR W8, [X31 + 0xA8]
	0x01EE3E10 STR X9, [X31 + 0xA0]
	0x01EE3E14 LDR V2, [X21 + 0x48]
	0x01EE3E18 LDR V3, [X21 + 0x50]
	0x01EE3E1C LDR V4, [X21 + 0x60]
	0x01EE3E20 LDR V5, [X21 + 0x68]
	0x01EE3E24 FADD V2.2S, V0.2S, V2.2S
	0x01EE3E28 FADD S3, S1, S3
	0x01EE3E2C LDR V6, [X21 + 0x78]
	0x01EE3E30 LDR V7, [X21 + 0x80]
	0x01EE3E34 LDR V16, [X21 + 0x90]
	0x01EE3E38 LDR V17, [X21 + 0x98]
	0x01EE3E3C LDR V18, [X21 + 0xA8]
	0x01EE3E40 LDR V19, [X21 + 0xB0]
	0x01EE3E44 LDR V20, [X21 + 0xC0]
	0x01EE3E48 LDR V21, [X21 + 0xC8]
	0x01EE3E4C STR X9, [X31 + 0x110]
	0x01EE3E50 STR W8, [X31 + 0x118]
	0x01EE3E54 STUR D2, [X10 + 0xC]
	0x01EE3E58 STR S3, [X31 + 0x124]
	0x01EE3E5C LDR W8, [X21 + 0x5C]
	0x01EE3E60 LDUR X9, [X21 + 0x54]
	0x01EE3E64 FADD V2.2S, V0.2S, V4.2S
	0x01EE3E68 FADD S3, S1, S5
	0x01EE3E6C STR W8, [X31 + 0x130]
	0x01EE3E70 STR X9, [X31 + 0x128]
	0x01EE3E74 STUR D2, [X10 + 0x24]
	0x01EE3E78 STR S3, [X31 + 0x13C]
	0x01EE3E7C LDUR X8, [X21 + 0x6C]
	0x01EE3E80 LDR W9, [X21 + 0x74]
	0x01EE3E84 FADD V2.2S, V0.2S, V6.2S
	0x01EE3E88 FADD S3, S1, S7
	0x01EE3E8C STR X8, [X31 + 0x140]
	0x01EE3E90 STR W9, [X31 + 0x148]
	0x01EE3E94 STUR D2, [X10 + 0x3C]
	0x01EE3E98 STR S3, [X31 + 0x154]
	0x01EE3E9C LDUR X8, [X21 + 0x84]
	0x01EE3EA0 LDR W9, [X21 + 0x8C]
	0x01EE3EA4 FADD V2.2S, V0.2S, V16.2S
	0x01EE3EA8 FADD S3, S1, S17
	0x01EE3EAC STR X8, [X31 + 0x158]
	0x01EE3EB0 STR W9, [X31 + 0x160]
	0x01EE3EB4 STUR D2, [X10 + 0x54]
	0x01EE3EB8 STR S3, [X31 + 0x16C]
	0x01EE3EBC LDUR X8, [X21 + 0x9C]
	0x01EE3EC0 LDR W9, [X21 + 0xA4]
	0x01EE3EC4 FADD V2.2S, V0.2S, V18.2S
	0x01EE3EC8 FADD S3, S1, S19
	0x01EE3ECC STR X8, [X31 + 0x170]
	0x01EE3ED0 STR W9, [X31 + 0x178]
	0x01EE3ED4 STUR D2, [X10 + 0x6C]
	0x01EE3ED8 STR S3, [X31 + 0x184]
	0x01EE3EDC LDUR X8, [X21 + 0xB4]
	0x01EE3EE0 LDR W9, [X21 + 0xBC]

ISIL:
	001 Subtract X31, X31, 480
	002 Move [X31+416], X29
	003 Move [X31+424], X30
	004 Move [X31+432], X24
	005 Move [X31+440], X23
	006 Move [X31+448], X22
	007 Move [X31+456], X21
	008 Move [X31+464], X20
	009 Move [X31+472], X19
	010 Move X24, 0x24F7000
	011 Move X23, 0x221E000
	012 Move W8, [X24+1414]
	013 Move X23, [X23+848]
	014 Move X19, X3
	015 Move X21, X2
	016 Move X20, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x221E000
	023 Move X0, [X0+848]
	024 Call 0x1C17CF4
	025 Move X0, 0x221E000
	026 Move X0, [X0+1144]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X24+1414], W8
	030 Move X0, [X23]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Add X8, X31, 296
	036 Move X0, X22
	037 Call BVHNode.ToBounds, X0
	038 Move V0, [X31+296]
	039 Move V1, [X31+308]
	040 Move V2, [X21]
	041 Move V3, [X21+12]
	042 Subtract S4, S0, S1
	043 Add S5, S2, S3
	044 NotImplemented "Instruction FCMP not yet implemented."
	045 Move V4, [X31+300]
	046 Move V5, [X31+312]
	047 Move V6, [X21+4]
	048 Move V7, [X21+16]
	049 Add S16, S4, S5
	050 Subtract S17, S6, S7
	051 NotImplemented "Instruction FCMP not yet implemented."
	052 Add S0, S0, S1
	053 Subtract S1, S2, S3
	054 NotImplemented "Instruction FCMP not yet implemented."
	055 Add S0, S6, S7
	056 Subtract S1, S4, S5
	057 NotImplemented "Instruction FCMP not yet implemented."
	058 Move V0, [X21+8]
	059 Move V3, [X21+20]
	060 Move V1, [X31+304]
	061 Move V2, [X31+316]
	062 Add S4, S0, S3
	063 Subtract S5, S1, S2
	064 NotImplemented "Instruction FCMP not yet implemented."
	065 Subtract S0, S0, S3
	066 Add S1, S1, S2
	067 NotImplemented "Instruction FCMP not yet implemented."
	068 Move X8, [X22+104]
	069 Compare X8, 0
	070 JumpIfEqual {106}
	071 Move W8, [X8+48]
	072 Move TEMP, X8
	073 And TEMP, TEMP, 8
	074 Compare TEMP, 8
	075 JumpIfEqual {106}
	076 Add X0, X31, 56
	077 Move W2, 120
	078 Move X1, X22
	079 Call 0x3EB2AC0
	080 Compare X19, 0
	081 JumpIfEqual {168}
	082 Move X8, 0x221E000
	083 Move X8, [X8+1144]
	084 Add X0, X31, 176
	085 Add X1, X31, 56
	086 Move W2, 120
	087 Move X20, [X8]
	088 Call 0x3EB2AC0
	089 Move W9, [X19+28]
	090 Move X8, [X19+16]
	091 Add W9, W9, 1
	092 Move [X19+28], W9
	093 Compare X8, 0
	094 JumpIfEqual {168}
	095 NotImplemented "Instruction LDRSW not yet implemented."
	096 Move W10, [X8+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move W11, 120
	099 NotImplemented "Instruction MADD not yet implemented."
	100 Add W10, W9, 1
	101 Add X0, X8, 32
	102 Add X1, X31, 176
	103 Move W2, 120
	104 Move [X19+24], W10
	105 Call 0x3EB2AC0
	106 Move X0, [X23]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Compare X20, 0
	112 JumpIfEqual {168}
	113 Move X8, [X20+16]
	114 Compare X8, 0
	115 JumpIfEqual {168}
	116 NotImplemented "Instruction LDRSW not yet implemented."
	117 Move W10, [X8+24]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X11, [X21+16]
	120 Move V0, [X21]
	121 Move W10, 120
	122 NotImplemented "Instruction MADD not yet implemented."
	123 Add X0, X8, 32
	124 Add X2, X31, 32
	125 Move X1, X20
	126 Move X3, X19
	127 Move [X31+48], X11
	128 Move [X31+2], V0
	129 Call BVHNode.FindOverlappingLeaves, X0, X1, X2, X3
	130 Move X8, [X20+16]
	131 Compare X8, 0
	132 JumpIfEqual {168}
	133 NotImplemented "Instruction LDRSW not yet implemented."
	134 Move W10, [X8+24]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X11, [X21+16]
	137 Move V0, [X21]
	138 Move W10, 120
	139 NotImplemented "Instruction MADD not yet implemented."
	140 Add X0, X8, 32
	141 Add X2, X31, 0
	142 Move X1, X20
	143 Move X3, X19
	144 Move [X31+16], X11
	145 Move [X31], V0
	146 Call BVHNode.FindOverlappingLeaves, X0, X1, X2, X3
	147 Move X20, [X31+464]
	148 Move X19, [X31+472]
	149 Move X22, [X31+448]
	150 Move X21, [X31+456]
	151 Move X24, [X31+432]
	152 Move X23, [X31+440]
	153 Move X29, [X31+416]
	154 Move X30, [X31+424]
	155 Add X31, X31, 480
	156 Return 
	157 Move X8, [X20+32]
	158 Add X0, X31, 296
	159 Add X1, X31, 176
	160 Move W2, 120
	161 Move X8, [X8+192]
	162 Move X20, [X8+112]
	163 Call 0x3EB2AC0
	164 Add X1, X31, 296
	165 Move X0, X19
	166 Move X2, X20
	167 Call List`1<BVHNode>.AddWithResize, X0, X1
	168 Call 0x1C17F20
	169 Call 0x1C17F28

Method: UnityEngine.Bounds ToBounds()

Disassembly:
	0x01EE3B64 TBZ X20, 0x0, 0x1EE3BD0
	0x01EE3B68 LDP S3, S5, [X23 + 0x28]
	0x01EE3B6C LDP S16, S7, [X21 + 0x34]
	0x01EE3B70 LDR V17, [X21 + 0x30]
	0x01EE3B74 LDR V19, [X23 + 0x24]
	0x01EE3B78 FMUL S20, S3, S7
	0x01EE3B7C FMUL S21, S5, S16
	0x01EE3B80 FMUL S5, S5, S17
	0x01EE3B84 FMUL S7, S19, S7
	0x01EE3B88 FMUL S16, S19, S16
	0x01EE3B8C FMUL S3, S3, S17
	0x01EE3B90 FSUB S20, S20, S21
	0x01EE3B94 FSUB S19, S5, S7
	0x01EE3B98 FSUB S3, S16, S3
	0x01EE3B9C FMUL S5, S20, S20
	0x01EE3BA0 FMUL S7, S19, S19
	0x01EE3BA4 FADD S5, S5, S7
	0x01EE3BA8 FMUL S7, S3, S3
	0x01EE3BAC FADD S5, S7, S5
	0x01EE3BB0 LDR V21, [X31 + 0x38]
	0x01EE3BB4 FCMP S5, S2
	0x01EE3BB8 LDR V5, [X31 + 0x28]
	0x01EE3BBC B.LE 0x1EE3BD4
	0x01EE3BC0 MOV V10.16B, V18.16B
	0x01EE3BC4 STP S20, S19, [X19]
	0x01EE3BC8 STR S3, [X19 + 0x8]
	0x01EE3BCC B 0x1EE3BD4
	0x01EE3BD0 LDR V5, [X31 + 0x28]
	0x01EE3BD4 FCMP S25, S31
	0x01EE3BD8 B.PL 0x1EE3C98
	0x01EE3BDC LDR V16, [X31 + 0x34]

ISIL:
	001 Move V0, [X0]
	002 Move V1, [X0+8]
	003 NotImplemented "Instruction LDUR not yet implemented."
	004 Move V3, [X0+20]
	005 NotImplemented "Instruction MOVI not yet implemented."
	006 Move S5, W31
	007 Subtract V16, V0, V2
	008 Subtract S17, S1, S3
	009 NotImplemented "Instruction MOVI not yet implemented."
	010 Move S7, 0.5
	011 Add V0, V0, V2
	012 Add S1, S1, S3
	013 Subtract V2, V4, V16
	014 Subtract S3, S5, S17
	015 NotImplemented "Instruction INVALID not yet implemented."
	016 Multiply S3, S3, S7
	017 Add V4, V16, V2
	018 Add S5, S17, S3
	019 Subtract V2, V4, V2
	020 Subtract S3, S5, S3
	021 Subtract V0, V0, V2
	022 Subtract S1, S1, S3
	023 NotImplemented "Instruction INVALID not yet implemented."
	024 Multiply S1, S1, S7
	025 Add V2, V2, V0
	026 Add S3, S3, S1
	027 Move [X8+12], D0
	028 Move [X8], D2
	029 Move [X8+8], S3
	030 Move [X8+20], S1
	031 Return X0

Method: System.Void ChildExpanded(Fusion.LagCompensation.BVH bvh, ref Fusion.LagCompensation.BVHNode child)

Disassembly:
	0x01EE1C5C FCMP S1, S0
	0x01EE1C60 FADD S3, S6, S3
	0x01EE1C64 FCSEL S1, S1, S0, GT
	0x01EE1C68 FCMP S2, S0
	0x01EE1C6C FCSEL S2, S2, S0, GT
	0x01EE1C70 FCMP S3, S0
	0x01EE1C74 FCSEL S0, S3, S0, GT
	0x01EE1C78 FSUB S1, S1, S7
	0x01EE1C7C FSUB S2, S2, S4
	0x01EE1C80 FSUB S0, S0, S5
	0x01EE1C84 FMUL S11, S1, S15
	0x01EE1C88 FMUL S10, S2, S15
	0x01EE1C8C FMUL S8, S0, S15
	0x01EE1C90 FADD S13, S7, S11
	0x01EE1C94 FADD S12, S4, S10
	0x01EE1C98 FADD S9, S5, S8
	0x01EE1C9C B 0x1EE1B74
	0x01EE1CA0 LDR X1, [X20]
	0x01EE1CA4 ADD X0, X31, 0x8
	0x01EE1CA8 BL 0x2BC434C
	0x01EE1CAC LDR X0, [X21]
	0x01EE1CB0 LDR W8, [X0 + 0xE0]
	0x01EE1CB4 CBNZ W8, 0x1EE1CBC
	0x01EE1CB8 BL 0x1C16DFC
	0x01EE1CBC FADD S0, S11, S13
	0x01EE1CC0 FADD S1, S10, S12
	0x01EE1CC4 FADD S2, S8, S9
	0x01EE1CC8 FSUB S3, S13, S11
	0x01EE1CCC FSUB S4, S12, S10
	0x01EE1CD0 FSUB S5, S9, S8
	0x01EE1CD4 FSUB S0, S0, S3
	0x01EE1CD8 FSUB S1, S1, S4
	0x01EE1CDC FSUB S2, S2, S5
	0x01EE1CE0 FMUL S3, S1, S0
	0x01EE1CE4 FMUL S0, S2, S0
	0x01EE1CE8 LDP X20, X19, [X31 + 0x80]
	0x01EE1CEC LDP X22, X21, [X31 + 0x70]
	0x01EE1CF0 LDR X30, [X31 + 0x60]
	0x01EE1CF4 LDP D9, D8, [X31 + 0x50]
	0x01EE1CF8 LDP D11, D10, [X31 + 0x40]
	0x01EE1CFC LDP D13, D12, [X31 + 0x30]
	0x01EE1D00 LDP D15, D14, [X31 + 0x20]
	0x01EE1D04 FADD S0, S3, S0
	0x01EE1D08 FMUL S1, S2, S1
	0x01EE1D0C FADD S0, S1, S0
	0x01EE1D10 FADD S0, S0, S0
	0x01EE1D14 ADD X31, X31, 0x90
	0x01EE1D18 RET
	0x01EE1D1C MOV X22, X20
	0x01EE1D20 BL 0x1C16F20
	0x01EE1D24 BL 0x1C16F20
	0x01EE1D28 B 0x1EE1D30
	0x01EE1D2C B 0x1EE1D34
	0x01EE1D30 MOV X22, X20
	0x01EE1D34 MOV X19, X0
	0x01EE1D38 CMP W1, 0x1
	0x01EE1D3C B.NE 0x1EE1D68
	0x01EE1D40 MOV X0, X19
	0x01EE1D44 BL 0x3EB1AD0
	0x01EE1D48 LDR X20, [X0]
	0x01EE1D4C BL 0x3EB1AE0
	0x01EE1D50 LDR X1, [X22]
	0x01EE1D54 ADD X0, X31, 0x8
	0x01EE1D58 BL 0x2BC434C
	0x01EE1D5C CBZ X20, 0x1EE1CAC
	0x01EE1D60 MOV X0, X20
	0x01EE1D64 BL 0x1C16F18
	0x01EE1D68 MOV X20, X31
	0x01EE1D6C B 0x1EE1D74
	0x01EE1D70 MOV X19, X0
	0x01EE1D74 LDR X1, [X22]
	0x01EE1D78 ADD X0, X31, 0x8
	0x01EE1D7C BL 0x2BC434C
	0x01EE1D80 CBNZ X20, 0x1EE1D8C
	0x01EE1D84 MOV X0, X19
	0x01EE1D88 BL 0x1D2C690
	0x01EE1D8C MOV X0, X20
	0x01EE1D90 BL 0x1C16F18
	0x01EE1D94 BL 0x1990590
	0x01EE1D98 STP D11, D10, [X31 - 0x80]!
	0x01EE1D9C STP D9, D8, [X31 + 0x10]
	0x01EE1DA0 STP X29, X30, [X31 + 0x20]
	0x01EE1DA4 STP X28, X27, [X31 + 0x30]
	0x01EE1DA8 STP X26, X25, [X31 + 0x40]
	0x01EE1DAC STP X24, X23, [X31 + 0x50]
	0x01EE1DB0 STP X22, X21, [X31 + 0x60]
	0x01EE1DB4 STP X20, X19, [X31 + 0x70]
	0x01EE1DB8 ADRP X22, 0x24F8000
	0x01EE1DBC LDRB W8, [X22 + 0x57E]
	0x01EE1DC0 MOV X21, X2
	0x01EE1DC4 MOV X20, X1
	0x01EE1DC8 MOV X19, X0
	0x01EE1DCC TBNZ X8, 0x0, 0x1EE1E08
	0x01EE1DD0 ADRP X0, 0x221F000
	0x01EE1DD4 LDR X0, [X0 + 0x350]
	0x01EE1DD8 BL 0x1C16CF4
	0x01EE1DDC ADRP X0, 0x221F000
	0x01EE1DE0 LDR X0, [X0 + 0x458]
	0x01EE1DE4 BL 0x1C16CF4
	0x01EE1DE8 ADRP X0, 0x221F000
	0x01EE1DEC LDR X0, [X0 + 0x460]
	0x01EE1DF0 BL 0x1C16CF4
	0x01EE1DF4 ADRP X0, 0x221F000
	0x01EE1DF8 LDR X0, [X0 + 0x3B8]
	0x01EE1DFC BL 0x1C16CF4
	0x01EE1E00 MOVZ W8, 0x1
	0x01EE1E04 STRB W8, [X22 + 0x57E]
	0x01EE1E08 CBZ X21, 0x1EE2100
	0x01EE1E0C ADRP X22, 0x221F000
	0x01EE1E10 LDR X22, [X22 + 0x350]
	0x01EE1E14 LDR W8, [X21 + 0x18]
	0x01EE1E18 ADRP X23, 0x221F000
	0x01EE1E1C ADRP X28, 0x221F000
	0x01EE1E20 LDR X0, [X22]
	0x01EE1E24 LDR X23, [X23 + 0x460]
	0x01EE1E28 CMP W8, 0x0
	0x01EE1E2C CINC W8, W8, LT
	0x01EE1E30 LDR W9, [X0 + 0xE0]
	0x01EE1E34 LDR X28, [X28 + 0x458]
	0x01EE1E38 SBFM W24, W8, 0x1, 0x1F
	0x01EE1E3C CBNZ W9, 0x1EE1E48
	0x01EE1E40 BL 0x1C16DFC
	0x01EE1E44 LDR X0, [X22]
	0x01EE1E48 LDR X8, [X0 + 0xB8]
	0x01EE1E4C LDR X2, [X23]
	0x01EE1E50 MOV X0, X21
	0x01EE1E54 LDR X1, [X8]
	0x01EE1E58 BL 0x301DC6C
	0x01EE1E5C LDR X3, [X28]
	0x01EE1E60 MOV X0, X21
	0x01EE1E64 MOV W1, W31
	0x01EE1E68 MOV W2, W24
	0x01EE1E6C BL 0x301CC30
	0x01EE1E70 LDR W8, [X21 + 0x18]
	0x01EE1E74 LDR X3, [X28]
	0x01EE1E78 MOV X25, X0
	0x01EE1E7C MOV X0, X21
	0x01EE1E80 SUB W2, W8, W24
	0x01EE1E84 MOV W1, W24
	0x01EE1E88 BL 0x301CC30
	0x01EE1E8C MOV X26, X0
	0x01EE1E90 MOV X0, X25
	0x01EE1E94 BL 0x1EE1A4C
	0x01EE1E98 CBZ X25, 0x1EE2100
	0x01EE1E9C LDR W27, [X25 + 0x18]
	0x01EE1EA0 MOV X0, X26
	0x01EE1EA4 MOV V8.16B, V0.16B
	0x01EE1EA8 BL 0x1EE1A4C
	0x01EE1EAC CBZ X26, 0x1EE2100
	0x01EE1EB0 LDR X8, [X22]
	0x01EE1EB4 LDR X2, [X23]
	0x01EE1EB8 LDR V11, [X26 + 0x18]
	0x01EE1EBC MOV X0, X21
	0x01EE1EC0 LDR X8, [X8 + 0xB8]
	0x01EE1EC4 MOV V9.16B, V0.16B
	0x01EE1EC8 LDR X1, [X8 + 0x8]
	0x01EE1ECC BL 0x301DC6C
	0x01EE1ED0 LDR X3, [X28]
	0x01EE1ED4 MOV X0, X21
	0x01EE1ED8 MOV W1, W31
	0x01EE1EDC MOV W2, W24
	0x01EE1EE0 BL 0x301CC30
	0x01EE1EE4 LDR W8, [X21 + 0x18]
	0x01EE1EE8 LDR X3, [X28]
	0x01EE1EEC MOV X23, X0
	0x01EE1EF0 MOV X0, X21
	0x01EE1EF4 SUB W2, W8, W24
	0x01EE1EF8 MOV W1, W24
	0x01EE1EFC BL 0x301CC30
	0x01EE1F00 MOV X22, X0
	0x01EE1F04 MOV X0, X23
	0x01EE1F08 BL 0x1EE1A4C
	0x01EE1F0C CBZ X23, 0x1EE2100
	0x01EE1F10 LDR W29, [X23 + 0x18]
	0x01EE1F14 MOV X0, X22
	0x01EE1F18 MOV V10.16B, V0.16B
	0x01EE1F1C BL 0x1EE1A4C
	0x01EE1F20 CBZ X22, 0x1EE2100
	0x01EE1F24 LDR V3, [X22 + 0x18]
	0x01EE1F28 SCVTF S1, W27
	0x01EE1F2C SCVTF S2, S11
	0x01EE1F30 FMUL S1, S8, S1
	0x01EE1F34 FMUL S2, S9, S2
	0x01EE1F38 ADRP X27, 0x221F000
	0x01EE1F3C FADD S8, S1, S2
	0x01EE1F40 SCVTF S1, W29
	0x01EE1F44 SCVTF S2, S3
	0x01EE1F48 LDR X27, [X27 + 0x350]
	0x01EE1F4C FMUL S1, S10, S1
	0x01EE1F50 FMUL S0, S0, S2
	0x01EE1F54 FADD S9, S1, S0
	0x01EE1F58 FCMP S9, S8
	0x01EE1F5C B.MI 0x1EE1F88
	0x01EE1F60 B.NE 0x1EE1F7C
	0x01EE1F64 MOV X0, X31
	0x01EE1F68 BL 0x3C30A30
	0x01EE1F6C ADRP X8, 0xFFFFFFFFFEC08000
	0x01EE1F70 LDR V1, [X8 + 0xFF4]
	0x01EE1F74 FCMP S0, S1
	0x01EE1F78 B.GT 0x1EE1F88
	0x01EE1F7C MOV X22, X26
	0x01EE1F80 MOV X23, X25
	0x01EE1F84 MOV V9.16B, V8.16B
	0x01EE1F88 LDR X0, [X27]
	0x01EE1F8C LDR W8, [X0 + 0xE0]
	0x01EE1F90 CBNZ W8, 0x1EE1F9C
	0x01EE1F94 BL 0x1C16DFC
	0x01EE1F98 LDR X0, [X27]
	0x01EE1F9C LDR X8, [X0 + 0xB8]
	0x01EE1FA0 MOV X0, X21
	0x01EE1FA4 LDR X1, [X8 + 0x10]
	0x01EE1FA8 ADRP X8, 0x221F000
	0x01EE1FAC LDR X8, [X8 + 0x460]
	0x01EE1FB0 LDR X2, [X8]
	0x01EE1FB4 BL 0x301DC6C
	0x01EE1FB8 LDR X3, [X28]
	0x01EE1FBC MOV X0, X21
	0x01EE1FC0 MOV W1, W31
	0x01EE1FC4 MOV W2, W24
	0x01EE1FC8 BL 0x301CC30
	0x01EE1FCC LDR W8, [X21 + 0x18]
	0x01EE1FD0 LDR X3, [X28]
	0x01EE1FD4 MOV X25, X0
	0x01EE1FD8 MOV X0, X21
	0x01EE1FDC SUB W2, W8, W24
	0x01EE1FE0 MOV W1, W24
	0x01EE1FE4 BL 0x301CC30
	0x01EE1FE8 MOV X21, X0

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], X30
	003 Move [X31+96], X22
	004 Move [X31+104], X21
	005 Move [X31+112], X20
	006 Move [X31+120], X19
	007 Move X22, 0x24F9000
	008 Move W8, [X22+1415]
	009 Move X21, X2
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2220000
	017 Move X0, [X0+848]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1415], W8
	021 Move V4, [X21]
	022 Move V5, [X21+12]
	023 Move V2, [X20]
	024 Move V1, [X20+12]
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 Move V0, [X20+16]
	027 Subtract S6, S4, S5
	028 Subtract S7, S2, S1
	029 NotImplemented "Instruction FCMP not yet implemented."
	030 NotImplemented "Instruction CSET not yet implemented."
	031 Subtract V4, V3, V0
	032 Add S1, S2, S1
	033 Add V0, V3, V0
	034 Move S2, 0.5
	035 NotImplemented "Instruction MOVI not yet implemented."
	036 Subtract S1, S1, S6
	037 Subtract V0, V0, V4
	038 Multiply S1, S1, S2
	039 NotImplemented "Instruction INVALID not yet implemented."
	040 Add S2, S6, S1
	041 Add V3, V4, V0
	042 Move [X20+12], S1
	043 Move [X20+16], D0
	044 Move [X20], S2
	045 Move [X20+4], D3
	046 Move V4, [X21]
	047 Move V5, [X21+12]
	048 Add S4, S4, S5
	049 Add S5, S2, S1
	050 NotImplemented "Instruction FCMP not yet implemented."
	051 Add V5, V3, V0
	052 Subtract S2, S2, S1
	053 Subtract V3, V3, V0
	054 Move S0, 0.5
	055 NotImplemented "Instruction MOVI not yet implemented."
	056 Subtract S1, S4, S2
	057 Subtract V4, V5, V3
	058 Multiply S1, S1, S0
	059 NotImplemented "Instruction INVALID not yet implemented."
	060 Add S2, S2, S1
	061 Add V3, V3, V0
	062 Move W8, 1
	063 Move [X20+12], S1
	064 Move [X20+16], D0
	065 Move [X20], S2
	066 Move [X20+4], D3
	067 Move V6, [X21+4]
	068 Move V7, [X21+16]
	069 Move V4, V3
	070 Move V16, V0
	071 Move V4.S[0], V6.S[0]
	072 Move V16.S[0], V7.S[0]
	073 Subtract V5, V3, V0
	074 Subtract V4, V4, V16
	075 NotImplemented "Instruction INVALID not yet implemented."
	076 Move W9, S5
	077 Move TEMP, X9
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {101}
	081 Subtract S5, S2, S1
	082 Add S1, S2, S1
	083 Add V0, V3, V0
	084 Move S2, 0.5
	085 NotImplemented "Instruction MOVI not yet implemented."
	086 Subtract S1, S1, S5
	087 Subtract V0, V0, V4
	088 Multiply S1, S1, S2
	089 NotImplemented "Instruction INVALID not yet implemented."
	090 Add S2, S5, S1
	091 Add V3, V4, V0
	092 Move [X20+12], S1
	093 Move [X20+16], D0
	094 Move [X20], S2
	095 Move [X20+4], D3
	096 Move V6, [X21+4]
	097 Move V7, [X21+16]
	098 Move S4, V0.S[1]
	099 Move S5, V3.S[1]
	100 Move W8, 1
	101 Move S5, V3.S[1]
	102 Move S4, V0.S[1]
	103 Add S6, S6, S7
	104 Add S7, S3, S0
	105 NotImplemented "Instruction FCMP not yet implemented."
	106 Add S7, S5, S4
	107 Add S16, S2, S1
	108 Subtract S2, S2, S1
	109 Subtract S3, S3, S0
	110 Subtract S5, S5, S4
	111 Move S4, 0.5
	112 Subtract S0, S16, S2
	113 Subtract S6, S6, S3
	114 Subtract S7, S7, S5
	115 Multiply S1, S0, S4
	116 Multiply S0, S6, S4
	117 Multiply S4, S7, S4
	118 Add S2, S2, S1
	119 Add S3, S3, S0
	120 Add S5, S5, S4
	121 Move W8, 1
	122 Move [X20+16], S0
	123 Move [X20+24], S4
	124 Move [X20], S2
	125 Move [X20+8], S3
	126 Move [X20+8], S5
	127 Move [X20+16], S1
	128 Move V7, [X21+8]
	129 Move V16, [X21+20]
	130 Subtract S17, S5, S4
	131 Subtract S6, S7, S16
	132 NotImplemented "Instruction FCMP not yet implemented."
	133 Subtract S7, S2, S1
	134 Subtract S16, S3, S0
	135 Add S1, S2, S1
	136 Add S0, S3, S0
	137 Add S2, S5, S4
	138 Move S3, 0.5
	139 Subtract S1, S1, S7
	140 Subtract S0, S0, S16
	141 Subtract S2, S2, S6
	142 Multiply S1, S1, S3
	143 Multiply S0, S0, S3
	144 Multiply S4, S2, S3
	145 Add S2, S7, S1
	146 Add S3, S16, S0
	147 Add S5, S6, S4
	148 Move [X20+16], S0
	149 Move [X20+24], S4
	150 Move [X20], S2
	151 Move [X20+8], S3
	152 Move [X20+8], S5
	153 Move [X20+16], S1
	154 Move V6, [X21+8]
	155 Move V7, [X21+20]
	156 Add S6, S6, S7
	157 Add S7, S5, S4
	158 NotImplemented "Instruction FCMP not yet implemented."
	159 Add S6, S7, S16
	160 Add S7, S5, S4
	161 NotImplemented "Instruction FCMP not yet implemented."
	162 Add S7, S3, S0
	163 Add S16, S2, S1
	164 Subtract S1, S2, S1
	165 Subtract S0, S3, S0
	166 Subtract S2, S5, S4
	167 Move S3, 0.5
	168 Subtract S4, S16, S1
	169 Subtract S5, S7, S0
	170 Subtract S6, S6, S2
	171 Multiply S4, S4, S3
	172 Multiply S5, S5, S3
	173 Multiply S3, S6, S3
	174 Add S1, S1, S4
	175 Add S0, S0, S5
	176 Add S2, S2, S3
	177 Move [X20+16], S5
	178 Move [X20+24], S3
	179 Move [X20], S1
	180 Move [X20+8], S0
	181 Move [X20+8], S2
	182 Move [X20+16], S4
	183 Compare W8, 0
	184 JumpIfEqual {236}
	185 Move X21, 0x2220000
	186 Move X21, [X21+848]
	187 Move X0, [X21]
	188 Move W8, [X0+224]
	189 Compare W8, 0
	190 JumpIfNotEqual {192}
	191 Call 0x1C17DFC
	192 Move X8, [X20+16]
	193 Move V0, [X20]
	194 NotImplemented "Instruction MOVI not yet implemented."
	195 Add X0, X31, 32
	196 Add X1, X31, 0
	197 Move X2, X31
	198 Move [X31+48], V1
	199 Move [X31+56], V1
	200 Move [X31+16], X8
	201 Move [X31], V0
	202 Move [X31+2], V1
	203 Call AABB..ctor, X0, X1
	204 Move V1, [X31+48]
	205 Move V0, [X31+64]
	206 Move V2, [X31+2]
	207 Move [X20+56], V0
	208 Move [X20+40], V1
	209 Move [X20+24], V2
	210 Move X0, [X21]
	211 Move W8, [X0+224]
	212 Compare W8, 0
	213 JumpIfNotEqual {215}
	214 Call 0x1C17DFC
	215 Move W8, [X20+76]
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move X0, [X21]
	218 Move W8, [X0+224]
	219 Compare W8, 0
	220 JumpIfNotEqual {222}
	221 Call 0x1C17DFC
	222 Compare X19, 0
	223 JumpIfEqual {243}
	224 Move X8, [X19+16]
	225 Compare X8, 0
	226 JumpIfEqual {243}
	227 NotImplemented "Instruction LDRSW not yet implemented."
	228 Move W10, [X8+24]
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move W10, 120
	231 NotImplemented "Instruction MADD not yet implemented."
	232 Add X0, X8, 32
	233 Move X1, X19
	234 Move X2, X20
	235 Call BVHNode.ChildExpanded, X0, X1, X2
	236 Move X20, [X31+112]
	237 Move X19, [X31+120]
	238 Move X22, [X31+96]
	239 Move X21, [X31+104]
	240 Move X30, [X31+80]
	241 Add X31, X31, 128
	242 Return 
	243 Call 0x1C17F20
	244 Call 0x1C17F28

Method: System.Void UpdateBoundsCache()

Disassembly:
	0x01EE3EE4 FADD V0.2S, V0.2S, V20.2S
	0x01EE3EE8 FADD S1, S1, S21
	0x01EE3EEC ADD X0, X31, 0x40
	0x01EE3EF0 MOVZ W2, 0x60
	0x01EE3EF4 STR X8, [X31 + 0x188]
	0x01EE3EF8 STR W9, [X31 + 0x190]
	0x01EE3EFC STUR D0, [X10 + 0x84]
	0x01EE3F00 STR S1, [X31 + 0x19C]
	0x01EE3F04 BL 0x3EB1AC0
	0x01EE3F08 ADD X8, X31, 0xB0
	0x01EE3F0C ADD X0, X31, 0x40
	0x01EE3F10 ADD X1, X31, 0x1A0
	0x01EE3F14 BL 0x1EE4148
	0x01EE3F18 ADD X0, X23, 0x3C
	0x01EE3F1C ADD X2, X23, 0xCC
	0x01EE3F20 AND W7, W20, 0x1
	0x01EE3F24 ADD X1, X31, 0x110
	0x01EE3F28 ADD X3, X31, 0xB0
	0x01EE3F2C ADD X6, X31, 0x1A0
	0x01EE3F30 MOV X4, X23
	0x01EE3F34 MOV X5, X21
	0x01EE3F38 STR X22, [X31]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+80], X30
	003 Move [X31+88], X19
	004 Move X8, [X0+16]
	005 Move V0, [X0]
	006 Move X19, X0
	007 NotImplemented "Instruction MOVI not yet implemented."
	008 Add X0, X31, 32
	009 Add X1, X31, 0
	010 Move X2, X31
	011 Move [X31+48], V1
	012 Move [X31+56], V1
	013 Move [X31+16], X8
	014 Move [X31], V0
	015 Move [X31+2], V1
	016 Call AABB..ctor, X0, X1
	017 Move V1, [X31+48]
	018 Move V0, [X31+64]
	019 Move V2, [X31+2]
	020 Move [X19+56], V0
	021 Move [X19+40], V1
	022 Move [X19+24], V2
	023 Move X30, [X31+80]
	024 Move X19, [X31+88]
	025 Add X31, X31, 96
	026 Return 

Method: System.Void ChildRefit(Fusion.LagCompensation.BVH bvh, System.Boolean propagate = True)

Disassembly:
	0x01EE3F3C BL 0x1EE425C
	0x01EE3F40 TBZ X0, 0x0, 0x1EE4000
	0x01EE3F44 TBZ X20, 0x0, 0x1EE4000
	0x01EE3F48 LDR V0, [X31 + 0x1A0]
	0x01EE3F4C LDR V1, [X31 + 0x1A4]
	0x01EE3F50 LDP S10, S9, [X19]
	0x01EE3F54 LDR V2, [X31 + 0x1A8]
	0x01EE3F58 LDR V8, [X19 + 0x8]
	0x01EE3F5C FMUL S0, S0, S10
	0x01EE3F60 FMUL S1, S1, S9
	0x01EE3F64 FADD S0, S0, S1
	0x01EE3F68 FMUL S1, S2, S8
	0x01EE3F6C FADD S0, S1, S0
	0x01EE3F70 FCMP S0, 0x0
	0x01EE3F74 B.PL 0x1EE3F8C
	0x01EE3F78 FNEG S10, S10
	0x01EE3F7C FNEG S9, S9
	0x01EE3F80 FNEG S8, S8
	0x01EE3F84 STP S10, S9, [X19]
	0x01EE3F88 STR S8, [X19 + 0x8]
	0x01EE3F8C ADRP X20, 0x24F5000
	0x01EE3F90 LDRB W8, [X20 + 0x785]
	0x01EE3F94 CBNZ W8, 0x1EE3FAC
	0x01EE3F98 ADRP X0, 0x2210000
	0x01EE3F9C LDR X0, [X0 + 0x5A8]
	0x01EE3FA0 BL 0x1C16CF4
	0x01EE3FA4 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x24F7000
	008 Move X23, 0x221E000
	009 Move W8, [X22+1416]
	010 Move X23, [X23+848]
	011 Move W20, W2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x221E000
	019 Move X0, [X0+848]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1416], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move W1, [X21+72]
	029 And W2, W20, 1
	030 Move X0, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X30, [X31+48]
	036 Move X23, [X31+56]
	037 Call BVHNode.ChildRefit, X0, X1, X2
	038 Return 

Method: System.Void ChildRefit(Fusion.LagCompensation.BVH bvh, System.Int32 nodeIndex, System.Boolean propagate = True)

Disassembly:
	0x01EE21D0 MOV X3, X31
	0x01EE21D4 BL 0x339FA34
	0x01EE21D8 LDR X0, [X19 + 0x30]
	0x01EE21DC CBZ X0, 0x1EE2314
	0x01EE21E0 ADRP X9, 0x221B000
	0x01EE21E4 LDR X9, [X9 + 0xDD8]
	0x01EE21E8 LDR W10, [X0 + 0x1C]
	0x01EE21EC LDR X8, [X0 + 0x10]
	0x01EE21F0 LDR X9, [X9]
	0x01EE21F4 ADD W10, W10, 0x1
	0x01EE21F8 STR W10, [X0 + 0x1C]
	0x01EE21FC CBZ X8, 0x1EE2314
	0x01EE2200 LDRSW X10, [X0 + 0x18]
	0x01EE2204 LDR W11, [X8 + 0x18]
	0x01EE2208 CMP W10, W11
	0x01EE220C B.CS 0x1EE2224
	0x01EE2210 ADD W9, W10, 0x1
	0x01EE2214 ADD X8, X8, X10, 0x3, LSL
	0x01EE2218 STR W9, [X0 + 0x18]
	0x01EE221C STR X21, [X8 + 0x20]
	0x01EE2220 B 0x1EE2238
	0x01EE2224 LDR X8, [X9 + 0x20]
	0x01EE2228 MOV X1, X21
	0x01EE222C LDR X8, [X8 + 0xC0]
	0x01EE2230 LDR X2, [X8 + 0x70]
	0x01EE2234 BL 0x301BF90
	0x01EE2238 ADD X1, X31, 0xC
	0x01EE223C MOV X0, X19
	0x01EE2240 BL 0x1EDE8DC
	0x01EE2244 MOVZ W8, 0x78
	0x01EE2248 LDR W21, [X31 + 0xC]
	0x01EE224C NOP
	0x01EE2250 MADD X8, X26, X8, X25
	0x01EE2254 LDR W3, [X8 + 0x68]
	0x01EE2258 LDR W4, [X20 + 0x5C]
	0x01EE225C MOV X1, X19
	0x01EE2260 MOV W2, W21
	0x01EE2264 MOV X5, X31
	0x01EE2268 MOV X22, X0
	0x01EE226C BL 0x1EDFD74
	0x01EE2270 ADD X1, X31, 0x8
	0x01EE2274 MOV X0, X19
	0x01EE2278 BL 0x1EDE8DC
	0x01EE227C LDR W8, [X22 + 0x5C]
	0x01EE2280 LDR W2, [X31 + 0x8]
	0x01EE2284 LDR X5, [X19 + 0x30]
	0x01EE2288 MOV X1, X19
	0x01EE228C ADD W4, W8, 0x1
	0x01EE2290 MOV W3, W21
	0x01EE2294 MOV X23, X0
	0x01EE2298 BL 0x1EDFD74
	0x01EE229C CMP W28, W29
	0x01EE22A0 B.NE 0x1EE22AC
	0x01EE22A4 STR W21, [X27]
	0x01EE22A8 B 0x1EE22B8
	0x01EE22AC MOVZ W8, 0x78
	0x01EE22B0 MADD X8, X26, X8, X25
	0x01EE22B4 STR W21, [X8 + 0x70]
	0x01EE22B8 STR W21, [X20 + 0x4C]
	0x01EE22BC LDR W8, [X22 + 0x5C]
	0x01EE22C0 ADD W8, W8, 0x1
	0x01EE22C4 STR W8, [X20 + 0x5C]
	0x01EE22C8 LDR X0, [X24]
	0x01EE22CC LDR W8, [X0 + 0xE0]
	0x01EE22D0 CBNZ W8, 0x1EE22D8
	0x01EE22D4 BL 0x1C16DFC
	0x01EE22D8 LDR W8, [X20 + 0x48]
	0x01EE22DC MOV X0, X19
	0x01EE22E0 MOV W1, W21
	0x01EE22E4 LDP X20, X19, [X31 + 0x60]
	0x01EE22E8 STR W8, [X22 + 0x50]
	0x01EE22EC LDR W8, [X23 + 0x48]
	0x01EE22F0 LDP X24, X23, [X31 + 0x40]
	0x01EE22F4 LDP X26, X25, [X31 + 0x30]
	0x01EE22F8 LDP X28, X27, [X31 + 0x20]
	0x01EE22FC STR W8, [X22 + 0x54]
	0x01EE2300 LDP X22, X21, [X31 + 0x50]
	0x01EE2304 LDP X29, X30, [X31 + 0x10]
	0x01EE2308 MOVZ W2, 0x1
	0x01EE230C ADD X31, X31, 0x70
	0x01EE2310 B 0x1EE11D0
	0x01EE2314 BL 0x1C16F20
	0x01EE2318 BL 0x1C16F28
	0x01EE231C STP X30, X25, [X31 - 0x40]!
	0x01EE2320 STP X24, X23, [X31 + 0x10]
	0x01EE2324 STP X22, X21, [X31 + 0x20]
	0x01EE2328 STP X20, X19, [X31 + 0x30]
	0x01EE232C ADRP X20, 0x221E000
	0x01EE2330 LDR X20, [X20 + 0x350]
	0x01EE2334 MOV X19, X1
	0x01EE2338 MOV X21, X0
	0x01EE233C MOV W22, W31
	0x01EE2340 ADRP X23, 0x24F7000
	0x01EE2344 MOVZ W24, 0x78
	0x01EE2348 MOVZ W25, 0x1
	0x01EE234C LDRB W8, [X23 + 0x581]
	0x01EE2350 TBNZ X8, 0x0, 0x1EE2360
	0x01EE2354 MOV X0, X20
	0x01EE2358 BL 0x1C16CF4
	0x01EE235C STRB W25, [X23 + 0x581]
	0x01EE2360 LDR X8, [X21 + 0x68]
	0x01EE2364 CBZ X8, 0x1EE2370
	0x01EE2368 LDRB W8, [X8 + 0x30]
	0x01EE236C TBZ X8, 0x3, 0x1EE23D4
	0x01EE2370 LDR X0, [X20]
	0x01EE2374 LDR W8, [X0 + 0xE0]
	0x01EE2378 CBNZ W8, 0x1EE2380
	0x01EE237C BL 0x1C16DFC
	0x01EE2380 CBZ X19, 0x1EE23EC
	0x01EE2384 LDR X8, [X19 + 0x10]
	0x01EE2388 CBZ X8, 0x1EE23EC
	0x01EE238C LDRSW X9, [X21 + 0x50]
	0x01EE2390 LDR W10, [X8 + 0x18]
	0x01EE2394 CMP W9, W10
	0x01EE2398 B.CS 0x1EE23F0
	0x01EE239C MADD X8, X9, X24, X8
	0x01EE23A0 ADD X0, X8, 0x20
	0x01EE23A4 MOV X1, X19
	0x01EE23A8 BL 0x1EE231C
	0x01EE23AC LDR X8, [X19 + 0x10]
	0x01EE23B0 CBZ X8, 0x1EE23EC
	0x01EE23B4 LDRSW X9, [X21 + 0x54]
	0x01EE23B8 LDR W10, [X8 + 0x18]
	0x01EE23BC CMP W9, W10
	0x01EE23C0 B.CS 0x1EE23F0
	0x01EE23C4 MADD X8, X9, X24, X8
	0x01EE23C8 ADD X21, X8, 0x20
	0x01EE23CC ADD W22, W0, W22
	0x01EE23D0 B 0x1EE234C
	0x01EE23D4 ADD W0, W22, 0x1
	0x01EE23D8 LDP X20, X19, [X31 + 0x30]
	0x01EE23DC LDP X22, X21, [X31 + 0x20]
	0x01EE23E0 LDP X24, X23, [X31 + 0x10]
	0x01EE23E4 LDP X30, X25, [X31], #0x40
	0x01EE23E8 RET
	0x01EE23EC BL 0x1C16F20
	0x01EE23F0 BL 0x1C16F28
	0x01EE23F4 STR X30, [X31 - 0x60]!
	0x01EE23F8 STP X28, X27, [X31 + 0x10]
	0x01EE23FC STP X26, X25, [X31 + 0x20]
	0x01EE2400 STP X24, X23, [X31 + 0x30]
	0x01EE2404 STP X22, X21, [X31 + 0x40]
	0x01EE2408 STP X20, X19, [X31 + 0x50]
	0x01EE240C ADRP X21, 0x24F7000
	0x01EE2410 LDRB W8, [X21 + 0x584]
	0x01EE2414 MOV W22, W2
	0x01EE2418 MOV X19, X1
	0x01EE241C MOV X20, X0
	0x01EE2420 TBNZ X8, 0x0, 0x1EE2438
	0x01EE2424 ADRP X0, 0x221E000
	0x01EE2428 LDR X0, [X0 + 0x350]
	0x01EE242C BL 0x1C16CF4
	0x01EE2430 MOVZ W8, 0x1
	0x01EE2434 STRB W8, [X21 + 0x584]
	0x01EE2438 LDR W8, [X20 + 0x50]
	0x01EE243C ADRP X23, 0x221E000
	0x01EE2440 LDR X23, [X23 + 0x350]
	0x01EE2444 CMP W8, W22
	0x01EE2448 B.NE 0x1EE2498
	0x01EE244C LDR X0, [X23]
	0x01EE2450 LDR W8, [X0 + 0xE0]
	0x01EE2454 CBNZ W8, 0x1EE245C
	0x01EE2458 BL 0x1C16DFC
	0x01EE245C CBZ X19, 0x1EE27D8
	0x01EE2460 LDR X8, [X19 + 0x10]
	0x01EE2464 CBZ X8, 0x1EE27D8
	0x01EE2468 LDR W9, [X20 + 0x50]
	0x01EE246C LDR W10, [X8 + 0x18]
	0x01EE2470 CMP W9, W10
	0x01EE2474 B.CS 0x1EE27DC
	0x01EE2478 LDRSW X9, [X20 + 0x54]
	0x01EE247C CMP W9, W10
	0x01EE2480 B.CS 0x1EE27DC
	0x01EE2484 MOVZ W10, 0x78
	0x01EE2488 MADD X8, X9, X10, X8
	0x01EE248C ADD X21, X8, 0x20
	0x01EE2490 STR W31, [X20 + 0x50]
	0x01EE2494 B 0x1EE24EC
	0x01EE2498 LDR W8, [X20 + 0x54]
	0x01EE249C CMP W8, W22
	0x01EE24A0 B.NE 0x1EE27E0
	0x01EE24A4 LDR X0, [X23]
	0x01EE24A8 LDR W8, [X0 + 0xE0]
	0x01EE24AC CBNZ W8, 0x1EE24B4
	0x01EE24B0 BL 0x1C16DFC
	0x01EE24B4 CBZ X19, 0x1EE27D8
	0x01EE24B8 LDR X8, [X19 + 0x10]
	0x01EE24BC CBZ X8, 0x1EE27D8
	0x01EE24C0 LDR W9, [X20 + 0x54]
	0x01EE24C4 LDR W10, [X8 + 0x18]
	0x01EE24C8 CMP W9, W10
	0x01EE24CC B.CS 0x1EE27DC
	0x01EE24D0 LDRSW X9, [X20 + 0x50]
	0x01EE24D4 CMP W9, W10
	0x01EE24D8 B.CS 0x1EE27DC
	0x01EE24DC MOVZ W10, 0x78
	0x01EE24E0 MADD X8, X9, X10, X8
	0x01EE24E4 ADD X21, X8, 0x20
	0x01EE24E8 STR W31, [X20 + 0x54]
	0x01EE24EC MOV X0, X19
	0x01EE24F0 MOV W1, W22
	0x01EE24F4 BL 0x1EDE988
	0x01EE24F8 LDR X0, [X23]
	0x01EE24FC LDR W8, [X0 + 0xE0]
	0x01EE2500 CBNZ W8, 0x1EE2508
	0x01EE2504 BL 0x1C16DFC
	0x01EE2508 MOV X22, X20
	0x01EE250C LDR W8, [X22 + 0x48]!
	0x01EE2510 CMP W8, 0x1
	0x01EE2514 B.NE 0x1EE26C0
	0x01EE2518 MOVZ W2, 0x78
	0x01EE251C MOV X0, X20
	0x01EE2520 MOV X1, X21
	0x01EE2524 BL 0x3EB1B30
	0x01EE2528 ADRP X8, 0xFFFFFFFFFEC0B000
	0x01EE252C LDR V0, [X8 + 0xEC0]
	0x01EE2530 STR W31, [X20 + 0x5C]
	0x01EE2534 STR D0, [X20 + 0x48]
	0x01EE2538 LDR X0, [X23]
	0x01EE253C LDR W8, [X0 + 0xE0]
	0x01EE2540 CBNZ W8, 0x1EE2548
	0x01EE2544 BL 0x1C16DFC
	0x01EE2548 LDR W8, [X20 + 0x50]
	0x01EE254C CMP W8, 0x1
	0x01EE2550 B.LT 0x1EE25A0
	0x01EE2554 LDR X0, [X23]
	0x01EE2558 LDR W9, [X0 + 0xE0]
	0x01EE255C CBNZ W9, 0x1EE2568
	0x01EE2560 BL 0x1C16DFC
	0x01EE2564 LDR W8, [X20 + 0x50]
	0x01EE2568 LDR X9, [X19 + 0x10]
	0x01EE256C CBZ X9, 0x1EE27D8
	0x01EE2570 LDR W10, [X9 + 0x18]
	0x01EE2574 CMP W8, W10
	0x01EE2578 B.CS 0x1EE27DC
	0x01EE257C LDR W10, [X20 + 0x48]
	0x01EE2580 MOVZ W11, 0x78
	0x01EE2584 SMADDL X8, X8, X11, X9
	0x01EE2588 ADD X0, X8, 0x20
	0x01EE258C STR W10, [X8 + 0x6C]
	0x01EE2590 LDR W9, [X20 + 0x5C]
	0x01EE2594 MOV X1, X19
	0x01EE2598 ADD W2, W9, 0x1
	0x01EE259C BL 0x1EE2828
	0x01EE25A0 LDR X0, [X23]
	0x01EE25A4 LDR W8, [X0 + 0xE0]
	0x01EE25A8 CBNZ W8, 0x1EE25B0
	0x01EE25AC BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 336
	002 Move [X31+176], D15
	003 Move [X31+184], D14
	004 Move [X31+192], D13
	005 Move [X31+200], D12
	006 Move [X31+208], D11
	007 Move [X31+216], D10
	008 Move [X31+224], D9
	009 Move [X31+232], D8
	010 Move [X31+240], X29
	011 Move [X31+248], X30
	012 Move [X31+256], X28
	013 Move [X31+264], X27
	014 Move [X31+272], X26
	015 Move [X31+280], X25
	016 Move [X31+288], X24
	017 Move [X31+296], X23
	018 Move [X31+304], X22
	019 Move [X31+312], X21
	020 Move [X31+320], X20
	021 Move [X31+328], X19
	022 Move X19, 0x24F8000
	023 Move W8, [X19+1417]
	024 Move W21, W2
	025 Move W20, W1
	026 Move X22, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {39}
	031 Move X0, 0x221F000
	032 Move X0, [X0+848]
	033 Call 0x1C17CF4
	034 Move X0, 0x2213000
	035 Move X0, [X0+3576]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X19+1417], W8
	039 Move [X31+24], X22
	040 Compare X22, 0
	041 JumpIfEqual {300}
	042 Xor W8, W21, 1
	043 Move W25, 120
	044 NotImplemented "Instruction MOVI not yet implemented."
	045 Move S9, 0.5
	046 Move [X31+16], W8
	047 Move [X31+20], W31
	048 Move X19, [X31+24]
	049 Move X26, [X19+16]
	050 Compare X26, 0
	051 JumpIfEqual {300}
	052 Move W8, [X26+24]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X8, 0x221F000
	055 Move X8, [X8+848]
	056 Move X28, X26
	057 Move X0, [X8]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {65}
	061 Call 0x1C17DFC
	062 Move X28, [X19+16]
	063 Compare X28, 0
	064 JumpIfEqual {300}
	065 Move X27, W20
	066 NotImplemented "Instruction MADD not yet implemented."
	067 NotImplemented "Instruction LDRSW not yet implemented."
	068 Move W9, [X28+24]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction MADD not yet implemented."
	071 NotImplemented "Instruction LDRSW not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction SMADDL not yet implemented."
	074 Add X20, X9, 32
	075 Move X9, [X20+16]
	076 Move V0, [X20]
	077 Add X10, X28, 32
	078 NotImplemented "Instruction MADD not yet implemented."
	079 Move X21, X23
	080 Move X22, X23
	081 Move X19, X23
	082 Move [X31+144], X9
	083 Move [X31+8], V0
	084 Move S12, [X23]
	085 Move S11, [X23+4]
	086 Add X21, X21, 8
	087 Move V10, [X21]
	088 Add X22, X22, 12
	089 Move V15, [X22]
	090 Move V14, [X23+16]
	091 Add X19, X19, 20
	092 Move V13, [X19]
	093 Move [X31+4], V0
	094 Subtract S0, S12, S15
	095 Subtract S1, S11, S14
	096 Subtract S2, S10, S13
	097 Add X0, X31, 64
	098 Move X1, X31
	099 NotImplemented "Instruction MADD not yet implemented."
	100 Move [X31+80], X9
	101 Call Bounds.Contains, X0, X1
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {150}
	106 Add S0, S12, S15
	107 Add S1, S11, S14
	108 Add S2, S10, S13
	109 Add X0, X31, 64
	110 Move X1, X31
	111 Call Bounds.Contains, X0, X1
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {150}
	116 Move X8, [X20+16]
	117 Move V0, [X20]
	118 NotImplemented "Instruction NOP not yet implemented."
	119 NotImplemented "Instruction MADD not yet implemented."
	120 Add X0, X31, 32
	121 Move [X31+144], X8
	122 Move [X31+8], V0
	123 Move V12, [X24]
	124 Move S11, [X9+36]
	125 Move S10, [X9+40]
	126 Move S13, [X9+44]
	127 Move S14, [X9+48]
	128 Move V15, [X9+52]
	129 Move [X31+2], V0
	130 Move X1, X31
	131 Subtract S0, S12, S13
	132 Subtract S1, S11, S14
	133 Subtract S2, S10, S15
	134 Move [X31+48], X8
	135 Call Bounds.Contains, X0, X1
	136 Move TEMP, X0
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfNotEqual {150}
	140 Add S0, S12, S13
	141 Add S1, S11, S14
	142 Add S2, S10, S15
	143 Add X0, X31, 32
	144 Move X1, X31
	145 Call Bounds.Contains, X0, X1
	146 Move TEMP, X0
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfEqual {277}
	150 NotImplemented "Instruction MADD not yet implemented."
	151 Move V0, [X23]
	152 Move V1, [X21]
	153 Move V2, [X22]
	154 Move V3, [X19]
	155 Move V4, [X24]
	156 Move V5, [X9+40]
	157 NotImplemented "Instruction LDUR not yet implemented."
	158 Move V7, [X9+52]
	159 Subtract V16, V0, V2
	160 Subtract S17, S1, S3
	161 Add V0, V0, V2
	162 Add S1, S1, S3
	163 Subtract V2, V4, V6
	164 Subtract S3, S5, S7
	165 Add V4, V4, V6
	166 Add S5, S5, S7
	167 NotImplemented "Instruction INVALID not yet implemented."
	168 NotImplemented "Instruction FCMP not yet implemented."
	169 NotImplemented "Instruction INVALID not yet implemented."
	170 NotImplemented "Instruction INVALID not yet implemented."
	171 NotImplemented "Instruction FCSEL not yet implemented."
	172 NotImplemented "Instruction INVALID not yet implemented."
	173 NotImplemented "Instruction FCMP not yet implemented."
	174 NotImplemented "Instruction FCSEL not yet implemented."
	175 Subtract V0, V0, V6
	176 Subtract S1, S1, S16
	177 NotImplemented "Instruction INVALID not yet implemented."
	178 Multiply S1, S1, S9
	179 Add V2, V6, V0
	180 Add S3, S16, S1
	181 Subtract V6, V2, V0
	182 Add V0, V0, V2
	183 Subtract S2, S3, S1
	184 NotImplemented "Instruction INVALID not yet implemented."
	185 Add S1, S1, S3
	186 NotImplemented "Instruction INVALID not yet implemented."
	187 NotImplemented "Instruction INVALID not yet implemented."
	188 NotImplemented "Instruction FCMP not yet implemented."
	189 NotImplemented "Instruction INVALID not yet implemented."
	190 NotImplemented "Instruction FCSEL not yet implemented."
	191 NotImplemented "Instruction FCMP not yet implemented."
	192 Subtract V0, V0, V6
	193 NotImplemented "Instruction FCSEL not yet implemented."
	194 NotImplemented "Instruction INVALID not yet implemented."
	195 NotImplemented "Instruction MADD not yet implemented."
	196 Subtract S1, S1, S2
	197 Add V3, V6, V0
	198 Move X11, [X31+24]
	199 Multiply S1, S1, S9
	200 Move [X20], D3
	201 Move [X8+44], D0
	202 Add S2, S2, S1
	203 Move X9, X8
	204 Move [X8-4], S2
	205 Move [X9+8], S1
	206 Move W10, [X11+72]
	207 Move W12, [X31+20]
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move V3, [X11+68]
	210 Move S4, V0.S[1]
	211 Add S2, S0, S0
	212 Add S5, S1, S1
	213 Add S6, S4, S4
	214 Multiply S2, S2, S3
	215 Multiply S6, S6, S3
	216 Multiply S3, S5, S3
	217 Multiply S2, S2, S9
	218 Multiply S5, S6, S9
	219 Multiply S3, S3, S9
	220 NotImplemented "Instruction MADD not yet implemented."
	221 Add S0, S0, S2
	222 Add S2, S4, S5
	223 Add S1, S1, S3
	224 Add W12, W12, 1
	225 Move [X8], S0
	226 Move [X10+48], S2
	227 Move [X9], S1
	228 Move [X31+20], W12
	229 Move X8, 0x221F000
	230 Move X8, [X8+848]
	231 Move X0, [X8]
	232 Move W8, [X0+224]
	233 Compare W8, 0
	234 JumpIfNotEqual {236}
	235 Call 0x1C17DFC
	236 Move X8, [X20+16]
	237 Move V0, [X20]
	238 NotImplemented "Instruction MOVI not yet implemented."
	239 Add X0, X31, 128
	240 Add X1, X31, 96
	241 Move X2, X31
	242 Move [X31+144], V1
	243 Move [X31+152], V1
	244 Move [X31+112], X8
	245 Move [X31+6], V0
	246 Move [X31+8], V1
	247 Call AABB..ctor, X0, X1
	248 NotImplemented "Instruction MADD not yet implemented."
	249 Move W20, [X8+108]
	250 Move W10, [X31+16]
	251 Move V1, [X31+144]
	252 Move V0, [X31+160]
	253 Move V2, [X31+8]
	254 NotImplemented "Instruction CMP not yet implemented."
	255 NotImplemented "Instruction CSET not yet implemented."
	256 Or W9, W9, W10
	257 Move [X8+88], V0
	258 Move [X8+72], V1
	259 Move [X8+56], V2
	260 Move TEMP, X9
	261 And TEMP, TEMP, 1
	262 Compare TEMP, 1
	263 JumpIfEqual {277}
	264 Move X8, [X31+24]
	265 Move X0, [X8+40]
	266 Compare X0, 0
	267 JumpIfEqual {300}
	268 Move X8, 0x2213000
	269 Move X8, [X8+3576]
	270 Move W1, W20
	271 Move X2, [X8]
	272 Call HashSet`1<Int32>.Contains, X0, X1
	273 Move TEMP, X0
	274 And TEMP, TEMP, 1
	275 Compare TEMP, 1
	276 JumpIfNotEqual {48}
	277 Move X20, [X31+320]
	278 Move X19, [X31+328]
	279 Move X22, [X31+304]
	280 Move X21, [X31+312]
	281 Move X24, [X31+288]
	282 Move X23, [X31+296]
	283 Move X26, [X31+272]
	284 Move X25, [X31+280]
	285 Move X28, [X31+256]
	286 Move X27, [X31+264]
	287 Move X29, [X31+240]
	288 Move X30, [X31+248]
	289 Move D9, [X31+224]
	290 Move D8, [X31+232]
	291 Move D11, [X31+208]
	292 Move D10, [X31+216]
	293 Move D13, [X31+192]
	294 Move D12, [X31+200]
	295 Move D15, [X31+176]
	296 Move D14, [X31+184]
	297 Add X31, X31, 336
	298 Return 
	299 Call 0x1C17F28
	300 Call 0x1C17F20

Method: System.Void InitNode(ref Fusion.LagCompensation.BVHNode node, Fusion.LagCompensation.BVH bvh, System.Int32 index, System.Int32 parentIndex, System.Int32 curDepth, System.Collections.Generic.List`1<Fusion.HitboxRoot> entries = null)

Disassembly:
	0x01EE0D74 FSUB V4.2S, V4.2S, V16.2S
	0x00000000 INVALID
	0x01EE0D7C FMOV W9, S5
	0x01EE0D80 TBZ X9, 0x0, 0x1EE0DD8
	0x01EE0D84 FSUB S5, S2, S1
	0x01EE0D88 FADD S1, S2, S1
	0x01EE0D8C FADD V0.2S, V3.2S, V0.2S
	0x01EE0D90 FMOV S2, 0.5
	0x01EE0D94 MOVI V3.2S, 0x3F, 0x18
	0x01EE0D98 FSUB S1, S1, S5
	0x01EE0D9C FSUB V0.2S, V0.2S, V4.2S
	0x01EE0DA0 FMUL S1, S1, S2
	0x00000000 INVALID
	0x01EE0DA8 FADD S2, S5, S1
	0x01EE0DAC FADD V3.2S, V4.2S, V0.2S
	0x01EE0DB0 STR S1, [X20 + 0xC]
	0x01EE0DB4 STR D0, [X20 + 0x10]
	0x01EE0DB8 STR S2, [X20]
	0x01EE0DBC STUR D3, [X20 + 0x4]
	0x01EE0DC0 LDR V6, [X21 + 0x4]
	0x01EE0DC4 LDR V7, [X21 + 0x10]
	0x01EE0DC8 MOV S4, V0.S[1]
	0x01EE0DCC MOV S5, V3.S[1]
	0x01EE0DD0 MOVZ W8, 0x1
	0x01EE0DD4 B 0x1EE0DE0
	0x01EE0DD8 MOV S5, V3.S[1]
	0x01EE0DDC MOV S4, V0.S[1]
	0x01EE0DE0 FADD S6, S6, S7
	0x01EE0DE4 FADD S7, S3, S0
	0x01EE0DE8 FCMP S6, S7
	0x01EE0DEC B.LE 0x1EE0E3C
	0x01EE0DF0 FADD S7, S5, S4
	0x01EE0DF4 FADD S16, S2, S1
	0x01EE0DF8 FSUB S2, S2, S1
	0x01EE0DFC FSUB S3, S3, S0
	0x01EE0E00 FSUB S5, S5, S4
	0x01EE0E04 FMOV S4, 0.5
	0x01EE0E08 FSUB S0, S16, S2
	0x01EE0E0C FSUB S6, S6, S3
	0x01EE0E10 FSUB S7, S7, S5
	0x01EE0E14 FMUL S1, S0, S4
	0x01EE0E18 FMUL S0, S6, S4
	0x01EE0E1C FMUL S4, S7, S4
	0x01EE0E20 FADD S2, S2, S1
	0x01EE0E24 FADD S3, S3, S0
	0x01EE0E28 FADD S5, S5, S4
	0x01EE0E2C MOVZ W8, 0x1
	0x01EE0E30 STP S0, S4, [X20 + 0x10]
	0x01EE0E34 STP S2, S3, [X20]
	0x01EE0E38 STP S5, S1, [X20 + 0x8]
	0x01EE0E3C LDR V7, [X21 + 0x8]
	0x01EE0E40 LDR V16, [X21 + 0x14]
	0x01EE0E44 FSUB S17, S5, S4
	0x01EE0E48 FSUB S6, S7, S16
	0x01EE0E4C FCMP S6, S17
	0x01EE0E50 B.PL 0x1EE0EB8
	0x01EE0E54 FSUB S7, S2, S1
	0x01EE0E58 FSUB S16, S3, S0
	0x01EE0E5C FADD S1, S2, S1
	0x01EE0E60 FADD S0, S3, S0
	0x01EE0E64 FADD S2, S5, S4
	0x01EE0E68 FMOV S3, 0.5
	0x01EE0E6C FSUB S1, S1, S7
	0x01EE0E70 FSUB S0, S0, S16
	0x01EE0E74 FSUB S2, S2, S6
	0x01EE0E78 FMUL S1, S1, S3
	0x01EE0E7C FMUL S0, S0, S3
	0x01EE0E80 FMUL S4, S2, S3
	0x01EE0E84 FADD S2, S7, S1
	0x01EE0E88 FADD S3, S16, S0
	0x01EE0E8C FADD S5, S6, S4
	0x01EE0E90 STP S0, S4, [X20 + 0x10]
	0x01EE0E94 STP S2, S3, [X20]
	0x01EE0E98 STP S5, S1, [X20 + 0x8]
	0x01EE0E9C LDR V6, [X21 + 0x8]
	0x01EE0EA0 LDR V7, [X21 + 0x14]
	0x01EE0EA4 FADD S6, S6, S7
	0x01EE0EA8 FADD S7, S5, S4
	0x01EE0EAC FCMP S6, S7
	0x01EE0EB0 B.GT 0x1EE0EC8
	0x01EE0EB4 B 0x1EE0F18
	0x01EE0EB8 FADD S6, S7, S16
	0x01EE0EBC FADD S7, S5, S4
	0x01EE0EC0 FCMP S6, S7
	0x01EE0EC4 B.LE 0x1EE0F14
	0x01EE0EC8 FADD S7, S3, S0
	0x01EE0ECC FADD S16, S2, S1
	0x01EE0ED0 FSUB S1, S2, S1
	0x01EE0ED4 FSUB S0, S3, S0
	0x01EE0ED8 FSUB S2, S5, S4
	0x01EE0EDC FMOV S3, 0.5
	0x01EE0EE0 FSUB S4, S16, S1
	0x01EE0EE4 FSUB S5, S7, S0
	0x01EE0EE8 FSUB S6, S6, S2
	0x01EE0EEC FMUL S4, S4, S3
	0x01EE0EF0 FMUL S5, S5, S3
	0x01EE0EF4 FMUL S3, S6, S3
	0x01EE0EF8 FADD S1, S1, S4
	0x01EE0EFC FADD S0, S0, S5
	0x01EE0F00 FADD S2, S2, S3
	0x01EE0F04 STP S5, S3, [X20 + 0x10]
	0x01EE0F08 STP S1, S0, [X20]
	0x01EE0F0C STP S2, S4, [X20 + 0x8]
	0x01EE0F10 B 0x1EE0F18
	0x01EE0F14 CBZ W8, 0x1EE0FD0
	0x01EE0F18 ADRP X21, 0x2220000
	0x01EE0F1C LDR X21, [X21 + 0x350]
	0x01EE0F20 LDR X0, [X21]
	0x01EE0F24 LDR W8, [X0 + 0xE0]
	0x01EE0F28 CBNZ W8, 0x1EE0F30
	0x01EE0F2C BL 0x1C16DFC
	0x01EE0F30 LDR X8, [X20 + 0x10]
	0x01EE0F34 LDR V0, [X20]
	0x01EE0F38 MOVI V1.2D, 0x0
	0x01EE0F3C ADD X0, X31, 0x20
	0x01EE0F40 ADD X1, X31, 0x0
	0x01EE0F44 MOV X2, X31
	0x01EE0F48 STP V1, V1, [X31 + 0x30]
	0x01EE0F4C STR X8, [X31 + 0x10]
	0x01EE0F50 STR V0, [X31]
	0x01EE0F54 STR V1, [X31 + 0x2]
	0x01EE0F58 BL 0x1EED32C
	0x01EE0F5C LDP V1, V0, [X31 + 0x30]
	0x01EE0F60 LDR V2, [X31 + 0x2]
	0x01EE0F64 STUR V0, [X20 + 0x38]
	0x01EE0F68 STUR V1, [X20 + 0x28]
	0x01EE0F6C STUR V2, [X20 + 0x18]
	0x01EE0F70 LDR X0, [X21]
	0x01EE0F74 LDR W8, [X0 + 0xE0]
	0x01EE0F78 CBNZ W8, 0x1EE0F80
	0x01EE0F7C BL 0x1C16DFC
	0x01EE0F80 LDR W8, [X20 + 0x4C]
	0x01EE0F84 CMP W8, 0x1
	0x01EE0F88 B.LT 0x1EE0FD0
	0x01EE0F8C LDR X0, [X21]
	0x01EE0F90 LDR W8, [X0 + 0xE0]
	0x01EE0F94 CBNZ W8, 0x1EE0F9C
	0x01EE0F98 BL 0x1C16DFC
	0x01EE0F9C CBZ X19, 0x1EE0FE4
	0x01EE0FA0 LDR X8, [X19 + 0x10]
	0x01EE0FA4 CBZ X8, 0x1EE0FE4
	0x01EE0FA8 LDRSW X9, [X20 + 0x4C]
	0x01EE0FAC LDR W10, [X8 + 0x18]
	0x01EE0FB0 CMP W9, W10
	0x01EE0FB4 B.CS 0x1EE0FE8
	0x01EE0FB8 MOVZ W10, 0x78
	0x01EE0FBC MADD X8, X9, X10, X8
	0x01EE0FC0 ADD X0, X8, 0x20
	0x01EE0FC4 MOV X1, X19
	0x01EE0FC8 MOV X2, X20
	0x01EE0FCC BL 0x1EE0C5C
	0x01EE0FD0 LDP X20, X19, [X31 + 0x70]
	0x01EE0FD4 LDP X22, X21, [X31 + 0x60]
	0x01EE0FD8 LDR X30, [X31 + 0x50]
	0x01EE0FDC ADD X31, X31, 0x80
	0x01EE0FE0 RET
	0x01EE0FE4 BL 0x1C16F20
	0x01EE0FE8 BL 0x1C16F28
	0x01EE0FEC LDR V6, [X1]
	0x01EE0FF0 LDR V7, [X1 + 0x8]
	0x01EE0FF4 LDUR V16, [X1 + 0xC]
	0x01EE0FF8 LDR V17, [X1 + 0x14]
	0x01EE0FFC UNIMPLEMENTED
	0x01EE1000 MOV V0.S[1], V1.S[0]
	0x01EE1004 FSUB S5, S2, S3
	0x01EE1008 FSUB V1.2S, V0.2S, V4.2S
	0x01EE100C FADD V6.2S, V6.2S, V16.2S
	0x01EE1010 FADD S7, S7, S17
	0x01EE1014 FADD S2, S2, S3
	0x01EE1018 MOVI V3.2S, 0x3F, 0x18
	0x01EE101C FADD V0.2S, V0.2S, V4.2S
	0x01EE1020 FMOV S4, 0.5
	0x01EE1024 FSUB V6.2S, V6.2S, V1.2S
	0x01EE1028 FSUB S7, S7, S5
	0x00000000 INVALID
	0x01EE1030 FMUL S7, S7, S4

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X25, 0x24FA000
	011 Move W8, [X25+1418]
	012 Move X21, X5
	013 Move W22, W4
	014 Move W23, W3
	015 Move W24, W2
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0x2221000
	023 Move X0, [X0+848]
	024 Call 0x1C17CF4
	025 Move X0, 0x2221000
	026 Move X0, [X0+952]
	027 Call 0x1C17CF4
	028 Move X0, 0x2221000
	029 Move X0, [X0+960]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X25+1418], W8
	033 Move W8, 1
	034 Move [X19+72], W24
	035 Move [X19+76], W23
	036 Move [X19+80], X31
	037 Move [X19+104], X31
	038 Move [X19+112], W31
	039 Move [X19+88], W8
	040 Move [X19+92], W22
	041 Compare X20, 0
	042 JumpIfEqual {204}
	043 Move W8, [X20+32]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move [X20+32], W22
	046 Move [X19], X31
	047 Move [X19+8], X31
	048 Move [X19+16], X31
	049 Compare X21, 0
	050 JumpIfEqual {155}
	051 Move W8, [X21+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X8, 0x2221000
	054 Move X8, [X8+960]
	055 Move X0, X21
	056 Move W1, W31
	057 Move X2, [X8]
	058 Call List`1<Object>.get_Item, X0, X1
	059 Move [X19+104], X0
	060 Compare X0, 0
	061 JumpIfEqual {204}
	062 Move X22, 0x24FA000
	063 Move W8, [X22+555]
	064 Move X21, X0
	065 Compare W8, 0
	066 JumpIfNotEqual {72}
	067 Move X0, 0x221E000
	068 Move X0, [X0+3416]
	069 Call 0x1C17CF4
	070 Move W8, 1
	071 Move [X22+555], W8
	072 Move X8, 0x221E000
	073 Move X8, [X8+3416]
	074 Move X0, X21
	075 Move W1, W31
	076 Move X2, [X8]
	077 Call NetworkBehaviour.ReinterpretState, X0, X1
	078 Move W8, [X0]
	079 Move W9, 1
	080 Move [X19+112], W9
	081 NotImplemented "Instruction ORN not yet implemented."
	082 And W8, W8, 1
	083 Move [X19+88], W8
	084 Move X8, 0x2221000
	085 Move X8, [X8+848]
	086 Move X23, [X20+24]
	087 Move X21, [X19+104]
	088 Move X0, [X8]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Compare X23, 0
	094 JumpIfEqual {204}
	095 Move X24, 0x24FA000
	096 Move W8, [X24+1449]
	097 Move W22, [X19+72]
	098 Compare W8, 0
	099 JumpIfNotEqual {105}
	100 Move X0, 0x2221000
	101 Move X0, [X0+968]
	102 Call 0x1C17CF4
	103 Move W8, 1
	104 Move [X24+1449], W8
	105 Move X0, [X23+16]
	106 Compare X0, 0
	107 JumpIfEqual {204}
	108 Move X8, 0x2221000
	109 Move X8, [X8+968]
	110 Move X1, X21
	111 Move W2, W22
	112 Move X3, [X8]
	113 Call Dictionary`2<Object, Int32>.set_Item, X0, X1, X2
	114 Add X8, X31, 8
	115 Move X0, X19
	116 Move X1, X20
	117 Call BVHNode.ComputeMinVolume, X0, X1
	118 Move X8, [X31+24]
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 Add X0, X31, 64
	121 Add X1, X31, 32
	122 Move [X19+16], X8
	123 Move [X19], V0
	124 NotImplemented "Instruction LDUR not yet implemented."
	125 Move V1, [X19+20]
	126 Move V2, [X20+68]
	127 Move X2, X31
	128 Add V3, V0, V0
	129 Add S4, S1, S1
	130 NotImplemented "Instruction INVALID not yet implemented."
	131 Multiply S2, S4, S2
	132 NotImplemented "Instruction MOVI not yet implemented."
	133 NotImplemented "Instruction INVALID not yet implemented."
	134 Move S4, 0.5
	135 Multiply S2, S2, S4
	136 Add V0, V0, V3
	137 Add S1, S1, S2
	138 Move [X19+12], D0
	139 Move [X19+20], S1
	140 Move X8, [X19+16]
	141 Move V0, [X19]
	142 NotImplemented "Instruction MOVI not yet implemented."
	143 Move [X31+80], V1
	144 Move [X31+88], V1
	145 Move [X31+48], X8
	146 Move [X31+2], V0
	147 Move [X31+4], V1
	148 Call AABB..ctor, X0, X1
	149 Move V1, [X31+80]
	150 Move V0, [X31+96]
	151 Move V2, [X31+4]
	152 Move [X19+56], V0
	153 Move [X19+40], V1
	154 Move [X19+24], V2
	155 Move X20, [X31+160]
	156 Move X19, [X31+168]
	157 Move X22, [X31+144]
	158 Move X21, [X31+152]
	159 Move X24, [X31+128]
	160 Move X23, [X31+136]
	161 Move X30, [X31+112]
	162 Move X25, [X31+120]
	163 Add X31, X31, 176
	164 Return 
	165 Move X22, 0x2221000
	166 Move X22, [X22+848]
	167 Move X0, [X22]
	168 Move W8, [X0+224]
	169 Compare W8, 0
	170 JumpIfNotEqual {172}
	171 Call 0x1C17DFC
	172 Move X0, X19
	173 Move X1, X20
	174 Move X2, X21
	175 Call BVHNode.SplitNode, X0, X1, X2
	176 Move X21, 0x24FA000
	177 Move W8, [X21+1446]
	178 Compare W8, 0
	179 JumpIfNotEqual {185}
	180 Move X0, 0x2221000
	181 Move X0, [X0+848]
	182 Call 0x1C17CF4
	183 Move W8, 1
	184 Move [X21+1446], W8
	185 Move X0, [X22]
	186 Move W8, [X0+224]
	187 Compare W8, 0
	188 JumpIfNotEqual {190}
	189 Call 0x1C17DFC
	190 Move W1, [X19+72]
	191 Move X0, X20
	192 Move X20, [X31+160]
	193 Move X19, [X31+168]
	194 Move X22, [X31+144]
	195 Move X21, [X31+152]
	196 Move X24, [X31+128]
	197 Move X23, [X31+136]
	198 Move X30, [X31+112]
	199 Move X25, [X31+120]
	200 Move W2, W31
	201 Add X31, X31, 176
	202 Call BVHNode.ChildRefit, X0, X1, X2
	203 Return 
	204 Call 0x1C17F20

Method: System.Void BuildLog(System.Text.StringBuilder builder)

Disassembly:
	0x01EE11CC BL 0x1C16F20
	0x01EE11D0 SUB X31, X31, 0x150
	0x01EE11D4 STP D15, D14, [X31 + 0xB0]
	0x01EE11D8 STP D13, D12, [X31 + 0xC0]
	0x01EE11DC STP D11, D10, [X31 + 0xD0]
	0x01EE11E0 STP D9, D8, [X31 + 0xE0]
	0x01EE11E4 STP X29, X30, [X31 + 0xF0]
	0x01EE11E8 STP X28, X27, [X31 + 0x100]
	0x01EE11EC STP X26, X25, [X31 + 0x110]
	0x01EE11F0 STP X24, X23, [X31 + 0x120]
	0x01EE11F4 STP X22, X21, [X31 + 0x130]
	0x01EE11F8 STP X20, X19, [X31 + 0x140]
	0x01EE11FC ADRP X19, 0x24F8000
	0x01EE1200 LDRB W8, [X19 + 0x589]
	0x01EE1204 MOV W21, W2
	0x01EE1208 MOV W20, W1
	0x01EE120C MOV X22, X0
	0x01EE1210 TBNZ X8, 0x0, 0x1EE1234
	0x01EE1214 ADRP X0, 0x221F000
	0x01EE1218 LDR X0, [X0 + 0x350]
	0x01EE121C BL 0x1C16CF4
	0x01EE1220 ADRP X0, 0x2213000
	0x01EE1224 LDR X0, [X0 + 0xDF8]
	0x01EE1228 BL 0x1C16CF4
	0x01EE122C MOVZ W8, 0x1
	0x01EE1230 STRB W8, [X19 + 0x589]
	0x01EE1234 STR X22, [X31 + 0x18]
	0x01EE1238 CBZ X22, 0x1EE15AC
	0x01EE123C EOR W8, W21, 0x1
	0x01EE1240 MOVZ W25, 0x78
	0x01EE1244 MOVI V8.2S, 0x3F, 0x18
	0x01EE1248 FMOV S9, 0.5
	0x01EE124C STP W8, W31, [X31 + 0x10]
	0x01EE1250 LDR X19, [X31 + 0x18]
	0x01EE1254 LDR X26, [X19 + 0x10]
	0x01EE1258 CBZ X26, 0x1EE15AC
	0x01EE125C LDR W8, [X26 + 0x18]
	0x01EE1260 CMP W20, W8
	0x01EE1264 B.CS 0x1EE15A8
	0x01EE1268 ADRP X8, 0x221F000
	0x01EE126C LDR X8, [X8 + 0x350]
	0x01EE1270 MOV X28, X26
	0x01EE1274 LDR X0, [X8]
	0x01EE1278 LDR W8, [X0 + 0xE0]
	0x01EE127C CBNZ W8, 0x1EE128C
	0x01EE1280 BL 0x1C16DFC
	0x01EE1284 LDR X28, [X19 + 0x10]
	0x01EE1288 CBZ X28, 0x1EE15AC
	0x01EE128C SXTW X27, W20
	0x01EE1290 MADD X8, X27, X25, X26
	0x01EE1294 LDRSW X8, [X8 + 0x70]
	0x01EE1298 LDR W9, [X28 + 0x18]
	0x01EE129C CMP W8, W9
	0x01EE12A0 B.CS 0x1EE15A8
	0x01EE12A4 MADD X10, X27, X25, X26
	0x01EE12A8 LDRSW X29, [X10 + 0x74]
	0x01EE12AC CMP W29, W9
	0x01EE12B0 B.CS 0x1EE15A8
	0x01EE12B4 SMADDL X9, X20, X25, X26
	0x01EE12B8 ADD X20, X9, 0x20
	0x01EE12BC LDR X9, [X20 + 0x10]
	0x01EE12C0 LDR V0, [X20]
	0x01EE12C4 ADD X10, X28, 0x20
	0x01EE12C8 MADD X23, X8, X25, X10
	0x01EE12CC MOV X21, X23
	0x01EE12D0 MOV X22, X23
	0x01EE12D4 MOV X19, X23
	0x01EE12D8 STR X9, [X31 + 0x90]
	0x01EE12DC STR V0, [X31 + 0x8]
	0x01EE12E0 LDP S12, S11, [X23]
	0x01EE12E4 LDR V10, [X21 + 0x8]!
	0x01EE12E8 LDR V15, [X22 + 0xC]!
	0x01EE12EC LDR V14, [X23 + 0x10]
	0x01EE12F0 LDR V13, [X19 + 0x14]!
	0x01EE12F4 STR V0, [X31 + 0x4]
	0x01EE12F8 FSUB S0, S12, S15
	0x01EE12FC FSUB S1, S11, S14
	0x01EE1300 FSUB S2, S10, S13
	0x01EE1304 ADD X0, X31, 0x40
	0x01EE1308 MOV X1, X31
	0x01EE130C MADD X24, X29, X25, X10
	0x01EE1310 STR X9, [X31 + 0x50]
	0x01EE1314 BL 0x3C0A198
	0x01EE1318 TBZ X0, 0x0, 0x1EE13A0
	0x01EE131C FADD S0, S12, S15
	0x01EE1320 FADD S1, S11, S14
	0x01EE1324 FADD S2, S10, S13
	0x01EE1328 ADD X0, X31, 0x40
	0x01EE132C MOV X1, X31
	0x01EE1330 BL 0x3C0A198
	0x01EE1334 TBZ X0, 0x0, 0x1EE13A0
	0x01EE1338 LDR X8, [X20 + 0x10]
	0x01EE133C LDR V0, [X20]
	0x01EE1340 NOP
	0x01EE1344 MADD X9, X29, X25, X28
	0x01EE1348 ADD X0, X31, 0x20
	0x01EE134C STR X8, [X31 + 0x90]
	0x01EE1350 STR V0, [X31 + 0x8]
	0x01EE1354 LDR V12, [X24]
	0x01EE1358 LDP S11, S10, [X9 + 0x24]
	0x01EE135C LDP S13, S14, [X9 + 0x2C]
	0x01EE1360 LDR V15, [X9 + 0x34]
	0x01EE1364 STR V0, [X31 + 0x2]
	0x01EE1368 MOV X1, X31
	0x01EE136C FSUB S0, S12, S13
	0x01EE1370 FSUB S1, S11, S14
	0x01EE1374 FSUB S2, S10, S15
	0x01EE1378 STR X8, [X31 + 0x30]
	0x01EE137C BL 0x3C0A198
	0x01EE1380 TBZ X0, 0x0, 0x1EE13A0
	0x01EE1384 FADD S0, S12, S13
	0x01EE1388 FADD S1, S11, S14
	0x01EE138C FADD S2, S10, S15
	0x01EE1390 ADD X0, X31, 0x20
	0x01EE1394 MOV X1, X31
	0x01EE1398 BL 0x3C0A198
	0x01EE139C TBNZ X0, 0x0, 0x1EE1578
	0x01EE13A0 MADD X9, X29, X25, X28
	0x01EE13A4 LDR V0, [X23]
	0x01EE13A8 LDR V1, [X21]
	0x01EE13AC LDR V2, [X22]
	0x01EE13B0 LDR V3, [X19]
	0x01EE13B4 LDR V4, [X24]
	0x01EE13B8 LDR V5, [X9 + 0x28]
	0x01EE13BC LDUR V6, [X9 + 0x2C]
	0x01EE13C0 LDR V7, [X9 + 0x34]
	0x01EE13C4 FSUB V16.2S, V0.2S, V2.2S
	0x01EE13C8 FSUB S17, S1, S3
	0x01EE13CC FADD V0.2S, V0.2S, V2.2S
	0x01EE13D0 FADD S1, S1, S3
	0x01EE13D4 FSUB V2.2S, V4.2S, V6.2S
	0x01EE13D8 FSUB S3, S5, S7
	0x01EE13DC FADD V4.2S, V4.2S, V6.2S
	0x01EE13E0 FADD S5, S5, S7
	0x00000000 INVALID
	0x01EE13E8 FCMP S17, S3
	0x00000000 INVALID
	0x00000000 INVALID
	0x01EE13F4 FCSEL S16, S17, S3, MI
	0x00000000 INVALID
	0x01EE13FC FCMP S1, S3
	0x01EE1400 FCSEL S1, S1, S3, GT
	0x01EE1404 FSUB V0.2S, V0.2S, V6.2S
	0x01EE1408 FSUB S1, S1, S16
	0x00000000 INVALID
	0x01EE1410 FMUL S1, S1, S9
	0x01EE1414 FADD V2.2S, V6.2S, V0.2S
	0x01EE1418 FADD S3, S16, S1
	0x01EE141C FSUB V6.2S, V2.2S, V0.2S
	0x01EE1420 FADD V0.2S, V0.2S, V2.2S
	0x01EE1424 FSUB S2, S3, S1
	0x00000000 INVALID
	0x01EE142C FADD S1, S1, S3
	0x00000000 INVALID
	0x00000000 INVALID
	0x01EE1438 FCMP S2, S5
	0x00000000 INVALID
	0x01EE1440 FCSEL S2, S2, S5, MI
	0x01EE1444 FCMP S1, S5
	0x01EE1448 FSUB V0.2S, V0.2S, V6.2S
	0x01EE144C FCSEL S1, S1, S5, GT
	0x00000000 INVALID
	0x01EE1454 MADD X8, X27, X25, X26
	0x01EE1458 FSUB S1, S1, S2
	0x01EE145C FADD V3.2S, V6.2S, V0.2S
	0x01EE1460 LDR X11, [X31 + 0x18]
	0x01EE1464 FMUL S1, S1, S9
	0x01EE1468 STR D3, [X20]
	0x01EE146C STR D0, [X8 + 0x2C]!
	0x01EE1470 FADD S2, S2, S1
	0x01EE1474 MOV X9, X8
	0x01EE1478 STUR S2, [X8 - 0x4]
	0x01EE147C STR S1, [X9 + 0x8]!
	0x01EE1480 LDR W10, [X11 + 0x48]
	0x01EE1484 LDR W12, [X31 + 0x14]
	0x01EE1488 CMP W12, W10
	0x01EE148C B.GE 0x1EE14E0
	0x01EE1490 LDR V3, [X11 + 0x44]
	0x01EE1494 MOV S4, V0.S[1]
	0x01EE1498 FADD S2, S0, S0
	0x01EE149C FADD S5, S1, S1
	0x01EE14A0 FADD S6, S4, S4
	0x01EE14A4 FMUL S2, S2, S3
	0x01EE14A8 FMUL S6, S6, S3
	0x01EE14AC FMUL S3, S5, S3
	0x01EE14B0 FMUL S2, S2, S9
	0x01EE14B4 FMUL S5, S6, S9
	0x01EE14B8 FMUL S3, S3, S9
	0x01EE14BC MADD X10, X27, X25, X26
	0x01EE14C0 FADD S0, S0, S2
	0x01EE14C4 FADD S2, S4, S5
	0x01EE14C8 FADD S1, S1, S3
	0x01EE14CC ADD W12, W12, 0x1
	0x01EE14D0 STR S0, [X8]
	0x01EE14D4 STR S2, [X10 + 0x30]
	0x01EE14D8 STR S1, [X9]
	0x01EE14DC STR W12, [X31 + 0x14]
	0x01EE14E0 ADRP X8, 0x221F000
	0x01EE14E4 LDR X8, [X8 + 0x350]
	0x01EE14E8 LDR X0, [X8]
	0x01EE14EC LDR W8, [X0 + 0xE0]
	0x01EE14F0 CBNZ W8, 0x1EE14F8
	0x01EE14F4 BL 0x1C16DFC
	0x01EE14F8 LDR X8, [X20 + 0x10]
	0x01EE14FC LDR V0, [X20]
	0x01EE1500 MOVI V1.2D, 0x0
	0x01EE1504 ADD X0, X31, 0x80
	0x01EE1508 ADD X1, X31, 0x60
	0x01EE150C MOV X2, X31
	0x01EE1510 STP V1, V1, [X31 + 0x90]
	0x01EE1514 STR X8, [X31 + 0x70]
	0x01EE1518 STR V0, [X31 + 0x6]
	0x01EE151C STR V1, [X31 + 0x8]
	0x01EE1520 BL 0x1EED32C
	0x01EE1524 MADD X8, X27, X25, X26
	0x01EE1528 LDR W20, [X8 + 0x6C]
	0x01EE152C LDR W10, [X31 + 0x10]
	0x01EE1530 LDP V1, V0, [X31 + 0x90]
	0x01EE1534 LDR V2, [X31 + 0x8]
	0x01EE1538 CMP W20, 0x0
	0x01EE153C CSET W9, EQ
	0x01EE1540 ORR W9, W9, W10, 0x0
	0x01EE1544 STUR V0, [X8 + 0x58]
	0x01EE1548 STUR V1, [X8 + 0x48]
	0x01EE154C STUR V2, [X8 + 0x38]
	0x01EE1550 TBNZ X9, 0x0, 0x1EE1578
	0x01EE1554 LDR X8, [X31 + 0x18]
	0x01EE1558 LDR X0, [X8 + 0x28]
	0x01EE155C CBZ X0, 0x1EE15AC
	0x01EE1560 ADRP X8, 0x2213000
	0x01EE1564 LDR X8, [X8 + 0xDF8]
	0x01EE1568 MOV W1, W20
	0x01EE156C LDR X2, [X8]
	0x01EE1570 BL 0x2DAA59C
	0x01EE1574 TBZ X0, 0x0, 0x1EE1250
	0x01EE1578 LDP X20, X19, [X31 + 0x140]
	0x01EE157C LDP X22, X21, [X31 + 0x130]
	0x01EE1580 LDP X24, X23, [X31 + 0x120]
	0x01EE1584 LDP X26, X25, [X31 + 0x110]
	0x01EE1588 LDP X28, X27, [X31 + 0x100]
	0x01EE158C LDP X29, X30, [X31 + 0xF0]
	0x01EE1590 LDP D9, D8, [X31 + 0xE0]
	0x01EE1594 LDP D11, D10, [X31 + 0xD0]
	0x01EE1598 LDP D13, D12, [X31 + 0xC0]
	0x01EE159C LDP D15, D14, [X31 + 0xB0]
	0x01EE15A0 ADD X31, X31, 0x150
	0x01EE15A4 RET
	0x01EE15A8 BL 0x1C16F28
	0x01EE15AC BL 0x1C16F20
	0x01EE15B0 SUB X31, X31, 0x60
	0x01EE15B4 STR D8, [X31 + 0x30]
	0x01EE15B8 STR X30, [X31 + 0x38]
	0x01EE15BC STP X22, X21, [X31 + 0x40]
	0x01EE15C0 STP X20, X19, [X31 + 0x50]
	0x01EE15C4 ADRP X22, 0x24F8000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X22, 0x24F9000
	013 Move X23, 0x2213000
	014 Move X21, 0x2220000
	015 Move W8, [X22+1419]
	016 Move X23, [X23+1880]
	017 Move X21, [X21+992]
	018 Move X19, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {68}
	024 Move X0, 0x2213000
	025 Move X0, [X0+2904]
	026 Call 0x1C17CF4
	027 Move X0, 0x2213000
	028 Move X0, [X0+1880]
	029 Call 0x1C17CF4
	030 Move X0, 0x2220000
	031 Move X0, [X0+1000]
	032 Call 0x1C17CF4
	033 Move X0, 0x221B000
	034 Move X0, [X0+2480]
	035 Call 0x1C17CF4
	036 Move X0, 0x2220000
	037 Move X0, [X0+1008]
	038 Call 0x1C17CF4
	039 Move X0, 0x2220000
	040 Move X0, [X0+992]
	041 Call 0x1C17CF4
	042 Move X0, 0x2220000
	043 Move X0, [X0+1016]
	044 Call 0x1C17CF4
	045 Move X0, 0x221C000
	046 Move X0, [X0+3360]
	047 Call 0x1C17CF4
	048 Move X0, 0x2220000
	049 Move X0, [X0+1024]
	050 Call 0x1C17CF4
	051 Move X0, 0x2220000
	052 Move X0, [X0+1032]
	053 Call 0x1C17CF4
	054 Move X0, 0x2220000
	055 Move X0, [X0+1040]
	056 Call 0x1C17CF4
	057 Move X0, 0x2220000
	058 Move X0, [X0+1048]
	059 Call 0x1C17CF4
	060 Move X0, 0x2220000
	061 Move X0, [X0+1056]
	062 Call 0x1C17CF4
	063 Move X0, 0x2220000
	064 Move X0, [X0+1064]
	065 Call 0x1C17CF4
	066 Move W8, 1
	067 Move [X22+1419], W8
	068 Move W8, [X20+72]
	069 Move X0, [X23]
	070 Add X1, X31, 28
	071 Move [X31+28], W8
	072 Call 0x1C17E04
	073 Move X8, [X21]
	074 Move X1, X0
	075 Move X2, X31
	076 Move X0, X8
	077 Call String.Format, X0, X1
	078 Compare X19, 0
	079 JumpIfEqual {276}
	080 Move X24, 0x2213000
	081 Move X26, 0x2220000
	082 Move X27, 0x2220000
	083 Move X25, 0x2220000
	084 Move X22, 0x2220000
	085 Move X21, 0x2220000
	086 Move X24, [X24+2904]
	087 Move X26, [X26+1024]
	088 Move X27, [X27+1016]
	089 Move X25, [X25+1064]
	090 Move X22, [X22+1056]
	091 Move X21, [X21+1032]
	092 Move X1, X0
	093 Move X0, X19
	094 Move X2, X31
	095 Call StringBuilder.Append, X0, X1
	096 Move W8, [X20+88]
	097 Move X0, [X24]
	098 Add X1, X31, 24
	099 Move [X31+24], W8
	100 Call 0x1C17E04
	101 Move X8, [X26]
	102 Move X1, X0
	103 Move X2, X31
	104 Move X0, X8
	105 Call String.Format, X0, X1
	106 Move X1, X0
	107 Move X0, X19
	108 Move X2, X31
	109 Call StringBuilder.Append, X0, X1
	110 Move W8, [X20+96]
	111 Move X0, [X24]
	112 Add X1, X31, 20
	113 Move [X31+20], W8
	114 Call 0x1C17E04
	115 Move X8, [X27]
	116 Move X1, X0
	117 Move X2, X31
	118 Move X0, X8
	119 Call String.Format, X0, X1
	120 Move X1, X0
	121 Move X0, X19
	122 Move X2, X31
	123 Call StringBuilder.Append, X0, X1
	124 Move W8, [X20+100]
	125 Move X0, [X23]
	126 Add X1, X31, 16
	127 Move [X31+16], W8
	128 Call 0x1C17E04
	129 Move X8, [X25]
	130 Move X1, X0
	131 Move X2, X31
	132 Move X0, X8
	133 Call String.Format, X0, X1
	134 Move X1, X0
	135 Move X0, X19
	136 Move X2, X31
	137 Call StringBuilder.Append, X0, X1
	138 Move W8, [X20+92]
	139 Move X0, [X23]
	140 Add X1, X31, 12
	141 Move [X31+12], W8
	142 Call 0x1C17E04
	143 Move X8, [X22]
	144 Move X1, X0
	145 Move X2, X31
	146 Move X0, X8
	147 Call String.Format, X0, X1
	148 Move X1, X0
	149 Move X0, X19
	150 Move X2, X31
	151 Call StringBuilder.Append, X0, X1
	152 Move X0, [X20+104]
	153 Compare X0, 0
	154 JumpIfEqual {178}
	155 Move W8, [X0+48]
	156 Move X22, [X21]
	157 Move TEMP, X8
	158 And TEMP, TEMP, 8
	159 Compare TEMP, 8
	160 JumpIfEqual {179}
	161 Move X21, X31
	162 Move X3, X31
	163 Move W8, 1
	164 Compare W8, 0
	165 JumpIfNotEqual {184}
	166 Move X8, 0x221C000
	167 Move X9, 0x221B000
	168 Move X8, [X8+3360]
	169 Move X9, [X9+2480]
	170 Move X0, X3
	171 Move X3, X31
	172 Move X1, [X8]
	173 Move X2, [X9]
	174 Call String.Concat, X0, X1, X2
	175 Compare X21, 0
	176 JumpIfEqual {276}
	177 Move X1, X0
	178 Move X22, [X21]
	179 Move W8, W31
	180 Move X21, X19
	181 Move X3, X22
	182 Compare W8, 0
	183 JumpIfEqual {166}
	184 Compare X0, 0
	185 JumpIfEqual {276}
	186 Move X1, X31
	187 Call Object.get_name, X0
	188 Move X8, 0x221B000
	189 Move X8, [X8+2480]
	190 Move X1, X0
	191 Move X0, X22
	192 Move X3, X31
	193 Move X2, [X8]
	194 Call String.Concat, X0, X1, X2
	195 Move X1, X0
	196 Move X21, X19
	197 Move X26, 0x2220000
	198 Move X27, 0x2220000
	199 Move X25, 0x2220000
	200 Move X22, 0x2220000
	201 Move X26, [X26+1048]
	202 Move X27, [X27+1040]
	203 Move X25, [X25+1000]
	204 Move X22, [X22+1008]
	205 Move X0, X21
	206 Move X2, X31
	207 Call StringBuilder.Append, X0, X1
	208 Move W8, [X20+76]
	209 Move X0, [X23]
	210 Add X1, X31, 28
	211 Move [X31+28], W8
	212 Call 0x1C17E04
	213 Move X8, [X26]
	214 Move X1, X0
	215 Move X2, X31
	216 Move X0, X8
	217 Call String.Format, X0, X1
	218 Move X1, X0
	219 Move X0, X19
	220 Move X2, X31
	221 Call StringBuilder.Append, X0, X1
	222 Move W8, [X20+112]
	223 Move X0, [X24]
	224 Add X1, X31, 24
	225 Move [X31+24], W8
	226 Call 0x1C17E04
	227 Move X8, [X27]
	228 Move X1, X0
	229 Move X2, X31
	230 Move X0, X8
	231 Call String.Format, X0, X1
	232 Move X1, X0
	233 Move X0, X19
	234 Move X2, X31
	235 Call StringBuilder.Append, X0, X1
	236 Move W8, [X20+80]
	237 Move X0, [X23]
	238 Add X1, X31, 16
	239 Move [X31+16], W8
	240 Call 0x1C17E04
	241 Move X8, [X25]
	242 Move X1, X0
	243 Move X2, X31
	244 Move X0, X8
	245 Call String.Format, X0, X1
	246 Move X1, X0
	247 Move X0, X19
	248 Move X2, X31
	249 Call StringBuilder.Append, X0, X1
	250 Move W8, [X20+84]
	251 Move X0, [X23]
	252 Add X1, X31, 12
	253 Move [X31+12], W8
	254 Call 0x1C17E04
	255 Move X8, [X22]
	256 Move X1, X0
	257 Move X2, X31
	258 Move X0, X8
	259 Call String.Format, X0, X1
	260 Move X1, X0
	261 Move X0, X19
	262 Move X2, X31
	263 Call StringBuilder.Append, X0, X1
	264 Move X20, [X31+96]
	265 Move X19, [X31+104]
	266 Move X22, [X31+80]
	267 Move X21, [X31+88]
	268 Move X24, [X31+64]
	269 Move X23, [X31+72]
	270 Move X26, [X31+48]
	271 Move X25, [X31+56]
	272 Move X30, [X31+32]
	273 Move X27, [X31+40]
	274 Add X31, X31, 112
	275 Return 
	276 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x01EE3FA8 STRB W8, [X20 + 0x785]
	0x01EE3FAC ADRP X8, 0x2210000
	0x01EE3FB0 LDR X8, [X8 + 0x5A8]
	0x01EE3FB4 LDR X0, [X8]
	0x01EE3FB8 LDR W8, [X0 + 0xE0]
	0x01EE3FBC CBNZ W8, 0x1EE3FC4
	0x01EE3FC0 BL 0x1C16DFC
	0x01EE3FC4 FMUL S0, S10, S10
	0x01EE3FC8 FMUL S1, S9, S9
	0x01EE3FCC ADRP X8, 0xFFFFFFFFFEC07000
	0x01EE3FD0 FADD S0, S0, S1
	0x01EE3FD4 LDR V1, [X8 + 0x17C]
	0x01EE3FD8 FMUL S2, S8, S8
	0x01EE3FDC FADD S0, S2, S0
	0x01EE3FE0 FSQRT S2, S0
	0x01EE3FE4 FCMP S2, S1
	0x01EE3FE8 B.LE 0x1EE402C
	0x01EE3FEC FDIV S0, S10, S2
	0x01EE3FF0 FDIV S1, S9, S2
	0x01EE3FF4 FDIV S2, S8, S2
	0x01EE3FF8 B 0x1EE4064
	0x01EE3FFC MOV W0, W31
	0x01EE4000 AND W0, W0, 0x1
	0x01EE4004 ADD X31, X31, 0x1B0
	0x01EE4008 LDP X20, X19, [X31 + 0x70]
	0x01EE400C LDP X22, X21, [X31 + 0x60]
	0x01EE4010 LDP X30, X23, [X31 + 0x50]
	0x01EE4014 LDR X29, [X31 + 0x40]
	0x01EE4018 LDP D9, D8, [X31 + 0x30]
	0x01EE401C LDP D11, D10, [X31 + 0x20]
	0x01EE4020 LDP D13, D12, [X31 + 0x10]
	0x01EE4024 LDP D15, D14, [X31], #0x80
	0x01EE4028 RET
	0x01EE402C ADRP X20, 0x24F4000
	0x01EE4030 LDRB W8, [X20 + 0x783]
	0x01EE4034 CBNZ W8, 0x1EE404C
	0x01EE4038 ADRP X0, 0x220F000
	0x01EE403C LDR X0, [X0 + 0x5A0]
	0x01EE4040 BL 0x1C16CF4
	0x01EE4044 MOVZ W8, 0x1
	0x01EE4048 STRB W8, [X20 + 0x783]
	0x01EE404C ADRP X8, 0x220F000
	0x01EE4050 LDR X8, [X8 + 0x5A0]
	0x01EE4054 LDR X8, [X8]
	0x01EE4058 LDR X8, [X8 + 0xB8]
	0x01EE405C LDP S0, S1, [X8]
	0x01EE4060 LDR V2, [X8 + 0x8]
	0x01EE4064 MOVZ W0, 0x1
	0x01EE4068 STP S0, S1, [X19]
	0x01EE406C STR S2, [X19 + 0x8]
	0x01EE4070 B 0x1EE4000
	0x01EE4074 MOV X9, X0
	0x01EE4078 LDUR V0, [X9 + 0xC]
	0x01EE407C LDR V1, [X1]
	0x01EE4080 LDR V2, [X9 + 0x14]
	0x01EE4084 LDR V3, [X1 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x24F7000
	008 Move X23, 0x221E000
	009 Move X20, 0x221E000
	010 Move X22, 0x221E000
	011 Move X21, 0x221E000
	012 Move W8, [X19+1420]
	013 Move X23, [X23+1152]
	014 Move X20, [X20+848]
	015 Move X22, [X22+1160]
	016 Move X21, [X21+1168]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x221E000
	022 Move X0, [X0+848]
	023 Call 0x1C17CF4
	024 Move X0, 0x221E000
	025 Move X0, [X0+1152]
	026 Call 0x1C17CF4
	027 Move X0, 0x221E000
	028 Move X0, [X0+1160]
	029 Call 0x1C17CF4
	030 Move X0, 0x221D000
	031 Move X0, [X0+1168]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X19+1420], W8
	035 Move X0, [X23]
	036 Call 0x1C17F10
	037 Move X1, X31
	038 Move X19, X0
	039 Call HitboxComparerX..ctor, X0
	040 Move X8, [X20]
	041 Move X8, [X8+184]
	042 Move [X8], X19
	043 Move X0, [X22]
	044 Call 0x1C17F10
	045 Move X1, X31
	046 Move X19, X0
	047 Call HitboxComparerY..ctor, X0
	048 Move X8, [X20]
	049 Move X8, [X8+184]
	050 Move [X8+8], X19
	051 Move X0, [X21]
	052 Call 0x1C17F10
	053 Move X1, X31
	054 Move X19, X0
	055 Call HitboxComparerZ..ctor, X0
	056 Move X8, [X20]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X8, [X8+184]
	060 Move [X8+16], X19
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X30, [X31+48]
	064 Move X23, [X31+56]
	065 Return 

