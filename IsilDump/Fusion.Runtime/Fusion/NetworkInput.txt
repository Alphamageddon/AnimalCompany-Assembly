Type: Fusion.NetworkInput

Method: System.Int32 get_WordCount()

Disassembly:
	0x01EDF02C RET
	0x01EDF030 SUB X31, X31, 0x70

ISIL:
	001 Move W0, [X0+8]
	002 Return X0

Method: System.UInt32* get_Data()

Disassembly:
	0x01EDF034 STR D10, [X31 + 0x20]
	0x01EDF038 STP D9, D8, [X31 + 0x28]
	0x01EDF03C STR X30, [X31 + 0x38]
	0x01EDF040 STP X24, X23, [X31 + 0x40]
	0x01EDF044 STP X22, X21, [X31 + 0x50]

ISIL:
	001 Move X8, [X0]
	002 Add X9, X8, 4
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSEL not yet implemented."
	005 Return X0

Method: System.Boolean get_IsValid()

Disassembly:
	0x01EDF048 STP X20, X19, [X31 + 0x60]
	0x01EDF04C ADRP X23, 0x24FA000
	0x01EDF050 ADRP X24, 0x2221000
	0x01EDF054 LDRB W8, [X23 + 0x580]

ISIL:
	001 Move X8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.UInt32* get_Ptr()

Disassembly:
	0x01EDF058 LDR X24, [X24 + 0x350]
	0x01EDF05C MOV X21, X3

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: System.Int32 get_TypeKey()

Disassembly:
	0x01EDF060 MOV X20, X2
	0x01EDF064 MOV X22, X1
	0x01EDF068 MOV X19, X0
	0x01EDF06C TBNZ X8, 0x0, 0x1EDF09C
	0x01EDF070 ADRP X0, 0x2221000
	0x01EDF074 LDR X0, [X0 + 0x350]

ISIL:
	001 Move X8, [X0]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move W0, [X8]
	005 Return X0
	006 Move TEMP, 0
	007 Not TEMP
	008 Move W0, TEMP
	009 Return X0

Method: System.Void set_TypeKey(System.Int32 value)

Disassembly:
	0x01EDF078 BL 0x1C16CF4
	0x01EDF07C ADRP X0, 0x221E000
	0x01EDF080 LDR X0, [X0 + 0xDD8]
	0x01EDF084 BL 0x1C16CF4

ISIL:
	001 Move X8, [X0]
	002 Compare X8, 0
	003 JumpIfEqual {5}
	004 Move [X8], W1
	005 Return 

Method: System.Type get_Type()

Disassembly:
	0x01EDF088 ADRP X0, 0x2221000
	0x01EDF08C LDR X0, [X0 + 0x370]
	0x01EDF090 BL 0x1C16CF4
	0x01EDF094 MOVZ W8, 0x1
	0x01EDF098 STRB W8, [X23 + 0x580]
	0x01EDF09C LDR X0, [X24]
	0x01EDF0A0 LDR W8, [X0 + 0xE0]
	0x01EDF0A4 CBNZ W8, 0x1EDF0AC

ISIL:
	001 Move X8, [X0]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move W0, [X8]
	005 Add W31, W0, 1
	006 Call NetworkInputUtils.GetType, X0
	007 Return X0
	008 Move X0, X31
	009 Return X0

Method: Fusion.NetworkInput FromRaw(System.UInt32* ptr, System.Int32 wordCount)

Disassembly:
	0x01EDF0A8 BL 0x1C16DFC
	0x01EDF0AC LDR W8, [X22 + 0x50]

ISIL:
	001 Move W1, W1
	002 Return X0

Method: Fusion.NetworkInput FromRaw(System.Int32* ptr, System.Int32 wordCount)

Disassembly:
	0x01EDF0B0 CMP W8, 0x1
	0x01EDF0B4 B.LT 0x1EDF0D4

ISIL:
	001 Move W1, W1
	002 Return X0

Method: System.Boolean TryGet(out T input)

Disassembly:
	0x0222B650 AND W0, W0, 0x1
	0x0222B654 LDR X30, [X31], #0x20
	0x0222B658 RET
	0x0222B65C BL 0x1C16F20
	0x0222B660 STR X30, [X31 - 0x30]!
	0x0222B664 STP X22, X21, [X31 + 0x10]
	0x0222B668 STP X20, X19, [X31 + 0x20]
	0x0222B66C LDR X8, [X2 + 0x38]
	0x0222B670 MOV X21, X2
	0x0222B674 MOV X20, X1
	0x0222B678 MOV X19, X0
	0x0222B67C CBNZ X8, 0x222B6A8
	0x0222B680 ADRP X0, 0x1EC8000
	0x0222B684 LDR X0, [X0 + 0x598]
	0x0222B688 BL 0x1C16CF4
	0x0222B68C ADRP X0, 0x1EC8000
	0x0222B690 LDR X0, [X0 + 0xC90]
	0x0222B694 BL 0x1C16CF4
	0x0222B698 LDR X8, [X21 + 0x38]
	0x0222B69C CBNZ X8, 0x222B6A8
	0x0222B6A0 MOV X0, X21
	0x0222B6A4 BL 0x1C5C6E0
	0x0222B6A8 ADD X1, X31, 0x8
	0x0222B6AC MOV X0, X19
	0x0222B6B0 MOV X2, X31
	0x0222B6B4 STR W31, [X31 + 0x8]
	0x0222B6B8 BL 0x1EA8C58
	0x0222B6BC ADRP X8, 0x1EC8000
	0x0222B6C0 LDR X8, [X8 + 0x598]
	0x0222B6C4 MOV W22, W0
	0x0222B6C8 LDR X8, [X8]
	0x0222B6CC LDR W9, [X8 + 0xE0]
	0x0222B6D0 CBNZ W9, 0x222B6DC
	0x0222B6D4 MOV X0, X8
	0x0222B6D8 BL 0x1C16DFC
	0x0222B6DC LDR X8, [X21 + 0x38]
	0x0222B6E0 MOV X0, X20
	0x0222B6E4 LDR X1, [X8 + 0x8]
	0x0222B6E8 BL 0x222D35C
	0x0222B6EC CBZ X0, 0x222B750
	0x0222B6F0 MOV X1, X31
	0x0222B6F4 MOV X20, X0
	0x0222B6F8 BL 0x3C32ECC
	0x0222B6FC MOV X1, X0
	0x0222B700 MOV X0, X19
	0x0222B704 MOV X2, X31
	0x0222B708 MOV X3, X31
	0x0222B70C BL 0x1EA8DA8
	0x0222B710 TBZ X22, 0x0, 0x222B73C
	0x0222B714 ADRP X8, 0x1EC8000
	0x0222B718 LDR X8, [X8 + 0xC90]
	0x0222B71C LDR W19, [X31 + 0x8]
	0x0222B720 LDR X0, [X8]
	0x0222B724 LDR W8, [X0 + 0xE0]
	0x0222B728 CBNZ W8, 0x222B730

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X21, X2
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {20}
	012 Move X0, 0x1EC9000
	013 Move X0, [X0+1728]
	014 Call 0x1C17CF4
	015 Move X8, [X21+56]
	016 Compare X8, 0
	017 JumpIfNotEqual {20}
	018 Move X0, X21
	019 Call 0x1C5D6E0
	020 Move X8, [X20]
	021 Compare X8, 0
	022 JumpIfEqual {51}
	023 Move X0, X20
	024 Move X1, X31
	025 Call NetworkInput.get_TypeKey, X0
	026 Move X8, 0x1EC9000
	027 Move X8, [X8+1728]
	028 Move X9, [X21+56]
	029 Move W21, W0
	030 Move X8, [X8]
	031 Move X22, [X9]
	032 Move W10, [X8+224]
	033 Compare W10, 0
	034 JumpIfNotEqual {37}
	035 Move X0, X8
	036 Call 0x1C17DFC
	037 Move X0, X22
	038 Move X1, X31
	039 Call Type.GetTypeFromHandle, X0
	040 Move X1, X31
	041 Call NetworkInputUtils.GetTypeKey, X0
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, X20
	044 Move X1, X31
	045 Call NetworkInput.get_Data, X0
	046 Move X1, X0
	047 Move W2, 168
	048 Move X0, X19
	049 Call 0x3EB2B30
	050 Move W0, 1
	051 Move W2, 168
	052 Move X0, X19
	053 Move W1, W31
	054 Call 0x3EB2B10
	055 Move W0, W31
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 Return X0

Method: System.Boolean TrySet(T input)

Disassembly:
	0x0222B964 BL 0x1C5C6E0
	0x0222B968 MOV X0, X27
	0x0222B96C MOV X1, X31
	0x0222B970 BL 0x3C32ECC
	0x0222B974 CBZ X0, 0x222BA34
	0x0222B978 LDR X8, [X28 + 0x38]
	0x0222B97C ADD X1, X31, 0x38
	0x0222B980 LDR X2, [X8 + 0x8]
	0x0222B984 BL 0x21E6600
	0x0222B988 TBZ X0, 0x0, 0x222BA38
	0x0222B98C LDR V0, [X26]
	0x0222B990 LDR W8, [X26 + 0x10]
	0x0222B994 LDR X1, [X31 + 0x38]
	0x0222B998 ADD X4, X31, 0x10
	0x0222B99C MOV X0, X25
	0x0222B9A0 MOV X2, X24
	0x0222B9A4 MOV X3, X23
	0x0222B9A8 MOV X5, X22
	0x0222B9AC MOV X6, X21
	0x0222B9B0 MOV W7, W20
	0x0222B9B4 STR V0, [X31 + 0x1]
	0x0222B9B8 STR W8, [X31 + 0x20]
	0x0222B9BC STR X31, [X31]
	0x0222B9C0 BL 0x1EAE848
	0x0222B9C4 STR X31, [X31 + 0x28]
	0x0222B9C8 CBZ X0, 0x222B9E0
	0x0222B9CC LDR X8, [X19 + 0x38]
	0x0222B9D0 ADD X1, X31, 0x28
	0x0222B9D4 LDR X2, [X8 + 0x8]
	0x0222B9D8 BL 0x21A4990
	0x0222B9DC LDR X0, [X31 + 0x28]
	0x0222B9E0 LDP X20, X19, [X31 + 0x80]
	0x0222B9E4 LDP X22, X21, [X31 + 0x70]
	0x0222B9E8 LDP X24, X23, [X31 + 0x60]
	0x0222B9EC LDP X26, X25, [X31 + 0x50]
	0x0222B9F0 LDP X28, X27, [X31 + 0x40]
	0x0222B9F4 LDR X30, [X31 + 0x30]
	0x0222B9F8 ADD X31, X31, 0x90
	0x0222B9FC RET
	0x0222BA00 ADRP X0, 0x1ECD000
	0x0222BA04 LDR X0, [X0 + 0x528]
	0x0222BA08 BL 0x1C16D08
	0x0222BA0C BL 0x1C16F10
	0x0222BA10 MOV X20, X0
	0x0222BA14 ADRP X0, 0x1ED3000
	0x0222BA18 LDR X0, [X0 + 0xF10]
	0x0222BA1C BL 0x1C16D08
	0x0222BA20 MOV X1, X0
	0x0222BA24 MOV X0, X20
	0x0222BA28 MOV X2, X31
	0x0222BA2C BL 0x330E100
	0x0222BA30 B 0x222BA7C
	0x0222BA34 BL 0x1C16F20
	0x0222BA38 ADRP X0, 0x1ED0000
	0x0222BA3C LDR X0, [X0 + 0x578]
	0x0222BA40 BL 0x1C16D08
	0x0222BA44 BL 0x1C16F10
	0x0222BA48 MOV X20, X0
	0x0222BA4C ADRP X0, 0x1ED3000
	0x0222BA50 LDR X0, [X0 + 0xF18]
	0x0222BA54 BL 0x1C16D08
	0x0222BA58 MOV X21, X0
	0x0222BA5C ADRP X0, 0x1ED3000
	0x0222BA60 LDR X0, [X0 + 0xF10]
	0x0222BA64 BL 0x1C16D08
	0x0222BA68 MOV X2, X0
	0x0222BA6C MOV X0, X20
	0x0222BA70 MOV X1, X21
	0x0222BA74 MOV X3, X31
	0x0222BA78 BL 0x330E16C
	0x0222BA7C MOV X0, X20
	0x0222BA80 MOV X1, X19
	0x0222BA84 BL 0x1C16DEC
	0x0222BA88 SUB X31, X31, 0xC0
	0x0222BA8C STP X29, X30, [X31 + 0x60]
	0x0222BA90 STP X28, X27, [X31 + 0x70]
	0x0222BA94 STP X26, X25, [X31 + 0x80]
	0x0222BA98 STP X24, X23, [X31 + 0x90]
	0x0222BA9C STP X22, X21, [X31 + 0xA0]
	0x0222BAA0 STP X20, X19, [X31 + 0xB0]
	0x0222BAA4 LDR X19, [X31 + 0xC8]
	0x0222BAA8 MOV W21, W7
	0x0222BAAC MOV X22, X6
	0x0222BAB0 MOV X23, X5

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Add X29, X31, 0
	012 Subtract X31, X31, 16
	013 NotImplemented "Instruction MRS not yet implemented."
	014 Move X8, [X26+40]
	015 Move X19, X2
	016 Move X20, X1
	017 Move X21, X0
	018 Move [X29-8], X8
	019 Move X8, [X2+56]
	020 Compare X8, 0
	021 JumpIfNotEqual {31}
	022 Move X0, 0x1EC9000
	023 Move X0, [X0+1728]
	024 Call 0x1C17CF4
	025 Move X8, [X19+56]
	026 Compare X8, 0
	027 JumpIfNotEqual {31}
	028 Move X0, X19
	029 Call 0x1C5D6E0
	030 Move X8, [X19+56]
	031 Move X8, [X8+8]
	032 Move W22, [X8+252]
	033 Add X8, X31, 0
	034 Add X9, X22, 15
	035 And X9, X9, 0x1FFFFFFFF
	036 Subtract X23, X8, X9
	037 Add X31, X23, 0
	038 Move X8, [X21]
	039 Compare X8, 0
	040 JumpIfEqual {82}
	041 Move X0, X21
	042 Move X1, X31
	043 Call NetworkInput.get_TypeKey, X0
	044 Move X8, 0x1EC9000
	045 Move X8, [X8+1728]
	046 Move X9, [X19+56]
	047 Move W24, W0
	048 Move X8, [X8]
	049 Move X25, [X9]
	050 Move W10, [X8+224]
	051 Compare W10, 0
	052 JumpIfNotEqual {55}
	053 Move X0, X8
	054 Call 0x1C17DFC
	055 Move X0, X25
	056 Move X1, X31
	057 Call Type.GetTypeFromHandle, X0
	058 Move X1, X31
	059 Call NetworkInputUtils.GetTypeKey, X0
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X0, X21
	062 Move X1, X31
	063 Call NetworkInput.get_Data, X0
	064 Move X21, X0
	065 Move X0, X23
	066 Move X1, X20
	067 Move X2, X22
	068 Call 0x3EB2AC0
	069 Move X0, X21
	070 Move X1, X23
	071 Move X2, X22
	072 Call 0x3EB2AC0
	073 Move X8, [X19+56]
	074 Move X0, [X8+8]
	075 Move W8, [X0+309]
	076 Move TEMP, X8
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {81}
	080 Call 0x1C5D684
	081 Move W0, 1
	082 Move W0, W31
	083 Move X8, [X26+40]
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Add X31, X29, 0
	087 Move X20, [X31+64]
	088 Move X19, [X31+72]
	089 Move X22, [X31+48]
	090 Move X21, [X31+56]
	091 Move X24, [X31+32]
	092 Move X23, [X31+40]
	093 Move X26, [X31+16]
	094 Move X25, [X31+24]
	095 Move X29, [X31+80]
	096 Move X30, [X31+88]
	097 Return X0
	098 Call 0x3EB2B20

Method: T Get()

Disassembly:
	0x0222B350 STP X26, X25, [X31 + 0x20]
	0x0222B354 STP X24, X23, [X31 + 0x30]
	0x0222B358 STP X22, X21, [X31 + 0x40]
	0x0222B35C STP X20, X19, [X31 + 0x50]
	0x0222B360 ADD X29, X31, 0x0
	0x0222B364 SUB X31, X31, 0x30
	0x0222B368 MRS X8, 0xC000
	0x0222B36C STP X2, X8, [X29 - 0x28]
	0x0222B370 LDR X8, [X8 + 0x28]
	0x0222B374 MOV X21, X3
	0x0222B378 MOV X19, X1
	0x0222B37C MOV X27, X0
	0x0222B380 STUR X8, [X29 - 0x8]
	0x0222B384 LDR X8, [X3 + 0x38]
	0x0222B388 CBNZ X8, 0x222B398
	0x0222B38C MOV X0, X21
	0x0222B390 BL 0x1C5C6E0
	0x0222B394 LDR X8, [X21 + 0x38]
	0x0222B398 LDR X9, [X8 + 0x20]
	0x0222B39C LDR X8, [X8 + 0x10]
	0x0222B3A0 LDR W23, [X9 + 0xFC]
	0x0222B3A4 LDR W20, [X8 + 0xFC]
	0x0222B3A8 ADD X8, X31, 0x0
	0x0222B3AC ADD X9, X23, 0xF
	0x0222B3B0 AND X9, X9, 0x1FFFFFFFF
	0x0222B3B4 SUB X25, X8, X9
	0x0222B3B8 ADD X31, X25, 0x0
	0x0222B3BC ADD X8, X31, 0x0
	0x0222B3C0 SUB X24, X8, X9
	0x0222B3C4 ADD X31, X24, 0x0
	0x0222B3C8 ADD X10, X20, 0xF
	0x0222B3CC ADD X8, X31, 0x0
	0x0222B3D0 AND X28, X10, 0x1FFFFFFFF
	0x0222B3D4 SUB X22, X8, X28
	0x0222B3D8 ADD X31, X22, 0x0
	0x0222B3DC ADD X8, X31, 0x0
	0x0222B3E0 SUB X26, X8, X9
	0x0222B3E4 ADD X31, X26, 0x0
	0x0222B3E8 MOV X0, X26
	0x0222B3EC MOV W1, W31
	0x0222B3F0 MOV X2, X23
	0x0222B3F4 BL 0x3EB1B10
	0x0222B3F8 ADD X8, X31, 0x0
	0x0222B3FC SUB X28, X8, X28
	0x0222B400 ADD X31, X28, 0x0
	0x0222B404 MOV X0, X28
	0x0222B408 MOV W1, W31
	0x0222B40C MOV X2, X20
	0x0222B410 BL 0x3EB1B10

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Add X29, X31, 0
	009 Subtract X31, X31, 16
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X23+40]
	012 Move X19, X1
	013 Move X20, X0
	014 Move [X29-8], X8
	015 Move X8, [X2+56]
	016 Compare X8, 0
	017 JumpIfNotEqual {22}
	018 Move X0, X2
	019 Move X21, X2
	020 Call 0x1C5D6E0
	021 Move X8, [X21+56]
	022 Move X1, [X8]
	023 Move X9, [X8+8]
	024 Move W21, [X9+252]
	025 Add X9, X31, 0
	026 Add X10, X21, 15
	027 And X10, X10, 0x1FFFFFFFF
	028 Subtract X22, X9, X10
	029 Add X31, X22, 0
	030 Move X8, [X1]
	031 Move X0, X20
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move X0, X20
	034 Move X1, X31
	035 Call NetworkInput.get_Data, X0
	036 Move X1, X0
	037 Move X0, X22
	038 Move X2, X21
	039 Call 0x3EB2AC0
	040 Move X0, X19
	041 Move X1, X22
	042 Move X2, X21
	043 Call 0x3EB2AC0
	044 Move X8, [X23+40]
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Add X31, X29, 0
	048 Move X20, [X31+48]
	049 Move X19, [X31+56]
	050 Move X22, [X31+32]
	051 Move X21, [X31+40]
	052 Move X23, [X31+16]
	053 Move X29, [X31+64]
	054 Move X30, [X31+72]
	055 Return X0
	056 Call 0x3EB2B20

Method: System.Boolean Set(T value)

Disassembly:
	0x0222B4A4 MOV X0, X22
	0x0222B4A8 MOV X1, X24
	0x0222B4AC LDR X2, [X8 + 0x18]
	0x0222B4B0 BL 0x243C928
	0x0222B4B4 B 0x222B4D8
	0x0222B4B8 MOV X0, X28
	0x0222B4BC MOV W1, W31
	0x0222B4C0 MOV X2, X20
	0x0222B4C4 BL 0x3EB1B10
	0x0222B4C8 MOV X0, X22
	0x0222B4CC MOV X1, X28
	0x0222B4D0 MOV X2, X20
	0x0222B4D4 BL 0x3EB1AC0
	0x0222B4D8 LDUR X0, [X29 - 0x28]
	0x0222B4DC MOV X1, X22
	0x0222B4E0 MOV X2, X20
	0x0222B4E4 BL 0x3EB1AC0
	0x0222B4E8 LDUR X8, [X29 - 0x20]
	0x0222B4EC LDR X8, [X8 + 0x28]
	0x0222B4F0 LDUR X9, [X29 - 0x8]
	0x0222B4F4 CMP X8, X9
	0x0222B4F8 B.NE 0x222B520
	0x0222B4FC ADD X31, X29, 0x0
	0x0222B500 LDP X20, X19, [X31 + 0x50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {14}
	010 Move X0, X2
	011 Move X21, X2
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X1, [X8]
	015 Move X0, X20
	016 Call 0x222B1E8, X0
	017 Move W21, W0
	018 Move X0, X20
	019 Move X1, X31
	020 Call NetworkInput.get_Data, X0
	021 Move W2, 168
	022 Move X1, X19
	023 Call 0x3EB2B30
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 And W0, W21, 1
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Boolean Set(System.Type type, System.Void* value)

Disassembly:
	0x01EDF0B8 LDR X0, [X24]
	0x01EDF0BC LDR W8, [X0 + 0xE0]
	0x01EDF0C0 CBNZ W8, 0x1EDF0C8
	0x01EDF0C4 BL 0x1C16DFC
	0x01EDF0C8 LDR W8, [X22 + 0x54]
	0x01EDF0CC CMP W8, 0x0
	0x01EDF0D0 B.GT 0x1EDF5B4
	0x01EDF0D4 LDR X0, [X24]
	0x01EDF0D8 LDR W8, [X0 + 0xE0]
	0x01EDF0DC CBNZ W8, 0x1EDF0E4
	0x01EDF0E0 BL 0x1C16DFC
	0x01EDF0E4 LDR W8, [X22 + 0x48]
	0x01EDF0E8 CMP W8, 0x1
	0x01EDF0EC B.NE 0x1EDF5B4
	0x01EDF0F0 CBZ X19, 0x1EDF8B8
	0x01EDF0F4 LDR X0, [X19 + 0x30]
	0x01EDF0F8 CBZ X0, 0x1EDF8B8
	0x01EDF0FC LDP W2, W8, [X0 + 0x18]
	0x01EDF100 ADD W8, W8, 0x1
	0x01EDF104 CMP W2, 0x1
	0x01EDF108 STP W31, W8, [X0 + 0x18]
	0x01EDF10C B.LT 0x1EDF128
	0x01EDF110 LDR X0, [X0 + 0x10]
	0x01EDF114 MOV W1, W31
	0x01EDF118 MOV X3, X31
	0x01EDF11C BL 0x339FA34
	0x01EDF120 LDR X0, [X19 + 0x30]
	0x01EDF124 CBZ X0, 0x1EDF8B8
	0x01EDF128 ADRP X21, 0x221E000
	0x01EDF12C LDR X21, [X21 + 0xDD8]
	0x01EDF130 LDR W10, [X0 + 0x1C]
	0x01EDF134 LDR X8, [X0 + 0x10]
	0x01EDF138 LDR X9, [X21]
	0x01EDF13C ADD W10, W10, 0x1
	0x01EDF140 STR W10, [X0 + 0x1C]
	0x01EDF144 CBZ X8, 0x1EDF8B8
	0x01EDF148 LDRSW X10, [X0 + 0x18]
	0x01EDF14C LDR W11, [X8 + 0x18]
	0x01EDF150 CMP W10, W11
	0x01EDF154 B.CS 0x1EDF5F4
	0x01EDF158 ADD W9, W10, 0x1
	0x01EDF15C ADD X8, X8, X10, 0x3, LSL
	0x01EDF160 STR W9, [X0 + 0x18]
	0x01EDF164 STR X20, [X8 + 0x20]
	0x01EDF168 B 0x1EDF608
	0x01EDF16C BL 0x1C16DFC
	0x01EDF170 LDR X0, [X24]
	0x01EDF174 LDRB W23, [X22 + 0x70]
	0x01EDF178 LDR W8, [X0 + 0xE0]
	0x01EDF17C CBNZ W8, 0x1EDF184
	0x01EDF180 BL 0x1C16DFC
	0x01EDF184 CBNZ W23, 0x1EDF5C8
	0x01EDF188 LDR W8, [X22 + 0x50]
	0x01EDF18C CMP W8, 0x1
	0x01EDF190 B.LT 0x1EDF6B0
	0x01EDF194 LDR X0, [X24]
	0x01EDF198 LDR W8, [X0 + 0xE0]
	0x01EDF19C CBNZ W8, 0x1EDF1A4
	0x01EDF1A0 BL 0x1C16DFC
	0x01EDF1A4 LDR W8, [X22 + 0x54]
	0x01EDF1A8 CMP W8, 0x0
	0x01EDF1AC B.LE 0x1EDF6B0
	0x01EDF1B0 LDR X0, [X24]
	0x01EDF1B4 LDR W8, [X0 + 0xE0]
	0x01EDF1B8 CBNZ W8, 0x1EDF1C0
	0x01EDF1BC BL 0x1C16DFC
	0x01EDF1C0 CBZ X19, 0x1EDF8B8
	0x01EDF1C4 LDR X12, [X19 + 0x10]
	0x01EDF1C8 CBZ X12, 0x1EDF8B8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X0
	007 Move X0, X1
	008 Move X20, X2
	009 Move X22, X1
	010 Call NetworkInputUtils.GetWordCount, X0
	011 Move W8, [X21+8]
	012 Move W19, W0
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X0, X21
	015 Move X1, X22
	016 Call NetworkInput.Convert, X0, X1
	017 Move X8, [X21]
	018 Move W2, W19
	019 ShiftRight W2, 30
	020 And W2, W2, 0x1FFFFFFF
	021 Move X1, X20
	022 Move X3, X31
	023 Add X9, X8, 4
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CSEL not yet implemented."
	026 Call Native.MemCpy, X0, X1, X2
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move W0, 1
	032 Move X30, [X31+48]
	033 Return X0
	034 Move [X31+12], W8
	035 Move X20, 0x2215000
	036 Move X20, [X20+1880]
	037 Move X0, X20
	038 Call 0x1C17D08
	039 Add X1, X31, 12
	040 Call 0x1C17E04
	041 Move X21, X0
	042 Move X0, X20
	043 Move [X31+8], W19
	044 Call 0x1C17D08
	045 Add X1, X31, 8
	046 Call 0x1C17E04
	047 Move X19, X0
	048 Move X0, 0x2222000
	049 Move X0, [X0+768]
	050 Call 0x1C17D08
	051 Move X1, X21
	052 Move X2, X19
	053 Move X3, X31
	054 Call String.Format, X0, X1, X2
	055 Move X19, X0
	056 Move X0, 0x221D000
	057 Move X0, [X0+1400]
	058 Call 0x1C17D08
	059 Call 0x1C17F10
	060 Move X20, X0
	061 Move X0, 0x221D000
	062 Move X0, [X0+1512]
	063 Call 0x1C17D08
	064 Move X2, X0
	065 Move X0, X20
	066 Move X1, X19
	067 Move X3, X31
	068 Call ArgumentException..ctor, X0, X1, X2
	069 Move X0, 0x2222000
	070 Move X0, [X0+776]
	071 Call 0x1C17D08
	072 Move X1, X0
	073 Move X0, X20
	074 Call 0x1C17DEC

Method: System.Boolean Convert()

Disassembly:
	0x0222B1E8 ADD X1, X31, 0x18
	0x0222B1EC MOVZ W2, 0xA8
	0x0222B1F0 LDR X20, [X8 + 0x18]
	0x0222B1F4 BL 0x3EB1AC0
	0x0222B1F8 ADD X1, X31, 0xC0
	0x0222B1FC MOV X0, X19
	0x0222B200 MOV X2, X20
	0x0222B204 BL 0x2435798
	0x0222B208 B 0x222B21C
	0x0222B20C MOVZ W2, 0xAC
	0x0222B210 MOV X0, X19
	0x0222B214 MOV W1, W31
	0x0222B218 BL 0x3EB1B10
	0x0222B21C LDR X8, [X23 + 0x28]
	0x0222B220 LDR X9, [X31 + 0x168]
	0x0222B224 CMP X8, X9
	0x0222B228 B.NE 0x222B248
	0x0222B22C LDP X20, X19, [X31 + 0x1A0]
	0x0222B230 LDP X22, X21, [X31 + 0x190]
	0x0222B234 LDP X30, X23, [X31 + 0x180]
	0x0222B238 LDR X29, [X31 + 0x170]
	0x0222B23C ADD X31, X31, 0x1B0
	0x0222B240 RET
	0x0222B244 BL 0x1C16F20
	0x0222B248 BL 0x3EB1B20
	0x0222B24C STP X29, X30, [X31 - 0x30]!
	0x0222B250 STP X22, X21, [X31 + 0x10]
	0x0222B254 STP X20, X19, [X31 + 0x20]
	0x0222B258 SUB X31, X31, 0x2B0
	0x0222B25C LDR X9, [X2 + 0x38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X19, X0
	006 Compare X8, 0
	007 JumpIfNotEqual {18}
	008 Move X0, 0x1EC9000
	009 Move X0, [X0+1728]
	010 Move X20, X1
	011 Call 0x1C17CF4
	012 Move X8, [X20+56]
	013 Compare X8, 0
	014 JumpIfNotEqual {18}
	015 Move X0, X20
	016 Call 0x1C5D6E0
	017 Move X8, [X20+56]
	018 Move X9, 0x1EC9000
	019 Move X9, [X9+1728]
	020 Move X20, [X8]
	021 Move X0, [X9]
	022 Move W9, [X0+224]
	023 Compare W9, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X31
	028 Call Type.GetTypeFromHandle, X0
	029 Move X1, X0
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X2, X31
	034 Move X30, [X31+32]
	035 Call NetworkInput.Convert, X0, X1
	036 Return X0

Method: System.Boolean Convert(System.Type type)

Disassembly:
	0x01EDF1CC LDRSW X8, [X22 + 0x50]
	0x01EDF1D0 LDR W10, [X12 + 0x18]
	0x01EDF1D4 CMP W8, W10
	0x01EDF1D8 B.CS 0x1EDF8B4
	0x01EDF1DC LDRSW X9, [X22 + 0x54]
	0x01EDF1E0 CMP W9, W10
	0x01EDF1E4 B.CS 0x1EDF8B4
	0x01EDF1E8 MOVZ W10, 0x78
	0x01EDF1EC MOVZ W11, 0x78
	0x01EDF1F0 MADD X10, X8, X10, X12
	0x01EDF1F4 ADD X12, X12, 0x20
	0x01EDF1F8 MADD X22, X9, X11, X12
	0x01EDF1FC MADD X8, X8, X11, X12
	0x01EDF200 ADD X23, X10, 0x20
	0x01EDF204 LDP S4, S6, [X21]
	0x01EDF208 LDP S16, S5, [X21 + 0x8]
	0x01EDF20C LDP S17, S18, [X21 + 0x10]
	0x01EDF210 LDP S19, S20, [X8 + 0x4]
	0x01EDF214 LDP S21, S22, [X8 + 0xC]
	0x01EDF218 LDR V23, [X8 + 0x14]
	0x01EDF21C LDP S24, S25, [X22]
	0x01EDF220 LDP S26, S27, [X22 + 0x8]
	0x01EDF224 LDP S28, S29, [X22 + 0x10]
	0x01EDF228 LDR V30, [X23]
	0x01EDF22C FSUB S3, S4, S5
	0x01EDF230 FSUB S2, S6, S17
	0x01EDF234 FSUB S1, S16, S18

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, X1
	006 Call NetworkInputUtils.GetTypeKey, X0
	007 Move X8, [X19]
	008 Move W20, W0
	009 Compare X8, 0
	010 JumpIfEqual {12}
	011 Move W9, [X8]
	012 Move TEMP, 0
	013 Not TEMP
	014 Move W9, TEMP
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move W0, W31
	017 Move W9, [X19+8]
	018 Move X0, X8
	019 Move X2, X31
	020 Move W1, W9
	021 ShiftRight W1, 30
	022 And W1, W1, 0x1FFFFFFF
	023 Call Native.MemClear, X0, X1
	024 Move X8, [X19]
	025 Compare X8, 0
	026 JumpIfEqual {28}
	027 Move [X8], W20
	028 Move W0, 1
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0

Method: System.Boolean Is()

Disassembly:
	0x0222B414 LDR X0, [X27 + 0x50]
	0x0222B418 CBZ X0, 0x222B51C
	0x0222B41C AND X1, X19, 0x0
	0x0222B420 MOV X2, X31
	0x0222B424 BL 0x1EC3E44
	0x0222B428 CBZ X0, 0x222B4B8
	0x0222B42C MOV X1, X31
	0x0222B430 BL 0x1ED8BC4
	0x0222B434 LDR X8, [X27 + 0x50]
	0x0222B438 CBZ X8, 0x222B51C
	0x0222B43C LDR X8, [X8 + 0x58]
	0x0222B440 CBZ X8, 0x222B51C
	0x0222B444 LDR W1, [X8 + 0x10]
	0x0222B448 MOV X2, X31
	0x0222B44C BL 0x1EDE0B0
	0x0222B450 STP X0, X1, [X29 - 0x18]
	0x0222B454 LDR X8, [X21 + 0x38]
	0x0222B458 SUB X0, X29, 0x18
	0x0222B45C MOV X1, X26
	0x0222B460 LDR X2, [X8]
	0x0222B464 LDR X8, [X2]
	0x0222B468 BLR X8
	0x0222B46C TBZ X0, 0x0, 0x222B4B8
	0x0222B470 MOV X0, X25
	0x0222B474 MOV X1, X26
	0x0222B478 MOV X2, X23
	0x0222B47C BL 0x3EB1AC0
	0x0222B480 MOV X0, X22
	0x0222B484 MOV W1, W31
	0x0222B488 MOV X2, X20
	0x0222B48C BL 0x3EB1B10
	0x0222B490 MOV X0, X24
	0x0222B494 MOV X1, X25
	0x0222B498 MOV X2, X23
	0x0222B49C BL 0x3EB1AC0
	0x0222B4A0 LDR X8, [X21 + 0x38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X19, X1
	006 Move X20, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {17}
	009 Move X0, 0x1EC9000
	010 Move X0, [X0+1728]
	011 Call 0x1C17CF4
	012 Move X8, [X19+56]
	013 Compare X8, 0
	014 JumpIfNotEqual {17}
	015 Move X0, X19
	016 Call 0x1C5D6E0
	017 Move X0, X20
	018 Move X1, X31
	019 Call NetworkInput.get_TypeKey, X0
	020 Move X8, 0x1EC9000
	021 Move X8, [X8+1728]
	022 Move X9, [X19+56]
	023 Move W19, W0
	024 Move X8, [X8]
	025 Move X20, [X9]
	026 Move W10, [X8+224]
	027 Compare W10, 0
	028 JumpIfNotEqual {31}
	029 Move X0, X8
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Call Type.GetTypeFromHandle, X0
	034 Move X1, X31
	035 Call NetworkInputUtils.GetTypeKey, X0
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 NotImplemented "Instruction CSET not yet implemented."
	040 Move X30, [X31+32]
	041 Return X0

