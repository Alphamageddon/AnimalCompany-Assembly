Type: Fusion.Vector3Compressed

Method: System.Single get_X()

Disassembly:
	0x01E8BB88 BL 0x1C16DFC
	0x01E8BB8C LDRB W8, [X21 + 0xE90]
	0x01E8BB90 CBNZ W8, 0x1E8BBA8
	0x01E8BB94 ADRP X0, 0x226F000
	0x01E8BB98 LDR X0, [X0 + 0xC68]
	0x01E8BB9C BL 0x1C16CF4
	0x01E8BBA0 MOVZ W8, 0x1
	0x01E8BBA4 STRB W8, [X21 + 0xE90]
	0x01E8BBA8 LDR X0, [X22]
	0x01E8BBAC LDR W8, [X0 + 0xE0]
	0x01E8BBB0 CBNZ W8, 0x1E8BBD4
	0x01E8BBB4 BL 0x1C16DFC
	0x01E8BBB8 LDRB W8, [X21 + 0xE90]
	0x01E8BBBC CBNZ W8, 0x1E8BBD4
	0x01E8BBC0 ADRP X0, 0x226F000
	0x01E8BBC4 LDR X0, [X0 + 0xC68]
	0x01E8BBC8 BL 0x1C16CF4
	0x01E8BBCC MOVZ W8, 0x1
	0x01E8BBD0 STRB W8, [X21 + 0xE90]
	0x01E8BBD4 LDR X0, [X22]
	0x01E8BBD8 LDR W8, [X0 + 0xE0]
	0x01E8BBDC CBNZ W8, 0x1E8BBE4
	0x01E8BBE0 BL 0x1C16DFC
	0x01E8BBE4 UBFM X9, X20, 0x20, 0x3F
	0x01E8BBE8 FMOV S0, W20
	0x01E8BBEC UNIMPLEMENTED
	0x01E8BBF0 UBFM X8, X19, 0x20, 0x3F

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x254E000
	005 Move W8, [X20+3728]
	006 Move W19, [X0]
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0x2270000
	010 Move X0, [X0+3176]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X20+3728], W8
	014 Move X8, 0x2270000
	015 Move X8, [X8+3176]
	016 Move X0, [X8]
	017 Move W8, [X0+224]
	018 Compare W8, 0
	019 JumpIfNotEqual {21}
	020 Call 0x1C17DFC
	021 And W8, W19, 1
	022 Subtract W8, W31, W8
	023 Xor W8, W8, W19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W9, 0x3A800000
	027 NotImplemented "Instruction SCVTF not yet implemented."
	028 Move S1, W9
	029 Multiply S0, S0, S1
	030 Move X30, [X31+32]
	031 Return V0

Method: System.Void set_X(System.Single value)

Disassembly:
	0x01E8BBF4 UNIMPLEMENTED
	0x01E8BBF8 MOVI V1.4S, 0x1
	0x01E8BBFC UNIMPLEMENTED
	0x01E8BC00 UNIMPLEMENTED
	0x01E8BC04 AND V0.16B, V0.16B, V1.16B
	0x01E8BC08 UNIMPLEMENTED
	0x01E8BC0C MOVZ W10, 0x3A800000
	0x00000000 INVALID
	0x01E8BC14 LDP X20, X19, [X31 + 0x20]
	0x01E8BC18 LDP X22, X21, [X31 + 0x10]
	0x01E8BC1C UNIMPLEMENTED
	0x01E8BC20 UNIMPLEMENTED
	0x00000000 INVALID
	0x01E8BC28 MOV S1, V0.S[1]
	0x01E8BC2C MOV S2, V0.S[2]
	0x01E8BC30 MOV S3, V0.S[3]
	0x01E8BC34 LDR X30, [X31], #0x30
	0x01E8BC38 RET
	0x01E8BC3C LDR W8, [X0]
	0x01E8BC40 CMP W8, W1
	0x01E8BC44 B.NE 0x1E8BC78
	0x01E8BC48 LDR W8, [X0 + 0x4]
	0x01E8BC4C UBFM X9, X1, 0x20, 0x3F
	0x01E8BC50 CMP W8, W9
	0x01E8BC54 B.NE 0x1E8BC78
	0x01E8BC58 LDR W8, [X0 + 0x8]
	0x01E8BC5C CMP W8, W2
	0x01E8BC60 B.NE 0x1E8BC78
	0x01E8BC64 LDR W8, [X0 + 0xC]
	0x01E8BC68 UBFM X9, X2, 0x20, 0x3F
	0x01E8BC6C CMP W8, W9
	0x01E8BC70 CSET W0, EQ
	0x01E8BC74 RET
	0x01E8BC78 MOV W0, W31
	0x01E8BC7C RET
	0x01E8BC80 STP X30, X21, [X31 - 0x20]!
	0x01E8BC84 STP X20, X19, [X31 + 0x10]
	0x01E8BC88 ADRP X21, 0x254E000
	0x01E8BC8C LDRB W8, [X21 + 0x239]
	0x01E8BC90 MOV X20, X1
	0x01E8BC94 MOV X19, X0

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x254E000
	006 Move W8, [X20+3727]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x2270000
	012 Move X0, [X0+3176]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3727], W8
	016 Move X8, 0x2270000
	017 Move X8, [X8+3176]
	018 Move X0, [X8]
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move W8, S8
	024 Move W9, 0x44800000
	025 Move W8, W8
	026 ShiftRight W8, 31
	027 And W8, W8, 0x7FFFFFFF
	028 Move S0, 0.5
	029 Move S1, W9
	030 NotImplemented "Instruction UCVTF not yet implemented."
	031 Move W9, 0x7F800000
	032 Multiply S1, S8, S1
	033 Subtract S0, S0, S2
	034 Move S2, W9
	035 Add S0, S1, S0
	036 NotImplemented "Instruction FCVTZS not yet implemented."
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 Move W9, 0x80000000
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 NotImplemented "Instruction SBFM not yet implemented."
	041 Xor W8, W9, W8
	042 Move [X19], W8
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+8]
	046 Move V8, [X31+32]
	047 Return 

Method: System.Single get_Y()

Disassembly:
	0x01E8BC98 TBNZ X8, 0x0, 0x1E8BCB0
	0x01E8BC9C ADRP X0, 0x2272000
	0x01E8BCA0 LDR X0, [X0 + 0xFC0]
	0x01E8BCA4 BL 0x1C16CF4
	0x01E8BCA8 MOVZ W8, 0x1
	0x01E8BCAC STRB W8, [X21 + 0x239]
	0x01E8BCB0 CBZ X20, 0x1E8BD18
	0x01E8BCB4 ADRP X8, 0x2272000
	0x01E8BCB8 LDR X8, [X8 + 0xFC0]
	0x01E8BCBC LDR X9, [X20]
	0x01E8BCC0 LDR X8, [X8]
	0x01E8BCC4 CMP X9, X8
	0x01E8BCC8 B.NE 0x1E8BD18
	0x01E8BCCC MOV X0, X20
	0x01E8BCD0 BL 0x1C16E08
	0x01E8BCD4 LDR X8, [X0]
	0x01E8BCD8 LDR W9, [X19]
	0x01E8BCDC CMP W9, W8
	0x01E8BCE0 B.NE 0x1E8BD18
	0x01E8BCE4 LDR W9, [X19 + 0x4]
	0x01E8BCE8 UBFM X8, X8, 0x20, 0x3F
	0x01E8BCEC CMP W9, W8
	0x01E8BCF0 B.NE 0x1E8BD18
	0x01E8BCF4 LDR X8, [X0 + 0x8]
	0x01E8BCF8 LDR W9, [X19 + 0x8]
	0x01E8BCFC CMP W9, W8
	0x01E8BD00 B.NE 0x1E8BD18

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x254E000
	005 Move W8, [X20+3728]
	006 Move W19, [X0+4]
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0x2270000
	010 Move X0, [X0+3176]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X20+3728], W8
	014 Move X8, 0x2270000
	015 Move X8, [X8+3176]
	016 Move X0, [X8]
	017 Move W8, [X0+224]
	018 Compare W8, 0
	019 JumpIfNotEqual {21}
	020 Call 0x1C17DFC
	021 And W8, W19, 1
	022 Subtract W8, W31, W8
	023 Xor W8, W8, W19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W9, 0x3A800000
	027 NotImplemented "Instruction SCVTF not yet implemented."
	028 Move S1, W9
	029 Multiply S0, S0, S1
	030 Move X30, [X31+32]
	031 Return V0

Method: System.Void set_Y(System.Single value)

Disassembly:
	0x01E8BD04 LDR W9, [X19 + 0xC]
	0x01E8BD08 UBFM X8, X8, 0x20, 0x3F
	0x01E8BD0C CMP W9, W8
	0x01E8BD10 CSET W0, EQ
	0x01E8BD14 B 0x1E8BD1C
	0x01E8BD18 MOV W0, W31
	0x01E8BD1C LDP X20, X19, [X31 + 0x10]
	0x01E8BD20 LDP X30, X21, [X31], #0x20
	0x01E8BD24 RET
	0x01E8BD28 LDP W8, W9, [X0]
	0x01E8BD2C LDP W10, W11, [X0 + 0x8]
	0x01E8BD30 MOVZ W12, 0x18D
	0x01E8BD34 MUL W8, W8, W12
	0x01E8BD38 EOR W8, W8, W9, 0x0
	0x01E8BD3C MUL W8, W8, W12
	0x01E8BD40 EOR W8, W8, W10, 0x0
	0x01E8BD44 MUL W8, W8, W12
	0x01E8BD48 EOR W0, W8, W11, 0x0
	0x01E8BD4C RET
	0x01E8BD50 MOV X8, X0
	0x01E8BD54 CMP W8, W2
	0x01E8BD58 B.NE 0x1E8BD8C
	0x01E8BD5C CMP W1, W3
	0x01E8BD60 MOV W0, W31
	0x01E8BD64 B.NE 0x1E8BD88
	0x01E8BD68 UBFM X8, X8, 0x20, 0x3F
	0x01E8BD6C UBFM X9, X2, 0x20, 0x3F
	0x01E8BD70 CMP W8, W9
	0x01E8BD74 B.NE 0x1E8BD88
	0x01E8BD78 UBFM X8, X1, 0x20, 0x3F
	0x01E8BD7C UBFM X9, X3, 0x20, 0x3F
	0x01E8BD80 CMP W8, W9
	0x01E8BD84 CSET W0, EQ
	0x01E8BD88 RET
	0x01E8BD8C MOV W0, W31
	0x01E8BD90 RET
	0x01E8BD94 MOV X8, X0
	0x01E8BD98 CMP W8, W2
	0x01E8BD9C B.NE 0x1E8BDD0
	0x01E8BDA0 CMP W1, W3
	0x01E8BDA4 MOVZ W0, 0x1

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x254E000
	006 Move W8, [X20+3727]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x2270000
	012 Move X0, [X0+3176]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3727], W8
	016 Move X8, 0x2270000
	017 Move X8, [X8+3176]
	018 Move X0, [X8]
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move W8, S8
	024 Move W9, 0x44800000
	025 Move W8, W8
	026 ShiftRight W8, 31
	027 And W8, W8, 0x7FFFFFFF
	028 Move S0, 0.5
	029 Move S1, W9
	030 NotImplemented "Instruction UCVTF not yet implemented."
	031 Move W9, 0x7F800000
	032 Multiply S1, S8, S1
	033 Subtract S0, S0, S2
	034 Move S2, W9
	035 Add S0, S1, S0
	036 NotImplemented "Instruction FCVTZS not yet implemented."
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 Move W9, 0x80000000
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 NotImplemented "Instruction SBFM not yet implemented."
	041 Xor W8, W9, W8
	042 Move [X19+4], W8
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+8]
	046 Move V8, [X31+32]
	047 Return 

Method: System.Single get_Z()

Disassembly:
	0x01E8BDA8 B.NE 0x1E8BDCC
	0x01E8BDAC UBFM X8, X8, 0x20, 0x3F
	0x01E8BDB0 UBFM X9, X2, 0x20, 0x3F
	0x01E8BDB4 CMP W8, W9
	0x01E8BDB8 B.NE 0x1E8BDCC
	0x01E8BDBC UBFM X8, X1, 0x20, 0x3F
	0x01E8BDC0 UBFM X9, X3, 0x20, 0x3F
	0x01E8BDC4 CMP W8, W9
	0x01E8BDC8 CSET W0, NE
	0x01E8BDCC RET
	0x01E8BDD0 MOVZ W0, 0x1
	0x01E8BDD4 RET
	0x01E8BDD8 STR X30, [X31 - 0x20]!
	0x01E8BDDC STP X20, X19, [X31 + 0x10]
	0x01E8BDE0 ADRP X20, 0x254D000
	0x01E8BDE4 LDRB W8, [X20 + 0xE90]
	0x01E8BDE8 LDR W19, [X0]
	0x01E8BDEC CBNZ W8, 0x1E8BE04
	0x01E8BDF0 ADRP X0, 0x226F000
	0x01E8BDF4 LDR X0, [X0 + 0xC68]
	0x01E8BDF8 BL 0x1C16CF4
	0x01E8BDFC MOVZ W8, 0x1
	0x01E8BE00 STRB W8, [X20 + 0xE90]
	0x01E8BE04 ADRP X8, 0x226F000
	0x01E8BE08 LDR X8, [X8 + 0xC68]
	0x01E8BE0C LDR X0, [X8]
	0x01E8BE10 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x254E000
	005 Move W8, [X20+3728]
	006 Move W19, [X0+8]
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0x2270000
	010 Move X0, [X0+3176]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X20+3728], W8
	014 Move X8, 0x2270000
	015 Move X8, [X8+3176]
	016 Move X0, [X8]
	017 Move W8, [X0+224]
	018 Compare W8, 0
	019 JumpIfNotEqual {21}
	020 Call 0x1C17DFC
	021 And W8, W19, 1
	022 Subtract W8, W31, W8
	023 Xor W8, W8, W19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W9, 0x3A800000
	027 NotImplemented "Instruction SCVTF not yet implemented."
	028 Move S1, W9
	029 Multiply S0, S0, S1
	030 Move X30, [X31+32]
	031 Return V0

Method: System.Void set_Z(System.Single value)

Disassembly:
	0x01E8BE14 CBNZ W8, 0x1E8BE1C
	0x01E8BE18 BL 0x1C16DFC
	0x01E8BE1C AND W8, W19, 0x1
	0x01E8BE20 SUB W8, W31, W8
	0x01E8BE24 EOR W8, W8, W19, 0x1
	0x01E8BE28 LDP X20, X19, [X31 + 0x10]
	0x01E8BE2C MOVZ W9, 0x3A800000
	0x01E8BE30 SCVTF S0, W8
	0x01E8BE34 FMOV S1, W9
	0x01E8BE38 FMUL S0, S0, S1
	0x01E8BE3C LDR X30, [X31], #0x20
	0x01E8BE40 RET
	0x01E8BE44 STR D8, [X31 - 0x20]!
	0x01E8BE48 STR X30, [X31 + 0x8]
	0x01E8BE4C STP X20, X19, [X31 + 0x10]
	0x01E8BE50 ADRP X20, 0x254D000
	0x01E8BE54 LDRB W8, [X20 + 0xE8F]
	0x01E8BE58 MOV V8.16B, V0.16B
	0x01E8BE5C MOV X19, X0
	0x01E8BE60 CBNZ W8, 0x1E8BE78
	0x01E8BE64 ADRP X0, 0x226F000
	0x01E8BE68 LDR X0, [X0 + 0xC68]
	0x01E8BE6C BL 0x1C16CF4
	0x01E8BE70 MOVZ W8, 0x1
	0x01E8BE74 STRB W8, [X20 + 0xE8F]
	0x01E8BE78 ADRP X8, 0x226F000
	0x01E8BE7C LDR X8, [X8 + 0xC68]
	0x01E8BE80 LDR X0, [X8]
	0x01E8BE84 LDR W8, [X0 + 0xE0]
	0x01E8BE88 CBNZ W8, 0x1E8BE90
	0x01E8BE8C BL 0x1C16DFC
	0x01E8BE90 FMOV W8, S8
	0x01E8BE94 MOVZ W9, 0x44800000
	0x01E8BE98 UBFM W8, W8, 0x1F, 0x1F
	0x01E8BE9C FMOV S0, 0.5
	0x01E8BEA0 FMOV S1, W9
	0x01E8BEA4 UCVTF S2, W8
	0x01E8BEA8 MOVZ W9, 0x7F800000
	0x01E8BEAC FMUL S1, S8, S1
	0x01E8BEB0 FSUB S0, S0, S2
	0x01E8BEB4 FMOV S2, W9

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x254E000
	006 Move W8, [X20+3727]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x2270000
	012 Move X0, [X0+3176]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3727], W8
	016 Move X8, 0x2270000
	017 Move X8, [X8+3176]
	018 Move X0, [X8]
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move W8, S8
	024 Move W9, 0x44800000
	025 Move W8, W8
	026 ShiftRight W8, 31
	027 And W8, W8, 0x7FFFFFFF
	028 Move S0, 0.5
	029 Move S1, W9
	030 NotImplemented "Instruction UCVTF not yet implemented."
	031 Move W9, 0x7F800000
	032 Multiply S1, S8, S1
	033 Subtract S0, S0, S2
	034 Move S2, W9
	035 Add S0, S1, S0
	036 NotImplemented "Instruction FCVTZS not yet implemented."
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 Move W9, 0x80000000
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 NotImplemented "Instruction SBFM not yet implemented."
	041 Xor W8, W9, W8
	042 Move [X19+8], W8
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+8]
	046 Move V8, [X31+32]
	047 Return 

Method: Fusion.Vector3Compressed op_Implicit(UnityEngine.Vector3 v)

Disassembly:
	0x01E8BEB8 FADD S0, S1, S0
	0x01E8BEBC FCVTZS W8, S0
	0x01E8BEC0 FCMP S0, S2
	0x01E8BEC4 MOVZ W9, 0x80000000
	0x01E8BEC8 CSEL W8, W9, W8, EQ
	0x01E8BECC SBFM W9, W8, 0x1F, 0x1F
	0x01E8BED0 EOR W8, W9, W8, 0x1
	0x01E8BED4 STR W8, [X19]
	0x01E8BED8 LDP X20, X19, [X31 + 0x10]
	0x01E8BEDC LDR X30, [X31 + 0x8]
	0x01E8BEE0 LDR V8, [X31], #0x20
	0x01E8BEE4 RET
	0x01E8BEE8 STR X30, [X31 - 0x20]!
	0x01E8BEEC STP X20, X19, [X31 + 0x10]
	0x01E8BEF0 ADRP X20, 0x254D000
	0x01E8BEF4 LDRB W8, [X20 + 0xE90]
	0x01E8BEF8 LDR W19, [X0 + 0x4]
	0x01E8BEFC CBNZ W8, 0x1E8BF14
	0x01E8BF00 ADRP X0, 0x226F000
	0x01E8BF04 LDR X0, [X0 + 0xC68]
	0x01E8BF08 BL 0x1C16CF4
	0x01E8BF0C MOVZ W8, 0x1
	0x01E8BF10 STRB W8, [X20 + 0xE90]
	0x01E8BF14 ADRP X8, 0x226F000
	0x01E8BF18 LDR X8, [X8 + 0xC68]
	0x01E8BF1C LDR X0, [X8]
	0x01E8BF20 LDR W8, [X0 + 0xE0]
	0x01E8BF24 CBNZ W8, 0x1E8BF2C
	0x01E8BF28 BL 0x1C16DFC
	0x01E8BF2C AND W8, W19, 0x1
	0x01E8BF30 SUB W8, W31, W8
	0x01E8BF34 EOR W8, W8, W19, 0x1
	0x01E8BF38 LDP X20, X19, [X31 + 0x10]
	0x01E8BF3C MOVZ W9, 0x3A800000
	0x01E8BF40 SCVTF S0, W8
	0x01E8BF44 FMOV S1, W9
	0x01E8BF48 FMUL S0, S0, S1
	0x01E8BF4C LDR X30, [X31], #0x20
	0x01E8BF50 RET
	0x01E8BF54 STR D8, [X31 - 0x20]!
	0x01E8BF58 STR X30, [X31 + 0x8]
	0x01E8BF5C STP X20, X19, [X31 + 0x10]
	0x01E8BF60 ADRP X20, 0x254D000
	0x01E8BF64 LDRB W8, [X20 + 0xE8F]
	0x01E8BF68 MOV V8.16B, V0.16B
	0x01E8BF6C MOV X19, X0
	0x01E8BF70 CBNZ W8, 0x1E8BF88
	0x01E8BF74 ADRP X0, 0x226F000
	0x01E8BF78 LDR X0, [X0 + 0xC68]
	0x01E8BF7C BL 0x1C16CF4
	0x01E8BF80 MOVZ W8, 0x1
	0x01E8BF84 STRB W8, [X20 + 0xE8F]
	0x01E8BF88 ADRP X8, 0x226F000
	0x01E8BF8C LDR X8, [X8 + 0xC68]
	0x01E8BF90 LDR X0, [X8]
	0x01E8BF94 LDR W8, [X0 + 0xE0]
	0x01E8BF98 CBNZ W8, 0x1E8BFA0
	0x01E8BF9C BL 0x1C16DFC
	0x01E8BFA0 FMOV W8, S8
	0x01E8BFA4 MOVZ W9, 0x44800000
	0x01E8BFA8 UBFM W8, W8, 0x1F, 0x1F
	0x01E8BFAC FMOV S0, 0.5
	0x01E8BFB0 FMOV S1, W9
	0x01E8BFB4 UCVTF S2, W8
	0x01E8BFB8 MOVZ W9, 0x7F800000
	0x01E8BFBC FMUL S1, S8, S1
	0x01E8BFC0 FSUB S0, S0, S2
	0x01E8BFC4 FMOV S2, W9
	0x01E8BFC8 FADD S0, S1, S0
	0x01E8BFCC FCVTZS W8, S0
	0x01E8BFD0 FCMP S0, S2
	0x01E8BFD4 MOVZ W9, 0x80000000
	0x01E8BFD8 CSEL W8, W9, W8, EQ
	0x01E8BFDC SBFM W9, W8, 0x1F, 0x1F
	0x01E8BFE0 EOR W8, W9, W8, 0x1
	0x01E8BFE4 STR W8, [X19 + 0x4]
	0x01E8BFE8 LDP X20, X19, [X31 + 0x10]
	0x01E8BFEC LDR X30, [X31 + 0x8]
	0x01E8BFF0 LDR V8, [X31], #0x20
	0x01E8BFF4 RET
	0x01E8BFF8 STR X30, [X31 - 0x20]!
	0x01E8BFFC STP X20, X19, [X31 + 0x10]
	0x01E8C000 ADRP X20, 0x254C000
	0x01E8C004 LDRB W8, [X20 + 0xE90]
	0x01E8C008 LDR W19, [X0 + 0x8]
	0x01E8C00C CBNZ W8, 0x1E8C024
	0x01E8C010 ADRP X0, 0x226E000
	0x01E8C014 LDR X0, [X0 + 0xC68]
	0x01E8C018 BL 0x1C16CF4
	0x01E8C01C MOVZ W8, 0x1
	0x01E8C020 STRB W8, [X20 + 0xE90]
	0x01E8C024 ADRP X8, 0x226E000
	0x01E8C028 LDR X8, [X8 + 0xC68]
	0x01E8C02C LDR X0, [X8]
	0x01E8C030 LDR W8, [X0 + 0xE0]
	0x01E8C034 CBNZ W8, 0x1E8C03C
	0x01E8C038 BL 0x1C16DFC
	0x01E8C03C AND W8, W19, 0x1
	0x01E8C040 SUB W8, W31, W8
	0x01E8C044 EOR W8, W8, W19, 0x1
	0x01E8C048 LDP X20, X19, [X31 + 0x10]
	0x01E8C04C MOVZ W9, 0x3A800000
	0x01E8C050 SCVTF S0, W8
	0x01E8C054 FMOV S1, W9
	0x01E8C058 FMUL S0, S0, S1
	0x01E8C05C LDR X30, [X31], #0x20
	0x01E8C060 RET
	0x01E8C064 STR D8, [X31 - 0x20]!
	0x01E8C068 STR X30, [X31 + 0x8]
	0x01E8C06C STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X19, 0x254E000
	010 Move W8, [X19+3727]
	011 Move V8, V2
	012 Move V9, V1
	013 Move V10, V0
	014 Compare W8, 0
	015 JumpIfNotEqual {21}
	016 Move X0, 0x2270000
	017 Move X0, [X0+3176]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+3727], W8
	021 Move X20, 0x2270000
	022 Move X20, [X20+3176]
	023 Move X0, [X20]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfEqual {28}
	027 Move W8, W31
	028 Call 0x1C17DFC
	029 Move W8, [X19+3727]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move W9, S10
	033 Move W10, 0x44800000
	034 Move W9, W9
	035 ShiftRight W9, 31
	036 And W9, W9, 0x7FFFFFFF
	037 Move S0, 0.5
	038 Move S1, W10
	039 NotImplemented "Instruction UCVTF not yet implemented."
	040 Move W11, 0x7F800000
	041 Multiply S1, S10, S1
	042 Subtract S0, S0, S2
	043 Move S3, W11
	044 Add S0, S1, S0
	045 NotImplemented "Instruction FCVTZS not yet implemented."
	046 NotImplemented "Instruction FCMP not yet implemented."
	047 Move W10, 0x80000000
	048 NotImplemented "Instruction CSEL not yet implemented."
	049 Compare W8, 0
	050 JumpIfEqual {56}
	051 Move X0, 0x2270000
	052 Move X0, [X0+3176]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X19+3727], W8
	056 Move X0, [X20]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfEqual {61}
	060 Move W8, W31
	061 Call 0x1C17DFC
	062 Move W8, [X19+3727]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 NotImplemented "Instruction CSET not yet implemented."
	065 Move W9, S9
	066 Move W10, 0x44800000
	067 Move W9, W9
	068 ShiftRight W9, 31
	069 And W9, W9, 0x7FFFFFFF
	070 Move S0, 0.5
	071 Move S1, W10
	072 NotImplemented "Instruction UCVTF not yet implemented."
	073 Move W11, 0x7F800000
	074 Multiply S1, S9, S1
	075 Subtract S0, S0, S2
	076 Move S3, W11
	077 Add S0, S1, S0
	078 NotImplemented "Instruction FCVTZS not yet implemented."
	079 NotImplemented "Instruction FCMP not yet implemented."
	080 Move W10, 0x80000000
	081 NotImplemented "Instruction CSEL not yet implemented."
	082 Compare W8, 0
	083 JumpIfEqual {89}
	084 Move X0, 0x2270000
	085 Move X0, [X0+3176]
	086 Call 0x1C17CF4
	087 Move W8, 1
	088 Move [X19+3727], W8
	089 Move X0, [X20]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 NotImplemented "Instruction SBFM not yet implemented."
	095 Move W10, S8
	096 Xor W0, W9, W21
	097 Move W9, 0x44800000
	098 Move W10, W10
	099 ShiftRight W10, 31
	100 And W10, W10, 0x7FFFFFFF
	101 Move S0, 0.5
	102 Move S1, W9
	103 NotImplemented "Instruction UCVTF not yet implemented."
	104 Move W9, 0x7F800000
	105 Multiply S1, S8, S1
	106 Subtract S0, S0, S2
	107 NotImplemented "Instruction SBFM not yet implemented."
	108 Move S2, W9
	109 Add S0, S1, S0
	110 Xor W8, W8, W22
	111 Move W10, 0x80000000
	112 NotImplemented "Instruction FCVTZS not yet implemented."
	113 NotImplemented "Instruction FCMP not yet implemented."
	114 Move X20, [X31+48]
	115 Move X19, [X31+56]
	116 Move X22, [X31+32]
	117 Move X21, [X31+40]
	118 Move X30, [X31+24]
	119 Move D9, [X31+8]
	120 Move D8, [X31+16]
	121 NotImplemented "Instruction CSEL not yet implemented."
	122 NotImplemented "Instruction SBFM not yet implemented."
	123 Xor W1, W10, W9
	124 NotImplemented "Instruction BFM not yet implemented."
	125 Move V10, [X31+64]
	126 Return X0

Method: UnityEngine.Vector3 op_Implicit(Fusion.Vector3Compressed q)

Disassembly:
	0x01E8C070 ADRP X20, 0x254C000
	0x01E8C074 LDRB W8, [X20 + 0xE8F]
	0x01E8C078 MOV V8.16B, V0.16B
	0x01E8C07C MOV X19, X0
	0x01E8C080 CBNZ W8, 0x1E8C098
	0x01E8C084 ADRP X0, 0x226E000
	0x01E8C088 LDR X0, [X0 + 0xC68]
	0x01E8C08C BL 0x1C16CF4
	0x01E8C090 MOVZ W8, 0x1
	0x01E8C094 STRB W8, [X20 + 0xE8F]
	0x01E8C098 ADRP X8, 0x226E000
	0x01E8C09C LDR X8, [X8 + 0xC68]
	0x01E8C0A0 LDR X0, [X8]
	0x01E8C0A4 LDR W8, [X0 + 0xE0]
	0x01E8C0A8 CBNZ W8, 0x1E8C0B0
	0x01E8C0AC BL 0x1C16DFC
	0x01E8C0B0 FMOV W8, S8
	0x01E8C0B4 MOVZ W9, 0x44800000
	0x01E8C0B8 UBFM W8, W8, 0x1F, 0x1F
	0x01E8C0BC FMOV S0, 0.5
	0x01E8C0C0 FMOV S1, W9
	0x01E8C0C4 UCVTF S2, W8
	0x01E8C0C8 MOVZ W9, 0x7F800000
	0x01E8C0CC FMUL S1, S8, S1
	0x01E8C0D0 FSUB S0, S0, S2
	0x01E8C0D4 FMOV S2, W9
	0x01E8C0D8 FADD S0, S1, S0
	0x01E8C0DC FCVTZS W8, S0
	0x01E8C0E0 FCMP S0, S2
	0x01E8C0E4 MOVZ W9, 0x80000000
	0x01E8C0E8 CSEL W8, W9, W8, EQ
	0x01E8C0EC SBFM W9, W8, 0x1F, 0x1F
	0x01E8C0F0 EOR W8, W9, W8, 0x1
	0x01E8C0F4 STR W8, [X19 + 0x8]
	0x01E8C0F8 LDP X20, X19, [X31 + 0x10]
	0x01E8C0FC LDR X30, [X31 + 0x8]
	0x01E8C100 LDR V8, [X31], #0x20
	0x01E8C104 RET
	0x01E8C108 STR X30, [X31 - 0x20]!
	0x01E8C10C STP X20, X19, [X31 + 0x10]
	0x01E8C110 ADRP X20, 0x254C000
	0x01E8C114 LDRB W8, [X20 + 0xE90]
	0x01E8C118 LDR W19, [X0 + 0xC]
	0x01E8C11C CBNZ W8, 0x1E8C134
	0x01E8C120 ADRP X0, 0x226E000
	0x01E8C124 LDR X0, [X0 + 0xC68]
	0x01E8C128 BL 0x1C16CF4
	0x01E8C12C MOVZ W8, 0x1
	0x01E8C130 STRB W8, [X20 + 0xE90]
	0x01E8C134 ADRP X8, 0x226E000
	0x01E8C138 LDR X8, [X8 + 0xC68]
	0x01E8C13C LDR X0, [X8]
	0x01E8C140 LDR W8, [X0 + 0xE0]
	0x01E8C144 CBNZ W8, 0x1E8C14C
	0x01E8C148 BL 0x1C16DFC
	0x01E8C14C AND W8, W19, 0x1
	0x01E8C150 SUB W8, W31, W8
	0x01E8C154 EOR W8, W8, W19, 0x1
	0x01E8C158 LDP X20, X19, [X31 + 0x10]
	0x01E8C15C MOVZ W9, 0x3A800000
	0x01E8C160 SCVTF S0, W8
	0x01E8C164 FMOV S1, W9
	0x01E8C168 FMUL S0, S0, S1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x254D000
	008 Move W8, [X21+3728]
	009 Move X19, X1
	010 Move X20, X0
	011 Compare W8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, 0x226F000
	014 Move X0, [X0+3176]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3728], W8
	018 Move X22, 0x226F000
	019 Move X22, [X22+3176]
	020 Move X0, [X22]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {33}
	024 Call 0x1C17DFC
	025 Move W8, [X21+3728]
	026 Compare W8, 0
	027 JumpIfNotEqual {33}
	028 Move X0, 0x226F000
	029 Move X0, [X0+3176]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+3728], W8
	033 Move X0, [X22]
	034 Move X23, X20
	035 ShiftRight X23, 32
	036 And X23, X23, 0x7FFFFFFF
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {49}
	040 Call 0x1C17DFC
	041 Move W8, [X21+3728]
	042 Compare W8, 0
	043 JumpIfNotEqual {49}
	044 Move X0, 0x226F000
	045 Move X0, [X0+3176]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X21+3728], W8
	049 Move X0, [X22]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move W8, 0x3A800000
	055 And W9, W20, 1
	056 And W10, W19, 1
	057 Move S2, W8
	058 And W8, W23, 1
	059 Subtract W9, W31, W9
	060 Subtract W10, W31, W10
	061 Subtract W8, W31, W8
	062 Xor W9, W9, W20
	063 Xor W10, W10, W19
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Xor W8, W8, W23
	069 NotImplemented "Instruction SCVTF not yet implemented."
	070 NotImplemented "Instruction SCVTF not yet implemented."
	071 NotImplemented "Instruction SCVTF not yet implemented."
	072 Multiply S1, S0, S2
	073 Multiply S0, S3, S2
	074 Multiply S2, S4, S2
	075 Move X30, [X31+48]
	076 Move X23, [X31+56]
	077 Return X0

Method: Fusion.Vector3Compressed op_Implicit(UnityEngine.Vector2 v)

Disassembly:
	0x01E8C16C LDR X30, [X31], #0x20
	0x01E8C170 RET
	0x01E8C174 STR D8, [X31 - 0x20]!
	0x01E8C178 STR X30, [X31 + 0x8]
	0x01E8C17C STP X20, X19, [X31 + 0x10]
	0x01E8C180 ADRP X20, 0x254C000
	0x01E8C184 LDRB W8, [X20 + 0xE8F]
	0x01E8C188 MOV V8.16B, V0.16B
	0x01E8C18C MOV X19, X0
	0x01E8C190 CBNZ W8, 0x1E8C1A8
	0x01E8C194 ADRP X0, 0x226E000
	0x01E8C198 LDR X0, [X0 + 0xC68]
	0x01E8C19C BL 0x1C16CF4
	0x01E8C1A0 MOVZ W8, 0x1
	0x01E8C1A4 STRB W8, [X20 + 0xE8F]
	0x01E8C1A8 ADRP X8, 0x226E000
	0x01E8C1AC LDR X8, [X8 + 0xC68]
	0x01E8C1B0 LDR X0, [X8]
	0x01E8C1B4 LDR W8, [X0 + 0xE0]
	0x01E8C1B8 CBNZ W8, 0x1E8C1C0
	0x01E8C1BC BL 0x1C16DFC
	0x01E8C1C0 FMOV W8, S8
	0x01E8C1C4 MOVZ W9, 0x44800000
	0x01E8C1C8 UBFM W8, W8, 0x1F, 0x1F
	0x01E8C1CC FMOV S0, 0.5
	0x01E8C1D0 FMOV S1, W9
	0x01E8C1D4 UCVTF S2, W8
	0x01E8C1D8 MOVZ W9, 0x7F800000
	0x01E8C1DC FMUL S1, S8, S1
	0x01E8C1E0 FSUB S0, S0, S2
	0x01E8C1E4 FMOV S2, W9
	0x01E8C1E8 FADD S0, S1, S0
	0x01E8C1EC FCVTZS W8, S0
	0x01E8C1F0 FCMP S0, S2
	0x01E8C1F4 MOVZ W9, 0x80000000
	0x01E8C1F8 CSEL W8, W9, W8, EQ
	0x01E8C1FC SBFM W9, W8, 0x1F, 0x1F
	0x01E8C200 EOR W8, W9, W8, 0x1
	0x01E8C204 STR W8, [X19 + 0xC]
	0x01E8C208 LDP X20, X19, [X31 + 0x10]
	0x01E8C20C LDR X30, [X31 + 0x8]
	0x01E8C210 LDR V8, [X31], #0x20
	0x01E8C214 RET
	0x01E8C218 STP D11, D10, [X31 - 0x50]!
	0x01E8C21C STP D9, D8, [X31 + 0x10]
	0x01E8C220 STP X30, X23, [X31 + 0x20]
	0x01E8C224 STP X22, X21, [X31 + 0x30]
	0x01E8C228 STP X20, X19, [X31 + 0x40]
	0x01E8C22C ADRP X19, 0x254C000
	0x01E8C230 LDRB W8, [X19 + 0xE8F]
	0x01E8C234 MOV V8.16B, V3.16B
	0x01E8C238 MOV V9.16B, V2.16B
	0x01E8C23C MOV V10.16B, V1.16B
	0x01E8C240 MOV V11.16B, V0.16B
	0x01E8C244 CBNZ W8, 0x1E8C25C
	0x01E8C248 ADRP X0, 0x226E000
	0x01E8C24C LDR X0, [X0 + 0xC68]
	0x01E8C250 BL 0x1C16CF4
	0x01E8C254 MOVZ W8, 0x1
	0x01E8C258 STRB W8, [X19 + 0xE8F]
	0x01E8C25C ADRP X20, 0x226E000
	0x01E8C260 LDR X20, [X20 + 0xC68]
	0x01E8C264 LDR X0, [X20]
	0x01E8C268 LDR W8, [X0 + 0xE0]
	0x01E8C26C CBZ W8, 0x1E8C278
	0x01E8C270 MOV W8, W31
	0x01E8C274 B 0x1E8C288
	0x01E8C278 BL 0x1C16DFC
	0x01E8C27C LDRB W8, [X19 + 0xE8F]
	0x01E8C280 CMP W8, 0x0
	0x01E8C284 CSET W8, EQ
	0x01E8C288 FMOV W9, S11
	0x01E8C28C MOVZ W10, 0x44800000
	0x01E8C290 UBFM W9, W9, 0x1F, 0x1F

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x254D000
	008 Move W8, [X19+3727]
	009 Move V8, V1
	010 Move V9, V0
	011 Compare W8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, 0x226F000
	014 Move X0, [X0+3176]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X19+3727], W8
	018 Move X20, 0x226F000
	019 Move X20, [X20+3176]
	020 Move X0, [X20]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfEqual {25}
	024 Move W8, W31
	025 Call 0x1C17DFC
	026 Move W8, [X19+3727]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CSET not yet implemented."
	029 Move W9, S9
	030 Move W10, 0x44800000
	031 Move W9, W9
	032 ShiftRight W9, 31
	033 And W9, W9, 0x7FFFFFFF
	034 Move S0, 0.5
	035 Move S1, W10
	036 NotImplemented "Instruction UCVTF not yet implemented."
	037 Move W11, 0x7F800000
	038 Multiply S1, S9, S1
	039 Subtract S0, S0, S2
	040 Move S3, W11
	041 Add S0, S1, S0
	042 NotImplemented "Instruction FCVTZS not yet implemented."
	043 NotImplemented "Instruction FCMP not yet implemented."
	044 Move W10, 0x80000000
	045 NotImplemented "Instruction CSEL not yet implemented."
	046 Compare W8, 0
	047 JumpIfEqual {53}
	048 Move X0, 0x226F000
	049 Move X0, [X0+3176]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X19+3727], W8
	053 Move X0, [X20]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 NotImplemented "Instruction SBFM not yet implemented."
	059 Move W9, S8
	060 Xor W0, W8, W21
	061 Move W8, 0x44800000
	062 Move W9, W9
	063 ShiftRight W9, 31
	064 And W9, W9, 0x7FFFFFFF
	065 Move S0, 0.5
	066 Move S1, W8
	067 NotImplemented "Instruction UCVTF not yet implemented."
	068 Move W8, 0x7F800000
	069 Multiply S1, S8, S1
	070 Subtract S0, S0, S2
	071 Move S2, W8
	072 Add S0, S1, S0
	073 NotImplemented "Instruction FCVTZS not yet implemented."
	074 NotImplemented "Instruction FCMP not yet implemented."
	075 Move W9, 0x80000000
	076 NotImplemented "Instruction CSEL not yet implemented."
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X30, [X31+16]
	080 Move X21, [X31+24]
	081 NotImplemented "Instruction SBFM not yet implemented."
	082 Xor W8, W9, W8
	083 NotImplemented "Instruction BFM not yet implemented."
	084 Move X1, X31
	085 Move D9, [X31+48]
	086 Move D8, [X31+56]
	087 Return X0

Method: UnityEngine.Vector2 op_Implicit(Fusion.Vector3Compressed q)

Disassembly:
	0x01E8C294 FMOV S0, 0.5
	0x01E8C298 FMOV S1, W10
	0x01E8C29C UCVTF S2, W9
	0x01E8C2A0 MOVZ W11, 0x7F800000
	0x01E8C2A4 FMUL S1, S11, S1
	0x01E8C2A8 FSUB S0, S0, S2
	0x01E8C2AC FMOV S3, W11
	0x01E8C2B0 FADD S0, S1, S0
	0x01E8C2B4 FCVTZS W9, S0
	0x01E8C2B8 FCMP S0, S3
	0x01E8C2BC MOVZ W10, 0x80000000
	0x01E8C2C0 CSEL W21, W10, W9, EQ
	0x01E8C2C4 CBZ W8, 0x1E8C2DC
	0x01E8C2C8 ADRP X0, 0x226E000
	0x01E8C2CC LDR X0, [X0 + 0xC68]
	0x01E8C2D0 BL 0x1C16CF4
	0x01E8C2D4 MOVZ W8, 0x1
	0x01E8C2D8 STRB W8, [X19 + 0xE8F]
	0x01E8C2DC LDR X0, [X20]
	0x01E8C2E0 LDR W8, [X0 + 0xE0]
	0x01E8C2E4 CBZ W8, 0x1E8C2F0
	0x01E8C2E8 MOV W8, W31
	0x01E8C2EC B 0x1E8C300
	0x01E8C2F0 BL 0x1C16DFC
	0x01E8C2F4 LDRB W8, [X19 + 0xE8F]
	0x01E8C2F8 CMP W8, 0x0
	0x01E8C2FC CSET W8, EQ
	0x01E8C300 FMOV W9, S10
	0x01E8C304 MOVZ W10, 0x44800000
	0x01E8C308 UBFM W9, W9, 0x1F, 0x1F
	0x01E8C30C FMOV S0, 0.5
	0x01E8C310 FMOV S1, W10
	0x01E8C314 UCVTF S2, W9
	0x01E8C318 MOVZ W11, 0x7F800000
	0x01E8C31C FMUL S1, S10, S1
	0x01E8C320 FSUB S0, S0, S2
	0x01E8C324 FMOV S3, W11
	0x01E8C328 FADD S0, S1, S0
	0x01E8C32C FCVTZS W9, S0
	0x01E8C330 FCMP S0, S3
	0x01E8C334 MOVZ W10, 0x80000000
	0x01E8C338 CSEL W22, W10, W9, EQ
	0x01E8C33C CBZ W8, 0x1E8C354
	0x01E8C340 ADRP X0, 0x226E000
	0x01E8C344 LDR X0, [X0 + 0xC68]
	0x01E8C348 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x254D000
	007 Move W8, [X21+3728]
	008 Move X19, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x226F000
	012 Move X0, [X0+3176]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X21+3728], W8
	016 Move X22, 0x226F000
	017 Move X22, [X22+3176]
	018 Move X20, X19
	019 ShiftRight X20, 32
	020 And X20, X20, 0x7FFFFFFF
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {34}
	025 Call 0x1C17DFC
	026 Move W8, [X21+3728]
	027 Compare W8, 0
	028 JumpIfNotEqual {34}
	029 Move X0, 0x226F000
	030 Move X0, [X0+3176]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+3728], W8
	034 Move X0, [X22]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 And W8, W19, 1
	040 Move W9, 0x3A800000
	041 And W10, W20, 1
	042 Subtract W8, W31, W8
	043 Move S1, W9
	044 Subtract W9, W31, W10
	045 Xor W8, W8, W19
	046 Xor W9, W9, W20
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 NotImplemented "Instruction SCVTF not yet implemented."
	052 NotImplemented "Instruction SCVTF not yet implemented."
	053 Multiply S0, S0, S1
	054 Multiply S1, S2, S1
	055 Move X30, [X31+48]
	056 Return X0

Method: System.Boolean Equals(Fusion.Vector3Compressed other)

Disassembly:
	0x01E8C34C MOVZ W8, 0x1
	0x01E8C350 STRB W8, [X19 + 0xE8F]
	0x01E8C354 LDR X0, [X20]
	0x01E8C358 LDR W8, [X0 + 0xE0]
	0x01E8C35C CBZ W8, 0x1E8C368
	0x01E8C360 MOV W8, W31
	0x01E8C364 B 0x1E8C378
	0x01E8C368 BL 0x1C16DFC
	0x01E8C36C LDRB W8, [X19 + 0xE8F]
	0x01E8C370 CMP W8, 0x0
	0x01E8C374 CSET W8, EQ
	0x01E8C378 FMOV W9, S9
	0x01E8C37C MOVZ W10, 0x44800000

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, [X0+4]
	004 Move X9, X1
	005 ShiftRight X9, 32
	006 And X9, X9, 0x7FFFFFFF
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W8, [X0+8]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 Return X0
	012 Move W0, W31
	013 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x01E8C380 UBFM W9, W9, 0x1F, 0x1F
	0x01E8C384 FMOV S0, 0.5
	0x01E8C388 FMOV S1, W10
	0x01E8C38C UCVTF S2, W9
	0x01E8C390 MOVZ W11, 0x7F800000
	0x01E8C394 FMUL S1, S9, S1
	0x01E8C398 FSUB S0, S0, S2
	0x01E8C39C FMOV S3, W11
	0x01E8C3A0 FADD S0, S1, S0
	0x01E8C3A4 FCVTZS W9, S0
	0x01E8C3A8 FCMP S0, S3
	0x01E8C3AC MOVZ W10, 0x80000000
	0x01E8C3B0 CSEL W23, W10, W9, EQ
	0x01E8C3B4 CBZ W8, 0x1E8C3CC
	0x01E8C3B8 ADRP X0, 0x226E000
	0x01E8C3BC LDR X0, [X0 + 0xC68]
	0x01E8C3C0 BL 0x1C16CF4
	0x01E8C3C4 MOVZ W8, 0x1
	0x01E8C3C8 STRB W8, [X19 + 0xE8F]
	0x01E8C3CC LDR X0, [X20]
	0x01E8C3D0 LDR W8, [X0 + 0xE0]
	0x01E8C3D4 CBNZ W8, 0x1E8C3DC
	0x01E8C3D8 BL 0x1C16DFC
	0x01E8C3DC SBFM W8, W23, 0x1F, 0x1F
	0x01E8C3E0 EOR W1, W8, W23, 0x1
	0x01E8C3E4 SBFM W8, W21, 0x1F, 0x1F
	0x01E8C3E8 FMOV W10, S8
	0x01E8C3EC EOR W0, W8, W21, 0x1
	0x01E8C3F0 MOVZ W8, 0x44800000
	0x01E8C3F4 UBFM W10, W10, 0x1F, 0x1F
	0x01E8C3F8 FMOV S0, 0.5
	0x01E8C3FC FMOV S1, W8
	0x01E8C400 UCVTF S2, W10
	0x01E8C404 MOVZ W8, 0x7F800000
	0x01E8C408 FMUL S1, S8, S1
	0x01E8C40C FSUB S0, S0, S2
	0x01E8C410 FMOV S2, W8
	0x01E8C414 FADD S0, S1, S0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x254E000
	006 Move W8, [X21+568]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2272000
	014 Move X0, [X0+4024]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+568], W8
	018 Compare X20, 0
	019 JumpIfEqual {39}
	020 Move X8, 0x2272000
	021 Move X8, [X8+4024]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X20
	026 Call 0x1C17E08
	027 Move X8, [X0]
	028 Move W9, [X19]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W9, [X19+4]
	031 Move X8, X8
	032 ShiftRight X8, 32
	033 And X8, X8, 0x7FFFFFFF
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W8, [X0+8]
	036 Move W9, [X19+8]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSET not yet implemented."
	039 Move W0, W31
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x01E8C418 SBFM W9, W22, 0x1F, 0x1F
	0x01E8C41C MOVZ W10, 0x80000000
	0x01E8C420 FCVTZS W8, S0
	0x01E8C424 FCMP S0, S2
	0x01E8C428 EOR W9, W9, W22, 0x1
	0x01E8C42C CSEL W8, W10, W8, EQ
	0x01E8C430 LDP X20, X19, [X31 + 0x40]
	0x01E8C434 LDP X22, X21, [X31 + 0x30]

ISIL:
	001 Move W8, [X0]
	002 Move W9, [X0+4]
	003 Move W10, [X0+8]
	004 Move W11, 397
	005 Multiply W8, W8, W11
	006 Xor W8, W8, W9
	007 Multiply W8, W8, W11
	008 Xor W0, W8, W10
	009 Return X0

Method: System.Boolean op_Equality(Fusion.Vector3Compressed left, Fusion.Vector3Compressed right)

Disassembly:
	0x01E8C438 LDP X30, X23, [X31 + 0x20]
	0x01E8C43C LDP D9, D8, [X31 + 0x10]
	0x01E8C440 SBFM W10, W8, 0x1F, 0x1F
	0x01E8C444 EOR W8, W10, W8, 0x1
	0x01E8C448 BFM X0, X9, 0x20, 0x1F
	0x01E8C44C BFM X1, X8, 0x20, 0x1F
	0x01E8C450 LDP D11, D10, [X31], #0x50
	0x01E8C454 RET
	0x01E8C458 STR X30, [X31 - 0x30]!
	0x01E8C45C STP X22, X21, [X31 + 0x10]
	0x01E8C460 STP X20, X19, [X31 + 0x20]
	0x01E8C464 ADRP X21, 0x254C000

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move X8, X0
	003 ShiftRight X8, 32
	004 And X8, X8, 0x7FFFFFFF
	005 Move X9, X2
	006 ShiftRight X9, 32
	007 And X9, X9, 0x7FFFFFFF
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction CMP not yet implemented."
	011 NotImplemented "Instruction CSET not yet implemented."
	012 And W0, W9, W8
	013 Return X0
	014 Move W0, W31
	015 Return X0

Method: System.Boolean op_Inequality(Fusion.Vector3Compressed left, Fusion.Vector3Compressed right)

Disassembly:
	0x01E8C468 LDRB W8, [X21 + 0xE90]
	0x01E8C46C MOV X19, X1
	0x01E8C470 MOV X20, X0
	0x01E8C474 CBNZ W8, 0x1E8C48C
	0x01E8C478 ADRP X0, 0x226E000
	0x01E8C47C LDR X0, [X0 + 0xC68]
	0x01E8C480 BL 0x1C16CF4
	0x01E8C484 MOVZ W8, 0x1
	0x01E8C488 STRB W8, [X21 + 0xE90]
	0x01E8C48C ADRP X22, 0x226E000
	0x01E8C490 LDR X22, [X22 + 0xC68]

ISIL:
	001 Move X8, X0
	002 ShiftRight X8, 32
	003 And X8, X8, 0x7FFFFFFF
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move X9, X2
	006 ShiftRight X9, 32
	007 And X9, X9, 0x7FFFFFFF
	008 NotImplemented "Instruction CSET not yet implemented."
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CSET not yet implemented."
	013 Or W8, W9, W8
	014 Or W0, W10, W8
	015 Return X0

