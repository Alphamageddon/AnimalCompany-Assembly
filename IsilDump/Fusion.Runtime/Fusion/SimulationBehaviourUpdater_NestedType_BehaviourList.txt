Type: Fusion.SimulationBehaviourUpdater/BehaviourList

Method: System.Void AddAfter(Fusion.SimulationBehaviour item, Fusion.SimulationBehaviour after)

Disassembly:
	0x01E7D478 MOV X0, X20
	0x01E7D47C MOV X1, X31
	0x01E7D480 BL 0x3C3F49C
	0x01E7D484 LDR X8, [X22]
	0x01E7D488 MOV X20, X0
	0x01E7D48C LDR W9, [X8 + 0xE0]
	0x01E7D490 CBNZ W9, 0x1E7D49C
	0x01E7D494 MOV X0, X8
	0x01E7D498 BL 0x1C16DFC
	0x01E7D49C MOV X0, X20
	0x01E7D4A0 MOV X1, X31
	0x01E7D4A4 BL 0x3C38948
	0x01E7D4A8 MOV W21, W0
	0x01E7D4AC TBZ X0, 0x0, 0x1E7D4D8
	0x01E7D4B0 LDRB W8, [X19 + 0x91]
	0x01E7D4B4 CBZ W8, 0x1E7D4D8
	0x01E7D4B8 LDRB W8, [X19 + 0x93]
	0x01E7D4BC CBZ W8, 0x1E7D4D8
	0x01E7D4C0 MOV X0, X19
	0x01E7D4C4 MOV X1, X20
	0x01E7D4C8 BL 0x1E7D5C8
	0x01E7D4CC LDRB W8, [X19 + 0x82]
	0x01E7D4D0 CBNZ W8, 0x1E7D4FC
	0x01E7D4D4 B 0x1E7D5B0
	0x01E7D4D8 LDR X8, [X19]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 Add X8, X8, 48
	004 Move X9, [X8]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Compare X2, 0
	007 JumpIfEqual {30}
	008 Compare X1, 0
	009 JumpIfEqual {30}
	010 Move X8, [X2+40]
	011 Move [X1+32], X2
	012 Move [X1+40], X8
	013 Move X9, [X2+40]
	014 Compare X9, 0
	015 JumpIfEqual {30}
	016 Add X8, X2, 40
	017 Add X9, X9, 32
	018 Compare X1, 0
	019 JumpIfEqual {30}
	020 Add X10, X9, 40
	021 Add X11, X0, 40
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move [X1+32], X9
	024 Move [X1+40], X31
	025 NotImplemented "Instruction CSEL not yet implemented."
	026 Move [X9], X1
	027 Move [X8], X1
	028 Move X30, [X31+16]
	029 Return 
	030 Call 0x1C17F20

Method: System.Void AddFirst(Fusion.SimulationBehaviour item)

Disassembly:
	0x01E7D514 BL 0x21A4990
	0x01E7D518 MOV W20, W0
	0x01E7D51C MOV X0, X19
	0x01E7D520 BL 0x1E7D23C
	0x01E7D524 MOV X19, X0
	0x01E7D528 TBZ X20, 0x0, 0x1E7D5A8
	0x01E7D52C LDR X20, [X31 + 0x8]
	0x01E7D530 CBZ X20, 0x1E7D5C4
	0x01E7D534 ADRP X23, 0x255B000
	0x01E7D538 LDRB W8, [X23 + 0xA22]
	0x01E7D53C LDR X21, [X20 + 0x38]
	0x01E7D540 CBNZ W8, 0x1E7D558
	0x01E7D544 ADRP X0, 0x2276000
	0x01E7D548 LDR X0, [X0 + 0x598]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 Add X8, X8, 40
	004 Move X9, [X8]
	005 Compare X1, 0
	006 JumpIfEqual {17}
	007 Move [X1+32], X31
	008 Move [X1+40], X9
	009 Compare X9, 0
	010 JumpIfEqual {12}
	011 Move [X9+32], X1
	012 Add X8, X0, 48
	013 Move [X0+40], X1
	014 Move [X8], X1
	015 Move X30, [X31+16]
	016 Return 
	017 Call 0x1C17F20

Method: System.Void AddLast(Fusion.SimulationBehaviour item)

Disassembly:
	0x01E7D4DC MOV X0, X19
	0x01E7D4E0 MOV X1, X31
	0x01E7D4E4 LDR X9, [X8 + 0x248]
	0x01E7D4E8 LDR X2, [X8 + 0x250]
	0x01E7D4EC BLR X9
	0x01E7D4F0 LDRB W8, [X19 + 0x82]
	0x01E7D4F4 CBZ W8, 0x1E7D5B0
	0x01E7D4F8 TBZ X21, 0x0, 0x1E7D598
	0x01E7D4FC CBZ X20, 0x1E7D5C4
	0x01E7D500 ADRP X8, 0x2280000
	0x01E7D504 LDR X8, [X8 + 0xB40]
	0x01E7D508 ADD X1, X31, 0x8
	0x01E7D50C MOV X0, X20
	0x01E7D510 LDR X2, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {15}
	004 Move [X1+40], X31
	005 Move X8, [X0+48]
	006 Add X9, X0, 40
	007 Add X10, X8, 40
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move [X1+32], X8
	010 NotImplemented "Instruction CSEL not yet implemented."
	011 Move [X8], X1
	012 Move [X0+48], X1
	013 Move X30, [X31+16]
	014 Return 
	015 Call 0x1C17F20

Method: System.Void RemoveAllPending()

Disassembly:
	0x01E7AB40 ADRP X0, 0x2283000
	0x01E7AB44 LDR X0, [X0 + 0x998]
	0x01E7AB48 BL 0x1C16CF4
	0x01E7AB4C ADRP X0, 0x2283000
	0x01E7AB50 LDR X0, [X0 + 0x9A0]
	0x01E7AB54 BL 0x1C16CF4
	0x01E7AB58 ADRP X0, 0x2283000
	0x01E7AB5C LDR X0, [X0 + 0x9A8]
	0x01E7AB60 BL 0x1C16CF4
	0x01E7AB64 ADRP X0, 0x2283000
	0x01E7AB68 LDR X0, [X0 + 0x9B0]
	0x01E7AB6C BL 0x1C16CF4
	0x01E7AB70 ADRP X0, 0x2279000
	0x01E7AB74 LDR X0, [X0 + 0xE00]
	0x01E7AB78 BL 0x1C16CF4
	0x01E7AB7C ADRP X0, 0x2283000
	0x01E7AB80 LDR X0, [X0 + 0x9B8]
	0x01E7AB84 BL 0x1C16CF4
	0x01E7AB88 ADRP X0, 0x2283000
	0x01E7AB8C LDR X0, [X0 + 0x9C0]
	0x01E7AB90 BL 0x1C16CF4
	0x01E7AB94 ADRP X0, 0x2279000
	0x01E7AB98 LDR X0, [X0 + 0xE18]
	0x01E7AB9C BL 0x1C16CF4
	0x01E7ABA0 ADRP X0, 0x2283000
	0x01E7ABA4 LDR X0, [X0 + 0x9C8]
	0x01E7ABA8 BL 0x1C16CF4
	0x01E7ABAC ADRP X0, 0x2283000
	0x01E7ABB0 LDR X0, [X0 + 0x9D0]
	0x01E7ABB4 BL 0x1C16CF4
	0x01E7ABB8 ADRP X0, 0x2283000
	0x01E7ABBC LDR X0, [X0 + 0x9D8]
	0x01E7ABC0 BL 0x1C16CF4
	0x01E7ABC4 ADRP X0, 0x2283000
	0x01E7ABC8 LDR X0, [X0 + 0x9E0]
	0x01E7ABCC BL 0x1C16CF4
	0x01E7ABD0 ADRP X0, 0x2283000
	0x01E7ABD4 LDR X0, [X0 + 0x8F8]
	0x01E7ABD8 BL 0x1C16CF4
	0x01E7ABDC ADRP X0, 0x2283000
	0x01E7ABE0 LDR X0, [X0 + 0x9E8]
	0x01E7ABE4 BL 0x1C16CF4
	0x01E7ABE8 ADRP X0, 0x2283000
	0x01E7ABEC LDR X0, [X0 + 0x9F0]
	0x01E7ABF0 BL 0x1C16CF4
	0x01E7ABF4 ADRP X0, 0x2283000
	0x01E7ABF8 LDR X0, [X0 + 0x8F0]
	0x01E7ABFC BL 0x1C16CF4
	0x01E7AC00 ADRP X0, 0x2281000
	0x01E7AC04 LDR X0, [X0 + 0xC60]
	0x01E7AC08 BL 0x1C16CF4
	0x01E7AC0C ADRP X0, 0x2283000
	0x01E7AC10 LDR X0, [X0 + 0x9F8]
	0x01E7AC14 BL 0x1C16CF4
	0x01E7AC18 ADRP X0, 0x2283000
	0x01E7AC1C LDR X0, [X0 + 0xA00]
	0x01E7AC20 BL 0x1C16CF4
	0x01E7AC24 ADRP X0, 0x2283000
	0x01E7AC28 LDR X0, [X0 + 0xA08]
	0x01E7AC2C BL 0x1C16CF4
	0x01E7AC30 ADRP X0, 0x2283000
	0x01E7AC34 LDR X0, [X0 + 0xA10]
	0x01E7AC38 BL 0x1C16CF4
	0x01E7AC3C MOVZ W8, 0x1
	0x01E7AC40 STRB W8, [X21 + 0x1A5]
	0x01E7AC44 ADRP X24, 0x2283000
	0x01E7AC48 LDR X24, [X24 + 0xA08]
	0x01E7AC4C STP X31, X31, [X31 + 0x20]
	0x01E7AC50 STR X31, [X31 + 0x30]
	0x01E7AC54 CBZ X20, 0x1E7ACFC
	0x01E7AC58 LDR X0, [X24]
	0x01E7AC5C LDR W8, [X0 + 0xE0]
	0x01E7AC60 CBNZ W8, 0x1E7AC6C
	0x01E7AC64 BL 0x1C16DFC
	0x01E7AC68 LDR X0, [X24]
	0x01E7AC6C LDR X8, [X0 + 0xB8]
	0x01E7AC70 ADRP X25, 0x2283000
	0x01E7AC74 ADRP X23, 0x2283000
	0x01E7AC78 LDR X21, [X8 + 0x8]
	0x01E7AC7C LDR X25, [X25 + 0x988]
	0x01E7AC80 LDR X23, [X23 + 0xA10]
	0x01E7AC84 CBNZ X21, 0x1E7ACD8
	0x01E7AC88 LDR W8, [X0 + 0xE0]
	0x01E7AC8C CBNZ W8, 0x1E7AC98
	0x01E7AC90 BL 0x1C16DFC
	0x01E7AC94 LDR X0, [X24]
	0x01E7AC98 ADRP X9, 0x2283000
	0x01E7AC9C LDR X8, [X0 + 0xB8]
	0x01E7ACA0 LDR X9, [X9 + 0x9B0]
	0x01E7ACA4 LDR X22, [X8]
	0x01E7ACA8 LDR X0, [X9]
	0x01E7ACAC BL 0x1C16F10
	0x01E7ACB0 ADRP X8, 0x2283000
	0x01E7ACB4 LDR X8, [X8 + 0x9F8]
	0x01E7ACB8 MOV X1, X22
	0x01E7ACBC MOV X3, X31
	0x01E7ACC0 MOV X21, X0
	0x01E7ACC4 LDR X2, [X8]
	0x01E7ACC8 BL 0x2D2F428

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0x2560000
	007 Move W8, [X20+435]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0x2284000
	014 Move X0, [X0+2208]
	015 Call 0x1C17CF4
	016 Move X0, 0x2284000
	017 Move X0, [X0+2216]
	018 Call 0x1C17CF4
	019 Move X0, 0x2284000
	020 Move X0, [X0+2224]
	021 Call 0x1C17CF4
	022 Move X0, 0x2284000
	023 Move X0, [X0+2232]
	024 Call 0x1C17CF4
	025 Move X0, 0x2284000
	026 Move X0, [X0+2240]
	027 Call 0x1C17CF4
	028 Move X0, 0x2284000
	029 Move X0, [X0+2248]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+435], W8
	033 Move [X31+8], X31
	034 Move [X31+16], X31
	035 Move [X31+24], X31
	036 Move X0, [X19+64]
	037 Compare X0, 0
	038 JumpIfEqual {77}
	039 Move W8, [X0+24]
	040 Compare W8, 0
	041 JumpIfEqual {77}
	042 Move X8, 0x2284000
	043 Move X8, [X8+2240]
	044 Move X1, [X8]
	045 Add X8, X31, 8
	046 Call List`1<Object>.GetEnumerator, X0
	047 Move X20, 0x2284000
	048 Move X20, [X20+2216]
	049 Move X1, [X20]
	050 Add X0, X31, 8
	051 Call Enumerator<Object>.MoveNext, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {59}
	056 Move X1, [X31+24]
	057 Move X0, X19
	058 Call BehaviourList.Remove, X0, X1
	059 Move X8, 0x2284000
	060 Move X8, [X8+2208]
	061 Add X0, X31, 8
	062 Move X1, [X8]
	063 Call Enumerator<Object>.Dispose, X0
	064 Move X8, [X19+64]
	065 Compare X8, 0
	066 JumpIfEqual {83}
	067 Move W2, [X8+24]
	068 Move W9, [X8+28]
	069 Add W9, W9, 1
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move [X8+24], W31
	072 Move [X8+28], W9
	073 Move X0, [X8+16]
	074 Move W1, W31
	075 Move X3, X31
	076 Call Array.Clear, X0, X1, X2
	077 Move X20, [X31+48]
	078 Move X19, [X31+56]
	079 Move X30, [X31+32]
	080 Move X21, [X31+40]
	081 Add X31, X31, 64
	082 Return 
	083 Call 0x1C17F20
	084 Move X21, X0
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X0, X21
	087 Call 0x3EB2AD0
	088 Move X20, [X0]
	089 Call 0x3EB2AE0
	090 Move X8, 0x2284000
	091 Move X8, [X8+2208]
	092 Add X0, X31, 8
	093 Move X1, [X8]
	094 Call Enumerator<Object>.Dispose, X0
	095 Compare X20, 0
	096 JumpIfEqual {64}
	097 Move X0, X20
	098 Call 0x1C17F18
	099 Move X20, X31
	100 Move X21, X0
	101 Move X8, 0x2284000
	102 Move X8, [X8+2208]
	103 Move X1, [X8]
	104 Add X0, X31, 8
	105 Call Enumerator<Object>.Dispose, X0
	106 Compare X20, 0
	107 JumpIfNotEqual {110}
	108 Move X0, X21
	109 Call 0x1D2D690
	110 Move X0, X20
	111 Call 0x1C17F18
	112 Call 0x1991590

Method: System.Void PendingRemove(Fusion.SimulationBehaviour item)

Disassembly:
	0x01E7D7F4 FMUL S0, S0, S4
	0x01E7D7F8 LDR V4, [X8 + 0x1B4]
	0x01E7D7FC FMUL S1, S1, S5
	0x01E7D800 FMUL S2, S2, S6
	0x01E7D804 FADD S0, S0, S1
	0x01E7D808 FADD S0, S2, S0
	0x01E7D80C FMUL S1, S3, S7
	0x01E7D810 FADD S0, S1, S0
	0x01E7D814 FCMP S0, S4
	0x01E7D818 B.LE 0x1E7D890
	0x01E7D81C LDRB W8, [X19 + 0x80]
	0x01E7D820 CBZ W8, 0x1E7D848
	0x01E7D824 LDRB W8, [X19 + 0x82]
	0x01E7D828 CBZ W8, 0x1E7D848
	0x01E7D82C LDR X20, [X19 + 0x88]
	0x01E7D830 MOV X0, X19
	0x01E7D834 BL 0x1E7D23C
	0x01E7D838 LDR X2, [X0]
	0x01E7D83C MOV X0, X19
	0x01E7D840 MOV X1, X20
	0x01E7D844 BL 0x1E7D288
	0x01E7D848 LDR X20, [X19 + 0x88]
	0x01E7D84C MOV X0, X19
	0x01E7D850 BL 0x1E7D23C
	0x01E7D854 CBZ X20, 0x1E7D8A4
	0x01E7D858 LDP S1, S2, [X0 + 0xC]
	0x01E7D85C LDR V0, [X0 + 0x8]
	0x01E7D860 MOV X0, X20
	0x01E7D864 MOV X1, X31
	0x01E7D868 BL 0x3C3EC04
	0x01E7D86C LDR X20, [X19 + 0x88]
	0x01E7D870 MOV X0, X19
	0x01E7D874 BL 0x1E7D23C
	0x01E7D878 CBZ X20, 0x1E7D8A4
	0x01E7D87C LDP S2, S3, [X0 + 0x1C]
	0x01E7D880 LDP S0, S1, [X0 + 0x14]
	0x01E7D884 MOV X0, X20
	0x01E7D888 MOV X1, X31
	0x01E7D88C BL 0x3C3F8B8
	0x01E7D890 STRB W31, [X19 + 0x95]
	0x01E7D894 STRB W31, [X19 + 0x90]
	0x01E7D898 LDP X20, X19, [X31 + 0x10]
	0x01E7D89C LDR X30, [X31], #0x20
	0x01E7D8A0 RET
	0x01E7D8A4 BL 0x1C16F20
	0x01E7D8A8 STP X30, X19, [X31 - 0x10]!
	0x01E7D8AC MOV X19, X0
	0x01E7D8B0 BL 0x1E7D3AC
	0x01E7D8B4 MOVZ W8, 0x1
	0x01E7D8B8 STRB W8, [X19 + 0x90]
	0x01E7D8BC LDP X30, X19, [X31], #0x10
	0x01E7D8C0 RET
	0x01E7D8C4 B 0x1E7D3AC
	0x01E7D8C8 SUB X31, X31, 0x30
	0x01E7D8CC STR X30, [X31 + 0x20]
	0x01E7D8D0 MOV X8, X2
	0x01E7D8D4 MOV X2, X1
	0x01E7D8D8 LDR W9, [X3 + 0x10]
	0x01E7D8DC LDR V0, [X3]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x255D000
	006 Move W8, [X20+436]
	007 Move X19, X1
	008 Move X21, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x2281000
	014 Move X0, [X0+2608]
	015 Call 0x1C17CF4
	016 Move X0, 0x2281000
	017 Move X0, [X0+2720]
	018 Call 0x1C17CF4
	019 Move X0, 0x2281000
	020 Move X0, [X0+2728]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+436], W8
	024 Move X20, [X21+64]
	025 Compare X20, 0
	026 JumpIfNotEqual {39}
	027 Move X8, 0x2281000
	028 Move X8, [X8+2728]
	029 Move X0, [X8]
	030 Call 0x1C17F10
	031 Move X8, 0x2281000
	032 Move X8, [X8+2720]
	033 Move X20, X0
	034 Move X1, [X8]
	035 Call List`1<Object>..ctor, X0
	036 Move [X21+64], X20
	037 Compare X20, 0
	038 JumpIfEqual {71}
	039 Move X9, 0x2281000
	040 Move X9, [X9+2608]
	041 Move W10, [X20+28]
	042 Move X8, [X20+16]
	043 Move X9, [X9]
	044 Add W10, W10, 1
	045 Move [X20+28], W10
	046 Compare X8, 0
	047 JumpIfEqual {71}
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Move W11, [X8+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add W9, W10, 1
	052 Add X8, X8, X10
	053 Move [X20+24], W9
	054 Move [X8+32], X19
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Return 
	060 Move X8, [X9+32]
	061 Move X0, X20
	062 Move X1, X19
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X8, [X8+192]
	066 Move X2, [X8+112]
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Call List`1<Object>.AddWithResize, X0, X1
	070 Return 
	071 Call 0x1C17F20

Method: System.Void Remove(Fusion.SimulationBehaviour item)

Disassembly:
	0x01E7D8E0 LDR X1, [X0 + 0x88]
	0x01E7D8E4 ADD X4, X31, 0x0
	0x01E7D8E8 MOV X3, X8
	0x01E7D8EC STR W9, [X31 + 0x10]
	0x01E7D8F0 STR V0, [X31]
	0x01E7D8F4 BL 0x1E7D904
	0x01E7D8F8 LDR X30, [X31 + 0x20]
	0x01E7D8FC ADD X31, X31, 0x30
	0x01E7D900 RET
	0x01E7D904 SUB X31, X31, 0x40
	0x01E7D908 STP X30, X23, [X31 + 0x10]
	0x01E7D90C STP X22, X21, [X31 + 0x20]
	0x01E7D910 STP X20, X19, [X31 + 0x30]
	0x01E7D914 ADRP X23, 0x255C000
	0x01E7D918 LDRB W8, [X23 + 0x1C0]
	0x01E7D91C MOV X21, X4
	0x01E7D920 MOV X22, X2
	0x01E7D924 MOV X20, X1
	0x01E7D928 MOV X19, X0
	0x01E7D92C STP X2, X3, [X31]
	0x01E7D930 TBNZ X8, 0x0, 0x1E7D96C
	0x01E7D934 ADRP X0, 0x2279000
	0x01E7D938 LDR X0, [X0 + 0xDD8]
	0x01E7D93C BL 0x1C16CF4
	0x01E7D940 ADRP X0, 0x2279000
	0x01E7D944 LDR X0, [X0 + 0xDE0]
	0x01E7D948 BL 0x1C16CF4
	0x01E7D94C ADRP X0, 0x2280000
	0x01E7D950 LDR X0, [X0 + 0xB58]
	0x01E7D954 BL 0x1C16CF4
	0x01E7D958 ADRP X0, 0x2280000
	0x01E7D95C LDR X0, [X0 + 0xB60]
	0x01E7D960 BL 0x1C16CF4
	0x01E7D964 MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Add X8, X0, 40
	003 Move X10, X8
	004 Move X9, [X10]
	005 Compare X9, 0
	006 JumpIfEqual {9}
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Add X10, X9, 40
	009 Compare X9, 0
	010 JumpIfEqual {36}
	011 Compare X1, 0
	012 JumpIfEqual {38}
	013 Move X9, X1
	014 Add X9, X9, 32
	015 Move X11, [X9]
	016 Compare X11, 0
	017 JumpIfEqual {20}
	018 Move X10, [X1+40]
	019 Move [X11+40], X10
	020 Move X10, [X1+40]
	021 Compare X10, 0
	022 JumpIfEqual {24}
	023 Move [X10+32], X11
	024 Move X11, [X0+48]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X11, [X9]
	027 Move [X0+48], X11
	028 Move X11, [X8]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move [X8], X10
	031 Move [X9], X31
	032 Move [X9+8], X31
	033 Move W8, [X1+48]
	034 And W8, W8, 0xFFFFFFFB
	035 Move [X1+48], W8
	036 Move X30, [X31+16]
	037 Return 
	038 Call 0x1C17F20

Method: System.Boolean IsInList(Fusion.SimulationBehaviour item)

Disassembly:
	0x01E7D454 BL 0x3C3FBAC
	0x01E7D458 MOV X0, X31
	0x01E7D45C BL 0x1E2E540
	0x01E7D460 STUR X0, [X21 + 0x24]
	0x01E7D464 STR W1, [X21 + 0x2C]
	0x01E7D468 LDRB W8, [X19 + 0x80]
	0x01E7D46C CBZ W8, 0x1E7D5B0
	0x01E7D470 ADRP X22, 0x2276000
	0x01E7D474 LDR X22, [X22 + 0x598]

ISIL:
	001 Add X9, X0, 40
	002 Move X8, [X9]
	003 Compare X8, 0
	004 JumpIfEqual {7}
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Add X9, X8, 40
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Return X0

Method: System.Void Fusion.ILogDumpable.Dump(System.Text.StringBuilder builder)

Disassembly:
	0x01E7DE80 LDRB W8, [X20 + 0xA20]
	0x01E7DE84 LDR X25, [X31 + 0x70]
	0x01E7DE88 CBNZ W8, 0x1E7DEA0
	0x01E7DE8C ADRP X0, 0x2279000
	0x01E7DE90 LDR X0, [X0 + 0x398]
	0x01E7DE94 BL 0x1C16CF4
	0x01E7DE98 MOVZ W8, 0x1
	0x01E7DE9C STRB W8, [X20 + 0xA20]
	0x01E7DEA0 ADRP X8, 0x2279000
	0x01E7DEA4 LDR X8, [X8 + 0x398]
	0x01E7DEA8 LDR X0, [X8]
	0x01E7DEAC LDR W8, [X0 + 0xE0]
	0x01E7DEB0 CBNZ W8, 0x1E7DEB8
	0x01E7DEB4 BL 0x1C16DFC
	0x01E7DEB8 CMP W26, W25
	0x01E7DEBC B.NE 0x1E7DF50
	0x01E7DEC0 UBFM X8, X25, 0x20, 0x3F
	0x01E7DEC4 UBFM X9, X26, 0x20, 0x3F
	0x01E7DEC8 CMP W9, W8
	0x01E7DECC B.NE 0x1E7DF50
	0x01E7DED0 MOV X0, X24
	0x01E7DED4 MOV X1, X19
	0x01E7DED8 MOV X2, X26
	0x01E7DEDC BL 0x1E7D288
	0x01E7DEE0 TBZ X22, 0x0, 0x1E7E018
	0x01E7DEE4 MOV X0, X27
	0x01E7DEE8 MOV X1, X28
	0x01E7DEEC MOV X2, X23
	0x01E7DEF0 MOV X3, X21
	0x01E7DEF4 MOV X4, X31
	0x01E7DEF8 BL 0x1E8B438
	0x01E7DEFC TBZ X0, 0x0, 0x1E7DF90
	0x01E7DF00 CBZ X19, 0x1E7E11C
	0x01E7DF04 MOV X0, X19
	0x01E7DF08 MOV X1, X31
	0x01E7DF0C BL 0x3C3FBAC
	0x01E7DF10 MOV X0, X31
	0x01E7DF14 BL 0x1E2E540
	0x01E7DF18 AND X1, X1, 0x0
	0x01E7DF1C MOV X2, X23
	0x01E7DF20 MOV X3, X21
	0x01E7DF24 MOV X4, X31
	0x01E7DF28 BL 0x1E8B468
	0x01E7DF2C TBZ X0, 0x0, 0x1E7E018
	0x01E7DF30 MOV X0, X23
	0x01E7DF34 MOV X1, X21
	0x01E7DF38 MOV X2, X31
	0x01E7DF3C BL 0x1E2E6F8
	0x01E7DF40 MOV X0, X19
	0x01E7DF44 MOV X1, X31
	0x01E7DF48 BL 0x3C3FC4C
	0x01E7DF4C B 0x1E7E018
	0x01E7DF50 LDR V0, [X31 + 0x4C]
	0x01E7DF54 FMOV S1, 0.5
	0x01E7DF58 MOV X0, X24
	0x01E7DF5C MOV X1, X19
	0x01E7DF60 FCMP S0, S1
	0x01E7DF64 CSEL X2, X26, X25, MI
	0x01E7DF68 BL 0x1E7D288
	0x01E7DF6C LDR V0, [X31 + 0x4C]
	0x01E7DF70 FMOV S2, 0.5
	0x01E7DF74 FMOV S1, 1
	0x01E7DF78 FCMP S0, S2
	0x01E7DF7C FMOV S0, W31
	0x01E7DF80 FCSEL S0, S0, S1, MI
	0x01E7DF84 STR S0, [X31 + 0x4C]
	0x01E7DF88 TBNZ X22, 0x0, 0x1E7DEE4
	0x01E7DF8C B 0x1E7E018
	0x01E7DF90 MOV X0, X23
	0x01E7DF94 MOV X1, X21
	0x01E7DF98 MOV X2, X31
	0x01E7DF9C STP S8, S10, [X31 + 0x18]
	0x01E7DFA0 STR S9, [X31 + 0x20]
	0x01E7DFA4 BL 0x1E2E6F8
	0x01E7DFA8 MOV X0, X27
	0x01E7DFAC MOV X1, X28
	0x01E7DFB0 MOV X2, X31
	0x01E7DFB4 MOV V8.16B, V0.16B
	0x01E7DFB8 MOV V9.16B, V1.16B
	0x01E7DFBC MOV V10.16B, V2.16B
	0x01E7DFC0 BL 0x1E2E6F8
	0x01E7DFC4 LDR V3, [X31 + 0x4C]
	0x01E7DFC8 FMOV S4, 1
	0x01E7DFCC FMIN S4, S3, S4
	0x01E7DFD0 FCMP S3, 0x0
	0x01E7DFD4 FMOV S3, W31
	0x01E7DFD8 FCSEL S3, S4, S3, PL
	0x01E7DFDC CBZ X19, 0x1E7E11C
	0x01E7DFE0 FSUB S2, S2, S10
	0x01E7DFE4 FSUB S1, S1, S9
	0x01E7DFE8 FSUB S0, S0, S8
	0x01E7DFEC FMUL S2, S2, S3
	0x01E7DFF0 FMUL S1, S1, S3

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x255D000
	009 Move W8, [X21+437]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x2281000
	017 Move X0, [X0+2824]
	018 Call 0x1C17CF4
	019 Move X0, 0x2281000
	020 Move X0, [X0+2832]
	021 Call 0x1C17CF4
	022 Move X0, 0x2281000
	023 Move X0, [X0+2840]
	024 Call 0x1C17CF4
	025 Move X0, 0x2281000
	026 Move X0, [X0+2848]
	027 Call 0x1C17CF4
	028 Move X0, 0x2277000
	029 Move X0, [X0+2120]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+437], W8
	033 Compare X19, 0
	034 JumpIfEqual {107}
	035 Move X8, 0x2281000
	036 Move X8, [X8+2824]
	037 Move X0, X19
	038 Move X2, X31
	039 Move X1, [X8]
	040 Call StringBuilder.Append, X0, X1
	041 Move X8, [X20+16]
	042 Compare X8, 0
	043 JumpIfEqual {107}
	044 Move X9, [X8]
	045 Move X21, X0
	046 Move X0, X8
	047 Move X10, [X9+424]
	048 Move X1, [X9+432]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Compare X21, 0
	051 JumpIfEqual {107}
	052 Move X1, X0
	053 Move X0, X21
	054 Move X2, X31
	055 Call StringBuilder.Append, X0, X1
	056 Compare X0, 0
	057 JumpIfEqual {107}
	058 Move X8, 0x2281000
	059 Move X8, [X8+2832]
	060 Move X21, 0x2277000
	061 Move X2, X31
	062 Move X1, [X8]
	063 Move X21, [X21+2120]
	064 Call StringBuilder.Append, X0, X1
	065 Move X8, [X20+40]
	066 Compare X8, 0
	067 JumpIfEqual {95}
	068 Move X22, 0x2281000
	069 Move X23, 0x2281000
	070 Move X22, [X22+2848]
	071 Move X23, [X23+2840]
	072 Move X24, X8
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X1, [X23]
	075 Move X0, X19
	076 Move X2, X31
	077 Call StringBuilder.Append, X0, X1
	078 Move W8, [X24+48]
	079 And W31, W8, 28
	080 Move X1, [X22]
	081 Move X0, X19
	082 Move X2, X31
	083 Call StringBuilder.Append, X0, X1
	084 Add X0, X31, 8
	085 Move [X31+8], X24
	086 Call NameDeferred.ToString, X0
	087 Move X1, X0
	088 Move X0, X19
	089 Move X2, X31
	090 Call StringBuilder.Append, X0, X1
	091 Move X24, [X24+40]
	092 Compare X24, 0
	093 JumpIfEqual {95}
	094 Move X8, [X20+40]
	095 Move X1, [X21]
	096 Move X0, X19
	097 Move X20, [X31+48]
	098 Move X19, [X31+56]
	099 Move X22, [X31+32]
	100 Move X21, [X31+40]
	101 Move X24, [X31+16]
	102 Move X23, [X31+24]
	103 Move X2, X31
	104 Move X30, [X31+64]
	105 Call StringBuilder.Append, X0, X1
	106 Return 
	107 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01E7DC5C MOV X19, X0
	0x01E7DC60 LDR X0, [X0 + 0x38]
	0x01E7DC64 CBZ X0, 0x1E7DD14
	0x01E7DC68 MOV X1, X31
	0x01E7DC6C BL 0x1E9E520
	0x01E7DC70 CMP W0, 0x1
	0x01E7DC74 B.EQ 0x1E7DD08
	0x01E7DC78 LDR X0, [X19 + 0x38]
	0x01E7DC7C CBZ X0, 0x1E7DD14
	0x01E7DC80 MOV X1, X31
	0x01E7DC84 BL 0x1E9E4EC
	0x01E7DC88 CMP W0, 0x2
	0x01E7DC8C B.NE 0x1E7DCB4
	0x01E7DC90 LDRB W8, [X19 + 0x94]
	0x01E7DC94 CBZ W8, 0x1E7DCB4
	0x01E7DC98 LDR X0, [X19 + 0x40]
	0x01E7DC9C CBZ X0, 0x1E7DCB4
	0x01E7DCA0 LDRB W8, [X0 + 0x60]
	0x01E7DCA4 TBNZ X8, 0x1, 0x1E7DCB4
	0x01E7DCA8 MOV X1, X31
	0x01E7DCAC BL 0x1E93668
	0x01E7DCB0 TBNZ X0, 0x0, 0x1E7DD08
	0x01E7DCB4 LDR X1, [X19 + 0x88]
	0x01E7DCB8 LDRB W2, [X19 + 0x81]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x255D000
	006 Move X21, 0x2281000
	007 Move W8, [X20+438]
	008 Move X21, [X21+2784]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2281000
	015 Move X0, [X0+2784]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+438], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call BehaviourStatisticsManager..ctor, X0
	024 Move [X19+72], X20
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Object..ctor, X0
	032 Return 

