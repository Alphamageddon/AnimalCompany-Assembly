Type: Fusion.TickTimer

Method: Fusion.TickTimer get_None()

Disassembly:
	0x01E92B08 SUB X31, X31, 0x60
	0x01E92B0C STP X30, X23, [X31 + 0x30]

ISIL:
	001 Move X0, X31
	002 Return X0

Method: System.Boolean get_IsRunning()

Disassembly:
	0x01E92B10 STP X22, X21, [X31 + 0x40]
	0x01E92B14 STP X20, X19, [X31 + 0x50]
	0x01E92B18 ADRP X23, 0x2547000
	0x01E92B1C LDRB W8, [X23 + 0x28F]

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Nullable`1<System.Int32> get_TargetTick()

Disassembly:
	0x01E92B20 MOV X19, X3
	0x01E92B24 MOV X20, X2
	0x01E92B28 MOV W21, W1
	0x01E92B2C MOV X22, X0
	0x01E92B30 TBNZ X8, 0x0, 0x1E92B48
	0x01E92B34 ADRP X0, 0x226C000
	0x01E92B38 LDR X0, [X0 + 0x2B0]
	0x01E92B3C BL 0x1C16CF4
	0x01E92B40 MOVZ W8, 0x1
	0x01E92B44 STRB W8, [X23 + 0x28F]
	0x01E92B48 LDR X8, [X22]
	0x01E92B4C CBZ X8, 0x1E92B5C
	0x01E92B50 LDR W23, [X8 + 0x18]
	0x01E92B54 TBZ X21, 0x1F, 0x1E92B64
	0x01E92B58 B 0x1E92C0C
	0x01E92B5C MOV W23, W31
	0x01E92B60 TBNZ X21, 0x1F, 0x1E92C0C
	0x01E92B64 CMP W23, W21
	0x01E92B68 B.LT 0x1E92C0C
	0x01E92B6C ADRP X8, 0x226C000
	0x01E92B70 LDR X8, [X8 + 0x2B0]
	0x01E92B74 ADD W1, W23, 0x1
	0x01E92B78 MOV X0, X22
	0x01E92B7C STP X31, X31, [X31 + 0x20]
	0x01E92B80 LDR X2, [X8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2548000
	007 Move X20, 0x2263000
	008 Move W8, [X21+636]
	009 Move X20, [X20+1136]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2263000
	016 Move X0, [X0+1136]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+636], W8
	020 Move W8, [X19]
	021 Move X2, [X20]
	022 Add X0, X31, 8
	023 Move [X31+8], X31
	024 NotImplemented "Instruction BIC not yet implemented."
	025 Call Nullable`1<Int32>..ctor, X0, X1
	026 Move X0, [X31+8]
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X30, [X31+16]
	030 Move X21, [X31+24]
	031 Add X31, X31, 48
	032 Return X0

Method: System.Boolean Expired(Fusion.NetworkRunner runner)

Disassembly:
	0x01E92B84 BL 0x2143084
	0x01E92B88 CMP W23, W21
	0x01E92B8C B.LE 0x1E92BB8
	0x01E92B90 LDR X0, [X22]
	0x01E92B94 CBZ X0, 0x1E92C08
	0x01E92B98 LDR W8, [X0 + 0x18]
	0x01E92B9C ORN W9, W31, W21, 0x0
	0x01E92BA0 ADD W3, W21, 0x1
	0x01E92BA4 MOV W1, W21
	0x01E92BA8 ADD W4, W8, W9
	0x01E92BAC MOV X2, X0
	0x01E92BB0 MOV X5, X31
	0x01E92BB4 BL 0x339FCE8
	0x01E92BB8 LDR X8, [X22]
	0x01E92BBC LDR V0, [X31 + 0x2]
	0x01E92BC0 STR V0, [X31 + 0x1]
	0x01E92BC4 CBZ X8, 0x1E92C08
	0x01E92BC8 LDR V0, [X31 + 0x1]
	0x01E92BCC STR V0, [X31]
	0x01E92BD0 LDR W9, [X8 + 0x18]
	0x01E92BD4 CMP W9, W21
	0x01E92BD8 B.LS 0x1E92C54
	0x01E92BDC MOVZ W9, 0x28
	0x01E92BE0 UMADDL X8, X21, X9, X8
	0x01E92BE4 STP X20, X31, [X8 + 0x20]
	0x01E92BE8 STR X19, [X8 + 0x30]
	0x01E92BEC LDR V0, [X31]
	0x01E92BF0 LDP X20, X19, [X31 + 0x50]
	0x01E92BF4 LDP X22, X21, [X31 + 0x40]
	0x01E92BF8 LDP X30, X23, [X31 + 0x30]
	0x01E92BFC STUR V0, [X8 + 0x38]
	0x01E92C00 ADD X31, X31, 0x60
	0x01E92C04 RET
	0x01E92C08 BL 0x1C16F20
	0x01E92C0C ADRP X0, 0x2269000
	0x01E92C10 LDR X0, [X0 + 0x760]
	0x01E92C14 BL 0x1C16D08
	0x01E92C18 BL 0x1C16F10
	0x01E92C1C MOV X19, X0
	0x01E92C20 ADRP X0, 0x226C000
	0x01E92C24 LDR X0, [X0 + 0x2B8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2547000
	006 Move W8, [X21+2594]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x2262000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X21+2594], W8
	016 Move X8, 0x2262000
	017 Move X8, [X8+1432]
	018 Move X0, [X8]
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move X0, X19
	024 Move X1, X31
	025 Call Object.op_Implicit, X0
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {47}
	030 Compare X19, 0
	031 JumpIfEqual {53}
	032 Move X0, X19
	033 Move X1, X31
	034 Call NetworkRunner.get_IsRunning, X0
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {47}
	039 Move W8, [X20]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X9, [X19+80]
	042 Compare X9, 0
	043 JumpIfEqual {53}
	044 Move W9, [X9+72]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction CSET not yet implemented."
	047 Move W0, W31
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return X0
	053 Call 0x1C17F20

Method: System.Boolean ExpiredOrNotRunning(Fusion.NetworkRunner runner)

Disassembly:
	0x01E92C28 BL 0x1C16D08
	0x01E92C2C MOV X1, X0
	0x01E92C30 MOV X0, X19
	0x01E92C34 MOV X2, X31
	0x01E92C38 BL 0x3316014
	0x01E92C3C ADRP X0, 0x226C000
	0x01E92C40 LDR X0, [X0 + 0x2C0]
	0x01E92C44 BL 0x1C16D08
	0x01E92C48 MOV X1, X0
	0x01E92C4C MOV X0, X19
	0x01E92C50 BL 0x1C16DEC
	0x01E92C54 BL 0x1C16F28
	0x01E92C58 STP X30, X25, [X31 - 0x40]!
	0x01E92C5C STP X24, X23, [X31 + 0x10]
	0x01E92C60 STP X22, X21, [X31 + 0x20]
	0x01E92C64 STP X20, X19, [X31 + 0x30]
	0x01E92C68 ADRP X21, 0x2547000
	0x01E92C6C LDRB W8, [X21 + 0x28E]
	0x01E92C70 MOV X20, X1
	0x01E92C74 MOV X19, X0
	0x01E92C78 TBNZ X8, 0x0, 0x1E92C9C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0]
	005 Compare W8, 0
	006 JumpIfEqual {25}
	007 Move X20, X1
	008 Compare X1, 0
	009 JumpIfEqual {30}
	010 Move X19, X0
	011 Move X0, X20
	012 Move X1, X31
	013 Call NetworkRunner.get_IsRunning, X0
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {25}
	018 Move X0, X19
	019 Move X1, X20
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Call TickTimer.Expired, X0, X1
	024 Return X0
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W0, 1
	028 Move X30, [X31+32]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Nullable`1<System.Int32> RemainingTicks(Fusion.NetworkRunner runner)

Disassembly:
	0x01E92C7C ADRP X0, 0x226C000
	0x01E92C80 LDR X0, [X0 + 0x2B0]
	0x01E92C84 BL 0x1C16CF4
	0x01E92C88 ADRP X0, 0x2261000
	0x01E92C8C LDR X0, [X0 + 0x6C0]
	0x01E92C90 BL 0x1C16CF4
	0x01E92C94 MOVZ W8, 0x1
	0x01E92C98 STRB W8, [X21 + 0x28E]
	0x01E92C9C LDR X8, [X19 + 0x8]!
	0x01E92CA0 CBZ X8, 0x1E92D2C
	0x01E92CA4 ADRP X24, 0x2261000
	0x01E92CA8 LDR X24, [X24 + 0x6C0]
	0x01E92CAC MOV X23, X31
	0x01E92CB0 MOVZ W25, 0x20
	0x01E92CB4 LDR W9, [X8 + 0x18]
	0x01E92CB8 CMP X23, W9, SXTW
	0x01E92CBC CSET W21, LT
	0x01E92CC0 B.GE 0x1E92DA8
	0x01E92CC4 CMP X23, X9
	0x01E92CC8 B.CS 0x1E92DC0
	0x01E92CCC LDR X0, [X24]
	0x01E92CD0 LDR X22, [X8, X25, LSL]
	0x01E92CD4 LDR W9, [X0 + 0xE0]
	0x01E92CD8 CBNZ W9, 0x1E92CE0
	0x01E92CDC BL 0x1C16DFC
	0x01E92CE0 MOV X0, X22
	0x01E92CE4 MOV X1, X20
	0x01E92CE8 MOV X2, X31
	0x01E92CEC BL 0x3395194
	0x01E92CF0 LDR X8, [X19]
	0x01E92CF4 TBNZ X0, 0x0, 0x1E92D34
	0x01E92CF8 CBZ X8, 0x1E92D88
	0x01E92CFC LDR W9, [X8 + 0x18]
	0x01E92D00 CMP X23, X9
	0x01E92D04 B.CS 0x1E92DC0
	0x01E92D08 ADD X0, X8, X25
	0x01E92D0C MOV X1, X20
	0x01E92D10 BL 0x1E92C58
	0x01E92D14 TBNZ X0, 0x0, 0x1E92DA8
	0x01E92D18 LDR X8, [X19]
	0x01E92D1C ADD X23, X23, 0x1
	0x01E92D20 ADD X25, X25, 0x28
	0x01E92D24 CBNZ X8, 0x1E92CB4
	0x01E92D28 B 0x1E92D88
	0x01E92D2C MOV W21, W31
	0x01E92D30 B 0x1E92DA8
	0x01E92D34 CBZ X8, 0x1E92D88
	0x01E92D38 ADD X9, X23, 0x1
	0x01E92D3C MOVZ W10, 0x28
	0x01E92D40 SMADDL X11, X9, X10, X31
	0x01E92D44 ADD X11, X11, 0x20
	0x01E92D48 LDR X13, [X8 + 0x18]
	0x01E92D4C SUB W12, W9, 0x1
	0x01E92D50 CMP W9, W13
	0x01E92D54 B.GE 0x1E92D8C
	0x01E92D58 B.CS 0x1E92DC0
	0x01E92D5C ADD X13, X8, X11
	0x01E92D60 LDR X14, [X13 + 0x20]
	0x01E92D64 LDP V1, V0, [X13]
	0x01E92D68 NOP
	0x01E92D6C SMADDL X8, X12, X10, X8
	0x01E92D70 ADD W9, W9, 0x1
	0x01E92D74 STR X14, [X8 + 0x40]
	0x01E92D78 STP V1, V0, [X8 + 0x20]
	0x01E92D7C LDR X8, [X19]
	0x01E92D80 ADD X11, X11, 0x28
	0x01E92D84 CBNZ X8, 0x1E92D48
	0x01E92D88 BL 0x1C16F20
	0x01E92D8C ADRP X8, 0x226C000
	0x01E92D90 LDR X8, [X8 + 0x2B0]
	0x01E92D94 SUB W1, W13, 0x1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2548000
	007 Move W8, [X21+637]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2262000
	015 Move X0, [X0+1448]
	016 Call 0x1C17CF4
	017 Move X0, 0x2263000
	018 Move X0, [X0+1136]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+637], W8
	022 Move X21, 0x2548000
	023 Move W8, [X21+415]
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0x2262000
	027 Move X0, [X0+1432]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+415], W8
	031 Move X8, 0x2262000
	032 Move X8, [X8+1432]
	033 Move X0, [X8]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X19
	039 Move X1, X31
	040 Call Object.op_Implicit, X0
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {79}
	045 Compare X19, 0
	046 JumpIfEqual {87}
	047 Move X0, X19
	048 Move X1, X31
	049 Call NetworkRunner.get_IsRunning, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {79}
	054 Move W20, [X20]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X8, [X19+80]
	057 Compare X8, 0
	058 JumpIfEqual {87}
	059 Move X9, 0x2262000
	060 Move X9, [X9+1448]
	061 Move W19, [X8+72]
	062 Move X0, [X9]
	063 Move W9, [X0+224]
	064 Compare W9, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Subtract W1, W20, W19
	068 Move W0, W31
	069 Move X2, X31
	070 Call Math.Max, X0, X1
	071 Move X8, 0x2263000
	072 Move X8, [X8+1136]
	073 Move W1, W0
	074 Add X0, X31, 8
	075 Move [X31+8], X31
	076 Move X2, [X8]
	077 Call Nullable`1<Int32>..ctor, X0, X1
	078 Move X0, [X31+8]
	079 Move X0, X31
	080 Move [X31+8], X31
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+16]
	084 Move X21, [X31+24]
	085 Add X31, X31, 48
	086 Return X0
	087 Call 0x1C17F20

Method: System.Nullable`1<System.Single> RemainingTime(Fusion.NetworkRunner runner)

Disassembly:
	0x01E92D98 MOV X0, X19
	0x01E92D9C LDR X2, [X8]
	0x01E92DA0 BL 0x2143084
	0x01E92DA4 MOVZ W21, 0x1
	0x01E92DA8 MOV W0, W21
	0x01E92DAC LDP X20, X19, [X31 + 0x30]
	0x01E92DB0 LDP X22, X21, [X31 + 0x20]
	0x01E92DB4 LDP X24, X23, [X31 + 0x10]
	0x01E92DB8 LDP X30, X25, [X31], #0x40
	0x01E92DBC RET
	0x01E92DC0 BL 0x1C16F28
	0x01E92DC4 MOV X1, X31
	0x01E92DC8 B 0x33BDD8C
	0x01E92DCC STR X30, [X31 - 0x20]!
	0x01E92DD0 STP X20, X19, [X31 + 0x10]
	0x01E92DD4 ADRP X20, 0x2547000
	0x01E92DD8 ADRP X19, 0x2264000
	0x01E92DDC LDRB W8, [X20 + 0x290]
	0x01E92DE0 LDR X19, [X19 + 0x398]
	0x01E92DE4 TBNZ X8, 0x0, 0x1E92DFC
	0x01E92DE8 ADRP X0, 0x2264000
	0x01E92DEC LDR X0, [X0 + 0x398]
	0x01E92DF0 BL 0x1C16CF4
	0x01E92DF4 MOVZ W8, 0x1
	0x01E92DF8 STRB W8, [X20 + 0x290]
	0x01E92DFC LDR X0, [X19]
	0x01E92E00 LDR W8, [X0 + 0xE0]
	0x01E92E04 CBNZ W8, 0x1E92E10
	0x01E92E08 BL 0x1C16DFC
	0x01E92E0C LDR X0, [X19]
	0x01E92E10 LDR X8, [X0 + 0xB8]
	0x01E92E14 LDP X20, X19, [X31 + 0x10]
	0x01E92E18 LDR X0, [X8]
	0x01E92E1C LDR X30, [X31], #0x20
	0x01E92E20 RET
	0x01E92E24 LDR W8, [X0]
	0x01E92E28 CMP W8, 0x0
	0x01E92E2C CSET W0, NE
	0x01E92E30 RET
	0x01E92E34 LDR W8, [X0]
	0x01E92E38 SUB W8, W8, 0x1
	0x01E92E3C CMP W8, 0x3FF
	0x01E92E40 CSET W0, CC
	0x01E92E44 RET
	0x01E92E48 MOVZ W0, 0x1
	0x01E92E4C RET
	0x01E92E50 MOVZ W0, 0x3
	0x01E92E54 RET
	0x01E92E58 MOVZ W0, 0x4
	0x01E92E5C RET
	0x01E92E60 STR W1, [X0]
	0x01E92E64 RET

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2548000
	007 Move W8, [X21+638]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x2266000
	015 Move X0, [X0+312]
	016 Call 0x1C17CF4
	017 Move X0, 0x2265000
	018 Move X0, [X0+3832]
	019 Call 0x1C17CF4
	020 Move X0, 0x2265000
	021 Move X0, [X0+3840]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+638], W8
	025 Move X0, X20
	026 Move X1, X19
	027 Call TickTimer.RemainingTicks, X0, X1
	028 And W31, W0, 255
	029 Move [X31], X0
	030 Move X8, 0x2265000
	031 Move X8, [X8+3840]
	032 Add X0, X31, 0
	033 Move X1, [X8]
	034 Call Nullable`1<Int32>.get_Value, X0
	035 Compare X19, 0
	036 JumpIfEqual {58}
	037 Move X21, 0x2266000
	038 Move X21, [X21+312]
	039 Move W20, W0
	040 Move X0, X19
	041 Move X1, X31
	042 Call NetworkRunner.get_DeltaTime, X0
	043 Move X1, [X21]
	044 NotImplemented "Instruction SCVTF not yet implemented."
	045 Multiply S0, S0, S1
	046 Add X0, X31, 8
	047 Move [X31+8], X31
	048 Call Nullable`1<Single>..ctor, X0, V0
	049 Move X0, [X31+8]
	050 Move X0, X31
	051 Move [X31+8], X31
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X30, [X31+16]
	055 Move X21, [X31+24]
	056 Add X31, X31, 48
	057 Return X0
	058 Call 0x1C17F20

Method: Fusion.TickTimer CreateFromSeconds(Fusion.NetworkRunner runner, System.Single delayInSeconds)

Disassembly:
	0x01E92E68 LDR W8, [X0]
	0x01E92E6C CMP W8, W1
	0x01E92E70 CSET W0, EQ
	0x01E92E74 RET
	0x01E92E78 LDR W8, [X0]
	0x01E92E7C SUB W0, W8, W1
	0x01E92E80 RET
	0x01E92E84 STP X30, X21, [X31 - 0x20]!
	0x01E92E88 STP X20, X19, [X31 + 0x10]
	0x01E92E8C ADRP X21, 0x2547000
	0x01E92E90 LDRB W8, [X21 + 0x291]
	0x01E92E94 MOV X20, X1
	0x01E92E98 MOV X19, X0
	0x01E92E9C TBNZ X8, 0x0, 0x1E92EB4
	0x01E92EA0 ADRP X0, 0x2264000
	0x01E92EA4 LDR X0, [X0 + 0x398]
	0x01E92EA8 BL 0x1C16CF4
	0x01E92EAC MOVZ W8, 0x1
	0x01E92EB0 STRB W8, [X21 + 0x291]
	0x01E92EB4 CBZ X20, 0x1E92ED0
	0x01E92EB8 ADRP X8, 0x2264000
	0x01E92EBC LDR X8, [X8 + 0x398]
	0x01E92EC0 LDR X9, [X20]
	0x01E92EC4 LDR X8, [X8]
	0x01E92EC8 CMP X9, X8
	0x01E92ECC B.EQ 0x1E92ED8
	0x01E92ED0 MOV W0, W31
	0x01E92ED4 B 0x1E92EF0
	0x01E92ED8 MOV X0, X20
	0x01E92EDC BL 0x1C16E08
	0x01E92EE0 LDR W8, [X0]
	0x01E92EE4 LDR W9, [X19]
	0x01E92EE8 CMP W9, W8
	0x01E92EEC CSET W0, EQ
	0x01E92EF0 LDP X20, X19, [X31 + 0x10]
	0x01E92EF4 LDP X30, X21, [X31], #0x20
	0x01E92EF8 RET
	0x01E92EFC STP X30, X21, [X31 - 0x20]!
	0x01E92F00 STP X20, X19, [X31 + 0x10]
	0x01E92F04 ADRP X21, 0x2547000
	0x01E92F08 LDRB W8, [X21 + 0x292]
	0x01E92F0C MOV X20, X1
	0x01E92F10 MOV X19, X0
	0x01E92F14 TBNZ X8, 0x0, 0x1E92F2C
	0x01E92F18 ADRP X0, 0x2264000
	0x01E92F1C LDR X0, [X0 + 0x398]
	0x01E92F20 BL 0x1C16CF4
	0x01E92F24 MOVZ W8, 0x1
	0x01E92F28 STRB W8, [X21 + 0x292]
	0x01E92F2C CBZ X20, 0x1E92F48
	0x01E92F30 ADRP X21, 0x2264000
	0x01E92F34 LDR X21, [X21 + 0x398]
	0x01E92F38 LDR X9, [X20]
	0x01E92F3C LDR X8, [X21]
	0x01E92F40 CMP X9, X8
	0x01E92F44 B.EQ 0x1E92F50
	0x01E92F48 MOV W0, W31
	0x01E92F4C B 0x1E92F78
	0x01E92F50 MOV X0, X20
	0x01E92F54 BL 0x1C16E08
	0x01E92F58 MOV X8, X0
	0x01E92F5C LDR X0, [X21]
	0x01E92F60 LDR W20, [X8]
	0x01E92F64 LDR W9, [X0 + 0xE0]
	0x01E92F68 CBNZ W9, 0x1E92F70
	0x01E92F6C BL 0x1C16DFC
	0x01E92F70 LDR W8, [X19]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2548000
	007 Move W8, [X20+639]
	008 Move V8, V0
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2262000
	015 Move X0, [X0+1448]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+639], W8
	019 Move X20, 0x2548000
	020 Move W8, [X20+415]
	021 Compare W8, 0
	022 JumpIfNotEqual {28}
	023 Move X0, 0x2262000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+415], W8
	028 Move X8, 0x2262000
	029 Move X8, [X8+1432]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X19
	036 Move X1, X31
	037 Call Object.op_Implicit, X0
	038 Move W8, W0
	039 Move X0, X31
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {79}
	044 Compare X19, 0
	045 JumpIfEqual {85}
	046 Move X0, X19
	047 Move X1, X31
	048 Call NetworkRunner.get_IsRunning, X0
	049 Move W8, W0
	050 Move X0, X31
	051 Move TEMP, X8
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {79}
	055 Move X8, [X19+80]
	056 Compare X8, 0
	057 JumpIfEqual {85}
	058 Move W20, [X8+72]
	059 Move X0, X19
	060 Move X1, X31
	061 Call NetworkRunner.get_DeltaTime, X0
	062 Move X8, 0x2262000
	063 Move X8, [X8+1448]
	064 Move V9, V0
	065 Move X0, [X8]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 NotImplemented "Instruction FDIV not yet implemented."
	071 Move W8, 0x7F800000
	072 NotImplemented "Instruction FRINTP not yet implemented."
	073 NotImplemented "Instruction FCVTPS not yet implemented."
	074 Move S0, W8
	075 NotImplemented "Instruction FCMP not yet implemented."
	076 Move W8, 0x80000000
	077 NotImplemented "Instruction CSEL not yet implemented."
	078 Add W0, W8, W20
	079 Move X20, [X31+32]
	080 Move X19, [X31+40]
	081 Move X30, [X31+16]
	082 Move D9, [X31+48]
	083 Move D8, [X31+56]
	084 Return X0
	085 Call 0x1C17F20

Method: Fusion.TickTimer CreateFromTicks(Fusion.NetworkRunner runner, System.Int32 ticks)

Disassembly:
	0x01E92F74 SUB W0, W8, W20
	0x01E92F78 LDP X20, X19, [X31 + 0x10]
	0x01E92F7C LDP X30, X21, [X31], #0x20
	0x01E92F80 RET
	0x01E92F84 CMP W0, W1
	0x01E92F88 CSET W0, EQ
	0x01E92F8C RET
	0x01E92F90 CMP W0, W1
	0x01E92F94 CSET W0, NE
	0x01E92F98 RET
	0x01E92F9C CMP W0, 0x0
	0x01E92FA0 CSET W0, NE
	0x01E92FA4 RET
	0x01E92FA8 MOVZ W2, 0x8
	0x01E92FAC MOV X3, X31
	0x01E92FB0 B 0x1EFA340
	0x01E92FB4 STR X30, [X31 - 0x10]!
	0x01E92FB8 MOVZ W1, 0x8
	0x01E92FBC MOV X2, X31
	0x01E92FC0 BL 0x1EFA5C4
	0x01E92FC4 MOV W0, W0
	0x01E92FC8 LDR X30, [X31], #0x10
	0x01E92FCC RET
	0x01E92FD0 STR X30, [X31 - 0x30]!
	0x01E92FD4 STP X22, X21, [X31 + 0x10]
	0x01E92FD8 STP X20, X19, [X31 + 0x20]
	0x01E92FDC ADRP X22, 0x2547000
	0x01E92FE0 ADRP X21, 0x2264000
	0x01E92FE4 LDRB W8, [X22 + 0x293]
	0x01E92FE8 LDR X21, [X21 + 0x398]
	0x01E92FEC MOV X19, X1
	0x01E92FF0 MOV X20, X0
	0x01E92FF4 TBNZ X8, 0x0, 0x1E9300C
	0x01E92FF8 ADRP X0, 0x2264000
	0x01E92FFC LDR X0, [X0 + 0x398]
	0x01E93000 BL 0x1C16CF4
	0x01E93004 MOVZ W8, 0x1
	0x01E93008 STRB W8, [X22 + 0x293]
	0x01E9300C LDR X0, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2548000
	006 Move W8, [X21+415]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x2262000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X21+415], W8
	016 Move X8, 0x2262000
	017 Move X8, [X8+1432]
	018 Move X0, [X8]
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move X0, X20
	024 Move X1, X31
	025 Call Object.op_Implicit, X0
	026 Move W8, W0
	027 Move X0, X31
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {48}
	032 Compare X20, 0
	033 JumpIfEqual {53}
	034 Move X0, X20
	035 Move X1, X31
	036 Call NetworkRunner.get_IsRunning, X0
	037 Move W8, W0
	038 Move X0, X31
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {48}
	043 Move X8, [X20+80]
	044 Compare X8, 0
	045 JumpIfEqual {53}
	046 Move W8, [X8+72]
	047 Add W0, W8, W19
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return X0
	053 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x01E93010 LDR W20, [X20]
	0x01E93014 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move X1, X31
	002 Call Int32.ToString, X0
	003 Return X0

