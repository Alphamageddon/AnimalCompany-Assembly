Type: Fusion.NetworkObjectTypeId

Method: Fusion.NetworkObjectTypeId/EqualityComparer get_Comparer()

Disassembly:
	0x01E99E40 BL 0x1C16DFC
	0x01E99E44 AND W8, W21, 0x1
	0x01E99E48 SUB W8, W31, W8
	0x01E99E4C EOR W8, W8, W21, 0x1
	0x01E99E50 MOVZ W9, 0x3A800000
	0x01E99E54 SCVTF S0, W8
	0x01E99E58 FMOV S1, W9
	0x01E99E5C FMUL S0, S0, S1
	0x01E99E60 STR S0, [X22 + 0x4]
	0x01E99E64 LDR X0, [X20 + 0x28]
	0x01E99E68 MOVZ W1, 0x4
	0x01E99E6C MOV X2, X31
	0x01E99E70 BL 0x1EFA5C0
	0x01E99E74 LDRB W8, [X24 + 0xE90]
	0x01E99E78 MOV W21, W0
	0x01E99E7C CBNZ W8, 0x1E99E94
	0x01E99E80 ADRP X0, 0x2261000
	0x01E99E84 LDR X0, [X0 + 0xC68]
	0x01E99E88 BL 0x1C16CF4
	0x01E99E8C MOVZ W8, 0x1
	0x01E99E90 STRB W8, [X24 + 0xE90]
	0x01E99E94 LDR X0, [X23]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2541000
	005 Move X19, 0x2266000
	006 Move W8, [X20+709]
	007 Move X19, [X19+888]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2266000
	013 Move X0, [X0+888]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+709], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: Fusion.NetworkObjectTypeId get_PlayerData()

Disassembly:
	0x01E99E98 LDR W8, [X0 + 0xE0]
	0x01E99E9C CBNZ W8, 0x1E99EA4
	0x01E99EA0 BL 0x1C16DFC
	0x01E99EA4 AND W8, W21, 0x1
	0x01E99EA8 SUB W8, W31, W8
	0x01E99EAC EOR W8, W8, W21, 0x1
	0x01E99EB0 MOVZ W9, 0x3A800000
	0x01E99EB4 SCVTF S0, W8
	0x01E99EB8 FMOV S1, W9
	0x01E99EBC FMUL S0, S0, S1
	0x01E99EC0 STR S0, [X22 + 0x8]
	0x01E99EC4 LDR X0, [X20 + 0x28]
	0x01E99EC8 MOVZ W1, 0x20
	0x01E99ECC MOV X2, X31
	0x01E99ED0 BL 0x1EF9B00
	0x01E99ED4 LDR X8, [X23]
	0x01E99ED8 MOV X20, X0
	0x01E99EDC LDR W9, [X8 + 0xE0]
	0x01E99EE0 CBNZ W9, 0x1E99EEC
	0x01E99EE4 MOV X0, X8
	0x01E99EE8 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x2541000
	005 Move X20, 0x2266000
	006 Move W8, [X19+710]
	007 Move X20, [X20+888]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2266000
	013 Move X0, [X0+888]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+710], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X0, 1
	025 NotImplemented "Instruction MOVK not yet implemented."
	026 Move X30, [X31+32]
	027 Return X0

Method: Fusion.NetworkTypeIdKind get_Kind()

Disassembly:
	0x01E99EFC STP S2, S3, [X22 + 0x14]
	0x01E99F00 ADRP X20, 0x2540000
	0x01E99F04 LDRB W8, [X20 + 0x2F3]
	0x01E99F08 CBNZ W8, 0x1E99F30
	0x01E99F0C ADRP X0, 0x2261000
	0x01E99F10 LDR X0, [X0 + 0x4B8]
	0x01E99F14 STP V3, V0, [X31 + 0x20]

ISIL:
	001 Move W8, [X0]
	002 Move W9, [X0+4]
	003 Or W8, W8, W9
	004 And W9, W9, 3
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move W8, 4
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 Return X0

Method: Fusion.NetworkObjectTypeId FromSceneRefAndObjectIndex(Fusion.SceneRef sceneRef, System.Int32 objIndex, Fusion.NetworkSceneLoadId loadId = null)

Disassembly:
	0x01E99F18 STP V1, V2, [X31]
	0x01E99F1C BL 0x1C16CF4
	0x01E99F20 LDP V1, V2, [X31]
	0x01E99F24 LDP V3, V0, [X31 + 0x20]
	0x01E99F28 MOVZ W8, 0x1
	0x01E99F2C STRB W8, [X20 + 0x2F3]
	0x01E99F30 ADRP X8, 0x2261000
	0x01E99F34 LDR X8, [X8 + 0x4B8]
	0x01E99F38 FMUL S4, S0, S0
	0x01E99F3C FMUL S5, S1, S1
	0x01E99F40 FADD S4, S4, S5
	0x01E99F44 LDR X8, [X8]
	0x01E99F48 FMUL S5, S2, S2
	0x01E99F4C FADD S4, S5, S4
	0x01E99F50 FMUL S5, S3, S3
	0x01E99F54 LDR X8, [X8 + 0xB8]
	0x01E99F58 FADD S4, S5, S4
	0x01E99F5C FSQRT S4, S4
	0x01E99F60 LDR V6, [X8]
	0x01E99F64 FCMP S4, S6
	0x01E99F68 B.PL 0x1E99FA4
	0x01E99F6C ADRP X20, 0x253F000
	0x01E99F70 LDRB W8, [X20 + 0x793]
	0x01E99F74 CBNZ W8, 0x1E99F8C
	0x01E99F78 ADRP X0, 0x225B000
	0x01E99F7C LDR X0, [X0 + 0x5A8]
	0x01E99F80 BL 0x1C16CF4
	0x01E99F84 MOVZ W8, 0x1
	0x01E99F88 STRB W8, [X20 + 0x793]
	0x01E99F8C ADRP X8, 0x225B000
	0x01E99F90 LDR X8, [X8 + 0x5A8]
	0x01E99F94 LDR X8, [X8]
	0x01E99F98 LDR X8, [X8 + 0xB8]
	0x01E99F9C LDR V0, [X8]
	0x01E99FA0 B 0x1E99FB8
	0x01E99FA4 MOV V0.S[1], V1.S[0]
	0x01E99FA8 MOV V0.S[2], V2.S[0]
	0x01E99FAC MOV V0.S[3], V3.S[0]
	0x01E99FB0 UNIMPLEMENTED
	0x00000000 INVALID
	0x01E99FB8 ADD W0, W19, 0x6
	0x01E99FBC STUR V0, [X22 + 0xC]
	0x01E99FC0 LDP X20, X19, [X31 + 0x70]
	0x01E99FC4 LDP X22, X21, [X31 + 0x60]
	0x01E99FC8 LDP X24, X23, [X31 + 0x50]
	0x01E99FCC LDR X30, [X31 + 0x40]
	0x01E99FD0 ADD X31, X31, 0x80
	0x01E99FD4 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare W0, 0
	005 JumpIfEqual {17}
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W8, W1
	008 ShiftRight W8, 30
	009 And W8, W8, 0x1FFFFFFF
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Or W8, W8, W2
	013 Or W8, W8, 3
	014 NotImplemented "Instruction BFM not yet implemented."
	015 Move X30, [X31+32]
	016 Return X0
	017 Move X0, 0x2263000
	018 Move X0, [X0+1400]
	019 Call 0x1C17D08
	020 Call 0x1C17F10
	021 Move X19, X0
	022 Move X0, 0x2266000
	023 Move X0, [X0+1232]
	024 Call 0x1C17D08
	025 Move X20, X0
	026 Move X0, 0x2266000
	027 Move X0, [X0+1240]
	028 Call 0x1C17D08
	029 Move X2, X0
	030 Move X0, X19
	031 Move X1, X20
	032 Move X3, X31
	033 Call ArgumentException..ctor, X0, X1, X2
	034 Move X0, 0x2263000
	035 Move X0, [X0+1888]
	036 Call 0x1C17D08
	037 Call 0x1C17F10
	038 Move X19, X0
	039 Move X0, 0x2266000
	040 Move X0, [X0+1248]
	041 Call 0x1C17D08
	042 Move X1, X0
	043 Move X0, X19
	044 Move X2, X31
	045 Call ArgumentOutOfRangeException..ctor, X0, X1
	046 Move X0, 0x2266000
	047 Move X0, [X0+1256]
	048 Call 0x1C17D08
	049 Move X1, X0
	050 Move X0, X19
	051 Call 0x1C17DEC

Method: Fusion.NetworkSceneObjectId get_AsSceneObjectId()

Disassembly:
	0x01E99FD8 BL 0x1C16F20
	0x01E99FDC MOV X1, X31
	0x01E99FE0 B 0x33BDD8C
	0x01E99FE4 STR X30, [X31 - 0x20]!
	0x01E99FE8 STP X20, X19, [X31 + 0x10]
	0x01E99FEC ADRP X19, 0x2540000
	0x01E99FF0 ADRP X20, 0x2265000
	0x01E99FF4 LDRB W8, [X19 + 0x2D9]
	0x01E99FF8 LDR X20, [X20 + 0x440]
	0x01E99FFC TBNZ X8, 0x0, 0x1E9A014
	0x01E9A000 ADRP X0, 0x2264000
	0x01E9A004 LDR X0, [X0 + 0x440]
	0x01E9A008 BL 0x1C16CF4
	0x01E9A00C MOVZ W8, 0x1
	0x01E9A010 STRB W8, [X19 + 0x2D9]
	0x01E9A014 LDR X0, [X20]
	0x01E9A018 BL 0x1C16F10
	0x01E9A01C MOV X1, X31
	0x01E9A020 MOV X19, X0
	0x01E9A024 BL 0x33BDD8C
	0x01E9A028 LDR X8, [X20]
	0x01E9A02C LDR X8, [X8 + 0xB8]
	0x01E9A030 STR X19, [X8]
	0x01E9A034 LDP X20, X19, [X31 + 0x10]
	0x01E9A038 LDR X30, [X31], #0x20
	0x01E9A03C RET
	0x01E9A040 SUB X31, X31, 0x30
	0x01E9A044 STP X30, X21, [X31 + 0x10]
	0x01E9A048 STP X20, X19, [X31 + 0x20]
	0x01E9A04C ADRP X20, 0x253F000
	0x01E9A050 ADRP X21, 0x2259000
	0x01E9A054 LDRB W8, [X20 + 0x2DA]
	0x01E9A058 LDR X21, [X21 + 0x970]
	0x01E9A05C MOV X19, X0
	0x01E9A060 TBNZ X8, 0x0, 0x1E9A078
	0x01E9A064 ADRP X0, 0x2259000
	0x01E9A068 LDR X0, [X0 + 0x970]
	0x01E9A06C BL 0x1C16CF4
	0x01E9A070 MOVZ W8, 0x1
	0x01E9A074 STRB W8, [X20 + 0x2DA]
	0x01E9A078 LDR X0, [X21]
	0x01E9A07C LDR W8, [X0 + 0xE0]
	0x01E9A080 CBNZ W8, 0x1E9A088
	0x01E9A084 BL 0x1C16DFC
	0x01E9A088 MOV X0, X31
	0x01E9A08C BL 0x3C03278
	0x01E9A090 TBZ X0, 0x0, 0x1E9A0DC
	0x01E9A094 MOV X0, X19
	0x01E9A098 MOV X1, X31
	0x01E9A09C BL 0x3C32ECC
	0x01E9A0A0 CBZ X0, 0x1E9A0EC
	0x01E9A0A4 MOV X1, X31
	0x01E9A0A8 BL 0x3C35BD8
	0x01E9A0AC STR W0, [X31 + 0x8]
	0x01E9A0B0 ADD X0, X31, 0x8
	0x01E9A0B4 MOV X1, X31
	0x01E9A0B8 BL 0x3C46324
	0x01E9A0BC TBZ X0, 0x0, 0x1E9A0DC
	0x01E9A0C0 MOV X0, X19
	0x01E9A0C4 MOV X1, X31
	0x01E9A0C8 BL 0x3C396B0
	0x01E9A0CC ORR W1, W0, 0x3F
	0x01E9A0D0 MOV X0, X19
	0x01E9A0D4 MOV X2, X31
	0x01E9A0D8 BL 0x3C396EC
	0x01E9A0DC LDP X20, X19, [X31 + 0x20]
	0x01E9A0E0 LDP X30, X21, [X31 + 0x10]
	0x01E9A0E4 ADD X31, X31, 0x30
	0x01E9A0E8 RET
	0x01E9A0EC BL 0x1C16F20
	0x01E9A0F0 MOV X1, X31
	0x01E9A0F4 B 0x1E82058
	0x01E9A0F8 LDR W8, [X0]
	0x01E9A0FC CMP W8, 0x0
	0x01E9A100 CSET W0, EQ
	0x01E9A104 RET

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2541000
	007 Move X21, 0x2266000
	008 Move W8, [X20+711]
	009 Move X21, [X21+888]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2266000
	016 Move X0, [X0+888]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+711], W8
	020 Move X0, [X21]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X19
	026 Call NetworkObjectTypeId.get_IsSceneObject, X0
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {46}
	031 Move W0, [X19]
	032 Move W8, [X19+4]
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X30, [X31+16]
	036 Move X21, [X31+24]
	037 Move W9, W8
	038 ShiftRight W9, 2
	039 And W9, W9, 0x7FFFFF
	040 Move X1, X8
	041 ShiftRight X1, 24
	042 And X1, X1, 0x7FFFFFFF
	043 NotImplemented "Instruction BFM not yet implemented."
	044 Add X31, X31, 48
	045 Return X0
	046 Move X0, 0x2265000
	047 Move X0, [X0+888]
	048 Call 0x1C17D08
	049 Call 0x19913D0
	050 Move W8, [X19]
	051 Move W9, [X19+4]
	052 Move X19, 0x2265000
	053 Or W8, W9, W8
	054 And W9, W9, 3
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move W8, 4
	057 NotImplemented "Instruction CSEL not yet implemented."
	058 Move [X31+12], W8
	059 Move X19, [X19+1264]
	060 Move X0, X19
	061 Call 0x1C17D08
	062 Add X1, X31, 12
	063 Call 0x1C17E04
	064 Move X20, X0
	065 Move W8, 3
	066 Move X0, X19
	067 Move [X31+8], W8
	068 Call 0x1C17D08
	069 Add X1, X31, 8
	070 Call 0x1C17E04
	071 Move X19, X0
	072 Move X0, 0x2265000
	073 Move X0, [X0+1272]
	074 Call 0x1C17D08
	075 Move X1, X20
	076 Move X2, X19
	077 Move X3, X31
	078 Call String.Format, X0, X1, X2
	079 Move X19, X0
	080 Move X0, 0x225A000
	081 Move X0, [X0+1456]
	082 Call 0x1C17D08
	083 Call 0x1C17F10
	084 Move X1, X19
	085 Move X2, X31
	086 Move X20, X0
	087 Call InvalidOperationException..ctor, X0, X1
	088 Move X0, 0x2265000
	089 Move X0, [X0+1280]
	090 Call 0x1C17D08
	091 Move X1, X0
	092 Move X0, X20
	093 Call 0x1C17DEC

Method: Fusion.NetworkObjectTypeId FromPrefabId(Fusion.NetworkPrefabId prefabId)

Disassembly:
	0x01E9A178 STP X30, X21, [X31 - 0x20]!
	0x01E9A17C STP X20, X19, [X31 + 0x10]
	0x01E9A180 ADRP X21, 0x253F000
	0x01E9A184 LDRB W8, [X21 + 0x2DB]
	0x01E9A188 MOV X20, X1
	0x01E9A18C MOV X19, X0
	0x01E9A190 TBNZ X8, 0x0, 0x1E9A1A8
	0x01E9A194 ADRP X0, 0x2264000
	0x01E9A198 LDR X0, [X0 + 0x548]
	0x01E9A19C BL 0x1C16CF4
	0x01E9A1A0 MOVZ W8, 0x1
	0x01E9A1A4 STRB W8, [X21 + 0x2DB]
	0x01E9A1A8 CBZ X20, 0x1E9A1C4
	0x01E9A1AC ADRP X8, 0x2264000
	0x01E9A1B0 LDR X8, [X8 + 0x548]
	0x01E9A1B4 LDR X9, [X20]
	0x01E9A1B8 LDR X8, [X8]
	0x01E9A1BC CMP X9, X8
	0x01E9A1C0 B.EQ 0x1E9A1CC
	0x01E9A1C4 MOV W0, W31
	0x01E9A1C8 B 0x1E9A1E4
	0x01E9A1CC MOV X0, X20
	0x01E9A1D0 BL 0x1C16E08
	0x01E9A1D4 LDR W8, [X0]
	0x01E9A1D8 LDR W9, [X19]
	0x01E9A1DC CMP W9, W8
	0x01E9A1E0 CSET W0, EQ
	0x01E9A1E4 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Compare W0, 0
	002 JumpIfEqual {5}
	003 And X0, X0, 0
	004 Return X0
	005 Move [X31-32], X30
	006 Move [X31+16], X20
	007 Move [X31+24], X19
	008 Move X0, 0x2262000
	009 Move X0, [X0+1400]
	010 Call 0x1C17D08
	011 Call 0x1C17F10
	012 Move X19, X0
	013 Move X0, 0x2265000
	014 Move X0, [X0+1288]
	015 Call 0x1C17D08
	016 Move X20, X0
	017 Move X0, 0x2265000
	018 Move X0, [X0+1296]
	019 Call 0x1C17D08
	020 Move X2, X0
	021 Move X0, X19
	022 Move X1, X20
	023 Move X3, X31
	024 Call ArgumentException..ctor, X0, X1, X2
	025 Move X0, 0x2265000
	026 Move X0, [X0+1304]
	027 Call 0x1C17D08
	028 Move X1, X0
	029 Move X0, X19
	030 Call 0x1C17DEC

Method: Fusion.NetworkPrefabId get_AsPrefabId()

Disassembly:
	0x01E9A1F8 MOVZ W1, 0x1
	0x01E9A1FC MOVZ W2, 0x1
	0x01E9A200 B 0x1E9A204
	0x01E9A204 STP X30, X23, [X31 - 0x30]!
	0x01E9A208 STP X22, X21, [X31 + 0x10]
	0x01E9A20C STP X20, X19, [X31 + 0x20]
	0x01E9A210 ADRP X20, 0x253F000
	0x01E9A214 ADRP X23, 0x2259000
	0x01E9A218 LDRB W8, [X20 + 0x2DD]
	0x01E9A21C LDR X23, [X23 + 0x8F0]
	0x01E9A220 MOV W22, W2
	0x01E9A224 MOV W19, W1
	0x01E9A228 MOV X21, X0
	0x01E9A22C TBNZ X8, 0x0, 0x1E9A25C
	0x01E9A230 ADRP X0, 0x2259000
	0x01E9A234 LDR X0, [X0 + 0x8F0]
	0x01E9A238 BL 0x1C16CF4
	0x01E9A23C ADRP X0, 0x2264000
	0x01E9A240 LDR X0, [X0 + 0x550]
	0x01E9A244 BL 0x1C16CF4
	0x01E9A248 ADRP X0, 0x2264000
	0x01E9A24C LDR X0, [X0 + 0x558]
	0x01E9A250 BL 0x1C16CF4
	0x01E9A254 MOVZ W8, 0x1
	0x01E9A258 STRB W8, [X20 + 0x2DD]
	0x01E9A25C LDR X0, [X23]
	0x01E9A260 BL 0x1C16F10
	0x01E9A264 MOV X1, X31
	0x01E9A268 MOV X20, X0
	0x01E9A26C BL 0x3231AC4
	0x01E9A270 TBZ X19, 0x0, 0x1E9A288
	0x01E9A274 CBZ X20, 0x1E9A320
	0x01E9A278 MOVZ W1, 0x5B
	0x01E9A27C MOV X0, X20
	0x01E9A280 MOV X2, X31
	0x01E9A284 BL 0x3233D30
	0x01E9A288 LDR W8, [X21]
	0x01E9A28C CBZ W8, 0x1E9A2B4
	0x01E9A290 TBZ X22, 0x0, 0x1E9A2D8
	0x01E9A294 CBZ X20, 0x1E9A320
	0x01E9A298 ADRP X8, 0x2264000
	0x01E9A29C LDR X8, [X8 + 0x558]
	0x01E9A2A0 MOV X0, X20
	0x01E9A2A4 MOV X2, X31
	0x01E9A2A8 LDR X1, [X8]
	0x01E9A2AC BL 0x32333E0
	0x01E9A2B0 B 0x1E9A2DC
	0x01E9A2B4 CBZ X20, 0x1E9A320
	0x01E9A2B8 ADRP X8, 0x2264000
	0x01E9A2BC LDR X8, [X8 + 0x550]
	0x01E9A2C0 MOV X0, X20
	0x01E9A2C4 MOV X2, X31
	0x01E9A2C8 LDR X1, [X8]
	0x01E9A2CC BL 0x32333E0
	0x01E9A2D0 TBNZ X19, 0x0, 0x1E9A2F4
	0x01E9A2D4 B 0x1E9A304
	0x01E9A2D8 CBZ X20, 0x1E9A320
	0x01E9A2DC LDR W8, [X21]
	0x01E9A2E0 MOV X0, X20
	0x01E9A2E4 MOV X2, X31
	0x01E9A2E8 SUB W1, W8, 0x1
	0x01E9A2EC BL 0x3233E30
	0x01E9A2F0 TBZ X19, 0x0, 0x1E9A304
	0x01E9A2F4 MOVZ W1, 0x5D
	0x01E9A2F8 MOV X0, X20
	0x01E9A2FC MOV X2, X31
	0x01E9A300 BL 0x3233D30
	0x01E9A304 LDR X8, [X20]
	0x01E9A308 MOV X0, X20
	0x01E9A30C LDP X20, X19, [X31 + 0x20]
	0x01E9A310 LDP X22, X21, [X31 + 0x10]
	0x01E9A314 LDP X2, X1, [X8 + 0x168]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2540000
	007 Move X21, 0x2265000
	008 Move W8, [X20+712]
	009 Move X21, [X21+888]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2265000
	016 Move X0, [X0+888]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+712], W8
	020 Move X0, [X21]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X19
	026 Call NetworkObjectTypeId.get_IsPrefab, X0
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {38}
	031 Move W0, [X19]
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X30, [X31+16]
	035 Move X21, [X31+24]
	036 Add X31, X31, 48
	037 Return X0
	038 Move X0, 0x2265000
	039 Move X0, [X0+888]
	040 Call 0x1C17D08
	041 Call 0x19913D0
	042 Move W8, [X19]
	043 Move W9, [X19+4]
	044 Move X19, 0x2265000
	045 Or W8, W9, W8
	046 And W9, W9, 3
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move W8, 4
	049 NotImplemented "Instruction CSEL not yet implemented."
	050 Move [X31+12], W8
	051 Move X19, [X19+1264]
	052 Move X0, X19
	053 Call 0x1C17D08
	054 Add X1, X31, 12
	055 Call 0x1C17E04
	056 Move X20, X0
	057 Move X0, X19
	058 Move [X31+8], W31
	059 Call 0x1C17D08
	060 Add X1, X31, 8
	061 Call 0x1C17E04
	062 Move X19, X0
	063 Move X0, 0x2265000
	064 Move X0, [X0+1272]
	065 Call 0x1C17D08
	066 Move X1, X20
	067 Move X2, X19
	068 Move X3, X31
	069 Call String.Format, X0, X1, X2
	070 Move X19, X0
	071 Move X0, 0x225A000
	072 Move X0, [X0+1456]
	073 Call 0x1C17D08
	074 Call 0x1C17F10
	075 Move X1, X19
	076 Move X2, X31
	077 Move X20, X0
	078 Call InvalidOperationException..ctor, X0, X1
	079 Move X0, 0x2265000
	080 Move X0, [X0+1312]
	081 Call 0x1C17D08
	082 Move X1, X0
	083 Move X0, X20
	084 Call 0x1C17DEC

Method: Fusion.NetworkObjectTypeId FromCustom(System.UInt32 raw)

Disassembly:
	0x01E9A38C MOV X0, X19
	0x01E9A390 LDP X20, X19, [X31 + 0x10]
	0x01E9A394 MOV X2, X31

ISIL:
	001 Move W8, W0
	002 Or X0, X8, 0x1FFFFFFFF
	003 Return X0

Method: System.UInt32 get_AsCustom()

Disassembly:
	0x01E9A398 LDP X30, X21, [X31], #0x20
	0x01E9A39C B 0x3399A54
	0x01E9A3A0 MOV X2, X31
	0x01E9A3A4 B 0x3399A54
	0x01E9A3A8 CMP W0, W1
	0x01E9A3AC CSET W0, EQ
	0x01E9A3B0 RET
	0x01E9A3B4 CMP W0, W1
	0x01E9A3B8 CSET W0, NE
	0x01E9A3BC RET
	0x01E9A3C0 CMP W1, W2
	0x01E9A3C4 CSET W0, EQ
	0x01E9A3C8 RET
	0x01E9A3CC MOV X0, X1
	0x01E9A3D0 RET
	0x01E9A3D4 MOV X1, X31
	0x01E9A3D8 B 0x33BDD8C
	0x01E9A3DC AND W8, W3, 0x1
	0x01E9A3E0 STR W1, [X0]
	0x01E9A3E4 STR X2, [X0 + 0x8]
	0x01E9A3E8 STRB W8, [X0 + 0x10]
	0x01E9A3EC RET
	0x01E9A3F0 LDR X8, [X0 + 0x8]
	0x01E9A3F4 CMP X8, 0x0
	0x01E9A3F8 CSET W0, NE
	0x01E9A3FC RET
	0x01E9A400 STP X30, X19, [X31 - 0x10]!
	0x01E9A404 LDR X8, [X0 + 0x8]
	0x01E9A408 CBZ X8, 0x1E9A418
	0x01E9A40C ADD X0, X8, 0x50
	0x01E9A410 LDP X30, X19, [X31], #0x10
	0x01E9A414 RET
	0x01E9A418 ADRP X0, 0x2259000
	0x01E9A41C LDR X0, [X0 + 0x5B0]
	0x01E9A420 BL 0x1C16D08
	0x01E9A424 BL 0x1C16F10
	0x01E9A428 MOV X1, X31
	0x01E9A42C MOV X19, X0
	0x01E9A430 BL 0x337DEC0
	0x01E9A434 ADRP X0, 0x2264000
	0x01E9A438 LDR X0, [X0 + 0x560]
	0x01E9A43C BL 0x1C16D08
	0x01E9A440 MOV X1, X0
	0x01E9A444 MOV X0, X19
	0x01E9A448 BL 0x1C16DEC
	0x01E9A44C LDR X0, [X0 + 0x18]
	0x01E9A450 RET
	0x01E9A454 LDR W0, [X0 + 0x38]
	0x01E9A458 RET
	0x01E9A45C STP X30, X21, [X31 - 0x20]!
	0x01E9A460 STP X20, X19, [X31 + 0x10]
	0x01E9A464 ADRP X20, 0x253F000
	0x01E9A468 ADRP X21, 0x2264000
	0x01E9A46C LDRB W8, [X20 + 0x2DE]
	0x01E9A470 LDR X21, [X21 + 0x568]
	0x01E9A474 MOV X19, X0
	0x01E9A478 TBNZ X8, 0x0, 0x1E9A490
	0x01E9A47C ADRP X0, 0x2264000
	0x01E9A480 LDR X0, [X0 + 0x568]
	0x01E9A484 BL 0x1C16CF4
	0x01E9A488 MOVZ W8, 0x1
	0x01E9A48C STRB W8, [X20 + 0x2DE]
	0x01E9A490 LDR X0, [X21]
	0x01E9A494 BL 0x1C16F10
	0x01E9A498 MOVN W1, 0x1
	0x01E9A49C MOV X2, X31
	0x01E9A4A0 MOV X20, X0
	0x01E9A4A4 BL 0x1E9BE74
	0x01E9A4A8 CBZ X20, 0x1E9A4C0
	0x01E9A4AC STR X19, [X20 + 0x30]
	0x01E9A4B0 MOV X0, X20
	0x01E9A4B4 LDP X20, X19, [X31 + 0x10]
	0x01E9A4B8 LDP X30, X21, [X31], #0x20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2540000
	007 Move X21, 0x2265000
	008 Move W8, [X20+713]
	009 Move X21, [X21+888]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2265000
	016 Move X0, [X0+888]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+713], W8
	020 Move X0, [X21]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X19
	026 Call NetworkObjectTypeId.get_IsCustom, X0
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {38}
	031 Move W0, [X19]
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X30, [X31+16]
	035 Move X21, [X31+24]
	036 Add X31, X31, 48
	037 Return X0
	038 Move X0, 0x2265000
	039 Move X0, [X0+888]
	040 Call 0x1C17D08
	041 Call 0x19913D0
	042 Move W8, [X19]
	043 Move W9, [X19+4]
	044 Move X19, 0x2265000
	045 Or W8, W9, W8
	046 And W9, W9, 3
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move W8, 4
	049 NotImplemented "Instruction CSEL not yet implemented."
	050 Move [X31+12], W8
	051 Move X19, [X19+1264]
	052 Move X0, X19
	053 Call 0x1C17D08
	054 Add X1, X31, 12
	055 Call 0x1C17E04
	056 Move X20, X0
	057 Move W8, 1
	058 Move X0, X19
	059 Move [X31+8], W8
	060 Call 0x1C17D08
	061 Add X1, X31, 8
	062 Call 0x1C17E04
	063 Move X19, X0
	064 Move X0, 0x2265000
	065 Move X0, [X0+1272]
	066 Call 0x1C17D08
	067 Move X1, X20
	068 Move X2, X19
	069 Move X3, X31
	070 Call String.Format, X0, X1, X2
	071 Move X19, X0
	072 Move X0, 0x225A000
	073 Move X0, [X0+1456]
	074 Call 0x1C17D08
	075 Call 0x1C17F10
	076 Move X1, X19
	077 Move X2, X31
	078 Move X20, X0
	079 Call InvalidOperationException..ctor, X0, X1
	080 Move X0, 0x2265000
	081 Move X0, [X0+1320]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X20
	085 Call 0x1C17DEC

Method: Fusion.NetworkObjectTypeId FromStruct(System.UInt16 structId)

Disassembly:
	0x01E99EEC MOV W0, W20
	0x01E99EF0 MOV X1, X31
	0x01E99EF4 BL 0x1E34BB0
	0x01E99EF8 STP S0, S1, [X22 + 0xC]

ISIL:
	001 Move X8, 2
	002 NotImplemented "Instruction BFM not yet implemented."
	003 Move X0, X8
	004 Return X0

Method: System.UInt16 get_AsInternalStructId()

Disassembly:
	0x01E9A52C MOV X2, X19
	0x01E9A530 BL 0x19963F0
	0x01E9A534 STP X0, X1, [X31 + 0x18]
	0x01E9A538 ADRP X0, 0x2264000
	0x01E9A53C LDR X0, [X0 + 0x350]
	0x01E9A540 BL 0x1C16D08
	0x01E9A544 ADD X1, X31, 0x18
	0x01E9A548 BL 0x1C16E04
	0x01E9A54C LDR W8, [X31 + 0x10]
	0x01E9A550 MOV X19, X0
	0x01E9A554 ADRP X0, 0x2264000
	0x01E9A558 STR W8, [X31 + 0x8]
	0x01E9A55C LDR X0, [X0 + 0x548]
	0x01E9A560 BL 0x1C16D08
	0x01E9A564 ADD X1, X31, 0x8
	0x01E9A568 BL 0x1C16E04
	0x01E9A56C MOV X20, X0
	0x01E9A570 ADRP X0, 0x2264000
	0x01E9A574 LDR X0, [X0 + 0x578]
	0x01E9A578 BL 0x1C16D08
	0x01E9A57C MOV X1, X19
	0x01E9A580 MOV X2, X20
	0x01E9A584 MOV X3, X31
	0x01E9A588 BL 0x3227BD4
	0x01E9A58C MOV X19, X0
	0x01E9A590 ADRP X0, 0x2261000
	0x01E9A594 LDR X0, [X0 + 0x578]
	0x01E9A598 BL 0x1C16D08
	0x01E9A59C BL 0x1C16F10
	0x01E9A5A0 MOV X20, X0
	0x01E9A5A4 ADRP X0, 0x2264000
	0x01E9A5A8 LDR X0, [X0 + 0x580]
	0x01E9A5AC BL 0x1C16D08
	0x01E9A5B0 MOV X2, X0
	0x01E9A5B4 MOV X0, X20
	0x01E9A5B8 MOV X1, X19
	0x01E9A5BC MOV X3, X31
	0x01E9A5C0 BL 0x330E16C
	0x01E9A5C4 ADRP X0, 0x2264000
	0x01E9A5C8 LDR X0, [X0 + 0x588]
	0x01E9A5CC BL 0x1C16D08
	0x01E9A5D0 MOV X1, X0
	0x01E9A5D4 MOV X0, X20
	0x01E9A5D8 BL 0x1C16DEC
	0x01E9A5DC BL 0x3EB1B20
	0x01E9A5E0 SUB X31, X31, 0x40
	0x01E9A5E4 STP X30, X23, [X31 + 0x10]
	0x01E9A5E8 STP X22, X21, [X31 + 0x20]
	0x01E9A5EC STP X20, X19, [X31 + 0x30]
	0x01E9A5F0 ADRP X22, 0x253F000
	0x01E9A5F4 LDRB W8, [X22 + 0x2DF]
	0x01E9A5F8 MOV X19, X2
	0x01E9A5FC MOV X21, X1
	0x01E9A600 MOV X20, X0
	0x01E9A604 TBNZ X8, 0x0, 0x1E9A670
	0x01E9A608 ADRP X0, 0x2264000
	0x01E9A60C LDR X0, [X0 + 0x590]
	0x01E9A610 BL 0x1C16CF4
	0x01E9A614 ADRP X0, 0x2264000
	0x01E9A618 LDR X0, [X0 + 0x598]
	0x01E9A61C BL 0x1C16CF4
	0x01E9A620 ADRP X0, 0x2264000
	0x01E9A624 LDR X0, [X0 + 0x5A0]
	0x01E9A628 BL 0x1C16CF4
	0x01E9A62C ADRP X0, 0x2264000
	0x01E9A630 LDR X0, [X0 + 0x5A8]
	0x01E9A634 BL 0x1C16CF4
	0x01E9A638 ADRP X0, 0x2264000
	0x01E9A63C LDR X0, [X0 + 0x570]
	0x01E9A640 BL 0x1C16CF4
	0x01E9A644 ADRP X0, 0x2264000
	0x01E9A648 LDR X0, [X0 + 0x5B0]
	0x01E9A64C BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2540000
	007 Move X21, 0x2265000
	008 Move W8, [X20+714]
	009 Move X21, [X21+888]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2265000
	016 Move X0, [X0+888]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+714], W8
	020 Move X0, [X21]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X19
	026 Call NetworkObjectTypeId.get_IsStruct, X0
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {38}
	031 Move W0, [X19]
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X30, [X31+16]
	035 Move X21, [X31+24]
	036 Add X31, X31, 48
	037 Return X0
	038 Move X0, 0x2265000
	039 Move X0, [X0+888]
	040 Call 0x1C17D08
	041 Call 0x19913D0
	042 Move W8, [X19]
	043 Move W9, [X19+4]
	044 Move X19, 0x2265000
	045 Or W8, W9, W8
	046 And W9, W9, 3
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move W8, 4
	049 NotImplemented "Instruction CSEL not yet implemented."
	050 Move [X31+12], W8
	051 Move X19, [X19+1264]
	052 Move X0, X19
	053 Call 0x1C17D08
	054 Add X1, X31, 12
	055 Call 0x1C17E04
	056 Move X20, X0
	057 Move W8, 2
	058 Move X0, X19
	059 Move [X31+8], W8
	060 Call 0x1C17D08
	061 Add X1, X31, 8
	062 Call 0x1C17E04
	063 Move X19, X0
	064 Move X0, 0x2265000
	065 Move X0, [X0+1272]
	066 Call 0x1C17D08
	067 Move X1, X20
	068 Move X2, X19
	069 Move X3, X31
	070 Call String.Format, X0, X1, X2
	071 Move X19, X0
	072 Move X0, 0x225A000
	073 Move X0, [X0+1456]
	074 Call 0x1C17D08
	075 Call 0x1C17F10
	076 Move X1, X19
	077 Move X2, X31
	078 Move X20, X0
	079 Call InvalidOperationException..ctor, X0, X1
	080 Move X0, 0x2265000
	081 Move X0, [X0+1328]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X20
	085 Call 0x1C17DEC

Method: System.Boolean get_IsNone()

Disassembly:
	0x01E9A6C0 LDRSW X9, [X10]
	0x01E9A6C4 ADD X8, X8, X9, 0x4, LSL
	0x01E9A6C8 ADD X0, X8, 0x138
	0x01E9A6CC LDP X8, X1, [X0]
	0x01E9A6D0 MOV X0, X21
	0x01E9A6D4 BLR X8
	0x01E9A6D8 ORR X8, X0, X1, 0x0
	0x01E9A6DC CBZ X8, 0x1E9A754
	0x01E9A6E0 MOV X22, X0
	0x01E9A6E4 LDR X0, [X20 + 0x30]
	0x01E9A6E8 CBZ X0, 0x1E9A8A8
	0x01E9A6EC ADRP X8, 0x2264000
	0x01E9A6F0 LDR X8, [X8 + 0x5A8]
	0x01E9A6F4 MOV X23, X1
	0x01E9A6F8 ADD X3, X31, 0xC
	0x01E9A6FC MOV X1, X22
	0x01E9A700 LDR X4, [X8]
	0x01E9A704 MOV X2, X23
	0x01E9A708 BL 0x2A81ED0
	0x01E9A70C TBZ X0, 0x0, 0x1E9A728
	0x01E9A710 LDR W0, [X31 + 0xC]
	0x01E9A714 BL 0x1E9A108
	0x01E9A718 MOV X8, X0
	0x01E9A71C MOV W0, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2540000
	006 Move X21, 0x2265000
	007 Move W8, [X20+715]
	008 Move X21, [X21+888]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2265000
	015 Move X0, [X0+888]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+715], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move W8, [X19]
	025 Move W9, [X19+4]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Or W8, W9, W8
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CSET not yet implemented."
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0

Method: System.Boolean get_IsValid()

Disassembly:
	0x01E97160 STR X8, [X9 + 0x1E8]
	0x01E97164 MOVZ W8, 0x6
	0x01E97168 STR W8, [X9 + 0x1E4]
	0x01E9716C LDP X30, X21, [X31], #0x20
	0x01E97170 RET
	0x01E97174 BL 0x1C16F28
	0x01E97178 BL 0x1C16F20
	0x01E9717C STP X30, X21, [X31 - 0x20]!
	0x01E97180 STP X20, X19, [X31 + 0x10]
	0x01E97184 ADRP X21, 0x2542000
	0x01E97188 ADRP X20, 0x2267000
	0x01E9718C LDRB W8, [X21 + 0x2B0]
	0x01E97190 LDR X20, [X20 + 0x438]
	0x01E97194 MOV W19, W0
	0x01E97198 TBNZ X8, 0x0, 0x1E971B0
	0x01E9719C ADRP X0, 0x2267000
	0x01E971A0 LDR X0, [X0 + 0x438]
	0x01E971A4 BL 0x1C16CF4
	0x01E971A8 MOVZ W8, 0x1
	0x01E971AC STRB W8, [X21 + 0x2B0]
	0x01E971B0 LDR X0, [X20]
	0x01E971B4 LDR W8, [X0 + 0xE0]
	0x01E971B8 CBNZ W8, 0x1E971C4
	0x01E971BC BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2543000
	006 Move X21, 0x2268000
	007 Move W8, [X20+716]
	008 Move X21, [X21+888]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2268000
	015 Move X0, [X0+888]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+716], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move W8, [X19]
	025 Move W9, [X19+4]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Or W8, W9, W8
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CSET not yet implemented."
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0

Method: System.Boolean get_IsSceneObject()

Disassembly:
	0x01E9A108 MOVN W8, 0x80000000
	0x01E9A10C CMP W0, W8
	0x01E9A110 B.CS 0x1E9A11C
	0x01E9A114 ADD W0, W0, 0x1
	0x01E9A118 RET
	0x01E9A11C STP X30, X19, [X31 - 0x10]!
	0x01E9A120 ADRP X0, 0x2261000
	0x01E9A124 LDR X0, [X0 + 0x760]
	0x01E9A128 BL 0x1C16D08
	0x01E9A12C BL 0x1C16F10
	0x01E9A130 MOV X19, X0
	0x01E9A134 ADRP X0, 0x2264000
	0x01E9A138 LDR X0, [X0 + 0x130]
	0x01E9A13C BL 0x1C16D08
	0x01E9A140 MOV X1, X0
	0x01E9A144 MOV X0, X19
	0x01E9A148 MOV X2, X31
	0x01E9A14C BL 0x3316014
	0x01E9A150 ADRP X0, 0x2264000
	0x01E9A154 LDR X0, [X0 + 0x540]
	0x01E9A158 BL 0x1C16D08
	0x01E9A15C MOV X1, X0
	0x01E9A160 MOV X0, X19
	0x01E9A164 BL 0x1C16DEC
	0x01E9A168 LDR W8, [X0]
	0x01E9A16C CMP W8, W1
	0x01E9A170 CSET W0, EQ
	0x01E9A174 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2540000
	006 Move X21, 0x2265000
	007 Move W8, [X20+717]
	008 Move X21, [X21+888]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2265000
	015 Move X0, [X0+888]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+717], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move W8, [X19]
	025 Move W9, [X19+4]
	026 Move W10, 3
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Or W8, W9, W8
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 NotImplemented "Instruction BICS not yet implemented."
	033 NotImplemented "Instruction CSET not yet implemented."
	034 And W0, W8, W9
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0

Method: System.Boolean get_IsPrefab()

Disassembly:
	0x01E9A318 LDP X30, X23, [X31], #0x30
	0x01E9A31C BR X2
	0x01E9A320 BL 0x1C16F20
	0x01E9A324 STP X30, X21, [X31 - 0x20]!
	0x01E9A328 STP X20, X19, [X31 + 0x10]
	0x01E9A32C ADRP X21, 0x253F000
	0x01E9A330 LDRB W8, [X21 + 0x2DC]
	0x01E9A334 MOV X20, X1
	0x01E9A338 MOV X19, X0
	0x01E9A33C TBNZ X8, 0x0, 0x1E9A354
	0x01E9A340 ADRP X0, 0x2264000
	0x01E9A344 LDR X0, [X0 + 0x548]
	0x01E9A348 BL 0x1C16CF4
	0x01E9A34C MOVZ W8, 0x1
	0x01E9A350 STRB W8, [X21 + 0x2DC]
	0x01E9A354 CBZ X20, 0x1E9A370
	0x01E9A358 ADRP X8, 0x2264000
	0x01E9A35C LDR X8, [X8 + 0x548]
	0x01E9A360 LDR X9, [X20]
	0x01E9A364 LDR X8, [X8]
	0x01E9A368 CMP X9, X8
	0x01E9A36C B.EQ 0x1E9A380
	0x01E9A370 LDP X20, X19, [X31 + 0x10]
	0x01E9A374 MOVN W0, 0x0
	0x01E9A378 LDP X30, X21, [X31], #0x20
	0x01E9A37C RET
	0x01E9A380 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2540000
	006 Move X21, 0x2265000
	007 Move W8, [X20+718]
	008 Move X21, [X21+888]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2265000
	015 Move X0, [X0+888]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+718], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move W8, [X19]
	025 Move W9, [X19+4]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Or W8, W9, W8
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CSET not yet implemented."
	031 And W31, W9, 3
	032 NotImplemented "Instruction CSET not yet implemented."
	033 And W0, W8, W9
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0

Method: System.Boolean get_IsStruct()

Disassembly:
	0x01E9A650 ADRP X0, 0x2264000
	0x01E9A654 LDR X0, [X0 + 0x5B8]
	0x01E9A658 BL 0x1C16CF4
	0x01E9A65C ADRP X0, 0x2264000
	0x01E9A660 LDR X0, [X0 + 0x5C0]
	0x01E9A664 BL 0x1C16CF4
	0x01E9A668 MOVZ W8, 0x1
	0x01E9A66C STRB W8, [X22 + 0x2DF]
	0x01E9A670 STR W31, [X31 + 0xC]
	0x01E9A674 CBZ X21, 0x1E9A8AC
	0x01E9A678 ADRP X10, 0x2264000
	0x01E9A67C LDR X8, [X21]
	0x01E9A680 LDR X10, [X10 + 0x570]
	0x01E9A684 LDRH W9, [X8 + 0x12E]
	0x01E9A688 LDR X1, [X10]
	0x01E9A68C CBZ X9, 0x1E9A6B0
	0x01E9A690 LDR X10, [X8 + 0xB0]
	0x01E9A694 ADD X10, X10, 0x8
	0x01E9A698 LDUR X11, [X10 - 0x8]
	0x01E9A69C CMP X11, X1
	0x01E9A6A0 B.EQ 0x1E9A6C0
	0x01E9A6A4 SUBS X9, X9, 0x1
	0x01E9A6A8 ADD X10, X10, 0x10
	0x01E9A6AC B.NE 0x1E9A698
	0x01E9A6B0 MOV X0, X21
	0x01E9A6B4 MOV W2, W31
	0x01E9A6B8 BL 0x1C5C788
	0x01E9A6BC B 0x1E9A6CC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2540000
	006 Move X21, 0x2265000
	007 Move W8, [X20+719]
	008 Move X21, [X21+888]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2265000
	015 Move X0, [X0+888]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+719], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move W8, [X19]
	025 Move W9, [X19+4]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Or W8, W9, W8
	029 And W9, W9, 3
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSET not yet implemented."
	034 And W0, W8, W9
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0

Method: System.Boolean get_IsCustom()

Disassembly:
	0x01E9A4BC RET
	0x01E9A4C0 BL 0x1C16F20
	0x01E9A4C4 SUB X31, X31, 0x50
	0x01E9A4C8 STR X30, [X31 + 0x30]
	0x01E9A4CC STP X20, X19, [X31 + 0x40]
	0x01E9A4D0 MRS X20, 0xC000
	0x01E9A4D4 LDR X8, [X20 + 0x28]
	0x01E9A4D8 ADD X2, X31, 0x10
	0x01E9A4DC MOV X19, X1
	0x01E9A4E0 STR X8, [X31 + 0x28]
	0x01E9A4E4 STR W31, [X31 + 0x10]
	0x01E9A4E8 BL 0x1E9A5E0
	0x01E9A4EC TBZ X0, 0x0, 0x1E9A510
	0x01E9A4F0 LDR X8, [X20 + 0x28]
	0x01E9A4F4 LDR X9, [X31 + 0x28]
	0x01E9A4F8 CMP X8, X9
	0x01E9A4FC B.NE 0x1E9A5DC
	0x01E9A500 LDP X20, X19, [X31 + 0x40]
	0x01E9A504 LDR X30, [X31 + 0x30]
	0x01E9A508 ADD X31, X31, 0x50
	0x01E9A50C RET
	0x01E9A510 MOV X0, X19
	0x01E9A514 BL 0x19903C0
	0x01E9A518 ADRP X0, 0x2264000
	0x01E9A51C LDR X0, [X0 + 0x570]
	0x01E9A520 BL 0x1C16D08
	0x01E9A524 MOV X1, X0
	0x01E9A528 MOV W0, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2540000
	006 Move X21, 0x2265000
	007 Move W8, [X20+720]
	008 Move X21, [X21+888]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2265000
	015 Move X0, [X0+888]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+720], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move W8, [X19]
	025 Move W9, [X19+4]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Or W8, W9, W8
	029 And W9, W9, 3
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSET not yet implemented."
	034 And W0, W8, W9
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0

Method: System.Boolean Equals(Fusion.NetworkObjectTypeId other)

Disassembly:
	0x01E9A720 STR W8, [X19]
	0x01E9A724 B 0x1E9A894
	0x01E9A728 LDR X8, [X20 + 0x18]
	0x01E9A72C CBZ X8, 0x1E9A8A8
	0x01E9A730 LDR X0, [X20 + 0x30]
	0x01E9A734 CBZ X0, 0x1E9A8A8
	0x01E9A738 LDR W3, [X8 + 0x18]
	0x01E9A73C ADRP X8, 0x2264000
	0x01E9A740 LDR X8, [X8 + 0x5A0]
	0x01E9A744 MOV X1, X22

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, [X0+4]
	004 Move X9, X1
	005 ShiftRight X9, 32
	006 And X9, X9, 0x7FFFFFFF
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Return X0
	010 Move W0, W31
	011 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x01E97784 LDR X8, [X19 + 0x58]
	0x01E97788 CBZ X8, 0x1E978A8
	0x01E9778C STR W20, [X8 + 0x28]
	0x01E97790 LDR X0, [X19 + 0x60]
	0x01E97794 CBNZ X0, 0x1E977B4

ISIL:
	001 Move W8, [X0]
	002 Move W9, [X0+4]
	003 Move W10, 397
	004 Multiply W8, W8, W10
	005 Xor W0, W8, W9
	006 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x01E9A748 MOV X2, X23
	0x01E9A74C LDR X4, [X8]
	0x01E9A750 BL 0x2A803CC
	0x01E9A754 LDR X0, [X20 + 0x18]
	0x01E9A758 CBZ X0, 0x1E9A8A8
	0x01E9A75C ADRP X9, 0x2264000
	0x01E9A760 LDR X9, [X9 + 0x5B0]
	0x01E9A764 LDR W10, [X0 + 0x1C]
	0x01E9A768 LDR X8, [X0 + 0x10]
	0x01E9A76C LDR X9, [X9]
	0x01E9A770 ADD W10, W10, 0x1
	0x01E9A774 STR W10, [X0 + 0x1C]
	0x01E9A778 CBZ X8, 0x1E9A8A8
	0x01E9A77C LDRSW X10, [X0 + 0x18]
	0x01E9A780 LDR W11, [X8 + 0x18]
	0x01E9A784 CMP W10, W11
	0x01E9A788 B.CS 0x1E9A7A0
	0x01E9A78C ADD W9, W10, 0x1
	0x01E9A790 ADD X8, X8, X10, 0x3, LSL
	0x01E9A794 STR W9, [X0 + 0x18]
	0x01E9A798 STR X21, [X8 + 0x20]
	0x01E9A79C B 0x1E9A7B4
	0x01E9A7A0 LDR X8, [X9 + 0x20]
	0x01E9A7A4 MOV X1, X21
	0x01E9A7A8 LDR X8, [X8 + 0xC0]
	0x01E9A7AC LDR X2, [X8 + 0x70]
	0x01E9A7B0 BL 0x301BF90
	0x01E9A7B4 MOV X21, X20
	0x01E9A7B8 LDR X23, [X21 + 0x20]!
	0x01E9A7BC CBZ X23, 0x1E9A8A8
	0x01E9A7C0 LDR X0, [X20 + 0x18]
	0x01E9A7C4 CBZ X0, 0x1E9A8A8
	0x01E9A7C8 ADRP X22, 0x2264000
	0x01E9A7CC LDR X22, [X22 + 0x5B8]
	0x01E9A7D0 LDR X1, [X22]
	0x01E9A7D4 BL 0x301BB2C
	0x01E9A7D8 MOV X0, X20
	0x01E9A7DC BL 0x1E9A8F4
	0x01E9A7E0 LDR W8, [X23 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2540000
	006 Move W8, [X21+721]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2265000
	014 Move X0, [X0+888]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+721], W8
	018 Compare X20, 0
	019 JumpIfEqual {42}
	020 Move X21, 0x2265000
	021 Move X21, [X21+888]
	022 Move X9, [X20]
	023 Move X8, [X21]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X20
	026 Call 0x1C17E08
	027 Move X8, X0
	028 Move X0, [X21]
	029 Move X20, [X8]
	030 Move W9, [X0+224]
	031 Compare W9, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move W8, [X19]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W8, [X19+4]
	037 Move X9, X20
	038 ShiftRight X9, 32
	039 And X9, X9, 0x7FFFFFFF
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSET not yet implemented."
	042 Move W0, W31
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return X0

Method: System.String ToString()

Disassembly:
	0x01E971C0 LDR X0, [X20]
	0x01E971C4 LDR X8, [X0 + 0xB8]
	0x01E971C8 ANDS W31, W19, 0x1
	0x01E971CC LDP X20, X19, [X31 + 0x10]
	0x01E971D0 ADD X9, X8, 0x8
	0x01E971D4 CSEL X8, X8, X9, NE
	0x01E971D8 LDR X0, [X8]
	0x01E971DC LDP X30, X21, [X31], #0x20
	0x01E971E0 RET
	0x01E971E4 STR X30, [X31 - 0x20]!
	0x01E971E8 STP X20, X19, [X31 + 0x10]
	0x01E971EC ADRP X20, 0x2542000
	0x01E971F0 LDRB W8, [X20 + 0x2B1]
	0x01E971F4 MOV X19, X0
	0x01E971F8 TBNZ X8, 0x0, 0x1E97210
	0x01E971FC ADRP X0, 0x2267000
	0x01E97200 LDR X0, [X0 + 0x438]
	0x01E97204 BL 0x1C16CF4
	0x01E97208 MOVZ W8, 0x1
	0x01E9720C STRB W8, [X20 + 0x2B1]
	0x01E97210 LDR X8, [X19 + 0xB0]
	0x01E97214 CBZ X8, 0x1E97244
	0x01E97218 ADRP X9, 0x2267000
	0x01E9721C LDR X9, [X9 + 0x438]
	0x01E97220 LDR W19, [X8 + 0x18]
	0x01E97224 LDR X0, [X9]
	0x01E97228 LDR W9, [X0 + 0xE0]
	0x01E9722C CBNZ W9, 0x1E97234
	0x01E97230 BL 0x1C16DFC
	0x01E97234 UBFM W0, W19, 0x3, 0x3
	0x01E97238 LDP X20, X19, [X31 + 0x10]
	0x01E9723C LDR X30, [X31], #0x20
	0x01E97240 B 0x1E9717C
	0x01E97244 BL 0x1C16F20
	0x01E97248 STR X30, [X31 - 0x10]!
	0x01E9724C LDR X8, [X0 + 0xB0]
	0x01E97250 CBZ X8, 0x1E97264
	0x01E97254 LDRB W8, [X8 + 0x18]
	0x01E97258 UBFM W0, W8, 0x3, 0x3
	0x01E9725C LDR X30, [X31], #0x10
	0x01E97260 RET
	0x01E97264 BL 0x1C16F20
	0x01E97268 STP X30, X21, [X31 - 0x20]!
	0x01E9726C STP X20, X19, [X31 + 0x10]
	0x01E97270 ADRP X20, 0x2542000
	0x01E97274 LDRB W8, [X20 + 0x2B2]
	0x01E97278 MOV X19, X0
	0x01E9727C TBNZ X8, 0x0, 0x1E97294
	0x01E97280 ADRP X0, 0x2267000
	0x01E97284 LDR X0, [X0 + 0x448]
	0x01E97288 BL 0x1C16CF4
	0x01E9728C MOVZ W8, 0x1
	0x01E97290 STRB W8, [X20 + 0x2B2]
	0x01E97294 LDR X20, [X19 + 0x70]
	0x01E97298 CBNZ X20, 0x1E972D8
	0x01E9729C LDR X0, [X19 + 0x20]
	0x01E972A0 CBZ X0, 0x1E972E8
	0x01E972A4 MOV X1, X31
	0x01E972A8 BL 0x1EC0510
	0x01E972AC ADRP X8, 0x2267000
	0x01E972B0 LDR X8, [X8 + 0x448]
	0x01E972B4 MOV W21, W0
	0x01E972B8 LDR X8, [X8]
	0x01E972BC MOV X0, X8
	0x01E972C0 BL 0x1C16F10
	0x01E972C4 MOV W1, W21
	0x01E972C8 MOV X2, X31
	0x01E972CC MOV X20, X0
	0x01E972D0 BL 0x1EBE034
	0x01E972D4 STR X20, [X19 + 0x70]
	0x01E972D8 MOV X0, X20
	0x01E972DC LDP X20, X19, [X31 + 0x10]
	0x01E972E0 LDP X30, X21, [X31], #0x20
	0x01E972E4 RET
	0x01E972E8 BL 0x1C16F20
	0x01E972EC STR X30, [X31 - 0x10]!
	0x01E972F0 LDR X8, [X0 + 0xB0]
	0x01E972F4 CBZ X8, 0x1E97310
	0x01E972F8 LDRB W9, [X8 + 0x18]
	0x01E972FC ADD X8, X8, 0x50
	0x01E97300 ANDS W31, W9, 0x8
	0x01E97304 CSEL X0, X31, X8, EQ
	0x01E97308 LDR X30, [X31], #0x10
	0x01E9730C RET
	0x01E97310 BL 0x1C16F20
	0x01E97314 LDR X8, [X0 + 0xB0]
	0x01E97318 ADD X0, X8, 0x50
	0x01E9731C RET
	0x01E97320 LDR X8, [X0 + 0xB0]
	0x01E97324 CBZ X8, 0x1E97334
	0x01E97328 LDRB W8, [X8 + 0x18]
	0x01E9732C UBFM W0, W8, 0x5, 0x5
	0x01E97330 RET
	0x01E97334 MOV W0, W31
	0x01E97338 RET
	0x01E9733C STR X30, [X31 - 0x10]!
	0x01E97340 LDR X8, [X0 + 0xB0]
	0x01E97344 CBZ X8, 0x1E97354
	0x01E97348 MOVZ W0, 0x1
	0x01E9734C LDR X30, [X31], #0x10
	0x01E97350 RET
	0x01E97354 BL 0x1C16F20
	0x01E97358 LDR X8, [X0 + 0xB0]
	0x01E9735C CBZ X8, 0x1E97368
	0x01E97360 LDR X0, [X8 + 0x8]
	0x01E97364 RET
	0x01E97368 MOV X0, X31
	0x01E9736C RET
	0x01E97370 LDR X8, [X0 + 0xB0]
	0x01E97374 CBZ X8, 0x1E97380
	0x01E97378 LDR W0, [X8]
	0x01E9737C RET
	0x01E97380 MOV X0, X31
	0x01E97384 RET
	0x01E97388 LDR X8, [X0 + 0xB0]
	0x01E9738C CBZ X8, 0x1E97398
	0x01E97390 LDR W0, [X8 + 0x20]
	0x01E97394 RET
	0x01E97398 MOV X0, X31
	0x01E9739C RET
	0x01E973A0 LDR X8, [X0 + 0xB0]
	0x01E973A4 CBZ X8, 0x1E973B0
	0x01E973A8 LDR W0, [X8 + 0x1C]
	0x01E973AC RET
	0x01E973B0 MOV X0, X31
	0x01E973B4 RET
	0x01E973B8 STP X30, X19, [X31 - 0x10]!
	0x01E973BC MOV X19, X0
	0x01E973C0 LDR X0, [X0 + 0x28]
	0x01E973C4 CBNZ X0, 0x1E973DC
	0x01E973C8 LDR X1, [X19 + 0xB0]
	0x01E973CC MOV X0, X19
	0x01E973D0 MOV W2, W31
	0x01E973D4 BL 0x1E973E4
	0x01E973D8 STR X0, [X19 + 0x28]
	0x01E973DC LDP X30, X19, [X31], #0x10
	0x01E973E0 RET
	0x01E973E4 STP X30, X21, [X31 - 0x20]!
	0x01E973E8 STP X20, X19, [X31 + 0x10]
	0x01E973EC LDR X0, [X0 + 0x20]
	0x01E973F0 CBZ X0, 0x1E97428

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x2543000
	007 Move X20, 0x2268000
	008 Move W8, [X21+722]
	009 Move X20, [X20+888]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {44}
	015 Move X0, 0x225D000
	016 Move X0, [X0+1880]
	017 Call 0x1C17CF4
	018 Move X0, 0x2268000
	019 Move X0, [X0+888]
	020 Call 0x1C17CF4
	021 Move X0, 0x2262000
	022 Move X0, [X0+1624]
	023 Call 0x1C17CF4
	024 Move X0, 0x2265000
	025 Move X0, [X0+1824]
	026 Call 0x1C17CF4
	027 Move X0, 0x2268000
	028 Move X0, [X0+976]
	029 Call 0x1C17CF4
	030 Move X0, 0x2268000
	031 Move X0, [X0+984]
	032 Call 0x1C17CF4
	033 Move X0, 0x2268000
	034 Move X0, [X0+992]
	035 Call 0x1C17CF4
	036 Move X0, 0x2268000
	037 Move X0, [X0+1000]
	038 Call 0x1C17CF4
	039 Move X0, 0x2268000
	040 Move X0, [X0+1008]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X21+722], W8
	044 Move X0, [X20]
	045 Move [X31+24], W31
	046 Move [X31+16], X31
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X19
	052 Call NetworkObjectTypeId.get_IsValid, X0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {93}
	057 Move X0, [X20]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move W8, [X19]
	063 Move W9, [X19+4]
	064 Or W8, W9, W8
	065 And W9, W9, 3
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W8, 4
	068 NotImplemented "Instruction CSEL not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X9, -20353024
	071 Add X9, X9, 3093
	072 NotImplemented "Instruction ADR not yet implemented."
	073 Move W11, [X9]
	074 Add X10, X10, X11
	075 CallNoReturn X10
	076 Move X0, [X20]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X0, X19
	082 Call NetworkObjectTypeId.get_AsPrefabId, X0
	083 Move X8, 0x225D000
	084 Move X8, [X8+1880]
	085 Subtract W9, W0, 1
	086 Add X1, X31, 12
	087 Move [X31+12], W9
	088 Move X8, [X8]
	089 Move X0, X8
	090 Call 0x1C17E04
	091 Move X8, 0x2268000
	092 Move X8, [X8+1000]
	093 Move X8, 0x2268000
	094 Move X8, [X8+1008]
	095 Move X0, [X8]
	096 Move X8, 0x2268000
	097 Move X8, [X8+976]
	098 Move X0, [X20]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Move X0, X19
	104 Call NetworkObjectTypeId.get_AsCustom, X0
	105 Move X8, 0x2265000
	106 Move X8, [X8+1824]
	107 Move [X31+12], W0
	108 Add X1, X31, 12
	109 Move X8, [X8]
	110 Move X0, X8
	111 Call 0x1C17E04
	112 Move X8, 0x2268000
	113 Move X8, [X8+992]
	114 Move X0, [X20]
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {119}
	118 Call 0x1C17DFC
	119 Move X0, X19
	120 Call NetworkObjectTypeId.get_AsInternalStructId, X0
	121 Move X8, 0x2262000
	122 Move X8, [X8+1624]
	123 NotImplemented "Instruction STRH not yet implemented."
	124 Add X1, X31, 12
	125 Move X8, [X8]
	126 Move X0, X8
	127 Call 0x1C17E04
	128 Move X8, 0x2268000
	129 Move X8, [X8+984]
	130 Move X8, [X8]
	131 Move X1, X0
	132 Move X2, X31
	133 Move X0, X8
	134 Call String.Format, X0, X1
	135 Move X0, [X20]
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {140}
	139 Call 0x1C17DFC
	140 Move X0, X19
	141 Call NetworkObjectTypeId.get_AsSceneObjectId, X0
	142 Move [X31+16], X0
	143 Move [X31+24], W1
	144 Add X0, X31, 16
	145 Move X1, X31
	146 Call NetworkSceneObjectId.ToString, X0
	147 Move X20, [X31+48]
	148 Move X19, [X31+56]
	149 Move X30, [X31+32]
	150 Move X21, [X31+40]
	151 Add X31, X31, 64
	152 Return X0

Method: System.Boolean op_Equality(Fusion.NetworkObjectTypeId a, Fusion.NetworkObjectTypeId b)

Disassembly:
	0x01E9A7F0 CBZ X0, 0x1E9A8A8
	0x01E9A7F4 LDR X1, [X22]
	0x01E9A7F8 BL 0x301BB2C
	0x01E9A7FC MOV X0, X20
	0x01E9A800 BL 0x1E9A8F4
	0x01E9A804 ADRP X8, 0x2264000
	0x01E9A808 LDR X8, [X8 + 0x590]
	0x01E9A80C MOV W1, W0

ISIL:
	001 Move X8, X0
	002 ShiftRight X8, 32
	003 And X8, X8, 0x7FFFFFFF
	004 Move X9, X1
	005 ShiftRight X9, 32
	006 And X9, X9, 0x7FFFFFFF
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 And W0, W10, W8
	012 Return X0

Method: System.Boolean op_Inequality(Fusion.NetworkObjectTypeId a, Fusion.NetworkObjectTypeId b)

Disassembly:
	0x01E9A810 MOV X0, X21
	0x01E9A814 LDR X2, [X8]
	0x01E9A818 BL 0x21154F8
	0x01E9A81C MOV X21, X20
	0x01E9A820 LDR X23, [X21 + 0x28]!
	0x01E9A824 CBZ X23, 0x1E9A8A8
	0x01E9A828 LDR X0, [X20 + 0x18]
	0x01E9A82C CBZ X0, 0x1E9A8A8

ISIL:
	001 Move X8, X0
	002 ShiftRight X8, 32
	003 And X8, X8, 0x7FFFFFFF
	004 Move X9, X1
	005 ShiftRight X9, 32
	006 And X9, X9, 0x7FFFFFFF
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 Or W0, W10, W8
	012 Return X0

Method: Fusion.NetworkObjectTypeId op_Implicit(Fusion.NetworkPrefabId prefabId)

Disassembly:
	0x01E9A830 LDR X1, [X22]
	0x01E9A834 BL 0x301BB2C
	0x01E9A838 LDR W8, [X23 + 0x18]
	0x01E9A83C CMP W0, W8
	0x01E9A840 B.LE 0x1E9A86C
	0x01E9A844 LDR X0, [X20 + 0x18]
	0x01E9A848 CBZ X0, 0x1E9A8A8
	0x01E9A84C LDR X1, [X22]
	0x01E9A850 BL 0x301BB2C
	0x01E9A854 ADRP X8, 0x2264000
	0x01E9A858 LDR X8, [X8 + 0x598]
	0x01E9A85C MOV W1, W0
	0x01E9A860 MOV X0, X21
	0x01E9A864 LDR X2, [X8]
	0x01E9A868 BL 0x2145FA0
	0x01E9A86C LDR X8, [X20 + 0x18]
	0x01E9A870 CBZ X8, 0x1E9A8A8
	0x01E9A874 LDR W8, [X8 + 0x18]
	0x01E9A878 SUB W0, W8, 0x1
	0x01E9A87C BL 0x1E9A108
	0x01E9A880 STR W0, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2540000
	006 Move X21, 0x2265000
	007 Move W8, [X20+723]
	008 Move X21, [X21+888]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2265000
	015 Move X0, [X0+888]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+723], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 And X0, X19, 0
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call NetworkObjectTypeId.FromPrefabId, X0
	030 Return X0

Method: System.Void WriteInternal(Fusion.NetworkObjectTypeId typeId, Fusion.Sockets.NetBitBuffer* buffer, System.Int32 blockSize)

Disassembly:
	0x01E9A884 LDR W8, [X20 + 0x38]
	0x01E9A888 MOVZ W0, 0x1
	0x01E9A88C ADD W8, W8, 0x1
	0x01E9A890 STR W8, [X20 + 0x38]
	0x01E9A894 LDP X20, X19, [X31 + 0x30]
	0x01E9A898 LDP X22, X21, [X31 + 0x20]
	0x01E9A89C LDP X30, X23, [X31 + 0x10]
	0x01E9A8A0 ADD X31, X31, 0x40
	0x01E9A8A4 RET
	0x01E9A8A8 BL 0x1C16F20
	0x01E9A8AC ADRP X0, 0x225E000
	0x01E9A8B0 LDR X0, [X0 + 0x528]
	0x01E9A8B4 BL 0x1C16D08
	0x01E9A8B8 BL 0x1C16F10
	0x01E9A8BC MOV X19, X0
	0x01E9A8C0 ADRP X0, 0x2264000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X0
	007 Move X21, X0
	008 ShiftRight X21, 32
	009 And X21, X21, 0x7FFFFFFF
	010 Move X0, X20
	011 Move X3, X31
	012 Move W19, W2
	013 Call NetBitBuffer.WriteUInt32VarLength, X0, X1, X2
	014 Move X0, X20
	015 Move W2, W19
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move W1, W21
	019 Move X3, X31
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Call NetBitBuffer.WriteUInt32VarLength, X0, X1, X2
	023 Return 

Method: Fusion.NetworkObjectTypeId ReadInternal(Fusion.Sockets.NetBitBuffer* buffer, System.Int32 blockSize)

Disassembly:
	0x01E9A8C4 LDR X0, [X0 + 0x580]
	0x01E9A8C8 BL 0x1C16D08
	0x01E9A8CC MOV X1, X0
	0x01E9A8D0 MOV X0, X19
	0x01E9A8D4 MOV X2, X31
	0x01E9A8D8 BL 0x330E100
	0x01E9A8DC ADRP X0, 0x2264000
	0x01E9A8E0 LDR X0, [X0 + 0x5C8]
	0x01E9A8E4 BL 0x1C16D08
	0x01E9A8E8 MOV X1, X0
	0x01E9A8EC MOV X0, X19
	0x01E9A8F0 BL 0x1C16DEC
	0x01E9A8F4 STR X30, [X31 - 0x20]!
	0x01E9A8F8 STP X20, X19, [X31 + 0x10]
	0x01E9A8FC ADRP X20, 0x253F000
	0x01E9A900 LDRB W8, [X20 + 0x2EB]
	0x01E9A904 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X2, X31
	006 Move W19, W1
	007 Move X20, X0
	008 Call NetBitBuffer.ReadUInt32VarLength, X0, X1
	009 Move W21, W0
	010 Move X0, X20
	011 Move W1, W19
	012 Move X2, X31
	013 Call NetBitBuffer.ReadUInt32VarLength, X0, X1
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move W8, W21
	017 NotImplemented "Instruction BFM not yet implemented."
	018 Move X0, X8
	019 Move X30, [X31+32]
	020 Move X21, [X31+40]
	021 Return X0

Method: System.Void .cctor()

Disassembly:
	0x01E9A908 TBNZ X8, 0x0, 0x1E9A920
	0x01E9A90C ADRP X0, 0x2264000
	0x01E9A910 LDR X0, [X0 + 0x5B8]
	0x01E9A914 BL 0x1C16CF4
	0x01E9A918 MOVZ W8, 0x1
	0x01E9A91C STRB W8, [X20 + 0x2EB]
	0x01E9A920 LDR X0, [X19 + 0x18]
	0x01E9A924 CBZ X0, 0x1E9A958
	0x01E9A928 ADRP X8, 0x2264000
	0x01E9A92C LDR X8, [X8 + 0x5B8]
	0x01E9A930 LDR X1, [X8]
	0x01E9A934 BL 0x301BB2C
	0x01E9A938 ADD W8, W0, 0x3F
	0x01E9A93C LDP X20, X19, [X31 + 0x10]
	0x01E9A940 ADD W9, W0, 0x7E
	0x01E9A944 CMP W8, 0x0
	0x01E9A948 CSEL W8, W9, W8, LT
	0x01E9A94C SBFM W0, W8, 0x6, 0x1F
	0x01E9A950 LDR X30, [X31], #0x20
	0x01E9A954 RET
	0x01E9A958 BL 0x1C16F20
	0x01E9A95C STR X30, [X31 - 0x30]!
	0x01E9A960 STP X22, X21, [X31 + 0x10]
	0x01E9A964 STP X20, X19, [X31 + 0x20]
	0x01E9A968 ADRP X22, 0x253F000
	0x01E9A96C LDRB W8, [X22 + 0x2E0]
	0x01E9A970 MOV X20, X2
	0x01E9A974 MOV X21, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x2540000
	006 Move X21, 0x2265000
	007 Move X20, 0x2265000
	008 Move W8, [X19+724]
	009 Move X21, [X21+1336]
	010 Move X20, [X20+888]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x2265000
	016 Move X0, [X0+1336]
	017 Call 0x1C17CF4
	018 Move X0, 0x2265000
	019 Move X0, [X0+888]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+724], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X19, X0
	027 Call Object..ctor, X0
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move [X8], X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

