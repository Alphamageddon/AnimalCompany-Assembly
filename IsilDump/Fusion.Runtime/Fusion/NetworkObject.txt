Type: Fusion.NetworkObject

Method: Fusion.NetworkId get_Id()

Disassembly:
	0x01E942E0 MOV X0, X19
	0x01E942E4 BL 0x1E9343C
	0x01E942E8 CBZ X0, 0x1E94410
	0x01E942EC LDRB W8, [X24 + 0x2F1]
	0x01E942F0 MOV X22, X0
	0x01E942F4 CBNZ W8, 0x1E9430C

ISIL:
	001 Move X8, [X0+32]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move W0, [X8]
	005 Return X0
	006 Move X0, X31
	007 Return X0

Method: Fusion.NetworkRunner get_Runner()

Disassembly:
	0x01E942F8 ADRP X0, 0x2264000
	0x01E942FC LDR X0, [X0 + 0x20]

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: Fusion.Tick get_LastReceiveTick()

Disassembly:
	0x01E94300 BL 0x1C16CF4
	0x01E94304 MOVZ W8, 0x1
	0x01E94308 STRB W8, [X24 + 0x2F1]
	0x01E9430C LDR X0, [X22 + 0xB8]
	0x01E94310 CBZ X0, 0x1E94410
	0x01E94314 LDR X3, [X23]
	0x01E94318 ADD X2, X31, 0x8
	0x01E9431C MOV X1, X21

ISIL:
	001 Move X8, [X0+56]
	002 Compare X8, 0
	003 JumpIfEqual {9}
	004 Move X8, [X8+88]
	005 Compare X8, 0
	006 JumpIfEqual {9}
	007 Move W0, [X8+40]
	008 Return X0
	009 Move X0, X31
	010 Return X0

Method: System.String get_Name()

Disassembly:
	0x01E94354 MOV X0, X19
	0x01E94358 BL 0x1E9343C
	0x01E9435C CBZ X0, 0x1E94410
	0x01E94360 LDRB W8, [X24 + 0x2F1]
	0x01E94364 MOV X21, X0
	0x01E94368 CBNZ W8, 0x1E94380
	0x01E9436C ADRP X0, 0x2264000
	0x01E94370 LDR X0, [X0 + 0x20]
	0x01E94374 BL 0x1C16CF4
	0x01E94378 MOVZ W8, 0x1
	0x01E9437C STRB W8, [X24 + 0x2F1]
	0x01E94380 LDR X0, [X21 + 0xB8]
	0x01E94384 CBZ X0, 0x1E94410
	0x01E94388 LDR X3, [X23]
	0x01E9438C AND X1, X20, 0x0
	0x01E94390 ADD X2, X31, 0x0
	0x01E94394 BL 0x2AE89D0
	0x01E94398 TBZ X0, 0x0, 0x1E943F8
	0x01E9439C LDR X0, [X31]
	0x01E943A0 CBZ X0, 0x1E94410
	0x01E943A4 LDR X1, [X19 + 0x38]
	0x01E943A8 MOV X2, X31
	0x01E943AC BL 0x1ED88C0
	0x01E943B0 B 0x1E943F8
	0x01E943B4 MOV X0, X19
	0x01E943B8 BL 0x1E93668
	0x01E943BC TBZ X0, 0x0, 0x1E943F8
	0x01E943C0 LDR X0, [X19 + 0x30]
	0x01E943C4 CBZ X0, 0x1E94410
	0x01E943C8 MOV X1, X31
	0x01E943CC BL 0x1E9EA20
	0x01E943D0 ADRP X8, 0x2262000
	0x01E943D4 LDR X8, [X8 + 0xE40]
	0x01E943D8 MOV X21, X0
	0x01E943DC LDR X8, [X8]
	0x01E943E0 LDR W9, [X8 + 0xE0]
	0x01E943E4 CBNZ W9, 0x1E943F0
	0x01E943E8 MOV X0, X8
	0x01E943EC BL 0x1C16DFC
	0x01E943F0 CMP W21, W20
	0x01E943F4 B.EQ 0x1E94280
	0x01E943F8 LDP X20, X19, [X31 + 0x40]
	0x01E943FC LDP X22, X21, [X31 + 0x30]
	0x01E94400 LDP X24, X23, [X31 + 0x20]
	0x01E94404 LDP X30, X25, [X31 + 0x10]
	0x01E94408 ADD X31, X31, 0x50
	0x01E9440C RET
	0x01E94410 BL 0x1C16F20
	0x01E94414 STP X30, X19, [X31 - 0x10]!
	0x01E94418 MOV X19, X0
	0x01E9441C LDR X0, [X0 + 0x30]
	0x01E94420 CBZ X0, 0x1E94478
	0x01E94424 MOV X1, X31
	0x01E94428 BL 0x1E9E87C
	0x01E9442C TBZ X0, 0x0, 0x1E9443C
	0x01E94430 MOV X0, X19
	0x01E94434 BL 0x1E93668
	0x01E94438 TBZ X0, 0x0, 0x1E94444

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2546000
	005 Move W8, [X20+663]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {25}
	011 Move X0, 0x2263000
	012 Move X0, [X0+920]
	013 Call 0x1C17CF4
	014 Move X0, 0x226B000
	015 Move X0, [X0+784]
	016 Call 0x1C17CF4
	017 Move X0, 0x2261000
	018 Move X0, [X0+1544]
	019 Call 0x1C17CF4
	020 Move X0, 0x2260000
	021 Move X0, [X0+2440]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+663], W8
	025 Move X8, 0x2263000
	026 Move X9, [X19+32]
	027 Move X8, [X8+920]
	028 Compare X9, 0
	029 JumpIfEqual {31}
	030 Move W9, [X9]
	031 Move X0, [X8]
	032 Move [X31+8], W9
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Add X0, X31, 8
	038 Call NetworkId.ToString, X0
	039 Move W8, [X19+96]
	040 Move X20, X0
	041 Move TEMP, X8
	042 And TEMP, TEMP, 2
	043 Compare TEMP, 2
	044 JumpIfEqual {59}
	045 Move X0, X19
	046 Move X1, X31
	047 Call Object.get_name, X0
	048 Move X8, 0x226B000
	049 Move X8, [X8+784]
	050 Move X9, 0x2261000
	051 Move X9, [X9+1544]
	052 Move X1, X0
	053 Move X8, [X8]
	054 Move X3, X31
	055 Move X2, [X9]
	056 Move X0, X8
	057 Call String.Concat, X0, X1, X2
	058 Move X1, X0
	059 Move X8, 0x2260000
	060 Move X8, [X8+2440]
	061 Move X1, [X8]
	062 Move X0, X20
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X2, X31
	066 Move X30, [X31+32]
	067 Call String.Concat, X0, X1
	068 Return X0

Method: Fusion.Simulation get_Simulation()

Disassembly:
	0x01E9443C LDP X30, X19, [X31], #0x10
	0x01E94440 RET
	0x01E94444 LDR X8, [X19 + 0x30]
	0x01E94448 CBZ X8, 0x1E94478
	0x01E9444C LDR X9, [X19 + 0x20]
	0x01E94450 LDR X0, [X8 + 0x50]
	0x01E94454 CBZ X9, 0x1E94470
	0x01E94458 LDR W1, [X9]
	0x01E9445C CBZ X0, 0x1E94478
	0x01E94460 MOVZ W2, 0x1
	0x01E94464 MOV X3, X31
	0x01E94468 LDP X30, X19, [X31], #0x10
	0x01E9446C B 0x1EC25A4
	0x01E94470 MOV X1, X31
	0x01E94474 CBNZ X0, 0x1E94460
	0x01E94478 BL 0x1C16F20
	0x01E9447C STP X30, X19, [X31 - 0x10]!
	0x01E94480 MOV X19, X0
	0x01E94484 LDR X0, [X0 + 0x30]
	0x01E94488 CBZ X0, 0x1E944E0
	0x01E9448C MOV X1, X31
	0x01E94490 BL 0x1E9E87C
	0x01E94494 TBZ X0, 0x0, 0x1E944D0
	0x01E94498 MOV X0, X19
	0x01E9449C BL 0x1E93668
	0x01E944A0 TBZ X0, 0x0, 0x1E944D0
	0x01E944A4 LDR X8, [X19 + 0x30]
	0x01E944A8 CBZ X8, 0x1E944E0
	0x01E944AC LDR X9, [X19 + 0x20]
	0x01E944B0 LDR X0, [X8 + 0x50]
	0x01E944B4 CBZ X9, 0x1E944D8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2545000
	006 Move W8, [X21+2594]
	007 Move X20, [X0+48]
	008 Move X19, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x2260000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X21+2594], W8
	016 Move X8, 0x2260000
	017 Move X8, [X8+1432]
	018 Move X0, [X8]
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move X0, X20
	024 Move X1, X31
	025 Call Object.op_Implicit, X0
	026 Move W8, W0
	027 Move X0, X31
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {36}
	032 Move X8, [X19+48]
	033 Compare X8, 0
	034 JumpIfEqual {41}
	035 Move X0, [X8+80]
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return X0
	041 Call 0x1C17F20

Method: System.Boolean get_IsValid()

Disassembly:
	0x01E944B8 LDR W1, [X9]
	0x01E944BC CBZ X0, 0x1E944E0
	0x01E944C0 MOV W2, W31
	0x01E944C4 MOV X3, X31
	0x01E944C8 LDP X30, X19, [X31], #0x10
	0x01E944CC B 0x1EC25A4
	0x01E944D0 LDP X30, X19, [X31], #0x10
	0x01E944D4 RET
	0x01E944D8 MOV X1, X31
	0x01E944DC CBNZ X0, 0x1E944C0
	0x01E944E0 BL 0x1C16F20
	0x01E944E4 MOV X1, X31
	0x01E944E8 B 0x1E94228
	0x01E944EC CBZ X0, 0x1E944FC
	0x01E944F0 LDR X8, [X0 + 0x20]
	0x01E944F4 CBZ X8, 0x1E94500
	0x01E944F8 LDR W0, [X8]
	0x01E944FC RET
	0x01E94500 MOV X0, X31
	0x01E94504 RET
	0x01E94508 STP X30, X21, [X31 - 0x20]!
	0x01E9450C STP X20, X19, [X31 + 0x10]
	0x01E94510 MOV W19, W2
	0x01E94514 MOV X20, X1
	0x01E94518 MOV X21, X0
	0x01E9451C BL 0x1E93668
	0x01E94520 TBZ X0, 0x0, 0x1E94558
	0x01E94524 LDR X8, [X21 + 0x30]
	0x01E94528 CBZ X8, 0x1E9456C
	0x01E9452C LDR X9, [X21 + 0x20]
	0x01E94530 LDR X0, [X8 + 0x50]
	0x01E94534 CBZ X9, 0x1E94564
	0x01E94538 LDR W2, [X9]
	0x01E9453C CBZ X0, 0x1E9456C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2545000
	006 Move W8, [X21+2594]
	007 Move X20, [X0+48]
	008 Move X19, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x2260000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X21+2594], W8
	016 Move X8, 0x2260000
	017 Move X8, [X8+1432]
	018 Move X0, [X8]
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move X0, X20
	024 Move X1, X31
	025 Call Object.op_Implicit, X0
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {41}
	030 Move X0, [X19+48]
	031 Compare X0, 0
	032 JumpIfEqual {47}
	033 Move X1, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X2, X31
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Call NetworkRunner.Exists, X0, X1
	040 Return X0
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move W0, W31
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return X0
	047 Call 0x1C17F20

Method: System.Boolean get_IsInSimulation()

Disassembly:
	0x01E94540 AND X1, X20, 0x0
	0x01E94544 AND W3, W19, 0x1
	0x01E94548 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move W8, [X0+98]
	002 And W0, W8, 1
	003 Return X0

Method: Fusion.NetworkObjectHeader* get_Header()

Disassembly:
	0x01E9454C MOV X4, X31
	0x01E94550 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Int32* get_BehaviourChangedTickArray()

Disassembly:
	0x01E94554 B 0x1EC263C
	0x01E94558 LDP X20, X19, [X31 + 0x10]
	0x01E9455C LDP X30, X21, [X31], #0x20
	0x01E94560 RET
	0x01E94564 MOV X2, X31
	0x01E94568 CBNZ X0, 0x1E94540
	0x01E9456C BL 0x1C16F20
	0x01E94570 STP X30, X21, [X31 - 0x20]!
	0x01E94574 STP X20, X19, [X31 + 0x10]
	0x01E94578 CBZ X1, 0x1E94600
	0x01E9457C LDR X8, [X0 + 0x20]
	0x01E94580 MOV X20, X0
	0x01E94584 CBZ X8, 0x1E94600

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+32]
	003 Compare X8, 0
	004 JumpIfEqual {17}
	005 Move X9, [X0+120]
	006 Compare X9, 0
	007 JumpIfEqual {17}
	008 NotImplemented "Instruction LDRSH not yet implemented."
	009 Move W9, [X9+24]
	010 Subtract W9, W10, W9
	011 Move X9, X9
	012 ShiftRight X9, 32
	013 And X9, X9, 0x7FFFFFFF
	014 Add X0, X8, X9
	015 Move X30, [X31+16]
	016 Return X0
	017 Call 0x1C17F20

Method: System.Boolean get_HasInputAuthority()

Disassembly:
	0x01E94588 LDRSH W10, [X8 + 0x4]
	0x01E9458C LDR X9, [X1 + 0x20]
	0x01E94590 ADD X0, X8, 0x50
	0x01E94594 MOV X19, X1
	0x01E94598 UBFM W8, W10, 0x1E, 0x1D
	0x01E9459C ADD X1, X9, 0x50
	0x01E945A0 SUB W2, W8, 0x50
	0x01E945A4 MOV X3, X31
	0x01E945A8 BL 0x1E35764
	0x01E945AC LDR X8, [X20 + 0x70]
	0x01E945B0 CBZ X8, 0x1E94600
	0x01E945B4 MOVZ W21, 0x4
	0x01E945B8 LDR W10, [X8 + 0x18]
	0x01E945BC SUB X9, X21, 0x4
	0x01E945C0 CMP W9, W10
	0x01E945C4 B.GE 0x1E94604
	0x01E945C8 CMP W9, W10
	0x01E945CC B.CS 0x1E94610
	0x01E945D0 LDR X10, [X19 + 0x70]
	0x01E945D4 CBZ X10, 0x1E94600
	0x01E945D8 LDR W11, [X10 + 0x18]
	0x01E945DC CMP W9, W11
	0x01E945E0 B.CS 0x1E94610
	0x01E945E4 LDR X0, [X8, X21, LSL #3]
	0x01E945E8 CBZ X0, 0x1E94600
	0x01E945EC LDR X1, [X10, X21, LSL #3]
	0x01E945F0 BL 0x1E94570
	0x01E945F4 LDR X8, [X20 + 0x70]
	0x01E945F8 ADD X21, X21, 0x1
	0x01E945FC CBNZ X8, 0x1E945B8
	0x01E94600 BL 0x1C16F20
	0x01E94604 LDP X20, X19, [X31 + 0x10]
	0x01E94608 LDP X30, X21, [X31], #0x20
	0x01E9460C RET
	0x01E94610 BL 0x1C16F28
	0x01E94614 STR X30, [X31 - 0x10]!
	0x01E94618 LDR X8, [X0 + 0x20]
	0x01E9461C CBZ X8, 0x1E94640
	0x01E94620 LDRSH W9, [X8 + 0x4]
	0x01E94624 ADD X0, X8, 0x50
	0x01E94628 ADD X1, X1, 0x50
	0x01E9462C MOV X3, X31
	0x01E94630 UBFM W8, W9, 0x1E, 0x1D
	0x01E94634 SUB W2, W8, 0x50
	0x01E94638 LDR X30, [X31], #0x10
	0x01E9463C B 0x1E35764
	0x01E94640 BL 0x1C16F20
	0x01E94644 CBZ X1, 0x1E94660
	0x01E94648 LDRB W8, [X1 + 0x60]
	0x01E9464C TBNZ X8, 0x1, 0x1E94660
	0x01E94650 LDR X8, [X1 + 0x20]
	0x01E94654 CBZ X8, 0x1E94660
	0x01E94658 LDR W0, [X8]
	0x01E9465C RET
	0x01E94660 MOV X0, X31
	0x01E94664 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0+48]
	007 Compare X8, 0
	008 JumpIfEqual {58}
	009 Move X19, [X8+80]
	010 Compare X19, 0
	011 JumpIfEqual {65}
	012 Move X21, 0x2546000
	013 Move W8, [X21+750]
	014 Move X20, X0
	015 Compare W8, 0
	016 JumpIfNotEqual {22}
	017 Move X0, 0x2263000
	018 Move X0, [X0+3648]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+750], W8
	022 Move X8, [X20+32]
	023 Compare X8, 0
	024 JumpIfEqual {58}
	025 Move X8, [X19]
	026 Move X0, X19
	027 Move X9, [X8+616]
	028 Move X1, [X8+624]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move X22, 0x2263000
	031 Move X22, [X22+3648]
	032 Move X21, X0
	033 Move X8, [X22]
	034 Move W9, [X8+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X8, [X20+32]
	041 Compare X8, 0
	042 JumpIfEqual {65}
	043 Move X9, [X19]
	044 Move W20, [X8+28]
	045 Move X0, X19
	046 Move X8, [X9+616]
	047 Move X1, [X9+624]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move X8, [X22]
	050 Move X19, X0
	051 Move W9, [X8+224]
	052 Compare W9, 0
	053 JumpIfNotEqual {56}
	054 Move X0, X8
	055 Call 0x1C17DFC
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction CSET not yet implemented."
	058 Move W0, W31
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+48]
	064 Return X0
	065 Call 0x1C17F20

Method: System.Boolean get_HasStateAuthority()

Disassembly:
	0x01E94668 CBZ X0, 0x1E94680
	0x01E9466C LDRB W8, [X0 + 0x60]
	0x01E94670 TBNZ X8, 0x1, 0x1E94684
	0x01E94674 LDR X8, [X0 + 0x20]
	0x01E94678 CBZ X8, 0x1E94684
	0x01E9467C LDR W0, [X8]
	0x01E94680 RET
	0x01E94684 MOV X0, X31
	0x01E94688 RET
	0x01E9468C STP X30, X23, [X31 - 0x30]!
	0x01E94690 STP X22, X21, [X31 + 0x10]
	0x01E94694 STP X20, X19, [X31 + 0x20]
	0x01E94698 ADRP X23, 0x2545000
	0x01E9469C ADRP X22, 0x2262000
	0x01E946A0 LDRB W8, [X23 + 0x2A0]
	0x01E946A4 LDR X22, [X22 + 0x398]
	0x01E946A8 MOV X19, X2
	0x01E946AC MOV X21, X1
	0x01E946B0 MOV X20, X0
	0x01E946B4 TBNZ X8, 0x0, 0x1E946CC
	0x01E946B8 ADRP X0, 0x2262000
	0x01E946BC LDR X0, [X0 + 0x398]
	0x01E946C0 BL 0x1C16CF4
	0x01E946C4 MOVZ W8, 0x1
	0x01E946C8 STRB W8, [X23 + 0x2A0]
	0x01E946CC LDR X0, [X22]
	0x01E946D0 LDR W8, [X0 + 0xE0]
	0x01E946D4 CBZ W8, 0x1E94700
	0x01E946D8 CBZ W21, 0x1E94708
	0x01E946DC CBZ X20, 0x1E9471C
	0x01E946E0 AND X1, X21, 0x0
	0x01E946E4 MOV X0, X20
	0x01E946E8 MOV X2, X19
	0x01E946EC LDP X20, X19, [X31 + 0x20]
	0x01E946F0 LDP X22, X21, [X31 + 0x10]
	0x01E946F4 MOV X3, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+48]
	005 Compare X8, 0
	006 JumpIfEqual {22}
	007 Move X19, [X8+80]
	008 Compare X19, 0
	009 JumpIfEqual {44}
	010 Move X20, X0
	011 Move X0, X19
	012 Move X1, X31
	013 Call Simulation.get_Topology, X0
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X0, X19
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X1, X31
	019 Move X30, [X31+32]
	020 Call Simulation.get_IsServer, X0
	021 Return X0
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move W0, W31
	025 Move X30, [X31+32]
	026 Return X0
	027 Move X8, [X19]
	028 Move X0, X19
	029 Move X9, [X8+616]
	030 Move X1, [X8+624]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X8, [X20+32]
	033 Compare X8, 0
	034 JumpIfEqual {44}
	035 Move W1, [X8+32]
	036 And X2, X0, 0
	037 Move X0, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X3, X31
	041 Move X30, [X31+32]
	042 Call 0x1DC08E4
	043 Return X0
	044 Call 0x1C17F20

Method: System.Boolean get_IsProxy()

Disassembly:
	0x01E946F8 LDP X30, X23, [X31], #0x30
	0x01E946FC B 0x1EA323C
	0x01E94700 BL 0x1C16DFC
	0x01E94704 CBNZ W21, 0x1E946DC
	0x01E94708 STR X31, [X19]
	0x01E9470C LDP X20, X19, [X31 + 0x20]
	0x01E94710 LDP X22, X21, [X31 + 0x10]
	0x01E94714 LDP X30, X23, [X31], #0x30
	0x01E94718 RET
	0x01E9471C BL 0x1C16F20
	0x01E94720 STR X1, [X0 + 0x30]
	0x01E94724 RET
	0x01E94728 STR X31, [X0 + 0x30]
	0x01E9472C RET
	0x01E94730 RET
	0x01E94734 RET
	0x01E94738 SUB X31, X31, 0x40
	0x01E9473C STP X30, X23, [X31 + 0x10]
	0x01E94740 STP X22, X21, [X31 + 0x20]
	0x01E94744 STP X20, X19, [X31 + 0x30]
	0x01E94748 ADRP X21, 0x2545000
	0x01E9474C LDRB W8, [X21 + 0x2A1]
	0x01E94750 MOV X19, X1
	0x01E94754 MOV X20, X0
	0x01E94758 TBNZ X8, 0x0, 0x1E947AC
	0x01E9475C ADRP X0, 0x2262000
	0x01E94760 LDR X0, [X0 + 0x398]
	0x01E94764 BL 0x1C16CF4
	0x01E94768 ADRP X0, 0x2268000
	0x01E9476C LDR X0, [X0 + 0xE80]
	0x01E94770 BL 0x1C16CF4
	0x01E94774 ADRP X0, 0x225F000
	0x01E94778 LDR X0, [X0 + 0xDD8]
	0x01E9477C BL 0x1C16CF4
	0x01E94780 ADRP X0, 0x2269000
	0x01E94784 LDR X0, [X0 + 0x898]
	0x01E94788 BL 0x1C16CF4
	0x01E9478C ADRP X0, 0x225F000
	0x01E94790 LDR X0, [X0 + 0xEC8]
	0x01E94794 BL 0x1C16CF4
	0x01E94798 ADRP X0, 0x225F000
	0x01E9479C LDR X0, [X0 + 0x848]
	0x01E947A0 BL 0x1C16CF4
	0x01E947A4 MOVZ W8, 0x1
	0x01E947A8 STRB W8, [X21 + 0x2A1]
	0x01E947AC CBZ X19, 0x1E948EC
	0x01E947B0 ADRP X8, 0x225F000
	0x01E947B4 LDR X8, [X8 + 0xEC8]
	0x01E947B8 ADRP X21, 0x2262000
	0x01E947BC MOV X0, X19
	0x01E947C0 MOV X2, X31
	0x01E947C4 LDR X1, [X8]
	0x01E947C8 LDR X21, [X21 + 0x398]
	0x01E947CC BL 0x32333E0
	0x01E947D0 MOV X0, X20
	0x01E947D4 MOV X1, X31
	0x01E947D8 BL 0x1E86B98
	0x01E947DC MOV X1, X0
	0x01E947E0 MOV X0, X19
	0x01E947E4 MOV X2, X31
	0x01E947E8 BL 0x32333E0
	0x01E947EC LDR X8, [X20 + 0x20]
	0x01E947F0 CBZ X8, 0x1E947FC
	0x01E947F4 LDR W23, [X8]
	0x01E947F8 B 0x1E94800
	0x01E947FC MOV W23, W31
	0x01E94800 LDR X0, [X21]
	0x01E94804 LDR W8, [X0 + 0xE0]
	0x01E94808 CBNZ W8, 0x1E94810
	0x01E9480C BL 0x1C16DFC
	0x01E94810 ADRP X22, 0x2268000
	0x01E94814 LDR X22, [X22 + 0xE80]
	0x01E94818 CBZ W23, 0x1E9486C
	0x01E9481C ADRP X8, 0x225F000
	0x01E94820 LDR X8, [X8 + 0xDD8]
	0x01E94824 MOV X0, X19
	0x01E94828 MOV X2, X31
	0x01E9482C LDR X1, [X8]
	0x01E94830 BL 0x32333E0
	0x01E94834 LDR X8, [X20 + 0x20]
	0x01E94838 CBZ X8, 0x1E94840
	0x01E9483C LDR W8, [X8]
	0x01E94840 LDR X0, [X21]
	0x01E94844 STR W8, [X31 + 0x8]
	0x01E94848 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Call NetworkObject.get_Simulation, X0
	008 Compare X0, 0
	009 JumpIfEqual {61}
	010 Move X0, X19
	011 Call NetworkObject.get_Simulation, X0
	012 Compare X0, 0
	013 JumpIfEqual {94}
	014 Move X21, 0x2546000
	015 Move W8, [X21+750]
	016 Move X20, X0
	017 Compare W8, 0
	018 JumpIfNotEqual {24}
	019 Move X0, 0x2263000
	020 Move X0, [X0+3648]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+750], W8
	024 Compare X19, 0
	025 JumpIfEqual {94}
	026 Move X8, [X19+32]
	027 Compare X8, 0
	028 JumpIfEqual {62}
	029 Move X8, [X20]
	030 Move X0, X20
	031 Move X9, [X8+616]
	032 Move X1, [X8+624]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move X22, 0x2263000
	035 Move X22, [X22+3648]
	036 Move X21, X0
	037 Move X8, [X22]
	038 Move W9, [X8+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X8
	042 Call 0x1C17DFC
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X8, [X19+32]
	045 Compare X8, 0
	046 JumpIfEqual {94}
	047 Move X9, [X20]
	048 Move W21, [X8+28]
	049 Move X0, X20
	050 Move X8, [X9+616]
	051 Move X1, [X9+624]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X8, [X22]
	054 Move X20, X0
	055 Move W9, [X8+224]
	056 Compare W9, 0
	057 JumpIfNotEqual {60}
	058 Move X0, X8
	059 Call 0x1C17DFC
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move W8, W31
	062 Move X0, X19
	063 Call NetworkObject.get_Simulation, X0
	064 Compare X0, 0
	065 JumpIfEqual {94}
	066 Move X1, X31
	067 Move X20, X0
	068 Call Simulation.get_Topology, X0
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X0, X20
	071 Move X1, X31
	072 Call Simulation.get_IsServer, X0
	073 Move X8, [X20]
	074 Move X0, X20
	075 Move X9, [X8+616]
	076 Move X1, [X8+624]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X8, [X19+32]
	079 Compare X8, 0
	080 JumpIfEqual {94}
	081 Move W1, [X8+32]
	082 And X2, X0, 0
	083 Move X0, X20
	084 Move X3, X31
	085 Call 0x1DC08E4
	086 Xor W8, W0, 1
	087 Move X20, [X31+32]
	088 Move X19, [X31+40]
	089 Move X22, [X31+16]
	090 Move X21, [X31+24]
	091 And W0, W8, 1
	092 Move X30, [X31+48]
	093 Return X0
	094 Call 0x1C17F20

Method: Fusion.RenderTimeframe get_RenderTimeframe()

Disassembly:
	0x01E9484C CBNZ W8, 0x1E94854
	0x01E94850 BL 0x1C16DFC
	0x01E94854 ADD X0, X31, 0x8
	0x01E94858 BL 0x1E93048
	0x01E9485C MOV X1, X0
	0x01E94860 MOV X0, X19
	0x01E94864 MOV X2, X31
	0x01E94868 BL 0x32333E0
	0x01E9486C MOV X0, X19
	0x01E94870 MOV X1, X31
	0x01E94874 BL 0x323260C
	0x01E94878 LDR X8, [X22]
	0x01E9487C LDR X21, [X20 + 0x30]
	0x01E94880 MOV W20, W0
	0x01E94884 LDR W9, [X8 + 0xE0]
	0x01E94888 CBNZ W9, 0x1E94894
	0x01E9488C MOV X0, X8
	0x01E94890 BL 0x1C16DFC
	0x01E94894 ADRP X22, 0x225F000
	0x01E94898 LDR X22, [X22 + 0x848]
	0x01E9489C MOV X0, X19
	0x01E948A0 MOV X1, X21
	0x01E948A4 MOV X2, X31
	0x01E948A8 BL 0x1EA6828
	0x01E948AC TBZ X0, 0x0, 0x1E948CC
	0x01E948B0 ADRP X8, 0x2269000
	0x01E948B4 LDR X8, [X8 + 0x898]
	0x01E948B8 MOV X0, X19
	0x01E948BC MOV W1, W20
	0x01E948C0 MOV X3, X31
	0x01E948C4 LDR X2, [X8]
	0x01E948C8 BL 0x3234078
	0x01E948CC LDR X1, [X22]
	0x01E948D0 MOV X0, X19
	0x01E948D4 LDP X20, X19, [X31 + 0x30]
	0x01E948D8 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+98]
	005 Move TEMP, X8
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfEqual {24}
	009 Move X20, X0
	010 Call NetworkObject.get_Simulation, X0
	011 Compare X0, 0
	012 JumpIfEqual {42}
	013 Move X1, X31
	014 Move X19, X0
	015 Call Simulation.get_Topology, X0
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X0, X19
	018 Move X1, X31
	019 Call Simulation.get_IsServer, X0
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {42}
	024 Move W0, W31
	025 Move X8, [X19]
	026 Move X0, X19
	027 Move X9, [X8+616]
	028 Move X1, [X8+624]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move X8, [X20+32]
	031 Compare X8, 0
	032 JumpIfEqual {47}
	033 Move W1, [X8+32]
	034 And X2, X0, 0
	035 Move X0, X19
	036 Move X3, X31
	037 Call 0x1DC08E4
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {24}
	042 Move W0, 1
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Return X0
	047 Call 0x1C17F20

Method: Fusion.RenderSource get_RenderSource()

Disassembly:
	0x01E948DC LDP X30, X23, [X31 + 0x10]
	0x01E948E0 MOV X2, X31

ISIL:
	001 Move W0, [X0+128]
	002 Return X0

Method: System.Void set_RenderSource(Fusion.RenderSource value)

Disassembly:
	0x01E948E4 ADD X31, X31, 0x40
	0x01E948E8 B 0x32333E0

ISIL:
	001 Move [X0+128], W1
	002 Return 

Method: System.Single get_RenderTime()

Disassembly:
	0x01E948EC BL 0x1C16F20
	0x01E948F0 MOVZ W8, 0x1
	0x01E948F4 MOV X1, X31
	0x01E948F8 STR W8, [X0 + 0x58]
	0x01E948FC B 0x1E82058
	0x01E94900 STR X30, [X31 - 0x30]!
	0x01E94904 STP X22, X21, [X31 + 0x10]
	0x01E94908 STP X20, X19, [X31 + 0x20]
	0x01E9490C LDR X8, [X2 + 0x8]
	0x01E94910 STP X1, X2, [X0 + 0x20]
	0x01E94914 MOV X19, X0
	0x01E94918 MOV X20, X2
	0x01E9491C STR X8, [X0 + 0x10]
	0x01E94920 LDRB W22, [X2 + 0x52]
	0x01E94924 STR X0, [X0 + 0x40]
	0x01E94928 MOV X0, X2
	0x01E9492C MOV X21, X1
	0x01E94930 BL 0x1C16D84
	0x01E94934 TBZ X0, 0x0, 0x1E9494C
	0x01E94938 CMP W22, 0x2
	0x01E9493C B.NE 0x1E94988
	0x01E94940 ADRP X8, 0xFFFFFFFFFFB01000
	0x01E94944 ADD X8, X8, 0x664
	0x01E94948 B 0x1E949CC
	0x01E9494C CMP W22, 0x1
	0x01E94950 B.NE 0x1E94984
	0x01E94954 LDRB W8, [X19 + 0x70]
	0x01E94958 CBZ W8, 0x1E9499C
	0x01E9495C MOV X0, X20
	0x01E94960 BL 0x1C16D7C
	0x01E94964 MOV W21, W0
	0x01E94968 MOV X0, X20
	0x01E9496C BL 0x1C17238
	0x01E94970 TBZ X21, 0x0, 0x1E949A8
	0x01E94974 TBZ X0, 0x0, 0x1E949B8
	0x01E94978 ADRP X8, 0xFFFFFFFFFFB01000
	0x01E9497C ADD X8, X8, 0x788
	0x01E94980 B 0x1E949CC
	0x01E94984 CBZ X21, 0x1E949EC
	0x01E94988 LDR X8, [X19 + 0x10]
	0x01E9498C LDR X9, [X19 + 0x20]
	0x01E94990 STR X8, [X19 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2545000
	006 Move W8, [X21+2594]
	007 Move X20, [X0+48]
	008 Move X19, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x2260000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X21+2594], W8
	016 Move X8, 0x2260000
	017 Move X8, [X8+1432]
	018 Move X0, [X8]
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move X0, X20
	024 Move X1, X31
	025 Call Object.op_Implicit, X0
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {45}
	030 Move X0, X19
	031 Call NetworkObject.get_RenderTimeframe, X0
	032 Move X8, [X19+48]
	033 Compare X8, 0
	034 JumpIfEqual {59}
	035 Compare W0, 0
	036 JumpIfEqual {51}
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X0, X8
	040 Move X1, X31
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Call NetworkRunner.get_RemoteRenderTime, X0
	044 Return V0
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move S0, W31
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return V0
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X0, X8
	054 Move X1, X31
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Call NetworkRunner.get_LocalRenderTime, X0
	058 Return V0
	059 Call 0x1C17F20

Method: Fusion.PlayerRef get_InputAuthority()

Disassembly:
	0x01E94994 STR X9, [X19 + 0x40]
	0x01E94998 B 0x1E949D0
	0x01E9499C ADRP X8, 0xFFFFFFFFFFB01000
	0x01E949A0 ADD X8, X8, 0x63C
	0x01E949A4 B 0x1E949CC
	0x01E949A8 TBZ X0, 0x0, 0x1E949C4
	0x01E949AC ADRP X8, 0xFFFFFFFFFFB01000
	0x01E949B0 ADD X8, X8, 0x6B0
	0x01E949B4 B 0x1E949CC
	0x01E949B8 ADRP X8, 0xFFFFFFFFFFB01000
	0x01E949BC ADD X8, X8, 0x73C
	0x01E949C0 B 0x1E949CC
	0x01E949C4 ADRP X8, 0xFFFFFFFFFFB01000
	0x01E949C8 ADD X8, X8, 0x67C
	0x01E949CC STR X8, [X19 + 0x18]
	0x01E949D0 ADRP X8, 0xFFFFFFFFFFB01000
	0x01E949D4 ADD X8, X8, 0x5D8
	0x01E949D8 STR X8, [X19 + 0x38]
	0x01E949DC LDP X20, X19, [X31 + 0x20]
	0x01E949E0 LDP X22, X21, [X31 + 0x10]
	0x01E949E4 LDR X30, [X31], #0x30
	0x01E949E8 RET
	0x01E949EC ADRP X1, 0xFFFFFFFFFEC87000
	0x01E949F0 ADD X1, X1, 0xEE3
	0x01E949F4 MOV X0, X31
	0x01E949F8 BL 0x1C16F3C
	0x01E949FC MOV X1, X31
	0x01E94A00 BL 0x1C16DEC
	0x01E94A04 LDR X8, [X0 + 0x40]
	0x01E94A08 LDR X4, [X0 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2546000
	005 Move W8, [X20+664]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2263000
	012 Move X0, [X0+3648]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+664], W8
	016 Move X8, [X19+32]
	017 Compare X8, 0
	018 JumpIfEqual {26}
	019 Move X9, [X19+48]
	020 Compare X9, 0
	021 JumpIfEqual {38}
	022 Move X9, [X9+80]
	023 Compare X9, 0
	024 JumpIfEqual {38}
	025 Move W0, [X8+28]
	026 Move X8, 0x2263000
	027 Move X8, [X8+3648]
	028 Move X0, [X8]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X31
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return X0
	038 Call 0x1C17F20

Method: Fusion.PlayerRef get_StateAuthority()

Disassembly:
	0x01E94A0C LDR X3, [X0 + 0x28]
	0x01E94A10 AND X2, X2, 0x0
	0x01E94A14 MOV X0, X8
	0x01E94A18 BR X4
	0x01E94A1C SUB X31, X31, 0x60
	0x01E94A20 STR X30, [X31 + 0x20]
	0x01E94A24 STP X24, X23, [X31 + 0x30]
	0x01E94A28 STP X22, X21, [X31 + 0x40]
	0x01E94A2C STP X20, X19, [X31 + 0x50]
	0x01E94A30 ADRP X24, 0x2545000
	0x01E94A34 STR W2, [X31 + 0x28]
	0x01E94A38 ADRP X23, 0x2262000
	0x01E94A3C LDRB W8, [X24 + 0x2A2]
	0x01E94A40 LDR X23, [X23 + 0xE40]
	0x01E94A44 MOV X19, X4
	0x01E94A48 MOV X20, X3
	0x01E94A4C MOV X22, X1
	0x01E94A50 MOV X21, X0
	0x01E94A54 TBNZ X8, 0x0, 0x1E94A6C
	0x01E94A58 ADRP X0, 0x2262000
	0x01E94A5C LDR X0, [X0 + 0xE40]
	0x01E94A60 BL 0x1C16CF4
	0x01E94A64 MOVZ W8, 0x1
	0x01E94A68 STRB W8, [X24 + 0x2A2]
	0x01E94A6C LDR X0, [X23]
	0x01E94A70 ADD X1, X31, 0x28
	0x01E94A74 STP X31, X31, [X31 + 0x10]
	0x01E94A78 STR X22, [X31 + 0x8]
	0x01E94A7C BL 0x1C16E04
	0x01E94A80 STR X0, [X31 + 0x10]
	0x01E94A84 ADD X1, X31, 0x8
	0x01E94A88 MOV X0, X21
	0x01E94A8C MOV X2, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2546000
	005 Move W8, [X20+665]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2263000
	012 Move X0, [X0+3648]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+665], W8
	016 Move X8, [X19+32]
	017 Compare X8, 0
	018 JumpIfEqual {29}
	019 Move X8, [X19+48]
	020 Compare X8, 0
	021 JumpIfEqual {41}
	022 Move X0, [X8+80]
	023 Compare X0, 0
	024 JumpIfEqual {41}
	025 Move X1, X19
	026 Move X2, X31
	027 Call 0x1E9CD10
	028 And X0, X0, 0
	029 Move X8, 0x2263000
	030 Move X8, [X8+3648]
	031 Move X0, [X8]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X31
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Return X0
	041 Call 0x1C17F20

Method: System.Boolean get_IsSpawnable()

Disassembly:
	0x01E94A90 MOV X3, X19
	0x01E94A94 BL 0x1C16CB0
	0x01E94A98 LDP X20, X19, [X31 + 0x50]
	0x01E94A9C LDP X22, X21, [X31 + 0x40]

ISIL:
	001 Move W8, [X0+94]
	002 And W31, W8, 1
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Void set_IsSpawnable(System.Boolean value)

Disassembly:
	0x01E94AA0 LDP X24, X23, [X31 + 0x30]

ISIL:
	001 Return 

Method: System.Void PrepareBehaviourOrder()

Disassembly:
	0x01E94AA4 LDR X30, [X31 + 0x20]
	0x01E94AA8 ADD X31, X31, 0x60
	0x01E94AAC RET
	0x01E94AB0 STR X30, [X31 - 0x10]!
	0x01E94AB4 MOV X0, X1
	0x01E94AB8 MOV X1, X31
	0x01E94ABC BL 0x1C16CB4
	0x01E94AC0 CBZ X0, 0x1E94AD4
	0x01E94AC4 BL 0x1C16E08
	0x01E94AC8 LDRB W0, [X0]
	0x01E94ACC LDR X30, [X31], #0x10
	0x01E94AD0 RET
	0x01E94AD4 BL 0x1C16F20
	0x01E94AD8 STR X30, [X31 - 0x30]!
	0x01E94ADC STP X22, X21, [X31 + 0x10]
	0x01E94AE0 STP X20, X19, [X31 + 0x20]
	0x01E94AE4 LDR X8, [X2 + 0x8]
	0x01E94AE8 STP X1, X2, [X0 + 0x20]
	0x01E94AEC MOV X19, X0
	0x01E94AF0 MOV X20, X2
	0x01E94AF4 STR X8, [X0 + 0x10]
	0x01E94AF8 LDRB W22, [X2 + 0x52]
	0x01E94AFC STR X0, [X0 + 0x40]
	0x01E94B00 MOV X0, X2
	0x01E94B04 MOV X21, X1
	0x01E94B08 BL 0x1C16D84
	0x01E94B0C TBZ X0, 0x0, 0x1E94B24
	0x01E94B10 CMP W22, 0x2
	0x01E94B14 B.NE 0x1E94B60
	0x01E94B18 ADRP X8, 0xFFFFFFFFFFB01000
	0x01E94B1C ADD X8, X8, 0x8A8
	0x01E94B20 B 0x1E94BA4
	0x01E94B24 CMP W22, 0x1
	0x01E94B28 B.NE 0x1E94B5C
	0x01E94B2C LDRB W8, [X19 + 0x70]
	0x01E94B30 CBZ W8, 0x1E94B74
	0x01E94B34 MOV X0, X20
	0x01E94B38 BL 0x1C16D7C
	0x01E94B3C MOV W21, W0
	0x01E94B40 MOV X0, X20
	0x01E94B44 BL 0x1C17238
	0x01E94B48 TBZ X21, 0x0, 0x1E94B80
	0x01E94B4C TBZ X0, 0x0, 0x1E94B90
	0x01E94B50 ADRP X8, 0xFFFFFFFFFFB01000
	0x01E94B54 ADD X8, X8, 0x9CC
	0x01E94B58 B 0x1E94BA4
	0x01E94B5C CBZ X21, 0x1E94BC4
	0x01E94B60 LDR X8, [X19 + 0x10]
	0x01E94B64 LDR X9, [X19 + 0x20]
	0x01E94B68 STR X8, [X19 + 0x18]
	0x01E94B6C STR X9, [X19 + 0x40]
	0x01E94B70 B 0x1E94BA8
	0x01E94B74 ADRP X8, 0xFFFFFFFFFFB01000
	0x01E94B78 ADD X8, X8, 0x880
	0x01E94B7C B 0x1E94BA4
	0x01E94B80 TBZ X0, 0x0, 0x1E94B9C
	0x01E94B84 ADRP X8, 0xFFFFFFFFFFB01000
	0x01E94B88 ADD X8, X8, 0x8F4
	0x01E94B8C B 0x1E94BA4
	0x01E94B90 ADRP X8, 0xFFFFFFFFFFB01000
	0x01E94B94 ADD X8, X8, 0x980
	0x01E94B98 B 0x1E94BA4
	0x01E94B9C ADRP X8, 0xFFFFFFFFFFB01000
	0x01E94BA0 ADD X8, X8, 0x8C0
	0x01E94BA4 STR X8, [X19 + 0x18]
	0x01E94BA8 ADRP X8, 0xFFFFFFFFFFB01000
	0x01E94BAC ADD X8, X8, 0x820
	0x01E94BB0 STR X8, [X19 + 0x38]
	0x01E94BB4 LDP X20, X19, [X31 + 0x20]
	0x01E94BB8 LDP X22, X21, [X31 + 0x10]
	0x01E94BBC LDR X30, [X31], #0x30
	0x01E94BC0 RET
	0x01E94BC4 ADRP X1, 0xFFFFFFFFFEC87000
	0x01E94BC8 ADD X1, X1, 0xEE3
	0x01E94BCC MOV X0, X31
	0x01E94BD0 BL 0x1C16F3C
	0x01E94BD4 MOV X1, X31
	0x01E94BD8 BL 0x1C16DEC
	0x01E94BDC LDR X8, [X0 + 0x40]
	0x01E94BE0 LDR X4, [X0 + 0x18]
	0x01E94BE4 LDR X3, [X0 + 0x28]
	0x01E94BE8 AND X2, X2, 0x0
	0x01E94BEC MOV X0, X8
	0x01E94BF0 BR X4
	0x01E94BF4 SUB X31, X31, 0x60
	0x01E94BF8 STR X30, [X31 + 0x20]
	0x01E94BFC STP X24, X23, [X31 + 0x30]
	0x01E94C00 STP X22, X21, [X31 + 0x40]
	0x01E94C04 STP X20, X19, [X31 + 0x50]
	0x01E94C08 ADRP X24, 0x2545000
	0x01E94C0C STR W2, [X31 + 0x28]
	0x01E94C10 ADRP X23, 0x2262000
	0x01E94C14 LDRB W8, [X24 + 0x2A3]
	0x01E94C18 LDR X23, [X23 + 0xE40]
	0x01E94C1C MOV X19, X4
	0x01E94C20 MOV X20, X3
	0x01E94C24 MOV X22, X1
	0x01E94C28 MOV X21, X0
	0x01E94C2C TBNZ X8, 0x0, 0x1E94C44
	0x01E94C30 ADRP X0, 0x2262000
	0x01E94C34 LDR X0, [X0 + 0xE40]
	0x01E94C38 BL 0x1C16CF4
	0x01E94C3C MOVZ W8, 0x1
	0x01E94C40 STRB W8, [X24 + 0x2A3]
	0x01E94C44 LDR X0, [X23]
	0x01E94C48 ADD X1, X31, 0x28
	0x01E94C4C STP X31, X31, [X31 + 0x10]
	0x01E94C50 STR X22, [X31 + 0x8]
	0x01E94C54 BL 0x1C16E04
	0x01E94C58 STR X0, [X31 + 0x10]
	0x01E94C5C ADD X1, X31, 0x8
	0x01E94C60 MOV X0, X21
	0x01E94C64 MOV X2, X20
	0x01E94C68 MOV X3, X19
	0x01E94C6C BL 0x1C16CB0
	0x01E94C70 LDP X20, X19, [X31 + 0x50]
	0x01E94C74 LDP X22, X21, [X31 + 0x40]
	0x01E94C78 LDP X24, X23, [X31 + 0x30]
	0x01E94C7C LDR X30, [X31 + 0x20]
	0x01E94C80 ADD X31, X31, 0x60
	0x01E94C84 RET
	0x01E94C88 STR X30, [X31 - 0x10]!
	0x01E94C8C MOV X0, X1
	0x01E94C90 MOV X1, X31
	0x01E94C94 BL 0x1C16CB4
	0x01E94C98 CBZ X0, 0x1E94CAC
	0x01E94C9C BL 0x1C16E08
	0x01E94CA0 LDR W0, [X0]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x2546000
	012 Move W8, [X20+666]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x226B000
	019 Move X0, [X0+792]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+666], W8
	023 Move X8, [X19+120]
	024 Compare X8, 0
	025 JumpIfEqual {134}
	026 Move X9, [X8+24]
	027 Compare X9, 0
	028 JumpIfEqual {134}
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Add X22, X19, 96
	031 Move X24, 0x226B000
	032 Move X24, [X24+792]
	033 Move W27, W31
	034 Move W23, 4
	035 Move W25, 1
	036 Subtract X26, X23, 4
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X20, [X8]
	039 Compare X20, 0
	040 JumpIfEqual {126}
	041 Move X10, [X20]
	042 Move X9, [X24]
	043 Move W12, [X10+304]
	044 Move W11, [X9+304]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X10, [X10+200]
	047 Add X10, X10, X11
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, X20
	051 Move X1, X31
	052 Call Component.get_gameObject, X0
	053 Move X21, X0
	054 Move X0, X19
	055 Move X1, X31
	056 Call Component.get_gameObject, X0
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction CSET not yet implemented."
	059 Or W8, W27, W8
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {68}
	064 Move [X20+128], W31
	065 Move X8, [X19+120]
	066 Compare X8, 0
	067 JumpIfNotEqual {126}
	068 Move [X20+128], W25
	069 Move W8, [X19+96]
	070 Move X27, [X19+120]
	071 Or W8, W8, 0x4000000
	072 Move [X19+96], W8
	073 Compare X27, 0
	074 JumpIfEqual {150}
	075 Move X8, [X27+24]
	076 Compare W8, 0
	077 JumpIfEqual {149}
	078 And X8, X8, 0
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X21, [X27]
	081 Move X20, [X27+32]
	082 Compare X21, 0
	083 JumpIfEqual {91}
	084 Move X8, [X27]
	085 Move X0, X21
	086 Move X1, [X8+64]
	087 Call 0x1C17E00
	088 Compare X0, 0
	089 JumpIfEqual {151}
	090 Move X8, [X27+24]
	091 Compare W8, 0
	092 JumpIfEqual {149}
	093 Move [X27+32], X21
	094 Move X21, [X19+120]
	095 Compare X21, 0
	096 JumpIfEqual {150}
	097 Compare X20, 0
	098 JumpIfEqual {105}
	099 Move X8, [X21]
	100 Move X0, X20
	101 Move X1, [X8+64]
	102 Call 0x1C17E00
	103 Compare X0, 0
	104 JumpIfEqual {151}
	105 Move W8, [X21+24]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move [X21], X20
	108 Move X8, [X19+120]
	109 Compare X8, 0
	110 JumpIfEqual {150}
	111 Move X9, [X8+24]
	112 Compare W9, 0
	113 JumpIfEqual {149}
	114 Move X10, [X8+32]
	115 Compare X10, 0
	116 JumpIfEqual {150}
	117 And X9, X9, 0
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move [X10+104], W31
	120 Move X9, [X8]
	121 Compare X9, 0
	122 JumpIfEqual {150}
	123 Subtract W10, W23, 4
	124 Move [X9+104], W10
	125 Move W27, 1
	126 Move W9, [X8+24]
	127 Subtract X10, X23, 3
	128 Add X23, X23, 1
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move TEMP, X27
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfNotEqual {135}
	134 Add X22, X19, 96
	135 Move W8, [X22]
	136 And W8, W8, 0xFBFFFFFF
	137 Move [X22], W8
	138 Move X20, [X31+64]
	139 Move X19, [X31+72]
	140 Move X22, [X31+48]
	141 Move X21, [X31+56]
	142 Move X24, [X31+32]
	143 Move X23, [X31+40]
	144 Move X26, [X31+16]
	145 Move X25, [X31+24]
	146 Move X30, [X31+80]
	147 Move X27, [X31+88]
	148 Return 
	149 Call 0x1C17F28
	150 Call 0x1C17F20
	151 Call 0x1C17F44
	152 Move X1, X31
	153 Call 0x1C17DEC

Method: System.Void Awake()

Disassembly:
	0x01E94CA4 LDR X30, [X31], #0x10
	0x01E94CA8 RET
	0x01E94CAC BL 0x1C16F20
	0x01E94CB0 SUB X31, X31, 0x30
	0x01E94CB4 STP X30, X21, [X31 + 0x10]
	0x01E94CB8 STP X20, X19, [X31 + 0x20]
	0x01E94CBC ADRP X21, 0x2545000
	0x01E94CC0 ADRP X20, 0x226A000
	0x01E94CC4 LDRB W8, [X21 + 0x2A4]
	0x01E94CC8 LDR X20, [X20 + 0x348]
	0x01E94CCC MOV X19, X0
	0x01E94CD0 TBNZ X8, 0x0, 0x1E94CE8
	0x01E94CD4 ADRP X0, 0x226A000
	0x01E94CD8 LDR X0, [X0 + 0x348]
	0x01E94CDC BL 0x1C16CF4
	0x01E94CE0 MOVZ W8, 0x1
	0x01E94CE4 STRB W8, [X21 + 0x2A4]
	0x01E94CE8 LDP W1, W2, [X19 + 0x50]
	0x01E94CEC LDR X3, [X20]
	0x01E94CF0 ADD X0, X31, 0x8
	0x01E94CF4 STR X31, [X31 + 0x8]
	0x01E94CF8 BL 0x27B8308
	0x01E94CFC LDR X0, [X31 + 0x8]
	0x01E94D00 LDP X20, X19, [X31 + 0x20]
	0x01E94D04 LDP X30, X21, [X31 + 0x10]
	0x01E94D08 ADD X31, X31, 0x30
	0x01E94D0C RET
	0x01E94D10 STR X30, [X31 - 0x10]!
	0x01E94D14 LDR W8, [X0 + 0x50]
	0x01E94D18 ORR W8, W8, W1, 0x0
	0x01E94D1C STR W8, [X0 + 0x50]
	0x01E94D20 CBZ X2, 0x1E94D3C
	0x01E94D24 LDR W8, [X2 + 0x48]
	0x01E94D28 STR W8, [X0 + 0x54]
	0x01E94D2C LDR W8, [X2 + 0x48]
	0x01E94D30 STR W8, [X0 + 0x44]
	0x01E94D34 LDR X30, [X31], #0x10
	0x01E94D38 RET
	0x01E94D3C BL 0x1C16F20
	0x01E94D40 STR X30, [X31 - 0x10]!
	0x01E94D44 LDR W8, [X0 + 0x50]
	0x01E94D48 BIC W8, W8, W1, 0x0
	0x01E94D4C STR W8, [X0 + 0x50]
	0x01E94D50 CBZ X2, 0x1E94D6C
	0x01E94D54 LDR W8, [X2 + 0x48]
	0x01E94D58 STR W8, [X0 + 0x54]
	0x01E94D5C LDR W8, [X2 + 0x48]
	0x01E94D60 STR W8, [X0 + 0x44]
	0x01E94D64 LDR X30, [X31], #0x10
	0x01E94D68 RET
	0x01E94D6C BL 0x1C16F20
	0x01E94D70 LDR W8, [X0 + 0x50]
	0x01E94D74 BICS W31, W1, W8, 0x0
	0x01E94D78 CSET W0, EQ
	0x01E94D7C RET
	0x01E94D80 LDR W8, [X0 + 0x50]
	0x01E94D84 ANDS W31, W8, W1, 0x0
	0x01E94D88 CSET W0, NE
	0x01E94D8C RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2546000
	006 Move W8, [X20+667]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2263000
	013 Move X0, [X0+920]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+667], W8
	017 Move W8, [X19+96]
	018 Or W9, W8, 1
	019 Move [X19+96], W9
	020 Move TEMP, X8
	021 And TEMP, TEMP, 0x2000
	022 Compare TEMP, 0x2000
	023 JumpIfNotEqual {75}
	024 Move X8, [X19+32]
	025 Compare X8, 0
	026 JumpIfEqual {28}
	027 Move W20, [X8]
	028 Move W20, W31
	029 Move X8, 0x2263000
	030 Move X8, [X8+920]
	031 Move X0, [X8]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfEqual {37}
	035 Compare W20, 0
	036 JumpIfNotEqual {40}
	037 Call 0x1C17DFC
	038 Compare W20, 0
	039 JumpIfEqual {75}
	040 Move X21, 0x2545000
	041 Move W8, [X21+2594]
	042 Move X20, [X19+48]
	043 Compare W8, 0
	044 JumpIfNotEqual {50}
	045 Move X0, 0x2260000
	046 Move X0, [X0+1432]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X21+2594], W8
	050 Move X8, 0x2260000
	051 Move X8, [X8+1432]
	052 Move X0, [X8]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X0, X20
	058 Move X1, X31
	059 Call Object.op_Implicit, X0
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {75}
	064 Move X0, [X19+48]
	065 Compare X0, 0
	066 JumpIfEqual {80}
	067 Move X1, X19
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X2, X31
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 Call NetworkRunner.AttachActivatedByUser, X0, X1
	074 Return 
	075 Move X20, [X31+16]
	076 Move X19, [X31+24]
	077 Move X30, [X31+32]
	078 Move X21, [X31+40]
	079 Return 
	080 Call 0x1C17F20

Method: System.Void OnDestroy()

Disassembly:
	0x01E94D9C B 0x33BDD8C

ISIL:
No ISIL was generated
Method: System.Void OnDestroyNeverActive()

Disassembly:
	0x01E94EAC CMP X8, X9

ISIL:
	001 Call NetworkObject.OnDestroyInternal, X0
	002 Return 

Method: System.Void OnDestroyInternal()

Disassembly:
	0x01E94DA0 BICS W31, W1, W0, 0x0
	0x01E94DA4 CSET W0, EQ
	0x01E94DA8 RET
	0x01E94DAC AND W0, W0, 0xFF
	0x01E94DB0 RET
	0x01E94DB4 AND W8, W0, 0xFF
	0x01E94DB8 CMP W8, 0x1
	0x01E94DBC CSET W0, EQ
	0x01E94DC0 RET
	0x01E94DC4 AND W8, W0, 0xFFFFFF00
	0x01E94DC8 ORR W0, W8, 0x1
	0x01E94DCC RET
	0x01E94DD0 UBFM W0, W0, 0x10, 0x10
	0x01E94DD4 RET
	0x01E94DD8 ANDS W31, W1, 0x1
	0x01E94DDC MOVZ W9, 0x10000
	0x01E94DE0 AND W8, W0, 0xFFFEFFFF
	0x01E94DE4 CSEL W9, W9, W31, NE
	0x01E94DE8 ORR W0, W9, W8, 0x0
	0x01E94DEC RET
	0x01E94DF0 BIC W8, W0, W2, 0x0
	0x01E94DF4 ORR W0, W8, W1, 0x0
	0x01E94DF8 RET
	0x01E94DFC MOV X0, X31
	0x01E94E00 MOV X1, X31
	0x01E94E04 RET
	0x01E94E08 SUB X31, X31, 0x60
	0x01E94E0C STR X30, [X31 + 0x40]
	0x01E94E10 STP X20, X19, [X31 + 0x50]
	0x01E94E14 MRS X20, 0xC000
	0x01E94E18 LDR X8, [X20 + 0x28]
	0x01E94E1C MOV X19, X0
	0x01E94E20 ADD X0, X31, 0x8
	0x01E94E24 MOV X2, X31
	0x01E94E28 STR X8, [X31 + 0x38]
	0x01E94E2C STP X31, X31, [X31 + 0x8]
	0x01E94E30 BL 0x3376AD0
	0x01E94E34 LDP X8, X9, [X31 + 0x8]
	0x01E94E38 ADD X0, X31, 0x18
	0x01E94E3C ADD X1, X31, 0x28
	0x01E94E40 STP X31, X31, [X31 + 0x28]
	0x01E94E44 STP X8, X9, [X31 + 0x18]
	0x01E94E48 BL 0x1E94F44
	0x01E94E4C LDP X8, X9, [X31 + 0x28]
	0x01E94E50 STP X8, X9, [X19]
	0x01E94E54 LDR X8, [X20 + 0x28]
	0x01E94E58 LDR X9, [X31 + 0x38]
	0x01E94E5C CMP X8, X9
	0x01E94E60 B.NE 0x1E94E74
	0x01E94E64 LDP X20, X19, [X31 + 0x50]
	0x01E94E68 LDR X30, [X31 + 0x40]
	0x01E94E6C ADD X31, X31, 0x60
	0x01E94E70 RET
	0x01E94E74 BL 0x3EB1B20
	0x01E94E78 SUB X31, X31, 0x40
	0x01E94E7C STP X30, X19, [X31 + 0x30]
	0x01E94E80 MRS X19, 0xC000
	0x01E94E84 LDR X8, [X19 + 0x28]
	0x01E94E88 STR X8, [X31 + 0x28]
	0x01E94E8C STP X0, X1, [X31 + 0x8]
	0x01E94E90 ADD X0, X31, 0x8
	0x01E94E94 ADD X1, X31, 0x18
	0x01E94E98 STP X31, X31, [X31 + 0x18]
	0x01E94E9C BL 0x1E94F44
	0x01E94EA0 LDP X0, X1, [X31 + 0x18]
	0x01E94EA4 LDR X8, [X19 + 0x28]
	0x01E94EA8 LDR X9, [X31 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2546000
	006 Move W8, [X20+668]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2263000
	013 Move X0, [X0+920]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+668], W8
	017 Compare X19, 0
	018 JumpIfEqual {85}
	019 Move W8, [X19+96]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 2
	022 Compare TEMP, 2
	023 JumpIfEqual {85}
	024 Or W8, W8, 2
	025 Move [X19+96], W8
	026 Move X21, 0x2545000
	027 Move W8, [X21+2594]
	028 Move X20, [X19+48]
	029 Compare W8, 0
	030 JumpIfNotEqual {36}
	031 Move X0, 0x2260000
	032 Move X0, [X0+1432]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+2594], W8
	036 Move X8, 0x2260000
	037 Move X8, [X8+1432]
	038 Move X0, [X8]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X20
	044 Move X1, X31
	045 Call Object.op_Implicit, X0
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {67}
	050 Move X9, [X19+32]
	051 Move X8, [X19+48]
	052 Compare X9, 0
	053 JumpIfEqual {77}
	054 Compare X8, 0
	055 JumpIfEqual {90}
	056 Move X9, [X8+80]
	057 Compare X9, 0
	058 JumpIfEqual {77}
	059 Move X0, X19
	060 Call NetworkObject.get_HasStateAuthority, X0
	061 Move X8, [X19+48]
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {77}
	066 Move W2, 3
	067 Move X8, [X19+48]
	068 Compare X8, 0
	069 JumpIfEqual {84}
	070 Move X8, 0x2263000
	071 Move X8, [X8+920]
	072 Move X0, [X8]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {84}
	076 Call 0x1C17DFC
	077 Move W2, 1
	078 Compare X8, 0
	079 JumpIfEqual {90}
	080 Move X0, X8
	081 Move X1, X19
	082 Move X3, X31
	083 Call NetworkRunner.Destroy, X0, X1, X2
	084 Move [X19+32], X31
	085 Move X20, [X31+16]
	086 Move X19, [X31+24]
	087 Move X30, [X31+32]
	088 Move X21, [X31+40]
	089 Return 
	090 Call 0x1C17F20

Method: System.Void ResetNetworkState()

Disassembly:
	0x01E94EB0 B.NE 0x1E94EC0
	0x01E94EB4 LDP X30, X19, [X31 + 0x30]
	0x01E94EB8 ADD X31, X31, 0x40
	0x01E94EBC RET
	0x01E94EC0 BL 0x3EB1B20
	0x01E94EC4 STP X1, X2, [X0]
	0x01E94EC8 RET

ISIL:
	001 Move W8, [X0+96]
	002 Move [X0+48], X31
	003 Move [X0+32], X31
	004 Move [X0+100], X31
	005 And W8, W8, 0xF000FFFF
	006 Move [X0+96], W8
	007 Return 

Method: System.Void Defaults()

Disassembly:
	0x01E94ECC STR X30, [X31 - 0x20]!
	0x01E94ED0 STP X20, X19, [X31 + 0x10]
	0x01E94ED4 MOV X19, X1
	0x01E94ED8 MOV X20, X0
	0x01E94EDC MOV X0, X1
	0x01E94EE0 MOV W1, W31
	0x01E94EE4 MOV X2, X31
	0x01E94EE8 BL 0x3317088
	0x01E94EEC STR X0, [X20]
	0x01E94EF0 MOVZ W1, 0x8

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+32]
	003 Compare X8, 0
	004 JumpIfEqual {12}
	005 Move [X8+28], W31
	006 Move X8, [X0+32]
	007 Compare X8, 0
	008 JumpIfEqual {12}
	009 Move [X8+32], W31
	010 Move X30, [X31+16]
	011 Return 
	012 Call 0x1C17F20

Method: System.Int32 GetWordCount(Fusion.NetworkObject obj)

Disassembly:
	0x01E94EF4 MOV X0, X19
	0x01E94EF8 MOV X2, X31
	0x01E94EFC BL 0x3317088
	0x01E94F00 STR X0, [X20 + 0x8]
	0x01E94F04 LDP X20, X19, [X31 + 0x10]
	0x01E94F08 LDR X30, [X31], #0x20
	0x01E94F0C RET
	0x01E94F10 LDR X8, [X1]
	0x01E94F14 STR X8, [X0]
	0x01E94F18 LDR X8, [X1 + 0x8]
	0x01E94F1C STR X8, [X0 + 0x8]
	0x01E94F20 RET
	0x01E94F24 LDR X8, [X0]
	0x01E94F28 CBZ X8, 0x1E94F34
	0x01E94F2C MOVZ W0, 0x1
	0x01E94F30 RET
	0x01E94F34 LDR X8, [X0 + 0x8]
	0x01E94F38 CMP X8, 0x0
	0x01E94F3C CSET W0, NE
	0x01E94F40 RET
	0x01E94F44 LDRB W8, [X0 + 0x3]
	0x01E94F48 STRB W8, [X1]
	0x01E94F4C LDRB W8, [X0 + 0x2]
	0x01E94F50 STRB W8, [X1 + 0x1]
	0x01E94F54 LDRB W8, [X0 + 0x1]
	0x01E94F58 STRB W8, [X1 + 0x2]
	0x01E94F5C LDRB W8, [X0]
	0x01E94F60 STRB W8, [X1 + 0x3]
	0x01E94F64 LDRB W8, [X0 + 0x5]
	0x01E94F68 STRB W8, [X1 + 0x4]
	0x01E94F6C LDRB W8, [X0 + 0x4]
	0x01E94F70 STRB W8, [X1 + 0x5]
	0x01E94F74 LDRB W8, [X0 + 0x7]
	0x01E94F78 STRB W8, [X1 + 0x6]
	0x01E94F7C LDRB W8, [X0 + 0x6]
	0x01E94F80 STRB W8, [X1 + 0x7]
	0x01E94F84 LDRB W8, [X0 + 0x8]
	0x01E94F88 STRB W8, [X1 + 0x8]
	0x01E94F8C LDRB W8, [X0 + 0x9]
	0x01E94F90 STRB W8, [X1 + 0x9]
	0x01E94F94 LDRB W8, [X0 + 0xA]
	0x01E94F98 STRB W8, [X1 + 0xA]
	0x01E94F9C LDRB W8, [X0 + 0xB]
	0x01E94FA0 STRB W8, [X1 + 0xB]
	0x01E94FA4 LDRB W8, [X0 + 0xC]
	0x01E94FA8 STRB W8, [X1 + 0xC]
	0x01E94FAC LDRB W8, [X0 + 0xD]
	0x01E94FB0 STRB W8, [X1 + 0xD]
	0x01E94FB4 LDRB W8, [X0 + 0xE]
	0x01E94FB8 STRB W8, [X1 + 0xE]
	0x01E94FBC LDRB W8, [X0 + 0xF]
	0x01E94FC0 STRB W8, [X1 + 0xF]
	0x01E94FC4 RET
	0x01E94FC8 SUB X31, X31, 0x40
	0x01E94FCC STP X30, X19, [X31 + 0x30]
	0x01E94FD0 MRS X19, 0xC000
	0x01E94FD4 LDR X8, [X19 + 0x28]
	0x01E94FD8 STR X8, [X31 + 0x28]
	0x01E94FDC STP X0, X1, [X31 + 0x18]
	0x01E94FE0 ADD X0, X31, 0x18
	0x01E94FE4 ADD X1, X31, 0x8
	0x01E94FE8 STP X31, X31, [X31 + 0x8]
	0x01E94FEC BL 0x1E94F44
	0x01E94FF0 LDP X0, X1, [X31 + 0x8]
	0x01E94FF4 LDR X8, [X19 + 0x28]
	0x01E94FF8 LDR X9, [X31 + 0x28]
	0x01E94FFC CMP X8, X9
	0x01E95000 B.NE 0x1E95010
	0x01E95004 LDP X30, X19, [X31 + 0x30]
	0x01E95008 ADD X31, X31, 0x40
	0x01E9500C RET
	0x01E95010 BL 0x3EB1B20
	0x01E95014 SUB X31, X31, 0x60
	0x01E95018 STP X30, X21, [X31 + 0x40]
	0x01E9501C STP X20, X19, [X31 + 0x50]
	0x01E95020 MRS X21, 0xC000
	0x01E95024 LDR X8, [X21 + 0x28]
	0x01E95028 MOV X19, X1
	0x01E9502C ADD X1, X31, 0x8
	0x01E95030 MOV X2, X31
	0x01E95034 STR X8, [X31 + 0x38]
	0x01E95038 STP X31, X31, [X31 + 0x8]
	0x01E9503C BL 0x3377064
	0x01E95040 MOV W20, W0
	0x01E95044 TBZ X0, 0x0, 0x1E9506C
	0x01E95048 LDP X8, X9, [X31 + 0x8]
	0x01E9504C ADD X0, X31, 0x18
	0x01E95050 ADD X1, X31, 0x28
	0x01E95054 STP X31, X31, [X31 + 0x28]
	0x01E95058 STP X8, X9, [X31 + 0x18]
	0x01E9505C BL 0x1E94F44
	0x01E95060 LDP X8, X9, [X31 + 0x28]
	0x01E95064 STP X8, X9, [X19]
	0x01E95068 B 0x1E95070
	0x01E9506C STP X31, X31, [X19]
	0x01E95070 LDR X8, [X21 + 0x28]
	0x01E95074 LDR X9, [X31 + 0x38]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2546000
	008 Move W8, [X20+669]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x2263000
	015 Move X0, [X0+2680]
	016 Call 0x1C17CF4
	017 Move X0, 0x226B000
	018 Move X0, [X0+800]
	019 Call 0x1C17CF4
	020 Move X0, 0x226B000
	021 Move X0, [X0+808]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+669], W8
	025 Compare X19, 0
	026 JumpIfEqual {76}
	027 Move W8, [X19+96]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 2
	030 Compare TEMP, 2
	031 JumpIfEqual {76}
	032 Move X8, 0x226B000
	033 Move X8, [X8+808]
	034 Move X0, [X8]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X8, 0x226B000
	040 Move X8, [X8+800]
	041 Move X0, [X8]
	042 Call 0x222D62C
	043 Move X8, [X19+120]
	044 Compare X8, 0
	045 JumpIfEqual {75}
	046 Move X23, 0x2263000
	047 Move X23, [X23+2680]
	048 Move W20, W0
	049 Move X22, X31
	050 Move X9, [X8+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add X8, X8, X22
	054 Move X21, [X8+32]
	055 Compare X21, 0
	056 JumpIfEqual {85}
	057 Move W8, [X21+48]
	058 Move TEMP, X8
	059 And TEMP, TEMP, 8
	060 Compare TEMP, 8
	061 JumpIfEqual {85}
	062 Move X0, [X23]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X21
	068 Move X1, X31
	069 Call NetworkBehaviourUtils.GetWordCount, X0
	070 Move X8, [X19+120]
	071 Add W20, W0, W20
	072 Add X22, X22, 1
	073 Compare X8, 0
	074 JumpIfNotEqual {50}
	075 Call 0x1C17F20
	076 Move W0, W31
	077 Add W0, W20, W9
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move X30, [X31+48]
	083 Move X23, [X31+56]
	084 Return X0
	085 Move X0, X19
	086 Call NetworkObject.get_Name, X0
	087 Move X19, X0
	088 Move X0, 0x226A000
	089 Move X0, [X0+816]
	090 Call 0x1C17D08
	091 Move X20, X0
	092 Move X0, 0x226A000
	093 Move X0, [X0+824]
	094 Call 0x1C17D08
	095 Move X2, X0
	096 Move X0, X20
	097 Move X1, X19
	098 Move X3, X31
	099 Call String.Concat, X0, X1, X2
	100 Move X19, X0
	101 Move X0, 0x225F000
	102 Move X0, [X0+2000]
	103 Call 0x1C17D08
	104 Call 0x1C17F10
	105 Move X1, X19
	106 Move X2, X31
	107 Move X20, X0
	108 Call Exception..ctor, X0, X1
	109 Move X0, 0x226A000
	110 Move X0, [X0+832]
	111 Call 0x1C17D08
	112 Move X1, X0
	113 Move X0, X20
	114 Call 0x1C17DEC
	115 Call 0x1C17F28

Method: System.Int32 GetLocalAuthorityMask()

Disassembly:
	0x01E95078 CMP X8, X9
	0x01E9507C B.NE 0x1E95094
	0x01E95080 AND W0, W20, 0x1
	0x01E95084 LDP X20, X19, [X31 + 0x50]
	0x01E95088 LDP X30, X21, [X31 + 0x40]
	0x01E9508C ADD X31, X31, 0x60
	0x01E95090 RET
	0x01E95094 BL 0x3EB1B20
	0x01E95098 SUB X31, X31, 0x40
	0x01E9509C STP X30, X19, [X31 + 0x30]
	0x01E950A0 MRS X19, 0xC000
	0x01E950A4 LDR X8, [X19 + 0x28]
	0x01E950A8 MOV X1, X31
	0x01E950AC STR X8, [X31 + 0x28]
	0x01E950B0 BL 0x3376F6C
	0x01E950B4 STP X0, X1, [X31 + 0x8]
	0x01E950B8 ADD X0, X31, 0x8
	0x01E950BC ADD X1, X31, 0x18
	0x01E950C0 STP X31, X31, [X31 + 0x18]
	0x01E950C4 BL 0x1E94F44
	0x01E950C8 LDP X0, X1, [X31 + 0x18]
	0x01E950CC LDR X8, [X19 + 0x28]
	0x01E950D0 LDR X9, [X31 + 0x28]
	0x01E950D4 CMP X8, X9
	0x01E950D8 B.NE 0x1E950E8
	0x01E950DC LDP X30, X19, [X31 + 0x30]
	0x01E950E0 ADD X31, X31, 0x40
	0x01E950E4 RET
	0x01E950E8 BL 0x3EB1B20
	0x01E950EC CMP X0, X2
	0x01E950F0 CSET W8, EQ
	0x01E950F4 CMP X1, X3
	0x01E950F8 CSET W9, EQ
	0x01E950FC AND W0, W8, W9, 0x0
	0x01E95100 RET
	0x01E95104 LDR X8, [X0]
	0x01E95108 CMP X8, X1
	0x01E9510C B.NE 0x1E95120

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2545000
	006 Move W8, [X21+415]
	007 Move X20, [X0+48]
	008 Move X19, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x225F000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X21+415], W8
	016 Move X8, 0x225F000
	017 Move X8, [X8+1432]
	018 Move X0, [X8]
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move X0, X20
	024 Move X1, X31
	025 Call Object.op_Implicit, X0
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {45}
	030 Move X0, X19
	031 Call NetworkObject.get_HasStateAuthority, X0
	032 Move W20, W0
	033 Move X0, X19
	034 Call NetworkObject.get_HasInputAuthority, X0
	035 And W8, W20, 1
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 And W1, W0, 1
	039 Move W0, W8
	040 Move X2, X31
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Call AuthorityMasks.Create, X0, X1
	044 Return X0
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move W0, W31
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return X0

Method: System.Int32 GetRpcSourceAuthorityMask(Fusion.PlayerRef player)

Disassembly:
	0x01E95110 LDR X8, [X0 + 0x8]
	0x01E95114 CMP X8, X2
	0x01E95118 CSET W0, EQ
	0x01E9511C RET
	0x01E95120 MOV W0, W31
	0x01E95124 RET
	0x01E95128 CMP X0, X2
	0x01E9512C CSET W8, NE
	0x01E95130 CMP X1, X3
	0x01E95134 CSET W9, NE
	0x01E95138 ORR W0, W8, W9, 0x0
	0x01E9513C RET
	0x01E95140 STP X30, X21, [X31 - 0x20]!
	0x01E95144 STP X20, X19, [X31 + 0x10]
	0x01E95148 ADRP X21, 0x2544000
	0x01E9514C LDRB W8, [X21 + 0x2A5]
	0x01E95150 MOV X20, X1
	0x01E95154 MOV X19, X0
	0x01E95158 TBNZ X8, 0x0, 0x1E95170
	0x01E9515C ADRP X0, 0x2269000
	0x01E95160 LDR X0, [X0 + 0x350]
	0x01E95164 BL 0x1C16CF4
	0x01E95168 MOVZ W8, 0x1
	0x01E9516C STRB W8, [X21 + 0x2A5]
	0x01E95170 CBZ X20, 0x1E951B8
	0x01E95174 ADRP X8, 0x2269000
	0x01E95178 LDR X8, [X8 + 0x350]
	0x01E9517C LDR X9, [X20]
	0x01E95180 LDR X8, [X8]
	0x01E95184 CMP X9, X8
	0x01E95188 B.NE 0x1E951B8
	0x01E9518C MOV X0, X20
	0x01E95190 BL 0x1C16E08
	0x01E95194 LDR X8, [X0]
	0x01E95198 LDR X9, [X19]
	0x01E9519C CMP X9, X8
	0x01E951A0 B.NE 0x1E951B8
	0x01E951A4 LDR X8, [X0 + 0x8]
	0x01E951A8 LDR X9, [X19 + 0x8]
	0x01E951AC CMP X9, X8
	0x01E951B0 CSET W0, EQ
	0x01E951B4 B 0x1E951BC
	0x01E951B8 MOV W0, W31
	0x01E951BC LDP X20, X19, [X31 + 0x10]
	0x01E951C0 LDP X30, X21, [X31], #0x20
	0x01E951C4 RET
	0x01E951C8 SUB X31, X31, 0x50
	0x01E951CC STP X30, X19, [X31 + 0x40]
	0x01E951D0 MRS X19, 0xC000
	0x01E951D4 LDR X8, [X19 + 0x28]
	0x01E951D8 ADD X1, X31, 0x18
	0x01E951DC STR X8, [X31 + 0x38]
	0x01E951E0 STP X31, X31, [X31 + 0x8]
	0x01E951E4 LDP X8, X9, [X0]
	0x01E951E8 ADD X0, X31, 0x28
	0x01E951EC STP X31, X31, [X31 + 0x18]
	0x01E951F0 STP X8, X9, [X31 + 0x28]
	0x01E951F4 BL 0x1E94F44
	0x01E951F8 LDP X8, X9, [X31 + 0x18]
	0x01E951FC ADD X0, X31, 0x8
	0x01E95200 MOV X1, X31
	0x01E95204 STP X8, X9, [X31 + 0x8]
	0x01E95208 BL 0x33788AC
	0x01E9520C LDR X8, [X19 + 0x28]
	0x01E95210 LDR X9, [X31 + 0x38]
	0x01E95214 CMP X8, X9
	0x01E95218 B.NE 0x1E95228
	0x01E9521C LDP X30, X19, [X31 + 0x40]
	0x01E95220 ADD X31, X31, 0x50
	0x01E95224 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x2545000
	008 Move X22, 0x2262000
	009 Move W8, [X21+670]
	010 Move X22, [X22+3648]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x2262000
	018 Move X0, [X0+3648]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+670], W8
	022 Move X0, [X22]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfEqual {42}
	026 Compare W19, 0
	027 JumpIfEqual {45}
	028 Move X8, [X20+48]
	029 Compare X8, 0
	030 JumpIfEqual {92}
	031 Move X0, [X8+80]
	032 Compare X0, 0
	033 JumpIfEqual {92}
	034 Move X8, [X20+32]
	035 Compare X8, 0
	036 JumpIfEqual {92}
	037 Move W1, [X8+32]
	038 And X2, X19, 0
	039 Move X3, X31
	040 Call 0x1DC08E4
	041 Move W21, W0
	042 Call 0x1C17DFC
	043 Compare W19, 0
	044 JumpIfNotEqual {28}
	045 Move W21, 1
	046 Move X8, [X20+48]
	047 Compare X8, 0
	048 JumpIfEqual {92}
	049 Move X8, [X8+80]
	050 Compare X8, 0
	051 JumpIfEqual {92}
	052 Move X23, 0x2545000
	053 Move W8, [X23+752]
	054 Compare W8, 0
	055 JumpIfNotEqual {61}
	056 Move X0, 0x2262000
	057 Move X0, [X0+3648]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X23+752], W8
	061 Move X0, [X22]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfEqual {78}
	065 Compare W19, 0
	066 JumpIfEqual {81}
	067 Move X8, [X20+32]
	068 Compare X8, 0
	069 JumpIfEqual {92}
	070 Move X0, [X22]
	071 Move W20, [X8+28]
	072 Move W9, [X0+224]
	073 Compare W9, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction CSET not yet implemented."
	078 Call 0x1C17DFC
	079 Compare W19, 0
	080 JumpIfNotEqual {67}
	081 Move W1, W31
	082 And W0, W21, 1
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X2, X31
	088 Move X30, [X31+48]
	089 Move X23, [X31+56]
	090 Call AuthorityMasks.Create, X0, X1
	091 Return X0
	092 Call 0x1C17F20

Method: System.Void AssignInputAuthority(Fusion.PlayerRef player)

Disassembly:
	0x01E95228 BL 0x3EB1B20
	0x01E9522C SUB X31, X31, 0x50
	0x01E95230 STP X30, X19, [X31 + 0x40]
	0x01E95234 MRS X19, 0xC000
	0x01E95238 LDR X8, [X19 + 0x28]
	0x01E9523C ADD X1, X31, 0x18
	0x01E95240 STR X8, [X31 + 0x38]
	0x01E95244 STP X31, X31, [X31 + 0x8]
	0x01E95248 LDP X8, X9, [X0]
	0x01E9524C ADD X0, X31, 0x28
	0x01E95250 STP X31, X31, [X31 + 0x18]
	0x01E95254 STP X8, X9, [X31 + 0x28]
	0x01E95258 BL 0x1E94F44
	0x01E9525C LDP X8, X9, [X31 + 0x18]
	0x01E95260 ADD X0, X31, 0x8
	0x01E95264 MOV X1, X31
	0x01E95268 STP X8, X9, [X31 + 0x8]
	0x01E9526C BL 0x337866C
	0x01E95270 LDR X8, [X19 + 0x28]
	0x01E95274 LDR X9, [X31 + 0x38]
	0x01E95278 CMP X8, X9
	0x01E9527C B.NE 0x1E9528C
	0x01E95280 LDP X30, X19, [X31 + 0x40]
	0x01E95284 ADD X31, X31, 0x50
	0x01E95288 RET
	0x01E9528C BL 0x3EB1B20
	0x01E95290 STP X30, X21, [X31 - 0x20]!
	0x01E95294 STP X20, X19, [X31 + 0x10]
	0x01E95298 ADRP X20, 0x2544000
	0x01E9529C ADRP X21, 0x2269000
	0x01E952A0 LDRB W8, [X20 + 0x2A6]
	0x01E952A4 LDR X21, [X21 + 0x358]
	0x01E952A8 MOV X19, X0
	0x01E952AC TBNZ X8, 0x0, 0x1E952C4
	0x01E952B0 ADRP X0, 0x2269000
	0x01E952B4 LDR X0, [X0 + 0x358]
	0x01E952B8 BL 0x1C16CF4
	0x01E952BC MOVZ W8, 0x1
	0x01E952C0 STRB W8, [X20 + 0x2A6]
	0x01E952C4 LDR X1, [X21]
	0x01E952C8 MOV X0, X19
	0x01E952CC LDP X20, X19, [X31 + 0x10]
	0x01E952D0 LDP X30, X21, [X31], #0x20
	0x01E952D4 B 0x1E952D8
	0x01E952D8 SUB X31, X31, 0x60
	0x01E952DC STR X30, [X31 + 0x40]
	0x01E952E0 STP X20, X19, [X31 + 0x50]
	0x01E952E4 MRS X20, 0xC000
	0x01E952E8 LDR X8, [X20 + 0x28]
	0x01E952EC MOV X19, X1
	0x01E952F0 ADD X1, X31, 0x18
	0x01E952F4 STR X8, [X31 + 0x38]
	0x01E952F8 STP X31, X31, [X31 + 0x8]
	0x01E952FC LDP X8, X9, [X0]
	0x01E95300 ADD X0, X31, 0x28
	0x01E95304 STP X31, X31, [X31 + 0x18]
	0x01E95308 STP X8, X9, [X31 + 0x28]
	0x01E9530C BL 0x1E94F44
	0x01E95310 LDP X8, X9, [X31 + 0x18]
	0x01E95314 ADD X0, X31, 0x8
	0x01E95318 MOV X1, X19
	0x01E9531C MOV X2, X31
	0x01E95320 STP X8, X9, [X31 + 0x8]
	0x01E95324 BL 0x3378CA4
	0x01E95328 LDR X8, [X20 + 0x28]
	0x01E9532C LDR X9, [X31 + 0x38]
	0x01E95330 CMP X8, X9
	0x01E95334 B.NE 0x1E95348
	0x01E95338 LDP X20, X19, [X31 + 0x50]
	0x01E9533C LDR X30, [X31 + 0x40]
	0x01E95340 ADD X31, X31, 0x60
	0x01E95344 RET
	0x01E95348 BL 0x3EB1B20
	0x01E9534C LDR X8, [X0]
	0x01E95350 SUBS X8, X8, X1
	0x01E95354 B.NE 0x1E95364
	0x01E95358 LDR X8, [X0 + 0x8]
	0x01E9535C SUBS X8, X8, X2
	0x01E95360 B.EQ 0x1E95374
	0x01E95364 CMP X8, 0x0
	0x01E95368 MOVZ W8, 0x1
	0x01E9536C CSNEG W0, W8, W8, GE
	0x01E95370 RET
	0x01E95374 MOV W0, W31
	0x01E95378 RET
	0x01E9537C SUB X31, X31, 0x30
	0x01E95380 STR X30, [X31 + 0x20]
	0x01E95384 MRS X8, 0xC000
	0x01E95388 LDR X9, [X8 + 0x28]
	0x01E9538C STR X9, [X31 + 0x18]
	0x01E95390 STP X0, X1, [X31 + 0x8]
	0x01E95394 LDR X8, [X8 + 0x28]
	0x01E95398 LDR X9, [X31 + 0x18]
	0x01E9539C CMP X8, X9
	0x01E953A0 B.NE 0x1E953B0
	0x01E953A4 LDR X30, [X31 + 0x20]
	0x01E953A8 ADD X31, X31, 0x30
	0x01E953AC RET
	0x01E953B0 BL 0x3EB1B20
	0x01E953B4 LDR X8, [X1]
	0x01E953B8 STR X8, [X0]
	0x01E953BC LDR X8, [X1 + 0x8]
	0x01E953C0 STR X8, [X0 + 0x8]
	0x01E953C4 RET
	0x01E953C8 CMP X1, X3
	0x01E953CC CSET W8, EQ
	0x01E953D0 CMP X2, X4
	0x01E953D4 CSET W9, EQ
	0x01E953D8 AND W0, W8, W9, 0x0
	0x01E953DC RET
	0x01E953E0 SUB X31, X31, 0x30
	0x01E953E4 STP X30, X19, [X31 + 0x20]
	0x01E953E8 MRS X19, 0xC000
	0x01E953EC LDR X8, [X19 + 0x28]
	0x01E953F0 ADD X0, X31, 0x8
	0x01E953F4 STR X8, [X31 + 0x18]
	0x01E953F8 STP X1, X2, [X31 + 0x8]
	0x01E953FC BL 0x1E951C8
	0x01E95400 LDR X8, [X19 + 0x28]
	0x01E95404 LDR X9, [X31 + 0x18]
	0x01E95408 CMP X8, X9
	0x01E9540C B.NE 0x1E9541C
	0x01E95410 LDP X30, X19, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x2545000
	011 Move W8, [X21+671]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x2262000
	019 Move X0, [X0+3648]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+671], W8
	023 Move [X31], X31
	024 Move [X31+8], X31
	025 Move X0, [X19+48]
	026 Compare X0, 0
	027 JumpIfEqual {154}
	028 Move X1, X31
	029 Call NetworkRunner.get_Topology, X0
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X8, [X19+32]
	032 Compare X8, 0
	033 JumpIfEqual {154}
	034 Move W21, [X8+28]
	035 Move X0, X19
	036 Move [X8+28], W20
	037 Call NetworkObject.get_Simulation, X0
	038 Compare X0, 0
	039 JumpIfEqual {154}
	040 Move X8, [X0+88]
	041 Compare X8, 0
	042 JumpIfEqual {154}
	043 Move W8, [X8+20]
	044 NotImplemented "Instruction ORN not yet implemented."
	045 And W31, W8, 3
	046 Move X25, 0x2262000
	047 Move X25, [X25+3648]
	048 Move X0, [X25]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X23, 0x2264000
	054 Move X23, [X23+32]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X24, 0x2545000
	057 Move X0, X19
	058 Call NetworkObject.get_Simulation, X0
	059 Compare X0, 0
	060 JumpIfEqual {154}
	061 Move W8, [X24+753]
	062 Move X22, X0
	063 Compare W8, 0
	064 JumpIfNotEqual {70}
	065 Move X0, 0x2264000
	066 Move X0, [X0+32]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X24+753], W8
	070 Move X0, [X22+184]
	071 Compare X0, 0
	072 JumpIfEqual {154}
	073 Move X3, [X23]
	074 Add X2, X31, 8
	075 Move X1, X21
	076 Call Dictionary`2<PlayerRef, Object>.TryGetValue, X0, X1, X2
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {87}
	081 Move X0, [X31+8]
	082 Compare X0, 0
	083 JumpIfEqual {154}
	084 Move X1, [X19+56]
	085 Move X2, X31
	086 Call SimulationConnection.RemoveAlwaysInterested, X0, X1
	087 Move X0, [X25]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X0, X19
	094 Call NetworkObject.get_Simulation, X0
	095 Compare X0, 0
	096 JumpIfEqual {154}
	097 Move W8, [X24+753]
	098 Move X21, X0
	099 Compare W8, 0
	100 JumpIfNotEqual {106}
	101 Move X0, 0x2264000
	102 Move X0, [X0+32]
	103 Call 0x1C17CF4
	104 Move W8, 1
	105 Move [X24+753], W8
	106 Move X0, [X21+184]
	107 Compare X0, 0
	108 JumpIfEqual {154}
	109 Move X3, [X23]
	110 And X1, X20, 0
	111 Add X2, X31, 0
	112 Call Dictionary`2<PlayerRef, Object>.TryGetValue, X0, X1, X2
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {144}
	117 Move X0, [X31]
	118 Compare X0, 0
	119 JumpIfEqual {154}
	120 Move X1, [X19+56]
	121 Move X2, X31
	122 Call SimulationConnection.AddAlwaysInterested, X0, X1
	123 Move X0, X19
	124 Call NetworkObject.get_HasStateAuthority, X0
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {144}
	129 Move X0, [X19+48]
	130 Compare X0, 0
	131 JumpIfEqual {154}
	132 Move X1, X31
	133 Call NetworkRunner.get_LocalPlayer, X0
	134 Move X8, 0x2262000
	135 Move X8, [X8+3648]
	136 Move X21, X0
	137 Move X8, [X8]
	138 Move W9, [X8+224]
	139 Compare W9, 0
	140 JumpIfNotEqual {143}
	141 Move X0, X8
	142 Call 0x1C17DFC
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X20, [X31+64]
	145 Move X19, [X31+72]
	146 Move X22, [X31+48]
	147 Move X21, [X31+56]
	148 Move X24, [X31+32]
	149 Move X23, [X31+40]
	150 Move X30, [X31+16]
	151 Move X25, [X31+24]
	152 Add X31, X31, 80
	153 Return 
	154 Call 0x1C17F20

Method: System.Void RequestStateAuthority()

Disassembly:
	0x01E95414 ADD X31, X31, 0x30
	0x01E95418 RET
	0x01E9541C BL 0x3EB1B20
	0x01E95420 MOV X1, X31
	0x01E95424 B 0x33BDD8C
	0x01E95428 MOV X0, X31
	0x01E9542C MOV X1, X31
	0x01E95430 RET
	0x01E95434 SUB X31, X31, 0x60
	0x01E95438 STR X30, [X31 + 0x40]
	0x01E9543C STP X20, X19, [X31 + 0x50]
	0x01E95440 MRS X20, 0xC000
	0x01E95444 LDR X8, [X20 + 0x28]
	0x01E95448 MOV X19, X0
	0x01E9544C ADD X0, X31, 0x8
	0x01E95450 MOV X2, X31
	0x01E95454 STR X8, [X31 + 0x38]
	0x01E95458 STP X31, X31, [X31 + 0x8]
	0x01E9545C BL 0x3376AD0
	0x01E95460 LDP X8, X9, [X31 + 0x8]
	0x01E95464 ADD X0, X31, 0x18
	0x01E95468 ADD X1, X31, 0x28
	0x01E9546C STP X31, X31, [X31 + 0x28]
	0x01E95470 STP X8, X9, [X31 + 0x18]
	0x01E95474 BL 0x1E94F44
	0x01E95478 LDP X8, X9, [X31 + 0x28]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+48]
	005 Compare X0, 0
	006 JumpIfEqual {41}
	007 Move X1, X31
	008 Call NetworkRunner.get_IsClient, X0
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {19}
	013 Move X0, X19
	014 Call NetworkObject.get_HasStateAuthority, X0
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {22}
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Return 
	022 Move X8, [X19+48]
	023 Compare X8, 0
	024 JumpIfEqual {41}
	025 Move X9, [X19+32]
	026 Move X0, [X8+80]
	027 Compare X9, 0
	028 JumpIfEqual {38}
	029 Move W1, [X9]
	030 Compare X0, 0
	031 JumpIfEqual {41}
	032 Move W2, 1
	033 Move X3, X31
	034 Move X30, [X31+16]
	035 Move X19, [X31+24]
	036 Call Simulation.RequestStateAuthority, X0, X1, X2
	037 Return 
	038 Move X1, X31
	039 Compare X0, 0
	040 JumpIfNotEqual {32}
	041 Call 0x1C17F20

Method: System.Void ReleaseStateAuthority()

Disassembly:
	0x01E9547C STP X8, X9, [X19]
	0x01E95480 LDR X8, [X20 + 0x28]
	0x01E95484 LDR X9, [X31 + 0x38]
	0x01E95488 CMP X8, X9
	0x01E9548C B.NE 0x1E954A0
	0x01E95490 LDP X20, X19, [X31 + 0x50]
	0x01E95494 LDR X30, [X31 + 0x40]
	0x01E95498 ADD X31, X31, 0x60
	0x01E9549C RET
	0x01E954A0 BL 0x3EB1B20
	0x01E954A4 SUB X31, X31, 0x40
	0x01E954A8 STP X30, X19, [X31 + 0x30]
	0x01E954AC MRS X19, 0xC000
	0x01E954B0 LDR X8, [X19 + 0x28]
	0x01E954B4 STR X8, [X31 + 0x28]
	0x01E954B8 STP X0, X1, [X31 + 0x8]
	0x01E954BC ADD X0, X31, 0x8
	0x01E954C0 ADD X1, X31, 0x18
	0x01E954C4 STP X31, X31, [X31 + 0x18]
	0x01E954C8 BL 0x1E94F44
	0x01E954CC LDP X0, X1, [X31 + 0x18]
	0x01E954D0 LDR X8, [X19 + 0x28]
	0x01E954D4 LDR X9, [X31 + 0x28]
	0x01E954D8 CMP X8, X9
	0x01E954DC B.NE 0x1E954EC
	0x01E954E0 LDP X30, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+48]
	005 Compare X0, 0
	006 JumpIfEqual {41}
	007 Move X1, X31
	008 Call NetworkRunner.get_IsClient, X0
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {35}
	013 Move X0, X19
	014 Call NetworkObject.get_HasStateAuthority, X0
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {35}
	019 Move X8, [X19+48]
	020 Compare X8, 0
	021 JumpIfEqual {41}
	022 Move X9, [X19+32]
	023 Move X0, [X8+80]
	024 Compare X9, 0
	025 JumpIfEqual {38}
	026 Move W1, [X9]
	027 Compare X0, 0
	028 JumpIfEqual {41}
	029 Move W2, W31
	030 Move X3, X31
	031 Move X30, [X31+16]
	032 Move X19, [X31+24]
	033 Call Simulation.RequestStateAuthority, X0, X1, X2
	034 Return 
	035 Move X30, [X31+16]
	036 Move X19, [X31+24]
	037 Return 
	038 Move X1, X31
	039 Compare X0, 0
	040 JumpIfNotEqual {29}
	041 Call 0x1C17F20

Method: System.Void RemoveInputAuthority()

Disassembly:
	0x01E954E4 ADD X31, X31, 0x40
	0x01E954E8 RET

ISIL:
	001 Move X1, X31
	002 Call NetworkObject.AssignInputAuthority, X0, X1
	003 Return 

Method: Fusion.NetworkId op_Implicit(Fusion.NetworkObject obj)

Disassembly:
	0x01E954EC BL 0x3EB1B20
	0x01E954F0 STP X1, X2, [X0]
	0x01E954F4 RET
	0x01E954F8 STR X30, [X31 - 0x20]!
	0x01E954FC STP X20, X19, [X31 + 0x10]
	0x01E95500 MOV X19, X1
	0x01E95504 MOV X20, X0

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {7}
	003 Move X8, [X0+32]
	004 Compare X8, 0
	005 JumpIfEqual {8}
	006 Move W0, [X8]
	007 Return X0
	008 Move X0, X31
	009 Return X0

Method: System.Void SetPlayerAlwaysInterested(Fusion.PlayerRef player, System.Boolean alwaysInterested)

Disassembly:
	0x01E95508 MOV X0, X1
	0x01E9550C MOV W1, W31
	0x01E95510 MOV X2, X31
	0x01E95514 BL 0x3317088
	0x01E95518 STR X0, [X20]
	0x01E9551C MOVZ W1, 0x8
	0x01E95520 MOV X0, X19
	0x01E95524 MOV X2, X31
	0x01E95528 BL 0x3317088
	0x01E9552C STR X0, [X20 + 0x8]
	0x01E95530 LDP X20, X19, [X31 + 0x10]
	0x01E95534 LDR X30, [X31], #0x20
	0x01E95538 RET
	0x01E9553C LDR X8, [X0]
	0x01E95540 CBZ X8, 0x1E9554C
	0x01E95544 MOVZ W0, 0x1
	0x01E95548 RET
	0x01E9554C LDR X8, [X0 + 0x8]
	0x01E95550 CMP X8, 0x0
	0x01E95554 CSET W0, NE
	0x01E95558 RET
	0x01E9555C SUB X31, X31, 0x40
	0x01E95560 STP X30, X19, [X31 + 0x30]
	0x01E95564 MRS X19, 0xC000
	0x01E95568 LDR X8, [X19 + 0x28]
	0x01E9556C STR X8, [X31 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W19, W2
	006 Move X20, X1
	007 Move X21, X0
	008 Call NetworkObject.get_HasStateAuthority, X0
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {32}
	013 Move X8, [X21+48]
	014 Compare X8, 0
	015 JumpIfEqual {40}
	016 Move X9, [X21+32]
	017 Move X0, [X8+80]
	018 Compare X9, 0
	019 JumpIfEqual {37}
	020 Move W2, [X9]
	021 Compare X0, 0
	022 JumpIfEqual {40}
	023 And X1, X20, 0
	024 And W3, W19, 1
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X4, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Simulation.SetPlayerAlwaysInterested, X0, X1, X2, X3
	031 Return 
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 
	037 Move X2, X31
	038 Compare X0, 0
	039 JumpIfNotEqual {23}
	040 Call 0x1C17F20

Method: System.Void CopyStateFrom(Fusion.NetworkObject source)

Disassembly:
	0x01E95570 STP X0, X1, [X31 + 0x18]
	0x01E95574 ADD X0, X31, 0x18
	0x01E95578 ADD X1, X31, 0x8
	0x01E9557C STP X31, X31, [X31 + 0x8]
	0x01E95580 BL 0x1E94F44
	0x01E95584 LDP X0, X1, [X31 + 0x8]
	0x01E95588 LDR X8, [X19 + 0x28]
	0x01E9558C LDR X9, [X31 + 0x28]
	0x01E95590 CMP X8, X9
	0x01E95594 B.NE 0x1E955A4
	0x01E95598 LDP X30, X19, [X31 + 0x30]
	0x01E9559C ADD X31, X31, 0x40
	0x01E955A0 RET
	0x01E955A4 BL 0x3EB1B20
	0x01E955A8 SUB X31, X31, 0x60
	0x01E955AC STP X30, X21, [X31 + 0x40]
	0x01E955B0 STP X20, X19, [X31 + 0x50]
	0x01E955B4 MRS X21, 0xC000
	0x01E955B8 LDR X8, [X21 + 0x28]
	0x01E955BC MOV X19, X1
	0x01E955C0 ADD X1, X31, 0x8
	0x01E955C4 MOV X2, X31
	0x01E955C8 STR X8, [X31 + 0x38]
	0x01E955CC STP X31, X31, [X31 + 0x8]
	0x01E955D0 BL 0x3377064
	0x01E955D4 MOV W20, W0
	0x01E955D8 TBZ X0, 0x0, 0x1E95600
	0x01E955DC LDP X8, X9, [X31 + 0x8]
	0x01E955E0 ADD X0, X31, 0x18
	0x01E955E4 ADD X1, X31, 0x28
	0x01E955E8 STP X31, X31, [X31 + 0x28]
	0x01E955EC STP X8, X9, [X31 + 0x18]
	0x01E955F0 BL 0x1E94F44
	0x01E955F4 LDP X8, X9, [X31 + 0x28]
	0x01E955F8 STP X8, X9, [X19]
	0x01E955FC B 0x1E95604
	0x01E95600 STP X31, X31, [X19]
	0x01E95604 LDR X8, [X21 + 0x28]
	0x01E95608 LDR X9, [X31 + 0x38]
	0x01E9560C CMP X8, X9
	0x01E95610 B.NE 0x1E95628

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {44}
	007 Move X8, [X0+32]
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfEqual {44}
	011 NotImplemented "Instruction LDRSH not yet implemented."
	012 Move X9, [X1+32]
	013 Add X0, X8, 80
	014 Move X19, X1
	015 Move W8, W10
	016 ShiftRight W8, 30
	017 And W8, W8, 0x1FFFFFFF
	018 Add X1, X9, 80
	019 Subtract W2, W8, 80
	020 Move X3, X31
	021 Call Native.MemCpy, X0, X1, X2
	022 Move X8, [X20+112]
	023 Compare X8, 0
	024 JumpIfEqual {44}
	025 Move W21, 4
	026 Move W10, [X8+24]
	027 Subtract X9, X21, 4
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X10, [X19+112]
	031 Compare X10, 0
	032 JumpIfEqual {44}
	033 Move W11, [X10+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X0, [X8]
	036 Compare X0, 0
	037 JumpIfEqual {44}
	038 Move X1, [X10]
	039 Call NetworkObject.CopyStateFrom, X0, X1
	040 Move X8, [X20+112]
	041 Add X21, X21, 1
	042 Compare X8, 0
	043 JumpIfNotEqual {26}
	044 Call 0x1C17F20
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return 
	050 Call 0x1C17F28

Method: System.Void CopyStateFrom(Fusion.NetworkObjectHeaderPtr source)

Disassembly:
	0x01E95614 AND W0, W20, 0x1
	0x01E95618 LDP X20, X19, [X31 + 0x50]
	0x01E9561C LDP X30, X21, [X31 + 0x40]
	0x01E95620 ADD X31, X31, 0x60
	0x01E95624 RET
	0x01E95628 BL 0x3EB1B20
	0x01E9562C SUB X31, X31, 0x40
	0x01E95630 STP X30, X19, [X31 + 0x30]
	0x01E95634 MRS X19, 0xC000
	0x01E95638 LDR X8, [X19 + 0x28]
	0x01E9563C MOV X1, X31
	0x01E95640 STR X8, [X31 + 0x28]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+32]
	003 Compare X8, 0
	004 JumpIfEqual {16}
	005 NotImplemented "Instruction LDRSH not yet implemented."
	006 Add X0, X8, 80
	007 Add X1, X1, 80
	008 Move X3, X31
	009 Move W8, W9
	010 ShiftRight W8, 30
	011 And W8, W8, 0x1FFFFFFF
	012 Subtract W2, W8, 80
	013 Move X30, [X31+16]
	014 Call Native.MemCpy, X0, X1, X2
	015 Return 
	016 Call 0x1C17F20

Method: Fusion.NetworkId NetworkWrap(Fusion.NetworkRunner runner, Fusion.NetworkObject obj)

Disassembly:
	0x01E95644 BL 0x3376F6C
	0x01E95648 STP X0, X1, [X31 + 0x8]
	0x01E9564C ADD X0, X31, 0x8
	0x01E95650 ADD X1, X31, 0x18
	0x01E95654 STP X31, X31, [X31 + 0x18]
	0x01E95658 BL 0x1E94F44
	0x01E9565C LDP X0, X1, [X31 + 0x18]
	0x01E95660 LDR X8, [X19 + 0x28]
	0x01E95664 LDR X9, [X31 + 0x28]

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {13}
	003 Move W8, [X1+96]
	004 Move TEMP, X8
	005 And TEMP, TEMP, 2
	006 Compare TEMP, 2
	007 JumpIfEqual {13}
	008 Move X8, [X1+32]
	009 Compare X8, 0
	010 JumpIfEqual {13}
	011 Move W0, [X8]
	012 Return X0
	013 Move X0, X31
	014 Return X0

Method: Fusion.NetworkId NetworkWrap(Fusion.NetworkObject obj)

Disassembly:
	0x01E95668 CMP X8, X9
	0x01E9566C B.NE 0x1E9567C
	0x01E95670 LDP X30, X19, [X31 + 0x30]
	0x01E95674 ADD X31, X31, 0x40
	0x01E95678 RET
	0x01E9567C BL 0x3EB1B20
	0x01E95680 CMP X0, X2
	0x01E95684 CSET W8, EQ
	0x01E95688 CMP X1, X3

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {12}
	003 Move W8, [X0+96]
	004 Move TEMP, X8
	005 And TEMP, TEMP, 2
	006 Compare TEMP, 2
	007 JumpIfEqual {13}
	008 Move X8, [X0+32]
	009 Compare X8, 0
	010 JumpIfEqual {13}
	011 Move W0, [X8]
	012 Return X0
	013 Move X0, X31
	014 Return X0

Method: System.Void NetworkUnwrap(Fusion.NetworkRunner runner, Fusion.NetworkId wrapper, ref Fusion.NetworkObject result)

Disassembly:
	0x01E9568C CSET W9, EQ
	0x01E95690 AND W0, W8, W9, 0x0
	0x01E95694 RET
	0x01E95698 LDR X8, [X0]
	0x01E9569C CMP X8, X1
	0x01E956A0 B.NE 0x1E956B4
	0x01E956A4 LDR X8, [X0 + 0x8]
	0x01E956A8 CMP X8, X2
	0x01E956AC CSET W0, EQ
	0x01E956B0 RET
	0x01E956B4 MOV W0, W31
	0x01E956B8 RET
	0x01E956BC CMP X0, X2
	0x01E956C0 CSET W8, NE
	0x01E956C4 CMP X1, X3
	0x01E956C8 CSET W9, NE
	0x01E956CC ORR W0, W8, W9, 0x0
	0x01E956D0 RET
	0x01E956D4 STP X30, X21, [X31 - 0x20]!
	0x01E956D8 STP X20, X19, [X31 + 0x10]
	0x01E956DC ADRP X21, 0x2544000
	0x01E956E0 LDRB W8, [X21 + 0x2A7]
	0x01E956E4 MOV X20, X1
	0x01E956E8 MOV X19, X0
	0x01E956EC TBNZ X8, 0x0, 0x1E95704
	0x01E956F0 ADRP X0, 0x2269000
	0x01E956F4 LDR X0, [X0 + 0x360]
	0x01E956F8 BL 0x1C16CF4
	0x01E956FC MOVZ W8, 0x1
	0x01E95700 STRB W8, [X21 + 0x2A7]
	0x01E95704 CBZ X20, 0x1E9574C
	0x01E95708 ADRP X8, 0x2269000
	0x01E9570C LDR X8, [X8 + 0x360]
	0x01E95710 LDR X9, [X20]
	0x01E95714 LDR X8, [X8]
	0x01E95718 CMP X9, X8
	0x01E9571C B.NE 0x1E9574C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x2545000
	008 Move X22, 0x2262000
	009 Move W8, [X23+672]
	010 Move X22, [X22+920]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x2262000
	019 Move X0, [X0+920]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+672], W8
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfEqual {43}
	027 Compare W21, 0
	028 JumpIfEqual {46}
	029 Compare X20, 0
	030 JumpIfEqual {54}
	031 And X1, X21, 0
	032 Move X0, X20
	033 Move X2, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X3, X31
	039 Move X30, [X31+48]
	040 Move X23, [X31+56]
	041 Call NetworkRunner.TryFindObject, X0, X1, X2
	042 Return 
	043 Call 0x1C17DFC
	044 Compare W21, 0
	045 JumpIfNotEqual {29}
	046 Move [X19], X31
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Move X23, [X31+56]
	053 Return 
	054 Call 0x1C17F20

Method: System.Void MakeOwned(Fusion.NetworkRunner runner)

Disassembly:
	0x01E95720 MOV X0, X20
	0x01E95724 BL 0x1C16E08

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.Void MakeUnowned()

Disassembly:
	0x01E95728 LDR X8, [X0]
	0x01E9572C LDR X9, [X19]

ISIL:
	001 Move [X0+48], X31
	002 Return 

Method: System.Void DebugNotifySpawned()

Disassembly:
	0x01E95730 CMP X9, X8

ISIL:
	001 Return 

Method: System.Void DebugNotifyDespawning()

Disassembly:
	0x01E95734 B.NE 0x1E9574C

ISIL:
	001 Return 

Method: System.Void GetDumpString(System.Text.StringBuilder builder)

Disassembly:
	0x01E95738 LDR X8, [X0 + 0x8]
	0x01E9573C LDR X9, [X19 + 0x8]
	0x01E95740 CMP X9, X8
	0x01E95744 CSET W0, EQ
	0x01E95748 B 0x1E95750
	0x01E9574C MOV W0, W31
	0x01E95750 LDP X20, X19, [X31 + 0x10]
	0x01E95754 LDP X30, X21, [X31], #0x20
	0x01E95758 RET
	0x01E9575C SUB X31, X31, 0x50
	0x01E95760 STP X30, X19, [X31 + 0x40]
	0x01E95764 MRS X19, 0xC000
	0x01E95768 LDR X8, [X19 + 0x28]
	0x01E9576C ADD X1, X31, 0x18
	0x01E95770 STR X8, [X31 + 0x38]
	0x01E95774 STP X31, X31, [X31 + 0x8]
	0x01E95778 LDP X8, X9, [X0]
	0x01E9577C ADD X0, X31, 0x28
	0x01E95780 STP X31, X31, [X31 + 0x18]
	0x01E95784 STP X8, X9, [X31 + 0x28]
	0x01E95788 BL 0x1E94F44
	0x01E9578C LDP X8, X9, [X31 + 0x18]
	0x01E95790 ADD X0, X31, 0x8
	0x01E95794 MOV X1, X31
	0x01E95798 STP X8, X9, [X31 + 0x8]
	0x01E9579C BL 0x33788AC
	0x01E957A0 LDR X8, [X19 + 0x28]
	0x01E957A4 LDR X9, [X31 + 0x38]
	0x01E957A8 CMP X8, X9
	0x01E957AC B.NE 0x1E957BC
	0x01E957B0 LDP X30, X19, [X31 + 0x40]
	0x01E957B4 ADD X31, X31, 0x50
	0x01E957B8 RET
	0x01E957BC BL 0x3EB1B20
	0x01E957C0 SUB X31, X31, 0x50
	0x01E957C4 STP X30, X19, [X31 + 0x40]
	0x01E957C8 MRS X19, 0xC000
	0x01E957CC LDR X8, [X19 + 0x28]
	0x01E957D0 ADD X1, X31, 0x18
	0x01E957D4 STR X8, [X31 + 0x38]
	0x01E957D8 STP X31, X31, [X31 + 0x8]
	0x01E957DC LDP X8, X9, [X0]
	0x01E957E0 ADD X0, X31, 0x28
	0x01E957E4 STP X31, X31, [X31 + 0x18]
	0x01E957E8 STP X8, X9, [X31 + 0x28]
	0x01E957EC BL 0x1E94F44
	0x01E957F0 LDP X8, X9, [X31 + 0x18]
	0x01E957F4 ADD X0, X31, 0x8
	0x01E957F8 MOV X1, X31
	0x01E957FC STP X8, X9, [X31 + 0x8]
	0x01E95800 BL 0x337866C
	0x01E95804 LDR X8, [X19 + 0x28]
	0x01E95808 LDR X9, [X31 + 0x38]
	0x01E9580C CMP X8, X9
	0x01E95810 B.NE 0x1E95820
	0x01E95814 LDP X30, X19, [X31 + 0x40]
	0x01E95818 ADD X31, X31, 0x50
	0x01E9581C RET
	0x01E95820 BL 0x3EB1B20
	0x01E95824 STP X30, X21, [X31 - 0x20]!
	0x01E95828 STP X20, X19, [X31 + 0x10]
	0x01E9582C ADRP X20, 0x2544000
	0x01E95830 ADRP X21, 0x2269000
	0x01E95834 LDRB W8, [X20 + 0x2A8]
	0x01E95838 LDR X21, [X21 + 0x358]
	0x01E9583C MOV X19, X0
	0x01E95840 TBNZ X8, 0x0, 0x1E95858
	0x01E95844 ADRP X0, 0x2269000
	0x01E95848 LDR X0, [X0 + 0x358]
	0x01E9584C BL 0x1C16CF4
	0x01E95850 MOVZ W8, 0x1
	0x01E95854 STRB W8, [X20 + 0x2A8]
	0x01E95858 LDR X1, [X21]
	0x01E9585C MOV X0, X19
	0x01E95860 LDP X20, X19, [X31 + 0x10]
	0x01E95864 LDP X30, X21, [X31], #0x20
	0x01E95868 B 0x1E9586C
	0x01E9586C SUB X31, X31, 0x60
	0x01E95870 STR X30, [X31 + 0x40]
	0x01E95874 STP X20, X19, [X31 + 0x50]
	0x01E95878 MRS X20, 0xC000
	0x01E9587C LDR X8, [X20 + 0x28]
	0x01E95880 MOV X19, X1
	0x01E95884 ADD X1, X31, 0x18
	0x01E95888 STR X8, [X31 + 0x38]
	0x01E9588C STP X31, X31, [X31 + 0x8]
	0x01E95890 LDP X8, X9, [X0]
	0x01E95894 ADD X0, X31, 0x28
	0x01E95898 STP X31, X31, [X31 + 0x18]
	0x01E9589C STP X8, X9, [X31 + 0x28]
	0x01E958A0 BL 0x1E94F44
	0x01E958A4 LDP X8, X9, [X31 + 0x18]
	0x01E958A8 ADD X0, X31, 0x8
	0x01E958AC MOV X1, X19
	0x01E958B0 MOV X2, X31
	0x01E958B4 STP X8, X9, [X31 + 0x8]
	0x01E958B8 BL 0x3378CA4
	0x01E958BC LDR X8, [X20 + 0x28]
	0x01E958C0 LDR X9, [X31 + 0x38]
	0x01E958C4 CMP X8, X9
	0x01E958C8 B.NE 0x1E958DC
	0x01E958CC LDP X20, X19, [X31 + 0x50]
	0x01E958D0 LDR X30, [X31 + 0x40]
	0x01E958D4 ADD X31, X31, 0x60
	0x01E958D8 RET
	0x01E958DC BL 0x3EB1B20
	0x01E958E0 LDR X8, [X0]
	0x01E958E4 SUBS X8, X8, X1
	0x01E958E8 B.NE 0x1E958F8
	0x01E958EC LDR X8, [X0 + 0x8]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2545000
	009 Move W8, [X21+673]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x2262000
	017 Move X0, [X0+920]
	018 Call 0x1C17CF4
	019 Move X0, 0x2268000
	020 Move X0, [X0+3712]
	021 Call 0x1C17CF4
	022 Move X0, 0x225F000
	023 Move X0, [X0+3544]
	024 Call 0x1C17CF4
	025 Move X0, 0x2269000
	026 Move X0, [X0+2200]
	027 Call 0x1C17CF4
	028 Move X0, 0x225F000
	029 Move X0, [X0+3784]
	030 Call 0x1C17CF4
	031 Move X0, 0x225F000
	032 Move X0, [X0+2120]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+673], W8
	036 Compare X19, 0
	037 JumpIfEqual {129}
	038 Move X8, 0x225F000
	039 Move X8, [X8+3784]
	040 Move X21, 0x2262000
	041 Move X0, X19
	042 Move X2, X31
	043 Move X1, [X8]
	044 Move X21, [X21+920]
	045 Call StringBuilder.Append, X0, X1
	046 Move X0, X20
	047 Move X1, X31
	048 Call Behaviour.get_DebugNameThreadSafe, X0
	049 Move X1, X0
	050 Move X0, X19
	051 Move X2, X31
	052 Call StringBuilder.Append, X0, X1
	053 Move X8, [X20+32]
	054 Compare X8, 0
	055 JumpIfEqual {57}
	056 Move W23, [X8]
	057 Move W23, W31
	058 Move X0, [X21]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X22, 0x2268000
	064 Move X22, [X22+3712]
	065 Compare W23, 0
	066 JumpIfEqual {89}
	067 Move X8, 0x225F000
	068 Move X8, [X8+3544]
	069 Move X0, X19
	070 Move X2, X31
	071 Move X1, [X8]
	072 Call StringBuilder.Append, X0, X1
	073 Move X8, [X20+32]
	074 Compare X8, 0
	075 JumpIfEqual {77}
	076 Move W8, [X8]
	077 Move X0, [X21]
	078 Move [X31+8], W8
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Add X0, X31, 8
	084 Call NetworkId.ToString, X0
	085 Move X1, X0
	086 Move X0, X19
	087 Move X2, X31
	088 Call StringBuilder.Append, X0, X1
	089 Move X0, X19
	090 Move X1, X31
	091 Call StringBuilder.get_Length, X0
	092 Move X8, [X22]
	093 Move X21, [X20+48]
	094 Move W20, W0
	095 Move W9, [X8+224]
	096 Compare W9, 0
	097 JumpIfNotEqual {100}
	098 Move X0, X8
	099 Call 0x1C17DFC
	100 Move X22, 0x225F000
	101 Move X22, [X22+2120]
	102 Move X0, X19
	103 Move X1, X21
	104 Move X2, X31
	105 Call NetworkRunner.TryGetPrettyRunnerName, X0, X1
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {117}
	110 Move X8, 0x2269000
	111 Move X8, [X8+2200]
	112 Move X0, X19
	113 Move W1, W20
	114 Move X3, X31
	115 Move X2, [X8]
	116 Call StringBuilder.Insert, X0, X1, X2
	117 Move X1, [X22]
	118 Move X0, X19
	119 Move X20, [X31+48]
	120 Move X19, [X31+56]
	121 Move X22, [X31+32]
	122 Move X21, [X31+40]
	123 Move X30, [X31+16]
	124 Move X23, [X31+24]
	125 Move X2, X31
	126 Add X31, X31, 64
	127 Call StringBuilder.Append, X0, X1
	128 Return 
	129 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01E958F0 SUBS X8, X8, X2
	0x01E958F4 B.EQ 0x1E95908
	0x01E958F8 CMP X8, 0x0
	0x01E958FC MOVZ W8, 0x1

ISIL:
	001 Move W8, 1
	002 Move X1, X31
	003 Move [X0+88], W8
	004 Call Behaviour..ctor, X0
	005 Return 

