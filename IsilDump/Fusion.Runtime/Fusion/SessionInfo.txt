Type: Fusion.SessionInfo

Method: System.Boolean get_IsValid()

Disassembly:
	0x01E700A4 LDR W8, [X22 + 0x30]
	0x01E700A8 LDR X29, [X22 + 0x28]

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.String get_Name()

Disassembly:
	0x01E700AC ANDS W31, W8, 0x1C
	0x01E700B0 CSET W9, EQ

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Name(System.String value)

Disassembly:
	0x01E700B4 ANDS W31, W8, 0x3
	0x01E700B8 CSET W8, NE

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.String get_Region()

Disassembly:
	0x01E700BC ANDS W8, W9, W8, 0x0
	0x01E700C0 CSEL X28, X29, X28, NE

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_Region(System.String value)

Disassembly:
	0x01E700C4 TBZ X8, 0x0, 0x1E70154
	0x01E700C8 CBZ X22, 0x1E70198

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.Boolean get_IsVisible()

Disassembly:
	0x01E700CC LDR X23, [X27]
	0x01E700D0 MOV X0, X22

ISIL:
	001 Move W0, [X0+50]
	002 Return X0

Method: System.Void set_IsVisible(System.Boolean value)

Disassembly:
	0x01E700D4 MOV X1, X23
	0x01E700D8 BL 0x1C16E00
	0x01E700DC CBZ X0, 0x1E701B0
	0x01E700E0 LDR X24, [X27]
	0x01E700E4 MOV X0, X22
	0x01E700E8 MOV X1, X24
	0x01E700EC BL 0x1C16E00
	0x01E700F0 MOV X23, X0
	0x01E700F4 CBZ X0, 0x1E701A0
	0x01E700F8 LDR X8, [X23]
	0x01E700FC LDRH W9, [X8 + 0x12E]
	0x01E70100 CBZ X9, 0x1E70124
	0x01E70104 LDR X10, [X8 + 0xB0]
	0x01E70108 ADD X10, X10, 0x8
	0x01E7010C LDUR X11, [X10 - 0x8]
	0x01E70110 CMP X11, X24
	0x01E70114 B.EQ 0x1E70138
	0x01E70118 SUBS X9, X9, 0x1
	0x01E7011C ADD X10, X10, 0x10
	0x01E70120 B.NE 0x1E7010C
	0x01E70124 MOV X0, X23
	0x01E70128 MOV X1, X24
	0x01E7012C MOV W2, W31
	0x01E70130 BL 0x1C5C788
	0x01E70134 B 0x1E70144
	0x01E70138 LDRSW X9, [X10]
	0x01E7013C ADD X8, X8, X9, 0x4, LSL
	0x01E70140 ADD X0, X8, 0x138
	0x01E70144 LDP X8, X1, [X0]
	0x01E70148 MOV X0, X23
	0x01E7014C BLR X8
	0x01E70150 MOV X29, X28
	0x01E70154 MOV X22, X29
	0x01E70158 STR X29, [X31 + 0x8]
	0x01E7015C CBNZ X29, 0x1E700A0
	0x01E70160 MOVZ W23, 0x7
	0x01E70164 ADD X0, X31, 0x0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x256A000
	007 Move W8, [X21+322]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x228E000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move X0, 0x2288000
	018 Move X0, [X0+4056]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+322], W8
	022 Move X8, [X19+56]
	023 Compare X8, 0
	024 JumpIfEqual {40}
	025 Move X0, [X8+432]
	026 Compare X0, 0
	027 JumpIfEqual {40}
	028 And W1, W20, 1
	029 Call CloudServices.UpdateRoomIsVisible, X0, X1
	030 Move X8, 0x2288000
	031 Move X8, [X8+4056]
	032 And W1, W0, 1
	033 Add X0, X31, 12
	034 NotImplemented "Instruction STRH not yet implemented."
	035 Move X2, [X8]
	036 Call Nullable`1<Boolean>..ctor, X0, X1
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move [X19+48], W31
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+16]
	043 Move X21, [X31+24]
	044 Add X31, X31, 48
	045 Return 

Method: System.Boolean get_IsOpen()

Disassembly:
	0x01E70168 MOV X1, X31
	0x01E7016C BL 0x1E79B10

ISIL:
	001 Move W0, [X0+49]
	002 Return X0

Method: System.Void set_IsOpen(System.Boolean value)

Disassembly:
	0x01E70170 CBNZ X22, 0x1E70210
	0x01E70174 CMP W23, 0x7
	0x01E70178 B.EQ 0x1E70180
	0x01E7017C CBNZ W23, 0x1E702A4
	0x01E70180 ADD W21, W21, 0x1
	0x01E70184 CMP W21, W20
	0x01E70188 B.NE 0x1E7005C
	0x01E7018C B 0x1E702A4
	0x01E70190 BL 0x1C16F20
	0x01E70194 B 0x1E7021C
	0x01E70198 BL 0x1C16F20
	0x01E7019C B 0x1E7021C
	0x01E701A0 MOV X0, X22
	0x01E701A4 MOV X1, X24
	0x01E701A8 BL 0x1C171E0
	0x01E701AC B 0x1E7021C
	0x01E701B0 MOV X0, X22
	0x01E701B4 MOV X1, X23
	0x01E701B8 BL 0x1C171E0
	0x01E701BC B 0x1E7021C
	0x01E701C0 B 0x1E701CC
	0x01E701C4 MOV X28, X29
	0x01E701C8 B 0x1E701CC
	0x01E701CC CMP W1, 0x1
	0x01E701D0 B.NE 0x1E701E8
	0x01E701D4 BL 0x3EB1AD0
	0x01E701D8 LDR X22, [X0]
	0x01E701DC BL 0x3EB1AE0
	0x01E701E0 MOV W23, W31
	0x01E701E4 B 0x1E70164
	0x01E701E8 MOV X20, X1
	0x01E701EC MOV X19, X0
	0x01E701F0 MOV X22, X31
	0x01E701F4 ADD X0, X31, 0x0
	0x01E701F8 MOV X1, X31
	0x01E701FC BL 0x1E79B10
	0x01E70200 MOV X1, X20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x256A000
	007 Move W8, [X21+323]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x228E000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move X0, 0x2288000
	018 Move X0, [X0+4056]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+323], W8
	022 Move X8, [X19+56]
	023 Compare X8, 0
	024 JumpIfEqual {40}
	025 Move X0, [X8+432]
	026 Compare X0, 0
	027 JumpIfEqual {40}
	028 And W1, W20, 1
	029 Call CloudServices.UpdateRoomIsOpen, X0, X1
	030 Move X8, 0x2288000
	031 Move X8, [X8+4056]
	032 And W1, W0, 1
	033 Add X0, X31, 12
	034 NotImplemented "Instruction STRH not yet implemented."
	035 Move X2, [X8]
	036 Call Nullable`1<Boolean>..ctor, X0, X1
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move [X19+48], W31
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+16]
	043 Move X21, [X31+24]
	044 Add X31, X31, 48
	045 Return 

Method: System.Collections.ObjectModel.ReadOnlyDictionary`2<System.String, Fusion.SessionProperty> get_Properties()

Disassembly:
	0x01E70204 CBZ X22, 0x1E70248
	0x01E70208 MOV X0, X22

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_Properties(System.Collections.ObjectModel.ReadOnlyDictionary`2<System.String, Fusion.SessionProperty> value)

Disassembly:
	0x01E7020C BL 0x1C16F18
	0x01E70210 MOV X0, X22

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Int32 get_PlayerCount()

Disassembly:
	0x01E70214 BL 0x1C16F18
	0x01E70218 BL 0x1C16F20

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_PlayerCount(System.Int32 value)

Disassembly:
	0x01E7021C MOV X20, X1
	0x01E70220 MOV X19, X0

ISIL:
	001 Move [X0+40], W1
	002 Return 

Method: System.Int32 get_MaxPlayers()

Disassembly:
	0x01E70224 B 0x1E701F4
	0x01E70228 B 0x1E70244

ISIL:
	001 Move W0, [X0+44]
	002 Return X0

Method: System.Void set_MaxPlayers(System.Int32 value)

Disassembly:
	0x01E7022C B 0x1E70244
	0x01E70230 B 0x1E70244

ISIL:
	001 Move [X0+44], W1
	002 Return 

Method: System.Boolean op_Implicit(Fusion.SessionInfo sessionInfo)

Disassembly:
	0x01E70234 B 0x1E70244
	0x01E70238 B 0x1E70244
	0x01E7023C B 0x1E70244
	0x01E70240 B 0x1E70244
	0x01E70244 MOV X19, X0

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {6}
	003 Move W8, [X0+48]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSET not yet implemented."
	006 Return X0

Method: System.Void .ctor(Fusion.NetworkRunner runner = null)

Disassembly:
	0x01E6B4C8 MOV X3, X31
	0x01E6B4CC MOV X21, X0
	0x01E6B4D0 LDR X2, [X8]
	0x01E6B4D4 BL 0x2D2B9F4
	0x01E6B4D8 LDR X0, [X19 + 0x28]
	0x01E6B4DC CBZ X0, 0x1E6B540
	0x01E6B4E0 MOV X1, X31
	0x01E6B4E4 BL 0x1E9E014
	0x01E6B4E8 ADRP X8, 0x2290000
	0x01E6B4EC LDR X8, [X8 + 0x7D0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+56], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Boolean UpdateCustomProperties(System.Collections.Generic.Dictionary`2<System.String, Fusion.SessionProperty> customProperties)

Disassembly:
	0x01E70248 CMP W1, 0x1
	0x01E7024C B.NE 0x1E702EC
	0x01E70250 MOV X0, X19
	0x01E70254 BL 0x3EB1AD0
	0x01E70258 MOV X19, X0
	0x01E7025C ADRP X0, 0x2283000
	0x01E70260 LDR X0, [X0 + 0x7D0]
	0x01E70264 BL 0x1C16D08
	0x01E70268 LDR X8, [X19]
	0x01E7026C LDR X1, [X8]
	0x01E70270 BL 0x1C17270
	0x01E70274 TBZ X0, 0x0, 0x1E702C4
	0x01E70278 LDR X19, [X19]
	0x01E7027C BL 0x3EB1AE0
	0x01E70280 ADRP X0, 0x228B000
	0x01E70284 LDR X0, [X0 + 0x8B0]
	0x01E70288 BL 0x1C16D08
	0x01E7028C LDR W8, [X0 + 0xE0]
	0x01E70290 CBNZ W8, 0x1E70298
	0x01E70294 BL 0x1C16DFC
	0x01E70298 MOV X0, X19
	0x01E7029C MOV X1, X31
	0x01E702A0 BL 0x1E3E4C8
	0x01E702A4 LDP X20, X19, [X31 + 0x60]
	0x01E702A8 LDP X22, X21, [X31 + 0x50]
	0x01E702AC LDP X24, X23, [X31 + 0x40]
	0x01E702B0 LDP X26, X25, [X31 + 0x30]
	0x01E702B4 LDP X28, X27, [X31 + 0x20]
	0x01E702B8 LDP X29, X30, [X31 + 0x10]
	0x01E702BC ADD X31, X31, 0x70
	0x01E702C0 RET
	0x01E702C4 MOVZ W0, 0x8
	0x01E702C8 BL 0x3EB1AF0
	0x01E702CC LDR X8, [X19]
	0x01E702D0 STR X8, [X0]
	0x01E702D4 ADRP X1, 0x2044000
	0x01E702D8 ADD X1, X1, 0xE58
	0x01E702DC MOV X2, X31
	0x01E702E0 BL 0x3EB1B00
	0x01E702E4 MOV X19, X0
	0x01E702E8 BL 0x3EB1AE0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x256A000
	007 Move W8, [X21+324]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x228E000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move X0, 0x2288000
	018 Move X0, [X0+4056]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+324], W8
	022 Move X8, [X19+56]
	023 Compare X8, 0
	024 JumpIfEqual {42}
	025 Move X0, [X8+432]
	026 Compare X0, 0
	027 JumpIfEqual {43}
	028 Move X1, X20
	029 Call CloudServices.UpdateRoomProperties, X0, X1
	030 Move X8, 0x2288000
	031 Move X8, [X8+4056]
	032 And W1, W0, 1
	033 Add X0, X31, 12
	034 NotImplemented "Instruction STRH not yet implemented."
	035 Move X2, [X8]
	036 Call Nullable`1<Boolean>..ctor, X0, X1
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Move W0, W31
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W0, 1
	041 Move [X19+48], W31
	042 Move W0, W31
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X30, [X31+16]
	046 Move X21, [X31+24]
	047 Add X31, X31, 48
	048 Return X0

Method: System.String ToString()

Disassembly:
	0x01E702EC MOV X0, X19
	0x01E702F0 BL 0x1D2C690
	0x01E702F4 BL 0x1990590
	0x01E702F8 SUB X31, X31, 0x70
	0x01E702FC STP X29, X30, [X31 + 0x10]
	0x01E70300 STP X28, X27, [X31 + 0x20]
	0x01E70304 STP X26, X25, [X31 + 0x30]
	0x01E70308 STP X24, X23, [X31 + 0x40]
	0x01E7030C STP X22, X21, [X31 + 0x50]
	0x01E70310 STP X20, X19, [X31 + 0x60]
	0x01E70314 ADRP X20, 0x2569000
	0x01E70318 ADRP X25, 0x228D000
	0x01E7031C ADRP X26, 0x2283000
	0x01E70320 LDRB W8, [X20 + 0x149]
	0x01E70324 LDR X25, [X25 + 0x3C0]
	0x01E70328 LDR X26, [X26 + 0x6C0]
	0x01E7032C MOV X19, X0
	0x01E70330 TBNZ X8, 0x0, 0x1E70360
	0x01E70334 ADRP X0, 0x228D000
	0x01E70338 LDR X0, [X0 + 0x3C0]
	0x01E7033C BL 0x1C16CF4
	0x01E70340 ADRP X0, 0x228D000
	0x01E70344 LDR X0, [X0 + 0x3C8]
	0x01E70348 BL 0x1C16CF4
	0x01E7034C ADRP X0, 0x2283000
	0x01E70350 LDR X0, [X0 + 0x6C0]
	0x01E70354 BL 0x1C16CF4
	0x01E70358 MOVZ W8, 0x1
	0x01E7035C STRB W8, [X20 + 0x149]
	0x01E70360 LDR X0, [X26]
	0x01E70364 STP X31, X31, [X31]
	0x01E70368 LDR X20, [X25]
	0x01E7036C LDR W8, [X0 + 0xE0]
	0x01E70370 CBNZ W8, 0x1E70378
	0x01E70374 BL 0x1C16DFC
	0x01E70378 MOV X0, X20
	0x01E7037C MOV X1, X31
	0x01E70380 BL 0x338C698
	0x01E70384 MOV X1, X0
	0x01E70388 CBZ X19, 0x1E70570
	0x01E7038C MOV X0, X19
	0x01E70390 MOV X2, X31
	0x01E70394 BL 0x1E7B718
	0x01E70398 MOV W20, W0
	0x01E7039C CMP W0, 0x1
	0x01E703A0 B.LT 0x1E705FC
	0x01E703A4 ADRP X27, 0x228D000
	0x01E703A8 LDR X27, [X27 + 0x3C8]
	0x01E703AC MOV W21, W31
	0x01E703B0 MOV X28, X31
	0x01E703B4 LDR X0, [X26]
	0x01E703B8 LDR X22, [X25]
	0x01E703BC LDR W8, [X0 + 0xE0]
	0x01E703C0 CBNZ W8, 0x1E703C8
	0x01E703C4 BL 0x1C16DFC
	0x01E703C8 MOV X0, X22
	0x01E703CC MOV X1, X31
	0x01E703D0 BL 0x338C698
	0x01E703D4 MOV X1, X0
	0x01E703D8 ADD X3, X31, 0x8
	0x01E703DC MOV X0, X19
	0x01E703E0 MOV W2, W21
	0x01E703E4 MOV X4, X31
	0x01E703E8 BL 0x1E7B788
	0x01E703EC LDR X22, [X31 + 0x8]
	0x01E703F0 STR X0, [X31]
	0x01E703F4 CBZ X22, 0x1E704B8
	0x01E703F8 CBZ X22, 0x1E704E8
	0x01E703FC LDR W8, [X22 + 0x30]
	0x01E70400 LDR X29, [X22 + 0x28]
	0x01E70404 ANDS W31, W8, 0x1C
	0x01E70408 CSET W9, EQ
	0x01E7040C ANDS W31, W8, 0x3
	0x01E70410 CSET W8, NE
	0x01E70414 ANDS W8, W9, W8, 0x0
	0x01E70418 CSEL X28, X29, X28, NE
	0x01E7041C TBZ X8, 0x0, 0x1E704AC
	0x01E70420 CBZ X22, 0x1E704F0
	0x01E70424 LDR X23, [X27]
	0x01E70428 MOV X0, X22
	0x01E7042C MOV X1, X23
	0x01E70430 BL 0x1C16E00
	0x01E70434 CBZ X0, 0x1E70508
	0x01E70438 LDR X24, [X27]
	0x01E7043C MOV X0, X22
	0x01E70440 MOV X1, X24
	0x01E70444 BL 0x1C16E00
	0x01E70448 MOV X23, X0
	0x01E7044C CBZ X0, 0x1E704F8
	0x01E70450 LDR X8, [X23]
	0x01E70454 LDRH W9, [X8 + 0x12E]
	0x01E70458 CBZ X9, 0x1E7047C
	0x01E7045C LDR X10, [X8 + 0xB0]
	0x01E70460 ADD X10, X10, 0x8
	0x01E70464 LDUR X11, [X10 - 0x8]
	0x01E70468 CMP X11, X24
	0x01E7046C B.EQ 0x1E70490
	0x01E70470 SUBS X9, X9, 0x1
	0x01E70474 ADD X10, X10, 0x10
	0x01E70478 B.NE 0x1E70464
	0x01E7047C MOV X0, X23
	0x01E70480 MOV X1, X24
	0x01E70484 MOV W2, W31
	0x01E70488 BL 0x1C5C788
	0x01E7048C B 0x1E7049C
	0x01E70490 LDRSW X9, [X10]
	0x01E70494 ADD X8, X8, X9, 0x4, LSL
	0x01E70498 ADD X0, X8, 0x138
	0x01E7049C LDP X8, X1, [X0]
	0x01E704A0 MOV X0, X23
	0x01E704A4 BLR X8
	0x01E704A8 MOV X29, X28
	0x01E704AC MOV X22, X29
	0x01E704B0 STR X29, [X31 + 0x8]
	0x01E704B4 CBNZ X29, 0x1E703F8
	0x01E704B8 MOVZ W23, 0x7
	0x01E704BC ADD X0, X31, 0x0
	0x01E704C0 MOV X1, X31
	0x01E704C4 BL 0x1E79B10
	0x01E704C8 CBNZ X22, 0x1E70568
	0x01E704CC CMP W23, 0x7
	0x01E704D0 B.EQ 0x1E704D8
	0x01E704D4 CBNZ W23, 0x1E705FC
	0x01E704D8 ADD W21, W21, 0x1
	0x01E704DC CMP W21, W20
	0x01E704E0 B.NE 0x1E703B4
	0x01E704E4 B 0x1E705FC
	0x01E704E8 BL 0x1C16F20
	0x01E704EC B 0x1E70574
	0x01E704F0 BL 0x1C16F20
	0x01E704F4 B 0x1E70574
	0x01E704F8 MOV X0, X22
	0x01E704FC MOV X1, X24
	0x01E70500 BL 0x1C171E0
	0x01E70504 B 0x1E70574
	0x01E70508 MOV X0, X22
	0x01E7050C MOV X1, X23
	0x01E70510 BL 0x1C171E0
	0x01E70514 B 0x1E70574
	0x01E70518 B 0x1E70524
	0x01E7051C MOV X28, X29
	0x01E70520 B 0x1E70524
	0x01E70524 CMP W1, 0x1
	0x01E70528 B.NE 0x1E70540
	0x01E7052C BL 0x3EB1AD0
	0x01E70530 LDR X22, [X0]
	0x01E70534 BL 0x3EB1AE0
	0x01E70538 MOV W23, W31
	0x01E7053C B 0x1E704BC
	0x01E70540 MOV X20, X1
	0x01E70544 MOV X19, X0
	0x01E70548 MOV X22, X31
	0x01E7054C ADD X0, X31, 0x0
	0x01E70550 MOV X1, X31
	0x01E70554 BL 0x1E79B10
	0x01E70558 MOV X1, X20
	0x01E7055C CBZ X22, 0x1E705A0
	0x01E70560 MOV X0, X22
	0x01E70564 BL 0x1C16F18
	0x01E70568 MOV X0, X22
	0x01E7056C BL 0x1C16F18
	0x01E70570 BL 0x1C16F20
	0x01E70574 MOV X20, X1
	0x01E70578 MOV X19, X0
	0x01E7057C B 0x1E7054C
	0x01E70580 B 0x1E7059C
	0x01E70584 B 0x1E7059C
	0x01E70588 B 0x1E7059C
	0x01E7058C B 0x1E7059C
	0x01E70590 B 0x1E7059C
	0x01E70594 B 0x1E7059C
	0x01E70598 B 0x1E7059C
	0x01E7059C MOV X19, X0
	0x01E705A0 CMP W1, 0x1
	0x01E705A4 B.NE 0x1E70644
	0x01E705A8 MOV X0, X19
	0x01E705AC BL 0x3EB1AD0
	0x01E705B0 MOV X19, X0
	0x01E705B4 ADRP X0, 0x2283000
	0x01E705B8 LDR X0, [X0 + 0x7D0]
	0x01E705BC BL 0x1C16D08
	0x01E705C0 LDR X8, [X19]
	0x01E705C4 LDR X1, [X8]
	0x01E705C8 BL 0x1C17270
	0x01E705CC TBZ X0, 0x0, 0x1E7061C
	0x01E705D0 LDR X19, [X19]
	0x01E705D4 BL 0x3EB1AE0
	0x01E705D8 ADRP X0, 0x228B000
	0x01E705DC LDR X0, [X0 + 0x8B0]
	0x01E705E0 BL 0x1C16D08
	0x01E705E4 LDR W8, [X0 + 0xE0]
	0x01E705E8 CBNZ W8, 0x1E705F0
	0x01E705EC BL 0x1C16DFC
	0x01E705F0 MOV X0, X19
	0x01E705F4 MOV X1, X31
	0x01E705F8 BL 0x1E3E4C8
	0x01E705FC LDP X20, X19, [X31 + 0x60]
	0x01E70600 LDP X22, X21, [X31 + 0x50]
	0x01E70604 LDP X24, X23, [X31 + 0x40]
	0x01E70608 LDP X26, X25, [X31 + 0x30]
	0x01E7060C LDP X28, X27, [X31 + 0x20]
	0x01E70610 LDP X29, X30, [X31 + 0x10]
	0x01E70614 ADD X31, X31, 0x70
	0x01E70618 RET
	0x01E7061C MOVZ W0, 0x8
	0x01E70620 BL 0x3EB1AF0
	0x01E70624 LDR X8, [X19]
	0x01E70628 STR X8, [X0]
	0x01E7062C ADRP X1, 0x2044000
	0x01E70630 ADD X1, X1, 0xE58
	0x01E70634 MOV X2, X31
	0x01E70638 BL 0x3EB1B00
	0x01E7063C MOV X19, X0
	0x01E70640 BL 0x3EB1AE0
	0x01E70644 MOV X0, X19
	0x01E70648 BL 0x1D2C690
	0x01E7064C BL 0x1990590
	0x01E70650 SUB X31, X31, 0x70
	0x01E70654 STP X29, X30, [X31 + 0x10]
	0x01E70658 STP X28, X27, [X31 + 0x20]
	0x01E7065C STP X26, X25, [X31 + 0x30]
	0x01E70660 STP X24, X23, [X31 + 0x40]
	0x01E70664 STP X22, X21, [X31 + 0x50]
	0x01E70668 STP X20, X19, [X31 + 0x60]
	0x01E7066C ADRP X20, 0x2569000
	0x01E70670 ADRP X25, 0x228D000
	0x01E70674 ADRP X26, 0x2283000
	0x01E70678 LDRB W8, [X20 + 0x14A]
	0x01E7067C LDR X25, [X25 + 0x3D0]
	0x01E70680 LDR X26, [X26 + 0x6C0]
	0x01E70684 MOV X19, X0
	0x01E70688 TBNZ X8, 0x0, 0x1E706B8
	0x01E7068C ADRP X0, 0x228D000
	0x01E70690 LDR X0, [X0 + 0x3D0]
	0x01E70694 BL 0x1C16CF4
	0x01E70698 ADRP X0, 0x228D000
	0x01E7069C LDR X0, [X0 + 0x3D8]
	0x01E706A0 BL 0x1C16CF4
	0x01E706A4 ADRP X0, 0x2283000
	0x01E706A8 LDR X0, [X0 + 0x6C0]
	0x01E706AC BL 0x1C16CF4
	0x01E706B0 MOVZ W8, 0x1
	0x01E706B4 STRB W8, [X20 + 0x14A]
	0x01E706B8 LDR X0, [X26]
	0x01E706BC STP X31, X31, [X31]
	0x01E706C0 LDR X20, [X25]
	0x01E706C4 LDR W8, [X0 + 0xE0]
	0x01E706C8 CBNZ W8, 0x1E706D0
	0x01E706CC BL 0x1C16DFC
	0x01E706D0 MOV X0, X20
	0x01E706D4 MOV X1, X31
	0x01E706D8 BL 0x338C698
	0x01E706DC MOV X1, X0
	0x01E706E0 CBZ X19, 0x1E708C8
	0x01E706E4 MOV X0, X19
	0x01E706E8 MOV X2, X31
	0x01E706EC BL 0x1E7B718
	0x01E706F0 MOV W20, W0
	0x01E706F4 CMP W0, 0x1
	0x01E706F8 B.LT 0x1E70954
	0x01E706FC ADRP X27, 0x228D000
	0x01E70700 LDR X27, [X27 + 0x3D8]
	0x01E70704 MOV W21, W31
	0x01E70708 MOV X28, X31
	0x01E7070C LDR X0, [X26]
	0x01E70710 LDR X22, [X25]
	0x01E70714 LDR W8, [X0 + 0xE0]
	0x01E70718 CBNZ W8, 0x1E70720
	0x01E7071C BL 0x1C16DFC
	0x01E70720 MOV X0, X22
	0x01E70724 MOV X1, X31
	0x01E70728 BL 0x338C698
	0x01E7072C MOV X1, X0
	0x01E70730 ADD X3, X31, 0x8
	0x01E70734 MOV X0, X19
	0x01E70738 MOV W2, W21
	0x01E7073C MOV X4, X31
	0x01E70740 BL 0x1E7B788
	0x01E70744 LDR X22, [X31 + 0x8]
	0x01E70748 STR X0, [X31]
	0x01E7074C CBZ X22, 0x1E70810
	0x01E70750 CBZ X22, 0x1E70840
	0x01E70754 LDR W8, [X22 + 0x30]
	0x01E70758 LDR X29, [X22 + 0x28]
	0x01E7075C ANDS W31, W8, 0x1C
	0x01E70760 CSET W9, EQ
	0x01E70764 ANDS W31, W8, 0x3
	0x01E70768 CSET W8, NE
	0x01E7076C ANDS W8, W9, W8, 0x0
	0x01E70770 CSEL X28, X29, X28, NE
	0x01E70774 TBZ X8, 0x0, 0x1E70804
	0x01E70778 CBZ X22, 0x1E70848
	0x01E7077C LDR X23, [X27]
	0x01E70780 MOV X0, X22
	0x01E70784 MOV X1, X23
	0x01E70788 BL 0x1C16E00
	0x01E7078C CBZ X0, 0x1E70860
	0x01E70790 LDR X24, [X27]
	0x01E70794 MOV X0, X22
	0x01E70798 MOV X1, X24
	0x01E7079C BL 0x1C16E00
	0x01E707A0 MOV X23, X0
	0x01E707A4 CBZ X0, 0x1E70850
	0x01E707A8 LDR X8, [X23]
	0x01E707AC LDRH W9, [X8 + 0x12E]
	0x01E707B0 CBZ X9, 0x1E707D4
	0x01E707B4 LDR X10, [X8 + 0xB0]
	0x01E707B8 ADD X10, X10, 0x8
	0x01E707BC LDUR X11, [X10 - 0x8]
	0x01E707C0 CMP X11, X24
	0x01E707C4 B.EQ 0x1E707E8
	0x01E707C8 SUBS X9, X9, 0x1
	0x01E707CC ADD X10, X10, 0x10
	0x01E707D0 B.NE 0x1E707BC
	0x01E707D4 MOV X0, X23
	0x01E707D8 MOV X1, X24
	0x01E707DC MOV W2, W31
	0x01E707E0 BL 0x1C5C788
	0x01E707E4 B 0x1E707F4
	0x01E707E8 LDRSW X9, [X10]
	0x01E707EC ADD X8, X8, X9, 0x4, LSL
	0x01E707F0 ADD X0, X8, 0x138
	0x01E707F4 LDP X8, X1, [X0]
	0x01E707F8 MOV X0, X23
	0x01E707FC BLR X8
	0x01E70800 MOV X29, X28
	0x01E70804 MOV X22, X29
	0x01E70808 STR X29, [X31 + 0x8]
	0x01E7080C CBNZ X29, 0x1E70750
	0x01E70810 MOVZ W23, 0x7
	0x01E70814 ADD X0, X31, 0x0
	0x01E70818 MOV X1, X31
	0x01E7081C BL 0x1E79B10
	0x01E70820 CBNZ X22, 0x1E708C0
	0x01E70824 CMP W23, 0x7
	0x01E70828 B.EQ 0x1E70830
	0x01E7082C CBNZ W23, 0x1E70954
	0x01E70830 ADD W21, W21, 0x1
	0x01E70834 CMP W21, W20
	0x01E70838 B.NE 0x1E7070C
	0x01E7083C B 0x1E70954
	0x01E70840 BL 0x1C16F20
	0x01E70844 B 0x1E708CC
	0x01E70848 BL 0x1C16F20
	0x01E7084C B 0x1E708CC
	0x01E70850 MOV X0, X22
	0x01E70854 MOV X1, X24
	0x01E70858 BL 0x1C171E0
	0x01E7085C B 0x1E708CC
	0x01E70860 MOV X0, X22
	0x01E70864 MOV X1, X23
	0x01E70868 BL 0x1C171E0
	0x01E7086C B 0x1E708CC
	0x01E70870 B 0x1E7087C
	0x01E70874 MOV X28, X29
	0x01E70878 B 0x1E7087C
	0x01E7087C CMP W1, 0x1
	0x01E70880 B.NE 0x1E70898
	0x01E70884 BL 0x3EB1AD0
	0x01E70888 LDR X22, [X0]
	0x01E7088C BL 0x3EB1AE0
	0x01E70890 MOV W23, W31
	0x01E70894 B 0x1E70814
	0x01E70898 MOV X20, X1
	0x01E7089C MOV X19, X0
	0x01E708A0 MOV X22, X31
	0x01E708A4 ADD X0, X31, 0x0
	0x01E708A8 MOV X1, X31
	0x01E708AC BL 0x1E79B10
	0x01E708B0 MOV X1, X20
	0x01E708B4 CBZ X22, 0x1E708F8
	0x01E708B8 MOV X0, X22
	0x01E708BC BL 0x1C16F18
	0x01E708C0 MOV X0, X22
	0x01E708C4 BL 0x1C16F18
	0x01E708C8 BL 0x1C16F20
	0x01E708CC MOV X20, X1
	0x01E708D0 MOV X19, X0
	0x01E708D4 B 0x1E708A4
	0x01E708D8 B 0x1E708F4
	0x01E708DC B 0x1E708F4
	0x01E708E0 B 0x1E708F4
	0x01E708E4 B 0x1E708F4
	0x01E708E8 B 0x1E708F4
	0x01E708EC B 0x1E708F4

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X24, 0x256A000
	015 Move X25, 0x2284000
	016 Move X19, 0x228E000
	017 Move X22, 0x2284000
	018 Move X21, 0x228E000
	019 Move X23, 0x228E000
	020 Move W8, [X24+325]
	021 Move X25, [X25+2288]
	022 Move X19, [X19+824]
	023 Move X22, [X22+2904]
	024 Move X21, [X21+832]
	025 Move X23, [X23+840]
	026 Move X20, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {99}
	031 Move X0, 0x2284000
	032 Move X0, [X0+2904]
	033 Call 0x1C17CF4
	034 Move X0, 0x2284000
	035 Move X0, [X0+3584]
	036 Call 0x1C17CF4
	037 Move X0, 0x2288000
	038 Move X0, [X0+3624]
	039 Call 0x1C17CF4
	040 Move X0, 0x2284000
	041 Move X0, [X0+3608]
	042 Call 0x1C17CF4
	043 Move X0, 0x2284000
	044 Move X0, [X0+1880]
	045 Call 0x1C17CF4
	046 Move X0, 0x2288000
	047 Move X0, [X0+3632]
	048 Call 0x1C17CF4
	049 Move X0, 0x2288000
	050 Move X0, [X0+3640]
	051 Call 0x1C17CF4
	052 Move X0, 0x2288000
	053 Move X0, [X0+3648]
	054 Call 0x1C17CF4
	055 Move X0, 0x2284000
	056 Move X0, [X0+2288]
	057 Call 0x1C17CF4
	058 Move X0, 0x228E000
	059 Move X0, [X0+848]
	060 Call 0x1C17CF4
	061 Move X0, 0x228E000
	062 Move X0, [X0+824]
	063 Call 0x1C17CF4
	064 Move X0, 0x228E000
	065 Move X0, [X0+840]
	066 Call 0x1C17CF4
	067 Move X0, 0x228E000
	068 Move X0, [X0+856]
	069 Call 0x1C17CF4
	070 Move X0, 0x228E000
	071 Move X0, [X0+864]
	072 Call 0x1C17CF4
	073 Move X0, 0x2284000
	074 Move X0, [X0+2104]
	075 Call 0x1C17CF4
	076 Move X0, 0x228E000
	077 Move X0, [X0+872]
	078 Call 0x1C17CF4
	079 Move X0, 0x228E000
	080 Move X0, [X0+832]
	081 Call 0x1C17CF4
	082 Move X0, 0x228E000
	083 Move X0, [X0+880]
	084 Call 0x1C17CF4
	085 Move X0, 0x2284000
	086 Move X0, [X0+2120]
	087 Call 0x1C17CF4
	088 Move X0, 0x228E000
	089 Move X0, [X0+888]
	090 Call 0x1C17CF4
	091 Move X0, 0x228E000
	092 Move X0, [X0+896]
	093 Call 0x1C17CF4
	094 Move X0, 0x228E000
	095 Move X0, [X0+904]
	096 Call 0x1C17CF4
	097 Move W8, 1
	098 Move [X24+325], W8
	099 Move X0, [X25]
	100 Call 0x1C17F10
	101 Move X1, [X19]
	102 Move X2, X31
	103 Move X19, X0
	104 Call StringBuilder..ctor, X0, X1
	105 Move W8, [X20+48]
	106 Move X0, [X22]
	107 Add X1, X31, 28
	108 Move [X31+28], W8
	109 Call 0x1C17E04
	110 Move X8, [X21]
	111 Move X1, [X23]
	112 Move X2, X0
	113 Move X3, X31
	114 Move X0, X8
	115 Call String.Format, X0, X1, X2
	116 Compare X19, 0
	117 JumpIfEqual {356}
	118 Move X23, 0x228E000
	119 Move X27, 0x2284000
	120 Move X24, 0x228E000
	121 Move X29, 0x228E000
	122 Move X28, 0x228E000
	123 Move X25, 0x2284000
	124 Move X26, 0x228E000
	125 Move X23, [X23+896]
	126 Move X27, [X27+2104]
	127 Move X24, [X24+872]
	128 Move X29, [X29+904]
	129 Move X28, [X28+888]
	130 Move X25, [X25+1880]
	131 Move X26, [X26+864]
	132 Move X1, X0
	133 Move X0, X19
	134 Move X2, X31
	135 Call StringBuilder.Append, X0, X1
	136 Move X1, [X20+16]
	137 Move X0, [X23]
	138 Move X2, [X27]
	139 Move X3, X31
	140 Call String.Concat, X0, X1, X2
	141 Move X1, X0
	142 Move X0, X19
	143 Move X2, X31
	144 Call StringBuilder.Append, X0, X1
	145 Move W8, [X20+49]
	146 Move X0, [X22]
	147 Add X1, X31, 24
	148 Move [X31+24], W8
	149 Call 0x1C17E04
	150 Move X8, [X21]
	151 Move X1, [X24]
	152 Move X2, X0
	153 Move X3, X31
	154 Move X0, X8
	155 Call String.Format, X0, X1, X2
	156 Move X1, X0
	157 Move X0, X19
	158 Move X2, X31
	159 Call StringBuilder.Append, X0, X1
	160 Move W8, [X20+50]
	161 Move X0, [X22]
	162 Add X1, X31, 20
	163 Move [X31+20], W8
	164 Call 0x1C17E04
	165 Move X8, [X21]
	166 Move X1, [X29]
	167 Move X2, X0
	168 Move X3, X31
	169 Move X0, X8
	170 Call String.Format, X0, X1, X2
	171 Move X1, X0
	172 Move X0, X19
	173 Move X2, X31
	174 Call StringBuilder.Append, X0, X1
	175 Move X1, [X20+24]
	176 Move X0, [X28]
	177 Move X2, [X27]
	178 Move X3, X31
	179 Call String.Concat, X0, X1, X2
	180 Move X1, X0
	181 Move X0, X19
	182 Move X2, X31
	183 Call StringBuilder.Append, X0, X1
	184 Move W8, [X20+40]
	185 Move X0, [X25]
	186 Add X1, X31, 16
	187 Move [X31+16], W8
	188 Call 0x1C17E04
	189 Move X8, [X21]
	190 Move X1, [X26]
	191 Move X2, X0
	192 Move X3, X31
	193 Move X0, X8
	194 Call String.Format, X0, X1, X2
	195 Move X1, X0
	196 Move X0, X19
	197 Move X2, X31
	198 Call StringBuilder.Append, X0, X1
	199 Move W8, [X20+44]
	200 Move X0, [X25]
	201 Add X1, X31, 12
	202 Move [X31+12], W8
	203 Call 0x1C17E04
	204 Move X9, 0x228E000
	205 Move X8, [X21]
	206 Move X9, [X9+856]
	207 Move X2, X0
	208 Move X3, X31
	209 Move X0, X8
	210 Move X1, [X9]
	211 Call String.Format, X0, X1, X2
	212 Move X1, X0
	213 Move X0, X19
	214 Move X2, X31
	215 Call StringBuilder.Append, X0, X1
	216 Move X8, 0x228E000
	217 Move X8, [X8+880]
	218 Move X0, X19
	219 Move X2, X31
	220 Move X1, [X8]
	221 Call StringBuilder.Append, X0, X1
	222 Move X0, [X20+32]
	223 Compare X0, 0
	224 JumpIfEqual {330}
	225 Move X8, 0x2288000
	226 Move X8, [X8+3648]
	227 Move X1, [X8]
	228 Call 0x25BABB0, X0
	229 Move X20, X0
	230 Compare X0, 0
	231 JumpIfEqual {357}
	232 Move X22, 0x2284000
	233 Move X23, 0x2288000
	234 Move X24, 0x228E000
	235 Move X22, [X22+3608]
	236 Move X23, [X23+3624]
	237 Move X24, [X24+848]
	238 Move X21, X31
	239 Move X8, [X20]
	240 Move X1, [X22]
	241 NotImplemented "Instruction LDRH not yet implemented."
	242 Compare X9, 0
	243 JumpIfEqual {250}
	244 Move X10, [X8+176]
	245 Add X10, X10, 8
	246 NotImplemented "Instruction LDUR not yet implemented."
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Subtract X9, X9, 1
	249 Add X10, X10, 16
	250 Move X0, X20
	251 Move W2, W31
	252 Call 0x1C5D788
	253 NotImplemented "Instruction LDRSW not yet implemented."
	254 Add X8, X8, X9
	255 Add X0, X8, 312
	256 Move X8, [X0]
	257 Move X1, [X0+8]
	258 Move X0, X20
	259 NotImplemented "Instruction BLR not yet implemented."
	260 Move TEMP, X0
	261 And TEMP, TEMP, 1
	262 Compare TEMP, 1
	263 JumpIfNotEqual {302}
	264 Move X8, [X20]
	265 Move X1, [X23]
	266 NotImplemented "Instruction LDRH not yet implemented."
	267 Compare X9, 0
	268 JumpIfEqual {275}
	269 Move X10, [X8+176]
	270 Add X10, X10, 8
	271 NotImplemented "Instruction LDUR not yet implemented."
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Subtract X9, X9, 1
	274 Add X10, X10, 16
	275 Move X0, X20
	276 Move W2, W31
	277 Call 0x1C5D788
	278 NotImplemented "Instruction LDRSW not yet implemented."
	279 Add X8, X8, X9
	280 Add X0, X8, 312
	281 Move X8, [X0]
	282 Move X1, [X0+8]
	283 Move X0, X20
	284 NotImplemented "Instruction BLR not yet implemented."
	285 Move X3, X0
	286 Move X0, [X24]
	287 NotImplemented "Instruction CMP not yet implemented."
	288 NotImplemented "Instruction CSEL not yet implemented."
	289 Compare X1, 0
	290 JumpIfEqual {294}
	291 Compare X21, 0
	292 JumpIfEqual {355}
	293 Move X2, [X21+16]
	294 Move X2, X31
	295 Move X1, X3
	296 Move X3, X31
	297 Call String.Format, X0, X1, X2
	298 Move X1, X0
	299 Move X0, X19
	300 Move X2, X31
	301 Call StringBuilder.Append, X0, X1
	302 Move X21, X31
	303 Compare X20, 0
	304 JumpIfEqual {328}
	305 Move X10, 0x2284000
	306 Move X8, [X20]
	307 Move X10, [X10+3584]
	308 NotImplemented "Instruction LDRH not yet implemented."
	309 Move X1, [X10]
	310 Compare X9, 0
	311 JumpIfEqual {318}
	312 Move X10, [X8+176]
	313 Add X10, X10, 8
	314 NotImplemented "Instruction LDUR not yet implemented."
	315 NotImplemented "Instruction CMP not yet implemented."
	316 Subtract X9, X9, 1
	317 Add X10, X10, 16
	318 Move X0, X20
	319 Move W2, W31
	320 Call 0x1C5D788
	321 NotImplemented "Instruction LDRSW not yet implemented."
	322 Add X8, X8, X9
	323 Add X0, X8, 312
	324 Move X8, [X0]
	325 Move X1, [X0+8]
	326 Move X0, X20
	327 NotImplemented "Instruction BLR not yet implemented."
	328 Compare X21, 0
	329 JumpIfNotEqual {358}
	330 Move X8, 0x2284000
	331 Move X8, [X8+2120]
	332 Move X0, X19
	333 Move X2, X31
	334 Move X1, [X8]
	335 Call StringBuilder.Append, X0, X1
	336 Move X8, [X19]
	337 Move X0, X19
	338 Move X9, [X8+360]
	339 Move X1, [X8+368]
	340 NotImplemented "Instruction BLR not yet implemented."
	341 Move X20, [X31+112]
	342 Move X19, [X31+120]
	343 Move X22, [X31+96]
	344 Move X21, [X31+104]
	345 Move X24, [X31+80]
	346 Move X23, [X31+88]
	347 Move X26, [X31+64]
	348 Move X25, [X31+72]
	349 Move X28, [X31+48]
	350 Move X27, [X31+56]
	351 Move X29, [X31+32]
	352 Move X30, [X31+40]
	353 Add X31, X31, 128
	354 Return X0
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Move X0, X21
	359 Call 0x1C17F18
	360 Move X22, X0
	361 NotImplemented "Instruction CMP not yet implemented."
	362 Move X0, X22
	363 Call 0x3EB2AD0
	364 Move X21, [X0]
	365 Call 0x3EB2AE0
	366 Move X21, X31
	367 Move X22, X0
	368 Compare X20, 0
	369 JumpIfEqual {393}
	370 Move X10, 0x2284000
	371 Move X8, [X20]
	372 Move X10, [X10+3584]
	373 NotImplemented "Instruction LDRH not yet implemented."
	374 Move X1, [X10]
	375 Compare X9, 0
	376 JumpIfEqual {383}
	377 Move X10, [X8+176]
	378 Add X10, X10, 8
	379 NotImplemented "Instruction LDUR not yet implemented."
	380 NotImplemented "Instruction CMP not yet implemented."
	381 Subtract X9, X9, 1
	382 Add X10, X10, 16
	383 Move X0, X20
	384 Move W2, W31
	385 Call 0x1C5D788
	386 NotImplemented "Instruction LDRSW not yet implemented."
	387 Add X8, X8, X9
	388 Add X0, X8, 312
	389 Move X8, [X0]
	390 Move X1, [X0+8]
	391 Move X0, X20
	392 NotImplemented "Instruction BLR not yet implemented."
	393 Compare X21, 0
	394 JumpIfNotEqual {397}
	395 Move X0, X22
	396 Call 0x1D2D690
	397 Move X0, X21
	398 Call 0x1C17F18
	399 Call 0x1991590

