Type: Fusion.Vector2Compressed

Method: System.Single get_X()

Disassembly:
	0x01E8B688 FCVTZS W8, S0
	0x01E8B68C FCMP S0, S2
	0x01E8B690 MOVZ W9, 0x80000000
	0x01E8B694 CSEL W8, W9, W8, EQ
	0x01E8B698 SBFM W9, W8, 0x1F, 0x1F
	0x01E8B69C EOR W8, W9, W8, 0x1
	0x01E8B6A0 STR W8, [X19 + 0x4]
	0x01E8B6A4 LDP X20, X19, [X31 + 0x10]
	0x01E8B6A8 LDR X30, [X31 + 0x8]
	0x01E8B6AC LDR V8, [X31], #0x20
	0x01E8B6B0 RET
	0x01E8B6B4 STR X30, [X31 - 0x20]!
	0x01E8B6B8 STP X20, X19, [X31 + 0x10]
	0x01E8B6BC ADRP X20, 0x254D000
	0x01E8B6C0 LDRB W8, [X20 + 0xE90]
	0x01E8B6C4 LDR W19, [X0 + 0x8]
	0x01E8B6C8 CBNZ W8, 0x1E8B6E0
	0x01E8B6CC ADRP X0, 0x226F000
	0x01E8B6D0 LDR X0, [X0 + 0xC68]
	0x01E8B6D4 BL 0x1C16CF4
	0x01E8B6D8 MOVZ W8, 0x1
	0x01E8B6DC STRB W8, [X20 + 0xE90]
	0x01E8B6E0 ADRP X8, 0x226F000
	0x01E8B6E4 LDR X8, [X8 + 0xC68]
	0x01E8B6E8 LDR X0, [X8]
	0x01E8B6EC LDR W8, [X0 + 0xE0]
	0x01E8B6F0 CBNZ W8, 0x1E8B6F8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x254E000
	005 Move W8, [X20+3728]
	006 Move W19, [X0]
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0x2270000
	010 Move X0, [X0+3176]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X20+3728], W8
	014 Move X8, 0x2270000
	015 Move X8, [X8+3176]
	016 Move X0, [X8]
	017 Move W8, [X0+224]
	018 Compare W8, 0
	019 JumpIfNotEqual {21}
	020 Call 0x1C17DFC
	021 And W8, W19, 1
	022 Subtract W8, W31, W8
	023 Xor W8, W8, W19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W9, 0x3A800000
	027 NotImplemented "Instruction SCVTF not yet implemented."
	028 Move S1, W9
	029 Multiply S0, S0, S1
	030 Move X30, [X31+32]
	031 Return V0

Method: System.Void set_X(System.Single value)

Disassembly:
	0x01E8B6F4 BL 0x1C16DFC
	0x01E8B6F8 AND W8, W19, 0x1
	0x01E8B6FC SUB W8, W31, W8
	0x01E8B700 EOR W8, W8, W19, 0x1
	0x01E8B704 LDP X20, X19, [X31 + 0x10]
	0x01E8B708 MOVZ W9, 0x3A800000
	0x01E8B70C SCVTF S0, W8
	0x01E8B710 FMOV S1, W9
	0x01E8B714 FMUL S0, S0, S1
	0x01E8B718 LDR X30, [X31], #0x20
	0x01E8B71C RET
	0x01E8B720 STR D8, [X31 - 0x20]!
	0x01E8B724 STR X30, [X31 + 0x8]
	0x01E8B728 STP X20, X19, [X31 + 0x10]
	0x01E8B72C ADRP X20, 0x254D000
	0x01E8B730 LDRB W8, [X20 + 0xE8F]
	0x01E8B734 MOV V8.16B, V0.16B
	0x01E8B738 MOV X19, X0
	0x01E8B73C CBNZ W8, 0x1E8B754
	0x01E8B740 ADRP X0, 0x226F000
	0x01E8B744 LDR X0, [X0 + 0xC68]
	0x01E8B748 BL 0x1C16CF4
	0x01E8B74C MOVZ W8, 0x1
	0x01E8B750 STRB W8, [X20 + 0xE8F]
	0x01E8B754 ADRP X8, 0x226F000
	0x01E8B758 LDR X8, [X8 + 0xC68]
	0x01E8B75C LDR X0, [X8]
	0x01E8B760 LDR W8, [X0 + 0xE0]
	0x01E8B764 CBNZ W8, 0x1E8B76C
	0x01E8B768 BL 0x1C16DFC
	0x01E8B76C FMOV W8, S8
	0x01E8B770 MOVZ W9, 0x44800000
	0x01E8B774 UBFM W8, W8, 0x1F, 0x1F
	0x01E8B778 FMOV S0, 0.5
	0x01E8B77C FMOV S1, W9
	0x01E8B780 UCVTF S2, W8
	0x01E8B784 MOVZ W9, 0x7F800000
	0x01E8B788 FMUL S1, S8, S1
	0x01E8B78C FSUB S0, S0, S2
	0x01E8B790 FMOV S2, W9
	0x01E8B794 FADD S0, S1, S0

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x254E000
	006 Move W8, [X20+3727]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x2270000
	012 Move X0, [X0+3176]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3727], W8
	016 Move X8, 0x2270000
	017 Move X8, [X8+3176]
	018 Move X0, [X8]
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move W8, S8
	024 Move W9, 0x44800000
	025 Move W8, W8
	026 ShiftRight W8, 31
	027 And W8, W8, 0x7FFFFFFF
	028 Move S0, 0.5
	029 Move S1, W9
	030 NotImplemented "Instruction UCVTF not yet implemented."
	031 Move W9, 0x7F800000
	032 Multiply S1, S8, S1
	033 Subtract S0, S0, S2
	034 Move S2, W9
	035 Add S0, S1, S0
	036 NotImplemented "Instruction FCVTZS not yet implemented."
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 Move W9, 0x80000000
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 NotImplemented "Instruction SBFM not yet implemented."
	041 Xor W8, W9, W8
	042 Move [X19], W8
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+8]
	046 Move V8, [X31+32]
	047 Return 

Method: System.Single get_Y()

Disassembly:
	0x01E8B798 FCVTZS W8, S0
	0x01E8B79C FCMP S0, S2
	0x01E8B7A0 MOVZ W9, 0x80000000
	0x01E8B7A4 CSEL W8, W9, W8, EQ
	0x01E8B7A8 SBFM W9, W8, 0x1F, 0x1F
	0x01E8B7AC EOR W8, W9, W8, 0x1
	0x01E8B7B0 STR W8, [X19 + 0x8]
	0x01E8B7B4 LDP X20, X19, [X31 + 0x10]
	0x01E8B7B8 LDR X30, [X31 + 0x8]
	0x01E8B7BC LDR V8, [X31], #0x20
	0x01E8B7C0 RET
	0x01E8B7C4 STR X30, [X31 - 0x20]!
	0x01E8B7C8 STP X20, X19, [X31 + 0x10]
	0x01E8B7CC ADRP X20, 0x254D000
	0x01E8B7D0 LDRB W8, [X20 + 0xE90]
	0x01E8B7D4 LDR W19, [X0 + 0xC]
	0x01E8B7D8 CBNZ W8, 0x1E8B7F0
	0x01E8B7DC ADRP X0, 0x226F000
	0x01E8B7E0 LDR X0, [X0 + 0xC68]
	0x01E8B7E4 BL 0x1C16CF4
	0x01E8B7E8 MOVZ W8, 0x1
	0x01E8B7EC STRB W8, [X20 + 0xE90]
	0x01E8B7F0 ADRP X8, 0x226F000
	0x01E8B7F4 LDR X8, [X8 + 0xC68]
	0x01E8B7F8 LDR X0, [X8]
	0x01E8B7FC LDR W8, [X0 + 0xE0]
	0x01E8B800 CBNZ W8, 0x1E8B808

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x254E000
	005 Move W8, [X20+3728]
	006 Move W19, [X0+4]
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0x2270000
	010 Move X0, [X0+3176]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X20+3728], W8
	014 Move X8, 0x2270000
	015 Move X8, [X8+3176]
	016 Move X0, [X8]
	017 Move W8, [X0+224]
	018 Compare W8, 0
	019 JumpIfNotEqual {21}
	020 Call 0x1C17DFC
	021 And W8, W19, 1
	022 Subtract W8, W31, W8
	023 Xor W8, W8, W19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W9, 0x3A800000
	027 NotImplemented "Instruction SCVTF not yet implemented."
	028 Move S1, W9
	029 Multiply S0, S0, S1
	030 Move X30, [X31+32]
	031 Return V0

Method: System.Void set_Y(System.Single value)

Disassembly:
	0x01E8B804 BL 0x1C16DFC
	0x01E8B808 AND W8, W19, 0x1
	0x01E8B80C SUB W8, W31, W8
	0x01E8B810 EOR W8, W8, W19, 0x1
	0x01E8B814 LDP X20, X19, [X31 + 0x10]
	0x01E8B818 MOVZ W9, 0x3A800000
	0x01E8B81C SCVTF S0, W8
	0x01E8B820 FMOV S1, W9
	0x01E8B824 FMUL S0, S0, S1
	0x01E8B828 LDR X30, [X31], #0x20
	0x01E8B82C RET
	0x01E8B830 STR D8, [X31 - 0x20]!
	0x01E8B834 STR X30, [X31 + 0x8]
	0x01E8B838 STP X20, X19, [X31 + 0x10]
	0x01E8B83C ADRP X20, 0x254D000
	0x01E8B840 LDRB W8, [X20 + 0xE8F]
	0x01E8B844 MOV V8.16B, V0.16B
	0x01E8B848 MOV X19, X0
	0x01E8B84C CBNZ W8, 0x1E8B864
	0x01E8B850 ADRP X0, 0x226F000
	0x01E8B854 LDR X0, [X0 + 0xC68]
	0x01E8B858 BL 0x1C16CF4
	0x01E8B85C MOVZ W8, 0x1
	0x01E8B860 STRB W8, [X20 + 0xE8F]
	0x01E8B864 ADRP X8, 0x226F000
	0x01E8B868 LDR X8, [X8 + 0xC68]
	0x01E8B86C LDR X0, [X8]
	0x01E8B870 LDR W8, [X0 + 0xE0]
	0x01E8B874 CBNZ W8, 0x1E8B87C
	0x01E8B878 BL 0x1C16DFC
	0x01E8B87C FMOV W8, S8
	0x01E8B880 MOVZ W9, 0x44800000
	0x01E8B884 UBFM W8, W8, 0x1F, 0x1F
	0x01E8B888 FMOV S0, 0.5
	0x01E8B88C FMOV S1, W9
	0x01E8B890 UCVTF S2, W8
	0x01E8B894 MOVZ W9, 0x7F800000
	0x01E8B898 FMUL S1, S8, S1
	0x01E8B89C FSUB S0, S0, S2
	0x01E8B8A0 FMOV S2, W9
	0x01E8B8A4 FADD S0, S1, S0

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x254E000
	006 Move W8, [X20+3727]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x2270000
	012 Move X0, [X0+3176]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3727], W8
	016 Move X8, 0x2270000
	017 Move X8, [X8+3176]
	018 Move X0, [X8]
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move W8, S8
	024 Move W9, 0x44800000
	025 Move W8, W8
	026 ShiftRight W8, 31
	027 And W8, W8, 0x7FFFFFFF
	028 Move S0, 0.5
	029 Move S1, W9
	030 NotImplemented "Instruction UCVTF not yet implemented."
	031 Move W9, 0x7F800000
	032 Multiply S1, S8, S1
	033 Subtract S0, S0, S2
	034 Move S2, W9
	035 Add S0, S1, S0
	036 NotImplemented "Instruction FCVTZS not yet implemented."
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 Move W9, 0x80000000
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 NotImplemented "Instruction SBFM not yet implemented."
	041 Xor W8, W9, W8
	042 Move [X19+4], W8
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+8]
	046 Move V8, [X31+32]
	047 Return 

Method: Fusion.Vector2Compressed op_Implicit(UnityEngine.Vector2 v)

Disassembly:
	0x01E8B8A8 FCVTZS W8, S0
	0x01E8B8AC FCMP S0, S2
	0x01E8B8B0 MOVZ W9, 0x80000000
	0x01E8B8B4 CSEL W8, W9, W8, EQ
	0x01E8B8B8 SBFM W9, W8, 0x1F, 0x1F
	0x01E8B8BC EOR W8, W9, W8, 0x1
	0x01E8B8C0 STR W8, [X19 + 0xC]
	0x01E8B8C4 LDP X20, X19, [X31 + 0x10]
	0x01E8B8C8 LDR X30, [X31 + 0x8]
	0x01E8B8CC LDR V8, [X31], #0x20
	0x01E8B8D0 RET
	0x01E8B8D4 STP D11, D10, [X31 - 0x50]!
	0x01E8B8D8 STP D9, D8, [X31 + 0x10]
	0x01E8B8DC STP X30, X23, [X31 + 0x20]
	0x01E8B8E0 STP X22, X21, [X31 + 0x30]
	0x01E8B8E4 STP X20, X19, [X31 + 0x40]
	0x01E8B8E8 ADRP X19, 0x254D000
	0x01E8B8EC LDRB W8, [X19 + 0xE8F]
	0x01E8B8F0 MOV V8.16B, V3.16B
	0x01E8B8F4 MOV V9.16B, V2.16B
	0x01E8B8F8 MOV V10.16B, V1.16B
	0x01E8B8FC MOV V11.16B, V0.16B
	0x01E8B900 CBNZ W8, 0x1E8B918
	0x01E8B904 ADRP X0, 0x226F000
	0x01E8B908 LDR X0, [X0 + 0xC68]
	0x01E8B90C BL 0x1C16CF4
	0x01E8B910 MOVZ W8, 0x1
	0x01E8B914 STRB W8, [X19 + 0xE8F]
	0x01E8B918 ADRP X20, 0x226F000
	0x01E8B91C LDR X20, [X20 + 0xC68]
	0x01E8B920 LDR X0, [X20]
	0x01E8B924 LDR W8, [X0 + 0xE0]
	0x01E8B928 CBZ W8, 0x1E8B934
	0x01E8B92C MOV W8, W31
	0x01E8B930 B 0x1E8B944
	0x01E8B934 BL 0x1C16DFC
	0x01E8B938 LDRB W8, [X19 + 0xE8F]
	0x01E8B93C CMP W8, 0x0
	0x01E8B940 CSET W8, EQ
	0x01E8B944 FMOV W9, S11
	0x01E8B948 MOVZ W10, 0x44800000
	0x01E8B94C UBFM W9, W9, 0x1F, 0x1F
	0x01E8B950 FMOV S0, 0.5
	0x01E8B954 FMOV S1, W10
	0x01E8B958 UCVTF S2, W9
	0x01E8B95C MOVZ W11, 0x7F800000
	0x01E8B960 FMUL S1, S11, S1
	0x01E8B964 FSUB S0, S0, S2
	0x01E8B968 FMOV S3, W11
	0x01E8B96C FADD S0, S1, S0
	0x01E8B970 FCVTZS W9, S0
	0x01E8B974 FCMP S0, S3
	0x01E8B978 MOVZ W10, 0x80000000
	0x01E8B97C CSEL W21, W10, W9, EQ
	0x01E8B980 CBZ W8, 0x1E8B998
	0x01E8B984 ADRP X0, 0x226F000
	0x01E8B988 LDR X0, [X0 + 0xC68]
	0x01E8B98C BL 0x1C16CF4
	0x01E8B990 MOVZ W8, 0x1
	0x01E8B994 STRB W8, [X19 + 0xE8F]
	0x01E8B998 LDR X0, [X20]
	0x01E8B99C LDR W8, [X0 + 0xE0]
	0x01E8B9A0 CBZ W8, 0x1E8B9AC
	0x01E8B9A4 MOV W8, W31
	0x01E8B9A8 B 0x1E8B9BC
	0x01E8B9AC BL 0x1C16DFC
	0x01E8B9B0 LDRB W8, [X19 + 0xE8F]
	0x01E8B9B4 CMP W8, 0x0
	0x01E8B9B8 CSET W8, EQ
	0x01E8B9BC FMOV W9, S10
	0x01E8B9C0 MOVZ W10, 0x44800000
	0x01E8B9C4 UBFM W9, W9, 0x1F, 0x1F
	0x01E8B9C8 FMOV S0, 0.5

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x254E000
	008 Move W8, [X19+3727]
	009 Move V8, V1
	010 Move V9, V0
	011 Compare W8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, 0x2270000
	014 Move X0, [X0+3176]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X19+3727], W8
	018 Move X20, 0x2270000
	019 Move X20, [X20+3176]
	020 Move X0, [X20]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfEqual {25}
	024 Move W8, W31
	025 Call 0x1C17DFC
	026 Move W8, [X19+3727]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CSET not yet implemented."
	029 Move W9, S9
	030 Move W10, 0x44800000
	031 Move W9, W9
	032 ShiftRight W9, 31
	033 And W9, W9, 0x7FFFFFFF
	034 Move S0, 0.5
	035 Move S1, W10
	036 NotImplemented "Instruction UCVTF not yet implemented."
	037 Move W11, 0x7F800000
	038 Multiply S1, S9, S1
	039 Subtract S0, S0, S2
	040 Move S3, W11
	041 Add S0, S1, S0
	042 NotImplemented "Instruction FCVTZS not yet implemented."
	043 NotImplemented "Instruction FCMP not yet implemented."
	044 Move W10, 0x80000000
	045 NotImplemented "Instruction CSEL not yet implemented."
	046 Compare W8, 0
	047 JumpIfEqual {53}
	048 Move X0, 0x2270000
	049 Move X0, [X0+3176]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X19+3727], W8
	053 Move X0, [X20]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 NotImplemented "Instruction SBFM not yet implemented."
	059 Move W9, S8
	060 Xor W0, W8, W21
	061 Move W8, 0x44800000
	062 Move W9, W9
	063 ShiftRight W9, 31
	064 And W9, W9, 0x7FFFFFFF
	065 Move S0, 0.5
	066 Move S1, W8
	067 NotImplemented "Instruction UCVTF not yet implemented."
	068 Move W8, 0x7F800000
	069 Multiply S1, S8, S1
	070 Subtract S0, S0, S2
	071 Move S2, W8
	072 Add S0, S1, S0
	073 NotImplemented "Instruction FCVTZS not yet implemented."
	074 NotImplemented "Instruction FCMP not yet implemented."
	075 Move W9, 0x80000000
	076 NotImplemented "Instruction CSEL not yet implemented."
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X30, [X31+16]
	080 Move X21, [X31+24]
	081 NotImplemented "Instruction SBFM not yet implemented."
	082 Xor W8, W9, W8
	083 NotImplemented "Instruction BFM not yet implemented."
	084 Move D9, [X31+48]
	085 Move D8, [X31+56]
	086 Return X0

Method: UnityEngine.Vector2 op_Implicit(Fusion.Vector2Compressed q)

Disassembly:
	0x01E8B9CC FMOV S1, W10
	0x01E8B9D0 UCVTF S2, W9
	0x01E8B9D4 MOVZ W11, 0x7F800000
	0x01E8B9D8 FMUL S1, S10, S1
	0x01E8B9DC FSUB S0, S0, S2
	0x01E8B9E0 FMOV S3, W11
	0x01E8B9E4 FADD S0, S1, S0
	0x01E8B9E8 FCVTZS W9, S0
	0x01E8B9EC FCMP S0, S3
	0x01E8B9F0 MOVZ W10, 0x80000000
	0x01E8B9F4 CSEL W22, W10, W9, EQ
	0x01E8B9F8 CBZ W8, 0x1E8BA10
	0x01E8B9FC ADRP X0, 0x226F000
	0x01E8BA00 LDR X0, [X0 + 0xC68]
	0x01E8BA04 BL 0x1C16CF4
	0x01E8BA08 MOVZ W8, 0x1
	0x01E8BA0C STRB W8, [X19 + 0xE8F]
	0x01E8BA10 LDR X0, [X20]
	0x01E8BA14 LDR W8, [X0 + 0xE0]
	0x01E8BA18 CBZ W8, 0x1E8BA24
	0x01E8BA1C MOV W8, W31
	0x01E8BA20 B 0x1E8BA34
	0x01E8BA24 BL 0x1C16DFC
	0x01E8BA28 LDRB W8, [X19 + 0xE8F]
	0x01E8BA2C CMP W8, 0x0
	0x01E8BA30 CSET W8, EQ
	0x01E8BA34 FMOV W9, S9
	0x01E8BA38 MOVZ W10, 0x44800000
	0x01E8BA3C UBFM W9, W9, 0x1F, 0x1F
	0x01E8BA40 FMOV S0, 0.5
	0x01E8BA44 FMOV S1, W10
	0x01E8BA48 UCVTF S2, W9
	0x01E8BA4C MOVZ W11, 0x7F800000
	0x01E8BA50 FMUL S1, S9, S1
	0x01E8BA54 FSUB S0, S0, S2
	0x01E8BA58 FMOV S3, W11
	0x01E8BA5C FADD S0, S1, S0
	0x01E8BA60 FCVTZS W9, S0
	0x01E8BA64 FCMP S0, S3
	0x01E8BA68 MOVZ W10, 0x80000000
	0x01E8BA6C CSEL W23, W10, W9, EQ
	0x01E8BA70 CBZ W8, 0x1E8BA88
	0x01E8BA74 ADRP X0, 0x226F000
	0x01E8BA78 LDR X0, [X0 + 0xC68]
	0x01E8BA7C BL 0x1C16CF4
	0x01E8BA80 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x254E000
	007 Move W8, [X21+3728]
	008 Move X19, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x2270000
	012 Move X0, [X0+3176]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X21+3728], W8
	016 Move X22, 0x2270000
	017 Move X22, [X22+3176]
	018 Move X20, X19
	019 ShiftRight X20, 32
	020 And X20, X20, 0x7FFFFFFF
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {34}
	025 Call 0x1C17DFC
	026 Move W8, [X21+3728]
	027 Compare W8, 0
	028 JumpIfNotEqual {34}
	029 Move X0, 0x2270000
	030 Move X0, [X0+3176]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+3728], W8
	034 Move X0, [X22]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 And W8, W19, 1
	040 Move W9, 0x3A800000
	041 And W10, W20, 1
	042 Subtract W8, W31, W8
	043 Move S1, W9
	044 Subtract W9, W31, W10
	045 Xor W8, W8, W19
	046 Xor W9, W9, W20
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 NotImplemented "Instruction SCVTF not yet implemented."
	052 NotImplemented "Instruction SCVTF not yet implemented."
	053 Multiply S0, S0, S1
	054 Multiply S1, S2, S1
	055 Move X30, [X31+48]
	056 Return X0

Method: System.Boolean Equals(Fusion.Vector2Compressed other)

Disassembly:
	0x01E8BA84 STRB W8, [X19 + 0xE8F]
	0x01E8BA88 LDR X0, [X20]
	0x01E8BA8C LDR W8, [X0 + 0xE0]
	0x01E8BA90 CBNZ W8, 0x1E8BA98
	0x01E8BA94 BL 0x1C16DFC
	0x01E8BA98 SBFM W8, W23, 0x1F, 0x1F
	0x01E8BA9C EOR W1, W8, W23, 0x1
	0x01E8BAA0 SBFM W8, W21, 0x1F, 0x1F
	0x01E8BAA4 FMOV W10, S8
	0x01E8BAA8 EOR W0, W8, W21, 0x1

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, [X0+4]
	004 Move X9, X1
	005 ShiftRight X9, 32
	006 And X9, X9, 0x7FFFFFFF
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Return X0
	010 Move W0, W31
	011 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x01E8BAAC MOVZ W8, 0x44800000
	0x01E8BAB0 UBFM W10, W10, 0x1F, 0x1F
	0x01E8BAB4 FMOV S0, 0.5
	0x01E8BAB8 FMOV S1, W8
	0x01E8BABC UCVTF S2, W10
	0x01E8BAC0 MOVZ W8, 0x7F800000
	0x01E8BAC4 FMUL S1, S8, S1
	0x01E8BAC8 FSUB S0, S0, S2
	0x01E8BACC FMOV S2, W8
	0x01E8BAD0 FADD S0, S1, S0
	0x01E8BAD4 SBFM W9, W22, 0x1F, 0x1F
	0x01E8BAD8 MOVZ W10, 0x80000000
	0x01E8BADC FCVTZS W8, S0
	0x01E8BAE0 FCMP S0, S2
	0x01E8BAE4 EOR W9, W9, W22, 0x1
	0x01E8BAE8 CSEL W8, W10, W8, EQ
	0x01E8BAEC LDP X20, X19, [X31 + 0x40]
	0x01E8BAF0 LDP X22, X21, [X31 + 0x30]
	0x01E8BAF4 LDP X30, X23, [X31 + 0x20]
	0x01E8BAF8 LDP D9, D8, [X31 + 0x10]
	0x01E8BAFC SBFM W10, W8, 0x1F, 0x1F
	0x01E8BB00 EOR W8, W10, W8, 0x1
	0x01E8BB04 BFM X0, X9, 0x20, 0x1F
	0x01E8BB08 BFM X1, X8, 0x20, 0x1F
	0x01E8BB0C LDP D11, D10, [X31], #0x50
	0x01E8BB10 RET
	0x01E8BB14 STR X30, [X31 - 0x30]!
	0x01E8BB18 STP X22, X21, [X31 + 0x10]
	0x01E8BB1C STP X20, X19, [X31 + 0x20]
	0x01E8BB20 ADRP X21, 0x254D000
	0x01E8BB24 LDRB W8, [X21 + 0xE90]
	0x01E8BB28 MOV X19, X1
	0x01E8BB2C MOV X20, X0
	0x01E8BB30 CBNZ W8, 0x1E8BB48

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x254F000
	006 Move W8, [X21+567]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2273000
	014 Move X0, [X0+4016]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+567], W8
	018 Compare X20, 0
	019 JumpIfEqual {36}
	020 Move X8, 0x2273000
	021 Move X8, [X8+4016]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X20
	026 Call 0x1C17E08
	027 Move X8, [X0]
	028 Move W9, [X19]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W9, [X19+4]
	031 Move X8, X8
	032 ShiftRight X8, 32
	033 And X8, X8, 0x7FFFFFFF
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CSET not yet implemented."
	036 Move W0, W31
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x01E8BB34 ADRP X0, 0x226F000
	0x01E8BB38 LDR X0, [X0 + 0xC68]
	0x01E8BB3C BL 0x1C16CF4
	0x01E8BB40 MOVZ W8, 0x1
	0x01E8BB44 STRB W8, [X21 + 0xE90]

ISIL:
	001 Move W8, [X0]
	002 Move W9, [X0+4]
	003 Move W10, 397
	004 Multiply W8, W8, W10
	005 Xor W0, W8, W9
	006 Return X0

Method: System.Boolean op_Equality(Fusion.Vector2Compressed left, Fusion.Vector2Compressed right)

Disassembly:
	0x01E8BB48 ADRP X22, 0x226F000
	0x01E8BB4C LDR X22, [X22 + 0xC68]
	0x01E8BB50 LDR X0, [X22]
	0x01E8BB54 LDR W8, [X0 + 0xE0]
	0x01E8BB58 CBNZ W8, 0x1E8BB7C
	0x01E8BB5C BL 0x1C16DFC
	0x01E8BB60 LDRB W8, [X21 + 0xE90]
	0x01E8BB64 CBNZ W8, 0x1E8BB7C

ISIL:
	001 Move X8, X0
	002 ShiftRight X8, 32
	003 And X8, X8, 0x7FFFFFFF
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move X9, X1
	006 ShiftRight X9, 32
	007 And X9, X9, 0x7FFFFFFF
	008 NotImplemented "Instruction CSET not yet implemented."
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 And W0, W10, W8
	012 Return X0

Method: System.Boolean op_Inequality(Fusion.Vector2Compressed left, Fusion.Vector2Compressed right)

Disassembly:
	0x01E8BB68 ADRP X0, 0x226F000
	0x01E8BB6C LDR X0, [X0 + 0xC68]
	0x01E8BB70 BL 0x1C16CF4
	0x01E8BB74 MOVZ W8, 0x1
	0x01E8BB78 STRB W8, [X21 + 0xE90]
	0x01E8BB7C LDR X0, [X22]
	0x01E8BB80 LDR W8, [X0 + 0xE0]
	0x01E8BB84 CBNZ W8, 0x1E8BBA8

ISIL:
	001 Move X8, X0
	002 ShiftRight X8, 32
	003 And X8, X8, 0x7FFFFFFF
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move X9, X1
	006 ShiftRight X9, 32
	007 And X9, X9, 0x7FFFFFFF
	008 NotImplemented "Instruction CSET not yet implemented."
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 Or W0, W10, W8
	012 Return X0

