Type: Fusion.Simulation/SimulationPacketHeader

Method: System.Boolean Equals(Fusion.Simulation/SimulationPacketHeader other)

Disassembly:
	0x01ECFD54 LDRB W8, [X22 + 0x4E2]
	0x01ECFD58 MOV X19, X2
	0x01ECFD5C MOV X21, X1
	0x01ECFD60 MOV X20, X0
	0x01ECFD64 TBNZ X8, 0x0, 0x1ECFD7C
	0x01ECFD68 ADRP X0, 0x2229000
	0x01ECFD6C LDR X0, [X0 + 0x20]
	0x01ECFD70 BL 0x1C16CF4
	0x01ECFD74 MOVZ W8, 0x1
	0x01ECFD78 STRB W8, [X22 + 0x4E2]
	0x01ECFD7C AND X21, X21, 0x0
	0x01ECFD80 MOV X0, X20
	0x01ECFD84 MOV X1, X21
	0x01ECFD88 MOV X2, X31
	0x01ECFD8C STR X31, [X31 + 0x8]
	0x01ECFD90 BL 0x1EC2800
	0x01ECFD94 TBZ X0, 0x0, 0x1ECFDDC

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, [X0+1]
	004 Move X9, X1
	005 ShiftRight X9, 8
	006 And X9, X9, 0x7FFFFFFF
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W8, [X0+2]
	009 Move X9, X1
	010 ShiftRight X9, 16
	011 And X9, X9, 0x7FFFFFFF
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move W8, [X0+3]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CSET not yet implemented."
	016 Return X0
	017 Move W0, W31
	018 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x01ECFD98 LDR X0, [X20 + 0xB8]
	0x01ECFD9C CBZ X0, 0x1ECFDEC
	0x01ECFDA0 ADRP X8, 0x2229000
	0x01ECFDA4 LDR X8, [X8 + 0x20]
	0x01ECFDA8 ADD X2, X31, 0x8
	0x01ECFDAC MOV X1, X21
	0x01ECFDB0 LDR X3, [X8]
	0x01ECFDB4 BL 0x2AE89D0
	0x01ECFDB8 TBZ X0, 0x0, 0x1ECFDDC
	0x01ECFDBC LDR X8, [X31 + 0x8]
	0x01ECFDC0 CBZ X8, 0x1ECFDEC
	0x01ECFDC4 LDR X0, [X20 + 0x130]
	0x01ECFDC8 LDR X1, [X8 + 0xD0]
	0x01ECFDCC MOVZ W2, 0x3
	0x01ECFDD0 MOV X3, X19
	0x01ECFDD4 MOV X4, X31
	0x01ECFDD8 BL 0x1EFFA54
	0x01ECFDDC LDP X20, X19, [X31 + 0x20]
	0x01ECFDE0 LDP X22, X21, [X31 + 0x10]
	0x01ECFDE4 LDR X30, [X31], #0x30
	0x01ECFDE8 RET
	0x01ECFDEC BL 0x1C16F20
	0x01ECFDF0 SUB X31, X31, 0xB0
	0x01ECFDF4 STR X30, [X31 + 0x60]
	0x01ECFDF8 STP X26, X25, [X31 + 0x70]
	0x01ECFDFC STP X24, X23, [X31 + 0x80]
	0x01ECFE00 STP X22, X21, [X31 + 0x90]
	0x01ECFE04 STP X20, X19, [X31 + 0xA0]
	0x01ECFE08 MRS X21, 0xC000
	0x01ECFE0C LDR X8, [X21 + 0x28]
	0x01ECFE10 ADRP X22, 0x250A000
	0x01ECFE14 MOV X19, X1
	0x01ECFE18 MOV X20, X0
	0x01ECFE1C STR X8, [X31 + 0x58]
	0x01ECFE20 LDRB W8, [X22 + 0x4E3]
	0x01ECFE24 TBNZ X8, 0x0, 0x1ECFE78
	0x01ECFE28 ADRP X0, 0x222F000
	0x01ECFE2C LDR X0, [X0 + 0xB90]
	0x01ECFE30 BL 0x1C16CF4
	0x01ECFE34 ADRP X0, 0x222F000
	0x01ECFE38 LDR X0, [X0 + 0xB98]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x250B000
	006 Move W8, [X21+1243]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2231000
	014 Move X0, [X0+3728]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1243], W8
	018 Compare X20, 0
	019 JumpIfEqual {43}
	020 Move X8, 0x2231000
	021 Move X8, [X8+3728]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X20
	026 Call 0x1C17E08
	027 Move X8, [X0]
	028 Move W9, [X19]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W9, [X19+1]
	031 Move X10, X8
	032 ShiftRight X10, 8
	033 And X10, X10, 0x7FFFFFFF
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W9, [X19+2]
	036 Move X10, X8
	037 ShiftRight X10, 16
	038 And X10, X10, 0x7FFFFFFF
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W9, [X19+3]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CSET not yet implemented."
	043 Move W0, W31
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x01ECFE3C BL 0x1C16CF4
	0x01ECFE40 ADRP X0, 0x222F000
	0x01ECFE44 LDR X0, [X0 + 0xBA0]
	0x01ECFE48 BL 0x1C16CF4
	0x01ECFE4C ADRP X0, 0x222F000
	0x01ECFE50 LDR X0, [X0 + 0xBA8]
	0x01ECFE54 BL 0x1C16CF4
	0x01ECFE58 ADRP X0, 0x222E000
	0x01ECFE5C LDR X0, [X0 + 0x78]
	0x01ECFE60 BL 0x1C16CF4
	0x01ECFE64 ADRP X0, 0x222F000
	0x01ECFE68 LDR X0, [X0 + 0xBB0]
	0x01ECFE6C BL 0x1C16CF4
	0x01ECFE70 MOVZ W8, 0x1
	0x01ECFE74 STRB W8, [X22 + 0x4E3]
	0x01ECFE78 STP X31, X31, [X31]
	0x01ECFE7C STR X31, [X31 + 0x10]
	0x01ECFE80 LDR X0, [X20 + 0xB0]
	0x01ECFE84 CBZ X0, 0x1ECFF94
	0x01ECFE88 ADRP X8, 0x222F000
	0x01ECFE8C LDR X8, [X8 + 0xB90]
	0x01ECFE90 LDR X1, [X8]
	0x01ECFE94 BL 0x2A1352C
	0x01ECFE98 CBZ X0, 0x1ECFF94
	0x01ECFE9C ADRP X8, 0x222F000
	0x01ECFEA0 LDR X8, [X8 + 0xBB0]
	0x01ECFEA4 ADRP X23, 0x222F000
	0x01ECFEA8 ADRP X24, 0x222E000
	0x01ECFEAC ADRP X22, 0x222F000
	0x01ECFEB0 LDR X1, [X8]
	0x01ECFEB4 LDR X23, [X23 + 0xBA0]
	0x01ECFEB8 LDR X24, [X24 + 0x78]
	0x01ECFEBC LDR X22, [X22 + 0xB98]
	0x01ECFEC0 ADD X8, X31, 0x40
	0x01ECFEC4 BL 0x274B2CC
	0x01ECFEC8 LDR V0, [X31 + 0x4]
	0x01ECFECC LDR X8, [X31 + 0x50]
	0x01ECFED0 STR V0, [X31]
	0x01ECFED4 STR X8, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X1, X31
	008 Move X19, X0
	009 Call Byte.GetHashCode, X0
	010 Add X21, X19, 1
	011 Move W20, W0
	012 Move X0, X21
	013 Move X1, X31
	014 Call Byte.GetHashCode, X0
	015 Move W22, W0
	016 Add X0, X19, 2
	017 Move X1, X31
	018 Call Byte.GetHashCode, X0
	019 Move W23, W0
	020 Add X0, X19, 3
	021 Move X1, X31
	022 Call Byte.GetHashCode, X0
	023 Move W19, W0
	024 Move X0, X21
	025 Move X1, X31
	026 Call Byte.GetHashCode, X0
	027 Move W8, 0x67A9
	028 NotImplemented "Instruction MOVK not yet implemented."
	029 Xor W8, W20, W8
	030 Move W9, 397
	031 Multiply W8, W8, W9
	032 Xor W8, W8, W22
	033 Multiply W8, W8, W9
	034 Xor W8, W8, W23
	035 Multiply W8, W8, W9
	036 Xor W8, W8, W19
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Multiply W8, W8, W9
	042 Xor W0, W8, W0
	043 Move X30, [X31+48]
	044 Move X23, [X31+56]
	045 Return X0

Method: System.Void Write(Fusion.Sockets.NetBitBuffer* buffer)

Disassembly:
	0x01ECFED8 LDR X1, [X23]
	0x01ECFEDC ADD X0, X31, 0x0
	0x01ECFEE0 BL 0x2BF5F4C
	0x01ECFEE4 TBZ X0, 0x0, 0x1ECFF54
	0x01ECFEE8 LDR X25, [X31 + 0x10]
	0x01ECFEEC CBZ X25, 0x1ECFF8C
	0x01ECFEF0 LDR X26, [X25 + 0xD0]
	0x01ECFEF4 CBZ X26, 0x1ECFF90
	0x01ECFEF8 LDR X8, [X19 + 0x10]
	0x01ECFEFC LDR V0, [X19]
	0x01ECFF00 LDR X0, [X24]
	0x01ECFF04 STR X8, [X31 + 0x50]
	0x01ECFF08 STR V0, [X31 + 0x4]
	0x01ECFF0C LDR W8, [X0 + 0xE0]
	0x01ECFF10 CBNZ W8, 0x1ECFF18
	0x01ECFF14 BL 0x1C16DFC
	0x01ECFF18 LDR V0, [X31 + 0x4]
	0x01ECFF1C LDR X8, [X31 + 0x50]
	0x01ECFF20 ADD X0, X26, 0x28
	0x01ECFF24 STR V0, [X31 + 0x2]
	0x01ECFF28 STR X8, [X31 + 0x30]
	0x01ECFF2C ADD X1, X31, 0x20
	0x01ECFF30 MOV X2, X31
	0x01ECFF34 BL 0x1EF8788
	0x01ECFF38 TBZ X0, 0x0, 0x1ECFED8
	0x01ECFF3C LDR X0, [X20 + 0x130]
	0x01ECFF40 LDR X1, [X25 + 0xD0]
	0x01ECFF44 MOVZ W2, 0x3
	0x01ECFF48 MOV X3, X31
	0x01ECFF4C MOV X4, X31
	0x01ECFF50 BL 0x1EFFA54

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x250B000
	007 Move X21, 0x2231000
	008 Move W8, [X22+1244]
	009 Move X21, [X21+3736]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2231000
	017 Move X0, [X0+3736]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1244], W8
	021 Move X8, [X19+64]
	022 Move X1, [X21]
	023 Move X2, X31
	024 Move W8, [X8]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CSET not yet implemented."
	027 Call Assert.Always, X0, X1
	028 Move X1, [X20]
	029 Move X0, X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move W2, 112
	035 Move W3, 64
	036 Move X4, X31
	037 Move X30, [X31+48]
	038 Call NetBitBuffer.WriteUInt64AtOffset, X0, X1, X2, X3
	039 Return 

Method: System.Void Read(Fusion.Sockets.NetBitBuffer* buffer)

Disassembly:
	0x01ECFF54 LDR X1, [X22]
	0x01ECFF58 ADD X0, X31, 0x0
	0x01ECFF5C BL 0x2BF5F48
	0x01ECFF60 LDR X8, [X21 + 0x28]
	0x01ECFF64 LDR X9, [X31 + 0x58]
	0x01ECFF68 CMP X8, X9
	0x01ECFF6C B.NE 0x1ECFF98
	0x01ECFF70 LDP X20, X19, [X31 + 0xA0]
	0x01ECFF74 LDP X22, X21, [X31 + 0x90]
	0x01ECFF78 LDP X24, X23, [X31 + 0x80]
	0x01ECFF7C LDP X26, X25, [X31 + 0x70]
	0x01ECFF80 LDR X30, [X31 + 0x60]
	0x01ECFF84 ADD X31, X31, 0xB0
	0x01ECFF88 RET
	0x01ECFF8C BL 0x1C16F20
	0x01ECFF90 BL 0x1C16F20
	0x01ECFF94 BL 0x1C16F20
	0x01ECFF98 BL 0x3EB1B20
	0x01ECFF9C B 0x1ECFFB0
	0x01ECFFA0 B 0x1ECFFB0
	0x01ECFFA4 B 0x1ECFFB0
	0x01ECFFA8 B 0x1ECFFB0
	0x01ECFFAC B 0x1ECFFB0
	0x01ECFFB0 MOV X19, X0
	0x01ECFFB4 CMP W1, 0x1
	0x01ECFFB8 B.NE 0x1ECFFE4
	0x01ECFFBC MOV X0, X19
	0x01ECFFC0 BL 0x3EB1AD0
	0x01ECFFC4 LDR X20, [X0]
	0x01ECFFC8 BL 0x3EB1AE0
	0x01ECFFCC LDR X1, [X22]
	0x01ECFFD0 ADD X0, X31, 0x0
	0x01ECFFD4 BL 0x2BF5F48
	0x01ECFFD8 CBZ X20, 0x1ECFF60
	0x01ECFFDC MOV X0, X20
	0x01ECFFE0 BL 0x1C16F18
	0x01ECFFE4 MOV X20, X31
	0x01ECFFE8 B 0x1ECFFF0
	0x01ECFFEC MOV X19, X0
	0x01ECFFF0 LDR X1, [X22]
	0x01ECFFF4 ADD X0, X31, 0x0
	0x01ECFFF8 BL 0x2BF5F48

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x250B000
	008 Move X22, 0x2231000
	009 Move X21, 0x2231000
	010 Move W8, [X23+1245]
	011 Move X22, [X22+3736]
	012 Move X21, [X21+3744]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x2231000
	020 Move X0, [X0+3744]
	021 Call 0x1C17CF4
	022 Move X0, 0x2231000
	023 Move X0, [X0+3736]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+1245], W8
	027 Move X8, [X20+64]
	028 Move X1, [X22]
	029 Move X2, X31
	030 Move W8, [X8]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CSET not yet implemented."
	033 Call Assert.Always, X0, X1
	034 Move W8, [X20+80]
	035 Move X1, [X21]
	036 Move X2, X31
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSET not yet implemented."
	039 Call Assert.Always, X0, X1
	040 Move W1, 64
	041 Move X0, X20
	042 Move X2, X31
	043 Call NetBitBuffer.Read, X0, X1
	044 Move [X19], X0
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Return 

Method: System.String ToString()

Disassembly:
	0x01ECFFFC CBNZ X20, 0x1ED0008
	0x01ED0000 MOV X0, X19
	0x01ED0004 BL 0x1D2C690
	0x01ED0008 MOV X0, X20
	0x01ED000C BL 0x1C16F18
	0x01ED0010 BL 0x1990590
	0x01ED0014 SUB X31, X31, 0x40
	0x01ED0018 STR X30, [X31 + 0x20]
	0x01ED001C STP X20, X19, [X31 + 0x30]
	0x01ED0020 ADRP X20, 0x2509000
	0x01ED0024 LDRB W8, [X20 + 0x4E4]
	0x01ED0028 MOV X19, X0
	0x01ED002C TBNZ X8, 0x0, 0x1ED0074
	0x01ED0030 ADRP X0, 0x222E000
	0x01ED0034 LDR X0, [X0 + 0xB90]
	0x01ED0038 BL 0x1C16CF4
	0x01ED003C ADRP X0, 0x222E000
	0x01ED0040 LDR X0, [X0 + 0xB98]
	0x01ED0044 BL 0x1C16CF4
	0x01ED0048 ADRP X0, 0x222E000
	0x01ED004C LDR X0, [X0 + 0xBA0]
	0x01ED0050 BL 0x1C16CF4
	0x01ED0054 ADRP X0, 0x222E000
	0x01ED0058 LDR X0, [X0 + 0xBA8]
	0x01ED005C BL 0x1C16CF4
	0x01ED0060 ADRP X0, 0x222E000
	0x01ED0064 LDR X0, [X0 + 0xBB0]
	0x01ED0068 BL 0x1C16CF4
	0x01ED006C MOVZ W8, 0x1
	0x01ED0070 STRB W8, [X20 + 0x4E4]
	0x01ED0074 STP X31, X31, [X31 + 0x8]
	0x01ED0078 STR X31, [X31 + 0x18]
	0x01ED007C LDR X8, [X19 + 0x58]
	0x01ED0080 CBZ X8, 0x1ED0114
	0x01ED0084 LDR W8, [X8 + 0x14]
	0x01ED0088 ORN W8, W31, W8, 0x0
	0x01ED008C ANDS W31, W8, 0x3
	0x01ED0090 B.NE 0x1ED0104
	0x01ED0094 LDR X0, [X19 + 0xB0]
	0x01ED0098 CBZ X0, 0x1ED0114
	0x01ED009C ADRP X8, 0x222E000
	0x01ED00A0 LDR X8, [X8 + 0xB90]
	0x01ED00A4 LDR X1, [X8]
	0x01ED00A8 BL 0x2A1352C
	0x01ED00AC CBZ X0, 0x1ED0114
	0x01ED00B0 ADRP X8, 0x222E000
	0x01ED00B4 LDR X8, [X8 + 0xBB0]
	0x01ED00B8 LDR X1, [X8]
	0x01ED00BC ADD X8, X31, 0x8
	0x01ED00C0 BL 0x274B2CC
	0x01ED00C4 ADRP X20, 0x222E000
	0x01ED00C8 LDR X20, [X20 + 0xBA0]
	0x01ED00CC LDR X1, [X20]
	0x01ED00D0 ADD X0, X31, 0x8
	0x01ED00D4 BL 0x2BF5F4C
	0x01ED00D8 TBZ X0, 0x0, 0x1ED00F0
	0x01ED00DC LDR X1, [X31 + 0x18]
	0x01ED00E0 MOV X0, X19
	0x01ED00E4 MOV X2, X31
	0x01ED00E8 BL 0x1EBF2F4
	0x01ED00EC B 0x1ED00CC
	0x01ED00F0 ADRP X8, 0x222E000
	0x01ED00F4 LDR X8, [X8 + 0xB98]
	0x01ED00F8 ADD X0, X31, 0x8
	0x01ED00FC LDR X1, [X8]
	0x01ED0100 BL 0x2BF5F48
	0x01ED0104 LDP X20, X19, [X31 + 0x30]
	0x01ED0108 LDR X30, [X31 + 0x20]
	0x01ED010C ADD X31, X31, 0x40
	0x01ED0110 RET
	0x01ED0114 BL 0x1C16F20
	0x01ED0118 B 0x1ED011C
	0x01ED011C MOV X20, X0
	0x01ED0120 CMP W1, 0x1
	0x01ED0124 B.NE 0x1ED0158
	0x01ED0128 MOV X0, X20
	0x01ED012C BL 0x3EB1AD0
	0x01ED0130 LDR X19, [X0]
	0x01ED0134 BL 0x3EB1AE0
	0x01ED0138 ADRP X8, 0x222E000
	0x01ED013C LDR X8, [X8 + 0xB98]
	0x01ED0140 ADD X0, X31, 0x8
	0x01ED0144 LDR X1, [X8]
	0x01ED0148 BL 0x2BF5F48
	0x01ED014C CBZ X19, 0x1ED0104
	0x01ED0150 MOV X0, X19
	0x01ED0154 BL 0x1C16F18
	0x01ED0158 MOV X19, X31
	0x01ED015C B 0x1ED0164
	0x01ED0160 MOV X20, X0
	0x01ED0164 ADRP X8, 0x222E000
	0x01ED0168 LDR X8, [X8 + 0xB98]
	0x01ED016C LDR X1, [X8]
	0x01ED0170 ADD X0, X31, 0x8
	0x01ED0174 BL 0x2BF5F48
	0x01ED0178 CBNZ X19, 0x1ED0184
	0x01ED017C MOV X0, X20
	0x01ED0180 BL 0x1D2C690
	0x01ED0184 MOV X0, X19
	0x01ED0188 BL 0x1C16F18
	0x01ED018C BL 0x1990590
	0x01ED0190 STR X30, [X31 - 0x20]!
	0x01ED0194 STP X20, X19, [X31 + 0x10]
	0x01ED0198 MOV X1, X31
	0x01ED019C MOV X19, X0
	0x01ED01A0 BL 0x1EC08DC
	0x01ED01A4 TBZ X0, 0x0, 0x1ED01F8
	0x01ED01A8 LDR X8, [X19]
	0x01ED01AC MOV X0, X19
	0x01ED01B0 LDR X9, [X8 + 0x268]
	0x01ED01B4 LDR X1, [X8 + 0x270]
	0x01ED01B8 BLR X9
	0x01ED01BC AND X1, X0, 0x0
	0x01ED01C0 MOV X0, X19
	0x01ED01C4 MOV X2, X31
	0x01ED01C8 BL 0x1EC2800
	0x01ED01CC TBNZ X0, 0x0, 0x1ED01F8
	0x01ED01D0 LDR X8, [X19]
	0x01ED01D4 MOV X0, X19
	0x01ED01D8 LDR X9, [X8 + 0x268]
	0x01ED01DC LDR X1, [X8 + 0x270]
	0x01ED01E0 BLR X9
	0x01ED01E4 AND X1, X0, 0x0
	0x01ED01E8 MOV X0, X19
	0x01ED01EC MOV X2, X31
	0x01ED01F0 MOV X3, X31
	0x01ED01F4 BL 0x1EC2C0C
	0x01ED01F8 LDR V0, [X19 + 0x70]
	0x01ED01FC LDR V1, [X19 + 0x78]
	0x01ED0200 MOV X0, X19
	0x01ED0204 MOV X1, X31
	0x01ED0208 STR D0, [X19 + 0x80]
	0x01ED020C STR S1, [X19 + 0x88]
	0x01ED0210 ADD X20, X19, 0x48
	0x01ED0214 BL 0x1EC048C
	0x01ED0218 MOV W1, W0
	0x01ED021C MOV X0, X20
	0x01ED0220 MOV X2, X31
	0x01ED0224 BL 0x1E9023C
	0x01ED0228 STR W0, [X19 + 0x74]
	0x01ED022C MOV X0, X19
	0x01ED0230 MOV X1, X31
	0x01ED0234 BL 0x1EC048C
	0x01ED0238 MOV W1, W0
	0x01ED023C MOV X0, X20
	0x01ED0240 MOV X2, X31
	0x01ED0244 BL 0x1E9023C
	0x01ED0248 STR W0, [X19 + 0x70]
	0x01ED024C STR W31, [X19 + 0x78]
	0x01ED0250 LDP X20, X19, [X31 + 0x10]
	0x01ED0254 MOV W0, W31
	0x01ED0258 LDR X30, [X31], #0x20
	0x01ED025C RET
	0x01ED0260 RET
	0x01ED0264 STP X30, X21, [X31 - 0x20]!
	0x01ED0268 STP X20, X19, [X31 + 0x10]
	0x01ED026C ADRP X20, 0x2509000
	0x01ED0270 LDRB W8, [X20 + 0x4E5]
	0x01ED0274 MOV X19, X0
	0x01ED0278 TBNZ X8, 0x0, 0x1ED0290
	0x01ED027C ADRP X0, 0x222E000
	0x01ED0280 LDR X0, [X0 + 0x7C0]
	0x01ED0284 BL 0x1C16CF4
	0x01ED0288 MOVZ W8, 0x1
	0x01ED028C STRB W8, [X20 + 0x4E5]
	0x01ED0290 MOV X0, X19
	0x01ED0294 MOV X1, X31
	0x01ED0298 BL 0x1EC0810
	0x01ED029C CMP W0, 0x2
	0x01ED02A0 B.EQ 0x1ED02B8
	0x01ED02A4 CMP W0, 0x1
	0x01ED02A8 B.NE 0x1ED02CC
	0x01ED02AC MOV X0, X19
	0x01ED02B0 BL 0x1ED03A0
	0x01ED02B4 B 0x1ED02CC
	0x01ED02B8 MOV X0, X19
	0x01ED02BC BL 0x1ED0754
	0x01ED02C0 LDR X0, [X19 + 0xA8]
	0x01ED02C4 CBZ X0, 0x1ED039C
	0x01ED02C8 BL 0x1ECD71C
	0x01ED02CC LDR X20, [X19 + 0x68]
	0x01ED02D0 CBZ X20, 0x1ED039C
	0x01ED02D4 ADRP X10, 0x222E000
	0x01ED02D8 LDR X8, [X20]
	0x01ED02DC LDR X10, [X10 + 0x7C0]
	0x01ED02E0 LDRH W9, [X8 + 0x12E]
	0x01ED02E4 LDR X1, [X10]
	0x01ED02E8 CBZ X9, 0x1ED030C
	0x01ED02EC LDR X10, [X8 + 0xB0]
	0x01ED02F0 ADD X10, X10, 0x8
	0x01ED02F4 LDUR X11, [X10 - 0x8]
	0x01ED02F8 CMP X11, X1
	0x01ED02FC B.EQ 0x1ED031C
	0x01ED0300 SUBS X9, X9, 0x1
	0x01ED0304 ADD X10, X10, 0x10
	0x01ED0308 B.NE 0x1ED02F4
	0x01ED030C MOV X0, X20
	0x01ED0310 MOV W2, W31
	0x01ED0314 BL 0x1C5C788
	0x01ED0318 B 0x1ED0328
	0x01ED031C LDRSW X9, [X10]
	0x01ED0320 ADD X8, X8, X9, 0x4, LSL
	0x01ED0324 ADD X0, X8, 0x138
	0x01ED0328 LDP X8, X1, [X0]
	0x01ED032C MOV X0, X20
	0x01ED0330 BLR X8
	0x01ED0334 TBZ X0, 0x0, 0x1ED0390
	0x01ED0338 LDR X8, [X19 + 0x110]
	0x01ED033C CBZ X8, 0x1ED039C
	0x01ED0340 LDR X8, [X8 + 0x30]
	0x01ED0344 CBZ X8, 0x1ED039C
	0x01ED0348 LDR W20, [X19 + 0x48]
	0x01ED034C LDR W21, [X8 + 0xC4]
	0x01ED0350 MOV X0, X19
	0x01ED0354 MOV X1, X31
	0x01ED0358 BL 0x1EC0524
	0x01ED035C SUB W8, W20, W21
	0x01ED0360 SCVTF D1, W8
	0x01ED0364 FMUL D0, D0, D1
	0x01ED0368 FMOV D1, 1
	0x01ED036C FCMP D0, D1
	0x01ED0370 B.LE 0x1ED0390
	0x01ED0374 LDR X8, [X19 + 0x110]
	0x01ED0378 CBZ X8, 0x1ED039C
	0x01ED037C LDR X0, [X8 + 0x30]
	0x01ED0380 CBZ X0, 0x1ED039C
	0x01ED0384 LDP X20, X19, [X31 + 0x10]
	0x01ED0388 LDP X30, X21, [X31], #0x20
	0x01ED038C B 0x1ED081C
	0x01ED0390 LDP X20, X19, [X31 + 0x10]
	0x01ED0394 LDP X30, X21, [X31], #0x20
	0x01ED0398 RET
	0x01ED039C BL 0x1C16F20
	0x01ED03A0 SUB X31, X31, 0x90
	0x01ED03A4 STR D8, [X31 + 0x30]
	0x01ED03A8 STR X30, [X31 + 0x38]
	0x01ED03AC STP X28, X27, [X31 + 0x40]
	0x01ED03B0 STP X26, X25, [X31 + 0x50]
	0x01ED03B4 STP X24, X23, [X31 + 0x60]
	0x01ED03B8 STP X22, X21, [X31 + 0x70]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X20, 0x250A000
	009 Move X21, 0x2224000
	010 Move W8, [X20+1246]
	011 Move X21, [X21+2512]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {49}
	017 Move X0, 0x2225000
	018 Move X0, [X0+2520]
	019 Call 0x1C17CF4
	020 Move X0, 0x2224000
	021 Move X0, [X0+1880]
	022 Call 0x1C17CF4
	023 Move X0, 0x2224000
	024 Move X0, [X0+2512]
	025 Call 0x1C17CF4
	026 Move X0, 0x2230000
	027 Move X0, [X0+3752]
	028 Call 0x1C17CF4
	029 Move X0, 0x222F000
	030 Move X0, [X0+1664]
	031 Call 0x1C17CF4
	032 Move X0, 0x2230000
	033 Move X0, [X0+3760]
	034 Call 0x1C17CF4
	035 Move X0, 0x2230000
	036 Move X0, [X0+3768]
	037 Call 0x1C17CF4
	038 Move X0, 0x2230000
	039 Move X0, [X0+3776]
	040 Call 0x1C17CF4
	041 Move X0, 0x2230000
	042 Move X0, [X0+3784]
	043 Call 0x1C17CF4
	044 Move X0, 0x2230000
	045 Move X0, [X0+3792]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X20+1246], W8
	049 Move X0, [X21]
	050 Move W1, 12
	051 Call 0x1C17D6C
	052 Compare X0, 0
	053 JumpIfEqual {264}
	054 Move X21, 0x2230000
	055 Move X21, [X21+3792]
	056 Move X20, X0
	057 Move X0, [X21]
	058 Compare X0, 0
	059 JumpIfEqual {65}
	060 Move X8, [X20]
	061 Move X1, [X8+64]
	062 Call 0x1C17E00
	063 Compare X0, 0
	064 JumpIfEqual {261}
	065 Move W8, [X20+24]
	066 Compare W8, 0
	067 JumpIfEqual {260}
	068 Move X8, [X21]
	069 Move X22, 0x2225000
	070 Move X22, [X22+2520]
	071 Add X1, X31, 28
	072 Move [X20+32], X8
	073 Move W8, [X19]
	074 Move X0, [X22]
	075 Move [X31+28], W8
	076 Call 0x1C17E04
	077 Move X21, X0
	078 Compare X0, 0
	079 JumpIfEqual {86}
	080 Move X8, [X20]
	081 Move X0, X21
	082 Move X1, [X8+64]
	083 Call 0x1C17E00
	084 Compare X0, 0
	085 JumpIfEqual {261}
	086 Move W8, [X20+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X23, 0x2230000
	089 Move X23, [X23+3760]
	090 Move [X20+40], X21
	091 Move X0, [X23]
	092 Compare X0, 0
	093 JumpIfEqual {100}
	094 Move X8, [X20]
	095 Move X1, [X8+64]
	096 Call 0x1C17E00
	097 Compare X0, 0
	098 JumpIfEqual {261}
	099 Move W8, [X20+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X8, [X23]
	102 Add X1, X31, 24
	103 Move [X20+48], X8
	104 Move W8, [X19+1]
	105 Move X0, [X22]
	106 Move [X31+24], W8
	107 Call 0x1C17E04
	108 Move X21, X0
	109 Compare X0, 0
	110 JumpIfEqual {117}
	111 Move X8, [X20]
	112 Move X0, X21
	113 Move X1, [X8+64]
	114 Call 0x1C17E00
	115 Compare X0, 0
	116 JumpIfEqual {261}
	117 Move W8, [X20+24]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X23, 0x2230000
	120 Move X23, [X23+3768]
	121 Move [X20+56], X21
	122 Move X0, [X23]
	123 Compare X0, 0
	124 JumpIfEqual {131}
	125 Move X8, [X20]
	126 Move X1, [X8+64]
	127 Call 0x1C17E00
	128 Compare X0, 0
	129 JumpIfEqual {261}
	130 Move W8, [X20+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X8, [X23]
	133 Add X1, X31, 20
	134 Move [X20+64], X8
	135 Move W8, [X19+2]
	136 Move X0, [X22]
	137 Move [X31+20], W8
	138 Call 0x1C17E04
	139 Move X21, X0
	140 Compare X0, 0
	141 JumpIfEqual {148}
	142 Move X8, [X20]
	143 Move X0, X21
	144 Move X1, [X8+64]
	145 Call 0x1C17E00
	146 Compare X0, 0
	147 JumpIfEqual {261}
	148 Move W8, [X20+24]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move X23, 0x2230000
	151 Move X23, [X23+3752]
	152 Move [X20+72], X21
	153 Move X0, [X23]
	154 Compare X0, 0
	155 JumpIfEqual {162}
	156 Move X8, [X20]
	157 Move X1, [X8+64]
	158 Call 0x1C17E00
	159 Compare X0, 0
	160 JumpIfEqual {261}
	161 Move W8, [X20+24]
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X8, [X23]
	164 Add X1, X31, 16
	165 Move [X20+80], X8
	166 Move W8, [X19+3]
	167 Move X0, [X22]
	168 Move [X31+16], W8
	169 Call 0x1C17E04
	170 Move X21, X0
	171 Compare X0, 0
	172 JumpIfEqual {179}
	173 Move X8, [X20]
	174 Move X0, X21
	175 Move X1, [X8+64]
	176 Call 0x1C17E00
	177 Compare X0, 0
	178 JumpIfEqual {261}
	179 Move W8, [X20+24]
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X23, 0x2230000
	182 Move X23, [X23+3784]
	183 Move [X20+88], X21
	184 Move X0, [X23]
	185 Compare X0, 0
	186 JumpIfEqual {193}
	187 Move X8, [X20]
	188 Move X1, [X8+64]
	189 Call 0x1C17E00
	190 Compare X0, 0
	191 JumpIfEqual {261}
	192 Move W8, [X20+24]
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move X8, [X23]
	195 Add X1, X31, 12
	196 Move [X20+96], X8
	197 Move W8, [X19+1]
	198 Move X0, [X22]
	199 Move [X31+12], W8
	200 Call 0x1C17E04
	201 Move X21, X0
	202 Compare X0, 0
	203 JumpIfEqual {210}
	204 Move X8, [X20]
	205 Move X0, X21
	206 Move X1, [X8+64]
	207 Call 0x1C17E00
	208 Compare X0, 0
	209 JumpIfEqual {261}
	210 Move W8, [X20+24]
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move X22, 0x222F000
	213 Move X22, [X22+1664]
	214 Move [X20+104], X21
	215 Move X0, [X22]
	216 Compare X0, 0
	217 JumpIfEqual {224}
	218 Move X8, [X20]
	219 Move X1, [X8+64]
	220 Call 0x1C17E00
	221 Compare X0, 0
	222 JumpIfEqual {261}
	223 Move W8, [X20+24]
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move X8, [X22]
	226 Move X9, 0x2224000
	227 Move X9, [X9+1880]
	228 Add X1, X31, 8
	229 Move [X20+112], X8
	230 Move W8, [X19+4]
	231 Move X0, [X9]
	232 Move [X31+8], W8
	233 Call 0x1C17E04
	234 Move X19, X0
	235 Compare X0, 0
	236 JumpIfEqual {243}
	237 Move X8, [X20]
	238 Move X0, X19
	239 Move X1, [X8+64]
	240 Call 0x1C17E00
	241 Compare X0, 0
	242 JumpIfEqual {261}
	243 Move W8, [X20+24]
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Move X8, 0x2230000
	246 Move X8, [X8+3776]
	247 Move [X20+120], X19
	248 Move X1, X20
	249 Move X2, X31
	250 Move X0, [X8]
	251 Call String.Format, X0, X1
	252 Move X20, [X31+64]
	253 Move X19, [X31+72]
	254 Move X22, [X31+48]
	255 Move X21, [X31+56]
	256 Move X30, [X31+32]
	257 Move X23, [X31+40]
	258 Add X31, X31, 80
	259 Return X0
	260 Call 0x1C17F28
	261 Call 0x1C17F44
	262 Move X1, X31
	263 Call 0x1C17DEC
	264 Call 0x1C17F20

