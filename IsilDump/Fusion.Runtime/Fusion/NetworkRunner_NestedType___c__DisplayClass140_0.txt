Type: Fusion.NetworkRunner/<>c__DisplayClass140_0

Method: System.Void .ctor()

Disassembly:
	0x01EA0720 BL 0x1C16CF4
	0x01EA0724 ADRP X0, 0x225E000

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Threading.Tasks.Task <Shutdown>g__ContinueTasksWithDestroy|0(System.Threading.Tasks.Task[] precedingTasks)

Disassembly:
	0x01EA0C80 STP V1, V0, [X19 + 0x150]
	0x01EA0C84 STR W8, [X19 + 0x170]
	0x01EA0C88 STR V2, [X19 + 0x14]
	0x01EA0C8C LDP V2, V0, [X31 + 0x3A0]
	0x01EA0C90 LDR V1, [X31 + 0x39]
	0x01EA0C94 MOV W8, W9
	0x01EA0C98 ADD X9, X19, 0x108
	0x01EA0C9C STR W8, [X9 + 0x30]
	0x01EA0CA0 STP V2, V0, [X9 + 0x10]
	0x01EA0CA4 STR V1, [X9]
	0x01EA0CA8 LDR X21, [X20 + 0xB8]
	0x01EA0CAC CBNZ X21, 0x1EA0CCC
	0x01EA0CB0 ADRP X8, 0x225E000
	0x01EA0CB4 LDR X8, [X8 + 0x950]
	0x01EA0CB8 LDR X0, [X8]
	0x01EA0CBC BL 0x1C16F10
	0x01EA0CC0 MOV X1, X31
	0x01EA0CC4 MOV X21, X0
	0x01EA0CC8 BL 0x1EB9F54
	0x01EA0CCC STR X21, [X19 + 0xA8]
	0x01EA0CD0 LDR X22, [X20 + 0xC0]
	0x01EA0CD4 CBNZ X22, 0x1EA0CF4
	0x01EA0CD8 ADRP X8, 0x225E000
	0x01EA0CDC LDR X8, [X8 + 0x940]
	0x01EA0CE0 LDR X0, [X8]
	0x01EA0CE4 BL 0x1C16F10
	0x01EA0CE8 MOV X1, X31
	0x01EA0CEC MOV X22, X0
	0x01EA0CF0 BL 0x1E96FAC
	0x01EA0CF4 LDR X21, [X19 + 0x100]
	0x01EA0CF8 STR X22, [X19 + 0xB0]
	0x01EA0CFC CBZ X21, 0x1EA0FD4
	0x01EA0D00 ADRP X10, 0x225A000
	0x01EA0D04 LDR X8, [X21]
	0x01EA0D08 LDR X10, [X10 + 0xCB0]
	0x01EA0D0C LDRH W9, [X8 + 0x12E]
	0x01EA0D10 LDR X1, [X10]
	0x01EA0D14 CBZ X9, 0x1EA0D38
	0x01EA0D18 LDR X10, [X8 + 0xB0]
	0x01EA0D1C ADD X10, X10, 0x8
	0x01EA0D20 LDUR X11, [X10 - 0x8]
	0x01EA0D24 CMP X11, X1
	0x01EA0D28 B.EQ 0x1EA0D48
	0x01EA0D2C SUBS X9, X9, 0x1
	0x01EA0D30 ADD X10, X10, 0x10
	0x01EA0D34 B.NE 0x1EA0D20
	0x01EA0D38 MOV X0, X21
	0x01EA0D3C MOV W2, W31
	0x01EA0D40 BL 0x1C5C788
	0x01EA0D44 B 0x1EA0D54

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x253A000
	008 Move X23, 0x225C000
	009 Move X21, 0x225F000
	010 Move W8, [X22+943]
	011 Move X23, [X23+2152]
	012 Move X21, [X21+2168]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x225C000
	020 Move X0, [X0+2152]
	021 Call 0x1C17CF4
	022 Move X0, 0x225C000
	023 Move X0, [X0+2000]
	024 Call 0x1C17CF4
	025 Move X0, 0x225F000
	026 Move X0, [X0+2168]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+943], W8
	030 Move X0, [X23]
	031 Call 0x1C17F10
	032 Move X2, [X21]
	033 Move X1, X20
	034 Move X3, X31
	035 Move X21, X0
	036 Call Func`2<CancellationToken, Object>..ctor, X0, X1, X2
	037 Move X0, [X20+24]
	038 Compare X0, 0
	039 JumpIfEqual {62}
	040 Move X20, 0x225C000
	041 Move X20, [X20+2000]
	042 Call NetworkRunner.get_OperationsCancellationToken, X0
	043 Move X8, [X20]
	044 Move X20, X0
	045 Move W9, [X8+224]
	046 Compare W9, 0
	047 JumpIfNotEqual {50}
	048 Move X0, X8
	049 Call 0x1C17DFC
	050 Move X0, X19
	051 Move X1, X21
	052 Move X2, X20
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X3, X31
	058 Move X30, [X31+48]
	059 Move X23, [X31+56]
	060 Call TaskManager.ContinueWhenAll, X0, X1, X2
	061 Return X0
	062 Call 0x1C17F20

Method: System.Threading.Tasks.Task <Shutdown>b__2(System.Threading.CancellationToken token)

Disassembly:
	0x01EB372C ADRP X0, 0x224C000
	0x01EB3730 LDR X0, [X0 + 0x158]
	0x01EB3734 BL 0x1C16CF4
	0x01EB3738 ADRP X0, 0x224C000
	0x01EB373C LDR X0, [X0 + 0x160]
	0x01EB3740 BL 0x1C16CF4
	0x01EB3744 ADRP X0, 0x224C000
	0x01EB3748 LDR X0, [X0 + 0x168]
	0x01EB374C BL 0x1C16CF4
	0x01EB3750 ADRP X0, 0x224C000
	0x01EB3754 LDR X0, [X0 + 0x170]
	0x01EB3758 BL 0x1C16CF4
	0x01EB375C ADRP X0, 0x224C000
	0x01EB3760 LDR X0, [X0 + 0x178]
	0x01EB3764 BL 0x1C16CF4
	0x01EB3768 MOVZ W8, 0x1
	0x01EB376C STRB W8, [X20 + 0x3C0]
	0x01EB3770 STP X31, X31, [X31 + 0x10]
	0x01EB3774 STR X31, [X31 + 0x8]
	0x01EB3778 LDR W8, [X19]
	0x01EB377C ADRP X23, 0x224B000
	0x01EB3780 LDR X20, [X19 + 0x20]
	0x01EB3784 LDR X23, [X23 + 0xFD0]
	0x01EB3788 CMP W8, 0x2
	0x01EB378C B.CC 0x1EB37B0
	0x01EB3790 B.NE 0x1EB37AC
	0x01EB3794 LDR X8, [X19 + 0x78]
	0x01EB3798 MOVN W9, 0x0
	0x01EB379C STR X8, [X31 + 0x8]
	0x01EB37A0 STR X31, [X19 + 0x78]
	0x01EB37A4 STR W9, [X19]
	0x01EB37A8 B 0x1EB3960
	0x01EB37AC STR W31, [X19 + 0x60]
	0x01EB37B0 CBZ W8, 0x1EB37D4
	0x01EB37B4 CMP W8, 0x1
	0x01EB37B8 B.NE 0x1EB37EC
	0x01EB37BC LDR X8, [X19 + 0x70]
	0x01EB37C0 MOVN W9, 0x0
	0x01EB37C4 STR X8, [X31 + 0x10]
	0x01EB37C8 STR X31, [X19 + 0x70]
	0x01EB37CC STR W9, [X19]
	0x01EB37D0 B 0x1EB38B0
	0x01EB37D4 LDR X8, [X19 + 0x68]
	0x01EB37D8 MOVN W9, 0x0
	0x01EB37DC STR X8, [X31 + 0x18]
	0x01EB37E0 STR X31, [X19 + 0x68]
	0x01EB37E4 STR W9, [X19]
	0x01EB37E8 B 0x1EB3830
	0x01EB37EC CBZ X20, 0x1EB3B30
	0x01EB37F0 LDP X1, X2, [X19 + 0x28]
	0x01EB37F4 LDRB W6, [X19 + 0x48]
	0x01EB37F8 LDR X4, [X19 + 0x40]
	0x01EB37FC LDRH W5, [X19 + 0x38]
	0x01EB3800 MOV X0, X20
	0x01EB3804 MOV X3, X31
	0x01EB3808 MOV X7, X31
	0x01EB380C BL 0x1EB124C
	0x01EB3810 CBZ X0, 0x1EB3B34
	0x01EB3814 MOV X1, X31
	0x01EB3818 BL 0x33ED394
	0x01EB381C STR X0, [X31 + 0x18]
	0x01EB3820 ADD X0, X31, 0x18
	0x01EB3824 MOV X1, X31
	0x01EB3828 BL 0x32C3A80
	0x01EB382C TBZ X0, 0x0, 0x1EB3A18
	0x01EB3830 ADD X0, X31, 0x18
	0x01EB3834 MOV X1, X31
	0x01EB3838 BL 0x32C3B4C
	0x01EB383C CBZ X20, 0x1EB3B18
	0x01EB3840 MOV X0, X20
	0x01EB3844 MOV X1, X31
	0x01EB3848 BL 0x1E9DF98
	0x01EB384C TBZ X0, 0x0, 0x1EB3AA4
	0x01EB3850 LDR X0, [X20 + 0x1B0]
	0x01EB3854 CBZ X0, 0x1EB3B1C
	0x01EB3858 MOV X1, X31
	0x01EB385C BL 0x1E68684
	0x01EB3860 TBNZ X0, 0x0, 0x1EB3AA4
	0x01EB3864 LDR X0, [X20 + 0x1B0]
	0x01EB3868 CBZ X0, 0x1EB3B20
	0x01EB386C LDR W1, [X19 + 0x4C]
	0x01EB3870 LDR X2, [X19 + 0x50]
	0x01EB3874 MOV W3, W31
	0x01EB3878 MOV X4, X31
	0x01EB387C BL 0x1E69520
	0x01EB3880 CBZ X0, 0x1EB3B24
	0x01EB3884 ADRP X8, 0x224C000
	0x01EB3888 LDR X8, [X8 + 0x178]
	0x01EB388C LDR X1, [X8]
	0x01EB3890 BL 0x269C840
	0x01EB3894 ADRP X8, 0x224C000
	0x01EB3898 LDR X8, [X8 + 0x168]
	0x01EB389C STR X0, [X31 + 0x10]
	0x01EB38A0 LDR X1, [X8]
	0x01EB38A4 ADD X0, X31, 0x10
	0x01EB38A8 BL 0x26771E0
	0x01EB38AC TBZ X0, 0x0, 0x1EB39D8
	0x01EB38B0 ADRP X8, 0x224C000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2527000
	006 Move W8, [X20+944]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x2241000
	013 Move X0, [X0+1432]
	014 Call 0x1C17CF4
	015 Move X0, 0x2242000
	016 Move X0, [X0+1976]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+944], W8
	020 Move W8, [X19+16]
	021 Compare W8, 0
	022 JumpIfEqual {72}
	023 Move X21, 0x2241000
	024 Move X21, [X21+1432]
	025 Move X20, [X19+24]
	026 Move X0, [X21]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Call Object.op_Implicit, X0
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {72}
	038 Move X0, [X19+24]
	039 Compare X0, 0
	040 JumpIfEqual {129}
	041 Move X1, X31
	042 Call Component.get_gameObject, X0
	043 Move X8, [X21]
	044 Move X20, X0
	045 Move W9, [X8+224]
	046 Compare W9, 0
	047 JumpIfNotEqual {50}
	048 Move X0, X8
	049 Call 0x1C17DFC
	050 Move X0, X20
	051 Move X1, X31
	052 Call Object.op_Implicit, X0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {72}
	057 Move X0, [X19+24]
	058 Compare X0, 0
	059 JumpIfEqual {129}
	060 Move X1, X31
	061 Call Component.get_gameObject, X0
	062 Move X8, [X21]
	063 Move X20, X0
	064 Move W9, [X8+224]
	065 Compare W9, 0
	066 JumpIfNotEqual {69}
	067 Move X0, X8
	068 Call 0x1C17DFC
	069 Move X0, X20
	070 Move X1, X31
	071 Call Object.Destroy, X0
	072 Move X8, [X19+24]
	073 Compare X8, 0
	074 JumpIfEqual {129}
	075 Move X0, [X8+216]
	076 Compare X0, 0
	077 JumpIfEqual {129}
	078 Move X1, X31
	079 Call CancellationTokenSource.get_IsCancellationRequested, X0
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {92}
	084 Move X8, [X19+24]
	085 Compare X8, 0
	086 JumpIfEqual {129}
	087 Move X0, [X8+216]
	088 Compare X0, 0
	089 JumpIfEqual {129}
	090 Move X1, X31
	091 Call CancellationTokenSource.Cancel, X0
	092 Move X8, [X19+24]
	093 Compare X8, 0
	094 JumpIfEqual {129}
	095 Move X0, [X8+216]
	096 Compare X0, 0
	097 JumpIfEqual {129}
	098 Move X19, 0x2242000
	099 Move X19, [X19+1976]
	100 Move X1, X31
	101 Call CancellationTokenSource.Dispose, X0
	102 Move X0, [X19]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Move X20, 0x2526000
	108 Move W8, [X20+3869]
	109 Compare W8, 0
	110 JumpIfNotEqual {116}
	111 Move X0, 0x2242000
	112 Move X0, [X0+1976]
	113 Call 0x1C17CF4
	114 Move W8, 1
	115 Move [X20+3869], W8
	116 Move X0, [X19]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {122}
	120 Call 0x1C17DFC
	121 Move X0, [X19]
	122 Move X8, [X0+184]
	123 Move X20, [X31+16]
	124 Move X19, [X31+24]
	125 Move X0, [X8+48]
	126 Move X30, [X31+32]
	127 Move X21, [X31+40]
	128 Return X0
	129 Call 0x1C17F20

Method: System.Void <Shutdown>g__InvokeOnShutdownCallbacks|1()

Disassembly:
	0x01EA09C4 LDR X0, [X26]
	0x01EA09C8 LDR W8, [X0 + 0xE0]
	0x01EA09CC CBNZ W8, 0x1EA09D4
	0x01EA09D0 BL 0x1C16DFC
	0x01EA09D4 ADD X0, X31, 0x198
	0x01EA09D8 ADD X1, X31, 0x290
	0x01EA09DC MOVZ W2, 0xF8
	0x01EA09E0 BL 0x3EB1AC0
	0x01EA09E4 ADD X0, X31, 0x198
	0x01EA09E8 BL 0x1EA1260
	0x01EA09EC STR X0, [X19 + 0x98]
	0x01EA09F0 LDR X8, [X20 + 0xD0]
	0x01EA09F4 STR X8, [X19 + 0xC0]
	0x01EA09F8 LDR X0, [X27]
	0x01EA09FC BL 0x1C16F10
	0x01EA0A00 LDR X1, [X23]
	0x01EA0A04 MOV X23, X0
	0x01EA0A08 BL 0x24F3478
	0x01EA0A0C MOV X0, X19
	0x01EA0A10 MOV X1, X31
	0x01EA0A14 STR X23, [X19 + 0x78]
	0x01EA0A18 BL 0x3C32ECC
	0x01EA0A1C LDR X8, [X24]
	0x01EA0A20 MOV X23, X0
	0x01EA0A24 LDR W9, [X8 + 0xE0]
	0x01EA0A28 CBNZ W9, 0x1EA0A34
	0x01EA0A2C MOV X0, X8
	0x01EA0A30 BL 0x1C16DFC
	0x01EA0A34 ADRP X27, 0x225E000
	0x01EA0A38 LDR X27, [X27 + 0x9A0]
	0x01EA0A3C MOV X0, X23
	0x01EA0A40 MOV X1, X31
	0x01EA0A44 BL 0x3C39674
	0x01EA0A48 LDR X8, [X20 + 0xA8]
	0x01EA0A4C CBZ X8, 0x1EA0A58
	0x01EA0A50 STR X8, [X19 + 0xB8]
	0x01EA0A54 B 0x1EA0AA4
	0x01EA0A58 ADRP X8, 0x225E000
	0x01EA0A5C ADRP X9, 0x225E000
	0x01EA0A60 LDR X8, [X8 + 0x9C0]
	0x01EA0A64 LDR X9, [X9 + 0x960]
	0x01EA0A68 ADD X23, X19, 0xB8
	0x01EA0A6C MOV X0, X19
	0x01EA0A70 LDR X1, [X8]
	0x01EA0A74 LDR X3, [X9]
	0x01EA0A78 MOV X2, X23
	0x01EA0A7C BL 0x222C1D8
	0x01EA0A80 TBNZ X0, 0x0, 0x1EA0AA4
	0x01EA0A84 ADRP X8, 0x225E000
	0x01EA0A88 LDR X8, [X8 + 0x948]
	0x01EA0A8C LDR X0, [X8]
	0x01EA0A90 BL 0x1C16F10
	0x01EA0A94 MOV X1, X31
	0x01EA0A98 MOV X24, X0
	0x01EA0A9C BL 0x1E98D9C
	0x01EA0AA0 STR X24, [X23]
	0x01EA0AA4 LDR X1, [X27]
	0x01EA0AA8 MOV X0, X21
	0x01EA0AAC BL 0x24345D0
	0x01EA0AB0 STR W0, [X31 + 0x3D0]
	0x01EA0AB4 LDR X8, [X19 + 0x98]
	0x01EA0AB8 STR X19, [X31 + 0x400]
	0x01EA0ABC STR X22, [X31 + 0x3F0]
	0x01EA0AC0 ADD X9, X31, 0x2D9
	0x01EA0AC4 STR X8, [X31 + 0x3F8]
	0x01EA0AC8 LDR V0, [X20 + 0x4]
	0x01EA0ACC LDR X8, [X20 + 0x50]
	0x01EA0AD0 ADD X0, X31, 0x3D0
	0x01EA0AD4 MOV X1, X31
	0x01EA0AD8 STUR V0, [X9 + 0xFF]
	0x01EA0ADC STR X8, [X31 + 0x3E8]
	0x01EA0AE0 LDR W8, [X20 + 0xE4]
	0x01EA0AE4 STR W8, [X31 + 0x408]
	0x01EA0AE8 LDR X8, [X20 + 0xE8]
	0x01EA0AEC STR X8, [X31 + 0x410]
	0x01EA0AF0 LDR W8, [X20 + 0xDC]
	0x01EA0AF4 STR W8, [X31 + 0x418]
	0x01EA0AF8 BL 0x1ED7558
	0x01EA0AFC TBZ X0, 0x0, 0x1EA0B48
	0x01EA0B00 ADD X0, X31, 0x290
	0x01EA0B04 ADD X1, X31, 0x3D0
	0x01EA0B08 MOVZ W2, 0x50
	0x01EA0B0C BL 0x3EB1AC0
	0x01EA0B10 ADRP X8, 0x225E000
	0x01EA0B14 LDR X8, [X8 + 0x798]
	0x01EA0B18 LDR X0, [X8]
	0x01EA0B1C BL 0x1C16F10
	0x01EA0B20 MOV X21, X0
	0x01EA0B24 ADD X0, X31, 0x148
	0x01EA0B28 ADD X1, X31, 0x290
	0x01EA0B2C MOVZ W2, 0x50
	0x01EA0B30 BL 0x3EB1AC0
	0x01EA0B34 ADD X1, X31, 0x148
	0x01EA0B38 MOV X0, X21
	0x01EA0B3C MOV X2, X31
	0x01EA0B40 BL 0x1ECF804
	0x01EA0B44 B 0x1EA0B98
	0x01EA0B48 ADD X0, X31, 0x290
	0x01EA0B4C ADD X1, X31, 0x3D0
	0x01EA0B50 MOVZ W2, 0x50
	0x01EA0B54 STR W31, [X31 + 0x408]
	0x01EA0B58 STR X31, [X31 + 0x410]
	0x01EA0B5C STR W31, [X31 + 0x418]
	0x01EA0B60 BL 0x3EB1AC0
	0x01EA0B64 ADRP X8, 0x225E000
	0x01EA0B68 LDR X8, [X8 + 0x7E0]
	0x01EA0B6C LDR X0, [X8]
	0x01EA0B70 BL 0x1C16F10
	0x01EA0B74 MOV X21, X0
	0x01EA0B78 ADD X0, X31, 0xF8
	0x01EA0B7C ADD X1, X31, 0x290
	0x01EA0B80 MOVZ W2, 0x50
	0x01EA0B84 BL 0x3EB1AC0
	0x01EA0B88 ADD X1, X31, 0xF8
	0x01EA0B8C MOV X0, X21
	0x01EA0B90 MOV X2, X31
	0x01EA0B94 BL 0x1ECBD08
	0x01EA0B98 STR X21, [X19 + 0x50]
	0x01EA0B9C CBZ X21, 0x1EA0F8C
	0x01EA0BA0 ADRP X8, 0x225E000
	0x01EA0BA4 LDR X8, [X8 + 0x9B8]
	0x01EA0BA8 STR X19, [X21 + 0x38]
	0x01EA0BAC LDR X22, [X19 + 0x98]
	0x01EA0BB0 LDR X0, [X8]
	0x01EA0BB4 BL 0x1C16F10
	0x01EA0BB8 MOV X1, X22
	0x01EA0BBC MOV X2, X31

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0x253A000
	013 Move W8, [X20+945]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x225F000
	020 Move X0, [X0+1896]
	021 Call 0x1C17CF4
	022 Move X0, 0x225F000
	023 Move X0, [X0+1904]
	024 Call 0x1C17CF4
	025 Move X0, 0x225F000
	026 Move X0, [X0+1912]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+945], W8
	030 Move X8, [X19+24]
	031 Compare X8, 0
	032 JumpIfEqual {127}
	033 Move X27, 0x225F000
	034 Move X28, 0x225F000
	035 Move X21, 0x2254000
	036 Move X22, 0x225C000
	037 Move X23, 0x225F000
	038 Move X27, [X27+1912]
	039 Move X28, [X28+1896]
	040 Move X21, [X21+2000]
	041 Move X22, [X22+2224]
	042 Move X23, [X23+2152]
	043 Move W20, W31
	044 Move X0, [X8+104]
	045 Compare X0, 0
	046 JumpIfEqual {127}
	047 Move W8, [X0+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X2, [X27]
	050 Move W1, W20
	051 Call List`1<Object>.get_Item, X0, X1
	052 Move X24, X0
	053 Compare X0, 0
	054 JumpIfEqual {85}
	055 Move X8, [X24]
	056 Move X26, [X19+24]
	057 Move W25, [X19+32]
	058 Move X1, [X28]
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Compare X9, 0
	061 JumpIfEqual {68}
	062 Move X10, [X8+176]
	063 Add X10, X10, 8
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Subtract X9, X9, 1
	067 Add X10, X10, 16
	068 Move W2, 6
	069 Move X0, X24
	070 Call 0x1C5D788
	071 Move W9, [X10]
	072 Add W9, W9, 6
	073 Add X8, X8, W9
	074 Add X0, X8, 312
	075 Move X8, [X0]
	076 Move X3, [X0+8]
	077 Move X0, X24
	078 Move X1, X26
	079 Move W2, W25
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move X8, [X19+24]
	082 Add W20, W20, 1
	083 Compare X8, 0
	084 JumpIfNotEqual {44}
	085 Call 0x1C17F20
	086 Move X24, X0
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X0, X24
	089 Call 0x3EB2AD0
	090 Move X24, X0
	091 Move X0, X21
	092 Call 0x1C17D08
	093 Move X8, [X24]
	094 Move X1, [X8]
	095 Call 0x1C18270
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {128}
	100 Move X24, [X24]
	101 Call 0x3EB2AE0
	102 Move X25, [X19+24]
	103 Move X0, X22
	104 Call 0x1C17D08
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Move X0, X23
	110 Call 0x1C17D08
	111 Move X2, X0
	112 Move X0, X25
	113 Move X1, X24
	114 Call 0x2214878, X0, X1
	115 Move X20, [X31+80]
	116 Move X19, [X31+88]
	117 Move X22, [X31+64]
	118 Move X21, [X31+72]
	119 Move X24, [X31+48]
	120 Move X23, [X31+56]
	121 Move X26, [X31+32]
	122 Move X25, [X31+40]
	123 Move X28, [X31+16]
	124 Move X27, [X31+24]
	125 Move X30, [X31+96]
	126 Return 
	127 Call 0x1C17F20
	128 Move W0, 8
	129 Call 0x3EB2AF0
	130 Move X8, [X24]
	131 Move [X0], X8
	132 Move X1, 0x2015000
	133 Add X1, X1, 3672
	134 Move X2, X31
	135 Call 0x3EB2B00
	136 Move X24, X0
	137 Call 0x3EB2AE0
	138 Move X0, X24
	139 Call 0x1D2D690
	140 Call 0x1991590

