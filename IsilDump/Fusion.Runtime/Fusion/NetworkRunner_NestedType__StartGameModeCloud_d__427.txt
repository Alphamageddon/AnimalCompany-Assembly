Type: Fusion.NetworkRunner/<StartGameModeCloud>d__427

Method: System.Void MoveNext()

Disassembly:
	0x01EB5944 B 0x1EB5800
	0x01EB5948 MOV X21, X1
	0x01EB594C MOV X23, X0
	0x01EB5950 BL 0x3EB1AE0
	0x01EB5954 CMP W21, 0x1
	0x01EB5958 B.NE 0x1EB597C
	0x01EB595C MOV X0, X23
	0x01EB5960 BL 0x3EB1AD0
	0x01EB5964 LDR X22, [X0]
	0x01EB5968 BL 0x3EB1AE0
	0x01EB596C MOV W8, W31
	0x01EB5970 MOV X21, X31
	0x01EB5974 TBZ X27, 0x1F, 0x1EB5424
	0x01EB5978 B 0x1EB541C
	0x01EB597C MOV X22, X31
	0x01EB5980 TBZ X27, 0x1F, 0x1EB598C
	0x01EB5984 CBZ X20, 0x1EB5998
	0x01EB5988 STR X31, [X20 + 0x1A8]
	0x01EB598C CBZ X22, 0x1EB59B4
	0x01EB5990 MOV X0, X22
	0x01EB5994 BL 0x1C16F18
	0x01EB5998 BL 0x1C16F20
	0x01EB599C MOV X21, X1
	0x01EB59A0 MOV X23, X0
	0x01EB59A4 TBZ X27, 0x1F, 0x1EB598C
	0x01EB59A8 B 0x1EB5984
	0x01EB59AC MOV X21, X1
	0x01EB59B0 MOV X23, X0
	0x01EB59B4 CMP W21, 0x1
	0x01EB59B8 B.NE 0x1EB5A54
	0x01EB59BC MOV X0, X23
	0x01EB59C0 BL 0x3EB1AD0
	0x01EB59C4 MOV X20, X0
	0x01EB59C8 ADRP X0, 0x223E000
	0x01EB59CC LDR X0, [X0 + 0x7D0]
	0x01EB59D0 BL 0x1C16D08
	0x01EB59D4 LDR X8, [X20]
	0x01EB59D8 LDR X1, [X8]
	0x01EB59DC BL 0x1C17270
	0x01EB59E0 TBZ X0, 0x0, 0x1EB5A2C
	0x01EB59E4 LDR X20, [X20]
	0x01EB59E8 BL 0x3EB1AE0
	0x01EB59EC MOVN W8, 0x1
	0x01EB59F0 STR W8, [X19], #0x8
	0x01EB59F4 ADRP X0, 0x2249000
	0x01EB59F8 LDR X0, [X0 + 0xFD0]
	0x01EB59FC BL 0x1C16D08
	0x01EB5A00 LDR W8, [X0 + 0xE0]
	0x01EB5A04 CBNZ W8, 0x1EB5A0C
	0x01EB5A08 BL 0x1C16DFC
	0x01EB5A0C ADRP X0, 0x224A000
	0x01EB5A10 LDR X0, [X0 + 0x188]
	0x01EB5A14 BL 0x1C16D08
	0x01EB5A18 MOV X2, X0
	0x01EB5A1C MOV X0, X19
	0x01EB5A20 MOV X1, X20
	0x01EB5A24 BL 0x26324C8
	0x01EB5A28 B 0x1EB54E0
	0x01EB5A2C MOVZ W0, 0x8
	0x01EB5A30 BL 0x3EB1AF0
	0x01EB5A34 LDR X8, [X20]
	0x01EB5A38 STR X8, [X0]
	0x01EB5A3C ADRP X1, 0x1FFF000
	0x01EB5A40 ADD X1, X1, 0xE58
	0x01EB5A44 MOV X2, X31
	0x01EB5A48 BL 0x3EB1B00
	0x01EB5A4C MOV X23, X0
	0x01EB5A50 BL 0x3EB1AE0
	0x01EB5A54 MOV X0, X23
	0x01EB5A58 BL 0x1D2C690
	0x01EB5A5C BL 0x1990590
	0x01EB5A60 STR X30, [X31 - 0x30]!
	0x01EB5A64 STP X22, X21, [X31 + 0x10]
	0x01EB5A68 STP X20, X19, [X31 + 0x20]
	0x01EB5A6C ADRP X22, 0x2524000
	0x01EB5A70 ADRP X21, 0x2249000
	0x01EB5A74 LDRB W8, [X22 + 0x3C8]
	0x01EB5A78 LDR X21, [X21 + 0xFD0]
	0x01EB5A7C MOV X19, X1
	0x01EB5A80 MOV X20, X0
	0x01EB5A84 TBNZ X8, 0x0, 0x1EB5AA8
	0x01EB5A88 ADRP X0, 0x224A000
	0x01EB5A8C LDR X0, [X0 + 0x190]
	0x01EB5A90 BL 0x1C16CF4
	0x01EB5A94 ADRP X0, 0x2249000
	0x01EB5A98 LDR X0, [X0 + 0xFD0]
	0x01EB5A9C BL 0x1C16CF4
	0x01EB5AA0 MOVZ W8, 0x1
	0x01EB5AA4 STRB W8, [X22 + 0x3C8]
	0x01EB5AA8 LDR X0, [X21]
	0x01EB5AAC ADRP X21, 0x224A000
	0x01EB5AB0 LDR W8, [X0 + 0xE0]
	0x01EB5AB4 LDR X21, [X21 + 0x190]
	0x01EB5AB8 CBNZ W8, 0x1EB5AC0
	0x01EB5ABC BL 0x1C16DFC
	0x01EB5AC0 LDR X2, [X21]
	0x01EB5AC4 ADD X0, X20, 0x8
	0x01EB5AC8 MOV X1, X19
	0x01EB5ACC LDP X20, X19, [X31 + 0x20]
	0x01EB5AD0 LDP X22, X21, [X31 + 0x10]
	0x01EB5AD4 LDR X30, [X31], #0x30
	0x01EB5AD8 B 0x2632228
	0x01EB5ADC STP X29, X30, [X31 - 0x60]!
	0x01EB5AE0 STP X28, X27, [X31 + 0x10]
	0x01EB5AE4 STP X26, X25, [X31 + 0x20]
	0x01EB5AE8 STP X24, X23, [X31 + 0x30]
	0x01EB5AEC STP X22, X21, [X31 + 0x40]
	0x01EB5AF0 STP X20, X19, [X31 + 0x50]
	0x01EB5AF4 SUB X31, X31, 0x2C0
	0x01EB5AF8 MRS X23, 0xC000
	0x01EB5AFC LDR X8, [X23 + 0x28]
	0x01EB5B00 ADRP X20, 0x2524000
	0x01EB5B04 MOV X19, X0
	0x01EB5B08 STR X8, [X31 + 0x2B8]
	0x01EB5B0C LDRB W8, [X20 + 0x3C9]
	0x01EB5B10 TBNZ X8, 0x0, 0x1EB5C30
	0x01EB5B14 ADRP X0, 0x224A000
	0x01EB5B18 LDR X0, [X0 + 0x1C8]
	0x01EB5B1C BL 0x1C16CF4
	0x01EB5B20 ADRP X0, 0x224A000
	0x01EB5B24 LDR X0, [X0 + 0x1D0]
	0x01EB5B28 BL 0x1C16CF4
	0x01EB5B2C ADRP X0, 0x224A000
	0x01EB5B30 LDR X0, [X0 + 0x1D8]
	0x01EB5B34 BL 0x1C16CF4
	0x01EB5B38 ADRP X0, 0x224A000
	0x01EB5B3C LDR X0, [X0 + 0x270]
	0x01EB5B40 BL 0x1C16CF4
	0x01EB5B44 ADRP X0, 0x224A000
	0x01EB5B48 LDR X0, [X0 + 0x278]
	0x01EB5B4C BL 0x1C16CF4
	0x01EB5B50 ADRP X0, 0x224A000
	0x01EB5B54 LDR X0, [X0 + 0x280]
	0x01EB5B58 BL 0x1C16CF4
	0x01EB5B5C ADRP X0, 0x224A000
	0x01EB5B60 LDR X0, [X0 + 0x148]
	0x01EB5B64 BL 0x1C16CF4
	0x01EB5B68 ADRP X0, 0x2249000
	0x01EB5B6C LDR X0, [X0 + 0xFD0]
	0x01EB5B70 BL 0x1C16CF4
	0x01EB5B74 ADRP X0, 0x2246000
	0x01EB5B78 LDR X0, [X0 + 0x7D8]
	0x01EB5B7C BL 0x1C16CF4
	0x01EB5B80 ADRP X0, 0x223E000
	0x01EB5B84 LDR X0, [X0 + 0x7D0]
	0x01EB5B88 BL 0x1C16CF4
	0x01EB5B8C ADRP X0, 0x224A000
	0x01EB5B90 LDR X0, [X0 + 0x208]
	0x01EB5B94 BL 0x1C16CF4
	0x01EB5B98 ADRP X0, 0x223F000
	0x01EB5B9C LDR X0, [X0 + 0x470]
	0x01EB5BA0 BL 0x1C16CF4
	0x01EB5BA4 ADRP X0, 0x2249000
	0x01EB5BA8 LDR X0, [X0 + 0xFF0]
	0x01EB5BAC BL 0x1C16CF4
	0x01EB5BB0 ADRP X0, 0x224A000
	0x01EB5BB4 LDR X0, [X0 + 0x220]
	0x01EB5BB8 BL 0x1C16CF4
	0x01EB5BBC ADRP X0, 0x2246000
	0x01EB5BC0 LDR X0, [X0 + 0x890]
	0x01EB5BC4 BL 0x1C16CF4
	0x01EB5BC8 ADRP X0, 0x224A000
	0x01EB5BCC LDR X0, [X0 + 0x150]
	0x01EB5BD0 BL 0x1C16CF4
	0x01EB5BD4 ADRP X0, 0x2246000
	0x01EB5BD8 LDR X0, [X0 + 0x898]
	0x01EB5BDC BL 0x1C16CF4
	0x01EB5BE0 ADRP X0, 0x224A000
	0x01EB5BE4 LDR X0, [X0 + 0x160]
	0x01EB5BE8 BL 0x1C16CF4
	0x01EB5BEC ADRP X0, 0x224A000
	0x01EB5BF0 LDR X0, [X0 + 0x228]
	0x01EB5BF4 BL 0x1C16CF4
	0x01EB5BF8 ADRP X0, 0x2246000
	0x01EB5BFC LDR X0, [X0 + 0x8A0]
	0x01EB5C00 BL 0x1C16CF4
	0x01EB5C04 ADRP X0, 0x224A000
	0x01EB5C08 LDR X0, [X0 + 0x230]
	0x01EB5C0C BL 0x1C16CF4
	0x01EB5C10 ADRP X0, 0x224A000
	0x01EB5C14 LDR X0, [X0 + 0x170]
	0x01EB5C18 BL 0x1C16CF4
	0x01EB5C1C ADRP X0, 0x224A000
	0x01EB5C20 LDR X0, [X0 + 0x238]
	0x01EB5C24 BL 0x1C16CF4
	0x01EB5C28 MOVZ W8, 0x1
	0x01EB5C2C STRB W8, [X20 + 0x3C9]
	0x01EB5C30 MOVI V0.2D, 0x0
	0x01EB5C34 STR X31, [X31 + 0x2B0]
	0x01EB5C38 STP X31, X31, [X31 + 0xC0]
	0x01EB5C3C STR X31, [X31 + 0xB0]
	0x01EB5C40 STP X31, X31, [X31 + 0x80]
	0x01EB5C44 STP V0, V0, [X31 + 0x240]
	0x01EB5C48 STP V0, V0, [X31 + 0x260]
	0x01EB5C4C STP V0, V0, [X31 + 0x280]
	0x01EB5C50 STR V0, [X31 + 0x2A]
	0x01EB5C54 STP V0, V0, [X31 + 0x90]
	0x01EB5C58 STR X31, [X31 + 0x78]
	0x01EB5C5C LDR W25, [X19]
	0x01EB5C60 ADRP X24, 0x2249000
	0x01EB5C64 LDR X20, [X19 + 0x20]
	0x01EB5C68 LDR X24, [X24 + 0xFD0]
	0x01EB5C6C CMP W25, 0x2
	0x01EB5C70 B.CC 0x1EB5CF0
	0x01EB5C74 B.NE 0x1EB5CA8
	0x01EB5C78 LDR X8, [X19 + 0x170]
	0x01EB5C7C MOVN W9, 0x0
	0x01EB5C80 STR X8, [X31 + 0x78]
	0x01EB5C84 STR X31, [X19 + 0x170]
	0x01EB5C88 STR W9, [X19]
	0x01EB5C8C ADRP X8, 0x224A000
	0x01EB5C90 LDR X8, [X8 + 0x150]
	0x01EB5C94 ADD X0, X31, 0x78
	0x01EB5C98 LDR X1, [X8]
	0x01EB5C9C BL 0x2677474
	0x01EB5CA0 MOV X21, X0
	0x01EB5CA4 B 0x1EB5F5C
	0x01EB5CA8 ADRP X8, 0x224A000
	0x01EB5CAC LDR X22, [X19 + 0x150]
	0x01EB5CB0 LDR X8, [X8 + 0x1D8]
	0x01EB5CB4 LDR X0, [X8]
	0x01EB5CB8 BL 0x1C16F10
	0x01EB5CBC ADRP X8, 0x224A000
	0x01EB5CC0 ADRP X9, 0x224A000
	0x01EB5CC4 LDR X8, [X8 + 0x238]
	0x01EB5CC8 LDR X9, [X9 + 0x1C8]
	0x01EB5CCC MOV X21, X0
	0x01EB5CD0 LDR X2, [X8]
	0x01EB5CD4 LDR X3, [X9]
	0x01EB5CD8 MOVZ W8, 0x42F00000
	0x01EB5CDC FMOV S0, W8
	0x01EB5CE0 MOV X1, X22
	0x01EB5CE4 BL 0x24D9C78
	0x01EB5CE8 CBZ X20, 0x1EB6044
	0x01EB5CEC STR X21, [X20 + 0x1A8]
	0x01EB5CF0 CBZ W25, 0x1EB5D14
	0x01EB5CF4 CMP W25, 0x1
	0x01EB5CF8 B.NE 0x1EB5D2C
	0x01EB5CFC LDR X8, [X19 + 0x168]
	0x01EB5D00 MOVN W9, 0x0
	0x01EB5D04 STR X8, [X31 + 0x80]
	0x01EB5D08 STR X31, [X19 + 0x168]
	0x01EB5D0C STR W9, [X19]
	0x01EB5D10 B 0x1EB5F24
	0x01EB5D14 LDR X8, [X19 + 0x160]
	0x01EB5D18 MOVN W9, 0x0
	0x01EB5D1C STR X8, [X31 + 0x88]
	0x01EB5D20 STR X31, [X19 + 0x160]
	0x01EB5D24 STR W9, [X19]
	0x01EB5D28 B 0x1EB5EC4
	0x01EB5D2C ADRP X22, 0x2246000
	0x01EB5D30 LDR X22, [X22 + 0x7D8]
	0x01EB5D34 LDR X21, [X19 + 0x150]
	0x01EB5D38 LDR X0, [X22]
	0x01EB5D3C LDR W8, [X0 + 0xE0]
	0x01EB5D40 CBNZ W8, 0x1EB5D48
	0x01EB5D44 BL 0x1C16DFC
	0x01EB5D48 MOV X0, X21
	0x01EB5D4C MOV X1, X31
	0x01EB5D50 MOV X2, X31
	0x01EB5D54 BL 0x33DDBCC
	0x01EB5D58 TBZ X0, 0x0, 0x1EB5D78
	0x01EB5D5C LDR X0, [X22]
	0x01EB5D60 LDR W8, [X0 + 0xE0]
	0x01EB5D64 CBNZ W8, 0x1EB5D6C
	0x01EB5D68 BL 0x1C16DFC
	0x01EB5D6C ADD X0, X19, 0x150
	0x01EB5D70 MOV X1, X31
	0x01EB5D74 BL 0x33DDC30
	0x01EB5D78 ADD X22, X31, 0x240
	0x01EB5D7C MOVI V0.2D, 0x0
	0x01EB5D80 STP X31, X31, [X31 + 0xC0]
	0x01EB5D84 STR X31, [X31 + 0xB0]
	0x01EB5D88 STP V0, V0, [X31 + 0x90]
	0x01EB5D8C STUR V0, [X22 + 0x58]
	0x01EB5D90 STUR V0, [X22 + 0x68]
	0x01EB5D94 LDR X8, [X19 + 0xE0]
	0x01EB5D98 LDP V0, V1, [X19 + 0xB0]
	0x01EB5D9C LDR V2, [X19 + 0xD]
	0x01EB5DA0 STR X8, [X31 + 0x270]
	0x01EB5DA4 ADRP X8, 0x224A000
	0x01EB5DA8 LDR X8, [X8 + 0x208]
	0x01EB5DAC STP V1, V2, [X31 + 0x250]
	0x01EB5DB0 STR V0, [X31 + 0x24]
	0x01EB5DB4 STR X31, [X31 + 0x70]
	0x01EB5DB8 LDR X2, [X8]
	0x01EB5DBC ADD X0, X31, 0x70
	0x01EB5DC0 MOVZ W1, 0x2
	0x01EB5DC4 BL 0x24345B8
	0x01EB5DC8 ADRP X8, 0x223F000
	0x01EB5DCC LDR X21, [X31 + 0x70]
	0x01EB5DD0 LDR X8, [X8 + 0x470]
	0x01EB5DD4 MOVI V0.2D, 0x0
	0x01EB5DD8 STUR V0, [X22 + 0x38]
	0x01EB5DDC STUR V0, [X22 + 0x48]
	0x01EB5DE0 LDR X2, [X8]
	0x01EB5DE4 STR X31, [X31 + 0x68]
	0x01EB5DE8 ADD X0, X31, 0x68
	0x01EB5DEC MOVZ W1, 0x1
	0x01EB5DF0 BL 0x24341FC
	0x01EB5DF4 LDR V1, [X19 + 0x8]
	0x01EB5DF8 LDR V0, [X19 + 0x9]
	0x01EB5DFC LDR X27, [X31 + 0x68]
	0x01EB5E00 LDR X22, [X19 + 0xA0]
	0x01EB5E04 LDR X25, [X19 + 0xE8]
	0x01EB5E08 LDR X26, [X19 + 0xF8]
	0x01EB5E0C ADD X0, X31, 0x1C8
	0x01EB5E10 ADD X1, X31, 0x240
	0x01EB5E14 MOVZ W2, 0x78
	0x01EB5E18 STP V0, V1, [X31]
	0x01EB5E1C BL 0x3EB1AC0
	0x01EB5E20 LDR V0, [X31 + 0xC]
	0x01EB5E24 LDP V1, V2, [X31 + 0x90]
	0x01EB5E28 LDR X8, [X31 + 0xB0]
	0x01EB5E2C STR V0, [X31 + 0x5]
	0x01EB5E30 STP V1, V2, [X31 + 0x20]
	0x01EB5E34 STR X8, [X31 + 0x40]
	0x01EB5E38 CBZ X20, 0x1EB6048
	0x01EB5E3C ADD X0, X31, 0xD0
	0x01EB5E40 ADD X1, X31, 0x1C8
	0x01EB5E44 MOVZ W2, 0x78
	0x01EB5E48 ADD X28, X31, 0xD0
	0x01EB5E4C BL 0x3EB1AC0
	0x01EB5E50 LDR V0, [X31 + 0x5]
	0x01EB5E54 STP X27, X21, [X31 + 0x148]
	0x01EB5E58 LDP V1, V2, [X31 + 0x20]
	0x01EB5E5C LDR X8, [X31 + 0x40]
	0x01EB5E60 STUR V0, [X28 + 0x88]
	0x01EB5E64 LDR V0, [X31 + 0x1]
	0x01EB5E68 STP X22, X25, [X31 + 0x168]
	0x01EB5E6C STUR V0, [X28 + 0xA8]
	0x01EB5E70 LDR V0, [X31]
	0x01EB5E74 STUR V0, [X28 + 0xB8]
	0x01EB5E78 STR X26, [X31 + 0x198]
	0x01EB5E7C STP V1, V2, [X31 + 0x1A0]
	0x01EB5E80 STR X8, [X31 + 0x1C0]
	0x01EB5E84 ADD X1, X31, 0xD0
	0x01EB5E88 MOV X0, X20
	0x01EB5E8C MOV X2, X31
	0x01EB5E90 BL 0x1EA068C
	0x01EB5E94 CBZ X0, 0x1EB604C
	0x01EB5E98 ADRP X8, 0x2246000
	0x01EB5E9C LDR X8, [X8 + 0x8A0]
	0x01EB5EA0 LDR X1, [X8]
	0x01EB5EA4 BL 0x269B110
	0x01EB5EA8 ADRP X8, 0x2246000
	0x01EB5EAC LDR X8, [X8 + 0x898]
	0x01EB5EB0 STR X0, [X31 + 0x88]
	0x01EB5EB4 LDR X1, [X8]
	0x01EB5EB8 ADD X0, X31, 0x88
	0x01EB5EBC BL 0x26770B4
	0x01EB5EC0 TBZ X0, 0x0, 0x1EB5FD0
	0x01EB5EC4 ADRP X8, 0x2246000
	0x01EB5EC8 LDR X8, [X8 + 0x890]
	0x01EB5ECC LDR X1, [X8]
	0x01EB5ED0 ADD X0, X31, 0x88
	0x01EB5ED4 BL 0x26770F8
	0x01EB5ED8 CBZ X20, 0x1EB6038
	0x01EB5EDC LDR X0, [X20 + 0x1A8]
	0x01EB5EE0 CBZ X0, 0x1EB603C
	0x01EB5EE4 ADRP X8, 0x224A000
	0x01EB5EE8 LDR X8, [X8 + 0x1D0]
	0x01EB5EEC LDR X1, [X8]
	0x01EB5EF0 BL 0x24D9C5C
	0x01EB5EF4 CBZ X0, 0x1EB6040
	0x01EB5EF8 ADRP X8, 0x224A000
	0x01EB5EFC LDR X8, [X8 + 0x230]
	0x01EB5F00 LDR X1, [X8]
	0x01EB5F04 BL 0x269DF08
	0x01EB5F08 ADRP X8, 0x224A000
	0x01EB5F0C LDR X8, [X8 + 0x228]
	0x01EB5F10 STR X0, [X31 + 0x80]
	0x01EB5F14 LDR X1, [X8]
	0x01EB5F18 ADD X0, X31, 0x80
	0x01EB5F1C BL 0x2677308
	0x01EB5F20 TBZ X0, 0x0, 0x1EB5F90
	0x01EB5F24 ADRP X8, 0x224A000
	0x01EB5F28 LDR X8, [X8 + 0x220]
	0x01EB5F2C ADD X0, X31, 0x80
	0x01EB5F30 LDR X1, [X8]
	0x01EB5F34 BL 0x267734C
	0x01EB5F38 ADRP X8, 0x2249000
	0x01EB5F3C LDR X8, [X8 + 0xFF0]
	0x01EB5F40 LDR X0, [X8]
	0x01EB5F44 BL 0x1C16F10
	0x01EB5F48 MOV X21, X0
	0x01EB5F4C MOV W1, W31
	0x01EB5F50 MOV X2, X31
	0x01EB5F54 MOV X3, X31
	0x01EB5F58 BL 0x1EB3D98
	0x01EB5F5C MOVN W8, 0x1
	0x01EB5F60 STR W8, [X19], #0x8
	0x01EB5F64 LDR X0, [X24]
	0x01EB5F68 ADRP X20, 0x224A000
	0x01EB5F6C LDR W8, [X0 + 0xE0]
	0x01EB5F70 LDR X20, [X20 + 0x148]
	0x01EB5F74 CBNZ W8, 0x1EB5F7C
	0x01EB5F78 BL 0x1C16DFC
	0x01EB5F7C LDR X2, [X20]
	0x01EB5F80 MOV X0, X19
	0x01EB5F84 MOV X1, X21
	0x01EB5F88 BL 0x26322B0
	0x01EB5F8C B 0x1EB6008
	0x01EB5F90 MOVZ W8, 0x1
	0x01EB5F94 STR W8, [X19]
	0x01EB5F98 LDR X8, [X31 + 0x80]
	0x01EB5F9C STR X8, [X19 + 0x168]
	0x01EB5FA0 LDR X0, [X24]
	0x01EB5FA4 LDR W8, [X0 + 0xE0]
	0x01EB5FA8 CBNZ W8, 0x1EB5FB0
	0x01EB5FAC BL 0x1C16DFC
	0x01EB5FB0 ADRP X8, 0x224A000
	0x01EB5FB4 LDR X8, [X8 + 0x280]
	0x01EB5FB8 ADD X0, X19, 0x8
	0x01EB5FBC LDR X3, [X8]
	0x01EB5FC0 ADD X1, X31, 0x80
	0x01EB5FC4 MOV X2, X19
	0x01EB5FC8 BL 0x1FB0BD8
	0x01EB5FCC B 0x1EB6008
	0x01EB5FD0 STR W31, [X19]
	0x01EB5FD4 LDR X8, [X31 + 0x88]
	0x01EB5FD8 STR X8, [X19 + 0x160]
	0x01EB5FDC LDR X0, [X24]
	0x01EB5FE0 LDR W8, [X0 + 0xE0]
	0x01EB5FE4 CBNZ W8, 0x1EB5FEC
	0x01EB5FE8 BL 0x1C16DFC
	0x01EB5FEC ADRP X8, 0x224A000
	0x01EB5FF0 LDR X8, [X8 + 0x270]
	0x01EB5FF4 ADD X0, X19, 0x8
	0x01EB5FF8 LDR X3, [X8]
	0x01EB5FFC ADD X1, X31, 0x88
	0x01EB6000 MOV X2, X19
	0x01EB6004 BL 0x1FB00FC
	0x01EB6008 LDR X8, [X23 + 0x28]
	0x01EB600C LDR X9, [X31 + 0x2B8]
	0x01EB6010 CMP X8, X9
	0x01EB6014 B.NE 0x1EB6050
	0x01EB6018 ADD X31, X31, 0x2C0
	0x01EB601C LDP X20, X19, [X31 + 0x50]
	0x01EB6020 LDP X22, X21, [X31 + 0x40]
	0x01EB6024 LDP X24, X23, [X31 + 0x30]
	0x01EB6028 LDP X26, X25, [X31 + 0x20]
	0x01EB602C LDP X28, X27, [X31 + 0x10]
	0x01EB6030 LDP X29, X30, [X31], #0x60
	0x01EB6034 RET
	0x01EB6038 BL 0x1C16F20
	0x01EB603C BL 0x1C16F20
	0x01EB6040 BL 0x1C16F20
	0x01EB6044 BL 0x1C16F20
	0x01EB6048 BL 0x1C16F20
	0x01EB604C BL 0x1C16F20
	0x01EB6050 BL 0x3EB1B20
	0x01EB6054 B 0x1EB60AC
	0x01EB6058 B 0x1EB60AC
	0x01EB605C B 0x1EB60AC
	0x01EB6060 B 0x1EB60AC
	0x01EB6064 B 0x1EB60AC
	0x01EB6068 B 0x1EB60AC
	0x01EB606C B 0x1EB60AC
	0x01EB6070 B 0x1EB60AC
	0x01EB6074 B 0x1EB60AC
	0x01EB6078 B 0x1EB60A0
	0x01EB607C B 0x1EB60AC
	0x01EB6080 B 0x1EB60AC
	0x01EB6084 B 0x1EB60AC
	0x01EB6088 B 0x1EB60AC
	0x01EB608C B 0x1EB60AC
	0x01EB6090 B 0x1EB60AC
	0x01EB6094 B 0x1EB60AC
	0x01EB6098 B 0x1EB60AC
	0x01EB609C B 0x1EB60AC
	0x01EB60A0 MOV X21, X1
	0x01EB60A4 MOV X22, X0
	0x01EB60A8 B 0x1EB6200
	0x01EB60AC MOV X21, X1
	0x01EB60B0 MOV X22, X0
	0x01EB60B4 CMP W21, 0x1
	0x01EB60B8 B.NE 0x1EB6200
	0x01EB60BC MOV X0, X22
	0x01EB60C0 BL 0x3EB1AD0
	0x01EB60C4 MOV X22, X0
	0x01EB60C8 ADRP X21, 0x223D000
	0x01EB60CC LDR X21, [X21 + 0x7D0]
	0x01EB60D0 MOV X0, X21
	0x01EB60D4 BL 0x1C16D08
	0x01EB60D8 LDR X8, [X22]
	0x01EB60DC LDR X1, [X8]
	0x01EB60E0 BL 0x1C17270
	0x01EB60E4 TBZ X0, 0x0, 0x1EB61AC
	0x01EB60E8 LDR X22, [X22]
	0x01EB60EC BL 0x3EB1AE0
	0x01EB60F0 CBZ X22, 0x1EB6120
	0x01EB60F4 LDR X8, [X22]
	0x01EB60F8 LDR X1, [X21]
	0x01EB60FC LDRB W10, [X8 + 0x130]
	0x01EB6100 LDRB W9, [X1 + 0x130]
	0x01EB6104 CMP W10, W9
	0x01EB6108 B.CC 0x1EB61A4
	0x01EB610C LDR X8, [X8 + 0xC8]
	0x01EB6110 ADD X8, X8, X9, 0x3, LSL
	0x01EB6114 LDUR X8, [X8 - 0x8]
	0x01EB6118 CMP X8, X1
	0x01EB611C B.NE 0x1EB61A4
	0x01EB6120 CBZ X20, 0x1EB61D0
	0x01EB6124 MOV X0, X20
	0x01EB6128 MOV X1, X22
	0x01EB612C MOV X2, X31
	0x01EB6130 BL 0x1EB1484
	0x01EB6134 CBZ X0, 0x1EB61D4
	0x01EB6138 ADRP X8, 0x2249000
	0x01EB613C LDR X8, [X8 + 0x170]
	0x01EB6140 LDR X1, [X8]
	0x01EB6144 BL 0x269F5D0
	0x01EB6148 ADRP X8, 0x2249000
	0x01EB614C LDR X8, [X8 + 0x160]
	0x01EB6150 STR X0, [X31 + 0x78]
	0x01EB6154 LDR X1, [X8]
	0x01EB6158 ADD X0, X31, 0x78
	0x01EB615C BL 0x2677430
	0x01EB6160 TBNZ X0, 0x0, 0x1EB5C8C
	0x01EB6164 MOVZ W8, 0x2
	0x01EB6168 STR W8, [X19]
	0x01EB616C LDR X8, [X31 + 0x78]
	0x01EB6170 STR X8, [X19 + 0x170]
	0x01EB6174 LDR X0, [X24]
	0x01EB6178 LDR W8, [X0 + 0xE0]
	0x01EB617C CBNZ W8, 0x1EB6184
	0x01EB6180 BL 0x1C16DFC
	0x01EB6184 ADRP X8, 0x2249000
	0x01EB6188 LDR X8, [X8 + 0x278]
	0x01EB618C ADD X0, X19, 0x8
	0x01EB6190 LDR X3, [X8]
	0x01EB6194 ADD X1, X31, 0x78
	0x01EB6198 MOV X2, X19
	0x01EB619C BL 0x1FC140C
	0x01EB61A0 B 0x1EB6008
	0x01EB61A4 MOV X0, X22
	0x01EB61A8 BL 0x1C171E0
	0x01EB61AC MOVZ W0, 0x8
	0x01EB61B0 BL 0x3EB1AF0
	0x01EB61B4 LDR X8, [X22]
	0x01EB61B8 STR X8, [X0]
	0x01EB61BC ADRP X1, 0x1FFE000
	0x01EB61C0 ADD X1, X1, 0xE58
	0x01EB61C4 MOV X2, X31
	0x01EB61C8 BL 0x3EB1B00
	0x01EB61CC B 0x1EB6298
	0x01EB61D0 BL 0x1C16F20
	0x01EB61D4 BL 0x1C16F20
	0x01EB61D8 B 0x1EB60A0
	0x01EB61DC B 0x1EB60A0
	0x01EB61E0 B 0x1EB60A0
	0x01EB61E4 B 0x1EB60A0
	0x01EB61E8 B 0x1EB60A0
	0x01EB61EC B 0x1EB60A0
	0x01EB61F0 B 0x1EB60A0
	0x01EB61F4 MOV X21, X1
	0x01EB61F8 MOV X22, X0
	0x01EB61FC BL 0x3EB1AE0
	0x01EB6200 CMP W21, 0x1
	0x01EB6204 B.NE 0x1EB62A0
	0x01EB6208 MOV X0, X22
	0x01EB620C BL 0x3EB1AD0
	0x01EB6210 MOV X20, X0
	0x01EB6214 ADRP X0, 0x223D000
	0x01EB6218 LDR X0, [X0 + 0x7D0]
	0x01EB621C BL 0x1C16D08
	0x01EB6220 LDR X8, [X20]
	0x01EB6224 LDR X1, [X8]
	0x01EB6228 BL 0x1C17270
	0x01EB622C TBZ X0, 0x0, 0x1EB6278
	0x01EB6230 LDR X20, [X20]
	0x01EB6234 BL 0x3EB1AE0
	0x01EB6238 MOVN W8, 0x1
	0x01EB623C STR W8, [X19], #0x8
	0x01EB6240 ADRP X0, 0x2248000
	0x01EB6244 LDR X0, [X0 + 0xFD0]
	0x01EB6248 BL 0x1C16D08
	0x01EB624C LDR W8, [X0 + 0xE0]
	0x01EB6250 CBNZ W8, 0x1EB6258
	0x01EB6254 BL 0x1C16DFC
	0x01EB6258 ADRP X0, 0x2249000
	0x01EB625C LDR X0, [X0 + 0x188]
	0x01EB6260 BL 0x1C16D08
	0x01EB6264 MOV X2, X0
	0x01EB6268 MOV X0, X19
	0x01EB626C MOV X1, X20
	0x01EB6270 BL 0x26324C8
	0x01EB6274 B 0x1EB6008
	0x01EB6278 MOVZ W0, 0x8
	0x01EB627C BL 0x3EB1AF0
	0x01EB6280 LDR X8, [X20]
	0x01EB6284 STR X8, [X0]
	0x01EB6288 ADRP X1, 0x1FFE000
	0x01EB628C ADD X1, X1, 0xE58
	0x01EB6290 MOV X2, X31
	0x01EB6294 BL 0x3EB1B00
	0x01EB6298 MOV X22, X0
	0x01EB629C BL 0x3EB1AE0
	0x01EB62A0 MOV X0, X22
	0x01EB62A4 BL 0x1D2C690
	0x01EB62A8 BL 0x1990590
	0x01EB62AC STR X30, [X31 - 0x30]!
	0x01EB62B0 STP X22, X21, [X31 + 0x10]
	0x01EB62B4 STP X20, X19, [X31 + 0x20]
	0x01EB62B8 ADRP X22, 0x2523000
	0x01EB62BC ADRP X21, 0x2248000
	0x01EB62C0 LDRB W8, [X22 + 0x3CA]
	0x01EB62C4 LDR X21, [X21 + 0xFD0]
	0x01EB62C8 MOV X19, X1
	0x01EB62CC MOV X20, X0
	0x01EB62D0 TBNZ X8, 0x0, 0x1EB62F4
	0x01EB62D4 ADRP X0, 0x2249000
	0x01EB62D8 LDR X0, [X0 + 0x190]
	0x01EB62DC BL 0x1C16CF4
	0x01EB62E0 ADRP X0, 0x2248000
	0x01EB62E4 LDR X0, [X0 + 0xFD0]
	0x01EB62E8 BL 0x1C16CF4
	0x01EB62EC MOVZ W8, 0x1
	0x01EB62F0 STRB W8, [X22 + 0x3CA]
	0x01EB62F4 LDR X0, [X21]
	0x01EB62F8 ADRP X21, 0x2249000
	0x01EB62FC LDR W8, [X0 + 0xE0]
	0x01EB6300 LDR X21, [X21 + 0x190]
	0x01EB6304 CBNZ W8, 0x1EB630C
	0x01EB6308 BL 0x1C16DFC
	0x01EB630C LDR X2, [X21]
	0x01EB6310 ADD X0, X20, 0x8
	0x01EB6314 MOV X1, X19
	0x01EB6318 LDP X20, X19, [X31 + 0x20]
	0x01EB631C LDP X22, X21, [X31 + 0x10]
	0x01EB6320 LDR X30, [X31], #0x30
	0x01EB6324 B 0x2632228
	0x01EB6328 RET
	0x01EB632C RET
	0x01EB6330 MOV X1, X31
	0x01EB6334 B 0x33BDD8C
	0x01EB6338 LDR X8, [X0 + 0x98]
	0x01EB633C CBZ X8, 0x1EB6354
	0x01EB6340 LDR X5, [X8 + 0x18]
	0x01EB6344 LDR X0, [X8 + 0x40]
	0x01EB6348 LDR X4, [X8 + 0x28]
	0x01EB634C AND X3, X3, 0x0
	0x01EB6350 BR X5
	0x01EB6354 RET
	0x01EB6358 LDR X8, [X0 + 0xA0]
	0x01EB635C CBZ X8, 0x1EB6374
	0x01EB6360 LDR X5, [X8 + 0x18]
	0x01EB6364 LDR X0, [X8 + 0x40]
	0x01EB6368 LDR X4, [X8 + 0x28]
	0x01EB636C AND X3, X3, 0x0
	0x01EB6370 BR X5
	0x01EB6374 RET
	0x01EB6378 LDR X8, [X0 + 0x10]
	0x01EB637C CBZ X8, 0x1EB6394
	0x01EB6380 LDR X4, [X8 + 0x18]
	0x01EB6384 LDR X0, [X8 + 0x40]
	0x01EB6388 LDR X3, [X8 + 0x28]
	0x01EB638C AND X2, X2, 0x0
	0x01EB6390 BR X4
	0x01EB6394 RET
	0x01EB6398 LDR X8, [X0 + 0x18]
	0x01EB639C CBZ X8, 0x1EB63B4
	0x01EB63A0 LDR X4, [X8 + 0x18]
	0x01EB63A4 LDR X0, [X8 + 0x40]
	0x01EB63A8 LDR X3, [X8 + 0x28]
	0x01EB63AC AND X2, X2, 0x0
	0x01EB63B0 BR X4
	0x01EB63B4 RET
	0x01EB63B8 LDR X8, [X0 + 0x20]
	0x01EB63BC CBZ X8, 0x1EB63D0
	0x01EB63C0 LDR X5, [X8 + 0x18]
	0x01EB63C4 LDR X0, [X8 + 0x40]
	0x01EB63C8 LDR X4, [X8 + 0x28]
	0x01EB63CC BR X5
	0x01EB63D0 RET
	0x01EB63D4 LDR X8, [X0 + 0x28]
	0x01EB63D8 CBZ X8, 0x1EB63F0
	0x01EB63DC LDR X6, [X8 + 0x18]
	0x01EB63E0 LDR X0, [X8 + 0x40]
	0x01EB63E4 LDR X5, [X8 + 0x28]
	0x01EB63E8 AND X2, X2, 0x0
	0x01EB63EC BR X6
	0x01EB63F0 RET
	0x01EB63F4 LDR X8, [X0 + 0x30]
	0x01EB63F8 CBZ X8, 0x1EB640C
	0x01EB63FC LDR X4, [X8 + 0x18]
	0x01EB6400 LDR X0, [X8 + 0x40]
	0x01EB6404 LDR X3, [X8 + 0x28]
	0x01EB6408 BR X4
	0x01EB640C RET
	0x01EB6410 LDR X8, [X0 + 0x38]
	0x01EB6414 CBZ X8, 0x1EB6428
	0x01EB6418 LDR X3, [X8 + 0x18]
	0x01EB641C LDR X0, [X8 + 0x40]
	0x01EB6420 LDR X2, [X8 + 0x28]
	0x01EB6424 BR X3
	0x01EB6428 RET
	0x01EB642C LDR X8, [X0 + 0x40]
	0x01EB6430 CBZ X8, 0x1EB6444
	0x01EB6434 LDR X4, [X8 + 0x18]
	0x01EB6438 LDR X0, [X8 + 0x40]
	0x01EB643C LDR X3, [X8 + 0x28]
	0x01EB6440 BR X4
	0x01EB6444 RET
	0x01EB6448 LDR X8, [X0 + 0x58]
	0x01EB644C CBZ X8, 0x1EB6460
	0x01EB6450 LDR X5, [X8 + 0x18]
	0x01EB6454 LDR X0, [X8 + 0x40]
	0x01EB6458 LDR X4, [X8 + 0x28]
	0x01EB645C BR X5
	0x01EB6460 RET
	0x01EB6464 SUB X31, X31, 0x50
	0x01EB6468 STP X30, X19, [X31 + 0x40]
	0x01EB646C MRS X19, 0xC000
	0x01EB6470 LDR X8, [X19 + 0x28]
	0x01EB6474 STR X8, [X31 + 0x38]
	0x01EB6478 LDR X8, [X0 + 0x60]
	0x01EB647C CBZ X8, 0x1EB64AC
	0x01EB6480 LDR X9, [X2 + 0x10]
	0x01EB6484 LDR V0, [X2]
	0x01EB6488 ADD X2, X31, 0x20
	0x01EB648C STR X9, [X31 + 0x10]
	0x01EB6490 STR V0, [X31]
	0x01EB6494 LDR X10, [X8 + 0x18]
	0x01EB6498 LDR X0, [X8 + 0x40]
	0x01EB649C STR V0, [X31 + 0x2]
	0x01EB64A0 STR X9, [X31 + 0x30]
	0x01EB64A4 LDR X4, [X8 + 0x28]
	0x01EB64A8 BLR X10
	0x01EB64AC LDR X8, [X19 + 0x28]
	0x01EB64B0 LDR X9, [X31 + 0x38]
	0x01EB64B4 CMP X8, X9
	0x01EB64B8 B.NE 0x1EB64C8
	0x01EB64BC LDP X30, X19, [X31 + 0x40]
	0x01EB64C0 ADD X31, X31, 0x50
	0x01EB64C4 RET
	0x01EB64C8 BL 0x3EB1B20
	0x01EB64CC LDR X8, [X0 + 0x68]
	0x01EB64D0 CBZ X8, 0x1EB64E4
	0x01EB64D4 LDR X4, [X8 + 0x18]
	0x01EB64D8 LDR X0, [X8 + 0x40]
	0x01EB64DC LDR X3, [X8 + 0x28]
	0x01EB64E0 BR X4
	0x01EB64E4 RET
	0x01EB64E8 LDR X8, [X0 + 0x70]
	0x01EB64EC CBZ X8, 0x1EB6500
	0x01EB64F0 LDR X4, [X8 + 0x18]
	0x01EB64F4 LDR X0, [X8 + 0x40]
	0x01EB64F8 LDR X3, [X8 + 0x28]
	0x01EB64FC BR X4
	0x01EB6500 RET
	0x01EB6504 LDR X8, [X0 + 0x88]
	0x01EB6508 CBZ X8, 0x1EB6520
	0x01EB650C LDR X9, [X8 + 0x18]
	0x01EB6510 LDR X0, [X8 + 0x40]
	0x01EB6514 LDR X7, [X8 + 0x28]
	0x01EB6518 AND X2, X2, 0x0
	0x01EB651C BR X9
	0x01EB6520 RET
	0x01EB6524 LDR X8, [X0 + 0x90]
	0x01EB6528 CBZ X8, 0x1EB6540
	0x01EB652C LDR X6, [X8 + 0x18]
	0x01EB6530 LDR X0, [X8 + 0x40]
	0x01EB6534 LDR X5, [X8 + 0x28]
	0x01EB6538 AND X2, X2, 0x0
	0x01EB653C BR X6
	0x01EB6540 RET
	0x01EB6544 LDR X8, [X0 + 0x48]
	0x01EB6548 CBZ X8, 0x1EB655C
	0x01EB654C LDR X3, [X8 + 0x18]
	0x01EB6550 LDR X0, [X8 + 0x40]
	0x01EB6554 LDR X2, [X8 + 0x28]
	0x01EB6558 BR X3
	0x01EB655C RET
	0x01EB6560 LDR X8, [X0 + 0x50]
	0x01EB6564 CBZ X8, 0x1EB6578
	0x01EB6568 LDR X3, [X8 + 0x18]
	0x01EB656C LDR X0, [X8 + 0x40]
	0x01EB6570 LDR X2, [X8 + 0x28]
	0x01EB6574 BR X3
	0x01EB6578 RET
	0x01EB657C LDR X8, [X0 + 0x78]
	0x01EB6580 CBZ X8, 0x1EB6594
	0x01EB6584 LDR X4, [X8 + 0x18]
	0x01EB6588 LDR X0, [X8 + 0x40]
	0x01EB658C LDR X3, [X8 + 0x28]
	0x01EB6590 BR X4
	0x01EB6594 RET
	0x01EB6598 LDR X8, [X0 + 0x80]
	0x01EB659C CBZ X8, 0x1EB65B0
	0x01EB65A0 LDR X4, [X8 + 0x18]
	0x01EB65A4 LDR X0, [X8 + 0x40]
	0x01EB65A8 LDR X3, [X8 + 0x28]
	0x01EB65AC BR X4
	0x01EB65B0 RET
	0x01EB65B4 MOV X1, X31
	0x01EB65B8 B 0x33BDD8C
	0x01EB65BC STP X30, X23, [X31 - 0x30]!
	0x01EB65C0 STP X22, X21, [X31 + 0x10]
	0x01EB65C4 STP X20, X19, [X31 + 0x20]
	0x01EB65C8 ADRP X23, 0x2523000
	0x01EB65CC LDRB W8, [X23 + 0x3CB]
	0x01EB65D0 MOV X21, X3
	0x01EB65D4 MOV X19, X2
	0x01EB65D8 MOV X20, X1
	0x01EB65DC MOV X22, X0
	0x01EB65E0 TBNZ X8, 0x0, 0x1EB65F8
	0x01EB65E4 ADRP X0, 0x2249000
	0x01EB65E8 LDR X0, [X0 + 0x288]
	0x01EB65EC BL 0x1C16CF4
	0x01EB65F0 MOVZ W8, 0x1
	0x01EB65F4 STRB W8, [X23 + 0x3CB]
	0x01EB65F8 LDR X0, [X22 + 0xB0]
	0x01EB65FC CBZ X0, 0x1EB6628
	0x01EB6600 ADRP X8, 0x2249000
	0x01EB6604 LDR X8, [X8 + 0x288]
	0x01EB6608 AND X3, X21, 0x0
	0x01EB660C MOV X1, X20
	0x01EB6610 MOV X2, X19
	0x01EB6614 LDR X4, [X8]
	0x01EB6618 LDP X20, X19, [X31 + 0x20]
	0x01EB661C LDP X22, X21, [X31 + 0x10]
	0x01EB6620 LDP X30, X23, [X31], #0x30
	0x01EB6624 B 0x272FA3C
	0x01EB6628 BL 0x1C16F20
	0x01EB662C STP X30, X23, [X31 - 0x30]!
	0x01EB6630 STP X22, X21, [X31 + 0x10]
	0x01EB6634 STP X20, X19, [X31 + 0x20]
	0x01EB6638 ADRP X23, 0x2523000
	0x01EB663C LDRB W8, [X23 + 0x3CC]
	0x01EB6640 MOV X21, X3
	0x01EB6644 MOV X19, X2
	0x01EB6648 MOV X20, X1
	0x01EB664C MOV X22, X0
	0x01EB6650 TBNZ X8, 0x0, 0x1EB6668
	0x01EB6654 ADRP X0, 0x2249000
	0x01EB6658 LDR X0, [X0 + 0x288]
	0x01EB665C BL 0x1C16CF4
	0x01EB6660 MOVZ W8, 0x1
	0x01EB6664 STRB W8, [X23 + 0x3CC]
	0x01EB6668 LDR X0, [X22 + 0xA8]
	0x01EB666C CBZ X0, 0x1EB6698
	0x01EB6670 ADRP X8, 0x2249000
	0x01EB6674 LDR X8, [X8 + 0x288]
	0x01EB6678 AND X3, X21, 0x0
	0x01EB667C MOV X1, X20
	0x01EB6680 MOV X2, X19
	0x01EB6684 LDR X4, [X8]
	0x01EB6688 LDP X20, X19, [X31 + 0x20]
	0x01EB668C LDP X22, X21, [X31 + 0x10]
	0x01EB6690 LDP X30, X23, [X31], #0x30
	0x01EB6694 B 0x272FA3C
	0x01EB6698 BL 0x1C16F20
	0x01EB669C STR X30, [X31 - 0x30]!
	0x01EB66A0 STP X22, X21, [X31 + 0x10]
	0x01EB66A4 STP X20, X19, [X31 + 0x20]
	0x01EB66A8 ADRP X22, 0x2523000
	0x01EB66AC LDRB W8, [X22 + 0x3CD]
	0x01EB66B0 MOV X20, X2
	0x01EB66B4 MOV X19, X1
	0x01EB66B8 MOV X21, X0
	0x01EB66BC TBNZ X8, 0x0, 0x1EB66D4
	0x01EB66C0 ADRP X0, 0x2249000
	0x01EB66C4 LDR X0, [X0 + 0x290]
	0x01EB66C8 BL 0x1C16CF4
	0x01EB66CC MOVZ W8, 0x1
	0x01EB66D0 STRB W8, [X22 + 0x3CD]
	0x01EB66D4 LDR X0, [X21 + 0x50]
	0x01EB66D8 CBZ X0, 0x1EB6700
	0x01EB66DC ADRP X8, 0x2249000
	0x01EB66E0 LDR X8, [X8 + 0x290]
	0x01EB66E4 AND X2, X20, 0x0
	0x01EB66E8 MOV X1, X19
	0x01EB66EC LDP X20, X19, [X31 + 0x20]
	0x01EB66F0 LDR X3, [X8]
	0x01EB66F4 LDP X22, X21, [X31 + 0x10]
	0x01EB66F8 LDR X30, [X31], #0x30
	0x01EB66FC B 0x272D778
	0x01EB6700 LDP X20, X19, [X31 + 0x20]
	0x01EB6704 LDP X22, X21, [X31 + 0x10]
	0x01EB6708 LDR X30, [X31], #0x30
	0x01EB670C RET
	0x01EB6710 STR X30, [X31 - 0x30]!
	0x01EB6714 STP X22, X21, [X31 + 0x10]
	0x01EB6718 STP X20, X19, [X31 + 0x20]
	0x01EB671C ADRP X22, 0x2523000
	0x01EB6720 LDRB W8, [X22 + 0x3CE]
	0x01EB6724 MOV X20, X2
	0x01EB6728 MOV X19, X1
	0x01EB672C MOV X21, X0
	0x01EB6730 TBNZ X8, 0x0, 0x1EB6748
	0x01EB6734 ADRP X0, 0x2249000
	0x01EB6738 LDR X0, [X0 + 0x290]
	0x01EB673C BL 0x1C16CF4
	0x01EB6740 MOVZ W8, 0x1
	0x01EB6744 STRB W8, [X22 + 0x3CE]
	0x01EB6748 LDR X0, [X21 + 0x58]
	0x01EB674C CBZ X0, 0x1EB6774
	0x01EB6750 ADRP X8, 0x2249000
	0x01EB6754 LDR X8, [X8 + 0x290]
	0x01EB6758 AND X2, X20, 0x0
	0x01EB675C MOV X1, X19
	0x01EB6760 LDP X20, X19, [X31 + 0x20]
	0x01EB6764 LDR X3, [X8]
	0x01EB6768 LDP X22, X21, [X31 + 0x10]
	0x01EB676C LDR X30, [X31], #0x30
	0x01EB6770 B 0x272D778
	0x01EB6774 LDP X20, X19, [X31 + 0x20]
	0x01EB6778 LDP X22, X21, [X31 + 0x10]
	0x01EB677C LDR X30, [X31], #0x30
	0x01EB6780 RET
	0x01EB6784 STP X30, X23, [X31 - 0x30]!
	0x01EB6788 STP X22, X21, [X31 + 0x10]
	0x01EB678C STP X20, X19, [X31 + 0x20]
	0x01EB6790 ADRP X23, 0x2523000
	0x01EB6794 LDRB W8, [X23 + 0x3CF]
	0x01EB6798 MOV X19, X3
	0x01EB679C MOV X20, X2
	0x01EB67A0 MOV X21, X1
	0x01EB67A4 MOV X22, X0
	0x01EB67A8 TBNZ X8, 0x0, 0x1EB67C0
	0x01EB67AC ADRP X0, 0x2249000
	0x01EB67B0 LDR X0, [X0 + 0x298]
	0x01EB67B4 BL 0x1C16CF4
	0x01EB67B8 MOVZ W8, 0x1
	0x01EB67BC STRB W8, [X23 + 0x3CF]
	0x01EB67C0 LDR X0, [X22 + 0x20]
	0x01EB67C4 CBZ X0, 0x1EB67F0
	0x01EB67C8 ADRP X8, 0x2249000
	0x01EB67CC LDR X8, [X8 + 0x298]
	0x01EB67D0 MOV X1, X21
	0x01EB67D4 MOV X2, X20
	0x01EB67D8 MOV X3, X19
	0x01EB67DC LDR X4, [X8]
	0x01EB67E0 LDP X20, X19, [X31 + 0x20]
	0x01EB67E4 LDP X22, X21, [X31 + 0x10]
	0x01EB67E8 LDP X30, X23, [X31], #0x30
	0x01EB67EC B 0x272CDDC
	0x01EB67F0 LDP X20, X19, [X31 + 0x20]
	0x01EB67F4 LDP X22, X21, [X31 + 0x10]
	0x01EB67F8 LDP X30, X23, [X31], #0x30
	0x01EB67FC RET
	0x01EB6800 STR X30, [X31 - 0x40]!
	0x01EB6804 STP X24, X23, [X31 + 0x10]
	0x01EB6808 STP X22, X21, [X31 + 0x20]
	0x01EB680C STP X20, X19, [X31 + 0x30]
	0x01EB6810 ADRP X24, 0x2523000
	0x01EB6814 LDRB W8, [X24 + 0x3D0]
	0x01EB6818 MOV X19, X4
	0x01EB681C MOV X20, X3
	0x01EB6820 MOV X22, X2
	0x01EB6824 MOV X21, X1
	0x01EB6828 MOV X23, X0
	0x01EB682C TBNZ X8, 0x0, 0x1EB6844
	0x01EB6830 ADRP X0, 0x2249000
	0x01EB6834 LDR X0, [X0 + 0x2A0]
	0x01EB6838 BL 0x1C16CF4
	0x01EB683C MOVZ W8, 0x1
	0x01EB6840 STRB W8, [X24 + 0x3D0]
	0x01EB6844 LDR X0, [X23 + 0x28]
	0x01EB6848 CBZ X0, 0x1EB687C
	0x01EB684C ADRP X8, 0x2249000
	0x01EB6850 LDR X8, [X8 + 0x2A0]
	0x01EB6854 AND X2, X22, 0x0
	0x01EB6858 MOV X1, X21
	0x01EB685C MOV X3, X20
	0x01EB6860 LDR X5, [X8]
	0x01EB6864 MOV X4, X19
	0x01EB6868 LDP X20, X19, [X31 + 0x30]
	0x01EB686C LDP X22, X21, [X31 + 0x20]
	0x01EB6870 LDP X24, X23, [X31 + 0x10]
	0x01EB6874 LDR X30, [X31], #0x40
	0x01EB6878 B 0x272FEDC
	0x01EB687C LDP X20, X19, [X31 + 0x30]
	0x01EB6880 LDP X22, X21, [X31 + 0x20]
	0x01EB6884 LDP X24, X23, [X31 + 0x10]
	0x01EB6888 LDR X30, [X31], #0x40
	0x01EB688C RET
	0x01EB6890 STR X30, [X31 - 0x30]!
	0x01EB6894 STP X22, X21, [X31 + 0x10]
	0x01EB6898 STP X20, X19, [X31 + 0x20]
	0x01EB689C ADRP X22, 0x2523000
	0x01EB68A0 LDRB W8, [X22 + 0x3D1]
	0x01EB68A4 MOV W19, W2
	0x01EB68A8 MOV X20, X1
	0x01EB68AC MOV X21, X0
	0x01EB68B0 TBNZ X8, 0x0, 0x1EB68C8
	0x01EB68B4 ADRP X0, 0x2249000
	0x01EB68B8 LDR X0, [X0 + 0x2A8]
	0x01EB68BC BL 0x1C16CF4
	0x01EB68C0 MOVZ W8, 0x1
	0x01EB68C4 STRB W8, [X22 + 0x3D1]
	0x01EB68C8 LDR X0, [X21 + 0x68]
	0x01EB68CC CBZ X0, 0x1EB68F4
	0x01EB68D0 ADRP X8, 0x2249000
	0x01EB68D4 LDR X8, [X8 + 0x2A8]
	0x01EB68D8 MOV X1, X20
	0x01EB68DC MOV W2, W19
	0x01EB68E0 LDP X20, X19, [X31 + 0x20]
	0x01EB68E4 LDR X3, [X8]
	0x01EB68E8 LDP X22, X21, [X31 + 0x10]
	0x01EB68EC LDR X30, [X31], #0x30
	0x01EB68F0 B 0x272C900
	0x01EB68F4 LDP X20, X19, [X31 + 0x20]
	0x01EB68F8 LDP X22, X21, [X31 + 0x10]
	0x01EB68FC LDR X30, [X31], #0x30
	0x01EB6900 RET
	0x01EB6904 STP X30, X21, [X31 - 0x20]!
	0x01EB6908 STP X20, X19, [X31 + 0x10]
	0x01EB690C ADRP X21, 0x2523000
	0x01EB6910 LDRB W8, [X21 + 0x3D2]
	0x01EB6914 MOV X19, X1
	0x01EB6918 MOV X20, X0
	0x01EB691C TBNZ X8, 0x0, 0x1EB6934
	0x01EB6920 ADRP X0, 0x2249000
	0x01EB6924 LDR X0, [X0 + 0x2B0]
	0x01EB6928 BL 0x1C16CF4
	0x01EB692C MOVZ W8, 0x1
	0x01EB6930 STRB W8, [X21 + 0x3D2]
	0x01EB6934 LDR X0, [X20 + 0x30]
	0x01EB6938 CBZ X0, 0x1EB6958
	0x01EB693C ADRP X8, 0x2249000
	0x01EB6940 LDR X8, [X8 + 0x2B0]
	0x01EB6944 MOV X1, X19
	0x01EB6948 LDP X20, X19, [X31 + 0x10]
	0x01EB694C LDR X2, [X8]
	0x01EB6950 LDP X30, X21, [X31], #0x20
	0x01EB6954 B 0x2729DBC
	0x01EB6958 LDP X20, X19, [X31 + 0x10]
	0x01EB695C LDP X30, X21, [X31], #0x20
	0x01EB6960 RET
	0x01EB6964 STR X30, [X31 - 0x30]!
	0x01EB6968 STP X22, X21, [X31 + 0x10]
	0x01EB696C STP X20, X19, [X31 + 0x20]
	0x01EB6970 ADRP X22, 0x2523000
	0x01EB6974 LDRB W8, [X22 + 0x3D3]
	0x01EB6978 MOV W19, W2
	0x01EB697C MOV X20, X1
	0x01EB6980 MOV X21, X0
	0x01EB6984 TBNZ X8, 0x0, 0x1EB699C
	0x01EB6988 ADRP X0, 0x2249000
	0x01EB698C LDR X0, [X0 + 0x2B8]
	0x01EB6990 BL 0x1C16CF4
	0x01EB6994 MOVZ W8, 0x1
	0x01EB6998 STRB W8, [X22 + 0x3D3]
	0x01EB699C LDR X0, [X21 + 0x38]
	0x01EB69A0 CBZ X0, 0x1EB69C8
	0x01EB69A4 ADRP X8, 0x2249000
	0x01EB69A8 LDR X8, [X8 + 0x2B8]
	0x01EB69AC MOV X1, X20
	0x01EB69B0 MOV W2, W19
	0x01EB69B4 LDP X20, X19, [X31 + 0x20]
	0x01EB69B8 LDR X3, [X8]
	0x01EB69BC LDP X22, X21, [X31 + 0x10]
	0x01EB69C0 LDR X30, [X31], #0x30
	0x01EB69C4 B 0x272C424
	0x01EB69C8 LDP X20, X19, [X31 + 0x20]
	0x01EB69CC LDP X22, X21, [X31 + 0x10]
	0x01EB69D0 LDR X30, [X31], #0x30
	0x01EB69D4 RET
	0x01EB69D8 STP X30, X23, [X31 - 0x30]!
	0x01EB69DC STP X22, X21, [X31 + 0x10]
	0x01EB69E0 STP X20, X19, [X31 + 0x20]
	0x01EB69E4 ADRP X23, 0x2523000
	0x01EB69E8 LDRB W8, [X23 + 0x3D4]
	0x01EB69EC MOV X19, X3
	0x01EB69F0 MOV X20, X2
	0x01EB69F4 MOV X21, X1
	0x01EB69F8 MOV X22, X0
	0x01EB69FC TBNZ X8, 0x0, 0x1EB6A14
	0x01EB6A00 ADRP X0, 0x2249000
	0x01EB6A04 LDR X0, [X0 + 0x2C0]
	0x01EB6A08 BL 0x1C16CF4
	0x01EB6A0C MOVZ W8, 0x1
	0x01EB6A10 STRB W8, [X23 + 0x3D4]
	0x01EB6A14 LDR X0, [X22 + 0x40]
	0x01EB6A18 CBZ X0, 0x1EB6A44
	0x01EB6A1C ADRP X8, 0x2249000
	0x01EB6A20 LDR X8, [X8 + 0x2C0]
	0x01EB6A24 MOV X1, X21
	0x01EB6A28 MOV X2, X20
	0x01EB6A2C MOV X3, X19
	0x01EB6A30 LDR X4, [X8]
	0x01EB6A34 LDP X20, X19, [X31 + 0x20]
	0x01EB6A38 LDP X22, X21, [X31 + 0x10]
	0x01EB6A3C LDP X30, X23, [X31], #0x30
	0x01EB6A40 B 0x272F5C8
	0x01EB6A44 LDP X20, X19, [X31 + 0x20]
	0x01EB6A48 LDP X22, X21, [X31 + 0x10]
	0x01EB6A4C LDP X30, X23, [X31], #0x30
	0x01EB6A50 RET
	0x01EB6A54 SUB X31, X31, 0x80
	0x01EB6A58 STR X30, [X31 + 0x40]
	0x01EB6A5C STP X24, X23, [X31 + 0x50]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 1232
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X26+40]
	016 Move X20, 0x2525000
	017 Move X19, X0
	018 Move [X31+1224], X8
	019 Move W8, [X20+967]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {119}
	024 Move X0, 0x224B000
	025 Move X0, [X0+456]
	026 Call 0x1C17CF4
	027 Move X0, 0x224B000
	028 Move X0, [X0+464]
	029 Call 0x1C17CF4
	030 Move X0, 0x224B000
	031 Move X0, [X0+472]
	032 Call 0x1C17CF4
	033 Move X0, 0x224B000
	034 Move X0, [X0+480]
	035 Call 0x1C17CF4
	036 Move X0, 0x224B000
	037 Move X0, [X0+488]
	038 Call 0x1C17CF4
	039 Move X0, 0x224B000
	040 Move X0, [X0+496]
	041 Call 0x1C17CF4
	042 Move X0, 0x224B000
	043 Move X0, [X0+504]
	044 Call 0x1C17CF4
	045 Move X0, 0x224B000
	046 Move X0, [X0+328]
	047 Call 0x1C17CF4
	048 Move X0, 0x224A000
	049 Move X0, [X0+4048]
	050 Call 0x1C17CF4
	051 Move X0, 0x2247000
	052 Move X0, [X0+2008]
	053 Call 0x1C17CF4
	054 Move X0, 0x2247000
	055 Move X0, [X0+3432]
	056 Call 0x1C17CF4
	057 Move X0, 0x223F000
	058 Move X0, [X0+2000]
	059 Call 0x1C17CF4
	060 Move X0, 0x2249000
	061 Move X0, [X0+120]
	062 Call 0x1C17CF4
	063 Move X0, 0x2249000
	064 Move X0, [X0+72]
	065 Call 0x1C17CF4
	066 Move X0, 0x224B000
	067 Move X0, [X0+512]
	068 Call 0x1C17CF4
	069 Move X0, 0x224B000
	070 Move X0, [X0+520]
	071 Call 0x1C17CF4
	072 Move X0, 0x224B000
	073 Move X0, [X0+528]
	074 Call 0x1C17CF4
	075 Move X0, 0x224A000
	076 Move X0, [X0+2456]
	077 Call 0x1C17CF4
	078 Move X0, 0x224B000
	079 Move X0, [X0+536]
	080 Call 0x1C17CF4
	081 Move X0, 0x224A000
	082 Move X0, [X0+4080]
	083 Call 0x1C17CF4
	084 Move X0, 0x224B000
	085 Move X0, [X0+544]
	086 Call 0x1C17CF4
	087 Move X0, 0x224B000
	088 Move X0, [X0+336]
	089 Call 0x1C17CF4
	090 Move X0, 0x224B000
	091 Move X0, [X0+344]
	092 Call 0x1C17CF4
	093 Move X0, 0x224B000
	094 Move X0, [X0+352]
	095 Call 0x1C17CF4
	096 Move X0, 0x224B000
	097 Move X0, [X0+360]
	098 Call 0x1C17CF4
	099 Move X0, 0x224B000
	100 Move X0, [X0+552]
	101 Call 0x1C17CF4
	102 Move X0, 0x224B000
	103 Move X0, [X0+560]
	104 Call 0x1C17CF4
	105 Move X0, 0x224B000
	106 Move X0, [X0+368]
	107 Call 0x1C17CF4
	108 Move X0, 0x224B000
	109 Move X0, [X0+376]
	110 Call 0x1C17CF4
	111 Move X0, 0x224A000
	112 Move X0, [X0+360]
	113 Call 0x1C17CF4
	114 Move X0, 0x224B000
	115 Move X0, [X0+568]
	116 Call 0x1C17CF4
	117 Move W8, 1
	118 Move [X20+967], W8
	119 Add X0, X31, 912
	120 Move W2, 248
	121 Move W1, W31
	122 Add X28, X31, 912
	123 Move [X31+1192], X31
	124 Move [X31+1184], X31
	125 Move [X31+1176], X31
	126 Move [X31+1168], X31
	127 Move [X31+24], X31
	128 Move [X31+32], X31
	129 Call 0x3EB2B10
	130 Move [X31+8], X31
	131 Move [X31+16], X31
	132 Move W27, [X19]
	133 Move X20, [X19+32]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X8, 0x224B000
	136 Move X8, [X8+472]
	137 Move X22, [X19+336]
	138 Move X0, [X8]
	139 Call 0x1C17F10
	140 Move X8, 0x224B000
	141 Move X9, 0x224B000
	142 Move X8, [X8+568]
	143 Move X9, [X9+456]
	144 Move X21, X0
	145 Move X2, [X8]
	146 Move X3, [X9]
	147 Move W8, 0x42F00000
	148 Move S0, W8
	149 Move X1, X22
	150 Call 0x24DAC78, X0, X1, V0, X2
	151 Compare X20, 0
	152 JumpIfEqual {854}
	153 Move [X20+424], X21
	154 Move X8, [X19+160]
	155 Move [X19+352], X31
	156 Compare X8, 0
	157 JumpIfEqual {855}
	158 Move X8, [X8+64]
	159 Compare X8, 0
	160 JumpIfEqual {856}
	161 Move W9, 1
	162 Move [X8+56], W9
	163 Move W8, [X19+40]
	164 Subtract W8, W8, 2
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move X9, -20475904
	167 Add X9, X9, 3117
	168 NotImplemented "Instruction ADR not yet implemented."
	169 Move W11, [X9]
	170 Add X10, X10, X11
	171 CallNoReturn X10
	172 Move X8, 0x224B000
	173 Move X8, [X8+520]
	174 Move [X31+288], X31
	175 Move X2, [X8]
	176 Add X0, X31, 288
	177 Move W1, 4
	178 Call Nullable`1<Int32Enum>..ctor, X0, X1
	179 Move X9, [X31+288]
	180 Move X8, [X19+160]
	181 Move [X19+352], X9
	182 Compare X8, 0
	183 JumpIfEqual {941}
	184 Move X8, [X8+64]
	185 Compare X8, 0
	186 JumpIfEqual {942}
	187 Move W9, 2
	188 Move [X8+56], W9
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move X9, -20475904
	191 Move W8, W27
	192 Add X9, X9, 3112
	193 NotImplemented "Instruction ADR not yet implemented."
	194 Move W11, [X9]
	195 Add X10, X10, X11
	196 CallNoReturn X10
	197 Move X8, [X19+376]
	198 Move TEMP, 0
	199 Not TEMP
	200 Move W27, TEMP
	201 Move [X31+32], X8
	202 Move [X19+376], X31
	203 Move [X19], W27
	204 Move X8, 0x224B000
	205 Move X8, [X8+520]
	206 Move [X31+288], X31
	207 Move X2, [X8]
	208 Add X0, X31, 288
	209 Move W1, 4
	210 Call Nullable`1<Int32Enum>..ctor, X0, X1
	211 Move X8, 0x224B000
	212 Move X8, [X8+520]
	213 Move [X31+288], X31
	214 Move X2, [X8]
	215 Add X0, X31, 288
	216 Move W1, 1
	217 Call Nullable`1<Int32Enum>..ctor, X0, X1
	218 Move X8, 0x224B000
	219 Move X8, [X8+520]
	220 Move [X31+288], X31
	221 Move X2, [X8]
	222 Add X0, X31, 288
	223 Move W1, 2
	224 Call Nullable`1<Int32Enum>..ctor, X0, X1
	225 Move X8, [X31+288]
	226 Move [X19+352], X8
	227 Move [X19+368], W31
	228 Move X22, 0x2247000
	229 Move X22, [X22+2008]
	230 Move X21, [X19+336]
	231 Move X0, [X22]
	232 Move W8, [X0+224]
	233 Compare W8, 0
	234 JumpIfNotEqual {236}
	235 Call 0x1C17DFC
	236 Move X0, X21
	237 Move X1, X31
	238 Move X2, X31
	239 Call CancellationToken.op_Inequality, X0, X1
	240 Move TEMP, X0
	241 And TEMP, TEMP, 1
	242 Compare TEMP, 1
	243 JumpIfNotEqual {252}
	244 Move X0, [X22]
	245 Move W8, [X0+224]
	246 Compare W8, 0
	247 JumpIfNotEqual {249}
	248 Call 0x1C17DFC
	249 Add X0, X19, 336
	250 Move X1, X31
	251 Call CancellationToken.ThrowIfCancellationRequested, X0
	252 Move X0, [X19+264]
	253 Compare X0, 0
	254 JumpIfEqual {264}
	255 Move X8, 0x2247000
	256 Move X8, [X8+3432]
	257 Move X1, [X8]
	258 Call Dictionary`2<Object, Object>.get_Count, X0
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Move X0, [X19+264]
	261 Move X1, X31
	262 Call RealtimeExtensions_DictionaryProperties.CalculateTotalSize, X0
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Move W8, [X19+40]
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Move X8, [X19+160]
	267 Compare X8, 0
	268 JumpIfEqual {906}
	269 Move X8, [X8+64]
	270 Compare X8, 0
	271 JumpIfEqual {907}
	272 Move X23, 0x224A000
	273 NotImplemented "Instruction LDUR not yet implemented."
	274 Move X23, [X23+360]
	275 Move [X28+17], V0
	276 Move X0, [X23]
	277 Move W8, [X0+224]
	278 Compare W8, 0
	279 JumpIfNotEqual {281}
	280 Call 0x1C17DFC
	281 Move X0, X31
	282 Call TickRate.get_Shared
	283 Move X24, 0x224B000
	284 Move V0, [X28+17]
	285 Move X24, [X24+536]
	286 Move X21, X0
	287 Move X22, X1
	288 Move [X28+18], V0
	289 Move X0, [X24]
	290 Add X1, X31, 1200
	291 Call 0x1C17E04
	292 Move X1, X0
	293 Move X8, [X24]
	294 Move TEMP, 0
	295 Not TEMP
	296 Move X9, TEMP
	297 Move [X31+304], X21
	298 Move [X31+312], X22
	299 Move [X31+288], X8
	300 Move [X31+296], X9
	301 Add X0, X31, 288
	302 Move X2, X31
	303 Call ValueType.Equals, X0, X1
	304 Move TEMP, X0
	305 And TEMP, TEMP, 1
	306 Compare TEMP, 1
	307 JumpIfEqual {322}
	308 Move X0, [X23]
	309 Move W8, [X0+224]
	310 Compare W8, 0
	311 JumpIfNotEqual {313}
	312 Call 0x1C17DFC
	313 Move X0, X21
	314 Move X1, X22
	315 Move X2, X31
	316 Call TickRate.Resolve, X0
	317 Move [X31+1168], X0
	318 Move [X31+1176], X1
	319 Add X0, X31, 1168
	320 Move X1, X31
	321 Call Resolved.ToString, X0
	322 Move X8, 0x2249000
	323 Move X9, [X19+320]
	324 Move X8, [X8+72]
	325 Compare X9, 0
	326 JumpIfEqual {328}
	327 Move X21, [X9+24]
	328 Move X21, X31
	329 Move X23, [X19+296]
	330 Move X24, [X19+304]
	331 NotImplemented "Instruction LDRH not yet implemented."
	332 Move X25, [X19+336]
	333 Move X2, [X8]
	334 Add X0, X19, 344
	335 Move W1, 1
	336 Call Nullable`1<Boolean>.GetValueOrDefault, X0, X1
	337 Compare X20, 0
	338 JumpIfEqual {852}
	339 And W6, W0, 1
	340 Move X0, X20
	341 Move X1, X23
	342 Move X2, X24
	343 Move X3, X21
	344 Move X4, X25
	345 Move X5, X22
	346 Move X7, X31
	347 Call NetworkRunner.ConnectToCloud, X0, X1, X2, X3, X4, X5, X6
	348 Compare X0, 0
	349 JumpIfEqual {853}
	350 Move X1, X31
	351 Call Task.GetAwaiter, X0
	352 Move [X31+32], X0
	353 Add X0, X31, 32
	354 Move X1, X31
	355 Call TaskAwaiter.get_IsCompleted, X0
	356 Move TEMP, X0
	357 And TEMP, TEMP, 1
	358 Compare TEMP, 1
	359 JumpIfNotEqual {416}
	360 Add X0, X31, 32
	361 Move X1, X31
	362 Call TaskAwaiter.GetResult, X0
	363 Compare X20, 0
	364 JumpIfEqual {857}
	365 Move X21, [X20+432]
	366 Compare X21, 0
	367 JumpIfEqual {858}
	368 Move W8, [X19+240]
	369 Add X1, X19, 40
	370 Add X0, X31, 600
	371 Move W2, 312
	372 Xor W8, W8, 1
	373 Move [X21+18], W8
	374 Move X8, [X19+288]
	375 Move [X21+24], X8
	376 Call 0x3EB2AC0
	377 Move X2, [X19+336]
	378 Add X1, X31, 600
	379 Move X0, X21
	380 Move X3, X31
	381 Call CloudServices.EnterRoom, X0, X1, X2
	382 Compare X0, 0
	383 JumpIfEqual {859}
	384 Move X8, 0x224B000
	385 Move X8, [X8+376]
	386 Move X1, [X8]
	387 Call Task`1<Int16>.GetAwaiter, X0
	388 Move X8, 0x224B000
	389 Move X8, [X8+360]
	390 Move [X31+24], X0
	391 Move X1, [X8]
	392 Add X0, X31, 24
	393 Call TaskAwaiter`1<Int16>.get_IsCompleted, X0
	394 Move TEMP, X0
	395 And TEMP, TEMP, 1
	396 Compare TEMP, 1
	397 JumpIfEqual {461}
	398 Move W8, 1
	399 Move [X19], W8
	400 Move X8, [X31+24]
	401 Move [X19+384], X8
	402 Move X8, 0x224A000
	403 Move X8, [X8+4048]
	404 Move X0, [X8]
	405 Move W8, [X0+224]
	406 Compare W8, 0
	407 JumpIfNotEqual {409}
	408 Call 0x1C17DFC
	409 Move X8, 0x224B000
	410 Move X8, [X8+480]
	411 Add X0, X19, 8
	412 Move X3, [X8]
	413 Add X1, X31, 24
	414 Move X2, X19
	415 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	416 Move [X19], W31
	417 Move X8, [X31+32]
	418 Move [X19+376], X8
	419 Move X8, 0x224A000
	420 Move X8, [X8+4048]
	421 Move X0, [X8]
	422 Move W8, [X0+224]
	423 Compare W8, 0
	424 JumpIfNotEqual {426}
	425 Call 0x1C17DFC
	426 Move X8, 0x224B000
	427 Move X8, [X8+504]
	428 Add X0, X19, 8
	429 Move X3, [X8]
	430 Add X1, X31, 32
	431 Move X2, X19
	432 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	433 Move X8, [X19+400]
	434 Move TEMP, 0
	435 Not TEMP
	436 Move W27, TEMP
	437 Move [X31+8], X8
	438 Move [X19+400], X31
	439 Move [X19], W27
	440 Move X8, [X19+376]
	441 Move TEMP, 0
	442 Not TEMP
	443 Move W27, TEMP
	444 Move [X31+32], X8
	445 Move [X19+376], X31
	446 Move [X19], W27
	447 Move X8, [X19+392]
	448 Move TEMP, 0
	449 Not TEMP
	450 Move W27, TEMP
	451 Move [X31+16], X8
	452 Move [X19+392], X31
	453 Move [X19], W27
	454 Move X8, [X19+384]
	455 Move TEMP, 0
	456 Not TEMP
	457 Move W27, TEMP
	458 Move [X31+24], X8
	459 Move [X19+384], X31
	460 Move [X19], W27
	461 Move X8, 0x224B000
	462 Move X8, [X8+344]
	463 Move X1, [X8]
	464 Add X0, X31, 24
	465 Call TaskAwaiter`1<Int16>.GetResult, X0
	466 Compare X20, 0
	467 JumpIfEqual {908}
	468 Move X0, [X20+432]
	469 Compare X0, 0
	470 JumpIfEqual {909}
	471 Move X1, X31
	472 Call CloudServices.OnRoomChanged, X0
	473 Move W8, [X20+392]
	474 NotImplemented "Instruction CMP not yet implemented."
	475 Move W8, [X19+352]
	476 Compare W8, 0
	477 JumpIfNotEqual {500}
	478 Move X0, [X20+432]
	479 Compare X0, 0
	480 JumpIfEqual {981}
	481 Move X1, X31
	482 Call CloudServices.get_IsMasterClient, X0
	483 Move X8, 0x224A000
	484 Move X8, [X8+520]
	485 Move TEMP, X0
	486 And TEMP, TEMP, 1
	487 Compare TEMP, 1
	488 JumpIfNotEqual {843}
	489 Move X2, [X8]
	490 Move [X31+288], X31
	491 Add X0, X31, 288
	492 Move W1, 2
	493 Call Nullable`1<Int32Enum>..ctor, X0, X1
	494 Move X8, [X31+288]
	495 Move W9, 4
	496 Move [X19+352], X8
	497 Move [X20+392], W9
	498 Move W8, [X19+352]
	499 And W31, W8, 255
	500 Move X21, [X20+432]
	501 Add X8, X31, 912
	502 Add X0, X8, 56
	503 Move W2, 192
	504 Move W1, W31
	505 Add X22, X31, 288
	506 Call 0x3EB2B10
	507 Move X8, [X19+352]
	508 Move X9, 0x2248000
	509 Move X9, [X9+120]
	510 Move [X31+1040], X8
	511 Move V2, [X19+192]
	512 Move V0, [X19+208]
	513 Move X8, [X19+224]
	514 Move V1, [X19+11]
	515 Move X0, [X9]
	516 Move [X22+640], V2
	517 Move [X22+648], V0
	518 Move [X31+960], X8
	519 Move [X22+39], V1
	520 Move W8, [X0+224]
	521 Compare W8, 0
	522 JumpIfNotEqual {524}
	523 Call 0x1C17DFC
	524 Add X8, X31, 288
	525 Move W0, W31
	526 Move X1, X31
	527 Call NetAddress.Any, X0
	528 Move X9, 0x224A000
	529 Move V0, [X22]
	530 Move X8, [X31+304]
	531 Move X9, [X9+512]
	532 Add X0, X19, 64
	533 Move [X22+18], V0
	534 Move [X31+592], X8
	535 Move X2, [X9]
	536 Move [X22], V0
	537 Move [X31+304], X8
	538 Add X8, X31, 1200
	539 Add X1, X31, 288
	540 Call Nullable`1<NetAddress>.GetValueOrDefault, X0, X1
	541 Move X9, 0x224A000
	542 Move V0, [X28+18]
	543 Move X8, [X31+1216]
	544 Move X9, [X9+528]
	545 NotImplemented "Instruction MOVI not yet implemented."
	546 Move [X22], V1
	547 Move [X22+8], V1
	548 Move [X22+16], V0
	549 Move X2, [X9]
	550 Move [X31+560], X8
	551 Move [X28+18], V0
	552 Move [X31+1216], X8
	553 Add X0, X31, 288
	554 Add X1, X31, 1200
	555 Call Nullable`1<NetAddress>..ctor, X0, X1
	556 Move V0, [X22]
	557 Move V1, [X22+16]
	558 Move [X28+56], V0
	559 Move [X28+72], V1
	560 Move V0, [X19+96]
	561 Move V1, [X19+112]
	562 Move [X28+88], V0
	563 Move [X28+104], V1
	564 Move X8, [X19+160]
	565 Move [X31+1064], X8
	566 Move X8, [X19+168]
	567 Move [X31+1032], X8
	568 Move X8, [X19+232]
	569 Move [X31+1072], X8
	570 Move V0, [X19+8]
	571 Move [X28+168], V0
	572 Move X8, [X19+144]
	573 Move [X31+1096], X8
	574 Move X8, [X19+248]
	575 Move [X31+1112], X8
	576 Move X8, [X19+256]
	577 Move [X31+1120], X8
	578 Move X0, [X19+320]
	579 Compare X0, 0
	580 JumpIfEqual {598}
	581 Move X1, X31
	582 Call HostMigrationToken.get_ResumeState, X0
	583 Move X8, X0
	584 Move X0, [X19+320]
	585 Move [X31+1144], X8
	586 Compare X0, 0
	587 JumpIfEqual {599}
	588 Move X1, X31
	589 Call HostMigrationToken.get_ResumeTick, X0
	590 Move X8, X0
	591 Move X0, [X19+320]
	592 Move [X31+1136], X8
	593 Compare X0, 0
	594 JumpIfEqual {842}
	595 Move X1, X31
	596 Call HostMigrationToken.get_ResumeId, X0
	597 Move X8, X0
	598 Move [X31+1144], X31
	599 Move X8, X31
	600 Move [X31+1136], X31
	601 Move [X31+1128], X8
	602 Move X8, [X19+328]
	603 Add X0, X31, 288
	604 Add X1, X31, 912
	605 Move W2, 248
	606 Move [X31+1152], X8
	607 Call 0x3EB2AC0
	608 Compare X21, 0
	609 JumpIfEqual {910}
	610 Add X0, X31, 40
	611 Add X1, X31, 288
	612 Move W2, 248
	613 Call 0x3EB2AC0
	614 Add X1, X31, 40
	615 Move X0, X21
	616 Move X2, X31
	617 Call CloudServices.UpdateInitializeArgs, X0, X1
	618 Move X0, [X20+432]
	619 Compare X0, 0
	620 JumpIfEqual {911}
	621 Move X1, [X19+336]
	622 Move X2, X31
	623 Call CloudServices.Join, X0, X1
	624 Compare X0, 0
	625 JumpIfEqual {912}
	626 Move X1, X31
	627 Call Task.GetAwaiter, X0
	628 Move [X31+32], X0
	629 Add X0, X31, 32
	630 Move X1, X31
	631 Call TaskAwaiter.get_IsCompleted, X0
	632 Move TEMP, X0
	633 And TEMP, TEMP, 1
	634 Compare TEMP, 1
	635 JumpIfNotEqual {728}
	636 Add X0, X31, 32
	637 Move X1, X31
	638 Call TaskAwaiter.GetResult, X0
	639 Compare X20, 0
	640 JumpIfEqual {915}
	641 Move X0, [X20+424]
	642 Compare X0, 0
	643 JumpIfEqual {916}
	644 Move X8, 0x224A000
	645 Move X8, [X8+464]
	646 Move X1, [X8]
	647 Call 0x24DAC5C, X0
	648 Compare X0, 0
	649 JumpIfEqual {917}
	650 Move X8, 0x224A000
	651 Move X8, [X8+560]
	652 Move X1, [X8]
	653 Call Task`1<Int32Enum>.GetAwaiter, X0
	654 Move X8, 0x224A000
	655 Move X8, [X8+552]
	656 Move [X31+16], X0
	657 Move X1, [X8]
	658 Add X0, X31, 16
	659 Call TaskAwaiter`1<Int32Enum>.get_IsCompleted, X0
	660 Move TEMP, X0
	661 And TEMP, TEMP, 1
	662 Compare TEMP, 1
	663 JumpIfNotEqual {746}
	664 Move X8, 0x224A000
	665 Move X8, [X8+544]
	666 Add X0, X31, 16
	667 Move X1, [X8]
	668 Call TaskAwaiter`1<Int32Enum>.GetResult, X0
	669 Move X1, [X19+264]
	670 Compare X1, 0
	671 JumpIfEqual {679}
	672 Compare X20, 0
	673 JumpIfEqual {939}
	674 Move X0, [X20+400]
	675 Compare X0, 0
	676 JumpIfEqual {940}
	677 Move X2, X31
	678 Call SessionInfo.UpdateCustomProperties, X0, X1
	679 Move W8, [X19+368]
	680 NotImplemented "Instruction CMP not yet implemented."
	681 Move X1, [X19+360]
	682 Compare X1, 0
	683 JumpIfEqual {695}
	684 Move X8, 0x223E000
	685 Move X8, [X8+2000]
	686 Move X9, [X1]
	687 Move X8, [X8]
	688 Move W11, [X9+304]
	689 Move W10, [X8+304]
	690 NotImplemented "Instruction CMP not yet implemented."
	691 Move X9, [X9+200]
	692 Add X9, X9, X10
	693 NotImplemented "Instruction LDUR not yet implemented."
	694 NotImplemented "Instruction CMP not yet implemented."
	695 Compare X20, 0
	696 JumpIfEqual {978}
	697 Move X0, X20
	698 Move X2, X31
	699 Call NetworkRunner.ShutdownAndBuildResult, X0, X1
	700 Compare X0, 0
	701 JumpIfEqual {979}
	702 Move X8, 0x224A000
	703 Move X8, [X8+368]
	704 Move X1, [X8]
	705 Call Task`1<Object>.GetAwaiter, X0
	706 Move X8, 0x224A000
	707 Move X8, [X8+352]
	708 Move [X31+8], X0
	709 Move X1, [X8]
	710 Add X0, X31, 8
	711 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	712 Move TEMP, X0
	713 And TEMP, TEMP, 1
	714 Compare TEMP, 1
	715 JumpIfNotEqual {807}
	716 Move X8, 0x224A000
	717 Move X8, [X8+336]
	718 Add X0, X31, 8
	719 Move X1, [X8]
	720 Call TaskAwaiter`1<Object>.GetResult, X0
	721 Move X21, X0
	722 Move X22, X31
	723 Move W8, 49
	724 Move TEMP, X27
	725 And TEMP, TEMP, -2147483648
	726 Compare TEMP, -2147483648
	727 JumpIfNotEqual {775}
	728 Move W8, 2
	729 Move [X19], W8
	730 Move X8, [X31+32]
	731 Move [X19+376], X8
	732 Move X8, 0x2249000
	733 Move X8, [X8+4048]
	734 Move X0, [X8]
	735 Move W8, [X0+224]
	736 Compare W8, 0
	737 JumpIfNotEqual {739}
	738 Call 0x1C17DFC
	739 Move X8, 0x224A000
	740 Move X8, [X8+504]
	741 Add X0, X19, 8
	742 Move X3, [X8]
	743 Add X1, X31, 32
	744 Move X2, X19
	745 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	746 Move W8, 3
	747 Move [X19], W8
	748 Move X8, [X31+16]
	749 Move [X19+392], X8
	750 Move X8, 0x2249000
	751 Move X8, [X8+4048]
	752 Move X0, [X8]
	753 Move W8, [X0+224]
	754 Compare W8, 0
	755 JumpIfNotEqual {757}
	756 Call 0x1C17DFC
	757 Move X8, 0x224A000
	758 Move X8, [X8+496]
	759 Add X0, X19, 8
	760 Move X3, [X8]
	761 Add X1, X31, 16
	762 Move X2, X19
	763 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	764 Move X22, X31
	765 Move X21, X31
	766 Move [X19+360], X31
	767 Move W8, 50
	768 Move TEMP, X27
	769 And TEMP, TEMP, -2147483648
	770 Compare TEMP, -2147483648
	771 JumpIfNotEqual {775}
	772 Compare X20, 0
	773 JumpIfEqual {980}
	774 Move [X20+424], X31
	775 Compare X22, 0
	776 JumpIfNotEqual {913}
	777 NotImplemented "Instruction CMP not yet implemented."
	778 NotImplemented "Instruction CMP not yet implemented."
	779 Compare W8, 0
	780 JumpIfNotEqual {825}
	781 Move X8, 0x2249000
	782 Move X8, [X8+4080]
	783 Move X0, [X8]
	784 Call 0x1C17F10
	785 Move X21, X0
	786 Move W1, W31
	787 Move X2, X31
	788 Move X3, X31
	789 Call StartGameResult..ctor, X0, X1, X2, X3
	790 Move TEMP, 1
	791 Not TEMP
	792 Move W8, TEMP
	793 Move [X19+8], W8
	794 Move X8, 0x2249000
	795 Move X8, [X8+4048]
	796 Move X0, [X8]
	797 Move W8, [X0+224]
	798 Compare W8, 0
	799 JumpIfNotEqual {801}
	800 Call 0x1C17DFC
	801 Move X8, 0x224A000
	802 Move X8, [X8+328]
	803 Move X0, X19
	804 Move X1, X21
	805 Move X2, [X8]
	806 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	807 Move W8, 4
	808 Move [X19], W8
	809 Move X8, [X31+8]
	810 Move [X19+400], X8
	811 Move X8, 0x2249000
	812 Move X8, [X8+4048]
	813 Move X0, [X8]
	814 Move W8, [X0+224]
	815 Compare W8, 0
	816 JumpIfNotEqual {818}
	817 Call 0x1C17DFC
	818 Move X8, 0x224A000
	819 Move X8, [X8+488]
	820 Add X0, X19, 8
	821 Move X3, [X8]
	822 Add X1, X31, 8
	823 Move X2, X19
	824 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	825 Move X8, [X26+40]
	826 Move X9, [X31+1224]
	827 NotImplemented "Instruction CMP not yet implemented."
	828 Add X31, X31, 1232
	829 Move X20, [X31+80]
	830 Move X19, [X31+88]
	831 Move X22, [X31+64]
	832 Move X21, [X31+72]
	833 Move X24, [X31+48]
	834 Move X23, [X31+56]
	835 Move X26, [X31+32]
	836 Move X25, [X31+40]
	837 Move X28, [X31+16]
	838 Move X27, [X31+24]
	839 Move X29, [X31+96]
	840 Move X30, [X31+104]
	841 Return 
	842 Move X8, X31
	843 Move X2, [X8]
	844 Move [X31+288], X31
	845 Add X0, X31, 288
	846 Move W1, 4
	847 Call Nullable`1<Int32Enum>..ctor, X0, X1
	848 Move X8, [X31+288]
	849 Move W9, 5
	850 Move [X19+352], X8
	851 Move [X20+392], W9
	852 Call 0x1C17F20
	853 Call 0x1C17F20
	854 Call 0x1C17F20
	855 Call 0x1C17F20
	856 Call 0x1C17F20
	857 Call 0x1C17F20
	858 Call 0x1C17F20
	859 Call 0x1C17F20
	860 Move X0, 0x2247000
	861 Move X0, [X0+3696]
	862 Call 0x1C17D08
	863 Call 0x1C17F10
	864 Move X21, X0
	865 Move X0, 0x224A000
	866 Move X0, [X0+576]
	867 Call 0x1C17D08
	868 Move X2, X0
	869 Move W1, 16
	870 Move X0, X21
	871 Call StartGameException..ctor, X0, X1, X2
	872 Move X0, 0x224A000
	873 Move X0, [X0+584]
	874 Call 0x1C17D08
	875 Move X1, X0
	876 Move X0, X21
	877 Call 0x1C17DEC
	878 Move [X31+288], W0
	879 Move X0, 0x223E000
	880 Move X0, [X0+1880]
	881 Call 0x1C17D08
	882 Add X1, X31, 288
	883 Call 0x1C17E04
	884 Move X21, X0
	885 Move X0, 0x224A000
	886 Move X0, [X0+592]
	887 Call 0x1C17D08
	888 Move X1, X21
	889 Move X2, X31
	890 Call String.Format, X0, X1
	891 Move X21, X0
	892 Move X0, 0x2247000
	893 Move X0, [X0+3696]
	894 Call 0x1C17D08
	895 Call 0x1C17F10
	896 Move X22, X0
	897 Move W1, 16
	898 Move X2, X21
	899 Call StartGameException..ctor, X0, X1, X2
	900 Move X0, 0x224A000
	901 Move X0, [X0+584]
	902 Call 0x1C17D08
	903 Move X1, X0
	904 Move X0, X22
	905 Call 0x1C17DEC
	906 Call 0x1C17F20
	907 Call 0x1C17F20
	908 Call 0x1C17F20
	909 Call 0x1C17F20
	910 Call 0x1C17F20
	911 Call 0x1C17F20
	912 Call 0x1C17F20
	913 Move X0, X22
	914 Call 0x1C17F18
	915 Call 0x1C17F20
	916 Call 0x1C17F20
	917 Call 0x1C17F20
	918 Move X0, 0x2247000
	919 Move X0, [X0+3696]
	920 Call 0x1C17D08
	921 Call 0x1C17F10
	922 Move X21, X0
	923 Move X0, 0x224A000
	924 Move X0, [X0+600]
	925 Call 0x1C17D08
	926 Move X2, X0
	927 Move W1, 1
	928 Move X0, X21
	929 Call StartGameException..ctor, X0, X1, X2
	930 Move X0, 0x224A000
	931 Move X0, [X0+584]
	932 Call 0x1C17D08
	933 Move X1, X0
	934 Move X0, X21
	935 Call 0x1C17DEC
	936 Move X0, X1
	937 Move X1, X8
	938 Call 0x1C181E0
	939 Call 0x1C17F20
	940 Call 0x1C17F20
	941 Call 0x1C17F20
	942 Call 0x1C17F20
	943 Move W8, [X20+392]
	944 Move [X31+288], W8
	945 Move X0, 0x2248000
	946 Move X0, [X0+640]
	947 Call 0x1C17D08
	948 Add X1, X31, 288
	949 Call 0x1C17E04
	950 Move X20, X0
	951 Move X0, 0x224A000
	952 Move X0, [X0+608]
	953 Call 0x1C17D08
	954 Move X21, X0
	955 Move X0, 0x224A000
	956 Move X0, [X0+616]
	957 Call 0x1C17D08
	958 Move X1, X0
	959 Move X0, X21
	960 Move X2, X20
	961 Move X3, X31
	962 Call String.Format, X0, X1, X2
	963 Move X20, X0
	964 Move X0, 0x2247000
	965 Move X0, [X0+3696]
	966 Call 0x1C17D08
	967 Call 0x1C17F10
	968 Move X21, X0
	969 Move W1, 16
	970 Move X2, X20
	971 Call StartGameException..ctor, X0, X1, X2
	972 Move X0, 0x224A000
	973 Move X0, [X0+584]
	974 Call 0x1C17D08
	975 Move X1, X0
	976 Move X0, X21
	977 Call 0x1C17DEC
	978 Call 0x1C17F20
	979 Call 0x1C17F20
	980 Call 0x1C17F20
	981 Call 0x1C17F20
	982 Call 0x3EB2B20
	983 Move X21, X1
	984 Move X23, X0
	985 Move W27, 4
	986 Move X21, X1
	987 Move X23, X0
	988 Move W27, 3
	989 Move X21, X1
	990 Move X23, X0
	991 Move W27, 2
	992 Move X21, X1
	993 Move X23, X0
	994 Move X21, X1
	995 Move X23, X0
	996 Move W27, 1
	997 Move X21, X1
	998 Move X23, X0
	999 Move W27, W31
	1000 Move X21, X1
	1001 Move X23, X0
	1002 NotImplemented "Instruction CMP not yet implemented."
	1003 Move X0, X23
	1004 Call 0x3EB2AD0
	1005 Move X21, X0
	1006 Move X0, 0x223E000
	1007 Move X0, [X0+2000]
	1008 Call 0x1C17D08
	1009 Move X8, [X21]
	1010 Move X1, [X8]
	1011 Call 0x1C18270
	1012 Move TEMP, X0
	1013 And TEMP, TEMP, 1
	1014 Compare TEMP, 1
	1015 JumpIfNotEqual {1021}
	1016 Move X21, [X21]
	1017 Call 0x3EB2AE0
	1018 Move W8, 1
	1019 Move [X19+360], X21
	1020 Move [X19+368], W8
	1021 Move W0, 8
	1022 Call 0x3EB2AF0
	1023 Move X8, [X21]
	1024 Move [X0], X8
	1025 Move X1, 0x1FFF000
	1026 Add X1, X1, 3672
	1027 Move X2, X31
	1028 Call 0x3EB2B00
	1029 Move X21, X1
	1030 Move X23, X0
	1031 Call 0x3EB2AE0
	1032 NotImplemented "Instruction CMP not yet implemented."
	1033 Move X0, X23
	1034 Call 0x3EB2AD0
	1035 Move X22, [X0]
	1036 Call 0x3EB2AE0
	1037 Move W8, W31
	1038 Move X21, X31
	1039 Move TEMP, X27
	1040 And TEMP, TEMP, -2147483648
	1041 Compare TEMP, -2147483648
	1042 JumpIfNotEqual {775}
	1043 Move X22, X31
	1044 Move TEMP, X27
	1045 And TEMP, TEMP, -2147483648
	1046 Compare TEMP, -2147483648
	1047 JumpIfNotEqual {1051}
	1048 Compare X20, 0
	1049 JumpIfEqual {1055}
	1050 Move [X20+424], X31
	1051 Compare X22, 0
	1052 JumpIfEqual {1064}
	1053 Move X0, X22
	1054 Call 0x1C17F18
	1055 Call 0x1C17F20
	1056 Move X21, X1
	1057 Move X23, X0
	1058 Move TEMP, X27
	1059 And TEMP, TEMP, -2147483648
	1060 Compare TEMP, -2147483648
	1061 JumpIfNotEqual {1051}
	1062 Move X21, X1
	1063 Move X23, X0
	1064 NotImplemented "Instruction CMP not yet implemented."
	1065 Move X0, X23
	1066 Call 0x3EB2AD0
	1067 Move X20, X0
	1068 Move X0, 0x223E000
	1069 Move X0, [X0+2000]
	1070 Call 0x1C17D08
	1071 Move X8, [X20]
	1072 Move X1, [X8]
	1073 Call 0x1C18270
	1074 Move TEMP, X0
	1075 And TEMP, TEMP, 1
	1076 Compare TEMP, 1
	1077 JumpIfNotEqual {1098}
	1078 Move X20, [X20]
	1079 Call 0x3EB2AE0
	1080 Move TEMP, 1
	1081 Not TEMP
	1082 Move W8, TEMP
	1083 Move [X19+8], W8
	1084 Move X0, 0x2249000
	1085 Move X0, [X0+4048]
	1086 Call 0x1C17D08
	1087 Move W8, [X0+224]
	1088 Compare W8, 0
	1089 JumpIfNotEqual {1091}
	1090 Call 0x1C17DFC
	1091 Move X0, 0x224A000
	1092 Move X0, [X0+392]
	1093 Call 0x1C17D08
	1094 Move X2, X0
	1095 Move X0, X19
	1096 Move X1, X20
	1097 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	1098 Move W0, 8
	1099 Call 0x3EB2AF0
	1100 Move X8, [X20]
	1101 Move [X0], X8
	1102 Move X1, 0x1FFF000
	1103 Add X1, X1, 3672
	1104 Move X2, X31
	1105 Call 0x3EB2B00
	1106 Move X23, X0
	1107 Call 0x3EB2AE0
	1108 Move X0, X23
	1109 Call 0x1D2D690
	1110 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x01EB6A60 STP X22, X21, [X31 + 0x60]
	0x01EB6A64 STP X20, X19, [X31 + 0x70]
	0x01EB6A68 MRS X23, 0xC000
	0x01EB6A6C LDR X8, [X23 + 0x28]
	0x01EB6A70 ADRP X24, 0x2523000
	0x01EB6A74 MOV W19, W3
	0x01EB6A78 MOV X21, X2
	0x01EB6A7C STR X8, [X31 + 0x38]
	0x01EB6A80 LDRB W8, [X24 + 0x3D5]
	0x01EB6A84 MOV X20, X1
	0x01EB6A88 MOV X22, X0
	0x01EB6A8C TBNZ X8, 0x0, 0x1EB6AA4
	0x01EB6A90 ADRP X0, 0x2249000
	0x01EB6A94 LDR X0, [X0 + 0x2C8]
	0x01EB6A98 BL 0x1C16CF4
	0x01EB6A9C MOVZ W8, 0x1
	0x01EB6AA0 STRB W8, [X24 + 0x3D5]
	0x01EB6AA4 LDR X0, [X22 + 0x48]
	0x01EB6AA8 CBZ X0, 0x1EB6AE0
	0x01EB6AAC ADRP X9, 0x2249000
	0x01EB6AB0 LDR X8, [X21 + 0x10]
	0x01EB6AB4 LDR V0, [X21]
	0x01EB6AB8 LDR X9, [X9 + 0x2C8]
	0x01EB6ABC ADD X2, X31, 0x20
	0x01EB6AC0 MOV X1, X20
	0x01EB6AC4 MOV W3, W19
	0x01EB6AC8 LDR X4, [X9]
	0x01EB6ACC STR X8, [X31 + 0x10]
	0x01EB6AD0 STR V0, [X31]
	0x01EB6AD4 STR V0, [X31 + 0x2]
	0x01EB6AD8 STR X8, [X31 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2524000
	007 Move X21, 0x2249000
	008 Move W8, [X22+968]
	009 Move X21, [X21+4048]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x224A000
	017 Move X0, [X0+400]
	018 Call 0x1C17CF4
	019 Move X0, 0x2249000
	020 Move X0, [X0+4048]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+968], W8
	024 Move X0, [X21]
	025 Move X21, 0x224A000
	026 Move W8, [X0+224]
	027 Move X21, [X21+400]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

