Type: Fusion.FixedArray

Method: Fusion.FixedArray`1<T> CreateFromFieldSequence(ref T firstField, ref T lastField)

Disassembly:
	0x021E4AAC ADD X0, X31, 0x0
	0x021E4AB0 BL 0x2BC4350
	0x021E4AB4 TBZ X0, 0x0, 0x21E4AFC
	0x021E4AB8 LDR X0, [X31 + 0x10]
	0x021E4ABC CBZ X0, 0x21E4B2C
	0x021E4AC0 LDR X8, [X19 + 0x38]
	0x021E4AC4 LDR X2, [X8]
	0x021E4AC8 MOV W1, W20
	0x021E4ACC BL 0x21E568C
	0x021E4AD0 MOV X21, X0
	0x021E4AD4 LDR X0, [X23]
	0x021E4AD8 LDR W8, [X0 + 0xE0]
	0x021E4ADC CBNZ W8, 0x21E4AE4
	0x021E4AE0 BL 0x1C16DFC
	0x021E4AE4 MOV X0, X21
	0x021E4AE8 MOV X1, X31
	0x021E4AEC MOV X2, X31
	0x021E4AF0 BL 0x3C354F8
	0x021E4AF4 TBZ X0, 0x0, 0x21E4AA8
	0x021E4AF8 B 0x21E4B00
	0x021E4AFC MOV X21, X31
	0x021E4B00 ADRP X8, 0x1F15000
	0x021E4B04 LDR X8, [X8 + 0xDD0]
	0x021E4B08 ADD X0, X31, 0x0
	0x021E4B0C LDR X1, [X8]
	0x021E4B10 BL 0x2BC434C

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X20, X1
	008 Move X19, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {15}
	011 Move X0, X2
	012 Move X21, X2
	013 Call 0x1C5D6E0
	014 Move X8, [X21+56]
	015 Move X9, [X8+8]
	016 Add X0, X31, 0
	017 Move X1, X19
	018 NotImplemented "Instruction LDRSW not yet implemented."
	019 Move [X31], X31
	020 Move [X31+8], X31
	021 Move X3, [X8+24]
	022 Subtract X8, X20, X19
	023 NotImplemented "Instruction SDIV not yet implemented."
	024 Add W2, W8, 1
	025 Call FixedArray`1<__Il2CppFullySharedGenericStructType>..ctor, X0, X1, X2
	026 Move X0, [X31]
	027 Move X1, [X31+8]
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X30, [X31+16]
	031 Move X21, [X31+24]
	032 Add X31, X31, 48
	033 Return X0

Method: Fusion.FixedArray`1<T> Create(ref T firstField, System.Int32 length)

Disassembly:
	0x021E494C LDP X28, X27, [X31 + 0x40]
	0x021E4950 LDP X29, X30, [X31 + 0x30]
	0x021E4954 ADD X31, X31, 0x90
	0x021E4958 RET
	0x021E495C BL 0x1C16F20
	0x021E4960 BL 0x1C16F28
	0x021E4964 BL 0x1C171E0
	0x021E4968 STP X30, X19, [X31 - 0x10]!
	0x021E496C LDR X8, [X0 + 0x38]
	0x021E4970 MOV X19, X0
	0x021E4974 CBNZ X8, 0x21E4984
	0x021E4978 MOV X0, X19
	0x021E497C BL 0x1C5C6E0
	0x021E4980 LDR X8, [X19 + 0x38]
	0x021E4984 LDR X0, [X8]
	0x021E4988 LDRB W8, [X0 + 0x135]
	0x021E498C TBNZ X8, 0x0, 0x21E4994
	0x021E4990 BL 0x1C5C684
	0x021E4994 BL 0x1C16F10
	0x021E4998 LDR X8, [X19 + 0x38]
	0x021E499C MOVN W1, 0x1
	0x021E49A0 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {15}
	011 Move X0, X2
	012 Move X21, X2
	013 Call 0x1C5D6E0
	014 Move X8, [X21+56]
	015 Move [X31], X31
	016 Move [X31+8], X31
	017 Move X3, [X8+16]
	018 Add X0, X31, 0
	019 Move X1, X20
	020 Move W2, W19
	021 Call 0x2D20A98, X0, X1, X2
	022 Move X0, [X31]
	023 Move X1, [X31+8]
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X30, [X31+16]
	027 Move X21, [X31+24]
	028 Add X31, X31, 48
	029 Return X0

Method: Fusion.FixedArray`1<TAdapted> Create(ref TActual firstField, System.Int32 length)

Disassembly:
	0x021E4A54 CBNZ W8, 0x21E4A60
	0x021E4A58 BL 0x1C16DFC
	0x021E4A5C LDR X0, [X21]
	0x021E4A60 LDR X8, [X0 + 0xB8]
	0x021E4A64 ADD X0, X31, 0x18
	0x021E4A68 MOV X2, X31
	0x021E4A6C LDR X21, [X8]
	0x021E4A70 MOV X1, X21
	0x021E4A74 BL 0x3C465DC
	0x021E4A78 CBZ X21, 0x21E4B30
	0x021E4A7C ADRP X8, 0x1F15000
	0x021E4A80 LDR X8, [X8 + 0xDE8]
	0x021E4A84 MOV X0, X21
	0x021E4A88 LDR X1, [X8]
	0x021E4A8C ADD X8, X31, 0x0
	0x021E4A90 BL 0x301CB58
	0x021E4A94 ADRP X22, 0x1F15000
	0x021E4A98 ADRP X23, 0x1F0F000
	0x021E4A9C LDR X22, [X22 + 0xDD8]
	0x021E4AA0 LDR X23, [X23 + 0x598]
	0x021E4AA4 AND W20, W20, 0x1
	0x021E4AA8 LDR X1, [X22]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {15}
	011 Move X0, X2
	012 Move X21, X2
	013 Call 0x1C5D6E0
	014 Move X8, [X21+56]
	015 Move [X31], X31
	016 Move [X31+8], X31
	017 Move X3, [X8+16]
	018 Add X0, X31, 0
	019 Move X1, X20
	020 Move W2, W19
	021 Call FixedArray`1<__Il2CppFullySharedGenericStructType>..ctor, X0, X1, X2
	022 Move X0, [X31]
	023 Move X1, [X31+8]
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X30, [X31+16]
	027 Move X21, [X31+24]
	028 Add X31, X31, 48
	029 Return X0

Method: System.Int32 IndexOf(Fusion.FixedArray`1<T> array, T elem)

Disassembly:
	0x021E4B14 MOV X0, X21
	0x021E4B18 LDP X20, X19, [X31 + 0x40]
	0x021E4B1C LDP X22, X21, [X31 + 0x30]
	0x021E4B20 LDP X30, X23, [X31 + 0x20]
	0x021E4B24 ADD X31, X31, 0x50
	0x021E4B28 RET
	0x021E4B2C BL 0x1C16F20
	0x021E4B30 BL 0x1C16F20
	0x021E4B34 B 0x21E4B44
	0x021E4B38 B 0x21E4B44
	0x021E4B3C B 0x21E4B44
	0x021E4B40 B 0x21E4B44
	0x021E4B44 MOV X19, X0
	0x021E4B48 CMP W1, 0x1
	0x021E4B4C B.NE 0x21E4B80
	0x021E4B50 MOV X0, X19
	0x021E4B54 BL 0x3EB1AD0
	0x021E4B58 LDR X20, [X0]
	0x021E4B5C BL 0x3EB1AE0
	0x021E4B60 ADRP X8, 0x1F15000
	0x021E4B64 LDR X8, [X8 + 0xDD0]
	0x021E4B68 ADD X0, X31, 0x0
	0x021E4B6C LDR X1, [X8]
	0x021E4B70 BL 0x2BC434C
	0x021E4B74 CBNZ X20, 0x21E4B88
	0x021E4B78 MOV X21, X31
	0x021E4B7C B 0x21E4B14
	0x021E4B80 MOV X20, X31
	0x021E4B84 B 0x21E4B94
	0x021E4B88 MOV X0, X20
	0x021E4B8C BL 0x1C16F18
	0x021E4B90 MOV X19, X0
	0x021E4B94 ADRP X8, 0x1F15000
	0x021E4B98 LDR X8, [X8 + 0xDD0]
	0x021E4B9C LDR X1, [X8]
	0x021E4BA0 ADD X0, X31, 0x0
	0x021E4BA4 BL 0x2BC434C
	0x021E4BA8 CBNZ X20, 0x21E4BB4
	0x021E4BAC MOV X0, X19
	0x021E4BB0 BL 0x1D2C690
	0x021E4BB4 MOV X0, X20
	0x021E4BB8 BL 0x1C16F18
	0x021E4BBC BL 0x1990590
	0x021E4BC0 SUB X31, X31, 0x30
	0x021E4BC4 STP X30, X21, [X31 + 0x10]
	0x021E4BC8 STP X20, X19, [X31 + 0x20]
	0x021E4BCC LDR X8, [X2 + 0x38]
	0x021E4BD0 MOV X20, X2
	0x021E4BD4 MOV W19, W1
	0x021E4BD8 MOV X21, X0
	0x021E4BDC CBNZ X8, 0x21E4BFC
	0x021E4BE0 ADRP X0, 0x1F36000
	0x021E4BE4 LDR X0, [X0 + 0x538]
	0x021E4BE8 BL 0x1C16CF4
	0x021E4BEC LDR X8, [X20 + 0x38]
	0x021E4BF0 CBNZ X8, 0x21E4BFC
	0x021E4BF4 MOV X0, X20
	0x021E4BF8 BL 0x1C5C6E0
	0x021E4BFC ADRP X8, 0x1F36000
	0x021E4C00 LDR X8, [X8 + 0x538]
	0x021E4C04 STR X31, [X31 + 0x8]
	0x021E4C08 LDR X0, [X8]
	0x021E4C0C LDR W8, [X0 + 0xE0]
	0x021E4C10 CBNZ W8, 0x21E4C18
	0x021E4C14 BL 0x1C16DFC
	0x021E4C18 LDR X8, [X20 + 0x38]
	0x021E4C1C AND X0, X21, 0x0
	0x021E4C20 AND W1, W19, 0x1
	0x021E4C24 ADD X2, X31, 0x8
	0x021E4C28 LDR X3, [X8]
	0x021E4C2C BL 0x21E4C40
	0x021E4C30 LDP X20, X19, [X31 + 0x20]
	0x021E4C34 LDP X30, X21, [X31 + 0x10]
	0x021E4C38 ADD X31, X31, 0x30
	0x021E4C3C RET
	0x021E4C40 SUB X31, X31, 0x90
	0x021E4C44 STR X30, [X31 + 0x40]
	0x021E4C48 STP X26, X25, [X31 + 0x50]
	0x021E4C4C STP X24, X23, [X31 + 0x60]
	0x021E4C50 STP X22, X21, [X31 + 0x70]
	0x021E4C54 STP X20, X19, [X31 + 0x80]
	0x021E4C58 STR W0, [X31 + 0x48]
	0x021E4C5C LDR X8, [X3 + 0x38]
	0x021E4C60 MOV X19, X3
	0x021E4C64 MOV X23, X2
	0x021E4C68 MOV W22, W1
	0x021E4C6C CBNZ X8, 0x21E4C78
	0x021E4C70 MOV X0, X19
	0x021E4C74 BL 0x1C5C6E0
	0x021E4C78 ADD X0, X31, 0x48
	0x021E4C7C MOV X1, X31
	0x021E4C80 STP X31, X31, [X31 + 0x20]

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Add X29, X31, 0
	012 Subtract X31, X31, 48
	013 NotImplemented "Instruction MRS not yet implemented."
	014 Move X8, [X26+40]
	015 Move X19, X3
	016 Move X20, X2
	017 Move [X29-8], X8
	018 Move [X29-40], X0
	019 Move [X29-32], X1
	020 Move X8, [X3+56]
	021 Compare X8, 0
	022 JumpIfNotEqual {26}
	023 Move X0, X19
	024 Call 0x1C5D6E0
	025 Move X8, [X19+56]
	026 Move X0, [X8+32]
	027 Move W21, [X0+252]
	028 Move W10, [X0+309]
	029 Move W9, W21
	030 Move TEMP, X10
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {37}
	034 Call 0x1C5D684
	035 Move W9, [X0+252]
	036 Move X8, [X19+56]
	037 Add W9, W9, 16
	038 Add X9, X9, 15
	039 Add X10, X31, 0
	040 And X9, X9, 0x1FFFFFFFF
	041 Subtract X22, X10, X9
	042 Add X31, X22, 0
	043 Add X10, X21, 15
	044 Add X9, X31, 0
	045 And X10, X10, 0x1FFFFFFFF
	046 Subtract X23, X9, X10
	047 Add X31, X23, 0
	048 Move X1, [X8+56]
	049 Subtract X0, X29, 40
	050 Move X8, [X1]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move W24, W31
	054 Move X8, [X19+56]
	055 Subtract X0, X29, 40
	056 Move W1, W24
	057 Move X2, [X8+8]
	058 Move X8, [X2]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X25, X0
	061 Move X0, X23
	062 Move X1, X20
	063 Move X2, X21
	064 Call 0x3EB2AC0
	065 Move X8, [X19+56]
	066 Move X0, [X8+32]
	067 Move W9, [X0+309]
	068 Move TEMP, X9
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {74}
	072 Call 0x1C5D684
	073 Move X8, [X19+56]
	074 Move X1, [X8+48]
	075 Subtract X4, X29, 24
	076 Subtract X5, X29, 12
	077 Move X2, X22
	078 Move X3, X25
	079 Move [X29-24], X23
	080 Call 0x1C18728
	081 NotImplemented "Instruction LDURB not yet implemented."
	082 Compare W8, 0
	083 JumpIfNotEqual {94}
	084 Move X8, [X19+56]
	085 Subtract X0, X29, 40
	086 Add W24, W24, 1
	087 Move X1, [X8+56]
	088 Move X8, [X1]
	089 NotImplemented "Instruction BLR not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move TEMP, 0
	092 Not TEMP
	093 Move W24, TEMP
	094 Move X8, [X26+40]
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move W0, W24
	098 Add X31, X29, 0
	099 Move X20, [X31+64]
	100 Move X19, [X31+72]
	101 Move X22, [X31+48]
	102 Move X21, [X31+56]
	103 Move X24, [X31+32]
	104 Move X23, [X31+40]
	105 Move X26, [X31+16]
	106 Move X25, [X31+24]
	107 Move X29, [X31+80]
	108 Move X30, [X31+88]
	109 Return X0
	110 Call 0x3EB2B20

