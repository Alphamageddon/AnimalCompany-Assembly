Type: Fusion.NetworkObjectMeta

Method: System.Void .cctor()

Disassembly:
	0x01E97FB4 STR X31, [X1 + 0x80]
	0x01E97FB8 LDR X8, [X0 + 0x10]
	0x01E97FBC ADD X9, X0, 0x8
	0x01E97FC0 ADD X10, X8, 0x80
	0x01E97FC4 CMP X8, 0x0
	0x01E97FC8 STR X8, [X1 + 0x78]
	0x01E97FCC CSEL X8, X9, X10, EQ
	0x01E97FD0 STR X1, [X8]
	0x01E97FD4 LDR W8, [X0]
	0x01E97FD8 STR X1, [X0 + 0x10]
	0x01E97FDC ADD W8, W8, 0x1
	0x01E97FE0 STR W8, [X0]
	0x01E97FE4 LDR X30, [X31], #0x10
	0x01E97FE8 RET
	0x01E97FEC BL 0x1C16F20
	0x01E97FF0 STR X30, [X31 - 0x10]!
	0x01E97FF4 LDR X8, [X0 + 0x8]
	0x01E97FF8 CMP X2, X8
	0x01E97FFC B.EQ 0x1E98038
	0x01E98000 CBZ X1, 0x1E98040
	0x01E98004 STR X2, [X1 + 0x80]
	0x01E98008 CBZ X2, 0x1E98040
	0x01E9800C LDR X8, [X2 + 0x78]
	0x01E98010 STR X8, [X1 + 0x78]
	0x01E98014 LDR X8, [X2 + 0x78]
	0x01E98018 CBZ X8, 0x1E98040
	0x01E9801C STR X1, [X8 + 0x80]
	0x01E98020 STR X1, [X2 + 0x78]
	0x01E98024 LDR W8, [X0]
	0x01E98028 ADD W8, W8, 0x1
	0x01E9802C STR W8, [X0]
	0x01E98030 LDR X30, [X31], #0x10
	0x01E98034 RET
	0x01E98038 LDR X30, [X31], #0x10
	0x01E9803C B 0x1E97F68
	0x01E98040 BL 0x1C16F20
	0x01E98044 STR X30, [X31 - 0x10]!
	0x01E98048 LDR X8, [X0 + 0x10]
	0x01E9804C CMP X2, X8
	0x01E98050 B.EQ 0x1E98088
	0x01E98054 CBZ X2, 0x1E98090
	0x01E98058 CBZ X1, 0x1E98090
	0x01E9805C LDR X8, [X2 + 0x80]
	0x01E98060 STP X2, X8, [X1 + 0x78]
	0x01E98064 LDR X8, [X2 + 0x80]
	0x01E98068 CBZ X8, 0x1E98090
	0x01E9806C STR X1, [X8 + 0x78]
	0x01E98070 STR X1, [X2 + 0x80]
	0x01E98074 LDR W8, [X0]
	0x01E98078 ADD W8, W8, 0x1
	0x01E9807C STR W8, [X0]
	0x01E98080 LDR X30, [X31], #0x10
	0x01E98084 RET
	0x01E98088 LDR X30, [X31], #0x10
	0x01E9808C B 0x1E97FAC
	0x01E98090 BL 0x1C16F20
	0x01E98094 STP X30, X19, [X31 - 0x10]!
	0x01E98098 LDR X19, [X0 + 0x8]
	0x01E9809C MOV X1, X19
	0x01E980A0 BL 0x1E980B0
	0x01E980A4 MOV X0, X19
	0x01E980A8 LDP X30, X19, [X31], #0x10
	0x01E980AC RET
	0x01E980B0 STR X30, [X31 - 0x10]!
	0x01E980B4 ADD X8, X0, 0x8
	0x01E980B8 MOV X10, X8
	0x01E980BC LDR X9, [X10]
	0x01E980C0 CBZ X9, 0x1E980D0
	0x01E980C4 CMP X9, X1
	0x01E980C8 ADD X10, X9, 0x80
	0x01E980CC B.NE 0x1E980BC
	0x01E980D0 CBZ X9, 0x1E9812C
	0x01E980D4 CBZ X1, 0x1E98134
	0x01E980D8 MOV X9, X1
	0x01E980DC LDR X11, [X9 + 0x78]!
	0x01E980E0 CBZ X11, 0x1E980EC
	0x01E980E4 LDR X10, [X1 + 0x80]
	0x01E980E8 STR X10, [X11 + 0x80]
	0x01E980EC LDR X10, [X1 + 0x80]
	0x01E980F0 CBZ X10, 0x1E980F8
	0x01E980F4 STR X11, [X10 + 0x78]
	0x01E980F8 LDR X11, [X0 + 0x10]
	0x01E980FC CMP X1, X11
	0x01E98100 B.NE 0x1E9810C
	0x01E98104 LDR X11, [X9]
	0x01E98108 STR X11, [X0 + 0x10]
	0x01E9810C LDR X11, [X8]
	0x01E98110 CMP X1, X11
	0x01E98114 B.NE 0x1E9811C
	0x01E98118 STR X10, [X8]
	0x01E9811C STP X31, X31, [X9]
	0x01E98120 LDR W8, [X0]
	0x01E98124 SUB W8, W8, 0x1
	0x01E98128 STR W8, [X0]
	0x01E9812C LDR X30, [X31], #0x10
	0x01E98130 RET
	0x01E98134 BL 0x1C16F20
	0x01E98138 ADD X9, X0, 0x8
	0x01E9813C LDR X8, [X9]
	0x01E98140 CBZ X8, 0x1E98150
	0x01E98144 CMP X8, X1
	0x01E98148 ADD X9, X8, 0x80
	0x01E9814C B.NE 0x1E9813C
	0x01E98150 CMP X8, 0x0
	0x01E98154 CSET W0, NE
	0x01E98158 RET
	0x01E9815C LDR X9, [X0 + 0x10]
	0x01E98160 LDR V0, [X0]
	0x01E98164 STR X9, [X8 + 0x10]
	0x01E98168 STR V0, [X8]
	0x01E9816C STR W31, [X0]
	0x01E98170 STP X31, X31, [X0 + 0x8]
	0x01E98174 RET
	0x01E98178 STR X30, [X31 - 0x10]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x2543000
	006 Move X20, 0x2268000
	007 Move W8, [X19+687]
	008 Move X20, [X20+1064]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x2268000
	014 Move X0, [X0+1064]
	015 Call 0x1C17CF4
	016 Move X0, 0x2268000
	017 Move X0, [X0+1072]
	018 Call 0x1C17CF4
	019 Move X0, 0x2268000
	020 Move X0, [X0+1080]
	021 Call 0x1C17CF4
	022 Move X0, 0x2268000
	023 Move X0, [X0+1088]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+687], W8
	027 Move X19, [X20]
	028 Move X8, [X19+56]
	029 Compare X8, 0
	030 JumpIfNotEqual {34}
	031 Move X0, X19
	032 Call 0x1C5D6E0
	033 Move X8, [X19+56]
	034 Move X0, [X8+16]
	035 Move W8, [X0+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {41}
	040 Call 0x1C5D684
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X8, [X19+56]
	046 Move X19, 0x2267000
	047 Move X20, 0x2267000
	048 Move X0, [X8+16]
	049 Move W8, [X0+309]
	050 Move X19, [X19+1080]
	051 Move X20, [X20+1072]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Move X8, [X0+184]
	058 Move X9, [X19]
	059 Move W1, 29
	060 Move X8, [X8]
	061 Move X9, [X9+184]
	062 Move [X9+8], X8
	063 Move X0, [X20]
	064 Call 0x1C17D6C
	065 Move X8, [X19]
	066 Move X8, [X8+184]
	067 Move [X8], X0
	068 Move X8, [X19]
	069 Move X8, [X8+184]
	070 Move X20, [X8]
	071 Compare X20, 0
	072 JumpIfEqual {124}
	073 Move X21, 0x2267000
	074 Move X21, [X21+1088]
	075 Move X0, [X21]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {81}
	079 Call 0x1C17DFC
	080 Move X0, [X21]
	081 Move W8, [X20+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X8, [X0+184]
	084 Move X8, [X8]
	085 Move [X20+392], X8
	086 Move X9, [X19]
	087 Move X9, [X9+184]
	088 Move X9, [X9]
	089 Compare X9, 0
	090 JumpIfEqual {124}
	091 Move W10, [X9+24]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move [X9+388], W31
	095 Move W11, 1
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move [X9+408], X8
	098 Move [X9+404], W11
	099 Move W11, 2
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move [X9+424], X8
	102 Move [X9+420], W11
	103 Move W11, 3
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move [X9+440], X8
	106 Move [X9+436], W11
	107 Move W11, 4
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move [X9+456], X8
	110 Move [X9+452], W11
	111 Move W11, 5
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move [X9+472], X8
	114 Move [X9+468], W11
	115 Move X20, [X31+16]
	116 Move X19, [X31+24]
	117 Move [X9+488], X8
	118 Move W8, 6
	119 Move [X9+484], W8
	120 Move X30, [X31+32]
	121 Move X21, [X31+40]
	122 Return 
	123 Call 0x1C17F28
	124 Call 0x1C17F20

Method: Fusion.NetworkBufferSerializerInfo[] GetSerializers(System.Boolean main)

Disassembly:
	0x01E9817C LDR W9, [X1]
	0x01E98180 CBZ W9, 0x1E981D4
	0x01E98184 LDR W8, [X0]
	0x01E98188 CBZ W8, 0x1E981C0
	0x01E9818C LDR X9, [X0 + 0x10]
	0x01E98190 CBZ X9, 0x1E981DC
	0x01E98194 LDR X10, [X1 + 0x8]
	0x01E98198 STR X10, [X9 + 0x80]
	0x01E9819C LDR X10, [X1 + 0x8]
	0x01E981A0 CBZ X10, 0x1E981DC
	0x01E981A4 STR X9, [X10 + 0x78]
	0x01E981A8 LDR X9, [X1 + 0x10]
	0x01E981AC STR X9, [X0 + 0x10]
	0x01E981B0 LDR W9, [X1]
	0x01E981B4 ADD W8, W9, W8
	0x01E981B8 STR W8, [X0]
	0x01E981BC B 0x1E981D4
	0x01E981C0 STR W9, [X0]
	0x01E981C4 LDR X8, [X1 + 0x8]
	0x01E981C8 STR X8, [X0 + 0x8]
	0x01E981CC LDR X8, [X1 + 0x10]
	0x01E981D0 STR X8, [X0 + 0x10]
	0x01E981D4 LDR X30, [X31], #0x10
	0x01E981D8 RET
	0x01E981DC BL 0x1C16F20
	0x01E981E0 STR X30, [X31 - 0x10]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2542000
	006 Move X20, 0x2267000
	007 Move W8, [X21+688]
	008 Move X20, [X20+1080]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2267000
	015 Move X0, [X0+1080]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+688], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 And W31, W19, 1
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Add X9, X8, 8
	030 NotImplemented "Instruction CSEL not yet implemented."
	031 Move X0, [X8]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return X0

Method: Fusion.NetworkBufferSerializerInfo[] get_Serializers()

Disassembly:
	0x01E981E4 CBZ X0, 0x1E981F4
	0x01E981E8 LDR X0, [X0 + 0x90]
	0x01E981EC LDR X30, [X31], #0x10
	0x01E981F0 RET
	0x01E981F4 BL 0x1C16F20
	0x01E981F8 STR X30, [X31 - 0x10]!
	0x01E981FC MOV X8, X0
	0x01E98200 LDR X9, [X8 + 0x8]!
	0x01E98204 CBZ X1, 0x1E98238
	0x01E98208 STP X31, X9, [X1 + 0x88]
	0x01E9820C CBZ X9, 0x1E98218
	0x01E98210 STR X1, [X9 + 0x88]
	0x01E98214 B 0x1E98220
	0x01E98218 ADD X8, X0, 0x10
	0x01E9821C STR X1, [X0 + 0x8]
	0x01E98220 STR X1, [X8]
	0x01E98224 LDR W8, [X0]
	0x01E98228 ADD W8, W8, 0x1
	0x01E9822C STR W8, [X0]
	0x01E98230 LDR X30, [X31], #0x10
	0x01E98234 RET
	0x01E98238 BL 0x1C16F20
	0x01E9823C STR X30, [X31 - 0x10]!
	0x01E98240 CBZ X1, 0x1E9827C
	0x01E98244 STR X31, [X1 + 0x90]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2542000
	005 Move W8, [X20+689]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2267000
	012 Move X0, [X0+1080]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+689], W8
	016 Move X8, [X19+176]
	017 Compare X8, 0
	018 JumpIfEqual {35}
	019 Move X9, 0x2267000
	020 Move X9, [X9+1080]
	021 Move W19, [X8+24]
	022 Move X0, [X9]
	023 Move W9, [X0+224]
	024 Compare W9, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move W0, W19
	028 ShiftRight W0, 3
	029 And W0, W0, 7
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Call NetworkObjectMeta.GetSerializers, X0
	034 Return X0
	035 Call 0x1C17F20

Method: Fusion.Timeline get_Timeline()

Disassembly:
	0x01E98268 STR X1, [X0 + 0x10]
	0x01E9826C ADD W8, W8, 0x1
	0x01E98270 STR W8, [X0]
	0x01E98274 LDR X30, [X31], #0x10
	0x01E98278 RET
	0x01E9827C BL 0x1C16F20
	0x01E98280 STR X30, [X31 - 0x10]!
	0x01E98284 LDR X8, [X0 + 0x8]
	0x01E98288 CMP X2, X8
	0x01E9828C B.EQ 0x1E982C8
	0x01E98290 CBZ X1, 0x1E982D0
	0x01E98294 STR X2, [X1 + 0x90]
	0x01E98298 CBZ X2, 0x1E982D0
	0x01E9829C LDR X8, [X2 + 0x88]
	0x01E982A0 STR X8, [X1 + 0x88]
	0x01E982A4 LDR X8, [X2 + 0x88]
	0x01E982A8 CBZ X8, 0x1E982D0
	0x01E982AC STR X1, [X8 + 0x90]
	0x01E982B0 STR X1, [X2 + 0x88]
	0x01E982B4 LDR W8, [X0]
	0x01E982B8 ADD W8, W8, 0x1
	0x01E982BC STR W8, [X0]
	0x01E982C0 LDR X30, [X31], #0x10
	0x01E982C4 RET
	0x01E982C8 LDR X30, [X31], #0x10
	0x01E982CC B 0x1E981F8
	0x01E982D0 BL 0x1C16F20
	0x01E982D4 STR X30, [X31 - 0x10]!
	0x01E982D8 LDR X8, [X0 + 0x10]
	0x01E982DC CMP X2, X8
	0x01E982E0 B.EQ 0x1E98318
	0x01E982E4 CBZ X2, 0x1E98320
	0x01E982E8 CBZ X1, 0x1E98320

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2542000
	006 Move W8, [X20+690]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2267000
	013 Move X0, [X0+1096]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+690], W8
	017 Move X20, [X19+112]
	018 Compare X20, 0
	019 JumpIfNotEqual {36}
	020 Move X0, [X19+32]
	021 Compare X0, 0
	022 JumpIfEqual {42}
	023 Move X1, X31
	024 Call Simulation.get_TickRate, X0
	025 Move X8, 0x2267000
	026 Move X8, [X8+1096]
	027 Move W21, W0
	028 Move X8, [X8]
	029 Move X0, X8
	030 Call 0x1C17F10
	031 Move W1, W21
	032 Move X2, X31
	033 Move X20, X0
	034 Call Timeline..ctor, X0, X1
	035 Move [X19+112], X20
	036 Move X0, X20
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return X0
	042 Call 0x1C17F20

Method: System.Boolean get_HasMainTRSP()

Disassembly:
	0x01E98248 LDR X8, [X0 + 0x10]
	0x01E9824C ADD X9, X0, 0x8
	0x01E98250 ADD X10, X8, 0x90
	0x01E98254 CMP X8, 0x0
	0x01E98258 STR X8, [X1 + 0x88]
	0x01E9825C CSEL X8, X9, X10, EQ
	0x01E98260 STR X1, [X8]
	0x01E98264 LDR W8, [X0]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+176]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move W8, [X8+24]
	006 Move W0, W8
	007 ShiftRight W0, 3
	008 And W0, W0, 7
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

Method: Fusion.NetworkTRSPData* get_MainTRSPData()

Disassembly:
	0x01E982EC LDR X8, [X2 + 0x90]
	0x01E982F0 STP X2, X8, [X1 + 0x88]
	0x01E982F4 LDR X8, [X2 + 0x90]
	0x01E982F8 CBZ X8, 0x1E98320
	0x01E982FC STR X1, [X8 + 0x88]
	0x01E98300 STR X1, [X2 + 0x90]
	0x01E98304 LDR W8, [X0]
	0x01E98308 ADD W8, W8, 0x1
	0x01E9830C STR W8, [X0]
	0x01E98310 LDR X30, [X31], #0x10

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+176]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move W9, [X8+24]
	006 Add X8, X8, 80
	007 And W31, W9, 8
	008 NotImplemented "Instruction CSEL not yet implemented."
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

Method: System.Int32* get_DataPointer()

Disassembly:
	0x01E98314 RET
	0x01E98318 LDR X30, [X31], #0x10
	0x01E9831C B 0x1E9823C

ISIL:
	001 Move X8, [X0+176]
	002 Add X0, X8, 80
	003 Return X0

Method: System.Boolean get_HasSnapshots()

Disassembly:
	0x01E94320 BL 0x2AE89D0
	0x01E94324 TBZ X0, 0x0, 0x1E9433C
	0x01E94328 LDR X0, [X31 + 0x8]
	0x01E9432C CBZ X0, 0x1E94410

ISIL:
	001 Move X8, [X0+88]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: Fusion.NetworkObjectHeaderSnapshotRef get_SnapshotLatest()

Disassembly:
	0x01E94330 LDR X1, [X19 + 0x38]
	0x01E94334 MOV X2, X31

ISIL:
	001 Move X0, [X0+88]
	002 Return X0

Method: System.Boolean get_IsStruct()

Disassembly:
	0x01E98320 BL 0x1C16F20
	0x01E98324 STP X30, X19, [X31 - 0x10]!
	0x01E98328 LDR X19, [X0 + 0x8]
	0x01E9832C MOV X1, X19
	0x01E98330 BL 0x1E98340
	0x01E98334 MOV X0, X19
	0x01E98338 LDP X30, X19, [X31], #0x10

ISIL:
	001 Move X8, [X0+176]
	002 Compare X8, 0
	003 JumpIfEqual {9}
	004 Move W8, [X8+24]
	005 Move W0, W8
	006 ShiftRight W0, 5
	007 And W0, W0, 31
	008 Return X0
	009 Move W0, W31
	010 Return X0

Method: System.Boolean get_IsObject()

Disassembly:
	0x01E9833C RET
	0x01E98340 STR X30, [X31 - 0x10]!
	0x01E98344 CBZ X1, 0x1E983A4
	0x01E98348 MOV X8, X1
	0x01E9834C LDR X10, [X8 + 0x88]!
	0x01E98350 CBZ X10, 0x1E9835C
	0x01E98354 LDR X9, [X1 + 0x90]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+176]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, 1
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: Fusion.NetworkObjectTypeId get_Type()

Disassembly:
	0x01E98358 STR X9, [X10 + 0x90]
	0x01E9835C LDR X9, [X1 + 0x90]
	0x01E98360 CBZ X9, 0x1E98368
	0x01E98364 STR X10, [X9 + 0x88]
	0x01E98368 LDR X10, [X0 + 0x10]
	0x01E9836C CMP X1, X10

ISIL:
	001 Move X8, [X0+176]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move X0, [X8+8]
	005 Return X0
	006 Move X0, X31
	007 Return X0

Method: Fusion.NetworkId get_Id()

Disassembly:
	0x01E98370 B.NE 0x1E9837C
	0x01E98374 LDR X10, [X8]
	0x01E98378 STR X10, [X0 + 0x10]
	0x01E9837C LDR X10, [X0 + 0x8]
	0x01E98380 CMP X1, X10
	0x01E98384 B.NE 0x1E9838C

ISIL:
	001 Move X8, [X0+176]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move W0, [X8]
	005 Return X0
	006 Move X0, X31
	007 Return X0

Method: Fusion.PlayerRef get_StateAuthority()

Disassembly:
	0x01E98388 STR X9, [X0 + 0x8]
	0x01E9838C STP X31, X31, [X8]
	0x01E98390 LDR W8, [X0]
	0x01E98394 SUB W8, W8, 0x1
	0x01E98398 STR W8, [X0]
	0x01E9839C LDR X30, [X31], #0x10

ISIL:
	001 Move X8, [X0+176]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move W0, [X8+32]
	005 Return X0
	006 Move X0, X31
	007 Return X0

Method: Fusion.PlayerRef get_InputAuthority()

Disassembly:
	0x01E983A0 RET
	0x01E983A4 BL 0x1C16F20
	0x01E983A8 ADD X9, X0, 0x8
	0x01E983AC LDR X8, [X9]
	0x01E983B0 CBZ X8, 0x1E983C0
	0x01E983B4 CMP X8, X1

ISIL:
	001 Move X8, [X0+176]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move W0, [X8+28]
	005 Return X0
	006 Move X0, X31
	007 Return X0

Method: Fusion.NetworkObjectHeaderSnapshotRef get_Shadow()

Disassembly:
	0x01E983B8 ADD X9, X8, 0x90
	0x01E983BC B.NE 0x1E983AC
	0x01E983C0 CMP X8, 0x0
	0x01E983C4 CSET W0, NE
	0x01E983C8 RET
	0x01E983CC LDR W8, [X0]
	0x01E983D0 CMP W8, 0x0
	0x01E983D4 CSET W0, EQ
	0x01E983D8 RET
	0x01E983DC STR W1, [X0]
	0x01E983E0 RET

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+40]
	005 Compare X0, 0
	006 JumpIfNotEqual {12}
	007 Move X1, [X19+176]
	008 Move X0, X19
	009 Move W2, W31
	010 Call NetworkObjectMeta.GetSnapshot, X0, X1, X2
	011 Move [X19+40], X0
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return X0

Method: Fusion.NetworkObjectHeaderSnapshotRef get_Render()

Disassembly:
	0x01E9842C LDR X8, [X8 + 0x498]
	0x01E98430 LDR X9, [X20]
	0x01E98434 LDR X8, [X8]
	0x01E98438 CMP X9, X8
	0x01E9843C B.EQ 0x1E98448
	0x01E98440 MOV W0, W31
	0x01E98444 B 0x1E98460
	0x01E98448 MOV X0, X20
	0x01E9844C BL 0x1C16E08
	0x01E98450 LDR W8, [X0]
	0x01E98454 LDR W9, [X19]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+48]
	005 Compare X0, 0
	006 JumpIfNotEqual {12}
	007 Move X1, [X19+176]
	008 Move X0, X19
	009 Move W2, W31
	010 Call NetworkObjectMeta.GetSnapshot, X0, X1, X2
	011 Move [X19+48], X0
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return X0

Method: Fusion.NetworkObjectHeaderSnapshotRef get_Previous()

Disassembly:
	0x01E98458 CMP W9, W8
	0x01E9845C CSET W0, EQ
	0x01E98460 LDP X20, X19, [X31 + 0x10]
	0x01E98464 LDP X30, X21, [X31], #0x20
	0x01E98468 RET
	0x01E9846C LDR W0, [X0]
	0x01E98470 RET
	0x01E98474 CMP W1, W2
	0x01E98478 CSET W0, EQ
	0x01E9847C RET
	0x01E98480 MOV X0, X1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+56]
	005 Compare X0, 0
	006 JumpIfNotEqual {12}
	007 Move X1, [X19+176]
	008 Move W2, 1
	009 Move X0, X19
	010 Call NetworkObjectMeta.GetSnapshot, X0, X1, X2
	011 Move [X19+56], X0
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return X0

Method: Fusion.NetworkObjectHeaderSnapshotRef get_Migration()

Disassembly:
	0x01E98484 RET
	0x01E98488 MOV X1, X31
	0x01E9848C B 0x33BDD8C
	0x01E98490 STR X30, [X31 - 0x10]!
	0x01E98494 LDR X9, [X0 + 0x30]
	0x01E98498 CBZ X9, 0x1E984C8
	0x01E9849C LDR W10, [X9 + 0x18]
	0x01E984A0 CMP W10, W1
	0x01E984A4 B.LS 0x1E984CC
	0x01E984A8 MOVZ W10, 0x18
	0x01E984AC SMADDL X9, X1, X10, X9

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+64]
	005 Compare X0, 0
	006 JumpIfNotEqual {12}
	007 Move X1, [X19+176]
	008 Move X0, X19
	009 Move W2, W31
	010 Call NetworkObjectMeta.GetSnapshot, X0, X1, X2
	011 Move [X19+64], X0
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return X0

Method: System.Int32* get_Changes()

Disassembly:
	0x01E984B0 LDR X10, [X9 + 0x30]
	0x01E984B4 LDR V0, [X9 + 0x2]
	0x01E984B8 STR X10, [X8 + 0x10]
	0x01E984BC STR V0, [X8]
	0x01E984C0 LDR X30, [X31], #0x10
	0x01E984C4 RET
	0x01E984C8 BL 0x1C16F20
	0x01E984CC BL 0x1C16F28
	0x01E984D0 STP X30, X27, [X31 - 0x50]!
	0x01E984D4 STP X26, X25, [X31 + 0x10]
	0x01E984D8 STP X24, X23, [X31 + 0x20]
	0x01E984DC STP X22, X21, [X31 + 0x30]
	0x01E984E0 STP X20, X19, [X31 + 0x40]
	0x01E984E4 ADRP X20, 0x2541000
	0x01E984E8 LDRB W8, [X20 + 0x2BC]
	0x01E984EC MOV X19, X0
	0x01E984F0 TBNZ X8, 0x0, 0x1E98508
	0x01E984F4 ADRP X0, 0x2266000
	0x01E984F8 LDR X0, [X0 + 0x438]
	0x01E984FC BL 0x1C16CF4
	0x01E98500 MOVZ W8, 0x1
	0x01E98504 STRB W8, [X20 + 0x2BC]
	0x01E98508 LDR X8, [X19 + 0x30]
	0x01E9850C CBZ X8, 0x1E98674
	0x01E98510 ADRP X22, 0x2266000
	0x01E98514 ADRP X20, 0x2262000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2542000
	005 Move W8, [X20+691]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2267000
	012 Move X0, [X0+1104]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+691], W8
	016 Move X0, [X19+24]
	017 Compare X0, 0
	018 JumpIfNotEqual {29}
	019 Move X8, [X19+176]
	020 Compare X8, 0
	021 JumpIfEqual {33}
	022 NotImplemented "Instruction LDRSH not yet implemented."
	023 Move X8, 0x2267000
	024 Move X0, [X19+16]
	025 Move X8, [X8+1104]
	026 Move X2, [X8]
	027 Call 0x227A794, X0, X1
	028 Move [X19+24], X0
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0
	033 Call 0x1C17F20

Method: System.Void .ctor(Fusion.Simulation simulation, Fusion.Allocator* allocator)

Disassembly:
	0x01E98518 LDR X22, [X22 + 0x438]
	0x01E9851C LDR X20, [X20 + 0xC68]
	0x01E98520 MOVZ W23, 0x1
	0x01E98524 MOVZ W24, 0x18
	0x01E98528 ADRP X25, 0x2541000
	0x01E9852C MOVZ W21, 0x1
	0x01E98530 LDR X9, [X8 + 0x18]
	0x01E98534 SUB W10, W9, 0x1
	0x01E98538 CMP X21, W10, SXTW
	0x01E9853C B.GE 0x1E98678
	0x01E98540 AND X9, X9, 0x0
	0x01E98544 ADD X26, X21, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move [X21+16], X19
	011 Move [X21+32], X20
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: Fusion.NetworkObjectHeaderSnapshot GetSnapshot(Fusion.NetworkObjectHeader* header, System.Boolean copyState)

Disassembly:
	0x01E983E4 LDR W8, [X0]
	0x01E983E8 CMP W8, W1
	0x01E983EC CSET W0, EQ
	0x01E983F0 RET
	0x01E983F4 STP X30, X21, [X31 - 0x20]!
	0x01E983F8 STP X20, X19, [X31 + 0x10]
	0x01E983FC ADRP X21, 0x2541000
	0x01E98400 LDRB W8, [X21 + 0x2BA]
	0x01E98404 MOV X20, X1
	0x01E98408 MOV X19, X0
	0x01E9840C TBNZ X8, 0x0, 0x1E98424
	0x01E98410 ADRP X0, 0x2266000
	0x01E98414 LDR X0, [X0 + 0x498]
	0x01E98418 BL 0x1C16CF4
	0x01E9841C MOVZ W8, 0x1
	0x01E98420 STRB W8, [X21 + 0x2BA]
	0x01E98424 CBZ X20, 0x1E98440
	0x01E98428 ADRP X8, 0x2266000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X0, [X0+32]
	006 Compare X0, 0
	007 JumpIfEqual {24}
	008 Move X20, X1
	009 Move X1, X31
	010 Move W19, W2
	011 Call Simulation.GetSnapshot, X0
	012 Compare X0, 0
	013 JumpIfEqual {24}
	014 And W2, W19, 1
	015 Move X1, X20
	016 Move X21, X0
	017 Call NetworkObjectHeaderSnapshot.Init, X0, X1, X2
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X0, X21
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Return X0
	024 Call 0x1C17F20

Method: System.Void Release()

Disassembly:
	0x01E98548 CMP X26, X9
	0x01E9854C B.CS 0x1E98690
	0x01E98550 MADD X9, X26, X24, X8
	0x01E98554 LDR W9, [X9 + 0x20]
	0x01E98558 CBZ W9, 0x1E9866C
	0x01E9855C MADD X9, X26, X24, X8
	0x01E98560 LDR X27, [X9 + 0x28]
	0x01E98564 CBZ X27, 0x1E985C8
	0x01E98568 LDR X0, [X22]
	0x01E9856C LDR W8, [X0 + 0xE0]
	0x01E98570 CBNZ W8, 0x1E98578
	0x01E98574 BL 0x1C16DFC
	0x01E98578 LDRB W8, [X25 + 0x2F2]
	0x01E9857C CBNZ W8, 0x1E9858C
	0x01E98580 MOV X0, X20
	0x01E98584 BL 0x1C16CF4
	0x01E98588 STRB W23, [X25 + 0x2F2]
	0x01E9858C LDR X0, [X20]
	0x01E98590 LDR W8, [X0 + 0xE0]
	0x01E98594 CBNZ W8, 0x1E9859C
	0x01E98598 BL 0x1C16DFC
	0x01E9859C MOVZ W2, 0x4
	0x01E985A0 MOV W0, W21
	0x01E985A4 MOV W1, W31
	0x01E985A8 MOV X3, X31
	0x01E985AC BL 0x1E35134
	0x01E985B0 ADD W8, W0, 0x1
	0x01E985B4 STR W8, [X27 + 0x30]
	0x01E985B8 LDR X27, [X27 + 0x18]
	0x01E985BC CBNZ X27, 0x1E98568
	0x01E985C0 LDR X8, [X19 + 0x30]
	0x01E985C4 CBZ X8, 0x1E98674
	0x01E985C8 LDR W11, [X8 + 0x18]
	0x01E985CC CMP X21, X11
	0x01E985D0 B.CS 0x1E98690
	0x01E985D4 MADD X9, X21, X24, X8
	0x01E985D8 LDR W10, [X9 + 0x20]!
	0x01E985DC CBZ W10, 0x1E9862C
	0x01E985E0 CMP X26, X11
	0x01E985E4 B.CS 0x1E98690
	0x01E985E8 ADD X11, X8, 0x20
	0x01E985EC MADD X12, X26, X24, X11
	0x01E985F0 MADD X11, X21, X24, X11
	0x01E985F4 LDR X12, [X12 + 0x8]
	0x01E985F8 LDR X13, [X11 + 0x10]!
	0x01E985FC CBZ X12, 0x1E98674
	0x01E98600 STR X13, [X12 + 0x10]
	0x01E98604 CBZ X13, 0x1E98674
	0x01E98608 STR X12, [X13 + 0x18]
	0x01E9860C NOP
	0x01E98610 MADD X12, X26, X24, X8
	0x01E98614 LDR X13, [X12 + 0x30]
	0x01E98618 STR X13, [X11]
	0x01E9861C LDR W11, [X12 + 0x20]
	0x01E98620 ADD W10, W11, W10
	0x01E98624 STR W10, [X9]
	0x01E98628 B 0x1E98650
	0x01E9862C CMP X26, X11
	0x01E98630 B.CS 0x1E98690
	0x01E98634 MADD X8, X26, X24, X8
	0x01E98638 LDR X10, [X8 + 0x30]
	0x01E9863C LDR V0, [X8 + 0x2]
	0x01E98640 STR X10, [X9 + 0x10]
	0x01E98644 STR V0, [X9]
	0x01E98648 LDR X8, [X19 + 0x30]
	0x01E9864C CBZ X8, 0x1E98674
	0x01E98650 LDR W9, [X8 + 0x18]
	0x01E98654 CMP X26, X9
	0x01E98658 B.CS 0x1E98690
	0x01E9865C MADD X8, X26, X24, X8
	0x01E98660 STP X31, X31, [X8 + 0x20]
	0x01E98664 STR X31, [X8 + 0x30]
	0x01E98668 LDR X8, [X19 + 0x30]
	0x01E9866C MOV X21, X26
	0x01E98670 CBNZ X8, 0x1E98530
	0x01E98674 BL 0x1C16F20
	0x01E98678 LDP X20, X19, [X31 + 0x40]
	0x01E9867C LDP X22, X21, [X31 + 0x30]
	0x01E98680 LDP X24, X23, [X31 + 0x20]
	0x01E98684 LDP X26, X25, [X31 + 0x10]
	0x01E98688 LDP X30, X27, [X31], #0x50
	0x01E9868C RET
	0x01E98690 BL 0x1C16F28
	0x01E98694 STR X30, [X31 - 0x30]!
	0x01E98698 STP X22, X21, [X31 + 0x10]
	0x01E9869C STP X20, X19, [X31 + 0x20]
	0x01E986A0 ADRP X21, 0x2541000
	0x01E986A4 LDRB W8, [X21 + 0x2BD]
	0x01E986A8 MOV X19, X1
	0x01E986AC MOV X20, X0
	0x01E986B0 TBNZ X8, 0x0, 0x1E986C8
	0x01E986B4 ADRP X0, 0x2266000
	0x01E986B8 LDR X0, [X0 + 0x438]
	0x01E986BC BL 0x1C16CF4
	0x01E986C0 MOVZ W8, 0x1
	0x01E986C4 STRB W8, [X21 + 0x2BD]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2542000
	007 Move X20, 0x225C000
	008 Move W8, [X21+692]
	009 Move X20, [X20+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x2267000
	016 Move X0, [X0+1112]
	017 Call 0x1C17CF4
	018 Move X0, 0x225C000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+692], W8
	023 Move X0, [X20]
	024 Move X20, [X19+184]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X20
	030 Move X1, X31
	031 Call Object.op_Implicit, X0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {40}
	036 Move X8, [X19+184]
	037 Compare X8, 0
	038 JumpIfEqual {121}
	039 Move [X8+56], X31
	040 Move X0, [X19+32]
	041 Move [X19+120], X31
	042 Move [X19+128], X31
	043 Move [X19+152], X31
	044 Move [X19+160], X31
	045 Move [X19+168], W31
	046 Move [X19+176], X31
	047 Move [X19+184], X31
	048 Compare X0, 0
	049 JumpIfEqual {121}
	050 Add X1, X19, 40
	051 Move X2, X31
	052 Call Simulation.SnapshotRelease, X0, X1
	053 Move X0, [X19+32]
	054 Compare X0, 0
	055 JumpIfEqual {121}
	056 Add X1, X19, 48
	057 Move X2, X31
	058 Call Simulation.SnapshotRelease, X0, X1
	059 Move X0, [X19+32]
	060 Compare X0, 0
	061 JumpIfEqual {121}
	062 Add X1, X19, 56
	063 Move X2, X31
	064 Call Simulation.SnapshotRelease, X0, X1
	065 Move X0, [X19+32]
	066 Compare X0, 0
	067 JumpIfEqual {121}
	068 Move X20, 0x2267000
	069 Move X20, [X20+1112]
	070 Add X1, X19, 64
	071 Move X2, X31
	072 Call Simulation.SnapshotRelease, X0, X1
	073 Move X0, [X19+16]
	074 Move X2, [X20]
	075 Add X1, X19, 24
	076 Call 0x227A830, X0, X1
	077 Move X0, [X19+96]
	078 Compare X0, 0
	079 JumpIfEqual {84}
	080 Move W2, [X0+24]
	081 Move W1, W31
	082 Move X3, X31
	083 Call Array.Clear, X0, X1, X2
	084 Move X20, X19
	085 Add X20, X20, 72
	086 Move W8, [X20]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X22, [X19+88]
	089 Move X21, [X19+32]
	090 Move X0, X20
	091 Move X1, X22
	092 Call NetworkObjectHeaderSnapshotList.Remove, X0, X1
	093 Compare X21, 0
	094 JumpIfEqual {121}
	095 Move X0, X21
	096 Move X1, X22
	097 Move X2, X31
	098 Call Simulation.SnapshotRelease, X0, X1
	099 Move W8, [X20]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move [X20], X31
	102 Move [X20+8], X31
	103 Move [X20+16], X31
	104 Move X0, [X19+112]
	105 Compare X0, 0
	106 JumpIfEqual {115}
	107 Move X20, [X31+32]
	108 Move X19, [X31+40]
	109 Move X22, [X31+16]
	110 Move X21, [X31+24]
	111 Move X1, X31
	112 Move X30, [X31+48]
	113 Call Timeline.Clear, X0
	114 Return 
	115 Move X20, [X31+32]
	116 Move X19, [X31+40]
	117 Move X22, [X31+16]
	118 Move X21, [X31+24]
	119 Move X30, [X31+48]
	120 Return 
	121 Call 0x1C17F20

Method: Fusion.NetworkObjectHeaderSnapshotRef NextSnapshot(Fusion.Tick tick)

Disassembly:
	0x01E986C8 CBZ X19, 0x1E98788
	0x01E986CC ADRP X21, 0x2266000
	0x01E986D0 LDR X21, [X21 + 0x438]
	0x01E986D4 LDR W22, [X19 + 0x30]
	0x01E986D8 LDR X0, [X21]
	0x01E986DC LDR W8, [X0 + 0xE0]
	0x01E986E0 CBNZ W8, 0x1E986E8
	0x01E986E4 BL 0x1C16DFC
	0x01E986E8 ADDS W31, W22, 0x1
	0x01E986EC B.GE 0x1E98700
	0x01E986F0 LDP X20, X19, [X31 + 0x20]
	0x01E986F4 LDP X22, X21, [X31 + 0x10]
	0x01E986F8 LDR X30, [X31], #0x30
	0x01E986FC RET
	0x01E98700 LDR X0, [X21]
	0x01E98704 LDR W22, [X19 + 0x30]
	0x01E98708 LDR W8, [X0 + 0xE0]
	0x01E9870C CBNZ W8, 0x1E98714
	0x01E98710 BL 0x1C16DFC
	0x01E98714 SUB W8, W22, 0x1
	0x01E98718 CMP W8, 0x4
	0x01E9871C B.HI 0x1E98764
	0x01E98720 LDR X0, [X21]
	0x01E98724 LDR X21, [X20 + 0x30]
	0x01E98728 LDR W22, [X19 + 0x30]
	0x01E9872C LDR W8, [X0 + 0xE0]
	0x01E98730 CBNZ W8, 0x1E98738
	0x01E98734 BL 0x1C16DFC
	0x01E98738 CBZ X21, 0x1E98788
	0x01E9873C LDR W9, [X21 + 0x18]
	0x01E98740 SUB W8, W22, 0x1
	0x01E98744 CMP W8, W9
	0x01E98748 B.CS 0x1E9878C
	0x01E9874C MOVZ W9, 0x18
	0x01E98750 SMADDL X8, X8, X9, X21
	0x01E98754 ADD X0, X8, 0x20
	0x01E98758 MOV X1, X19
	0x01E9875C MOV X2, X31
	0x01E98760 BL 0x1EBD750
	0x01E98764 MOVN W8, 0x7FFF
	0x01E98768 ADD X0, X20, 0x18
	0x01E9876C STR W8, [X19 + 0x30]
	0x01E98770 MOV X1, X19
	0x01E98774 LDP X20, X19, [X31 + 0x20]
	0x01E98778 LDP X22, X21, [X31 + 0x10]
	0x01E9877C MOV X2, X31
	0x01E98780 LDR X30, [X31], #0x30
	0x01E98784 B 0x1EBD64C
	0x01E98788 BL 0x1C16F20
	0x01E9878C BL 0x1C16F28
	0x01E98790 STP X30, X23, [X31 - 0x30]!
	0x01E98794 STP X22, X21, [X31 + 0x10]
	0x01E98798 STP X20, X19, [X31 + 0x20]
	0x01E9879C ADRP X22, 0x2541000
	0x01E987A0 LDRB W8, [X22 + 0x2BE]
	0x01E987A4 MOV X21, X2
	0x01E987A8 MOV X19, X1
	0x01E987AC MOV X20, X0
	0x01E987B0 TBNZ X8, 0x0, 0x1E987C8
	0x01E987B4 ADRP X0, 0x2266000
	0x01E987B8 LDR X0, [X0 + 0x438]
	0x01E987BC BL 0x1C16CF4
	0x01E987C0 MOVZ W8, 0x1
	0x01E987C4 STRB W8, [X22 + 0x2BE]
	0x01E987C8 CBZ X19, 0x1E98894
	0x01E987CC ADRP X22, 0x2266000
	0x01E987D0 LDR X22, [X22 + 0x438]
	0x01E987D4 LDR W23, [X19 + 0x30]
	0x01E987D8 LDR X0, [X22]
	0x01E987DC LDR W8, [X0 + 0xE0]
	0x01E987E0 CBNZ W8, 0x1E987E8
	0x01E987E4 BL 0x1C16DFC
	0x01E987E8 SUB W8, W23, 0x1
	0x01E987EC CMP W8, 0x5
	0x01E987F0 B.CS 0x1E98804
	0x01E987F4 LDP X20, X19, [X31 + 0x20]
	0x01E987F8 LDP X22, X21, [X31 + 0x10]
	0x01E987FC LDP X30, X23, [X31], #0x30
	0x01E98800 RET
	0x01E98804 LDR X0, [X22]
	0x01E98808 LDR W23, [X19 + 0x30]
	0x01E9880C LDR W8, [X0 + 0xE0]
	0x01E98810 CBNZ W8, 0x1E98818
	0x01E98814 BL 0x1C16DFC
	0x01E98818 ADDS W31, W23, 0x2
	0x01E9881C B.GT 0x1E98830
	0x01E98820 ADD X0, X20, 0x18
	0x01E98824 MOV X1, X19
	0x01E98828 MOV X2, X31
	0x01E9882C BL 0x1EBD750
	0x01E98830 CBZ X21, 0x1E98894
	0x01E98834 LDR W1, [X20 + 0x10]
	0x01E98838 MOV X0, X21
	0x01E9883C BL 0x1E97CBC
	0x01E98840 STR W0, [X19 + 0x30]
	0x01E98844 MOV W21, W0
	0x01E98848 LDR X0, [X22]
	0x01E9884C LDR X20, [X20 + 0x30]
	0x01E98850 LDR W8, [X0 + 0xE0]
	0x01E98854 CBNZ W8, 0x1E9885C
	0x01E98858 BL 0x1C16DFC
	0x01E9885C CBZ X20, 0x1E98894
	0x01E98860 LDR W9, [X20 + 0x18]
	0x01E98864 SUB W8, W21, 0x1
	0x01E98868 CMP W8, W9
	0x01E9886C B.CS 0x1E98898
	0x01E98870 MOVZ W9, 0x18
	0x01E98874 SMADDL X8, X8, X9, X20
	0x01E98878 MOV X1, X19
	0x01E9887C LDP X20, X19, [X31 + 0x20]
	0x01E98880 LDP X22, X21, [X31 + 0x10]
	0x01E98884 ADD X0, X8, 0x20
	0x01E98888 MOV X2, X31
	0x01E9888C LDP X30, X23, [X31], #0x30
	0x01E98890 B 0x1EBD64C
	0x01E98894 BL 0x1C16F20
	0x01E98898 BL 0x1C16F28
	0x01E9889C STP X30, X21, [X31 - 0x20]!
	0x01E988A0 STP X20, X19, [X31 + 0x10]
	0x01E988A4 ADRP X21, 0x2541000
	0x01E988A8 LDRB W8, [X21 + 0x2BF]
	0x01E988AC MOV X19, X1
	0x01E988B0 MOV X20, X0
	0x01E988B4 TBNZ X8, 0x0, 0x1E988CC
	0x01E988B8 ADRP X0, 0x2266000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2542000
	009 Move W8, [X21+693]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x2267000
	017 Move X0, [X0+1120]
	018 Call 0x1C17CF4
	019 Move X0, 0x2267000
	020 Move X0, [X0+1128]
	021 Call 0x1C17CF4
	022 Move X0, 0x2267000
	023 Move X0, [X0+1136]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+693], W8
	027 Move X21, X19
	028 Add X21, X21, 72
	029 Move W8, [X21]
	030 Compare W8, 0
	031 JumpIfEqual {53}
	032 Move X0, [X19+32]
	033 Compare X0, 0
	034 JumpIfEqual {141}
	035 Move X1, X31
	036 Call Simulation.get_HasRuntimeConfig, X0
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {48}
	041 Move X0, [X19+32]
	042 Compare X0, 0
	043 JumpIfEqual {141}
	044 Move W22, [X21]
	045 Move X1, X31
	046 Call Simulation.get_TickRate, X0
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X0, [X19+88]
	049 Compare X0, 0
	050 JumpIfEqual {141}
	051 Move X1, [X19+32]
	052 Call NetworkObjectHeaderSnapshot.Clone, X0, X1
	053 Move X1, [X19+176]
	054 Move W2, 1
	055 Move X0, X19
	056 Call NetworkObjectMeta.GetSnapshot, X0, X1, X2
	057 Move X1, X0
	058 Move X0, X21
	059 Call NetworkObjectHeaderSnapshotList.AddFirst, X0, X1
	060 Move X8, [X19+88]
	061 Compare X8, 0
	062 JumpIfEqual {141}
	063 Move [X8+40], W20
	064 Move X0, [X19+96]
	065 Compare X0, 0
	066 JumpIfNotEqual {75}
	067 Move X8, 0x2267000
	068 Move X8, [X8+1120]
	069 Move W1, 64
	070 Move X0, [X8]
	071 Call 0x1C17D6C
	072 Move [X19+96], X0
	073 Compare X0, 0
	074 JumpIfEqual {141}
	075 Move W2, [X0+24]
	076 Move W1, W31
	077 Move X3, X31
	078 Call Array.Clear, X0, X1, X2
	079 Move X8, [X19+88]
	080 Compare X8, 0
	081 JumpIfEqual {141}
	082 Move X9, 0x2267000
	083 Move X9, [X9+1128]
	084 Move W1, [X8+40]
	085 Add X0, X31, 8
	086 Move [X31+8], X31
	087 Move X2, [X9]
	088 Call Nullable`1<Tick>..ctor, X0, X1
	089 Move X8, [X31+8]
	090 Move X20, X19
	091 Move [X20+104], X8
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 Compare X21, 0
	094 JumpIfEqual {121}
	095 Move X22, 0x2267000
	096 Move X22, [X22+1136]
	097 Move X1, [X22]
	098 Move X0, X20
	099 Call Nullable`1<Tick>.get_Value, X0
	100 Move X23, [X19+96]
	101 Compare X23, 0
	102 JumpIfEqual {141}
	103 Move W8, [X21+40]
	104 Move W9, [X23+24]
	105 Subtract W24, W0, W8
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X8, [X23]
	108 Move X0, X21
	109 Move X1, [X8+64]
	110 Call 0x1C17E00
	111 Compare X0, 0
	112 JumpIfEqual {142}
	113 Move W8, [X23+24]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Add X8, X23, W24
	116 Move [X8+32], X21
	117 Move X21, [X21+24]
	118 Compare X21, 0
	119 JumpIfNotEqual {97}
	120 Move X0, [X19+88]
	121 Move X0, X31
	122 Move X20, [X31+48]
	123 Move X19, [X31+56]
	124 Move X22, [X31+32]
	125 Move X21, [X31+40]
	126 Move X24, [X31+16]
	127 Move X23, [X31+24]
	128 Move X30, [X31+64]
	129 Return X0
	130 Move X22, [X19+80]
	131 Move X0, X21
	132 Move X1, X22
	133 Call NetworkObjectHeaderSnapshotList.Remove, X0, X1
	134 Compare X22, 0
	135 JumpIfEqual {141}
	136 Move X1, [X19+88]
	137 Move X0, X22
	138 Call NetworkObjectHeaderSnapshot.CopyFrom, X0, X1
	139 Move X0, X21
	140 Move X1, X22
	141 Call 0x1C17F20
	142 Call 0x1C17F44
	143 Move X1, X31
	144 Call 0x1C17DEC
	145 Call 0x1C17F28

Method: System.Void AddLatestSnapshotToTimeline()

Disassembly:
	0x01E988BC LDR X0, [X0 + 0x438]
	0x01E988C0 BL 0x1C16CF4
	0x01E988C4 MOVZ W8, 0x1
	0x01E988C8 STRB W8, [X21 + 0x2BF]
	0x01E988CC CBZ X19, 0x1E98924
	0x01E988D0 ADRP X8, 0x2266000
	0x01E988D4 LDR X8, [X8 + 0x438]
	0x01E988D8 LDR X20, [X20 + 0x30]
	0x01E988DC LDR W21, [X19 + 0x30]
	0x01E988E0 LDR X0, [X8]
	0x01E988E4 LDR W8, [X0 + 0xE0]
	0x01E988E8 CBNZ W8, 0x1E988F0
	0x01E988EC BL 0x1C16DFC
	0x01E988F0 CBZ X20, 0x1E98924
	0x01E988F4 LDR W9, [X20 + 0x18]
	0x01E988F8 SUB W8, W21, 0x1
	0x01E988FC CMP W8, W9
	0x01E98900 B.CS 0x1E98928
	0x01E98904 MOVZ W9, 0x18
	0x01E98908 SMADDL X8, X8, X9, X20
	0x01E9890C MOV X1, X19
	0x01E98910 LDP X20, X19, [X31 + 0x10]
	0x01E98914 ADD X0, X8, 0x20
	0x01E98918 MOV X2, X31
	0x01E9891C LDP X30, X21, [X31], #0x20
	0x01E98920 B 0x1EBD64C
	0x01E98924 BL 0x1C16F20
	0x01E98928 BL 0x1C16F28
	0x01E9892C STP X30, X21, [X31 - 0x20]!
	0x01E98930 STP X20, X19, [X31 + 0x10]
	0x01E98934 ADRP X21, 0x2541000
	0x01E98938 LDRB W8, [X21 + 0x2C0]
	0x01E9893C MOV X19, X1
	0x01E98940 MOV X20, X0
	0x01E98944 TBNZ X8, 0x0, 0x1E9895C
	0x01E98948 ADRP X0, 0x2266000
	0x01E9894C LDR X0, [X0 + 0x438]
	0x01E98950 BL 0x1C16CF4
	0x01E98954 MOVZ W8, 0x1
	0x01E98958 STRB W8, [X21 + 0x2C0]
	0x01E9895C CBZ X19, 0x1E989B4
	0x01E98960 ADRP X8, 0x2266000
	0x01E98964 LDR X8, [X8 + 0x438]
	0x01E98968 LDR X20, [X20 + 0x30]
	0x01E9896C LDR W21, [X19 + 0x30]
	0x01E98970 LDR X0, [X8]
	0x01E98974 LDR W8, [X0 + 0xE0]
	0x01E98978 CBNZ W8, 0x1E98980
	0x01E9897C BL 0x1C16DFC
	0x01E98980 CBZ X20, 0x1E989B4
	0x01E98984 LDR W9, [X20 + 0x18]
	0x01E98988 SUB W8, W21, 0x1
	0x01E9898C CMP W8, W9
	0x01E98990 B.CS 0x1E989B8
	0x01E98994 MOVZ W9, 0x18
	0x01E98998 SMADDL X8, X8, X9, X20
	0x01E9899C MOV X1, X19
	0x01E989A0 LDP X20, X19, [X31 + 0x10]
	0x01E989A4 ADD X0, X8, 0x20
	0x01E989A8 MOV X2, X31
	0x01E989AC LDP X30, X21, [X31], #0x20
	0x01E989B0 B 0x1EBD750
	0x01E989B4 BL 0x1C16F20
	0x01E989B8 BL 0x1C16F28
	0x01E989BC STR X30, [X31 - 0x30]!
	0x01E989C0 STP X22, X21, [X31 + 0x10]
	0x01E989C4 STP X20, X19, [X31 + 0x20]
	0x01E989C8 ADRP X21, 0x2541000
	0x01E989CC LDRB W8, [X21 + 0x2C1]
	0x01E989D0 MOV X19, X1
	0x01E989D4 MOV X20, X0
	0x01E989D8 TBNZ X8, 0x0, 0x1E989F0
	0x01E989DC ADRP X0, 0x2266000
	0x01E989E0 LDR X0, [X0 + 0x438]
	0x01E989E4 BL 0x1C16CF4
	0x01E989E8 MOVZ W8, 0x1
	0x01E989EC STRB W8, [X21 + 0x2C1]
	0x01E989F0 CBZ X19, 0x1E98A8C
	0x01E989F4 LDR W22, [X19 + 0x30]
	0x01E989F8 ADDS W31, W22, 0x8000
	0x01E989FC B.NE 0x1E98A08
	0x01E98A00 ADD X0, X20, 0x18
	0x01E98A04 B 0x1E98A64
	0x01E98A08 ADRP X21, 0x2266000
	0x01E98A0C LDR X21, [X21 + 0x438]
	0x01E98A10 LDR X0, [X21]
	0x01E98A14 LDR W8, [X0 + 0xE0]
	0x01E98A18 CBNZ W8, 0x1E98A20
	0x01E98A1C BL 0x1C16DFC
	0x01E98A20 SUB W8, W22, 0x1
	0x01E98A24 CMP W8, 0x4
	0x01E98A28 B.HI 0x1E98A7C
	0x01E98A2C LDR X0, [X21]
	0x01E98A30 LDR X20, [X20 + 0x30]
	0x01E98A34 LDR W21, [X19 + 0x30]
	0x01E98A38 LDR W8, [X0 + 0xE0]
	0x01E98A3C CBNZ W8, 0x1E98A44
	0x01E98A40 BL 0x1C16DFC
	0x01E98A44 CBZ X20, 0x1E98A8C
	0x01E98A48 LDR W9, [X20 + 0x18]
	0x01E98A4C SUB W8, W21, 0x1
	0x01E98A50 CMP W8, W9
	0x01E98A54 B.CS 0x1E98A90
	0x01E98A58 MOVZ W9, 0x18
	0x01E98A5C SMADDL X8, X8, X9, X20
	0x01E98A60 ADD X0, X8, 0x20
	0x01E98A64 MOV X1, X19
	0x01E98A68 LDP X20, X19, [X31 + 0x20]
	0x01E98A6C LDP X22, X21, [X31 + 0x10]
	0x01E98A70 MOV X2, X31
	0x01E98A74 LDR X30, [X31], #0x30
	0x01E98A78 B 0x1EBD750
	0x01E98A7C LDP X20, X19, [X31 + 0x20]
	0x01E98A80 LDP X22, X21, [X31 + 0x10]
	0x01E98A84 LDR X30, [X31], #0x30
	0x01E98A88 RET
	0x01E98A8C BL 0x1C16F20
	0x01E98A90 BL 0x1C16F28
	0x01E98A94 STP X30, X21, [X31 - 0x20]!
	0x01E98A98 STP X20, X19, [X31 + 0x10]
	0x01E98A9C ADRP X20, 0x2541000
	0x01E98AA0 ADRP X21, 0x2266000
	0x01E98AA4 LDRB W8, [X20 + 0x2C2]
	0x01E98AA8 LDR X21, [X21 + 0x4A0]
	0x01E98AAC MOV X19, X0
	0x01E98AB0 TBNZ X8, 0x0, 0x1E98AC8
	0x01E98AB4 ADRP X0, 0x2266000
	0x01E98AB8 LDR X0, [X0 + 0x4A0]
	0x01E98ABC BL 0x1C16CF4
	0x01E98AC0 MOVZ W8, 0x1
	0x01E98AC4 STRB W8, [X20 + 0x2C2]
	0x01E98AC8 LDR X0, [X21]
	0x01E98ACC MOVZ W1, 0x5
	0x01E98AD0 BL 0x1C16D6C
	0x01E98AD4 STR X0, [X19 + 0x30]
	0x01E98AD8 MOV X0, X19
	0x01E98ADC LDP X20, X19, [X31 + 0x10]
	0x01E98AE0 MOV X1, X31
	0x01E98AE4 LDP X30, X21, [X31], #0x20
	0x01E98AE8 B 0x33BDD8C
	0x01E98AEC AND W8, W3, 0x1
	0x01E98AF0 AND W9, W4, 0x1
	0x01E98AF4 STR W1, [X0]
	0x01E98AF8 STR X2, [X0 + 0x8]
	0x01E98AFC STRB W8, [X0 + 0x10]
	0x01E98B00 STRB W9, [X0 + 0x11]
	0x01E98B04 RET
	0x01E98B08 LDR X8, [X0 + 0x8]
	0x01E98B0C CMP X8, 0x0
	0x01E98B10 CSET W0, NE
	0x01E98B14 RET
	0x01E98B18 STP X30, X19, [X31 - 0x10]!
	0x01E98B1C LDR X8, [X0 + 0x8]
	0x01E98B20 CBZ X8, 0x1E98B34
	0x01E98B24 LDR X8, [X8 + 0xB0]
	0x01E98B28 ADD X0, X8, 0x50
	0x01E98B2C LDP X30, X19, [X31], #0x10
	0x01E98B30 RET
	0x01E98B34 ADRP X0, 0x225B000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X20, 0x2542000
	010 Move W8, [X20+694]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x225C000
	017 Move X0, [X0+1448]
	018 Call 0x1C17CF4
	019 Move X0, 0x2267000
	020 Move X0, [X0+1144]
	021 Call 0x1C17CF4
	022 Move X0, 0x2267000
	023 Move X0, [X0+1152]
	024 Call 0x1C17CF4
	025 Move X0, 0x2267000
	026 Move X0, [X0+1160]
	027 Call 0x1C17CF4
	028 Move X0, 0x2267000
	029 Move X0, [X0+1168]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+694], W8
	033 Move X0, [X19+32]
	034 Compare X0, 0
	035 JumpIfEqual {111}
	036 Move X1, X31
	037 Call Simulation.get_IsClient, X0
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {141}
	042 Move X0, [X19+32]
	043 Compare X0, 0
	044 JumpIfEqual {111}
	045 Move X1, X31
	046 Call Simulation.get_HasRuntimeConfig, X0
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {141}
	051 Move X8, [X19+104]
	052 Move X0, X19
	053 Move X9, X8
	054 ShiftRight X9, 32
	055 And X9, X9, 0x7FFFFFFF
	056 And W31, W8, 255
	057 NotImplemented "Instruction CSEL not yet implemented."
	058 Call NetworkObjectMeta.get_Timeline, X0
	059 Compare X0, 0
	060 JumpIfEqual {111}
	061 Move X0, [X0+16]
	062 Compare X0, 0
	063 JumpIfEqual {111}
	064 Move X8, 0x2267000
	065 Move X8, [X8+1168]
	066 Move X1, [X8]
	067 Call RingBuffer`1<TimelinePoint>.get_IsEmpty, X0
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {73}
	072 Move W21, W31
	073 Move X0, X19
	074 Call NetworkObjectMeta.get_Timeline, X0
	075 Compare X0, 0
	076 JumpIfEqual {150}
	077 Move X0, [X0+16]
	078 Compare X0, 0
	079 JumpIfEqual {151}
	080 Move X8, 0x2267000
	081 Move X8, [X8+1160]
	082 Move X1, [X8]
	083 Call RingBuffer`1<TimelinePoint>.Back, X0
	084 Move W21, [X0+4]
	085 Move X8, [X19+176]
	086 Compare X8, 0
	087 JumpIfEqual {111}
	088 Move X24, 0x225C000
	089 Move X24, [X24+1448]
	090 Move X23, X31
	091 NotImplemented "Instruction LDRSH not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 NotImplemented "Instruction LDRSH not yet implemented."
	094 Move X0, [X24]
	095 Subtract X9, X10, X9
	096 Add X9, X23, X9
	097 Move W10, [X0+224]
	098 Move W22, [X8]
	099 Compare W10, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move W0, W21
	103 Move W1, W22
	104 Move X2, X31
	105 Call Math.Max, X0, X1
	106 Move X8, [X19+176]
	107 NotImplemented "Instruction BIC not yet implemented."
	108 Add X23, X23, 1
	109 Compare X8, 0
	110 JumpIfNotEqual {91}
	111 Call 0x1C17F20
	112 Move X0, X19
	113 Call NetworkObjectMeta.get_Timeline, X0
	114 Move X8, [X19+32]
	115 Compare X8, 0
	116 JumpIfEqual {111}
	117 Move X22, X0
	118 Move X0, X8
	119 Move X1, X31
	120 Call Simulation.get_TickDeltaDouble, X0
	121 Move W2, W21
	122 Add X0, X31, 0
	123 Move X1, X20
	124 Move X3, X31
	125 Move [X31], X31
	126 Move [X31+8], X31
	127 Call TimelinePoint..ctor, X0, X1, X2, V0
	128 Move X0, [X19+32]
	129 Compare X0, 0
	130 JumpIfEqual {111}
	131 Move X1, X31
	132 Call Simulation.get_TickDeltaDouble, X0
	133 Compare X22, 0
	134 JumpIfEqual {111}
	135 Move X1, [X31]
	136 Move X2, [X31+8]
	137 Move X0, X22
	138 Move W3, W31
	139 Move X4, X31
	140 Call Timeline.AddPoint, X0, X1, V0, X2
	141 Move X20, [X31+64]
	142 Move X19, [X31+72]
	143 Move X22, [X31+48]
	144 Move X21, [X31+56]
	145 Move X24, [X31+32]
	146 Move X23, [X31+40]
	147 Move X30, [X31+16]
	148 Add X31, X31, 80
	149 Return 
	150 Call 0x1C17F20
	151 Call 0x1C17F20
	152 Move X21, X0
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move X0, X21
	155 Call 0x3EB2AD0
	156 Move X21, X0
	157 Move X0, 0x225C000
	158 Move X0, [X0+2000]
	159 Call 0x1C17D08
	160 Move X8, [X21]
	161 Move X1, [X8]
	162 Call 0x1C18270
	163 Move TEMP, X0
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfNotEqual {179}
	167 Move X21, [X21]
	168 Call 0x3EB2AE0
	169 Move X0, 0x2264000
	170 Move X0, [X0+2224]
	171 Call 0x1C17D08
	172 Move W8, [X0+224]
	173 Compare W8, 0
	174 JumpIfNotEqual {176}
	175 Call 0x1C17DFC
	176 Move X0, X21
	177 Move X1, X31
	178 Call Log.Exception, X0
	179 Move W0, 8
	180 Call 0x3EB2AF0
	181 Move X8, [X21]
	182 Move [X0], X8
	183 Move X1, 0x201D000
	184 Add X1, X1, 3672
	185 Move X2, X31
	186 Call 0x3EB2B00
	187 Move X21, X0
	188 Call 0x3EB2AE0
	189 Move X0, X21
	190 Call 0x1D2D690
	191 Call 0x1991590

Method: Fusion.NetworkObjectHeaderSnapshot FindSnapshot(Fusion.Tick tick)

Disassembly:
	0x01E98B38 LDR X0, [X0 + 0x5B0]
	0x01E98B3C BL 0x1C16D08
	0x01E98B40 BL 0x1C16F10
	0x01E98B44 MOV X1, X31
	0x01E98B48 MOV X19, X0
	0x01E98B4C BL 0x337DEC0
	0x01E98B50 ADRP X0, 0x2266000
	0x01E98B54 LDR X0, [X0 + 0x4A8]
	0x01E98B58 BL 0x1C16D08
	0x01E98B5C MOV X1, X0
	0x01E98B60 MOV X0, X19
	0x01E98B64 BL 0x1C16DEC
	0x01E98B68 AND W8, W3, 0x1
	0x01E98B6C AND W9, W4, 0x1
	0x01E98B70 STP X1, X2, [X0]
	0x01E98B74 STRB W8, [X0 + 0x10]
	0x01E98B78 STRB W9, [X0 + 0x11]
	0x01E98B7C RET
	0x01E98B80 SUB X31, X31, 0x40
	0x01E98B84 STR X30, [X31 + 0x10]
	0x01E98B88 STP X22, X21, [X31 + 0x20]
	0x01E98B8C STP X20, X19, [X31 + 0x30]
	0x01E98B90 ADRP X20, 0x2541000
	0x01E98B94 ADRP X21, 0x225B000
	0x01E98B98 LDRB W8, [X20 + 0x2C3]
	0x01E98B9C LDR X21, [X21 + 0x9D0]
	0x01E98BA0 MOV X19, X0
	0x01E98BA4 TBNZ X8, 0x0, 0x1E98BE0
	0x01E98BA8 ADRP X0, 0x225B000
	0x01E98BAC LDR X0, [X0 + 0xB58]
	0x01E98BB0 BL 0x1C16CF4
	0x01E98BB4 ADRP X0, 0x2266000
	0x01E98BB8 LDR X0, [X0 + 0x378]
	0x01E98BBC BL 0x1C16CF4
	0x01E98BC0 ADRP X0, 0x225B000
	0x01E98BC4 LDR X0, [X0 + 0x9D0]
	0x01E98BC8 BL 0x1C16CF4
	0x01E98BCC ADRP X0, 0x2266000
	0x01E98BD0 LDR X0, [X0 + 0x4B0]
	0x01E98BD4 BL 0x1C16CF4
	0x01E98BD8 MOVZ W8, 0x1
	0x01E98BDC STRB W8, [X20 + 0x2C3]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2542000
	006 Move W8, [X21+695]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x2267000
	014 Move X0, [X0+1152]
	015 Call 0x1C17CF4
	016 Move X0, 0x2267000
	017 Move X0, [X0+1136]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+695], W8
	021 Move X0, X20
	022 Add X0, X0, 104
	023 Move W8, [X0]
	024 Compare W8, 0
	025 JumpIfEqual {38}
	026 Move X8, 0x2267000
	027 Move X8, [X8+1136]
	028 Move X1, [X8]
	029 Call Nullable`1<Tick>.get_Value, X0
	030 Move X8, [X20+96]
	031 Compare X8, 0
	032 JumpIfEqual {51}
	033 Move W10, [X8+24]
	034 Subtract W9, W0, W19
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Add X8, X8, W9
	037 Move X0, [X8+32]
	038 Move X0, [X20+88]
	039 Compare X0, 0
	040 JumpIfEqual {46}
	041 Move W8, [X0+40]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, [X0+24]
	044 Compare X0, 0
	045 JumpIfNotEqual {41}
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return X0
	051 Call 0x1C17F20

Method: System.Boolean TryFindSnapshot(Fusion.Tick tick, out Fusion.NetworkObjectHeaderSnapshot snapshot)

Disassembly:
	0x01E98BE0 LDR X0, [X21]
	0x01E98BE4 MOVZ W1, 0x4
	0x01E98BE8 BL 0x1C16D6C
	0x01E98BEC CBZ X0, 0x1E98D28
	0x01E98BF0 LDR X21, [X19]
	0x01E98BF4 MOV X20, X0
	0x01E98BF8 CBZ X21, 0x1E98C10
	0x01E98BFC LDR X8, [X20]
	0x01E98C00 MOV X0, X21
	0x01E98C04 LDR X1, [X8 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 And X1, X1, 0
	004 Move X19, X2
	005 Call NetworkObjectMeta.FindSnapshot, X0, X1
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Move [X19], X0
	009 Move W0, W8
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return X0

Method: System.Void Init(Fusion.NetworkObjectHeader* ptr)

Disassembly:
	0x01E98C08 BL 0x1C16E00
	0x01E98C0C CBZ X0, 0x1E98D1C

ISIL:
	001 Move [X0+176], X1
	002 Return 

Method: System.Int32* GetBehaviourPtr(Fusion.NetworkBehaviour behaviour)

Disassembly:
	0x01E98C10 LDR W8, [X20 + 0x18]
	0x01E98C14 CBZ W8, 0x1E98D18
	0x01E98C18 ADRP X8, 0x2266000
	0x01E98C1C LDR X8, [X8 + 0x378]
	0x01E98C20 STR X21, [X20 + 0x20]
	0x01E98C24 LDR X9, [X19 + 0x8]
	0x01E98C28 ADD X1, X31, 0x18
	0x01E98C2C LDR X0, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {9}
	004 Move X8, [X0+176]
	005 NotImplemented "Instruction LDRSW not yet implemented."
	006 Add X0, X8, X9
	007 Move X30, [X31+16]
	008 Return X0
	009 Call 0x1C17F20

Method: System.Int32 EncodePriorityLevel(System.Int32 level)

Disassembly:
	0x01E98C30 STR X9, [X31 + 0x18]
	0x01E98C34 BL 0x1C16E04
	0x01E98C38 MOV X21, X0
	0x01E98C3C CBZ X0, 0x1E98C54
	0x01E98C40 LDR X8, [X20]
	0x01E98C44 MOV X0, X21
	0x01E98C48 LDR X1, [X8 + 0x40]
	0x01E98C4C BL 0x1C16E00
	0x01E98C50 CBZ X0, 0x1E98D1C
	0x01E98C54 LDR W8, [X20 + 0x18]
	0x01E98C58 CMP W8, 0x1
	0x01E98C5C B.LS 0x1E98D18
	0x01E98C60 ADRP X22, 0x225B000
	0x01E98C64 LDR X22, [X22 + 0xB58]
	0x01E98C68 STR X21, [X20 + 0x28]
	0x01E98C6C LDRB W8, [X19 + 0x10]
	0x01E98C70 ADD X1, X31, 0xC
	0x01E98C74 LDR X0, [X22]
	0x01E98C78 STRB W8, [X31 + 0xC]
	0x01E98C7C BL 0x1C16E04
	0x01E98C80 MOV X21, X0
	0x01E98C84 CBZ X0, 0x1E98C9C
	0x01E98C88 LDR X8, [X20]
	0x01E98C8C MOV X0, X21
	0x01E98C90 LDR X1, [X8 + 0x40]
	0x01E98C94 BL 0x1C16E00

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2542000
	006 Move X21, 0x2263000
	007 Move W8, [X20+696]
	008 Move X21, [X21+3176]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2263000
	015 Move X0, [X0+3176]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+696], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move W2, 4
	025 Move W0, W19
	026 Move W1, W31
	027 Move X3, X31
	028 Call Maths.Clamp, X0, X1, X2
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Add W0, W0, 1
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return X0

Method: System.Int32 DecodePriorityLevel(System.Int32 level)

Disassembly:
	0x01E98C98 CBZ X0, 0x1E98D1C
	0x01E98C9C LDR W8, [X20 + 0x18]

ISIL:
	001 Subtract W0, W0, 1
	002 Return X0

Method: System.Boolean IsIdle(System.Int32 level)

Disassembly:
	0x01E98CA0 CMP W8, 0x2
	0x01E98CA4 B.LS 0x1E98D18
	0x01E98CA8 STR X21, [X20 + 0x30]

ISIL:
	001 Add W31, W0, 1
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Boolean IsActive(System.Int32 level)

Disassembly:
	0x01E98CAC LDRB W8, [X19 + 0x11]
	0x01E98CB0 LDR X0, [X22]
	0x01E98CB4 ADD X1, X31, 0x8
	0x01E98CB8 STRB W8, [X31 + 0x8]

ISIL:
	001 Subtract W8, W0, 1
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Int32 GetPriority(Fusion.PlayerRef player)

Disassembly:
	0x01E98CBC BL 0x1C16E04
	0x01E98CC0 MOV X19, X0
	0x01E98CC4 CBZ X0, 0x1E98CDC
	0x01E98CC8 LDR X8, [X20]
	0x01E98CCC MOV X0, X19
	0x01E98CD0 LDR X1, [X8 + 0x40]
	0x01E98CD4 BL 0x1C16E00
	0x01E98CD8 CBZ X0, 0x1E98D1C
	0x01E98CDC LDR W8, [X20 + 0x18]
	0x01E98CE0 CMP W8, 0x3
	0x01E98CE4 B.LS 0x1E98D18
	0x01E98CE8 ADRP X8, 0x2266000
	0x01E98CEC LDR X8, [X8 + 0x4B0]
	0x01E98CF0 STR X19, [X20 + 0x38]
	0x01E98CF4 MOV X1, X20
	0x01E98CF8 MOV X2, X31
	0x01E98CFC LDR X0, [X8]
	0x01E98D00 BL 0x3227C5C
	0x01E98D04 LDP X20, X19, [X31 + 0x30]
	0x01E98D08 LDP X22, X21, [X31 + 0x20]
	0x01E98D0C LDR X30, [X31 + 0x10]
	0x01E98D10 ADD X31, X31, 0x40
	0x01E98D14 RET
	0x01E98D18 BL 0x1C16F28
	0x01E98D1C BL 0x1C16F44
	0x01E98D20 MOV X1, X31
	0x01E98D24 BL 0x1C16DEC
	0x01E98D28 BL 0x1C16F20
	0x01E98D2C STP X30, X19, [X31 - 0x10]!
	0x01E98D30 ADRP X0, 0x2264000
	0x01E98D34 LDR X0, [X0 + 0x758]
	0x01E98D38 BL 0x1C16D08
	0x01E98D3C BL 0x1C16F10
	0x01E98D40 MOV X1, X31
	0x01E98D44 MOV X19, X0
	0x01E98D48 BL 0x3380288
	0x01E98D4C ADRP X0, 0x2266000
	0x01E98D50 LDR X0, [X0 + 0x4B8]
	0x01E98D54 BL 0x1C16D08
	0x01E98D58 MOV X1, X0
	0x01E98D5C MOV X0, X19
	0x01E98D60 BL 0x1C16DEC
	0x01E98D64 STP X30, X19, [X31 - 0x10]!
	0x01E98D68 ADRP X0, 0x2264000
	0x01E98D6C LDR X0, [X0 + 0x758]
	0x01E98D70 BL 0x1C16D08
	0x01E98D74 BL 0x1C16F10
	0x01E98D78 MOV X1, X31
	0x01E98D7C MOV X19, X0
	0x01E98D80 BL 0x3380288
	0x01E98D84 ADRP X0, 0x2266000
	0x01E98D88 LDR X0, [X0 + 0x4C0]
	0x01E98D8C BL 0x1C16D08
	0x01E98D90 MOV X1, X0
	0x01E98D94 MOV X0, X19
	0x01E98D98 BL 0x1C16DEC
	0x01E98D9C MOV X1, X31
	0x01E98DA0 B 0x33BDD8C
	0x01E98DA4 STR X30, [X31 - 0x10]!
	0x01E98DA8 BL 0x1E98D2C
	0x01E98DAC STR X30, [X31 - 0x10]!
	0x01E98DB0 BL 0x1E98D64
	0x01E98DB4 STR X30, [X31 - 0x10]!
	0x01E98DB8 CBZ X1, 0x1E98DD8
	0x01E98DBC CBZ X2, 0x1E98DD8
	0x01E98DC0 LDR W8, [X2 + 0x40]
	0x01E98DC4 ADD X0, X1, 0x40
	0x01E98DC8 MOV X2, X31
	0x01E98DCC MOV W1, W8
	0x01E98DD0 LDR X30, [X31], #0x10
	0x01E98DD4 B 0x3399A54
	0x01E98DD8 BL 0x1C16F20
	0x01E98DDC MOV X1, X31
	0x01E98DE0 B 0x33BDD8C
	0x01E98DE4 STR X30, [X31 - 0x20]!
	0x01E98DE8 STP X20, X19, [X31 + 0x10]
	0x01E98DEC ADRP X19, 0x2541000
	0x01E98DF0 ADRP X20, 0x2266000
	0x01E98DF4 LDRB W8, [X19 + 0x2C4]
	0x01E98DF8 LDR X20, [X20 + 0x4C8]
	0x01E98DFC TBNZ X8, 0x0, 0x1E98E14
	0x01E98E00 ADRP X0, 0x2266000
	0x01E98E04 LDR X0, [X0 + 0x4C8]
	0x01E98E08 BL 0x1C16CF4
	0x01E98E0C MOVZ W8, 0x1
	0x01E98E10 STRB W8, [X19 + 0x2C4]
	0x01E98E14 LDR X0, [X20]
	0x01E98E18 BL 0x1C16F10
	0x01E98E1C MOV X1, X31
	0x01E98E20 MOV X19, X0
	0x01E98E24 BL 0x33BDD8C
	0x01E98E28 LDR X8, [X20]
	0x01E98E2C LDR X8, [X8 + 0xB8]
	0x01E98E30 STR X19, [X8]
	0x01E98E34 LDP X20, X19, [X31 + 0x10]
	0x01E98E38 LDR X30, [X31], #0x20
	0x01E98E3C RET
	0x01E98E40 STR X30, [X31 - 0x20]!
	0x01E98E44 STP X20, X19, [X31 + 0x10]
	0x01E98E48 ADRP X20, 0x2541000
	0x01E98E4C ADRP X19, 0x2266000
	0x01E98E50 LDRB W8, [X20 + 0x2C5]
	0x01E98E54 LDR X19, [X19 + 0x378]
	0x01E98E58 TBNZ X8, 0x0, 0x1E98E70
	0x01E98E5C ADRP X0, 0x2266000
	0x01E98E60 LDR X0, [X0 + 0x378]
	0x01E98E64 BL 0x1C16CF4
	0x01E98E68 MOVZ W8, 0x1
	0x01E98E6C STRB W8, [X20 + 0x2C5]
	0x01E98E70 LDR X0, [X19]
	0x01E98E74 LDR W8, [X0 + 0xE0]
	0x01E98E78 CBNZ W8, 0x1E98E84
	0x01E98E7C BL 0x1C16DFC
	0x01E98E80 LDR X0, [X19]
	0x01E98E84 LDR X8, [X0 + 0xB8]
	0x01E98E88 LDP X20, X19, [X31 + 0x10]
	0x01E98E8C LDR X0, [X8]
	0x01E98E90 LDR X30, [X31], #0x20
	0x01E98E94 RET
	0x01E98E98 STR X30, [X31 - 0x20]!
	0x01E98E9C STP X20, X19, [X31 + 0x10]
	0x01E98EA0 ADRP X19, 0x2541000
	0x01E98EA4 ADRP X20, 0x2266000
	0x01E98EA8 LDRB W8, [X19 + 0x2C6]
	0x01E98EAC LDR X20, [X20 + 0x378]
	0x01E98EB0 TBNZ X8, 0x0, 0x1E98EC8
	0x01E98EB4 ADRP X0, 0x2266000
	0x01E98EB8 LDR X0, [X0 + 0x378]
	0x01E98EBC BL 0x1C16CF4
	0x01E98EC0 MOVZ W8, 0x1
	0x01E98EC4 STRB W8, [X19 + 0x2C6]
	0x01E98EC8 LDR X0, [X20]
	0x01E98ECC LDR W8, [X0 + 0xE0]
	0x01E98ED0 CBNZ W8, 0x1E98ED8
	0x01E98ED4 BL 0x1C16DFC
	0x01E98ED8 LDP X20, X19, [X31 + 0x10]
	0x01E98EDC MOVZ X0, 0x1
	0x01E98EE0 MOVK X0, 0x2
	0x01E98EE4 LDR X30, [X31], #0x20
	0x01E98EE8 RET
	0x01E98EEC MOVZ X8, 0x2
	0x01E98EF0 BFM X8, X0, 0x0, 0xF
	0x01E98EF4 MOV X0, X8
	0x01E98EF8 RET
	0x01E98EFC LDP W8, W9, [X0]
	0x01E98F00 ORR W8, W8, W9, 0x0
	0x01E98F04 AND W9, W9, 0x3
	0x01E98F08 CMP W8, 0x0
	0x01E98F0C MOVZ W8, 0x4
	0x01E98F10 CSEL W0, W8, W9, EQ
	0x01E98F14 RET
	0x01E98F18 STR X30, [X31 - 0x20]!
	0x01E98F1C STP X20, X19, [X31 + 0x10]
	0x01E98F20 CBZ W0, 0x1E98F48
	0x01E98F24 CMP W1, 0x400000
	0x01E98F28 B.CS 0x1E98F90
	0x01E98F2C UBFM W8, W1, 0x1E, 0x1D
	0x01E98F30 LDP X20, X19, [X31 + 0x10]
	0x01E98F34 ORR W8, W8, W2, 0x18
	0x01E98F38 ORR W8, W8, 0x3
	0x01E98F3C BFM X0, X8, 0x20, 0x1F
	0x01E98F40 LDR X30, [X31], #0x20
	0x01E98F44 RET
	0x01E98F48 ADRP X0, 0x2263000
	0x01E98F4C LDR X0, [X0 + 0x578]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x2542000
	008 Move W8, [X21+697]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x2267000
	016 Move X0, [X0+1080]
	017 Call 0x1C17CF4
	018 Move X0, 0x225F000
	019 Move X0, [X0+3648]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+697], W8
	023 Move X0, [X20+32]
	024 Compare X0, 0
	025 JumpIfEqual {115}
	026 Move X21, 0x2267000
	027 Move X21, [X21+1080]
	028 Move X1, X31
	029 Call Simulation.get_Topology, X0
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X8, [X20+176]
	032 Compare X8, 0
	033 JumpIfEqual {115}
	034 Move X22, 0x225F000
	035 Move X22, [X22+3648]
	036 Move W23, [X8+28]
	037 Move X0, [X22]
	038 Move W9, [X0+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, [X22]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X0, [X21]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X19, 0x2542000
	055 Move W8, [X19+754]
	056 Compare W8, 0
	057 JumpIfNotEqual {63}
	058 Move X0, 0x2263000
	059 Move X0, [X0+3176]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X19+754], W8
	063 Move X8, 0x2263000
	064 Move X8, [X8+3176]
	065 Move X0, [X8]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move W2, 4
	071 Move W0, W31
	072 Move X1, [X20+184]
	073 Compare X1, 0
	074 JumpIfEqual {143}
	075 Move W8, [X1+96]
	076 Move TEMP, X8
	077 And TEMP, TEMP, 2
	078 Compare TEMP, 2
	079 JumpIfEqual {143}
	080 Move X8, [X1+80]
	081 Compare X8, 0
	082 JumpIfEqual {143}
	083 Move X0, [X8+64]
	084 Move X9, [X8+24]
	085 Move X3, [X8+40]
	086 And X2, X19, 0
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move W19, W0
	089 Move X0, [X21]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move X20, 0x2542000
	095 Move W8, [X20+754]
	096 Compare W8, 0
	097 JumpIfNotEqual {103}
	098 Move X0, 0x2263000
	099 Move X0, [X0+3176]
	100 Call 0x1C17CF4
	101 Move W8, 1
	102 Move [X20+754], W8
	103 Move X8, 0x2263000
	104 Move X8, [X8+3176]
	105 Move X0, [X8]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Subtract W0, W19, 1
	111 Move W2, 4
	112 Move W1, W31
	113 Move X3, X31
	114 Call Maths.Clamp, X0, X1, X2
	115 Call 0x1C17F20
	116 Move X19, X0
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X0, X19
	119 Call 0x3EB2AD0
	120 Move X19, X0
	121 Move X0, 0x225C000
	122 Move X0, [X0+2000]
	123 Call 0x1C17D08
	124 Move X8, [X19]
	125 Move X1, [X8]
	126 Call 0x1C18270
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfNotEqual {177}
	131 Move X19, [X19]
	132 Call 0x3EB2AE0
	133 Move X0, 0x2264000
	134 Move X0, [X0+2224]
	135 Call 0x1C17D08
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {140}
	139 Call 0x1C17DFC
	140 Move X0, X19
	141 Move X1, X31
	142 Call Log.Exception, X0
	143 Move X0, [X21]
	144 Move W8, [X0+224]
	145 Compare W8, 0
	146 JumpIfNotEqual {148}
	147 Call 0x1C17DFC
	148 Move X19, 0x2542000
	149 Move W8, [X19+754]
	150 Compare W8, 0
	151 JumpIfNotEqual {157}
	152 Move X0, 0x2263000
	153 Move X0, [X0+3176]
	154 Call 0x1C17CF4
	155 Move W8, 1
	156 Move [X19+754], W8
	157 Move X8, 0x2263000
	158 Move X8, [X8+3176]
	159 Move X0, [X8]
	160 Move W8, [X0+224]
	161 Compare W8, 0
	162 JumpIfNotEqual {164}
	163 Call 0x1C17DFC
	164 Move W0, 4
	165 Move W2, 4
	166 Move W1, W31
	167 Move X3, X31
	168 Call Maths.Clamp, X0, X1, X2
	169 Move X20, [X31+32]
	170 Move X19, [X31+40]
	171 Move X22, [X31+16]
	172 Move X21, [X31+24]
	173 Add W0, W0, 1
	174 Move X30, [X31+48]
	175 Move X23, [X31+56]
	176 Return X0
	177 Move W0, 8
	178 Call 0x3EB2AF0
	179 Move X8, [X19]
	180 Move [X0], X8
	181 Move X1, 0x201D000
	182 Add X1, X1, 3672
	183 Move X2, X31
	184 Call 0x3EB2B00
	185 Move X19, X0
	186 Call 0x3EB2AE0
	187 Move X0, X19
	188 Call 0x1D2D690
	189 Call 0x1991590

