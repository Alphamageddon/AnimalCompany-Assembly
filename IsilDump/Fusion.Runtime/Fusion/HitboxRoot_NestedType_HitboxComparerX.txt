Type: Fusion.HitboxRoot/HitboxComparerX

Method: System.Int32 Compare(Fusion.HitboxRoot a, Fusion.HitboxRoot b)

Disassembly:
	0x01E865C0 CMP X25, X24
	0x01E865C4 MOV X26, X25
	0x01E865C8 STR X21, [X9 + 0x20]
	0x01E865CC B.NE 0x1E864F0
	0x01E865D0 LDP X20, X19, [X31 + 0x40]
	0x01E865D4 LDP X22, X21, [X31 + 0x30]
	0x01E865D8 LDP X24, X23, [X31 + 0x20]
	0x01E865DC LDP X26, X25, [X31 + 0x10]
	0x01E865E0 LDR X30, [X31], #0x50
	0x01E865E4 RET
	0x01E865E8 BL 0x1C16F20
	0x01E865EC BL 0x1C16F28
	0x01E865F0 BL 0x1C16F44
	0x01E865F4 MOV X1, X31
	0x01E865F8 BL 0x1C16DEC
	0x01E865FC STR X30, [X31 - 0x40]!
	0x01E86600 STP X24, X23, [X31 + 0x10]
	0x01E86604 STP X22, X21, [X31 + 0x20]
	0x01E86608 STP X20, X19, [X31 + 0x30]
	0x01E8660C ADRP X22, 0x2553000
	0x01E86610 LDRB W8, [X22 + 0x209]
	0x01E86614 MOV W19, W2
	0x01E86618 MOV W20, W1
	0x01E8661C MOV X21, X0
	0x01E86620 TBNZ X8, 0x0, 0x1E86638
	0x01E86624 ADRP X0, 0x2277000

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {33}
	006 Move X0, X1
	007 Move X1, X31
	008 Move X19, X2
	009 Call Component.get_transform, X0
	010 Compare X0, 0
	011 JumpIfEqual {33}
	012 Move X1, X31
	013 Call Transform.get_position, X0
	014 Move [X31], S0
	015 Move [X31+8], S1
	016 Move [X31+8], S2
	017 Compare X19, 0
	018 JumpIfEqual {33}
	019 Move X0, X19
	020 Move X1, X31
	021 Call Component.get_transform, X0
	022 Compare X0, 0
	023 JumpIfEqual {33}
	024 Move X1, X31
	025 Call Transform.get_position, X0
	026 Add X0, X31, 0
	027 Move X1, X31
	028 Call Single.CompareTo, X0, V0
	029 Move X30, [X31+16]
	030 Move X19, [X31+24]
	031 Add X31, X31, 32
	032 Return X0
	033 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01E86628 LDR X0, [X0 + 0xE98]
	0x01E8662C BL 0x1C16CF4

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

