Type: Fusion.NetworkStructUtils

Method: System.Void ResetStatics()

Disassembly:
	0x01EDF238 FADD S5, S4, S5
	0x01EDF23C FADD S6, S6, S17
	0x01EDF240 FADD S4, S16, S18
	0x01EDF244 FADD S16, S19, S22
	0x01EDF248 FADD S17, S20, S23
	0x01EDF24C FSUB S18, S19, S22
	0x01EDF250 FSUB S19, S20, S23
	0x01EDF254 FADD S20, S24, S27
	0x01EDF258 FADD S22, S25, S28
	0x01EDF25C FADD S23, S26, S29
	0x01EDF260 FSUB S24, S24, S27
	0x01EDF264 FSUB S25, S25, S28
	0x01EDF268 FSUB S26, S26, S29
	0x01EDF26C FADD S27, S30, S21
	0x01EDF270 FSUB S21, S30, S21
	0x01EDF274 FMOV S7, W31
	0x01EDF278 FSUB S28, S16, S18
	0x01EDF27C FSUB S29, S17, S19
	0x01EDF280 FSUB S30, S20, S24
	0x01EDF284 FSUB S31, S22, S25
	0x01EDF288 FSUB S8, S23, S26
	0x01EDF28C FSUB S9, S27, S21
	0x01EDF290 FMOV S0, 0.5
	0x01EDF294 FMUL S10, S30, S31
	0x01EDF298 FMUL S30, S30, S8
	0x01EDF29C FMUL S31, S31, S8
	0x01EDF2A0 FMUL S8, S28, S29
	0x01EDF2A4 FMUL S28, S9, S28
	0x01EDF2A8 FMUL S29, S9, S29
	0x01EDF2AC FSUB S9, S7, S18

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x24FB000
	005 Move X19, 0x2220000
	006 Move W8, [X20+1387]
	007 Move X19, [X19+808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x221F000
	013 Move X0, [X0+1752]
	014 Call 0x1C17CF4
	015 Move X0, 0x2220000
	016 Move X0, [X0+808]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1387], W8
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X19]
	026 Move X8, [X0+184]
	027 Move X0, [X8]
	028 Compare X0, 0
	029 JumpIfEqual {38}
	030 Move X8, 0x221F000
	031 Move X8, [X8+1752]
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X1, [X8]
	035 Move X30, [X31+32]
	036 Call Dictionary`2<Object, Int32>.Clear, X0
	037 Return 
	038 Call 0x1C17F20

Method: System.Int32 GetWordCount()

Disassembly:
	0x0222D62C BL 0x1C16DFC
	0x0222D630 MOV X0, X20
	0x0222D634 MOV V0.16B, V14.16B
	0x0222D638 MOV V1.16B, V13.16B
	0x0222D63C MOV V2.16B, V12.16B
	0x0222D640 MOV V3.16B, V11.16B
	0x0222D644 MOV V4.16B, V10.16B
	0x0222D648 MOV V5.16B, V9.16B
	0x0222D64C MOV V6.16B, V8.16B
	0x0222D650 MOV X1, X31
	0x0222D654 BL 0x3C38B4C
	0x0222D658 LDR X8, [X19 + 0x38]
	0x0222D65C MOV X20, X0
	0x0222D660 LDR X19, [X8]
	0x0222D664 LDRB W8, [X19 + 0x135]
	0x0222D668 TBNZ X8, 0x0, 0x222D678
	0x0222D66C MOV X0, X19
	0x0222D670 BL 0x1C5C684
	0x0222D674 MOV X19, X0
	0x0222D678 CBZ X20, 0x222D698
	0x0222D67C MOV X0, X20
	0x0222D680 MOV X1, X19
	0x0222D684 BL 0x1C16E00
	0x0222D688 CBNZ X0, 0x222D69C
	0x0222D68C MOV X0, X20
	0x0222D690 MOV X1, X19
	0x0222D694 BL 0x1C171E0
	0x0222D698 MOV X0, X31
	0x0222D69C LDP X20, X19, [X31 + 0x40]
	0x0222D6A0 LDR X30, [X31 + 0x38]
	0x0222D6A4 LDP D9, D8, [X31 + 0x28]
	0x0222D6A8 LDP D11, D10, [X31 + 0x18]
	0x0222D6AC LDP D13, D12, [X31 + 0x8]
	0x0222D6B0 LDR V14, [X31], #0x50
	0x0222D6B4 RET
	0x0222D6B8 STR D14, [X31 - 0x60]!
	0x0222D6BC STP D13, D12, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+56]
	004 Compare X8, 0
	005 JumpIfNotEqual {19}
	006 Move X19, X0
	007 Move X0, 0x1ED2000
	008 Move X0, [X0+808]
	009 Call 0x1C17CF4
	010 Move X0, 0x1EC7000
	011 Move X0, [X0+1728]
	012 Call 0x1C17CF4
	013 Move X8, [X19+56]
	014 Compare X8, 0
	015 JumpIfNotEqual {19}
	016 Move X0, X19
	017 Call 0x1C5D6E0
	018 Move X8, [X19+56]
	019 Move X9, 0x1EC7000
	020 Move X9, [X9+1728]
	021 Move X19, [X8]
	022 Move X0, [X9]
	023 Move W9, [X0+224]
	024 Compare W9, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X19
	028 Move X1, X31
	029 Call Type.GetTypeFromHandle, X0
	030 Move X8, 0x1ED2000
	031 Move X8, [X8+808]
	032 Move X19, X0
	033 Move X8, [X8]
	034 Move W9, [X8+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Move X0, X19
	040 Move X1, X31
	041 Move X30, [X31+16]
	042 Move X19, [X31+24]
	043 Call NetworkStructUtils.GetWordCount, X0
	044 Return X0

Method: System.Int32 GetWordCount(System.Type type)

Disassembly:
	0x01EDF2B0 FMUL S9, S9, S0
	0x01EDF2B4 FADD S30, S10, S30
	0x01EDF2B8 FADD S18, S18, S9
	0x01EDF2BC FSUB S10, S7, S19
	0x01EDF2C0 FADD S28, S28, S29
	0x01EDF2C4 FSUB S29, S7, S24
	0x01EDF2C8 FADD S30, S31, S30
	0x01EDF2CC FSUB S31, S7, S25
	0x01EDF2D0 FSUB S18, S18, S9
	0x01EDF2D4 FSUB S9, S7, S26
	0x01EDF2D8 FSUB S7, S7, S21
	0x01EDF2DC FMUL S29, S29, S0
	0x01EDF2E0 FMUL S7, S7, S0
	0x01EDF2E4 FADD S24, S24, S29
	0x01EDF2E8 FADD S21, S21, S7
	0x01EDF2EC FMUL S10, S10, S0
	0x01EDF2F0 FSUB S24, S24, S29
	0x01EDF2F4 FSUB S21, S21, S7
	0x01EDF2F8 FMUL S31, S31, S0
	0x01EDF2FC FADD S19, S19, S10
	0x01EDF300 FSUB S16, S16, S18
	0x01EDF304 FSUB S20, S20, S24
	0x01EDF308 FSUB S27, S27, S21
	0x01EDF30C FMUL S9, S9, S0
	0x01EDF310 FADD S25, S25, S31
	0x01EDF314 FSUB S19, S19, S10
	0x01EDF318 FMUL S16, S16, S0
	0x01EDF31C FMUL S20, S20, S0
	0x01EDF320 FMUL S27, S27, S0
	0x01EDF324 FADD S26, S26, S9
	0x01EDF328 FSUB S25, S25, S31
	0x01EDF32C FADD S28, S8, S28
	0x01EDF330 FSUB S17, S17, S19
	0x01EDF334 FADD S18, S18, S16
	0x01EDF338 FADD S24, S24, S20
	0x01EDF33C FADD S21, S21, S27
	0x01EDF340 FSUB S26, S26, S9
	0x01EDF344 FSUB S22, S22, S25
	0x01EDF348 FADD S7, S28, S28
	0x01EDF34C FMUL S17, S17, S0
	0x01EDF350 FSUB S28, S18, S16
	0x01EDF354 FADD S16, S16, S18
	0x01EDF358 FSUB S18, S24, S20
	0x01EDF35C FADD S20, S20, S24
	0x01EDF360 FSUB S24, S21, S27
	0x01EDF364 FSUB S23, S23, S26
	0x01EDF368 FMUL S22, S22, S0
	0x01EDF36C FADD S19, S19, S17
	0x01EDF370 FCMP S24, S3
	0x01EDF374 FMUL S23, S23, S0
	0x01EDF378 FADD S25, S25, S22
	0x01EDF37C FSUB S29, S19, S17
	0x01EDF380 FCSEL S24, S24, S3, MI
	0x01EDF384 FCMP S28, S2
	0x01EDF388 FADD S26, S26, S23
	0x01EDF38C FADD S17, S17, S19
	0x01EDF390 FSUB S19, S25, S22
	0x01EDF394 FADD S22, S22, S25
	0x01EDF398 FADD S21, S27, S21
	0x01EDF39C FCSEL S25, S28, S2, MI
	0x01EDF3A0 FCMP S29, S1
	0x01EDF3A4 FADD S8, S30, S30
	0x01EDF3A8 FSUB S30, S26, S23
	0x01EDF3AC FADD S23, S23, S26
	0x01EDF3B0 FCSEL S26, S29, S1, MI
	0x01EDF3B4 FCMP S21, S3
	0x01EDF3B8 FCSEL S21, S21, S3, GT
	0x01EDF3BC FCMP S16, S2
	0x01EDF3C0 FCSEL S16, S16, S2, GT
	0x01EDF3C4 FCMP S17, S1
	0x01EDF3C8 FSUB S21, S21, S24
	0x01EDF3CC FCSEL S17, S17, S1, GT
	0x01EDF3D0 FSUB S16, S16, S25
	0x01EDF3D4 FMUL S21, S21, S0
	0x01EDF3D8 FSUB S17, S17, S26
	0x01EDF3DC FMUL S16, S16, S0
	0x01EDF3E0 FADD S24, S24, S21
	0x01EDF3E4 FMUL S17, S17, S0
	0x01EDF3E8 FADD S25, S25, S16
	0x01EDF3EC FSUB S27, S24, S21
	0x01EDF3F0 FADD S21, S21, S24
	0x01EDF3F4 FADD S24, S26, S17
	0x01EDF3F8 FSUB S26, S25, S16
	0x01EDF3FC FCMP S27, S5
	0x01EDF400 FADD S16, S16, S25
	0x01EDF404 FSUB S25, S24, S17
	0x01EDF408 FCSEL S27, S27, S5, MI
	0x01EDF40C FCMP S26, S6
	0x01EDF410 FADD S17, S17, S24
	0x01EDF414 FCSEL S24, S26, S6, MI
	0x01EDF418 FCMP S25, S4
	0x01EDF41C FCSEL S25, S25, S4, MI
	0x01EDF420 FCMP S21, S5
	0x01EDF424 FCSEL S21, S21, S5, GT
	0x01EDF428 FCMP S16, S6
	0x01EDF42C FCSEL S16, S16, S6, GT
	0x01EDF430 FCMP S17, S4
	0x01EDF434 FSUB S21, S21, S27
	0x01EDF438 FCSEL S17, S17, S4, GT
	0x01EDF43C FCMP S18, S3
	0x01EDF440 FMUL S21, S21, S0
	0x01EDF444 FCSEL S18, S18, S3, MI
	0x01EDF448 FCMP S19, S2
	0x01EDF44C FSUB S16, S16, S24
	0x01EDF450 FSUB S17, S17, S25
	0x01EDF454 FADD S26, S27, S21
	0x01EDF458 FCSEL S19, S19, S2, MI
	0x01EDF45C FCMP S30, S1
	0x01EDF460 FMUL S16, S16, S0
	0x01EDF464 FMUL S17, S17, S0
	0x01EDF468 FADD S27, S21, S26
	0x01EDF46C FSUB S21, S26, S21
	0x01EDF470 FCSEL S26, S30, S1, MI
	0x01EDF474 FCMP S20, S3
	0x01EDF478 FADD S24, S24, S16
	0x01EDF47C FADD S25, S25, S17
	0x01EDF480 FCSEL S3, S20, S3, GT
	0x01EDF484 FCMP S22, S2
	0x01EDF488 FADD S28, S16, S24
	0x01EDF48C FSUB S16, S24, S16
	0x01EDF490 FADD S20, S17, S25
	0x01EDF494 FSUB S17, S25, S17
	0x01EDF498 FCSEL S2, S22, S2, GT
	0x01EDF49C FCMP S23, S1
	0x01EDF4A0 FSUB S3, S3, S18
	0x01EDF4A4 FSUB S21, S27, S21
	0x01EDF4A8 FSUB S16, S28, S16
	0x01EDF4AC FSUB S17, S20, S17
	0x01EDF4B0 FCSEL S1, S23, S1, GT
	0x01EDF4B4 FSUB S2, S2, S19
	0x01EDF4B8 FMUL S3, S3, S0
	0x01EDF4BC FMUL S20, S21, S16
	0x01EDF4C0 FMUL S21, S21, S17
	0x01EDF4C4 FMUL S16, S16, S17
	0x01EDF4C8 FSUB S1, S1, S26
	0x01EDF4CC FMUL S2, S2, S0
	0x01EDF4D0 FADD S17, S18, S3
	0x01EDF4D4 FADD S18, S20, S21
	0x01EDF4D8 FMUL S1, S1, S0
	0x01EDF4DC FADD S19, S19, S2
	0x01EDF4E0 FSUB S20, S17, S3
	0x01EDF4E4 FADD S3, S3, S17
	0x01EDF4E8 FADD S16, S16, S18
	0x01EDF4EC FADD S17, S26, S1
	0x01EDF4F0 FSUB S18, S19, S2
	0x01EDF4F4 FCMP S20, S5
	0x01EDF4F8 FADD S2, S2, S19
	0x01EDF4FC FADD S9, S16, S16
	0x01EDF500 FSUB S16, S17, S1
	0x01EDF504 FCSEL S19, S20, S5, MI
	0x01EDF508 FCMP S18, S6
	0x01EDF50C FADD S1, S1, S17
	0x01EDF510 FCSEL S17, S18, S6, MI
	0x01EDF514 FCMP S16, S4
	0x01EDF518 FCSEL S16, S16, S4, MI
	0x01EDF51C FCMP S3, S5
	0x01EDF520 FCSEL S3, S3, S5, GT
	0x01EDF524 FCMP S2, S6
	0x01EDF528 FCSEL S2, S2, S6, GT
	0x01EDF52C FCMP S1, S4
	0x01EDF530 FSUB S3, S3, S19
	0x01EDF534 FCSEL S1, S1, S4, GT
	0x01EDF538 FSUB S2, S2, S17
	0x01EDF53C FMUL S3, S3, S0
	0x01EDF540 FSUB S1, S1, S16
	0x01EDF544 FMUL S2, S2, S0
	0x01EDF548 FADD S4, S19, S3
	0x01EDF54C FMUL S0, S1, S0
	0x01EDF550 FADD S1, S17, S2
	0x01EDF554 FADD S5, S3, S4
	0x01EDF558 FSUB S3, S4, S3
	0x01EDF55C FADD S4, S16, S0
	0x01EDF560 FADD S6, S2, S1
	0x01EDF564 FSUB S1, S1, S2
	0x01EDF568 FSUB S2, S5, S3
	0x01EDF56C FADD S3, S0, S4
	0x01EDF570 FSUB S0, S4, S0
	0x01EDF574 FSUB S1, S6, S1
	0x01EDF578 FSUB S0, S3, S0
	0x01EDF57C FMUL S3, S2, S1
	0x01EDF580 FMUL S2, S2, S0
	0x01EDF584 FADD S2, S3, S2
	0x01EDF588 FMUL S0, S1, S0
	0x01EDF58C FADD S0, S0, S2
	0x01EDF590 FADD S0, S0, S0
	0x01EDF594 ADD X8, X31, 0x0
	0x01EDF598 MOV X0, X23
	0x01EDF59C MOV X1, X22
	0x01EDF5A0 FADD S10, S7, S0
	0x01EDF5A4 BL 0x1EE1928
	0x01EDF5A8 FADD S0, S8, S9
	0x01EDF5AC FCMP S0, S10
	0x01EDF5B0 CSEL X22, X23, X22, MI
	0x01EDF5B4 LDR X0, [X24]
	0x01EDF5B8 LDR W8, [X0 + 0xE0]
	0x01EDF5BC CBZ W8, 0x1EDF16C
	0x01EDF5C0 LDRB W8, [X22 + 0x70]
	0x01EDF5C4 CBZ W8, 0x1EDF188
	0x01EDF5C8 MOV X0, X19
	0x01EDF5CC MOV X1, X22
	0x01EDF5D0 MOV X2, X20
	0x01EDF5D4 LDP X20, X19, [X31 + 0x60]
	0x01EDF5D8 LDP X22, X21, [X31 + 0x50]
	0x01EDF5DC LDP X24, X23, [X31 + 0x40]
	0x01EDF5E0 LDR X30, [X31 + 0x38]
	0x01EDF5E4 LDP D9, D8, [X31 + 0x28]
	0x01EDF5E8 LDR V10, [X31 + 0x20]
	0x01EDF5EC ADD X31, X31, 0x70
	0x01EDF5F0 B 0x1EE2104
	0x01EDF5F4 LDR X8, [X9 + 0x20]
	0x01EDF5F8 MOV X1, X20
	0x01EDF5FC LDR X8, [X8 + 0xC0]
	0x01EDF600 LDR X2, [X8 + 0x70]
	0x01EDF604 BL 0x301BF90
	0x01EDF608 LDRB W8, [X22 + 0x70]
	0x01EDF60C CBZ W8, 0x1EDF668
	0x01EDF610 LDR X0, [X19 + 0x30]
	0x01EDF614 CBZ X0, 0x1EDF8B8
	0x01EDF618 LDR W10, [X0 + 0x1C]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x24FB000
	015 Move X25, 0x2220000
	016 Move W8, [X20+1388]
	017 Move X25, [X25+808]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {58}
	023 Move X0, 0x2222000
	024 Move X0, [X0+784]
	025 Call 0x1C17CF4
	026 Move X0, 0x221F000
	027 Move X0, [X0+1800]
	028 Call 0x1C17CF4
	029 Move X0, 0x221F000
	030 Move X0, [X0+1808]
	031 Call 0x1C17CF4
	032 Move X0, 0x2222000
	033 Move X0, [X0+792]
	034 Call 0x1C17CF4
	035 Move X0, 0x2215000
	036 Move X0, [X0+1880]
	037 Call 0x1C17CF4
	038 Move X0, 0x2220000
	039 Move X0, [X0+808]
	040 Call 0x1C17CF4
	041 Move X0, 0x2222000
	042 Move X0, [X0+800]
	043 Call 0x1C17CF4
	044 Move X0, 0x2222000
	045 Move X0, [X0+808]
	046 Call 0x1C17CF4
	047 Move X0, 0x2215000
	048 Move X0, [X0+1728]
	049 Call 0x1C17CF4
	050 Move X0, 0x2222000
	051 Move X0, [X0+816]
	052 Call 0x1C17CF4
	053 Move X0, 0x2222000
	054 Move X0, [X0+824]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X20+1388], W8
	058 Move X0, [X25]
	059 Move [X31+12], W31
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X25]
	065 Move X8, [X0+184]
	066 Move X0, [X8]
	067 Compare X0, 0
	068 JumpIfEqual {244}
	069 Move X8, 0x221F000
	070 Move X8, [X8+1808]
	071 Add X2, X31, 12
	072 Move X1, X19
	073 Move X3, [X8]
	074 Call Dictionary`2<Object, Int32>.TryGetValue, X0, X1, X2
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {229}
	079 Move X26, 0x2215000
	080 Move X26, [X26+1728]
	081 Move X8, 0x2222000
	082 Move X0, [X26]
	083 Move X8, [X8+800]
	084 Move W9, [X0+224]
	085 Move X20, [X8]
	086 Compare W9, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move X0, X20
	090 Move X1, X31
	091 Call Type.GetTypeFromHandle, X0
	092 Compare X19, 0
	093 JumpIfEqual {244}
	094 Move X8, [X19]
	095 Move X1, X0
	096 Move X0, X19
	097 Move W2, W31
	098 Move X9, [X8+520]
	099 Move X3, [X8+528]
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Compare X0, 0
	102 JumpIfEqual {244}
	103 Move W8, [X0+24]
	104 Compare W8, 0
	105 JumpIfEqual {245}
	106 Move X20, [X0+32]
	107 Compare X20, 0
	108 JumpIfEqual {246}
	109 Move X8, 0x2222000
	110 Move X8, [X8+808]
	111 Move X1, [X8]
	112 Move X8, [X20]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X0, X19
	115 Move X1, X31
	116 Call Native.SizeOf, X0
	117 Move W8, [X20+16]
	118 Move W9, [X20+20]
	119 Move W21, W0
	120 Move [X31], W0
	121 Move W27, W8
	122 ShiftRight W27, 30
	123 And W27, W27, 0x1FFFFFFF
	124 Compare W9, 0
	125 JumpIfEqual {188}
	126 Move X8, [X19]
	127 Move X0, X19
	128 Move X9, [X8+968]
	129 Move X1, [X8+976]
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Move X8, 0x2222000
	132 Move X9, 0x2222000
	133 Move X8, [X8+824]
	134 Move X9, [X9+784]
	135 And W0, W0, 1
	136 Move X2, X19
	137 Move X1, [X8]
	138 Move X3, [X9]
	139 Call Assert.Always, X0, X1, X2
	140 Move X8, [X19]
	141 Move X0, X19
	142 Move X9, [X8+1128]
	143 Move X1, [X8+1136]
	144 NotImplemented "Instruction BLR not yet implemented."
	145 Compare X0, 0
	146 JumpIfEqual {244}
	147 Move X8, [X0+24]
	148 Move X22, X0
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move X21, 0x2222000
	151 Move X21, [X21+792]
	152 Move X28, X31
	153 And X8, X8, 0
	154 Add X29, X22, 32
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move X0, [X26]
	157 Move X23, [X29]
	158 Move X24, [X21]
	159 Move W8, [X0+224]
	160 Compare W8, 0
	161 JumpIfNotEqual {163}
	162 Call 0x1C17DFC
	163 Move X0, X24
	164 Move X1, X31
	165 Call Type.GetTypeFromHandle, X0
	166 Compare X0, 0
	167 JumpIfEqual {244}
	168 Move X8, [X0]
	169 Move X1, X23
	170 Move X9, [X8+680]
	171 Move X2, [X8+688]
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Move TEMP, X0
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfNotEqual {185}
	177 Move X0, [X25]
	178 Move W8, [X0+224]
	179 Compare W8, 0
	180 JumpIfNotEqual {182}
	181 Call 0x1C17DFC
	182 Move X0, X23
	183 Call NetworkStructUtils.GetWordCount, X0
	184 Add W27, W27, W0
	185 Move W8, [X22+24]
	186 Add X28, X28, 1
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move W23, [X31]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move X21, 0x2215000
	191 Move X21, [X21+1880]
	192 Add X1, X31, 8
	193 Move [X31+8], W27
	194 Move X0, [X21]
	195 Call 0x1C17E04
	196 Move X22, X0
	197 Move X0, [X21]
	198 Add X1, X31, 4
	199 Move [X31+4], W23
	200 Call 0x1C17E04
	201 Move X8, 0x2222000
	202 Move X8, [X8+816]
	203 Move X3, X0
	204 Move X1, X19
	205 Move X2, X22
	206 Move X8, [X8]
	207 Move X4, X31
	208 Move X0, X8
	209 Call String.Format, X0, X1, X2, X3
	210 Move X1, X31
	211 Call Assert.AlwaysFail, X0
	212 Move X0, [X25]
	213 Move W8, [X0+224]
	214 Compare W8, 0
	215 JumpIfNotEqual {218}
	216 Call 0x1C17DFC
	217 Move X0, [X25]
	218 Move X8, [X0+184]
	219 Move W2, [X20+16]
	220 Move X0, [X8]
	221 Move [X31+12], W2
	222 Compare X0, 0
	223 JumpIfEqual {244}
	224 Move X8, 0x221F000
	225 Move X8, [X8+1800]
	226 Move X1, X19
	227 Move X3, [X8]
	228 Call Dictionary`2<Object, Int32>.Add, X0, X1, X2
	229 Move W0, [X31+12]
	230 Move X20, [X31+96]
	231 Move X19, [X31+104]
	232 Move X22, [X31+80]
	233 Move X21, [X31+88]
	234 Move X24, [X31+64]
	235 Move X23, [X31+72]
	236 Move X26, [X31+48]
	237 Move X25, [X31+56]
	238 Move X28, [X31+32]
	239 Move X27, [X31+40]
	240 Move X29, [X31+16]
	241 Move X30, [X31+24]
	242 Add X31, X31, 112
	243 Return X0
	244 Call 0x1C17F20
	245 Call 0x1C17F28
	246 Move X0, X19
	247 Move X1, X31
	248 Call Native.SizeOf, X0
	249 Call 0x1C17F20
	250 Move X0, X20
	251 Call 0x1C181E0

Method: System.Void .cctor()

Disassembly:
	0x01EDF61C LDR X1, [X22 + 0x68]
	0x01EDF620 LDR X8, [X0 + 0x10]
	0x01EDF624 LDR X9, [X21]
	0x01EDF628 ADD W10, W10, 0x1
	0x01EDF62C STR W10, [X0 + 0x1C]
	0x01EDF630 CBZ X8, 0x1EDF8B8
	0x01EDF634 LDRSW X10, [X0 + 0x18]
	0x01EDF638 LDR W11, [X8 + 0x18]
	0x01EDF63C CMP W10, W11
	0x01EDF640 B.CS 0x1EDF658
	0x01EDF644 ADD W9, W10, 0x1
	0x01EDF648 ADD X8, X8, X10, 0x3, LSL
	0x01EDF64C STR W9, [X0 + 0x18]
	0x01EDF650 STR X1, [X8 + 0x20]
	0x01EDF654 B 0x1EDF668
	0x01EDF658 LDR X8, [X9 + 0x20]
	0x01EDF65C LDR X8, [X8 + 0xC0]
	0x01EDF660 LDR X2, [X8 + 0x70]
	0x01EDF664 BL 0x301BF90
	0x01EDF668 LDR X0, [X24]
	0x01EDF66C LDR W8, [X0 + 0xE0]
	0x01EDF670 CBNZ W8, 0x1EDF678
	0x01EDF674 BL 0x1C16DFC
	0x01EDF678 LDR W2, [X22 + 0x48]
	0x01EDF67C LDR X5, [X19 + 0x30]
	0x01EDF680 MOV X0, X22
	0x01EDF684 MOV X1, X19
	0x01EDF688 LDP X20, X19, [X31 + 0x60]
	0x01EDF68C LDP X22, X21, [X31 + 0x50]
	0x01EDF690 LDP X24, X23, [X31 + 0x40]
	0x01EDF694 LDR X30, [X31 + 0x38]
	0x01EDF698 LDP D9, D8, [X31 + 0x28]
	0x01EDF69C LDR V10, [X31 + 0x20]
	0x01EDF6A0 MOV W3, W31
	0x01EDF6A4 MOV W4, W31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x24FB000
	007 Move X22, 0x221F000
	008 Move X19, 0x221F000
	009 Move X20, 0x2220000
	010 Move W8, [X21+1389]
	011 Move X22, [X22+2048]
	012 Move X19, [X19+2056]
	013 Move X20, [X20+808]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x221F000
	019 Move X0, [X0+2056]
	020 Call 0x1C17CF4
	021 Move X0, 0x221F000
	022 Move X0, [X0+2048]
	023 Call 0x1C17CF4
	024 Move X0, 0x2220000
	025 Move X0, [X0+808]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1389], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call Dictionary`2<Object, Int32>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

