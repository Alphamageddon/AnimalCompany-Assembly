Type: Fusion.Simulation/Client

Method: Fusion.TimeSyncConfiguration get_TimeSyncConfig()

Disassembly:
	0x01ECC518 STR X8, [X0]
	0x01ECC51C ADRP X1, 0x1FE8000
	0x01ECC520 ADD X1, X1, 0xE58
	0x01ECC524 MOV X2, X31
	0x01ECC528 BL 0x3EB1B00
	0x01ECC52C MOV X20, X0
	0x01ECC530 BL 0x3EB1AE0
	0x01ECC534 MOV X0, X20
	0x01ECC538 BL 0x1D2C690
	0x01ECC53C BL 0x1990590
	0x01ECC540 SUB X31, X31, 0xD0
	0x01ECC544 STR D8, [X31 + 0x90]
	0x01ECC548 STP X30, X23, [X31 + 0xA0]
	0x01ECC54C STP X22, X21, [X31 + 0xB0]
	0x01ECC550 STP X20, X19, [X31 + 0xC0]
	0x01ECC554 MRS X22, 0xC000
	0x01ECC558 LDR X8, [X22 + 0x28]
	0x01ECC55C ADRP X20, 0x250D000
	0x01ECC560 MOV X19, X0
	0x01ECC564 STR X8, [X31 + 0x88]
	0x01ECC568 LDRB W8, [X20 + 0x4CF]
	0x01ECC56C TBNZ X8, 0x0, 0x1ECC584
	0x01ECC570 ADRP X0, 0x2232000
	0x01ECC574 LDR X0, [X0 + 0x7C0]
	0x01ECC578 BL 0x1C16CF4
	0x01ECC57C MOVZ W8, 0x1
	0x01ECC580 STRB W8, [X20 + 0x4CF]
	0x01ECC584 LDR X20, [X19 + 0x68]
	0x01ECC588 CBZ X20, 0x1ECC91C
	0x01ECC58C ADRP X23, 0x2232000
	0x01ECC590 LDR X8, [X20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 NotImplemented "Instruction MRS not yet implemented."
	006 Move X8, [X20+40]
	007 Move X1, X31
	008 Move X19, X0
	009 Move [X31+40], X8
	010 Call Simulation.get_Topology, X0
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X8, [X19+96]
	013 Compare X8, 0
	014 JumpIfEqual {33}
	015 Move X0, [X8+72]
	016 Compare X0, 0
	017 JumpIfNotEqual {25}
	018 Add X8, X31, 0
	019 Move X0, X19
	020 Move X1, X31
	021 Call Simulation.get_RuntimeConfig, X0
	022 Move X0, [X31]
	023 Move X1, [X31+8]
	024 Call TimeSyncConfiguration.GetFromTickrate, X0
	025 Move X8, [X20+40]
	026 Move X9, [X31+40]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X20, [X31+64]
	029 Move X19, [X31+72]
	030 Move X30, [X31+48]
	031 Add X31, X31, 80
	032 Return X0
	033 Call 0x1C17F20
	034 Call 0x3EB2B20

Method: Fusion.Sockets.NetConnection* get_ServerConnection()

Disassembly:
	0x01ECC7D8 ADD X8, X8, W9, 0x4, SXTW
	0x01ECC7DC ADD X0, X8, 0x138

ISIL:
	001 Move X0, [X0+424]
	002 Return X0

Method: Fusion.Tick get_LatestServerTick()

Disassembly:
	0x01ECC7E0 LDP X8, X2, [X0]
	0x01ECC7E4 MOV X0, X20
	0x01ECC7E8 MOV X1, X21
	0x01ECC7EC BLR X8
	0x01ECC7F0 LDR X8, [X19 + 0x1A8]
	0x01ECC7F4 LDR X20, [X19 + 0x68]
	0x01ECC7F8 CBZ X8, 0x1ECC804
	0x01ECC7FC LDR V8, [X8 + 0x48]
	0x01ECC800 B 0x1ECC808
	0x01ECC804 FMOV D8, X31
	0x01ECC808 LDR X8, [X19]
	0x01ECC80C MOV X0, X19
	0x01ECC810 LDR X9, [X8 + 0x248]
	0x01ECC814 LDR X1, [X8 + 0x250]
	0x01ECC818 BLR X9
	0x01ECC81C CBZ X20, 0x1ECC91C
	0x01ECC820 LDR X8, [X20]
	0x01ECC824 LDR X1, [X23]
	0x01ECC828 AND X21, X0, 0x0
	0x01ECC82C LDRH W9, [X8 + 0x12E]
	0x01ECC830 CBZ X9, 0x1ECC8A8
	0x01ECC834 LDR X10, [X8 + 0xB0]
	0x01ECC838 ADD X10, X10, 0x8
	0x01ECC83C LDUR X11, [X10 - 0x8]
	0x01ECC840 CMP X11, X1
	0x01ECC844 B.EQ 0x1ECC8B8
	0x01ECC848 SUBS X9, X9, 0x1
	0x01ECC84C ADD X10, X10, 0x10
	0x01ECC850 B.NE 0x1ECC83C
	0x01ECC854 B 0x1ECC8A8
	0x01ECC858 FMOV D8, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x250E000
	005 Move W8, [X20+1223]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2233000
	012 Move X0, [X0+1160]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1223], W8
	016 Move X0, [X19+440]
	017 Compare X0, 0
	018 JumpIfEqual {42}
	019 Move X1, X31
	020 Call Timeline.get_IsEmpty, X0
	021 Move W8, W0
	022 Move X0, X31
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {38}
	027 Move X8, [X19+440]
	028 Compare X8, 0
	029 JumpIfEqual {42}
	030 Move X0, [X8+16]
	031 Compare X0, 0
	032 JumpIfEqual {42}
	033 Move X8, 0x2233000
	034 Move X8, [X8+1160]
	035 Move X1, [X8]
	036 Call RingBuffer`1<TimelinePoint>.Back, X0
	037 Move W0, [X0+4]
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return X0
	042 Call 0x1C17F20

Method: System.Double get_LatestServerTime()

Disassembly:
	0x01ECC85C LDR X8, [X19]
	0x01ECC860 MOV X0, X19
	0x01ECC864 LDR X9, [X8 + 0x248]
	0x01ECC868 LDR X1, [X8 + 0x250]
	0x01ECC86C BLR X9
	0x01ECC870 CBZ X20, 0x1ECC91C
	0x01ECC874 LDR X8, [X20]
	0x01ECC878 LDR X1, [X23]
	0x01ECC87C AND X21, X0, 0x0
	0x01ECC880 LDRH W9, [X8 + 0x12E]
	0x01ECC884 CBZ X9, 0x1ECC8A8
	0x01ECC888 LDR X10, [X8 + 0xB0]
	0x01ECC88C ADD X10, X10, 0x8
	0x01ECC890 LDUR X11, [X10 - 0x8]
	0x01ECC894 CMP X11, X1
	0x01ECC898 B.EQ 0x1ECC8B8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Move X19, X0
	006 Move X9, [X8+584]
	007 Move X1, [X8+592]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move X20, X0
	010 Move X0, X19
	011 Move X1, X31
	012 Call Simulation.get_TickDeltaDouble, X0
	013 NotImplemented "Instruction SCVTF not yet implemented."
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Multiply D0, D0, D1
	017 Move X30, [X31+32]
	018 Return V0

Method: System.Boolean get_IsConnectedToServer()

Disassembly:
	0x01ECC89C SUBS X9, X9, 0x1
	0x01ECC8A0 ADD X10, X10, 0x10
	0x01ECC8A4 B.NE 0x1ECC890
	0x01ECC8A8 MOVZ W2, 0x3

ISIL:
	001 Move X8, [X0+424]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: Fusion.Sockets.NetAddress get_ServerAddress()

Disassembly:
	0x01ECC8AC MOV X0, X20
	0x01ECC8B0 BL 0x1C5C788
	0x01ECC8B4 B 0x1ECC8C8
	0x01ECC8B8 LDR W9, [X10]
	0x01ECC8BC ADD W9, W9, 0x3
	0x01ECC8C0 ADD X8, X8, W9, 0x4, SXTW
	0x01ECC8C4 ADD X0, X8, 0x138
	0x01ECC8C8 LDP X8, X2, [X0]
	0x01ECC8CC MOV X0, X20
	0x01ECC8D0 MOV V0.16B, V8.16B

ISIL:
	001 Move X9, [X0+424]
	002 Compare X9, 0
	003 JumpIfEqual {9}
	004 Move X10, [X9+56]
	005 NotImplemented "Instruction LDUR not yet implemented."
	006 Move [X8+16], X10
	007 Move [X8], V0
	008 Return X0
	009 Move [X8], X31
	010 Move [X8+8], X31
	011 Move [X8+16], X31
	012 Return X0

Method: System.Double get_RttToServer()

Disassembly:
	0x01ECC8D4 MOV X1, X21
	0x01ECC8D8 BLR X8
	0x01ECC8DC LDR X8, [X19]
	0x01ECC8E0 MOV X0, X19
	0x01ECC8E4 LDR X9, [X8 + 0x248]
	0x01ECC8E8 LDR X1, [X8 + 0x250]

ISIL:
	001 Move X8, [X0+424]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move V0, [X8+72]
	005 Return V0
	006 Move D0, X31
	007 Return V0

Method: Fusion.PlayerRef get_LocalPlayer()

Disassembly:
	0x01ECC8EC BLR X9
	0x01ECC8F0 STR W0, [X19 + 0x1D0]
	0x01ECC8F4 LDR X8, [X22 + 0x28]
	0x01ECC8F8 LDR X9, [X31 + 0x88]
	0x01ECC8FC CMP X8, X9
	0x01ECC900 B.NE 0x1ECC920
	0x01ECC904 LDP X20, X19, [X31 + 0xC0]
	0x01ECC908 LDP X22, X21, [X31 + 0xB0]
	0x01ECC90C LDP X30, X23, [X31 + 0xA0]
	0x01ECC910 LDR V8, [X31 + 0x90]
	0x01ECC914 ADD X31, X31, 0xD0
	0x01ECC918 RET
	0x01ECC91C BL 0x1C16F20
	0x01ECC920 BL 0x3EB1B20
	0x01ECC924 STP X30, X23, [X31 - 0x30]!
	0x01ECC928 STP X22, X21, [X31 + 0x10]
	0x01ECC92C STP X20, X19, [X31 + 0x20]
	0x01ECC930 ADRP X22, 0x250D000
	0x01ECC934 ADRP X23, 0x2233000
	0x01ECC938 LDRB W8, [X22 + 0x4D0]
	0x01ECC93C LDR X23, [X23 + 0xDE0]
	0x01ECC940 MOV W21, W2
	0x01ECC944 MOV W19, W1
	0x01ECC948 MOV X20, X0
	0x01ECC94C TBNZ X8, 0x0, 0x1ECC964
	0x01ECC950 ADRP X0, 0x2233000
	0x01ECC954 LDR X0, [X0 + 0xDE0]
	0x01ECC958 BL 0x1C16CF4
	0x01ECC95C MOVZ W8, 0x1
	0x01ECC960 STRB W8, [X22 + 0x4D0]
	0x01ECC964 LDR X0, [X23]
	0x01ECC968 MOV X1, X31
	0x01ECC96C BL 0x1E32108
	0x01ECC970 LDR X8, [X20]
	0x01ECC974 MOV X0, X20
	0x01ECC978 LDR X9, [X8 + 0x248]
	0x01ECC97C LDR X1, [X8 + 0x250]
	0x01ECC980 BLR X9
	0x01ECC984 CMP W21, 0x4
	0x01ECC988 STR W0, [X20 + 0x48]
	0x01ECC98C CSET W8, EQ
	0x01ECC990 MOVZ W1, 0x1
	0x01ECC994 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x250E000
	005 Move W8, [X20+1224]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2233000
	012 Move X0, [X0+2704]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1224], W8
	016 Move X19, [X19+64]
	017 Compare X19, 0
	018 JumpIfEqual {48}
	019 Move X10, 0x2233000
	020 Move X8, [X19]
	021 Move X10, [X10+2704]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move W2, 35
	033 Move X0, X19
	034 Call 0x1C5D788
	035 Move W9, [X10]
	036 Add W9, W9, 35
	037 Add X8, X8, W9
	038 Add X0, X8, 312
	039 Move X8, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X19
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 And X0, X0, 0
	046 Move X30, [X31+32]
	047 Return X0
	048 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<Fusion.PlayerRef> get_ActivePlayers()

Disassembly:
	0x01ECC998 MOV W2, W19
	0x01ECC99C MOV X3, X31
	0x01ECC9A0 STRB W8, [X20 + 0xDA]
	0x01ECC9A4 BL 0x1EC504C
	0x01ECC9A8 CMP W19, 0x1
	0x01ECC9AC B.LT 0x1ECC9E8
	0x01ECC9B0 MOV W22, W31
	0x01ECC9B4 ADD W8, W19, W22
	0x01ECC9B8 CMP W8, 0x1
	0x01ECC9BC CSET W2, EQ
	0x01ECC9C0 CMP W22, 0x0
	0x01ECC9C4 CSET W3, EQ
	0x01ECC9C8 MOV X0, X20
	0x01ECC9CC MOV W1, W21
	0x01ECC9D0 MOV W4, W31
	0x01ECC9D4 MOV X5, X31
	0x01ECC9D8 BL 0x1EC19A4
	0x01ECC9DC SUB W22, W22, 0x1
	0x01ECC9E0 ADDS W31, W19, W22
	0x01ECC9E4 B.NE 0x1ECC9B4
	0x01ECC9E8 MOVZ W1, 0x1
	0x01ECC9EC MOV X0, X20
	0x01ECC9F0 MOV W2, W19
	0x01ECC9F4 MOV X3, X31
	0x01ECC9F8 BL 0x1EC51D8
	0x01ECC9FC LDP X20, X19, [X31 + 0x20]
	0x01ECCA00 LDP X22, X21, [X31 + 0x10]
	0x01ECCA04 MOV X0, X31
	0x01ECCA08 LDP X30, X23, [X31], #0x30
	0x01ECCA0C B 0x1E32194
	0x01ECCA10 SUB X31, X31, 0x70
	0x01ECCA14 STP X30, X23, [X31 + 0x40]
	0x01ECCA18 STP X22, X21, [X31 + 0x50]
	0x01ECCA1C STP X20, X19, [X31 + 0x60]
	0x01ECCA20 ADRP X20, 0x250D000
	0x01ECCA24 LDRB W8, [X20 + 0x4D1]
	0x01ECCA28 MOV X19, X0
	0x01ECCA2C TBNZ X8, 0x0, 0x1ECCA80
	0x01ECCA30 ADRP X0, 0x2232000
	0x01ECCA34 LDR X0, [X0 + 0x810]
	0x01ECCA38 BL 0x1C16CF4
	0x01ECCA3C ADRP X0, 0x2233000
	0x01ECCA40 LDR X0, [X0 + 0xA98]
	0x01ECCA44 BL 0x1C16CF4
	0x01ECCA48 ADRP X0, 0x2233000
	0x01ECCA4C LDR X0, [X0 + 0xAA0]
	0x01ECCA50 BL 0x1C16CF4
	0x01ECCA54 ADRP X0, 0x2233000
	0x01ECCA58 LDR X0, [X0 + 0xAA8]
	0x01ECCA5C BL 0x1C16CF4
	0x01ECCA60 ADRP X0, 0x2232000
	0x01ECCA64 LDR X0, [X0 + 0xA90]
	0x01ECCA68 BL 0x1C16CF4
	0x01ECCA6C ADRP X0, 0x2233000
	0x01ECCA70 LDR X0, [X0 + 0xAB0]
	0x01ECCA74 BL 0x1C16CF4
	0x01ECCA78 MOVZ W8, 0x1
	0x01ECCA7C STRB W8, [X20 + 0x4D1]
	0x01ECCA80 STP X31, X31, [X31 + 0x20]
	0x01ECCA84 STR X31, [X31 + 0x30]
	0x01ECCA88 STR X31, [X31 + 0x18]
	0x01ECCA8C LDR X20, [X19 + 0x40]
	0x01ECCA90 CBZ X20, 0x1ECCC48
	0x01ECCA94 ADRP X21, 0x2232000
	0x01ECCA98 LDR X8, [X20]
	0x01ECCA9C LDR X21, [X21 + 0xA90]
	0x01ECCAA0 LDRH W9, [X8 + 0x12E]
	0x01ECCAA4 LDR X1, [X21]
	0x01ECCAA8 CBZ X9, 0x1ECCACC
	0x01ECCAAC LDR X10, [X8 + 0xB0]
	0x01ECCAB0 ADD X10, X10, 0x8
	0x01ECCAB4 LDUR X11, [X10 - 0x8]
	0x01ECCAB8 CMP X11, X1
	0x01ECCABC B.EQ 0x1ECCADC
	0x01ECCAC0 SUBS X9, X9, 0x1
	0x01ECCAC4 ADD X10, X10, 0x10
	0x01ECCAC8 B.NE 0x1ECCAB4
	0x01ECCACC MOVZ W2, 0x7
	0x01ECCAD0 MOV X0, X20
	0x01ECCAD4 BL 0x1C5C788
	0x01ECCAD8 B 0x1ECCAEC
	0x01ECCADC LDR W9, [X10]
	0x01ECCAE0 ADD W9, W9, 0x7
	0x01ECCAE4 ADD X8, X8, W9, 0x4, SXTW
	0x01ECCAE8 ADD X0, X8, 0x138
	0x01ECCAEC LDP X8, X1, [X0]
	0x01ECCAF0 MOV X0, X20
	0x01ECCAF4 BLR X8
	0x01ECCAF8 LDR X0, [X19 + 0x150]
	0x01ECCAFC CBZ X0, 0x1ECCC48
	0x01ECCB00 ADRP X8, 0x2232000
	0x01ECCB04 LDR X8, [X8 + 0x810]
	0x01ECCB08 LDR X1, [X8]
	0x01ECCB0C BL 0x2A673D0
	0x01ECCB10 CBZ X0, 0x1ECCC48
	0x01ECCB14 ADRP X8, 0x2233000
	0x01ECCB18 LDR X8, [X8 + 0xAB0]
	0x01ECCB1C ADRP X23, 0x2233000
	0x01ECCB20 ADRP X22, 0x2233000
	0x01ECCB24 LDR X1, [X8]
	0x01ECCB28 LDR X23, [X23 + 0xAA0]
	0x01ECCB2C LDR X22, [X22 + 0xA98]
	0x01ECCB30 ADD X8, X31, 0x0
	0x01ECCB34 BL 0x2755900
	0x01ECCB38 LDR V0, [X31]
	0x01ECCB3C LDR X8, [X31 + 0x10]
	0x01ECCB40 STR V0, [X31 + 0x2]
	0x01ECCB44 STR X8, [X31 + 0x30]
	0x01ECCB48 LDR X1, [X23]
	0x01ECCB4C ADD X0, X31, 0x20
	0x01ECCB50 BL 0x2C04490
	0x01ECCB54 TBZ X0, 0x0, 0x1ECCBC0
	0x01ECCB58 LDR X20, [X31 + 0x30]
	0x01ECCB5C CBZ X20, 0x1ECCC44
	0x01ECCB60 MOV X0, X20
	0x01ECCB64 MOV X1, X31
	0x01ECCB68 BL 0x1E93320
	0x01ECCB6C TBZ X0, 0x0, 0x1ECCB48
	0x01ECCB70 MOV X0, X20
	0x01ECCB74 MOV X1, X31
	0x01ECCB78 BL 0x1E93330
	0x01ECCB7C STR X0, [X31 + 0x18]
	0x01ECCB80 LDR X1, [X20 + 0xB0]
	0x01ECCB84 ADD X0, X31, 0x18
	0x01ECCB88 MOV X2, X31
	0x01ECCB8C BL 0x1E9698C
	0x01ECCB90 MOV X0, X20
	0x01ECCB94 MOV X1, X31
	0x01ECCB98 BL 0x1E93330
	0x01ECCB9C STR X0, [X31 + 0x18]
	0x01ECCBA0 MOV X0, X20
	0x01ECCBA4 MOV X1, X31
	0x01ECCBA8 BL 0x1E97458
	0x01ECCBAC MOV X1, X0
	0x01ECCBB0 ADD X0, X31, 0x18
	0x01ECCBB4 MOV X2, X31
	0x01ECCBB8 BL 0x1E969D0
	0x01ECCBBC B 0x1ECCB48
	0x01ECCBC0 LDR X1, [X22]
	0x01ECCBC4 ADD X0, X31, 0x20
	0x01ECCBC8 BL 0x2C0448C
	0x01ECCBCC LDR X19, [X19 + 0x40]
	0x01ECCBD0 CBZ X19, 0x1ECCC48
	0x01ECCBD4 LDR X8, [X19]
	0x01ECCBD8 LDR X1, [X21]
	0x01ECCBDC LDRH W9, [X8 + 0x12E]
	0x01ECCBE0 CBZ X9, 0x1ECCC04
	0x01ECCBE4 LDR X10, [X8 + 0xB0]
	0x01ECCBE8 ADD X10, X10, 0x8
	0x01ECCBEC LDUR X11, [X10 - 0x8]
	0x01ECCBF0 CMP X11, X1
	0x01ECCBF4 B.EQ 0x1ECCC14
	0x01ECCBF8 SUBS X9, X9, 0x1
	0x01ECCBFC ADD X10, X10, 0x10
	0x01ECCC00 B.NE 0x1ECCBEC
	0x01ECCC04 MOVZ W2, 0x6
	0x01ECCC08 MOV X0, X19
	0x01ECCC0C BL 0x1C5C788
	0x01ECCC10 B 0x1ECCC24
	0x01ECCC14 LDR W9, [X10]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+80], X26
	004 Move [X31+88], X25
	005 Move [X31+96], X24
	006 Move [X31+104], X23
	007 Move [X31+112], X22
	008 Move [X31+120], X21
	009 Move [X31+128], X20
	010 Move [X31+136], X19
	011 Move X22, 0x250E000
	012 Move X21, 0x2234000
	013 Move X19, 0x2234000
	014 Move W8, [X22+1225]
	015 Move X21, [X21+3456]
	016 Move X19, [X19+3464]
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {51}
	022 Move X0, 0x2234000
	023 Move X0, [X0+2936]
	024 Call 0x1C17CF4
	025 Move X0, 0x2234000
	026 Move X0, [X0+2944]
	027 Call 0x1C17CF4
	028 Move X0, 0x2234000
	029 Move X0, [X0+2952]
	030 Call 0x1C17CF4
	031 Move X0, 0x2234000
	032 Move X0, [X0+2960]
	033 Call 0x1C17CF4
	034 Move X0, 0x2234000
	035 Move X0, [X0+2232]
	036 Call 0x1C17CF4
	037 Move X0, 0x2234000
	038 Move X0, [X0+3464]
	039 Call 0x1C17CF4
	040 Move X0, 0x2234000
	041 Move X0, [X0+3456]
	042 Call 0x1C17CF4
	043 Move X0, 0x2233000
	044 Move X0, [X0+888]
	045 Call 0x1C17CF4
	046 Move X0, 0x2234000
	047 Move X0, [X0+2992]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X22+1225], W8
	051 Move X0, [X21]
	052 Move [X31+32], X31
	053 Move [X31+40], X31
	054 Move [X31+48], X31
	055 Move [X31+72], X31
	056 Call 0x1C17F10
	057 Move X1, [X19]
	058 Move X19, X0
	059 Call List`1<PlayerRef>..ctor, X0
	060 Move X0, [X20+392]
	061 Compare X0, 0
	062 JumpIfEqual {150}
	063 Move X8, 0x2234000
	064 Move X8, [X8+2960]
	065 Move X23, 0x2234000
	066 Move X24, 0x2233000
	067 Move X23, [X23+2944]
	068 Move X24, [X24+888]
	069 Move X1, [X8]
	070 Move X25, 0x2234000
	071 Move X26, 0x2234000
	072 Move X22, 0x2234000
	073 Move X25, [X25+2992]
	074 Move X26, [X26+2232]
	075 Move X22, [X22+2936]
	076 Add X8, X31, 8
	077 Call HashSet`1<NetworkId>.GetEnumerator, X0
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 Move X8, [X31+24]
	080 Move [X31+2], V0
	081 Move [X31+48], X8
	082 Move X1, [X23]
	083 Add X0, X31, 32
	084 Call Enumerator<NetworkId>.MoveNext, X0
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {132}
	089 Move X0, [X24]
	090 Move W21, [X31+48]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X0, X31
	096 Call NetworkObjectTypeId.get_PlayerData
	097 Move X4, [X25]
	098 Move X2, X0
	099 Add X3, X31, 72
	100 Move X0, X20
	101 Move X1, X21
	102 Call Simulation.TryGetStructData, X0, X1, X2, X3
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfNotEqual {82}
	107 Move X8, [X31+72]
	108 Compare X8, 0
	109 JumpIfEqual {148}
	110 Compare X19, 0
	111 JumpIfEqual {149}
	112 Move W10, [X19+28]
	113 Move W1, [X8]
	114 Move X8, [X19+16]
	115 Move X9, [X26]
	116 Add W10, W10, 1
	117 Move [X19+28], W10
	118 Compare X8, 0
	119 JumpIfEqual {147}
	120 NotImplemented "Instruction LDRSW not yet implemented."
	121 Move W11, [X8+24]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Add W9, W10, 1
	124 Add X8, X8, X10
	125 Move [X19+24], W9
	126 Move [X8+32], W1
	127 Move X8, [X9+32]
	128 Move X8, [X8+192]
	129 Move X2, [X8+112]
	130 Move X0, X19
	131 Call List`1<PlayerRef>.AddWithResize, X0, X1
	132 Move X1, [X22]
	133 Add X0, X31, 32
	134 Call Enumerator<NetworkId>.Dispose, X0
	135 Move X0, X19
	136 Move X20, [X31+128]
	137 Move X19, [X31+136]
	138 Move X22, [X31+112]
	139 Move X21, [X31+120]
	140 Move X24, [X31+96]
	141 Move X23, [X31+104]
	142 Move X26, [X31+80]
	143 Move X25, [X31+88]
	144 Move X30, [X31+64]
	145 Add X31, X31, 144
	146 Return X0
	147 Call 0x1C17F20
	148 Call 0x1C17F20
	149 Call 0x1C17F20
	150 Call 0x1C17F20
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Call 0x3EB2AD0
	153 Move X20, [X0]
	154 Call 0x3EB2AE0
	155 Move X1, [X22]
	156 Add X0, X31, 32
	157 Call Enumerator<NetworkId>.Dispose, X0
	158 Compare X20, 0
	159 JumpIfEqual {135}
	160 Move X0, X20
	161 Call 0x1C17F18
	162 Move X19, X0
	163 Move X20, X31
	164 Move X19, X0
	165 Move X1, [X22]
	166 Add X0, X31, 32
	167 Call Enumerator<NetworkId>.Dispose, X0
	168 Compare X20, 0
	169 JumpIfNotEqual {172}
	170 Move X0, X19
	171 Call 0x1D2D690
	172 Move X0, X20
	173 Call 0x1C17F18
	174 Call 0x1991590

Method: System.Void OnNetworkShutdown()

Disassembly:
	0x01ECCC18 ADD W9, W9, 0x6
	0x01ECCC1C ADD X8, X8, W9, 0x4, SXTW
	0x01ECCC20 ADD X0, X8, 0x138
	0x01ECCC24 LDP X8, X1, [X0]
	0x01ECCC28 MOV X0, X19
	0x01ECCC2C BLR X8
	0x01ECCC30 LDP X20, X19, [X31 + 0x60]
	0x01ECCC34 LDP X22, X21, [X31 + 0x50]
	0x01ECCC38 LDP X30, X23, [X31 + 0x40]
	0x01ECCC3C ADD X31, X31, 0x70
	0x01ECCC40 RET
	0x01ECCC44 BL 0x1C16F20
	0x01ECCC48 BL 0x1C16F20
	0x01ECCC4C B 0x1ECCC68

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, [X0+424]
	004 Move X19, X0
	005 Compare X1, 0
	006 JumpIfEqual {14}
	007 Move X0, [X19+304]
	008 Move X2, X31
	009 Move X3, X31
	010 Call NetPeerGroup.Disconnect, X0, X1, X2
	011 Move X0, X19
	012 Move X1, X31
	013 Call Simulation.NetworkSend, X0
	014 Move [X19+424], X31
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return 

Method: System.Double GetPlayerRtt(Fusion.PlayerRef player)

Disassembly:
	0x01ECCC50 B 0x1ECCC68
	0x01ECCC54 B 0x1ECCC68
	0x01ECCC58 B 0x1ECCC68
	0x01ECCC5C B 0x1ECCC68
	0x01ECCC60 B 0x1ECCC68
	0x01ECCC64 B 0x1ECCC68
	0x01ECCC68 CMP W1, 0x1
	0x01ECCC6C B.NE 0x1ECCC94
	0x01ECCC70 BL 0x3EB1AD0
	0x01ECCC74 LDR X20, [X0]
	0x01ECCC78 BL 0x3EB1AE0
	0x01ECCC7C LDR X1, [X22]
	0x01ECCC80 ADD X0, X31, 0x20
	0x01ECCC84 BL 0x2C0448C
	0x01ECCC88 CBZ X20, 0x1ECCBCC
	0x01ECCC8C MOV X0, X20
	0x01ECCC90 BL 0x1C16F18
	0x01ECCC94 MOV X19, X0
	0x01ECCC98 MOV X20, X31
	0x01ECCC9C B 0x1ECCCA4
	0x01ECCCA0 MOV X19, X0
	0x01ECCCA4 LDR X1, [X22]
	0x01ECCCA8 ADD X0, X31, 0x20
	0x01ECCCAC BL 0x2C0448C
	0x01ECCCB0 CBNZ X20, 0x1ECCCBC
	0x01ECCCB4 MOV X0, X19
	0x01ECCCB8 BL 0x1D2C690
	0x01ECCCBC MOV X0, X20
	0x01ECCCC0 BL 0x1C16F18
	0x01ECCCC4 BL 0x1990590
	0x01ECCCC8 STP X30, X19, [X31 - 0x10]!
	0x01ECCCCC LDR X8, [X0]
	0x01ECCCD0 MOV X19, X0
	0x01ECCCD4 LDR X9, [X8 + 0x248]
	0x01ECCCD8 LDR X1, [X8 + 0x250]
	0x01ECCCDC BLR X9
	0x01ECCCE0 STR W0, [X19 + 0x48]
	0x01ECCCE4 MOV X0, X19
	0x01ECCCE8 MOV X1, X31
	0x01ECCCEC BL 0x1EC0810
	0x01ECCCF0 CMP W0, 0x1
	0x01ECCCF4 B.NE 0x1ECCD00
	0x01ECCCF8 MOV X0, X19
	0x01ECCCFC BL 0x1ECCA10
	0x01ECCD00 LDR X0, [X19 + 0x1C0]
	0x01ECCD04 CBZ X0, 0x1ECCD18

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x250E000
	007 Move X22, 0x222B000
	008 Move W8, [X21+1226]
	009 Move X22, [X22+3648]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x222B000
	017 Move X0, [X0+3648]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1226], W8
	021 Move X8, [X19]
	022 Move X0, X19
	023 Move X9, [X8+616]
	024 Move X1, [X8+624]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move X8, [X22]
	027 Move X21, X0
	028 Move W9, [X8+224]
	029 Compare W9, 0
	030 JumpIfNotEqual {33}
	031 Move X0, X8
	032 Call 0x1C17DFC
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, [X22]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X31
	040 Call PlayerRef.get_None
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move D0, X31
	043 Move X8, [X19+424]
	044 Compare X8, 0
	045 JumpIfEqual {47}
	046 Move V0, [X8+72]
	047 Move D0, X31
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Return V0

Method: System.Void .ctor(Fusion.SimulationArgs args)

Disassembly:
	0x01ECCD08 BL 0x1ECCD1C
	0x01ECCD0C STRB W31, [X19 + 0x1B0]
	0x01ECCD10 LDP X30, X19, [X31], #0x10
	0x01ECCD14 RET
	0x01ECCD18 BL 0x1C16F20
	0x01ECCD1C STR X30, [X31 - 0x20]!
	0x01ECCD20 STP X20, X19, [X31 + 0x10]
	0x01ECCD24 ADRP X20, 0x250D000
	0x01ECCD28 LDRB W8, [X20 + 0x52F]
	0x01ECCD2C MOV X19, X0
	0x01ECCD30 TBNZ X8, 0x0, 0x1ECCD54
	0x01ECCD34 ADRP X0, 0x2233000
	0x01ECCD38 LDR X0, [X0 + 0xDE8]
	0x01ECCD3C BL 0x1C16CF4
	0x01ECCD40 ADRP X0, 0x2233000
	0x01ECCD44 LDR X0, [X0 + 0xDF0]
	0x01ECCD48 BL 0x1C16CF4
	0x01ECCD4C MOVZ W8, 0x1
	0x01ECCD50 STRB W8, [X20 + 0x52F]
	0x01ECCD54 LDR X0, [X19 + 0x28]
	0x01ECCD58 CBZ X0, 0x1ECCD8C
	0x01ECCD5C ADRP X8, 0x2233000
	0x01ECCD60 LDR X8, [X8 + 0xDF0]
	0x01ECCD64 LDR X1, [X8]
	0x01ECCD68 BL 0x2AF34F8
	0x01ECCD6C LDR X0, [X19 + 0x30]
	0x01ECCD70 CBZ X0, 0x1ECCD8C
	0x01ECCD74 ADRP X8, 0x2233000
	0x01ECCD78 LDR X8, [X8 + 0xDE8]
	0x01ECCD7C LDP X20, X19, [X31 + 0x10]
	0x01ECCD80 LDR X1, [X8]
	0x01ECCD84 LDR X30, [X31], #0x20
	0x01ECCD88 B 0x2AF04E0
	0x01ECCD8C BL 0x1C16F20
	0x01ECCD90 B 0x1ECCD94
	0x01ECCD94 STR D8, [X31 - 0x20]!
	0x01ECCD98 STR X30, [X31 + 0x8]
	0x01ECCD9C STP X20, X19, [X31 + 0x10]
	0x01ECCDA0 ADRP X20, 0x250D000
	0x01ECCDA4 LDRB W8, [X20 + 0x4D8]
	0x01ECCDA8 MOV X19, X0
	0x01ECCDAC TBNZ X8, 0x0, 0x1ECCDC4
	0x01ECCDB0 ADRP X0, 0x2232000
	0x01ECCDB4 LDR X0, [X0 + 0x7C0]
	0x01ECCDB8 BL 0x1C16CF4
	0x01ECCDBC MOVZ W8, 0x1
	0x01ECCDC0 STRB W8, [X20 + 0x4D8]
	0x01ECCDC4 MOV X0, X19
	0x01ECCDC8 MOV X1, X31
	0x01ECCDCC BL 0x1EC03FC
	0x01ECCDD0 TBZ X0, 0x0, 0x1ECCEA8
	0x01ECCDD4 LDR X0, [X19 + 0x1B8]
	0x01ECCDD8 CBZ X0, 0x1ECCEB8
	0x01ECCDDC MOV X1, X31
	0x01ECCDE0 BL 0x1EBE0C0
	0x01ECCDE4 TBNZ X0, 0x0, 0x1ECCEA8
	0x01ECCDE8 LDR X20, [X19 + 0x68]
	0x01ECCDEC CBZ X20, 0x1ECCEB8
	0x01ECCDF0 ADRP X10, 0x2232000
	0x01ECCDF4 LDR X8, [X20]
	0x01ECCDF8 LDR X10, [X10 + 0x7C0]
	0x01ECCDFC LDRH W9, [X8 + 0x12E]
	0x01ECCE00 LDR X1, [X10]
	0x01ECCE04 CBZ X9, 0x1ECCE28
	0x01ECCE08 LDR X10, [X8 + 0xB0]
	0x01ECCE0C ADD X10, X10, 0x8
	0x01ECCE10 LDUR X11, [X10 - 0x8]
	0x01ECCE14 CMP X11, X1
	0x01ECCE18 B.EQ 0x1ECCE38
	0x01ECCE1C SUBS X9, X9, 0x1
	0x01ECCE20 ADD X10, X10, 0x10
	0x01ECCE24 B.NE 0x1ECCE10
	0x01ECCE28 MOVZ W2, 0x9
	0x01ECCE2C MOV X0, X20
	0x01ECCE30 BL 0x1C5C788
	0x01ECCE34 B 0x1ECCE48
	0x01ECCE38 LDR W9, [X10]
	0x01ECCE3C ADD W9, W9, 0x9
	0x01ECCE40 ADD X8, X8, W9, 0x4, SXTW
	0x01ECCE44 ADD X0, X8, 0x138
	0x01ECCE48 LDP X8, X1, [X0]
	0x01ECCE4C MOV X0, X20
	0x01ECCE50 BLR X8
	0x01ECCE54 LDR X0, [X19 + 0x1B8]
	0x01ECCE58 CBZ X0, 0x1ECCEB8
	0x01ECCE5C MOV V0.16B, V2.16B
	0x01ECCE60 MOV X1, X31
	0x01ECCE64 MOV V8.16B, V2.16B
	0x01ECCE68 BL 0x1EBE628
	0x01ECCE6C MOV X0, X19
	0x01ECCE70 MOV V0.16B, V8.16B
	0x01ECCE74 BL 0x1ECE52C
	0x01ECCE78 LDR V0, [X19 + 0x70]
	0x01ECCE7C LDR V1, [X19 + 0x78]
	0x01ECCE80 LDR X8, [X19 + 0x1B8]
	0x01ECCE84 STR D0, [X19 + 0x80]
	0x01ECCE88 STR S1, [X19 + 0x88]
	0x01ECCE8C CBZ X8, 0x1ECCEB8
	0x01ECCE90 LDR W9, [X8 + 0x20]
	0x01ECCE94 STR W9, [X19 + 0x74]
	0x01ECCE98 LDR W9, [X8 + 0x24]
	0x01ECCE9C STR W9, [X19 + 0x70]
	0x01ECCEA0 LDR V0, [X8 + 0x28]
	0x01ECCEA4 STR S0, [X19 + 0x78]
	0x01ECCEA8 LDP X20, X19, [X31 + 0x10]
	0x01ECCEAC LDR X30, [X31 + 0x8]

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+208], X29
	003 Move [X31+224], X30
	004 Move [X31+232], X25
	005 Move [X31+240], X24
	006 Move [X31+248], X23
	007 Move [X31+256], X22
	008 Move [X31+264], X21
	009 Move [X31+272], X20
	010 Move [X31+280], X19
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X22+40]
	013 Move X25, 0x250E000
	014 Move X24, 0x2234000
	015 Move X23, 0x2234000
	016 Move [X31+200], X8
	017 Move X21, 0x2234000
	018 Move W8, [X25+1227]
	019 Move X24, [X24+3472]
	020 Move X23, [X23+3480]
	021 Move X21, [X21+3488]
	022 Move X20, X1
	023 Move X19, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {48}
	028 Move X0, 0x2234000
	029 Move X0, [X0+3496]
	030 Call 0x1C17CF4
	031 Move X0, 0x2234000
	032 Move X0, [X0+3472]
	033 Call 0x1C17CF4
	034 Move X0, 0x2234000
	035 Move X0, [X0+3488]
	036 Call 0x1C17CF4
	037 Move X0, 0x2234000
	038 Move X0, [X0+3504]
	039 Call 0x1C17CF4
	040 Move X0, 0x2234000
	041 Move X0, [X0+3480]
	042 Call 0x1C17CF4
	043 Move X0, 0x2233000
	044 Move X0, [X0+1096]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X25+1227], W8
	048 Add X0, X31, 120
	049 Move W2, 80
	050 Move X1, X20
	051 Call 0x3EB2AC0
	052 Add X1, X31, 120
	053 Move X0, X19
	054 Move X2, X31
	055 Call Simulation..ctor, X0, X1
	056 Move X0, [X24]
	057 Call 0x1C17F10
	058 Add X8, X31, 8
	059 Move X20, X0
	060 Call ClientTimeProviderSettings.Default
	061 Add X1, X31, 8
	062 Move X0, X20
	063 Call ClientTimeProvider..ctor, X0, X1
	064 Move X0, [X23]
	065 Call 0x1C17F10
	066 Move X2, [X21]
	067 Move X1, X19
	068 Move X3, X31
	069 Move X21, X0
	070 Call TimeProviderCallback..ctor, X0, X1, X2
	071 Compare X20, 0
	072 JumpIfEqual {116}
	073 Move X23, 0x2233000
	074 Move X24, 0x2234000
	075 Move X25, 0x2234000
	076 Move X23, [X23+1096]
	077 Move X24, [X24+3496]
	078 Move X25, [X25+3504]
	079 Move W1, 1
	080 Move X0, X20
	081 Move X2, X21
	082 Call ClientTimeProvider.OnReset, X0, X1, X2
	083 Move [X19+104], X20
	084 Move X0, [X23]
	085 Call 0x1C17F10
	086 Move W1, 128
	087 Move X2, X31
	088 Move X20, X0
	089 Call Timeline..ctor, X0, X1
	090 Move [X19+440], X20
	091 Move X0, [X24]
	092 Move X20, [X19+96]
	093 Call 0x1C17F10
	094 Move X1, X20
	095 Move X21, X0
	096 Call Buffer..ctor, X0, X1
	097 Move [X19+448], X21
	098 Move X0, [X25]
	099 Move W1, 128
	100 Call 0x1C17D6C
	101 Move [X19+456], X0
	102 Move X8, [X22+40]
	103 Move X9, [X31+200]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X20, [X31+272]
	106 Move X19, [X31+280]
	107 Move X22, [X31+256]
	108 Move X21, [X31+264]
	109 Move X24, [X31+240]
	110 Move X23, [X31+248]
	111 Move X30, [X31+224]
	112 Move X25, [X31+232]
	113 Move X29, [X31+208]
	114 Add X31, X31, 288
	115 Return 
	116 Call 0x1C17F20
	117 Call 0x3EB2B20

Method: System.Void Connect(Fusion.Sockets.NetAddress address, System.Byte[] token = null, System.Byte[] uniqueId = null)

Disassembly:
	0x01ECD10C MOV X1, X21
	0x01ECD110 BL 0x2213878
	0x01ECD114 B 0x1ECD070
	0x01ECD118 MOVZ W0, 0x8
	0x01ECD11C BL 0x3EB1AF0
	0x01ECD120 LDR X8, [X21]
	0x01ECD124 STR X8, [X0]
	0x01ECD128 ADRP X1, 0x1FE7000
	0x01ECD12C ADD X1, X1, 0xE58
	0x01ECD130 MOV X2, X31
	0x01ECD134 BL 0x3EB1B00
	0x01ECD138 MOV X21, X0
	0x01ECD13C BL 0x3EB1AE0
	0x01ECD140 MOV X0, X21
	0x01ECD144 BL 0x1D2C690
	0x01ECD148 BL 0x1990590
	0x01ECD14C SUB X31, X31, 0x30
	0x01ECD150 STR X30, [X31 + 0x10]
	0x01ECD154 STP X20, X19, [X31 + 0x20]
	0x01ECD158 ADRP X20, 0x250C000
	0x01ECD15C LDRB W8, [X20 + 0x4D5]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 NotImplemented "Instruction MRS not yet implemented."
	005 Move X8, [X19+40]
	006 Move X4, X31
	007 Move [X31+24], X8
	008 Move X8, [X1+16]
	009 Move V0, [X1]
	010 Move X0, [X0+304]
	011 Add X1, X31, 0
	012 Move [X31+16], X8
	013 Move [X31], V0
	014 Call NetPeerGroup.Connect, X0, X1, X2, X3
	015 Move X8, [X19+40]
	016 Move X9, [X31+24]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X30, [X31+32]
	019 Move X19, [X31+40]
	020 Add X31, X31, 48
	021 Return 
	022 Call 0x3EB2B20

Method: System.Void Connect(System.String ip, System.UInt16 port, System.Byte[] token = null, System.Byte[] uniqueId = null)

Disassembly:
	0x01ECD160 MOV X19, X0
	0x01ECD164 TBNZ X8, 0x0, 0x1ECD17C
	0x01ECD168 ADRP X0, 0x2232000

ISIL:
	001 Move X0, [X0+304]
	002 Move X5, X31
	003 Call NetPeerGroup.Connect, X0, X1, X2, X3, X4
	004 Return 

Method: System.Void BeforeUpdate()

Disassembly:
	0x01ECD16C LDR X0, [X0 + 0xE00]
	0x01ECD170 BL 0x1C16CF4
	0x01ECD174 MOVZ W8, 0x1
	0x01ECD178 STRB W8, [X20 + 0x4D5]
	0x01ECD17C LDR X0, [X19 + 0x1C0]
	0x01ECD180 CBZ X0, 0x1ECD1C0
	0x01ECD184 LDR X1, [X19 + 0x1C8]
	0x01ECD188 ADRP X20, 0x2232000
	0x01ECD18C LDR X20, [X20 + 0xE00]
	0x01ECD190 BL 0x1ECE41C
	0x01ECD194 LDR X1, [X19 + 0x1C8]
	0x01ECD198 LDR X3, [X20]
	0x01ECD19C MOV W2, W0
	0x01ECD1A0 ADD X0, X31, 0x0
	0x01ECD1A4 STP X31, X31, [X31]
	0x01ECD1A8 BL 0x27AA184
	0x01ECD1AC LDP X0, X1, [X31]
	0x01ECD1B0 LDP X20, X19, [X31 + 0x20]
	0x01ECD1B4 LDR X30, [X31 + 0x10]
	0x01ECD1B8 ADD X31, X31, 0x30
	0x01ECD1BC RET
	0x01ECD1C0 BL 0x1C16F20
	0x01ECD1C4 STR X30, [X31 - 0x30]!
	0x01ECD1C8 STP X22, X21, [X31 + 0x10]
	0x01ECD1CC STP X20, X19, [X31 + 0x20]
	0x01ECD1D0 ADRP X22, 0x250C000
	0x01ECD1D4 LDRB W8, [X22 + 0x532]
	0x01ECD1D8 MOV X20, X2
	0x01ECD1DC MOV X21, X1
	0x01ECD1E0 MOV X19, X0
	0x01ECD1E4 TBNZ X8, 0x0, 0x1ECD214
	0x01ECD1E8 ADRP X0, 0x2232000
	0x01ECD1EC LDR X0, [X0 + 0xE08]
	0x01ECD1F0 BL 0x1C16CF4
	0x01ECD1F4 ADRP X0, 0x2232000
	0x01ECD1F8 LDR X0, [X0 + 0xA90]
	0x01ECD1FC BL 0x1C16CF4
	0x01ECD200 ADRP X0, 0x2232000
	0x01ECD204 LDR X0, [X0 + 0xE10]
	0x01ECD208 BL 0x1C16CF4
	0x01ECD20C MOVZ W8, 0x1
	0x01ECD210 STRB W8, [X22 + 0x532]
	0x01ECD214 LDR X0, [X19 + 0x30]
	0x01ECD218 CBZ X0, 0x1ECD2E0
	0x01ECD21C ADRP X8, 0x2232000
	0x01ECD220 LDR X8, [X8 + 0xA90]
	0x01ECD224 AND X21, X21, 0x0
	0x01ECD228 MOV X1, X21
	0x01ECD22C LDR X2, [X8]
	0x01ECD230 BL 0x2AF16FC
	0x01ECD234 LDR X0, [X19 + 0x28]
	0x01ECD238 CBZ X0, 0x1ECD2E0
	0x01ECD23C ADRP X8, 0x2232000
	0x01ECD240 LDR X8, [X8 + 0xE10]
	0x01ECD244 MOV X1, X21
	0x01ECD248 MOV X2, X20
	0x01ECD24C LDR X3, [X8]
	0x01ECD250 BL 0x2AF4D74
	0x01ECD254 TBZ X0, 0x0, 0x1ECD2B8
	0x01ECD258 LDR X8, [X20]
	0x01ECD25C CBZ X8, 0x1ECD2E0
	0x01ECD260 LDR X8, [X8 + 0x20]
	0x01ECD264 CBZ X8, 0x1ECD2E0
	0x01ECD268 LDR W8, [X8]
	0x01ECD26C STR W8, [X19 + 0x38]
	0x01ECD270 LDR X8, [X20]
	0x01ECD274 CBZ X8, 0x1ECD2E0
	0x01ECD278 LDR X8, [X8 + 0x20]
	0x01ECD27C CBZ X8, 0x1ECD2E0
	0x01ECD280 LDR W8, [X8 + 0x8]
	0x01ECD284 STR W8, [X19 + 0x40]
	0x01ECD288 LDR X8, [X20]
	0x01ECD28C CBZ X8, 0x1ECD2E0
	0x01ECD290 LDR X8, [X8 + 0x20]
	0x01ECD294 CBZ X8, 0x1ECD2E0
	0x01ECD298 LDR W8, [X8 + 0xC]
	0x01ECD29C STR W8, [X19 + 0x44]
	0x01ECD2A0 LDR X8, [X20]
	0x01ECD2A4 CBZ X8, 0x1ECD2E0
	0x01ECD2A8 LDR X8, [X8 + 0x20]
	0x01ECD2AC CBZ X8, 0x1ECD2E0
	0x01ECD2B0 LDR V0, [X8 + 0x4]
	0x01ECD2B4 STR S0, [X19 + 0x3C]
	0x01ECD2B8 LDR X0, [X19 + 0x28]
	0x01ECD2BC CBZ X0, 0x1ECD2E0
	0x01ECD2C0 ADRP X8, 0x2232000
	0x01ECD2C4 LDR X8, [X8 + 0xE08]
	0x01ECD2C8 MOV X1, X21
	0x01ECD2CC LDP X20, X19, [X31 + 0x20]
	0x01ECD2D0 LDP X22, X21, [X31 + 0x10]
	0x01ECD2D4 LDR X2, [X8]
	0x01ECD2D8 LDR X30, [X31], #0x30
	0x01ECD2DC B 0x2AF4768
	0x01ECD2E0 BL 0x1C16F20
	0x01ECD2E4 STP X30, X21, [X31 - 0x20]!
	0x01ECD2E8 STP X20, X19, [X31 + 0x10]
	0x01ECD2EC ADRP X21, 0x250C000
	0x01ECD2F0 LDRB W8, [X21 + 0x538]
	0x01ECD2F4 MOV X19, X1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X21, 0x250D000
	008 Move X20, 0x222A000
	009 Move W8, [X21+1228]
	010 Move X20, [X20+920]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x222A000
	017 Move X0, [X0+920]
	018 Call 0x1C17CF4
	019 Move X0, 0x222B000
	020 Move X0, [X0+4056]
	021 Call 0x1C17CF4
	022 Move X0, 0x222B000
	023 Move X0, [X0+3056]
	024 Call 0x1C17CF4
	025 Move X0, 0x222B000
	026 Move X0, [X0+3064]
	027 Call 0x1C17CF4
	028 Move X0, 0x222A000
	029 Move X0, [X0+3648]
	030 Call 0x1C17CF4
	031 Move X0, 0x222C000
	032 Move X0, [X0+40]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+1228], W8
	036 Move X0, [X20]
	037 Move [X31+24], X31
	038 Move X20, 0x222C000
	039 Move W8, [X0+224]
	040 Move X20, [X20+40]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X31
	045 Call NetworkId.get_RuntimeConfig
	046 Move X3, [X20]
	047 And X1, X0, 0
	048 Add X2, X31, 24
	049 Move X0, X19
	050 Call Simulation.TryGetStructData, X0, X1, X2
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {104}
	055 Move X8, [X31+24]
	056 Compare X8, 0
	057 JumpIfEqual {111}
	058 Move X9, [X19]
	059 Move W21, [X8+24]
	060 Move X0, X19
	061 Move X8, [X9+616]
	062 Move X1, [X9+624]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move X8, 0x222A000
	065 Move X8, [X8+3648]
	066 Move X20, X0
	067 Move X8, [X8]
	068 Move W9, [X8+224]
	069 Compare W9, 0
	070 JumpIfNotEqual {73}
	071 Move X0, X8
	072 Call 0x1C17DFC
	073 Move X0, X19
	074 Move X1, X31
	075 Call Simulation.get_Topology, X0
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move W8, [X19+468]
	078 Compare W8, 0
	079 JumpIfEqual {94}
	080 Move X8, 0x222B000
	081 Move X8, [X8+3064]
	082 Add X0, X19, 468
	083 NotImplemented "Instruction CMP not yet implemented."
	084 NotImplemented "Instruction CSET not yet implemented."
	085 Move X1, [X8]
	086 Call Nullable`1<Boolean>.get_Value, X0
	087 And W8, W0, 1
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 NotImplemented "Instruction CSET not yet implemented."
	091 Move X0, X19
	092 Move X2, X31
	093 Call Simulation.UpdateSimulationStateForMasterClientObjects, X0, X1
	094 Move X8, 0x222B000
	095 Move X8, [X8+4056]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 NotImplemented "Instruction CSET not yet implemented."
	098 Add X0, X31, 12
	099 Move X2, [X8]
	100 NotImplemented "Instruction STRH not yet implemented."
	101 Call Nullable`1<Boolean>..ctor, X0, X1
	102 NotImplemented "Instruction LDRH not yet implemented."
	103 NotImplemented "Instruction STRH not yet implemented."
	104 Move X20, [X31+48]
	105 Move X19, [X31+56]
	106 Move X22, [X31+32]
	107 Move X21, [X31+40]
	108 Move X30, [X31+16]
	109 Add X31, X31, 64
	110 Return 
	111 Call 0x1C17F20

Method: System.Void BeforeFirstTick()

Disassembly:
	0x01ECD2F8 MOV X20, X0
	0x01ECD2FC TBNZ X8, 0x0, 0x1ECD314
	0x01ECD300 ADRP X0, 0x2232000
	0x01ECD304 LDR X0, [X0 + 0xE18]
	0x01ECD308 BL 0x1C16CF4
	0x01ECD30C MOVZ W8, 0x1
	0x01ECD310 STRB W8, [X21 + 0x538]
	0x01ECD314 CBZ X19, 0x1ECD36C
	0x01ECD318 LDR X8, [X20 + 0x28]
	0x01ECD31C CBZ X8, 0x1ECD36C
	0x01ECD320 LDR W8, [X8 + 0x10]
	0x01ECD324 LDR X0, [X19 + 0x20]
	0x01ECD328 MOV X2, X31
	0x01ECD32C UBFM W8, W8, 0x1E, 0x1D
	0x01ECD330 ADD W1, W8, 0x10
	0x01ECD334 BL 0x1E35770
	0x01ECD338 MOVZ W8, 0x1
	0x01ECD33C STR W31, [X19 + 0x10]
	0x01ECD340 STRB W8, [X19 + 0x14]
	0x01ECD344 STR W31, [X19 + 0x18]
	0x01ECD348 LDR X0, [X20 + 0x18]
	0x01ECD34C CBZ X0, 0x1ECD36C
	0x01ECD350 ADRP X8, 0x2232000
	0x01ECD354 LDR X8, [X8 + 0xE18]
	0x01ECD358 MOV X1, X19
	0x01ECD35C LDP X20, X19, [X31 + 0x10]
	0x01ECD360 LDR X2, [X8]
	0x01ECD364 LDP X30, X21, [X31], #0x20
	0x01ECD368 B 0x2602314
	0x01ECD36C BL 0x1C16F20
	0x01ECD370 SUB X31, X31, 0x70
	0x01ECD374 STP D11, D10, [X31 + 0x20]
	0x01ECD378 STP D9, D8, [X31 + 0x30]
	0x01ECD37C STR X30, [X31 + 0x40]
	0x01ECD380 STP X22, X21, [X31 + 0x50]
	0x01ECD384 STP X20, X19, [X31 + 0x60]
	0x01ECD388 ADRP X20, 0x250C000
	0x01ECD38C LDRB W8, [X20 + 0x4D3]
	0x01ECD390 MOV X19, X0
	0x01ECD394 TBNZ X8, 0x0, 0x1ECD3AC
	0x01ECD398 ADRP X0, 0x2231000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x250D000
	005 Move W8, [X20+1229]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2232000
	012 Move X0, [X0+2704]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1229], W8
	016 Move X19, [X19+64]
	017 Compare X19, 0
	018 JumpIfEqual {46}
	019 Move X10, 0x2232000
	020 Move X8, [X19]
	021 Move X10, [X10+2704]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move W2, 2
	033 Move X0, X19
	034 Call 0x1C5D788
	035 Move W9, [X10]
	036 Add W9, W9, 2
	037 Add X8, X8, W9
	038 Add X0, X8, 312
	039 Move X2, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 CallNoReturn X2
	046 Call 0x1C17F20

Method: System.Void NetworkConnected(Fusion.Sockets.NetConnection* connection)

Disassembly:
	0x01ECD39C LDR X0, [X0 + 0x7C0]
	0x01ECD3A0 BL 0x1C16CF4

ISIL:
	001 Move [X0+424], X1
	002 Return 

Method: Fusion.PlayerRef Connection2Player(Fusion.Sockets.NetConnection* c)

Disassembly:
	0x01ECD3A4 MOVZ W8, 0x1
	0x01ECD3A8 STRB W8, [X20 + 0x4D3]
	0x01ECD3AC LDR X8, [X19 + 0x110]
	0x01ECD3B0 CBZ X8, 0x1ECD568
	0x01ECD3B4 LDR W20, [X8 + 0x20]
	0x01ECD3B8 STP X31, X31, [X31 + 0x10]
	0x01ECD3BC LDR X1, [X8 + 0x28]
	0x01ECD3C0 ADD X0, X31, 0x10

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+616]
	004 Move X1, [X8+624]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 And X0, X0, 0
	007 Move X30, [X31+16]
	008 Return X0

Method: System.Int32 Player2Connection(Fusion.PlayerRef player)

Disassembly:
	0x01ECD3C4 BL 0x1ECD56C
	0x01ECD3C8 LDR X0, [X19 + 0xA8]
	0x01ECD3CC CBZ X0, 0x1ECD568
	0x01ECD3D0 BL 0x1ECD71C
	0x01ECD3D4 MOVZ W8, 0x1
	0x01ECD3D8 MOV X0, X19
	0x01ECD3DC MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+424]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 NotImplemented "Instruction LDRSH not yet implemented."
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void NetworkDisconnected(Fusion.Sockets.NetConnection* connection, Fusion.Sockets.NetDisconnectReason reason)

Disassembly:
	0x01ECD3E0 STRB W8, [X19 + 0x1B0]
	0x01ECD3E4 BL 0x1EC03FC
	0x01ECD3E8 TBZ X0, 0x0, 0x1ECD54C
	0x01ECD3EC LDR X21, [X19 + 0x1B8]
	0x01ECD3F0 MOV X0, X19
	0x01ECD3F4 MOV X1, X31
	0x01ECD3F8 BIC W20, W20, W20, 0x1F
	0x01ECD3FC BL 0x1EC0524
	0x01ECD400 ADD X0, X31, 0x0
	0x01ECD404 MOV X1, X20
	0x01ECD408 MOV X2, X20
	0x01ECD40C MOV X3, X31
	0x01ECD410 STP X31, X31, [X31]
	0x01ECD414 BL 0x1EBE020
	0x01ECD418 MOV X0, X19
	0x01ECD41C MOV X1, X31
	0x01ECD420 BL 0x1EC0524
	0x01ECD424 CBZ X21, 0x1ECD568
	0x01ECD428 LDP X1, X2, [X31]
	0x01ECD42C MOVZ W3, 0x1
	0x01ECD430 MOV X0, X21
	0x01ECD434 MOV X4, X31
	0x01ECD438 BL 0x1EBE16C
	0x01ECD43C MOV X0, X19
	0x01ECD440 BL 0x1ECD77C
	0x01ECD444 LDR X8, [X19 + 0x1A8]
	0x01ECD448 LDR X21, [X19 + 0x68]
	0x01ECD44C CBZ X8, 0x1ECD45C
	0x01ECD450 LDR V8, [X8 + 0x48]
	0x01ECD454 CBNZ X21, 0x1ECD464
	0x01ECD458 B 0x1ECD568
	0x01ECD45C FMOV D8, X31
	0x01ECD460 CBZ X21, 0x1ECD568
	0x01ECD464 ADRP X22, 0x2231000
	0x01ECD468 LDR X8, [X21]
	0x01ECD46C LDR X22, [X22 + 0x7C0]
	0x01ECD470 LDRH W9, [X8 + 0x12E]
	0x01ECD474 LDR X1, [X22]
	0x01ECD478 CBZ X9, 0x1ECD49C
	0x01ECD47C LDR X10, [X8 + 0xB0]
	0x01ECD480 ADD X10, X10, 0x8
	0x01ECD484 LDUR X11, [X10 - 0x8]
	0x01ECD488 CMP X11, X1
	0x01ECD48C B.EQ 0x1ECD4AC
	0x01ECD490 SUBS X9, X9, 0x1
	0x01ECD494 ADD X10, X10, 0x10
	0x01ECD498 B.NE 0x1ECD484
	0x01ECD49C MOVZ W2, 0x6
	0x01ECD4A0 MOV X0, X21
	0x01ECD4A4 BL 0x1C5C788
	0x01ECD4A8 B 0x1ECD4BC
	0x01ECD4AC LDR W9, [X10]
	0x01ECD4B0 ADD W9, W9, 0x6
	0x01ECD4B4 ADD X8, X8, W9, 0x4, SXTW
	0x01ECD4B8 ADD X0, X8, 0x138
	0x01ECD4BC LDP X8, X2, [X0]
	0x01ECD4C0 MOV X0, X21
	0x01ECD4C4 MOV V0.16B, V8.16B
	0x01ECD4C8 MOV X1, X20
	0x01ECD4CC BLR X8
	0x01ECD4D0 LDR X19, [X19 + 0x68]
	0x01ECD4D4 CBZ X19, 0x1ECD568
	0x01ECD4D8 LDR X8, [X19]
	0x01ECD4DC LDP S9, S8, [X31 + 0x18]
	0x01ECD4E0 LDP S11, S10, [X31 + 0x10]
	0x01ECD4E4 LDR X1, [X22]
	0x01ECD4E8 LDRH W9, [X8 + 0x12E]
	0x01ECD4EC CBZ X9, 0x1ECD510
	0x01ECD4F0 LDR X10, [X8 + 0xB0]
	0x01ECD4F4 ADD X10, X10, 0x8
	0x01ECD4F8 LDUR X11, [X10 - 0x8]
	0x01ECD4FC CMP X11, X1
	0x01ECD500 B.EQ 0x1ECD520
	0x01ECD504 SUBS X9, X9, 0x1
	0x01ECD508 ADD X10, X10, 0x10
	0x01ECD50C B.NE 0x1ECD4F8
	0x01ECD510 MOVZ W2, 0x7
	0x01ECD514 MOV X0, X19
	0x01ECD518 BL 0x1C5C788
	0x01ECD51C B 0x1ECD530
	0x01ECD520 LDR W9, [X10]
	0x01ECD524 ADD W9, W9, 0x7
	0x01ECD528 ADD X8, X8, W9, 0x4, SXTW
	0x01ECD52C ADD X0, X8, 0x138
	0x01ECD530 LDP X8, X1, [X0]
	0x01ECD534 MOV X0, X19
	0x01ECD538 MOV V0.16B, V11.16B
	0x01ECD53C MOV V1.16B, V10.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x250D000
	006 Move W8, [X21+1230]
	007 Move W20, W2
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2232000
	014 Move X0, [X0+2704]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1230], W8
	018 Move X21, [X19+64]
	019 Move [X19+424], X31
	020 Compare X21, 0
	021 JumpIfEqual {52}
	022 Move X10, 0x2232000
	023 Move X8, [X21]
	024 Move X10, [X10+2704]
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move X1, [X10]
	027 Compare X9, 0
	028 JumpIfEqual {35}
	029 Move X10, [X8+176]
	030 Add X10, X10, 8
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract X9, X9, 1
	034 Add X10, X10, 16
	035 Move W2, 16
	036 Move X0, X21
	037 Call 0x1C5D788
	038 Move W9, [X10]
	039 Add W9, W9, 16
	040 Add X8, X8, W9
	041 Add X0, X8, 312
	042 Move X8, [X0]
	043 Move X2, [X0+8]
	044 Move X0, X21
	045 Move W1, W20
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 
	052 Call 0x1C17F20
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X20, X0
	055 Move X0, X20
	056 Call 0x3EB2AD0
	057 Move X20, X0
	058 Move X0, 0x2227000
	059 Move X0, [X0+2000]
	060 Call 0x1C17D08
	061 Move X8, [X20]
	062 Move X1, [X8]
	063 Call 0x1C18270
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {89}
	068 Move X20, [X20]
	069 Call 0x3EB2AE0
	070 Move X0, 0x222F000
	071 Move X0, [X0+2224]
	072 Call 0x1C17D08
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, 0x2233000
	078 Move X0, [X0+3544]
	079 Call 0x1C17D08
	080 Move X2, X0
	081 Move X0, X19
	082 Move X1, X20
	083 Move X20, [X31+16]
	084 Move X19, [X31+24]
	085 Move X30, [X31+32]
	086 Move X21, [X31+40]
	087 Call 0x2214878, X0, X1
	088 Return 
	089 Move W0, 8
	090 Call 0x3EB2AF0
	091 Move X8, [X20]
	092 Move [X0], X8
	093 Move X1, 0x1FE8000
	094 Add X1, X1, 3672
	095 Move X2, X31
	096 Call 0x3EB2B00
	097 Move X20, X0
	098 Call 0x3EB2AE0
	099 Move X0, X20
	100 Call 0x1D2D690
	101 Call 0x1991590

Method: System.Void NetworkReceiveDone()

Disassembly:
	0x01ECD540 MOV V2.16B, V9.16B
	0x01ECD544 MOV V3.16B, V8.16B
	0x01ECD548 BLR X8
	0x01ECD54C LDP X20, X19, [X31 + 0x60]
	0x01ECD550 LDP X22, X21, [X31 + 0x50]
	0x01ECD554 LDR X30, [X31 + 0x40]
	0x01ECD558 LDP D9, D8, [X31 + 0x30]
	0x01ECD55C LDP D11, D10, [X31 + 0x20]
	0x01ECD560 ADD X31, X31, 0x70
	0x01ECD564 RET
	0x01ECD568 BL 0x1C16F20
	0x01ECD56C STP X30, X23, [X31 - 0x30]!
	0x01ECD570 STP X22, X21, [X31 + 0x10]
	0x01ECD574 STP X20, X19, [X31 + 0x20]
	0x01ECD578 MOV X20, X1
	0x01ECD57C MOV X19, X0
	0x01ECD580 MOVZ W1, 0x6
	0x01ECD584 MOV X0, X20
	0x01ECD588 MOV X2, X31
	0x01ECD58C BL 0x1EFA5C0
	0x01ECD590 ADRP X22, 0x250B000
	0x01ECD594 LDRB W8, [X22 + 0xE90]
	0x01ECD598 MOV W21, W0
	0x01ECD59C CBNZ W8, 0x1ECD5B4
	0x01ECD5A0 ADRP X0, 0x222D000
	0x01ECD5A4 LDR X0, [X0 + 0xC68]
	0x01ECD5A8 BL 0x1C16CF4
	0x01ECD5AC MOVZ W8, 0x1
	0x01ECD5B0 STRB W8, [X22 + 0xE90]
	0x01ECD5B4 ADRP X23, 0x222D000
	0x01ECD5B8 LDR X23, [X23 + 0xC68]
	0x01ECD5BC LDR X0, [X23]
	0x01ECD5C0 LDR W8, [X0 + 0xE0]
	0x01ECD5C4 CBNZ W8, 0x1ECD5CC
	0x01ECD5C8 BL 0x1C16DFC
	0x01ECD5CC AND W8, W21, 0x1
	0x01ECD5D0 SUB W8, W31, W8
	0x01ECD5D4 EOR W8, W8, W21, 0x1
	0x01ECD5D8 MOVZ W9, 0x3B800000
	0x01ECD5DC SCVTF S0, W8
	0x01ECD5E0 FMOV S1, W9
	0x01ECD5E4 FMUL S0, S0, S1
	0x01ECD5E8 MOVZ W1, 0x6
	0x01ECD5EC MOV X0, X20
	0x01ECD5F0 MOV X2, X31
	0x01ECD5F4 STR S0, [X19]
	0x01ECD5F8 BL 0x1EFA5C0
	0x01ECD5FC LDRB W8, [X22 + 0xE90]
	0x01ECD600 MOV W21, W0
	0x01ECD604 CBNZ W8, 0x1ECD61C
	0x01ECD608 ADRP X0, 0x222D000
	0x01ECD60C LDR X0, [X0 + 0xC68]
	0x01ECD610 BL 0x1C16CF4
	0x01ECD614 MOVZ W8, 0x1
	0x01ECD618 STRB W8, [X22 + 0xE90]
	0x01ECD61C LDR X0, [X23]
	0x01ECD620 LDR W8, [X0 + 0xE0]
	0x01ECD624 CBNZ W8, 0x1ECD62C
	0x01ECD628 BL 0x1C16DFC
	0x01ECD62C AND W8, W21, 0x1
	0x01ECD630 SUB W8, W31, W8
	0x01ECD634 EOR W8, W8, W21, 0x1
	0x01ECD638 MOVZ W9, 0x3B800000
	0x01ECD63C SCVTF S0, W8
	0x01ECD640 FMOV S1, W9
	0x01ECD644 FMUL S0, S0, S1
	0x01ECD648 MOVZ W1, 0x6
	0x01ECD64C MOV X0, X20
	0x01ECD650 MOV X2, X31
	0x01ECD654 STR S0, [X19 + 0x4]
	0x01ECD658 BL 0x1EFA5C0
	0x01ECD65C LDRB W8, [X22 + 0xE90]
	0x01ECD660 MOV W21, W0
	0x01ECD664 CBNZ W8, 0x1ECD67C
	0x01ECD668 ADRP X0, 0x222D000
	0x01ECD66C LDR X0, [X0 + 0xC68]
	0x01ECD670 BL 0x1C16CF4
	0x01ECD674 MOVZ W8, 0x1
	0x01ECD678 STRB W8, [X22 + 0xE90]
	0x01ECD67C LDR X0, [X23]
	0x01ECD680 LDR W8, [X0 + 0xE0]
	0x01ECD684 CBNZ W8, 0x1ECD68C
	0x01ECD688 BL 0x1C16DFC
	0x01ECD68C AND W8, W21, 0x1
	0x01ECD690 SUB W8, W31, W8
	0x01ECD694 EOR W8, W8, W21, 0x1
	0x01ECD698 MOVZ W9, 0x3B800000
	0x01ECD69C SCVTF S0, W8
	0x01ECD6A0 FMOV S1, W9
	0x01ECD6A4 FMUL S0, S0, S1
	0x01ECD6A8 MOVZ W1, 0x6
	0x01ECD6AC MOV X0, X20
	0x01ECD6B0 MOV X2, X31
	0x01ECD6B4 STR S0, [X19 + 0x8]
	0x01ECD6B8 BL 0x1EFA5C0
	0x01ECD6BC LDRB W8, [X22 + 0xE90]
	0x01ECD6C0 MOV W20, W0
	0x01ECD6C4 CBNZ W8, 0x1ECD6DC
	0x01ECD6C8 ADRP X0, 0x222D000
	0x01ECD6CC LDR X0, [X0 + 0xC68]
	0x01ECD6D0 BL 0x1C16CF4
	0x01ECD6D4 MOVZ W8, 0x1
	0x01ECD6D8 STRB W8, [X22 + 0xE90]
	0x01ECD6DC LDR X0, [X23]
	0x01ECD6E0 LDR W8, [X0 + 0xE0]
	0x01ECD6E4 CBNZ W8, 0x1ECD6EC
	0x01ECD6E8 BL 0x1C16DFC
	0x01ECD6EC AND W8, W20, 0x1
	0x01ECD6F0 SUB W8, W31, W8
	0x01ECD6F4 EOR W8, W8, W20, 0x1
	0x01ECD6F8 MOVZ W9, 0x3B800000
	0x01ECD6FC SCVTF S0, W8
	0x01ECD700 FMOV S1, W9
	0x01ECD704 FMUL S0, S0, S1
	0x01ECD708 STR S0, [X19 + 0xC]
	0x01ECD70C LDP X20, X19, [X31 + 0x20]
	0x01ECD710 LDP X22, X21, [X31 + 0x10]
	0x01ECD714 LDP X30, X23, [X31], #0x30
	0x01ECD718 RET
	0x01ECD71C STP X30, X19, [X31 - 0x10]!
	0x01ECD720 MOV X19, X0
	0x01ECD724 LDR X0, [X0 + 0x10]
	0x01ECD728 CBZ X0, 0x1ECD778
	0x01ECD72C MOV X1, X31
	0x01ECD730 BL 0x1EC0810
	0x01ECD734 CMP W0, 0x2
	0x01ECD738 B.NE 0x1ECD748
	0x01ECD73C LDR X8, [X19 + 0x10]
	0x01ECD740 CBNZ X8, 0x1ECD75C
	0x01ECD744 B 0x1ECD778
	0x01ECD748 LDR X8, [X19 + 0x10]
	0x01ECD74C CBZ X8, 0x1ECD778
	0x01ECD750 LDR W8, [X8 + 0x4C]
	0x01ECD754 CMP W8, 0x4
	0x01ECD758 B.NE 0x1ECD770
	0x01ECD75C MOV X0, X19
	0x01ECD760 BL 0x1ED2D28
	0x01ECD764 MOV X0, X19
	0x01ECD768 LDP X30, X19, [X31], #0x10
	0x01ECD76C B 0x1ED2DE8
	0x01ECD770 LDP X30, X19, [X31], #0x10
	0x01ECD774 RET
	0x01ECD778 BL 0x1C16F20
	0x01ECD77C SUB X31, X31, 0x50
	0x01ECD780 STR X30, [X31 + 0x30]
	0x01ECD784 STP X20, X19, [X31 + 0x40]
	0x01ECD788 ADRP X20, 0x250C000
	0x01ECD78C LDRB W8, [X20 + 0x4D7]
	0x01ECD790 MOV X19, X0
	0x01ECD794 TBNZ X8, 0x0, 0x1ECD7DC
	0x01ECD798 ADRP X0, 0x2231000
	0x01ECD79C LDR X0, [X0 + 0xA40]
	0x01ECD7A0 BL 0x1C16CF4
	0x01ECD7A4 ADRP X0, 0x2231000
	0x01ECD7A8 LDR X0, [X0 + 0xA48]
	0x01ECD7AC BL 0x1C16CF4
	0x01ECD7B0 ADRP X0, 0x2231000
	0x01ECD7B4 LDR X0, [X0 + 0xA50]
	0x01ECD7B8 BL 0x1C16CF4
	0x01ECD7BC ADRP X0, 0x2231000
	0x01ECD7C0 LDR X0, [X0 + 0xA58]
	0x01ECD7C4 BL 0x1C16CF4
	0x01ECD7C8 ADRP X0, 0x2231000
	0x01ECD7CC LDR X0, [X0 + 0xA60]
	0x01ECD7D0 BL 0x1C16CF4
	0x01ECD7D4 MOVZ W8, 0x1
	0x01ECD7D8 STRB W8, [X20 + 0x4D7]
	0x01ECD7DC MOVI V0.2D, 0x0
	0x01ECD7E0 STR X31, [X31 + 0x20]
	0x01ECD7E4 STP V0, V0, [X31]
	0x01ECD7E8 LDR X0, [X19 + 0x150]
	0x01ECD7EC CBZ X0, 0x1ECD864
	0x01ECD7F0 ADRP X8, 0x2231000
	0x01ECD7F4 LDR X8, [X8 + 0xA40]
	0x01ECD7F8 ADRP X20, 0x2231000
	0x01ECD7FC ADRP X19, 0x2231000
	0x01ECD800 LDR X1, [X8]
	0x01ECD804 LDR X20, [X20 + 0xA50]
	0x01ECD808 LDR X19, [X19 + 0xA48]
	0x01ECD80C ADD X8, X31, 0x0
	0x01ECD810 BL 0x2A67974
	0x01ECD814 LDR X1, [X20]
	0x01ECD818 ADD X0, X31, 0x0
	0x01ECD81C BL 0x2C03E60
	0x01ECD820 TBZ X0, 0x0, 0x1ECD844
	0x01ECD824 LDR X8, [X31 + 0x18]
	0x01ECD828 CBZ X8, 0x1ECD860
	0x01ECD82C LDR X9, [X8 + 0xB8]
	0x01ECD830 CBZ X9, 0x1ECD814
	0x01ECD834 MOV X0, X8
	0x01ECD838 MOV X1, X31
	0x01ECD83C BL 0x1E978BC
	0x01ECD840 B 0x1ECD814
	0x01ECD844 LDR X1, [X19]
	0x01ECD848 ADD X0, X31, 0x0
	0x01ECD84C BL 0x2C03F78
	0x01ECD850 LDP X20, X19, [X31 + 0x40]
	0x01ECD854 LDR X30, [X31 + 0x30]
	0x01ECD858 ADD X31, X31, 0x50
	0x01ECD85C RET
	0x01ECD860 BL 0x1C16F20
	0x01ECD864 BL 0x1C16F20
	0x01ECD868 B 0x1ECD870
	0x01ECD86C B 0x1ECD870
	0x01ECD870 MOV X19, X0
	0x01ECD874 CMP W1, 0x1
	0x01ECD878 B.NE 0x1ECD8AC
	0x01ECD87C MOV X0, X19
	0x01ECD880 BL 0x3EB1AD0
	0x01ECD884 LDR X20, [X0]
	0x01ECD888 BL 0x3EB1AE0
	0x01ECD88C ADRP X8, 0x2231000
	0x01ECD890 LDR X8, [X8 + 0xA48]
	0x01ECD894 ADD X0, X31, 0x0
	0x01ECD898 LDR X1, [X8]
	0x01ECD89C BL 0x2C03F78
	0x01ECD8A0 CBZ X20, 0x1ECD850
	0x01ECD8A4 MOV X0, X20
	0x01ECD8A8 BL 0x1C16F18
	0x01ECD8AC MOV X20, X31
	0x01ECD8B0 B 0x1ECD8B8
	0x01ECD8B4 MOV X19, X0
	0x01ECD8B8 ADRP X8, 0x2231000
	0x01ECD8BC LDR X8, [X8 + 0xA48]
	0x01ECD8C0 LDR X1, [X8]
	0x01ECD8C4 ADD X0, X31, 0x0
	0x01ECD8C8 BL 0x2C03F78
	0x01ECD8CC CBNZ X20, 0x1ECD8D8
	0x01ECD8D0 MOV X0, X19
	0x01ECD8D4 BL 0x1D2C690
	0x01ECD8D8 MOV X0, X20
	0x01ECD8DC BL 0x1C16F18
	0x01ECD8E0 BL 0x1990590
	0x01ECD8E4 STP X30, X19, [X31 - 0x10]!
	0x01ECD8E8 MOV X1, X31
	0x01ECD8EC MOV X19, X0
	0x01ECD8F0 BL 0x1EC0810
	0x01ECD8F4 CMP W0, 0x2
	0x01ECD8F8 B.EQ 0x1ECD910
	0x01ECD8FC CMP W0, 0x1
	0x01ECD900 B.NE 0x1ECD920
	0x01ECD904 MOV X0, X19
	0x01ECD908 LDP X30, X19, [X31], #0x10
	0x01ECD90C B 0x1ECD92C
	0x01ECD910 LDR X0, [X19 + 0xA8]
	0x01ECD914 CBZ X0, 0x1ECD928
	0x01ECD918 LDP X30, X19, [X31], #0x10
	0x01ECD91C B 0x1ECDCE4
	0x01ECD920 LDP X30, X19, [X31], #0x10

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+144], D8
	003 Move [X31+160], X30
	004 Move [X31+168], X23
	005 Move [X31+176], X22
	006 Move [X31+184], X21
	007 Move [X31+192], X20
	008 Move [X31+200], X19
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X22+40]
	011 Move X20, 0x250D000
	012 Move X19, X0
	013 Move [X31+136], X8
	014 Move W8, [X20+1231]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x2232000
	020 Move X0, [X0+1984]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+1231], W8
	024 Move X20, [X19+104]
	025 Compare X20, 0
	026 JumpIfEqual {263}
	027 Move X23, 0x2232000
	028 Move X8, [X20]
	029 Move X23, [X23+1984]
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Move X1, [X23]
	032 Compare X9, 0
	033 JumpIfEqual {40}
	034 Move X10, [X8+176]
	035 Add X10, X10, 8
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Subtract X9, X9, 1
	039 Add X10, X10, 16
	040 Move X0, X20
	041 Move W2, W31
	042 Call 0x1C5D788
	043 NotImplemented "Instruction LDRSW not yet implemented."
	044 Add X8, X8, X9
	045 Add X0, X8, 312
	046 Move X8, [X0]
	047 Move X1, [X0+8]
	048 Move X0, X20
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {93}
	054 Move X8, [X19]
	055 Move X0, X19
	056 Move X9, [X8+584]
	057 Move X1, [X8+592]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X20, [X19+104]
	061 Add X8, X31, 96
	062 Move X0, X19
	063 Move X1, X31
	064 Call Simulation.get_RuntimeConfig, X0
	065 Move V0, [X31+96]
	066 Move V1, [X31+112]
	067 Move W8, [X31+128]
	068 Move [X31+48], V0
	069 Move [X31+56], V1
	070 Move [X31+80], W8
	071 Compare X20, 0
	072 JumpIfEqual {263}
	073 Move V0, [X31+48]
	074 Move V1, [X31+64]
	075 Move W8, [X31+80]
	076 Move X1, [X23]
	077 Move [X31], V0
	078 Move [X31+8], V1
	079 Move [X31+32], W8
	080 Move X8, [X20]
	081 NotImplemented "Instruction LDRH not yet implemented."
	082 Compare X9, 0
	083 JumpIfEqual {90}
	084 Move X10, [X8+176]
	085 Add X10, X10, 8
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Subtract X9, X9, 1
	089 Add X10, X10, 16
	090 Move W2, 1
	091 Move X0, X20
	092 Call 0x1C5D788
	093 Move X20, [X19+104]
	094 Compare X20, 0
	095 JumpIfEqual {263}
	096 Move X8, [X20]
	097 Move X1, [X23]
	098 NotImplemented "Instruction LDRH not yet implemented."
	099 Compare X9, 0
	100 JumpIfEqual {107}
	101 Move X10, [X8+176]
	102 Add X10, X10, 8
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Subtract X9, X9, 1
	106 Add X10, X10, 16
	107 Move X0, X20
	108 Move W2, W31
	109 Call 0x1C5D788
	110 NotImplemented "Instruction LDRSW not yet implemented."
	111 Add X8, X8, X9
	112 Add X0, X8, 312
	113 Move X8, [X0]
	114 Move X1, [X0+8]
	115 Move X0, X20
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move TEMP, X0
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfNotEqual {245}
	121 Move W8, [X19+464]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X8, [X19]
	124 Move X0, X19
	125 Move X9, [X8+584]
	126 Move X1, [X8+592]
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move W21, [X19+464]
	129 Move X20, X0
	130 Move X0, X19
	131 Move X1, X31
	132 Call Simulation.get_TickDeltaDouble, X0
	133 Subtract W8, W20, W21
	134 NotImplemented "Instruction SCVTF not yet implemented."
	135 Multiply D0, D0, D1
	136 Move D1, 1
	137 NotImplemented "Instruction FCMP not yet implemented."
	138 Move X8, [X19+424]
	139 Move X20, [X19+104]
	140 Compare X8, 0
	141 JumpIfEqual {212}
	142 Move V8, [X8+72]
	143 Move W9, [X10]
	144 Add W9, W9, 1
	145 Add X8, X8, W9
	146 Add X0, X8, 312
	147 Move V0, [X31]
	148 Move V1, [X31+16]
	149 Move W8, [X31+32]
	150 Move X9, [X0]
	151 Add X1, X31, 96
	152 Move [X31+96], V0
	153 Move [X31+104], V1
	154 Move [X31+128], W8
	155 Move X2, [X0+8]
	156 Move X0, X20
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Move X20, [X19+104]
	159 Move X0, X19
	160 Call Client.get_TimeSyncConfig, X0
	161 Compare X20, 0
	162 JumpIfEqual {263}
	163 Move X8, [X20]
	164 Move X1, [X23]
	165 Move X21, X0
	166 NotImplemented "Instruction LDRH not yet implemented."
	167 Compare X9, 0
	168 JumpIfEqual {175}
	169 Move X10, [X8+176]
	170 Add X10, X10, 8
	171 NotImplemented "Instruction LDUR not yet implemented."
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Subtract X9, X9, 1
	174 Add X10, X10, 16
	175 Move W2, 2
	176 Move X0, X20
	177 Call 0x1C5D788
	178 Move W9, [X10]
	179 Add W9, W9, 2
	180 Add X8, X8, W9
	181 Add X0, X8, 312
	182 Move X8, [X0]
	183 Move X2, [X0+8]
	184 Move X0, X20
	185 Move X1, X21
	186 NotImplemented "Instruction BLR not yet implemented."
	187 Move X8, [X19+424]
	188 Move X20, [X19+104]
	189 Compare X8, 0
	190 JumpIfEqual {192}
	191 Move V8, [X8+72]
	192 Move D8, X31
	193 Move X8, [X19]
	194 Move X0, X19
	195 Move X9, [X8+584]
	196 Move X1, [X8+592]
	197 NotImplemented "Instruction BLR not yet implemented."
	198 Compare X20, 0
	199 JumpIfEqual {263}
	200 Move X8, [X20]
	201 Move X1, [X23]
	202 And X21, X0, 0
	203 NotImplemented "Instruction LDRH not yet implemented."
	204 Compare X9, 0
	205 JumpIfEqual {232}
	206 Move X10, [X8+176]
	207 Add X10, X10, 8
	208 NotImplemented "Instruction LDUR not yet implemented."
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Subtract X9, X9, 1
	211 Add X10, X10, 16
	212 Move D8, X31
	213 Move X8, [X19]
	214 Move X0, X19
	215 Move X9, [X8+584]
	216 Move X1, [X8+592]
	217 NotImplemented "Instruction BLR not yet implemented."
	218 Compare X20, 0
	219 JumpIfEqual {263}
	220 Move X8, [X20]
	221 Move X1, [X23]
	222 And X21, X0, 0
	223 NotImplemented "Instruction LDRH not yet implemented."
	224 Compare X9, 0
	225 JumpIfEqual {232}
	226 Move X10, [X8+176]
	227 Add X10, X10, 8
	228 NotImplemented "Instruction LDUR not yet implemented."
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Subtract X9, X9, 1
	231 Add X10, X10, 16
	232 Move W2, 3
	233 Move X0, X20
	234 Call 0x1C5D788
	235 Move W9, [X10]
	236 Add W9, W9, 3
	237 Add X8, X8, W9
	238 Add X0, X8, 312
	239 Move X8, [X0]
	240 Move X2, [X0+8]
	241 Move X0, X20
	242 Move V0, V8
	243 Move X1, X21
	244 NotImplemented "Instruction BLR not yet implemented."
	245 Move X8, [X19]
	246 Move X0, X19
	247 Move X9, [X8+584]
	248 Move X1, [X8+592]
	249 NotImplemented "Instruction BLR not yet implemented."
	250 Move [X19+464], W0
	251 Move X8, [X22+40]
	252 Move X9, [X31+136]
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Move X20, [X31+192]
	255 Move X19, [X31+200]
	256 Move X22, [X31+176]
	257 Move X21, [X31+184]
	258 Move X30, [X31+160]
	259 Move X23, [X31+168]
	260 Move V8, [X31+144]
	261 Add X31, X31, 208
	262 Return 
	263 Call 0x1C17F20
	264 Call 0x3EB2B20

Method: System.Void RunClientSidePredictionLoop(System.Int32 ticks, Fusion.SimulationStages stage)

Disassembly:
	0x01ECD924 RET
	0x01ECD928 BL 0x1C16F20
	0x01ECD92C SUB X31, X31, 0x80
	0x01ECD930 STR D8, [X31 + 0x10]
	0x01ECD934 STP X29, X30, [X31 + 0x20]
	0x01ECD938 STP X28, X27, [X31 + 0x30]
	0x01ECD93C STP X26, X25, [X31 + 0x40]
	0x01ECD940 STP X24, X23, [X31 + 0x50]
	0x01ECD944 STP X22, X21, [X31 + 0x60]
	0x01ECD948 STP X20, X19, [X31 + 0x70]
	0x01ECD94C ADRP X20, 0x250C000
	0x01ECD950 LDRB W8, [X20 + 0x4D9]
	0x01ECD954 MOV X19, X0
	0x01ECD958 TBNZ X8, 0x0, 0x1ECD97C
	0x01ECD95C ADRP X0, 0x2226000
	0x01ECD960 LDR X0, [X0 + 0x5A8]
	0x01ECD964 BL 0x1C16CF4
	0x01ECD968 ADRP X0, 0x222D000
	0x01ECD96C LDR X0, [X0 + 0xC68]
	0x01ECD970 BL 0x1C16CF4
	0x01ECD974 MOVZ W8, 0x1
	0x01ECD978 STRB W8, [X20 + 0x4D9]
	0x01ECD97C LDR X8, [X19 + 0x108]
	0x01ECD980 CBZ X8, 0x1ECDCDC
	0x01ECD984 LDR X0, [X8 + 0x20]
	0x01ECD988 MOV X1, X31
	0x01ECD98C BL 0x1EF987C
	0x01ECD990 STR W0, [X31 + 0x18]
	0x01ECD994 LDR X8, [X19 + 0x1A8]
	0x01ECD998 CBZ X8, 0x1ECDCDC
	0x01ECD99C ADRP X21, 0x2226000
	0x01ECD9A0 LDR V8, [X8 + 0x48]
	0x01ECD9A4 LDR X21, [X21 + 0x5A8]
	0x01ECD9A8 MOV X0, X19
	0x01ECD9AC MOV X1, X31
	0x01ECD9B0 BL 0x1EC0524
	0x01ECD9B4 ADRP X20, 0x250B000
	0x01ECD9B8 LDRB W8, [X20 + 0xABE]
	0x01ECD9BC FDIV D8, D8, D0
	0x01ECD9C0 CBNZ W8, 0x1ECD9D8
	0x01ECD9C4 ADRP X0, 0x2226000
	0x01ECD9C8 LDR X0, [X0 + 0x5A8]
	0x01ECD9CC BL 0x1C16CF4
	0x01ECD9D0 MOVZ W8, 0x1
	0x01ECD9D4 STRB W8, [X20 + 0xABE]
	0x01ECD9D8 LDR X0, [X21]
	0x01ECD9DC ADRP X20, 0x222D000
	0x00000000 INVALID
	0x01ECD9E4 LDR W8, [X0 + 0xE0]
	0x01ECD9E8 LDR X20, [X20 + 0xC68]
	0x01ECD9EC CBNZ W8, 0x1ECD9F4
	0x01ECD9F0 BL 0x1C16DFC
	0x01ECD9F4 LDR X0, [X20]
	0x01ECD9F8 MOVZ W8, 0x7F800000
	0x01ECD9FC FRINTP S0, S8
	0x01ECDA00 FMOV S1, W8
	0x01ECDA04 LDR W9, [X0 + 0xE0]
	0x01ECDA08 FCVTPS W10, S8
	0x01ECDA0C FCMP S0, S1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x250D000
	008 Move X23, 0x2233000
	009 Move W8, [X22+1232]
	010 Move X23, [X23+3552]
	011 Move W21, W2
	012 Move W19, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x2233000
	019 Move X0, [X0+3552]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1232], W8
	023 Move X0, [X23]
	024 Move X1, X31
	025 Call EngineProfiler.Begin, X0
	026 Move X8, [X20]
	027 Move X0, X20
	028 Move X9, [X8+584]
	029 Move X1, [X8+592]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move [X20+72], W0
	033 NotImplemented "Instruction CSET not yet implemented."
	034 Move W1, 1
	035 Move X0, X20
	036 Move W2, W19
	037 Move X3, X31
	038 Move [X20+218], W8
	039 Call Simulation.InvokeOnBeforeAllTicks, X0, X1, X2
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W22, W31
	042 Add W8, W19, W22
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CSET not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction CSET not yet implemented."
	047 Move X0, X20
	048 Move W1, W21
	049 Move W4, W31
	050 Move X5, X31
	051 Call Simulation.StepSimulation, X0, X1, X2, X3, X4
	052 Subtract W22, W22, 1
	053 Add W31, W19, W22
	054 Move W1, 1
	055 Move X0, X20
	056 Move W2, W19
	057 Move X3, X31
	058 Call Simulation.InvokeOnAfterAllTicks, X0, X1, X2
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X0, X31
	064 Move X30, [X31+48]
	065 Move X23, [X31+56]
	066 Call EngineProfiler.End
	067 Return 

Method: System.Void ResetPredictedObjectsToLatestServerState()

Disassembly:
	0x01ECDA10 MOVZ W8, 0x80000000
	0x01ECDA14 CSEL W20, W8, W10, EQ
	0x01ECDA18 CBNZ W9, 0x1ECDA20
	0x01ECDA1C BL 0x1C16DFC
	0x01ECDA20 MOVZ W1, 0x3
	0x01ECDA24 MOVZ W2, 0x6
	0x01ECDA28 MOV W0, W20
	0x01ECDA2C MOV X3, X31
	0x01ECDA30 BL 0x1E35134
	0x01ECDA34 LDR X8, [X19 + 0x58]
	0x01ECDA38 CBZ X8, 0x1ECDCDC
	0x01ECDA3C LDR W8, [X8 + 0x18]
	0x01ECDA40 CMP W8, 0x1
	0x01ECDA44 CSINC W23, W0, W31, NE
	0x01ECDA48 MOV X0, X19
	0x01ECDA4C BL 0x1ECD14C
	0x01ECDA50 MOV X20, X0
	0x01ECDA54 LDR X0, [X21]
	0x01ECDA58 MOV X22, X1
	0x01ECDA5C LDR W8, [X0 + 0xE0]
	0x01ECDA60 CBNZ W8, 0x1ECDA68
	0x01ECDA64 BL 0x1C16DFC
	0x01ECDA68 SUB W1, W22, W23
	0x01ECDA6C MOV W0, W31
	0x01ECDA70 MOV X2, X31
	0x01ECDA74 BL 0x337EDF0
	0x01ECDA78 MOV W23, W0
	0x01ECDA7C SUB W0, W22, W0
	0x01ECDA80 MOV X1, X31
	0x01ECDA84 BL 0x1E32358
	0x01ECDA88 LDR X8, [X19 + 0x108]
	0x01ECDA8C CBZ X8, 0x1ECDCDC
	0x01ECDA90 LDR X0, [X8 + 0x20]
	0x01ECDA94 MOV X1, X31
	0x01ECDA98 BL 0x1EFB0B4
	0x01ECDA9C LDR X8, [X19 + 0x58]
	0x01ECDAA0 CBZ X8, 0x1ECDCDC
	0x01ECDAA4 LDR W8, [X8 + 0x18]
	0x01ECDAA8 MOV X21, X1
	0x01ECDAAC CMP W8, 0x2
	0x01ECDAB0 B.NE 0x1ECDB90
	0x01ECDAB4 MOV X0, X21
	0x01ECDAB8 MOV X1, X31
	0x01ECDABC BL 0x1EF9F9C
	0x01ECDAC0 LDR X8, [X19 + 0x58]
	0x01ECDAC4 CBZ X8, 0x1ECDCDC
	0x01ECDAC8 LDR W8, [X8 + 0x10]
	0x01ECDACC MOVZ W2, 0x8
	0x01ECDAD0 MOV X0, X21
	0x01ECDAD4 MOV X3, X31
	0x01ECDAD8 ADD W8, W8, 0x4
	0x01ECDADC AND W1, W8, 0xFF
	0x01ECDAE0 BL 0x1EF9A4C
	0x01ECDAE4 CMP W23, W22
	0x01ECDAE8 B.GE 0x1ECDC6C
	0x01ECDAEC CBZ X20, 0x1ECDCDC
	0x01ECDAF0 LDR W8, [X20 + 0x18]
	0x01ECDAF4 CMP W23, W8
	0x01ECDAF8 B.CS 0x1ECDCE0
	0x01ECDAFC ADD X8, X20, W23, 0x3, SXTW
	0x01ECDB00 ADD X24, X8, 0x20
	0x01ECDB04 LDR X8, [X24]
	0x01ECDB08 CBZ X8, 0x1ECDCDC
	0x01ECDB0C LDR X9, [X19 + 0x58]
	0x01ECDB10 CBZ X9, 0x1ECDCDC
	0x01ECDB14 LDR W9, [X9 + 0x10]
	0x01ECDB18 LDR X1, [X8 + 0x20]
	0x01ECDB1C LDR W25, [X21 + 0x50]
	0x01ECDB20 MOV X0, X21
	0x01ECDB24 UBFM W8, W9, 0x1E, 0x1D
	0x01ECDB28 ADD W2, W8, 0x10
	0x01ECDB2C MOV X3, X31
	0x01ECDB30 BL 0x1EFA068
	0x01ECDB34 LDP W8, W9, [X21 + 0x50]
	0x01ECDB38 ADD W8, W8, 0x8
	0x01ECDB3C CMP W8, W9
	0x01ECDB40 B.LE 0x1ECDB6C
	0x01ECDB44 LDR W8, [X21 + 0x58]
	0x01ECDB48 MOV X0, X21
	0x01ECDB4C MOV X2, X31
	0x01ECDB50 STR W25, [X21 + 0x50]
	0x01ECDB54 UBFM W1, W8, 0x1F, 0x1E
	0x01ECDB58 BL 0x1EF97A0
	0x01ECDB5C LDR W8, [X20 + 0x18]
	0x01ECDB60 CMP W23, W8
	0x01ECDB64 B.CC 0x1ECDB04
	0x01ECDB68 B 0x1ECDCE0
	0x01ECDB6C LDR X8, [X19 + 0x108]
	0x01ECDB70 CBZ X8, 0x1ECDCDC
	0x01ECDB74 LDRB W9, [X8 + 0x19]
	0x01ECDB78 ADD W23, W23, 0x1
	0x01ECDB7C CMP W23, W22
	0x01ECDB80 ADD W9, W9, 0x1
	0x01ECDB84 STRB W9, [X8 + 0x19]
	0x01ECDB88 B.NE 0x1ECDAF0
	0x01ECDB8C B 0x1ECDC6C
	0x01ECDB90 CMP W23, W22
	0x01ECDB94 B.GE 0x1ECDC6C
	0x01ECDB98 CBZ X20, 0x1ECDCDC
	0x01ECDB9C SXTW X23, W23
	0x01ECDBA0 SXTW X8, W22
	0x01ECDBA4 MOV X24, X0
	0x01ECDBA8 ADD X26, X19, 0x90
	0x01ECDBAC STR X8, [X31 + 0x8]
	0x01ECDBB0 MOV X27, X23
	0x01ECDBB4 LDR W8, [X20 + 0x18]
	0x01ECDBB8 CMP W27, W8
	0x01ECDBBC B.CS 0x1ECDCE0
	0x01ECDBC0 ADD X9, X20, 0x20
	0x01ECDBC4 SUB W28, W27, 0x1
	0x01ECDBC8 ADD X29, X9, X27, 0x3, LSL
	0x01ECDBCC ADD X25, X9, W28, 0x3, SXTW
	0x01ECDBD0 LDR W22, [X21 + 0x50]
	0x01ECDBD4 LDR X0, [X29]
	0x01ECDBD8 CMP X27, X23
	0x01ECDBDC B.NE 0x1ECDBEC
	0x01ECDBE0 MOV X8, X26
	0x01ECDBE4 CBNZ X0, 0x1ECDBFC
	0x01ECDBE8 B 0x1ECDCDC
	0x01ECDBEC CMP W28, W8
	0x01ECDBF0 B.CS 0x1ECDCE0
	0x01ECDBF4 MOV X8, X25
	0x01ECDBF8 CBZ X0, 0x1ECDCDC
	0x01ECDBFC LDR X2, [X19 + 0x58]
	0x01ECDC00 LDR X1, [X8]
	0x01ECDC04 MOV X3, X24
	0x01ECDC08 MOV X4, X21
	0x01ECDC0C BL 0x1ECE6C8
	0x01ECDC10 LDP W8, W9, [X21 + 0x50]
	0x01ECDC14 ADD W8, W8, 0x8
	0x01ECDC18 CMP W8, W9
	0x01ECDC1C B.LE 0x1ECDC48
	0x01ECDC20 LDR W8, [X21 + 0x58]
	0x01ECDC24 MOV X0, X21
	0x01ECDC28 MOV X2, X31
	0x01ECDC2C STR W22, [X21 + 0x50]
	0x01ECDC30 UBFM W1, W8, 0x1F, 0x1E
	0x01ECDC34 BL 0x1EF97A0
	0x01ECDC38 LDR W8, [X20 + 0x18]
	0x01ECDC3C CMP W27, W8
	0x01ECDC40 B.CC 0x1ECDBD0
	0x01ECDC44 B 0x1ECDCE0
	0x01ECDC48 LDR X8, [X19 + 0x108]
	0x01ECDC4C CBZ X8, 0x1ECDCDC
	0x01ECDC50 LDRB W9, [X8 + 0x19]
	0x01ECDC54 LDR X10, [X31 + 0x8]
	0x01ECDC58 ADD X27, X27, 0x1
	0x01ECDC5C ADD W9, W9, 0x1
	0x01ECDC60 CMP X27, X10
	0x01ECDC64 STRB W9, [X8 + 0x19]
	0x01ECDC68 B.NE 0x1ECDBB4
	0x01ECDC6C LDR X8, [X19 + 0x108]
	0x01ECDC70 CBZ X8, 0x1ECDCDC
	0x01ECDC74 LDR X1, [X8 + 0x20]
	0x01ECDC78 ADD X0, X31, 0x18
	0x01ECDC7C MOV X2, X31
	0x01ECDC80 BL 0x1EFAA7C
	0x01ECDC84 ADRP X8, 0x222D000
	0x01ECDC88 LDR X8, [X8 + 0xC68]
	0x01ECDC8C MOV W19, W0
	0x01ECDC90 LDR X8, [X8]
	0x01ECDC94 LDR W9, [X8 + 0xE0]
	0x01ECDC98 CBNZ W9, 0x1ECDCA4
	0x01ECDC9C MOV X0, X8
	0x01ECDCA0 BL 0x1C16DFC
	0x01ECDCA4 MOV W0, W19
	0x01ECDCA8 MOV X1, X31
	0x01ECDCAC BL 0x1E34CBC
	0x01ECDCB0 MOV X1, X31
	0x01ECDCB4 BL 0x1E322EC
	0x01ECDCB8 LDP X20, X19, [X31 + 0x70]
	0x01ECDCBC LDP X22, X21, [X31 + 0x60]
	0x01ECDCC0 LDP X24, X23, [X31 + 0x50]
	0x01ECDCC4 LDP X26, X25, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X20, 0x250D000
	009 Move W8, [X20+1233]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0x2232000
	016 Move X0, [X0+2064]
	017 Call 0x1C17CF4
	018 Move X0, 0x2233000
	019 Move X0, [X0+2712]
	020 Call 0x1C17CF4
	021 Move X0, 0x2233000
	022 Move X0, [X0+2720]
	023 Call 0x1C17CF4
	024 Move X0, 0x2233000
	025 Move X0, [X0+2728]
	026 Call 0x1C17CF4
	027 Move X0, 0x2232000
	028 Move X0, [X0+2704]
	029 Call 0x1C17CF4
	030 Move X0, 0x2233000
	031 Move X0, [X0+2736]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+1233], W8
	035 Move [X31+32], X31
	036 Move [X31+40], X31
	037 Move [X31+48], X31
	038 Move [X31+24], X31
	039 Move X20, [X19+64]
	040 Compare X20, 0
	041 JumpIfEqual {161}
	042 Move X21, 0x2232000
	043 Move X8, [X20]
	044 Move X21, [X21+2704]
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Move X1, [X21]
	047 Compare X9, 0
	048 JumpIfEqual {55}
	049 Move X10, [X8+176]
	050 Add X10, X10, 8
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X9, X9, 1
	054 Add X10, X10, 16
	055 Move W2, 7
	056 Move X0, X20
	057 Call 0x1C5D788
	058 Move W9, [X10]
	059 Add W9, W9, 7
	060 Add X8, X8, W9
	061 Add X0, X8, 312
	062 Move X8, [X0]
	063 Move X1, [X0+8]
	064 Move X0, X20
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X0, [X19+336]
	067 Compare X0, 0
	068 JumpIfEqual {161}
	069 Move X8, 0x2232000
	070 Move X8, [X8+2064]
	071 Move X1, [X8]
	072 Call Dictionary`2<NetworkId, Object>.get_Values, X0
	073 Compare X0, 0
	074 JumpIfEqual {161}
	075 Move X8, 0x2233000
	076 Move X8, [X8+2736]
	077 Move X23, 0x2233000
	078 Move X22, 0x2233000
	079 Move X1, [X8]
	080 Move X23, [X23+2720]
	081 Move X22, [X22+2712]
	082 Add X8, X31, 0
	083 Call ValueCollection<NetworkId, Object>.GetEnumerator, X0
	084 Move V0, [X31]
	085 Move X8, [X31+16]
	086 Move [X31+2], V0
	087 Move [X31+48], X8
	088 Move X1, [X23]
	089 Add X0, X31, 32
	090 Call Enumerator<NetworkId, Object>.MoveNext, X0
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {124}
	095 Move X20, [X31+48]
	096 Compare X20, 0
	097 JumpIfEqual {160}
	098 Move X0, X20
	099 Move X1, X31
	100 Call NetworkObjectMeta.get_HasSnapshots, X0
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {88}
	105 Move X0, X20
	106 Move X1, X31
	107 Call NetworkObjectMeta.get_SnapshotLatest, X0
	108 Move [X31+24], X0
	109 Move X1, [X20+176]
	110 Add X0, X31, 24
	111 Move X2, X31
	112 Call NetworkObjectHeaderSnapshotRef.CopyTo, X0, X1
	113 Move X0, X20
	114 Move X1, X31
	115 Call NetworkObjectMeta.get_SnapshotLatest, X0
	116 Move [X31+24], X0
	117 Move X0, X20
	118 Move X1, X31
	119 Call NetworkObjectMeta.get_Previous, X0
	120 Move X1, X0
	121 Add X0, X31, 24
	122 Move X2, X31
	123 Call NetworkObjectHeaderSnapshotRef.CopyTo, X0, X1
	124 Move X1, [X22]
	125 Add X0, X31, 32
	126 Call Enumerator<NetworkId, Object>.Dispose, X0
	127 Move X19, [X19+64]
	128 Compare X19, 0
	129 JumpIfEqual {161}
	130 Move X8, [X19]
	131 Move X1, [X21]
	132 NotImplemented "Instruction LDRH not yet implemented."
	133 Compare X9, 0
	134 JumpIfEqual {141}
	135 Move X10, [X8+176]
	136 Add X10, X10, 8
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Subtract X9, X9, 1
	140 Add X10, X10, 16
	141 Move W2, 6
	142 Move X0, X19
	143 Call 0x1C5D788
	144 Move W9, [X10]
	145 Add W9, W9, 6
	146 Add X8, X8, W9
	147 Add X0, X8, 312
	148 Move X8, [X0]
	149 Move X1, [X0+8]
	150 Move X0, X19
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Move X20, [X31+96]
	153 Move X19, [X31+104]
	154 Move X22, [X31+80]
	155 Move X21, [X31+88]
	156 Move X30, [X31+64]
	157 Move X23, [X31+72]
	158 Add X31, X31, 112
	159 Return 
	160 Call 0x1C17F20
	161 Call 0x1C17F20
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Call 0x3EB2AD0
	164 Move X20, [X0]
	165 Call 0x3EB2AE0
	166 Move X1, [X22]
	167 Add X0, X31, 32
	168 Call Enumerator<NetworkId, Object>.Dispose, X0
	169 Compare X20, 0
	170 JumpIfEqual {127}
	171 Move X0, X20
	172 Call 0x1C17F18
	173 Move X19, X0
	174 Move X20, X31
	175 Move X19, X0
	176 Move X1, [X22]
	177 Add X0, X31, 32
	178 Call Enumerator<NetworkId, Object>.Dispose, X0
	179 Compare X20, 0
	180 JumpIfNotEqual {183}
	181 Move X0, X19
	182 Call 0x1D2D690
	183 Move X0, X20
	184 Call 0x1C17F18
	185 Call 0x1991590

Method: System.Void ResetClientSimulationState()

Disassembly:
	0x01ECDCC8 LDP X28, X27, [X31 + 0x30]
	0x01ECDCCC LDP X29, X30, [X31 + 0x20]
	0x01ECDCD0 LDR V8, [X31 + 0x10]
	0x01ECDCD4 ADD X31, X31, 0x80
	0x01ECDCD8 RET
	0x01ECDCDC BL 0x1C16F20
	0x01ECDCE0 BL 0x1C16F28
	0x01ECDCE4 STR X30, [X31 - 0x20]!
	0x01ECDCE8 STP X20, X19, [X31 + 0x10]
	0x01ECDCEC ADRP X20, 0x250C000
	0x01ECDCF0 LDRB W8, [X20 + 0x4F5]
	0x01ECDCF4 MOV X19, X0
	0x01ECDCF8 TBNZ X8, 0x0, 0x1ECDD10
	0x01ECDCFC ADRP X0, 0x2232000
	0x01ECDD00 LDR X0, [X0 + 0xE20]
	0x01ECDD04 BL 0x1C16CF4
	0x01ECDD08 MOVZ W8, 0x1
	0x01ECDD0C STRB W8, [X20 + 0x4F5]
	0x01ECDD10 LDR X0, [X19 + 0x10]
	0x01ECDD14 CBZ X0, 0x1ECDDF0
	0x01ECDD18 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+584]
	006 Move X1, [X8+592]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move [X19+72], W0
	009 Move X0, X19
	010 Move X1, X31
	011 Call Simulation.get_Topology, X0
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X0, X19
	014 Call Client.ResetPredictedObjectsToLatestServerState, X0
	015 Move X0, [X19+448]
	016 Compare X0, 0
	017 JumpIfEqual {23}
	018 Call Buffer.Clear, X0
	019 Move [X19+432], W31
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Return 
	023 Call 0x1C17F20

Method: System.Void NoSimulation()

Disassembly:
	0x01ECDD90 CBZ X8, 0x1ECDDF0

ISIL:
No ISIL was generated
Method: System.Int32 BeforeSimulation()

Disassembly:
	0x01ECDEBC CBNZ W9, 0x1ECDEC8
	0x01ECDEC0 MOV X0, X8
	0x01ECDEC4 BL 0x1C16DFC
	0x01ECDEC8 CMP W21, W22
	0x01ECDECC B.NE 0x1ECE028
	0x01ECDED0 LDR X0, [X19 + 0x1C0]
	0x01ECDED4 CBZ X0, 0x1ECE040
	0x01ECDED8 LDRB W8, [X19 + 0xDA]
	0x01ECDEDC CBZ W8, 0x1ECDEF4
	0x01ECDEE0 AND X1, X20, 0x0
	0x01ECDEE4 LDP X20, X19, [X31 + 0x20]
	0x01ECDEE8 LDP X22, X21, [X31 + 0x10]
	0x01ECDEEC LDP X30, X23, [X31], #0x30
	0x01ECDEF0 B 0x1ECE044
	0x01ECDEF4 BL 0x1ECE0BC
	0x01ECDEF8 TBZ X0, 0x0, 0x1ECDF20
	0x01ECDEFC MOV X0, X19
	0x01ECDF00 MOV X1, X31
	0x01ECDF04 BL 0x1EC0810
	0x01ECDF08 CMP W0, 0x2
	0x01ECDF0C MOV X20, X31
	0x01ECDF10 B.NE 0x1ECE02C
	0x01ECDF14 LDR X0, [X19 + 0x1C0]
	0x01ECDF18 CBZ X0, 0x1ECE040
	0x01ECDF1C BL 0x1ECCD1C
	0x01ECDF20 LDR X0, [X19 + 0x98]
	0x01ECDF24 CBZ X0, 0x1ECE040
	0x01ECDF28 BL 0x1ECE11C
	0x01ECDF2C LDR X8, [X19]
	0x01ECDF30 MOV X20, X0
	0x01ECDF34 MOV X0, X19
	0x01ECDF38 LDR X9, [X8 + 0x268]
	0x01ECDF3C LDR X1, [X8 + 0x270]
	0x01ECDF40 BLR X9
	0x01ECDF44 CBZ X20, 0x1ECE040
	0x01ECDF48 LDR X8, [X20 + 0x20]
	0x01ECDF4C STR W0, [X20 + 0x18]
	0x01ECDF50 CBZ X8, 0x1ECE040
	0x01ECDF54 LDR W9, [X19 + 0x48]
	0x01ECDF58 STR W9, [X8]
	0x01ECDF5C LDR X8, [X20 + 0x20]
	0x01ECDF60 CBZ X8, 0x1ECE040
	0x01ECDF64 LDR W9, [X19 + 0x80]
	0x01ECDF68 STR W9, [X8 + 0xC]
	0x01ECDF6C LDR X8, [X20 + 0x20]
	0x01ECDF70 CBZ X8, 0x1ECE040
	0x01ECDF74 LDR W9, [X19 + 0x84]
	0x01ECDF78 STR W9, [X8 + 0x8]
	0x01ECDF7C LDR X8, [X20 + 0x20]
	0x01ECDF80 CBZ X8, 0x1ECE040
	0x01ECDF84 LDR V0, [X19 + 0x88]
	0x01ECDF88 STR S0, [X8 + 0x4]
	0x01ECDF8C LDR X21, [X19 + 0x40]
	0x01ECDF90 CBZ X21, 0x1ECE040
	0x01ECDF94 ADRP X10, 0x2231000
	0x01ECDF98 LDR X8, [X21]
	0x01ECDF9C LDR X10, [X10 + 0xA90]
	0x01ECDFA0 LDRH W9, [X8 + 0x12E]
	0x01ECDFA4 LDR X1, [X10]
	0x01ECDFA8 CBZ X9, 0x1ECDFCC
	0x01ECDFAC LDR X10, [X8 + 0xB0]
	0x01ECDFB0 ADD X10, X10, 0x8
	0x01ECDFB4 LDUR X11, [X10 - 0x8]
	0x01ECDFB8 CMP X11, X1
	0x01ECDFBC B.EQ 0x1ECDFDC
	0x01ECDFC0 SUBS X9, X9, 0x1
	0x01ECDFC4 ADD X10, X10, 0x10
	0x01ECDFC8 B.NE 0x1ECDFB4
	0x01ECDFCC MOVZ W2, 0x3
	0x01ECDFD0 MOV X0, X21
	0x01ECDFD4 BL 0x1C5C788
	0x01ECDFD8 B 0x1ECDFEC
	0x01ECDFDC LDR W9, [X10]
	0x01ECDFE0 ADD W9, W9, 0x3
	0x01ECDFE4 ADD X8, X8, W9, 0x4, SXTW
	0x01ECDFE8 ADD X0, X8, 0x138
	0x01ECDFEC LDP X8, X2, [X0]
	0x01ECDFF0 MOV X0, X21
	0x01ECDFF4 MOV X1, X20
	0x01ECDFF8 BLR X8
	0x01ECDFFC LDR X0, [X19 + 0x1C0]
	0x01ECE000 CBZ X0, 0x1ECE040
	0x01ECE004 MOV X1, X20
	0x01ECE008 MOV X2, X31
	0x01ECE00C MOV X3, X31
	0x01ECE010 BL 0x1ECE268
	0x01ECE014 TBNZ X0, 0x0, 0x1ECE02C
	0x01ECE018 LDR X0, [X19 + 0x98]
	0x01ECE01C CBZ X0, 0x1ECE040
	0x01ECE020 MOV X1, X20
	0x01ECE024 BL 0x1ECD2E4
	0x01ECE028 MOV X20, X31
	0x01ECE02C MOV X0, X20
	0x01ECE030 LDP X20, X19, [X31 + 0x20]
	0x01ECE034 LDP X22, X21, [X31 + 0x10]
	0x01ECE038 LDP X30, X23, [X31], #0x30
	0x01ECE03C RET
	0x01ECE040 BL 0x1C16F20
	0x01ECE044 SUB X31, X31, 0x30
	0x01ECE048 STP X30, X21, [X31 + 0x10]
	0x01ECE04C STP X20, X19, [X31 + 0x20]
	0x01ECE050 ADRP X21, 0x250B000
	0x01ECE054 LDRB W8, [X21 + 0x534]
	0x01ECE058 MOV X19, X1
	0x01ECE05C MOV X20, X0
	0x01ECE060 TBNZ X8, 0x0, 0x1ECE078
	0x01ECE064 ADRP X0, 0x2231000
	0x01ECE068 LDR X0, [X0 + 0xE10]
	0x01ECE06C BL 0x1C16CF4
	0x01ECE070 MOVZ W8, 0x1
	0x01ECE074 STRB W8, [X21 + 0x534]
	0x01ECE078 STR X31, [X31 + 0x8]
	0x01ECE07C LDR X0, [X20 + 0x28]
	0x01ECE080 CBZ X0, 0x1ECE0B8
	0x01ECE084 ADRP X8, 0x2231000
	0x01ECE088 LDR X8, [X8 + 0xE10]
	0x01ECE08C AND X1, X19, 0x0
	0x01ECE090 ADD X2, X31, 0x8
	0x01ECE094 LDR X3, [X8]
	0x01ECE098 BL 0x2AF4D74
	0x01ECE09C LDR X8, [X31 + 0x8]
	0x01ECE0A0 LDP X20, X19, [X31 + 0x20]
	0x01ECE0A4 LDP X30, X21, [X31 + 0x10]
	0x01ECE0A8 ANDS W31, W0, 0x1
	0x01ECE0AC CSEL X0, X8, X31, NE
	0x01ECE0B0 ADD X31, X31, 0x30
	0x01ECE0B4 RET
	0x01ECE0B8 BL 0x1C16F20
	0x01ECE0BC STR X30, [X31 - 0x20]!
	0x01ECE0C0 STP X20, X19, [X31 + 0x10]
	0x01ECE0C4 ADRP X20, 0x250B000
	0x01ECE0C8 LDRB W8, [X20 + 0x52D]
	0x01ECE0CC MOV X19, X0
	0x01ECE0D0 TBNZ X8, 0x0, 0x1ECE0E8
	0x01ECE0D4 ADRP X0, 0x2231000
	0x01ECE0D8 LDR X0, [X0 + 0xE28]
	0x01ECE0DC BL 0x1C16CF4
	0x01ECE0E0 MOVZ W8, 0x1
	0x01ECE0E4 STRB W8, [X20 + 0x52D]
	0x01ECE0E8 LDR X0, [X19 + 0x28]
	0x01ECE0EC CBZ X0, 0x1ECE118
	0x01ECE0F0 ADRP X8, 0x2231000
	0x01ECE0F4 LDR X8, [X8 + 0xE28]
	0x01ECE0F8 LDR X1, [X8]
	0x01ECE0FC BL 0x2AF3128
	0x01ECE100 LDR W8, [X19 + 0x18]
	0x01ECE104 LDP X20, X19, [X31 + 0x10]
	0x01ECE108 CMP W0, W8
	0x01ECE10C CSET W0, EQ
	0x01ECE110 LDR X30, [X31], #0x20
	0x01ECE114 RET
	0x01ECE118 BL 0x1C16F20
	0x01ECE11C STR X30, [X31 - 0x20]!
	0x01ECE120 STP X20, X19, [X31 + 0x10]
	0x01ECE124 ADRP X19, 0x250B000
	0x01ECE128 LDRB W8, [X19 + 0x537]
	0x01ECE12C MOV X20, X0
	0x01ECE130 TBNZ X8, 0x0, 0x1ECE178
	0x01ECE134 ADRP X0, 0x2230000
	0x01ECE138 LDR X0, [X0 + 0x450]
	0x01ECE13C BL 0x1C16CF4
	0x01ECE140 ADRP X0, 0x2231000
	0x01ECE144 LDR X0, [X0 + 0xE30]
	0x01ECE148 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x250D000
	009 Move X20, 0x2233000
	010 Move W8, [X21+1234]
	011 Move X20, [X20+3576]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2227000
	018 Move X0, [X0+1448]
	019 Call 0x1C17CF4
	020 Move X0, 0x2233000
	021 Move X0, [X0+3576]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1234], W8
	025 Move X0, [X20]
	026 Move X1, X31
	027 Move [X31+8], X31
	028 Call EngineProfiler.Begin, X0
	029 Move W8, [X19+432]
	030 Compare W8, 0
	031 JumpIfEqual {121}
	032 Move X8, [X19+424]
	033 Move [X19+432], W31
	034 Compare X8, 0
	035 JumpIfEqual {40}
	036 Move V0, [X8+72]
	037 Move X0, X31
	038 NotImplemented "Instruction INVALID not yet implemented."
	039 Call EngineProfiler.RoundTripTime, V0
	040 Move X0, X19
	041 Call Client.GetSortedInputs, X0
	042 Move X20, X1
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X21, X0
	045 Compare X0, 0
	046 JumpIfEqual {135}
	047 Move W22, W31
	048 Move W8, [X21+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Add X23, X21, W22
	051 Add X23, X23, 32
	052 Move X8, [X23]
	053 Compare X8, 0
	054 JumpIfEqual {135}
	055 Move X8, [X8+32]
	056 Compare X8, 0
	057 JumpIfEqual {135}
	058 Move X9, [X19]
	059 Move W24, [X8]
	060 Move X0, X19
	061 Move X8, [X9+584]
	062 Move X1, [X9+592]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move W8, [X21+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X8, [X23]
	068 Compare X8, 0
	069 JumpIfEqual {135}
	070 Move X8, [X8+32]
	071 Compare X8, 0
	072 JumpIfEqual {135}
	073 Move X0, [X19+448]
	074 Compare X0, 0
	075 JumpIfEqual {135}
	076 Move W1, [X8]
	077 Add X2, X31, 8
	078 Call Buffer.Remove, X0, X1, X2
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {88}
	083 Move X0, [X19+152]
	084 Compare X0, 0
	085 JumpIfEqual {135}
	086 Move X1, [X31+8]
	087 Call Pool.Release, X0, X1
	088 Add W22, W22, 1
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X0, X19
	091 Move X1, X31
	092 Call Simulation.get_Topology, X0
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X8, [X19]
	095 Move W21, [X19+72]
	096 Move X0, X19
	097 Move X9, [X8+584]
	098 Move X1, [X8+592]
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move X8, 0x2226000
	101 Move X8, [X8+1448]
	102 Move X20, X0
	103 Move X8, [X8]
	104 Move W9, [X8+224]
	105 Compare W9, 0
	106 JumpIfNotEqual {109}
	107 Move X0, X8
	108 Call 0x1C17DFC
	109 Subtract W1, W21, W20
	110 Move W0, W31
	111 Move X2, X31
	112 Call Math.Max, X0, X1
	113 Move W20, W0
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X0, X19
	116 Call Client.ResetPredictedObjectsToLatestServerState, X0
	117 Move W2, 4
	118 Move X0, X19
	119 Move W1, W20
	120 Call Client.RunClientSidePredictionLoop, X0, X1, X2
	121 Move W20, W31
	122 Move X0, X31
	123 Call EngineProfiler.End
	124 Move X0, X19
	125 Call Client.UpdateInterpolation, X0
	126 Move W0, W20
	127 Move X20, [X31+48]
	128 Move X19, [X31+56]
	129 Move X22, [X31+32]
	130 Move X21, [X31+40]
	131 Move X24, [X31+16]
	132 Move X23, [X31+24]
	133 Move X30, [X31+64]
	134 Return X0
	135 Call 0x1C17F20
	136 Call 0x1C17F28
	137 Move X21, X0
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X0, X21
	140 Call 0x3EB2AD0
	141 Move X21, X0
	142 Move X0, 0x2226000
	143 Move X0, [X0+2000]
	144 Call 0x1C17D08
	145 Move X8, [X21]
	146 Move X1, [X8]
	147 Call 0x1C18270
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {168}
	152 Move X21, [X21]
	153 Call 0x3EB2AE0
	154 Move X0, 0x222E000
	155 Move X0, [X0+2224]
	156 Call 0x1C17D08
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {161}
	160 Call 0x1C17DFC
	161 Move X0, 0x2232000
	162 Move X0, [X0+3544]
	163 Call 0x1C17D08
	164 Move X2, X0
	165 Move X0, X19
	166 Move X1, X21
	167 Call 0x2214878, X0, X1
	168 Move W0, 8
	169 Call 0x3EB2AF0
	170 Move X8, [X21]
	171 Move [X0], X8
	172 Move X1, 0x1FE7000
	173 Add X1, X1, 3672
	174 Move X2, X31
	175 Call 0x3EB2B00
	176 Move X21, X0
	177 Call 0x3EB2AE0
	178 Move X0, X21
	179 Call 0x1D2D690
	180 Call 0x1991590

Method: System.Void RecvPacket()

Disassembly:
	0x01ECE370 CBZ X8, 0x1ECE418
	0x01ECE374 LDR W1, [X8]
	0x01ECE378 MOV X0, X19
	0x01ECE37C BL 0x1ED8C90
	0x01ECE380 MOV W22, W0
	0x01ECE384 TBNZ X0, 0x0, 0x1ECE3F8
	0x01ECE388 LDR X8, [X20 + 0x20]
	0x01ECE38C CBZ X8, 0x1ECE418
	0x01ECE390 LDR X0, [X19 + 0x28]
	0x01ECE394 CBZ X0, 0x1ECE418
	0x01ECE398 LDR W1, [X8]
	0x01ECE39C ADRP X8, 0x2231000
	0x01ECE3A0 LDR X8, [X8 + 0xE50]
	0x01ECE3A4 MOV X2, X20
	0x01ECE3A8 LDR X3, [X8]
	0x01ECE3AC BL 0x2AF3360
	0x01ECE3B0 ANDS W31, W21, 0xFF
	0x01ECE3B4 B.EQ 0x1ECE3F8
	0x01ECE3B8 LDR X8, [X20 + 0x20]
	0x01ECE3BC CBZ X8, 0x1ECE418
	0x01ECE3C0 LDR W20, [X8]
	0x01ECE3C4 ADRP X8, 0x2231000
	0x01ECE3C8 LDR X19, [X19 + 0x30]
	0x01ECE3CC LDR X8, [X8 + 0xE58]
	0x01ECE3D0 ADD X0, X31, 0x0
	0x01ECE3D4 LDR X1, [X8]
	0x01ECE3D8 BL 0x2431818
	0x01ECE3DC CBZ X19, 0x1ECE418
	0x01ECE3E0 ADRP X8, 0x2231000
	0x01ECE3E4 LDR X8, [X8 + 0xA88]
	0x01ECE3E8 MOV X0, X19
	0x01ECE3EC MOV X1, X20
	0x01ECE3F0 LDR X2, [X8]
	0x01ECE3F4 BL 0x2AF0340
	0x01ECE3F8 ORN W8, W31, W22, 0x0
	0x01ECE3FC LDP X20, X19, [X31 + 0x40]
	0x01ECE400 LDP X22, X21, [X31 + 0x30]
	0x01ECE404 LDP X24, X23, [X31 + 0x20]
	0x01ECE408 LDP X30, X25, [X31 + 0x10]
	0x01ECE40C AND W0, W8, 0x1
	0x01ECE410 ADD X31, X31, 0x50
	0x01ECE414 RET
	0x01ECE418 BL 0x1C16F20
	0x01ECE41C STP X30, X21, [X31 - 0x20]!
	0x01ECE420 STP X20, X19, [X31 + 0x10]
	0x01ECE424 ADRP X21, 0x250B000
	0x01ECE428 LDRB W8, [X21 + 0x530]
	0x01ECE42C MOV X20, X1
	0x01ECE430 MOV X19, X0
	0x01ECE434 TBNZ X8, 0x0, 0x1ECE470
	0x01ECE438 ADRP X0, 0x2231000
	0x01ECE43C LDR X0, [X0 + 0xE28]
	0x01ECE440 BL 0x1C16CF4
	0x01ECE444 ADRP X0, 0x2231000
	0x01ECE448 LDR X0, [X0 + 0xE68]
	0x01ECE44C BL 0x1C16CF4
	0x01ECE450 ADRP X0, 0x2231000
	0x01ECE454 LDR X0, [X0 + 0xE70]
	0x01ECE458 BL 0x1C16CF4
	0x01ECE45C ADRP X0, 0x2231000
	0x01ECE460 LDR X0, [X0 + 0xE78]
	0x01ECE464 BL 0x1C16CF4
	0x01ECE468 MOVZ W8, 0x1
	0x01ECE46C STRB W8, [X21 + 0x530]
	0x01ECE470 CBZ X20, 0x1ECE528
	0x01ECE474 ADRP X21, 0x2231000
	0x01ECE478 LDR X21, [X21 + 0xE78]
	0x01ECE47C MOV X0, X19
	0x01ECE480 BL 0x1ED8C40
	0x01ECE484 LDR W8, [X20 + 0x18]
	0x01ECE488 LDR X1, [X21]
	0x01ECE48C MOV X2, X31
	0x01ECE490 CMP W0, W8
	0x01ECE494 CSET W0, LE
	0x01ECE498 BL 0x1E3BA60
	0x01ECE49C LDR W2, [X20 + 0x18]
	0x01ECE4A0 MOV X0, X20
	0x01ECE4A4 MOV W1, W31
	0x01ECE4A8 MOV X3, X31
	0x01ECE4AC BL 0x339FA34
	0x01ECE4B0 LDR X0, [X19 + 0x28]
	0x01ECE4B4 CBZ X0, 0x1ECE528
	0x01ECE4B8 ADRP X8, 0x2231000
	0x01ECE4BC LDR X8, [X8 + 0xE68]
	0x01ECE4C0 LDR X1, [X8]
	0x01ECE4C4 BL 0x2AF31F8
	0x01ECE4C8 CBZ X0, 0x1ECE528
	0x01ECE4CC ADRP X8, 0x2231000
	0x01ECE4D0 LDR X8, [X8 + 0xE70]
	0x01ECE4D4 MOV X1, X20
	0x01ECE4D8 MOV W2, W31
	0x01ECE4DC LDR X3, [X8]
	0x01ECE4E0 BL 0x276485C
	0x01ECE4E4 LDR X0, [X19 + 0x28]
	0x01ECE4E8 CBZ X0, 0x1ECE528
	0x01ECE4EC ADRP X21, 0x2231000
	0x01ECE4F0 LDR X21, [X21 + 0xE28]
	0x01ECE4F4 LDR X1, [X21]
	0x01ECE4F8 BL 0x2AF3128
	0x01ECE4FC MOV W2, W0
	0x01ECE500 MOV X0, X20
	0x01ECE504 MOV W1, W31
	0x01ECE508 MOV X3, X31
	0x01ECE50C BL 0x1E86218
	0x01ECE510 LDR X0, [X19 + 0x28]
	0x01ECE514 CBZ X0, 0x1ECE528
	0x01ECE518 LDR X1, [X21]
	0x01ECE51C LDP X20, X19, [X31 + 0x10]
	0x01ECE520 LDP X30, X21, [X31], #0x20
	0x01ECE524 B 0x2AF3128
	0x01ECE528 BL 0x1C16F20
	0x01ECE52C SUB X31, X31, 0x50
	0x01ECE530 STR D8, [X31 + 0x30]
	0x01ECE534 STR X30, [X31 + 0x38]
	0x01ECE538 STP X20, X19, [X31 + 0x40]
	0x01ECE53C ADRP X20, 0x250B000
	0x01ECE540 LDRB W8, [X20 + 0x4D6]
	0x01ECE544 MOV V8.16B, V0.16B
	0x01ECE548 MOV X19, X0
	0x01ECE54C TBNZ X8, 0x0, 0x1ECE594
	0x01ECE550 ADRP X0, 0x2230000
	0x01ECE554 LDR X0, [X0 + 0xA40]
	0x01ECE558 BL 0x1C16CF4
	0x01ECE55C ADRP X0, 0x2230000
	0x01ECE560 LDR X0, [X0 + 0xA48]
	0x01ECE564 BL 0x1C16CF4
	0x01ECE568 ADRP X0, 0x2230000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], D11
	003 Move [X31+40], D10
	004 Move [X31+48], D9
	005 Move [X31+56], D8
	006 Move [X31+64], X30
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X20, 0x250C000
	012 Move W8, [X20+1235]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x2231000
	019 Move X0, [X0+1984]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1235], W8
	023 Move X8, [X19+272]
	024 Compare X8, 0
	025 JumpIfEqual {150}
	026 Move W20, [X8+32]
	027 Move [X31+16], X31
	028 Move [X31+24], X31
	029 Move X1, [X8+40]
	030 Add X0, X31, 16
	031 Call TimeFeedback.Read, X0, X1
	032 Move X0, [X19+168]
	033 Compare X0, 0
	034 JumpIfEqual {150}
	035 Call StateReplicator.RecvPacket, X0
	036 Move W8, 1
	037 Move X0, X19
	038 Move X1, X31
	039 Move [X19+432], W8
	040 Call Simulation.get_HasRuntimeConfig, X0
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {139}
	045 Move X21, [X19+440]
	046 Move X0, X19
	047 Move X1, X31
	048 NotImplemented "Instruction BIC not yet implemented."
	049 Call Simulation.get_TickDeltaDouble, X0
	050 Add X0, X31, 0
	051 Move X1, X20
	052 Move X2, X20
	053 Move X3, X31
	054 Move [X31], X31
	055 Move [X31+8], X31
	056 Call TimelinePoint..ctor, X0, X1, X2, V0
	057 Move X0, X19
	058 Move X1, X31
	059 Call Simulation.get_TickDeltaDouble, X0
	060 Compare X21, 0
	061 JumpIfEqual {150}
	062 Move X1, [X31]
	063 Move X2, [X31+8]
	064 Move W3, 1
	065 Move X0, X21
	066 Move X4, X31
	067 Call Timeline.AddPoint, X0, X1, V0, X2
	068 Move X0, X19
	069 Call Client.UpdateObjectTimelines, X0
	070 Move X8, [X19+424]
	071 Move X21, [X19+104]
	072 Compare X8, 0
	073 JumpIfEqual {77}
	074 Move V8, [X8+72]
	075 Compare X21, 0
	076 JumpIfNotEqual {80}
	077 Move D8, X31
	078 Compare X21, 0
	079 JumpIfEqual {150}
	080 Move X22, 0x2231000
	081 Move X8, [X21]
	082 Move X22, [X22+1984]
	083 NotImplemented "Instruction LDRH not yet implemented."
	084 Move X1, [X22]
	085 Compare X9, 0
	086 JumpIfEqual {93}
	087 Move X10, [X8+176]
	088 Add X10, X10, 8
	089 NotImplemented "Instruction LDUR not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Subtract X9, X9, 1
	092 Add X10, X10, 16
	093 Move W2, 6
	094 Move X0, X21
	095 Call 0x1C5D788
	096 Move W9, [X10]
	097 Add W9, W9, 6
	098 Add X8, X8, W9
	099 Add X0, X8, 312
	100 Move X8, [X0]
	101 Move X2, [X0+8]
	102 Move X0, X21
	103 Move V0, V8
	104 Move X1, X20
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move X19, [X19+104]
	107 Compare X19, 0
	108 JumpIfEqual {150}
	109 Move X8, [X19]
	110 Move S9, [X31+24]
	111 Move S8, [X31+28]
	112 Move S11, [X31+16]
	113 Move S10, [X31+20]
	114 Move X1, [X22]
	115 NotImplemented "Instruction LDRH not yet implemented."
	116 Compare X9, 0
	117 JumpIfEqual {124}
	118 Move X10, [X8+176]
	119 Add X10, X10, 8
	120 NotImplemented "Instruction LDUR not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Subtract X9, X9, 1
	123 Add X10, X10, 16
	124 Move W2, 7
	125 Move X0, X19
	126 Call 0x1C5D788
	127 Move W9, [X10]
	128 Add W9, W9, 7
	129 Add X8, X8, W9
	130 Add X0, X8, 312
	131 Move X8, [X0]
	132 Move X1, [X0+8]
	133 Move X0, X19
	134 Move V0, V11
	135 Move V1, V10
	136 Move V2, V9
	137 Move V3, V8
	138 NotImplemented "Instruction BLR not yet implemented."
	139 Move X20, [X31+96]
	140 Move X19, [X31+104]
	141 Move X22, [X31+80]
	142 Move X21, [X31+88]
	143 Move X30, [X31+64]
	144 Move D9, [X31+48]
	145 Move D8, [X31+56]
	146 Move D11, [X31+32]
	147 Move D10, [X31+40]
	148 Add X31, X31, 112
	149 Return 
	150 Call 0x1C17F20

Method: System.Void WritePackets()

Disassembly:
	0x01ECE8E4 MOVZ W1, 0x1
	0x01ECE8E8 MOV X0, X19
	0x01ECE8EC MOV X2, X31
	0x01ECE8F0 STR W9, [X20, X8, LSL #2]
	0x01ECE8F4 BL 0x1EF9B00
	0x01ECE8F8 CMP X0, 0x1
	0x01ECE8FC B.EQ 0x1ECE88C
	0x01ECE900 LDP X20, X19, [X31 + 0x40]
	0x01ECE904 LDP X22, X21, [X31 + 0x30]
	0x01ECE908 LDP X24, X23, [X31 + 0x20]
	0x01ECE90C LDP X26, X25, [X31 + 0x10]
	0x01ECE910 LDR X30, [X31], #0x50
	0x01ECE914 RET
	0x01ECE918 BL 0x1C16F20
	0x01ECE91C STR X30, [X31 - 0x10]!
	0x01ECE920 LDR X8, [X0 + 0x10]
	0x01ECE924 CBZ X8, 0x1ECE934
	0x01ECE928 LDR X0, [X8 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Simulation.get_Topology, X0
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X0, X19
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Move X0, [X19+168]
	012 Compare X0, 0
	013 JumpIfEqual {21}
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Call StateReplicator.SendPacket, X0
	017 Return 
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return 
	021 Call 0x1C17F20

Method: Fusion.SimulationInput GetInput(Fusion.Tick tick, Fusion.PlayerRef player)

Disassembly:
	0x01ECEE50 BL 0x3319718
	0x01ECEE54 ADD X21, X19, 0x1
	0x01ECEE58 MOV W20, W0
	0x01ECEE5C MOV X0, X21
	0x01ECEE60 MOV X1, X31
	0x01ECEE64 BL 0x3319718
	0x01ECEE68 MOV W22, W0
	0x01ECEE6C ADD X0, X19, 0x2
	0x01ECEE70 MOV X1, X31
	0x01ECEE74 BL 0x3319718
	0x01ECEE78 MOV W23, W0
	0x01ECEE7C ADD X0, X19, 0x3
	0x01ECEE80 MOV X1, X31
	0x01ECEE84 BL 0x3319718
	0x01ECEE88 MOV W19, W0
	0x01ECEE8C MOV X0, X21
	0x01ECEE90 MOV X1, X31
	0x01ECEE94 BL 0x3319718
	0x01ECEE98 MOVZ W8, 0x67A9
	0x01ECEE9C MOVK W8, 0x20000
	0x01ECEEA0 EOR W8, W20, W8, 0x0
	0x01ECEEA4 MOVZ W9, 0x18D
	0x01ECEEA8 MUL W8, W8, W9
	0x01ECEEAC EOR W8, W8, W22, 0x0
	0x01ECEEB0 MUL W8, W8, W9
	0x01ECEEB4 EOR W8, W8, W23, 0x0
	0x01ECEEB8 MUL W8, W8, W9
	0x01ECEEBC EOR W8, W8, W19, 0x0
	0x01ECEEC0 LDP X20, X19, [X31 + 0x20]
	0x01ECEEC4 LDP X22, X21, [X31 + 0x10]
	0x01ECEEC8 MUL W8, W8, W9
	0x01ECEECC EOR W0, W8, W0, 0x0
	0x01ECEED0 LDP X30, X23, [X31], #0x30
	0x01ECEED4 RET
	0x01ECEED8 STR X30, [X31 - 0x30]!
	0x01ECEEDC STP X22, X21, [X31 + 0x10]
	0x01ECEEE0 STP X20, X19, [X31 + 0x20]
	0x01ECEEE4 ADRP X22, 0x250B000
	0x01ECEEE8 ADRP X21, 0x2231000
	0x01ECEEEC LDRB W8, [X22 + 0x4DC]
	0x01ECEEF0 LDR X21, [X21 + 0xE98]
	0x01ECEEF4 MOV X19, X1
	0x01ECEEF8 MOV X20, X0
	0x01ECEEFC TBNZ X8, 0x0, 0x1ECEF14
	0x01ECEF00 ADRP X0, 0x2231000
	0x01ECEF04 LDR X0, [X0 + 0xE98]
	0x01ECEF08 BL 0x1C16CF4
	0x01ECEF0C MOVZ W8, 0x1
	0x01ECEF10 STRB W8, [X22 + 0x4DC]
	0x01ECEF14 LDR X8, [X19 + 0x40]
	0x01ECEF18 LDR X1, [X21]
	0x01ECEF1C MOV X2, X31
	0x01ECEF20 LDRB W8, [X8]
	0x01ECEF24 CMP W8, 0x3
	0x01ECEF28 CSET W0, EQ
	0x01ECEF2C BL 0x1E3BA60
	0x01ECEF30 LDR X1, [X20]
	0x01ECEF34 MOV X0, X19
	0x01ECEF38 LDP X20, X19, [X31 + 0x20]
	0x01ECEF3C LDP X22, X21, [X31 + 0x10]
	0x01ECEF40 MOVZ W2, 0x70
	0x01ECEF44 MOVZ W3, 0x40
	0x01ECEF48 MOV X4, X31
	0x01ECEF4C LDR X30, [X31], #0x30
	0x01ECEF50 B 0x1EFA850
	0x01ECEF54 STP X30, X23, [X31 - 0x30]!
	0x01ECEF58 STP X22, X21, [X31 + 0x10]
	0x01ECEF5C STP X20, X19, [X31 + 0x20]
	0x01ECEF60 ADRP X23, 0x250B000
	0x01ECEF64 ADRP X22, 0x2231000
	0x01ECEF68 ADRP X21, 0x2231000
	0x01ECEF6C LDRB W8, [X23 + 0x4DD]
	0x01ECEF70 LDR X22, [X22 + 0xE98]
	0x01ECEF74 LDR X21, [X21 + 0xEA0]
	0x01ECEF78 MOV X20, X1
	0x01ECEF7C MOV X19, X0
	0x01ECEF80 TBNZ X8, 0x0, 0x1ECEFA4
	0x01ECEF84 ADRP X0, 0x2231000
	0x01ECEF88 LDR X0, [X0 + 0xEA0]
	0x01ECEF8C BL 0x1C16CF4
	0x01ECEF90 ADRP X0, 0x2231000
	0x01ECEF94 LDR X0, [X0 + 0xE98]
	0x01ECEF98 BL 0x1C16CF4
	0x01ECEF9C MOVZ W8, 0x1
	0x01ECEFA0 STRB W8, [X23 + 0x4DD]
	0x01ECEFA4 LDR X8, [X20 + 0x40]
	0x01ECEFA8 LDR X1, [X22]
	0x01ECEFAC MOV X2, X31
	0x01ECEFB0 LDRB W8, [X8]
	0x01ECEFB4 CMP W8, 0x3
	0x01ECEFB8 CSET W0, EQ
	0x01ECEFBC BL 0x1E3BA60
	0x01ECEFC0 LDR W8, [X20 + 0x50]
	0x01ECEFC4 LDR X1, [X21]
	0x01ECEFC8 MOV X2, X31
	0x01ECEFCC CMP W8, 0x70
	0x01ECEFD0 CSET W0, EQ
	0x01ECEFD4 BL 0x1E3BA60
	0x01ECEFD8 MOVZ W1, 0x40
	0x01ECEFDC MOV X0, X20
	0x01ECEFE0 MOV X2, X31
	0x01ECEFE4 BL 0x1EF9B00
	0x01ECEFE8 STR X0, [X19]
	0x01ECEFEC LDP X20, X19, [X31 + 0x20]
	0x01ECEFF0 LDP X22, X21, [X31 + 0x10]
	0x01ECEFF4 LDP X30, X23, [X31], #0x30
	0x01ECEFF8 RET
	0x01ECEFFC SUB X31, X31, 0x50
	0x01ECF000 STP X30, X23, [X31 + 0x20]
	0x01ECF004 STP X22, X21, [X31 + 0x30]
	0x01ECF008 STP X20, X19, [X31 + 0x40]
	0x01ECF00C ADRP X20, 0x250A000
	0x01ECF010 ADRP X21, 0x2224000
	0x01ECF014 LDRB W8, [X20 + 0x4DE]
	0x01ECF018 LDR X21, [X21 + 0x9D0]
	0x01ECF01C MOV X19, X0
	0x01ECF020 TBNZ X8, 0x0, 0x1ECF0A4
	0x01ECF024 ADRP X0, 0x2225000
	0x01ECF028 LDR X0, [X0 + 0x9D8]
	0x01ECF02C BL 0x1C16CF4
	0x01ECF030 ADRP X0, 0x2224000
	0x01ECF034 LDR X0, [X0 + 0x758]
	0x01ECF038 BL 0x1C16CF4
	0x01ECF03C ADRP X0, 0x2224000
	0x01ECF040 LDR X0, [X0 + 0x9D0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x250C000
	008 Move X22, 0x2229000
	009 Move W8, [X23+1236]
	010 Move X22, [X22+3648]
	011 Move X21, X2
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x2231000
	019 Move X0, [X0+2704]
	020 Call 0x1C17CF4
	021 Move X0, 0x2229000
	022 Move X0, [X0+3648]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+1236], W8
	026 Move X8, [X19]
	027 Move X0, X19
	028 Move X9, [X8+616]
	029 Move X1, [X8+624]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X8, [X22]
	032 Move X22, X0
	033 Move W9, [X8+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X0, [X19+448]
	040 Compare X0, 0
	041 JumpIfEqual {152}
	042 Move W8, [X19+218]
	043 Compare W8, 0
	044 JumpIfEqual {52}
	045 And X1, X20, 0
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X30, [X31+48]
	051 Move X23, [X31+56]
	052 Call Buffer.get_Full, X0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {66}
	057 Move X0, X19
	058 Move X1, X31
	059 Call Simulation.get_Topology, X0
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X20, X31
	062 Move X0, [X19+448]
	063 Compare X0, 0
	064 JumpIfEqual {152}
	065 Call Buffer.Clear, X0
	066 Move X0, [X19+152]
	067 Compare X0, 0
	068 JumpIfEqual {152}
	069 Call Pool.Acquire, X0
	070 Move X8, [X19]
	071 Move X20, X0
	072 Move X0, X19
	073 Move X9, [X8+616]
	074 Move X1, [X8+624]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Compare X20, 0
	077 JumpIfEqual {152}
	078 Move X8, [X20+32]
	079 Move [X20+24], W0
	080 Compare X8, 0
	081 JumpIfEqual {152}
	082 Move W9, [X19+72]
	083 Move [X8], W9
	084 Move X8, [X20+32]
	085 Compare X8, 0
	086 JumpIfEqual {152}
	087 Move W9, [X19+128]
	088 Move [X8+12], W9
	089 Move X8, [X20+32]
	090 Compare X8, 0
	091 JumpIfEqual {152}
	092 Move W9, [X19+132]
	093 Move [X8+8], W9
	094 Move X8, [X20+32]
	095 Compare X8, 0
	096 JumpIfEqual {152}
	097 Move V0, [X19+136]
	098 Move [X8+4], S0
	099 Move X21, [X19+64]
	100 Compare X21, 0
	101 JumpIfEqual {152}
	102 Move X10, 0x2231000
	103 Move X8, [X21]
	104 Move X10, [X10+2704]
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Move X1, [X10]
	107 Compare X9, 0
	108 JumpIfEqual {115}
	109 Move X10, [X8+176]
	110 Add X10, X10, 8
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Subtract X9, X9, 1
	114 Add X10, X10, 16
	115 Move W2, 3
	116 Move X0, X21
	117 Call 0x1C5D788
	118 Move W9, [X10]
	119 Add W9, W9, 3
	120 Add X8, X8, W9
	121 Add X0, X8, 312
	122 Move X8, [X0]
	123 Move X2, [X0+8]
	124 Move X0, X21
	125 Move X1, X20
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Move X0, [X19+448]
	128 Compare X0, 0
	129 JumpIfEqual {152}
	130 Move X1, X20
	131 Move X2, X31
	132 Move X3, X31
	133 Call Buffer.Add, X0, X1, X2
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfEqual {144}
	138 Move X0, [X19+152]
	139 Compare X0, 0
	140 JumpIfEqual {152}
	141 Move X1, X20
	142 Call Pool.Release, X0, X1
	143 Move X20, X31
	144 Move X0, X20
	145 Move X20, [X31+32]
	146 Move X19, [X31+40]
	147 Move X22, [X31+16]
	148 Move X21, [X31+24]
	149 Move X30, [X31+48]
	150 Move X23, [X31+56]
	151 Return X0
	152 Call 0x1C17F20

Method: System.ValueTuple`2<Fusion.SimulationInput[], System.Int32> GetSortedInputs()

Disassembly:
	0x01ECE14C ADRP X0, 0x2231000
	0x01ECE150 LDR X0, [X0 + 0xE38]
	0x01ECE154 BL 0x1C16CF4
	0x01ECE158 ADRP X0, 0x2231000
	0x01ECE15C LDR X0, [X0 + 0xE40]
	0x01ECE160 BL 0x1C16CF4
	0x01ECE164 ADRP X0, 0x2231000
	0x01ECE168 LDR X0, [X0 + 0xE48]
	0x01ECE16C BL 0x1C16CF4
	0x01ECE170 MOVZ W8, 0x1
	0x01ECE174 STRB W8, [X19 + 0x537]
	0x01ECE178 LDR X0, [X20 + 0x18]
	0x01ECE17C CBZ X0, 0x1ECE264
	0x01ECE180 LDR W8, [X0 + 0x18]
	0x01ECE184 CMP W8, 0x1
	0x01ECE188 B.LT 0x1ECE1AC
	0x01ECE18C ADRP X8, 0x2231000
	0x01ECE190 LDR X8, [X8 + 0xE40]
	0x01ECE194 LDR X1, [X8]
	0x01ECE198 BL 0x26022C0
	0x01ECE19C CBZ X0, 0x1ECE264
	0x01ECE1A0 MOV X19, X0
	0x01ECE1A4 STRB W31, [X0 + 0x14]
	0x01ECE1A8 B 0x1ECE254
	0x01ECE1AC ADRP X8, 0x2231000
	0x01ECE1B0 LDR X8, [X8 + 0xE38]
	0x01ECE1B4 LDR X0, [X8]
	0x01ECE1B8 BL 0x1C16F10
	0x01ECE1BC MOV X1, X31
	0x01ECE1C0 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x250C000
	006 Move W8, [X20+1237]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2232000
	013 Move X0, [X0+3584]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1237], W8
	017 Move X0, [X19+448]
	018 Compare X0, 0
	019 JumpIfEqual {38}
	020 Move X1, [X19+456]
	021 Move X20, 0x2232000
	022 Move X20, [X20+3584]
	023 Call Buffer.CopySortedTo, X0, X1
	024 Move X1, [X19+456]
	025 Move X3, [X20]
	026 Move W2, W0
	027 Add X0, X31, 0
	028 Move [X31], X31
	029 Move [X31+8], X31
	030 Call ValueTuple`2<Object, Int32>..ctor, X0, X1, X2
	031 Move X0, [X31]
	032 Move X1, [X31+8]
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X30, [X31+16]
	036 Add X31, X31, 48
	037 Return X0
	038 Call 0x1C17F20

Method: System.Void UpdateObjectInterpolationParams(System.Double now)

Disassembly:
	0x01ECF52C RET
	0x01ECF530 BL 0x1C16F20
	0x01ECF534 MOVI V0.2D, 0x0
	0x01ECF538 STR X31, [X0 + 0x38]
	0x01ECF53C STUR V0, [X0 + 0x28]
	0x01ECF540 STUR V0, [X0 + 0x18]
	0x01ECF544 RET
	0x01ECF548 STR X30, [X31 - 0x20]!
	0x01ECF54C STP X20, X19, [X31 + 0x10]
	0x01ECF550 ADRP X20, 0x250A000
	0x01ECF554 LDRB W8, [X20 + 0x54B]
	0x01ECF558 MOV X19, X0
	0x01ECF55C TBNZ X8, 0x0, 0x1ECF580
	0x01ECF560 ADRP X0, 0x2230000
	0x01ECF564 LDR X0, [X0 + 0xED8]
	0x01ECF568 BL 0x1C16CF4
	0x01ECF56C ADRP X0, 0x2230000
	0x01ECF570 LDR X0, [X0 + 0xEE0]
	0x01ECF574 BL 0x1C16CF4
	0x01ECF578 MOVZ W8, 0x1
	0x01ECF57C STRB W8, [X20 + 0x54B]
	0x01ECF580 CBZ X19, 0x1ECF5D8
	0x01ECF584 ADRP X8, 0x2230000
	0x01ECF588 LDR X8, [X8 + 0xEE0]
	0x01ECF58C MOV X0, X19
	0x01ECF590 LDR X1, [X8]
	0x01ECF594 BL 0x225501C
	0x01ECF598 MOV X20, X0
	0x01ECF59C CBZ X0, 0x1ECF5C8
	0x01ECF5A0 ADRP X8, 0x2230000
	0x01ECF5A4 LDR X8, [X8 + 0xED8]
	0x01ECF5A8 MOVZ W1, 0x40
	0x01ECF5AC MOV X0, X19
	0x01ECF5B0 LDR X2, [X8]
	0x01ECF5B4 BL 0x2255068
	0x01ECF5B8 ADRP X8, 0xFFFFFFFFFEC1E000
	0x01ECF5BC LDR V0, [X8 + 0x9F8]
	0x01ECF5C0 STR X0, [X20 + 0x20]
	0x01ECF5C4 STR D0, [X20 + 0x28]
	0x01ECF5C8 MOV X0, X20
	0x01ECF5CC LDP X20, X19, [X31 + 0x10]
	0x01ECF5D0 LDR X30, [X31], #0x20
	0x01ECF5D4 RET
	0x01ECF5D8 BL 0x1C16F20
	0x01ECF5DC STP X30, X19, [X31 - 0x10]!
	0x01ECF5E0 LDR X1, [X0 + 0x20]
	0x01ECF5E4 MOV X19, X0
	0x01ECF5E8 ADD X0, X0, 0x18
	0x01ECF5EC BL 0x1ECEED8
	0x01ECF5F0 LDR X8, [X19 + 0x38]
	0x01ECF5F4 CBZ X8, 0x1ECF628
	0x01ECF5F8 LDR X0, [X19 + 0x10]
	0x01ECF5FC CBZ X0, 0x1ECF628
	0x01ECF600 LDP X2, X3, [X19 + 0x20]
	0x01ECF604 LDR X1, [X8 + 0xD0]
	0x01ECF608 MOV X4, X31
	0x01ECF60C BL 0x1EC7E7C
	0x01ECF610 MOVI V0.2D, 0x0
	0x01ECF614 STUR V0, [X19 + 0x18]
	0x01ECF618 STUR V0, [X19 + 0x28]
	0x01ECF61C STR X31, [X19 + 0x38]
	0x01ECF620 LDP X30, X19, [X31], #0x10
	0x01ECF624 RET
	0x01ECF628 BL 0x1C16F20
	0x01ECF62C LDR W0, [X0 + 0x48]
	0x01ECF630 RET
	0x01ECF634 STR X30, [X31 - 0x20]!
	0x01ECF638 STP X20, X19, [X31 + 0x10]
	0x01ECF63C ADRP X20, 0x250A000
	0x01ECF640 LDRB W8, [X20 + 0x4DF]
	0x01ECF644 MOV X19, X0
	0x01ECF648 TBNZ X8, 0x0, 0x1ECF66C
	0x01ECF64C ADRP X0, 0x222F000
	0x01ECF650 LDR X0, [X0 + 0xA90]
	0x01ECF654 BL 0x1C16CF4
	0x01ECF658 ADRP X0, 0x2227000
	0x01ECF65C LDR X0, [X0 + 0xE40]
	0x01ECF660 BL 0x1C16CF4
	0x01ECF664 MOVZ W8, 0x1
	0x01ECF668 STRB W8, [X20 + 0x4DF]
	0x01ECF66C MOV X0, X19
	0x01ECF670 MOV X1, X31
	0x01ECF674 BL 0x1EC08DC
	0x01ECF678 TBZ X0, 0x0, 0x1ECF6CC
	0x01ECF67C LDR X19, [X19 + 0x40]
	0x01ECF680 CBZ X19, 0x1ECF720
	0x01ECF684 ADRP X10, 0x222F000
	0x01ECF688 LDR X8, [X19]
	0x01ECF68C LDR X10, [X10 + 0xA90]
	0x01ECF690 LDRH W9, [X8 + 0x12E]
	0x01ECF694 LDR X1, [X10]
	0x01ECF698 CBZ X9, 0x1ECF6BC
	0x01ECF69C LDR X10, [X8 + 0xB0]
	0x01ECF6A0 ADD X10, X10, 0x8
	0x01ECF6A4 LDUR X11, [X10 - 0x8]
	0x01ECF6A8 CMP X11, X1
	0x01ECF6AC B.EQ 0x1ECF6F0
	0x01ECF6B0 SUBS X9, X9, 0x1
	0x01ECF6B4 ADD X10, X10, 0x10
	0x01ECF6B8 B.NE 0x1ECF6A4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], D8
	003 Move [X31+56], X30
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X20, 0x250B000
	007 Move W8, [X20+1238]
	008 Move V8, V0
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x2230000
	015 Move X0, [X0+2624]
	016 Call 0x1C17CF4
	017 Move X0, 0x2230000
	018 Move X0, [X0+2632]
	019 Call 0x1C17CF4
	020 Move X0, 0x2230000
	021 Move X0, [X0+2640]
	022 Call 0x1C17CF4
	023 Move X0, 0x2230000
	024 Move X0, [X0+2648]
	025 Call 0x1C17CF4
	026 Move X0, 0x2230000
	027 Move X0, [X0+2656]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1238], W8
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 Move [X31+32], X31
	033 Move [X31], V0
	034 Move [X31+8], V0
	035 Move X0, [X19+336]
	036 Compare X0, 0
	037 JumpIfEqual {79}
	038 Move X8, 0x2230000
	039 Move X8, [X8+2624]
	040 Move X20, 0x2230000
	041 Move X19, 0x2230000
	042 Move X1, [X8]
	043 Move X20, [X20+2640]
	044 Move X19, [X19+2632]
	045 Add X8, X31, 0
	046 Call Dictionary`2<NetworkId, Object>.GetEnumerator, X0
	047 Move X1, [X20]
	048 Add X0, X31, 0
	049 Call Enumerator<NetworkId, Object>.MoveNext, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {68}
	054 Move X8, [X31+24]
	055 Compare X8, 0
	056 JumpIfEqual {77}
	057 Move X9, [X8+184]
	058 Compare X9, 0
	059 JumpIfEqual {47}
	060 Move X0, X8
	061 Move X1, X31
	062 Call NetworkObjectMeta.get_Timeline, X0
	063 Compare X0, 0
	064 JumpIfEqual {78}
	065 Move V0, V8
	066 Move X1, X31
	067 Call Timeline.UpdateInterpolationParams, X0, V0
	068 Move X1, [X19]
	069 Add X0, X31, 0
	070 Call Enumerator<NetworkId, Object>.Dispose, X0
	071 Move X20, [X31+64]
	072 Move X19, [X31+72]
	073 Move X30, [X31+56]
	074 Move V8, [X31+48]
	075 Add X31, X31, 80
	076 Return 
	077 Call 0x1C17F20
	078 Call 0x1C17F20
	079 Call 0x1C17F20
	080 Move X19, X0
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X0, X19
	083 Call 0x3EB2AD0
	084 Move X20, [X0]
	085 Call 0x3EB2AE0
	086 Move X8, 0x2230000
	087 Move X8, [X8+2632]
	088 Add X0, X31, 0
	089 Move X1, [X8]
	090 Call Enumerator<NetworkId, Object>.Dispose, X0
	091 Compare X20, 0
	092 JumpIfEqual {71}
	093 Move X0, X20
	094 Call 0x1C17F18
	095 Move X20, X31
	096 Move X19, X0
	097 Move X8, 0x2230000
	098 Move X8, [X8+2632]
	099 Move X1, [X8]
	100 Add X0, X31, 0
	101 Call Enumerator<NetworkId, Object>.Dispose, X0
	102 Compare X20, 0
	103 JumpIfNotEqual {106}
	104 Move X0, X19
	105 Call 0x1D2D690
	106 Move X0, X20
	107 Call 0x1C17F18
	108 Call 0x1991590

Method: System.Void UpdateObjectTimelines()

Disassembly:
	0x01ECE77C LDR X24, [X24 + 0xC68]
	0x01ECE780 MOV X23, X31
	0x01ECE784 LDR W9, [X20]
	0x01ECE788 LDR W10, [X22]
	0x01ECE78C CMP W9, W10
	0x01ECE790 B.EQ 0x1ECE7F4
	0x01ECE794 MOVZ W1, 0x1
	0x01ECE798 MOVZ W2, 0x1
	0x01ECE79C MOV X0, X19
	0x01ECE7A0 MOV X3, X31
	0x01ECE7A4 BL 0x1EF9A4C
	0x01ECE7A8 MOVZ W2, 0x8
	0x01ECE7AC MOV X0, X19
	0x01ECE7B0 MOV W1, W23
	0x01ECE7B4 MOV X3, X31
	0x01ECE7B8 BL 0x1EFA33C
	0x01ECE7BC LDR X0, [X24]
	0x01ECE7C0 LDRSW X25, [X20]
	0x01ECE7C4 LDRSW X26, [X22]
	0x01ECE7C8 LDR W8, [X0 + 0xE0]
	0x01ECE7CC CBNZ W8, 0x1ECE7D4
	0x01ECE7D0 BL 0x1C16DFC
	0x01ECE7D4 SUB X8, X25, X26
	0x01ECE7D8 SBFM X9, X8, 0x3F, 0x3F
	0x01ECE7DC EOR X1, X9, X8, 0x1
	0x01ECE7E0 MOVZ W2, 0x8
	0x01ECE7E4 MOV X0, X19
	0x01ECE7E8 MOV X3, X31
	0x01ECE7EC BL 0x1EFA198
	0x01ECE7F0 LDR W8, [X21 + 0x10]
	0x01ECE7F4 ADD X23, X23, 0x1
	0x01ECE7F8 ADD W9, W8, 0x4
	0x01ECE7FC ADD X20, X20, 0x4
	0x01ECE800 CMP X23, W9, SXTW
	0x01ECE804 ADD X22, X22, 0x4
	0x01ECE808 B.LT 0x1ECE784
	0x01ECE80C MOV X0, X19
	0x01ECE810 LDP X20, X19, [X31 + 0x40]
	0x01ECE814 LDP X22, X21, [X31 + 0x30]
	0x01ECE818 LDP X24, X23, [X31 + 0x20]
	0x01ECE81C LDP X26, X25, [X31 + 0x10]
	0x01ECE820 MOVZ W2, 0x1
	0x01ECE824 MOV X1, X31
	0x01ECE828 MOV X3, X31
	0x01ECE82C LDR X30, [X31], #0x50
	0x01ECE830 B 0x1EF9A4C
	0x01ECE834 MOVZ W1, 0x8
	0x01ECE838 MOV X0, X19
	0x01ECE83C MOV X2, X31
	0x01ECE840 BL 0x1EFA5C0
	0x01ECE844 CBZ X20, 0x1ECE918
	0x01ECE848 BIC W8, W0, W0, 0x1F
	0x01ECE84C STR W8, [X20]
	0x01ECE850 B 0x1ECE900
	0x01ECE854 UBFM W8, W8, 0x1E, 0x1D
	0x01ECE858 ADD W2, W8, 0x10
	0x01ECE85C MOV X0, X20
	0x01ECE860 MOV X1, X22
	0x01ECE864 MOV X3, X31
	0x01ECE868 BL 0x1E35764
	0x01ECE86C MOVZ W1, 0x1
	0x01ECE870 MOV X0, X19
	0x01ECE874 MOV X2, X31
	0x01ECE878 BL 0x1EF9B00
	0x01ECE87C CMP X0, 0x1
	0x01ECE880 B.NE 0x1ECE900
	0x01ECE884 ADRP X23, 0x222C000
	0x01ECE888 LDR X23, [X23 + 0xC68]
	0x01ECE88C MOVZ W1, 0x8
	0x01ECE890 MOV X0, X19
	0x01ECE894 MOV X2, X31
	0x01ECE898 BL 0x1EFA5C0
	0x01ECE89C LDR W24, [X20, W0, SXTW]
	0x01ECE8A0 MOV W21, W0
	0x01ECE8A4 MOVZ W1, 0x8
	0x01ECE8A8 MOV X0, X19
	0x01ECE8AC MOV X2, X31
	0x01ECE8B0 BL 0x1EFA4E0
	0x01ECE8B4 LDR X8, [X23]
	0x01ECE8B8 MOV X22, X0
	0x01ECE8BC LDR W9, [X8 + 0xE0]
	0x01ECE8C0 CBNZ W9, 0x1ECE8CC
	0x01ECE8C4 MOV X0, X8
	0x01ECE8C8 BL 0x1C16DFC
	0x01ECE8CC AND W10, W22, 0x1
	0x01ECE8D0 UBFM X9, X22, 0x1, 0x3F
	0x01ECE8D4 SUB W10, W31, W10
	0x01ECE8D8 EOR W9, W9, W10, 0x0
	0x01ECE8DC SXTW X8, W21
	0x01ECE8E0 ADD W9, W24, W9

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0x250C000
	006 Move W8, [X20+1239]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {29}
	012 Move X0, 0x2231000
	013 Move X0, [X0+2624]
	014 Call 0x1C17CF4
	015 Move X0, 0x2231000
	016 Move X0, [X0+2632]
	017 Call 0x1C17CF4
	018 Move X0, 0x2231000
	019 Move X0, [X0+2640]
	020 Call 0x1C17CF4
	021 Move X0, 0x2231000
	022 Move X0, [X0+2648]
	023 Call 0x1C17CF4
	024 Move X0, 0x2231000
	025 Move X0, [X0+2656]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+1239], W8
	029 NotImplemented "Instruction MOVI not yet implemented."
	030 Move [X31+32], X31
	031 Move [X31], V0
	032 Move [X31+8], V0
	033 Move X0, [X19+336]
	034 Compare X0, 0
	035 JumpIfEqual {70}
	036 Move X8, 0x2231000
	037 Move X8, [X8+2624]
	038 Move X20, 0x2231000
	039 Move X19, 0x2231000
	040 Move X1, [X8]
	041 Move X20, [X20+2640]
	042 Move X19, [X19+2632]
	043 Add X8, X31, 0
	044 Call Dictionary`2<NetworkId, Object>.GetEnumerator, X0
	045 Move X1, [X20]
	046 Add X0, X31, 0
	047 Call Enumerator<NetworkId, Object>.MoveNext, X0
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {61}
	052 Move X8, [X31+24]
	053 Compare X8, 0
	054 JumpIfEqual {69}
	055 Move X9, [X8+184]
	056 Compare X9, 0
	057 JumpIfEqual {45}
	058 Move X0, X8
	059 Move X1, X31
	060 Call NetworkObjectMeta.AddLatestSnapshotToTimeline, X0
	061 Move X1, [X19]
	062 Add X0, X31, 0
	063 Call Enumerator<NetworkId, Object>.Dispose, X0
	064 Move X20, [X31+64]
	065 Move X19, [X31+72]
	066 Move X30, [X31+48]
	067 Add X31, X31, 80
	068 Return 
	069 Call 0x1C17F20
	070 Call 0x1C17F20
	071 Move X19, X0
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X0, X19
	074 Call 0x3EB2AD0
	075 Move X20, [X0]
	076 Call 0x3EB2AE0
	077 Move X8, 0x2231000
	078 Move X8, [X8+2632]
	079 Add X0, X31, 0
	080 Move X1, [X8]
	081 Call Enumerator<NetworkId, Object>.Dispose, X0
	082 Compare X20, 0
	083 JumpIfEqual {64}
	084 Move X0, X20
	085 Call 0x1C17F18
	086 Move X20, X31
	087 Move X19, X0
	088 Move X8, 0x2231000
	089 Move X8, [X8+2632]
	090 Move X1, [X8]
	091 Add X0, X31, 0
	092 Call Enumerator<NetworkId, Object>.Dispose, X0
	093 Compare X20, 0
	094 JumpIfNotEqual {97}
	095 Move X0, X19
	096 Call 0x1D2D690
	097 Move X0, X20
	098 Call 0x1C17F18
	099 Call 0x1991590

Method: System.Void UpdateInterpolation()

Disassembly:
	0x01ECDD94 LDRB W8, [X8 + 0x14]
	0x01ECDD98 TBNZ X8, 0x0, 0x1ECDDAC
	0x01ECDD9C MOV X0, X19
	0x01ECDDA0 LDP X20, X19, [X31 + 0x10]
	0x01ECDDA4 LDR X30, [X31], #0x20
	0x01ECDDA8 B 0x1ED2B78
	0x01ECDDAC ADRP X8, 0x2232000
	0x01ECDDB0 LDR X8, [X8 + 0xE20]
	0x01ECDDB4 MOV X1, X31
	0x01ECDDB8 LDR X20, [X8]
	0x01ECDDBC MOV X0, X20
	0x01ECDDC0 BL 0x32277A8
	0x01ECDDC4 TBNZ X0, 0x0, 0x1ECDDF4
	0x01ECDDC8 MOV X0, X20
	0x01ECDDCC MOV X1, X31
	0x01ECDDD0 MOV X2, X31
	0x01ECDDD4 BL 0x3C42C88
	0x01ECDDD8 MOV X0, X19
	0x01ECDDDC BL 0x1ED2A5C
	0x01ECDDE0 LDP X20, X19, [X31 + 0x10]
	0x01ECDDE4 MOV X0, X31
	0x01ECDDE8 LDR X30, [X31], #0x20
	0x01ECDDEC B 0x3C42D48
	0x01ECDDF0 BL 0x1C16F20
	0x01ECDDF4 ADRP X0, 0x222E000
	0x01ECDDF8 LDR X0, [X0 + 0x578]
	0x01ECDDFC BL 0x1C16D08
	0x01ECDE00 BL 0x1C16F10
	0x01ECDE04 MOV X19, X0
	0x01ECDE08 ADRP X0, 0x222E000
	0x01ECDE0C LDR X0, [X0 + 0x580]
	0x01ECDE10 BL 0x1C16D08
	0x01ECDE14 MOV X20, X0
	0x01ECDE18 ADRP X0, 0x222E000
	0x01ECDE1C LDR X0, [X0 + 0x588]
	0x01ECDE20 BL 0x1C16D08
	0x01ECDE24 MOV X2, X0
	0x01ECDE28 MOV X0, X19
	0x01ECDE2C MOV X1, X20
	0x01ECDE30 MOV X3, X31
	0x01ECDE34 BL 0x330E16C
	0x01ECDE38 ADRP X0, 0x222E000
	0x01ECDE3C LDR X0, [X0 + 0x590]
	0x01ECDE40 BL 0x1C16D08
	0x01ECDE44 MOV X1, X0
	0x01ECDE48 MOV X0, X19
	0x01ECDE4C BL 0x1C16DEC
	0x01ECDE50 STP X30, X23, [X31 - 0x30]!
	0x01ECDE54 STP X22, X21, [X31 + 0x10]
	0x01ECDE58 STP X20, X19, [X31 + 0x20]
	0x01ECDE5C ADRP X23, 0x250C000
	0x01ECDE60 ADRP X22, 0x2229000
	0x01ECDE64 LDRB W8, [X23 + 0x4D4]
	0x01ECDE68 LDR X22, [X22 + 0xE40]
	0x01ECDE6C MOV X21, X2
	0x01ECDE70 MOV X20, X1
	0x01ECDE74 MOV X19, X0
	0x01ECDE78 TBNZ X8, 0x0, 0x1ECDE9C
	0x01ECDE7C ADRP X0, 0x2231000
	0x01ECDE80 LDR X0, [X0 + 0xA90]
	0x01ECDE84 BL 0x1C16CF4
	0x01ECDE88 ADRP X0, 0x2229000
	0x01ECDE8C LDR X0, [X0 + 0xE40]
	0x01ECDE90 BL 0x1C16CF4
	0x01ECDE94 MOVZ W8, 0x1
	0x01ECDE98 STRB W8, [X23 + 0x4D4]
	0x01ECDE9C LDR X8, [X19]
	0x01ECDEA0 MOV X0, X19
	0x01ECDEA4 LDR X9, [X8 + 0x268]
	0x01ECDEA8 LDR X1, [X8 + 0x270]
	0x01ECDEAC BLR X9
	0x01ECDEB0 LDR X8, [X22]
	0x01ECDEB4 MOV X22, X0
	0x01ECDEB8 LDR W9, [X8 + 0xE0]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x250D000
	006 Move W8, [X20+1240]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2232000
	013 Move X0, [X0+1984]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1240], W8
	017 Move X0, X19
	018 Move X1, X31
	019 Call Simulation.get_HasRuntimeConfig, X0
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {83}
	024 Move X0, [X19+440]
	025 Compare X0, 0
	026 JumpIfEqual {88}
	027 Move X1, X31
	028 Call Timeline.get_IsEmpty, X0
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {83}
	033 Move X20, [X19+104]
	034 Compare X20, 0
	035 JumpIfEqual {88}
	036 Move X10, 0x2232000
	037 Move X8, [X20]
	038 Move X10, [X10+1984]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Move X1, [X10]
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move W2, 9
	050 Move X0, X20
	051 Call 0x1C5D788
	052 Move W9, [X10]
	053 Add W9, W9, 9
	054 Add X8, X8, W9
	055 Add X0, X8, 312
	056 Move X8, [X0]
	057 Move X1, [X0+8]
	058 Move X0, X20
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X0, [X19+440]
	061 Compare X0, 0
	062 JumpIfEqual {88}
	063 Move V0, V2
	064 Move X1, X31
	065 Move V8, V2
	066 Call Timeline.UpdateInterpolationParams, X0, V0
	067 Move X0, X19
	068 Move V0, V8
	069 Call Client.UpdateObjectInterpolationParams, X0, V0
	070 Move V0, [X19+112]
	071 Move V1, [X19+120]
	072 Move X8, [X19+440]
	073 Move [X19+128], D0
	074 Move [X19+136], S1
	075 Compare X8, 0
	076 JumpIfEqual {88}
	077 Move W9, [X8+32]
	078 Move [X19+116], W9
	079 Move W9, [X8+36]
	080 Move [X19+112], W9
	081 Move V0, [X8+40]
	082 Move [X19+120], S0
	083 Move X20, [X31+16]
	084 Move X19, [X31+24]
	085 Move X30, [X31+8]
	086 Move V8, [X31+32]
	087 Return 
	088 Call 0x1C17F20

Method: System.String NullableToString(System.Nullable`1<T> value)

Disassembly:
	0x022B90A8 MRS X8, 0xC000
	0x022B90AC STR X8, [X31]
	0x022B90B0 LDR X8, [X8 + 0x28]
	0x022B90B4 MOV W22, W6
	0x022B90B8 MOV W19, W5
	0x022B90BC MOV W20, W4
	0x022B90C0 STR X8, [X31 + 0x58]
	0x022B90C4 LDR X8, [X7 + 0x38]
	0x022B90C8 MOV W27, W3
	0x022B90CC MOV W26, W1
	0x022B90D0 STR X7, [X31 + 0x28]
	0x022B90D4 STR X0, [X31 + 0x18]
	0x022B90D8 CBNZ X8, 0x22B90E4
	0x022B90DC LDR X0, [X31 + 0x28]
	0x022B90E0 BL 0x1C5C6E0
	0x022B90E4 MOVI V0.2D, 0x0
	0x022B90E8 CMP W20, 0x0
	0x022B90EC STP V0, V0, [X31 + 0x30]
	0x022B90F0 STP W20, W19, [X31 + 0x8]
	0x022B90F4 B.LE 0x22B92B8
	0x022B90F8 MOV W8, W20
	0x022B90FC MOV X25, X31
	0x022B9100 MOV W20, W31
	0x022B9104 UBFM W29, W19, 0x2, 0x3
	0x022B9108 MOV W24, W27
	0x022B910C MOV W9, W26
	0x022B9110 MOV W23, W8
	0x022B9114 STR X9, [X31 + 0x10]
	0x022B9118 LDR X8, [X31 + 0x18]
	0x022B911C MOV X26, X31
	0x022B9120 MOV W19, W31
	0x022B9124 LDRB W27, [X25, X8, LSL]
	0x022B9128 LDR X8, [X31 + 0x10]
	0x022B912C CMP X25, X8
	0x022B9130 CSET W8, EQ
	0x022B9134 ORR W20, W8, W20, 0x0
	0x022B9138 EOR W21, W20, 0x1
	0x022B913C LDR X8, [X31 + 0x20]
	0x022B9140 CMP X24, X26
	0x022B9144 LDRB W28, [X8, X26, LSL]
	0x022B9148 CSET W8, EQ
	0x022B914C CMP W29, 0x2
	0x022B9150 ORR W19, W8, W19, 0x0
	0x022B9154 B.EQ 0x22B9200
	0x022B9158 CMP W29, 0x1
	0x022B915C B.EQ 0x22B91A4
	0x022B9160 CBNZ W29, 0x22B9234
	0x022B9164 LDR X8, [X31 + 0x28]
	0x022B9168 LDR X8, [X8 + 0x38]
	0x022B916C LDR X0, [X8 + 0x10]
	0x022B9170 BL 0x2118B64
	0x022B9174 CBZ X0, 0x22B9524
	0x022B9178 LDR X8, [X0]
	0x022B917C MOV W1, W27
	0x022B9180 MOV W2, W28
	0x022B9184 LDP X9, X3, [X8 + 0x1B8]
	0x022B9188 BLR X9
	0x022B918C EOR W8, W20, W19, 0x0
	0x022B9190 TBNZ X8, 0x0, 0x22B9264
	0x022B9194 AND W8, W20, W19, 0x0
	0x022B9198 EOR W8, W8, 0x1
	0x022B919C AND W8, W0, W8, 0x0
	0x022B91A0 B 0x22B9284
	0x022B91A4 LDR X8, [X31 + 0x28]
	0x022B91A8 LDR X8, [X8 + 0x38]
	0x022B91AC LDR X0, [X8 + 0x30]
	0x022B91B0 BL 0x2912B90
	0x022B91B4 CBZ X0, 0x22B9524
	0x022B91B8 LDR X8, [X0]
	0x022B91BC MOV W1, W28
	0x022B91C0 MOV W2, W27
	0x022B91C4 LDP X9, X3, [X8 + 0x198]
	0x022B91C8 BLR X9
	0x022B91CC EOR W8, W20, W19, 0x0
	0x022B91D0 TBNZ X8, 0x0, 0x22B9264
	0x022B91D4 CMP W0, 0x0
	0x022B91D8 UBFM W8, W0, 0x1F, 0x1F
	0x022B91DC CSET W10, GT
	0x022B91E0 ANDS W31, W25, 0x1
	0x022B91E4 CSEL W8, W8, W10, EQ
	0x022B91E8 AND W9, W20, W19, 0x0
	0x022B91EC CMP W8, 0x0
	0x022B91F0 CSET W8, EQ
	0x022B91F4 EOR W9, W9, 0x1
	0x022B91F8 AND W8, W8, W9, 0x0
	0x022B91FC B 0x22B9284
	0x022B9200 LDR X8, [X31 + 0x28]
	0x022B9204 LDR X8, [X8 + 0x38]
	0x022B9208 LDR X0, [X8 + 0x10]
	0x022B920C BL 0x2118B64
	0x022B9210 CBZ X0, 0x22B9524
	0x022B9214 LDR X8, [X0]
	0x022B9218 MOV W1, W27
	0x022B921C MOV W2, W28
	0x022B9220 LDP X9, X3, [X8 + 0x1B8]

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Add X29, X31, 0
	012 Subtract X31, X31, 16
	013 NotImplemented "Instruction MRS not yet implemented."
	014 Move X8, [X25+40]
	015 Move X19, X1
	016 Move X20, X0
	017 Move [X29-8], X8
	018 Move X26, [X1+56]
	019 Compare X26, 0
	020 JumpIfNotEqual {30}
	021 Move X0, 0x1E3B000
	022 Move X0, [X0+2096]
	023 Call 0x1C17CF4
	024 Move X26, [X19+56]
	025 Compare X26, 0
	026 JumpIfNotEqual {30}
	027 Move X0, X19
	028 Call 0x1C5D6E0
	029 Move X26, [X19+56]
	030 Move X0, [X26+32]
	031 Move W22, [X0+252]
	032 Move W9, [X0+309]
	033 Move W8, W22
	034 Move TEMP, X9
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {41}
	038 Call 0x1C5D684
	039 Move W8, [X0+252]
	040 Move X26, [X19+56]
	041 Add W8, W8, 16
	042 Add X8, X8, 15
	043 Add X9, X31, 0
	044 And X8, X8, 0x1FFFFFFFF
	045 Subtract X21, X9, X8
	046 Add X31, X21, 0
	047 Add X9, X22, 15
	048 Add X8, X31, 0
	049 And X9, X9, 0x1FFFFFFFF
	050 Subtract X24, X8, X9
	051 Add X31, X24, 0
	052 Add X8, X31, 0
	053 Subtract X23, X8, X9
	054 Add X31, X23, 0
	055 Move X0, X23
	056 Move W1, W31
	057 Move X2, X22
	058 Call 0x3EB2B10
	059 Move X1, [X26+8]
	060 Move X0, X20
	061 Move X8, [X1]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {96}
	067 Move X8, [X19+56]
	068 Subtract X3, X29, 16
	069 Move X2, X20
	070 Move X4, X24
	071 Move X1, [X8+24]
	072 Move X0, [X1]
	073 Move [X29-16], X24
	074 Move X8, [X1+16]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X0, X23
	077 Move X1, X24
	078 Move X2, X22
	079 Call 0x3EB2AC0
	080 Move X8, [X19+56]
	081 Move X0, [X8+32]
	082 Move W9, [X0+309]
	083 Move TEMP, X9
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {89}
	087 Call 0x1C5D684
	088 Move X8, [X19+56]
	089 Move X1, [X8+40]
	090 Subtract X5, X29, 16
	091 Move X2, X21
	092 Move X3, X23
	093 Move X4, X31
	094 Call 0x1C18728
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 Move X8, 0x1E3B000
	097 Move X8, [X8+2096]
	098 Move X0, [X8]
	099 Move X8, [X25+40]
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Add X31, X29, 0
	103 Move X20, [X31+64]
	104 Move X19, [X31+72]
	105 Move X22, [X31+48]
	106 Move X21, [X31+56]
	107 Move X24, [X31+32]
	108 Move X23, [X31+40]
	109 Move X26, [X31+16]
	110 Move X25, [X31+24]
	111 Move X29, [X31+80]
	112 Move X30, [X31+88]
	113 Return X0
	114 Call 0x3EB2B20

Method: System.Void WriteInput()

Disassembly:
	0x01ECE92C LDR X30, [X31], #0x10
	0x01ECE930 RET
	0x01ECE934 BL 0x1C16F20
	0x01ECE938 STR X30, [X31 - 0x10]!
	0x01ECE93C LDR X8, [X0 + 0x10]
	0x01ECE940 CBZ X8, 0x1ECE950
	0x01ECE944 LDR X0, [X8 + 0x18]
	0x01ECE948 LDR X30, [X31], #0x10
	0x01ECE94C RET
	0x01ECE950 BL 0x1C16F20
	0x01ECE954 STP X30, X23, [X31 - 0x30]!
	0x01ECE958 STP X22, X21, [X31 + 0x10]
	0x01ECE95C STP X20, X19, [X31 + 0x20]
	0x01ECE960 ADRP X22, 0x250B000
	0x01ECE964 ADRP X21, 0x2231000
	0x01ECE968 LDRB W8, [X22 + 0x4DA]
	0x01ECE96C LDR X21, [X21 + 0xE80]
	0x01ECE970 MOV W19, W1
	0x01ECE974 MOV X20, X0
	0x01ECE978 TBNZ X8, 0x0, 0x1ECE99C
	0x01ECE97C ADRP X0, 0x2231000
	0x01ECE980 LDR X0, [X0 + 0xE88]
	0x01ECE984 BL 0x1C16CF4
	0x01ECE988 ADRP X0, 0x2231000
	0x01ECE98C LDR X0, [X0 + 0xE80]
	0x01ECE990 BL 0x1C16CF4
	0x01ECE994 MOVZ W8, 0x1
	0x01ECE998 STRB W8, [X22 + 0x4DA]
	0x01ECE99C MOV X0, X20
	0x01ECE9A0 MOV X1, X31
	0x01ECE9A4 BL 0x33BDD8C
	0x01ECE9A8 LDR X0, [X21]
	0x01ECE9AC BL 0x1C16F10
	0x01ECE9B0 MOV X1, X31
	0x01ECE9B4 MOV X21, X0
	0x01ECE9B8 BL 0x1EBDCD8
	0x01ECE9BC CMP W19, 0x1
	0x01ECE9C0 STR X21, [X20 + 0x10]
	0x01ECE9C4 B.LT 0x1ECEA08
	0x01ECE9C8 ADRP X23, 0x2231000
	0x01ECE9CC LDR X23, [X23 + 0xE88]
	0x01ECE9D0 LDR X0, [X23]
	0x01ECE9D4 BL 0x1C16F10
	0x01ECE9D8 MOV X1, X31
	0x01ECE9DC MOV X22, X0
	0x01ECE9E0 BL 0x33BDD8C
	0x01ECE9E4 CBZ X21, 0x1ECEA18
	0x01ECE9E8 MOV X0, X21
	0x01ECE9EC MOV X1, X22
	0x01ECE9F0 MOV X2, X31
	0x01ECE9F4 BL 0x1EBDAE0
	0x01ECE9F8 SUBS W19, W19, 0x1
	0x01ECE9FC B.EQ 0x1ECEA08
	0x01ECEA00 LDR X21, [X20 + 0x10]
	0x01ECEA04 B 0x1ECE9D0
	0x01ECEA08 LDP X20, X19, [X31 + 0x20]
	0x01ECEA0C LDP X22, X21, [X31 + 0x10]
	0x01ECEA10 LDP X30, X23, [X31], #0x30
	0x01ECEA14 RET
	0x01ECEA18 BL 0x1C16F20
	0x01ECEA1C MOV X1, X31
	0x01ECEA20 B 0x33BDD8C
	0x01ECEA24 STR D8, [X31 - 0x30]!
	0x01ECEA28 STP X30, X21, [X31 + 0x10]
	0x01ECEA2C STP X20, X19, [X31 + 0x20]
	0x01ECEA30 MOV X20, X0
	0x01ECEA34 LDR X0, [X0 + 0x10]
	0x01ECEA38 CBZ X0, 0x1ECEA84
	0x01ECEA3C MOV X21, X1
	0x01ECEA40 MOV X1, X31
	0x01ECEA44 MOV V8.16B, V0.16B
	0x01ECEA48 BL 0x1EBDBC8
	0x01ECEA4C CBZ X0, 0x1ECEA84
	0x01ECEA50 STR W21, [X0 + 0x20]
	0x01ECEA54 STR D8, [X0 + 0x28]
	0x01ECEA58 MOV X19, X0
	0x01ECEA5C LDR X0, [X20 + 0x10]
	0x01ECEA60 CBZ X0, 0x1ECEA84
	0x01ECEA64 MOV X1, X19
	0x01ECEA68 MOV X2, X31
	0x01ECEA6C BL 0x1EBDAE0
	0x01ECEA70 MOV X0, X19
	0x01ECEA74 LDP X20, X19, [X31 + 0x20]
	0x01ECEA78 LDP X30, X21, [X31 + 0x10]
	0x01ECEA7C LDR V8, [X31], #0x30
	0x01ECEA80 RET
	0x01ECEA84 BL 0x1C16F20
	0x01ECEA88 STR X30, [X31 - 0x20]!
	0x01ECEA8C STP X20, X19, [X31 + 0x10]
	0x01ECEA90 CBZ X1, 0x1ECEAF0
	0x01ECEA94 MOV X19, X0
	0x01ECEA98 LDR X0, [X1 + 0xB8]
	0x01ECEA9C MOV X20, X1
	0x01ECEAA0 CBZ X0, 0x1ECEAF0
	0x01ECEAA4 LDR V0, [X0 + 0x10]
	0x01ECEAA8 MOV X1, X31
	0x00000000 INVALID
	0x01ECEAB0 STR S0, [X19]
	0x01ECEAB4 BL 0x1E92208
	0x00000000 INVALID
	0x01ECEABC STR S0, [X19 + 0x4]
	0x01ECEAC0 LDR X0, [X20 + 0x90]
	0x01ECEAC4 CBZ X0, 0x1ECEAF0
	0x01ECEAC8 LDR V0, [X0 + 0x10]
	0x01ECEACC MOV X1, X31
	0x00000000 INVALID
	0x01ECEAD4 STR S0, [X19 + 0x8]
	0x01ECEAD8 BL 0x1E92208
	0x00000000 INVALID
	0x01ECEAE0 STR S0, [X19 + 0xC]
	0x01ECEAE4 LDP X20, X19, [X31 + 0x10]
	0x01ECEAE8 LDR X30, [X31], #0x20
	0x01ECEAEC RET
	0x01ECEAF0 BL 0x1C16F20
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x01ECEB04 STP S0, S1, [X0]
	0x01ECEB08 STP S2, S3, [X0 + 0x8]
	0x01ECEB0C RET
	0x01ECEB10 STR D8, [X31 - 0x30]!
	0x01ECEB14 STR X30, [X31 + 0x8]
	0x01ECEB18 STP X22, X21, [X31 + 0x10]
	0x01ECEB1C STP X20, X19, [X31 + 0x20]
	0x01ECEB20 ADRP X21, 0x250A000
	0x01ECEB24 LDRB W8, [X21 + 0xE8F]
	0x01ECEB28 LDR V8, [X0]
	0x01ECEB2C MOV X20, X0
	0x01ECEB30 MOV X19, X1
	0x01ECEB34 CBNZ W8, 0x1ECEB4C
	0x01ECEB38 ADRP X0, 0x222C000
	0x01ECEB3C LDR X0, [X0 + 0xC68]
	0x01ECEB40 BL 0x1C16CF4
	0x01ECEB44 MOVZ W8, 0x1
	0x01ECEB48 STRB W8, [X21 + 0xE8F]
	0x01ECEB4C ADRP X22, 0x222C000
	0x01ECEB50 LDR X22, [X22 + 0xC68]
	0x01ECEB54 LDR X0, [X22]
	0x01ECEB58 LDR W8, [X0 + 0xE0]
	0x01ECEB5C CBNZ W8, 0x1ECEB64
	0x01ECEB60 BL 0x1C16DFC
	0x01ECEB64 FMOV W8, S8
	0x01ECEB68 MOVZ W9, 0x43800000
	0x01ECEB6C UBFM W8, W8, 0x1F, 0x1F
	0x01ECEB70 FMOV S0, 0.5
	0x01ECEB74 FMOV S1, W9
	0x01ECEB78 UCVTF S2, W8
	0x01ECEB7C MOVZ W9, 0x7F800000
	0x01ECEB80 FMUL S1, S8, S1
	0x01ECEB84 FSUB S0, S0, S2
	0x01ECEB88 FMOV S2, W9
	0x01ECEB8C FADD S0, S1, S0
	0x01ECEB90 FCVTZS W8, S0
	0x01ECEB94 FCMP S0, S2
	0x01ECEB98 MOVZ W9, 0x80000000
	0x01ECEB9C CSEL W8, W9, W8, EQ
	0x01ECEBA0 SBFM W9, W8, 0x1F, 0x1F
	0x01ECEBA4 EOR W1, W9, W8, 0x1
	0x01ECEBA8 MOVZ W2, 0x6
	0x01ECEBAC MOV X0, X19
	0x01ECEBB0 MOV X3, X31
	0x01ECEBB4 BL 0x1EFA33C
	0x01ECEBB8 LDRB W8, [X21 + 0xE8F]
	0x01ECEBBC LDR V8, [X20 + 0x4]
	0x01ECEBC0 CBNZ W8, 0x1ECEBD8
	0x01ECEBC4 ADRP X0, 0x222C000
	0x01ECEBC8 LDR X0, [X0 + 0xC68]
	0x01ECEBCC BL 0x1C16CF4
	0x01ECEBD0 MOVZ W8, 0x1
	0x01ECEBD4 STRB W8, [X21 + 0xE8F]
	0x01ECEBD8 LDR X0, [X22]
	0x01ECEBDC LDR W8, [X0 + 0xE0]
	0x01ECEBE0 CBNZ W8, 0x1ECEBE8
	0x01ECEBE4 BL 0x1C16DFC
	0x01ECEBE8 FMOV W8, S8
	0x01ECEBEC MOVZ W9, 0x43800000
	0x01ECEBF0 UBFM W8, W8, 0x1F, 0x1F
	0x01ECEBF4 FMOV S0, 0.5
	0x01ECEBF8 FMOV S1, W9
	0x01ECEBFC UCVTF S2, W8
	0x01ECEC00 MOVZ W9, 0x7F800000
	0x01ECEC04 FMUL S1, S8, S1
	0x01ECEC08 FSUB S0, S0, S2
	0x01ECEC0C FMOV S2, W9
	0x01ECEC10 FADD S0, S1, S0
	0x01ECEC14 FCVTZS W8, S0
	0x01ECEC18 FCMP S0, S2
	0x01ECEC1C MOVZ W9, 0x80000000
	0x01ECEC20 CSEL W8, W9, W8, EQ
	0x01ECEC24 SBFM W9, W8, 0x1F, 0x1F
	0x01ECEC28 EOR W1, W9, W8, 0x1
	0x01ECEC2C MOVZ W2, 0x6
	0x01ECEC30 MOV X0, X19
	0x01ECEC34 MOV X3, X31
	0x01ECEC38 BL 0x1EFA33C
	0x01ECEC3C LDRB W8, [X21 + 0xE8F]
	0x01ECEC40 LDR V8, [X20 + 0x8]
	0x01ECEC44 CBNZ W8, 0x1ECEC5C
	0x01ECEC48 ADRP X0, 0x222C000
	0x01ECEC4C LDR X0, [X0 + 0xC68]
	0x01ECEC50 BL 0x1C16CF4
	0x01ECEC54 MOVZ W8, 0x1
	0x01ECEC58 STRB W8, [X21 + 0xE8F]
	0x01ECEC5C LDR X0, [X22]
	0x01ECEC60 LDR W8, [X0 + 0xE0]
	0x01ECEC64 CBNZ W8, 0x1ECEC6C
	0x01ECEC68 BL 0x1C16DFC
	0x01ECEC6C FMOV W8, S8
	0x01ECEC70 MOVZ W9, 0x43800000
	0x01ECEC74 UBFM W8, W8, 0x1F, 0x1F
	0x01ECEC78 FMOV S0, 0.5
	0x01ECEC7C FMOV S1, W9
	0x01ECEC80 UCVTF S2, W8
	0x01ECEC84 MOVZ W9, 0x7F800000
	0x01ECEC88 FMUL S1, S8, S1
	0x01ECEC8C FSUB S0, S0, S2
	0x01ECEC90 FMOV S2, W9
	0x01ECEC94 FADD S0, S1, S0
	0x01ECEC98 FCVTZS W8, S0
	0x01ECEC9C FCMP S0, S2
	0x01ECECA0 MOVZ W9, 0x80000000
	0x01ECECA4 CSEL W8, W9, W8, EQ
	0x01ECECA8 SBFM W9, W8, 0x1F, 0x1F
	0x01ECECAC EOR W1, W9, W8, 0x1
	0x01ECECB0 MOVZ W2, 0x6
	0x01ECECB4 MOV X0, X19
	0x01ECECB8 MOV X3, X31
	0x01ECECBC BL 0x1EFA33C
	0x01ECECC0 LDRB W8, [X21 + 0xE8F]
	0x01ECECC4 LDR V8, [X20 + 0xC]
	0x01ECECC8 CBNZ W8, 0x1ECECE0
	0x01ECECCC ADRP X0, 0x222C000
	0x01ECECD0 LDR X0, [X0 + 0xC68]
	0x01ECECD4 BL 0x1C16CF4
	0x01ECECD8 MOVZ W8, 0x1
	0x01ECECDC STRB W8, [X21 + 0xE8F]
	0x01ECECE0 LDR X0, [X22]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+16], D8
	003 Move [X31+32], X29
	004 Move [X31+40], X30
	005 Move [X31+48], X28
	006 Move [X31+56], X27
	007 Move [X31+64], X26
	008 Move [X31+72], X25
	009 Move [X31+80], X24
	010 Move [X31+88], X23
	011 Move [X31+96], X22
	012 Move [X31+104], X21
	013 Move [X31+112], X20
	014 Move [X31+120], X19
	015 Move X20, 0x250C000
	016 Move W8, [X20+1241]
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x2226000
	023 Move X0, [X0+1448]
	024 Call 0x1C17CF4
	025 Move X0, 0x222D000
	026 Move X0, [X0+3176]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+1241], W8
	030 Move X8, [X19+264]
	031 Compare X8, 0
	032 JumpIfEqual {263}
	033 Move X0, [X8+32]
	034 Move X1, X31
	035 Call NetBitBuffer.GetOffset, X0
	036 Move [X31+24], W0
	037 Move X8, [X19+424]
	038 Compare X8, 0
	039 JumpIfEqual {263}
	040 Move X21, 0x2226000
	041 Move V8, [X8+72]
	042 Move X21, [X21+1448]
	043 Move X0, X19
	044 Move X1, X31
	045 Call Simulation.get_TickDeltaDouble, X0
	046 Move X20, 0x250B000
	047 Move W8, [X20+2750]
	048 NotImplemented "Instruction FDIV not yet implemented."
	049 Compare W8, 0
	050 JumpIfNotEqual {56}
	051 Move X0, 0x2226000
	052 Move X0, [X0+1448]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X20+2750], W8
	056 Move X0, [X21]
	057 Move X20, 0x222D000
	058 NotImplemented "Instruction INVALID not yet implemented."
	059 Move W8, [X0+224]
	060 Move X20, [X20+3176]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, [X20]
	065 Move W8, 0x7F800000
	066 NotImplemented "Instruction FRINTP not yet implemented."
	067 Move S1, W8
	068 Move W9, [X0+224]
	069 NotImplemented "Instruction FCVTPS not yet implemented."
	070 NotImplemented "Instruction FCMP not yet implemented."
	071 Move W8, 0x80000000
	072 NotImplemented "Instruction CSEL not yet implemented."
	073 Compare W9, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move W1, 3
	077 Move W2, 6
	078 Move W0, W20
	079 Move X3, X31
	080 Call Maths.Clamp, X0, X1, X2
	081 Move X8, [X19+88]
	082 Compare X8, 0
	083 JumpIfEqual {263}
	084 Move W8, [X8+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction CSINC not yet implemented."
	087 Move X0, X19
	088 Call Client.GetSortedInputs, X0
	089 Move X20, X0
	090 Move X0, [X21]
	091 Move X22, X1
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Subtract W1, W22, W23
	097 Move W0, W31
	098 Move X2, X31
	099 Call Math.Max, X0, X1
	100 Move W23, W0
	101 Subtract W0, W22, W0
	102 Move X1, X31
	103 Call EngineProfiler.InputQueue, X0
	104 Move X8, [X19+264]
	105 Compare X8, 0
	106 JumpIfEqual {263}
	107 Move X0, [X8+32]
	108 Move X1, X31
	109 Call NetBitBufferSerializer.Writer, X0
	110 Move X8, [X19+88]
	111 Compare X8, 0
	112 JumpIfEqual {263}
	113 Move W8, [X8+24]
	114 Move X21, X1
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X0, X21
	117 Move X1, X31
	118 Call NetBitBuffer.PadToByteBoundary, X0
	119 Move X8, [X19+88]
	120 Compare X8, 0
	121 JumpIfEqual {263}
	122 Move W8, [X8+16]
	123 Move W2, 8
	124 Move X0, X21
	125 Move X3, X31
	126 Add W8, W8, 4
	127 And W1, W8, 255
	128 Call NetBitBuffer.Write, X0, X1, X2
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Compare X20, 0
	131 JumpIfEqual {263}
	132 Move W8, [X20+24]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Add X8, X20, W23
	135 Add X24, X8, 32
	136 Move X8, [X24]
	137 Compare X8, 0
	138 JumpIfEqual {263}
	139 Move X9, [X19+88]
	140 Compare X9, 0
	141 JumpIfEqual {263}
	142 Move W9, [X9+16]
	143 Move X1, [X8+32]
	144 Move W25, [X21+80]
	145 Move X0, X21
	146 Move W8, W9
	147 ShiftRight W8, 30
	148 And W8, W8, 0x1FFFFFFF
	149 Add W2, W8, 16
	150 Move X3, X31
	151 Call NetBitBuffer.WriteBytesAligned, X0, X1, X2
	152 Move W8, [X21+80]
	153 Move W9, [X21+84]
	154 Add W8, W8, 8
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move W8, [X21+88]
	157 Move X0, X21
	158 Move X2, X31
	159 Move [X21+80], W25
	160 Move W1, W8
	161 ShiftRight W1, 31
	162 And W1, W1, 0x3FFFFFFF
	163 Call NetBitBuffer.ReplaceDataFromBlockWithTemp, X0, X1
	164 Move W8, [X20+24]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move X8, [X19+264]
	167 Compare X8, 0
	168 JumpIfEqual {263}
	169 Move W9, [X8+25]
	170 Add W23, W23, 1
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Add W9, W9, 1
	173 Move [X8+25], W9
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Compare X20, 0
	176 JumpIfEqual {263}
	177 Move X23, W23
	178 Move X8, W22
	179 Move X24, X0
	180 Add X26, X19, 144
	181 Move [X31+8], X8
	182 Move X27, X23
	183 Move W8, [X20+24]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Add X9, X20, 32
	186 Subtract W28, W27, 1
	187 Add X29, X9, X27
	188 Add X25, X9, W28
	189 Move W22, [X21+80]
	190 Move X0, [X29]
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move X8, X26
	193 Compare X0, 0
	194 JumpIfNotEqual {199}
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move X8, X25
	197 Compare X0, 0
	198 JumpIfEqual {263}
	199 Move X2, [X19+88]
	200 Move X1, [X8]
	201 Move X3, X24
	202 Move X4, X21
	203 Call SimulationInput.Serialize, X0, X1, X2, X3
	204 Move W8, [X21+80]
	205 Move W9, [X21+84]
	206 Add W8, W8, 8
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Move W8, [X21+88]
	209 Move X0, X21
	210 Move X2, X31
	211 Move [X21+80], W22
	212 Move W1, W8
	213 ShiftRight W1, 31
	214 And W1, W1, 0x3FFFFFFF
	215 Call NetBitBuffer.ReplaceDataFromBlockWithTemp, X0, X1
	216 Move W8, [X20+24]
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move X8, [X19+264]
	219 Compare X8, 0
	220 JumpIfEqual {263}
	221 Move W9, [X8+25]
	222 Move X10, [X31+8]
	223 Add X27, X27, 1
	224 Add W9, W9, 1
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move [X8+25], W9
	227 Move X8, [X19+264]
	228 Compare X8, 0
	229 JumpIfEqual {263}
	230 Move X1, [X8+32]
	231 Add X0, X31, 24
	232 Move X2, X31
	233 Call Offset.GetLength, X0, X1
	234 Move X8, 0x222D000
	235 Move X8, [X8+3176]
	236 Move W19, W0
	237 Move X8, [X8]
	238 Move W9, [X8+224]
	239 Compare W9, 0
	240 JumpIfNotEqual {243}
	241 Move X0, X8
	242 Call 0x1C17DFC
	243 Move W0, W19
	244 Move X1, X31
	245 Call Maths.BytesRequiredForBits, X0
	246 Move X1, X31
	247 Call EngineProfiler.InputSize, X0
	248 Move X20, [X31+112]
	249 Move X19, [X31+120]
	250 Move X22, [X31+96]
	251 Move X21, [X31+104]
	252 Move X24, [X31+80]
	253 Move X23, [X31+88]
	254 Move X26, [X31+64]
	255 Move X25, [X31+72]
	256 Move X28, [X31+48]
	257 Move X27, [X31+56]
	258 Move X29, [X31+32]
	259 Move X30, [X31+40]
	260 Move V8, [X31+16]
	261 Add X31, X31, 128
	262 Return 
	263 Call 0x1C17F20
	264 Call 0x1C17F28

