Type: Fusion.ReflectionUtils/<GetAllWeavedAssemblies>d__2

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01E8F288 LDP X2, X1, [X0]
	0x01E8F28C MOV X0, X19
	0x01E8F290 LDP X20, X19, [X31 + 0x10]
	0x01E8F294 LDR X30, [X31], #0x20
	0x01E8F298 BR X2
	0x01E8F29C LDR X0, [X0 + 0x18]
	0x01E8F2A0 RET
	0x01E8F2A4 STP X30, X19, [X31 - 0x10]!
	0x01E8F2A8 ADRP X0, 0x2264000
	0x01E8F2AC LDR X0, [X0 + 0xB40]
	0x01E8F2B0 BL 0x1C16D08
	0x01E8F2B4 BL 0x1C16F10
	0x01E8F2B8 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+32], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01E8FCF0 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01E8FCF4 ADRP X20, 0x254A000
	0x01E8FCF8 LDRB W8, [X20 + 0x267]
	0x01E8FCFC MOV X19, X0
	0x01E8FD00 TBNZ X8, 0x0, 0x1E8FD18
	0x01E8FD04 ADRP X0, 0x226F000
	0x01E8FD08 LDR X0, [X0 + 0xA8]
	0x01E8FD0C BL 0x1C16CF4
	0x01E8FD10 MOVZ W8, 0x1
	0x01E8FD14 STRB W8, [X20 + 0x267]
	0x01E8FD18 LDR W8, [X19 + 0x10]
	0x01E8FD1C ADDS W31, W8, 0x2
	0x01E8FD20 B.NE 0x1E8FD40
	0x01E8FD24 LDR W20, [X19 + 0x20]
	0x01E8FD28 MOV X0, X31
	0x01E8FD2C BL 0x33C151C
	0x01E8FD30 CMP W20, W0
	0x01E8FD34 B.NE 0x1E8FD40
	0x01E8FD38 STR W31, [X19 + 0x10]
	0x01E8FD3C B 0x1E8FD6C
	0x01E8FD40 ADRP X8, 0x226F000
	0x01E8FD44 LDR X8, [X8 + 0xA8]
	0x01E8FD48 LDR X0, [X8]
	0x01E8FD4C BL 0x1C16F10
	0x01E8FD50 MOV X1, X31
	0x01E8FD54 MOV X19, X0
	0x01E8FD58 BL 0x33BDD8C
	0x01E8FD5C MOV X0, X31
	0x01E8FD60 STR W31, [X19 + 0x10]
	0x01E8FD64 BL 0x33C151C
	0x01E8FD68 STR W0, [X19 + 0x20]
	0x01E8FD6C MOV X0, X19
	0x01E8FD70 LDP X20, X19, [X31 + 0x10]
	0x01E8FD74 LDR X30, [X31], #0x20
	0x01E8FD78 RET
	0x01E8FD7C B 0x1E8FCEC
	0x01E8FD80 MOV X0, X31
	0x01E8FD84 RET
	0x01E8FD88 LDR W8, [X0]
	0x01E8FD8C CMP W8, 0x0
	0x01E8FD90 CSET W0, NE
	0x01E8FD94 RET
	0x01E8FD98 LDR W8, [X0]
	0x01E8FD9C ORN W8, W31, W8, 0x0
	0x01E8FDA0 UBFM W0, W8, 0x1F, 0x1F
	0x01E8FDA4 RET
	0x01E8FDA8 STR X30, [X31 - 0x20]!
	0x01E8FDAC STP X20, X19, [X31 + 0x10]
	0x01E8FDB0 LDR W8, [X0]
	0x01E8FDB4 TBNZ X8, 0x1F, 0x1E8FDC8
	0x01E8FDB8 LDP X20, X19, [X31 + 0x10]
	0x01E8FDBC SUB W0, W8, 0x1
	0x01E8FDC0 LDR X30, [X31], #0x20
	0x01E8FDC4 RET
	0x01E8FDC8 STR W8, [X31 + 0xC]
	0x01E8FDCC ADRP X0, 0x226C000
	0x01E8FDD0 LDR X0, [X0 + 0x720]
	0x01E8FDD4 BL 0x1C16D08
	0x01E8FDD8 ADD X1, X31, 0xC
	0x01E8FDDC BL 0x1C16E04

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x254B000
	005 Move W8, [X20+605]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2270000
	012 Move X0, [X0+192]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+605], W8
	016 Move W8, [X19+16]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Compare W8, 0
	019 JumpIfNotEqual {37}
	020 Move TEMP, 0
	021 Not TEMP
	022 Move W8, TEMP
	023 Move X0, X31
	024 Move [X19+16], W8
	025 Call AppDomain.get_CurrentDomain
	026 Compare X0, 0
	027 JumpIfEqual {65}
	028 Move X1, X31
	029 Call AppDomain.GetAssemblies, X0
	030 Move W8, W31
	031 Move [X19+40], X0
	032 Move [X19+48], W31
	033 Move TEMP, 0
	034 Not TEMP
	035 Move W8, TEMP
	036 Move [X19+16], W8
	037 Move W0, W31
	038 Move X9, 0x2270000
	039 Move X9, [X9+192]
	040 Add X8, X0, W8
	041 Move X20, [X8+32]
	042 Move X1, [X9]
	043 Move X0, X20
	044 Call 0x21A985C, X0
	045 Compare X0, 0
	046 JumpIfNotEqual {57}
	047 Move W8, [X19+48]
	048 Move X0, [X19+40]
	049 Add W8, W8, 1
	050 Move [X19+48], W8
	051 Compare X0, 0
	052 JumpIfEqual {65}
	053 Move W9, [X0+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move W0, W31
	056 Move [X19+40], X31
	057 Move W0, 1
	058 Move [X19+24], X20
	059 Move [X19+16], W0
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 Return X0
	064 Call 0x1C17F28
	065 Call 0x1C17F20

Method: System.Reflection.Assembly System.Collections.Generic.IEnumerator<System.Reflection.Assembly>.get_Current()

Disassembly:
	0x01E8FDE0 MOV X19, X0
	0x01E8FDE4 ADRP X0, 0x226F000

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01E8FDE8 LDR X0, [X0 + 0x100]
	0x01E8FDEC BL 0x1C16D08
	0x01E8FDF0 MOV X1, X19
	0x01E8FDF4 MOV X2, X31
	0x01E8FDF8 BL 0x321EFD0
	0x01E8FDFC MOV X19, X0
	0x01E8FE00 ADRP X0, 0x2264000
	0x01E8FE04 LDR X0, [X0 + 0x5B0]
	0x01E8FE08 BL 0x1C16D08
	0x01E8FE0C BL 0x1C16F10
	0x01E8FE10 MOV X1, X19
	0x01E8FE14 MOV X2, X31
	0x01E8FE18 MOV X20, X0
	0x01E8FE1C BL 0x337DF1C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x2265000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2270000
	011 Move X0, [X0+200]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01E8FE20 ADRP X0, 0x226F000
	0x01E8FE24 LDR X0, [X0 + 0x108]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Collections.Generic.IEnumerator`1<System.Reflection.Assembly> System.Collections.Generic.IEnumerable<System.Reflection.Assembly>.GetEnumerator()

Disassembly:
	0x01E8FE28 BL 0x1C16D08
	0x01E8FE2C MOV X1, X0
	0x01E8FE30 MOV X0, X20
	0x01E8FE34 BL 0x1C16DEC
	0x01E8FE38 STR X30, [X31 - 0x20]!
	0x01E8FE3C STP X20, X19, [X31 + 0x10]
	0x01E8FE40 LDR W8, [X0]
	0x01E8FE44 TBZ X8, 0x1F, 0x1E8FE58
	0x01E8FE48 LDP X20, X19, [X31 + 0x10]
	0x01E8FE4C AND W0, W8, 0x7FFFFFFF
	0x01E8FE50 LDR X30, [X31], #0x20
	0x01E8FE54 RET
	0x01E8FE58 STR W8, [X31 + 0xC]
	0x01E8FE5C ADRP X0, 0x226C000
	0x01E8FE60 LDR X0, [X0 + 0x720]
	0x01E8FE64 BL 0x1C16D08
	0x01E8FE68 ADD X1, X31, 0xC
	0x01E8FE6C BL 0x1C16E04
	0x01E8FE70 MOV X19, X0
	0x01E8FE74 ADRP X0, 0x226F000
	0x01E8FE78 LDR X0, [X0 + 0x110]
	0x01E8FE7C BL 0x1C16D08
	0x01E8FE80 MOV X1, X19
	0x01E8FE84 MOV X2, X31
	0x01E8FE88 BL 0x321EFD0
	0x01E8FE8C MOV X19, X0
	0x01E8FE90 ADRP X0, 0x2264000
	0x01E8FE94 LDR X0, [X0 + 0x5B0]
	0x01E8FE98 BL 0x1C16D08
	0x01E8FE9C BL 0x1C16F10
	0x01E8FEA0 MOV X1, X19
	0x01E8FEA4 MOV X2, X31
	0x01E8FEA8 MOV X20, X0
	0x01E8FEAC BL 0x337DF1C
	0x01E8FEB0 ADRP X0, 0x226F000
	0x01E8FEB4 LDR X0, [X0 + 0x118]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x254B000
	005 Move W8, [X20+606]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2270000
	012 Move X0, [X0+128]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+606], W8
	016 Move W8, [X19+16]
	017 Add W31, W8, 2
	018 Move W20, [X19+32]
	019 Move X0, X31
	020 Call Environment.get_CurrentManagedThreadId
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X19+16], W31
	023 Move X8, 0x2270000
	024 Move X8, [X8+128]
	025 Move X0, [X8]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X19, X0
	029 Call Object..ctor, X0
	030 Move X0, X31
	031 Move [X19+16], W31
	032 Call Environment.get_CurrentManagedThreadId
	033 Move [X19+32], W0
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x01E8FEB8 BL 0x1C16D08

ISIL:
	001 Call <GetAllWeavedAssemblies>d__2.System.Collections.Generic.IEnumerable<System.Reflection.Assembly>.GetEnumerator, X0
	002 Return X0

