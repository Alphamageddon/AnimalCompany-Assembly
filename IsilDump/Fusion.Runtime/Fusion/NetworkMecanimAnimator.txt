Type: Fusion.NetworkMecanimAnimator

Method: System.Nullable`1<System.Int32> get_DynamicWordCount()

Disassembly:
	0x01E78E40 MOVZ W8, 0x1
	0x01E78E44 STRB W8, [X27 + 0xE8F]
	0x01E78E48 LDR X0, [X22]
	0x01E78E4C LDR W8, [X0 + 0xE0]
	0x01E78E50 CBNZ W8, 0x1E78E58
	0x01E78E54 BL 0x1C16DFC
	0x01E78E58 FMOV W8, S8
	0x01E78E5C UBFM W8, W8, 0x1F, 0x1F
	0x01E78E60 FMOV S0, W29
	0x01E78E64 UCVTF S2, W8
	0x01E78E68 FMUL S0, S8, S0
	0x01E78E6C FSUB S2, S9, S2
	0x01E78E70 FMOV S1, W28
	0x01E78E74 FADD S0, S0, S2
	0x01E78E78 FCVTZS W8, S0
	0x01E78E7C FCMP S0, S1
	0x01E78E80 CSEL W8, W26, W8, EQ
	0x01E78E84 SBFM W9, W8, 0x1F, 0x1F
	0x01E78E88 EOR W8, W9, W8, 0x1
	0x01E78E8C STR W8, [X23]
	0x01E78E90 LDR W8, [X20 + 0xC8]
	0x01E78E94 ADD W21, W21, 0x1
	0x01E78E98 CMP W21, W8
	0x01E78E9C B.LT 0x1E78CFC
	0x01E78EA0 LDP X20, X19, [X31 + 0xC0]
	0x01E78EA4 LDP X22, X21, [X31 + 0xB0]
	0x01E78EA8 LDP X24, X23, [X31 + 0xA0]
	0x01E78EAC LDP X26, X25, [X31 + 0x90]
	0x01E78EB0 LDP X28, X27, [X31 + 0x80]
	0x01E78EB4 LDP X29, X30, [X31 + 0x70]
	0x01E78EB8 LDP D9, D8, [X31 + 0x60]
	0x01E78EBC ADD X31, X31, 0xD0
	0x01E78EC0 RET
	0x01E78EC4 BL 0x1C16F20
	0x01E78EC8 STP D9, D8, [X31 - 0x70]!
	0x01E78ECC STP X29, X30, [X31 + 0x10]
	0x01E78ED0 STP X28, X27, [X31 + 0x20]
	0x01E78ED4 STP X26, X25, [X31 + 0x30]
	0x01E78ED8 STP X24, X23, [X31 + 0x40]
	0x01E78EDC STP X22, X21, [X31 + 0x50]
	0x01E78EE0 STP X20, X19, [X31 + 0x60]
	0x01E78EE4 ADRP X21, 0x2561000
	0x01E78EE8 LDRB W8, [X21 + 0x198]
	0x01E78EEC MOV X19, X1
	0x01E78EF0 MOV X20, X0
	0x01E78EF4 TBNZ X8, 0x0, 0x1E78F0C
	0x01E78EF8 ADRP X0, 0x2285000
	0x01E78EFC LDR X0, [X0 + 0x860]
	0x01E78F00 BL 0x1C16CF4
	0x01E78F04 MOVZ W8, 0x1
	0x01E78F08 STRB W8, [X21 + 0x198]
	0x01E78F0C LDR W24, [X20 + 0xEC]
	0x01E78F10 CMP W24, 0x2
	0x01E78F14 B.LT 0x1E78FE8
	0x01E78F18 ADRP X25, 0x2285000
	0x01E78F1C ADRP X21, 0x2282000
	0x01E78F20 LDR X25, [X25 + 0x860]
	0x01E78F24 LDR W1, [X19]
	0x01E78F28 LDR X21, [X21 + 0xC68]
	0x01E78F2C ADRP X27, 0x2560000
	0x01E78F30 MOVZ W28, 0x44800000
	0x01E78F34 FMOV S9, 0.5
	0x01E78F38 MOVZ W29, 0x7F800000
	0x01E78F3C MOVZ W26, 0x80000000
	0x01E78F40 MOVZ W22, 0x1
	0x01E78F44 LDR X2, [X25]
	0x01E78F48 MOV X0, X20
	0x01E78F4C BL 0x22275A8
	0x01E78F50 LDR X8, [X20 + 0x80]
	0x01E78F54 CBZ X8, 0x1E79008
	0x01E78F58 MOV X23, X0
	0x01E78F5C MOV X0, X8
	0x01E78F60 MOV W1, W22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2562000
	007 Move X21, 0x227C000
	008 Move W8, [X20+398]
	009 Move X21, [X21+2416]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x227C000
	016 Move X0, [X0+2416]
	017 Call 0x1C17CF4
	018 Move X0, 0x227C000
	019 Move X0, [X0+1448]
	020 Call 0x1C17CF4
	021 Move X0, 0x227D000
	022 Move X0, [X0+1136]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+398], W8
	026 Move X0, [X21]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X31
	032 Call Application.get_isPlaying
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {68}
	037 Move X21, 0x227C000
	038 Move X22, 0x227D000
	039 Move W20, [X19+136]
	040 Move X21, [X21+1448]
	041 Move X22, [X22+1136]
	042 Move X0, X19
	043 Call NetworkMecanimAnimator.GetRuntimeCounts, X0
	044 Move X8, [X21]
	045 Move W21, W0
	046 Move W9, [X8+224]
	047 Compare W9, 0
	048 JumpIfNotEqual {51}
	049 Move X0, X8
	050 Call 0x1C17DFC
	051 Move W0, W20
	052 Move W1, W21
	053 Move X2, X31
	054 Call Math.Max, X0, X1
	055 Move [X19+136], W0
	056 Move X2, [X22]
	057 Move W1, W0
	058 Add X0, X31, 8
	059 Move [X31+8], X31
	060 Call Nullable`1<Int32>..ctor, X0, X1
	061 Move X0, [X31+8]
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Return X0
	068 Move X0, 0x227C000
	069 Move X0, [X0+1456]
	070 Call 0x1C17D08
	071 Call 0x1C17F10
	072 Move X19, X0
	073 Move X0, 0x2286000
	074 Move X0, [X0+2112]
	075 Call 0x1C17D08
	076 Move X1, X0
	077 Move X0, X19
	078 Move X2, X31
	079 Call InvalidOperationException..ctor, X0, X1
	080 Move X0, 0x2286000
	081 Move X0, [X0+2120]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X19
	085 Call 0x1C17DEC

Method: System.Int32 GetRuntimeCounts()

Disassembly:
	0x01E78F64 MOV X2, X31
	0x01E78F68 BL 0x3BF65D8
	0x01E78F6C LDRB W8, [X27 + 0xE8F]
	0x01E78F70 MOV V8.16B, V0.16B
	0x01E78F74 CBNZ W8, 0x1E78F88
	0x01E78F78 MOV X0, X21
	0x01E78F7C BL 0x1C16CF4
	0x01E78F80 MOVZ W8, 0x1
	0x01E78F84 STRB W8, [X27 + 0xE8F]
	0x01E78F88 LDR X0, [X21]
	0x01E78F8C LDR W8, [X0 + 0xE0]
	0x01E78F90 CBNZ W8, 0x1E78F98
	0x01E78F94 BL 0x1C16DFC
	0x01E78F98 FMOV W8, S8
	0x01E78F9C UBFM W8, W8, 0x1F, 0x1F
	0x01E78FA0 FMOV S0, W28
	0x01E78FA4 UCVTF S1, W8
	0x01E78FA8 FMUL S0, S8, S0
	0x01E78FAC FSUB S1, S9, S1
	0x01E78FB0 FADD S0, S0, S1
	0x01E78FB4 FMOV S1, W29
	0x01E78FB8 FCVTZS W8, S0
	0x01E78FBC FCMP S0, S1
	0x01E78FC0 CSEL W8, W26, W8, EQ
	0x01E78FC4 SBFM W9, W8, 0x1F, 0x1F
	0x01E78FC8 EOR W8, W9, W8, 0x1
	0x01E78FCC STR W8, [X23]
	0x01E78FD0 LDR W8, [X19]
	0x01E78FD4 ADD W22, W22, 0x1
	0x01E78FD8 CMP W24, W22
	0x01E78FDC ADD W1, W8, 0x1
	0x01E78FE0 STR W1, [X19]
	0x01E78FE4 B.NE 0x1E78F44
	0x01E78FE8 LDP X20, X19, [X31 + 0x60]
	0x01E78FEC LDP X22, X21, [X31 + 0x50]
	0x01E78FF0 LDP X24, X23, [X31 + 0x40]
	0x01E78FF4 LDP X26, X25, [X31 + 0x30]
	0x01E78FF8 LDP X28, X27, [X31 + 0x20]
	0x01E78FFC LDP X29, X30, [X31 + 0x10]
	0x01E79000 LDP D9, D8, [X31], #0x70
	0x01E79004 RET
	0x01E79008 BL 0x1C16F20
	0x01E7900C SUB X31, X31, 0x80
	0x01E79010 STP X29, X30, [X31 + 0x20]
	0x01E79014 STP X28, X27, [X31 + 0x30]
	0x01E79018 STP X26, X25, [X31 + 0x40]
	0x01E7901C STP X24, X23, [X31 + 0x50]
	0x01E79020 STP X22, X21, [X31 + 0x60]
	0x01E79024 STP X20, X19, [X31 + 0x70]
	0x01E79028 ADRP X19, 0x2560000
	0x01E7902C LDRB W8, [X19 + 0x197]
	0x01E79030 MOV X24, X3
	0x01E79034 MOV X20, X0
	0x01E79038 STP X1, X2, [X31 + 0x10]
	0x01E7903C TBNZ X8, 0x0, 0x1E79060
	0x01E79040 ADRP X0, 0x2284000
	0x01E79044 LDR X0, [X0 + 0x878]
	0x01E79048 BL 0x1C16CF4
	0x01E7904C ADRP X0, 0x2284000
	0x01E79050 LDR X0, [X0 + 0x880]
	0x01E79054 BL 0x1C16CF4
	0x01E79058 MOVZ W8, 0x1
	0x01E7905C STRB W8, [X19 + 0x197]
	0x01E79060 LDR W26, [X20 + 0xE8]
	0x01E79064 CMP W26, 0x1
	0x01E79068 B.LT 0x1E79378
	0x01E7906C LDR X27, [X20 + 0xE0]
	0x01E79070 CBZ X27, 0x1E793A8
	0x01E79074 LDR W28, [X20 + 0x90]
	0x01E79078 LDR X21, [X20 + 0xD8]
	0x01E7907C MOV W29, W31
	0x01E79080 MOV W25, W31
	0x01E79084 MOV W8, W31
	0x01E79088 MOVZ W22, 0x1
	0x01E7908C STP X24, X31, [X31]
	0x01E79090 LDR W9, [X27 + 0x18]
	0x01E79094 CMP W8, W9
	0x01E79098 B.CS 0x1E793AC
	0x01E7909C CBZ X21, 0x1E793A8
	0x01E790A0 LDR W9, [X21 + 0x18]
	0x01E790A4 SXTW X19, W8
	0x01E790A8 CMP W19, W9
	0x01E790AC B.CS 0x1E793AC
	0x01E790B0 ADD X8, X21, X19, 0x3, LSL
	0x01E790B4 LDR X0, [X8 + 0x20]
	0x01E790B8 CBZ X0, 0x1E793A8
	0x01E790BC ADD X8, X27, X19, 0x2, LSL
	0x01E790C0 LDR W23, [X8 + 0x20]
	0x01E790C4 MOV X1, X31
	0x01E790C8 BL 0x3BF6930
	0x01E790CC SUB W8, W0, 0x1
	0x01E790D0 CMP W8, 0x8
	0x01E790D4 B.HI 0x1E79344
	0x01E790D8 ADRP X11, 0xFFFFFFFFFECB4000
	0x01E790DC ADD X11, X11, 0xB55
	0x01E790E0 ADR X9, 0x10
	0x01E790E4 LDRB W10, [X11, X8, LSL]
	0x01E790E8 ADD X9, X9, X10, 0x2, LSL
	0x01E790EC BR X9
	0x01E790F0 TBZ X28, 0x1, 0x1E79344
	0x01E790F4 LDR X0, [X20 + 0x80]
	0x01E790F8 CBZ X0, 0x1E793A8
	0x01E790FC MOV W1, W23
	0x01E79100 MOV X2, X31
	0x01E79104 BL 0x3BF64D0
	0x01E79108 TBNZ X0, 0x0, 0x1E79344
	0x01E7910C LDR W1, [X24]
	0x01E79110 ADD X0, X31, 0x10
	0x01E79114 ADD W8, W1, 0x1
	0x01E79118 STR W8, [X24]
	0x01E7911C ADRP X8, 0x2284000
	0x01E79120 LDR X8, [X8 + 0x878]
	0x01E79124 LDR X2, [X8]
	0x01E79128 BL 0x22277C0
	0x01E7912C ADRP X8, 0x255F000
	0x01E79130 LDRB W8, [X8 + 0xE90]
	0x01E79134 MOV X24, X0
	0x01E79138 CBNZ W8, 0x1E79154
	0x01E7913C ADRP X0, 0x2281000
	0x01E79140 LDR X0, [X0 + 0xC68]
	0x01E79144 BL 0x1C16CF4
	0x01E79148 MOVZ W8, 0x1
	0x01E7914C ADRP X9, 0x255F000
	0x01E79150 STRB W8, [X9 + 0xE90]
	0x01E79154 ADRP X8, 0x2281000
	0x01E79158 LDR X8, [X8 + 0xC68]
	0x01E7915C LDR X0, [X8]
	0x01E79160 LDR W8, [X0 + 0xE0]
	0x01E79164 CBNZ W8, 0x1E7916C
	0x01E79168 BL 0x1C16DFC
	0x01E7916C LDR X0, [X20 + 0x80]
	0x01E79170 CBZ X0, 0x1E793A8
	0x01E79174 AND W8, W24, 0x1
	0x01E79178 SUB W8, W31, W8
	0x01E7917C EOR W8, W8, W24, 0x1
	0x01E79180 SCVTF S0, W8
	0x01E79184 MOVZ W8, 0x3A800000
	0x01E79188 FMOV S1, W8
	0x01E7918C FMUL S0, S0, S1
	0x01E79190 MOV W1, W23
	0x01E79194 MOV X2, X31
	0x01E79198 BL 0x3BF5EE0
	0x01E7919C LDR X24, [X31]
	0x01E791A0 B 0x1E79344
	0x01E791A4 TBZ X28, 0x0, 0x1E79344
	0x01E791A8 LDR W1, [X24]
	0x01E791AC ADD X0, X31, 0x10
	0x01E791B0 ADD W8, W1, 0x1
	0x01E791B4 STR W8, [X24]
	0x01E791B8 ADRP X8, 0x2284000
	0x01E791BC LDR X8, [X8 + 0x880]
	0x01E791C0 LDR X2, [X8]
	0x01E791C4 BL 0x22277CC
	0x01E791C8 LDR X8, [X20 + 0x80]
	0x01E791CC CBZ X8, 0x1E793A8
	0x01E791D0 MOV W2, W0
	0x01E791D4 MOV X0, X8
	0x01E791D8 MOV W1, W23
	0x01E791DC MOV X3, X31
	0x01E791E0 BL 0x3BF6290
	0x01E791E4 B 0x1E79344
	0x01E791E8 TBZ X28, 0x2, 0x1E79344
	0x01E791EC TBZ X22, 0x0, 0x1E79224
	0x01E791F0 LDR X8, [X20 + 0xD0]
	0x01E791F4 CBZ X8, 0x1E793A8
	0x01E791F8 LDR W9, [X8 + 0x18]
	0x01E791FC CBZ W9, 0x1E793AC
	0x01E79200 LDR W8, [X8 + 0x20]
	0x01E79204 LDR W1, [X20 + 0xC4]
	0x01E79208 ADD X0, X31, 0x10

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x2562000
	011 Move X20, 0x227C000
	012 Move W8, [X21+399]
	013 Move X20, [X20+1432]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x227D000
	020 Move X0, [X0+3672]
	021 Call 0x1C17CF4
	022 Move X0, 0x227C000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+399], W8
	027 Move X0, [X20]
	028 Move X20, [X19+128]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X20
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Equality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {42}
	041 Move W0, W31
	042 Move X0, [X19+128]
	043 Move W21, [X19+144]
	044 Move [X19+184], X31
	045 Compare X0, 0
	046 JumpIfEqual {206}
	047 Move X1, X31
	048 Call Animator.get_parameters, X0
	049 Move X8, [X19+128]
	050 Move [X19+216], X0
	051 Compare X8, 0
	052 JumpIfEqual {206}
	053 Move X0, X8
	054 Move X1, X31
	055 Call Animator.get_parameterCount, X0
	056 Move [X19+232], W0
	057 Move X22, 0x227C000
	058 Move X22, [X22+3672]
	059 Move W1, W0
	060 Move X0, [X22]
	061 Call 0x1C17D6C
	062 Move X8, [X19+128]
	063 Move [X19+224], X0
	064 Compare X8, 0
	065 JumpIfEqual {206}
	066 Move X0, X8
	067 Move X1, X31
	068 Call Animator.get_layerCount, X0
	069 Move X8, [X19+216]
	070 Move [X19+236], W0
	071 Compare X8, 0
	072 JumpIfEqual {206}
	073 Move W9, [X8+24]
	074 Subtract W23, W9, 1
	075 Move X24, -20230144
	076 Move W9, W31
	077 Add X24, X24, 2888
	078 Move W10, [X8+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X25, W9
	081 Add X8, X8, X25
	082 Move X20, [X8+32]
	083 Compare X20, 0
	084 JumpIfEqual {206}
	085 Move X26, [X19+224]
	086 Move X0, X20
	087 Move X1, X31
	088 Call AnimatorControllerParameter.get_nameHash, X0
	089 Compare X26, 0
	090 JumpIfEqual {206}
	091 Move W8, [X26+24]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Add X8, X26, X25
	094 Move [X8+32], W0
	095 Move X0, X20
	096 Move X1, X31
	097 Call AnimatorControllerParameter.get_type, X0
	098 Subtract W8, W0, 1
	099 NotImplemented "Instruction CMP not yet implemented."
	100 NotImplemented "Instruction ADR not yet implemented."
	101 Move W10, [X24]
	102 Add X9, X9, X10
	103 CallNoReturn X9
	104 Move TEMP, X21
	105 And TEMP, TEMP, 2
	106 Compare TEMP, 2
	107 JumpIfNotEqual {143}
	108 Move X8, [X19+224]
	109 Compare X8, 0
	110 JumpIfEqual {206}
	111 Move W9, [X8+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X0, [X19+128]
	114 Compare X0, 0
	115 JumpIfEqual {206}
	116 Add X8, X8, X25
	117 Move W1, [X8+32]
	118 Move X2, X31
	119 Call Animator.IsParameterControlledByCurve, X0, X1
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {133}
	124 Move TEMP, X21
	125 And TEMP, TEMP, 8
	126 Compare TEMP, 8
	127 JumpIfNotEqual {143}
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move TEMP, X21
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {143}
	133 Move W8, [X19+184]
	134 Add W8, W8, 1
	135 Move [X19+184], W8
	136 Move TEMP, X21
	137 And TEMP, TEMP, 4
	138 Compare TEMP, 4
	139 JumpIfNotEqual {143}
	140 Move W8, [X19+188]
	141 Add W8, W8, 1
	142 Move [X19+188], W8
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X8, [X19+216]
	145 Add W9, W25, 1
	146 Compare X8, 0
	147 JumpIfNotEqual {78}
	148 Move TEMP, X21
	149 And TEMP, TEMP, 32
	150 Compare TEMP, 32
	151 JumpIfEqual {153}
	152 Move W20, 1
	153 Move X0, [X19+128]
	154 Compare X0, 0
	155 JumpIfEqual {206}
	156 Move X1, X31
	157 Call Animator.get_layerCount, X0
	158 Move W20, W0
	159 Move W23, [X19+184]
	160 Move [X19+200], W20
	161 Move TEMP, X21
	162 And TEMP, TEMP, 64
	163 Compare TEMP, 64
	164 JumpIfNotEqual {177}
	165 Move X0, [X19+128]
	166 Compare X0, 0
	167 JumpIfEqual {206}
	168 Move X1, X31
	169 Call Animator.get_layerCount, X0
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move X0, [X19+128]
	172 Compare X0, 0
	173 JumpIfEqual {206}
	174 Move X1, X31
	175 Call Animator.get_layerCount, X0
	176 Subtract W24, W0, 1
	177 Move W24, W31
	178 Move W9, [X19+184]
	179 Move W8, [X19+188]
	180 Move W8, W8
	181 ShiftRight W8, 30
	182 And W8, W8, 0x1FFFFFFF
	183 Add W8, W8, 31
	184 NotImplemented "Instruction SBFM not yet implemented."
	185 Move [X19+192], W1
	186 Move [X19+196], W9
	187 Move X0, [X22]
	188 NotImplemented "Instruction SBFM not yet implemented."
	189 And W20, W8, W20
	190 Call 0x1C17D6C
	191 Move W8, [X19+192]
	192 Add W9, W23, W20
	193 Add W9, W9, W24
	194 Move [X19+208], X0
	195 Add W0, W9, W8
	196 Move X20, [X31+64]
	197 Move X19, [X31+72]
	198 Move X22, [X31+48]
	199 Move X21, [X31+56]
	200 Move X24, [X31+32]
	201 Move X23, [X31+40]
	202 Move X26, [X31+16]
	203 Move X25, [X31+24]
	204 Move X30, [X31+80]
	205 Return X0
	206 Call 0x1C17F20
	207 Call 0x1C17F28

Method: System.Void Awake()

Disassembly:
	0x01E7920C STR W8, [X31 + 0x8]
	0x01E79210 ADRP X8, 0x2284000
	0x01E79214 LDR X8, [X8 + 0x880]
	0x01E79218 LDR X2, [X8]
	0x01E7921C BL 0x22277CC
	0x01E79220 STR W0, [X31 + 0xC]
	0x01E79224 LDR X0, [X20 + 0x80]
	0x01E79228 CBZ X0, 0x1E793A8
	0x01E7922C LDR W9, [X31 + 0xC]
	0x01E79230 UBFM W8, W29, 0x1E, 0x2
	0x01E79234 MOV W1, W23
	0x01E79238 MOV X3, X31
	0x01E7923C LSRV W8, W9, W8
	0x01E79240 AND W2, W8, 0x1
	0x01E79244 BL 0x3BF60B8
	0x01E79248 B 0x1E792CC
	0x01E7924C TBZ X28, 0x3, 0x1E79344
	0x01E79250 TBZ X22, 0x0, 0x1E79288
	0x01E79254 LDR X8, [X20 + 0xD0]
	0x01E79258 CBZ X8, 0x1E793A8
	0x01E7925C LDR W9, [X8 + 0x18]
	0x01E79260 CBZ W9, 0x1E793AC
	0x01E79264 LDR W8, [X8 + 0x20]
	0x01E79268 LDR W1, [X20 + 0xC4]
	0x01E7926C ADD X0, X31, 0x10
	0x01E79270 STR W8, [X31 + 0x8]
	0x01E79274 ADRP X8, 0x2284000
	0x01E79278 LDR X8, [X8 + 0x880]
	0x01E7927C LDR X2, [X8]
	0x01E79280 BL 0x22277CC
	0x01E79284 STR W0, [X31 + 0xC]
	0x01E79288 LDP W10, W11, [X31 + 0x8]
	0x01E7928C UBFM W9, W29, 0x1E, 0x2
	0x01E79290 MOVZ W8, 0xF
	0x01E79294 LSLV W8, W8, W9
	0x01E79298 AND W10, W10, W8, 0x0
	0x01E7929C AND W11, W11, W8, 0x0
	0x01E792A0 ASRV W8, W10, W9
	0x01E792A4 ASRV W9, W11, W9
	0x01E792A8 CMP W8, W9
	0x01E792AC B.EQ 0x1E792CC
	0x01E792B0 TBNZ X9, 0x0, 0x1E792B8
	0x01E792B4 TBNZ X8, 0x0, 0x1E792CC
	0x01E792B8 LDR X0, [X20 + 0x80]
	0x01E792BC CBZ X0, 0x1E793A8
	0x01E792C0 MOV W1, W23
	0x01E792C4 MOV X2, X31
	0x01E792C8 BL 0x3BF63C0
	0x01E792CC ADD W29, W29, 0x1
	0x01E792D0 CMP W29, 0x8
	0x01E792D4 B.NE 0x1E79340
	0x01E792D8 LDR X8, [X20 + 0xD0]
	0x01E792DC CBZ X8, 0x1E793A8
	0x01E792E0 LDR W9, [X8 + 0x18]
	0x01E792E4 CMP W25, W9
	0x01E792E8 B.CS 0x1E793AC
	0x01E792EC LDR W11, [X31 + 0xC]
	0x01E792F0 ADD X10, X8, W25, 0x2, SXTW
	0x01E792F4 ADD W25, W25, 0x1
	0x01E792F8 STR W11, [X10 + 0x20]
	0x01E792FC LDR W10, [X20 + 0xC0]
	0x01E79300 CMP W25, W10
	0x01E79304 B.GE 0x1E7933C
	0x01E79308 CMP W25, W9
	0x01E7930C B.CS 0x1E793AC
	0x01E79310 ADD X8, X8, W25, 0x2, SXTW
	0x01E79314 LDR W8, [X8 + 0x20]
	0x01E79318 LDR W9, [X20 + 0xC4]
	0x01E7931C ADD X0, X31, 0x10
	0x01E79320 STR W8, [X31 + 0x8]
	0x01E79324 ADRP X8, 0x2284000
	0x01E79328 LDR X8, [X8 + 0x880]
	0x01E7932C ADD W1, W9, W25
	0x01E79330 LDR X2, [X8]
	0x01E79334 BL 0x22277CC
	0x01E79338 STR W0, [X31 + 0xC]
	0x01E7933C MOV W29, W31
	0x01E79340 MOV W22, W31
	0x01E79344 ADD W8, W19, 0x1
	0x01E79348 CMP W26, W8
	0x01E7934C B.NE 0x1E79090
	0x01E79350 CMP W29, 0x1
	0x01E79354 B.LT 0x1E79378
	0x01E79358 LDR X8, [X20 + 0xD0]
	0x01E7935C CBZ X8, 0x1E793A8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2561000
	006 Move X20, 0x227B000
	007 Move W8, [X21+400]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x2285000
	015 Move X0, [X0+2128]
	016 Call 0x1C17CF4
	017 Move X0, 0x2285000
	018 Move X0, [X0+2136]
	019 Call 0x1C17CF4
	020 Move X0, 0x227B000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+400], W8
	025 Move X0, [X20]
	026 Move X20, [X19+128]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {45}
	039 Move X8, 0x2285000
	040 Move X8, [X8+2128]
	041 Move X0, X19
	042 Move X1, [X8]
	043 Call 0x21A4894, X0
	044 Move [X19+128], X0
	045 Move W8, [X19+136]
	046 Add W31, W8, 1
	047 Move X0, X19
	048 Call NetworkMecanimAnimator.GetRuntimeCounts, X0
	049 Move [X19+136], W0
	050 Move X8, [X19+152]
	051 Compare X8, 0
	052 JumpIfEqual {90}
	053 Move X21, 0x2285000
	054 Move X21, [X21+2136]
	055 Move X20, X31
	056 Move W9, [X8+24]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X0, [X19+160]
	060 Compare X0, 0
	061 JumpIfEqual {90}
	062 Add X8, X8, X20
	063 Move W1, [X8+32]
	064 Move X3, [X21]
	065 Move W2, W20
	066 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	067 Move X8, [X19+152]
	068 Add X20, X20, 1
	069 Compare X8, 0
	070 JumpIfNotEqual {56}
	071 Move X8, [X19+168]
	072 Compare X8, 0
	073 JumpIfEqual {90}
	074 Move X20, X31
	075 Move W9, [X8+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X0, [X19+176]
	079 Compare X0, 0
	080 JumpIfEqual {90}
	081 Add X8, X8, X20
	082 Move W1, [X8+32]
	083 Move X3, [X21]
	084 Move W2, W20
	085 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	086 Move X8, [X19+168]
	087 Add X20, X20, 1
	088 Compare X8, 0
	089 JumpIfNotEqual {75}
	090 Call 0x1C17F20
	091 Move X20, [X31+16]
	092 Move X19, [X31+24]
	093 Move X30, [X31+32]
	094 Move X21, [X31+40]
	095 Return 
	096 Call 0x1C17F28

Method: System.Void Spawned()

Disassembly:
	0x01E79360 LDR W9, [X8 + 0x18]
	0x01E79364 CMP W25, W9
	0x01E79368 B.CS 0x1E793AC
	0x01E7936C LDR W9, [X31 + 0xC]
	0x01E79370 ADD X8, X8, W25, 0x2, SXTW
	0x01E79374 STR W9, [X8 + 0x20]
	0x01E79378 LDR W8, [X24]
	0x01E7937C LDR W9, [X20 + 0xC0]
	0x01E79380 LDP X20, X19, [X31 + 0x70]
	0x01E79384 LDP X22, X21, [X31 + 0x60]
	0x01E79388 LDP X26, X25, [X31 + 0x40]
	0x01E7938C ADD W8, W9, W8
	0x01E79390 STR W8, [X24]
	0x01E79394 LDP X24, X23, [X31 + 0x50]
	0x01E79398 LDP X28, X27, [X31 + 0x30]
	0x01E7939C LDP X29, X30, [X31 + 0x20]
	0x01E793A0 ADD X31, X31, 0x80
	0x01E793A4 RET
	0x01E793A8 BL 0x1C16F20
	0x01E793AC BL 0x1C16F28
	0x01E793B0 SUB X31, X31, 0x70
	0x01E793B4 STP X29, X30, [X31 + 0x10]
	0x01E793B8 STP X28, X27, [X31 + 0x20]
	0x01E793BC STP X26, X25, [X31 + 0x30]
	0x01E793C0 STP X24, X23, [X31 + 0x40]
	0x01E793C4 STP X22, X21, [X31 + 0x50]
	0x01E793C8 STP X20, X19, [X31 + 0x60]
	0x01E793CC ADRP X21, 0x2560000
	0x01E793D0 LDRB W8, [X21 + 0x195]
	0x01E793D4 MOV X19, X3
	0x01E793D8 MOV X20, X0
	0x01E793DC STP X1, X2, [X31]
	0x01E793E0 TBNZ X8, 0x0, 0x1E79404
	0x01E793E4 ADRP X0, 0x2284000
	0x01E793E8 LDR X0, [X0 + 0x878]
	0x01E793EC BL 0x1C16CF4
	0x01E793F0 ADRP X0, 0x2284000
	0x01E793F4 LDR X0, [X0 + 0x880]
	0x01E793F8 BL 0x1C16CF4
	0x01E793FC MOVZ W8, 0x1
	0x01E79400 STRB W8, [X21 + 0x195]
	0x01E79404 LDR W8, [X20 + 0xC8]
	0x01E79408 CMP W8, 0x1
	0x01E7940C B.LT 0x1E79504
	0x01E79410 ADRP X26, 0x2284000
	0x01E79414 ADRP X27, 0x2284000
	0x01E79418 ADRP X22, 0x2281000
	0x01E7941C LDR X26, [X26 + 0x880]
	0x01E79420 LDR X27, [X27 + 0x878]
	0x01E79424 LDR X22, [X22 + 0xC68]
	0x01E79428 MOV W21, W31
	0x01E7942C ADRP X28, 0x255F000
	0x01E79430 MOVZ W29, 0x3A800000
	0x01E79434 LDR W1, [X19]
	0x01E79438 ADD X0, X31, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2561000
	006 Move X21, 0x227B000
	007 Move W8, [X20+401]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2285000
	015 Move X0, [X0+2128]
	016 Call 0x1C17CF4
	017 Move X0, 0x227B000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+401], W8
	022 Move X0, [X21]
	023 Move X20, [X19+128]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {42}
	036 Move X8, 0x2285000
	037 Move X8, [X8+2128]
	038 Move X0, X19
	039 Move X1, [X8]
	040 Call 0x21A4894, X0
	041 Move [X19+128], X0
	042 Move X8, [X19+56]
	043 Compare X8, 0
	044 JumpIfEqual {75}
	045 Move X0, [X21]
	046 Move X20, [X19+128]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X20
	052 Move X1, X31
	053 Move X2, X31
	054 Call Object.op_Equality, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {68}
	059 Move X0, X19
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move W1, W31
	063 Move X2, X31
	064 Move X30, [X31+32]
	065 Move X21, [X31+40]
	066 Call Behaviour.set_enabled, X0, X1
	067 Return 
	068 Move X0, X19
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 Call NetworkMecanimAnimator.GetRuntimeCounts, X0
	074 Return 
	075 Call 0x1C17F20

Method: System.Void Fusion.IAfterAllTicks.AfterAllTicks(System.Boolean resimulation, System.Int32 tickCount)

Disassembly:
	0x01E7943C ADD W8, W1, 0x1
	0x01E79440 STR W8, [X19]
	0x01E79444 LDR X2, [X26]
	0x01E79448 BL 0x22277CC
	0x01E7944C LDR W1, [X19]
	0x01E79450 MOV W23, W0
	0x01E79454 ADD X0, X31, 0x0
	0x01E79458 ADD W8, W1, 0x1
	0x01E7945C STR W8, [X19]
	0x01E79460 LDR X2, [X27]
	0x01E79464 BL 0x22277C0
	0x01E79468 CBZ W23, 0x1E79504
	0x01E7946C MOV X24, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+64]
	005 Compare X0, 0
	006 JumpIfEqual {19}
	007 Move X1, X31
	008 Call NetworkObject.get_HasStateAuthority, X0
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {16}
	013 Move X0, X19
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Return 
	019 Call 0x1C17F20

Method: System.Void Render()

Disassembly:
	0x01E794BC CBNZ W8, 0x1E794C4
	0x01E794C0 BL 0x1C16DFC
	0x01E794C4 CBZ X25, 0x1E79524
	0x01E794C8 AND W8, W24, 0x1
	0x01E794CC SUB W8, W31, W8
	0x01E794D0 EOR W8, W8, W24, 0x1
	0x01E794D4 SCVTF S0, W8
	0x01E794D8 FMOV S1, W29
	0x01E794DC FMUL S0, S0, S1
	0x01E794E0 MOV X0, X25
	0x01E794E4 MOV W1, W23
	0x01E794E8 MOV W2, W21
	0x01E794EC MOV X3, X31
	0x01E794F0 BL 0x3BF6808
	0x01E794F4 LDR W8, [X20 + 0xC8]
	0x01E794F8 ADD W21, W21, 0x1
	0x01E794FC CMP W21, W8
	0x01E79500 B.LT 0x1E79434
	0x01E79504 LDP X20, X19, [X31 + 0x60]
	0x01E79508 LDP X22, X21, [X31 + 0x50]
	0x01E7950C LDP X24, X23, [X31 + 0x40]
	0x01E79510 LDP X26, X25, [X31 + 0x30]
	0x01E79514 LDP X28, X27, [X31 + 0x20]
	0x01E79518 LDP X29, X30, [X31 + 0x10]
	0x01E7951C ADD X31, X31, 0x70
	0x01E79520 RET
	0x01E79524 BL 0x1C16F20
	0x01E79528 BL 0x1C16F28
	0x01E7952C SUB X31, X31, 0x70
	0x01E79530 STP X29, X30, [X31 + 0x10]
	0x01E79534 STP X28, X27, [X31 + 0x20]
	0x01E79538 STP X26, X25, [X31 + 0x30]
	0x01E7953C STP X24, X23, [X31 + 0x40]
	0x01E79540 STP X22, X21, [X31 + 0x50]
	0x01E79544 STP X20, X19, [X31 + 0x60]
	0x01E79548 ADRP X21, 0x2560000
	0x01E7954C LDRB W8, [X21 + 0x199]
	0x01E79550 MOV X19, X3
	0x01E79554 MOV X20, X0
	0x01E79558 STP X1, X2, [X31]
	0x01E7955C TBNZ X8, 0x0, 0x1E79574
	0x01E79560 ADRP X0, 0x2284000
	0x01E79564 LDR X0, [X0 + 0x878]
	0x01E79568 BL 0x1C16CF4
	0x01E7956C MOVZ W8, 0x1
	0x01E79570 STRB W8, [X21 + 0x199]
	0x01E79574 LDR W25, [X20 + 0xEC]
	0x01E79578 CMP W25, 0x2
	0x01E7957C B.LT 0x1E79620
	0x01E79580 ADRP X26, 0x2284000
	0x01E79584 ADRP X21, 0x2281000
	0x01E79588 LDR X26, [X26 + 0x878]
	0x01E7958C LDR W1, [X19]
	0x01E79590 LDR X21, [X21 + 0xC68]
	0x01E79594 MOVZ W27, 0x1
	0x01E79598 ADRP X28, 0x255F000
	0x01E7959C MOVZ W29, 0x3A800000
	0x01E795A0 MOVZ W22, 0x1
	0x01E795A4 LDR X2, [X26]
	0x01E795A8 LDR X23, [X20 + 0x80]
	0x01E795AC ADD X0, X31, 0x0
	0x01E795B0 BL 0x22277C0
	0x01E795B4 LDRB W8, [X28 + 0xE90]
	0x01E795B8 MOV X24, X0
	0x01E795BC CBNZ W8, 0x1E795CC
	0x01E795C0 MOV X0, X21
	0x01E795C4 BL 0x1C16CF4
	0x01E795C8 STRB W27, [X28 + 0xE90]
	0x01E795CC LDR X0, [X21]
	0x01E795D0 LDR W8, [X0 + 0xE0]
	0x01E795D4 CBNZ W8, 0x1E795DC

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move [X31+32], X31
	007 Move [X31+40], X31
	008 Move [X31+16], X31
	009 Move [X31+24], X31
	010 Move [X31+12], W31
	011 Move X19, X0
	012 Move X0, [X0+64]
	013 Compare X0, 0
	014 JumpIfEqual {86}
	015 Move X1, X31
	016 Call NetworkObject.get_IsProxy, X0
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {80}
	021 Move W8, [X19+140]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, [X19+56]
	024 Compare X8, 0
	025 JumpIfEqual {86}
	026 Move X8, [X8+80]
	027 Compare X8, 0
	028 JumpIfEqual {49}
	029 Move W9, [X19+248]
	030 Move W8, [X8+72]
	031 NotImplemented "Instruction BIC not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X19
	034 Call NetworkBehaviour.get_StateBuffer, X0
	035 Move X2, X0
	036 Move X3, X1
	037 Move X0, X19
	038 Move X1, X2
	039 Move X2, X3
	040 Call NetworkMecanimAnimator.ApplyAnimatorData, X0, X1
	041 Move X8, [X19+56]
	042 Compare X8, 0
	043 JumpIfEqual {86}
	044 Move X8, [X8+80]
	045 Compare X8, 0
	046 JumpIfEqual {48}
	047 Move W8, [X8+72]
	048 Move [X19+248], W8
	049 Add X1, X31, 32
	050 Add X2, X31, 16
	051 Add X3, X31, 12
	052 Move X0, X19
	053 Add X20, X31, 32
	054 Add X21, X31, 16
	055 Call NetworkBehaviour.TryGetSnapshotsBuffers, X0, X1, X2, X3
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {80}
	060 Move W8, [X19+140]
	061 Add X9, X21, 8
	062 Add X10, X20, 8
	063 NotImplemented "Instruction CMP not yet implemented."
	064 NotImplemented "Instruction CSEL not yet implemented."
	065 Move X2, [X9]
	066 Move W9, [X19+248]
	067 Move X20, X2
	068 ShiftRight X20, 32
	069 And X20, X20, 0x7FFFFFFF
	070 NotImplemented "Instruction BIC not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Add X8, X31, 32
	074 Add X9, X31, 16
	075 NotImplemented "Instruction CSEL not yet implemented."
	076 Move X1, [X8]
	077 Move X0, X19
	078 Call NetworkMecanimAnimator.ApplyAnimatorData, X0, X1
	079 Move [X19+248], W20
	080 Move X20, [X31+64]
	081 Move X19, [X31+72]
	082 Move X30, [X31+48]
	083 Move X21, [X31+56]
	084 Add X31, X31, 80
	085 Return 
	086 Call 0x1C17F20

Method: System.Void SetTrigger(System.Int32 triggerHash, System.Boolean passThroughOnInputAuthority = False)

Disassembly:
	0x01E79644 STR X30, [X31 - 0x40]!
	0x01E79648 STP X24, X23, [X31 + 0x10]
	0x01E7964C STP X22, X21, [X31 + 0x20]
	0x01E79650 STP X20, X19, [X31 + 0x30]
	0x01E79654 ADRP X20, 0x2560000
	0x01E79658 ADRP X24, 0x2284000
	0x01E7965C ADRP X23, 0x2284000
	0x01E79660 ADRP X22, 0x227B000
	0x01E79664 ADRP X21, 0x2281000
	0x01E79668 LDRB W8, [X20 + 0x19A]
	0x01E7966C LDR X24, [X24 + 0x888]
	0x01E79670 LDR X23, [X23 + 0x890]
	0x01E79674 LDR X22, [X22 + 0xE08]
	0x01E79678 LDR X21, [X21 + 0x688]
	0x01E7967C MOV X19, X0
	0x01E79680 TBNZ X8, 0x0, 0x1E796BC
	0x01E79684 ADRP X0, 0x2284000
	0x01E79688 LDR X0, [X0 + 0x890]
	0x01E7968C BL 0x1C16CF4
	0x01E79690 ADRP X0, 0x2284000
	0x01E79694 LDR X0, [X0 + 0x888]
	0x01E79698 BL 0x1C16CF4
	0x01E7969C ADRP X0, 0x2281000
	0x01E796A0 LDR X0, [X0 + 0x688]
	0x01E796A4 BL 0x1C16CF4
	0x01E796A8 ADRP X0, 0x227B000
	0x01E796AC LDR X0, [X0 + 0xE08]
	0x01E796B0 BL 0x1C16CF4
	0x01E796B4 MOVZ W8, 0x1
	0x01E796B8 STRB W8, [X20 + 0x19A]
	0x01E796BC ADRP X8, 0xFFFFFFFFFEC75000
	0x01E796C0 LDR V0, [X8 + 0x1C0]
	0x01E796C4 MOVZ W8, 0x4F
	0x01E796C8 STR W8, [X19 + 0x90]
	0x01E796CC STR D0, [X19 + 0x88]
	0x01E796D0 LDR X0, [X24]
	0x01E796D4 BL 0x1C16F10
	0x01E796D8 LDR X1, [X23]
	0x01E796DC MOV X20, X0
	0x01E796E0 BL 0x2A09A9C
	0x01E796E4 STR X20, [X19 + 0xA0]
	0x01E796E8 LDR X0, [X24]
	0x01E796EC BL 0x1C16F10
	0x01E796F0 LDR X1, [X23]
	0x01E796F4 MOV X20, X0
	0x01E796F8 BL 0x2A09A9C
	0x01E796FC STR X20, [X19 + 0xB0]
	0x01E79700 LDR X0, [X22]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2561000
	007 Move W8, [X22+402]
	008 Move W21, W2
	009 Move W19, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x227D000
	016 Move X0, [X0+2520]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+402], W8
	020 Move X0, [X20+64]
	021 Compare X0, 0
	022 JumpIfEqual {74}
	023 Move X1, X31
	024 Call NetworkObject.get_HasStateAuthority, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {43}
	029 Move X0, [X20+240]
	030 Compare X0, 0
	031 JumpIfEqual {74}
	032 Move X8, 0x227D000
	033 Move X8, [X8+2520]
	034 Move W1, W19
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X2, [X8]
	040 Move X30, [X31+48]
	041 Call HashSet`1<Int32>.Add, X0, X1
	042 Return 
	043 Move TEMP, X21
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {68}
	047 Move X0, [X20+64]
	048 Compare X0, 0
	049 JumpIfEqual {74}
	050 Move X1, X31
	051 Call NetworkObject.get_HasInputAuthority, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {68}
	056 Move X0, [X20+128]
	057 Compare X0, 0
	058 JumpIfEqual {74}
	059 Move W1, W19
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X2, X31
	065 Move X30, [X31+48]
	066 Call Animator.SetTrigger, X0, X1
	067 Return 
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X30, [X31+48]
	073 Return 
	074 Call 0x1C17F20

Method: System.Void SetTrigger(System.String trigger, System.Boolean passThroughOnInputAuthority = False)

Disassembly:
	0x01E79704 BL 0x1C16F10
	0x01E79708 LDR X1, [X21]
	0x01E7970C MOV X20, X0
	0x01E79710 BL 0x2DA9EF4
	0x01E79714 MOVZ W8, 0x1
	0x01E79718 MOVZ W9, 0x10
	0x01E7971C STR X20, [X19 + 0xF0]
	0x01E79720 STRB W8, [X19 + 0x74]
	0x01E79724 STR W9, [X19 + 0x30]
	0x01E79728 MOV X0, X19
	0x01E7972C LDP X20, X19, [X31 + 0x30]
	0x01E79730 LDP X22, X21, [X31 + 0x20]
	0x01E79734 LDP X24, X23, [X31 + 0x10]
	0x01E79738 MOV X1, X31
	0x01E7973C LDR X30, [X31], #0x40
	0x01E79740 B 0x1E82058
	0x01E79744 LDRB W8, [X0 + 0x30]
	0x01E79748 ANDS W31, W8, 0x1C
	0x01E7974C CSET W0, EQ
	0x01E79750 RET
	0x01E79754 LDR W8, [X0 + 0x30]
	0x01E79758 ANDS W31, W8, 0x1C
	0x01E7975C CSET W9, EQ
	0x01E79760 ANDS W31, W8, 0x3
	0x01E79764 CSET W8, NE
	0x01E79768 AND W0, W9, W8, 0x0
	0x01E7976C RET
	0x01E79770 LDR X0, [X0 + 0x38]
	0x01E79774 RET
	0x01E79778 LDR X0, [X0 + 0x40]
	0x01E7977C RET
	0x01E79780 RET
	0x01E79784 RET
	0x01E79788 RET
	0x01E7978C STP X30, X21, [X31 - 0x20]!
	0x01E79790 STP X20, X19, [X31 + 0x10]
	0x01E79794 ADRP X20, 0x2560000
	0x01E79798 ADRP X21, 0x227D000
	0x01E7979C LDRB W8, [X20 + 0x19B]
	0x01E797A0 LDR X21, [X21 + 0xA78]
	0x01E797A4 MOV X19, X0
	0x01E797A8 TBNZ X8, 0x0, 0x1E797C0
	0x01E797AC ADRP X0, 0x227D000
	0x01E797B0 LDR X0, [X0 + 0xA78]
	0x01E797B4 BL 0x1C16CF4
	0x01E797B8 MOVZ W8, 0x1
	0x01E797BC STRB W8, [X20 + 0x19B]
	0x01E797C0 LDR X0, [X21]
	0x01E797C4 LDR W8, [X0 + 0xE0]
	0x01E797C8 CBNZ W8, 0x1E797D0
	0x01E797CC BL 0x1C16DFC
	0x01E797D0 CBZ X19, 0x1E797EC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2561000
	007 Move W8, [X22+403]
	008 Move W21, W2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x227D000
	016 Move X0, [X0+2520]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+403], W8
	020 Move X0, [X20+64]
	021 Compare X0, 0
	022 JumpIfEqual {78}
	023 Move X1, X31
	024 Call NetworkObject.get_HasStateAuthority, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {47}
	029 Move X0, X19
	030 Move X1, X31
	031 Call Animator.StringToHash, X0
	032 Move X8, [X20+240]
	033 Compare X8, 0
	034 JumpIfEqual {78}
	035 Move X9, 0x227D000
	036 Move X9, [X9+2520]
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move W1, W0
	042 Move X2, [X9]
	043 Move X0, X8
	044 Move X30, [X31+48]
	045 Call HashSet`1<Int32>.Add, X0, X1
	046 Return 
	047 Move TEMP, X21
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {72}
	051 Move X0, [X20+64]
	052 Compare X0, 0
	053 JumpIfEqual {78}
	054 Move X1, X31
	055 Call NetworkObject.get_HasInputAuthority, X0
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {72}
	060 Move X0, [X20+128]
	061 Compare X0, 0
	062 JumpIfEqual {78}
	063 Move X1, X19
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X2, X31
	069 Move X30, [X31+48]
	070 Call Animator.SetTrigger, X0, X1
	071 Return 
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Return 
	078 Call 0x1C17F20

Method: System.Void CaptureAnimatorData()

Disassembly:
	0x01E79470 CMP W23, 0x1
	0x01E79474 B.LT 0x1E79498
	0x01E79478 LDR X8, [X20 + 0x98]
	0x01E7947C CBZ X8, 0x1E79524
	0x01E79480 LDR W9, [X8 + 0x18]
	0x01E79484 CMP W23, W9
	0x01E79488 B.GE 0x1E79498
	0x01E7948C B.CS 0x1E79528
	0x01E79490 ADD X8, X8, W23, 0x2, UXTW
	0x01E79494 LDR W23, [X8 + 0x20]
	0x01E79498 LDRB W8, [X28 + 0xE90]
	0x01E7949C LDR X25, [X20 + 0x80]
	0x01E794A0 CBNZ W8, 0x1E794B4
	0x01E794A4 MOV X0, X22
	0x01E794A8 BL 0x1C16CF4
	0x01E794AC MOVZ W8, 0x1
	0x01E794B0 STRB W8, [X28 + 0xE90]
	0x01E794B4 LDR X0, [X22]
	0x01E794B8 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Add X1, X31, 12
	005 Move X19, X0
	006 Move [X31+12], W31
	007 Call NetworkMecanimAnimator.CaptureParameters, X0, X1
	008 Move W8, [X19+144]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 16
	011 Compare TEMP, 16
	012 JumpIfNotEqual {17}
	013 Add X1, X31, 12
	014 Move X0, X19
	015 Call NetworkMecanimAnimator.CaptureStates, X0, X1
	016 Move W8, [X19+144]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 64
	019 Compare TEMP, 64
	020 JumpIfNotEqual {24}
	021 Add X1, X31, 12
	022 Move X0, X19
	023 Call NetworkMecanimAnimator.CaptureLayerWeights, X0, X1
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 Add X31, X31, 32
	027 Return 

Method: System.Void ApplyAnimatorData(Fusion.NetworkBehaviourBuffer buffer)

Disassembly:
	0x01E795D8 BL 0x1C16DFC
	0x01E795DC CBZ X23, 0x1E79640
	0x01E795E0 AND W8, W24, 0x1
	0x01E795E4 SUB W8, W31, W8
	0x01E795E8 EOR W8, W8, W24, 0x1
	0x01E795EC SCVTF S0, W8
	0x01E795F0 FMOV S1, W29
	0x01E795F4 FMUL S0, S0, S1
	0x01E795F8 MOV X0, X23
	0x01E795FC MOV W1, W22
	0x01E79600 MOV X2, X31
	0x01E79604 BL 0x3BF661C
	0x01E79608 LDR W8, [X19]
	0x01E7960C ADD W22, W22, 0x1
	0x01E79610 CMP W25, W22
	0x01E79614 ADD W1, W8, 0x1
	0x01E79618 STR W1, [X19]
	0x01E7961C B.NE 0x1E795A4
	0x01E79620 LDP X20, X19, [X31 + 0x60]
	0x01E79624 LDP X22, X21, [X31 + 0x50]
	0x01E79628 LDP X24, X23, [X31 + 0x40]
	0x01E7962C LDP X26, X25, [X31 + 0x30]
	0x01E79630 LDP X28, X27, [X31 + 0x20]
	0x01E79634 LDP X29, X30, [X31 + 0x10]
	0x01E79638 ADD X31, X31, 0x70
	0x01E7963C RET
	0x01E79640 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Add X3, X31, 12
	007 Move X19, X2
	008 Move X20, X1
	009 Move X21, X0
	010 Move [X31+12], W31
	011 Call NetworkMecanimAnimator.ApplyParameters, X0, X1, X2
	012 Move W8, [X21+144]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 16
	015 Compare TEMP, 16
	016 JumpIfNotEqual {23}
	017 Add X3, X31, 12
	018 Move X0, X21
	019 Move X1, X20
	020 Move X2, X19
	021 Call NetworkMecanimAnimator.ApplyStates, X0, X1, X2
	022 Move W8, [X21+144]
	023 Move TEMP, X8
	024 And TEMP, TEMP, 64
	025 Compare TEMP, 64
	026 JumpIfNotEqual {32}
	027 Add X3, X31, 12
	028 Move X0, X21
	029 Move X1, X20
	030 Move X2, X19
	031 Call NetworkMecanimAnimator.ApplyLayerWeights, X0, X1, X2
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X30, [X31+16]
	035 Move X21, [X31+24]
	036 Add X31, X31, 48
	037 Return 

Method: System.Void CaptureStates(ref System.Int32 wordOffset)

Disassembly:
	0x01E79C50 BL 0x1C16F20
	0x01E79C54 B 0x1E79C58
	0x01E79C58 MOV X21, X0
	0x01E79C5C CMP W1, 0x1
	0x01E79C60 B.NE 0x1E79C94
	0x01E79C64 MOV X0, X21
	0x01E79C68 BL 0x3EB1AD0
	0x01E79C6C LDR X20, [X0]
	0x01E79C70 BL 0x3EB1AE0
	0x01E79C74 ADRP X8, 0x2284000
	0x01E79C78 LDR X8, [X8 + 0x8A0]
	0x01E79C7C ADD X0, X31, 0x8
	0x01E79C80 LDR X1, [X8]
	0x01E79C84 BL 0x2BC434C
	0x01E79C88 CBZ X20, 0x1E79C14
	0x01E79C8C MOV X0, X20
	0x01E79C90 BL 0x1C16F18
	0x01E79C94 MOV X20, X31
	0x01E79C98 B 0x1E79CA0
	0x01E79C9C MOV X21, X0
	0x01E79CA0 ADRP X8, 0x2284000
	0x01E79CA4 LDR X8, [X8 + 0x8A0]
	0x01E79CA8 LDR X1, [X8]
	0x01E79CAC ADD X0, X31, 0x8
	0x01E79CB0 BL 0x2BC434C
	0x01E79CB4 CBNZ X20, 0x1E79CC0
	0x01E79CB8 MOV X0, X21
	0x01E79CBC BL 0x1D2C690
	0x01E79CC0 MOV X0, X20
	0x01E79CC4 BL 0x1C16F18
	0x01E79CC8 BL 0x1990590
	0x01E79CCC STR X30, [X31 - 0x30]!
	0x01E79CD0 STP X22, X21, [X31 + 0x10]
	0x01E79CD4 STP X20, X19, [X31 + 0x20]
	0x01E79CD8 ADRP X21, 0x2560000
	0x01E79CDC ADRP X22, 0x2282000
	0x01E79CE0 ADRP X19, 0x2284000
	0x01E79CE4 ADRP X20, 0x227A000
	0x01E79CE8 LDRB W8, [X21 + 0x1A0]
	0x01E79CEC LDR X22, [X22 + 0xC60]
	0x01E79CF0 LDR X19, [X19 + 0x480]
	0x01E79CF4 LDR X20, [X20 + 0x6C0]
	0x01E79CF8 TBNZ X8, 0x0, 0x1E79E00
	0x01E79CFC ADRP X0, 0x2284000
	0x01E79D00 LDR X0, [X0 + 0x410]
	0x01E79D04 BL 0x1C16CF4
	0x01E79D08 ADRP X0, 0x2284000
	0x01E79D0C LDR X0, [X0 + 0x3B0]
	0x01E79D10 BL 0x1C16CF4
	0x01E79D14 ADRP X0, 0x2284000
	0x01E79D18 LDR X0, [X0 + 0x4B0]
	0x01E79D1C BL 0x1C16CF4
	0x01E79D20 ADRP X0, 0x2284000
	0x01E79D24 LDR X0, [X0 + 0x480]
	0x01E79D28 BL 0x1C16CF4
	0x01E79D2C ADRP X0, 0x2284000
	0x01E79D30 LDR X0, [X0 + 0x3F0]
	0x01E79D34 BL 0x1C16CF4
	0x01E79D38 ADRP X0, 0x2284000
	0x01E79D3C LDR X0, [X0 + 0x3D0]
	0x01E79D40 BL 0x1C16CF4
	0x01E79D44 ADRP X0, 0x2284000
	0x01E79D48 LDR X0, [X0 + 0x460]
	0x01E79D4C BL 0x1C16CF4
	0x01E79D50 ADRP X0, 0x2284000
	0x01E79D54 LDR X0, [X0 + 0x400]
	0x01E79D58 BL 0x1C16CF4
	0x01E79D5C ADRP X0, 0x2284000
	0x01E79D60 LDR X0, [X0 + 0x3A0]
	0x01E79D64 BL 0x1C16CF4
	0x01E79D68 ADRP X0, 0x2284000
	0x01E79D6C LDR X0, [X0 + 0x390]
	0x01E79D70 BL 0x1C16CF4
	0x01E79D74 ADRP X0, 0x2284000
	0x01E79D78 LDR X0, [X0 + 0x450]
	0x01E79D7C BL 0x1C16CF4
	0x01E79D80 ADRP X0, 0x2284000
	0x01E79D84 LDR X0, [X0 + 0x420]
	0x01E79D88 BL 0x1C16CF4
	0x01E79D8C ADRP X0, 0x2284000
	0x01E79D90 LDR X0, [X0 + 0x3E0]
	0x01E79D94 BL 0x1C16CF4
	0x01E79D98 ADRP X0, 0x2284000
	0x01E79D9C LDR X0, [X0 + 0x3C0]
	0x01E79DA0 BL 0x1C16CF4
	0x01E79DA4 ADRP X0, 0x2284000
	0x01E79DA8 LDR X0, [X0 + 0x470]
	0x01E79DAC BL 0x1C16CF4
	0x01E79DB0 ADRP X0, 0x2284000
	0x01E79DB4 LDR X0, [X0 + 0x430]
	0x01E79DB8 BL 0x1C16CF4
	0x01E79DBC ADRP X0, 0x2284000
	0x01E79DC0 LDR X0, [X0 + 0x440]
	0x01E79DC4 BL 0x1C16CF4
	0x01E79DC8 ADRP X0, 0x2284000
	0x01E79DCC LDR X0, [X0 + 0x490]
	0x01E79DD0 BL 0x1C16CF4
	0x01E79DD4 ADRP X0, 0x2284000
	0x01E79DD8 LDR X0, [X0 + 0x4A0]
	0x01E79DDC BL 0x1C16CF4
	0x01E79DE0 ADRP X0, 0x2282000
	0x01E79DE4 LDR X0, [X0 + 0xC60]
	0x01E79DE8 BL 0x1C16CF4
	0x01E79DEC ADRP X0, 0x227A000
	0x01E79DF0 LDR X0, [X0 + 0x6C0]
	0x01E79DF4 BL 0x1C16CF4
	0x01E79DF8 MOVZ W8, 0x1
	0x01E79DFC STRB W8, [X21 + 0x1A0]
	0x01E79E00 LDR X0, [X22]
	0x01E79E04 MOVZ W1, 0x13
	0x01E79E08 BL 0x1C16D6C
	0x01E79E0C LDR X8, [X20]
	0x01E79E10 LDR X20, [X19]
	0x01E79E14 MOV X19, X0
	0x01E79E18 LDR W9, [X8 + 0xE0]
	0x01E79E1C CBNZ W9, 0x1E79E28
	0x01E79E20 MOV X0, X8
	0x01E79E24 BL 0x1C16DFC
	0x01E79E28 MOV X0, X20
	0x01E79E2C MOV X1, X31
	0x01E79E30 BL 0x338C698
	0x01E79E34 CBZ X19, 0x1E7A304
	0x01E79E38 MOV X20, X0
	0x01E79E3C CBZ X0, 0x1E79E54
	0x01E79E40 LDR X8, [X19]
	0x01E79E44 MOV X0, X20
	0x01E79E48 LDR X1, [X8 + 0x40]
	0x01E79E4C BL 0x1C16E00
	0x01E79E50 CBZ X0, 0x1E7A2F8
	0x01E79E54 LDR W8, [X19 + 0x18]
	0x01E79E58 CBZ W8, 0x1E7A2F4
	0x01E79E5C ADRP X8, 0x2284000
	0x01E79E60 LDR X8, [X8 + 0x3E0]
	0x01E79E64 STR X20, [X19 + 0x20]
	0x01E79E68 MOV X1, X31
	0x01E79E6C LDR X0, [X8]
	0x01E79E70 BL 0x338C698
	0x01E79E74 MOV X20, X0
	0x01E79E78 CBZ X0, 0x1E79E90
	0x01E79E7C LDR X8, [X19]
	0x01E79E80 MOV X0, X20
	0x01E79E84 LDR X1, [X8 + 0x40]
	0x01E79E88 BL 0x1C16E00
	0x01E79E8C CBZ X0, 0x1E7A2F8
	0x01E79E90 LDR W8, [X19 + 0x18]
	0x01E79E94 CMP W8, 0x1
	0x01E79E98 B.LS 0x1E7A2F4
	0x01E79E9C ADRP X8, 0x2284000
	0x01E79EA0 LDR X8, [X8 + 0x3F0]
	0x01E79EA4 STR X20, [X19 + 0x28]
	0x01E79EA8 MOV X1, X31
	0x01E79EAC LDR X0, [X8]
	0x01E79EB0 BL 0x338C698
	0x01E79EB4 MOV X20, X0
	0x01E79EB8 CBZ X0, 0x1E79ED0
	0x01E79EBC LDR X8, [X19]
	0x01E79EC0 MOV X0, X20
	0x01E79EC4 LDR X1, [X8 + 0x40]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+96], D9
	003 Move [X31+104], D8
	004 Move [X31+112], X29
	005 Move [X31+120], X30
	006 Move [X31+128], X28
	007 Move [X31+136], X27
	008 Move [X31+144], X26
	009 Move [X31+152], X25
	010 Move [X31+160], X24
	011 Move [X31+168], X23
	012 Move [X31+176], X22
	013 Move [X31+184], X21
	014 Move [X31+192], X20
	015 Move [X31+200], X19
	016 Move X21, 0x2561000
	017 Move W8, [X21+404]
	018 Move X19, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0x2285000
	025 Move X0, [X0+2160]
	026 Call 0x1C17CF4
	027 Move X0, 0x2285000
	028 Move X0, [X0+2144]
	029 Call 0x1C17CF4
	030 Move X0, 0x2285000
	031 Move X0, [X0+2152]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+404], W8
	035 NotImplemented "Instruction MOVI not yet implemented."
	036 Move [X31+80], W31
	037 Move [X31+48], V0
	038 Move [X31+56], V0
	039 Move [X31+44], W31
	040 Move W8, [X20+200]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X24, 0x2285000
	043 Move X25, 0x2285000
	044 Move X22, 0x2282000
	045 Move X24, [X24+2152]
	046 Move X25, [X25+2144]
	047 Move X22, [X22+3176]
	048 Move W21, W31
	049 Move X27, 0x2560000
	050 Move W29, 0x44800000
	051 Move S9, 0.5
	052 Move W28, 0x7F800000
	053 Move W26, 0x80000000
	054 Move X0, [X20+128]
	055 Compare X0, 0
	056 JumpIfEqual {186}
	057 Move W1, W21
	058 Move X2, X31
	059 Call Animator.IsInTransition, X0, X1
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {91}
	064 Move W1, [X19]
	065 Move X0, X20
	066 Add W8, W1, 1
	067 Move [X19], W8
	068 Move X2, [X24]
	069 Call NetworkBehaviour.ReinterpretState, X0, X1
	070 Move [X0], W31
	071 Move W1, [X19]
	072 Move X0, X20
	073 Add W8, W1, 1
	074 Move [X19], W8
	075 Move X2, [X25]
	076 Call 0x22285A8, X0, X1
	077 Move W8, [X27+3727]
	078 Move X23, X0
	079 Compare W8, 0
	080 JumpIfNotEqual {85}
	081 Move X0, X22
	082 Call 0x1C17CF4
	083 Move W8, 1
	084 Move [X27+3727], W8
	085 Move X0, [X22]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move W8, W31
	091 Move X0, [X20+128]
	092 Compare X0, 0
	093 JumpIfEqual {186}
	094 Add X8, X31, 8
	095 Move W1, W21
	096 Move X2, X31
	097 Call Animator.GetCurrentAnimatorStateInfo, X0, X1
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 NotImplemented "Instruction LDUR not yet implemented."
	100 Move W8, [X31+40]
	101 Add X0, X31, 48
	102 Move X1, X31
	103 Move [X31+48], V0
	104 Move [X31+56], V1
	105 Move [X31+80], W8
	106 Call AnimatorStateInfo.get_fullPathHash, X0
	107 Move X8, [X20+160]
	108 Compare X8, 0
	109 JumpIfEqual {186}
	110 Move X9, 0x2285000
	111 Move X9, [X9+2160]
	112 Move W23, W0
	113 Add X2, X31, 44
	114 Move X0, X8
	115 Move X3, [X9]
	116 Move W1, W23
	117 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	118 Move W1, [X19]
	119 Move W8, [X31+44]
	120 And W31, W0, 1
	121 Move X0, X20
	122 Add W9, W1, 1
	123 Move [X19], W9
	124 Move X2, [X24]
	125 NotImplemented "Instruction CSEL not yet implemented."
	126 Call NetworkBehaviour.ReinterpretState, X0, X1
	127 Move [X0], W23
	128 Move W1, [X19]
	129 Move X0, X20
	130 Add W8, W1, 1
	131 Move [X19], W8
	132 Move X2, [X25]
	133 Call 0x22285A8, X0, X1
	134 Move X23, X0
	135 Add X0, X31, 48
	136 Move X1, X31
	137 Call AnimatorStateInfo.get_normalizedTime, X0
	138 Move W8, [X27+3727]
	139 Move V8, V0
	140 Compare W8, 0
	141 JumpIfNotEqual {146}
	142 Move X0, X22
	143 Call 0x1C17CF4
	144 Move W8, 1
	145 Move [X27+3727], W8
	146 Move X0, [X22]
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1C17DFC
	151 Move W8, S8
	152 Move W8, W8
	153 ShiftRight W8, 31
	154 And W8, W8, 0x7FFFFFFF
	155 Move S0, W29
	156 NotImplemented "Instruction UCVTF not yet implemented."
	157 Multiply S0, S8, S0
	158 Subtract S2, S9, S2
	159 Move S1, W28
	160 Add S0, S0, S2
	161 NotImplemented "Instruction FCVTZS not yet implemented."
	162 NotImplemented "Instruction FCMP not yet implemented."
	163 NotImplemented "Instruction CSEL not yet implemented."
	164 NotImplemented "Instruction SBFM not yet implemented."
	165 Xor W8, W9, W8
	166 Move [X23], W8
	167 Move W8, [X20+200]
	168 Add W21, W21, 1
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move X20, [X31+192]
	171 Move X19, [X31+200]
	172 Move X22, [X31+176]
	173 Move X21, [X31+184]
	174 Move X24, [X31+160]
	175 Move X23, [X31+168]
	176 Move X26, [X31+144]
	177 Move X25, [X31+152]
	178 Move X28, [X31+128]
	179 Move X27, [X31+136]
	180 Move X29, [X31+112]
	181 Move X30, [X31+120]
	182 Move D9, [X31+96]
	183 Move D8, [X31+104]
	184 Add X31, X31, 208
	185 Return 
	186 Call 0x1C17F20

Method: System.Void ApplyStates(Fusion.NetworkBehaviourBuffer buffer, ref System.Int32 wordOffset)

Disassembly:
	0x01E7A3B0 ADRP X0, 0x2283000
	0x01E7A3B4 LDR X0, [X0 + 0x8D0]
	0x01E7A3B8 BL 0x1C16CF4
	0x01E7A3BC ADRP X0, 0x2283000
	0x01E7A3C0 LDR X0, [X0 + 0x910]
	0x01E7A3C4 BL 0x1C16CF4
	0x01E7A3C8 ADRP X0, 0x2283000
	0x01E7A3CC LDR X0, [X0 + 0x918]
	0x01E7A3D0 BL 0x1C16CF4
	0x01E7A3D4 ADRP X0, 0x2283000
	0x01E7A3D8 LDR X0, [X0 + 0x8F8]
	0x01E7A3DC BL 0x1C16CF4
	0x01E7A3E0 ADRP X0, 0x2283000
	0x01E7A3E4 LDR X0, [X0 + 0x8F0]
	0x01E7A3E8 BL 0x1C16CF4
	0x01E7A3EC MOVZ W8, 0x1
	0x01E7A3F0 STRB W8, [X23 + 0x1A1]
	0x01E7A3F4 MOV X0, X20
	0x01E7A3F8 MOV X1, X31
	0x01E7A3FC BL 0x33BDD8C
	0x01E7A400 LDR X0, [X22]
	0x01E7A404 BL 0x1C16F10
	0x01E7A408 LDR X1, [X21]
	0x01E7A40C MOV X21, X0
	0x01E7A410 BL 0x2AA4804
	0x01E7A414 STR X21, [X20 + 0x10]
	0x01E7A418 LDR X0, [X29]
	0x01E7A41C BL 0x1C16F10
	0x01E7A420 LDR X1, [X28]
	0x01E7A424 MOV X21, X0
	0x01E7A428 BL 0x2A85E08
	0x01E7A42C STR X21, [X20 + 0x18]
	0x01E7A430 LDR X0, [X27]
	0x01E7A434 BL 0x1C16F10
	0x01E7A438 LDR X1, [X26]
	0x01E7A43C MOV X21, X0
	0x01E7A440 BL 0x301B7C4
	0x01E7A444 STR X21, [X20 + 0x20]
	0x01E7A448 LDR X0, [X25]
	0x01E7A44C BL 0x1C16F10
	0x01E7A450 LDR X1, [X24]
	0x01E7A454 MOV X21, X0
	0x01E7A458 BL 0x2AA4804
	0x01E7A45C STR X21, [X20 + 0x28]
	0x01E7A460 ADRP X8, 0x2283000
	0x01E7A464 LDR X8, [X8 + 0x918]
	0x01E7A468 LDR X0, [X8]
	0x01E7A46C BL 0x1C16F10
	0x01E7A470 ADRP X8, 0x2283000
	0x01E7A474 LDR X8, [X8 + 0x910]
	0x01E7A478 MOV X21, X0
	0x01E7A47C LDR X1, [X8]
	0x01E7A480 BL 0x2DBDE08
	0x01E7A484 STP X21, X19, [X20 + 0x30]
	0x01E7A488 LDP X20, X19, [X31 + 0x50]
	0x01E7A48C LDP X22, X21, [X31 + 0x40]
	0x01E7A490 LDP X24, X23, [X31 + 0x30]
	0x01E7A494 LDP X26, X25, [X31 + 0x20]
	0x01E7A498 LDP X28, X27, [X31 + 0x10]
	0x01E7A49C LDP X29, X30, [X31], #0x60
	0x01E7A4A0 RET
	0x01E7A4A4 STP X29, X30, [X31 - 0x60]!
	0x01E7A4A8 STP X28, X27, [X31 + 0x10]
	0x01E7A4AC STP X26, X25, [X31 + 0x20]
	0x01E7A4B0 STP X24, X23, [X31 + 0x30]
	0x01E7A4B4 STP X22, X21, [X31 + 0x40]
	0x01E7A4B8 STP X20, X19, [X31 + 0x50]
	0x01E7A4BC ADRP X20, 0x255F000
	0x01E7A4C0 ADRP X21, 0x2283000
	0x01E7A4C4 ADRP X19, 0x2283000
	0x01E7A4C8 LDRB W8, [X20 + 0x1A2]
	0x01E7A4CC LDR X21, [X21 + 0x920]
	0x01E7A4D0 LDR X19, [X19 + 0x928]
	0x01E7A4D4 TBNZ X8, 0x0, 0x1E7A534
	0x01E7A4D8 ADRP X0, 0x2283000
	0x01E7A4DC LDR X0, [X0 + 0x930]
	0x01E7A4E0 BL 0x1C16CF4
	0x01E7A4E4 ADRP X0, 0x2283000
	0x01E7A4E8 LDR X0, [X0 + 0x938]
	0x01E7A4EC BL 0x1C16CF4
	0x01E7A4F0 ADRP X0, 0x2283000
	0x01E7A4F4 LDR X0, [X0 + 0x940]
	0x01E7A4F8 BL 0x1C16CF4
	0x01E7A4FC ADRP X0, 0x2283000
	0x01E7A500 LDR X0, [X0 + 0x928]
	0x01E7A504 BL 0x1C16CF4
	0x01E7A508 ADRP X0, 0x2283000
	0x01E7A50C LDR X0, [X0 + 0x920]
	0x01E7A510 BL 0x1C16CF4
	0x01E7A514 ADRP X0, 0x2283000
	0x01E7A518 LDR X0, [X0 + 0x948]
	0x01E7A51C BL 0x1C16CF4
	0x01E7A520 ADRP X0, 0x2279000
	0x01E7A524 LDR X0, [X0 + 0x6C0]
	0x01E7A528 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0x2560000
	015 Move W8, [X21+405]
	016 Move X19, X3
	017 Move X20, X0
	018 Move [X31], X1
	019 Move [X31+8], X2
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x2284000
	025 Move X0, [X0+2168]
	026 Call 0x1C17CF4
	027 Move X0, 0x2284000
	028 Move X0, [X0+2176]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+405], W8
	032 Move W8, [X20+200]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X26, 0x2284000
	035 Move X27, 0x2284000
	036 Move X22, 0x2281000
	037 Move X26, [X26+2176]
	038 Move X27, [X27+2168]
	039 Move X22, [X22+3176]
	040 Move W21, W31
	041 Move X28, 0x255F000
	042 Move W29, 0x3A800000
	043 Move W1, [X19]
	044 Add X0, X31, 0
	045 Add W8, W1, 1
	046 Move [X19], W8
	047 Move X2, [X26]
	048 Call NetworkBehaviourBuffer.ReinterpretState, X0, X1
	049 Move W1, [X19]
	050 Move W23, W0
	051 Add X0, X31, 0
	052 Add W8, W1, 1
	053 Move [X19], W8
	054 Move X2, [X27]
	055 Call 0x22287C0, X0, X1
	056 Compare W23, 0
	057 JumpIfEqual {96}
	058 Move X24, X0
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X8, [X20+152]
	061 Compare X8, 0
	062 JumpIfEqual {110}
	063 Move W9, [X8+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Add X8, X8, W23
	066 Move W23, [X8+32]
	067 Move W8, [X28+3728]
	068 Move X25, [X20+128]
	069 Compare W8, 0
	070 JumpIfNotEqual {75}
	071 Move X0, X22
	072 Call 0x1C17CF4
	073 Move W8, 1
	074 Move [X28+3728], W8
	075 Move X0, [X22]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Compare X25, 0
	081 JumpIfEqual {110}
	082 And W8, W24, 1
	083 Subtract W8, W31, W8
	084 Xor W8, W8, W24
	085 NotImplemented "Instruction SCVTF not yet implemented."
	086 Move S1, W29
	087 Multiply S0, S0, S1
	088 Move X0, X25
	089 Move W1, W23
	090 Move W2, W21
	091 Move X3, X31
	092 Call Animator.Play, X0, X1, X2, V0
	093 Move W8, [X20+200]
	094 Add W21, W21, 1
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X20, [X31+96]
	097 Move X19, [X31+104]
	098 Move X22, [X31+80]
	099 Move X21, [X31+88]
	100 Move X24, [X31+64]
	101 Move X23, [X31+72]
	102 Move X26, [X31+48]
	103 Move X25, [X31+56]
	104 Move X28, [X31+32]
	105 Move X27, [X31+40]
	106 Move X29, [X31+16]
	107 Move X30, [X31+24]
	108 Add X31, X31, 112
	109 Return 
	110 Call 0x1C17F20
	111 Call 0x1C17F28

Method: System.Void CaptureParameters(ref System.Int32 wordOffset)

Disassembly:
	0x01E797D4 LDR W8, [X19 + 0x30]
	0x01E797D8 ORR W8, W8, 0x8
	0x01E797DC STR W8, [X19 + 0x30]
	0x01E797E0 LDP X20, X19, [X31 + 0x10]
	0x01E797E4 LDP X30, X21, [X31], #0x20
	0x01E797E8 RET
	0x01E797EC BL 0x1C16F20
	0x01E797F0 STP X30, X21, [X31 - 0x20]!
	0x01E797F4 STP X20, X19, [X31 + 0x10]
	0x01E797F8 ADRP X20, 0x2560000
	0x01E797FC ADRP X21, 0x227D000
	0x01E79800 LDRB W8, [X20 + 0x19C]
	0x01E79804 LDR X21, [X21 + 0xA78]
	0x01E79808 MOV X19, X0
	0x01E7980C TBNZ X8, 0x0, 0x1E79824
	0x01E79810 ADRP X0, 0x227D000
	0x01E79814 LDR X0, [X0 + 0xA78]
	0x01E79818 BL 0x1C16CF4
	0x01E7981C MOVZ W8, 0x1
	0x01E79820 STRB W8, [X20 + 0x19C]
	0x01E79824 LDR X0, [X21]
	0x01E79828 LDR W8, [X0 + 0xE0]
	0x01E7982C CBNZ W8, 0x1E79834
	0x01E79830 BL 0x1C16DFC
	0x01E79834 CBZ X19, 0x1E79850
	0x01E79838 LDR W8, [X19 + 0x30]
	0x01E7983C AND W8, W8, 0xFFFFFFEF
	0x01E79840 STR W8, [X19 + 0x30]
	0x01E79844 LDP X20, X19, [X31 + 0x10]
	0x01E79848 LDP X30, X21, [X31], #0x20
	0x01E7984C RET
	0x01E79850 BL 0x1C16F20
	0x01E79854 STP X30, X21, [X31 - 0x20]!
	0x01E79858 STP X20, X19, [X31 + 0x10]
	0x01E7985C ADRP X20, 0x2560000
	0x01E79860 ADRP X21, 0x227D000
	0x01E79864 LDRB W8, [X20 + 0x19D]
	0x01E79868 LDR X21, [X21 + 0xA78]
	0x01E7986C MOV X19, X0
	0x01E79870 TBNZ X8, 0x0, 0x1E79888
	0x01E79874 ADRP X0, 0x227D000
	0x01E79878 LDR X0, [X0 + 0xA78]
	0x01E7987C BL 0x1C16CF4
	0x01E79880 MOVZ W8, 0x1
	0x01E79884 STRB W8, [X20 + 0x19D]
	0x01E79888 LDR X0, [X21]
	0x01E7988C LDR W8, [X0 + 0xE0]
	0x01E79890 CBNZ W8, 0x1E79898
	0x01E79894 BL 0x1C16DFC
	0x01E79898 CBZ X19, 0x1E798B4
	0x01E7989C LDR W8, [X19 + 0x30]
	0x01E798A0 ORR W8, W8, 0x10
	0x01E798A4 STR W8, [X19 + 0x30]
	0x01E798A8 LDP X20, X19, [X31 + 0x10]
	0x01E798AC LDP X30, X21, [X31], #0x20
	0x01E798B0 RET
	0x01E798B4 BL 0x1C16F20
	0x01E798B8 STP X1, X2, [X0 + 0x38]
	0x01E798BC RET
	0x01E798C0 STP X31, X31, [X0 + 0x38]
	0x01E798C4 RET
	0x01E798C8 RET
	0x01E798CC RET
	0x01E798D0 STR X30, [X31 - 0x30]!
	0x01E798D4 STP X22, X21, [X31 + 0x10]
	0x01E798D8 STP X20, X19, [X31 + 0x20]
	0x01E798DC ADRP X21, 0x2560000
	0x01E798E0 LDRB W8, [X21 + 0x19E]
	0x01E798E4 MOV X19, X1
	0x01E798E8 MOV X20, X0
	0x01E798EC TBNZ X8, 0x0, 0x1E79940
	0x01E798F0 ADRP X0, 0x2284000
	0x01E798F4 LDR X0, [X0 + 0x4D8]
	0x01E798F8 BL 0x1C16CF4
	0x01E798FC ADRP X0, 0x2283000
	0x01E79900 LDR X0, [X0 + 0xE80]
	0x01E79904 BL 0x1C16CF4
	0x01E79908 ADRP X0, 0x227A000
	0x01E7990C LDR X0, [X0 + 0xDD8]
	0x01E79910 BL 0x1C16CF4
	0x01E79914 ADRP X0, 0x2284000
	0x01E79918 LDR X0, [X0 + 0x898]
	0x01E7991C BL 0x1C16CF4
	0x01E79920 ADRP X0, 0x227A000
	0x01E79924 LDR X0, [X0 + 0xEC8]
	0x01E79928 BL 0x1C16CF4
	0x01E7992C ADRP X0, 0x227A000
	0x01E79930 LDR X0, [X0 + 0x848]
	0x01E79934 BL 0x1C16CF4
	0x01E79938 MOVZ W8, 0x1
	0x01E7993C STRB W8, [X21 + 0x19E]
	0x01E79940 CBZ X19, 0x1E79AB0
	0x01E79944 ADRP X8, 0x227A000
	0x01E79948 LDR X8, [X8 + 0xEC8]
	0x01E7994C ADRP X21, 0x2283000
	0x01E79950 MOV X0, X19
	0x01E79954 MOV X2, X31
	0x01E79958 LDR X1, [X8]
	0x01E7995C LDR X21, [X21 + 0xE80]
	0x01E79960 BL 0x32333E0
	0x01E79964 MOV X0, X20
	0x01E79968 MOV X1, X31
	0x01E7996C BL 0x1E86B98
	0x01E79970 MOV X1, X0
	0x01E79974 MOV X0, X19
	0x01E79978 MOV X2, X31
	0x01E7997C BL 0x32333E0
	0x01E79980 CBZ X20, 0x1E79A34
	0x01E79984 ADRP X8, 0x2284000
	0x01E79988 LDR X8, [X8 + 0x4D8]
	0x01E7998C LDR X9, [X20]
	0x01E79990 LDR X8, [X8]
	0x01E79994 LDRB W11, [X9 + 0x130]
	0x01E79998 LDRB W10, [X8 + 0x130]
	0x01E7999C CMP W11, W10
	0x01E799A0 B.CC 0x1E79A34
	0x01E799A4 LDR X9, [X9 + 0xC8]
	0x01E799A8 ADD X9, X9, X10, 0x3, LSL
	0x01E799AC LDUR X9, [X9 - 0x8]
	0x01E799B0 CMP X9, X8
	0x01E799B4 B.NE 0x1E79A34
	0x01E799B8 LDR X8, [X20 + 0x40]
	0x01E799BC CBZ X8, 0x1E799CC
	0x01E799C0 LDR X8, [X8 + 0x20]
	0x01E799C4 CBZ X8, 0x1E799CC
	0x01E799C8 LDR W8, [X8]
	0x01E799CC LDR W9, [X20 + 0x68]
	0x01E799D0 ADD X0, X31, 0x8
	0x01E799D4 BFM X8, X9, 0x20, 0x1F
	0x01E799D8 STR X8, [X31 + 0x8]
	0x01E799DC BL 0x1E74DE4
	0x01E799E0 TBZ X0, 0x0, 0x1E79A34
	0x01E799E4 ADRP X8, 0x227A000
	0x01E799E8 LDR X8, [X8 + 0xDD8]
	0x01E799EC MOV X0, X19
	0x01E799F0 MOV X2, X31
	0x01E799F4 LDR X1, [X8]
	0x01E799F8 BL 0x32333E0
	0x01E799FC LDR X8, [X20 + 0x40]
	0x01E79A00 CBZ X8, 0x1E79A10
	0x01E79A04 LDR X8, [X8 + 0x20]
	0x01E79A08 CBZ X8, 0x1E79A10
	0x01E79A0C LDR W8, [X8]
	0x01E79A10 LDR W9, [X20 + 0x68]
	0x01E79A14 ADD X0, X31, 0x8
	0x01E79A18 BFM X8, X9, 0x20, 0x1F
	0x01E79A1C STR X8, [X31 + 0x8]
	0x01E79A20 BL 0x1E76B80
	0x01E79A24 MOV X1, X0
	0x01E79A28 MOV X0, X19
	0x01E79A2C MOV X2, X31
	0x01E79A30 BL 0x32333E0
	0x01E79A34 MOV X0, X19
	0x01E79A38 MOV X1, X31
	0x01E79A3C BL 0x323260C
	0x01E79A40 LDR X8, [X21]
	0x01E79A44 LDR X21, [X20 + 0x38]
	0x01E79A48 MOV W20, W0
	0x01E79A4C LDR W9, [X8 + 0xE0]
	0x01E79A50 CBNZ W9, 0x1E79A5C
	0x01E79A54 MOV X0, X8
	0x01E79A58 BL 0x1C16DFC
	0x01E79A5C ADRP X22, 0x227A000
	0x01E79A60 LDR X22, [X22 + 0x848]
	0x01E79A64 MOV X0, X19
	0x01E79A68 MOV X1, X21
	0x01E79A6C MOV X2, X31
	0x01E79A70 BL 0x1EA6828
	0x01E79A74 TBZ X0, 0x0, 0x1E79A94
	0x01E79A78 ADRP X8, 0x2284000
	0x01E79A7C LDR X8, [X8 + 0x898]
	0x01E79A80 MOV X0, X19
	0x01E79A84 MOV W1, W20
	0x01E79A88 MOV X3, X31
	0x01E79A8C LDR X2, [X8]
	0x01E79A90 BL 0x3234078
	0x01E79A94 LDR X1, [X22]
	0x01E79A98 MOV X0, X19
	0x01E79A9C LDP X20, X19, [X31 + 0x20]
	0x01E79AA0 LDP X22, X21, [X31 + 0x10]
	0x01E79AA4 MOV X2, X31
	0x01E79AA8 LDR X30, [X31], #0x30
	0x01E79AAC B 0x32333E0
	0x01E79AB0 BL 0x1C16F20
	0x01E79AB4 LDR W0, [X0 + 0x10]
	0x01E79AB8 RET
	0x01E79ABC STR W1, [X0 + 0x10]
	0x01E79AC0 RET
	0x01E79AC4 LDR W0, [X0 + 0x14]
	0x01E79AC8 RET
	0x01E79ACC STR W1, [X0 + 0x14]
	0x01E79AD0 RET
	0x01E79AD4 LDR W0, [X0 + 0x18]
	0x01E79AD8 RET
	0x01E79ADC STR W1, [X0 + 0x18]
	0x01E79AE0 RET
	0x01E79AE4 MOV X1, X31
	0x01E79AE8 B 0x33A51F0
	0x01E79AEC STR X30, [X31 - 0x10]!
	0x01E79AF0 STR X1, [X0]
	0x01E79AF4 CBZ X1, 0x1E79B0C
	0x01E79AF8 LDR W8, [X1 + 0x38]
	0x01E79AFC ADD W8, W8, 0x1
	0x01E79B00 STR W8, [X1 + 0x38]
	0x01E79B04 LDR X30, [X31], #0x10
	0x01E79B08 RET
	0x01E79B0C BL 0x1C16F20
	0x01E79B10 STR X30, [X31 - 0x10]!
	0x01E79B14 LDR X0, [X0]
	0x01E79B18 CBZ X0, 0x1E79B3C
	0x01E79B1C LDR W8, [X0 + 0x38]
	0x01E79B20 SUBS W8, W8, 0x1
	0x01E79B24 STR W8, [X0 + 0x38]
	0x01E79B28 B.EQ 0x1E79B34
	0x01E79B2C LDR X30, [X31], #0x10
	0x01E79B30 RET
	0x01E79B34 LDR X30, [X31], #0x10
	0x01E79B38 B 0x1E79B40
	0x01E79B3C BL 0x1C16F20
	0x01E79B40 SUB X31, X31, 0x40
	0x01E79B44 STP X30, X21, [X31 + 0x20]
	0x01E79B48 STP X20, X19, [X31 + 0x30]
	0x01E79B4C ADRP X20, 0x2560000
	0x01E79B50 LDRB W8, [X20 + 0x1B3]
	0x01E79B54 MOV X19, X0
	0x01E79B58 TBNZ X8, 0x0, 0x1E79BAC
	0x01E79B5C ADRP X0, 0x2284000
	0x01E79B60 LDR X0, [X0 + 0x8A0]
	0x01E79B64 BL 0x1C16CF4
	0x01E79B68 ADRP X0, 0x2284000
	0x01E79B6C LDR X0, [X0 + 0x8A8]
	0x01E79B70 BL 0x1C16CF4
	0x01E79B74 ADRP X0, 0x2284000
	0x01E79B78 LDR X0, [X0 + 0x8B0]
	0x01E79B7C BL 0x1C16CF4
	0x01E79B80 ADRP X0, 0x2284000
	0x01E79B84 LDR X0, [X0 + 0x8B8]
	0x01E79B88 BL 0x1C16CF4
	0x01E79B8C ADRP X0, 0x2284000
	0x01E79B90 LDR X0, [X0 + 0x8C0]
	0x01E79B94 BL 0x1C16CF4
	0x01E79B98 ADRP X0, 0x2284000
	0x01E79B9C LDR X0, [X0 + 0x8C8]
	0x01E79BA0 BL 0x1C16CF4
	0x01E79BA4 MOVZ W8, 0x1
	0x01E79BA8 STRB W8, [X20 + 0x1B3]
	0x01E79BAC STP X31, X31, [X31 + 0x8]
	0x01E79BB0 STR X31, [X31 + 0x18]
	0x01E79BB4 LDR X0, [X19 + 0x40]
	0x01E79BB8 CBZ X0, 0x1E79C40
	0x01E79BBC LDR W8, [X0 + 0x18]
	0x01E79BC0 CBZ W8, 0x1E79C40
	0x01E79BC4 ADRP X8, 0x2284000
	0x01E79BC8 LDR X8, [X8 + 0x8C0]
	0x01E79BCC LDR X1, [X8]
	0x01E79BD0 ADD X8, X31, 0x8
	0x01E79BD4 BL 0x301CB58
	0x01E79BD8 ADRP X20, 0x2284000
	0x01E79BDC LDR X20, [X20 + 0x8A8]
	0x01E79BE0 LDR X1, [X20]
	0x01E79BE4 ADD X0, X31, 0x8
	0x01E79BE8 BL 0x2BC4350
	0x01E79BEC TBZ X0, 0x0, 0x1E79C00
	0x01E79BF0 LDR X1, [X31 + 0x18]
	0x01E79BF4 MOV X0, X19
	0x01E79BF8 BL 0x1E7C8E0
	0x01E79BFC B 0x1E79BE0
	0x01E79C00 ADRP X8, 0x2284000
	0x01E79C04 LDR X8, [X8 + 0x8A0]
	0x01E79C08 ADD X0, X31, 0x8
	0x01E79C0C LDR X1, [X8]
	0x01E79C10 BL 0x2BC434C
	0x01E79C14 LDR X8, [X19 + 0x40]
	0x01E79C18 CBZ X8, 0x1E79C50
	0x01E79C1C LDP W2, W9, [X8 + 0x18]
	0x01E79C20 ADD W9, W9, 0x1
	0x01E79C24 CMP W2, 0x1
	0x01E79C28 STP W31, W9, [X8 + 0x18]
	0x01E79C2C B.LT 0x1E79C40
	0x01E79C30 LDR X0, [X8 + 0x10]
	0x01E79C34 MOV W1, W31
	0x01E79C38 MOV X3, X31
	0x01E79C3C BL 0x339FA34
	0x01E79C40 LDP X20, X19, [X31 + 0x30]
	0x01E79C44 LDP X30, X21, [X31 + 0x20]
	0x01E79C48 ADD X31, X31, 0x40
	0x01E79C4C RET

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X29
	005 Move [X31+40], X30
	006 Move [X31+48], X28
	007 Move [X31+56], X27
	008 Move [X31+64], X26
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move X19, 0x2561000
	017 Move W8, [X19+406]
	018 Move X20, X0
	019 Move [X31+8], X1
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0x2282000
	025 Move X0, [X0+1656]
	026 Call 0x1C17CF4
	027 Move X0, 0x227C000
	028 Move X0, [X0+3576]
	029 Call 0x1C17CF4
	030 Move X0, 0x2285000
	031 Move X0, [X0+2144]
	032 Call 0x1C17CF4
	033 Move X0, 0x2285000
	034 Move X0, [X0+2152]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X19+406], W8
	038 Move W24, [X20+232]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X26, [X20+224]
	041 Compare X26, 0
	042 JumpIfEqual {333}
	043 Move W29, [X20+144]
	044 Move X27, [X20+216]
	045 Move X23, -20230144
	046 Move W19, W31
	047 Move W28, W31
	048 Move W8, W31
	049 Add X23, X23, 2892
	050 Move S9, 0.5
	051 Move W21, 1
	052 Move [X31+4], W31
	053 Move W9, [X26+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Compare X27, 0
	056 JumpIfEqual {333}
	057 Move W9, [X27+24]
	058 Move X25, W8
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Add X8, X27, X25
	061 Move X0, [X8+32]
	062 Compare X0, 0
	063 JumpIfEqual {333}
	064 Add X8, X26, X25
	065 Move W22, [X8+32]
	066 Move X1, X31
	067 Call AnimatorControllerParameter.get_type, X0
	068 Subtract W8, W0, 1
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction ADR not yet implemented."
	071 Move W10, [X23]
	072 Add X9, X9, X10
	073 CallNoReturn X9
	074 Move TEMP, X29
	075 And TEMP, TEMP, 2
	076 Compare TEMP, 2
	077 JumpIfNotEqual {223}
	078 Move X0, [X20+128]
	079 Compare X0, 0
	080 JumpIfEqual {333}
	081 Move W1, W22
	082 Move X2, X31
	083 Call Animator.IsParameterControlledByCurve, X0, X1
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfEqual {223}
	088 Move X0, [X20+128]
	089 Compare X0, 0
	090 JumpIfEqual {333}
	091 Move W1, W22
	092 Move X2, X31
	093 Call Animator.GetFloat, X0, X1
	094 Move X9, [X31+8]
	095 Move X0, X20
	096 Move V8, V0
	097 Move W1, [X9]
	098 Add W8, W1, 1
	099 Move [X9], W8
	100 Move X8, 0x2285000
	101 Move X8, [X8+2144]
	102 Move X2, [X8]
	103 Call 0x22285A8, X0, X1
	104 Move X8, 0x2560000
	105 Move W8, [X8+3727]
	106 Move X22, X0
	107 Compare W8, 0
	108 JumpIfNotEqual {115}
	109 Move X0, 0x2282000
	110 Move X0, [X0+3176]
	111 Call 0x1C17CF4
	112 Move W8, 1
	113 Move X9, 0x2560000
	114 Move [X9+3727], W8
	115 Move X8, 0x2282000
	116 Move X8, [X8+3176]
	117 Move X0, [X8]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Move W8, S8
	123 Move W9, 0x44800000
	124 Move W8, W8
	125 ShiftRight W8, 31
	126 And W8, W8, 0x7FFFFFFF
	127 Move S0, W9
	128 NotImplemented "Instruction UCVTF not yet implemented."
	129 Multiply S0, S8, S0
	130 Move W9, 0x7F800000
	131 Subtract S2, S9, S2
	132 Move S1, W9
	133 Add S0, S0, S2
	134 NotImplemented "Instruction FCVTZS not yet implemented."
	135 NotImplemented "Instruction FCMP not yet implemented."
	136 Move W9, 0x80000000
	137 NotImplemented "Instruction CSEL not yet implemented."
	138 NotImplemented "Instruction SBFM not yet implemented."
	139 Xor W8, W9, W8
	140 Move [X22], W8
	141 Move TEMP, X29
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {223}
	145 Move X9, [X31+8]
	146 Move X0, X20
	147 Move W1, [X9]
	148 Add W8, W1, 1
	149 Move [X9], W8
	150 Move X8, 0x2285000
	151 Move X8, [X8+2152]
	152 Move X2, [X8]
	153 Call NetworkBehaviour.ReinterpretState, X0, X1
	154 Move X8, [X20+128]
	155 Compare X8, 0
	156 JumpIfEqual {333}
	157 Move X23, X0
	158 Move X0, X8
	159 Move W1, W22
	160 Move X2, X31
	161 Call Animator.GetInteger, X0, X1
	162 Move [X23], W0
	163 Move TEMP, X29
	164 And TEMP, TEMP, 4
	165 Compare TEMP, 4
	166 JumpIfNotEqual {223}
	167 Move TEMP, X21
	168 And TEMP, TEMP, 1
	169 Compare TEMP, 1
	170 JumpIfNotEqual {178}
	171 Move X8, 0x2285000
	172 Move W1, [X20+196]
	173 Move X8, [X8+2152]
	174 Move X0, X20
	175 Move X2, [X8]
	176 Call NetworkBehaviour.ReinterpretState, X0, X1
	177 Move W28, [X0]
	178 Move X0, [X20+128]
	179 Compare X0, 0
	180 JumpIfEqual {333}
	181 Move W21, W19
	182 ShiftRight W21, 30
	183 And W21, W21, 3
	184 Move W8, 15
	185 NotImplemented "Instruction LSLV not yet implemented."
	186 Move W1, W22
	187 Move X2, X31
	188 NotImplemented "Instruction BIC not yet implemented."
	189 Call Animator.GetBool, X0, X1
	190 Move W8, 1
	191 NotImplemented "Instruction LSLV not yet implemented."
	192 And W31, W0, 1
	193 Add W19, W19, 1
	194 NotImplemented "Instruction CSEL not yet implemented."
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Or W28, W8, W23
	197 Move W21, W31
	198 Move X0, [X20+240]
	199 Compare X0, 0
	200 JumpIfEqual {333}
	201 Move X8, 0x227C000
	202 Move X8, [X8+3576]
	203 Move W1, W22
	204 Move X2, [X8]
	205 Call HashSet`1<Int32>.Contains, X0, X1
	206 Move W23, W0
	207 Move TEMP, X0
	208 And TEMP, TEMP, 1
	209 Compare TEMP, 1
	210 JumpIfNotEqual {217}
	211 Move X0, [X20+128]
	212 Compare X0, 0
	213 JumpIfEqual {333}
	214 Move W1, W22
	215 Move X2, X31
	216 Call Animator.SetTrigger, X0, X1
	217 Move TEMP, X29
	218 And TEMP, TEMP, 8
	219 Compare TEMP, 8
	220 JumpIfEqual {225}
	221 Move X23, -20230144
	222 Add X23, X23, 2892
	223 Add W8, W25, 1
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move TEMP, X21
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfNotEqual {236}
	229 Move X8, 0x2285000
	230 Move W1, [X20+196]
	231 Move X8, [X8+2152]
	232 Move X0, X20
	233 Move X2, [X8]
	234 Call NetworkBehaviour.ReinterpretState, X0, X1
	235 Move W28, [X0]
	236 Move W9, W19
	237 ShiftRight W9, 30
	238 And W9, W9, 3
	239 Move W8, 15
	240 NotImplemented "Instruction LSLV not yet implemented."
	241 And W10, W28, W8
	242 NotImplemented "Instruction ASRV not yet implemented."
	243 Or W11, W10, W23
	244 Move TEMP, X11
	245 And TEMP, TEMP, 1
	246 Compare TEMP, 1
	247 JumpIfNotEqual {256}
	248 Add W10, W10, 2
	249 And W11, W23, 1
	250 And W10, W10, 0xFFFFFFFE
	251 Or W10, W10, W11
	252 NotImplemented "Instruction LSLV not yet implemented."
	253 NotImplemented "Instruction BIC not yet implemented."
	254 And W8, W9, W8
	255 Or W28, W8, W10
	256 Move X23, -20230144
	257 Add W19, W19, 1
	258 Add X23, X23, 2892
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Move W21, W31
	261 Move X19, 0x2285000
	262 Move W8, [X20+196]
	263 Move X19, [X19+2152]
	264 Move W9, [X31+4]
	265 Move X0, X20
	266 Move X2, [X19]
	267 Add W1, W8, W9
	268 Add W22, W9, 1
	269 Call NetworkBehaviour.ReinterpretState, X0, X1
	270 Move [X0], W28
	271 Move W8, [X20+192]
	272 Move X23, -20230144
	273 Add X23, X23, 2892
	274 Move X19, 0x2285000
	275 Move W8, [X20+196]
	276 Move X19, [X19+2152]
	277 Move W9, [X31+4]
	278 Move X0, X20
	279 Move X2, [X19]
	280 Add W1, W8, W9
	281 Add W22, W9, 1
	282 Call NetworkBehaviour.ReinterpretState, X0, X1
	283 Move [X0], W28
	284 Move W8, [X20+192]
	285 NotImplemented "Instruction CMP not yet implemented."
	286 Move W8, [X20+196]
	287 Move X2, [X19]
	288 Move X0, X20
	289 Add W1, W8, W22
	290 Call NetworkBehaviour.ReinterpretState, X0, X1
	291 Move W28, [X0]
	292 Move W19, W31
	293 Move W21, W31
	294 Move [X31+4], W22
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Move X9, 0x2285000
	297 Move W8, [X20+196]
	298 Move X9, [X9+2152]
	299 Move X0, X20
	300 Move X2, [X9]
	301 Move W9, [X31+4]
	302 Add W1, W8, W9
	303 Call NetworkBehaviour.ReinterpretState, X0, X1
	304 Move [X0], W28
	305 Move X10, [X31+8]
	306 Move W9, [X20+192]
	307 Move W8, [X10]
	308 Add W8, W9, W8
	309 Move [X10], W8
	310 Move X0, [X20+240]
	311 Compare X0, 0
	312 JumpIfEqual {333}
	313 Move X8, 0x2282000
	314 Move X8, [X8+1656]
	315 Move X20, [X31+112]
	316 Move X19, [X31+120]
	317 Move X22, [X31+96]
	318 Move X21, [X31+104]
	319 Move X24, [X31+80]
	320 Move X23, [X31+88]
	321 Move X1, [X8]
	322 Move X26, [X31+64]
	323 Move X25, [X31+72]
	324 Move X28, [X31+48]
	325 Move X27, [X31+56]
	326 Move X29, [X31+32]
	327 Move X30, [X31+40]
	328 Move D9, [X31+16]
	329 Move D8, [X31+24]
	330 Add X31, X31, 128
	331 Call HashSet`1<Int32>.Clear, X0
	332 Return 
	333 Call 0x1C17F20
	334 Call 0x1C17F28

Method: System.Void ApplyParameters(Fusion.NetworkBehaviourBuffer buffer, ref System.Int32 wordOffset)

Disassembly:
	0x01E7A00C CBZ X0, 0x1E7A2F8
	0x01E7A010 LDR W8, [X19 + 0x18]
	0x01E7A014 CMP W8, 0x7
	0x01E7A018 B.LS 0x1E7A2F4
	0x01E7A01C ADRP X8, 0x2283000
	0x01E7A020 LDR X8, [X8 + 0x440]
	0x01E7A024 STR X20, [X19 + 0x58]
	0x01E7A028 MOV X1, X31
	0x01E7A02C LDR X0, [X8]
	0x01E7A030 BL 0x338C698
	0x01E7A034 MOV X20, X0
	0x01E7A038 CBZ X0, 0x1E7A050
	0x01E7A03C LDR X8, [X19]
	0x01E7A040 MOV X0, X20
	0x01E7A044 LDR X1, [X8 + 0x40]
	0x01E7A048 BL 0x1C16E00
	0x01E7A04C CBZ X0, 0x1E7A2F8
	0x01E7A050 LDR W8, [X19 + 0x18]
	0x01E7A054 CMP W8, 0x8
	0x01E7A058 B.LS 0x1E7A2F4
	0x01E7A05C ADRP X8, 0x2283000
	0x01E7A060 LDR X8, [X8 + 0x470]
	0x01E7A064 STR X20, [X19 + 0x60]
	0x01E7A068 MOV X1, X31
	0x01E7A06C LDR X0, [X8]
	0x01E7A070 BL 0x338C698
	0x01E7A074 MOV X20, X0
	0x01E7A078 CBZ X0, 0x1E7A090
	0x01E7A07C LDR X8, [X19]
	0x01E7A080 MOV X0, X20
	0x01E7A084 LDR X1, [X8 + 0x40]
	0x01E7A088 BL 0x1C16E00
	0x01E7A08C CBZ X0, 0x1E7A2F8
	0x01E7A090 LDR W8, [X19 + 0x18]
	0x01E7A094 CMP W8, 0x9
	0x01E7A098 B.LS 0x1E7A2F4
	0x01E7A09C ADRP X8, 0x2283000
	0x01E7A0A0 LDR X8, [X8 + 0x460]
	0x01E7A0A4 STR X20, [X19 + 0x68]
	0x01E7A0A8 MOV X1, X31
	0x01E7A0AC LDR X0, [X8]
	0x01E7A0B0 BL 0x338C698
	0x01E7A0B4 MOV X20, X0
	0x01E7A0B8 CBZ X0, 0x1E7A0D0
	0x01E7A0BC LDR X8, [X19]
	0x01E7A0C0 MOV X0, X20
	0x01E7A0C4 LDR X1, [X8 + 0x40]
	0x01E7A0C8 BL 0x1C16E00
	0x01E7A0CC CBZ X0, 0x1E7A2F8
	0x01E7A0D0 LDR W8, [X19 + 0x18]
	0x01E7A0D4 CMP W8, 0xA
	0x01E7A0D8 B.LS 0x1E7A2F4
	0x01E7A0DC ADRP X8, 0x2283000
	0x01E7A0E0 LDR X8, [X8 + 0x490]
	0x01E7A0E4 STR X20, [X19 + 0x70]
	0x01E7A0E8 MOV X1, X31
	0x01E7A0EC LDR X0, [X8]
	0x01E7A0F0 BL 0x338C698
	0x01E7A0F4 MOV X20, X0
	0x01E7A0F8 CBZ X0, 0x1E7A110
	0x01E7A0FC LDR X8, [X19]
	0x01E7A100 MOV X0, X20
	0x01E7A104 LDR X1, [X8 + 0x40]
	0x01E7A108 BL 0x1C16E00
	0x01E7A10C CBZ X0, 0x1E7A2F8
	0x01E7A110 LDR W8, [X19 + 0x18]
	0x01E7A114 CMP W8, 0xB
	0x01E7A118 B.LS 0x1E7A2F4
	0x01E7A11C ADRP X8, 0x2283000
	0x01E7A120 LDR X8, [X8 + 0x4A0]
	0x01E7A124 STR X20, [X19 + 0x78]
	0x01E7A128 MOV X1, X31
	0x01E7A12C LDR X0, [X8]
	0x01E7A130 BL 0x338C698
	0x01E7A134 MOV X20, X0
	0x01E7A138 CBZ X0, 0x1E7A150
	0x01E7A13C LDR X8, [X19]
	0x01E7A140 MOV X0, X20
	0x01E7A144 LDR X1, [X8 + 0x40]
	0x01E7A148 BL 0x1C16E00
	0x01E7A14C CBZ X0, 0x1E7A2F8
	0x01E7A150 LDR W8, [X19 + 0x18]
	0x01E7A154 CMP W8, 0xC
	0x01E7A158 B.LS 0x1E7A2F4
	0x01E7A15C ADRP X8, 0x2283000
	0x01E7A160 LDR X8, [X8 + 0x3B0]
	0x01E7A164 STR X20, [X19 + 0x80]
	0x01E7A168 MOV X1, X31
	0x01E7A16C LDR X0, [X8]
	0x01E7A170 BL 0x338C698
	0x01E7A174 MOV X20, X0
	0x01E7A178 CBZ X0, 0x1E7A190
	0x01E7A17C LDR X8, [X19]
	0x01E7A180 MOV X0, X20
	0x01E7A184 LDR X1, [X8 + 0x40]
	0x01E7A188 BL 0x1C16E00
	0x01E7A18C CBZ X0, 0x1E7A2F8
	0x01E7A190 LDR W8, [X19 + 0x18]
	0x01E7A194 CMP W8, 0xD
	0x01E7A198 B.LS 0x1E7A2F4
	0x01E7A19C ADRP X8, 0x2283000
	0x01E7A1A0 LDR X8, [X8 + 0x3A0]
	0x01E7A1A4 STR X20, [X19 + 0x88]
	0x01E7A1A8 MOV X1, X31
	0x01E7A1AC LDR X0, [X8]
	0x01E7A1B0 BL 0x338C698
	0x01E7A1B4 MOV X20, X0
	0x01E7A1B8 CBZ X0, 0x1E7A1D0
	0x01E7A1BC LDR X8, [X19]
	0x01E7A1C0 MOV X0, X20
	0x01E7A1C4 LDR X1, [X8 + 0x40]
	0x01E7A1C8 BL 0x1C16E00
	0x01E7A1CC CBZ X0, 0x1E7A2F8
	0x01E7A1D0 LDR W8, [X19 + 0x18]
	0x01E7A1D4 CMP W8, 0xE
	0x01E7A1D8 B.LS 0x1E7A2F4
	0x01E7A1DC ADRP X8, 0x2283000
	0x01E7A1E0 LDR X8, [X8 + 0x390]
	0x01E7A1E4 STR X20, [X19 + 0x90]
	0x01E7A1E8 MOV X1, X31
	0x01E7A1EC LDR X0, [X8]
	0x01E7A1F0 BL 0x338C698
	0x01E7A1F4 MOV X20, X0
	0x01E7A1F8 CBZ X0, 0x1E7A210
	0x01E7A1FC LDR X8, [X19]
	0x01E7A200 MOV X0, X20
	0x01E7A204 LDR X1, [X8 + 0x40]
	0x01E7A208 BL 0x1C16E00
	0x01E7A20C CBZ X0, 0x1E7A2F8
	0x01E7A210 LDR W8, [X19 + 0x18]
	0x01E7A214 CMP W8, 0xF
	0x01E7A218 B.LS 0x1E7A2F4
	0x01E7A21C ADRP X8, 0x2283000
	0x01E7A220 LDR X8, [X8 + 0x3C0]
	0x01E7A224 STR X20, [X19 + 0x98]
	0x01E7A228 MOV X1, X31
	0x01E7A22C LDR X0, [X8]
	0x01E7A230 BL 0x338C698
	0x01E7A234 MOV X20, X0
	0x01E7A238 CBZ X0, 0x1E7A250
	0x01E7A23C LDR X8, [X19]
	0x01E7A240 MOV X0, X20
	0x01E7A244 LDR X1, [X8 + 0x40]
	0x01E7A248 BL 0x1C16E00
	0x01E7A24C CBZ X0, 0x1E7A2F8
	0x01E7A250 LDR W8, [X19 + 0x18]
	0x01E7A254 CMP W8, 0x10
	0x01E7A258 B.LS 0x1E7A2F4
	0x01E7A25C ADRP X8, 0x2283000
	0x01E7A260 LDR X8, [X8 + 0x3D0]
	0x01E7A264 STR X20, [X19 + 0xA0]
	0x01E7A268 MOV X1, X31
	0x01E7A26C LDR X0, [X8]
	0x01E7A270 BL 0x338C698
	0x01E7A274 MOV X20, X0
	0x01E7A278 CBZ X0, 0x1E7A290
	0x01E7A27C LDR X8, [X19]
	0x01E7A280 MOV X0, X20
	0x01E7A284 LDR X1, [X8 + 0x40]
	0x01E7A288 BL 0x1C16E00
	0x01E7A28C CBZ X0, 0x1E7A2F8
	0x01E7A290 LDR W8, [X19 + 0x18]
	0x01E7A294 CMP W8, 0x11
	0x01E7A298 B.LS 0x1E7A2F4
	0x01E7A29C ADRP X8, 0x2283000
	0x01E7A2A0 LDR X8, [X8 + 0x4B0]
	0x01E7A2A4 STR X20, [X19 + 0xA8]
	0x01E7A2A8 MOV X1, X31
	0x01E7A2AC LDR X0, [X8]
	0x01E7A2B0 BL 0x338C698
	0x01E7A2B4 MOV X20, X0
	0x01E7A2B8 CBZ X0, 0x1E7A2D0
	0x01E7A2BC LDR X8, [X19]
	0x01E7A2C0 MOV X0, X20
	0x01E7A2C4 LDR X1, [X8 + 0x40]
	0x01E7A2C8 BL 0x1C16E00
	0x01E7A2CC CBZ X0, 0x1E7A2F8
	0x01E7A2D0 LDR W8, [X19 + 0x18]
	0x01E7A2D4 CMP W8, 0x12
	0x01E7A2D8 B.LS 0x1E7A2F4
	0x01E7A2DC STR X20, [X19 + 0xB0]
	0x01E7A2E0 MOV X0, X19
	0x01E7A2E4 LDP X20, X19, [X31 + 0x20]
	0x01E7A2E8 LDP X22, X21, [X31 + 0x10]
	0x01E7A2EC LDR X30, [X31], #0x30
	0x01E7A2F0 RET
	0x01E7A2F4 BL 0x1C16F28
	0x01E7A2F8 BL 0x1C16F44
	0x01E7A2FC MOV X1, X31
	0x01E7A300 BL 0x1C16DEC
	0x01E7A304 BL 0x1C16F20
	0x01E7A308 STP X29, X30, [X31 - 0x60]!
	0x01E7A30C STP X28, X27, [X31 + 0x10]
	0x01E7A310 STP X26, X25, [X31 + 0x20]
	0x01E7A314 STP X24, X23, [X31 + 0x30]
	0x01E7A318 STP X22, X21, [X31 + 0x40]
	0x01E7A31C STP X20, X19, [X31 + 0x50]
	0x01E7A320 ADRP X23, 0x255F000
	0x01E7A324 ADRP X22, 0x2283000
	0x01E7A328 ADRP X21, 0x2283000
	0x01E7A32C ADRP X29, 0x2283000
	0x01E7A330 ADRP X28, 0x2283000
	0x01E7A334 ADRP X27, 0x2283000
	0x01E7A338 ADRP X26, 0x2283000
	0x01E7A33C ADRP X25, 0x2283000
	0x01E7A340 ADRP X24, 0x2283000
	0x01E7A344 LDR X22, [X22 + 0x8D0]
	0x01E7A348 LDR X21, [X21 + 0x8D8]
	0x01E7A34C LDR X29, [X29 + 0x8E0]
	0x01E7A350 LDR X28, [X28 + 0x8E8]
	0x01E7A354 LDR X27, [X27 + 0x8F0]
	0x01E7A358 LDRB W8, [X23 + 0x1A1]
	0x01E7A35C LDR X26, [X26 + 0x8F8]
	0x01E7A360 LDR X25, [X25 + 0x900]
	0x01E7A364 LDR X24, [X24 + 0x908]
	0x01E7A368 MOV X19, X1
	0x01E7A36C MOV X20, X0
	0x01E7A370 TBNZ X8, 0x0, 0x1E7A3F4
	0x01E7A374 ADRP X0, 0x2283000
	0x01E7A378 LDR X0, [X0 + 0x8E8]
	0x01E7A37C BL 0x1C16CF4
	0x01E7A380 ADRP X0, 0x2283000
	0x01E7A384 LDR X0, [X0 + 0x8D8]
	0x01E7A388 BL 0x1C16CF4
	0x01E7A38C ADRP X0, 0x2283000
	0x01E7A390 LDR X0, [X0 + 0x908]
	0x01E7A394 BL 0x1C16CF4
	0x01E7A398 ADRP X0, 0x2283000
	0x01E7A39C LDR X0, [X0 + 0x900]
	0x01E7A3A0 BL 0x1C16CF4
	0x01E7A3A4 ADRP X0, 0x2283000
	0x01E7A3A8 LDR X0, [X0 + 0x8E0]
	0x01E7A3AC BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X19, 0x2560000
	015 Move W8, [X19+407]
	016 Move X24, X3
	017 Move X20, X0
	018 Move [X31+16], X1
	019 Move [X31+24], X2
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x2284000
	025 Move X0, [X0+2168]
	026 Call 0x1C17CF4
	027 Move X0, 0x2284000
	028 Move X0, [X0+2176]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X19+407], W8
	032 Move W26, [X20+232]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X27, [X20+224]
	035 Compare X27, 0
	036 JumpIfEqual {282}
	037 Move W28, [X20+144]
	038 Move X21, [X20+216]
	039 Move W29, W31
	040 Move W25, W31
	041 Move W8, W31
	042 Move W22, 1
	043 Move [X31], X24
	044 Move [X31+8], X31
	045 Move W9, [X27+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Compare X21, 0
	048 JumpIfEqual {282}
	049 Move W9, [X21+24]
	050 Move X19, W8
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Add X8, X21, X19
	053 Move X0, [X8+32]
	054 Compare X0, 0
	055 JumpIfEqual {282}
	056 Add X8, X27, X19
	057 Move W23, [X8+32]
	058 Move X1, X31
	059 Call AnimatorControllerParameter.get_type, X0
	060 Subtract W8, W0, 1
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X11, -20234240
	063 Add X11, X11, 2901
	064 NotImplemented "Instruction ADR not yet implemented."
	065 Move W10, [X11]
	066 Add X9, X9, X10
	067 CallNoReturn X9
	068 Move TEMP, X28
	069 And TEMP, TEMP, 2
	070 Compare TEMP, 2
	071 JumpIfNotEqual {253}
	072 Move X0, [X20+128]
	073 Compare X0, 0
	074 JumpIfEqual {282}
	075 Move W1, W23
	076 Move X2, X31
	077 Call Animator.IsParameterControlledByCurve, X0, X1
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {253}
	082 Move W1, [X24]
	083 Add X0, X31, 16
	084 Add W8, W1, 1
	085 Move [X24], W8
	086 Move X8, 0x2284000
	087 Move X8, [X8+2168]
	088 Move X2, [X8]
	089 Call 0x22287C0, X0, X1
	090 Move X8, 0x255F000
	091 Move W8, [X8+3728]
	092 Move X24, X0
	093 Compare W8, 0
	094 JumpIfNotEqual {101}
	095 Move X0, 0x2281000
	096 Move X0, [X0+3176]
	097 Call 0x1C17CF4
	098 Move W8, 1
	099 Move X9, 0x255F000
	100 Move [X9+3728], W8
	101 Move X8, 0x2281000
	102 Move X8, [X8+3176]
	103 Move X0, [X8]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Move X0, [X20+128]
	109 Compare X0, 0
	110 JumpIfEqual {282}
	111 And W8, W24, 1
	112 Subtract W8, W31, W8
	113 Xor W8, W8, W24
	114 NotImplemented "Instruction SCVTF not yet implemented."
	115 Move W8, 0x3A800000
	116 Move S1, W8
	117 Multiply S0, S0, S1
	118 Move W1, W23
	119 Move X2, X31
	120 Call Animator.SetFloat, X0, X1, V0
	121 Move X24, [X31]
	122 Move TEMP, X28
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {253}
	126 Move W1, [X24]
	127 Add X0, X31, 16
	128 Add W8, W1, 1
	129 Move [X24], W8
	130 Move X8, 0x2284000
	131 Move X8, [X8+2176]
	132 Move X2, [X8]
	133 Call NetworkBehaviourBuffer.ReinterpretState, X0, X1
	134 Move X8, [X20+128]
	135 Compare X8, 0
	136 JumpIfEqual {282}
	137 Move W2, W0
	138 Move X0, X8
	139 Move W1, W23
	140 Move X3, X31
	141 Call Animator.SetInteger, X0, X1, X2
	142 Move TEMP, X28
	143 And TEMP, TEMP, 4
	144 Compare TEMP, 4
	145 JumpIfNotEqual {253}
	146 Move TEMP, X22
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfNotEqual {165}
	150 Move X8, [X20+208]
	151 Compare X8, 0
	152 JumpIfEqual {282}
	153 Move W9, [X8+24]
	154 Compare W9, 0
	155 JumpIfEqual {283}
	156 Move W8, [X8+32]
	157 Move W1, [X20+196]
	158 Add X0, X31, 16
	159 Move [X31+8], W8
	160 Move X8, 0x2284000
	161 Move X8, [X8+2176]
	162 Move X2, [X8]
	163 Call NetworkBehaviourBuffer.ReinterpretState, X0, X1
	164 Move [X31+12], W0
	165 Move X0, [X20+128]
	166 Compare X0, 0
	167 JumpIfEqual {282}
	168 Move W9, [X31+12]
	169 Move W8, W29
	170 ShiftRight W8, 30
	171 And W8, W8, 3
	172 Move W1, W23
	173 Move X3, X31
	174 NotImplemented "Instruction LSRV not yet implemented."
	175 And W2, W8, 1
	176 Call Animator.SetBool, X0, X1, X2
	177 Move TEMP, X28
	178 And TEMP, TEMP, 8
	179 Compare TEMP, 8
	180 JumpIfNotEqual {253}
	181 Move TEMP, X22
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfNotEqual {200}
	185 Move X8, [X20+208]
	186 Compare X8, 0
	187 JumpIfEqual {282}
	188 Move W9, [X8+24]
	189 Compare W9, 0
	190 JumpIfEqual {283}
	191 Move W8, [X8+32]
	192 Move W1, [X20+196]
	193 Add X0, X31, 16
	194 Move [X31+8], W8
	195 Move X8, 0x2284000
	196 Move X8, [X8+2176]
	197 Move X2, [X8]
	198 Call NetworkBehaviourBuffer.ReinterpretState, X0, X1
	199 Move [X31+12], W0
	200 Move W10, [X31+8]
	201 Move W11, [X31+12]
	202 Move W9, W29
	203 ShiftRight W9, 30
	204 And W9, W9, 3
	205 Move W8, 15
	206 NotImplemented "Instruction LSLV not yet implemented."
	207 And W10, W10, W8
	208 And W11, W11, W8
	209 NotImplemented "Instruction ASRV not yet implemented."
	210 NotImplemented "Instruction ASRV not yet implemented."
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move TEMP, X9
	213 And TEMP, TEMP, 1
	214 Compare TEMP, 1
	215 JumpIfEqual {220}
	216 Move TEMP, X8
	217 And TEMP, TEMP, 1
	218 Compare TEMP, 1
	219 JumpIfEqual {226}
	220 Move X0, [X20+128]
	221 Compare X0, 0
	222 JumpIfEqual {282}
	223 Move W1, W23
	224 Move X2, X31
	225 Call Animator.SetTrigger, X0, X1
	226 Add W29, W29, 1
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move X8, [X20+208]
	229 Compare X8, 0
	230 JumpIfEqual {282}
	231 Move W9, [X8+24]
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Move W11, [X31+12]
	234 Add X10, X8, W25
	235 Add W25, W25, 1
	236 Move [X10+32], W11
	237 Move W10, [X20+192]
	238 NotImplemented "Instruction CMP not yet implemented."
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Add X8, X8, W25
	241 Move W8, [X8+32]
	242 Move W9, [X20+196]
	243 Add X0, X31, 16
	244 Move [X31+8], W8
	245 Move X8, 0x2284000
	246 Move X8, [X8+2176]
	247 Add W1, W9, W25
	248 Move X2, [X8]
	249 Call NetworkBehaviourBuffer.ReinterpretState, X0, X1
	250 Move [X31+12], W0
	251 Move W29, W31
	252 Move W22, W31
	253 Add W8, W19, 1
	254 NotImplemented "Instruction CMP not yet implemented."
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move X8, [X20+208]
	257 Compare X8, 0
	258 JumpIfEqual {282}
	259 Move W9, [X8+24]
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Move W9, [X31+12]
	262 Add X8, X8, W25
	263 Move [X8+32], W9
	264 Move W8, [X24]
	265 Move W9, [X20+192]
	266 Move X20, [X31+112]
	267 Move X19, [X31+120]
	268 Move X22, [X31+96]
	269 Move X21, [X31+104]
	270 Move X26, [X31+64]
	271 Move X25, [X31+72]
	272 Add W8, W9, W8
	273 Move [X24], W8
	274 Move X24, [X31+80]
	275 Move X23, [X31+88]
	276 Move X28, [X31+48]
	277 Move X27, [X31+56]
	278 Move X29, [X31+32]
	279 Move X30, [X31+40]
	280 Add X31, X31, 128
	281 Return 
	282 Call 0x1C17F20
	283 Call 0x1C17F28

Method: System.Void CaptureLayerWeights(ref System.Int32 wordOffset)

Disassembly:
	0x01E79EC8 BL 0x1C16E00
	0x01E79ECC CBZ X0, 0x1E7A2F8
	0x01E79ED0 LDR W8, [X19 + 0x18]
	0x01E79ED4 CMP W8, 0x2
	0x01E79ED8 B.LS 0x1E7A2F4
	0x01E79EDC ADRP X8, 0x2284000
	0x01E79EE0 LDR X8, [X8 + 0x400]
	0x01E79EE4 STR X20, [X19 + 0x30]
	0x01E79EE8 MOV X1, X31
	0x01E79EEC LDR X0, [X8]
	0x01E79EF0 BL 0x338C698
	0x01E79EF4 MOV X20, X0
	0x01E79EF8 CBZ X0, 0x1E79F10
	0x01E79EFC LDR X8, [X19]
	0x01E79F00 MOV X0, X20
	0x01E79F04 LDR X1, [X8 + 0x40]
	0x01E79F08 BL 0x1C16E00
	0x01E79F0C CBZ X0, 0x1E7A2F8
	0x01E79F10 LDR W8, [X19 + 0x18]
	0x01E79F14 CMP W8, 0x3
	0x01E79F18 B.LS 0x1E7A2F4
	0x01E79F1C ADRP X8, 0x2284000
	0x01E79F20 LDR X8, [X8 + 0x410]
	0x01E79F24 STR X20, [X19 + 0x38]
	0x01E79F28 MOV X1, X31
	0x01E79F2C LDR X0, [X8]
	0x01E79F30 BL 0x338C698
	0x01E79F34 MOV X20, X0
	0x01E79F38 CBZ X0, 0x1E79F50
	0x01E79F3C LDR X8, [X19]
	0x01E79F40 MOV X0, X20
	0x01E79F44 LDR X1, [X8 + 0x40]
	0x01E79F48 BL 0x1C16E00
	0x01E79F4C CBZ X0, 0x1E7A2F8
	0x01E79F50 LDR W8, [X19 + 0x18]
	0x01E79F54 CMP W8, 0x4
	0x01E79F58 B.LS 0x1E7A2F4
	0x01E79F5C ADRP X8, 0x2284000
	0x01E79F60 LDR X8, [X8 + 0x420]
	0x01E79F64 STR X20, [X19 + 0x40]
	0x01E79F68 MOV X1, X31
	0x01E79F6C LDR X0, [X8]
	0x01E79F70 BL 0x338C698
	0x01E79F74 MOV X20, X0
	0x01E79F78 CBZ X0, 0x1E79F90
	0x01E79F7C LDR X8, [X19]
	0x01E79F80 MOV X0, X20
	0x01E79F84 LDR X1, [X8 + 0x40]
	0x01E79F88 BL 0x1C16E00
	0x01E79F8C CBZ X0, 0x1E7A2F8
	0x01E79F90 LDR W8, [X19 + 0x18]
	0x01E79F94 CMP W8, 0x5
	0x01E79F98 B.LS 0x1E7A2F4
	0x01E79F9C ADRP X8, 0x2284000
	0x01E79FA0 LDR X8, [X8 + 0x450]
	0x01E79FA4 STR X20, [X19 + 0x48]
	0x01E79FA8 MOV X1, X31
	0x01E79FAC LDR X0, [X8]
	0x01E79FB0 BL 0x338C698
	0x01E79FB4 MOV X20, X0
	0x01E79FB8 CBZ X0, 0x1E79FD0
	0x01E79FBC LDR X8, [X19]
	0x01E79FC0 MOV X0, X20
	0x01E79FC4 LDR X1, [X8 + 0x40]
	0x01E79FC8 BL 0x1C16E00
	0x01E79FCC CBZ X0, 0x1E7A2F8
	0x01E79FD0 LDR W8, [X19 + 0x18]
	0x01E79FD4 CMP W8, 0x6
	0x01E79FD8 B.LS 0x1E7A2F4
	0x01E79FDC ADRP X8, 0x2284000
	0x01E79FE0 LDR X8, [X8 + 0x430]
	0x01E79FE4 STR X20, [X19 + 0x50]
	0x01E79FE8 MOV X1, X31
	0x01E79FEC LDR X0, [X8]
	0x01E79FF0 BL 0x338C698
	0x01E79FF4 MOV X20, X0
	0x01E79FF8 CBZ X0, 0x1E7A010
	0x01E79FFC LDR X8, [X19]
	0x01E7A000 MOV X0, X20
	0x01E7A004 LDR X1, [X8 + 0x40]
	0x01E7A008 BL 0x1C16E00

ISIL:
	001 Move [X31-112], D9
	002 Move [X31-104], D8
	003 Move [X31+16], X29
	004 Move [X31+24], X30
	005 Move [X31+32], X28
	006 Move [X31+40], X27
	007 Move [X31+48], X26
	008 Move [X31+56], X25
	009 Move [X31+64], X24
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Move X21, 0x2561000
	016 Move W8, [X21+408]
	017 Move X19, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x2285000
	024 Move X0, [X0+2144]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+408], W8
	028 Move W24, [X20+236]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X25, 0x2285000
	031 Move X21, 0x2282000
	032 Move X25, [X25+2144]
	033 Move W1, [X19]
	034 Move X21, [X21+3176]
	035 Move X27, 0x2560000
	036 Move W28, 0x44800000
	037 Move S9, 0.5
	038 Move W29, 0x7F800000
	039 Move W26, 0x80000000
	040 Move W22, 1
	041 Move X2, [X25]
	042 Move X0, X20
	043 Call 0x22285A8, X0, X1
	044 Move X8, [X20+128]
	045 Compare X8, 0
	046 JumpIfEqual {101}
	047 Move X23, X0
	048 Move X0, X8
	049 Move W1, W22
	050 Move X2, X31
	051 Call Animator.GetLayerWeight, X0, X1
	052 Move W8, [X27+3727]
	053 Move V8, V0
	054 Compare W8, 0
	055 JumpIfNotEqual {60}
	056 Move X0, X21
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X27+3727], W8
	060 Move X0, [X21]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move W8, S8
	066 Move W8, W8
	067 ShiftRight W8, 31
	068 And W8, W8, 0x7FFFFFFF
	069 Move S0, W28
	070 NotImplemented "Instruction UCVTF not yet implemented."
	071 Multiply S0, S8, S0
	072 Subtract S1, S9, S1
	073 Add S0, S0, S1
	074 Move S1, W29
	075 NotImplemented "Instruction FCVTZS not yet implemented."
	076 NotImplemented "Instruction FCMP not yet implemented."
	077 NotImplemented "Instruction CSEL not yet implemented."
	078 NotImplemented "Instruction SBFM not yet implemented."
	079 Xor W8, W9, W8
	080 Move [X23], W8
	081 Move W8, [X19]
	082 Add W22, W22, 1
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Add W1, W8, 1
	085 Move [X19], W1
	086 Move X20, [X31+96]
	087 Move X19, [X31+104]
	088 Move X22, [X31+80]
	089 Move X21, [X31+88]
	090 Move X24, [X31+64]
	091 Move X23, [X31+72]
	092 Move X26, [X31+48]
	093 Move X25, [X31+56]
	094 Move X28, [X31+32]
	095 Move X27, [X31+40]
	096 Move X29, [X31+16]
	097 Move X30, [X31+24]
	098 Move D9, [X31+112]
	099 Move D8, [X31+120]
	100 Return 
	101 Call 0x1C17F20

Method: System.Void ApplyLayerWeights(Fusion.NetworkBehaviourBuffer buffer, ref System.Int32 wordOffset)

Disassembly:
	0x01E7A52C MOVZ W8, 0x1
	0x01E7A530 STRB W8, [X20 + 0x1A2]
	0x01E7A534 LDR X0, [X21]
	0x01E7A538 BL 0x1C16F10
	0x01E7A53C LDR X1, [X19]
	0x01E7A540 MOV X19, X0
	0x01E7A544 BL 0x301B7C4
	0x01E7A548 MOV X0, X31
	0x01E7A54C BL 0x33C0128
	0x01E7A550 CBZ X0, 0x1E7A78C
	0x01E7A554 MOV X1, X31
	0x01E7A558 BL 0x33C0134
	0x01E7A55C CBZ X0, 0x1E7A78C
	0x01E7A560 LDR X8, [X0 + 0x18]
	0x01E7A564 MOV X20, X0
	0x01E7A568 CMP W8, 0x1
	0x01E7A56C B.LT 0x1E7A768
	0x01E7A570 ADRP X27, 0x2283000
	0x01E7A574 ADRP X28, 0x2279000
	0x01E7A578 ADRP X29, 0x2283000
	0x01E7A57C LDR X27, [X27 + 0x948]
	0x01E7A580 LDR X28, [X28 + 0x6C0]
	0x01E7A584 LDR X29, [X29 + 0x940]
	0x01E7A588 MOV X25, X31
	0x01E7A58C AND X8, X8, 0x0
	0x01E7A590 CMP X25, W8, UXTW
	0x01E7A594 B.CS 0x1E7A788
	0x01E7A598 ADD X8, X20, X25, 0x3, LSL
	0x01E7A59C LDR X22, [X8 + 0x20]
	0x01E7A5A0 ADRP X8, 0x2283000
	0x01E7A5A4 LDR X8, [X8 + 0x930]
	0x01E7A5A8 MOV X0, X22
	0x01E7A5AC LDR X1, [X8]
	0x01E7A5B0 BL 0x21A885C
	0x01E7A5B4 CBNZ X0, 0x1E7A6BC
	0x01E7A5B8 CBZ X22, 0x1E7A6F0
	0x01E7A5BC LDR X8, [X22]
	0x01E7A5C0 LDR X1, [X8 + 0x230]
	0x01E7A5C4 LDR X9, [X8 + 0x228]
	0x01E7A5C8 MOV X0, X22
	0x01E7A5CC BLR X9
	0x01E7A5D0 MOV X22, X0
	0x01E7A5D4 CBZ X0, 0x1E7A6F8
	0x01E7A5D8 LDR X8, [X22 + 0x18]
	0x01E7A5DC CMP W8, 0x1
	0x01E7A5E0 B.LT 0x1E7A6BC
	0x01E7A5E4 MOV X26, X31
	0x01E7A5E8 AND X8, X8, 0x0
	0x01E7A5EC ADD X21, X22, 0x20
	0x01E7A5F0 CMP X26, W8, UXTW
	0x01E7A5F4 B.CS 0x1E7A6D0
	0x01E7A5F8 LDR X0, [X28]
	0x01E7A5FC LDR X23, [X21, X26, LSL #3]
	0x01E7A600 LDR X24, [X27]
	0x01E7A604 LDR W8, [X0 + 0xE0]
	0x01E7A608 CBNZ W8, 0x1E7A610
	0x01E7A60C BL 0x1C16DFC
	0x01E7A610 MOV X0, X24
	0x01E7A614 MOV X1, X31
	0x01E7A618 BL 0x338C698
	0x01E7A61C CBZ X0, 0x1E7A6D8
	0x01E7A620 LDR X8, [X0]
	0x01E7A624 LDR X9, [X8 + 0x2A8]
	0x01E7A628 LDR X2, [X8 + 0x2B0]
	0x01E7A62C MOV X1, X23
	0x01E7A630 BLR X9
	0x01E7A634 TBZ X0, 0x0, 0x1E7A6AC
	0x01E7A638 CBZ X19, 0x1E7A6E0
	0x01E7A63C LDR X2, [X29]
	0x01E7A640 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0x2560000
	015 Move W8, [X21+409]
	016 Move X19, X3
	017 Move X20, X0
	018 Move [X31], X1
	019 Move [X31+8], X2
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x2284000
	025 Move X0, [X0+2168]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+409], W8
	029 Move W25, [X20+236]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X26, 0x2284000
	032 Move X21, 0x2281000
	033 Move X26, [X26+2168]
	034 Move W1, [X19]
	035 Move X21, [X21+3176]
	036 Move W27, 1
	037 Move X28, 0x255F000
	038 Move W29, 0x3A800000
	039 Move W22, 1
	040 Move X2, [X26]
	041 Move X23, [X20+128]
	042 Add X0, X31, 0
	043 Call 0x22287C0, X0, X1
	044 Move W8, [X28+3728]
	045 Move X24, X0
	046 Compare W8, 0
	047 JumpIfNotEqual {51}
	048 Move X0, X21
	049 Call 0x1C17CF4
	050 Move [X28+3728], W27
	051 Move X0, [X21]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Compare X23, 0
	057 JumpIfEqual {87}
	058 And W8, W24, 1
	059 Subtract W8, W31, W8
	060 Xor W8, W8, W24
	061 NotImplemented "Instruction SCVTF not yet implemented."
	062 Move S1, W29
	063 Multiply S0, S0, S1
	064 Move X0, X23
	065 Move W1, W22
	066 Move X2, X31
	067 Call Animator.SetLayerWeight, X0, X1, V0
	068 Move W8, [X19]
	069 Add W22, W22, 1
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Add W1, W8, 1
	072 Move [X19], W1
	073 Move X20, [X31+96]
	074 Move X19, [X31+104]
	075 Move X22, [X31+80]
	076 Move X21, [X31+88]
	077 Move X24, [X31+64]
	078 Move X23, [X31+72]
	079 Move X26, [X31+48]
	080 Move X25, [X31+56]
	081 Move X28, [X31+32]
	082 Move X27, [X31+40]
	083 Move X29, [X31+16]
	084 Move X30, [X31+24]
	085 Add X31, X31, 112
	086 Return 
	087 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01E7A644 MOV X1, X23
	0x01E7A648 BL 0x301C318
	0x01E7A64C TBNZ X0, 0x0, 0x1E7A6AC
	0x01E7A650 ADRP X9, 0x2283000
	0x01E7A654 LDR W10, [X19 + 0x1C]
	0x01E7A658 LDR X8, [X19 + 0x10]
	0x01E7A65C LDR X9, [X9 + 0x938]
	0x01E7A660 ADD W10, W10, 0x1
	0x01E7A664 LDR X9, [X9]
	0x01E7A668 STR W10, [X19 + 0x1C]
	0x01E7A66C CBZ X8, 0x1E7A6E8
	0x01E7A670 LDRSW X10, [X19 + 0x18]
	0x01E7A674 LDR W11, [X8 + 0x18]
	0x01E7A678 CMP W10, W11
	0x01E7A67C B.CS 0x1E7A694
	0x01E7A680 ADD W9, W10, 0x1
	0x01E7A684 ADD X8, X8, X10, 0x3, LSL
	0x01E7A688 STR W9, [X19 + 0x18]
	0x01E7A68C STR X23, [X8 + 0x20]
	0x01E7A690 B 0x1E7A6AC
	0x01E7A694 LDR X8, [X9 + 0x20]
	0x01E7A698 LDR X8, [X8 + 0xC0]
	0x01E7A69C LDR X2, [X8 + 0x70]
	0x01E7A6A0 MOV X0, X19
	0x01E7A6A4 MOV X1, X23
	0x01E7A6A8 BL 0x301BF90
	0x01E7A6AC LDR W8, [X22 + 0x18]
	0x01E7A6B0 ADD X26, X26, 0x1
	0x01E7A6B4 CMP X26, W8, SXTW
	0x01E7A6B8 B.LT 0x1E7A5F0
	0x01E7A6BC LDR W8, [X20 + 0x18]
	0x01E7A6C0 ADD X25, X25, 0x1
	0x01E7A6C4 CMP X25, W8, SXTW
	0x01E7A6C8 B.LT 0x1E7A590
	0x01E7A6CC B 0x1E7A768
	0x01E7A6D0 BL 0x1C16F28
	0x01E7A6D4 B 0x1E7A790
	0x01E7A6D8 BL 0x1C16F20
	0x01E7A6DC B 0x1E7A790
	0x01E7A6E0 BL 0x1C16F20
	0x01E7A6E4 B 0x1E7A790
	0x01E7A6E8 BL 0x1C16F20
	0x01E7A6EC B 0x1E7A790
	0x01E7A6F0 BL 0x1C16F20
	0x01E7A6F4 B 0x1E7A790
	0x01E7A6F8 BL 0x1C16F20
	0x01E7A6FC B 0x1E7A790
	0x01E7A700 B 0x1E7A72C
	0x01E7A704 B 0x1E7A72C
	0x01E7A708 B 0x1E7A72C
	0x01E7A70C B 0x1E7A72C
	0x01E7A710 B 0x1E7A72C
	0x01E7A714 B 0x1E7A72C
	0x01E7A718 B 0x1E7A72C
	0x01E7A71C B 0x1E7A72C
	0x01E7A720 B 0x1E7A72C
	0x01E7A724 B 0x1E7A72C
	0x01E7A728 B 0x1E7A72C
	0x01E7A72C MOV X22, X0
	0x01E7A730 CMP W1, 0x1
	0x01E7A734 B.NE 0x1E7A7BC
	0x01E7A738 MOV X0, X22
	0x01E7A73C BL 0x3EB1AD0
	0x01E7A740 MOV X22, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x2560000
	009 Move X24, 0x2284000
	010 Move X23, 0x2284000
	011 Move X22, 0x227B000
	012 Move X21, 0x2281000
	013 Move W8, [X20+410]
	014 Move X24, [X24+2184]
	015 Move X23, [X23+2192]
	016 Move X22, [X22+3592]
	017 Move X21, [X21+1672]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x2284000
	024 Move X0, [X0+2192]
	025 Call 0x1C17CF4
	026 Move X0, 0x2284000
	027 Move X0, [X0+2184]
	028 Call 0x1C17CF4
	029 Move X0, 0x2281000
	030 Move X0, [X0+1672]
	031 Call 0x1C17CF4
	032 Move X0, 0x227B000
	033 Move X0, [X0+3592]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+410], W8
	037 Move X8, -20492288
	038 Move V0, [X8+448]
	039 Move W8, 79
	040 Move [X19+144], W8
	041 Move [X19+136], D0
	042 Move X0, [X24]
	043 Call 0x1C17F10
	044 Move X1, [X23]
	045 Move X20, X0
	046 Call Dictionary`2<Int32, Int32>..ctor, X0
	047 Move [X19+160], X20
	048 Move X0, [X24]
	049 Call 0x1C17F10
	050 Move X1, [X23]
	051 Move X20, X0
	052 Call Dictionary`2<Int32, Int32>..ctor, X0
	053 Move [X19+176], X20
	054 Move X0, [X22]
	055 Call 0x1C17F10
	056 Move X1, [X21]
	057 Move X20, X0
	058 Call HashSet`1<Int32>..ctor, X0
	059 Move W8, 1
	060 Move W9, 16
	061 Move [X19+240], X20
	062 Move [X19+116], W8
	063 Move [X19+48], W9
	064 Move X0, X19
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X1, X31
	072 Move X30, [X31+64]
	073 Call Behaviour..ctor, X0
	074 Return 

