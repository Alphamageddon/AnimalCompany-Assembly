Type: Fusion.Simulation/Server

Method: Fusion.Tick get_LatestServerTick()

Disassembly:
	0x01ED062C LDR W8, [X8 + 0x10]
	0x01ED0630 MOV X0, X23

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: Fusion.PlayerRef get_LocalPlayer()

Disassembly:
	0x01ED0634 MOV X1, X24
	0x01ED0638 ADD W2, W8, 0x4
	0x01ED063C BL 0x1ED1778
	0x01ED0640 LDR X8, [X24 + 0x20]
	0x01ED0644 CBZ X8, 0x1ED0750
	0x01ED0648 LDR W1, [X8]
	0x01ED064C LDR W8, [X19 + 0x48]
	0x01ED0650 CMP W1, W8
	0x01ED0654 B.LE 0x1ED06A0
	0x01ED0658 CBZ X20, 0x1ED0750
	0x01ED065C LDR X0, [X20 + 0xB0]
	0x01ED0660 CBZ X0, 0x1ED0750
	0x01ED0664 BL 0x1ECE0BC
	0x01ED0668 TBNZ X0, 0x0, 0x1ED06FC
	0x01ED066C LDR V0, [X19 + 0xC8]
	0x01ED0670 LDR X1, [X27]
	0x01ED0674 LDR X25, [X20 + 0xB0]
	0x01ED0678 ADD X0, X31, 0x8
	0x01ED067C STP X31, X31, [X31 + 0x8]
	0x01ED0680 BL 0x2431800
	0x01ED0684 CBZ X25, 0x1ED0750
	0x01ED0688 LDP X2, X3, [X31 + 0x8]
	0x01ED068C MOV X0, X25
	0x01ED0690 MOV X1, X24
	0x01ED0694 BL 0x1ECE268
	0x01ED0698 TBZ X0, 0x0, 0x1ED06FC
	0x01ED069C B 0x1ED070C
	0x01ED06A0 LDR X0, [X19 + 0xE8]
	0x01ED06A4 CBZ X0, 0x1ED0750
	0x01ED06A8 LDR X3, [X28]
	0x01ED06AC ADD X2, X31, 0x18
	0x01ED06B0 BL 0x2AF1D00
	0x01ED06B4 LDR X8, [X24 + 0x20]
	0x01ED06B8 CBZ X8, 0x1ED0750
	0x01ED06BC LDR W25, [X8]
	0x01ED06C0 LDR V8, [X19 + 0xC8]
	0x01ED06C4 TBZ X0, 0x0, 0x1ED06D4
	0x01ED06C8 CBZ X20, 0x1ED0750
	0x01ED06CC LDR V1, [X31 + 0x18]
	0x01ED06D0 B 0x1ED06EC
	0x01ED06D4 MOV X0, X19
	0x01ED06D8 MOV X1, X31
	0x01ED06DC BL 0x1EC0524
	0x01ED06E0 CBZ X20, 0x1ED0750
	0x01ED06E4 SCVTF D1, W25
	0x01ED06E8 FMUL D1, D0, D1
	0x01ED06EC MOV X0, X20
	0x01ED06F0 MOV X1, X25
	0x01ED06F4 MOV V0.16B, V8.16B
	0x01ED06F8 BL 0x1ED172C
	0x01ED06FC LDR X0, [X19 + 0x98]
	0x01ED0700 CBZ X0, 0x1ED0750
	0x01ED0704 MOV X1, X24
	0x01ED0708 BL 0x1ECD2E4
	0x01ED070C SUBS W26, W26, 0x1
	0x01ED0710 B.NE 0x1ED05E8
	0x01ED0714 LDR X8, [X19 + 0x110]
	0x01ED0718 CBZ X8, 0x1ED0750
	0x01ED071C LDR X1, [X8 + 0x28]
	0x01ED0720 ADD X0, X31, 0x28

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x250A000
	005 Move W8, [X20+1247]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x222F000
	012 Move X0, [X0+2704]
	013 Call 0x1C17CF4
	014 Move X0, 0x2227000
	015 Move X0, [X0+3648]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1247], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call Simulation.get_IsPlayer, X0
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {45}
	026 Move X19, [X19+64]
	027 Compare X19, 0
	028 JumpIfEqual {68}
	029 Move X10, 0x222F000
	030 Move X8, [X19]
	031 Move X10, [X10+2704]
	032 NotImplemented "Instruction LDRH not yet implemented."
	033 Move X1, [X10]
	034 Compare X9, 0
	035 JumpIfEqual {42}
	036 Move X10, [X8+176]
	037 Add X10, X10, 8
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Subtract X9, X9, 1
	041 Add X10, X10, 16
	042 Move W2, 35
	043 Move X0, X19
	044 Call 0x1C5D788
	045 Move X8, 0x2227000
	046 Move X8, [X8+3648]
	047 Move X0, [X8]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X31
	053 Call PlayerRef.get_None
	054 Move W9, [X10]
	055 Add W9, W9, 35
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X8, [X0]
	059 Move X1, [X0+8]
	060 Move X0, X19
	061 NotImplemented "Instruction BLR not yet implemented."
	062 And X0, X0, 0
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 And X0, X0, 0
	066 Move X30, [X31+32]
	067 Return X0
	068 Call 0x1C17F20

Method: System.Double GetPlayerRtt(Fusion.PlayerRef player)

Disassembly:
	0x01ED0724 MOV X2, X31
	0x01ED0728 BL 0x1EFAA7C
	0x01ED072C LDP X20, X19, [X31 + 0x80]
	0x01ED0730 LDP X22, X21, [X31 + 0x70]
	0x01ED0734 LDP X24, X23, [X31 + 0x60]
	0x01ED0738 LDP X26, X25, [X31 + 0x50]
	0x01ED073C LDP X28, X27, [X31 + 0x40]
	0x01ED0740 LDR X30, [X31 + 0x38]
	0x01ED0744 LDR V8, [X31 + 0x30]
	0x01ED0748 ADD X31, X31, 0x90
	0x01ED074C RET
	0x01ED0750 BL 0x1C16F20
	0x01ED0754 SUB X31, X31, 0x40
	0x01ED0758 STR D8, [X31 + 0x10]
	0x01ED075C STR X30, [X31 + 0x18]
	0x01ED0760 STP X22, X21, [X31 + 0x20]
	0x01ED0764 STP X20, X19, [X31 + 0x30]
	0x01ED0768 ADRP X20, 0x2509000
	0x01ED076C LDRB W8, [X20 + 0x4EE]
	0x01ED0770 MOV X19, X0
	0x01ED0774 TBNZ X8, 0x0, 0x1ED078C
	0x01ED0778 ADRP X0, 0x222F000
	0x01ED077C LDR X0, [X0 + 0xF30]
	0x01ED0780 BL 0x1C16CF4
	0x01ED0784 MOVZ W8, 0x1
	0x01ED0788 STRB W8, [X20 + 0x4EE]
	0x01ED078C STR X31, [X31 + 0x8]
	0x01ED0790 LDR X8, [X19 + 0x110]
	0x01ED0794 CBZ X8, 0x1ED0818
	0x01ED0798 LDR X0, [X19 + 0xE8]
	0x01ED079C CBZ X0, 0x1ED0818
	0x01ED07A0 ADRP X9, 0x222F000
	0x01ED07A4 LDR X9, [X9 + 0xF30]
	0x01ED07A8 LDR W22, [X8 + 0x20]
	0x01ED07AC LDR X20, [X8 + 0x30]
	0x01ED07B0 ADD X2, X31, 0x8
	0x01ED07B4 LDR X3, [X9]
	0x01ED07B8 BIC W21, W22, W22, 0x1F
	0x01ED07BC MOV X1, X21
	0x01ED07C0 BL 0x2AF1D00
	0x01ED07C4 LDR V8, [X19 + 0xC8]
	0x01ED07C8 TBZ X0, 0x0, 0x1ED07D8
	0x01ED07CC CBZ X20, 0x1ED0818
	0x01ED07D0 LDR V1, [X31 + 0x8]
	0x01ED07D4 B 0x1ED07F0
	0x01ED07D8 MOV X0, X19
	0x01ED07DC MOV X1, X31
	0x01ED07E0 BL 0x1EC0524
	0x01ED07E4 CBZ X20, 0x1ED0818
	0x01ED07E8 SCVTF D1, W22
	0x01ED07EC FMUL D1, D0, D1
	0x01ED07F0 MOV X0, X20
	0x01ED07F4 MOV X1, X21
	0x01ED07F8 MOV V0.16B, V8.16B
	0x01ED07FC BL 0x1ED172C
	0x01ED0800 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x250A000
	009 Move X21, 0x2227000
	010 Move W8, [X22+1248]
	011 Move X21, [X21+3648]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x2229000
	019 Move X0, [X0+32]
	020 Call 0x1C17CF4
	021 Move X0, 0x2227000
	022 Move X0, [X0+3648]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+1248], W8
	026 Move [X31+8], X31
	027 Move X8, [X20]
	028 Move X0, X20
	029 Move X9, [X8+616]
	030 Move X1, [X8+624]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X8, [X21]
	033 Move X21, X0
	034 Move W9, [X8+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move D8, X31
	041 Move X0, [X20+184]
	042 Compare X0, 0
	043 JumpIfEqual {68}
	044 Move X8, 0x2229000
	045 Move X8, [X8+32]
	046 And X1, X19, 0
	047 Add X2, X31, 8
	048 Move X3, [X8]
	049 Call Dictionary`2<PlayerRef, Object>.TryGetValue, X0, X1, X2
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {59}
	054 Move X8, [X31+8]
	055 Compare X8, 0
	056 JumpIfEqual {68}
	057 Move X8, [X8+208]
	058 Move V8, [X8+72]
	059 Move V0, V8
	060 Move X20, [X31+48]
	061 Move X19, [X31+56]
	062 Move X22, [X31+32]
	063 Move X21, [X31+40]
	064 Move X30, [X31+24]
	065 Move V8, [X31+16]
	066 Add X31, X31, 64
	067 Return V0
	068 Call 0x1C17F20

Method: System.Void .ctor(Fusion.SimulationArgs args)

Disassembly:
	0x01ED0804 LDP X22, X21, [X31 + 0x20]
	0x01ED0808 LDR X30, [X31 + 0x18]
	0x01ED080C LDR V8, [X31 + 0x10]
	0x01ED0810 ADD X31, X31, 0x40
	0x01ED0814 RET
	0x01ED0818 BL 0x1C16F20
	0x01ED081C STP X30, X19, [X31 - 0x10]!
	0x01ED0820 MOV X19, X0
	0x01ED0824 LDR X0, [X0 + 0xB8]
	0x01ED0828 CBZ X0, 0x1ED0854
	0x01ED082C MOV X1, X31
	0x01ED0830 BL 0x1E92770
	0x01ED0834 LDR X0, [X19 + 0x90]
	0x01ED0838 CBZ X0, 0x1ED0854
	0x01ED083C MOV X1, X31
	0x01ED0840 BL 0x1E92770
	0x01ED0844 STP X31, X31, [X19 + 0x98]
	0x01ED0848 STRB W31, [X19 + 0xA8]
	0x01ED084C LDP X30, X19, [X31], #0x10
	0x01ED0850 RET
	0x01ED0854 BL 0x1C16F20
	0x01ED0858 SUB X31, X31, 0x60
	0x01ED085C STP X30, X21, [X31 + 0x40]
	0x01ED0860 STP X20, X19, [X31 + 0x50]
	0x01ED0864 ADRP X21, 0x2509000
	0x01ED0868 LDRB W8, [X21 + 0x4E6]
	0x01ED086C MOV X20, X1
	0x01ED0870 MOV X19, X0
	0x01ED0874 TBNZ X8, 0x0, 0x1ED08B0
	0x01ED0878 ADRP X0, 0x222F000
	0x01ED087C LDR X0, [X0 + 0xB78]
	0x01ED0880 BL 0x1C16CF4
	0x01ED0884 ADRP X0, 0x222F000
	0x01ED0888 LDR X0, [X0 + 0xB80]
	0x01ED088C BL 0x1C16CF4
	0x01ED0890 ADRP X0, 0x222F000
	0x01ED0894 LDR X0, [X0 + 0xB88]
	0x01ED0898 BL 0x1C16CF4
	0x01ED089C ADRP X0, 0x222F000
	0x01ED08A0 LDR X0, [X0 + 0xB90]
	0x01ED08A4 BL 0x1C16CF4
	0x01ED08A8 MOVZ W8, 0x1
	0x01ED08AC STRB W8, [X21 + 0x4E6]
	0x01ED08B0 STP X31, X31, [X31 + 0x20]
	0x01ED08B4 STR X31, [X31 + 0x30]
	0x01ED08B8 ADRP X21, 0x2509000
	0x01ED08BC LDRB W8, [X21 + 0x4B5]
	0x01ED08C0 LDR W20, [X20 + 0x18]
	0x01ED08C4 CBNZ W8, 0x1ED08DC
	0x01ED08C8 ADRP X0, 0x222F000
	0x01ED08CC LDR X0, [X0 + 0x8D0]
	0x01ED08D0 BL 0x1C16CF4
	0x01ED08D4 MOVZ W8, 0x1
	0x01ED08D8 STRB W8, [X21 + 0x4B5]
	0x01ED08DC STR X31, [X31 + 0x8]
	0x01ED08E0 LDR X0, [X19 + 0xB0]
	0x01ED08E4 CBZ X0, 0x1ED0998
	0x01ED08E8 ADRP X8, 0x222F000
	0x01ED08EC LDR X8, [X8 + 0x8D0]
	0x01ED08F0 SBFM W1, W20, 0x10, 0x1F
	0x01ED08F4 ADD X2, X31, 0x8
	0x01ED08F8 LDR X3, [X8]
	0x01ED08FC BL 0x2A150AC
	0x01ED0900 LDR X8, [X31 + 0x8]
	0x01ED0904 LDR X9, [X19 + 0xF8]
	0x01ED0908 ANDS W31, W0, 0x1
	0x01ED090C CSEL X19, X8, X31, NE
	0x01ED0910 CBZ X9, 0x1ED0984
	0x01ED0914 ADRP X8, 0x222F000
	0x01ED0918 LDR X8, [X8 + 0xB90]
	0x01ED091C ADRP X21, 0x222F000
	0x01ED0920 ADRP X20, 0x222F000
	0x01ED0924 MOV X0, X9
	0x01ED0928 LDR X1, [X8]
	0x01ED092C LDR X21, [X21 + 0xB80]
	0x01ED0930 LDR X20, [X20 + 0xB78]
	0x01ED0934 ADD X8, X31, 0x8
	0x01ED0938 BL 0x2DB9990
	0x01ED093C LDUR V0, [X31 + 0x8]
	0x01ED0940 LDR X8, [X31 + 0x18]
	0x01ED0944 STR V0, [X31 + 0x2]
	0x01ED0948 STR X8, [X31 + 0x30]
	0x01ED094C LDR X1, [X21]
	0x01ED0950 ADD X0, X31, 0x20
	0x01ED0954 BL 0x2BC2C98
	0x01ED0958 TBZ X0, 0x0, 0x1ED0978
	0x01ED095C CBZ X19, 0x1ED0994
	0x01ED0960 LDR W1, [X31 + 0x30]
	0x01ED0964 MOVZ W2, 0x1
	0x01ED0968 MOVZ W3, 0x1
	0x01ED096C MOV X0, X19
	0x01ED0970 BL 0x1ED0A18
	0x01ED0974 B 0x1ED094C
	0x01ED0978 LDR X1, [X20]
	0x01ED097C ADD X0, X31, 0x20
	0x01ED0980 BL 0x2BC2C94
	0x01ED0984 LDP X20, X19, [X31 + 0x50]
	0x01ED0988 LDP X30, X21, [X31 + 0x40]
	0x01ED098C ADD X31, X31, 0x60
	0x01ED0990 RET
	0x01ED0994 BL 0x1C16F20
	0x01ED0998 BL 0x1C16F20
	0x01ED099C B 0x1ED09A4
	0x01ED09A0 B 0x1ED09A4
	0x01ED09A4 MOV X19, X0
	0x01ED09A8 CMP W1, 0x1
	0x01ED09AC B.NE 0x1ED09E0
	0x01ED09B0 MOV X0, X19
	0x01ED09B4 BL 0x3EB1AD0
	0x01ED09B8 LDR X20, [X0]
	0x01ED09BC BL 0x3EB1AE0
	0x01ED09C0 ADRP X8, 0x222F000
	0x01ED09C4 LDR X8, [X8 + 0xB78]
	0x01ED09C8 ADD X0, X31, 0x20
	0x01ED09CC LDR X1, [X8]
	0x01ED09D0 BL 0x2BC2C94
	0x01ED09D4 CBZ X20, 0x1ED0984
	0x01ED09D8 MOV X0, X20
	0x01ED09DC BL 0x1C16F18
	0x01ED09E0 MOV X20, X31
	0x01ED09E4 B 0x1ED09EC
	0x01ED09E8 MOV X19, X0
	0x01ED09EC ADRP X8, 0x222F000
	0x01ED09F0 LDR X8, [X8 + 0xB78]
	0x01ED09F4 LDR X1, [X8]
	0x01ED09F8 ADD X0, X31, 0x20
	0x01ED09FC BL 0x2BC2C94
	0x01ED0A00 CBNZ X20, 0x1ED0A0C
	0x01ED0A04 MOV X0, X19
	0x01ED0A08 BL 0x1D2C690
	0x01ED0A0C MOV X0, X20
	0x01ED0A10 BL 0x1C16F18
	0x01ED0A14 BL 0x1990590
	0x01ED0A18 SUB X31, X31, 0x50
	0x01ED0A1C STP X30, X23, [X31 + 0x20]
	0x01ED0A20 STP X22, X21, [X31 + 0x30]
	0x01ED0A24 STP X20, X19, [X31 + 0x40]
	0x01ED0A28 ADRP X19, 0x2509000
	0x01ED0A2C LDRB W8, [X19 + 0x522]
	0x01ED0A30 MOV W22, W3
	0x01ED0A34 MOV W23, W2
	0x01ED0A38 MOV X21, X1
	0x01ED0A3C MOV X20, X0
	0x01ED0A40 TBNZ X8, 0x0, 0x1ED0A88
	0x01ED0A44 ADRP X0, 0x222F000
	0x01ED0A48 LDR X0, [X0 + 0xF38]
	0x01ED0A4C BL 0x1C16CF4
	0x01ED0A50 ADRP X0, 0x222F000
	0x01ED0A54 LDR X0, [X0 + 0xF40]
	0x01ED0A58 BL 0x1C16CF4
	0x01ED0A5C ADRP X0, 0x222E000
	0x01ED0A60 LDR X0, [X0 + 0xA90]
	0x01ED0A64 BL 0x1C16CF4
	0x01ED0A68 ADRP X0, 0x222F000
	0x01ED0A6C LDR X0, [X0 + 0xF48]
	0x01ED0A70 BL 0x1C16CF4
	0x01ED0A74 ADRP X0, 0x2223000
	0x01ED0A78 LDR X0, [X0 + 0x598]
	0x01ED0A7C BL 0x1C16CF4
	0x01ED0A80 MOVZ W8, 0x1
	0x01ED0A84 STRB W8, [X19 + 0x522]
	0x01ED0A88 STP X31, X31, [X31 + 0x10]
	0x01ED0A8C LDR X0, [X20 + 0x18]
	0x01ED0A90 CBZ X0, 0x1ED0D40
	0x01ED0A94 ADRP X8, 0x222F000
	0x01ED0A98 LDR X8, [X8 + 0xF40]
	0x01ED0A9C AND X19, X21, 0x0
	0x01ED0AA0 ADD X2, X31, 0x18
	0x01ED0AA4 MOV X1, X19
	0x01ED0AA8 LDR X3, [X8]
	0x01ED0AAC BL 0x2A6903C
	0x01ED0AB0 TBNZ X0, 0x0, 0x1ED0D28

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+208], X29
	003 Move [X31+224], X30
	004 Move [X31+232], X25
	005 Move [X31+240], X24
	006 Move [X31+248], X23
	007 Move [X31+256], X22
	008 Move [X31+264], X21
	009 Move [X31+272], X20
	010 Move [X31+280], X19
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X23+40]
	013 Move X24, 0x250A000
	014 Move X25, 0x2230000
	015 Move X21, 0x2230000
	016 Move [X31+200], X8
	017 Move X22, 0x2230000
	018 Move W8, [X24+1249]
	019 Move X25, [X25+3816]
	020 Move X21, [X21+3824]
	021 Move X22, [X22+3832]
	022 Move X20, X1
	023 Move X19, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {48}
	028 Move X0, 0x2230000
	029 Move X0, [X0+3824]
	030 Call 0x1C17CF4
	031 Move X0, 0x2230000
	032 Move X0, [X0+3816]
	033 Call 0x1C17CF4
	034 Move X0, 0x222F000
	035 Move X0, [X0+1984]
	036 Call 0x1C17CF4
	037 Move X0, 0x2224000
	038 Move X0, [X0+1448]
	039 Call 0x1C17CF4
	040 Move X0, 0x2227000
	041 Move X0, [X0+920]
	042 Call 0x1C17CF4
	043 Move X0, 0x2230000
	044 Move X0, [X0+3832]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X24+1249], W8
	048 Move X0, [X25]
	049 Call 0x1C17F10
	050 Move X1, [X21]
	051 Move X21, X0
	052 Call Dictionary`2<NetworkId, Object>..ctor, X0
	053 Add X0, X31, 80
	054 Move W2, 80
	055 Move X1, X20
	056 Move [X19+432], X21
	057 Call 0x3EB2AC0
	058 Add X1, X31, 80
	059 Move X0, X19
	060 Move X2, X31
	061 Call Simulation..ctor, X0, X1
	062 Move X0, [X22]
	063 Call 0x1C17F10
	064 Move X1, X31
	065 Move X21, X0
	066 Call ServerTimeProvider..ctor, X0
	067 Add X8, X31, 40
	068 Move X0, X19
	069 Move [X19+104], X21
	070 Call Server.CreateRuntimeConfiguration, X0
	071 Compare X21, 0
	072 JumpIfEqual {188}
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 Move W8, [X31+72]
	076 Move X24, 0x222F000
	077 Move [X31], V0
	078 Move [X31+8], V1
	079 Move [X31+32], W8
	080 Move X8, [X21]
	081 Move X24, [X24+1984]
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Move X1, [X24]
	084 Compare X9, 0
	085 JumpIfEqual {92}
	086 Move X10, [X8+176]
	087 Add X10, X10, 8
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Subtract X9, X9, 1
	091 Add X10, X10, 16
	092 Move W2, 1
	093 Move X0, X21
	094 Call 0x1C5D788
	095 Move W9, [X10]
	096 Add W9, W9, 1
	097 Add X8, X8, W9
	098 Add X0, X8, 312
	099 Move V0, [X31]
	100 Move V1, [X31+16]
	101 Move W8, [X31+32]
	102 Move X9, [X0]
	103 Add X1, X31, 160
	104 Move [X31+160], V0
	105 Move [X31+168], V1
	106 Move [X31+192], W8
	107 Move X2, [X0+8]
	108 Move X0, X21
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move X8, [X20+64]
	111 Compare X8, 0
	112 JumpIfEqual {174}
	113 Move W8, [X20+56]
	114 Compare W8, 0
	115 JumpIfEqual {174}
	116 Move X8, 0x2227000
	117 Move X8, [X8+920]
	118 Move X0, [X8]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {123}
	122 Call 0x1C17DFC
	123 Move W8, [X20+72]
	124 Compare W8, 0
	125 JumpIfEqual {174}
	126 Move X21, [X19+104]
	127 Compare X21, 0
	128 JumpIfEqual {188}
	129 Move X8, [X21]
	130 Move W22, [X20+56]
	131 Move X1, [X24]
	132 NotImplemented "Instruction LDRH not yet implemented."
	133 Compare X9, 0
	134 JumpIfEqual {141}
	135 Move X10, [X8+176]
	136 Add X10, X10, 8
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Subtract X9, X9, 1
	140 Add X10, X10, 16
	141 Move W2, 3
	142 Move X0, X21
	143 Call 0x1C5D788
	144 Move W9, [X10]
	145 Add W9, W9, 3
	146 Add X8, X8, W9
	147 Add X0, X8, 312
	148 Move X8, [X0]
	149 Move X2, [X0+8]
	150 Move D0, X31
	151 Move X0, X21
	152 Move X1, X22
	153 NotImplemented "Instruction BLR not yet implemented."
	154 Move W8, 1
	155 Move [X19+208], W8
	156 Move W8, [X20+56]
	157 Move [X19+72], W8
	158 Move X8, 0x2224000
	159 Move X8, [X8+1448]
	160 Move W21, [X20+72]
	161 Move X0, [X8]
	162 Move W8, [X0+224]
	163 Compare W8, 0
	164 JumpIfNotEqual {166}
	165 Call 0x1C17DFC
	166 Move W0, 1023
	167 Move W1, W21
	168 Move X2, X31
	169 Call Math.Max, X0, X1
	170 Move [X19+328], W0
	171 Move X1, [X20+64]
	172 Move X0, X19
	173 Call Server.ReadHostMigrationData, X0, X1
	174 Move X8, [X23+40]
	175 Move X9, [X31+200]
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move X20, [X31+272]
	178 Move X19, [X31+280]
	179 Move X22, [X31+256]
	180 Move X21, [X31+264]
	181 Move X24, [X31+240]
	182 Move X23, [X31+248]
	183 Move X30, [X31+224]
	184 Move X25, [X31+232]
	185 Move X29, [X31+208]
	186 Add X31, X31, 288
	187 Return 
	188 Call 0x1C17F20
	189 Call 0x3EB2B20

Method: System.Void Disconnect(Fusion.PlayerRef player, System.Byte[] token)

Disassembly:
	0x01ED0D44 BL 0x1C16F28
	0x01ED0D48 STR W21, [X31 + 0x8]
	0x01ED0D4C ADRP X0, 0x2226000
	0x01ED0D50 LDR X0, [X0 + 0x398]
	0x01ED0D54 BL 0x1C16D08
	0x01ED0D58 ADD X1, X31, 0x8
	0x01ED0D5C BL 0x1C16E04
	0x01ED0D60 MOV X19, X0
	0x01ED0D64 ADRP X0, 0x222F000
	0x01ED0D68 LDR X0, [X0 + 0xF50]
	0x01ED0D6C BL 0x1C16D08
	0x01ED0D70 MOV X1, X19
	0x01ED0D74 MOV X2, X31
	0x01ED0D78 BL 0x321EFD0
	0x01ED0D7C MOV X19, X0
	0x01ED0D80 ADRP X0, 0x2223000
	0x01ED0D84 LDR X0, [X0 + 0x5B0]
	0x01ED0D88 BL 0x1C16D08
	0x01ED0D8C BL 0x1C16F10
	0x01ED0D90 MOV X1, X19
	0x01ED0D94 MOV X2, X31
	0x01ED0D98 MOV X20, X0
	0x01ED0D9C BL 0x337DF1C
	0x01ED0DA0 ADRP X0, 0x222F000
	0x01ED0DA4 LDR X0, [X0 + 0xF58]
	0x01ED0DA8 BL 0x1C16D08
	0x01ED0DAC MOV X1, X0
	0x01ED0DB0 MOV X0, X20
	0x01ED0DB4 BL 0x1C16DEC
	0x01ED0DB8 BL 0x1C16F20
	0x01ED0DBC BL 0x1C16F20
	0x01ED0DC0 B 0x1ED0DC4
	0x01ED0DC4 MOV X19, X0
	0x01ED0DC8 CMP W1, 0x1
	0x01ED0DCC B.NE 0x1ED0E50
	0x01ED0DD0 MOV X0, X19
	0x01ED0DD4 BL 0x3EB1AD0
	0x01ED0DD8 MOV X19, X0
	0x01ED0DDC ADRP X0, 0x2223000
	0x01ED0DE0 LDR X0, [X0 + 0x7D0]
	0x01ED0DE4 BL 0x1C16D08
	0x01ED0DE8 LDR X8, [X19]
	0x01ED0DEC LDR X1, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x250A000
	007 Move W8, [X22+1250]
	008 Move X19, X2
	009 Move X21, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2229000
	016 Move X0, [X0+32]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1250], W8
	020 And X21, X21, 0
	021 Move X0, X20
	022 Move X1, X21
	023 Move X2, X31
	024 Move [X31+8], X31
	025 Call Simulation.PlayerValid, X0, X1
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {52}
	030 Move X0, [X20+184]
	031 Compare X0, 0
	032 JumpIfEqual {58}
	033 Move X8, 0x2229000
	034 Move X8, [X8+32]
	035 Add X2, X31, 8
	036 Move X1, X21
	037 Move X3, [X8]
	038 Call Dictionary`2<PlayerRef, Object>.TryGetValue, X0, X1, X2
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {52}
	043 Move X8, [X31+8]
	044 Compare X8, 0
	045 JumpIfEqual {58}
	046 Move X0, [X20+304]
	047 Move X1, [X8+208]
	048 Move W2, 3
	049 Move X3, X19
	050 Move X4, X31
	051 Call NetPeerGroup.DisconnectInternal, X0, X1, X2, X3
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X30, [X31+48]
	057 Return 
	058 Call 0x1C17F20

Method: System.Void Disconnect(Fusion.Sockets.NetAddress address)

Disassembly:
	0x01ED0DF0 BL 0x1C17270
	0x01ED0DF4 TBZ X0, 0x0, 0x1ED0E28
	0x01ED0DF8 LDR X19, [X19]
	0x01ED0DFC BL 0x3EB1AE0
	0x01ED0E00 ADRP X0, 0x222B000
	0x01ED0E04 LDR X0, [X0 + 0x8B0]
	0x01ED0E08 BL 0x1C16D08
	0x01ED0E0C LDR W8, [X0 + 0xE0]
	0x01ED0E10 CBNZ W8, 0x1ED0E18
	0x01ED0E14 BL 0x1C16DFC
	0x01ED0E18 MOV X0, X19
	0x01ED0E1C MOV X1, X31
	0x01ED0E20 BL 0x1E3E4C8
	0x01ED0E24 B 0x1ED0D28
	0x01ED0E28 MOVZ W0, 0x8
	0x01ED0E2C BL 0x3EB1AF0
	0x01ED0E30 LDR X8, [X19]
	0x01ED0E34 STR X8, [X0]
	0x01ED0E38 ADRP X1, 0x1FE4000
	0x01ED0E3C ADD X1, X1, 0xE58
	0x01ED0E40 MOV X2, X31
	0x01ED0E44 BL 0x3EB1B00
	0x01ED0E48 MOV X19, X0
	0x01ED0E4C BL 0x3EB1AE0
	0x01ED0E50 MOV X0, X19
	0x01ED0E54 BL 0x1D2C690
	0x01ED0E58 BL 0x1990590
	0x01ED0E5C SUB X31, X31, 0x30
	0x01ED0E60 STP X30, X19, [X31 + 0x20]
	0x01ED0E64 LDR X8, [X0 + 0x108]
	0x01ED0E68 CBZ X8, 0x1ED0EB0
	0x01ED0E6C LDR X1, [X8 + 0x38]
	0x01ED0E70 MOV X19, X0
	0x01ED0E74 ADD X0, X31, 0x0
	0x01ED0E78 STP X31, X31, [X31]
	0x01ED0E7C BL 0x1ECEA88
	0x01ED0E80 LDR V0, [X31]
	0x01ED0E84 STR V0, [X31 + 0x1]
	0x01ED0E88 LDR X8, [X19 + 0x108]
	0x01ED0E8C CBZ X8, 0x1ED0EB0
	0x01ED0E90 LDR X1, [X8 + 0x20]
	0x01ED0E94 ADD X0, X31, 0x10
	0x01ED0E98 BL 0x1ECEB10
	0x01ED0E9C LDR X0, [X19 + 0xA8]
	0x01ED0EA0 CBZ X0, 0x1ED0EB0
	0x01ED0EA4 LDP X30, X19, [X31 + 0x20]
	0x01ED0EA8 ADD X31, X31, 0x30
	0x01ED0EAC B 0x1ECDCE4
	0x01ED0EB0 BL 0x1C16F20
	0x01ED0EB4 SUB X31, X31, 0x60
	0x01ED0EB8 STR X30, [X31 + 0x30]
	0x01ED0EBC STP X22, X21, [X31 + 0x40]
	0x01ED0EC0 STP X20, X19, [X31 + 0x50]
	0x01ED0EC4 MRS X21, 0xC000
	0x01ED0EC8 LDR X8, [X21 + 0x28]
	0x01ED0ECC ADRP X22, 0x2509000
	0x01ED0ED0 ADRP X20, 0x2226000
	0x01ED0ED4 MOV X19, X0
	0x01ED0ED8 STR X8, [X31 + 0x28]
	0x01ED0EDC LDRB W8, [X22 + 0x4E8]
	0x01ED0EE0 LDR X20, [X20 + 0x398]
	0x01ED0EE4 TBNZ X8, 0x0, 0x1ED0F08
	0x01ED0EE8 ADRP X0, 0x2226000
	0x01ED0EEC LDR X0, [X0 + 0x398]
	0x01ED0EF0 BL 0x1C16CF4
	0x01ED0EF4 ADRP X0, 0x222F000
	0x01ED0EF8 LDR X0, [X0 + 0xF60]
	0x01ED0EFC BL 0x1C16CF4
	0x01ED0F00 MOVZ W8, 0x1
	0x01ED0F04 STRB W8, [X22 + 0x4E8]
	0x01ED0F08 LDR X0, [X20]
	0x01ED0F0C ADRP X20, 0x222F000
	0x01ED0F10 LDR W8, [X0 + 0xE0]
	0x01ED0F14 LDR X20, [X20 + 0xF60]
	0x01ED0F18 CBNZ W8, 0x1ED0F20
	0x01ED0F1C BL 0x1C16DFC
	0x01ED0F20 MOV X0, X31
	0x01ED0F24 BL 0x1E92E48
	0x01ED0F28 LDR X5, [X20]
	0x01ED0F2C AND X1, X0, 0x0
	0x01ED0F30 MOV X0, X19
	0x01ED0F34 MOV W2, W31
	0x01ED0F38 MOV X3, X31
	0x01ED0F3C MOV X4, X31
	0x01ED0F40 BL 0x2254C34
	0x01ED0F44 MOV X20, X0
	0x01ED0F48 ADD X8, X31, 0x0
	0x01ED0F4C MOV X0, X19
	0x01ED0F50 BL 0x1ECFAB4
	0x01ED0F54 LDR W8, [X31 + 0x20]
	0x01ED0F58 LDP V1, V0, [X31]
	0x01ED0F5C STR W8, [X20 + 0x20]
	0x01ED0F60 STP V1, V0, [X20]
	0x01ED0F64 LDR X8, [X21 + 0x28]
	0x01ED0F68 LDR X9, [X31 + 0x28]
	0x01ED0F6C CMP X8, X9
	0x01ED0F70 B.NE 0x1ED0F88
	0x01ED0F74 LDP X20, X19, [X31 + 0x50]
	0x01ED0F78 LDP X22, X21, [X31 + 0x40]
	0x01ED0F7C LDR X30, [X31 + 0x30]
	0x01ED0F80 ADD X31, X31, 0x60
	0x01ED0F84 RET
	0x01ED0F88 BL 0x3EB1B20
	0x01ED0F8C STP X30, X21, [X31 - 0x20]!
	0x01ED0F90 STP X20, X19, [X31 + 0x10]
	0x01ED0F94 ADRP X20, 0x2509000
	0x01ED0F98 ADRP X21, 0x2226000
	0x01ED0F9C LDRB W8, [X20 + 0x4E9]
	0x01ED0FA0 LDR X21, [X21 + 0x398]
	0x01ED0FA4 MOV X19, X0
	0x01ED0FA8 TBNZ X8, 0x0, 0x1ED0FC0
	0x01ED0FAC ADRP X0, 0x2226000
	0x01ED0FB0 LDR X0, [X0 + 0x398]
	0x01ED0FB4 BL 0x1C16CF4
	0x01ED0FB8 MOVZ W8, 0x1
	0x01ED0FBC STRB W8, [X20 + 0x4E9]
	0x01ED0FC0 LDR X0, [X21]
	0x01ED0FC4 LDR W8, [X0 + 0xE0]
	0x01ED0FC8 CBNZ W8, 0x1ED0FD0
	0x01ED0FCC BL 0x1C16DFC
	0x01ED0FD0 MOV X0, X31
	0x01ED0FD4 BL 0x1E92E48
	0x01ED0FD8 AND X1, X0, 0x0
	0x01ED0FDC MOV X0, X19
	0x01ED0FE0 MOV X2, X31
	0x01ED0FE4 BL 0x1EC93AC
	0x01ED0FE8 TBZ X0, 0x0, 0x1ED0FF8
	0x01ED0FEC LDP X20, X19, [X31 + 0x10]
	0x01ED0FF0 LDP X30, X21, [X31], #0x20
	0x01ED0FF4 RET
	0x01ED0FF8 MOV X0, X19
	0x01ED0FFC LDP X20, X19, [X31 + 0x10]
	0x01ED1000 LDP X30, X21, [X31], #0x20
	0x01ED1004 B 0x1ED0EB4
	0x01ED1008 STR X30, [X31 - 0x30]!
	0x01ED100C STP X22, X21, [X31 + 0x10]
	0x01ED1010 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+112], X26
	004 Move [X31+120], X25
	005 Move [X31+128], X24
	006 Move [X31+136], X23
	007 Move [X31+144], X22
	008 Move [X31+152], X21
	009 Move [X31+160], X20
	010 Move [X31+168], X19
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X21+40]
	013 Move X22, 0x250A000
	014 Move X19, X1
	015 Move X20, X0
	016 Move [X31+88], X8
	017 Move W8, [X22+1251]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {42}
	022 Move X0, 0x222F000
	023 Move X0, [X0+2960]
	024 Call 0x1C17CF4
	025 Move X0, 0x222F000
	026 Move X0, [X0+2968]
	027 Call 0x1C17CF4
	028 Move X0, 0x222F000
	029 Move X0, [X0+2976]
	030 Call 0x1C17CF4
	031 Move X0, 0x222F000
	032 Move X0, [X0+2984]
	033 Call 0x1C17CF4
	034 Move X0, 0x222E000
	035 Move X0, [X0+120]
	036 Call 0x1C17CF4
	037 Move X0, 0x222F000
	038 Move X0, [X0+2992]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X22+1251], W8
	042 Move [X31], X31
	043 Move [X31+8], X31
	044 Move [X31+16], X31
	045 Move X0, [X20+176]
	046 Compare X0, 0
	047 JumpIfEqual {128}
	048 Move X8, 0x222F000
	049 Move X8, [X8+2960]
	050 Move X1, [X8]
	051 Call Dictionary`2<Int32, Object>.get_Values, X0
	052 Compare X0, 0
	053 JumpIfEqual {128}
	054 Move X8, 0x222F000
	055 Move X8, [X8+2992]
	056 Move X23, 0x222F000
	057 Move X24, 0x222E000
	058 Move X22, 0x222F000
	059 Move X1, [X8]
	060 Move X23, [X23+2976]
	061 Move X24, [X24+120]
	062 Move X22, [X22+2968]
	063 Add X8, X31, 64
	064 Call ValueCollection<Int32, Object>.GetEnumerator, X0
	065 Move V0, [X31+4]
	066 Move X8, [X31+80]
	067 Move [X31], V0
	068 Move [X31+16], X8
	069 Move X1, [X23]
	070 Add X0, X31, 0
	071 Call Enumerator<Int32, Object>.MoveNext, X0
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {109}
	076 Move X25, [X31+16]
	077 Compare X25, 0
	078 JumpIfEqual {126}
	079 Move X26, [X25+208]
	080 Compare X26, 0
	081 JumpIfEqual {127}
	082 Move X8, [X19+16]
	083 Move V0, [X19]
	084 Move X0, [X24]
	085 Move [X31+80], X8
	086 Move [X31+4], V0
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move V0, [X31+4]
	092 Move X8, [X31+80]
	093 Add X0, X26, 40
	094 Move [X31+2], V0
	095 Move [X31+48], X8
	096 Add X1, X31, 32
	097 Move X2, X31
	098 Call NetAddress.Equals, X0, X1
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {69}
	103 Move X0, [X20+304]
	104 Move X1, [X25+208]
	105 Move W2, 3
	106 Move X3, X31
	107 Move X4, X31
	108 Call NetPeerGroup.DisconnectInternal, X0, X1, X2, X3
	109 Move X1, [X22]
	110 Add X0, X31, 0
	111 Call Enumerator<Int32, Object>.Dispose, X0
	112 Move X8, [X21+40]
	113 Move X9, [X31+88]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X20, [X31+160]
	116 Move X19, [X31+168]
	117 Move X22, [X31+144]
	118 Move X21, [X31+152]
	119 Move X24, [X31+128]
	120 Move X23, [X31+136]
	121 Move X26, [X31+112]
	122 Move X25, [X31+120]
	123 Move X30, [X31+96]
	124 Add X31, X31, 176
	125 Return 
	126 Call 0x1C17F20
	127 Call 0x1C17F20
	128 Call 0x1C17F20
	129 Call 0x3EB2B20
	130 Move X19, X0
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X0, X19
	133 Call 0x3EB2AD0
	134 Move X20, [X0]
	135 Call 0x3EB2AE0
	136 Move X1, [X22]
	137 Add X0, X31, 0
	138 Call Enumerator<Int32, Object>.Dispose, X0
	139 Compare X20, 0
	140 JumpIfEqual {112}
	141 Move X0, X20
	142 Call 0x1C17F18
	143 Move X20, X31
	144 Move X19, X0
	145 Move X1, [X22]
	146 Add X0, X31, 0
	147 Call Enumerator<Int32, Object>.Dispose, X0
	148 Compare X20, 0
	149 JumpIfNotEqual {152}
	150 Move X0, X19
	151 Call 0x1D2D690
	152 Move X0, X20
	153 Call 0x1C17F18
	154 Call 0x1991590

Method: System.Void AfterSimulation()

Disassembly:
	0x01ED1014 ADRP X21, 0x2508000
	0x01ED1018 ADRP X22, 0x2225000
	0x01ED101C LDRB W8, [X21 + 0x4EA]
	0x01ED1020 LDR X22, [X22 + 0x398]
	0x01ED1024 MOV X19, X1
	0x01ED1028 MOV X20, X0
	0x01ED102C TBNZ X8, 0x0, 0x1ED1044
	0x01ED1030 ADRP X0, 0x2225000
	0x01ED1034 LDR X0, [X0 + 0x398]
	0x01ED1038 BL 0x1C16CF4
	0x01ED103C MOVZ W8, 0x1
	0x01ED1040 STRB W8, [X21 + 0x4EA]
	0x01ED1044 LDR X0, [X22]
	0x01ED1048 LDR W8, [X0 + 0xE0]
	0x01ED104C CBNZ W8, 0x1ED1054
	0x01ED1050 BL 0x1C16DFC
	0x01ED1054 MOV X0, X31
	0x01ED1058 BL 0x1E92E50
	0x01ED105C AND X1, X0, 0x0
	0x01ED1060 MOVZ W2, 0xD
	0x01ED1064 MOV X0, X20
	0x01ED1068 MOV X3, X31
	0x01ED106C MOV X4, X31
	0x01ED1070 MOV X5, X31
	0x01ED1074 BL 0x1EC9828
	0x01ED1078 CBZ X0, 0x1ED10BC
	0x01ED107C STR W19, [X0 + 0x20]
	0x01ED1080 MOV X0, X31
	0x01ED1084 BL 0x1E92E58
	0x01ED1088 AND X1, X0, 0x0
	0x01ED108C MOVZ W2, 0xA
	0x01ED1090 MOV X0, X20
	0x01ED1094 MOV X3, X31
	0x01ED1098 MOV X4, X31
	0x01ED109C MOV X5, X31
	0x01ED10A0 BL 0x1EC9828
	0x01ED10A4 CBZ X0, 0x1ED10BC
	0x01ED10A8 STR W19, [X0 + 0x20]
	0x01ED10AC LDP X20, X19, [X31 + 0x20]
	0x01ED10B0 LDP X22, X21, [X31 + 0x10]
	0x01ED10B4 LDR X30, [X31], #0x30
	0x01ED10B8 RET
	0x01ED10BC BL 0x1C16F20
	0x01ED10C0 STP X30, X21, [X31 - 0x20]!
	0x01ED10C4 STP X20, X19, [X31 + 0x10]
	0x01ED10C8 ADRP X20, 0x2508000
	0x01ED10CC ADRP X21, 0x2225000
	0x01ED10D0 LDRB W8, [X20 + 0x4EB]
	0x01ED10D4 LDR X21, [X21 + 0xE40]
	0x01ED10D8 MOV X19, X0
	0x01ED10DC TBNZ X8, 0x0, 0x1ED1100
	0x01ED10E0 ADRP X0, 0x222D000
	0x01ED10E4 LDR X0, [X0 + 0xA90]
	0x01ED10E8 BL 0x1C16CF4
	0x01ED10EC ADRP X0, 0x2225000
	0x01ED10F0 LDR X0, [X0 + 0xE40]
	0x01ED10F4 BL 0x1C16CF4
	0x01ED10F8 MOVZ W8, 0x1
	0x01ED10FC STRB W8, [X20 + 0x4EB]
	0x01ED1100 LDR X0, [X21]
	0x01ED1104 LDR W8, [X0 + 0xE0]
	0x01ED1108 CBNZ W8, 0x1ED1110
	0x01ED110C BL 0x1C16DFC
	0x01ED1110 MOV X0, X31
	0x01ED1114 BL 0x1E8D7EC
	0x01ED1118 AND X1, X0, 0x0
	0x01ED111C MOV X0, X19
	0x01ED1120 BL 0x1ED1008
	0x01ED1124 LDR W8, [X19 + 0x4C]
	0x01ED1128 CMP W8, 0x2
	0x01ED112C B.NE 0x1ED1158
	0x01ED1130 LDR X8, [X19]
	0x01ED1134 MOV X0, X19
	0x01ED1138 LDR X9, [X8 + 0x268]
	0x01ED113C LDR X1, [X8 + 0x270]
	0x01ED1140 BLR X9
	0x01ED1144 AND X1, X0, 0x0
	0x01ED1148 MOVZ W2, 0x1
	0x01ED114C MOV X0, X19
	0x01ED1150 MOV X3, X31
	0x01ED1154 BL 0x1EC3F30
	0x01ED1158 LDR X19, [X19 + 0x40]
	0x01ED115C CBZ X19, 0x1ED11CC
	0x01ED1160 ADRP X10, 0x222D000
	0x01ED1164 LDR X8, [X19]
	0x01ED1168 LDR X10, [X10 + 0xA90]
	0x01ED116C LDRH W9, [X8 + 0x12E]
	0x01ED1170 LDR X1, [X10]
	0x01ED1174 CBZ X9, 0x1ED1198
	0x01ED1178 LDR X10, [X8 + 0xB0]
	0x01ED117C ADD X10, X10, 0x8
	0x01ED1180 LDUR X11, [X10 - 0x8]
	0x01ED1184 CMP X11, X1
	0x01ED1188 B.EQ 0x1ED11A8
	0x01ED118C SUBS X9, X9, 0x1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move X20, 0x2509000
	006 Move W8, [X20+1252]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {29}
	012 Move X0, 0x222E000
	013 Move X0, [X0+2960]
	014 Call 0x1C17CF4
	015 Move X0, 0x222E000
	016 Move X0, [X0+2968]
	017 Call 0x1C17CF4
	018 Move X0, 0x222E000
	019 Move X0, [X0+2976]
	020 Call 0x1C17CF4
	021 Move X0, 0x222E000
	022 Move X0, [X0+2984]
	023 Call 0x1C17CF4
	024 Move X0, 0x222E000
	025 Move X0, [X0+2992]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+1252], W8
	029 Move [X31+8], X31
	030 Move [X31+16], X31
	031 Move [X31+24], X31
	032 Move X8, [X19+88]
	033 Compare X8, 0
	034 JumpIfEqual {75}
	035 Move W8, [X8+20]
	036 NotImplemented "Instruction ORN not yet implemented."
	037 And W31, W8, 3
	038 Move X0, [X19+176]
	039 Compare X0, 0
	040 JumpIfEqual {75}
	041 Move X8, 0x222E000
	042 Move X8, [X8+2960]
	043 Move X1, [X8]
	044 Call Dictionary`2<Int32, Object>.get_Values, X0
	045 Compare X0, 0
	046 JumpIfEqual {75}
	047 Move X8, 0x222E000
	048 Move X8, [X8+2992]
	049 Move X1, [X8]
	050 Add X8, X31, 8
	051 Call ValueCollection<Int32, Object>.GetEnumerator, X0
	052 Move X20, 0x222E000
	053 Move X20, [X20+2976]
	054 Move X1, [X20]
	055 Add X0, X31, 8
	056 Call Enumerator<Int32, Object>.MoveNext, X0
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {65}
	061 Move X1, [X31+24]
	062 Move X0, X19
	063 Move X2, X31
	064 Call Simulation.AOI_UpdateAreaOfInterest, X0, X1
	065 Move X8, 0x222E000
	066 Move X8, [X8+2968]
	067 Add X0, X31, 8
	068 Move X1, [X8]
	069 Call Enumerator<Int32, Object>.Dispose, X0
	070 Move X20, [X31+48]
	071 Move X19, [X31+56]
	072 Move X30, [X31+32]
	073 Add X31, X31, 64
	074 Return 
	075 Call 0x1C17F20
	076 Move X20, X0
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X0, X20
	079 Call 0x3EB2AD0
	080 Move X19, [X0]
	081 Call 0x3EB2AE0
	082 Move X8, 0x222E000
	083 Move X8, [X8+2968]
	084 Add X0, X31, 8
	085 Move X1, [X8]
	086 Call Enumerator<Int32, Object>.Dispose, X0
	087 Compare X19, 0
	088 JumpIfEqual {70}
	089 Move X0, X19
	090 Call 0x1C17F18
	091 Move X19, X31
	092 Move X20, X0
	093 Move X8, 0x222E000
	094 Move X8, [X8+2968]
	095 Move X1, [X8]
	096 Add X0, X31, 8
	097 Call Enumerator<Int32, Object>.Dispose, X0
	098 Compare X19, 0
	099 JumpIfNotEqual {102}
	100 Move X0, X20
	101 Call 0x1D2D690
	102 Move X0, X19
	103 Call 0x1C17F18
	104 Call 0x1991590

Method: System.Int32 BeforeSimulation()

Disassembly:
	0x01ED1190 ADD X10, X10, 0x10
	0x01ED1194 B.NE 0x1ED1180
	0x01ED1198 MOVZ W2, 0x1
	0x01ED119C MOV X0, X19
	0x01ED11A0 BL 0x1C5C788
	0x01ED11A4 B 0x1ED11B8
	0x01ED11A8 LDR W9, [X10]
	0x01ED11AC ADD W9, W9, 0x1
	0x01ED11B0 ADD X8, X8, W9, 0x4, SXTW
	0x01ED11B4 ADD X0, X8, 0x138
	0x01ED11B8 LDP X2, X1, [X0]
	0x01ED11BC MOV X0, X19
	0x01ED11C0 LDP X20, X19, [X31 + 0x10]
	0x01ED11C4 LDP X30, X21, [X31], #0x20
	0x01ED11C8 BR X2
	0x01ED11CC BL 0x1C16F20
	0x01ED11D0 SUB X31, X31, 0x60
	0x01ED11D4 STR X30, [X31 + 0x20]
	0x01ED11D8 STP X24, X23, [X31 + 0x30]
	0x01ED11DC STP X22, X21, [X31 + 0x40]
	0x01ED11E0 STP X20, X19, [X31 + 0x50]
	0x01ED11E4 ADRP X20, 0x2508000
	0x01ED11E8 LDRB W8, [X20 + 0x4EC]
	0x01ED11EC MOV X22, X2
	0x01ED11F0 MOV X21, X1
	0x01ED11F4 MOV X19, X0
	0x01ED11F8 TBNZ X8, 0x0, 0x1ED1240
	0x01ED11FC ADRP X0, 0x222D000
	0x01ED1200 LDR X0, [X0 + 0xA90]
	0x01ED1204 BL 0x1C16CF4
	0x01ED1208 ADRP X0, 0x2222000
	0x01ED120C LDR X0, [X0 + 0x5A8]
	0x01ED1210 BL 0x1C16CF4
	0x01ED1214 ADRP X0, 0x222D000
	0x01ED1218 LDR X0, [X0 + 0x7D8]
	0x01ED121C BL 0x1C16CF4
	0x01ED1220 ADRP X0, 0x222E000
	0x01ED1224 LDR X0, [X0 + 0xE58]
	0x01ED1228 BL 0x1C16CF4
	0x01ED122C ADRP X0, 0x2225000
	0x01ED1230 LDR X0, [X0 + 0xE40]
	0x01ED1234 BL 0x1C16CF4
	0x01ED1238 MOVZ W8, 0x1
	0x01ED123C STRB W8, [X20 + 0x4EC]
	0x01ED1240 AND X23, X22, 0x0
	0x01ED1244 MOV X0, X19
	0x01ED1248 MOV X1, X23
	0x01ED124C MOV X2, X31
	0x01ED1250 STP X31, X31, [X31 + 0x10]
	0x01ED1254 STR X31, [X31 + 0x8]
	0x01ED1258 BL 0x1EC2800
	0x01ED125C MOV X20, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call Simulation.get_IsPlayer, X0
	007 Move TEMP, X0
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfNotEqual {34}
	011 Move X8, [X19]
	012 Move X0, X19
	013 Move X9, [X8+616]
	014 Move X1, [X8+624]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 And X1, X0, 0
	017 Move X0, X19
	018 Move X2, X31
	019 Call Simulation.PlayerValid, X0, X1
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {34}
	024 Move X8, [X19]
	025 Move X0, X19
	026 Move X9, [X8+616]
	027 Move X1, [X8+624]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 And X1, X0, 0
	030 Move X0, X19
	031 Move X2, X31
	032 Move X3, X31
	033 Call Simulation.PlayerAdd, X0, X1, X2
	034 Move V0, [X19+112]
	035 Move V1, [X19+120]
	036 Move X0, X19
	037 Move X1, X31
	038 Move [X19+128], D0
	039 Move [X19+136], S1
	040 Add X20, X19, 72
	041 Call Simulation.get_TickStride, X0
	042 Move W1, W0
	043 Move X0, X20
	044 Move X2, X31
	045 Call Tick.Next, X0, X1
	046 Move [X19+116], W0
	047 Move X0, X19
	048 Move X1, X31
	049 Call Simulation.get_TickStride, X0
	050 Move W1, W0
	051 Move X0, X20
	052 Move X2, X31
	053 Call Tick.Next, X0, X1
	054 Move [X19+112], W0
	055 Move [X19+120], W31
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move W0, W31
	059 Move X30, [X31+32]
	060 Return X0

Method: System.Void NetworkDisconnected(Fusion.Sockets.NetConnection* connection, Fusion.Sockets.NetDisconnectReason reason)

Disassembly:
	0x01ED1260 TBZ X0, 0x0, 0x1ED15BC

ISIL:
	001 Return 

Method: System.Void RecvPacket()

Disassembly:
	0x01ED1264 MOV X0, X19
	0x01ED1268 MOV X1, X31
	0x01ED126C BL 0x1EC08DC
	0x01ED1270 TBZ X0, 0x0, 0x1ED13C0
	0x01ED1274 LDR X8, [X19]
	0x01ED1278 MOV X0, X19
	0x01ED127C LDR X9, [X8 + 0x268]
	0x01ED1280 LDR X1, [X8 + 0x270]
	0x01ED1284 BLR X9
	0x01ED1288 ADRP X8, 0x2225000
	0x01ED128C LDR X8, [X8 + 0xE40]
	0x01ED1290 MOV X20, X0
	0x01ED1294 LDR X8, [X8]
	0x01ED1298 LDR W9, [X8 + 0xE0]
	0x01ED129C CBNZ W9, 0x1ED12A8
	0x01ED12A0 MOV X0, X8
	0x01ED12A4 BL 0x1C16DFC
	0x01ED12A8 CMP W20, W22
	0x01ED12AC B.NE 0x1ED13C0
	0x01ED12B0 LDR X0, [X19 + 0x98]
	0x01ED12B4 CBZ X0, 0x1ED15D8
	0x01ED12B8 BL 0x1ECE11C
	0x01ED12BC LDR X8, [X19]
	0x01ED12C0 MOV X20, X0
	0x01ED12C4 MOV X0, X19
	0x01ED12C8 LDR X9, [X8 + 0x268]
	0x01ED12CC LDR X1, [X8 + 0x270]
	0x01ED12D0 BLR X9
	0x01ED12D4 CBZ X20, 0x1ED15D8
	0x01ED12D8 LDR X8, [X20 + 0x20]
	0x01ED12DC STR W0, [X20 + 0x18]
	0x01ED12E0 CBZ X8, 0x1ED15D8
	0x01ED12E4 LDR W9, [X19 + 0x48]
	0x01ED12E8 MOV X0, X19
	0x01ED12EC MOV X1, X31
	0x01ED12F0 STR W9, [X8]
	0x01ED12F4 LDR X21, [X20 + 0x20]
	0x01ED12F8 BL 0x1EBDFA8
	0x01ED12FC CBZ X21, 0x1ED15D8
	0x01ED1300 STR W0, [X21 + 0xC]
	0x01ED1304 LDR X23, [X20 + 0x20]
	0x01ED1308 MOV X0, X19
	0x01ED130C MOV X1, X31
	0x01ED1310 BL 0x1EBDFA8
	0x01ED1314 MOV X21, X0
	0x01ED1318 MOV X0, X19
	0x01ED131C MOV X1, X31
	0x01ED1320 BL 0x1EC048C
	0x01ED1324 ADRP X8, 0x2222000
	0x01ED1328 LDR X8, [X8 + 0x5A8]
	0x01ED132C MOV W22, W0
	0x01ED1330 LDR X8, [X8]
	0x01ED1334 LDR W9, [X8 + 0xE0]
	0x01ED1338 CBNZ W9, 0x1ED1344
	0x01ED133C MOV X0, X8
	0x01ED1340 BL 0x1C16DFC
	0x01ED1344 SUB W1, W21, W22
	0x01ED1348 MOV W0, W31
	0x01ED134C MOV X2, X31
	0x01ED1350 BL 0x337EDF0
	0x01ED1354 CBZ X23, 0x1ED15D8
	0x01ED1358 BIC W8, W0, W0, 0x1F
	0x01ED135C STR W8, [X23 + 0x8]
	0x01ED1360 LDR X8, [X20 + 0x20]
	0x01ED1364 CBZ X8, 0x1ED15D8
	0x01ED1368 LDR V0, [X19 + 0x8C]
	0x01ED136C STR S0, [X8 + 0x4]
	0x01ED1370 LDR X19, [X19 + 0x40]
	0x01ED1374 CBZ X19, 0x1ED15D8
	0x01ED1378 ADRP X10, 0x222D000
	0x01ED137C LDR X8, [X19]
	0x01ED1380 LDR X10, [X10 + 0xA90]
	0x01ED1384 LDRH W9, [X8 + 0x12E]
	0x01ED1388 LDR X1, [X10]
	0x01ED138C CBZ X9, 0x1ED13B0
	0x01ED1390 LDR X10, [X8 + 0xB0]
	0x01ED1394 ADD X10, X10, 0x8
	0x01ED1398 LDUR X11, [X10 - 0x8]
	0x01ED139C CMP X11, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2509000
	006 Move W8, [X20+1253]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x222E000
	013 Move X0, [X0+1984]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1253], W8
	017 Move X0, X19
	018 Move X1, X31
	019 Call Simulation.get_Topology, X0
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X0, X19
	023 Call Server.ReadInput, X0
	024 Move X0, X19
	025 Call Server.ReadStateTick, X0
	026 Move X0, [X19+168]
	027 Compare X0, 0
	028 JumpIfEqual {93}
	029 Call StateReplicator.RecvPacket, X0
	030 Move X20, [X19+104]
	031 Compare X20, 0
	032 JumpIfEqual {93}
	033 Move X10, 0x222E000
	034 Move X8, [X20]
	035 Move X10, [X10+1984]
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Move X1, [X10]
	038 Compare X9, 0
	039 JumpIfEqual {46}
	040 Move X10, [X8+176]
	041 Add X10, X10, 8
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Subtract X9, X9, 1
	045 Add X10, X10, 16
	046 Move X0, X20
	047 Move W2, W31
	048 Call 0x1C5D788
	049 NotImplemented "Instruction LDRSW not yet implemented."
	050 Add X8, X8, X9
	051 Add X0, X8, 312
	052 Move X8, [X0]
	053 Move X1, [X0+8]
	054 Move X0, X20
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {88}
	060 Move X8, [X19+272]
	061 Compare X8, 0
	062 JumpIfEqual {93}
	063 Move X8, [X8+48]
	064 Compare X8, 0
	065 JumpIfEqual {93}
	066 Move W20, [X19+72]
	067 Move W21, [X8+196]
	068 Move X0, X19
	069 Move X1, X31
	070 Call Simulation.get_TickDeltaDouble, X0
	071 Subtract W8, W20, W21
	072 NotImplemented "Instruction SCVTF not yet implemented."
	073 Multiply D0, D0, D1
	074 Move D1, 1
	075 NotImplemented "Instruction FCMP not yet implemented."
	076 Move X8, [X19+272]
	077 Compare X8, 0
	078 JumpIfEqual {93}
	079 Move X0, [X8+48]
	080 Compare X0, 0
	081 JumpIfEqual {93}
	082 Move X20, [X31+16]
	083 Move X19, [X31+24]
	084 Move X30, [X31+32]
	085 Move X21, [X31+40]
	086 Call SimulationConnection.ResetTimeFeedback, X0
	087 Return 
	088 Move X20, [X31+16]
	089 Move X19, [X31+24]
	090 Move X30, [X31+32]
	091 Move X21, [X31+40]
	092 Return 
	093 Call 0x1C17F20

Method: System.Void NetworkConnected(Fusion.Sockets.NetConnection* connection)

Disassembly:
	0x01ED1858 BL 0x1C16CF4
	0x01ED185C ADRP X0, 0x222E000
	0x01ED1860 LDR X0, [X0 + 0xFB0]
	0x01ED1864 BL 0x1C16CF4
	0x01ED1868 ADRP X0, 0x222E000
	0x01ED186C LDR X0, [X0 + 0xFB8]
	0x01ED1870 BL 0x1C16CF4
	0x01ED1874 ADRP X0, 0x222E000
	0x01ED1878 LDR X0, [X0 + 0xFC0]
	0x01ED187C BL 0x1C16CF4
	0x01ED1880 ADRP X0, 0x222D000
	0x01ED1884 LDR X0, [X0 + 0xAD8]
	0x01ED1888 BL 0x1C16CF4
	0x01ED188C ADRP X0, 0x222E000
	0x01ED1890 LDR X0, [X0 + 0x30]
	0x01ED1894 BL 0x1C16CF4
	0x01ED1898 ADRP X0, 0x222E000
	0x01ED189C LDR X0, [X0 + 0x28]
	0x01ED18A0 BL 0x1C16CF4
	0x01ED18A4 ADRP X0, 0x2225000
	0x01ED18A8 LDR X0, [X0 + 0x398]
	0x01ED18AC BL 0x1C16CF4
	0x01ED18B0 ADRP X0, 0x222E000
	0x01ED18B4 LDR X0, [X0 + 0xFC8]
	0x01ED18B8 BL 0x1C16CF4
	0x01ED18BC MOVZ W8, 0x1
	0x01ED18C0 STRB W8, [X24 + 0x4EF]
	0x01ED18C4 LDR X0, [X23]
	0x01ED18C8 MOVI V0.2D, 0x0
	0x01ED18CC STR X31, [X31 + 0x50]
	0x01ED18D0 STP V0, V0, [X31 + 0x30]
	0x01ED18D4 STR X31, [X31 + 0x28]
	0x01ED18D8 BL 0x1C16F10
	0x01ED18DC LDR X1, [X19]
	0x01ED18E0 MOV X19, X0
	0x01ED18E4 BL 0x2A63B68
	0x01ED18E8 LDR X0, [X22]
	0x01ED18EC BL 0x1C16F10
	0x01ED18F0 LDR X1, [X20]
	0x01ED18F4 MOV X20, X0
	0x01ED18F8 BL 0x2A66C80
	0x01ED18FC LDR X0, [X21 + 0x1B0]
	0x01ED1900 CBZ X0, 0x1ED1AE4
	0x01ED1904 ADRP X8, 0x222E000
	0x01ED1908 LDR X8, [X8 + 0xFA0]
	0x01ED190C ADRP X26, 0x222E000
	0x01ED1910 ADRP X27, 0x2225000
	0x01ED1914 ADRP X28, 0x222E000
	0x01ED1918 ADRP X29, 0x222D000
	0x01ED191C ADRP X24, 0x222D000
	0x01ED1920 LDR X26, [X26 + 0xFB0]
	0x01ED1924 LDR X27, [X27 + 0x398]
	0x01ED1928 LDR X28, [X28 + 0xF90]
	0x01ED192C LDR X29, [X29 + 0x718]
	0x01ED1930 LDR X24, [X24 + 0xAD8]
	0x01ED1934 LDR X1, [X8]
	0x01ED1938 ADRP X25, 0x222E000
	0x01ED193C LDR X25, [X25 + 0xF98]
	0x01ED1940 ADD X8, X31, 0x0
	0x01ED1944 BL 0x2A67974
	0x01ED1948 LDP V0, V1, [X31]
	0x01ED194C LDR X8, [X31 + 0x20]
	0x01ED1950 STP V0, V1, [X31 + 0x30]
	0x01ED1954 STR X8, [X31 + 0x50]
	0x01ED1958 LDR X1, [X26]
	0x01ED195C ADD X0, X31, 0x30
	0x01ED1960 BL 0x2C03E60
	0x01ED1964 TBZ X0, 0x0, 0x1ED1A74
	0x01ED1968 LDR X8, [X31 + 0x48]
	0x01ED196C CBZ X8, 0x1ED1ACC
	0x01ED1970 LDR X21, [X8 + 0x30]
	0x01ED1974 CBZ X21, 0x1ED1AD0
	0x01ED1978 LDR X0, [X27]
	0x01ED197C LDR W8, [X0 + 0xE0]
	0x01ED1980 CBNZ W8, 0x1ED1988
	0x01ED1984 BL 0x1C16DFC
	0x01ED1988 LDR W1, [X21]
	0x01ED198C CMP W1, 0x3FF
	0x01ED1990 B.LS 0x1ED1958
	0x01ED1994 CBZ X19, 0x1ED1AD4
	0x01ED1998 LDR X3, [X28]
	0x01ED199C MOV X0, X19
	0x01ED19A0 MOV X2, X21
	0x01ED19A4 BL 0x2A64420
	0x01ED19A8 LDR X0, [X27]
	0x01ED19AC LDR W8, [X0 + 0xE0]
	0x01ED19B0 CBNZ W8, 0x1ED19B8
	0x01ED19B4 BL 0x1C16DFC
	0x01ED19B8 LDR W1, [X21 + 0x10]
	0x01ED19BC CBZ W1, 0x1ED1958
	0x01ED19C0 CBZ X20, 0x1ED1AE0
	0x01ED19C4 LDR X3, [X29]
	0x01ED19C8 ADD X2, X31, 0x28
	0x01ED19CC MOV X0, X20
	0x01ED19D0 BL 0x2A6903C
	0x01ED19D4 TBNZ X0, 0x0, 0x1ED1A18
	0x01ED19D8 ADRP X8, 0x222E000
	0x01ED19DC LDR W22, [X21 + 0x10]
	0x01ED19E0 LDR X8, [X8 + 0x28]
	0x01ED19E4 LDR X0, [X8]
	0x01ED19E8 BL 0x1C16F10
	0x01ED19EC ADRP X8, 0x222E000
	0x01ED19F0 LDR X8, [X8 + 0x30]
	0x01ED19F4 MOV X23, X0
	0x01ED19F8 LDR X1, [X8]
	0x01ED19FC BL 0x30162B4
	0x01ED1A00 LDR X3, [X25]
	0x01ED1A04 STR X23, [X31 + 0x28]
	0x01ED1A08 MOV X0, X20
	0x01ED1A0C MOV X1, X22
	0x01ED1A10 MOV X2, X23
	0x01ED1A14 BL 0x2A67538

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0x2509000
	007 Move W8, [X21+1254]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x222F000
	015 Move X0, [X0+2936]
	016 Call 0x1C17CF4
	017 Move X0, 0x222F000
	018 Move X0, [X0+2944]
	019 Call 0x1C17CF4
	020 Move X0, 0x222F000
	021 Move X0, [X0+2952]
	022 Call 0x1C17CF4
	023 Move X0, 0x222F000
	024 Move X0, [X0+2960]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+1254], W8
	028 Move [X31+32], X31
	029 Move [X31+40], X31
	030 Move [X31+48], X31
	031 Move X21, 0x2509000
	032 Move W8, [X21+1205]
	033 Move W20, [X20+24]
	034 Compare W8, 0
	035 JumpIfNotEqual {41}
	036 Move X0, 0x222F000
	037 Move X0, [X0+2256]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+1205], W8
	041 Move [X31+8], X31
	042 Move X0, [X19+176]
	043 Compare X0, 0
	044 JumpIfEqual {95}
	045 Move X8, 0x222F000
	046 Move X8, [X8+2256]
	047 NotImplemented "Instruction SBFM not yet implemented."
	048 Add X2, X31, 8
	049 Move X3, [X8]
	050 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	051 Move X8, [X31+8]
	052 Move X9, [X19+248]
	053 And W31, W0, 1
	054 NotImplemented "Instruction CSEL not yet implemented."
	055 Compare X9, 0
	056 JumpIfEqual {88}
	057 Move X8, 0x222F000
	058 Move X8, [X8+2960]
	059 Move X21, 0x222F000
	060 Move X20, 0x222F000
	061 Move X0, X9
	062 Move X1, [X8]
	063 Move X21, [X21+2944]
	064 Move X20, [X20+2936]
	065 Add X8, X31, 8
	066 Call HashSet`1<NetworkId>.GetEnumerator, X0
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 Move X8, [X31+24]
	069 Move [X31+2], V0
	070 Move [X31+48], X8
	071 Move X1, [X21]
	072 Add X0, X31, 32
	073 Call Enumerator<NetworkId>.MoveNext, X0
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {85}
	078 Compare X19, 0
	079 JumpIfEqual {94}
	080 Move W1, [X31+48]
	081 Move W2, 1
	082 Move W3, 1
	083 Move X0, X19
	084 Call SimulationConnection.GetObjectData, X0, X1, X2, X3
	085 Move X1, [X20]
	086 Add X0, X31, 32
	087 Call Enumerator<NetworkId>.Dispose, X0
	088 Move X20, [X31+80]
	089 Move X19, [X31+88]
	090 Move X30, [X31+64]
	091 Move X21, [X31+72]
	092 Add X31, X31, 96
	093 Return 
	094 Call 0x1C17F20
	095 Call 0x1C17F20
	096 Move X19, X0
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X0, X19
	099 Call 0x3EB2AD0
	100 Move X20, [X0]
	101 Call 0x3EB2AE0
	102 Move X8, 0x222F000
	103 Move X8, [X8+2936]
	104 Add X0, X31, 32
	105 Move X1, [X8]
	106 Call Enumerator<NetworkId>.Dispose, X0
	107 Compare X20, 0
	108 JumpIfEqual {88}
	109 Move X0, X20
	110 Call 0x1C17F18
	111 Move X20, X31
	112 Move X19, X0
	113 Move X8, 0x222F000
	114 Move X8, [X8+2936]
	115 Move X1, [X8]
	116 Add X0, X31, 32
	117 Call Enumerator<NetworkId>.Dispose, X0
	118 Compare X20, 0
	119 JumpIfNotEqual {122}
	120 Move X0, X19
	121 Call 0x1D2D690
	122 Move X0, X20
	123 Call 0x1C17F18
	124 Call 0x1991590

Method: System.Void WritePackets()

Disassembly:
	0x01ED1E5C CBNZ W9, 0x1ED1E68
	0x01ED1E60 MOV X0, X8
	0x01ED1E64 BL 0x1C16DFC
	0x01ED1E68 MOVZ W2, 0x8
	0x01ED1E6C MOV X0, X24
	0x01ED1E70 MOV W1, W25
	0x01ED1E74 MOV X3, X31
	0x01ED1E78 BL 0x1EFA340
	0x01ED1E7C LDR X8, [X23 + 0xB0]
	0x01ED1E80 CBZ X8, 0x1ED2038
	0x01ED1E84 LDR X0, [X19 + 0x1B8]
	0x01ED1E88 LDRSH X1, [X8 + 0x4]
	0x01ED1E8C MOVZ W2, 0x20
	0x01ED1E90 MOV X3, X31
	0x01ED1E94 BL 0x1EF9A4C
	0x01ED1E98 LDR X20, [X23 + 0xB0]
	0x01ED1E9C ADD X0, X31, 0x8
	0x01ED1EA0 MOV X1, X31
	0x01ED1EA4 BL 0x1E968BC
	0x01ED1EA8 LDR W8, [X20]
	0x01ED1EAC STR W8, [X0]
	0x01ED1EB0 LDR X8, [X23 + 0xB0]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Move X8, [X0+264]
	005 Compare X8, 0
	006 JumpIfEqual {29}
	007 Move X1, [X8+56]
	008 Move X19, X0
	009 Add X0, X31, 0
	010 Move [X31], X31
	011 Move [X31+8], X31
	012 Call TimeFeedback..ctor, X0, X1
	013 Move V0, [X31]
	014 Move [X31+1], V0
	015 Move X8, [X19+264]
	016 Compare X8, 0
	017 JumpIfEqual {29}
	018 Move X1, [X8+32]
	019 Add X0, X31, 16
	020 Call TimeFeedback.Write, X0, X1
	021 Move X0, [X19+168]
	022 Compare X0, 0
	023 JumpIfEqual {29}
	024 Move X30, [X31+32]
	025 Move X19, [X31+40]
	026 Add X31, X31, 48
	027 Call StateReplicator.SendPacket, X0
	028 Return 
	029 Call 0x1C17F20

Method: Fusion.SimulationRuntimeConfig CreateRuntimeConfiguration()

Disassembly:
	0x01ED0AB4 TBZ X23, 0x0, 0x1ED0D28
	0x01ED0AB8 LDR X0, [X20 + 0x10]
	0x01ED0ABC CBZ X0, 0x1ED0D40
	0x01ED0AC0 ADD X2, X31, 0x10
	0x01ED0AC4 MOV X1, X19
	0x01ED0AC8 MOV X3, X31
	0x01ED0ACC BL 0x1EC0278
	0x01ED0AD0 TBZ X0, 0x0, 0x1ED0CF8
	0x01ED0AD4 ADRP X8, 0x222F000
	0x01ED0AD8 LDR X8, [X8 + 0xF48]
	0x01ED0ADC LDR X0, [X8]
	0x01ED0AE0 BL 0x1C16F10
	0x01ED0AE4 MOV X1, X31
	0x01ED0AE8 MOV X22, X0
	0x01ED0AEC BL 0x1E94D90
	0x01ED0AF0 STR X22, [X31 + 0x18]
	0x01ED0AF4 CBZ X22, 0x1ED0D40
	0x01ED0AF8 MOVN X8, 0x0
	0x01ED0AFC STR W21, [X22 + 0x20]
	0x01ED0B00 STR X8, [X22 + 0x48]
	0x01ED0B04 LDR X0, [X31 + 0x10]
	0x01ED0B08 CBZ X0, 0x1ED0D40
	0x01ED0B0C MOV X1, X31
	0x01ED0B10 BL 0x1E97248
	0x01ED0B14 AND W8, W0, 0x1
	0x01ED0B18 STRB W8, [X22 + 0x38]
	0x01ED0B1C LDR X8, [X31 + 0x10]
	0x01ED0B20 CBZ X8, 0x1ED0D40
	0x01ED0B24 ADRP X9, 0x2223000
	0x01ED0B28 LDR X9, [X9 + 0x598]
	0x01ED0B2C LDR X21, [X8 + 0xB8]
	0x01ED0B30 LDR X0, [X9]
	0x01ED0B34 LDR W9, [X0 + 0xE0]
	0x01ED0B38 CBNZ W9, 0x1ED0B40
	0x01ED0B3C BL 0x1C16DFC
	0x01ED0B40 MOV X0, X21
	0x01ED0B44 MOV X1, X31
	0x01ED0B48 BL 0x3C38948
	0x01ED0B4C TBZ X0, 0x0, 0x1ED0BC0
	0x01ED0B50 LDR X8, [X31 + 0x10]
	0x01ED0B54 CBZ X8, 0x1ED0D40
	0x01ED0B58 LDR X8, [X8 + 0xB8]
	0x01ED0B5C CBZ X8, 0x1ED0D40
	0x01ED0B60 LDR X11, [X8 + 0x78]
	0x01ED0B64 CBZ X11, 0x1ED0BC0
	0x01ED0B68 LDR W8, [X11 + 0x18]
	0x01ED0B6C CMP W8, 0x1
	0x01ED0B70 B.LT 0x1ED0BC0
	0x01ED0B74 LDR X10, [X31 + 0x18]
	0x01ED0B78 MOV X9, X31
	0x01ED0B7C ADD X11, X11, 0x20
	0x01ED0B80 MOVZ W12, 0x1
	0x01ED0B84 CMP W9, W8
	0x01ED0B88 B.CS 0x1ED0D44
	0x01ED0B8C LDR X13, [X11, X9, LSL #3]
	0x01ED0B90 CBZ X13, 0x1ED0D40
	0x01ED0B94 LDRB W14, [X13 + 0x74]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x250A000
	010 Move W9, [X21+1255]
	011 Move X20, X0
	012 Move X19, X8
	013 Move TEMP, X9
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x222F000
	018 Move X0, [X0+360]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1255], W8
	022 Move X8, [X20+88]
	023 Compare X8, 0
	024 JumpIfEqual {76}
	025 Move X9, 0x222F000
	026 Move X9, [X9+360]
	027 Move W25, [X20+76]
	028 Move W24, [X8+36]
	029 Move W23, [X8+56]
	030 Move X0, [X9]
	031 Move X22, [X8+40]
	032 Move X21, [X8+48]
	033 Move W9, [X0+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X22
	038 Move X1, X21
	039 Move X2, X31
	040 Call TickRate.Resolve, X0
	041 Move X21, X0
	042 Move X22, X1
	043 Move X0, X20
	044 Move X1, X31
	045 Call Simulation.get_IsServer, X0
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {55}
	050 Move X8, [X20]
	051 Move X0, X20
	052 Move X9, [X8+616]
	053 Move X1, [X8+624]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move W0, W31
	056 Move W8, [X20+76]
	057 Move [X19+16], W25
	058 Move [X19+20], W24
	059 Move [X19+24], W31
	060 Move [X19+28], W0
	061 Move [X19+32], W23
	062 NotImplemented "Instruction CMP not yet implemented."
	063 NotImplemented "Instruction CSEL not yet implemented."
	064 NotImplemented "Instruction BFM not yet implemented."
	065 Move [X19], X21
	066 Move [X19+8], X22
	067 Move X20, [X31+48]
	068 Move X19, [X31+56]
	069 Move X22, [X31+32]
	070 Move X21, [X31+40]
	071 Move X24, [X31+16]
	072 Move X23, [X31+24]
	073 Move X30, [X31+64]
	074 Move X25, [X31+72]
	075 Return X0
	076 Call 0x1C17F20

Method: System.Void SpawnRuntimeConfiguration()

Disassembly:
	0x01ED1EB4 CBZ X8, 0x1ED2038
	0x01ED1EB8 ADD X24, X20, 0x4
	0x01ED1EBC ADD X25, X0, 0x4
	0x01ED1EC0 MOVZ W20, 0x1
	0x01ED1EC4 MOVZ W9, 0x1
	0x01ED1EC8 LDRSH X10, [X8 + 0x4]
	0x01ED1ECC CMP X20, X10
	0x01ED1ED0 B.GE 0x1ED1F28
	0x01ED1ED4 LDR W10, [X24]
	0x01ED1ED8 LDR W11, [X25]
	0x01ED1EDC CMP W10, W11
	0x01ED1EE0 B.EQ 0x1ED1F14
	0x01ED1EE4 LDR X0, [X19 + 0x1B8]
	0x01ED1EE8 SUB W1, W20, W9
	0x01ED1EEC MOV X2, X31
	0x01ED1EF0 BL 0x1EFA2D8
	0x01ED1EF4 LDR X0, [X19 + 0x1B8]
	0x01ED1EF8 LDR W1, [X24]
	0x01ED1EFC MOV X2, X31
	0x01ED1F00 BL 0x1EFA2D8
	0x01ED1F04 LDR W8, [X24]
	0x01ED1F08 MOV W9, W20
	0x01ED1F0C STR W8, [X25]
	0x01ED1F10 LDR X8, [X23 + 0xB0]
	0x01ED1F14 ADD X20, X20, 0x1
	0x01ED1F18 ADD X24, X24, 0x4
	0x01ED1F1C ADD X25, X25, 0x4
	0x01ED1F20 CBNZ X8, 0x1ED1EC8
	0x01ED1F24 B 0x1ED2038
	0x01ED1F28 LDR X0, [X19 + 0x1B8]
	0x01ED1F2C CMP W9, 0x1
	0x01ED1F30 B.NE 0x1ED1F3C
	0x01ED1F34 STR W29, [X0 + 0x50]
	0x01ED1F38 B 0x1ED1F4C
	0x01ED1F3C MOVN W1, 0x80000000
	0x01ED1F40 MOV X2, X31
	0x01ED1F44 BL 0x1EFA2D8
	0x01ED1F48 ADD W27, W27, 0x1
	0x01ED1F4C MOV X0, X21
	0x01ED1F50 MOV X1, X23
	0x01ED1F54 MOV X2, X31
	0x01ED1F58 BL 0x1E9823C
	0x01ED1F5C MOV W8, W31
	0x01ED1F60 TBZ X8, 0x0, 0x1ED1DE0
	0x01ED1F64 B 0x1ED1E10
	0x01ED1F68 CBZ W27, 0x1ED2014
	0x01ED1F6C LDR X0, [X19 + 0x1B8]
	0x01ED1F70 MOV X1, X31
	0x01ED1F74 BL 0x1EF9F9C
	0x01ED1F78 LDR X20, [X31]
	0x01ED1F7C LDR X0, [X20]
	0x01ED1F80 CBZ X0, 0x1ED2038
	0x01ED1F84 LDR X8, [X19 + 0x1B8]
	0x01ED1F88 LDR W9, [X0 + 0x18]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 NotImplemented "Instruction MRS not yet implemented."
	008 Move X8, [X21+40]
	009 Move X22, 0x2509000
	010 Move X20, 0x2226000
	011 Move X19, X0
	012 Move [X31+40], X8
	013 Move W8, [X22+1256]
	014 Move X20, [X20+920]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x2226000
	020 Move X0, [X0+920]
	021 Call 0x1C17CF4
	022 Move X0, 0x222F000
	023 Move X0, [X0+3936]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+1256], W8
	027 Move X0, [X20]
	028 Move X20, 0x222F000
	029 Move W8, [X0+224]
	030 Move X20, [X20+3936]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X31
	035 Call NetworkId.get_RuntimeConfig
	036 Move X5, [X20]
	037 And X1, X0, 0
	038 Move X0, X19
	039 Move W2, W31
	040 Move X3, X31
	041 Move X4, X31
	042 Call 0x2255C34, X0, X1, X2, X3
	043 Move X20, X0
	044 Add X8, X31, 0
	045 Move X0, X19
	046 Call Server.CreateRuntimeConfiguration, X0
	047 Move W8, [X31+32]
	048 Move V1, [X31]
	049 Move V0, [X31+16]
	050 Move [X20+32], W8
	051 Move [X20], V1
	052 Move [X20+8], V0
	053 Move X8, [X21+40]
	054 Move X9, [X31+40]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X20, [X31+80]
	057 Move X19, [X31+88]
	058 Move X22, [X31+64]
	059 Move X21, [X31+72]
	060 Move X30, [X31+48]
	061 Add X31, X31, 96
	062 Return 
	063 Call 0x3EB2B20

Method: System.Void BeforeUpdate()

Disassembly:
	0x01ED1F8C LDR W8, [X8 + 0x50]
	0x01ED1F90 ADD W10, W8, 0x7
	0x01ED1F94 CMP W8, 0x0
	0x01ED1F98 CSEL W8, W10, W8, LT
	0x01ED1F9C SBFM W8, W8, 0x3, 0x1F
	0x01ED1FA0 CMP W8, W9
	0x01ED1FA4 B.LE 0x1ED1FC4
	0x01ED1FA8 ADRP X9, 0x2222000
	0x01ED1FAC LDR X9, [X9 + 0x618]
	0x01ED1FB0 UBFM W1, W8, 0x1F, 0x1E
	0x01ED1FB4 LDR X0, [X9]
	0x01ED1FB8 BL 0x1C16D6C
	0x01ED1FBC STR X0, [X20]
	0x01ED1FC0 CBZ X0, 0x1ED1FD4
	0x01ED1FC4 LDR W8, [X0 + 0x18]
	0x01ED1FC8 ADD X9, X0, 0x20
	0x01ED1FCC CMP W8, 0x0
	0x01ED1FD0 CSEL X0, X31, X9, EQ
	0x01ED1FD4 LDR X8, [X19 + 0x1B8]
	0x01ED1FD8 MOV X3, X31
	0x01ED1FDC LDR W9, [X8 + 0x50]
	0x01ED1FE0 LDR X1, [X8 + 0x40]
	0x01ED1FE4 ADD W8, W9, 0x7
	0x01ED1FE8 CMP W9, 0x0
	0x01ED1FEC CSEL W8, W8, W9, LT
	0x01ED1FF0 SBFM W2, W8, 0x3, 0x1F
	0x01ED1FF4 BL 0x1E35764
	0x01ED1FF8 LDR X8, [X19 + 0x1B8]
	0x01ED1FFC LDR W8, [X8 + 0x50]
	0x01ED2000 ADD W9, W8, 0x7
	0x01ED2004 CMP W8, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2509000
	006 Move X21, 0x2226000
	007 Move W8, [X20+1257]
	008 Move X21, [X21+920]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2226000
	015 Move X0, [X0+920]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1257], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X31
	025 Call NetworkId.get_RuntimeConfig
	026 And X1, X0, 0
	027 Move X0, X19
	028 Move X2, X31
	029 Call Simulation.HasObject, X0, X1
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {39}
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return 
	039 Move X0, X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Call Server.SpawnRuntimeConfiguration, X0
	045 Return 

Method: System.Void CreateInternalStateObjects(Fusion.PlayerRef sceneInfoStateAuth)

Disassembly:
	0x01ED2008 CSEL W8, W9, W8, LT
	0x01ED200C SBFM W0, W8, 0x3, 0x1F
	0x01ED2010 B 0x1ED2018
	0x01ED2014 MOV W0, W31
	0x01ED2018 LDP X20, X19, [X31 + 0x60]
	0x01ED201C LDP X22, X21, [X31 + 0x50]
	0x01ED2020 LDP X24, X23, [X31 + 0x40]
	0x01ED2024 LDP X26, X25, [X31 + 0x30]
	0x01ED2028 LDP X28, X27, [X31 + 0x20]
	0x01ED202C LDP X29, X30, [X31 + 0x10]
	0x01ED2030 ADD X31, X31, 0x70
	0x01ED2034 RET
	0x01ED2038 BL 0x1C16F20
	0x01ED203C SUB X31, X31, 0xE0
	0x01ED2040 STP X29, X30, [X31 + 0x80]
	0x01ED2044 STP X28, X27, [X31 + 0x90]
	0x01ED2048 STP X26, X25, [X31 + 0xA0]
	0x01ED204C STP X24, X23, [X31 + 0xB0]
	0x01ED2050 STP X22, X21, [X31 + 0xC0]
	0x01ED2054 STP X20, X19, [X31 + 0xD0]
	0x01ED2058 MRS X25, 0xC000
	0x01ED205C LDR X8, [X25 + 0x28]
	0x01ED2060 ADRP X22, 0x2507000
	0x01ED2064 MOV X19, X2
	0x01ED2068 MOV X20, X1
	0x01ED206C STR X8, [X31 + 0x78]
	0x01ED2070 LDRB W8, [X22 + 0x4F3]
	0x01ED2074 MOV X21, X0
	0x01ED2078 TBNZ X8, 0x0, 0x1ED20B4
	0x01ED207C ADRP X0, 0x222D000
	0x01ED2080 LDR X0, [X0 + 0xFD0]
	0x01ED2084 BL 0x1C16CF4
	0x01ED2088 ADRP X0, 0x222D000
	0x01ED208C LDR X0, [X0 + 0xFD8]
	0x01ED2090 BL 0x1C16CF4
	0x01ED2094 ADRP X0, 0x2224000
	0x01ED2098 LDR X0, [X0 + 0x398]
	0x01ED209C BL 0x1C16CF4
	0x01ED20A0 ADRP X0, 0x222D000
	0x01ED20A4 LDR X0, [X0 + 0xCC8]
	0x01ED20A8 BL 0x1C16CF4
	0x01ED20AC MOVZ W8, 0x1
	0x01ED20B0 STRB W8, [X22 + 0x4F3]
	0x01ED20B4 STR X31, [X31 + 0x8]
	0x01ED20B8 CBZ X21, 0x1ED2264
	0x01ED20BC LDR X8, [X21 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2508000
	007 Move X22, 0x2225000
	008 Move W8, [X21+1258]
	009 Move X22, [X22+920]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2225000
	017 Move X0, [X0+920]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1258], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X31
	027 Call NetworkId.get_SceneInfo
	028 And X1, X0, 0
	029 Move W2, 13
	030 Move X0, X20
	031 Move X3, X31
	032 Move X4, X31
	033 Move X5, X31
	034 Call Simulation.AllocateStruct, X0, X1, X2, X3
	035 Compare X0, 0
	036 JumpIfEqual {56}
	037 Move [X0+32], W19
	038 Move X0, X31
	039 Call NetworkId.get_PhysicsInfo
	040 And X1, X0, 0
	041 Move W2, 10
	042 Move X0, X20
	043 Move X3, X31
	044 Move X4, X31
	045 Move X5, X31
	046 Call Simulation.AllocateStruct, X0, X1, X2, X3
	047 Compare X0, 0
	048 JumpIfEqual {56}
	049 Move [X0+32], W19
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Return 
	056 Call 0x1C17F20

Method: System.Void BeforeFirstTick()

Disassembly:
	0x01ED20C0 CBZ X8, 0x1ED2264
	0x01ED20C4 ADD X9, X21, 0x20
	0x01ED20C8 CMP W8, 0x0
	0x01ED20CC UBFM W10, W8, 0x1D, 0x1C
	0x01ED20D0 MOVI V0.2D, 0x0
	0x01ED20D4 CSEL X9, X31, X9, EQ
	0x01ED20D8 CMP W10, 0x1
	0x01ED20DC STP V0, V0, [X31 + 0x50]
	0x01ED20E0 STP W31, W10, [X31 + 0x60]
	0x01ED20E4 STP V0, V0, [X31 + 0x30]
	0x01ED20E8 STP V0, V0, [X31 + 0x10]
	0x01ED20EC STR X9, [X31 + 0x50]
	0x01ED20F0 STR W8, [X31 + 0x68]
	0x01ED20F4 B.LT 0x1ED2264
	0x01ED20F8 ADRP X26, 0x2224000
	0x01ED20FC ADRP X27, 0x222D000
	0x01ED2100 ADRP X29, 0x222D000
	0x01ED2104 LDR X26, [X26 + 0x398]
	0x01ED2108 LDR X27, [X27 + 0xFD0]
	0x01ED210C LDR X29, [X29 + 0xFD8]
	0x01ED2110 MOVN W28, 0x80000000
	0x01ED2114 ADD X0, X31, 0x10
	0x01ED2118 MOVZ W1, 0x24
	0x01ED211C MOV X2, X31
	0x01ED2120 BL 0x1EF9F60
	0x01ED2124 TBZ X0, 0x0, 0x1ED2264
	0x01ED2128 LDR X0, [X26]
	0x01ED212C LDR W8, [X0 + 0xE0]
	0x01ED2130 CBNZ W8, 0x1ED2138
	0x01ED2134 BL 0x1C16DFC
	0x01ED2138 ADD X0, X31, 0x10
	0x01ED213C MOV X1, X31
	0x01ED2140 BL 0x1E92FB4
	0x01ED2144 MOV X23, X0
	0x01ED2148 ADD X0, X31, 0x10
	0x01ED214C MOVZ W1, 0x20
	0x01ED2150 MOV X2, X31
	0x01ED2154 BL 0x1EF9B00
	0x01ED2158 CBZ X20, 0x1ED2294
	0x01ED215C LDR X3, [X27]
	0x01ED2160 AND X22, X23, 0x0
	0x01ED2164 MOV X21, X0
	0x01ED2168 ADD X2, X31, 0x8
	0x01ED216C MOV X0, X20
	0x01ED2170 MOV X1, X22
	0x01ED2174 BL 0x2A6903C
	0x01ED2178 TBNZ X0, 0x0, 0x1ED21F0
	0x01ED217C ADRP X8, 0x222D000
	0x01ED2180 LDR X8, [X8 + 0xCC8]
	0x01ED2184 LDR X0, [X8]
	0x01ED2188 BL 0x1C16F10
	0x01ED218C MOV X1, X19
	0x01ED2190 MOV X2, X31
	0x01ED2194 MOV X24, X0
	0x01ED2198 BL 0x1E96A38
	0x01ED219C STR X24, [X31 + 0x8]
	0x01ED21A0 CBZ X24, 0x1ED2294
	0x01ED21A4 UBFM W1, W21, 0x1E, 0x1D
	0x01ED21A8 MOV X0, X24
	0x01ED21AC MOV X2, X31
	0x01ED21B0 BL 0x1E96AC0
	0x01ED21B4 LDR X8, [X31 + 0x8]
	0x01ED21B8 CBZ X8, 0x1ED2294
	0x01ED21BC LDR X8, [X8 + 0x30]
	0x01ED21C0 CBZ X8, 0x1ED2294
	0x01ED21C4 STR W23, [X8]
	0x01ED21C8 LDR X8, [X31 + 0x8]
	0x01ED21CC CBZ X8, 0x1ED2294

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2508000
	006 Move X21, 0x2225000
	007 Move W8, [X20+1259]
	008 Move X21, [X21+3648]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x222D000
	015 Move X0, [X0+2704]
	016 Call 0x1C17CF4
	017 Move X0, 0x2225000
	018 Move X0, [X0+3648]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1259], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X31
	028 Call PlayerRef.get_None
	029 And X1, X0, 0
	030 Move X0, X19
	031 Call Server.CreateInternalStateObjects, X0, X1
	032 Move W8, [X19+76]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X8, [X19]
	035 Move X0, X19
	036 Move X9, [X8+616]
	037 Move X1, [X8+624]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 And X1, X0, 0
	040 Move W2, 1
	041 Move X0, X19
	042 Move X3, X31
	043 Call Simulation.GetPlayerSimulationData, X0, X1, X2
	044 Move X19, [X19+64]
	045 Compare X19, 0
	046 JumpIfEqual {75}
	047 Move X10, 0x222D000
	048 Move X8, [X19]
	049 Move X10, [X10+2704]
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 Move X1, [X10]
	052 Compare X9, 0
	053 JumpIfEqual {60}
	054 Move X10, [X8+176]
	055 Add X10, X10, 8
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Subtract X9, X9, 1
	059 Add X10, X10, 16
	060 Move W2, 1
	061 Move X0, X19
	062 Call 0x1C5D788
	063 Move W9, [X10]
	064 Add W9, W9, 1
	065 Add X8, X8, W9
	066 Add X0, X8, 312
	067 Move X2, [X0]
	068 Move X1, [X0+8]
	069 Move X0, X19
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X30, [X31+32]
	073 Move X21, [X31+40]
	074 CallNoReturn X2
	075 Call 0x1C17F20

Method: Fusion.SimulationInput GetInput(Fusion.Tick tick, Fusion.PlayerRef player)

Disassembly:
	0x01ED21D0 LDR X8, [X8 + 0x30]
	0x01ED21D4 CBZ X8, 0x1ED2294
	0x01ED21D8 STRH W21, [X8 + 0x4]
	0x01ED21DC LDR X2, [X31 + 0x8]
	0x01ED21E0 LDR X3, [X29]
	0x01ED21E4 MOV X0, X20
	0x01ED21E8 MOV X1, X22
	0x01ED21EC BL 0x2A67520
	0x01ED21F0 LDR X10, [X31 + 0x8]
	0x01ED21F4 CBZ X10, 0x1ED2294
	0x01ED21F8 LDP W8, W9, [X31 + 0x60]
	0x01ED21FC CMP W8, W9
	0x01ED2200 B.GE 0x1ED225C
	0x01ED2204 LDR X22, [X10 + 0x30]
	0x01ED2208 MOVZ W23, 0x1
	0x01ED220C ADD X0, X31, 0x10
	0x01ED2210 MOVZ W1, 0x10
	0x01ED2214 MOV X2, X31
	0x01ED2218 BL 0x1EF9F60
	0x01ED221C TBZ X0, 0x0, 0x1ED2258
	0x01ED2220 ADD X0, X31, 0x10
	0x01ED2224 MOV X1, X31
	0x01ED2228 BL 0x1EFA464
	0x01ED222C CMP W0, W28
	0x01ED2230 B.EQ 0x1ED2258
	0x01ED2234 MOV W21, W0
	0x01ED2238 ADD X0, X31, 0x10
	0x01ED223C MOV X1, X31
	0x01ED2240 BL 0x1EFA464
	0x01ED2244 ADD W23, W21, W23
	0x01ED2248 STR W0, [X22, W23, SXTW]
	0x01ED224C LDP W8, W9, [X31 + 0x60]
	0x01ED2250 CMP W8, W9
	0x01ED2254 B.LT 0x1ED220C
	0x01ED2258 LDP W8, W9, [X31 + 0x60]
	0x01ED225C CMP W8, W9
	0x01ED2260 B.LT 0x1ED2114
	0x01ED2264 LDR X8, [X25 + 0x28]
	0x01ED2268 LDR X9, [X31 + 0x78]
	0x01ED226C CMP X8, X9
	0x01ED2270 B.NE 0x1ED2298
	0x01ED2274 LDP X20, X19, [X31 + 0xD0]
	0x01ED2278 LDP X22, X21, [X31 + 0xC0]
	0x01ED227C LDP X24, X23, [X31 + 0xB0]
	0x01ED2280 LDP X26, X25, [X31 + 0xA0]
	0x01ED2284 LDP X28, X27, [X31 + 0x90]
	0x01ED2288 LDP X29, X30, [X31 + 0x80]
	0x01ED228C ADD X31, X31, 0xE0
	0x01ED2290 RET
	0x01ED2294 BL 0x1C16F20
	0x01ED2298 BL 0x3EB1B20
	0x01ED229C STR X30, [X31 - 0x40]!
	0x01ED22A0 STP X24, X23, [X31 + 0x10]
	0x01ED22A4 STP X22, X21, [X31 + 0x20]
	0x01ED22A8 STP X20, X19, [X31 + 0x30]
	0x01ED22AC ADRP X21, 0x2507000
	0x01ED22B0 LDRB W8, [X21 + 0x4F4]
	0x01ED22B4 MOV X20, X1
	0x01ED22B8 MOV X19, X0
	0x01ED22BC TBNZ X8, 0x0, 0x1ED22F8
	0x01ED22C0 ADRP X0, 0x222D000
	0x01ED22C4 LDR X0, [X0 + 0xFE0]
	0x01ED22C8 BL 0x1C16CF4
	0x01ED22CC ADRP X0, 0x222D000
	0x01ED22D0 LDR X0, [X0 + 0xFE8]
	0x01ED22D4 BL 0x1C16CF4
	0x01ED22D8 ADRP X0, 0x222D000
	0x01ED22DC LDR X0, [X0 + 0xFF0]
	0x01ED22E0 BL 0x1C16CF4
	0x01ED22E4 ADRP X0, 0x222D000
	0x01ED22E8 LDR X0, [X0 + 0xFF8]
	0x01ED22EC BL 0x1C16CF4
	0x01ED22F0 MOVZ W8, 0x1
	0x01ED22F4 STRB W8, [X21 + 0x4F4]
	0x01ED22F8 MOV X0, X19
	0x01ED22FC MOV X1, X31
	0x01ED2300 BL 0x33BDD8C
	0x01ED2304 STR X20, [X19 + 0x10]
	0x01ED2308 CBZ X20, 0x1ED23D0
	0x01ED230C LDR X8, [X20 + 0x58]
	0x01ED2310 CBZ X8, 0x1ED23D0
	0x01ED2314 LDR W8, [X8 + 0x1C]
	0x01ED2318 ADRP X21, 0x222D000
	0x01ED231C LDR X21, [X21 + 0xFF8]
	0x01ED2320 ADRP X22, 0x222D000
	0x01ED2324 STR W8, [X19 + 0x3C]
	0x01ED2328 ADRP X23, 0x222D000
	0x01ED232C LDR X0, [X21]
	0x01ED2330 ADRP X24, 0x222D000
	0x01ED2334 LDR X22, [X22 + 0xFF0]
	0x01ED2338 LDR X23, [X23 + 0xFE8]
	0x01ED233C LDR X24, [X24 + 0xFE0]
	0x01ED2340 BL 0x1C16F10
	0x01ED2344 LDR X1, [X22]
	0x01ED2348 MOV X20, X0
	0x01ED234C BL 0x24F0890
	0x01ED2350 STR X20, [X19 + 0x20]
	0x01ED2354 LDR X0, [X21]
	0x01ED2358 BL 0x1C16F10
	0x01ED235C LDR X1, [X22]
	0x01ED2360 MOV X20, X0
	0x01ED2364 BL 0x24F0890
	0x01ED2368 STR X20, [X19 + 0x28]
	0x01ED236C LDR X0, [X21]
	0x01ED2370 BL 0x1C16F10
	0x01ED2374 LDR X1, [X22]
	0x01ED2378 MOV X20, X0
	0x01ED237C BL 0x24F0890
	0x01ED2380 STR X20, [X19 + 0x30]
	0x01ED2384 LDR X0, [X23]
	0x01ED2388 BL 0x1C16F10
	0x01ED238C LDR X1, [X24]
	0x01ED2390 MOV X20, X0
	0x01ED2394 BL 0x3116D08
	0x01ED2398 LDR X8, [X19 + 0x10]
	0x01ED239C STR X20, [X19 + 0x18]
	0x01ED23A0 CBZ X8, 0x1ED23D0
	0x01ED23A4 LDR X8, [X8 + 0x58]
	0x01ED23A8 CBZ X8, 0x1ED23D0
	0x01ED23AC LDR W8, [X8 + 0x14]
	0x01ED23B0 LDP X22, X21, [X31 + 0x20]
	0x01ED23B4 LDP X24, X23, [X31 + 0x10]
	0x01ED23B8 ANDS W31, W8, 0x3
	0x01ED23BC CSET W8, EQ
	0x01ED23C0 STRB W8, [X19 + 0x38]
	0x01ED23C4 LDP X20, X19, [X31 + 0x30]
	0x01ED23C8 LDR X30, [X31], #0x40
	0x01ED23CC RET
	0x01ED23D0 BL 0x1C16F20
	0x01ED23D4 STR X30, [X31 - 0x50]!
	0x01ED23D8 STP X26, X25, [X31 + 0x10]
	0x01ED23DC STP X24, X23, [X31 + 0x20]
	0x01ED23E0 STP X22, X21, [X31 + 0x30]
	0x01ED23E4 STP X20, X19, [X31 + 0x40]
	0x01ED23E8 ADRP X20, 0x2507000
	0x01ED23EC LDRB W8, [X20 + 0x4FB]
	0x01ED23F0 MOV X19, X0
	0x01ED23F4 TBNZ X8, 0x0, 0x1ED2418
	0x01ED23F8 ADRP X0, 0x2221000
	0x01ED23FC LDR X0, [X0 + 0x5A8]
	0x01ED2400 BL 0x1C16CF4
	0x01ED2404 ADRP X0, 0x2224000
	0x01ED2408 LDR X0, [X0 + 0x398]
	0x01ED240C BL 0x1C16CF4
	0x01ED2410 MOVZ W8, 0x1
	0x01ED2414 STRB W8, [X20 + 0x4FB]
	0x01ED2418 STR W31, [X31 + 0x8]
	0x01ED241C LDR X8, [X19 + 0x10]
	0x01ED2420 CBZ X8, 0x1ED252C
	0x01ED2424 LDR X24, [X8 + 0x108]
	0x01ED2428 CBZ X24, 0x1ED252C
	0x01ED242C LDR X0, [X24 + 0x38]
	0x01ED2430 CBZ X0, 0x1ED252C
	0x01ED2434 ADRP X20, 0x2221000
	0x01ED2438 LDR X20, [X20 + 0x5A8]
	0x01ED243C BL 0x1ED4FD4
	0x01ED2440 LDR X8, [X20]
	0x01ED2444 MOV W20, W0
	0x01ED2448 LDR W9, [X8 + 0xE0]
	0x01ED244C CBNZ W9, 0x1ED2458
	0x01ED2450 MOV X0, X8
	0x01ED2454 BL 0x1C16DFC
	0x01ED2458 MOVZ W0, 0x20
	0x01ED245C MOV W1, W20
	0x01ED2460 MOV X2, X31
	0x01ED2464 BL 0x337EE94
	0x01ED2468 CMP W0, 0x1
	0x01ED246C B.LT 0x1ED2514
	0x01ED2470 ADRP X21, 0x2224000
	0x01ED2474 LDR X21, [X21 + 0x398]
	0x01ED2478 MOV W20, W0
	0x01ED247C ADRP X25, 0x2507000
	0x01ED2480 MOVZ W26, 0x1
	0x01ED2484 LDR X0, [X24 + 0x38]
	0x01ED2488 CBZ X0, 0x1ED252C
	0x01ED248C ADD X1, X31, 0x8
	0x01ED2490 BL 0x1ED501C
	0x01ED2494 TBZ X0, 0x0, 0x1ED2514
	0x01ED2498 LDR X0, [X21]
	0x01ED249C LDR X22, [X24 + 0x20]
	0x01ED24A0 LDR W8, [X0 + 0xE0]
	0x01ED24A4 CBNZ W8, 0x1ED24AC
	0x01ED24A8 BL 0x1C16DFC
	0x01ED24AC LDRB W8, [X25 + 0x2ED]
	0x01ED24B0 CBNZ W8, 0x1ED24C0
	0x01ED24B4 MOV X0, X21
	0x01ED24B8 BL 0x1C16CF4
	0x01ED24BC STRB W26, [X25 + 0x2ED]
	0x01ED24C0 LDR X0, [X21]
	0x01ED24C4 LDR W23, [X31 + 0x8]
	0x01ED24C8 LDR W8, [X0 + 0xE0]
	0x01ED24CC CBNZ W8, 0x1ED24D4
	0x01ED24D0 BL 0x1C16DFC
	0x01ED24D4 MOVZ W2, 0x8
	0x01ED24D8 MOV X0, X22
	0x01ED24DC MOV W1, W23
	0x01ED24E0 MOV X3, X31
	0x01ED24E4 BL 0x1EFA340
	0x01ED24E8 LDRB W8, [X24 + 0x1B]
	0x01ED24EC LDR X0, [X24 + 0x28]
	0x01ED24F0 MOVZ W4, 0x1
	0x01ED24F4 MOV X2, X23
	0x01ED24F8 ADD W8, W8, 0x1
	0x01ED24FC STRB W8, [X24 + 0x1B]
	0x01ED2500 LDR X1, [X19 + 0x10]
	0x01ED2504 MOV X3, X31
	0x01ED2508 BL 0x1ED50F0
	0x01ED250C SUBS W20, W20, 0x1
	0x01ED2510 B.NE 0x1ED2484
	0x01ED2514 LDP X20, X19, [X31 + 0x40]
	0x01ED2518 LDP X22, X21, [X31 + 0x30]
	0x01ED251C LDP X24, X23, [X31 + 0x20]
	0x01ED2520 LDP X26, X25, [X31 + 0x10]
	0x01ED2524 LDR X30, [X31], #0x50
	0x01ED2528 RET
	0x01ED252C BL 0x1C16F20
	0x01ED2530 SUB X31, X31, 0x80
	0x01ED2534 STP X30, X25, [X31 + 0x40]
	0x01ED2538 STP X24, X23, [X31 + 0x50]
	0x01ED253C STP X22, X21, [X31 + 0x60]
	0x01ED2540 STP X20, X19, [X31 + 0x70]
	0x01ED2544 ADRP X20, 0x2507000
	0x01ED2548 LDRB W8, [X20 + 0x501]
	0x01ED254C MOV X19, X0
	0x01ED2550 TBNZ X8, 0x0, 0x1ED25C8
	0x01ED2554 ADRP X0, 0x222D000
	0x01ED2558 LDR X0, [X0 + 0xB78]
	0x01ED255C BL 0x1C16CF4
	0x01ED2560 ADRP X0, 0x222D000
	0x01ED2564 LDR X0, [X0 + 0xB80]
	0x01ED2568 BL 0x1C16CF4
	0x01ED256C ADRP X0, 0x222D000
	0x01ED2570 LDR X0, [X0 + 0xB88]
	0x01ED2574 BL 0x1C16CF4
	0x01ED2578 ADRP X0, 0x222D000
	0x01ED257C LDR X0, [X0 + 0xB90]
	0x01ED2580 BL 0x1C16CF4
	0x01ED2584 ADRP X0, 0x222E000
	0x01ED2588 LDR X0, [X0]
	0x01ED258C BL 0x1C16CF4
	0x01ED2590 ADRP X0, 0x222E000
	0x01ED2594 LDR X0, [X0 + 0x8]
	0x01ED2598 BL 0x1C16CF4
	0x01ED259C ADRP X0, 0x222E000
	0x01ED25A0 LDR X0, [X0 + 0x10]
	0x01ED25A4 BL 0x1C16CF4
	0x01ED25A8 ADRP X0, 0x222E000
	0x01ED25AC LDR X0, [X0 + 0x18]
	0x01ED25B0 BL 0x1C16CF4
	0x01ED25B4 ADRP X0, 0x222C000
	0x01ED25B8 LDR X0, [X0 + 0x378]
	0x01ED25BC BL 0x1C16CF4
	0x01ED25C0 MOVZ W8, 0x1
	0x01ED25C4 STRB W8, [X20 + 0x501]
	0x01ED25C8 STP X31, X31, [X31 + 0x20]
	0x01ED25CC STR X31, [X31 + 0x30]
	0x01ED25D0 STR X31, [X31 + 0x18]
	0x01ED25D4 LDR X8, [X19 + 0x10]
	0x01ED25D8 CBZ X8, 0x1ED299C
	0x01ED25DC LDR X8, [X8 + 0x108]
	0x01ED25E0 CBZ X8, 0x1ED299C
	0x01ED25E4 LDR X0, [X19 + 0x40]
	0x01ED25E8 LDR X20, [X8 + 0x38]
	0x01ED25EC CBZ X0, 0x1ED2660
	0x01ED25F0 MOV X1, X31
	0x01ED25F4 BL 0x1E97370
	0x01ED25F8 CBZ X20, 0x1ED299C
	0x01ED25FC AND X1, X0, 0x0
	0x01ED2600 MOVZ W2, 0x1
	0x01ED2604 MOV X0, X20
	0x01ED2608 MOV W3, W31
	0x01ED260C BL 0x1ED0A18
	0x01ED2610 CBZ X0, 0x1ED299C
	0x01ED2614 LDR X22, [X19 + 0x40]
	0x01ED2618 MOV X21, X0
	0x01ED261C ADD X0, X0, 0x54
	0x01ED2620 MOV X1, X31
	0x01ED2624 BL 0x1E967E8
	0x01ED2628 CBZ X22, 0x1ED299C
	0x01ED262C LDR W8, [X22 + 0x9C]
	0x01ED2630 BIC W9, W0, W0, 0x1F
	0x01ED2634 CMP W9, W8
	0x01ED2638 CSEL W8, W8, W0, LT
	0x01ED263C CMP W8, 0x1
	0x01ED2640 B.LT 0x1ED2650
	0x01ED2644 LDR W9, [X21 + 0x3C]
	0x01ED2648 CMP W8, W9
	0x01ED264C B.LE 0x1ED2660
	0x01ED2650 LDR X1, [X19 + 0x40]
	0x01ED2654 MOV X0, X19
	0x01ED2658 MOV X2, X21
	0x01ED265C BL 0x1ED5B84
	0x01ED2660 LDR X0, [X19 + 0x48]
	0x01ED2664 CBZ X0, 0x1ED26D8
	0x01ED2668 MOV X1, X31
	0x01ED266C BL 0x1E97370
	0x01ED2670 CBZ X20, 0x1ED299C
	0x01ED2674 AND X1, X0, 0x0
	0x01ED2678 MOVZ W2, 0x1
	0x01ED267C MOV X0, X20
	0x01ED2680 MOV W3, W31
	0x01ED2684 BL 0x1ED0A18

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X20, 0x2508000
	010 Move W8, [X20+1260]
	011 Move X22, X2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x222D000
	019 Move X0, [X0+2704]
	020 Call 0x1C17CF4
	021 Move X0, 0x2222000
	022 Move X0, [X0+1448]
	023 Call 0x1C17CF4
	024 Move X0, 0x222D000
	025 Move X0, [X0+2008]
	026 Call 0x1C17CF4
	027 Move X0, 0x222E000
	028 Move X0, [X0+3672]
	029 Call 0x1C17CF4
	030 Move X0, 0x2225000
	031 Move X0, [X0+3648]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+1260], W8
	035 And X23, X22, 0
	036 Move X0, X19
	037 Move X1, X23
	038 Move X2, X31
	039 Move [X31+16], X31
	040 Move [X31+24], X31
	041 Move [X31+8], X31
	042 Call Simulation.PlayerValid, X0, X1
	043 Move X20, X31
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {290}
	048 Move X0, X19
	049 Move X1, X31
	050 Call Simulation.get_IsPlayer, X0
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {144}
	055 Move X8, [X19]
	056 Move X0, X19
	057 Move X9, [X8+616]
	058 Move X1, [X8+624]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X8, 0x2225000
	061 Move X8, [X8+3648]
	062 Move X20, X0
	063 Move X8, [X8]
	064 Move W9, [X8+224]
	065 Compare W9, 0
	066 JumpIfNotEqual {69}
	067 Move X0, X8
	068 Call 0x1C17DFC
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X0, [X19+152]
	071 Compare X0, 0
	072 JumpIfEqual {300}
	073 Call Pool.Acquire, X0
	074 Move X8, [X19]
	075 Move X20, X0
	076 Move X0, X19
	077 Move X9, [X8+616]
	078 Move X1, [X8+624]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Compare X20, 0
	081 JumpIfEqual {300}
	082 Move X8, [X20+32]
	083 Move [X20+24], W0
	084 Compare X8, 0
	085 JumpIfEqual {300}
	086 Move W9, [X19+72]
	087 Move X0, X19
	088 Move X1, X31
	089 Move [X8], W9
	090 Move X21, [X20+32]
	091 Call Simulation.get_TickPrevious, X0
	092 Compare X21, 0
	093 JumpIfEqual {300}
	094 Move [X21+12], W0
	095 Move X23, [X20+32]
	096 Move X0, X19
	097 Move X1, X31
	098 Call Simulation.get_TickPrevious, X0
	099 Move X21, X0
	100 Move X0, X19
	101 Move X1, X31
	102 Call Simulation.get_TickStride, X0
	103 Move X8, 0x2222000
	104 Move X8, [X8+1448]
	105 Move W22, W0
	106 Move X8, [X8]
	107 Move W9, [X8+224]
	108 Compare W9, 0
	109 JumpIfNotEqual {112}
	110 Move X0, X8
	111 Call 0x1C17DFC
	112 Subtract W1, W21, W22
	113 Move W0, W31
	114 Move X2, X31
	115 Call Math.Max, X0, X1
	116 Compare X23, 0
	117 JumpIfEqual {300}
	118 NotImplemented "Instruction BIC not yet implemented."
	119 Move [X23+8], W8
	120 Move X8, [X20+32]
	121 Compare X8, 0
	122 JumpIfEqual {300}
	123 Move V0, [X19+140]
	124 Move [X8+4], S0
	125 Move X19, [X19+64]
	126 Compare X19, 0
	127 JumpIfEqual {300}
	128 Move X10, 0x222D000
	129 Move X8, [X19]
	130 Move X10, [X10+2704]
	131 NotImplemented "Instruction LDRH not yet implemented."
	132 Move X1, [X10]
	133 Compare X9, 0
	134 JumpIfEqual {141}
	135 Move X10, [X8+176]
	136 Add X10, X10, 8
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Subtract X9, X9, 1
	140 Add X10, X10, 16
	141 Move W2, 3
	142 Move X0, X19
	143 Call 0x1C5D788
	144 Move X20, 0x2507000
	145 Move W8, [X20+2931]
	146 Compare W8, 0
	147 JumpIfNotEqual {153}
	148 Move X0, 0x2227000
	149 Move X0, [X0+32]
	150 Call 0x1C17CF4
	151 Move W8, 1
	152 Move [X20+2931], W8
	153 Move [X31+40], X31
	154 Move X0, [X19+184]
	155 Compare X0, 0
	156 JumpIfEqual {300}
	157 Move X8, 0x2227000
	158 Move X8, [X8+32]
	159 Add X2, X31, 40
	160 Move X1, X23
	161 Move X3, [X8]
	162 Call Dictionary`2<PlayerRef, Object>.TryGetValue, X0, X1, X2
	163 Move X23, [X31+40]
	164 Compare X23, 0
	165 JumpIfEqual {300}
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfNotEqual {300}
	170 Move X0, [X23+176]
	171 Compare X0, 0
	172 JumpIfEqual {300}
	173 And X24, X21, 0
	174 Move X1, X24
	175 Call Buffer.Get, X0, X1
	176 Compare X0, 0
	177 JumpIfEqual {202}
	178 Move X20, X0
	179 Move X0, [X23+176]
	180 Compare X0, 0
	181 JumpIfEqual {300}
	182 Move X1, X24
	183 Call Buffer.GetInsertTime, X0, X1
	184 And W31, W0, 255
	185 Move [X31+16], X0
	186 Move [X31+24], X1
	187 Move X8, 0x222E000
	188 Move X8, [X8+3672]
	189 Add X0, X31, 16
	190 Move X1, [X8]
	191 Call Nullable`1<Double>.get_Value, X0
	192 Move V1, [X19+200]
	193 Move X0, X23
	194 Move X1, X24
	195 Call SimulationConnection.InputReceiveDelta, X0, X1, V0, V1
	196 Move X0, [X23+176]
	197 Compare X0, 0
	198 JumpIfEqual {300}
	199 Add X2, X31, 8
	200 Move X1, X24
	201 Call Buffer.Remove, X0, X1, X2
	202 Move X8, [X19+88]
	203 Compare X8, 0
	204 JumpIfEqual {300}
	205 Move W8, [X8+56]
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move X0, [X19+152]
	208 Compare X0, 0
	209 JumpIfEqual {300}
	210 Call Pool.Acquire, X0
	211 Compare X0, 0
	212 JumpIfEqual {300}
	213 Move X8, [X0+32]
	214 Move X20, X0
	215 Move [X0+24], W22
	216 Compare X8, 0
	217 JumpIfEqual {300}
	218 Move [X8], W21
	219 Move X8, [X23+176]
	220 Compare X8, 0
	221 JumpIfEqual {300}
	222 Move X10, [X20+32]
	223 Compare X10, 0
	224 JumpIfEqual {300}
	225 Move X9, [X8+64]
	226 Move W8, [X8+60]
	227 Move X11, X9
	228 ShiftRight X11, 32
	229 And X11, X11, 0x7FFFFFFF
	230 Move [X10+12], W11
	231 Move X10, [X20+32]
	232 Compare X10, 0
	233 JumpIfEqual {300}
	234 Move [X10+8], W9
	235 Move X9, [X20+32]
	236 Compare X9, 0
	237 JumpIfEqual {300}
	238 Move [X9+4], W8
	239 Move X21, [X19+64]
	240 Compare X21, 0
	241 JumpIfEqual {301}
	242 Move X10, 0x222D000
	243 Move X8, [X21]
	244 Move X10, [X10+2704]
	245 NotImplemented "Instruction LDRH not yet implemented."
	246 Move X1, [X10]
	247 Compare X9, 0
	248 JumpIfEqual {255}
	249 Move X10, [X8+176]
	250 Add X10, X10, 8
	251 NotImplemented "Instruction LDUR not yet implemented."
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Subtract X9, X9, 1
	254 Add X10, X10, 16
	255 Move W2, 4
	256 Move X0, X21
	257 Call 0x1C5D788
	258 Move X20, X31
	259 Move W9, [X10]
	260 Add W9, W9, 3
	261 Add X8, X8, W9
	262 Add X0, X8, 312
	263 Move X8, [X0]
	264 Move X2, [X0+8]
	265 Move X0, X19
	266 Move X1, X20
	267 NotImplemented "Instruction BLR not yet implemented."
	268 Move W9, [X10]
	269 Add W9, W9, 4
	270 Add X8, X8, W9
	271 Add X0, X8, 312
	272 Move X8, [X0]
	273 Move X2, [X0+8]
	274 Move X0, X21
	275 Move X1, X20
	276 NotImplemented "Instruction BLR not yet implemented."
	277 Move X8, [X19+88]
	278 Compare X8, 0
	279 JumpIfEqual {300}
	280 Move W8, [X8+56]
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Compare X20, 0
	283 JumpIfEqual {290}
	284 Move X0, [X19+152]
	285 Compare X0, 0
	286 JumpIfEqual {300}
	287 Move X1, X20
	288 Call Pool.Release, X0, X1
	289 Move X20, X31
	290 Move X0, X20
	291 Move X20, [X31+80]
	292 Move X19, [X31+88]
	293 Move X22, [X31+64]
	294 Move X21, [X31+72]
	295 Move X24, [X31+48]
	296 Move X23, [X31+56]
	297 Move X30, [X31+32]
	298 Add X31, X31, 96
	299 Return X0
	300 Call 0x1C17F20
	301 Call 0x1C17F20
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Move X21, X0
	304 Move X0, X21
	305 Call 0x3EB2AD0
	306 Move X21, X0
	307 Move X0, 0x2222000
	308 Move X0, [X0+2000]
	309 Call 0x1C17D08
	310 Move X8, [X21]
	311 Move X1, [X8]
	312 Call 0x1C18270
	313 Move TEMP, X0
	314 And TEMP, TEMP, 1
	315 Compare TEMP, 1
	316 JumpIfNotEqual {333}
	317 Move X21, [X21]
	318 Call 0x3EB2AE0
	319 Move X0, 0x222A000
	320 Move X0, [X0+2224]
	321 Call 0x1C17D08
	322 Move W8, [X0+224]
	323 Compare W8, 0
	324 JumpIfNotEqual {326}
	325 Call 0x1C17DFC
	326 Move X0, 0x222E000
	327 Move X0, [X0+3944]
	328 Call 0x1C17D08
	329 Move X2, X0
	330 Move X0, X19
	331 Move X1, X21
	332 Call 0x2214878, X0, X1
	333 Move W0, 8
	334 Call 0x3EB2AF0
	335 Move X8, [X21]
	336 Move [X0], X8
	337 Move X1, 0x1FE3000
	338 Add X1, X1, 3672
	339 Move X2, X31
	340 Call 0x3EB2B00
	341 Move X21, X0
	342 Call 0x3EB2AE0
	343 Move X0, X21
	344 Call 0x1D2D690
	345 Call 0x1991590

Method: System.Void ReadInput()

Disassembly:
	0x01ED13A0 B.EQ 0x1ED154C
	0x01ED13A4 SUBS X9, X9, 0x1
	0x01ED13A8 ADD X10, X10, 0x10
	0x01ED13AC B.NE 0x1ED1398
	0x01ED13B0 MOVZ W2, 0x3
	0x01ED13B4 MOV X0, X19
	0x01ED13B8 BL 0x1C5C788
	0x01ED13BC B 0x1ED155C
	0x01ED13C0 ADRP X20, 0x2507000
	0x01ED13C4 LDRB W8, [X20 + 0xB73]
	0x01ED13C8 CBNZ W8, 0x1ED13E0
	0x01ED13CC ADRP X0, 0x2227000
	0x01ED13D0 LDR X0, [X0 + 0x20]
	0x01ED13D4 BL 0x1C16CF4
	0x01ED13D8 MOVZ W8, 0x1
	0x01ED13DC STRB W8, [X20 + 0xB73]
	0x01ED13E0 STR X31, [X31 + 0x28]
	0x01ED13E4 LDR X0, [X19 + 0xB8]
	0x01ED13E8 CBZ X0, 0x1ED15D8
	0x01ED13EC ADRP X8, 0x2227000
	0x01ED13F0 LDR X8, [X8 + 0x20]
	0x01ED13F4 ADD X2, X31, 0x28
	0x01ED13F8 MOV X1, X23
	0x01ED13FC LDR X3, [X8]
	0x01ED1400 BL 0x2AE89D0
	0x01ED1404 LDR X23, [X31 + 0x28]
	0x01ED1408 CBZ X23, 0x1ED15D8
	0x01ED140C TBZ X0, 0x0, 0x1ED15D8
	0x01ED1410 LDR X0, [X23 + 0xB0]
	0x01ED1414 CBZ X0, 0x1ED15D8
	0x01ED1418 AND X24, X21, 0x0
	0x01ED141C MOV X1, X24
	0x01ED1420 BL 0x1ECE044
	0x01ED1424 CBZ X0, 0x1ED1484
	0x01ED1428 MOV X20, X0
	0x01ED142C LDR X0, [X23 + 0xB0]
	0x01ED1430 CBZ X0, 0x1ED15D8
	0x01ED1434 MOV X1, X24
	0x01ED1438 BL 0x1ED1688
	0x01ED143C ANDS W31, W0, 0xFF
	0x01ED1440 STP X0, X1, [X31 + 0x10]
	0x01ED1444 B.EQ 0x1ED146C
	0x01ED1448 ADRP X8, 0x222E000
	0x01ED144C LDR X8, [X8 + 0xE58]
	0x01ED1450 ADD X0, X31, 0x10
	0x01ED1454 LDR X1, [X8]
	0x01ED1458 BL 0x2431818
	0x01ED145C LDR V1, [X19 + 0xC8]
	0x01ED1460 MOV X0, X23
	0x01ED1464 MOV X1, X24
	0x01ED1468 BL 0x1ED172C
	0x01ED146C LDR X0, [X23 + 0xB0]
	0x01ED1470 CBZ X0, 0x1ED15D8
	0x01ED1474 ADD X2, X31, 0x8
	0x01ED1478 MOV X1, X24
	0x01ED147C BL 0x1ECD1C4
	0x01ED1480 B 0x1ED1590
	0x01ED1484 LDR X8, [X19 + 0x58]
	0x01ED1488 CBZ X8, 0x1ED15D8
	0x01ED148C LDR W8, [X8 + 0x38]
	0x01ED1490 CMP W8, 0x1
	0x01ED1494 B.NE 0x1ED1544
	0x01ED1498 LDR X0, [X19 + 0x98]
	0x01ED149C CBZ X0, 0x1ED15D8
	0x01ED14A0 BL 0x1ECE11C
	0x01ED14A4 CBZ X0, 0x1ED15D8
	0x01ED14A8 LDR X8, [X0 + 0x20]
	0x01ED14AC MOV X20, X0
	0x01ED14B0 STR W22, [X0 + 0x18]
	0x01ED14B4 CBZ X8, 0x1ED15D8
	0x01ED14B8 STR W21, [X8]
	0x01ED14BC LDR X8, [X23 + 0xB0]
	0x01ED14C0 CBZ X8, 0x1ED15D8
	0x01ED14C4 LDR X10, [X20 + 0x20]
	0x01ED14C8 CBZ X10, 0x1ED15D8
	0x01ED14CC LDR X9, [X8 + 0x40]
	0x01ED14D0 LDR W8, [X8 + 0x3C]
	0x01ED14D4 UBFM X11, X9, 0x20, 0x3F
	0x01ED14D8 STR W11, [X10 + 0xC]
	0x01ED14DC LDR X10, [X20 + 0x20]
	0x01ED14E0 CBZ X10, 0x1ED15D8
	0x01ED14E4 STR W9, [X10 + 0x8]
	0x01ED14E8 LDR X9, [X20 + 0x20]
	0x01ED14EC CBZ X9, 0x1ED15D8
	0x01ED14F0 STR W8, [X9 + 0x4]
	0x01ED14F4 LDR X21, [X19 + 0x40]
	0x01ED14F8 CBZ X21, 0x1ED15DC
	0x01ED14FC ADRP X10, 0x222D000
	0x01ED1500 LDR X8, [X21]
	0x01ED1504 LDR X10, [X10 + 0xA90]
	0x01ED1508 LDRH W9, [X8 + 0x12E]
	0x01ED150C LDR X1, [X10]
	0x01ED1510 CBZ X9, 0x1ED1534
	0x01ED1514 LDR X10, [X8 + 0xB0]
	0x01ED1518 ADD X10, X10, 0x8
	0x01ED151C LDUR X11, [X10 - 0x8]
	0x01ED1520 CMP X11, X1
	0x01ED1524 B.EQ 0x1ED1570
	0x01ED1528 SUBS X9, X9, 0x1
	0x01ED152C ADD X10, X10, 0x10
	0x01ED1530 B.NE 0x1ED151C
	0x01ED1534 MOVZ W2, 0x4
	0x01ED1538 MOV X0, X21
	0x01ED153C BL 0x1C5C788
	0x01ED1540 B 0x1ED1580
	0x01ED1544 MOV X20, X31
	0x01ED1548 B 0x1ED1590
	0x01ED154C LDR W9, [X10]
	0x01ED1550 ADD W9, W9, 0x3
	0x01ED1554 ADD X8, X8, W9, 0x4, SXTW
	0x01ED1558 ADD X0, X8, 0x138
	0x01ED155C LDP X8, X2, [X0]
	0x01ED1560 MOV X0, X19
	0x01ED1564 MOV X1, X20
	0x01ED1568 BLR X8
	0x01ED156C B 0x1ED15BC
	0x01ED1570 LDR W9, [X10]
	0x01ED1574 ADD W9, W9, 0x4
	0x01ED1578 ADD X8, X8, W9, 0x4, SXTW
	0x01ED157C ADD X0, X8, 0x138
	0x01ED1580 LDP X8, X2, [X0]
	0x01ED1584 MOV X0, X21
	0x01ED1588 MOV X1, X20
	0x01ED158C BLR X8
	0x01ED1590 LDR X8, [X19 + 0x58]
	0x01ED1594 CBZ X8, 0x1ED15D8
	0x01ED1598 LDR W8, [X8 + 0x38]
	0x01ED159C CMP W8, 0x2
	0x01ED15A0 B.NE 0x1ED15BC
	0x01ED15A4 CBZ X20, 0x1ED15BC
	0x01ED15A8 LDR X0, [X19 + 0x98]
	0x01ED15AC CBZ X0, 0x1ED15D8
	0x01ED15B0 MOV X1, X20
	0x01ED15B4 BL 0x1ECD2E4
	0x01ED15B8 MOV X20, X31
	0x01ED15BC MOV X0, X20
	0x01ED15C0 LDP X20, X19, [X31 + 0x50]
	0x01ED15C4 LDP X22, X21, [X31 + 0x40]
	0x01ED15C8 LDP X24, X23, [X31 + 0x30]
	0x01ED15CC LDR X30, [X31 + 0x20]
	0x01ED15D0 ADD X31, X31, 0x60
	0x01ED15D4 RET
	0x01ED15D8 BL 0x1C16F20
	0x01ED15DC BL 0x1C16F20
	0x01ED15E0 CMP W1, 0x1
	0x01ED15E4 MOV X21, X0
	0x01ED15E8 B.NE 0x1ED167C
	0x01ED15EC MOV X0, X21
	0x01ED15F0 BL 0x3EB1AD0
	0x01ED15F4 MOV X21, X0
	0x01ED15F8 ADRP X0, 0x2222000
	0x01ED15FC LDR X0, [X0 + 0x7D0]
	0x01ED1600 BL 0x1C16D08
	0x01ED1604 LDR X8, [X21]
	0x01ED1608 LDR X1, [X8]
	0x01ED160C BL 0x1C17270
	0x01ED1610 TBZ X0, 0x0, 0x1ED1654
	0x01ED1614 LDR X21, [X21]
	0x01ED1618 BL 0x3EB1AE0
	0x01ED161C ADRP X0, 0x222A000
	0x01ED1620 LDR X0, [X0 + 0x8B0]
	0x01ED1624 BL 0x1C16D08
	0x01ED1628 LDR W8, [X0 + 0xE0]
	0x01ED162C CBNZ W8, 0x1ED1634
	0x01ED1630 BL 0x1C16DFC
	0x01ED1634 ADRP X0, 0x222E000
	0x01ED1638 LDR X0, [X0 + 0xF68]
	0x01ED163C BL 0x1C16D08
	0x01ED1640 MOV X2, X0
	0x01ED1644 MOV X0, X19
	0x01ED1648 MOV X1, X21
	0x01ED164C BL 0x2213878
	0x01ED1650 B 0x1ED1590
	0x01ED1654 MOVZ W0, 0x8
	0x01ED1658 BL 0x3EB1AF0
	0x01ED165C LDR X8, [X21]
	0x01ED1660 STR X8, [X0]
	0x01ED1664 ADRP X1, 0x1FE3000
	0x01ED1668 ADD X1, X1, 0xE58
	0x01ED166C MOV X2, X31
	0x01ED1670 BL 0x3EB1B00
	0x01ED1674 MOV X21, X0
	0x01ED1678 BL 0x3EB1AE0
	0x01ED167C MOV X0, X21
	0x01ED1680 BL 0x1D2C690
	0x01ED1684 BL 0x1990590
	0x01ED1688 SUB X31, X31, 0x40
	0x01ED168C STP X30, X21, [X31 + 0x20]
	0x01ED1690 STP X20, X19, [X31 + 0x30]
	0x01ED1694 ADRP X21, 0x2508000
	0x01ED1698 LDRB W8, [X21 + 0x533]
	0x01ED169C MOV X19, X1
	0x01ED16A0 MOV X20, X0
	0x01ED16A4 TBNZ X8, 0x0, 0x1ED16C8
	0x01ED16A8 ADRP X0, 0x222E000
	0x01ED16AC LDR X0, [X0 + 0xF30]
	0x01ED16B0 BL 0x1C16CF4
	0x01ED16B4 ADRP X0, 0x222D000
	0x01ED16B8 LDR X0, [X0 + 0x7D0]
	0x01ED16BC BL 0x1C16CF4
	0x01ED16C0 MOVZ W8, 0x1
	0x01ED16C4 STRB W8, [X21 + 0x533]
	0x01ED16C8 STR X31, [X31 + 0x8]
	0x01ED16CC LDR X0, [X20 + 0x30]
	0x01ED16D0 CBZ X0, 0x1ED1728
	0x01ED16D4 ADRP X8, 0x222E000
	0x01ED16D8 LDR X8, [X8 + 0xF30]
	0x01ED16DC AND X1, X19, 0x0
	0x01ED16E0 ADD X2, X31, 0x8
	0x01ED16E4 LDR X3, [X8]
	0x01ED16E8 BL 0x2AF1D00
	0x01ED16EC TBZ X0, 0x0, 0x1ED1710
	0x01ED16F0 ADRP X8, 0x222D000
	0x01ED16F4 LDR V0, [X31 + 0x8]
	0x01ED16F8 LDR X8, [X8 + 0x7D0]
	0x01ED16FC ADD X0, X31, 0x10
	0x01ED1700 STP X31, X31, [X31 + 0x10]
	0x01ED1704 LDR X1, [X8]
	0x01ED1708 BL 0x2431800
	0x01ED170C B 0x1ED1714
	0x01ED1710 STP X31, X31, [X31 + 0x10]
	0x01ED1714 LDP X0, X1, [X31 + 0x10]
	0x01ED1718 LDP X20, X19, [X31 + 0x30]
	0x01ED171C LDP X30, X21, [X31 + 0x20]
	0x01ED1720 ADD X31, X31, 0x40
	0x01ED1724 RET
	0x01ED1728 BL 0x1C16F20
	0x01ED172C STR X30, [X31 - 0x10]!
	0x01ED1730 LDR W8, [X0 + 0xC0]
	0x01ED1734 CMP W8, W1
	0x01ED1738 B.GE 0x1ED175C
	0x01ED173C LDR X8, [X0 + 0xB8]
	0x01ED1740 STR W1, [X0 + 0xC0]
	0x01ED1744 CBZ X8, 0x1ED1764
	0x01ED1748 FSUB D0, D1, D0
	0x01ED174C MOV X0, X8
	0x01ED1750 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], D8
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X20, 0x2509000
	015 Move W8, [X20+1261]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x222F000
	022 Move X0, [X0+3888]
	023 Call 0x1C17CF4
	024 Move X0, 0x222E000
	025 Move X0, [X0+2000]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+1261], W8
	029 Move [X31+24], X31
	030 Move [X31+32], X31
	031 Move X8, [X19+272]
	032 Compare X8, 0
	033 JumpIfEqual {301}
	034 Move X0, [X8+40]
	035 Move X20, [X8+48]
	036 Move X1, X31
	037 Call NetBitBuffer.GetOffset, X0
	038 Move [X31+40], W0
	039 Move X8, [X19+272]
	040 Compare X8, 0
	041 JumpIfEqual {301}
	042 Move X0, [X8+40]
	043 Move X1, X31
	044 Call NetBitBufferSerializer.Reader, X0
	045 Move X8, [X19+272]
	046 Compare X8, 0
	047 JumpIfEqual {301}
	048 Move W26, [X8+29]
	049 Compare W26, 0
	050 JumpIfEqual {280}
	051 Move X8, [X19+88]
	052 Compare X8, 0
	053 JumpIfEqual {301}
	054 Move W9, [X8+24]
	055 Move X21, X1
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, X21
	058 Move X1, X31
	059 Call NetBitBuffer.SeekToByteBoundary, X0
	060 Move W1, 8
	061 Move X0, X21
	062 Move X2, X31
	063 Call NetBitBuffer.Read, X0, X1
	064 Move X27, 0x222E000
	065 Move X28, 0x222F000
	066 Move X27, [X27+2000]
	067 Move X28, [X28+3888]
	068 And W8, W0, 255
	069 Move W22, W8
	070 ShiftRight W22, 27
	071 And W22, W22, 0x3FFFFFF
	072 Move W23, W8
	073 ShiftRight W23, 30
	074 And W23, W23, 0x1FFFFFFF
	075 Move W8, [X21+80]
	076 Move X9, [X21+64]
	077 Add W10, W8, 7
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction CSEL not yet implemented."
	080 NotImplemented "Instruction SBFM not yet implemented."
	081 Move W24, [X9]
	082 Move W8, [X19+72]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X0, [X19+424]
	085 Compare X0, 0
	086 JumpIfNotEqual {92}
	087 Move X0, [X19+152]
	088 Compare X0, 0
	089 JumpIfEqual {301}
	090 Call Pool.Acquire, X0
	091 Move [X19+424], X0
	092 Move X8, [X19+272]
	093 Compare X8, 0
	094 JumpIfEqual {301}
	095 Compare X0, 0
	096 JumpIfEqual {301}
	097 Move W8, [X8+24]
	098 Move [X0+24], W8
	099 Move X8, [X19+424]
	100 Compare X8, 0
	101 JumpIfEqual {301}
	102 Move X1, [X8+32]
	103 Move X0, X21
	104 Move W2, W23
	105 Move X3, X31
	106 Call NetBitBuffer.ReadBytesAligned, X0, X1, X2
	107 Compare X20, 0
	108 JumpIfEqual {301}
	109 Move X0, [X20+176]
	110 Compare X0, 0
	111 JumpIfEqual {301}
	112 Call Buffer.get_Full, X0
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfEqual {168}
	117 Move V0, [X19+200]
	118 Move X1, [X27]
	119 Move X24, [X20+176]
	120 Move X25, [X19+424]
	121 Add X0, X31, 8
	122 Move [X31+8], X31
	123 Move [X31+16], X31
	124 Call Nullable`1<Double>..ctor, X0, V0
	125 Compare X24, 0
	126 JumpIfEqual {301}
	127 Move X2, [X31+8]
	128 Move X3, [X31+16]
	129 Move X0, X24
	130 Move X1, X25
	131 Call Buffer.Add, X0, X1, X2
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfNotEqual {168}
	136 Move [X19+424], X31
	137 Move X0, X21
	138 Move W1, W22
	139 Move W2, W31
	140 Move X3, X31
	141 Call 0x1EDDC4C
	142 Move X0, [X19+232]
	143 Compare X0, 0
	144 JumpIfEqual {301}
	145 Move X3, [X28]
	146 Add X2, X31, 32
	147 Move X1, X24
	148 Call Dictionary`2<Tick, Double>.TryGetValue, X0, X1, X2
	149 Move V8, [X19+200]
	150 Move TEMP, X0
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfNotEqual {157}
	154 Compare X20, 0
	155 JumpIfEqual {301}
	156 Move V1, [X31+32]
	157 Move X0, X19
	158 Move X1, X31
	159 Call Simulation.get_TickDeltaDouble, X0
	160 Compare X20, 0
	161 JumpIfEqual {301}
	162 NotImplemented "Instruction SCVTF not yet implemented."
	163 Multiply D1, D0, D1
	164 Move X0, X20
	165 Move X1, X24
	166 Move V0, V8
	167 Call SimulationConnection.InputReceiveDelta, X0, X1, V0, V1
	168 Subtract W26, W26, 1
	169 Move X23, [X19+144]
	170 Compare X23, 0
	171 JumpIfEqual {301}
	172 Move W8, [X8+16]
	173 Move X22, X0
	174 Move X0, [X23+32]
	175 Move X2, X31
	176 Move W8, W8
	177 ShiftRight W8, 30
	178 And W8, W8, 0x1FFFFFFF
	179 Add W1, W8, 16
	180 Call Native.MemClear, X0, X1
	181 Move X27, 0x222E000
	182 Move X28, 0x222F000
	183 Move X27, [X27+2000]
	184 Move X28, [X28+3888]
	185 Move X0, [X19+152]
	186 Compare X0, 0
	187 JumpIfEqual {301}
	188 Call Pool.Acquire, X0
	189 Move X8, [X19+272]
	190 Compare X8, 0
	191 JumpIfEqual {301}
	192 Move X24, X0
	193 Compare X0, 0
	194 JumpIfEqual {301}
	195 Move W8, [X8+24]
	196 Move X0, X24
	197 Move X1, X23
	198 Move X3, X22
	199 Move [X24+24], W8
	200 Move X2, [X19+88]
	201 Move X4, X21
	202 Call SimulationInput.Serialize, X0, X1, X2, X3
	203 Move X8, [X19+88]
	204 Compare X8, 0
	205 JumpIfEqual {301}
	206 Move W8, [X8+16]
	207 Move X0, X23
	208 Move X1, X24
	209 Add W2, W8, 4
	210 Call SimulationInput.CopyFrom, X0, X1, X2
	211 Move X8, [X24+32]
	212 Compare X8, 0
	213 JumpIfEqual {301}
	214 Move W1, [X8]
	215 Move W8, [X19+72]
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Compare X20, 0
	218 JumpIfEqual {301}
	219 Move X0, [X20+176]
	220 Compare X0, 0
	221 JumpIfEqual {301}
	222 Call Buffer.get_Full, X0
	223 Move TEMP, X0
	224 And TEMP, TEMP, 1
	225 Compare TEMP, 1
	226 JumpIfEqual {274}
	227 Move V0, [X19+200]
	228 Move X1, [X27]
	229 Move X25, [X20+176]
	230 Add X0, X31, 8
	231 Move [X31+8], X31
	232 Move [X31+16], X31
	233 Call Nullable`1<Double>..ctor, X0, V0
	234 Compare X25, 0
	235 JumpIfEqual {301}
	236 Move X2, [X31+8]
	237 Move X3, [X31+16]
	238 Move X0, X25
	239 Move X1, X24
	240 Call Buffer.Add, X0, X1, X2
	241 Move TEMP, X0
	242 And TEMP, TEMP, 1
	243 Compare TEMP, 1
	244 JumpIfNotEqual {274}
	245 Move X0, [X19+232]
	246 Compare X0, 0
	247 JumpIfEqual {301}
	248 Move X3, [X28]
	249 Add X2, X31, 24
	250 Call Dictionary`2<Tick, Double>.TryGetValue, X0, X1, X2
	251 Move X8, [X24+32]
	252 Compare X8, 0
	253 JumpIfEqual {301}
	254 Move W25, [X8]
	255 Move V8, [X19+200]
	256 Move TEMP, X0
	257 And TEMP, TEMP, 1
	258 Compare TEMP, 1
	259 JumpIfNotEqual {263}
	260 Compare X20, 0
	261 JumpIfEqual {301}
	262 Move V1, [X31+24]
	263 Move X0, X19
	264 Move X1, X31
	265 Call Simulation.get_TickDeltaDouble, X0
	266 Compare X20, 0
	267 JumpIfEqual {301}
	268 NotImplemented "Instruction SCVTF not yet implemented."
	269 Multiply D1, D0, D1
	270 Move X0, X20
	271 Move X1, X25
	272 Move V0, V8
	273 Call SimulationConnection.InputReceiveDelta, X0, X1, V0, V1
	274 Move X0, [X19+152]
	275 Compare X0, 0
	276 JumpIfEqual {301}
	277 Move X1, X24
	278 Call Pool.Release, X0, X1
	279 Subtract W26, W26, 1
	280 Move X8, [X19+272]
	281 Compare X8, 0
	282 JumpIfEqual {301}
	283 Move X1, [X8+40]
	284 Add X0, X31, 40
	285 Move X2, X31
	286 Call Offset.GetLength, X0, X1
	287 Move X20, [X31+128]
	288 Move X19, [X31+136]
	289 Move X22, [X31+112]
	290 Move X21, [X31+120]
	291 Move X24, [X31+96]
	292 Move X23, [X31+104]
	293 Move X26, [X31+80]
	294 Move X25, [X31+88]
	295 Move X28, [X31+64]
	296 Move X27, [X31+72]
	297 Move X30, [X31+56]
	298 Move V8, [X31+48]
	299 Add X31, X31, 144
	300 Return 
	301 Call 0x1C17F20

Method: System.Void ReadStateTick()

Disassembly:
	0x01ED1754 LDR X30, [X31], #0x10
	0x01ED1758 B 0x1E925E4
	0x01ED175C LDR X30, [X31], #0x10
	0x01ED1760 RET
	0x01ED1764 BL 0x1C16F20
	0x01ED1768 LDR X0, [X0 + 0x20]
	0x01ED176C UBFM W1, W1, 0x1E, 0x1D
	0x01ED1770 MOV X2, X31
	0x01ED1774 B 0x1E35770
	0x01ED1778 STR X30, [X31 - 0x10]!
	0x01ED177C CBZ X1, 0x1ED1798
	0x01ED1780 LDR X0, [X0 + 0x20]
	0x01ED1784 LDR X1, [X1 + 0x20]
	0x01ED1788 UBFM W2, W2, 0x1E, 0x1D
	0x01ED178C MOV X3, X31
	0x01ED1790 LDR X30, [X31], #0x10
	0x01ED1794 B 0x1E35764
	0x01ED1798 BL 0x1C16F20
	0x01ED179C LDR X0, [X0 + 0x1B0]
	0x01ED17A0 RET
	0x01ED17A4 SUB X31, X31, 0xD0
	0x01ED17A8 STP X29, X30, [X31 + 0x70]
	0x01ED17AC STP X28, X27, [X31 + 0x80]
	0x01ED17B0 STP X26, X25, [X31 + 0x90]
	0x01ED17B4 STP X24, X23, [X31 + 0xA0]
	0x01ED17B8 STP X22, X21, [X31 + 0xB0]
	0x01ED17BC STP X20, X19, [X31 + 0xC0]
	0x01ED17C0 ADRP X24, 0x2508000
	0x01ED17C4 ADRP X23, 0x222E000
	0x01ED17C8 ADRP X19, 0x222E000
	0x01ED17CC ADRP X22, 0x222E000
	0x01ED17D0 ADRP X20, 0x222E000
	0x01ED17D4 LDRB W8, [X24 + 0x4EF]
	0x01ED17D8 LDR X23, [X23 + 0xF70]
	0x01ED17DC LDR X19, [X19 + 0xF78]
	0x01ED17E0 LDR X22, [X22 + 0xF80]
	0x01ED17E4 LDR X20, [X20 + 0xF88]
	0x01ED17E8 MOV X21, X0
	0x01ED17EC TBNZ X8, 0x0, 0x1ED18C4
	0x01ED17F0 ADRP X0, 0x222E000
	0x01ED17F4 LDR X0, [X0 + 0xF90]
	0x01ED17F8 BL 0x1C16CF4
	0x01ED17FC ADRP X0, 0x222E000
	0x01ED1800 LDR X0, [X0 + 0xF98]
	0x01ED1804 BL 0x1C16CF4
	0x01ED1808 ADRP X0, 0x222E000
	0x01ED180C LDR X0, [X0 + 0xFA0]
	0x01ED1810 BL 0x1C16CF4
	0x01ED1814 ADRP X0, 0x222D000
	0x01ED1818 LDR X0, [X0 + 0x718]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x2509000
	009 Move W8, [X20+1262]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x222F000
	016 Move X0, [X0+3888]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1262], W8
	020 Move [X31+8], X31
	021 Move X8, [X19+272]
	022 Compare X8, 0
	023 JumpIfEqual {63}
	024 Move X0, [X19+232]
	025 Compare X0, 0
	026 JumpIfEqual {63}
	027 Move X9, 0x222F000
	028 Move X9, [X9+3888]
	029 Move W22, [X8+32]
	030 Move X20, [X8+48]
	031 Add X2, X31, 8
	032 Move X3, [X9]
	033 NotImplemented "Instruction BIC not yet implemented."
	034 Move X1, X21
	035 Call Dictionary`2<Tick, Double>.TryGetValue, X0, X1, X2
	036 Move V8, [X19+200]
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {44}
	041 Compare X20, 0
	042 JumpIfEqual {63}
	043 Move V1, [X31+8]
	044 Move X0, X19
	045 Move X1, X31
	046 Call Simulation.get_TickDeltaDouble, X0
	047 Compare X20, 0
	048 JumpIfEqual {63}
	049 NotImplemented "Instruction SCVTF not yet implemented."
	050 Multiply D1, D0, D1
	051 Move X0, X20
	052 Move X1, X21
	053 Move V0, V8
	054 Call SimulationConnection.InputReceiveDelta, X0, X1, V0, V1
	055 Move X20, [X31+48]
	056 Move X19, [X31+56]
	057 Move X22, [X31+32]
	058 Move X21, [X31+40]
	059 Move X30, [X31+24]
	060 Move V8, [X31+16]
	061 Add X31, X31, 64
	062 Return 
	063 Call 0x1C17F20

Method: System.Collections.Generic.Dictionary`2<Fusion.NetworkId, Fusion.NetworkObjectHeaderSnapshot> get_NetworkObjectMap()

Disassembly:
	0x01ED279C LDR X8, [X19 + 0x10]
	0x01ED27A0 CBZ X8, 0x1ED299C

ISIL:
	001 Move X0, [X0+432]
	002 Return X0

Method: System.ValueTuple`2<System.Collections.Generic.Dictionary`2<Fusion.NetworkId, Fusion.NetworkObjectHeaderPtr>, System.Collections.Generic.Dictionary`2<Fusion.NetworkId, System.Collections.Generic.List`1<Fusion.NetworkId>>> GetResumeObjectHeader()

Disassembly:
	0x01ED27A4 LDR X0, [X8 + 0x188]
	0x01ED27A8 CBZ X0, 0x1ED299C
	0x01ED27AC ADRP X8, 0x222D000
	0x01ED27B0 LDR X8, [X8 + 0xB90]
	0x01ED27B4 LDR X1, [X8]
	0x01ED27B8 ADD X8, X31, 0x0
	0x01ED27BC BL 0x2DB9990
	0x01ED27C0 LDR V0, [X31]
	0x01ED27C4 LDR X8, [X31 + 0x10]
	0x01ED27C8 ADRP X23, 0x222D000
	0x01ED27CC ADRP X24, 0x222C000
	0x01ED27D0 LDR X23, [X23 + 0xB80]
	0x01ED27D4 LDR X24, [X24 + 0x378]
	0x01ED27D8 STR V0, [X31 + 0x2]
	0x01ED27DC STR X8, [X31 + 0x30]
	0x01ED27E0 ADRP X25, 0x222E000
	0x01ED27E4 LDR X25, [X25]
	0x01ED27E8 LDR X1, [X23]
	0x01ED27EC ADD X0, X31, 0x20
	0x01ED27F0 BL 0x2BC2C98
	0x01ED27F4 TBZ X0, 0x0, 0x1ED28D8
	0x01ED27F8 LDR X0, [X19 + 0x10]
	0x01ED27FC CBZ X0, 0x1ED29A0
	0x01ED2800 LDR W21, [X31 + 0x30]
	0x01ED2804 ADD X2, X31, 0x18
	0x01ED2808 MOV X1, X21
	0x01ED280C MOV X3, X31
	0x01ED2810 BL 0x1EC0278
	0x01ED2814 TBZ X0, 0x0, 0x1ED27E8
	0x01ED2818 LDR X0, [X31 + 0x18]
	0x01ED281C CBZ X0, 0x1ED29A4
	0x01ED2820 MOV X1, X31
	0x01ED2824 BL 0x1E97358
	0x01ED2828 MOV X22, X0
	0x01ED282C LDR X0, [X24]
	0x01ED2830 LDR W8, [X0 + 0xE0]
	0x01ED2834 CBNZ W8, 0x1ED283C
	0x01ED2838 BL 0x1C16DFC
	0x01ED283C MOV X0, X31
	0x01ED2840 BL 0x1E98E98
	0x01ED2844 CMP W22, W0
	0x01ED2848 B.NE 0x1ED27E8
	0x01ED284C UBFM X8, X22, 0x20, 0x3F
	0x01ED2850 UBFM X9, X0, 0x20, 0x3F
	0x01ED2854 CMP W8, W9
	0x01ED2858 B.NE 0x1ED27E8
	0x01ED285C MOVZ W2, 0x1
	0x01ED2860 MOV X0, X20
	0x01ED2864 MOV X1, X21
	0x01ED2868 MOV W3, W31
	0x01ED286C BL 0x1ED0A18
	0x01ED2870 MOV X1, X0
	0x01ED2874 CBZ X1, 0x1ED29AC
	0x01ED2878 LDR X8, [X31 + 0x18]
	0x01ED287C STR X8, [X1 + 0x28]
	0x01ED2880 LDR X0, [X20 + 0x88]
	0x01ED2884 CBZ X0, 0x1ED29A8
	0x01ED2888 LDR W10, [X0 + 0x1C]
	0x01ED288C LDR X8, [X0 + 0x10]
	0x01ED2890 LDR X9, [X25]
	0x01ED2894 ADD W10, W10, 0x1
	0x01ED2898 STR W10, [X0 + 0x1C]
	0x01ED289C CBZ X8, 0x1ED29B0
	0x01ED28A0 LDRSW X10, [X0 + 0x18]
	0x01ED28A4 LDR W11, [X8 + 0x18]
	0x01ED28A8 CMP W10, W11
	0x01ED28AC B.CS 0x1ED28C4
	0x01ED28B0 ADD W9, W10, 0x1
	0x01ED28B4 ADD X8, X8, X10, 0x3, LSL
	0x01ED28B8 STR W9, [X0 + 0x18]
	0x01ED28BC STR X1, [X8 + 0x20]
	0x01ED28C0 B 0x1ED27E8
	0x01ED28C4 LDR X8, [X9 + 0x20]
	0x01ED28C8 LDR X8, [X8 + 0xC0]
	0x01ED28CC LDR X2, [X8 + 0x70]
	0x01ED28D0 BL 0x301BF90
	0x01ED28D4 B 0x1ED27E8
	0x01ED28D8 ADRP X8, 0x222D000
	0x01ED28DC LDR X8, [X8 + 0xB78]
	0x01ED28E0 ADD X0, X31, 0x20
	0x01ED28E4 LDR X1, [X8]
	0x01ED28E8 BL 0x2BC2C94
	0x01ED28EC ADRP X22, 0x222E000
	0x01ED28F0 LDR X22, [X22 + 0x18]
	0x01ED28F4 MOVZ W23, 0x5
	0x01ED28F8 LDR X0, [X20 + 0x88]
	0x01ED28FC CBZ X0, 0x1ED299C
	0x01ED2900 LDR W8, [X0 + 0x18]
	0x01ED2904 CMP W8, 0x0
	0x01ED2908 B.LE 0x1ED2984
	0x01ED290C LDR W9, [X20 + 0x84]
	0x01ED2910 ADD W9, W9, 0x1
	0x01ED2914 STR W9, [X20 + 0x84]
	0x01ED2918 LDR X2, [X22]
	0x01ED291C SDIV W10, W9, W8
	0x01ED2920 MSUB W1, W10, W8, W9
	0x01ED2924 BL 0x301BCCC
	0x01ED2928 CBZ X0, 0x1ED299C
	0x01ED292C MOV X21, X0
	0x01ED2930 ADD X0, X0, 0x54
	0x01ED2934 MOV X1, X31
	0x01ED2938 BL 0x1E967E8
	0x01ED293C LDR X1, [X21 + 0x28]
	0x01ED2940 CBZ X1, 0x1ED299C
	0x01ED2944 LDR W8, [X1 + 0x9C]
	0x01ED2948 BIC W9, W0, W0, 0x1F
	0x01ED294C CMP W9, W8
	0x01ED2950 CSEL W8, W8, W0, LT
	0x01ED2954 CMP W8, 0x1
	0x01ED2958 B.LT 0x1ED2968
	0x01ED295C LDR W9, [X21 + 0x3C]
	0x01ED2960 CMP W8, W9
	0x01ED2964 B.LE 0x1ED297C
	0x01ED2968 MOV X0, X19
	0x01ED296C MOV X2, X21
	0x01ED2970 BL 0x1ED5B84
	0x01ED2974 CMP W0, 0x2
	0x01ED2978 B.EQ 0x1ED2984
	0x01ED297C SUBS W23, W23, 0x1
	0x01ED2980 B.NE 0x1ED28F8
	0x01ED2984 LDP X20, X19, [X31 + 0x70]
	0x01ED2988 LDP X22, X21, [X31 + 0x60]
	0x01ED298C LDP X24, X23, [X31 + 0x50]
	0x01ED2990 LDP X30, X25, [X31 + 0x40]
	0x01ED2994 ADD X31, X31, 0x80
	0x01ED2998 RET
	0x01ED299C BL 0x1C16F20
	0x01ED29A0 BL 0x1C16F20
	0x01ED29A4 BL 0x1C16F20
	0x01ED29A8 BL 0x1C16F20
	0x01ED29AC BL 0x1C16F20
	0x01ED29B0 BL 0x1C16F20
	0x01ED29B4 B 0x1ED29DC
	0x01ED29B8 B 0x1ED29DC
	0x01ED29BC B 0x1ED29DC
	0x01ED29C0 B 0x1ED29DC
	0x01ED29C4 B 0x1ED29DC
	0x01ED29C8 B 0x1ED29DC
	0x01ED29CC B 0x1ED29DC
	0x01ED29D0 B 0x1ED29DC
	0x01ED29D4 B 0x1ED29DC
	0x01ED29D8 B 0x1ED29DC
	0x01ED29DC MOV X21, X0
	0x01ED29E0 CMP W1, 0x1
	0x01ED29E4 B.NE 0x1ED2A18
	0x01ED29E8 MOV X0, X21
	0x01ED29EC BL 0x3EB1AD0
	0x01ED29F0 LDR X22, [X0]
	0x01ED29F4 BL 0x3EB1AE0
	0x01ED29F8 ADRP X8, 0x222D000
	0x01ED29FC LDR X8, [X8 + 0xB78]
	0x01ED2A00 ADD X0, X31, 0x20
	0x01ED2A04 LDR X1, [X8]
	0x01ED2A08 BL 0x2BC2C94
	0x01ED2A0C CBZ X22, 0x1ED28EC
	0x01ED2A10 MOV X0, X22
	0x01ED2A14 BL 0x1C16F18
	0x01ED2A18 MOV X22, X31
	0x01ED2A1C B 0x1ED2A24
	0x01ED2A20 MOV X21, X0
	0x01ED2A24 ADRP X8, 0x222D000
	0x01ED2A28 LDR X8, [X8 + 0xB78]
	0x01ED2A2C LDR X1, [X8]
	0x01ED2A30 ADD X0, X31, 0x20
	0x01ED2A34 BL 0x2BC2C94
	0x01ED2A38 CBNZ X22, 0x1ED2A44
	0x01ED2A3C MOV X0, X21
	0x01ED2A40 BL 0x1D2C690
	0x01ED2A44 MOV X0, X22
	0x01ED2A48 BL 0x1C16F18
	0x01ED2A4C BL 0x1990590
	0x01ED2A50 LDR W8, [X0 + 0x14]
	0x01ED2A54 AND W0, W8, 0x1
	0x01ED2A58 RET
	0x01ED2A5C SUB X31, X31, 0x60
	0x01ED2A60 STP X30, X27, [X31 + 0x10]
	0x01ED2A64 STP X26, X25, [X31 + 0x20]
	0x01ED2A68 STP X24, X23, [X31 + 0x30]
	0x01ED2A6C STP X22, X21, [X31 + 0x40]
	0x01ED2A70 STP X20, X19, [X31 + 0x50]
	0x01ED2A74 LDR X8, [X0 + 0x10]
	0x01ED2A78 CBZ X8, 0x1ED2B70
	0x01ED2A7C LDR X21, [X8 + 0x108]
	0x01ED2A80 MOV X19, X0
	0x01ED2A84 MOV W20, W31
	0x01ED2A88 STR X31, [X31 + 0x8]
	0x01ED2A8C ADD X2, X31, 0x8
	0x01ED2A90 MOV X0, X19
	0x01ED2A94 MOV W1, W20
	0x01ED2A98 BL 0x1ED5508
	0x01ED2A9C ADD W20, W20, 0x1
	0x01ED2AA0 CMP W20, 0x5
	0x01ED2AA4 B.NE 0x1ED2A8C
	0x01ED2AA8 CBZ X21, 0x1ED2B70
	0x01ED2AAC LDR X8, [X21 + 0x38]
	0x01ED2AB0 CBZ X8, 0x1ED2B70
	0x01ED2AB4 LDR X0, [X8 + 0xC8]
	0x01ED2AB8 CBZ X0, 0x1ED2B70
	0x01ED2ABC MOV X1, X31
	0x01ED2AC0 BL 0x1E984D0
	0x01ED2AC4 LDR X19, [X31 + 0x8]
	0x01ED2AC8 CBZ X19, 0x1ED2B54
	0x01ED2ACC ADRP X20, 0x222C000
	0x01ED2AD0 LDR X20, [X20 + 0x438]
	0x01ED2AD4 ADRP X22, 0x2507000
	0x01ED2AD8 MOVZ W23, 0x1
	0x01ED2ADC MOVZ W24, 0x18
	0x01ED2AE0 LDR X25, [X19 + 0x18]
	0x01ED2AE4 STP X31, X31, [X19 + 0x10]
	0x01ED2AE8 LDR X8, [X21 + 0x38]
	0x01ED2AEC CBZ X8, 0x1ED2B70
	0x01ED2AF0 LDR X26, [X8 + 0xC8]
	0x01ED2AF4 CBZ X26, 0x1ED2B70
	0x01ED2AF8 LDRB W8, [X22 + 0x55D]
	0x01ED2AFC CBNZ W8, 0x1ED2B0C
	0x01ED2B00 MOV X0, X20
	0x01ED2B04 BL 0x1C16CF4
	0x01ED2B08 STRB W23, [X22 + 0x55D]
	0x01ED2B0C LDR X0, [X20]
	0x01ED2B10 LDR X26, [X26 + 0x30]
	0x01ED2B14 LDR W27, [X19 + 0x30]
	0x01ED2B18 LDR W8, [X0 + 0xE0]
	0x01ED2B1C CBNZ W8, 0x1ED2B24
	0x01ED2B20 BL 0x1C16DFC
	0x01ED2B24 CBZ X26, 0x1ED2B70
	0x01ED2B28 LDR W9, [X26 + 0x18]
	0x01ED2B2C SUB W8, W27, 0x1
	0x01ED2B30 CMP W8, W9
	0x01ED2B34 B.CS 0x1ED2B74
	0x01ED2B38 SMADDL X8, X8, X24, X26
	0x01ED2B3C ADD X0, X8, 0x20
	0x01ED2B40 MOV X1, X19
	0x01ED2B44 MOV X2, X31
	0x01ED2B48 BL 0x1EBD64C
	0x01ED2B4C MOV X19, X25
	0x01ED2B50 CBNZ X25, 0x1ED2AE0
	0x01ED2B54 LDP X20, X19, [X31 + 0x50]
	0x01ED2B58 LDP X22, X21, [X31 + 0x40]
	0x01ED2B5C LDP X24, X23, [X31 + 0x30]
	0x01ED2B60 LDP X26, X25, [X31 + 0x20]
	0x01ED2B64 LDP X30, X27, [X31 + 0x10]
	0x01ED2B68 ADD X31, X31, 0x60
	0x01ED2B6C RET
	0x01ED2B70 BL 0x1C16F20
	0x01ED2B74 BL 0x1C16F28
	0x01ED2B78 SUB X31, X31, 0x50
	0x01ED2B7C STP X30, X21, [X31 + 0x30]
	0x01ED2B80 STP X20, X19, [X31 + 0x40]
	0x01ED2B84 ADRP X21, 0x2507000
	0x01ED2B88 ADRP X20, 0x222E000

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X24, 0x2508000
	015 Move X23, 0x222E000
	016 Move X19, 0x222E000
	017 Move X22, 0x222E000
	018 Move X20, 0x222E000
	019 Move W8, [X24+1263]
	020 Move X23, [X23+3952]
	021 Move X19, [X19+3960]
	022 Move X22, [X22+3968]
	023 Move X20, [X20+3976]
	024 Move X21, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {82}
	029 Move X0, 0x222E000
	030 Move X0, [X0+3984]
	031 Call 0x1C17CF4
	032 Move X0, 0x222E000
	033 Move X0, [X0+3992]
	034 Call 0x1C17CF4
	035 Move X0, 0x222E000
	036 Move X0, [X0+4000]
	037 Call 0x1C17CF4
	038 Move X0, 0x222D000
	039 Move X0, [X0+1816]
	040 Call 0x1C17CF4
	041 Move X0, 0x222E000
	042 Move X0, [X0+3976]
	043 Call 0x1C17CF4
	044 Move X0, 0x222E000
	045 Move X0, [X0+3960]
	046 Call 0x1C17CF4
	047 Move X0, 0x222E000
	048 Move X0, [X0+3968]
	049 Call 0x1C17CF4
	050 Move X0, 0x222E000
	051 Move X0, [X0+3952]
	052 Call 0x1C17CF4
	053 Move X0, 0x222E000
	054 Move X0, [X0+4008]
	055 Call 0x1C17CF4
	056 Move X0, 0x222E000
	057 Move X0, [X0+4016]
	058 Call 0x1C17CF4
	059 Move X0, 0x222E000
	060 Move X0, [X0+4024]
	061 Call 0x1C17CF4
	062 Move X0, 0x222E000
	063 Move X0, [X0+4032]
	064 Call 0x1C17CF4
	065 Move X0, 0x222D000
	066 Move X0, [X0+2776]
	067 Call 0x1C17CF4
	068 Move X0, 0x222E000
	069 Move X0, [X0+48]
	070 Call 0x1C17CF4
	071 Move X0, 0x222E000
	072 Move X0, [X0+40]
	073 Call 0x1C17CF4
	074 Move X0, 0x2225000
	075 Move X0, [X0+920]
	076 Call 0x1C17CF4
	077 Move X0, 0x222E000
	078 Move X0, [X0+4040]
	079 Call 0x1C17CF4
	080 Move W8, 1
	081 Move [X24+1263], W8
	082 Move X0, [X23]
	083 NotImplemented "Instruction MOVI not yet implemented."
	084 Move [X31+80], X31
	085 Move [X31+48], V0
	086 Move [X31+56], V0
	087 Move [X31+40], X31
	088 Call 0x1C17F10
	089 Move X1, [X19]
	090 Move X19, X0
	091 Call Dictionary`2<NetworkId, NetworkObjectHeaderPtr>..ctor, X0
	092 Move X0, [X22]
	093 Call 0x1C17F10
	094 Move X1, [X20]
	095 Move X20, X0
	096 Call Dictionary`2<NetworkId, Object>..ctor, X0
	097 Move X0, [X21+432]
	098 Compare X0, 0
	099 JumpIfEqual {241}
	100 Move X8, 0x222E000
	101 Move X8, [X8+4000]
	102 Move X26, 0x222E000
	103 Move X27, 0x2225000
	104 Move X28, 0x222E000
	105 Move X29, 0x222D000
	106 Move X24, 0x222D000
	107 Move X26, [X26+4016]
	108 Move X27, [X27+920]
	109 Move X28, [X28+3984]
	110 Move X29, [X29+1816]
	111 Move X24, [X24+2776]
	112 Move X1, [X8]
	113 Move X25, 0x222E000
	114 Move X25, [X25+3992]
	115 Add X8, X31, 0
	116 Call Dictionary`2<NetworkId, Object>.GetEnumerator, X0
	117 Move V0, [X31]
	118 Move V1, [X31+16]
	119 Move X8, [X31+32]
	120 Move [X31+48], V0
	121 Move [X31+56], V1
	122 Move [X31+80], X8
	123 Move X1, [X26]
	124 Add X0, X31, 48
	125 Call Enumerator<NetworkId, Object>.MoveNext, X0
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfNotEqual {205}
	130 Move X8, [X31+72]
	131 Compare X8, 0
	132 JumpIfEqual {235}
	133 Move X21, [X8+48]
	134 Compare X21, 0
	135 JumpIfEqual {236}
	136 Move X0, [X27]
	137 Move W8, [X0+224]
	138 Compare W8, 0
	139 JumpIfNotEqual {141}
	140 Call 0x1C17DFC
	141 Move W1, [X21]
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Compare X19, 0
	144 JumpIfEqual {237}
	145 Move X3, [X28]
	146 Move X0, X19
	147 Move X2, X21
	148 Call Dictionary`2<NetworkId, NetworkObjectHeaderPtr>.Add, X0, X1, X2
	149 Move X0, [X27]
	150 Move W8, [X0+224]
	151 Compare W8, 0
	152 JumpIfNotEqual {154}
	153 Call 0x1C17DFC
	154 Move W1, [X21+16]
	155 Compare W1, 0
	156 JumpIfEqual {123}
	157 Compare X20, 0
	158 JumpIfEqual {240}
	159 Move X3, [X29]
	160 Add X2, X31, 40
	161 Move X0, X20
	162 Call Dictionary`2<NetworkId, Object>.TryGetValue, X0, X1, X2
	163 Move TEMP, X0
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfEqual {183}
	167 Move X8, 0x222E000
	168 Move W22, [X21+16]
	169 Move X8, [X8+40]
	170 Move X0, [X8]
	171 Call 0x1C17F10
	172 Move X8, 0x222E000
	173 Move X8, [X8+48]
	174 Move X23, X0
	175 Move X1, [X8]
	176 Call List`1<NetworkId>..ctor, X0
	177 Move X3, [X25]
	178 Move [X31+40], X23
	179 Move X0, X20
	180 Move X1, X22
	181 Move X2, X23
	182 Call Dictionary`2<NetworkId, Object>.Add, X0, X1, X2
	183 Move X0, [X31+40]
	184 Compare X0, 0
	185 JumpIfEqual {238}
	186 Move W10, [X0+28]
	187 Move W1, [X21]
	188 Move X8, [X0+16]
	189 Move X9, [X24]
	190 Add W10, W10, 1
	191 Move [X0+28], W10
	192 Compare X8, 0
	193 JumpIfEqual {239}
	194 NotImplemented "Instruction LDRSW not yet implemented."
	195 Move W11, [X8+24]
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Add W9, W10, 1
	198 Add X8, X8, X10
	199 Move [X0+24], W9
	200 Move [X8+32], W1
	201 Move X8, [X9+32]
	202 Move X8, [X8+192]
	203 Move X2, [X8+112]
	204 Call List`1<NetworkId>.AddWithResize, X0, X1
	205 Move X8, 0x222E000
	206 Move X8, [X8+4008]
	207 Add X0, X31, 48
	208 Move X1, [X8]
	209 Call Enumerator<NetworkId, Object>.Dispose, X0
	210 Move X8, 0x222E000
	211 Move X8, [X8+4040]
	212 Add X0, X31, 96
	213 Move X1, X19
	214 Move X2, X20
	215 Move X3, [X8]
	216 Move [X31+96], X31
	217 Move [X31+104], X31
	218 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	219 Move X0, [X31+96]
	220 Move X1, [X31+104]
	221 Move X20, [X31+192]
	222 Move X19, [X31+200]
	223 Move X22, [X31+176]
	224 Move X21, [X31+184]
	225 Move X24, [X31+160]
	226 Move X23, [X31+168]
	227 Move X26, [X31+144]
	228 Move X25, [X31+152]
	229 Move X28, [X31+128]
	230 Move X27, [X31+136]
	231 Move X29, [X31+112]
	232 Move X30, [X31+120]
	233 Add X31, X31, 208
	234 Return X0
	235 Call 0x1C17F20
	236 Call 0x1C17F20
	237 Call 0x1C17F20
	238 Call 0x1C17F20
	239 Call 0x1C17F20
	240 Call 0x1C17F20
	241 Call 0x1C17F20
	242 Move X21, X0
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Move X0, X21
	245 Call 0x3EB2AD0
	246 Move X22, [X0]
	247 Call 0x3EB2AE0
	248 Move X8, 0x222E000
	249 Move X8, [X8+4008]
	250 Add X0, X31, 48
	251 Move X1, [X8]
	252 Call Enumerator<NetworkId, Object>.Dispose, X0
	253 Compare X22, 0
	254 JumpIfEqual {210}
	255 Move X0, X22
	256 Call 0x1C17F18
	257 Move X22, X31
	258 Move X21, X0
	259 Move X8, 0x222E000
	260 Move X8, [X8+4008]
	261 Move X1, [X8]
	262 Add X0, X31, 48
	263 Call Enumerator<NetworkId, Object>.Dispose, X0
	264 Compare X22, 0
	265 JumpIfNotEqual {268}
	266 Move X0, X21
	267 Call 0x1D2D690
	268 Move X0, X22
	269 Call 0x1C17F18
	270 Call 0x1991590

Method: System.Void DisposeHostMigration()

Disassembly:
	0x01ED2B8C LDRB W8, [X21 + 0x4FD]
	0x01ED2B90 LDR X20, [X20 + 0x20]
	0x01ED2B94 MOV X19, X0
	0x01ED2B98 TBNZ X8, 0x0, 0x1ED2BEC
	0x01ED2B9C ADRP X0, 0x222C000
	0x01ED2BA0 LDR X0, [X0 + 0xA40]
	0x01ED2BA4 BL 0x1C16CF4
	0x01ED2BA8 ADRP X0, 0x222C000
	0x01ED2BAC LDR X0, [X0 + 0xA48]
	0x01ED2BB0 BL 0x1C16CF4
	0x01ED2BB4 ADRP X0, 0x222C000
	0x01ED2BB8 LDR X0, [X0 + 0xA50]
	0x01ED2BBC BL 0x1C16CF4
	0x01ED2BC0 ADRP X0, 0x222C000
	0x01ED2BC4 LDR X0, [X0 + 0xA58]
	0x01ED2BC8 BL 0x1C16CF4
	0x01ED2BCC ADRP X0, 0x222C000
	0x01ED2BD0 LDR X0, [X0 + 0xA60]
	0x01ED2BD4 BL 0x1C16CF4
	0x01ED2BD8 ADRP X0, 0x222E000
	0x01ED2BDC LDR X0, [X0 + 0x20]
	0x01ED2BE0 BL 0x1C16CF4
	0x01ED2BE4 MOVZ W8, 0x1
	0x01ED2BE8 STRB W8, [X21 + 0x4FD]
	0x01ED2BEC LDR X0, [X20]
	0x01ED2BF0 MOVI V0.2D, 0x0
	0x01ED2BF4 MOV X1, X31
	0x01ED2BF8 STR X31, [X31 + 0x20]
	0x01ED2BFC STP V0, V0, [X31]
	0x01ED2C00 BL 0x1E32108
	0x01ED2C04 LDR X8, [X19 + 0x10]
	0x01ED2C08 CBZ X8, 0x1ED2CA4
	0x01ED2C0C LDR X0, [X8 + 0x150]
	0x01ED2C10 CBZ X0, 0x1ED2CA4
	0x01ED2C14 ADRP X8, 0x222C000
	0x01ED2C18 LDR X8, [X8 + 0xA40]
	0x01ED2C1C ADRP X21, 0x222C000
	0x01ED2C20 ADRP X20, 0x222C000
	0x01ED2C24 LDR X1, [X8]
	0x01ED2C28 LDR X21, [X21 + 0xA50]
	0x01ED2C2C LDR X20, [X20 + 0xA48]
	0x01ED2C30 ADD X8, X31, 0x0
	0x01ED2C34 BL 0x2A67974
	0x01ED2C38 LDR X1, [X21]
	0x01ED2C3C ADD X0, X31, 0x0
	0x01ED2C40 BL 0x2C03E60
	0x01ED2C44 TBZ X0, 0x0, 0x1ED2C78
	0x01ED2C48 LDR X8, [X31 + 0x18]
	0x01ED2C4C CBZ X8, 0x1ED2C9C
	0x01ED2C50 LDR X9, [X8 + 0xB0]
	0x01ED2C54 CBZ X9, 0x1ED2CA0
	0x01ED2C58 LDRB W9, [X9 + 0x18]
	0x01ED2C5C TBNZ X9, 0x5, 0x1ED2C38
	0x01ED2C60 MOV X0, X19
	0x01ED2C64 MOV X1, X8
	0x01ED2C68 MOV X2, X31
	0x01ED2C6C BL 0x1ED51D4
	0x01ED2C70 CMP W0, 0x2
	0x01ED2C74 B.NE 0x1ED2C38
	0x01ED2C78 LDR X1, [X20]
	0x01ED2C7C ADD X0, X31, 0x0
	0x01ED2C80 BL 0x2C03F78
	0x01ED2C84 MOV X0, X31
	0x01ED2C88 BL 0x1E32194
	0x01ED2C8C LDP X20, X19, [X31 + 0x40]
	0x01ED2C90 LDP X30, X21, [X31 + 0x30]
	0x01ED2C94 ADD X31, X31, 0x50
	0x01ED2C98 RET
	0x01ED2C9C BL 0x1C16F20
	0x01ED2CA0 BL 0x1C16F20
	0x01ED2CA4 BL 0x1C16F20
	0x01ED2CA8 B 0x1ED2CB4
	0x01ED2CAC B 0x1ED2CB4
	0x01ED2CB0 B 0x1ED2CB4
	0x01ED2CB4 MOV X19, X0
	0x01ED2CB8 CMP W1, 0x1
	0x01ED2CBC B.NE 0x1ED2CF0
	0x01ED2CC0 MOV X0, X19
	0x01ED2CC4 BL 0x3EB1AD0
	0x01ED2CC8 LDR X20, [X0]
	0x01ED2CCC BL 0x3EB1AE0
	0x01ED2CD0 ADRP X8, 0x222C000
	0x01ED2CD4 LDR X8, [X8 + 0xA48]
	0x01ED2CD8 ADD X0, X31, 0x0
	0x01ED2CDC LDR X1, [X8]
	0x01ED2CE0 BL 0x2C03F78
	0x01ED2CE4 CBZ X20, 0x1ED2C84
	0x01ED2CE8 MOV X0, X20
	0x01ED2CEC BL 0x1C16F18
	0x01ED2CF0 MOV X20, X31
	0x01ED2CF4 B 0x1ED2CFC
	0x01ED2CF8 MOV X19, X0
	0x01ED2CFC ADRP X8, 0x222C000
	0x01ED2D00 LDR X8, [X8 + 0xA48]
	0x01ED2D04 LDR X1, [X8]
	0x01ED2D08 ADD X0, X31, 0x0
	0x01ED2D0C BL 0x2C03F78
	0x01ED2D10 CBNZ X20, 0x1ED2D1C
	0x01ED2D14 MOV X0, X19
	0x01ED2D18 BL 0x1D2C690
	0x01ED2D1C MOV X0, X20
	0x01ED2D20 BL 0x1C16F18

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X20, 0x2508000
	008 Move W8, [X20+1264]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0x222E000
	015 Move X0, [X0+3840]
	016 Call 0x1C17CF4
	017 Move X0, 0x222E000
	018 Move X0, [X0+3848]
	019 Call 0x1C17CF4
	020 Move X0, 0x222E000
	021 Move X0, [X0+3856]
	022 Call 0x1C17CF4
	023 Move X0, 0x222E000
	024 Move X0, [X0+3864]
	025 Call 0x1C17CF4
	026 Move X0, 0x222E000
	027 Move X0, [X0+3872]
	028 Call 0x1C17CF4
	029 Move X0, 0x222E000
	030 Move X0, [X0+3880]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+1264], W8
	034 Move [X31+8], X31
	035 Move [X31+16], X31
	036 Move [X31+24], X31
	037 Move X0, [X19+432]
	038 Compare X0, 0
	039 JumpIfEqual {85}
	040 Move X8, 0x222E000
	041 Move X8, [X8+3848]
	042 Move X1, [X8]
	043 Call Dictionary`2<NetworkId, Object>.get_Values, X0
	044 Compare X0, 0
	045 JumpIfEqual {85}
	046 Move X8, 0x222E000
	047 Move X8, [X8+3880]
	048 Move X21, 0x222E000
	049 Move X22, 0x222E000
	050 Move X20, 0x222E000
	051 Move X1, [X8]
	052 Move X21, [X21+3864]
	053 Move X22, [X22+3840]
	054 Move X20, [X20+3856]
	055 Add X8, X31, 8
	056 Call ValueCollection<NetworkId, Object>.GetEnumerator, X0
	057 Move X1, [X21]
	058 Add X0, X31, 8
	059 Call Enumerator<NetworkId, Object>.MoveNext, X0
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {69}
	064 Move X0, [X31+24]
	065 Compare X0, 0
	066 JumpIfEqual {84}
	067 Move X1, X31
	068 Call NetworkObjectHeaderSnapshot.Release, X0
	069 Move X1, [X20]
	070 Add X0, X31, 8
	071 Call Enumerator<NetworkId, Object>.Dispose, X0
	072 Move X0, [X19+432]
	073 Compare X0, 0
	074 JumpIfEqual {85}
	075 Move X1, [X22]
	076 Call Dictionary`2<NetworkId, Object>.Clear, X0
	077 Move X20, [X31+64]
	078 Move X19, [X31+72]
	079 Move X22, [X31+48]
	080 Move X21, [X31+56]
	081 Move X30, [X31+32]
	082 Add X31, X31, 80
	083 Return 
	084 Call 0x1C17F20
	085 Call 0x1C17F20
	086 Move X20, X0
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X0, X20
	089 Call 0x3EB2AD0
	090 Move X21, [X0]
	091 Call 0x3EB2AE0
	092 Move X8, 0x222E000
	093 Move X8, [X8+3856]
	094 Add X0, X31, 8
	095 Move X1, [X8]
	096 Call Enumerator<NetworkId, Object>.Dispose, X0
	097 Compare X21, 0
	098 JumpIfEqual {72}
	099 Move X0, X21
	100 Call 0x1C17F18
	101 Move X21, X31
	102 Move X20, X0
	103 Move X8, 0x222E000
	104 Move X8, [X8+3856]
	105 Move X1, [X8]
	106 Add X0, X31, 8
	107 Call Enumerator<NetworkId, Object>.Dispose, X0
	108 Compare X21, 0
	109 JumpIfNotEqual {112}
	110 Move X0, X20
	111 Call 0x1D2D690
	112 Move X0, X21
	113 Call 0x1C17F18
	114 Call 0x1991590

Method: System.Int32 WriteHostMigrationData(ref System.Byte[] target, System.Int32 targetBytes)

Disassembly:
	0x01ED2D24 BL 0x1990590
	0x01ED2D28 STR X30, [X31 - 0x40]!
	0x01ED2D2C STP X24, X23, [X31 + 0x10]
	0x01ED2D30 STP X22, X21, [X31 + 0x20]
	0x01ED2D34 STP X20, X19, [X31 + 0x30]
	0x01ED2D38 ADRP X20, 0x2507000
	0x01ED2D3C LDRB W8, [X20 + 0x4FC]
	0x01ED2D40 MOV X19, X0
	0x01ED2D44 TBNZ X8, 0x0, 0x1ED2D68
	0x01ED2D48 ADRP X0, 0x2224000
	0x01ED2D4C LDR X0, [X0 + 0x398]
	0x01ED2D50 BL 0x1C16CF4
	0x01ED2D54 ADRP X0, 0x222E000
	0x01ED2D58 LDR X0, [X0 + 0x28]
	0x01ED2D5C BL 0x1C16CF4
	0x01ED2D60 MOVZ W8, 0x1
	0x01ED2D64 STRB W8, [X20 + 0x4FC]
	0x01ED2D68 LDR X8, [X19 + 0x10]
	0x01ED2D6C CBZ X8, 0x1ED2DE4
	0x01ED2D70 LDR X21, [X8 + 0x110]
	0x01ED2D74 CBZ X21, 0x1ED2DE4
	0x01ED2D78 LDRB W22, [X21 + 0x1F]
	0x01ED2D7C CBZ W22, 0x1ED2DD0
	0x01ED2D80 ADRP X23, 0x2224000
	0x01ED2D84 ADRP X24, 0x222E000
	0x01ED2D88 LDR X23, [X23 + 0x398]
	0x01ED2D8C LDR X24, [X24 + 0x28]
	0x01ED2D90 LDR X0, [X23]
	0x01ED2D94 LDR X20, [X21 + 0x28]
	0x01ED2D98 LDR W8, [X0 + 0xE0]
	0x01ED2D9C CBNZ W8, 0x1ED2DA4
	0x01ED2DA0 BL 0x1C16DFC
	0x01ED2DA4 MOV X0, X20
	0x01ED2DA8 MOV X1, X31
	0x01ED2DAC BL 0x1E92FB4
	0x01ED2DB0 LDR X8, [X19 + 0x30]
	0x01ED2DB4 CBZ X8, 0x1ED2DE4
	0x01ED2DB8 LDR X2, [X24]
	0x01ED2DBC AND X1, X0, 0x0
	0x01ED2DC0 MOV X0, X8
	0x01ED2DC4 BL 0x24F0D48
	0x01ED2DC8 SUBS W22, W22, 0x1
	0x01ED2DCC B.NE 0x1ED2D90
	0x01ED2DD0 LDP X20, X19, [X31 + 0x30]
	0x01ED2DD4 LDP X22, X21, [X31 + 0x20]
	0x01ED2DD8 LDP X24, X23, [X31 + 0x10]
	0x01ED2DDC LDR X30, [X31], #0x40
	0x01ED2DE0 RET
	0x01ED2DE4 BL 0x1C16F20
	0x01ED2DE8 SUB X31, X31, 0x1C0
	0x01ED2DEC STP X29, X30, [X31 + 0x160]
	0x01ED2DF0 STP X28, X27, [X31 + 0x170]
	0x01ED2DF4 STP X26, X25, [X31 + 0x180]
	0x01ED2DF8 STP X24, X23, [X31 + 0x190]
	0x01ED2DFC STP X22, X21, [X31 + 0x1A0]
	0x01ED2E00 STP X20, X19, [X31 + 0x1B0]
	0x01ED2E04 MRS X20, 0xC000
	0x01ED2E08 LDR X8, [X20 + 0x28]
	0x01ED2E0C ADRP X19, 0x2507000
	0x01ED2E10 MOV X29, X0
	0x01ED2E14 STR X8, [X31 + 0x158]
	0x01ED2E18 LDRB W8, [X19 + 0x4F8]
	0x01ED2E1C TBNZ X8, 0x0, 0x1ED2EC4
	0x01ED2E20 ADRP X0, 0x222C000
	0x01ED2E24 LDR X0, [X0 + 0xA90]
	0x01ED2E28 BL 0x1C16CF4
	0x01ED2E2C ADRP X0, 0x222C000
	0x01ED2E30 LDR X0, [X0 + 0xE40]
	0x01ED2E34 BL 0x1C16CF4
	0x01ED2E38 ADRP X0, 0x222C000
	0x01ED2E3C LDR X0, [X0 + 0xE48]
	0x01ED2E40 BL 0x1C16CF4
	0x01ED2E44 ADRP X0, 0x2228000
	0x01ED2E48 LDR X0, [X0 + 0xC68]
	0x01ED2E4C BL 0x1C16CF4
	0x01ED2E50 ADRP X0, 0x2224000
	0x01ED2E54 LDR X0, [X0 + 0x398]
	0x01ED2E58 BL 0x1C16CF4
	0x01ED2E5C ADRP X0, 0x222C000
	0x01ED2E60 LDR X0, [X0 + 0x378]
	0x01ED2E64 BL 0x1C16CF4
	0x01ED2E68 ADRP X0, 0x222C000
	0x01ED2E6C LDR X0, [X0 + 0x6E8]
	0x01ED2E70 BL 0x1C16CF4
	0x01ED2E74 ADRP X0, 0x222C000
	0x01ED2E78 LDR X0, [X0 + 0xE28]
	0x01ED2E7C BL 0x1C16CF4
	0x01ED2E80 ADRP X0, 0x2221000
	0x01ED2E84 LDR X0, [X0 + 0x598]
	0x01ED2E88 BL 0x1C16CF4
	0x01ED2E8C ADRP X0, 0x2224000
	0x01ED2E90 LDR X0, [X0 + 0xE40]
	0x01ED2E94 BL 0x1C16CF4
	0x01ED2E98 ADRP X0, 0x222E000
	0x01ED2E9C LDR X0, [X0 + 0x28]
	0x01ED2EA0 BL 0x1C16CF4
	0x01ED2EA4 ADRP X0, 0x222D000
	0x01ED2EA8 LDR X0, [X0 + 0xB98]
	0x01ED2EAC BL 0x1C16CF4
	0x01ED2EB0 ADRP X0, 0x222D000
	0x01ED2EB4 LDR X0, [X0 + 0xBB8]
	0x01ED2EB8 BL 0x1C16CF4
	0x01ED2EBC MOVZ W8, 0x1
	0x01ED2EC0 STRB W8, [X19 + 0x4F8]
	0x01ED2EC4 MOVI V0.2D, 0x0
	0x01ED2EC8 STP X31, X31, [X31 + 0x50]
	0x01ED2ECC STR X31, [X31 + 0x48]
	0x01ED2ED0 STP V0, V0, [X31 + 0x130]
	0x01ED2ED4 STP V0, V0, [X31 + 0x110]
	0x01ED2ED8 STP V0, V0, [X31 + 0xF0]
	0x01ED2EDC STP V0, V0, [X31 + 0xD0]
	0x01ED2EE0 STP V0, V0, [X31 + 0xB0]
	0x01ED2EE4 STR W31, [X31 + 0x40]
	0x01ED2EE8 MOV X19, X29
	0x01ED2EEC LDR X8, [X19 + 0x10]!
	0x01ED2EF0 CBZ X8, 0x1ED42DC
	0x01ED2EF4 LDR X24, [X8 + 0x110]
	0x01ED2EF8 STR X20, [X31 + 0x8]
	0x01ED2EFC CBZ X24, 0x1ED42DC
	0x01ED2F00 LDRB W8, [X24 + 0x1E]
	0x01ED2F04 CBZ W8, 0x1ED42A8
	0x01ED2F08 ADD X8, X31, 0xB0
	0x01ED2F0C MOV W23, W31
	0x01ED2F10 MOV W20, W31
	0x01ED2F14 ORR X8, X8, 0xF
	0x01ED2F18 STP X8, X29, [X31 + 0x10]
	0x01ED2F1C STR X19, [X31 + 0x28]
	0x01ED2F20 LDR X0, [X24 + 0x28]
	0x01ED2F24 MOVZ W1, 0x6
	0x01ED2F28 MOV X2, X31
	0x01ED2F2C BL 0x1EFA5C0
	0x01ED2F30 ADRP X8, 0x2228000
	0x01ED2F34 LDR X8, [X8 + 0xC68]
	0x01ED2F38 MOV W22, W0
	0x01ED2F3C LDR X8, [X8]
	0x01ED2F40 LDR W9, [X8 + 0xE0]
	0x01ED2F44 CBNZ W9, 0x1ED2F50
	0x01ED2F48 MOV X0, X8
	0x01ED2F4C BL 0x1C16DFC
	0x01ED2F50 ADRP X8, 0x2224000
	0x01ED2F54 LDR X8, [X8 + 0x398]
	0x01ED2F58 LDR X0, [X8]
	0x01ED2F5C LDR W8, [X0 + 0xE0]
	0x01ED2F60 CBNZ W8, 0x1ED2F68
	0x01ED2F64 BL 0x1C16DFC
	0x01ED2F68 LDR X0, [X24 + 0x28]
	0x01ED2F6C MOVZ W1, 0x1
	0x01ED2F70 MOV X2, X31
	0x01ED2F74 BL 0x1EF9B00
	0x01ED2F78 LDR X8, [X19]
	0x01ED2F7C CBZ X8, 0x1ED42DC
	0x01ED2F80 AND W9, W22, 0x1
	0x01ED2F84 SUB W9, W31, W9
	0x01ED2F88 EOR W9, W9, W22, 0x1
	0x01ED2F8C ADD W20, W9, W20
	0x01ED2F90 MOV W26, W20
	0x01ED2F94 MOV X27, X0
	0x01ED2F98 ADD X2, X31, 0x58
	0x01ED2F9C MOV X0, X8
	0x01ED2FA0 MOV X1, X26
	0x01ED2FA4 MOV X3, X31
	0x01ED2FA8 BL 0x1EC0278
	0x01ED2FAC LDR X8, [X24 + 0x28]
	0x01ED2FB0 MOV W25, W0
	0x01ED2FB4 LDR W21, [X8 + 0x50]
	0x01ED2FB8 TBZ X0, 0x0, 0x1ED305C
	0x01ED2FBC LDR X28, [X19]
	0x01ED2FC0 MOV X8, X19
	0x01ED2FC4 CBZ X28, 0x1ED42DC
	0x01ED2FC8 MOV W19, W20
	0x01ED2FCC LDR X20, [X31 + 0x58]
	0x01ED2FD0 MOV X0, X28
	0x01ED2FD4 MOV X1, X31
	0x01ED2FD8 BL 0x1EC0810
	0x01ED2FDC CMP W0, 0x1
	0x01ED2FE0 B.NE 0x1ED2FF4
	0x01ED2FE4 MOV X0, X28
	0x01ED2FE8 MOV X1, X31
	0x01ED2FEC BL 0x1EBDF30
	0x01ED2FF0 B 0x1ED3028
	0x01ED2FF4 LDR X8, [X28]
	0x01ED2FF8 MOV X0, X28
	0x01ED2FFC LDR X9, [X8 + 0x268]
	0x01ED3000 LDR X1, [X8 + 0x270]
	0x01ED3004 BLR X9
	0x01ED3008 CBZ X20, 0x1ED42DC
	0x01ED300C LDR X8, [X20 + 0xB0]
	0x01ED3010 CBZ X8, 0x1ED42DC
	0x01ED3014 LDR W1, [X8 + 0x20]
	0x01ED3018 AND X2, X0, 0x0
	0x01ED301C MOV X0, X28
	0x01ED3020 MOV X3, X31
	0x01ED3024 BL 0x1DBF8E4
	0x01ED3028 MOV W20, W19
	0x01ED302C LDR X19, [X31 + 0x28]
	0x01ED3030 TBZ X0, 0x0, 0x1ED305C
	0x01ED3034 ADRP X8, 0x2223000
	0x01ED3038 LDR X8, [X8 + 0x398]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x2508000
	015 Move W8, [X20+1265]
	016 Move W23, W2
	017 Move X21, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0x2222000
	024 Move X0, [X0+1560]
	025 Call 0x1C17CF4
	026 Move X0, 0x2225000
	027 Move X0, [X0+920]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1265], W8
	031 Move [X31+8], X31
	032 Move W8, [X19+352]
	033 Compare W8, 0
	034 JumpIfEqual {213}
	035 Move X0, [X19+440]
	036 Compare X0, 0
	037 JumpIfNotEqual {42}
	038 Move W1, 0x10000
	039 Move X2, X31
	040 Call NetBitBuffer.Allocate, X0, X1
	041 Move [X19+440], X0
	042 Move X1, X31
	043 Move [X31], X21
	044 Call NetBitBuffer.Clear, X0
	045 Move X8, [X19+440]
	046 Move [X8+80], W31
	047 Move X0, [X19+360]
	048 Compare X0, 0
	049 JumpIfEqual {228}
	050 Move X26, 0x2225000
	051 Move X26, [X26+920]
	052 Move X1, X31
	053 Add X21, X19, 352
	054 Call NetworkObjectMeta.get_Id, X0
	055 Move X22, X0
	056 Move W27, W31
	057 Move W28, W23
	058 ShiftRight W28, 29
	059 And W28, W28, 0xFFFFFFF
	060 Move W8, 1
	061 Move TEMP, X8
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {78}
	065 Move X0, [X19+360]
	066 Compare X0, 0
	067 JumpIfEqual {228}
	068 Move X1, X31
	069 Call NetworkObjectMeta.get_Id, X0
	070 Move X8, [X26]
	071 Move X23, X0
	072 Move W9, [X8+224]
	073 Compare W9, 0
	074 JumpIfNotEqual {77}
	075 Move X0, X8
	076 Call 0x1C17DFC
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X8, [X19+440]
	079 Move W29, [X8+80]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X0, X21
	082 Move X1, X31
	083 Call ListMigration.RemoveHead, X0
	084 Compare X0, 0
	085 JumpIfEqual {228}
	086 Move X1, X31
	087 Move X23, X0
	088 Call NetworkObjectMeta.get_Migration, X0
	089 Move [X31+8], X0
	090 Move X24, [X19+440]
	091 Move X0, X23
	092 Move X1, X31
	093 Call NetworkObjectMeta.get_Id, X0
	094 Move X8, [X26]
	095 Move X25, X0
	096 Move W9, [X8+224]
	097 Compare W9, 0
	098 JumpIfNotEqual {101}
	099 Move X0, X8
	100 Call 0x1C17DFC
	101 Move W2, 8
	102 Move X0, X24
	103 Move W1, W25
	104 Move X3, X31
	105 Call NetBitBuffer.WriteUInt32VarLength, X0, X1, X2
	106 Move X8, [X23+176]
	107 Compare X8, 0
	108 JumpIfEqual {228}
	109 Move X0, [X19+440]
	110 NotImplemented "Instruction LDRSH not yet implemented."
	111 Move W2, 32
	112 Move X3, X31
	113 Call NetBitBuffer.Write, X0, X1, X2
	114 Move X20, [X23+176]
	115 Add X0, X31, 8
	116 Move X1, X31
	117 Call NetworkObjectHeaderSnapshotRef.get_UnsafePointer, X0
	118 Move W8, [X20]
	119 Move [X0], W8
	120 Move X8, [X23+176]
	121 Compare X8, 0
	122 JumpIfEqual {228}
	123 Add X24, X20, 4
	124 Add X25, X0, 4
	125 Move W20, 1
	126 Move W9, 1
	127 NotImplemented "Instruction LDRSH not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move W10, [X24]
	130 Move W11, [X25]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X0, [X19+440]
	133 Subtract W1, W20, W9
	134 Move X2, X31
	135 Call NetBitBuffer.WriteInt32VarLength, X0, X1
	136 Move X0, [X19+440]
	137 Move W1, [X24]
	138 Move X2, X31
	139 Call NetBitBuffer.WriteInt32VarLength, X0, X1
	140 Move W8, [X24]
	141 Move W9, W20
	142 Move [X25], W8
	143 Move X8, [X23+176]
	144 Add X20, X20, 1
	145 Add X24, X24, 4
	146 Add X25, X25, 4
	147 Compare X8, 0
	148 JumpIfNotEqual {127}
	149 Move X0, [X19+440]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move [X0+80], W29
	152 Move TEMP, 0x80000000
	153 Not TEMP
	154 Move W1, TEMP
	155 Move X2, X31
	156 Call NetBitBuffer.WriteInt32VarLength, X0, X1
	157 Add W27, W27, 1
	158 Move X0, X21
	159 Move X1, X23
	160 Move X2, X31
	161 Call ListMigration.AddLast, X0, X1
	162 Move W8, W31
	163 Move TEMP, X8
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfNotEqual {65}
	167 Compare W27, 0
	168 JumpIfEqual {213}
	169 Move X0, [X19+440]
	170 Move X1, X31
	171 Call NetBitBuffer.PadToByteBoundary, X0
	172 Move X20, [X31]
	173 Move X0, [X20]
	174 Compare X0, 0
	175 JumpIfEqual {228}
	176 Move X8, [X19+440]
	177 Move W9, [X0+24]
	178 Move W8, [X8+80]
	179 Add W10, W8, 7
	180 NotImplemented "Instruction CMP not yet implemented."
	181 NotImplemented "Instruction CSEL not yet implemented."
	182 NotImplemented "Instruction SBFM not yet implemented."
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move X9, 0x2222000
	185 Move X9, [X9+1560]
	186 Move W1, W8
	187 ShiftRight W1, 31
	188 And W1, W1, 0x3FFFFFFF
	189 Move X0, [X9]
	190 Call 0x1C17D6C
	191 Move [X20], X0
	192 Compare X0, 0
	193 JumpIfEqual {198}
	194 Move W8, [X0+24]
	195 Add X9, X0, 32
	196 NotImplemented "Instruction CMP not yet implemented."
	197 NotImplemented "Instruction CSEL not yet implemented."
	198 Move X8, [X19+440]
	199 Move X3, X31
	200 Move W9, [X8+80]
	201 Move X1, [X8+64]
	202 Add W8, W9, 7
	203 NotImplemented "Instruction CMP not yet implemented."
	204 NotImplemented "Instruction CSEL not yet implemented."
	205 NotImplemented "Instruction SBFM not yet implemented."
	206 Call Native.MemCpy, X0, X1, X2
	207 Move X8, [X19+440]
	208 Move W8, [X8+80]
	209 Add W9, W8, 7
	210 NotImplemented "Instruction CMP not yet implemented."
	211 NotImplemented "Instruction CSEL not yet implemented."
	212 NotImplemented "Instruction SBFM not yet implemented."
	213 Move W0, W31
	214 Move X20, [X31+96]
	215 Move X19, [X31+104]
	216 Move X22, [X31+80]
	217 Move X21, [X31+88]
	218 Move X24, [X31+64]
	219 Move X23, [X31+72]
	220 Move X26, [X31+48]
	221 Move X25, [X31+56]
	222 Move X28, [X31+32]
	223 Move X27, [X31+40]
	224 Move X29, [X31+16]
	225 Move X30, [X31+24]
	226 Add X31, X31, 112
	227 Return X0
	228 Call 0x1C17F20

Method: System.Void ReadHostMigrationData(System.Byte[] data)

Disassembly:
	0x01ED0B98 CBNZ W14, 0x1ED0BB4
	0x01ED0B9C CBZ X10, 0x1ED0D40
	0x01ED0BA0 LDR W13, [X13 + 0x68]
	0x01ED0BA4 LDR X14, [X10 + 0x48]
	0x01ED0BA8 LSLV X13, X12, X13
	0x01ED0BAC BIC X13, X14, X13, 0x0
	0x01ED0BB0 STR X13, [X10 + 0x48]
	0x01ED0BB4 ADD X9, X9, 0x1
	0x01ED0BB8 CMP W9, W8
	0x01ED0BBC B.LT 0x1ED0B84
	0x01ED0BC0 LDR X0, [X20 + 0x18]
	0x01ED0BC4 CBZ X0, 0x1ED0D40
	0x01ED0BC8 ADRP X8, 0x222F000
	0x01ED0BCC LDR X2, [X31 + 0x18]
	0x01ED0BD0 LDR X8, [X8 + 0xF38]
	0x01ED0BD4 MOV X1, X19
	0x01ED0BD8 LDR X3, [X8]
	0x01ED0BDC BL 0x2A67538
	0x01ED0BE0 LDR X0, [X31 + 0x10]
	0x01ED0BE4 CBZ X0, 0x1ED0D40
	0x01ED0BE8 MOV X1, X31
	0x01ED0BEC BL 0x1E97320
	0x01ED0BF0 TBNZ X0, 0x0, 0x1ED0D28
	0x01ED0BF4 LDR X8, [X20 + 0x10]
	0x01ED0BF8 CBZ X8, 0x1ED0D40
	0x01ED0BFC LDR X8, [X8 + 0x58]
	0x01ED0C00 CBZ X8, 0x1ED0D40
	0x01ED0C04 LDRB W8, [X8 + 0x14]
	0x01ED0C08 TBZ X8, 0x0, 0x1ED0D28
	0x01ED0C0C LDR X0, [X20 + 0xC8]
	0x01ED0C10 CBZ X0, 0x1ED0D40
	0x01ED0C14 LDP X2, X1, [X31 + 0x10]
	0x01ED0C18 MOV X3, X31
	0x01ED0C1C BL 0x1E98790
	0x01ED0C20 LDR X0, [X20 + 0x10]
	0x01ED0C24 CBZ X0, 0x1ED0D40
	0x01ED0C28 MOV X1, X31
	0x01ED0C2C BL 0x1EC0864
	0x01ED0C30 TBNZ X0, 0x0, 0x1ED0C54
	0x01ED0C34 LDR X8, [X20 + 0x10]
	0x01ED0C38 CBZ X8, 0x1ED0D40
	0x01ED0C3C LDR X8, [X8 + 0x58]
	0x01ED0C40 CBZ X8, 0x1ED0D40
	0x01ED0C44 LDR W8, [X8 + 0x14]
	0x01ED0C48 ORN W8, W31, W8, 0x0
	0x01ED0C4C ANDS W31, W8, 0x3
	0x01ED0C50 B.EQ 0x1ED0C6C
	0x01ED0C54 LDR X0, [X31 + 0x18]
	0x01ED0C58 CBZ X0, 0x1ED0D40
	0x01ED0C5C LDR X2, [X20 + 0x10]
	0x01ED0C60 MOVZ W1, 0x1
	0x01ED0C64 MOV X3, X31
	0x01ED0C68 BL 0x1E94D10
	0x01ED0C6C LDR X8, [X31 + 0x10]
	0x01ED0C70 CBZ X8, 0x1ED0D40
	0x01ED0C74 LDR X8, [X8 + 0xB0]
	0x01ED0C78 CBZ X8, 0x1ED0D40
	0x01ED0C7C LDRB W8, [X8 + 0x18]
	0x01ED0C80 TBZ X8, 0x0, 0x1ED0D28
	0x01ED0C84 LDR X0, [X31 + 0x18]
	0x01ED0C88 CBZ X0, 0x1ED0D40
	0x01ED0C8C LDR X2, [X20 + 0x10]
	0x01ED0C90 MOVZ W1, 0x2
	0x01ED0C94 MOV X3, X31
	0x01ED0C98 BL 0x1E94D10
	0x01ED0C9C LDR X8, [X20 + 0x10]
	0x01ED0CA0 CBZ X8, 0x1ED0DB8
	0x01ED0CA4 LDR X21, [X8 + 0x40]
	0x01ED0CA8 CBZ X21, 0x1ED0DBC
	0x01ED0CAC ADRP X10, 0x222E000
	0x01ED0CB0 LDR X8, [X21]
	0x01ED0CB4 LDR W20, [X20 + 0x28]
	0x01ED0CB8 LDR X10, [X10 + 0xA90]
	0x01ED0CBC LDRH W9, [X8 + 0x12E]
	0x01ED0CC0 LDR X1, [X10]
	0x01ED0CC4 CBZ X9, 0x1ED0CE8
	0x01ED0CC8 LDR X10, [X8 + 0xB0]
	0x01ED0CCC ADD X10, X10, 0x8
	0x01ED0CD0 LDUR X11, [X10 - 0x8]
	0x01ED0CD4 CMP X11, X1
	0x01ED0CD8 B.EQ 0x1ED0D04
	0x01ED0CDC SUBS X9, X9, 0x1
	0x01ED0CE0 ADD X10, X10, 0x10
	0x01ED0CE4 B.NE 0x1ED0CD0
	0x01ED0CE8 MOVZ W2, 0x20
	0x01ED0CEC MOV X0, X21
	0x01ED0CF0 BL 0x1C5C788
	0x01ED0CF4 B 0x1ED0D14
	0x01ED0CF8 TBZ X22, 0x0, 0x1ED0D48
	0x01ED0CFC MOV X0, X31
	0x01ED0D00 B 0x1ED0D2C
	0x01ED0D04 LDR W9, [X10]
	0x01ED0D08 ADD W9, W9, 0x20
	0x01ED0D0C ADD X8, X8, W9, 0x4, SXTW
	0x01ED0D10 ADD X0, X8, 0x138
	0x01ED0D14 LDP X8, X3, [X0]
	0x01ED0D18 MOV X0, X21
	0x01ED0D1C MOV X1, X20
	0x01ED0D20 MOV X2, X19
	0x01ED0D24 BLR X8
	0x01ED0D28 LDR X0, [X31 + 0x18]
	0x01ED0D2C LDP X20, X19, [X31 + 0x40]
	0x01ED0D30 LDP X22, X21, [X31 + 0x30]
	0x01ED0D34 LDP X30, X23, [X31 + 0x20]
	0x01ED0D38 ADD X31, X31, 0x50
	0x01ED0D3C RET
	0x01ED0D40 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X21, 0x250A000
	009 Move W8, [X21+1266]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x2230000
	017 Move X0, [X0+3840]
	018 Call 0x1C17CF4
	019 Move X0, 0x2230000
	020 Move X0, [X0+3848]
	021 Call 0x1C17CF4
	022 Move X0, 0x2230000
	023 Move X0, [X0+3856]
	024 Call 0x1C17CF4
	025 Move X0, 0x2230000
	026 Move X0, [X0+3864]
	027 Call 0x1C17CF4
	028 Move X0, 0x2230000
	029 Move X0, [X0+3872]
	030 Call 0x1C17CF4
	031 Move X0, 0x2230000
	032 Move X0, [X0+3880]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+1266], W8
	036 Move [X31+8], X31
	037 Move [X31+16], X31
	038 Move [X31+24], X31
	039 Move X0, [X20+432]
	040 Compare X0, 0
	041 JumpIfEqual {92}
	042 Move X8, 0x2230000
	043 Move X8, [X8+3848]
	044 Move X1, [X8]
	045 Call Dictionary`2<NetworkId, Object>.get_Values, X0
	046 Compare X0, 0
	047 JumpIfEqual {92}
	048 Move X8, 0x2230000
	049 Move X8, [X8+3880]
	050 Move X22, 0x2230000
	051 Move X23, 0x2230000
	052 Move X21, 0x2230000
	053 Move X1, [X8]
	054 Move X22, [X22+3864]
	055 Move X23, [X23+3840]
	056 Move X21, [X21+3856]
	057 Add X8, X31, 8
	058 Call ValueCollection<NetworkId, Object>.GetEnumerator, X0
	059 Move X1, [X22]
	060 Add X0, X31, 8
	061 Call Enumerator<NetworkId, Object>.MoveNext, X0
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {71}
	066 Move X0, [X31+24]
	067 Compare X0, 0
	068 JumpIfEqual {91}
	069 Move X1, X31
	070 Call NetworkObjectHeaderSnapshot.Release, X0
	071 Move X1, [X21]
	072 Add X0, X31, 8
	073 Call Enumerator<NetworkId, Object>.Dispose, X0
	074 Move X0, [X20+432]
	075 Compare X0, 0
	076 JumpIfEqual {92}
	077 Move X1, [X23]
	078 Call Dictionary`2<NetworkId, Object>.Clear, X0
	079 Move X1, [X20+432]
	080 Move X2, [X20+408]
	081 Move X0, X19
	082 Call Server.ProcessHostMigrationData, X0, X1, X2
	083 Move X20, [X31+64]
	084 Move X19, [X31+72]
	085 Move X22, [X31+48]
	086 Move X21, [X31+56]
	087 Move X30, [X31+32]
	088 Move X23, [X31+40]
	089 Add X31, X31, 80
	090 Return 
	091 Call 0x1C17F20
	092 Call 0x1C17F20
	093 Move X21, X0
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X0, X21
	096 Call 0x3EB2AD0
	097 Move X22, [X0]
	098 Call 0x3EB2AE0
	099 Move X8, 0x2230000
	100 Move X8, [X8+3856]
	101 Add X0, X31, 8
	102 Move X1, [X8]
	103 Call Enumerator<NetworkId, Object>.Dispose, X0
	104 Compare X22, 0
	105 JumpIfEqual {74}
	106 Move X0, X22
	107 Call 0x1C17F18
	108 Move X22, X31
	109 Move X21, X0
	110 Move X8, 0x2230000
	111 Move X8, [X8+3856]
	112 Move X1, [X8]
	113 Add X0, X31, 8
	114 Call Enumerator<NetworkId, Object>.Dispose, X0
	115 Compare X22, 0
	116 JumpIfNotEqual {119}
	117 Move X0, X21
	118 Call 0x1D2D690
	119 Move X0, X22
	120 Call 0x1C17F18
	121 Call 0x1991590

Method: System.Void ProcessHostMigrationData(System.Byte[] data, System.Collections.Generic.Dictionary`2<Fusion.NetworkId, Fusion.NetworkObjectHeaderSnapshot> networkObjectMap, Fusion.Allocator* allocator)

Disassembly:
	0x01ED303C LDR X0, [X8]
	0x01ED3040 LDR W8, [X0 + 0xE0]
	0x01ED3044 CBNZ W8, 0x1ED304C
	0x01ED3048 BL 0x1C16DFC
	0x01ED304C MOV X0, X31
	0x01ED3050 BL 0x1E92E50
	0x01ED3054 CMP W20, W0
	0x01ED3058 B.EQ 0x1ED359C
	0x01ED305C MOV X0, X29
	0x01ED3060 MOV X1, X26
	0x01ED3064 BL 0x1ED46E0
	0x01ED3068 TBNZ X0, 0x0, 0x1ED359C
	0x01ED306C MOVI V0.2D, 0x0
	0x01ED3070 CMP X27, 0x1
	0x01ED3074 STP V0, V0, [X31 + 0x130]
	0x01ED3078 STP V0, V0, [X31 + 0x110]
	0x01ED307C STR V0, [X31 + 0x10]
	0x01ED3080 B.NE 0x1ED3108
	0x01ED3084 MOVZ W28, 0x4
	0x01ED3088 STR W20, [X31 + 0x100]
	0x01ED308C LDR X0, [X24 + 0x28]
	0x01ED3090 MOVZ W1, 0x1
	0x01ED3094 MOV X2, X31
	0x01ED3098 BL 0x1EF9B00
	0x01ED309C CMP X0, 0x1
	0x01ED30A0 B.NE 0x1ED30EC
	0x01ED30A4 LDR X0, [X24 + 0x28]
	0x01ED30A8 MOVZ W1, 0x6
	0x01ED30AC MOV X2, X31
	0x01ED30B0 BL 0x1EFA4E0
	0x01ED30B4 ADRP X8, 0x2227000
	0x01ED30B8 LDR X8, [X8 + 0xC68]
	0x01ED30BC MOV X22, X0
	0x01ED30C0 LDR X8, [X8]
	0x01ED30C4 LDR W9, [X8 + 0xE0]
	0x01ED30C8 CBNZ W9, 0x1ED30D4
	0x01ED30CC MOV X0, X8
	0x01ED30D0 BL 0x1C16DFC
	0x01ED30D4 AND W9, W22, 0x1
	0x01ED30D8 UBFM X8, X22, 0x1, 0x3F
	0x01ED30DC SUB W9, W31, W9
	0x01ED30E0 EOR W8, W8, W9, 0x0
	0x01ED30E4 ADD X9, X31, 0x100
	0x01ED30E8 STR W8, [X9, X28, LSL]
	0x01ED30EC ADD X28, X28, 0x4
	0x01ED30F0 CMP X28, 0x50
	0x01ED30F4 B.NE 0x1ED308C
	0x01ED30F8 TBZ X25, 0x0, 0x1ED3114
	0x01ED30FC MOV W25, W31
	0x01ED3100 MOVZ W28, 0x13
	0x01ED3104 B 0x1ED32CC
	0x01ED3108 MOV W25, W31
	0x01ED310C MOV W28, W31
	0x01ED3110 B 0x1ED32CC
	0x01ED3114 MOV X8, X19
	0x01ED3118 LDR X28, [X8]
	0x01ED311C ADRP X8, 0x222B000
	0x01ED3120 MOV W19, W20
	0x01ED3124 LDR W25, [X31 + 0x100]
	0x01ED3128 LDR X29, [X31 + 0x108]
	0x01ED312C LDRSH W22, [X31 + 0x104]
	0x01ED3130 LDR W20, [X31 + 0x118]
	0x01ED3134 LDR W1, [X31 + 0x110]
	0x01ED3138 LDR X8, [X8 + 0x6E8]
	0x01ED313C ADD X0, X31, 0x60
	0x01ED3140 STR X31, [X31 + 0x60]
	0x01ED3144 LDR X2, [X8]
	0x01ED3148 BL 0x2435D9C
	0x01ED314C ADRP X8, 0x222B000
	0x01ED3150 LDR W1, [X31 + 0x114]
	0x01ED3154 LDR X8, [X8 + 0xE28]
	0x01ED3158 ADD X0, X31, 0x30
	0x01ED315C STR X31, [X31 + 0x30]
	0x01ED3160 LDR X2, [X8]
	0x01ED3164 BL 0x243667C
	0x01ED3168 CBZ X28, 0x1ED42DC
	0x01ED316C LDR X5, [X31 + 0x60]
	0x01ED3170 LDR X6, [X31 + 0x30]
	0x01ED3174 UBFM W4, W20, 0x5, 0x5
	0x01ED3178 MOV X0, X28
	0x01ED317C MOV X1, X25
	0x01ED3180 MOV X2, X29
	0x01ED3184 MOV W3, W22
	0x01ED3188 MOV X7, X31
	0x01ED318C BL 0x1EC98AC
	0x01ED3190 STR X0, [X31 + 0x58]
	0x01ED3194 CBZ X0, 0x1ED42DC
	0x01ED3198 MOV X1, X31
	0x01ED319C BL 0x1E97370
	0x01ED31A0 ADRP X8, 0x2223000
	0x01ED31A4 LDR X8, [X8 + 0x398]
	0x01ED31A8 LDR X29, [X31 + 0x18]
	0x01ED31AC MOV X22, X0
	0x01ED31B0 MOV W20, W19
	0x01ED31B4 LDR X8, [X8]
	0x01ED31B8 LDR W9, [X8 + 0xE0]
	0x01ED31BC CBNZ W9, 0x1ED31C8
	0x01ED31C0 MOV X0, X8
	0x01ED31C4 BL 0x1C16DFC
	0x01ED31C8 SUB W8, W22, 0x1
	0x01ED31CC CMP W8, 0x3FF
	0x01ED31D0 B.CC 0x1ED3258
	0x01ED31D4 LDR X8, [X31 + 0x58]
	0x01ED31D8 CBZ X8, 0x1ED42DC
	0x01ED31DC LDR X20, [X8 + 0xB0]
	0x01ED31E0 CBZ X20, 0x1ED42DC
	0x01ED31E4 ADRP X8, 0x2223000
	0x01ED31E8 LDR X8, [X8 + 0x398]
	0x01ED31EC LDR X0, [X8]
	0x01ED31F0 LDR W8, [X0 + 0xE0]
	0x01ED31F4 CBNZ W8, 0x1ED31FC
	0x01ED31F8 BL 0x1C16DFC
	0x01ED31FC LDR W8, [X20 + 0x10]
	0x01ED3200 CBZ W8, 0x1ED3224
	0x01ED3204 LDR X25, [X29 + 0x28]
	0x01ED3208 CBZ X25, 0x1ED3224
	0x01ED320C LDR X0, [X31 + 0x58]
	0x01ED3210 CBZ X0, 0x1ED42DC
	0x01ED3214 MOV X1, X31
	0x01ED3218 MOV W20, W19
	0x01ED321C BL 0x1E97370
	0x01ED3220 B 0x1ED3240
	0x01ED3224 LDR X0, [X31 + 0x58]
	0x01ED3228 CBZ X0, 0x1ED42DC
	0x01ED322C LDR X25, [X29 + 0x20]
	0x01ED3230 MOV X1, X31
	0x01ED3234 MOV W20, W19
	0x01ED3238 BL 0x1E97370
	0x01ED323C CBZ X25, 0x1ED42DC
	0x01ED3240 ADRP X8, 0x222D000
	0x01ED3244 LDR X8, [X8 + 0x28]
	0x01ED3248 AND X1, X0, 0x0
	0x01ED324C MOV X0, X25
	0x01ED3250 LDR X2, [X8]
	0x01ED3254 BL 0x24F0D48
	0x01ED3258 LDR X19, [X31 + 0x28]
	0x01ED325C LDR X0, [X19]
	0x01ED3260 CBZ X0, 0x1ED42DC
	0x01ED3264 MOV X1, X31
	0x01ED3268 BL 0x1EC0810
	0x01ED326C CMP W0, 0x2
	0x01ED3270 B.NE 0x1ED32AC
	0x01ED3274 LDR X0, [X31 + 0x58]
	0x01ED3278 CBZ X0, 0x1ED42DC
	0x01ED327C LDR X22, [X24 + 0x30]
	0x01ED3280 MOV X1, X31
	0x01ED3284 BL 0x1E97370
	0x01ED3288 CBZ X22, 0x1ED42DC
	0x01ED328C AND X1, X0, 0x0
	0x01ED3290 MOVZ W2, 0x1
	0x01ED3294 MOV X0, X22
	0x01ED3298 MOV W3, W31

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X29
	003 Move [X31+136], X30
	004 Move [X31+144], X28
	005 Move [X31+152], X27
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X25+40]
	016 Move X22, 0x2507000
	017 Move X19, X2
	018 Move X20, X1
	019 Move [X31+120], X8
	020 Move W8, [X22+1267]
	021 Move X21, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {40}
	026 Move X0, 0x222D000
	027 Move X0, [X0+4048]
	028 Call 0x1C17CF4
	029 Move X0, 0x222D000
	030 Move X0, [X0+4056]
	031 Call 0x1C17CF4
	032 Move X0, 0x2224000
	033 Move X0, [X0+920]
	034 Call 0x1C17CF4
	035 Move X0, 0x222D000
	036 Move X0, [X0+3272]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X22+1267], W8
	040 Move [X31+8], X31
	041 Compare X21, 0
	042 JumpIfEqual {175}
	043 Move X8, [X21+24]
	044 Compare X8, 0
	045 JumpIfEqual {175}
	046 Add X9, X21, 32
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move W10, W8
	049 ShiftRight W10, 29
	050 And W10, W10, 0xFFFFFFF
	051 NotImplemented "Instruction MOVI not yet implemented."
	052 NotImplemented "Instruction CSEL not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move [X31+80], V0
	055 Move [X31+88], V0
	056 Move [X31+96], W31
	057 Move [X31+100], W10
	058 Move [X31+48], V0
	059 Move [X31+56], V0
	060 Move [X31+16], V0
	061 Move [X31+24], V0
	062 Move [X31+80], X9
	063 Move [X31+104], W8
	064 Move X26, 0x2224000
	065 Move X27, 0x222D000
	066 Move X29, 0x222D000
	067 Move X26, [X26+920]
	068 Move X27, [X27+4048]
	069 Move X29, [X29+4056]
	070 Move TEMP, 0x80000000
	071 Not TEMP
	072 Move W28, TEMP
	073 Add X0, X31, 16
	074 Move W1, 36
	075 Move X2, X31
	076 Call NetBitBuffer.CanRead, X0, X1
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {175}
	081 Move X0, [X26]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Add X0, X31, 16
	087 Move X1, X31
	088 Call NetworkId.Read, X0
	089 Move X23, X0
	090 Add X0, X31, 16
	091 Move W1, 32
	092 Move X2, X31
	093 Call NetBitBuffer.Read, X0, X1
	094 Compare X20, 0
	095 JumpIfEqual {192}
	096 Move X3, [X27]
	097 And X22, X23, 0
	098 Move X21, X0
	099 Add X2, X31, 8
	100 Move X0, X20
	101 Move X1, X22
	102 Call Dictionary`2<NetworkId, Object>.TryGetValue, X0, X1, X2
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfEqual {143}
	107 Move X8, 0x222D000
	108 Move X8, [X8+3272]
	109 Move X0, [X8]
	110 Call 0x1C17F10
	111 Move X1, X19
	112 Move X2, X31
	113 Move X24, X0
	114 Call NetworkObjectHeaderSnapshot..ctor, X0, X1
	115 Move [X31+8], X24
	116 Compare X24, 0
	117 JumpIfEqual {192}
	118 Move W1, W21
	119 ShiftRight W1, 30
	120 And W1, W1, 0x1FFFFFFF
	121 Move X0, X24
	122 Move X2, X31
	123 Call NetworkObjectHeaderSnapshot.Init, X0, X1
	124 Move X8, [X31+8]
	125 Compare X8, 0
	126 JumpIfEqual {192}
	127 Move X8, [X8+48]
	128 Compare X8, 0
	129 JumpIfEqual {192}
	130 Move [X8], W23
	131 Move X8, [X31+8]
	132 Compare X8, 0
	133 JumpIfEqual {192}
	134 Move X8, [X8+48]
	135 Compare X8, 0
	136 JumpIfEqual {192}
	137 NotImplemented "Instruction STRH not yet implemented."
	138 Move X2, [X31+8]
	139 Move X3, [X29]
	140 Move X0, X20
	141 Move X1, X22
	142 Call Dictionary`2<NetworkId, Object>.set_Item, X0, X1, X2
	143 Move X10, [X31+8]
	144 Compare X10, 0
	145 JumpIfEqual {192}
	146 Move W8, [X31+96]
	147 Move W9, [X31+100]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move X22, [X10+48]
	150 Move W23, 1
	151 Add X0, X31, 16
	152 Move W1, 16
	153 Move X2, X31
	154 Call NetBitBuffer.CanRead, X0, X1
	155 Move TEMP, X0
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfNotEqual {172}
	159 Add X0, X31, 16
	160 Move X1, X31
	161 Call NetBitBuffer.ReadInt32VarLength, X0
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move W21, W0
	164 Add X0, X31, 16
	165 Move X1, X31
	166 Call NetBitBuffer.ReadInt32VarLength, X0
	167 Add W23, W21, W23
	168 Move [X22], W0
	169 Move W8, [X31+96]
	170 Move W9, [X31+100]
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move W8, [X31+96]
	173 Move W9, [X31+100]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X8, [X25+40]
	176 Move X9, [X31+120]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X20, [X31+208]
	179 Move X19, [X31+216]
	180 Move X22, [X31+192]
	181 Move X21, [X31+200]
	182 Move X24, [X31+176]
	183 Move X23, [X31+184]
	184 Move X26, [X31+160]
	185 Move X25, [X31+168]
	186 Move X28, [X31+144]
	187 Move X27, [X31+152]
	188 Move X29, [X31+128]
	189 Move X30, [X31+136]
	190 Add X31, X31, 224
	191 Return 
	192 Call 0x1C17F20
	193 Call 0x3EB2B20

