Type: Fusion.NestedComponentUtilities

Method: T EnsureRootComponentExists(UnityEngine.Transform transform)

Disassembly:
	0x02224300 BL 0x1C16DFC
	0x02224304 LDR X8, [X20 + 0x38]
	0x02224308 LDR X0, [X8 + 0x20]
	0x0222430C LDRB W8, [X0 + 0x135]
	0x02224310 TBNZ X8, 0x0, 0x2224318
	0x02224314 BL 0x1C5C684
	0x02224318 ADRP X28, 0x1ED9000
	0x0222431C LDR X28, [X28 + 0xB88]
	0x02224320 LDR X9, [X0 + 0xB8]
	0x02224324 LDR X8, [X28]
	0x02224328 LDR X9, [X9]
	0x0222432C LDR W10, [X8 + 0xE0]
	0x02224330 STUR X9, [X29 - 0x40]
	0x02224334 CBNZ W10, 0x2224344
	0x02224338 MOV X0, X8
	0x0222433C BL 0x1C16DFC
	0x02224340 LDR X8, [X28]
	0x02224344 LDR X8, [X8 + 0xB8]
	0x02224348 LDR X0, [X8]
	0x0222434C CBZ X0, 0x22246F0
	0x02224350 ADRP X8, 0x1EF8000
	0x02224354 LDR X8, [X8 + 0x158]
	0x02224358 LDR X1, [X8]
	0x0222435C BL 0x24F1410
	0x02224360 LDR X8, [X28]
	0x02224364 LDR X8, [X8 + 0xB8]
	0x02224368 LDR X0, [X8]
	0x0222436C CBZ X0, 0x22246F0
	0x02224370 ADRP X19, 0x1EF8000
	0x02224374 LDR X19, [X19 + 0x168]
	0x02224378 MOV X1, X24
	0x0222437C LDR X2, [X19]
	0x02224380 BL 0x24F1750
	0x02224384 LDR X0, [X28]
	0x02224388 LDR W8, [X0 + 0xE0]
	0x0222438C CBNZ W8, 0x2224398
	0x02224390 BL 0x1C16DFC
	0x02224394 LDR X0, [X28]
	0x02224398 LDR X8, [X0 + 0xB8]
	0x0222439C LDR X8, [X8]
	0x022243A0 CBZ X8, 0x22246D8
	0x022243A4 LDR W9, [X8 + 0x20]
	0x022243A8 CMP W9, 0x0
	0x022243AC B.LE 0x2224630
	0x022243B0 LDR W9, [X0 + 0xE0]
	0x022243B4 CBNZ W9, 0x22243CC
	0x022243B8 BL 0x1C16DFC
	0x022243BC LDR X8, [X28]
	0x022243C0 LDR X8, [X8 + 0xB8]
	0x022243C4 LDR X8, [X8]
	0x022243C8 CBZ X8, 0x22246EC
	0x022243CC ADRP X9, 0x1EF8000
	0x022243D0 LDR X9, [X9 + 0x160]
	0x022243D4 LDR X1, [X9]
	0x022243D8 MOV X0, X8
	0x022243DC BL 0x24F18D4
	0x022243E0 MOV X24, X0
	0x022243E4 CBZ X0, 0x22246E4
	0x022243E8 LDR X8, [X20 + 0x38]
	0x022243EC LDR X2, [X8 + 0x28]
	0x022243F0 LDUR X25, [X29 - 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X19, X1
	006 Move X20, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {20}
	009 Move X0, 0x1EDA000
	010 Move X0, [X0+2952]
	011 Call 0x1C17CF4
	012 Move X0, 0x1ED0000
	013 Move X0, [X0+1432]
	014 Call 0x1C17CF4
	015 Move X8, [X19+56]
	016 Compare X8, 0
	017 JumpIfNotEqual {20}
	018 Move X0, X19
	019 Call 0x1C5D6E0
	020 Move X8, 0x1EDA000
	021 Move X8, [X8+2952]
	022 Move [X31+8], X31
	023 Move X0, [X8]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X8, [X19+56]
	029 Move X0, X20
	030 Move X1, [X8]
	031 Call 0x2226174, X0
	032 Move X8, 0x1ED0000
	033 Move X8, [X8+1432]
	034 Move X20, X0
	035 Move X8, [X8]
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move X0, X20
	042 Move X1, X31
	043 Call Object.op_Implicit, X0
	044 Move W8, W0
	045 Move X0, X31
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {70}
	050 Compare X20, 0
	051 JumpIfEqual {74}
	052 Move X8, [X19+56]
	053 Add X1, X31, 8
	054 Move X0, X20
	055 Move X2, [X8+16]
	056 Call 0x21A5990, X0, X1
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {62}
	061 Move X0, [X31+8]
	062 Move X0, X20
	063 Move X1, X31
	064 Call Component.get_gameObject, X0
	065 Compare X0, 0
	066 JumpIfEqual {74}
	067 Move X8, [X19+56]
	068 Move X1, [X8+32]
	069 Call 0x21E61FC, X0
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X30, [X31+32]
	073 Return X0
	074 Call 0x1C17F20

Method: T GetParentComponent(UnityEngine.Transform t)

Disassembly:
	0x02226174 CBZ X8, 0x2226240
	0x02226178 LDR X0, [X9 + 0x50]
	0x0222617C CBZ X0, 0x2226240
	0x02226180 LDR W1, [X8 + 0x1C]
	0x02226184 MOV X2, X31
	0x02226188 BL 0x1EC2800
	0x0222618C TBZ X0, 0x0, 0x222621C
	0x02226190 LDR X8, [X21 + 0x40]
	0x02226194 CBZ X8, 0x2226240
	0x02226198 ADRP X23, 0x21B2000
	0x0222619C LDRB W9, [X23 + 0xA22]
	0x022261A0 LDR X22, [X8 + 0x30]
	0x022261A4 CBNZ W9, 0x22261BC
	0x022261A8 ADRP X0, 0x1ECD000
	0x022261AC LDR X0, [X0 + 0x598]
	0x022261B0 BL 0x1C16CF4
	0x022261B4 MOVZ W8, 0x1
	0x022261B8 STRB W8, [X23 + 0xA22]
	0x022261BC ADRP X8, 0x1ECD000
	0x022261C0 LDR X8, [X8 + 0x598]
	0x022261C4 LDR X0, [X8]
	0x022261C8 LDR W8, [X0 + 0xE0]
	0x022261CC CBNZ W8, 0x22261D4
	0x022261D0 BL 0x1C16DFC
	0x022261D4 MOV X0, X22
	0x022261D8 MOV X1, X31
	0x022261DC BL 0x3C38948
	0x022261E0 TBZ X0, 0x0, 0x222621C
	0x022261E4 LDR X9, [X21 + 0x40]
	0x022261E8 CBZ X9, 0x2226240
	0x022261EC LDR X8, [X9 + 0x20]
	0x022261F0 CBZ X8, 0x2226240
	0x022261F4 LDR X0, [X9 + 0x30]
	0x022261F8 CBZ X0, 0x2226240
	0x022261FC LDR X9, [X20 + 0x38]
	0x02226200 LDR W1, [X8 + 0x1C]
	0x02226204 MOV X2, X19
	0x02226208 LDP X20, X19, [X31 + 0x20]
	0x0222620C LDR X3, [X9 + 0x8]
	0x02226210 LDP X22, X21, [X31 + 0x10]
	0x02226214 LDP X30, X23, [X31], #0x30
	0x02226218 B 0x222BE74
	0x0222621C MOVZ W2, 0xA8
	0x02226220 MOV X0, X19
	0x02226224 MOV W1, W31
	0x02226228 BL 0x3EB1B10
	0x0222622C LDP X20, X19, [X31 + 0x20]
	0x02226230 LDP X22, X21, [X31 + 0x10]
	0x02226234 MOV W0, W31
	0x02226238 LDP X30, X23, [X31], #0x30
	0x0222623C RET
	0x02226240 BL 0x1C16F20
	0x02226244 STP X30, X23, [X31 - 0x30]!
	0x02226248 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X1+56]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {19}
	011 Move X0, 0x1ECE000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move X8, [X19+56]
	015 Compare X8, 0
	016 JumpIfNotEqual {19}
	017 Move X0, X19
	018 Call 0x1C5D6E0
	019 Move [X31], X31
	020 Move [X31+8], X31
	021 Compare X20, 0
	022 JumpIfEqual {71}
	023 Move X8, [X19+56]
	024 Add X1, X31, 8
	025 Move X0, X20
	026 Move X2, [X8]
	027 Call 0x21A5990, X0, X1
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {33}
	032 Move X0, [X31+8]
	033 Move X21, 0x1ECE000
	034 Move X21, [X21+1432]
	035 Move X0, X20
	036 Move X1, X31
	037 Call Transform.get_parent, X0
	038 Move X8, [X21]
	039 Move X20, X0
	040 Move W9, [X8+224]
	041 Compare W9, 0
	042 JumpIfNotEqual {45}
	043 Move X0, X8
	044 Call 0x1C17DFC
	045 Move X0, X20
	046 Move X1, X31
	047 Call Object.op_Implicit, X0
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {64}
	052 Compare X20, 0
	053 JumpIfEqual {71}
	054 Move X8, [X19+56]
	055 Add X1, X31, 0
	056 Move X0, X20
	057 Move X2, [X8]
	058 Call 0x21A5990, X0, X1
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {35}
	063 Move X0, [X31]
	064 Move X0, X31
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X30, [X31+16]
	068 Move X21, [X31+24]
	069 Add X31, X31, 48
	070 Return X0
	071 Call 0x1C17F20

Method: System.Void GetNestedComponentsInParents(UnityEngine.Transform t, System.Collections.Generic.List`1<T> list)

Disassembly:
	0x02225CDC MOV X1, X21
	0x02225CE0 LDR X2, [X8]
	0x02225CE4 ADD X8, X31, 0x8
	0x02225CE8 BL 0x2226E7C
	0x02225CEC LDP X8, X30, [X31 + 0x18]
	0x02225CF0 LDUR V0, [X31 + 0x8]
	0x02225CF4 STR X19, [X20]
	0x02225CF8 LDP X22, X21, [X31 + 0x30]
	0x02225CFC STR X8, [X20 + 0x18]
	0x02225D00 STUR V0, [X20 + 0x8]
	0x02225D04 LDP X20, X19, [X31 + 0x40]
	0x02225D08 ADD X31, X31, 0x50
	0x02225D0C RET
	0x02225D10 SUB X31, X31, 0x60
	0x02225D14 STR X30, [X31 + 0x20]
	0x02225D18 STP X24, X23, [X31 + 0x30]
	0x02225D1C STP X22, X21, [X31 + 0x40]
	0x02225D20 STP X20, X19, [X31 + 0x50]
	0x02225D24 ADRP X24, 0x21B4000
	0x02225D28 ADRP X23, 0x1EF7000
	0x02225D2C MOV X19, X8
	0x02225D30 LDRB W8, [X24 + 0x87B]
	0x02225D34 LDR X23, [X23 + 0x198]
	0x02225D38 MOV X21, X2
	0x02225D3C MOV X22, X1
	0x02225D40 MOV X20, X0
	0x02225D44 TBNZ X8, 0x0, 0x2225D5C
	0x02225D48 ADRP X0, 0x1EF7000
	0x02225D4C LDR X0, [X0 + 0x198]
	0x02225D50 BL 0x1C16CF4
	0x02225D54 MOVZ W8, 0x1
	0x02225D58 STRB W8, [X24 + 0x87B]
	0x02225D5C LDR X2, [X23]
	0x02225D60 ADD X8, X31, 0x8
	0x02225D64 MOV X0, X22
	0x02225D68 MOV X1, X21
	0x02225D6C STP X31, X31, [X31 + 0x8]
	0x02225D70 STR X31, [X31 + 0x18]
	0x02225D74 BL 0x2226E7C
	0x02225D78 LDP X8, X30, [X31 + 0x18]
	0x02225D7C LDUR V0, [X31 + 0x8]
	0x02225D80 STR X20, [X19]
	0x02225D84 LDP X22, X21, [X31 + 0x40]
	0x02225D88 STR X8, [X19 + 0x18]
	0x02225D8C STUR V0, [X19 + 0x8]
	0x02225D90 LDP X20, X19, [X31 + 0x50]
	0x02225D94 LDP X24, X23, [X31 + 0x30]
	0x02225D98 ADD X31, X31, 0x60
	0x02225D9C RET
	0x02225DA0 SUB X31, X31, 0x70
	0x02225DA4 STP X30, X25, [X31 + 0x30]
	0x02225DA8 STP X24, X23, [X31 + 0x40]
	0x02225DAC STP X22, X21, [X31 + 0x50]
	0x02225DB0 STP X20, X19, [X31 + 0x60]
	0x02225DB4 LDR X9, [X2 + 0x38]
	0x02225DB8 MOV X21, X2
	0x02225DBC MOV X20, X1
	0x02225DC0 MOV X22, X0
	0x02225DC4 MOV X19, X8
	0x02225DC8 CBNZ X9, 0x2225DD4
	0x02225DCC MOV X0, X21
	0x02225DD0 BL 0x1C5C6E0
	0x02225DD4 CBZ X22, 0x2225E88
	0x02225DD8 MOV X0, X22
	0x02225DDC MOV X1, X31
	0x02225DE0 BL 0x33BE520
	0x02225DE4 LDR X8, [X21 + 0x38]
	0x02225DE8 MOV X23, X0
	0x02225DEC LDR X1, [X8]
	0x02225DF0 LDR X8, [X8 + 0x10]
	0x02225DF4 LDRB W9, [X1 + 0x135]
	0x02225DF8 LDR X25, [X8]
	0x02225DFC TBNZ X9, 0x0, 0x2225E0C
	0x02225E00 MOV X0, X1
	0x02225E04 BL 0x1C5C684
	0x02225E08 MOV X1, X0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X19, X2
	008 Move X20, X1
	009 Move X21, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {20}
	012 Move X0, 0x1ECF000
	013 Move X0, [X0+1432]
	014 Call 0x1C17CF4
	015 Move X8, [X19+56]
	016 Compare X8, 0
	017 JumpIfNotEqual {20}
	018 Move X0, X19
	019 Call 0x1C5D6E0
	020 Move [X31+8], X31
	021 Compare X20, 0
	022 JumpIfEqual {90}
	023 Move W2, [X20+24]
	024 Move W8, [X20+28]
	025 Add W8, W8, 1
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move [X20+24], W31
	028 Move [X20+28], W8
	029 Move X0, [X20+16]
	030 Move W1, W31
	031 Move X3, X31
	032 Call Array.Clear, X0, X1, X2
	033 Compare X21, 0
	034 JumpIfEqual {90}
	035 Move X8, [X19+56]
	036 Add X1, X31, 8
	037 Move X0, X21
	038 Move X2, [X8+16]
	039 Call 0x21A5990, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {65}
	044 Move X9, [X19+56]
	045 Move W10, [X20+28]
	046 Move X1, [X31+8]
	047 Move X8, [X20+16]
	048 Move X9, [X9+32]
	049 Add W10, W10, 1
	050 Move [X20+28], W10
	051 Compare X8, 0
	052 JumpIfEqual {90}
	053 NotImplemented "Instruction LDRSW not yet implemented."
	054 Move W11, [X8+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Add W9, W10, 1
	057 Add X8, X8, X10
	058 Move [X20+24], W9
	059 Move [X8+32], X1
	060 Move X8, [X9+32]
	061 Move X0, X20
	062 Move X8, [X8+192]
	063 Move X2, [X8+112]
	064 Call List`1<Object>.AddWithResize, X0, X1
	065 Move X0, X21
	066 Move X1, X31
	067 Call Transform.get_parent, X0
	068 Move X21, X0
	069 Move X8, 0x1ECF000
	070 Move X8, [X8+1432]
	071 Move X0, [X8]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X21
	077 Move X1, X31
	078 Move X2, X31
	079 Call Object.op_Inequality, X0, X1
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {33}
	084 Move X20, [X31+32]
	085 Move X19, [X31+40]
	086 Move X30, [X31+16]
	087 Move X21, [X31+24]
	088 Add X31, X31, 48
	089 Return 
	090 Call 0x1C17F20

Method: T GetNestedComponentInChildren(UnityEngine.Transform t, System.Boolean includeInactive)

Disassembly:
	0x02224994 ADD W25, W25, 0x1
	0x02224998 CMP W25, W24
	0x0222499C B.NE 0x22248D4
	0x022249A0 LDR X19, [X31 + 0x10]
	0x022249A4 LDR X8, [X19 + 0x38]
	0x022249A8 LDR X0, [X8 + 0x18]
	0x022249AC LDRB W8, [X0 + 0x135]
	0x022249B0 TBNZ X8, 0x0, 0x22249B8
	0x022249B4 BL 0x1C5C684
	0x022249B8 LDR W8, [X0 + 0xE0]
	0x022249BC MOV X20, X29
	0x022249C0 CBNZ W8, 0x22249C8
	0x022249C4 BL 0x1C16DFC
	0x022249C8 LDR X8, [X19 + 0x38]
	0x022249CC LDR X0, [X8 + 0x18]
	0x022249D0 LDRB W8, [X0 + 0x135]
	0x022249D4 TBNZ X8, 0x0, 0x22249DC
	0x022249D8 BL 0x1C5C684
	0x022249DC LDR X8, [X0 + 0xB8]
	0x022249E0 ADD X19, X22, 0x20
	0x022249E4 LDR X8, [X8]
	0x022249E8 STR X8, [X31 + 0x8]
	0x022249EC LDR X0, [X28]
	0x022249F0 LDR W8, [X0 + 0xE0]
	0x022249F4 CBNZ W8, 0x2224A00
	0x022249F8 BL 0x1C16DFC
	0x022249FC LDR X0, [X28]
	0x02224A00 LDR X8, [X0 + 0xB8]
	0x02224A04 LDR X8, [X8]
	0x02224A08 CBZ X8, 0x2224BF4
	0x02224A0C LDR W9, [X8 + 0x20]
	0x02224A10 CMP W9, 0x0
	0x02224A14 B.LE 0x2224B74
	0x02224A18 LDR W9, [X0 + 0xE0]
	0x02224A1C CBNZ W9, 0x2224A34
	0x02224A20 BL 0x1C16DFC
	0x02224A24 LDR X8, [X28]
	0x02224A28 LDR X8, [X8 + 0xB8]
	0x02224A2C LDR X8, [X8]
	0x02224A30 CBZ X8, 0x2224C00
	0x02224A34 ADRP X9, 0x1EF8000
	0x02224A38 LDR X9, [X9 + 0x160]
	0x02224A3C LDR X1, [X9]
	0x02224A40 MOV X0, X8
	0x02224A44 BL 0x24F18D4
	0x02224A48 MOV X24, X0
	0x02224A4C CBZ X0, 0x2224BF8
	0x02224A50 LDP X1, X8, [X31 + 0x8]
	0x02224A54 LDR X8, [X8 + 0x38]
	0x02224A58 LDR X2, [X8 + 0x8]
	0x02224A5C MOV X0, X24
	0x02224A60 BL 0x21A443C
	0x02224A64 CBZ X20, 0x2224BFC
	0x02224A68 LDP X1, X8, [X31 + 0x8]
	0x02224A6C LDR X8, [X8 + 0x38]
	0x02224A70 LDR X2, [X8 + 0x20]
	0x02224A74 MOV X0, X20
	0x02224A78 BL 0x301C194
	0x02224A7C MOV X0, X24
	0x02224A80 MOV X1, X31
	0x02224A84 BL 0x3C40C8C
	0x02224A88 MOV W25, W0
	0x02224A8C CMP W0, 0x1
	0x02224A90 B.LT 0x22249EC
	0x02224A94 MOV W26, W31
	0x02224A98 MOV X0, X24
	0x02224A9C MOV W1, W26
	0x02224AA0 MOV X2, X31
	0x02224AA4 BL 0x3C410A0
	0x02224AA8 MOV X27, X0
	0x02224AAC TBNZ X23, 0x0, 0x2224AD0
	0x02224AB0 CBZ X27, 0x2224BE8
	0x02224AB4 MOV X0, X27
	0x02224AB8 MOV X1, X31
	0x02224ABC BL 0x3C32ECC
	0x02224AC0 CBZ X0, 0x2224BEC
	0x02224AC4 MOV X1, X31
	0x02224AC8 BL 0x3C357F8
	0x02224ACC TBZ X0, 0x0, 0x2224B64
	0x02224AD0 CBZ X22, 0x2224BDC
	0x02224AD4 LDR X8, [X22 + 0x18]
	0x02224AD8 CMP W8, 0x1
	0x02224ADC B.LT 0x2224B24
	0x02224AE0 AND X8, X8, 0x0
	0x02224AE4 CBZ X8, 0x2224BCC
	0x02224AE8 MOV X20, X31
	0x02224AEC SUB X21, X8, 0x1
	0x02224AF0 CBZ X27, 0x2224BD4
	0x02224AF4 LDR X1, [X19, X20, LSL #3]
	0x02224AF8 ADD X2, X31, 0x18
	0x02224AFC MOV X0, X27
	0x02224B00 MOV X3, X31
	0x02224B04 BL 0x3C33018
	0x02224B08 CMP X21, X20
	0x02224B0C B.EQ 0x2224B24
	0x02224B10 LDR W8, [X22 + 0x18]
	0x02224B14 ADD X20, X20, 0x1
	0x02224B18 CMP X20, X8
	0x02224B1C B.CC 0x2224AF0
	0x02224B20 B 0x2224BCC
	0x02224B24 LDR X0, [X28]
	0x02224B28 LDR W8, [X0 + 0xE0]
	0x02224B2C CBZ W8, 0x2224B38
	0x02224B30 MOV X20, X29
	0x02224B34 B 0x2224B44
	0x02224B38 MOV X20, X29
	0x02224B3C BL 0x1C16DFC
	0x02224B40 LDR X0, [X28]
	0x02224B44 LDR X8, [X0 + 0xB8]
	0x02224B48 LDR X0, [X8]
	0x02224B4C CBZ X0, 0x2224BE0
	0x02224B50 ADRP X8, 0x1EF8000
	0x02224B54 LDR X8, [X8 + 0x168]
	0x02224B58 LDR X2, [X8]
	0x02224B5C MOV X1, X27
	0x02224B60 BL 0x24F1750
	0x02224B64 ADD W26, W26, 0x1
	0x02224B68 CMP W26, W25
	0x02224B6C B.NE 0x2224A98
	0x02224B70 B 0x22249EC
	0x02224B74 MOV X22, X31
	0x02224B78 LDR X9, [X31 + 0x8]
	0x02224B7C CBZ X9, 0x2224BE4
	0x02224B80 LDP W2, W8, [X9 + 0x18]
	0x02224B84 ADD W8, W8, 0x1
	0x02224B88 CMP W2, 0x1
	0x02224B8C STP W31, W8, [X9 + 0x18]
	0x02224B90 B.LT 0x2224BA4
	0x02224B94 LDR X0, [X9 + 0x10]
	0x02224B98 MOV W1, W31
	0x02224B9C MOV X3, X31
	0x02224BA0 BL 0x339FA34
	0x02224BA4 CBNZ X22, 0x2224C04
	0x02224BA8 MOV X0, X20
	0x02224BAC LDP X20, X19, [X31 + 0x70]
	0x02224BB0 LDP X22, X21, [X31 + 0x60]
	0x02224BB4 LDP X24, X23, [X31 + 0x50]
	0x02224BB8 LDP X26, X25, [X31 + 0x40]
	0x02224BBC LDP X28, X27, [X31 + 0x30]
	0x02224BC0 LDP X29, X30, [X31 + 0x20]
	0x02224BC4 ADD X31, X31, 0x80
	0x02224BC8 RET
	0x02224BCC MOV X20, X29
	0x02224BD0 BL 0x1C16F28
	0x02224BD4 MOV X20, X29
	0x02224BD8 BL 0x1C16F20
	0x02224BDC BL 0x1C16F20
	0x02224BE0 BL 0x1C16F20
	0x02224BE4 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X8, [X2+56]
	013 Move X19, X2
	014 Move W20, W1
	015 Move X21, X0
	016 Compare X8, 0
	017 JumpIfNotEqual {38}
	018 Move X0, 0x1EDA000
	019 Move X0, [X0+2952]
	020 Call 0x1C17CF4
	021 Move X0, 0x1EF9000
	022 Move X0, [X0+344]
	023 Call 0x1C17CF4
	024 Move X0, 0x1EF9000
	025 Move X0, [X0+352]
	026 Call 0x1C17CF4
	027 Move X0, 0x1EF9000
	028 Move X0, [X0+360]
	029 Call 0x1C17CF4
	030 Move X0, 0x1EF9000
	031 Move X0, [X0+368]
	032 Call 0x1C17CF4
	033 Move X8, [X19+56]
	034 Compare X8, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X19
	037 Call 0x1C5D6E0
	038 Move [X31+16], X31
	039 Move [X31+24], X31
	040 Move [X31+8], X31
	041 Compare X21, 0
	042 JumpIfEqual {184}
	043 Move X8, [X19+56]
	044 Add X1, X31, 24
	045 Move X0, X21
	046 Move X2, [X8]
	047 Call 0x21A5990, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {53}
	052 Move X0, [X31+24]
	053 Move X25, 0x1EDA000
	054 Move X25, [X25+2952]
	055 Move X0, [X25]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {61}
	059 Call 0x1C17DFC
	060 Move X0, [X25]
	061 Move X8, [X0+184]
	062 Move X0, [X8]
	063 Compare X0, 0
	064 JumpIfEqual {184}
	065 Move X8, 0x1EF9000
	066 Move X8, [X8+344]
	067 Move X1, [X8]
	068 Call Queue`1<Object>.Clear, X0
	069 Move X8, [X25]
	070 Move X8, [X8+184]
	071 Move X0, [X8]
	072 Compare X0, 0
	073 JumpIfEqual {184}
	074 Move X26, 0x1EF9000
	075 Move X26, [X26+360]
	076 Move X1, X21
	077 Move X2, [X26]
	078 Call Queue`1<Object>.Enqueue, X0, X1
	079 Move X27, 0x1EF9000
	080 Move X27, [X27+352]
	081 Move X0, [X25]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {87}
	085 Call 0x1C17DFC
	086 Move X0, [X25]
	087 Move X8, [X0+184]
	088 Move X8, [X8]
	089 Compare X8, 0
	090 JumpIfEqual {184}
	091 Move W9, [X8+32]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move W9, [X0+224]
	094 Compare W9, 0
	095 JumpIfNotEqual {102}
	096 Call 0x1C17DFC
	097 Move X8, [X25]
	098 Move X8, [X8+184]
	099 Move X8, [X8]
	100 Compare X8, 0
	101 JumpIfEqual {184}
	102 Move X1, [X27]
	103 Move X0, X8
	104 Call Queue`1<Object>.Dequeue, X0
	105 Compare X0, 0
	106 JumpIfEqual {184}
	107 Move X1, X31
	108 Move X21, X0
	109 Call Transform.get_childCount, X0
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move W22, W0
	112 Move W23, W31
	113 Move X0, X21
	114 Move W1, W23
	115 Move X2, X31
	116 Call Transform.GetChild, X0, X1
	117 Move X24, X0
	118 Move TEMP, X20
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfNotEqual {124}
	122 Compare X24, 0
	123 JumpIfNotEqual {137}
	124 Compare X24, 0
	125 JumpIfEqual {184}
	126 Move X0, X24
	127 Move X1, X31
	128 Call Component.get_gameObject, X0
	129 Compare X0, 0
	130 JumpIfEqual {184}
	131 Move X1, X31
	132 Call GameObject.get_activeSelf, X0
	133 Move TEMP, X0
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfNotEqual {168}
	137 Move X8, [X19+56]
	138 Add X1, X31, 8
	139 Move X0, X24
	140 Move X2, [X8+16]
	141 Call 0x21A5990, X0, X1
	142 Move TEMP, X0
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfEqual {168}
	146 Move X8, [X19+56]
	147 Add X1, X31, 16
	148 Move X0, X24
	149 Move X2, [X8]
	150 Call 0x21A5990, X0, X1
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfEqual {170}
	155 Move X0, [X25]
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {161}
	159 Call 0x1C17DFC
	160 Move X0, [X25]
	161 Move X8, [X0+184]
	162 Move X0, [X8]
	163 Compare X0, 0
	164 JumpIfEqual {184}
	165 Move X2, [X26]
	166 Move X1, X24
	167 Call Queue`1<Object>.Enqueue, X0, X1
	168 Add W23, W23, 1
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move X0, [X31+16]
	171 Move X20, [X31+96]
	172 Move X19, [X31+104]
	173 Move X22, [X31+80]
	174 Move X21, [X31+88]
	175 Move X24, [X31+64]
	176 Move X23, [X31+72]
	177 Move X26, [X31+48]
	178 Move X25, [X31+56]
	179 Move X30, [X31+32]
	180 Move X27, [X31+40]
	181 Add X31, X31, 112
	182 Return X0
	183 Move X0, X31
	184 Call 0x1C17F20

Method: T GetNestedComponentInParent(UnityEngine.Transform t)

Disassembly:
	0x02224BE8 BL 0x1C16F20
	0x02224BEC BL 0x1C16F20
	0x02224BF0 BL 0x1C16F28
	0x02224BF4 BL 0x1C16F20
	0x02224BF8 BL 0x1C16F20
	0x02224BFC BL 0x1C16F20
	0x02224C00 BL 0x1C16F20
	0x02224C04 MOV X0, X22
	0x02224C08 BL 0x1C16F18
	0x02224C0C B 0x2224C54
	0x02224C10 B 0x2224C60
	0x02224C14 B 0x2224C60
	0x02224C18 B 0x2224C60
	0x02224C1C B 0x2224C54
	0x02224C20 B 0x2224C54
	0x02224C24 B 0x2224C60
	0x02224C28 B 0x2224C60
	0x02224C2C B 0x2224C54
	0x02224C30 B 0x2224C60
	0x02224C34 B 0x2224C60
	0x02224C38 B 0x2224C60
	0x02224C3C B 0x2224C60
	0x02224C40 B 0x2224C60
	0x02224C44 B 0x2224C60
	0x02224C48 B 0x2224C60
	0x02224C4C B 0x2224C60
	0x02224C50 B 0x2224C60
	0x02224C54 MOV X21, X0
	0x02224C58 MOV X20, X29
	0x02224C5C B 0x2224C64
	0x02224C60 MOV X21, X0
	0x02224C64 CMP W1, 0x1
	0x02224C68 B.NE 0x2224C80
	0x02224C6C MOV X0, X21
	0x02224C70 BL 0x3EB1AD0
	0x02224C74 LDR X22, [X0]
	0x02224C78 BL 0x3EB1AE0
	0x02224C7C B 0x2224B78

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X8, [X1+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {12}
	010 Move X0, X19
	011 Call 0x1C5D6E0
	012 Move [X31+24], X31
	013 Move [X31+8], X31
	014 Compare X20, 0
	015 JumpIfEqual {47}
	016 Move X8, [X19+56]
	017 Add X1, X31, 24
	018 Move X0, X20
	019 Move X2, [X8]
	020 Call 0x21A5990, X0, X1
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {40}
	025 Move X8, [X19+56]
	026 Add X1, X31, 8
	027 Move X0, X20
	028 Move X2, [X8+16]
	029 Call 0x21A5990, X0, X1
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {41}
	034 Move X0, X20
	035 Move X1, X31
	036 Call Transform.get_parent, X0
	037 Move X20, X0
	038 Compare X0, 0
	039 JumpIfNotEqual {14}
	040 Move X0, [X31+24]
	041 Move X0, X31
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X30, [X31+16]
	045 Add X31, X31, 48
	046 Return X0
	047 Call 0x1C17F20

Method: T GetNestedComponentInParents(UnityEngine.Transform t)

Disassembly:
	0x02224C80 MOV X22, X31
	0x02224C84 B 0x2224C8C
	0x02224C88 MOV X21, X0
	0x02224C8C LDR X8, [X31 + 0x8]
	0x02224C90 CBNZ X8, 0x2224C98
	0x02224C94 BL 0x1C16F20
	0x02224C98 LDR X9, [X31 + 0x8]
	0x02224C9C LDP W2, W8, [X9 + 0x18]
	0x02224CA0 ADD W8, W8, 0x1
	0x02224CA4 CMP W2, 0x1
	0x02224CA8 STP W31, W8, [X9 + 0x18]
	0x02224CAC B.LT 0x2224CC4
	0x02224CB0 LDR X8, [X31 + 0x8]
	0x02224CB4 LDR X0, [X8 + 0x10]
	0x02224CB8 MOV W1, W31
	0x02224CBC MOV X3, X31
	0x02224CC0 BL 0x339FA34
	0x02224CC4 CBNZ X22, 0x2224CD0
	0x02224CC8 MOV X0, X21
	0x02224CCC BL 0x1D2C690
	0x02224CD0 MOV X0, X22
	0x02224CD4 BL 0x1C16F18
	0x02224CD8 BL 0x1990590
	0x02224CDC SUB X31, X31, 0x30
	0x02224CE0 STP X30, X21, [X31 + 0x10]
	0x02224CE4 STP X20, X19, [X31 + 0x20]
	0x02224CE8 LDR X8, [X2 + 0x38]
	0x02224CEC MOV X19, X2
	0x02224CF0 MOV X20, X1
	0x02224CF4 MOV X21, X0
	0x02224CF8 CBNZ X8, 0x2224D18
	0x02224CFC ADRP X0, 0x1ECF000
	0x02224D00 LDR X0, [X0 + 0x598]
	0x02224D04 BL 0x1C16CF4
	0x02224D08 LDR X8, [X19 + 0x38]
	0x02224D0C CBNZ X8, 0x2224D18
	0x02224D10 MOV X0, X19
	0x02224D14 BL 0x1C5C6E0
	0x02224D18 STR X31, [X31 + 0x8]
	0x02224D1C CBZ X20, 0x2224E08
	0x02224D20 LDP W2, W8, [X20 + 0x18]
	0x02224D24 ADD W8, W8, 0x1
	0x02224D28 CMP W2, 0x1
	0x02224D2C STP W31, W8, [X20 + 0x18]
	0x02224D30 B.LT 0x2224DCC
	0x02224D34 LDR X0, [X20 + 0x10]
	0x02224D38 MOV W1, W31
	0x02224D3C MOV X3, X31
	0x02224D40 BL 0x339FA34
	0x02224D44 B 0x2224DCC
	0x02224D48 CBZ X21, 0x2224E08
	0x02224D4C LDR X8, [X19 + 0x38]
	0x02224D50 ADD X1, X31, 0x8
	0x02224D54 MOV X0, X21
	0x02224D58 LDR X2, [X8 + 0x10]
	0x02224D5C BL 0x21A4990
	0x02224D60 TBZ X0, 0x0, 0x2224DBC
	0x02224D64 LDR X9, [X19 + 0x38]
	0x02224D68 LDR W10, [X20 + 0x1C]
	0x02224D6C LDR X1, [X31 + 0x8]
	0x02224D70 LDR X8, [X20 + 0x10]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X8, [X1+56]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {19}
	011 Move X0, 0x1ED0000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move X8, [X19+56]
	015 Compare X8, 0
	016 JumpIfNotEqual {19}
	017 Move X0, X19
	018 Call 0x1C5D6E0
	019 Move [X31+16], X31
	020 Move [X31+24], X31
	021 Move [X31+8], X31
	022 Compare X20, 0
	023 JumpIfEqual {81}
	024 Move X8, [X19+56]
	025 Add X1, X31, 24
	026 Move X0, X20
	027 Move X2, [X8]
	028 Call 0x21A5990, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {34}
	033 Move X0, [X31+24]
	034 Move X21, 0x1ED0000
	035 Move X21, [X21+1432]
	036 Move X0, X20
	037 Move X1, X31
	038 Call Transform.get_parent, X0
	039 Move X8, [X21]
	040 Move X20, X0
	041 Move W9, [X8+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X0, X20
	047 Move X1, X31
	048 Call Object.op_Implicit, X0
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {73}
	053 Compare X20, 0
	054 JumpIfEqual {81}
	055 Move X8, [X19+56]
	056 Add X1, X31, 16
	057 Move X0, X20
	058 Move X2, [X8]
	059 Call 0x21A5990, X0, X1
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {74}
	064 Move X8, [X19+56]
	065 Add X1, X31, 8
	066 Move X0, X20
	067 Move X2, [X8+16]
	068 Call 0x21A5990, X0, X1
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {36}
	073 Move X0, X31
	074 Move X0, [X31+16]
	075 Move X20, [X31+48]
	076 Move X19, [X31+56]
	077 Move X30, [X31+32]
	078 Move X21, [X31+40]
	079 Add X31, X31, 64
	080 Return X0
	081 Call 0x1C17F20

Method: System.Void GetNestedComponentsInParents(UnityEngine.Transform t, System.Collections.Generic.List`1<T> list)

Disassembly:
	0x02225E0C MOV X0, X22
	0x02225E10 BL 0x1C16E00
	0x02225E14 LDR X8, [X21 + 0x38]
	0x02225E18 MOV X24, X0
	0x02225E1C LDR X1, [X8 + 0x8]
	0x02225E20 LDRB W8, [X1 + 0x135]
	0x02225E24 TBNZ X8, 0x0, 0x2225E34
	0x02225E28 MOV X0, X1
	0x02225E2C BL 0x1C5C684
	0x02225E30 MOV X1, X0
	0x02225E34 MOV X0, X22
	0x02225E38 BL 0x1C16E00
	0x02225E3C LDR X8, [X21 + 0x38]
	0x02225E40 MOV X3, X0
	0x02225E44 MOV X0, X23
	0x02225E48 MOV X1, X20
	0x02225E4C LDR X4, [X8 + 0x10]
	0x02225E50 ADD X8, X31, 0x8
	0x02225E54 MOV X2, X24
	0x02225E58 BLR X25
	0x02225E5C LDR X8, [X31 + 0x28]
	0x02225E60 LDUR V0, [X31 + 0x18]
	0x02225E64 LDUR V1, [X31 + 0x8]
	0x02225E68 LDP X22, X21, [X31 + 0x50]
	0x02225E6C STR X8, [X19 + 0x20]
	0x02225E70 LDP X24, X23, [X31 + 0x40]
	0x02225E74 STP V1, V0, [X19]
	0x02225E78 LDP X20, X19, [X31 + 0x60]
	0x02225E7C LDP X30, X25, [X31 + 0x30]
	0x02225E80 ADD X31, X31, 0x70
	0x02225E84 RET
	0x02225E88 BL 0x1C16F20
	0x02225E8C SUB X31, X31, 0x80
	0x02225E90 STR X30, [X31 + 0x40]
	0x02225E94 STP X24, X23, [X31 + 0x50]
	0x02225E98 STP X22, X21, [X31 + 0x60]
	0x02225E9C STP X20, X19, [X31 + 0x70]
	0x02225EA0 LDR X9, [X4 + 0x38]
	0x02225EA4 MOV X23, X4
	0x02225EA8 MOV X19, X3
	0x02225EAC MOV X20, X2
	0x02225EB0 MOV X22, X1
	0x02225EB4 MOV X24, X0
	0x02225EB8 MOV X21, X8
	0x02225EBC CBNZ X9, 0x2225EDC
	0x02225EC0 ADRP X0, 0x1ECE000
	0x02225EC4 LDR X0, [X0 + 0x6C0]
	0x02225EC8 BL 0x1C16CF4
	0x02225ECC LDR X8, [X23 + 0x38]
	0x02225ED0 CBNZ X8, 0x2225EDC
	0x02225ED4 MOV X0, X23
	0x02225ED8 BL 0x1C5C6E0
	0x02225EDC MOV X0, X24
	0x02225EE0 MOV X1, X31
	0x02225EE4 BL 0x1E73F90
	0x02225EE8 ADRP X8, 0x1ECE000
	0x02225EEC LDR X8, [X8 + 0x6C0]
	0x02225EF0 LDR X9, [X23 + 0x38]
	0x02225EF4 MOV X23, X0
	0x02225EF8 LDR X8, [X8]
	0x02225EFC LDR X24, [X9 + 0x8]
	0x02225F00 LDR W10, [X8 + 0xE0]
	0x02225F04 CBNZ W10, 0x2225F10
	0x02225F08 MOV X0, X8
	0x02225F0C BL 0x1C16DFC
	0x02225F10 MOV X0, X24
	0x02225F14 MOV X1, X31
	0x02225F18 BL 0x338C698
	0x02225F1C MOV X2, X0
	0x02225F20 ADD X8, X31, 0x8
	0x02225F24 MOV X0, X23
	0x02225F28 MOV X1, X22
	0x02225F2C MOV X3, X31
	0x02225F30 BL 0x1E743E0
	0x02225F34 LDR X8, [X31 + 0x18]
	0x02225F38 LDUR V0, [X31 + 0x8]
	0x02225F3C STR X19, [X21 + 0x20]
	0x02225F40 LDP X24, X23, [X31 + 0x50]
	0x02225F44 STP X8, X20, [X21 + 0x10]
	0x02225F48 STR V0, [X21]
	0x02225F4C LDP X20, X19, [X31 + 0x70]
	0x02225F50 LDP X22, X21, [X31 + 0x60]
	0x02225F54 LDR X30, [X31 + 0x40]
	0x02225F58 STR X8, [X31 + 0x30]
	0x02225F5C STR V0, [X31 + 0x2]
	0x02225F60 ADD X31, X31, 0x80
	0x02225F64 RET
	0x02225F68 STP X29, X30, [X31 - 0x60]!
	0x02225F6C STR X27, [X31 + 0x10]
	0x02225F70 STP X26, X25, [X31 + 0x20]
	0x02225F74 STP X24, X23, [X31 + 0x30]
	0x02225F78 STP X22, X21, [X31 + 0x40]
	0x02225F7C STP X20, X19, [X31 + 0x50]
	0x02225F80 ADD X29, X31, 0x0
	0x02225F84 SUB X31, X31, 0x20
	0x02225F88 MRS X26, 0xC000
	0x02225F8C LDR X8, [X26 + 0x28]
	0x02225F90 MOV X22, X2
	0x02225F94 MOV X19, X1
	0x02225F98 MOV X23, X0
	0x02225F9C STUR X8, [X29 - 0x8]
	0x02225FA0 LDR X8, [X2 + 0x38]
	0x02225FA4 CBNZ X8, 0x2225FB4
	0x02225FA8 MOV X0, X22
	0x02225FAC BL 0x1C5C6E0
	0x02225FB0 LDR X8, [X22 + 0x38]
	0x02225FB4 LDR X8, [X8 + 0x8]
	0x02225FB8 LDR W20, [X8 + 0xFC]
	0x02225FBC ADD X8, X31, 0x0
	0x02225FC0 ADD X9, X20, 0xF
	0x02225FC4 AND X9, X9, 0x1FFFFFFFF
	0x02225FC8 SUB X21, X8, X9
	0x02225FCC ADD X31, X21, 0x0
	0x02225FD0 ADD X8, X31, 0x0
	0x02225FD4 SUB X24, X8, X9
	0x02225FD8 ADD X31, X24, 0x0
	0x02225FDC MOV X0, X24
	0x02225FE0 MOV W1, W31
	0x02225FE4 MOV X2, X20
	0x02225FE8 BL 0x3EB1B10
	0x02225FEC CBZ X23, 0x2226124
	0x02225FF0 LDR X8, [X23 + 0x40]
	0x02225FF4 CBZ X8, 0x22260C4
	0x02225FF8 LDRB W9, [X8 + 0x60]
	0x02225FFC TBNZ X9, 0x1, 0x22260C4
	0x02226000 LDR X9, [X8 + 0x30]
	0x02226004 CBZ X9, 0x2226124
	0x02226008 LDR X8, [X8 + 0x20]
	0x0222600C CBZ X8, 0x2226124
	0x02226010 LDR X0, [X9 + 0x50]
	0x02226014 CBZ X0, 0x2226124
	0x02226018 LDR W1, [X8 + 0x1C]
	0x0222601C MOV X2, X31
	0x02226020 BL 0x1EC2800
	0x02226024 TBZ X0, 0x0, 0x22260C4
	0x02226028 LDR X8, [X23 + 0x40]
	0x0222602C CBZ X8, 0x2226124
	0x02226030 ADRP X27, 0x21B2000
	0x02226034 LDRB W9, [X27 + 0xA22]
	0x02226038 LDR X25, [X8 + 0x30]
	0x0222603C CBNZ W9, 0x2226054
	0x02226040 ADRP X0, 0x1ECD000
	0x02226044 LDR X0, [X0 + 0x598]
	0x02226048 BL 0x1C16CF4
	0x0222604C MOVZ W8, 0x1
	0x02226050 STRB W8, [X27 + 0xA22]
	0x02226054 ADRP X8, 0x1ECD000
	0x02226058 LDR X8, [X8 + 0x598]
	0x0222605C LDR X0, [X8]
	0x02226060 LDR W8, [X0 + 0xE0]
	0x02226064 CBNZ W8, 0x222606C
	0x02226068 BL 0x1C16DFC
	0x0222606C MOV X0, X25
	0x02226070 MOV X1, X31
	0x02226074 BL 0x3C38948
	0x02226078 TBZ X0, 0x0, 0x22260C4
	0x0222607C LDR X9, [X23 + 0x40]
	0x02226080 CBZ X9, 0x2226124
	0x02226084 LDR X8, [X9 + 0x20]
	0x02226088 CBZ X8, 0x2226124
	0x0222608C LDR X2, [X9 + 0x30]
	0x02226090 CBZ X2, 0x2226124
	0x02226094 LDR X9, [X22 + 0x38]
	0x02226098 LDR W8, [X8 + 0x1C]
	0x0222609C SUB X3, X29, 0x20
	0x022260A0 MOV X4, X21
	0x022260A4 LDR X1, [X9]
	0x022260A8 SUB X9, X29, 0x10
	0x022260AC LDR X0, [X1]
	0x022260B0 STUR W8, [X29 - 0x10]
	0x022260B4 STP X9, X21, [X29 - 0x20]
	0x022260B8 LDR X8, [X1 + 0x10]
	0x022260BC BLR X8
	0x022260C0 B 0x22260E4
	0x022260C4 MOV X0, X24
	0x022260C8 MOV W1, W31
	0x022260CC MOV X2, X20
	0x022260D0 BL 0x3EB1B10
	0x022260D4 MOV X0, X21
	0x022260D8 MOV X1, X24
	0x022260DC MOV X2, X20
	0x022260E0 BL 0x3EB1AC0
	0x022260E4 MOV X0, X19
	0x022260E8 MOV X1, X21
	0x022260EC MOV X2, X20
	0x022260F0 BL 0x3EB1AC0
	0x022260F4 LDR X8, [X26 + 0x28]
	0x022260F8 LDUR X9, [X29 - 0x8]
	0x022260FC CMP X8, X9
	0x02226100 B.NE 0x2226128
	0x02226104 ADD X31, X29, 0x0
	0x02226108 LDP X20, X19, [X31 + 0x50]
	0x0222610C LDP X22, X21, [X31 + 0x40]
	0x02226110 LDP X24, X23, [X31 + 0x30]
	0x02226114 LDP X26, X25, [X31 + 0x20]
	0x02226118 LDR X27, [X31 + 0x10]
	0x0222611C LDP X29, X30, [X31], #0x60
	0x02226120 RET
	0x02226124 BL 0x1C16F20
	0x02226128 BL 0x3EB1B20
	0x0222612C STP X30, X23, [X31 - 0x30]!
	0x02226130 STP X22, X21, [X31 + 0x10]
	0x02226134 STP X20, X19, [X31 + 0x20]
	0x02226138 LDR X8, [X2 + 0x38]
	0x0222613C MOV X20, X2
	0x02226140 MOV X19, X1
	0x02226144 MOV X21, X0
	0x02226148 CBNZ X8, 0x2226154
	0x0222614C MOV X0, X20
	0x02226150 BL 0x1C5C6E0
	0x02226154 CBZ X21, 0x2226240
	0x02226158 LDR X8, [X21 + 0x40]
	0x0222615C CBZ X8, 0x222621C
	0x02226160 LDRB W9, [X8 + 0x60]
	0x02226164 TBNZ X9, 0x1, 0x222621C
	0x02226168 LDR X9, [X8 + 0x30]
	0x0222616C CBZ X9, 0x2226240
	0x02226170 LDR X8, [X8 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X2+56]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {37}
	014 Move X0, 0x1ED9000
	015 Move X0, [X0+2952]
	016 Call 0x1C17CF4
	017 Move X0, 0x1ECF000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x1EF8000
	021 Move X0, [X0+376]
	022 Call 0x1C17CF4
	023 Move X0, 0x1EF8000
	024 Move X0, [X0+384]
	025 Call 0x1C17CF4
	026 Move X0, 0x1EF8000
	027 Move X0, [X0+392]
	028 Call 0x1C17CF4
	029 Move X0, 0x1EF8000
	030 Move X0, [X0+400]
	031 Call 0x1C17CF4
	032 Move X8, [X19+56]
	033 Compare X8, 0
	034 JumpIfNotEqual {37}
	035 Move X0, X19
	036 Call 0x1C5D6E0
	037 Move [X31+8], X31
	038 Compare X21, 0
	039 JumpIfEqual {220}
	040 Move X8, [X19+56]
	041 Move X0, X21
	042 Move X1, X20
	043 Move X2, [X8+8]
	044 Call 0x21A543C, X0, X1
	045 Move X8, [X19+56]
	046 Add X1, X31, 8
	047 Move X0, X21
	048 Move X2, [X8+16]
	049 Call 0x21A5990, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {212}
	054 Move X0, X21
	055 Move X1, X31
	056 Call Transform.get_parent, X0
	057 Compare X0, 0
	058 JumpIfEqual {212}
	059 Move X22, 0x1ED9000
	060 Move X22, [X22+2952]
	061 Move X21, X0
	062 Move X0, [X22]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {68}
	066 Call 0x1C17DFC
	067 Move X0, [X22]
	068 Move X8, [X0+184]
	069 Move X0, [X8+8]
	070 Compare X0, 0
	071 JumpIfEqual {220}
	072 Move X8, 0x1EF8000
	073 Move X8, [X8+376]
	074 Move X1, [X8]
	075 Call Stack`1<Object>.Clear, X0
	076 Move X23, 0x1EF8000
	077 Move X24, 0x1ECF000
	078 Move X23, [X23+392]
	079 Move X24, [X24+1432]
	080 Move X0, [X22]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {86}
	084 Call 0x1C17DFC
	085 Move X0, [X22]
	086 Move X8, [X0+184]
	087 Move X0, [X8+8]
	088 Compare X0, 0
	089 JumpIfEqual {220}
	090 Move X2, [X23]
	091 Move X1, X21
	092 Call Stack`1<Object>.Push, X0, X1
	093 Compare X21, 0
	094 JumpIfEqual {220}
	095 Move X8, [X19+56]
	096 Add X1, X31, 8
	097 Move X0, X21
	098 Move X2, [X8+16]
	099 Call 0x21A5990, X0, X1
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {122}
	104 Move X0, X21
	105 Move X1, X31
	106 Call Transform.get_parent, X0
	107 Move X8, [X24]
	108 Move X21, X0
	109 Move W9, [X8+224]
	110 Compare W9, 0
	111 JumpIfNotEqual {114}
	112 Move X0, X8
	113 Call 0x1C17DFC
	114 Move X0, X21
	115 Move X1, X31
	116 Move X2, X31
	117 Call Object.op_Equality, X0, X1
	118 Move TEMP, X0
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfNotEqual {80}
	122 Move X0, [X22]
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {128}
	126 Call 0x1C17DFC
	127 Move X0, [X22]
	128 Move X8, [X0+184]
	129 Move X8, [X8+8]
	130 Compare X8, 0
	131 JumpIfEqual {220}
	132 Move W8, [X8+24]
	133 Compare W8, 0
	134 JumpIfEqual {212}
	135 Move X8, [X19+56]
	136 Move X0, [X8+40]
	137 Move W8, [X0+309]
	138 Move TEMP, X8
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfEqual {143}
	142 Call 0x1C5D684
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {147}
	146 Call 0x1C17DFC
	147 Move X8, [X19+56]
	148 Move X0, [X8+40]
	149 Move W8, [X0+309]
	150 Move TEMP, X8
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfEqual {155}
	154 Call 0x1C5D684
	155 Move X8, [X0+184]
	156 Move X23, 0x1EF8000
	157 Move X21, [X8]
	158 Call 0x3EB27EC
	159 Return 
	160 Move X0, [X22]
	161 Move W8, [X0+224]
	162 Compare W8, 0
	163 JumpIfNotEqual {166}
	164 Call 0x1C17DFC
	165 Move X0, [X22]
	166 Move X8, [X0+184]
	167 Move X8, [X8+8]
	168 Compare X8, 0
	169 JumpIfEqual {221}
	170 Move W9, [X8+24]
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move W9, [X0+224]
	173 Compare W9, 0
	174 JumpIfNotEqual {181}
	175 Call 0x1C17DFC
	176 Move X8, [X22]
	177 Move X8, [X8+184]
	178 Move X8, [X8+8]
	179 Compare X8, 0
	180 JumpIfEqual {224}
	181 Move X1, [X23]
	182 Move X0, X8
	183 Call Stack`1<Object>.Pop, X0
	184 Compare X0, 0
	185 JumpIfEqual {222}
	186 Move X8, [X19+56]
	187 Move X2, [X8+8]
	188 Move X1, X21
	189 Call 0x21A543C, X0, X1
	190 Compare X20, 0
	191 JumpIfEqual {223}
	192 Move X8, [X19+56]
	193 Move X2, [X8+48]
	194 Move X0, X20
	195 Move X1, X21
	196 Call List`1<Object>.AddRange, X0, X1
	197 Move X20, X31
	198 Compare X21, 0
	199 JumpIfEqual {220}
	200 Move W2, [X21+24]
	201 Move W8, [X21+28]
	202 Add W8, W8, 1
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move [X21+24], W31
	205 Move [X21+28], W8
	206 Move X0, [X21+16]
	207 Move W1, W31
	208 Move X3, X31
	209 Call Array.Clear, X0, X1, X2
	210 Compare X20, 0
	211 JumpIfNotEqual {225}
	212 Move X20, [X31+48]
	213 Move X19, [X31+56]
	214 Move X22, [X31+32]
	215 Move X21, [X31+40]
	216 Move X24, [X31+16]
	217 Move X23, [X31+24]
	218 Move X30, [X31+64]
	219 Return 
	220 Call 0x1C17F20
	221 Call 0x1C17F20
	222 Call 0x1C17F20
	223 Call 0x1C17F20
	224 Call 0x1C17F20
	225 Move X0, X20
	226 Call 0x1C17F18
	227 Move X19, X0
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Move X0, X19
	230 Call 0x3EB2AD0
	231 Move X20, [X0]
	232 Call 0x3EB2AE0
	233 Move X20, X31
	234 Move X19, X0
	235 Compare X21, 0
	236 JumpIfNotEqual {238}
	237 Call 0x1C17F20
	238 Move W2, [X21+24]
	239 Move W8, [X21+28]
	240 Add W8, W8, 1
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move [X21+24], W31
	243 Move [X21+28], W8
	244 Move X0, [X21+16]
	245 Move W1, W31
	246 Move X3, X31
	247 Call Array.Clear, X0, X1, X2
	248 Compare X20, 0
	249 JumpIfNotEqual {252}
	250 Move X0, X19
	251 Call 0x1D2D690
	252 Move X0, X20
	253 Call 0x1C17F18
	254 Call 0x1991590

Method: System.Collections.Generic.List`1<T> GetNestedComponentsInChildren(UnityEngine.Transform t, System.Collections.Generic.List`1<T> list, System.Boolean includeInactive = True)

Disassembly:
	0x02224D74 LDR X9, [X9 + 0x20]
	0x02224D78 ADD W10, W10, 0x1
	0x02224D7C STR W10, [X20 + 0x1C]
	0x02224D80 CBZ X8, 0x2224E08
	0x02224D84 LDRSW X10, [X20 + 0x18]
	0x02224D88 LDR W11, [X8 + 0x18]
	0x02224D8C CMP W10, W11
	0x02224D90 B.CS 0x2224DA8
	0x02224D94 ADD W9, W10, 0x1
	0x02224D98 ADD X8, X8, X10, 0x3, LSL
	0x02224D9C STR W9, [X20 + 0x18]
	0x02224DA0 STR X1, [X8 + 0x20]
	0x02224DA4 B 0x2224DBC
	0x02224DA8 LDR X8, [X9 + 0x20]
	0x02224DAC MOV X0, X20
	0x02224DB0 LDR X8, [X8 + 0xC0]
	0x02224DB4 LDR X2, [X8 + 0x70]
	0x02224DB8 BL 0x301BF90
	0x02224DBC MOV X0, X21
	0x02224DC0 MOV X1, X31
	0x02224DC4 BL 0x3C3F49C
	0x02224DC8 MOV X21, X0
	0x02224DCC ADRP X8, 0x1ECF000
	0x02224DD0 LDR X8, [X8 + 0x598]
	0x02224DD4 LDR X0, [X8]
	0x02224DD8 LDR W8, [X0 + 0xE0]
	0x02224DDC CBNZ W8, 0x2224DE4
	0x02224DE0 BL 0x1C16DFC
	0x02224DE4 MOV X0, X21
	0x02224DE8 MOV X1, X31
	0x02224DEC MOV X2, X31
	0x02224DF0 BL 0x3C354F8
	0x02224DF4 TBNZ X0, 0x0, 0x2224D48
	0x02224DF8 LDP X20, X19, [X31 + 0x20]
	0x02224DFC LDP X30, X21, [X31 + 0x10]
	0x02224E00 ADD X31, X31, 0x30
	0x02224E04 RET
	0x02224E08 BL 0x1C16F20
	0x02224E0C STR X30, [X31 - 0x40]!
	0x02224E10 STP X24, X23, [X31 + 0x10]
	0x02224E14 STP X22, X21, [X31 + 0x20]
	0x02224E18 STP X20, X19, [X31 + 0x30]
	0x02224E1C LDR X8, [X2 + 0x38]
	0x02224E20 MOV X19, X2
	0x02224E24 MOV X20, X1
	0x02224E28 MOV X21, X0
	0x02224E2C CBNZ X8, 0x2224E88
	0x02224E30 ADRP X0, 0x1ED9000
	0x02224E34 LDR X0, [X0 + 0xB88]
	0x02224E38 BL 0x1C16CF4
	0x02224E3C ADRP X0, 0x1ECF000
	0x02224E40 LDR X0, [X0 + 0x598]
	0x02224E44 BL 0x1C16CF4
	0x02224E48 ADRP X0, 0x1EF8000
	0x02224E4C LDR X0, [X0 + 0x178]
	0x02224E50 BL 0x1C16CF4
	0x02224E54 ADRP X0, 0x1EF8000
	0x02224E58 LDR X0, [X0 + 0x180]
	0x02224E5C BL 0x1C16CF4
	0x02224E60 ADRP X0, 0x1EF8000
	0x02224E64 LDR X0, [X0 + 0x188]
	0x02224E68 BL 0x1C16CF4
	0x02224E6C ADRP X0, 0x1EF8000
	0x02224E70 LDR X0, [X0 + 0x190]
	0x02224E74 BL 0x1C16CF4
	0x02224E78 LDR X8, [X19 + 0x38]
	0x02224E7C CBNZ X8, 0x2224E88
	0x02224E80 MOV X0, X19
	0x02224E84 BL 0x1C5C6E0
	0x02224E88 STR X31, [X31 + 0x8]
	0x02224E8C CBZ X21, 0x22250CC
	0x02224E90 LDR X8, [X19 + 0x38]
	0x02224E94 MOV X0, X21
	0x02224E98 MOV X1, X20
	0x02224E9C LDR X2, [X8 + 0x8]
	0x02224EA0 BL 0x21A443C
	0x02224EA4 LDR X8, [X19 + 0x38]
	0x02224EA8 ADD X1, X31, 0x8
	0x02224EAC MOV X0, X21
	0x02224EB0 LDR X2, [X8 + 0x10]
	0x02224EB4 BL 0x21A4990
	0x02224EB8 TBNZ X0, 0x0, 0x22250B8
	0x02224EBC MOV X0, X21
	0x02224EC0 MOV X1, X31
	0x02224EC4 BL 0x3C3F49C
	0x02224EC8 CBZ X0, 0x22250B8
	0x02224ECC ADRP X22, 0x1ED9000
	0x02224ED0 LDR X22, [X22 + 0xB88]
	0x02224ED4 MOV X21, X0
	0x02224ED8 LDR X0, [X22]
	0x02224EDC LDR W8, [X0 + 0xE0]
	0x02224EE0 CBNZ W8, 0x2224EEC
	0x02224EE4 BL 0x1C16DFC
	0x02224EE8 LDR X0, [X22]
	0x02224EEC LDR X8, [X0 + 0xB8]
	0x02224EF0 LDR X0, [X8 + 0x8]
	0x02224EF4 CBZ X0, 0x22250CC
	0x02224EF8 ADRP X8, 0x1EF8000
	0x02224EFC LDR X8, [X8 + 0x178]
	0x02224F00 LDR X1, [X8]
	0x02224F04 BL 0x2601ECC
	0x02224F08 ADRP X23, 0x1EF8000
	0x02224F0C ADRP X24, 0x1ECF000
	0x02224F10 LDR X23, [X23 + 0x188]
	0x02224F14 LDR X24, [X24 + 0x598]
	0x02224F18 LDR X0, [X22]
	0x02224F1C LDR W8, [X0 + 0xE0]
	0x02224F20 CBNZ W8, 0x2224F2C
	0x02224F24 BL 0x1C16DFC
	0x02224F28 LDR X0, [X22]
	0x02224F2C LDR X8, [X0 + 0xB8]
	0x02224F30 LDR X0, [X8 + 0x8]
	0x02224F34 CBZ X0, 0x22250CC
	0x02224F38 LDR X2, [X23]
	0x02224F3C MOV X1, X21
	0x02224F40 BL 0x2602314
	0x02224F44 CBZ X21, 0x22250CC
	0x02224F48 LDR X8, [X19 + 0x38]
	0x02224F4C ADD X1, X31, 0x8
	0x02224F50 MOV X0, X21
	0x02224F54 LDR X2, [X8 + 0x10]
	0x02224F58 BL 0x21A4990
	0x02224F5C TBNZ X0, 0x0, 0x2224F98
	0x02224F60 MOV X0, X21
	0x02224F64 MOV X1, X31
	0x02224F68 BL 0x3C3F49C
	0x02224F6C LDR X8, [X24]
	0x02224F70 MOV X21, X0
	0x02224F74 LDR W9, [X8 + 0xE0]
	0x02224F78 CBNZ W9, 0x2224F84
	0x02224F7C MOV X0, X8
	0x02224F80 BL 0x1C16DFC
	0x02224F84 MOV X0, X21
	0x02224F88 MOV X1, X31
	0x02224F8C MOV X2, X31
	0x02224F90 BL 0x3C3883C
	0x02224F94 TBZ X0, 0x0, 0x2224F18
	0x02224F98 LDR X0, [X22]
	0x02224F9C LDR W8, [X0 + 0xE0]
	0x02224FA0 CBNZ W8, 0x2224FAC
	0x02224FA4 BL 0x1C16DFC
	0x02224FA8 LDR X0, [X22]
	0x02224FAC LDR X8, [X0 + 0xB8]
	0x02224FB0 LDR X8, [X8 + 0x8]
	0x02224FB4 CBZ X8, 0x22250CC
	0x02224FB8 LDR W8, [X8 + 0x18]
	0x02224FBC CBZ W8, 0x22250B8
	0x02224FC0 LDR X8, [X19 + 0x38]
	0x02224FC4 LDR X0, [X8 + 0x28]
	0x02224FC8 LDRB W8, [X0 + 0x135]
	0x02224FCC TBNZ X8, 0x0, 0x2224FD4
	0x02224FD0 BL 0x1C5C684
	0x02224FD4 LDR W8, [X0 + 0xE0]
	0x02224FD8 CBNZ W8, 0x2224FE0
	0x02224FDC BL 0x1C16DFC
	0x02224FE0 LDR X8, [X19 + 0x38]
	0x02224FE4 LDR X0, [X8 + 0x28]
	0x02224FE8 LDRB W8, [X0 + 0x135]
	0x02224FEC TBNZ X8, 0x0, 0x2224FF4
	0x02224FF0 BL 0x1C5C684
	0x02224FF4 LDR X8, [X0 + 0xB8]
	0x02224FF8 ADRP X23, 0x1EF8000
	0x02224FFC LDR X21, [X8]
	0x02225000 B 0x3EB17EC
	0x02225004 LDR X0, [X22]
	0x02225008 LDR W8, [X0 + 0xE0]
	0x0222500C CBNZ W8, 0x2225018
	0x02225010 BL 0x1C16DFC
	0x02225014 LDR X0, [X22]
	0x02225018 LDR X8, [X0 + 0xB8]
	0x0222501C LDR X8, [X8 + 0x8]
	0x02225020 CBZ X8, 0x22250D0
	0x02225024 LDR W9, [X8 + 0x18]
	0x02225028 CMP W9, 0x0
	0x0222502C B.LE 0x2225088
	0x02225030 LDR W9, [X0 + 0xE0]
	0x02225034 CBNZ W9, 0x222504C
	0x02225038 BL 0x1C16DFC
	0x0222503C LDR X8, [X22]
	0x02225040 LDR X8, [X8 + 0xB8]
	0x02225044 LDR X8, [X8 + 0x8]
	0x02225048 CBZ X8, 0x22250DC
	0x0222504C LDR X1, [X23]
	0x02225050 MOV X0, X8
	0x02225054 BL 0x26022C0
	0x02225058 CBZ X0, 0x22250D4
	0x0222505C LDR X8, [X19 + 0x38]
	0x02225060 LDR X2, [X8 + 0x8]
	0x02225064 MOV X1, X21
	0x02225068 BL 0x21A443C
	0x0222506C CBZ X20, 0x22250D8
	0x02225070 LDR X8, [X19 + 0x38]
	0x02225074 LDR X2, [X8 + 0x30]
	0x02225078 MOV X0, X20
	0x0222507C MOV X1, X21
	0x02225080 BL 0x301C194
	0x02225084 B 0x2225004
	0x02225088 MOV X20, X31
	0x0222508C CBZ X21, 0x22250CC
	0x02225090 LDP W2, W8, [X21 + 0x18]
	0x02225094 ADD W8, W8, 0x1
	0x02225098 CMP W2, 0x1
	0x0222509C STP W31, W8, [X21 + 0x18]
	0x022250A0 B.LT 0x22250B4
	0x022250A4 LDR X0, [X21 + 0x10]
	0x022250A8 MOV W1, W31
	0x022250AC MOV X3, X31
	0x022250B0 BL 0x339FA34
	0x022250B4 CBNZ X20, 0x22250E0
	0x022250B8 LDP X20, X19, [X31 + 0x30]
	0x022250BC LDP X22, X21, [X31 + 0x20]
	0x022250C0 LDP X24, X23, [X31 + 0x10]
	0x022250C4 LDR X30, [X31], #0x40
	0x022250C8 RET
	0x022250CC BL 0x1C16F20
	0x022250D0 BL 0x1C16F20
	0x022250D4 BL 0x1C16F20
	0x022250D8 BL 0x1C16F20
	0x022250DC BL 0x1C16F20
	0x022250E0 MOV X0, X20
	0x022250E4 BL 0x1C16F18
	0x022250E8 B 0x2225104
	0x022250EC B 0x2225104
	0x022250F0 B 0x2225104
	0x022250F4 B 0x2225104
	0x022250F8 B 0x2225104
	0x022250FC B 0x2225104
	0x02225100 B 0x2225104
	0x02225104 MOV X19, X0
	0x02225108 CMP W1, 0x1
	0x0222510C B.NE 0x2225124
	0x02225110 MOV X0, X19
	0x02225114 BL 0x3EB1AD0
	0x02225118 LDR X20, [X0]
	0x0222511C BL 0x3EB1AE0
	0x02225120 B 0x222508C
	0x02225124 MOV X20, X31
	0x02225128 B 0x2225130
	0x0222512C MOV X19, X0
	0x02225130 CBNZ X21, 0x2225138
	0x02225134 BL 0x1C16F20
	0x02225138 LDP W2, W8, [X21 + 0x18]
	0x0222513C ADD W8, W8, 0x1
	0x02225140 CMP W2, 0x1
	0x02225144 STP W31, W8, [X21 + 0x18]
	0x02225148 B.LT 0x222515C
	0x0222514C LDR X0, [X21 + 0x10]
	0x02225150 MOV W1, W31
	0x02225154 MOV X3, X31
	0x02225158 BL 0x339FA34
	0x0222515C CBNZ X20, 0x2225168
	0x02225160 MOV X0, X19
	0x02225164 BL 0x1D2C690
	0x02225168 MOV X0, X20
	0x0222516C BL 0x1C16F18
	0x02225170 BL 0x1990590
	0x02225174 SUB X31, X31, 0x30
	0x02225178 STP X30, X21, [X31 + 0x10]
	0x0222517C STP X20, X19, [X31 + 0x20]
	0x02225180 LDR X8, [X1 + 0x38]
	0x02225184 MOV X19, X1
	0x02225188 MOV X20, X0
	0x0222518C CBNZ X8, 0x22251AC
	0x02225190 ADRP X0, 0x1ECE000
	0x02225194 LDR X0, [X0 + 0x598]
	0x02225198 BL 0x1C16CF4
	0x0222519C LDR X8, [X19 + 0x38]
	0x022251A0 CBNZ X8, 0x22251AC
	0x022251A4 MOV X0, X19
	0x022251A8 BL 0x1C5C6E0
	0x022251AC STP X31, X31, [X31]
	0x022251B0 CBZ X20, 0x2225248
	0x022251B4 LDR X8, [X19 + 0x38]
	0x022251B8 ADD X1, X31, 0x8
	0x022251BC MOV X0, X20
	0x022251C0 LDR X2, [X8]
	0x022251C4 BL 0x21A4990
	0x022251C8 TBZ X0, 0x0, 0x22251D4
	0x022251CC LDR X0, [X31 + 0x8]
	0x022251D0 B 0x2225238
	0x022251D4 ADRP X21, 0x1ECE000
	0x022251D8 LDR X21, [X21 + 0x598]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X8, [X3+56]
	015 Move X21, X3
	016 Move W22, W2
	017 Move X19, X1
	018 Move X20, X0
	019 Compare X8, 0
	020 JumpIfNotEqual {41}
	021 Move X0, 0x1EDA000
	022 Move X0, [X0+2952]
	023 Call 0x1C17CF4
	024 Move X0, 0x1EF9000
	025 Move X0, [X0+344]
	026 Call 0x1C17CF4
	027 Move X0, 0x1EF9000
	028 Move X0, [X0+352]
	029 Call 0x1C17CF4
	030 Move X0, 0x1EF9000
	031 Move X0, [X0+360]
	032 Call 0x1C17CF4
	033 Move X0, 0x1EF9000
	034 Move X0, [X0+368]
	035 Call 0x1C17CF4
	036 Move X8, [X21+56]
	037 Compare X8, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X21
	040 Call 0x1C5D6E0
	041 Move X27, 0x1EDA000
	042 Move X27, [X27+2952]
	043 Move [X31+8], X31
	044 Move X0, [X27]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X27]
	050 Move X8, [X0+184]
	051 Move X0, [X8]
	052 Compare X0, 0
	053 JumpIfEqual {287}
	054 Move X8, 0x1EF9000
	055 Move X8, [X8+344]
	056 Move X1, [X8]
	057 Call Queue`1<Object>.Clear, X0
	058 Compare X19, 0
	059 JumpIfNotEqual {73}
	060 Move X8, [X21+56]
	061 Move X0, [X8]
	062 Move W8, [X0+309]
	063 Move TEMP, X8
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {68}
	067 Call 0x1C5D684
	068 Call 0x1C17F10
	069 Move X8, [X21+56]
	070 Move X19, X0
	071 Move X1, [X8+8]
	072 Call List`1<Object>..ctor, X0
	073 Compare X20, 0
	074 JumpIfEqual {287}
	075 Move X8, [X21+56]
	076 Move X0, X20
	077 Move X1, X19
	078 Move X2, [X8+16]
	079 Call 0x21A543C, X0, X1
	080 Move X0, X20
	081 Move X1, X31
	082 Call Transform.get_childCount, X0
	083 Move X28, 0x1EF9000
	084 Move X28, [X28+360]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move W23, W0
	087 Move W24, W31
	088 Move X0, X20
	089 Move W1, W24
	090 Move X2, X31
	091 Call Transform.GetChild, X0, X1
	092 Move X25, X0
	093 Move TEMP, X22
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {99}
	097 Compare X25, 0
	098 JumpIfNotEqual {112}
	099 Compare X25, 0
	100 JumpIfEqual {287}
	101 Move X0, X25
	102 Move X1, X31
	103 Call Component.get_gameObject, X0
	104 Compare X0, 0
	105 JumpIfEqual {287}
	106 Move X1, X31
	107 Call GameObject.get_activeSelf, X0
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {134}
	112 Move X8, [X21+56]
	113 Add X1, X31, 8
	114 Move X0, X25
	115 Move X2, [X8+24]
	116 Call 0x21A5990, X0, X1
	117 Move TEMP, X0
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfEqual {134}
	121 Move X0, [X27]
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {127}
	125 Call 0x1C17DFC
	126 Move X0, [X27]
	127 Move X8, [X0+184]
	128 Move X0, [X8]
	129 Compare X0, 0
	130 JumpIfEqual {287}
	131 Move X2, [X28]
	132 Move X1, X25
	133 Call Queue`1<Object>.Enqueue, X0, X1
	134 Add W24, W24, 1
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X8, [X21+56]
	137 Move X0, [X8+48]
	138 Move W8, [X0+309]
	139 Move TEMP, X8
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfEqual {144}
	143 Call 0x1C5D684
	144 Move W8, [X0+224]
	145 Compare W8, 0
	146 JumpIfNotEqual {148}
	147 Call 0x1C17DFC
	148 Move X8, [X21+56]
	149 Move X0, [X8+48]
	150 Move W8, [X0+309]
	151 Move TEMP, X8
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfEqual {156}
	155 Call 0x1C5D684
	156 Move X8, [X0+184]
	157 Move X29, 0x1EF9000
	158 Move X20, [X8]
	159 Move X29, [X29+352]
	160 Move X0, [X27]
	161 Move W8, [X0+224]
	162 Compare W8, 0
	163 JumpIfNotEqual {166}
	164 Call 0x1C17DFC
	165 Move X0, [X27]
	166 Move X8, [X0+184]
	167 Move X8, [X8]
	168 Compare X8, 0
	169 JumpIfEqual {288}
	170 Move W9, [X8+32]
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move W9, [X0+224]
	173 Compare W9, 0
	174 JumpIfNotEqual {181}
	175 Call 0x1C17DFC
	176 Move X8, [X27]
	177 Move X8, [X8+184]
	178 Move X8, [X8]
	179 Compare X8, 0
	180 JumpIfEqual {291}
	181 Move X1, [X29]
	182 Move X0, X8
	183 Call Queue`1<Object>.Dequeue, X0
	184 Move X23, X0
	185 Compare X0, 0
	186 JumpIfEqual {289}
	187 Move X8, [X21+56]
	188 Move X2, [X8+16]
	189 Move X0, X23
	190 Move X1, X20
	191 Call 0x21A543C, X0, X1
	192 Compare X19, 0
	193 JumpIfEqual {290}
	194 Move X8, [X21+56]
	195 Move X2, [X8+56]
	196 Move X0, X19
	197 Move X1, X20
	198 Call List`1<Object>.AddRange, X0, X1
	199 Move X0, X23
	200 Move X1, X31
	201 Call Transform.get_childCount, X0
	202 Move W24, W0
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move W25, W31
	205 Move X0, X23
	206 Move W1, W25
	207 Move X2, X31
	208 Call Transform.GetChild, X0, X1
	209 Move X26, X0
	210 Move TEMP, X22
	211 And TEMP, TEMP, 1
	212 Compare TEMP, 1
	213 JumpIfNotEqual {216}
	214 Compare X26, 0
	215 JumpIfNotEqual {229}
	216 Compare X26, 0
	217 JumpIfEqual {283}
	218 Move X0, X26
	219 Move X1, X31
	220 Call Component.get_gameObject, X0
	221 Compare X0, 0
	222 JumpIfEqual {285}
	223 Move X1, X31
	224 Call GameObject.get_activeSelf, X0
	225 Move TEMP, X0
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfNotEqual {251}
	229 Move X8, [X21+56]
	230 Move X2, [X8+24]
	231 Add X1, X31, 8
	232 Move X0, X26
	233 Call 0x21A5990, X0, X1
	234 Move TEMP, X0
	235 And TEMP, TEMP, 1
	236 Compare TEMP, 1
	237 JumpIfEqual {251}
	238 Move X0, [X27]
	239 Move W8, [X0+224]
	240 Compare W8, 0
	241 JumpIfNotEqual {244}
	242 Call 0x1C17DFC
	243 Move X0, [X27]
	244 Move X8, [X0+184]
	245 Move X0, [X8]
	246 Compare X0, 0
	247 JumpIfEqual {286}
	248 Move X2, [X28]
	249 Move X1, X26
	250 Call Queue`1<Object>.Enqueue, X0, X1
	251 Add W25, W25, 1
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Move X22, X31
	254 Compare X20, 0
	255 JumpIfEqual {287}
	256 Move W2, [X20+24]
	257 Move W8, [X20+28]
	258 Add W8, W8, 1
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Move [X20+24], W31
	261 Move [X20+28], W8
	262 Move X0, [X20+16]
	263 Move W1, W31
	264 Move X3, X31
	265 Call Array.Clear, X0, X1, X2
	266 Compare X22, 0
	267 JumpIfNotEqual {292}
	268 Move X0, X19
	269 Move X20, [X31+96]
	270 Move X19, [X31+104]
	271 Move X22, [X31+80]
	272 Move X21, [X31+88]
	273 Move X24, [X31+64]
	274 Move X23, [X31+72]
	275 Move X26, [X31+48]
	276 Move X25, [X31+56]
	277 Move X28, [X31+32]
	278 Move X27, [X31+40]
	279 Move X29, [X31+16]
	280 Move X30, [X31+24]
	281 Add X31, X31, 112
	282 Return X0
	283 Call 0x1C17F20
	284 Call 0x1C17F20
	285 Call 0x1C17F20
	286 Call 0x1C17F20
	287 Call 0x1C17F20
	288 Call 0x1C17F20
	289 Call 0x1C17F20
	290 Call 0x1C17F20
	291 Call 0x1C17F20
	292 Move X0, X22
	293 Call 0x1C17F18
	294 Move X21, X0
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Move X0, X21
	297 Call 0x3EB2AD0
	298 Move X22, [X0]
	299 Call 0x3EB2AE0
	300 Move X22, X31
	301 Move X21, X0
	302 Compare X20, 0
	303 JumpIfNotEqual {305}
	304 Call 0x1C17F20
	305 Move W2, [X20+24]
	306 Move W8, [X20+28]
	307 Add W8, W8, 1
	308 NotImplemented "Instruction CMP not yet implemented."
	309 Move [X20+24], W31
	310 Move [X20+28], W8
	311 Move X0, [X20+16]
	312 Move W1, W31
	313 Move X3, X31
	314 Call Array.Clear, X0, X1, X2
	315 Compare X22, 0
	316 JumpIfNotEqual {319}
	317 Move X0, X21
	318 Call 0x1D2D690
	319 Move X0, X22
	320 Call 0x1C17F18
	321 Call 0x1991590

Method: System.Collections.Generic.List`1<T> GetNestedComponentsInChildren(UnityEngine.Transform t, System.Collections.Generic.List`1<T> list, System.Boolean includeInactive = True, System.Type[] stopOn)

Disassembly:
	0x022257D8 LDR X8, [X8 + 0xC68]
	0x022257DC LDR X0, [X8]
	0x022257E0 LDR W8, [X0 + 0xE0]
	0x022257E4 CBNZ W8, 0x22257EC
	0x022257E8 BL 0x1C16DFC
	0x022257EC LDR X8, [X20 + 0x38]
	0x022257F0 LDR X0, [X8 + 0x8]
	0x022257F4 LDR X8, [X0]
	0x022257F8 BLR X8
	0x022257FC STR W0, [X23 + 0x50]
	0x02225800 LDUR X1, [X29 - 0x10]
	0x02225804 MOV X0, X19
	0x02225808 MOV X2, X31
	0x0222580C BL 0x1F00D10
	0x02225810 LDR X8, [X27 + 0x28]
	0x02225814 LDUR X9, [X29 - 0x8]
	0x02225818 CMP X8, X9
	0x0222581C B.NE 0x2225848
	0x02225820 AND W0, W22, 0x1
	0x02225824 ADD X31, X29, 0x0
	0x02225828 LDP X20, X19, [X31 + 0x50]
	0x0222582C LDP X22, X21, [X31 + 0x40]
	0x02225830 LDP X24, X23, [X31 + 0x30]
	0x02225834 LDP X26, X25, [X31 + 0x20]
	0x02225838 LDR X27, [X31 + 0x10]
	0x0222583C LDP X29, X30, [X31], #0x60
	0x02225840 RET
	0x02225844 BL 0x1C16F20
	0x02225848 BL 0x3EB1B20
	0x0222584C STP X30, X21, [X31 - 0x20]!
	0x02225850 STP X20, X19, [X31 + 0x10]
	0x02225854 LDR X8, [X2 + 0x38]
	0x02225858 MOV W19, W1
	0x0222585C MOV X20, X0
	0x02225860 CBNZ X8, 0x2225874
	0x02225864 MOV X0, X2
	0x02225868 MOV X21, X2
	0x0222586C BL 0x1C5C6E0
	0x02225870 LDR X8, [X21 + 0x38]
	0x02225874 LDR X2, [X8 + 0x8]
	0x02225878 MOV X0, X20
	0x0222587C MOV W1, W19
	0x02225880 LDP X20, X19, [X31 + 0x10]
	0x02225884 LDR X3, [X2]
	0x02225888 LDP X30, X21, [X31], #0x20
	0x0222588C BR X3
	0x02225890 STP X29, X30, [X31 - 0x60]!
	0x02225894 STP X28, X27, [X31 + 0x10]
	0x02225898 STP X26, X25, [X31 + 0x20]
	0x0222589C STP X24, X23, [X31 + 0x30]
	0x022258A0 STP X22, X21, [X31 + 0x40]
	0x022258A4 STP X20, X19, [X31 + 0x50]
	0x022258A8 ADD X29, X31, 0x0
	0x022258AC SUB X31, X31, 0x30
	0x022258B0 MRS X28, 0xC000
	0x022258B4 LDR X8, [X28 + 0x28]
	0x022258B8 MOV X19, X2
	0x022258BC MOV X20, X1
	0x022258C0 MOV X21, X0
	0x022258C4 STUR X8, [X29 - 0x8]
	0x022258C8 LDR X27, [X2 + 0x38]
	0x022258CC CBNZ X27, 0x22258DC
	0x022258D0 MOV X0, X19
	0x022258D4 BL 0x1C5C6E0
	0x022258D8 LDR X27, [X19 + 0x38]
	0x022258DC LDR X0, [X27 + 0x18]
	0x022258E0 LDR W22, [X0 + 0xFC]
	0x022258E4 LDRB W9, [X0 + 0x135]
	0x022258E8 MOV W8, W22
	0x022258EC TBNZ X9, 0x0, 0x22258FC
	0x022258F0 BL 0x1C5C684
	0x022258F4 LDR W8, [X0 + 0xFC]
	0x022258F8 LDR X27, [X19 + 0x38]
	0x022258FC ADD W8, W8, 0x10
	0x02225900 ADD X8, X8, 0xF
	0x02225904 ADD X9, X31, 0x0
	0x02225908 AND X8, X8, 0x1FFFFFFFF
	0x0222590C SUB X23, X9, X8
	0x02225910 ADD X31, X23, 0x0
	0x02225914 ADD X9, X22, 0xF
	0x02225918 ADD X8, X31, 0x0
	0x0222591C AND X9, X9, 0x1FFFFFFFF
	0x02225920 SUB X24, X8, X9
	0x02225924 ADD X31, X24, 0x0
	0x02225928 ADD X8, X31, 0x0
	0x0222592C SUB X25, X8, X9
	0x02225930 ADD X31, X25, 0x0
	0x02225934 ADD X8, X31, 0x0
	0x02225938 SUB X26, X8, X9
	0x0222593C ADD X31, X26, 0x0
	0x02225940 MOV X0, X26
	0x02225944 MOV W1, W31
	0x02225948 MOV X2, X22
	0x0222594C BL 0x3EB1B10
	0x02225950 LDR X1, [X27 + 0x30]
	0x02225954 MOV X0, X21
	0x02225958 LDR X8, [X1]
	0x0222595C BLR X8
	0x02225960 CMP W0, 0x1
	0x02225964 B.LT 0x2225A24
	0x02225968 STUR X28, [X29 - 0x28]
	0x0222596C MOV W27, W31
	0x02225970 SUB X28, X29, 0xC
	0x02225974 LDR X8, [X19 + 0x38]
	0x02225978 SUB X3, X29, 0x20
	0x0222597C MOV X2, X21
	0x02225980 MOV X4, X24
	0x02225984 LDR X1, [X8 + 0x8]
	0x02225988 LDR X0, [X1]
	0x0222598C STUR W27, [X29 - 0xC]
	0x02225990 STP X28, X24, [X29 - 0x20]
	0x02225994 LDR X8, [X1 + 0x10]
	0x02225998 BLR X8
	0x0222599C MOV X0, X26
	0x022259A0 MOV X1, X24
	0x022259A4 MOV X2, X22
	0x022259A8 BL 0x3EB1AC0
	0x022259AC MOV X0, X25
	0x022259B0 MOV X1, X20
	0x022259B4 MOV X2, X22
	0x022259B8 BL 0x3EB1AC0
	0x022259BC LDR X8, [X19 + 0x38]
	0x022259C0 LDR X0, [X8 + 0x18]
	0x022259C4 LDRB W9, [X0 + 0x135]
	0x022259C8 TBNZ X9, 0x0, 0x22259D4
	0x022259CC BL 0x1C5C684
	0x022259D0 LDR X8, [X19 + 0x38]
	0x022259D4 LDR X1, [X8 + 0x28]
	0x022259D8 SUB X4, X29, 0x20
	0x022259DC SUB X5, X29, 0xC
	0x022259E0 MOV X2, X23
	0x022259E4 MOV X3, X26
	0x022259E8 STUR X25, [X29 - 0x20]
	0x022259EC BL 0x1C17728
	0x022259F0 LDURB W8, [X29 - 0xC]
	0x022259F4 CBNZ W8, 0x2225A1C
	0x022259F8 LDR X8, [X19 + 0x38]
	0x022259FC MOV X0, X21
	0x02225A00 ADD W27, W27, 0x1
	0x02225A04 LDR X1, [X8 + 0x30]
	0x02225A08 LDR X8, [X1]
	0x02225A0C BLR X8
	0x02225A10 CMP W27, W0
	0x02225A14 B.LT 0x2225974
	0x02225A18 MOVN W27, 0x0
	0x02225A1C LDUR X28, [X29 - 0x28]
	0x02225A20 B 0x2225A28
	0x02225A24 MOVN W27, 0x0
	0x02225A28 LDR X8, [X28 + 0x28]
	0x02225A2C LDUR X9, [X29 - 0x8]
	0x02225A30 CMP X8, X9
	0x02225A34 B.NE 0x2225A5C
	0x02225A38 MOV W0, W27
	0x02225A3C ADD X31, X29, 0x0
	0x02225A40 LDP X20, X19, [X31 + 0x50]
	0x02225A44 LDP X22, X21, [X31 + 0x40]
	0x02225A48 LDP X24, X23, [X31 + 0x30]
	0x02225A4C LDP X26, X25, [X31 + 0x20]
	0x02225A50 LDP X28, X27, [X31 + 0x10]
	0x02225A54 LDP X29, X30, [X31], #0x60
	0x02225A58 RET
	0x02225A5C BL 0x3EB1B20
	0x02225A60 SUB X31, X31, 0x60
	0x02225A64 STR X30, [X31 + 0x20]
	0x02225A68 STP X24, X23, [X31 + 0x30]
	0x02225A6C STP X22, X21, [X31 + 0x40]
	0x02225A70 STP X20, X19, [X31 + 0x50]
	0x02225A74 LDR X9, [X2 + 0x38]
	0x02225A78 MOV X21, X2
	0x02225A7C MOV X20, X1
	0x02225A80 MOV X22, X0
	0x02225A84 MOV X19, X8
	0x02225A88 CBNZ X9, 0x2225A94
	0x02225A8C MOV X0, X21
	0x02225A90 BL 0x1C5C6E0
	0x02225A94 CBZ X22, 0x2225B0C
	0x02225A98 MOV X0, X22
	0x02225A9C MOV X1, X31
	0x02225AA0 BL 0x33BE520
	0x02225AA4 LDR X8, [X21 + 0x38]
	0x02225AA8 MOV X23, X0
	0x02225AAC LDP X1, X8, [X8]
	0x02225AB0 LDRB W9, [X1 + 0x135]
	0x02225AB4 LDR X24, [X8]
	0x02225AB8 TBNZ X9, 0x0, 0x2225AC8
	0x02225ABC MOV X0, X1
	0x02225AC0 BL 0x1C5C684
	0x02225AC4 MOV X1, X0
	0x02225AC8 MOV X0, X22
	0x02225ACC BL 0x1C16E00
	0x02225AD0 LDR X8, [X21 + 0x38]
	0x02225AD4 MOV X2, X0
	0x02225AD8 MOV X0, X23
	0x02225ADC MOV X1, X20
	0x02225AE0 LDR X3, [X8 + 0x8]
	0x02225AE4 ADD X8, X31, 0x0
	0x02225AE8 BLR X24
	0x02225AEC LDP V1, V0, [X31]
	0x02225AF0 LDP X22, X21, [X31 + 0x40]
	0x02225AF4 LDP X24, X23, [X31 + 0x30]
	0x02225AF8 LDR X30, [X31 + 0x20]
	0x02225AFC STP V1, V0, [X19]
	0x02225B00 LDP X20, X19, [X31 + 0x50]
	0x02225B04 ADD X31, X31, 0x60
	0x02225B08 RET
	0x02225B0C BL 0x1C16F20
	0x02225B10 SUB X31, X31, 0x70
	0x02225B14 STP X30, X23, [X31 + 0x40]
	0x02225B18 STP X22, X21, [X31 + 0x50]
	0x02225B1C STP X20, X19, [X31 + 0x60]
	0x02225B20 LDR X9, [X3 + 0x38]
	0x02225B24 MOV X22, X3
	0x02225B28 MOV X19, X2
	0x02225B2C MOV X21, X1
	0x02225B30 MOV X23, X0
	0x02225B34 MOV X20, X8
	0x02225B38 CBNZ X9, 0x2225B58
	0x02225B3C ADRP X0, 0x1ECE000
	0x02225B40 LDR X0, [X0 + 0x6C0]
	0x02225B44 BL 0x1C16CF4
	0x02225B48 LDR X8, [X22 + 0x38]
	0x02225B4C CBNZ X8, 0x2225B58
	0x02225B50 MOV X0, X22
	0x02225B54 BL 0x1C5C6E0
	0x02225B58 MOV X0, X23
	0x02225B5C MOV X1, X31
	0x02225B60 BL 0x1E73F90
	0x02225B64 ADRP X8, 0x1ECE000
	0x02225B68 LDR X8, [X8 + 0x6C0]
	0x02225B6C LDR X9, [X22 + 0x38]
	0x02225B70 MOV X22, X0
	0x02225B74 LDR X8, [X8]
	0x02225B78 LDR X23, [X9 + 0x8]
	0x02225B7C LDR W10, [X8 + 0xE0]
	0x02225B80 CBNZ W10, 0x2225B8C
	0x02225B84 MOV X0, X8
	0x02225B88 BL 0x1C16DFC
	0x02225B8C MOV X0, X23
	0x02225B90 MOV X1, X31
	0x02225B94 BL 0x338C698
	0x02225B98 MOV X2, X0
	0x02225B9C ADD X8, X31, 0x8
	0x02225BA0 MOV X0, X22
	0x02225BA4 MOV X1, X21
	0x02225BA8 MOV X3, X31
	0x02225BAC BL 0x1E743E0
	0x02225BB0 LDR X8, [X31 + 0x18]
	0x02225BB4 LDUR V0, [X31 + 0x8]
	0x02225BB8 LDP X22, X21, [X31 + 0x50]
	0x02225BBC LDP X30, X23, [X31 + 0x40]
	0x02225BC0 STP X8, X19, [X20 + 0x10]
	0x02225BC4 STR V0, [X20]
	0x02225BC8 LDP X20, X19, [X31 + 0x60]
	0x02225BCC STR X8, [X31 + 0x30]
	0x02225BD0 STR V0, [X31 + 0x2]
	0x02225BD4 ADD X31, X31, 0x70
	0x02225BD8 RET
	0x02225BDC SUB X31, X31, 0x50
	0x02225BE0 STR X30, [X31 + 0x20]
	0x02225BE4 STP X22, X21, [X31 + 0x30]
	0x02225BE8 STP X20, X19, [X31 + 0x40]
	0x02225BEC LDR X9, [X2 + 0x38]
	0x02225BF0 MOV X20, X1
	0x02225BF4 MOV X21, X0
	0x02225BF8 MOV X19, X8
	0x02225BFC CBNZ X9, 0x2225C08
	0x02225C00 MOV X0, X2
	0x02225C04 BL 0x1C5C6E0
	0x02225C08 CBZ X21, 0x2225C4C
	0x02225C0C LDR X22, [X21 + 0x38]
	0x02225C10 MOV X0, X21
	0x02225C14 MOV X1, X31
	0x02225C18 BL 0x33BE520
	0x02225C1C MOV X1, X0
	0x02225C20 ADD X8, X31, 0x0
	0x02225C24 MOV X0, X22
	0x02225C28 MOV X2, X20
	0x02225C2C BL 0x2225D10
	0x02225C30 LDP V1, V0, [X31]
	0x02225C34 LDP X22, X21, [X31 + 0x30]
	0x02225C38 LDR X30, [X31 + 0x20]
	0x02225C3C STP V1, V0, [X19]
	0x02225C40 LDP X20, X19, [X31 + 0x40]
	0x02225C44 ADD X31, X31, 0x50
	0x02225C48 RET
	0x02225C4C BL 0x1C16F20
	0x02225C50 SUB X31, X31, 0x50
	0x02225C54 STR X30, [X31 + 0x20]
	0x02225C58 STP X22, X21, [X31 + 0x30]
	0x02225C5C STP X20, X19, [X31 + 0x40]
	0x02225C60 LDR X9, [X2 + 0x38]
	0x02225C64 MOV X21, X1
	0x02225C68 MOV X19, X0
	0x02225C6C MOV X20, X8
	0x02225C70 CBNZ X9, 0x2225CA4
	0x02225C74 ADRP X0, 0x1EF7000
	0x02225C78 LDR X0, [X0 + 0x198]
	0x02225C7C MOV X22, X2
	0x02225C80 BL 0x1C16CF4
	0x02225C84 ADRP X0, 0x1ECE000
	0x02225C88 LDR X0, [X0 + 0x6C0]
	0x02225C8C BL 0x1C16CF4
	0x02225C90 LDR X9, [X22 + 0x38]
	0x02225C94 CBNZ X9, 0x2225CA4
	0x02225C98 MOV X0, X22
	0x02225C9C BL 0x1C5C6E0
	0x02225CA0 LDR X9, [X22 + 0x38]
	0x02225CA4 ADRP X8, 0x1ECE000
	0x02225CA8 LDR X8, [X8 + 0x6C0]
	0x02225CAC STP X31, X31, [X31 + 0x8]
	0x02225CB0 STR X31, [X31 + 0x18]
	0x02225CB4 LDR X22, [X9 + 0x8]
	0x02225CB8 LDR X0, [X8]
	0x02225CBC LDR W8, [X0 + 0xE0]
	0x02225CC0 CBNZ W8, 0x2225CC8
	0x02225CC4 BL 0x1C16DFC
	0x02225CC8 MOV X0, X22
	0x02225CCC MOV X1, X31
	0x02225CD0 BL 0x338C698
	0x02225CD4 ADRP X8, 0x1EF7000
	0x02225CD8 LDR X8, [X8 + 0x198]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X8, [X4+56]
	015 Move X19, X4
	016 Move X22, X3
	017 Move W23, W2
	018 Move X29, X1
	019 Move X20, X0
	020 Compare X8, 0
	021 JumpIfNotEqual {42}
	022 Move X0, 0x1ED9000
	023 Move X0, [X0+2952]
	024 Call 0x1C17CF4
	025 Move X0, 0x1EF8000
	026 Move X0, [X0+344]
	027 Call 0x1C17CF4
	028 Move X0, 0x1EF8000
	029 Move X0, [X0+352]
	030 Call 0x1C17CF4
	031 Move X0, 0x1EF8000
	032 Move X0, [X0+360]
	033 Call 0x1C17CF4
	034 Move X0, 0x1EF8000
	035 Move X0, [X0+368]
	036 Call 0x1C17CF4
	037 Move X8, [X19+56]
	038 Compare X8, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X19
	041 Call 0x1C5D6E0
	042 Move X28, 0x1ED9000
	043 Move X28, [X28+2952]
	044 Move [X31+24], X31
	045 Move X0, [X28]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X0, [X28]
	051 Move X8, [X0+184]
	052 Move X0, [X8]
	053 Compare X0, 0
	054 JumpIfEqual {306}
	055 Move X8, 0x1EF8000
	056 Move X8, [X8+344]
	057 Move X1, [X8]
	058 Call Queue`1<Object>.Clear, X0
	059 Compare X20, 0
	060 JumpIfEqual {306}
	061 Move X8, [X19+56]
	062 Move X0, X20
	063 Move X1, X29
	064 Move [X31+16], X19
	065 Move X2, [X8+8]
	066 Call 0x21A543C, X0, X1
	067 Move X0, X20
	068 Move X1, X31
	069 Call Transform.get_childCount, X0
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move W24, W0
	072 Move W25, W31
	073 Add X19, X22, 32
	074 Move X0, X20
	075 Move W1, W25
	076 Move X2, X31
	077 Call Transform.GetChild, X0, X1
	078 Move X26, X0
	079 Move TEMP, X23
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {96}
	083 Compare X26, 0
	084 JumpIfEqual {306}
	085 Move X0, X26
	086 Move X1, X31
	087 Call Component.get_gameObject, X0
	088 Compare X0, 0
	089 JumpIfEqual {306}
	090 Move X1, X31
	091 Call GameObject.get_activeSelf, X0
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {131}
	096 Compare X22, 0
	097 JumpIfEqual {306}
	098 Move X8, [X22+24]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 And X8, X8, 0
	101 Compare X8, 0
	102 JumpIfEqual {309}
	103 Move X21, X31
	104 Subtract X27, X8, 1
	105 Compare X26, 0
	106 JumpIfEqual {306}
	107 Move X1, [X19]
	108 Add X2, X31, 24
	109 Move X0, X26
	110 Move X3, X31
	111 Call Component.TryGetComponent, X0, X1, X2
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move W8, [X22+24]
	114 Add X21, X21, 1
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X0, [X28]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {122}
	120 Call 0x1C17DFC
	121 Move X0, [X28]
	122 Move X8, [X0+184]
	123 Move X0, [X8]
	124 Compare X0, 0
	125 JumpIfEqual {306}
	126 Move X8, 0x1EF8000
	127 Move X8, [X8+360]
	128 Move X1, X26
	129 Move X2, [X8]
	130 Call Queue`1<Object>.Enqueue, X0, X1
	131 Add W25, W25, 1
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X19, [X31+16]
	134 Move X8, [X19+56]
	135 Move X0, [X8+24]
	136 Move W8, [X0+309]
	137 Move TEMP, X8
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfEqual {142}
	141 Call 0x1C5D684
	142 Move W8, [X0+224]
	143 Move X20, X29
	144 Compare W8, 0
	145 JumpIfNotEqual {147}
	146 Call 0x1C17DFC
	147 Move X8, [X19+56]
	148 Move X0, [X8+24]
	149 Move W8, [X0+309]
	150 Move TEMP, X8
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfEqual {155}
	154 Call 0x1C5D684
	155 Move X8, [X0+184]
	156 Add X19, X22, 32
	157 Move X8, [X8]
	158 Move [X31+8], X8
	159 Move X0, [X28]
	160 Move W8, [X0+224]
	161 Compare W8, 0
	162 JumpIfNotEqual {165}
	163 Call 0x1C17DFC
	164 Move X0, [X28]
	165 Move X8, [X0+184]
	166 Move X8, [X8]
	167 Compare X8, 0
	168 JumpIfEqual {310}
	169 Move W9, [X8+32]
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move W9, [X0+224]
	172 Compare W9, 0
	173 JumpIfNotEqual {180}
	174 Call 0x1C17DFC
	175 Move X8, [X28]
	176 Move X8, [X8+184]
	177 Move X8, [X8]
	178 Compare X8, 0
	179 JumpIfEqual {313}
	180 Move X9, 0x1EF8000
	181 Move X9, [X9+352]
	182 Move X1, [X9]
	183 Move X0, X8
	184 Call Queue`1<Object>.Dequeue, X0
	185 Move X24, X0
	186 Compare X0, 0
	187 JumpIfEqual {311}
	188 Move X1, [X31+8]
	189 Move X8, [X31+16]
	190 Move X8, [X8+56]
	191 Move X2, [X8+8]
	192 Move X0, X24
	193 Call 0x21A543C, X0, X1
	194 Compare X20, 0
	195 JumpIfEqual {312}
	196 Move X1, [X31+8]
	197 Move X8, [X31+16]
	198 Move X8, [X8+56]
	199 Move X2, [X8+32]
	200 Move X0, X20
	201 Call List`1<Object>.AddRange, X0, X1
	202 Move X0, X24
	203 Move X1, X31
	204 Call Transform.get_childCount, X0
	205 Move W25, W0
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move W26, W31
	208 Move X0, X24
	209 Move W1, W26
	210 Move X2, X31
	211 Call Transform.GetChild, X0, X1
	212 Move X27, X0
	213 Move TEMP, X23
	214 And TEMP, TEMP, 1
	215 Compare TEMP, 1
	216 JumpIfEqual {230}
	217 Compare X27, 0
	218 JumpIfEqual {307}
	219 Move X0, X27
	220 Move X1, X31
	221 Call Component.get_gameObject, X0
	222 Compare X0, 0
	223 JumpIfEqual {308}
	224 Move X1, X31
	225 Call GameObject.get_activeSelf, X0
	226 Move TEMP, X0
	227 And TEMP, TEMP, 1
	228 Compare TEMP, 1
	229 JumpIfNotEqual {267}
	230 Compare X22, 0
	231 JumpIfEqual {304}
	232 Move X8, [X22+24]
	233 NotImplemented "Instruction CMP not yet implemented."
	234 And X8, X8, 0
	235 Compare X8, 0
	236 JumpIfEqual {300}
	237 Move X20, X31
	238 Subtract X21, X8, 1
	239 Compare X27, 0
	240 JumpIfEqual {302}
	241 Move X1, [X19]
	242 Add X2, X31, 24
	243 Move X0, X27
	244 Move X3, X31
	245 Call Component.TryGetComponent, X0, X1, X2
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Move W8, [X22+24]
	248 Add X20, X20, 1
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Move X0, [X28]
	251 Move W8, [X0+224]
	252 Compare W8, 0
	253 JumpIfEqual {255}
	254 Move X20, X29
	255 Move X20, X29
	256 Call 0x1C17DFC
	257 Move X0, [X28]
	258 Move X8, [X0+184]
	259 Move X0, [X8]
	260 Compare X0, 0
	261 JumpIfEqual {305}
	262 Move X8, 0x1EF8000
	263 Move X8, [X8+360]
	264 Move X2, [X8]
	265 Move X1, X27
	266 Call Queue`1<Object>.Enqueue, X0, X1
	267 Add W26, W26, 1
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Move X22, X31
	270 Move X9, [X31+8]
	271 Compare X9, 0
	272 JumpIfEqual {306}
	273 Move W2, [X9+24]
	274 Move W8, [X9+28]
	275 Add W8, W8, 1
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Move [X9+24], W31
	278 Move [X9+28], W8
	279 Move X0, [X9+16]
	280 Move W1, W31
	281 Move X3, X31
	282 Call Array.Clear, X0, X1, X2
	283 Compare X22, 0
	284 JumpIfNotEqual {314}
	285 Move X0, X20
	286 Move X20, [X31+112]
	287 Move X19, [X31+120]
	288 Move X22, [X31+96]
	289 Move X21, [X31+104]
	290 Move X24, [X31+80]
	291 Move X23, [X31+88]
	292 Move X26, [X31+64]
	293 Move X25, [X31+72]
	294 Move X28, [X31+48]
	295 Move X27, [X31+56]
	296 Move X29, [X31+32]
	297 Move X30, [X31+40]
	298 Add X31, X31, 128
	299 Return X0
	300 Move X20, X29
	301 Call 0x1C17F28
	302 Move X20, X29
	303 Call 0x1C17F20
	304 Call 0x1C17F20
	305 Call 0x1C17F20
	306 Call 0x1C17F20
	307 Call 0x1C17F20
	308 Call 0x1C17F20
	309 Call 0x1C17F28
	310 Call 0x1C17F20
	311 Call 0x1C17F20
	312 Call 0x1C17F20
	313 Call 0x1C17F20
	314 Move X0, X22
	315 Call 0x1C17F18
	316 Move X21, X0
	317 Move X20, X29
	318 Move X21, X0
	319 NotImplemented "Instruction CMP not yet implemented."
	320 Move X0, X21
	321 Call 0x3EB2AD0
	322 Move X22, [X0]
	323 Call 0x3EB2AE0
	324 Move X22, X31
	325 Move X21, X0
	326 Move X8, [X31+8]
	327 Compare X8, 0
	328 JumpIfNotEqual {330}
	329 Call 0x1C17F20
	330 Move X9, [X31+8]
	331 Move W2, [X9+24]
	332 Move W8, [X9+28]
	333 Add W8, W8, 1
	334 NotImplemented "Instruction CMP not yet implemented."
	335 Move [X9+24], W31
	336 Move [X9+28], W8
	337 Move X8, [X31+8]
	338 Move X0, [X8+16]
	339 Move W1, W31
	340 Move X3, X31
	341 Call Array.Clear, X0, X1, X2
	342 Compare X22, 0
	343 JumpIfNotEqual {346}
	344 Move X0, X21
	345 Call 0x1D2D690
	346 Move X0, X22
	347 Call 0x1C17F18
	348 Call 0x1991590

Method: System.Void GetNestedComponentsInChildren(UnityEngine.Transform t, System.Boolean includeInactive, System.Collections.Generic.List`1<T> list)

Disassembly:
	0x022251DC MOV X0, X20
	0x022251E0 MOV X1, X31
	0x022251E4 BL 0x3C3F49C
	0x022251E8 LDR X8, [X21]
	0x022251EC MOV X20, X0
	0x022251F0 LDR W9, [X8 + 0xE0]
	0x022251F4 CBNZ W9, 0x2225200
	0x022251F8 MOV X0, X8
	0x022251FC BL 0x1C16DFC
	0x02225200 MOV X0, X20
	0x02225204 MOV X1, X31
	0x02225208 BL 0x3C38948
	0x0222520C TBZ X0, 0x0, 0x2225234
	0x02225210 CBZ X20, 0x2225248
	0x02225214 LDR X8, [X19 + 0x38]
	0x02225218 ADD X1, X31, 0x0
	0x0222521C MOV X0, X20
	0x02225220 LDR X2, [X8]
	0x02225224 BL 0x21A4990
	0x02225228 TBZ X0, 0x0, 0x22251DC
	0x0222522C LDR X0, [X31]
	0x02225230 B 0x2225238
	0x02225234 MOV X0, X31
	0x02225238 LDP X20, X19, [X31 + 0x20]
	0x0222523C LDP X30, X21, [X31 + 0x10]
	0x02225240 ADD X31, X31, 0x30
	0x02225244 RET
	0x02225248 BL 0x1C16F20
	0x0222524C SUB X31, X31, 0x40
	0x02225250 STP X30, X23, [X31 + 0x10]
	0x02225254 STP X22, X21, [X31 + 0x20]
	0x02225258 STP X20, X19, [X31 + 0x30]
	0x0222525C LDR X8, [X3 + 0x38]
	0x02225260 MOV X21, X2
	0x02225264 MOV X19, X1
	0x02225268 MOV X20, X0
	0x0222526C CBNZ X8, 0x2225290
	0x02225270 ADRP X0, 0x1ED5000
	0x02225274 LDR X0, [X0 + 0xC68]
	0x02225278 MOV X22, X3
	0x0222527C BL 0x1C16CF4
	0x02225280 LDR X8, [X22 + 0x38]
	0x02225284 CBNZ X8, 0x2225290
	0x02225288 MOV X0, X22
	0x0222528C BL 0x1C5C6E0
	0x02225290 ADD X2, X31, 0x8
	0x02225294 MOV X0, X20
	0x02225298 MOV X1, X19
	0x0222529C MOV X3, X31
	0x022252A0 STR X31, [X31 + 0x8]
	0x022252A4 BL 0x1F00AB8
	0x022252A8 MOV W22, W0
	0x022252AC TBZ X0, 0x0, 0x22252F8
	0x022252B0 LDR X23, [X31 + 0x8]
	0x022252B4 LDP V1, V0, [X21]
	0x022252B8 LDR X8, [X23 + 0x40]
	0x022252BC MOV X2, X23
	0x022252C0 STP V1, V0, [X8]
	0x022252C4 ADRP X8, 0x1ED5000
	0x022252C8 LDR X8, [X8 + 0xC68]
	0x022252CC LDR X0, [X8]
	0x022252D0 LDR W8, [X0 + 0xE0]
	0x022252D4 CBNZ W8, 0x22252E0
	0x022252D8 BL 0x1C16DFC
	0x022252DC LDR X2, [X31 + 0x8]
	0x022252E0 MOVZ W8, 0x100
	0x022252E4 MOV X0, X20
	0x022252E8 MOV X1, X19
	0x022252EC MOV X3, X31
	0x022252F0 STR W8, [X23 + 0x50]
	0x022252F4 BL 0x1F00B14
	0x022252F8 AND W0, W22, 0x1
	0x022252FC LDP X20, X19, [X31 + 0x30]
	0x02225300 LDP X22, X21, [X31 + 0x20]
	0x02225304 LDP X30, X23, [X31 + 0x10]
	0x02225308 ADD X31, X31, 0x40
	0x0222530C RET
	0x02225310 SUB X31, X31, 0x40
	0x02225314 STP X30, X23, [X31 + 0x10]
	0x02225318 STP X22, X21, [X31 + 0x20]
	0x0222531C STP X20, X19, [X31 + 0x30]
	0x02225320 LDR X8, [X3 + 0x38]
	0x02225324 MOV X21, X2
	0x02225328 MOV X19, X1
	0x0222532C MOV X20, X0
	0x02225330 CBNZ X8, 0x2225354
	0x02225334 ADRP X0, 0x1ED5000
	0x02225338 LDR X0, [X0 + 0xC68]
	0x0222533C MOV X22, X3
	0x02225340 BL 0x1C16CF4
	0x02225344 LDR X8, [X22 + 0x38]
	0x02225348 CBNZ X8, 0x2225354
	0x0222534C MOV X0, X22
	0x02225350 BL 0x1C5C6E0
	0x02225354 ADD X2, X31, 0x8
	0x02225358 MOV X0, X20
	0x0222535C MOV X1, X19
	0x02225360 MOV X3, X31
	0x02225364 STR X31, [X31 + 0x8]
	0x02225368 BL 0x1F00AB8
	0x0222536C MOV W22, W0
	0x02225370 TBZ X0, 0x0, 0x22253C0
	0x02225374 LDR X23, [X31 + 0x8]
	0x02225378 MOVZ W2, 0x98
	0x0222537C MOV X1, X21
	0x02225380 LDR X0, [X23 + 0x40]
	0x02225384 BL 0x3EB1B30
	0x02225388 ADRP X8, 0x1ED5000
	0x0222538C LDR X8, [X8 + 0xC68]
	0x02225390 MOV X2, X23
	0x02225394 LDR X0, [X8]
	0x02225398 LDR W8, [X0 + 0xE0]
	0x0222539C CBNZ W8, 0x22253A8
	0x022253A0 BL 0x1C16DFC
	0x022253A4 LDR X2, [X31 + 0x8]
	0x022253A8 MOVZ W8, 0x4C0
	0x022253AC MOV X0, X20
	0x022253B0 MOV X1, X19
	0x022253B4 MOV X3, X31
	0x022253B8 STR W8, [X23 + 0x50]
	0x022253BC BL 0x1F00B14
	0x022253C0 AND W0, W22, 0x1
	0x022253C4 LDP X20, X19, [X31 + 0x30]
	0x022253C8 LDP X22, X21, [X31 + 0x20]
	0x022253CC LDP X30, X23, [X31 + 0x10]
	0x022253D0 ADD X31, X31, 0x40
	0x022253D4 RET
	0x022253D8 SUB X31, X31, 0x40
	0x022253DC STP X30, X23, [X31 + 0x10]
	0x022253E0 STP X22, X21, [X31 + 0x20]
	0x022253E4 STP X20, X19, [X31 + 0x30]
	0x022253E8 LDR X8, [X3 + 0x38]
	0x022253EC MOV X21, X2
	0x022253F0 MOV X19, X1
	0x022253F4 MOV X20, X0
	0x022253F8 CBNZ X8, 0x222541C
	0x022253FC ADRP X0, 0x1ED5000
	0x02225400 LDR X0, [X0 + 0xC68]
	0x02225404 MOV X22, X3
	0x02225408 BL 0x1C16CF4
	0x0222540C LDR X8, [X22 + 0x38]
	0x02225410 CBNZ X8, 0x222541C
	0x02225414 MOV X0, X22
	0x02225418 BL 0x1C5C6E0
	0x0222541C ADD X2, X31, 0x8
	0x02225420 MOV X0, X20
	0x02225424 MOV X1, X19
	0x02225428 MOV X3, X31
	0x0222542C STR X31, [X31 + 0x8]
	0x02225430 BL 0x1F00AB8
	0x02225434 MOV W22, W0
	0x02225438 TBZ X0, 0x0, 0x2225488
	0x0222543C LDR X23, [X31 + 0x8]
	0x02225440 MOVZ W2, 0x88
	0x02225444 MOV X1, X21
	0x02225448 LDR X0, [X23 + 0x40]
	0x0222544C BL 0x3EB1B30
	0x02225450 ADRP X8, 0x1ED5000
	0x02225454 LDR X8, [X8 + 0xC68]
	0x02225458 MOV X2, X23
	0x0222545C LDR X0, [X8]
	0x02225460 LDR W8, [X0 + 0xE0]
	0x02225464 CBNZ W8, 0x2225470
	0x02225468 BL 0x1C16DFC
	0x0222546C LDR X2, [X31 + 0x8]
	0x02225470 MOVZ W8, 0x440
	0x02225474 MOV X0, X20
	0x02225478 MOV X1, X19
	0x0222547C MOV X3, X31
	0x02225480 STR W8, [X23 + 0x50]
	0x02225484 BL 0x1F00B14
	0x02225488 AND W0, W22, 0x1
	0x0222548C LDP X20, X19, [X31 + 0x30]
	0x02225490 LDP X22, X21, [X31 + 0x20]
	0x02225494 LDP X30, X23, [X31 + 0x10]
	0x02225498 ADD X31, X31, 0x40
	0x0222549C RET
	0x022254A0 STP X29, X30, [X31 - 0x60]!
	0x022254A4 STR X27, [X31 + 0x10]
	0x022254A8 STP X26, X25, [X31 + 0x20]
	0x022254AC STP X24, X23, [X31 + 0x30]
	0x022254B0 STP X22, X21, [X31 + 0x40]
	0x022254B4 STP X20, X19, [X31 + 0x50]
	0x022254B8 ADD X29, X31, 0x0
	0x022254BC SUB X31, X31, 0x10
	0x022254C0 MRS X27, 0xC000
	0x022254C4 LDR X8, [X27 + 0x28]
	0x022254C8 MOV X21, X3
	0x022254CC MOV X23, X2
	0x022254D0 MOV X19, X1
	0x022254D4 STUR X8, [X29 - 0x8]
	0x022254D8 LDR X8, [X3 + 0x38]
	0x022254DC MOV X20, X0
	0x022254E0 CBNZ X8, 0x2225504
	0x022254E4 ADRP X0, 0x1ED5000
	0x022254E8 LDR X0, [X0 + 0xC68]
	0x022254EC BL 0x1C16CF4
	0x022254F0 LDR X8, [X21 + 0x38]
	0x022254F4 CBNZ X8, 0x2225504
	0x022254F8 MOV X0, X21
	0x022254FC BL 0x1C5C6E0
	0x02225500 LDR X8, [X21 + 0x38]
	0x02225504 LDR X8, [X8]
	0x02225508 LDR W24, [X8 + 0xFC]
	0x0222550C ADD X8, X31, 0x0
	0x02225510 ADD X9, X24, 0xF
	0x02225514 AND X9, X9, 0x1FFFFFFFF
	0x02225518 SUB X25, X8, X9
	0x0222551C ADD X31, X25, 0x0
	0x02225520 SUB X2, X29, 0x10
	0x02225524 MOV X0, X20
	0x02225528 MOV X1, X19
	0x0222552C MOV X3, X31
	0x02225530 STUR X31, [X29 - 0x10]
	0x02225534 BL 0x1F00AB8
	0x02225538 MOV W22, W0
	0x0222553C TBZ X0, 0x0, 0x22255C0
	0x02225540 LDUR X8, [X29 - 0x10]
	0x02225544 MOV X0, X25
	0x02225548 MOV X1, X23
	0x0222554C MOV X2, X24
	0x02225550 LDR X26, [X8 + 0x40]
	0x02225554 BL 0x3EB1AC0
	0x02225558 MOV X0, X26
	0x0222555C MOV X1, X25
	0x02225560 MOV X2, X24
	0x02225564 BL 0x3EB1AC0
	0x02225568 LDR X8, [X21 + 0x38]
	0x0222556C LDR X0, [X8]
	0x02225570 LDRB W8, [X0 + 0x135]
	0x02225574 TBNZ X8, 0x0, 0x222557C
	0x02225578 BL 0x1C5C684
	0x0222557C ADRP X8, 0x1ED5000
	0x02225580 LDR X8, [X8 + 0xC68]
	0x02225584 LDUR X23, [X29 - 0x10]
	0x02225588 LDR X0, [X8]
	0x0222558C LDR W8, [X0 + 0xE0]
	0x02225590 CBNZ W8, 0x2225598
	0x02225594 BL 0x1C16DFC
	0x02225598 LDR X8, [X21 + 0x38]
	0x0222559C LDR X0, [X8 + 0x8]
	0x022255A0 LDR X8, [X0]
	0x022255A4 BLR X8
	0x022255A8 STR W0, [X23 + 0x50]
	0x022255AC LDUR X2, [X29 - 0x10]
	0x022255B0 MOV X0, X20
	0x022255B4 MOV X1, X19
	0x022255B8 MOV X3, X31
	0x022255BC BL 0x1F00B14
	0x022255C0 LDR X8, [X27 + 0x28]
	0x022255C4 LDUR X9, [X29 - 0x8]
	0x022255C8 CMP X8, X9
	0x022255CC B.NE 0x22255F4
	0x022255D0 AND W0, W22, 0x1
	0x022255D4 ADD X31, X29, 0x0
	0x022255D8 LDP X20, X19, [X31 + 0x50]
	0x022255DC LDP X22, X21, [X31 + 0x40]
	0x022255E0 LDP X24, X23, [X31 + 0x30]
	0x022255E4 LDP X26, X25, [X31 + 0x20]
	0x022255E8 LDR X27, [X31 + 0x10]
	0x022255EC LDP X29, X30, [X31], #0x60
	0x022255F0 RET
	0x022255F4 BL 0x3EB1B20
	0x022255F8 STR X30, [X31 - 0x30]!
	0x022255FC STP X22, X21, [X31 + 0x10]
	0x02225600 STP X20, X19, [X31 + 0x20]
	0x02225604 LDR X8, [X3 + 0x38]
	0x02225608 MOV X22, X2
	0x0222560C MOV X20, X1
	0x02225610 MOV X19, X0
	0x02225614 CBNZ X8, 0x2225638
	0x02225618 ADRP X0, 0x1ED5000
	0x0222561C LDR X0, [X0 + 0xC68]
	0x02225620 MOV X21, X3
	0x02225624 BL 0x1C16CF4
	0x02225628 LDR X8, [X21 + 0x38]
	0x0222562C CBNZ X8, 0x2225638
	0x02225630 MOV X0, X21
	0x02225634 BL 0x1C5C6E0
	0x02225638 STR X31, [X31 + 0x8]
	0x0222563C CBZ X19, 0x22256D4
	0x02225640 LDR X0, [X19 + 0x150]
	0x02225644 ADD X1, X31, 0x8
	0x02225648 MOV X2, X31
	0x0222564C BL 0x1EFAB48
	0x02225650 MOV W21, W0
	0x02225654 TBZ X0, 0x0, 0x22256C0
	0x02225658 LDR X8, [X31 + 0x8]
	0x0222565C UBFM W9, W22, 0x10, 0x1F
	0x02225660 LDR X8, [X8 + 0x40]
	0x02225664 STRB W9, [X8 + 0x2]
	0x02225668 STRH W22, [X8]
	0x0222566C LDRSH W8, [X19 + 0x8]
	0x02225670 LDR X22, [X31 + 0x8]
	0x02225674 ADD W8, W8, 0x1
	0x02225678 STR W8, [X22 + 0x38]
	0x0222567C LDR X8, [X20 + 0x10]
	0x02225680 LDR V0, [X20]
	0x02225684 MOV X1, X22
	0x02225688 STR X8, [X22 + 0x10]
	0x0222568C STR V0, [X22]
	0x02225690 ADRP X8, 0x1ED5000
	0x02225694 LDR X8, [X8 + 0xC68]
	0x02225698 LDR X0, [X8]
	0x0222569C LDR W8, [X0 + 0xE0]
	0x022256A0 CBNZ W8, 0x22256AC
	0x022256A4 BL 0x1C16DFC
	0x022256A8 LDR X1, [X31 + 0x8]
	0x022256AC MOVZ W8, 0x18
	0x022256B0 MOV X0, X19
	0x022256B4 MOV X2, X31
	0x022256B8 STR W8, [X22 + 0x50]
	0x022256BC BL 0x1F00D10
	0x022256C0 AND W0, W21, 0x1
	0x022256C4 LDP X20, X19, [X31 + 0x20]
	0x022256C8 LDP X22, X21, [X31 + 0x10]
	0x022256CC LDR X30, [X31], #0x30
	0x022256D0 RET
	0x022256D4 BL 0x1C16F20
	0x022256D8 STP X29, X30, [X31 - 0x60]!
	0x022256DC STR X27, [X31 + 0x10]
	0x022256E0 STP X26, X25, [X31 + 0x20]
	0x022256E4 STP X24, X23, [X31 + 0x30]
	0x022256E8 STP X22, X21, [X31 + 0x40]
	0x022256EC STP X20, X19, [X31 + 0x50]
	0x022256F0 ADD X29, X31, 0x0
	0x022256F4 SUB X31, X31, 0x10
	0x022256F8 MRS X27, 0xC000
	0x022256FC LDR X8, [X27 + 0x28]
	0x02225700 MOV X20, X3
	0x02225704 MOV X23, X2
	0x02225708 MOV X21, X1
	0x0222570C STUR X8, [X29 - 0x8]
	0x02225710 LDR X8, [X3 + 0x38]
	0x02225714 MOV X19, X0
	0x02225718 CBNZ X8, 0x222573C
	0x0222571C ADRP X0, 0x1ED5000
	0x02225720 LDR X0, [X0 + 0xC68]
	0x02225724 BL 0x1C16CF4
	0x02225728 LDR X8, [X20 + 0x38]
	0x0222572C CBNZ X8, 0x222573C
	0x02225730 MOV X0, X20
	0x02225734 BL 0x1C5C6E0
	0x02225738 LDR X8, [X20 + 0x38]
	0x0222573C LDR X8, [X8]
	0x02225740 LDR W24, [X8 + 0xFC]
	0x02225744 ADD X8, X31, 0x0
	0x02225748 ADD X9, X24, 0xF
	0x0222574C AND X9, X9, 0x1FFFFFFFF
	0x02225750 SUB X25, X8, X9
	0x02225754 ADD X31, X25, 0x0
	0x02225758 STUR X31, [X29 - 0x10]
	0x0222575C CBZ X19, 0x2225844
	0x02225760 LDR X0, [X19 + 0x150]
	0x02225764 SUB X1, X29, 0x10
	0x02225768 MOV X2, X31
	0x0222576C BL 0x1EFAB48
	0x02225770 MOV W22, W0
	0x02225774 TBZ X0, 0x0, 0x2225810
	0x02225778 LDUR X8, [X29 - 0x10]
	0x0222577C MOV X0, X25
	0x02225780 MOV X1, X23
	0x02225784 MOV X2, X24
	0x02225788 LDR X26, [X8 + 0x40]
	0x0222578C BL 0x3EB1AC0
	0x02225790 MOV X0, X26
	0x02225794 MOV X1, X25
	0x02225798 MOV X2, X24
	0x0222579C BL 0x3EB1AC0
	0x022257A0 LDR X8, [X20 + 0x38]
	0x022257A4 LDR X0, [X8]
	0x022257A8 LDRB W8, [X0 + 0x135]
	0x022257AC TBNZ X8, 0x0, 0x22257B4
	0x022257B0 BL 0x1C5C684
	0x022257B4 LDRSH W8, [X19 + 0x8]
	0x022257B8 LDUR X23, [X29 - 0x10]
	0x022257BC ADD W8, W8, 0x1
	0x022257C0 STR W8, [X23 + 0x38]
	0x022257C4 LDR X8, [X21 + 0x10]
	0x022257C8 LDR V0, [X21]
	0x022257CC STR X8, [X23 + 0x10]
	0x022257D0 STR V0, [X23]
	0x022257D4 ADRP X8, 0x1ED5000

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 80
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move [X29-72], X8
	017 Move X8, [X8+40]
	018 Move X20, X3
	019 Move X21, X2
	020 Move W22, W1
	021 Move [X29-8], X8
	022 Move X8, [X3+56]
	023 Move X24, X0
	024 Compare X8, 0
	025 JumpIfNotEqual {47}
	026 Move X0, 0x1ED9000
	027 Move X0, [X0+2952]
	028 Call 0x1C17CF4
	029 Move X0, 0x1EF8000
	030 Move X0, [X0+344]
	031 Call 0x1C17CF4
	032 Move X0, 0x1EF8000
	033 Move X0, [X0+352]
	034 Call 0x1C17CF4
	035 Move X0, 0x1EF8000
	036 Move X0, [X0+360]
	037 Call 0x1C17CF4
	038 Move X0, 0x1EF8000
	039 Move X0, [X0+368]
	040 Call 0x1C17CF4
	041 Move X8, [X20+56]
	042 Compare X8, 0
	043 JumpIfNotEqual {47}
	044 Move X0, X20
	045 Call 0x1C5D6E0
	046 Move X8, [X20+56]
	047 Move X8, [X8+128]
	048 Add X9, X31, 0
	049 Move W8, [X8+252]
	050 Add X8, X8, 15
	051 And X8, X8, 0x1FFFFFFFF
	052 Subtract X23, X9, X8
	053 Add X31, X23, 0
	054 Move [X29-32], X31
	055 Move [X29-24], X31
	056 Move [X29-16], X31
	057 Compare X21, 0
	058 JumpIfEqual {381}
	059 Move W2, [X21+24]
	060 Move W8, [X21+28]
	061 Add W8, W8, 1
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move [X21+24], W31
	064 Move [X21+28], W8
	065 Move X0, [X21+16]
	066 Move W1, W31
	067 Move X3, X31
	068 Call Array.Clear, X0, X1, X2
	069 Move TEMP, X22
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {86}
	073 Compare X24, 0
	074 JumpIfEqual {381}
	075 Move X0, X24
	076 Move X1, X31
	077 Call Component.get_gameObject, X0
	078 Compare X0, 0
	079 JumpIfEqual {381}
	080 Move X1, X31
	081 Call GameObject.get_activeSelf, X0
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {340}
	086 Move X8, [X20+56]
	087 Move X0, [X8+32]
	088 Move W8, [X0+309]
	089 Move TEMP, X8
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {94}
	093 Call 0x1C5D684
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move X8, [X20+56]
	099 Move X0, [X8+32]
	100 Move W8, [X0+309]
	101 Move TEMP, X8
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {106}
	105 Call 0x1C5D684
	106 Move X28, 0x1ED9000
	107 Move X28, [X28+2952]
	108 Move X9, [X0+184]
	109 Move X8, [X28]
	110 Move X9, [X9]
	111 Move W10, [X8+224]
	112 Move [X29-64], X9
	113 Compare W10, 0
	114 JumpIfNotEqual {118}
	115 Move X0, X8
	116 Call 0x1C17DFC
	117 Move X8, [X28]
	118 Move X8, [X8+184]
	119 Move X0, [X8]
	120 Compare X0, 0
	121 JumpIfEqual {381}
	122 Move X8, 0x1EF8000
	123 Move X8, [X8+344]
	124 Move X1, [X8]
	125 Call Queue`1<Object>.Clear, X0
	126 Move X8, [X28]
	127 Move X8, [X8+184]
	128 Move X0, [X8]
	129 Compare X0, 0
	130 JumpIfEqual {381}
	131 Move X19, 0x1EF8000
	132 Move X19, [X19+360]
	133 Move X1, X24
	134 Move X2, [X19]
	135 Call Queue`1<Object>.Enqueue, X0, X1
	136 Move X0, [X28]
	137 Move W8, [X0+224]
	138 Compare W8, 0
	139 JumpIfNotEqual {142}
	140 Call 0x1C17DFC
	141 Move X0, [X28]
	142 Move X8, [X0+184]
	143 Move X8, [X8]
	144 Compare X8, 0
	145 JumpIfEqual {375}
	146 Move W9, [X8+32]
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move W9, [X0+224]
	149 Compare W9, 0
	150 JumpIfNotEqual {157}
	151 Call 0x1C17DFC
	152 Move X8, [X28]
	153 Move X8, [X8+184]
	154 Move X8, [X8]
	155 Compare X8, 0
	156 JumpIfEqual {380}
	157 Move X9, 0x1EF8000
	158 Move X9, [X9+352]
	159 Move X1, [X9]
	160 Move X0, X8
	161 Call Queue`1<Object>.Dequeue, X0
	162 Move X24, X0
	163 Compare X0, 0
	164 JumpIfEqual {378}
	165 Move X8, [X20+56]
	166 Move X2, [X8+40]
	167 NotImplemented "Instruction LDUR not yet implemented."
	168 Move X0, X24
	169 Move X1, X25
	170 Call 0x21A543C, X0, X1
	171 Compare X25, 0
	172 JumpIfEqual {379}
	173 Move X8, [X20+56]
	174 Move X1, [X8+48]
	175 Subtract X8, X29, 56
	176 Move X0, X25
	177 Call List`1<Object>.GetEnumerator, X0
	178 NotImplemented "Instruction LDUR not yet implemented."
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 Move [X29-32], V0
	181 Move [X29-16], X8
	182 Move X8, [X20+56]
	183 Move X1, [X8+104]
	184 Subtract X0, X29, 32
	185 Call Enumerator<Object>.MoveNext, X0
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {242}
	190 Move X8, [X20+56]
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 Move X1, [X8+88]
	193 Move W8, [X1+309]
	194 Move TEMP, X8
	195 And TEMP, TEMP, 1
	196 Compare TEMP, 1
	197 JumpIfEqual {201}
	198 Move X0, X1
	199 Call 0x1C5D684
	200 Move X1, X0
	201 Move X0, X25
	202 Call 0x1C17E00
	203 Move X8, [X20+56]
	204 Move X25, X0
	205 Move X26, [X8+88]
	206 Move W8, [X26+309]
	207 Move TEMP, X8
	208 And TEMP, TEMP, 1
	209 Compare TEMP, 1
	210 JumpIfEqual {214}
	211 Move X0, X26
	212 Call 0x1C5D684
	213 Move X26, X0
	214 Compare X25, 0
	215 JumpIfEqual {182}
	216 Move X0, X25
	217 Move X1, X26
	218 Call 0x1C17E00
	219 Move X1, X0
	220 Compare X1, 0
	221 JumpIfEqual {315}
	222 Move X9, [X20+56]
	223 Move W10, [X21+28]
	224 Move X8, [X21+16]
	225 Move X9, [X9+96]
	226 Add W10, W10, 1
	227 Move [X21+28], W10
	228 Compare X8, 0
	229 JumpIfEqual {318}
	230 NotImplemented "Instruction LDRSW not yet implemented."
	231 Move W11, [X8+24]
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Add W9, W10, 1
	234 Add X8, X8, X10
	235 Move [X21+24], W9
	236 Move [X8+32], X1
	237 Move X8, [X9+32]
	238 Move X8, [X8+192]
	239 Move X2, [X8+112]
	240 Move X0, X21
	241 Call List`1<Object>.AddWithResize, X0, X1
	242 Move X25, X31
	243 Move W26, 7
	244 Move X8, [X20+56]
	245 Move X1, [X8+112]
	246 Subtract X0, X29, 32
	247 Call Enumerator<Object>.Dispose, X0
	248 Compare X25, 0
	249 JumpIfNotEqual {376}
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Compare W26, 0
	252 JumpIfNotEqual {324}
	253 Move X0, X24
	254 Move X1, X31
	255 Call Transform.get_childCount, X0
	256 Move W25, W0
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Move W26, W31
	259 Move X0, X24
	260 Move W1, W26
	261 Move X2, X31
	262 Call Transform.GetChild, X0, X1
	263 Move X27, X0
	264 Move TEMP, X22
	265 And TEMP, TEMP, 1
	266 Compare TEMP, 1
	267 JumpIfNotEqual {270}
	268 Compare X27, 0
	269 JumpIfNotEqual {283}
	270 Compare X27, 0
	271 JumpIfEqual {360}
	272 Move X0, X27
	273 Move X1, X31
	274 Call Component.get_gameObject, X0
	275 Compare X0, 0
	276 JumpIfEqual {359}
	277 Move X1, X31
	278 Call GameObject.get_activeSelf, X0
	279 Move TEMP, X0
	280 And TEMP, TEMP, 1
	281 Compare TEMP, 1
	282 JumpIfNotEqual {313}
	283 Move X8, [X20+56]
	284 Move X1, [X8+120]
	285 Move X0, [X1]
	286 Move [X29-56], X23
	287 Move X8, [X1+16]
	288 Subtract X3, X29, 56
	289 Move X2, X27
	290 Move X4, X23
	291 NotImplemented "Instruction BLR not yet implemented."
	292 Move X8, [X20+56]
	293 Move X0, [X8+128]
	294 Move X1, X23
	295 Call 0x1C17ED4
	296 Move TEMP, X0
	297 And TEMP, TEMP, 1
	298 Compare TEMP, 1
	299 JumpIfEqual {313}
	300 Move X0, [X28]
	301 Move W8, [X0+224]
	302 Compare W8, 0
	303 JumpIfNotEqual {306}
	304 Call 0x1C17DFC
	305 Move X0, [X28]
	306 Move X8, [X0+184]
	307 Move X0, [X8]
	308 Compare X0, 0
	309 JumpIfEqual {361}
	310 Move X2, [X19]
	311 Move X1, X27
	312 Call Queue`1<Object>.Enqueue, X0, X1
	313 Add W26, W26, 1
	314 NotImplemented "Instruction CMP not yet implemented."
	315 Move X0, X25
	316 Move X1, X26
	317 Call 0x1C181E0
	318 Call 0x1C17F20
	319 NotImplemented "Instruction CMP not yet implemented."
	320 Call 0x3EB2AD0
	321 Move X25, [X0]
	322 Call 0x3EB2AE0
	323 Move W26, W31
	324 Move X20, X31
	325 NotImplemented "Instruction LDUR not yet implemented."
	326 Compare X9, 0
	327 JumpIfEqual {381}
	328 Move W2, [X9+24]
	329 Move W8, [X9+28]
	330 Add W8, W8, 1
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Move [X9+24], W31
	333 Move [X9+28], W8
	334 Move X0, [X9+16]
	335 Move W1, W31
	336 Move X3, X31
	337 Call Array.Clear, X0, X1, X2
	338 Compare X20, 0
	339 JumpIfNotEqual {382}
	340 NotImplemented "Instruction LDUR not yet implemented."
	341 Move X8, [X8+40]
	342 NotImplemented "Instruction LDUR not yet implemented."
	343 NotImplemented "Instruction CMP not yet implemented."
	344 Add X31, X29, 0
	345 Move X20, [X31+80]
	346 Move X19, [X31+88]
	347 Move X22, [X31+64]
	348 Move X21, [X31+72]
	349 Move X24, [X31+48]
	350 Move X23, [X31+56]
	351 Move X26, [X31+32]
	352 Move X25, [X31+40]
	353 Move X28, [X31+16]
	354 Move X27, [X31+24]
	355 Move X29, [X31+96]
	356 Move X30, [X31+104]
	357 Return 
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Move X21, X1
	363 Move X22, X0
	364 Move X25, X31
	365 Move X8, [X20+56]
	366 Move X1, [X8+112]
	367 Subtract X0, X29, 32
	368 Call Enumerator<Object>.Dispose, X0
	369 Move X0, X22
	370 Move X1, X21
	371 Compare X25, 0
	372 JumpIfEqual {387}
	373 Move X0, X25
	374 Call 0x1C17F18
	375 Call 0x1C17F20
	376 Move X0, X25
	377 Call 0x1C17F18
	378 Call 0x1C17F20
	379 Call 0x1C17F20
	380 Call 0x1C17F20
	381 Call 0x1C17F20
	382 Move X0, X20
	383 Call 0x1C17F18
	384 Call 0x3EB2B20
	385 Move X21, X1
	386 Move X22, X0
	387 NotImplemented "Instruction CMP not yet implemented."
	388 Call 0x3EB2AD0
	389 Move X20, [X0]
	390 Call 0x3EB2AE0
	391 Move X21, X0
	392 Move X20, X31
	393 Move X21, X0
	394 NotImplemented "Instruction LDUR not yet implemented."
	395 Compare X8, 0
	396 JumpIfNotEqual {398}
	397 Call 0x1C17F20
	398 NotImplemented "Instruction LDUR not yet implemented."
	399 Move W2, [X9+24]
	400 Move W8, [X9+28]
	401 Add W8, W8, 1
	402 NotImplemented "Instruction CMP not yet implemented."
	403 Move [X9+24], W31
	404 Move [X9+28], W8
	405 NotImplemented "Instruction LDUR not yet implemented."
	406 Move X0, [X8+16]
	407 Move W1, W31
	408 Move X3, X31
	409 Call Array.Clear, X0, X1, X2
	410 Compare X20, 0
	411 JumpIfNotEqual {414}
	412 Move X0, X21
	413 Call 0x1D2D690
	414 Move X0, X20
	415 Call 0x1C17F18
	416 Call 0x1991590

Method: T[] FindObjectsOfTypeInOrder(UnityEngine.SceneManagement.Scene scene, System.Boolean includeInactive = False)

Disassembly:
	0x022243F4 MOV X0, X24
	0x022243F8 MOV X1, X25
	0x022243FC BL 0x21A443C
	0x02224400 CBZ X25, 0x22246E8
	0x02224404 LDR X8, [X20 + 0x38]
	0x02224408 LDR X1, [X8 + 0x30]
	0x0222440C SUB X8, X29, 0x38
	0x02224410 MOV X0, X25
	0x02224414 BL 0x301CB58
	0x02224418 LDUR V0, [X29 - 0x38]
	0x0222441C LDUR X8, [X29 - 0x28]
	0x02224420 STUR V0, [X29 - 0x20]
	0x02224424 STUR X8, [X29 - 0x10]
	0x02224428 LDR X8, [X20 + 0x38]
	0x0222442C LDR X1, [X8 + 0x68]
	0x02224430 SUB X0, X29, 0x20
	0x02224434 BL 0x2BC4350
	0x02224438 TBZ X0, 0x0, 0x22244F4
	0x0222443C LDR X8, [X20 + 0x38]
	0x02224440 LDUR X25, [X29 - 0x10]
	0x02224444 LDR X1, [X8 + 0x58]
	0x02224448 LDRB W8, [X1 + 0x135]
	0x0222444C TBNZ X8, 0x0, 0x222445C
	0x02224450 MOV X0, X1
	0x02224454 BL 0x1C5C684
	0x02224458 MOV X1, X0
	0x0222445C MOV X0, X25
	0x02224460 BL 0x1C16E00
	0x02224464 LDR X8, [X20 + 0x38]
	0x02224468 MOV X25, X0
	0x0222446C LDR X26, [X8 + 0x58]
	0x02224470 LDRB W8, [X26 + 0x135]
	0x02224474 TBNZ X8, 0x0, 0x2224484
	0x02224478 MOV X0, X26
	0x0222447C BL 0x1C5C684
	0x02224480 MOV X26, X0
	0x02224484 CBZ X25, 0x2224428
	0x02224488 MOV X0, X25
	0x0222448C MOV X1, X26
	0x02224490 BL 0x1C16E00
	0x02224494 MOV X1, X0
	0x02224498 CBZ X1, 0x22245EC
	0x0222449C LDR X9, [X20 + 0x38]
	0x022244A0 LDR W10, [X21 + 0x1C]
	0x022244A4 LDR X8, [X21 + 0x10]
	0x022244A8 LDR X9, [X9 + 0x60]
	0x022244AC ADD W10, W10, 0x1
	0x022244B0 STR W10, [X21 + 0x1C]
	0x022244B4 CBZ X8, 0x22245FC
	0x022244B8 LDRSW X10, [X21 + 0x18]
	0x022244BC LDR W11, [X8 + 0x18]
	0x022244C0 CMP W10, W11
	0x022244C4 B.CS 0x22244DC
	0x022244C8 ADD W9, W10, 0x1
	0x022244CC ADD X8, X8, X10, 0x3, LSL
	0x022244D0 STR W9, [X21 + 0x18]
	0x022244D4 STR X1, [X8 + 0x20]
	0x022244D8 B 0x2224428
	0x022244DC LDR X8, [X9 + 0x20]
	0x022244E0 LDR X8, [X8 + 0xC0]
	0x022244E4 LDR X2, [X8 + 0x70]
	0x022244E8 MOV X0, X21

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move [X31+8], W0
	009 Move X8, [X2+56]
	010 Move X19, X2
	011 Move W21, W1
	012 Compare X8, 0
	013 JumpIfNotEqual {17}
	014 Move X0, X19
	015 Call 0x1C5D6E0
	016 Move X8, [X19+56]
	017 Move X0, [X8]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Call 0x1C17F10
	025 Move X8, [X19+56]
	026 Move X20, X0
	027 Move X1, [X8+8]
	028 Call List`1<Object>..ctor, X0
	029 Add X0, X31, 8
	030 Move X1, X31
	031 Call Scene.GetRootGameObjects, X0
	032 Compare X0, 0
	033 JumpIfEqual {72}
	034 Move W8, [X0+24]
	035 Move X22, X0
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W23, W31
	038 And W21, W21, 1
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X8, X22, W23
	041 Move X0, [X8+32]
	042 Compare X0, 0
	043 JumpIfEqual {72}
	044 Move X8, [X19+56]
	045 Move W1, W21
	046 Move X2, [X8+16]
	047 Call 0x21E6F84, X0, X1
	048 Compare X20, 0
	049 JumpIfEqual {72}
	050 Move X8, [X19+56]
	051 Move X1, X0
	052 Move X0, X20
	053 Move X2, [X8+32]
	054 Call List`1<Object>.AddRange, X0, X1
	055 Move W8, [X22+24]
	056 Add W23, W23, 1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Compare X20, 0
	059 JumpIfEqual {72}
	060 Move X8, [X19+56]
	061 Move X0, X20
	062 Move X1, [X8+48]
	063 Call List`1<Object>.ToArray, X0
	064 Move X20, [X31+48]
	065 Move X19, [X31+56]
	066 Move X22, [X31+32]
	067 Move X21, [X31+40]
	068 Move X30, [X31+16]
	069 Move X23, [X31+24]
	070 Add X31, X31, 64
	071 Return X0
	072 Call 0x1C17F20
	073 Call 0x1C17F28

Method: System.Void FindObjectsOfTypeInOrder(UnityEngine.SceneManagement.Scene scene, System.Collections.Generic.List`1<T> list, System.Boolean includeInactive = False)

Disassembly:
	0x022246D8 BL 0x1C16F20
	0x022246DC MOV X0, X25
	0x022246E0 BL 0x1C16F18
	0x022246E4 BL 0x1C16F20
	0x022246E8 BL 0x1C16F20
	0x022246EC BL 0x1C16F20
	0x022246F0 BL 0x1C16F20
	0x022246F4 MOV X0, X20
	0x022246F8 BL 0x1C16F18
	0x022246FC BL 0x3EB1B20
	0x02224700 MOV X21, X1
	0x02224704 MOV X22, X0
	0x02224708 B 0x22246B4
	0x0222470C B 0x2224760
	0x02224710 B 0x2224760
	0x02224714 B 0x2224760
	0x02224718 B 0x2224760
	0x0222471C B 0x2224760
	0x02224720 B 0x2224760
	0x02224724 B 0x2224760
	0x02224728 B 0x2224760
	0x0222472C B 0x2224760
	0x02224730 B 0x2224760
	0x02224734 B 0x2224760
	0x02224738 B 0x2224760
	0x0222473C B 0x2224760
	0x02224740 B 0x2224760
	0x02224744 B 0x2224760
	0x02224748 B 0x2224760
	0x0222474C B 0x2224760
	0x02224750 B 0x2224760
	0x02224754 B 0x2224760
	0x02224758 B 0x2224760
	0x0222475C B 0x2224760
	0x02224760 CMP W1, 0x1
	0x02224764 B.NE 0x2224778
	0x02224768 BL 0x3EB1AD0
	0x0222476C LDR X20, [X0]
	0x02224770 BL 0x3EB1AE0
	0x02224774 B 0x2224634
	0x02224778 MOV X21, X0
	0x0222477C MOV X20, X31
	0x02224780 B 0x2224788
	0x02224784 MOV X21, X0
	0x02224788 LDUR X8, [X29 - 0x40]
	0x0222478C CBNZ X8, 0x2224794
	0x02224790 BL 0x1C16F20
	0x02224794 LDUR X9, [X29 - 0x40]
	0x02224798 LDP W2, W8, [X9 + 0x18]
	0x0222479C ADD W8, W8, 0x1
	0x022247A0 CMP W2, 0x1
	0x022247A4 STP W31, W8, [X9 + 0x18]
	0x022247A8 B.LT 0x22247C0
	0x022247AC LDUR X8, [X29 - 0x40]
	0x022247B0 LDR X0, [X8 + 0x10]
	0x022247B4 MOV W1, W31
	0x022247B8 MOV X3, X31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move [X31+8], W0
	009 Move X8, [X3+56]
	010 Move X19, X3
	011 Move W21, W2
	012 Move X20, X1
	013 Compare X8, 0
	014 JumpIfNotEqual {17}
	015 Move X0, X19
	016 Call 0x1C5D6E0
	017 Compare X20, 0
	018 JumpIfEqual {65}
	019 Move W2, [X20+24]
	020 Move W8, [X20+28]
	021 Add W8, W8, 1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move [X20+24], W31
	024 Move [X20+28], W8
	025 Move X0, [X20+16]
	026 Move W1, W31
	027 Move X3, X31
	028 Call Array.Clear, X0, X1, X2
	029 Add X0, X31, 8
	030 Move X1, X31
	031 Call Scene.GetRootGameObjects, X0
	032 Compare X0, 0
	033 JumpIfEqual {65}
	034 Move W8, [X0+24]
	035 Move X22, X0
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W23, W31
	038 And W21, W21, 1
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X8, X22, W23
	041 Move X0, [X8+32]
	042 Compare X0, 0
	043 JumpIfEqual {65}
	044 Move X8, [X19+56]
	045 Move W1, W21
	046 Move X2, [X8+16]
	047 Call 0x21E6F84, X0, X1
	048 Move X8, [X19+56]
	049 Move X1, X0
	050 Move X0, X20
	051 Move X2, [X8+32]
	052 Call List`1<Object>.AddRange, X0, X1
	053 Move W8, [X22+24]
	054 Add W23, W23, 1
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X20, [X31+48]
	057 Move X19, [X31+56]
	058 Move X22, [X31+32]
	059 Move X21, [X31+40]
	060 Move X30, [X31+16]
	061 Move X23, [X31+24]
	062 Add X31, X31, 64
	063 Return 
	064 Call 0x1C17F28
	065 Call 0x1C17F20

Method: TCast[] FindObjectsOfTypeInOrder(UnityEngine.SceneManagement.Scene scene, System.Boolean includeInactive = False)

Disassembly:
	0x022244EC BL 0x301BF90
	0x022244F0 B 0x2224428
	0x022244F4 MOV X25, X31
	0x022244F8 MOVZ W26, 0x7
	0x022244FC LDR X8, [X20 + 0x38]
	0x02224500 LDR X1, [X8 + 0x70]
	0x02224504 SUB X0, X29, 0x20
	0x02224508 BL 0x2BC434C
	0x0222450C CBNZ X25, 0x22246DC
	0x02224510 CMP W26, 0x7
	0x02224514 B.EQ 0x222451C
	0x02224518 CBNZ W26, 0x2224630
	0x0222451C MOV X0, X24
	0x02224520 MOV X1, X31
	0x02224524 BL 0x3C40C8C
	0x02224528 MOV W25, W0
	0x0222452C CMP W0, 0x1
	0x02224530 B.LT 0x2224384
	0x02224534 MOV W26, W31
	0x02224538 MOV X0, X24
	0x0222453C MOV W1, W26
	0x02224540 MOV X2, X31
	0x02224544 BL 0x3C410A0
	0x02224548 MOV X27, X0
	0x0222454C TBZ X22, 0x0, 0x2224558
	0x02224550 CBNZ X27, 0x2224578
	0x02224554 B 0x2224698
	0x02224558 CBZ X27, 0x22246A0
	0x0222455C MOV X0, X27
	0x02224560 MOV X1, X31
	0x02224564 BL 0x3C32ECC
	0x02224568 CBZ X0, 0x222469C
	0x0222456C MOV X1, X31
	0x02224570 BL 0x3C357F8
	0x02224574 TBZ X0, 0x0, 0x22245DC
	0x02224578 LDR X8, [X20 + 0x38]
	0x0222457C LDR X1, [X8 + 0x78]
	0x02224580 LDR X0, [X1]
	0x02224584 STUR X23, [X29 - 0x38]
	0x02224588 LDR X8, [X1 + 0x10]
	0x0222458C SUB X3, X29, 0x38
	0x02224590 MOV X2, X27
	0x02224594 MOV X4, X23
	0x02224598 BLR X8
	0x0222459C LDR X8, [X20 + 0x38]
	0x022245A0 LDR X0, [X8 + 0x80]
	0x022245A4 MOV X1, X23
	0x022245A8 BL 0x1C16ED4
	0x022245AC TBNZ X0, 0x0, 0x22245DC
	0x022245B0 LDR X0, [X28]
	0x022245B4 LDR W8, [X0 + 0xE0]
	0x022245B8 CBNZ W8, 0x22245C4
	0x022245BC BL 0x1C16DFC
	0x022245C0 LDR X0, [X28]
	0x022245C4 LDR X8, [X0 + 0xB8]
	0x022245C8 LDR X0, [X8]
	0x022245CC CBZ X0, 0x22246A4
	0x022245D0 LDR X2, [X19]
	0x022245D4 MOV X1, X27
	0x022245D8 BL 0x24F1750
	0x022245DC ADD W26, W26, 0x1
	0x022245E0 CMP W25, W26
	0x022245E4 B.NE 0x2224538
	0x022245E8 B 0x2224384
	0x022245EC MOV X0, X25
	0x022245F0 MOV X1, X26
	0x022245F4 BL 0x1C171E0
	0x022245F8 B 0x22246FC
	0x022245FC BL 0x1C16F20
	0x02224600 B 0x2224700
	0x02224604 B 0x2224614
	0x02224608 B 0x2224614
	0x0222460C B 0x2224614
	0x02224610 B 0x2224614
	0x02224614 CMP W1, 0x1
	0x02224618 B.NE 0x22246A8
	0x0222461C BL 0x3EB1AD0
	0x02224620 LDR X25, [X0]
	0x02224624 BL 0x3EB1AE0
	0x02224628 MOV W26, W31
	0x0222462C B 0x22244FC
	0x02224630 MOV X20, X31
	0x02224634 LDUR X9, [X29 - 0x40]
	0x02224638 CBZ X9, 0x22246F0
	0x0222463C LDP W2, W8, [X9 + 0x18]
	0x02224640 ADD W8, W8, 0x1
	0x02224644 CMP W2, 0x1
	0x02224648 STP W31, W8, [X9 + 0x18]
	0x0222464C B.LT 0x2224660
	0x02224650 LDR X0, [X9 + 0x10]
	0x02224654 MOV W1, W31
	0x02224658 MOV X3, X31
	0x0222465C BL 0x339FA34
	0x02224660 CBNZ X20, 0x22246F4
	0x02224664 LDUR X8, [X29 - 0x48]
	0x02224668 LDR X8, [X8 + 0x28]
	0x0222466C LDUR X9, [X29 - 0x8]
	0x02224670 CMP X8, X9
	0x02224674 B.NE 0x22246FC
	0x02224678 ADD X31, X29, 0x0
	0x0222467C LDP X20, X19, [X31 + 0x50]
	0x02224680 LDP X22, X21, [X31 + 0x40]
	0x02224684 LDP X24, X23, [X31 + 0x30]
	0x02224688 LDP X26, X25, [X31 + 0x20]
	0x0222468C LDP X28, X27, [X31 + 0x10]
	0x02224690 LDP X29, X30, [X31], #0x60
	0x02224694 RET
	0x02224698 BL 0x1C16F20
	0x0222469C BL 0x1C16F20
	0x022246A0 BL 0x1C16F20
	0x022246A4 BL 0x1C16F20
	0x022246A8 MOV X21, X1
	0x022246AC MOV X22, X0
	0x022246B0 MOV X25, X31
	0x022246B4 LDR X8, [X20 + 0x38]
	0x022246B8 LDR X1, [X8 + 0x70]
	0x022246BC SUB X0, X29, 0x20
	0x022246C0 BL 0x2BC434C
	0x022246C4 MOV X0, X22
	0x022246C8 MOV X1, X21
	0x022246CC CBZ X25, 0x2224760
	0x022246D0 MOV X0, X25
	0x022246D4 BL 0x1C16F18

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move [X31+8], W0
	013 Move X8, [X2+56]
	014 Move X19, X2
	015 Move W22, W1
	016 Compare X8, 0
	017 JumpIfNotEqual {21}
	018 Move X0, X19
	019 Call 0x1C5D6E0
	020 Move X8, [X19+56]
	021 Move X0, [X8]
	022 Move W8, [X0+309]
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {28}
	027 Call 0x1C5D684
	028 Call 0x1C17F10
	029 Move X8, [X19+56]
	030 Move X20, X0
	031 Move X1, [X8+8]
	032 Call List`1<Object>..ctor, X0
	033 Add X0, X31, 8
	034 Move X1, X31
	035 Call Scene.GetRootGameObjects, X0
	036 Compare X0, 0
	037 JumpIfEqual {139}
	038 Move W8, [X0+24]
	039 Move X21, X0
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W26, W31
	042 And W22, W22, 1
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Add X8, X21, W26
	045 Move X0, [X8+32]
	046 Compare X0, 0
	047 JumpIfEqual {139}
	048 Move X8, [X19+56]
	049 Move W1, W22
	050 Move X2, [X8+16]
	051 Call 0x21E6F84, X0, X1
	052 Compare X0, 0
	053 JumpIfEqual {139}
	054 Move X8, [X0+24]
	055 Move X23, X0
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X27, X31
	058 And X8, X8, 0
	059 Add X28, X23, 32
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X8, [X19+56]
	062 Move X24, [X28]
	063 Move X1, [X8+40]
	064 Move W8, [X1+309]
	065 Move TEMP, X8
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {72}
	069 Move X0, X1
	070 Call 0x1C5D684
	071 Move X1, X0
	072 Move X0, X24
	073 Call 0x1C17E00
	074 Move X8, [X19+56]
	075 Move X25, X0
	076 Move X24, [X8+40]
	077 Move W8, [X24+309]
	078 Move TEMP, X8
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {85}
	082 Move X0, X24
	083 Call 0x1C5D684
	084 Move X24, X0
	085 Compare X25, 0
	086 JumpIfEqual {115}
	087 Move X0, X25
	088 Move X1, X24
	089 Call 0x1C17E00
	090 Compare X0, 0
	091 JumpIfEqual {141}
	092 Compare X20, 0
	093 JumpIfEqual {139}
	094 Move X9, [X19+56]
	095 Move W10, [X20+28]
	096 Move X8, [X20+16]
	097 Move X9, [X9+48]
	098 Add W10, W10, 1
	099 Move [X20+28], W10
	100 Compare X8, 0
	101 JumpIfEqual {139}
	102 NotImplemented "Instruction LDRSW not yet implemented."
	103 Move W11, [X8+24]
	104 Move X1, X0
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Add W9, W10, 1
	107 Add X8, X8, X10
	108 Move [X20+24], W9
	109 Move [X8+32], X1
	110 Move X8, [X9+32]
	111 Move X0, X20
	112 Move X8, [X8+192]
	113 Move X2, [X8+112]
	114 Call List`1<Object>.AddWithResize, X0, X1
	115 Move W8, [X23+24]
	116 Add X27, X27, 1
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move W8, [X21+24]
	119 Add W26, W26, 1
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Compare X20, 0
	122 JumpIfEqual {139}
	123 Move X8, [X19+56]
	124 Move X0, X20
	125 Move X1, [X8+56]
	126 Call List`1<Object>.ToArray, X0
	127 Move X20, [X31+80]
	128 Move X19, [X31+88]
	129 Move X22, [X31+64]
	130 Move X21, [X31+72]
	131 Move X24, [X31+48]
	132 Move X23, [X31+56]
	133 Move X26, [X31+32]
	134 Move X25, [X31+40]
	135 Move X28, [X31+16]
	136 Move X27, [X31+24]
	137 Move X30, [X31+96]
	138 Return X0
	139 Call 0x1C17F20
	140 Call 0x1C17F28
	141 Move X0, X25
	142 Move X1, X24
	143 Call 0x1C181E0

Method: System.Void FindObjectsOfTypeInOrder(UnityEngine.SceneManagement.Scene scene, System.Collections.Generic.List`1<TCast> list, System.Boolean includeInactive = False)

Disassembly:
	0x022247BC BL 0x339FA34
	0x022247C0 CBNZ X20, 0x22247CC
	0x022247C4 MOV X0, X21
	0x022247C8 BL 0x1D2C690
	0x022247CC MOV X0, X20
	0x022247D0 BL 0x1C16F18
	0x022247D4 BL 0x1990590
	0x022247D8 SUB X31, X31, 0x80
	0x022247DC STP X29, X30, [X31 + 0x20]
	0x022247E0 STP X28, X27, [X31 + 0x30]
	0x022247E4 STP X26, X25, [X31 + 0x40]
	0x022247E8 STP X24, X23, [X31 + 0x50]
	0x022247EC STP X22, X21, [X31 + 0x60]
	0x022247F0 STP X20, X19, [X31 + 0x70]
	0x022247F4 LDR X8, [X4 + 0x38]
	0x022247F8 MOV X19, X4
	0x022247FC MOV X22, X3
	0x02224800 MOV W23, W2
	0x02224804 MOV X29, X1
	0x02224808 MOV X20, X0
	0x0222480C CBNZ X8, 0x222485C
	0x02224810 ADRP X0, 0x1ED9000
	0x02224814 LDR X0, [X0 + 0xB88]
	0x02224818 BL 0x1C16CF4
	0x0222481C ADRP X0, 0x1EF8000
	0x02224820 LDR X0, [X0 + 0x158]
	0x02224824 BL 0x1C16CF4
	0x02224828 ADRP X0, 0x1EF8000
	0x0222482C LDR X0, [X0 + 0x160]
	0x02224830 BL 0x1C16CF4
	0x02224834 ADRP X0, 0x1EF8000
	0x02224838 LDR X0, [X0 + 0x168]
	0x0222483C BL 0x1C16CF4
	0x02224840 ADRP X0, 0x1EF8000
	0x02224844 LDR X0, [X0 + 0x170]
	0x02224848 BL 0x1C16CF4
	0x0222484C LDR X8, [X19 + 0x38]
	0x02224850 CBNZ X8, 0x222485C
	0x02224854 MOV X0, X19
	0x02224858 BL 0x1C5C6E0
	0x0222485C ADRP X28, 0x1ED9000
	0x02224860 LDR X28, [X28 + 0xB88]
	0x02224864 STR X31, [X31 + 0x18]
	0x02224868 LDR X0, [X28]
	0x0222486C LDR W8, [X0 + 0xE0]
	0x02224870 CBNZ W8, 0x222487C
	0x02224874 BL 0x1C16DFC
	0x02224878 LDR X0, [X28]
	0x0222487C LDR X8, [X0 + 0xB8]
	0x02224880 LDR X0, [X8]
	0x02224884 CBZ X0, 0x2224BE4
	0x02224888 ADRP X8, 0x1EF8000
	0x0222488C LDR X8, [X8 + 0x158]
	0x02224890 LDR X1, [X8]
	0x02224894 BL 0x24F1410
	0x02224898 CBZ X20, 0x2224BE4
	0x0222489C LDR X8, [X19 + 0x38]
	0x022248A0 MOV X0, X20
	0x022248A4 MOV X1, X29
	0x022248A8 STR X19, [X31 + 0x10]
	0x022248AC LDR X2, [X8 + 0x8]
	0x022248B0 BL 0x21A443C
	0x022248B4 MOV X0, X20
	0x022248B8 MOV X1, X31
	0x022248BC BL 0x3C40C8C
	0x022248C0 CMP W0, 0x1
	0x022248C4 B.LT 0x22249A0
	0x022248C8 MOV W24, W0
	0x022248CC MOV W25, W31
	0x022248D0 ADD X19, X22, 0x20
	0x022248D4 MOV X0, X20
	0x022248D8 MOV W1, W25
	0x022248DC MOV X2, X31
	0x022248E0 BL 0x3C410A0
	0x022248E4 MOV X26, X0
	0x022248E8 TBNZ X23, 0x0, 0x222490C
	0x022248EC CBZ X26, 0x2224BE4
	0x022248F0 MOV X0, X26
	0x022248F4 MOV X1, X31
	0x022248F8 BL 0x3C32ECC
	0x022248FC CBZ X0, 0x2224BE4
	0x02224900 MOV X1, X31
	0x02224904 BL 0x3C357F8
	0x02224908 TBZ X0, 0x0, 0x2224994
	0x0222490C CBZ X22, 0x2224BE4
	0x02224910 LDR X8, [X22 + 0x18]
	0x02224914 CMP W8, 0x1
	0x02224918 B.LT 0x2224960
	0x0222491C AND X8, X8, 0x0
	0x02224920 CBZ X8, 0x2224BF0
	0x02224924 MOV X21, X31
	0x02224928 SUB X27, X8, 0x1
	0x0222492C CBZ X26, 0x2224BE4
	0x02224930 LDR X1, [X19, X21, LSL #3]
	0x02224934 ADD X2, X31, 0x18
	0x02224938 MOV X0, X26
	0x0222493C MOV X3, X31
	0x02224940 BL 0x3C33018
	0x02224944 CMP X27, X21
	0x02224948 B.EQ 0x2224960
	0x0222494C LDR W8, [X22 + 0x18]
	0x02224950 ADD X21, X21, 0x1
	0x02224954 CMP X21, X8
	0x02224958 B.CC 0x222492C
	0x0222495C B 0x2224BF0
	0x02224960 LDR X0, [X28]
	0x02224964 LDR W8, [X0 + 0xE0]
	0x02224968 CBNZ W8, 0x2224974
	0x0222496C BL 0x1C16DFC
	0x02224970 LDR X0, [X28]
	0x02224974 LDR X8, [X0 + 0xB8]
	0x02224978 LDR X0, [X8]
	0x0222497C CBZ X0, 0x2224BE4
	0x02224980 ADRP X8, 0x1EF8000
	0x02224984 LDR X8, [X8 + 0x168]
	0x02224988 MOV X1, X26
	0x0222498C LDR X2, [X8]
	0x02224990 BL 0x24F1750

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move [X31+8], W0
	013 Move X8, [X3+56]
	014 Move X19, X3
	015 Move W22, W2
	016 Move X20, X1
	017 Compare X8, 0
	018 JumpIfNotEqual {21}
	019 Move X0, X19
	020 Call 0x1C5D6E0
	021 Compare X20, 0
	022 JumpIfEqual {132}
	023 Move W2, [X20+24]
	024 Move W8, [X20+28]
	025 Add W8, W8, 1
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move [X20+24], W31
	028 Move [X20+28], W8
	029 Move X0, [X20+16]
	030 Move W1, W31
	031 Move X3, X31
	032 Call Array.Clear, X0, X1, X2
	033 Add X0, X31, 8
	034 Move X1, X31
	035 Call Scene.GetRootGameObjects, X0
	036 Compare X0, 0
	037 JumpIfEqual {132}
	038 Move W8, [X0+24]
	039 Move X21, X0
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W26, W31
	042 And W22, W22, 1
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Add X8, X21, W26
	045 Move X0, [X8+32]
	046 Compare X0, 0
	047 JumpIfEqual {132}
	048 Move X8, [X19+56]
	049 Move W1, W22
	050 Move X2, [X8+16]
	051 Call 0x21E6F84, X0, X1
	052 Compare X0, 0
	053 JumpIfEqual {132}
	054 Move X8, [X0+24]
	055 Move X23, X0
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X27, X31
	058 And X8, X8, 0
	059 Add X28, X23, 32
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X8, [X19+56]
	062 Move X24, [X28]
	063 Move X1, [X8+40]
	064 Move W8, [X1+309]
	065 Move TEMP, X8
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {72}
	069 Move X0, X1
	070 Call 0x1C5D684
	071 Move X1, X0
	072 Move X0, X24
	073 Call 0x1C17E00
	074 Move X8, [X19+56]
	075 Move X25, X0
	076 Move X24, [X8+40]
	077 Move W8, [X24+309]
	078 Move TEMP, X8
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {85}
	082 Move X0, X24
	083 Call 0x1C5D684
	084 Move X24, X0
	085 Compare X25, 0
	086 JumpIfEqual {113}
	087 Move X0, X25
	088 Move X1, X24
	089 Call 0x1C17E00
	090 Compare X0, 0
	091 JumpIfEqual {133}
	092 Move X9, [X19+56]
	093 Move W10, [X20+28]
	094 Move X8, [X20+16]
	095 Move X9, [X9+48]
	096 Add W10, W10, 1
	097 Move [X20+28], W10
	098 Compare X8, 0
	099 JumpIfEqual {132}
	100 NotImplemented "Instruction LDRSW not yet implemented."
	101 Move W11, [X8+24]
	102 Move X1, X0
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Add W9, W10, 1
	105 Add X8, X8, X10
	106 Move [X20+24], W9
	107 Move [X8+32], X1
	108 Move X8, [X9+32]
	109 Move X0, X20
	110 Move X8, [X8+192]
	111 Move X2, [X8+112]
	112 Call List`1<Object>.AddWithResize, X0, X1
	113 Move W8, [X23+24]
	114 Add X27, X27, 1
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move W8, [X21+24]
	117 Add W26, W26, 1
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X20, [X31+80]
	120 Move X19, [X31+88]
	121 Move X22, [X31+64]
	122 Move X21, [X31+72]
	123 Move X24, [X31+48]
	124 Move X23, [X31+56]
	125 Move X26, [X31+32]
	126 Move X25, [X31+40]
	127 Move X28, [X31+16]
	128 Move X27, [X31+24]
	129 Move X30, [X31+96]
	130 Return 
	131 Call 0x1C17F28
	132 Call 0x1C17F20
	133 Move X0, X25
	134 Move X1, X24
	135 Call 0x1C181E0

Method: System.Void .cctor()

Disassembly:
	0x01E7F1E0 RET
	0x01E7F1E4 BL 0x1C16F20
	0x01E7F1E8 BL 0x1C16F28
	0x01E7F1EC BL 0x1C16F20
	0x01E7F1F0 BL 0x1C16F20
	0x01E7F1F4 BL 0x1C16F20
	0x01E7F1F8 MOV X0, X21
	0x01E7F1FC BL 0x1C16F18
	0x01E7F200 B 0x1E7F210
	0x01E7F204 B 0x1E7F210
	0x01E7F208 B 0x1E7F210
	0x01E7F20C B 0x1E7F210
	0x01E7F210 CMP W1, 0x1
	0x01E7F214 B.NE 0x1E7F228
	0x01E7F218 BL 0x3EB1AD0
	0x01E7F21C LDR X21, [X0]
	0x01E7F220 BL 0x3EB1AE0
	0x01E7F224 B 0x1E7F15C
	0x01E7F228 MOV X19, X0
	0x01E7F22C MOV X21, X31
	0x01E7F230 B 0x1E7F238
	0x01E7F234 MOV X19, X0
	0x01E7F238 CBZ X20, 0x1E7F29C
	0x01E7F23C LDR X8, [X20]
	0x01E7F240 ADRP X10, 0x2274000
	0x01E7F244 LDRH W9, [X8 + 0x12E]
	0x01E7F248 LDR X10, [X10 + 0xE00]
	0x01E7F24C LDR X1, [X10]
	0x01E7F250 CBZ X9, 0x1E7F274
	0x01E7F254 LDR X10, [X8 + 0xB0]
	0x01E7F258 ADD X10, X10, 0x8
	0x01E7F25C LDUR X11, [X10 - 0x8]
	0x01E7F260 CMP X11, X1
	0x01E7F264 B.EQ 0x1E7F284
	0x01E7F268 SUBS X9, X9, 0x1
	0x01E7F26C ADD X10, X10, 0x10
	0x01E7F270 B.NE 0x1E7F25C
	0x01E7F274 MOV X0, X20
	0x01E7F278 MOV W2, W31
	0x01E7F27C BL 0x1C5C788
	0x01E7F280 B 0x1E7F290
	0x01E7F284 LDRSW X9, [X10]
	0x01E7F288 ADD X8, X8, X9, 0x4, LSL
	0x01E7F28C ADD X0, X8, 0x138
	0x01E7F290 LDP X8, X1, [X0]
	0x01E7F294 MOV X0, X20
	0x01E7F298 BLR X8
	0x01E7F29C CBNZ X21, 0x1E7F2A8
	0x01E7F2A0 MOV X0, X19
	0x01E7F2A4 BL 0x1D2C690
	0x01E7F2A8 MOV X0, X21
	0x01E7F2AC BL 0x1C16F18
	0x01E7F2B0 BL 0x1990590
	0x01E7F2B4 MOV X1, X31
	0x01E7F2B8 B 0x33BDD8C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x255B000
	009 Move X24, 0x227F000
	010 Move X19, 0x227F000
	011 Move X20, 0x227F000
	012 Move X22, 0x227F000
	013 Move X21, 0x227F000
	014 Move W8, [X23+452]
	015 Move X24, [X24+2936]
	016 Move X19, [X19+2944]
	017 Move X20, [X20+2952]
	018 Move X22, [X22+2960]
	019 Move X21, [X21+2968]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0x227F000
	025 Move X0, [X0+2952]
	026 Call 0x1C17CF4
	027 Move X0, 0x227F000
	028 Move X0, [X0+2944]
	029 Call 0x1C17CF4
	030 Move X0, 0x227F000
	031 Move X0, [X0+2936]
	032 Call 0x1C17CF4
	033 Move X0, 0x227F000
	034 Move X0, [X0+2968]
	035 Call 0x1C17CF4
	036 Move X0, 0x227F000
	037 Move X0, [X0+2960]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X23+452], W8
	041 Move X0, [X24]
	042 Call 0x1C17F10
	043 Move X1, [X19]
	044 Move X19, X0
	045 Call Queue`1<Object>..ctor, X0
	046 Move X8, [X20]
	047 Move X8, [X8+184]
	048 Move [X8], X19
	049 Move X0, [X22]
	050 Call 0x1C17F10
	051 Move X1, [X21]
	052 Move X19, X0
	053 Call Stack`1<Object>..ctor, X0
	054 Move X8, [X20]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X24, [X31+16]
	058 Move X23, [X31+24]
	059 Move X8, [X8+184]
	060 Move [X8+8], X19
	061 Move X20, [X31+48]
	062 Move X19, [X31+56]
	063 Move X30, [X31+64]
	064 Return 

