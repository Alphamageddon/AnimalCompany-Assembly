Type: Fusion.NetworkBehaviourUtils

Method: System.Void ResetStatics()

Disassembly:
	0x01E77D1C BL 0x1C16CF4
	0x01E77D20 MOVZ W8, 0x1
	0x01E77D24 STRB W8, [X27 + 0x18C]
	0x01E77D28 LDR X0, [X28]
	0x01E77D2C BL 0x1C16F10
	0x01E77D30 LDR X1, [X19]
	0x01E77D34 MOV X19, X0
	0x01E77D38 BL 0x2A9E704
	0x01E77D3C LDR X8, [X20]
	0x01E77D40 LDR X8, [X8 + 0xB8]
	0x01E77D44 STR X19, [X8]
	0x01E77D48 LDR X0, [X26]
	0x01E77D4C BL 0x1C16F10
	0x01E77D50 LDR X1, [X25]
	0x01E77D54 MOV X19, X0
	0x01E77D58 BL 0x2AA4804
	0x01E77D5C LDR X8, [X20]
	0x01E77D60 LDR X8, [X8 + 0xB8]
	0x01E77D64 STR X19, [X8 + 0x8]
	0x01E77D68 LDR X0, [X24]
	0x01E77D6C BL 0x1C16F10
	0x01E77D70 LDR X1, [X23]
	0x01E77D74 MOV X19, X0
	0x01E77D78 BL 0x25F0B58
	0x01E77D7C LDR X8, [X20]
	0x01E77D80 LDR X8, [X8 + 0xB8]
	0x01E77D84 STR X19, [X8 + 0x10]
	0x01E77D88 LDR X0, [X22]
	0x01E77D8C BL 0x1C16F10
	0x01E77D90 LDR X1, [X21]
	0x01E77D94 MOV X19, X0
	0x01E77D98 BL 0x2AD6B34
	0x01E77D9C LDR X8, [X20]
	0x01E77DA0 LDP X22, X21, [X31 + 0x40]
	0x01E77DA4 LDP X24, X23, [X31 + 0x30]
	0x01E77DA8 LDP X26, X25, [X31 + 0x20]
	0x01E77DAC LDR X8, [X8 + 0xB8]
	0x01E77DB0 LDP X28, X27, [X31 + 0x10]
	0x01E77DB4 STR X19, [X8 + 0x18]
	0x01E77DB8 LDP X20, X19, [X31 + 0x50]
	0x01E77DBC STRB W31, [X8 + 0x20]
	0x01E77DC0 LDR X30, [X31], #0x60
	0x01E77DC4 RET
	0x01E77DC8 STR X30, [X31 - 0x20]!
	0x01E77DCC STP X20, X19, [X31 + 0x10]
	0x01E77DD0 ADRP X19, 0x2562000
	0x01E77DD4 ADRP X20, 0x2286000
	0x01E77DD8 LDRB W8, [X19 + 0x18D]
	0x01E77DDC LDR X20, [X20 + 0x7A8]
	0x01E77DE0 TBNZ X8, 0x0, 0x1E77DF8
	0x01E77DE4 ADRP X0, 0x2286000
	0x01E77DE8 LDR X0, [X0 + 0x7A8]
	0x01E77DEC BL 0x1C16CF4
	0x01E77DF0 MOVZ W8, 0x1
	0x01E77DF4 STRB W8, [X19 + 0x18D]
	0x01E77DF8 LDR X0, [X20]
	0x01E77DFC BL 0x1C16F10
	0x01E77E00 MOV X1, X31
	0x01E77E04 MOV X19, X0
	0x01E77E08 BL 0x33BDD8C
	0x01E77E0C LDR X8, [X20]
	0x01E77E10 LDR X8, [X8 + 0xB8]
	0x01E77E14 STR X19, [X8]
	0x01E77E18 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2563000
	005 Move X19, 0x2280000
	006 Move W8, [X20+386]
	007 Move X19, [X19+2680]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {29}
	012 Move X0, 0x2287000
	013 Move X0, [X0+1744]
	014 Call 0x1C17CF4
	015 Move X0, 0x2287000
	016 Move X0, [X0+1752]
	017 Call 0x1C17CF4
	018 Move X0, 0x2287000
	019 Move X0, [X0+1760]
	020 Call 0x1C17CF4
	021 Move X0, 0x2280000
	022 Move X0, [X0+2680]
	023 Call 0x1C17CF4
	024 Move X0, 0x2287000
	025 Move X0, [X0+1768]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+386], W8
	029 Move X0, [X19]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1C17DFC
	034 Move X0, [X19]
	035 Move X8, [X0+184]
	036 Move X0, [X8+24]
	037 Move [X8+32], W31
	038 Compare X0, 0
	039 JumpIfEqual {75}
	040 Move X8, 0x2287000
	041 Move X8, [X8+1744]
	042 Move X1, [X8]
	043 Call Dictionary`2<Object, MetaData>.Clear, X0
	044 Move X8, [X19]
	045 Move X8, [X8+184]
	046 Move X0, [X8]
	047 Compare X0, 0
	048 JumpIfEqual {75}
	049 Move X8, 0x2287000
	050 Move X8, [X8+1752]
	051 Move X1, [X8]
	052 Call Dictionary`2<Object, Int32>.Clear, X0
	053 Move X8, [X19]
	054 Move X8, [X8+184]
	055 Move X0, [X8+8]
	056 Compare X0, 0
	057 JumpIfEqual {75}
	058 Move X8, 0x2287000
	059 Move X8, [X8+1760]
	060 Move X1, [X8]
	061 Call Dictionary`2<Object, Object>.Clear, X0
	062 Move X8, [X19]
	063 Move X8, [X8+184]
	064 Move X0, [X8+16]
	065 Compare X0, 0
	066 JumpIfEqual {75}
	067 Move X8, 0x2287000
	068 Move X8, [X8+1768]
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X1, [X8]
	072 Move X30, [X31+32]
	073 Call SortedList`2<Object, Object>.Clear, X0
	074 Return 
	075 Call 0x1C17F20

Method: Fusion.NetworkBehaviourUtils/MetaData GetMetaData(System.Type type)

Disassembly:
	0x01E77E1C LDR X30, [X31], #0x20
	0x01E77E20 RET
	0x01E77E24 MOV X1, X31
	0x01E77E28 B 0x33BDD8C
	0x01E77E2C LDR W8, [X2]
	0x01E77E30 MOV X0, X1
	0x01E77E34 MOV X2, X31
	0x01E77E38 MOV W1, W8
	0x01E77E3C B 0x337B634
	0x01E77E40 STR X30, [X31 - 0x30]!
	0x01E77E44 STP X22, X21, [X31 + 0x10]
	0x01E77E48 STP X20, X19, [X31 + 0x20]
	0x01E77E4C ADRP X20, 0x2562000
	0x01E77E50 ADRP X21, 0x227C000
	0x01E77E54 LDRB W8, [X20 + 0x18E]
	0x01E77E58 LDR X21, [X21 + 0x970]
	0x01E77E5C MOV X19, X0
	0x01E77E60 TBNZ X8, 0x0, 0x1E77E90
	0x01E77E64 ADRP X0, 0x227C000
	0x01E77E68 LDR X0, [X0 + 0x970]
	0x01E77E6C BL 0x1C16CF4
	0x01E77E70 ADRP X0, 0x227C000
	0x01E77E74 LDR X0, [X0 + 0x5A8]
	0x01E77E78 BL 0x1C16CF4
	0x01E77E7C ADRP X0, 0x227D000
	0x01E77E80 LDR X0, [X0 + 0x470]
	0x01E77E84 BL 0x1C16CF4
	0x01E77E88 MOVZ W8, 0x1
	0x01E77E8C STRB W8, [X20 + 0x18E]
	0x01E77E90 LDR X0, [X21]
	0x01E77E94 LDR W8, [X0 + 0xE0]
	0x01E77E98 CBNZ W8, 0x1E77EA0
	0x01E77E9C BL 0x1C16DFC
	0x01E77EA0 MOV X0, X31
	0x01E77EA4 BL 0x3C018E4
	0x01E77EA8 TBZ X0, 0x0, 0x1E77F1C
	0x01E77EAC ADRP X21, 0x227C000
	0x01E77EB0 ADRP X22, 0x227D000
	0x01E77EB4 LDR W20, [X19 + 0x88]
	0x01E77EB8 LDR X21, [X21 + 0x5A8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2563000
	007 Move X20, 0x2280000
	008 Move W8, [X21+387]
	009 Move X20, [X20+2680]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x2287000
	016 Move X0, [X0+1776]
	017 Call 0x1C17CF4
	018 Move X0, 0x2280000
	019 Move X0, [X0+2680]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+387], W8
	023 Move X0, [X20]
	024 Move [X31+8], W31
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X20]
	030 Move X8, [X0+184]
	031 Move X0, [X8+24]
	032 Compare X0, 0
	033 JumpIfEqual {49}
	034 Move X8, 0x2287000
	035 Move X8, [X8+1776]
	036 Add X2, X31, 8
	037 Move X1, X19
	038 Move X3, [X8]
	039 Call Dictionary`2<Object, MetaData>.TryGetValue, X0, X1, X2
	040 Move W8, [X31+8]
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+16]
	044 Move X21, [X31+24]
	045 And W31, W0, 1
	046 NotImplemented "Instruction CSEL not yet implemented."
	047 Add X31, X31, 48
	048 Return X0
	049 Call 0x1C17F20

Method: System.Void RegisterMetaData(System.Type type)

Disassembly:
	0x01E77EBC LDR X22, [X22 + 0x470]
	0x01E77EC0 MOV X0, X19
	0x01E77EC4 BL 0x1E77F64
	0x01E77EC8 LDR X8, [X21]
	0x01E77ECC MOV W21, W0
	0x01E77ED0 LDR W9, [X8 + 0xE0]
	0x01E77ED4 CBNZ W9, 0x1E77EE0
	0x01E77ED8 MOV X0, X8
	0x01E77EDC BL 0x1C16DFC
	0x01E77EE0 MOV W0, W20
	0x01E77EE4 MOV W1, W21
	0x01E77EE8 MOV X2, X31
	0x01E77EEC BL 0x337EDF0
	0x01E77EF0 STR W0, [X19 + 0x88]
	0x01E77EF4 LDR X2, [X22]
	0x01E77EF8 MOV W1, W0
	0x01E77EFC ADD X0, X31, 0x8
	0x01E77F00 STR X31, [X31 + 0x8]
	0x01E77F04 BL 0x24341FC
	0x01E77F08 LDR X0, [X31 + 0x8]
	0x01E77F0C LDP X20, X19, [X31 + 0x20]
	0x01E77F10 LDP X22, X21, [X31 + 0x10]
	0x01E77F14 LDR X30, [X31], #0x30
	0x01E77F18 RET
	0x01E77F1C ADRP X0, 0x227C000
	0x01E77F20 LDR X0, [X0 + 0x5B0]
	0x01E77F24 BL 0x1C16D08
	0x01E77F28 BL 0x1C16F10
	0x01E77F2C MOV X19, X0
	0x01E77F30 ADRP X0, 0x2286000
	0x01E77F34 LDR X0, [X0 + 0x840]
	0x01E77F38 BL 0x1C16D08
	0x01E77F3C MOV X1, X0
	0x01E77F40 MOV X0, X19
	0x01E77F44 MOV X2, X31
	0x01E77F48 BL 0x337DF1C
	0x01E77F4C ADRP X0, 0x2286000
	0x01E77F50 LDR X0, [X0 + 0x848]
	0x01E77F54 BL 0x1C16D08
	0x01E77F58 MOV X1, X0
	0x01E77F5C MOV X0, X19
	0x01E77F60 BL 0x1C16DEC
	0x01E77F64 STR X30, [X31 - 0x50]!
	0x01E77F68 STP X26, X25, [X31 + 0x10]
	0x01E77F6C STP X24, X23, [X31 + 0x20]
	0x01E77F70 STP X22, X21, [X31 + 0x30]
	0x01E77F74 STP X20, X19, [X31 + 0x40]
	0x01E77F78 ADRP X21, 0x2562000
	0x01E77F7C ADRP X20, 0x227C000
	0x01E77F80 LDRB W8, [X21 + 0x18F]
	0x01E77F84 LDR X20, [X20 + 0x598]
	0x01E77F88 MOV X19, X0
	0x01E77F8C TBNZ X8, 0x0, 0x1E77FB0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2563000
	006 Move X20, 0x2280000
	007 Move W8, [X21+388]
	008 Move X20, [X20+2680]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x2287000
	015 Move X0, [X0+1784]
	016 Call 0x1C17CF4
	017 Move X0, 0x2287000
	018 Move X0, [X0+1792]
	019 Call 0x1C17CF4
	020 Move X0, 0x2280000
	021 Move X0, [X0+2680]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+388], W8
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X20]
	031 Move X8, [X0+184]
	032 Move X0, [X8+24]
	033 Compare X0, 0
	034 JumpIfEqual {70}
	035 Move X8, 0x2287000
	036 Move X8, [X8+1792]
	037 Move X1, X19
	038 Move X2, [X8]
	039 Call Dictionary`2<Object, MetaData>.ContainsKey, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {49}
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return 
	049 Move X0, [X20]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {55}
	053 Call 0x1C17DFC
	054 Move X0, [X20]
	055 Move X8, [X0+184]
	056 Move X0, [X8+24]
	057 Compare X0, 0
	058 JumpIfEqual {70}
	059 Move X8, 0x2287000
	060 Move X8, [X8+1784]
	061 Move X1, X19
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X2, X31
	065 Move X3, [X8]
	066 Move X30, [X31+32]
	067 Move X21, [X31+40]
	068 Call Dictionary`2<Object, MetaData>.Add, X0, X1, X2
	069 Return 
	070 Call 0x1C17F20

Method: System.Int32 GetWordCount(Fusion.NetworkBehaviour behaviour)

Disassembly:
	0x01E77F90 ADRP X0, 0x227D000
	0x01E77F94 LDR X0, [X0 + 0xE58]
	0x01E77F98 BL 0x1C16CF4
	0x01E77F9C ADRP X0, 0x227C000
	0x01E77FA0 LDR X0, [X0 + 0x598]
	0x01E77FA4 BL 0x1C16CF4
	0x01E77FA8 MOVZ W8, 0x1
	0x01E77FAC STRB W8, [X21 + 0x18F]
	0x01E77FB0 LDR X0, [X20]
	0x01E77FB4 LDR X20, [X19 + 0x80]
	0x01E77FB8 LDR W8, [X0 + 0xE0]
	0x01E77FBC CBNZ W8, 0x1E77FC4
	0x01E77FC0 BL 0x1C16DFC
	0x01E77FC4 MOV X0, X20
	0x01E77FC8 MOV X1, X31
	0x01E77FCC MOV X2, X31
	0x01E77FD0 BL 0x3C3883C
	0x01E77FD4 TBZ X0, 0x0, 0x1E77FE0
	0x01E77FD8 MOV W0, W31
	0x01E77FDC B 0x1E781EC
	0x01E77FE0 LDR X0, [X19 + 0x80]
	0x01E77FE4 LDR W21, [X19 + 0x90]
	0x01E77FE8 STR X31, [X19 + 0xB8]
	0x01E77FEC CBZ X0, 0x1E78204
	0x01E77FF0 MOV X1, X31
	0x01E77FF4 BL 0x3BF6790
	0x01E77FF8 LDR X8, [X19 + 0x80]
	0x01E77FFC STR X0, [X19 + 0xD8]
	0x01E78000 CBZ X8, 0x1E78204
	0x01E78004 MOV X0, X8
	0x01E78008 MOV X1, X31
	0x01E7800C BL 0x3BF67CC
	0x01E78010 STR W0, [X19 + 0xE8]
	0x01E78014 ADRP X22, 0x227C000
	0x01E78018 LDR X22, [X22 + 0xE58]
	0x01E7801C MOV W1, W0
	0x01E78020 LDR X0, [X22]
	0x01E78024 BL 0x1C16D6C
	0x01E78028 LDR X8, [X19 + 0x80]
	0x01E7802C STR X0, [X19 + 0xE0]
	0x01E78030 CBZ X8, 0x1E78204
	0x01E78034 MOV X0, X8
	0x01E78038 MOV X1, X31
	0x01E7803C BL 0x3BF6558
	0x01E78040 LDR X8, [X19 + 0xD8]
	0x01E78044 STR W0, [X19 + 0xEC]
	0x01E78048 CBZ X8, 0x1E78204
	0x01E7804C LDR W9, [X8 + 0x18]
	0x01E78050 SUBS W23, W9, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2563000
	005 Move W8, [X20+389]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x2280000
	012 Move X0, [X0+2680]
	013 Call 0x1C17CF4
	014 Move X0, 0x2280000
	015 Move X0, [X0+3832]
	016 Call 0x1C17CF4
	017 Move X0, 0x2280000
	018 Move X0, [X0+3840]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+389], W8
	022 Move [X31+8], X31
	023 Compare X19, 0
	024 JumpIfEqual {55}
	025 Move X8, [X19]
	026 Move X0, X19
	027 Move X9, [X8+488]
	028 Move X1, [X8+496]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 And W31, W0, 255
	031 Move [X31+8], X0
	032 Move X8, 0x2280000
	033 Move X8, [X8+3840]
	034 Add X0, X31, 8
	035 Move X1, [X8]
	036 Call Nullable`1<Int32>.get_Value, X0
	037 Move X0, X19
	038 Move X1, X31
	039 Call "il2cpp_vm_object_is_inst", X0
	040 Move X8, 0x227F000
	041 Move X8, [X8+2680]
	042 Move X19, X0
	043 Move X8, [X8]
	044 Move W9, [X8+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move X0, X19
	050 Call NetworkBehaviourUtils.GetStaticWordCount, X0
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Return X0
	055 Call 0x1C17F20

Method: System.Boolean HasStaticWordCount(System.Type type)

Disassembly:
	0x01E78150 B 0x1E78204
	0x01E78154 TBNZ X21, 0x5, 0x1E78160
	0x01E78158 MOVZ W20, 0x1
	0x01E7815C B 0x1E78174
	0x01E78160 LDR X0, [X19 + 0x80]
	0x01E78164 CBZ X0, 0x1E78204
	0x01E78168 MOV X1, X31
	0x01E7816C BL 0x3BF6558
	0x01E78170 MOV W20, W0
	0x01E78174 LDR W23, [X19 + 0xB8]

ISIL:
	001 Move [X31-16], X30
	002 Move X1, X31
	003 Call ReflectionUtils.GetWeavedAttributeOrThrow, X0
	004 Compare X0, 0
	005 JumpIfEqual {13}
	006 Move W8, [X0+16]
	007 NotImplemented "Instruction ORN not yet implemented."
	008 Move W0, W8
	009 ShiftRight W0, 31
	010 And W0, W0, 0x7FFFFFFF
	011 Move X30, [X31+16]
	012 Return X0
	013 Call 0x1C17F20

Method: System.Int32 GetStaticWordCount(System.Type type)

Disassembly:
	0x01E78054 B.LT 0x1E78154
	0x01E78058 ADRP X24, 0xFFFFFFFFFECB5000
	0x01E7805C MOV W9, W31
	0x01E78060 ADD X24, X24, 0xB48
	0x01E78064 LDR W10, [X8 + 0x18]
	0x01E78068 CMP W9, W10
	0x01E7806C B.CS 0x1E78208
	0x01E78070 SXTW X25, W9
	0x01E78074 ADD X8, X8, X25, 0x3, LSL
	0x01E78078 LDR X20, [X8 + 0x20]
	0x01E7807C CBZ X20, 0x1E78204
	0x01E78080 LDR X26, [X19 + 0xE0]
	0x01E78084 MOV X0, X20
	0x01E78088 MOV X1, X31
	0x01E7808C BL 0x3BF68F4
	0x01E78090 CBZ X26, 0x1E78204
	0x01E78094 LDR W8, [X26 + 0x18]
	0x01E78098 CMP W25, W8
	0x01E7809C B.CS 0x1E78208
	0x01E780A0 ADD X8, X26, X25, 0x2, LSL
	0x01E780A4 STR W0, [X8 + 0x20]
	0x01E780A8 MOV X0, X20
	0x01E780AC MOV X1, X31
	0x01E780B0 BL 0x3BF6930
	0x01E780B4 SUB W8, W0, 0x1
	0x01E780B8 CMP W8, 0x3
	0x01E780BC B.HI 0x1E78108
	0x01E780C0 ADR X9, 0x10
	0x01E780C4 LDRB W10, [X24, X8, LSL]
	0x01E780C8 ADD X9, X9, X10, 0x2, LSL
	0x01E780CC BR X9
	0x01E780D0 TBZ X21, 0x1, 0x1E7813C
	0x01E780D4 LDR X8, [X19 + 0xE0]
	0x01E780D8 CBZ X8, 0x1E78204
	0x01E780DC LDR W9, [X8 + 0x18]
	0x01E780E0 CMP W25, W9
	0x01E780E4 B.CS 0x1E78208
	0x01E780E8 LDR X0, [X19 + 0x80]
	0x01E780EC CBZ X0, 0x1E78204
	0x01E780F0 ADD X8, X8, X25, 0x2, LSL
	0x01E780F4 LDR W1, [X8 + 0x20]
	0x01E780F8 MOV X2, X31
	0x01E780FC BL 0x3BF64D0
	0x01E78100 TBZ X0, 0x0, 0x1E7811C
	0x01E78104 B 0x1E7813C
	0x01E78108 TBZ X21, 0x3, 0x1E7813C
	0x01E7810C CMP W0, 0x9
	0x01E78110 B.EQ 0x1E78130
	0x01E78114 B 0x1E7813C
	0x01E78118 TBZ X21, 0x0, 0x1E7813C
	0x01E7811C LDR W8, [X19 + 0xB8]
	0x01E78120 ADD W8, W8, 0x1
	0x01E78124 STR W8, [X19 + 0xB8]
	0x01E78128 B 0x1E7813C
	0x01E7812C TBZ X21, 0x2, 0x1E7813C
	0x01E78130 LDR W8, [X19 + 0xBC]
	0x01E78134 ADD W8, W8, 0x1
	0x01E78138 STR W8, [X19 + 0xBC]
	0x01E7813C CMP W23, W25
	0x01E78140 B.EQ 0x1E78154
	0x01E78144 LDR X8, [X19 + 0xD8]
	0x01E78148 ADD W9, W25, 0x1
	0x01E7814C CBNZ X8, 0x1E78064

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2562000
	007 Move X21, 0x227F000
	008 Move W8, [X20+390]
	009 Move X21, [X21+2680]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x2286000
	016 Move X0, [X0+1800]
	017 Call 0x1C17CF4
	018 Move X0, 0x2286000
	019 Move X0, [X0+1808]
	020 Call 0x1C17CF4
	021 Move X0, 0x227F000
	022 Move X0, [X0+2680]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+390], W8
	026 Move X0, [X21]
	027 Move [X31+12], W31
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X21]
	033 Move X8, [X0+184]
	034 Move X0, [X8]
	035 Compare X0, 0
	036 JumpIfEqual {78}
	037 Move X8, 0x2286000
	038 Move X8, [X8+1808]
	039 Add X2, X31, 12
	040 Move X1, X19
	041 Move X3, [X8]
	042 Call Dictionary`2<Object, Int32>.TryGetValue, X0, X1, X2
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {71}
	047 Move X0, X19
	048 Move X1, X31
	049 Call ReflectionUtils.GetWeavedAttributeOrThrow, X0
	050 Move X8, [X21]
	051 Move X20, X0
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {58}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 Move X8, [X21]
	058 Compare X20, 0
	059 JumpIfEqual {78}
	060 Move X8, [X8+184]
	061 Move W2, [X20+16]
	062 Move X0, [X8]
	063 Move [X31+12], W2
	064 Compare X0, 0
	065 JumpIfEqual {78}
	066 Move X8, 0x2286000
	067 Move X8, [X8+1800]
	068 Move X1, X19
	069 Move X3, [X8]
	070 Call Dictionary`2<Object, Int32>.Add, X0, X1, X2
	071 Move W0, [X31+12]
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X30, [X31+16]
	075 Move X21, [X31+24]
	076 Add X31, X31, 48
	077 Return X0
	078 Call 0x1C17F20

Method: System.Boolean ShouldRegisterRpcInvokeDelegates(System.Type type)

Disassembly:
	0x01E78178 STR W20, [X19 + 0xC8]
	0x01E7817C TBZ X21, 0x6, 0x1E781B0
	0x01E78180 LDR X0, [X19 + 0x80]
	0x01E78184 CBZ X0, 0x1E78204
	0x01E78188 MOV X1, X31
	0x01E7818C BL 0x3BF6558
	0x01E78190 CMP W0, 0x1
	0x01E78194 B.LT 0x1E781B0
	0x01E78198 LDR X0, [X19 + 0x80]
	0x01E7819C CBZ X0, 0x1E78204
	0x01E781A0 MOV X1, X31
	0x01E781A4 BL 0x3BF6558
	0x01E781A8 SUB W24, W0, 0x1
	0x01E781AC B 0x1E781B4
	0x01E781B0 MOV W24, W31
	0x01E781B4 LDP W9, W8, [X19 + 0xB8]
	0x01E781B8 UBFM W8, W8, 0x1E, 0x1D
	0x01E781BC ADD W8, W8, 0x1F
	0x01E781C0 SBFM W1, W8, 0x5, 0x1F
	0x01E781C4 STP W1, W9, [X19 + 0xC0]
	0x01E781C8 LDR X0, [X22]
	0x01E781CC SBFM W8, W21, 0x4, 0x4
	0x01E781D0 AND W20, W8, W20, 0x1
	0x01E781D4 BL 0x1C16D6C
	0x01E781D8 LDR W8, [X19 + 0xC0]
	0x01E781DC ADD W9, W23, W20
	0x01E781E0 ADD W9, W9, W24
	0x01E781E4 STR X0, [X19 + 0xD0]
	0x01E781E8 ADD W0, W9, W8
	0x01E781EC LDP X20, X19, [X31 + 0x40]
	0x01E781F0 LDP X22, X21, [X31 + 0x30]
	0x01E781F4 LDP X24, X23, [X31 + 0x20]
	0x01E781F8 LDP X26, X25, [X31 + 0x10]
	0x01E781FC LDR X30, [X31], #0x50
	0x01E78200 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2562000
	006 Move X20, 0x227F000
	007 Move W8, [X21+391]
	008 Move X20, [X20+2680]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2286000
	015 Move X0, [X0+1816]
	016 Call 0x1C17CF4
	017 Move X0, 0x227F000
	018 Move X0, [X0+2680]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+391], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X0, [X8+8]
	030 Compare X0, 0
	031 JumpIfEqual {44}
	032 Move X8, 0x2286000
	033 Move X8, [X8+1816]
	034 Move X1, X19
	035 Move X2, [X8]
	036 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 NotImplemented "Instruction ORN not yet implemented."
	040 And W0, W8, 1
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return X0
	044 Call 0x1C17F20

Method: System.Void RegisterRpcInvokeDelegates(System.Type type)

Disassembly:
	0x01E78204 BL 0x1C16F20
	0x01E78208 BL 0x1C16F28
	0x01E7820C STP X30, X21, [X31 - 0x20]!
	0x01E78210 STP X20, X19, [X31 + 0x10]
	0x01E78214 ADRP X21, 0x2561000
	0x01E78218 ADRP X20, 0x227B000
	0x01E7821C LDRB W8, [X21 + 0x190]
	0x01E78220 LDR X20, [X20 + 0x598]
	0x01E78224 MOV X19, X0
	0x01E78228 TBNZ X8, 0x0, 0x1E78258
	0x01E7822C ADRP X0, 0x2285000
	0x01E78230 LDR X0, [X0 + 0x850]
	0x01E78234 BL 0x1C16CF4
	0x01E78238 ADRP X0, 0x2285000
	0x01E7823C LDR X0, [X0 + 0x858]
	0x01E78240 BL 0x1C16CF4
	0x01E78244 ADRP X0, 0x227B000
	0x01E78248 LDR X0, [X0 + 0x598]
	0x01E7824C BL 0x1C16CF4
	0x01E78250 MOVZ W8, 0x1
	0x01E78254 STRB W8, [X21 + 0x190]
	0x01E78258 LDR X0, [X20]
	0x01E7825C LDR X20, [X19 + 0x80]
	0x01E78260 LDR W8, [X0 + 0xE0]
	0x01E78264 CBNZ W8, 0x1E7826C
	0x01E78268 BL 0x1C16DFC
	0x01E7826C MOV X0, X20
	0x01E78270 MOV X1, X31
	0x01E78274 MOV X2, X31
	0x01E78278 BL 0x3C3883C
	0x01E7827C TBZ X0, 0x0, 0x1E78298
	0x01E78280 ADRP X8, 0x2285000
	0x01E78284 LDR X8, [X8 + 0x850]
	0x01E78288 MOV X0, X19
	0x01E7828C LDR X1, [X8]
	0x01E78290 BL 0x21A3894
	0x01E78294 STR X0, [X19 + 0x80]
	0x01E78298 LDR W8, [X19 + 0x88]
	0x01E7829C ADDS W31, W8, 0x1
	0x01E782A0 B.NE 0x1E782B0
	0x01E782A4 MOV X0, X19
	0x01E782A8 BL 0x1E77F64
	0x01E782AC STR W0, [X19 + 0x88]
	0x01E782B0 LDR X8, [X19 + 0x98]
	0x01E782B4 CBZ X8, 0x1E7834C
	0x01E782B8 ADRP X21, 0x2285000
	0x01E782BC LDR X21, [X21 + 0x858]
	0x01E782C0 MOV X20, X31
	0x01E782C4 LDR W9, [X8 + 0x18]
	0x01E782C8 CMP X20, W9, SXTW
	0x01E782CC B.GE 0x1E78304
	0x01E782D0 CMP X20, X9
	0x01E782D4 B.CS 0x1E7835C
	0x01E782D8 LDR X0, [X19 + 0xA0]
	0x01E782DC CBZ X0, 0x1E7834C
	0x01E782E0 ADD X8, X8, X20, 0x2, LSL
	0x01E782E4 LDR W1, [X8 + 0x20]
	0x01E782E8 LDR X3, [X21]
	0x01E782EC MOV W2, W20
	0x01E782F0 BL 0x2A0A344
	0x01E782F4 LDR X8, [X19 + 0x98]
	0x01E782F8 ADD X20, X20, 0x1
	0x01E782FC CBNZ X8, 0x1E782C4
	0x01E78300 B 0x1E7834C
	0x01E78304 LDR X8, [X19 + 0xA8]
	0x01E78308 CBZ X8, 0x1E7834C
	0x01E7830C MOV X20, X31
	0x01E78310 LDR W9, [X8 + 0x18]
	0x01E78314 CMP X20, W9, SXTW
	0x01E78318 B.GE 0x1E78350
	0x01E7831C CMP X20, X9
	0x01E78320 B.CS 0x1E7835C
	0x01E78324 LDR X0, [X19 + 0xB0]
	0x01E78328 CBZ X0, 0x1E7834C
	0x01E7832C ADD X8, X8, X20, 0x2, LSL
	0x01E78330 LDR W1, [X8 + 0x20]
	0x01E78334 LDR X3, [X21]
	0x01E78338 MOV W2, W20
	0x01E7833C BL 0x2A0A344
	0x01E78340 LDR X8, [X19 + 0xA8]
	0x01E78344 ADD X20, X20, 0x1
	0x01E78348 CBNZ X8, 0x1E78310
	0x01E7834C BL 0x1C16F20
	0x01E78350 LDP X20, X19, [X31 + 0x10]
	0x01E78354 LDP X30, X21, [X31], #0x20
	0x01E78358 RET
	0x01E7835C BL 0x1C16F28
	0x01E78360 STP X30, X21, [X31 - 0x20]!
	0x01E78364 STP X20, X19, [X31 + 0x10]
	0x01E78368 ADRP X20, 0x2561000
	0x01E7836C ADRP X21, 0x227B000
	0x01E78370 LDRB W8, [X20 + 0x191]
	0x01E78374 LDR X21, [X21 + 0x598]
	0x01E78378 MOV X19, X0
	0x01E7837C TBNZ X8, 0x0, 0x1E783A0
	0x01E78380 ADRP X0, 0x2285000
	0x01E78384 LDR X0, [X0 + 0x850]
	0x01E78388 BL 0x1C16CF4
	0x01E7838C ADRP X0, 0x227B000
	0x01E78390 LDR X0, [X0 + 0x598]
	0x01E78394 BL 0x1C16CF4
	0x01E78398 MOVZ W8, 0x1
	0x01E7839C STRB W8, [X20 + 0x191]
	0x01E783A0 LDR X0, [X21]
	0x01E783A4 LDR X20, [X19 + 0x80]
	0x01E783A8 LDR W8, [X0 + 0xE0]
	0x01E783AC CBNZ W8, 0x1E783B4
	0x01E783B0 BL 0x1C16DFC
	0x01E783B4 MOV X0, X20
	0x01E783B8 MOV X1, X31
	0x01E783BC MOV X2, X31
	0x01E783C0 BL 0x3C3883C
	0x01E783C4 TBZ X0, 0x0, 0x1E783E0
	0x01E783C8 ADRP X8, 0x2285000
	0x01E783CC LDR X8, [X8 + 0x850]
	0x01E783D0 MOV X0, X19
	0x01E783D4 LDR X1, [X8]
	0x01E783D8 BL 0x21A3894
	0x01E783DC STR X0, [X19 + 0x80]
	0x01E783E0 LDR X8, [X19 + 0x38]
	0x01E783E4 CBZ X8, 0x1E78438
	0x01E783E8 LDR X0, [X21]
	0x01E783EC LDR X20, [X19 + 0x80]
	0x01E783F0 LDR W8, [X0 + 0xE0]
	0x01E783F4 CBNZ W8, 0x1E783FC
	0x01E783F8 BL 0x1C16DFC
	0x01E783FC MOV X0, X20
	0x01E78400 MOV X1, X31
	0x01E78404 MOV X2, X31
	0x01E78408 BL 0x3C3883C
	0x01E7840C TBZ X0, 0x0, 0x1E78428
	0x01E78410 MOV X0, X19
	0x01E78414 LDP X20, X19, [X31 + 0x10]
	0x01E78418 MOV W1, W31
	0x01E7841C MOV X2, X31
	0x01E78420 LDP X30, X21, [X31], #0x20
	0x01E78424 B 0x3C32410
	0x01E78428 MOV X0, X19
	0x01E7842C LDP X20, X19, [X31 + 0x10]
	0x01E78430 LDP X30, X21, [X31], #0x20
	0x01E78434 B 0x1E77F64
	0x01E78438 BL 0x1C16F20
	0x01E7843C STP X30, X19, [X31 - 0x10]!
	0x01E78440 MOV X19, X0
	0x01E78444 LDR X0, [X0 + 0x40]
	0x01E78448 CBZ X0, 0x1E7846C
	0x01E7844C MOV X1, X31
	0x01E78450 BL 0x1E93668
	0x01E78454 TBZ X0, 0x0, 0x1E78464
	0x01E78458 MOV X0, X19
	0x01E7845C LDP X30, X19, [X31], #0x10
	0x01E78460 B 0x1E78470
	0x01E78464 LDP X30, X19, [X31], #0x10
	0x01E78468 RET
	0x01E7846C BL 0x1C16F20
	0x01E78470 SUB X31, X31, 0x20
	0x01E78474 STP X30, X19, [X31 + 0x10]
	0x01E78478 ADD X1, X31, 0xC
	0x01E7847C MOV X19, X0
	0x01E78480 STR W31, [X31 + 0xC]
	0x01E78484 BL 0x1E787D4
	0x01E78488 LDR W8, [X19 + 0x90]
	0x01E7848C TBZ X8, 0x4, 0x1E784A0
	0x01E78490 ADD X1, X31, 0xC
	0x01E78494 MOV X0, X19
	0x01E78498 BL 0x1E78C50
	0x01E7849C LDR W8, [X19 + 0x90]
	0x01E784A0 TBZ X8, 0x6, 0x1E784B0
	0x01E784A4 ADD X1, X31, 0xC
	0x01E784A8 MOV X0, X19
	0x01E784AC BL 0x1E78EC8
	0x01E784B0 LDP X30, X19, [X31 + 0x10]
	0x01E784B4 ADD X31, X31, 0x20
	0x01E784B8 RET
	0x01E784BC SUB X31, X31, 0x50
	0x01E784C0 STP X30, X21, [X31 + 0x30]
	0x01E784C4 STP X20, X19, [X31 + 0x40]
	0x01E784C8 STP X31, X31, [X31 + 0x20]
	0x01E784CC STP X31, X31, [X31 + 0x10]
	0x01E784D0 STR W31, [X31 + 0xC]
	0x01E784D4 MOV X19, X0
	0x01E784D8 LDR X0, [X0 + 0x40]
	0x01E784DC CBZ X0, 0x1E785D4
	0x01E784E0 MOV X1, X31
	0x01E784E4 BL 0x1E936F8
	0x01E784E8 TBZ X0, 0x0, 0x1E785C4
	0x01E784EC LDR W8, [X19 + 0x8C]
	0x01E784F0 CMP W8, 0x3
	0x01E784F4 B.NE 0x1E78558
	0x01E784F8 LDR X8, [X19 + 0x38]
	0x01E784FC CBZ X8, 0x1E785D4
	0x01E78500 LDR X8, [X8 + 0x50]
	0x01E78504 CBZ X8, 0x1E78558
	0x01E78508 LDR W9, [X19 + 0xF8]
	0x01E7850C LDR W8, [X8 + 0x48]
	0x01E78510 BIC W9, W9, W9, 0x1F
	0x01E78514 CMP W8, W9
	0x01E78518 B.LE 0x1E78558
	0x01E7851C MOV X0, X19
	0x01E78520 BL 0x1E73940
	0x01E78524 MOV X2, X0
	0x01E78528 MOV X3, X1
	0x01E7852C MOV X0, X19
	0x01E78530 MOV X1, X2
	0x01E78534 MOV X2, X3
	0x01E78538 BL 0x1E785D8
	0x01E7853C LDR X8, [X19 + 0x38]
	0x01E78540 CBZ X8, 0x1E785D4
	0x01E78544 LDR X8, [X8 + 0x50]
	0x01E78548 CBZ X8, 0x1E78550
	0x01E7854C LDR W8, [X8 + 0x48]
	0x01E78550 STR W8, [X19 + 0xF8]
	0x01E78554 B 0x1E785C4
	0x01E78558 ADD X1, X31, 0x20
	0x01E7855C ADD X2, X31, 0x10
	0x01E78560 ADD X3, X31, 0xC
	0x01E78564 MOV X0, X19
	0x01E78568 ADD X20, X31, 0x20
	0x01E7856C ADD X21, X31, 0x10
	0x01E78570 BL 0x1E749E0
	0x01E78574 TBZ X0, 0x0, 0x1E785C4
	0x01E78578 LDR W8, [X19 + 0x8C]
	0x01E7857C ADD X9, X21, 0x8
	0x01E78580 ADD X10, X20, 0x8
	0x01E78584 CMP W8, 0x2
	0x01E78588 CSEL X9, X9, X10, EQ
	0x01E7858C LDR X2, [X9]
	0x01E78590 LDR W9, [X19 + 0xF8]
	0x01E78594 UBFM X20, X2, 0x20, 0x3F
	0x01E78598 BIC W9, W9, W9, 0x1F
	0x01E7859C CMP W9, W20
	0x01E785A0 B.GE 0x1E785C4
	0x01E785A4 CMP W8, 0x2
	0x01E785A8 ADD X8, X31, 0x20
	0x01E785AC ADD X9, X31, 0x10
	0x01E785B0 CSEL X8, X9, X8, EQ
	0x01E785B4 LDR X1, [X8]
	0x01E785B8 MOV X0, X19
	0x01E785BC BL 0x1E785D8
	0x01E785C0 STR W20, [X19 + 0xF8]
	0x01E785C4 LDP X20, X19, [X31 + 0x40]
	0x01E785C8 LDP X30, X21, [X31 + 0x30]
	0x01E785CC ADD X31, X31, 0x50
	0x01E785D0 RET
	0x01E785D4 BL 0x1C16F20
	0x01E785D8 SUB X31, X31, 0x30
	0x01E785DC STP X30, X21, [X31 + 0x10]
	0x01E785E0 STP X20, X19, [X31 + 0x20]
	0x01E785E4 ADD X3, X31, 0xC
	0x01E785E8 MOV X19, X2
	0x01E785EC MOV X20, X1
	0x01E785F0 MOV X21, X0
	0x01E785F4 STR W31, [X31 + 0xC]
	0x01E785F8 BL 0x1E7900C
	0x01E785FC LDR W8, [X21 + 0x90]
	0x01E78600 TBZ X8, 0x4, 0x1E7861C
	0x01E78604 ADD X3, X31, 0xC
	0x01E78608 MOV X0, X21
	0x01E7860C MOV X1, X20
	0x01E78610 MOV X2, X19
	0x01E78614 BL 0x1E793B0
	0x01E78618 LDR W8, [X21 + 0x90]
	0x01E7861C TBZ X8, 0x6, 0x1E78634
	0x01E78620 ADD X3, X31, 0xC
	0x01E78624 MOV X0, X21
	0x01E78628 MOV X1, X20
	0x01E7862C MOV X2, X19
	0x01E78630 BL 0x1E7952C
	0x01E78634 LDP X20, X19, [X31 + 0x20]
	0x01E78638 LDP X30, X21, [X31 + 0x10]
	0x01E7863C ADD X31, X31, 0x30
	0x01E78640 RET
	0x01E78644 STR X30, [X31 - 0x30]!
	0x01E78648 STP X22, X21, [X31 + 0x10]
	0x01E7864C STP X20, X19, [X31 + 0x20]
	0x01E78650 ADRP X22, 0x2561000
	0x01E78654 LDRB W8, [X22 + 0x192]
	0x01E78658 MOV W21, W2
	0x01E7865C MOV W19, W1
	0x01E78660 MOV X20, X0
	0x01E78664 TBNZ X8, 0x0, 0x1E7867C
	0x01E78668 ADRP X0, 0x227D000
	0x01E7866C LDR X0, [X0 + 0x9D8]
	0x01E78670 BL 0x1C16CF4
	0x01E78674 MOVZ W8, 0x1
	0x01E78678 STRB W8, [X22 + 0x192]
	0x01E7867C LDR X0, [X20 + 0x40]
	0x01E78680 CBZ X0, 0x1E78700
	0x01E78684 MOV X1, X31
	0x01E78688 BL 0x1E93668
	0x01E7868C TBZ X0, 0x0, 0x1E786B8
	0x01E78690 LDR X0, [X20 + 0xF0]
	0x01E78694 CBZ X0, 0x1E78700
	0x01E78698 ADRP X8, 0x227D000
	0x01E7869C LDR X8, [X8 + 0x9D8]
	0x01E786A0 MOV W1, W19
	0x01E786A4 LDP X20, X19, [X31 + 0x20]
	0x01E786A8 LDP X22, X21, [X31 + 0x10]
	0x01E786AC LDR X2, [X8]
	0x01E786B0 LDR X30, [X31], #0x30
	0x01E786B4 B 0x2DAB03C
	0x01E786B8 TBZ X21, 0x0, 0x1E786F0
	0x01E786BC LDR X0, [X20 + 0x40]
	0x01E786C0 CBZ X0, 0x1E78700
	0x01E786C4 MOV X1, X31
	0x01E786C8 BL 0x1E93588
	0x01E786CC TBZ X0, 0x0, 0x1E786F0
	0x01E786D0 LDR X0, [X20 + 0x80]
	0x01E786D4 CBZ X0, 0x1E78700
	0x01E786D8 MOV W1, W19
	0x01E786DC LDP X20, X19, [X31 + 0x20]
	0x01E786E0 LDP X22, X21, [X31 + 0x10]
	0x01E786E4 MOV X2, X31
	0x01E786E8 LDR X30, [X31], #0x30
	0x01E786EC B 0x3BF63C0
	0x01E786F0 LDP X20, X19, [X31 + 0x20]
	0x01E786F4 LDP X22, X21, [X31 + 0x10]
	0x01E786F8 LDR X30, [X31], #0x30
	0x01E786FC RET
	0x01E78700 BL 0x1C16F20
	0x01E78704 STR X30, [X31 - 0x30]!
	0x01E78708 STP X22, X21, [X31 + 0x10]
	0x01E7870C STP X20, X19, [X31 + 0x20]
	0x01E78710 ADRP X22, 0x2561000
	0x01E78714 LDRB W8, [X22 + 0x193]
	0x01E78718 MOV W21, W2
	0x01E7871C MOV X19, X1
	0x01E78720 MOV X20, X0
	0x01E78724 TBNZ X8, 0x0, 0x1E7873C
	0x01E78728 ADRP X0, 0x227D000
	0x01E7872C LDR X0, [X0 + 0x9D8]
	0x01E78730 BL 0x1C16CF4
	0x01E78734 MOVZ W8, 0x1
	0x01E78738 STRB W8, [X22 + 0x193]
	0x01E7873C LDR X0, [X20 + 0x40]
	0x01E78740 CBZ X0, 0x1E787D0
	0x01E78744 MOV X1, X31
	0x01E78748 BL 0x1E93668
	0x01E7874C TBZ X0, 0x0, 0x1E78788
	0x01E78750 MOV X0, X19
	0x01E78754 MOV X1, X31
	0x01E78758 BL 0x3BF5D64
	0x01E7875C LDR X8, [X20 + 0xF0]
	0x01E78760 CBZ X8, 0x1E787D0
	0x01E78764 ADRP X9, 0x227D000
	0x01E78768 LDR X9, [X9 + 0x9D8]
	0x01E7876C LDP X20, X19, [X31 + 0x20]
	0x01E78770 LDP X22, X21, [X31 + 0x10]
	0x01E78774 MOV W1, W0
	0x01E78778 LDR X2, [X9]
	0x01E7877C MOV X0, X8
	0x01E78780 LDR X30, [X31], #0x30
	0x01E78784 B 0x2DAB03C
	0x01E78788 TBZ X21, 0x0, 0x1E787C0
	0x01E7878C LDR X0, [X20 + 0x40]
	0x01E78790 CBZ X0, 0x1E787D0
	0x01E78794 MOV X1, X31
	0x01E78798 BL 0x1E93588
	0x01E7879C TBZ X0, 0x0, 0x1E787C0
	0x01E787A0 LDR X0, [X20 + 0x80]
	0x01E787A4 CBZ X0, 0x1E787D0
	0x01E787A8 MOV X1, X19
	0x01E787AC LDP X20, X19, [X31 + 0x20]
	0x01E787B0 LDP X22, X21, [X31 + 0x10]
	0x01E787B4 MOV X2, X31
	0x01E787B8 LDR X30, [X31], #0x30
	0x01E787BC B 0x3BF6338
	0x01E787C0 LDP X20, X19, [X31 + 0x20]
	0x01E787C4 LDP X22, X21, [X31 + 0x10]
	0x01E787C8 LDR X30, [X31], #0x30
	0x01E787CC RET
	0x01E787D0 BL 0x1C16F20
	0x01E787D4 SUB X31, X31, 0x80
	0x01E787D8 STP D9, D8, [X31 + 0x10]
	0x01E787DC STP X29, X30, [X31 + 0x20]
	0x01E787E0 STP X28, X27, [X31 + 0x30]
	0x01E787E4 STP X26, X25, [X31 + 0x40]
	0x01E787E8 STP X24, X23, [X31 + 0x50]
	0x01E787EC STP X22, X21, [X31 + 0x60]
	0x01E787F0 STP X20, X19, [X31 + 0x70]
	0x01E787F4 ADRP X19, 0x2561000
	0x01E787F8 LDRB W8, [X19 + 0x196]
	0x01E787FC MOV X20, X0
	0x01E78800 STR X1, [X31 + 0x8]
	0x01E78804 TBNZ X8, 0x0, 0x1E78840
	0x01E78808 ADRP X0, 0x2282000
	0x01E7880C LDR X0, [X0 + 0x678]
	0x01E78810 BL 0x1C16CF4
	0x01E78814 ADRP X0, 0x227C000
	0x01E78818 LDR X0, [X0 + 0xDF8]
	0x01E7881C BL 0x1C16CF4
	0x01E78820 ADRP X0, 0x2285000
	0x01E78824 LDR X0, [X0 + 0x860]
	0x01E78828 BL 0x1C16CF4
	0x01E7882C ADRP X0, 0x2285000
	0x01E78830 LDR X0, [X0 + 0x868]
	0x01E78834 BL 0x1C16CF4
	0x01E78838 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X20, 0x2562000
	015 Move X26, 0x227F000
	016 Move W8, [X20+392]
	017 Move X26, [X26+2680]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {85}
	023 Move X0, 0x2286000
	024 Move X0, [X0+1824]
	025 Call 0x1C17CF4
	026 Move X0, 0x2286000
	027 Move X0, [X0+1832]
	028 Call 0x1C17CF4
	029 Move X0, 0x2286000
	030 Move X0, [X0+1840]
	031 Call 0x1C17CF4
	032 Move X0, 0x2286000
	033 Move X0, [X0+1848]
	034 Call 0x1C17CF4
	035 Move X0, 0x2286000
	036 Move X0, [X0+1856]
	037 Call 0x1C17CF4
	038 Move X0, 0x2286000
	039 Move X0, [X0+1864]
	040 Call 0x1C17CF4
	041 Move X0, 0x2286000
	042 Move X0, [X0+1872]
	043 Call 0x1C17CF4
	044 Move X0, 0x227F000
	045 Move X0, [X0+2680]
	046 Call 0x1C17CF4
	047 Move X0, 0x2286000
	048 Move X0, [X0+1880]
	049 Call 0x1C17CF4
	050 Move X0, 0x2286000
	051 Move X0, [X0+1888]
	052 Call 0x1C17CF4
	053 Move X0, 0x2286000
	054 Move X0, [X0+1896]
	055 Call 0x1C17CF4
	056 Move X0, 0x2286000
	057 Move X0, [X0+1904]
	058 Call 0x1C17CF4
	059 Move X0, 0x2286000
	060 Move X0, [X0+1912]
	061 Call 0x1C17CF4
	062 Move X0, 0x2286000
	063 Move X0, [X0+1920]
	064 Call 0x1C17CF4
	065 Move X0, 0x2286000
	066 Move X0, [X0+1928]
	067 Call 0x1C17CF4
	068 Move X0, 0x2286000
	069 Move X0, [X0+1936]
	070 Call 0x1C17CF4
	071 Move X0, 0x2286000
	072 Move X0, [X0+1944]
	073 Call 0x1C17CF4
	074 Move X0, 0x227C000
	075 Move X0, [X0+1728]
	076 Call 0x1C17CF4
	077 Move X0, 0x2286000
	078 Move X0, [X0+1952]
	079 Call 0x1C17CF4
	080 Move X0, 0x2286000
	081 Move X0, [X0+1960]
	082 Call 0x1C17CF4
	083 Move W8, 1
	084 Move [X20+392], W8
	085 Move X0, [X26]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X0, X19
	091 Call NetworkBehaviourUtils.ShouldRegisterRpcInvokeDelegates, X0
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {425}
	096 Move X8, 0x2286000
	097 Move X8, [X8+1872]
	098 Move X0, [X8]
	099 Call 0x1C17F10
	100 Move X8, 0x2286000
	101 Move X8, [X8+1864]
	102 Move X20, X0
	103 Move X1, [X8]
	104 Call List`1<RpcInvokeData>..ctor, X0
	105 Compare X20, 0
	106 JumpIfEqual {439}
	107 Move X9, 0x2286000
	108 Move X9, [X9+1840]
	109 Move W10, [X20+28]
	110 Move X8, [X20+16]
	111 Move X9, [X9]
	112 Add W10, W10, 1
	113 Move [X20+28], W10
	114 Compare X8, 0
	115 JumpIfEqual {439}
	116 NotImplemented "Instruction LDRSW not yet implemented."
	117 Move W11, [X8+24]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move W11, 24
	120 Add W9, W10, 1
	121 NotImplemented "Instruction MADD not yet implemented."
	122 Move [X20+24], W9
	123 Move [X8+32], X31
	124 Move [X8+40], X31
	125 Move [X8+48], X31
	126 Move X8, [X9+32]
	127 Add X1, X31, 8
	128 Move X0, X20
	129 Move X8, [X8+192]
	130 Move X2, [X8+112]
	131 Move [X31+8], X31
	132 Move [X31+16], X31
	133 Move [X31+24], X31
	134 Call List`1<RpcInvokeData>.AddWithResize, X0, X1
	135 Compare X19, 0
	136 JumpIfEqual {439}
	137 Move X8, [X19]
	138 Move W1, 104
	139 Move X0, X19
	140 Move X9, [X8+1880]
	141 Move X2, [X8+1888]
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Compare X0, 0
	144 JumpIfEqual {439}
	145 Move W8, [X0+24]
	146 Move X21, X0
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X29, 0x2286000
	149 Move X27, 0x227C000
	150 Move X24, 0x2286000
	151 Move X25, 0x2286000
	152 Move X29, [X29+1896]
	153 Move X27, [X27+1728]
	154 Move X24, [X24+1880]
	155 Move X25, [X25+1888]
	156 Move W28, W31
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X0, [X27]
	159 Add X8, X21, W28
	160 Move X22, [X8+32]
	161 Move X23, [X29]
	162 Move W8, [X0+224]
	163 Compare W8, 0
	164 JumpIfNotEqual {166}
	165 Call 0x1C17DFC
	166 Move X0, X23
	167 Move X1, X31
	168 Call Type.GetTypeFromHandle, X0
	169 Compare X22, 0
	170 JumpIfEqual {439}
	171 Move X8, [X22]
	172 Move X1, X0
	173 Move X0, X22
	174 Move W2, W31
	175 Move X9, [X8+520]
	176 Move X3, [X8+528]
	177 NotImplemented "Instruction BLR not yet implemented."
	178 Compare X0, 0
	179 JumpIfEqual {439}
	180 Move X8, [X0+24]
	181 Compare X8, 0
	182 JumpIfEqual {263}
	183 Compare W8, 0
	184 JumpIfEqual {440}
	185 Move X8, [X0+32]
	186 Compare X8, 0
	187 JumpIfEqual {263}
	188 Move X9, 0x2286000
	189 Move X10, [X8]
	190 Move X9, [X9+1904]
	191 Move W12, [X10+304]
	192 Move X9, [X9]
	193 Move W11, [X9+304]
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move X10, [X10+200]
	196 Add X10, X10, X11
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move X0, [X27]
	200 Move X9, 0x2286000
	201 Move X29, X26
	202 Move W26, [X8+16]
	203 Move W25, [X8+20]
	204 Move W24, [X8+24]
	205 Move W8, [X0+224]
	206 Move X9, [X9+1912]
	207 Move X23, [X9]
	208 Compare W8, 0
	209 JumpIfNotEqual {211}
	210 Call 0x1C17DFC
	211 Move X0, X23
	212 Move X1, X31
	213 Call Type.GetTypeFromHandle, X0
	214 Move X1, X22
	215 Move X2, X31
	216 Call Delegate.CreateDelegate, X0, X1
	217 Compare X0, 0
	218 JumpIfEqual {224}
	219 Move X8, 0x2286000
	220 Move X8, [X8+1920]
	221 Move X1, [X8]
	222 Move X8, [X0]
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Move X9, 0x2286000
	225 Move W10, [X20+28]
	226 Move X8, [X20+16]
	227 Move X9, [X9+1840]
	228 Add W10, W10, 1
	229 Move X9, [X9]
	230 Move [X20+28], W10
	231 Compare X8, 0
	232 JumpIfEqual {439}
	233 NotImplemented "Instruction LDRSW not yet implemented."
	234 Move W11, [X8+24]
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Move W11, 24
	237 Add W9, W10, 1
	238 NotImplemented "Instruction MADD not yet implemented."
	239 Move [X20+24], W9
	240 Move [X8+32], W26
	241 Move [X8+36], W25
	242 Move [X8+40], W24
	243 Move [X8+44], W31
	244 Move [X8+48], X0
	245 Move X8, [X9+32]
	246 Add X1, X31, 8
	247 Move X8, [X8+192]
	248 Move X2, [X8+112]
	249 Move [X31+24], X0
	250 Move X0, X20
	251 Move [X31+8], W26
	252 Move [X31+12], W25
	253 Move [X31+16], W24
	254 Move [X31+20], W31
	255 Call List`1<RpcInvokeData>.AddWithResize, X0, X1
	256 Move X26, X29
	257 Move X29, 0x2286000
	258 Move X24, 0x2286000
	259 Move X25, 0x2286000
	260 Move X29, [X29+1896]
	261 Move X24, [X24+1880]
	262 Move X25, [X25+1888]
	263 Move X8, [X22]
	264 Move X0, X22
	265 Move X9, [X8+440]
	266 Move X1, [X8+448]
	267 NotImplemented "Instruction BLR not yet implemented."
	268 Move X8, [X27]
	269 Move X23, X0
	270 Move W9, [X8+224]
	271 Compare W9, 0
	272 JumpIfNotEqual {275}
	273 Move X0, X8
	274 Call 0x1C17DFC
	275 Move X0, X23
	276 Move X1, X19
	277 Move X2, X31
	278 Call Type.op_Equality, X0, X1
	279 Move TEMP, X0
	280 And TEMP, TEMP, 1
	281 Compare TEMP, 1
	282 JumpIfNotEqual {361}
	283 Move X0, [X27]
	284 Move X23, [X24]
	285 Move W8, [X0+224]
	286 Compare W8, 0
	287 JumpIfNotEqual {289}
	288 Call 0x1C17DFC
	289 Move X0, X23
	290 Move X1, X31
	291 Call Type.GetTypeFromHandle, X0
	292 Move X8, [X22]
	293 Move X1, X0
	294 Move X0, X22
	295 Move W2, W31
	296 Move X9, [X8+520]
	297 Move X3, [X8+528]
	298 NotImplemented "Instruction BLR not yet implemented."
	299 Compare X0, 0
	300 JumpIfEqual {439}
	301 Move X8, [X0+24]
	302 Compare X8, 0
	303 JumpIfEqual {361}
	304 Compare W8, 0
	305 JumpIfEqual {440}
	306 Move X23, [X0+32]
	307 Compare X23, 0
	308 JumpIfEqual {361}
	309 Move X9, [X23]
	310 Move X8, [X25]
	311 Move W11, [X9+304]
	312 Move W10, [X8+304]
	313 NotImplemented "Instruction CMP not yet implemented."
	314 Move X9, [X9+200]
	315 Add X9, X9, X10
	316 NotImplemented "Instruction LDUR not yet implemented."
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X0, [X26]
	319 Move W8, [X0+224]
	320 Compare W8, 0
	321 JumpIfNotEqual {324}
	322 Call 0x1C17DFC
	323 Move X0, [X26]
	324 Move X8, [X0+184]
	325 Move X0, [X27]
	326 Move X9, 0x2286000
	327 Move X23, [X23+16]
	328 Move X24, [X8+16]
	329 Move W8, [X0+224]
	330 Move X9, [X9+1928]
	331 Move X25, [X9]
	332 Compare W8, 0
	333 JumpIfNotEqual {335}
	334 Call 0x1C17DFC
	335 Move X0, X25
	336 Move X1, X31
	337 Call Type.GetTypeFromHandle, X0
	338 Move X1, X22
	339 Move X2, X31
	340 Call Delegate.CreateDelegate, X0, X1
	341 Compare X24, 0
	342 JumpIfEqual {439}
	343 Move X25, 0x2286000
	344 Move X25, [X25+1888]
	345 Move X2, X0
	346 Compare X0, 0
	347 JumpIfEqual {353}
	348 Move X8, 0x2286000
	349 Move X8, [X8+1936]
	350 Move X1, [X8]
	351 Move X8, [X2]
	352 NotImplemented "Instruction CMP not yet implemented."
	353 Move X8, 0x2286000
	354 Move X8, [X8+1944]
	355 Move X0, X24
	356 Move X1, X23
	357 Move X3, [X8]
	358 Call SortedList`2<Object, Object>.Add, X0, X1, X2
	359 Move X24, 0x2286000
	360 Move X24, [X24+1880]
	361 Move W8, [X21+24]
	362 Add W28, W28, 1
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Move X23, 0x2286000
	365 Move X23, [X23+1960]
	366 Move X0, [X23]
	367 Move W8, [X0+224]
	368 Compare W8, 0
	369 JumpIfNotEqual {372}
	370 Call 0x1C17DFC
	371 Move X0, [X23]
	372 Move X8, [X0+184]
	373 Move X21, [X8+8]
	374 Compare X21, 0
	375 JumpIfNotEqual {397}
	376 Move W8, [X0+224]
	377 Compare W8, 0
	378 JumpIfNotEqual {381}
	379 Call 0x1C17DFC
	380 Move X0, [X23]
	381 Move X9, 0x2286000
	382 Move X8, [X0+184]
	383 Move X9, [X9+1824]
	384 Move X22, [X8]
	385 Move X0, [X9]
	386 Call 0x1C17F10
	387 Move X8, 0x2286000
	388 Move X8, [X8+1952]
	389 Move X1, X22
	390 Move X3, X31
	391 Move X21, X0
	392 Move X2, [X8]
	393 Call Comparison`1<RpcInvokeData>..ctor, X0, X1, X2
	394 Move X8, [X23]
	395 Move X8, [X8+184]
	396 Move [X8+8], X21
	397 Move X8, 0x2286000
	398 Move X8, [X8+1848]
	399 Move X0, X20
	400 Move X1, X21
	401 Move X2, [X8]
	402 Call List`1<RpcInvokeData>.Sort, X0, X1
	403 Move X0, [X26]
	404 Move W8, [X0+224]
	405 Compare W8, 0
	406 JumpIfNotEqual {409}
	407 Call 0x1C17DFC
	408 Move X0, [X26]
	409 Move X9, 0x2286000
	410 Move X8, [X0+184]
	411 Move X9, [X9+1856]
	412 Move X0, X20
	413 Move X21, [X8+8]
	414 Move X1, [X9]
	415 Call List`1<RpcInvokeData>.ToArray, X0
	416 Compare X21, 0
	417 JumpIfEqual {439}
	418 Move X8, 0x2286000
	419 Move X8, [X8+1832]
	420 Move X2, X0
	421 Move X0, X21
	422 Move X1, X19
	423 Move X3, [X8]
	424 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	425 Move X20, [X31+112]
	426 Move X19, [X31+120]
	427 Move X22, [X31+96]
	428 Move X21, [X31+104]
	429 Move X24, [X31+80]
	430 Move X23, [X31+88]
	431 Move X26, [X31+64]
	432 Move X25, [X31+72]
	433 Move X28, [X31+48]
	434 Move X27, [X31+56]
	435 Move X29, [X31+32]
	436 Move X30, [X31+40]
	437 Add X31, X31, 128
	438 Return 
	439 Call 0x1C17F20
	440 Call 0x1C17F28
	441 Call 0x1C181E0
	442 Move X0, X2
	443 Call 0x1C181E0

Method: System.Boolean TryGetRpcInvokeDelegateArray(System.Type type, out Fusion.RpcInvokeData[] delegates)

Disassembly:
	0x01E7883C STRB W8, [X19 + 0x196]
	0x01E78840 LDR W24, [X20 + 0xE8]
	0x01E78844 CMP W24, 0x1
	0x01E78848 B.LT 0x1E78BFC
	0x01E7884C LDR X26, [X20 + 0xE0]
	0x01E78850 CBZ X26, 0x1E78C48
	0x01E78854 LDR W29, [X20 + 0x90]
	0x01E78858 LDR X27, [X20 + 0xD8]
	0x01E7885C ADRP X23, 0xFFFFFFFFFECB5000
	0x01E78860 MOV W19, W31
	0x01E78864 MOV W28, W31
	0x01E78868 MOV W8, W31
	0x01E7886C ADD X23, X23, 0xB4C
	0x01E78870 FMOV S9, 0.5
	0x01E78874 MOVZ W21, 0x1
	0x01E78878 STR W31, [X31 + 0x4]
	0x01E7887C LDR W9, [X26 + 0x18]
	0x01E78880 CMP W8, W9
	0x01E78884 B.CS 0x1E78C4C
	0x01E78888 CBZ X27, 0x1E78C48
	0x01E7888C LDR W9, [X27 + 0x18]
	0x01E78890 SXTW X25, W8
	0x01E78894 CMP W25, W9
	0x01E78898 B.CS 0x1E78C4C
	0x01E7889C ADD X8, X27, X25, 0x3, LSL
	0x01E788A0 LDR X0, [X8 + 0x20]
	0x01E788A4 CBZ X0, 0x1E78C48
	0x01E788A8 ADD X8, X26, X25, 0x2, LSL
	0x01E788AC LDR W22, [X8 + 0x20]
	0x01E788B0 MOV X1, X31
	0x01E788B4 BL 0x3BF6930
	0x01E788B8 SUB W8, W0, 0x1
	0x01E788BC CMP W8, 0x8
	0x01E788C0 B.HI 0x1E78AB4
	0x01E788C4 ADR X9, 0x10
	0x01E788C8 LDRB W10, [X23, X8, LSL]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2562000
	007 Move X21, 0x227F000
	008 Move W8, [X22+393]
	009 Move X21, [X21+2680]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x2286000
	017 Move X0, [X0+1968]
	018 Call 0x1C17CF4
	019 Move X0, 0x227F000
	020 Move X0, [X0+2680]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+393], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X0, [X8+8]
	032 Compare X0, 0
	033 JumpIfEqual {46}
	034 Move X8, 0x2286000
	035 Move X8, [X8+1968]
	036 Move X1, X20
	037 Move X2, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X3, [X8]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	045 Return X0
	046 Call 0x1C17F20

Method: System.Int32 GetRpcStaticIndexOrThrow(System.String key)

Disassembly:
	0x01E788CC ADD X9, X9, X10, 0x2, LSL
	0x01E788D0 BR X9
	0x01E788D4 TBZ X29, 0x1, 0x1E78AB4
	0x01E788D8 LDR X0, [X20 + 0x80]
	0x01E788DC CBZ X0, 0x1E78C48
	0x01E788E0 MOV W1, W22
	0x01E788E4 MOV X2, X31
	0x01E788E8 BL 0x3BF64D0
	0x01E788EC TBNZ X0, 0x0, 0x1E78AB4
	0x01E788F0 LDR X0, [X20 + 0x80]
	0x01E788F4 CBZ X0, 0x1E78C48
	0x01E788F8 MOV W1, W22
	0x01E788FC MOV X2, X31
	0x01E78900 BL 0x3BF5DB0
	0x01E78904 LDR X9, [X31 + 0x8]
	0x01E78908 MOV X0, X20
	0x01E7890C MOV V8.16B, V0.16B
	0x01E78910 LDR W1, [X9]
	0x01E78914 ADD W8, W1, 0x1
	0x01E78918 STR W8, [X9]
	0x01E7891C ADRP X8, 0x2285000
	0x01E78920 LDR X8, [X8 + 0x860]
	0x01E78924 LDR X2, [X8]
	0x01E78928 BL 0x22275A8
	0x01E7892C ADRP X8, 0x2560000
	0x01E78930 LDRB W8, [X8 + 0xE8F]
	0x01E78934 MOV X22, X0
	0x01E78938 CBNZ W8, 0x1E78954
	0x01E7893C ADRP X0, 0x2282000
	0x01E78940 LDR X0, [X0 + 0xC68]
	0x01E78944 BL 0x1C16CF4
	0x01E78948 MOVZ W8, 0x1
	0x01E7894C ADRP X9, 0x2560000
	0x01E78950 STRB W8, [X9 + 0xE8F]
	0x01E78954 ADRP X8, 0x2282000
	0x01E78958 LDR X8, [X8 + 0xC68]
	0x01E7895C LDR X0, [X8]
	0x01E78960 LDR W8, [X0 + 0xE0]
	0x01E78964 CBNZ W8, 0x1E7896C
	0x01E78968 BL 0x1C16DFC
	0x01E7896C FMOV W8, S8
	0x01E78970 MOVZ W9, 0x44800000
	0x01E78974 UBFM W8, W8, 0x1F, 0x1F
	0x01E78978 FMOV S0, W9
	0x01E7897C UCVTF S2, W8
	0x01E78980 FMUL S0, S8, S0
	0x01E78984 MOVZ W9, 0x7F800000
	0x01E78988 FSUB S2, S9, S2
	0x01E7898C FMOV S1, W9
	0x01E78990 FADD S0, S0, S2
	0x01E78994 FCVTZS W8, S0
	0x01E78998 FCMP S0, S1
	0x01E7899C MOVZ W9, 0x80000000
	0x01E789A0 CSEL W8, W9, W8, EQ
	0x01E789A4 SBFM W9, W8, 0x1F, 0x1F

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2562000
	006 Move X20, 0x227F000
	007 Move W8, [X21+394]
	008 Move X20, [X20+2680]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x227F000
	015 Move X0, [X0+2680]
	016 Call 0x1C17CF4
	017 Move X0, 0x2286000
	018 Move X0, [X0+1976]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+394], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X0, [X8+16]
	030 Compare X0, 0
	031 JumpIfEqual {46}
	032 Move X8, 0x2286000
	033 Move X8, [X8+1976]
	034 Move X1, X19
	035 Move X2, [X8]
	036 Call SortedList`2<Object, Object>.IndexOfKey, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, -2147483648
	039 Compare TEMP, -2147483648
	040 JumpIfEqual {47}
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return X0
	046 Call 0x1C17F20
	047 Move X0, 0x2286000
	048 Move X0, [X0+1984]
	049 Call 0x1C17D08
	050 Move X1, X19
	051 Move X2, X31
	052 Call String.Concat, X0, X1
	053 Move X19, X0
	054 Move X0, 0x2284000
	055 Move X0, [X0+1888]
	056 Call 0x1C17D08
	057 Call 0x1C17F10
	058 Move X1, X19
	059 Move X2, X31
	060 Move X20, X0
	061 Call ArgumentOutOfRangeException..ctor, X0, X1
	062 Move X0, 0x2286000
	063 Move X0, [X0+1992]
	064 Call 0x1C17D08
	065 Move X1, X0
	066 Move X0, X20
	067 Call 0x1C17DEC

Method: System.Boolean TryGetRpcStaticInvokeDelegate(System.Int32 index, out Fusion.RpcStaticInvokeDelegate del)

Disassembly:
	0x01E789A8 EOR W8, W9, W8, 0x1
	0x01E789AC STR W8, [X22]
	0x01E789B0 B 0x1E78AB4
	0x01E789B4 TBZ X29, 0x0, 0x1E78AB4
	0x01E789B8 LDR X9, [X31 + 0x8]
	0x01E789BC MOV X0, X20
	0x01E789C0 LDR W1, [X9]
	0x01E789C4 ADD W8, W1, 0x1
	0x01E789C8 STR W8, [X9]
	0x01E789CC ADRP X8, 0x2285000
	0x01E789D0 LDR X8, [X8 + 0x868]
	0x01E789D4 LDR X2, [X8]
	0x01E789D8 BL 0x22275B4
	0x01E789DC LDR X8, [X20 + 0x80]
	0x01E789E0 CBZ X8, 0x1E78C48
	0x01E789E4 MOV X23, X0
	0x01E789E8 MOV X0, X8
	0x01E789EC MOV W1, W22
	0x01E789F0 MOV X2, X31
	0x01E789F4 BL 0x3BF6160
	0x01E789F8 STR W0, [X23]
	0x01E789FC B 0x1E78AAC
	0x01E78A00 TBZ X29, 0x2, 0x1E78AB4
	0x01E78A04 TBZ X21, 0x0, 0x1E78A24
	0x01E78A08 ADRP X8, 0x2285000
	0x01E78A0C LDR W1, [X20 + 0xC4]
	0x01E78A10 LDR X8, [X8 + 0x868]
	0x01E78A14 MOV X0, X20
	0x01E78A18 LDR X2, [X8]
	0x01E78A1C BL 0x22275B4
	0x01E78A20 LDR W28, [X0]
	0x01E78A24 LDR X0, [X20 + 0x80]
	0x01E78A28 CBZ X0, 0x1E78C48
	0x01E78A2C UBFM W21, W19, 0x1E, 0x2
	0x01E78A30 MOVZ W8, 0xF
	0x01E78A34 LSLV W8, W8, W21
	0x01E78A38 MOV W1, W22
	0x01E78A3C MOV X2, X31
	0x01E78A40 BIC W23, W28, W8, 0x0
	0x01E78A44 BL 0x3BF5F88
	0x01E78A48 MOVZ W8, 0x1
	0x01E78A4C LSLV W8, W8, W21
	0x01E78A50 ANDS W31, W0, 0x1
	0x01E78A54 ADD W19, W19, 0x1
	0x01E78A58 CSEL W8, W8, W31, NE
	0x01E78A5C CMP W19, 0x8
	0x01E78A60 ORR W28, W8, W23, 0x0
	0x01E78A64 B.EQ 0x1E78B3C
	0x01E78A68 MOV W21, W31
	0x01E78A6C B 0x1E78AAC
	0x01E78A70 LDR X0, [X20 + 0xF0]
	0x01E78A74 CBZ X0, 0x1E78C48
	0x01E78A78 ADRP X8, 0x227C000
	0x01E78A7C LDR X8, [X8 + 0xDF8]
	0x01E78A80 MOV W1, W22
	0x01E78A84 LDR X2, [X8]
	0x01E78A88 BL 0x2DAA59C
	0x01E78A8C MOV W23, W0
	0x01E78A90 TBZ X0, 0x0, 0x1E78AA8
	0x01E78A94 LDR X0, [X20 + 0x80]
	0x01E78A98 CBZ X0, 0x1E78C48
	0x01E78A9C MOV W1, W22
	0x01E78AA0 MOV X2, X31
	0x01E78AA4 BL 0x3BF63C0
	0x01E78AA8 TBNZ X29, 0x3, 0x1E78AC4
	0x01E78AAC ADRP X23, 0xFFFFFFFFFECB5000
	0x01E78AB0 ADD X23, X23, 0xB4C
	0x01E78AB4 ADD W8, W25, 0x1
	0x01E78AB8 CMP W24, W8
	0x01E78ABC B.NE 0x1E7887C
	0x01E78AC0 B 0x1E78BD0
	0x01E78AC4 TBZ X21, 0x0, 0x1E78AE4
	0x01E78AC8 ADRP X8, 0x2285000
	0x01E78ACC LDR W1, [X20 + 0xC4]
	0x01E78AD0 LDR X8, [X8 + 0x868]
	0x01E78AD4 MOV X0, X20
	0x01E78AD8 LDR X2, [X8]
	0x01E78ADC BL 0x22275B4
	0x01E78AE0 LDR W28, [X0]
	0x01E78AE4 UBFM W9, W19, 0x1E, 0x2
	0x01E78AE8 MOVZ W8, 0xF
	0x01E78AEC LSLV W8, W8, W9
	0x01E78AF0 AND W10, W28, W8, 0x0
	0x01E78AF4 ASRV W10, W10, W9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2562000
	006 Move W8, [X21+395]
	007 Move X19, X1
	008 Move W20, W0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x2286000
	014 Move X0, [X0+2000]
	015 Call 0x1C17CF4
	016 Move X0, 0x227F000
	017 Move X0, [X0+2680]
	018 Call 0x1C17CF4
	019 Move X0, 0x2286000
	020 Move X0, [X0+2008]
	021 Call 0x1C17CF4
	022 Move X0, 0x2286000
	023 Move X0, [X0+2016]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+395], W8
	027 Move TEMP, X20
	028 And TEMP, TEMP, -2147483648
	029 Compare TEMP, -2147483648
	030 JumpIfEqual {78}
	031 Move X21, 0x227F000
	032 Move X21, [X21+2680]
	033 Move X0, [X21]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X21]
	039 Move X8, [X0+184]
	040 Move X8, [X8+16]
	041 Compare X8, 0
	042 JumpIfEqual {96}
	043 Move W9, [X8+32]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W9, [X0+224]
	046 Compare W9, 0
	047 JumpIfNotEqual {54}
	048 Call 0x1C17DFC
	049 Move X8, [X21]
	050 Move X8, [X8+184]
	051 Move X8, [X8+16]
	052 Compare X8, 0
	053 JumpIfEqual {96}
	054 Move X9, 0x2286000
	055 Move X9, [X9+2016]
	056 Move X0, X8
	057 Move X1, [X9]
	058 Call SortedList`2<Object, Object>.get_Values, X0
	059 Compare X0, 0
	060 JumpIfEqual {96}
	061 Move X10, 0x2286000
	062 Move X8, [X0]
	063 Move X10, [X10+2000]
	064 Move X21, X0
	065 NotImplemented "Instruction LDRH not yet implemented."
	066 Move X1, [X10]
	067 Compare X9, 0
	068 JumpIfEqual {75}
	069 Move X10, [X8+176]
	070 Add X10, X10, 8
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Subtract X9, X9, 1
	074 Add X10, X10, 16
	075 Move X0, X21
	076 Move W2, W31
	077 Call 0x1C5D788
	078 Move X0, X31
	079 Move W8, W31
	080 NotImplemented "Instruction LDRSW not yet implemented."
	081 Add X8, X8, X9
	082 Add X0, X8, 312
	083 Move X8, [X0]
	084 Move X2, [X0+8]
	085 Move X0, X21
	086 Move W1, W20
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move W8, 1
	089 Move [X19], X0
	090 Move X20, [X31+16]
	091 Move X19, [X31+24]
	092 Move W0, W8
	093 Move X30, [X31+32]
	094 Move X21, [X31+40]
	095 Return X0
	096 Call 0x1C17F20

Method: System.Void NotifyRpcPayloadSizeExceeded(System.String rpc, System.Int32 size)

Disassembly:
	0x01E78AF8 ORR W11, W10, W23, 0x0

ISIL:
	001 Return 

Method: System.Void NotifyRpcTargetUnreachable(Fusion.PlayerRef player, System.String rpc)

Disassembly:
	0x01E78AFC TBZ X11, 0x0, 0x1E78B20

ISIL:
	001 Return 

Method: System.Void NotifyLocalSimulationNotAllowedToSendRpc(System.String rpc, Fusion.NetworkObject obj, System.Int32 sources)

Disassembly:
	0x01E78B00 ADD W10, W10, 0x2

ISIL:
	001 Return 

Method: System.Void NotifyLocalTargetedRpcCulled(Fusion.PlayerRef player, System.String methodName)

Disassembly:
	0x01E78B04 AND W11, W23, 0x1

ISIL:
	001 Return 

Method: System.Void ThrowIfBehaviourNotInitialized(Fusion.NetworkBehaviour behaviour)

Disassembly:
	0x01E78B08 AND W10, W10, 0xFFFFFFFE
	0x01E78B0C ORR W10, W10, W11, 0x0
	0x01E78B10 LSLV W9, W10, W9
	0x01E78B14 BIC W10, W28, W8, 0x0
	0x01E78B18 AND W8, W9, W8, 0x0
	0x01E78B1C ORR W28, W8, W10, 0x0
	0x01E78B20 ADRP X23, 0xFFFFFFFFFECB5000
	0x01E78B24 ADD W19, W19, 0x1
	0x01E78B28 ADD X23, X23, 0xB4C
	0x01E78B2C CMP W19, 0x8
	0x01E78B30 B.EQ 0x1E78B74
	0x01E78B34 MOV W21, W31
	0x01E78B38 B 0x1E78AB4
	0x01E78B3C ADRP X19, 0x2285000
	0x01E78B40 LDR W8, [X20 + 0xC4]
	0x01E78B44 LDR X19, [X19 + 0x868]
	0x01E78B48 LDR W9, [X31 + 0x4]
	0x01E78B4C MOV X0, X20
	0x01E78B50 LDR X2, [X19]
	0x01E78B54 ADD W1, W8, W9
	0x01E78B58 ADD W22, W9, 0x1
	0x01E78B5C BL 0x22275B4
	0x01E78B60 STR W28, [X0]
	0x01E78B64 LDR W8, [X20 + 0xC0]
	0x01E78B68 ADRP X23, 0xFFFFFFFFFECB5000
	0x01E78B6C ADD X23, X23, 0xB4C
	0x01E78B70 B 0x1E78BA0
	0x01E78B74 ADRP X19, 0x2285000
	0x01E78B78 LDR W8, [X20 + 0xC4]
	0x01E78B7C LDR X19, [X19 + 0x868]
	0x01E78B80 LDR W9, [X31 + 0x4]
	0x01E78B84 MOV X0, X20
	0x01E78B88 LDR X2, [X19]
	0x01E78B8C ADD W1, W8, W9
	0x01E78B90 ADD W22, W9, 0x1
	0x01E78B94 BL 0x22275B4
	0x01E78B98 STR W28, [X0]
	0x01E78B9C LDR W8, [X20 + 0xC0]
	0x01E78BA0 CMP W22, W8
	0x01E78BA4 B.GE 0x1E78BC0
	0x01E78BA8 LDR W8, [X20 + 0xC4]
	0x01E78BAC LDR X2, [X19]
	0x01E78BB0 MOV X0, X20
	0x01E78BB4 ADD W1, W8, W22
	0x01E78BB8 BL 0x22275B4
	0x01E78BBC LDR W28, [X0]
	0x01E78BC0 MOV W19, W31
	0x01E78BC4 MOV W21, W31
	0x01E78BC8 STR W22, [X31 + 0x4]
	0x01E78BCC B 0x1E78AB4
	0x01E78BD0 CMP W19, 0x1
	0x01E78BD4 B.LT 0x1E78BFC
	0x01E78BD8 ADRP X9, 0x2285000
	0x01E78BDC LDR W8, [X20 + 0xC4]
	0x01E78BE0 LDR X9, [X9 + 0x868]
	0x01E78BE4 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {49}
	006 Move X8, [X0+64]
	007 Compare X8, 0
	008 JumpIfEqual {42}
	009 Move W8, [X8+96]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 2
	012 Compare TEMP, 2
	013 JumpIfEqual {42}
	014 Move X20, 0x2562000
	015 Move W8, [X20+415]
	016 Move X19, [X0+56]
	017 Compare W8, 0
	018 JumpIfNotEqual {24}
	019 Move X0, 0x227C000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+415], W8
	024 Move X8, 0x227C000
	025 Move X8, [X8+1432]
	026 Move X0, [X8]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X19
	032 Move X1, X31
	033 Call Object.op_Implicit, X0
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {50}
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return 
	042 Move X0, 0x227C000
	043 Move X0, [X0+1456]
	044 Call 0x1C17D08
	045 Call 0x1C17F10
	046 Move X19, X0
	047 Move X0, 0x2286000
	048 Move X0, [X0+2024]
	049 Call 0x1C17F20
	050 Move X0, 0x227C000
	051 Move X0, [X0+1456]
	052 Call 0x1C17D08
	053 Call 0x1C17F10
	054 Move X19, X0
	055 Move X0, 0x2286000
	056 Move X0, [X0+2032]
	057 Call 0x1C17D08
	058 Move X1, X0
	059 Move X0, X19
	060 Move X2, X31
	061 Call InvalidOperationException..ctor, X0, X1
	062 Move X0, 0x2286000
	063 Move X0, [X0+2040]
	064 Call 0x1C17D08
	065 Move X1, X0
	066 Move X0, X19
	067 Call 0x1C17DEC

Method: System.Void NotifyNetworkWrapFailed(T value)

Disassembly:
	0x0222ACD8 BL 0x3EB1AC0

ISIL:
	001 Return 

Method: System.Void NotifyNetworkWrapFailed(T value, System.Type wrapperType)

Disassembly:
	0x0222ACE0 LDR X8, [X27 + 0x20]

ISIL:
	001 Return 

Method: System.Void NotifyNetworkUnwrapFailed(T wrapper, System.Type valueType)

Disassembly:
	0x0222ACD0 SUB X8, X29, 0x28

ISIL:
	001 Return 

Method: System.Void InitializeNetworkArray(Fusion.NetworkArray`1<T> networkArray, T[] sourceArray, System.String name)

Disassembly:
	0x02229F44 BL 0x3EB1B20
	0x02229F48 STP X29, X30, [X31 - 0x40]!
	0x02229F4C STR X23, [X31 + 0x10]
	0x02229F50 STP X22, X21, [X31 + 0x20]
	0x02229F54 STP X20, X19, [X31 + 0x30]
	0x02229F58 ADD X29, X31, 0x0
	0x02229F5C SUB X31, X31, 0x20
	0x02229F60 MRS X22, 0xC000
	0x02229F64 LDR X8, [X22 + 0x28]
	0x02229F68 MOV X20, X1
	0x02229F6C MOV X19, X0
	0x02229F70 STUR X8, [X29 - 0x8]
	0x02229F74 LDR X23, [X2 + 0x38]
	0x02229F78 CBNZ X23, 0x2229F8C
	0x02229F7C MOV X0, X2
	0x02229F80 MOV X21, X2
	0x02229F84 BL 0x1C5C6E0
	0x02229F88 LDR X23, [X21 + 0x38]
	0x02229F8C LDR X8, [X23]
	0x02229F90 LDR W2, [X8 + 0xFC]
	0x02229F94 ADD X8, X31, 0x0
	0x02229F98 ADD X9, X2, 0xF
	0x02229F9C AND X9, X9, 0x1FFFFFFFF
	0x02229FA0 SUB X21, X8, X9
	0x02229FA4 ADD X31, X21, 0x0
	0x02229FA8 MOV X0, X21
	0x02229FAC MOV X1, X20
	0x02229FB0 BL 0x3EB1AC0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X3+56]
	006 Move X21, X3
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfEqual {13}
	011 Compare X19, 0
	012 JumpIfNotEqual {17}
	013 Move X0, X21
	014 Call 0x1C5D6E0
	015 Compare X19, 0
	016 JumpIfEqual {34}
	017 Move W8, [X19+24]
	018 Compare W8, 0
	019 JumpIfEqual {34}
	020 Move X9, [X21+56]
	021 Move W10, [X20+8]
	022 Move X0, X20
	023 Move X1, X19
	024 Move X4, [X9+32]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CSEL not yet implemented."
	029 Move W2, W31
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call 0x240C7DC, X0, X1, X2, X3
	033 Return 
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return 

Method: System.Void CopyFromNetworkArray(Fusion.NetworkArray`1<T> networkArray, ref T[] dstArray)

Disassembly:
	0x02228DF8 LDR X0, [X8 + 0x10]
	0x02228DFC BL 0x1C16ED4
	0x02228E00 TBNZ X0, 0x0, 0x2228E74
	0x02228E04 MOV X0, X23
	0x02228E08 MOV X1, X31
	0x02228E0C BL 0x33BE520
	0x02228E10 LDR X8, [X22 + 0x20]
	0x02228E14 MOV X24, X0
	0x02228E18 LDRB W9, [X8 + 0x135]
	0x02228E1C TBNZ X9, 0x0, 0x2228E2C
	0x02228E20 MOV X0, X8
	0x02228E24 BL 0x1C5C684
	0x02228E28 MOV X8, X0
	0x02228E2C ADRP X9, 0x1ECB000
	0x02228E30 LDR X9, [X9 + 0x6C0]
	0x02228E34 LDR X8, [X8 + 0xC0]
	0x02228E38 LDR X0, [X9]
	0x02228E3C LDR X25, [X8 + 0x18]
	0x02228E40 LDR W9, [X0 + 0xE0]
	0x02228E44 CBNZ W9, 0x2228E4C
	0x02228E48 BL 0x1C16DFC
	0x02228E4C MOV X0, X25
	0x02228E50 MOV X1, X31
	0x02228E54 BL 0x338C698
	0x02228E58 MOV X1, X0
	0x02228E5C MOV X0, X24
	0x02228E60 MOV X2, X31
	0x02228E64 BL 0x3395F0C
	0x02228E68 TBZ X0, 0x0, 0x2228E74
	0x02228E6C MOV X0, X31
	0x02228E70 BL 0x339D56C
	0x02228E74 LDR W8, [X23 + 0x18]
	0x02228E78 SUBS W8, W8, W21
	0x02228E7C B.CC 0x2228E88
	0x02228E80 CMP W8, W20
	0x02228E84 B.CS 0x2228E90
	0x02228E88 MOV X0, X31
	0x02228E8C BL 0x339D6EC
	0x02228E90 LDR X8, [X22 + 0x20]
	0x02228E94 ADD X23, X23, 0x20
	0x02228E98 ADD X9, X8, 0x135
	0x02228E9C LDRH W9, [X9]
	0x02228EA0 TBNZ X9, 0x0, 0x2228ED4
	0x02228EA4 MOV X0, X8
	0x02228EA8 BL 0x1C5C684
	0x02228EAC LDR X8, [X22 + 0x20]
	0x02228EB0 ADD X9, X8, 0x135
	0x02228EB4 LDRH W9, [X9]
	0x02228EB8 B 0x2228ED8
	0x02228EBC ORR W8, W20, W21, 0x0
	0x02228EC0 CBZ W8, 0x2228ECC
	0x02228EC4 MOV X0, X31
	0x02228EC8 BL 0x339D6EC
	0x02228ECC STP X31, X31, [X19]
	0x02228ED0 B 0x2228F10
	0x02228ED4 MOV X0, X8
	0x02228ED8 LDR X10, [X0 + 0xC0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X20, X2
	008 Move X21, X1
	009 Move X19, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {26}
	012 Move X0, 0x1ED3000
	013 Move X0, [X0+1520]
	014 Call 0x1C17CF4
	015 Move X0, 0x1ECD000
	016 Move X0, [X0+1136]
	017 Call 0x1C17CF4
	018 Move X0, 0x1ECF000
	019 Move X0, [X0+3832]
	020 Call 0x1C17CF4
	021 Move X8, [X20+56]
	022 Compare X8, 0
	023 JumpIfNotEqual {26}
	024 Move X0, X20
	025 Call 0x1C5D6E0
	026 Move X8, [X21]
	027 Compare X8, 0
	028 JumpIfEqual {37}
	029 Move [X31+8], X31
	030 Move X9, 0x1ECD000
	031 Move X9, [X9+1136]
	032 Move W1, [X8+24]
	033 Add X0, X31, 8
	034 Move X2, [X9]
	035 Call Nullable`1<Int32>..ctor, X0, X1
	036 Move X8, [X31+8]
	037 Move W22, [X19+8]
	038 And W31, W8, 255
	039 Move X8, X8
	040 ShiftRight X8, 32
	041 And X8, X8, 0x7FFFFFFF
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X1, [X21]
	044 Move X8, [X20+56]
	045 Move X0, [X8+32]
	046 Move W8, [X0+309]
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {52}
	051 Call 0x1C5D684
	052 Move W1, W22
	053 Call 0x1C17D6C
	054 Move X1, X0
	055 Move [X21], X0
	056 Move X8, [X20+56]
	057 Move W2, 1
	058 Move X0, X19
	059 Move X3, [X8+40]
	060 Call 0x240C518, X0, X1, X2
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Return 

Method: T[] CloneArray(T[] array)

Disassembly:
	0x02228D78 TBNZ X8, 0x0, 0x2228D80
	0x02228D7C BL 0x1C5C684
	0x02228D80 LDR X8, [X0 + 0xC0]
	0x02228D84 LDR X8, [X8 + 0x10]
	0x02228D88 LDR W25, [X8 + 0xFC]
	0x02228D8C ADD X8, X31, 0x0
	0x02228D90 ADD X9, X25, 0xF
	0x02228D94 AND X9, X9, 0x1FFFFFFFF
	0x02228D98 SUB X24, X8, X9
	0x02228D9C ADD X31, X24, 0x0
	0x02228DA0 ADD X8, X31, 0x0
	0x02228DA4 SUB X26, X8, X9
	0x02228DA8 ADD X31, X26, 0x0
	0x02228DAC MOV X0, X26
	0x02228DB0 MOV W1, W31
	0x02228DB4 MOV X2, X25
	0x02228DB8 BL 0x3EB1B10
	0x02228DBC CBZ X23, 0x2228EBC
	0x02228DC0 MOV X0, X26
	0x02228DC4 MOV W1, W31
	0x02228DC8 MOV X2, X25
	0x02228DCC BL 0x3EB1B10
	0x02228DD0 MOV X0, X24
	0x02228DD4 MOV X1, X26
	0x02228DD8 MOV X2, X25
	0x02228DDC BL 0x3EB1AC0
	0x02228DE0 LDR X0, [X22 + 0x20]
	0x02228DE4 LDRB W8, [X0 + 0x135]
	0x02228DE8 TBNZ X8, 0x0, 0x2228DF0
	0x02228DEC BL 0x1C5C684
	0x02228DF0 LDR X8, [X0 + 0xC0]
	0x02228DF4 MOV X1, X24

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X19, X0
	006 Compare X8, 0
	007 JumpIfEqual {30}
	008 Compare X19, 0
	009 JumpIfEqual {36}
	010 Move X0, [X8+16]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Move W1, [X19+24]
	018 Call 0x1C17D6C
	019 Move W2, [X19+24]
	020 Move X20, X0
	021 Move X0, X19
	022 Move X1, X20
	023 Move X3, X31
	024 Call Array.Copy, X0, X1, X2
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Move X0, X1
	031 Move X20, X1
	032 Call 0x1C5D6E0
	033 Move X8, [X20+56]
	034 Compare X19, 0
	035 JumpIfNotEqual {10}
	036 Move X0, [X8+8]
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X1, [X0]
	040 Move X30, [X31+32]
	041 CallNoReturn X1

Method: System.Void InitializeNetworkList(Fusion.NetworkLinkedList`1<T> networkList, T[] sourceArray, System.String name)

Disassembly:
	0x0222AB40 LDR X8, [X21 + 0x38]
	0x0222AB44 LDR X0, [X8]
	0x0222AB48 BL 0x211B0E8
	0x0222AB4C LDR X8, [X19]
	0x0222AB50 CBZ X8, 0x222AB8C
	0x0222AB54 CBZ X20, 0x222ABB4
	0x0222AB58 LDR W9, [X20 + 0x18]
	0x0222AB5C LDR W10, [X8 + 0x18]
	0x0222AB60 CMP W9, W10
	0x0222AB64 B.NE 0x222AB90
	0x0222AB68 LDR X9, [X21 + 0x38]
	0x0222AB6C MOV X2, X0
	0x0222AB70 MOV X0, X8
	0x0222AB74 MOV X1, X20
	0x0222AB78 LDR X3, [X9 + 0x30]
	0x0222AB7C BL 0x21D2B38
	0x0222AB80 TBZ X0, 0x0, 0x222AB90
	0x0222AB84 MOV W0, W31
	0x0222AB88 B 0x222ABA8
	0x0222AB8C CBZ X20, 0x222ABB4
	0x0222AB90 LDR X8, [X21 + 0x38]
	0x0222AB94 MOV X0, X20
	0x0222AB98 LDR X1, [X8 + 0x48]
	0x0222AB9C BL 0x301DDC4
	0x0222ABA0 STR X0, [X19]
	0x0222ABA4 MOVZ W0, 0x1
	0x0222ABA8 LDP X20, X19, [X31 + 0x10]
	0x0222ABAC LDP X30, X21, [X31], #0x20
	0x0222ABB0 RET
	0x0222ABB4 BL 0x1C16F20
	0x0222ABB8 STP X30, X21, [X31 - 0x20]!
	0x0222ABBC STP X20, X19, [X31 + 0x10]
	0x0222ABC0 LDR X8, [X4 + 0x38]
	0x0222ABC4 MOV W19, W3
	0x0222ABC8 MOV X20, X2
	0x0222ABCC CBNZ X8, 0x222ABE0
	0x0222ABD0 MOV X0, X4
	0x0222ABD4 MOV X21, X4
	0x0222ABD8 BL 0x1C5C6E0
	0x0222ABDC LDR X8, [X21 + 0x38]
	0x0222ABE0 LDR X0, [X8]
	0x0222ABE4 BL 0x211D35C
	0x0222ABE8 CBZ X0, 0x222AC1C
	0x0222ABEC LDR X8, [X0]
	0x0222ABF0 LDR W1, [X20]
	0x0222ABF4 MOV W2, W19
	0x0222ABF8 LDP X9, X3, [X8 + 0x1B8]
	0x0222ABFC BLR X9
	0x0222AC00 TBNZ X0, 0x0, 0x222AC08
	0x0222AC04 STR W19, [X20]
	0x0222AC08 LDP X20, X19, [X31 + 0x10]
	0x0222AC0C ORN W8, W31, W0, 0x0
	0x0222AC10 AND W0, W8, 0x1
	0x0222AC14 LDP X30, X21, [X31], #0x20
	0x0222AC18 RET
	0x0222AC1C BL 0x1C16F20
	0x0222AC20 STP X29, X30, [X31 - 0x60]!
	0x0222AC24 STR X27, [X31 + 0x10]
	0x0222AC28 STP X26, X25, [X31 + 0x20]
	0x0222AC2C STP X24, X23, [X31 + 0x30]
	0x0222AC30 STP X22, X21, [X31 + 0x40]
	0x0222AC34 STP X20, X19, [X31 + 0x50]
	0x0222AC38 ADD X29, X31, 0x0
	0x0222AC3C SUB X31, X31, 0x30
	0x0222AC40 MRS X26, 0xC000
	0x0222AC44 LDR X8, [X26 + 0x28]
	0x0222AC48 MOV X19, X4
	0x0222AC4C MOV X21, X3
	0x0222AC50 MOV X20, X2
	0x0222AC54 STUR X8, [X29 - 0x8]
	0x0222AC58 STUR X3, [X29 - 0x28]
	0x0222AC5C LDR X8, [X4 + 0x38]
	0x0222AC60 CBNZ X8, 0x222AC70
	0x0222AC64 MOV X0, X19
	0x0222AC68 BL 0x1C5C6E0
	0x0222AC6C LDR X8, [X19 + 0x38]
	0x0222AC70 LDR X9, [X8 + 0x20]
	0x0222AC74 LDR W22, [X9 + 0xFC]
	0x0222AC78 ADD X9, X31, 0x0
	0x0222AC7C ADD X10, X22, 0xF
	0x0222AC80 AND X10, X10, 0x1FFFFFFFF
	0x0222AC84 SUB X23, X9, X10
	0x0222AC88 ADD X31, X23, 0x0
	0x0222AC8C ADD X9, X31, 0x0
	0x0222AC90 SUB X25, X9, X10

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Add X29, X31, 0
	012 Subtract X31, X31, 16
	013 NotImplemented "Instruction MRS not yet implemented."
	014 Move X8, [X25+40]
	015 Move X19, X3
	016 Move X20, X1
	017 Move X21, X0
	018 Move [X29-8], X8
	019 Move X8, [X3+56]
	020 Compare X8, 0
	021 JumpIfNotEqual {25}
	022 Move X0, X19
	023 Call 0x1C5D6E0
	024 Move X8, [X19+56]
	025 Move X9, [X8+40]
	026 Move W22, [X9+252]
	027 Add X9, X31, 0
	028 Add X10, X22, 15
	029 And X10, X10, 0x1FFFFFFFF
	030 Subtract X23, X9, X10
	031 Add X31, X23, 0
	032 Compare X20, 0
	033 JumpIfEqual {77}
	034 Move W24, [X20+24]
	035 Compare W24, 0
	036 JumpIfEqual {77}
	037 Move X1, [X8+16]
	038 Move X0, X21
	039 Move X8, [X1]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X8, [X19+56]
	043 Move X0, X21
	044 Move X1, [X8+16]
	045 Move X8, [X1]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move W24, W0
	048 Move X8, [X19+56]
	049 Move X0, X21
	050 Move X1, [X8+32]
	051 Move X8, [X1]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X26, X31
	055 Move W24, W24
	056 Move W8, [X20+24]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X8, [X20]
	059 Move X0, X23
	060 Move X2, X22
	061 Move W8, [X8+260]
	062 NotImplemented "Instruction NOP not yet implemented."
	063 NotImplemented "Instruction MADD not yet implemented."
	064 Add X1, X8, 32
	065 Call 0x3EB2AC0
	066 Move X8, [X19+56]
	067 Subtract X3, X29, 16
	068 Move X2, X21
	069 Move X4, X23
	070 Move X1, [X8+48]
	071 Move X0, [X1]
	072 Move [X29-16], X23
	073 Move X8, [X1+16]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Add X26, X26, 1
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X8, [X25+40]
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Add X31, X29, 0
	081 Move X20, [X31+64]
	082 Move X19, [X31+72]
	083 Move X22, [X31+48]
	084 Move X21, [X31+56]
	085 Move X24, [X31+32]
	086 Move X23, [X31+40]
	087 Move X26, [X31+16]
	088 Move X25, [X31+24]
	089 Move X29, [X31+80]
	090 Move X30, [X31+88]
	091 Return 
	092 Call 0x1C17F28
	093 Call 0x3EB2B20

Method: System.Void CopyFromNetworkList(Fusion.NetworkLinkedList`1<T> networkList, ref T[] dstArray)

Disassembly:
	0x02229A10 ADD X10, X10, 0x10
	0x02229A14 B.NE 0x2229A00
	0x02229A18 MOV X0, X21
	0x02229A1C MOV W2, W31
	0x02229A20 BL 0x1C5C788
	0x02229A24 B 0x2229A34
	0x02229A28 LDRSW X9, [X10]
	0x02229A2C ADD X8, X8, X9, 0x4, LSL
	0x02229A30 ADD X0, X8, 0x138
	0x02229A34 LDP X8, X1, [X0]
	0x02229A38 MOV X0, X21
	0x02229A3C BLR X8
	0x02229A40 CBNZ X19, 0x2229A7C
	0x02229A44 LDUR X8, [X29 - 0x38]
	0x02229A48 LDR X8, [X8 + 0x28]
	0x02229A4C LDUR X9, [X29 - 0x8]
	0x02229A50 CMP X8, X9
	0x02229A54 B.NE 0x2229A84
	0x02229A58 ADD X31, X29, 0x0
	0x02229A5C LDP X20, X19, [X31 + 0x50]
	0x02229A60 LDP X22, X21, [X31 + 0x40]
	0x02229A64 LDP X24, X23, [X31 + 0x30]
	0x02229A68 LDP X26, X25, [X31 + 0x20]
	0x02229A6C LDP X28, X27, [X31 + 0x10]
	0x02229A70 LDP X29, X30, [X31], #0x60
	0x02229A74 RET
	0x02229A78 BL 0x1C16F20
	0x02229A7C MOV X0, X19
	0x02229A80 BL 0x1C16F18
	0x02229A84 BL 0x3EB1B20
	0x02229A88 B 0x2229A98
	0x02229A8C B 0x2229A98
	0x02229A90 B 0x2229A98
	0x02229A94 B 0x2229A98
	0x02229A98 MOV X20, X0
	0x02229A9C CMP W1, 0x1
	0x02229AA0 B.NE 0x2229AB8
	0x02229AA4 MOV X0, X20
	0x02229AA8 BL 0x3EB1AD0
	0x02229AAC LDR X19, [X0]
	0x02229AB0 BL 0x3EB1AE0
	0x02229AB4 B 0x22299DC
	0x02229AB8 MOV X19, X31
	0x02229ABC B 0x2229AC4
	0x02229AC0 MOV X20, X0
	0x02229AC4 CBZ X21, 0x2229B28
	0x02229AC8 ADRP X10, 0x1ECA000
	0x02229ACC LDR X8, [X21]
	0x02229AD0 LDR X10, [X10 + 0xE00]
	0x02229AD4 LDRH W9, [X8 + 0x12E]
	0x02229AD8 LDR X1, [X10]
	0x02229ADC CBZ X9, 0x2229B00
	0x02229AE0 LDR X10, [X8 + 0xB0]
	0x02229AE4 ADD X10, X10, 0x8
	0x02229AE8 LDUR X11, [X10 - 0x8]
	0x02229AEC CMP X11, X1
	0x02229AF0 B.EQ 0x2229B10
	0x02229AF4 SUBS X9, X9, 0x1
	0x02229AF8 ADD X10, X10, 0x10
	0x02229AFC B.NE 0x2229AE8
	0x02229B00 MOV X0, X21
	0x02229B04 MOV W2, W31
	0x02229B08 BL 0x1C5C788
	0x02229B0C B 0x2229B1C
	0x02229B10 LDRSW X9, [X10]
	0x02229B14 ADD X8, X8, X9, 0x4, LSL
	0x02229B18 ADD X0, X8, 0x138
	0x02229B1C LDP X8, X1, [X0]
	0x02229B20 MOV X0, X21
	0x02229B24 BLR X8
	0x02229B28 CBNZ X19, 0x2229B34
	0x02229B2C MOV X0, X20
	0x02229B30 BL 0x1D2C690
	0x02229B34 MOV X0, X19
	0x02229B38 BL 0x1C16F18
	0x02229B3C BL 0x1990590
	0x02229B40 STP X29, X30, [X31 - 0x50]!
	0x02229B44 STP X26, X25, [X31 + 0x10]
	0x02229B48 STP X24, X23, [X31 + 0x20]
	0x02229B4C STP X22, X21, [X31 + 0x30]
	0x02229B50 STP X20, X19, [X31 + 0x40]
	0x02229B54 ADD X29, X31, 0x0
	0x02229B58 SUB X31, X31, 0x10
	0x02229B5C MRS X25, 0xC000
	0x02229B60 LDR X8, [X25 + 0x28]
	0x02229B64 MOV X19, X3
	0x02229B68 MOV X20, X1
	0x02229B6C MOV X21, X0
	0x02229B70 STUR X8, [X29 - 0x8]
	0x02229B74 LDR X8, [X3 + 0x38]
	0x02229B78 CBNZ X8, 0x2229B88
	0x02229B7C MOV X0, X19
	0x02229B80 BL 0x1C5C6E0
	0x02229B84 LDR X8, [X19 + 0x38]
	0x02229B88 LDR X9, [X8 + 0x28]
	0x02229B8C LDR W22, [X9 + 0xFC]
	0x02229B90 ADD X9, X31, 0x0
	0x02229B94 ADD X10, X22, 0xF
	0x02229B98 AND X10, X10, 0x1FFFFFFFF
	0x02229B9C SUB X23, X9, X10
	0x02229BA0 ADD X31, X23, 0x0
	0x02229BA4 CBZ X20, 0x2229C60
	0x02229BA8 LDR W24, [X20 + 0x18]
	0x02229BAC CBZ W24, 0x2229C60
	0x02229BB0 LDR X1, [X8 + 0x10]
	0x02229BB4 MOV X0, X21
	0x02229BB8 LDR X8, [X1]
	0x02229BBC BLR X8
	0x02229BC0 CMP W0, W24
	0x02229BC4 B.GE 0x2229BE0
	0x02229BC8 LDR X8, [X19 + 0x38]
	0x02229BCC MOV X0, X21
	0x02229BD0 LDR X1, [X8 + 0x10]
	0x02229BD4 LDR X8, [X1]
	0x02229BD8 BLR X8
	0x02229BDC MOV W24, W0
	0x02229BE0 LDR X8, [X19 + 0x38]
	0x02229BE4 MOV X0, X21
	0x02229BE8 LDR X1, [X8 + 0x20]
	0x02229BEC LDR X8, [X1]
	0x02229BF0 BLR X8
	0x02229BF4 CMP W24, 0x1
	0x02229BF8 B.LT 0x2229C60
	0x02229BFC MOV X26, X31
	0x02229C00 MOV W24, W24
	0x02229C04 LDR W8, [X20 + 0x18]
	0x02229C08 CMP X26, X8
	0x02229C0C B.CS 0x2229C8C
	0x02229C10 LDR X8, [X20]
	0x02229C14 MOV X0, X23
	0x02229C18 MOV X2, X22
	0x02229C1C LDR W8, [X8 + 0x104]
	0x02229C20 NOP
	0x02229C24 MADD X8, X26, X8, X20
	0x02229C28 ADD X1, X8, 0x20
	0x02229C2C BL 0x3EB1AC0
	0x02229C30 LDR X8, [X19 + 0x38]
	0x02229C34 SUB X3, X29, 0x10
	0x02229C38 MOV X2, X21
	0x02229C3C MOV X4, X23
	0x02229C40 LDR X1, [X8 + 0x30]
	0x02229C44 LDR X0, [X1]
	0x02229C48 STUR X23, [X29 - 0x10]
	0x02229C4C LDR X8, [X1 + 0x10]
	0x02229C50 BLR X8
	0x02229C54 ADD X26, X26, 0x1
	0x02229C58 CMP X24, X26
	0x02229C5C B.NE 0x2229C04
	0x02229C60 LDR X8, [X25 + 0x28]
	0x02229C64 LDUR X9, [X29 - 0x8]
	0x02229C68 CMP X8, X9
	0x02229C6C B.NE 0x2229C90
	0x02229C70 ADD X31, X29, 0x0
	0x02229C74 LDP X20, X19, [X31 + 0x40]
	0x02229C78 LDP X22, X21, [X31 + 0x30]
	0x02229C7C LDP X24, X23, [X31 + 0x20]
	0x02229C80 LDP X26, X25, [X31 + 0x10]
	0x02229C84 LDP X29, X30, [X31], #0x50
	0x02229C88 RET
	0x02229C8C BL 0x1C16F28
	0x02229C90 BL 0x3EB1B20
	0x02229C94 STR X30, [X31 - 0x20]!
	0x02229C98 STP X20, X19, [X31 + 0x10]
	0x02229C9C LDR X8, [X1 + 0x38]
	0x02229CA0 MOV X19, X0
	0x02229CA4 CBNZ X8, 0x2229CB8
	0x02229CA8 MOV X0, X1
	0x02229CAC MOV X20, X1
	0x02229CB0 BL 0x1C5C6E0
	0x02229CB4 LDR X8, [X20 + 0x38]
	0x02229CB8 LDR X1, [X8 + 0x8]
	0x02229CBC MOV X0, X19
	0x02229CC0 LDP X20, X19, [X31 + 0x10]
	0x02229CC4 LDR X2, [X1]
	0x02229CC8 LDR X30, [X31], #0x20
	0x02229CCC BR X2
	0x02229CD0 RET
	0x02229CD4 RET
	0x02229CD8 RET
	0x02229CDC RET
	0x02229CE0 RET
	0x02229CE4 STP X29, X30, [X31 - 0x40]!
	0x02229CE8 STR X23, [X31 + 0x10]
	0x02229CEC STP X22, X21, [X31 + 0x20]
	0x02229CF0 STP X20, X19, [X31 + 0x30]
	0x02229CF4 ADD X29, X31, 0x0
	0x02229CF8 SUB X31, X31, 0x20
	0x02229CFC MRS X22, 0xC000
	0x02229D00 LDR X8, [X22 + 0x28]
	0x02229D04 MOV X20, X1
	0x02229D08 MOV X19, X0
	0x02229D0C STUR X8, [X29 - 0x8]
	0x02229D10 LDR X23, [X2 + 0x38]
	0x02229D14 CBNZ X23, 0x2229D28
	0x02229D18 MOV X0, X2
	0x02229D1C MOV X21, X2
	0x02229D20 BL 0x1C5C6E0
	0x02229D24 LDR X23, [X21 + 0x38]
	0x02229D28 LDR X8, [X23]
	0x02229D2C LDR W2, [X8 + 0xFC]
	0x02229D30 ADD X8, X31, 0x0
	0x02229D34 ADD X9, X2, 0xF
	0x02229D38 AND X9, X9, 0x1FFFFFFFF
	0x02229D3C SUB X21, X8, X9
	0x02229D40 ADD X31, X21, 0x0
	0x02229D44 MOV X0, X21
	0x02229D48 MOV X1, X20
	0x02229D4C BL 0x3EB1AC0
	0x02229D50 LDR X1, [X23 + 0x8]
	0x02229D54 SUB X3, X29, 0x18
	0x02229D58 SUB X4, X29, 0xC
	0x02229D5C MOV X2, X31
	0x02229D60 LDR X0, [X1]
	0x02229D64 STUR X21, [X29 - 0x18]
	0x02229D68 LDR X8, [X1 + 0x10]
	0x02229D6C BLR X8
	0x02229D70 LDUR W1, [X29 - 0xC]
	0x02229D74 MOV X0, X19
	0x02229D78 MOV X2, X31
	0x02229D7C BL 0x1E8CF30
	0x02229D80 LDR X8, [X22 + 0x28]
	0x02229D84 LDUR X9, [X29 - 0x8]
	0x02229D88 CMP X8, X9
	0x02229D8C B.NE 0x2229DAC
	0x02229D90 AND W0, W0, 0x1
	0x02229D94 ADD X31, X29, 0x0
	0x02229D98 LDP X20, X19, [X31 + 0x30]
	0x02229D9C LDP X22, X21, [X31 + 0x20]
	0x02229DA0 LDR X23, [X31 + 0x10]
	0x02229DA4 LDP X29, X30, [X31], #0x40
	0x02229DA8 RET
	0x02229DAC BL 0x3EB1B20
	0x02229DB0 STP X29, X30, [X31 - 0x40]!
	0x02229DB4 STP X24, X23, [X31 + 0x10]
	0x02229DB8 STP X22, X21, [X31 + 0x20]
	0x02229DBC STP X20, X19, [X31 + 0x30]
	0x02229DC0 ADD X29, X31, 0x0
	0x02229DC4 SUB X31, X31, 0x20
	0x02229DC8 MRS X23, 0xC000
	0x02229DCC LDR X8, [X23 + 0x28]
	0x02229DD0 MOV W19, W2
	0x02229DD4 MOV X21, X1
	0x02229DD8 MOV X20, X0
	0x02229DDC STUR X8, [X29 - 0x8]
	0x02229DE0 LDR X24, [X3 + 0x38]
	0x02229DE4 CBNZ X24, 0x2229DF8
	0x02229DE8 MOV X0, X3
	0x02229DEC MOV X22, X3
	0x02229DF0 BL 0x1C5C6E0
	0x02229DF4 LDR X24, [X22 + 0x38]
	0x02229DF8 LDR X8, [X24]
	0x02229DFC LDR W2, [X8 + 0xFC]
	0x02229E00 ADD X8, X31, 0x0
	0x02229E04 ADD X9, X2, 0xF
	0x02229E08 AND X9, X9, 0x1FFFFFFFF
	0x02229E0C SUB X22, X8, X9
	0x02229E10 ADD X31, X22, 0x0
	0x02229E14 MOV X0, X22
	0x02229E18 MOV X1, X21
	0x02229E1C BL 0x3EB1AC0
	0x02229E20 LDR X1, [X24 + 0x8]
	0x02229E24 SUB X3, X29, 0x18
	0x02229E28 SUB X4, X29, 0xC
	0x02229E2C MOV X2, X31
	0x02229E30 LDR X0, [X1]
	0x02229E34 STUR X22, [X29 - 0x18]
	0x02229E38 LDR X8, [X1 + 0x10]
	0x02229E3C BLR X8
	0x02229E40 LDUR W1, [X29 - 0xC]
	0x02229E44 AND W2, W19, 0x1
	0x02229E48 MOV X0, X20
	0x02229E4C MOV X3, X31
	0x02229E50 BL 0x1E8CF70
	0x02229E54 LDR X8, [X23 + 0x28]
	0x02229E58 LDUR X9, [X29 - 0x8]
	0x02229E5C CMP X8, X9
	0x02229E60 B.NE 0x2229E7C
	0x02229E64 ADD X31, X29, 0x0
	0x02229E68 LDP X20, X19, [X31 + 0x30]
	0x02229E6C LDP X22, X21, [X31 + 0x20]
	0x02229E70 LDP X24, X23, [X31 + 0x10]
	0x02229E74 LDP X29, X30, [X31], #0x40
	0x02229E78 RET
	0x02229E7C BL 0x3EB1B20
	0x02229E80 STP X29, X30, [X31 - 0x40]!
	0x02229E84 STR X23, [X31 + 0x10]
	0x02229E88 STP X22, X21, [X31 + 0x20]
	0x02229E8C STP X20, X19, [X31 + 0x30]
	0x02229E90 ADD X29, X31, 0x0
	0x02229E94 SUB X31, X31, 0x20
	0x02229E98 MRS X22, 0xC000
	0x02229E9C LDR X8, [X22 + 0x28]
	0x02229EA0 MOV X20, X1
	0x02229EA4 MOV X19, X0
	0x02229EA8 STUR X8, [X29 - 0x8]
	0x02229EAC LDR X23, [X2 + 0x38]
	0x02229EB0 CBNZ X23, 0x2229EC4
	0x02229EB4 MOV X0, X2
	0x02229EB8 MOV X21, X2
	0x02229EBC BL 0x1C5C6E0
	0x02229EC0 LDR X23, [X21 + 0x38]
	0x02229EC4 LDR X8, [X23]
	0x02229EC8 LDR W2, [X8 + 0xFC]
	0x02229ECC ADD X8, X31, 0x0
	0x02229ED0 ADD X9, X2, 0xF
	0x02229ED4 AND X9, X9, 0x1FFFFFFFF
	0x02229ED8 SUB X21, X8, X9
	0x02229EDC ADD X31, X21, 0x0
	0x02229EE0 MOV X0, X21
	0x02229EE4 MOV X1, X20
	0x02229EE8 BL 0x3EB1AC0
	0x02229EEC LDR X1, [X23 + 0x8]
	0x02229EF0 SUB X3, X29, 0x18
	0x02229EF4 SUB X4, X29, 0xC
	0x02229EF8 MOV X2, X31
	0x02229EFC LDR X0, [X1]
	0x02229F00 STUR X21, [X29 - 0x18]
	0x02229F04 LDR X8, [X1 + 0x10]
	0x02229F08 BLR X8
	0x02229F0C LDUR W1, [X29 - 0xC]
	0x02229F10 MOV X0, X19
	0x02229F14 MOV X2, X31
	0x02229F18 BL 0x1E8CF40
	0x02229F1C LDR X8, [X22 + 0x28]
	0x02229F20 LDUR X9, [X29 - 0x8]
	0x02229F24 CMP X8, X9
	0x02229F28 B.NE 0x2229F44
	0x02229F2C ADD X31, X29, 0x0
	0x02229F30 LDP X20, X19, [X31 + 0x30]
	0x02229F34 LDP X22, X21, [X31 + 0x20]
	0x02229F38 LDR X23, [X31 + 0x10]
	0x02229F3C LDP X29, X30, [X31], #0x40
	0x02229F40 RET

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 80
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X27+40]
	017 Move X19, X2
	018 Move X20, X1
	019 Move X25, X0
	020 Move [X29-8], X8
	021 Move X26, [X2+56]
	022 Compare X26, 0
	023 JumpIfNotEqual {39}
	024 Move X0, 0x1ED2000
	025 Move X0, [X0+1520]
	026 Call 0x1C17CF4
	027 Move X0, 0x1ECC000
	028 Move X0, [X0+1136]
	029 Call 0x1C17CF4
	030 Move X0, 0x1ECE000
	031 Move X0, [X0+3832]
	032 Call 0x1C17CF4
	033 Move X26, [X19+56]
	034 Compare X26, 0
	035 JumpIfNotEqual {39}
	036 Move X0, X19
	037 Call 0x1C5D6E0
	038 Move X26, [X19+56]
	039 Move X8, [X26+72]
	040 Move W21, [X8+252]
	041 Add X8, X31, 0
	042 Add X9, X21, 15
	043 And X9, X9, 0x1FFFFFFFF
	044 Subtract X22, X8, X9
	045 Add X31, X22, 0
	046 Add X8, X31, 0
	047 Subtract X23, X8, X9
	048 Add X31, X23, 0
	049 Add X8, X31, 0
	050 NotImplemented "Instruction MOVI not yet implemented."
	051 Subtract X24, X8, X9
	052 Move [X29-48], V0
	053 Move [X29-40], V0
	054 Add X31, X24, 0
	055 Move X0, X24
	056 Move W1, W31
	057 Move X2, X21
	058 Call 0x3EB2B10
	059 Move X8, [X20]
	060 Compare X8, 0
	061 JumpIfEqual {71}
	062 Move [X29-80], X31
	063 Move X9, 0x1ECC000
	064 Move X9, [X9+1136]
	065 Move W1, [X8+24]
	066 Subtract X0, X29, 80
	067 Move X2, [X9]
	068 Call Nullable`1<Int32>..ctor, X0, X1
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 Move X26, [X19+56]
	071 Move X28, X31
	072 Move X1, [X26+16]
	073 Move X0, X25
	074 And W26, W28, 255
	075 Move X8, [X1]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Compare W26, 0
	078 JumpIfEqual {83}
	079 Move X8, X28
	080 ShiftRight X8, 32
	081 And X8, X8, 0x7FFFFFFF
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X8, [X19+56]
	084 Move X0, X25
	085 Move X1, [X8+16]
	086 Move X8, [X1]
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move X8, [X19+56]
	089 Move W26, W0
	090 Move X8, [X8+32]
	091 Move W9, [X8+309]
	092 Move TEMP, X9
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {99}
	096 Move X0, X8
	097 Call 0x1C5D684
	098 Move X8, X0
	099 Move X0, X8
	100 Move W1, W26
	101 Call 0x1C17D6C
	102 Move [X20], X0
	103 Move X8, [X19+56]
	104 Move X0, X25
	105 Move X1, [X8+40]
	106 Subtract X8, X29, 80
	107 Move X9, [X1]
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move V0, [X29-80]
	110 Move V1, [X29-64]
	111 Move W25, W31
	112 Move [X29-48], V0
	113 Move [X29-40], V1
	114 Move X8, [X19+56]
	115 Move X1, [X8+80]
	116 Move X8, [X1]
	117 Subtract X0, X29, 48
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {167}
	123 Move X8, [X19+56]
	124 Move X1, [X8+56]
	125 Move X0, [X1]
	126 Move [X29-80], X22
	127 Move X8, [X1+16]
	128 Subtract X2, X29, 48
	129 Subtract X3, X29, 80
	130 Move X4, X22
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move X0, X24
	133 Move X1, X22
	134 Move X2, X21
	135 Call 0x3EB2AC0
	136 Move X26, [X20]
	137 Move X0, X23
	138 Move X1, X24
	139 Move X2, X21
	140 Call 0x3EB2AC0
	141 Compare X26, 0
	142 JumpIfEqual {192}
	143 Move W8, [X26+24]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X8, [X26]
	146 Move X9, W25
	147 Move X1, X23
	148 Move X2, X21
	149 Move W8, [X8+260]
	150 NotImplemented "Instruction NOP not yet implemented."
	151 NotImplemented "Instruction MADD not yet implemented."
	152 Add X0, X8, 32
	153 Call 0x3EB2AC0
	154 Move X8, [X19+56]
	155 Move X0, [X8+72]
	156 Move W8, [X0+309]
	157 Move TEMP, X8
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfEqual {162}
	161 Call 0x1C5D684
	162 Move W8, [X26+24]
	163 Add W25, W25, 1
	164 Subtract W9, W25, 1
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Call 0x1C17F28
	167 Move X21, X31
	168 Move X8, [X19+56]
	169 Subtract X0, X29, 48
	170 Move X1, [X8+88]
	171 Call 0x2BD8940, X0
	172 Compare X21, 0
	173 JumpIfNotEqual {193}
	174 Move X8, [X27+40]
	175 NotImplemented "Instruction LDUR not yet implemented."
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Add X31, X29, 0
	178 Move X20, [X31+80]
	179 Move X19, [X31+88]
	180 Move X22, [X31+64]
	181 Move X21, [X31+72]
	182 Move X24, [X31+48]
	183 Move X23, [X31+56]
	184 Move X26, [X31+32]
	185 Move X25, [X31+40]
	186 Move X28, [X31+16]
	187 Move X27, [X31+24]
	188 Move X29, [X31+96]
	189 Move X30, [X31+104]
	190 Return 
	191 Call 0x1C17F28
	192 Call 0x1C17F20
	193 Move X0, X21
	194 Call 0x1C17F18
	195 Call 0x3EB2B20
	196 Move X20, X0
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move X0, X20
	199 Call 0x3EB2AD0
	200 Move X21, [X0]
	201 Call 0x3EB2AE0
	202 Move X21, X31
	203 Move X20, X0
	204 Move X8, [X19+56]
	205 Move X1, [X8+88]
	206 Subtract X0, X29, 48
	207 Call 0x2BD8940, X0
	208 Compare X21, 0
	209 JumpIfNotEqual {212}
	210 Move X0, X20
	211 Call 0x1D2D690
	212 Move X0, X21
	213 Call 0x1C17F18
	214 Call 0x1991590
	215 Move [X31-96], X29
	216 Move [X31-88], X30
	217 Move [X31+16], X27
	218 Move [X31+32], X26
	219 Move [X31+40], X25
	220 Move [X31+48], X24
	221 Move [X31+56], X23
	222 Move [X31+64], X22
	223 Move [X31+72], X21
	224 Move [X31+80], X20
	225 Move [X31+88], X19
	226 Add X29, X31, 0
	227 Subtract X31, X31, 16
	228 NotImplemented "Instruction MRS not yet implemented."
	229 Move X8, [X27+40]
	230 Move X24, 0x21B1000
	231 Move X22, X4
	232 Move W20, W3
	233 Move [X29-8], X8
	234 Move W8, [X24+2172]
	235 Move W21, W2
	236 Move X23, X1
	237 Move X19, X0
	238 Compare W8, 0
	239 JumpIfNotEqual {245}
	240 Move X0, 0x1ECB000
	241 Move X0, [X0+1728]
	242 Call 0x1C17CF4
	243 Move W8, 1
	244 Move [X24+2172], W8
	245 Move X0, [X22+32]
	246 Move W8, [X0+309]
	247 Move TEMP, X8
	248 And TEMP, TEMP, 1
	249 Compare TEMP, 1
	250 JumpIfEqual {252}
	251 Call 0x1C5D684
	252 Move X8, [X0+192]
	253 Move X8, [X8+16]
	254 Move W25, [X8+252]
	255 Add X8, X31, 0
	256 Add X9, X25, 15
	257 And X9, X9, 0x1FFFFFFFF
	258 Subtract X24, X8, X9
	259 Add X31, X24, 0
	260 Add X8, X31, 0
	261 Subtract X26, X8, X9
	262 Add X31, X26, 0
	263 Move X0, X26
	264 Move W1, W31
	265 Move X2, X25
	266 Call 0x3EB2B10
	267 Compare X23, 0
	268 JumpIfEqual {345}
	269 Move X0, X26
	270 Move W1, W31
	271 Move X2, X25
	272 Call 0x3EB2B10
	273 Move X0, X24
	274 Move X1, X26
	275 Move X2, X25
	276 Call 0x3EB2AC0
	277 Move X0, [X22+32]
	278 Move W8, [X0+309]
	279 Move TEMP, X8
	280 And TEMP, TEMP, 1
	281 Compare TEMP, 1
	282 JumpIfEqual {284}
	283 Call 0x1C5D684
	284 Move X8, [X0+192]
	285 Move X1, X24
	286 Move X0, [X8+16]
	287 Call 0x1C17ED4
	288 Move TEMP, X0
	289 And TEMP, TEMP, 1
	290 Compare TEMP, 1
	291 JumpIfEqual {327}
	292 Move X0, X23
	293 Move X1, X31
	294 Call "il2cpp_vm_object_is_inst", X0
	295 Move X8, [X22+32]
	296 Move X24, X0
	297 Move W9, [X8+309]
	298 Move TEMP, X9
	299 And TEMP, TEMP, 1
	300 Compare TEMP, 1
	301 JumpIfEqual {305}
	302 Move X0, X8
	303 Call 0x1C5D684
	304 Move X8, X0
	305 Move X9, 0x1ECB000
	306 Move X9, [X9+1728]
	307 Move X8, [X8+192]
	308 Move X0, [X9]
	309 Move X25, [X8+24]
	310 Move W9, [X0+224]
	311 Compare W9, 0
	312 JumpIfNotEqual {314}
	313 Call 0x1C17DFC
	314 Move X0, X25
	315 Move X1, X31
	316 Call Type.GetTypeFromHandle, X0
	317 Move X1, X0
	318 Move X0, X24
	319 Move X2, X31
	320 Call Type.op_Inequality, X0, X1
	321 Move TEMP, X0
	322 And TEMP, TEMP, 1
	323 Compare TEMP, 1
	324 JumpIfNotEqual {327}
	325 Move X0, X31
	326 Call ThrowHelper.ThrowArrayTypeMismatchException
	327 Move W8, [X23+24]
	328 Subtract W8, W8, W21
	329 NotImplemented "Instruction CMP not yet implemented."
	330 Move X0, X31
	331 Call ThrowHelper.ThrowArgumentOutOfRangeException
	332 Move X8, [X22+32]
	333 Add X23, X23, 32
	334 Add X9, X8, 309
	335 NotImplemented "Instruction LDRH not yet implemented."
	336 Move TEMP, X9
	337 And TEMP, TEMP, 1
	338 Compare TEMP, 1
	339 JumpIfEqual {352}
	340 Move X0, X8
	341 Call 0x1C5D684
	342 Move X8, [X22+32]
	343 Add X9, X8, 309
	344 NotImplemented "Instruction LDRH not yet implemented."
	345 Or W8, W20, W21
	346 Compare W8, 0
	347 JumpIfEqual {350}
	348 Move X0, X31
	349 Call ThrowHelper.ThrowArgumentOutOfRangeException
	350 Move [X19], X31
	351 Move [X19+8], X31
	352 Move X0, X8
	353 Move X10, [X0+192]
	354 Move X10, [X10+56]
	355 Move X22, [X10]
	356 Move TEMP, X9
	357 And TEMP, TEMP, 1
	358 Compare TEMP, 1
	359 JumpIfEqual {363}
	360 Move X0, X8
	361 Call 0x1C5D684
	362 Move X8, X0
	363 Move X8, [X8+192]
	364 Move X0, X23
	365 Move W1, W21
	366 Move X2, [X8+56]
	367 NotImplemented "Instruction BLR not yet implemented."
	368 Move [X19], X0
	369 Move [X19+8], W20
	370 Move X8, [X27+40]
	371 NotImplemented "Instruction LDUR not yet implemented."
	372 NotImplemented "Instruction CMP not yet implemented."
	373 Add X31, X29, 0
	374 Move X20, [X31+80]
	375 Move X19, [X31+88]
	376 Move X22, [X31+64]
	377 Move X21, [X31+72]
	378 Move X24, [X31+48]
	379 Move X23, [X31+56]
	380 Move X26, [X31+32]
	381 Move X25, [X31+40]
	382 Move X27, [X31+16]
	383 Move X29, [X31+96]
	384 Move X30, [X31+104]
	385 Return 
	386 Call 0x3EB2B20

Method: System.Void InternalOnDestroy(Fusion.SimulationBehaviour obj)

Disassembly:
	0x01E78BE8 LDR X2, [X9]
	0x01E78BEC LDR W9, [X31 + 0x4]
	0x01E78BF0 ADD W1, W8, W9
	0x01E78BF4 BL 0x22275B4
	0x01E78BF8 STR W28, [X0]
	0x01E78BFC LDR X10, [X31 + 0x8]
	0x01E78C00 LDR W9, [X20 + 0xC0]
	0x01E78C04 LDR W8, [X10]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move W8, [X0+48]
	005 Or W8, W8, 8
	006 Move [X0+48], W8
	007 Move X30, [X31+16]
	008 Return 
	009 Call 0x1C17F20

Method: System.Void InternalOnEnable(Fusion.SimulationBehaviour obj)

Disassembly:
	0x01E78C08 ADD W8, W9, W8
	0x01E78C0C STR W8, [X10]
	0x01E78C10 LDR X0, [X20 + 0xF0]
	0x01E78C14 CBZ X0, 0x1E78C48
	0x01E78C18 ADRP X8, 0x2282000
	0x01E78C1C LDR X8, [X8 + 0x678]
	0x01E78C20 LDP X20, X19, [X31 + 0x70]
	0x01E78C24 LDP X22, X21, [X31 + 0x60]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move W8, [X0+48]
	005 And W8, W8, 0xFFFFFFEF
	006 Move [X0+48], W8
	007 Move X30, [X31+16]
	008 Return 
	009 Call 0x1C17F20

Method: System.Void InternalOnDisable(Fusion.SimulationBehaviour obj)

Disassembly:
	0x01E78C28 LDP X24, X23, [X31 + 0x50]
	0x01E78C2C LDR X1, [X8]
	0x01E78C30 LDP X26, X25, [X31 + 0x40]
	0x01E78C34 LDP X28, X27, [X31 + 0x30]
	0x01E78C38 LDP X29, X30, [X31 + 0x20]
	0x01E78C3C LDP D9, D8, [X31 + 0x10]
	0x01E78C40 ADD X31, X31, 0x80
	0x01E78C44 B 0x2DAA53C

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move W8, [X0+48]
	005 Or W8, W8, 16
	006 Move [X0+48], W8
	007 Move X30, [X31+16]
	008 Return 
	009 Call 0x1C17F20

Method: System.Void InitializeNetworkDictionary(Fusion.NetworkDictionary`2<K, V> networkDictionary, D dictionary, System.String name)

Disassembly:
	0x0222A220 ADRP X9, 0x1EC9000
	0x0222A224 LDR X9, [X9 + 0x6C0]
	0x0222A228 LDR X20, [X8]
	0x0222A22C LDR X0, [X9]
	0x0222A230 LDR W9, [X0 + 0xE0]
	0x0222A234 CBNZ W9, 0x222A23C
	0x0222A238 BL 0x1C16DFC
	0x0222A23C MOV X0, X20
	0x0222A240 MOV X1, X31
	0x0222A244 BL 0x338C698
	0x0222A248 MOV X1, X0
	0x0222A24C MOV X0, X19
	0x0222A250 LDP X20, X19, [X31 + 0x10]
	0x0222A254 MOV X2, X31
	0x0222A258 LDR X30, [X31], #0x20
	0x0222A25C B 0x1EDE1CC
	0x0222A260 STR X30, [X31 - 0x20]!
	0x0222A264 STP X20, X19, [X31 + 0x10]
	0x0222A268 LDR X8, [X1 + 0x38]
	0x0222A26C MOV X19, X0
	0x0222A270 CBNZ X8, 0x222A298
	0x0222A274 ADRP X0, 0x1EC9000
	0x0222A278 LDR X0, [X0 + 0x6C0]
	0x0222A27C MOV X20, X1
	0x0222A280 BL 0x1C16CF4
	0x0222A284 LDR X8, [X20 + 0x38]
	0x0222A288 CBNZ X8, 0x222A298
	0x0222A28C MOV X0, X20
	0x0222A290 BL 0x1C5C6E0
	0x0222A294 LDR X8, [X20 + 0x38]
	0x0222A298 ADRP X9, 0x1EC9000
	0x0222A29C LDR X9, [X9 + 0x6C0]
	0x0222A2A0 LDR X20, [X8]
	0x0222A2A4 LDR X0, [X9]
	0x0222A2A8 LDR W9, [X0 + 0xE0]
	0x0222A2AC CBNZ W9, 0x222A2B4
	0x0222A2B0 BL 0x1C16DFC
	0x0222A2B4 MOV X0, X20
	0x0222A2B8 MOV X1, X31
	0x0222A2BC BL 0x338C698
	0x0222A2C0 MOV X1, X0
	0x0222A2C4 MOV X0, X19
	0x0222A2C8 LDP X20, X19, [X31 + 0x10]
	0x0222A2CC MOV X2, X31
	0x0222A2D0 LDR X30, [X31], #0x20
	0x0222A2D4 B 0x1EDE1CC
	0x0222A2D8 STR X30, [X31 - 0x20]!
	0x0222A2DC STP X20, X19, [X31 + 0x10]
	0x0222A2E0 LDR X8, [X1 + 0x38]
	0x0222A2E4 MOV X19, X0
	0x0222A2E8 CBNZ X8, 0x222A310
	0x0222A2EC ADRP X0, 0x1EC9000
	0x0222A2F0 LDR X0, [X0 + 0x6C0]
	0x0222A2F4 MOV X20, X1
	0x0222A2F8 BL 0x1C16CF4
	0x0222A2FC LDR X8, [X20 + 0x38]
	0x0222A300 CBNZ X8, 0x222A310
	0x0222A304 MOV X0, X20
	0x0222A308 BL 0x1C5C6E0
	0x0222A30C LDR X8, [X20 + 0x38]
	0x0222A310 ADRP X9, 0x1EC9000
	0x0222A314 LDR X9, [X9 + 0x6C0]
	0x0222A318 LDR X20, [X8]
	0x0222A31C LDR X0, [X9]
	0x0222A320 LDR W9, [X0 + 0xE0]
	0x0222A324 CBNZ W9, 0x222A32C
	0x0222A328 BL 0x1C16DFC
	0x0222A32C MOV X0, X20
	0x0222A330 MOV X1, X31
	0x0222A334 BL 0x338C698
	0x0222A338 MOV X1, X0
	0x0222A33C MOV X0, X19
	0x0222A340 LDP X20, X19, [X31 + 0x10]
	0x0222A344 MOV X2, X31
	0x0222A348 LDR X30, [X31], #0x20
	0x0222A34C B 0x1EDE1CC
	0x0222A350 STP X29, X30, [X31 - 0x40]!
	0x0222A354 STR X23, [X31 + 0x10]
	0x0222A358 STP X22, X21, [X31 + 0x20]
	0x0222A35C STP X20, X19, [X31 + 0x30]
	0x0222A360 ADD X29, X31, 0x0
	0x0222A364 SUB X31, X31, 0x10
	0x0222A368 MRS X23, 0xC000
	0x0222A36C LDR X8, [X23 + 0x28]
	0x0222A370 MOV X19, X1
	0x0222A374 MOV X20, X0
	0x0222A378 STUR X8, [X29 - 0x8]
	0x0222A37C LDR X8, [X2 + 0x38]
	0x0222A380 CBNZ X8, 0x222A394
	0x0222A384 MOV X0, X2
	0x0222A388 MOV X21, X2
	0x0222A38C BL 0x1C5C6E0
	0x0222A390 LDR X8, [X21 + 0x38]
	0x0222A394 LDP X1, X9, [X8]
	0x0222A398 LDR W21, [X9 + 0xFC]
	0x0222A39C ADD X9, X31, 0x0
	0x0222A3A0 ADD X10, X21, 0xF
	0x0222A3A4 AND X10, X10, 0x1FFFFFFFF
	0x0222A3A8 SUB X22, X9, X10
	0x0222A3AC ADD X31, X22, 0x0
	0x0222A3B0 LDR X8, [X1]
	0x0222A3B4 MOV X0, X20
	0x0222A3B8 BLR X8
	0x0222A3BC MOV X0, X20
	0x0222A3C0 MOV X1, X31
	0x0222A3C4 BL 0x1EDE034
	0x0222A3C8 MOV X1, X0
	0x0222A3CC MOV X0, X22
	0x0222A3D0 MOV X2, X21
	0x0222A3D4 BL 0x3EB1AC0
	0x0222A3D8 MOV X0, X19
	0x0222A3DC MOV X1, X22
	0x0222A3E0 MOV X2, X21
	0x0222A3E4 BL 0x3EB1AC0
	0x0222A3E8 LDR X8, [X23 + 0x28]
	0x0222A3EC LDUR X9, [X29 - 0x8]
	0x0222A3F0 CMP X8, X9
	0x0222A3F4 B.NE 0x222A410
	0x0222A3F8 ADD X31, X29, 0x0
	0x0222A3FC LDP X20, X19, [X31 + 0x30]
	0x0222A400 LDP X22, X21, [X31 + 0x20]
	0x0222A404 LDR X23, [X31 + 0x10]
	0x0222A408 LDP X29, X30, [X31], #0x40
	0x0222A40C RET
	0x0222A410 BL 0x3EB1B20
	0x0222A414 STR X30, [X31 - 0x20]!
	0x0222A418 STP X20, X19, [X31 + 0x10]
	0x0222A41C LDR X8, [X1 + 0x38]
	0x0222A420 MOV X19, X1
	0x0222A424 MOV X20, X0
	0x0222A428 CBNZ X8, 0x222A448
	0x0222A42C ADRP X0, 0x1EC9000
	0x0222A430 LDR X0, [X0 + 0x6C0]
	0x0222A434 BL 0x1C16CF4
	0x0222A438 LDR X8, [X19 + 0x38]
	0x0222A43C CBNZ X8, 0x222A448
	0x0222A440 MOV X0, X19
	0x0222A444 BL 0x1C5C6E0
	0x0222A448 MOV X0, X20
	0x0222A44C MOV X1, X31
	0x0222A450 BL 0x1EDE060
	0x0222A454 ADRP X8, 0x1EC9000
	0x0222A458 LDR X8, [X8 + 0x6C0]
	0x0222A45C LDR X9, [X19 + 0x38]
	0x0222A460 MOV W19, W0
	0x0222A464 LDR X8, [X8]
	0x0222A468 LDR X20, [X9]
	0x0222A46C LDR W10, [X8 + 0xE0]
	0x0222A470 CBNZ W10, 0x222A47C
	0x0222A474 MOV X0, X8
	0x0222A478 BL 0x1C16DFC
	0x0222A47C MOV X0, X20
	0x0222A480 MOV X1, X31
	0x0222A484 BL 0x338C698
	0x0222A488 MOV X1, X31
	0x0222A48C BL 0x1EDDC2C
	0x0222A490 CMP W19, W0
	0x0222A494 LDP X20, X19, [X31 + 0x10]
	0x0222A498 CSET W0, EQ
	0x0222A49C LDR X30, [X31], #0x20
	0x0222A4A0 RET
	0x0222A4A4 STP X30, X21, [X31 - 0x20]!
	0x0222A4A8 STP X20, X19, [X31 + 0x10]
	0x0222A4AC LDR X8, [X2 + 0x38]
	0x0222A4B0 MOV X19, X1
	0x0222A4B4 MOV X20, X0
	0x0222A4B8 CBNZ X8, 0x222A4CC
	0x0222A4BC MOV X0, X2
	0x0222A4C0 MOV X21, X2
	0x0222A4C4 BL 0x1C5C6E0
	0x0222A4C8 LDR X8, [X21 + 0x38]
	0x0222A4CC LDR X1, [X8]
	0x0222A4D0 MOV X0, X20
	0x0222A4D4 BL 0x222A1E8
	0x0222A4D8 MOV W21, W0
	0x0222A4DC MOV X0, X20
	0x0222A4E0 MOV X1, X31
	0x0222A4E4 BL 0x1EDE034
	0x0222A4E8 MOVZ W2, 0xA8
	0x0222A4EC MOV X1, X19
	0x0222A4F0 BL 0x3EB1B30
	0x0222A4F4 LDP X20, X19, [X31 + 0x10]
	0x0222A4F8 AND W0, W21, 0x1
	0x0222A4FC LDP X30, X21, [X31], #0x20
	0x0222A500 RET
	0x0222A504 STP X30, X21, [X31 - 0x20]!
	0x0222A508 STP X20, X19, [X31 + 0x10]
	0x0222A50C LDR X8, [X2 + 0x38]
	0x0222A510 MOV X19, X1
	0x0222A514 MOV X20, X0
	0x0222A518 CBNZ X8, 0x222A52C
	0x0222A51C MOV X0, X2
	0x0222A520 MOV X21, X2
	0x0222A524 BL 0x1C5C6E0
	0x0222A528 LDR X8, [X21 + 0x38]
	0x0222A52C LDR X1, [X8]
	0x0222A530 MOV X0, X20
	0x0222A534 BL 0x222A260
	0x0222A538 MOV W21, W0
	0x0222A53C MOV X0, X20
	0x0222A540 MOV X1, X31
	0x0222A544 BL 0x1EDE034
	0x0222A548 MOVZ W2, 0x150
	0x0222A54C MOV X1, X19
	0x0222A550 BL 0x3EB1B30
	0x0222A554 LDP X20, X19, [X31 + 0x10]
	0x0222A558 AND W0, W21, 0x1
	0x0222A55C LDP X30, X21, [X31], #0x20
	0x0222A560 RET
	0x0222A564 STP X29, X30, [X31 - 0x50]!
	0x0222A568 STR X25, [X31 + 0x10]
	0x0222A56C STP X24, X23, [X31 + 0x20]
	0x0222A570 STP X22, X21, [X31 + 0x30]
	0x0222A574 STP X20, X19, [X31 + 0x40]
	0x0222A578 ADD X29, X31, 0x0
	0x0222A57C SUB X31, X31, 0x10
	0x0222A580 MRS X25, 0xC000
	0x0222A584 LDR X8, [X25 + 0x28]
	0x0222A588 MOV X19, X2
	0x0222A58C MOV X20, X1
	0x0222A590 MOV X22, X0
	0x0222A594 STUR X8, [X29 - 0x8]
	0x0222A598 LDR X8, [X2 + 0x38]
	0x0222A59C CBNZ X8, 0x222A5AC
	0x0222A5A0 MOV X0, X19
	0x0222A5A4 BL 0x1C5C6E0
	0x0222A5A8 LDR X8, [X19 + 0x38]
	0x0222A5AC LDP X1, X9, [X8]
	0x0222A5B0 LDR W23, [X9 + 0xFC]
	0x0222A5B4 ADD X9, X31, 0x0
	0x0222A5B8 ADD X10, X23, 0xF
	0x0222A5BC AND X10, X10, 0x1FFFFFFFF
	0x0222A5C0 SUB X24, X9, X10
	0x0222A5C4 ADD X31, X24, 0x0
	0x0222A5C8 LDR X8, [X1]
	0x0222A5CC MOV X0, X22
	0x0222A5D0 BLR X8
	0x0222A5D4 MOV W21, W0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X3+56]
	008 Move X19, X3
	009 Move X21, X1
	010 Move X20, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {22}
	013 Move X0, 0x1ECA000
	014 Move X0, [X0+3584]
	015 Call 0x1C17CF4
	016 Move X0, 0x1ECA000
	017 Move X0, [X0+3608]
	018 Call 0x1C17CF4
	019 Move X8, [X19+56]
	020 Compare X8, 0
	021 JumpIfEqual {94}
	022 Compare X21, 0
	023 JumpIfEqual {203}
	024 Move X8, [X19+56]
	025 Move X1, [X8+8]
	026 Move W8, [X1+309]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {34}
	031 Move X0, X1
	032 Call 0x1C5D684
	033 Move X1, X0
	034 Move X8, [X21]
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Compare X9, 0
	037 JumpIfEqual {44}
	038 Move X10, [X8+176]
	039 Add X10, X10, 8
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Subtract X9, X9, 1
	043 Add X10, X10, 16
	044 Move X0, X21
	045 Move W2, W31
	046 Call 0x1C5D788
	047 NotImplemented "Instruction LDRSW not yet implemented."
	048 Add X8, X8, X9
	049 Add X0, X8, 312
	050 Move X8, [X0]
	051 Move X1, [X0+8]
	052 Move X0, X21
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Compare W0, 0
	055 JumpIfEqual {203}
	056 Move X8, [X19+56]
	057 Move W22, W0
	058 Move X0, X20
	059 Move X1, [X8+32]
	060 Call 0x2416788, X0
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X8, [X19+56]
	063 Move X0, X20
	064 Move X1, [X8+32]
	065 Call 0x2416788, X0
	066 Move W22, W0
	067 Move X8, [X19+56]
	068 Move X0, X20
	069 Move X1, [X8+48]
	070 Call 0x2416A70, X0
	071 Move X8, [X19+56]
	072 Move X1, [X8+56]
	073 Move W8, [X1+309]
	074 Move TEMP, X8
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {81}
	078 Move X0, X1
	079 Call 0x1C5D684
	080 Move X1, X0
	081 Move X8, [X21]
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Compare X9, 0
	084 JumpIfEqual {91}
	085 Move X10, [X8+176]
	086 Add X10, X10, 8
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Subtract X9, X9, 1
	090 Add X10, X10, 16
	091 Move X0, X21
	092 Move W2, W31
	093 Call 0x1C5D788
	094 Move X0, X19
	095 Call 0x1C5D6E0
	096 Compare X21, 0
	097 JumpIfNotEqual {24}
	098 NotImplemented "Instruction LDRSW not yet implemented."
	099 Add X8, X8, X9
	100 Add X0, X8, 312
	101 Move X8, [X0]
	102 Move X1, [X0+8]
	103 Move X0, X21
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Move X21, X0
	106 Compare X0, 0
	107 JumpIfEqual {210}
	108 Move X23, 0x1ECA000
	109 Move X23, [X23+3608]
	110 Move X8, [X21]
	111 Move X1, [X23]
	112 NotImplemented "Instruction LDRH not yet implemented."
	113 Compare X9, 0
	114 JumpIfEqual {121}
	115 Move X10, [X8+176]
	116 Add X10, X10, 8
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Subtract X9, X9, 1
	120 Add X10, X10, 16
	121 Move X0, X21
	122 Move W2, W31
	123 Call 0x1C5D788
	124 NotImplemented "Instruction LDRSW not yet implemented."
	125 Add X8, X8, X9
	126 Add X0, X8, 312
	127 Move X8, [X0]
	128 Move X1, [X0+8]
	129 Move X0, X21
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfNotEqual {175}
	135 Move X8, [X19+56]
	136 Move X1, [X8+72]
	137 Move W8, [X1+309]
	138 Move TEMP, X8
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfEqual {145}
	142 Move X0, X1
	143 Call 0x1C5D684
	144 Move X1, X0
	145 Move X8, [X21]
	146 NotImplemented "Instruction LDRH not yet implemented."
	147 Compare X9, 0
	148 JumpIfEqual {155}
	149 Move X10, [X8+176]
	150 Add X10, X10, 8
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Subtract X9, X9, 1
	154 Add X10, X10, 16
	155 Move X0, X21
	156 Move W2, W31
	157 Call 0x1C5D788
	158 NotImplemented "Instruction LDRSW not yet implemented."
	159 Add X8, X8, X9
	160 Add X0, X8, 312
	161 Move X8, [X0]
	162 Move X1, [X0+8]
	163 Move X0, X21
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Move X1, X0
	166 Subtract W22, W22, 1
	167 Move X8, [X19+56]
	168 Move X2, [X8+136]
	169 Move X8, X1
	170 ShiftRight X8, 32
	171 And X8, X8, 0x7FFFFFFF
	172 Move S0, W8
	173 Move X0, X20
	174 Call 0x2416E40, X0, X1, X2
	175 Move X19, X31
	176 Compare X21, 0
	177 JumpIfEqual {201}
	178 Move X10, 0x1ECA000
	179 Move X8, [X21]
	180 Move X10, [X10+3584]
	181 NotImplemented "Instruction LDRH not yet implemented."
	182 Move X1, [X10]
	183 Compare X9, 0
	184 JumpIfEqual {191}
	185 Move X10, [X8+176]
	186 Add X10, X10, 8
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Subtract X9, X9, 1
	190 Add X10, X10, 16
	191 Move X0, X21
	192 Move W2, W31
	193 Call 0x1C5D788
	194 NotImplemented "Instruction LDRSW not yet implemented."
	195 Add X8, X8, X9
	196 Add X0, X8, 312
	197 Move X8, [X0]
	198 Move X1, [X0+8]
	199 Move X0, X21
	200 NotImplemented "Instruction BLR not yet implemented."
	201 Compare X19, 0
	202 JumpIfNotEqual {211}
	203 Move X20, [X31+32]
	204 Move X19, [X31+40]
	205 Move X22, [X31+16]
	206 Move X21, [X31+24]
	207 Move X30, [X31+48]
	208 Move X23, [X31+56]
	209 Return 
	210 Call 0x1C17F20
	211 Move X0, X19
	212 Call 0x1C17F18
	213 Move X20, X0
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move X0, X20
	216 Call 0x3EB2AD0
	217 Move X19, [X0]
	218 Call 0x3EB2AE0
	219 Move X19, X31
	220 Move X20, X0
	221 Compare X21, 0
	222 JumpIfEqual {246}
	223 Move X10, 0x1ECA000
	224 Move X8, [X21]
	225 Move X10, [X10+3584]
	226 NotImplemented "Instruction LDRH not yet implemented."
	227 Move X1, [X10]
	228 Compare X9, 0
	229 JumpIfEqual {236}
	230 Move X10, [X8+176]
	231 Add X10, X10, 8
	232 NotImplemented "Instruction LDUR not yet implemented."
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Subtract X9, X9, 1
	235 Add X10, X10, 16
	236 Move X0, X21
	237 Move W2, W31
	238 Call 0x1C5D788
	239 NotImplemented "Instruction LDRSW not yet implemented."
	240 Add X8, X8, X9
	241 Add X0, X8, 312
	242 Move X8, [X0]
	243 Move X1, [X0+8]
	244 Move X0, X21
	245 NotImplemented "Instruction BLR not yet implemented."
	246 Compare X19, 0
	247 JumpIfNotEqual {250}
	248 Move X0, X20
	249 Call 0x1D2D690
	250 Move X0, X19
	251 Call 0x1C17F18
	252 Call 0x1991590

Method: System.Void CopyFromNetworkDictionary(Fusion.NetworkDictionary`2<K, V> networkDictionary, ref D dictionary)

Disassembly:
	0x02229398 MOV X21, X0
	0x0222939C CBZ X0, 0x2229518
	0x022293A0 ADRP X23, 0x1ECA000
	0x022293A4 LDR X23, [X23 + 0xE18]
	0x022293A8 LDR X8, [X21]
	0x022293AC LDR X1, [X23]
	0x022293B0 LDRH W9, [X8 + 0x12E]
	0x022293B4 CBZ X9, 0x22293D8
	0x022293B8 LDR X10, [X8 + 0xB0]
	0x022293BC ADD X10, X10, 0x8
	0x022293C0 LDUR X11, [X10 - 0x8]
	0x022293C4 CMP X11, X1
	0x022293C8 B.EQ 0x22293E8
	0x022293CC SUBS X9, X9, 0x1
	0x022293D0 ADD X10, X10, 0x10
	0x022293D4 B.NE 0x22293C0
	0x022293D8 MOV X0, X21
	0x022293DC MOV W2, W31
	0x022293E0 BL 0x1C5C788
	0x022293E4 B 0x22293F4
	0x022293E8 LDRSW X9, [X10]
	0x022293EC ADD X8, X8, X9, 0x4, LSL
	0x022293F0 ADD X0, X8, 0x138
	0x022293F4 LDP X8, X1, [X0]
	0x022293F8 MOV X0, X21
	0x022293FC BLR X8
	0x02229400 TBZ X0, 0x0, 0x222949C
	0x02229404 LDR X8, [X19 + 0x38]
	0x02229408 LDR X1, [X8 + 0x48]
	0x0222940C LDRB W8, [X1 + 0x135]
	0x02229410 TBNZ X8, 0x0, 0x2229420
	0x02229414 MOV X0, X1
	0x02229418 BL 0x1C5C684
	0x0222941C MOV X1, X0
	0x02229420 LDR X8, [X21]
	0x02229424 LDRH W9, [X8 + 0x12E]
	0x02229428 CBZ X9, 0x222944C
	0x0222942C LDR X10, [X8 + 0xB0]
	0x02229430 ADD X10, X10, 0x8
	0x02229434 LDUR X11, [X10 - 0x8]
	0x02229438 CMP X11, X1
	0x0222943C B.EQ 0x222945C
	0x02229440 SUBS X9, X9, 0x1
	0x02229444 ADD X10, X10, 0x10
	0x02229448 B.NE 0x2229434
	0x0222944C MOV X0, X21
	0x02229450 MOV W2, W31
	0x02229454 BL 0x1C5C788
	0x02229458 B 0x2229468
	0x0222945C LDRSW X9, [X10]
	0x02229460 ADD X8, X8, X9, 0x4, LSL
	0x02229464 ADD X0, X8, 0x138
	0x02229468 LDP X8, X1, [X0]
	0x0222946C MOV X0, X21
	0x02229470 BLR X8
	0x02229474 MOV X1, X0
	0x02229478 SUBS W22, W22, 0x1
	0x0222947C B.MI 0x222949C
	0x02229480 LDR X8, [X19 + 0x38]
	0x02229484 LDR X2, [X8 + 0x88]
	0x02229488 UBFM X8, X1, 0x20, 0x3F
	0x0222948C FMOV S0, W8
	0x02229490 MOV X0, X20
	0x02229494 BL 0x2415E40
	0x02229498 B 0x22293A8
	0x0222949C MOV X19, X31
	0x022294A0 CBZ X21, 0x2229504
	0x022294A4 ADRP X10, 0x1ECA000
	0x022294A8 LDR X8, [X21]
	0x022294AC LDR X10, [X10 + 0xE00]
	0x022294B0 LDRH W9, [X8 + 0x12E]
	0x022294B4 LDR X1, [X10]
	0x022294B8 CBZ X9, 0x22294DC
	0x022294BC LDR X10, [X8 + 0xB0]
	0x022294C0 ADD X10, X10, 0x8
	0x022294C4 LDUR X11, [X10 - 0x8]
	0x022294C8 CMP X11, X1
	0x022294CC B.EQ 0x22294EC
	0x022294D0 SUBS X9, X9, 0x1
	0x022294D4 ADD X10, X10, 0x10
	0x022294D8 B.NE 0x22294C4
	0x022294DC MOV X0, X21
	0x022294E0 MOV W2, W31
	0x022294E4 BL 0x1C5C788
	0x022294E8 B 0x22294F8
	0x022294EC LDRSW X9, [X10]
	0x022294F0 ADD X8, X8, X9, 0x4, LSL
	0x022294F4 ADD X0, X8, 0x138
	0x022294F8 LDP X8, X1, [X0]
	0x022294FC MOV X0, X21
	0x02229500 BLR X8
	0x02229504 CBNZ X19, 0x222951C
	0x02229508 LDP X20, X19, [X31 + 0x20]
	0x0222950C LDP X22, X21, [X31 + 0x10]
	0x02229510 LDP X30, X23, [X31], #0x30
	0x02229514 RET
	0x02229518 BL 0x1C16F20
	0x0222951C MOV X0, X19
	0x02229520 BL 0x1C16F18
	0x02229524 B 0x2229530
	0x02229528 B 0x2229530
	0x0222952C B 0x2229530
	0x02229530 MOV X20, X0
	0x02229534 CMP W1, 0x1
	0x02229538 B.NE 0x2229550
	0x0222953C MOV X0, X20
	0x02229540 BL 0x3EB1AD0
	0x02229544 LDR X19, [X0]
	0x02229548 BL 0x3EB1AE0
	0x0222954C B 0x22294A0
	0x02229550 MOV X19, X31
	0x02229554 B 0x222955C
	0x02229558 MOV X20, X0
	0x0222955C CBZ X21, 0x22295C0
	0x02229560 ADRP X10, 0x1ECA000
	0x02229564 LDR X8, [X21]
	0x02229568 LDR X10, [X10 + 0xE00]
	0x0222956C LDRH W9, [X8 + 0x12E]
	0x02229570 LDR X1, [X10]
	0x02229574 CBZ X9, 0x2229598
	0x02229578 LDR X10, [X8 + 0xB0]
	0x0222957C ADD X10, X10, 0x8
	0x02229580 LDUR X11, [X10 - 0x8]
	0x02229584 CMP X11, X1
	0x02229588 B.EQ 0x22295A8
	0x0222958C SUBS X9, X9, 0x1
	0x02229590 ADD X10, X10, 0x10
	0x02229594 B.NE 0x2229580
	0x02229598 MOV X0, X21
	0x0222959C MOV W2, W31
	0x022295A0 BL 0x1C5C788
	0x022295A4 B 0x22295B4
	0x022295A8 LDRSW X9, [X10]
	0x022295AC ADD X8, X8, X9, 0x4, LSL
	0x022295B0 ADD X0, X8, 0x138
	0x022295B4 LDP X8, X1, [X0]
	0x022295B8 MOV X0, X21
	0x022295BC BLR X8
	0x022295C0 CBNZ X19, 0x22295CC
	0x022295C4 MOV X0, X20
	0x022295C8 BL 0x1D2C690
	0x022295CC MOV X0, X19
	0x022295D0 BL 0x1C16F18

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+160], X30
	003 Move [X31+176], X22
	004 Move [X31+184], X21
	005 Move [X31+192], X20
	006 Move [X31+200], X19
	007 Move X8, [X2+56]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {15}
	013 Move X0, X19
	014 Call 0x1C5D6E0
	015 NotImplemented "Instruction MOVI not yet implemented."
	016 Move [X31+144], X31
	017 Move [X31+112], V0
	018 Move [X31+120], V0
	019 Move [X31+80], V0
	020 Move [X31+88], V0
	021 Move X22, [X20]
	022 Move X8, [X19+56]
	023 Compare X22, 0
	024 JumpIfEqual {48}
	025 Move X1, [X8+24]
	026 Move W8, [X1+309]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {35}
	031 Move X0, X1
	032 Call 0x1C5D684
	033 Move X22, [X20]
	034 Move X1, X0
	035 Move X8, [X22]
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Compare X9, 0
	038 JumpIfEqual {45}
	039 Move X10, [X8+176]
	040 Add X10, X10, 8
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract X9, X9, 1
	044 Add X10, X10, 16
	045 Move W2, 3
	046 Move X0, X22
	047 Call 0x1C5D788
	048 Move X0, [X8+16]
	049 Call Activator.CreateInstance
	050 Move [X20], X0
	051 Move W9, [X10]
	052 Add W9, W9, 3
	053 Add X8, X8, W9
	054 Add X0, X8, 312
	055 Move X8, [X0]
	056 Move X1, [X0+8]
	057 Move X0, X22
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X8, [X19+56]
	060 Move X0, X21
	061 Move X1, [X8+48]
	062 Add X8, X31, 8
	063 Call 0x2417BB8, X0
	064 Add X0, X31, 80
	065 Add X1, X31, 8
	066 Move W2, 72
	067 Call 0x3EB2AC0
	068 Move X8, [X19+56]
	069 Move X1, [X8+152]
	070 Add X0, X31, 80
	071 Call 0x2C1DA00, X0
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {120}
	076 Move X8, [X19+56]
	077 Move X1, [X8+72]
	078 Add X0, X31, 80
	079 Call 0x2C1DAAC, X0
	080 Move X22, [X20]
	081 Compare X22, 0
	082 JumpIfEqual {134}
	083 Move X8, [X19+56]
	084 Move X21, X0
	085 Move X1, [X8+136]
	086 Move W8, [X1+309]
	087 Move TEMP, X8
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {94}
	091 Move X0, X1
	092 Call 0x1C5D684
	093 Move X1, X0
	094 Move X8, [X22]
	095 NotImplemented "Instruction LDRH not yet implemented."
	096 Compare X9, 0
	097 JumpIfEqual {104}
	098 Move X10, [X8+176]
	099 Add X10, X10, 8
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Subtract X9, X9, 1
	103 Add X10, X10, 16
	104 Move W2, 5
	105 Move X0, X22
	106 Call 0x1C5D788
	107 Move W9, [X10]
	108 Add W9, W9, 5
	109 Add X8, X8, W9
	110 Add X0, X8, 312
	111 Move X8, [X0]
	112 Move X2, [X0+8]
	113 Move X9, X21
	114 ShiftRight X9, 32
	115 And X9, X9, 0x7FFFFFFF
	116 Move S0, W9
	117 Move X0, X22
	118 Move W1, W21
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move X21, X31
	121 Move X8, [X19+56]
	122 Add X0, X31, 80
	123 Move X1, [X8+160]
	124 Call 0x2C1DC18, X0
	125 Compare X21, 0
	126 JumpIfNotEqual {135}
	127 Move X20, [X31+192]
	128 Move X19, [X31+200]
	129 Move X22, [X31+176]
	130 Move X21, [X31+184]
	131 Move X30, [X31+160]
	132 Add X31, X31, 208
	133 Return 
	134 Call 0x1C17F20
	135 Move X0, X21
	136 Call 0x1C17F18
	137 Move X20, X0
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X0, X20
	140 Call 0x3EB2AD0
	141 Move X21, [X0]
	142 Call 0x3EB2AE0
	143 Move X21, X31
	144 Move X20, X0
	145 Move X8, [X19+56]
	146 Move X1, [X8+160]
	147 Add X0, X31, 80
	148 Call 0x2C1DC18, X0
	149 Compare X21, 0
	150 JumpIfNotEqual {153}
	151 Move X0, X20
	152 Call 0x1D2D690
	153 Move X0, X21
	154 Call 0x1C17F18
	155 Call 0x1991590

Method: Fusion.SerializableDictionary`2<K, V> MakeSerializableDictionary(System.Collections.Generic.Dictionary`2<K, V> dictionary)

Disassembly:
	0x0222AC94 ADD X31, X25, 0x0
	0x0222AC98 LDR X0, [X8]
	0x0222AC9C LDR X8, [X0]
	0x0222ACA0 BLR X8
	0x0222ACA4 MOV X24, X0
	0x0222ACA8 MOV X0, X23
	0x0222ACAC MOV X1, X20
	0x0222ACB0 MOV X2, X22
	0x0222ACB4 BL 0x3EB1AC0
	0x0222ACB8 LDR X27, [X19 + 0x38]
	0x0222ACBC MOV X0, X25
	0x0222ACC0 MOV X2, X22
	0x0222ACC4 LDR X8, [X27 + 0x20]
	0x0222ACC8 LDR W8, [X8 + 0x28]
	0x0222ACCC CMP W8, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X19, X0
	006 Compare X8, 0
	007 JumpIfNotEqual {12}
	008 Move X0, X1
	009 Move X20, X1
	010 Call 0x1C5D6E0
	011 Move X8, [X20+56]
	012 Move X1, [X8+8]
	013 Move X0, X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X2, [X1]
	017 Move X30, [X31+32]
	018 CallNoReturn X2

Method: System.Void .cctor()

Disassembly:
	0x01E78C48 BL 0x1C16F20
	0x01E78C4C BL 0x1C16F28
	0x01E78C50 SUB X31, X31, 0xD0
	0x01E78C54 STP D9, D8, [X31 + 0x60]
	0x01E78C58 STP X29, X30, [X31 + 0x70]
	0x01E78C5C STP X28, X27, [X31 + 0x80]
	0x01E78C60 STP X26, X25, [X31 + 0x90]
	0x01E78C64 STP X24, X23, [X31 + 0xA0]
	0x01E78C68 STP X22, X21, [X31 + 0xB0]
	0x01E78C6C STP X20, X19, [X31 + 0xC0]
	0x01E78C70 ADRP X21, 0x2561000
	0x01E78C74 LDRB W8, [X21 + 0x194]
	0x01E78C78 MOV X19, X1
	0x01E78C7C MOV X20, X0
	0x01E78C80 TBNZ X8, 0x0, 0x1E78CB0
	0x01E78C84 ADRP X0, 0x2285000
	0x01E78C88 LDR X0, [X0 + 0x870]
	0x01E78C8C BL 0x1C16CF4
	0x01E78C90 ADRP X0, 0x2285000
	0x01E78C94 LDR X0, [X0 + 0x860]
	0x01E78C98 BL 0x1C16CF4
	0x01E78C9C ADRP X0, 0x2285000
	0x01E78CA0 LDR X0, [X0 + 0x868]
	0x01E78CA4 BL 0x1C16CF4
	0x01E78CA8 MOVZ W8, 0x1
	0x01E78CAC STRB W8, [X21 + 0x194]
	0x01E78CB0 MOVI V0.2D, 0x0
	0x01E78CB4 STR W31, [X31 + 0x50]
	0x01E78CB8 STP V0, V0, [X31 + 0x30]
	0x01E78CBC STR W31, [X31 + 0x2C]
	0x01E78CC0 LDR W8, [X20 + 0xC8]
	0x01E78CC4 CMP W8, 0x1
	0x01E78CC8 B.LT 0x1E78EA0
	0x01E78CCC ADRP X24, 0x2285000
	0x01E78CD0 ADRP X25, 0x2285000
	0x01E78CD4 ADRP X22, 0x2282000
	0x01E78CD8 LDR X24, [X24 + 0x868]
	0x01E78CDC LDR X25, [X25 + 0x860]
	0x01E78CE0 LDR X22, [X22 + 0xC68]
	0x01E78CE4 MOV W21, W31
	0x01E78CE8 ADRP X27, 0x2560000
	0x01E78CEC MOVZ W29, 0x44800000
	0x01E78CF0 FMOV S9, 0.5
	0x01E78CF4 MOVZ W28, 0x7F800000
	0x01E78CF8 MOVZ W26, 0x80000000
	0x01E78CFC LDR X0, [X20 + 0x80]
	0x01E78D00 CBZ X0, 0x1E78EC4
	0x01E78D04 MOV W1, W21
	0x01E78D08 MOV X2, X31
	0x01E78D0C BL 0x3BF674C
	0x01E78D10 TBZ X0, 0x0, 0x1E78D7C
	0x01E78D14 LDR W1, [X19]
	0x01E78D18 MOV X0, X20
	0x01E78D1C ADD W8, W1, 0x1
	0x01E78D20 STR W8, [X19]
	0x01E78D24 LDR X2, [X24]
	0x01E78D28 BL 0x22275B4
	0x01E78D2C STR W31, [X0]
	0x01E78D30 LDR W1, [X19]
	0x01E78D34 MOV X0, X20
	0x01E78D38 ADD W8, W1, 0x1
	0x01E78D3C STR W8, [X19]
	0x01E78D40 LDR X2, [X25]
	0x01E78D44 BL 0x22275A8
	0x01E78D48 LDRB W8, [X27 + 0xE8F]
	0x01E78D4C MOV X23, X0
	0x01E78D50 CBNZ W8, 0x1E78D64
	0x01E78D54 MOV X0, X22
	0x01E78D58 BL 0x1C16CF4
	0x01E78D5C MOVZ W8, 0x1
	0x01E78D60 STRB W8, [X27 + 0xE8F]
	0x01E78D64 LDR X0, [X22]
	0x01E78D68 LDR W8, [X0 + 0xE0]
	0x01E78D6C CBNZ W8, 0x1E78D74
	0x01E78D70 BL 0x1C16DFC
	0x01E78D74 MOV W8, W31
	0x01E78D78 B 0x1E78E8C
	0x01E78D7C LDR X0, [X20 + 0x80]
	0x01E78D80 CBZ X0, 0x1E78EC4
	0x01E78D84 ADD X8, X31, 0x8
	0x01E78D88 MOV W1, W21
	0x01E78D8C MOV X2, X31
	0x01E78D90 BL 0x3BF66CC
	0x01E78D94 LDUR V0, [X31 + 0x8]
	0x01E78D98 LDUR V1, [X31 + 0x18]
	0x01E78D9C LDR W8, [X31 + 0x28]
	0x01E78DA0 ADD X0, X31, 0x30
	0x01E78DA4 MOV X1, X31
	0x01E78DA8 STP V0, V1, [X31 + 0x30]
	0x01E78DAC STR W8, [X31 + 0x50]
	0x01E78DB0 BL 0x3BF5DA0
	0x01E78DB4 LDR X8, [X20 + 0xA0]
	0x01E78DB8 CBZ X8, 0x1E78EC4
	0x01E78DBC ADRP X9, 0x2285000
	0x01E78DC0 LDR X9, [X9 + 0x870]
	0x01E78DC4 MOV W23, W0

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X27, 0x2562000
	013 Move X28, 0x2286000
	014 Move X19, 0x2286000
	015 Move X20, 0x227F000
	016 Move X26, 0x2286000
	017 Move X25, 0x2286000
	018 Move X24, 0x2286000
	019 Move X23, 0x2286000
	020 Move X22, 0x2286000
	021 Move X21, 0x2286000
	022 Move X28, [X28+2048]
	023 Move X19, [X19+2056]
	024 Move X20, [X20+2680]
	025 Move X26, [X26+2064]
	026 Move W8, [X27+396]
	027 Move X25, [X25+2072]
	028 Move X24, [X24+2080]
	029 Move X23, [X23+2088]
	030 Move X22, [X22+2096]
	031 Move X21, [X21+2104]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {65}
	036 Move X0, 0x2286000
	037 Move X0, [X0+2056]
	038 Call 0x1C17CF4
	039 Move X0, 0x2286000
	040 Move X0, [X0+2104]
	041 Call 0x1C17CF4
	042 Move X0, 0x2286000
	043 Move X0, [X0+2072]
	044 Call 0x1C17CF4
	045 Move X0, 0x2286000
	046 Move X0, [X0+2048]
	047 Call 0x1C17CF4
	048 Move X0, 0x2286000
	049 Move X0, [X0+2064]
	050 Call 0x1C17CF4
	051 Move X0, 0x2286000
	052 Move X0, [X0+2096]
	053 Call 0x1C17CF4
	054 Move X0, 0x227F000
	055 Move X0, [X0+2680]
	056 Call 0x1C17CF4
	057 Move X0, 0x2286000
	058 Move X0, [X0+2088]
	059 Call 0x1C17CF4
	060 Move X0, 0x2286000
	061 Move X0, [X0+2080]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X27+396], W8
	065 Move X0, [X28]
	066 Call 0x1C17F10
	067 Move X1, [X19]
	068 Move X19, X0
	069 Call Dictionary`2<Object, Int32>..ctor, X0
	070 Move X8, [X20]
	071 Move X8, [X8+184]
	072 Move [X8], X19
	073 Move X0, [X26]
	074 Call 0x1C17F10
	075 Move X1, [X25]
	076 Move X19, X0
	077 Call Dictionary`2<Object, Object>..ctor, X0
	078 Move X8, [X20]
	079 Move X8, [X8+184]
	080 Move [X8+8], X19
	081 Move X0, [X24]
	082 Call 0x1C17F10
	083 Move X1, [X23]
	084 Move X19, X0
	085 Call SortedList`2<Object, Object>..ctor, X0
	086 Move X8, [X20]
	087 Move X8, [X8+184]
	088 Move [X8+16], X19
	089 Move X0, [X22]
	090 Call 0x1C17F10
	091 Move X1, [X21]
	092 Move X19, X0
	093 Call Dictionary`2<Object, MetaData>..ctor, X0
	094 Move X8, [X20]
	095 Move X22, [X31+64]
	096 Move X21, [X31+72]
	097 Move X24, [X31+48]
	098 Move X23, [X31+56]
	099 Move X26, [X31+32]
	100 Move X25, [X31+40]
	101 Move X8, [X8+184]
	102 Move X28, [X31+16]
	103 Move X27, [X31+24]
	104 Move [X8+24], X19
	105 Move X20, [X31+80]
	106 Move X19, [X31+88]
	107 Move [X8+32], W31
	108 Move X30, [X31+96]
	109 Return 

