Type: Fusion.NetworkRunnerCallbackArgs/ConnectRequest

Method: Fusion.Sockets.NetAddress get_RemoteAddress()

Disassembly:
	0x01EBA174 ADRP X23, 0x251F000
	0x01EBA178 ADRP X22, 0x2239000
	0x01EBA17C LDRB W8, [X23 + 0x418]
	0x01EBA180 LDR X22, [X22 + 0x6C0]
	0x01EBA184 MOV X19, X2

ISIL:
	001 Move X9, [X0+32]
	002 Move V0, [X0+1]
	003 Move [X8+16], X9
	004 Move [X8], V0
	005 Return X0

Method: System.Void set_RemoteAddress(Fusion.Sockets.NetAddress value)

Disassembly:
	0x01EBA188 MOV X21, X1
	0x01EBA18C MOV X20, X0
	0x01EBA190 TBNZ X8, 0x0, 0x1EBA1A8
	0x01EBA194 ADRP X0, 0x2239000
	0x01EBA198 LDR X0, [X0 + 0x6C0]

ISIL:
	001 Move X8, [X1+16]
	002 Move V0, [X1]
	003 Move [X0+32], X8
	004 Move [X0+1], V0
	005 Return 

Method: System.Void Accept()

Disassembly:
	0x01EBA19C BL 0x1C16CF4
	0x01EBA1A0 MOVZ W8, 0x1
	0x01EBA1A4 STRB W8, [X23 + 0x418]
	0x01EBA1A8 LDR X0, [X22]
	0x01EBA1AC LDR X22, [X20]
	0x01EBA1B0 LDR W8, [X0 + 0xE0]
	0x01EBA1B4 CBNZ W8, 0x1EBA1BC
	0x01EBA1B8 BL 0x1C16DFC
	0x01EBA1BC MOV X0, X22
	0x01EBA1C0 MOV X1, X21
	0x01EBA1C4 MOV X2, X31
	0x01EBA1C8 BL 0x3395194
	0x01EBA1CC TBZ X0, 0x0, 0x1EBA1E0
	0x01EBA1D0 LDR W8, [X20 + 0x8]
	0x01EBA1D4 CMP W8, W19
	0x01EBA1D8 CSET W0, EQ
	0x01EBA1DC B 0x1EBA1E4
	0x01EBA1E0 MOV W0, W31
	0x01EBA1E4 LDP X20, X19, [X31 + 0x20]
	0x01EBA1E8 LDP X22, X21, [X31 + 0x10]
	0x01EBA1EC LDP X30, X23, [X31], #0x30
	0x01EBA1F0 RET
	0x01EBA1F4 STP X30, X21, [X31 - 0x20]!
	0x01EBA1F8 STP X20, X19, [X31 + 0x10]
	0x01EBA1FC ADRP X21, 0x251F000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2520000
	007 Move X20, 0x2246000
	008 Move W8, [X21+1032]
	009 Move X20, [X20+1248]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2246000
	016 Move X0, [X0+1248]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1032], W8
	020 Move X2, [X20]
	021 Add X0, X31, 8
	022 Move W1, W31
	023 Move [X31+8], X31
	024 Call Nullable`1<Int32Enum>..ctor, X0, X1
	025 Move X8, [X31+8]
	026 Move X30, [X31+16]
	027 Move X21, [X31+24]
	028 Move [X19+40], X8
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Add X31, X31, 48
	032 Return 

Method: System.Void Refuse()

Disassembly:
	0x01EBA200 LDRB W8, [X21 + 0x419]
	0x01EBA204 MOV X20, X1
	0x01EBA208 MOV X19, X0
	0x01EBA20C TBNZ X8, 0x0, 0x1EBA224
	0x01EBA210 ADRP X0, 0x2245000
	0x01EBA214 LDR X0, [X0 + 0x580]
	0x01EBA218 BL 0x1C16CF4
	0x01EBA21C MOVZ W8, 0x1
	0x01EBA220 STRB W8, [X21 + 0x419]
	0x01EBA224 CBZ X20, 0x1EBA240
	0x01EBA228 ADRP X8, 0x2245000
	0x01EBA22C LDR X8, [X8 + 0x580]
	0x01EBA230 LDR X9, [X20]
	0x01EBA234 LDR X8, [X8]
	0x01EBA238 CMP X9, X8
	0x01EBA23C B.EQ 0x1EBA250
	0x01EBA240 LDP X20, X19, [X31 + 0x10]
	0x01EBA244 MOV W0, W31
	0x01EBA248 LDP X30, X21, [X31], #0x20
	0x01EBA24C RET
	0x01EBA250 MOV X0, X20
	0x01EBA254 BL 0x1C16E08
	0x01EBA258 LDP X1, X2, [X0]
	0x01EBA25C MOV X0, X19
	0x01EBA260 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2520000
	007 Move X20, 0x2246000
	008 Move W8, [X21+1033]
	009 Move X20, [X20+1248]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2246000
	016 Move X0, [X0+1248]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1033], W8
	020 Move X2, [X20]
	021 Add X0, X31, 8
	022 Move W1, 1
	023 Move [X31+8], X31
	024 Call Nullable`1<Int32Enum>..ctor, X0, X1
	025 Move X8, [X31+8]
	026 Move X30, [X31+16]
	027 Move X21, [X31+24]
	028 Move [X19+40], X8
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Add X31, X31, 48
	032 Return 

Method: System.Void Waiting()

Disassembly:
	0x01EBA264 LDP X30, X21, [X31], #0x20
	0x01EBA268 B 0x1EBA168
	0x01EBA26C STP X30, X21, [X31 - 0x20]!
	0x01EBA270 STP X20, X19, [X31 + 0x10]
	0x01EBA274 ADRP X21, 0x251F000
	0x01EBA278 ADRP X20, 0x2239000
	0x01EBA27C LDRB W8, [X21 + 0x41A]
	0x01EBA280 LDR X20, [X20 + 0x6C0]
	0x01EBA284 MOV X19, X0
	0x01EBA288 TBNZ X8, 0x0, 0x1EBA2A0
	0x01EBA28C ADRP X0, 0x2239000
	0x01EBA290 LDR X0, [X0 + 0x6C0]
	0x01EBA294 BL 0x1C16CF4
	0x01EBA298 MOVZ W8, 0x1
	0x01EBA29C STRB W8, [X21 + 0x41A]
	0x01EBA2A0 LDR X0, [X20]
	0x01EBA2A4 LDR X20, [X19]
	0x01EBA2A8 LDR W8, [X0 + 0xE0]
	0x01EBA2AC CBNZ W8, 0x1EBA2B4
	0x01EBA2B0 BL 0x1C16DFC
	0x01EBA2B4 MOV X0, X20
	0x01EBA2B8 MOV X1, X31
	0x01EBA2BC MOV X2, X31
	0x01EBA2C0 BL 0x3395F0C
	0x01EBA2C4 TBZ X0, 0x0, 0x1EBA2E8

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2520000
	007 Move X20, 0x2246000
	008 Move W8, [X21+1034]
	009 Move X20, [X20+1248]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2246000
	016 Move X0, [X0+1248]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1034], W8
	020 Move X2, [X20]
	021 Add X0, X31, 8
	022 Move W1, 2
	023 Move [X31+8], X31
	024 Call Nullable`1<Int32Enum>..ctor, X0, X1
	025 Move X8, [X31+8]
	026 Move X30, [X31+16]
	027 Move X21, [X31+24]
	028 Move [X19+40], X8
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Add X31, X31, 48
	032 Return 

Method: System.Void .ctor()

Disassembly:
	0x01EBA2C8 LDR X0, [X19]
	0x01EBA2CC CBZ X0, 0x1EBA300

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

