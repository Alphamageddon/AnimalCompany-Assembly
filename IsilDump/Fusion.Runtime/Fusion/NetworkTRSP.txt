Type: Fusion.NetworkTRSP

Method: System.Boolean get_IsMainTRSP()

Disassembly:
	0x01E7F13C LDR W12, [X10], #0x4
	0x01E7F140 SBFM X13, X11, 0x1E, 0x3F

ISIL:
	001 Move W0, [X0+128]
	002 Return X0

Method: System.Void set_IsMainTRSP(System.Boolean value)

Disassembly:
	0x01E7F144 SUBS X9, X9, 0x1
	0x01E7F148 ADD X11, X11, X23
	0x01E7F14C STR W12, [X13, X8, LSL]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+128], W8
	003 Return 

Method: Fusion.NetworkTRSPData get_Data()

Disassembly:
	0x01E7F150 B.NE 0x1E7F13C
	0x01E7F154 B 0x1E7F04C
	0x01E7F158 MOV X21, X31
	0x01E7F15C CBZ X20, 0x1E7F1C0
	0x01E7F160 LDR X8, [X20]
	0x01E7F164 ADRP X10, 0x2274000
	0x01E7F168 LDRH W9, [X8 + 0x12E]
	0x01E7F16C LDR X10, [X10 + 0xE00]
	0x01E7F170 LDR X1, [X10]
	0x01E7F174 CBZ X9, 0x1E7F198
	0x01E7F178 LDR X10, [X8 + 0xB0]
	0x01E7F17C ADD X10, X10, 0x8
	0x01E7F180 LDUR X11, [X10 - 0x8]
	0x01E7F184 CMP X11, X1
	0x01E7F188 B.EQ 0x1E7F1A8
	0x01E7F18C SUBS X9, X9, 0x1
	0x01E7F190 ADD X10, X10, 0x10
	0x01E7F194 B.NE 0x1E7F180
	0x01E7F198 MOV X0, X20
	0x01E7F19C MOV W2, W31
	0x01E7F1A0 BL 0x1C5C788
	0x01E7F1A4 B 0x1E7F1B4
	0x01E7F1A8 LDRSW X9, [X10]
	0x01E7F1AC ADD X8, X8, X9, 0x4, LSL
	0x01E7F1B0 ADD X0, X8, 0x138
	0x01E7F1B4 LDP X8, X1, [X0]
	0x01E7F1B8 MOV X0, X20
	0x01E7F1BC BLR X8
	0x01E7F1C0 CBNZ X21, 0x1E7F1F8
	0x01E7F1C4 MOV X0, X19
	0x01E7F1C8 LDP X20, X19, [X31 + 0x50]
	0x01E7F1CC LDP X22, X21, [X31 + 0x40]
	0x01E7F1D0 LDP X24, X23, [X31 + 0x30]
	0x01E7F1D4 LDP X26, X25, [X31 + 0x20]
	0x01E7F1D8 LDP X28, X27, [X31 + 0x10]
	0x01E7F1DC LDP X29, X30, [X31], #0x60

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x255B000
	006 Move W9, [X21+445]
	007 Move X20, X0
	008 Move X19, X8
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x227F000
	014 Move X0, [X0+2872]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+445], W8
	018 Move X0, X20
	019 Move X1, X31
	020 Call NetworkBehaviour.get_StateBufferIsValid, X0
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {39}
	025 Move X8, 0x227F000
	026 Move X8, [X8+2872]
	027 Move X0, X20
	028 Move W1, W31
	029 Move X2, [X8]
	030 Call NetworkBehaviour.ReinterpretState, X0, X1
	031 Move X8, [X0+48]
	032 Move V2, [X0+16]
	033 Move V0, [X0+32]
	034 Move V1, [X0]
	035 Move [X19+48], X8
	036 Move [X19+16], V2
	037 Move [X19+24], V0
	038 Move [X19], V1
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X19+48], X31
	041 Move [X19+16], V0
	042 Move [X19+24], V0
	043 Move [X19], V0
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: Fusion.NetworkTRSPData get_State()

Disassembly:
	0x01E7E23C ADRP X0, 0x227F000
	0x01E7E240 LDR X0, [X0 + 0xB78]
	0x01E7E244 BL 0x1C16CF4
	0x01E7E248 ADRP X0, 0x227F000
	0x01E7E24C LDR X0, [X0 + 0xB98]
	0x01E7E250 BL 0x1C16CF4
	0x01E7E254 ADRP X0, 0x227F000
	0x01E7E258 LDR X0, [X0 + 0xB90]
	0x01E7E25C BL 0x1C16CF4
	0x01E7E260 MOVZ W8, 0x1
	0x01E7E264 STRB W8, [X23 + 0x1C4]
	0x01E7E268 LDR X0, [X24]
	0x01E7E26C BL 0x1C16F10
	0x01E7E270 LDR X1, [X19]
	0x01E7E274 MOV X19, X0
	0x01E7E278 BL 0x24F1248
	0x01E7E27C LDR X8, [X20]
	0x01E7E280 LDR X8, [X8 + 0xB8]
	0x01E7E284 STR X19, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x255C000
	006 Move X21, 0x2280000
	007 Move W8, [X20+446]
	008 Move X21, [X21+2872]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2280000
	015 Move X0, [X0+2872]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+446], W8
	019 Move X2, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move W1, W31
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Call NetworkBehaviour.ReinterpretState, X0, X1
	027 Return X0

Method: System.Void SetAreaOfInterestOverride(Fusion.NetworkObject obj)

Disassembly:
	0x01E7EAC8 ADRP X0, 0x227F000
	0x01E7EACC LDR X0, [X0 + 0xBA0]
	0x01E7EAD0 BL 0x1C16CF4
	0x01E7EAD4 ADRP X0, 0x227F000
	0x01E7EAD8 LDR X0, [X0 + 0xBB8]
	0x01E7EADC BL 0x1C16CF4
	0x01E7EAE0 ADRP X0, 0x227F000
	0x01E7EAE4 LDR X0, [X0 + 0xBC0]
	0x01E7EAE8 BL 0x1C16CF4
	0x01E7EAEC ADRP X0, 0x227F000
	0x01E7EAF0 LDR X0, [X0 + 0xBC8]
	0x01E7EAF4 BL 0x1C16CF4
	0x01E7EAF8 ADRP X0, 0x227F000
	0x01E7EAFC LDR X0, [X0 + 0xBD0]
	0x01E7EB00 BL 0x1C16CF4
	0x01E7EB04 ADRP X0, 0x227F000
	0x01E7EB08 LDR X0, [X0 + 0xBD8]
	0x01E7EB0C BL 0x1C16CF4
	0x01E7EB10 ADRP X0, 0x227F000
	0x01E7EB14 LDR X0, [X0 + 0xBE0]
	0x01E7EB18 BL 0x1C16CF4
	0x01E7EB1C ADRP X0, 0x227F000
	0x01E7EB20 LDR X0, [X0 + 0xBE8]
	0x01E7EB24 BL 0x1C16CF4
	0x01E7EB28 ADRP X0, 0x227F000
	0x01E7EB2C LDR X0, [X0 + 0xBF0]
	0x01E7EB30 BL 0x1C16CF4
	0x01E7EB34 ADRP X0, 0x2275000
	0x01E7EB38 LDR X0, [X0 + 0xE00]
	0x01E7EB3C BL 0x1C16CF4
	0x01E7EB40 ADRP X0, 0x227F000
	0x01E7EB44 LDR X0, [X0 + 0xBF8]
	0x01E7EB48 BL 0x1C16CF4
	0x01E7EB4C ADRP X0, 0x227F000
	0x01E7EB50 LDR X0, [X0 + 0xC00]
	0x01E7EB54 BL 0x1C16CF4
	0x01E7EB58 ADRP X0, 0x2275000
	0x01E7EB5C LDR X0, [X0 + 0xE18]
	0x01E7EB60 BL 0x1C16CF4
	0x01E7EB64 ADRP X0, 0x227F000
	0x01E7EB68 LDR X0, [X0 + 0xC08]
	0x01E7EB6C BL 0x1C16CF4
	0x01E7EB70 ADRP X0, 0x227F000
	0x01E7EB74 LDR X0, [X0 + 0xC10]
	0x01E7EB78 BL 0x1C16CF4
	0x01E7EB7C ADRP X0, 0x227F000
	0x01E7EB80 LDR X0, [X0 + 0x618]
	0x01E7EB84 BL 0x1C16CF4
	0x01E7EB88 ADRP X0, 0x227F000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x255C000
	007 Move X22, 0x2276000
	008 Move W8, [X21+447]
	009 Move X22, [X22+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x2276000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move X0, 0x2280000
	020 Move X0, [X0+2920]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+447], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Move X1, X31
	031 Call Object.op_Implicit, X0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {48}
	036 Compare X19, 0
	037 JumpIfEqual {61}
	038 Move W0, [X19+96]
	039 Move W1, 0x4000000
	040 Move X2, X31
	041 Call NetworkObjectRuntimeFlagsExtensions.CheckFlag, X0, X1
	042 Move X8, 0x2280000
	043 Move X8, [X8+2920]
	044 And W0, W0, 1
	045 Move X2, X31
	046 Move X1, [X8]
	047 Call Assert.Always, X0, X1
	048 Move X0, X20
	049 Call NetworkTRSP.get_State, X0
	050 Move X20, X0
	051 Move X0, X19
	052 Move X1, X31
	053 Call NetworkObject.op_Implicit, X0
	054 Move [X20+52], W0
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Return 
	061 Call 0x1C17F20

Method: System.Void Teleport(Fusion.NetworkTRSP behaviour, UnityEngine.Transform transform, System.Nullable`1<UnityEngine.Vector3> position = null, System.Nullable`1<UnityEngine.Quaternion> rotation = null)

Disassembly:
	0x01E7E904 LDRB W8, [X20 + 0x1C6]
	0x01E7E908 MOV X19, X0
	0x01E7E90C TBNZ X8, 0x0, 0x1E7E924
	0x01E7E910 ADRP X0, 0x227F000
	0x01E7E914 LDR X0, [X0 + 0xBA0]
	0x01E7E918 BL 0x1C16CF4
	0x01E7E91C MOVZ W8, 0x1
	0x01E7E920 STRB W8, [X20 + 0x1C6]
	0x01E7E924 CBZ X19, 0x1E7E9D8
	0x01E7E928 LDR W8, [X19 + 0x20]
	0x01E7E92C CMP W8, 0x2
	0x01E7E930 B.LT 0x1E7E978
	0x01E7E934 ADRP X23, 0x227F000
	0x01E7E938 LDR X23, [X23 + 0xBA0]
	0x01E7E93C MOVZ W21, 0x1
	0x01E7E940 MOVZ W22, 0x8
	0x01E7E944 LDR X0, [X23]
	0x01E7E948 LDR X8, [X19 + 0x18]
	0x01E7E94C LDR W9, [X0 + 0xE0]
	0x01E7E950 LDR X20, [X22, X8, LSL]
	0x01E7E954 CBNZ W9, 0x1E7E95C
	0x01E7E958 BL 0x1C16DFC
	0x01E7E95C MOV X0, X20
	0x01E7E960 BL 0x1E7E9E8
	0x01E7E964 LDRSW X8, [X19 + 0x20]
	0x01E7E968 ADD X21, X21, 0x1
	0x01E7E96C ADD X22, X22, 0x8
	0x01E7E970 CMP X21, X8
	0x01E7E974 B.LT 0x1E7E944
	0x01E7E978 LDR X0, [X19 + 0x28]
	0x01E7E97C MOV X1, X31
	0x01E7E980 BL 0x1E3585C
	0x01E7E984 LDR X0, [X19 + 0x18]
	0x01E7E988 MOV X1, X31
	0x01E7E98C BL 0x1E3585C
	0x01E7E990 LDR X0, [X19 + 0x58]
	0x01E7E994 MOV X1, X31
	0x01E7E998 BL 0x1E3585C
	0x01E7E99C LDR X0, [X19 + 0x70]
	0x01E7E9A0 MOV X1, X31
	0x01E7E9A4 BL 0x1E3585C
	0x01E7E9A8 LDR X0, [X19 + 0x30]
	0x01E7E9AC MOV X1, X31
	0x01E7E9B0 BL 0x1E3585C
	0x01E7E9B4 LDR X0, [X19 + 0x40]
	0x01E7E9B8 MOV X1, X31
	0x01E7E9BC BL 0x1E3585C
	0x01E7E9C0 MOV X0, X19
	0x01E7E9C4 LDP X20, X19, [X31 + 0x20]
	0x01E7E9C8 LDP X22, X21, [X31 + 0x10]
	0x01E7E9CC MOV X1, X31
	0x01E7E9D0 LDP X30, X23, [X31], #0x30
	0x01E7E9D4 B 0x1E3585C
	0x01E7E9D8 LDP X20, X19, [X31 + 0x20]
	0x01E7E9DC LDP X22, X21, [X31 + 0x10]
	0x01E7E9E0 LDP X30, X23, [X31], #0x30
	0x01E7E9E4 RET
	0x01E7E9E8 STP X30, X19, [X31 - 0x10]!
	0x01E7E9EC CBZ X0, 0x1E7EA1C
	0x01E7E9F0 MOV X19, X0
	0x01E7E9F4 LDR X0, [X0 + 0x18]
	0x01E7E9F8 MOV X1, X31
	0x01E7E9FC BL 0x1E3585C
	0x01E7EA00 LDR X0, [X19 + 0x38]
	0x01E7EA04 MOV X1, X31
	0x01E7EA08 BL 0x1E3585C
	0x01E7EA0C MOV X0, X19
	0x01E7EA10 MOV X1, X31
	0x01E7EA14 LDP X30, X19, [X31], #0x10
	0x01E7EA18 B 0x1E3585C
	0x01E7EA1C BL 0x1C16F20
	0x01E7EA20 STP X30, X21, [X31 - 0x20]!
	0x01E7EA24 STP X20, X19, [X31 + 0x10]
	0x01E7EA28 ADRP X20, 0x255B000
	0x01E7EA2C ADRP X21, 0x227F000
	0x01E7EA30 LDRB W8, [X20 + 0x1C7]
	0x01E7EA34 LDR X21, [X21 + 0xBA0]
	0x01E7EA38 MOV X19, X0
	0x01E7EA3C TBNZ X8, 0x0, 0x1E7EA54

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x255C000
	009 Move W8, [X23+448]
	010 Move X21, X4
	011 Move X22, X2
	012 Move X20, X1
	013 Move X19, X0
	014 Move [X31], X2
	015 Move [X31+8], X3
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x2279000
	021 Move X0, [X0+3544]
	022 Call 0x1C17CF4
	023 Move X0, 0x2279000
	024 Move X0, [X0+3552]
	025 Call 0x1C17CF4
	026 Move X0, 0x2280000
	027 Move X0, [X0+2904]
	028 Call 0x1C17CF4
	029 Move X0, 0x2280000
	030 Move X0, [X0+2912]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+448], W8
	034 And W31, W22, 255
	035 Move X8, 0x2280000
	036 Move X8, [X8+2912]
	037 Add X0, X31, 0
	038 Move X1, [X8]
	039 Call Nullable`1<Vector3>.get_Value, X0
	040 Compare X20, 0
	041 JumpIfEqual {96}
	042 Move X0, X20
	043 Move X1, X31
	044 Call Transform.set_position, X0, X1
	045 Compare X19, 0
	046 JumpIfEqual {96}
	047 Move X0, X19
	048 Call NetworkTRSP.get_State, X0
	049 Move X22, X0
	050 Move X0, X20
	051 Move X1, X31
	052 Call Transform.get_localPosition, X0
	053 Move [X22+8], S0
	054 Move [X22+16], S1
	055 Move [X22+16], S2
	056 Move W8, [X21]
	057 Compare W8, 0
	058 JumpIfEqual {81}
	059 Move X8, 0x2280000
	060 Move X8, [X8+2904]
	061 Move X0, X21
	062 Move X1, [X8]
	063 Call Nullable`1<Quaternion>.get_Value, X0
	064 Compare X20, 0
	065 JumpIfEqual {96}
	066 Move X0, X20
	067 Move X1, X31
	068 Call Transform.set_rotation, X0, X1
	069 Compare X19, 0
	070 JumpIfEqual {96}
	071 Move X0, X19
	072 Call NetworkTRSP.get_State, X0
	073 Move X21, X0
	074 Move X0, X20
	075 Move X1, X31
	076 Call Transform.get_localRotation, X0
	077 Move [X21+20], S0
	078 Move [X21+28], S1
	079 Move [X21+28], S2
	080 Move [X21+36], S3
	081 Compare X19, 0
	082 JumpIfEqual {96}
	083 Move X0, X19
	084 Call NetworkTRSP.get_State, X0
	085 Move W8, [X0+48]
	086 Move X20, [X31+48]
	087 Move X19, [X31+56]
	088 Move X22, [X31+32]
	089 Move X21, [X31+40]
	090 Move X30, [X31+16]
	091 Move X23, [X31+24]
	092 Add W8, W8, 1
	093 Move [X0+48], W8
	094 Add X31, X31, 64
	095 Return 
	096 Call 0x1C17F20

Method: System.Void SetParentTransform(Fusion.NetworkTRSP behaviour, UnityEngine.Transform transform, Fusion.NetworkBehaviourId parentId)

Disassembly:
	0x01E7E288 LDR X0, [X22]
	0x01E7E28C BL 0x1C16F10
	0x01E7E290 LDR X1, [X21]
	0x01E7E294 MOV X19, X0
	0x01E7E298 BL 0x2601D04
	0x01E7E29C LDR X8, [X20]
	0x01E7E2A0 LDP X22, X21, [X31 + 0x20]
	0x01E7E2A4 LDP X24, X23, [X31 + 0x10]
	0x01E7E2A8 LDR X8, [X8 + 0xB8]
	0x01E7E2AC STR X19, [X8 + 0x8]
	0x01E7E2B0 LDP X20, X19, [X31 + 0x30]
	0x01E7E2B4 LDR X30, [X31], #0x40
	0x01E7E2B8 RET
	0x01E7E2BC SUB X31, X31, 0x70
	0x01E7E2C0 STP X29, X30, [X31 + 0x10]
	0x01E7E2C4 STP X28, X27, [X31 + 0x20]
	0x01E7E2C8 STP X26, X25, [X31 + 0x30]
	0x01E7E2CC STP X24, X23, [X31 + 0x40]
	0x01E7E2D0 STP X22, X21, [X31 + 0x50]
	0x01E7E2D4 STP X20, X19, [X31 + 0x60]
	0x01E7E2D8 ADRP X22, 0x255B000
	0x01E7E2DC LDRB W8, [X22 + 0x1D6]
	0x01E7E2E0 MOV W21, W2
	0x01E7E2E4 MOV X20, X1
	0x01E7E2E8 MOV X19, X0
	0x01E7E2EC TBNZ X8, 0x0, 0x1E7E304
	0x01E7E2F0 ADRP X0, 0x227F000
	0x01E7E2F4 LDR X0, [X0 + 0xBA0]
	0x01E7E2F8 BL 0x1C16CF4
	0x01E7E2FC MOVZ W8, 0x1
	0x01E7E300 STRB W8, [X22 + 0x1D6]
	0x01E7E304 CBZ X19, 0x1E7E810
	0x01E7E308 LDR W8, [X19 + 0x54]
	0x01E7E30C CMP W8, 0x3
	0x01E7E310 B.HI 0x1E7E7F0
	0x01E7E314 LDRH W22, [X19 + 0x48]
	0x01E7E318 ADRP X9, 0xFFFFFFFFFECAF000
	0x01E7E31C ADD X9, X9, 0xC08
	0x01E7E320 ADR X10, 0x10
	0x01E7E324 LDRH W11, [X9, X8, LSL #1]
	0x01E7E328 ADD X10, X10, X11, 0x2, LSL
	0x01E7E32C BR X10
	0x01E7E330 ADRP X23, 0x227F000
	0x01E7E334 LDR X23, [X23 + 0xBA0]
	0x01E7E338 LDR X0, [X23]
	0x01E7E33C LDR W8, [X0 + 0xE0]
	0x01E7E340 CBNZ W8, 0x1E7E34C
	0x01E7E344 BL 0x1C16DFC
	0x01E7E348 LDRH W22, [X19 + 0x48]
	0x01E7E34C LDR W8, [X19 + 0x7C]
	0x01E7E350 LDR W12, [X19 + 0x64]
	0x01E7E354 ADD W9, W22, 0x1
	0x01E7E358 AND W13, W9, 0xFFFF
	0x01E7E35C ADD W10, W22, 0x2
	0x01E7E360 MOVZ W11, 0x1
	0x01E7E364 CMP W13, W9
	0x01E7E368 CSINC W9, W10, W22, NE
	0x01E7E36C CSINC W22, W11, W22, NE
	0x01E7E370 CMP W12, W8
	0x01E7E374 STRH W9, [X19 + 0x48]
	0x01E7E378 STR W8, [X19 + 0x60]
	0x01E7E37C B.GE 0x1E7E3A4
	0x01E7E380 LDR X0, [X23]
	0x01E7E384 LDR W8, [X0 + 0xE0]
	0x01E7E388 CBNZ W8, 0x1E7E390
	0x01E7E38C BL 0x1C16DFC
	0x01E7E390 MOV X0, X19
	0x01E7E394 BL 0x1E80B68
	0x01E7E398 LDP W8, W9, [X19 + 0x60]
	0x01E7E39C CMP W9, W8
	0x01E7E3A0 B.LT 0x1E7E380
	0x01E7E3A4 LDR X0, [X19 + 0x58]
	0x01E7E3A8 LDR X1, [X19 + 0x70]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x255C000
	007 Move W8, [X21+449]
	008 Move X19, X1
	009 Move X20, X0
	010 Move [X31+8], X2
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2276000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+449], W8
	020 Add X0, X31, 8
	021 Move X1, X31
	022 Move [X31], X31
	023 Call NetworkBehaviourId.get_IsValid, X0
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {61}
	028 Compare X20, 0
	029 JumpIfEqual {95}
	030 Move X0, [X20+56]
	031 Compare X0, 0
	032 JumpIfEqual {95}
	033 Move X1, [X31+8]
	034 Add X2, X31, 0
	035 Move X3, X31
	036 Call NetworkRunner.TryFindBehaviour, X0, X1, X2
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {89}
	041 Compare X19, 0
	042 JumpIfEqual {95}
	043 Move X0, X19
	044 Move X1, X31
	045 Call Transform.get_parent, X0
	046 Move X8, [X31]
	047 Compare X8, 0
	048 JumpIfEqual {95}
	049 Move X20, X0
	050 Move X0, X8
	051 Move X1, X31
	052 Call Component.get_transform, X0
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X0, [X31]
	055 Compare X0, 0
	056 JumpIfEqual {95}
	057 Move X1, X31
	058 Call Component.get_transform, X0
	059 Move X1, X0
	060 Move X0, X19
	061 Move W8, [X31+12]
	062 Compare W8, 0
	063 JumpIfNotEqual {89}
	064 Compare X19, 0
	065 JumpIfEqual {95}
	066 Move X0, X19
	067 Move X1, X31
	068 Call Transform.get_parent, X0
	069 Move X8, 0x2276000
	070 Move X8, [X8+1432]
	071 Move X20, X0
	072 Move X8, [X8]
	073 Move W9, [X8+224]
	074 Compare W9, 0
	075 JumpIfNotEqual {78}
	076 Move X0, X8
	077 Call 0x1C17DFC
	078 Move X0, X20
	079 Move X1, X31
	080 Call Object.op_Implicit, X0
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {89}
	085 Move X0, X19
	086 Move X1, X31
	087 Move X2, X31
	088 Call Transform.set_parent, X0, X1
	089 Move X20, [X31+32]
	090 Move X19, [X31+40]
	091 Move X30, [X31+16]
	092 Move X21, [X31+24]
	093 Add X31, X31, 48
	094 Return 
	095 Call 0x1C17F20

Method: System.Void ResolveAOIOverride(Fusion.NetworkTRSP behaviour, UnityEngine.Transform parent)

Disassembly:
	0x01E7E5C8 ADD W10, W8, 0x1
	0x01E7E5CC STR W10, [X19 + 0x60]
	0x01E7E5D0 STR X21, [X9, W8, SXTW]
	0x01E7E5D4 B 0x1E7E5DC
	0x01E7E5D8 STRH W22, [X21 + 0x2]
	0x01E7E5DC SUBS X25, X25, 0x1
	0x01E7E5E0 ADD X26, X26, 0x8
	0x01E7E5E4 B.NE 0x1E7E564
	0x01E7E5E8 LDR W8, [X19 + 0x60]
	0x01E7E5EC CMP W8, 0x0
	0x01E7E5F0 B.GT 0x1E7E438
	0x01E7E5F4 ADRP X8, 0xFFFFFFFFFEC6F000
	0x01E7E5F8 LDR V0, [X8 + 0xEC0]
	0x01E7E5FC MOVZ W8, 0x2
	0x01E7E600 STR W8, [X19 + 0x54]
	0x01E7E604 STUR D0, [X19 + 0x4C]
	0x01E7E608 LDR W8, [X19 + 0x4C]
	0x01E7E60C LDR W9, [X19 + 0x20]
	0x01E7E610 CMP W8, W9
	0x01E7E614 B.GE 0x1E7E760
	0x01E7E618 ADRP X20, 0x227F000
	0x01E7E61C LDR W11, [X19 + 0x50]
	0x01E7E620 LDR W10, [X19 + 0x68]
	0x01E7E624 LDR X20, [X20 + 0xBA0]
	0x01E7E628 MOVZ W21, 0x48
	0x01E7E62C MOVZ W23, 0x30
	0x01E7E630 CMP W11, W10
	0x01E7E634 B.GE 0x1E7E74C
	0x01E7E638 LDR X9, [X19 + 0x18]
	0x01E7E63C LDR X24, [X9, W8, SXTW]
	0x01E7E640 CBZ X24, 0x1E7E810
	0x01E7E644 LDR X8, [X24 + 0x18]
	0x01E7E648 NOP
	0x01E7E64C SMADDL X25, X11, X21, X8
	0x01E7E650 CBZ X25, 0x1E7E810
	0x01E7E654 LDR W8, [X25 + 0x3C]
	0x01E7E658 CMP W8, 0x1
	0x01E7E65C B.LT 0x1E7E72C
	0x01E7E660 LDR X0, [X20]
	0x01E7E664 LDRSW X26, [X25 + 0x20]
	0x01E7E668 LDR W8, [X0 + 0xE0]
	0x01E7E66C CBNZ W8, 0x1E7E680
	0x01E7E670 BL 0x1C16DFC
	0x01E7E674 LDR W8, [X25 + 0x3C]
	0x01E7E678 CMP W8, 0x1
	0x01E7E67C B.LT 0x1E7E72C
	0x01E7E680 LDR X8, [X19 + 0x28]
	0x01E7E684 NOP
	0x01E7E688 MADD X26, X26, X23, X8
	0x01E7E68C CBZ X26, 0x1E7E810
	0x01E7E690 MOV W27, W31
	0x01E7E694 LDR W8, [X26 + 0x24]
	0x01E7E698 LDR X9, [X25 + 0x28]
	0x01E7E69C MUL W8, W8, W27
	0x01E7E6A0 ADD X28, X9, W8, SXTW
	0x01E7E6A4 LDRH W8, [X28 + 0x2]
	0x01E7E6A8 CMP W8, W22, UXTH
	0x01E7E6AC B.EQ 0x1E7E71C
	0x01E7E6B0 LDRB W8, [X28]
	0x01E7E6B4 TBZ X8, 0x0, 0x1E7E71C
	0x01E7E6B8 TBNZ X8, 0x1, 0x1E7E814
	0x01E7E6BC TBNZ X8, 0x4, 0x1E7E708
	0x01E7E6C0 LDP W8, W9, [X19 + 0x60]
	0x01E7E6C4 CMP W8, W9
	0x01E7E6C8 B.NE 0x1E7E6E8
	0x01E7E6CC LDR X0, [X20]
	0x01E7E6D0 LDR W8, [X0 + 0xE0]
	0x01E7E6D4 CBNZ W8, 0x1E7E6DC
	0x01E7E6D8 BL 0x1C16DFC
	0x01E7E6DC MOV X0, X19
	0x01E7E6E0 BL 0x1E80B68
	0x01E7E6E4 LDR W8, [X19 + 0x60]
	0x01E7E6E8 LDR X9, [X19 + 0x58]
	0x01E7E6EC ADD W10, W8, 0x1
	0x01E7E6F0 STR W10, [X19 + 0x60]
	0x01E7E6F4 STR X28, [X9, W8, SXTW]
	0x01E7E6F8 CBZ X28, 0x1E7E810
	0x01E7E6FC LDRB W8, [X28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x255C000
	007 Move W8, [X21+450]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x2280000
	015 Move X0, [X0+2888]
	016 Call 0x1C17CF4
	017 Move X0, 0x2276000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x2280000
	021 Move X0, [X0+2896]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+450], W8
	025 Move X22, 0x2276000
	026 Move X21, 0x2280000
	027 Move X22, [X22+1432]
	028 Move X21, [X21+2888]
	029 Move [X31+8], X31
	030 Move X0, [X22]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X20
	036 Move X1, X31
	037 Call Object.op_Implicit, X0
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {75}
	042 Compare X20, 0
	043 JumpIfEqual {98}
	044 Move X2, [X21]
	045 Add X1, X31, 8
	046 Move X0, X20
	047 Call 0x21A5990, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {56}
	052 Move X0, X20
	053 Move X1, X31
	054 Call Transform.get_parent, X0
	055 Move X20, X0
	056 Compare X19, 0
	057 JumpIfEqual {98}
	058 Move X10, 0x2280000
	059 Move X8, [X31+8]
	060 Move X9, [X19+64]
	061 Move X10, [X10+2896]
	062 Move X2, X31
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X1, [X10]
	065 NotImplemented "Instruction CSET not yet implemented."
	066 Call Assert.Always, X0, X1
	067 Move X0, X19
	068 Call NetworkTRSP.get_State, X0
	069 Move X8, [X31+8]
	070 Move X21, X0
	071 Move X1, X31
	072 Move X0, X8
	073 Call NetworkObject.op_Implicit, X0
	074 Move [X21+52], W0
	075 Move X0, [X22]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X0, X20
	081 Move X1, X31
	082 Call Object.op_Implicit, X0
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {92}
	087 Compare X19, 0
	088 JumpIfEqual {98}
	089 Move X0, X19
	090 Call NetworkTRSP.get_State, X0
	091 Move [X0+52], W31
	092 Move X20, [X31+32]
	093 Move X19, [X31+40]
	094 Move X22, [X31+16]
	095 Move X21, [X31+24]
	096 Move X30, [X31+48]
	097 Return 
	098 Call 0x1C17F20

Method: System.Void Render(Fusion.NetworkTRSP behaviour, UnityEngine.Transform transform, System.Boolean syncScale, System.Boolean syncParent, System.Boolean local, ref Fusion.Tick initial)

Disassembly:
	0x01E7ED18 LDR X9, [X0 + 0xB8]
	0x01E7ED1C LDR X9, [X9]
	0x01E7ED20 CBZ X9, 0x1E7F1E4
	0x01E7ED24 LDR W10, [X9 + 0x18]
	0x01E7ED28 CMP W8, W10
	0x01E7ED2C B.CS 0x1E7F1E8
	0x01E7ED30 ADD X8, X9, W8, 0x2, SXTW
	0x01E7ED34 LDR W8, [X8 + 0x20]
	0x01E7ED38 UBFM W9, W8, 0x1D, 0x1C
	0x01E7ED3C CMP W8, 0x1
	0x01E7ED40 STP W8, W9, [X29 + 0x20]
	0x01E7ED44 B.LT 0x1E7ED50
	0x01E7ED48 UDIV W8, W28, W8
	0x01E7ED4C B 0x1E7ED54
	0x01E7ED50 MOV W8, W31
	0x01E7ED54 ADD X23, X23, 0x1
	0x01E7ED58 CMP X23, 0x31
	0x01E7ED5C ADD X21, X21, 0x30
	0x01E7ED60 STR W8, [X29 + 0x28]
	0x01E7ED64 B.NE 0x1E7ECE8
	0x01E7ED68 LDR X8, [X25]
	0x01E7ED6C LDR W9, [X8 + 0xE0]
	0x01E7ED70 CBNZ W9, 0x1E7ED80
	0x01E7ED74 MOV X0, X8
	0x01E7ED78 BL 0x1C16DFC
	0x01E7ED7C LDR X8, [X25]
	0x01E7ED80 LDR X0, [X27]
	0x01E7ED84 LDR X8, [X8 + 0xB8]
	0x01E7ED88 LDR W9, [X0 + 0xE0]
	0x01E7ED8C LDR X21, [X8]
	0x01E7ED90 CBNZ W9, 0x1E7ED9C
	0x01E7ED94 BL 0x1C16DFC
	0x01E7ED98 LDR X0, [X27]
	0x01E7ED9C LDR X8, [X0 + 0xB8]
	0x01E7EDA0 LDR X22, [X8 + 0x8]
	0x01E7EDA4 CBNZ X22, 0x1E7EDF8
	0x01E7EDA8 LDR W8, [X0 + 0xE0]
	0x01E7EDAC CBNZ W8, 0x1E7EDB8
	0x01E7EDB0 BL 0x1C16DFC
	0x01E7EDB4 LDR X0, [X27]
	0x01E7EDB8 ADRP X9, 0x227F000
	0x01E7EDBC LDR X8, [X0 + 0xB8]
	0x01E7EDC0 LDR X9, [X9 + 0xBE8]
	0x01E7EDC4 LDR X23, [X8]
	0x01E7EDC8 LDR X0, [X9]
	0x01E7EDCC BL 0x1C16F10
	0x01E7EDD0 ADRP X8, 0x227F000
	0x01E7EDD4 LDR X8, [X8 + 0xC30]
	0x01E7EDD8 MOV X1, X23
	0x01E7EDDC MOV X3, X31
	0x01E7EDE0 MOV X22, X0
	0x01E7EDE4 LDR X2, [X8]
	0x01E7EDE8 BL 0x2D2A310
	0x01E7EDEC LDR X8, [X27]
	0x01E7EDF0 LDR X8, [X8 + 0xB8]
	0x01E7EDF4 STR X22, [X8 + 0x8]
	0x01E7EDF8 LDR X2, [X26]
	0x01E7EDFC MOV X0, X21
	0x01E7EE00 MOV X1, X22
	0x01E7EE04 BL 0x21C9638
	0x01E7EE08 CBZ X20, 0x1E7F1E4
	0x01E7EE0C STRH W0, [X20 + 0x10]
	0x01E7EE10 LDR X0, [X25]
	0x01E7EE14 LDR W8, [X0 + 0xE0]
	0x01E7EE18 CBNZ W8, 0x1E7EE24
	0x01E7EE1C BL 0x1C16DFC
	0x01E7EE20 LDR X0, [X25]
	0x01E7EE24 LDR X8, [X0 + 0xB8]
	0x01E7EE28 LDR X21, [X8]
	0x01E7EE2C ADRP X8, 0x227F000
	0x01E7EE30 LDR X8, [X8 + 0xBD8]
	0x01E7EE34 LDR X0, [X8]
	0x01E7EE38 BL 0x1C16F10
	0x01E7EE3C ADRP X8, 0x227F000
	0x01E7EE40 LDR X8, [X8 + 0xC48]
	0x01E7EE44 MOV X1, X20
	0x01E7EE48 MOV X3, X31
	0x01E7EE4C MOV X22, X0
	0x01E7EE50 LDR X2, [X8]
	0x01E7EE54 BL 0x2D29F50
	0x01E7EE58 ADRP X8, 0x227F000
	0x01E7EE5C LDR X8, [X8 + 0xBB8]
	0x01E7EE60 MOV X0, X21
	0x01E7EE64 MOV X1, X22
	0x01E7EE68 LDR X2, [X8]
	0x01E7EE6C BL 0x21C3DC0
	0x01E7EE70 CBZ X1, 0x1E7F1E4
	0x01E7EE74 LDRH W8, [X1 + 0x14]
	0x01E7EE78 LDRH W9, [X20 + 0x10]
	0x01E7EE7C ADD W0, W9, W8
	0x01E7EE80 STR W0, [X19 + 0x38]
	0x01E7EE84 LDR X1, [X24]
	0x01E7EE88 BL 0x222206C
	0x01E7EE8C STR X0, [X19 + 0x30]
	0x01E7EE90 LDR W0, [X19 + 0x38]
	0x01E7EE94 LDR X1, [X24]
	0x01E7EE98 BL 0x222206C
	0x01E7EE9C STR X0, [X19 + 0x40]
	0x01E7EEA0 LDR X8, [X25]
	0x01E7EEA4 LDR X0, [X27]
	0x01E7EEA8 LDR X8, [X8 + 0xB8]
	0x01E7EEAC LDR W9, [X0 + 0xE0]
	0x01E7EEB0 LDR X20, [X8]
	0x01E7EEB4 CBNZ W9, 0x1E7EEC0
	0x01E7EEB8 BL 0x1C16DFC
	0x01E7EEBC LDR X0, [X27]
	0x01E7EEC0 LDR X8, [X0 + 0xB8]
	0x01E7EEC4 LDR X21, [X8 + 0x10]
	0x01E7EEC8 CBNZ X21, 0x1E7EF1C
	0x01E7EECC LDR W8, [X0 + 0xE0]
	0x01E7EED0 CBNZ W8, 0x1E7EEDC
	0x01E7EED4 BL 0x1C16DFC
	0x01E7EED8 LDR X0, [X27]
	0x01E7EEDC ADRP X9, 0x227F000
	0x01E7EEE0 LDR X8, [X0 + 0xB8]
	0x01E7EEE4 LDR X9, [X9 + 0xBE0]
	0x01E7EEE8 LDR X22, [X8]
	0x01E7EEEC LDR X0, [X9]
	0x01E7EEF0 BL 0x1C16F10
	0x01E7EEF4 ADRP X8, 0x227F000
	0x01E7EEF8 LDR X8, [X8 + 0xC38]
	0x01E7EEFC MOV X1, X22
	0x01E7EF00 MOV X3, X31
	0x01E7EF04 MOV X21, X0
	0x01E7EF08 LDR X2, [X8]
	0x01E7EF0C BL 0x2D2A1D0
	0x01E7EF10 LDR X8, [X27]
	0x01E7EF14 LDR X8, [X8 + 0xB8]
	0x01E7EF18 STR X21, [X8 + 0x10]
	0x01E7EF1C ADRP X8, 0x227F000
	0x01E7EF20 LDR X8, [X8 + 0xBD0]
	0x01E7EF24 MOV X0, X20
	0x01E7EF28 MOV X1, X21
	0x01E7EF2C LDR X2, [X8]
	0x01E7EF30 BL 0x21CAD04
	0x01E7EF34 LDR X8, [X27]
	0x01E7EF38 MOV X20, X0
	0x01E7EF3C LDR W9, [X8 + 0xE0]
	0x01E7EF40 CBNZ W9, 0x1E7EF50
	0x01E7EF44 MOV X0, X8
	0x01E7EF48 BL 0x1C16DFC
	0x01E7EF4C LDR X8, [X27]
	0x01E7EF50 LDR X9, [X8 + 0xB8]
	0x01E7EF54 LDR X21, [X9 + 0x18]
	0x01E7EF58 CBNZ X21, 0x1E7EFB0
	0x01E7EF5C LDR W9, [X8 + 0xE0]
	0x01E7EF60 CBNZ W9, 0x1E7EF70
	0x01E7EF64 MOV X0, X8
	0x01E7EF68 BL 0x1C16DFC
	0x01E7EF6C LDR X8, [X27]
	0x01E7EF70 ADRP X9, 0x227F000
	0x01E7EF74 LDR X8, [X8 + 0xB8]
	0x01E7EF78 LDR X9, [X9 + 0xBF0]
	0x01E7EF7C LDR X22, [X8]
	0x01E7EF80 LDR X0, [X9]
	0x01E7EF84 BL 0x1C16F10
	0x01E7EF88 ADRP X8, 0x227F000
	0x01E7EF8C LDR X8, [X8 + 0xC40]
	0x01E7EF90 MOV X1, X22
	0x01E7EF94 MOV X3, X31
	0x01E7EF98 MOV X21, X0
	0x01E7EF9C LDR X2, [X8]
	0x01E7EFA0 BL 0x2D30D04
	0x01E7EFA4 LDR X8, [X27]
	0x01E7EFA8 LDR X8, [X8 + 0xB8]
	0x01E7EFAC STR X21, [X8 + 0x18]
	0x01E7EFB0 ADRP X8, 0x227F000
	0x01E7EFB4 LDR X8, [X8 + 0xBC8]
	0x01E7EFB8 MOV X0, X20
	0x01E7EFBC MOV X1, X21
	0x01E7EFC0 LDR X2, [X8]
	0x01E7EFC4 BL 0x21C9C34
	0x01E7EFC8 CBZ X0, 0x1E7F1E4
	0x01E7EFCC LDR X8, [X0]
	0x01E7EFD0 ADRP X10, 0x227F000
	0x01E7EFD4 MOV X20, X0
	0x01E7EFD8 LDRH W9, [X8 + 0x12E]
	0x01E7EFDC LDR X10, [X10 + 0xBF8]
	0x01E7EFE0 LDR X1, [X10]
	0x01E7EFE4 CBZ X9, 0x1E7F008
	0x01E7EFE8 LDR X10, [X8 + 0xB0]
	0x01E7EFEC ADD X10, X10, 0x8
	0x01E7EFF0 LDUR X11, [X10 - 0x8]
	0x01E7EFF4 CMP X11, X1
	0x01E7EFF8 B.EQ 0x1E7F018
	0x01E7EFFC SUBS X9, X9, 0x1
	0x01E7F000 ADD X10, X10, 0x10
	0x01E7F004 B.NE 0x1E7EFF0
	0x01E7F008 MOV X0, X20
	0x01E7F00C MOV W2, W31
	0x01E7F010 BL 0x1C5C788
	0x01E7F014 B 0x1E7F024
	0x01E7F018 LDRSW X9, [X10]
	0x01E7F01C ADD X8, X8, X9, 0x4, LSL
	0x01E7F020 ADD X0, X8, 0x138
	0x01E7F024 LDP X8, X1, [X0]
	0x01E7F028 MOV X0, X20
	0x01E7F02C BLR X8
	0x01E7F030 MOV X20, X0
	0x01E7F034 CBZ X0, 0x1E7F1F4
	0x01E7F038 ADRP X21, 0x2274000
	0x01E7F03C ADRP X22, 0x227E000
	0x01E7F040 LDR X21, [X21 + 0xE18]
	0x01E7F044 LDR X22, [X22 + 0xC00]
	0x01E7F048 MOVZ X23, 0x1
	0x01E7F04C LDR X8, [X20]
	0x01E7F050 LDR X1, [X21]
	0x01E7F054 LDRH W9, [X8 + 0x12E]
	0x01E7F058 CBZ X9, 0x1E7F07C
	0x01E7F05C LDR X10, [X8 + 0xB0]
	0x01E7F060 ADD X10, X10, 0x8
	0x01E7F064 LDUR X11, [X10 - 0x8]
	0x01E7F068 CMP X11, X1
	0x01E7F06C B.EQ 0x1E7F08C
	0x01E7F070 SUBS X9, X9, 0x1
	0x01E7F074 ADD X10, X10, 0x10
	0x01E7F078 B.NE 0x1E7F064
	0x01E7F07C MOV X0, X20
	0x01E7F080 MOV W2, W31
	0x01E7F084 BL 0x1C5C788
	0x01E7F088 B 0x1E7F098
	0x01E7F08C LDRSW X9, [X10]
	0x01E7F090 ADD X8, X8, X9, 0x4, LSL
	0x01E7F094 ADD X0, X8, 0x138
	0x01E7F098 LDP X8, X1, [X0]
	0x01E7F09C MOV X0, X20
	0x01E7F0A0 BLR X8
	0x01E7F0A4 TBZ X0, 0x0, 0x1E7F158
	0x01E7F0A8 LDR X8, [X20]
	0x01E7F0AC LDR X1, [X22]
	0x01E7F0B0 LDRH W9, [X8 + 0x12E]
	0x01E7F0B4 CBZ X9, 0x1E7F0D8
	0x01E7F0B8 LDR X10, [X8 + 0xB0]
	0x01E7F0BC ADD X10, X10, 0x8
	0x01E7F0C0 LDUR X11, [X10 - 0x8]
	0x01E7F0C4 CMP X11, X1
	0x01E7F0C8 B.EQ 0x1E7F0E8
	0x01E7F0CC SUBS X9, X9, 0x1
	0x01E7F0D0 ADD X10, X10, 0x10
	0x01E7F0D4 B.NE 0x1E7F0C0
	0x01E7F0D8 MOV X0, X20
	0x01E7F0DC MOV W2, W31
	0x01E7F0E0 BL 0x1C5C788
	0x01E7F0E4 B 0x1E7F0F4
	0x01E7F0E8 LDRSW X9, [X10]
	0x01E7F0EC ADD X8, X8, X9, 0x4, LSL
	0x01E7F0F0 ADD X0, X8, 0x138
	0x01E7F0F4 LDP X8, X1, [X0]
	0x01E7F0F8 MOV X0, X20
	0x01E7F0FC BLR X8
	0x01E7F100 CBZ X0, 0x1E7F1EC
	0x01E7F104 LDR X10, [X0 + 0x18]
	0x01E7F108 CBZ X10, 0x1E7F1F0
	0x01E7F10C LDR X8, [X19 + 0x30]
	0x01E7F110 LDRH W11, [X0 + 0x14]
	0x01E7F114 LDR X9, [X10 + 0x18]
	0x01E7F118 STR W9, [X8, X11, LSL #2]
	0x01E7F11C LDR X12, [X19 + 0x40]
	0x01E7F120 LDR W13, [X0 + 0x10]

ISIL:
	001 Subtract X31, X31, 336
	002 Move [X31+176], D15
	003 Move [X31+184], D14
	004 Move [X31+192], D13
	005 Move [X31+200], D12
	006 Move [X31+208], D11
	007 Move [X31+216], D10
	008 Move [X31+224], D9
	009 Move [X31+232], D8
	010 Move [X31+240], X29
	011 Move [X31+248], X30
	012 Move [X31+256], X28
	013 Move [X31+264], X27
	014 Move [X31+272], X26
	015 Move [X31+280], X25
	016 Move [X31+288], X24
	017 Move [X31+296], X23
	018 Move [X31+304], X22
	019 Move [X31+312], X21
	020 Move [X31+320], X20
	021 Move [X31+328], X19
	022 NotImplemented "Instruction MRS not yet implemented."
	023 Move X8, [X29+40]
	024 Move X21, 0x255C000
	025 Move X27, X5
	026 Move W20, W4
	027 Move [X31+168], X8
	028 Move W8, [X21+451]
	029 Move W25, W3
	030 Move W22, W2
	031 Move X19, X1
	032 Move X24, X0
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {42}
	037 Move X0, 0x2280000
	038 Move X0, [X0+2928]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X21+451], W8
	042 Move [X31+96], X31
	043 Move [X31+104], X31
	044 Move [X31+80], X31
	045 Move [X31+88], X31
	046 Move [X31+76], W31
	047 Compare X24, 0
	048 JumpIfEqual {315}
	049 Add X1, X31, 96
	050 Add X2, X31, 80
	051 Add X3, X31, 76
	052 Move X0, X24
	053 Move X4, X31
	054 Call NetworkBehaviour.TryGetSnapshotsBuffers, X0, X1, X2, X3
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {290}
	059 Move [X31+56], W20
	060 Move X20, 0x2280000
	061 Move X20, [X20+2928]
	062 Add X8, X31, 112
	063 Add X0, X31, 96
	064 Move W1, W31
	065 Move X2, [X20]
	066 Call NetworkBehaviourBuffer.ReinterpretState, X0, X1
	067 Move X2, [X20]
	068 Move X26, [X31+112]
	069 Move V12, [X31+120]
	070 Move S13, [X31+128]
	071 Move S9, [X31+132]
	072 Move S10, [X31+136]
	073 Move S8, [X31+140]
	074 Move V11, [X31+144]
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 Move W21, [X31+156]
	077 Move X28, [X31+160]
	078 Add X8, X31, 112
	079 Add X0, X31, 80
	080 Move W1, W31
	081 Call NetworkBehaviourBuffer.ReinterpretState, X0, X1
	082 Move X8, [X31+160]
	083 Move W10, [X27]
	084 Move W9, [X31+92]
	085 Compare W10, 0
	086 JumpIfEqual {88}
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move [X27], W9
	089 Move W9, 0x3F800000
	090 Move [X31+76], W9
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move V0, [X31+76]
	093 Move S1, 0.5
	094 Move S2, 1
	095 NotImplemented "Instruction FCMP not yet implemented."
	096 Move S0, W31
	097 NotImplemented "Instruction FCSEL not yet implemented."
	098 Move [X31+76], S0
	099 Move S15, [X31+128]
	100 Move S1, [X31+132]
	101 Move V0, [X31+136]
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 Move W28, [X31+156]
	104 Move V14, [X31+120]
	105 Move [X31+68], S0
	106 Move [X31+76], S1
	107 Move V1, [X31+140]
	108 Move V0, [X31+144]
	109 Move [X31+60], S0
	110 Move [X31+68], S1
	111 Move TEMP, X25
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {144}
	115 Move X20, 0x255B000
	116 Move W8, [X20+2592]
	117 Move X25, [X31+112]
	118 Compare W8, 0
	119 JumpIfNotEqual {125}
	120 Move X0, 0x2279000
	121 Move X0, [X0+920]
	122 Call 0x1C17CF4
	123 Move W8, 1
	124 Move [X20+2592], W8
	125 Move X8, 0x2279000
	126 Move X8, [X8+920]
	127 Move X0, [X8]
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X8, X25
	134 ShiftRight X8, 32
	135 And X8, X8, 0x7FFFFFFF
	136 Move X9, X26
	137 ShiftRight X9, 32
	138 And X9, X9, 0x7FFFFFFF
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X0, X24
	141 Move X1, X19
	142 Move X2, X26
	143 Call NetworkTRSP.SetParentTransform, X0, X1, X2
	144 Move TEMP, X22
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfNotEqual {236}
	148 Move X0, X27
	149 Move X1, X28
	150 Move X2, X23
	151 Move X3, X21
	152 Move X4, X31
	153 Call Vector3Compressed.op_Equality, X0, X1
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfNotEqual {199}
	158 Compare X19, 0
	159 JumpIfEqual {315}
	160 Move X0, X19
	161 Move X1, X31
	162 Call Transform.get_localScale, X0
	163 Move X0, X31
	164 Call 0x1E2F540
	165 And X1, X1, 0
	166 Move X2, X23
	167 Move X3, X21
	168 Move X4, X31
	169 Call Vector3Compressed.op_Inequality, X0, X1
	170 Move TEMP, X0
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfNotEqual {236}
	174 Move X0, X23
	175 Move X1, X21
	176 Move X2, X31
	177 Call 0x1E2F6F8
	178 Move X0, X19
	179 Move X1, X31
	180 Call Transform.set_localScale, X0, X1
	181 Move V0, [X31+76]
	182 Move S1, 0.5
	183 Move X0, X24
	184 Move X1, X19
	185 NotImplemented "Instruction FCMP not yet implemented."
	186 NotImplemented "Instruction CSEL not yet implemented."
	187 Call NetworkTRSP.SetParentTransform, X0, X1, X2
	188 Move V0, [X31+76]
	189 Move S2, 0.5
	190 Move S1, 1
	191 NotImplemented "Instruction FCMP not yet implemented."
	192 Move S0, W31
	193 NotImplemented "Instruction FCSEL not yet implemented."
	194 Move [X31+76], S0
	195 Move TEMP, X22
	196 And TEMP, TEMP, 1
	197 Compare TEMP, 1
	198 JumpIfEqual {148}
	199 Move X0, X23
	200 Move X1, X21
	201 Move X2, X31
	202 Move [X31+24], S8
	203 Move [X31+32], S10
	204 Move [X31+32], S9
	205 Call 0x1E2F6F8
	206 Move X0, X27
	207 Move X1, X28
	208 Move X2, X31
	209 Move V8, V0
	210 Move V9, V1
	211 Move V10, V2
	212 Call 0x1E2F6F8
	213 Move V3, [X31+76]
	214 Move S4, 1
	215 NotImplemented "Instruction FMIN not yet implemented."
	216 NotImplemented "Instruction FCMP not yet implemented."
	217 Move S3, W31
	218 NotImplemented "Instruction FCSEL not yet implemented."
	219 Compare X19, 0
	220 JumpIfEqual {315}
	221 Subtract S2, S2, S10
	222 Subtract S1, S1, S9
	223 Subtract S0, S0, S8
	224 Multiply S2, S2, S3
	225 Multiply S1, S1, S3
	226 Multiply S0, S0, S3
	227 Add S2, S10, S2
	228 Add S1, S9, S1
	229 Add S0, S8, S0
	230 Move X0, X19
	231 Move X1, X31
	232 Call Transform.set_localScale, X0, X1
	233 Move S10, [X31+28]
	234 Move S9, [X31+32]
	235 Move V8, [X31+24]
	236 Move S4, [X31+72]
	237 Move S0, [X31+76]
	238 Move S1, 1
	239 Move S6, [X31+64]
	240 Move S5, [X31+68]
	241 Move V7, [X31+60]
	242 NotImplemented "Instruction FMIN not yet implemented."
	243 NotImplemented "Instruction FCMP not yet implemented."
	244 Move S2, W31
	245 NotImplemented "Instruction FCSEL not yet implemented."
	246 Move [X31+2], V1
	247 Move [X31], S0
	248 Move V0, V9
	249 Move V1, V10
	250 Move V2, V8
	251 Move V3, V11
	252 Move X0, X31
	253 Call Quaternion.Slerp, X0, X1, V0
	254 Compare X19, 0
	255 JumpIfEqual {315}
	256 Move V9, V2
	257 Move V2, [X31+2]
	258 Move V11, V0
	259 Move V10, V1
	260 Subtract S0, S15, S13
	261 Subtract V1, V14, V12
	262 Move W8, [X31+56]
	263 Multiply S0, S0, S2
	264 NotImplemented "Instruction INVALID not yet implemented."
	265 Add S2, S13, S0
	266 Add V0, V12, V1
	267 Move V8, V3
	268 Move S1, V0.S[1]
	269 Move TEMP, X8
	270 And TEMP, TEMP, 1
	271 Compare TEMP, 1
	272 JumpIfNotEqual {283}
	273 Move X0, X19
	274 Move X1, X31
	275 Call Transform.set_localPosition, X0, X1
	276 Move X0, X19
	277 Move V0, V11
	278 Move V1, V10
	279 Move V2, V9
	280 Move V3, V8
	281 Move X1, X31
	282 Call Transform.set_localRotation, X0, X1
	283 Move X0, X19
	284 Move V3, V11
	285 Move V4, V10
	286 Move V5, V9
	287 Move V6, V8
	288 Move X1, X31
	289 Call Transform.SetPositionAndRotation, X0, X1, X2
	290 Move X8, [X29+40]
	291 Move X9, [X31+168]
	292 NotImplemented "Instruction CMP not yet implemented."
	293 Move X20, [X31+320]
	294 Move X19, [X31+328]
	295 Move X22, [X31+304]
	296 Move X21, [X31+312]
	297 Move X24, [X31+288]
	298 Move X23, [X31+296]
	299 Move X26, [X31+272]
	300 Move X25, [X31+280]
	301 Move X28, [X31+256]
	302 Move X27, [X31+264]
	303 Move X29, [X31+240]
	304 Move X30, [X31+248]
	305 Move D9, [X31+224]
	306 Move D8, [X31+232]
	307 Move D11, [X31+208]
	308 Move D10, [X31+216]
	309 Move D13, [X31+192]
	310 Move D12, [X31+200]
	311 Move D15, [X31+176]
	312 Move D14, [X31+184]
	313 Add X31, X31, 336
	314 Return 
	315 Call 0x1C17F20
	316 Call 0x3EB2B20

Method: System.Void .ctor()

Disassembly:
	0x01E7F134 ADD X10, X10, 0x20
	0x01E7F138 ADD X11, X23, X11, 0x20, LSL

ISIL:
	001 Move X1, X31
	002 Call NetworkBehaviour..ctor, X0
	003 Return 

