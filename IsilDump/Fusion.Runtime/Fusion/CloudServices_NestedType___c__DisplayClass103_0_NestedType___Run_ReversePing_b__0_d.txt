Type: Fusion.CloudServices/<>c__DisplayClass103_0/<<Run_ReversePing>b__0>d

Method: System.Void MoveNext()

Disassembly:
	0x01E6D10C CBZ X8, 0x1E6D230
	0x01E6D110 LDR X8, [X8 + 0x118]
	0x01E6D114 CBZ X8, 0x1E6D234
	0x01E6D118 LDR X9, [X8 + 0x40]
	0x01E6D11C LDR V0, [X8 + 0x3]
	0x01E6D120 STR X9, [X31 + 0x90]
	0x01E6D124 STR V0, [X31 + 0x8]
	0x01E6D128 ADD X2, X31, 0x80
	0x01E6D12C MOVZ W1, 0x2
	0x01E6D130 MOV X0, X20
	0x01E6D134 BL 0x1E6A134
	0x01E6D138 B 0x1E6D198
	0x01E6D13C LDR X8, [X20 + 0x20]
	0x01E6D140 CBZ X8, 0x1E6D200
	0x01E6D144 LDR X8, [X8 + 0x118]
	0x01E6D148 CBZ X8, 0x1E6D204
	0x01E6D14C ADRP X9, 0x2290000
	0x01E6D150 LDR X9, [X9 + 0x78]
	0x01E6D154 LDR W21, [X8 + 0x28]
	0x01E6D158 LDR X0, [X9]
	0x01E6D15C LDR W9, [X0 + 0xE0]
	0x01E6D160 CBNZ W9, 0x1E6D168
	0x01E6D164 BL 0x1C16DFC
	0x01E6D168 ADD X8, X31, 0x68
	0x01E6D16C MOV W0, W21
	0x01E6D170 MOV X1, X31
	0x01E6D174 BL 0x1EF8890
	0x01E6D178 LDUR V0, [X31 + 0x68]
	0x01E6D17C LDR X8, [X31 + 0x78]
	0x01E6D180 STR V0, [X31 + 0x5]
	0x01E6D184 STR X8, [X31 + 0x60]
	0x01E6D188 ADD X2, X31, 0x50
	0x01E6D18C MOVZ W1, 0x3
	0x01E6D190 MOV X0, X20
	0x01E6D194 BL 0x1E6A134
	0x01E6D198 MOVN W8, 0x1
	0x01E6D19C STR W8, [X19], #0x8
	0x01E6D1A0 MOV X0, X19
	0x01E6D1A4 MOV X1, X31
	0x01E6D1A8 BL 0x32C4204
	0x01E6D1AC LDR X8, [X23 + 0x28]
	0x01E6D1B0 LDR X9, [X31 + 0xD8]
	0x01E6D1B4 CMP X8, X9
	0x01E6D1B8 B.NE 0x1E6D238
	0x01E6D1BC LDP X20, X19, [X31 + 0x110]
	0x01E6D1C0 LDP X22, X21, [X31 + 0x100]
	0x01E6D1C4 LDP X30, X23, [X31 + 0xF0]
	0x01E6D1C8 LDR X29, [X31 + 0xE0]
	0x01E6D1CC ADD X31, X31, 0x120
	0x01E6D1D0 RET
	0x01E6D1D4 BL 0x1C16F20
	0x01E6D1D8 BL 0x1C16F20
	0x01E6D1DC BL 0x1C16F20
	0x01E6D1E0 BL 0x1C16F20
	0x01E6D1E4 BL 0x1C16F20
	0x01E6D1E8 BL 0x1C16F20
	0x01E6D1EC BL 0x1C16F20
	0x01E6D1F0 BL 0x1C16F20
	0x01E6D1F4 BL 0x1C16F20
	0x01E6D1F8 BL 0x1C16F20
	0x01E6D1FC BL 0x1C16F20
	0x01E6D200 BL 0x1C16F20
	0x01E6D204 BL 0x1C16F20
	0x01E6D208 BL 0x1C16F20
	0x01E6D20C BL 0x1C16F20
	0x01E6D210 BL 0x1C16F20
	0x01E6D214 BL 0x1C16F20
	0x01E6D218 BL 0x1C16F20
	0x01E6D21C BL 0x1C16F20
	0x01E6D220 BL 0x1C16F20
	0x01E6D224 BL 0x1C16F20
	0x01E6D228 BL 0x1C16F20
	0x01E6D22C BL 0x1C16F20
	0x01E6D230 BL 0x1C16F20
	0x01E6D234 BL 0x1C16F20
	0x01E6D238 BL 0x3EB1B20
	0x01E6D23C B 0x1E6D2FC
	0x01E6D240 B 0x1E6D2FC
	0x01E6D244 B 0x1E6D2FC
	0x01E6D248 B 0x1E6D2FC
	0x01E6D24C B 0x1E6D2FC
	0x01E6D250 B 0x1E6D2FC
	0x01E6D254 B 0x1E6D2FC
	0x01E6D258 B 0x1E6D2FC
	0x01E6D25C B 0x1E6D2FC
	0x01E6D260 B 0x1E6D2FC
	0x01E6D264 B 0x1E6D2FC
	0x01E6D268 B 0x1E6D2FC
	0x01E6D26C B 0x1E6D2FC
	0x01E6D270 B 0x1E6D2FC
	0x01E6D274 B 0x1E6D2FC
	0x01E6D278 B 0x1E6D2FC
	0x01E6D27C B 0x1E6D2FC
	0x01E6D280 B 0x1E6D2FC
	0x01E6D284 B 0x1E6D2FC
	0x01E6D288 B 0x1E6D2FC
	0x01E6D28C B 0x1E6D2FC
	0x01E6D290 B 0x1E6D2FC
	0x01E6D294 B 0x1E6D2FC
	0x01E6D298 B 0x1E6D2FC
	0x01E6D29C B 0x1E6D2FC
	0x01E6D2A0 B 0x1E6D2FC
	0x01E6D2A4 B 0x1E6D2FC
	0x01E6D2A8 B 0x1E6D2FC
	0x01E6D2AC B 0x1E6D2FC
	0x01E6D2B0 B 0x1E6D2FC
	0x01E6D2B4 B 0x1E6D2FC
	0x01E6D2B8 B 0x1E6D2FC
	0x01E6D2BC B 0x1E6D2FC
	0x01E6D2C0 B 0x1E6D2FC
	0x01E6D2C4 B 0x1E6D2FC
	0x01E6D2C8 B 0x1E6D2FC
	0x01E6D2CC B 0x1E6D2FC
	0x01E6D2D0 B 0x1E6D2FC
	0x01E6D2D4 B 0x1E6D2FC
	0x01E6D2D8 B 0x1E6D2FC
	0x01E6D2DC B 0x1E6D2FC
	0x01E6D2E0 B 0x1E6D2FC
	0x01E6D2E4 B 0x1E6D2FC
	0x01E6D2E8 B 0x1E6D2FC
	0x01E6D2EC B 0x1E6D2FC
	0x01E6D2F0 B 0x1E6D2FC
	0x01E6D2F4 B 0x1E6D2FC
	0x01E6D2F8 B 0x1E6D2FC
	0x01E6D2FC MOV X20, X0
	0x01E6D300 CMP W1, 0x1
	0x01E6D304 B.NE 0x1E6D37C
	0x01E6D308 MOV X0, X20
	0x01E6D30C BL 0x3EB1AD0
	0x01E6D310 MOV X20, X0
	0x01E6D314 ADRP X0, 0x2286000
	0x01E6D318 LDR X0, [X0 + 0x7D0]
	0x01E6D31C BL 0x1C16D08
	0x01E6D320 LDR X8, [X20]
	0x01E6D324 LDR X1, [X8]
	0x01E6D328 BL 0x1C17270
	0x01E6D32C TBZ X0, 0x0, 0x1E6D354
	0x01E6D330 LDR X20, [X20]
	0x01E6D334 BL 0x3EB1AE0
	0x01E6D338 MOVN W8, 0x1
	0x01E6D33C STR W8, [X19], #0x8
	0x01E6D340 MOV X0, X19
	0x01E6D344 MOV X1, X20
	0x01E6D348 MOV X2, X31
	0x01E6D34C BL 0x32C4368
	0x01E6D350 B 0x1E6D1AC
	0x01E6D354 MOVZ W0, 0x8
	0x01E6D358 BL 0x3EB1AF0
	0x01E6D35C LDR X8, [X20]
	0x01E6D360 STR X8, [X0]
	0x01E6D364 ADRP X1, 0x2047000
	0x01E6D368 ADD X1, X1, 0xE58
	0x01E6D36C MOV X2, X31
	0x01E6D370 BL 0x3EB1B00
	0x01E6D374 MOV X20, X0
	0x01E6D378 BL 0x3EB1AE0
	0x01E6D37C MOV X0, X20
	0x01E6D380 BL 0x1D2C690
	0x01E6D384 BL 0x1990590
	0x01E6D388 ADD X0, X0, 0x8
	0x01E6D38C MOV X2, X31
	0x01E6D390 B 0x32C4140
	0x01E6D394 STR X29, [X31 - 0x50]!
	0x01E6D398 STP X30, X25, [X31 + 0x10]
	0x01E6D39C STP X24, X23, [X31 + 0x20]
	0x01E6D3A0 STP X22, X21, [X31 + 0x30]
	0x01E6D3A4 STP X20, X19, [X31 + 0x40]
	0x01E6D3A8 SUB X31, X31, 0x3E0
	0x01E6D3AC MRS X23, 0xC000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X22+40]
	010 Move X20, 0x256D000
	011 Move X19, X0
	012 Move [X31+40], X8
	013 Move W8, [X20+303]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x2291000
	019 Move X0, [X0+376]
	020 Call 0x1C17CF4
	021 Move X0, 0x228A000
	022 Move X0, [X0+640]
	023 Call 0x1C17CF4
	024 Move X0, 0x228F000
	025 Move X0, [X0+2008]
	026 Call 0x1C17CF4
	027 Move X0, 0x228F000
	028 Move X0, [X0+2000]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+303], W8
	032 Move [X31+8], X31
	033 Move X23, 0x228A000
	034 Move W8, [X19]
	035 Move X20, [X19+40]
	036 Move X23, [X23+640]
	037 Compare W8, 0
	038 JumpIfEqual {40}
	039 Move [X19+48], W31
	040 Move X8, [X19+56]
	041 Move TEMP, 0
	042 Not TEMP
	043 Move W9, TEMP
	044 Move [X31+8], X8
	045 Move [X19+56], X31
	046 Move [X19], W9
	047 Move X8, 0x228F000
	048 Move X8, [X8+2008]
	049 Move X0, [X8]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Add X0, X19, 32
	055 Move X1, X31
	056 Call CancellationToken.ThrowIfCancellationRequested, X0
	057 Compare X20, 0
	058 JumpIfEqual {139}
	059 Move X8, [X20+32]
	060 Move V0, [X20+1]
	061 Move [X31+32], X8
	062 Move [X31+1], V0
	063 Add X1, X31, 16
	064 Move X0, X20
	065 Call <>c__DisplayClass103_0.<Run_ReversePing>g__SendPing|1, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {101}
	070 Move X8, 0x228F000
	071 Move X8, [X8+2000]
	072 Move X21, [X19+32]
	073 Move X0, [X8]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move W0, 100
	079 Move X1, X21
	080 Move X2, X31
	081 Call TaskManager.Delay, X0, X1
	082 Compare X0, 0
	083 JumpIfEqual {140}
	084 Move X1, X31
	085 Call Task.GetAwaiter, X0
	086 Move [X31+8], X0
	087 Add X0, X31, 8
	088 Move X1, X31
	089 Call TaskAwaiter.get_IsCompleted, X0
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {113}
	094 Add X0, X31, 8
	095 Move X1, X31
	096 Call TaskAwaiter.GetResult, X0
	097 Move W8, [X19+48]
	098 Add W8, W8, 1
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move [X19+48], W8
	101 Move TEMP, 1
	102 Not TEMP
	103 Move W8, TEMP
	104 Move [X19+8], W8
	105 Move X0, [X23]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Move X0, X19
	111 Move X1, X31
	112 Call AsyncTaskMethodBuilder.SetResult, X0
	113 Move [X19], W31
	114 Move X8, [X31+8]
	115 Move [X19+56], X8
	116 Move X0, [X23]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {121}
	120 Call 0x1C17DFC
	121 Move X8, 0x2291000
	122 Move X8, [X8+376]
	123 Add X0, X19, 8
	124 Move X3, [X8]
	125 Add X1, X31, 8
	126 Move X2, X19
	127 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	128 Move X8, [X22+40]
	129 Move X9, [X31+40]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X20, [X31+80]
	132 Move X19, [X31+88]
	133 Move X22, [X31+64]
	134 Move X21, [X31+72]
	135 Move X30, [X31+48]
	136 Move X23, [X31+56]
	137 Add X31, X31, 96
	138 Return 
	139 Call 0x1C17F20
	140 Call 0x1C17F20
	141 Call 0x3EB2B20
	142 Move X20, X0
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X0, X20
	145 Call 0x3EB2AD0
	146 Move X20, X0
	147 Move X0, 0x2287000
	148 Move X0, [X0+2000]
	149 Call 0x1C17D08
	150 Move X8, [X20]
	151 Move X1, [X8]
	152 Call 0x1C18270
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfNotEqual {174}
	157 Move X20, [X20]
	158 Call 0x3EB2AE0
	159 Move TEMP, 1
	160 Not TEMP
	161 Move W8, TEMP
	162 Move [X19+8], W8
	163 Move X0, 0x228A000
	164 Move X0, [X0+640]
	165 Call 0x1C17D08
	166 Move W8, [X0+224]
	167 Compare W8, 0
	168 JumpIfNotEqual {170}
	169 Call 0x1C17DFC
	170 Move X0, X19
	171 Move X1, X20
	172 Move X2, X31
	173 Call AsyncTaskMethodBuilder.SetException, X0, X1
	174 Move W0, 8
	175 Call 0x3EB2AF0
	176 Move X8, [X20]
	177 Move [X0], X8
	178 Move X1, 0x2048000
	179 Add X1, X1, 3672
	180 Move X2, X31
	181 Call 0x3EB2B00
	182 Move X20, X0
	183 Call 0x3EB2AE0
	184 Move X0, X20
	185 Call 0x1D2D690
	186 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x01E6D3B0 LDR X8, [X23 + 0x28]
	0x01E6D3B4 ADRP X20, 0x256C000
	0x01E6D3B8 MOV X19, X0
	0x01E6D3BC ADD X24, X31, 0xA0
	0x01E6D3C0 STR X8, [X31 + 0x3D8]
	0x01E6D3C4 LDRB W8, [X20 + 0x138]
	0x01E6D3C8 TBNZ X8, 0x0, 0x1E6D4A0
	0x01E6D3CC ADRP X0, 0x228F000
	0x01E6D3D0 LDR X0, [X0 + 0xE68]
	0x01E6D3D4 BL 0x1C16CF4
	0x01E6D3D8 ADRP X0, 0x2290000
	0x01E6D3DC LDR X0, [X0 + 0x1E8]
	0x01E6D3E0 BL 0x1C16CF4
	0x01E6D3E4 ADRP X0, 0x2290000
	0x01E6D3E8 LDR X0, [X0 + 0x1F0]
	0x01E6D3EC BL 0x1C16CF4
	0x01E6D3F0 ADRP X0, 0x2290000
	0x01E6D3F4 LDR X0, [X0 + 0x1F8]
	0x01E6D3F8 BL 0x1C16CF4
	0x01E6D3FC ADRP X0, 0x2290000
	0x01E6D400 LDR X0, [X0 + 0x200]
	0x01E6D404 BL 0x1C16CF4
	0x01E6D408 ADRP X0, 0x2290000
	0x01E6D40C LDR X0, [X0 + 0x208]
	0x01E6D410 BL 0x1C16CF4
	0x01E6D414 ADRP X0, 0x2290000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x256D000
	007 Move X22, 0x228A000
	008 Move W8, [X21+304]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x228A000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+304], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

