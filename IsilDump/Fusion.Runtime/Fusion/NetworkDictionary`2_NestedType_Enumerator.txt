Type: Fusion.NetworkDictionary`2/Enumerator

Method: System.Void .ctor(Fusion.NetworkDictionary`2<K, V> dict)

Disassembly:
	0x02C1D9DC TBNZ X8, 0x0, 0x2C1D9F0
	0x02C1D9E0 BL 0x1C5C684
	0x02C1D9E4 LDR X0, [X19 + 0x20]
	0x02C1D9E8 ADD X8, X0, 0x135
	0x02C1D9EC LDRH W8, [X8]
	0x02C1D9F0 LDRB W20, [X20 + 0x14]
	0x02C1D9F4 STR X31, [X31 + 0x10]
	0x02C1D9F8 TBNZ X8, 0x0, 0x2C1DA00
	0x02C1D9FC BL 0x1C5C684

ISIL:
	001 Move V0, [X1+32]
	002 Move V1, [X1+48]
	003 Move V2, [X1]
	004 Move V3, [X1+16]
	005 NotImplemented "Instruction MOVI not yet implemented."
	006 Move [X0], D4
	007 Move [X0+56], V1
	008 Move [X0+40], V0
	009 Move [X0+24], V3
	010 Move [X0+8], V2
	011 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x02C1DA00 LDR X8, [X0 + 0xC0]
	0x02C1DA04 CMP W20, 0x0
	0x02C1DA08 CSET W2, NE
	0x02C1DA0C ADD X0, X31, 0x10
	0x02C1DA10 LDR X3, [X8 + 0x38]
	0x02C1DA14 MOV W1, W21
	0x02C1DA18 BL 0x2EE56F8
	0x02C1DA1C LDR X8, [X31 + 0x10]
	0x02C1DA20 STR X8, [X31]
	0x02C1DA24 LDR X0, [X19 + 0x20]
	0x02C1DA28 LDRB W8, [X0 + 0x135]
	0x02C1DA2C TBNZ X8, 0x0, 0x2C1DA34
	0x02C1DA30 BL 0x1C5C684
	0x02C1DA34 LDR X8, [X0 + 0xC0]
	0x02C1DA38 LDR X0, [X8 + 0x10]
	0x02C1DA3C ADD X1, X31, 0x0
	0x02C1DA40 BL 0x1C16E04
	0x02C1DA44 LDP X20, X19, [X31 + 0x40]
	0x02C1DA48 LDP X22, X21, [X31 + 0x30]
	0x02C1DA4C LDR X30, [X31 + 0x20]
	0x02C1DA50 ADD X31, X31, 0x50
	0x02C1DA54 RET
	0x02C1DA58 BL 0x1C16F20
	0x02C1DA5C STP X30, X19, [X31 - 0x10]!
	0x02C1DA60 LDR X8, [X0]
	0x02C1DA64 CBZ X8, 0x2C1DA94
	0x02C1DA68 LDR W9, [X0 + 0x8]
	0x02C1DA6C LDR W8, [X8 + 0x2C]
	0x02C1DA70 MOV X19, X0
	0x02C1DA74 CMP W9, W8
	0x02C1DA78 B.EQ 0x2C1DA84
	0x02C1DA7C MOV X0, X31
	0x02C1DA80 BL 0x339E09C
	0x02C1DA84 STR W31, [X19 + 0xC]
	0x02C1DA88 STR X31, [X19 + 0x10]
	0x02C1DA8C LDP X30, X19, [X31], #0x10
	0x02C1DA90 RET
	0x02C1DA94 BL 0x1C16F20
	0x02C1DA98 SUB X31, X31, 0x40
	0x02C1DA9C STP X30, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W21, [X0+4]
	006 Move X19, X0
	007 Move X20, X1
	008 Compare W21, 0
	009 JumpIfEqual {28}
	010 Move X0, [X20+32]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Move W8, [X19+32]
	018 Move W9, [X19+20]
	019 NotImplemented "Instruction LDRSW not yet implemented."
	020 Move X11, [X19+8]
	021 NotImplemented "Instruction MADD not yet implemented."
	022 Add X8, X10, W8
	023 Move W8, [X11]
	024 Move W21, W31
	025 Move [X19+4], W8
	026 Compare W8, 0
	027 JumpIfEqual {8}
	028 Move W8, [X19]
	029 Move W9, [X19+16]
	030 Add W8, W8, 1
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction LDRSW not yet implemented."
	033 Move X10, [X19+8]
	034 Move [X19], W8
	035 Move W21, W31
	036 Add X8, X9, W8
	037 Move W8, [X10]
	038 Move [X19+4], W8
	039 Compare W8, 0
	040 JumpIfEqual {8}
	041 Move W0, 1
	042 Move W0, W31
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return X0

Method: System.Void Reset()

Disassembly:
	0x02C1DAA0 STP X20, X19, [X31 + 0x30]
	0x02C1DAA4 LDR W8, [X0 + 0xC]
	0x02C1DAA8 MOV X19, X0

ISIL:
	001 NotImplemented "Instruction MOVI not yet implemented."
	002 Move [X0], D0
	003 Return 

Method: System.Collections.Generic.KeyValuePair`2<K, V> get_Current()

Disassembly:
	0x02C1DAAC MOV X20, X1
	0x02C1DAB0 CBZ W8, 0x2C1DACC
	0x02C1DAB4 LDR X9, [X19]
	0x02C1DAB8 CBZ X9, 0x2C1DB90
	0x02C1DABC LDR W9, [X9 + 0x20]
	0x02C1DAC0 ADD W9, W9, 0x1
	0x02C1DAC4 CMP W8, W9
	0x02C1DAC8 B.NE 0x2C1DAD4
	0x02C1DACC MOV X0, X31
	0x02C1DAD0 BL 0x339E0E8
	0x02C1DAD4 LDR X0, [X20 + 0x20]
	0x02C1DAD8 ADD X8, X0, 0x135
	0x02C1DADC LDRH W8, [X8]
	0x02C1DAE0 TBNZ X8, 0x0, 0x2C1DAF4
	0x02C1DAE4 BL 0x1C5C684
	0x02C1DAE8 LDR X0, [X20 + 0x20]
	0x02C1DAEC ADD X8, X0, 0x135
	0x02C1DAF0 LDRH W8, [X8]
	0x02C1DAF4 LDR W9, [X19 + 0x10]
	0x02C1DAF8 STR W9, [X31 + 0xC]
	0x02C1DAFC TBNZ X8, 0x0, 0x2C1DB04
	0x02C1DB00 BL 0x1C5C684
	0x02C1DB04 LDR X8, [X0 + 0xC0]
	0x02C1DB08 ADD X1, X31, 0xC
	0x02C1DB0C LDR X0, [X8 + 0x28]
	0x02C1DB10 BL 0x1C16E04
	0x02C1DB14 LDR X8, [X20 + 0x20]
	0x02C1DB18 MOV X21, X0
	0x02C1DB1C ADD X9, X8, 0x135
	0x02C1DB20 LDRH W9, [X9]
	0x02C1DB24 TBNZ X9, 0x0, 0x2C1DB3C
	0x02C1DB28 MOV X0, X8
	0x02C1DB2C BL 0x1C5C684
	0x02C1DB30 LDR X8, [X20 + 0x20]
	0x02C1DB34 ADD X9, X8, 0x135
	0x02C1DB38 LDRH W9, [X9]
	0x02C1DB3C LDRB W10, [X19 + 0x14]
	0x02C1DB40 STRB W10, [X31 + 0x8]
	0x02C1DB44 TBNZ X9, 0x0, 0x2C1DB54
	0x02C1DB48 MOV X0, X8
	0x02C1DB4C BL 0x1C5C684
	0x02C1DB50 MOV X8, X0
	0x02C1DB54 LDR X8, [X8 + 0xC0]
	0x02C1DB58 ADD X1, X31, 0x8
	0x02C1DB5C LDR X0, [X8 + 0x30]
	0x02C1DB60 BL 0x1C16E04
	0x02C1DB64 MOV X2, X0
	0x02C1DB68 ADD X0, X31, 0x10
	0x02C1DB6C MOV X1, X21
	0x02C1DB70 MOV X3, X31
	0x02C1DB74 STP X31, X31, [X31 + 0x10]
	0x02C1DB78 BL 0x335035C
	0x02C1DB7C LDP X0, X1, [X31 + 0x10]
	0x02C1DB80 LDP X20, X19, [X31 + 0x30]
	0x02C1DB84 LDP X30, X21, [X31 + 0x20]
	0x02C1DB88 ADD X31, X31, 0x40
	0x02C1DB8C RET
	0x02C1DB90 BL 0x1C16F20
	0x02C1DB94 STR X30, [X31 - 0x20]!
	0x02C1DB98 STP X20, X19, [X31 + 0x10]
	0x02C1DB9C LDR W8, [X0 + 0xC]
	0x02C1DBA0 MOV X19, X0
	0x02C1DBA4 MOV X20, X1
	0x02C1DBA8 CBZ W8, 0x2C1DBC4
	0x02C1DBAC LDR X9, [X19]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move W22, [X0+4]
	009 Move X19, X1
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move W8, [X0+16]
	012 Move X20, X0
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X0, [X19+32]
	015 Add X21, X20, 8
	016 Move W8, [X0+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {22}
	021 Call 0x1C5D684
	022 Move X8, [X0+192]
	023 Move X0, X21
	024 Move W1, W22
	025 Move X2, [X8+32]
	026 Call 0x2430174
	027 Move X8, [X19+32]
	028 Move W22, [X20+4]
	029 Move W20, W0
	030 Move W9, [X8+309]
	031 Move TEMP, X9
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {38}
	035 Move X0, X8
	036 Call 0x1C5D684
	037 Move X8, X0
	038 Move X8, [X8+192]
	039 Move X0, X21
	040 Move W1, W22
	041 Move X2, [X8+48]
	042 Call 0x24300A4
	043 Move [X31+8], X31
	044 Move X0, [X19+32]
	045 Move V8, V0
	046 Move W8, [X0+309]
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {52}
	051 Call 0x1C5D684
	052 Move X8, [X0+192]
	053 Add X0, X31, 8
	054 Move W1, W20
	055 Move V0, V8
	056 Move X2, [X8+72]
	057 Call KeyValuePair`2<UInt32, Single>..ctor, X0, X1, V0
	058 Move X0, [X31+8]
	059 Move X20, [X31+48]
	060 Move X19, [X31+56]
	061 Move X22, [X31+32]
	062 Move X21, [X31+40]
	063 Move X30, [X31+24]
	064 Move V8, [X31+16]
	065 Add X31, X31, 64
	066 Return X0
	067 Move X0, 0x14D7000
	068 Move X0, [X0+1456]
	069 Call 0x1C17D08
	070 Call 0x1C17F10
	071 Move X1, X31
	072 Move X20, X0
	073 Call InvalidOperationException..ctor, X0
	074 Move X0, X20
	075 Move X1, X19
	076 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x02C1DBB0 CBZ X9, 0x2C1DC18
	0x02C1DBB4 LDR W9, [X9 + 0x20]
	0x02C1DBB8 ADD W9, W9, 0x1
	0x02C1DBBC CMP W8, W9
	0x02C1DBC0 B.NE 0x2C1DBCC
	0x02C1DBC4 MOV X0, X31
	0x02C1DBC8 BL 0x339E0E8
	0x02C1DBCC LDR X0, [X20 + 0x20]
	0x02C1DBD0 ADD X8, X0, 0x135
	0x02C1DBD4 LDRH W8, [X8]
	0x02C1DBD8 TBNZ X8, 0x0, 0x2C1DBEC
	0x02C1DBDC BL 0x1C5C684
	0x02C1DBE0 LDR X0, [X20 + 0x20]
	0x02C1DBE4 ADD X8, X0, 0x135
	0x02C1DBE8 LDRH W8, [X8]
	0x02C1DBEC LDR W9, [X19 + 0x10]
	0x02C1DBF0 STR W9, [X31 + 0xC]
	0x02C1DBF4 TBNZ X8, 0x0, 0x2C1DBFC
	0x02C1DBF8 BL 0x1C5C684
	0x02C1DBFC LDR X8, [X0 + 0xC0]
	0x02C1DC00 ADD X1, X31, 0xC
	0x02C1DC04 LDR X0, [X8 + 0x28]
	0x02C1DC08 BL 0x1C16E04
	0x02C1DC0C LDP X20, X19, [X31 + 0x10]
	0x02C1DC10 LDR X30, [X31], #0x20
	0x02C1DC14 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {15}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move X8, X0
	015 Move X8, [X8+192]
	016 Move X0, X20
	017 Move X1, [X8+80]
	018 Call 0x2C1DAAC, X0
	019 Move [X31+8], X0
	020 Move X0, [X19+32]
	021 Move W8, [X0+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {27}
	026 Call 0x1C5D684
	027 Move X8, [X0+192]
	028 Add X1, X31, 8
	029 Move X0, [X8+64]
	030 Call 0x1C17E04
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0

Method: System.Void Dispose()

Disassembly:
	0x02C1DC18 BL 0x1C16F20
	0x02C1DC1C STR X30, [X31 - 0x20]!
	0x02C1DC20 STP X20, X19, [X31 + 0x10]
	0x02C1DC24 LDR W8, [X0 + 0xC]
	0x02C1DC28 MOV X19, X0
	0x02C1DC2C MOV X20, X1
	0x02C1DC30 CBZ W8, 0x2C1DC4C
	0x02C1DC34 LDR X9, [X19]

ISIL:
	001 NotImplemented "Instruction MOVI not yet implemented."
	002 NotImplemented "Instruction MOVI not yet implemented."
	003 Move [X0+56], V0
	004 Move [X0+40], V0
	005 Move [X0+24], V0
	006 Move [X0+8], V0
	007 Move [X0], D1
	008 Return 

