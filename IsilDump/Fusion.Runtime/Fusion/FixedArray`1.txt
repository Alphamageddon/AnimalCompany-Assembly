Type: Fusion.FixedArray`1

Method: System.Int32 get_Length()

Disassembly:
	0x02D20A3C LDR X0, [X8 + 0x58]
	0x02D20A40 BL 0x1C16E04

ISIL:
	001 Move W0, [X0+8]
	002 Return X0

Method: T get_Item(System.Int32 index)

Disassembly:
	0x02D20A44 LDP X20, X19, [X31 + 0x50]
	0x02D20A48 LDR X30, [X31 + 0x40]
	0x02D20A4C ADD X31, X31, 0x60
	0x02D20A50 RET
	0x02D20A54 STP X30, X21, [X31 - 0x20]!
	0x02D20A58 STP X20, X19, [X31 + 0x10]
	0x02D20A5C LDR W8, [X0 + 0x8]
	0x02D20A60 CMP W8, 0x1
	0x02D20A64 B.LT 0x2D20AAC
	0x02D20A68 MOV X19, X0
	0x02D20A6C MOV X20, X1
	0x02D20A70 MOV W21, W31
	0x02D20A74 LDR X0, [X20 + 0x20]
	0x02D20A78 LDRB W8, [X0 + 0x135]
	0x02D20A7C TBNZ X8, 0x0, 0x2D20A84
	0x02D20A80 BL 0x1C5C684
	0x02D20A84 LDR X8, [X0 + 0xC0]
	0x02D20A88 MOV X0, X19
	0x02D20A8C MOV W1, W21
	0x02D20A90 LDR X2, [X8 + 0x28]
	0x02D20A94 BL 0x2D205F0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+8]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X8, [X0]
	007 Move X20, [X31+16]
	008 Move X19, [X31+24]
	009 Add X0, X8, W1
	010 Move X30, [X31+32]
	011 Return X0
	012 Move X0, 0x13DE000
	013 Move X0, [X0+3960]
	014 Move X19, X2
	015 Call 0x1C17D08
	016 Call 0x1C17F10
	017 Move X1, X31
	018 Move X20, X0
	019 Call IndexOutOfRangeException..ctor, X0
	020 Move X0, X20
	021 Move X1, X19
	022 Call 0x1C17DEC

Method: System.Void .ctor(T* array, System.Int32 length)

Disassembly:
	0x02D20A98 STR W31, [X0]
	0x02D20A9C LDR W8, [X19 + 0x8]
	0x02D20AA0 ADD W21, W21, 0x1

ISIL:
	001 Move [X0], X1
	002 Move [X0+8], W2
	003 Return 

Method: T[] ToArray()

Disassembly:
	0x02D20AA4 CMP W21, W8
	0x02D20AA8 B.LT 0x2D20A74
	0x02D20AAC LDP X20, X19, [X31 + 0x10]
	0x02D20AB0 LDP X30, X21, [X31], #0x20
	0x02D20AB4 RET
	0x02D20AB8 SUB X31, X31, 0x60
	0x02D20ABC STR X30, [X31 + 0x10]
	0x02D20AC0 STP X26, X25, [X31 + 0x20]
	0x02D20AC4 STP X24, X23, [X31 + 0x30]
	0x02D20AC8 STP X22, X21, [X31 + 0x40]
	0x02D20ACC STP X20, X19, [X31 + 0x50]
	0x02D20AD0 MOV X19, X4
	0x02D20AD4 CBZ X1, 0x2D20B88
	0x02D20AD8 LDR W8, [X0 + 0x8]
	0x02D20ADC MOV X21, X0
	0x02D20AE0 CMP W8, W3
	0x02D20AE4 B.LT 0x2D20BC0
	0x02D20AE8 LDR W8, [X1 + 0x18]
	0x02D20AEC ADD W9, W3, W2
	0x02D20AF0 MOV X20, X1
	0x02D20AF4 CMP W9, W8
	0x02D20AF8 B.GT 0x2D20C54
	0x02D20AFC CMP W3, 0x1
	0x02D20B00 B.LT 0x2D20B68
	0x02D20B04 MOV W23, W2
	0x02D20B08 MOV X22, X31
	0x02D20B0C MOV W24, W3
	0x02D20B10 UBFM X25, X23, 0x20, 0x1F
	0x02D20B14 MOVZ X26, 0x1
	0x02D20B18 LDR X0, [X19 + 0x20]
	0x02D20B1C LDRB W8, [X0 + 0x135]
	0x02D20B20 TBNZ X8, 0x0, 0x2D20B28
	0x02D20B24 BL 0x1C5C684
	0x02D20B28 LDR X8, [X0 + 0xC0]
	0x02D20B2C MOV X0, X21
	0x02D20B30 MOV W1, W22
	0x02D20B34 LDR X2, [X8 + 0x28]
	0x02D20B38 BL 0x2D205F0
	0x02D20B3C LDR W8, [X20 + 0x18]
	0x02D20B40 ADD X9, X23, X22
	0x02D20B44 CMP X9, X8
	0x02D20B48 B.CS 0x2D20B84
	0x02D20B4C ADD X8, X20, X25, 0x1E, ASR
	0x02D20B50 LDR W8, [X8 + 0x20]
	0x02D20B54 ADD X22, X22, 0x1
	0x02D20B58 CMP X24, X22
	0x02D20B5C ADD X25, X25, X26
	0x02D20B60 STR W8, [X0]
	0x02D20B64 B.NE 0x2D20B18

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, X0
	008 Move X0, [X1+32]
	009 Move W21, [X20+8]
	010 Move X19, X1
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Move X8, [X0+192]
	018 Move X0, [X8+32]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move W1, W21
	026 Call 0x1C17D6C
	027 Move W8, [X20+8]
	028 Move X21, X0
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X22, X31
	031 Add X23, X21, 32
	032 Move X0, [X19+32]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Move X8, [X0+192]
	040 Move X0, X20
	041 Move W1, W22
	042 Move X2, [X8+40]
	043 Call 0x2D20A44, X0, X1
	044 Compare X21, 0
	045 JumpIfEqual {61}
	046 Move W8, [X21+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 NotImplemented "Instruction STRH not yet implemented."
	050 NotImplemented "Instruction LDRSW not yet implemented."
	051 Add X22, X22, 1
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X0, X21
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Move X23, [X31+56]
	060 Return X0
	061 Call 0x1C17F20
	062 Call 0x1C17F28

Method: System.Void CopyTo(System.Collections.Generic.List`1<T> list)

Disassembly:
	0x02D20B68 LDP X20, X19, [X31 + 0x50]
	0x02D20B6C LDP X22, X21, [X31 + 0x40]
	0x02D20B70 LDP X24, X23, [X31 + 0x30]
	0x02D20B74 LDP X26, X25, [X31 + 0x20]
	0x02D20B78 LDR X30, [X31 + 0x10]
	0x02D20B7C ADD X31, X31, 0x60
	0x02D20B80 RET
	0x02D20B84 BL 0x1C16F28
	0x02D20B88 ADRP X0, 0x13D8000
	0x02D20B8C LDR X0, [X0 + 0x528]
	0x02D20B90 BL 0x1C16D08
	0x02D20B94 BL 0x1C16F10
	0x02D20B98 MOV X20, X0
	0x02D20B9C ADRP X0, 0x13DE000
	0x02D20BA0 LDR X0, [X0 + 0x580]
	0x02D20BA4 BL 0x1C16D08
	0x02D20BA8 MOV X1, X0
	0x02D20BAC MOV X0, X20
	0x02D20BB0 MOV X2, X31
	0x02D20BB4 BL 0x330E100
	0x02D20BB8 MOV X0, X20
	0x02D20BBC B 0x2D20D08
	0x02D20BC0 STR W8, [X31 + 0x1C]
	0x02D20BC4 ADRP X20, 0x13D3000
	0x02D20BC8 LDR X20, [X20 + 0x758]
	0x02D20BCC MOV W22, W3
	0x02D20BD0 MOV X0, X20
	0x02D20BD4 BL 0x1C16D08
	0x02D20BD8 ADD X1, X31, 0x1C
	0x02D20BDC BL 0x1C16E04
	0x02D20BE0 MOV X21, X0
	0x02D20BE4 MOV X0, X20
	0x02D20BE8 STR W22, [X31 + 0x18]
	0x02D20BEC BL 0x1C16D08
	0x02D20BF0 ADD X1, X31, 0x18
	0x02D20BF4 BL 0x1C16E04
	0x02D20BF8 MOV X20, X0
	0x02D20BFC ADRP X0, 0x13FC000
	0x02D20C00 LDR X0, [X0 + 0xBE8]
	0x02D20C04 BL 0x1C16D08
	0x02D20C08 MOV X1, X21
	0x02D20C0C MOV X2, X20
	0x02D20C10 MOV X3, X31
	0x02D20C14 BL 0x3227BD4
	0x02D20C18 MOV X20, X0
	0x02D20C1C ADRP X0, 0x13DB000
	0x02D20C20 LDR X0, [X0 + 0x578]
	0x02D20C24 BL 0x1C16D08
	0x02D20C28 BL 0x1C16F10
	0x02D20C2C MOV X21, X0
	0x02D20C30 ADRP X0, 0x13DE000
	0x02D20C34 LDR X0, [X0 + 0x580]
	0x02D20C38 BL 0x1C16D08
	0x02D20C3C MOV X2, X0
	0x02D20C40 MOV X0, X21
	0x02D20C44 MOV X1, X20
	0x02D20C48 MOV X3, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W8, [X0+8]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X19, X2
	010 Move X20, X0
	011 Move X21, X1
	012 Move W22, W31
	013 Move X0, [X19+32]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Move X8, [X0+192]
	021 Move X0, X20
	022 Move W1, W22
	023 Move X2, [X8+40]
	024 Call 0x2D20A44, X0, X1
	025 Compare X21, 0
	026 JumpIfEqual {67}
	027 Move X8, X0
	028 Move X0, [X19+32]
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 Move W9, [X0+309]
	031 Move TEMP, X9
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Move X9, [X0+192]
	037 Move W10, [X21+28]
	038 Move X8, [X21+16]
	039 Move X9, [X9+72]
	040 Add W10, W10, 1
	041 Move [X21+28], W10
	042 Compare X8, 0
	043 JumpIfEqual {67}
	044 NotImplemented "Instruction LDRSW not yet implemented."
	045 Move W11, [X8+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Add W9, W10, 1
	048 Add X8, X8, X10
	049 Move [X21+24], W9
	050 NotImplemented "Instruction STRH not yet implemented."
	051 Move X8, [X9+32]
	052 Move X0, X21
	053 Move X1, X23
	054 Move X8, [X8+192]
	055 Move X2, [X8+112]
	056 Call List`1<NetworkLoadSceneParameters>.AddWithResize, X0, X1
	057 Move W8, [X20+8]
	058 Add W22, W22, 1
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X30, [X31+48]
	065 Move X23, [X31+56]
	066 Return 
	067 Call 0x1C17F20

Method: System.Void CopyTo(T[] array, System.Boolean throwIfOverflow = True)

Disassembly:
	0x02D20C4C BL 0x330E16C
	0x02D20C50 B 0x2D20D04
	0x02D20C54 STR W3, [X31 + 0x1C]
	0x02D20C58 ADRP X20, 0x13D3000
	0x02D20C5C LDR X20, [X20 + 0x758]
	0x02D20C60 MOV W23, W3
	0x02D20C64 MOV W22, W2
	0x02D20C68 MOV X0, X20
	0x02D20C6C BL 0x1C16D08
	0x02D20C70 ADD X1, X31, 0x1C
	0x02D20C74 BL 0x1C16E04
	0x02D20C78 MOV X21, X0
	0x02D20C7C MOV X0, X20
	0x02D20C80 STR W22, [X31 + 0x18]
	0x02D20C84 BL 0x1C16D08
	0x02D20C88 ADD X1, X31, 0x18
	0x02D20C8C BL 0x1C16E04
	0x02D20C90 MOV X22, X0
	0x02D20C94 MOV X0, X20
	0x02D20C98 STR W23, [X31 + 0xC]
	0x02D20C9C BL 0x1C16D08
	0x02D20CA0 ADD X1, X31, 0xC
	0x02D20CA4 BL 0x1C16E04
	0x02D20CA8 MOV X20, X0
	0x02D20CAC ADRP X0, 0x13FC000
	0x02D20CB0 LDR X0, [X0 + 0xBF0]
	0x02D20CB4 BL 0x1C16D08
	0x02D20CB8 MOV X1, X21
	0x02D20CBC MOV X2, X22
	0x02D20CC0 MOV X3, X20
	0x02D20CC4 MOV X4, X31
	0x02D20CC8 BL 0x3227C18
	0x02D20CCC MOV X20, X0
	0x02D20CD0 ADRP X0, 0x13DB000
	0x02D20CD4 LDR X0, [X0 + 0x760]
	0x02D20CD8 BL 0x1C16D08
	0x02D20CDC BL 0x1C16F10
	0x02D20CE0 MOV X21, X0
	0x02D20CE4 ADRP X0, 0x13FC000
	0x02D20CE8 LDR X0, [X0 + 0xBF8]
	0x02D20CEC BL 0x1C16D08
	0x02D20CF0 MOV X2, X0
	0x02D20CF4 MOV X0, X21
	0x02D20CF8 MOV X1, X20
	0x02D20CFC MOV X3, X31
	0x02D20D00 BL 0x3311888
	0x02D20D04 MOV X0, X21
	0x02D20D08 MOV X1, X19
	0x02D20D0C BL 0x1C16DEC
	0x02D20D10 SUB X31, X31, 0x50
	0x02D20D14 STP X30, X25, [X31 + 0x10]
	0x02D20D18 STP X24, X23, [X31 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, X3
	009 Compare X1, 0
	010 JumpIfEqual {45}
	011 Move X8, [X1+24]
	012 Move X20, X1
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X21, X0
	015 Move X22, X31
	016 And X23, X8, 0
	017 Add X24, X20, 32
	018 Move X0, [X19+32]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move X8, [X0+192]
	026 Move X0, X21
	027 Move W1, W22
	028 Move X2, [X8+40]
	029 Call 0x2D20A44, X0, X1
	030 Move W8, [X20+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction LDRH not yet implemented."
	033 NotImplemented "Instruction STRH not yet implemented."
	034 Add X22, X22, 1
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X22, [X31+32]
	039 Move X21, [X31+40]
	040 Move X24, [X31+16]
	041 Move X23, [X31+24]
	042 Move X30, [X31+64]
	043 Return 
	044 Call 0x1C17F28
	045 Move X0, 0x13D9000
	046 Move X0, [X0+1320]
	047 Call 0x1C17D08
	048 Call 0x1C17F10
	049 Move X20, X0
	050 Move X0, 0x13FC000
	051 Move X0, [X0+1600]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X20
	055 Move X2, X31
	056 Call ArgumentNullException..ctor, X0, X1
	057 Move X0, X20
	058 Move X1, X19
	059 Call 0x1C17DEC

Method: System.String ToString()

Disassembly:
	0x02D20D1C STP X22, X21, [X31 + 0x30]
	0x02D20D20 STP X20, X19, [X31 + 0x40]
	0x02D20D24 MOV X19, X4
	0x02D20D28 CBZ X1, 0x2D20DF0
	0x02D20D2C LDR W8, [X0 + 0x8]
	0x02D20D30 MOV W20, W3
	0x02D20D34 MOV X23, X0
	0x02D20D38 CMP W8, W3
	0x02D20D3C B.LT 0x2D20E28
	0x02D20D40 LDR X0, [X19 + 0x20]
	0x02D20D44 MOV W21, W2
	0x02D20D48 MOV X22, X1
	0x02D20D4C LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+32]
	004 Move X19, X0
	005 Move W9, [X8+309]
	006 Move TEMP, X9
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {13}
	010 Move X0, X8
	011 Call 0x1C5D684
	012 Move X8, X0
	013 Move X8, [X8+192]
	014 Move X0, X19
	015 Move X1, [X8+80]
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Call 0x2D213C0, X0
	019 Return X0

Method: Fusion.FixedArray`1/Enumerator<T> GetEnumerator()

Disassembly:
	0x02D20D50 TBNZ X8, 0x0, 0x2D20D58
	0x02D20D54 BL 0x1C5C684
	0x02D20D58 LDR W8, [X22 + 0x18]
	0x02D20D5C ADD W9, W20, W21
	0x02D20D60 CMP W8, W9
	0x02D20D64 B.LT 0x2D20EB8
	0x02D20D68 CMP W20, 0x1
	0x02D20D6C B.LT 0x2D20DD8
	0x02D20D70 MOV W24, W31
	0x02D20D74 LDR X0, [X19 + 0x20]
	0x02D20D78 LDRB W8, [X0 + 0x135]
	0x02D20D7C TBNZ X8, 0x0, 0x2D20D84
	0x02D20D80 BL 0x1C5C684
	0x02D20D84 LDR X8, [X0 + 0xC0]
	0x02D20D88 MOV X0, X23
	0x02D20D8C MOV W1, W24
	0x02D20D90 LDR X2, [X8 + 0x28]
	0x02D20D94 BL 0x2D205F0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, [X0]
	006 Move X21, [X0+8]
	007 Move [X8], X31
	008 Move [X8+8], X31
	009 Move [X8+16], X31
	010 Move X0, [X1+32]
	011 Move X20, X8
	012 Move W8, [X0+309]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {18}
	017 Call 0x1C5D684
	018 Move X8, [X0+192]
	019 Move X0, X20
	020 Move X1, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X3, [X8+96]
	024 Move X2, X21
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Call 0x2BC459C, X0, X1
	028 Return X0

Method: System.Collections.Generic.IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()

Disassembly:
	0x02D20D98 LDR X8, [X19 + 0x20]
	0x02D20D9C MOV X25, X0
	0x02D20DA0 LDRB W9, [X8 + 0x135]
	0x02D20DA4 TBNZ X9, 0x0, 0x2D20DB4
	0x02D20DA8 MOV X0, X8
	0x02D20DAC BL 0x1C5C684
	0x02D20DB0 MOV X8, X0
	0x02D20DB4 LDR X8, [X8 + 0xC0]
	0x02D20DB8 ADD W1, W21, W24
	0x02D20DBC MOV X0, X22
	0x02D20DC0 LDR X2, [X8 + 0x80]
	0x02D20DC4 BL 0x3057340
	0x02D20DC8 ADD W24, W24, 0x1
	0x02D20DCC CMP W20, W24
	0x02D20DD0 STR W0, [X25]
	0x02D20DD4 B.NE 0x2D20D74
	0x02D20DD8 LDP X20, X19, [X31 + 0x40]
	0x02D20DDC LDP X22, X21, [X31 + 0x30]
	0x02D20DE0 LDP X24, X23, [X31 + 0x20]
	0x02D20DE4 LDP X30, X25, [X31 + 0x10]
	0x02D20DE8 ADD X31, X31, 0x50
	0x02D20DEC RET
	0x02D20DF0 ADRP X0, 0x13D8000
	0x02D20DF4 LDR X0, [X0 + 0x528]
	0x02D20DF8 BL 0x1C16D08
	0x02D20DFC BL 0x1C16F10
	0x02D20E00 MOV X20, X0
	0x02D20E04 ADRP X0, 0x13DE000
	0x02D20E08 LDR X0, [X0 + 0x580]
	0x02D20E0C BL 0x1C16D08
	0x02D20E10 MOV X1, X0
	0x02D20E14 MOV X0, X20
	0x02D20E18 MOV X2, X31
	0x02D20E1C BL 0x330E100

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+80], X20
	004 Move [X31+88], X19
	005 Move X8, [X1+32]
	006 Move X19, X1
	007 Move X20, X0
	008 Move W9, [X8+309]
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {16}
	013 Move X0, X8
	014 Call 0x1C5D684
	015 Move X8, X0
	016 Move X8, [X8+192]
	017 Move X0, X20
	018 Move X1, [X8+104]
	019 Add X8, X31, 0
	020 Call 0x2D20D50, X0
	021 Move X8, [X31+16]
	022 Move V0, [X31]
	023 Move [X31+48], X8
	024 Move [X31+2], V0
	025 Move [X31], V0
	026 Move [X31+16], X8
	027 Move X0, [X19+32]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Move X8, [X0+192]
	035 Add X1, X31, 0
	036 Move X0, [X8+88]
	037 Call 0x1C17E04
	038 Move X20, [X31+80]
	039 Move X19, [X31+88]
	040 Move X30, [X31+64]
	041 Add X31, X31, 96
	042 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x02D20E20 MOV X0, X20
	0x02D20E24 B 0x2D20F64
	0x02D20E28 STR W8, [X31 + 0xC]
	0x02D20E2C ADRP X21, 0x13D3000
	0x02D20E30 LDR X21, [X21 + 0x758]
	0x02D20E34 MOV X0, X21
	0x02D20E38 BL 0x1C16D08
	0x02D20E3C ADD X1, X31, 0xC
	0x02D20E40 BL 0x1C16E04
	0x02D20E44 MOV X22, X0
	0x02D20E48 MOV X0, X21
	0x02D20E4C STR W20, [X31 + 0x8]
	0x02D20E50 BL 0x1C16D08
	0x02D20E54 ADD X1, X31, 0x8
	0x02D20E58 BL 0x1C16E04
	0x02D20E5C MOV X20, X0
	0x02D20E60 ADRP X0, 0x13FC000
	0x02D20E64 LDR X0, [X0 + 0xBE8]
	0x02D20E68 BL 0x1C16D08
	0x02D20E6C MOV X1, X22
	0x02D20E70 MOV X2, X20
	0x02D20E74 MOV X3, X31
	0x02D20E78 BL 0x3227BD4
	0x02D20E7C MOV X20, X0
	0x02D20E80 ADRP X0, 0x13DB000
	0x02D20E84 LDR X0, [X0 + 0x578]
	0x02D20E88 BL 0x1C16D08
	0x02D20E8C BL 0x1C16F10
	0x02D20E90 MOV X21, X0
	0x02D20E94 ADRP X0, 0x13DE000
	0x02D20E98 LDR X0, [X0 + 0x580]
	0x02D20E9C BL 0x1C16D08
	0x02D20EA0 MOV X2, X0
	0x02D20EA4 MOV X0, X21

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+80], X20
	004 Move [X31+88], X19
	005 Move X8, [X1+32]
	006 Move X19, X1
	007 Move X20, X0
	008 Move W9, [X8+309]
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {16}
	013 Move X0, X8
	014 Call 0x1C5D684
	015 Move X8, X0
	016 Move X8, [X8+192]
	017 Move X0, X20
	018 Move X1, [X8+104]
	019 Add X8, X31, 0
	020 Call 0x2D20D50, X0
	021 Move X8, [X31+16]
	022 Move V0, [X31]
	023 Move [X31+48], X8
	024 Move [X31+2], V0
	025 Move [X31], V0
	026 Move [X31+16], X8
	027 Move X0, [X19+32]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Move X8, [X0+192]
	035 Add X1, X31, 0
	036 Move X0, [X8+88]
	037 Call 0x1C17E04
	038 Move X20, [X31+80]
	039 Move X19, [X31+88]
	040 Move X30, [X31+64]
	041 Add X31, X31, 96
	042 Return X0

Method: System.Void Clear()

Disassembly:
	0x02D20EA8 MOV X1, X20
	0x02D20EAC MOV X3, X31
	0x02D20EB0 BL 0x330E16C
	0x02D20EB4 B 0x2D20F60
	0x02D20EB8 STR W20, [X31 + 0xC]
	0x02D20EBC ADRP X22, 0x13D3000
	0x02D20EC0 LDR X22, [X22 + 0x758]
	0x02D20EC4 MOV X0, X22
	0x02D20EC8 BL 0x1C16D08
	0x02D20ECC ADD X1, X31, 0xC
	0x02D20ED0 BL 0x1C16E04
	0x02D20ED4 MOV X23, X0
	0x02D20ED8 MOV X0, X22
	0x02D20EDC STR W21, [X31 + 0x8]
	0x02D20EE0 BL 0x1C16D08
	0x02D20EE4 ADD X1, X31, 0x8
	0x02D20EE8 BL 0x1C16E04
	0x02D20EEC MOV X21, X0
	0x02D20EF0 MOV X0, X22
	0x02D20EF4 STR W20, [X31 + 0x4]
	0x02D20EF8 BL 0x1C16D08
	0x02D20EFC ADD X1, X31, 0x4
	0x02D20F00 BL 0x1C16E04
	0x02D20F04 MOV X20, X0
	0x02D20F08 ADRP X0, 0x13FC000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+8]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X19, X0
	008 Move X20, X1
	009 Move W21, W31
	010 Move X0, [X20+32]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Move X8, [X0+192]
	018 Move X0, X19
	019 Move W1, W21
	020 Move X2, [X8+40]
	021 Call 0x2D20A44, X0, X1
	022 NotImplemented "Instruction STRH not yet implemented."
	023 Move W8, [X19+8]
	024 Add W21, W21, 1
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return 

Method: System.Void CopyFrom(T[] source, System.Int32 sourceOffset, System.Int32 sourceCount)

Disassembly:
	0x02D20F0C LDR X0, [X0 + 0xBF0]
	0x02D20F10 BL 0x1C16D08
	0x02D20F14 MOV X1, X23
	0x02D20F18 MOV X2, X21
	0x02D20F1C MOV X3, X20
	0x02D20F20 MOV X4, X31
	0x02D20F24 BL 0x3227C18
	0x02D20F28 MOV X20, X0
	0x02D20F2C ADRP X0, 0x13DB000
	0x02D20F30 LDR X0, [X0 + 0x760]
	0x02D20F34 BL 0x1C16D08
	0x02D20F38 BL 0x1C16F10
	0x02D20F3C MOV X21, X0
	0x02D20F40 ADRP X0, 0x13FC000
	0x02D20F44 LDR X0, [X0 + 0xBF8]
	0x02D20F48 BL 0x1C16D08
	0x02D20F4C MOV X2, X0
	0x02D20F50 MOV X0, X21
	0x02D20F54 MOV X1, X20
	0x02D20F58 MOV X3, X31
	0x02D20F5C BL 0x3311888
	0x02D20F60 MOV X0, X21
	0x02D20F64 MOV X1, X19
	0x02D20F68 BL 0x1C16DEC
	0x02D20F6C STR X30, [X31 - 0x40]!
	0x02D20F70 STP X24, X23, [X31 + 0x10]
	0x02D20F74 STP X22, X21, [X31 + 0x20]
	0x02D20F78 STP X20, X19, [X31 + 0x30]
	0x02D20F7C ADRP X21, 0x16BB000
	0x02D20F80 LDRB W8, [X21 + 0x7DB]
	0x02D20F84 MOV X19, X1
	0x02D20F88 MOV X20, X0
	0x02D20F8C TBNZ X8, 0x0, 0x2D20FB0
	0x02D20F90 ADRP X0, 0x13D3000
	0x02D20F94 LDR X0, [X0 + 0x8F0]
	0x02D20F98 BL 0x1C16CF4
	0x02D20F9C ADRP X0, 0x13D4000
	0x02D20FA0 LDR X0, [X0 + 0xFE0]
	0x02D20FA4 BL 0x1C16CF4
	0x02D20FA8 MOVZ W8, 0x1
	0x02D20FAC STRB W8, [X21 + 0x7DB]
	0x02D20FB0 LDR W8, [X20 + 0x8]
	0x02D20FB4 CBZ W8, 0x2D2102C
	0x02D20FB8 LDR X8, [X20]
	0x02D20FBC CBZ X8, 0x2D2102C
	0x02D20FC0 LDR X0, [X19 + 0x20]
	0x02D20FC4 LDRB W8, [X0 + 0x135]
	0x02D20FC8 TBNZ X8, 0x0, 0x2D20FD0
	0x02D20FCC BL 0x1C5C684
	0x02D20FD0 LDR X8, [X0 + 0xC0]
	0x02D20FD4 LDR X0, [X8 + 0x30]
	0x02D20FD8 LDRB W8, [X0 + 0x135]
	0x02D20FDC TBNZ X8, 0x0, 0x2D20FE4
	0x02D20FE0 BL 0x1C5C684
	0x02D20FE4 LDR X8, [X0 + 0xB8]
	0x02D20FE8 LDR X8, [X8]
	0x02D20FEC CBZ X8, 0x2D21044
	0x02D20FF0 LDR X0, [X19 + 0x20]
	0x02D20FF4 LDRB W8, [X0 + 0x135]
	0x02D20FF8 TBNZ X8, 0x0, 0x2D21000
	0x02D20FFC BL 0x1C5C684
	0x02D21000 LDR X8, [X0 + 0xC0]
	0x02D21004 LDR X0, [X8 + 0x30]
	0x02D21008 LDRB W8, [X0 + 0x135]
	0x02D2100C TBNZ X8, 0x0, 0x2D21014
	0x02D21010 BL 0x1C5C684
	0x02D21014 LDR X8, [X0 + 0xB8]
	0x02D21018 LDR X0, [X8]
	0x02D2101C CBZ X0, 0x2D21190
	0x02D21020 MOV X1, X31
	0x02D21024 BL 0x3232AC0
	0x02D21028 B 0x2D210B0
	0x02D2102C LDP X20, X19, [X31 + 0x30]
	0x02D21030 LDP X22, X21, [X31 + 0x20]
	0x02D21034 LDP X24, X23, [X31 + 0x10]
	0x02D21038 MOV X0, X31
	0x02D2103C LDR X30, [X31], #0x40
	0x02D21040 RET
	0x02D21044 ADRP X8, 0x13D2000
	0x02D21048 LDR X8, [X8 + 0x8F0]
	0x02D2104C LDR X0, [X8]
	0x02D21050 BL 0x1C16F10
	0x02D21054 MOV X1, X31
	0x02D21058 MOV X21, X0
	0x02D2105C BL 0x3231AC4
	0x02D21060 LDR X0, [X19 + 0x20]
	0x02D21064 LDRB W8, [X0 + 0x135]
	0x02D21068 TBNZ X8, 0x0, 0x2D21070
	0x02D2106C BL 0x1C5C684
	0x02D21070 LDR X8, [X0 + 0xC0]
	0x02D21074 LDR X0, [X8 + 0x30]
	0x02D21078 LDRB W8, [X0 + 0x135]
	0x02D2107C TBNZ X8, 0x0, 0x2D21084
	0x02D21080 BL 0x1C5C684
	0x02D21084 LDR X8, [X0 + 0xB8]
	0x02D21088 STR X21, [X8]
	0x02D2108C LDR X0, [X19 + 0x20]
	0x02D21090 LDRB W8, [X0 + 0x135]
	0x02D21094 TBNZ X8, 0x0, 0x2D2109C
	0x02D21098 BL 0x1C5C684
	0x02D2109C LDR X8, [X0 + 0xC0]
	0x02D210A0 LDR X0, [X8 + 0x30]
	0x02D210A4 LDRB W8, [X0 + 0x135]
	0x02D210A8 TBNZ X8, 0x0, 0x2D210B0
	0x02D210AC BL 0x1C5C684
	0x02D210B0 LDR X0, [X19 + 0x20]
	0x02D210B4 LDRB W8, [X0 + 0x135]
	0x02D210B8 TBNZ X8, 0x0, 0x2D210C0
	0x02D210BC BL 0x1C5C684
	0x02D210C0 LDR X8, [X0 + 0xC0]
	0x02D210C4 LDR X0, [X8 + 0x30]
	0x02D210C8 LDRB W8, [X0 + 0x135]
	0x02D210CC TBNZ X8, 0x0, 0x2D210D4
	0x02D210D0 BL 0x1C5C684
	0x02D210D4 LDR X8, [X0 + 0xB8]
	0x02D210D8 ADRP X24, 0x13D3000
	0x02D210DC MOV W22, W31
	0x02D210E0 LDR X21, [X8]
	0x02D210E4 LDR X24, [X24 + 0xFE0]
	0x02D210E8 LDR X0, [X19 + 0x20]
	0x02D210EC LDRB W8, [X0 + 0x135]
	0x02D210F0 TBNZ X8, 0x0, 0x2D210F8
	0x02D210F4 BL 0x1C5C684
	0x02D210F8 LDR X8, [X0 + 0xC0]
	0x02D210FC MOV X0, X20
	0x02D21100 MOV W1, W22
	0x02D21104 LDR X2, [X8 + 0x28]
	0x02D21108 BL 0x2D205F0
	0x02D2110C LDR X8, [X19 + 0x20]
	0x02D21110 MOV X23, X0
	0x02D21114 LDRB W9, [X8 + 0x135]
	0x02D21118 TBNZ X9, 0x0, 0x2D21128
	0x02D2111C MOV X0, X8
	0x02D21120 BL 0x1C5C684
	0x02D21124 MOV X8, X0
	0x02D21128 LDR X8, [X8 + 0xC0]
	0x02D2112C MOV X0, X23
	0x02D21130 LDR X1, [X8 + 0x88]
	0x02D21134 BL 0x1E9005C
	0x02D21138 CBZ X21, 0x2D21190
	0x02D2113C MOV X1, X0
	0x02D21140 MOV X0, X21
	0x02D21144 MOV X2, X31
	0x02D21148 BL 0x32333E0
	0x02D2114C LDR W8, [X20 + 0x8]
	0x02D21150 ADD W22, W22, 0x1
	0x02D21154 CMP W22, W8
	0x02D21158 B.EQ 0x2D21170
	0x02D2115C LDR X1, [X24]
	0x02D21160 MOV X0, X21

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X19, X4
	012 Compare X1, 0
	013 JumpIfEqual {62}
	014 Move W8, [X0+8]
	015 Move X21, X0
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W8, [X1+24]
	018 Add W9, W3, W2
	019 Move X20, X1
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W23, W2
	023 Move X22, X31
	024 Move W24, W3
	025 Move X25, X23
	026 ShiftRight X25, 32
	027 And X25, X25, 0x7FFFFFFF
	028 Move X26, 1
	029 Move X0, [X19+32]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Move X8, [X0+192]
	037 Move X0, X21
	038 Move W1, W22
	039 Move X2, [X8+40]
	040 Call 0x2D20A44, X0, X1
	041 Move W8, [X20+24]
	042 Add X9, X23, X22
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Add X8, X20, X25
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Add X22, X22, 1
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add X25, X25, X26
	049 NotImplemented "Instruction STRH not yet implemented."
	050 Move X20, [X31+80]
	051 Move X19, [X31+88]
	052 Move X22, [X31+64]
	053 Move X21, [X31+72]
	054 Move X24, [X31+48]
	055 Move X23, [X31+56]
	056 Move X26, [X31+32]
	057 Move X25, [X31+40]
	058 Move X30, [X31+16]
	059 Add X31, X31, 96
	060 Return 
	061 Call 0x1C17F28
	062 Move X0, 0x13D9000
	063 Move X0, [X0+1320]
	064 Call 0x1C17D08
	065 Call 0x1C17F10
	066 Move X20, X0
	067 Move X0, 0x13DF000
	068 Move X0, [X0+1408]
	069 Call 0x1C17D08
	070 Move X1, X0
	071 Move X0, X20
	072 Move X2, X31
	073 Call ArgumentNullException..ctor, X0, X1
	074 Move X0, X20
	075 Move [X31+28], W8
	076 Move X20, 0x13D3000
	077 Move X20, [X20+1880]
	078 Move W22, W3
	079 Move X0, X20
	080 Call 0x1C17D08
	081 Add X1, X31, 28
	082 Call 0x1C17E04
	083 Move X21, X0
	084 Move X0, X20
	085 Move [X31+24], W22
	086 Call 0x1C17D08
	087 Add X1, X31, 24
	088 Call 0x1C17E04
	089 Move X20, X0
	090 Move X0, 0x13FC000
	091 Move X0, [X0+3048]
	092 Call 0x1C17D08
	093 Move X1, X21
	094 Move X2, X20
	095 Move X3, X31
	096 Call String.Format, X0, X1, X2
	097 Move X20, X0
	098 Move X0, 0x13DB000
	099 Move X0, [X0+1400]
	100 Call 0x1C17D08
	101 Call 0x1C17F10
	102 Move X21, X0
	103 Move X0, 0x13DE000
	104 Move X0, [X0+1408]
	105 Call 0x1C17D08
	106 Move X2, X0
	107 Move X0, X21
	108 Move X1, X20
	109 Move X3, X31
	110 Call ArgumentException..ctor, X0, X1, X2
	111 Move [X31+28], W3
	112 Move X20, 0x13D3000
	113 Move X20, [X20+1880]
	114 Move W23, W3
	115 Move W22, W2
	116 Move X0, X20
	117 Call 0x1C17D08
	118 Add X1, X31, 28
	119 Call 0x1C17E04
	120 Move X21, X0
	121 Move X0, X20
	122 Move [X31+24], W22
	123 Call 0x1C17D08
	124 Add X1, X31, 24
	125 Call 0x1C17E04
	126 Move X22, X0
	127 Move X0, X20
	128 Move [X31+12], W23
	129 Call 0x1C17D08
	130 Add X1, X31, 12
	131 Call 0x1C17E04
	132 Move X20, X0
	133 Move X0, 0x13FC000
	134 Move X0, [X0+3056]
	135 Call 0x1C17D08
	136 Move X1, X21
	137 Move X2, X22
	138 Move X3, X20
	139 Move X4, X31
	140 Call String.Format, X0, X1, X2, X3
	141 Move X20, X0
	142 Move X0, 0x13DB000
	143 Move X0, [X0+1888]
	144 Call 0x1C17D08
	145 Call 0x1C17F10
	146 Move X21, X0
	147 Move X0, 0x13FC000
	148 Move X0, [X0+3064]
	149 Call 0x1C17D08
	150 Move X2, X0
	151 Move X0, X21
	152 Move X1, X20
	153 Move X3, X31
	154 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	155 Move X0, X21
	156 Move X1, X19
	157 Call 0x1C17DEC

Method: System.Void CopyFrom(System.Collections.Generic.List`1<T> source, System.Int32 sourceOffset, System.Int32 sourceCount)

Disassembly:
	0x02D21164 MOV X2, X31
	0x02D21168 BL 0x32333E0
	0x02D2116C B 0x2D210E8
	0x02D21170 LDR X8, [X21]
	0x02D21174 MOV X0, X21
	0x02D21178 LDP X20, X19, [X31 + 0x30]
	0x02D2117C LDP X22, X21, [X31 + 0x20]
	0x02D21180 LDP X2, X1, [X8 + 0x168]
	0x02D21184 LDP X24, X23, [X31 + 0x10]
	0x02D21188 LDR X30, [X31], #0x40
	0x02D2118C BR X2
	0x02D21190 BL 0x1C16F20
	0x02D21194 LDR W0, [X0 + 0x8]
	0x02D21198 RET
	0x02D2119C STP X30, X21, [X31 - 0x20]!
	0x02D211A0 STP X20, X19, [X31 + 0x10]
	0x02D211A4 LDR X8, [X2 + 0x20]
	0x02D211A8 MOV X19, X2
	0x02D211AC MOV W20, W1
	0x02D211B0 MOV X21, X0
	0x02D211B4 LDRB W9, [X8 + 0x135]
	0x02D211B8 TBNZ X9, 0x0, 0x2D211C8
	0x02D211BC MOV X0, X8
	0x02D211C0 BL 0x1C5C684
	0x02D211C4 MOV X8, X0
	0x02D211C8 LDR W9, [X21 + 0x8]
	0x02D211CC CMP W9, W20
	0x02D211D0 B.LS 0x2D211FC
	0x02D211D4 LDR X8, [X8 + 0xC0]
	0x02D211D8 LDR X9, [X21]
	0x02D211DC SXTW X10, W20
	0x02D211E0 LDP X20, X19, [X31 + 0x10]
	0x02D211E4 LDR X8, [X8 + 0x10]
	0x02D211E8 LDRSW X8, [X8 + 0xFC]
	0x02D211EC NOP
	0x02D211F0 MADD X0, X8, X10, X9
	0x02D211F4 LDP X30, X21, [X31], #0x20
	0x02D211F8 RET
	0x02D211FC ADRP X0, 0x13DC000
	0x02D21200 LDR X0, [X0 + 0xF78]
	0x02D21204 BL 0x1C16D08
	0x02D21208 BL 0x1C16F10
	0x02D2120C MOV X1, X31
	0x02D21210 MOV X20, X0
	0x02D21214 BL 0x3379B10
	0x02D21218 MOV X0, X20
	0x02D2121C MOV X1, X19
	0x02D21220 BL 0x1C16DEC
	0x02D21224 STR X1, [X0]
	0x02D21228 STR W2, [X0 + 0x8]
	0x02D2122C RET
	0x02D21230 STP X29, X30, [X31 - 0x50]!
	0x02D21234 STP X26, X25, [X31 + 0x10]
	0x02D21238 STP X24, X23, [X31 + 0x20]
	0x02D2123C STP X22, X21, [X31 + 0x30]
	0x02D21240 STP X20, X19, [X31 + 0x40]
	0x02D21244 ADD X29, X31, 0x0
	0x02D21248 SUB X31, X31, 0x10
	0x02D2124C MRS X25, 0xC000
	0x02D21250 LDR X8, [X25 + 0x28]
	0x02D21254 MOV X19, X1
	0x02D21258 MOV X20, X0
	0x02D2125C STUR X8, [X29 - 0x8]
	0x02D21260 LDR X8, [X1 + 0x20]
	0x02D21264 ADD X9, X8, 0x135
	0x02D21268 LDRH W9, [X9]
	0x02D2126C TBNZ X9, 0x0, 0x2D21288
	0x02D21270 MOV X0, X8
	0x02D21274 BL 0x1C5C684
	0x02D21278 LDR X8, [X19 + 0x20]
	0x02D2127C ADD X9, X8, 0x135
	0x02D21280 LDRH W9, [X9]
	0x02D21284 B 0x2D2128C
	0x02D21288 MOV X0, X8
	0x02D2128C LDR X10, [X0 + 0xC0]
	0x02D21290 LDR X10, [X10 + 0x10]
	0x02D21294 LDR W21, [X10 + 0xFC]
	0x02D21298 ADD X10, X31, 0x0
	0x02D2129C ADD X11, X21, 0xF
	0x02D212A0 AND X11, X11, 0x1FFFFFFFF
	0x02D212A4 SUB X22, X10, X11
	0x02D212A8 ADD X31, X22, 0x0
	0x02D212AC LDR W23, [X20 + 0x8]
	0x02D212B0 TBNZ X9, 0x0, 0x2D212C0
	0x02D212B4 MOV X0, X8
	0x02D212B8 BL 0x1C5C684
	0x02D212BC MOV X8, X0
	0x02D212C0 LDR X8, [X8 + 0xC0]
	0x02D212C4 LDR X0, [X8 + 0x20]
	0x02D212C8 LDRB W8, [X0 + 0x135]
	0x02D212CC TBNZ X8, 0x0, 0x2D212D4
	0x02D212D0 BL 0x1C5C684
	0x02D212D4 MOV W1, W23
	0x02D212D8 BL 0x1C16D6C
	0x02D212DC LDR W8, [X20 + 0x8]
	0x02D212E0 MOV X23, X0
	0x02D212E4 CMP W8, 0x1
	0x02D212E8 B.LT 0x2D213CC
	0x02D212EC MOV X24, X31
	0x02D212F0 LDR X8, [X19 + 0x20]
	0x02D212F4 ADD X9, X8, 0x135
	0x02D212F8 LDRH W9, [X9]
	0x02D212FC TBNZ X9, 0x0, 0x2D21318
	0x02D21300 MOV X0, X8
	0x02D21304 BL 0x1C5C684
	0x02D21308 LDR X8, [X19 + 0x20]
	0x02D2130C ADD X9, X8, 0x135
	0x02D21310 LDRH W9, [X9]
	0x02D21314 B 0x2D2131C
	0x02D21318 MOV X0, X8
	0x02D2131C LDR X10, [X0 + 0xC0]
	0x02D21320 LDR X10, [X10 + 0x28]
	0x02D21324 LDR X26, [X10]
	0x02D21328 TBNZ X9, 0x0, 0x2D21338
	0x02D2132C MOV X0, X8
	0x02D21330 BL 0x1C5C684
	0x02D21334 MOV X8, X0
	0x02D21338 LDR X8, [X8 + 0xC0]
	0x02D2133C MOV X0, X20
	0x02D21340 MOV W1, W24
	0x02D21344 LDR X2, [X8 + 0x28]
	0x02D21348 BLR X26
	0x02D2134C MOV X1, X0
	0x02D21350 MOV X0, X22
	0x02D21354 MOV X2, X21
	0x02D21358 BL 0x3EB1AC0
	0x02D2135C CBZ X23, 0x2D21400
	0x02D21360 LDR W8, [X23 + 0x18]
	0x02D21364 CMP X24, X8
	0x02D21368 B.CS 0x2D213FC
	0x02D2136C LDR X8, [X23]
	0x02D21370 MOV X1, X22
	0x02D21374 MOV X2, X21
	0x02D21378 LDR W8, [X8 + 0x104]
	0x02D2137C NOP
	0x02D21380 MADD X8, X24, X8, X23
	0x02D21384 ADD X0, X8, 0x20
	0x02D21388 BL 0x3EB1AC0
	0x02D2138C LDR X0, [X19 + 0x20]
	0x02D21390 LDRB W8, [X0 + 0x135]
	0x02D21394 TBNZ X8, 0x0, 0x2D2139C
	0x02D21398 BL 0x1C5C684
	0x02D2139C LDR X8, [X0 + 0xC0]
	0x02D213A0 LDR X0, [X8 + 0x10]
	0x02D213A4 LDRB W8, [X0 + 0x135]
	0x02D213A8 TBNZ X8, 0x0, 0x2D213B0
	0x02D213AC BL 0x1C5C684
	0x02D213B0 LDR W8, [X23 + 0x18]
	0x02D213B4 CMP X24, X8
	0x02D213B8 B.CS 0x2D213FC
	0x02D213BC LDRSW X8, [X20 + 0x8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, X4
	011 Compare X1, 0
	012 JumpIfEqual {71}
	013 Move W8, [X0+8]
	014 Move W20, W3
	015 Move X23, X0
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X0, [X19+32]
	018 Move W21, W2
	019 Move X22, X1
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Move W8, [X22+24]
	027 Add W9, W20, W21
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W24, W31
	031 Move X0, [X19+32]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X8, [X0+192]
	039 Move X0, X23
	040 Move W1, W24
	041 Move X2, [X8+40]
	042 Call 0x2D20A44, X0, X1
	043 Move X8, [X19+32]
	044 Move X25, X0
	045 Move W9, [X8+309]
	046 Move TEMP, X9
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {53}
	050 Move X0, X8
	051 Call 0x1C5D684
	052 Move X8, X0
	053 Move X8, [X8+192]
	054 Add W1, W21, W24
	055 Move X0, X22
	056 Move X2, [X8+128]
	057 Call List`1<NetworkLoadSceneParameters>.get_Item, X0, X1
	058 Add W24, W24, 1
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction STRH not yet implemented."
	061 Move X20, [X31+64]
	062 Move X19, [X31+72]
	063 Move X22, [X31+48]
	064 Move X21, [X31+56]
	065 Move X24, [X31+32]
	066 Move X23, [X31+40]
	067 Move X30, [X31+16]
	068 Move X25, [X31+24]
	069 Add X31, X31, 80
	070 Return 
	071 Move X0, 0x13D8000
	072 Move X0, [X0+1320]
	073 Call 0x1C17D08
	074 Call 0x1C17F10
	075 Move X20, X0
	076 Move X0, 0x13DE000
	077 Move X0, [X0+1408]
	078 Call 0x1C17D08
	079 Move X1, X0
	080 Move X0, X20
	081 Move X2, X31
	082 Call ArgumentNullException..ctor, X0, X1
	083 Move X0, X20
	084 Move [X31+12], W8
	085 Move X21, 0x13D3000
	086 Move X21, [X21+1880]
	087 Move X0, X21
	088 Call 0x1C17D08
	089 Add X1, X31, 12
	090 Call 0x1C17E04
	091 Move X22, X0
	092 Move X0, X21
	093 Move [X31+8], W20
	094 Call 0x1C17D08
	095 Add X1, X31, 8
	096 Call 0x1C17E04
	097 Move X20, X0
	098 Move X0, 0x13FC000
	099 Move X0, [X0+3048]
	100 Call 0x1C17D08
	101 Move X1, X22
	102 Move X2, X20
	103 Move X3, X31
	104 Call String.Format, X0, X1, X2
	105 Move X20, X0
	106 Move X0, 0x13DB000
	107 Move X0, [X0+1400]
	108 Call 0x1C17D08
	109 Call 0x1C17F10
	110 Move X21, X0
	111 Move X0, 0x13DE000
	112 Move X0, [X0+1408]
	113 Call 0x1C17D08
	114 Move X2, X0
	115 Move X0, X21
	116 Move X1, X20
	117 Move X3, X31
	118 Call ArgumentException..ctor, X0, X1, X2
	119 Move [X31+12], W20
	120 Move X22, 0x13D3000
	121 Move X22, [X22+1880]
	122 Move X0, X22
	123 Call 0x1C17D08
	124 Add X1, X31, 12
	125 Call 0x1C17E04
	126 Move X23, X0
	127 Move X0, X22
	128 Move [X31+8], W21
	129 Call 0x1C17D08
	130 Add X1, X31, 8
	131 Call 0x1C17E04
	132 Move X21, X0
	133 Move X0, X22
	134 Move [X31+4], W20
	135 Call 0x1C17D08
	136 Add X1, X31, 4
	137 Call 0x1C17E04
	138 Move X20, X0
	139 Move X0, 0x13FC000
	140 Move X0, [X0+3056]
	141 Call 0x1C17D08
	142 Move X1, X23
	143 Move X2, X21
	144 Move X3, X20
	145 Move X4, X31
	146 Call String.Format, X0, X1, X2, X3
	147 Move X20, X0
	148 Move X0, 0x13DB000
	149 Move X0, [X0+1888]
	150 Call 0x1C17D08
	151 Call 0x1C17F10
	152 Move X21, X0
	153 Move X0, 0x13FC000
	154 Move X0, [X0+3064]
	155 Call 0x1C17D08
	156 Move X2, X0
	157 Move X0, X21
	158 Move X1, X20
	159 Move X3, X31
	160 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	161 Move X0, X21
	162 Move X1, X19
	163 Call 0x1C17DEC

Method: System.String ToListString()

Disassembly:
	0x02D213C0 ADD X24, X24, 0x1
	0x02D213C4 CMP X24, X8
	0x02D213C8 B.LT 0x2D212F0
	0x02D213CC LDR X8, [X25 + 0x28]
	0x02D213D0 LDUR X9, [X29 - 0x8]
	0x02D213D4 CMP X8, X9
	0x02D213D8 B.NE 0x2D21404
	0x02D213DC MOV X0, X23
	0x02D213E0 ADD X31, X29, 0x0
	0x02D213E4 LDP X20, X19, [X31 + 0x40]
	0x02D213E8 LDP X22, X21, [X31 + 0x30]
	0x02D213EC LDP X24, X23, [X31 + 0x20]
	0x02D213F0 LDP X26, X25, [X31 + 0x10]
	0x02D213F4 LDP X29, X30, [X31], #0x50
	0x02D213F8 RET
	0x02D213FC BL 0x1C16F28
	0x02D21400 BL 0x1C16F20
	0x02D21404 BL 0x3EB1B20
	0x02D21408 STP X29, X30, [X31 - 0x50]!
	0x02D2140C STP X26, X25, [X31 + 0x10]
	0x02D21410 STP X24, X23, [X31 + 0x20]
	0x02D21414 STP X22, X21, [X31 + 0x30]
	0x02D21418 STP X20, X19, [X31 + 0x40]
	0x02D2141C ADD X29, X31, 0x0
	0x02D21420 SUB X31, X31, 0x10
	0x02D21424 MRS X26, 0xC000
	0x02D21428 LDR X8, [X26 + 0x28]
	0x02D2142C MOV X19, X2
	0x02D21430 MOV X20, X1
	0x02D21434 MOV X21, X0
	0x02D21438 STUR X8, [X29 - 0x8]
	0x02D2143C LDR X8, [X2 + 0x20]
	0x02D21440 LDRB W9, [X8 + 0x135]
	0x02D21444 TBNZ X9, 0x0, 0x2D21454
	0x02D21448 MOV X0, X8
	0x02D2144C BL 0x1C5C684
	0x02D21450 MOV X8, X0
	0x02D21454 LDR X8, [X8 + 0xC0]
	0x02D21458 LDR X8, [X8 + 0x10]
	0x02D2145C LDR W22, [X8 + 0xFC]
	0x02D21460 ADD X8, X31, 0x0
	0x02D21464 ADD X9, X22, 0xF
	0x02D21468 AND X9, X9, 0x1FFFFFFFF
	0x02D2146C SUB X23, X8, X9
	0x02D21470 ADD X31, X23, 0x0
	0x02D21474 LDR W8, [X21 + 0x8]
	0x02D21478 CMP W8, 0x1
	0x02D2147C B.LT 0x2D21570
	0x02D21480 MOV W24, W31
	0x02D21484 LDR X8, [X19 + 0x20]
	0x02D21488 ADD X9, X8, 0x135
	0x02D2148C LDRH W9, [X9]
	0x02D21490 TBNZ X9, 0x0, 0x2D214AC
	0x02D21494 MOV X0, X8
	0x02D21498 BL 0x1C5C684
	0x02D2149C LDR X8, [X19 + 0x20]
	0x02D214A0 ADD X9, X8, 0x135
	0x02D214A4 LDRH W9, [X9]
	0x02D214A8 B 0x2D214B0
	0x02D214AC MOV X0, X8
	0x02D214B0 LDR X10, [X0 + 0xC0]
	0x02D214B4 LDR X10, [X10 + 0x28]
	0x02D214B8 LDR X25, [X10]
	0x02D214BC TBNZ X9, 0x0, 0x2D214CC
	0x02D214C0 MOV X0, X8
	0x02D214C4 BL 0x1C5C684
	0x02D214C8 MOV X8, X0
	0x02D214CC LDR X8, [X8 + 0xC0]
	0x02D214D0 MOV X0, X21
	0x02D214D4 MOV W1, W24
	0x02D214D8 LDR X2, [X8 + 0x28]
	0x02D214DC BLR X25
	0x02D214E0 MOV X1, X0
	0x02D214E4 MOV X0, X23
	0x02D214E8 MOV X2, X22
	0x02D214EC BL 0x3EB1AC0
	0x02D214F0 CBZ X20, 0x2D2159C
	0x02D214F4 LDR X8, [X19 + 0x20]
	0x02D214F8 ADD X9, X8, 0x135
	0x02D214FC LDRH W9, [X9]
	0x02D21500 TBNZ X9, 0x0, 0x2D2151C
	0x02D21504 MOV X0, X8
	0x02D21508 BL 0x1C5C684
	0x02D2150C LDR X8, [X19 + 0x20]
	0x02D21510 ADD X9, X8, 0x135
	0x02D21514 LDRH W9, [X9]
	0x02D21518 B 0x2D21520
	0x02D2151C MOV X0, X8
	0x02D21520 LDR X10, [X0 + 0xC0]
	0x02D21524 LDR X10, [X10 + 0x48]
	0x02D21528 LDR X25, [X10]
	0x02D2152C TBNZ X9, 0x0, 0x2D2153C
	0x02D21530 MOV X0, X8
	0x02D21534 BL 0x1C5C684
	0x02D21538 MOV X8, X0
	0x02D2153C LDR X8, [X8 + 0xC0]
	0x02D21540 SUB X3, X29, 0x10
	0x02D21544 MOV X0, X25
	0x02D21548 MOV X2, X20
	0x02D2154C LDR X1, [X8 + 0x48]
	0x02D21550 STUR X23, [X29 - 0x10]
	0x02D21554 MOV X4, X23
	0x02D21558 LDR X8, [X1 + 0x10]
	0x02D2155C BLR X8
	0x02D21560 LDR W8, [X21 + 0x8]
	0x02D21564 ADD W24, W24, 0x1
	0x02D21568 CMP W24, W8
	0x02D2156C B.LT 0x2D21484
	0x02D21570 LDR X8, [X26 + 0x28]
	0x02D21574 LDUR X9, [X29 - 0x8]
	0x02D21578 CMP X8, X9
	0x02D2157C B.NE 0x2D215A0
	0x02D21580 ADD X31, X29, 0x0
	0x02D21584 LDP X20, X19, [X31 + 0x40]
	0x02D21588 LDP X22, X21, [X31 + 0x30]
	0x02D2158C LDP X24, X23, [X31 + 0x20]
	0x02D21590 LDP X26, X25, [X31 + 0x10]
	0x02D21594 LDP X29, X30, [X31], #0x50
	0x02D21598 RET
	0x02D2159C BL 0x1C16F20
	0x02D215A0 BL 0x3EB1B20
	0x02D215A4 STP X29, X30, [X31 - 0x60]!
	0x02D215A8 STR X27, [X31 + 0x10]
	0x02D215AC STP X26, X25, [X31 + 0x20]
	0x02D215B0 STP X24, X23, [X31 + 0x30]
	0x02D215B4 STP X22, X21, [X31 + 0x40]
	0x02D215B8 STP X20, X19, [X31 + 0x50]
	0x02D215BC ADD X29, X31, 0x0
	0x02D215C0 SUB X31, X31, 0x10
	0x02D215C4 MRS X25, 0xC000
	0x02D215C8 LDR X8, [X25 + 0x28]
	0x02D215CC MOV X19, X3
	0x02D215D0 MOV X20, X1
	0x02D215D4 MOV X21, X0
	0x02D215D8 STUR X8, [X29 - 0x8]
	0x02D215DC LDR X8, [X3 + 0x20]
	0x02D215E0 LDRB W9, [X8 + 0x135]
	0x02D215E4 TBNZ X9, 0x0, 0x2D215F4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x16BB000
	009 Move W8, [X21+2010]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x13D3000
	017 Move X0, [X0+2288]
	018 Call 0x1C17CF4
	019 Move X0, 0x13D4000
	020 Move X0, [X0+4064]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2010], W8
	024 Move W8, [X20+8]
	025 Compare W8, 0
	026 JumpIfEqual {70}
	027 Move X8, [X20]
	028 Compare X8, 0
	029 JumpIfEqual {70}
	030 Move X0, [X19+32]
	031 Move W8, [X0+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Move X8, [X0+192]
	038 Move X0, [X8+48]
	039 Move W8, [X0+309]
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {45}
	044 Call 0x1C5D684
	045 Move X8, [X0+184]
	046 Move X8, [X8]
	047 Compare X8, 0
	048 JumpIfEqual {79}
	049 Move X0, [X19+32]
	050 Move W8, [X0+309]
	051 Move TEMP, X8
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {56}
	055 Call 0x1C5D684
	056 Move X8, [X0+192]
	057 Move X0, [X8+48]
	058 Move W8, [X0+309]
	059 Move TEMP, X8
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {64}
	063 Call 0x1C5D684
	064 Move X8, [X0+184]
	065 Move X0, [X8]
	066 Compare X0, 0
	067 JumpIfEqual {189}
	068 Move X1, X31
	069 Call StringBuilder.Clear, X0
	070 Move X20, [X31+48]
	071 Move X19, [X31+56]
	072 Move X22, [X31+32]
	073 Move X21, [X31+40]
	074 Move X24, [X31+16]
	075 Move X23, [X31+24]
	076 Move X0, X31
	077 Move X30, [X31+64]
	078 Return X0
	079 Move X8, 0x13D3000
	080 Move X8, [X8+2288]
	081 Move X0, [X8]
	082 Call 0x1C17F10
	083 Move X1, X31
	084 Move X21, X0
	085 Call StringBuilder..ctor, X0
	086 Move X0, [X19+32]
	087 Move W8, [X0+309]
	088 Move TEMP, X8
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {93}
	092 Call 0x1C5D684
	093 Move X8, [X0+192]
	094 Move X0, [X8+48]
	095 Move W8, [X0+309]
	096 Move TEMP, X8
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {101}
	100 Call 0x1C5D684
	101 Move X8, [X0+184]
	102 Move [X8], X21
	103 Move X0, [X19+32]
	104 Move W8, [X0+309]
	105 Move TEMP, X8
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfEqual {110}
	109 Call 0x1C5D684
	110 Move X8, [X0+192]
	111 Move X0, [X8+48]
	112 Move W8, [X0+309]
	113 Move TEMP, X8
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfEqual {118}
	117 Call 0x1C5D684
	118 Move X0, [X19+32]
	119 Move W8, [X0+309]
	120 Move TEMP, X8
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfEqual {125}
	124 Call 0x1C5D684
	125 Move X8, [X0+192]
	126 Move X0, [X8+48]
	127 Move W8, [X0+309]
	128 Move TEMP, X8
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfEqual {133}
	132 Call 0x1C5D684
	133 Move X8, [X0+184]
	134 Move X24, 0x13D4000
	135 Move W22, W31
	136 Move X21, [X8]
	137 Move X24, [X24+4064]
	138 Move X0, [X19+32]
	139 Move W8, [X0+309]
	140 Move TEMP, X8
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfEqual {145}
	144 Call 0x1C5D684
	145 Move X8, [X0+192]
	146 Move X0, X20
	147 Move W1, W22
	148 Move X2, [X8+40]
	149 Call 0x2D20A44, X0, X1
	150 Move X8, [X19+32]
	151 Move X23, X0
	152 Move W9, [X8+309]
	153 Move TEMP, X9
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfEqual {160}
	157 Move X0, X8
	158 Call 0x1C5D684
	159 Move X8, X0
	160 Move X8, [X8+192]
	161 Move X0, X23
	162 Move X1, [X8+136]
	163 Call NetworkLoadSceneParameters.ToString, X0
	164 Compare X21, 0
	165 JumpIfEqual {189}
	166 Move X1, X0
	167 Move X0, X21
	168 Move X2, X31
	169 Call StringBuilder.Append, X0, X1
	170 Move W8, [X20+8]
	171 Add W22, W22, 1
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X1, [X24]
	174 Move X0, X21
	175 Move X2, X31
	176 Call StringBuilder.Append, X0, X1
	177 Move X8, [X21]
	178 Move X0, X21
	179 Move X20, [X31+48]
	180 Move X19, [X31+56]
	181 Move X22, [X31+32]
	182 Move X21, [X31+40]
	183 Move X2, [X8+360]
	184 Move X1, [X8+368]
	185 Move X24, [X31+16]
	186 Move X23, [X31+24]
	187 Move X30, [X31+64]
	188 CallNoReturn X2
	189 Call 0x1C17F20

