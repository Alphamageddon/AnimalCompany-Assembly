Type: Fusion.ClientTimeProvider

Method: System.Void .ctor()

Disassembly:
	0x01ECCEB0 LDR V8, [X31], #0x20
	0x01ECCEB4 RET
	0x01ECCEB8 BL 0x1C16F20
	0x01ECCEBC STR X30, [X31 - 0x40]!
	0x01ECCEC0 STP X24, X23, [X31 + 0x10]
	0x01ECCEC4 STP X22, X21, [X31 + 0x20]
	0x01ECCEC8 STP X20, X19, [X31 + 0x30]
	0x01ECCECC ADRP X21, 0x250D000
	0x01ECCED0 ADRP X20, 0x2233000
	0x01ECCED4 LDRB W8, [X21 + 0x4D2]
	0x01ECCED8 LDR X20, [X20 + 0xDF8]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+112], X30
	003 Move [X31+120], X19
	004 Add X8, X31, 0
	005 Move X19, X0
	006 Call ClientTimeProviderSettings.Default
	007 Add X1, X31, 0
	008 Move X0, X19
	009 Call ClientTimeProvider..ctor, X0, X1
	010 Move X30, [X31+112]
	011 Move X19, [X31+120]
	012 Add X31, X31, 128
	013 Return 

Method: System.Void .ctor(Fusion.ClientTimeProviderSettings settings)

Disassembly:
	0x01EDB6E4 LDR X20, [X0]
	0x01EDB6E8 BL 0x3EB1AE0
	0x01EDB6EC ADRP X8, 0x2225000
	0x01EDB6F0 LDR X8, [X8 + 0x1D0]
	0x01EDB6F4 ADD X0, X31, 0x8
	0x01EDB6F8 LDR X1, [X8]
	0x01EDB6FC BL 0x2BC434C
	0x01EDB700 CBZ X20, 0x1EDB6B0
	0x01EDB704 MOV X0, X20
	0x01EDB708 BL 0x1C16F18
	0x01EDB70C MOV X20, X31
	0x01EDB710 B 0x1EDB718
	0x01EDB714 MOV X19, X0
	0x01EDB718 ADRP X8, 0x2225000
	0x01EDB71C LDR X8, [X8 + 0x1D0]
	0x01EDB720 LDR X1, [X8]
	0x01EDB724 ADD X0, X31, 0x8
	0x01EDB728 BL 0x2BC434C
	0x01EDB72C CBNZ X20, 0x1EDB738
	0x01EDB730 MOV X0, X19
	0x01EDB734 BL 0x1D2C690
	0x01EDB738 MOV X0, X20
	0x01EDB73C BL 0x1C16F18
	0x01EDB740 BL 0x1990590
	0x01EDB744 STR D8, [X31 - 0x30]!
	0x01EDB748 STR X30, [X31 + 0x8]
	0x01EDB74C STP X22, X21, [X31 + 0x10]
	0x01EDB750 STP X20, X19, [X31 + 0x20]
	0x01EDB754 MOV X19, X0
	0x01EDB758 LDR X0, [X0 + 0xF8]
	0x01EDB75C CBZ X0, 0x1EDB838
	0x01EDB760 FMOV D0, 0.5
	0x01EDB764 MOV X1, X31
	0x01EDB768 BL 0x1E92440
	0x01EDB76C ADRP X20, 0x24FD000
	0x01EDB770 LDRB W8, [X20 + 0xF18]
	0x01EDB774 MOV V8.16B, V0.16B
	0x01EDB778 CBNZ W8, 0x1EDB790
	0x01EDB77C ADRP X0, 0x2220000
	0x01EDB780 LDR X0, [X0 + 0x708]
	0x01EDB784 BL 0x1C16CF4
	0x01EDB788 MOVZ W8, 0x1
	0x01EDB78C STRB W8, [X20 + 0xF18]
	0x01EDB790 LDRB W8, [X19 + 0x148]
	0x01EDB794 ADRP X21, 0x2220000
	0x01EDB798 LDR X20, [X19 + 0x140]
	0x01EDB79C LDR X21, [X21 + 0x708]
	0x01EDB7A0 CMP W8, 0x1
	0x01EDB7A4 B.NE 0x1EDB7EC
	0x01EDB7A8 ADRP X22, 0x24FD000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x24FF000
	008 Move X22, 0x2226000
	009 Move X21, 0x2226000
	010 Move W8, [X23+1359]
	011 Move X22, [X22+416]
	012 Move X21, [X21+424]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x2226000
	020 Move X0, [X0+424]
	021 Call 0x1C17CF4
	022 Move X0, 0x2226000
	023 Move X0, [X0+416]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+1359], W8
	027 Move X0, X19
	028 Move X1, X31
	029 Call Object..ctor, X0
	030 Add X0, X19, 16
	031 Move W2, 112
	032 Move X1, X20
	033 Call 0x3EB2B30
	034 Move X0, [X22]
	035 Call 0x1C17F10
	036 Move X1, [X21]
	037 Move X20, X0
	038 Call List`1<Object>..ctor, X0
	039 Move [X19+464], X20
	040 Move X0, [X22]
	041 Call 0x1C17F10
	042 Move X1, [X21]
	043 Move X20, X0
	044 Call List`1<Object>..ctor, X0
	045 Move [X19+472], X20
	046 Move X0, [X22]
	047 Call 0x1C17F10
	048 Move X1, [X21]
	049 Move X20, X0
	050 Call List`1<Object>..ctor, X0
	051 Move [X19+480], X20
	052 Move X0, X19
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X30, [X31+48]
	058 Move X23, [X31+56]

Method: System.Void OnReset(Fusion.Clock clock, Fusion.TimeProviderCallback callback)

Disassembly:
	0x01ECCEDC MOV X19, X0
	0x01ECCEE0 TBNZ X8, 0x0, 0x1ECCF04
	0x01ECCEE4 ADRP X0, 0x2227000
	0x01ECCEE8 LDR X0, [X0 + 0x5A8]
	0x01ECCEEC BL 0x1C16CF4
	0x01ECCEF0 ADRP X0, 0x2233000
	0x01ECCEF4 LDR X0, [X0 + 0xDF8]
	0x01ECCEF8 BL 0x1C16CF4
	0x01ECCEFC MOVZ W8, 0x1
	0x01ECCF00 STRB W8, [X21 + 0x4D2]
	0x01ECCF04 LDR X0, [X20]
	0x01ECCF08 MOV X1, X31
	0x01ECCF0C STR X31, [X31 + 0x8]
	0x01ECCF10 BL 0x1E32108
	0x01ECCF14 LDRB W8, [X19 + 0x1B0]
	0x01ECCF18 CBZ W8, 0x1ECD06C
	0x01ECCF1C LDR X8, [X19 + 0x1A8]
	0x01ECCF20 STRB W31, [X19 + 0x1B0]
	0x01ECCF24 CBZ X8, 0x1ECCF38
	0x01ECCF28 LDR V0, [X8 + 0x48]
	0x01ECCF2C MOV X0, X31
	0x00000000 INVALID
	0x01ECCF34 BL 0x1E3219C
	0x01ECCF38 MOV X0, X19
	0x01ECCF3C BL 0x1ECD14C
	0x01ECCF40 MOV X20, X1
	0x01ECCF44 CMP W20, 0x1
	0x01ECCF48 B.LT 0x1ECCFE8
	0x01ECCF4C MOV X21, X0
	0x01ECCF50 CBZ X0, 0x1ECD098
	0x01ECCF54 MOV W22, W31
	0x01ECCF58 LDR W8, [X21 + 0x18]
	0x01ECCF5C CMP W22, W8
	0x01ECCF60 B.CS 0x1ECD09C
	0x01ECCF64 ADD X23, X21, W22, 0x3, SXTW
	0x01ECCF68 LDR X8, [X23 + 0x20]!
	0x01ECCF6C CBZ X8, 0x1ECD098
	0x01ECCF70 LDR X8, [X8 + 0x20]
	0x01ECCF74 CBZ X8, 0x1ECD098
	0x01ECCF78 LDR X9, [X19]
	0x01ECCF7C LDR W24, [X8]
	0x01ECCF80 MOV X0, X19
	0x01ECCF84 LDR X8, [X9 + 0x248]
	0x01ECCF88 LDR X1, [X9 + 0x250]
	0x01ECCF8C BLR X8
	0x01ECCF90 CMP W24, W0
	0x01ECCF94 B.GT 0x1ECCFDC
	0x01ECCF98 LDR W8, [X21 + 0x18]
	0x01ECCF9C CMP W22, W8
	0x01ECCFA0 B.CS 0x1ECD09C
	0x01ECCFA4 LDR X8, [X23]
	0x01ECCFA8 CBZ X8, 0x1ECD098
	0x01ECCFAC LDR X8, [X8 + 0x20]
	0x01ECCFB0 CBZ X8, 0x1ECD098
	0x01ECCFB4 LDR X0, [X19 + 0x1C0]
	0x01ECCFB8 CBZ X0, 0x1ECD098

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x250E000
	007 Move W8, [X22+1360]
	008 Move X19, X2
	009 Move W21, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2234000
	016 Move X0, [X0+3512]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1360], W8
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Compare W21, 0
	023 JumpIfNotEqual {49}
	024 Move X0, [X20+464]
	025 Compare X0, 0
	026 JumpIfNotEqual {33}
	027 Move X0, [X20+480]
	028 Compare X0, 0
	029 JumpIfNotEqual {33}
	030 Move X0, [X20+472]
	031 Compare X0, 0
	032 JumpIfEqual {66}
	033 Move X9, 0x2234000
	034 Move X9, [X9+3512]
	035 Move W10, [X0+28]
	036 Move X8, [X0+16]
	037 Move X9, [X9]
	038 Add W10, W10, 1
	039 Move [X0+28], W10
	040 Compare X8, 0
	041 JumpIfEqual {66}
	042 NotImplemented "Instruction LDRSW not yet implemented."
	043 Move W11, [X8+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Add W9, W10, 1
	046 Add X8, X8, X10
	047 Move [X0+24], W9
	048 Move [X8+32], X19
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Return 
	055 Move X8, [X9+32]
	056 Move X1, X19
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X8, [X8+192]
	062 Move X2, [X8+112]
	063 Move X30, [X31+48]
	064 Call List`1<Object>.AddWithResize, X0, X1
	065 Return 
	066 Call 0x1C17F20

Method: System.Void Configure(Fusion.TimeSyncConfiguration tsc)

Disassembly:
	0x01EDB9F8 CBZ X0, 0x1EDBB40
	0x01EDB9FC ADRP X8, 0x2225000
	0x01EDBA00 LDR X8, [X8 + 0x200]
	0x01EDBA04 MOV W1, W20
	0x01EDBA08 MOV X2, X31
	0x01EDBA0C LDR X3, [X8]
	0x01EDBA10 BL 0x25D175C
	0x01EDBA14 LDR X0, [X19 + 0x200]
	0x01EDBA18 CBZ X0, 0x1EDBA5C
	0x01EDBA1C ADRP X8, 0x2225000
	0x01EDBA20 LDR X8, [X8 + 0x1F8]
	0x01EDBA24 LDR X1, [X8]
	0x01EDBA28 BL 0x25D16B8
	0x01EDBA2C LDR V0, [X0 + 0x8]
	0x01EDBA30 FADD D0, D0, D8
	0x01EDBA34 STR D0, [X0 + 0x8]
	0x01EDBA38 LDR V0, [X19 + 0x210]
	0x01EDBA3C STR W20, [X19 + 0x208]
	0x01EDBA40 LDP X22, X21, [X31 + 0x20]
	0x01EDBA44 LDP X30, X23, [X31 + 0x10]
	0x01EDBA48 FADD D0, D0, D8
	0x01EDBA4C STR D0, [X19 + 0x210]
	0x01EDBA50 LDP X20, X19, [X31 + 0x30]
	0x01EDBA54 LDR V8, [X31], #0x40
	0x01EDBA58 RET
	0x01EDBA5C MOV W22, W20
	0x01EDBA60 BL 0x1C16F20
	0x01EDBA64 MOV W22, W20
	0x01EDBA68 B 0x1EDBA6C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {33}
	006 Move X19, X0
	007 Move X0, X1
	008 Move X20, X1
	009 Call TimeSyncConfiguration.get_SampleWindowSecondsNormalized, X0
	010 Move [X19+24], D0
	011 Call TimeSyncConfiguration.get_MaxSimSpeedAdjustNormalized, X0
	012 Move X0, X20
	013 Move [X19+16], D0
	014 Call TimeSyncConfiguration.get_MaxLateInputsNormalized, X0
	015 Move X0, X20
	016 Move [X19+32], D0
	017 Call TimeSyncConfiguration.get_MaxLateSnapshotsNormalized, X0
	018 Move X0, X20
	019 Move [X19+40], D0
	020 Call TimeSyncConfiguration.get_RedundantInputsNormalized, X0
	021 NotImplemented "Instruction SCVTF not yet implemented."
	022 Move X0, X20
	023 Move [X19+48], D0
	024 Call TimeSyncConfiguration.get_RedundantSnapshotsNormalized, X0
	025 NotImplemented "Instruction SCVTF not yet implemented."
	026 Move [X19+56], D0
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Call ClientTimeProvider.Initialize, X0
	032 Return 
	033 Call 0x1C17F20

Method: System.Void Configure(Fusion.SimulationRuntimeConfig src)

Disassembly:
	0x01EDBA6C MOV X20, X0
	0x01EDBA70 CMP W1, 0x1
	0x01EDBA74 B.NE 0x1EDBB6C
	0x01EDBA78 MOV X0, X20
	0x01EDBA7C BL 0x3EB1AD0
	0x01EDBA80 MOV X20, X0
	0x01EDBA84 ADRP X0, 0x2218000
	0x01EDBA88 LDR X0, [X0 + 0x7D0]
	0x01EDBA8C BL 0x1C16D08
	0x01EDBA90 LDR X8, [X20]
	0x01EDBA94 LDR X1, [X8]
	0x01EDBA98 BL 0x1C17270
	0x01EDBA9C TBZ X0, 0x0, 0x1EDBB44
	0x01EDBAA0 LDR X20, [X20]
	0x01EDBAA4 BL 0x3EB1AE0
	0x01EDBAA8 ADRP X0, 0x2220000
	0x01EDBAAC LDR X0, [X0 + 0x8B0]
	0x01EDBAB0 BL 0x1C16D08
	0x01EDBAB4 LDR W8, [X0 + 0xE0]
	0x01EDBAB8 CBNZ W8, 0x1EDBAC0
	0x01EDBABC BL 0x1C16DFC
	0x01EDBAC0 MOV X0, X20
	0x01EDBAC4 MOV X1, X31
	0x01EDBAC8 BL 0x1E3E4C8
	0x01EDBACC STR X31, [X19 + 0x210]
	0x01EDBAD0 ADRP X0, 0x2225000
	0x01EDBAD4 LDR W21, [X19 + 0x70]
	0x01EDBAD8 LDR X0, [X0 + 0x1B8]
	0x01EDBADC BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X1+4]
	005 Move X19, X1
	006 Move X20, X0
	007 Move [X0+64], W8
	008 Move W8, [X1+12]
	009 Move [X0+68], W8
	010 Move X0, X1
	011 Move X1, X31
	012 Call Resolved.get_ClientSendDelta, X0
	013 Move X0, X19
	014 Move X1, X31
	015 Move [X20+72], D0
	016 Call Resolved.get_ServerSendDelta, X0
	017 Move [X20+80], D0
	018 Move W8, [X19]
	019 Move X0, X19
	020 Move X1, X31
	021 Move [X20+112], W8
	022 Call Resolved.get_ClientTickDelta, X0
	023 Move TEMP, 0x80100000
	024 Not TEMP
	025 Move X8, TEMP
	026 Move [X20+120], D0
	027 Move [X20+96], X31
	028 Move [X20+104], X31
	029 Move [X20+88], X8
	030 Move X0, X20
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Call ClientTimeProvider.Initialize, X0
	035 Return 

Method: System.Void Initialize()

Disassembly:
	0x01EDB7AC LDRB W8, [X22 + 0xF17]
	0x01EDB7B0 CBNZ W8, 0x1EDB7C8
	0x01EDB7B4 ADRP X0, 0x2220000
	0x01EDB7B8 LDR X0, [X0 + 0x708]
	0x01EDB7BC BL 0x1C16CF4
	0x01EDB7C0 MOVZ W8, 0x1
	0x01EDB7C4 STRB W8, [X22 + 0xF17]
	0x01EDB7C8 LDR X0, [X21]
	0x01EDB7CC LDR W8, [X0 + 0xE0]
	0x01EDB7D0 CBNZ W8, 0x1EDB7D8
	0x01EDB7D4 BL 0x1C16DFC
	0x01EDB7D8 MOV X0, X31
	0x01EDB7DC BL 0x364BF5C
	0x01EDB7E0 LDR X8, [X19 + 0x138]
	0x01EDB7E4 ADD X9, X0, X20
	0x01EDB7E8 SUB X20, X9, X8
	0x01EDB7EC LDR X0, [X21]
	0x01EDB7F0 LDR W8, [X0 + 0xE0]
	0x01EDB7F4 CBNZ W8, 0x1EDB800
	0x01EDB7F8 BL 0x1C16DFC
	0x01EDB7FC LDR X0, [X21]
	0x01EDB800 LDR X8, [X0 + 0xB8]
	0x01EDB804 LDP D3, D2, [X19 + 0x150]
	0x01EDB808 SCVTF D1, X20
	0x01EDB80C LDP X20, X19, [X31 + 0x20]
	0x01EDB810 LDR V0, [X8]
	0x01EDB814 LDP X22, X21, [X31 + 0x10]
	0x01EDB818 LDR X30, [X31 + 0x8]
	0x01EDB81C SCVTF D0, D0
	0x01EDB820 FDIV D0, D1, D0
	0x01EDB824 FADD D0, D8, D0
	0x01EDB828 FMUL D0, D2, D0
	0x01EDB82C FADD D0, D3, D0
	0x01EDB830 LDR V8, [X31], #0x30
	0x01EDB834 RET
	0x01EDB838 BL 0x1C16F20
	0x01EDB83C STR X30, [X31 - 0x30]!
	0x01EDB840 STP X22, X21, [X31 + 0x10]
	0x01EDB844 STP X20, X19, [X31 + 0x20]
	0x01EDB848 ADRP X20, 0x24FD000
	0x01EDB84C LDRB W8, [X20 + 0xF18]
	0x01EDB850 MOV X19, X0
	0x01EDB854 CBNZ W8, 0x1EDB86C
	0x01EDB858 ADRP X0, 0x2220000
	0x01EDB85C LDR X0, [X0 + 0x708]
	0x01EDB860 BL 0x1C16CF4
	0x01EDB864 MOVZ W8, 0x1
	0x01EDB868 STRB W8, [X20 + 0xF18]
	0x01EDB86C LDRB W8, [X19 + 0x120]
	0x01EDB870 ADRP X21, 0x2220000
	0x01EDB874 LDR X20, [X19 + 0x118]
	0x01EDB878 LDR X21, [X21 + 0x708]
	0x01EDB87C CMP W8, 0x1
	0x01EDB880 B.NE 0x1EDB8C8
	0x01EDB884 ADRP X22, 0x24FD000
	0x01EDB888 LDRB W8, [X22 + 0xF17]
	0x01EDB88C CBNZ W8, 0x1EDB8A4
	0x01EDB890 ADRP X0, 0x2220000
	0x01EDB894 LDR X0, [X0 + 0x708]
	0x01EDB898 BL 0x1C16CF4
	0x01EDB89C MOVZ W8, 0x1
	0x01EDB8A0 STRB W8, [X22 + 0xF17]
	0x01EDB8A4 LDR X0, [X21]
	0x01EDB8A8 LDR W8, [X0 + 0xE0]
	0x01EDB8AC CBNZ W8, 0x1EDB8B4
	0x01EDB8B0 BL 0x1C16DFC
	0x01EDB8B4 MOV X0, X31
	0x01EDB8B8 BL 0x364BF5C
	0x01EDB8BC LDR X8, [X19 + 0x110]
	0x01EDB8C0 ADD X9, X0, X20
	0x01EDB8C4 SUB X20, X9, X8
	0x01EDB8C8 LDR X0, [X21]
	0x01EDB8CC LDR W8, [X0 + 0xE0]
	0x01EDB8D0 CBNZ W8, 0x1EDB8DC
	0x01EDB8D4 BL 0x1C16DFC
	0x01EDB8D8 LDR X0, [X21]
	0x01EDB8DC LDR X8, [X0 + 0xB8]
	0x01EDB8E0 LDR W9, [X19 + 0x130]
	0x01EDB8E4 LDR V2, [X19 + 0x158]
	0x01EDB8E8 LDR V3, [X19 + 0x78]
	0x01EDB8EC LDR V1, [X8]
	0x01EDB8F0 SCVTF D0, X20
	0x01EDB8F4 LDP X20, X19, [X31 + 0x20]
	0x01EDB8F8 LDP X22, X21, [X31 + 0x10]
	0x01EDB8FC SCVTF D1, D1
	0x01EDB900 SCVTF D4, W9
	0x01EDB904 FDIV D0, D0, D1
	0x01EDB908 FMUL D0, D2, D0
	0x01EDB90C FMUL D1, D3, D4
	0x01EDB910 FADD D0, D0, D1
	0x01EDB914 LDR X30, [X31], #0x30
	0x01EDB918 RET
	0x01EDB91C STR D8, [X31 - 0x10]!
	0x01EDB920 STR X30, [X31 + 0x8]
	0x01EDB924 LDR V8, [X0 + 0xE0]
	0x01EDB928 BL 0x1EDB744
	0x01EDB92C LDR X30, [X31 + 0x8]
	0x01EDB930 FSUB D0, D8, D0
	0x01EDB934 LDR V8, [X31], #0x10
	0x01EDB938 RET
	0x01EDB93C LDR V0, [X0 + 0x1EC]
	0x01EDB940 LDR V1, [X0 + 0x210]
	0x01EDB944 FCVT S0, S0
	0x01EDB948 FADD D0, D1, D0
	0x01EDB94C RET
	0x01EDB950 STR D8, [X31 - 0x40]!
	0x01EDB954 STP X30, X23, [X31 + 0x10]
	0x01EDB958 STP X22, X21, [X31 + 0x20]
	0x01EDB95C STP X20, X19, [X31 + 0x30]
	0x01EDB960 ADRP X20, 0x24FE000
	0x01EDB964 LDRB W8, [X20 + 0x556]
	0x01EDB968 MOV V8.16B, V0.16B
	0x01EDB96C MOV X19, X0
	0x01EDB970 TBNZ X8, 0x0, 0x1EDB9A0
	0x01EDB974 ADRP X0, 0x2225000
	0x01EDB978 LDR X0, [X0 + 0x1F8]
	0x01EDB97C BL 0x1C16CF4
	0x01EDB980 ADRP X0, 0x2225000
	0x01EDB984 LDR X0, [X0 + 0x200]
	0x01EDB988 BL 0x1C16CF4
	0x01EDB98C ADRP X0, 0x2225000
	0x01EDB990 LDR X0, [X0 + 0x208]
	0x01EDB994 BL 0x1C16CF4
	0x01EDB998 MOVZ W8, 0x1
	0x01EDB99C STRB W8, [X20 + 0x556]
	0x01EDB9A0 LDR W8, [X19 + 0x70]
	0x01EDB9A4 LDR V0, [X19 + 0xE0]
	0x01EDB9A8 MOVZ X9, 0x7FF00000
	0x01EDB9AC LDR X0, [X19 + 0x200]
	0x01EDB9B0 SCVTF D2, W8
	0x01EDB9B4 FMOV D1, X9
	0x01EDB9B8 FMUL D0, D0, D2
	0x01EDB9BC FCVTZS W8, D0
	0x01EDB9C0 FCMP D0, D1
	0x01EDB9C4 MOVZ W9, 0x80000000
	0x01EDB9C8 CSEL W8, W9, W8, EQ
	0x01EDB9CC CBZ X0, 0x1EDBB40
	0x01EDB9D0 ADRP X9, 0x2225000
	0x01EDB9D4 LDR X9, [X9 + 0x208]
	0x01EDB9D8 BIC W20, W8, W8, 0x1F
	0x01EDB9DC LDR X1, [X9]
	0x01EDB9E0 BL 0x25D0F3C
	0x01EDB9E4 TBNZ X0, 0x0, 0x1EDB9F4
	0x01EDB9E8 LDR W8, [X19 + 0x208]
	0x01EDB9EC CMP W20, W8
	0x01EDB9F0 B.EQ 0x1EDBA14
	0x01EDB9F4 LDR X0, [X19 + 0x200]

ISIL:
	001 Move [X31-96], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0x24FF000
	013 Move X24, 0x2226000
	014 Move X23, 0x2226000
	015 Move X22, 0x2226000
	016 Move X21, 0x2226000
	017 Move W8, [X20+1361]
	018 Move X24, [X24+432]
	019 Move X23, [X23+184]
	020 Move X22, [X22+440]
	021 Move X21, [X21+448]
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {41}
	027 Move X0, 0x2226000
	028 Move X0, [X0+448]
	029 Call 0x1C17CF4
	030 Move X0, 0x2226000
	031 Move X0, [X0+440]
	032 Call 0x1C17CF4
	033 Move X0, 0x2226000
	034 Move X0, [X0+184]
	035 Call 0x1C17CF4
	036 Move X0, 0x2226000
	037 Move X0, [X0+432]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+1361], W8
	041 Move X0, [X24]
	042 Move V8, [X19+16]
	043 Call 0x1C17F10
	044 Move X8, -20893696
	045 Move V10, [X8+3672]
	046 NotImplemented "Instruction FNEG not yet implemented."
	047 Move D1, X31
	048 Move D2, X31
	049 Move V0, V10
	050 Move V3, V9
	051 Move V4, V8
	052 Move X1, X31
	053 Move X20, X0
	054 Call VariableFeedback..ctor, X0, V0, V1, V2, V3, V4
	055 Move [X19+128], X20
	056 Move X0, [X24]
	057 Call 0x1C17F10
	058 Move D1, X31
	059 Move D2, X31
	060 Move V0, V10
	061 Move V3, V9
	062 Move V4, V8
	063 Move X1, X31
	064 Move X20, X0
	065 Call VariableFeedback..ctor, X0, V0, V1, V2, V3, V4
	066 Move [X19+160], X20
	067 Move X0, [X24]
	068 Call 0x1C17F10
	069 Move D1, X31
	070 Move D2, X31
	071 Move V0, V10
	072 Move V3, V9
	073 Move V4, V8
	074 Move X1, X31
	075 Move X20, X0
	076 Call VariableFeedback..ctor, X0, V0, V1, V2, V3, V4
	077 NotImplemented "Instruction MOVI not yet implemented."
	078 Move [X19+192], X20
	079 Move [X19+320], X31
	080 Move [X19+328], X31
	081 Move [X19+312], X31
	082 Move [X19+280], X31
	083 Move [X19+288], X31
	084 Move [X19+272], X31
	085 Move [X19+352], V0
	086 Move [X19+360], V0
	087 Move [X19+384], V0
	088 Move [X19+392], V0
	089 Move [X19+416], V0
	090 Move [X19+424], V0
	091 Move X0, [X23]
	092 Move W24, [X19+68]
	093 Move V8, [X19+24]
	094 Call 0x1C17F10
	095 NotImplemented "Instruction SCVTF not yet implemented."
	096 Move X8, 0x7FF00000
	097 Multiply D0, D8, D0
	098 Move D8, X8
	099 NotImplemented "Instruction FCVTZS not yet implemented."
	100 NotImplemented "Instruction FCMP not yet implemented."
	101 Move W24, 0x80000000
	102 NotImplemented "Instruction CSEL not yet implemented."
	103 Move X2, X31
	104 Move X20, X0
	105 Call TimeSeries..ctor, X0, X1
	106 Move [X19+248], X20
	107 Move X0, [X23]
	108 Move W25, [X19+68]
	109 Move V9, [X19+24]
	110 Call 0x1C17F10
	111 NotImplemented "Instruction SCVTF not yet implemented."
	112 Multiply D0, D9, D0
	113 NotImplemented "Instruction FCVTZS not yet implemented."
	114 NotImplemented "Instruction FCMP not yet implemented."
	115 NotImplemented "Instruction CSEL not yet implemented."
	116 Move X2, X31
	117 Move X20, X0
	118 Call TimeSeries..ctor, X0, X1
	119 Move [X19+256], X20
	120 Move X0, [X23]
	121 Move W25, [X19+68]
	122 Move V9, [X19+24]
	123 Call 0x1C17F10
	124 NotImplemented "Instruction SCVTF not yet implemented."
	125 Multiply D0, D9, D0
	126 NotImplemented "Instruction FCVTZS not yet implemented."
	127 NotImplemented "Instruction FCMP not yet implemented."
	128 NotImplemented "Instruction CSEL not yet implemented."
	129 Move X2, X31
	130 Move X20, X0
	131 Call TimeSeries..ctor, X0, X1
	132 Move [X19+296], X20
	133 Move X0, [X23]
	134 Move W25, [X19+68]
	135 Move V9, [X19+24]
	136 Call 0x1C17F10
	137 NotImplemented "Instruction SCVTF not yet implemented."
	138 Multiply D0, D9, D0
	139 NotImplemented "Instruction FCVTZS not yet implemented."
	140 NotImplemented "Instruction FCMP not yet implemented."
	141 NotImplemented "Instruction CSEL not yet implemented."
	142 Move X2, X31
	143 Move X20, X0
	144 Call TimeSeries..ctor, X0, X1
	145 Move [X19+264], X20
	146 Move X0, [X22]
	147 Move W20, [X19+112]
	148 Call 0x1C17F10
	149 Move X2, [X21]
	150 Move W1, W20
	151 Move X21, X0
	152 Call RingBuffer`1<TimeAdjustment>..ctor, X0, X1
	153 Move [X19+512], X21
	154 Move X20, [X31+80]
	155 Move X19, [X31+88]
	156 Move X22, [X31+64]
	157 Move X21, [X31+72]
	158 Move X24, [X31+48]
	159 Move X23, [X31+56]
	160 Move X30, [X31+32]
	161 Move X25, [X31+40]
	162 Move D9, [X31+16]
	163 Move D8, [X31+24]
	164 Move V10, [X31+96]
	165 Return 

Method: System.Void Reset(System.Double roundTripTime, Fusion.Tick snapshot, System.Double time, System.Double timeScale)

Disassembly:
	0x01EDBAE0 BL 0x1C16F10
	0x01EDBAE4 MOV X20, X0
	0x01EDBAE8 ADRP X0, 0x2225000
	0x01EDBAEC LDR X0, [X0 + 0x1C0]
	0x01EDBAF0 BL 0x1C16D08
	0x01EDBAF4 MOV X2, X0
	0x01EDBAF8 MOV X0, X20
	0x01EDBAFC MOV W1, W21
	0x01EDBB00 BL 0x25D0D70
	0x01EDBB04 STR X20, [X19 + 0x200]
	0x01EDBB08 CBZ X20, 0x1EDBB40
	0x01EDBB0C ADRP X0, 0x2225000
	0x01EDBB10 LDR X0, [X0 + 0x200]
	0x01EDBB14 MOV W23, W22
	0x01EDBB18 MOV W21, W22
	0x01EDBB1C FMOV X22, D8
	0x01EDBB20 BL 0x1C16D08
	0x01EDBB24 MOV X3, X0
	0x01EDBB28 MOV X0, X20
	0x01EDBB2C MOV X1, X21
	0x01EDBB30 MOV X2, X22
	0x01EDBB34 MOV W20, W23
	0x01EDBB38 BL 0x25D175C
	0x01EDBB3C B 0x1EDBA38
	0x01EDBB40 BL 0x1C16F20
	0x01EDBB44 MOVZ W0, 0x8
	0x01EDBB48 BL 0x3EB1AF0
	0x01EDBB4C LDR X8, [X20]
	0x01EDBB50 STR X8, [X0]
	0x01EDBB54 ADRP X1, 0x1FD9000
	0x01EDBB58 ADD X1, X1, 0xE58
	0x01EDBB5C MOV X2, X31
	0x01EDBB60 BL 0x3EB1B00
	0x01EDBB64 MOV X20, X0
	0x01EDBB68 BL 0x3EB1AE0
	0x01EDBB6C MOV X0, X20
	0x01EDBB70 BL 0x1D2C690
	0x01EDBB74 BL 0x1990590
	0x01EDBB78 STR X30, [X31 - 0x40]!
	0x01EDBB7C STP X24, X23, [X31 + 0x10]
	0x01EDBB80 STP X22, X21, [X31 + 0x20]
	0x01EDBB84 STP X20, X19, [X31 + 0x30]
	0x01EDBB88 ADRP X19, 0x24FE000
	0x01EDBB8C LDRB W8, [X19 + 0x557]
	0x01EDBB90 MOV X20, X1
	0x01EDBB94 MOV X21, X0
	0x01EDBB98 TBNZ X8, 0x0, 0x1EDBBD4
	0x01EDBB9C ADRP X0, 0x2218000
	0x01EDBBA0 LDR X0, [X0 + 0xE00]
	0x01EDBBA4 BL 0x1C16CF4
	0x01EDBBA8 ADRP X0, 0x2225000
	0x01EDBBAC LDR X0, [X0 + 0x210]
	0x01EDBBB0 BL 0x1C16CF4
	0x01EDBBB4 ADRP X0, 0x2218000
	0x01EDBBB8 LDR X0, [X0 + 0xE18]
	0x01EDBBBC BL 0x1C16CF4
	0x01EDBBC0 ADRP X0, 0x2225000
	0x01EDBBC4 LDR X0, [X0 + 0x218]
	0x01EDBBC8 BL 0x1C16CF4
	0x01EDBBCC MOVZ W8, 0x1
	0x01EDBBD0 STRB W8, [X19 + 0x557]
	0x01EDBBD4 LDR X0, [X21 + 0x200]
	0x01EDBBD8 STR X31, [X21 + 0x210]
	0x01EDBBDC CBZ X0, 0x1EDBD58
	0x01EDBBE0 ADRP X8, 0x2225000
	0x01EDBBE4 LDR X8, [X8 + 0x218]
	0x01EDBBE8 ADRP X22, 0x2218000
	0x01EDBBEC LDR X1, [X8]
	0x01EDBBF0 LDR X22, [X22 + 0xE00]
	0x01EDBBF4 BL 0x25D1DFC
	0x01EDBBF8 MOV X19, X0
	0x01EDBBFC CBZ X0, 0x1EDBD5C
	0x01EDBC00 ADRP X23, 0x2218000
	0x01EDBC04 ADRP X24, 0x2225000
	0x01EDBC08 LDR X23, [X23 + 0xE18]
	0x01EDBC0C LDR X24, [X24 + 0x210]
	0x01EDBC10 LDR X8, [X19]
	0x01EDBC14 LDR X1, [X23]
	0x01EDBC18 LDRH W9, [X8 + 0x12E]
	0x01EDBC1C CBZ X9, 0x1EDBC40
	0x01EDBC20 LDR X10, [X8 + 0xB0]
	0x01EDBC24 ADD X10, X10, 0x8
	0x01EDBC28 LDUR X11, [X10 - 0x8]
	0x01EDBC2C CMP X11, X1
	0x01EDBC30 B.EQ 0x1EDBC50
	0x01EDBC34 SUBS X9, X9, 0x1
	0x01EDBC38 ADD X10, X10, 0x10
	0x01EDBC3C B.NE 0x1EDBC28
	0x01EDBC40 MOV X0, X19
	0x01EDBC44 MOV W2, W31
	0x01EDBC48 BL 0x1C5C788
	0x01EDBC4C B 0x1EDBC5C
	0x01EDBC50 LDRSW X9, [X10]
	0x01EDBC54 ADD X8, X8, X9, 0x4, LSL
	0x01EDBC58 ADD X0, X8, 0x138
	0x01EDBC5C LDP X8, X1, [X0]
	0x01EDBC60 MOV X0, X19
	0x01EDBC64 BLR X8
	0x01EDBC68 TBZ X0, 0x0, 0x1EDBCE0
	0x01EDBC6C LDR X8, [X19]
	0x01EDBC70 LDR X1, [X24]
	0x01EDBC74 LDRH W9, [X8 + 0x12E]
	0x01EDBC78 CBZ X9, 0x1EDBC9C
	0x01EDBC7C LDR X10, [X8 + 0xB0]
	0x01EDBC80 ADD X10, X10, 0x8
	0x01EDBC84 LDUR X11, [X10 - 0x8]
	0x01EDBC88 CMP X11, X1
	0x01EDBC8C B.EQ 0x1EDBCAC
	0x01EDBC90 SUBS X9, X9, 0x1
	0x01EDBC94 ADD X10, X10, 0x10
	0x01EDBC98 B.NE 0x1EDBC84
	0x01EDBC9C MOV X0, X19
	0x01EDBCA0 MOV W2, W31
	0x01EDBCA4 BL 0x1C5C788
	0x01EDBCA8 B 0x1EDBCB8
	0x01EDBCAC LDRSW X9, [X10]
	0x01EDBCB0 ADD X8, X8, X9, 0x4, LSL
	0x01EDBCB4 ADD X0, X8, 0x138
	0x01EDBCB8 LDP X8, X1, [X0]
	0x01EDBCBC MOV X0, X19
	0x01EDBCC0 BLR X8
	0x01EDBCC4 CMP W0, W20
	0x01EDBCC8 B.LT 0x1EDBC10
	0x01EDBCCC LDR V0, [X21 + 0x210]
	0x01EDBCD0 FMOV D1, X1
	0x01EDBCD4 FADD D0, D0, D1
	0x01EDBCD8 STR D0, [X21 + 0x210]
	0x01EDBCDC B 0x1EDBC10
	0x01EDBCE0 MOV X20, X31
	0x01EDBCE4 CBZ X19, 0x1EDBD40
	0x01EDBCE8 LDR X8, [X19]
	0x01EDBCEC LDR X1, [X22]
	0x01EDBCF0 LDRH W9, [X8 + 0x12E]
	0x01EDBCF4 CBZ X9, 0x1EDBD18
	0x01EDBCF8 LDR X10, [X8 + 0xB0]
	0x01EDBCFC ADD X10, X10, 0x8
	0x01EDBD00 LDUR X11, [X10 - 0x8]
	0x01EDBD04 CMP X11, X1
	0x01EDBD08 B.EQ 0x1EDBD28
	0x01EDBD0C SUBS X9, X9, 0x1
	0x01EDBD10 ADD X10, X10, 0x10
	0x01EDBD14 B.NE 0x1EDBD00
	0x01EDBD18 MOV X0, X19
	0x01EDBD1C MOV W2, W31
	0x01EDBD20 BL 0x1C5C788
	0x01EDBD24 B 0x1EDBD34
	0x01EDBD28 LDRSW X9, [X10]
	0x01EDBD2C ADD X8, X8, X9, 0x4, LSL
	0x01EDBD30 ADD X0, X8, 0x138
	0x01EDBD34 LDP X8, X1, [X0]
	0x01EDBD38 MOV X0, X19
	0x01EDBD3C BLR X8
	0x01EDBD40 CBNZ X20, 0x1EDBD60
	0x01EDBD44 LDP X20, X19, [X31 + 0x30]
	0x01EDBD48 LDP X22, X21, [X31 + 0x20]
	0x01EDBD4C LDP X24, X23, [X31 + 0x10]
	0x01EDBD50 LDR X30, [X31], #0x40
	0x01EDBD54 RET
	0x01EDBD58 BL 0x1C16F20
	0x01EDBD5C BL 0x1C16F20
	0x01EDBD60 MOV X0, X20

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x24FF000
	010 Move W8, [X21+1362]
	011 Move V8, V2
	012 Move V9, V1
	013 Move X20, X1
	014 Move V10, V0
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x2226000
	021 Move X0, [X0+456]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1362], W8
	025 Move X21, [X19+128]
	026 Compare X21, 0
	027 JumpIfEqual {180}
	028 Move X22, 0x2226000
	029 Move X8, [X21]
	030 Move X22, [X22+456]
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X22]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move W2, 2
	042 Move X0, X21
	043 Call 0x1C5D788
	044 Move W9, [X10]
	045 Add W9, W9, 2
	046 Add X8, X8, W9
	047 Add X0, X8, 312
	048 Move X8, [X0]
	049 Move X1, [X0+8]
	050 Move X0, X21
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X21, [X19+160]
	053 Compare X21, 0
	054 JumpIfEqual {180}
	055 Move X8, [X21]
	056 Move X1, [X22]
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 Compare X9, 0
	059 JumpIfEqual {66}
	060 Move X10, [X8+176]
	061 Add X10, X10, 8
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Subtract X9, X9, 1
	065 Add X10, X10, 16
	066 Move W2, 2
	067 Move X0, X21
	068 Call 0x1C5D788
	069 Move W9, [X10]
	070 Add W9, W9, 2
	071 Add X8, X8, W9
	072 Add X0, X8, 312
	073 Move X8, [X0]
	074 Move X1, [X0+8]
	075 Move X0, X21
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move X21, [X19+192]
	078 Compare X21, 0
	079 JumpIfEqual {180}
	080 Move X8, [X21]
	081 Move X1, [X22]
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Compare X9, 0
	084 JumpIfEqual {91}
	085 Move X10, [X8+176]
	086 Add X10, X10, 8
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Subtract X9, X9, 1
	090 Add X10, X10, 16
	091 Move W2, 2
	092 Move X0, X21
	093 Call 0x1C5D788
	094 Move W9, [X10]
	095 Add W9, W9, 2
	096 Add X8, X8, W9
	097 Add X0, X8, 312
	098 Move X8, [X0]
	099 Move X1, [X0+8]
	100 Move X0, X21
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move X0, [X19+248]
	103 Compare X0, 0
	104 JumpIfEqual {180}
	105 Move X1, X31
	106 Call TimeSeries.Clear, X0
	107 Move X0, [X19+256]
	108 Compare X0, 0
	109 JumpIfEqual {180}
	110 Move X1, X31
	111 Call TimeSeries.Clear, X0
	112 Move X0, [X19+296]
	113 Compare X0, 0
	114 JumpIfEqual {180}
	115 Move X1, X31
	116 Call TimeSeries.Clear, X0
	117 Move [X19+328], W31
	118 Move [X19+312], X31
	119 Move [X19+320], X31
	120 Move [X19+288], W31
	121 Move [X19+272], X31
	122 Move [X19+280], X31
	123 Move [X19+392], W31
	124 Move [X19+376], X31
	125 Move [X19+384], X31
	126 Move [X19+416], W31
	127 Move [X19+400], X31
	128 Move [X19+408], X31
	129 Move [X19+424], X31
	130 Move [X19+432], X31
	131 Move [X19+440], W31
	132 Move X21, 0x24FE000
	133 Move W8, [X21+3865]
	134 Compare W8, 0
	135 JumpIfNotEqual {141}
	136 Move X0, 0x2221000
	137 Move X0, [X0+1800]
	138 Call 0x1C17CF4
	139 Move W8, 1
	140 Move [X21+3865], W8
	141 Move W21, 1
	142 Move [X19+360], X31
	143 Move [X19+368], W21
	144 Move X8, 0x2221000
	145 Move X8, [X8+1800]
	146 Move X0, [X8]
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1C17DFC
	151 Move X0, X31
	152 Call Stopwatch.GetTimestamp
	153 Move [X19+352], X0
	154 Add X8, X19, 492
	155 Add X9, X19, 500
	156 And X1, X20, 0
	157 Move X0, X19
	158 Move [X19+448], X31
	159 Move [X19+456], W31
	160 Move [X9], X31
	161 Move [X8], X31
	162 Call ClientTimeProvider.UpdateSnapshot, X0, X1
	163 Move X0, X19
	164 Move V0, V10
	165 Move V1, V9
	166 Move V2, V8
	167 Call ClientTimeProvider.UpdateServerStats, X0, V0, V1, V2
	168 Move X0, X19
	169 Call ClientTimeProvider.Snap, X0
	170 Move [X19+488], W21
	171 Move X20, [X31+48]
	172 Move X19, [X31+56]
	173 Move X22, [X31+32]
	174 Move X21, [X31+40]
	175 Move X30, [X31+24]
	176 Move D9, [X31+8]
	177 Move D8, [X31+16]
	178 Move V10, [X31+64]
	179 Return 
	180 Call 0x1C17F20

Method: System.Void Snap()

Disassembly:
	0x01EDC020 STR D0, [X19 + 0xD0]
	0x01EDC024 LDP X20, X19, [X31 + 0x20]
	0x01EDC028 LDP D9, D8, [X31 + 0x8]
	0x01EDC02C LDR V10, [X31], #0x30
	0x01EDC030 RET
	0x01EDC034 BL 0x1C16F20
	0x01EDC038 STR D8, [X31 - 0x30]!
	0x01EDC03C STR X30, [X31 + 0x8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call ClientTimeProvider.ResetInputTime, X0
	005 Move X0, X19
	006 Call ClientTimeProvider.ResetSimulationTime, X0
	007 Move X0, X19
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call ClientTimeProvider.ResetInterpolationTime, X0
	011 Return 

Method: System.Void ResetInputTime()

Disassembly:
	0x01EDC040 STP X22, X21, [X31 + 0x10]
	0x01EDC044 STP X20, X19, [X31 + 0x20]
	0x01EDC048 ADRP X20, 0x24FC000
	0x01EDC04C LDRB W8, [X20 + 0xF18]
	0x01EDC050 MOV V8.16B, V0.16B
	0x01EDC054 MOV X19, X0
	0x01EDC058 CBNZ W8, 0x1EDC070
	0x01EDC05C ADRP X0, 0x221F000
	0x01EDC060 LDR X0, [X0 + 0x708]
	0x01EDC064 BL 0x1C16CF4
	0x01EDC068 MOVZ W8, 0x1
	0x01EDC06C STRB W8, [X20 + 0xF18]
	0x01EDC070 LDRB W8, [X19 + 0x170]
	0x01EDC074 ADRP X20, 0x221F000
	0x01EDC078 LDR X21, [X19 + 0x168]
	0x01EDC07C LDR X20, [X20 + 0x708]
	0x01EDC080 CMP W8, 0x1
	0x01EDC084 B.NE 0x1EDC0CC
	0x01EDC088 ADRP X22, 0x24FC000
	0x01EDC08C LDRB W8, [X22 + 0xF17]
	0x01EDC090 CBNZ W8, 0x1EDC0A8
	0x01EDC094 ADRP X0, 0x221F000
	0x01EDC098 LDR X0, [X0 + 0x708]
	0x01EDC09C BL 0x1C16CF4
	0x01EDC0A0 MOVZ W8, 0x1
	0x01EDC0A4 STRB W8, [X22 + 0xF17]
	0x01EDC0A8 LDR X0, [X20]
	0x01EDC0AC LDR W8, [X0 + 0xE0]
	0x01EDC0B0 CBNZ W8, 0x1EDC0B8
	0x01EDC0B4 BL 0x1C16DFC
	0x01EDC0B8 MOV X0, X31
	0x01EDC0BC BL 0x364BF5C
	0x01EDC0C0 LDR X8, [X19 + 0x160]
	0x01EDC0C4 ADD X9, X0, X21
	0x01EDC0C8 SUB X21, X9, X8
	0x01EDC0CC LDR X0, [X20]
	0x01EDC0D0 LDR W8, [X0 + 0xE0]
	0x01EDC0D4 CBNZ W8, 0x1EDC0E0
	0x01EDC0D8 BL 0x1C16DFC
	0x01EDC0DC LDR X0, [X20]
	0x01EDC0E0 LDR X8, [X0 + 0xB8]
	0x01EDC0E4 LDR V1, [X19 + 0x50]
	0x01EDC0E8 SCVTF D2, X21
	0x01EDC0EC LDR V0, [X8]
	0x01EDC0F0 SCVTF D0, D0
	0x01EDC0F4 FDIV D0, D2, D0
	0x01EDC0F8 FCMP D0, D1
	0x01EDC0FC B.MI 0x1EDC18C
	0x01EDC100 LDR X0, [X19 + 0x108]
	0x01EDC104 CBZ X0, 0x1EDC1A0
	0x01EDC108 MOV X1, X31
	0x01EDC10C BL 0x1E920B0
	0x01EDC110 LDR X8, [X19 + 0x108]
	0x01EDC114 TBZ X0, 0x0, 0x1EDC130
	0x01EDC118 CBZ X8, 0x1EDC1A0
	0x01EDC11C LDR V0, [X19 + 0x50]
	0x01EDC120 MOV X0, X8
	0x01EDC124 MOV X1, X31
	0x01EDC128 BL 0x1E92714
	0x01EDC12C B 0x1EDC144
	0x01EDC130 CBZ X8, 0x1EDC1A0
	0x01EDC134 MOV X0, X8
	0x01EDC138 MOV V0.16B, V8.16B
	0x01EDC13C MOV X1, X31
	0x01EDC140 BL 0x1E925E4
	0x01EDC144 ADRP X21, 0x24FC000
	0x01EDC148 LDRB W8, [X21 + 0xF19]
	0x01EDC14C CBNZ W8, 0x1EDC164
	0x01EDC150 ADRP X0, 0x221F000
	0x01EDC154 LDR X0, [X0 + 0x708]
	0x01EDC158 BL 0x1C16CF4
	0x01EDC15C MOVZ W8, 0x1
	0x01EDC160 STRB W8, [X21 + 0xF19]
	0x01EDC164 MOVZ W8, 0x1
	0x01EDC168 STR X31, [X19 + 0x168]
	0x01EDC16C STRB W8, [X19 + 0x170]
	0x01EDC170 LDR X0, [X20]
	0x01EDC174 LDR W8, [X0 + 0xE0]
	0x01EDC178 CBNZ W8, 0x1EDC180
	0x01EDC17C BL 0x1C16DFC
	0x01EDC180 MOV X0, X31
	0x01EDC184 BL 0x364BF5C
	0x01EDC188 STR X0, [X19 + 0x160]
	0x01EDC18C LDP X20, X19, [X31 + 0x20]
	0x01EDC190 LDP X22, X21, [X31 + 0x10]
	0x01EDC194 LDR X30, [X31 + 0x8]
	0x01EDC198 LDR V8, [X31], #0x30
	0x01EDC19C RET
	0x01EDC1A0 BL 0x1C16F20
	0x01EDC1A4 SUB X31, X31, 0x40
	0x01EDC1A8 STP D9, D8, [X31 + 0x10]
	0x01EDC1AC STP X30, X21, [X31 + 0x20]
	0x01EDC1B0 STP X20, X19, [X31 + 0x30]
	0x01EDC1B4 ADRP X20, 0x24FD000
	0x01EDC1B8 ADRP X21, 0x2217000
	0x01EDC1BC LDRB W8, [X20 + 0x558]
	0x01EDC1C0 LDR X21, [X21 + 0x5A8]
	0x01EDC1C4 MOV W19, W1
	0x01EDC1C8 MOV V8.16B, V1.16B
	0x01EDC1CC MOV V9.16B, V0.16B
	0x01EDC1D0 TBNZ X8, 0x0, 0x1EDC1E8
	0x01EDC1D4 ADRP X0, 0x2217000
	0x01EDC1D8 LDR X0, [X0 + 0x5A8]
	0x01EDC1DC BL 0x1C16CF4
	0x01EDC1E0 MOVZ W8, 0x1
	0x01EDC1E4 STRB W8, [X20 + 0x558]
	0x01EDC1E8 LDR X0, [X21]
	0x01EDC1EC LDR W8, [X0 + 0xE0]
	0x01EDC1F0 CBNZ W8, 0x1EDC1F8
	0x01EDC1F4 BL 0x1C16DFC
	0x01EDC1F8 FDIV D9, D9, D8
	0x01EDC1FC ADD X0, X31, 0x8
	0x01EDC200 MOV V0.16B, V9.16B
	0x01EDC204 BL 0x3EB1C00
	0x01EDC208 FCMP D9, 0x0
	0x01EDC20C B.GE 0x1EDC228
	0x01EDC210 FMOV D1, -0.5
	0x01EDC214 FCMP D0, D1
	0x01EDC218 B.NE 0x1EDC250
	0x01EDC21C LDR V0, [X31 + 0x8]
	0x01EDC220 FMOV D1, -1
	0x01EDC224 B 0x1EDC23C
	0x01EDC228 FMOV D1, 0.5
	0x01EDC22C FCMP D0, D1
	0x01EDC230 B.NE 0x1EDC25C
	0x01EDC234 LDR V0, [X31 + 0x8]
	0x01EDC238 FMOV D1, 1
	0x01EDC23C FCVTZS X8, D0
	0x01EDC240 FADD D1, D0, D1
	0x01EDC244 ANDS X31, X8, 0x1
	0x01EDC248 FCSEL D0, D0, D1, EQ
	0x01EDC24C B 0x1EDC264
	0x01EDC250 FADD D0, D9, D1
	0x01EDC254 FRINTP D0, D0
	0x01EDC258 B 0x1EDC264
	0x01EDC25C FADD D0, D9, D1
	0x01EDC260 FRINTM D0, D0
	0x01EDC264 FMOV D1, 1
	0x01EDC268 FCMP D0, D1
	0x01EDC26C CSET W8, MI
	0x01EDC270 ANDS W31, W8, W19, 0x0
	0x01EDC274 FCSEL D0, D1, D0, NE
	0x01EDC278 FMUL D0, D0, D8
	0x01EDC27C LDP X20, X19, [X31 + 0x30]
	0x01EDC280 LDP X30, X21, [X31 + 0x20]
	0x01EDC284 LDP D9, D8, [X31 + 0x10]
	0x01EDC288 ADD X31, X31, 0x40
	0x01EDC28C RET
	0x01EDC290 STP D15, D14, [X31 - 0x80]!
	0x01EDC294 STP D13, D12, [X31 + 0x10]
	0x01EDC298 STP D11, D10, [X31 + 0x20]
	0x01EDC29C STP D9, D8, [X31 + 0x30]
	0x01EDC2A0 STP X30, X25, [X31 + 0x40]
	0x01EDC2A4 STP X24, X23, [X31 + 0x50]
	0x01EDC2A8 STP X22, X21, [X31 + 0x60]
	0x01EDC2AC STP X20, X19, [X31 + 0x70]
	0x01EDC2B0 ADRP X20, 0x24FD000
	0x01EDC2B4 LDRB W8, [X20 + 0x55B]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0x24FE000
	007 Move W8, [X20+1363]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0x2225000
	014 Move X0, [X0+464]
	015 Call 0x1C17CF4
	016 Move X0, 0x2225000
	017 Move X0, [X0+472]
	018 Call 0x1C17CF4
	019 Move X0, 0x2225000
	020 Move X0, [X0+480]
	021 Call 0x1C17CF4
	022 Move X0, 0x2225000
	023 Move X0, [X0+456]
	024 Call 0x1C17CF4
	025 Move X0, 0x2225000
	026 Move X0, [X0+488]
	027 Call 0x1C17CF4
	028 Move X0, 0x2225000
	029 Move X0, [X0+496]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+1363], W8
	033 Move [X31+8], X31
	034 Move [X31+16], X31
	035 Move [X31+24], X31
	036 Move X0, [X19+512]
	037 Compare X0, 0
	038 JumpIfEqual {142}
	039 Move X8, 0x2225000
	040 Move X8, [X8+496]
	041 Move X1, [X8]
	042 Call RingBuffer`1<TimeAdjustment>.Clear, X0
	043 Move W8, [X19+304]
	044 Move X20, [X19+128]
	045 Move [X19+528], X31
	046 Move [X19+520], W8
	047 Compare X20, 0
	048 JumpIfEqual {142}
	049 Move X10, 0x2225000
	050 Move X8, [X20]
	051 Move X10, [X10+456]
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Move X1, [X10]
	054 Compare X9, 0
	055 JumpIfEqual {62}
	056 Move X10, [X8+176]
	057 Add X10, X10, 8
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Subtract X9, X9, 1
	061 Add X10, X10, 16
	062 Move W2, 2
	063 Move X0, X20
	064 Call 0x1C5D788
	065 Move W9, [X10]
	066 Add W9, W9, 2
	067 Add X8, X8, W9
	068 Add X0, X8, 312
	069 Move X8, [X0]
	070 Move X1, [X0+8]
	071 Move X0, X20
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move X0, X19
	074 Move [X19+152], X31
	075 Call ClientTimeProvider.GetServerTime, X0
	076 Move V1, [X19+144]
	077 Move W8, [X19+448]
	078 Move W20, 1
	079 Move [X19+460], W20
	080 Add D0, D0, D1
	081 Add W8, W8, 1
	082 Move [X19+136], D1
	083 Move [X19+224], D0
	084 Move [X19+448], W8
	085 Move X21, 0x24FD000
	086 Move W8, [X21+3865]
	087 Compare W8, 0
	088 JumpIfNotEqual {93}
	089 Move X0, 0x2220000
	090 Move X0, [X0+1800]
	091 Call 0x1C17CF4
	092 Move [X21+3865], W20
	093 Move [X19+384], X31
	094 Move [X19+392], W20
	095 Move X8, 0x2220000
	096 Move X8, [X8+1800]
	097 Move X0, [X8]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move X0, X31
	103 Call Stopwatch.GetTimestamp
	104 Move X9, [X19+464]
	105 Move [X19+376], X0
	106 Compare X9, 0
	107 JumpIfEqual {142}
	108 Move X8, 0x2225000
	109 Move X8, [X8+488]
	110 Move X20, 0x2225000
	111 Move X19, 0x2225000
	112 Move X0, X9
	113 Move X1, [X8]
	114 Move X20, [X20+472]
	115 Move X19, [X19+464]
	116 Add X8, X31, 8
	117 Call List`1<Object>.GetEnumerator, X0
	118 Move X1, [X20]
	119 Add X0, X31, 8
	120 Call Enumerator<Object>.MoveNext, X0
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {132}
	125 Move X8, [X31+24]
	126 Compare X8, 0
	127 JumpIfEqual {141}
	128 Move X0, [X8+64]
	129 Move X1, [X8+40]
	130 Move X9, [X8+24]
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move X1, [X19]
	133 Add X0, X31, 8
	134 Call Enumerator<Object>.Dispose, X0
	135 Move X20, [X31+48]
	136 Move X19, [X31+56]
	137 Move X30, [X31+32]
	138 Move X21, [X31+40]
	139 Add X31, X31, 64
	140 Return 
	141 Call 0x1C17F20
	142 Call 0x1C17F20
	143 Move X19, X0
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X0, X19
	146 Call 0x3EB2AD0
	147 Move X20, [X0]
	148 Call 0x3EB2AE0
	149 Move X8, 0x2225000
	150 Move X8, [X8+464]
	151 Add X0, X31, 8
	152 Move X1, [X8]
	153 Call Enumerator<Object>.Dispose, X0
	154 Compare X20, 0
	155 JumpIfEqual {135}
	156 Move X0, X20
	157 Call 0x1C17F18
	158 Move X20, X31
	159 Move X19, X0
	160 Move X8, 0x2225000
	161 Move X8, [X8+464]
	162 Move X1, [X8]
	163 Add X0, X31, 8
	164 Call Enumerator<Object>.Dispose, X0
	165 Compare X20, 0
	166 JumpIfNotEqual {169}
	167 Move X0, X19
	168 Call 0x1D2D690
	169 Move X0, X20
	170 Call 0x1C17F18
	171 Call 0x1991590

Method: System.Void ResetSimulationTime()

Disassembly:
	0x01EDC2B8 MOV V8.16B, V0.16B
	0x01EDC2BC MOV X19, X0
	0x01EDC2C0 TBNZ X8, 0x0, 0x1EDC2E4
	0x01EDC2C4 ADRP X0, 0x2224000
	0x01EDC2C8 LDR X0, [X0 + 0x1C8]
	0x01EDC2CC BL 0x1C16CF4
	0x01EDC2D0 ADRP X0, 0x2217000
	0x01EDC2D4 LDR X0, [X0 + 0x5A8]
	0x01EDC2D8 BL 0x1C16CF4
	0x01EDC2DC MOVZ W8, 0x1
	0x01EDC2E0 STRB W8, [X20 + 0x55B]
	0x01EDC2E4 LDRB W8, [X19 + 0x1E8]
	0x01EDC2E8 CBZ W8, 0x1EDC398
	0x01EDC2EC LDR V0, [X19 + 0x1EC]
	0x01EDC2F0 LDR V1, [X19 + 0x210]
	0x01EDC2F4 LDP D2, D3, [X19 + 0xE0]
	0x01EDC2F8 MOV X0, X19
	0x01EDC2FC FCVT S0, S0
	0x01EDC300 FADD D9, D1, D0
	0x01EDC304 FSUB D12, D2, D3
	0x01EDC308 BL 0x1EDB83C
	0x01EDC30C LDR V1, [X19 + 0xF0]
	0x01EDC310 MOV X0, X19
	0x01EDC314 FSUB D0, D0, D1
	0x01EDC318 BL 0x1EDC038
	0x01EDC31C LDR V1, [X19 + 0x88]
	0x01EDC320 LDR X8, [X19 + 0x108]
	0x01EDC324 FMOV D0, 0.5
	0x01EDC328 STR D12, [X19 + 0xA8]
	0x01EDC32C FSUB D2, D9, D1
	0x01EDC330 FMUL D2, D2, D0
	0x01EDC334 FADD D1, D1, D2
	0x01EDC338 STR D1, [X19 + 0x88]
	0x01EDC33C CBZ X8, 0x1EDCA58
	0x01EDC340 LDR V2, [X19 + 0x90]
	0x01EDC344 LDR V3, [X8 + 0x10]
	0x01EDC348 LDP D4, D9, [X19 + 0xC8]
	0x01EDC34C LDRB W8, [X19 + 0x188]
	0x01EDC350 FSUB D14, D2, D1
	0x01EDC354 STRH W31, [X19 + 0x1CC]
	0x01EDC358 FSUB D1, D3, D4
	0x01EDC35C FMUL D0, D1, D0
	0x01EDC360 FADD D10, D4, D0
	0x01EDC364 STRB W31, [X19 + 0x1CE]
	0x01EDC368 STR D10, [X19 + 0xC8]
	0x01EDC36C ADRP X20, 0x221F000
	0x01EDC370 LDR V13, [X19 + 0xB0]
	0x01EDC374 LDR X20, [X20 + 0x708]
	0x01EDC378 ADRP X21, 0x24FC000
	0x01EDC37C CMP W8, 0x1
	0x01EDC380 B.NE 0x1EDC478
	0x01EDC384 LDRB W8, [X21 + 0xF18]
	0x01EDC388 ADD X22, X19, 0x178
	0x01EDC38C CBZ W8, 0x1EDC3BC
	0x01EDC390 LDR X23, [X19 + 0x180]
	0x01EDC394 B 0x1EDC3E0
	0x01EDC398 LDP X20, X19, [X31 + 0x70]
	0x01EDC39C LDP X22, X21, [X31 + 0x60]
	0x01EDC3A0 LDP X24, X23, [X31 + 0x50]
	0x01EDC3A4 LDP X30, X25, [X31 + 0x40]
	0x01EDC3A8 LDP D9, D8, [X31 + 0x30]
	0x01EDC3AC LDP D11, D10, [X31 + 0x20]
	0x01EDC3B0 LDP D13, D12, [X31 + 0x10]
	0x01EDC3B4 LDP D15, D14, [X31], #0x80
	0x01EDC3B8 RET
	0x01EDC3BC ADRP X0, 0x221F000
	0x01EDC3C0 LDR X0, [X0 + 0x708]
	0x01EDC3C4 BL 0x1C16CF4
	0x01EDC3C8 MOVZ W8, 0x1
	0x01EDC3CC STRB W8, [X21 + 0xF18]
	0x01EDC3D0 LDRB W8, [X19 + 0x188]
	0x01EDC3D4 LDR X23, [X19 + 0x180]
	0x01EDC3D8 CMP W8, 0x1
	0x01EDC3DC B.NE 0x1EDC424
	0x01EDC3E0 ADRP X24, 0x24FC000
	0x01EDC3E4 LDRB W8, [X24 + 0xF17]
	0x01EDC3E8 CBNZ W8, 0x1EDC400
	0x01EDC3EC ADRP X0, 0x221F000
	0x01EDC3F0 LDR X0, [X0 + 0x708]
	0x01EDC3F4 BL 0x1C16CF4
	0x01EDC3F8 MOVZ W8, 0x1
	0x01EDC3FC STRB W8, [X24 + 0xF17]
	0x01EDC400 LDR X0, [X20]
	0x01EDC404 LDR W8, [X0 + 0xE0]
	0x01EDC408 CBNZ W8, 0x1EDC410
	0x01EDC40C BL 0x1C16DFC
	0x01EDC410 MOV X0, X31
	0x01EDC414 BL 0x364BF5C
	0x01EDC418 LDR X8, [X22]
	0x01EDC41C ADD X9, X0, X23
	0x01EDC420 SUB X23, X9, X8
	0x01EDC424 LDR X0, [X20]
	0x01EDC428 LDR W8, [X0 + 0xE0]
	0x01EDC42C CBNZ W8, 0x1EDC438
	0x01EDC430 BL 0x1C16DFC
	0x01EDC434 LDR X0, [X20]
	0x01EDC438 LDR X8, [X0 + 0xB8]
	0x01EDC43C SCVTF D1, X23
	0x01EDC440 LDR V0, [X8]
	0x01EDC444 SCVTF D0, D0
	0x01EDC448 FDIV D0, D1, D0
	0x01EDC44C FMOV D1, 1
	0x01EDC450 FCMP D0, D1
	0x01EDC454 B.LE 0x1EDC46C
	0x01EDC458 STP X31, X31, [X22]
	0x01EDC45C STRB W31, [X22 + 0x10]
	0x01EDC460 STP X31, X31, [X19 + 0x190]
	0x01EDC464 STRB W31, [X19 + 0x1A0]
	0x01EDC468 B 0x1EDC478
	0x01EDC46C LDRB W8, [X19 + 0x188]
	0x01EDC470 CMP W8, 0x1
	0x01EDC474 B.EQ 0x1EDC490
	0x01EDC478 FMOV D0, -0.5
	0x01EDC47C FCMP D14, D0
	0x01EDC480 B.MI 0x1EDC4B0
	0x01EDC484 FMOV D0, 1
	0x01EDC488 FCMP D14, D0
	0x01EDC48C B.GT 0x1EDC4B0
	0x01EDC490 ADRP X8, 0xFFFFFFFFFEC11000
	0x01EDC494 LDR V0, [X8 + 0xF48]
	0x01EDC498 FMOV D11, X31
	0x01EDC49C FCMP D14, D0
	0x01EDC4A0 B.LE 0x1EDC4C4
	0x01EDC4A4 FMOV D0, 0.125
	0x01EDC4A8 FMUL D11, D14, D0
	0x01EDC4AC B 0x1EDC4C4
	0x01EDC4B0 MOV X0, X19
	0x01EDC4B4 BL 0x1EDB040
	0x01EDC4B8 MOV X0, X19
	0x01EDC4BC BL 0x1EDB2B8
	0x01EDC4C0 FMOV D11, X31
	0x01EDC4C4 LDRB W8, [X19 + 0x1A0]
	0x01EDC4C8 FSUB D13, D13, D12
	0x01EDC4CC ADRP X22, 0xFFFFFFFFFEC12000
	0x01EDC4D0 CMP W8, 0x1
	0x01EDC4D4 B.NE 0x1EDC5A0
	0x01EDC4D8 LDRB W8, [X21 + 0xF18]
	0x01EDC4DC ADD X23, X19, 0x190
	0x01EDC4E0 CBZ W8, 0x1EDC4EC
	0x01EDC4E4 LDR X24, [X19 + 0x198]
	0x01EDC4E8 B 0x1EDC510
	0x01EDC4EC ADRP X0, 0x221F000
	0x01EDC4F0 LDR X0, [X0 + 0x708]
	0x01EDC4F4 BL 0x1C16CF4
	0x01EDC4F8 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0x24FE000
	007 Move W8, [X20+1364]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x2225000
	014 Move X0, [X0+464]
	015 Call 0x1C17CF4
	016 Move X0, 0x2225000
	017 Move X0, [X0+472]
	018 Call 0x1C17CF4
	019 Move X0, 0x2225000
	020 Move X0, [X0+480]
	021 Call 0x1C17CF4
	022 Move X0, 0x2225000
	023 Move X0, [X0+456]
	024 Call 0x1C17CF4
	025 Move X0, 0x2225000
	026 Move X0, [X0+488]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+1364], W8
	030 Move [X31+8], X31
	031 Move [X31+16], X31
	032 Move [X31+24], X31
	033 Move X20, [X19+160]
	034 Compare X20, 0
	035 JumpIfEqual {128}
	036 Move X10, 0x2225000
	037 Move X8, [X20]
	038 Move X10, [X10+456]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Move X1, [X10]
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move W2, 2
	050 Move X0, X20
	051 Call 0x1C5D788
	052 Move W9, [X10]
	053 Add W9, W9, 2
	054 Add X8, X8, W9
	055 Add X0, X8, 312
	056 Move X8, [X0]
	057 Move X1, [X0+8]
	058 Move X0, X20
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move V0, [X19+224]
	061 Move V1, [X19+176]
	062 Move W8, [X19+452]
	063 Move W20, 1
	064 Move [X19+184], X31
	065 Subtract D0, D0, D1
	066 Add W8, W8, 1
	067 Move [X19+461], W20
	068 Move [X19+168], D1
	069 Move [X19+232], D0
	070 Move [X19+452], W8
	071 Move X21, 0x24FD000
	072 Move W8, [X21+3865]
	073 Compare W8, 0
	074 JumpIfNotEqual {79}
	075 Move X0, 0x2220000
	076 Move X0, [X0+1800]
	077 Call 0x1C17CF4
	078 Move [X21+3865], W20
	079 Move [X19+408], X31
	080 Move [X19+416], W20
	081 Move X8, 0x2220000
	082 Move X8, [X8+1800]
	083 Move X0, [X8]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move X0, X31
	089 Call Stopwatch.GetTimestamp
	090 Move X9, [X19+472]
	091 Move [X19+400], X0
	092 Compare X9, 0
	093 JumpIfEqual {128}
	094 Move X8, 0x2225000
	095 Move X8, [X8+488]
	096 Move X20, 0x2225000
	097 Move X19, 0x2225000
	098 Move X0, X9
	099 Move X1, [X8]
	100 Move X20, [X20+472]
	101 Move X19, [X19+464]
	102 Add X8, X31, 8
	103 Call List`1<Object>.GetEnumerator, X0
	104 Move X1, [X20]
	105 Add X0, X31, 8
	106 Call Enumerator<Object>.MoveNext, X0
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {118}
	111 Move X8, [X31+24]
	112 Compare X8, 0
	113 JumpIfEqual {127}
	114 Move X0, [X8+64]
	115 Move X1, [X8+40]
	116 Move X9, [X8+24]
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move X1, [X19]
	119 Add X0, X31, 8
	120 Call Enumerator<Object>.Dispose, X0
	121 Move X20, [X31+48]
	122 Move X19, [X31+56]
	123 Move X30, [X31+32]
	124 Move X21, [X31+40]
	125 Add X31, X31, 64
	126 Return 
	127 Call 0x1C17F20
	128 Call 0x1C17F20
	129 Move X19, X0
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X0, X19
	132 Call 0x3EB2AD0
	133 Move X20, [X0]
	134 Call 0x3EB2AE0
	135 Move X8, 0x2225000
	136 Move X8, [X8+464]
	137 Add X0, X31, 8
	138 Move X1, [X8]
	139 Call Enumerator<Object>.Dispose, X0
	140 Compare X20, 0
	141 JumpIfEqual {121}
	142 Move X0, X20
	143 Call 0x1C17F18
	144 Move X20, X31
	145 Move X19, X0
	146 Move X8, 0x2225000
	147 Move X8, [X8+464]
	148 Move X1, [X8]
	149 Add X0, X31, 8
	150 Call Enumerator<Object>.Dispose, X0
	151 Compare X20, 0
	152 JumpIfNotEqual {155}
	153 Move X0, X19
	154 Call 0x1D2D690
	155 Move X0, X20
	156 Call 0x1C17F18
	157 Call 0x1991590

Method: System.Void ResetInterpolationTime()

Disassembly:
	0x01EDC4FC STRB W8, [X21 + 0xF18]
	0x01EDC500 LDRB W8, [X19 + 0x1A0]
	0x01EDC504 LDR X24, [X19 + 0x198]
	0x01EDC508 CMP W8, 0x1
	0x01EDC50C B.NE 0x1EDC554
	0x01EDC510 ADRP X25, 0x24FC000
	0x01EDC514 LDRB W8, [X25 + 0xF17]
	0x01EDC518 CBNZ W8, 0x1EDC530
	0x01EDC51C ADRP X0, 0x221F000
	0x01EDC520 LDR X0, [X0 + 0x708]
	0x01EDC524 BL 0x1C16CF4
	0x01EDC528 MOVZ W8, 0x1
	0x01EDC52C STRB W8, [X25 + 0xF17]
	0x01EDC530 LDR X0, [X20]
	0x01EDC534 LDR W8, [X0 + 0xE0]
	0x01EDC538 CBNZ W8, 0x1EDC540
	0x01EDC53C BL 0x1C16DFC
	0x01EDC540 MOV X0, X31
	0x01EDC544 BL 0x364BF5C
	0x01EDC548 LDR X8, [X23]
	0x01EDC54C ADD X9, X0, X24
	0x01EDC550 SUB X24, X9, X8
	0x01EDC554 LDR X0, [X20]
	0x01EDC558 LDR W8, [X0 + 0xE0]
	0x01EDC55C CBNZ W8, 0x1EDC568
	0x01EDC560 BL 0x1C16DFC
	0x01EDC564 LDR X0, [X20]
	0x01EDC568 LDR X8, [X0 + 0xB8]
	0x01EDC56C SCVTF D1, X24
	0x01EDC570 LDR V0, [X8]
	0x01EDC574 SCVTF D0, D0
	0x01EDC578 FDIV D0, D1, D0
	0x01EDC57C FMOV D1, 1
	0x01EDC580 FCMP D0, D1
	0x01EDC584 B.LE 0x1EDC594
	0x01EDC588 STP X31, X31, [X23]
	0x01EDC58C STRB W31, [X23 + 0x10]
	0x01EDC590 B 0x1EDC5A0
	0x01EDC594 LDRB W8, [X19 + 0x1A0]
	0x01EDC598 CMP W8, 0x1
	0x01EDC59C B.EQ 0x1EDC5B8
	0x01EDC5A0 FMOV D0, 0.5
	0x01EDC5A4 FCMP D13, D0
	0x01EDC5A8 B.GT 0x1EDC5D4
	0x01EDC5AC FMOV D0, -1
	0x01EDC5B0 FCMP D13, D0
	0x01EDC5B4 B.MI 0x1EDC5D4
	0x01EDC5B8 LDR V0, [X22 + 0x148]
	0x01EDC5BC FMOV D12, X31
	0x01EDC5C0 FCMP D13, D0
	0x01EDC5C4 B.PL 0x1EDC5E0
	0x01EDC5C8 FMOV D0, -0.125
	0x01EDC5CC FMUL D12, D13, D0
	0x01EDC5D0 B 0x1EDC5E0
	0x01EDC5D4 MOV X0, X19
	0x01EDC5D8 BL 0x1EDB2B8
	0x01EDC5DC FMOV D12, X31
	0x01EDC5E0 LDRB W8, [X19 + 0x1B8]
	0x01EDC5E4 FSUB D9, D9, D10
	0x01EDC5E8 CMP W8, 0x1
	0x01EDC5EC B.NE 0x1EDC6B8
	0x01EDC5F0 LDRB W8, [X21 + 0xF18]
	0x01EDC5F4 ADD X23, X19, 0x1A8
	0x01EDC5F8 CBZ W8, 0x1EDC604
	0x01EDC5FC LDR X21, [X19 + 0x1B0]
	0x01EDC600 B 0x1EDC628
	0x01EDC604 ADRP X0, 0x221F000
	0x01EDC608 LDR X0, [X0 + 0x708]
	0x01EDC60C BL 0x1C16CF4
	0x01EDC610 MOVZ W8, 0x1
	0x01EDC614 STRB W8, [X21 + 0xF18]
	0x01EDC618 LDRB W8, [X19 + 0x1B8]
	0x01EDC61C LDR X21, [X19 + 0x1B0]
	0x01EDC620 CMP W8, 0x1
	0x01EDC624 B.NE 0x1EDC66C
	0x01EDC628 ADRP X24, 0x24FC000
	0x01EDC62C LDRB W8, [X24 + 0xF17]
	0x01EDC630 CBNZ W8, 0x1EDC648
	0x01EDC634 ADRP X0, 0x221F000
	0x01EDC638 LDR X0, [X0 + 0x708]
	0x01EDC63C BL 0x1C16CF4
	0x01EDC640 MOVZ W8, 0x1
	0x01EDC644 STRB W8, [X24 + 0xF17]
	0x01EDC648 LDR X0, [X20]
	0x01EDC64C LDR W8, [X0 + 0xE0]
	0x01EDC650 CBNZ W8, 0x1EDC658
	0x01EDC654 BL 0x1C16DFC
	0x01EDC658 MOV X0, X31
	0x01EDC65C BL 0x364BF5C
	0x01EDC660 LDR X8, [X23]
	0x01EDC664 ADD X9, X0, X21
	0x01EDC668 SUB X21, X9, X8
	0x01EDC66C LDR X0, [X20]
	0x01EDC670 LDR W8, [X0 + 0xE0]
	0x01EDC674 CBNZ W8, 0x1EDC680
	0x01EDC678 BL 0x1C16DFC
	0x01EDC67C LDR X0, [X20]
	0x01EDC680 LDR X8, [X0 + 0xB8]
	0x01EDC684 SCVTF D1, X21
	0x01EDC688 LDR V0, [X8]
	0x01EDC68C SCVTF D0, D0
	0x01EDC690 FDIV D0, D1, D0
	0x01EDC694 FMOV D1, 1
	0x01EDC698 FCMP D0, D1
	0x01EDC69C B.LE 0x1EDC6AC
	0x01EDC6A0 STP X31, X31, [X23]
	0x01EDC6A4 STRB W31, [X23 + 0x10]
	0x01EDC6A8 B 0x1EDC6B8
	0x01EDC6AC LDRB W8, [X19 + 0x1B8]
	0x01EDC6B0 CMP W8, 0x1
	0x01EDC6B4 B.EQ 0x1EDC6D0
	0x01EDC6B8 FMOV D0, 0.5
	0x01EDC6BC FCMP D9, D0
	0x01EDC6C0 B.GT 0x1EDC6EC
	0x01EDC6C4 FMOV D0, -1
	0x01EDC6C8 FCMP D9, D0
	0x01EDC6CC B.MI 0x1EDC6EC
	0x01EDC6D0 LDR V0, [X22 + 0x148]
	0x01EDC6D4 FMOV D13, X31
	0x01EDC6D8 FCMP D9, D0
	0x01EDC6DC B.PL 0x1EDC6F8
	0x01EDC6E0 FMOV D0, -0.125
	0x01EDC6E4 FMUL D13, D9, D0
	0x01EDC6E8 B 0x1EDC6F8
	0x01EDC6EC MOV X0, X19
	0x01EDC6F0 BL 0x1EDB4FC
	0x01EDC6F4 FMOV D13, X31
	0x01EDC6F8 LDR X20, [X19 + 0x80]
	0x01EDC6FC CBZ X20, 0x1EDCA58
	0x01EDC700 ADRP X21, 0x2224000
	0x01EDC704 LDR X8, [X20]
	0x01EDC708 LDR X21, [X21 + 0x1C8]
	0x01EDC70C LDP D10, D9, [X19 + 0x88]
	0x01EDC710 LDRH W9, [X8 + 0x12E]
	0x01EDC714 LDR X1, [X21]
	0x01EDC718 CBZ X9, 0x1EDC73C
	0x01EDC71C LDR X10, [X8 + 0xB0]
	0x01EDC720 ADD X10, X10, 0x8
	0x01EDC724 LDUR X11, [X10 - 0x8]
	0x01EDC728 CMP X11, X1
	0x01EDC72C B.EQ 0x1EDC74C
	0x01EDC730 SUBS X9, X9, 0x1
	0x01EDC734 ADD X10, X10, 0x10
	0x01EDC738 B.NE 0x1EDC724
	0x01EDC73C MOVZ W2, 0x1
	0x01EDC740 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0x24FE000
	007 Move W8, [X20+1365]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x2225000
	014 Move X0, [X0+464]
	015 Call 0x1C17CF4
	016 Move X0, 0x2225000
	017 Move X0, [X0+472]
	018 Call 0x1C17CF4
	019 Move X0, 0x2225000
	020 Move X0, [X0+480]
	021 Call 0x1C17CF4
	022 Move X0, 0x2225000
	023 Move X0, [X0+456]
	024 Call 0x1C17CF4
	025 Move X0, 0x2225000
	026 Move X0, [X0+488]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+1365], W8
	030 Move [X31+8], X31
	031 Move [X31+16], X31
	032 Move [X31+24], X31
	033 Move X20, [X19+192]
	034 Compare X20, 0
	035 JumpIfEqual {129}
	036 Move X10, 0x2225000
	037 Move X8, [X20]
	038 Move X10, [X10+456]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Move X1, [X10]
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move W2, 2
	050 Move X0, X20
	051 Call 0x1C5D788
	052 Move W9, [X10]
	053 Add W9, W9, 2
	054 Add X8, X8, W9
	055 Add X0, X8, 312
	056 Move X8, [X0]
	057 Move X1, [X0+8]
	058 Move X0, X20
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X0, X19
	061 Move [X19+216], X31
	062 Call ClientTimeProvider.GetSnapshotTime, X0
	063 Move V1, [X19+208]
	064 Move W8, [X19+456]
	065 Move W20, 1
	066 Move [X19+462], W20
	067 Subtract D0, D0, D1
	068 Add W8, W8, 1
	069 Move [X19+200], D1
	070 Move [X19+240], D0
	071 Move [X19+456], W8
	072 Move X21, 0x24FD000
	073 Move W8, [X21+3865]
	074 Compare W8, 0
	075 JumpIfNotEqual {80}
	076 Move X0, 0x2220000
	077 Move X0, [X0+1800]
	078 Call 0x1C17CF4
	079 Move [X21+3865], W20
	080 Move [X19+432], X31
	081 Move [X19+440], W20
	082 Move X8, 0x2220000
	083 Move X8, [X8+1800]
	084 Move X0, [X8]
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move X0, X31
	090 Call Stopwatch.GetTimestamp
	091 Move X9, [X19+480]
	092 Move [X19+424], X0
	093 Compare X9, 0
	094 JumpIfEqual {129}
	095 Move X8, 0x2225000
	096 Move X8, [X8+488]
	097 Move X20, 0x2225000
	098 Move X19, 0x2225000
	099 Move X0, X9
	100 Move X1, [X8]
	101 Move X20, [X20+472]
	102 Move X19, [X19+464]
	103 Add X8, X31, 8
	104 Call List`1<Object>.GetEnumerator, X0
	105 Move X1, [X20]
	106 Add X0, X31, 8
	107 Call Enumerator<Object>.MoveNext, X0
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {119}
	112 Move X8, [X31+24]
	113 Compare X8, 0
	114 JumpIfEqual {128}
	115 Move X0, [X8+64]
	116 Move X1, [X8+40]
	117 Move X9, [X8+24]
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move X1, [X19]
	120 Add X0, X31, 8
	121 Call Enumerator<Object>.Dispose, X0
	122 Move X20, [X31+48]
	123 Move X19, [X31+56]
	124 Move X30, [X31+32]
	125 Move X21, [X31+40]
	126 Add X31, X31, 64
	127 Return 
	128 Call 0x1C17F20
	129 Call 0x1C17F20
	130 Move X19, X0
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X0, X19
	133 Call 0x3EB2AD0
	134 Move X20, [X0]
	135 Call 0x3EB2AE0
	136 Move X8, 0x2225000
	137 Move X8, [X8+464]
	138 Add X0, X31, 8
	139 Move X1, [X8]
	140 Call Enumerator<Object>.Dispose, X0
	141 Compare X20, 0
	142 JumpIfEqual {122}
	143 Move X0, X20
	144 Call 0x1C17F18
	145 Move X20, X31
	146 Move X19, X0
	147 Move X8, 0x2225000
	148 Move X8, [X8+464]
	149 Move X1, [X8]
	150 Add X0, X31, 8
	151 Call Enumerator<Object>.Dispose, X0
	152 Compare X20, 0
	153 JumpIfNotEqual {156}
	154 Move X0, X19
	155 Call 0x1D2D690
	156 Move X0, X20
	157 Call 0x1C17F18
	158 Call 0x1991590

Method: System.Double GetInputOffset()

Disassembly:
	0x01EDC91C MOV V1.16B, V9.16B
	0x01EDC920 MOV V2.16B, V8.16B
	0x01EDC924 BLR X8
	0x01EDC928 LDR X20, [X19 + 0xC0]
	0x01EDC92C CBZ X20, 0x1EDCA58
	0x01EDC930 LDR X8, [X20]
	0x01EDC934 LDR X1, [X21]
	0x01EDC938 ADRP X21, 0x2217000

ISIL:
	001 Move [X31-16], D8
	002 Move [X31+8], X30
	003 Move V8, [X0+224]
	004 Call ClientTimeProvider.GetServerTime, X0
	005 Move X30, [X31+8]
	006 Subtract D0, D8, D0
	007 Move V8, [X31+16]
	008 Return V0

Method: System.Double GetInputOffsetAlt()

Disassembly:
	0x01EDC93C LDRH W9, [X8 + 0x12E]
	0x01EDC940 LDR X21, [X21 + 0x5A8]
	0x01EDC944 CBZ X9, 0x1EDC968
	0x01EDC948 LDR X10, [X8 + 0xB0]
	0x01EDC94C ADD X10, X10, 0x8

ISIL:
	001 Move V0, [X0+492]
	002 Move V1, [X0+528]
	003 NotImplemented "Instruction FCVT not yet implemented."
	004 Add D0, D1, D0
	005 Return V0

Method: System.Void AddInputOffsetAdjustment(System.Double amount)

Disassembly:
	0x01EDC950 LDUR X11, [X10 - 0x8]
	0x01EDC954 CMP X11, X1
	0x01EDC958 B.EQ 0x1EDC978
	0x01EDC95C SUBS X9, X9, 0x1
	0x01EDC960 ADD X10, X10, 0x10
	0x01EDC964 B.NE 0x1EDC950
	0x01EDC968 MOV X0, X20
	0x01EDC96C MOV W2, W31
	0x01EDC970 BL 0x1C5C788
	0x01EDC974 B 0x1EDC984
	0x01EDC978 LDRSW X9, [X10]
	0x01EDC97C ADD X8, X8, X9, 0x4, LSL
	0x01EDC980 ADD X0, X8, 0x138
	0x01EDC984 LDP X8, X1, [X0]
	0x01EDC988 MOV X0, X20
	0x01EDC98C BLR X8
	0x01EDC990 FNEG D1, D0
	0x01EDC994 STR D1, [X19 + 0xD8]
	0x01EDC998 LDR X0, [X21]
	0x01EDC99C LDR V1, [X19 + 0x158]
	0x01EDC9A0 LDR V2, [X19 + 0x98]
	0x01EDC9A4 LDR V3, [X19 + 0xB8]
	0x01EDC9A8 LDR W8, [X0 + 0xE0]
	0x01EDC9AC LDR V14, [X19 + 0xE0]
	0x01EDC9B0 FADD D15, D1, D2
	0x01EDC9B4 FADD D10, D15, D3
	0x01EDC9B8 FSUB D9, D1, D0
	0x01EDC9BC CBNZ W8, 0x1EDC9C4
	0x01EDC9C0 BL 0x1C16DFC
	0x01EDC9C4 FMUL D0, D15, D8
	0x01EDC9C8 FADD D1, D11, D0
	0x01EDC9CC FMOV D0, X31
	0x01EDC9D0 MOV X0, X31
	0x01EDC9D4 BL 0x337EDC0
	0x01EDC9D8 FADD D0, D14, D0
	0x01EDC9DC LDR V14, [X19 + 0xE8]
	0x01EDC9E0 STR D0, [X19 + 0xE0]
	0x01EDC9E4 FMUL D0, D10, D8
	0x01EDC9E8 FADD D0, D11, D0
	0x01EDC9EC FADD D1, D12, D0
	0x01EDC9F0 FMOV D0, X31
	0x01EDC9F4 MOV X0, X31
	0x01EDC9F8 BL 0x337EDC0
	0x01EDC9FC FADD D0, D14, D0
	0x01EDCA00 LDR V10, [X19 + 0xF0]
	0x01EDCA04 STR D0, [X19 + 0xE8]
	0x01EDCA08 FMUL D0, D9, D8
	0x01EDCA0C FADD D1, D13, D0
	0x01EDCA10 FMOV D0, X31
	0x01EDCA14 MOV X0, X31
	0x01EDCA18 BL 0x337EDC0
	0x01EDCA1C LDR V1, [X19 + 0x98]
	0x01EDCA20 FADD D2, D10, D0
	0x01EDCA24 STR D2, [X19 + 0xF0]
	0x01EDCA28 MOV X0, X19
	0x01EDCA2C FMUL D0, D1, D8
	0x01EDCA30 FADD D0, D11, D0
	0x01EDCA34 LDP X20, X19, [X31 + 0x70]
	0x01EDCA38 LDP X22, X21, [X31 + 0x60]
	0x01EDCA3C LDP X24, X23, [X31 + 0x50]
	0x01EDCA40 LDP X30, X25, [X31 + 0x40]
	0x01EDCA44 LDP D9, D8, [X31 + 0x30]
	0x01EDCA48 LDP D11, D10, [X31 + 0x20]
	0x01EDCA4C LDP D13, D12, [X31 + 0x10]
	0x01EDCA50 LDP D15, D14, [X31], #0x80
	0x01EDCA54 B 0x1EDB950
	0x01EDCA58 BL 0x1C16F20
	0x01EDCA5C LDRB W0, [X0 + 0x1E8]
	0x01EDCA60 RET
	0x01EDCA64 SUB X31, X31, 0x40
	0x01EDCA68 STP X30, X19, [X31 + 0x30]
	0x01EDCA6C MRS X19, 0xC000
	0x01EDCA70 LDR X8, [X19 + 0x28]
	0x01EDCA74 STR X8, [X31 + 0x28]
	0x01EDCA78 LDR W8, [X1 + 0x20]
	0x01EDCA7C LDP V1, V0, [X1]
	0x01EDCA80 ADD X1, X31, 0x0
	0x01EDCA84 STR W8, [X31 + 0x20]
	0x01EDCA88 STP V1, V0, [X31]
	0x01EDCA8C BL 0x1EDAA6C
	0x01EDCA90 LDR X8, [X19 + 0x28]
	0x01EDCA94 LDR X9, [X31 + 0x28]
	0x01EDCA98 CMP X8, X9
	0x01EDCA9C B.NE 0x1EDCAAC
	0x01EDCAA0 LDP X30, X19, [X31 + 0x30]
	0x01EDCAA4 ADD X31, X31, 0x40
	0x01EDCAA8 RET
	0x01EDCAAC BL 0x3EB1B20
	0x01EDCAB0 B 0x1EDA9F8
	0x01EDCAB4 LDR V1, [X0 + 0x78]
	0x01EDCAB8 AND X8, X1, 0x0
	0x01EDCABC SCVTF D2, W1
	0x01EDCAC0 MOV X1, X8
	0x01EDCAC4 FMUL D1, D1, D2
	0x01EDCAC8 FMOV D2, 1
	0x01EDCACC B 0x1EDAAE0
	0x01EDCAD0 B 0x1EDB020
	0x01EDCAD4 B 0x1EDC290
	0x01EDCAD8 STP D9, D8, [X31 - 0x20]!
	0x01EDCADC STP X30, X19, [X31 + 0x10]
	0x01EDCAE0 MOV V8.16B, V0.16B
	0x01EDCAE4 LDR V0, [X0 + 0x78]
	0x01EDCAE8 AND X8, X1, 0x0
	0x01EDCAEC SCVTF D1, W1
	0x01EDCAF0 MOV X1, X8
	0x01EDCAF4 MOV X19, X0
	0x01EDCAF8 FMUL D9, D0, D1
	0x01EDCAFC BL 0x1EDAD64
	0x01EDCB00 MOV X0, X19
	0x01EDCB04 LDP X30, X19, [X31 + 0x10]
	0x01EDCB08 FMOV D2, 1
	0x01EDCB0C MOV V0.16B, V8.16B
	0x01EDCB10 MOV V1.16B, V9.16B
	0x01EDCB14 LDP D9, D8, [X31], #0x20
	0x01EDCB18 B 0x1EDAEF4
	0x01EDCB1C ADD X8, X0, 0x1EC
	0x01EDCB20 LDR V4, [X8]
	0x01EDCB24 MOV V0.S[1], V1.S[0]
	0x01EDCB28 MOV V0.S[2], V2.S[0]
	0x01EDCB2C MOV V0.S[3], V3.S[0]
	0x01EDCB30 FSUB V0.4S, V0.4S, V4.4S
	0x01EDCB34 MOVI V1.4S, 0x3F, 0x18
	0x00000000 INVALID
	0x01EDCB3C FADD V0.4S, V4.4S, V0.4S
	0x01EDCB40 STR V0, [X8]
	0x01EDCB44 RET
	0x01EDCB48 ADD X8, X0, 0x1EC
	0x01EDCB4C ADD X9, X0, 0x1F4
	0x01EDCB50 STR X31, [X9]
	0x01EDCB54 STR X31, [X8]
	0x01EDCB58 RET
	0x01EDCB5C LDP D0, D1, [X0 + 0xE0]
	0x01EDCB60 LDR V2, [X0 + 0xF0]
	0x01EDCB64 RET
	0x01EDCB68 STR D8, [X31 - 0x20]!
	0x01EDCB6C STP X30, X19, [X31 + 0x10]
	0x01EDCB70 LDR V0, [X0 + 0x1F4]
	0x01EDCB74 MOV X19, X0

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x24FE000
	009 Move W8, [X20+1366]
	010 Move V8, V0
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x2225000
	017 Move X0, [X0+504]
	018 Call 0x1C17CF4
	019 Move X0, 0x2225000
	020 Move X0, [X0+512]
	021 Call 0x1C17CF4
	022 Move X0, 0x2225000
	023 Move X0, [X0+520]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+1366], W8
	027 Move W8, [X19+112]
	028 Move V0, [X19+224]
	029 Move X9, 0x7FF00000
	030 Move X0, [X19+512]
	031 NotImplemented "Instruction SCVTF not yet implemented."
	032 Move D1, X9
	033 Multiply D0, D0, D2
	034 NotImplemented "Instruction FCVTZS not yet implemented."
	035 NotImplemented "Instruction FCMP not yet implemented."
	036 Move W9, 0x80000000
	037 NotImplemented "Instruction CSEL not yet implemented."
	038 Compare X0, 0
	039 JumpIfEqual {141}
	040 Move X9, 0x2225000
	041 Move X9, [X9+520]
	042 NotImplemented "Instruction BIC not yet implemented."
	043 Move X1, [X9]
	044 Call RingBuffer`1<TimeAdjustment>.get_IsEmpty, X0
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {51}
	049 Move W8, [X19+520]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, [X19+512]
	052 Compare X0, 0
	053 JumpIfEqual {141}
	054 Move X8, 0x2225000
	055 Move X8, [X8+512]
	056 Move W1, W20
	057 Move X2, X31
	058 Move X3, [X8]
	059 Call RingBuffer`1<TimeAdjustment>.PushBack, X0, X1
	060 Move X0, [X19+512]
	061 Compare X0, 0
	062 JumpIfEqual {82}
	063 Move X8, 0x2225000
	064 Move X8, [X8+504]
	065 Move X1, [X8]
	066 Call RingBuffer`1<TimeAdjustment>.BackMut, X0
	067 Move V0, [X0+8]
	068 Add D0, D0, D8
	069 Move [X0+8], D0
	070 Move V0, [X19+528]
	071 Move [X19+520], W20
	072 Move X22, [X31+32]
	073 Move X21, [X31+40]
	074 Move X30, [X31+16]
	075 Move X23, [X31+24]
	076 Add D0, D0, D8
	077 Move [X19+528], D0
	078 Move X20, [X31+48]
	079 Move X19, [X31+56]
	080 Move V8, [X31+64]
	081 Return 
	082 Move W22, W20
	083 Call 0x1C17F20
	084 Move W22, W20
	085 Move X20, X0
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X0, X20
	088 Call 0x3EB2AD0
	089 Move X20, X0
	090 Move X0, 0x2218000
	091 Move X0, [X0+2000]
	092 Call 0x1C17D08
	093 Move X8, [X20]
	094 Move X1, [X8]
	095 Call 0x1C18270
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {142}
	100 Move X20, [X20]
	101 Call 0x3EB2AE0
	102 Move X0, 0x2220000
	103 Move X0, [X0+2224]
	104 Call 0x1C17D08
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Move X0, X20
	110 Move X1, X31
	111 Call Log.Exception, X0
	112 Move [X19+528], X31
	113 Move X0, 0x2225000
	114 Move W21, [X19+112]
	115 Move X0, [X0+440]
	116 Call 0x1C17D08
	117 Call 0x1C17F10
	118 Move X20, X0
	119 Move X0, 0x2225000
	120 Move X0, [X0+448]
	121 Call 0x1C17D08
	122 Move X2, X0
	123 Move X0, X20
	124 Move W1, W21
	125 Call RingBuffer`1<TimeAdjustment>..ctor, X0, X1
	126 Move [X19+512], X20
	127 Compare X20, 0
	128 JumpIfEqual {141}
	129 Move X0, 0x2225000
	130 Move X0, [X0+512]
	131 Move W23, W22
	132 Move W21, W22
	133 Move X22, D8
	134 Call 0x1C17D08
	135 Move X3, X0
	136 Move X0, X20
	137 Move X1, X21
	138 Move X2, X22
	139 Move W20, W23
	140 Call RingBuffer`1<TimeAdjustment>.PushBack, X0, X1
	141 Call 0x1C17F20
	142 Move W0, 8
	143 Call 0x3EB2AF0
	144 Move X8, [X20]
	145 Move [X0], X8
	146 Move X1, 0x1FD9000
	147 Add X1, X1, 3672
	148 Move X2, X31
	149 Call 0x3EB2B00
	150 Move X20, X0
	151 Call 0x3EB2AE0
	152 Move X0, X20
	153 Call 0x1D2D690
	154 Call 0x1991590

Method: System.Void RemoveInputOffsetAdjustmentsOlderThan(Fusion.Tick snapshot)

Disassembly:
	0x01EDCB78 MOV X0, X31
	0x01EDCB7C BL 0x1E326F4
	0x01EDCB80 LDR V0, [X19 + 0x1F8]
	0x01EDCB84 MOV X0, X31
	0x01EDCB88 BL 0x1E3276C
	0x01EDCB8C LDR X8, [X19 + 0x128]
	0x01EDCB90 CBZ X8, 0x1EDCC48
	0x01EDCB94 LDR V0, [X8 + 0x10]
	0x01EDCB98 MOV X0, X31
	0x00000000 INVALID
	0x01EDCBA0 BL 0x1E3249C
	0x01EDCBA4 LDR X0, [X19 + 0x128]
	0x01EDCBA8 CBZ X0, 0x1EDCC48
	0x01EDCBAC MOV X1, X31
	0x01EDCBB0 BL 0x1E92208
	0x00000000 INVALID
	0x01EDCBB8 MOV X0, X31
	0x01EDCBBC BL 0x1E32514
	0x01EDCBC0 LDR V0, [X19 + 0x1EC]
	0x01EDCBC4 MOV X0, X31
	0x01EDCBC8 BL 0x1E3285C
	0x01EDCBCC LDR V0, [X19 + 0x1F0]
	0x01EDCBD0 MOV X0, X31
	0x01EDCBD4 BL 0x1E328D4
	0x01EDCBD8 LDR V8, [X19 + 0x158]
	0x01EDCBDC LDR V0, [X19 + 0x98]
	0x01EDCBE0 LDR V1, [X19 + 0xB8]
	0x01EDCBE4 MOV X0, X31
	0x01EDCBE8 FADD D0, D8, D0
	0x01EDCBEC FADD D0, D0, D1
	0x00000000 INVALID
	0x01EDCBF4 BL 0x1E327E4
	0x01EDCBF8 LDR X8, [X19 + 0x108]
	0x01EDCBFC CBZ X8, 0x1EDCC48
	0x01EDCC00 LDR V0, [X8 + 0x10]
	0x01EDCC04 MOV X0, X31
	0x00000000 INVALID
	0x01EDCC0C BL 0x1E32604
	0x01EDCC10 LDR X0, [X19 + 0x108]
	0x01EDCC14 CBZ X0, 0x1EDCC48
	0x01EDCC18 MOV X1, X31
	0x01EDCC1C BL 0x1E92208
	0x00000000 INVALID
	0x01EDCC24 MOV X0, X31
	0x01EDCC28 BL 0x1E3267C
	0x01EDCC2C LDR V0, [X19 + 0xD8]
	0x01EDCC30 LDP X30, X19, [X31 + 0x10]
	0x01EDCC34 MOV X0, X31
	0x01EDCC38 FADD D0, D8, D0
	0x00000000 INVALID
	0x01EDCC40 LDR V8, [X31], #0x20
	0x01EDCC44 B 0x1E3258C
	0x01EDCC48 BL 0x1C16F20
	0x01EDCC4C SUB X31, X31, 0x40
	0x01EDCC50 STR X30, [X31 + 0x10]
	0x01EDCC54 STP X22, X21, [X31 + 0x20]
	0x01EDCC58 STP X20, X19, [X31 + 0x30]
	0x01EDCC5C LDP W19, W8, [X0 + 0x50]
	0x01EDCC60 ADD W9, W19, W1
	0x01EDCC64 CMP W9, W8
	0x01EDCC68 STR W9, [X0 + 0x50]
	0x01EDCC6C B.LE 0x1EDCC84
	0x01EDCC70 TBZ X2, 0x0, 0x1EDCC9C
	0x01EDCC74 LDR W8, [X0 + 0x58]
	0x01EDCC78 MOV X2, X31
	0x01EDCC7C UBFM W1, W8, 0x1F, 0x1E
	0x01EDCC80 BL 0x1EF97A0
	0x01EDCC84 MOV W0, W19
	0x01EDCC88 LDP X20, X19, [X31 + 0x30]
	0x01EDCC8C LDP X22, X21, [X31 + 0x20]
	0x01EDCC90 LDR X30, [X31 + 0x10]
	0x01EDCC94 ADD X31, X31, 0x40
	0x01EDCC98 RET
	0x01EDCC9C STR W19, [X31 + 0x1C]
	0x01EDCCA0 ADRP X19, 0x2217000
	0x01EDCCA4 LDR X19, [X19 + 0x758]
	0x01EDCCA8 MOV X22, X0
	0x01EDCCAC MOV W21, W1
	0x01EDCCB0 MOV X0, X19
	0x01EDCCB4 BL 0x1C16D08
	0x01EDCCB8 ADD X1, X31, 0x1C
	0x01EDCCBC BL 0x1C16E04
	0x01EDCCC0 MOV X20, X0
	0x01EDCCC4 MOV X0, X19
	0x01EDCCC8 STR W21, [X31 + 0x18]
	0x01EDCCCC BL 0x1C16D08
	0x01EDCCD0 ADD X1, X31, 0x18
	0x01EDCCD4 BL 0x1C16E04
	0x01EDCCD8 LDR W8, [X22 + 0x54]
	0x01EDCCDC MOV X21, X0
	0x01EDCCE0 MOV X0, X19
	0x01EDCCE4 STR W8, [X31 + 0xC]
	0x01EDCCE8 BL 0x1C16D08
	0x01EDCCEC ADD X1, X31, 0xC
	0x01EDCCF0 BL 0x1C16E04
	0x01EDCCF4 MOV X19, X0
	0x01EDCCF8 ADRP X0, 0x2224000
	0x01EDCCFC LDR X0, [X0 + 0x220]
	0x01EDCD00 BL 0x1C16D08
	0x01EDCD04 MOV X1, X20
	0x01EDCD08 MOV X2, X21
	0x01EDCD0C MOV X3, X19
	0x01EDCD10 MOV X4, X31
	0x01EDCD14 BL 0x3227C18
	0x01EDCD18 MOV X19, X0
	0x01EDCD1C ADRP X0, 0x2217000
	0x01EDCD20 LDR X0, [X0 + 0x5B0]
	0x01EDCD24 BL 0x1C16D08
	0x01EDCD28 BL 0x1C16F10
	0x01EDCD2C MOV X1, X19
	0x01EDCD30 MOV X2, X31
	0x01EDCD34 MOV X20, X0
	0x01EDCD38 BL 0x337DF1C
	0x01EDCD3C ADRP X0, 0x2224000
	0x01EDCD40 LDR X0, [X0 + 0x228]
	0x01EDCD44 BL 0x1C16D08
	0x01EDCD48 MOV X1, X0
	0x01EDCD4C MOV X0, X20
	0x01EDCD50 BL 0x1C16DEC
	0x01EDCD54 STP X30, X21, [X31 - 0x20]!
	0x01EDCD58 STP X20, X19, [X31 + 0x10]
	0x01EDCD5C ADRP X20, 0x24FD000
	0x01EDCD60 LDRB W8, [X20 + 0x55E]
	0x01EDCD64 MOV X19, X0
	0x01EDCD68 CBNZ W8, 0x1EDCD80
	0x01EDCD6C ADRP X0, 0x221E000
	0x01EDCD70 LDR X0, [X0 + 0xC68]
	0x01EDCD74 BL 0x1C16CF4
	0x01EDCD78 MOVZ W8, 0x1
	0x01EDCD7C STRB W8, [X20 + 0x55E]
	0x01EDCD80 ADRP X20, 0x221E000
	0x01EDCD84 LDR X20, [X20 + 0xC68]
	0x01EDCD88 LDR X0, [X20]
	0x01EDCD8C LDR W8, [X0 + 0xE0]
	0x01EDCD90 CBNZ W8, 0x1EDCD98
	0x01EDCD94 BL 0x1C16DFC
	0x01EDCD98 ADRP X21, 0x24FC000
	0x01EDCD9C LDRB W8, [X21 + 0xF15]
	0x01EDCDA0 CBNZ W8, 0x1EDCDC4
	0x01EDCDA4 ADRP X0, 0x221F000
	0x01EDCDA8 LDR X0, [X0 + 0x690]
	0x01EDCDAC BL 0x1C16CF4
	0x01EDCDB0 ADRP X0, 0x221E000
	0x01EDCDB4 LDR X0, [X0 + 0xC68]
	0x01EDCDB8 BL 0x1C16CF4
	0x01EDCDBC MOVZ W8, 0x1
	0x01EDCDC0 STRB W8, [X21 + 0xF15]
	0x01EDCDC4 LDR X0, [X20]
	0x01EDCDC8 LDR W8, [X0 + 0xE0]
	0x01EDCDCC CBNZ W8, 0x1EDCDD8
	0x01EDCDD0 BL 0x1C16DFC
	0x01EDCDD4 LDR X0, [X20]
	0x01EDCDD8 LDR X8, [X0 + 0xB8]
	0x01EDCDDC LDR X8, [X8 + 0x10]
	0x01EDCDE0 CBZ X8, 0x1EDCE34
	0x01EDCDE4 MOV X9, X19
	0x01EDCDE8 MOV X9, X9
	0x01EDCDEC MOV X9, X9
	0x01EDCDF0 MOVZ X11, 0x6F6B
	0x01EDCDF4 MOV X9, X9
	0x01EDCDF8 MOVK X11, 0xE9960000
	0x01EDCDFC LDR W10, [X8 + 0x18]
	0x01EDCE00 MOV X9, X9
	0x01EDCE04 MOVK X11, 0xF118
	0x01EDCE08 MOV X9, X9
	0x01EDCE0C MOVK X11, 0x6C040000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x24FE000
	009 Move W8, [X19+1367]
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x2218000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move X0, 0x2225000
	020 Move X0, [X0+528]
	021 Call 0x1C17CF4
	022 Move X0, 0x2218000
	023 Move X0, [X0+3608]
	024 Call 0x1C17CF4
	025 Move X0, 0x2225000
	026 Move X0, [X0+536]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X19+1367], W8
	030 Move X0, [X21+512]
	031 Move [X21+528], X31
	032 Compare X0, 0
	033 JumpIfEqual {132}
	034 Move X8, 0x2225000
	035 Move X8, [X8+536]
	036 Move X22, 0x2218000
	037 Move X1, [X8]
	038 Move X22, [X22+3584]
	039 Call RingBuffer`1<TimeAdjustment>.GetEnumerator, X0
	040 Move X19, X0
	041 Compare X0, 0
	042 JumpIfEqual {133}
	043 Move X23, 0x2218000
	044 Move X24, 0x2225000
	045 Move X23, [X23+3608]
	046 Move X24, [X24+528]
	047 Move X8, [X19]
	048 Move X1, [X23]
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 Compare X9, 0
	051 JumpIfEqual {58}
	052 Move X10, [X8+176]
	053 Add X10, X10, 8
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Subtract X9, X9, 1
	057 Add X10, X10, 16
	058 Move X0, X19
	059 Move W2, W31
	060 Call 0x1C5D788
	061 NotImplemented "Instruction LDRSW not yet implemented."
	062 Add X8, X8, X9
	063 Add X0, X8, 312
	064 Move X8, [X0]
	065 Move X1, [X0+8]
	066 Move X0, X19
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {98}
	072 Move X8, [X19]
	073 Move X1, [X24]
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Compare X9, 0
	076 JumpIfEqual {83}
	077 Move X10, [X8+176]
	078 Add X10, X10, 8
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Subtract X9, X9, 1
	082 Add X10, X10, 16
	083 Move X0, X19
	084 Move W2, W31
	085 Call 0x1C5D788
	086 NotImplemented "Instruction LDRSW not yet implemented."
	087 Add X8, X8, X9
	088 Add X0, X8, 312
	089 Move X8, [X0]
	090 Move X1, [X0+8]
	091 Move X0, X19
	092 NotImplemented "Instruction BLR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move V0, [X21+528]
	095 Move D1, X1
	096 Add D0, D0, D1
	097 Move [X21+528], D0
	098 Move X20, X31
	099 Compare X19, 0
	100 JumpIfEqual {122}
	101 Move X8, [X19]
	102 Move X1, [X22]
	103 NotImplemented "Instruction LDRH not yet implemented."
	104 Compare X9, 0
	105 JumpIfEqual {112}
	106 Move X10, [X8+176]
	107 Add X10, X10, 8
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Subtract X9, X9, 1
	111 Add X10, X10, 16
	112 Move X0, X19
	113 Move W2, W31
	114 Call 0x1C5D788
	115 NotImplemented "Instruction LDRSW not yet implemented."
	116 Add X8, X8, X9
	117 Add X0, X8, 312
	118 Move X8, [X0]
	119 Move X1, [X0+8]
	120 Move X0, X19
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Compare X20, 0
	123 JumpIfNotEqual {134}
	124 Move X20, [X31+48]
	125 Move X19, [X31+56]
	126 Move X22, [X31+32]
	127 Move X21, [X31+40]
	128 Move X24, [X31+16]
	129 Move X23, [X31+24]
	130 Move X30, [X31+64]
	131 Return 
	132 Call 0x1C17F20
	133 Call 0x1C17F20
	134 Move X0, X20
	135 Call 0x1C17F18
	136 Move X21, X0
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X0, X21
	139 Call 0x3EB2AD0
	140 Move X20, [X0]
	141 Call 0x3EB2AE0
	142 Move X20, X31
	143 Move X21, X0
	144 Compare X19, 0
	145 JumpIfEqual {167}
	146 Move X8, [X19]
	147 Move X1, [X22]
	148 NotImplemented "Instruction LDRH not yet implemented."
	149 Compare X9, 0
	150 JumpIfEqual {157}
	151 Move X10, [X8+176]
	152 Add X10, X10, 8
	153 NotImplemented "Instruction LDUR not yet implemented."
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Subtract X9, X9, 1
	156 Add X10, X10, 16
	157 Move X0, X19
	158 Move W2, W31
	159 Call 0x1C5D788
	160 NotImplemented "Instruction LDRSW not yet implemented."
	161 Add X8, X8, X9
	162 Add X0, X8, 312
	163 Move X8, [X0]
	164 Move X1, [X0+8]
	165 Move X0, X19
	166 NotImplemented "Instruction BLR not yet implemented."
	167 Compare X20, 0
	168 JumpIfNotEqual {171}
	169 Move X0, X21
	170 Call 0x1D2D690
	171 Move X0, X20
	172 Call 0x1C17F18
	173 Call 0x1991590

Method: System.Double GetServerTime()

Disassembly:
	0x01EDC744 BL 0x1C5C788
	0x01EDC748 B 0x1EDC75C
	0x01EDC74C LDR W9, [X10]
	0x01EDC750 ADD W9, W9, 0x1
	0x01EDC754 ADD X8, X8, W9, 0x4, SXTW
	0x01EDC758 ADD X0, X8, 0x138
	0x01EDC75C LDP X8, X1, [X0]
	0x01EDC760 MOV X0, X20
	0x01EDC764 MOV V0.16B, V10.16B
	0x01EDC768 MOV V1.16B, V9.16B
	0x01EDC76C MOV V2.16B, V8.16B
	0x01EDC770 BLR X8
	0x01EDC774 LDR X20, [X19 + 0x80]
	0x01EDC778 CBZ X20, 0x1EDCA58
	0x01EDC77C LDR X8, [X20]
	0x01EDC780 LDR X1, [X21]
	0x01EDC784 LDRH W9, [X8 + 0x12E]
	0x01EDC788 CBZ X9, 0x1EDC7AC
	0x01EDC78C LDR X10, [X8 + 0xB0]
	0x01EDC790 ADD X10, X10, 0x8
	0x01EDC794 LDUR X11, [X10 - 0x8]
	0x01EDC798 CMP X11, X1
	0x01EDC79C B.EQ 0x1EDC7BC
	0x01EDC7A0 SUBS X9, X9, 0x1
	0x01EDC7A4 ADD X10, X10, 0x10
	0x01EDC7A8 B.NE 0x1EDC794
	0x01EDC7AC MOV X0, X20
	0x01EDC7B0 MOV W2, W31
	0x01EDC7B4 BL 0x1C5C788
	0x01EDC7B8 B 0x1EDC7C8
	0x01EDC7BC LDRSW X9, [X10]
	0x01EDC7C0 ADD X8, X8, X9, 0x4, LSL
	0x01EDC7C4 ADD X0, X8, 0x138
	0x01EDC7C8 LDP X8, X1, [X0]
	0x01EDC7CC MOV X0, X20
	0x01EDC7D0 BLR X8
	0x01EDC7D4 LDR X20, [X19 + 0xA0]
	0x01EDC7D8 STR D0, [X19 + 0x98]
	0x01EDC7DC CBZ X20, 0x1EDCA58
	0x01EDC7E0 LDR X8, [X20]
	0x01EDC7E4 LDP D10, D9, [X19 + 0xA8]
	0x01EDC7E8 LDR X1, [X21]
	0x01EDC7EC LDRH W9, [X8 + 0x12E]
	0x01EDC7F0 CBZ X9, 0x1EDC814
	0x01EDC7F4 LDR X10, [X8 + 0xB0]
	0x01EDC7F8 ADD X10, X10, 0x8
	0x01EDC7FC LDUR X11, [X10 - 0x8]
	0x01EDC800 CMP X11, X1
	0x01EDC804 B.EQ 0x1EDC824
	0x01EDC808 SUBS X9, X9, 0x1
	0x01EDC80C ADD X10, X10, 0x10
	0x01EDC810 B.NE 0x1EDC7FC
	0x01EDC814 MOVZ W2, 0x1
	0x01EDC818 MOV X0, X20
	0x01EDC81C BL 0x1C5C788
	0x01EDC820 B 0x1EDC834
	0x01EDC824 LDR W9, [X10]
	0x01EDC828 ADD W9, W9, 0x1
	0x01EDC82C ADD X8, X8, W9, 0x4, SXTW
	0x01EDC830 ADD X0, X8, 0x138
	0x01EDC834 LDP X8, X1, [X0]
	0x01EDC838 MOV X0, X20

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, X0
	008 Move X0, [X0+248]
	009 Compare X0, 0
	010 JumpIfEqual {71}
	011 Move D0, 0.5
	012 Move X1, X31
	013 Call TimeSeries.Smoothed, X0, V0
	014 Move X20, 0x24FD000
	015 Move W8, [X20+3864]
	016 Move V8, V0
	017 Compare W8, 0
	018 JumpIfNotEqual {24}
	019 Move X0, 0x2220000
	020 Move X0, [X0+1800]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+3864], W8
	024 Move W8, [X19+328]
	025 Move X21, 0x2220000
	026 Move X20, [X19+320]
	027 Move X21, [X21+1800]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X22, 0x24FD000
	030 Move W8, [X22+3863]
	031 Compare W8, 0
	032 JumpIfNotEqual {38}
	033 Move X0, 0x2220000
	034 Move X0, [X0+1800]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X22+3863], W8
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X31
	044 Call Stopwatch.GetTimestamp
	045 Move X8, [X19+312]
	046 Add X9, X0, X20
	047 Subtract X20, X9, X8
	048 Move X0, [X21]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X21]
	054 Move X8, [X0+184]
	055 Move D3, [X19+336]
	056 Move D2, [X19+344]
	057 NotImplemented "Instruction SCVTF not yet implemented."
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move V0, [X8]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+8]
	064 NotImplemented "Instruction SCVTF not yet implemented."
	065 NotImplemented "Instruction FDIV not yet implemented."
	066 Add D0, D8, D0
	067 Multiply D0, D2, D0
	068 Add D0, D3, D0
	069 Move V8, [X31+48]
	070 Return V0
	071 Call 0x1C17F20

Method: System.Double GetSnapshotTime()

Disassembly:
	0x01EDC83C MOV V0.16B, V10.16B
	0x01EDC840 MOV V1.16B, V9.16B
	0x01EDC844 MOV V2.16B, V8.16B
	0x01EDC848 BLR X8
	0x01EDC84C LDR X20, [X19 + 0xA0]
	0x01EDC850 CBZ X20, 0x1EDCA58
	0x01EDC854 LDR X8, [X20]
	0x01EDC858 LDR X1, [X21]
	0x01EDC85C LDRH W9, [X8 + 0x12E]
	0x01EDC860 CBZ X9, 0x1EDC884
	0x01EDC864 LDR X10, [X8 + 0xB0]
	0x01EDC868 ADD X10, X10, 0x8
	0x01EDC86C LDUR X11, [X10 - 0x8]
	0x01EDC870 CMP X11, X1
	0x01EDC874 B.EQ 0x1EDC894
	0x01EDC878 SUBS X9, X9, 0x1
	0x01EDC87C ADD X10, X10, 0x10
	0x01EDC880 B.NE 0x1EDC86C
	0x01EDC884 MOV X0, X20
	0x01EDC888 MOV W2, W31
	0x01EDC88C BL 0x1C5C788
	0x01EDC890 B 0x1EDC8A0
	0x01EDC894 LDRSW X9, [X10]
	0x01EDC898 ADD X8, X8, X9, 0x4, LSL
	0x01EDC89C ADD X0, X8, 0x138
	0x01EDC8A0 LDP X8, X1, [X0]
	0x01EDC8A4 MOV X0, X20
	0x01EDC8A8 BLR X8
	0x01EDC8AC LDR X20, [X19 + 0xC0]
	0x01EDC8B0 FNEG D0, D0
	0x01EDC8B4 STR D0, [X19 + 0xB8]
	0x01EDC8B8 CBZ X20, 0x1EDCA58
	0x01EDC8BC LDR X8, [X20]
	0x01EDC8C0 LDP D10, D9, [X19 + 0xC8]
	0x01EDC8C4 LDR X1, [X21]
	0x01EDC8C8 LDRH W9, [X8 + 0x12E]
	0x01EDC8CC CBZ X9, 0x1EDC8F0
	0x01EDC8D0 LDR X10, [X8 + 0xB0]
	0x01EDC8D4 ADD X10, X10, 0x8
	0x01EDC8D8 LDUR X11, [X10 - 0x8]
	0x01EDC8DC CMP X11, X1
	0x01EDC8E0 B.EQ 0x1EDC900
	0x01EDC8E4 SUBS X9, X9, 0x1
	0x01EDC8E8 ADD X10, X10, 0x10
	0x01EDC8EC B.NE 0x1EDC8D8
	0x01EDC8F0 MOVZ W2, 0x1
	0x01EDC8F4 MOV X0, X20
	0x01EDC8F8 BL 0x1C5C788
	0x01EDC8FC B 0x1EDC910
	0x01EDC900 LDR W9, [X10]
	0x01EDC904 ADD W9, W9, 0x1
	0x01EDC908 ADD X8, X8, W9, 0x4, SXTW
	0x01EDC90C ADD X0, X8, 0x138
	0x01EDC910 LDP X8, X1, [X0]
	0x01EDC914 MOV X0, X20
	0x01EDC918 MOV V0.16B, V10.16B

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x24FD000
	007 Move W8, [X20+3864]
	008 Move X19, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x2220000
	012 Move X0, [X0+1800]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3864], W8
	016 Move W8, [X19+288]
	017 Move X21, 0x2220000
	018 Move X20, [X19+280]
	019 Move X21, [X21+1800]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X22, 0x24FD000
	022 Move W8, [X22+3863]
	023 Compare W8, 0
	024 JumpIfNotEqual {30}
	025 Move X0, 0x2220000
	026 Move X0, [X0+1800]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+3863], W8
	030 Move X0, [X21]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X31
	036 Call Stopwatch.GetTimestamp
	037 Move X8, [X19+272]
	038 Add X9, X0, X20
	039 Subtract X20, X9, X8
	040 Move X0, [X21]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X21]
	046 Move X8, [X0+184]
	047 Move W9, [X19+304]
	048 Move V2, [X19+344]
	049 Move V3, [X19+120]
	050 Move V1, [X8]
	051 NotImplemented "Instruction SCVTF not yet implemented."
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 NotImplemented "Instruction SCVTF not yet implemented."
	057 NotImplemented "Instruction SCVTF not yet implemented."
	058 NotImplemented "Instruction FDIV not yet implemented."
	059 Multiply D0, D2, D0
	060 Multiply D1, D3, D4
	061 Add D0, D0, D1
	062 Move X30, [X31+48]
	063 Return V0

Method: System.Void UpdateServerStats(System.Double roundTripTime, System.Double time, System.Double timeScale)

Disassembly:
	0x01EDBEF4 LDR V1, [X19 + 0x30]
	0x01EDBEF8 LDR V2, [X19 + 0x158]
	0x01EDBEFC LDR V3, [X19 + 0x90]
	0x01EDBF00 LDR X30, [X31 + 0x18]
	0x01EDBF04 FMUL D0, D0, D1
	0x01EDBF08 FADD D0, D8, D0
	0x01EDBF0C FMUL D0, D2, D0
	0x01EDBF10 FSUB D0, D0, D3
	0x01EDBF14 FMOV D1, 0.5
	0x01EDBF18 FMUL D0, D0, D1
	0x01EDBF1C FADD D0, D3, D0
	0x01EDBF20 STR D0, [X19 + 0x90]
	0x01EDBF24 LDP X20, X19, [X31 + 0x20]
	0x01EDBF28 LDP D9, D8, [X31 + 0x8]
	0x01EDBF2C LDR V10, [X31], #0x30
	0x01EDBF30 RET
	0x01EDBF34 BL 0x1C16F20
	0x01EDBF38 STR D10, [X31 - 0x30]!
	0x01EDBF3C STP D9, D8, [X31 + 0x8]
	0x01EDBF40 STR X30, [X31 + 0x18]
	0x01EDBF44 STP X20, X19, [X31 + 0x20]
	0x01EDBF48 ADRP X20, 0x24FE000
	0x01EDBF4C LDRB W8, [X20 + 0x55A]
	0x01EDBF50 MOV X19, X0
	0x01EDBF54 TBNZ X8, 0x0, 0x1EDBF6C
	0x01EDBF58 ADRP X0, 0x2218000
	0x01EDBF5C LDR X0, [X0 + 0x5A8]
	0x01EDBF60 BL 0x1C16CF4
	0x01EDBF64 MOVZ W8, 0x1
	0x01EDBF68 STRB W8, [X20 + 0x55A]
	0x01EDBF6C LDR V0, [X19 + 0x28]
	0x01EDBF70 FMOV D1, 1
	0x01EDBF74 MOV X0, X31
	0x01EDBF78 FSUB D0, D1, D0
	0x01EDBF7C BL 0x1E927F8
	0x01EDBF80 LDR X0, [X19 + 0x128]
	0x01EDBF84 CBZ X0, 0x1EDC034
	0x01EDBF88 MOV X1, X31
	0x01EDBF8C MOV V8.16B, V0.16B
	0x01EDBF90 BL 0x1E92208
	0x01EDBF94 LDR X0, [X19 + 0xF8]
	0x01EDBF98 CBZ X0, 0x1EDC034
	0x01EDBF9C ADRP X20, 0x2218000
	0x01EDBFA0 LDR X20, [X20 + 0x5A8]
	0x01EDBFA4 MOV X1, X31
	0x01EDBFA8 MOV V9.16B, V0.16B
	0x01EDBFAC BL 0x1E92208
	0x01EDBFB0 LDR X0, [X20]
	0x01EDBFB4 MOV V10.16B, V0.16B
	0x01EDBFB8 LDR W8, [X0 + 0xE0]
	0x01EDBFBC CBNZ W8, 0x1EDBFC4
	0x01EDBFC0 BL 0x1C16DFC
	0x01EDBFC4 MOV V0.16B, V9.16B
	0x01EDBFC8 MOV V1.16B, V10.16B
	0x01EDBFCC MOV X0, X31
	0x01EDBFD0 BL 0x337EDC0
	0x01EDBFD4 LDR X8, [X19 + 0x128]
	0x01EDBFD8 CBZ X8, 0x1EDC034
	0x01EDBFDC LDR V2, [X8 + 0x10]
	0x01EDBFE0 LDR V1, [X19 + 0x50]
	0x01EDBFE4 FMUL D8, D8, D0
	0x01EDBFE8 MOVZ W1, 0x1
	0x01EDBFEC MOV V0.16B, V2.16B
	0x01EDBFF0 BL 0x1EDC1A4
	0x01EDBFF4 LDR V1, [X19 + 0x38]
	0x01EDBFF8 LDR V2, [X19 + 0x158]
	0x01EDBFFC LDR V3, [X19 + 0xD0]
	0x01EDC000 LDR X30, [X31 + 0x18]
	0x01EDC004 FMUL D0, D0, D1
	0x01EDC008 FADD D0, D8, D0
	0x01EDC00C FMUL D0, D2, D0
	0x01EDC010 FSUB D0, D0, D3
	0x01EDC014 FMOV D1, 0.5
	0x01EDC018 FMUL D0, D0, D1
	0x01EDC01C FADD D0, D3, D0

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move V8, V0
	007 Move V0, [X0+336]
	008 Move [X0+336], D1
	009 Move [X0+344], D2
	010 Subtract D0, D1, D0
	011 NotImplemented "Instruction FCMP not yet implemented."
	012 Move X20, 0x24FE000
	013 Move W8, [X20+3865]
	014 Move X19, X0
	015 Compare W8, 0
	016 JumpIfNotEqual {22}
	017 Move X0, 0x2221000
	018 Move X0, [X0+1800]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3865], W8
	022 Move W8, 1
	023 Move [X19+320], X31
	024 Move [X19+328], W8
	025 Move X8, 0x2221000
	026 Move X8, [X8+1800]
	027 Move X0, [X8]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X31
	033 Call Stopwatch.GetTimestamp
	034 Move X8, [X19+248]
	035 Move [X19+312], X0
	036 Compare X8, 0
	037 JumpIfEqual {92}
	038 Move X0, X8
	039 Move X1, X31
	040 Call TimeSeries.get_IsEmpty, X0
	041 Move X8, [X19+248]
	042 Compare X8, 0
	043 JumpIfEqual {92}
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {58}
	048 Move X0, X8
	049 Move V0, V8
	050 Move X1, X31
	051 Call TimeSeries.Fill, X0, V0
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X30, [X31+16]
	055 Move D9, [X31+48]
	056 Move D8, [X31+56]
	057 Return 
	058 Move X0, X8
	059 Move V0, V8
	060 Move X1, X31
	061 Call TimeSeries.Add, X0, V0
	062 Move X0, [X19+256]
	063 Compare X0, 0
	064 JumpIfEqual {92}
	065 Move V8, [X19+492]
	066 Move V9, [X19+528]
	067 Move X1, X31
	068 Call TimeSeries.get_IsEmpty, X0
	069 Move X8, [X19+256]
	070 Compare X8, 0
	071 JumpIfEqual {92}
	072 NotImplemented "Instruction FCVT not yet implemented."
	073 Add D0, D9, D0
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {81}
	078 Move X0, X8
	079 Move X1, X31
	080 Call TimeSeries.Fill, X0, V0
	081 Move X0, X8
	082 Move X1, X31
	083 Call TimeSeries.Add, X0, V0
	084 Move X0, X19
	085 Move X20, [X31+32]
	086 Move X19, [X31+40]
	087 Move X30, [X31+16]
	088 Move D9, [X31+48]
	089 Move D8, [X31+56]
	090 Call ClientTimeProvider.UpdateOutgoingTargets, X0
	091 Return 
	092 Call 0x1C17F20

Method: System.Void UpdateSnapshot(Fusion.Tick snapshot)

Disassembly:
	0x01EDBD64 BL 0x1C16F18
	0x01EDBD68 B 0x1EDBD70
	0x01EDBD6C B 0x1EDBD70
	0x01EDBD70 MOV X21, X0
	0x01EDBD74 CMP W1, 0x1
	0x01EDBD78 B.NE 0x1EDBD90
	0x01EDBD7C MOV X0, X21
	0x01EDBD80 BL 0x3EB1AD0
	0x01EDBD84 LDR X20, [X0]
	0x01EDBD88 BL 0x3EB1AE0
	0x01EDBD8C B 0x1EDBCE4
	0x01EDBD90 MOV X20, X31
	0x01EDBD94 B 0x1EDBD9C
	0x01EDBD98 MOV X21, X0
	0x01EDBD9C CBZ X19, 0x1EDBDF8
	0x01EDBDA0 LDR X8, [X19]
	0x01EDBDA4 LDR X1, [X22]
	0x01EDBDA8 LDRH W9, [X8 + 0x12E]
	0x01EDBDAC CBZ X9, 0x1EDBDD0
	0x01EDBDB0 LDR X10, [X8 + 0xB0]
	0x01EDBDB4 ADD X10, X10, 0x8
	0x01EDBDB8 LDUR X11, [X10 - 0x8]
	0x01EDBDBC CMP X11, X1
	0x01EDBDC0 B.EQ 0x1EDBDE0
	0x01EDBDC4 SUBS X9, X9, 0x1
	0x01EDBDC8 ADD X10, X10, 0x10
	0x01EDBDCC B.NE 0x1EDBDB8
	0x01EDBDD0 MOV X0, X19
	0x01EDBDD4 MOV W2, W31
	0x01EDBDD8 BL 0x1C5C788
	0x01EDBDDC B 0x1EDBDEC
	0x01EDBDE0 LDRSW X9, [X10]
	0x01EDBDE4 ADD X8, X8, X9, 0x4, LSL
	0x01EDBDE8 ADD X0, X8, 0x138
	0x01EDBDEC LDP X8, X1, [X0]
	0x01EDBDF0 MOV X0, X19
	0x01EDBDF4 BLR X8
	0x01EDBDF8 CBNZ X20, 0x1EDBE04
	0x01EDBDFC MOV X0, X21
	0x01EDBE00 BL 0x1D2C690
	0x01EDBE04 MOV X0, X20
	0x01EDBE08 BL 0x1C16F18
	0x01EDBE0C BL 0x1990590
	0x01EDBE10 STR D10, [X31 - 0x30]!
	0x01EDBE14 STP D9, D8, [X31 + 0x8]
	0x01EDBE18 STR X30, [X31 + 0x18]
	0x01EDBE1C STP X20, X19, [X31 + 0x20]
	0x01EDBE20 ADRP X20, 0x24FE000
	0x01EDBE24 LDRB W8, [X20 + 0x559]
	0x01EDBE28 MOV X19, X0
	0x01EDBE2C TBNZ X8, 0x0, 0x1EDBE44
	0x01EDBE30 ADRP X0, 0x2218000
	0x01EDBE34 LDR X0, [X0 + 0x5A8]
	0x01EDBE38 BL 0x1C16CF4
	0x01EDBE3C MOVZ W8, 0x1
	0x01EDBE40 STRB W8, [X20 + 0x559]
	0x01EDBE44 LDR X0, [X19 + 0xF8]
	0x01EDBE48 CBZ X0, 0x1EDBF34
	0x01EDBE4C ADRP X20, 0x2218000
	0x01EDBE50 LDR X20, [X20 + 0x5A8]
	0x01EDBE54 FMOV D0, 0.5
	0x01EDBE58 MOV X1, X31
	0x01EDBE5C BL 0x1E92440
	0x01EDBE60 LDR X0, [X20]
	0x01EDBE64 LDP D10, D9, [X19 + 0x58]
	0x01EDBE68 MOV V8.16B, V0.16B
	0x01EDBE6C LDR W8, [X0 + 0xE0]
	0x01EDBE70 CBNZ W8, 0x1EDBE78
	0x01EDBE74 BL 0x1C16DFC
	0x01EDBE78 FSUB D0, D8, D10
	0x01EDBE7C FSUB D1, D0, D9
	0x01EDBE80 FMOV D0, X31
	0x01EDBE84 MOV X0, X31
	0x01EDBE88 BL 0x337EDC0
	0x01EDBE8C LDR V1, [X19 + 0x60]
	0x01EDBE90 LDR V2, [X19 + 0x158]
	0x01EDBE94 LDR V3, [X19 + 0x20]
	0x01EDBE98 FMOV D4, 1
	0x01EDBE9C FADD D0, D0, D1
	0x01EDBEA0 FMUL D0, D0, D2
	0x01EDBEA4 STR D0, [X19 + 0xB0]
	0x01EDBEA8 FSUB D0, D4, D3
	0x01EDBEAC MOV X0, X31
	0x01EDBEB0 BL 0x1E927F8
	0x01EDBEB4 LDR X0, [X19 + 0xF8]
	0x01EDBEB8 CBZ X0, 0x1EDBF34
	0x01EDBEBC LDR V9, [X19 + 0x1F8]
	0x01EDBEC0 MOV X1, X31
	0x01EDBEC4 MOV V8.16B, V0.16B
	0x01EDBEC8 BL 0x1E92208
	0x01EDBECC MOV V1.16B, V0.16B
	0x01EDBED0 FCVT S0, S9
	0x01EDBED4 MOV X0, X31
	0x01EDBED8 BL 0x337EDC0
	0x01EDBEDC LDR V2, [X19 + 0x1F4]
	0x01EDBEE0 LDR V1, [X19 + 0x48]
	0x01EDBEE4 FMUL D8, D8, D0
	0x01EDBEE8 MOVZ W1, 0x1
	0x01EDBEEC FCVT S0, S2
	0x01EDBEF0 BL 0x1EDC1A4

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W8, [X0+304]
	008 Move X20, X1
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X20, [X31+32]
	011 Move X19, [X31+40]
	012 Move X22, [X31+16]
	013 Move X21, [X31+24]
	014 Move X30, [X31+8]
	015 Move V8, [X31+48]
	016 Return 
	017 And X1, X20, 0
	018 Move X19, X0
	019 Call ClientTimeProvider.RemoveInputOffsetAdjustmentsOlderThan, X0, X1
	020 Move [X19+304], W20
	021 Move X20, 0x24FE000
	022 Move W8, [X20+3864]
	023 Compare W8, 0
	024 JumpIfNotEqual {30}
	025 Move X0, 0x2221000
	026 Move X0, [X0+1800]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3864], W8
	030 Move W8, [X19+288]
	031 Move X20, 0x2221000
	032 Move X21, [X19+280]
	033 Move X20, [X20+1800]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X22, 0x24FE000
	036 Move W8, [X22+3863]
	037 Compare W8, 0
	038 JumpIfNotEqual {44}
	039 Move X0, 0x2221000
	040 Move X0, [X0+1800]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X22+3863], W8
	044 Move X0, [X20]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X0, X31
	050 Call Stopwatch.GetTimestamp
	051 Move X8, [X19+272]
	052 Add X9, X0, X21
	053 Subtract X21, X9, X8
	054 Move X0, [X20]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1C17DFC
	059 Move X0, [X20]
	060 Move X8, [X19+296]
	061 Compare X8, 0
	062 JumpIfEqual {116}
	063 Move X9, [X0+184]
	064 Move X0, X8
	065 Move X1, X31
	066 Move V8, [X9]
	067 Call TimeSeries.get_IsEmpty, X0
	068 Move X8, [X19+296]
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {79}
	073 Compare X8, 0
	074 JumpIfEqual {116}
	075 Move V0, [X19+80]
	076 Move X0, X8
	077 Move X1, X31
	078 Call TimeSeries.Fill, X0, V0
	079 Compare X8, 0
	080 JumpIfEqual {116}
	081 NotImplemented "Instruction SCVTF not yet implemented."
	082 NotImplemented "Instruction SCVTF not yet implemented."
	083 NotImplemented "Instruction FDIV not yet implemented."
	084 Move X0, X8
	085 Move X1, X31
	086 Call TimeSeries.Add, X0, V0
	087 Move X21, 0x24FE000
	088 Move W8, [X21+3865]
	089 Compare W8, 0
	090 JumpIfNotEqual {96}
	091 Move X0, 0x2221000
	092 Move X0, [X0+1800]
	093 Call 0x1C17CF4
	094 Move W8, 1
	095 Move [X21+3865], W8
	096 Move W8, 1
	097 Move [X19+280], X31
	098 Move [X19+288], W8
	099 Move X0, [X20]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move X0, X31
	105 Call Stopwatch.GetTimestamp
	106 Move [X19+272], X0
	107 Move X0, X19
	108 Move X20, [X31+32]
	109 Move X19, [X31+40]
	110 Move X22, [X31+16]
	111 Move X21, [X31+24]
	112 Move X30, [X31+8]
	113 Move V8, [X31+48]
	114 Call ClientTimeProvider.UpdateIncomingTargets, X0
	115 Return 
	116 Call 0x1C17F20

Method: System.Void SaveInterpDelaySample(System.Double interpDelay)

Disassembly:
	0x01EDD038 MOV V10.16B, V1.16B
	0x01EDD03C MOV V11.16B, V0.16B
	0x01EDD040 MOV X19, X0
	0x01EDD044 BL 0x33BDD8C
	0x01EDD048 STP D11, D10, [X19 + 0x10]
	0x01EDD04C STP D9, D8, [X19 + 0x20]
	0x01EDD050 STR X31, [X19 + 0x30]
	0x01EDD054 LDP X30, X19, [X31 + 0x20]
	0x01EDD058 LDP D9, D8, [X31 + 0x10]
	0x01EDD05C LDP D11, D10, [X31], #0x30
	0x01EDD060 RET
	0x01EDD064 LDR V0, [X0 + 0x30]
	0x01EDD068 RET
	0x01EDD06C LDR V2, [X0 + 0x28]
	0x01EDD070 FSUB D0, D1, D0
	0x01EDD074 FCMP D0, D2
	0x01EDD078 B.LE 0x1EDD084
	0x01EDD07C ADD X8, X0, 0x18
	0x01EDD080 B 0x1EDD098
	0x01EDD084 LDR V1, [X0 + 0x20]
	0x01EDD088 FCMP D0, D1
	0x01EDD08C FMOV D0, X31
	0x01EDD090 B.PL 0x1EDD09C
	0x01EDD094 ADD X8, X0, 0x10
	0x01EDD098 LDR V0, [X8]
	0x01EDD09C STR D0, [X0 + 0x30]
	0x01EDD0A0 RET
	0x01EDD0A4 STR X31, [X0 + 0x30]
	0x01EDD0A8 RET
	0x01EDD0AC STR X31, [X0 + 0x30]
	0x01EDD0B0 RET
	0x01EDD0B4 LDR V0, [X0]
	0x01EDD0B8 RET
	0x01EDD0BC STR D0, [X0]
	0x01EDD0C0 RET
	0x01EDD0C4 LDR V0, [X0 + 0x8]
	0x01EDD0C8 RET
	0x01EDD0CC STR D0, [X0 + 0x8]
	0x01EDD0D0 RET
	0x01EDD0D4 LDR V0, [X0 + 0x10]
	0x01EDD0D8 RET
	0x01EDD0DC STR D0, [X0 + 0x10]
	0x01EDD0E0 RET
	0x01EDD0E4 STP X30, X21, [X31 - 0x20]!
	0x01EDD0E8 STP X20, X19, [X31 + 0x10]
	0x01EDD0EC LDR X8, [X2 + 0x8]
	0x01EDD0F0 STP X1, X2, [X0 + 0x20]
	0x01EDD0F4 MOV X19, X0
	0x01EDD0F8 MOV X20, X1
	0x01EDD0FC STR X8, [X0 + 0x10]
	0x01EDD100 LDRB W21, [X2 + 0x52]
	0x01EDD104 STR X0, [X0 + 0x40]
	0x01EDD108 MOV X0, X2
	0x01EDD10C BL 0x1C16D84
	0x01EDD110 TBZ X0, 0x0, 0x1EDD128
	0x01EDD114 CBNZ W21, 0x1EDD12C
	0x01EDD118 ADRP X8, 0xFFFFFFFFFFABA000
	0x01EDD11C ADD X8, X8, 0xDA0
	0x01EDD120 STR X8, [X19 + 0x18]
	0x01EDD124 B 0x1EDD13C
	0x01EDD128 CBZ X20, 0x1EDD154
	0x01EDD12C LDR X8, [X19 + 0x10]
	0x01EDD130 LDR X9, [X19 + 0x20]
	0x01EDD134 STR X8, [X19 + 0x18]
	0x01EDD138 STR X9, [X19 + 0x40]
	0x01EDD13C ADRP X8, 0xFFFFFFFFFFABA000
	0x01EDD140 ADD X8, X8, 0xD60
	0x01EDD144 STR X8, [X19 + 0x38]
	0x01EDD148 LDP X20, X19, [X31 + 0x10]
	0x01EDD14C LDP X30, X21, [X31], #0x20
	0x01EDD150 RET
	0x01EDD154 ADRP X1, 0xFFFFFFFFFEC3E000
	0x01EDD158 ADD X1, X1, 0xEE3
	0x01EDD15C MOV X0, X31
	0x01EDD160 BL 0x1C16F3C
	0x01EDD164 MOV X1, X31
	0x01EDD168 BL 0x1C16DEC
	0x01EDD16C LDR X8, [X0 + 0x40]
	0x01EDD170 LDR X2, [X0 + 0x18]
	0x01EDD174 LDR X1, [X0 + 0x28]
	0x01EDD178 MOV X0, X8
	0x01EDD17C BR X2
	0x01EDD180 STR X30, [X31 - 0x10]!
	0x01EDD184 MOV X3, X2
	0x01EDD188 MOV X2, X1
	0x01EDD18C ADD X1, X31, 0x8
	0x01EDD190 STR X31, [X31 + 0x8]
	0x01EDD194 BL 0x1C16CB0
	0x01EDD198 LDR X30, [X31], #0x10
	0x01EDD19C RET
	0x01EDD1A0 MOV X0, X1

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x24FC000
	008 Move W8, [X20+3864]
	009 Move V8, V0
	010 Move X19, X0
	011 Compare W8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, 0x221F000
	014 Move X0, [X0+1800]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+3864], W8
	018 Move W8, [X19+368]
	019 Move X20, 0x221F000
	020 Move X21, [X19+360]
	021 Move X20, [X20+1800]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X22, 0x24FC000
	024 Move W8, [X22+3863]
	025 Compare W8, 0
	026 JumpIfNotEqual {32}
	027 Move X0, 0x221F000
	028 Move X0, [X0+1800]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+3863], W8
	032 Move X0, [X20]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X31
	038 Call Stopwatch.GetTimestamp
	039 Move X8, [X19+352]
	040 Add X9, X0, X21
	041 Subtract X21, X9, X8
	042 Move X0, [X20]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {48}
	046 Call 0x1C17DFC
	047 Move X0, [X20]
	048 Move X8, [X0+184]
	049 Move V1, [X19+80]
	050 NotImplemented "Instruction SCVTF not yet implemented."
	051 Move V0, [X8]
	052 NotImplemented "Instruction SCVTF not yet implemented."
	053 NotImplemented "Instruction FDIV not yet implemented."
	054 NotImplemented "Instruction FCMP not yet implemented."
	055 Move X0, [X19+264]
	056 Compare X0, 0
	057 JumpIfEqual {104}
	058 Move X1, X31
	059 Call TimeSeries.get_IsEmpty, X0
	060 Move X8, [X19+264]
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {71}
	065 Compare X8, 0
	066 JumpIfEqual {104}
	067 Move V0, [X19+80]
	068 Move X0, X8
	069 Move X1, X31
	070 Call TimeSeries.Fill, X0, V0
	071 Compare X8, 0
	072 JumpIfEqual {104}
	073 Move X0, X8
	074 Move V0, V8
	075 Move X1, X31
	076 Call TimeSeries.Add, X0, V0
	077 Move X21, 0x24FC000
	078 Move W8, [X21+3865]
	079 Compare W8, 0
	080 JumpIfNotEqual {86}
	081 Move X0, 0x221F000
	082 Move X0, [X0+1800]
	083 Call 0x1C17CF4
	084 Move W8, 1
	085 Move [X21+3865], W8
	086 Move W8, 1
	087 Move [X19+360], X31
	088 Move [X19+368], W8
	089 Move X0, [X20]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move X0, X31
	095 Call Stopwatch.GetTimestamp
	096 Move [X19+352], X0
	097 Move X20, [X31+32]
	098 Move X19, [X31+40]
	099 Move X22, [X31+16]
	100 Move X21, [X31+24]
	101 Move X30, [X31+8]
	102 Move V8, [X31+48]
	103 Return 
	104 Call 0x1C17F20

Method: System.Double RoundToNearestMultiple(System.Double x, System.Double round, System.Boolean minimumOne = False)

Disassembly:
	0x01EDD1A4 MOV X1, X31
	0x01EDD1A8 B 0x1C16CB4
	0x01EDD1AC SUB X31, X31, 0x40
	0x01EDD1B0 STP X30, X21, [X31 + 0x20]
	0x01EDD1B4 STP X20, X19, [X31 + 0x30]
	0x01EDD1B8 MRS X19, 0xC000
	0x01EDD1BC LDR X8, [X19 + 0x28]
	0x01EDD1C0 ADRP X20, 0x24FC000
	0x01EDD1C4 ADRP X21, 0x2221000
	0x01EDD1C8 STR X8, [X31 + 0x18]
	0x01EDD1CC LDRB W8, [X20 + 0x562]
	0x01EDD1D0 LDR X21, [X21 + 0x168]
	0x01EDD1D4 TBNZ X8, 0x0, 0x1EDD1EC
	0x01EDD1D8 ADRP X0, 0x2221000
	0x01EDD1DC LDR X0, [X0 + 0x168]
	0x01EDD1E0 BL 0x1C16CF4
	0x01EDD1E4 MOVZ W8, 0x1
	0x01EDD1E8 STRB W8, [X20 + 0x562]
	0x01EDD1EC LDR X0, [X21]
	0x01EDD1F0 LDR W8, [X0 + 0xE0]
	0x01EDD1F4 CBNZ W8, 0x1EDD1FC
	0x01EDD1F8 BL 0x1C16DFC
	0x01EDD1FC MOV X0, X31
	0x01EDD200 BL 0x1E90ABC
	0x01EDD204 MOV X2, X31
	0x01EDD208 BL 0x1E916D0
	0x01EDD20C STP X0, X1, [X31 + 0x8]
	0x01EDD210 ADD X0, X31, 0x8
	0x01EDD214 MOV X1, X31
	0x01EDD218 BL 0x1E918F8
	0x01EDD21C LDR X8, [X19 + 0x28]
	0x01EDD220 LDR X9, [X31 + 0x18]
	0x01EDD224 CMP X8, X9
	0x01EDD228 B.NE 0x1EDD23C
	0x01EDD22C LDP X20, X19, [X31 + 0x30]
	0x01EDD230 LDP X30, X21, [X31 + 0x20]
	0x01EDD234 ADD X31, X31, 0x40
	0x01EDD238 RET
	0x01EDD23C BL 0x3EB1B20
	0x01EDD240 STP X30, X19, [X31 - 0x10]!
	0x01EDD244 MOV X1, X31
	0x01EDD248 MOV X19, X0
	0x01EDD24C BL 0x33BDD8C
	0x01EDD250 BL 0x1EDD1AC
	0x01EDD254 STR D0, [X19 + 0x10]
	0x01EDD258 LDP X30, X19, [X31], #0x10
	0x01EDD25C RET
	0x01EDD260 STR D8, [X31 - 0x20]!
	0x01EDD264 STP X30, X19, [X31 + 0x10]
	0x01EDD268 MOV X1, X31
	0x01EDD26C MOV V8.16B, V0.16B
	0x01EDD270 MOV X19, X0
	0x01EDD274 BL 0x33BDD8C
	0x01EDD278 STR D8, [X19 + 0x10]
	0x01EDD27C LDP X30, X19, [X31 + 0x10]
	0x01EDD280 LDR V8, [X31], #0x20
	0x01EDD284 RET
	0x01EDD288 LDR V0, [X0 + 0x10]
	0x01EDD28C SCVTF D1, W1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x24FD000
	009 Move X21, 0x2217000
	010 Move W8, [X20+1368]
	011 Move X21, [X21+1448]
	012 Move W19, W1
	013 Move V8, V1
	014 Move V9, V0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x2217000
	020 Move X0, [X0+1448]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+1368], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 NotImplemented "Instruction FDIV not yet implemented."
	030 Add X0, X31, 8
	031 Move V0, V9
	032 Call 0x3EB2C00
	033 NotImplemented "Instruction FCMP not yet implemented."
	034 Move D1, -0.5
	035 NotImplemented "Instruction FCMP not yet implemented."
	036 Move V0, [X31+8]
	037 Move D1, -1
	038 Move D1, 0.5
	039 NotImplemented "Instruction FCMP not yet implemented."
	040 Move V0, [X31+8]
	041 Move D1, 1
	042 NotImplemented "Instruction FCVTZS not yet implemented."
	043 Add D1, D0, D1
	044 And X31, X8, 1
	045 NotImplemented "Instruction FCSEL not yet implemented."
	046 Add D0, D9, D1
	047 NotImplemented "Instruction FRINTP not yet implemented."
	048 Add D0, D9, D1
	049 NotImplemented "Instruction FRINTM not yet implemented."
	050 Move D1, 1
	051 NotImplemented "Instruction FCMP not yet implemented."
	052 NotImplemented "Instruction CSET not yet implemented."
	053 And W31, W8, W19
	054 NotImplemented "Instruction FCSEL not yet implemented."
	055 Multiply D0, D0, D8
	056 Move X20, [X31+48]
	057 Move X19, [X31+56]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 Move D9, [X31+16]
	061 Move D8, [X31+24]
	062 Add X31, X31, 64
	063 Return V0

Method: System.Void UpdateOutgoingTargets()

Disassembly:
	0x01EDCE10 MUL X9, X9, X11
	0x01EDCE14 UBFM X9, X9, 0x39, 0x3F
	0x01EDCE18 CMP W9, W10
	0x01EDCE1C B.CS 0x1EDCE38
	0x01EDCE20 ADD X8, X8, X9, 0x2, LSL
	0x01EDCE24 LDR W0, [X8 + 0x20]
	0x01EDCE28 LDP X20, X19, [X31 + 0x10]
	0x01EDCE2C LDP X30, X21, [X31], #0x20
	0x01EDCE30 RET
	0x01EDCE34 BL 0x1C16F20
	0x01EDCE38 BL 0x1C16F28
	0x01EDCE3C STP X30, X27, [X31 - 0x50]!
	0x01EDCE40 STP X26, X25, [X31 + 0x10]
	0x01EDCE44 STP X24, X23, [X31 + 0x20]
	0x01EDCE48 STP X22, X21, [X31 + 0x30]
	0x01EDCE4C STP X20, X19, [X31 + 0x40]
	0x01EDCE50 ADRP X23, 0x24FD000
	0x01EDCE54 LDRB W8, [X23 + 0x55F]
	0x01EDCE58 MOV W22, W3
	0x01EDCE5C MOV W21, W2
	0x01EDCE60 MOV X20, X1
	0x01EDCE64 MOV X19, X0
	0x01EDCE68 CBNZ W8, 0x1EDCE80
	0x01EDCE6C ADRP X0, 0x221E000
	0x01EDCE70 LDR X0, [X0 + 0xC68]
	0x01EDCE74 BL 0x1C16CF4
	0x01EDCE78 MOVZ W8, 0x1
	0x01EDCE7C STRB W8, [X23 + 0x55F]
	0x01EDCE80 ADRP X24, 0x221E000
	0x01EDCE84 LDR X24, [X24 + 0xC68]
	0x01EDCE88 LDRSW X23, [X20, W21, SXTW]
	0x01EDCE8C LDR X0, [X24]
	0x01EDCE90 LDR W8, [X0 + 0xE0]
	0x01EDCE94 CBNZ W8, 0x1EDCE9C
	0x01EDCE98 BL 0x1C16DFC
	0x01EDCE9C ADRP X25, 0x24FC000
	0x01EDCEA0 LDRB W8, [X25 + 0xF14]
	0x01EDCEA4 CBNZ W8, 0x1EDCEBC
	0x01EDCEA8 ADRP X0, 0x221E000
	0x01EDCEAC LDR X0, [X0 + 0xC68]
	0x01EDCEB0 BL 0x1C16CF4
	0x01EDCEB4 MOVZ W8, 0x1
	0x01EDCEB8 STRB W8, [X25 + 0xF14]
	0x01EDCEBC LDR X0, [X24]
	0x01EDCEC0 LDR W8, [X0 + 0xE0]
	0x01EDCEC4 CBNZ W8, 0x1EDCED0
	0x01EDCEC8 BL 0x1C16DFC
	0x01EDCECC LDR X0, [X24]
	0x01EDCED0 LDR X8, [X0 + 0xB8]
	0x01EDCED4 LDR X8, [X8]
	0x01EDCED8 CBZ X8, 0x1EDD018
	0x01EDCEDC SUB W22, W21, W22
	0x01EDCEE0 MOV W9, W22
	0x01EDCEE4 MOV W9, W9
	0x01EDCEE8 MOV W9, W9
	0x01EDCEEC LDR W10, [X8 + 0x18]
	0x01EDCEF0 MOV W9, W9
	0x01EDCEF4 MOVZ W11, 0xACDD
	0x01EDCEF8 MOV W9, W9
	0x01EDCEFC MOVK W11, 0x7C40000
	0x01EDCF00 MUL W9, W9, W11
	0x01EDCF04 UBFM W9, W9, 0x1B, 0x1F
	0x01EDCF08 CMP W9, W10
	0x01EDCF0C B.CS 0x1EDD01C
	0x01EDCF10 ADD X8, X8, W9, UXTW
	0x01EDCF14 LDRB W8, [X8 + 0x20]
	0x01EDCF18 SBFM X9, X23, 0x3F, 0x3F
	0x01EDCF1C EOR X23, X9, X23, 0x1
	0x01EDCF20 MOV X0, X23
	0x01EDCF24 ADD X27, X8, 0x4
	0x01EDCF28 UBFM X26, X27, 0x2, 0x3F
	0x01EDCF2C AND W8, W27, 0x1FC
	0x01EDCF30 MOV X1, X31
	0x01EDCF34 ADD W25, W8, W26

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x24FE000
	008 Move W8, [X20+1369]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2218000
	015 Move X0, [X0+1448]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1369], W8
	019 Move X0, [X19+248]
	020 Compare X0, 0
	021 JumpIfEqual {85}
	022 Move X20, 0x2218000
	023 Move X20, [X20+1448]
	024 Move D0, 0.5
	025 Move X1, X31
	026 Call TimeSeries.Smoothed, X0, V0
	027 Move X0, [X20]
	028 Move D10, [X19+88]
	029 Move D9, [X19+96]
	030 Move V8, V0
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Subtract D0, D8, D10
	036 Subtract D1, D0, D9
	037 Move D0, X31
	038 Move X0, X31
	039 Call Math.Max, V0, V1
	040 Move V1, [X19+96]
	041 Move V2, [X19+344]
	042 Move V3, [X19+32]
	043 Move D4, 1
	044 Add D0, D0, D1
	045 Multiply D0, D0, D2
	046 Move [X19+176], D0
	047 Subtract D0, D4, D3
	048 Move X0, X31
	049 Call TimeSeries.InverseCdfNormal, V0
	050 Move X0, [X19+248]
	051 Compare X0, 0
	052 JumpIfEqual {85}
	053 Move V9, [X19+504]
	054 Move X1, X31
	055 Move V8, V0
	056 Call TimeSeries.get_Dev, X0
	057 Move V1, V0
	058 NotImplemented "Instruction FCVT not yet implemented."
	059 Move X0, X31
	060 Call Math.Max, V0, V1
	061 Move V2, [X19+500]
	062 Move V1, [X19+72]
	063 Multiply D8, D8, D0
	064 Move W1, 1
	065 NotImplemented "Instruction FCVT not yet implemented."
	066 Call ClientTimeProvider.RoundToNearestMultiple, X0, V0, V1, X1
	067 Move V1, [X19+48]
	068 Move V2, [X19+344]
	069 Move V3, [X19+144]
	070 Move X30, [X31+24]
	071 Multiply D0, D0, D1
	072 Add D0, D8, D0
	073 Multiply D0, D2, D0
	074 Subtract D0, D0, D3
	075 Move D1, 0.5
	076 Multiply D0, D0, D1
	077 Add D0, D3, D0
	078 Move [X19+144], D0
	079 Move X20, [X31+32]
	080 Move X19, [X31+40]
	081 Move D9, [X31+8]
	082 Move D8, [X31+16]
	083 Move V10, [X31+48]
	084 Return 
	085 Call 0x1C17F20

Method: System.Void UpdateIncomingTargets()

Disassembly:
	0x01EDCF38 BL 0x1EDCD54
	0x01EDCF3C MOVZ W9, 0xAAAB
	0x01EDCF40 ADD W8, W0, 0x6
	0x01EDCF44 MOVK W9, 0x2AAA0000
	0x01EDCF48 SMADDL X8, X8, X9, X31
	0x01EDCF4C UBFM X9, X8, 0x3F, 0x3F
	0x01EDCF50 UBFM X8, X8, 0x20, 0x3F
	0x01EDCF54 ADD W8, W8, W9
	0x01EDCF58 ADD W9, W25, W8
	0x01EDCF5C MOVZ W10, 0x6
	0x01EDCF60 MADD W2, W8, W10, W9
	0x01EDCF64 CMP W2, 0x41
	0x01EDCF68 B.GE 0x1EDCFC0
	0x01EDCF6C SUB W11, W26, 0x1
	0x01EDCF70 MOVZ W12, 0x1
	0x01EDCF74 SUB W8, W8, 0x1
	0x01EDCF78 UBFM W10, W27, 0x2, 0x1F
	0x01EDCF7C AND X11, X11, 0x1F
	0x01EDCF80 LSLV W8, W12, W8
	0x01EDCF84 LSLV X9, X23, X9
	0x01EDCF88 LSLV W10, W22, W10
	0x01EDCF8C LSLV X11, X12, X11
	0x01EDCF90 LSLV W8, W8, W25
	0x01EDCF94 MOV X0, X19
	0x01EDCF98 LDP X20, X19, [X31 + 0x40]
	0x01EDCF9C LDP X22, X21, [X31 + 0x30]
	0x01EDCFA0 LDP X24, X23, [X31 + 0x20]
	0x01EDCFA4 LDP X26, X25, [X31 + 0x10]
	0x01EDCFA8 ORR X10, X11, X10, 0x0
	0x01EDCFAC ORR X8, X10, X8, 0x0
	0x01EDCFB0 ORR X1, X9, X8, 0x0
	0x01EDCFB4 MOV X3, X31
	0x01EDCFB8 LDP X30, X27, [X31], #0x50
	0x01EDCFBC B 0x1EF9A4C
	0x01EDCFC0 MOVZ W2, 0x4
	0x01EDCFC4 MOV X0, X19
	0x01EDCFC8 MOV W1, W22
	0x01EDCFCC MOV X3, X31
	0x01EDCFD0 SXTW X21, W21
	0x01EDCFD4 BL 0x1EFA33C
	0x01EDCFD8 LDR X0, [X24]
	0x01EDCFDC LDRSW X20, [X20, X21, LSL #2]
	0x01EDCFE0 LDR W8, [X0 + 0xE0]
	0x01EDCFE4 CBNZ W8, 0x1EDCFEC
	0x01EDCFE8 BL 0x1C16DFC
	0x01EDCFEC SBFM X8, X20, 0x3F, 0x3F
	0x01EDCFF0 EOR X1, X8, X20, 0x1
	0x01EDCFF4 MOV X0, X19
	0x01EDCFF8 LDP X20, X19, [X31 + 0x40]
	0x01EDCFFC LDP X22, X21, [X31 + 0x30]
	0x01EDD000 LDP X24, X23, [X31 + 0x20]
	0x01EDD004 LDP X26, X25, [X31 + 0x10]
	0x01EDD008 MOVZ W2, 0x6
	0x01EDD00C MOV X3, X31
	0x01EDD010 LDP X30, X27, [X31], #0x50
	0x01EDD014 B 0x1EFA198
	0x01EDD018 BL 0x1C16F20
	0x01EDD01C BL 0x1C16F28
	0x01EDD020 STP D11, D10, [X31 - 0x30]!
	0x01EDD024 STP D9, D8, [X31 + 0x10]
	0x01EDD028 STP X30, X19, [X31 + 0x20]
	0x01EDD02C MOV X1, X31
	0x01EDD030 MOV V8.16B, V3.16B
	0x01EDD034 MOV V9.16B, V2.16B

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x24FE000
	008 Move W8, [X20+1370]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2218000
	015 Move X0, [X0+1448]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1370], W8
	019 Move V0, [X19+40]
	020 Move D1, 1
	021 Move X0, X31
	022 Subtract D0, D1, D0
	023 Call TimeSeries.InverseCdfNormal, V0
	024 Move X0, [X19+296]
	025 Compare X0, 0
	026 JumpIfEqual {75}
	027 Move X1, X31
	028 Move V8, V0
	029 Call TimeSeries.get_Dev, X0
	030 Move X0, [X19+248]
	031 Compare X0, 0
	032 JumpIfEqual {75}
	033 Move X20, 0x2218000
	034 Move X20, [X20+1448]
	035 Move X1, X31
	036 Move V9, V0
	037 Call TimeSeries.get_Dev, X0
	038 Move X0, [X20]
	039 Move V10, V0
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move V0, V9
	045 Move V1, V10
	046 Move X0, X31
	047 Call Math.Max, V0, V1
	048 Move X8, [X19+296]
	049 Compare X8, 0
	050 JumpIfEqual {75}
	051 Move V2, [X8+16]
	052 Move V1, [X19+80]
	053 Multiply D8, D8, D0
	054 Move W1, 1
	055 Move V0, V2
	056 Call ClientTimeProvider.RoundToNearestMultiple, X0, V0, V1, X1
	057 Move V1, [X19+56]
	058 Move V2, [X19+344]
	059 Move V3, [X19+208]
	060 Move X30, [X31+24]
	061 Multiply D0, D0, D1
	062 Add D0, D8, D0
	063 Multiply D0, D2, D0
	064 Subtract D0, D0, D3
	065 Move D1, 0.5
	066 Multiply D0, D0, D1
	067 Add D0, D3, D0
	068 Move [X19+208], D0
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move D9, [X31+8]
	072 Move D8, [X31+16]
	073 Move V10, [X31+48]
	074 Return 
	075 Call 0x1C17F20

Method: System.Void Update(System.Double unscaledDeltaTime)

Disassembly:
	0x01EDD290 FMUL D0, D0, D1
	0x01EDD294 STR D0, [X0 + 0x18]
	0x01EDD298 RET
	0x01EDD29C LDR V1, [X0 + 0x18]
	0x01EDD2A0 FADD D0, D1, D0
	0x01EDD2A4 STR D0, [X0 + 0x18]
	0x01EDD2A8 RET
	0x01EDD2AC MOVZ W0, 0x1
	0x01EDD2B0 RET
	0x01EDD2B4 STP X30, X19, [X31 - 0x10]!
	0x01EDD2B8 MOV X19, X0
	0x01EDD2BC MOV X0, X1
	0x01EDD2C0 MOV X1, X31
	0x01EDD2C4 BL 0x1E918F8
	0x01EDD2C8 STR D0, [X19 + 0x10]
	0x01EDD2CC LDP X30, X19, [X31], #0x10
	0x01EDD2D0 RET
	0x01EDD2D4 RET
	0x01EDD2D8 LDR V0, [X0 + 0x10]
	0x01EDD2DC SCVTF D1, W1
	0x01EDD2E0 FMUL D0, D0, D1
	0x01EDD2E4 STR D0, [X0 + 0x18]
	0x01EDD2E8 RET
	0x01EDD2EC RET
	0x01EDD2F0 LDR V1, [X0 + 0x18]
	0x01EDD2F4 FADD D0, D1, D0
	0x01EDD2F8 STR D0, [X0 + 0x18]
	0x01EDD2FC RET
	0x01EDD300 RET
	0x01EDD304 RET
	0x01EDD308 RET
	0x01EDD30C LDR V0, [X0 + 0x18]
	0x01EDD310 MOV V1.16B, V0.16B
	0x01EDD314 MOV V2.16B, V0.16B
	0x01EDD318 RET
	0x01EDD31C RET
	0x01EDD320 STR D12, [X31 - 0x40]!
	0x01EDD324 STP D11, D10, [X31 + 0x10]
	0x01EDD328 STP D9, D8, [X31 + 0x20]
	0x01EDD32C STP X30, X19, [X31 + 0x30]
	0x01EDD330 MOV X1, X31
	0x01EDD334 MOV V8.16B, V4.16B
	0x01EDD338 MOV V9.16B, V3.16B
	0x01EDD33C MOV V10.16B, V2.16B
	0x01EDD340 MOV V11.16B, V1.16B
	0x01EDD344 MOV V12.16B, V0.16B
	0x01EDD348 MOV X19, X0
	0x01EDD34C BL 0x33BDD8C
	0x01EDD350 FMUL D0, D12, D11
	0x01EDD354 FMUL D1, D12, D10
	0x01EDD358 STP D9, D8, [X19 + 0x28]
	0x01EDD35C STP X31, X31, [X19 + 0x40]
	0x01EDD360 STP D12, D0, [X19 + 0x10]
	0x01EDD364 STR D1, [X19 + 0x20]
	0x01EDD368 STR X31, [X19 + 0x38]
	0x01EDD36C LDP X30, X19, [X31 + 0x30]
	0x01EDD370 LDP D9, D8, [X31 + 0x20]
	0x01EDD374 LDP D11, D10, [X31 + 0x10]
	0x01EDD378 LDR V12, [X31], #0x40
	0x01EDD37C RET
	0x01EDD380 LDR V0, [X0 + 0x48]
	0x01EDD384 RET
	0x01EDD388 LDR V4, [X0 + 0x10]
	0x01EDD38C LDP D3, D6, [X0 + 0x30]
	0x01EDD390 FSUB D1, D1, D0
	0x01EDD394 FMUL D5, D1, D4
	0x01EDD398 FCMP D5, D3
	0x01EDD39C FSUB D0, D0, D6
	0x01EDD3A0 MOV V4.16B, V3.16B
	0x01EDD3A4 B.GT 0x1EDD3BC
	0x01EDD3A8 LDR V6, [X0 + 0x28]
	0x01EDD3AC MOV V4.16B, V5.16B
	0x01EDD3B0 FCMP D5, D6
	0x01EDD3B4 B.PL 0x1EDD3BC
	0x01EDD3B8 MOV V4.16B, V6.16B
	0x01EDD3BC LDP D5, D6, [X0 + 0x18]
	0x01EDD3C0 LDR V7, [X0 + 0x40]
	0x01EDD3C4 FMUL D5, D5, D2
	0x01EDD3C8 FDIV D2, D6, D2
	0x01EDD3CC FMUL D1, D1, D5
	0x01EDD3D0 FMUL D0, D0, D2
	0x01EDD3D4 FSUB D0, D1, D0
	0x01EDD3D8 FADD D0, D7, D0
	0x01EDD3DC FADD D1, D4, D0
	0x01EDD3E0 FCMP D1, D3
	0x01EDD3E4 STP D0, D1, [X0 + 0x40]
	0x01EDD3E8 B.LE 0x1EDD3F8
	0x01EDD3EC FSUB D1, D1, D3
	0x01EDD3F0 FSUB D0, D0, D1
	0x01EDD3F4 B 0x1EDD40C
	0x01EDD3F8 LDR V3, [X0 + 0x28]
	0x01EDD3FC FCMP D1, D3
	0x01EDD400 B.PL 0x1EDD410
	0x01EDD404 FSUB D1, D3, D1
	0x01EDD408 FADD D0, D0, D1
	0x01EDD40C STP D0, D3, [X0 + 0x40]
	0x01EDD410 RET
	0x01EDD414 STP X31, X31, [X0 + 0x38]
	0x01EDD418 STR X31, [X0 + 0x48]
	0x01EDD41C RET
	0x01EDD420 STR X31, [X0 + 0x48]
	0x01EDD424 RET
	0x01EDD428 SUB X31, X31, 0x70
	0x01EDD42C STP X29, X30, [X31 + 0x10]
	0x01EDD430 STP X28, X27, [X31 + 0x20]
	0x01EDD434 STP X26, X25, [X31 + 0x30]
	0x01EDD438 STP X24, X23, [X31 + 0x40]
	0x01EDD43C STP X22, X21, [X31 + 0x50]
	0x01EDD440 STP X20, X19, [X31 + 0x60]
	0x01EDD444 ADRP X19, 0x24FC000
	0x01EDD448 ADRP X28, 0x2223000
	0x01EDD44C LDRB W8, [X19 + 0x563]
	0x01EDD450 LDR X28, [X28 + 0x230]
	0x01EDD454 TBNZ X8, 0x0, 0x1EDD544
	0x01EDD458 ADRP X0, 0x2223000
	0x01EDD45C LDR X0, [X0 + 0x238]
	0x01EDD460 BL 0x1C16CF4
	0x01EDD464 ADRP X0, 0x2220000
	0x01EDD468 LDR X0, [X0 + 0x930]
	0x01EDD46C BL 0x1C16CF4
	0x01EDD470 ADRP X0, 0x2220000
	0x01EDD474 LDR X0, [X0 + 0x708]
	0x01EDD478 BL 0x1C16CF4
	0x01EDD47C ADRP X0, 0x2220000
	0x01EDD480 LDR X0, [X0 + 0x808]
	0x01EDD484 BL 0x1C16CF4
	0x01EDD488 ADRP X0, 0x2220000
	0x01EDD48C LDR X0, [X0 + 0x800]
	0x01EDD490 BL 0x1C16CF4
	0x01EDD494 ADRP X0, 0x2223000
	0x01EDD498 LDR X0, [X0 + 0x240]
	0x01EDD49C BL 0x1C16CF4
	0x01EDD4A0 ADRP X0, 0x2223000
	0x01EDD4A4 LDR X0, [X0 + 0x248]
	0x01EDD4A8 BL 0x1C16CF4
	0x01EDD4AC ADRP X0, 0x2223000
	0x01EDD4B0 LDR X0, [X0 + 0x250]
	0x01EDD4B4 BL 0x1C16CF4
	0x01EDD4B8 ADRP X0, 0x2223000
	0x01EDD4BC LDR X0, [X0 + 0x258]
	0x01EDD4C0 BL 0x1C16CF4
	0x01EDD4C4 ADRP X0, 0x2223000
	0x01EDD4C8 LDR X0, [X0 + 0x260]
	0x01EDD4CC BL 0x1C16CF4
	0x01EDD4D0 ADRP X0, 0x2223000
	0x01EDD4D4 LDR X0, [X0 + 0x268]
	0x01EDD4D8 BL 0x1C16CF4
	0x01EDD4DC ADRP X0, 0x2223000
	0x01EDD4E0 LDR X0, [X0 + 0x270]
	0x01EDD4E4 BL 0x1C16CF4
	0x01EDD4E8 ADRP X0, 0x2223000
	0x01EDD4EC LDR X0, [X0 + 0x230]
	0x01EDD4F0 BL 0x1C16CF4
	0x01EDD4F4 ADRP X0, 0x2223000
	0x01EDD4F8 LDR X0, [X0 + 0x278]
	0x01EDD4FC BL 0x1C16CF4
	0x01EDD500 ADRP X0, 0x2223000
	0x01EDD504 LDR X0, [X0 + 0x280]
	0x01EDD508 BL 0x1C16CF4
	0x01EDD50C ADRP X0, 0x2216000
	0x01EDD510 LDR X0, [X0 + 0x6C0]
	0x01EDD514 BL 0x1C16CF4
	0x01EDD518 ADRP X0, 0x2223000
	0x01EDD51C LDR X0, [X0 + 0x288]
	0x01EDD520 BL 0x1C16CF4
	0x01EDD524 ADRP X0, 0x2223000
	0x01EDD528 LDR X0, [X0 + 0x290]
	0x01EDD52C BL 0x1C16CF4
	0x01EDD530 ADRP X0, 0x2223000
	0x01EDD534 LDR X0, [X0 + 0x298]
	0x01EDD538 BL 0x1C16CF4
	0x01EDD53C MOVZ W8, 0x1
	0x01EDD540 STRB W8, [X19 + 0x563]
	0x01EDD544 LDR X8, [X28]
	0x01EDD548 LDR X8, [X8 + 0xB8]
	0x01EDD54C LDRB W9, [X8]
	0x01EDD550 CBNZ W9, 0x1EDDA50
	0x01EDD554 MOVZ W9, 0x1
	0x01EDD558 STRB W9, [X8]
	0x01EDD55C ADRP X20, 0x2220000
	0x01EDD560 LDR X20, [X20 + 0x800]
	0x01EDD564 LDR X0, [X20]
	0x01EDD568 BL 0x1C16F10
	0x01EDD56C ADRP X21, 0x2220000
	0x01EDD570 LDR X21, [X21 + 0x808]
	0x01EDD574 MOV X19, X0
	0x01EDD578 LDR X1, [X21]
	0x01EDD57C BL 0x2A9E704
	0x01EDD580 LDR X8, [X28]
	0x01EDD584 LDR X8, [X8 + 0xB8]
	0x01EDD588 STR X19, [X8 + 0x8]
	0x01EDD58C LDR X0, [X20]
	0x01EDD590 BL 0x1C16F10
	0x01EDD594 LDR X1, [X21]
	0x01EDD598 MOV X19, X0
	0x01EDD59C BL 0x2A9E704
	0x01EDD5A0 LDR X8, [X28]
	0x01EDD5A4 LDR X8, [X8 + 0xB8]
	0x01EDD5A8 STR X19, [X8 + 0x10]
	0x01EDD5AC ADRP X8, 0x2223000
	0x01EDD5B0 LDR X8, [X8 + 0x270]
	0x01EDD5B4 LDR X0, [X8]
	0x01EDD5B8 BL 0x1C16F10
	0x01EDD5BC ADRP X8, 0x2223000
	0x01EDD5C0 LDR X8, [X8 + 0x258]
	0x01EDD5C4 MOV X19, X0
	0x01EDD5C8 LDR X1, [X8]
	0x01EDD5CC BL 0x2F49774
	0x01EDD5D0 MOV X0, X31
	0x01EDD5D4 BL 0x33C0128
	0x01EDD5D8 CBZ X0, 0x1EDDA70
	0x01EDD5DC MOV X1, X31
	0x01EDD5E0 BL 0x33C0134
	0x01EDD5E4 CBZ X0, 0x1EDDA70
	0x01EDD5E8 LDR X8, [X0 + 0x18]
	0x01EDD5EC MOV X20, X0
	0x01EDD5F0 CMP W8, 0x1
	0x01EDD5F4 B.LT 0x1EDD930
	0x01EDD5F8 ADRP X22, 0x2223000
	0x01EDD5FC ADRP X23, 0x2216000
	0x01EDD600 ADRP X24, 0x2223000
	0x01EDD604 LDR X22, [X22 + 0x240]
	0x01EDD608 LDR X23, [X23 + 0x6C0]
	0x01EDD60C LDR X24, [X24 + 0x278]
	0x01EDD610 MOV X29, X31
	0x01EDD614 AND X8, X8, 0x0
	0x01EDD618 CMP X29, W8, UXTW
	0x01EDD61C B.CS 0x1EDDA74
	0x01EDD620 ADD X8, X20, X29, 0x3, LSL
	0x01EDD624 LDR X25, [X8 + 0x20]
	0x01EDD628 ADRP X8, 0x2220000
	0x01EDD62C LDR X8, [X8 + 0x930]
	0x01EDD630 MOV X0, X25
	0x01EDD634 LDR X1, [X8]
	0x01EDD638 BL 0x21A885C
	0x01EDD63C CBZ X0, 0x1EDD654
	0x01EDD640 LDR W8, [X20 + 0x18]
	0x01EDD644 ADD X29, X29, 0x1
	0x01EDD648 CMP X29, W8, SXTW
	0x01EDD64C B.LT 0x1EDD618
	0x01EDD650 B 0x1EDD930
	0x01EDD654 CBZ X25, 0x1EDD880
	0x01EDD658 LDR X8, [X25]
	0x01EDD65C LDR X1, [X8 + 0x230]
	0x01EDD660 LDR X9, [X8 + 0x228]
	0x01EDD664 MOV X0, X25
	0x01EDD668 BLR X9
	0x01EDD66C MOV X25, X0
	0x01EDD670 CBZ X0, 0x1EDD888
	0x01EDD674 LDR W8, [X25 + 0x18]
	0x01EDD678 CMP W8, 0x1
	0x01EDD67C B.LT 0x1EDD640
	0x01EDD680 MOV W21, W31
	0x01EDD684 CMP W21, W8
	0x01EDD688 B.CS 0x1EDD868
	0x01EDD68C ADD X8, X25, W21, 0x3, SXTW
	0x01EDD690 LDR X26, [X8 + 0x20]
	0x01EDD694 CBZ X26, 0x1EDD870
	0x01EDD698 MOV X0, X26
	0x01EDD69C MOV X1, X31
	0x01EDD6A0 BL 0x33970C4
	0x01EDD6A4 TBZ X0, 0x0, 0x1EDD7D0
	0x01EDD6A8 LDR X0, [X23]
	0x01EDD6AC LDR X27, [X22]
	0x01EDD6B0 LDR W8, [X0 + 0xE0]
	0x01EDD6B4 CBNZ W8, 0x1EDD6BC
	0x01EDD6B8 BL 0x1C16DFC
	0x01EDD6BC MOV X0, X27
	0x01EDD6C0 MOV X1, X31
	0x01EDD6C4 BL 0x338C698
	0x01EDD6C8 CBZ X0, 0x1EDD878
	0x01EDD6CC LDR X8, [X0]
	0x01EDD6D0 LDR X9, [X8 + 0x2A8]
	0x01EDD6D4 LDR X2, [X8 + 0x2B0]
	0x01EDD6D8 MOV X1, X26
	0x01EDD6DC BLR X9
	0x01EDD6E0 TBZ X0, 0x0, 0x1EDD7D0
	0x01EDD6E4 LDR X0, [X23]
	0x01EDD6E8 LDR X27, [X24]
	0x01EDD6EC LDR W8, [X0 + 0xE0]
	0x01EDD6F0 CBNZ W8, 0x1EDD6F8
	0x01EDD6F4 BL 0x1C16DFC
	0x01EDD6F8 MOV X0, X27
	0x01EDD6FC MOV X1, X31
	0x01EDD700 BL 0x338C698
	0x01EDD704 MOV X1, X0
	0x01EDD708 LDR X8, [X26]
	0x01EDD70C LDR X9, [X8 + 0x208]
	0x01EDD710 LDR X3, [X8 + 0x210]
	0x01EDD714 MOV X0, X26
	0x01EDD718 MOV W2, W31
	0x01EDD71C BLR X9
	0x01EDD720 MOV X8, X0
	0x01EDD724 CBZ X0, 0x1EDD7E4
	0x01EDD728 LDR W9, [X8 + 0x18]
	0x01EDD72C CMP W9, 0x1
	0x01EDD730 B.NE 0x1EDD7D0
	0x01EDD734 LDR X2, [X8 + 0x20]
	0x01EDD738 CBZ X2, 0x1EDD7D0
	0x01EDD73C ADRP X8, 0x2223000
	0x01EDD740 LDR X8, [X8 + 0x280]
	0x01EDD744 LDR X9, [X2]
	0x01EDD748 LDR X8, [X8]
	0x01EDD74C CMP X9, X8
	0x01EDD750 B.NE 0x1EDD7D0
	0x01EDD754 ADRP X8, 0x2223000
	0x01EDD758 LDR X8, [X8 + 0x298]
	0x01EDD75C STP X31, X31, [X31]
	0x01EDD760 LDR X3, [X8]
	0x01EDD764 ADD X0, X31, 0x0
	0x01EDD768 MOV X1, X26
	0x01EDD76C BL 0x27ABC80
	0x01EDD770 CBZ X19, 0x1EDD7EC
	0x01EDD774 ADRP X9, 0x2223000
	0x01EDD778 LDP X1, X2, [X31]
	0x01EDD77C LDR W10, [X19 + 0x1C]
	0x01EDD780 LDR X8, [X19 + 0x10]
	0x01EDD784 LDR X9, [X9 + 0x248]
	0x01EDD788 ADD W10, W10, 0x1
	0x01EDD78C LDR X9, [X9]
	0x01EDD790 STR W10, [X19 + 0x1C]
	0x01EDD794 CBZ X8, 0x1EDD7F4
	0x01EDD798 LDRSW X10, [X19 + 0x18]
	0x01EDD79C LDR W11, [X8 + 0x18]
	0x01EDD7A0 CMP W10, W11
	0x01EDD7A4 B.CS 0x1EDD7BC
	0x01EDD7A8 ADD W9, W10, 0x1
	0x01EDD7AC ADD X8, X8, X10, 0x4, LSL
	0x01EDD7B0 STR W9, [X19 + 0x18]
	0x01EDD7B4 STP X1, X2, [X8 + 0x20]
	0x01EDD7B8 B 0x1EDD7D0
	0x01EDD7BC LDR X8, [X9 + 0x20]
	0x01EDD7C0 LDR X8, [X8 + 0xC0]
	0x01EDD7C4 LDR X3, [X8 + 0x70]
	0x01EDD7C8 MOV X0, X19
	0x01EDD7CC BL 0x2F49F80
	0x01EDD7D0 LDR W8, [X25 + 0x18]
	0x01EDD7D4 ADD W21, W21, 0x1
	0x01EDD7D8 CMP W21, W8
	0x01EDD7DC B.LT 0x1EDD684
	0x01EDD7E0 B 0x1EDD640
	0x01EDD7E4 BL 0x1C16F20
	0x01EDD7E8 B 0x1EDDA78
	0x01EDD7EC BL 0x1C16F20
	0x01EDD7F0 B 0x1EDDA78
	0x01EDD7F4 BL 0x1C16F20
	0x01EDD7F8 B 0x1EDDA78
	0x01EDD7FC B 0x1EDD80C
	0x01EDD800 B 0x1EDD80C
	0x01EDD804 B 0x1EDD80C
	0x01EDD808 B 0x1EDD80C
	0x01EDD80C CMP W1, 0x1
	0x01EDD810 B.NE 0x1EDD8FC
	0x01EDD814 BL 0x3EB1AD0
	0x01EDD818 MOV X26, X0
	0x01EDD81C ADRP X0, 0x2216000
	0x01EDD820 LDR X0, [X0 + 0x7D0]
	0x01EDD824 BL 0x1C16D08
	0x01EDD828 LDR X8, [X26]
	0x01EDD82C LDR X1, [X8]
	0x01EDD830 BL 0x1C17270
	0x01EDD834 TBZ X0, 0x0, 0x1EDD890
	0x01EDD838 LDR X26, [X26]
	0x01EDD83C BL 0x3EB1AE0
	0x01EDD840 ADRP X0, 0x221E000
	0x01EDD844 LDR X0, [X0 + 0x8B0]
	0x01EDD848 BL 0x1C16D08
	0x01EDD84C LDR W8, [X0 + 0xE0]
	0x01EDD850 CBNZ W8, 0x1EDD858
	0x01EDD854 BL 0x1C16DFC
	0x01EDD858 MOV X0, X26
	0x01EDD85C MOV X1, X31
	0x01EDD860 BL 0x1E3E4C8
	0x01EDD864 B 0x1EDD7D0
	0x01EDD868 BL 0x1C16F28
	0x01EDD86C B 0x1EDDA78
	0x01EDD870 BL 0x1C16F20
	0x01EDD874 B 0x1EDDA78
	0x01EDD878 BL 0x1C16F20
	0x01EDD87C B 0x1EDDA78
	0x01EDD880 BL 0x1C16F20
	0x01EDD884 B 0x1EDDAA0
	0x01EDD888 BL 0x1C16F20
	0x01EDD88C B 0x1EDDA78
	0x01EDD890 MOVZ W0, 0x8
	0x01EDD894 BL 0x3EB1AF0
	0x01EDD898 LDR X8, [X26]
	0x01EDD89C STR X8, [X0]
	0x01EDD8A0 ADRP X1, 0x1FD7000
	0x01EDD8A4 ADD X1, X1, 0xE58
	0x01EDD8A8 MOV X2, X31
	0x01EDD8AC BL 0x3EB1B00
	0x01EDD8B0 B 0x1EDDAA0
	0x01EDD8B4 B 0x1EDD8C0
	0x01EDD8B8 B 0x1EDD8FC
	0x01EDD8BC B 0x1EDD8FC
	0x01EDD8C0 MOV X25, X1
	0x01EDD8C4 MOV X26, X0
	0x01EDD8C8 BL 0x3EB1AE0
	0x01EDD8CC MOV X0, X26
	0x01EDD8D0 MOV X1, X25
	0x01EDD8D4 B 0x1EDD8FC
	0x01EDD8D8 B 0x1EDD8FC
	0x01EDD8DC B 0x1EDD8FC
	0x01EDD8E0 B 0x1EDD8FC
	0x01EDD8E4 B 0x1EDD8FC
	0x01EDD8E8 B 0x1EDD8FC
	0x01EDD8EC B 0x1EDD8FC
	0x01EDD8F0 B 0x1EDD8FC
	0x01EDD8F4 B 0x1EDD8FC
	0x01EDD8F8 B 0x1EDD8FC
	0x01EDD8FC CMP W1, 0x1
	0x01EDD900 B.NE 0x1EDDA78
	0x01EDD904 BL 0x3EB1AD0
	0x01EDD908 MOV X25, X0
	0x01EDD90C ADRP X0, 0x221C000
	0x01EDD910 LDR X0, [X0 + 0xCC0]
	0x01EDD914 BL 0x1C16D08
	0x01EDD918 LDR X8, [X25]
	0x01EDD91C LDR X1, [X8]
	0x01EDD920 BL 0x1C17270
	0x01EDD924 TBZ X0, 0x0, 0x1EDDA80
	0x01EDD928 BL 0x3EB1AE0
	0x01EDD92C B 0x1EDD640
	0x01EDD930 ADRP X22, 0x2223000
	0x01EDD934 LDR X22, [X22 + 0x290]
	0x01EDD938 LDR X0, [X22]
	0x01EDD93C LDR W8, [X0 + 0xE0]
	0x01EDD940 CBNZ W8, 0x1EDD94C
	0x01EDD944 BL 0x1C16DFC
	0x01EDD948 LDR X0, [X22]
	0x01EDD94C LDR X8, [X0 + 0xB8]
	0x01EDD950 LDR X20, [X8 + 0x8]
	0x01EDD954 CBNZ X20, 0x1EDD9A8
	0x01EDD958 LDR W8, [X0 + 0xE0]
	0x01EDD95C CBNZ W8, 0x1EDD968
	0x01EDD960 BL 0x1C16DFC
	0x01EDD964 LDR X0, [X22]
	0x01EDD968 ADRP X9, 0x2223000
	0x01EDD96C LDR X8, [X0 + 0xB8]
	0x01EDD970 LDR X9, [X9 + 0x238]
	0x01EDD974 LDR X21, [X8]
	0x01EDD978 LDR X0, [X9]
	0x01EDD97C BL 0x1C16F10
	0x01EDD980 ADRP X8, 0x2223000
	0x01EDD984 LDR X8, [X8 + 0x288]
	0x01EDD988 MOV X1, X21
	0x01EDD98C MOV X3, X31
	0x01EDD990 MOV X20, X0
	0x01EDD994 LDR X2, [X8]
	0x01EDD998 BL 0x2957460
	0x01EDD99C LDR X8, [X22]
	0x01EDD9A0 LDR X8, [X8 + 0xB8]
	0x01EDD9A4 STR X20, [X8 + 0x8]
	0x01EDD9A8 CBZ X19, 0x1EDDA70
	0x01EDD9AC ADRP X8, 0x2223000
	0x01EDD9B0 LDR X8, [X8 + 0x250]
	0x01EDD9B4 MOV X0, X19
	0x01EDD9B8 MOV X1, X20
	0x01EDD9BC LDR X2, [X8]
	0x01EDD9C0 BL 0x2F4BDB4
	0x01EDD9C4 LDR W8, [X19 + 0x18]
	0x01EDD9C8 CMP W8, 0x1
	0x01EDD9CC B.LT 0x1EDDA50
	0x01EDD9D0 ADRP X23, 0x2223000
	0x01EDD9D4 ADRP X24, 0x2220000
	0x01EDD9D8 LDR X23, [X23 + 0x268]
	0x01EDD9DC LDR X24, [X24 + 0x708]
	0x01EDD9E0 MOV W20, W31
	0x01EDD9E4 LDR X2, [X23]
	0x01EDD9E8 MOV X0, X19
	0x01EDD9EC MOV W1, W20
	0x01EDD9F0 BL 0x2F49C7C
	0x01EDD9F4 LDR X8, [X28]
	0x01EDD9F8 MOV X21, X0
	0x01EDD9FC LDR X8, [X8 + 0xB8]
	0x01EDDA00 LDR X0, [X8 + 0x10]
	0x01EDDA04 CBZ X0, 0x1EDDA70
	0x01EDDA08 LDR X3, [X24]
	0x01EDDA0C ADD W20, W20, 0x1
	0x01EDDA10 MOV X22, X1
	0x01EDDA14 MOV X1, X21
	0x01EDDA18 MOV W2, W20
	0x01EDDA1C BL 0x2A9EF9C
	0x01EDDA20 CBZ X22, 0x1EDDA70
	0x01EDDA24 LDR X8, [X28]
	0x01EDDA28 LDR X8, [X8 + 0xB8]
	0x01EDDA2C LDR X0, [X8 + 0x8]
	0x01EDDA30 CBZ X0, 0x1EDDA70
	0x01EDDA34 LDR W2, [X22 + 0x10]
	0x01EDDA38 LDR X3, [X24]
	0x01EDDA3C MOV X1, X21
	0x01EDDA40 BL 0x2A9EF9C
	0x01EDDA44 LDR W8, [X19 + 0x18]
	0x01EDDA48 CMP W20, W8
	0x01EDDA4C B.LT 0x1EDD9E4
	0x01EDDA50 LDP X20, X19, [X31 + 0x60]
	0x01EDDA54 LDP X22, X21, [X31 + 0x50]
	0x01EDDA58 LDP X24, X23, [X31 + 0x40]

ISIL:
	001 Move [X31-128], D15
	002 Move [X31-120], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+72], X25
	011 Move [X31+80], X24
	012 Move [X31+88], X23
	013 Move [X31+96], X22
	014 Move [X31+104], X21
	015 Move [X31+112], X20
	016 Move [X31+120], X19
	017 Move X20, 0x24FD000
	018 Move W8, [X20+1371]
	019 Move V8, V0
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0x2224000
	026 Move X0, [X0+456]
	027 Call 0x1C17CF4
	028 Move X0, 0x2217000
	029 Move X0, [X0+1448]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+1371], W8
	033 Move W8, [X19+488]
	034 Compare W8, 0
	035 JumpIfEqual {81}
	036 Move V0, [X19+492]
	037 Move V1, [X19+528]
	038 Move D2, [X19+224]
	039 Move D3, [X19+232]
	040 Move X0, X19
	041 NotImplemented "Instruction FCVT not yet implemented."
	042 Add D9, D1, D0
	043 Subtract D12, D2, D3
	044 Call ClientTimeProvider.GetSnapshotTime, X0
	045 Move V1, [X19+240]
	046 Move X0, X19
	047 Subtract D0, D0, D1
	048 Call ClientTimeProvider.SaveInterpDelaySample, X0, V0
	049 Move V1, [X19+136]
	050 Move X8, [X19+264]
	051 Move D0, 0.5
	052 Move [X19+168], D12
	053 Subtract D2, D9, D1
	054 Multiply D2, D2, D0
	055 Add D1, D1, D2
	056 Move [X19+136], D1
	057 Compare X8, 0
	058 JumpIfEqual {521}
	059 Move V2, [X19+144]
	060 Move V3, [X8+16]
	061 Move D4, [X19+200]
	062 Move D9, [X19+208]
	063 Move W8, [X19+392]
	064 Subtract D14, D2, D1
	065 NotImplemented "Instruction STRH not yet implemented."
	066 Subtract D1, D3, D4
	067 Multiply D0, D1, D0
	068 Add D10, D4, D0
	069 Move [X19+462], W31
	070 Move [X19+200], D10
	071 Move X20, 0x221F000
	072 Move V13, [X19+176]
	073 Move X20, [X20+1800]
	074 Move X21, 0x24FC000
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move W8, [X21+3864]
	077 Add X22, X19, 376
	078 Compare W8, 0
	079 JumpIfEqual {98}
	080 Move X23, [X19+384]
	081 Move X20, [X31+112]
	082 Move X19, [X31+120]
	083 Move X22, [X31+96]
	084 Move X21, [X31+104]
	085 Move X24, [X31+80]
	086 Move X23, [X31+88]
	087 Move X30, [X31+64]
	088 Move X25, [X31+72]
	089 Move D9, [X31+48]
	090 Move D8, [X31+56]
	091 Move D11, [X31+32]
	092 Move D10, [X31+40]
	093 Move D13, [X31+16]
	094 Move D12, [X31+24]
	095 Move D15, [X31+128]
	096 Move D14, [X31+136]
	097 Return 
	098 Move X0, 0x221F000
	099 Move X0, [X0+1800]
	100 Call 0x1C17CF4
	101 Move W8, 1
	102 Move [X21+3864], W8
	103 Move W8, [X19+392]
	104 Move X23, [X19+384]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X24, 0x24FC000
	107 Move W8, [X24+3863]
	108 Compare W8, 0
	109 JumpIfNotEqual {115}
	110 Move X0, 0x221F000
	111 Move X0, [X0+1800]
	112 Call 0x1C17CF4
	113 Move W8, 1
	114 Move [X24+3863], W8
	115 Move X0, [X20]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1C17DFC
	120 Move X0, X31
	121 Call Stopwatch.GetTimestamp
	122 Move X8, [X22]
	123 Add X9, X0, X23
	124 Subtract X23, X9, X8
	125 Move X0, [X20]
	126 Move W8, [X0+224]
	127 Compare W8, 0
	128 JumpIfNotEqual {131}
	129 Call 0x1C17DFC
	130 Move X0, [X20]
	131 Move X8, [X0+184]
	132 NotImplemented "Instruction SCVTF not yet implemented."
	133 Move V0, [X8]
	134 NotImplemented "Instruction SCVTF not yet implemented."
	135 NotImplemented "Instruction FDIV not yet implemented."
	136 Move D1, 1
	137 NotImplemented "Instruction FCMP not yet implemented."
	138 Move [X22], X31
	139 Move [X22+8], X31
	140 Move [X22+16], W31
	141 Move [X19+400], X31
	142 Move [X19+408], X31
	143 Move [X19+416], W31
	144 Move W8, [X19+392]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move D0, -0.5
	147 NotImplemented "Instruction FCMP not yet implemented."
	148 Move D0, 1
	149 NotImplemented "Instruction FCMP not yet implemented."
	150 Move X8, -20901888
	151 Move V0, [X8+3912]
	152 Move D11, X31
	153 NotImplemented "Instruction FCMP not yet implemented."
	154 Move D0, 0.125
	155 Multiply D11, D14, D0
	156 Move X0, X19
	157 Call ClientTimeProvider.ResetInputTime, X0
	158 Move X0, X19
	159 Call ClientTimeProvider.ResetSimulationTime, X0
	160 Move D11, X31
	161 Move W8, [X19+416]
	162 Subtract D13, D13, D12
	163 Move X22, -20897792
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move W8, [X21+3864]
	166 Add X23, X19, 400
	167 Compare W8, 0
	168 JumpIfEqual {170}
	169 Move X24, [X19+408]
	170 Move X0, 0x221F000
	171 Move X0, [X0+1800]
	172 Call 0x1C17CF4
	173 Move W8, 1
	174 Move [X21+3864], W8
	175 Move W8, [X19+416]
	176 Move X24, [X19+408]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X25, 0x24FC000
	179 Move W8, [X25+3863]
	180 Compare W8, 0
	181 JumpIfNotEqual {187}
	182 Move X0, 0x221F000
	183 Move X0, [X0+1800]
	184 Call 0x1C17CF4
	185 Move W8, 1
	186 Move [X25+3863], W8
	187 Move X0, [X20]
	188 Move W8, [X0+224]
	189 Compare W8, 0
	190 JumpIfNotEqual {192}
	191 Call 0x1C17DFC
	192 Move X0, X31
	193 Call Stopwatch.GetTimestamp
	194 Move X8, [X23]
	195 Add X9, X0, X24
	196 Subtract X24, X9, X8
	197 Move X0, [X20]
	198 Move W8, [X0+224]
	199 Compare W8, 0
	200 JumpIfNotEqual {203}
	201 Call 0x1C17DFC
	202 Move X0, [X20]
	203 Move X8, [X0+184]
	204 NotImplemented "Instruction SCVTF not yet implemented."
	205 Move V0, [X8]
	206 NotImplemented "Instruction SCVTF not yet implemented."
	207 NotImplemented "Instruction FDIV not yet implemented."
	208 Move D1, 1
	209 NotImplemented "Instruction FCMP not yet implemented."
	210 Move [X23], X31
	211 Move [X23+8], X31
	212 Move [X23+16], W31
	213 Move W8, [X19+416]
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move D0, 0.5
	216 NotImplemented "Instruction FCMP not yet implemented."
	217 Move D0, -1
	218 NotImplemented "Instruction FCMP not yet implemented."
	219 Move V0, [X22+328]
	220 Move D12, X31
	221 NotImplemented "Instruction FCMP not yet implemented."
	222 Move D0, -0.125
	223 Multiply D12, D13, D0
	224 Move X0, X19
	225 Call ClientTimeProvider.ResetSimulationTime, X0
	226 Move D12, X31
	227 Move W8, [X19+440]
	228 Subtract D9, D9, D10
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move W8, [X21+3864]
	231 Add X23, X19, 424
	232 Compare W8, 0
	233 JumpIfEqual {235}
	234 Move X21, [X19+432]
	235 Move X0, 0x221F000
	236 Move X0, [X0+1800]
	237 Call 0x1C17CF4
	238 Move W8, 1
	239 Move [X21+3864], W8
	240 Move W8, [X19+440]
	241 Move X21, [X19+432]
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move X24, 0x24FC000
	244 Move W8, [X24+3863]
	245 Compare W8, 0
	246 JumpIfNotEqual {252}
	247 Move X0, 0x221F000
	248 Move X0, [X0+1800]
	249 Call 0x1C17CF4
	250 Move W8, 1
	251 Move [X24+3863], W8
	252 Move X0, [X20]
	253 Move W8, [X0+224]
	254 Compare W8, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1C17DFC
	257 Move X0, X31
	258 Call Stopwatch.GetTimestamp
	259 Move X8, [X23]
	260 Add X9, X0, X21
	261 Subtract X21, X9, X8
	262 Move X0, [X20]
	263 Move W8, [X0+224]
	264 Compare W8, 0
	265 JumpIfNotEqual {268}
	266 Call 0x1C17DFC
	267 Move X0, [X20]
	268 Move X8, [X0+184]
	269 NotImplemented "Instruction SCVTF not yet implemented."
	270 Move V0, [X8]
	271 NotImplemented "Instruction SCVTF not yet implemented."
	272 NotImplemented "Instruction FDIV not yet implemented."
	273 Move D1, 1
	274 NotImplemented "Instruction FCMP not yet implemented."
	275 Move [X23], X31
	276 Move [X23+8], X31
	277 Move [X23+16], W31
	278 Move W8, [X19+440]
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move D0, 0.5
	281 NotImplemented "Instruction FCMP not yet implemented."
	282 Move D0, -1
	283 NotImplemented "Instruction FCMP not yet implemented."
	284 Move V0, [X22+328]
	285 Move D13, X31
	286 NotImplemented "Instruction FCMP not yet implemented."
	287 Move D0, -0.125
	288 Multiply D13, D9, D0
	289 Move X0, X19
	290 Call ClientTimeProvider.ResetInterpolationTime, X0
	291 Move D13, X31
	292 Move X20, [X19+128]
	293 Compare X20, 0
	294 JumpIfEqual {521}
	295 Move X21, 0x2224000
	296 Move X8, [X20]
	297 Move X21, [X21+456]
	298 Move D10, [X19+136]
	299 Move D9, [X19+144]
	300 NotImplemented "Instruction LDRH not yet implemented."
	301 Move X1, [X21]
	302 Compare X9, 0
	303 JumpIfEqual {310}
	304 Move X10, [X8+176]
	305 Add X10, X10, 8
	306 NotImplemented "Instruction LDUR not yet implemented."
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Subtract X9, X9, 1
	309 Add X10, X10, 16
	310 Move W2, 1
	311 Move X0, X20
	312 Call 0x1C5D788
	313 Move W9, [X10]
	314 Add W9, W9, 1
	315 Add X8, X8, W9
	316 Add X0, X8, 312
	317 Move X8, [X0]
	318 Move X1, [X0+8]
	319 Move X0, X20
	320 Move V0, V10
	321 Move V1, V9
	322 Move V2, V8
	323 NotImplemented "Instruction BLR not yet implemented."
	324 Move X20, [X19+128]
	325 Compare X20, 0
	326 JumpIfEqual {521}
	327 Move X8, [X20]
	328 Move X1, [X21]
	329 NotImplemented "Instruction LDRH not yet implemented."
	330 Compare X9, 0
	331 JumpIfEqual {338}
	332 Move X10, [X8+176]
	333 Add X10, X10, 8
	334 NotImplemented "Instruction LDUR not yet implemented."
	335 NotImplemented "Instruction CMP not yet implemented."
	336 Subtract X9, X9, 1
	337 Add X10, X10, 16
	338 Move X0, X20
	339 Move W2, W31
	340 Call 0x1C5D788
	341 NotImplemented "Instruction LDRSW not yet implemented."
	342 Add X8, X8, X9
	343 Add X0, X8, 312
	344 Move X8, [X0]
	345 Move X1, [X0+8]
	346 Move X0, X20
	347 NotImplemented "Instruction BLR not yet implemented."
	348 Move X20, [X19+160]
	349 Move [X19+152], D0
	350 Compare X20, 0
	351 JumpIfEqual {521}
	352 Move X8, [X20]
	353 Move D10, [X19+168]
	354 Move D9, [X19+176]
	355 Move X1, [X21]
	356 NotImplemented "Instruction LDRH not yet implemented."
	357 Compare X9, 0
	358 JumpIfEqual {365}
	359 Move X10, [X8+176]
	360 Add X10, X10, 8
	361 NotImplemented "Instruction LDUR not yet implemented."
	362 NotImplemented "Instruction CMP not yet implemented."
	363 Subtract X9, X9, 1
	364 Add X10, X10, 16
	365 Move W2, 1
	366 Move X0, X20
	367 Call 0x1C5D788
	368 Move W9, [X10]
	369 Add W9, W9, 1
	370 Add X8, X8, W9
	371 Add X0, X8, 312
	372 Move X8, [X0]
	373 Move X1, [X0+8]
	374 Move X0, X20
	375 Move V0, V10
	376 Move V1, V9
	377 Move V2, V8
	378 NotImplemented "Instruction BLR not yet implemented."
	379 Move X20, [X19+160]
	380 Compare X20, 0
	381 JumpIfEqual {521}
	382 Move X8, [X20]
	383 Move X1, [X21]
	384 NotImplemented "Instruction LDRH not yet implemented."
	385 Compare X9, 0
	386 JumpIfEqual {393}
	387 Move X10, [X8+176]
	388 Add X10, X10, 8
	389 NotImplemented "Instruction LDUR not yet implemented."
	390 NotImplemented "Instruction CMP not yet implemented."
	391 Subtract X9, X9, 1
	392 Add X10, X10, 16
	393 Move X0, X20
	394 Move W2, W31
	395 Call 0x1C5D788
	396 NotImplemented "Instruction LDRSW not yet implemented."
	397 Add X8, X8, X9
	398 Add X0, X8, 312
	399 Move X8, [X0]
	400 Move X1, [X0+8]
	401 Move X0, X20
	402 NotImplemented "Instruction BLR not yet implemented."
	403 Move X20, [X19+192]
	404 NotImplemented "Instruction FNEG not yet implemented."
	405 Move [X19+184], D0
	406 Compare X20, 0
	407 JumpIfEqual {521}
	408 Move X8, [X20]
	409 Move D10, [X19+200]
	410 Move D9, [X19+208]
	411 Move X1, [X21]
	412 NotImplemented "Instruction LDRH not yet implemented."
	413 Compare X9, 0
	414 JumpIfEqual {421}
	415 Move X10, [X8+176]
	416 Add X10, X10, 8
	417 NotImplemented "Instruction LDUR not yet implemented."
	418 NotImplemented "Instruction CMP not yet implemented."
	419 Subtract X9, X9, 1
	420 Add X10, X10, 16
	421 Move W2, 1
	422 Move X0, X20
	423 Call 0x1C5D788
	424 Move W9, [X10]
	425 Add W9, W9, 1
	426 Add X8, X8, W9
	427 Add X0, X8, 312
	428 Move X8, [X0]
	429 Move X1, [X0+8]
	430 Move X0, X20
	431 Move V0, V10
	432 Move V1, V9
	433 Move V2, V8
	434 NotImplemented "Instruction BLR not yet implemented."
	435 Move X20, [X19+192]
	436 Compare X20, 0
	437 JumpIfEqual {521}
	438 Move X8, [X20]
	439 Move X1, [X21]
	440 Move X21, 0x2217000
	441 NotImplemented "Instruction LDRH not yet implemented."
	442 Move X21, [X21+1448]
	443 Compare X9, 0
	444 JumpIfEqual {451}
	445 Move X10, [X8+176]
	446 Add X10, X10, 8
	447 NotImplemented "Instruction LDUR not yet implemented."
	448 NotImplemented "Instruction CMP not yet implemented."
	449 Subtract X9, X9, 1
	450 Add X10, X10, 16
	451 Move X0, X20
	452 Move W2, W31
	453 Call 0x1C5D788
	454 NotImplemented "Instruction LDRSW not yet implemented."
	455 Add X8, X8, X9
	456 Add X0, X8, 312
	457 Move X8, [X0]
	458 Move X1, [X0+8]
	459 Move X0, X20
	460 NotImplemented "Instruction BLR not yet implemented."
	461 NotImplemented "Instruction FNEG not yet implemented."
	462 Move [X19+216], D1
	463 Move X0, [X21]
	464 Move V1, [X19+344]
	465 Move V2, [X19+152]
	466 Move V3, [X19+184]
	467 Move W8, [X0+224]
	468 Move V14, [X19+224]
	469 Add D15, D1, D2
	470 Add D10, D15, D3
	471 Subtract D9, D1, D0
	472 Compare W8, 0
	473 JumpIfNotEqual {475}
	474 Call 0x1C17DFC
	475 Multiply D0, D15, D8
	476 Add D1, D11, D0
	477 Move D0, X31
	478 Move X0, X31
	479 Call Math.Max, V0, V1
	480 Add D0, D14, D0
	481 Move V14, [X19+232]
	482 Move [X19+224], D0
	483 Multiply D0, D10, D8
	484 Add D0, D11, D0
	485 Add D1, D12, D0
	486 Move D0, X31
	487 Move X0, X31
	488 Call Math.Max, V0, V1
	489 Add D0, D14, D0
	490 Move V10, [X19+240]
	491 Move [X19+232], D0
	492 Multiply D0, D9, D8
	493 Add D1, D13, D0
	494 Move D0, X31
	495 Move X0, X31
	496 Call Math.Max, V0, V1
	497 Move V1, [X19+152]
	498 Add D2, D10, D0
	499 Move [X19+240], D2
	500 Move X0, X19
	501 Multiply D0, D1, D8
	502 Add D0, D11, D0
	503 Move X20, [X31+112]
	504 Move X19, [X31+120]
	505 Move X22, [X31+96]
	506 Move X21, [X31+104]
	507 Move X24, [X31+80]
	508 Move X23, [X31+88]
	509 Move X30, [X31+64]
	510 Move X25, [X31+72]
	511 Move D9, [X31+48]
	512 Move D8, [X31+56]
	513 Move D11, [X31+32]
	514 Move D10, [X31+40]
	515 Move D13, [X31+16]
	516 Move D12, [X31+24]
	517 Move D15, [X31+128]
	518 Move D14, [X31+136]
	519 Call ClientTimeProvider.AddInputOffsetAdjustment, X0, V0
	520 Return 
	521 Call 0x1C17F20

Method: System.Boolean Fusion.ITimeProvider.IsRunning()

Disassembly:
	0x01EDDA5C LDP X26, X25, [X31 + 0x30]
	0x01EDDA60 LDP X28, X27, [X31 + 0x20]

ISIL:
	001 Move W0, [X0+488]
	002 Return X0

Method: System.Void Fusion.ITimeProvider.Configure(Fusion.SimulationRuntimeConfig src)

Disassembly:
	0x01EDDA64 LDP X29, X30, [X31 + 0x10]
	0x01EDDA68 ADD X31, X31, 0x70
	0x01EDDA6C RET
	0x01EDDA70 BL 0x1C16F20
	0x01EDDA74 BL 0x1C16F28
	0x01EDDA78 MOV X19, X0
	0x01EDDA7C B 0x1EDDAB0
	0x01EDDA80 MOVZ W0, 0x8
	0x01EDDA84 BL 0x3EB1AF0
	0x01EDDA88 LDR X8, [X25]
	0x01EDDA8C STR X8, [X0]
	0x01EDDA90 ADRP X1, 0x1FD7000
	0x01EDDA94 ADD X1, X1, 0xE58
	0x01EDDA98 MOV X2, X31
	0x01EDDA9C BL 0x3EB1B00
	0x01EDDAA0 B 0x1EDDAA8
	0x01EDDAA4 BL 0x1990590
	0x01EDDAA8 MOV X19, X0
	0x01EDDAAC BL 0x3EB1AE0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 NotImplemented "Instruction MRS not yet implemented."
	005 Move X8, [X19+40]
	006 Move [X31+40], X8
	007 Move W8, [X1+32]
	008 Move V1, [X1]
	009 Move V0, [X1+16]
	010 Add X1, X31, 0
	011 Move [X31+32], W8
	012 Move [X31], V1
	013 Move [X31+8], V0
	014 Call ClientTimeProvider.Configure, X0, X1
	015 Move X8, [X19+40]
	016 Move X9, [X31+40]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X30, [X31+48]
	019 Move X19, [X31+56]
	020 Add X31, X31, 64
	021 Return 
	022 Call 0x3EB2B20

Method: System.Void Fusion.ITimeProvider.Configure(Fusion.TimeSyncConfiguration tsc)

Disassembly:
	0x01EDDAB0 MOV X0, X19

ISIL:
	001 Call ClientTimeProvider.Configure, X0, X1
	002 Return 

Method: System.Void Fusion.ITimeProvider.Reset(System.Double roundTripTime, Fusion.Tick snapshot)

Disassembly:
	0x01EDDAB4 BL 0x1D2C690
	0x01EDDAB8 BL 0x1990590
	0x01EDDABC STR X30, [X31 - 0x20]!
	0x01EDDAC0 STP X20, X19, [X31 + 0x10]
	0x01EDDAC4 ADRP X20, 0x24FC000
	0x01EDDAC8 ADRP X19, 0x2223000
	0x01EDDACC LDRB W8, [X20 + 0x564]

ISIL:
	001 Move V1, [X0+120]
	002 And X8, X1, 0
	003 NotImplemented "Instruction SCVTF not yet implemented."
	004 Move X1, X8
	005 Multiply D1, D1, D2
	006 Move D2, 1
	007 Call ClientTimeProvider.Reset, X0, V0, X1, V1, V2
	008 Return 

Method: System.Void Fusion.ITimeProvider.Snap()

Disassembly:
	0x01EDDAD0 LDR X19, [X19 + 0x230]

ISIL:
	001 Call ClientTimeProvider.Snap, X0
	002 Return 

Method: System.Void Fusion.ITimeProvider.Update(System.Double unscaledDeltaTime)

Disassembly:
	0x01EDDAD4 TBNZ X8, 0x0, 0x1EDDB04

ISIL:
	001 Call ClientTimeProvider.Update, X0, V0
	002 Return 

Method: System.Void Fusion.ITimeProvider.OnSnapshotReceived(System.Double roundTripTime, Fusion.Tick snapshot)

Disassembly:
	0x01EDDAD8 ADRP X0, 0x2223000
	0x01EDDADC LDR X0, [X0 + 0x2A0]
	0x01EDDAE0 BL 0x1C16CF4
	0x01EDDAE4 ADRP X0, 0x2223000
	0x01EDDAE8 LDR X0, [X0 + 0x2A8]
	0x01EDDAEC BL 0x1C16CF4
	0x01EDDAF0 ADRP X0, 0x2223000
	0x01EDDAF4 LDR X0, [X0 + 0x230]
	0x01EDDAF8 BL 0x1C16CF4
	0x01EDDAFC MOVZ W8, 0x1
	0x01EDDB00 STRB W8, [X20 + 0x564]
	0x01EDDB04 BL 0x1EDD428
	0x01EDDB08 LDR X8, [X19]
	0x01EDDB0C LDR X8, [X8 + 0xB8]
	0x01EDDB10 LDR X0, [X8 + 0x8]
	0x01EDDB14 CBZ X0, 0x1EDDB64
	0x01EDDB18 ADRP X8, 0x2223000

ISIL:
	001 Move [X31-32], D9
	002 Move [X31-24], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X19
	005 Move V8, V0
	006 Move V0, [X0+120]
	007 And X8, X1, 0
	008 NotImplemented "Instruction SCVTF not yet implemented."
	009 Move X1, X8
	010 Move X19, X0
	011 Multiply D9, D0, D1
	012 Call ClientTimeProvider.UpdateSnapshot, X0, X1
	013 Move X0, X19
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Move D2, 1
	017 Move V0, V8
	018 Move V1, V9
	019 Move D9, [X31+32]
	020 Move D8, [X31+40]
	021 Call ClientTimeProvider.UpdateServerStats, X0, V0, V1, V2
	022 Return 

Method: System.Void Fusion.ITimeProvider.OnFeedbackReceived(Fusion.Simulation/TimeFeedback feedback)

Disassembly:
	0x01EDDB1C LDR X8, [X8 + 0x2A0]
	0x01EDDB20 LDR X1, [X8]
	0x01EDDB24 BL 0x2A9ED8C
	0x01EDDB28 CBZ W0, 0x1EDDB58
	0x01EDDB2C LDR X8, [X19]
	0x01EDDB30 LDR X8, [X8 + 0xB8]
	0x01EDDB34 LDR X0, [X8 + 0x8]
	0x01EDDB38 CBZ X0, 0x1EDDB64
	0x01EDDB3C ADRP X8, 0x2223000
	0x01EDDB40 LDR X8, [X8 + 0x2A8]
	0x01EDDB44 LDR X1, [X8]

ISIL:
	001 Add X8, X0, 492
	002 Move V4, [X8]
	003 Move V0.S[1], V1.S[0]
	004 Move V0.S[2], V2.S[0]
	005 Move V0.S[3], V3.S[0]
	006 Subtract V0, V0, V4
	007 NotImplemented "Instruction MOVI not yet implemented."
	008 NotImplemented "Instruction INVALID not yet implemented."
	009 Add V0, V4, V0
	010 Move [X8], V0
	011 Return 

Method: System.Void Fusion.ITimeProvider.ResetFeedback()

Disassembly:
	0x01EDDB48 BL 0x2A9EE5C
	0x01EDDB4C MOV X1, X31
	0x01EDDB50 BL 0x35DF820
	0x01EDDB54 ADD W0, W0, 0x1
	0x01EDDB58 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Add X8, X0, 492
	002 Add X9, X0, 500
	003 Move [X9], X31
	004 Move [X8], X31
	005 Return 

Method: Fusion.Instant Fusion.ITimeProvider.Now()

Disassembly:
	0x01EDDB5C LDR X30, [X31], #0x20
	0x01EDDB60 RET
	0x01EDDB64 BL 0x1C16F20

ISIL:
	001 Move D0, [X0+224]
	002 Move D1, [X0+232]
	003 Move V2, [X0+240]
	004 Return X0

Method: System.Void Fusion.ITimeProvider.Log(Fusion.Statistics.FusionStatisticsManager stats)

Disassembly:
	0x01EDDB68 SUB X31, X31, 0x30
	0x01EDDB6C STP X30, X21, [X31 + 0x10]
	0x01EDDB70 STP X20, X19, [X31 + 0x20]
	0x01EDDB74 ADRP X21, 0x24FC000
	0x01EDDB78 ADRP X20, 0x2223000
	0x01EDDB7C LDRB W8, [X21 + 0x565]
	0x01EDDB80 LDR X20, [X20 + 0x230]
	0x01EDDB84 MOV X19, X0
	0x01EDDB88 TBNZ X8, 0x0, 0x1EDDBB8
	0x01EDDB8C ADRP X0, 0x2220000
	0x01EDDB90 LDR X0, [X0 + 0x710]
	0x01EDDB94 BL 0x1C16CF4
	0x01EDDB98 ADRP X0, 0x2223000
	0x01EDDB9C LDR X0, [X0 + 0x230]
	0x01EDDBA0 BL 0x1C16CF4
	0x01EDDBA4 ADRP X0, 0x2223000
	0x01EDDBA8 LDR X0, [X0 + 0x2B0]
	0x01EDDBAC BL 0x1C16CF4
	0x01EDDBB0 MOVZ W8, 0x1
	0x01EDDBB4 STRB W8, [X21 + 0x565]
	0x01EDDBB8 STR W31, [X31 + 0xC]
	0x01EDDBBC BL 0x1EDD428
	0x01EDDBC0 LDR X8, [X20]
	0x01EDDBC4 LDR X8, [X8 + 0xB8]
	0x01EDDBC8 LDR X0, [X8 + 0x8]
	0x01EDDBCC CBZ X0, 0x1EDDC28
	0x01EDDBD0 ADRP X8, 0x2220000
	0x01EDDBD4 LDR X8, [X8 + 0x710]
	0x01EDDBD8 ADD X2, X31, 0xC
	0x01EDDBDC MOV X1, X19
	0x01EDDBE0 LDR X3, [X8]
	0x01EDDBE4 BL 0x2AA09F8
	0x01EDDBE8 TBZ X0, 0x0, 0x1EDDBF4
	0x01EDDBEC LDR W0, [X31 + 0xC]
	0x01EDDBF0 B 0x1EDDC18
	0x01EDDBF4 ADRP X8, 0x2223000
	0x01EDDBF8 LDR X8, [X8 + 0x2B0]
	0x01EDDBFC MOV X1, X19
	0x01EDDC00 MOV X2, X31
	0x01EDDC04 LDR X0, [X8]
	0x01EDDC08 BL 0x321EFD0
	0x01EDDC0C MOV X1, X31
	0x01EDDC10 BL 0x1E3B98C
	0x01EDDC14 MOVN W0, 0x0
	0x01EDDC18 LDP X20, X19, [X31 + 0x20]
	0x01EDDC1C LDP X30, X21, [X31 + 0x10]
	0x01EDDC20 ADD X31, X31, 0x30
	0x01EDDC24 RET
	0x01EDDC28 BL 0x1C16F20
	0x01EDDC2C SUB X31, X31, 0x30
	0x01EDDC30 STP X30, X21, [X31 + 0x10]
	0x01EDDC34 STP X20, X19, [X31 + 0x20]
	0x01EDDC38 ADRP X21, 0x24FC000
	0x01EDDC3C ADRP X20, 0x2223000
	0x01EDDC40 LDRB W8, [X21 + 0x566]
	0x01EDDC44 LDR X20, [X20 + 0x230]
	0x01EDDC48 MOV X19, X0
	0x01EDDC4C TBNZ X8, 0x0, 0x1EDDC7C
	0x01EDDC50 ADRP X0, 0x2220000
	0x01EDDC54 LDR X0, [X0 + 0x710]
	0x01EDDC58 BL 0x1C16CF4
	0x01EDDC5C ADRP X0, 0x2223000
	0x01EDDC60 LDR X0, [X0 + 0x230]
	0x01EDDC64 BL 0x1C16CF4
	0x01EDDC68 ADRP X0, 0x2223000
	0x01EDDC6C LDR X0, [X0 + 0x2B8]
	0x01EDDC70 BL 0x1C16CF4
	0x01EDDC74 MOVZ W8, 0x1
	0x01EDDC78 STRB W8, [X21 + 0x566]
	0x01EDDC7C STR W31, [X31 + 0xC]
	0x01EDDC80 BL 0x1EDD428
	0x01EDDC84 LDR X8, [X20]
	0x01EDDC88 LDR X8, [X8 + 0xB8]
	0x01EDDC8C LDR X0, [X8 + 0x10]
	0x01EDDC90 CBZ X0, 0x1EDDCEC
	0x01EDDC94 ADRP X8, 0x2220000
	0x01EDDC98 LDR X8, [X8 + 0x710]
	0x01EDDC9C ADD X2, X31, 0xC
	0x01EDDCA0 MOV X1, X19
	0x01EDDCA4 LDR X3, [X8]
	0x01EDDCA8 BL 0x2AA09F8
	0x01EDDCAC TBZ X0, 0x0, 0x1EDDCB8
	0x01EDDCB0 LDR W0, [X31 + 0xC]
	0x01EDDCB4 B 0x1EDDCDC
	0x01EDDCB8 ADRP X8, 0x2223000
	0x01EDDCBC LDR X8, [X8 + 0x2B8]
	0x01EDDCC0 MOV X1, X19
	0x01EDDCC4 MOV X2, X31
	0x01EDDCC8 LDR X0, [X8]
	0x01EDDCCC BL 0x321EFD0
	0x01EDDCD0 MOV X1, X31
	0x01EDDCD4 BL 0x1E3B98C
	0x01EDDCD8 MOVN W0, 0x0
	0x01EDDCDC LDP X20, X19, [X31 + 0x20]
	0x01EDDCE0 LDP X30, X21, [X31 + 0x10]
	0x01EDDCE4 ADD X31, X31, 0x30
	0x01EDDCE8 RET
	0x01EDDCEC BL 0x1C16F20
	0x01EDDCF0 SUB X31, X31, 0x50
	0x01EDDCF4 STP X30, X21, [X31 + 0x30]
	0x01EDDCF8 STP X20, X19, [X31 + 0x40]
	0x01EDDCFC ADRP X21, 0x24FC000
	0x01EDDD00 ADRP X20, 0x2223000
	0x01EDDD04 LDRB W8, [X21 + 0x567]
	0x01EDDD08 LDR X20, [X20 + 0x230]
	0x01EDDD0C MOV W19, W0
	0x01EDDD10 TBNZ X8, 0x0, 0x1EDDD70
	0x01EDDD14 ADRP X0, 0x2223000
	0x01EDDD18 LDR X0, [X0 + 0x2C0]
	0x01EDDD1C BL 0x1C16CF4
	0x01EDDD20 ADRP X0, 0x2223000
	0x01EDDD24 LDR X0, [X0 + 0x2C8]
	0x01EDDD28 BL 0x1C16CF4
	0x01EDDD2C ADRP X0, 0x2223000
	0x01EDDD30 LDR X0, [X0 + 0x2D0]
	0x01EDDD34 BL 0x1C16CF4
	0x01EDDD38 ADRP X0, 0x2223000
	0x01EDDD3C LDR X0, [X0 + 0x2D8]
	0x01EDDD40 BL 0x1C16CF4
	0x01EDDD44 ADRP X0, 0x2223000
	0x01EDDD48 LDR X0, [X0 + 0x2E0]
	0x01EDDD4C BL 0x1C16CF4
	0x01EDDD50 ADRP X0, 0x2223000
	0x01EDDD54 LDR X0, [X0 + 0x2E8]
	0x01EDDD58 BL 0x1C16CF4
	0x01EDDD5C ADRP X0, 0x2223000
	0x01EDDD60 LDR X0, [X0 + 0x230]
	0x01EDDD64 BL 0x1C16CF4
	0x01EDDD68 MOVZ W8, 0x1
	0x01EDDD6C STRB W8, [X21 + 0x567]
	0x01EDDD70 MOVI V0.2D, 0x0
	0x01EDDD74 STR X31, [X31 + 0x20]
	0x01EDDD78 STP V0, V0, [X31]
	0x01EDDD7C BL 0x1EDD428
	0x01EDDD80 LDR X8, [X20]
	0x01EDDD84 LDR X8, [X8 + 0xB8]
	0x01EDDD88 LDR X0, [X8 + 0x10]
	0x01EDDD8C CBZ X0, 0x1EDDDFC
	0x01EDDD90 ADRP X8, 0x2223000
	0x01EDDD94 LDR X8, [X8 + 0x2C0]
	0x01EDDD98 ADRP X20, 0x2223000
	0x01EDDD9C ADRP X21, 0x2223000
	0x01EDDDA0 LDR X1, [X8]
	0x01EDDDA4 LDR X20, [X20 + 0x2D0]
	0x01EDDDA8 LDR X21, [X21 + 0x2C8]
	0x01EDDDAC ADD X8, X31, 0x0
	0x01EDDDB0 BL 0x2A9F380
	0x01EDDDB4 LDR X1, [X20]
	0x01EDDDB8 ADD X0, X31, 0x0
	0x01EDDDBC BL 0x2C09444
	0x01EDDDC0 TBZ X0, 0x0, 0x1EDDDD8
	0x01EDDDC4 LDR W8, [X31 + 0x18]
	0x01EDDDC8 CMP W8, W19
	0x01EDDDCC B.NE 0x1EDDDB4
	0x01EDDDD0 LDR X19, [X31 + 0x10]
	0x01EDDDD4 B 0x1EDDDDC
	0x01EDDDD8 MOV X19, X31
	0x01EDDDDC LDR X1, [X21]
	0x01EDDDE0 ADD X0, X31, 0x0
	0x01EDDDE4 BL 0x2C0955C
	0x01EDDDE8 MOV X0, X19
	0x01EDDDEC LDP X20, X19, [X31 + 0x40]
	0x01EDDDF0 LDP X30, X21, [X31 + 0x30]
	0x01EDDDF4 ADD X31, X31, 0x50
	0x01EDDDF8 RET
	0x01EDDDFC BL 0x1C16F20
	0x01EDDE00 CMP W1, 0x1
	0x01EDDE04 MOV X20, X0
	0x01EDDE08 B.NE 0x1EDDE34
	0x01EDDE0C MOV X0, X20
	0x01EDDE10 BL 0x3EB1AD0
	0x01EDDE14 LDR X19, [X0]
	0x01EDDE18 BL 0x3EB1AE0
	0x01EDDE1C LDR X1, [X21]
	0x01EDDE20 ADD X0, X31, 0x0
	0x01EDDE24 BL 0x2C0955C
	0x01EDDE28 CBZ X19, 0x1EDDDE8
	0x01EDDE2C MOV X0, X19
	0x01EDDE30 BL 0x1C16F18
	0x01EDDE34 MOV X19, X31
	0x01EDDE38 B 0x1EDDE40
	0x01EDDE3C MOV X20, X0
	0x01EDDE40 LDR X1, [X21]
	0x01EDDE44 ADD X0, X31, 0x0
	0x01EDDE48 BL 0x2C0955C
	0x01EDDE4C CBNZ X19, 0x1EDDE58
	0x01EDDE50 MOV X0, X20
	0x01EDDE54 BL 0x1D2C690
	0x01EDDE58 MOV X0, X19
	0x01EDDE5C BL 0x1C16F18
	0x01EDDE60 BL 0x1990590
	0x01EDDE64 STR X30, [X31 - 0x20]!
	0x01EDDE68 STP X20, X19, [X31 + 0x10]
	0x01EDDE6C ADRP X19, 0x24FC000
	0x01EDDE70 ADRP X20, 0x2223000
	0x01EDDE74 LDRB W8, [X19 + 0x568]
	0x01EDDE78 LDR X20, [X20 + 0x230]
	0x01EDDE7C TBNZ X8, 0x0, 0x1EDDE94
	0x01EDDE80 ADRP X0, 0x2223000
	0x01EDDE84 LDR X0, [X0 + 0x230]
	0x01EDDE88 BL 0x1C16CF4
	0x01EDDE8C MOVZ W8, 0x1
	0x01EDDE90 STRB W8, [X19 + 0x568]
	0x01EDDE94 LDR X8, [X20]
	0x01EDDE98 LDP X20, X19, [X31 + 0x10]
	0x01EDDE9C LDR X8, [X8 + 0xB8]
	0x01EDDEA0 STRB W31, [X8]
	0x01EDDEA4 STP X31, X31, [X8 + 0x8]
	0x01EDDEA8 LDR X30, [X31], #0x20
	0x01EDDEAC RET
	0x01EDDEB0 STR X30, [X31 - 0x20]!
	0x01EDDEB4 STP X20, X19, [X31 + 0x10]
	0x01EDDEB8 ADRP X19, 0x24FC000
	0x01EDDEBC ADRP X20, 0x2223000
	0x01EDDEC0 LDRB W8, [X19 + 0x569]
	0x01EDDEC4 LDR X20, [X20 + 0x290]
	0x01EDDEC8 TBNZ X8, 0x0, 0x1EDDEE0
	0x01EDDECC ADRP X0, 0x2223000
	0x01EDDED0 LDR X0, [X0 + 0x290]
	0x01EDDED4 BL 0x1C16CF4
	0x01EDDED8 MOVZ W8, 0x1
	0x01EDDEDC STRB W8, [X19 + 0x569]
	0x01EDDEE0 LDR X0, [X20]
	0x01EDDEE4 BL 0x1C16F10
	0x01EDDEE8 MOV X1, X31
	0x01EDDEEC MOV X19, X0
	0x01EDDEF0 BL 0x33BDD8C
	0x01EDDEF4 LDR X8, [X20]
	0x01EDDEF8 LDR X8, [X8 + 0xB8]
	0x01EDDEFC STR X19, [X8]
	0x01EDDF00 LDP X20, X19, [X31 + 0x10]
	0x01EDDF04 LDR X30, [X31], #0x20
	0x01EDDF08 RET
	0x01EDDF0C MOV X1, X31
	0x01EDDF10 B 0x33BDD8C
	0x01EDDF14 STR X30, [X31 - 0x30]!
	0x01EDDF18 STP X22, X21, [X31 + 0x10]
	0x01EDDF1C STP X20, X19, [X31 + 0x20]
	0x01EDDF20 ADRP X22, 0x24FC000
	0x01EDDF24 ADRP X21, 0x2223000
	0x01EDDF28 LDRB W8, [X22 + 0x56A]
	0x01EDDF2C LDR X21, [X21 + 0x2F0]
	0x01EDDF30 MOV X19, X3
	0x01EDDF34 MOV X20, X1
	0x01EDDF38 TBNZ X8, 0x0, 0x1EDDF5C
	0x01EDDF3C ADRP X0, 0x2223000
	0x01EDDF40 LDR X0, [X0 + 0x2F0]
	0x01EDDF44 BL 0x1C16CF4
	0x01EDDF48 ADRP X0, 0x2223000
	0x01EDDF4C LDR X0, [X0 + 0x2F8]
	0x01EDDF50 BL 0x1C16CF4
	0x01EDDF54 MOVZ W8, 0x1
	0x01EDDF58 STRB W8, [X22 + 0x56A]
	0x01EDDF5C LDR X0, [X21]
	0x01EDDF60 LDR W8, [X0 + 0xE0]
	0x01EDDF64 CBNZ W8, 0x1EDDF6C
	0x01EDDF68 BL 0x1C16DFC
	0x01EDDF6C ADRP X22, 0x24FC000
	0x01EDDF70 LDRB W8, [X22 + 0x5A3]
	0x01EDDF74 CBNZ W8, 0x1EDDF8C
	0x01EDDF78 ADRP X0, 0x2223000
	0x01EDDF7C LDR X0, [X0 + 0x2F0]
	0x01EDDF80 BL 0x1C16CF4
	0x01EDDF84 MOVZ W8, 0x1
	0x01EDDF88 STRB W8, [X22 + 0x5A3]
	0x01EDDF8C LDR X0, [X21]
	0x01EDDF90 LDR W8, [X0 + 0xE0]
	0x01EDDF94 CBNZ W8, 0x1EDDFA0
	0x01EDDF98 BL 0x1C16DFC
	0x01EDDF9C LDR X0, [X21]
	0x01EDDFA0 CBZ X20, 0x1EDE028
	0x01EDDFA4 LDR X8, [X0 + 0xB8]
	0x01EDDFA8 LDR X9, [X20]
	0x01EDDFAC MOV X0, X20
	0x01EDDFB0 LDR X21, [X8 + 0x10]
	0x01EDDFB4 LDR X8, [X9 + 0x2D8]
	0x01EDDFB8 LDR X1, [X9 + 0x2E0]
	0x01EDDFBC BLR X8
	0x01EDDFC0 CBZ X19, 0x1EDE028
	0x01EDDFC4 LDR X8, [X19]
	0x01EDDFC8 MOV X20, X0
	0x01EDDFCC MOV X0, X19
	0x01EDDFD0 LDR X9, [X8 + 0x2D8]
	0x01EDDFD4 LDR X1, [X8 + 0x2E0]
	0x01EDDFD8 BLR X9
	0x01EDDFDC CBZ X21, 0x1EDE028
	0x01EDDFE0 LDR X8, [X21]
	0x01EDDFE4 MOV X2, X0
	0x01EDDFE8 MOV X0, X21
	0x01EDDFEC MOV X1, X20
	0x01EDDFF0 LDP X9, X3, [X8 + 0x1D8]
	0x01EDDFF4 BLR X9
	0x01EDDFF8 MOV W19, W0
	0x01EDDFFC CBNZ W0, 0x1EDE014
	0x01EDE000 ADRP X8, 0x2222000
	0x01EDE004 LDR X8, [X8 + 0x2F8]
	0x01EDE008 MOV X1, X31
	0x01EDE00C LDR X0, [X8]
	0x01EDE010 BL 0x1E3B98C
	0x01EDE014 MOV W0, W19
	0x01EDE018 LDP X20, X19, [X31 + 0x20]
	0x01EDE01C LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move V0, [X0+500]
	005 Move X19, X0
	006 Move X0, X31
	007 Call EngineProfiler.InputRecvDelta, V0
	008 Move V0, [X19+504]
	009 Move X0, X31
	010 Call EngineProfiler.InputRecvDeltaDeviation, V0
	011 Move X8, [X19+296]
	012 Compare X8, 0
	013 JumpIfEqual {64}
	014 Move V0, [X8+16]
	015 Move X0, X31
	016 NotImplemented "Instruction INVALID not yet implemented."
	017 Call EngineProfiler.StateRecvDelta, V0
	018 Move X0, [X19+296]
	019 Compare X0, 0
	020 JumpIfEqual {64}
	021 Move X1, X31
	022 Call TimeSeries.get_Dev, X0
	023 NotImplemented "Instruction INVALID not yet implemented."
	024 Move X0, X31
	025 Call EngineProfiler.StateRecvDeltaDeviation, V0
	026 Move V0, [X19+492]
	027 Move X0, X31
	028 Call EngineProfiler.SimulationOffset, V0
	029 Move V0, [X19+496]
	030 Move X0, X31
	031 Call EngineProfiler.SimulationOffsetDeviation, V0
	032 Move V8, [X19+344]
	033 Move V0, [X19+152]
	034 Move V1, [X19+184]
	035 Move X0, X31
	036 Add D0, D8, D0
	037 Add D0, D0, D1
	038 NotImplemented "Instruction INVALID not yet implemented."
	039 Call EngineProfiler.SimulationSpeed, V0
	040 Move X8, [X19+264]
	041 Compare X8, 0
	042 JumpIfEqual {64}
	043 Move V0, [X8+16]
	044 Move X0, X31
	045 NotImplemented "Instruction INVALID not yet implemented."
	046 Call EngineProfiler.InterpolationOffset, V0
	047 Move X0, [X19+264]
	048 Compare X0, 0
	049 JumpIfEqual {64}
	050 Move X1, X31
	051 Call TimeSeries.get_Dev, X0
	052 NotImplemented "Instruction INVALID not yet implemented."
	053 Move X0, X31
	054 Call EngineProfiler.InterpolationOffsetDeviation, V0
	055 Move V0, [X19+216]
	056 Move X30, [X31+16]
	057 Move X19, [X31+24]
	058 Move X0, X31
	059 Add D0, D8, D0
	060 NotImplemented "Instruction INVALID not yet implemented."
	061 Move V8, [X31+32]
	062 Call EngineProfiler.InterpolationSpeed, V0
	063 Return 
	064 Call 0x1C17F20
	065 Subtract X31, X31, 64
	066 Move [X31+16], X30
	067 Move [X31+32], X22
	068 Move [X31+40], X21
	069 Move [X31+48], X20
	070 Move [X31+56], X19
	071 Move W19, [X0+80]
	072 Move W8, [X0+84]
	073 Add W9, W19, W1
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move [X0+80], W9
	076 Move TEMP, X2
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {94}
	080 Move W8, [X0+88]
	081 Move X2, X31
	082 Move W1, W8
	083 ShiftRight W1, 31
	084 And W1, W1, 0x3FFFFFFF
	085 Call NetBitBuffer.ReplaceDataFromBlockWithTemp, X0, X1
	086 Move W0, W19
	087 Move X20, [X31+48]
	088 Move X19, [X31+56]
	089 Move X22, [X31+32]
	090 Move X21, [X31+40]
	091 Move X30, [X31+16]
	092 Add X31, X31, 64
	093 Return 
	094 Move [X31+28], W19
	095 Move X19, 0x2217000
	096 Move X19, [X19+1880]
	097 Move X22, X0
	098 Move W21, W1
	099 Move X0, X19
	100 Call 0x1C17D08
	101 Add X1, X31, 28
	102 Call 0x1C17E04
	103 Move X20, X0
	104 Move X0, X19
	105 Move [X31+24], W21
	106 Call 0x1C17D08
	107 Add X1, X31, 24
	108 Call 0x1C17E04
	109 Move W8, [X22+84]
	110 Move X21, X0
	111 Move X0, X19
	112 Move [X31+12], W8
	113 Call 0x1C17D08
	114 Add X1, X31, 12
	115 Call 0x1C17E04
	116 Move X19, X0
	117 Move X0, 0x2224000
	118 Move X0, [X0+544]
	119 Call 0x1C17D08
	120 Move X1, X20
	121 Move X2, X21
	122 Move X3, X19
	123 Move X4, X31
	124 Call String.Format, X0, X1, X2, X3
	125 Move X19, X0
	126 Move X0, 0x2217000
	127 Move X0, [X0+1456]
	128 Call 0x1C17D08
	129 Call 0x1C17F10
	130 Move X1, X19
	131 Move X2, X31
	132 Move X20, X0
	133 Call InvalidOperationException..ctor, X0, X1
	134 Move X0, 0x2224000
	135 Move X0, [X0+552]
	136 Call 0x1C17D08
	137 Move X1, X0
	138 Move X0, X20
	139 Call 0x1C17DEC
	140 Move [X31-32], X30
	141 Move [X31-24], X21
	142 Move [X31+16], X20
	143 Move [X31+24], X19
	144 Move X20, 0x24FD000
	145 Move W8, [X20+1374]
	146 Move X19, X0
	147 Compare W8, 0
	148 JumpIfNotEqual {154}
	149 Move X0, 0x221E000
	150 Move X0, [X0+3176]
	151 Call 0x1C17CF4
	152 Move W8, 1
	153 Move [X20+1374], W8
	154 Move X20, 0x221E000
	155 Move X20, [X20+3176]
	156 Move X0, [X20]
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {161}
	160 Call 0x1C17DFC
	161 Move X21, 0x24FC000
	162 Move W8, [X21+3861]
	163 Compare W8, 0
	164 JumpIfNotEqual {173}
	165 Move X0, 0x221F000
	166 Move X0, [X0+1680]
	167 Call 0x1C17CF4
	168 Move X0, 0x221E000
	169 Move X0, [X0+3176]
	170 Call 0x1C17CF4
	171 Move W8, 1
	172 Move [X21+3861], W8
	173 Move X0, [X20]
	174 Move W8, [X0+224]
	175 Compare W8, 0
	176 JumpIfNotEqual {179}
	177 Call 0x1C17DFC
	178 Move X0, [X20]
	179 Move X8, [X0+184]
	180 Move X8, [X8+16]
	181 Compare X8, 0
	182 JumpIfEqual {206}
	183 Move X9, X19
	184 Move X9, X9
	185 Move X9, X9
	186 Move X11, 0x6F6B
	187 Move X9, X9
	188 NotImplemented "Instruction MOVK not yet implemented."
	189 Move W10, [X8+24]
	190 Move X9, X9
	191 NotImplemented "Instruction MOVK not yet implemented."
	192 Move X9, X9
	193 NotImplemented "Instruction MOVK not yet implemented."
	194 Multiply X9, X9, X11
	195 Move X9, X9
	196 ShiftRight X9, 57
	197 And X9, X9, 0x7FFFFFFF
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Add X8, X8, X9
	200 Move W0, [X8+32]
	201 Move X20, [X31+16]
	202 Move X19, [X31+24]
	203 Move X30, [X31+32]
	204 Move X21, [X31+40]
	205 Return 
	206 Call 0x1C17F20
	207 Call 0x1C17F28
	208 Move [X31-80], X30
	209 Move [X31-72], X27
	210 Move [X31+16], X26
	211 Move [X31+24], X25
	212 Move [X31+32], X24
	213 Move [X31+40], X23
	214 Move [X31+48], X22
	215 Move [X31+56], X21
	216 Move [X31+64], X20
	217 Move [X31+72], X19
	218 Move X23, 0x24FD000
	219 Move W8, [X23+1375]
	220 Move W22, W3
	221 Move W21, W2
	222 Move X20, X1
	223 Move X19, X0
	224 Compare W8, 0
	225 JumpIfNotEqual {231}
	226 Move X0, 0x221E000
	227 Move X0, [X0+3176]
	228 Call 0x1C17CF4
	229 Move W8, 1
	230 Move [X23+1375], W8
	231 Move X24, 0x221E000
	232 Move X24, [X24+3176]
	233 NotImplemented "Instruction LDRSW not yet implemented."
	234 Move X0, [X24]
	235 Move W8, [X0+224]
	236 Compare W8, 0
	237 JumpIfNotEqual {239}
	238 Call 0x1C17DFC
	239 Move X25, 0x24FC000
	240 Move W8, [X25+3860]
	241 Compare W8, 0
	242 JumpIfNotEqual {248}
	243 Move X0, 0x221E000
	244 Move X0, [X0+3176]
	245 Call 0x1C17CF4
	246 Move W8, 1
	247 Move [X25+3860], W8
	248 Move X0, [X24]
	249 Move W8, [X0+224]
	250 Compare W8, 0
	251 JumpIfNotEqual {254}
	252 Call 0x1C17DFC
	253 Move X0, [X24]
	254 Move X8, [X0+184]
	255 Move X8, [X8]
	256 Compare X8, 0
	257 JumpIfEqual {358}
	258 Subtract W22, W21, W22
	259 Move W9, W22
	260 Move W9, W9
	261 Move W9, W9
	262 Move W10, [X8+24]
	263 Move W9, W9
	264 Move W11, 0xACDD
	265 Move W9, W9
	266 NotImplemented "Instruction MOVK not yet implemented."
	267 Multiply W9, W9, W11
	268 Move W9, W9
	269 ShiftRight W9, 27
	270 And W9, W9, 0x7FFFFFFF
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Add X8, X8, W9
	273 Move W8, [X8+32]
	274 NotImplemented "Instruction SBFM not yet implemented."
	275 Xor X23, X9, X23
	276 Move X0, X23
	277 Add X27, X8, 4
	278 Move X26, X27
	279 ShiftRight X26, 2
	280 And X26, X26, 0x7FFFFFFF
	281 And W8, W27, 508
	282 Move X1, X31
	283 Add W25, W8, W26
	284 Call 0x1EDDD54
	285 Move W9, 0xAAAB
	286 Add W8, W0, 6
	287 NotImplemented "Instruction MOVK not yet implemented."
	288 NotImplemented "Instruction SMADDL not yet implemented."
	289 Move X9, X8
	290 ShiftRight X9, 63
	291 And X9, X9, 0x7FFFFFFF
	292 Move X8, X8
	293 ShiftRight X8, 32
	294 And X8, X8, 0x7FFFFFFF
	295 Add W8, W8, W9
	296 Add W9, W25, W8
	297 Move W10, 6
	298 NotImplemented "Instruction MADD not yet implemented."
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Subtract W11, W26, 1
	301 Move W12, 1
	302 Subtract W8, W8, 1
	303 Move W10, W27
	304 ShiftRight W10, 2
	305 And W10, W10, 0x7FFFFFFF
	306 And X11, X11, 31
	307 NotImplemented "Instruction LSLV not yet implemented."
	308 NotImplemented "Instruction LSLV not yet implemented."
	309 NotImplemented "Instruction LSLV not yet implemented."
	310 NotImplemented "Instruction LSLV not yet implemented."
	311 NotImplemented "Instruction LSLV not yet implemented."
	312 Move X0, X19
	313 Move X20, [X31+64]
	314 Move X19, [X31+72]
	315 Move X22, [X31+48]
	316 Move X21, [X31+56]
	317 Move X24, [X31+32]
	318 Move X23, [X31+40]
	319 Move X26, [X31+16]
	320 Move X25, [X31+24]
	321 Or X10, X11, X10
	322 Or X8, X10, X8
	323 Or X1, X9, X8
	324 Move X3, X31
	325 Move X30, [X31+80]
	326 Move X27, [X31+88]
	327 Call NetBitBuffer.Write, X0, X1, X2
	328 Return 
	329 Move W2, 4
	330 Move X0, X19
	331 Move W1, W22
	332 Move X3, X31
	333 Move X21, W21
	334 Call NetBitBuffer.WriteInt32VarLength, X0, X1, X2
	335 Move X0, [X24]
	336 NotImplemented "Instruction LDRSW not yet implemented."
	337 Move W8, [X0+224]
	338 Compare W8, 0
	339 JumpIfNotEqual {341}
	340 Call 0x1C17DFC
	341 NotImplemented "Instruction SBFM not yet implemented."
	342 Xor X1, X8, X20
	343 Move X0, X19
	344 Move X20, [X31+64]
	345 Move X19, [X31+72]
	346 Move X22, [X31+48]
	347 Move X21, [X31+56]
	348 Move X24, [X31+32]
	349 Move X23, [X31+40]
	350 Move X26, [X31+16]
	351 Move X25, [X31+24]
	352 Move W2, 6
	353 Move X3, X31
	354 Move X30, [X31+80]
	355 Move X27, [X31+88]
	356 Call NetBitBuffer.WriteInt64VarLength, X0, X1, X2
	357 Return 
	358 Call 0x1C17F20
	359 Call 0x1C17F28

