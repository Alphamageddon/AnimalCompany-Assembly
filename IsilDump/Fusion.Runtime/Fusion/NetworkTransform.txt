Type: Fusion.NetworkTransform

Method: System.Boolean get_AutoUpdateAreaOfInterestOverride()

Disassembly:
	0x01E7E100 LDP X29, X30, [X31 + 0xF0]
	0x01E7E104 LDP D9, D8, [X31 + 0xE0]

ISIL:
	001 Move W0, [X0+147]
	002 Return X0

Method: System.Void set_AutoUpdateAreaOfInterestOverride(System.Boolean value)

Disassembly:
	0x01E7E108 LDP D11, D10, [X31 + 0xD0]
	0x01E7E10C LDP D13, D12, [X31 + 0xC0]
	0x01E7E110 LDP D15, D14, [X31 + 0xB0]
	0x01E7E114 ADD X31, X31, 0x150

ISIL:
	001 And W8, W1, 1
	002 Move [X0+146], W8
	003 Move [X0+147], W8
	004 Return 

Method: System.Void Awake()

Disassembly:
	0x01E7E118 RET
	0x01E7E11C BL 0x1C16F20
	0x01E7E120 BL 0x3EB1B20
	0x01E7E124 MOVZ W8, 0x1
	0x01E7E128 MOV X1, X31
	0x01E7E12C STRB W8, [X0 + 0x93]
	0x01E7E130 B 0x1E74F04
	0x01E7E134 MOV X1, X31
	0x01E7E138 B 0x1E74F04
	0x01E7E13C LDRB W0, [X0 + 0x80]
	0x01E7E140 RET
	0x01E7E144 AND W8, W1, 0x1
	0x01E7E148 STRB W8, [X0 + 0x80]
	0x01E7E14C RET
	0x01E7E150 STP X30, X21, [X31 - 0x20]!
	0x01E7E154 STP X20, X19, [X31 + 0x10]
	0x01E7E158 ADRP X21, 0x255B000
	0x01E7E15C LDRB W9, [X21 + 0x1BD]
	0x01E7E160 MOV X20, X0
	0x01E7E164 MOV X19, X8
	0x01E7E168 TBNZ X9, 0x0, 0x1E7E180

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x255C000
	006 Move X20, 0x2280000
	007 Move W8, [X21+441]
	008 Move X20, [X20+2864]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2280000
	015 Move X0, [X0+2864]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+441], W8
	019 Move W8, [X19+147]
	020 Add X1, X19, 136
	021 Move X0, X19
	022 Move [X19+146], W8
	023 Move X2, [X20]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 Call 0x21A5990, X0, X1
	029 Return 

Method: System.Void CopyToEngine()

Disassembly:
	0x01E7E16C ADRP X0, 0x227F000
	0x01E7E170 LDR X0, [X0 + 0xB38]
	0x01E7E174 BL 0x1C16CF4
	0x01E7E178 MOVZ W8, 0x1
	0x01E7E17C STRB W8, [X21 + 0x1BD]
	0x01E7E180 MOV X0, X20
	0x01E7E184 MOV X1, X31
	0x01E7E188 BL 0x1E73930
	0x01E7E18C TBZ X0, 0x0, 0x1E7E1C4
	0x01E7E190 ADRP X8, 0x227F000
	0x01E7E194 LDR X8, [X8 + 0xB38]
	0x01E7E198 MOV X0, X20
	0x01E7E19C MOV W1, W31
	0x01E7E1A0 LDR X2, [X8]
	0x01E7E1A4 BL 0x22275D8
	0x01E7E1A8 LDR X8, [X0 + 0x30]
	0x01E7E1AC LDP V2, V0, [X0 + 0x10]
	0x01E7E1B0 LDR V1, [X0]
	0x01E7E1B4 STR X8, [X19 + 0x30]
	0x01E7E1B8 STP V2, V0, [X19 + 0x10]
	0x01E7E1BC STR V1, [X19]
	0x01E7E1C0 B 0x1E7E1D4
	0x01E7E1C4 MOVI V0.2D, 0x0
	0x01E7E1C8 STR X31, [X19 + 0x30]
	0x01E7E1CC STP V0, V0, [X19 + 0x10]
	0x01E7E1D0 STR V0, [X19]
	0x01E7E1D4 LDP X20, X19, [X31 + 0x10]
	0x01E7E1D8 LDP X30, X21, [X31], #0x20
	0x01E7E1DC RET
	0x01E7E1E0 STR X30, [X31 - 0x40]!
	0x01E7E1E4 STP X24, X23, [X31 + 0x10]
	0x01E7E1E8 STP X22, X21, [X31 + 0x20]
	0x01E7E1EC STP X20, X19, [X31 + 0x30]
	0x01E7E1F0 ADRP X23, 0x255B000
	0x01E7E1F4 ADRP X24, 0x227F000
	0x01E7E1F8 ADRP X19, 0x227F000
	0x01E7E1FC ADRP X20, 0x227F000
	0x01E7E200 ADRP X22, 0x227F000
	0x01E7E204 ADRP X21, 0x227F000
	0x01E7E208 LDRB W8, [X23 + 0x1C4]
	0x01E7E20C LDR X24, [X24 + 0xB78]
	0x01E7E210 LDR X19, [X19 + 0xB80]
	0x01E7E214 LDR X20, [X20 + 0xB88]
	0x01E7E218 LDR X22, [X22 + 0xB90]
	0x01E7E21C LDR X21, [X21 + 0xB98]
	0x01E7E220 TBNZ X8, 0x0, 0x1E7E268
	0x01E7E224 ADRP X0, 0x227F000
	0x01E7E228 LDR X0, [X0 + 0xB88]
	0x01E7E22C BL 0x1C16CF4
	0x01E7E230 ADRP X0, 0x227F000
	0x01E7E234 LDR X0, [X0 + 0xB80]
	0x01E7E238 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+128]
	005 Move X19, X0
	006 Compare W8, 0
	007 JumpIfEqual {18}
	008 Move W8, [X19+130]
	009 Compare W8, 0
	010 JumpIfEqual {18}
	011 Move X20, [X19+136]
	012 Move X0, X19
	013 Call NetworkTRSP.get_State, X0
	014 Move X2, [X0]
	015 Move X0, X19
	016 Move X1, X20
	017 Call NetworkTRSP.SetParentTransform, X0, X1, X2
	018 Move X20, [X19+136]
	019 Move X0, X19
	020 Call NetworkTRSP.get_State, X0
	021 Compare X20, 0
	022 JumpIfEqual {65}
	023 Move S1, [X0+12]
	024 Move S2, [X0+16]
	025 Move V0, [X0+8]
	026 Move X0, X20
	027 Move X1, X31
	028 Call Transform.set_localPosition, X0, X1
	029 Move X20, [X19+136]
	030 Move X0, X19
	031 Call NetworkTRSP.get_State, X0
	032 Compare X20, 0
	033 JumpIfEqual {65}
	034 Move S2, [X0+28]
	035 Move S3, [X0+32]
	036 Move S0, [X0+20]
	037 Move S1, [X0+24]
	038 Move X0, X20
	039 Move X1, X31
	040 Call Transform.set_localRotation, X0, X1
	041 Move W8, [X19+129]
	042 Compare W8, 0
	043 JumpIfEqual {61}
	044 Move X20, [X19+136]
	045 Move X0, X19
	046 Call NetworkTRSP.get_State, X0
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move W1, [X0+44]
	049 Move X2, X31
	050 Move X0, X8
	051 Call 0x1E2F6F8
	052 Compare X20, 0
	053 JumpIfEqual {65}
	054 Move X0, X20
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X1, X31
	058 Move X30, [X31+32]
	059 Call Transform.set_localScale, X0, X1
	060 Return 
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move X30, [X31+32]
	064 Return 
	065 Call 0x1C17F20

Method: System.Void CopyToBuffer()

Disassembly:
	0x01E7E3AC UBFM W2, W8, 0x1D, 0x1C
	0x01E7E3B0 MOV X3, X31
	0x01E7E3B4 BL 0x1E35764
	0x01E7E3B8 CMP W21, 0x1
	0x01E7E3BC B.LT 0x1E7E414
	0x01E7E3C0 LDR W8, [X19 + 0x60]
	0x01E7E3C4 MOV W21, W21
	0x01E7E3C8 LDR W9, [X19 + 0x64]
	0x01E7E3CC CMP W8, W9
	0x01E7E3D0 B.NE 0x1E7E3F0
	0x01E7E3D4 LDR X0, [X23]
	0x01E7E3D8 LDR W8, [X0 + 0xE0]
	0x01E7E3DC CBNZ W8, 0x1E7E3E4
	0x01E7E3E0 BL 0x1C16DFC
	0x01E7E3E4 MOV X0, X19
	0x01E7E3E8 BL 0x1E80B68
	0x01E7E3EC LDR W8, [X19 + 0x60]
	0x01E7E3F0 ADD W10, W8, 0x1
	0x01E7E3F4 STR W10, [X19 + 0x60]
	0x01E7E3F8 LDR X9, [X19 + 0x58]
	0x01E7E3FC LDR X11, [X20], #0x8
	0x01E7E400 SUBS X21, X21, 0x1
	0x01E7E404 SUB X11, X11, 0x8
	0x01E7E408 STR X11, [X9, W8, SXTW]
	0x01E7E40C MOV W8, W10
	0x01E7E410 B.NE 0x1E7E3C8
	0x01E7E414 MOVZ W8, 0x1
	0x01E7E418 STR W8, [X19 + 0x54]
	0x01E7E41C LDR W8, [X19 + 0x60]
	0x01E7E420 CMP W8, 0x1
	0x01E7E424 B.LT 0x1E7E5F4
	0x01E7E428 LDR X20, [X19 + 0x30]
	0x01E7E42C LDR X9, [X19 + 0x40]
	0x01E7E430 MOVZ W23, 0xFFFF
	0x01E7E434 STR X9, [X31]
	0x01E7E438 LDR X9, [X19 + 0x58]
	0x01E7E43C SUB W8, W8, 0x1
	0x01E7E440 STR W8, [X19 + 0x60]
	0x01E7E444 LDR X10, [X9, W8, SXTW]
	0x01E7E448 CBZ X10, 0x1E7E810
	0x01E7E44C LDRH W8, [X10 + 0x2]
	0x01E7E450 CMP W8, W22, UXTH
	0x01E7E454 B.EQ 0x1E7E5E8
	0x01E7E458 LDRSH W8, [X10 + 0x4]
	0x01E7E45C ADDS W31, W8, 0x1
	0x01E7E460 B.EQ 0x1E7E5E8
	0x01E7E464 LDRB W8, [X10]
	0x01E7E468 LDRH W25, [X10 + 0x6]
	0x01E7E46C ADD X26, X10, 0x8
	0x01E7E470 STRH W22, [X10 + 0x2]
	0x01E7E474 AND W9, W8, 0xFFFFFFEF
	0x01E7E478 STRB W9, [X10]
	0x01E7E47C TBNZ X8, 0x2, 0x1E7E560
	0x01E7E480 CBZ W25, 0x1E7E5E8
	0x01E7E484 LDRH W29, [X10 + 0x4]
	0x01E7E488 MOV W28, W31
	0x01E7E48C MOV W8, W25
	0x01E7E490 STR X10, [X31 + 0x8]
	0x01E7E494 LDR W21, [X20, X29, LSL #2]
	0x01E7E498 CMP W21, 0x1
	0x01E7E49C B.LT 0x1E7E538
	0x01E7E4A0 MOVZ W24, 0x1
	0x01E7E4A4 ADD W8, W29, W24
	0x01E7E4A8 LDRSW X8, [X20, W8, SXTW]
	0x01E7E4AC LDR X8, [X26, X8, LSL #3]
	0x01E7E4B0 CBZ X8, 0x1E7E524
	0x01E7E4B4 SUBS X27, X8, 0x8
	0x01E7E4B8 B.EQ 0x1E7E810
	0x01E7E4BC LDRH W8, [X27 + 0x4]
	0x01E7E4C0 CMP X8, X23
	0x01E7E4C4 B.EQ 0x1E7E524
	0x01E7E4C8 LDRH W9, [X27 + 0x2]
	0x01E7E4CC CMP W9, W22, UXTH
	0x01E7E4D0 B.EQ 0x1E7E524
	0x01E7E4D4 LDR W8, [X20, X8, LSL #2]
	0x01E7E4D8 CBZ W8, 0x1E7E520
	0x01E7E4DC LDP W8, W9, [X19 + 0x60]
	0x01E7E4E0 CMP W8, W9
	0x01E7E4E4 B.NE 0x1E7E50C
	0x01E7E4E8 ADRP X8, 0x227F000
	0x01E7E4EC LDR X8, [X8 + 0xBA0]
	0x01E7E4F0 LDR X0, [X8]
	0x01E7E4F4 LDR W8, [X0 + 0xE0]
	0x01E7E4F8 CBNZ W8, 0x1E7E500
	0x01E7E4FC BL 0x1C16DFC
	0x01E7E500 MOV X0, X19
	0x01E7E504 BL 0x1E80B68
	0x01E7E508 LDR W8, [X19 + 0x60]
	0x01E7E50C LDR X9, [X19 + 0x58]
	0x01E7E510 ADD W10, W8, 0x1
	0x01E7E514 STR W10, [X19 + 0x60]
	0x01E7E518 STR X27, [X9, W8, SXTW]
	0x01E7E51C B 0x1E7E524
	0x01E7E520 STRH W22, [X27 + 0x2]
	0x01E7E524 ADD W24, W24, 0x1
	0x01E7E528 CMP W24, W21
	0x01E7E52C B.LE 0x1E7E4A4
	0x01E7E530 LDR X10, [X31 + 0x8]
	0x01E7E534 LDRH W8, [X10 + 0x6]
	0x01E7E538 AND W9, W8, 0xFFFF
	0x01E7E53C CMP W9, 0x2
	0x01E7E540 B.CC 0x1E7E550
	0x01E7E544 LDR X9, [X31]
	0x01E7E548 LDRSW X9, [X9, X29, LSL #2]
	0x01E7E54C ADD X26, X26, X9, 0x3, LSL
	0x01E7E550 ADD W28, W28, 0x1
	0x01E7E554 CMP W28, W25
	0x01E7E558 B.NE 0x1E7E498
	0x01E7E55C B 0x1E7E5E8
	0x01E7E560 CBZ W25, 0x1E7E5E8
	0x01E7E564 LDR X8, [X26]
	0x01E7E568 CBZ X8, 0x1E7E5DC
	0x01E7E56C SUBS X21, X8, 0x8
	0x01E7E570 B.EQ 0x1E7E810
	0x01E7E574 LDRH W8, [X21 + 0x4]
	0x01E7E578 CMP X8, X23
	0x01E7E57C B.EQ 0x1E7E5DC
	0x01E7E580 LDRH W9, [X21 + 0x2]
	0x01E7E584 CMP W9, W22, UXTH
	0x01E7E588 B.EQ 0x1E7E5DC
	0x01E7E58C LDR W8, [X20, X8, LSL #2]
	0x01E7E590 CBZ W8, 0x1E7E5D8
	0x01E7E594 LDP W8, W9, [X19 + 0x60]
	0x01E7E598 CMP W8, W9
	0x01E7E59C B.NE 0x1E7E5C4
	0x01E7E5A0 ADRP X8, 0x227F000
	0x01E7E5A4 LDR X8, [X8 + 0xBA0]
	0x01E7E5A8 LDR X0, [X8]
	0x01E7E5AC LDR W8, [X0 + 0xE0]
	0x01E7E5B0 CBNZ W8, 0x1E7E5B8
	0x01E7E5B4 BL 0x1C16DFC
	0x01E7E5B8 MOV X0, X19
	0x01E7E5BC BL 0x1E80B68
	0x01E7E5C0 LDR W8, [X19 + 0x60]
	0x01E7E5C4 LDR X9, [X19 + 0x58]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x255C000
	009 Move W8, [X20+442]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x2280000
	016 Move X0, [X0+2880]
	017 Call 0x1C17CF4
	018 Move X0, 0x2276000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+442], W8
	023 Move [X31+8], X31
	024 Move X20, [X19+136]
	025 Move X0, X19
	026 Call NetworkTRSP.get_State, X0
	027 Compare X20, 0
	028 JumpIfEqual {168}
	029 Move X21, X0
	030 Move X0, X20
	031 Move X1, X31
	032 Call Transform.get_localPosition, X0
	033 Move X0, X19
	034 Move [X21+8], S0
	035 Move [X21+16], S1
	036 Move [X21+16], S2
	037 Call NetworkTRSP.get_State, X0
	038 Move X21, X0
	039 Move X0, X20
	040 Move X1, X31
	041 Call Transform.get_localRotation, X0
	042 Move [X21+20], S0
	043 Move [X21+28], S1
	044 Move [X21+28], S2
	045 Move [X21+36], S3
	046 Move W8, [X19+129]
	047 Compare W8, 0
	048 JumpIfEqual {59}
	049 Move X0, X19
	050 Call NetworkTRSP.get_State, X0
	051 Move X21, X0
	052 Move X0, X20
	053 Move X1, X31
	054 Call Transform.get_localScale, X0
	055 Move X0, X31
	056 Call 0x1E2F540
	057 Move [X21+36], X0
	058 Move [X21+44], W1
	059 Move W8, [X19+128]
	060 Compare W8, 0
	061 JumpIfEqual {160}
	062 Move X22, 0x2276000
	063 Move X22, [X22+1432]
	064 Move X0, X20
	065 Move X1, X31
	066 Call Transform.get_parent, X0
	067 Move X8, [X22]
	068 Move X20, X0
	069 Move W9, [X8+224]
	070 Compare W9, 0
	071 JumpIfNotEqual {74}
	072 Move X0, X8
	073 Call 0x1C17DFC
	074 Move X0, X20
	075 Move X1, X31
	076 Call Object.op_Implicit, X0
	077 Move W21, W0
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {94}
	082 Move W8, [X19+145]
	083 Compare W8, 0
	084 JumpIfEqual {94}
	085 Move W8, [X19+147]
	086 Compare W8, 0
	087 JumpIfEqual {94}
	088 Move X0, X19
	089 Move X1, X20
	090 Call NetworkTRSP.ResolveAOIOverride, X0, X1
	091 Move W8, [X19+130]
	092 Compare W8, 0
	093 JumpIfNotEqual {107}
	094 Move X8, [X19]
	095 Move X0, X19
	096 Move X1, X31
	097 Move X9, [X8+584]
	098 Move X2, [X8+592]
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move W8, [X19+130]
	101 Compare W8, 0
	102 JumpIfEqual {160}
	103 Move TEMP, X21
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfNotEqual {155}
	107 Compare X20, 0
	108 JumpIfEqual {168}
	109 Move X8, 0x2280000
	110 Move X8, [X8+2880]
	111 Add X1, X31, 8
	112 Move X0, X20
	113 Move X2, [X8]
	114 Call 0x21A5990, X0, X1
	115 Move W20, W0
	116 Move X0, X19
	117 Call NetworkTRSP.get_State, X0
	118 Move X19, X0
	119 Move TEMP, X20
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {158}
	123 Move X20, [X31+8]
	124 Compare X20, 0
	125 JumpIfEqual {168}
	126 Move X23, 0x255B000
	127 Move W8, [X23+2594]
	128 Move X21, [X20+56]
	129 Compare W8, 0
	130 JumpIfNotEqual {136}
	131 Move X0, 0x2276000
	132 Move X0, [X0+1432]
	133 Call 0x1C17CF4
	134 Move W8, 1
	135 Move [X23+2594], W8
	136 Move X0, [X22]
	137 Move W8, [X0+224]
	138 Compare W8, 0
	139 JumpIfNotEqual {141}
	140 Call 0x1C17DFC
	141 Move X0, X21
	142 Move X1, X31
	143 Call Object.op_Implicit, X0
	144 Move W8, W0
	145 Move X0, X31
	146 Move TEMP, X8
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfNotEqual {154}
	150 Move X0, [X20+56]
	151 Move X1, X20
	152 Move X2, X31
	153 Call NetworkBehaviour.NetworkWrap, X0, X1
	154 Move [X19], X0
	155 Move X0, X19
	156 Call NetworkTRSP.get_State, X0
	157 Move [X0], X31
	158 Move X8, 1
	159 Move [X19], X8
	160 Move X20, [X31+48]
	161 Move X19, [X31+56]
	162 Move X22, [X31+32]
	163 Move X21, [X31+40]
	164 Move X30, [X31+16]
	165 Move X23, [X31+24]
	166 Add X31, X31, 64
	167 Return 
	168 Call 0x1C17F20

Method: System.Void Fusion.IBeforeAllTicks.BeforeAllTicks(System.Boolean resimulation, System.Int32 tickCount)

Disassembly:
	0x01E7E708 CBZ X28, 0x1E7E810
	0x01E7E70C LDRB W8, [X28]
	0x01E7E710 STRH W22, [X28 + 0x2]
	0x01E7E714 AND W8, W8, 0xFFFFFFEF
	0x01E7E718 STRB W8, [X28]
	0x01E7E71C LDR W8, [X25 + 0x3C]
	0x01E7E720 ADD W27, W27, 0x1
	0x01E7E724 CMP W27, W8
	0x01E7E728 B.LT 0x1E7E694
	0x01E7E72C LDR W8, [X19 + 0x50]
	0x01E7E730 LDR W10, [X19 + 0x68]
	0x01E7E734 ADD W11, W8, 0x1
	0x01E7E738 CMP W11, W10
	0x01E7E73C STR W11, [X19 + 0x50]
	0x01E7E740 B.LT 0x1E7E644
	0x01E7E744 LDR W8, [X19 + 0x4C]
	0x01E7E748 LDR W9, [X19 + 0x20]
	0x01E7E74C ADD W8, W8, 0x1
	0x01E7E750 MOV W11, W31
	0x01E7E754 CMP W8, W9
	0x01E7E758 STP W8, W31, [X19 + 0x4C]
	0x01E7E75C B.LT 0x1E7E630
	0x01E7E760 MOVZ W8, 0x3
	0x01E7E764 STR W8, [X19 + 0x54]
	0x01E7E768 LDR W8, [X19 + 0x60]
	0x01E7E76C CMP W8, 0x1
	0x01E7E770 B.LT 0x1E7E7EC
	0x01E7E774 ADRP X22, 0x227F000
	0x01E7E778 LDR X22, [X22 + 0xBA0]
	0x01E7E77C LDR X9, [X19 + 0x58]
	0x01E7E780 SUB W8, W8, 0x1
	0x01E7E784 STR W8, [X19 + 0x60]
	0x01E7E788 LDR X20, [X9, W8, SXTW]
	0x01E7E78C LDRB W21, [X20]
	0x01E7E790 TBNZ X21, 0x4, 0x1E7E7D4
	0x01E7E794 LDRB W25, [X20 + 0x7]
	0x01E7E798 LDURH W24, [X20 + 0x5]
	0x01E7E79C LDUR W23, [X20 + 0x1]
	0x01E7E7A0 STR X31, [X20]
	0x01E7E7A4 LDR X0, [X22]
	0x01E7E7A8 LDR W8, [X0 + 0xE0]
	0x01E7E7AC CBNZ W8, 0x1E7E7B4
	0x01E7E7B0 BL 0x1C16DFC
	0x01E7E7B4 BFM W24, W25, 0x10, 0xF
	0x01E7E7B8 BFM X23, X24, 0x20, 0x1F
	0x01E7E7BC BFM X21, X23, 0x38, 0x37
	0x01E7E7C0 MOV X0, X19
	0x01E7E7C4 MOV X1, X20
	0x01E7E7C8 MOV X2, X21
	0x01E7E7CC BL 0x1E80618
	0x01E7E7D0 B 0x1E7E7E0
	0x01E7E7D4 LDRB W8, [X20]
	0x01E7E7D8 AND W8, W8, 0xFFFFFFEF
	0x01E7E7DC STRB W8, [X20]
	0x01E7E7E0 LDR W8, [X19 + 0x60]
	0x01E7E7E4 CMP W8, 0x0
	0x01E7E7E8 B.GT 0x1E7E77C
	0x01E7E7EC STR W31, [X19 + 0x54]
	0x01E7E7F0 LDP X20, X19, [X31 + 0x60]
	0x01E7E7F4 LDP X22, X21, [X31 + 0x50]
	0x01E7E7F8 LDP X24, X23, [X31 + 0x40]
	0x01E7E7FC LDP X26, X25, [X31 + 0x30]
	0x01E7E800 LDP X28, X27, [X31 + 0x20]
	0x01E7E804 LDP X29, X30, [X31 + 0x10]
	0x01E7E808 ADD X31, X31, 0x70
	0x01E7E80C RET
	0x01E7E810 BL 0x1C16F20
	0x01E7E814 LDR X0, [X20]
	0x01E7E818 BL 0x19903D0
	0x01E7E81C BL 0x1E80024
	0x01E7E820 LDR W8, [X0 + 0x20]
	0x01E7E824 LDR W9, [X0 + 0x68]
	0x01E7E828 UBFM W8, W8, 0x11, 0x10
	0x01E7E82C SUB W8, W8, 0x8000
	0x01E7E830 MUL W0, W8, W9
	0x01E7E834 RET
	0x01E7E838 STP X30, X21, [X31 - 0x20]!
	0x01E7E83C STP X20, X19, [X31 + 0x10]
	0x01E7E840 ADRP X21, 0x255B000
	0x01E7E844 ADRP X20, 0x2275000
	0x01E7E848 LDRB W8, [X21 + 0x1C5]
	0x01E7E84C LDR X20, [X20 + 0x5A8]
	0x01E7E850 MOV X19, X0
	0x01E7E854 TBNZ X8, 0x0, 0x1E7E86C
	0x01E7E858 ADRP X0, 0x2275000
	0x01E7E85C LDR X0, [X0 + 0x5A8]
	0x01E7E860 BL 0x1C16CF4
	0x01E7E864 MOVZ W8, 0x1
	0x01E7E868 STRB W8, [X21 + 0x1C5]
	0x01E7E86C LDR X0, [X20]
	0x01E7E870 LDR W19, [X19 + 0x84]
	0x01E7E874 LDR W8, [X0 + 0xE0]
	0x01E7E878 CBNZ W8, 0x1E7E880
	0x01E7E87C BL 0x1C16DFC
	0x01E7E880 ADRP X21, 0x255B000
	0x01E7E884 LDRB W8, [X21 + 0x229]
	0x01E7E888 CBNZ W8, 0x1E7E8A0
	0x01E7E88C ADRP X0, 0x2275000
	0x01E7E890 LDR X0, [X0 + 0x5A8]
	0x01E7E894 BL 0x1C16CF4
	0x01E7E898 MOVZ W8, 0x1
	0x01E7E89C STRB W8, [X21 + 0x229]
	0x01E7E8A0 LDR X0, [X20]
	0x01E7E8A4 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+56]
	006 Compare X0, 0
	007 JumpIfEqual {131}
	008 Move W20, W1
	009 Move X1, X31
	010 Call NetworkRunner.get_Mode, X0
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X0, [X19+56]
	013 Compare X0, 0
	014 JumpIfEqual {131}
	015 Move X1, X31
	016 Call NetworkRunner.get_Topology, X0
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W8, [X19+148]
	019 Compare W8, 0
	020 JumpIfEqual {35}
	021 Move X0, [X19+64]
	022 Compare X0, 0
	023 JumpIfEqual {35}
	024 Move W8, [X0+96]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 2
	027 Compare TEMP, 2
	028 JumpIfEqual {35}
	029 Move X1, X31
	030 Call NetworkObject.get_HasStateAuthority, X0
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {127}
	035 Move TEMP, X20
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {45}
	039 Move X0, X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Call NetworkTransform.CopyToEngine, X0
	044 Return 
	045 Move W8, [X19+149]
	046 Compare W8, 0
	047 JumpIfEqual {125}
	048 Move W8, [X19+144]
	049 Compare W8, 0
	050 JumpIfEqual {125}
	051 Move X0, [X19+136]
	052 Compare X0, 0
	053 JumpIfEqual {131}
	054 Move X1, X31
	055 Call Transform.get_localPosition, X0
	056 Move S3, [X19+152]
	057 Move S4, [X19+156]
	058 Move V5, [X19+160]
	059 Move X8, -20529152
	060 Subtract S0, S0, S3
	061 Move V3, [X8+3872]
	062 Subtract S1, S1, S4
	063 Subtract S2, S2, S5
	064 Multiply S0, S0, S0
	065 Multiply S1, S1, S1
	066 Add S0, S0, S1
	067 Multiply S1, S2, S2
	068 Add S0, S1, S0
	069 NotImplemented "Instruction FCMP not yet implemented."
	070 Move X0, [X19+136]
	071 Compare X0, 0
	072 JumpIfEqual {131}
	073 Move X1, X31
	074 Call Transform.get_localRotation, X0
	075 Move S4, [X19+164]
	076 Move S5, [X19+168]
	077 Move S6, [X19+172]
	078 Move S7, [X19+176]
	079 Move X8, -20525056
	080 Multiply S0, S0, S4
	081 Move V4, [X8+436]
	082 Multiply S1, S1, S5
	083 Multiply S2, S2, S6
	084 Add S0, S0, S1
	085 Add S0, S2, S0
	086 Multiply S1, S3, S7
	087 Add S0, S1, S0
	088 NotImplemented "Instruction FCMP not yet implemented."
	089 Move W8, [X19+128]
	090 Compare W8, 0
	091 JumpIfEqual {102}
	092 Move W8, [X19+130]
	093 Compare W8, 0
	094 JumpIfEqual {102}
	095 Move X20, [X19+136]
	096 Move X0, X19
	097 Call NetworkTRSP.get_State, X0
	098 Move X2, [X0]
	099 Move X0, X19
	100 Move X1, X20
	101 Call NetworkTRSP.SetParentTransform, X0, X1, X2
	102 Move X20, [X19+136]
	103 Move X0, X19
	104 Call NetworkTRSP.get_State, X0
	105 Compare X20, 0
	106 JumpIfEqual {131}
	107 Move S1, [X0+12]
	108 Move S2, [X0+16]
	109 Move V0, [X0+8]
	110 Move X0, X20
	111 Move X1, X31
	112 Call Transform.set_localPosition, X0, X1
	113 Move X20, [X19+136]
	114 Move X0, X19
	115 Call NetworkTRSP.get_State, X0
	116 Compare X20, 0
	117 JumpIfEqual {131}
	118 Move S2, [X0+28]
	119 Move S3, [X0+32]
	120 Move S0, [X0+20]
	121 Move S1, [X0+24]
	122 Move X0, X20
	123 Move X1, X31
	124 Call Transform.set_localRotation, X0, X1
	125 Move [X19+149], W31
	126 Move [X19+144], W31
	127 Move X20, [X31+16]
	128 Move X19, [X31+24]
	129 Move X30, [X31+32]
	130 Return 
	131 Call 0x1C17F20

Method: System.Void Fusion.IAfterAllTicks.AfterAllTicks(System.Boolean resimulation, System.Int32 tickCount)

Disassembly:
	0x01E7E8A8 CBNZ W8, 0x1E7E8B0
	0x01E7E8AC BL 0x1C16DFC
	0x01E7E8B0 MOVZ X8, 0x3F500000
	0x01E7E8B4 SCVTF D0, W19
	0x01E7E8B8 LDP X20, X19, [X31 + 0x10]
	0x01E7E8BC FMOV D1, X8
	0x01E7E8C0 FMUL D0, D0, D1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call NetworkTransform.CopyToBuffer, X0
	005 Move W8, 1
	006 Move [X19+144], W8
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 

Method: System.Void Fusion.IBeforeCopyPreviousState.BeforeCopyPreviousState()

Disassembly:
	0x01E7E8C4 FMUL D0, D0, D1

ISIL:
	001 Call NetworkTransform.CopyToBuffer, X0
	002 Return 

Method: System.Void Teleport(System.Nullable`1<UnityEngine.Vector3> position = null, System.Nullable`1<UnityEngine.Quaternion> rotation = null)

Disassembly:
	0x01E7E8C8 MOVZ W0, 0x3
	0x01E7E8CC MOV W1, W31
	0x01E7E8D0 MOV X2, X31
	0x01E7E8D4 LDP X30, X21, [X31], #0x20
	0x01E7E8D8 B 0x337EFF0
	0x01E7E8DC LDR W0, [X0 + 0x80]
	0x01E7E8E0 RET
	0x01E7E8E4 LDR W0, [X0 + 0x7C]
	0x01E7E8E8 RET
	0x01E7E8EC LDR W0, [X0 + 0x54]
	0x01E7E8F0 RET
	0x01E7E8F4 STP X30, X23, [X31 - 0x30]!
	0x01E7E8F8 STP X22, X21, [X31 + 0x10]
	0x01E7E8FC STP X20, X19, [X31 + 0x20]
	0x01E7E900 ADRP X20, 0x255B000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, X2
	004 Move X2, X1
	005 Move W9, [X3+16]
	006 Move V0, [X3]
	007 Move X1, [X0+136]
	008 Add X4, X31, 0
	009 Move X3, X8
	010 Move [X31+16], W9
	011 Move [X31], V0
	012 Call NetworkTRSP.Teleport, X0, X1, X2, X3
	013 Move X30, [X31+32]
	014 Add X31, X31, 48
	015 Return 

Method: System.Void SetAreaOfInterestOverride(Fusion.NetworkObject obj)

Disassembly:
	0x01E7EA40 ADRP X0, 0x227F000
	0x01E7EA44 LDR X0, [X0 + 0xBA0]
	0x01E7EA48 BL 0x1C16CF4
	0x01E7EA4C MOVZ W8, 0x1
	0x01E7EA50 STRB W8, [X20 + 0x1C7]
	0x01E7EA54 LDR X0, [X21]
	0x01E7EA58 LDR W8, [X0 + 0xE0]
	0x01E7EA5C CBNZ W8, 0x1E7EA64
	0x01E7EA60 BL 0x1C16DFC
	0x01E7EA64 MOV X1, X19
	0x01E7EA68 LDP X20, X19, [X31 + 0x10]
	0x01E7EA6C MOVZ W0, 0x40
	0x01E7EA70 LDP X30, X21, [X31], #0x20
	0x01E7EA74 B 0x1E7EA80
	0x01E7EA78 MOVZ W0, 0x40
	0x01E7EA7C RET
	0x01E7EA80 STP X29, X30, [X31 - 0x60]!
	0x01E7EA84 STP X28, X27, [X31 + 0x10]
	0x01E7EA88 STP X26, X25, [X31 + 0x20]
	0x01E7EA8C STP X24, X23, [X31 + 0x30]
	0x01E7EA90 STP X22, X21, [X31 + 0x40]
	0x01E7EA94 STP X20, X19, [X31 + 0x50]
	0x01E7EA98 ADRP X22, 0x255B000
	0x01E7EA9C ADRP X20, 0x227F000
	0x01E7EAA0 ADRP X25, 0x227F000
	0x01E7EAA4 LDRB W8, [X22 + 0x1C8]
	0x01E7EAA8 LDR X20, [X20 + 0xBA8]
	0x01E7EAAC LDR X25, [X25 + 0xBA0]
	0x01E7EAB0 MOV X19, X1
	0x01E7EAB4 MOV X21, X0
	0x01E7EAB8 TBNZ X8, 0x0, 0x1E7EBFC
	0x01E7EABC ADRP X0, 0x227F000
	0x01E7EAC0 LDR X0, [X0 + 0xBB0]
	0x01E7EAC4 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x255C000
	007 Move X21, 0x2276000
	008 Move W8, [X22+443]
	009 Move X21, [X21+1432]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2276000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+443], W8
	021 Move X0, X19
	022 Move X1, X20
	023 Call NetworkTRSP.SetAreaOfInterestOverride, X0, X1
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X20
	030 Move X1, X31
	031 Call Object.op_Implicit, X0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {37}
	036 Move W8, W31
	037 Move W8, [X19+146]
	038 Move [X19+147], W8
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 

Method: System.Void Spawned()

Disassembly:
	0x01E7EB8C LDR X0, [X0 + 0xC18]
	0x01E7EB90 BL 0x1C16CF4
	0x01E7EB94 ADRP X0, 0x227F000
	0x01E7EB98 LDR X0, [X0 + 0xC20]
	0x01E7EB9C BL 0x1C16CF4
	0x01E7EBA0 ADRP X0, 0x227F000
	0x01E7EBA4 LDR X0, [X0 + 0xC28]
	0x01E7EBA8 BL 0x1C16CF4
	0x01E7EBAC ADRP X0, 0x227F000
	0x01E7EBB0 LDR X0, [X0 + 0xC30]
	0x01E7EBB4 BL 0x1C16CF4
	0x01E7EBB8 ADRP X0, 0x227F000
	0x01E7EBBC LDR X0, [X0 + 0xC38]
	0x01E7EBC0 BL 0x1C16CF4
	0x01E7EBC4 ADRP X0, 0x227F000
	0x01E7EBC8 LDR X0, [X0 + 0xC40]
	0x01E7EBCC BL 0x1C16CF4
	0x01E7EBD0 ADRP X0, 0x227F000
	0x01E7EBD4 LDR X0, [X0 + 0xC48]
	0x01E7EBD8 BL 0x1C16CF4
	0x01E7EBDC ADRP X0, 0x227F000
	0x01E7EBE0 LDR X0, [X0 + 0xBA8]
	0x01E7EBE4 BL 0x1C16CF4
	0x01E7EBE8 ADRP X0, 0x227F000
	0x01E7EBEC LDR X0, [X0 + 0xC50]
	0x01E7EBF0 BL 0x1C16CF4
	0x01E7EBF4 MOVZ W8, 0x1
	0x01E7EBF8 STRB W8, [X22 + 0x1C8]
	0x01E7EBFC LDR X0, [X20]
	0x01E7EC00 ADRP X23, 0x227F000
	0x01E7EC04 ADRP X22, 0x227F000
	0x01E7EC08 LDR X23, [X23 + 0xC28]
	0x01E7EC0C LDR X22, [X22 + 0xC18]
	0x01E7EC10 BL 0x1C16F10
	0x01E7EC14 MOV X1, X31
	0x01E7EC18 MOV X20, X0
	0x01E7EC1C BL 0x33BDD8C
	0x01E7EC20 LDR X0, [X25]
	0x01E7EC24 LDR W8, [X0 + 0xE0]
	0x01E7EC28 CBNZ W8, 0x1E7EC30
	0x01E7EC2C BL 0x1C16DFC
	0x01E7EC30 MOV X0, X19
	0x01E7EC34 BL 0x1E7F2BC
	0x01E7EC38 LDR X0, [X23]
	0x01E7EC3C BL 0x2221EE4
	0x01E7EC40 LDR X1, [X22]
	0x01E7EC44 MOV X19, X0
	0x01E7EC48 MOVZ W0, 0xFF
	0x01E7EC4C BL 0x2222190
	0x01E7EC50 CBZ X19, 0x1E7F1E4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x255C000
	006 Move X20, 0x2276000
	007 Move W8, [X21+444]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2276000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+444], W8
	019 Move X0, [X20]
	020 Move X20, [X19+136]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Call Object.op_Implicit, X0
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {34}
	032 Move X0, X19
	033 Call NetworkTransform.Awake, X0
	034 Move X8, [X19+56]
	035 Compare X8, 0
	036 JumpIfEqual {72}
	037 Move X8, [X8+152]
	038 Compare X8, 0
	039 JumpIfEqual {72}
	040 Move X0, [X8+64]
	041 Compare X0, 0
	042 JumpIfEqual {72}
	043 Move X1, X31
	044 Call SimulationConfig.get_AreaOfInterestEnabled, X0
	045 Move W8, W0
	046 Move X0, [X19+64]
	047 And W8, W8, 1
	048 Move [X19+145], W8
	049 Move [X19+132], W31
	050 Compare X0, 0
	051 JumpIfEqual {72}
	052 Move X1, X31
	053 Call NetworkObject.get_HasStateAuthority, X0
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {65}
	058 Move X0, X19
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Call NetworkTransform.CopyToBuffer, X0
	064 Return 
	065 Move X0, X19
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Move X21, [X31+40]
	070 Call NetworkTransform.CopyToEngine, X0
	071 Return 
	072 Call 0x1C17F20

Method: System.Void Render()

Disassembly:
	0x01E7EC54 ADRP X8, 0x227F000
	0x01E7EC58 LDR X8, [X8 + 0xC10]
	0x01E7EC5C ADRP X23, 0x227F000
	0x01E7EC60 ADRP X22, 0x227F000
	0x01E7EC64 ADRP X27, 0x227F000
	0x01E7EC68 ADRP X26, 0x227F000
	0x01E7EC6C ADRP X24, 0x227F000
	0x01E7EC70 MOVZ W9, 0x1
	0x01E7EC74 LDR X23, [X23 + 0xC20]
	0x01E7EC78 LDR X22, [X22 + 0xBB0]
	0x01E7EC7C LDR X27, [X27 + 0xC50]
	0x01E7EC80 LDR X26, [X26 + 0xBC0]
	0x01E7EC84 LDR X24, [X24 + 0x618]
	0x01E7EC88 STR X0, [X19 + 0x18]
	0x01E7EC8C STR W9, [X19 + 0x20]
	0x01E7EC90 STRH W9, [X19 + 0x48]
	0x01E7EC94 STR W21, [X19 + 0x68]
	0x01E7EC98 LDR X1, [X8]
	0x01E7EC9C MOVZ W0, 0x31
	0x01E7ECA0 BL 0x22220DC
	0x01E7ECA4 MOVZ W8, 0x400
	0x01E7ECA8 STR X0, [X19 + 0x28]
	0x01E7ECAC STR W8, [X19 + 0x64]
	0x01E7ECB0 LDR X1, [X23]
	0x01E7ECB4 MOVZ W0, 0x400
	0x01E7ECB8 BL 0x22221A0
	0x01E7ECBC ADRP X8, 0xFFFFFFFFFEC6F000
	0x01E7ECC0 LDR V0, [X8 + 0x448]
	0x01E7ECC4 STR X0, [X19 + 0x58]
	0x01E7ECC8 MOVZ W0, 0x400
	0x01E7ECCC STR D0, [X19 + 0x78]
	0x01E7ECD0 LDR X1, [X23]
	0x01E7ECD4 BL 0x22221A0
	0x01E7ECD8 MOV X21, X31
	0x01E7ECDC MOV X23, X31
	0x01E7ECE0 MOVZ W28, 0x1000
	0x01E7ECE4 STR X0, [X19 + 0x70]
	0x01E7ECE8 LDR X8, [X19 + 0x28]
	0x01E7ECEC ADDS X29, X21, X8
	0x01E7ECF0 B.EQ 0x1E7F1E4
	0x01E7ECF4 STR W23, [X29]
	0x01E7ECF8 LDR X0, [X22]
	0x01E7ECFC LDR W8, [X0 + 0xE0]
	0x01E7ED00 CBZ W8, 0x1E7ED0C
	0x01E7ED04 MOV W8, W23
	0x01E7ED08 B 0x1E7ED18
	0x01E7ED0C BL 0x1C16DFC
	0x01E7ED10 LDR X0, [X22]
	0x01E7ED14 LDR W8, [X29]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+56]
	006 Compare X0, 0
	007 JumpIfEqual {64}
	008 Move X1, X31
	009 Call NetworkRunner.get_Mode, X0
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X0, [X19+56]
	012 Compare X0, 0
	013 JumpIfEqual {64}
	014 Move X1, X31
	015 Call NetworkRunner.get_Topology, X0
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W8, [X19+148]
	018 Compare W8, 0
	019 JumpIfEqual {34}
	020 Move X0, [X19+64]
	021 Compare X0, 0
	022 JumpIfEqual {34}
	023 Move W8, [X0+96]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 2
	026 Compare TEMP, 2
	027 JumpIfEqual {34}
	028 Move X1, X31
	029 Call NetworkObject.get_HasStateAuthority, X0
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {60}
	034 Move X1, [X19+136]
	035 Move W2, [X19+129]
	036 Move W3, [X19+130]
	037 Add X5, X19, 132
	038 Move W4, 1
	039 Move X0, X19
	040 Move W20, 1
	041 Call NetworkTRSP.Render, X0, X1, X2, X3, X4, X5
	042 Move X0, [X19+136]
	043 Move [X19+149], W20
	044 Compare X0, 0
	045 JumpIfEqual {64}
	046 Move X1, X31
	047 Call Transform.get_localPosition, X0
	048 Move X0, [X19+136]
	049 Move [X19+152], S0
	050 Move [X19+160], S1
	051 Move [X19+160], S2
	052 Compare X0, 0
	053 JumpIfEqual {64}
	054 Move X1, X31
	055 Call Transform.get_localRotation, X0
	056 Move [X19+164], S0
	057 Move [X19+172], S1
	058 Move [X19+172], S2
	059 Move [X19+180], S3
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 Return 
	064 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01E7F124 CMP W9, 0x1
	0x01E7F128 STR W13, [X12, X11, LSL #2]
	0x01E7F12C B.LT 0x1E7F04C
	0x01E7F130 AND X9, X9, 0x0

ISIL:
	001 Move W8, 1
	002 Move X1, X31
	003 Move [X0+147], W8
	004 Call NetworkBehaviour..ctor, X0
	005 Return 

