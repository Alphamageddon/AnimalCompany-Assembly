Type: Fusion.NetworkString`1

Method: System.Void .ctor(System.String value)

Disassembly:
	0x0242228C LDR X10, [X0 + 0xC0]
	0x02422290 LDR X10, [X10 + 0x68]
	0x02422294 LDR X24, [X10]
	0x02422298 TBNZ X9, 0x0, 0x24222A8
	0x0242229C MOV X0, X8
	0x024222A0 BL 0x1C5C684
	0x024222A4 MOV X8, X0
	0x024222A8 LDR X8, [X8 + 0xC0]
	0x024222AC MOV X0, X23
	0x024222B0 LDR X1, [X8 + 0x68]
	0x024222B4 BLR X24
	0x024222B8 CMP W0, W20
	0x024222BC B.LT 0x2422384
	0x024222C0 TBNZ X21, 0x1F, 0x24223A4
	0x024222C4 LDR X8, [X19 + 0x20]
	0x024222C8 ADD X9, X8, 0x135
	0x024222CC LDRH W9, [X9]
	0x024222D0 TBNZ X9, 0x0, 0x24222EC
	0x024222D4 MOV X0, X8
	0x024222D8 BL 0x1C5C684
	0x024222DC LDR X8, [X19 + 0x20]
	0x024222E0 ADD X9, X8, 0x135
	0x024222E4 LDRH W9, [X9]
	0x024222E8 B 0x24222F0
	0x024222EC MOV X0, X8
	0x024222F0 LDR X10, [X0 + 0xC0]
	0x024222F4 LDR X10, [X10 + 0x68]
	0x024222F8 LDR X24, [X10]
	0x024222FC TBNZ X9, 0x0, 0x242230C
	0x02422300 MOV X0, X8
	0x02422304 BL 0x1C5C684
	0x02422308 MOV X8, X0
	0x0242230C LDR X8, [X8 + 0xC0]
	0x02422310 MOV X0, X23
	0x02422314 LDR X1, [X8 + 0x68]
	0x02422318 BLR X24
	0x0242231C ADD W8, W21, W20
	0x02422320 CMP W8, W0
	0x02422324 B.GT 0x24223A4
	0x02422328 LDR X0, [X19 + 0x20]
	0x0242232C LDRB W8, [X0 + 0x135]
	0x02422330 TBNZ X8, 0x0, 0x2422338
	0x02422334 BL 0x1C5C684
	0x02422338 LDR X8, [X0 + 0xC0]
	0x0242233C MOV X0, X23
	0x02422340 LDR X8, [X8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X21, X2
	008 Move X19, X1
	009 Move X20, X0
	010 Move W9, [X8+309]
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {18}
	015 Move X0, X8
	016 Call 0x1C5D684
	017 Move X8, X0
	018 Move X8, [X8+192]
	019 Move X0, X20
	020 Move W1, W31
	021 Move X8, [X8]
	022 Move W2, [X8+252]
	023 Call 0x3EB2B10
	024 Move X8, [X21+32]
	025 Add X9, X8, 309
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move TEMP, X9
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {36}
	031 Move X0, X8
	032 Call 0x1C5D684
	033 Move X8, [X21+32]
	034 Add X9, X8, 309
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X0, X8
	037 Move X10, [X0+192]
	038 Move X10, [X10+8]
	039 Move X3, [X10]
	040 Move TEMP, X9
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {49}
	044 Move X0, X8
	045 Move [X31+8], X3
	046 Call 0x1C5D684
	047 Move X3, [X31+8]
	048 Move X8, X0
	049 Move X8, [X8+192]
	050 Move X0, X20
	051 Move X1, X19
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X2, [X8+8]
	055 Move X30, [X31+16]
	056 Move X21, [X31+24]
	057 Add X31, X31, 48
	058 CallNoReturn X3

Method: System.Int32 get_Capacity()

Disassembly:
	0x02422344 LDR X8, [X8 + 0x80]
	0x02422348 ADD X1, X8, 0x20
	0x0242234C BL 0x1C16D18
	0x02422350 ADD X0, X0, W20, 0x2, UXTW
	0x02422354 MOV W1, W21
	0x02422358 MOV X2, X22
	0x0242235C MOV X3, X31
	0x02422360 BL 0x1E38D98
	0x02422364 CMP W0, 0x0
	0x02422368 CSEL W8, W31, W20, LT
	0x0242236C LDP X20, X19, [X31 + 0x30]
	0x02422370 LDP X22, X21, [X31 + 0x20]
	0x02422374 LDP X24, X23, [X31 + 0x10]
	0x02422378 ADD W0, W8, W0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X1+32]
	003 Move W8, [X0+309]
	004 Move TEMP, X8
	005 And TEMP, TEMP, 1
	006 Compare TEMP, 1
	007 JumpIfEqual {9}
	008 Call 0x1C5D684
	009 Move X8, [X0+192]
	010 Move X8, [X8+24]
	011 Move W8, [X8+252]
	012 Add W9, W8, 3
	013 NotImplemented "Instruction CMP not yet implemented."
	014 NotImplemented "Instruction CSEL not yet implemented."
	015 NotImplemented "Instruction SBFM not yet implemented."
	016 Move X30, [X31+16]
	017 Return X0

Method: System.String get_Value()

Disassembly:
	0x0242237C LDR X30, [X31], #0x40
	0x02422380 RET
	0x02422384 ADRP X0, 0x1CD9000
	0x02422388 LDR X0, [X0 + 0x760]
	0x0242238C BL 0x1C16D08
	0x02422390 BL 0x1C16F10
	0x02422394 MOV X20, X0
	0x02422398 ADRP X0, 0x1CF9000
	0x0242239C LDR X0, [X0 + 0x658]
	0x024223A0 B 0x24223C0
	0x024223A4 ADRP X0, 0x1CD9000
	0x024223A8 LDR X0, [X0 + 0x760]
	0x024223AC BL 0x1C16D08
	0x024223B0 BL 0x1C16F10
	0x024223B4 MOV X20, X0
	0x024223B8 ADRP X0, 0x1CF9000
	0x024223BC LDR X0, [X0 + 0x648]
	0x024223C0 BL 0x1C16D08
	0x024223C4 MOV X1, X0
	0x024223C8 MOV X0, X20
	0x024223CC MOV X2, X31
	0x024223D0 BL 0x3316014
	0x024223D4 B 0x2422408
	0x024223D8 ADRP X0, 0x1CD6000
	0x024223DC LDR X0, [X0 + 0x528]
	0x024223E0 BL 0x1C16D08
	0x024223E4 BL 0x1C16F10
	0x024223E8 MOV X20, X0
	0x024223EC ADRP X0, 0x1CD3000
	0x024223F0 LDR X0, [X0 + 0xC80]
	0x024223F4 BL 0x1C16D08
	0x024223F8 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move [X31+8], X31
	005 Move X8, [X1+32]
	006 Move X19, X0
	007 Add X9, X8, 309
	008 NotImplemented "Instruction LDRH not yet implemented."
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {19}
	013 Move X0, X8
	014 Move X20, X1
	015 Call 0x1C5D684
	016 Move X8, [X20+32]
	017 Add X9, X8, 309
	018 NotImplemented "Instruction LDRH not yet implemented."
	019 Move X0, X8
	020 Move X10, [X0+192]
	021 Move X10, [X10+32]
	022 Move X20, [X10]
	023 Move TEMP, X9
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {30}
	027 Move X0, X8
	028 Call 0x1C5D684
	029 Move X8, X0
	030 Move X8, [X8+192]
	031 Add X1, X31, 8
	032 Move X0, X19
	033 Move X2, [X8+32]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X0, [X31+8]
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Return X0

Method: System.Void set_Value(System.String value)

Disassembly:
	0x024223FC MOV X0, X20
	0x02422400 MOV X2, X31
	0x02422404 BL 0x330E100
	0x02422408 MOV X0, X20
	0x0242240C MOV X1, X19
	0x02422410 BL 0x1C16DEC
	0x02422414 STP X30, X21, [X31 - 0x20]!
	0x02422418 STP X20, X19, [X31 + 0x10]
	0x0242241C LDR X8, [X2 + 0x20]
	0x02422420 MOV W19, W1
	0x02422424 MOV X20, X0
	0x02422428 ADD X9, X8, 0x135
	0x0242242C LDRH W9, [X9]
	0x02422430 TBNZ X9, 0x0, 0x2422450
	0x02422434 MOV X0, X8
	0x02422438 MOV X21, X2
	0x0242243C BL 0x1C5C684
	0x02422440 LDR X8, [X21 + 0x20]
	0x02422444 ADD X9, X8, 0x135
	0x02422448 LDRH W9, [X9]
	0x0242244C B 0x2422454
	0x02422450 MOV X0, X8
	0x02422454 LDR X10, [X0 + 0xC0]
	0x02422458 LDR X10, [X10 + 0x98]
	0x0242245C LDR X21, [X10]
	0x02422460 TBNZ X9, 0x0, 0x2422470
	0x02422464 MOV X0, X8
	0x02422468 BL 0x1C5C684
	0x0242246C MOV X8, X0
	0x02422470 LDR X8, [X8 + 0xC0]
	0x02422474 MOV X0, X20
	0x02422478 MOV W1, W19
	0x0242247C MOV W2, W31
	0x02422480 LDR X3, [X8 + 0x98]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X19, X1
	008 Move X20, X0
	009 Add X9, X8, 309
	010 NotImplemented "Instruction LDRH not yet implemented."
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {21}
	015 Move X0, X8
	016 Move X21, X2
	017 Call 0x1C5D684
	018 Move X8, [X21+32]
	019 Add X9, X8, 309
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move X0, X8
	022 Move X10, [X0+192]
	023 Move X10, [X10+40]
	024 Move X3, [X10]
	025 Move TEMP, X9
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, X8
	030 Move [X31+8], X3
	031 Call 0x1C5D684
	032 Move X3, [X31+8]
	033 Move X8, X0
	034 Move X8, [X8+192]
	035 Move X0, X20
	036 Move X1, X19
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X2, [X8+40]
	040 Move X30, [X31+16]
	041 Move X21, [X31+24]
	042 Add X31, X31, 48
	043 CallNoReturn X3

Method: System.Int32 get_Length()

Disassembly:
	0x02422484 BLR X21
	0x02422488 LDP X20, X19, [X31 + 0x10]
	0x0242248C ORN W8, W31, W0, 0x0
	0x02422490 UBFM W0, W8, 0x1F, 0x1F
	0x02422494 LDP X30, X21, [X31], #0x20
	0x02422498 RET
	0x0242249C STP X30, X21, [X31 - 0x20]!
	0x024224A0 STP X20, X19, [X31 + 0x10]
	0x024224A4 LDR X8, [X2 + 0x20]
	0x024224A8 MOV W19, W1
	0x024224AC MOV X20, X0
	0x024224B0 ADD X9, X8, 0x135
	0x024224B4 LDRH W9, [X9]
	0x024224B8 TBNZ X9, 0x0, 0x24224D8
	0x024224BC MOV X0, X8
	0x024224C0 MOV X21, X2

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+32]
	004 Move X19, X0
	005 Move W9, [X8+309]
	006 Move TEMP, X9
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {13}
	010 Move X0, X8
	011 Call 0x1C5D684
	012 Move X8, X0
	013 Move X8, [X8+192]
	014 Move X0, X19
	015 Move X8, [X8]
	016 Move X1, [X8+128]
	017 Call 0x1C17D18
	018 Move W0, [X0]
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Return X0

Method: System.UInt32 get_Item(System.Int32 index)

Disassembly:
	0x024224C4 BL 0x1C5C684
	0x024224C8 LDR X8, [X21 + 0x20]
	0x024224CC ADD X9, X8, 0x135
	0x024224D0 LDRH W9, [X9]
	0x024224D4 B 0x24224DC
	0x024224D8 MOV X0, X8
	0x024224DC LDR X10, [X0 + 0xC0]
	0x024224E0 LDR X10, [X10 + 0xA0]
	0x024224E4 LDR X21, [X10]
	0x024224E8 TBNZ X9, 0x0, 0x24224F8
	0x024224EC MOV X0, X8
	0x024224F0 BL 0x1C5C684
	0x024224F4 MOV X8, X0
	0x024224F8 LDR X8, [X8 + 0xC0]
	0x024224FC MOV X0, X20
	0x02422500 MOV W1, W19
	0x02422504 MOV W2, W31
	0x02422508 LDR X3, [X8 + 0xA0]
	0x0242250C BLR X21
	0x02422510 LDP X20, X19, [X31 + 0x10]
	0x02422514 ORN W8, W31, W0, 0x0
	0x02422518 UBFM W0, W8, 0x1F, 0x1F
	0x0242251C LDP X30, X21, [X31], #0x20
	0x02422520 RET
	0x02422524 STP X30, X21, [X31 - 0x20]!
	0x02422528 STP X20, X19, [X31 + 0x10]
	0x0242252C LDR X8, [X2 + 0x20]
	0x02422530 MOV X19, X1
	0x02422534 MOV X20, X0
	0x02422538 ADD X9, X8, 0x135
	0x0242253C LDRH W9, [X9]
	0x02422540 TBNZ X9, 0x0, 0x2422560
	0x02422544 MOV X0, X8
	0x02422548 MOV X21, X2
	0x0242254C BL 0x1C5C684
	0x02422550 LDR X8, [X21 + 0x20]
	0x02422554 ADD X9, X8, 0x135
	0x02422558 LDRH W9, [X9]
	0x0242255C B 0x2422564
	0x02422560 MOV X0, X8
	0x02422564 LDR X10, [X0 + 0xC0]
	0x02422568 LDR X10, [X10 + 0xA8]
	0x0242256C LDR X21, [X10]
	0x02422570 TBNZ X9, 0x0, 0x2422580
	0x02422574 MOV X0, X8
	0x02422578 BL 0x1C5C684
	0x0242257C MOV X8, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X22, X2
	008 Move W19, W1
	009 Move X20, X0
	010 Move W9, [X8+309]
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {18}
	015 Move X0, X8
	016 Call 0x1C5D684
	017 Move X8, X0
	018 Move X8, [X8+192]
	019 Move X0, X20
	020 Move X8, [X8]
	021 Move X8, [X8+128]
	022 Add X1, X8, 32
	023 Call 0x1C17D18
	024 Move X8, [X22+32]
	025 Move X21, X0
	026 Add X9, X8, 309
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move TEMP, X9
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {37}
	032 Move X0, X8
	033 Call 0x1C5D684
	034 Move X8, [X22+32]
	035 Add X9, X8, 309
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Move X0, X8
	038 Move X10, [X0+192]
	039 Move X10, [X10+48]
	040 Move X22, [X10]
	041 Move TEMP, X9
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {48}
	045 Move X0, X8
	046 Call 0x1C5D684
	047 Move X8, X0
	048 Move X8, [X8+192]
	049 Move X0, X20
	050 Move W1, W19
	051 Move X2, [X8+48]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Add X0, X21, W0
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Return X0

Method: Fusion.NetworkString`1<TSize> op_Implicit(System.String str)

Disassembly:
	0x02422580 LDR X8, [X8 + 0xC0]
	0x02422584 MOV X0, X20
	0x02422588 MOV X1, X19
	0x0242258C MOV W2, W31
	0x02422590 LDR X3, [X8 + 0xA8]
	0x02422594 BLR X21
	0x02422598 LDP X20, X19, [X31 + 0x10]
	0x0242259C ORN W8, W31, W0, 0x0
	0x024225A0 UBFM W0, W8, 0x1F, 0x1F
	0x024225A4 LDP X30, X21, [X31], #0x20
	0x024225A8 RET
	0x024225AC STP X29, X30, [X31 - 0x50]!
	0x024225B0 STP X26, X25, [X31 + 0x10]
	0x024225B4 STP X24, X23, [X31 + 0x20]
	0x024225B8 STP X22, X21, [X31 + 0x30]
	0x024225BC STP X20, X19, [X31 + 0x40]
	0x024225C0 ADD X29, X31, 0x0
	0x024225C4 SUB X31, X31, 0x30
	0x024225C8 MRS X26, 0xC000
	0x024225CC LDR X8, [X26 + 0x28]
	0x024225D0 MOV X24, X3
	0x024225D4 MOV X19, X2
	0x024225D8 MOV W21, W1
	0x024225DC STUR X8, [X29 - 0x8]
	0x024225E0 LDR X8, [X3 + 0x20]
	0x024225E4 MOV X20, X0
	0x024225E8 ADD X9, X8, 0x135
	0x024225EC LDRH W9, [X9]
	0x024225F0 TBNZ X9, 0x0, 0x242260C
	0x024225F4 MOV X0, X8
	0x024225F8 BL 0x1C5C684
	0x024225FC LDR X8, [X24 + 0x20]
	0x02422600 ADD X9, X8, 0x135
	0x02422604 LDRH W9, [X9]
	0x02422608 B 0x2422610
	0x0242260C MOV X0, X8
	0x02422610 LDR X10, [X0 + 0xC0]
	0x02422614 LDR X10, [X10]
	0x02422618 LDR W22, [X10 + 0xFC]
	0x0242261C ADD X10, X31, 0x0
	0x02422620 ADD X11, X22, 0xF
	0x02422624 AND X11, X11, 0x1FFFFFFFF
	0x02422628 SUB X23, X10, X11
	0x0242262C ADD X31, X23, 0x0
	0x02422630 TBNZ X9, 0x0, 0x242264C
	0x02422634 MOV X0, X8
	0x02422638 BL 0x1C5C684
	0x0242263C LDR X8, [X24 + 0x20]
	0x02422640 ADD X9, X8, 0x135
	0x02422644 LDRH W9, [X9]
	0x02422648 B 0x2422650
	0x0242264C MOV X0, X8
	0x02422650 LDR X10, [X0 + 0xC0]
	0x02422654 LDR X10, [X10 + 0x68]
	0x02422658 LDR X25, [X10]
	0x0242265C TBNZ X9, 0x0, 0x242266C
	0x02422660 MOV X0, X8
	0x02422664 BL 0x1C5C684
	0x02422668 MOV X8, X0
	0x0242266C LDR X8, [X8 + 0xC0]
	0x02422670 MOV X0, X20
	0x02422674 LDR X1, [X8 + 0x68]
	0x02422678 BLR X25
	0x0242267C LDR X8, [X24 + 0x20]
	0x02422680 MOV W25, W0
	0x02422684 ADD X9, X8, 0x135
	0x02422688 LDRH W9, [X9]
	0x0242268C TBNZ X9, 0x0, 0x24226A8
	0x02422690 MOV X0, X8
	0x02422694 BL 0x1C5C684
	0x02422698 LDR X8, [X24 + 0x20]
	0x0242269C ADD X9, X8, 0x135
	0x024226A0 LDRH W9, [X9]
	0x024226A4 B 0x24226AC
	0x024226A8 MOV X0, X8
	0x024226AC LDR X10, [X0 + 0xC0]
	0x024226B0 LDR X10, [X10 + 0xB0]
	0x024226B4 LDR X24, [X10]
	0x024226B8 TBNZ X9, 0x0, 0x24226C8
	0x024226BC MOV X0, X8
	0x024226C0 BL 0x1C5C684
	0x024226C4 MOV X8, X0

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Add X29, X31, 0
	012 Subtract X31, X31, 16
	013 NotImplemented "Instruction MRS not yet implemented."
	014 Move X8, [X26+40]
	015 Move X25, X2
	016 Move X19, X1
	017 Move X20, X0
	018 Move [X29-8], X8
	019 Move X22, [X2+32]
	020 Move W8, [X22+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {28}
	025 Move X0, X22
	026 Call 0x1C5D684
	027 Move X22, [X25+32]
	028 Move X0, X22
	029 Move X8, [X0+192]
	030 Move X8, [X8]
	031 Move W21, [X8+252]
	032 Add X8, X31, 0
	033 Add X9, X21, 15
	034 And X9, X9, 0x1FFFFFFFF
	035 Subtract X23, X8, X9
	036 Add X31, X23, 0
	037 Add X8, X31, 0
	038 Subtract X24, X8, X9
	039 Add X31, X24, 0
	040 Move X0, X24
	041 Move W1, W31
	042 Move X2, X21
	043 Call 0x3EB2B10
	044 Move X0, X24
	045 Move W1, W31
	046 Move X2, X21
	047 Call 0x3EB2B10
	048 Add X8, X22, 309
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 Move TEMP, X8
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {59}
	054 Move X0, X22
	055 Call 0x1C5D684
	056 Move X22, [X25+32]
	057 Add X8, X22, 309
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Move X0, X22
	060 Move X9, [X0+192]
	061 Move X9, [X9+40]
	062 Move X25, [X9]
	063 Move TEMP, X8
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {70}
	067 Move X0, X22
	068 Call 0x1C5D684
	069 Move X22, X0
	070 Move X8, [X22+192]
	071 Move X0, X24
	072 Move X1, X20
	073 Move X2, [X8+40]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move X0, X23
	076 Move X1, X24
	077 Move X2, X21
	078 Call 0x3EB2AC0
	079 Move X0, X19
	080 Move X1, X23
	081 Move X2, X21
	082 Call 0x3EB2AC0
	083 Move X8, [X26+40]
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Add X31, X29, 0
	087 Move X20, [X31+64]
	088 Move X19, [X31+72]
	089 Move X22, [X31+48]
	090 Move X21, [X31+56]
	091 Move X24, [X31+32]
	092 Move X23, [X31+40]
	093 Move X26, [X31+16]
	094 Move X25, [X31+24]
	095 Move X29, [X31+80]
	096 Move X30, [X31+88]
	097 Return X0
	098 Call 0x3EB2B20

Method: System.String op_Explicit(Fusion.NetworkString`1<TSize> str)

Disassembly:
	0x024226C8 LDR X8, [X8 + 0xC0]
	0x024226CC SUB W9, W25, W21
	0x024226D0 SUB X10, X29, 0xC
	0x024226D4 SUB X3, X29, 0x28
	0x024226D8 LDR X1, [X8 + 0xB0]
	0x024226DC SUB X8, X29, 0x10
	0x024226E0 STP W9, W21, [X29 - 0x10]
	0x024226E4 STP X10, X8, [X29 - 0x28]
	0x024226E8 STUR X23, [X29 - 0x18]
	0x024226EC LDR X8, [X1 + 0x10]
	0x024226F0 MOV X0, X24
	0x024226F4 MOV X2, X20
	0x024226F8 MOV X4, X23
	0x024226FC BLR X8
	0x02422700 MOV X0, X19
	0x02422704 MOV X1, X23
	0x02422708 MOV X2, X22
	0x0242270C BL 0x3EB1AC0
	0x02422710 LDR X8, [X26 + 0x28]
	0x02422714 LDUR X9, [X29 - 0x8]
	0x02422718 CMP X8, X9
	0x0242271C B.NE 0x242273C
	0x02422720 ADD X31, X29, 0x0
	0x02422724 LDP X20, X19, [X31 + 0x40]
	0x02422728 LDP X22, X21, [X31 + 0x30]
	0x0242272C LDP X24, X23, [X31 + 0x20]
	0x02422730 LDP X26, X25, [X31 + 0x10]
	0x02422734 LDP X29, X30, [X31], #0x50
	0x02422738 RET
	0x0242273C BL 0x3EB1B20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X19, X0
	006 Add X9, X8, 309
	007 NotImplemented "Instruction LDRH not yet implemented."
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {18}
	012 Move X0, X8
	013 Move X20, X1
	014 Call 0x1C5D684
	015 Move X8, [X20+32]
	016 Add X9, X8, 309
	017 NotImplemented "Instruction LDRH not yet implemented."
	018 Move X0, X8
	019 Move X10, [X0+192]
	020 Move X10, [X10+64]
	021 Move X2, [X10]
	022 Move TEMP, X9
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, X8
	027 Move [X31+8], X2
	028 Call 0x1C5D684
	029 Move X2, [X31+8]
	030 Move X8, X0
	031 Move X8, [X8+192]
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X1, [X8+64]
	036 Move X30, [X31+32]
	037 CallNoReturn X2

Method: System.Boolean op_Inequality(Fusion.NetworkString`1<TSize> a, Fusion.NetworkString`1<TSize> b)

Disassembly:
	0x02422740 STP X29, X30, [X31 - 0x60]!
	0x02422744 STP X28, X27, [X31 + 0x10]
	0x02422748 STP X26, X25, [X31 + 0x20]
	0x0242274C STP X24, X23, [X31 + 0x30]
	0x02422750 STP X22, X21, [X31 + 0x40]
	0x02422754 STP X20, X19, [X31 + 0x50]
	0x02422758 ADD X29, X31, 0x0
	0x0242275C SUB X31, X31, 0x10
	0x02422760 MRS X28, 0xC000
	0x02422764 LDR X8, [X28 + 0x28]
	0x02422768 MOV X19, X4
	0x0242276C MOV X20, X3
	0x02422770 MOV W21, W2
	0x02422774 STUR X8, [X29 - 0x8]
	0x02422778 LDR X8, [X4 + 0x20]
	0x0242277C MOV W22, W1
	0x02422780 MOV X26, X0
	0x02422784 LDRB W9, [X8 + 0x135]
	0x02422788 TBNZ X9, 0x0, 0x2422798
	0x0242278C MOV X0, X8
	0x02422790 BL 0x1C5C684
	0x02422794 MOV X8, X0
	0x02422798 LDR X8, [X8 + 0xC0]
	0x0242279C LDR X8, [X8]
	0x024227A0 LDR W23, [X8 + 0xFC]
	0x024227A4 ADD X8, X31, 0x0
	0x024227A8 ADD X9, X23, 0xF
	0x024227AC AND X9, X9, 0x1FFFFFFFF
	0x024227B0 SUB X24, X8, X9
	0x024227B4 ADD X31, X24, 0x0
	0x024227B8 ADD X8, X31, 0x0
	0x024227BC SUB X25, X8, X9
	0x024227C0 ADD X31, X25, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X19, X1
	007 Move X20, X0
	008 Add X9, X8, 309
	009 NotImplemented "Instruction LDRH not yet implemented."
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {20}
	014 Move X0, X8
	015 Move X21, X2
	016 Call 0x1C5D684
	017 Move X8, [X21+32]
	018 Add X9, X8, 309
	019 NotImplemented "Instruction LDRH not yet implemented."
	020 Move X0, X8
	021 Move X10, [X0+192]
	022 Move X10, [X10+72]
	023 Move X21, [X10]
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {31}
	028 Move X0, X8
	029 Call 0x1C5D684
	030 Move X8, X0
	031 Move X8, [X8+192]
	032 Move X0, X20
	033 Move X1, X19
	034 Move X2, [X8+72]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 NotImplemented "Instruction ORN not yet implemented."
	039 And W0, W8, 1
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return X0

Method: System.Boolean op_Inequality(System.String a, Fusion.NetworkString`1<TSize> b)

Disassembly:
	0x024227C4 MOV X0, X25
	0x024227C8 MOV W1, W31
	0x024227CC MOV X2, X23
	0x024227D0 BL 0x3EB1B10
	0x024227D4 TBNZ X22, 0x1F, 0x24229A4
	0x024227D8 LDR X8, [X19 + 0x20]
	0x024227DC ADD X9, X8, 0x135
	0x024227E0 LDRH W9, [X9]
	0x024227E4 TBNZ X9, 0x0, 0x2422800
	0x024227E8 MOV X0, X8
	0x024227EC BL 0x1C5C684
	0x024227F0 LDR X8, [X19 + 0x20]
	0x024227F4 ADD X9, X8, 0x135
	0x024227F8 LDRH W9, [X9]
	0x024227FC B 0x2422804
	0x02422800 MOV X0, X8
	0x02422804 LDR X10, [X0 + 0xC0]
	0x02422808 LDR X10, [X10 + 0x68]
	0x0242280C LDR X27, [X10]
	0x02422810 TBNZ X9, 0x0, 0x2422820
	0x02422814 MOV X0, X8
	0x02422818 BL 0x1C5C684
	0x0242281C MOV X8, X0
	0x02422820 LDR X8, [X8 + 0xC0]
	0x02422824 MOV X0, X26
	0x02422828 LDR X1, [X8 + 0x68]
	0x0242282C BLR X27
	0x02422830 CMP W0, W22
	0x02422834 B.LE 0x24229A4
	0x02422838 TBNZ X21, 0x1F, 0x24229C4
	0x0242283C LDR X8, [X19 + 0x20]
	0x02422840 ADD X9, X8, 0x135
	0x02422844 LDRH W9, [X9]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X19, X1
	007 Move X20, X0
	008 Add X9, X8, 309
	009 NotImplemented "Instruction LDRH not yet implemented."
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {20}
	014 Move X0, X8
	015 Move X21, X2
	016 Call 0x1C5D684
	017 Move X8, [X21+32]
	018 Add X9, X8, 309
	019 NotImplemented "Instruction LDRH not yet implemented."
	020 Move X0, X8
	021 Move X10, [X0+192]
	022 Move X10, [X10+88]
	023 Move X21, [X10]
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {31}
	028 Move X0, X8
	029 Call 0x1C5D684
	030 Move X8, X0
	031 Move X8, [X8+192]
	032 Move X0, X19
	033 Move X1, X20
	034 Move X2, [X8+88]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 NotImplemented "Instruction ORN not yet implemented."
	039 And W0, W8, 1
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return X0

Method: System.Boolean op_Inequality(Fusion.NetworkString`1<TSize> a, System.String b)

Disassembly:
	0x02422848 TBNZ X9, 0x0, 0x2422864
	0x0242284C MOV X0, X8
	0x02422850 BL 0x1C5C684
	0x02422854 LDR X8, [X19 + 0x20]
	0x02422858 ADD X9, X8, 0x135
	0x0242285C LDRH W9, [X9]
	0x02422860 B 0x2422868
	0x02422864 MOV X0, X8
	0x02422868 LDR X10, [X0 + 0xC0]
	0x0242286C LDR X10, [X10 + 0x68]
	0x02422870 LDR X27, [X10]
	0x02422874 TBNZ X9, 0x0, 0x2422884
	0x02422878 MOV X0, X8
	0x0242287C BL 0x1C5C684
	0x02422880 MOV X8, X0
	0x02422884 LDR X8, [X8 + 0xC0]
	0x02422888 MOV X0, X26
	0x0242288C LDR X1, [X8 + 0x68]
	0x02422890 BLR X27
	0x02422894 ADD W8, W21, W22
	0x02422898 CMP W8, W0
	0x0242289C B.GT 0x24229C4
	0x024228A0 MOV X0, X25
	0x024228A4 MOV W1, W31
	0x024228A8 MOV X2, X23
	0x024228AC BL 0x3EB1B10
	0x024228B0 LDR X0, [X19 + 0x20]
	0x024228B4 LDRB W8, [X0 + 0x135]
	0x024228B8 TBNZ X8, 0x0, 0x24228C0
	0x024228BC BL 0x1C5C684
	0x024228C0 LDR X8, [X0 + 0xC0]
	0x024228C4 MOV X0, X26
	0x024228C8 LDR X8, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X19, X1
	007 Move X20, X0
	008 Add X9, X8, 309
	009 NotImplemented "Instruction LDRH not yet implemented."
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {20}
	014 Move X0, X8
	015 Move X21, X2
	016 Call 0x1C5D684
	017 Move X8, [X21+32]
	018 Add X9, X8, 309
	019 NotImplemented "Instruction LDRH not yet implemented."
	020 Move X0, X8
	021 Move X10, [X0+192]
	022 Move X10, [X10+88]
	023 Move X21, [X10]
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {31}
	028 Move X0, X8
	029 Call 0x1C5D684
	030 Move X8, X0
	031 Move X8, [X8+192]
	032 Move X0, X20
	033 Move X1, X19
	034 Move X2, [X8+88]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 NotImplemented "Instruction ORN not yet implemented."
	039 And W0, W8, 1
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return X0

Method: System.Boolean op_Equality(Fusion.NetworkString`1<TSize> a, Fusion.NetworkString`1<TSize> b)

Disassembly:
	0x024228CC LDR X8, [X8 + 0x80]
	0x024228D0 ADD X1, X8, 0x20
	0x024228D4 BL 0x1C16D18
	0x024228D8 LDR X8, [X19 + 0x20]
	0x024228DC MOV X26, X0
	0x024228E0 LDRB W9, [X8 + 0x135]
	0x024228E4 TBNZ X9, 0x0, 0x24228F4
	0x024228E8 MOV X0, X8
	0x024228EC BL 0x1C5C684
	0x024228F0 MOV X8, X0
	0x024228F4 LDR X8, [X8 + 0xC0]
	0x024228F8 MOVZ W1, 0x4
	0x024228FC LDR X8, [X8]
	0x02422900 LDR X27, [X8 + 0x80]
	0x02422904 MOV X0, X27
	0x02422908 BL 0x1C16D14
	0x0242290C MOV X0, X25
	0x02422910 MOV X1, X27
	0x02422914 BL 0x1C16D18
	0x02422918 STR W21, [X0]
	0x0242291C LDR X0, [X19 + 0x20]
	0x02422920 LDRB W8, [X0 + 0x135]
	0x02422924 TBNZ X8, 0x0, 0x242292C
	0x02422928 BL 0x1C5C684
	0x0242292C LDR X8, [X0 + 0xC0]
	0x02422930 MOV X0, X25
	0x02422934 LDR X8, [X8]
	0x02422938 LDR X8, [X8 + 0x80]
	0x0242293C ADD X1, X8, 0x20
	0x02422940 BL 0x1C16D18
	0x02422944 ADD X1, X26, W22, 0x2, UXTW
	0x02422948 UBFM W2, W21, 0x1E, 0x1D
	0x0242294C MOV X3, X31
	0x02422950 BL 0x1E35764

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X19, X1
	008 Move X20, X0
	009 Add X9, X8, 309
	010 NotImplemented "Instruction LDRH not yet implemented."
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {21}
	015 Move X0, X8
	016 Move X21, X2
	017 Call 0x1C5D684
	018 Move X8, [X21+32]
	019 Add X9, X8, 309
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move X0, X8
	022 Move X10, [X0+192]
	023 Move X10, [X10+72]
	024 Move X3, [X10]
	025 Move TEMP, X9
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, X8
	030 Move [X31+8], X3
	031 Call 0x1C5D684
	032 Move X3, [X31+8]
	033 Move X8, X0
	034 Move X8, [X8+192]
	035 Move X0, X20
	036 Move X1, X19
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X2, [X8+72]
	040 Move X30, [X31+16]
	041 Move X21, [X31+24]
	042 Add X31, X31, 48
	043 CallNoReturn X3

Method: System.Boolean op_Equality(System.String a, Fusion.NetworkString`1<TSize> b)

Disassembly:
	0x02422954 MOV X0, X24
	0x02422958 MOV X1, X25
	0x0242295C MOV X2, X23
	0x02422960 BL 0x3EB1AC0
	0x02422964 MOV X0, X20
	0x02422968 MOV X1, X24
	0x0242296C MOV X2, X23
	0x02422970 BL 0x3EB1AC0
	0x02422974 LDR X8, [X28 + 0x28]
	0x02422978 LDUR X9, [X29 - 0x8]
	0x0242297C CMP X8, X9
	0x02422980 B.NE 0x2422A00
	0x02422984 ADD X31, X29, 0x0
	0x02422988 LDP X20, X19, [X31 + 0x50]
	0x0242298C LDP X22, X21, [X31 + 0x40]
	0x02422990 LDP X24, X23, [X31 + 0x30]
	0x02422994 LDP X26, X25, [X31 + 0x20]
	0x02422998 LDP X28, X27, [X31 + 0x10]
	0x0242299C LDP X29, X30, [X31], #0x60
	0x024229A0 RET
	0x024229A4 ADRP X0, 0x1CD9000
	0x024229A8 LDR X0, [X0 + 0x760]
	0x024229AC BL 0x1C16D08
	0x024229B0 BL 0x1C16F10
	0x024229B4 MOV X20, X0
	0x024229B8 ADRP X0, 0x1CF9000
	0x024229BC LDR X0, [X0 + 0x658]
	0x024229C0 B 0x24229E0
	0x024229C4 ADRP X0, 0x1CD9000
	0x024229C8 LDR X0, [X0 + 0x760]
	0x024229CC BL 0x1C16D08
	0x024229D0 BL 0x1C16F10
	0x024229D4 MOV X20, X0
	0x024229D8 ADRP X0, 0x1CD9000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X19, X1
	008 Move X20, X0
	009 Add X9, X8, 309
	010 NotImplemented "Instruction LDRH not yet implemented."
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {21}
	015 Move X0, X8
	016 Move X21, X2
	017 Call 0x1C5D684
	018 Move X8, [X21+32]
	019 Add X9, X8, 309
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move X0, X8
	022 Move X10, [X0+192]
	023 Move X10, [X10+88]
	024 Move X3, [X10]
	025 Move TEMP, X9
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, X8
	030 Move [X31+8], X3
	031 Call 0x1C5D684
	032 Move X3, [X31+8]
	033 Move X8, X0
	034 Move X8, [X8+192]
	035 Move X0, X19
	036 Move X1, X20
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X2, [X8+88]
	040 Move X30, [X31+16]
	041 Move X21, [X31+24]
	042 Add X31, X31, 48
	043 CallNoReturn X3

Method: System.Boolean op_Equality(Fusion.NetworkString`1<TSize> a, System.String b)

Disassembly:
	0x024229DC LDR X0, [X0 + 0x768]
	0x024229E0 BL 0x1C16D08
	0x024229E4 MOV X1, X0
	0x024229E8 MOV X0, X20
	0x024229EC MOV X2, X31
	0x024229F0 BL 0x3316014
	0x024229F4 MOV X0, X20
	0x024229F8 MOV X1, X19
	0x024229FC BL 0x1C16DEC
	0x02422A00 BL 0x3EB1B20
	0x02422A04 STP X29, X30, [X31 - 0x60]!
	0x02422A08 STR X27, [X31 + 0x10]
	0x02422A0C STP X26, X25, [X31 + 0x20]
	0x02422A10 STP X24, X23, [X31 + 0x30]
	0x02422A14 STP X22, X21, [X31 + 0x40]
	0x02422A18 STP X20, X19, [X31 + 0x50]
	0x02422A1C ADD X29, X31, 0x0
	0x02422A20 SUB X31, X31, 0x10
	0x02422A24 MRS X27, 0xC000
	0x02422A28 LDR X8, [X27 + 0x28]
	0x02422A2C MOV X22, X2
	0x02422A30 MOV X19, X1
	0x02422A34 MOV X24, X0
	0x02422A38 STUR X8, [X29 - 0x8]
	0x02422A3C LDR X25, [X2 + 0x20]
	0x02422A40 LDRB W8, [X25 + 0x135]
	0x02422A44 TBNZ X8, 0x0, 0x2422A58
	0x02422A48 MOV X0, X25
	0x02422A4C BL 0x1C5C684
	0x02422A50 LDR X25, [X22 + 0x20]
	0x02422A54 B 0x2422A5C
	0x02422A58 MOV X0, X25
	0x02422A5C LDR X8, [X0 + 0xC0]
	0x02422A60 LDR X8, [X8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X19, X1
	008 Move X20, X0
	009 Add X9, X8, 309
	010 NotImplemented "Instruction LDRH not yet implemented."
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {21}
	015 Move X0, X8
	016 Move X21, X2
	017 Call 0x1C5D684
	018 Move X8, [X21+32]
	019 Add X9, X8, 309
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move X0, X8
	022 Move X10, [X0+192]
	023 Move X10, [X10+88]
	024 Move X3, [X10]
	025 Move TEMP, X9
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, X8
	030 Move [X31+8], X3
	031 Call 0x1C5D684
	032 Move X3, [X31+8]
	033 Move X8, X0
	034 Move X8, [X8+192]
	035 Move X0, X20
	036 Move X1, X19
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X2, [X8+88]
	040 Move X30, [X31+16]
	041 Move X21, [X31+24]
	042 Add X31, X31, 48
	043 CallNoReturn X3

Method: System.Boolean Get(ref System.String cache)

Disassembly:
	0x02422A64 LDR W20, [X8 + 0xFC]
	0x02422A68 ADD X8, X31, 0x0
	0x02422A6C ADD X9, X20, 0xF
	0x02422A70 AND X9, X9, 0x1FFFFFFFF
	0x02422A74 SUB X21, X8, X9
	0x02422A78 ADD X31, X21, 0x0
	0x02422A7C ADD X8, X31, 0x0
	0x02422A80 SUB X23, X8, X9
	0x02422A84 ADD X31, X23, 0x0
	0x02422A88 MOV X0, X23
	0x02422A8C MOV W1, W31
	0x02422A90 MOV X2, X20
	0x02422A94 BL 0x3EB1B10
	0x02422A98 MOV X0, X23
	0x02422A9C MOV W1, W31
	0x02422AA0 MOV X2, X20
	0x02422AA4 BL 0x3EB1B10
	0x02422AA8 LDRB W8, [X25 + 0x135]
	0x02422AAC TBNZ X8, 0x0, 0x2422ABC
	0x02422AB0 MOV X0, X25
	0x02422AB4 BL 0x1C5C684
	0x02422AB8 MOV X25, X0
	0x02422ABC LDR X8, [X25 + 0xC0]
	0x02422AC0 MOV X0, X24
	0x02422AC4 LDR X8, [X8]
	0x02422AC8 LDR X8, [X8 + 0x80]
	0x02422ACC ADD X1, X8, 0x20
	0x02422AD0 BL 0x1C16D18
	0x02422AD4 LDR X8, [X22 + 0x20]
	0x02422AD8 MOV X25, X0
	0x02422ADC ADD X9, X8, 0x135
	0x02422AE0 LDRH W9, [X9]
	0x02422AE4 TBNZ X9, 0x0, 0x2422B00
	0x02422AE8 MOV X0, X8
	0x02422AEC BL 0x1C5C684
	0x02422AF0 LDR X8, [X22 + 0x20]
	0x02422AF4 ADD X9, X8, 0x135
	0x02422AF8 LDRH W9, [X9]
	0x02422AFC B 0x2422B04
	0x02422B00 MOV X0, X8
	0x02422B04 LDR X10, [X0 + 0xC0]
	0x02422B08 LDR X10, [X10 + 0x68]
	0x02422B0C LDR X26, [X10]
	0x02422B10 TBNZ X9, 0x0, 0x2422B20
	0x02422B14 MOV X0, X8
	0x02422B18 BL 0x1C5C684
	0x02422B1C MOV X8, X0
	0x02422B20 LDR X8, [X8 + 0xC0]
	0x02422B24 MOV X0, X24
	0x02422B28 LDR X1, [X8 + 0x68]
	0x02422B2C BLR X26
	0x02422B30 LDR X8, [X22 + 0x20]
	0x02422B34 MOV W26, W0
	0x02422B38 LDRB W9, [X8 + 0x135]
	0x02422B3C TBNZ X9, 0x0, 0x2422B4C
	0x02422B40 MOV X0, X8
	0x02422B44 BL 0x1C5C684
	0x02422B48 MOV X8, X0
	0x02422B4C LDR X8, [X8 + 0xC0]
	0x02422B50 MOV X0, X23
	0x02422B54 LDR X8, [X8]
	0x02422B58 LDR X8, [X8 + 0x80]
	0x02422B5C ADD X1, X8, 0x20
	0x02422B60 BL 0x1C16D18
	0x02422B64 MOV X1, X0
	0x02422B68 MOV X0, X25
	0x02422B6C MOV W2, W26
	0x02422B70 MOV X3, X31
	0x02422B74 BL 0x1E3915C
	0x02422B78 LDR X8, [X22 + 0x20]
	0x02422B7C ADD X9, X8, 0x135
	0x02422B80 LDRH W9, [X9]
	0x02422B84 TBNZ X9, 0x0, 0x2422BA0
	0x02422B88 MOV X0, X8
	0x02422B8C BL 0x1C5C684
	0x02422B90 LDR X8, [X22 + 0x20]
	0x02422B94 ADD X9, X8, 0x135
	0x02422B98 LDRH W9, [X9]
	0x02422B9C B 0x2422BA4
	0x02422BA0 MOV X0, X8
	0x02422BA4 LDR X10, [X0 + 0xC0]
	0x02422BA8 LDR X10, [X10 + 0x68]
	0x02422BAC LDR X25, [X10]
	0x02422BB0 TBNZ X9, 0x0, 0x2422BC0
	0x02422BB4 MOV X0, X8
	0x02422BB8 BL 0x1C5C684
	0x02422BBC MOV X8, X0
	0x02422BC0 LDR X8, [X8 + 0xC0]
	0x02422BC4 MOV X0, X24
	0x02422BC8 LDR X1, [X8 + 0x68]
	0x02422BCC BLR X25
	0x02422BD0 LDR X8, [X22 + 0x20]
	0x02422BD4 MOV W22, W0
	0x02422BD8 LDRB W9, [X8 + 0x135]
	0x02422BDC TBNZ X9, 0x0, 0x2422BEC
	0x02422BE0 MOV X0, X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1FB8000
	008 Move W8, [X22+2509]
	009 Move X21, X2
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x1CD4000
	017 Move X0, [X0+632]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2509], W8
	021 Move X22, [X19]
	022 Compare X22, 0
	023 JumpIfEqual {54}
	024 Move X8, [X21+32]
	025 Add X9, X8, 309
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move TEMP, X9
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {36}
	031 Move X0, X8
	032 Call 0x1C5D684
	033 Move X8, [X21+32]
	034 Add X9, X8, 309
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X0, X8
	037 Move X10, [X0+192]
	038 Move X10, [X10+96]
	039 Move X23, [X10]
	040 Move TEMP, X9
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {47}
	044 Move X0, X8
	045 Call 0x1C5D684
	046 Move X8, X0
	047 Move X8, [X8+192]
	048 Move X0, X20
	049 Move X1, X22
	050 Move X2, [X8+96]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Compare W0, 0
	053 JumpIfEqual {116}
	054 Move X8, [X21+32]
	055 Add X9, X8, 309
	056 NotImplemented "Instruction LDRH not yet implemented."
	057 Move TEMP, X9
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {66}
	061 Move X0, X8
	062 Call 0x1C5D684
	063 Move X8, [X21+32]
	064 Add X9, X8, 309
	065 NotImplemented "Instruction LDRH not yet implemented."
	066 Move X0, X8
	067 Move X10, [X0+192]
	068 Move X10, [X10+104]
	069 Move X22, [X10]
	070 Move TEMP, X9
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {77}
	074 Move X0, X8
	075 Call 0x1C5D684
	076 Move X8, X0
	077 Move X8, [X8+192]
	078 Move X0, X20
	079 Move X1, [X8+104]
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Compare W0, 0
	082 JumpIfEqual {109}
	083 Move W22, W0
	084 Move X0, [X21+32]
	085 Move W8, [X0+309]
	086 Move TEMP, X8
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {91}
	090 Call 0x1C5D684
	091 Move X8, [X0+192]
	092 Move X0, X20
	093 Move X8, [X8]
	094 Move X8, [X8+128]
	095 Add X1, X8, 32
	096 Call 0x1C17D18
	097 Move X20, X0
	098 Move X0, X31
	099 Call Encoding.get_UTF32
	100 Move X4, X0
	101 Move W3, W22
	102 ShiftRight W3, 30
	103 And W3, W3, 0x1FFFFFFF
	104 Move X0, X31
	105 Move X1, X20
	106 Move W2, W31
	107 Move X5, X31
	108 Call String.CreateString, X0, X1, X2, X3, X4
	109 Move X8, 0x1CD4000
	110 Move X8, [X8+632]
	111 Move X8, [X8]
	112 Move X8, [X8+184]
	113 Move X0, [X8]
	114 Move [X19], X0
	115 Move W0, 1
	116 Move X20, [X31+32]
	117 Move X19, [X31+40]
	118 Move X22, [X31+16]
	119 Move X21, [X31+24]
	120 Move X30, [X31+48]
	121 Move X23, [X31+56]
	122 Return X0

Method: System.Boolean Set(System.String value)

Disassembly:
	0x02422BE4 BL 0x1C5C684
	0x02422BE8 MOV X8, X0
	0x02422BEC LDR X8, [X8 + 0xC0]
	0x02422BF0 MOVZ W1, 0x4
	0x02422BF4 LDR X8, [X8]
	0x02422BF8 LDR X24, [X8 + 0x80]
	0x02422BFC MOV X0, X24
	0x02422C00 BL 0x1C16D14
	0x02422C04 MOV X0, X23
	0x02422C08 MOV X1, X24
	0x02422C0C BL 0x1C16D18
	0x02422C10 STR W22, [X0]
	0x02422C14 MOV X0, X21
	0x02422C18 MOV X1, X23
	0x02422C1C MOV X2, X20
	0x02422C20 BL 0x3EB1AC0
	0x02422C24 MOV X0, X19
	0x02422C28 MOV X1, X21
	0x02422C2C MOV X2, X20
	0x02422C30 BL 0x3EB1AC0
	0x02422C34 LDR X8, [X27 + 0x28]
	0x02422C38 LDUR X9, [X29 - 0x8]
	0x02422C3C CMP X8, X9
	0x02422C40 B.NE 0x2422C64
	0x02422C44 ADD X31, X29, 0x0
	0x02422C48 LDP X20, X19, [X31 + 0x50]
	0x02422C4C LDP X22, X21, [X31 + 0x40]
	0x02422C50 LDP X24, X23, [X31 + 0x30]
	0x02422C54 LDP X26, X25, [X31 + 0x20]
	0x02422C58 LDR X27, [X31 + 0x10]
	0x02422C5C LDP X29, X30, [X31], #0x60
	0x02422C60 RET
	0x02422C64 BL 0x3EB1B20
	0x02422C68 STP X29, X30, [X31 - 0x60]!
	0x02422C6C STR X27, [X31 + 0x10]
	0x02422C70 STP X26, X25, [X31 + 0x20]
	0x02422C74 STP X24, X23, [X31 + 0x30]
	0x02422C78 STP X22, X21, [X31 + 0x40]
	0x02422C7C STP X20, X19, [X31 + 0x50]
	0x02422C80 ADD X29, X31, 0x0
	0x02422C84 SUB X31, X31, 0x10
	0x02422C88 MRS X27, 0xC000
	0x02422C8C LDR X8, [X27 + 0x28]
	0x02422C90 MOV X22, X2
	0x02422C94 MOV X19, X1
	0x02422C98 MOV X24, X0
	0x02422C9C STUR X8, [X29 - 0x8]
	0x02422CA0 LDR X25, [X2 + 0x20]
	0x02422CA4 LDRB W8, [X25 + 0x135]
	0x02422CA8 TBNZ X8, 0x0, 0x2422CBC
	0x02422CAC MOV X0, X25
	0x02422CB0 BL 0x1C5C684
	0x02422CB4 LDR X25, [X22 + 0x20]
	0x02422CB8 B 0x2422CC0
	0x02422CBC MOV X0, X25
	0x02422CC0 LDR X8, [X0 + 0xC0]
	0x02422CC4 LDR X8, [X8]
	0x02422CC8 LDR W20, [X8 + 0xFC]
	0x02422CCC ADD X8, X31, 0x0
	0x02422CD0 ADD X9, X20, 0xF
	0x02422CD4 AND X9, X9, 0x1FFFFFFFF
	0x02422CD8 SUB X21, X8, X9
	0x02422CDC ADD X31, X21, 0x0
	0x02422CE0 ADD X8, X31, 0x0
	0x02422CE4 SUB X23, X8, X9
	0x02422CE8 ADD X31, X23, 0x0
	0x02422CEC MOV X0, X23
	0x02422CF0 MOV W1, W31
	0x02422CF4 MOV X2, X20
	0x02422CF8 BL 0x3EB1B10
	0x02422CFC MOV X0, X23
	0x02422D00 MOV W1, W31
	0x02422D04 MOV X2, X20
	0x02422D08 BL 0x3EB1B10
	0x02422D0C LDRB W8, [X25 + 0x135]
	0x02422D10 TBNZ X8, 0x0, 0x2422D20
	0x02422D14 MOV X0, X25
	0x02422D18 BL 0x1C5C684
	0x02422D1C MOV X25, X0
	0x02422D20 LDR X8, [X25 + 0xC0]
	0x02422D24 MOV X0, X24
	0x02422D28 LDR X8, [X8]
	0x02422D2C LDR X8, [X8 + 0x80]
	0x02422D30 ADD X1, X8, 0x20
	0x02422D34 BL 0x1C16D18
	0x02422D38 LDR X8, [X22 + 0x20]
	0x02422D3C MOV X25, X0
	0x02422D40 ADD X9, X8, 0x135

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1FB8000
	008 Move W8, [X22+2510]
	009 Move X21, X2
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x1CD4000
	017 Move X0, [X0+632]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2510], W8
	021 Compare X19, 0
	022 JumpIfNotEqual {30}
	023 Move X8, 0x1CD4000
	024 Move X8, [X8+632]
	025 Move X8, [X8]
	026 Move X8, [X8+184]
	027 Move X19, [X8]
	028 Compare X19, 0
	029 JumpIfEqual {32}
	030 Move X0, X31
	031 Call RuntimeHelpers.get_OffsetToStringData
	032 Move X0, [X21+32]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Move X8, [X0+192]
	040 Move X0, X20
	041 Move X8, [X8]
	042 Move X8, [X8+128]
	043 Add X1, X8, 32
	044 Call 0x1C17D18
	045 Move X8, [X21+32]
	046 Move X22, X0
	047 Add X9, X8, 309
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Move TEMP, X9
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {58}
	053 Move X0, X8
	054 Call 0x1C5D684
	055 Move X8, [X21+32]
	056 Add X9, X8, 309
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 Move X0, X8
	059 Move X10, [X0+192]
	060 Move X10, [X10+120]
	061 Move X23, [X10]
	062 Move TEMP, X9
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {69}
	066 Move X0, X8
	067 Call 0x1C5D684
	068 Move X8, X0
	069 Move X8, [X8+192]
	070 Move X0, X20
	071 Move X1, [X8+120]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move W2, W0
	074 Move X0, X19
	075 Move X1, X22
	076 Move X3, X31
	077 Call UTF32Tools.Convert, X0, X1, X2
	078 Move X8, [X21+32]
	079 Move X21, X0
	080 Move X23, X0
	081 ShiftRight X23, 32
	082 And X23, X23, 0x7FFFFFFF
	083 Move W9, [X8+309]
	084 Move TEMP, X9
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfEqual {91}
	088 Move X0, X8
	089 Call 0x1C5D684
	090 Move X8, X0
	091 Move X8, [X8+192]
	092 Move W1, 4
	093 Move X8, [X8]
	094 Move X22, [X8+128]
	095 Move X0, X22
	096 Call 0x1C17D14
	097 Move X0, X20
	098 Move X1, X22
	099 Call 0x1C17D18
	100 Move [X0], W23
	101 Compare X19, 0
	102 JumpIfEqual {113}
	103 Move W8, [X19+16]
	104 Move X20, [X31+32]
	105 Move X19, [X31+40]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X22, [X31+16]
	108 Move X21, [X31+24]
	109 NotImplemented "Instruction CSET not yet implemented."
	110 Move X30, [X31+48]
	111 Move X23, [X31+56]
	112 Return X0
	113 Call 0x1C17F20

Method: System.Int32 IndexOf(System.Char c, System.Int32 startIndex = 0)

Disassembly:
	0x02422D44 LDRH W9, [X9]
	0x02422D48 TBNZ X9, 0x0, 0x2422D64
	0x02422D4C MOV X0, X8
	0x02422D50 BL 0x1C5C684
	0x02422D54 LDR X8, [X22 + 0x20]
	0x02422D58 ADD X9, X8, 0x135
	0x02422D5C LDRH W9, [X9]
	0x02422D60 B 0x2422D68
	0x02422D64 MOV X0, X8
	0x02422D68 LDR X10, [X0 + 0xC0]
	0x02422D6C LDR X10, [X10 + 0x68]
	0x02422D70 LDR X26, [X10]
	0x02422D74 TBNZ X9, 0x0, 0x2422D84
	0x02422D78 MOV X0, X8
	0x02422D7C BL 0x1C5C684
	0x02422D80 MOV X8, X0
	0x02422D84 LDR X8, [X8 + 0xC0]
	0x02422D88 MOV X0, X24
	0x02422D8C LDR X1, [X8 + 0x68]
	0x02422D90 BLR X26
	0x02422D94 LDR X8, [X22 + 0x20]
	0x02422D98 MOV W26, W0
	0x02422D9C LDRB W9, [X8 + 0x135]
	0x02422DA0 TBNZ X9, 0x0, 0x2422DB0
	0x02422DA4 MOV X0, X8
	0x02422DA8 BL 0x1C5C684
	0x02422DAC MOV X8, X0
	0x02422DB0 LDR X8, [X8 + 0xC0]
	0x02422DB4 MOV X0, X23
	0x02422DB8 LDR X8, [X8]
	0x02422DBC LDR X8, [X8 + 0x80]
	0x02422DC0 ADD X1, X8, 0x20
	0x02422DC4 BL 0x1C16D18
	0x02422DC8 MOV X1, X0
	0x02422DCC MOV X0, X25
	0x02422DD0 MOV W2, W26
	0x02422DD4 MOV X3, X31
	0x02422DD8 BL 0x1E39228
	0x02422DDC LDR X8, [X22 + 0x20]
	0x02422DE0 ADD X9, X8, 0x135
	0x02422DE4 LDRH W9, [X9]
	0x02422DE8 TBNZ X9, 0x0, 0x2422E04
	0x02422DEC MOV X0, X8
	0x02422DF0 BL 0x1C5C684
	0x02422DF4 LDR X8, [X22 + 0x20]
	0x02422DF8 ADD X9, X8, 0x135
	0x02422DFC LDRH W9, [X9]
	0x02422E00 B 0x2422E08
	0x02422E04 MOV X0, X8
	0x02422E08 LDR X10, [X0 + 0xC0]
	0x02422E0C LDR X10, [X10 + 0x68]
	0x02422E10 LDR X25, [X10]
	0x02422E14 TBNZ X9, 0x0, 0x2422E24
	0x02422E18 MOV X0, X8
	0x02422E1C BL 0x1C5C684
	0x02422E20 MOV X8, X0
	0x02422E24 LDR X8, [X8 + 0xC0]
	0x02422E28 MOV X0, X24
	0x02422E2C LDR X1, [X8 + 0x68]
	0x02422E30 BLR X25
	0x02422E34 LDR X8, [X22 + 0x20]
	0x02422E38 MOV W22, W0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X3+32]
	009 Move X22, X3
	010 Move W19, W2
	011 Move W20, W1
	012 Add X9, X8, 309
	013 NotImplemented "Instruction LDRH not yet implemented."
	014 Move X21, X0
	015 Move TEMP, X9
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, X8
	020 Call 0x1C5D684
	021 Move X8, [X22+32]
	022 Add X9, X8, 309
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 Move X0, X8
	025 Move X10, [X0+192]
	026 Move X10, [X10+128]
	027 Move X23, [X10]
	028 Move TEMP, X9
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {35}
	032 Move X0, X8
	033 Call 0x1C5D684
	034 Move X8, X0
	035 Move X8, [X8+192]
	036 Move X0, X21
	037 Move X1, [X8+128]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X8, [X22+32]
	040 Move W23, W0
	041 Add X9, X8, 309
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 Move TEMP, X9
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {52}
	047 Move X0, X8
	048 Call 0x1C5D684
	049 Move X8, [X22+32]
	050 Add X9, X8, 309
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X0, X8
	053 Move X10, [X0+192]
	054 Move X10, [X10+136]
	055 Move X5, [X10]
	056 Move TEMP, X9
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {65}
	060 Move X0, X8
	061 Move [X31+8], X5
	062 Call 0x1C5D684
	063 Move X5, [X31+8]
	064 Move X8, X0
	065 Move X8, [X8+192]
	066 Subtract W3, W23, W19
	067 And W1, W20, 0xFFFF
	068 Move X0, X21
	069 Move X4, [X8+136]
	070 Move W2, W19
	071 Move X20, [X31+48]
	072 Move X19, [X31+56]
	073 Move X22, [X31+32]
	074 Move X21, [X31+40]
	075 Move X30, [X31+16]
	076 Move X23, [X31+24]
	077 Add X31, X31, 64
	078 CallNoReturn X5

Method: System.Int32 IndexOf(System.Char c, System.Int32 startIndex, System.Int32 count)

Disassembly:
	0x02422E3C LDRB W9, [X8 + 0x135]
	0x02422E40 TBNZ X9, 0x0, 0x2422E50
	0x02422E44 MOV X0, X8
	0x02422E48 BL 0x1C5C684
	0x02422E4C MOV X8, X0
	0x02422E50 LDR X8, [X8 + 0xC0]
	0x02422E54 MOVZ W1, 0x4
	0x02422E58 LDR X8, [X8]
	0x02422E5C LDR X24, [X8 + 0x80]
	0x02422E60 MOV X0, X24
	0x02422E64 BL 0x1C16D14
	0x02422E68 MOV X0, X23
	0x02422E6C MOV X1, X24
	0x02422E70 BL 0x1C16D18
	0x02422E74 STR W22, [X0]
	0x02422E78 MOV X0, X21
	0x02422E7C MOV X1, X23
	0x02422E80 MOV X2, X20
	0x02422E84 BL 0x3EB1AC0
	0x02422E88 MOV X0, X19
	0x02422E8C MOV X1, X21
	0x02422E90 MOV X2, X20
	0x02422E94 BL 0x3EB1AC0
	0x02422E98 LDR X8, [X27 + 0x28]
	0x02422E9C LDUR X9, [X29 - 0x8]
	0x02422EA0 CMP X8, X9
	0x02422EA4 B.NE 0x2422EC8
	0x02422EA8 ADD X31, X29, 0x0
	0x02422EAC LDP X20, X19, [X31 + 0x50]
	0x02422EB0 LDP X22, X21, [X31 + 0x40]
	0x02422EB4 LDP X24, X23, [X31 + 0x30]
	0x02422EB8 LDP X26, X25, [X31 + 0x20]
	0x02422EBC LDR X27, [X31 + 0x10]
	0x02422EC0 LDP X29, X30, [X31], #0x60
	0x02422EC4 RET
	0x02422EC8 BL 0x3EB1B20
	0x02422ECC STR X30, [X31 - 0x30]!
	0x02422ED0 STP X22, X21, [X31 + 0x10]
	0x02422ED4 STP X20, X19, [X31 + 0x20]
	0x02422ED8 LDR X8, [X1 + 0x20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X4+32]
	009 Move W19, W3
	010 Move W20, W2
	011 Move W21, W1
	012 Add X9, X8, 309
	013 NotImplemented "Instruction LDRH not yet implemented."
	014 Move X22, X0
	015 Move TEMP, X9
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {25}
	019 Move X0, X8
	020 Move X23, X4
	021 Call 0x1C5D684
	022 Move X8, [X23+32]
	023 Add X9, X8, 309
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Move X0, X8
	026 Move X10, [X0+192]
	027 Move X10, [X10+136]
	028 Move X5, [X10]
	029 Move TEMP, X9
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {38}
	033 Move X0, X8
	034 Move [X31+8], X5
	035 Call 0x1C5D684
	036 Move X5, [X31+8]
	037 Move X8, X0
	038 Move X8, [X8+192]
	039 And W1, W21, 0xFFFF
	040 Move X0, X22
	041 Move W2, W20
	042 Move X4, [X8+136]
	043 Move W3, W19
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X30, [X31+16]
	049 Move X23, [X31+24]
	050 Add X31, X31, 64
	051 CallNoReturn X5

Method: System.Int32 IndexOf(System.UInt32 codePoint, System.Int32 startIndex = 0)

Disassembly:
	0x02422EDC MOV X22, X1
	0x02422EE0 MOV X19, X0
	0x02422EE4 LDRB W9, [X8 + 0x135]
	0x02422EE8 TBNZ X9, 0x0, 0x2422EF8
	0x02422EEC MOV X0, X8
	0x02422EF0 BL 0x1C5C684
	0x02422EF4 MOV X8, X0
	0x02422EF8 LDR X8, [X8 + 0xC0]
	0x02422EFC MOV X0, X19
	0x02422F00 LDR X8, [X8]
	0x02422F04 LDR X8, [X8 + 0x80]
	0x02422F08 ADD X1, X8, 0x20
	0x02422F0C BL 0x1C16D18
	0x02422F10 MOV X20, X0
	0x02422F14 MOV X0, X31
	0x02422F18 BL 0x3242E20
	0x02422F1C LDR X8, [X22 + 0x20]
	0x02422F20 MOV X21, X0
	0x02422F24 ADD X9, X8, 0x135
	0x02422F28 LDRH W9, [X9]
	0x02422F2C TBNZ X9, 0x0, 0x2422F48
	0x02422F30 MOV X0, X8
	0x02422F34 BL 0x1C5C684
	0x02422F38 LDR X8, [X22 + 0x20]
	0x02422F3C ADD X9, X8, 0x135
	0x02422F40 LDRH W9, [X9]
	0x02422F44 B 0x2422F4C
	0x02422F48 MOV X0, X8
	0x02422F4C LDR X10, [X0 + 0xC0]
	0x02422F50 LDR X10, [X10 + 0x80]
	0x02422F54 LDR X22, [X10]
	0x02422F58 TBNZ X9, 0x0, 0x2422F68
	0x02422F5C MOV X0, X8
	0x02422F60 BL 0x1C5C684
	0x02422F64 MOV X8, X0
	0x02422F68 LDR X8, [X8 + 0xC0]
	0x02422F6C MOV X0, X19
	0x02422F70 LDR X1, [X8 + 0x80]
	0x02422F74 BLR X22
	0x02422F78 CBZ X21, 0x2422FA4
	0x02422F7C LDR X8, [X21]
	0x02422F80 UBFM W2, W0, 0x1E, 0x1D
	0x02422F84 MOV X0, X21
	0x02422F88 MOV X1, X20
	0x02422F8C LDR X4, [X8 + 0x2B8]
	0x02422F90 LDR X3, [X8 + 0x2C0]
	0x02422F94 LDP X20, X19, [X31 + 0x20]
	0x02422F98 LDP X22, X21, [X31 + 0x10]
	0x02422F9C LDR X30, [X31], #0x30
	0x02422FA0 BR X4
	0x02422FA4 BL 0x1C16F20
	0x02422FA8 STR X30, [X31 - 0x30]!
	0x02422FAC STP X22, X21, [X31 + 0x10]
	0x02422FB0 STP X20, X19, [X31 + 0x20]
	0x02422FB4 MOV X21, X2
	0x02422FB8 CBZ X1, 0x242306C
	0x02422FBC MOV X20, X0
	0x02422FC0 LDR X0, [X21 + 0x20]
	0x02422FC4 MOV X19, X1
	0x02422FC8 LDRB W8, [X0 + 0x135]
	0x02422FCC TBNZ X8, 0x0, 0x2422FD4
	0x02422FD0 BL 0x1C5C684

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X3+32]
	009 Move X22, X3
	010 Move W19, W2
	011 Move W20, W1
	012 Add X9, X8, 309
	013 NotImplemented "Instruction LDRH not yet implemented."
	014 Move X21, X0
	015 Move TEMP, X9
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, X8
	020 Call 0x1C5D684
	021 Move X8, [X22+32]
	022 Add X9, X8, 309
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 Move X0, X8
	025 Move X10, [X0+192]
	026 Move X10, [X10+128]
	027 Move X23, [X10]
	028 Move TEMP, X9
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {35}
	032 Move X0, X8
	033 Call 0x1C5D684
	034 Move X8, X0
	035 Move X8, [X8+192]
	036 Move X0, X21
	037 Move X1, [X8+128]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X8, [X22+32]
	040 Move W23, W0
	041 Add X9, X8, 309
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 Move TEMP, X9
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {52}
	047 Move X0, X8
	048 Call 0x1C5D684
	049 Move X8, [X22+32]
	050 Add X9, X8, 309
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X0, X8
	053 Move X10, [X0+192]
	054 Move X10, [X10+136]
	055 Move X5, [X10]
	056 Move TEMP, X9
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {65}
	060 Move X0, X8
	061 Move [X31+8], X5
	062 Call 0x1C5D684
	063 Move X5, [X31+8]
	064 Move X8, X0
	065 Move X8, [X8+192]
	066 Subtract W3, W23, W19
	067 Move X0, X21
	068 Move W1, W20
	069 Move X4, [X8+136]
	070 Move W2, W19
	071 Move X20, [X31+48]
	072 Move X19, [X31+56]
	073 Move X22, [X31+32]
	074 Move X21, [X31+40]
	075 Move X30, [X31+16]
	076 Move X23, [X31+24]
	077 Add X31, X31, 64
	078 CallNoReturn X5

Method: System.Int32 IndexOf(System.UInt32 codePoint, System.Int32 startIndex, System.Int32 count)

Disassembly:
	0x02422FD4 LDR X8, [X0 + 0xC0]
	0x02422FD8 MOV X0, X20
	0x02422FDC LDR X8, [X8]
	0x02422FE0 LDR X8, [X8 + 0x80]
	0x02422FE4 ADD X1, X8, 0x20
	0x02422FE8 BL 0x1C16D18
	0x02422FEC LDR X8, [X21 + 0x20]
	0x02422FF0 MOV X22, X0
	0x02422FF4 ADD X9, X8, 0x135
	0x02422FF8 LDRH W9, [X9]
	0x02422FFC TBNZ X9, 0x0, 0x2423018
	0x02423000 MOV X0, X8
	0x02423004 BL 0x1C5C684
	0x02423008 LDR X8, [X21 + 0x20]
	0x0242300C ADD X9, X8, 0x135
	0x02423010 LDRH W9, [X9]
	0x02423014 B 0x242301C
	0x02423018 MOV X0, X8
	0x0242301C LDR X10, [X0 + 0xC0]
	0x02423020 LDR X10, [X10 + 0x68]
	0x02423024 LDR X21, [X10]
	0x02423028 TBNZ X9, 0x0, 0x2423038
	0x0242302C MOV X0, X8
	0x02423030 BL 0x1C5C684
	0x02423034 MOV X8, X0
	0x02423038 LDR X8, [X8 + 0xC0]
	0x0242303C MOV X0, X20
	0x02423040 LDR X1, [X8 + 0x68]
	0x02423044 BLR X21
	0x02423048 MOV W2, W0
	0x0242304C MOV X0, X19
	0x02423050 MOV X1, X22
	0x02423054 LDP X20, X19, [X31 + 0x20]
	0x02423058 LDP X22, X21, [X31 + 0x10]
	0x0242305C MOV W3, W31
	0x02423060 MOV X4, X31
	0x02423064 LDR X30, [X31], #0x30
	0x02423068 B 0x1E38760
	0x0242306C ADRP X0, 0x1CD5000
	0x02423070 LDR X0, [X0 + 0x528]
	0x02423074 BL 0x1C16D08
	0x02423078 BL 0x1C16F10
	0x0242307C MOV X19, X0
	0x02423080 ADRP X0, 0x1CF9000
	0x02423084 LDR X0, [X0 + 0xCC0]
	0x02423088 BL 0x1C16D08
	0x0242308C MOV X1, X0
	0x02423090 MOV X0, X19
	0x02423094 MOV X2, X31
	0x02423098 BL 0x330E100
	0x0242309C MOV X0, X19
	0x024230A0 MOV X1, X21
	0x024230A4 BL 0x1C16DEC
	0x024230A8 STP X30, X23, [X31 - 0x30]!
	0x024230AC STP X22, X21, [X31 + 0x10]
	0x024230B0 STP X20, X19, [X31 + 0x20]
	0x024230B4 LDR X8, [X2 + 0x20]
	0x024230B8 MOV X20, X2
	0x024230BC MOV X19, X1
	0x024230C0 MOV X22, X0
	0x024230C4 LDRB W9, [X8 + 0x135]
	0x024230C8 TBNZ X9, 0x0, 0x24230D8
	0x024230CC MOV X0, X8
	0x024230D0 BL 0x1C5C684
	0x024230D4 MOV X8, X0
	0x024230D8 LDR X8, [X8 + 0xC0]
	0x024230DC MOV X0, X22
	0x024230E0 LDR X8, [X8]
	0x024230E4 LDR X8, [X8 + 0x80]
	0x024230E8 ADD X1, X8, 0x20
	0x024230EC BL 0x1C16D18
	0x024230F0 LDR X8, [X20 + 0x20]
	0x024230F4 MOV X21, X0
	0x024230F8 ADD X9, X8, 0x135
	0x024230FC LDRH W9, [X9]
	0x02423100 TBNZ X9, 0x0, 0x242311C
	0x02423104 MOV X0, X8
	0x02423108 BL 0x1C5C684
	0x0242310C LDR X8, [X20 + 0x20]
	0x02423110 ADD X9, X8, 0x135
	0x02423114 LDRH W9, [X9]
	0x02423118 B 0x2423120
	0x0242311C MOV X0, X8
	0x02423120 LDR X10, [X0 + 0xC0]
	0x02423124 LDR X10, [X10 + 0x68]
	0x02423128 LDR X23, [X10]
	0x0242312C TBNZ X9, 0x0, 0x242313C
	0x02423130 MOV X0, X8
	0x02423134 BL 0x1C5C684
	0x02423138 MOV X8, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X4+32]
	009 Move X20, X4
	010 Move W22, W3
	011 Move W19, W2
	012 Add X9, X8, 309
	013 NotImplemented "Instruction LDRH not yet implemented."
	014 Move W21, W1
	015 Move X23, X0
	016 Move TEMP, X9
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, X8
	021 Call 0x1C5D684
	022 Move X8, [X20+32]
	023 Add X9, X8, 309
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Move X0, X8
	026 Move X10, [X0+192]
	027 Move X10, [X10+104]
	028 Move X24, [X10]
	029 Move TEMP, X9
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {36}
	033 Move X0, X8
	034 Call 0x1C5D684
	035 Move X8, X0
	036 Move X8, [X8+192]
	037 Move X0, X23
	038 Move X1, [X8+104]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move TEMP, X19
	041 And TEMP, TEMP, -2147483648
	042 Compare TEMP, -2147483648
	043 JumpIfEqual {85}
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move TEMP, X22
	046 And TEMP, TEMP, -2147483648
	047 Compare TEMP, -2147483648
	048 JumpIfEqual {92}
	049 Add W8, W22, W19
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, [X20+32]
	052 Move W8, [X0+309]
	053 Move TEMP, X8
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {58}
	057 Call 0x1C5D684
	058 Move X8, [X0+192]
	059 Move X0, X23
	060 Move X8, [X8]
	061 Move X8, [X8+128]
	062 Add X1, X8, 32
	063 Call 0x1C17D18
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move W9, W19
	066 Move W8, W22
	067 Add X9, X0, X9
	068 Move W10, [X9]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Add W19, W19, 1
	071 Subtract X8, X8, 1
	072 Add X9, X9, 4
	073 Move TEMP, 0
	074 Not TEMP
	075 Move W19, TEMP
	076 Move W0, W19
	077 Move X20, [X31+48]
	078 Move X19, [X31+56]
	079 Move X22, [X31+32]
	080 Move X21, [X31+40]
	081 Move X24, [X31+16]
	082 Move X23, [X31+24]
	083 Move X30, [X31+64]
	084 Return X0
	085 Move X0, 0x1CD9000
	086 Move X0, [X0+1888]
	087 Call 0x1C17D08
	088 Call 0x1C17F10
	089 Move X19, X0
	090 Move X0, 0x1CF9000
	091 Move X0, [X0+1624]
	092 Move X0, 0x1CD9000
	093 Move X0, [X0+1888]
	094 Call 0x1C17D08
	095 Call 0x1C17F10
	096 Move X19, X0
	097 Move X0, 0x1CF9000
	098 Move X0, [X0+1608]
	099 Call 0x1C17D08
	100 Move X1, X0
	101 Move X0, X19
	102 Move X2, X31
	103 Call ArgumentOutOfRangeException..ctor, X0, X1
	104 Move X0, X19
	105 Move X1, X20
	106 Call 0x1C17DEC

Method: System.Int32 IndexOf(System.String str, System.Int32 startIndex = 0)

Disassembly:
	0x0242313C LDR X8, [X8 + 0xC0]
	0x02423140 MOV X0, X22
	0x02423144 LDR X1, [X8 + 0x68]
	0x02423148 BLR X23
	0x0242314C LDR X8, [X20 + 0x20]
	0x02423150 MOV W22, W0
	0x02423154 ADD X9, X8, 0x135
	0x02423158 LDRH W9, [X9]
	0x0242315C TBNZ X9, 0x0, 0x2423178
	0x02423160 MOV X0, X8
	0x02423164 BL 0x1C5C684
	0x02423168 LDR X8, [X20 + 0x20]
	0x0242316C ADD X9, X8, 0x135
	0x02423170 LDRH W9, [X9]
	0x02423174 B 0x242317C
	0x02423178 MOV X0, X8
	0x0242317C LDR X10, [X0 + 0xC0]
	0x02423180 LDR X10, [X10 + 0x68]
	0x02423184 LDR X23, [X10]
	0x02423188 TBNZ X9, 0x0, 0x2423198
	0x0242318C MOV X0, X8
	0x02423190 BL 0x1C5C684
	0x02423194 MOV X8, X0
	0x02423198 LDR X8, [X8 + 0xC0]
	0x0242319C MOV X0, X19
	0x024231A0 LDR X1, [X8 + 0x68]
	0x024231A4 BLR X23
	0x024231A8 LDR X8, [X20 + 0x20]
	0x024231AC MOV W20, W0
	0x024231B0 LDRB W9, [X8 + 0x135]
	0x024231B4 TBNZ X9, 0x0, 0x24231C4
	0x024231B8 MOV X0, X8
	0x024231BC BL 0x1C5C684
	0x024231C0 MOV X8, X0
	0x024231C4 LDR X8, [X8 + 0xC0]
	0x024231C8 MOV X0, X19
	0x024231CC LDR X8, [X8]
	0x024231D0 LDR X8, [X8 + 0x80]
	0x024231D4 ADD X1, X8, 0x20
	0x024231D8 BL 0x1C16D18
	0x024231DC MOV X2, X0
	0x024231E0 MOV X0, X21
	0x024231E4 MOV W1, W22
	0x024231E8 MOV W3, W20
	0x024231EC LDP X20, X19, [X31 + 0x20]
	0x024231F0 LDP X22, X21, [X31 + 0x10]
	0x024231F4 MOV W4, W31
	0x024231F8 MOV X5, X31
	0x024231FC LDP X30, X23, [X31], #0x30
	0x02423200 B 0x1E38430
	0x02423204 STR X30, [X31 - 0x40]!
	0x02423208 STP X24, X23, [X31 + 0x10]
	0x0242320C STP X22, X21, [X31 + 0x20]
	0x02423210 STP X20, X19, [X31 + 0x30]
	0x02423214 LDR X8, [X2 + 0x20]
	0x02423218 MOV X21, X2
	0x0242321C MOV X19, X1
	0x02423220 MOV X23, X0
	0x02423224 LDRB W9, [X8 + 0x135]
	0x02423228 TBNZ X9, 0x0, 0x2423238
	0x0242322C MOV X0, X8
	0x02423230 BL 0x1C5C684

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X3+32]
	009 Move X22, X3
	010 Move W19, W2
	011 Move X20, X1
	012 Add X9, X8, 309
	013 NotImplemented "Instruction LDRH not yet implemented."
	014 Move X21, X0
	015 Move TEMP, X9
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, X8
	020 Call 0x1C5D684
	021 Move X8, [X22+32]
	022 Add X9, X8, 309
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 Move X0, X8
	025 Move X10, [X0+192]
	026 Move X10, [X10+104]
	027 Move X23, [X10]
	028 Move TEMP, X9
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {35}
	032 Move X0, X8
	033 Call 0x1C5D684
	034 Move X8, X0
	035 Move X8, [X8+192]
	036 Move X0, X21
	037 Move X1, [X8+104]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X8, [X22+32]
	040 Move W23, W0
	041 Add X9, X8, 309
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 Move TEMP, X9
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {52}
	047 Move X0, X8
	048 Call 0x1C5D684
	049 Move X8, [X22+32]
	050 Add X9, X8, 309
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X0, X8
	053 Move X10, [X0+192]
	054 Move X10, [X10+144]
	055 Move X5, [X10]
	056 Move TEMP, X9
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {65}
	060 Move X0, X8
	061 Move [X31+8], X5
	062 Call 0x1C5D684
	063 Move X5, [X31+8]
	064 Move X8, X0
	065 Move X8, [X8+192]
	066 Subtract W3, W23, W19
	067 Move X0, X21
	068 Move X1, X20
	069 Move X4, [X8+144]
	070 Move W2, W19
	071 Move X20, [X31+48]
	072 Move X19, [X31+56]
	073 Move X22, [X31+32]
	074 Move X21, [X31+40]
	075 Move X30, [X31+16]
	076 Move X23, [X31+24]
	077 Add X31, X31, 64
	078 CallNoReturn X5

Method: System.Int32 IndexOf(System.String str, System.Int32 startIndex, System.Int32 count)

Disassembly:
	0x02423234 MOV X8, X0
	0x02423238 LDR X8, [X8 + 0xC0]
	0x0242323C MOV X0, X23
	0x02423240 LDR X8, [X8]
	0x02423244 LDR X8, [X8 + 0x80]
	0x02423248 ADD X1, X8, 0x20
	0x0242324C BL 0x1C16D18
	0x02423250 LDR X8, [X21 + 0x20]
	0x02423254 MOV X20, X0
	0x02423258 LDRB W9, [X8 + 0x135]
	0x0242325C TBNZ X9, 0x0, 0x242326C
	0x02423260 MOV X0, X8
	0x02423264 BL 0x1C5C684
	0x02423268 MOV X8, X0
	0x0242326C LDR X8, [X8 + 0xC0]
	0x02423270 MOV X0, X19
	0x02423274 LDR X8, [X8]
	0x02423278 LDR X8, [X8 + 0x80]
	0x0242327C ADD X1, X8, 0x20
	0x02423280 BL 0x1C16D18
	0x02423284 LDR X8, [X21 + 0x20]
	0x02423288 MOV X22, X0
	0x0242328C ADD X9, X8, 0x135
	0x02423290 LDRH W9, [X9]
	0x02423294 TBNZ X9, 0x0, 0x24232B0
	0x02423298 MOV X0, X8
	0x0242329C BL 0x1C5C684
	0x024232A0 LDR X8, [X21 + 0x20]
	0x024232A4 ADD X9, X8, 0x135
	0x024232A8 LDRH W9, [X9]
	0x024232AC B 0x24232B4
	0x024232B0 MOV X0, X8
	0x024232B4 LDR X10, [X0 + 0xC0]
	0x024232B8 LDR X10, [X10 + 0x68]
	0x024232BC LDR X24, [X10]
	0x024232C0 TBNZ X9, 0x0, 0x24232D0
	0x024232C4 MOV X0, X8
	0x024232C8 BL 0x1C5C684
	0x024232CC MOV X8, X0
	0x024232D0 LDR X8, [X8 + 0xC0]
	0x024232D4 MOV X0, X23
	0x024232D8 LDR X1, [X8 + 0x68]
	0x024232DC BLR X24
	0x024232E0 LDR X8, [X21 + 0x20]
	0x024232E4 MOV W23, W0
	0x024232E8 ADD X9, X8, 0x135
	0x024232EC LDRH W9, [X9]
	0x024232F0 TBNZ X9, 0x0, 0x242330C
	0x024232F4 MOV X0, X8
	0x024232F8 BL 0x1C5C684
	0x024232FC LDR X8, [X21 + 0x20]
	0x02423300 ADD X9, X8, 0x135
	0x02423304 LDRH W9, [X9]
	0x02423308 B 0x2423310
	0x0242330C MOV X0, X8
	0x02423310 LDR X10, [X0 + 0xC0]
	0x02423314 LDR X10, [X10 + 0x68]
	0x02423318 LDR X21, [X10]
	0x0242331C TBNZ X9, 0x0, 0x242332C
	0x02423320 MOV X0, X8
	0x02423324 BL 0x1C5C684
	0x02423328 MOV X8, X0
	0x0242332C LDR X8, [X8 + 0xC0]
	0x02423330 MOV X0, X19
	0x02423334 LDR X1, [X8 + 0x68]
	0x02423338 BLR X21
	0x0242333C MOV W3, W0
	0x02423340 MOV X0, X20
	0x02423344 MOV W1, W23
	0x02423348 MOV X2, X22
	0x0242334C LDP X20, X19, [X31 + 0x30]
	0x02423350 LDP X22, X21, [X31 + 0x20]
	0x02423354 LDP X24, X23, [X31 + 0x10]
	0x02423358 MOV W4, W31
	0x0242335C MOV X5, X31
	0x02423360 LDR X30, [X31], #0x40
	0x02423364 B 0x1E38430
	0x02423368 STP X30, X21, [X31 - 0x20]!
	0x0242336C STP X20, X19, [X31 + 0x10]
	0x02423370 LDR X8, [X2 + 0x20]
	0x02423374 MOV X19, X1
	0x02423378 MOV X20, X0
	0x0242337C ADD X9, X8, 0x135
	0x02423380 LDRH W9, [X9]
	0x02423384 TBNZ X9, 0x0, 0x24233A4
	0x02423388 MOV X0, X8
	0x0242338C MOV X21, X2
	0x02423390 BL 0x1C5C684
	0x02423394 LDR X8, [X21 + 0x20]
	0x02423398 ADD X9, X8, 0x135
	0x0242339C LDRH W9, [X9]
	0x024233A0 B 0x24233A8
	0x024233A4 MOV X0, X8
	0x024233A8 LDR X10, [X0 + 0xC0]
	0x024233AC LDR X10, [X10 + 0x60]
	0x024233B0 LDR X21, [X10]
	0x024233B4 TBNZ X9, 0x0, 0x24233C4
	0x024233B8 MOV X0, X8
	0x024233BC BL 0x1C5C684
	0x024233C0 MOV X8, X0
	0x024233C4 LDR X8, [X8 + 0xC0]
	0x024233C8 MOV X0, X20
	0x024233CC MOV X1, X19
	0x024233D0 LDR X2, [X8 + 0x60]
	0x024233D4 BLR X21
	0x024233D8 LDP X20, X19, [X31 + 0x10]
	0x024233DC CMP W0, 0x0
	0x024233E0 CSET W0, EQ
	0x024233E4 LDP X30, X21, [X31], #0x20
	0x024233E8 RET
	0x024233EC STP X30, X23, [X31 - 0x30]!
	0x024233F0 STP X22, X21, [X31 + 0x10]
	0x024233F4 STP X20, X19, [X31 + 0x20]
	0x024233F8 ADRP X22, 0x1FB6000
	0x024233FC ADRP X23, 0x1CF9000
	0x02423400 LDRB W8, [X22 + 0x9CF]
	0x02423404 LDR X23, [X23 + 0xCC8]
	0x02423408 MOV X21, X2
	0x0242340C MOV X20, X1
	0x02423410 MOV X19, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, X4
	009 Compare X1, 0
	010 JumpIfEqual {128}
	011 Move W20, W2
	012 Move TEMP, X2
	013 And TEMP, TEMP, -2147483648
	014 Compare TEMP, -2147483648
	015 JumpIfEqual {109}
	016 Move X8, [X19+32]
	017 Move W21, W3
	018 Move X22, X1
	019 Move X23, X0
	020 Add X9, X8, 309
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 Move TEMP, X9
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, X8
	027 Call 0x1C5D684
	028 Move X8, [X19+32]
	029 Add X9, X8, 309
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Move X0, X8
	032 Move X10, [X0+192]
	033 Move X10, [X10+104]
	034 Move X24, [X10]
	035 Move TEMP, X9
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {42}
	039 Move X0, X8
	040 Call 0x1C5D684
	041 Move X8, X0
	042 Move X8, [X8+192]
	043 Move X0, X23
	044 Move X1, [X8+104]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move TEMP, X21
	048 And TEMP, TEMP, -2147483648
	049 Compare TEMP, -2147483648
	050 JumpIfEqual {116}
	051 Move X8, [X19+32]
	052 Add X9, X8, 309
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Move TEMP, X9
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {63}
	058 Move X0, X8
	059 Call 0x1C5D684
	060 Move X8, [X19+32]
	061 Add X9, X8, 309
	062 NotImplemented "Instruction LDRH not yet implemented."
	063 Move X0, X8
	064 Move X10, [X0+192]
	065 Move X10, [X10+104]
	066 Move X24, [X10]
	067 Move TEMP, X9
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {74}
	071 Move X0, X8
	072 Call 0x1C5D684
	073 Move X8, X0
	074 Move X8, [X8+192]
	075 Move X0, X23
	076 Move X1, [X8+104]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Add W8, W21, W20
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X0, [X19+32]
	081 Move W8, [X0+309]
	082 Move TEMP, X8
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {87}
	086 Call 0x1C5D684
	087 Move X8, [X0+192]
	088 Move X0, X23
	089 Move X8, [X8]
	090 Move X8, [X8+128]
	091 Add X1, X8, 32
	092 Call 0x1C17D18
	093 Add X0, X0, W20
	094 Move W1, W21
	095 Move X2, X22
	096 Move X3, X31
	097 Call UTF32Tools.IndexOf, X0, X1, X2
	098 NotImplemented "Instruction CMP not yet implemented."
	099 NotImplemented "Instruction CSEL not yet implemented."
	100 Move X20, [X31+48]
	101 Move X19, [X31+56]
	102 Move X22, [X31+32]
	103 Move X21, [X31+40]
	104 Move X24, [X31+16]
	105 Move X23, [X31+24]
	106 Add W0, W8, W0
	107 Move X30, [X31+64]
	108 Return X0
	109 Move X0, 0x1CD9000
	110 Move X0, [X0+1888]
	111 Call 0x1C17D08
	112 Call 0x1C17F10
	113 Move X20, X0
	114 Move X0, 0x1CF9000
	115 Move X0, [X0+1624]
	116 Move X0, 0x1CD9000
	117 Move X0, [X0+1888]
	118 Call 0x1C17D08
	119 Call 0x1C17F10
	120 Move X20, X0
	121 Move X0, 0x1CF9000
	122 Move X0, [X0+1608]
	123 Call 0x1C17D08
	124 Move X1, X0
	125 Move X0, X20
	126 Move X2, X31
	127 Call ArgumentOutOfRangeException..ctor, X0, X1
	128 Move X0, 0x1CD6000
	129 Move X0, [X0+1320]
	130 Call 0x1C17D08
	131 Call 0x1C17F10
	132 Move X20, X0
	133 Move X0, 0x1CD3000
	134 Move X0, [X0+3200]
	135 Call 0x1C17D08
	136 Move X1, X0
	137 Move X0, X20
	138 Move X2, X31
	139 Call ArgumentNullException..ctor, X0, X1
	140 Move X0, X20
	141 Move X1, X19
	142 Call 0x1C17DEC

Method: System.Int32 IndexOf(Fusion.NetworkString`1<TOtherSize> str, System.Int32 startIndex = 0)

Disassembly:
	0x02134BE8 CBZ X19, 0x2134C78
	0x02134BEC ADRP X0, 0x1FE7000
	0x02134BF0 LDR X0, [X0 + 0x6C0]
	0x02134BF4 BL 0x1C16D08
	0x02134BF8 LDR X8, [X19]
	0x02134BFC MOV X1, X0
	0x02134C00 LDRH W9, [X8 + 0x12E]
	0x02134C04 CBZ X9, 0x2134C28
	0x02134C08 LDR X10, [X8 + 0xB0]
	0x02134C0C ADD X10, X10, 0x8
	0x02134C10 LDUR X11, [X10 - 0x8]
	0x02134C14 CMP X11, X1
	0x02134C18 B.EQ 0x2134C38
	0x02134C1C SUBS X9, X9, 0x1
	0x02134C20 ADD X10, X10, 0x10
	0x02134C24 B.NE 0x2134C10
	0x02134C28 MOV X0, X19
	0x02134C2C MOV W2, W31
	0x02134C30 BL 0x1C5C788
	0x02134C34 B 0x2134C44
	0x02134C38 LDRSW X9, [X10]
	0x02134C3C ADD X8, X8, X9, 0x4, LSL
	0x02134C40 ADD X0, X8, 0x138
	0x02134C44 LDP X8, X2, [X0]
	0x02134C48 MOV X0, X19
	0x02134C4C MOV X1, X20
	0x02134C50 BLR X8
	0x02134C54 B 0x2134B7C
	0x02134C58 MOVZ W0, 0x8
	0x02134C5C BL 0x3EB1AF0
	0x02134C60 LDR X8, [X20]
	0x02134C64 STR X8, [X0]
	0x02134C68 ADRP X1, 0x1D80000
	0x02134C6C ADD X1, X1, 0xE58
	0x02134C70 MOV X2, X31
	0x02134C74 BL 0x3EB1B00
	0x02134C78 BL 0x1C16F20
	0x02134C7C MOV X20, X0
	0x02134C80 BL 0x3EB1AE0
	0x02134C84 MOV X0, X20
	0x02134C88 BL 0x1D2C690
	0x02134C8C BL 0x1990590
	0x02134C90 STR X30, [X31 - 0x30]!
	0x02134C94 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X3+56]
	008 Move X21, X3
	009 Move W19, W2
	010 Move X20, X1
	011 Move X22, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {16}
	014 Move X0, X21
	015 Call 0x1C5D6E0
	016 Move X8, [X21+32]
	017 Add X9, X8, 309
	018 NotImplemented "Instruction LDRH not yet implemented."
	019 Move TEMP, X9
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, X8
	024 Call 0x1C5D684
	025 Move X8, [X21+32]
	026 Add X9, X8, 309
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move X0, X8
	029 Move X10, [X0+192]
	030 Move X10, [X10+104]
	031 Move X23, [X10]
	032 Move TEMP, X9
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {39}
	036 Move X0, X8
	037 Call 0x1C5D684
	038 Move X8, X0
	039 Move X8, [X8+192]
	040 Move X0, X22
	041 Move X1, [X8+104]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X8, [X21+56]
	044 Subtract W3, W0, W19
	045 Move X0, X22
	046 Move X1, X20
	047 Move X4, [X8+8]
	048 Move W2, W19
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X5, [X4]
	054 Move X30, [X31+48]
	055 Move X23, [X31+56]
	056 CallNoReturn X5

Method: System.Int32 IndexOf(Fusion.NetworkString`1<TOtherSize> str, System.Int32 startIndex, System.Int32 count)

Disassembly:
	0x02134D48 STP X30, X21, [X31 - 0x20]!
	0x02134D4C STP X20, X19, [X31 + 0x10]
	0x02134D50 LDR X8, [X2 + 0x38]
	0x02134D54 MOV X19, X1
	0x02134D58 MOV X20, X0
	0x02134D5C CBNZ X8, 0x2134D70
	0x02134D60 MOV X0, X2
	0x02134D64 MOV X21, X2
	0x02134D68 BL 0x1C5C6E0
	0x02134D6C LDR X8, [X21 + 0x38]
	0x02134D70 LDR X4, [X8 + 0x8]
	0x02134D74 MOV X0, X20
	0x02134D78 MOV X1, X19
	0x02134D7C LDP X20, X19, [X31 + 0x10]
	0x02134D80 LDR X5, [X4]
	0x02134D84 MOV X2, X31
	0x02134D88 MOV X3, X31
	0x02134D8C LDP X30, X21, [X31], #0x20
	0x02134D90 BR X5
	0x02134D94 STR X30, [X31 - 0x30]!
	0x02134D98 STP X22, X21, [X31 + 0x10]
	0x02134D9C STP X20, X19, [X31 + 0x20]
	0x02134DA0 LDR X8, [X3 + 0x38]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X4+56]
	008 Move W19, W3
	009 Move W20, W2
	010 Move X21, X1
	011 Move X22, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {18}
	014 Move X0, X4
	015 Move X23, X4
	016 Call 0x1C5D6E0
	017 Move X8, [X23+56]
	018 Move X4, [X8+8]
	019 Move X0, X22
	020 Move X1, X21
	021 Move W2, W20
	022 Move X5, [X4]
	023 Move W3, W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X5

Method: System.Int32 IndexOf(ref Fusion.NetworkString`1<TOtherSize> str, System.Int32 startIndex = 0)

Disassembly:
	0x02134C98 STP X20, X19, [X31 + 0x20]
	0x02134C9C LDR X8, [X2 + 0x38]
	0x02134CA0 MOV X19, X2
	0x02134CA4 MOV X21, X1
	0x02134CA8 MOV X20, X0
	0x02134CAC CBNZ X8, 0x2134CBC
	0x02134CB0 MOV X0, X19
	0x02134CB4 BL 0x1C5C6E0
	0x02134CB8 LDR X8, [X19 + 0x38]
	0x02134CBC LDR X0, [X8]
	0x02134CC0 LDRB W8, [X0 + 0x135]
	0x02134CC4 TBNZ X8, 0x0, 0x2134CCC
	0x02134CC8 BL 0x1C5C684
	0x02134CCC BL 0x1C16F10
	0x02134CD0 LDR X8, [X19 + 0x38]
	0x02134CD4 MOV X22, X0
	0x02134CD8 LDR X1, [X8 + 0x8]
	0x02134CDC LDR X8, [X1]
	0x02134CE0 BLR X8
	0x02134CE4 CBZ X22, 0x2134D44
	0x02134CE8 STR X21, [X22 + 0x10]
	0x02134CEC LDR X8, [X19 + 0x38]
	0x02134CF0 LDR X0, [X8 + 0x20]
	0x02134CF4 LDRB W8, [X0 + 0x135]
	0x02134CF8 TBNZ X8, 0x0, 0x2134D00
	0x02134CFC BL 0x1C5C684
	0x02134D00 BL 0x1C16F10
	0x02134D04 LDR X8, [X19 + 0x38]
	0x02134D08 MOV X1, X22
	0x02134D0C MOV X21, X0
	0x02134D10 LDR X3, [X8 + 0x28]
	0x02134D14 LDR X2, [X8 + 0x18]
	0x02134D18 LDR X9, [X3]
	0x02134D1C BLR X9
	0x02134D20 LDR X8, [X19 + 0x38]
	0x02134D24 MOV X0, X20
	0x02134D28 MOV X1, X21
	0x02134D2C LDP X20, X19, [X31 + 0x20]
	0x02134D30 LDR X2, [X8 + 0x30]
	0x02134D34 LDP X22, X21, [X31 + 0x10]
	0x02134D38 LDR X3, [X2]
	0x02134D3C LDR X30, [X31], #0x30
	0x02134D40 BR X3
	0x02134D44 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X3+56]
	008 Move X21, X3
	009 Move W19, W2
	010 Move X20, X1
	011 Move X22, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {16}
	014 Move X0, X21
	015 Call 0x1C5D6E0
	016 Move X8, [X21+32]
	017 Add X9, X8, 309
	018 NotImplemented "Instruction LDRH not yet implemented."
	019 Move TEMP, X9
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, X8
	024 Call 0x1C5D684
	025 Move X8, [X21+32]
	026 Add X9, X8, 309
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move X0, X8
	029 Move X10, [X0+192]
	030 Move X10, [X10+104]
	031 Move X23, [X10]
	032 Move TEMP, X9
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {39}
	036 Move X0, X8
	037 Call 0x1C5D684
	038 Move X8, X0
	039 Move X8, [X8+192]
	040 Move X0, X22
	041 Move X1, [X8+104]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X8, [X21+56]
	044 Subtract W3, W0, W19
	045 Move X0, X22
	046 Move X1, X20
	047 Move X4, [X8+8]
	048 Move W2, W19
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X5, [X4]
	054 Move X30, [X31+48]
	055 Move X23, [X31+56]
	056 CallNoReturn X5

Method: System.Int32 IndexOf(ref Fusion.NetworkString`1<TOtherSize> str, System.Int32 startIndex, System.Int32 count)

Disassembly:
	0x02134DA4 MOV X19, X2
	0x02134DA8 MOV X20, X1
	0x02134DAC MOV X21, X0
	0x02134DB0 CBNZ X8, 0x2134DC4
	0x02134DB4 MOV X0, X3
	0x02134DB8 MOV X22, X3
	0x02134DBC BL 0x1C5C6E0
	0x02134DC0 LDR X8, [X22 + 0x38]
	0x02134DC4 LDR X4, [X8 + 0x10]
	0x02134DC8 MOV X0, X21
	0x02134DCC MOV X1, X20
	0x02134DD0 MOV X2, X19
	0x02134DD4 LDR X5, [X4]
	0x02134DD8 LDP X20, X19, [X31 + 0x20]
	0x02134DDC LDP X22, X21, [X31 + 0x10]
	0x02134DE0 MOV X3, X31
	0x02134DE4 LDR X30, [X31], #0x30
	0x02134DE8 BR X5
	0x02134DEC STR X30, [X31 - 0x40]!
	0x02134DF0 STP X24, X23, [X31 + 0x10]
	0x02134DF4 STP X22, X21, [X31 + 0x20]
	0x02134DF8 STP X20, X19, [X31 + 0x30]
	0x02134DFC LDR X8, [X4 + 0x38]
	0x02134E00 MOV X21, X4
	0x02134E04 MOV X19, X3
	0x02134E08 MOV X23, X2
	0x02134E0C MOV X24, X1
	0x02134E10 MOV X20, X0
	0x02134E14 CBNZ X8, 0x2134E38
	0x02134E18 ADRP X0, 0x1FC2000
	0x02134E1C LDR X0, [X0 + 0x2C8]
	0x02134E20 BL 0x1C16CF4
	0x02134E24 LDR X8, [X21 + 0x38]
	0x02134E28 CBNZ X8, 0x2134E38
	0x02134E2C MOV X0, X21
	0x02134E30 BL 0x1C5C6E0
	0x02134E34 LDR X8, [X21 + 0x38]
	0x02134E38 LDR X0, [X8]
	0x02134E3C LDRB W8, [X0 + 0x135]
	0x02134E40 TBNZ X8, 0x0, 0x2134E48
	0x02134E44 BL 0x1C5C684
	0x02134E48 BL 0x1C16F10
	0x02134E4C LDR X8, [X21 + 0x38]
	0x02134E50 MOV X22, X0
	0x02134E54 LDR X1, [X8 + 0x8]
	0x02134E58 LDR X8, [X1]
	0x02134E5C BLR X8
	0x02134E60 CBZ X22, 0x2134F98
	0x02134E64 STR X24, [X22 + 0x10]
	0x02134E68 STR X23, [X22 + 0x20]
	0x02134E6C LDR X8, [X21 + 0x38]
	0x02134E70 LDR X0, [X8 + 0x20]
	0x02134E74 LDRB W8, [X0 + 0x135]
	0x02134E78 TBNZ X8, 0x0, 0x2134E80
	0x02134E7C BL 0x1C5C684
	0x02134E80 BL 0x1C16F10
	0x02134E84 LDR X8, [X21 + 0x38]
	0x02134E88 MOV X23, X0
	0x02134E8C LDR X1, [X8 + 0x28]
	0x02134E90 LDR X8, [X1]
	0x02134E94 BLR X8
	0x02134E98 STR X23, [X22 + 0x18]
	0x02134E9C LDR X8, [X21 + 0x20]
	0x02134EA0 MOV X0, X20
	0x02134EA4 LDR X8, [X8 + 0xC0]
	0x02134EA8 LDR X1, [X8 + 0x120]
	0x02134EAC LDR X8, [X1]
	0x02134EB0 BLR X8
	0x02134EB4 CBZ X23, 0x2134F98
	0x02134EB8 LDR X8, [X21 + 0x38]
	0x02134EBC MOV X1, X0
	0x02134EC0 MOV X0, X23
	0x02134EC4 LDR X2, [X8 + 0x30]
	0x02134EC8 LDR X8, [X2]
	0x02134ECC BLR X8
	0x02134ED0 LDR X8, [X21 + 0x20]
	0x02134ED4 LDR X8, [X8 + 0xC0]
	0x02134ED8 LDR X0, [X8 + 0x20]
	0x02134EDC LDRB W8, [X0 + 0x135]
	0x02134EE0 TBNZ X8, 0x0, 0x2134EE8
	0x02134EE4 BL 0x1C5C684
	0x02134EE8 BL 0x1C16F10
	0x02134EEC LDR X8, [X21 + 0x20]
	0x02134EF0 MOV X1, X22
	0x02134EF4 MOV X23, X0
	0x02134EF8 LDR X8, [X8 + 0xC0]
	0x02134EFC LDR X3, [X8 + 0x28]
	0x02134F00 LDR X8, [X21 + 0x38]
	0x02134F04 LDR X9, [X3]
	0x02134F08 LDR X2, [X8 + 0x40]
	0x02134F0C BLR X9
	0x02134F10 ADRP X8, 0x1FC2000
	0x02134F14 LDR X8, [X8 + 0x2C8]
	0x02134F18 LDR X0, [X8]
	0x02134F1C BL 0x1C16F10
	0x02134F20 LDR X8, [X21 + 0x38]
	0x02134F24 MOV X1, X22
	0x02134F28 MOV X3, X31
	0x02134F2C MOV X24, X0
	0x02134F30 LDR X2, [X8 + 0x48]
	0x02134F34 BL 0x2A6B948
	0x02134F38 LDR X8, [X21 + 0x20]
	0x02134F3C LDR X1, [X22 + 0x18]
	0x02134F40 MOV X0, X20
	0x02134F44 MOV X2, X23
	0x02134F48 LDR X8, [X8 + 0xC0]
	0x02134F4C MOV X3, X24
	0x02134F50 LDR X4, [X8 + 0x138]
	0x02134F54 LDR X8, [X4]
	0x02134F58 BLR X8
	0x02134F5C CBZ X19, 0x2134F80
	0x02134F60 LDR X8, [X21 + 0x20]
	0x02134F64 MOV X0, X20
	0x02134F68 MOV X1, X20
	0x02134F6C MOV X2, X19
	0x02134F70 LDR X8, [X8 + 0xC0]
	0x02134F74 LDR X3, [X8 + 0x148]
	0x02134F78 LDR X8, [X3]
	0x02134F7C BLR X8
	0x02134F80 LDR X0, [X22 + 0x18]
	0x02134F84 LDP X20, X19, [X31 + 0x30]
	0x02134F88 LDP X22, X21, [X31 + 0x20]
	0x02134F8C LDP X24, X23, [X31 + 0x10]
	0x02134F90 LDR X30, [X31], #0x40
	0x02134F94 RET
	0x02134F98 BL 0x1C16F20
	0x02134F9C STR X30, [X31 - 0x30]!
	0x02134FA0 STP X22, X21, [X31 + 0x10]
	0x02134FA4 STP X20, X19, [X31 + 0x20]
	0x02134FA8 LDR X8, [X2 + 0x38]
	0x02134FAC MOV X19, X2
	0x02134FB0 MOV X21, X1
	0x02134FB4 MOV X20, X0
	0x02134FB8 CBNZ X8, 0x2134FC8
	0x02134FBC MOV X0, X19

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X4+56]
	009 Move X19, X4
	010 Move W21, W3
	011 Move W20, W2
	012 Move X22, X1
	013 Move X23, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {18}
	016 Move X0, X19
	017 Call 0x1C5D6E0
	018 Move TEMP, X20
	019 And TEMP, TEMP, -2147483648
	020 Compare TEMP, -2147483648
	021 JumpIfEqual {137}
	022 Move X8, [X19+32]
	023 Add X9, X8, 309
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Move TEMP, X9
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, X8
	030 Call 0x1C5D684
	031 Move X8, [X19+32]
	032 Add X9, X8, 309
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move X0, X8
	035 Move X10, [X0+192]
	036 Move X10, [X10+104]
	037 Move X24, [X10]
	038 Move TEMP, X9
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {45}
	042 Move X0, X8
	043 Call 0x1C5D684
	044 Move X8, X0
	045 Move X8, [X8+192]
	046 Move X0, X23
	047 Move X1, [X8+104]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move TEMP, X21
	051 And TEMP, TEMP, -2147483648
	052 Compare TEMP, -2147483648
	053 JumpIfEqual {144}
	054 Move X8, [X19+32]
	055 Add X9, X8, 309
	056 NotImplemented "Instruction LDRH not yet implemented."
	057 Move TEMP, X9
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {66}
	061 Move X0, X8
	062 Call 0x1C5D684
	063 Move X8, [X19+32]
	064 Add X9, X8, 309
	065 NotImplemented "Instruction LDRH not yet implemented."
	066 Move X0, X8
	067 Move X10, [X0+192]
	068 Move X10, [X10+104]
	069 Move X24, [X10]
	070 Move TEMP, X9
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {77}
	074 Move X0, X8
	075 Call 0x1C5D684
	076 Move X8, X0
	077 Move X8, [X8+192]
	078 Move X0, X23
	079 Move X1, [X8+104]
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Add W8, W21, W20
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X8, [X19+56]
	084 Move X0, X22
	085 Move X1, [X8+8]
	086 Move X8, [X1]
	087 NotImplemented "Instruction BLR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move TEMP, 0
	090 Not TEMP
	091 Move W0, TEMP
	092 Move X8, [X19+56]
	093 Move X0, X22
	094 Move X8, [X8+24]
	095 Move X8, [X8+128]
	096 Add X1, X8, 32
	097 Call 0x1C17D18
	098 Move X8, [X19+32]
	099 Move X24, X0
	100 Move W9, [X8+309]
	101 Move TEMP, X9
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {108}
	105 Move X0, X8
	106 Call 0x1C5D684
	107 Move X8, X0
	108 Move X8, [X8+192]
	109 Move X0, X23
	110 Move X8, [X8]
	111 Move X8, [X8+128]
	112 Add X1, X8, 32
	113 Call 0x1C17D18
	114 Move X8, [X19+56]
	115 Move X19, X0
	116 Move X0, X22
	117 Move X1, [X8+8]
	118 Move X8, [X1]
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move W3, W0
	121 Add X0, X19, W20
	122 Move W1, W21
	123 Move X2, X24
	124 Move X4, X31
	125 Call UTF32Tools.IndexOf, X0, X1, X2, X3
	126 NotImplemented "Instruction CMP not yet implemented."
	127 NotImplemented "Instruction CSEL not yet implemented."
	128 Add W0, W8, W0
	129 Move X20, [X31+48]
	130 Move X19, [X31+56]
	131 Move X22, [X31+32]
	132 Move X21, [X31+40]
	133 Move X24, [X31+16]
	134 Move X23, [X31+24]
	135 Move X30, [X31+64]
	136 Return X0
	137 Move X0, 0x1FC8000
	138 Move X0, [X0+1888]
	139 Call 0x1C17D08
	140 Call 0x1C17F10
	141 Move X20, X0
	142 Move X0, 0x1FE8000
	143 Move X0, [X0+1624]
	144 Move X0, 0x1FC8000
	145 Move X0, [X0+1888]
	146 Call 0x1C17D08
	147 Call 0x1C17F10
	148 Move X20, X0
	149 Move X0, 0x1FE8000
	150 Move X0, [X0+1608]
	151 Call 0x1C17D08
	152 Move X1, X0
	153 Move X0, X20
	154 Move X2, X31
	155 Call ArgumentOutOfRangeException..ctor, X0, X1
	156 Move X0, X20
	157 Move X1, X19
	158 Call 0x1C17DEC

Method: System.Boolean Contains(System.Char c)

Disassembly:
	0x02423414 TBNZ X8, 0x0, 0x242342C
	0x02423418 ADRP X0, 0x1CF9000
	0x0242341C LDR X0, [X0 + 0xCC8]
	0x02423420 BL 0x1C16CF4
	0x02423424 MOVZ W8, 0x1
	0x02423428 STRB W8, [X22 + 0x9CF]
	0x0242342C LDR X1, [X23]
	0x02423430 MOV X0, X20
	0x02423434 BL 0x1C16E00
	0x02423438 CBZ X0, 0x2423498
	0x0242343C MOV X20, X0
	0x02423440 LDR X0, [X21 + 0x20]
	0x02423444 LDRB W8, [X0 + 0x135]
	0x02423448 TBNZ X8, 0x0, 0x2423450
	0x0242344C BL 0x1C5C684
	0x02423450 LDR X9, [X0 + 0xC0]
	0x02423454 LDR X8, [X20]
	0x02423458 LDR X21, [X9 + 0xB8]
	0x0242345C LDRH W9, [X8 + 0x12E]
	0x02423460 LDR X1, [X21 + 0x20]
	0x02423464 LDRH W2, [X21 + 0x50]
	0x02423468 CBZ X9, 0x242348C
	0x0242346C LDR X10, [X8 + 0xB0]
	0x02423470 ADD X10, X10, 0x8
	0x02423474 LDUR X11, [X10 - 0x8]
	0x02423478 CMP X11, X1
	0x0242347C B.EQ 0x24234A8
	0x02423480 SUBS X9, X9, 0x1
	0x02423484 ADD X10, X10, 0x10
	0x02423488 B.NE 0x2423474
	0x0242348C MOV X0, X20
	0x02423490 BL 0x1C5C788
	0x02423494 B 0x24234B8
	0x02423498 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move W19, W1
	007 Move X20, X0
	008 Add X9, X8, 309
	009 NotImplemented "Instruction LDRH not yet implemented."
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {20}
	014 Move X0, X8
	015 Move X21, X2
	016 Call 0x1C5D684
	017 Move X8, [X21+32]
	018 Add X9, X8, 309
	019 NotImplemented "Instruction LDRH not yet implemented."
	020 Move X0, X8
	021 Move X10, [X0+192]
	022 Move X10, [X10+152]
	023 Move X21, [X10]
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {31}
	028 Move X0, X8
	029 Call 0x1C5D684
	030 Move X8, X0
	031 Move X8, [X8+192]
	032 Move X0, X20
	033 Move W1, W19
	034 Move W2, W31
	035 Move X3, [X8+152]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 NotImplemented "Instruction ORN not yet implemented."
	040 Move W0, W8
	041 ShiftRight W0, 31
	042 And W0, W0, 0x7FFFFFFF
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return X0

Method: System.Boolean Contains(System.UInt32 codePoint)

Disassembly:
	0x0242349C LDP X22, X21, [X31 + 0x10]
	0x024234A0 LDP X30, X23, [X31], #0x30
	0x024234A4 RET
	0x024234A8 LDR W9, [X10]
	0x024234AC ADD W9, W9, W2
	0x024234B0 ADD X8, X8, W9, 0x4, SXTW
	0x024234B4 ADD X0, X8, 0x138
	0x024234B8 LDR X0, [X0 + 0x8]
	0x024234BC MOV X1, X21
	0x024234C0 BL 0x1C16DF8
	0x024234C4 MOV X2, X0
	0x024234C8 LDR X3, [X0 + 0x8]
	0x024234CC MOV X0, X20
	0x024234D0 MOV X1, X19
	0x024234D4 LDP X20, X19, [X31 + 0x20]
	0x024234D8 LDP X22, X21, [X31 + 0x10]
	0x024234DC LDP X30, X23, [X31], #0x30
	0x024234E0 BR X3
	0x024234E4 STP X30, X21, [X31 - 0x20]!
	0x024234E8 STP X20, X19, [X31 + 0x10]
	0x024234EC LDR X8, [X2 + 0x20]
	0x024234F0 MOV X19, X1
	0x024234F4 MOV X20, X0
	0x024234F8 ADD X9, X8, 0x135
	0x024234FC LDRH W9, [X9]
	0x02423500 TBNZ X9, 0x0, 0x2423520
	0x02423504 MOV X0, X8
	0x02423508 MOV X21, X2
	0x0242350C BL 0x1C5C684
	0x02423510 LDR X8, [X21 + 0x20]
	0x02423514 ADD X9, X8, 0x135
	0x02423518 LDRH W9, [X9]
	0x0242351C B 0x2423524
	0x02423520 MOV X0, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move W19, W1
	007 Move X20, X0
	008 Add X9, X8, 309
	009 NotImplemented "Instruction LDRH not yet implemented."
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {20}
	014 Move X0, X8
	015 Move X21, X2
	016 Call 0x1C5D684
	017 Move X8, [X21+32]
	018 Add X9, X8, 309
	019 NotImplemented "Instruction LDRH not yet implemented."
	020 Move X0, X8
	021 Move X10, [X0+192]
	022 Move X10, [X10+160]
	023 Move X21, [X10]
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {31}
	028 Move X0, X8
	029 Call 0x1C5D684
	030 Move X8, X0
	031 Move X8, [X8+192]
	032 Move X0, X20
	033 Move W1, W19
	034 Move W2, W31
	035 Move X3, [X8+160]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 NotImplemented "Instruction ORN not yet implemented."
	040 Move W0, W8
	041 ShiftRight W0, 31
	042 And W0, W0, 0x7FFFFFFF
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return X0

Method: System.Boolean Contains(System.String str)

Disassembly:
	0x02423524 LDR X10, [X0 + 0xC0]
	0x02423528 LDR X10, [X10 + 0xC0]
	0x0242352C LDR X21, [X10]
	0x02423530 TBNZ X9, 0x0, 0x2423540
	0x02423534 MOV X0, X8
	0x02423538 BL 0x1C5C684
	0x0242353C MOV X8, X0
	0x02423540 LDR X8, [X8 + 0xC0]
	0x02423544 MOV X0, X20
	0x02423548 MOV X1, X19
	0x0242354C LDR X2, [X8 + 0xC0]
	0x02423550 BLR X21
	0x02423554 LDP X20, X19, [X31 + 0x10]
	0x02423558 CMP W0, 0x0
	0x0242355C CSET W0, EQ
	0x02423560 LDP X30, X21, [X31], #0x20
	0x02423564 RET
	0x02423568 STP X30, X21, [X31 - 0x20]!
	0x0242356C STP X20, X19, [X31 + 0x10]
	0x02423570 LDR X8, [X2 + 0x20]
	0x02423574 MOV X19, X1
	0x02423578 MOV X20, X0
	0x0242357C ADD X9, X8, 0x135
	0x02423580 LDRH W9, [X9]
	0x02423584 TBNZ X9, 0x0, 0x24235A4
	0x02423588 MOV X0, X8
	0x0242358C MOV X21, X2
	0x02423590 BL 0x1C5C684
	0x02423594 LDR X8, [X21 + 0x20]
	0x02423598 ADD X9, X8, 0x135
	0x0242359C LDRH W9, [X9]
	0x024235A0 B 0x24235A8
	0x024235A4 MOV X0, X8
	0x024235A8 LDR X10, [X0 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X19, X1
	007 Move X20, X0
	008 Add X9, X8, 309
	009 NotImplemented "Instruction LDRH not yet implemented."
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {20}
	014 Move X0, X8
	015 Move X21, X2
	016 Call 0x1C5D684
	017 Move X8, [X21+32]
	018 Add X9, X8, 309
	019 NotImplemented "Instruction LDRH not yet implemented."
	020 Move X0, X8
	021 Move X10, [X0+192]
	022 Move X10, [X10+168]
	023 Move X21, [X10]
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {31}
	028 Move X0, X8
	029 Call 0x1C5D684
	030 Move X8, X0
	031 Move X8, [X8+192]
	032 Move X0, X20
	033 Move X1, X19
	034 Move W2, W31
	035 Move X3, [X8+168]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 NotImplemented "Instruction ORN not yet implemented."
	040 Move W0, W8
	041 ShiftRight W0, 31
	042 And W0, W0, 0x7FFFFFFF
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return X0

Method: System.Boolean Contains(Fusion.NetworkString`1<TOtherSize> str)

Disassembly:
	0x02134988 LDR X0, [X8]
	0x0213498C LDRB W8, [X0 + 0x135]
	0x02134990 TBNZ X8, 0x0, 0x2134998
	0x02134994 BL 0x1C5C684
	0x02134998 BL 0x1C16F10
	0x0213499C LDR X8, [X20 + 0x38]
	0x021349A0 MOV X22, X0
	0x021349A4 LDR X1, [X8 + 0x8]
	0x021349A8 LDR X8, [X1]
	0x021349AC BLR X8
	0x021349B0 ADRP X8, 0x1FE7000
	0x021349B4 LDR X8, [X8 + 0x6C8]
	0x021349B8 LDR X0, [X8]
	0x021349BC BL 0x1C16F10
	0x021349C0 MOV X1, X31
	0x021349C4 MOV X23, X0
	0x021349C8 BL 0x358D56C
	0x021349CC CBZ X22, 0x2134AC8
	0x021349D0 STR X23, [X22 + 0x10]
	0x021349D4 LDR X8, [X20 + 0x20]
	0x021349D8 MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {14}
	010 Move X0, X2
	011 Move X21, X2
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X3, [X8+8]
	015 Move X0, X20
	016 Move X1, X19
	017 Move W2, W31
	018 Move X8, [X3]
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 NotImplemented "Instruction ORN not yet implemented."
	023 Move W0, W8
	024 ShiftRight W0, 31
	025 And W0, W0, 0x7FFFFFFF
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 Return X0

Method: System.Boolean Contains(ref Fusion.NetworkString`1<TOtherSize> str)

Disassembly:
	0x021349DC LDR X8, [X8 + 0xC0]
	0x021349E0 LDR X1, [X8 + 0x120]
	0x021349E4 LDR X8, [X1]
	0x021349E8 BLR X8
	0x021349EC CBZ X23, 0x2134AC8
	0x021349F0 MOV X1, X0
	0x021349F4 MOV X0, X23
	0x021349F8 MOV X2, X31
	0x021349FC BL 0x358F32C
	0x02134A00 LDR X8, [X20 + 0x20]
	0x02134A04 LDR X8, [X8 + 0xC0]
	0x02134A08 LDR X0, [X8 + 0x20]
	0x02134A0C LDRB W8, [X0 + 0x135]
	0x02134A10 TBNZ X8, 0x0, 0x2134A18
	0x02134A14 BL 0x1C5C684
	0x02134A18 BL 0x1C16F10
	0x02134A1C LDR X8, [X20 + 0x20]
	0x02134A20 MOV X1, X22
	0x02134A24 MOV X23, X0
	0x02134A28 LDR X8, [X8 + 0xC0]
	0x02134A2C LDR X3, [X8 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {14}
	010 Move X0, X2
	011 Move X21, X2
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X3, [X8+8]
	015 Move X0, X20
	016 Move X1, X19
	017 Move W2, W31
	018 Move X8, [X3]
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 NotImplemented "Instruction ORN not yet implemented."
	023 Move W0, W8
	024 ShiftRight W0, 31
	025 And W0, W0, 0x7FFFFFFF
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 Return X0

Method: Fusion.NetworkString`1<TSize> Substring(System.Int32 startIndex)

Disassembly:
	0x024235AC LDR X10, [X10 + 0xC0]
	0x024235B0 LDR X21, [X10]
	0x024235B4 TBNZ X9, 0x0, 0x24235C4
	0x024235B8 MOV X0, X8
	0x024235BC BL 0x1C5C684
	0x024235C0 MOV X8, X0
	0x024235C4 LDR X8, [X8 + 0xC0]
	0x024235C8 MOV X0, X20
	0x024235CC MOV X1, X19
	0x024235D0 LDR X2, [X8 + 0xC0]
	0x024235D4 BLR X21
	0x024235D8 LDP X20, X19, [X31 + 0x10]
	0x024235DC CMP W0, 0x0
	0x024235E0 CSET W0, EQ
	0x024235E4 LDP X30, X21, [X31], #0x20
	0x024235E8 RET
	0x024235EC SUB X31, X31, 0x30
	0x024235F0 STP X30, X21, [X31 + 0x10]
	0x024235F4 STP X20, X19, [X31 + 0x20]
	0x024235F8 LDR X8, [X2 + 0x20]
	0x024235FC MOV X19, X1
	0x02423600 MOV X20, X0
	0x02423604 ADD X9, X8, 0x135
	0x02423608 LDRH W9, [X9]
	0x0242360C TBNZ X9, 0x0, 0x242362C
	0x02423610 MOV X0, X8
	0x02423614 MOV X21, X2
	0x02423618 BL 0x1C5C684
	0x0242361C LDR X8, [X21 + 0x20]
	0x02423620 ADD X9, X8, 0x135
	0x02423624 LDRH W9, [X9]
	0x02423628 B 0x2423630
	0x0242362C MOV X0, X8
	0x02423630 LDR X10, [X0 + 0xC0]
	0x02423634 LDR X10, [X10 + 0x8]
	0x02423638 LDR X3, [X10]
	0x0242363C TBNZ X9, 0x0, 0x2423654
	0x02423640 MOV X0, X8
	0x02423644 STR X3, [X31 + 0x8]
	0x02423648 BL 0x1C5C684
	0x0242364C LDR X3, [X31 + 0x8]
	0x02423650 MOV X8, X0
	0x02423654 LDR X8, [X8 + 0xC0]
	0x02423658 MOV X0, X20
	0x0242365C MOV X1, X19
	0x02423660 LDP X20, X19, [X31 + 0x20]
	0x02423664 LDR X2, [X8 + 0x8]
	0x02423668 LDP X30, X21, [X31 + 0x10]
	0x0242366C ADD X31, X31, 0x30
	0x02423670 BR X3
	0x02423674 STR X30, [X31 - 0x30]!
	0x02423678 STP X22, X21, [X31 + 0x10]
	0x0242367C STP X20, X19, [X31 + 0x20]
	0x02423680 MOV X21, X2
	0x02423684 CBZ X1, 0x2423738
	0x02423688 MOV X20, X0
	0x0242368C LDR X0, [X21 + 0x20]
	0x02423690 MOV X19, X1
	0x02423694 LDRB W8, [X0 + 0x135]
	0x02423698 TBNZ X8, 0x0, 0x24236A0
	0x0242369C BL 0x1C5C684
	0x024236A0 LDR X8, [X0 + 0xC0]
	0x024236A4 MOV X0, X20
	0x024236A8 LDR X8, [X8]
	0x024236AC LDR X8, [X8 + 0x80]
	0x024236B0 ADD X1, X8, 0x20
	0x024236B4 BL 0x1C16D18
	0x024236B8 LDR X8, [X21 + 0x20]
	0x024236BC MOV X22, X0
	0x024236C0 ADD X9, X8, 0x135
	0x024236C4 LDRH W9, [X9]
	0x024236C8 TBNZ X9, 0x0, 0x24236E4
	0x024236CC MOV X0, X8
	0x024236D0 BL 0x1C5C684
	0x024236D4 LDR X8, [X21 + 0x20]
	0x024236D8 ADD X9, X8, 0x135
	0x024236DC LDRH W9, [X9]
	0x024236E0 B 0x24236E8
	0x024236E4 MOV X0, X8
	0x024236E8 LDR X10, [X0 + 0xC0]
	0x024236EC LDR X10, [X10 + 0x68]
	0x024236F0 LDR X21, [X10]
	0x024236F4 TBNZ X9, 0x0, 0x2423704
	0x024236F8 MOV X0, X8
	0x024236FC BL 0x1C5C684
	0x02423700 MOV X8, X0
	0x02423704 LDR X8, [X8 + 0xC0]
	0x02423708 MOV X0, X20
	0x0242370C LDR X1, [X8 + 0x68]
	0x02423710 BLR X21
	0x02423714 MOV W1, W0
	0x02423718 MOV X0, X22
	0x0242371C MOV X2, X19
	0x02423720 LDP X20, X19, [X31 + 0x20]
	0x02423724 LDP X22, X21, [X31 + 0x10]
	0x02423728 MOV W3, W31
	0x0242372C MOV X4, X31
	0x02423730 LDR X30, [X31], #0x30
	0x02423734 B 0x1E38CC8
	0x02423738 ADRP X0, 0x1CD5000
	0x0242373C LDR X0, [X0 + 0x528]

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Add X29, X31, 0
	012 Subtract X31, X31, 48
	013 NotImplemented "Instruction MRS not yet implemented."
	014 Move X8, [X26+40]
	015 Move X24, X3
	016 Move X19, X2
	017 Move W21, W1
	018 Move [X29-8], X8
	019 Move X8, [X3+32]
	020 Move X20, X0
	021 Add X9, X8, 309
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move TEMP, X9
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, X8
	028 Call 0x1C5D684
	029 Move X8, [X24+32]
	030 Add X9, X8, 309
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X0, X8
	033 Move X10, [X0+192]
	034 Move X10, [X10]
	035 Move W22, [X10+252]
	036 Add X10, X31, 0
	037 Add X11, X22, 15
	038 And X11, X11, 0x1FFFFFFFF
	039 Subtract X23, X10, X11
	040 Add X31, X23, 0
	041 Move TEMP, X9
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {50}
	045 Move X0, X8
	046 Call 0x1C5D684
	047 Move X8, [X24+32]
	048 Add X9, X8, 309
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 Move X0, X8
	051 Move X10, [X0+192]
	052 Move X10, [X10+104]
	053 Move X25, [X10]
	054 Move TEMP, X9
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {61}
	058 Move X0, X8
	059 Call 0x1C5D684
	060 Move X8, X0
	061 Move X8, [X8+192]
	062 Move X0, X20
	063 Move X1, [X8+104]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X8, [X24+32]
	066 Move W25, W0
	067 Add X9, X8, 309
	068 NotImplemented "Instruction LDRH not yet implemented."
	069 Move TEMP, X9
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {78}
	073 Move X0, X8
	074 Call 0x1C5D684
	075 Move X8, [X24+32]
	076 Add X9, X8, 309
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Move X0, X8
	079 Move X10, [X0+192]
	080 Move X10, [X10+176]
	081 Move X24, [X10]
	082 Move TEMP, X9
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {89}
	086 Move X0, X8
	087 Call 0x1C5D684
	088 Move X8, X0
	089 Move X8, [X8+192]
	090 Subtract W9, W25, W21
	091 Subtract X10, X29, 12
	092 Subtract X3, X29, 40
	093 Move X1, [X8+176]
	094 Subtract X8, X29, 16
	095 Move [X29-16], W9
	096 Move [X29-12], W21
	097 Move [X29-40], X10
	098 Move [X29-32], X8
	099 Move [X29-24], X23
	100 Move X8, [X1+16]
	101 Move X0, X24
	102 Move X2, X20
	103 Move X4, X23
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Move X0, X19
	106 Move X1, X23
	107 Move X2, X22
	108 Call 0x3EB2AC0
	109 Move X8, [X26+40]
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Add X31, X29, 0
	113 Move X20, [X31+64]
	114 Move X19, [X31+72]
	115 Move X22, [X31+48]
	116 Move X21, [X31+56]
	117 Move X24, [X31+32]
	118 Move X23, [X31+40]
	119 Move X26, [X31+16]
	120 Move X25, [X31+24]
	121 Move X29, [X31+80]
	122 Move X30, [X31+88]
	123 Return X0
	124 Call 0x3EB2B20

Method: Fusion.NetworkString`1<TSize> Substring(System.Int32 startIndex, System.Int32 length)

Disassembly:
	0x02423740 BL 0x1C16D08
	0x02423744 BL 0x1C16F10
	0x02423748 MOV X19, X0
	0x0242374C ADRP X0, 0x1CF9000
	0x02423750 LDR X0, [X0 + 0xCC0]
	0x02423754 BL 0x1C16D08
	0x02423758 MOV X1, X0
	0x0242375C MOV X0, X19
	0x02423760 MOV X2, X31
	0x02423764 BL 0x330E100
	0x02423768 MOV X0, X19
	0x0242376C MOV X1, X21
	0x02423770 BL 0x1C16DEC
	0x02423774 STR X30, [X31 - 0x30]!
	0x02423778 STP X22, X21, [X31 + 0x10]
	0x0242377C STP X20, X19, [X31 + 0x20]
	0x02423780 MOV X21, X2
	0x02423784 CBZ X1, 0x2423838
	0x02423788 MOV X20, X0
	0x0242378C LDR X0, [X21 + 0x20]
	0x02423790 MOV X19, X1
	0x02423794 LDRB W8, [X0 + 0x135]
	0x02423798 TBNZ X8, 0x0, 0x24237A0
	0x0242379C BL 0x1C5C684
	0x024237A0 LDR X8, [X0 + 0xC0]
	0x024237A4 MOV X0, X20
	0x024237A8 LDR X8, [X8]
	0x024237AC LDR X8, [X8 + 0x80]
	0x024237B0 ADD X1, X8, 0x20
	0x024237B4 BL 0x1C16D18
	0x024237B8 LDR X8, [X21 + 0x20]
	0x024237BC MOV X22, X0
	0x024237C0 ADD X9, X8, 0x135
	0x024237C4 LDRH W9, [X9]
	0x024237C8 TBNZ X9, 0x0, 0x24237E4
	0x024237CC MOV X0, X8
	0x024237D0 BL 0x1C5C684
	0x024237D4 LDR X8, [X21 + 0x20]
	0x024237D8 ADD X9, X8, 0x135
	0x024237DC LDRH W9, [X9]
	0x024237E0 B 0x24237E8
	0x024237E4 MOV X0, X8
	0x024237E8 LDR X10, [X0 + 0xC0]
	0x024237EC LDR X10, [X10 + 0x68]
	0x024237F0 LDR X21, [X10]
	0x024237F4 TBNZ X9, 0x0, 0x2423804
	0x024237F8 MOV X0, X8
	0x024237FC BL 0x1C5C684
	0x02423800 MOV X8, X0
	0x02423804 LDR X8, [X8 + 0xC0]
	0x02423808 MOV X0, X20
	0x0242380C LDR X1, [X8 + 0x68]
	0x02423810 BLR X21
	0x02423814 MOV W1, W0
	0x02423818 MOV X0, X22
	0x0242381C MOV X2, X19
	0x02423820 LDP X20, X19, [X31 + 0x20]
	0x02423824 LDP X22, X21, [X31 + 0x10]
	0x02423828 MOV W3, W31
	0x0242382C MOV X4, X31
	0x02423830 LDR X30, [X31], #0x30
	0x02423834 B 0x1E38B34
	0x02423838 ADRP X0, 0x1CD5000
	0x0242383C LDR X0, [X0 + 0x528]
	0x02423840 BL 0x1C16D08
	0x02423844 BL 0x1C16F10
	0x02423848 MOV X19, X0
	0x0242384C ADRP X0, 0x1CF9000
	0x02423850 LDR X0, [X0 + 0xCC0]
	0x02423854 BL 0x1C16D08
	0x02423858 MOV X1, X0
	0x0242385C MOV X0, X19
	0x02423860 MOV X2, X31
	0x02423864 BL 0x330E100
	0x02423868 MOV X0, X19
	0x0242386C MOV X1, X21
	0x02423870 BL 0x1C16DEC
	0x02423874 STP X30, X21, [X31 - 0x20]!
	0x02423878 STP X20, X19, [X31 + 0x10]
	0x0242387C LDR X8, [X1 + 0x20]
	0x02423880 MOV X21, X1
	0x02423884 MOV X19, X0
	0x02423888 LDRB W9, [X8 + 0x135]
	0x0242388C TBNZ X9, 0x0, 0x242389C
	0x02423890 MOV X0, X8
	0x02423894 BL 0x1C5C684
	0x02423898 MOV X8, X0
	0x0242389C LDR X8, [X8 + 0xC0]
	0x024238A0 MOV X0, X19
	0x024238A4 LDR X8, [X8]
	0x024238A8 LDR X8, [X8 + 0x80]
	0x024238AC ADD X1, X8, 0x20
	0x024238B0 BL 0x1C16D18
	0x024238B4 LDR X8, [X21 + 0x20]
	0x024238B8 MOV X20, X0
	0x024238BC ADD X9, X8, 0x135
	0x024238C0 LDRH W9, [X9]
	0x024238C4 TBNZ X9, 0x0, 0x24238E0
	0x024238C8 MOV X0, X8
	0x024238CC BL 0x1C5C684
	0x024238D0 LDR X8, [X21 + 0x20]
	0x024238D4 ADD X9, X8, 0x135
	0x024238D8 LDRH W9, [X9]
	0x024238DC B 0x24238E4
	0x024238E0 MOV X0, X8
	0x024238E4 LDR X10, [X0 + 0xC0]
	0x024238E8 LDR X10, [X10 + 0x68]
	0x024238EC LDR X21, [X10]
	0x024238F0 TBNZ X9, 0x0, 0x2423900
	0x024238F4 MOV X0, X8
	0x024238F8 BL 0x1C5C684
	0x024238FC MOV X8, X0
	0x02423900 LDR X8, [X8 + 0xC0]
	0x02423904 MOV X0, X19
	0x02423908 LDR X1, [X8 + 0x68]
	0x0242390C BLR X21
	0x02423910 MOV W1, W0
	0x02423914 MOV X0, X20
	0x02423918 LDP X20, X19, [X31 + 0x10]
	0x0242391C MOV X2, X31
	0x02423920 LDP X30, X21, [X31], #0x20
	0x02423924 B 0x1E38C08
	0x02423928 STR X30, [X31 - 0x20]!
	0x0242392C STP X20, X19, [X31 + 0x10]
	0x02423930 LDR X8, [X1 + 0x20]
	0x02423934 MOV X19, X0
	0x02423938 ADD X9, X8, 0x135
	0x0242393C LDRH W9, [X9]
	0x02423940 TBNZ X9, 0x0, 0x2423960
	0x02423944 MOV X0, X8
	0x02423948 MOV X20, X1
	0x0242394C BL 0x1C5C684
	0x02423950 LDR X8, [X20 + 0x20]
	0x02423954 ADD X9, X8, 0x135
	0x02423958 LDRH W9, [X9]
	0x0242395C B 0x2423964
	0x02423960 MOV X0, X8
	0x02423964 LDR X10, [X0 + 0xC0]
	0x02423968 LDR X10, [X10 + 0x40]
	0x0242396C LDR X2, [X10]
	0x02423970 TBNZ X9, 0x0, 0x2423988
	0x02423974 MOV X0, X8
	0x02423978 STR X2, [X31 + 0x8]
	0x0242397C BL 0x1C5C684
	0x02423980 LDR X2, [X31 + 0x8]
	0x02423984 MOV X8, X0
	0x02423988 LDR X8, [X8 + 0xC0]
	0x0242398C MOV X0, X19
	0x02423990 LDP X20, X19, [X31 + 0x10]
	0x02423994 LDR X1, [X8 + 0x40]
	0x02423998 LDR X30, [X31], #0x20
	0x0242399C BR X2
	0x024239A0 STR X30, [X31 - 0x30]!
	0x024239A4 STP X22, X21, [X31 + 0x10]
	0x024239A8 STP X20, X19, [X31 + 0x20]
	0x024239AC MOV X20, X0
	0x024239B0 LDR X0, [X1 + 0x20]
	0x024239B4 MOV X22, X1
	0x024239B8 MOV X19, X8
	0x024239BC LDRB W9, [X0 + 0x135]
	0x024239C0 TBNZ X9, 0x0, 0x24239C8
	0x024239C4 BL 0x1C5C684
	0x024239C8 LDR X8, [X0 + 0xC0]
	0x024239CC MOV X0, X20
	0x024239D0 LDR X8, [X8]
	0x024239D4 LDR X8, [X8 + 0x80]
	0x024239D8 ADD X1, X8, 0x20
	0x024239DC BL 0x1C16D18
	0x024239E0 LDR X8, [X22 + 0x20]
	0x024239E4 MOV X21, X0
	0x024239E8 ADD X9, X8, 0x135
	0x024239EC LDRH W9, [X9]
	0x024239F0 TBNZ X9, 0x0, 0x2423A0C
	0x024239F4 MOV X0, X8
	0x024239F8 BL 0x1C5C684
	0x024239FC LDR X8, [X22 + 0x20]
	0x02423A00 ADD X9, X8, 0x135

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 16
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X28+40]
	017 Move X19, X4
	018 Move X20, X3
	019 Move W21, W2
	020 Move [X29-8], X8
	021 Move X8, [X4+32]
	022 Move W22, W1
	023 Move X26, X0
	024 Move W9, [X8+309]
	025 Move TEMP, X9
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {32}
	029 Move X0, X8
	030 Call 0x1C5D684
	031 Move X8, X0
	032 Move X8, [X8+192]
	033 Move X8, [X8]
	034 Move W23, [X8+252]
	035 Add X8, X31, 0
	036 Add X9, X23, 15
	037 And X9, X9, 0x1FFFFFFFF
	038 Subtract X24, X8, X9
	039 Add X31, X24, 0
	040 Add X8, X31, 0
	041 Subtract X25, X8, X9
	042 Add X31, X25, 0
	043 Move X0, X25
	044 Move W1, W31
	045 Move X2, X23
	046 Call 0x3EB2B10
	047 Move TEMP, X22
	048 And TEMP, TEMP, -2147483648
	049 Compare TEMP, -2147483648
	050 JumpIfEqual {193}
	051 Move X8, [X19+32]
	052 Add X9, X8, 309
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Move TEMP, X9
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {63}
	058 Move X0, X8
	059 Call 0x1C5D684
	060 Move X8, [X19+32]
	061 Add X9, X8, 309
	062 NotImplemented "Instruction LDRH not yet implemented."
	063 Move X0, X8
	064 Move X10, [X0+192]
	065 Move X10, [X10+104]
	066 Move X27, [X10]
	067 Move TEMP, X9
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {74}
	071 Move X0, X8
	072 Call 0x1C5D684
	073 Move X8, X0
	074 Move X8, [X8+192]
	075 Move X0, X26
	076 Move X1, [X8+104]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move TEMP, X21
	080 And TEMP, TEMP, -2147483648
	081 Compare TEMP, -2147483648
	082 JumpIfEqual {200}
	083 Move X8, [X19+32]
	084 Add X9, X8, 309
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Move TEMP, X9
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {95}
	090 Move X0, X8
	091 Call 0x1C5D684
	092 Move X8, [X19+32]
	093 Add X9, X8, 309
	094 NotImplemented "Instruction LDRH not yet implemented."
	095 Move X0, X8
	096 Move X10, [X0+192]
	097 Move X10, [X10+104]
	098 Move X27, [X10]
	099 Move TEMP, X9
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {106}
	103 Move X0, X8
	104 Call 0x1C5D684
	105 Move X8, X0
	106 Move X8, [X8+192]
	107 Move X0, X26
	108 Move X1, [X8+104]
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Add W8, W21, W22
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X0, X25
	113 Move W1, W31
	114 Move X2, X23
	115 Call 0x3EB2B10
	116 Move X0, [X19+32]
	117 Move W8, [X0+309]
	118 Move TEMP, X8
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfEqual {123}
	122 Call 0x1C5D684
	123 Move X8, [X0+192]
	124 Move X0, X26
	125 Move X8, [X8]
	126 Move X8, [X8+128]
	127 Add X1, X8, 32
	128 Call 0x1C17D18
	129 Move X8, [X19+32]
	130 Move X26, X0
	131 Move W9, [X8+309]
	132 Move TEMP, X9
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfEqual {139}
	136 Move X0, X8
	137 Call 0x1C5D684
	138 Move X8, X0
	139 Move X8, [X8+192]
	140 Move W1, 4
	141 Move X8, [X8]
	142 Move X27, [X8+128]
	143 Move X0, X27
	144 Call 0x1C17D14
	145 Move X0, X25
	146 Move X1, X27
	147 Call 0x1C17D18
	148 Move [X0], W21
	149 Move X0, [X19+32]
	150 Move W8, [X0+309]
	151 Move TEMP, X8
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfEqual {156}
	155 Call 0x1C5D684
	156 Move X8, [X0+192]
	157 Move X0, X25
	158 Move X8, [X8]
	159 Move X8, [X8+128]
	160 Add X1, X8, 32
	161 Call 0x1C17D18
	162 Add X1, X26, W22
	163 Move W2, W21
	164 ShiftRight W2, 30
	165 And W2, W2, 0x1FFFFFFF
	166 Move X3, X31
	167 Call Native.MemCpy, X0, X1, X2
	168 Move X0, X24
	169 Move X1, X25
	170 Move X2, X23
	171 Call 0x3EB2AC0
	172 Move X0, X20
	173 Move X1, X24
	174 Move X2, X23
	175 Call 0x3EB2AC0
	176 Move X8, [X28+40]
	177 NotImplemented "Instruction LDUR not yet implemented."
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Add X31, X29, 0
	180 Move X20, [X31+80]
	181 Move X19, [X31+88]
	182 Move X22, [X31+64]
	183 Move X21, [X31+72]
	184 Move X24, [X31+48]
	185 Move X23, [X31+56]
	186 Move X26, [X31+32]
	187 Move X25, [X31+40]
	188 Move X28, [X31+16]
	189 Move X27, [X31+24]
	190 Move X29, [X31+96]
	191 Move X30, [X31+104]
	192 Return X0
	193 Move X0, 0x1CD9000
	194 Move X0, [X0+1888]
	195 Call 0x1C17D08
	196 Call 0x1C17F10
	197 Move X20, X0
	198 Move X0, 0x1CF9000
	199 Move X0, [X0+1624]
	200 Move X0, 0x1CD9000
	201 Move X0, [X0+1888]
	202 Call 0x1C17D08
	203 Call 0x1C17F10
	204 Move X20, X0
	205 Move X0, 0x1CD9000
	206 Move X0, [X0+1896]
	207 Call 0x1C17D08
	208 Move X1, X0
	209 Move X0, X20
	210 Move X2, X31
	211 Call ArgumentOutOfRangeException..ctor, X0, X1
	212 Move X0, X20
	213 Move X1, X19
	214 Call 0x1C17DEC
	215 Call 0x3EB2B20

Method: Fusion.NetworkString`1<TSize> ToLower()

Disassembly:
	0x02423A04 LDRH W9, [X9]
	0x02423A08 B 0x2423A10
	0x02423A0C MOV X0, X8
	0x02423A10 LDR X10, [X0 + 0xC0]
	0x02423A14 LDR X10, [X10 + 0x80]
	0x02423A18 LDR X22, [X10]
	0x02423A1C TBNZ X9, 0x0, 0x2423A2C
	0x02423A20 MOV X0, X8
	0x02423A24 BL 0x1C5C684
	0x02423A28 MOV X8, X0
	0x02423A2C LDR X8, [X8 + 0xC0]
	0x02423A30 MOV X0, X20
	0x02423A34 LDR X1, [X8 + 0x80]
	0x02423A38 BLR X22
	0x02423A3C MOVI V0.2D, 0x0
	0x02423A40 MOV W2, W0
	0x02423A44 STP V0, V0, [X19]
	0x02423A48 MOV X0, X19
	0x02423A4C MOV X1, X21
	0x02423A50 LDP X20, X19, [X31 + 0x20]
	0x02423A54 LDP X22, X21, [X31 + 0x10]
	0x02423A58 MOV X3, X31
	0x02423A5C LDR X30, [X31], #0x30
	0x02423A60 B 0x1E39484
	0x02423A64 SUB X31, X31, 0x60
	0x02423A68 STP X30, X21, [X31 + 0x40]
	0x02423A6C STP X20, X19, [X31 + 0x50]
	0x02423A70 ADRP X21, 0x1FB6000
	0x02423A74 LDRB W8, [X21 + 0x9D0]
	0x02423A78 MOV X20, X1
	0x02423A7C MOV X19, X0
	0x02423A80 TBNZ X8, 0x0, 0x2423A98
	0x02423A84 ADRP X0, 0x1CF9000
	0x02423A88 LDR X0, [X0 + 0xCD0]
	0x02423A8C BL 0x1C16CF4
	0x02423A90 MOVZ W8, 0x1
	0x02423A94 STRB W8, [X21 + 0x9D0]
	0x02423A98 LDR X8, [X20 + 0x20]
	0x02423A9C ADD X9, X8, 0x135
	0x02423AA0 LDRH W9, [X9]
	0x02423AA4 TBNZ X9, 0x0, 0x2423AC0
	0x02423AA8 MOV X0, X8
	0x02423AAC BL 0x1C5C684
	0x02423AB0 LDR X8, [X20 + 0x20]
	0x02423AB4 ADD X9, X8, 0x135
	0x02423AB8 LDRH W9, [X9]
	0x02423ABC B 0x2423AC4
	0x02423AC0 MOV X0, X8
	0x02423AC4 LDR X10, [X0 + 0xC0]
	0x02423AC8 ADRP X20, 0x1CF9000
	0x02423ACC LDR X10, [X10 + 0xC8]
	0x02423AD0 LDR X21, [X10]
	0x02423AD4 LDR X20, [X20 + 0xCD0]
	0x02423AD8 TBNZ X9, 0x0, 0x2423AE8
	0x02423ADC MOV X0, X8
	0x02423AE0 BL 0x1C5C684
	0x02423AE4 MOV X8, X0
	0x02423AE8 LDR X8, [X8 + 0xC0]
	0x02423AEC MOV X0, X19
	0x02423AF0 LDR X1, [X8 + 0xC8]
	0x02423AF4 ADD X8, X31, 0x0
	0x02423AF8 BLR X21
	0x02423AFC LDP V0, V1, [X31]
	0x02423B00 LDR X0, [X20]
	0x02423B04 ADD X1, X31, 0x0
	0x02423B08 STP V0, V1, [X31 + 0x20]
	0x02423B0C STP V0, V1, [X31]
	0x02423B10 BL 0x1C16E04
	0x02423B14 LDP X20, X19, [X31 + 0x50]
	0x02423B18 LDP X30, X21, [X31 + 0x40]
	0x02423B1C ADD X31, X31, 0x60
	0x02423B20 RET
	0x02423B24 SUB X31, X31, 0x60
	0x02423B28 STP X30, X21, [X31 + 0x40]
	0x02423B2C STP X20, X19, [X31 + 0x50]
	0x02423B30 ADRP X21, 0x1FB6000
	0x02423B34 LDRB W8, [X21 + 0x9D1]
	0x02423B38 MOV X20, X1
	0x02423B3C MOV X19, X0
	0x02423B40 TBNZ X8, 0x0, 0x2423B58
	0x02423B44 ADRP X0, 0x1CF9000
	0x02423B48 LDR X0, [X0 + 0xCD0]
	0x02423B4C BL 0x1C16CF4
	0x02423B50 MOVZ W8, 0x1
	0x02423B54 STRB W8, [X21 + 0x9D1]
	0x02423B58 LDR X8, [X20 + 0x20]
	0x02423B5C ADD X9, X8, 0x135
	0x02423B60 LDRH W9, [X9]
	0x02423B64 TBNZ X9, 0x0, 0x2423B80
	0x02423B68 MOV X0, X8
	0x02423B6C BL 0x1C5C684
	0x02423B70 LDR X8, [X20 + 0x20]
	0x02423B74 ADD X9, X8, 0x135
	0x02423B78 LDRH W9, [X9]
	0x02423B7C B 0x2423B84
	0x02423B80 MOV X0, X8
	0x02423B84 LDR X10, [X0 + 0xC0]
	0x02423B88 ADRP X20, 0x1CF9000
	0x02423B8C LDR X10, [X10 + 0xC8]
	0x02423B90 LDR X21, [X10]
	0x02423B94 LDR X20, [X20 + 0xCD0]
	0x02423B98 TBNZ X9, 0x0, 0x2423BA8
	0x02423B9C MOV X0, X8
	0x02423BA0 BL 0x1C5C684
	0x02423BA4 MOV X8, X0
	0x02423BA8 LDR X8, [X8 + 0xC0]
	0x02423BAC MOV X0, X19
	0x02423BB0 LDR X1, [X8 + 0xC8]
	0x02423BB4 ADD X8, X31, 0x0
	0x02423BB8 BLR X21
	0x02423BBC LDP V0, V1, [X31]
	0x02423BC0 LDR X0, [X20]
	0x02423BC4 ADD X1, X31, 0x0
	0x02423BC8 STP V0, V1, [X31 + 0x20]
	0x02423BCC STP V0, V1, [X31]
	0x02423BD0 BL 0x1C16E04
	0x02423BD4 LDP X20, X19, [X31 + 0x50]
	0x02423BD8 LDP X30, X21, [X31 + 0x40]
	0x02423BDC ADD X31, X31, 0x60
	0x02423BE0 RET
	0x02423BE4 STR X30, [X31 - 0x30]!
	0x02423BE8 STP X22, X21, [X31 + 0x10]
	0x02423BEC STP X20, X19, [X31 + 0x20]
	0x02423BF0 LDR X8, [X2 + 0x20]
	0x02423BF4 MOV X19, X2
	0x02423BF8 MOV W20, W1
	0x02423BFC MOV X21, X0
	0x02423C00 ADD X9, X8, 0x135
	0x02423C04 LDRH W9, [X9]
	0x02423C08 TBNZ X9, 0x0, 0x2423C24
	0x02423C0C MOV X0, X8
	0x02423C10 BL 0x1C5C684
	0x02423C14 LDR X8, [X19 + 0x20]
	0x02423C18 ADD X9, X8, 0x135
	0x02423C1C LDRH W9, [X9]
	0x02423C20 B 0x2423C28
	0x02423C24 MOV X0, X8
	0x02423C28 LDR X10, [X0 + 0xC0]
	0x02423C2C LDR X10, [X10 + 0x68]
	0x02423C30 LDR X22, [X10]
	0x02423C34 TBNZ X9, 0x0, 0x2423C44
	0x02423C38 MOV X0, X8
	0x02423C3C BL 0x1C5C684
	0x02423C40 MOV X8, X0
	0x02423C44 LDR X8, [X8 + 0xC0]
	0x02423C48 MOV X0, X21
	0x02423C4C LDR X1, [X8 + 0x68]
	0x02423C50 BLR X22
	0x02423C54 TBNZ X20, 0x1F, 0x2423C74
	0x02423C58 CMP W0, W20
	0x02423C5C B.LE 0x2423C74
	0x02423C60 MOV W0, W20
	0x02423C64 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Add X29, X31, 0
	013 Subtract X31, X31, 16
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X27+40]
	016 Move X22, X2
	017 Move X19, X1
	018 Move X24, X0
	019 Move [X29-8], X8
	020 Move X25, [X2+32]
	021 Move W8, [X25+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {29}
	026 Move X0, X25
	027 Call 0x1C5D684
	028 Move X25, [X22+32]
	029 Move X0, X25
	030 Move X8, [X0+192]
	031 Move X8, [X8]
	032 Move W20, [X8+252]
	033 Add X8, X31, 0
	034 Add X9, X20, 15
	035 And X9, X9, 0x1FFFFFFFF
	036 Subtract X21, X8, X9
	037 Add X31, X21, 0
	038 Add X8, X31, 0
	039 Subtract X23, X8, X9
	040 Add X31, X23, 0
	041 Move X0, X23
	042 Move W1, W31
	043 Move X2, X20
	044 Call 0x3EB2B10
	045 Move X0, X23
	046 Move W1, W31
	047 Move X2, X20
	048 Call 0x3EB2B10
	049 Move W8, [X25+309]
	050 Move TEMP, X8
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {57}
	054 Move X0, X25
	055 Call 0x1C5D684
	056 Move X25, X0
	057 Move X8, [X25+192]
	058 Move X0, X24
	059 Move X8, [X8]
	060 Move X8, [X8+128]
	061 Add X1, X8, 32
	062 Call 0x1C17D18
	063 Move X8, [X22+32]
	064 Move X25, X0
	065 Add X9, X8, 309
	066 NotImplemented "Instruction LDRH not yet implemented."
	067 Move TEMP, X9
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {76}
	071 Move X0, X8
	072 Call 0x1C5D684
	073 Move X8, [X22+32]
	074 Add X9, X8, 309
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 Move X0, X8
	077 Move X10, [X0+192]
	078 Move X10, [X10+104]
	079 Move X26, [X10]
	080 Move TEMP, X9
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {87}
	084 Move X0, X8
	085 Call 0x1C5D684
	086 Move X8, X0
	087 Move X8, [X8+192]
	088 Move X0, X24
	089 Move X1, [X8+104]
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move X8, [X22+32]
	092 Move W26, W0
	093 Move W9, [X8+309]
	094 Move TEMP, X9
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {101}
	098 Move X0, X8
	099 Call 0x1C5D684
	100 Move X8, X0
	101 Move X8, [X8+192]
	102 Move X0, X23
	103 Move X8, [X8]
	104 Move X8, [X8+128]
	105 Add X1, X8, 32
	106 Call 0x1C17D18
	107 Move X1, X0
	108 Move X0, X25
	109 Move W2, W26
	110 Move X3, X31
	111 Call UTF32Tools.ToLowerInvariant, X0, X1, X2
	112 Move X8, [X22+32]
	113 Add X9, X8, 309
	114 NotImplemented "Instruction LDRH not yet implemented."
	115 Move TEMP, X9
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfEqual {124}
	119 Move X0, X8
	120 Call 0x1C5D684
	121 Move X8, [X22+32]
	122 Add X9, X8, 309
	123 NotImplemented "Instruction LDRH not yet implemented."
	124 Move X0, X8
	125 Move X10, [X0+192]
	126 Move X10, [X10+104]
	127 Move X25, [X10]
	128 Move TEMP, X9
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfEqual {135}
	132 Move X0, X8
	133 Call 0x1C5D684
	134 Move X8, X0
	135 Move X8, [X8+192]
	136 Move X0, X24
	137 Move X1, [X8+104]
	138 NotImplemented "Instruction BLR not yet implemented."
	139 Move X8, [X22+32]
	140 Move W22, W0
	141 Move W9, [X8+309]
	142 Move TEMP, X9
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfEqual {149}
	146 Move X0, X8
	147 Call 0x1C5D684
	148 Move X8, X0
	149 Move X8, [X8+192]
	150 Move W1, 4
	151 Move X8, [X8]
	152 Move X24, [X8+128]
	153 Move X0, X24
	154 Call 0x1C17D14
	155 Move X0, X23
	156 Move X1, X24
	157 Call 0x1C17D18
	158 Move [X0], W22
	159 Move X0, X21
	160 Move X1, X23
	161 Move X2, X20
	162 Call 0x3EB2AC0
	163 Move X0, X19
	164 Move X1, X21
	165 Move X2, X20
	166 Call 0x3EB2AC0
	167 Move X8, [X27+40]
	168 NotImplemented "Instruction LDUR not yet implemented."
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Add X31, X29, 0
	171 Move X20, [X31+80]
	172 Move X19, [X31+88]
	173 Move X22, [X31+64]
	174 Move X21, [X31+72]
	175 Move X24, [X31+48]
	176 Move X23, [X31+56]
	177 Move X26, [X31+32]
	178 Move X25, [X31+40]
	179 Move X27, [X31+16]
	180 Move X29, [X31+96]
	181 Move X30, [X31+104]
	182 Return X0
	183 Call 0x3EB2B20

Method: Fusion.NetworkString`1<TSize> ToUpper()

Disassembly:
	0x02423C68 LDP X22, X21, [X31 + 0x10]
	0x02423C6C LDR X30, [X31], #0x30
	0x02423C70 RET
	0x02423C74 ADRP X0, 0x1CD8000
	0x02423C78 LDR X0, [X0 + 0x760]
	0x02423C7C BL 0x1C16D08
	0x02423C80 BL 0x1C16F10
	0x02423C84 MOV X20, X0
	0x02423C88 ADRP X0, 0x1CDB000
	0x02423C8C LDR X0, [X0 + 0x130]
	0x02423C90 BL 0x1C16D08
	0x02423C94 MOV X1, X0
	0x02423C98 MOV X0, X20
	0x02423C9C MOV X2, X31
	0x02423CA0 BL 0x3316014
	0x02423CA4 MOV X0, X20
	0x02423CA8 MOV X1, X19
	0x02423CAC BL 0x1C16DEC
	0x02423CB0 STR X30, [X31 - 0x30]!
	0x02423CB4 STP X22, X21, [X31 + 0x10]
	0x02423CB8 STP X20, X19, [X31 + 0x20]
	0x02423CBC LDR X8, [X1 + 0x20]
	0x02423CC0 MOV X19, X1
	0x02423CC4 MOV X20, X0
	0x02423CC8 LDRB W9, [X8 + 0x135]
	0x02423CCC TBNZ X9, 0x0, 0x2423CDC
	0x02423CD0 MOV X0, X8
	0x02423CD4 BL 0x1C5C684
	0x02423CD8 MOV X8, X0
	0x02423CDC LDR X8, [X8 + 0xC0]
	0x02423CE0 MOV X0, X20
	0x02423CE4 LDR X8, [X8]
	0x02423CE8 LDR X1, [X8 + 0x80]
	0x02423CEC BL 0x1C16D18
	0x02423CF0 LDR W8, [X0]
	0x02423CF4 TBNZ X8, 0x1F, 0x2423DB8
	0x02423CF8 LDR X0, [X19 + 0x20]
	0x02423CFC LDRB W8, [X0 + 0x135]
	0x02423D00 TBNZ X8, 0x0, 0x2423D08
	0x02423D04 BL 0x1C5C684
	0x02423D08 LDR X8, [X0 + 0xC0]
	0x02423D0C MOV X0, X20
	0x02423D10 LDR X8, [X8]
	0x02423D14 LDR X1, [X8 + 0x80]
	0x02423D18 BL 0x1C16D18
	0x02423D1C LDR X8, [X19 + 0x20]
	0x02423D20 LDR W21, [X0]
	0x02423D24 ADD X9, X8, 0x135
	0x02423D28 LDRH W9, [X9]
	0x02423D2C TBNZ X9, 0x0, 0x2423D48
	0x02423D30 MOV X0, X8
	0x02423D34 BL 0x1C5C684
	0x02423D38 LDR X8, [X19 + 0x20]
	0x02423D3C ADD X9, X8, 0x135
	0x02423D40 LDRH W9, [X9]
	0x02423D44 B 0x2423D4C
	0x02423D48 MOV X0, X8
	0x02423D4C LDR X10, [X0 + 0xC0]
	0x02423D50 LDR X10, [X10 + 0x78]
	0x02423D54 LDR X22, [X10]
	0x02423D58 TBNZ X9, 0x0, 0x2423D68
	0x02423D5C MOV X0, X8
	0x02423D60 BL 0x1C5C684
	0x02423D64 MOV X8, X0
	0x02423D68 LDR X8, [X8 + 0xC0]
	0x02423D6C MOV X0, X20
	0x02423D70 LDR X1, [X8 + 0x78]
	0x02423D74 BLR X22
	0x02423D78 CMP W21, W0
	0x02423D7C B.GT 0x2423DB8
	0x02423D80 LDR X0, [X19 + 0x20]
	0x02423D84 LDRB W8, [X0 + 0x135]
	0x02423D88 TBNZ X8, 0x0, 0x2423D90
	0x02423D8C BL 0x1C5C684
	0x02423D90 LDR X8, [X0 + 0xC0]
	0x02423D94 MOV X0, X20
	0x02423D98 LDR X8, [X8]
	0x02423D9C LDR X1, [X8 + 0x80]
	0x02423DA0 BL 0x1C16D18
	0x02423DA4 LDR W0, [X0]
	0x02423DA8 LDP X20, X19, [X31 + 0x20]
	0x02423DAC LDP X22, X21, [X31 + 0x10]
	0x02423DB0 LDR X30, [X31], #0x30
	0x02423DB4 RET
	0x02423DB8 LDR X0, [X19 + 0x20]
	0x02423DBC BL 0x199B99C
	0x02423DC0 LDR X8, [X0 + 0xC0]
	0x02423DC4 MOV X0, X20
	0x02423DC8 LDR X8, [X8]
	0x02423DCC LDR X1, [X8 + 0x80]
	0x02423DD0 BL 0x1C16D18
	0x02423DD4 LDR W8, [X0]
	0x02423DD8 ADRP X0, 0x1CD0000
	0x02423DDC STR W8, [X31 + 0xC]
	0x02423DE0 LDR X0, [X0 + 0x758]
	0x02423DE4 BL 0x1C16D08
	0x02423DE8 ADD X1, X31, 0xC
	0x02423DEC BL 0x1C16E04
	0x02423DF0 MOV X20, X0
	0x02423DF4 ADRP X0, 0x1CF9000
	0x02423DF8 LDR X0, [X0 + 0xCD8]
	0x02423DFC BL 0x1C16D08
	0x02423E00 MOV X1, X20
	0x02423E04 MOV X2, X31
	0x02423E08 BL 0x321EFD0
	0x02423E0C MOV X20, X0
	0x02423E10 ADRP X0, 0x1CD0000
	0x02423E14 LDR X0, [X0 + 0x5B0]
	0x02423E18 BL 0x1C16D08
	0x02423E1C BL 0x1C16F10
	0x02423E20 MOV X1, X20
	0x02423E24 MOV X2, X31
	0x02423E28 MOV X21, X0
	0x02423E2C BL 0x337DF1C
	0x02423E30 MOV X0, X21
	0x02423E34 MOV X1, X19
	0x02423E38 BL 0x1C16DEC
	0x02423E3C STR X30, [X31 - 0x20]!
	0x02423E40 STP X20, X19, [X31 + 0x10]
	0x02423E44 MOV X19, X1
	0x02423E48 MOV X1, X31
	0x02423E4C MOV X20, X0
	0x02423E50 BL 0x33BDD8C
	0x02423E54 STP X19, X31, [X20 + 0x10]
	0x02423E58 LDP X20, X19, [X31 + 0x10]
	0x02423E5C LDR X30, [X31], #0x20
	0x02423E60 RET
	0x02423E64 LDR X0, [X0 + 0x10]
	0x02423E68 RET
	0x02423E6C LDR X0, [X0 + 0x18]
	0x02423E70 RET
	0x02423E74 LDR X0, [X0 + 0x20]
	0x02423E78 RET
	0x02423E7C MOV X1, X31
	0x02423E80 B 0x33BDD8C
	0x02423E84 STP X30, X21, [X31 - 0x20]!
	0x02423E88 STP X20, X19, [X31 + 0x10]
	0x02423E8C MOV X20, X1
	0x02423E90 MOV X1, X31
	0x02423E94 MOV W19, W2
	0x02423E98 MOV X21, X0
	0x02423E9C BL 0x33BDD8C
	0x02423EA0 STR X20, [X21 + 0x10]
	0x02423EA4 STRB W19, [X21 + 0x28]
	0x02423EA8 LDP X20, X19, [X31 + 0x10]
	0x02423EAC LDP X30, X21, [X31], #0x20
	0x02423EB0 RET
	0x02423EB4 CBZ X0, 0x2423EE0
	0x02423EB8 STP X30, X19, [X31 - 0x10]!
	0x02423EBC MOV X19, X0
	0x02423EC0 LDR X0, [X1 + 0x20]
	0x02423EC4 LDRB W8, [X0 + 0x135]
	0x02423EC8 TBNZ X8, 0x0, 0x2423ED0

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Add X29, X31, 0
	013 Subtract X31, X31, 16
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X27+40]
	016 Move X22, X2
	017 Move X19, X1
	018 Move X24, X0
	019 Move [X29-8], X8
	020 Move X25, [X2+32]
	021 Move W8, [X25+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {29}
	026 Move X0, X25
	027 Call 0x1C5D684
	028 Move X25, [X22+32]
	029 Move X0, X25
	030 Move X8, [X0+192]
	031 Move X8, [X8]
	032 Move W20, [X8+252]
	033 Add X8, X31, 0
	034 Add X9, X20, 15
	035 And X9, X9, 0x1FFFFFFFF
	036 Subtract X21, X8, X9
	037 Add X31, X21, 0
	038 Add X8, X31, 0
	039 Subtract X23, X8, X9
	040 Add X31, X23, 0
	041 Move X0, X23
	042 Move W1, W31
	043 Move X2, X20
	044 Call 0x3EB2B10
	045 Move X0, X23
	046 Move W1, W31
	047 Move X2, X20
	048 Call 0x3EB2B10
	049 Move W8, [X25+309]
	050 Move TEMP, X8
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {57}
	054 Move X0, X25
	055 Call 0x1C5D684
	056 Move X25, X0
	057 Move X8, [X25+192]
	058 Move X0, X24
	059 Move X8, [X8]
	060 Move X8, [X8+128]
	061 Add X1, X8, 32
	062 Call 0x1C17D18
	063 Move X8, [X22+32]
	064 Move X25, X0
	065 Add X9, X8, 309
	066 NotImplemented "Instruction LDRH not yet implemented."
	067 Move TEMP, X9
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {76}
	071 Move X0, X8
	072 Call 0x1C5D684
	073 Move X8, [X22+32]
	074 Add X9, X8, 309
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 Move X0, X8
	077 Move X10, [X0+192]
	078 Move X10, [X10+104]
	079 Move X26, [X10]
	080 Move TEMP, X9
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {87}
	084 Move X0, X8
	085 Call 0x1C5D684
	086 Move X8, X0
	087 Move X8, [X8+192]
	088 Move X0, X24
	089 Move X1, [X8+104]
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move X8, [X22+32]
	092 Move W26, W0
	093 Move W9, [X8+309]
	094 Move TEMP, X9
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {101}
	098 Move X0, X8
	099 Call 0x1C5D684
	100 Move X8, X0
	101 Move X8, [X8+192]
	102 Move X0, X23
	103 Move X8, [X8]
	104 Move X8, [X8+128]
	105 Add X1, X8, 32
	106 Call 0x1C17D18
	107 Move X1, X0
	108 Move X0, X25
	109 Move W2, W26
	110 Move X3, X31
	111 Call UTF32Tools.ToUpperInvariant, X0, X1, X2
	112 Move X8, [X22+32]
	113 Add X9, X8, 309
	114 NotImplemented "Instruction LDRH not yet implemented."
	115 Move TEMP, X9
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfEqual {124}
	119 Move X0, X8
	120 Call 0x1C5D684
	121 Move X8, [X22+32]
	122 Add X9, X8, 309
	123 NotImplemented "Instruction LDRH not yet implemented."
	124 Move X0, X8
	125 Move X10, [X0+192]
	126 Move X10, [X10+104]
	127 Move X25, [X10]
	128 Move TEMP, X9
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfEqual {135}
	132 Move X0, X8
	133 Call 0x1C5D684
	134 Move X8, X0
	135 Move X8, [X8+192]
	136 Move X0, X24
	137 Move X1, [X8+104]
	138 NotImplemented "Instruction BLR not yet implemented."
	139 Move X8, [X22+32]
	140 Move W22, W0
	141 Move W9, [X8+309]
	142 Move TEMP, X9
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfEqual {149}
	146 Move X0, X8
	147 Call 0x1C5D684
	148 Move X8, X0
	149 Move X8, [X8+192]
	150 Move W1, 4
	151 Move X8, [X8]
	152 Move X24, [X8+128]
	153 Move X0, X24
	154 Call 0x1C17D14
	155 Move X0, X23
	156 Move X1, X24
	157 Call 0x1C17D18
	158 Move [X0], W22
	159 Move X0, X21
	160 Move X1, X23
	161 Move X2, X20
	162 Call 0x3EB2AC0
	163 Move X0, X19
	164 Move X1, X21
	165 Move X2, X20
	166 Call 0x3EB2AC0
	167 Move X8, [X27+40]
	168 NotImplemented "Instruction LDUR not yet implemented."
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Add X31, X29, 0
	171 Move X20, [X31+80]
	172 Move X19, [X31+88]
	173 Move X22, [X31+64]
	174 Move X21, [X31+72]
	175 Move X24, [X31+48]
	176 Move X23, [X31+56]
	177 Move X26, [X31+32]
	178 Move X25, [X31+40]
	179 Move X27, [X31+16]
	180 Move X29, [X31+96]
	181 Move X30, [X31+104]
	182 Return X0
	183 Call 0x3EB2B20

Method: System.Int32 GetCharCount()

Disassembly:
	0x02423ECC BL 0x1C5C684
	0x02423ED0 LDRB W8, [X19 + 0x28]
	0x02423ED4 CMP W8, 0x1
	0x02423ED8 CSET W0, EQ
	0x02423EDC LDP X30, X19, [X31], #0x10
	0x02423EE0 RET
	0x02423EE4 CBZ X0, 0x2423F14
	0x02423EE8 STP X30, X19, [X31 - 0x10]!
	0x02423EEC MOV X19, X0
	0x02423EF0 LDR X0, [X1 + 0x20]
	0x02423EF4 LDRB W8, [X0 + 0x135]
	0x02423EF8 TBNZ X8, 0x0, 0x2423F00
	0x02423EFC BL 0x1C5C684
	0x02423F00 LDRB W8, [X19 + 0x28]
	0x02423F04 CMP W8, 0x0
	0x02423F08 CSET W0, EQ
	0x02423F0C LDP X30, X19, [X31], #0x10
	0x02423F10 RET
	0x02423F14 MOVZ W0, 0x1
	0x02423F18 RET
	0x02423F1C LDR X0, [X0 + 0x10]
	0x02423F20 RET
	0x02423F24 STR X1, [X0 + 0x10]
	0x02423F28 RET
	0x02423F2C LDR X0, [X0 + 0x18]
	0x02423F30 RET
	0x02423F34 STR X1, [X0 + 0x18]
	0x02423F38 RET
	0x02423F3C LDR X0, [X0 + 0x20]
	0x02423F40 RET
	0x02423F44 STR X1, [X0 + 0x20]
	0x02423F48 RET
	0x02423F4C LDRB W0, [X0 + 0x28]
	0x02423F50 RET
	0x02423F54 STRB W1, [X0 + 0x28]
	0x02423F58 RET
	0x02423F5C LDRB W8, [X0 + 0x28]
	0x02423F60 CMP W8, 0x0
	0x02423F64 CSET W0, EQ
	0x02423F68 RET
	0x02423F6C LDRB W8, [X0 + 0x28]
	0x02423F70 CMP W8, 0x1
	0x02423F74 CSET W0, EQ
	0x02423F78 RET
	0x02423F7C STP X30, X21, [X31 - 0x20]!
	0x02423F80 STP X20, X19, [X31 + 0x10]
	0x02423F84 LDRB W8, [X0 + 0x28]
	0x02423F88 CBZ W8, 0x2423F9C
	0x02423F8C MOV W0, W31
	0x02423F90 LDP X20, X19, [X31 + 0x10]
	0x02423F94 LDP X30, X21, [X31], #0x20
	0x02423F98 RET
	0x02423F9C LDR X21, [X0 + 0x18]
	0x02423FA0 MOV X20, X0
	0x02423FA4 MOV X19, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X1+32]
	007 Move X22, X1
	008 Move X19, X0
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X8, [X8+192]
	018 Move X0, X19
	019 Move X8, [X8]
	020 Move X8, [X8+128]
	021 Add X1, X8, 32
	022 Call 0x1C17D18
	023 Move X20, X0
	024 Move X0, X31
	025 Call Encoding.get_UTF32
	026 Move X8, [X22+32]
	027 Move X21, X0
	028 Add X9, X8, 309
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 Move TEMP, X9
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {39}
	034 Move X0, X8
	035 Call 0x1C5D684
	036 Move X8, [X22+32]
	037 Add X9, X8, 309
	038 NotImplemented "Instruction LDRH not yet implemented."
	039 Move X0, X8
	040 Move X10, [X0+192]
	041 Move X10, [X10+128]
	042 Move X22, [X10]
	043 Move TEMP, X9
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {50}
	047 Move X0, X8
	048 Call 0x1C5D684
	049 Move X8, X0
	050 Move X8, [X8+192]
	051 Move X0, X19
	052 Move X1, [X8+128]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Compare X21, 0
	055 JumpIfEqual {70}
	056 Move X8, [X21]
	057 Move W2, W0
	058 ShiftRight W2, 30
	059 And W2, W2, 0x1FFFFFFF
	060 Move X0, X21
	061 Move X1, X20
	062 Move X4, [X8+696]
	063 Move X3, [X8+704]
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 CallNoReturn X4
	070 Call 0x1C17F20

Method: System.Int32 Compare(System.String s)

Disassembly:
	0x02423FA8 CBZ X21, 0x2423FD0
	0x02423FAC LDR X8, [X19 + 0x20]
	0x02423FB0 LDR X8, [X8 + 0xC0]
	0x02423FB4 LDR X8, [X8 + 0x40]
	0x02423FB8 LDR X0, [X8 + 0x20]
	0x02423FBC LDRB W8, [X0 + 0x135]
	0x02423FC0 TBNZ X8, 0x0, 0x2423FC8
	0x02423FC4 BL 0x1C5C684
	0x02423FC8 LDRB W8, [X21 + 0x28]
	0x02423FCC CBNZ W8, 0x2423F8C
	0x02423FD0 LDR X20, [X20 + 0x20]
	0x02423FD4 CBZ X20, 0x2424004
	0x02423FD8 LDR X8, [X19 + 0x20]
	0x02423FDC LDR X8, [X8 + 0xC0]
	0x02423FE0 LDR X8, [X8 + 0x40]
	0x02423FE4 LDR X0, [X8 + 0x20]
	0x02423FE8 LDRB W8, [X0 + 0x135]
	0x02423FEC TBNZ X8, 0x0, 0x2423FF4
	0x02423FF0 BL 0x1C5C684
	0x02423FF4 LDRB W8, [X20 + 0x28]
	0x02423FF8 CMP W8, 0x0
	0x02423FFC CSET W0, EQ
	0x02424000 B 0x2423F90
	0x02424004 MOVZ W0, 0x1
	0x02424008 B 0x2423F90
	0x0242400C STP X30, X21, [X31 - 0x20]!
	0x02424010 STP X20, X19, [X31 + 0x10]
	0x02424014 LDR X21, [X0 + 0x18]
	0x02424018 CBZ X21, 0x2424080
	0x0242401C LDR X8, [X1 + 0x20]
	0x02424020 MOV X20, X0
	0x02424024 MOV X19, X1
	0x02424028 LDR X8, [X8 + 0xC0]
	0x0242402C LDR X8, [X8 + 0x58]
	0x02424030 LDR X0, [X8 + 0x20]
	0x02424034 LDRB W8, [X0 + 0x135]
	0x02424038 TBNZ X8, 0x0, 0x2424040
	0x0242403C BL 0x1C5C684
	0x02424040 LDRB W8, [X21 + 0x28]
	0x02424044 CMP W8, 0x1
	0x02424048 B.NE 0x2424080
	0x0242404C LDR X20, [X20 + 0x20]
	0x02424050 CBZ X20, 0x2424080
	0x02424054 LDR X8, [X19 + 0x20]
	0x02424058 LDR X8, [X8 + 0xC0]
	0x0242405C LDR X8, [X8 + 0x58]
	0x02424060 LDR X0, [X8 + 0x20]
	0x02424064 LDRB W8, [X0 + 0x135]
	0x02424068 TBNZ X8, 0x0, 0x2424070
	0x0242406C BL 0x1C5C684
	0x02424070 LDRB W8, [X20 + 0x28]
	0x02424074 CMP W8, 0x1
	0x02424078 CSET W0, EQ
	0x0242407C B 0x2424084
	0x02424080 MOV W0, W31
	0x02424084 LDP X20, X19, [X31 + 0x10]
	0x02424088 LDP X30, X21, [X31], #0x20
	0x0242408C RET
	0x02424090 STRB W31, [X0 + 0x28]
	0x02424094 RET
	0x02424098 MOVZ W8, 0x1
	0x0242409C STRB W8, [X0 + 0x28]
	0x024240A0 RET
	0x024240A4 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X2
	007 Compare X1, 0
	008 JumpIfEqual {64}
	009 Move X20, X0
	010 Move X0, [X21+32]
	011 Move X19, X1
	012 Move W8, [X0+309]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {18}
	017 Call 0x1C5D684
	018 Move X8, [X0+192]
	019 Move X0, X20
	020 Move X8, [X8]
	021 Move X8, [X8+128]
	022 Add X1, X8, 32
	023 Call 0x1C17D18
	024 Move X8, [X21+32]
	025 Move X22, X0
	026 Add X9, X8, 309
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move TEMP, X9
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {37}
	032 Move X0, X8
	033 Call 0x1C5D684
	034 Move X8, [X21+32]
	035 Add X9, X8, 309
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Move X0, X8
	038 Move X10, [X0+192]
	039 Move X10, [X10+104]
	040 Move X21, [X10]
	041 Move TEMP, X9
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {48}
	045 Move X0, X8
	046 Call 0x1C5D684
	047 Move X8, X0
	048 Move X8, [X8+192]
	049 Move X0, X20
	050 Move X1, [X8+104]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move W2, W0
	053 Move X0, X19
	054 Move X1, X22
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move W3, W31
	060 Move X4, X31
	061 Move X30, [X31+48]
	062 Call UTF32Tools.CompareOrdinal, X0, X1, X2, X3
	063 Return X0
	064 Move X0, 0x1CD5000
	065 Move X0, [X0+1320]
	066 Call 0x1C17D08
	067 Call 0x1C17F10
	068 Move X19, X0
	069 Move X0, 0x1CF9000
	070 Move X0, [X0+3264]
	071 Call 0x1C17D08
	072 Move X1, X0
	073 Move X0, X19
	074 Move X2, X31
	075 Call ArgumentNullException..ctor, X0, X1
	076 Move X0, X19
	077 Move X1, X21
	078 Call 0x1C17DEC

Method: System.Int32 Compare(Fusion.NetworkString`1<TSize> s)

Disassembly:
	0x024240A8 STP X20, X19, [X31 + 0x10]
	0x024240AC CBZ X2, 0x242410C
	0x024240B0 LDR X21, [X2 + 0x18]
	0x024240B4 LDR X20, [X0 + 0x18]
	0x024240B8 MOV X19, X1
	0x024240BC CBZ X21, 0x24240F8
	0x024240C0 LDR X8, [X3 + 0x20]
	0x024240C4 LDR X8, [X8 + 0xC0]
	0x024240C8 LDR X8, [X8 + 0x58]
	0x024240CC LDR X0, [X8 + 0x20]
	0x024240D0 LDRB W8, [X0 + 0x135]
	0x024240D4 TBNZ X8, 0x0, 0x24240DC
	0x024240D8 BL 0x1C5C684
	0x024240DC LDRB W8, [X21 + 0x28]
	0x024240E0 CMP W8, 0x1
	0x024240E4 B.NE 0x24240F8
	0x024240E8 CMP X20, X19
	0x024240EC MOVZ W8, 0x2
	0x024240F0 CINC W0, W8, EQ
	0x024240F4 B 0x2424100
	0x024240F8 CMP X20, X19
	0x024240FC CSET W0, NE
	0x02424100 LDP X20, X19, [X31 + 0x10]
	0x02424104 LDP X30, X21, [X31], #0x20
	0x02424108 RET
	0x0242410C BL 0x1C16F20
	0x02424110 MOV X8, X0
	0x02424114 LDR X0, [X0 + 0x18]
	0x02424118 CMP X0, X1
	0x0242411C B.EQ 0x2424124
	0x02424120 RET
	0x02424124 LDR X0, [X8 + 0x20]
	0x02424128 RET
	0x0242412C STR X30, [X31 - 0x10]!
	0x02424130 LDR X8, [X0 + 0x18]
	0x02424134 MOVZ W9, 0x1
	0x02424138 STRB W9, [X0 + 0x28]
	0x0242413C CBZ X8, 0x2424158
	0x02424140 STRB W31, [X8 + 0x28]
	0x02424144 LDR X8, [X0 + 0x20]
	0x02424148 CBZ X8, 0x2424158
	0x0242414C STRB W31, [X8 + 0x28]
	0x02424150 LDR X30, [X31], #0x10
	0x02424154 RET
	0x02424158 BL 0x1C16F20
	0x0242415C STR X30, [X31 - 0x10]!
	0x02424160 AND W8, W1, 0xFF
	0x02424164 CMP W8, 0x3
	0x02424168 B.HI 0x24241D0
	0x0242416C ADRP X9, 0xFFFFFFFFFE709000
	0x02424170 AND X8, X1, 0xFF
	0x02424174 ADD X9, X9, 0xCF6
	0x02424178 ADR X10, 0x10
	0x0242417C LDRB W11, [X9, X8, LSL]
	0x02424180 ADD X10, X10, X11, 0x2, LSL
	0x02424184 BR X10
	0x02424188 LDR X8, [X0 + 0x20]
	0x0242418C CBZ X8, 0x2424208
	0x02424190 LDR X9, [X8 + 0x20]
	0x02424194 CBZ X9, 0x2424208
	0x02424198 STRB W31, [X9 + 0x28]
	0x0242419C LDR X9, [X8 + 0x18]
	0x024241A0 STR X9, [X0 + 0x20]
	0x024241A4 STR X0, [X8 + 0x18]
	0x024241A8 B 0x24241D4
	0x024241AC LDR X8, [X0 + 0x18]
	0x024241B0 CBZ X8, 0x2424208
	0x024241B4 LDR X9, [X8 + 0x18]
	0x024241B8 CBZ X9, 0x2424208
	0x024241BC STRB W31, [X9 + 0x28]
	0x024241C0 LDR X9, [X8 + 0x20]
	0x024241C4 STR X9, [X0 + 0x18]
	0x024241C8 STR X0, [X8 + 0x20]
	0x024241CC B 0x24241D4
	0x024241D0 MOV X8, X31
	0x024241D4 MOV X0, X8
	0x024241D8 LDR X30, [X31], #0x10
	0x024241DC RET
	0x024241E0 LDR X8, [X2 + 0x20]
	0x024241E4 LDR X8, [X8 + 0xC0]
	0x024241E8 LDR X1, [X8 + 0x88]
	0x024241EC LDR X30, [X31], #0x10
	0x024241F0 B 0x2424234
	0x024241F4 LDR X8, [X2 + 0x20]
	0x024241F8 LDR X8, [X8 + 0xC0]
	0x024241FC LDR X1, [X8 + 0x80]
	0x02424200 LDR X30, [X31], #0x10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X2+32]
	008 Move X20, X2
	009 Move X19, X1
	010 Move X22, X0
	011 Move W9, [X8+309]
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X8
	017 Call 0x1C5D684
	018 Move X8, X0
	019 Move X8, [X8+192]
	020 Move X0, X22
	021 Move X8, [X8]
	022 Move X8, [X8+128]
	023 Add X1, X8, 32
	024 Call 0x1C17D18
	025 Move X8, [X20+32]
	026 Move X21, X0
	027 Add X9, X8, 309
	028 NotImplemented "Instruction LDRH not yet implemented."
	029 Move TEMP, X9
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {38}
	033 Move X0, X8
	034 Call 0x1C5D684
	035 Move X8, [X20+32]
	036 Add X9, X8, 309
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Move X0, X8
	039 Move X10, [X0+192]
	040 Move X10, [X10+104]
	041 Move X23, [X10]
	042 Move TEMP, X9
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {49}
	046 Move X0, X8
	047 Call 0x1C5D684
	048 Move X8, X0
	049 Move X8, [X8+192]
	050 Move X0, X22
	051 Move X1, [X8+104]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X8, [X20+32]
	054 Move W22, W0
	055 Add X9, X8, 309
	056 NotImplemented "Instruction LDRH not yet implemented."
	057 Move TEMP, X9
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {66}
	061 Move X0, X8
	062 Call 0x1C5D684
	063 Move X8, [X20+32]
	064 Add X9, X8, 309
	065 NotImplemented "Instruction LDRH not yet implemented."
	066 Move X0, X8
	067 Move X10, [X0+192]
	068 Move X10, [X10+104]
	069 Move X23, [X10]
	070 Move TEMP, X9
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {77}
	074 Move X0, X8
	075 Call 0x1C5D684
	076 Move X8, X0
	077 Move X8, [X8+192]
	078 Move X0, X19
	079 Move X1, [X8+104]
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move X8, [X20+32]
	082 Move W20, W0
	083 Move W9, [X8+309]
	084 Move TEMP, X9
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfEqual {91}
	088 Move X0, X8
	089 Call 0x1C5D684
	090 Move X8, X0
	091 Move X8, [X8+192]
	092 Move X0, X19
	093 Move X8, [X8]
	094 Move X8, [X8+128]
	095 Add X1, X8, 32
	096 Call 0x1C17D18
	097 Move X2, X0
	098 Move X0, X21
	099 Move W1, W22
	100 Move W3, W20
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 Move W4, W31
	106 Move X5, X31
	107 Move X30, [X31+48]
	108 Move X23, [X31+56]
	109 Call UTF32Tools.CompareOrdinal, X0, X1, X2, X3, X4
	110 Return X0

Method: System.Int32 Compare(ref Fusion.NetworkString`1<TSize> s)

Disassembly:
	0x02424204 B 0x2424298
	0x02424208 BL 0x1C16F20
	0x0242420C STR X30, [X31 - 0x10]!
	0x02424210 LDR X8, [X0 + 0x20]
	0x02424214 CBZ X8, 0x2424230
	0x02424218 LDR X9, [X8 + 0x18]
	0x0242421C STR X9, [X0 + 0x20]
	0x02424220 STR X0, [X8 + 0x18]
	0x02424224 MOV X0, X8
	0x02424228 LDR X30, [X31], #0x10
	0x0242422C RET
	0x02424230 BL 0x1C16F20
	0x02424234 STR X30, [X31 - 0x10]!
	0x02424238 LDR X9, [X0 + 0x18]
	0x0242423C CBZ X9, 0x242426C
	0x02424240 LDR X8, [X9 + 0x20]
	0x02424244 CBZ X8, 0x242426C
	0x02424248 LDR X10, [X8 + 0x20]
	0x0242424C STR X10, [X0 + 0x18]
	0x02424250 LDR X10, [X8 + 0x18]
	0x02424254 STR X0, [X8 + 0x20]
	0x02424258 MOV X0, X8
	0x0242425C STR X10, [X9 + 0x20]
	0x02424260 STR X9, [X8 + 0x18]
	0x02424264 LDR X30, [X31], #0x10
	0x02424268 RET
	0x0242426C BL 0x1C16F20
	0x02424270 STR X30, [X31 - 0x10]!
	0x02424274 LDR X8, [X0 + 0x18]
	0x02424278 CBZ X8, 0x2424294
	0x0242427C LDR X9, [X8 + 0x20]
	0x02424280 STR X9, [X0 + 0x18]
	0x02424284 STR X0, [X8 + 0x20]
	0x02424288 MOV X0, X8
	0x0242428C LDR X30, [X31], #0x10
	0x02424290 RET
	0x02424294 BL 0x1C16F20
	0x02424298 STR X30, [X31 - 0x10]!
	0x0242429C LDR X9, [X0 + 0x20]
	0x024242A0 CBZ X9, 0x24242D0
	0x024242A4 LDR X8, [X9 + 0x18]
	0x024242A8 CBZ X8, 0x24242D0
	0x024242AC LDR X10, [X8 + 0x18]
	0x024242B0 STR X10, [X0 + 0x20]
	0x024242B4 LDR X10, [X8 + 0x20]
	0x024242B8 STR X0, [X8 + 0x18]
	0x024242BC MOV X0, X8
	0x024242C0 STR X10, [X9 + 0x18]
	0x024242C4 STR X9, [X8 + 0x20]
	0x024242C8 LDR X30, [X31], #0x10
	0x024242CC RET
	0x024242D0 BL 0x1C16F20
	0x024242D4 STR X30, [X31 - 0x10]!
	0x024242D8 LDR X9, [X0 + 0x18]
	0x024242DC STRB W31, [X0 + 0x28]
	0x024242E0 CBZ X9, 0x2424300
	0x024242E4 MOVZ W8, 0x1
	0x024242E8 STRB W8, [X9 + 0x28]
	0x024242EC LDR X9, [X0 + 0x20]
	0x024242F0 CBZ X9, 0x2424300
	0x024242F4 STRB W8, [X9 + 0x28]
	0x024242F8 LDR X30, [X31], #0x10
	0x024242FC RET
	0x02424300 BL 0x1C16F20
	0x02424304 LDR X8, [X0 + 0x18]
	0x02424308 MOVZ W9, 0x20
	0x0242430C CMP X8, X1
	0x02424310 MOVZ W8, 0x18
	0x02424314 CSEL X8, X8, X9, EQ
	0x02424318 STR X2, [X0, X8, LSL]
	0x0242431C RET
	0x02424320 STP X29, X30, [X31 - 0x50]!
	0x02424324 STR X25, [X31 + 0x10]
	0x02424328 STP X24, X23, [X31 + 0x20]
	0x0242432C STP X22, X21, [X31 + 0x30]
	0x02424330 STP X20, X19, [X31 + 0x40]
	0x02424334 ADD X29, X31, 0x0
	0x02424338 SUB X31, X31, 0x10
	0x0242433C MRS X24, 0xC000
	0x02424340 LDR X8, [X24 + 0x28]
	0x02424344 MOV X19, X2
	0x02424348 MOV X20, X1
	0x0242434C MOV X22, X0
	0x02424350 STUR X8, [X29 - 0x8]
	0x02424354 STUR X1, [X29 - 0x10]
	0x02424358 LDR X8, [X2 + 0x20]
	0x0242435C LDR X8, [X8 + 0xC0]
	0x02424360 LDR X8, [X8]
	0x02424364 LDR W21, [X8 + 0xFC]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X2+32]
	009 Move X21, X2
	010 Move X19, X1
	011 Move X23, X0
	012 Move W9, [X8+309]
	013 Move TEMP, X9
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {20}
	017 Move X0, X8
	018 Call 0x1C5D684
	019 Move X8, X0
	020 Move X8, [X8+192]
	021 Move X0, X23
	022 Move X8, [X8]
	023 Move X8, [X8+128]
	024 Add X1, X8, 32
	025 Call 0x1C17D18
	026 Move X8, [X21+32]
	027 Move X20, X0
	028 Move W9, [X8+309]
	029 Move TEMP, X9
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {36}
	033 Move X0, X8
	034 Call 0x1C5D684
	035 Move X8, X0
	036 Move X8, [X8+192]
	037 Move X0, X19
	038 Move X8, [X8]
	039 Move X8, [X8+128]
	040 Add X1, X8, 32
	041 Call 0x1C17D18
	042 Move X8, [X21+32]
	043 Move X22, X0
	044 Add X9, X8, 309
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Move TEMP, X9
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {55}
	050 Move X0, X8
	051 Call 0x1C5D684
	052 Move X8, [X21+32]
	053 Add X9, X8, 309
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Move X0, X8
	056 Move X10, [X0+192]
	057 Move X10, [X10+104]
	058 Move X24, [X10]
	059 Move TEMP, X9
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {66}
	063 Move X0, X8
	064 Call 0x1C5D684
	065 Move X8, X0
	066 Move X8, [X8+192]
	067 Move X0, X23
	068 Move X1, [X8+104]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X8, [X21+32]
	071 Move W23, W0
	072 Add X9, X8, 309
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Move TEMP, X9
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {83}
	078 Move X0, X8
	079 Call 0x1C5D684
	080 Move X8, [X21+32]
	081 Add X9, X8, 309
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Move X0, X8
	084 Move X10, [X0+192]
	085 Move X10, [X10+104]
	086 Move X21, [X10]
	087 Move TEMP, X9
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {94}
	091 Move X0, X8
	092 Call 0x1C5D684
	093 Move X8, X0
	094 Move X8, [X8+192]
	095 Move X0, X19
	096 Move X1, [X8+104]
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move W3, W0
	099 Move X0, X20
	100 Move W1, W23
	101 Move X2, X22
	102 Move X20, [X31+48]
	103 Move X19, [X31+56]
	104 Move X22, [X31+32]
	105 Move X21, [X31+40]
	106 Move X24, [X31+16]
	107 Move X23, [X31+24]
	108 Move W4, W31
	109 Move X5, X31
	110 Move X30, [X31+64]
	111 Call UTF32Tools.CompareOrdinal, X0, X1, X2, X3, X4
	112 Return X0

Method: System.Int32 Compare(Fusion.NetworkString`1<TOtherSize> other)

Disassembly:
	0x0213482C CBZ X22, 0x2134938
	0x02134830 STR X24, [X22 + 0x10]
	0x02134834 STR X23, [X22 + 0x20]
	0x02134838 LDR X8, [X20 + 0x38]
	0x0213483C LDR X0, [X8 + 0x20]
	0x02134840 LDRB W8, [X0 + 0x135]
	0x02134844 TBNZ X8, 0x0, 0x213484C
	0x02134848 BL 0x1C5C684
	0x0213484C BL 0x1C16F10
	0x02134850 LDR X8, [X20 + 0x38]
	0x02134854 MOV X23, X0
	0x02134858 LDR X1, [X8 + 0x28]
	0x0213485C BL 0x24DFE84
	0x02134860 STR X23, [X22 + 0x18]
	0x02134864 CBZ X23, 0x2134938
	0x02134868 LDR X8, [X20 + 0x38]
	0x0213486C LDR X1, [X21 + 0x48]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {14}
	010 Move X0, X2
	011 Move X21, X2
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X2, [X8+8]
	015 Move X0, X20
	016 Move X1, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X3, [X2]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X3

Method: System.Int32 Compare(ref Fusion.NetworkString`1<TOtherSize> other)

Disassembly:
	0x02134870 MOV X0, X23
	0x02134874 LDR X2, [X8 + 0x30]
	0x02134878 BL 0x24E0E8C
	0x0213487C LDR X8, [X20 + 0x20]
	0x02134880 LDR X8, [X8 + 0xC0]
	0x02134884 LDR X0, [X8 + 0x20]
	0x02134888 LDRB W8, [X0 + 0x135]
	0x0213488C TBNZ X8, 0x0, 0x2134894
	0x02134890 BL 0x1C5C684
	0x02134894 BL 0x1C16F10
	0x02134898 LDR X8, [X20 + 0x20]
	0x0213489C LDR X9, [X20 + 0x38]
	0x021348A0 MOV X1, X22
	0x021348A4 MOV X23, X0
	0x021348A8 LDR X8, [X8 + 0xC0]
	0x021348AC LDR X2, [X9 + 0x40]
	0x021348B0 LDR X3, [X8 + 0x28]
	0x021348B4 BL 0x2A6B948
	0x021348B8 ADRP X8, 0x1FC2000
	0x021348BC LDR X8, [X8 + 0x2C8]
	0x021348C0 LDR X0, [X8]
	0x021348C4 BL 0x1C16F10
	0x021348C8 LDR X8, [X20 + 0x38]
	0x021348CC MOV X1, X22
	0x021348D0 MOV X3, X31
	0x021348D4 MOV X24, X0
	0x021348D8 LDR X2, [X8 + 0x48]
	0x021348DC BL 0x2A6B948
	0x021348E0 LDR X8, [X20 + 0x20]
	0x021348E4 LDR X1, [X22 + 0x18]
	0x021348E8 MOV X0, X21
	0x021348EC MOV X2, X23
	0x021348F0 LDR X8, [X8 + 0xC0]
	0x021348F4 MOV X3, X24
	0x021348F8 LDR X4, [X8 + 0x138]
	0x021348FC BL 0x24E1534
	0x02134900 CBZ X19, 0x2134920
	0x02134904 LDR X8, [X20 + 0x20]
	0x02134908 MOV X0, X21
	0x0213490C MOV X1, X21
	0x02134910 MOV X2, X19
	0x02134914 LDR X8, [X8 + 0xC0]
	0x02134918 LDR X3, [X8 + 0x148]
	0x0213491C BL 0x24E15C4
	0x02134920 LDR X0, [X22 + 0x18]
	0x02134924 LDP X20, X19, [X31 + 0x30]
	0x02134928 LDP X22, X21, [X31 + 0x20]
	0x0213492C LDP X24, X23, [X31 + 0x10]
	0x02134930 LDR X30, [X31], #0x40
	0x02134934 RET
	0x02134938 BL 0x1C16F20
	0x0213493C STP X30, X23, [X31 - 0x30]!
	0x02134940 STP X22, X21, [X31 + 0x10]
	0x02134944 STP X20, X19, [X31 + 0x20]
	0x02134948 LDR X8, [X2 + 0x38]
	0x0213494C MOV X20, X2
	0x02134950 MOV X19, X1
	0x02134954 MOV X21, X0
	0x02134958 CBNZ X8, 0x2134988
	0x0213495C ADRP X0, 0x1FC2000
	0x02134960 LDR X0, [X0 + 0x2C8]
	0x02134964 BL 0x1C16CF4
	0x02134968 ADRP X0, 0x1FE7000
	0x0213496C LDR X0, [X0 + 0x6C8]
	0x02134970 BL 0x1C16CF4
	0x02134974 LDR X8, [X20 + 0x38]
	0x02134978 CBNZ X8, 0x2134988
	0x0213497C MOV X0, X20
	0x02134980 BL 0x1C5C6E0
	0x02134984 LDR X8, [X20 + 0x38]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X2+56]
	009 Move X20, X2
	010 Move X19, X1
	011 Move X21, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {17}
	014 Move X0, X20
	015 Call 0x1C5D6E0
	016 Move X8, [X20+56]
	017 Move X8, [X8+8]
	018 Move X0, X19
	019 Move X8, [X8+128]
	020 Add X1, X8, 32
	021 Call 0x1C17D18
	022 Move X8, [X20+32]
	023 Move X22, X0
	024 Move W9, [X8+309]
	025 Move TEMP, X9
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {32}
	029 Move X0, X8
	030 Call 0x1C5D684
	031 Move X8, X0
	032 Move X8, [X8+192]
	033 Move X0, X21
	034 Move X8, [X8]
	035 Move X8, [X8+128]
	036 Add X1, X8, 32
	037 Call 0x1C17D18
	038 Move X8, [X20+32]
	039 Move X23, X0
	040 Add X9, X8, 309
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move TEMP, X9
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {51}
	046 Move X0, X8
	047 Call 0x1C5D684
	048 Move X8, [X20+32]
	049 Add X9, X8, 309
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 Move X0, X8
	052 Move X10, [X0+192]
	053 Move X10, [X10+104]
	054 Move X24, [X10]
	055 Move TEMP, X9
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {62}
	059 Move X0, X8
	060 Call 0x1C5D684
	061 Move X8, X0
	062 Move X8, [X8+192]
	063 Move X0, X21
	064 Move X1, [X8+104]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X8, [X20+56]
	067 Move W20, W0
	068 Move X0, X19
	069 Move X1, [X8+24]
	070 Move X8, [X1]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move W3, W0
	073 Move X0, X23
	074 Move W1, W20
	075 Move X2, X22
	076 Move X20, [X31+48]
	077 Move X19, [X31+56]
	078 Move X22, [X31+32]
	079 Move X21, [X31+40]
	080 Move X24, [X31+16]
	081 Move X23, [X31+24]
	082 Move W4, W31
	083 Move X5, X31
	084 Move X30, [X31+64]
	085 Call UTF32Tools.CompareOrdinal, X0, X1, X2, X3, X4
	086 Return X0

Method: System.Boolean Equals(System.String s)

Disassembly:
	0x02424368 ADD X8, X31, 0x0
	0x0242436C ADD X9, X21, 0xF
	0x02424370 AND X9, X9, 0x1FFFFFFFF
	0x02424374 SUB X23, X8, X9
	0x02424378 ADD X31, X23, 0x0
	0x0242437C MOV X1, X31
	0x02424380 BL 0x33BDD8C
	0x02424384 LDR X25, [X19 + 0x20]
	0x02424388 MOV X0, X23
	0x0242438C MOV X2, X21
	0x02424390 LDR X8, [X25 + 0xC0]
	0x02424394 LDR X8, [X8]
	0x02424398 LDR W8, [X8 + 0x28]
	0x0242439C CMP W8, 0x0
	0x024243A0 SUB X8, X29, 0x10
	0x024243A4 CSEL X1, X20, X8, LT
	0x024243A8 BL 0x3EB1AC0
	0x024243AC LDR X8, [X25 + 0xC0]
	0x024243B0 MOV X0, X22
	0x024243B4 MOV X2, X23
	0x024243B8 MOV W3, W21
	0x024243BC LDR X8, [X8 + 0x8]
	0x024243C0 LDR X1, [X8 + 0x80]
	0x024243C4 BL 0x1C16D1C
	0x024243C8 LDR X8, [X19 + 0x20]
	0x024243CC MOVZ W1, 0x8
	0x024243D0 LDR X8, [X8 + 0xC0]
	0x024243D4 LDR X8, [X8 + 0x8]
	0x024243D8 LDR X8, [X8 + 0x80]
	0x024243DC ADD X19, X8, 0x20
	0x024243E0 MOV X0, X19
	0x024243E4 BL 0x1C16D14
	0x024243E8 MOV X0, X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X19, X1
	007 Move X20, X0
	008 Add X9, X8, 309
	009 NotImplemented "Instruction LDRH not yet implemented."
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {20}
	014 Move X0, X8
	015 Move X21, X2
	016 Call 0x1C5D684
	017 Move X8, [X21+32]
	018 Add X9, X8, 309
	019 NotImplemented "Instruction LDRH not yet implemented."
	020 Move X0, X8
	021 Move X10, [X0+192]
	022 Move X10, [X10+96]
	023 Move X21, [X10]
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {31}
	028 Move X0, X8
	029 Call 0x1C5D684
	030 Move X8, X0
	031 Move X8, [X8+192]
	032 Move X0, X20
	033 Move X1, X19
	034 Move X2, [X8+96]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSET not yet implemented."
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x024243EC MOV X1, X19
	0x024243F0 BL 0x1C16D18
	0x024243F4 STR X31, [X0]
	0x024243F8 LDR X8, [X24 + 0x28]
	0x024243FC LDUR X9, [X29 - 0x8]
	0x02424400 CMP X8, X9
	0x02424404 B.NE 0x2424424
	0x02424408 ADD X31, X29, 0x0
	0x0242440C LDP X20, X19, [X31 + 0x40]
	0x02424410 LDP X22, X21, [X31 + 0x30]
	0x02424414 LDP X24, X23, [X31 + 0x20]
	0x02424418 LDR X25, [X31 + 0x10]
	0x0242441C LDP X29, X30, [X31], #0x50
	0x02424420 RET
	0x02424424 BL 0x3EB1B20
	0x02424428 STP X29, X30, [X31 - 0x50]!
	0x0242442C STP X26, X25, [X31 + 0x10]
	0x02424430 STP X24, X23, [X31 + 0x20]
	0x02424434 STP X22, X21, [X31 + 0x30]
	0x02424438 STP X20, X19, [X31 + 0x40]
	0x0242443C ADD X29, X31, 0x0
	0x02424440 SUB X31, X31, 0x20
	0x02424444 MRS X25, 0xC000
	0x02424448 LDR X8, [X25 + 0x28]
	0x0242444C MOV X20, X3
	0x02424450 MOV W19, W2
	0x02424454 MOV X21, X0
	0x02424458 STUR X8, [X29 - 0x8]
	0x0242445C STUR X1, [X29 - 0x18]
	0x02424460 LDR X8, [X3 + 0x20]
	0x02424464 MOV X23, X1
	0x02424468 LDR X8, [X8 + 0xC0]
	0x0242446C LDR X8, [X8]
	0x02424470 LDR W24, [X8 + 0xFC]
	0x02424474 ADD X8, X31, 0x0
	0x02424478 ADD X9, X24, 0xF
	0x0242447C AND X9, X9, 0x1FFFFFFFF
	0x02424480 SUB X22, X8, X9
	0x02424484 ADD X31, X22, 0x0
	0x02424488 MOV X1, X31
	0x0242448C BL 0x33BDD8C
	0x02424490 LDR X26, [X20 + 0x20]
	0x02424494 MOV X0, X22
	0x02424498 MOV X2, X24
	0x0242449C LDR X8, [X26 + 0xC0]
	0x024244A0 LDR X8, [X8]
	0x024244A4 LDR W8, [X8 + 0x28]
	0x024244A8 CMP W8, 0x0
	0x024244AC SUB X8, X29, 0x18
	0x024244B0 CSEL X1, X23, X8, LT
	0x024244B4 BL 0x3EB1AC0
	0x024244B8 LDR X8, [X26 + 0xC0]
	0x024244BC LDP X9, X1, [X8]
	0x024244C0 LDR W8, [X9 + 0x28]
	0x024244C4 LDR X0, [X1]
	0x024244C8 TBNZ X8, 0x1F, 0x24244D0
	0x024244CC LDR X22, [X22]
	0x024244D0 STUR X22, [X29 - 0x10]
	0x024244D4 LDR X8, [X1 + 0x10]
	0x024244D8 SUB X3, X29, 0x10
	0x024244DC MOV X2, X21
	0x024244E0 MOV X4, X22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1FB6000
	008 Move X23, 0x1CF9000
	009 Move W8, [X22+2511]
	010 Move X23, [X23+3272]
	011 Move X21, X2
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x1CF9000
	019 Move X0, [X0+3272]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2511], W8
	023 Move X1, [X23]
	024 Move X0, X20
	025 Call 0x1C17E00
	026 Compare X0, 0
	027 JumpIfEqual {52}
	028 Move X20, X0
	029 Move X0, [X21+32]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Move X9, [X0+192]
	037 Move X8, [X20]
	038 Move X21, [X9+184]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Move X1, [X21+32]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Compare X9, 0
	043 JumpIfEqual {50}
	044 Move X10, [X8+176]
	045 Add X10, X10, 8
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract X9, X9, 1
	049 Add X10, X10, 16
	050 Move X0, X20
	051 Call 0x1C5D788
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X30, [X31+48]
	057 Move X23, [X31+56]
	058 Return X0
	059 Move W9, [X10]
	060 Add W9, W9, W2
	061 Add X8, X8, W9
	062 Add X0, X8, 312
	063 Move X0, [X0+8]
	064 Move X1, X21
	065 Call 0x1C17DF8
	066 Move X2, X0
	067 Move X3, [X0+8]
	068 Move X0, X20
	069 Move X1, X19
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Move X23, [X31+56]
	076 CallNoReturn X3

Method: System.Boolean Equals(Fusion.NetworkString`1<TSize> other)

Disassembly:
	0x024244E4 BLR X8
	0x024244E8 LDR X8, [X20 + 0x20]
	0x024244EC MOV X0, X21
	0x024244F0 MOV W1, W19
	0x024244F4 LDR X8, [X8 + 0xC0]
	0x024244F8 LDR X2, [X8 + 0x10]
	0x024244FC LDR X8, [X2]
	0x02424500 BLR X8
	0x02424504 LDR X8, [X25 + 0x28]
	0x02424508 LDUR X9, [X29 - 0x8]
	0x0242450C CMP X8, X9
	0x02424510 B.NE 0x2424530
	0x02424514 ADD X31, X29, 0x0
	0x02424518 LDP X20, X19, [X31 + 0x40]
	0x0242451C LDP X22, X21, [X31 + 0x30]
	0x02424520 LDP X24, X23, [X31 + 0x20]
	0x02424524 LDP X26, X25, [X31 + 0x10]
	0x02424528 LDP X29, X30, [X31], #0x50
	0x0242452C RET
	0x02424530 BL 0x3EB1B20
	0x02424534 CBZ X0, 0x2424570
	0x02424538 STR X30, [X31 - 0x20]!
	0x0242453C STP X20, X19, [X31 + 0x10]
	0x02424540 LDR X8, [X1 + 0x20]
	0x02424544 MOV X20, X1
	0x02424548 MOV X19, X0
	0x0242454C ADD X9, X8, 0x135
	0x02424550 LDRH W9, [X9]
	0x02424554 TBNZ X9, 0x0, 0x2424574
	0x02424558 MOV X0, X8
	0x0242455C BL 0x1C5C684
	0x02424560 LDR X8, [X20 + 0x20]
	0x02424564 ADD X9, X8, 0x135

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X19, X1
	007 Move X20, X0
	008 Add X9, X8, 309
	009 NotImplemented "Instruction LDRH not yet implemented."
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {20}
	014 Move X0, X8
	015 Move X21, X2
	016 Call 0x1C5D684
	017 Move X8, [X21+32]
	018 Add X9, X8, 309
	019 NotImplemented "Instruction LDRH not yet implemented."
	020 Move X0, X8
	021 Move X10, [X0+192]
	022 Move X10, [X10+192]
	023 Move X21, [X10]
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {31}
	028 Move X0, X8
	029 Call 0x1C5D684
	030 Move X8, X0
	031 Move X8, [X8+192]
	032 Move X0, X20
	033 Move X1, X19
	034 Move X2, [X8+192]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSET not yet implemented."
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return X0

Method: System.Boolean Equals(ref Fusion.NetworkString`1<TSize> other)

Disassembly:
	0x02424568 LDRH W9, [X9]
	0x0242456C B 0x2424578
	0x02424570 RET
	0x02424574 MOV X0, X8
	0x02424578 LDR X10, [X0 + 0xC0]
	0x0242457C LDR X10, [X10 + 0x20]
	0x02424580 LDR X2, [X10]
	0x02424584 TBNZ X9, 0x0, 0x242459C
	0x02424588 MOV X0, X8
	0x0242458C STR X2, [X31 + 0x8]
	0x02424590 BL 0x1C5C684
	0x02424594 LDR X2, [X31 + 0x8]
	0x02424598 MOV X8, X0
	0x0242459C LDR X8, [X8 + 0xC0]
	0x024245A0 MOV X0, X19
	0x024245A4 LDP X20, X19, [X31 + 0x10]
	0x024245A8 LDR X1, [X8 + 0x20]
	0x024245AC LDR X30, [X31], #0x20
	0x024245B0 BR X2
	0x024245B4 CBZ X0, 0x24245F0
	0x024245B8 STR X30, [X31 - 0x20]!
	0x024245BC STP X20, X19, [X31 + 0x10]
	0x024245C0 LDR X8, [X1 + 0x20]
	0x024245C4 MOV X20, X1
	0x024245C8 MOV X19, X0
	0x024245CC ADD X9, X8, 0x135
	0x024245D0 LDRH W9, [X9]
	0x024245D4 TBNZ X9, 0x0, 0x24245F8
	0x024245D8 MOV X0, X8
	0x024245DC BL 0x1C5C684
	0x024245E0 LDR X8, [X20 + 0x20]
	0x024245E4 ADD X9, X8, 0x135
	0x024245E8 LDRH W9, [X9]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X19, X1
	007 Move X20, X0
	008 Add X9, X8, 309
	009 NotImplemented "Instruction LDRH not yet implemented."
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {20}
	014 Move X0, X8
	015 Move X21, X2
	016 Call 0x1C5D684
	017 Move X8, [X21+32]
	018 Add X9, X8, 309
	019 NotImplemented "Instruction LDRH not yet implemented."
	020 Move X0, X8
	021 Move X10, [X0+192]
	022 Move X10, [X10+192]
	023 Move X21, [X10]
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {31}
	028 Move X0, X8
	029 Call 0x1C5D684
	030 Move X8, X0
	031 Move X8, [X8+192]
	032 Move X0, X20
	033 Move X1, X19
	034 Move X2, [X8+192]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSET not yet implemented."
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return X0

Method: System.Boolean Equals(Fusion.NetworkString`1<TOtherSize> other)

Disassembly:
	0x02134B48 BL 0x3EB1AC0
	0x02134B4C CBZ X20, 0x2134BA4
	0x02134B50 LDP X8, X1, [X24 + 0x8]
	0x02134B54 LDR W8, [X8 + 0x28]
	0x02134B58 LDR X0, [X1]
	0x02134B5C TBNZ X8, 0x1F, 0x2134B64
	0x02134B60 LDR X21, [X21]
	0x02134B64 STUR X21, [X29 - 0x10]
	0x02134B68 LDR X8, [X1 + 0x10]
	0x02134B6C SUB X3, X29, 0x10
	0x02134B70 MOV X2, X20
	0x02134B74 MOV X4, X21
	0x02134B78 BLR X8
	0x02134B7C LDR X8, [X23 + 0x28]
	0x02134B80 LDUR X9, [X29 - 0x8]
	0x02134B84 CMP X8, X9
	0x02134B88 B.NE 0x2134BA8
	0x02134B8C ADD X31, X29, 0x0
	0x02134B90 LDP X20, X19, [X31 + 0x30]
	0x02134B94 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {14}
	010 Move X0, X2
	011 Move X21, X2
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X2, [X8+8]
	015 Move X0, X20
	016 Move X1, X19
	017 Move X8, [X2]
	018 NotImplemented "Instruction BLR not yet implemented."
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction CSET not yet implemented."
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Return X0

Method: System.Boolean Equals(ref Fusion.NetworkString`1<TOtherSize> other)

Disassembly:
	0x02134B98 LDP X24, X23, [X31 + 0x10]
	0x02134B9C LDP X29, X30, [X31], #0x40
	0x02134BA0 RET
	0x02134BA4 BL 0x1C16F20
	0x02134BA8 BL 0x3EB1B20
	0x02134BAC CMP W1, 0x1
	0x02134BB0 MOV X20, X0
	0x02134BB4 B.NE 0x2134C84
	0x02134BB8 MOV X0, X20
	0x02134BBC BL 0x3EB1AD0
	0x02134BC0 MOV X20, X0
	0x02134BC4 ADRP X0, 0x1FBF000
	0x02134BC8 LDR X0, [X0 + 0x7D0]
	0x02134BCC BL 0x1C16D08
	0x02134BD0 LDR X8, [X20]
	0x02134BD4 LDR X1, [X8]
	0x02134BD8 BL 0x1C17270
	0x02134BDC TBZ X0, 0x0, 0x2134C58
	0x02134BE0 LDR X20, [X20]
	0x02134BE4 BL 0x3EB1AE0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {14}
	010 Move X0, X2
	011 Move X21, X2
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X2, [X8+8]
	015 Move X0, X20
	016 Move X1, X19
	017 Move X8, [X2]
	018 NotImplemented "Instruction BLR not yet implemented."
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction CSET not yet implemented."
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Return X0

Method: System.Void Assign(System.String value)

Disassembly:
	0x024245EC B 0x24245FC
	0x024245F0 MOVZ W0, 0x1
	0x024245F4 RET
	0x024245F8 MOV X0, X8
	0x024245FC LDR X10, [X0 + 0xC0]
	0x02424600 LDR X10, [X10 + 0x28]
	0x02424604 LDR X2, [X10]
	0x02424608 TBNZ X9, 0x0, 0x2424620
	0x0242460C MOV X0, X8
	0x02424610 STR X2, [X31 + 0x8]
	0x02424614 BL 0x1C5C684
	0x02424618 LDR X2, [X31 + 0x8]
	0x0242461C MOV X8, X0
	0x02424620 LDR X8, [X8 + 0xC0]
	0x02424624 MOV X0, X19
	0x02424628 LDP X20, X19, [X31 + 0x10]
	0x0242462C LDR X1, [X8 + 0x28]
	0x02424630 LDR X30, [X31], #0x20
	0x02424634 BR X2
	0x02424638 STP X29, X30, [X31 - 0x30]!
	0x0242463C STP X22, X21, [X31 + 0x10]
	0x02424640 STP X20, X19, [X31 + 0x20]
	0x02424644 ADD X29, X31, 0x0
	0x02424648 SUB X31, X31, 0x10
	0x0242464C MRS X22, 0xC000
	0x02424650 LDR X8, [X22 + 0x28]
	0x02424654 MOV X19, X1
	0x02424658 STUR X8, [X29 - 0x8]
	0x0242465C LDR X8, [X2 + 0x20]
	0x02424660 LDR X8, [X8 + 0xC0]
	0x02424664 LDR X9, [X8]
	0x02424668 LDR W20, [X9 + 0xFC]
	0x0242466C ADD X9, X31, 0x0
	0x02424670 ADD X10, X20, 0xF

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X19, X1
	008 Move X20, X0
	009 Add X9, X8, 309
	010 NotImplemented "Instruction LDRH not yet implemented."
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {21}
	015 Move X0, X8
	016 Move X21, X2
	017 Call 0x1C5D684
	018 Move X8, [X21+32]
	019 Add X9, X8, 309
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move X0, X8
	022 Move X10, [X0+192]
	023 Move X10, [X10+8]
	024 Move X3, [X10]
	025 Move TEMP, X9
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, X8
	030 Move [X31+8], X3
	031 Call 0x1C5D684
	032 Move X3, [X31+8]
	033 Move X8, X0
	034 Move X8, [X8+192]
	035 Move X0, X20
	036 Move X1, X19
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X2, [X8+8]
	040 Move X30, [X31+16]
	041 Move X21, [X31+24]
	042 Add X31, X31, 48
	043 CallNoReturn X3

Method: System.Boolean StartsWith(System.String s)

Disassembly:
	0x02424674 AND X10, X10, 0x1FFFFFFFF
	0x02424678 SUB X21, X9, X10
	0x0242467C ADD X31, X21, 0x0
	0x02424680 LDR X8, [X8 + 0x18]
	0x02424684 LDR X1, [X8 + 0x80]
	0x02424688 BL 0x1C16D18
	0x0242468C MOV X1, X0
	0x02424690 MOV X0, X21
	0x02424694 MOV X2, X20
	0x02424698 BL 0x3EB1AC0
	0x0242469C MOV X0, X19
	0x024246A0 MOV X1, X21
	0x024246A4 MOV X2, X20
	0x024246A8 BL 0x3EB1AC0
	0x024246AC LDR X8, [X22 + 0x28]
	0x024246B0 LDUR X9, [X29 - 0x8]
	0x024246B4 CMP X8, X9
	0x024246B8 B.NE 0x24246D0
	0x024246BC ADD X31, X29, 0x0
	0x024246C0 LDP X20, X19, [X31 + 0x20]
	0x024246C4 LDP X22, X21, [X31 + 0x10]
	0x024246C8 LDP X29, X30, [X31], #0x30
	0x024246CC RET
	0x024246D0 BL 0x3EB1B20
	0x024246D4 STP X29, X30, [X31 - 0x40]!
	0x024246D8 STR X23, [X31 + 0x10]
	0x024246DC STP X22, X21, [X31 + 0x20]
	0x024246E0 STP X20, X19, [X31 + 0x30]
	0x024246E4 ADD X29, X31, 0x0
	0x024246E8 SUB X31, X31, 0x10
	0x024246EC MRS X22, 0xC000
	0x024246F0 LDR X8, [X22 + 0x28]
	0x024246F4 ADD X9, X31, 0x0
	0x024246F8 MOV X20, X0
	0x024246FC STUR X8, [X29 - 0x8]
	0x02424700 STUR X1, [X29 - 0x10]
	0x02424704 LDR X23, [X2 + 0x20]
	0x02424708 LDR X8, [X23 + 0xC0]
	0x0242470C LDR X8, [X8]
	0x02424710 LDR W19, [X8 + 0xFC]
	0x02424714 ADD X10, X19, 0xF
	0x02424718 AND X10, X10, 0x1FFFFFFFF
	0x0242471C SUB X21, X9, X10
	0x02424720 ADD X31, X21, 0x0
	0x02424724 LDR W8, [X8 + 0x28]
	0x02424728 MOV X0, X21
	0x0242472C MOV X2, X19
	0x02424730 CMP W8, 0x0
	0x02424734 SUB X8, X29, 0x10
	0x02424738 CSEL X1, X1, X8, LT
	0x0242473C BL 0x3EB1AC0
	0x02424740 LDR X8, [X23 + 0xC0]
	0x02424744 MOV X0, X20
	0x02424748 MOV X2, X21
	0x0242474C MOV W3, W19
	0x02424750 LDR X8, [X8 + 0x18]
	0x02424754 LDR X1, [X8 + 0x80]
	0x02424758 BL 0x1C16D1C
	0x0242475C LDR X8, [X22 + 0x28]
	0x02424760 LDUR X9, [X29 - 0x8]
	0x02424764 CMP X8, X9
	0x02424768 B.NE 0x2424784
	0x0242476C ADD X31, X29, 0x0
	0x02424770 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X2
	007 Compare X1, 0
	008 JumpIfEqual {64}
	009 Move X20, X0
	010 Move X0, [X21+32]
	011 Move X19, X1
	012 Move W8, [X0+309]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {18}
	017 Call 0x1C5D684
	018 Move X8, [X0+192]
	019 Move X0, X20
	020 Move X8, [X8]
	021 Move X8, [X8+128]
	022 Add X1, X8, 32
	023 Call 0x1C17D18
	024 Move X8, [X21+32]
	025 Move X22, X0
	026 Add X9, X8, 309
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move TEMP, X9
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {37}
	032 Move X0, X8
	033 Call 0x1C5D684
	034 Move X8, [X21+32]
	035 Add X9, X8, 309
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Move X0, X8
	038 Move X10, [X0+192]
	039 Move X10, [X10+104]
	040 Move X21, [X10]
	041 Move TEMP, X9
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {48}
	045 Move X0, X8
	046 Call 0x1C5D684
	047 Move X8, X0
	048 Move X8, [X8+192]
	049 Move X0, X20
	050 Move X1, [X8+104]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move W1, W0
	053 Move X0, X22
	054 Move X2, X19
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move W3, W31
	060 Move X4, X31
	061 Move X30, [X31+48]
	062 Call UTF32Tools.StartsWithOrdinal, X0, X1, X2, X3
	063 Return X0
	064 Move X0, 0x1CD5000
	065 Move X0, [X0+1320]
	066 Call 0x1C17D08
	067 Call 0x1C17F10
	068 Move X19, X0
	069 Move X0, 0x1CF9000
	070 Move X0, [X0+3264]
	071 Call 0x1C17D08
	072 Move X1, X0
	073 Move X0, X19
	074 Move X2, X31
	075 Call ArgumentNullException..ctor, X0, X1
	076 Move X0, X19
	077 Move X1, X21
	078 Call 0x1C17DEC

Method: System.Boolean StartsWith(ref Fusion.NetworkString`1<TOtherSize> other)

Disassembly:
	0x02134FC0 BL 0x1C5C6E0
	0x02134FC4 LDR X8, [X19 + 0x38]
	0x02134FC8 LDR X0, [X8]
	0x02134FCC LDRB W8, [X0 + 0x135]
	0x02134FD0 TBNZ X8, 0x0, 0x2134FD8
	0x02134FD4 BL 0x1C5C684
	0x02134FD8 BL 0x1C16F10
	0x02134FDC LDR X8, [X19 + 0x38]
	0x02134FE0 MOV X22, X0
	0x02134FE4 LDR X1, [X8 + 0x8]
	0x02134FE8 LDR X8, [X1]
	0x02134FEC BLR X8
	0x02134FF0 CBZ X22, 0x2135050
	0x02134FF4 STR X21, [X22 + 0x10]
	0x02134FF8 LDR X8, [X19 + 0x38]
	0x02134FFC LDR X0, [X8 + 0x20]
	0x02135000 LDRB W8, [X0 + 0x135]
	0x02135004 TBNZ X8, 0x0, 0x213500C
	0x02135008 BL 0x1C5C684
	0x0213500C BL 0x1C16F10
	0x02135010 LDR X8, [X19 + 0x38]
	0x02135014 MOV X1, X22
	0x02135018 MOV X21, X0
	0x0213501C LDR X3, [X8 + 0x28]
	0x02135020 LDR X2, [X8 + 0x18]
	0x02135024 LDR X9, [X3]
	0x02135028 BLR X9
	0x0213502C LDR X8, [X19 + 0x38]
	0x02135030 MOV X0, X20
	0x02135034 MOV X1, X21
	0x02135038 LDP X20, X19, [X31 + 0x20]
	0x0213503C LDR X2, [X8 + 0x30]
	0x02135040 LDP X22, X21, [X31 + 0x10]
	0x02135044 LDR X3, [X2]
	0x02135048 LDR X30, [X31], #0x30
	0x0213504C BR X3
	0x02135050 BL 0x1C16F20
	0x02135054 STR X30, [X31 - 0x30]!
	0x02135058 STP X22, X21, [X31 + 0x10]
	0x0213505C STP X20, X19, [X31 + 0x20]
	0x02135060 LDR X8, [X2 + 0x38]
	0x02135064 MOV X19, X2
	0x02135068 MOV X21, X1
	0x0213506C MOV X20, X0
	0x02135070 CBNZ X8, 0x2135080
	0x02135074 MOV X0, X19
	0x02135078 BL 0x1C5C6E0
	0x0213507C LDR X8, [X19 + 0x38]
	0x02135080 LDR X0, [X8]
	0x02135084 LDRB W8, [X0 + 0x135]
	0x02135088 TBNZ X8, 0x0, 0x2135090
	0x0213508C BL 0x1C5C684
	0x02135090 BL 0x1C16F10
	0x02135094 LDR X8, [X19 + 0x38]
	0x02135098 MOV X22, X0
	0x0213509C LDR X1, [X8 + 0x8]
	0x021350A0 LDR X8, [X1]
	0x021350A4 BLR X8
	0x021350A8 CBZ X22, 0x2135108
	0x021350AC STR X21, [X22 + 0x10]
	0x021350B0 LDR X8, [X19 + 0x38]
	0x021350B4 LDR X0, [X8 + 0x20]
	0x021350B8 LDRB W8, [X0 + 0x135]
	0x021350BC TBNZ X8, 0x0, 0x21350C4
	0x021350C0 BL 0x1C5C684
	0x021350C4 BL 0x1C16F10
	0x021350C8 LDR X8, [X19 + 0x38]
	0x021350CC MOV X1, X22
	0x021350D0 MOV X21, X0
	0x021350D4 LDR X3, [X8 + 0x28]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X2+56]
	009 Move X20, X2
	010 Move X19, X1
	011 Move X21, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {17}
	014 Move X0, X20
	015 Call 0x1C5D6E0
	016 Move X8, [X20+56]
	017 Move X8, [X8+8]
	018 Move X0, X19
	019 Move X8, [X8+128]
	020 Add X1, X8, 32
	021 Call 0x1C17D18
	022 Move X8, [X20+32]
	023 Move X22, X0
	024 Move W9, [X8+309]
	025 Move TEMP, X9
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {32}
	029 Move X0, X8
	030 Call 0x1C5D684
	031 Move X8, X0
	032 Move X8, [X8+192]
	033 Move X0, X21
	034 Move X8, [X8]
	035 Move X8, [X8+128]
	036 Add X1, X8, 32
	037 Call 0x1C17D18
	038 Move X8, [X20+32]
	039 Move X23, X0
	040 Add X9, X8, 309
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move TEMP, X9
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {51}
	046 Move X0, X8
	047 Call 0x1C5D684
	048 Move X8, [X20+32]
	049 Add X9, X8, 309
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 Move X0, X8
	052 Move X10, [X0+192]
	053 Move X10, [X10+104]
	054 Move X24, [X10]
	055 Move TEMP, X9
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {62}
	059 Move X0, X8
	060 Call 0x1C5D684
	061 Move X8, X0
	062 Move X8, [X8+192]
	063 Move X0, X21
	064 Move X1, [X8+104]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X8, [X20+56]
	067 Move W20, W0
	068 Move X0, X19
	069 Move X1, [X8+24]
	070 Move X8, [X1]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move W3, W0
	073 Move X0, X23
	074 Move W1, W20
	075 Move X2, X22
	076 Move X20, [X31+48]
	077 Move X19, [X31+56]
	078 Move X22, [X31+32]
	079 Move X21, [X31+40]
	080 Move X24, [X31+16]
	081 Move X23, [X31+24]
	082 Move W4, W31
	083 Move X5, X31
	084 Move X30, [X31+64]
	085 Call UTF32Tools.StartsWithOrdinal, X0, X1, X2, X3, X4
	086 Return X0

Method: System.Boolean EndsWith(ref Fusion.NetworkString`1<TOtherSize> other)

Disassembly:
	0x02134A30 LDR X8, [X20 + 0x38]
	0x02134A34 LDR X9, [X3]
	0x02134A38 LDR X2, [X8 + 0x10]
	0x02134A3C BLR X9
	0x02134A40 LDR X8, [X20 + 0x20]
	0x02134A44 MOV X0, X21
	0x02134A48 MOV X1, X23
	0x02134A4C LDR X8, [X8 + 0xC0]
	0x02134A50 LDR X2, [X8 + 0xE0]
	0x02134A54 LDR X8, [X2]
	0x02134A58 BLR X8
	0x02134A5C ADRP X8, 0x1FC2000
	0x02134A60 LDR X8, [X8 + 0x2C8]
	0x02134A64 LDR X0, [X8]
	0x02134A68 BL 0x1C16F10
	0x02134A6C LDR X8, [X20 + 0x38]
	0x02134A70 MOV X1, X22
	0x02134A74 MOV X3, X31
	0x02134A78 MOV X23, X0
	0x02134A7C LDR X2, [X8 + 0x18]
	0x02134A80 BL 0x2A6B948
	0x02134A84 LDR X8, [X20 + 0x20]
	0x02134A88 MOV X0, X21
	0x02134A8C MOV X1, X23
	0x02134A90 LDR X8, [X8 + 0xC0]
	0x02134A94 LDR X2, [X8 + 0xF8]
	0x02134A98 LDR X8, [X2]
	0x02134A9C BLR X8
	0x02134AA0 LDR X0, [X22 + 0x10]
	0x02134AA4 CBZ X0, 0x2134AC8
	0x02134AA8 LDR X8, [X20 + 0x38]
	0x02134AAC MOV X1, X19
	0x02134AB0 LDP X20, X19, [X31 + 0x20]
	0x02134AB4 LDP X22, X21, [X31 + 0x10]
	0x02134AB8 LDR X2, [X8 + 0x28]
	0x02134ABC LDR X3, [X2]
	0x02134AC0 LDP X30, X23, [X31], #0x30
	0x02134AC4 BR X3
	0x02134AC8 BL 0x1C16F20
	0x02134ACC STP X29, X30, [X31 - 0x40]!
	0x02134AD0 STP X24, X23, [X31 + 0x10]
	0x02134AD4 STP X22, X21, [X31 + 0x20]
	0x02134AD8 STP X20, X19, [X31 + 0x30]
	0x02134ADC ADD X29, X31, 0x0
	0x02134AE0 SUB X31, X31, 0x20
	0x02134AE4 MRS X23, 0xC000
	0x02134AE8 LDR X8, [X23 + 0x28]
	0x02134AEC MOV X22, X3
	0x02134AF0 MOV X19, X2
	0x02134AF4 MOV X20, X1
	0x02134AF8 STUR X8, [X29 - 0x8]
	0x02134AFC STUR X3, [X29 - 0x18]
	0x02134B00 LDR X24, [X4 + 0x38]
	0x02134B04 CBNZ X24, 0x2134B18
	0x02134B08 MOV X0, X4
	0x02134B0C MOV X21, X4
	0x02134B10 BL 0x1C5C6E0
	0x02134B14 LDR X24, [X21 + 0x38]
	0x02134B18 LDR X8, [X24 + 0x8]
	0x02134B1C ADD X9, X31, 0x0
	0x02134B20 LDR W2, [X8 + 0xFC]
	0x02134B24 ADD X10, X2, 0xF
	0x02134B28 AND X10, X10, 0x1FFFFFFFF
	0x02134B2C SUB X21, X9, X10
	0x02134B30 ADD X31, X21, 0x0
	0x02134B34 LDR W8, [X8 + 0x28]
	0x02134B38 MOV X0, X21
	0x02134B3C CMP W8, 0x0
	0x02134B40 SUB X8, X29, 0x18
	0x02134B44 CSEL X1, X22, X8, LT

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X2+56]
	009 Move X20, X2
	010 Move X19, X1
	011 Move X21, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {17}
	014 Move X0, X20
	015 Call 0x1C5D6E0
	016 Move X8, [X20+56]
	017 Move X8, [X8+8]
	018 Move X0, X19
	019 Move X8, [X8+128]
	020 Add X1, X8, 32
	021 Call 0x1C17D18
	022 Move X8, [X20+32]
	023 Move X22, X0
	024 Move W9, [X8+309]
	025 Move TEMP, X9
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {32}
	029 Move X0, X8
	030 Call 0x1C5D684
	031 Move X8, X0
	032 Move X8, [X8+192]
	033 Move X0, X21
	034 Move X8, [X8]
	035 Move X8, [X8+128]
	036 Add X1, X8, 32
	037 Call 0x1C17D18
	038 Move X8, [X20+32]
	039 Move X23, X0
	040 Add X9, X8, 309
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move TEMP, X9
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {51}
	046 Move X0, X8
	047 Call 0x1C5D684
	048 Move X8, [X20+32]
	049 Add X9, X8, 309
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 Move X0, X8
	052 Move X10, [X0+192]
	053 Move X10, [X10+104]
	054 Move X24, [X10]
	055 Move TEMP, X9
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {62}
	059 Move X0, X8
	060 Call 0x1C5D684
	061 Move X8, X0
	062 Move X8, [X8+192]
	063 Move X0, X21
	064 Move X1, [X8+104]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X8, [X20+56]
	067 Move W20, W0
	068 Move X0, X19
	069 Move X1, [X8+24]
	070 Move X8, [X1]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move W3, W0
	073 Move X0, X23
	074 Move W1, W20
	075 Move X2, X22
	076 Move X20, [X31+48]
	077 Move X19, [X31+56]
	078 Move X22, [X31+32]
	079 Move X21, [X31+40]
	080 Move X24, [X31+16]
	081 Move X23, [X31+24]
	082 Move W4, W31
	083 Move X5, X31
	084 Move X30, [X31+64]
	085 Call UTF32Tools.EndsWithOrdinal, X0, X1, X2, X3, X4
	086 Return X0

Method: System.Boolean EndsWith(System.String s)

Disassembly:
	0x02424774 LDP X22, X21, [X31 + 0x20]
	0x02424778 LDR X23, [X31 + 0x10]
	0x0242477C LDP X29, X30, [X31], #0x40
	0x02424780 RET
	0x02424784 BL 0x3EB1B20
	0x02424788 STR X30, [X31 - 0x10]!
	0x0242478C LDR X8, [X1 + 0x20]
	0x02424790 LDR X8, [X8 + 0xC0]
	0x02424794 LDR X8, [X8 + 0x18]
	0x02424798 LDR X8, [X8 + 0x80]
	0x0242479C ADD X1, X8, 0x20
	0x024247A0 BL 0x1C16D18
	0x024247A4 LDR X0, [X0]
	0x024247A8 LDR X30, [X31], #0x10
	0x024247AC RET
	0x024247B0 STP X30, X21, [X31 - 0x20]!
	0x024247B4 STP X20, X19, [X31 + 0x10]
	0x024247B8 LDR X8, [X2 + 0x20]
	0x024247BC MOV X19, X1
	0x024247C0 MOV X20, X0
	0x024247C4 MOVZ W1, 0x8
	0x024247C8 LDR X8, [X8 + 0xC0]
	0x024247CC LDR X8, [X8 + 0x18]
	0x024247D0 LDR X8, [X8 + 0x80]
	0x024247D4 ADD X21, X8, 0x20
	0x024247D8 MOV X0, X21
	0x024247DC BL 0x1C16D14
	0x024247E0 MOV X0, X20
	0x024247E4 MOV X1, X21
	0x024247E8 BL 0x1C16D18
	0x024247EC STR X19, [X0]
	0x024247F0 LDP X20, X19, [X31 + 0x10]
	0x024247F4 LDP X30, X21, [X31], #0x20
	0x024247F8 RET
	0x024247FC STR X30, [X31 - 0x10]!
	0x02424800 LDR X8, [X1 + 0x20]
	0x02424804 LDR X8, [X8 + 0xC0]
	0x02424808 LDR X8, [X8 + 0x18]
	0x0242480C LDR X8, [X8 + 0x80]
	0x02424810 ADD X1, X8, 0x40
	0x02424814 BL 0x1C16D18
	0x02424818 LDR X0, [X0]
	0x0242481C LDR X30, [X31], #0x10
	0x02424820 RET
	0x02424824 STP X30, X21, [X31 - 0x20]!
	0x02424828 STP X20, X19, [X31 + 0x10]
	0x0242482C LDR X8, [X2 + 0x20]
	0x02424830 MOV X19, X1
	0x02424834 MOV X20, X0
	0x02424838 MOVZ W1, 0x8
	0x0242483C LDR X8, [X8 + 0xC0]
	0x02424840 LDR X8, [X8 + 0x18]
	0x02424844 LDR X8, [X8 + 0x80]
	0x02424848 ADD X21, X8, 0x40
	0x0242484C MOV X0, X21
	0x02424850 BL 0x1C16D14
	0x02424854 MOV X0, X20
	0x02424858 MOV X1, X21
	0x0242485C BL 0x1C16D18
	0x02424860 STR X19, [X0]
	0x02424864 LDP X20, X19, [X31 + 0x10]
	0x02424868 LDP X30, X21, [X31], #0x20
	0x0242486C RET
	0x02424870 STR X30, [X31 - 0x10]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X2
	007 Compare X1, 0
	008 JumpIfEqual {64}
	009 Move X20, X0
	010 Move X0, [X21+32]
	011 Move X19, X1
	012 Move W8, [X0+309]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {18}
	017 Call 0x1C5D684
	018 Move X8, [X0+192]
	019 Move X0, X20
	020 Move X8, [X8]
	021 Move X8, [X8+128]
	022 Add X1, X8, 32
	023 Call 0x1C17D18
	024 Move X8, [X21+32]
	025 Move X22, X0
	026 Add X9, X8, 309
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move TEMP, X9
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {37}
	032 Move X0, X8
	033 Call 0x1C5D684
	034 Move X8, [X21+32]
	035 Add X9, X8, 309
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Move X0, X8
	038 Move X10, [X0+192]
	039 Move X10, [X10+104]
	040 Move X21, [X10]
	041 Move TEMP, X9
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {48}
	045 Move X0, X8
	046 Call 0x1C5D684
	047 Move X8, X0
	048 Move X8, [X8+192]
	049 Move X0, X20
	050 Move X1, [X8+104]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move W1, W0
	053 Move X0, X22
	054 Move X2, X19
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move W3, W31
	060 Move X4, X31
	061 Move X30, [X31+48]
	062 Call UTF32Tools.EndsWithOrdinal, X0, X1, X2, X3
	063 Return X0
	064 Move X0, 0x1CD5000
	065 Move X0, [X0+1320]
	066 Call 0x1C17D08
	067 Call 0x1C17F10
	068 Move X19, X0
	069 Move X0, 0x1CF9000
	070 Move X0, [X0+3264]
	071 Call 0x1C17D08
	072 Move X1, X0
	073 Move X0, X19
	074 Move X2, X31
	075 Call ArgumentNullException..ctor, X0, X1
	076 Move X0, X19
	077 Move X1, X21
	078 Call 0x1C17DEC

Method: System.Int32 GetHashCode()

Disassembly:
	0x02424874 LDR X8, [X1 + 0x20]
	0x02424878 LDR X8, [X8 + 0xC0]
	0x0242487C LDR X8, [X8 + 0x18]
	0x02424880 LDR X8, [X8 + 0x80]
	0x02424884 ADD X1, X8, 0x60
	0x02424888 BL 0x1C16D18
	0x0242488C LDRB W0, [X0]
	0x02424890 LDR X30, [X31], #0x10
	0x02424894 RET
	0x02424898 STP X30, X21, [X31 - 0x20]!
	0x0242489C STP X20, X19, [X31 + 0x10]
	0x024248A0 LDR X8, [X2 + 0x20]
	0x024248A4 MOV W19, W1
	0x024248A8 MOV X20, X0
	0x024248AC MOVZ W1, 0x1
	0x024248B0 LDR X8, [X8 + 0xC0]
	0x024248B4 LDR X8, [X8 + 0x18]
	0x024248B8 LDR X8, [X8 + 0x80]
	0x024248BC ADD X21, X8, 0x60
	0x024248C0 MOV X0, X21
	0x024248C4 BL 0x1C16D14
	0x024248C8 MOV X0, X20
	0x024248CC MOV X1, X21
	0x024248D0 BL 0x1C16D18
	0x024248D4 STRB W19, [X0]
	0x024248D8 LDP X20, X19, [X31 + 0x10]
	0x024248DC LDP X30, X21, [X31], #0x20
	0x024248E0 RET
	0x024248E4 STR X30, [X31 - 0x10]!
	0x024248E8 LDR X8, [X1 + 0x20]
	0x024248EC LDR X8, [X8 + 0xC0]
	0x024248F0 LDR X1, [X8 + 0x30]
	0x024248F4 LDR X8, [X1]
	0x024248F8 BLR X8
	0x024248FC ANDS W31, W0, 0xFF
	0x02424900 CSET W0, EQ
	0x02424904 LDR X30, [X31], #0x10
	0x02424908 RET
	0x0242490C STR X30, [X31 - 0x10]!
	0x02424910 LDR X8, [X1 + 0x20]
	0x02424914 LDR X8, [X8 + 0xC0]
	0x02424918 LDR X1, [X8 + 0x30]
	0x0242491C LDR X8, [X1]
	0x02424920 BLR X8
	0x02424924 AND W8, W0, 0xFF

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+32]
	006 Move X21, X1
	007 Move X19, X0
	008 Move W9, [X8+309]
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {16}
	013 Move X0, X8
	014 Call 0x1C5D684
	015 Move X8, X0
	016 Move X8, [X8+192]
	017 Move X0, X19
	018 Move X8, [X8]
	019 Move X8, [X8+128]
	020 Add X1, X8, 32
	021 Call 0x1C17D18
	022 Move X8, [X21+32]
	023 Move X20, X0
	024 Add X9, X8, 309
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move TEMP, X9
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {35}
	030 Move X0, X8
	031 Call 0x1C5D684
	032 Move X8, [X21+32]
	033 Add X9, X8, 309
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Move X0, X8
	036 Move X10, [X0+192]
	037 Move X10, [X10+104]
	038 Move X21, [X10]
	039 Move TEMP, X9
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {46}
	043 Move X0, X8
	044 Call 0x1C5D684
	045 Move X8, X0
	046 Move X8, [X8+192]
	047 Move X0, X19
	048 Move X1, [X8+104]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move W1, W0
	051 Move X0, X20
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X2, X31
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Call UTF32Tools.GetHashDeterministic, X0, X1
	058 Return X0

Method: System.String ToString()

Disassembly:
	0x02424928 CMP W8, 0x1
	0x0242492C CSET W0, EQ
	0x02424930 LDR X30, [X31], #0x10
	0x02424934 RET
	0x02424938 STR X30, [X31 - 0x20]!
	0x0242493C STP X20, X19, [X31 + 0x10]
	0x02424940 LDR X8, [X1 + 0x20]
	0x02424944 MOV X19, X1
	0x02424948 MOV X20, X0
	0x0242494C LDR X8, [X8 + 0xC0]
	0x02424950 LDR X1, [X8 + 0x28]
	0x02424954 LDR X8, [X1]
	0x02424958 BLR X8
	0x0242495C TBZ X0, 0x0, 0x24249C4
	0x02424960 LDR X8, [X19 + 0x20]
	0x02424964 MOV X0, X20
	0x02424968 LDR X8, [X8 + 0xC0]
	0x0242496C LDR X1, [X8 + 0x38]
	0x02424970 LDR X8, [X1]
	0x02424974 BLR X8
	0x02424978 LDR X8, [X19 + 0x20]
	0x0242497C LDR X8, [X8 + 0xC0]
	0x02424980 LDR X1, [X8 + 0x40]
	0x02424984 LDR X8, [X1]
	0x02424988 BLR X8
	0x0242498C TBZ X0, 0x0, 0x24249C4
	0x02424990 LDR X8, [X19 + 0x20]
	0x02424994 MOV X0, X20
	0x02424998 LDR X8, [X8 + 0xC0]
	0x0242499C LDR X1, [X8 + 0x50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X19, X0
	006 Add X9, X8, 309
	007 NotImplemented "Instruction LDRH not yet implemented."
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {18}
	012 Move X0, X8
	013 Move X20, X1
	014 Call 0x1C5D684
	015 Move X8, [X20+32]
	016 Add X9, X8, 309
	017 NotImplemented "Instruction LDRH not yet implemented."
	018 Move X0, X8
	019 Move X10, [X0+192]
	020 Move X10, [X10+64]
	021 Move X2, [X10]
	022 Move TEMP, X9
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, X8
	027 Move [X31+8], X2
	028 Call 0x1C5D684
	029 Move X2, [X31+8]
	030 Move X8, X0
	031 Move X8, [X8+192]
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X1, [X8+64]
	036 Move X30, [X31+32]
	037 CallNoReturn X2

Method: Fusion.UTF32Tools/CharEnumerator GetEnumerator()

Disassembly:
	0x024249A0 LDR X8, [X1]
	0x024249A4 BLR X8
	0x024249A8 LDR X8, [X19 + 0x20]
	0x024249AC LDP X20, X19, [X31 + 0x10]
	0x024249B0 LDR X8, [X8 + 0xC0]
	0x024249B4 LDR X1, [X8 + 0x40]
	0x024249B8 LDR X2, [X1]
	0x024249BC LDR X30, [X31], #0x20
	0x024249C0 BR X2
	0x024249C4 LDP X20, X19, [X31 + 0x10]
	0x024249C8 MOV W0, W31
	0x024249CC LDR X30, [X31], #0x20
	0x024249D0 RET
	0x024249D4 STR X30, [X31 - 0x20]!
	0x024249D8 STP X20, X19, [X31 + 0x10]
	0x024249DC LDR X8, [X1 + 0x20]
	0x024249E0 MOV X19, X1
	0x024249E4 MOV X20, X0
	0x024249E8 LDR X8, [X8 + 0xC0]
	0x024249EC LDR X1, [X8 + 0x38]
	0x024249F0 LDR X8, [X1]
	0x024249F4 BLR X8
	0x024249F8 LDR X8, [X19 + 0x20]
	0x024249FC LDR X8, [X8 + 0xC0]
	0x02424A00 LDR X1, [X8 + 0x58]
	0x02424A04 LDR X8, [X1]
	0x02424A08 BLR X8
	0x02424A0C TBZ X0, 0x0, 0x2424A44
	0x02424A10 LDR X8, [X19 + 0x20]
	0x02424A14 MOV X0, X20
	0x02424A18 LDR X8, [X8 + 0xC0]
	0x02424A1C LDR X1, [X8 + 0x50]
	0x02424A20 LDR X8, [X1]
	0x02424A24 BLR X8
	0x02424A28 LDR X8, [X19 + 0x20]
	0x02424A2C LDP X20, X19, [X31 + 0x10]
	0x02424A30 LDR X8, [X8 + 0xC0]
	0x02424A34 LDR X1, [X8 + 0x58]
	0x02424A38 LDR X2, [X1]
	0x02424A3C LDR X30, [X31], #0x20
	0x02424A40 BR X2
	0x02424A44 LDP X20, X19, [X31 + 0x10]
	0x02424A48 MOV W0, W31
	0x02424A4C LDR X30, [X31], #0x20
	0x02424A50 RET
	0x02424A54 LDR X8, [X1 + 0x20]
	0x02424A58 MOV W1, W31
	0x02424A5C LDR X8, [X8 + 0xC0]
	0x02424A60 LDR X2, [X8 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X0
	007 Move X0, [X1+32]
	008 Move X22, X1
	009 Move X19, X8
	010 Move W9, [X0+309]
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {16}
	015 Call 0x1C5D684
	016 Move X8, [X0+192]
	017 Move X0, X20
	018 Move X8, [X8]
	019 Move X8, [X8+128]
	020 Add X1, X8, 32
	021 Call 0x1C17D18
	022 Move X8, [X22+32]
	023 Move X21, X0
	024 Add X9, X8, 309
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move TEMP, X9
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {35}
	030 Move X0, X8
	031 Call 0x1C5D684
	032 Move X8, [X22+32]
	033 Add X9, X8, 309
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Move X0, X8
	036 Move X10, [X0+192]
	037 Move X10, [X10+128]
	038 Move X22, [X10]
	039 Move TEMP, X9
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {46}
	043 Move X0, X8
	044 Call 0x1C5D684
	045 Move X8, X0
	046 Move X8, [X8+192]
	047 Move X0, X20
	048 Move X1, [X8+128]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 NotImplemented "Instruction MOVI not yet implemented."
	051 Move W2, W0
	052 Move [X19], V0
	053 Move [X19+8], V0
	054 Move X0, X19
	055 Move X1, X21
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X3, X31
	061 Move X30, [X31+48]
	062 Call CharEnumerator..ctor, X0, X1, X2
	063 Return X0

Method: System.Collections.Generic.IEnumerator`1<System.Char> System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator()

Disassembly:
	0x02424A64 LDR X3, [X2]
	0x02424A68 BR X3
	0x02424A6C LDR X8, [X1 + 0x20]
	0x02424A70 MOVZ W1, 0x1
	0x02424A74 LDR X8, [X8 + 0xC0]
	0x02424A78 LDR X2, [X8 + 0x10]
	0x02424A7C LDR X3, [X2]
	0x02424A80 BR X3
	0x02424A84 STR X30, [X31 - 0x30]!
	0x02424A88 STP X22, X21, [X31 + 0x10]
	0x02424A8C STP X20, X19, [X31 + 0x20]
	0x02424A90 LDR X8, [X3 + 0x20]
	0x02424A94 MOV X19, X1
	0x02424A98 MOV X21, X3
	0x02424A9C MOV X22, X2
	0x02424AA0 LDR X8, [X8 + 0xC0]
	0x02424AA4 LDR X1, [X8 + 0x38]
	0x02424AA8 LDR X8, [X1]
	0x02424AAC BLR X8
	0x02424AB0 CBZ X22, 0x2424B0C
	0x02424AB4 LDR X8, [X21 + 0x20]
	0x02424AB8 MOV X20, X0
	0x02424ABC MOV X0, X22
	0x02424AC0 LDR X8, [X8 + 0xC0]
	0x02424AC4 LDR X1, [X8 + 0x38]
	0x02424AC8 LDR X8, [X1]
	0x02424ACC BLR X8
	0x02424AD0 LDR X8, [X21 + 0x20]
	0x02424AD4 LDR X8, [X8 + 0xC0]
	0x02424AD8 LDR X1, [X8 + 0x58]
	0x02424ADC LDR X8, [X1]
	0x02424AE0 BLR X8
	0x02424AE4 CMP X20, X19
	0x02424AE8 TBZ X0, 0x0, 0x2424AF8
	0x02424AEC MOVZ W8, 0x2
	0x02424AF0 CINC W0, W8, EQ
	0x02424AF4 B 0x2424AFC
	0x02424AF8 CSET W0, NE
	0x02424AFC LDP X20, X19, [X31 + 0x20]
	0x02424B00 LDP X22, X21, [X31 + 0x10]
	0x02424B04 LDR X30, [X31], #0x30
	0x02424B08 RET
	0x02424B0C BL 0x1C16F20
	0x02424B10 STP X30, X21, [X31 - 0x20]!
	0x02424B14 STP X20, X19, [X31 + 0x10]
	0x02424B18 LDR X8, [X2 + 0x20]
	0x02424B1C MOV X21, X1
	0x02424B20 MOV X20, X2

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0x1FB6000
	007 Move W8, [X21+2512]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x1CF9000
	015 Move X0, [X0+3280]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2512], W8
	019 Move X8, [X20+32]
	020 Add X9, X8, 309
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 Move TEMP, X9
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, X8
	027 Call 0x1C5D684
	028 Move X8, [X20+32]
	029 Add X9, X8, 309
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Move X0, X8
	032 Move X10, [X0+192]
	033 Move X20, 0x1CF9000
	034 Move X10, [X10+200]
	035 Move X21, [X10]
	036 Move X20, [X20+3280]
	037 Move TEMP, X9
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {44}
	041 Move X0, X8
	042 Call 0x1C5D684
	043 Move X8, X0
	044 Move X8, [X8+192]
	045 Move X0, X19
	046 Move X1, [X8+200]
	047 Add X8, X31, 0
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move V0, [X31]
	050 Move V1, [X31+16]
	051 Move X0, [X20]
	052 Add X1, X31, 0
	053 Move [X31+32], V0
	054 Move [X31+40], V1
	055 Move [X31], V0
	056 Move [X31+8], V1
	057 Call 0x1C17E04
	058 Move X20, [X31+80]
	059 Move X19, [X31+88]
	060 Move X30, [X31+64]
	061 Move X21, [X31+72]
	062 Add X31, X31, 96
	063 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x02424B24 MOV X19, X0
	0x02424B28 LDR X8, [X8 + 0xC0]
	0x02424B2C LDR X1, [X8 + 0x38]
	0x02424B30 LDR X8, [X1]
	0x02424B34 BLR X8
	0x02424B38 LDR X8, [X20 + 0x20]
	0x02424B3C CMP X0, X21
	0x02424B40 LDR X8, [X8 + 0xC0]
	0x02424B44 B.EQ 0x2424B50
	0x02424B48 LDR X1, [X8 + 0x38]
	0x02424B4C B 0x2424B54
	0x02424B50 LDR X1, [X8 + 0x50]
	0x02424B54 LDR X2, [X1]
	0x02424B58 MOV X0, X19
	0x02424B5C LDP X20, X19, [X31 + 0x10]
	0x02424B60 LDP X30, X21, [X31], #0x20
	0x02424B64 BR X2
	0x02424B68 STR X30, [X31 - 0x20]!
	0x02424B6C STP X20, X19, [X31 + 0x10]
	0x02424B70 LDR X8, [X1 + 0x20]
	0x02424B74 MOV X19, X1
	0x02424B78 MOV X20, X0
	0x02424B7C LDR X8, [X8 + 0xC0]
	0x02424B80 LDR X1, [X8 + 0x60]
	0x02424B84 LDR X8, [X1]
	0x02424B88 BLR X8
	0x02424B8C LDR X8, [X19 + 0x20]
	0x02424B90 MOV X0, X20
	0x02424B94 LDR X8, [X8 + 0xC0]
	0x02424B98 LDR X1, [X8 + 0x38]
	0x02424B9C LDR X8, [X1]
	0x02424BA0 BLR X8
	0x02424BA4 CBZ X0, 0x2424BF4
	0x02424BA8 LDR X8, [X19 + 0x20]
	0x02424BAC LDR X8, [X8 + 0xC0]
	0x02424BB0 LDR X1, [X8 + 0x68]
	0x02424BB4 LDR X8, [X1]
	0x02424BB8 BLR X8
	0x02424BBC LDR X8, [X19 + 0x20]
	0x02424BC0 MOV X0, X20
	0x02424BC4 LDR X8, [X8 + 0xC0]
	0x02424BC8 LDR X1, [X8 + 0x50]
	0x02424BCC LDR X8, [X1]
	0x02424BD0 BLR X8
	0x02424BD4 CBZ X0, 0x2424BF4
	0x02424BD8 LDR X8, [X19 + 0x20]
	0x02424BDC LDP X20, X19, [X31 + 0x10]
	0x02424BE0 LDR X8, [X8 + 0xC0]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0x1FB6000
	007 Move W8, [X21+2513]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x1CF9000
	015 Move X0, [X0+3280]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2513], W8
	019 Move X8, [X20+32]
	020 Add X9, X8, 309
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 Move TEMP, X9
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, X8
	027 Call 0x1C5D684
	028 Move X8, [X20+32]
	029 Add X9, X8, 309
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Move X0, X8
	032 Move X10, [X0+192]
	033 Move X20, 0x1CF9000
	034 Move X10, [X10+200]
	035 Move X21, [X10]
	036 Move X20, [X20+3280]
	037 Move TEMP, X9
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {44}
	041 Move X0, X8
	042 Call 0x1C5D684
	043 Move X8, X0
	044 Move X8, [X8+192]
	045 Move X0, X19
	046 Move X1, [X8+200]
	047 Add X8, X31, 0
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move V0, [X31]
	050 Move V1, [X31+16]
	051 Move X0, [X20]
	052 Add X1, X31, 0
	053 Move [X31+32], V0
	054 Move [X31+40], V1
	055 Move [X31], V0
	056 Move [X31+8], V1
	057 Call 0x1C17E04
	058 Move X20, [X31+80]
	059 Move X19, [X31+88]
	060 Move X30, [X31+64]
	061 Move X21, [X31+72]
	062 Add X31, X31, 96
	063 Return X0

Method: System.Int32 SafeIndex(System.Int32 index)

Disassembly:
	0x02424BE4 LDR X1, [X8 + 0x68]
	0x02424BE8 LDR X2, [X1]
	0x02424BEC LDR X30, [X31], #0x20
	0x02424BF0 BR X2
	0x02424BF4 BL 0x1C16F20
	0x02424BF8 STR X30, [X31 - 0x20]!
	0x02424BFC STP X20, X19, [X31 + 0x10]
	0x02424C00 AND W8, W1, 0xFF
	0x02424C04 CMP W8, 0x3
	0x02424C08 B.HI 0x2424CE0
	0x02424C0C ADRP X9, 0xFFFFFFFFFE709000
	0x02424C10 AND X8, X1, 0xFF
	0x02424C14 ADD X9, X9, 0xCFA
	0x02424C18 ADR X10, 0x18
	0x02424C1C LDRB W11, [X9, X8, LSL]
	0x02424C20 ADD X10, X10, X11, 0x2, LSL
	0x02424C24 MOV X20, X2
	0x02424C28 MOV X19, X0
	0x02424C2C BR X10
	0x02424C30 LDR X8, [X20 + 0x20]
	0x02424C34 MOV X0, X19
	0x02424C38 LDR X8, [X8 + 0xC0]
	0x02424C3C LDR X1, [X8 + 0x50]
	0x02424C40 LDR X8, [X1]
	0x02424C44 BLR X8
	0x02424C48 CBZ X0, 0x2424D20
	0x02424C4C LDR X8, [X20 + 0x20]
	0x02424C50 LDR X8, [X8 + 0xC0]
	0x02424C54 LDR X1, [X8 + 0x50]
	0x02424C58 LDR X8, [X1]
	0x02424C5C BLR X8
	0x02424C60 CBZ X0, 0x2424D20
	0x02424C64 LDR X8, [X20 + 0x20]
	0x02424C68 LDR X8, [X8 + 0xC0]
	0x02424C6C LDR X1, [X8 + 0x68]
	0x02424C70 LDR X8, [X1]
	0x02424C74 BLR X8
	0x02424C78 LDR X8, [X20 + 0x20]
	0x02424C7C LDR X8, [X8 + 0xC0]
	0x02424C80 LDR X1, [X8 + 0x78]
	0x02424C84 B 0x2424D0C
	0x02424C88 LDR X8, [X20 + 0x20]
	0x02424C8C MOV X0, X19
	0x02424C90 LDR X8, [X8 + 0xC0]
	0x02424C94 LDR X1, [X8 + 0x38]
	0x02424C98 LDR X8, [X1]
	0x02424C9C BLR X8
	0x02424CA0 CBZ X0, 0x2424D20
	0x02424CA4 LDR X8, [X20 + 0x20]
	0x02424CA8 LDR X8, [X8 + 0xC0]
	0x02424CAC LDR X1, [X8 + 0x38]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X19, X2
	008 Move W20, W1
	009 Move X21, X0
	010 Add X9, X8, 309
	011 NotImplemented "Instruction LDRH not yet implemented."
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, X8
	017 Call 0x1C5D684
	018 Move X8, [X19+32]
	019 Add X9, X8, 309
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move X0, X8
	022 Move X10, [X0+192]
	023 Move X10, [X10+104]
	024 Move X22, [X10]
	025 Move TEMP, X9
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {32}
	029 Move X0, X8
	030 Call 0x1C5D684
	031 Move X8, X0
	032 Move X8, [X8+192]
	033 Move X0, X21
	034 Move X1, [X8+104]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move TEMP, X20
	037 And TEMP, TEMP, -2147483648
	038 Compare TEMP, -2147483648
	039 JumpIfEqual {48}
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W0, W20
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Return X0
	048 Move X0, 0x1CD8000
	049 Move X0, [X0+1888]
	050 Call 0x1C17D08
	051 Call 0x1C17F10
	052 Move X20, X0
	053 Move X0, 0x1CDB000
	054 Move X0, [X0+304]
	055 Call 0x1C17D08
	056 Move X1, X0
	057 Move X0, X20
	058 Move X2, X31
	059 Call ArgumentOutOfRangeException..ctor, X0, X1
	060 Move X0, X20
	061 Move X1, X19
	062 Call 0x1C17DEC

Method: System.Int32 get_SafeLength()

Disassembly:
	0x02424CB0 LDR X8, [X1]
	0x02424CB4 BLR X8
	0x02424CB8 CBZ X0, 0x2424D20
	0x02424CBC LDR X8, [X20 + 0x20]
	0x02424CC0 LDR X8, [X8 + 0xC0]
	0x02424CC4 LDR X1, [X8 + 0x68]
	0x02424CC8 LDR X8, [X1]
	0x02424CCC BLR X8
	0x02424CD0 LDR X8, [X20 + 0x20]
	0x02424CD4 LDR X8, [X8 + 0xC0]
	0x02424CD8 LDR X1, [X8 + 0x70]
	0x02424CDC B 0x2424D0C
	0x02424CE0 LDP X20, X19, [X31 + 0x10]
	0x02424CE4 MOV X0, X31
	0x02424CE8 LDR X30, [X31], #0x20
	0x02424CEC RET
	0x02424CF0 LDR X8, [X20 + 0x20]
	0x02424CF4 LDR X8, [X8 + 0xC0]
	0x02424CF8 LDR X1, [X8 + 0x88]
	0x02424CFC B 0x2424D0C
	0x02424D00 LDR X8, [X20 + 0x20]
	0x02424D04 LDR X8, [X8 + 0xC0]
	0x02424D08 LDR X1, [X8 + 0x80]
	0x02424D0C LDR X2, [X1]
	0x02424D10 MOV X0, X19
	0x02424D14 LDP X20, X19, [X31 + 0x10]
	0x02424D18 LDR X30, [X31], #0x20
	0x02424D1C BR X2
	0x02424D20 BL 0x1C16F20
	0x02424D24 STP X30, X21, [X31 - 0x20]!
	0x02424D28 STP X20, X19, [X31 + 0x10]
	0x02424D2C LDR X8, [X1 + 0x20]
	0x02424D30 MOV X20, X1
	0x02424D34 MOV X19, X0
	0x02424D38 LDR X8, [X8 + 0xC0]
	0x02424D3C LDR X1, [X8 + 0x50]
	0x02424D40 LDR X8, [X1]
	0x02424D44 BLR X8
	0x02424D48 CBZ X0, 0x2424DAC
	0x02424D4C LDR X8, [X20 + 0x20]
	0x02424D50 MOV X21, X0
	0x02424D54 LDR X8, [X8 + 0xC0]
	0x02424D58 LDR X1, [X8 + 0x38]
	0x02424D5C LDR X8, [X1]
	0x02424D60 BLR X8
	0x02424D64 LDR X8, [X20 + 0x20]
	0x02424D68 MOV X1, X0
	0x02424D6C MOV X0, X19
	0x02424D70 LDR X8, [X8 + 0xC0]
	0x02424D74 LDR X2, [X8 + 0x90]
	0x02424D78 LDR X8, [X2]
	0x02424D7C BLR X8
	0x02424D80 LDR X8, [X20 + 0x20]
	0x02424D84 MOV X0, X21
	0x02424D88 MOV X1, X19
	0x02424D8C LDR X8, [X8 + 0xC0]
	0x02424D90 LDR X2, [X8 + 0x98]
	0x02424D94 LDR X8, [X2]
	0x02424D98 BLR X8
	0x02424D9C LDP X20, X19, [X31 + 0x10]
	0x02424DA0 MOV X0, X21
	0x02424DA4 LDP X30, X21, [X31], #0x20
	0x02424DA8 RET
	0x02424DAC BL 0x1C16F20
	0x02424DB0 STR X30, [X31 - 0x30]!
	0x02424DB4 STP X22, X21, [X31 + 0x10]
	0x02424DB8 STP X20, X19, [X31 + 0x20]
	0x02424DBC LDR X8, [X1 + 0x20]
	0x02424DC0 MOV X19, X1
	0x02424DC4 MOV X22, X0
	0x02424DC8 LDR X8, [X8 + 0xC0]
	0x02424DCC LDR X1, [X8 + 0x38]
	0x02424DD0 LDR X8, [X1]
	0x02424DD4 BLR X8
	0x02424DD8 CBZ X0, 0x2424EAC
	0x02424DDC LDR X8, [X19 + 0x20]
	0x02424DE0 MOV X20, X0
	0x02424DE4 LDR X8, [X8 + 0xC0]
	0x02424DE8 LDR X1, [X8 + 0x50]
	0x02424DEC LDR X8, [X1]
	0x02424DF0 BLR X8
	0x02424DF4 CBZ X0, 0x2424EAC
	0x02424DF8 LDR X8, [X19 + 0x20]
	0x02424DFC MOV X21, X0
	0x02424E00 LDR X8, [X8 + 0xC0]
	0x02424E04 LDR X1, [X8 + 0x50]
	0x02424E08 LDR X8, [X1]
	0x02424E0C BLR X8
	0x02424E10 LDR X8, [X19 + 0x20]
	0x02424E14 MOV X1, X0
	0x02424E18 MOV X0, X22
	0x02424E1C LDR X8, [X8 + 0xC0]
	0x02424E20 LDR X2, [X8 + 0x98]
	0x02424E24 LDR X8, [X2]
	0x02424E28 BLR X8
	0x02424E2C LDR X8, [X19 + 0x20]
	0x02424E30 MOV X0, X21
	0x02424E34 MOV X1, X22
	0x02424E38 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X1+32]
	007 Move X19, X1
	008 Move X20, X0
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X8, [X8+192]
	018 Move X0, X20
	019 Move X8, [X8]
	020 Move X1, [X8+128]
	021 Call 0x1C17D18
	022 Move W8, [X0]
	023 Move TEMP, X8
	024 And TEMP, TEMP, -2147483648
	025 Compare TEMP, -2147483648
	026 JumpIfEqual {87}
	027 Move X0, [X19+32]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Move X8, [X0+192]
	035 Move X0, X20
	036 Move X8, [X8]
	037 Move X1, [X8+128]
	038 Call 0x1C17D18
	039 Move X8, [X19+32]
	040 Move W21, [X0]
	041 Add X9, X8, 309
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 Move TEMP, X9
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {52}
	047 Move X0, X8
	048 Call 0x1C5D684
	049 Move X8, [X19+32]
	050 Add X9, X8, 309
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X0, X8
	053 Move X10, [X0+192]
	054 Move X10, [X10+120]
	055 Move X22, [X10]
	056 Move TEMP, X9
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {63}
	060 Move X0, X8
	061 Call 0x1C5D684
	062 Move X8, X0
	063 Move X8, [X8+192]
	064 Move X0, X20
	065 Move X1, [X8+120]
	066 NotImplemented "Instruction BLR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X0, [X19+32]
	069 Move W8, [X0+309]
	070 Move TEMP, X8
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {75}
	074 Call 0x1C5D684
	075 Move X8, [X0+192]
	076 Move X0, X20
	077 Move X8, [X8]
	078 Move X1, [X8+128]
	079 Call 0x1C17D18
	080 Move W0, [X0]
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X30, [X31+48]
	086 Return X0
	087 Move X0, [X19+32]
	088 Call 0x199C99C
	089 Move X8, [X0+192]
	090 Move X0, X20
	091 Move X8, [X8]
	092 Move X1, [X8+128]
	093 Call 0x1C17D18
	094 Move W8, [X0]
	095 Move X0, 0x1CD0000
	096 Move [X31+12], W8
	097 Move X0, [X0+1880]
	098 Call 0x1C17D08
	099 Add X1, X31, 12
	100 Call 0x1C17E04
	101 Move X20, X0
	102 Move X0, 0x1CF9000
	103 Move X0, [X0+3288]
	104 Call 0x1C17D08
	105 Move X1, X20
	106 Move X2, X31
	107 Call String.Format, X0, X1
	108 Move X20, X0
	109 Move X0, 0x1CD0000
	110 Move X0, [X0+1456]
	111 Call 0x1C17D08
	112 Call 0x1C17F10
	113 Move X1, X20
	114 Move X2, X31
	115 Move X21, X0
	116 Call InvalidOperationException..ctor, X0, X1
	117 Move X0, X21
	118 Move X1, X19
	119 Call 0x1C17DEC

