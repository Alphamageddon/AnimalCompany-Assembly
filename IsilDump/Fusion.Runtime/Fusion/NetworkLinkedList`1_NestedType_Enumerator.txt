Type: Fusion.NetworkLinkedList`1/Enumerator

Method: System.Void .ctor(Fusion.NetworkLinkedList`1<T> list)

Disassembly:
	0x02BD851C BL 0x1C16F10
	0x02BD8520 MOV X20, X0
	0x02BD8524 ADRP X0, 0x1546000
	0x02BD8528 LDR X0, [X0 + 0xC58]
	0x02BD852C BL 0x1C16D08
	0x02BD8530 MOV X1, X0
	0x02BD8534 MOV X0, X20
	0x02BD8538 MOV X2, X31

ISIL:
	001 Move X8, [X1+16]
	002 Move V0, [X1]
	003 Move W9, 1
	004 Move [X0+4], W31
	005 Move [X0+24], X8
	006 Move [X0+8], V0
	007 Move [X0], W9
	008 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x02BD853C BL 0x337DF1C
	0x02BD8540 MOV X0, X20
	0x02BD8544 MOV X1, X19
	0x02BD8548 BL 0x1C16DEC
	0x02BD854C BL 0x1C16F20
	0x02BD8550 BL 0x1C16F28
	0x02BD8554 BL 0x3EB1B20
	0x02BD8558 STP X29, X30, [X31 - 0x40]!
	0x02BD855C STR X23, [X31 + 0x10]
	0x02BD8560 STP X22, X21, [X31 + 0x20]
	0x02BD8564 STP X20, X19, [X31 + 0x30]
	0x02BD8568 ADD X29, X31, 0x0
	0x02BD856C SUB X31, X31, 0x10
	0x02BD8570 MRS X23, 0xC000
	0x02BD8574 LDR X8, [X23 + 0x28]
	0x02BD8578 MOV X19, X1
	0x02BD857C MOV X20, X0
	0x02BD8580 STUR X8, [X29 - 0x8]
	0x02BD8584 LDR X8, [X1 + 0x20]
	0x02BD8588 ADD X9, X8, 0x135
	0x02BD858C LDRH W9, [X9]
	0x02BD8590 TBNZ X9, 0x0, 0x2BD85AC
	0x02BD8594 MOV X0, X8
	0x02BD8598 BL 0x1C5C684
	0x02BD859C LDR X8, [X19 + 0x20]
	0x02BD85A0 ADD X9, X8, 0x135
	0x02BD85A4 LDRH W9, [X9]
	0x02BD85A8 B 0x2BD85B0
	0x02BD85AC MOV X0, X8
	0x02BD85B0 LDR X10, [X0 + 0xC0]
	0x02BD85B4 ADD X11, X31, 0x0
	0x02BD85B8 LDR X10, [X10 + 0x10]
	0x02BD85BC LDR W10, [X10 + 0xFC]
	0x02BD85C0 ADD X10, X10, 0xF
	0x02BD85C4 AND X10, X10, 0x1FFFFFFFF
	0x02BD85C8 SUB X21, X11, X10
	0x02BD85CC ADD X31, X21, 0x0
	0x02BD85D0 TBNZ X9, 0x0, 0x2BD85EC
	0x02BD85D4 MOV X0, X8
	0x02BD85D8 BL 0x1C5C684
	0x02BD85DC LDR X8, [X19 + 0x20]
	0x02BD85E0 ADD X9, X8, 0x135
	0x02BD85E4 LDRH W9, [X9]
	0x02BD85E8 B 0x2BD85F0
	0x02BD85EC MOV X0, X8
	0x02BD85F0 LDR X10, [X0 + 0xC0]
	0x02BD85F4 LDR X10, [X10 + 0x18]
	0x02BD85F8 LDR X22, [X10]
	0x02BD85FC TBNZ X9, 0x0, 0x2BD860C
	0x02BD8600 MOV X0, X8
	0x02BD8604 BL 0x1C5C684
	0x02BD8608 MOV X8, X0
	0x02BD860C LDR X8, [X8 + 0xC0]
	0x02BD8610 SUB X3, X29, 0x10
	0x02BD8614 MOV X0, X22
	0x02BD8618 MOV X2, X20
	0x02BD861C LDR X1, [X8 + 0x18]
	0x02BD8620 STUR X21, [X29 - 0x10]
	0x02BD8624 MOV X4, X21
	0x02BD8628 LDR X8, [X1 + 0x10]
	0x02BD862C BLR X8
	0x02BD8630 LDR X0, [X19 + 0x20]
	0x02BD8634 LDRB W8, [X0 + 0x135]
	0x02BD8638 TBNZ X8, 0x0, 0x2BD8640
	0x02BD863C BL 0x1C5C684
	0x02BD8640 LDR X8, [X0 + 0xC0]
	0x02BD8644 MOV X1, X21
	0x02BD8648 LDR X0, [X8 + 0x10]
	0x02BD864C BL 0x1C16E04
	0x02BD8650 LDR X8, [X23 + 0x28]
	0x02BD8654 LDUR X9, [X29 - 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0]
	007 Move X19, X0
	008 Move X22, X1
	009 Compare W8, 0
	010 JumpIfEqual {25}
	011 Move X20, X19
	012 Move [X20+8], W31
	013 Move X8, [X22+32]
	014 Add X9, X8, 309
	015 NotImplemented "Instruction LDRH not yet implemented."
	016 Move TEMP, X9
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {41}
	020 Move X0, X8
	021 Call 0x1C5D684
	022 Move X8, [X22+32]
	023 Add X9, X8, 309
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Move W20, [X19+4]
	026 Compare W20, 0
	027 JumpIfEqual {78}
	028 Move X8, [X22+32]
	029 Add X21, X19, 8
	030 Add X9, X8, 309
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move TEMP, X9
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {56}
	036 Move X0, X8
	037 Call 0x1C5D684
	038 Move X8, [X22+32]
	039 Add X9, X8, 309
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Move X0, X8
	042 Move X10, [X0+192]
	043 Move X10, [X10+16]
	044 Move X21, [X10]
	045 Move TEMP, X9
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {52}
	049 Move X0, X8
	050 Call 0x1C5D684
	051 Move X8, X0
	052 Move X8, [X8+192]
	053 Move X0, X20
	054 Move X1, [X8+16]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X0, X8
	057 Move X10, [X0+192]
	058 Move X10, [X10+32]
	059 Move X22, [X10]
	060 Move TEMP, X9
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {67}
	064 Move X0, X8
	065 Call 0x1C5D684
	066 Move X8, X0
	067 Move X8, [X8+192]
	068 Move X0, X21
	069 Move W1, W20
	070 Move X2, [X8+32]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move W0, [X0+4]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move [X19+4], W0
	075 Move W8, [X19+20]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction CSET not yet implemented."
	078 Move W0, W31
	079 Move X20, [X31+32]
	080 Move X19, [X31+40]
	081 Move X22, [X31+16]
	082 Move X21, [X31+24]
	083 Move X30, [X31+48]
	084 Return X0

Method: System.Void Reset()

Disassembly:
	0x02BD8658 CMP X8, X9
	0x02BD865C B.NE 0x2BD8678

ISIL:
	001 Move [X0+4], W31
	002 Return 

Method: T get_Current()

Disassembly:
	0x02BD8660 ADD X31, X29, 0x0
	0x02BD8664 LDP X20, X19, [X31 + 0x30]
	0x02BD8668 LDP X22, X21, [X31 + 0x20]
	0x02BD866C LDR X23, [X31 + 0x10]
	0x02BD8670 LDP X29, X30, [X31], #0x40
	0x02BD8674 RET
	0x02BD8678 BL 0x3EB1B20
	0x02BD867C SUB X31, X31, 0x30
	0x02BD8680 STP X30, X21, [X31 + 0x10]
	0x02BD8684 STP X20, X19, [X31 + 0x20]
	0x02BD8688 LDR X8, [X2 + 0x20]
	0x02BD868C MOV X21, X2
	0x02BD8690 MOV X19, X1
	0x02BD8694 MOV X20, X0
	0x02BD8698 LDRB W9, [X8 + 0x135]
	0x02BD869C TBNZ X9, 0x0, 0x2BD86AC
	0x02BD86A0 MOV X0, X8
	0x02BD86A4 BL 0x1C5C684
	0x02BD86A8 MOV X8, X0
	0x02BD86AC LDR X8, [X8 + 0xC0]
	0x02BD86B0 LDR X0, [X8 + 0x10]
	0x02BD86B4 LDRB W8, [X0 + 0x135]
	0x02BD86B8 TBNZ X8, 0x0, 0x2BD86C0
	0x02BD86BC BL 0x1C5C684
	0x02BD86C0 LDR W8, [X0 + 0xE0]
	0x02BD86C4 CBNZ W8, 0x2BD86CC
	0x02BD86C8 BL 0x1C16DFC
	0x02BD86CC LDR X8, [X21 + 0x20]
	0x02BD86D0 ADD X9, X8, 0x135
	0x02BD86D4 LDRH W9, [X9]
	0x02BD86D8 TBNZ X9, 0x0, 0x2BD86F4
	0x02BD86DC MOV X0, X8
	0x02BD86E0 BL 0x1C5C684
	0x02BD86E4 LDR X8, [X21 + 0x20]
	0x02BD86E8 ADD X9, X8, 0x135
	0x02BD86EC LDRH W9, [X9]
	0x02BD86F0 B 0x2BD86F8
	0x02BD86F4 MOV X0, X8
	0x02BD86F8 LDR X10, [X0 + 0xC0]
	0x02BD86FC LDR X10, [X10 + 0x8]
	0x02BD8700 LDR X4, [X10]
	0x02BD8704 TBNZ X9, 0x0, 0x2BD871C
	0x02BD8708 MOV X0, X8
	0x02BD870C STR X4, [X31 + 0x8]
	0x02BD8710 BL 0x1C5C684
	0x02BD8714 LDR X4, [X31 + 0x8]
	0x02BD8718 MOV X8, X0
	0x02BD871C LDR X8, [X8 + 0xC0]
	0x02BD8720 MOV X0, X20
	0x02BD8724 MOV X1, X19
	0x02BD8728 LDP X20, X19, [X31 + 0x20]
	0x02BD872C LDR X3, [X8 + 0x8]
	0x02BD8730 LDP X30, X21, [X31 + 0x10]
	0x02BD8734 MOV W2, W31
	0x02BD8738 ADD X31, X31, 0x30
	0x02BD873C BR X4
	0x02BD8740 STR X30, [X31 - 0x40]!
	0x02BD8744 STP X24, X23, [X31 + 0x10]
	0x02BD8748 STP X22, X21, [X31 + 0x20]
	0x02BD874C STP X20, X19, [X31 + 0x30]
	0x02BD8750 STR X1, [X0]
	0x02BD8754 CBZ X1, 0x2BD8980
	0x02BD8758 LDR X8, [X1]
	0x02BD875C MOV X22, X1
	0x02BD8760 MOV X19, X0
	0x02BD8764 MOV X0, X22
	0x02BD8768 LDR X9, [X8 + 0x288]
	0x02BD876C LDR X1, [X8 + 0x290]
	0x02BD8770 MOV X20, X3
	0x02BD8774 MOV W21, W2
	0x02BD8778 BLR X9
	0x02BD877C LDR W8, [X22 + 0x24]
	0x02BD8780 STR W8, [X19 + 0x8]
	0x02BD8784 LDR X8, [X20 + 0x20]
	0x02BD8788 ADD X9, X8, 0x135
	0x02BD878C LDRH W9, [X9]
	0x02BD8790 TBNZ X9, 0x0, 0x2BD87AC
	0x02BD8794 MOV X0, X8
	0x02BD8798 BL 0x1C5C684
	0x02BD879C LDR X8, [X20 + 0x20]
	0x02BD87A0 ADD X9, X8, 0x135
	0x02BD87A4 LDRH W9, [X9]
	0x02BD87A8 B 0x2BD87B0
	0x02BD87AC MOV X0, X8
	0x02BD87B0 LDR X10, [X0 + 0xC0]
	0x02BD87B4 LDR X10, [X10 + 0x28]
	0x02BD87B8 LDR X23, [X10]
	0x02BD87BC TBNZ X9, 0x0, 0x2BD87CC
	0x02BD87C0 MOV X0, X8
	0x02BD87C4 BL 0x1C5C684
	0x02BD87C8 MOV X8, X0
	0x02BD87CC LDR X8, [X8 + 0xC0]
	0x02BD87D0 MOV X0, X22
	0x02BD87D4 LDR X1, [X8 + 0x28]
	0x02BD87D8 BLR X23
	0x02BD87DC LDR X8, [X20 + 0x20]
	0x02BD87E0 MOV W22, W0
	0x02BD87E4 ADD X9, X8, 0x135
	0x02BD87E8 LDRH W9, [X9]
	0x02BD87EC TBNZ X9, 0x0, 0x2BD8808
	0x02BD87F0 MOV X0, X8
	0x02BD87F4 BL 0x1C5C684
	0x02BD87F8 LDR X8, [X20 + 0x20]
	0x02BD87FC ADD X9, X8, 0x135
	0x02BD8800 LDRH W9, [X9]
	0x02BD8804 B 0x2BD880C
	0x02BD8808 MOV X0, X8
	0x02BD880C LDR X10, [X0 + 0xC0]
	0x02BD8810 ADD W22, W22, 0x1
	0x02BD8814 LDR X10, [X10 + 0x30]
	0x02BD8818 LDR X23, [X10]

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Add X29, X31, 0
	012 Subtract X31, X31, 32
	013 NotImplemented "Instruction MRS not yet implemented."
	014 Move X8, [X25+40]
	015 Move X22, X2
	016 Move X19, X1
	017 Move X23, X0
	018 Move [X29-8], X8
	019 Move X8, [X2+32]
	020 Move W9, [X8+309]
	021 Move TEMP, X9
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {28}
	025 Move X0, X8
	026 Call 0x1C5D684
	027 Move X8, X0
	028 Move X8, [X8+192]
	029 Move X8, [X8+48]
	030 Move W20, [X8+252]
	031 Add X8, X31, 0
	032 Add X9, X20, 15
	033 And X9, X9, 0x1FFFFFFFF
	034 Subtract X21, X8, X9
	035 Add X31, X21, 0
	036 Move W24, [X23+4]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W8, [X23+20]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X8, [X22+32]
	041 Add X23, X23, 8
	042 Add X9, X8, 309
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move TEMP, X9
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {53}
	048 Move X0, X8
	049 Call 0x1C5D684
	050 Move X8, [X22+32]
	051 Add X9, X8, 309
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Move X0, X8
	054 Move X10, [X0+192]
	055 Move X10, [X10+32]
	056 Move X26, [X10]
	057 Move TEMP, X9
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {64}
	061 Move X0, X8
	062 Call 0x1C5D684
	063 Move X8, X0
	064 Move X8, [X8+192]
	065 Move X0, X23
	066 Move W1, W24
	067 Move X2, [X8+32]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X8, [X22+32]
	070 Move X24, X0
	071 Add X9, X8, 309
	072 NotImplemented "Instruction LDRH not yet implemented."
	073 Move TEMP, X9
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {82}
	077 Move X0, X8
	078 Call 0x1C5D684
	079 Move X8, [X22+32]
	080 Add X9, X8, 309
	081 NotImplemented "Instruction LDRH not yet implemented."
	082 Move X0, X8
	083 Move X10, [X0+192]
	084 Move X10, [X10+40]
	085 Move X22, [X10]
	086 Move TEMP, X9
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {93}
	090 Move X0, X8
	091 Call 0x1C5D684
	092 Move X8, X0
	093 Move X8, [X8+192]
	094 Subtract X3, X29, 24
	095 Move X0, X22
	096 Move X2, X23
	097 Move X1, [X8+40]
	098 Move [X29-24], X24
	099 Move [X29-16], X21
	100 Move X4, X21
	101 Move X8, [X1+16]
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move X0, X19
	104 Move X1, X21
	105 Move X2, X20
	106 Call 0x3EB2AC0
	107 Move X8, [X25+40]
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Add X31, X29, 0
	111 Move X20, [X31+64]
	112 Move X19, [X31+72]
	113 Move X22, [X31+48]
	114 Move X21, [X31+56]
	115 Move X24, [X31+32]
	116 Move X23, [X31+40]
	117 Move X26, [X31+16]
	118 Move X25, [X31+24]
	119 Move X29, [X31+80]
	120 Move X30, [X31+88]
	121 Return X0
	122 Move X0, 0x151C000
	123 Move X0, [X0+1456]
	124 Call 0x1C17D08
	125 Call 0x1C17F10
	126 Move X1, X31
	127 Move X19, X0
	128 Call InvalidOperationException..ctor, X0
	129 Move X0, X19
	130 Move X1, X22
	131 Call 0x1C17DEC
	132 Call 0x3EB2B20

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x02BD881C TBNZ X9, 0x0, 0x2BD882C
	0x02BD8820 MOV X0, X8
	0x02BD8824 BL 0x1C5C684
	0x02BD8828 MOV X8, X0
	0x02BD882C LDR X8, [X8 + 0xC0]
	0x02BD8830 MOV W0, W22
	0x02BD8834 LDR X1, [X8 + 0x30]
	0x02BD8838 BLR X23
	0x02BD883C LDR X8, [X20 + 0x20]
	0x02BD8840 MOV W22, W0
	0x02BD8844 LDRB W9, [X8 + 0x135]
	0x02BD8848 TBNZ X9, 0x0, 0x2BD8858
	0x02BD884C MOV X0, X8
	0x02BD8850 BL 0x1C5C684
	0x02BD8854 MOV X8, X0
	0x02BD8858 LDR X8, [X8 + 0xC0]
	0x02BD885C LDR X0, [X8 + 0x40]
	0x02BD8860 LDRB W8, [X0 + 0x135]
	0x02BD8864 TBNZ X8, 0x0, 0x2BD886C
	0x02BD8868 BL 0x1C5C684
	0x02BD886C AND W23, W21, 0x1
	0x02BD8870 BL 0x1C16F10
	0x02BD8874 LDR X8, [X20 + 0x20]
	0x02BD8878 MOV X21, X0
	0x02BD887C ADD X9, X8, 0x135
	0x02BD8880 LDRH W9, [X9]
	0x02BD8884 TBNZ X9, 0x0, 0x2BD88A0
	0x02BD8888 MOV X0, X8
	0x02BD888C BL 0x1C5C684
	0x02BD8890 LDR X8, [X20 + 0x20]
	0x02BD8894 ADD X9, X8, 0x135
	0x02BD8898 LDRH W9, [X9]
	0x02BD889C B 0x2BD88A4
	0x02BD88A0 MOV X0, X8
	0x02BD88A4 LDR X10, [X0 + 0xC0]
	0x02BD88A8 UBFM W22, W22, 0x1F, 0x1E
	0x02BD88AC LDR X10, [X10 + 0x48]
	0x02BD88B0 LDR X24, [X10]
	0x02BD88B4 TBNZ X9, 0x0, 0x2BD88C4
	0x02BD88B8 MOV X0, X8
	0x02BD88BC BL 0x1C5C684
	0x02BD88C0 MOV X8, X0
	0x02BD88C4 LDR X8, [X8 + 0xC0]
	0x02BD88C8 MOV X0, X21
	0x02BD88CC MOV W1, W22
	0x02BD88D0 LDR X2, [X8 + 0x48]
	0x02BD88D4 BLR X24
	0x02BD88D8 STP X21, X31, [X19 + 0x10]
	0x02BD88DC STRB W23, [X19 + 0x20]
	0x02BD88E0 LDR X0, [X20 + 0x20]
	0x02BD88E4 LDRB W8, [X0 + 0x135]
	0x02BD88E8 TBNZ X8, 0x0, 0x2BD88F0
	0x02BD88EC BL 0x1C5C684
	0x02BD88F0 LDR X8, [X0 + 0xC0]
	0x02BD88F4 LDR X0, [X8 + 0x10]
	0x02BD88F8 LDRB W8, [X0 + 0x135]
	0x02BD88FC TBNZ X8, 0x0, 0x2BD8904
	0x02BD8900 BL 0x1C5C684
	0x02BD8904 LDR W8, [X0 + 0xE0]
	0x02BD8908 CBNZ W8, 0x2BD8910
	0x02BD890C BL 0x1C16DFC
	0x02BD8910 LDR X8, [X20 + 0x20]
	0x02BD8914 ADD X9, X8, 0x135
	0x02BD8918 LDRH W9, [X9]
	0x02BD891C TBNZ X9, 0x0, 0x2BD8938
	0x02BD8920 MOV X0, X8
	0x02BD8924 BL 0x1C5C684
	0x02BD8928 LDR X8, [X20 + 0x20]
	0x02BD892C ADD X9, X8, 0x135
	0x02BD8930 LDRH W9, [X9]
	0x02BD8934 B 0x2BD893C
	0x02BD8938 MOV X0, X8
	0x02BD893C LDR X10, [X0 + 0xC0]

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Add X29, X31, 0
	009 Subtract X31, X31, 16
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X23+40]
	012 Move X19, X1
	013 Move X20, X0
	014 Move [X29-8], X8
	015 Move X8, [X1+32]
	016 Add X9, X8, 309
	017 NotImplemented "Instruction LDRH not yet implemented."
	018 Move TEMP, X9
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, X8
	023 Call 0x1C5D684
	024 Move X8, [X19+32]
	025 Add X9, X8, 309
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X0, X8
	028 Move X10, [X0+192]
	029 Add X11, X31, 0
	030 Move X10, [X10+48]
	031 Move W10, [X10+252]
	032 Add X10, X10, 15
	033 And X10, X10, 0x1FFFFFFFF
	034 Subtract X21, X11, X10
	035 Add X31, X21, 0
	036 Move TEMP, X9
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {45}
	040 Move X0, X8
	041 Call 0x1C5D684
	042 Move X8, [X19+32]
	043 Add X9, X8, 309
	044 NotImplemented "Instruction LDRH not yet implemented."
	045 Move X0, X8
	046 Move X10, [X0+192]
	047 Move X10, [X10+56]
	048 Move X22, [X10]
	049 Move TEMP, X9
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {56}
	053 Move X0, X8
	054 Call 0x1C5D684
	055 Move X8, X0
	056 Move X8, [X8+192]
	057 Subtract X3, X29, 16
	058 Move X0, X22
	059 Move X2, X20
	060 Move X1, [X8+56]
	061 Move [X29-16], X21
	062 Move X4, X21
	063 Move X8, [X1+16]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X0, [X19+32]
	066 Move W8, [X0+309]
	067 Move TEMP, X8
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {72}
	071 Call 0x1C5D684
	072 Move X8, [X0+192]
	073 Move X1, X21
	074 Move X0, [X8+48]
	075 Call 0x1C17E04
	076 Move X8, [X23+40]
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Add X31, X29, 0
	080 Move X20, [X31+48]
	081 Move X19, [X31+56]
	082 Move X22, [X31+32]
	083 Move X21, [X31+40]
	084 Move X23, [X31+16]
	085 Move X29, [X31+64]
	086 Move X30, [X31+72]
	087 Return X0
	088 Call 0x3EB2B20

Method: System.Void Dispose()

Disassembly:
	0x02BD8940 LDR X10, [X10 + 0x58]
	0x02BD8944 LDR X2, [X10]
	0x02BD8948 TBNZ X9, 0x0, 0x2BD8960
	0x02BD894C MOV X0, X8
	0x02BD8950 STR X2, [X31 + 0x8]

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0+8], X31
	005 Move [X0+16], X31
	006 Move [X0+24], X31
	007 Move [X0+4], W8
	008 Return 

