Type: Fusion.TickRate

Method: System.Int32 get_Client()

Disassembly:
	0x01E915FC MOVZ W8, 0x1
	0x01E91600 STRB W8, [X23 + 0x278]

ISIL:
	001 Move W0, [X0+4]
	002 Return X0

Method: System.Int32 get_Count()

Disassembly:
	0x01E91604 LDR X0, [X22]
	0x01E91608 STP X31, X31, [X31]

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.Int32 get_Item(System.Int32 index)

Disassembly:
	0x01E9160C STR W31, [X31 + 0x10]
	0x01E91610 LDR W8, [X0 + 0xE0]
	0x01E91614 CBNZ W8, 0x1E9161C
	0x01E91618 BL 0x1C16DFC
	0x01E9161C BL 0x1E913D8
	0x01E91620 LDR X8, [X22]
	0x01E91624 LDR X8, [X8 + 0xB8]
	0x01E91628 LDR X0, [X8 + 0x10]
	0x01E9162C CBZ X0, 0x1E91680
	0x01E91630 ADRP X8, 0x226D000
	0x01E91634 LDR X8, [X8 + 0x208]
	0x01E91638 ADD X2, X31, 0x0
	0x01E9163C MOV W1, W20
	0x01E91640 LDR X3, [X8]
	0x01E91644 BL 0x2A1E474
	0x01E91648 TBZ X0, 0x0, 0x1E91684
	0x01E9164C LDR W8, [X31 + 0x10]
	0x01E91650 LDR V0, [X31]
	0x01E91654 STR W8, [X19 + 0x10]
	0x01E91658 STR V0, [X19]
	0x01E9165C LDR X8, [X21 + 0x28]
	0x01E91660 LDR X9, [X31 + 0x18]
	0x01E91664 CMP X8, X9
	0x01E91668 B.NE 0x1E916CC
	0x01E9166C LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2549000
	007 Move X22, 0x226E000
	008 Move W8, [X21+622]
	009 Move X22, [X22+360]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x226E000
	017 Move X0, [X0+360]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+622], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X8, X20, W19
	027 Move W0, [X8+4]
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: System.Void .ctor(System.Int32[] rates)

Disassembly:
	0x01E9167C RET
	0x01E91680 BL 0x1C16F20
	0x01E91684 ADRP X0, 0x2262000
	0x01E91688 LDR X0, [X0 + 0x5B0]
	0x01E9168C BL 0x1C16D08
	0x01E91690 BL 0x1C16F10
	0x01E91694 MOV X19, X0
	0x01E91698 ADRP X0, 0x226D000
	0x01E9169C LDR X0, [X0 + 0x210]
	0x01E916A0 BL 0x1C16D08
	0x01E916A4 MOV X1, X0
	0x01E916A8 MOV X0, X19
	0x01E916AC MOV X2, X31
	0x01E916B0 BL 0x337DF1C
	0x01E916B4 ADRP X0, 0x226D000
	0x01E916B8 LDR X0, [X0 + 0x218]
	0x01E916BC BL 0x1C16D08
	0x01E916C0 MOV X1, X0
	0x01E916C4 MOV X0, X19
	0x01E916C8 BL 0x1C16DEC
	0x01E916CC BL 0x3EB1B20
	0x01E916D0 SUB X31, X31, 0x70
	0x01E916D4 STP X30, X23, [X31 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {21}
	004 Move X8, [X1+24]
	005 Move [X0], W8
	006 Move X9, [X1+24]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 And X9, X9, 0
	009 Move X8, X31
	010 Add X10, X0, 4
	011 Move X11, W9
	012 Add X12, X1, 32
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move W13, [X12]
	015 Add X8, X8, 1
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move [X10+4], W13
	018 Move X30, [X31+16]
	019 Return 
	020 Call 0x1C17F28
	021 Call 0x1C17F20

Method: System.Int32 GetDivisor(System.Int32 index)

Disassembly:
	0x01E916D8 STP X22, X21, [X31 + 0x50]
	0x01E916DC STP X20, X19, [X31 + 0x60]
	0x01E916E0 MRS X21, 0xC000
	0x01E916E4 LDR X8, [X21 + 0x28]
	0x01E916E8 ADRP X23, 0x2548000
	0x01E916EC ADRP X22, 0x226D000
	0x01E916F0 MOV X19, X1
	0x01E916F4 STR X8, [X31 + 0x38]
	0x01E916F8 LDRB W8, [X23 + 0x279]
	0x01E916FC LDR X22, [X22 + 0x168]
	0x01E91700 MOV X20, X0
	0x01E91704 TBNZ X8, 0x0, 0x1E91740
	0x01E91708 ADRP X0, 0x226D000
	0x01E9170C LDR X0, [X0 + 0x220]
	0x01E91710 BL 0x1C16CF4
	0x01E91714 ADRP X0, 0x226D000
	0x01E91718 LDR X0, [X0 + 0x168]
	0x01E9171C BL 0x1C16CF4
	0x01E91720 ADRP X0, 0x226D000
	0x01E91724 LDR X0, [X0 + 0x228]
	0x01E91728 BL 0x1C16CF4
	0x01E9172C ADRP X0, 0x226D000
	0x01E91730 LDR X0, [X0 + 0x230]
	0x01E91734 BL 0x1C16CF4
	0x01E91738 MOVZ W8, 0x1
	0x01E9173C STRB W8, [X23 + 0x279]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2549000
	007 Move X22, 0x226E000
	008 Move W8, [X21+623]
	009 Move X22, [X22+360]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x226E000
	017 Move X0, [X0+360]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+623], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X20, X20, 4
	027 Move W8, [X20]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move W9, [X20]
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 NotImplemented "Instruction SDIV not yet implemented."
	034 Move X30, [X31+48]
	035 Return X0

Method: System.Int32 GetTickRate(System.Int32 index)

Disassembly:
	0x01E91670 LDP X22, X21, [X31 + 0x30]
	0x01E91674 LDP X30, X23, [X31 + 0x20]
	0x01E91678 ADD X31, X31, 0x50

ISIL:
	001 Add X8, X0, W1
	002 Move W0, [X8+4]
	003 Return X0

Method: System.Int32[] ToArray()

Disassembly:
	0x01E91740 LDR X0, [X22]
	0x01E91744 STP X31, X31, [X31 + 0x20]
	0x01E91748 STR W31, [X31 + 0x30]
	0x01E9174C ADRP X23, 0x226D000
	0x01E91750 LDR W8, [X0 + 0xE0]
	0x01E91754 LDR X23, [X23 + 0x230]
	0x01E91758 CBNZ W8, 0x1E91760
	0x01E9175C BL 0x1C16DFC
	0x01E91760 BL 0x1E913D8
	0x01E91764 MOV W0, W20
	0x01E91768 BL 0x1E91528
	0x01E9176C LDR X1, [X23]
	0x01E91770 AND W0, W0, 0x1
	0x01E91774 MOV X2, X31
	0x01E91778 BL 0x1E3BA60
	0x01E9177C LDR X8, [X22]
	0x01E91780 LDR X8, [X8 + 0xB8]
	0x01E91784 LDR X0, [X8 + 0x10]
	0x01E91788 CBZ X0, 0x1E91838
	0x01E9178C ADRP X8, 0x226D000
	0x01E91790 LDR X8, [X8 + 0x220]
	0x01E91794 ADRP X22, 0x226D000
	0x01E91798 MOV W1, W20
	0x01E9179C LDR X2, [X8]
	0x01E917A0 LDR X22, [X22 + 0x228]
	0x01E917A4 ADD X8, X31, 0x8
	0x01E917A8 BL 0x2A1C6D0
	0x01E917AC LDUR V0, [X31 + 0x8]
	0x01E917B0 LDR W8, [X31 + 0x18]
	0x01E917B4 ADD X0, X31, 0x20
	0x01E917B8 MOV X1, X20
	0x01E917BC MOV X2, X19
	0x01E917C0 STR V0, [X31 + 0x2]
	0x01E917C4 STR W8, [X31 + 0x30]
	0x01E917C8 ADD X23, X31, 0x20
	0x01E917CC BL 0x1E909DC
	0x01E917D0 LDR X1, [X22]
	0x01E917D4 CMP W0, 0x0
	0x01E917D8 CSET W0, EQ
	0x01E917DC MOV X2, X31
	0x01E917E0 BL 0x1E3BA60
	0x01E917E4 SBFM X10, X20, 0x1E, 0x3F
	0x01E917E8 SBFM X11, X19, 0x1E, 0x3F
	0x01E917EC ORR X9, X23, 0x7
	0x01E917F0 SBFM X8, X19, 0x3E, 0x1F
	0x01E917F4 AND X10, X10, 0xFFFFFFFF
	0x01E917F8 AND X11, X11, 0xFFFFFFFF
	0x01E917FC LDR W0, [X31 + 0x24]
	0x01E91800 LDR W8, [X8, X9, LSL]
	0x01E91804 LDR W1, [X10, X9, LSL]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x2549000
	008 Move X19, 0x2264000
	009 Move W8, [X21+624]
	010 Move X19, [X19+3672]
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x2264000
	017 Move X0, [X0+3672]
	018 Call 0x1C17CF4
	019 Move X0, 0x226E000
	020 Move X0, [X0+360]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+624], W8
	024 Move W1, [X20]
	025 Move X0, [X19]
	026 Call 0x1C17D6C
	027 Compare X0, 0
	028 JumpIfEqual {58}
	029 Move X8, [X0+24]
	030 Move X19, X0
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X22, 0x226E000
	033 Move X22, [X22+360]
	034 Move X21, X31
	035 Add X20, X20, 4
	036 And X8, X8, 0
	037 Add X23, X19, 32
	038 Move X0, [X22]
	039 Move W9, [X0+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move W8, [X19+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W9, [X20+4]
	046 Move [X23], W9
	047 Add X21, X21, 1
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X0, X19
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Move X23, [X31+56]
	056 Return X0
	057 Call 0x1C17F28
	058 Call 0x1C17F20

Method: System.Boolean Validate()

Disassembly:
	0x01E91808 LDR W9, [X11, X9, LSL]
	0x01E9180C LDR X10, [X21 + 0x28]
	0x01E91810 LDR X11, [X31 + 0x38]
	0x01E91814 CMP X10, X11
	0x01E91818 B.NE 0x1E9183C
	0x01E9181C LDP X20, X19, [X31 + 0x60]
	0x01E91820 LDP X22, X21, [X31 + 0x50]
	0x01E91824 LDP X30, X23, [X31 + 0x40]
	0x01E91828 BFM X1, X9, 0x20, 0x1F
	0x01E9182C BFM X0, X8, 0x20, 0x1F
	0x01E91830 ADD X31, X31, 0x70
	0x01E91834 RET
	0x01E91838 BL 0x1C16F20
	0x01E9183C BL 0x3EB1B20
	0x01E91840 STP W1, W2, [X0]
	0x01E91844 STP W3, W4, [X0 + 0x8]
	0x01E91848 RET
	0x01E9184C STR X30, [X31 - 0x20]!
	0x01E91850 STP X20, X19, [X31 + 0x10]
	0x01E91854 ADRP X20, 0x2548000
	0x01E91858 ADRP X19, 0x226D000
	0x01E9185C LDRB W8, [X20 + 0x27A]
	0x01E91860 LDR X19, [X19 + 0x168]
	0x01E91864 TBNZ X8, 0x0, 0x1E9187C
	0x01E91868 ADRP X0, 0x226D000
	0x01E9186C LDR X0, [X0 + 0x168]
	0x01E91870 BL 0x1C16CF4
	0x01E91874 MOVZ W8, 0x1
	0x01E91878 STRB W8, [X20 + 0x27A]
	0x01E9187C LDR X0, [X19]
	0x01E91880 LDR W8, [X0 + 0xE0]
	0x01E91884 CBNZ W8, 0x1E9188C
	0x01E91888 BL 0x1C16DFC
	0x01E9188C BL 0x1E913D8
	0x01E91890 LDR X8, [X19]
	0x01E91894 LDP X20, X19, [X31 + 0x10]
	0x01E91898 LDR X8, [X8 + 0xB8]
	0x01E9189C LDR X0, [X8 + 0x8]
	0x01E918A0 LDR X30, [X31], #0x20
	0x01E918A4 RET
	0x01E918A8 LDR W8, [X0 + 0x8]
	0x01E918AC CBZ W8, 0x1E918C0
	0x01E918B0 SCVTF D0, W8
	0x01E918B4 FMOV D1, 1
	0x01E918B8 FDIV D0, D1, D0
	0x01E918BC RET
	0x01E918C0 FMOV D0, X31
	0x01E918C4 RET
	0x01E918C8 LDR W8, [X0 + 0xC]
	0x01E918CC CBZ W8, 0x1E918E0
	0x01E918D0 SCVTF D0, W8
	0x01E918D4 FMOV D1, 1
	0x01E918D8 FDIV D0, D1, D0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x2549000
	009 Move W8, [X20+625]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x226E000
	016 Move X0, [X0+360]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+625], W8
	020 Move W8, [X19]
	021 Move W0, W31
	022 Compare W8, 0
	023 JumpIfEqual {53}
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X20, X19
	026 Add X20, X20, 4
	027 Move W23, [X20]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X24, 0x226E000
	031 Move X24, [X24+360]
	032 Add X21, X20, 4
	033 Move W22, 2
	034 Move X0, [X24]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move W8, [X21]
	040 NotImplemented "Instruction SDIV not yet implemented."
	041 NotImplemented "Instruction MSUB not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CSET not yet implemented."
	044 Compare W8, 0
	045 JumpIfNotEqual {53}
	046 NotImplemented "Instruction LDRSW not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move W23, [X20]
	049 Add X21, X21, 4
	050 Add X22, X22, 1
	051 Move W0, W31
	052 Move W0, 1
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X24, [X31+16]
	058 Move X23, [X31+24]
	059 Move X30, [X31+64]
	060 Return X0

Method: Fusion.TickRate/Selection ClampSelection(Fusion.TickRate/Selection selection)

Disassembly:
	0x01E918DC RET
	0x01E918E0 FMOV D0, X31
	0x01E918E4 RET
	0x01E918E8 LDR W8, [X0]
	0x01E918EC LDR W9, [X0 + 0x8]
	0x01E918F0 SDIV W0, W8, W9
	0x01E918F4 RET
	0x01E918F8 LDR W8, [X0]
	0x01E918FC CBZ W8, 0x1E91910
	0x01E91900 SCVTF D0, W8
	0x01E91904 FMOV D1, 1
	0x01E91908 FDIV D0, D1, D0
	0x01E9190C RET
	0x01E91910 FMOV D0, X31
	0x01E91914 RET
	0x01E91918 LDR W8, [X0 + 0x4]
	0x01E9191C CBZ W8, 0x1E91930
	0x01E91920 SCVTF D0, W8
	0x01E91924 FMOV D1, 1
	0x01E91928 FDIV D0, D1, D0
	0x01E9192C RET
	0x01E91930 FMOV D0, X31
	0x01E91934 RET
	0x01E91938 MOVZ W0, 0x1
	0x01E9193C RET
	0x01E91940 SUB X31, X31, 0x40
	0x01E91944 STR X30, [X31 + 0x10]
	0x01E91948 STP X22, X21, [X31 + 0x20]
	0x01E9194C STP X20, X19, [X31 + 0x30]
	0x01E91950 ADRP X19, 0x2548000
	0x01E91954 ADRP X21, 0x2262000
	0x01E91958 ADRP X22, 0x2262000
	0x01E9195C LDRB W8, [X19 + 0x27B]
	0x01E91960 LDR X21, [X21 + 0x9D0]
	0x01E91964 LDR X22, [X22 + 0x758]
	0x01E91968 MOV X20, X0
	0x01E9196C TBNZ X8, 0x0, 0x1E9199C
	0x01E91970 ADRP X0, 0x2262000
	0x01E91974 LDR X0, [X0 + 0x758]
	0x01E91978 BL 0x1C16CF4
	0x01E9197C ADRP X0, 0x2262000
	0x01E91980 LDR X0, [X0 + 0x9D0]
	0x01E91984 BL 0x1C16CF4
	0x01E91988 ADRP X0, 0x226D000
	0x01E9198C LDR X0, [X0 + 0x238]
	0x01E91990 BL 0x1C16CF4
	0x01E91994 MOVZ W8, 0x1
	0x01E91998 STRB W8, [X19 + 0x27B]
	0x01E9199C LDR X0, [X21]
	0x01E919A0 MOVZ W1, 0x4
	0x01E919A4 BL 0x1C16D6C
	0x01E919A8 MOV X19, X0
	0x01E919AC LDR W8, [X20]
	0x01E919B0 LDR X0, [X22]
	0x01E919B4 ADD X1, X31, 0x1C
	0x01E919B8 STR W8, [X31 + 0x1C]
	0x01E919BC BL 0x1C16E04
	0x01E919C0 CBZ X19, 0x1E91AE8
	0x01E919C4 MOV X21, X0
	0x01E919C8 CBZ X0, 0x1E919E0
	0x01E919CC LDR X8, [X19]
	0x01E919D0 MOV X0, X21
	0x01E919D4 LDR X1, [X8 + 0x40]
	0x01E919D8 BL 0x1C16E00

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x2549000
	008 Move X23, 0x226E000
	009 Move W8, [X22+626]
	010 Move X23, [X23+360]
	011 Move X20, X2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x226A000
	019 Move X0, [X0+3176]
	020 Call 0x1C17CF4
	021 Move X0, 0x226E000
	022 Move X0, [X0+360]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+626], W8
	026 Move X0, [X23]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X21
	032 Call TickRate.Validate, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {72}
	037 Move X8, 0x226A000
	038 Move X8, [X8+3176]
	039 Move W23, [X21]
	040 Move X22, X19
	041 ShiftRight X22, 32
	042 And X22, X22, 0x7FFFFFFF
	043 Move X0, [X8]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Subtract W2, W23, 1
	049 Move W0, W22
	050 Move W1, W31
	051 Move X3, X31
	052 Call Maths.Clamp, X0, X1, X2
	053 Move W8, [X21]
	054 Move W22, W0
	055 Move X0, X20
	056 ShiftRight X0, 32
	057 And X0, X0, 0x7FFFFFFF
	058 Move W1, W22
	059 Subtract W2, W8, 1
	060 Move X3, X31
	061 Call Maths.Clamp, X0, X1, X2
	062 Move W8, [X21]
	063 Move W23, W0
	064 Move W0, W20
	065 Move W1, W31
	066 Subtract W2, W8, 1
	067 Move X3, X31
	068 Call Maths.Clamp, X0, X1, X2
	069 Move W1, W0
	070 NotImplemented "Instruction BFM not yet implemented."
	071 NotImplemented "Instruction BFM not yet implemented."
	072 Move X19, X31
	073 Move X1, X31
	074 Move X0, X19
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X30, [X31+48]
	080 Move X23, [X31+56]
	081 Return X0

Method: Fusion.TickRate/ValidateResult ValidateSelection(Fusion.TickRate/Selection selected)

Disassembly:
	0x01E919DC CBZ X0, 0x1E91ADC
	0x01E919E0 LDR W8, [X19 + 0x18]
	0x01E919E4 CBZ W8, 0x1E91AD8
	0x01E919E8 STR X21, [X19 + 0x20]
	0x01E919EC LDR W8, [X20 + 0x4]
	0x01E919F0 LDR X0, [X22]
	0x01E919F4 ADD X1, X31, 0x18
	0x01E919F8 STR W8, [X31 + 0x18]
	0x01E919FC BL 0x1C16E04
	0x01E91A00 MOV X21, X0
	0x01E91A04 CBZ X0, 0x1E91A1C
	0x01E91A08 LDR X8, [X19]
	0x01E91A0C MOV X0, X21
	0x01E91A10 LDR X1, [X8 + 0x40]
	0x01E91A14 BL 0x1C16E00
	0x01E91A18 CBZ X0, 0x1E91ADC
	0x01E91A1C LDR W8, [X19 + 0x18]
	0x01E91A20 CMP W8, 0x1
	0x01E91A24 B.LS 0x1E91AD8
	0x01E91A28 STR X21, [X19 + 0x28]
	0x01E91A2C LDR W8, [X20 + 0x8]
	0x01E91A30 LDR X0, [X22]
	0x01E91A34 ADD X1, X31, 0xC
	0x01E91A38 STR W8, [X31 + 0xC]
	0x01E91A3C BL 0x1C16E04
	0x01E91A40 MOV X21, X0
	0x01E91A44 CBZ X0, 0x1E91A5C
	0x01E91A48 LDR X8, [X19]
	0x01E91A4C MOV X0, X21
	0x01E91A50 LDR X1, [X8 + 0x40]
	0x01E91A54 BL 0x1C16E00
	0x01E91A58 CBZ X0, 0x1E91ADC
	0x01E91A5C LDR W8, [X19 + 0x18]
	0x01E91A60 CMP W8, 0x2
	0x01E91A64 B.LS 0x1E91AD8
	0x01E91A68 STR X21, [X19 + 0x30]
	0x01E91A6C LDR W8, [X20 + 0xC]
	0x01E91A70 LDR X0, [X22]
	0x01E91A74 ADD X1, X31, 0x8
	0x01E91A78 STR W8, [X31 + 0x8]
	0x01E91A7C BL 0x1C16E04
	0x01E91A80 MOV X20, X0
	0x01E91A84 CBZ X0, 0x1E91A9C
	0x01E91A88 LDR X8, [X19]
	0x01E91A8C MOV X0, X20
	0x01E91A90 LDR X1, [X8 + 0x40]
	0x01E91A94 BL 0x1C16E00
	0x01E91A98 CBZ X0, 0x1E91ADC
	0x01E91A9C LDR W8, [X19 + 0x18]
	0x01E91AA0 CMP W8, 0x3
	0x01E91AA4 B.LS 0x1E91AD8
	0x01E91AA8 ADRP X8, 0x226D000
	0x01E91AAC LDR X8, [X8 + 0x238]
	0x01E91AB0 STR X20, [X19 + 0x38]
	0x01E91AB4 MOV X1, X19
	0x01E91AB8 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x2549000
	008 Move X22, 0x226E000
	009 Move W8, [X23+627]
	010 Move X22, [X22+360]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x226E000
	019 Move X0, [X0+360]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+627], W8
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X21
	029 Call TickRate.Validate, X0
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {54}
	034 Move X0, [X22]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move W8, [X21+4]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W9, [X21]
	042 Move X8, X20
	043 ShiftRight X8, 32
	044 And X8, X8, 0x7FFFFFFF
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X10, X19
	047 ShiftRight X10, 32
	048 And X10, X10, 0x7FFFFFFF
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W8, 7
	053 NotImplemented "Instruction CSEL not yet implemented."
	054 Move W0, 3
	055 Move W0, 1
	056 Move W0, 4
	057 Move W0, 6
	058 Move W0, 5
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+48]
	064 Move X23, [X31+56]
	065 Return X0

Method: Fusion.TickRate/Selection get_Default()

Disassembly:
	0x01E91ABC LDR X0, [X8]
	0x01E91AC0 BL 0x3227C5C
	0x01E91AC4 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move W0, 64
	002 Or X1, X31, 0x100000001
	003 Return X0

Method: Fusion.TickRate/Selection get_Shared()

Disassembly:
	0x01E91AC8 LDP X22, X21, [X31 + 0x20]
	0x01E91ACC LDR X30, [X31 + 0x10]
	0x01E91AD0 ADD X31, X31, 0x40

ISIL:
	001 Move W0, 32
	002 Or X1, X31, 0x100000001
	003 Return X0

Method: System.Void .cctor()

Disassembly:
	0x01E91AD4 RET

ISIL:
No ISIL was generated
Method: System.Void InitChecked()

Disassembly:
	0x01E923D8 MOV W1, W20
	0x01E923DC BL 0x25CFC3C
	0x01E923E0 LDR X0, [X22]
	0x01E923E4 MOV V9.16B, V0.16B
	0x01E923E8 LDR W8, [X0 + 0xE0]
	0x01E923EC CBNZ W8, 0x1E923F4
	0x01E923F0 BL 0x1C16DFC
	0x01E923F4 MOV V0.16B, V8.16B
	0x01E923F8 MOV V1.16B, V9.16B
	0x01E923FC MOV X0, X31
	0x01E92400 BL 0x337EDC0
	0x01E92404 MOV X0, X19
	0x01E92408 MOV V8.16B, V0.16B
	0x01E9240C ADD W20, W20, 0x1
	0x01E92410 BL 0x1E92018
	0x01E92414 CMP W20, W0
	0x01E92418 B.LT 0x1E923CC
	0x01E9241C B 0x1E92424
	0x01E92420 FMOV D8, X31
	0x01E92424 LDP X20, X19, [X31 + 0x30]
	0x01E92428 LDP X22, X21, [X31 + 0x20]
	0x01E9242C LDR X30, [X31 + 0x10]
	0x01E92430 MOV V0.16B, V8.16B
	0x01E92434 LDP D9, D8, [X31], #0x40
	0x01E92438 RET
	0x01E9243C BL 0x1C16F20
	0x01E92440 STR D10, [X31 - 0x40]!
	0x01E92444 STP D9, D8, [X31 + 0x10]
	0x01E92448 STP X30, X21, [X31 + 0x20]
	0x01E9244C STP X20, X19, [X31 + 0x30]
	0x01E92450 ADRP X20, 0x2547000
	0x01E92454 LDRB W8, [X20 + 0x288]
	0x01E92458 MOV V8.16B, V0.16B
	0x01E9245C MOV X19, X0
	0x01E92460 TBNZ X8, 0x0, 0x1E92478
	0x01E92464 ADRP X0, 0x226C000
	0x01E92468 LDR X0, [X0 + 0x268]
	0x01E9246C BL 0x1C16CF4
	0x01E92470 MOVZ W8, 0x1
	0x01E92474 STRB W8, [X20 + 0x288]
	0x01E92478 MOV X0, X19
	0x01E9247C BL 0x1E92018
	0x01E92480 CMP W0, 0x1
	0x01E92484 B.LT 0x1E924FC
	0x01E92488 LDR X0, [X19 + 0x20]
	0x01E9248C CBZ X0, 0x1E92518
	0x01E92490 ADRP X21, 0x226C000
	0x01E92494 LDR X21, [X21 + 0x268]
	0x01E92498 MOV W1, W31
	0x01E9249C LDR X2, [X21]
	0x01E924A0 BL 0x25CFC3C
	0x01E924A4 MOV X0, X19
	0x01E924A8 MOV V9.16B, V0.16B
	0x01E924AC BL 0x1E92018
	0x01E924B0 CMP W0, 0x2
	0x01E924B4 B.LT 0x1E92500
	0x01E924B8 FMOV D0, 1
	0x01E924BC FSUB D10, D0, D8
	0x01E924C0 MOVZ W20, 0x1
	0x01E924C4 LDR X0, [X19 + 0x20]
	0x01E924C8 CBZ X0, 0x1E92518
	0x01E924CC LDR X2, [X21]
	0x01E924D0 MOV W1, W20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2548000
	005 Move X19, 0x226D000
	006 Move W8, [X20+628]
	007 Move X19, [X19+360]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x226D000
	013 Move X0, [X0+504]
	014 Call 0x1C17CF4
	015 Move X0, 0x226D000
	016 Move X0, [X0+360]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+628], W8
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X19]
	026 Move X8, [X0+184]
	027 Move X9, [X8]
	028 Compare X9, 0
	029 JumpIfEqual {70}
	030 Move W10, [X0+224]
	031 Compare W10, 0
	032 JumpIfNotEqual {39}
	033 Call 0x1C17DFC
	034 Move X0, [X19]
	035 Move X8, [X0+184]
	036 Move X9, [X8]
	037 Compare X9, 0
	038 JumpIfEqual {79}
	039 Move X9, [X9+24]
	040 Compare X9, 0
	041 JumpIfEqual {70}
	042 Move W9, [X0+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {48}
	045 Call 0x1C17DFC
	046 Move X0, [X19]
	047 Move X8, [X0+184]
	048 Move X9, [X8+16]
	049 Compare X9, 0
	050 JumpIfEqual {70}
	051 Move W9, [X0+224]
	052 Compare W9, 0
	053 JumpIfNotEqual {57}
	054 Call 0x1C17DFC
	055 Move X8, [X19]
	056 Move X8, [X8+184]
	057 Move X0, [X8+16]
	058 Compare X0, 0
	059 JumpIfEqual {79}
	060 Move X8, 0x226D000
	061 Move X8, [X8+504]
	062 Move X1, [X8]
	063 Call Dictionary`2<Int32, TickRate>.get_Count, X0
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X30, [X31+32]
	068 Return 
	069 Move X0, [X19]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X20, [X31+16]
	075 Move X19, [X31+24]
	076 Move X30, [X31+32]
	077 Call TickRate.Init
	078 Return 
	079 Call 0x1C17F20

Method: System.Void Init()

Disassembly:
	0x01E91AD8 BL 0x1C16F28
	0x01E91ADC BL 0x1C16F44
	0x01E91AE0 MOV X1, X31
	0x01E91AE4 BL 0x1C16DEC
	0x01E91AE8 BL 0x1C16F20
	0x01E91AEC CBZ W0, 0x1E91B00
	0x01E91AF0 SCVTF D0, W0
	0x01E91AF4 FMOV D1, 1
	0x01E91AF8 FDIV D0, D1, D0
	0x01E91AFC RET
	0x01E91B00 FMOV D0, X31
	0x01E91B04 RET
	0x01E91B08 MOV X0, X31
	0x01E91B0C RET
	0x01E91B10 LDR W8, [X0]
	0x01E91B14 CMP W8, 0x0
	0x01E91B18 CSET W0, GT
	0x01E91B1C RET
	0x01E91B20 SUB X31, X31, 0x30
	0x01E91B24 STP X30, X21, [X31 + 0x10]
	0x01E91B28 STP X20, X19, [X31 + 0x20]
	0x01E91B2C ADRP X21, 0x2548000
	0x01E91B30 ADRP X20, 0x2263000
	0x01E91B34 LDRB W8, [X21 + 0x27C]
	0x01E91B38 LDR X20, [X20 + 0x470]
	0x01E91B3C MOV X19, X0
	0x01E91B40 TBNZ X8, 0x0, 0x1E91B58
	0x01E91B44 ADRP X0, 0x2263000
	0x01E91B48 LDR X0, [X0 + 0x470]
	0x01E91B4C BL 0x1C16CF4
	0x01E91B50 MOVZ W8, 0x1
	0x01E91B54 STRB W8, [X21 + 0x27C]
	0x01E91B58 LDR W8, [X19]
	0x01E91B5C LDR X2, [X20]
	0x01E91B60 ADD X0, X31, 0x8
	0x01E91B64 STR X31, [X31 + 0x8]
	0x01E91B68 BIC W1, W8, W8, 0x1F
	0x01E91B6C BL 0x24341FC
	0x01E91B70 LDR X0, [X31 + 0x8]
	0x01E91B74 LDP X20, X19, [X31 + 0x20]
	0x01E91B78 LDP X30, X21, [X31 + 0x10]
	0x01E91B7C ADD X31, X31, 0x30
	0x01E91B80 RET
	0x01E91B84 STP X30, X21, [X31 - 0x20]!
	0x01E91B88 STP X20, X19, [X31 + 0x10]
	0x01E91B8C ADRP X21, 0x2547000
	0x01E91B90 LDRB W8, [X21 + 0xA22]
	0x01E91B94 MOV X19, X1
	0x01E91B98 MOV X20, X0
	0x01E91B9C CBNZ W8, 0x1E91BB4
	0x01E91BA0 ADRP X0, 0x2262000
	0x01E91BA4 LDR X0, [X0 + 0x598]
	0x01E91BA8 BL 0x1C16CF4
	0x01E91BAC MOVZ W8, 0x1
	0x01E91BB0 STRB W8, [X21 + 0xA22]
	0x01E91BB4 ADRP X8, 0x2262000
	0x01E91BB8 LDR X8, [X8 + 0x598]
	0x01E91BBC LDR X0, [X8]
	0x01E91BC0 LDR W8, [X0 + 0xE0]
	0x01E91BC4 CBNZ W8, 0x1E91BCC
	0x01E91BC8 BL 0x1C16DFC
	0x01E91BCC MOV X0, X19
	0x01E91BD0 MOV X1, X31
	0x01E91BD4 BL 0x3C38948
	0x01E91BD8 TBZ X0, 0x0, 0x1E91C14
	0x01E91BDC CBZ X19, 0x1E91C24
	0x01E91BE0 MOV X0, X19
	0x01E91BE4 MOV X1, X31
	0x01E91BE8 BL 0x1E9E7CC
	0x01E91BEC TBZ X0, 0x0, 0x1E91C14
	0x01E91BF0 LDR W8, [X20]
	0x01E91BF4 CMP W8, 0x1
	0x01E91BF8 B.LT 0x1E91C14
	0x01E91BFC LDR X9, [X19 + 0x50]
	0x01E91C00 CBZ X9, 0x1E91C24
	0x01E91C04 LDR W9, [X9 + 0x48]
	0x01E91C08 CMP W8, W9
	0x01E91C0C CSET W0, LE
	0x01E91C10 B 0x1E91C18
	0x01E91C14 MOV W0, W31
	0x01E91C18 LDP X20, X19, [X31 + 0x10]
	0x01E91C1C LDP X30, X21, [X31], #0x20
	0x01E91C20 RET
	0x01E91C24 BL 0x1C16F20
	0x01E91C28 STR X30, [X31 - 0x20]!
	0x01E91C2C STP X20, X19, [X31 + 0x10]
	0x01E91C30 LDR W8, [X0]
	0x01E91C34 CBZ W8, 0x1E91C68
	0x01E91C38 MOV X20, X1
	0x01E91C3C CBZ X1, 0x1E91C78
	0x01E91C40 MOV X19, X0
	0x01E91C44 MOV X0, X20
	0x01E91C48 MOV X1, X31
	0x01E91C4C BL 0x1E9E7CC
	0x01E91C50 TBZ X0, 0x0, 0x1E91C68
	0x01E91C54 MOV X0, X19
	0x01E91C58 MOV X1, X20
	0x01E91C5C LDP X20, X19, [X31 + 0x10]
	0x01E91C60 LDR X30, [X31], #0x20
	0x01E91C64 B 0x1E91B84
	0x01E91C68 LDP X20, X19, [X31 + 0x10]
	0x01E91C6C MOVZ W0, 0x1
	0x01E91C70 LDR X30, [X31], #0x20
	0x01E91C74 RET
	0x01E91C78 BL 0x1C16F20
	0x01E91C7C SUB X31, X31, 0x30
	0x01E91C80 STP X30, X21, [X31 + 0x10]
	0x01E91C84 STP X20, X19, [X31 + 0x20]
	0x01E91C88 ADRP X21, 0x2548000
	0x01E91C8C LDRB W8, [X21 + 0x27D]
	0x01E91C90 MOV X19, X1
	0x01E91C94 MOV X20, X0
	0x01E91C98 TBNZ X8, 0x0, 0x1E91CBC
	0x01E91C9C ADRP X0, 0x2262000
	0x01E91CA0 LDR X0, [X0 + 0x5A8]
	0x01E91CA4 BL 0x1C16CF4
	0x01E91CA8 ADRP X0, 0x2263000
	0x01E91CAC LDR X0, [X0 + 0x470]
	0x01E91CB0 BL 0x1C16CF4
	0x01E91CB4 MOVZ W8, 0x1
	0x01E91CB8 STRB W8, [X21 + 0x27D]
	0x01E91CBC ADRP X21, 0x2548000
	0x01E91CC0 LDRB W8, [X21 + 0x19F]
	0x01E91CC4 CBNZ W8, 0x1E91CDC
	0x01E91CC8 ADRP X0, 0x2262000
	0x01E91CCC LDR X0, [X0 + 0x598]
	0x01E91CD0 BL 0x1C16CF4
	0x01E91CD4 MOVZ W8, 0x1
	0x01E91CD8 STRB W8, [X21 + 0x19F]
	0x01E91CDC ADRP X8, 0x2262000
	0x01E91CE0 LDR X8, [X8 + 0x598]
	0x01E91CE4 LDR X0, [X8]
	0x01E91CE8 LDR W8, [X0 + 0xE0]
	0x01E91CEC CBNZ W8, 0x1E91CF4
	0x01E91CF0 BL 0x1C16DFC
	0x01E91CF4 MOV X0, X19
	0x01E91CF8 MOV X1, X31
	0x01E91CFC BL 0x3C38948
	0x01E91D00 TBZ X0, 0x0, 0x1E91D7C
	0x01E91D04 CBZ X19, 0x1E91D94
	0x01E91D08 MOV X0, X19
	0x01E91D0C MOV X1, X31
	0x01E91D10 BL 0x1E9E7CC
	0x01E91D14 TBZ X0, 0x0, 0x1E91D7C
	0x01E91D18 LDR W20, [X20]
	0x01E91D1C CMP W20, 0x1
	0x01E91D20 B.LT 0x1E91D7C
	0x01E91D24 LDR X8, [X19 + 0x50]
	0x01E91D28 CBZ X8, 0x1E91D94
	0x01E91D2C ADRP X9, 0x2262000
	0x01E91D30 LDR X9, [X9 + 0x5A8]
	0x01E91D34 LDR W19, [X8 + 0x48]
	0x01E91D38 LDR X0, [X9]
	0x01E91D3C LDR W9, [X0 + 0xE0]
	0x01E91D40 CBNZ W9, 0x1E91D48
	0x01E91D44 BL 0x1C16DFC
	0x01E91D48 SUB W1, W20, W19
	0x01E91D4C MOV W0, W31
	0x01E91D50 MOV X2, X31
	0x01E91D54 BL 0x337EDF0
	0x01E91D58 ADRP X8, 0x2263000
	0x01E91D5C LDR X8, [X8 + 0x470]
	0x01E91D60 MOV W1, W0
	0x01E91D64 ADD X0, X31, 0x8
	0x01E91D68 STR X31, [X31 + 0x8]
	0x01E91D6C LDR X2, [X8]
	0x01E91D70 BL 0x24341FC
	0x01E91D74 LDR X0, [X31 + 0x8]
	0x01E91D78 B 0x1E91D84
	0x01E91D7C MOV X0, X31
	0x01E91D80 STR X31, [X31 + 0x8]
	0x01E91D84 LDP X20, X19, [X31 + 0x20]
	0x01E91D88 LDP X30, X21, [X31 + 0x10]
	0x01E91D8C ADD X31, X31, 0x30
	0x01E91D90 RET
	0x01E91D94 BL 0x1C16F20
	0x01E91D98 SUB X31, X31, 0x30
	0x01E91D9C STP X30, X21, [X31 + 0x10]
	0x01E91DA0 STP X20, X19, [X31 + 0x20]
	0x01E91DA4 ADRP X21, 0x2548000
	0x01E91DA8 LDRB W8, [X21 + 0x27E]
	0x01E91DAC MOV X19, X1
	0x01E91DB0 MOV X20, X0
	0x01E91DB4 TBNZ X8, 0x0, 0x1E91DE4
	0x01E91DB8 ADRP X0, 0x2266000
	0x01E91DBC LDR X0, [X0 + 0x138]
	0x01E91DC0 BL 0x1C16CF4
	0x01E91DC4 ADRP X0, 0x2265000
	0x01E91DC8 LDR X0, [X0 + 0xEF8]
	0x01E91DCC BL 0x1C16CF4
	0x01E91DD0 ADRP X0, 0x2265000
	0x01E91DD4 LDR X0, [X0 + 0xF00]
	0x01E91DD8 BL 0x1C16CF4
	0x01E91DDC MOVZ W8, 0x1
	0x01E91DE0 STRB W8, [X21 + 0x27E]
	0x01E91DE4 MOV X0, X20
	0x01E91DE8 MOV X1, X19
	0x01E91DEC BL 0x1E91C7C
	0x01E91DF0 ANDS W31, W0, 0xFF
	0x01E91DF4 STR X0, [X31]
	0x01E91DF8 B.EQ 0x1E91E4C
	0x01E91DFC ADRP X8, 0x2265000
	0x01E91E00 LDR X8, [X8 + 0xF00]
	0x01E91E04 ADD X0, X31, 0x0
	0x01E91E08 LDR X1, [X8]
	0x01E91E0C BL 0x2434214
	0x01E91E10 CBZ X19, 0x1E91E64
	0x01E91E14 ADRP X21, 0x2266000
	0x01E91E18 LDR X21, [X21 + 0x138]
	0x01E91E1C MOV W20, W0
	0x01E91E20 MOV X0, X19
	0x01E91E24 MOV X1, X31
	0x01E91E28 BL 0x1E9E550
	0x01E91E2C LDR X1, [X21]
	0x01E91E30 SCVTF S1, W20
	0x01E91E34 FMUL S0, S0, S1
	0x01E91E38 ADD X0, X31, 0x8
	0x01E91E3C STR X31, [X31 + 0x8]
	0x01E91E40 BL 0x243AC08
	0x01E91E44 LDR X0, [X31 + 0x8]
	0x01E91E48 B 0x1E91E54
	0x01E91E4C MOV X0, X31
	0x01E91E50 STR X31, [X31 + 0x8]
	0x01E91E54 LDP X20, X19, [X31 + 0x20]
	0x01E91E58 LDP X30, X21, [X31 + 0x10]
	0x01E91E5C ADD X31, X31, 0x30
	0x01E91E60 RET
	0x01E91E64 BL 0x1C16F20
	0x01E91E68 STP D9, D8, [X31 - 0x30]!
	0x01E91E6C STR X30, [X31 + 0x10]
	0x01E91E70 STP X20, X19, [X31 + 0x20]
	0x01E91E74 ADRP X20, 0x2548000
	0x01E91E78 LDRB W8, [X20 + 0x27F]
	0x01E91E7C MOV V8.16B, V0.16B
	0x01E91E80 MOV X19, X0
	0x01E91E84 TBNZ X8, 0x0, 0x1E91E9C
	0x01E91E88 ADRP X0, 0x2262000
	0x01E91E8C LDR X0, [X0 + 0x5A8]
	0x01E91E90 BL 0x1C16CF4
	0x01E91E94 MOVZ W8, 0x1
	0x01E91E98 STRB W8, [X20 + 0x27F]
	0x01E91E9C ADRP X20, 0x2548000
	0x01E91EA0 LDRB W8, [X20 + 0x19F]
	0x01E91EA4 CBNZ W8, 0x1E91EBC
	0x01E91EA8 ADRP X0, 0x2262000
	0x01E91EAC LDR X0, [X0 + 0x598]
	0x01E91EB0 BL 0x1C16CF4
	0x01E91EB4 MOVZ W8, 0x1
	0x01E91EB8 STRB W8, [X20 + 0x19F]
	0x01E91EBC ADRP X8, 0x2262000
	0x01E91EC0 LDR X8, [X8 + 0x598]
	0x01E91EC4 LDR X0, [X8]
	0x01E91EC8 LDR W8, [X0 + 0xE0]
	0x01E91ECC CBNZ W8, 0x1E91ED4
	0x01E91ED0 BL 0x1C16DFC
	0x01E91ED4 MOV X0, X19
	0x01E91ED8 MOV X1, X31
	0x01E91EDC BL 0x3C38948
	0x01E91EE0 MOV W8, W0
	0x01E91EE4 MOV X0, X31
	0x01E91EE8 TBZ X8, 0x0, 0x1E91F60
	0x01E91EEC CBZ X19, 0x1E91F70
	0x01E91EF0 MOV X0, X19
	0x01E91EF4 MOV X1, X31
	0x01E91EF8 BL 0x1E9E7CC
	0x01E91EFC MOV W8, W0
	0x01E91F00 MOV X0, X31
	0x01E91F04 TBZ X8, 0x0, 0x1E91F60
	0x01E91F08 LDR X8, [X19 + 0x50]
	0x01E91F0C CBZ X8, 0x1E91F70
	0x01E91F10 LDR W20, [X8 + 0x48]
	0x01E91F14 MOV X0, X19
	0x01E91F18 MOV X1, X31
	0x01E91F1C BL 0x1E9E550
	0x01E91F20 ADRP X8, 0x2262000
	0x01E91F24 LDR X8, [X8 + 0x5A8]
	0x01E91F28 MOV V9.16B, V0.16B
	0x01E91F2C LDR X0, [X8]
	0x01E91F30 LDR W8, [X0 + 0xE0]
	0x01E91F34 CBNZ W8, 0x1E91F3C
	0x01E91F38 BL 0x1C16DFC
	0x01E91F3C FDIV S0, S8, S9
	0x01E91F40 MOVZ W8, 0x7F800000
	0x01E91F44 FRINTP S1, S0
	0x01E91F48 FCVTPS W9, S0
	0x01E91F4C FMOV S0, W8
	0x01E91F50 FCMP S1, S0
	0x01E91F54 MOVZ W8, 0x80000000
	0x01E91F58 CSEL W8, W8, W9, EQ
	0x01E91F5C ADD W0, W8, W20
	0x01E91F60 LDP X20, X19, [X31 + 0x20]
	0x01E91F64 LDR X30, [X31 + 0x10]
	0x01E91F68 LDP D9, D8, [X31], #0x30
	0x01E91F6C RET
	0x01E91F70 BL 0x1C16F20
	0x01E91F74 STP X30, X21, [X31 - 0x20]!
	0x01E91F78 STP X20, X19, [X31 + 0x10]
	0x01E91F7C ADRP X21, 0x2548000
	0x01E91F80 LDRB W8, [X21 + 0x19F]
	0x01E91F84 MOV W19, W1
	0x01E91F88 MOV X20, X0
	0x01E91F8C CBNZ W8, 0x1E91FA4
	0x01E91F90 ADRP X0, 0x2262000
	0x01E91F94 LDR X0, [X0 + 0x598]
	0x01E91F98 BL 0x1C16CF4
	0x01E91F9C MOVZ W8, 0x1
	0x01E91FA0 STRB W8, [X21 + 0x19F]
	0x01E91FA4 ADRP X8, 0x2262000
	0x01E91FA8 LDR X8, [X8 + 0x598]
	0x01E91FAC LDR X0, [X8]
	0x01E91FB0 LDR W8, [X0 + 0xE0]
	0x01E91FB4 CBNZ W8, 0x1E91FBC
	0x01E91FB8 BL 0x1C16DFC
	0x01E91FBC MOV X0, X20
	0x01E91FC0 MOV X1, X31
	0x01E91FC4 BL 0x3C38948
	0x01E91FC8 MOV W8, W0
	0x01E91FCC MOV X0, X31
	0x01E91FD0 TBZ X8, 0x0, 0x1E92000
	0x01E91FD4 CBZ X20, 0x1E9200C
	0x01E91FD8 MOV X0, X20
	0x01E91FDC MOV X1, X31
	0x01E91FE0 BL 0x1E9E7CC
	0x01E91FE4 MOV W8, W0
	0x01E91FE8 MOV X0, X31
	0x01E91FEC TBZ X8, 0x0, 0x1E92000
	0x01E91FF0 LDR X8, [X20 + 0x50]
	0x01E91FF4 CBZ X8, 0x1E9200C
	0x01E91FF8 LDR W8, [X8 + 0x48]
	0x01E91FFC ADD W0, W8, W19
	0x01E92000 LDP X20, X19, [X31 + 0x10]
	0x01E92004 LDP X30, X21, [X31], #0x20
	0x01E92008 RET
	0x01E9200C BL 0x1C16F20
	0x01E92010 MOV X1, X31
	0x01E92014 B 0x337B6E0
	0x01E92018 STR X30, [X31 - 0x20]!
	0x01E9201C STP X20, X19, [X31 + 0x10]
	0x01E92020 ADRP X20, 0x2547000
	0x01E92024 LDRB W8, [X20 + 0x280]
	0x01E92028 MOV X19, X0
	0x01E9202C TBNZ X8, 0x0, 0x1E92044
	0x01E92030 ADRP X0, 0x226C000
	0x01E92034 LDR X0, [X0 + 0x240]
	0x01E92038 BL 0x1C16CF4
	0x01E9203C MOVZ W8, 0x1
	0x01E92040 STRB W8, [X20 + 0x280]
	0x01E92044 LDR X8, [X19 + 0x20]
	0x01E92048 CBZ X8, 0x1E9205C
	0x01E9204C LDR W0, [X8 + 0x1C]
	0x01E92050 LDP X20, X19, [X31 + 0x10]
	0x01E92054 LDR X30, [X31], #0x20
	0x01E92058 RET
	0x01E9205C BL 0x1C16F20
	0x01E92060 STR X30, [X31 - 0x20]!
	0x01E92064 STP X20, X19, [X31 + 0x10]
	0x01E92068 ADRP X20, 0x2547000
	0x01E9206C LDRB W8, [X20 + 0x281]
	0x01E92070 MOV X19, X0
	0x01E92074 TBNZ X8, 0x0, 0x1E9208C
	0x01E92078 ADRP X0, 0x226C000
	0x01E9207C LDR X0, [X0 + 0x248]
	0x01E92080 BL 0x1C16CF4
	0x01E92084 MOVZ W8, 0x1
	0x01E92088 STRB W8, [X20 + 0x281]
	0x01E9208C LDR X0, [X19 + 0x20]
	0x01E92090 CBZ X0, 0x1E920AC
	0x01E92094 ADRP X8, 0x226C000
	0x01E92098 LDR X8, [X8 + 0x248]
	0x01E9209C LDP X20, X19, [X31 + 0x10]
	0x01E920A0 LDR X1, [X8]
	0x01E920A4 LDR X30, [X31], #0x20
	0x01E920A8 B 0x25CFBE8
	0x01E920AC BL 0x1C16F20
	0x01E920B0 STR X30, [X31 - 0x20]!
	0x01E920B4 STP X20, X19, [X31 + 0x10]
	0x01E920B8 ADRP X20, 0x2547000
	0x01E920BC LDRB W8, [X20 + 0x282]
	0x01E920C0 MOV X19, X0
	0x01E920C4 TBNZ X8, 0x0, 0x1E920DC
	0x01E920C8 ADRP X0, 0x226C000
	0x01E920CC LDR X0, [X0 + 0x250]
	0x01E920D0 BL 0x1C16CF4
	0x01E920D4 MOVZ W8, 0x1
	0x01E920D8 STRB W8, [X20 + 0x282]
	0x01E920DC LDR X0, [X19 + 0x20]
	0x01E920E0 CBZ X0, 0x1E920FC
	0x01E920E4 ADRP X8, 0x226C000
	0x01E920E8 LDR X8, [X8 + 0x250]
	0x01E920EC LDP X20, X19, [X31 + 0x10]
	0x01E920F0 LDR X1, [X8]
	0x01E920F4 LDR X30, [X31], #0x20
	0x01E920F8 B 0x25CFC04
	0x01E920FC BL 0x1C16F20
	0x01E92100 STR X30, [X31 - 0x20]!
	0x01E92104 STP X20, X19, [X31 + 0x10]
	0x01E92108 ADRP X20, 0x2547000
	0x01E9210C LDRB W8, [X20 + 0x283]
	0x01E92110 MOV X19, X0
	0x01E92114 TBNZ X8, 0x0, 0x1E9212C
	0x01E92118 ADRP X0, 0x226C000
	0x01E9211C LDR X0, [X0 + 0x258]
	0x01E92120 BL 0x1C16CF4
	0x01E92124 MOVZ W8, 0x1
	0x01E92128 STRB W8, [X20 + 0x283]
	0x01E9212C LDR X0, [X19 + 0x20]
	0x01E92130 CBZ X0, 0x1E9214C
	0x01E92134 ADRP X8, 0x226C000
	0x01E92138 LDR X8, [X8 + 0x258]
	0x01E9213C LDP X20, X19, [X31 + 0x10]
	0x01E92140 LDR X1, [X8]
	0x01E92144 LDR X30, [X31], #0x20
	0x01E92148 B 0x25CFC14
	0x01E9214C BL 0x1C16F20
	0x01E92150 STR X30, [X31 - 0x20]!
	0x01E92154 STP X20, X19, [X31 + 0x10]
	0x01E92158 ADRP X20, 0x2547000
	0x01E9215C LDRB W8, [X20 + 0x284]
	0x01E92160 MOV X19, X0
	0x01E92164 TBNZ X8, 0x0, 0x1E9217C
	0x01E92168 ADRP X0, 0x226C000
	0x01E9216C LDR X0, [X0 + 0x260]
	0x01E92170 BL 0x1C16CF4
	0x01E92174 MOVZ W8, 0x1
	0x01E92178 STRB W8, [X20 + 0x284]
	0x01E9217C MOV X0, X19
	0x01E92180 BL 0x1E920B0
	0x01E92184 FMOV D0, X31
	0x01E92188 TBNZ X0, 0x0, 0x1E921A8
	0x01E9218C LDR X0, [X19 + 0x20]
	0x01E92190 CBZ X0, 0x1E921B4
	0x01E92194 ADRP X8, 0x226C000
	0x01E92198 LDR X8, [X8 + 0x260]
	0x01E9219C LDR X1, [X8]
	0x01E921A0 BL 0x25D02D4
	0x01E921A4 LDR V0, [X0]
	0x01E921A8 LDP X20, X19, [X31 + 0x10]
	0x01E921AC LDR X30, [X31], #0x20
	0x01E921B0 RET
	0x01E921B4 BL 0x1C16F20
	0x01E921B8 LDR V0, [X0 + 0x10]
	0x01E921BC RET
	0x01E921C0 STR D8, [X31 - 0x20]!
	0x01E921C4 STP X30, X19, [X31 + 0x10]
	0x01E921C8 MOV X19, X0
	0x01E921CC BL 0x1E92018
	0x01E921D0 CMP W0, 0x2
	0x01E921D4 FMOV D0, X31
	0x01E921D8 B.LT 0x1E921FC
	0x01E921DC LDR V8, [X19 + 0x18]
	0x01E921E0 FCMP D8, 0x0
	0x01E921E4 B.LT 0x1E921FC
	0x01E921E8 MOV X0, X19
	0x01E921EC BL 0x1E92018
	0x01E921F0 SUB W8, W0, 0x1
	0x01E921F4 SCVTF D0, W8
	0x01E921F8 FDIV D0, D8, D0
	0x01E921FC LDP X30, X19, [X31 + 0x10]
	0x01E92200 LDR V8, [X31], #0x20
	0x01E92204 RET
	0x01E92208 STR D8, [X31 - 0x20]!
	0x01E9220C STR X30, [X31 + 0x8]
	0x01E92210 STP X20, X19, [X31 + 0x10]
	0x01E92214 ADRP X20, 0x2547000
	0x01E92218 LDRB W8, [X20 + 0x285]
	0x01E9221C MOV X19, X0
	0x01E92220 TBNZ X8, 0x0, 0x1E92238
	0x01E92224 ADRP X0, 0x2261000
	0x01E92228 LDR X0, [X0 + 0x5A8]
	0x01E9222C BL 0x1C16CF4
	0x01E92230 MOVZ W8, 0x1
	0x01E92234 STRB W8, [X20 + 0x285]
	0x01E92238 MOV X0, X19
	0x01E9223C BL 0x1E921C0
	0x01E92240 MOVZ X8, 0x1
	0x01E92244 MOV V8.16B, V0.16B
	0x01E92248 FMOV D0, X8
	0x01E9224C FCMP D8, D0
	0x01E92250 B.GE 0x1E9225C
	0x01E92254 FMOV D0, X31
	0x01E92258 B 0x1E92278
	0x01E9225C ADRP X8, 0x2261000
	0x01E92260 LDR X8, [X8 + 0x5A8]
	0x01E92264 LDR X0, [X8]
	0x01E92268 LDR W8, [X0 + 0xE0]
	0x01E9226C CBNZ W8, 0x1E92274
	0x01E92270 BL 0x1C16DFC
	0x01E92274 FSQRT D0, D8
	0x01E92278 LDP X20, X19, [X31 + 0x10]
	0x01E9227C LDR X30, [X31 + 0x8]
	0x01E92280 LDR V8, [X31], #0x20
	0x01E92284 RET
	0x01E92288 STP D9, D8, [X31 - 0x40]!
	0x01E9228C STR X30, [X31 + 0x10]
	0x01E92290 STP X22, X21, [X31 + 0x20]
	0x01E92294 STP X20, X19, [X31 + 0x30]
	0x01E92298 ADRP X20, 0x2547000
	0x01E9229C LDRB W8, [X20 + 0x286]
	0x01E922A0 MOV X19, X0
	0x01E922A4 TBNZ X8, 0x0, 0x1E922C8
	0x01E922A8 ADRP X0, 0x2261000
	0x01E922AC LDR X0, [X0 + 0x5A8]
	0x01E922B0 BL 0x1C16CF4
	0x01E922B4 ADRP X0, 0x226C000
	0x01E922B8 LDR X0, [X0 + 0x268]
	0x01E922BC BL 0x1C16CF4
	0x01E922C0 MOVZ W8, 0x1
	0x01E922C4 STRB W8, [X20 + 0x286]
	0x01E922C8 MOV X0, X19
	0x01E922CC BL 0x1E92018
	0x01E922D0 CMP W0, 0x1
	0x01E922D4 B.LT 0x1E92344
	0x01E922D8 ADRP X21, 0x226C000
	0x01E922DC ADRP X22, 0x2261000
	0x01E922E0 LDR X21, [X21 + 0x268]
	0x01E922E4 LDR X22, [X22 + 0x5A8]
	0x01E922E8 MOV W20, W31
	0x01E922EC FMOV D8, X31
	0x01E922F0 LDR X0, [X19 + 0x20]
	0x01E922F4 CBZ X0, 0x1E92360
	0x01E922F8 LDR X2, [X21]
	0x01E922FC MOV W1, W20
	0x01E92300 BL 0x25CFC3C
	0x01E92304 LDR X0, [X22]
	0x01E92308 MOV V9.16B, V0.16B
	0x01E9230C LDR W8, [X0 + 0xE0]
	0x01E92310 CBNZ W8, 0x1E92318
	0x01E92314 BL 0x1C16DFC
	0x01E92318 MOV V0.16B, V8.16B
	0x01E9231C MOV V1.16B, V9.16B
	0x01E92320 MOV X0, X31
	0x01E92324 BL 0x337EE64
	0x01E92328 MOV X0, X19
	0x01E9232C MOV V8.16B, V0.16B
	0x01E92330 ADD W20, W20, 0x1
	0x01E92334 BL 0x1E92018
	0x01E92338 CMP W20, W0
	0x01E9233C B.LT 0x1E922F0
	0x01E92340 B 0x1E92348
	0x01E92344 FMOV D8, X31
	0x01E92348 LDP X20, X19, [X31 + 0x30]
	0x01E9234C LDP X22, X21, [X31 + 0x20]
	0x01E92350 LDR X30, [X31 + 0x10]
	0x01E92354 MOV V0.16B, V8.16B
	0x01E92358 LDP D9, D8, [X31], #0x40
	0x01E9235C RET
	0x01E92360 BL 0x1C16F20
	0x01E92364 STP D9, D8, [X31 - 0x40]!
	0x01E92368 STR X30, [X31 + 0x10]
	0x01E9236C STP X22, X21, [X31 + 0x20]
	0x01E92370 STP X20, X19, [X31 + 0x30]
	0x01E92374 ADRP X20, 0x2547000
	0x01E92378 LDRB W8, [X20 + 0x287]
	0x01E9237C MOV X19, X0
	0x01E92380 TBNZ X8, 0x0, 0x1E923A4
	0x01E92384 ADRP X0, 0x2261000
	0x01E92388 LDR X0, [X0 + 0x5A8]
	0x01E9238C BL 0x1C16CF4
	0x01E92390 ADRP X0, 0x226C000
	0x01E92394 LDR X0, [X0 + 0x268]
	0x01E92398 BL 0x1C16CF4
	0x01E9239C MOVZ W8, 0x1
	0x01E923A0 STRB W8, [X20 + 0x287]
	0x01E923A4 MOV X0, X19
	0x01E923A8 BL 0x1E92018
	0x01E923AC CMP W0, 0x1
	0x01E923B0 B.LT 0x1E92420
	0x01E923B4 ADRP X21, 0x226C000
	0x01E923B8 ADRP X22, 0x2261000
	0x01E923BC LDR X21, [X21 + 0x268]
	0x01E923C0 LDR X22, [X22 + 0x5A8]
	0x01E923C4 MOV W20, W31
	0x01E923C8 FMOV D8, X31
	0x01E923CC LDR X0, [X19 + 0x20]
	0x01E923D0 CBZ X0, 0x1E9243C
	0x01E923D4 LDR X2, [X21]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Subtract X31, X31, 752
	013 NotImplemented "Instruction MRS not yet implemented."
	014 Move X8, [X21+40]
	015 Move X20, 0x2549000
	016 Move X19, 0x226E000
	017 Move X22, 0x2264000
	018 Move [X31+744], X8
	019 Move W8, [X20+629]
	020 Move X19, [X19+368]
	021 Move X22, [X22+3672]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {85}
	026 Move X0, 0x226E000
	027 Move X0, [X0+376]
	028 Call 0x1C17CF4
	029 Move X0, 0x226E000
	030 Move X0, [X0+384]
	031 Call 0x1C17CF4
	032 Move X0, 0x226E000
	033 Move X0, [X0+392]
	034 Call 0x1C17CF4
	035 Move X0, 0x2264000
	036 Move X0, [X0+3672]
	037 Call 0x1C17CF4
	038 Move X0, 0x226E000
	039 Move X0, [X0+400]
	040 Call 0x1C17CF4
	041 Move X0, 0x226E000
	042 Move X0, [X0+408]
	043 Call 0x1C17CF4
	044 Move X0, 0x226E000
	045 Move X0, [X0+368]
	046 Call 0x1C17CF4
	047 Move X0, 0x226E000
	048 Move X0, [X0+360]
	049 Call 0x1C17CF4
	050 Move X0, 0x226E000
	051 Move X0, [X0+416]
	052 Call 0x1C17CF4
	053 Move X0, 0x226E000
	054 Move X0, [X0+424]
	055 Call 0x1C17CF4
	056 Move X0, 0x226E000
	057 Move X0, [X0+432]
	058 Call 0x1C17CF4
	059 Move X0, 0x226E000
	060 Move X0, [X0+440]
	061 Call 0x1C17CF4
	062 Move X0, 0x226E000
	063 Move X0, [X0+448]
	064 Call 0x1C17CF4
	065 Move X0, 0x226E000
	066 Move X0, [X0+456]
	067 Call 0x1C17CF4
	068 Move X0, 0x226E000
	069 Move X0, [X0+464]
	070 Call 0x1C17CF4
	071 Move X0, 0x226E000
	072 Move X0, [X0+472]
	073 Call 0x1C17CF4
	074 Move X0, 0x226E000
	075 Move X0, [X0+480]
	076 Call 0x1C17CF4
	077 Move X0, 0x226E000
	078 Move X0, [X0+488]
	079 Call 0x1C17CF4
	080 Move X0, 0x226E000
	081 Move X0, [X0+496]
	082 Call 0x1C17CF4
	083 Move W8, 1
	084 Move [X20+629], W8
	085 Move X0, [X19]
	086 Move W1, 15
	087 Move [X31+712], W31
	088 Move [X31+704], X31
	089 Call 0x1C17D6C
	090 Move X8, [X22]
	091 Move X19, X0
	092 Move W1, 2
	093 Move X0, X8
	094 Call 0x1C17D6C
	095 Compare X0, 0
	096 JumpIfEqual {592}
	097 Move W8, [X0+24]
	098 Move X1, X0
	099 Compare W8, 0
	100 JumpIfEqual {591}
	101 Move W9, 8
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move [X1+32], W9
	104 Move W8, 4
	105 Add X0, X31, 720
	106 Move [X1+36], W8
	107 Move [X31+728], X31
	108 Move [X31+720], X31
	109 Move [X31+736], W31
	110 Call TickRate..ctor, X0, X1
	111 Compare X19, 0
	112 JumpIfEqual {592}
	113 Move V0, [X31+45]
	114 Move W8, [X31+736]
	115 Move [X31+42], V0
	116 Move [X31+688], W8
	117 Move W8, [X19+24]
	118 Compare W8, 0
	119 JumpIfEqual {591}
	120 Move W8, [X31+688]
	121 Move V0, [X31+42]
	122 Move W1, 2
	123 Move [X19+48], W8
	124 Move [X19+2], V0
	125 Move X0, [X22]
	126 Call 0x1C17D6C
	127 Compare X0, 0
	128 JumpIfEqual {592}
	129 Move W8, [X0+24]
	130 Move X1, X0
	131 Compare W8, 0
	132 JumpIfEqual {591}
	133 Move W9, 10
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move [X1+32], W9
	136 Move W8, 5
	137 Add X0, X31, 648
	138 Add X23, X31, 168
	139 Move [X1+36], W8
	140 Move [X31+656], X31
	141 Move [X31+648], X31
	142 Move [X31+664], W31
	143 Call TickRate..ctor, X0, X1
	144 Move W8, [X31+664]
	145 Move V0, [X23+30]
	146 Move [X31+640], W8
	147 Move [X31+39], V0
	148 Move W8, [X19+24]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move W8, [X31+640]
	151 Move V0, [X31+39]
	152 Move X20, 0x226E000
	153 Move W1, 3
	154 Move [X19+68], W8
	155 Move [X19+52], V0
	156 Move X0, [X22]
	157 Move X20, [X20+448]
	158 Call 0x1C17D6C
	159 Move X1, [X20]
	160 Move X2, X31
	161 Move X20, X0
	162 Call RuntimeHelpers.InitializeArray, X0, X1
	163 Add X0, X31, 600
	164 Move X1, X20
	165 Move [X31+608], X31
	166 Move [X31+600], X31
	167 Move [X31+616], W31
	168 Call TickRate..ctor, X0, X1
	169 Move W8, [X31+616]
	170 Move V0, [X23+27]
	171 Move [X31+592], W8
	172 Move [X31+36], V0
	173 Move W8, [X19+24]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move W8, [X31+592]
	176 Move V0, [X31+36]
	177 Move X20, 0x226E000
	178 Move W1, 3
	179 Move [X19+88], W8
	180 Move [X19+72], V0
	181 Move X0, [X22]
	182 Move X20, [X20+440]
	183 Call 0x1C17D6C
	184 Move X1, [X20]
	185 Move X2, X31
	186 Move X20, X0
	187 Call RuntimeHelpers.InitializeArray, X0, X1
	188 Add X0, X31, 552
	189 Move X1, X20
	190 Move [X31+560], X31
	191 Move [X31+552], X31
	192 Move [X31+568], W31
	193 Call TickRate..ctor, X0, X1
	194 Move W8, [X31+568]
	195 Move V0, [X23+24]
	196 Move [X31+544], W8
	197 Move [X31+33], V0
	198 Move W8, [X19+24]
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Move W8, [X31+544]
	201 Move V0, [X31+33]
	202 Move X20, 0x226E000
	203 Move W1, 3
	204 Move [X19+108], W8
	205 Move [X19+92], V0
	206 Move X0, [X22]
	207 Move X20, [X20+424]
	208 Call 0x1C17D6C
	209 Move X1, [X20]
	210 Move X2, X31
	211 Move X20, X0
	212 Call RuntimeHelpers.InitializeArray, X0, X1
	213 Add X0, X31, 504
	214 Move X1, X20
	215 Move [X31+504], X31
	216 Move [X31+512], X31
	217 Move [X31+520], W31
	218 Call TickRate..ctor, X0, X1
	219 Move W8, [X31+520]
	220 Move V0, [X23+21]
	221 Move [X31+496], W8
	222 Move [X31+30], V0
	223 Move W8, [X19+24]
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move W8, [X31+496]
	226 Move V0, [X31+30]
	227 Move W1, 2
	228 Move [X19+128], W8
	229 Move [X19+7], V0
	230 Move X0, [X22]
	231 Call 0x1C17D6C
	232 Compare X0, 0
	233 JumpIfEqual {592}
	234 Move W8, [X0+24]
	235 Move X1, X0
	236 Compare W8, 0
	237 JumpIfEqual {591}
	238 Move W9, 30
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Move [X1+32], W9
	241 Move W8, 15
	242 Add X0, X31, 456
	243 Move [X1+36], W8
	244 Move [X31+456], X31
	245 Move [X31+464], X31
	246 Move [X31+472], W31
	247 Call TickRate..ctor, X0, X1
	248 Move W8, [X31+472]
	249 Move V0, [X23+18]
	250 Move [X31+448], W8
	251 Move [X31+27], V0
	252 Move W8, [X19+24]
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Move W8, [X31+448]
	255 Move V0, [X31+27]
	256 Move X20, 0x226E000
	257 Move W1, 3
	258 Move [X19+148], W8
	259 Move [X19+132], V0
	260 Move X0, [X22]
	261 Move X20, [X20+432]
	262 Call 0x1C17D6C
	263 Move X1, [X20]
	264 Move X2, X31
	265 Move X20, X0
	266 Call RuntimeHelpers.InitializeArray, X0, X1
	267 Add X0, X31, 408
	268 Move X1, X20
	269 Move [X31+408], X31
	270 Move [X31+416], X31
	271 Move [X31+424], W31
	272 Call TickRate..ctor, X0, X1
	273 Move W8, [X31+424]
	274 Move V0, [X23+15]
	275 Move [X31+400], W8
	276 Move [X31+24], V0
	277 Move W8, [X19+24]
	278 NotImplemented "Instruction CMP not yet implemented."
	279 Move W8, [X31+400]
	280 Move V0, [X31+24]
	281 Move W1, 2
	282 Move [X19+168], W8
	283 Move [X19+152], V0
	284 Move X0, [X22]
	285 Call 0x1C17D6C
	286 Compare X0, 0
	287 JumpIfEqual {592}
	288 Move W8, [X0+24]
	289 Move X1, X0
	290 Compare W8, 0
	291 JumpIfEqual {591}
	292 Move W9, 50
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Move [X1+32], W9
	295 Move W8, 25
	296 Add X0, X31, 360
	297 Move [X1+36], W8
	298 Move [X31+360], X31
	299 Move [X31+368], X31
	300 Move [X31+376], W31
	301 Call TickRate..ctor, X0, X1
	302 Move W8, [X31+376]
	303 Move V0, [X23+12]
	304 Move [X31+352], W8
	305 Move [X31+21], V0
	306 Move W8, [X19+24]
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Move W8, [X31+352]
	309 Move V0, [X31+21]
	310 Move X20, 0x226E000
	311 Move W1, 3
	312 Move [X19+188], W8
	313 Move [X19+172], V0
	314 Move X0, [X22]
	315 Move X20, [X20+464]
	316 Call 0x1C17D6C
	317 Move X1, [X20]
	318 Move X2, X31
	319 Move X20, X0
	320 Call RuntimeHelpers.InitializeArray, X0, X1
	321 Add X0, X31, 312
	322 Move X1, X20
	323 Move [X31+312], X31
	324 Move [X31+320], X31
	325 Move [X31+328], W31
	326 Call TickRate..ctor, X0, X1
	327 Move W8, [X31+328]
	328 Move V0, [X23+9]
	329 Move [X31+304], W8
	330 Move [X31+18], V0
	331 Move W8, [X19+24]
	332 NotImplemented "Instruction CMP not yet implemented."
	333 Move W8, [X31+304]
	334 Move V0, [X31+18]
	335 Move X20, 0x226E000
	336 Move W1, 3
	337 Move [X19+208], W8
	338 Move [X19+12], V0
	339 Move X0, [X22]
	340 Move X20, [X20+416]
	341 Call 0x1C17D6C
	342 Move X1, [X20]
	343 Move X2, X31
	344 Move X20, X0
	345 Call RuntimeHelpers.InitializeArray, X0, X1
	346 Add X0, X31, 264
	347 Move X1, X20
	348 Move [X31+264], X31
	349 Move [X31+272], X31
	350 Move [X31+280], W31
	351 Call TickRate..ctor, X0, X1
	352 Move W8, [X31+280]
	353 Move V0, [X23+6]
	354 Move [X31+256], W8
	355 Move [X31+15], V0
	356 Move W8, [X19+24]
	357 NotImplemented "Instruction CMP not yet implemented."
	358 Move W8, [X31+256]
	359 Move V0, [X31+15]
	360 Move X20, 0x226D000
	361 Move W1, 3
	362 Move [X19+228], W8
	363 Move [X19+212], V0
	364 Move X0, [X22]
	365 Move X20, [X20+496]
	366 Call 0x1C17D6C
	367 Move X1, [X20]
	368 Move X2, X31
	369 Move X20, X0
	370 Call RuntimeHelpers.InitializeArray, X0, X1
	371 Add X0, X31, 216
	372 Move X1, X20
	373 Move [X31+216], X31
	374 Move [X31+224], X31
	375 Move [X31+232], W31
	376 Call TickRate..ctor, X0, X1
	377 Move W8, [X31+232]
	378 Move V0, [X23+3]
	379 Move [X31+208], W8
	380 Move [X31+12], V0
	381 Move W8, [X19+24]
	382 NotImplemented "Instruction CMP not yet implemented."
	383 Move W8, [X31+208]
	384 Move V0, [X31+12]
	385 Move X20, 0x226D000
	386 Move W1, 3
	387 Move [X19+248], W8
	388 Move [X19+232], V0
	389 Move X0, [X22]
	390 Move X20, [X20+456]
	391 Call 0x1C17D6C
	392 Move X1, [X20]
	393 Move X2, X31
	394 Move X20, X0
	395 Call RuntimeHelpers.InitializeArray, X0, X1
	396 Add X0, X31, 168
	397 Move X1, X20
	398 Move [X31+168], X31
	399 Move [X31+176], X31
	400 Move [X31+184], W31
	401 Call TickRate..ctor, X0, X1
	402 Move W8, [X31+184]
	403 Move V0, [X23]
	404 Move [X31+160], W8
	405 Move [X31+9], V0
	406 Move W8, [X19+24]
	407 NotImplemented "Instruction CMP not yet implemented."
	408 Move V0, [X31+9]
	409 Move W8, [X31+160]
	410 Add X9, X19, 252
	411 Move X20, 0x226D000
	412 Move [X19+252], V0
	413 Move [X9+16], W8
	414 Move X0, [X22]
	415 Move X20, [X20+480]
	416 Move W1, 3
	417 Call 0x1C17D6C
	418 Move X1, [X20]
	419 Move X2, X31
	420 Move X20, X0
	421 Call RuntimeHelpers.InitializeArray, X0, X1
	422 Add X0, X31, 120
	423 Move X1, X20
	424 Move [X31+120], X31
	425 Move [X31+128], X31
	426 Move [X31+136], W31
	427 Call TickRate..ctor, X0, X1
	428 Move W8, [X31+136]
	429 NotImplemented "Instruction LDUR not yet implemented."
	430 Move [X31+112], W8
	431 Move [X31+6], V0
	432 Move W8, [X19+24]
	433 NotImplemented "Instruction CMP not yet implemented."
	434 Move W8, [X31+112]
	435 Move V0, [X31+6]
	436 Move X20, 0x226D000
	437 Move W1, 4
	438 Move [X19+288], W8
	439 Move [X19+17], V0
	440 Move X0, [X22]
	441 Move X20, [X20+488]
	442 Call 0x1C17D6C
	443 Move X1, [X20]
	444 Move X2, X31
	445 Move X20, X0
	446 Call RuntimeHelpers.InitializeArray, X0, X1
	447 Add X0, X31, 72
	448 Move X1, X20
	449 Move [X31+72], X31
	450 Move [X31+80], X31
	451 Move [X31+88], W31
	452 Call TickRate..ctor, X0, X1
	453 Move W8, [X31+88]
	454 NotImplemented "Instruction LDUR not yet implemented."
	455 Move [X31+64], W8
	456 Move [X31+3], V0
	457 Move W8, [X19+24]
	458 NotImplemented "Instruction CMP not yet implemented."
	459 Move W8, [X31+64]
	460 Move V0, [X31+3]
	461 Add X9, X19, 292
	462 Move X20, 0x226D000
	463 Move [X9+16], W8
	464 Move [X9], V0
	465 Move X0, [X22]
	466 Move X20, [X20+472]
	467 Move W1, 4
	468 Call 0x1C17D6C
	469 Move X1, [X20]
	470 Move X2, X31
	471 Move X20, X0
	472 Call RuntimeHelpers.InitializeArray, X0, X1
	473 Add X0, X31, 24
	474 Move X1, X20
	475 Move [X31+24], X31
	476 Move [X31+32], X31
	477 Move [X31+40], W31
	478 Call TickRate..ctor, X0, X1
	479 Move W8, [X31+40]
	480 NotImplemented "Instruction LDUR not yet implemented."
	481 Move [X31+16], W8
	482 Move [X31], V0
	483 Move W8, [X19+24]
	484 NotImplemented "Instruction CMP not yet implemented."
	485 Move W8, [X31+16]
	486 Move V0, [X31]
	487 Move X22, 0x226D000
	488 Move X22, [X22+360]
	489 Add X9, X19, 312
	490 Move [X19+328], W8
	491 Move [X9], V0
	492 Move X0, [X22]
	493 Move X25, 0x226D000
	494 Move X20, 0x226D000
	495 Move X24, 0x226D000
	496 Move X23, 0x226D000
	497 Move W8, [X0+224]
	498 Move X25, [X25+408]
	499 Move X20, [X20+400]
	500 Move X24, [X24+392]
	501 Move X23, [X23+384]
	502 Compare W8, 0
	503 JumpIfNotEqual {506}
	504 Call 0x1C17DFC
	505 Move X0, [X22]
	506 Move X8, [X0+184]
	507 Move [X8], X19
	508 Move X8, [X22]
	509 Move X0, [X25]
	510 Move X8, [X8+184]
	511 Move X19, [X8]
	512 Call 0x1C17F10
	513 Move X2, [X20]
	514 Move X1, X19
	515 Move X20, X0
	516 Call ReadOnlyCollection`1<TickRate>..ctor, X0, X1
	517 Move X8, [X22]
	518 Move X8, [X8+184]
	519 Move [X8+8], X20
	520 Move X0, [X24]
	521 Call 0x1C17F10
	522 Move X1, [X23]
	523 Move X19, X0
	524 Call Dictionary`2<Int32, TickRate>..ctor, X0
	525 Move X8, [X22]
	526 Move X8, [X8+184]
	527 Move X20, [X8]
	528 Move [X8+16], X19
	529 Compare X20, 0
	530 JumpIfEqual {592}
	531 Move X8, [X20+24]
	532 NotImplemented "Instruction CMP not yet implemented."
	533 Move X24, 0x226D000
	534 Move X24, [X24+376]
	535 Add X9, X31, 720
	536 Move X23, X31
	537 And X8, X8, 0
	538 Add X25, X9, 8
	539 Add X26, X20, 40
	540 NotImplemented "Instruction CMP not yet implemented."
	541 Move X8, [X26]
	542 Move W9, [X26+8]
	543 Move X0, [X22]
	544 Move W27, [X26-8]
	545 Move W19, [X26-4]
	546 Move [X31+704], X8
	547 Move [X31+712], W9
	548 Move W8, [X0+224]
	549 Compare W8, 0
	550 JumpIfNotEqual {553}
	551 Call 0x1C17DFC
	552 Move X0, [X22]
	553 Move X8, [X0+184]
	554 Move X9, [X31+704]
	555 Move X0, [X8+16]
	556 Move W8, [X31+712]
	557 Move [X31+648], X9
	558 Move [X31+656], W8
	559 Compare X0, 0
	560 JumpIfEqual {592}
	561 Move X3, [X24]
	562 Move W8, [X31+656]
	563 Move X9, [X31+648]
	564 Add X2, X31, 720
	565 Move W1, W19
	566 Move [X31+720], W27
	567 Move [X31+724], W19
	568 Move [X25+8], W8
	569 Move [X25], X9
	570 Call Dictionary`2<Int32, TickRate>.Add, X0, X1, X2
	571 Move W8, [X20+24]
	572 Add X23, X23, 1
	573 Add X26, X26, 20
	574 NotImplemented "Instruction CMP not yet implemented."
	575 Move X8, [X21+40]
	576 Move X9, [X31+744]
	577 NotImplemented "Instruction CMP not yet implemented."
	578 Add X31, X31, 752
	579 Move X20, [X31+80]
	580 Move X19, [X31+88]
	581 Move X22, [X31+64]
	582 Move X21, [X31+72]
	583 Move X24, [X31+48]
	584 Move X23, [X31+56]
	585 Move X26, [X31+32]
	586 Move X25, [X31+40]
	587 Move X30, [X31+16]
	588 Move X27, [X31+24]
	589 Move X29, [X31+96]
	590 Return 
	591 Call 0x1C17F28
	592 Call 0x1C17F20
	593 Call 0x3EB2B20

Method: System.Boolean IsValid(Fusion.TickRate rate)

Disassembly:
	0x01E924D4 BL 0x25CFC3C
	0x01E924D8 FMUL D1, D10, D9
	0x01E924DC FMUL D0, D0, D8
	0x01E924E0 MOV X0, X19
	0x01E924E4 FADD D9, D1, D0
	0x01E924E8 ADD W20, W20, 0x1
	0x01E924EC BL 0x1E92018
	0x01E924F0 CMP W20, W0
	0x01E924F4 B.LT 0x1E924C4
	0x01E924F8 B 0x1E92500
	0x01E924FC FMOV D9, X31
	0x01E92500 MOV V0.16B, V9.16B
	0x01E92504 LDP X20, X19, [X31 + 0x30]
	0x01E92508 LDP X30, X21, [X31 + 0x20]
	0x01E9250C LDP D9, D8, [X31 + 0x10]
	0x01E92510 LDR V10, [X31], #0x40
	0x01E92514 RET
	0x01E92518 BL 0x1C16F20
	0x01E9251C STP X30, X23, [X31 - 0x30]!
	0x01E92520 STP X22, X21, [X31 + 0x10]
	0x01E92524 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2548000
	006 Move X21, 0x226D000
	007 Move W8, [X20+630]
	008 Move X21, [X21+360]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x226D000
	015 Move X0, [X0+360]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+630], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move W0, [X19+4]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]

Method: System.Boolean IsValid(System.Int32 rate)

Disassembly:
	0x01E92528 ADRP X21, 0x2547000
	0x01E9252C ADRP X22, 0x2261000
	0x01E92530 LDRB W8, [X21 + 0x289]
	0x01E92534 LDR X22, [X22 + 0x5A8]
	0x01E92538 MOV W20, W1
	0x01E9253C MOV X19, X0
	0x01E92540 TBNZ X8, 0x0, 0x1E92570
	0x01E92544 ADRP X0, 0x2261000
	0x01E92548 LDR X0, [X0 + 0x5A8]
	0x01E9254C BL 0x1C16CF4
	0x01E92550 ADRP X0, 0x226C000
	0x01E92554 LDR X0, [X0 + 0x270]
	0x01E92558 BL 0x1C16CF4
	0x01E9255C ADRP X0, 0x226C000
	0x01E92560 LDR X0, [X0 + 0x278]
	0x01E92564 BL 0x1C16CF4
	0x01E92568 MOVZ W8, 0x1
	0x01E9256C STRB W8, [X21 + 0x289]
	0x01E92570 ADRP X23, 0x226C000
	0x01E92574 ADRP X21, 0x226C000
	0x01E92578 LDR X23, [X23 + 0x278]
	0x01E9257C LDR X21, [X21 + 0x270]
	0x01E92580 MOV X0, X19
	0x01E92584 MOV X1, X31
	0x01E92588 BL 0x33BDD8C
	0x01E9258C STP X31, X31, [X19 + 0x10]
	0x01E92590 LDR X0, [X22]
	0x01E92594 LDR W8, [X0 + 0xE0]
	0x01E92598 CBNZ W8, 0x1E925A0
	0x01E9259C BL 0x1C16DFC
	0x01E925A0 MOVZ W0, 0x2
	0x01E925A4 MOV W1, W20
	0x01E925A8 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2548000
	006 Move X20, 0x226D000
	007 Move W8, [X21+631]
	008 Move X20, [X20+360]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x226D000
	015 Move X0, [X0+512]
	016 Call 0x1C17CF4
	017 Move X0, 0x226D000
	018 Move X0, [X0+360]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+631], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Call TickRate.InitChecked
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move X0, [X8+16]
	031 Compare X0, 0
	032 JumpIfEqual {43}
	033 Move X8, 0x226D000
	034 Move X8, [X8+512]
	035 Move W1, W19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X2, [X8]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call Dictionary`2<Int32, TickRate>.ContainsKey, X0, X1
	042 Return X0
	043 Call 0x1C17F20

Method: Fusion.TickRate Get(System.Int32 rate)

Disassembly:
	0x01E925AC BL 0x337EDF0
	0x01E925B0 LDR X8, [X23]
	0x01E925B4 MOV W20, W0
	0x01E925B8 MOV X0, X8
	0x01E925BC BL 0x1C16F10
	0x01E925C0 LDR X2, [X21]
	0x01E925C4 MOV W1, W20
	0x01E925C8 MOV X21, X0
	0x01E925CC BL 0x25CFA38
	0x01E925D0 STR X21, [X19 + 0x20]
	0x01E925D4 LDP X20, X19, [X31 + 0x20]
	0x01E925D8 LDP X22, X21, [X31 + 0x10]
	0x01E925DC LDP X30, X23, [X31], #0x30
	0x01E925E0 RET
	0x01E925E4 STR D12, [X31 - 0x40]!
	0x01E925E8 STP D11, D10, [X31 + 0x8]
	0x01E925EC STP D9, D8, [X31 + 0x18]
	0x01E925F0 STR X30, [X31 + 0x28]
	0x01E925F4 STP X20, X19, [X31 + 0x30]
	0x01E925F8 ADRP X20, 0x2547000
	0x01E925FC LDRB W8, [X20 + 0x28A]
	0x01E92600 MOV V8.16B, V0.16B
	0x01E92604 MOV X19, X0
	0x01E92608 TBNZ X8, 0x0, 0x1E9262C
	0x01E9260C ADRP X0, 0x226C000
	0x01E92610 LDR X0, [X0 + 0x280]
	0x01E92614 BL 0x1C16CF4
	0x01E92618 ADRP X0, 0x226C000
	0x01E9261C LDR X0, [X0 + 0x288]
	0x01E92620 BL 0x1C16CF4
	0x01E92624 MOVZ W8, 0x1
	0x01E92628 STRB W8, [X20 + 0x28A]
	0x01E9262C LDR V10, [X19 + 0x10]
	0x01E92630 MOV X0, X19
	0x01E92634 BL 0x1E92100
	0x01E92638 LDR X8, [X19 + 0x20]
	0x01E9263C CBZ X8, 0x1E92710
	0x01E92640 TBZ X0, 0x0, 0x1E926AC
	0x01E92644 ADRP X9, 0x226C000
	0x01E92648 LDR X9, [X9 + 0x280]
	0x01E9264C MOV X0, X8
	0x01E92650 LDR X1, [X9]
	0x01E92654 BL 0x25D059C
	0x01E92658 LDR X0, [X19 + 0x20]
	0x01E9265C CBZ X0, 0x1E92710
	0x01E92660 ADRP X8, 0x226C000
	0x01E92664 LDR X8, [X8 + 0x288]
	0x01E92668 MOV V9.16B, V0.16B
	0x01E9266C MOV V0.16B, V8.16B
	0x01E92670 LDR X1, [X8]
	0x01E92674 BL 0x25D041C
	0x01E92678 LDR V11, [X19 + 0x10]
	0x01E9267C MOV X0, X19
	0x01E92680 FSUB D12, D8, D9
	0x01E92684 BL 0x1E92060
	0x01E92688 SCVTF D0, W0
	0x01E9268C FDIV D0, D12, D0
	0x01E92690 FADD D0, D11, D0
	0x01E92694 STR D0, [X19 + 0x10]
	0x01E92698 FSUB D0, D8, D0
	0x01E9269C FSUB D1, D9, D10
	0x01E926A0 FADD D0, D1, D0
	0x01E926A4 FMUL D0, D12, D0
	0x01E926A8 B 0x1E926EC
	0x01E926AC ADRP X9, 0x226C000
	0x01E926B0 LDR X9, [X9 + 0x288]
	0x01E926B4 MOV X0, X8
	0x01E926B8 MOV V0.16B, V8.16B
	0x01E926BC LDR X1, [X9]
	0x01E926C0 BL 0x25D041C
	0x01E926C4 LDR V9, [X19 + 0x10]
	0x01E926C8 MOV X0, X19
	0x01E926CC FSUB D10, D8, D10

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X19, X8
	010 Move X8, [X21+40]
	011 Move X23, 0x2548000
	012 Move X22, 0x226D000
	013 Move W20, W0
	014 Move [X31+24], X8
	015 Move W8, [X23+632]
	016 Move X22, [X22+360]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x226D000
	022 Move X0, [X0+520]
	023 Call 0x1C17CF4
	024 Move X0, 0x226D000
	025 Move X0, [X0+360]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+632], W8
	029 Move X0, [X22]
	030 Move [X31], X31
	031 Move [X31+8], X31
	032 Move [X31+16], W31
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Call TickRate.InitChecked
	038 Move X8, [X22]
	039 Move X8, [X8+184]
	040 Move X0, [X8+16]
	041 Compare X0, 0
	042 JumpIfEqual {68}
	043 Move X8, 0x226D000
	044 Move X8, [X8+520]
	045 Add X2, X31, 0
	046 Move W1, W20
	047 Move X3, [X8]
	048 Call Dictionary`2<Int32, TickRate>.TryGetValue, X0, X1, X2
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {69}
	053 Move W8, [X31+16]
	054 Move V0, [X31]
	055 Move [X19+16], W8
	056 Move [X19], V0
	057 Move X8, [X21+40]
	058 Move X9, [X31+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X20, [X31+64]
	061 Move X19, [X31+72]
	062 Move X22, [X31+48]
	063 Move X21, [X31+56]
	064 Move X30, [X31+32]
	065 Move X23, [X31+40]
	066 Add X31, X31, 80
	067 Return X0
	068 Call 0x1C17F20
	069 Move X0, 0x2262000
	070 Move X0, [X0+1456]
	071 Call 0x1C17D08
	072 Call 0x1C17F10
	073 Move X19, X0
	074 Move X0, 0x226D000
	075 Move X0, [X0+528]
	076 Call 0x1C17D08
	077 Move X1, X0
	078 Move X0, X19
	079 Move X2, X31
	080 Call InvalidOperationException..ctor, X0, X1
	081 Move X0, 0x226D000
	082 Move X0, [X0+536]
	083 Call 0x1C17D08
	084 Move X1, X0
	085 Move X0, X19
	086 Call 0x1C17DEC
	087 Call 0x3EB2B20

Method: Fusion.TickRate/Resolved Resolve(Fusion.TickRate/Selection selection)

Disassembly:
	0x01E926D0 BL 0x1E92018
	0x01E926D4 SCVTF D0, W0
	0x01E926D8 FDIV D0, D10, D0
	0x01E926DC FADD D0, D9, D0
	0x01E926E0 STR D0, [X19 + 0x10]
	0x01E926E4 FSUB D0, D8, D0
	0x01E926E8 FMUL D0, D10, D0
	0x01E926EC LDR V1, [X19 + 0x18]
	0x01E926F0 LDR X30, [X31 + 0x28]
	0x01E926F4 LDP D9, D8, [X31 + 0x18]
	0x01E926F8 LDP D11, D10, [X31 + 0x8]
	0x01E926FC FADD D0, D1, D0
	0x01E92700 STR D0, [X19 + 0x18]
	0x01E92704 LDP X20, X19, [X31 + 0x30]
	0x01E92708 LDR V12, [X31], #0x40
	0x01E9270C RET
	0x01E92710 BL 0x1C16F20
	0x01E92714 STR D8, [X31 - 0x20]!
	0x01E92718 STR X30, [X31 + 0x8]
	0x01E9271C STP X20, X19, [X31 + 0x10]
	0x01E92720 MOV V8.16B, V0.16B
	0x01E92724 MOV X19, X0
	0x01E92728 BL 0x1E92770
	0x01E9272C MOV X0, X19
	0x01E92730 BL 0x1E92060
	0x01E92734 CMP W0, 0x1
	0x01E92738 B.LT 0x1E92760
	0x01E9273C MOV W20, W31
	0x01E92740 MOV X0, X19
	0x01E92744 MOV V0.16B, V8.16B
	0x01E92748 BL 0x1E925E4
	0x01E9274C MOV X0, X19
	0x01E92750 ADD W20, W20, 0x1
	0x01E92754 BL 0x1E92060
	0x01E92758 CMP W20, W0
	0x01E9275C B.LT 0x1E92740
	0x01E92760 LDP X20, X19, [X31 + 0x10]
	0x01E92764 LDR X30, [X31 + 0x8]
	0x01E92768 LDR V8, [X31], #0x20
	0x01E9276C RET
	0x01E92770 STR X30, [X31 - 0x20]!
	0x01E92774 STP X20, X19, [X31 + 0x10]
	0x01E92778 ADRP X20, 0x2547000
	0x01E9277C LDRB W8, [X20 + 0x28B]
	0x01E92780 MOV X19, X0
	0x01E92784 TBNZ X8, 0x0, 0x1E9279C
	0x01E92788 ADRP X0, 0x226C000
	0x01E9278C LDR X0, [X0 + 0x290]
	0x01E92790 BL 0x1C16CF4
	0x01E92794 MOVZ W8, 0x1
	0x01E92798 STRB W8, [X20 + 0x28B]
	0x01E9279C LDR X0, [X19 + 0x20]
	0x01E927A0 STP X31, X31, [X19 + 0x10]
	0x01E927A4 CBZ X0, 0x1E927C0
	0x01E927A8 ADRP X8, 0x226C000
	0x01E927AC LDR X8, [X8 + 0x290]
	0x01E927B0 LDP X20, X19, [X31 + 0x10]
	0x01E927B4 LDR X1, [X8]
	0x01E927B8 LDR X30, [X31], #0x20
	0x01E927BC B 0x25D0650
	0x01E927C0 BL 0x1C16F20
	0x01E927C4 STP D9, D8, [X31 - 0x20]!
	0x01E927C8 STP X30, X19, [X31 + 0x10]
	0x01E927CC LDR V9, [X0 + 0x10]
	0x01E927D0 MOV X19, X0
	0x01E927D4 BL 0x1E927F8
	0x01E927D8 MOV X0, X19
	0x01E927DC MOV V8.16B, V0.16B
	0x01E927E0 BL 0x1E92208
	0x01E927E4 LDP X30, X19, [X31 + 0x10]
	0x01E927E8 FMUL D0, D8, D0
	0x01E927EC FADD D0, D9, D0
	0x01E927F0 LDP D9, D8, [X31], #0x20
	0x01E927F4 RET
	0x01E927F8 FMOV D1, 0.5
	0x01E927FC FCMP D0, D1
	0x01E92800 B.PL 0x1E92818
	0x01E92804 STR X30, [X31 - 0x10]!
	0x01E92808 BL 0x1E92824
	0x01E9280C FNEG D0, D0
	0x01E92810 LDR X30, [X31], #0x10
	0x01E92814 RET
	0x01E92818 FMOV D1, 1
	0x01E9281C FSUB D0, D1, D0
	0x01E92820 B 0x1E92824
	0x01E92824 STR D8, [X31 - 0x20]!
	0x01E92828 STR X30, [X31 + 0x8]
	0x01E9282C STP X20, X19, [X31 + 0x10]
	0x01E92830 ADRP X19, 0x2547000
	0x01E92834 ADRP X20, 0x2261000
	0x01E92838 LDRB W8, [X19 + 0x28C]
	0x01E9283C LDR X20, [X20 + 0x5A8]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X21+40]
	010 Move X23, 0x2548000
	011 Move X22, 0x226D000
	012 Move X19, X1
	013 Move [X31+56], X8
	014 Move W8, [X23+633]
	015 Move X22, [X22+360]
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x226D000
	022 Move X0, [X0+544]
	023 Call 0x1C17CF4
	024 Move X0, 0x226D000
	025 Move X0, [X0+360]
	026 Call 0x1C17CF4
	027 Move X0, 0x226D000
	028 Move X0, [X0+552]
	029 Call 0x1C17CF4
	030 Move X0, 0x226D000
	031 Move X0, [X0+560]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X23+633], W8
	035 Move X0, [X22]
	036 Move [X31+32], X31
	037 Move [X31+40], X31
	038 Move [X31+48], W31
	039 Move X23, 0x226D000
	040 Move W8, [X0+224]
	041 Move X23, [X23+560]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Call TickRate.InitChecked
	046 Move W0, W20
	047 Call TickRate.IsValid, X0
	048 Move X1, [X23]
	049 And W0, W0, 1
	050 Move X2, X31
	051 Call Assert.Always, X0, X1
	052 Move X8, [X22]
	053 Move X8, [X8+184]
	054 Move X0, [X8+16]
	055 Compare X0, 0
	056 JumpIfEqual {102}
	057 Move X8, 0x226D000
	058 Move X8, [X8+544]
	059 Move X22, 0x226D000
	060 Move W1, W20
	061 Move X2, [X8]
	062 Move X22, [X22+552]
	063 Add X8, X31, 8
	064 Call Dictionary`2<Int32, TickRate>.get_Item, X0, X1
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 Move W8, [X31+24]
	067 Add X0, X31, 32
	068 Move X1, X20
	069 Move X2, X19
	070 Move [X31+2], V0
	071 Move [X31+48], W8
	072 Add X23, X31, 32
	073 Call TickRate.ValidateSelection, X0, X1
	074 Move X1, [X22]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 NotImplemented "Instruction CSET not yet implemented."
	077 Move X2, X31
	078 Call Assert.Always, X0, X1
	079 NotImplemented "Instruction SBFM not yet implemented."
	080 NotImplemented "Instruction SBFM not yet implemented."
	081 Or X9, X23, 7
	082 NotImplemented "Instruction SBFM not yet implemented."
	083 And X10, X10, 0xFFFFFFFF
	084 And X11, X11, 0xFFFFFFFF
	085 Move W0, [X31+36]
	086 Move W8, [X8]
	087 Move W1, [X10]
	088 Move W9, [X11]
	089 Move X10, [X21+40]
	090 Move X11, [X31+56]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X20, [X31+96]
	093 Move X19, [X31+104]
	094 Move X22, [X31+80]
	095 Move X21, [X31+88]
	096 Move X30, [X31+64]
	097 Move X23, [X31+72]
	098 NotImplemented "Instruction BFM not yet implemented."
	099 NotImplemented "Instruction BFM not yet implemented."
	100 Add X31, X31, 112
	101 Return X0
	102 Call 0x1C17F20
	103 Call 0x3EB2B20

Method: System.Collections.Generic.IReadOnlyList`1<Fusion.TickRate> get_Available()

Disassembly:
	0x01E9284C LDR X0, [X0 + 0x5A8]
	0x01E92850 BL 0x1C16CF4
	0x01E92854 MOVZ W8, 0x1
	0x01E92858 STRB W8, [X19 + 0x28C]
	0x01E9285C LDR X0, [X20]
	0x01E92860 LDR W8, [X0 + 0xE0]
	0x01E92864 CBNZ W8, 0x1E9286C
	0x01E92868 BL 0x1C16DFC
	0x01E9286C MOV V0.16B, V8.16B
	0x01E92870 BL 0x3EB1C20
	0x01E92874 ADRP X8, 0xFFFFFFFFFEC5B000
	0x01E92878 LDR V2, [X8 + 0x5A0]
	0x01E9287C ADRP X8, 0xFFFFFFFFFEC5B000
	0x01E92880 FMOV D1, -2
	0x01E92884 LDR V3, [X8 + 0xED0]
	0x01E92888 ADRP X8, 0xFFFFFFFFFEC5B000
	0x01E9288C ADD X8, X8, 0x788
	0x01E92890 FMUL D0, D0, D1
	0x01E92894 UNIMPLEMENTED
	0x01E92898 FSQRT D0, D0
	0x01E9289C ADRP X8, 0xFFFFFFFFFEC59000
	0x01E928A0 FMUL D2, D0, D2
	0x01E928A4 FADD D2, D2, D3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2548000
	005 Move X19, 0x226D000
	006 Move W8, [X20+634]
	007 Move X19, [X19+360]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x226D000
	013 Move X0, [X0+360]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+634], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Call TickRate.InitChecked
	023 Move X8, [X19]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X8, [X8+184]
	027 Move X0, [X8+8]
	028 Move X30, [X31+32]
	029 Return X0

