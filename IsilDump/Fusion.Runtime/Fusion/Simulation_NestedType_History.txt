Type: Fusion.Simulation/History

Method: Fusion.Simulation/History/Entry get_Latest()

Disassembly:
	0x01ECF91C LDR X8, [X21]
	0x01ECF920 LDR X24, [X24 + 0x7C0]
	0x01ECF924 LDRH W9, [X8 + 0x12E]
	0x01ECF928 LDR X1, [X24]
	0x01ECF92C CBZ X9, 0x1ECF950
	0x01ECF930 LDR X10, [X8 + 0xB0]
	0x01ECF934 ADD X10, X10, 0x8

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+32]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: Fusion.Simulation/History/Entry get_Oldest()

Disassembly:
	0x01ECF938 LDUR X11, [X10 - 0x8]
	0x01ECF93C CMP X11, X1
	0x01ECF940 B.EQ 0x1ECF960
	0x01ECF944 SUBS X9, X9, 0x1
	0x01ECF948 ADD X10, X10, 0x10
	0x01ECF94C B.NE 0x1ECF938
	0x01ECF950 MOVZ W2, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+24]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void .ctor(System.Int32 capacity)

Disassembly:
	0x01ECF954 MOV X0, X21
	0x01ECF958 BL 0x1C5C788
	0x01ECF95C B 0x1ECF970
	0x01ECF960 LDR W9, [X10]
	0x01ECF964 ADD W9, W9, 0x1
	0x01ECF968 ADD X8, X8, W9, 0x4, SXTW
	0x01ECF96C ADD X0, X8, 0x138
	0x01ECF970 LDP V0, V1, [X31]
	0x01ECF974 LDR W8, [X31 + 0x20]
	0x01ECF978 LDR X9, [X0]
	0x01ECF97C ADD X1, X31, 0xA0
	0x01ECF980 STP V0, V1, [X31 + 0xA0]
	0x01ECF984 STR W8, [X31 + 0xC0]
	0x01ECF988 LDR X2, [X0 + 0x8]
	0x01ECF98C MOV X0, X21
	0x01ECF990 BLR X9
	0x01ECF994 LDR X8, [X20 + 0x40]
	0x01ECF998 CBZ X8, 0x1ECFA80
	0x01ECF99C LDR W8, [X20 + 0x38]
	0x01ECF9A0 CBZ W8, 0x1ECFA80
	0x01ECF9A4 ADRP X8, 0x2227000
	0x01ECF9A8 LDR X8, [X8 + 0x398]
	0x01ECF9AC LDR X0, [X8]
	0x01ECF9B0 LDR W8, [X0 + 0xE0]
	0x01ECF9B4 CBNZ W8, 0x1ECF9BC
	0x01ECF9B8 BL 0x1C16DFC
	0x01ECF9BC LDR W8, [X20 + 0x48]
	0x01ECF9C0 CBZ W8, 0x1ECFA80
	0x01ECF9C4 LDR X21, [X19 + 0x68]
	0x01ECF9C8 CBZ X21, 0x1ECFAAC
	0x01ECF9CC LDR X8, [X21]
	0x01ECF9D0 LDR W22, [X20 + 0x38]
	0x01ECF9D4 LDR X1, [X24]
	0x01ECF9D8 LDRH W9, [X8 + 0x12E]
	0x01ECF9DC CBZ X9, 0x1ECFA00
	0x01ECF9E0 LDR X10, [X8 + 0xB0]
	0x01ECF9E4 ADD X10, X10, 0x8
	0x01ECF9E8 LDUR X11, [X10 - 0x8]
	0x01ECF9EC CMP X11, X1
	0x01ECF9F0 B.EQ 0x1ECFA10
	0x01ECF9F4 SUBS X9, X9, 0x1
	0x01ECF9F8 ADD X10, X10, 0x10
	0x01ECF9FC B.NE 0x1ECF9E8
	0x01ECFA00 MOVZ W2, 0x3
	0x01ECFA04 MOV X0, X21
	0x01ECFA08 BL 0x1C5C788
	0x01ECFA0C B 0x1ECFA20
	0x01ECFA10 LDR W9, [X10]
	0x01ECFA14 ADD W9, W9, 0x3
	0x01ECFA18 ADD X8, X8, W9, 0x4, SXTW

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x250B000
	008 Move X21, 0x2231000
	009 Move W8, [X22+1242]
	010 Move X21, [X21+3712]
	011 Move W19, W1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2231000
	018 Move X0, [X0+3720]
	019 Call 0x1C17CF4
	020 Move X0, 0x2231000
	021 Move X0, [X0+3712]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+1242], W8
	025 Move X0, X20
	026 Move X1, X31
	027 Call Object..ctor, X0
	028 Move X0, [X21]
	029 Call 0x1C17F10
	030 Move X1, X31
	031 Move X21, X0
	032 Call SimulationHistoryEntryList..ctor, X0
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move [X20+16], X21
	035 Move X23, 0x2231000
	036 Move X23, [X23+3720]
	037 Move X0, [X23]
	038 Call 0x1C17F10
	039 Move X1, X31
	040 Move X22, X0
	041 Call Object..ctor, X0
	042 Compare X21, 0
	043 JumpIfEqual {57}
	044 Move X0, X21
	045 Move X1, X22
	046 Move X2, X31
	047 Call SimulationHistoryEntryList.AddLast, X0, X1
	048 Subtract W19, W19, 1
	049 Move X21, [X20+16]
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Move X23, [X31+56]
	056 Return 
	057 Call 0x1C17F20

Method: Fusion.Simulation/History/Entry Add(Fusion.Tick tick, System.Double time)

Disassembly:
	0x01ECFA24 FMOV D0, X31
	0x01ECFA28 MOV X0, X21
	0x01ECFA2C MOV X1, X22
	0x01ECFA30 BLR X8
	0x01ECFA34 MOVZ W8, 0x1
	0x01ECFA38 STRB W8, [X19 + 0xD0]
	0x01ECFA3C LDR W8, [X20 + 0x38]
	0x01ECFA40 STR W8, [X19 + 0x48]
	0x01ECFA44 ADRP X8, 0x2224000
	0x01ECFA48 LDR X8, [X8 + 0x5A8]
	0x01ECFA4C LDR W21, [X20 + 0x48]
	0x01ECFA50 LDR X0, [X8]
	0x01ECFA54 LDR W8, [X0 + 0xE0]
	0x01ECFA58 CBNZ W8, 0x1ECFA60
	0x01ECFA5C BL 0x1C16DFC
	0x01ECFA60 MOVZ W0, 0x3FF
	0x01ECFA64 MOV W1, W21
	0x01ECFA68 MOV X2, X31
	0x01ECFA6C BL 0x337EE48
	0x01ECFA70 STR W0, [X19 + 0x148]
	0x01ECFA74 LDR X1, [X20 + 0x40]
	0x01ECFA78 MOV X0, X19
	0x01ECFA7C BL 0x1ECFB98
	0x01ECFA80 LDR X8, [X23 + 0x28]
	0x01ECFA84 LDR X9, [X31 + 0xC8]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X0
	007 Move X0, [X0+16]
	008 Compare X0, 0
	009 JumpIfEqual {32}
	010 Move X21, X1
	011 Move X1, X31
	012 Move V8, V0
	013 Call SimulationHistoryEntryList.RemoveHead, X0
	014 Compare X0, 0
	015 JumpIfEqual {32}
	016 Move [X0+32], W21
	017 Move [X0+40], D8
	018 Move X19, X0
	019 Move X0, [X20+16]
	020 Compare X0, 0
	021 JumpIfEqual {32}
	022 Move X1, X19
	023 Move X2, X31
	024 Call SimulationHistoryEntryList.AddLast, X0, X1
	025 Move X0, X19
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X30, [X31+16]
	029 Move X21, [X31+24]
	030 Move V8, [X31+48]
	031 Return X0
	032 Call 0x1C17F20

