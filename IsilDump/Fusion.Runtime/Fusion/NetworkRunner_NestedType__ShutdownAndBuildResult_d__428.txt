Type: Fusion.NetworkRunner/<ShutdownAndBuildResult>d__428

Method: System.Void MoveNext()

Disassembly:
	0x01EB53F0 ADD X0, X19, 0x8
	0x01EB53F4 LDR X3, [X8]
	0x01EB53F8 ADD X1, X31, 0x10
	0x01EB53FC MOV X2, X19
	0x01EB5400 BL 0x1FB099C
	0x01EB5404 B 0x1EB54E0
	0x01EB5408 MOV X22, X31
	0x01EB540C MOV X21, X31
	0x01EB5410 STR X31, [X19 + 0x168]
	0x01EB5414 MOVZ W8, 0x32
	0x01EB5418 TBZ X27, 0x1F, 0x1EB5424
	0x01EB541C CBZ X20, 0x1EB5740
	0x01EB5420 STR X31, [X20 + 0x1A8]
	0x01EB5424 CBNZ X22, 0x1EB5634
	0x01EB5428 CMP W8, 0x32
	0x01EB542C B.EQ 0x1EB543C
	0x01EB5430 CMP W8, 0x31
	0x01EB5434 B.EQ 0x1EB5460
	0x01EB5438 CBNZ W8, 0x1EB54E0
	0x01EB543C ADRP X8, 0x2249000
	0x01EB5440 LDR X8, [X8 + 0xFF0]
	0x01EB5444 LDR X0, [X8]
	0x01EB5448 BL 0x1C16F10
	0x01EB544C MOV X21, X0
	0x01EB5450 MOV W1, W31
	0x01EB5454 MOV X2, X31
	0x01EB5458 MOV X3, X31
	0x01EB545C BL 0x1EB3D98
	0x01EB5460 MOVN W8, 0x1
	0x01EB5464 STR W8, [X19], #0x8
	0x01EB5468 ADRP X8, 0x2249000
	0x01EB546C LDR X8, [X8 + 0xFD0]
	0x01EB5470 LDR X0, [X8]
	0x01EB5474 LDR W8, [X0 + 0xE0]
	0x01EB5478 CBNZ W8, 0x1EB5480
	0x01EB547C BL 0x1C16DFC
	0x01EB5480 ADRP X8, 0x224A000
	0x01EB5484 LDR X8, [X8 + 0x148]
	0x01EB5488 MOV X0, X19
	0x01EB548C MOV X1, X21
	0x01EB5490 LDR X2, [X8]
	0x01EB5494 BL 0x26322B0
	0x01EB5498 B 0x1EB54E0
	0x01EB549C MOVZ W8, 0x4
	0x01EB54A0 STR W8, [X19]
	0x01EB54A4 LDR X8, [X31 + 0x8]
	0x01EB54A8 STR X8, [X19 + 0x190]
	0x01EB54AC ADRP X8, 0x2249000
	0x01EB54B0 LDR X8, [X8 + 0xFD0]
	0x01EB54B4 LDR X0, [X8]
	0x01EB54B8 LDR W8, [X0 + 0xE0]
	0x01EB54BC CBNZ W8, 0x1EB54C4
	0x01EB54C0 BL 0x1C16DFC
	0x01EB54C4 ADRP X8, 0x224A000
	0x01EB54C8 LDR X8, [X8 + 0x1E8]
	0x01EB54CC ADD X0, X19, 0x8
	0x01EB54D0 LDR X3, [X8]
	0x01EB54D4 ADD X1, X31, 0x8
	0x01EB54D8 MOV X2, X19
	0x01EB54DC BL 0x1FC11D0
	0x01EB54E0 LDR X8, [X26 + 0x28]
	0x01EB54E4 LDR X9, [X31 + 0x4C8]
	0x01EB54E8 CMP X8, X9
	0x01EB54EC B.NE 0x1EB5748
	0x01EB54F0 ADD X31, X31, 0x4D0
	0x01EB54F4 LDP X20, X19, [X31 + 0x50]
	0x01EB54F8 LDP X22, X21, [X31 + 0x40]
	0x01EB54FC LDP X24, X23, [X31 + 0x30]
	0x01EB5500 LDP X26, X25, [X31 + 0x20]
	0x01EB5504 LDP X28, X27, [X31 + 0x10]
	0x01EB5508 LDP X29, X30, [X31], #0x60
	0x01EB550C RET
	0x01EB5510 MOV X8, X31
	0x01EB5514 B 0x1EB51CC
	0x01EB5518 LDR X2, [X8]
	0x01EB551C STR X31, [X31 + 0x120]
	0x01EB5520 ADD X0, X31, 0x120
	0x01EB5524 MOVZ W1, 0x4
	0x01EB5528 BL 0x24345B8
	0x01EB552C LDR X8, [X31 + 0x120]
	0x01EB5530 MOVZ W9, 0x5
	0x01EB5534 STR X8, [X19 + 0x160]
	0x01EB5538 STR W9, [X20 + 0x188]
	0x01EB553C B 0x1EB5050
	0x01EB5540 BL 0x1C16F20
	0x01EB5544 BL 0x1C16F20
	0x01EB5548 BL 0x1C16F20
	0x01EB554C BL 0x1C16F20
	0x01EB5550 BL 0x1C16F20
	0x01EB5554 BL 0x1C16F20
	0x01EB5558 BL 0x1C16F20
	0x01EB555C BL 0x1C16F20
	0x01EB5560 ADRP X0, 0x2247000
	0x01EB5564 LDR X0, [X0 + 0xE70]
	0x01EB5568 BL 0x1C16D08
	0x01EB556C BL 0x1C16F10
	0x01EB5570 MOV X21, X0
	0x01EB5574 ADRP X0, 0x224A000
	0x01EB5578 LDR X0, [X0 + 0x240]
	0x01EB557C BL 0x1C16D08
	0x01EB5580 MOV X2, X0
	0x01EB5584 MOVZ W1, 0x10
	0x01EB5588 MOV X0, X21
	0x01EB558C BL 0x1EB3CE4
	0x01EB5590 ADRP X0, 0x224A000
	0x01EB5594 LDR X0, [X0 + 0x248]
	0x01EB5598 BL 0x1C16D08
	0x01EB559C MOV X1, X0
	0x01EB55A0 MOV X0, X21
	0x01EB55A4 BL 0x1C16DEC
	0x01EB55A8 STR W0, [X31 + 0x120]
	0x01EB55AC ADRP X0, 0x223E000
	0x01EB55B0 LDR X0, [X0 + 0x758]
	0x01EB55B4 BL 0x1C16D08
	0x01EB55B8 ADD X1, X31, 0x120
	0x01EB55BC BL 0x1C16E04
	0x01EB55C0 MOV X21, X0
	0x01EB55C4 ADRP X0, 0x224A000
	0x01EB55C8 LDR X0, [X0 + 0x250]
	0x01EB55CC BL 0x1C16D08
	0x01EB55D0 MOV X1, X21
	0x01EB55D4 MOV X2, X31
	0x01EB55D8 BL 0x321EFD0
	0x01EB55DC MOV X21, X0
	0x01EB55E0 ADRP X0, 0x2247000
	0x01EB55E4 LDR X0, [X0 + 0xE70]
	0x01EB55E8 BL 0x1C16D08
	0x01EB55EC BL 0x1C16F10
	0x01EB55F0 MOV X22, X0
	0x01EB55F4 MOVZ W1, 0x10
	0x01EB55F8 MOV X2, X21
	0x01EB55FC BL 0x1EB3CE4
	0x01EB5600 ADRP X0, 0x224A000
	0x01EB5604 LDR X0, [X0 + 0x248]
	0x01EB5608 BL 0x1C16D08
	0x01EB560C MOV X1, X0
	0x01EB5610 MOV X0, X22
	0x01EB5614 BL 0x1C16DEC
	0x01EB5618 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2525000
	007 Move W8, [X20+965]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x224B000
	014 Move X0, [X0+440]
	015 Call 0x1C17CF4
	016 Move X0, 0x224B000
	017 Move X0, [X0+328]
	018 Call 0x1C17CF4
	019 Move X0, 0x224A000
	020 Move X0, [X0+4048]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+965], W8
	024 Move [X31+8], X31
	025 Move X21, 0x224A000
	026 Move W8, [X19]
	027 Move X21, [X21+4048]
	028 Compare W8, 0
	029 JumpIfEqual {71}
	030 Move X0, [X19+32]
	031 Move X20, [X19+40]
	032 Call StartGameResult.BuildGameResultFromException, X0
	033 Move [X19+48], X0
	034 Compare X0, 0
	035 JumpIfEqual {105}
	036 Compare X20, 0
	037 JumpIfEqual {106}
	038 Move W2, [X0+16]
	039 Move W1, 1
	040 Move X0, X20
	041 Move W3, W31
	042 Move X4, X31
	043 Call NetworkRunner.Shutdown, X0, X1, X2, X3
	044 Compare X0, 0
	045 JumpIfEqual {107}
	046 Move X1, X31
	047 Call Task.GetAwaiter, X0
	048 Move [X31+8], X0
	049 Add X0, X31, 8
	050 Move X1, X31
	051 Call TaskAwaiter.get_IsCompleted, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {78}
	056 Move [X19], W31
	057 Move X8, [X31+8]
	058 Move [X19+56], X8
	059 Move X0, [X21]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X8, 0x224B000
	065 Move X8, [X8+440]
	066 Add X0, X19, 8
	067 Move X3, [X8]
	068 Add X1, X31, 8
	069 Move X2, X19
	070 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	071 Move X8, [X19+56]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+8], X8
	076 Move [X19+56], X31
	077 Move [X19], W9
	078 Add X0, X31, 8
	079 Move X1, X31
	080 Call TaskAwaiter.GetResult, X0
	081 Move TEMP, 1
	082 Not TEMP
	083 Move W8, TEMP
	084 Move X20, [X19+48]
	085 Move [X19], W8
	086 Move [X19+48], X31
	087 Move X0, [X21]
	088 Move X21, 0x224B000
	089 Add X19, X19, 8
	090 Move W8, [X0+224]
	091 Move X21, [X21+328]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X2, [X21]
	096 Move X0, X19
	097 Move X1, X20
	098 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	099 Move X20, [X31+32]
	100 Move X19, [X31+40]
	101 Move X30, [X31+16]
	102 Move X21, [X31+24]
	103 Add X31, X31, 48
	104 Return 
	105 Call 0x1C17F20
	106 Call 0x1C17F20
	107 Call 0x1C17F20
	108 Move X20, X0
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X0, X20
	111 Call 0x3EB2AD0
	112 Move X20, X0
	113 Move X0, 0x223F000
	114 Move X0, [X0+2000]
	115 Call 0x1C17D08
	116 Move X8, [X20]
	117 Move X1, [X8]
	118 Call 0x1C18270
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {144}
	123 Move X20, [X20]
	124 Call 0x3EB2AE0
	125 Move TEMP, 1
	126 Not TEMP
	127 Move W8, TEMP
	128 Move [X19+48], X31
	129 Move [X19+8], W8
	130 Move X0, 0x224A000
	131 Move X0, [X0+4048]
	132 Call 0x1C17D08
	133 Move W8, [X0+224]
	134 Compare W8, 0
	135 JumpIfNotEqual {137}
	136 Call 0x1C17DFC
	137 Move X0, 0x224B000
	138 Move X0, [X0+392]
	139 Call 0x1C17D08
	140 Move X2, X0
	141 Move X0, X19
	142 Move X1, X20
	143 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	144 Move W0, 8
	145 Call 0x3EB2AF0
	146 Move X8, [X20]
	147 Move [X0], X8
	148 Move X1, 0x2000000
	149 Add X1, X1, 3672
	150 Move X2, X31
	151 Call 0x3EB2B00
	152 Move X20, X0
	153 Call 0x3EB2AE0
	154 Move X0, X20
	155 Call 0x1D2D690
	156 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x01EB58C8 B 0x1EB58D0
	0x01EB58CC B 0x1EB58D0
	0x01EB58D0 MOV X21, X1
	0x01EB58D4 MOV X23, X0
	0x01EB58D8 CMP W21, 0x1
	0x01EB58DC B.NE 0x1EB5954
	0x01EB58E0 MOV X0, X23
	0x01EB58E4 BL 0x3EB1AD0
	0x01EB58E8 MOV X21, X0
	0x01EB58EC ADRP X0, 0x223E000
	0x01EB58F0 LDR X0, [X0 + 0x7D0]
	0x01EB58F4 BL 0x1C16D08
	0x01EB58F8 LDR X8, [X21]
	0x01EB58FC LDR X1, [X8]
	0x01EB5900 BL 0x1C17270
	0x01EB5904 TBZ X0, 0x0, 0x1EB5920
	0x01EB5908 LDR X21, [X21]
	0x01EB590C BL 0x3EB1AE0
	0x01EB5910 MOVZ W8, 0x1
	0x01EB5914 STR X21, [X19 + 0x168]
	0x01EB5918 STR W8, [X19 + 0x170]
	0x01EB591C B 0x1EB52C8
	0x01EB5920 MOVZ W0, 0x8
	0x01EB5924 BL 0x3EB1AF0
	0x01EB5928 LDR X8, [X21]
	0x01EB592C STR X8, [X0]
	0x01EB5930 ADRP X1, 0x1FFF000
	0x01EB5934 ADD X1, X1, 0xE58
	0x01EB5938 MOV X2, X31
	0x01EB593C BL 0x3EB1B00
	0x01EB5940 B 0x1EB5A4C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2525000
	007 Move X21, 0x224A000
	008 Move W8, [X22+966]
	009 Move X21, [X21+4048]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x224B000
	017 Move X0, [X0+400]
	018 Call 0x1C17CF4
	019 Move X0, 0x224A000
	020 Move X0, [X0+4048]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+966], W8
	024 Move X0, [X21]
	025 Move X21, 0x224B000
	026 Move W8, [X0+224]
	027 Move X21, [X21+400]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

