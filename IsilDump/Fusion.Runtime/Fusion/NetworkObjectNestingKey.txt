Type: Fusion.NetworkObjectNestingKey

Method: System.Boolean get_IsNone()

Disassembly:
	0x01E993CC STRB W8, [X20 + 0x2C9]
	0x01E993D0 LDR X0, [X21]
	0x01E993D4 LDR W8, [X0 + 0xE0]
	0x01E993D8 CBNZ W8, 0x1E993E0

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_IsValid()

Disassembly:
	0x01E973F4 MOV X20, X1
	0x01E973F8 MOV X1, X31
	0x01E973FC MOV W19, W2
	0x01E97400 BL 0x1EC9070

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Void .ctor(System.Int32 value)

Disassembly:
	0x01E993DC BL 0x1C16DFC
	0x01E993E0 MOV X0, X19

ISIL:
	001 Move [X0], W1
	002 Return 

Method: System.Boolean Equals(Fusion.NetworkObjectNestingKey other)

Disassembly:
	0x01E993E4 BL 0x1E994BC
	0x01E993E8 TBZ X0, 0x0, 0x1E99400
	0x01E993EC LDR W0, [X19]
	0x01E993F0 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x01E993F4 LDP X30, X21, [X31 + 0x10]
	0x01E993F8 ADD X31, X31, 0x30
	0x01E993FC RET
	0x01E99400 ADRP X0, 0x2265000
	0x01E99404 LDR X0, [X0 + 0x378]
	0x01E99408 BL 0x1C16D08
	0x01E9940C BL 0x19903D0
	0x01E99410 LDP W8, W9, [X19]
	0x01E99414 ADRP X19, 0x2265000
	0x01E99418 ORR W8, W9, W8, 0x0
	0x01E9941C AND W9, W9, 0x3
	0x01E99420 CMP W8, 0x0
	0x01E99424 MOVZ W8, 0x4
	0x01E99428 CSEL W8, W8, W9, EQ
	0x01E9942C STR W8, [X31 + 0xC]
	0x01E99430 LDR X19, [X19 + 0x4F0]
	0x01E99434 MOV X0, X19
	0x01E99438 BL 0x1C16D08
	0x01E9943C ADD X1, X31, 0xC
	0x01E99440 BL 0x1C16E04
	0x01E99444 MOV X20, X0
	0x01E99448 MOVZ W8, 0x1
	0x01E9944C MOV X0, X19
	0x01E99450 STR W8, [X31 + 0x8]
	0x01E99454 BL 0x1C16D08
	0x01E99458 ADD X1, X31, 0x8
	0x01E9945C BL 0x1C16E04
	0x01E99460 MOV X19, X0
	0x01E99464 ADRP X0, 0x2265000
	0x01E99468 LDR X0, [X0 + 0x4F8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2541000
	006 Move W8, [X21+698]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2266000
	014 Move X0, [X0+1176]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+698], W8
	018 Compare X20, 0
	019 JumpIfEqual {25}
	020 Move X8, 0x2266000
	021 Move X8, [X8+1176]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 Move X0, X20
	027 Call 0x1C17E08
	028 Move W8, [X0]
	029 Move W9, [X19]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x01E9946C BL 0x1C16D08
	0x01E99470 MOV X1, X20

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.String ToString()

Disassembly:
	0x01E97404 CBZ X0, 0x1E97428
	0x01E97408 AND W2, W19, 0x1
	0x01E9740C MOV X1, X20
	0x01E97410 MOV X21, X0
	0x01E97414 BL 0x1E96A60
	0x01E97418 LDP X20, X19, [X31 + 0x10]
	0x01E9741C MOV X0, X21
	0x01E97420 LDP X30, X21, [X31], #0x20
	0x01E97424 RET
	0x01E97428 BL 0x1C16F20
	0x01E9742C STP X30, X19, [X31 - 0x10]!
	0x01E97430 MOV X19, X0
	0x01E97434 LDR X0, [X0 + 0x30]
	0x01E97438 CBNZ X0, 0x1E97450
	0x01E9743C LDR X1, [X19 + 0xB0]
	0x01E97440 MOV X0, X19
	0x01E97444 MOV W2, W31
	0x01E97448 BL 0x1E973E4
	0x01E9744C STR X0, [X19 + 0x30]
	0x01E97450 LDP X30, X19, [X31], #0x10
	0x01E97454 RET
	0x01E97458 STP X30, X19, [X31 - 0x10]!
	0x01E9745C MOV X19, X0
	0x01E97460 LDR X0, [X0 + 0x38]
	0x01E97464 CBNZ X0, 0x1E9747C
	0x01E97468 LDR X1, [X19 + 0xB0]
	0x01E9746C MOVZ W2, 0x1
	0x01E97470 MOV X0, X19
	0x01E97474 BL 0x1E973E4
	0x01E97478 STR X0, [X19 + 0x38]
	0x01E9747C LDP X30, X19, [X31], #0x10
	0x01E97480 RET
	0x01E97484 STP X30, X19, [X31 - 0x10]!
	0x01E97488 MOV X19, X0
	0x01E9748C LDR X0, [X0 + 0x40]
	0x01E97490 CBNZ X0, 0x1E974A8
	0x01E97494 LDR X1, [X19 + 0xB0]
	0x01E97498 MOV X0, X19
	0x01E9749C MOV W2, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2543000
	005 Move W8, [X20+699]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x225D000
	012 Move X0, [X0+1880]
	013 Call 0x1C17CF4
	014 Move X0, 0x2268000
	015 Move X0, [X0+1016]
	016 Call 0x1C17CF4
	017 Move X0, 0x2268000
	018 Move X0, [X0+1024]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+699], W8
	022 Move W8, [X19]
	023 Compare W8, 0
	024 JumpIfEqual {38}
	025 Move X9, 0x225D000
	026 Move X9, [X9+1880]
	027 Move X19, 0x2268000
	028 Add X1, X31, 12
	029 Move X0, [X9]
	030 Move X19, [X19+1016]
	031 Move [X31+12], W8
	032 Call 0x1C17E04
	033 Move X8, [X19]
	034 Move X1, X0
	035 Move X2, X31
	036 Move X0, X8
	037 Call String.Format, X0, X1
	038 Move X8, 0x2268000
	039 Move X8, [X8+1024]
	040 Move X0, [X8]
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Return X0

