Type: Fusion.ReflectionUtils/<GetAllNetworkBehaviourTypes>d__5

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01E8F45C MOV W2, W31
	0x01E8F460 BL 0x1C5C788
	0x01E8F464 B 0x1E8F480
	0x01E8F468 MOVN W8, 0x2
	0x01E8F46C STR W8, [X19 + 0x10]
	0x01E8F470 B 0x1E8F5BC
	0x01E8F474 LDRSW X9, [X10]
	0x01E8F478 ADD X8, X8, X9, 0x4, LSL
	0x01E8F47C ADD X0, X8, 0x138
	0x01E8F480 LDP X8, X1, [X0]
	0x01E8F484 MOV X0, X19
	0x01E8F488 BLR X8
	0x01E8F48C LDR X8, [X31 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+32], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01E8F5C8 STR W9, [X19 + 0x38]
	0x01E8F5CC CBNZ X8, 0x1E8F554
	0x01E8F5D0 BL 0x1C16F20
	0x01E8F5D4 LDR X20, [X19 + 0x28]
	0x01E8F5D8 STR X31, [X19 + 0x30]
	0x01E8F5DC CBZ X20, 0x1E8F4A4
	0x01E8F5E0 ADRP X10, 0x2264000

ISIL:
	001 Move W8, [X0+16]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Add W31, W8, 3
	004 Call <GetAllNetworkBehaviourTypes>d__5.<>m__Finally1, X0
	005 Return 
	006 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01E8F5E4 LDR X8, [X20]
	0x01E8F5E8 LDR X10, [X10 + 0xE18]
	0x01E8F5EC LDRH W9, [X8 + 0x12E]
	0x01E8F5F0 LDR X1, [X10]
	0x01E8F5F4 CBZ X9, 0x1E8F618
	0x01E8F5F8 LDR X10, [X8 + 0xB0]
	0x01E8F5FC ADD X10, X10, 0x8
	0x01E8F600 LDUR X11, [X10 - 0x8]
	0x01E8F604 CMP X11, X1
	0x01E8F608 B.EQ 0x1E8F628
	0x01E8F60C SUBS X9, X9, 0x1
	0x01E8F610 ADD X10, X10, 0x10
	0x01E8F614 B.NE 0x1E8F600
	0x01E8F618 MOV X0, X20
	0x01E8F61C MOV W2, W31
	0x01E8F620 BL 0x1C5C788
	0x01E8F624 B 0x1E8F634
	0x01E8F628 LDRSW X9, [X10]
	0x01E8F62C ADD X8, X8, X9, 0x4, LSL
	0x01E8F630 ADD X0, X8, 0x138
	0x01E8F634 LDP X8, X1, [X0]
	0x01E8F638 MOV X0, X20
	0x01E8F63C BLR X8
	0x01E8F640 MOV W8, W0
	0x01E8F644 LDR X0, [X31 + 0x18]
	0x01E8F648 TBNZ X8, 0x0, 0x1E8F4C0
	0x01E8F64C BL 0x1E8F718
	0x01E8F650 LDR X8, [X31 + 0x18]
	0x01E8F654 MOV W0, W31
	0x01E8F658 STR X31, [X8 + 0x28]
	0x01E8F65C B 0x1E8F66C
	0x01E8F660 MOVZ W0, 0x1
	0x01E8F664 STR X20, [X19 + 0x18]
	0x01E8F668 STR W0, [X19 + 0x10]
	0x01E8F66C LDP X20, X19, [X31 + 0x20]
	0x01E8F670 LDR X30, [X31 + 0x10]
	0x01E8F674 ADD X31, X31, 0x30
	0x01E8F678 RET
	0x01E8F67C BL 0x1C16F20
	0x01E8F680 BL 0x1C16F20
	0x01E8F684 BL 0x1C16F28
	0x01E8F688 BL 0x1C16F20
	0x01E8F68C B 0x1E8F6B8
	0x01E8F690 B 0x1E8F6B8
	0x01E8F694 B 0x1E8F6B8
	0x01E8F698 B 0x1E8F6B8
	0x01E8F69C B 0x1E8F6B8
	0x01E8F6A0 B 0x1E8F6B8
	0x01E8F6A4 B 0x1E8F6B8
	0x01E8F6A8 B 0x1E8F6B8
	0x01E8F6AC B 0x1E8F6B8
	0x01E8F6B0 B 0x1E8F6B8
	0x01E8F6B4 B 0x1E8F6B8
	0x01E8F6B8 CMP W1, 0x1
	0x01E8F6BC B.NE 0x1E8F6EC
	0x01E8F6C0 BL 0x3EB1AD0
	0x01E8F6C4 LDR X19, [X0]
	0x01E8F6C8 STR X19, [X31]
	0x01E8F6CC BL 0x3EB1AE0
	0x01E8F6D0 CBZ X19, 0x1E8F4B8
	0x01E8F6D4 ADD X8, X31, 0x0
	0x01E8F6D8 ADD X0, X8, 0x8
	0x01E8F6DC BL 0x1996494
	0x01E8F6E0 MOV X0, X19
	0x01E8F6E4 BL 0x1C16F18
	0x01E8F6E8 CBNZ X19, 0x1E8F6F0
	0x01E8F6EC BL 0x1D2C690
	0x01E8F6F0 LDR X0, [X31 + 0x18]
	0x01E8F6F4 LDR W8, [X0 + 0x10]
	0x01E8F6F8 CMP W8, 0x1
	0x01E8F6FC B.EQ 0x1E8F708
	0x01E8F700 ADDS W31, W8, 0x3
	0x01E8F704 B.NE 0x1E8F70C
	0x01E8F708 BL 0x1E8F718
	0x01E8F70C MOV X0, X19
	0x01E8F710 BL 0x1C16F18
	0x01E8F714 BL 0x1990590
	0x01E8F718 STR X30, [X31 - 0x20]!
	0x01E8F71C STP X20, X19, [X31 + 0x10]
	0x01E8F720 ADRP X19, 0x254A000
	0x01E8F724 LDRB W8, [X19 + 0x263]
	0x01E8F728 MOV X20, X0
	0x01E8F72C TBNZ X8, 0x0, 0x1E8F744
	0x01E8F730 ADRP X0, 0x2264000
	0x01E8F734 LDR X0, [X0 + 0xE00]
	0x01E8F738 BL 0x1C16CF4
	0x01E8F73C MOVZ W8, 0x1
	0x01E8F740 STRB W8, [X19 + 0x263]
	0x01E8F744 LDR X19, [X20 + 0x28]
	0x01E8F748 MOVN W8, 0x0
	0x01E8F74C STR W8, [X20 + 0x10]
	0x01E8F750 CBZ X19, 0x1E8F79C
	0x01E8F754 ADRP X10, 0x2264000
	0x01E8F758 LDR X8, [X19]
	0x01E8F75C LDR X10, [X10 + 0xE00]
	0x01E8F760 LDRH W9, [X8 + 0x12E]
	0x01E8F764 LDR X1, [X10]
	0x01E8F768 CBZ X9, 0x1E8F78C
	0x01E8F76C LDR X10, [X8 + 0xB0]
	0x01E8F770 ADD X10, X10, 0x8
	0x01E8F774 LDUR X11, [X10 - 0x8]
	0x01E8F778 CMP X11, X1
	0x01E8F77C B.EQ 0x1E8F7A8
	0x01E8F780 SUBS X9, X9, 0x1
	0x01E8F784 ADD X10, X10, 0x10
	0x01E8F788 B.NE 0x1E8F774
	0x01E8F78C MOV X0, X19
	0x01E8F790 MOV W2, W31
	0x01E8F794 BL 0x1C5C788
	0x01E8F798 B 0x1E8F7B4
	0x01E8F79C LDP X20, X19, [X31 + 0x10]
	0x01E8F7A0 LDR X30, [X31], #0x20
	0x01E8F7A4 RET
	0x01E8F7A8 LDRSW X9, [X10]
	0x01E8F7AC ADD X8, X8, X9, 0x4, LSL
	0x01E8F7B0 ADD X0, X8, 0x138
	0x01E8F7B4 LDP X2, X1, [X0]
	0x01E8F7B8 MOV X0, X19
	0x01E8F7BC LDP X20, X19, [X31 + 0x10]
	0x01E8F7C0 LDR X30, [X31], #0x20
	0x01E8F7C4 BR X2
	0x01E8F7C8 LDR X0, [X0 + 0x18]
	0x01E8F7CC RET
	0x01E8F7D0 STP X30, X19, [X31 - 0x10]!
	0x01E8F7D4 ADRP X0, 0x2264000
	0x01E8F7D8 LDR X0, [X0 + 0xB40]
	0x01E8F7DC BL 0x1C16D08
	0x01E8F7E0 BL 0x1C16F10
	0x01E8F7E4 MOV X1, X31
	0x01E8F7E8 MOV X19, X0
	0x01E8F7EC BL 0x3380310
	0x01E8F7F0 ADRP X0, 0x226F000
	0x01E8F7F4 LDR X0, [X0 + 0xE8]
	0x01E8F7F8 BL 0x1C16D08
	0x01E8F7FC MOV X1, X0
	0x01E8F800 MOV X0, X19
	0x01E8F804 BL 0x1C16DEC
	0x01E8F808 LDR X0, [X0 + 0x18]
	0x01E8F80C RET
	0x01E8F810 STR X30, [X31 - 0x20]!
	0x01E8F814 STP X20, X19, [X31 + 0x10]
	0x01E8F818 ADRP X20, 0x254A000
	0x01E8F81C LDRB W8, [X20 + 0x264]
	0x01E8F820 MOV X19, X0
	0x01E8F824 TBNZ X8, 0x0, 0x1E8F83C
	0x01E8F828 ADRP X0, 0x226F000
	0x01E8F82C LDR X0, [X0 + 0x90]
	0x01E8F830 BL 0x1C16CF4
	0x01E8F834 MOVZ W8, 0x1
	0x01E8F838 STRB W8, [X20 + 0x264]
	0x01E8F83C LDR W8, [X19 + 0x10]
	0x01E8F840 ADDS W31, W8, 0x2
	0x01E8F844 B.NE 0x1E8F864
	0x01E8F848 LDR W20, [X19 + 0x20]
	0x01E8F84C MOV X0, X31
	0x01E8F850 BL 0x33C151C
	0x01E8F854 CMP W20, W0
	0x01E8F858 B.NE 0x1E8F864
	0x01E8F85C STR W31, [X19 + 0x10]
	0x01E8F860 B 0x1E8F890
	0x01E8F864 ADRP X8, 0x226F000
	0x01E8F868 LDR X8, [X8 + 0x90]
	0x01E8F86C LDR X0, [X8]
	0x01E8F870 BL 0x1C16F10
	0x01E8F874 MOV X1, X31
	0x01E8F878 MOV X19, X0
	0x01E8F87C BL 0x33BDD8C
	0x01E8F880 MOV X0, X31
	0x01E8F884 STR W31, [X19 + 0x10]
	0x01E8F888 BL 0x33C151C
	0x01E8F88C STR W0, [X19 + 0x20]
	0x01E8F890 MOV X0, X19
	0x01E8F894 LDP X20, X19, [X31 + 0x10]
	0x01E8F898 LDR X30, [X31], #0x20
	0x01E8F89C RET
	0x01E8F8A0 B 0x1E8F810
	0x01E8F8A4 LDR W8, [X0 + 0x10]
	0x01E8F8A8 CMP W8, 0x1
	0x01E8F8AC B.EQ 0x1E8F8B8
	0x01E8F8B0 ADDS W31, W8, 0x3
	0x01E8F8B4 B.NE 0x1E8F8BC
	0x01E8F8B8 B 0x1E8FBF4
	0x01E8F8BC RET
	0x01E8F8C0 SUB X31, X31, 0x30
	0x01E8F8C4 STP X30, X0, [X31 + 0x10]
	0x01E8F8C8 STP X20, X19, [X31 + 0x20]
	0x01E8F8CC ADRP X20, 0x254A000
	0x01E8F8D0 LDRB W8, [X20 + 0x265]
	0x01E8F8D4 MOV X19, X0
	0x01E8F8D8 TBNZ X8, 0x0, 0x1E8F914
	0x01E8F8DC ADRP X0, 0x226F000
	0x01E8F8E0 LDR X0, [X0 + 0xF0]
	0x01E8F8E4 BL 0x1C16CF4
	0x01E8F8E8 ADRP X0, 0x226F000
	0x01E8F8EC LDR X0, [X0 + 0xD8]
	0x01E8F8F0 BL 0x1C16CF4
	0x01E8F8F4 ADRP X0, 0x226F000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X0
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, 0x254B000
	011 Move W8, [X19+600]
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0x226F000
	018 Move X0, [X0+2488]
	019 Call 0x1C17CF4
	020 Move X0, 0x226F000
	021 Move X0, [X0+2496]
	022 Call 0x1C17CF4
	023 Move X0, 0x2265000
	024 Move X0, [X0+3608]
	025 Call 0x1C17CF4
	026 Move X0, 0x226F000
	027 Move X0, [X0+1368]
	028 Call 0x1C17CF4
	029 Move X0, 0x2265000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X19+600], W8
	034 Add X8, X31, 24
	035 Move [X31], X31
	036 Move [X31+8], X8
	037 Move W8, [X20+16]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Compare W8, 0
	040 JumpIfNotEqual {183}
	041 Move TEMP, 0
	042 Not TEMP
	043 Move W8, TEMP
	044 Move [X20+16], W8
	045 Call ReflectionUtils.GetAllSimulationBehaviourTypes
	046 Move X19, X0
	047 Compare X0, 0
	048 JumpIfEqual {175}
	049 Move X10, 0x226F000
	050 Move X8, [X19]
	051 Move X10, [X10+2488]
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Move X1, [X10]
	054 Compare X9, 0
	055 JumpIfEqual {62}
	056 Move X10, [X8+176]
	057 Add X10, X10, 8
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Subtract X9, X9, 1
	061 Add X10, X10, 16
	062 Move X0, X19
	063 Move W2, W31
	064 Call 0x1C5D788
	065 NotImplemented "Instruction LDRSW not yet implemented."
	066 Add X8, X8, X9
	067 Add X0, X8, 312
	068 Move X8, [X0]
	069 Move X1, [X0+8]
	070 Move X0, X19
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X20, [X31+24]
	073 Move [X20+40], X0
	074 Move X19, [X20+40]
	075 Move TEMP, 2
	076 Not TEMP
	077 Move W8, TEMP
	078 Move [X20+16], W8
	079 Compare X19, 0
	080 JumpIfEqual {165}
	081 Move X21, 0x2265000
	082 Move X22, 0x226F000
	083 Move X23, 0x226F000
	084 Move X24, 0x2265000
	085 Move X21, [X21+3608]
	086 Move X22, [X22+2496]
	087 Move X23, [X23+1368]
	088 Move X24, [X24+1728]
	089 Move X8, [X19]
	090 Move X1, [X21]
	091 NotImplemented "Instruction LDRH not yet implemented."
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move X0, X19
	101 Move W2, W31
	102 Call 0x1C5D788
	103 NotImplemented "Instruction LDRSW not yet implemented."
	104 Add X8, X8, X9
	105 Add X0, X8, 312
	106 Move X8, [X0]
	107 Move X1, [X0+8]
	108 Move X0, X19
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move W8, W0
	111 Move X0, [X31+24]
	112 Move TEMP, X8
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {166}
	116 Move X19, [X0+40]
	117 Compare X19, 0
	118 JumpIfEqual {173}
	119 Move X8, [X19]
	120 Move X1, [X22]
	121 NotImplemented "Instruction LDRH not yet implemented."
	122 Compare X9, 0
	123 JumpIfEqual {130}
	124 Move X10, [X8+176]
	125 Add X10, X10, 8
	126 NotImplemented "Instruction LDUR not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Subtract X9, X9, 1
	129 Add X10, X10, 16
	130 Move X0, X19
	131 Move W2, W31
	132 Call 0x1C5D788
	133 NotImplemented "Instruction LDRSW not yet implemented."
	134 Add X8, X8, X9
	135 Add X0, X8, 312
	136 Move X8, [X0]
	137 Move X1, [X0+8]
	138 Move X0, X19
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Move X19, X0
	141 Move X0, [X24]
	142 Move X20, [X23]
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {147}
	146 Call 0x1C17DFC
	147 Move X0, X20
	148 Move X1, X31
	149 Call Type.GetTypeFromHandle, X0
	150 Compare X0, 0
	151 JumpIfEqual {174}
	152 Move X8, [X0]
	153 Move X9, [X8+680]
	154 Move X2, [X8+688]
	155 Move X1, X19
	156 NotImplemented "Instruction BLR not yet implemented."
	157 Move X8, [X31+24]
	158 Move TEMP, X0
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfEqual {170}
	162 Move X19, [X8+40]
	163 Compare X19, 0
	164 JumpIfNotEqual {89}
	165 Call 0x1C17F20
	166 Call <GetAllNetworkBehaviourTypes>d__5.<>m__Finally1, X0
	167 Move X8, [X31+24]
	168 Move W0, W31
	169 Move [X8+40], X31
	170 Move W0, 1
	171 Move [X8+24], X19
	172 Move [X8+16], W0
	173 Call 0x1C17F20
	174 Call 0x1C17F20
	175 Call 0x1C17F20
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Call 0x3EB2AD0
	178 Move X19, [X0]
	179 Move [X31], X19
	180 Call 0x3EB2AE0
	181 Compare X19, 0
	182 JumpIfNotEqual {193}
	183 Move W0, W31
	184 Move X20, [X31+64]
	185 Move X19, [X31+72]
	186 Move X22, [X31+48]
	187 Move X21, [X31+56]
	188 Move X24, [X31+32]
	189 Move X23, [X31+40]
	190 Move X30, [X31+16]
	191 Add X31, X31, 80
	192 Return X0
	193 Add X8, X31, 0
	194 Add X0, X8, 8
	195 Call 0x1997454
	196 Move X0, X19
	197 Call 0x1C17F18
	198 Compare X19, 0
	199 JumpIfNotEqual {201}
	200 Call 0x1D2D690
	201 Move X0, [X31+24]
	202 Move W8, [X0+16]
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Add W31, W8, 3
	205 Call <GetAllNetworkBehaviourTypes>d__5.<>m__Finally1, X0
	206 Move X0, X19
	207 Call 0x1C17F18
	208 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x01E8F8F8 LDR X0, [X0 + 0xE0]
	0x01E8F8FC BL 0x1C16CF4
	0x01E8F900 ADRP X0, 0x2264000
	0x01E8F904 LDR X0, [X0 + 0xE18]
	0x01E8F908 BL 0x1C16CF4
	0x01E8F90C MOVZ W8, 0x1
	0x01E8F910 STRB W8, [X20 + 0x265]
	0x01E8F914 ADD X8, X31, 0x18
	0x01E8F918 STP X31, X8, [X31]
	0x01E8F91C LDR W8, [X19 + 0x10]
	0x01E8F920 CMP W8, 0x1
	0x01E8F924 B.EQ 0x1E8F988
	0x01E8F928 CBNZ W8, 0x1E8F9D8
	0x01E8F92C MOVN W8, 0x0
	0x01E8F930 STR W8, [X19 + 0x10]
	0x01E8F934 BL 0x1E8E220
	0x01E8F938 MOV X19, X0
	0x01E8F93C CBZ X0, 0x1E8F9C8
	0x01E8F940 ADRP X10, 0x226F000
	0x01E8F944 LDR X8, [X19]
	0x01E8F948 LDR X10, [X10 + 0xD8]
	0x01E8F94C LDRH W9, [X8 + 0x12E]
	0x01E8F950 LDR X1, [X10]
	0x01E8F954 CBZ X9, 0x1E8F978
	0x01E8F958 LDR X10, [X8 + 0xB0]
	0x01E8F95C ADD X10, X10, 0x8
	0x01E8F960 LDUR X11, [X10 - 0x8]
	0x01E8F964 CMP X11, X1
	0x01E8F968 B.EQ 0x1E8F994
	0x01E8F96C SUBS X9, X9, 0x1
	0x01E8F970 ADD X10, X10, 0x10
	0x01E8F974 B.NE 0x1E8F960
	0x01E8F978 MOV X0, X19
	0x01E8F97C MOV W2, W31
	0x01E8F980 BL 0x1C5C788
	0x01E8F984 B 0x1E8F9A0
	0x01E8F988 MOVN W8, 0x2
	0x01E8F98C STR W8, [X19 + 0x10]
	0x01E8F990 B 0x1E8FAA8
	0x01E8F994 LDRSW X9, [X10]
	0x01E8F998 ADD X8, X8, X9, 0x4, LSL
	0x01E8F99C ADD X0, X8, 0x138
	0x01E8F9A0 LDP X8, X1, [X0]
	0x01E8F9A4 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x254B000
	005 Move W8, [X19+601]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2265000
	012 Move X0, [X0+3584]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X19+601], W8
	016 Move X19, [X20+40]
	017 Move TEMP, 0
	018 Not TEMP
	019 Move W8, TEMP
	020 Move [X20+16], W8
	021 Compare X19, 0
	022 JumpIfEqual {39}
	023 Move X10, 0x2265000
	024 Move X8, [X19]
	025 Move X10, [X10+3584]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move X0, X19
	037 Move W2, W31
	038 Call 0x1C5D788
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return 
	043 NotImplemented "Instruction LDRSW not yet implemented."
	044 Add X8, X8, X9
	045 Add X0, X8, 312
	046 Move X2, [X0]
	047 Move X1, [X0+8]
	048 Move X0, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 CallNoReturn X2

Method: System.Type System.Collections.Generic.IEnumerator<System.Type>.get_Current()

Disassembly:
	0x01E8F9A8 BLR X8
	0x01E8F9AC LDR X8, [X31 + 0x18]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01E8F9B0 MOVN W9, 0x2
	0x01E8F9B4 MOV X20, X0
	0x01E8F9B8 STR X0, [X8 + 0x28]
	0x01E8F9BC STR W9, [X8 + 0x10]
	0x01E8F9C0 CBNZ X20, 0x1E8FACC
	0x01E8F9C4 BL 0x1C16F20
	0x01E8F9C8 BL 0x1C16F20
	0x01E8F9CC B 0x1E8FB94
	0x01E8F9D0 B 0x1E8FB94
	0x01E8F9D4 B 0x1E8FB94
	0x01E8F9D8 MOV W0, W31
	0x01E8F9DC B 0x1E8FB58
	0x01E8F9E0 LDR X19, [X0 + 0x28]
	0x01E8F9E4 CBZ X19, 0x1E8FB68

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x2265000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2270000
	011 Move X0, [X0+176]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01E8F9E8 ADRP X10, 0x226F000
	0x01E8F9EC LDR X8, [X19]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Collections.Generic.IEnumerator`1<System.Type> System.Collections.Generic.IEnumerable<System.Type>.GetEnumerator()

Disassembly:
	0x01E8F9F0 LDR X10, [X10 + 0xE0]
	0x01E8F9F4 LDRH W9, [X8 + 0x12E]
	0x01E8F9F8 LDR X1, [X10]
	0x01E8F9FC CBZ X9, 0x1E8FA20
	0x01E8FA00 LDR X10, [X8 + 0xB0]
	0x01E8FA04 ADD X10, X10, 0x8
	0x01E8FA08 LDUR X11, [X10 - 0x8]
	0x01E8FA0C CMP X11, X1
	0x01E8FA10 B.EQ 0x1E8FA30
	0x01E8FA14 SUBS X9, X9, 0x1
	0x01E8FA18 ADD X10, X10, 0x10
	0x01E8FA1C B.NE 0x1E8FA08
	0x01E8FA20 MOV X0, X19
	0x01E8FA24 MOV W2, W31
	0x01E8FA28 BL 0x1C5C788
	0x01E8FA2C B 0x1E8FA3C
	0x01E8FA30 LDRSW X9, [X10]
	0x01E8FA34 ADD X8, X8, X9, 0x4, LSL
	0x01E8FA38 ADD X0, X8, 0x138
	0x01E8FA3C LDP X8, X1, [X0]
	0x01E8FA40 MOV X0, X19
	0x01E8FA44 BLR X8
	0x01E8FA48 CBZ X0, 0x1E8FB6C
	0x01E8FA4C LDR X8, [X0]
	0x01E8FA50 LDR X1, [X8 + 0x230]
	0x01E8FA54 LDR X9, [X8 + 0x228]
	0x01E8FA58 BLR X9
	0x01E8FA5C LDR X19, [X31 + 0x18]
	0x01E8FA60 MOV X8, X0
	0x01E8FA64 MOV W9, W31
	0x01E8FA68 STR X0, [X19 + 0x30]
	0x01E8FA6C STR W31, [X19 + 0x38]
	0x01E8FA70 CBZ X8, 0x1E8FABC
	0x01E8FA74 LDR W10, [X8 + 0x18]
	0x01E8FA78 CMP W9, W10
	0x01E8FA7C B.GE 0x1E8FAC0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x254B000
	005 Move W8, [X20+602]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2270000
	012 Move X0, [X0+152]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+602], W8
	016 Move W8, [X19+16]
	017 Add W31, W8, 2
	018 Move W20, [X19+32]
	019 Move X0, X31
	020 Call Environment.get_CurrentManagedThreadId
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X19+16], W31
	023 Move X8, 0x2270000
	024 Move X8, [X8+152]
	025 Move X0, [X8]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X19, X0
	029 Call Object..ctor, X0
	030 Move X0, X31
	031 Move [X19+16], W31
	032 Call Environment.get_CurrentManagedThreadId
	033 Move [X19+32], W0
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x01E8FA80 B.CS 0x1E8FB70

ISIL:
	001 Call <GetAllNetworkBehaviourTypes>d__5.System.Collections.Generic.IEnumerable<System.Type>.GetEnumerator, X0
	002 Return X0

