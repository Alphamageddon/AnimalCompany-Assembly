Type: Fusion.SimulationBehaviourUpdater

Method: System.Type[] get_CallbackInterfacesDefualts()

Disassembly:
	0x01E7ACCC LDR X8, [X24]
	0x01E7ACD0 LDR X8, [X8 + 0xB8]
	0x01E7ACD4 STR X21, [X8 + 0x8]
	0x01E7ACD8 LDR X2, [X25]
	0x01E7ACDC MOV X0, X20
	0x01E7ACE0 MOV X1, X21
	0x01E7ACE4 BL 0x21B1A10
	0x01E7ACE8 LDR X1, [X23]
	0x01E7ACEC AND W0, W0, 0x1
	0x01E7ACF0 MOV X2, X31
	0x01E7ACF4 BL 0x1E3BA60
	0x01E7ACF8 B 0x1E7AD14
	0x01E7ACFC ADRP X8, 0x2281000
	0x01E7AD00 LDR X8, [X8 + 0xC60]
	0x01E7AD04 MOV W1, W31
	0x01E7AD08 LDR X0, [X8]
	0x01E7AD0C BL 0x1C16D6C
	0x01E7AD10 MOV X20, X0
	0x01E7AD14 LDR X8, [X19 + 0x20]
	0x01E7AD18 CBZ X8, 0x1E7B16C
	0x01E7AD1C LDP W2, W9, [X8 + 0x18]
	0x01E7AD20 ADD W9, W9, 0x1
	0x01E7AD24 CMP W2, 0x1
	0x01E7AD28 STP W31, W9, [X8 + 0x18]
	0x01E7AD2C B.LT 0x1E7AD40
	0x01E7AD30 LDR X0, [X8 + 0x10]
	0x01E7AD34 MOV W1, W31
	0x01E7AD38 MOV X3, X31
	0x01E7AD3C BL 0x339FA34
	0x01E7AD40 LDR X0, [X19 + 0x10]
	0x01E7AD44 CBZ X0, 0x1E7B16C
	0x01E7AD48 ADRP X8, 0x2283000
	0x01E7AD4C LDR X8, [X8 + 0x980]
	0x01E7AD50 LDR X1, [X8]
	0x01E7AD54 BL 0x2AA5220
	0x01E7AD58 BL 0x1E7A4A4
	0x01E7AD5C CBZ X0, 0x1E7B16C
	0x01E7AD60 ADRP X8, 0x2283000
	0x01E7AD64 LDR X8, [X8 + 0x9D8]
	0x01E7AD68 ADRP X28, 0x2283000
	0x01E7AD6C ADRP X27, 0x2283000
	0x01E7AD70 ADRP X26, 0x2283000
	0x01E7AD74 LDR X28, [X28 + 0x9A0]
	0x01E7AD78 LDR X27, [X27 + 0x9E0]
	0x01E7AD7C LDR X26, [X26 + 0x990]
	0x01E7AD80 LDR X1, [X8]
	0x01E7AD84 ADRP X25, 0x2283000
	0x01E7AD88 ADRP X23, 0x2283000
	0x01E7AD8C LDR X25, [X25 + 0x9B8]
	0x01E7AD90 LDR X23, [X23 + 0x998]
	0x01E7AD94 ADD X8, X31, 0x8
	0x01E7AD98 BL 0x301CB58
	0x01E7AD9C LDUR V0, [X31 + 0x8]
	0x01E7ADA0 LDR X8, [X31 + 0x18]
	0x01E7ADA4 STR V0, [X31 + 0x2]
	0x01E7ADA8 STR X8, [X31 + 0x30]
	0x01E7ADAC LDR X1, [X28]
	0x01E7ADB0 ADD X0, X31, 0x20
	0x01E7ADB4 BL 0x2BC4350
	0x01E7ADB8 TBZ X0, 0x0, 0x1E7ADE4
	0x01E7ADBC LDR X22, [X31 + 0x30]
	0x01E7ADC0 MOV X0, X22
	0x01E7ADC4 BL 0x1E7A7C8
	0x01E7ADC8 BFM X21, X1, 0x0, 0x1F
	0x01E7ADCC MOV X2, X0
	0x01E7ADD0 MOV X0, X19
	0x01E7ADD4 MOV X1, X22
	0x01E7ADD8 MOV X3, X21
	0x01E7ADDC BL 0x1E7B2B0
	0x01E7ADE0 B 0x1E7ADAC
	0x01E7ADE4 LDR X1, [X23]
	0x01E7ADE8 ADD X0, X31, 0x20
	0x01E7ADEC BL 0x2BC434C
	0x01E7ADF0 LDR X0, [X24]
	0x01E7ADF4 LDR X21, [X19 + 0x20]
	0x01E7ADF8 LDR W8, [X0 + 0xE0]
	0x01E7ADFC CBNZ W8, 0x1E7AE08
	0x01E7AE00 BL 0x1C16DFC
	0x01E7AE04 LDR X0, [X24]
	0x01E7AE08 LDR X8, [X0 + 0xB8]
	0x01E7AE0C LDR X22, [X8 + 0x10]
	0x01E7AE10 CBNZ X22, 0x1E7AE64
	0x01E7AE14 LDR W8, [X0 + 0xE0]
	0x01E7AE18 CBNZ W8, 0x1E7AE24
	0x01E7AE1C BL 0x1C16DFC
	0x01E7AE20 LDR X0, [X24]
	0x01E7AE24 ADRP X9, 0x2283000
	0x01E7AE28 LDR X8, [X0 + 0xB8]
	0x01E7AE2C LDR X9, [X9 + 0x970]
	0x01E7AE30 LDR X23, [X8]
	0x01E7AE34 LDR X0, [X9]
	0x01E7AE38 BL 0x1C16F10
	0x01E7AE3C ADRP X8, 0x2283000
	0x01E7AE40 LDR X8, [X8 + 0xA00]
	0x01E7AE44 MOV X1, X23
	0x01E7AE48 MOV X3, X31
	0x01E7AE4C MOV X22, X0
	0x01E7AE50 LDR X2, [X8]
	0x01E7AE54 BL 0x295A080
	0x01E7AE58 LDR X8, [X24]
	0x01E7AE5C LDR X8, [X8 + 0xB8]
	0x01E7AE60 STR X22, [X8 + 0x10]
	0x01E7AE64 CBZ X21, 0x1E7B16C
	0x01E7AE68 LDR X2, [X27]
	0x01E7AE6C MOV X0, X21
	0x01E7AE70 MOV X1, X22
	0x01E7AE74 BL 0x301DD30
	0x01E7AE78 BL 0x1E79CCC
	0x01E7AE7C LDR X2, [X26]
	0x01E7AE80 MOV X1, X20
	0x01E7AE84 BL 0x21BA09C
	0x01E7AE88 CBZ X0, 0x1E7B16C
	0x01E7AE8C LDR X8, [X0]
	0x01E7AE90 LDR X1, [X25]
	0x01E7AE94 MOV X20, X0
	0x01E7AE98 LDRH W9, [X8 + 0x12E]
	0x01E7AE9C CBZ X9, 0x1E7AEC0
	0x01E7AEA0 LDR X10, [X8 + 0xB0]
	0x01E7AEA4 ADD X10, X10, 0x8
	0x01E7AEA8 LDUR X11, [X10 - 0x8]
	0x01E7AEAC CMP X11, X1
	0x01E7AEB0 B.EQ 0x1E7AED0
	0x01E7AEB4 SUBS X9, X9, 0x1
	0x01E7AEB8 ADD X10, X10, 0x10
	0x01E7AEBC B.NE 0x1E7AEA8
	0x01E7AEC0 MOV X0, X20
	0x01E7AEC4 MOV W2, W31
	0x01E7AEC8 BL 0x1C5C788
	0x01E7AECC B 0x1E7AEDC
	0x01E7AED0 LDRSW X9, [X10]
	0x01E7AED4 ADD X8, X8, X9, 0x4, LSL
	0x01E7AED8 ADD X0, X8, 0x138
	0x01E7AEDC LDP X8, X1, [X0]
	0x01E7AEE0 MOV X0, X20
	0x01E7AEE4 BLR X8
	0x01E7AEE8 MOV X20, X0
	0x01E7AEEC CBZ X0, 0x1E7B170
	0x01E7AEF0 ADRP X26, 0x2279000
	0x01E7AEF4 ADRP X29, 0x2283000
	0x01E7AEF8 ADRP X25, 0x2283000
	0x01E7AEFC ADRP X27, 0x2283000
	0x01E7AF00 ADRP X28, 0x2283000
	0x01E7AF04 LDR X26, [X26 + 0xE18]
	0x01E7AF08 LDR X29, [X29 + 0x8F8]
	0x01E7AF0C LDR X25, [X25 + 0x9F0]
	0x01E7AF10 LDR X27, [X27 + 0x9C8]
	0x01E7AF14 LDR X28, [X28 + 0x978]
	0x01E7AF18 LDR X8, [X20]
	0x01E7AF1C LDR X1, [X26]
	0x01E7AF20 LDRH W9, [X8 + 0x12E]
	0x01E7AF24 CBZ X9, 0x1E7AF48
	0x01E7AF28 LDR X10, [X8 + 0xB0]
	0x01E7AF2C ADD X10, X10, 0x8
	0x01E7AF30 LDUR X11, [X10 - 0x8]
	0x01E7AF34 CMP X11, X1
	0x01E7AF38 B.EQ 0x1E7AF58
	0x01E7AF3C SUBS X9, X9, 0x1
	0x01E7AF40 ADD X10, X10, 0x10
	0x01E7AF44 B.NE 0x1E7AF30
	0x01E7AF48 MOV X0, X20
	0x01E7AF4C MOV W2, W31
	0x01E7AF50 BL 0x1C5C788
	0x01E7AF54 B 0x1E7AF64
	0x01E7AF58 LDRSW X9, [X10]
	0x01E7AF5C ADD X8, X8, X9, 0x4, LSL
	0x01E7AF60 ADD X0, X8, 0x138
	0x01E7AF64 LDP X8, X1, [X0]
	0x01E7AF68 MOV X0, X20
	0x01E7AF6C BLR X8
	0x01E7AF70 TBZ X0, 0x0, 0x1E7B0C8
	0x01E7AF74 LDR X8, [X20]
	0x01E7AF78 ADRP X10, 0x2283000
	0x01E7AF7C LDRH W9, [X8 + 0x12E]
	0x01E7AF80 LDR X10, [X10 + 0x9C0]
	0x01E7AF84 LDR X1, [X10]
	0x01E7AF88 CBZ X9, 0x1E7AFAC
	0x01E7AF8C LDR X10, [X8 + 0xB0]
	0x01E7AF90 ADD X10, X10, 0x8
	0x01E7AF94 LDUR X11, [X10 - 0x8]
	0x01E7AF98 CMP X11, X1
	0x01E7AF9C B.EQ 0x1E7AFBC
	0x01E7AFA0 SUBS X9, X9, 0x1
	0x01E7AFA4 ADD X10, X10, 0x10
	0x01E7AFA8 B.NE 0x1E7AF94
	0x01E7AFAC MOV X0, X20
	0x01E7AFB0 MOV W2, W31
	0x01E7AFB4 BL 0x1C5C788
	0x01E7AFB8 B 0x1E7AFC8
	0x01E7AFBC LDRSW X9, [X10]
	0x01E7AFC0 ADD X8, X8, X9, 0x4, LSL
	0x01E7AFC4 ADD X0, X8, 0x138
	0x01E7AFC8 LDP X8, X1, [X0]
	0x01E7AFCC MOV X0, X20
	0x01E7AFD0 BLR X8
	0x01E7AFD4 ADRP X8, 0x2283000
	0x01E7AFD8 LDR X8, [X8 + 0x8F0]
	0x01E7AFDC MOV X21, X0
	0x01E7AFE0 LDR X0, [X8]
	0x01E7AFE4 BL 0x1C16F10
	0x01E7AFE8 LDR X1, [X29]
	0x01E7AFEC MOV X22, X0
	0x01E7AFF0 BL 0x301B7C4
	0x01E7AFF4 LDR X8, [X19 + 0x20]
	0x01E7AFF8 CBZ X8, 0x1E7B154
	0x01E7AFFC MOV W23, W31
	0x01E7B000 LDR W9, [X8 + 0x18]
	0x01E7B004 CMP W23, W9
	0x01E7B008 B.GE 0x1E7B0AC
	0x01E7B00C LDR X2, [X25]
	0x01E7B010 MOV X0, X8
	0x01E7B014 MOV W1, W23
	0x01E7B018 BL 0x301BCCC
	0x01E7B01C MOV X24, X0
	0x01E7B020 CBZ X0, 0x1E7B158
	0x01E7B024 CBZ X21, 0x1E7B15C
	0x01E7B028 LDR X8, [X21]
	0x01E7B02C LDR X1, [X24 + 0x10]
	0x01E7B030 LDR X9, [X8 + 0x2A8]
	0x01E7B034 LDR X2, [X8 + 0x2B0]
	0x01E7B038 MOV X0, X21
	0x01E7B03C BLR X9
	0x01E7B040 TBZ X0, 0x0, 0x1E7B09C
	0x01E7B044 CBZ X22, 0x1E7B160
	0x01E7B048 LDR W10, [X22 + 0x1C]
	0x01E7B04C LDR X8, [X22 + 0x10]
	0x01E7B050 LDR X9, [X27]
	0x01E7B054 ADD W10, W10, 0x1
	0x01E7B058 STR W10, [X22 + 0x1C]
	0x01E7B05C CBZ X8, 0x1E7B164
	0x01E7B060 LDRSW X10, [X22 + 0x18]
	0x01E7B064 LDR W11, [X8 + 0x18]
	0x01E7B068 CMP W10, W11
	0x01E7B06C B.CS 0x1E7B084
	0x01E7B070 ADD W9, W10, 0x1
	0x01E7B074 ADD X8, X8, X10, 0x3, LSL
	0x01E7B078 STR W9, [X22 + 0x18]
	0x01E7B07C STR X24, [X8 + 0x20]
	0x01E7B080 B 0x1E7B09C
	0x01E7B084 LDR X8, [X9 + 0x20]
	0x01E7B088 LDR X8, [X8 + 0xC0]
	0x01E7B08C LDR X2, [X8 + 0x70]
	0x01E7B090 MOV X0, X22
	0x01E7B094 MOV X1, X24
	0x01E7B098 BL 0x301BF90
	0x01E7B09C LDR X8, [X19 + 0x20]
	0x01E7B0A0 ADD W23, W23, 0x1
	0x01E7B0A4 CBNZ X8, 0x1E7B000
	0x01E7B0A8 B 0x1E7B154
	0x01E7B0AC LDR X0, [X19 + 0x28]
	0x01E7B0B0 CBZ X0, 0x1E7B168
	0x01E7B0B4 LDR X3, [X28]
	0x01E7B0B8 MOV X1, X21
	0x01E7B0BC MOV X2, X22
	0x01E7B0C0 BL 0x2AA5098
	0x01E7B0C4 B 0x1E7AF18
	0x01E7B0C8 MOV X19, X31
	0x01E7B0CC CBZ X20, 0x1E7B130
	0x01E7B0D0 LDR X8, [X20]
	0x01E7B0D4 ADRP X10, 0x2278000
	0x01E7B0D8 LDRH W9, [X8 + 0x12E]
	0x01E7B0DC LDR X10, [X10 + 0xE00]
	0x01E7B0E0 LDR X1, [X10]
	0x01E7B0E4 CBZ X9, 0x1E7B108
	0x01E7B0E8 LDR X10, [X8 + 0xB0]
	0x01E7B0EC ADD X10, X10, 0x8
	0x01E7B0F0 LDUR X11, [X10 - 0x8]
	0x01E7B0F4 CMP X11, X1
	0x01E7B0F8 B.EQ 0x1E7B118
	0x01E7B0FC SUBS X9, X9, 0x1
	0x01E7B100 ADD X10, X10, 0x10
	0x01E7B104 B.NE 0x1E7B0F0
	0x01E7B108 MOV X0, X20
	0x01E7B10C MOV W2, W31
	0x01E7B110 BL 0x1C5C788
	0x01E7B114 B 0x1E7B124
	0x01E7B118 LDRSW X9, [X10]
	0x01E7B11C ADD X8, X8, X9, 0x4, LSL
	0x01E7B120 ADD X0, X8, 0x138
	0x01E7B124 LDP X8, X1, [X0]
	0x01E7B128 MOV X0, X20
	0x01E7B12C BLR X8
	0x01E7B130 CBNZ X19, 0x1E7B174
	0x01E7B134 LDP X20, X19, [X31 + 0x90]
	0x01E7B138 LDP X22, X21, [X31 + 0x80]
	0x01E7B13C LDP X24, X23, [X31 + 0x70]
	0x01E7B140 LDP X26, X25, [X31 + 0x60]
	0x01E7B144 LDP X28, X27, [X31 + 0x50]
	0x01E7B148 LDP X29, X30, [X31 + 0x40]
	0x01E7B14C ADD X31, X31, 0xA0
	0x01E7B150 RET
	0x01E7B154 BL 0x1C16F20
	0x01E7B158 BL 0x1C16F20
	0x01E7B15C BL 0x1C16F20
	0x01E7B160 BL 0x1C16F20
	0x01E7B164 BL 0x1C16F20
	0x01E7B168 BL 0x1C16F20
	0x01E7B16C BL 0x1C16F20
	0x01E7B170 BL 0x1C16F20
	0x01E7B174 MOV X0, X19
	0x01E7B178 BL 0x1C16F18
	0x01E7B17C B 0x1E7B20C
	0x01E7B180 B 0x1E7B20C
	0x01E7B184 B 0x1E7B20C
	0x01E7B188 B 0x1E7B190
	0x01E7B18C B 0x1E7B190
	0x01E7B190 MOV X21, X0
	0x01E7B194 CMP W1, 0x1
	0x01E7B198 B.NE 0x1E7B1C4
	0x01E7B19C MOV X0, X21
	0x01E7B1A0 BL 0x3EB1AD0
	0x01E7B1A4 LDR X22, [X0]
	0x01E7B1A8 BL 0x3EB1AE0
	0x01E7B1AC LDR X1, [X23]
	0x01E7B1B0 ADD X0, X31, 0x20
	0x01E7B1B4 BL 0x2BC434C
	0x01E7B1B8 CBZ X22, 0x1E7ADF0
	0x01E7B1BC MOV X0, X22
	0x01E7B1C0 BL 0x1C16F18
	0x01E7B1C4 MOV X22, X31
	0x01E7B1C8 B 0x1E7B1D0
	0x01E7B1CC MOV X21, X0
	0x01E7B1D0 LDR X1, [X23]
	0x01E7B1D4 ADD X0, X31, 0x20
	0x01E7B1D8 BL 0x2BC434C
	0x01E7B1DC CBZ X22, 0x1E7B29C
	0x01E7B1E0 MOV X0, X22
	0x01E7B1E4 BL 0x1C16F18
	0x01E7B1E8 B 0x1E7B20C
	0x01E7B1EC B 0x1E7B20C
	0x01E7B1F0 B 0x1E7B20C
	0x01E7B1F4 B 0x1E7B20C
	0x01E7B1F8 B 0x1E7B20C
	0x01E7B1FC B 0x1E7B20C
	0x01E7B200 B 0x1E7B20C
	0x01E7B204 B 0x1E7B20C
	0x01E7B208 B 0x1E7B20C
	0x01E7B20C CMP W1, 0x1
	0x01E7B210 B.NE 0x1E7B224
	0x01E7B214 BL 0x3EB1AD0
	0x01E7B218 LDR X19, [X0]
	0x01E7B21C BL 0x3EB1AE0
	0x01E7B220 B 0x1E7B0CC
	0x01E7B224 MOV X21, X0
	0x01E7B228 MOV X19, X31
	0x01E7B22C B 0x1E7B234
	0x01E7B230 MOV X21, X0
	0x01E7B234 CBZ X20, 0x1E7B298
	0x01E7B238 LDR X8, [X20]
	0x01E7B23C ADRP X10, 0x2278000
	0x01E7B240 LDRH W9, [X8 + 0x12E]
	0x01E7B244 LDR X10, [X10 + 0xE00]
	0x01E7B248 LDR X1, [X10]
	0x01E7B24C CBZ X9, 0x1E7B270
	0x01E7B250 LDR X10, [X8 + 0xB0]
	0x01E7B254 ADD X10, X10, 0x8
	0x01E7B258 LDUR X11, [X10 - 0x8]
	0x01E7B25C CMP X11, X1
	0x01E7B260 B.EQ 0x1E7B280
	0x01E7B264 SUBS X9, X9, 0x1
	0x01E7B268 ADD X10, X10, 0x10
	0x01E7B26C B.NE 0x1E7B258
	0x01E7B270 MOV X0, X20
	0x01E7B274 MOV W2, W31
	0x01E7B278 BL 0x1C5C788
	0x01E7B27C B 0x1E7B28C
	0x01E7B280 LDRSW X9, [X10]
	0x01E7B284 ADD X8, X8, X9, 0x4, LSL
	0x01E7B288 ADD X0, X8, 0x138
	0x01E7B28C LDP X8, X1, [X0]
	0x01E7B290 MOV X0, X20
	0x01E7B294 BLR X8
	0x01E7B298 CBNZ X19, 0x1E7B2A4
	0x01E7B29C MOV X0, X21
	0x01E7B2A0 BL 0x1D2C690
	0x01E7B2A4 MOV X0, X19
	0x01E7B2A8 BL 0x1C16F18
	0x01E7B2AC BL 0x1990590
	0x01E7B2B0 STR X30, [X31 - 0x40]!
	0x01E7B2B4 STP X24, X23, [X31 + 0x10]
	0x01E7B2B8 STP X22, X21, [X31 + 0x20]
	0x01E7B2BC STP X20, X19, [X31 + 0x30]
	0x01E7B2C0 ADRP X23, 0x255E000
	0x01E7B2C4 LDRB W8, [X23 + 0x1AF]
	0x01E7B2C8 MOV X21, X3
	0x01E7B2CC MOV X22, X2
	0x01E7B2D0 MOV X20, X1
	0x01E7B2D4 MOV X19, X0
	0x01E7B2D8 TBNZ X8, 0x0, 0x1E7B338
	0x01E7B2DC ADRP X0, 0x2282000
	0x01E7B2E0 LDR X0, [X0 + 0xA18]
	0x01E7B2E4 BL 0x1C16CF4
	0x01E7B2E8 ADRP X0, 0x2282000
	0x01E7B2EC LDR X0, [X0 + 0xA20]
	0x01E7B2F0 BL 0x1C16CF4
	0x01E7B2F4 ADRP X0, 0x2282000
	0x01E7B2F8 LDR X0, [X0 + 0x9C8]
	0x01E7B2FC BL 0x1C16CF4
	0x01E7B300 ADRP X0, 0x227B000
	0x01E7B304 LDR X0, [X0 + 0xA78]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2560000
	007 Move X22, 0x2282000
	008 Move X19, 0x2284000
	009 Move X20, 0x227A000
	010 Move W8, [X21+416]
	011 Move X22, [X22+3168]
	012 Move X19, [X19+1152]
	013 Move X20, [X20+1728]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {83}
	018 Move X0, 0x2284000
	019 Move X0, [X0+1040]
	020 Call 0x1C17CF4
	021 Move X0, 0x2284000
	022 Move X0, [X0+944]
	023 Call 0x1C17CF4
	024 Move X0, 0x2284000
	025 Move X0, [X0+1200]
	026 Call 0x1C17CF4
	027 Move X0, 0x2284000
	028 Move X0, [X0+1152]
	029 Call 0x1C17CF4
	030 Move X0, 0x2284000
	031 Move X0, [X0+1008]
	032 Call 0x1C17CF4
	033 Move X0, 0x2284000
	034 Move X0, [X0+976]
	035 Call 0x1C17CF4
	036 Move X0, 0x2284000
	037 Move X0, [X0+1120]
	038 Call 0x1C17CF4
	039 Move X0, 0x2284000
	040 Move X0, [X0+1024]
	041 Call 0x1C17CF4
	042 Move X0, 0x2284000
	043 Move X0, [X0+928]
	044 Call 0x1C17CF4
	045 Move X0, 0x2284000
	046 Move X0, [X0+912]
	047 Call 0x1C17CF4
	048 Move X0, 0x2284000
	049 Move X0, [X0+1104]
	050 Call 0x1C17CF4
	051 Move X0, 0x2284000
	052 Move X0, [X0+1056]
	053 Call 0x1C17CF4
	054 Move X0, 0x2284000
	055 Move X0, [X0+992]
	056 Call 0x1C17CF4
	057 Move X0, 0x2284000
	058 Move X0, [X0+960]
	059 Call 0x1C17CF4
	060 Move X0, 0x2284000
	061 Move X0, [X0+1136]
	062 Call 0x1C17CF4
	063 Move X0, 0x2284000
	064 Move X0, [X0+1072]
	065 Call 0x1C17CF4
	066 Move X0, 0x2284000
	067 Move X0, [X0+1088]
	068 Call 0x1C17CF4
	069 Move X0, 0x2284000
	070 Move X0, [X0+1168]
	071 Call 0x1C17CF4
	072 Move X0, 0x2284000
	073 Move X0, [X0+1184]
	074 Call 0x1C17CF4
	075 Move X0, 0x2282000
	076 Move X0, [X0+3168]
	077 Call 0x1C17CF4
	078 Move X0, 0x227A000
	079 Move X0, [X0+1728]
	080 Call 0x1C17CF4
	081 Move W8, 1
	082 Move [X21+416], W8
	083 Move X0, [X22]
	084 Move W1, 19
	085 Call 0x1C17D6C
	086 Move X8, [X20]
	087 Move X20, [X19]
	088 Move X19, X0
	089 Move W9, [X8+224]
	090 Compare W9, 0
	091 JumpIfNotEqual {94}
	092 Move X0, X8
	093 Call 0x1C17DFC
	094 Move X0, X20
	095 Move X1, X31
	096 Call Type.GetTypeFromHandle, X0
	097 Compare X19, 0
	098 JumpIfEqual {429}
	099 Move X20, X0
	100 Compare X0, 0
	101 JumpIfEqual {108}
	102 Move X8, [X19]
	103 Move X0, X20
	104 Move X1, [X8+64]
	105 Call 0x1C17E00
	106 Compare X0, 0
	107 JumpIfEqual {426}
	108 Move W8, [X19+24]
	109 Compare W8, 0
	110 JumpIfEqual {425}
	111 Move X8, 0x2284000
	112 Move X8, [X8+992]
	113 Move [X19+32], X20
	114 Move X1, X31
	115 Move X0, [X8]
	116 Call Type.GetTypeFromHandle, X0
	117 Move X20, X0
	118 Compare X0, 0
	119 JumpIfEqual {126}
	120 Move X8, [X19]
	121 Move X0, X20
	122 Move X1, [X8+64]
	123 Call 0x1C17E00
	124 Compare X0, 0
	125 JumpIfEqual {426}
	126 Move W8, [X19+24]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X8, 0x2284000
	129 Move X8, [X8+1008]
	130 Move [X19+40], X20
	131 Move X1, X31
	132 Move X0, [X8]
	133 Call Type.GetTypeFromHandle, X0
	134 Move X20, X0
	135 Compare X0, 0
	136 JumpIfEqual {143}
	137 Move X8, [X19]
	138 Move X0, X20
	139 Move X1, [X8+64]
	140 Call 0x1C17E00
	141 Compare X0, 0
	142 JumpIfEqual {426}
	143 Move W8, [X19+24]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X8, 0x2284000
	146 Move X8, [X8+1024]
	147 Move [X19+48], X20
	148 Move X1, X31
	149 Move X0, [X8]
	150 Call Type.GetTypeFromHandle, X0
	151 Move X20, X0
	152 Compare X0, 0
	153 JumpIfEqual {160}
	154 Move X8, [X19]
	155 Move X0, X20
	156 Move X1, [X8+64]
	157 Call 0x1C17E00
	158 Compare X0, 0
	159 JumpIfEqual {426}
	160 Move W8, [X19+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X8, 0x2284000
	163 Move X8, [X8+1040]
	164 Move [X19+56], X20
	165 Move X1, X31
	166 Move X0, [X8]
	167 Call Type.GetTypeFromHandle, X0
	168 Move X20, X0
	169 Compare X0, 0
	170 JumpIfEqual {177}
	171 Move X8, [X19]
	172 Move X0, X20
	173 Move X1, [X8+64]
	174 Call 0x1C17E00
	175 Compare X0, 0
	176 JumpIfEqual {426}
	177 Move W8, [X19+24]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X8, 0x2284000
	180 Move X8, [X8+1056]
	181 Move [X19+64], X20
	182 Move X1, X31
	183 Move X0, [X8]
	184 Call Type.GetTypeFromHandle, X0
	185 Move X20, X0
	186 Compare X0, 0
	187 JumpIfEqual {194}
	188 Move X8, [X19]
	189 Move X0, X20
	190 Move X1, [X8+64]
	191 Call 0x1C17E00
	192 Compare X0, 0
	193 JumpIfEqual {426}
	194 Move W8, [X19+24]
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move X8, 0x2284000
	197 Move X8, [X8+1104]
	198 Move [X19+72], X20
	199 Move X1, X31
	200 Move X0, [X8]
	201 Call Type.GetTypeFromHandle, X0
	202 Move X20, X0
	203 Compare X0, 0
	204 JumpIfEqual {211}
	205 Move X8, [X19]
	206 Move X0, X20
	207 Move X1, [X8+64]
	208 Call 0x1C17E00
	209 Compare X0, 0
	210 JumpIfEqual {426}
	211 Move W8, [X19+24]
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Move X8, 0x2284000
	214 Move X8, [X8+1072]
	215 Move [X19+80], X20
	216 Move X1, X31
	217 Move X0, [X8]
	218 Call Type.GetTypeFromHandle, X0
	219 Move X20, X0
	220 Compare X0, 0
	221 JumpIfEqual {228}
	222 Move X8, [X19]
	223 Move X0, X20
	224 Move X1, [X8+64]
	225 Call 0x1C17E00
	226 Compare X0, 0
	227 JumpIfEqual {426}
	228 Move W8, [X19+24]
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move X8, 0x2283000
	231 Move X8, [X8+1088]
	232 Move [X19+88], X20
	233 Move X1, X31
	234 Move X0, [X8]
	235 Call Type.GetTypeFromHandle, X0
	236 Move X20, X0
	237 Compare X0, 0
	238 JumpIfEqual {245}
	239 Move X8, [X19]
	240 Move X0, X20
	241 Move X1, [X8+64]
	242 Call 0x1C17E00
	243 Compare X0, 0
	244 JumpIfEqual {426}
	245 Move W8, [X19+24]
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Move X8, 0x2283000
	248 Move X8, [X8+1136]
	249 Move [X19+96], X20
	250 Move X1, X31
	251 Move X0, [X8]
	252 Call Type.GetTypeFromHandle, X0
	253 Move X20, X0
	254 Compare X0, 0
	255 JumpIfEqual {262}
	256 Move X8, [X19]
	257 Move X0, X20
	258 Move X1, [X8+64]
	259 Call 0x1C17E00
	260 Compare X0, 0
	261 JumpIfEqual {426}
	262 Move W8, [X19+24]
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Move X8, 0x2283000
	265 Move X8, [X8+1120]
	266 Move [X19+104], X20
	267 Move X1, X31
	268 Move X0, [X8]
	269 Call Type.GetTypeFromHandle, X0
	270 Move X20, X0
	271 Compare X0, 0
	272 JumpIfEqual {279}
	273 Move X8, [X19]
	274 Move X0, X20
	275 Move X1, [X8+64]
	276 Call 0x1C17E00
	277 Compare X0, 0
	278 JumpIfEqual {426}
	279 Move W8, [X19+24]
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Move X8, 0x2283000
	282 Move X8, [X8+1168]
	283 Move [X19+112], X20
	284 Move X1, X31
	285 Move X0, [X8]
	286 Call Type.GetTypeFromHandle, X0
	287 Move X20, X0
	288 Compare X0, 0
	289 JumpIfEqual {296}
	290 Move X8, [X19]
	291 Move X0, X20
	292 Move X1, [X8+64]
	293 Call 0x1C17E00
	294 Compare X0, 0
	295 JumpIfEqual {426}
	296 Move W8, [X19+24]
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Move X8, 0x2283000
	299 Move X8, [X8+1184]
	300 Move [X19+120], X20
	301 Move X1, X31
	302 Move X0, [X8]
	303 Call Type.GetTypeFromHandle, X0
	304 Move X20, X0
	305 Compare X0, 0
	306 JumpIfEqual {313}
	307 Move X8, [X19]
	308 Move X0, X20
	309 Move X1, [X8+64]
	310 Call 0x1C17E00
	311 Compare X0, 0
	312 JumpIfEqual {426}
	313 Move W8, [X19+24]
	314 NotImplemented "Instruction CMP not yet implemented."
	315 Move X8, 0x2283000
	316 Move X8, [X8+944]
	317 Move [X19+128], X20
	318 Move X1, X31
	319 Move X0, [X8]
	320 Call Type.GetTypeFromHandle, X0
	321 Move X20, X0
	322 Compare X0, 0
	323 JumpIfEqual {330}
	324 Move X8, [X19]
	325 Move X0, X20
	326 Move X1, [X8+64]
	327 Call 0x1C17E00
	328 Compare X0, 0
	329 JumpIfEqual {426}
	330 Move W8, [X19+24]
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Move X8, 0x2283000
	333 Move X8, [X8+928]
	334 Move [X19+136], X20
	335 Move X1, X31
	336 Move X0, [X8]
	337 Call Type.GetTypeFromHandle, X0
	338 Move X20, X0
	339 Compare X0, 0
	340 JumpIfEqual {347}
	341 Move X8, [X19]
	342 Move X0, X20
	343 Move X1, [X8+64]
	344 Call 0x1C17E00
	345 Compare X0, 0
	346 JumpIfEqual {426}
	347 Move W8, [X19+24]
	348 NotImplemented "Instruction CMP not yet implemented."
	349 Move X8, 0x2283000
	350 Move X8, [X8+912]
	351 Move [X19+144], X20
	352 Move X1, X31
	353 Move X0, [X8]
	354 Call Type.GetTypeFromHandle, X0
	355 Move X20, X0
	356 Compare X0, 0
	357 JumpIfEqual {364}
	358 Move X8, [X19]
	359 Move X0, X20
	360 Move X1, [X8+64]
	361 Call 0x1C17E00
	362 Compare X0, 0
	363 JumpIfEqual {426}
	364 Move W8, [X19+24]
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Move X8, 0x2283000
	367 Move X8, [X8+960]
	368 Move [X19+152], X20
	369 Move X1, X31
	370 Move X0, [X8]
	371 Call Type.GetTypeFromHandle, X0
	372 Move X20, X0
	373 Compare X0, 0
	374 JumpIfEqual {381}
	375 Move X8, [X19]
	376 Move X0, X20
	377 Move X1, [X8+64]
	378 Call 0x1C17E00
	379 Compare X0, 0
	380 JumpIfEqual {426}
	381 Move W8, [X19+24]
	382 NotImplemented "Instruction CMP not yet implemented."
	383 Move X8, 0x2283000
	384 Move X8, [X8+976]
	385 Move [X19+160], X20
	386 Move X1, X31
	387 Move X0, [X8]
	388 Call Type.GetTypeFromHandle, X0
	389 Move X20, X0
	390 Compare X0, 0
	391 JumpIfEqual {398}
	392 Move X8, [X19]
	393 Move X0, X20
	394 Move X1, [X8+64]
	395 Call 0x1C17E00
	396 Compare X0, 0
	397 JumpIfEqual {426}
	398 Move W8, [X19+24]
	399 NotImplemented "Instruction CMP not yet implemented."
	400 Move X8, 0x2283000
	401 Move X8, [X8+1200]
	402 Move [X19+168], X20
	403 Move X1, X31
	404 Move X0, [X8]
	405 Call Type.GetTypeFromHandle, X0
	406 Move X20, X0
	407 Compare X0, 0
	408 JumpIfEqual {415}
	409 Move X8, [X19]
	410 Move X0, X20
	411 Move X1, [X8+64]
	412 Call 0x1C17E00
	413 Compare X0, 0
	414 JumpIfEqual {426}
	415 Move W8, [X19+24]
	416 NotImplemented "Instruction CMP not yet implemented."
	417 Move [X19+176], X20
	418 Move X0, X19
	419 Move X20, [X31+32]
	420 Move X19, [X31+40]
	421 Move X22, [X31+16]
	422 Move X21, [X31+24]
	423 Move X30, [X31+48]
	424 Return X0
	425 Call 0x1C17F28
	426 Call 0x1C17F44
	427 Move X1, X31
	428 Call 0x1C17DEC
	429 Call 0x1C17F20

Method: System.Void .ctor(Fusion.NetworkProjectConfig config)

Disassembly:
	0x01E7B308 BL 0x1C16CF4
	0x01E7B30C ADRP X0, 0x2282000
	0x01E7B310 LDR X0, [X0 + 0x558]
	0x01E7B314 BL 0x1C16CF4
	0x01E7B318 ADRP X0, 0x2282000
	0x01E7B31C LDR X0, [X0 + 0x948]
	0x01E7B320 BL 0x1C16CF4
	0x01E7B324 ADRP X0, 0x2278000
	0x01E7B328 LDR X0, [X0 + 0x6C0]
	0x01E7B32C BL 0x1C16CF4
	0x01E7B330 MOVZ W8, 0x1
	0x01E7B334 STRB W8, [X23 + 0x1AF]
	0x01E7B338 CBZ X20, 0x1E7B510
	0x01E7B33C MOV X0, X20
	0x01E7B340 MOV X1, X31
	0x01E7B344 BL 0x339703C
	0x01E7B348 TBNZ X0, 0x0, 0x1E7B434
	0x01E7B34C ADRP X24, 0x2278000
	0x01E7B350 LDR X24, [X24 + 0x6C0]
	0x01E7B354 ADRP X8, 0x2282000
	0x01E7B358 LDR X0, [X24]
	0x01E7B35C LDR X8, [X8 + 0x558]
	0x01E7B360 LDR W9, [X0 + 0xE0]
	0x01E7B364 LDR X23, [X8]
	0x01E7B368 CBNZ W9, 0x1E7B370
	0x01E7B36C BL 0x1C16DFC
	0x01E7B370 MOV X0, X23
	0x01E7B374 MOV X1, X31
	0x01E7B378 BL 0x338C698
	0x01E7B37C CBZ X0, 0x1E7B510
	0x01E7B380 LDR X8, [X0]
	0x01E7B384 MOV X1, X20
	0x01E7B388 LDR X9, [X8 + 0x2A8]
	0x01E7B38C LDR X2, [X8 + 0x2B0]
	0x01E7B390 BLR X9
	0x01E7B394 TBZ X0, 0x0, 0x1E7B3CC
	0x01E7B398 ADRP X8, 0x227B000
	0x01E7B39C LDR X8, [X8 + 0xA78]
	0x01E7B3A0 LDR X0, [X8]
	0x01E7B3A4 LDR W8, [X0 + 0xE0]
	0x01E7B3A8 CBNZ W8, 0x1E7B3B0
	0x01E7B3AC BL 0x1C16DFC
	0x01E7B3B0 MOV X0, X20
	0x01E7B3B4 MOV X1, X31
	0x01E7B3B8 BL 0x1E77204
	0x01E7B3BC MOV X0, X20
	0x01E7B3C0 MOV X1, X31
	0x01E7B3C4 BL 0x1E76EBC
	0x01E7B3C8 B 0x1E7B434
	0x01E7B3CC ADRP X8, 0x2282000
	0x01E7B3D0 LDR X0, [X24]
	0x01E7B3D4 LDR X8, [X8 + 0x948]
	0x01E7B3D8 LDR W9, [X0 + 0xE0]
	0x01E7B3DC LDR X23, [X8]
	0x01E7B3E0 CBNZ W9, 0x1E7B3E8
	0x01E7B3E4 BL 0x1C16DFC
	0x01E7B3E8 MOV X0, X23
	0x01E7B3EC MOV X1, X31
	0x01E7B3F0 BL 0x338C698
	0x01E7B3F4 CBZ X0, 0x1E7B510
	0x01E7B3F8 LDR X8, [X0]
	0x01E7B3FC MOV X1, X20
	0x01E7B400 LDR X9, [X8 + 0x2A8]
	0x01E7B404 LDR X2, [X8 + 0x2B0]
	0x01E7B408 BLR X9
	0x01E7B40C TBZ X0, 0x0, 0x1E7B434
	0x01E7B410 ADRP X8, 0x227B000
	0x01E7B414 LDR X8, [X8 + 0xA78]
	0x01E7B418 LDR X0, [X8]
	0x01E7B41C LDR W8, [X0 + 0xE0]
	0x01E7B420 CBNZ W8, 0x1E7B428
	0x01E7B424 BL 0x1C16DFC
	0x01E7B428 MOV X0, X20
	0x01E7B42C MOV X1, X31
	0x01E7B430 BL 0x1E77204
	0x01E7B434 ADRP X8, 0x2282000
	0x01E7B438 LDR X8, [X8 + 0xA18]
	0x01E7B43C LDR X0, [X8]
	0x01E7B440 BL 0x1C16F10
	0x01E7B444 MOV X23, X0
	0x01E7B448 BL 0x1E7CC5C
	0x01E7B44C CBZ X23, 0x1E7B510
	0x01E7B450 UBFM X8, X22, 0x20, 0x3F
	0x01E7B454 MOV X0, X19
	0x01E7B458 MOV X1, X20
	0x01E7B45C STR X20, [X23 + 0x10]
	0x01E7B460 STP W22, W8, [X23 + 0x1C]
	0x01E7B464 STR W21, [X23 + 0x24]
	0x01E7B468 BL 0x1E7A9C0
	0x01E7B46C STR W0, [X23 + 0x18]
	0x01E7B470 LDR X0, [X19 + 0x10]
	0x01E7B474 CBZ X0, 0x1E7B510
	0x01E7B478 ADRP X8, 0x2282000
	0x01E7B47C LDR X8, [X8 + 0xA20]
	0x01E7B480 MOV X1, X20
	0x01E7B484 MOV X2, X23
	0x01E7B488 LDR X3, [X8]
	0x01E7B48C BL 0x2AA5098
	0x01E7B490 LDR X0, [X19 + 0x20]
	0x01E7B494 CBZ X0, 0x1E7B510
	0x01E7B498 ADRP X9, 0x2282000
	0x01E7B49C LDR X9, [X9 + 0x9C8]
	0x01E7B4A0 LDR W10, [X0 + 0x1C]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X23, 0x255F000
	014 Move X22, 0x2283000
	015 Move X21, 0x2283000
	016 Move X29, 0x2283000
	017 Move X28, 0x2283000
	018 Move X27, 0x2283000
	019 Move X26, 0x2283000
	020 Move X25, 0x2283000
	021 Move X24, 0x2283000
	022 Move X22, [X22+2256]
	023 Move X21, [X21+2264]
	024 Move X29, [X29+2272]
	025 Move X28, [X28+2280]
	026 Move X27, [X27+2288]
	027 Move W8, [X23+417]
	028 Move X26, [X26+2296]
	029 Move X25, [X25+2304]
	030 Move X24, [X24+2312]
	031 Move X19, X1
	032 Move X20, X0
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {69}
	037 Move X0, 0x2283000
	038 Move X0, [X0+2280]
	039 Call 0x1C17CF4
	040 Move X0, 0x2283000
	041 Move X0, [X0+2264]
	042 Call 0x1C17CF4
	043 Move X0, 0x2283000
	044 Move X0, [X0+2312]
	045 Call 0x1C17CF4
	046 Move X0, 0x2283000
	047 Move X0, [X0+2304]
	048 Call 0x1C17CF4
	049 Move X0, 0x2283000
	050 Move X0, [X0+2272]
	051 Call 0x1C17CF4
	052 Move X0, 0x2283000
	053 Move X0, [X0+2256]
	054 Call 0x1C17CF4
	055 Move X0, 0x2283000
	056 Move X0, [X0+2320]
	057 Call 0x1C17CF4
	058 Move X0, 0x2283000
	059 Move X0, [X0+2328]
	060 Call 0x1C17CF4
	061 Move X0, 0x2283000
	062 Move X0, [X0+2296]
	063 Call 0x1C17CF4
	064 Move X0, 0x2283000
	065 Move X0, [X0+2288]
	066 Call 0x1C17CF4
	067 Move W8, 1
	068 Move [X23+417], W8
	069 Move X0, X20
	070 Move X1, X31
	071 Call Object..ctor, X0
	072 Move X0, [X22]
	073 Call 0x1C17F10
	074 Move X1, [X21]
	075 Move X21, X0
	076 Call Dictionary`2<Object, Object>..ctor, X0
	077 Move [X20+16], X21
	078 Move X0, [X29]
	079 Call 0x1C17F10
	080 Move X1, [X28]
	081 Move X21, X0
	082 Call Dictionary`2<Object, ValueTuple`2<Object, Object>>..ctor, X0
	083 Move [X20+24], X21
	084 Move X0, [X27]
	085 Call 0x1C17F10
	086 Move X1, [X26]
	087 Move X21, X0
	088 Call List`1<Object>..ctor, X0
	089 Move [X20+32], X21
	090 Move X0, [X25]
	091 Call 0x1C17F10
	092 Move X1, [X24]
	093 Move X21, X0
	094 Call Dictionary`2<Object, Object>..ctor, X0
	095 Move [X20+40], X21
	096 Move X8, 0x2283000
	097 Move X8, [X8+2328]
	098 Move X0, [X8]
	099 Call 0x1C17F10
	100 Move X8, 0x2283000
	101 Move X8, [X8+2320]
	102 Move X21, X0
	103 Move X1, [X8]
	104 Call HashSet`1<Object>..ctor, X0
	105 Move [X20+48], X21
	106 Move [X20+56], X19
	107 Move X20, [X31+80]
	108 Move X19, [X31+88]
	109 Move X22, [X31+64]
	110 Move X21, [X31+72]
	111 Move X24, [X31+48]
	112 Move X23, [X31+56]
	113 Move X26, [X31+32]
	114 Move X25, [X31+40]
	115 Move X28, [X31+16]
	116 Move X27, [X31+24]
	117 Move X29, [X31+96]
	118 Move X30, [X31+104]
	119 Return 

Method: System.Collections.Generic.List`1<System.Type> Scanlibrary()

Disassembly:
	0x01E7B4A4 LDR X8, [X0 + 0x10]
	0x01E7B4A8 LDR X9, [X9]
	0x01E7B4AC ADD W10, W10, 0x1
	0x01E7B4B0 STR W10, [X0 + 0x1C]
	0x01E7B4B4 CBZ X8, 0x1E7B510
	0x01E7B4B8 LDRSW X10, [X0 + 0x18]
	0x01E7B4BC LDR W11, [X8 + 0x18]
	0x01E7B4C0 CMP W10, W11
	0x01E7B4C4 B.CS 0x1E7B4EC
	0x01E7B4C8 ADD W9, W10, 0x1
	0x01E7B4CC ADD X8, X8, X10, 0x3, LSL
	0x01E7B4D0 STR W9, [X0 + 0x18]
	0x01E7B4D4 STR X23, [X8 + 0x20]
	0x01E7B4D8 LDP X20, X19, [X31 + 0x30]
	0x01E7B4DC LDP X22, X21, [X31 + 0x20]
	0x01E7B4E0 LDP X24, X23, [X31 + 0x10]
	0x01E7B4E4 LDR X30, [X31], #0x40
	0x01E7B4E8 RET
	0x01E7B4EC LDR X8, [X9 + 0x20]
	0x01E7B4F0 MOV X1, X23
	0x01E7B4F4 LDP X20, X19, [X31 + 0x30]
	0x01E7B4F8 LDP X22, X21, [X31 + 0x20]
	0x01E7B4FC LDR X8, [X8 + 0xC0]
	0x01E7B500 LDP X24, X23, [X31 + 0x10]
	0x01E7B504 LDR X2, [X8 + 0x70]
	0x01E7B508 LDR X30, [X31], #0x40
	0x01E7B50C B 0x301BF90
	0x01E7B510 BL 0x1C16F20
	0x01E7B514 SUB X31, X31, 0x80
	0x01E7B518 STR X30, [X31 + 0x20]
	0x01E7B51C STP X28, X27, [X31 + 0x30]
	0x01E7B520 STP X26, X25, [X31 + 0x40]
	0x01E7B524 STP X24, X23, [X31 + 0x50]
	0x01E7B528 STP X22, X21, [X31 + 0x60]
	0x01E7B52C STP X20, X19, [X31 + 0x70]
	0x01E7B530 ADRP X20, 0x255E000
	0x01E7B534 LDRB W8, [X20 + 0x1A6]
	0x01E7B538 MOV X19, X0
	0x01E7B53C TBNZ X8, 0x0, 0x1E7B560
	0x01E7B540 ADRP X0, 0x2282000
	0x01E7B544 LDR X0, [X0 + 0x9E8]
	0x01E7B548 BL 0x1C16CF4
	0x01E7B54C ADRP X0, 0x2282000
	0x01E7B550 LDR X0, [X0 + 0x9F0]
	0x01E7B554 BL 0x1C16CF4
	0x01E7B558 MOVZ W8, 0x1
	0x01E7B55C STRB W8, [X20 + 0x1A6]
	0x01E7B560 LDR X0, [X19 + 0x20]
	0x01E7B564 CBZ X0, 0x1E7B6D4
	0x01E7B568 LDR W25, [X0 + 0x18]
	0x01E7B56C CMP W25, 0x1
	0x01E7B570 B.LT 0x1E7B6B4
	0x01E7B574 ADRP X26, 0x2282000
	0x01E7B578 ADRP X21, 0x2278000
	0x01E7B57C ADRP X22, 0x2280000
	0x01E7B580 ADRP X23, 0x2280000
	0x01E7B584 LDR X26, [X26 + 0x9F0]
	0x01E7B588 LDR X21, [X21 + 0x7D0]
	0x01E7B58C LDR X22, [X22 + 0x8B0]
	0x01E7B590 LDR X23, [X23 + 0x708]
	0x01E7B594 MOV W20, W31
	0x01E7B598 ADRP X27, 0x255D000
	0x01E7B59C MOVZ W28, 0x1
	0x01E7B5A0 CBZ X0, 0x1E7B63C
	0x01E7B5A4 LDR X2, [X26]
	0x01E7B5A8 MOV W1, W20
	0x01E7B5AC BL 0x301BCCC
	0x01E7B5B0 CBZ X0, 0x1E7B644
	0x01E7B5B4 LDR X24, [X0 + 0x28]
	0x01E7B5B8 ADD X8, X31, 0x8
	0x01E7B5BC MOV X0, X31
	0x01E7B5C0 BL 0x1E37474
	0x01E7B5C4 B 0x1E7B5F8
	0x01E7B5C8 LDRB W8, [X24 + 0x30]
	0x01E7B5CC ANDS W31, W8, 0x1C
	0x01E7B5D0 B.NE 0x1E7B5F4
	0x01E7B5D4 LDR X8, [X24]
	0x01E7B5D8 LDP X9, X1, [X8 + 0x1A8]
	0x01E7B5DC MOV X0, X24
	0x01E7B5E0 BLR X9
	0x01E7B5E4 LDR X8, [X24]
	0x01E7B5E8 LDP X9, X1, [X8 + 0x1B8]
	0x01E7B5EC MOV X0, X24
	0x01E7B5F0 BLR X9
	0x01E7B5F4 LDR X24, [X24 + 0x28]
	0x01E7B5F8 CBNZ X24, 0x1E7B5C8
	0x01E7B5FC LDRB W8, [X27 + 0xF17]
	0x01E7B600 CBNZ W8, 0x1E7B610
	0x01E7B604 MOV X0, X23
	0x01E7B608 BL 0x1C16CF4
	0x01E7B60C STRB W28, [X27 + 0xF17]
	0x01E7B610 LDR X0, [X23]
	0x01E7B614 LDR W8, [X0 + 0xE0]
	0x01E7B618 CBNZ W8, 0x1E7B620
	0x01E7B61C BL 0x1C16DFC
	0x01E7B620 MOV X0, X31
	0x01E7B624 BL 0x364BF5C
	0x01E7B628 ADD W20, W20, 0x1
	0x01E7B62C CMP W20, W25
	0x01E7B630 B.EQ 0x1E7B6B4
	0x01E7B634 LDR X0, [X19 + 0x20]
	0x01E7B638 CBNZ X0, 0x1E7B5A4
	0x01E7B63C BL 0x1C16F20
	0x01E7B640 B 0x1E7B6D8
	0x01E7B644 BL 0x1C16F20
	0x01E7B648 B 0x1E7B6D8
	0x01E7B64C B 0x1E7B660
	0x01E7B650 B 0x1E7B660
	0x01E7B654 B 0x1E7B660
	0x01E7B658 B 0x1E7B660
	0x01E7B65C B 0x1E7B660
	0x01E7B660 CMP W1, 0x1
	0x01E7B664 B.NE 0x1E7B6D8
	0x01E7B668 BL 0x3EB1AD0
	0x01E7B66C MOV X24, X0
	0x01E7B670 MOV X0, X21
	0x01E7B674 BL 0x1C16D08
	0x01E7B678 LDR X8, [X24]
	0x01E7B67C LDR X1, [X8]
	0x01E7B680 BL 0x1C17270
	0x01E7B684 TBZ X0, 0x0, 0x1E7B6E0
	0x01E7B688 LDR X24, [X24]
	0x01E7B68C BL 0x3EB1AE0
	0x01E7B690 MOV X0, X22
	0x01E7B694 BL 0x1C16D08
	0x01E7B698 LDR W8, [X0 + 0xE0]
	0x01E7B69C CBNZ W8, 0x1E7B6A4
	0x01E7B6A0 BL 0x1C16DFC
	0x01E7B6A4 MOV X0, X24
	0x01E7B6A8 MOV X1, X31
	0x01E7B6AC BL 0x1E3E4C8
	0x01E7B6B0 B 0x1E7B628
	0x01E7B6B4 LDP X20, X19, [X31 + 0x70]
	0x01E7B6B8 LDP X22, X21, [X31 + 0x60]
	0x01E7B6BC LDP X24, X23, [X31 + 0x50]
	0x01E7B6C0 LDP X26, X25, [X31 + 0x40]
	0x01E7B6C4 LDP X28, X27, [X31 + 0x30]
	0x01E7B6C8 LDR X30, [X31 + 0x20]
	0x01E7B6CC ADD X31, X31, 0x80
	0x01E7B6D0 RET
	0x01E7B6D4 BL 0x1C16F20
	0x01E7B6D8 MOV X19, X0
	0x01E7B6DC B 0x1E7B70C
	0x01E7B6E0 MOVZ W0, 0x8
	0x01E7B6E4 BL 0x3EB1AF0
	0x01E7B6E8 LDR X8, [X24]
	0x01E7B6EC STR X8, [X0]
	0x01E7B6F0 ADRP X1, 0x2039000
	0x01E7B6F4 ADD X1, X1, 0xE58
	0x01E7B6F8 MOV X2, X31
	0x01E7B6FC BL 0x3EB1B00
	0x01E7B700 B 0x1E7B704
	0x01E7B704 MOV X19, X0
	0x01E7B708 BL 0x3EB1AE0
	0x01E7B70C MOV X0, X19
	0x01E7B710 BL 0x1D2C690
	0x01E7B714 BL 0x1990590
	0x01E7B718 STP X30, X21, [X31 - 0x20]!
	0x01E7B71C STP X20, X19, [X31 + 0x10]
	0x01E7B720 ADRP X21, 0x255E000
	0x01E7B724 LDRB W8, [X21 + 0x1A7]
	0x01E7B728 MOV X19, X1
	0x01E7B72C MOV X20, X0
	0x01E7B730 TBNZ X8, 0x0, 0x1E7B754
	0x01E7B734 ADRP X0, 0x2282000
	0x01E7B738 LDR X0, [X0 + 0xA28]
	0x01E7B73C BL 0x1C16CF4
	0x01E7B740 ADRP X0, 0x2282000
	0x01E7B744 LDR X0, [X0 + 0x9E8]
	0x01E7B748 BL 0x1C16CF4
	0x01E7B74C MOVZ W8, 0x1
	0x01E7B750 STRB W8, [X21 + 0x1A7]
	0x01E7B754 LDR X0, [X20 + 0x28]
	0x01E7B758 CBZ X0, 0x1E7B784
	0x01E7B75C ADRP X8, 0x2282000
	0x01E7B760 LDR X8, [X8 + 0xA28]
	0x01E7B764 MOV X1, X19
	0x01E7B768 LDR X2, [X8]
	0x01E7B76C BL 0x2AA5018
	0x01E7B770 CBZ X0, 0x1E7B784
	0x01E7B774 LDR W0, [X0 + 0x18]
	0x01E7B778 LDP X20, X19, [X31 + 0x10]
	0x01E7B77C LDP X30, X21, [X31], #0x20
	0x01E7B780 RET
	0x01E7B784 BL 0x1C16F20
	0x01E7B788 STP X30, X23, [X31 - 0x30]!
	0x01E7B78C STP X22, X21, [X31 + 0x10]
	0x01E7B790 STP X20, X19, [X31 + 0x20]
	0x01E7B794 ADRP X23, 0x255E000
	0x01E7B798 LDRB W8, [X23 + 0x1A8]
	0x01E7B79C MOV X19, X3
	0x01E7B7A0 MOV W20, W2
	0x01E7B7A4 MOV X21, X1
	0x01E7B7A8 MOV X22, X0
	0x01E7B7AC TBNZ X8, 0x0, 0x1E7B7D0
	0x01E7B7B0 ADRP X0, 0x2282000
	0x01E7B7B4 LDR X0, [X0 + 0xA28]
	0x01E7B7B8 BL 0x1C16CF4
	0x01E7B7BC ADRP X0, 0x2282000
	0x01E7B7C0 LDR X0, [X0 + 0x9F0]
	0x01E7B7C4 BL 0x1C16CF4

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x255F000
	014 Move X21, 0x2283000
	015 Move X19, 0x2283000
	016 Move W8, [X20+418]
	017 Move X21, [X21+2336]
	018 Move X19, [X19+2344]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {46}
	023 Move X0, 0x2283000
	024 Move X0, [X0+2352]
	025 Call 0x1C17CF4
	026 Move X0, 0x2283000
	027 Move X0, [X0+2360]
	028 Call 0x1C17CF4
	029 Move X0, 0x2283000
	030 Move X0, [X0+2368]
	031 Call 0x1C17CF4
	032 Move X0, 0x2283000
	033 Move X0, [X0+2344]
	034 Call 0x1C17CF4
	035 Move X0, 0x2283000
	036 Move X0, [X0+2336]
	037 Call 0x1C17CF4
	038 Move X0, 0x2283000
	039 Move X0, [X0+2376]
	040 Call 0x1C17CF4
	041 Move X0, 0x2279000
	042 Move X0, [X0+1728]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X20+418], W8
	046 Move X0, [X21]
	047 Call 0x1C17F10
	048 Move X1, [X19]
	049 Move X19, X0
	050 Call List`1<Object>..ctor, X0
	051 Move X0, X31
	052 Call AppDomain.get_CurrentDomain
	053 Compare X0, 0
	054 JumpIfEqual {192}
	055 Move X1, X31
	056 Call AppDomain.GetAssemblies, X0
	057 Compare X0, 0
	058 JumpIfEqual {192}
	059 Move X8, [X0+24]
	060 Move X20, X0
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X27, 0x2283000
	063 Move X28, 0x2279000
	064 Move X29, 0x2283000
	065 Move X27, [X27+2376]
	066 Move X28, [X28+1728]
	067 Move X29, [X29+2368]
	068 Move X25, X31
	069 And X8, X8, 0
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Add X8, X20, X25
	072 Move X22, [X8+32]
	073 Move X8, 0x2283000
	074 Move X8, [X8+2352]
	075 Move X0, X22
	076 Move X1, [X8]
	077 Call 0x21A985C, X0
	078 Compare X0, 0
	079 JumpIfNotEqual {152}
	080 Compare X22, 0
	081 JumpIfEqual {159}
	082 Move X8, [X22]
	083 Move X1, [X8+560]
	084 Move X9, [X8+552]
	085 Move X0, X22
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move X22, X0
	088 Compare X0, 0
	089 JumpIfEqual {160}
	090 Move X8, [X22+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X26, X31
	093 And X8, X8, 0
	094 Add X21, X22, 32
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X0, [X28]
	097 Move X23, [X21]
	098 Move X24, [X27]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Move X0, X24
	104 Move X1, X31
	105 Call Type.GetTypeFromHandle, X0
	106 Compare X0, 0
	107 JumpIfEqual {156}
	108 Move X8, [X0]
	109 Move X9, [X8+680]
	110 Move X2, [X8+688]
	111 Move X1, X23
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {149}
	117 Compare X19, 0
	118 JumpIfEqual {157}
	119 Move X2, [X29]
	120 Move X0, X19
	121 Move X1, X23
	122 Call List`1<Object>.Contains, X0, X1
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfEqual {149}
	127 Move X9, 0x2283000
	128 Move W10, [X19+28]
	129 Move X8, [X19+16]
	130 Move X9, [X9+2360]
	131 Add W10, W10, 1
	132 Move X9, [X9]
	133 Move [X19+28], W10
	134 Compare X8, 0
	135 JumpIfEqual {158}
	136 NotImplemented "Instruction LDRSW not yet implemented."
	137 Move W11, [X8+24]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Add W9, W10, 1
	140 Add X8, X8, X10
	141 Move [X19+24], W9
	142 Move [X8+32], X23
	143 Move X8, [X9+32]
	144 Move X8, [X8+192]
	145 Move X2, [X8+112]
	146 Move X0, X19
	147 Move X1, X23
	148 Call List`1<Object>.AddWithResize, X0, X1
	149 Move W8, [X22+24]
	150 Add X26, X26, 1
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move W8, [X20+24]
	153 Add X25, X25, 1
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Call 0x1C17F28
	156 Call 0x1C17F20
	157 Call 0x1C17F20
	158 Call 0x1C17F20
	159 Call 0x1C17F20
	160 Call 0x1C17F20
	161 Move X22, X0
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X0, X22
	164 Call 0x3EB2AD0
	165 Move X22, X0
	166 Move X0, 0x2279000
	167 Move X0, [X0+2000]
	168 Call 0x1C17D08
	169 Move X8, [X22]
	170 Move X1, [X8]
	171 Call 0x1C18270
	172 Move TEMP, X0
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfNotEqual {193}
	176 Call 0x3EB2AE0
	177 Move X0, X19
	178 Move X20, [X31+80]
	179 Move X19, [X31+88]
	180 Move X22, [X31+64]
	181 Move X21, [X31+72]
	182 Move X24, [X31+48]
	183 Move X23, [X31+56]
	184 Move X26, [X31+32]
	185 Move X25, [X31+40]
	186 Move X28, [X31+16]
	187 Move X27, [X31+24]
	188 Move X29, [X31+96]
	189 Move X30, [X31+104]
	190 Return X0
	191 Call 0x1C17F28
	192 Call 0x1C17F20
	193 Move W0, 8
	194 Call 0x3EB2AF0
	195 Move X8, [X22]
	196 Move [X0], X8
	197 Move X1, 0x203A000
	198 Add X1, X1, 3672
	199 Move X2, X31
	200 Call 0x3EB2B00
	201 Move X22, X0
	202 Call 0x3EB2AE0
	203 Move X0, X22
	204 Call 0x1D2D690
	205 Call 0x1991590

Method: System.ValueTuple`3<Fusion.SimulationModes, Fusion.SimulationStages, Fusion.Topologies> GetSimulationFlags(System.Type type)

Disassembly:
	0x01E7B7C8 MOVZ W8, 0x1
	0x01E7B7CC STRB W8, [X23 + 0x1A8]
	0x01E7B7D0 LDR X0, [X22 + 0x28]
	0x01E7B7D4 CBZ X0, 0x1E7B82C
	0x01E7B7D8 ADRP X8, 0x2282000
	0x01E7B7DC LDR X8, [X8 + 0xA28]
	0x01E7B7E0 MOV X1, X21
	0x01E7B7E4 LDR X2, [X8]
	0x01E7B7E8 BL 0x2AA5018
	0x01E7B7EC CBZ X0, 0x1E7B82C
	0x01E7B7F0 ADRP X8, 0x2282000
	0x01E7B7F4 LDR X8, [X8 + 0x9F0]
	0x01E7B7F8 MOV W1, W20
	0x01E7B7FC LDR X2, [X8]
	0x01E7B800 BL 0x301BCCC
	0x01E7B804 CBZ X0, 0x1E7B82C
	0x01E7B808 LDR X8, [X0 + 0x28]
	0x01E7B80C LDP X22, X21, [X31 + 0x10]
	0x01E7B810 STR X8, [X19]
	0x01E7B814 LDR W8, [X0 + 0x38]
	0x01E7B818 LDP X20, X19, [X31 + 0x20]
	0x01E7B81C ADD W8, W8, 0x1
	0x01E7B820 STR W8, [X0 + 0x38]
	0x01E7B824 LDP X30, X23, [X31], #0x30
	0x01E7B828 RET
	0x01E7B82C BL 0x1C16F20
	0x01E7B830 STP X30, X25, [X31 - 0x40]!
	0x01E7B834 STP X24, X23, [X31 + 0x10]
	0x01E7B838 STP X22, X21, [X31 + 0x20]
	0x01E7B83C STP X20, X19, [X31 + 0x30]
	0x01E7B840 ADRP X23, 0x255E000
	0x01E7B844 ADRP X21, 0x2282000
	0x01E7B848 ADRP X22, 0x2278000
	0x01E7B84C LDRB W8, [X23 + 0x1A9]
	0x01E7B850 LDR X21, [X21 + 0x558]
	0x01E7B854 LDR X22, [X22 + 0x6C0]
	0x01E7B858 MOV X19, X1
	0x01E7B85C MOV X20, X0
	0x01E7B860 TBNZ X8, 0x0, 0x1E7B8A8
	0x01E7B864 ADRP X0, 0x2282000
	0x01E7B868 LDR X0, [X0 + 0xA30]
	0x01E7B86C BL 0x1C16CF4
	0x01E7B870 ADRP X0, 0x2282000
	0x01E7B874 LDR X0, [X0 + 0x9E8]
	0x01E7B878 BL 0x1C16CF4
	0x01E7B87C ADRP X0, 0x2282000
	0x01E7B880 LDR X0, [X0 + 0x9F0]
	0x01E7B884 BL 0x1C16CF4
	0x01E7B888 ADRP X0, 0x2282000
	0x01E7B88C LDR X0, [X0 + 0x558]
	0x01E7B890 BL 0x1C16CF4
	0x01E7B894 ADRP X0, 0x2278000
	0x01E7B898 LDR X0, [X0 + 0x6C0]
	0x01E7B89C BL 0x1C16CF4
	0x01E7B8A0 MOVZ W8, 0x1
	0x01E7B8A4 STRB W8, [X23 + 0x1A9]
	0x01E7B8A8 LDR X0, [X22]
	0x01E7B8AC LDR X21, [X21]
	0x01E7B8B0 LDR W8, [X0 + 0xE0]
	0x01E7B8B4 CBNZ W8, 0x1E7B8BC
	0x01E7B8B8 BL 0x1C16DFC
	0x01E7B8BC MOV X0, X21
	0x01E7B8C0 MOV X1, X31
	0x01E7B8C4 BL 0x338C698
	0x01E7B8C8 LDR X8, [X20 + 0x20]
	0x01E7B8CC CBZ X8, 0x1E7B99C
	0x01E7B8D0 ADRP X24, 0x2282000
	0x01E7B8D4 ADRP X25, 0x2282000
	0x01E7B8D8 LDR X24, [X24 + 0x9F0]
	0x01E7B8DC LDR X25, [X25 + 0xA30]
	0x01E7B8E0 MOV X21, X0
	0x01E7B8E4 MOV W22, W31
	0x01E7B8E8 LDR W9, [X8 + 0x18]
	0x01E7B8EC CMP W22, W9
	0x01E7B8F0 B.GE 0x1E7B9A0
	0x01E7B8F4 LDR X2, [X24]
	0x01E7B8F8 MOV X0, X8
	0x01E7B8FC MOV W1, W22
	0x01E7B900 BL 0x301BCCC
	0x01E7B904 CBZ X0, 0x1E7B99C
	0x01E7B908 LDR X23, [X0 + 0x28]
	0x01E7B90C CBZ X23, 0x1E7B990
	0x01E7B910 CBZ X21, 0x1E7B99C
	0x01E7B914 LDR X8, [X21]
	0x01E7B918 MOV X0, X21
	0x01E7B91C MOV X1, X23
	0x01E7B920 LDR X9, [X8 + 0x868]
	0x01E7B924 LDR X2, [X8 + 0x870]
	0x01E7B928 BLR X9
	0x01E7B92C TBNZ X0, 0x0, 0x1E7B988
	0x01E7B930 CBZ X19, 0x1E7B99C
	0x01E7B934 LDR W10, [X19 + 0x1C]
	0x01E7B938 LDR X8, [X19 + 0x10]
	0x01E7B93C LDR X9, [X25]
	0x01E7B940 ADD W10, W10, 0x1
	0x01E7B944 STR W10, [X19 + 0x1C]
	0x01E7B948 CBZ X8, 0x1E7B99C
	0x01E7B94C LDRSW X10, [X19 + 0x18]
	0x01E7B950 LDR W11, [X8 + 0x18]
	0x01E7B954 CMP W10, W11
	0x01E7B958 B.CS 0x1E7B970
	0x01E7B95C ADD W9, W10, 0x1
	0x01E7B960 ADD X8, X8, X10, 0x3, LSL
	0x01E7B964 STR W9, [X19 + 0x18]
	0x01E7B968 STR X23, [X8 + 0x20]
	0x01E7B96C B 0x1E7B988
	0x01E7B970 LDR X8, [X9 + 0x20]
	0x01E7B974 MOV X0, X19
	0x01E7B978 MOV X1, X23
	0x01E7B97C LDR X8, [X8 + 0xC0]
	0x01E7B980 LDR X2, [X8 + 0x70]
	0x01E7B984 BL 0x301BF90
	0x01E7B988 LDR X23, [X23 + 0x28]
	0x01E7B98C CBNZ X23, 0x1E7B914
	0x01E7B990 LDR X8, [X20 + 0x20]
	0x01E7B994 ADD W22, W22, 0x1
	0x01E7B998 CBNZ X8, 0x1E7B8E8
	0x01E7B99C BL 0x1C16F20
	0x01E7B9A0 LDP X20, X19, [X31 + 0x30]
	0x01E7B9A4 LDP X22, X21, [X31 + 0x20]
	0x01E7B9A8 LDP X24, X23, [X31 + 0x10]
	0x01E7B9AC LDP X30, X25, [X31], #0x40
	0x01E7B9B0 RET
	0x01E7B9B4 SUB X31, X31, 0xB0
	0x01E7B9B8 STP X29, X30, [X31 + 0x50]
	0x01E7B9BC STP X28, X27, [X31 + 0x60]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X20, 0x255F000
	010 Move X22, 0x2283000
	011 Move X23, 0x2279000
	012 Move X21, 0x2283000
	013 Move X24, 0x2283000
	014 Move W8, [X20+419]
	015 Move X22, [X22+2376]
	016 Move X23, [X23+1728]
	017 Move X21, [X21+2384]
	018 Move X24, [X24+2392]
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {70}
	024 Move X0, 0x2283000
	025 Move X0, [X0+2392]
	026 Call 0x1C17CF4
	027 Move X0, 0x2283000
	028 Move X0, [X0+2400]
	029 Call 0x1C17CF4
	030 Move X0, 0x2283000
	031 Move X0, [X0+2376]
	032 Call 0x1C17CF4
	033 Move X0, 0x2279000
	034 Move X0, [X0+1728]
	035 Call 0x1C17CF4
	036 Move X0, 0x2283000
	037 Move X0, [X0+2384]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+419], W8
	041 Move X0, [X23]
	042 Move X20, [X24]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X20
	048 Move X1, X31
	049 Call Type.GetTypeFromHandle, X0
	050 Compare X19, 0
	051 JumpIfEqual {141}
	052 Move X8, [X19]
	053 Move X1, X0
	054 Move W2, 1
	055 Move X0, X19
	056 Move X9, [X8+520]
	057 Move X3, [X8+528]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Compare X0, 0
	060 JumpIfEqual {141}
	061 Move X8, [X0+24]
	062 Compare X8, 0
	063 JumpIfNotEqual {97}
	064 Move X8, [X19]
	065 Move X0, X19
	066 Move X9, [X8+2072]
	067 Move X1, [X8+2080]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X19, X0
	070 Move X0, [X23]
	071 Move X20, [X22]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X20
	077 Move X1, X31
	078 Call Type.GetTypeFromHandle, X0
	079 Compare X0, 0
	080 JumpIfEqual {141}
	081 Move X8, [X0]
	082 Move X1, X19
	083 Move X9, [X8+680]
	084 Move X2, [X8+688]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {41}
	090 Move X4, [X21]
	091 Add X0, X31, 0
	092 Move W1, 7
	093 Move W2, 6
	094 Move W3, 3
	095 Move [X31+8], W31
	096 Move [X31], X31
	097 Compare W8, 0
	098 JumpIfEqual {143}
	099 Move X0, [X0+32]
	100 Compare X0, 0
	101 JumpIfEqual {141}
	102 Move X9, 0x2283000
	103 Move X9, [X9+2400]
	104 Move X8, [X0]
	105 Move X1, [X9]
	106 Move W10, [X8+304]
	107 Move W9, [X1+304]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X8, [X8+200]
	110 Add X8, X8, X9
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move W10, [X0+16]
	114 Move W9, [X0+20]
	115 Move W12, [X0+24]
	116 Move W8, 7
	117 Move X4, [X21]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move W11, 6
	120 NotImplemented "Instruction CSEL not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move W13, 3
	123 NotImplemented "Instruction CSEL not yet implemented."
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move [X31+8], W31
	126 NotImplemented "Instruction CSEL not yet implemented."
	127 Move [X31], X31
	128 Add X0, X31, 0
	129 Call ValueTuple`3<Int32Enum, Int32Enum, Int32Enum>..ctor, X0, X1, X2, X3
	130 Move X0, [X31]
	131 Move W1, [X31+8]
	132 Move X20, [X31+64]
	133 Move X19, [X31+72]
	134 Move X22, [X31+48]
	135 Move X21, [X31+56]
	136 Move X24, [X31+32]
	137 Move X23, [X31+40]
	138 Move X30, [X31+16]
	139 Add X31, X31, 80
	140 Return X0
	141 Call 0x1C17F20
	142 Call 0x1C181E0
	143 Call 0x1C17F28

Method: System.Int32 GetExecutionOrder(System.Type type)

Disassembly:
	0x01E7B9C0 STP X26, X25, [X31 + 0x70]
	0x01E7B9C4 STP X24, X23, [X31 + 0x80]
	0x01E7B9C8 STP X22, X21, [X31 + 0x90]
	0x01E7B9CC STP X20, X19, [X31 + 0xA0]
	0x01E7B9D0 ADRP X24, 0x255E000
	0x01E7B9D4 ADRP X23, 0x2282000
	0x01E7B9D8 LDRB W8, [X24 + 0x1AA]
	0x01E7B9DC LDR X23, [X23 + 0xA38]
	0x01E7B9E0 MOV W19, W3
	0x01E7B9E4 MOV W20, W2
	0x01E7B9E8 MOV W21, W1
	0x01E7B9EC MOV X22, X0
	0x01E7B9F0 TBNZ X8, 0x0, 0x1E7BA20
	0x01E7B9F4 ADRP X0, 0x2282000
	0x01E7B9F8 LDR X0, [X0 + 0x9E8]
	0x01E7B9FC BL 0x1C16CF4
	0x01E7BA00 ADRP X0, 0x2282000
	0x01E7BA04 LDR X0, [X0 + 0x9F0]
	0x01E7BA08 BL 0x1C16CF4
	0x01E7BA0C ADRP X0, 0x2282000
	0x01E7BA10 LDR X0, [X0 + 0xA38]
	0x01E7BA14 BL 0x1C16CF4
	0x01E7BA18 MOVZ W8, 0x1
	0x01E7BA1C STRB W8, [X24 + 0x1AA]
	0x01E7BA20 LDR X0, [X23]
	0x01E7BA24 MOV X1, X31
	0x01E7BA28 STP X31, X31, [X31 + 0x40]
	0x01E7BA2C STP X31, X31, [X31 + 0x30]
	0x01E7BA30 STR W31, [X31 + 0x2C]
	0x01E7BA34 BL 0x1E32108
	0x01E7BA38 LDR X0, [X22 + 0x20]
	0x01E7BA3C CBZ X0, 0x1E7BC24
	0x01E7BA40 LDR W28, [X0 + 0x18]
	0x01E7BA44 CMP W28, 0x1
	0x01E7BA48 B.LT 0x1E7BBFC
	0x01E7BA4C ADRP X29, 0x2282000
	0x01E7BA50 LDR X29, [X29 + 0x9F0]
	0x01E7BA54 MOV W23, W31
	0x01E7BA58 ADD X27, X31, 0x48
	0x01E7BA5C ADD X26, X31, 0x2C
	0x01E7BA60 ADD X24, X31, 0x30
	0x01E7BA64 CBZ X0, 0x1E7BB34
	0x01E7BA68 LDR X2, [X29]
	0x01E7BA6C MOV W1, W23
	0x01E7BA70 BL 0x301BCCC
	0x01E7BA74 STR X0, [X31 + 0x48]
	0x01E7BA78 ADD X8, X31, 0x8
	0x01E7BA7C MOV X0, X31
	0x01E7BA80 BL 0x1E37474
	0x01E7BA84 LDUR V0, [X31 + 0x8]
	0x01E7BA88 LDR X9, [X31 + 0x18]
	0x01E7BA8C LDR X8, [X31 + 0x48]
	0x01E7BA90 STR V0, [X31 + 0x3]
	0x01E7BA94 STR X9, [X31 + 0x40]
	0x01E7BA98 CBZ X8, 0x1E7BB3C
	0x01E7BA9C LDR W9, [X8 + 0x1C]
	0x01E7BAA0 BICS W31, W20, W9, 0x0
	0x01E7BAA4 B.NE 0x1E7BB20
	0x01E7BAA8 LDR W9, [X8 + 0x20]
	0x01E7BAAC BICS W31, W21, W9, 0x0
	0x01E7BAB0 B.NE 0x1E7BB20
	0x01E7BAB4 LDR W9, [X8 + 0x24]
	0x01E7BAB8 BICS W31, W19, W9, 0x0
	0x01E7BABC B.NE 0x1E7BB20
	0x01E7BAC0 LDR W9, [X8 + 0x38]
	0x01E7BAC4 LDR X25, [X8 + 0x28]
	0x01E7BAC8 ADD W9, W9, 0x1
	0x01E7BACC STR W9, [X8 + 0x38]
	0x01E7BAD0 STP X31, X27, [X31 + 0x8]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x255F000
	009 Move W8, [X21+420]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x227C000
	017 Move X0, [X0+3832]
	018 Call 0x1C17CF4
	019 Move X0, 0x227C000
	020 Move X0, [X0+3840]
	021 Call 0x1C17CF4
	022 Move X0, 0x2283000
	023 Move X0, [X0+2408]
	024 Call 0x1C17CF4
	025 Move X0, 0x2279000
	026 Move X0, [X0+1728]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+420], W8
	030 Move X22, 0x2283000
	031 Move X23, 0x2279000
	032 Move X22, [X22+2408]
	033 Move X23, [X23+1728]
	034 Move X0, [X23]
	035 Move X21, [X22]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X21
	041 Move X1, X31
	042 Call Type.GetTypeFromHandle, X0
	043 Move X1, X0
	044 Move X0, X20
	045 Move X2, X31
	046 Call Type.op_Inequality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {67}
	051 Move X0, [X19+56]
	052 Compare X0, 0
	053 JumpIfEqual {81}
	054 Move X1, X20
	055 Move X2, X31
	056 Call NetworkProjectConfig.GetExecutionOrder, X0, X1
	057 And W31, W0, 255
	058 Move [X31+8], X0
	059 Compare X20, 0
	060 JumpIfEqual {81}
	061 Move X8, [X20]
	062 Move X0, X20
	063 Move X9, [X8+2072]
	064 Move X1, [X8+2080]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X20, X0
	067 Move W0, W31
	068 Move X8, 0x227C000
	069 Move X8, [X8+3840]
	070 Add X0, X31, 8
	071 Move X1, [X8]
	072 Call Nullable`1<Int32>.get_Value, X0
	073 Move X20, [X31+48]
	074 Move X19, [X31+56]
	075 Move X22, [X31+32]
	076 Move X21, [X31+40]
	077 Move X30, [X31+16]
	078 Move X23, [X31+24]
	079 Add X31, X31, 64
	080 Return X0
	081 Call 0x1C17F20

Method: System.Void BuildTypeOrder(System.Type[] customCallbackInterfaces)

Disassembly:
	0x01E7BAD4 STP X26, X24, [X31 + 0x18]
	0x01E7BAD8 B 0x1E7BB14
	0x01E7BADC MOV X0, X25
	0x01E7BAE0 LDR W8, [X25 + 0x30]
	0x01E7BAE4 LDR X25, [X25 + 0x28]
	0x01E7BAE8 TBNZ X8, 0x5, 0x1E7BB0C
	0x01E7BAEC ANDS W31, W8, 0x1C
	0x01E7BAF0 B.NE 0x1E7BB14
	0x01E7BAF4 AND W8, W8, 0x3
	0x01E7BAF8 CBZ W8, 0x1E7BB14
	0x01E7BAFC LDR X8, [X0]
	0x01E7BB00 LDP X9, X1, [X8 + 0x198]
	0x01E7BB04 BLR X9
	0x01E7BB08 B 0x1E7BB14
	0x01E7BB0C AND W8, W8, 0xFFFFFFDF
	0x01E7BB10 STR W8, [X0 + 0x30]
	0x01E7BB14 CBNZ X25, 0x1E7BADC
	0x01E7BB18 ADD X0, X31, 0x8
	0x01E7BB1C BL 0x1993380
	0x01E7BB20 ADD W23, W23, 0x1
	0x01E7BB24 CMP W23, W28
	0x01E7BB28 B.EQ 0x1E7BBFC
	0x01E7BB2C LDR X0, [X22 + 0x20]
	0x01E7BB30 CBNZ X0, 0x1E7BA68
	0x01E7BB34 BL 0x1C16F20
	0x01E7BB38 B 0x1E7BC28
	0x01E7BB3C BL 0x1C16F20
	0x01E7BB40 B 0x1E7BC28
	0x01E7BB44 B 0x1E7BB94
	0x01E7BB48 CMP W1, 0x1
	0x01E7BB4C STR X0, [X31]
	0x01E7BB50 B.NE 0x1E7BB6C
	0x01E7BB54 LDR X0, [X31]
	0x01E7BB58 BL 0x3EB1AD0
	0x01E7BB5C LDR X8, [X0]
	0x01E7BB60 STR X8, [X31 + 0x8]
	0x01E7BB64 BL 0x3EB1AE0
	0x01E7BB68 B 0x1E7BB18
	0x01E7BB6C MOV X25, X1
	0x01E7BB70 ADD X0, X31, 0x8
	0x01E7BB74 BL 0x1993380
	0x01E7BB78 B 0x1E7BB9C
	0x01E7BB7C MOV X25, X1
	0x01E7BB80 STR X0, [X31]
	0x01E7BB84 B 0x1E7BB70
	0x01E7BB88 B 0x1E7BB94
	0x01E7BB8C B 0x1E7BB94
	0x01E7BB90 B 0x1E7BB94
	0x01E7BB94 MOV X25, X1
	0x01E7BB98 STR X0, [X31]
	0x01E7BB9C CMP W25, 0x1
	0x01E7BBA0 B.NE 0x1E7BC54
	0x01E7BBA4 LDR X0, [X31]
	0x01E7BBA8 BL 0x3EB1AD0
	0x01E7BBAC MOV X25, X0
	0x01E7BBB0 ADRP X0, 0x2278000
	0x01E7BBB4 LDR X0, [X0 + 0x7D0]
	0x01E7BBB8 BL 0x1C16D08
	0x01E7BBBC LDR X8, [X25]
	0x01E7BBC0 LDR X1, [X8]
	0x01E7BBC4 BL 0x1C17270
	0x01E7BBC8 TBZ X0, 0x0, 0x1E7BC28
	0x01E7BBCC LDR X25, [X25]
	0x01E7BBD0 BL 0x3EB1AE0
	0x01E7BBD4 ADRP X0, 0x2280000
	0x01E7BBD8 LDR X0, [X0 + 0x8B0]
	0x01E7BBDC BL 0x1C16D08
	0x01E7BBE0 LDR W8, [X0 + 0xE0]
	0x01E7BBE4 CBNZ W8, 0x1E7BBEC
	0x01E7BBE8 BL 0x1C16DFC
	0x01E7BBEC MOV X0, X25
	0x01E7BBF0 MOV X1, X31
	0x01E7BBF4 BL 0x1E3E4C8
	0x01E7BBF8 B 0x1E7BB20
	0x01E7BBFC MOV X0, X31
	0x01E7BC00 BL 0x1E32194
	0x01E7BC04 LDP X20, X19, [X31 + 0xA0]
	0x01E7BC08 LDP X22, X21, [X31 + 0x90]
	0x01E7BC0C LDP X24, X23, [X31 + 0x80]
	0x01E7BC10 LDP X26, X25, [X31 + 0x70]
	0x01E7BC14 LDP X28, X27, [X31 + 0x60]
	0x01E7BC18 LDP X29, X30, [X31 + 0x50]
	0x01E7BC1C ADD X31, X31, 0xB0
	0x01E7BC20 RET
	0x01E7BC24 BL 0x1C16F20
	0x01E7BC28 MOVZ W0, 0x8
	0x01E7BC2C BL 0x3EB1AF0
	0x01E7BC30 LDR X8, [X25]
	0x01E7BC34 STR X8, [X0]
	0x01E7BC38 ADRP X1, 0x2039000
	0x01E7BC3C ADD X1, X1, 0xE58
	0x01E7BC40 MOV X2, X31
	0x01E7BC44 BL 0x3EB1B00
	0x01E7BC48 B 0x1E7BC4C
	0x01E7BC4C STR X0, [X31]
	0x01E7BC50 BL 0x3EB1AE0
	0x01E7BC54 LDR X0, [X31]
	0x01E7BC58 BL 0x1D2C690
	0x01E7BC5C BL 0x1990590
	0x01E7BC60 BL 0x1990590
	0x01E7BC64 STP X30, X27, [X31 - 0x50]!
	0x01E7BC68 STP X26, X25, [X31 + 0x10]
	0x01E7BC6C STP X24, X23, [X31 + 0x20]
	0x01E7BC70 STP X22, X21, [X31 + 0x30]
	0x01E7BC74 STP X20, X19, [X31 + 0x40]
	0x01E7BC78 ADRP X23, 0x255E000
	0x01E7BC7C LDRB W8, [X23 + 0x1AB]
	0x01E7BC80 MOV W19, W4
	0x01E7BC84 MOV W22, W3
	0x01E7BC88 MOV X20, X2
	0x01E7BC8C MOV X21, X0
	0x01E7BC90 TBNZ X8, 0x0, 0x1E7BCA8
	0x01E7BC94 ADRP X0, 0x2282000
	0x01E7BC98 LDR X0, [X0 + 0xA40]
	0x01E7BC9C BL 0x1C16CF4
	0x01E7BCA0 MOVZ W8, 0x1
	0x01E7BCA4 STRB W8, [X23 + 0x1AB]
	0x01E7BCA8 TBZ X19, 0x0, 0x1E7BCC0
	0x01E7BCAC CBZ X20, 0x1E7BE30
	0x01E7BCB0 LDR W8, [X20 + 0x60]
	0x01E7BCB4 ORR W8, W8, 0x10000
	0x01E7BCB8 STR W8, [X20 + 0x60]
	0x01E7BCBC B 0x1E7BCC4
	0x01E7BCC0 CBZ X20, 0x1E7BE30
	0x01E7BCC4 LDR X8, [X20 + 0x78]
	0x01E7BCC8 CBZ X8, 0x1E7BE30
	0x01E7BCCC ADRP X27, 0x2282000
	0x01E7BCD0 ADRP X23, 0x2278000
	0x01E7BCD4 ADRP X24, 0x2280000
	0x01E7BCD8 LDR X27, [X27 + 0xA40]
	0x01E7BCDC LDR X23, [X23 + 0x7D0]
	0x01E7BCE0 LDR X24, [X24 + 0x8B0]
	0x01E7BCE4 MOV X26, X31
	0x01E7BCE8 AND W22, W22, 0x1
	0x01E7BCEC LDR W9, [X8 + 0x18]
	0x01E7BCF0 CMP X26, W9, SXTW
	0x01E7BCF4 B.GE 0x1E7BE18
	0x01E7BCF8 CMP X26, X9
	0x01E7BCFC B.CS 0x1E7BE34
	0x01E7BD00 ADD X8, X8, X26, 0x3, LSL
	0x01E7BD04 LDR X1, [X8 + 0x20]
	0x01E7BD08 MOV X0, X21
	0x01E7BD0C MOV W2, W22
	0x01E7BD10 BL 0x1E7BE70
	0x01E7BD14 TBZ X19, 0x0, 0x1E7BDAC
	0x01E7BD18 LDR X8, [X20 + 0x78]
	0x01E7BD1C CBZ X8, 0x1E7BE30
	0x01E7BD20 LDR W9, [X8 + 0x18]
	0x01E7BD24 CMP X26, X9
	0x01E7BD28 B.CS 0x1E7BE34
	0x01E7BD2C ADD X8, X8, X26, 0x3, LSL
	0x01E7BD30 LDR X0, [X8 + 0x20]
	0x01E7BD34 CBZ X0, 0x1E7BE30
	0x01E7BD38 LDR W8, [X0 + 0x30]
	0x01E7BD3C ORR W8, W8, 0x2
	0x01E7BD40 STR W8, [X0 + 0x30]
	0x01E7BD44 LDR X1, [X27]
	0x01E7BD48 BL 0x1C16E00
	0x01E7BD4C CBZ X0, 0x1E7BDAC
	0x01E7BD50 LDR X8, [X0]
	0x01E7BD54 LDR X1, [X27]
	0x01E7BD58 MOV X25, X0
	0x01E7BD5C LDRH W9, [X8 + 0x12E]
	0x01E7BD60 CBZ X9, 0x1E7BD84
	0x01E7BD64 LDR X10, [X8 + 0xB0]
	0x01E7BD68 ADD X10, X10, 0x8
	0x01E7BD6C LDUR X11, [X10 - 0x8]
	0x01E7BD70 CMP X11, X1
	0x01E7BD74 B.EQ 0x1E7BD94
	0x01E7BD78 SUBS X9, X9, 0x1
	0x01E7BD7C ADD X10, X10, 0x10
	0x01E7BD80 B.NE 0x1E7BD6C
	0x01E7BD84 MOV X0, X25
	0x01E7BD88 MOV W2, W31
	0x01E7BD8C BL 0x1C5C788
	0x01E7BD90 B 0x1E7BDA0
	0x01E7BD94 LDRSW X9, [X10]
	0x01E7BD98 ADD X8, X8, X9, 0x4, LSL
	0x01E7BD9C ADD X0, X8, 0x138
	0x01E7BDA0 LDP X8, X1, [X0]
	0x01E7BDA4 MOV X0, X25
	0x01E7BDA8 BLR X8
	0x01E7BDAC LDR X8, [X20 + 0x78]
	0x01E7BDB0 ADD X26, X26, 0x1
	0x01E7BDB4 CBNZ X8, 0x1E7BCEC
	0x01E7BDB8 B 0x1E7BE30
	0x01E7BDBC CMP W1, 0x1
	0x01E7BDC0 MOV X25, X0
	0x01E7BDC4 B.NE 0x1E7BE64
	0x01E7BDC8 MOV X0, X25
	0x01E7BDCC BL 0x3EB1AD0
	0x01E7BDD0 MOV X25, X0
	0x01E7BDD4 MOV X0, X23
	0x01E7BDD8 BL 0x1C16D08
	0x01E7BDDC LDR X8, [X25]
	0x01E7BDE0 LDR X1, [X8]
	0x01E7BDE4 BL 0x1C17270
	0x01E7BDE8 TBZ X0, 0x0, 0x1E7BE38
	0x01E7BDEC LDR X25, [X25]
	0x01E7BDF0 BL 0x3EB1AE0
	0x01E7BDF4 MOV X0, X24
	0x01E7BDF8 BL 0x1C16D08
	0x01E7BDFC LDR W8, [X0 + 0xE0]
	0x01E7BE00 CBNZ W8, 0x1E7BE08
	0x01E7BE04 BL 0x1C16DFC
	0x01E7BE08 MOV X0, X25
	0x01E7BE0C MOV X1, X31
	0x01E7BE10 BL 0x1E3E4C8
	0x01E7BE14 B 0x1E7BDAC
	0x01E7BE18 LDP X20, X19, [X31 + 0x40]
	0x01E7BE1C LDP X22, X21, [X31 + 0x30]
	0x01E7BE20 LDP X24, X23, [X31 + 0x20]
	0x01E7BE24 LDP X26, X25, [X31 + 0x10]
	0x01E7BE28 LDP X30, X27, [X31], #0x50
	0x01E7BE2C RET
	0x01E7BE30 BL 0x1C16F20
	0x01E7BE34 BL 0x1C16F28
	0x01E7BE38 MOVZ W0, 0x8
	0x01E7BE3C BL 0x3EB1AF0
	0x01E7BE40 LDR X8, [X25]
	0x01E7BE44 STR X8, [X0]
	0x01E7BE48 ADRP X1, 0x2039000
	0x01E7BE4C ADD X1, X1, 0xE58
	0x01E7BE50 MOV X2, X31
	0x01E7BE54 BL 0x3EB1B00
	0x01E7BE58 B 0x1E7BE5C
	0x01E7BE5C MOV X25, X0
	0x01E7BE60 BL 0x3EB1AE0
	0x01E7BE64 MOV X0, X25
	0x01E7BE68 BL 0x1D2C690
	0x01E7BE6C BL 0x1990590
	0x01E7BE70 STP X30, X27, [X31 - 0x50]!
	0x01E7BE74 STP X26, X25, [X31 + 0x10]
	0x01E7BE78 STP X24, X23, [X31 + 0x20]
	0x01E7BE7C STP X22, X21, [X31 + 0x30]
	0x01E7BE80 STP X20, X19, [X31 + 0x40]
	0x01E7BE84 ADRP X22, 0x255E000
	0x01E7BE88 LDRB W8, [X22 + 0x1AC]
	0x01E7BE8C MOV W21, W2
	0x01E7BE90 MOV X19, X1
	0x01E7BE94 MOV X20, X0
	0x01E7BE98 TBNZ X8, 0x0, 0x1E7BEBC
	0x01E7BE9C ADRP X0, 0x2282000
	0x01E7BEA0 LDR X0, [X0 + 0xA48]
	0x01E7BEA4 BL 0x1C16CF4
	0x01E7BEA8 ADRP X0, 0x227B000
	0x01E7BEAC LDR X0, [X0 + 0x398]
	0x01E7BEB0 BL 0x1C16CF4
	0x01E7BEB4 MOVZ W8, 0x1
	0x01E7BEB8 STRB W8, [X22 + 0x1AC]
	0x01E7BEBC CBZ X19, 0x1E7C164
	0x01E7BEC0 LDR W8, [X19 + 0x30]
	0x01E7BEC4 ANDS W31, W21, 0x1
	0x01E7BEC8 MOVZ W9, 0x20
	0x01E7BECC CSEL W9, W9, W31, NE
	0x01E7BED0 AND W8, W8, 0xFFFFFFDF
	0x01E7BED4 ORR W8, W8, W9, 0x0
	0x01E7BED8 MOV X0, X19
	0x01E7BEDC MOV X1, X31
	0x01E7BEE0 STR W8, [X19 + 0x30]
	0x01E7BEE4 BL 0x33BE520
	0x01E7BEE8 MOV X1, X0
	0x01E7BEEC MOV X0, X20
	0x01E7BEF0 BL 0x1E7C168
	0x01E7BEF4 CBZ X0, 0x1E7C164
	0x01E7BEF8 ADD X24, X0, 0x28
	0x01E7BEFC MOV X20, X0
	0x01E7BF00 MOV X9, X24
	0x01E7BF04 LDR X8, [X9]
	0x01E7BF08 CBZ X8, 0x1E7BF18
	0x01E7BF0C CMP X8, X19
	0x01E7BF10 ADD X9, X8, 0x28
	0x01E7BF14 B.NE 0x1E7BF04
	0x01E7BF18 CBNZ X8, 0x1E7BF5C
	0x01E7BF1C LDR X8, [X19 + 0x40]
	0x01E7BF20 LDR X21, [X24]
	0x01E7BF24 CBZ X8, 0x1E7BF74
	0x01E7BF28 CBZ X21, 0x1E7BF3C
	0x01E7BF2C LDR X8, [X21 + 0x40]
	0x01E7BF30 CBNZ X8, 0x1E7C03C
	0x01E7BF34 LDR X21, [X21 + 0x28]
	0x01E7BF38 CBNZ X21, 0x1E7BF2C
	0x01E7BF3C STR X31, [X19 + 0x28]
	0x01E7BF40 LDR X8, [X20 + 0x30]
	0x01E7BF44 ADD X9, X8, 0x28
	0x01E7BF48 CMP X8, 0x0
	0x01E7BF4C STR X8, [X19 + 0x20]
	0x01E7BF50 CSEL X8, X24, X9, EQ
	0x01E7BF54 STR X19, [X8]
	0x01E7BF58 STR X19, [X20 + 0x30]
	0x01E7BF5C LDP X20, X19, [X31 + 0x40]
	0x01E7BF60 LDP X22, X21, [X31 + 0x30]
	0x01E7BF64 LDP X24, X23, [X31 + 0x20]
	0x01E7BF68 LDP X26, X25, [X31 + 0x10]
	0x01E7BF6C LDP X30, X27, [X31], #0x50
	0x01E7BF70 RET
	0x01E7BF74 MOV X0, X19
	0x01E7BF78 MOV X1, X31
	0x01E7BF7C BL 0x33BE520
	0x01E7BF80 CBZ X0, 0x1E7C164
	0x01E7BF84 LDR X8, [X0]
	0x01E7BF88 LDP X9, X1, [X8 + 0x1A8]
	0x01E7BF8C BLR X9
	0x01E7BF90 CBZ X21, 0x1E7C024
	0x01E7BF94 MOV X22, X0
	0x01E7BF98 LDR X8, [X21 + 0x28]
	0x01E7BF9C CBZ X8, 0x1E7C024
	0x01E7BFA0 LDR X9, [X21 + 0x40]
	0x01E7BFA4 CBNZ X9, 0x1E7BF5C
	0x01E7BFA8 LDR X8, [X8 + 0x40]
	0x01E7BFAC CBNZ X8, 0x1E7C138
	0x01E7BFB0 MOV X0, X21
	0x01E7BFB4 MOV X1, X31
	0x01E7BFB8 BL 0x33BE520
	0x01E7BFBC CBZ X0, 0x1E7C164
	0x01E7BFC0 LDR X8, [X0]
	0x01E7BFC4 LDP X9, X1, [X8 + 0x1A8]
	0x01E7BFC8 BLR X9
	0x01E7BFCC MOV X1, X22
	0x01E7BFD0 MOV X2, X31
	0x01E7BFD4 BL 0x32261E8
	0x01E7BFD8 LDR X8, [X21 + 0x28]
	0x01E7BFDC CBZ X8, 0x1E7C164
	0x01E7BFE0 MOV W23, W0
	0x01E7BFE4 MOV X0, X8
	0x01E7BFE8 MOV X1, X31
	0x01E7BFEC BL 0x33BE520
	0x01E7BFF0 CBZ X0, 0x1E7C164
	0x01E7BFF4 LDR X8, [X0]
	0x01E7BFF8 LDP X9, X1, [X8 + 0x1A8]
	0x01E7BFFC BLR X9
	0x01E7C000 MOV X1, X0
	0x01E7C004 MOV X0, X22
	0x01E7C008 MOV X2, X31
	0x01E7C00C BL 0x32261E8
	0x01E7C010 TBZ X23, 0x1F, 0x1E7C01C
	0x01E7C014 CMP W0, 0x0
	0x01E7C018 B.LE 0x1E7C138
	0x01E7C01C LDR X21, [X21 + 0x28]
	0x01E7C020 CBNZ X21, 0x1E7BF98
	0x01E7C024 LDR X8, [X24]
	0x01E7C028 STP X31, X8, [X19 + 0x20]
	0x01E7C02C CBZ X8, 0x1E7C15C
	0x01E7C030 STR X19, [X8 + 0x20]
	0x01E7C034 STR X19, [X24]
	0x01E7C038 B 0x1E7BF5C
	0x01E7C03C ADRP X22, 0x227A000
	0x01E7C040 ADRP X23, 0x2281000
	0x01E7C044 LDR X22, [X22 + 0x398]
	0x01E7C048 LDR X23, [X23 + 0xA48]
	0x01E7C04C MOV X25, X21
	0x01E7C050 LDR X8, [X25 + 0x28]!
	0x01E7C054 CBZ X8, 0x1E7BF3C
	0x01E7C058 LDR X8, [X21 + 0x40]
	0x01E7C05C CBZ X8, 0x1E7C164
	0x01E7C060 LDR X8, [X8 + 0x20]
	0x01E7C064 CBZ X8, 0x1E7C070
	0x01E7C068 LDR W26, [X8]
	0x01E7C06C B 0x1E7C074
	0x01E7C070 MOV W26, W31
	0x01E7C074 LDR X8, [X19 + 0x40]
	0x01E7C078 CBZ X8, 0x1E7C164
	0x01E7C07C LDR X8, [X8 + 0x20]
	0x01E7C080 CBZ X8, 0x1E7C08C
	0x01E7C084 LDR W27, [X8]
	0x01E7C088 B 0x1E7C090
	0x01E7C08C MOV W27, W31
	0x01E7C090 LDR X0, [X22]
	0x01E7C094 LDR W8, [X0 + 0xE0]
	0x01E7C098 CBNZ W8, 0x1E7C0A0
	0x01E7C09C BL 0x1C16DFC
	0x01E7C0A0 CMP W26, W27
	0x01E7C0A4 B.EQ 0x1E7C138
	0x01E7C0A8 LDR X0, [X20 + 0x40]
	0x01E7C0AC CBZ X0, 0x1E7C0D0
	0x01E7C0B0 LDR X1, [X25]
	0x01E7C0B4 LDR X2, [X23]
	0x01E7C0B8 BL 0x301C318
	0x01E7C0BC TBZ X0, 0x0, 0x1E7C0D0
	0x01E7C0C0 LDR X8, [X25]
	0x01E7C0C4 CBZ X8, 0x1E7C164
	0x01E7C0C8 ADD X25, X8, 0x28
	0x01E7C0CC B 0x1E7C12C
	0x01E7C0D0 LDR X8, [X21 + 0x40]
	0x01E7C0D4 CBZ X8, 0x1E7C164
	0x01E7C0D8 LDR X8, [X8 + 0x20]
	0x01E7C0DC CBZ X8, 0x1E7C0E8
	0x01E7C0E0 LDR W9, [X8]
	0x01E7C0E4 B 0x1E7C0EC
	0x01E7C0E8 MOV W9, W31
	0x01E7C0EC LDR X8, [X19 + 0x40]
	0x01E7C0F0 CBZ X8, 0x1E7C164
	0x01E7C0F4 LDR X8, [X8 + 0x20]
	0x01E7C0F8 CBZ X8, 0x1E7C12C
	0x01E7C0FC LDR W8, [X8]
	0x01E7C100 CMP W9, W8
	0x01E7C104 B.CS 0x1E7C12C
	0x01E7C108 LDR X9, [X25]
	0x01E7C10C CBZ X9, 0x1E7C164
	0x01E7C110 LDR X9, [X9 + 0x40]
	0x01E7C114 CBZ X9, 0x1E7C164
	0x01E7C118 LDR X9, [X9 + 0x20]
	0x01E7C11C CBZ X9, 0x1E7C12C
	0x01E7C120 LDR W9, [X9]
	0x01E7C124 CMP W8, W9
	0x01E7C128 B.LS 0x1E7C138
	0x01E7C12C LDR X21, [X25]
	0x01E7C130 CBNZ X21, 0x1E7C04C
	0x01E7C134 B 0x1E7BF3C
	0x01E7C138 MOV X0, X20
	0x01E7C13C MOV X1, X19
	0x01E7C140 MOV X2, X21
	0x01E7C144 LDP X20, X19, [X31 + 0x40]
	0x01E7C148 LDP X22, X21, [X31 + 0x30]
	0x01E7C14C LDP X24, X23, [X31 + 0x20]
	0x01E7C150 LDP X26, X25, [X31 + 0x10]
	0x01E7C154 LDP X30, X27, [X31], #0x50
	0x01E7C158 B 0x1E7C478
	0x01E7C15C STR X19, [X20 + 0x28]
	0x01E7C160 B 0x1E7BF58
	0x01E7C164 BL 0x1C16F20
	0x01E7C168 STR X30, [X31 - 0x50]!
	0x01E7C16C STP X26, X25, [X31 + 0x10]
	0x01E7C170 STP X24, X23, [X31 + 0x20]
	0x01E7C174 STP X22, X21, [X31 + 0x30]
	0x01E7C178 STP X20, X19, [X31 + 0x40]
	0x01E7C17C ADRP X19, 0x255D000
	0x01E7C180 LDRB W8, [X19 + 0x1B0]
	0x01E7C184 MOV X21, X1
	0x01E7C188 MOV X20, X0
	0x01E7C18C TBNZ X8, 0x0, 0x1E7C1C8
	0x01E7C190 ADRP X0, 0x2281000
	0x01E7C194 LDR X0, [X0 + 0xA20]
	0x01E7C198 BL 0x1C16CF4
	0x01E7C19C ADRP X0, 0x2281000
	0x01E7C1A0 LDR X0, [X0 + 0xA50]
	0x01E7C1A4 BL 0x1C16CF4
	0x01E7C1A8 ADRP X0, 0x2281000
	0x01E7C1AC LDR X0, [X0 + 0x948]
	0x01E7C1B0 BL 0x1C16CF4
	0x01E7C1B4 ADRP X0, 0x2277000
	0x01E7C1B8 LDR X0, [X0 + 0x6C0]
	0x01E7C1BC BL 0x1C16CF4
	0x01E7C1C0 MOVZ W8, 0x1
	0x01E7C1C4 STRB W8, [X19 + 0x1B0]
	0x01E7C1C8 STR X31, [X31 + 0x8]
	0x01E7C1CC LDR X0, [X20 + 0x10]
	0x01E7C1D0 CBZ X0, 0x1E7C2B8
	0x01E7C1D4 ADRP X23, 0x2281000
	0x01E7C1D8 LDR X23, [X23 + 0xA50]
	0x01E7C1DC ADD X2, X31, 0x8
	0x01E7C1E0 MOV X1, X21
	0x01E7C1E4 LDR X3, [X23]
	0x01E7C1E8 BL 0x2AA6B2C
	0x01E7C1EC TBNZ X0, 0x0, 0x1E7C29C
	0x01E7C1F0 ADRP X24, 0x2281000
	0x01E7C1F4 ADRP X25, 0x2277000
	0x01E7C1F8 LDR X24, [X24 + 0x948]
	0x01E7C1FC LDR X25, [X25 + 0x6C0]
	0x01E7C200 MOV X19, X21
	0x01E7C204 LDR X0, [X25]
	0x01E7C208 LDR X22, [X24]
	0x01E7C20C LDR W8, [X0 + 0xE0]
	0x01E7C210 CBNZ W8, 0x1E7C218
	0x01E7C214 BL 0x1C16DFC
	0x01E7C218 MOV X0, X22
	0x01E7C21C MOV X1, X31
	0x01E7C220 BL 0x338C698
	0x01E7C224 CBZ X0, 0x1E7C2B8
	0x01E7C228 LDR X8, [X0]
	0x01E7C22C MOV X1, X19
	0x01E7C230 LDR X9, [X8 + 0x2A8]
	0x01E7C234 LDR X2, [X8 + 0x2B0]
	0x01E7C238 BLR X9
	0x01E7C23C TBZ X0, 0x0, 0x1E7C2BC
	0x01E7C240 LDR X0, [X20 + 0x10]
	0x01E7C244 CBZ X0, 0x1E7C2B8
	0x01E7C248 LDR X3, [X23]
	0x01E7C24C ADD X2, X31, 0x8
	0x01E7C250 MOV X1, X19
	0x01E7C254 BL 0x2AA6B2C
	0x01E7C258 TBNZ X0, 0x0, 0x1E7C27C
	0x01E7C25C CBZ X19, 0x1E7C2B8
	0x01E7C260 LDR X8, [X19]
	0x01E7C264 MOV X0, X19
	0x01E7C268 LDR X9, [X8 + 0x818]
	0x01E7C26C LDR X1, [X8 + 0x820]
	0x01E7C270 BLR X9
	0x01E7C274 MOV X19, X0
	0x01E7C278 B 0x1E7C204
	0x01E7C27C LDR X0, [X20 + 0x10]
	0x01E7C280 CBZ X0, 0x1E7C2B8
	0x01E7C284 ADRP X8, 0x2281000
	0x01E7C288 LDR X2, [X31 + 0x8]
	0x01E7C28C LDR X8, [X8 + 0xA20]
	0x01E7C290 MOV X1, X21
	0x01E7C294 LDR X3, [X8]
	0x01E7C298 BL 0x2AA5098
	0x01E7C29C LDR X0, [X31 + 0x8]
	0x01E7C2A0 LDP X20, X19, [X31 + 0x40]
	0x01E7C2A4 LDP X22, X21, [X31 + 0x30]
	0x01E7C2A8 LDP X24, X23, [X31 + 0x20]
	0x01E7C2AC LDP X26, X25, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X21, 0x255F000
	015 Move W8, [X21+421]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {102}
	022 Move X0, 0x2283000
	023 Move X0, [X0+2416]
	024 Call 0x1C17CF4
	025 Move X0, 0x2283000
	026 Move X0, [X0+2424]
	027 Call 0x1C17CF4
	028 Move X0, 0x2283000
	029 Move X0, [X0+2432]
	030 Call 0x1C17CF4
	031 Move X0, 0x2283000
	032 Move X0, [X0+2440]
	033 Call 0x1C17CF4
	034 Move X0, 0x2283000
	035 Move X0, [X0+2448]
	036 Call 0x1C17CF4
	037 Move X0, 0x2283000
	038 Move X0, [X0+2456]
	039 Call 0x1C17CF4
	040 Move X0, 0x2283000
	041 Move X0, [X0+2464]
	042 Call 0x1C17CF4
	043 Move X0, 0x2283000
	044 Move X0, [X0+2472]
	045 Call 0x1C17CF4
	046 Move X0, 0x2283000
	047 Move X0, [X0+2480]
	048 Call 0x1C17CF4
	049 Move X0, 0x2279000
	050 Move X0, [X0+3584]
	051 Call 0x1C17CF4
	052 Move X0, 0x2283000
	053 Move X0, [X0+2488]
	054 Call 0x1C17CF4
	055 Move X0, 0x2283000
	056 Move X0, [X0+2496]
	057 Call 0x1C17CF4
	058 Move X0, 0x2279000
	059 Move X0, [X0+3608]
	060 Call 0x1C17CF4
	061 Move X0, 0x2283000
	062 Move X0, [X0+2504]
	063 Call 0x1C17CF4
	064 Move X0, 0x2283000
	065 Move X0, [X0+2512]
	066 Call 0x1C17CF4
	067 Move X0, 0x2283000
	068 Move X0, [X0+2520]
	069 Call 0x1C17CF4
	070 Move X0, 0x2283000
	071 Move X0, [X0+2528]
	072 Call 0x1C17CF4
	073 Move X0, 0x2283000
	074 Move X0, [X0+2296]
	075 Call 0x1C17CF4
	076 Move X0, 0x2283000
	077 Move X0, [X0+2536]
	078 Call 0x1C17CF4
	079 Move X0, 0x2283000
	080 Move X0, [X0+2544]
	081 Call 0x1C17CF4
	082 Move X0, 0x2283000
	083 Move X0, [X0+2288]
	084 Call 0x1C17CF4
	085 Move X0, 0x2281000
	086 Move X0, [X0+3168]
	087 Call 0x1C17CF4
	088 Move X0, 0x2283000
	089 Move X0, [X0+2552]
	090 Call 0x1C17CF4
	091 Move X0, 0x2283000
	092 Move X0, [X0+2560]
	093 Call 0x1C17CF4
	094 Move X0, 0x2283000
	095 Move X0, [X0+2568]
	096 Call 0x1C17CF4
	097 Move X0, 0x2283000
	098 Move X0, [X0+2576]
	099 Call 0x1C17CF4
	100 Move W8, 1
	101 Move [X21+421], W8
	102 Move X24, 0x2283000
	103 Move X24, [X24+2568]
	104 Move [X31+32], X31
	105 Move [X31+40], X31
	106 Move [X31+48], X31
	107 Compare X20, 0
	108 JumpIfEqual {152}
	109 Move X0, [X24]
	110 Move W8, [X0+224]
	111 Compare W8, 0
	112 JumpIfNotEqual {115}
	113 Call 0x1C17DFC
	114 Move X0, [X24]
	115 Move X8, [X0+184]
	116 Move X25, 0x2283000
	117 Move X23, 0x2283000
	118 Move X21, [X8+8]
	119 Move X25, [X25+2440]
	120 Move X23, [X23+2576]
	121 Compare X21, 0
	122 JumpIfNotEqual {144}
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {128}
	126 Call 0x1C17DFC
	127 Move X0, [X24]
	128 Move X9, 0x2283000
	129 Move X8, [X0+184]
	130 Move X9, [X9+2480]
	131 Move X22, [X8]
	132 Move X0, [X9]
	133 Call 0x1C17F10
	134 Move X8, 0x2283000
	135 Move X8, [X8+2552]
	136 Move X1, X22
	137 Move X3, X31
	138 Move X21, X0
	139 Move X2, [X8]
	140 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	141 Move X8, [X24]
	142 Move X8, [X8+184]
	143 Move [X8+8], X21
	144 Move X2, [X25]
	145 Move X0, X20
	146 Move X1, X21
	147 Call Enumerable.All, X0, X1
	148 Move X1, [X23]
	149 And W0, W0, 1
	150 Move X2, X31
	151 Call Assert.Always, X0, X1
	152 Move X8, 0x2281000
	153 Move X8, [X8+3168]
	154 Move W1, W31
	155 Move X0, [X8]
	156 Call 0x1C17D6C
	157 Move X20, X0
	158 Move X8, [X19+32]
	159 Compare X8, 0
	160 JumpIfEqual {460}
	161 Move W2, [X8+24]
	162 Move W9, [X8+28]
	163 Add W9, W9, 1
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move [X8+24], W31
	166 Move [X8+28], W9
	167 Move X0, [X8+16]
	168 Move W1, W31
	169 Move X3, X31
	170 Call Array.Clear, X0, X1, X2
	171 Move X0, [X19+16]
	172 Compare X0, 0
	173 JumpIfEqual {460}
	174 Move X8, 0x2283000
	175 Move X8, [X8+2432]
	176 Move X1, [X8]
	177 Call Dictionary`2<Object, Object>.Clear, X0
	178 Call SimulationBehaviourUpdater.Scanlibrary
	179 Compare X0, 0
	180 JumpIfEqual {460}
	181 Move X8, 0x2283000
	182 Move X8, [X8+2520]
	183 Move X28, 0x2283000
	184 Move X27, 0x2283000
	185 Move X26, 0x2283000
	186 Move X28, [X28+2464]
	187 Move X27, [X27+2528]
	188 Move X26, [X26+2448]
	189 Move X1, [X8]
	190 Move X25, 0x2283000
	191 Move X23, 0x2283000
	192 Move X25, [X25+2488]
	193 Move X23, [X23+2456]
	194 Add X8, X31, 8
	195 Call List`1<Object>.GetEnumerator, X0
	196 NotImplemented "Instruction LDUR not yet implemented."
	197 Move X8, [X31+24]
	198 Move [X31+2], V0
	199 Move [X31+48], X8
	200 Move X1, [X28]
	201 Add X0, X31, 32
	202 Call Enumerator<Object>.MoveNext, X0
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {216}
	207 Move X22, [X31+48]
	208 Move X0, X22
	209 Call SimulationBehaviourUpdater.GetSimulationFlags, X0
	210 NotImplemented "Instruction BFM not yet implemented."
	211 Move X2, X0
	212 Move X0, X19
	213 Move X1, X22
	214 Move X3, X21
	215 Call SimulationBehaviourUpdater.AddType, X0, X1, X2
	216 Move X1, [X23]
	217 Add X0, X31, 32
	218 Call Enumerator<Object>.Dispose, X0
	219 Move X0, [X24]
	220 Move X21, [X19+32]
	221 Move W8, [X0+224]
	222 Compare W8, 0
	223 JumpIfNotEqual {226}
	224 Call 0x1C17DFC
	225 Move X0, [X24]
	226 Move X8, [X0+184]
	227 Move X22, [X8+16]
	228 Compare X22, 0
	229 JumpIfNotEqual {251}
	230 Move W8, [X0+224]
	231 Compare W8, 0
	232 JumpIfNotEqual {235}
	233 Call 0x1C17DFC
	234 Move X0, [X24]
	235 Move X9, 0x2283000
	236 Move X8, [X0+184]
	237 Move X9, [X9+2416]
	238 Move X23, [X8]
	239 Move X0, [X9]
	240 Call 0x1C17F10
	241 Move X8, 0x2283000
	242 Move X8, [X8+2560]
	243 Move X1, X23
	244 Move X3, X31
	245 Move X22, X0
	246 Move X2, [X8]
	247 Call Comparison`1<Object>..ctor, X0, X1, X2
	248 Move X8, [X24]
	249 Move X8, [X8+184]
	250 Move [X8+16], X22
	251 Compare X21, 0
	252 JumpIfEqual {460}
	253 Move X2, [X27]
	254 Move X0, X21
	255 Move X1, X22
	256 Call List`1<Object>.Sort, X0, X1
	257 Call SimulationBehaviourUpdater.get_CallbackInterfacesDefualts
	258 Move X2, [X26]
	259 Move X1, X20
	260 Call 0x21BB09C, X0, X1
	261 Compare X0, 0
	262 JumpIfEqual {460}
	263 Move X8, [X0]
	264 Move X1, [X25]
	265 Move X20, X0
	266 NotImplemented "Instruction LDRH not yet implemented."
	267 Compare X9, 0
	268 JumpIfEqual {275}
	269 Move X10, [X8+176]
	270 Add X10, X10, 8
	271 NotImplemented "Instruction LDUR not yet implemented."
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Subtract X9, X9, 1
	274 Add X10, X10, 16
	275 Move X0, X20
	276 Move W2, W31
	277 Call 0x1C5D788
	278 NotImplemented "Instruction LDRSW not yet implemented."
	279 Add X8, X8, X9
	280 Add X0, X8, 312
	281 Move X8, [X0]
	282 Move X1, [X0+8]
	283 Move X0, X20
	284 NotImplemented "Instruction BLR not yet implemented."
	285 Move X20, X0
	286 Compare X0, 0
	287 JumpIfEqual {461}
	288 Move X26, 0x2279000
	289 Move X29, 0x2283000
	290 Move X25, 0x2283000
	291 Move X27, 0x2283000
	292 Move X28, 0x2283000
	293 Move X26, [X26+3608]
	294 Move X29, [X29+2296]
	295 Move X25, [X25+2544]
	296 Move X27, [X27+2504]
	297 Move X28, [X28+2424]
	298 Move X8, [X20]
	299 Move X1, [X26]
	300 NotImplemented "Instruction LDRH not yet implemented."
	301 Compare X9, 0
	302 JumpIfEqual {309}
	303 Move X10, [X8+176]
	304 Add X10, X10, 8
	305 NotImplemented "Instruction LDUR not yet implemented."
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Subtract X9, X9, 1
	308 Add X10, X10, 16
	309 Move X0, X20
	310 Move W2, W31
	311 Call 0x1C5D788
	312 NotImplemented "Instruction LDRSW not yet implemented."
	313 Add X8, X8, X9
	314 Add X0, X8, 312
	315 Move X8, [X0]
	316 Move X1, [X0+8]
	317 Move X0, X20
	318 NotImplemented "Instruction BLR not yet implemented."
	319 Move TEMP, X0
	320 And TEMP, TEMP, 1
	321 Compare TEMP, 1
	322 JumpIfNotEqual {412}
	323 Move X8, [X20]
	324 Move X10, 0x2283000
	325 NotImplemented "Instruction LDRH not yet implemented."
	326 Move X10, [X10+2496]
	327 Move X1, [X10]
	328 Compare X9, 0
	329 JumpIfEqual {336}
	330 Move X10, [X8+176]
	331 Add X10, X10, 8
	332 NotImplemented "Instruction LDUR not yet implemented."
	333 NotImplemented "Instruction CMP not yet implemented."
	334 Subtract X9, X9, 1
	335 Add X10, X10, 16
	336 Move X0, X20
	337 Move W2, W31
	338 Call 0x1C5D788
	339 NotImplemented "Instruction LDRSW not yet implemented."
	340 Add X8, X8, X9
	341 Add X0, X8, 312
	342 Move X8, [X0]
	343 Move X1, [X0+8]
	344 Move X0, X20
	345 NotImplemented "Instruction BLR not yet implemented."
	346 Move X8, 0x2283000
	347 Move X8, [X8+2288]
	348 Move X21, X0
	349 Move X0, [X8]
	350 Call 0x1C17F10
	351 Move X1, [X29]
	352 Move X22, X0
	353 Call List`1<Object>..ctor, X0
	354 Move X8, [X19+32]
	355 Compare X8, 0
	356 JumpIfEqual {454}
	357 Move W23, W31
	358 Move W9, [X8+24]
	359 NotImplemented "Instruction CMP not yet implemented."
	360 Move X2, [X25]
	361 Move X0, X8
	362 Move W1, W23
	363 Call List`1<Object>.get_Item, X0, X1
	364 Move X24, X0
	365 Compare X0, 0
	366 JumpIfEqual {455}
	367 Compare X21, 0
	368 JumpIfEqual {456}
	369 Move X8, [X21]
	370 Move X1, [X24+16]
	371 Move X9, [X8+680]
	372 Move X2, [X8+688]
	373 Move X0, X21
	374 NotImplemented "Instruction BLR not yet implemented."
	375 Move TEMP, X0
	376 And TEMP, TEMP, 1
	377 Compare TEMP, 1
	378 JumpIfNotEqual {401}
	379 Compare X22, 0
	380 JumpIfEqual {457}
	381 Move W10, [X22+28]
	382 Move X8, [X22+16]
	383 Move X9, [X27]
	384 Add W10, W10, 1
	385 Move [X22+28], W10
	386 Compare X8, 0
	387 JumpIfEqual {458}
	388 NotImplemented "Instruction LDRSW not yet implemented."
	389 Move W11, [X8+24]
	390 NotImplemented "Instruction CMP not yet implemented."
	391 Add W9, W10, 1
	392 Add X8, X8, X10
	393 Move [X22+24], W9
	394 Move [X8+32], X24
	395 Move X8, [X9+32]
	396 Move X8, [X8+192]
	397 Move X2, [X8+112]
	398 Move X0, X22
	399 Move X1, X24
	400 Call List`1<Object>.AddWithResize, X0, X1
	401 Move X8, [X19+32]
	402 Add W23, W23, 1
	403 Compare X8, 0
	404 JumpIfNotEqual {358}
	405 Move X0, [X19+40]
	406 Compare X0, 0
	407 JumpIfEqual {459}
	408 Move X3, [X28]
	409 Move X1, X21
	410 Move X2, X22
	411 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	412 Move X19, X31
	413 Compare X20, 0
	414 JumpIfEqual {438}
	415 Move X8, [X20]
	416 Move X10, 0x2278000
	417 NotImplemented "Instruction LDRH not yet implemented."
	418 Move X10, [X10+3584]
	419 Move X1, [X10]
	420 Compare X9, 0
	421 JumpIfEqual {428}
	422 Move X10, [X8+176]
	423 Add X10, X10, 8
	424 NotImplemented "Instruction LDUR not yet implemented."
	425 NotImplemented "Instruction CMP not yet implemented."
	426 Subtract X9, X9, 1
	427 Add X10, X10, 16
	428 Move X0, X20
	429 Move W2, W31
	430 Call 0x1C5D788
	431 NotImplemented "Instruction LDRSW not yet implemented."
	432 Add X8, X8, X9
	433 Add X0, X8, 312
	434 Move X8, [X0]
	435 Move X1, [X0+8]
	436 Move X0, X20
	437 NotImplemented "Instruction BLR not yet implemented."
	438 Compare X19, 0
	439 JumpIfNotEqual {462}
	440 Move X20, [X31+144]
	441 Move X19, [X31+152]
	442 Move X22, [X31+128]
	443 Move X21, [X31+136]
	444 Move X24, [X31+112]
	445 Move X23, [X31+120]
	446 Move X26, [X31+96]
	447 Move X25, [X31+104]
	448 Move X28, [X31+80]
	449 Move X27, [X31+88]
	450 Move X29, [X31+64]
	451 Move X30, [X31+72]
	452 Add X31, X31, 160
	453 Return 
	454 Call 0x1C17F20
	455 Call 0x1C17F20
	456 Call 0x1C17F20
	457 Call 0x1C17F20
	458 Call 0x1C17F20
	459 Call 0x1C17F20
	460 Call 0x1C17F20
	461 Call 0x1C17F20
	462 Move X0, X19
	463 Call 0x1C17F18
	464 Move X21, X0
	465 NotImplemented "Instruction CMP not yet implemented."
	466 Move X0, X21
	467 Call 0x3EB2AD0
	468 Move X22, [X0]
	469 Call 0x3EB2AE0
	470 Move X1, [X23]
	471 Add X0, X31, 32
	472 Call Enumerator<Object>.Dispose, X0
	473 Compare X22, 0
	474 JumpIfEqual {219}
	475 Move X0, X22
	476 Call 0x1C17F18
	477 Move X22, X31
	478 Move X21, X0
	479 Move X1, [X23]
	480 Add X0, X31, 32
	481 Call Enumerator<Object>.Dispose, X0
	482 Compare X22, 0
	483 JumpIfEqual {520}
	484 Move X0, X22
	485 Call 0x1C17F18
	486 NotImplemented "Instruction CMP not yet implemented."
	487 Call 0x3EB2AD0
	488 Move X19, [X0]
	489 Call 0x3EB2AE0
	490 Move X21, X0
	491 Move X19, X31
	492 Move X21, X0
	493 Compare X20, 0
	494 JumpIfEqual {518}
	495 Move X8, [X20]
	496 Move X10, 0x2278000
	497 NotImplemented "Instruction LDRH not yet implemented."
	498 Move X10, [X10+3584]
	499 Move X1, [X10]
	500 Compare X9, 0
	501 JumpIfEqual {508}
	502 Move X10, [X8+176]
	503 Add X10, X10, 8
	504 NotImplemented "Instruction LDUR not yet implemented."
	505 NotImplemented "Instruction CMP not yet implemented."
	506 Subtract X9, X9, 1
	507 Add X10, X10, 16
	508 Move X0, X20
	509 Move W2, W31
	510 Call 0x1C5D788
	511 NotImplemented "Instruction LDRSW not yet implemented."
	512 Add X8, X8, X9
	513 Add X0, X8, 312
	514 Move X8, [X0]
	515 Move X1, [X0+8]
	516 Move X0, X20
	517 NotImplemented "Instruction BLR not yet implemented."
	518 Compare X19, 0
	519 JumpIfNotEqual {522}
	520 Move X0, X21
	521 Call 0x1D2D690
	522 Move X0, X19
	523 Call 0x1C17F18
	524 Call 0x1991590

Method: System.Void InvokeRender()

Disassembly:
	0x01E7C514 STR X30, [X31 - 0x10]!
	0x01E7C518 MOV X8, X0
	0x01E7C51C LDR X9, [X8 + 0x28]!
	0x01E7C520 CBZ X1, 0x1E7C548
	0x01E7C524 STP X31, X9, [X1 + 0x20]
	0x01E7C528 CBZ X9, 0x1E7C534
	0x01E7C52C STR X1, [X9 + 0x20]
	0x01E7C530 B 0x1E7C53C
	0x01E7C534 ADD X8, X0, 0x30
	0x01E7C538 STR X1, [X0 + 0x28]
	0x01E7C53C STR X1, [X8]
	0x01E7C540 LDR X30, [X31], #0x10
	0x01E7C544 RET
	0x01E7C548 BL 0x1C16F20
	0x01E7C54C STR X30, [X31 - 0x50]!
	0x01E7C550 STP X26, X25, [X31 + 0x10]
	0x01E7C554 STP X24, X23, [X31 + 0x20]
	0x01E7C558 STP X22, X21, [X31 + 0x30]
	0x01E7C55C STP X20, X19, [X31 + 0x40]
	0x01E7C560 ADRP X21, 0x255D000
	0x01E7C564 LDRB W8, [X21 + 0x1AD]
	0x01E7C568 MOV X19, X1
	0x01E7C56C MOV X20, X0
	0x01E7C570 TBNZ X8, 0x0, 0x1E7C5C4
	0x01E7C574 ADRP X0, 0x2281000
	0x01E7C578 LDR X0, [X0 + 0xA80]
	0x01E7C57C BL 0x1C16CF4
	0x01E7C580 ADRP X0, 0x2281000
	0x01E7C584 LDR X0, [X0 + 0xA88]
	0x01E7C588 BL 0x1C16CF4
	0x01E7C58C ADRP X0, 0x2281000
	0x01E7C590 LDR X0, [X0 + 0x558]
	0x01E7C594 BL 0x1C16CF4
	0x01E7C598 ADRP X0, 0x2281000
	0x01E7C59C LDR X0, [X0 + 0xA90]
	0x01E7C5A0 BL 0x1C16CF4
	0x01E7C5A4 ADRP X0, 0x2281000
	0x01E7C5A8 LDR X0, [X0 + 0xA98]
	0x01E7C5AC BL 0x1C16CF4
	0x01E7C5B0 ADRP X0, 0x2277000
	0x01E7C5B4 LDR X0, [X0 + 0x6C0]
	0x01E7C5B8 BL 0x1C16CF4
	0x01E7C5BC MOVZ W8, 0x1
	0x01E7C5C0 STRB W8, [X21 + 0x1AD]
	0x01E7C5C4 LDR X0, [X20 + 0x30]
	0x01E7C5C8 CBZ X0, 0x1E7C784
	0x01E7C5CC ADRP X8, 0x2281000
	0x01E7C5D0 LDR X8, [X8 + 0xA88]
	0x01E7C5D4 MOV X1, X19
	0x01E7C5D8 LDR X2, [X8]
	0x01E7C5DC BL 0x2DBE4B0
	0x01E7C5E0 TBNZ X0, 0x0, 0x1E7C768
	0x01E7C5E4 LDR X0, [X20 + 0x30]
	0x01E7C5E8 CBZ X0, 0x1E7C784
	0x01E7C5EC ADRP X8, 0x2281000
	0x01E7C5F0 LDR X8, [X8 + 0xA80]
	0x01E7C5F4 MOV X1, X19
	0x01E7C5F8 LDR X2, [X8]
	0x01E7C5FC BL 0x2DBEF30
	0x01E7C600 ADRP X23, 0x2277000
	0x01E7C604 LDR X23, [X23 + 0x6C0]
	0x01E7C608 ADRP X8, 0x2281000
	0x01E7C60C LDR X0, [X23]
	0x01E7C610 LDR X8, [X8 + 0x558]
	0x01E7C614 LDR W9, [X0 + 0xE0]
	0x01E7C618 LDR X20, [X8]
	0x01E7C61C CBNZ W9, 0x1E7C624
	0x01E7C620 BL 0x1C16DFC
	0x01E7C624 MOV X0, X20
	0x01E7C628 MOV X1, X31
	0x01E7C62C BL 0x338C698
	0x01E7C630 CBZ X0, 0x1E7C784
	0x01E7C634 LDR X8, [X0]
	0x01E7C638 MOV X1, X19
	0x01E7C63C LDR X9, [X8 + 0x2A8]
	0x01E7C640 LDR X2, [X8 + 0x2B0]
	0x01E7C644 BLR X9
	0x01E7C648 TBNZ X0, 0x0, 0x1E7C768
	0x01E7C64C CBZ X19, 0x1E7C784
	0x01E7C650 LDR X8, [X19]
	0x01E7C654 MOVZ W1, 0x74
	0x01E7C658 MOV X0, X19
	0x01E7C65C LDR X9, [X8 + 0x7E8]
	0x01E7C660 LDR X2, [X8 + 0x7F0]
	0x01E7C664 BLR X9
	0x01E7C668 CBZ X0, 0x1E7C784
	0x01E7C66C LDR X8, [X0 + 0x18]
	0x01E7C670 MOV X20, X0
	0x01E7C674 CMP W8, 0x1
	0x01E7C678 B.LT 0x1E7C6DC
	0x01E7C67C ADRP X26, 0x2281000
	0x01E7C680 LDR X26, [X26 + 0xA90]
	0x01E7C684 MOV X24, X31
	0x01E7C688 AND X8, X8, 0x0
	0x01E7C68C ADD X25, X20, 0x20
	0x01E7C690 CMP X24, W8, UXTW
	0x01E7C694 B.CS 0x1E7C780
	0x01E7C698 LDR X0, [X23]
	0x01E7C69C LDR X21, [X25, X24, LSL #3]
	0x01E7C6A0 LDR X22, [X26]
	0x01E7C6A4 LDR W8, [X0 + 0xE0]
	0x01E7C6A8 CBNZ W8, 0x1E7C6B0
	0x01E7C6AC BL 0x1C16DFC
	0x01E7C6B0 MOV X0, X22
	0x01E7C6B4 MOV X1, X31
	0x01E7C6B8 BL 0x338C698
	0x01E7C6BC MOV X1, X0
	0x01E7C6C0 MOV X0, X21
	0x01E7C6C4 MOV X2, X31
	0x01E7C6C8 BL 0x32D4598
	0x01E7C6CC LDR W8, [X20 + 0x18]
	0x01E7C6D0 ADD X24, X24, 0x1
	0x01E7C6D4 CMP X24, W8, SXTW
	0x01E7C6D8 B.LT 0x1E7C690
	0x01E7C6DC LDR X8, [X19]
	0x01E7C6E0 MOVZ W1, 0x74
	0x01E7C6E4 MOV X0, X19
	0x01E7C6E8 LDR X9, [X8 + 0x758]
	0x01E7C6EC LDR X2, [X8 + 0x760]
	0x01E7C6F0 BLR X9
	0x01E7C6F4 CBZ X0, 0x1E7C784
	0x01E7C6F8 LDR X8, [X0 + 0x18]
	0x01E7C6FC MOV X19, X0
	0x01E7C700 CMP W8, 0x1
	0x01E7C704 B.LT 0x1E7C768
	0x01E7C708 ADRP X25, 0x2281000
	0x01E7C70C LDR X25, [X25 + 0xA98]
	0x01E7C710 MOV X22, X31
	0x01E7C714 AND X8, X8, 0x0

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X30
	003 Move [X31+48], X28
	004 Move [X31+56], X27
	005 Move [X31+64], X26
	006 Move [X31+72], X25
	007 Move [X31+80], X24
	008 Move [X31+88], X23
	009 Move [X31+96], X22
	010 Move [X31+104], X21
	011 Move [X31+112], X20
	012 Move [X31+120], X19
	013 Move X20, 0x255E000
	014 Move W8, [X20+422]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x2282000
	021 Move X0, [X0+2536]
	022 Call 0x1C17CF4
	023 Move X0, 0x2282000
	024 Move X0, [X0+2544]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+422], W8
	028 Move X0, [X19+32]
	029 Compare X0, 0
	030 JumpIfEqual {126}
	031 Move W25, [X0+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X26, 0x2282000
	034 Move X21, 0x2278000
	035 Move X22, 0x2280000
	036 Move X23, 0x2280000
	037 Move X26, [X26+2544]
	038 Move X21, [X21+2000]
	039 Move X22, [X22+2224]
	040 Move X23, [X23+1800]
	041 Move W20, W31
	042 Move X27, 0x255D000
	043 Move W28, 1
	044 Compare X0, 0
	045 JumpIfEqual {88}
	046 Move X2, [X26]
	047 Move W1, W20
	048 Call List`1<Object>.get_Item, X0, X1
	049 Compare X0, 0
	050 JumpIfEqual {89}
	051 Move X24, [X0+40]
	052 Add X8, X31, 8
	053 Move X0, X31
	054 Call Timer.StartNew
	055 Move W8, [X24+48]
	056 And W31, W8, 28
	057 Move X8, [X24]
	058 Move X9, [X8+424]
	059 Move X1, [X8+432]
	060 Move X0, X24
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move X8, [X24]
	063 Move X9, [X8+440]
	064 Move X1, [X8+448]
	065 Move X0, X24
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X24, [X24+40]
	068 Compare X24, 0
	069 JumpIfNotEqual {55}
	070 Move W8, [X27+3863]
	071 Compare W8, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X23
	074 Call 0x1C17CF4
	075 Move [X27+3863], W28
	076 Move X0, [X23]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X0, X31
	082 Call Stopwatch.GetTimestamp
	083 Add W20, W20, 1
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X0, [X19+32]
	086 Compare X0, 0
	087 JumpIfNotEqual {46}
	088 Call 0x1C17F20
	089 Call 0x1C17F20
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Call 0x3EB2AD0
	092 Move X24, X0
	093 Move X0, X21
	094 Call 0x1C17D08
	095 Move X8, [X24]
	096 Move X1, [X8]
	097 Call 0x1C18270
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {128}
	102 Move X24, [X24]
	103 Call 0x3EB2AE0
	104 Move X0, X22
	105 Call 0x1C17D08
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Move X0, X24
	111 Move X1, X31
	112 Call Log.Exception, X0
	113 Move X20, [X31+112]
	114 Move X19, [X31+120]
	115 Move X22, [X31+96]
	116 Move X21, [X31+104]
	117 Move X24, [X31+80]
	118 Move X23, [X31+88]
	119 Move X26, [X31+64]
	120 Move X25, [X31+72]
	121 Move X28, [X31+48]
	122 Move X27, [X31+56]
	123 Move X30, [X31+32]
	124 Add X31, X31, 128
	125 Return 
	126 Call 0x1C17F20
	127 Move X19, X0
	128 Move W0, 8
	129 Call 0x3EB2AF0
	130 Move X8, [X24]
	131 Move [X0], X8
	132 Move X1, 0x2039000
	133 Add X1, X1, 3672
	134 Move X2, X31
	135 Call 0x3EB2B00
	136 Move X19, X0
	137 Call 0x3EB2AE0
	138 Move X0, X19
	139 Call 0x1D2D690
	140 Call 0x1991590

Method: System.Int32 GetCallbackCount(System.Type type)

Disassembly:
	0x01E7C718 ADD X24, X19, 0x20
	0x01E7C71C CMP X22, W8, UXTW
	0x01E7C720 B.CS 0x1E7C780
	0x01E7C724 LDR X0, [X23]
	0x01E7C728 LDR X20, [X24, X22, LSL #3]
	0x01E7C72C LDR X21, [X25]
	0x01E7C730 LDR W8, [X0 + 0xE0]
	0x01E7C734 CBNZ W8, 0x1E7C73C
	0x01E7C738 BL 0x1C16DFC
	0x01E7C73C MOV X0, X21
	0x01E7C740 MOV X1, X31
	0x01E7C744 BL 0x338C698
	0x01E7C748 MOV X1, X0
	0x01E7C74C MOV X0, X20
	0x01E7C750 MOV X2, X31
	0x01E7C754 BL 0x32D4598
	0x01E7C758 LDR W8, [X19 + 0x18]
	0x01E7C75C ADD X22, X22, 0x1
	0x01E7C760 CMP X22, W8, SXTW
	0x01E7C764 B.LT 0x1E7C71C
	0x01E7C768 LDP X20, X19, [X31 + 0x40]
	0x01E7C76C LDP X22, X21, [X31 + 0x30]
	0x01E7C770 LDP X24, X23, [X31 + 0x20]
	0x01E7C774 LDP X26, X25, [X31 + 0x10]
	0x01E7C778 LDR X30, [X31], #0x50
	0x01E7C77C RET
	0x01E7C780 BL 0x1C16F28
	0x01E7C784 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x255E000
	006 Move W8, [X21+423]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x2282000
	014 Move X0, [X0+2600]
	015 Call 0x1C17CF4
	016 Move X0, 0x2282000
	017 Move X0, [X0+2536]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+423], W8
	021 Move X0, [X20+40]
	022 Compare X0, 0
	023 JumpIfEqual {37}
	024 Move X8, 0x2282000
	025 Move X8, [X8+2600]
	026 Move X1, X19
	027 Move X2, [X8]
	028 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {37}
	031 Move W0, [X0+24]
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0
	037 Call 0x1C17F20

Method: Fusion.SimulationBehaviourListScope GetCallbackHead(System.Type type, System.Int32 index, out Fusion.SimulationBehaviour head)

Disassembly:
	0x01E7C788 STR X30, [X31 - 0x20]!
	0x01E7C78C STP X20, X19, [X31 + 0x10]
	0x01E7C790 CBZ X1, 0x1E7C7F0
	0x01E7C794 MOV X19, X1
	0x01E7C798 MOV X20, X0
	0x01E7C79C MOV X0, X1
	0x01E7C7A0 MOV X1, X31
	0x01E7C7A4 BL 0x33BE520
	0x01E7C7A8 MOV X1, X0
	0x01E7C7AC MOV X0, X20
	0x01E7C7B0 BL 0x1E7C168
	0x01E7C7B4 CBZ X0, 0x1E7C7F0
	0x01E7C7B8 LDR W8, [X0 + 0x38]
	0x01E7C7BC CMP W8, 0x1
	0x01E7C7C0 B.LT 0x1E7C7E0
	0x01E7C7C4 LDR W8, [X19 + 0x30]
	0x01E7C7C8 MOV X1, X19
	0x01E7C7CC ORR W8, W8, 0x4
	0x01E7C7D0 STR W8, [X19 + 0x30]
	0x01E7C7D4 LDP X20, X19, [X31 + 0x10]
	0x01E7C7D8 LDR X30, [X31], #0x20
	0x01E7C7DC B 0x1E7C7F4
	0x01E7C7E0 MOV X1, X19
	0x01E7C7E4 LDP X20, X19, [X31 + 0x10]
	0x01E7C7E8 LDR X30, [X31], #0x20
	0x01E7C7EC B 0x1E7C8E0
	0x01E7C7F0 BL 0x1C16F20
	0x01E7C7F4 STP X30, X21, [X31 - 0x20]!
	0x01E7C7F8 STP X20, X19, [X31 + 0x10]
	0x01E7C7FC ADRP X20, 0x255D000
	0x01E7C800 LDRB W8, [X20 + 0x1B4]
	0x01E7C804 MOV X19, X1
	0x01E7C808 MOV X21, X0
	0x01E7C80C TBNZ X8, 0x0, 0x1E7C83C
	0x01E7C810 ADRP X0, 0x2281000
	0x01E7C814 LDR X0, [X0 + 0xA30]
	0x01E7C818 BL 0x1C16CF4
	0x01E7C81C ADRP X0, 0x2281000
	0x01E7C820 LDR X0, [X0 + 0xAA0]
	0x01E7C824 BL 0x1C16CF4
	0x01E7C828 ADRP X0, 0x2281000
	0x01E7C82C LDR X0, [X0 + 0xAA8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x255E000
	008 Move W8, [X23+424]
	009 Move X19, X3
	010 Move W20, W2
	011 Move X21, X1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2282000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move X0, 0x2282000
	021 Move X0, [X0+2544]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+424], W8
	025 Move X0, [X22+40]
	026 Compare X0, 0
	027 JumpIfEqual {54}
	028 Move X8, 0x2282000
	029 Move X8, [X8+2600]
	030 Move X1, X21
	031 Move X2, [X8]
	032 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	033 Compare X0, 0
	034 JumpIfEqual {54}
	035 Move X8, 0x2282000
	036 Move X8, [X8+2544]
	037 Move W1, W20
	038 Move X2, [X8]
	039 Call List`1<Object>.get_Item, X0, X1
	040 Compare X0, 0
	041 JumpIfEqual {54}
	042 Move X8, [X0+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move [X19], X8
	046 Move W8, [X0+56]
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Add W8, W8, 1
	050 Move [X0+56], W8
	051 Move X30, [X31+48]
	052 Move X23, [X31+56]
	053 Return X0
	054 Call 0x1C17F20

Method: System.Void GetAllSimulationBehaviours(System.Collections.Generic.List`1<Fusion.SimulationBehaviour> allSb)

Disassembly:
	0x01E7C830 BL 0x1C16CF4
	0x01E7C834 MOVZ W8, 0x1
	0x01E7C838 STRB W8, [X20 + 0x1B4]
	0x01E7C83C LDR X20, [X21 + 0x40]
	0x01E7C840 CBNZ X20, 0x1E7C870
	0x01E7C844 ADRP X8, 0x2281000
	0x01E7C848 LDR X8, [X8 + 0xAA8]
	0x01E7C84C LDR X0, [X8]
	0x01E7C850 BL 0x1C16F10
	0x01E7C854 ADRP X8, 0x2281000
	0x01E7C858 LDR X8, [X8 + 0xAA0]
	0x01E7C85C MOV X20, X0
	0x01E7C860 LDR X1, [X8]
	0x01E7C864 BL 0x301B7C4
	0x01E7C868 STR X20, [X21 + 0x40]
	0x01E7C86C CBZ X20, 0x1E7C8DC
	0x01E7C870 ADRP X9, 0x2281000
	0x01E7C874 LDR X9, [X9 + 0xA30]
	0x01E7C878 LDR W10, [X20 + 0x1C]
	0x01E7C87C LDR X8, [X20 + 0x10]
	0x01E7C880 LDR X9, [X9]
	0x01E7C884 ADD W10, W10, 0x1
	0x01E7C888 STR W10, [X20 + 0x1C]
	0x01E7C88C CBZ X8, 0x1E7C8DC
	0x01E7C890 LDRSW X10, [X20 + 0x18]
	0x01E7C894 LDR W11, [X8 + 0x18]
	0x01E7C898 CMP W10, W11
	0x01E7C89C B.CS 0x1E7C8BC
	0x01E7C8A0 ADD W9, W10, 0x1
	0x01E7C8A4 ADD X8, X8, X10, 0x3, LSL
	0x01E7C8A8 STR W9, [X20 + 0x18]
	0x01E7C8AC STR X19, [X8 + 0x20]
	0x01E7C8B0 LDP X20, X19, [X31 + 0x10]
	0x01E7C8B4 LDP X30, X21, [X31], #0x20
	0x01E7C8B8 RET
	0x01E7C8BC LDR X8, [X9 + 0x20]
	0x01E7C8C0 MOV X0, X20
	0x01E7C8C4 MOV X1, X19
	0x01E7C8C8 LDP X20, X19, [X31 + 0x10]
	0x01E7C8CC LDR X8, [X8 + 0xC0]
	0x01E7C8D0 LDR X2, [X8 + 0x70]
	0x01E7C8D4 LDP X30, X21, [X31], #0x20
	0x01E7C8D8 B 0x301BF90
	0x01E7C8DC BL 0x1C16F20
	0x01E7C8E0 STR X30, [X31 - 0x10]!
	0x01E7C8E4 ADD X8, X0, 0x28
	0x01E7C8E8 MOV X10, X8
	0x01E7C8EC LDR X9, [X10]
	0x01E7C8F0 CBZ X9, 0x1E7C900
	0x01E7C8F4 CMP X9, X1
	0x01E7C8F8 ADD X10, X9, 0x28
	0x01E7C8FC B.NE 0x1E7C8EC
	0x01E7C900 CBZ X9, 0x1E7C95C
	0x01E7C904 CBZ X1, 0x1E7C964
	0x01E7C908 MOV X9, X1
	0x01E7C90C LDR X11, [X9 + 0x20]!
	0x01E7C910 CBZ X11, 0x1E7C91C
	0x01E7C914 LDR X10, [X1 + 0x28]
	0x01E7C918 STR X10, [X11 + 0x28]
	0x01E7C91C LDR X10, [X1 + 0x28]
	0x01E7C920 CBZ X10, 0x1E7C928
	0x01E7C924 STR X11, [X10 + 0x20]
	0x01E7C928 LDR X11, [X0 + 0x30]
	0x01E7C92C CMP X1, X11
	0x01E7C930 B.NE 0x1E7C93C
	0x01E7C934 LDR X11, [X9]
	0x01E7C938 STR X11, [X0 + 0x30]
	0x01E7C93C LDR X11, [X8]
	0x01E7C940 CMP X1, X11
	0x01E7C944 B.NE 0x1E7C94C
	0x01E7C948 STR X10, [X8]
	0x01E7C94C STP X31, X31, [X9]
	0x01E7C950 LDR W8, [X1 + 0x30]
	0x01E7C954 AND W8, W8, 0xFFFFFFFB
	0x01E7C958 STR W8, [X1 + 0x30]
	0x01E7C95C LDR X30, [X31], #0x10
	0x01E7C960 RET
	0x01E7C964 BL 0x1C16F20
	0x01E7C968 SUB X31, X31, 0x50
	0x01E7C96C STP X30, X25, [X31 + 0x10]
	0x01E7C970 STP X24, X23, [X31 + 0x20]
	0x01E7C974 STP X22, X21, [X31 + 0x30]
	0x01E7C978 STP X20, X19, [X31 + 0x40]
	0x01E7C97C ADRP X21, 0x255D000
	0x01E7C980 LDRB W8, [X21 + 0x1AE]
	0x01E7C984 MOV X20, X1
	0x01E7C988 MOV X19, X0
	0x01E7C98C TBNZ X8, 0x0, 0x1E7CA1C
	0x01E7C990 ADRP X0, 0x2281000
	0x01E7C994 LDR X0, [X0 + 0xAB0]
	0x01E7C998 BL 0x1C16CF4
	0x01E7C99C ADRP X0, 0x2281000
	0x01E7C9A0 LDR X0, [X0 + 0xAB8]
	0x01E7C9A4 BL 0x1C16CF4
	0x01E7C9A8 ADRP X0, 0x2281000
	0x01E7C9AC LDR X0, [X0 + 0x938]
	0x01E7C9B0 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0x255E000
	010 Move X21, 0x2282000
	011 Move X22, 0x2278000
	012 Move W8, [X23+425]
	013 Move X21, [X21+1368]
	014 Move X22, [X22+1728]
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0x2282000
	022 Move X0, [X0+2608]
	023 Call 0x1C17CF4
	024 Move X0, 0x2282000
	025 Move X0, [X0+2536]
	026 Call 0x1C17CF4
	027 Move X0, 0x2282000
	028 Move X0, [X0+2544]
	029 Call 0x1C17CF4
	030 Move X0, 0x2282000
	031 Move X0, [X0+1368]
	032 Call 0x1C17CF4
	033 Move X0, 0x2278000
	034 Move X0, [X0+1728]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X23+425], W8
	038 Move X0, [X22]
	039 Move X21, [X21]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X21
	045 Move X1, X31
	046 Call Type.GetTypeFromHandle, X0
	047 Move X8, [X20+32]
	048 Compare X8, 0
	049 JumpIfEqual {108}
	050 Move X24, 0x2282000
	051 Move X25, 0x2282000
	052 Move X24, [X24+2544]
	053 Move X25, [X25+2608]
	054 Move X21, X0
	055 Move W22, W31
	056 Move W9, [X8+24]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X2, [X24]
	059 Move X0, X8
	060 Move W1, W22
	061 Call List`1<Object>.get_Item, X0, X1
	062 Compare X0, 0
	063 JumpIfEqual {108}
	064 Move X23, [X0+40]
	065 Compare X23, 0
	066 JumpIfEqual {104}
	067 Compare X21, 0
	068 JumpIfEqual {108}
	069 Move X8, [X21]
	070 Move X0, X21
	071 Move X1, X23
	072 Move X9, [X8+2152]
	073 Move X2, [X8+2160]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {101}
	079 Compare X19, 0
	080 JumpIfEqual {108}
	081 Move W10, [X19+28]
	082 Move X8, [X19+16]
	083 Move X9, [X25]
	084 Add W10, W10, 1
	085 Move [X19+28], W10
	086 Compare X8, 0
	087 JumpIfEqual {108}
	088 NotImplemented "Instruction LDRSW not yet implemented."
	089 Move W11, [X8+24]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Add W9, W10, 1
	092 Add X8, X8, X10
	093 Move [X19+24], W9
	094 Move [X8+32], X23
	095 Move X8, [X9+32]
	096 Move X0, X19
	097 Move X1, X23
	098 Move X8, [X8+192]
	099 Move X2, [X8+112]
	100 Call List`1<Object>.AddWithResize, X0, X1
	101 Move X23, [X23+40]
	102 Compare X23, 0
	103 JumpIfNotEqual {69}
	104 Move X8, [X20+32]
	105 Add W22, W22, 1
	106 Compare X8, 0
	107 JumpIfNotEqual {56}
	108 Call 0x1C17F20
	109 Move X20, [X31+48]
	110 Move X19, [X31+56]
	111 Move X22, [X31+32]
	112 Move X21, [X31+40]
	113 Move X24, [X31+16]
	114 Move X23, [X31+24]
	115 Move X30, [X31+64]
	116 Move X25, [X31+72]
	117 Return 

Method: System.Void InvokeFixedUpdateNetwork(Fusion.SimulationStages stage, Fusion.SimulationModes mode, Fusion.Topologies topology)

Disassembly:
	0x01E7C9B4 ADRP X0, 0x2281000
	0x01E7C9B8 LDR X0, [X0 + 0xAC0]
	0x01E7C9BC BL 0x1C16CF4
	0x01E7C9C0 ADRP X0, 0x2281000
	0x01E7C9C4 LDR X0, [X0 + 0x928]
	0x01E7C9C8 BL 0x1C16CF4
	0x01E7C9CC ADRP X0, 0x2281000
	0x01E7C9D0 LDR X0, [X0 + 0x9E8]
	0x01E7C9D4 BL 0x1C16CF4
	0x01E7C9D8 ADRP X0, 0x2281000
	0x01E7C9DC LDR X0, [X0 + 0xAC8]
	0x01E7C9E0 BL 0x1C16CF4
	0x01E7C9E4 ADRP X0, 0x2281000
	0x01E7C9E8 LDR X0, [X0 + 0x9F0]
	0x01E7C9EC BL 0x1C16CF4
	0x01E7C9F0 ADRP X0, 0x2281000
	0x01E7C9F4 LDR X0, [X0 + 0x920]
	0x01E7C9F8 BL 0x1C16CF4
	0x01E7C9FC ADRP X0, 0x2281000
	0x01E7CA00 LDR X0, [X0 + 0xAD0]
	0x01E7CA04 BL 0x1C16CF4
	0x01E7CA08 ADRP X0, 0x2281000
	0x01E7CA0C LDR X0, [X0 + 0xAD8]
	0x01E7CA10 BL 0x1C16CF4
	0x01E7CA14 MOVZ W8, 0x1
	0x01E7CA18 STRB W8, [X21 + 0x1AE]
	0x01E7CA1C STP X31, X31, [X31]
	0x01E7CA20 LDR X0, [X19 + 0x18]
	0x01E7CA24 CBZ X0, 0x1E7CB3C
	0x01E7CA28 ADRP X8, 0x2281000
	0x01E7CA2C LDR X8, [X8 + 0xAB8]
	0x01E7CA30 ADD X2, X31, 0x0
	0x01E7CA34 MOV X1, X20
	0x01E7CA38 LDR X3, [X8]
	0x01E7CA3C BL 0x2A880FC
	0x01E7CA40 TBNZ X0, 0x0, 0x1E7CBB0
	0x01E7CA44 ADRP X8, 0x2281000
	0x01E7CA48 LDR X8, [X8 + 0x920]
	0x01E7CA4C LDR X0, [X8]
	0x01E7CA50 BL 0x1C16F10
	0x01E7CA54 ADRP X8, 0x2281000
	0x01E7CA58 LDR X8, [X8 + 0x928]
	0x01E7CA5C MOV X21, X0
	0x01E7CA60 LDR X1, [X8]
	0x01E7CA64 BL 0x301B7C4
	0x01E7CA68 LDR X0, [X19 + 0x20]
	0x01E7CA6C CBZ X0, 0x1E7CB3C
	0x01E7CA70 ADRP X23, 0x2281000
	0x01E7CA74 ADRP X24, 0x2281000
	0x01E7CA78 LDR X23, [X23 + 0x9F0]
	0x01E7CA7C LDR X24, [X24 + 0x938]
	0x01E7CA80 MOV W22, W31
	0x01E7CA84 LDR W8, [X0 + 0x18]
	0x01E7CA88 CMP W22, W8
	0x01E7CA8C B.GE 0x1E7CB40
	0x01E7CA90 LDR X2, [X23]
	0x01E7CA94 MOV W1, W22
	0x01E7CA98 BL 0x301BCCC
	0x01E7CA9C CBZ X0, 0x1E7CB3C
	0x01E7CAA0 CBZ X20, 0x1E7CB3C
	0x01E7CAA4 LDR X8, [X20]
	0x01E7CAA8 LDR X1, [X0 + 0x10]
	0x01E7CAAC MOV X0, X20
	0x01E7CAB0 LDR X9, [X8 + 0x2A8]
	0x01E7CAB4 LDR X2, [X8 + 0x2B0]
	0x01E7CAB8 BLR X9
	0x01E7CABC TBZ X0, 0x0, 0x1E7CB30
	0x01E7CAC0 LDR X0, [X19 + 0x20]
	0x01E7CAC4 CBZ X0, 0x1E7CB3C
	0x01E7CAC8 LDR X2, [X23]
	0x01E7CACC MOV W1, W22
	0x01E7CAD0 BL 0x301BCCC
	0x01E7CAD4 CBZ X0, 0x1E7CB3C
	0x01E7CAD8 CBZ X21, 0x1E7CB3C
	0x01E7CADC LDR W10, [X21 + 0x1C]
	0x01E7CAE0 LDR X1, [X0 + 0x10]
	0x01E7CAE4 LDR X8, [X21 + 0x10]
	0x01E7CAE8 LDR X9, [X24]
	0x01E7CAEC ADD W10, W10, 0x1
	0x01E7CAF0 STR W10, [X21 + 0x1C]
	0x01E7CAF4 CBZ X8, 0x1E7CB3C
	0x01E7CAF8 LDRSW X10, [X21 + 0x18]
	0x01E7CAFC LDR W11, [X8 + 0x18]
	0x01E7CB00 CMP W10, W11
	0x01E7CB04 B.CS 0x1E7CB1C
	0x01E7CB08 ADD W9, W10, 0x1
	0x01E7CB0C ADD X8, X8, X10, 0x3, LSL
	0x01E7CB10 STR W9, [X21 + 0x18]
	0x01E7CB14 STR X1, [X8 + 0x20]
	0x01E7CB18 B 0x1E7CB30
	0x01E7CB1C LDR X8, [X9 + 0x20]
	0x01E7CB20 MOV X0, X21
	0x01E7CB24 LDR X8, [X8 + 0xC0]
	0x01E7CB28 LDR X2, [X8 + 0x70]
	0x01E7CB2C BL 0x301BF90
	0x01E7CB30 LDR X0, [X19 + 0x20]
	0x01E7CB34 ADD W22, W22, 0x1
	0x01E7CB38 CBNZ X0, 0x1E7CA84
	0x01E7CB3C BL 0x1C16F20
	0x01E7CB40 CBZ X21, 0x1E7CB3C
	0x01E7CB44 ADRP X8, 0x2281000
	0x01E7CB48 LDR X22, [X19 + 0x18]
	0x01E7CB4C LDR W1, [X21 + 0x18]
	0x01E7CB50 LDR X8, [X8 + 0xAD0]
	0x01E7CB54 LDR X0, [X8]
	0x01E7CB58 BL 0x1C16D6C
	0x01E7CB5C ADRP X8, 0x2281000
	0x01E7CB60 LDR X8, [X8 + 0xAC0]
	0x01E7CB64 MOV X23, X0
	0x01E7CB68 MOV X0, X21
	0x01E7CB6C LDR X1, [X8]
	0x01E7CB70 BL 0x301DDC4
	0x01E7CB74 ADRP X8, 0x2281000
	0x01E7CB78 LDR X8, [X8 + 0xAD8]
	0x01E7CB7C MOV X2, X0
	0x01E7CB80 ADD X0, X31, 0x0
	0x01E7CB84 MOV X1, X23
	0x01E7CB88 LDR X3, [X8]
	0x01E7CB8C BL 0x27ABC80
	0x01E7CB90 CBZ X22, 0x1E7CB3C
	0x01E7CB94 ADRP X8, 0x2281000
	0x01E7CB98 LDP X2, X3, [X31]
	0x01E7CB9C LDR X8, [X8 + 0xAB0]
	0x01E7CBA0 MOV X0, X22
	0x01E7CBA4 MOV X1, X20
	0x01E7CBA8 LDR X4, [X8]
	0x01E7CBAC BL 0x2A866A8
	0x01E7CBB0 LDR X22, [X31 + 0x8]
	0x01E7CBB4 CBZ X22, 0x1E7CB3C
	0x01E7CBB8 LDR X8, [X22 + 0x18]
	0x01E7CBBC LDR X20, [X31]
	0x01E7CBC0 CMP W8, 0x1
	0x01E7CBC4 B.LT 0x1E7CC30
	0x01E7CBC8 MOV X23, X31
	0x01E7CBCC AND X8, X8, 0x0
	0x01E7CBD0 ADD X24, X22, 0x20
	0x01E7CBD4 ADD X25, X20, 0x20
	0x01E7CBD8 CMP X23, W8, UXTW
	0x01E7CBDC B.CS 0x1E7CC4C
	0x01E7CBE0 LDR X1, [X24, X23, LSL #3]
	0x01E7CBE4 MOV X0, X19
	0x01E7CBE8 BL 0x1E7C168
	0x01E7CBEC CBZ X0, 0x1E7CB3C
	0x01E7CBF0 CBZ X20, 0x1E7CB3C
	0x01E7CBF4 LDR X21, [X0 + 0x28]
	0x01E7CBF8 CBZ X21, 0x1E7CC10
	0x01E7CBFC LDR X8, [X20]
	0x01E7CC00 MOV X0, X21
	0x01E7CC04 LDR X1, [X8 + 0x40]
	0x01E7CC08 BL 0x1C16E00
	0x01E7CC0C CBZ X0, 0x1E7CC50
	0x01E7CC10 LDR W8, [X20 + 0x18]
	0x01E7CC14 CMP X23, X8
	0x01E7CC18 B.CS 0x1E7CC4C
	0x01E7CC1C STR X21, [X25, X23, LSL #3]
	0x01E7CC20 LDR W8, [X22 + 0x18]
	0x01E7CC24 ADD X23, X23, 0x1
	0x01E7CC28 CMP X23, W8, SXTW
	0x01E7CC2C B.LT 0x1E7CBD8
	0x01E7CC30 MOV X0, X20
	0x01E7CC34 LDP X20, X19, [X31 + 0x40]
	0x01E7CC38 LDP X22, X21, [X31 + 0x30]
	0x01E7CC3C LDP X24, X23, [X31 + 0x20]
	0x01E7CC40 LDP X30, X25, [X31 + 0x10]
	0x01E7CC44 ADD X31, X31, 0x50
	0x01E7CC48 RET
	0x01E7CC4C BL 0x1C16F28
	0x01E7CC50 BL 0x1C16F44
	0x01E7CC54 MOV X1, X31
	0x01E7CC58 BL 0x1C16DEC
	0x01E7CC5C STP X30, X21, [X31 - 0x20]!
	0x01E7CC60 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X24, 0x255E000
	015 Move X23, 0x2282000
	016 Move W8, [X24+426]
	017 Move X23, [X23+2616]
	018 Move W19, W3
	019 Move W20, W2
	020 Move W21, W1
	021 Move X22, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {37}
	026 Move X0, 0x2282000
	027 Move X0, [X0+2536]
	028 Call 0x1C17CF4
	029 Move X0, 0x2282000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0x2282000
	033 Move X0, [X0+2616]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X24+426], W8
	037 Move X0, [X23]
	038 Move X1, X31
	039 Move [X31+64], X31
	040 Move [X31+72], X31
	041 Move [X31+48], X31
	042 Move [X31+56], X31
	043 Move [X31+44], W31
	044 Call EngineProfiler.Begin, X0
	045 Move X0, [X22+32]
	046 Compare X0, 0
	047 JumpIfEqual {170}
	048 Move W28, [X0+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X29, 0x2282000
	051 Move X29, [X29+2544]
	052 Move W23, W31
	053 Add X27, X31, 72
	054 Add X26, X31, 44
	055 Add X24, X31, 48
	056 Compare X0, 0
	057 JumpIfEqual {112}
	058 Move X2, [X29]
	059 Move W1, W23
	060 Call List`1<Object>.get_Item, X0, X1
	061 Move [X31+72], X0
	062 Add X8, X31, 8
	063 Move X0, X31
	064 Call Timer.StartNew
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 Move X9, [X31+24]
	067 Move X8, [X31+72]
	068 Move [X31+3], V0
	069 Move [X31+64], X9
	070 Compare X8, 0
	071 JumpIfEqual {113}
	072 Move W9, [X8+28]
	073 NotImplemented "Instruction BICS not yet implemented."
	074 Move W9, [X8+32]
	075 NotImplemented "Instruction BICS not yet implemented."
	076 Move W9, [X8+36]
	077 NotImplemented "Instruction BICS not yet implemented."
	078 Move W9, [X8+56]
	079 Move X25, [X8+40]
	080 Add W9, W9, 1
	081 Move [X8+56], W9
	082 Move [X31+8], X31
	083 Move [X31+16], X27
	084 Move [X31+24], X26
	085 Move [X31+32], X24
	086 Move X0, X25
	087 Move W8, [X25+48]
	088 Move X25, [X25+40]
	089 Move TEMP, X8
	090 And TEMP, TEMP, 32
	091 Compare TEMP, 32
	092 JumpIfEqual {101}
	093 And W31, W8, 28
	094 And W8, W8, 3
	095 Compare W8, 0
	096 JumpIfEqual {103}
	097 Move X8, [X0]
	098 Move X9, [X8+408]
	099 Move X1, [X8+416]
	100 NotImplemented "Instruction BLR not yet implemented."
	101 And W8, W8, 0xFFFFFFDF
	102 Move [X0+48], W8
	103 Compare X25, 0
	104 JumpIfNotEqual {86}
	105 Add X0, X31, 8
	106 Call 0x1994380
	107 Add W23, W23, 1
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X0, [X22+32]
	110 Compare X0, 0
	111 JumpIfNotEqual {58}
	112 Call 0x1C17F20
	113 Call 0x1C17F20
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move [X31], X0
	116 Move X0, [X31]
	117 Call 0x3EB2AD0
	118 Move X8, [X0]
	119 Move [X31+8], X8
	120 Call 0x3EB2AE0
	121 Move X25, X1
	122 Add X0, X31, 8
	123 Call 0x1994380
	124 Move X25, X1
	125 Move [X31], X0
	126 Move X25, X1
	127 Move [X31], X0
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X0, [X31]
	130 Call 0x3EB2AD0
	131 Move X25, X0
	132 Move X0, 0x2278000
	133 Move X0, [X0+2000]
	134 Call 0x1C17D08
	135 Move X8, [X25]
	136 Move X1, [X8]
	137 Call 0x1C18270
	138 Move TEMP, X0
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfNotEqual {171}
	142 Move X25, [X25]
	143 Call 0x3EB2AE0
	144 Move X0, 0x2280000
	145 Move X0, [X0+2224]
	146 Call 0x1C17D08
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1C17DFC
	151 Move X0, X25
	152 Move X1, X31
	153 Call Log.Exception, X0
	154 Move X0, X31
	155 Call EngineProfiler.End
	156 Move X20, [X31+160]
	157 Move X19, [X31+168]
	158 Move X22, [X31+144]
	159 Move X21, [X31+152]
	160 Move X24, [X31+128]
	161 Move X23, [X31+136]
	162 Move X26, [X31+112]
	163 Move X25, [X31+120]
	164 Move X28, [X31+96]
	165 Move X27, [X31+104]
	166 Move X29, [X31+80]
	167 Move X30, [X31+88]
	168 Add X31, X31, 176
	169 Return 
	170 Call 0x1C17F20
	171 Move W0, 8
	172 Call 0x3EB2AF0
	173 Move X8, [X25]
	174 Move [X0], X8
	175 Move X1, 0x2039000
	176 Add X1, X1, 3672
	177 Move X2, X31
	178 Call 0x3EB2B00
	179 Move [X31], X0
	180 Call 0x3EB2AE0
	181 Move X0, [X31]
	182 Call 0x1D2D690
	183 Call 0x1991590
	184 Call 0x1991590

Method: System.Void AddObject(Fusion.NetworkRunner runner, Fusion.NetworkObject obj, System.Boolean skipFirstCall, System.Boolean isInSimulation)

Disassembly:
	0x01E7CC64 ADRP X20, 0x255D000
	0x01E7CC68 ADRP X21, 0x2281000
	0x01E7CC6C LDRB W8, [X20 + 0x1B6]
	0x01E7CC70 LDR X21, [X21 + 0xAE0]
	0x01E7CC74 MOV X19, X0
	0x01E7CC78 TBNZ X8, 0x0, 0x1E7CC90
	0x01E7CC7C ADRP X0, 0x2281000
	0x01E7CC80 LDR X0, [X0 + 0xAE0]
	0x01E7CC84 BL 0x1C16CF4
	0x01E7CC88 MOVZ W8, 0x1
	0x01E7CC8C STRB W8, [X20 + 0x1B6]
	0x01E7CC90 LDR X0, [X21]
	0x01E7CC94 BL 0x1C16F10
	0x01E7CC98 MOV X1, X31
	0x01E7CC9C MOV X20, X0
	0x01E7CCA0 BL 0x1EF0600
	0x01E7CCA4 STR X20, [X19 + 0x48]
	0x01E7CCA8 MOV X0, X19
	0x01E7CCAC LDP X20, X19, [X31 + 0x10]
	0x01E7CCB0 MOV X1, X31
	0x01E7CCB4 LDP X30, X21, [X31], #0x20
	0x01E7CCB8 B 0x33BDD8C
	0x01E7CCBC SUB X31, X31, 0x40
	0x01E7CCC0 STR X30, [X31 + 0x20]
	0x01E7CCC4 STP X20, X19, [X31 + 0x30]
	0x01E7CCC8 ADRP X20, 0x255D000
	0x01E7CCCC LDRB W8, [X20 + 0x1B1]
	0x01E7CCD0 MOV X19, X0
	0x01E7CCD4 TBNZ X8, 0x0, 0x1E7CD10
	0x01E7CCD8 ADRP X0, 0x2281000
	0x01E7CCDC LDR X0, [X0 + 0xAE8]
	0x01E7CCE0 BL 0x1C16CF4
	0x01E7CCE4 ADRP X0, 0x2281000
	0x01E7CCE8 LDR X0, [X0 + 0xAF0]
	0x01E7CCEC BL 0x1C16CF4
	0x01E7CCF0 ADRP X0, 0x2281000
	0x01E7CCF4 LDR X0, [X0 + 0xAF8]
	0x01E7CCF8 BL 0x1C16CF4
	0x01E7CCFC ADRP X0, 0x2281000
	0x01E7CD00 LDR X0, [X0 + 0xB00]
	0x01E7CD04 BL 0x1C16CF4
	0x01E7CD08 MOVZ W8, 0x1
	0x01E7CD0C STRB W8, [X20 + 0x1B1]
	0x01E7CD10 STP X31, X31, [X31 + 0x8]
	0x01E7CD14 STR X31, [X31 + 0x18]
	0x01E7CD18 LDR X0, [X19 + 0x20]
	0x01E7CD1C CBZ X0, 0x1E7CD70
	0x01E7CD20 ADRP X8, 0x2281000
	0x01E7CD24 LDR X8, [X8 + 0xB00]
	0x01E7CD28 ADRP X20, 0x2281000
	0x01E7CD2C ADRP X19, 0x2281000
	0x01E7CD30 LDR X1, [X8]
	0x01E7CD34 LDR X20, [X20 + 0xAF0]
	0x01E7CD38 LDR X19, [X19 + 0xAE8]
	0x01E7CD3C ADD X8, X31, 0x8
	0x01E7CD40 BL 0x301CB58
	0x01E7CD44 LDR X1, [X20]
	0x01E7CD48 ADD X0, X31, 0x8
	0x01E7CD4C BL 0x2BC4350
	0x01E7CD50 TBNZ X0, 0x0, 0x1E7CD44
	0x01E7CD54 LDR X1, [X19]
	0x01E7CD58 ADD X0, X31, 0x8
	0x01E7CD5C BL 0x2BC434C
	0x01E7CD60 LDP X20, X19, [X31 + 0x30]
	0x01E7CD64 LDR X30, [X31 + 0x20]
	0x01E7CD68 ADD X31, X31, 0x40
	0x01E7CD6C RET
	0x01E7CD70 BL 0x1C16F20
	0x01E7CD74 CMP W1, 0x1
	0x01E7CD78 MOV X20, X0
	0x01E7CD7C B.NE 0x1E7CDB0
	0x01E7CD80 MOV X0, X20
	0x01E7CD84 BL 0x3EB1AD0
	0x01E7CD88 LDR X19, [X0]
	0x01E7CD8C BL 0x3EB1AE0
	0x01E7CD90 ADRP X8, 0x2281000
	0x01E7CD94 LDR X8, [X8 + 0xAE8]
	0x01E7CD98 ADD X0, X31, 0x8
	0x01E7CD9C LDR X1, [X8]
	0x01E7CDA0 BL 0x2BC434C
	0x01E7CDA4 CBZ X19, 0x1E7CD60
	0x01E7CDA8 MOV X0, X19
	0x01E7CDAC BL 0x1C16F18
	0x01E7CDB0 MOV X19, X31
	0x01E7CDB4 B 0x1E7CDBC
	0x01E7CDB8 MOV X20, X0
	0x01E7CDBC ADRP X8, 0x2281000
	0x01E7CDC0 LDR X8, [X8 + 0xAE8]
	0x01E7CDC4 LDR X1, [X8]
	0x01E7CDC8 ADD X0, X31, 0x8
	0x01E7CDCC BL 0x2BC434C
	0x01E7CDD0 CBNZ X19, 0x1E7CDDC
	0x01E7CDD4 MOV X0, X20
	0x01E7CDD8 BL 0x1D2C690
	0x01E7CDDC MOV X0, X19
	0x01E7CDE0 BL 0x1C16F18
	0x01E7CDE4 BL 0x1990590
	0x01E7CDE8 STR X30, [X31 - 0x30]!
	0x01E7CDEC STP X22, X21, [X31 + 0x10]
	0x01E7CDF0 STP X20, X19, [X31 + 0x20]
	0x01E7CDF4 ADRP X22, 0x255D000
	0x01E7CDF8 LDRB W8, [X22 + 0x1B2]
	0x01E7CDFC MOV X19, X2
	0x01E7CE00 MOV X20, X1
	0x01E7CE04 MOV X21, X0
	0x01E7CE08 TBNZ X8, 0x0, 0x1E7CE20
	0x01E7CE0C ADRP X0, 0x2281000
	0x01E7CE10 LDR X0, [X0 + 0xA50]
	0x01E7CE14 BL 0x1C16CF4
	0x01E7CE18 MOVZ W8, 0x1
	0x01E7CE1C STRB W8, [X22 + 0x1B2]
	0x01E7CE20 STR X31, [X31 + 0x8]
	0x01E7CE24 LDR X0, [X21 + 0x10]
	0x01E7CE28 CBZ X0, 0x1E7CE7C
	0x01E7CE2C ADRP X8, 0x2281000
	0x01E7CE30 LDR X8, [X8 + 0xA50]
	0x01E7CE34 ADD X2, X31, 0x8
	0x01E7CE38 MOV X1, X20
	0x01E7CE3C LDR X3, [X8]
	0x01E7CE40 BL 0x2AA6B2C
	0x01E7CE44 TBZ X0, 0x0, 0x1E7CE60
	0x01E7CE48 LDR X8, [X31 + 0x8]
	0x01E7CE4C CBZ X8, 0x1E7CE7C
	0x01E7CE50 LDR X8, [X8 + 0x48]
	0x01E7CE54 CBZ X8, 0x1E7CE7C
	0x01E7CE58 LDR X8, [X8 + 0x10]
	0x01E7CE5C B 0x1E7CE64
	0x01E7CE60 MOV X8, X31
	0x01E7CE64 STR X8, [X19]
	0x01E7CE68 LDP X20, X19, [X31 + 0x20]
	0x01E7CE6C LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X23, 0x255E000
	012 Move W8, [X23+427]
	013 Move W19, W4
	014 Move W22, W3
	015 Move X20, X2
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x2282000
	022 Move X0, [X0+2624]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+427], W8
	026 Move TEMP, X19
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {35}
	030 Compare X20, 0
	031 JumpIfEqual {138}
	032 Move W8, [X20+96]
	033 Or W8, W8, 0x10000
	034 Move [X20+96], W8
	035 Compare X20, 0
	036 JumpIfEqual {138}
	037 Move X8, [X20+120]
	038 Compare X8, 0
	039 JumpIfEqual {138}
	040 Move X27, 0x2282000
	041 Move X23, 0x2278000
	042 Move X24, 0x2280000
	043 Move X27, [X27+2624]
	044 Move X23, [X23+2000]
	045 Move X24, [X24+2224]
	046 Move X26, X31
	047 And W22, W22, 1
	048 Move W9, [X8+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add X8, X8, X26
	052 Move X1, [X8+32]
	053 Move X0, X21
	054 Move W2, W22
	055 Call SimulationBehaviourUpdater.AddBehaviour, X0, X1, X2
	056 Move TEMP, X19
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {98}
	060 Move X8, [X20+120]
	061 Compare X8, 0
	062 JumpIfEqual {138}
	063 Move W9, [X8+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Add X8, X8, X26
	066 Move X0, [X8+32]
	067 Compare X0, 0
	068 JumpIfEqual {138}
	069 Move W8, [X0+48]
	070 Or W8, W8, 2
	071 Move [X0+48], W8
	072 Move X1, [X27]
	073 Call 0x1C17E00
	074 Compare X0, 0
	075 JumpIfEqual {98}
	076 Move X8, [X0]
	077 Move X1, [X27]
	078 Move X25, X0
	079 NotImplemented "Instruction LDRH not yet implemented."
	080 Compare X9, 0
	081 JumpIfEqual {88}
	082 Move X10, [X8+176]
	083 Add X10, X10, 8
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Subtract X9, X9, 1
	087 Add X10, X10, 16
	088 Move X0, X25
	089 Move W2, W31
	090 Call 0x1C5D788
	091 NotImplemented "Instruction LDRSW not yet implemented."
	092 Add X8, X8, X9
	093 Add X0, X8, 312
	094 Move X8, [X0]
	095 Move X1, [X0+8]
	096 Move X0, X25
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move X8, [X20+120]
	099 Add X26, X26, 1
	100 Compare X8, 0
	101 JumpIfNotEqual {48}
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X25, X0
	104 Move X0, X25
	105 Call 0x3EB2AD0
	106 Move X25, X0
	107 Move X0, X23
	108 Call 0x1C17D08
	109 Move X8, [X25]
	110 Move X1, [X8]
	111 Call 0x1C18270
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {140}
	116 Move X25, [X25]
	117 Call 0x3EB2AE0
	118 Move X0, X24
	119 Call 0x1C17D08
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {124}
	123 Call 0x1C17DFC
	124 Move X0, X25
	125 Move X1, X31
	126 Call Log.Exception, X0
	127 Move X20, [X31+64]
	128 Move X19, [X31+72]
	129 Move X22, [X31+48]
	130 Move X21, [X31+56]
	131 Move X24, [X31+32]
	132 Move X23, [X31+40]
	133 Move X26, [X31+16]
	134 Move X25, [X31+24]
	135 Move X30, [X31+80]
	136 Move X27, [X31+88]
	137 Return 
	138 Call 0x1C17F20
	139 Call 0x1C17F28
	140 Move W0, 8
	141 Call 0x3EB2AF0
	142 Move X8, [X25]
	143 Move [X0], X8
	144 Move X1, 0x2039000
	145 Add X1, X1, 3672
	146 Move X2, X31
	147 Call 0x3EB2B00
	148 Move X25, X0
	149 Call 0x3EB2AE0
	150 Move X0, X25
	151 Call 0x1D2D690
	152 Call 0x1991590

Method: System.Void AddBehaviour(Fusion.SimulationBehaviour behaviour, System.Boolean skipFirstCall)

Disassembly:
	0x01E7CE70 AND W0, W0, 0x1
	0x01E7CE74 LDR X30, [X31], #0x30
	0x01E7CE78 RET
	0x01E7CE7C BL 0x1C16F20
	0x01E7CE80 STR X30, [X31 - 0x40]!
	0x01E7CE84 STP X24, X23, [X31 + 0x10]
	0x01E7CE88 STP X22, X21, [X31 + 0x20]
	0x01E7CE8C STP X20, X19, [X31 + 0x30]
	0x01E7CE90 ADRP X21, 0x255D000
	0x01E7CE94 LDRB W8, [X21 + 0x1B5]
	0x01E7CE98 MOV X19, X1
	0x01E7CE9C MOV X20, X0
	0x01E7CEA0 TBNZ X8, 0x0, 0x1E7CEE8
	0x01E7CEA4 ADRP X0, 0x2281000
	0x01E7CEA8 LDR X0, [X0 + 0xB08]
	0x01E7CEAC BL 0x1C16CF4
	0x01E7CEB0 ADRP X0, 0x2281000
	0x01E7CEB4 LDR X0, [X0 + 0xB10]
	0x01E7CEB8 BL 0x1C16CF4
	0x01E7CEBC ADRP X0, 0x2281000
	0x01E7CEC0 LDR X0, [X0 + 0xB18]
	0x01E7CEC4 BL 0x1C16CF4
	0x01E7CEC8 ADRP X0, 0x2281000
	0x01E7CECC LDR X0, [X0 + 0xB20]
	0x01E7CED0 BL 0x1C16CF4
	0x01E7CED4 ADRP X0, 0x2277000
	0x01E7CED8 LDR X0, [X0 + 0x848]
	0x01E7CEDC BL 0x1C16CF4
	0x01E7CEE0 MOVZ W8, 0x1
	0x01E7CEE4 STRB W8, [X21 + 0x1B5]
	0x01E7CEE8 CBZ X19, 0x1E7CFF0
	0x01E7CEEC ADRP X8, 0x2281000
	0x01E7CEF0 LDR X8, [X8 + 0xB08]
	0x01E7CEF4 MOV X0, X19
	0x01E7CEF8 MOV X2, X31
	0x01E7CEFC LDR X1, [X8]
	0x01E7CF00 BL 0x32333E0
	0x01E7CF04 LDR X8, [X20 + 0x10]
	0x01E7CF08 CBZ X8, 0x1E7CFF0
	0x01E7CF0C LDR X9, [X8]
	0x01E7CF10 MOV X21, X0
	0x01E7CF14 MOV X0, X8
	0x01E7CF18 LDP X10, X1, [X9 + 0x1A8]
	0x01E7CF1C BLR X10
	0x01E7CF20 CBZ X21, 0x1E7CFF0
	0x01E7CF24 MOV X1, X0
	0x01E7CF28 MOV X0, X21
	0x01E7CF2C MOV X2, X31
	0x01E7CF30 BL 0x32333E0
	0x01E7CF34 CBZ X0, 0x1E7CFF0
	0x01E7CF38 ADRP X8, 0x2281000
	0x01E7CF3C LDR X8, [X8 + 0xB10]
	0x01E7CF40 ADRP X21, 0x2277000
	0x01E7CF44 MOV X2, X31
	0x01E7CF48 LDR X1, [X8]
	0x01E7CF4C LDR X21, [X21 + 0x848]
	0x01E7CF50 BL 0x32333E0
	0x01E7CF54 LDR X8, [X20 + 0x28]
	0x01E7CF58 CBZ X8, 0x1E7CFD0
	0x01E7CF5C ADRP X22, 0x2281000
	0x01E7CF60 ADRP X23, 0x2281000
	0x01E7CF64 LDR X22, [X22 + 0xB20]
	0x01E7CF68 LDR X23, [X23 + 0xB18]
	0x01E7CF6C MOV X24, X8
	0x01E7CF70 CMP X24, X8
	0x01E7CF74 B.EQ 0x1E7CF88
	0x01E7CF78 LDR X1, [X23]
	0x01E7CF7C MOV X0, X19
	0x01E7CF80 MOV X2, X31
	0x01E7CF84 BL 0x32333E0
	0x01E7CF88 LDRB W8, [X24 + 0x30]
	0x01E7CF8C ANDS W31, W8, 0x1C
	0x01E7CF90 B.EQ 0x1E7CFA4
	0x01E7CF94 LDR X1, [X22]
	0x01E7CF98 MOV X0, X19
	0x01E7CF9C MOV X2, X31
	0x01E7CFA0 BL 0x32333E0
	0x01E7CFA4 ADD X0, X31, 0x8
	0x01E7CFA8 STR X24, [X31 + 0x8]
	0x01E7CFAC BL 0x1E86E8C
	0x01E7CFB0 MOV X1, X0
	0x01E7CFB4 MOV X0, X19
	0x01E7CFB8 MOV X2, X31
	0x01E7CFBC BL 0x32333E0
	0x01E7CFC0 LDR X24, [X24 + 0x28]
	0x01E7CFC4 CBZ X24, 0x1E7CFD0
	0x01E7CFC8 LDR X8, [X20 + 0x28]
	0x01E7CFCC B 0x1E7CF70
	0x01E7CFD0 LDR X1, [X21]
	0x01E7CFD4 MOV X0, X19
	0x01E7CFD8 LDP X20, X19, [X31 + 0x30]
	0x01E7CFDC LDP X22, X21, [X31 + 0x20]
	0x01E7CFE0 LDP X24, X23, [X31 + 0x10]
	0x01E7CFE4 MOV X2, X31
	0x01E7CFE8 LDR X30, [X31], #0x40
	0x01E7CFEC B 0x32333E0
	0x01E7CFF0 BL 0x1C16F20
	0x01E7CFF4 RET
	0x01E7CFF8 STR X30, [X31 - 0x10]!
	0x01E7CFFC STR X0, [X31 + 0x8]
	0x01E7D000 ADD X0, X31, 0x8
	0x01E7D004 BL 0x1E86E8C
	0x01E7D008 LDR X30, [X31], #0x10
	0x01E7D00C RET
	0x01E7D010 STR X30, [X31 - 0x20]!
	0x01E7D014 STP X20, X19, [X31 + 0x10]
	0x01E7D018 ADRP X19, 0x255C000
	0x01E7D01C ADRP X20, 0x2280000
	0x01E7D020 LDRB W8, [X19 + 0x1B7]
	0x01E7D024 LDR X20, [X20 + 0xA08]
	0x01E7D028 TBNZ X8, 0x0, 0x1E7D040
	0x01E7D02C ADRP X0, 0x2280000
	0x01E7D030 LDR X0, [X0 + 0xA08]
	0x01E7D034 BL 0x1C16CF4
	0x01E7D038 MOVZ W8, 0x1
	0x01E7D03C STRB W8, [X19 + 0x1B7]
	0x01E7D040 LDR X0, [X20]
	0x01E7D044 BL 0x1C16F10
	0x01E7D048 MOV X1, X31
	0x01E7D04C MOV X19, X0
	0x01E7D050 BL 0x33BDD8C
	0x01E7D054 LDR X8, [X20]
	0x01E7D058 LDR X8, [X8 + 0xB8]
	0x01E7D05C STR X19, [X8]
	0x01E7D060 LDP X20, X19, [X31 + 0x10]
	0x01E7D064 LDR X30, [X31], #0x20
	0x01E7D068 RET
	0x01E7D06C MOV X1, X31
	0x01E7D070 B 0x33BDD8C
	0x01E7D074 CBZ X1, 0x1E7D084
	0x01E7D078 MOV X0, X1
	0x01E7D07C MOV X1, X31
	0x01E7D080 B 0x33962E8
	0x01E7D084 STR X30, [X31 - 0x10]!
	0x01E7D088 BL 0x1C16F20
	0x01E7D08C STR X30, [X31 - 0x10]!
	0x01E7D090 CBZ X1, 0x1E7D0B0
	0x01E7D094 CBZ X2, 0x1E7D0B0
	0x01E7D098 LDR W8, [X2 + 0x18]
	0x01E7D09C ADD X0, X1, 0x18
	0x01E7D0A0 MOV X2, X31
	0x01E7D0A4 MOV W1, W8
	0x01E7D0A8 LDR X30, [X31], #0x10
	0x01E7D0AC B 0x337B634
	0x01E7D0B0 BL 0x1C16F20
	0x01E7D0B4 STR X30, [X31 - 0x20]!
	0x01E7D0B8 STP X20, X19, [X31 + 0x10]
	0x01E7D0BC ADRP X20, 0x255C000
	0x01E7D0C0 LDRB W8, [X20 + 0x1B8]
	0x01E7D0C4 MOV X19, X1
	0x01E7D0C8 TBNZ X8, 0x0, 0x1E7D0E0
	0x01E7D0CC ADRP X0, 0x2280000
	0x01E7D0D0 LDR X0, [X0 + 0xB28]
	0x01E7D0D4 BL 0x1C16CF4
	0x01E7D0D8 MOVZ W8, 0x1
	0x01E7D0DC STRB W8, [X20 + 0x1B8]
	0x01E7D0E0 CBZ X19, 0x1E7D0FC
	0x01E7D0E4 LDR X8, [X19]
	0x01E7D0E8 MOV X0, X19
	0x01E7D0EC LDP X20, X19, [X31 + 0x10]
	0x01E7D0F0 LDP X2, X1, [X8 + 0x168]
	0x01E7D0F4 LDR X30, [X31], #0x20
	0x01E7D0F8 BR X2
	0x01E7D0FC BL 0x1C16F20
	0x01E7D100 LDRB W0, [X0 + 0x93]
	0x01E7D104 RET
	0x01E7D108 AND W8, W1, 0x1
	0x01E7D10C STRB W8, [X0 + 0x92]
	0x01E7D110 STRB W8, [X0 + 0x93]
	0x01E7D114 RET
	0x01E7D118 STP X30, X21, [X31 - 0x20]!
	0x01E7D11C STP X20, X19, [X31 + 0x10]
	0x01E7D120 ADRP X21, 0x255C000
	0x01E7D124 ADRP X20, 0x2280000
	0x01E7D128 LDRB W8, [X21 + 0x1B9]
	0x01E7D12C LDR X20, [X20 + 0xB30]
	0x01E7D130 MOV X19, X0
	0x01E7D134 TBNZ X8, 0x0, 0x1E7D14C
	0x01E7D138 ADRP X0, 0x2280000
	0x01E7D13C LDR X0, [X0 + 0xB30]
	0x01E7D140 BL 0x1C16CF4
	0x01E7D144 MOVZ W8, 0x1
	0x01E7D148 STRB W8, [X21 + 0x1B9]
	0x01E7D14C LDRB W8, [X19 + 0x93]
	0x01E7D150 ADD X1, X19, 0x88
	0x01E7D154 MOV X0, X19
	0x01E7D158 STRB W8, [X19 + 0x92]
	0x01E7D15C LDR X2, [X20]
	0x01E7D160 LDP X20, X19, [X31 + 0x10]
	0x01E7D164 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0x255E000
	012 Move W8, [X22+428]
	013 Move W21, W2
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x2282000
	021 Move X0, [X0+2632]
	022 Call 0x1C17CF4
	023 Move X0, 0x227B000
	024 Move X0, [X0+920]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+428], W8
	028 Compare X19, 0
	029 JumpIfEqual {242}
	030 Move W8, [X19+48]
	031 And W31, W21, 1
	032 Move W9, 32
	033 NotImplemented "Instruction CSEL not yet implemented."
	034 And W8, W8, 0xFFFFFFDF
	035 Or W8, W8, W9
	036 Move X0, X19
	037 Move X1, X31
	038 Move [X19+48], W8
	039 Call "il2cpp_vm_object_is_inst", X0
	040 Move X1, X0
	041 Move X0, X20
	042 Call SimulationBehaviourUpdater.FindList, X0, X1
	043 Compare X0, 0
	044 JumpIfEqual {242}
	045 Add X24, X0, 40
	046 Move X20, X0
	047 Move X9, X24
	048 Move X8, [X9]
	049 Compare X8, 0
	050 JumpIfEqual {53}
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Add X9, X8, 40
	053 Compare X8, 0
	054 JumpIfNotEqual {75}
	055 Move X8, [X19+64]
	056 Move X21, [X24]
	057 Compare X8, 0
	058 JumpIfEqual {86}
	059 Compare X21, 0
	060 JumpIfEqual {67}
	061 Move X8, [X21+64]
	062 Compare X8, 0
	063 JumpIfNotEqual {151}
	064 Move X21, [X21+40]
	065 Compare X21, 0
	066 JumpIfNotEqual {61}
	067 Move [X19+40], X31
	068 Move X8, [X20+48]
	069 Add X9, X8, 40
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move [X19+32], X8
	072 NotImplemented "Instruction CSEL not yet implemented."
	073 Move [X8], X19
	074 Move [X20+48], X19
	075 Move X20, [X31+64]
	076 Move X19, [X31+72]
	077 Move X22, [X31+48]
	078 Move X21, [X31+56]
	079 Move X24, [X31+32]
	080 Move X23, [X31+40]
	081 Move X26, [X31+16]
	082 Move X25, [X31+24]
	083 Move X30, [X31+80]
	084 Move X27, [X31+88]
	085 Return 
	086 Move X0, X19
	087 Move X1, X31
	088 Call "il2cpp_vm_object_is_inst", X0
	089 Compare X0, 0
	090 JumpIfEqual {242}
	091 Move X8, [X0]
	092 Move X9, [X8+424]
	093 Move X1, [X8+432]
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Compare X21, 0
	096 JumpIfEqual {144}
	097 Move X22, X0
	098 Move X8, [X21+40]
	099 Compare X8, 0
	100 JumpIfEqual {144}
	101 Move X9, [X21+64]
	102 Compare X9, 0
	103 JumpIfNotEqual {75}
	104 Move X8, [X8+64]
	105 Compare X8, 0
	106 JumpIfNotEqual {226}
	107 Move X0, X21
	108 Move X1, X31
	109 Call "il2cpp_vm_object_is_inst", X0
	110 Compare X0, 0
	111 JumpIfEqual {242}
	112 Move X8, [X0]
	113 Move X9, [X8+424]
	114 Move X1, [X8+432]
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move X1, X22
	117 Move X2, X31
	118 Call String.CompareOrdinal, X0, X1
	119 Move X8, [X21+40]
	120 Compare X8, 0
	121 JumpIfEqual {242}
	122 Move W23, W0
	123 Move X0, X8
	124 Move X1, X31
	125 Call "il2cpp_vm_object_is_inst", X0
	126 Compare X0, 0
	127 JumpIfEqual {242}
	128 Move X8, [X0]
	129 Move X9, [X8+424]
	130 Move X1, [X8+432]
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move X1, X0
	133 Move X0, X22
	134 Move X2, X31
	135 Call String.CompareOrdinal, X0, X1
	136 Move TEMP, X23
	137 And TEMP, TEMP, -2147483648
	138 Compare TEMP, -2147483648
	139 JumpIfNotEqual {141}
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move X21, [X21+40]
	142 Compare X21, 0
	143 JumpIfNotEqual {98}
	144 Move X8, [X24]
	145 Move [X19+32], X31
	146 Move [X19+40], X8
	147 Compare X8, 0
	148 JumpIfEqual {241}
	149 Move [X8+32], X19
	150 Move [X24], X19
	151 Move X22, 0x227A000
	152 Move X23, 0x2281000
	153 Move X22, [X22+920]
	154 Move X23, [X23+2632]
	155 Move X25, X21
	156 Add X25, X25, 40
	157 Move X8, [X25]
	158 Compare X8, 0
	159 JumpIfEqual {67}
	160 Move X8, [X21+64]
	161 Compare X8, 0
	162 JumpIfEqual {242}
	163 Move X8, [X8+32]
	164 Compare X8, 0
	165 JumpIfEqual {167}
	166 Move W26, [X8]
	167 Move W26, W31
	168 Move X8, [X19+64]
	169 Compare X8, 0
	170 JumpIfEqual {242}
	171 Move X8, [X8+32]
	172 Compare X8, 0
	173 JumpIfEqual {175}
	174 Move W27, [X8]
	175 Move W27, W31
	176 Move X0, [X22]
	177 Move W8, [X0+224]
	178 Compare W8, 0
	179 JumpIfNotEqual {181}
	180 Call 0x1C17DFC
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X0, [X20+64]
	183 Compare X0, 0
	184 JumpIfEqual {196}
	185 Move X1, [X25]
	186 Move X2, [X23]
	187 Call List`1<Object>.Contains, X0, X1
	188 Move TEMP, X0
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfNotEqual {196}
	192 Move X8, [X25]
	193 Compare X8, 0
	194 JumpIfEqual {242}
	195 Add X25, X8, 40
	196 Move X8, [X21+64]
	197 Compare X8, 0
	198 JumpIfEqual {242}
	199 Move X8, [X8+32]
	200 Compare X8, 0
	201 JumpIfEqual {203}
	202 Move W9, [X8]
	203 Move W9, W31
	204 Move X8, [X19+64]
	205 Compare X8, 0
	206 JumpIfEqual {242}
	207 Move X8, [X8+32]
	208 Compare X8, 0
	209 JumpIfEqual {223}
	210 Move W8, [X8]
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move X9, [X25]
	213 Compare X9, 0
	214 JumpIfEqual {242}
	215 Move X9, [X9+64]
	216 Compare X9, 0
	217 JumpIfEqual {242}
	218 Move X9, [X9+32]
	219 Compare X9, 0
	220 JumpIfEqual {223}
	221 Move W9, [X9]
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Move X21, [X25]
	224 Compare X21, 0
	225 JumpIfNotEqual {155}
	226 Move X0, X20
	227 Move X1, X19
	228 Move X2, X21
	229 Move X20, [X31+64]
	230 Move X19, [X31+72]
	231 Move X22, [X31+48]
	232 Move X21, [X31+56]
	233 Move X24, [X31+32]
	234 Move X23, [X31+40]
	235 Move X26, [X31+16]
	236 Move X25, [X31+24]
	237 Move X30, [X31+80]
	238 Move X27, [X31+88]
	239 Call BehaviourList.AddAfter, X0, X1, X2
	240 Return 
	241 Move [X20+40], X19
	242 Call 0x1C17F20

Method: System.Void CheckSimulationBehaviourForNetworkedAttribute(System.Type type)

Disassembly:
	0x01E7D54C BL 0x1C16CF4
	0x01E7D550 MOVZ W8, 0x1
	0x01E7D554 STRB W8, [X23 + 0xA22]
	0x01E7D558 LDR X0, [X22]
	0x01E7D55C LDR W8, [X0 + 0xE0]
	0x01E7D560 CBNZ W8, 0x1E7D568
	0x01E7D564 BL 0x1C16DFC
	0x01E7D568 MOV X0, X21
	0x01E7D56C MOV X1, X31
	0x01E7D570 BL 0x3C38948
	0x01E7D574 MOV W8, W0
	0x01E7D578 MOV X0, X31
	0x01E7D57C TBZ X8, 0x0, 0x1E7D590
	0x01E7D580 LDR X0, [X20 + 0x38]
	0x01E7D584 MOV X1, X20
	0x01E7D588 MOV X2, X31
	0x01E7D58C BL 0x1E74CA0
	0x01E7D590 STR X0, [X19]
	0x01E7D594 B 0x1E7D5B0
	0x01E7D598 MOV X0, X19
	0x01E7D59C BL 0x1E7D23C
	0x01E7D5A0 STR X31, [X0]
	0x01E7D5A4 B 0x1E7D5B0
	0x01E7D5A8 MOVZ X8, 0x1
	0x01E7D5AC STR X8, [X19]
	0x01E7D5B0 LDP X20, X19, [X31 + 0x30]
	0x01E7D5B4 LDP X22, X21, [X31 + 0x20]
	0x01E7D5B8 LDP X30, X23, [X31 + 0x10]
	0x01E7D5BC ADD X31, X31, 0x40
	0x01E7D5C0 RET
	0x01E7D5C4 BL 0x1C16F20
	0x01E7D5C8 STR X30, [X31 - 0x30]!
	0x01E7D5CC STP X22, X21, [X31 + 0x10]
	0x01E7D5D0 STP X20, X19, [X31 + 0x20]
	0x01E7D5D4 ADRP X21, 0x255C000
	0x01E7D5D8 LDRB W8, [X21 + 0x1C2]
	0x01E7D5DC MOV X20, X1
	0x01E7D5E0 MOV X19, X0
	0x01E7D5E4 TBNZ X8, 0x0, 0x1E7D614
	0x01E7D5E8 ADRP X0, 0x2280000
	0x01E7D5EC LDR X0, [X0 + 0xB48]
	0x01E7D5F0 BL 0x1C16CF4
	0x01E7D5F4 ADRP X0, 0x2276000
	0x01E7D5F8 LDR X0, [X0 + 0x598]
	0x01E7D5FC BL 0x1C16CF4
	0x01E7D600 ADRP X0, 0x2280000
	0x01E7D604 LDR X0, [X0 + 0xB50]
	0x01E7D608 BL 0x1C16CF4
	0x01E7D60C MOVZ W8, 0x1
	0x01E7D610 STRB W8, [X21 + 0x1C2]
	0x01E7D614 ADRP X22, 0x2276000
	0x01E7D618 ADRP X21, 0x2280000
	0x01E7D61C LDR X22, [X22 + 0x598]
	0x01E7D620 LDR X21, [X21 + 0xB48]
	0x01E7D624 STR X31, [X31 + 0x8]
	0x01E7D628 LDR X0, [X22]
	0x01E7D62C LDR W8, [X0 + 0xE0]
	0x01E7D630 CBNZ W8, 0x1E7D638
	0x01E7D634 BL 0x1C16DFC
	0x01E7D638 MOV X0, X20
	0x01E7D63C MOV X1, X31
	0x01E7D640 BL 0x3C38948
	0x01E7D644 TBZ X0, 0x0, 0x1E7D6BC
	0x01E7D648 CBZ X20, 0x1E7D6FC
	0x01E7D64C LDR X2, [X21]
	0x01E7D650 ADD X1, X31, 0x8
	0x01E7D654 MOV X0, X20
	0x01E7D658 BL 0x21A4990
	0x01E7D65C TBNZ X0, 0x0, 0x1E7D674
	0x01E7D660 MOV X0, X20
	0x01E7D664 MOV X1, X31
	0x01E7D668 BL 0x3C3F49C
	0x01E7D66C MOV X20, X0
	0x01E7D670 B 0x1E7D628
	0x01E7D674 CBZ X19, 0x1E7D6FC
	0x01E7D678 ADRP X10, 0x2280000
	0x01E7D67C LDR X8, [X31 + 0x8]
	0x01E7D680 LDR X9, [X19 + 0x40]
	0x01E7D684 LDR X10, [X10 + 0xB50]
	0x01E7D688 MOV X2, X31
	0x01E7D68C CMP X8, X9
	0x01E7D690 LDR X1, [X10]
	0x01E7D694 CSET W0, NE
	0x01E7D698 BL 0x1E3BA60
	0x01E7D69C MOV X0, X19
	0x01E7D6A0 BL 0x1E7D23C
	0x01E7D6A4 LDR X8, [X31 + 0x8]
	0x01E7D6A8 MOV X21, X0
	0x01E7D6AC MOV X1, X31
	0x01E7D6B0 MOV X0, X8
	0x01E7D6B4 BL 0x1E944EC
	0x01E7D6B8 STR W0, [X21 + 0x34]
	0x01E7D6BC LDR X0, [X22]
	0x01E7D6C0 LDR W8, [X0 + 0xE0]
	0x01E7D6C4 CBNZ W8, 0x1E7D6CC
	0x01E7D6C8 BL 0x1C16DFC
	0x01E7D6CC MOV X0, X20
	0x01E7D6D0 MOV X1, X31
	0x01E7D6D4 BL 0x3C38948
	0x01E7D6D8 TBNZ X0, 0x0, 0x1E7D6EC
	0x01E7D6DC CBZ X19, 0x1E7D6FC
	0x01E7D6E0 MOV X0, X19
	0x01E7D6E4 BL 0x1E7D23C
	0x01E7D6E8 STR W31, [X0 + 0x34]
	0x01E7D6EC LDP X20, X19, [X31 + 0x20]
	0x01E7D6F0 LDP X22, X21, [X31 + 0x10]
	0x01E7D6F4 LDR X30, [X31], #0x30
	0x01E7D6F8 RET
	0x01E7D6FC BL 0x1C16F20
	0x01E7D700 MOVZ X0, 0x1
	0x01E7D704 RET
	0x01E7D708 STR X30, [X31 - 0x20]!
	0x01E7D70C STP X20, X19, [X31 + 0x10]
	0x01E7D710 MOV X19, X0
	0x01E7D714 LDR X0, [X0 + 0x38]
	0x01E7D718 CBZ X0, 0x1E7D8A4
	0x01E7D71C MOV W20, W1
	0x01E7D720 MOV X1, X31
	0x01E7D724 BL 0x1E9E520
	0x01E7D728 CMP W0, 0x1
	0x01E7D72C B.EQ 0x1E7D898
	0x01E7D730 LDR X0, [X19 + 0x38]
	0x01E7D734 CBZ X0, 0x1E7D8A4
	0x01E7D738 MOV X1, X31
	0x01E7D73C BL 0x1E9E4EC
	0x01E7D740 CMP W0, 0x2
	0x01E7D744 B.NE 0x1E7D76C
	0x01E7D748 LDRB W8, [X19 + 0x94]
	0x01E7D74C CBZ W8, 0x1E7D76C
	0x01E7D750 LDR X0, [X19 + 0x40]
	0x01E7D754 CBZ X0, 0x1E7D76C
	0x01E7D758 LDRB W8, [X0 + 0x60]
	0x01E7D75C TBNZ X8, 0x1, 0x1E7D76C
	0x01E7D760 MOV X1, X31
	0x01E7D764 BL 0x1E93668
	0x01E7D768 TBNZ X0, 0x0, 0x1E7D898
	0x01E7D76C TBZ X20, 0x0, 0x1E7D780
	0x01E7D770 MOV X0, X19
	0x01E7D774 LDP X20, X19, [X31 + 0x10]
	0x01E7D778 LDR X30, [X31], #0x20
	0x01E7D77C B 0x1E7D16C
	0x01E7D780 LDRB W8, [X19 + 0x95]
	0x01E7D784 CBZ W8, 0x1E7D890

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x255D000
	011 Move W8, [X21+429]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {38}
	018 Move X0, 0x2281000
	019 Move X0, [X0+2688]
	020 Call 0x1C17CF4
	021 Move X0, 0x2281000
	022 Move X0, [X0+2696]
	023 Call 0x1C17CF4
	024 Move X0, 0x2281000
	025 Move X0, [X0+1368]
	026 Call 0x1C17CF4
	027 Move X0, 0x2281000
	028 Move X0, [X0+2704]
	029 Call 0x1C17CF4
	030 Move X0, 0x2281000
	031 Move X0, [X0+2712]
	032 Call 0x1C17CF4
	033 Move X0, 0x2277000
	034 Move X0, [X0+1728]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+429], W8
	038 Move X0, [X20+48]
	039 Compare X0, 0
	040 JumpIfEqual {163}
	041 Move X8, 0x2281000
	042 Move X8, [X8+2696]
	043 Move X1, X19
	044 Move X2, [X8]
	045 Call HashSet`1<Object>.Contains, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {152}
	050 Move X0, [X20+48]
	051 Compare X0, 0
	052 JumpIfEqual {163}
	053 Move X8, 0x2281000
	054 Move X8, [X8+2688]
	055 Move X1, X19
	056 Move X2, [X8]
	057 Call HashSet`1<Object>.Add, X0, X1
	058 Move X23, 0x2277000
	059 Move X23, [X23+1728]
	060 Move X8, 0x2281000
	061 Move X0, [X23]
	062 Move X8, [X8+1368]
	063 Move W9, [X0+224]
	064 Move X20, [X8]
	065 Compare W9, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, X20
	069 Move X1, X31
	070 Call Type.GetTypeFromHandle, X0
	071 Compare X0, 0
	072 JumpIfEqual {163}
	073 Move X8, [X0]
	074 Move X1, X19
	075 Move X9, [X8+680]
	076 Move X2, [X8+688]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {152}
	082 Compare X19, 0
	083 JumpIfEqual {163}
	084 Move X8, [X19]
	085 Move W1, 116
	086 Move X0, X19
	087 Move X9, [X8+2024]
	088 Move X2, [X8+2032]
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Compare X0, 0
	091 JumpIfEqual {163}
	092 Move X8, [X0+24]
	093 Move X20, X0
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X26, 0x2281000
	096 Move X26, [X26+2704]
	097 Move X24, X31
	098 And X8, X8, 0
	099 Add X25, X20, 32
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X0, [X23]
	102 Move X21, [X25]
	103 Move X22, [X26]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Move X0, X22
	109 Move X1, X31
	110 Call Type.GetTypeFromHandle, X0
	111 Move X1, X0
	112 Move X0, X21
	113 Move X2, X31
	114 Call CustomAttributeExtensions.GetCustomAttribute, X0, X1
	115 Move W8, [X20+24]
	116 Add X24, X24, 1
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X8, [X19]
	119 Move W1, 116
	120 Move X0, X19
	121 Move X9, [X8+1880]
	122 Move X2, [X8+1888]
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Compare X0, 0
	125 JumpIfEqual {163}
	126 Move X8, [X0+24]
	127 Move X19, X0
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X25, 0x2281000
	130 Move X25, [X25+2712]
	131 Move X22, X31
	132 And X8, X8, 0
	133 Add X24, X19, 32
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X0, [X23]
	136 Move X20, [X24]
	137 Move X21, [X25]
	138 Move W8, [X0+224]
	139 Compare W8, 0
	140 JumpIfNotEqual {142}
	141 Call 0x1C17DFC
	142 Move X0, X21
	143 Move X1, X31
	144 Call Type.GetTypeFromHandle, X0
	145 Move X1, X0
	146 Move X0, X20
	147 Move X2, X31
	148 Call CustomAttributeExtensions.GetCustomAttribute, X0, X1
	149 Move W8, [X19+24]
	150 Add X22, X22, 1
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X20, [X31+64]
	153 Move X19, [X31+72]
	154 Move X22, [X31+48]
	155 Move X21, [X31+56]
	156 Move X24, [X31+32]
	157 Move X23, [X31+40]
	158 Move X26, [X31+16]
	159 Move X25, [X31+24]
	160 Move X30, [X31+80]
	161 Return 
	162 Call 0x1C17F28
	163 Call 0x1C17F20

Method: System.Void RemoveBehaviour(Fusion.SimulationBehaviour behaviour)

Disassembly:
	0x01E7D788 LDRB W8, [X19 + 0x90]
	0x01E7D78C CBZ W8, 0x1E7D890
	0x01E7D790 LDR X0, [X19 + 0x88]
	0x01E7D794 CBZ X0, 0x1E7D8A4
	0x01E7D798 MOV X1, X31
	0x01E7D79C BL 0x3C3EB78
	0x01E7D7A0 LDP S3, S4, [X19 + 0x98]
	0x01E7D7A4 LDR V5, [X19 + 0xA0]
	0x01E7D7A8 ADRP X8, 0xFFFFFFFFFEC6C000
	0x01E7D7AC FSUB S0, S0, S3
	0x01E7D7B0 LDR V3, [X8 + 0xF20]
	0x01E7D7B4 FSUB S1, S1, S4
	0x01E7D7B8 FSUB S2, S2, S5
	0x01E7D7BC FMUL S0, S0, S0
	0x01E7D7C0 FMUL S1, S1, S1
	0x01E7D7C4 FADD S0, S0, S1
	0x01E7D7C8 FMUL S1, S2, S2
	0x01E7D7CC FADD S0, S1, S0
	0x01E7D7D0 FCMP S0, S3
	0x01E7D7D4 B.PL 0x1E7D890
	0x01E7D7D8 LDR X0, [X19 + 0x88]
	0x01E7D7DC CBZ X0, 0x1E7D8A4
	0x01E7D7E0 MOV X1, X31
	0x01E7D7E4 BL 0x3C3F830
	0x01E7D7E8 LDP S4, S5, [X19 + 0xA4]
	0x01E7D7EC LDP S6, S7, [X19 + 0xAC]
	0x01E7D7F0 ADRP X8, 0xFFFFFFFFFEC6D000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {31}
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, X1
	009 Move X1, X31
	010 Call "il2cpp_vm_object_is_inst", X0
	011 Move X1, X0
	012 Move X0, X20
	013 Call SimulationBehaviourUpdater.FindList, X0, X1
	014 Compare X0, 0
	015 JumpIfEqual {31}
	016 Move W8, [X0+56]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W8, [X19+48]
	019 Move X1, X19
	020 Or W8, W8, 4
	021 Move [X19+48], W8
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X1, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Call BehaviourList.Remove, X0, X1
	030 Return 
	031 Call 0x1C17F20

Method: Fusion.SimulationBehaviour[] GetTypeHeads(System.Type type)

Disassembly:
	0x01E7D968 STRB W8, [X23 + 0x1C0]
	0x01E7D96C ANDS W31, W22, 0xFF
	0x01E7D970 B.EQ 0x1E7D9BC
	0x01E7D974 ADRP X8, 0x2280000
	0x01E7D978 LDR X8, [X8 + 0xB60]
	0x01E7D97C ADD X0, X31, 0x0
	0x01E7D980 LDR X1, [X8]
	0x01E7D984 BL 0x243C008
	0x01E7D988 CBZ X20, 0x1E7DA3C
	0x01E7D98C MOV X0, X20
	0x01E7D990 MOV X1, X31
	0x01E7D994 BL 0x3C3F62C
	0x01E7D998 CBZ X19, 0x1E7DA3C
	0x01E7D99C MOV X0, X19
	0x01E7D9A0 BL 0x1E7D23C
	0x01E7D9A4 MOV X22, X0
	0x01E7D9A8 MOV X0, X20
	0x01E7D9AC MOV X1, X31
	0x01E7D9B0 BL 0x3C3EB78
	0x01E7D9B4 STP S0, S1, [X22 + 0x8]
	0x01E7D9B8 STR S2, [X22 + 0x10]
	0x01E7D9BC LDRB W8, [X21]
	0x01E7D9C0 CBZ W8, 0x1E7DA10
	0x01E7D9C4 ADRP X8, 0x2280000
	0x01E7D9C8 LDR X8, [X8 + 0xB58]
	0x01E7D9CC MOV X0, X21
	0x01E7D9D0 LDR X1, [X8]
	0x01E7D9D4 BL 0x2437CB8
	0x01E7D9D8 CBZ X20, 0x1E7DA3C
	0x01E7D9DC MOV X0, X20
	0x01E7D9E0 MOV X1, X31
	0x01E7D9E4 BL 0x3C3F7AC
	0x01E7D9E8 CBZ X19, 0x1E7DA3C
	0x01E7D9EC MOV X0, X19
	0x01E7D9F0 BL 0x1E7D23C
	0x01E7D9F4 MOV X21, X0
	0x01E7D9F8 MOV X0, X20
	0x01E7D9FC MOV X1, X31
	0x01E7DA00 BL 0x3C3F830
	0x01E7DA04 STP S0, S1, [X21 + 0x14]
	0x01E7DA08 STP S2, S3, [X21 + 0x1C]
	0x01E7DA0C B 0x1E7DA14
	0x01E7DA10 CBZ X19, 0x1E7DA3C
	0x01E7DA14 MOV X0, X19
	0x01E7DA18 BL 0x1E7D23C
	0x01E7DA1C LDR W8, [X0 + 0x30]
	0x01E7DA20 LDP X20, X19, [X31 + 0x30]
	0x01E7DA24 LDP X22, X21, [X31 + 0x20]
	0x01E7DA28 LDP X30, X23, [X31 + 0x10]
	0x01E7DA2C ADD W8, W8, 0x1
	0x01E7DA30 STR W8, [X0 + 0x30]
	0x01E7DA34 ADD X31, X31, 0x40
	0x01E7DA38 RET
	0x01E7DA3C BL 0x1C16F20
	0x01E7DA40 STR X30, [X31 - 0x30]!
	0x01E7DA44 STP X22, X21, [X31 + 0x10]
	0x01E7DA48 STP X20, X19, [X31 + 0x20]
	0x01E7DA4C ADRP X22, 0x255C000
	0x01E7DA50 ADRP X21, 0x2276000
	0x01E7DA54 LDRB W8, [X22 + 0x1BB]
	0x01E7DA58 LDR X21, [X21 + 0x598]
	0x01E7DA5C MOV X20, X1
	0x01E7DA60 MOV X19, X0
	0x01E7DA64 TBNZ X8, 0x0, 0x1E7DA7C
	0x01E7DA68 ADRP X0, 0x2276000
	0x01E7DA6C LDR X0, [X0 + 0x598]
	0x01E7DA70 BL 0x1C16CF4
	0x01E7DA74 MOVZ W8, 0x1
	0x01E7DA78 STRB W8, [X22 + 0x1BB]
	0x01E7DA7C MOV X0, X19
	0x01E7DA80 MOV X1, X20
	0x01E7DA84 BL 0x1E7DAC8
	0x01E7DA88 LDR X0, [X21]
	0x01E7DA8C LDR W8, [X0 + 0xE0]
	0x01E7DA90 CBNZ W8, 0x1E7DA98
	0x01E7DA94 BL 0x1C16DFC
	0x01E7DA98 MOV X0, X20
	0x01E7DA9C MOV X1, X31
	0x01E7DAA0 BL 0x3C38948
	0x01E7DAA4 TBZ X0, 0x0, 0x1E7DAB0
	0x01E7DAA8 MOV W8, W31
	0x01E7DAAC B 0x1E7DAB4
	0x01E7DAB0 LDRB W8, [X19 + 0x92]
	0x01E7DAB4 STRB W8, [X19 + 0x93]
	0x01E7DAB8 LDP X20, X19, [X31 + 0x20]
	0x01E7DABC LDP X22, X21, [X31 + 0x10]
	0x01E7DAC0 LDR X30, [X31], #0x30
	0x01E7DAC4 RET
	0x01E7DAC8 STR X30, [X31 - 0x30]!
	0x01E7DACC STP X22, X21, [X31 + 0x10]
	0x01E7DAD0 STP X20, X19, [X31 + 0x20]
	0x01E7DAD4 ADRP X21, 0x255C000
	0x01E7DAD8 ADRP X22, 0x2276000
	0x01E7DADC LDRB W8, [X21 + 0x1BF]
	0x01E7DAE0 LDR X22, [X22 + 0x598]
	0x01E7DAE4 MOV X19, X1
	0x01E7DAE8 MOV X20, X0
	0x01E7DAEC TBNZ X8, 0x0, 0x1E7DB10
	0x01E7DAF0 ADRP X0, 0x2276000
	0x01E7DAF4 LDR X0, [X0 + 0x598]
	0x01E7DAF8 BL 0x1C16CF4
	0x01E7DAFC ADRP X0, 0x2280000
	0x01E7DB00 LDR X0, [X0 + 0xB68]
	0x01E7DB04 BL 0x1C16CF4
	0x01E7DB08 MOVZ W8, 0x1
	0x01E7DB0C STRB W8, [X21 + 0x1BF]
	0x01E7DB10 LDR X0, [X22]
	0x01E7DB14 LDR W8, [X0 + 0xE0]
	0x01E7DB18 CBNZ W8, 0x1E7DB20
	0x01E7DB1C BL 0x1C16DFC
	0x01E7DB20 MOV X0, X19
	0x01E7DB24 MOV X1, X31
	0x01E7DB28 BL 0x3C38948
	0x01E7DB2C TBZ X0, 0x0, 0x1E7DB5C
	0x01E7DB30 CBZ X19, 0x1E7DB88
	0x01E7DB34 LDR W0, [X19 + 0x60]
	0x01E7DB38 MOVZ W1, 0x4000000
	0x01E7DB3C MOV X2, X31
	0x01E7DB40 BL 0x1E93D90
	0x01E7DB44 ADRP X8, 0x2280000
	0x01E7DB48 LDR X8, [X8 + 0xB68]
	0x01E7DB4C AND W0, W0, 0x1
	0x01E7DB50 MOV X2, X31
	0x01E7DB54 LDR X1, [X8]
	0x01E7DB58 BL 0x1E3BA60
	0x01E7DB5C MOV X0, X20
	0x01E7DB60 BL 0x1E7D23C
	0x01E7DB64 MOV X20, X0
	0x01E7DB68 MOV X0, X19
	0x01E7DB6C MOV X1, X31
	0x01E7DB70 BL 0x1E944EC
	0x01E7DB74 STR W0, [X20 + 0x34]
	0x01E7DB78 LDP X20, X19, [X31 + 0x20]
	0x01E7DB7C LDP X22, X21, [X31 + 0x10]
	0x01E7DB80 LDR X30, [X31], #0x30
	0x01E7DB84 RET
	0x01E7DB88 BL 0x1C16F20
	0x01E7DB8C STP X30, X21, [X31 - 0x20]!
	0x01E7DB90 STP X20, X19, [X31 + 0x10]
	0x01E7DB94 ADRP X21, 0x255C000
	0x01E7DB98 ADRP X20, 0x2276000
	0x01E7DB9C LDRB W8, [X21 + 0x1BC]
	0x01E7DBA0 LDR X20, [X20 + 0x598]
	0x01E7DBA4 MOV X19, X0
	0x01E7DBA8 TBNZ X8, 0x0, 0x1E7DBC0
	0x01E7DBAC ADRP X0, 0x2276000
	0x01E7DBB0 LDR X0, [X0 + 0x598]
	0x01E7DBB4 BL 0x1C16CF4
	0x01E7DBB8 MOVZ W8, 0x1
	0x01E7DBBC STRB W8, [X21 + 0x1BC]
	0x01E7DBC0 LDR X0, [X20]
	0x01E7DBC4 LDR X20, [X19 + 0x88]
	0x01E7DBC8 LDR W8, [X0 + 0xE0]
	0x01E7DBCC CBNZ W8, 0x1E7DBD4
	0x01E7DBD0 BL 0x1C16DFC
	0x01E7DBD4 MOV X0, X20
	0x01E7DBD8 MOV X1, X31
	0x01E7DBDC BL 0x3C38948
	0x01E7DBE0 TBNZ X0, 0x0, 0x1E7DBEC
	0x01E7DBE4 MOV X0, X19
	0x01E7DBE8 BL 0x1E7D118
	0x01E7DBEC LDR X8, [X19 + 0x38]
	0x01E7DBF0 CBZ X8, 0x1E7DC50
	0x01E7DBF4 LDR X8, [X8 + 0x98]
	0x01E7DBF8 CBZ X8, 0x1E7DC50
	0x01E7DBFC LDR X0, [X8 + 0x40]
	0x01E7DC00 CBZ X0, 0x1E7DC50
	0x01E7DC04 MOV X1, X31
	0x01E7DC08 BL 0x1ED4BCC
	0x01E7DC0C MOV W8, W0
	0x01E7DC10 LDR X0, [X19 + 0x40]
	0x01E7DC14 AND W8, W8, 0x1
	0x01E7DC18 STRB W8, [X19 + 0x91]
	0x01E7DC1C STR W31, [X19 + 0x84]
	0x01E7DC20 CBZ X0, 0x1E7DC50
	0x01E7DC24 MOV X1, X31
	0x01E7DC28 BL 0x1E93668
	0x01E7DC2C TBZ X0, 0x0, 0x1E7DC40
	0x01E7DC30 MOV X0, X19
	0x01E7DC34 LDP X20, X19, [X31 + 0x10]
	0x01E7DC38 LDP X30, X21, [X31], #0x20
	0x01E7DC3C B 0x1E7D3AC
	0x01E7DC40 MOV X0, X19
	0x01E7DC44 LDP X20, X19, [X31 + 0x10]
	0x01E7DC48 LDP X30, X21, [X31], #0x20
	0x01E7DC4C B 0x1E7D16C
	0x01E7DC50 BL 0x1C16F20
	0x01E7DC54 STR X30, [X31 - 0x20]!
	0x01E7DC58 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x255D000
	011 Move W8, [X21+430]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {53}
	018 Move X0, 0x2281000
	019 Move X0, [X0+2736]
	020 Call 0x1C17CF4
	021 Move X0, 0x2281000
	022 Move X0, [X0+2744]
	023 Call 0x1C17CF4
	024 Move X0, 0x2281000
	025 Move X0, [X0+2360]
	026 Call 0x1C17CF4
	027 Move X0, 0x2281000
	028 Move X0, [X0+2752]
	029 Call 0x1C17CF4
	030 Move X0, 0x2281000
	031 Move X0, [X0+2344]
	032 Call 0x1C17CF4
	033 Move X0, 0x2281000
	034 Move X0, [X0+2536]
	035 Call 0x1C17CF4
	036 Move X0, 0x2281000
	037 Move X0, [X0+2760]
	038 Call 0x1C17CF4
	039 Move X0, 0x2281000
	040 Move X0, [X0+2544]
	041 Call 0x1C17CF4
	042 Move X0, 0x2281000
	043 Move X0, [X0+2336]
	044 Call 0x1C17CF4
	045 Move X0, 0x2281000
	046 Move X0, [X0+2768]
	047 Call 0x1C17CF4
	048 Move X0, 0x2281000
	049 Move X0, [X0+2776]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X21+430], W8
	053 Move [X31], X31
	054 Move [X31+8], X31
	055 Move X0, [X19+24]
	056 Compare X0, 0
	057 JumpIfEqual {138}
	058 Move X8, 0x2281000
	059 Move X8, [X8+2744]
	060 Add X2, X31, 0
	061 Move X1, X20
	062 Move X3, [X8]
	063 Call Dictionary`2<Object, ValueTuple`2<Object, Object>>.TryGetValue, X0, X1, X2
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {170}
	068 Move X8, 0x2281000
	069 Move X8, [X8+2336]
	070 Move X0, [X8]
	071 Call 0x1C17F10
	072 Move X8, 0x2281000
	073 Move X8, [X8+2344]
	074 Move X21, X0
	075 Move X1, [X8]
	076 Call List`1<Object>..ctor, X0
	077 Move X0, [X19+32]
	078 Compare X0, 0
	079 JumpIfEqual {138}
	080 Move X23, 0x2281000
	081 Move X24, 0x2281000
	082 Move X23, [X23+2544]
	083 Move X24, [X24+2360]
	084 Move W22, W31
	085 Move W8, [X0+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X2, [X23]
	088 Move W1, W22
	089 Call List`1<Object>.get_Item, X0, X1
	090 Compare X0, 0
	091 JumpIfEqual {138}
	092 Compare X20, 0
	093 JumpIfEqual {138}
	094 Move X8, [X20]
	095 Move X1, [X0+16]
	096 Move X0, X20
	097 Move X9, [X8+680]
	098 Move X2, [X8+688]
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {134}
	104 Move X0, [X19+32]
	105 Compare X0, 0
	106 JumpIfEqual {138}
	107 Move X2, [X23]
	108 Move W1, W22
	109 Call List`1<Object>.get_Item, X0, X1
	110 Compare X0, 0
	111 JumpIfEqual {138}
	112 Compare X21, 0
	113 JumpIfEqual {138}
	114 Move W10, [X21+28]
	115 Move X1, [X0+16]
	116 Move X8, [X21+16]
	117 Move X9, [X24]
	118 Add W10, W10, 1
	119 Move [X21+28], W10
	120 Compare X8, 0
	121 JumpIfEqual {138}
	122 NotImplemented "Instruction LDRSW not yet implemented."
	123 Move W11, [X8+24]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Add W9, W10, 1
	126 Add X8, X8, X10
	127 Move [X21+24], W9
	128 Move [X8+32], X1
	129 Move X8, [X9+32]
	130 Move X0, X21
	131 Move X8, [X8+192]
	132 Move X2, [X8+112]
	133 Call List`1<Object>.AddWithResize, X0, X1
	134 Move X0, [X19+32]
	135 Add W22, W22, 1
	136 Compare X0, 0
	137 JumpIfNotEqual {85}
	138 Call 0x1C17F20
	139 Compare X21, 0
	140 JumpIfEqual {138}
	141 Move X8, 0x2281000
	142 Move X22, [X19+24]
	143 Move W1, [X21+24]
	144 Move X8, [X8+2768]
	145 Move X0, [X8]
	146 Call 0x1C17D6C
	147 Move X8, 0x2281000
	148 Move X8, [X8+2752]
	149 Move X23, X0
	150 Move X0, X21
	151 Move X1, [X8]
	152 Call List`1<Object>.ToArray, X0
	153 Move X8, 0x2281000
	154 Move X8, [X8+2776]
	155 Move X2, X0
	156 Add X0, X31, 0
	157 Move X1, X23
	158 Move X3, [X8]
	159 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	160 Compare X22, 0
	161 JumpIfEqual {138}
	162 Move X8, 0x2281000
	163 Move X2, [X31]
	164 Move X3, [X31+8]
	165 Move X8, [X8+2736]
	166 Move X0, X22
	167 Move X1, X20
	168 Move X4, [X8]
	169 Call Dictionary`2<Object, ValueTuple`2<Object, Object>>.Add, X0, X1, X2
	170 Move X22, [X31+8]
	171 Compare X22, 0
	172 JumpIfEqual {138}
	173 Move X8, [X22+24]
	174 Move X20, [X31]
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move X23, X31
	177 And X8, X8, 0
	178 Add X24, X22, 32
	179 Add X25, X20, 32
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X1, [X24]
	182 Move X0, X19
	183 Call SimulationBehaviourUpdater.FindList, X0, X1
	184 Compare X0, 0
	185 JumpIfEqual {138}
	186 Compare X20, 0
	187 JumpIfEqual {138}
	188 Move X21, [X0+40]
	189 Compare X21, 0
	190 JumpIfEqual {197}
	191 Move X8, [X20]
	192 Move X0, X21
	193 Move X1, [X8+64]
	194 Call 0x1C17E00
	195 Compare X0, 0
	196 JumpIfEqual {215}
	197 Move W8, [X20+24]
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move [X25], X21
	200 Move W8, [X22+24]
	201 Add X23, X23, 1
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move X0, X20
	204 Move X20, [X31+64]
	205 Move X19, [X31+72]
	206 Move X22, [X31+48]
	207 Move X21, [X31+56]
	208 Move X24, [X31+32]
	209 Move X23, [X31+40]
	210 Move X30, [X31+16]
	211 Move X25, [X31+24]
	212 Add X31, X31, 80
	213 Return X0
	214 Call 0x1C17F28
	215 Call 0x1C17F44
	216 Move X1, X31
	217 Call 0x1C17DEC

Method: System.Void AddType(System.Type type, System.ValueTuple`3<Fusion.SimulationModes, Fusion.SimulationStages, Fusion.Topologies> attr)

Disassembly:
	0x01E7C2B0 LDR X30, [X31], #0x50
	0x01E7C2B4 RET
	0x01E7C2B8 BL 0x1C16F20
	0x01E7C2BC ADRP X0, 0x2277000
	0x01E7C2C0 LDR X0, [X0 + 0xAC8]
	0x01E7C2C4 BL 0x1C16D08
	0x01E7C2C8 MOVZ W1, 0x1
	0x01E7C2CC BL 0x1C16D6C
	0x01E7C2D0 LDR X21, [X20 + 0x10]
	0x01E7C2D4 MOV X20, X0
	0x01E7C2D8 ADRP X0, 0x2281000
	0x01E7C2DC LDR X0, [X0 + 0xA08]
	0x01E7C2E0 BL 0x1C16D08
	0x01E7C2E4 LDR W8, [X0 + 0xE0]
	0x01E7C2E8 CBNZ W8, 0x1E7C2F0
	0x01E7C2EC BL 0x1C16DFC
	0x01E7C2F0 ADRP X0, 0x2281000
	0x01E7C2F4 LDR X0, [X0 + 0xA08]
	0x01E7C2F8 BL 0x1C16D08
	0x01E7C2FC LDR X8, [X0 + 0xB8]
	0x01E7C300 ADRP X0, 0x2277000
	0x01E7C304 LDR X24, [X8 + 0x18]
	0x01E7C308 LDR X0, [X0 + 0x838]
	0x01E7C30C BL 0x1C16D08
	0x01E7C310 MOV X22, X0
	0x01E7C314 ADRP X0, 0x2281000
	0x01E7C318 LDR X0, [X0 + 0xA58]
	0x01E7C31C BL 0x1C16D08
	0x01E7C320 MOV X23, X0
	0x01E7C324 CBNZ X24, 0x1E7C3A4
	0x01E7C328 ADRP X0, 0x2281000
	0x01E7C32C LDR X0, [X0 + 0xA08]
	0x01E7C330 BL 0x1C16D08
	0x01E7C334 LDR W8, [X0 + 0xE0]
	0x01E7C338 CBNZ W8, 0x1E7C340
	0x01E7C33C BL 0x1C16DFC
	0x01E7C340 ADRP X25, 0x2281000
	0x01E7C344 LDR X25, [X25 + 0xA08]
	0x01E7C348 MOV X0, X25
	0x01E7C34C BL 0x1C16D08
	0x01E7C350 LDR X8, [X0 + 0xB8]
	0x01E7C354 ADRP X0, 0x2281000
	0x01E7C358 LDR X26, [X8]
	0x01E7C35C LDR X0, [X0 + 0xA60]
	0x01E7C360 BL 0x1C16D08
	0x01E7C364 BL 0x1C16F10
	0x01E7C368 MOV X24, X0
	0x01E7C36C ADRP X0, 0x2281000
	0x01E7C370 LDR X0, [X0 + 0xA68]
	0x01E7C374 BL 0x1C16D08
	0x01E7C378 MOV X2, X0
	0x01E7C37C MOV X0, X24
	0x01E7C380 MOV X1, X26
	0x01E7C384 MOV X3, X31
	0x01E7C388 BL 0x2D2A1D0
	0x01E7C38C MOV X0, X25
	0x01E7C390 BL 0x1C16D08
	0x01E7C394 LDR X8, [X0 + 0xB8]
	0x01E7C398 MOV X0, X25
	0x01E7C39C STR X24, [X8 + 0x18]
	0x01E7C3A0 BL 0x1C16D08
	0x01E7C3A4 ADRP X0, 0x2281000
	0x01E7C3A8 LDR X0, [X0 + 0xA70]
	0x01E7C3AC BL 0x1C16D08
	0x01E7C3B0 MOV X2, X0
	0x01E7C3B4 MOV X0, X21
	0x01E7C3B8 MOV X1, X24
	0x01E7C3BC BL 0x1993440
	0x01E7C3C0 MOV X21, X0
	0x01E7C3C4 BL 0x19903C0
	0x01E7C3C8 LDR X8, [X21]
	0x01E7C3CC MOV X0, X21
	0x01E7C3D0 LDP X9, X1, [X8 + 0x168]
	0x01E7C3D4 BLR X9
	0x01E7C3D8 MOV X21, X0
	0x01E7C3DC MOV X0, X20
	0x01E7C3E0 BL 0x19903C0
	0x01E7C3E4 MOV X0, X20
	0x01E7C3E8 MOV X1, X31
	0x01E7C3EC MOV X2, X21
	0x01E7C3F0 BL 0x1993444
	0x01E7C3F4 MOV X0, X22
	0x01E7C3F8 MOV X1, X20
	0x01E7C3FC MOV X2, X31
	0x01E7C400 BL 0x3227FF8
	0x01E7C404 MOV X2, X0
	0x01E7C408 MOV X0, X23
	0x01E7C40C MOV X1, X19
	0x01E7C410 MOV X3, X31
	0x01E7C414 BL 0x3227BD4
	0x01E7C418 MOV X19, X0
	0x01E7C41C ADRP X0, 0x2277000
	0x01E7C420 LDR X0, [X0 + 0x5B0]
	0x01E7C424 BL 0x1C16D08
	0x01E7C428 BL 0x1C16F10
	0x01E7C42C MOV X1, X19
	0x01E7C430 MOV X2, X31
	0x01E7C434 MOV X20, X0
	0x01E7C438 BL 0x337DF1C
	0x01E7C43C ADRP X0, 0x2281000
	0x01E7C440 LDR X0, [X0 + 0xA78]
	0x01E7C444 BL 0x1C16D08
	0x01E7C448 MOV X1, X0
	0x01E7C44C MOV X0, X20
	0x01E7C450 BL 0x1C16DEC
	0x01E7C454 ADD X9, X0, 0x28
	0x01E7C458 LDR X8, [X9]
	0x01E7C45C CBZ X8, 0x1E7C46C
	0x01E7C460 CMP X8, X1
	0x01E7C464 ADD X9, X8, 0x28
	0x01E7C468 B.NE 0x1E7C458
	0x01E7C46C CMP X8, 0x0
	0x01E7C470 CSET W0, NE
	0x01E7C474 RET
	0x01E7C478 STR X30, [X31 - 0x10]!
	0x01E7C47C MOV X8, X0
	0x01E7C480 LDR X9, [X8 + 0x30]!
	0x01E7C484 CMP X2, X9
	0x01E7C488 B.EQ 0x1E7C4B0
	0x01E7C48C CBZ X2, 0x1E7C4D8
	0x01E7C490 CBZ X1, 0x1E7C4D8
	0x01E7C494 LDR X8, [X2 + 0x28]
	0x01E7C498 STP X2, X8, [X1 + 0x20]
	0x01E7C49C LDR X9, [X2 + 0x28]
	0x01E7C4A0 CBZ X9, 0x1E7C4D8
	0x01E7C4A4 ADD X8, X2, 0x28
	0x01E7C4A8 ADD X9, X9, 0x20
	0x01E7C4AC B 0x1E7C4C8
	0x01E7C4B0 CBZ X1, 0x1E7C4D8
	0x01E7C4B4 ADD X10, X9, 0x28
	0x01E7C4B8 ADD X11, X0, 0x28
	0x01E7C4BC CMP X9, 0x0
	0x01E7C4C0 STP X9, X31, [X1 + 0x20]
	0x01E7C4C4 CSEL X9, X11, X10, EQ
	0x01E7C4C8 STR X1, [X9]
	0x01E7C4CC STR X1, [X8]
	0x01E7C4D0 LDR X30, [X31], #0x10
	0x01E7C4D4 RET
	0x01E7C4D8 BL 0x1C16F20
	0x01E7C4DC STR X30, [X31 - 0x10]!
	0x01E7C4E0 CBZ X1, 0x1E7C510
	0x01E7C4E4 STR X31, [X1 + 0x28]
	0x01E7C4E8 LDR X8, [X0 + 0x30]
	0x01E7C4EC ADD X9, X0, 0x28
	0x01E7C4F0 ADD X10, X8, 0x28
	0x01E7C4F4 CMP X8, 0x0
	0x01E7C4F8 STR X8, [X1 + 0x20]
	0x01E7C4FC CSEL X8, X9, X10, EQ
	0x01E7C500 STR X1, [X8]
	0x01E7C504 STR X1, [X0 + 0x30]
	0x01E7C508 LDR X30, [X31], #0x10
	0x01E7C50C RET
	0x01E7C510 BL 0x1C16F20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x255E000
	009 Move W8, [X23+431]
	010 Move X21, X3
	011 Move X22, X2
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0x2282000
	019 Move X0, [X0+2584]
	020 Call 0x1C17CF4
	021 Move X0, 0x2282000
	022 Move X0, [X0+2592]
	023 Call 0x1C17CF4
	024 Move X0, 0x2282000
	025 Move X0, [X0+2504]
	026 Call 0x1C17CF4
	027 Move X0, 0x227B000
	028 Move X0, [X0+2680]
	029 Call 0x1C17CF4
	030 Move X0, 0x2282000
	031 Move X0, [X0+1368]
	032 Call 0x1C17CF4
	033 Move X0, 0x2282000
	034 Move X0, [X0+2376]
	035 Call 0x1C17CF4
	036 Move X0, 0x2278000
	037 Move X0, [X0+1728]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X23+431], W8
	041 Compare X20, 0
	042 JumpIfEqual {187}
	043 Move X0, X20
	044 Move X1, X31
	045 Call Type.get_IsAbstract, X0
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {119}
	050 Move X24, 0x2278000
	051 Move X24, [X24+1728]
	052 Move X8, 0x2282000
	053 Move X0, [X24]
	054 Move X8, [X8+1368]
	055 Move W9, [X0+224]
	056 Move X23, [X8]
	057 Compare W9, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X23
	061 Move X1, X31
	062 Call Type.GetTypeFromHandle, X0
	063 Compare X0, 0
	064 JumpIfEqual {187}
	065 Move X8, [X0]
	066 Move X1, X20
	067 Move X9, [X8+680]
	068 Move X2, [X8+688]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {87}
	074 Move X8, 0x227B000
	075 Move X8, [X8+2680]
	076 Move X0, [X8]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X0, X20
	082 Move X1, X31
	083 Call NetworkBehaviourUtils.RegisterRpcInvokeDelegates, X0
	084 Move X0, X20
	085 Move X1, X31
	086 Call NetworkBehaviourUtils.RegisterMetaData, X0
	087 Move X8, 0x2282000
	088 Move X0, [X24]
	089 Move X8, [X8+2376]
	090 Move W9, [X0+224]
	091 Move X23, [X8]
	092 Compare W9, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X0, X23
	096 Move X1, X31
	097 Call Type.GetTypeFromHandle, X0
	098 Compare X0, 0
	099 JumpIfEqual {187}
	100 Move X8, [X0]
	101 Move X1, X20
	102 Move X9, [X8+680]
	103 Move X2, [X8+688]
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {119}
	109 Move X8, 0x227B000
	110 Move X8, [X8+2680]
	111 Move X0, [X8]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1C17DFC
	116 Move X0, X20
	117 Move X1, X31
	118 Call NetworkBehaviourUtils.RegisterRpcInvokeDelegates, X0
	119 Move X8, 0x2282000
	120 Move X8, [X8+2584]
	121 Move X0, [X8]
	122 Call 0x1C17F10
	123 Move X23, X0
	124 Call BehaviourList..ctor, X0
	125 Compare X23, 0
	126 JumpIfEqual {187}
	127 Move X8, X22
	128 ShiftRight X8, 32
	129 And X8, X8, 0x7FFFFFFF
	130 Move X0, X19
	131 Move X1, X20
	132 Move [X23+16], X20
	133 Move [X23+28], W22
	134 Move [X23+32], W8
	135 Move [X23+36], W21
	136 Call SimulationBehaviourUpdater.GetExecutionOrder, X0, X1
	137 Move [X23+24], W0
	138 Move X0, [X19+16]
	139 Compare X0, 0
	140 JumpIfEqual {187}
	141 Move X8, 0x2282000
	142 Move X8, [X8+2592]
	143 Move X1, X20
	144 Move X2, X23
	145 Move X3, [X8]
	146 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	147 Move X0, [X19+32]
	148 Compare X0, 0
	149 JumpIfEqual {187}
	150 Move X9, 0x2282000
	151 Move X9, [X9+2504]
	152 Move W10, [X0+28]
	153 Move X8, [X0+16]
	154 Move X9, [X9]
	155 Add W10, W10, 1
	156 Move [X0+28], W10
	157 Compare X8, 0
	158 JumpIfEqual {187}
	159 NotImplemented "Instruction LDRSW not yet implemented."
	160 Move W11, [X8+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Add W9, W10, 1
	163 Add X8, X8, X10
	164 Move [X0+24], W9
	165 Move [X8+32], X23
	166 Move X20, [X31+48]
	167 Move X19, [X31+56]
	168 Move X22, [X31+32]
	169 Move X21, [X31+40]
	170 Move X24, [X31+16]
	171 Move X23, [X31+24]
	172 Move X30, [X31+64]
	173 Return 
	174 Move X8, [X9+32]
	175 Move X1, X23
	176 Move X20, [X31+48]
	177 Move X19, [X31+56]
	178 Move X22, [X31+32]
	179 Move X21, [X31+40]
	180 Move X8, [X8+192]
	181 Move X24, [X31+16]
	182 Move X23, [X31+24]
	183 Move X2, [X8+112]
	184 Move X30, [X31+64]
	185 Call List`1<Object>.AddWithResize, X0, X1
	186 Return 
	187 Call 0x1C17F20

Method: Fusion.SimulationBehaviourUpdater/BehaviourList FindList(System.Type type)

Disassembly:
	0x01E7D168 B 0x21A4990
	0x01E7D16C STR X30, [X31 - 0x20]!
	0x01E7D170 STP X20, X19, [X31 + 0x10]
	0x01E7D174 LDRB W8, [X0 + 0x80]
	0x01E7D178 MOV X19, X0
	0x01E7D17C CBZ W8, 0x1E7D1A4
	0x01E7D180 LDRB W8, [X19 + 0x82]
	0x01E7D184 CBZ W8, 0x1E7D1A4
	0x01E7D188 LDR X20, [X19 + 0x88]
	0x01E7D18C MOV X0, X19
	0x01E7D190 BL 0x1E7D23C
	0x01E7D194 LDR X2, [X0]
	0x01E7D198 MOV X0, X19
	0x01E7D19C MOV X1, X20
	0x01E7D1A0 BL 0x1E7D288
	0x01E7D1A4 LDR X20, [X19 + 0x88]
	0x01E7D1A8 MOV X0, X19
	0x01E7D1AC BL 0x1E7D23C
	0x01E7D1B0 CBZ X20, 0x1E7D238
	0x01E7D1B4 LDP S1, S2, [X0 + 0xC]
	0x01E7D1B8 LDR V0, [X0 + 0x8]
	0x01E7D1BC MOV X0, X20
	0x01E7D1C0 MOV X1, X31
	0x01E7D1C4 BL 0x3C3EC04
	0x01E7D1C8 LDR X20, [X19 + 0x88]
	0x01E7D1CC MOV X0, X19
	0x01E7D1D0 BL 0x1E7D23C
	0x01E7D1D4 CBZ X20, 0x1E7D238
	0x01E7D1D8 LDP S2, S3, [X0 + 0x1C]
	0x01E7D1DC LDP S0, S1, [X0 + 0x14]
	0x01E7D1E0 MOV X0, X20
	0x01E7D1E4 MOV X1, X31
	0x01E7D1E8 BL 0x3C3F8B8
	0x01E7D1EC LDRB W8, [X19 + 0x81]
	0x01E7D1F0 CBZ W8, 0x1E7D22C
	0x01E7D1F4 LDR X20, [X19 + 0x88]
	0x01E7D1F8 MOV X0, X19
	0x01E7D1FC BL 0x1E7D23C
	0x01E7D200 LDUR X8, [X0 + 0x24]
	0x01E7D204 LDR W1, [X0 + 0x2C]
	0x01E7D208 MOV X2, X31
	0x01E7D20C MOV X0, X8
	0x01E7D210 BL 0x1E2E6F8
	0x01E7D214 CBZ X20, 0x1E7D238
	0x01E7D218 MOV X0, X20
	0x01E7D21C LDP X20, X19, [X31 + 0x10]
	0x01E7D220 MOV X1, X31
	0x01E7D224 LDR X30, [X31], #0x20
	0x01E7D228 B 0x3C3FC4C
	0x01E7D22C LDP X20, X19, [X31 + 0x10]
	0x01E7D230 LDR X30, [X31], #0x20
	0x01E7D234 RET
	0x01E7D238 BL 0x1C16F20
	0x01E7D23C STP X30, X21, [X31 - 0x20]!
	0x01E7D240 STP X20, X19, [X31 + 0x10]
	0x01E7D244 ADRP X20, 0x255C000
	0x01E7D248 ADRP X21, 0x2280000
	0x01E7D24C LDRB W8, [X20 + 0x1BE]
	0x01E7D250 LDR X21, [X21 + 0xB38]
	0x01E7D254 MOV X19, X0
	0x01E7D258 TBNZ X8, 0x0, 0x1E7D270
	0x01E7D25C ADRP X0, 0x2280000
	0x01E7D260 LDR X0, [X0 + 0xB38]
	0x01E7D264 BL 0x1C16CF4
	0x01E7D268 MOVZ W8, 0x1
	0x01E7D26C STRB W8, [X20 + 0x1BE]
	0x01E7D270 LDR X2, [X21]
	0x01E7D274 MOV X0, X19
	0x01E7D278 LDP X20, X19, [X31 + 0x10]
	0x01E7D27C MOV W1, W31
	0x01E7D280 LDP X30, X21, [X31], #0x20
	0x01E7D284 B 0x22275D8
	0x01E7D288 SUB X31, X31, 0x30
	0x01E7D28C STP X30, X21, [X31 + 0x10]
	0x01E7D290 STP X20, X19, [X31 + 0x20]
	0x01E7D294 ADRP X21, 0x255C000
	0x01E7D298 LDRB W8, [X21 + 0x1C1]
	0x01E7D29C MOV X19, X1
	0x01E7D2A0 MOV X20, X0
	0x01E7D2A4 STR X2, [X31 + 0x8]
	0x01E7D2A8 TBNZ X8, 0x0, 0x1E7D2C0
	0x01E7D2AC ADRP X0, 0x2276000
	0x01E7D2B0 LDR X0, [X0 + 0x598]
	0x01E7D2B4 BL 0x1C16CF4
	0x01E7D2B8 MOVZ W8, 0x1
	0x01E7D2BC STRB W8, [X21 + 0x1C1]
	0x01E7D2C0 ADD X0, X31, 0x8
	0x01E7D2C4 MOV X1, X31
	0x01E7D2C8 STR X31, [X31]
	0x01E7D2CC BL 0x1E74DE4
	0x01E7D2D0 TBZ X0, 0x0, 0x1E7D340
	0x01E7D2D4 CBZ X20, 0x1E7D3A8
	0x01E7D2D8 LDR X0, [X20 + 0x38]
	0x01E7D2DC CBZ X0, 0x1E7D3A8
	0x01E7D2E0 LDR X1, [X31 + 0x8]
	0x01E7D2E4 ADD X2, X31, 0x0
	0x01E7D2E8 MOV X3, X31
	0x01E7D2EC BL 0x1EA32F8
	0x01E7D2F0 TBZ X0, 0x0, 0x1E7D398
	0x01E7D2F4 CBZ X19, 0x1E7D3A8
	0x01E7D2F8 MOV X0, X19
	0x01E7D2FC MOV X1, X31
	0x01E7D300 BL 0x3C3F49C
	0x01E7D304 LDR X8, [X31]
	0x01E7D308 CBZ X8, 0x1E7D3A8
	0x01E7D30C MOV X20, X0
	0x01E7D310 MOV X0, X8
	0x01E7D314 MOV X1, X31
	0x01E7D318 BL 0x3C32E90
	0x01E7D31C CMP X20, X0
	0x01E7D320 B.EQ 0x1E7D398
	0x01E7D324 LDR X0, [X31]
	0x01E7D328 CBZ X0, 0x1E7D3A8
	0x01E7D32C MOV X1, X31
	0x01E7D330 BL 0x3C32E90
	0x01E7D334 MOV X1, X0
	0x01E7D338 MOV X0, X19
	0x01E7D33C B 0x1E7D390
	0x01E7D340 LDR W8, [X31 + 0xC]
	0x01E7D344 CBNZ W8, 0x1E7D398
	0x01E7D348 CBZ X19, 0x1E7D3A8
	0x01E7D34C MOV X0, X19
	0x01E7D350 MOV X1, X31
	0x01E7D354 BL 0x3C3F49C
	0x01E7D358 ADRP X8, 0x2276000
	0x01E7D35C LDR X8, [X8 + 0x598]
	0x01E7D360 MOV X20, X0
	0x01E7D364 LDR X8, [X8]
	0x01E7D368 LDR W9, [X8 + 0xE0]
	0x01E7D36C CBNZ W9, 0x1E7D378
	0x01E7D370 MOV X0, X8
	0x01E7D374 BL 0x1C16DFC
	0x01E7D378 MOV X0, X20
	0x01E7D37C MOV X1, X31
	0x01E7D380 BL 0x3C38948
	0x01E7D384 TBZ X0, 0x0, 0x1E7D398
	0x01E7D388 MOV X0, X19
	0x01E7D38C MOV X1, X31
	0x01E7D390 MOV X2, X31
	0x01E7D394 BL 0x3C3FD20
	0x01E7D398 LDP X20, X19, [X31 + 0x20]
	0x01E7D39C LDP X30, X21, [X31 + 0x10]
	0x01E7D3A0 ADD X31, X31, 0x30
	0x01E7D3A4 RET
	0x01E7D3A8 BL 0x1C16F20
	0x01E7D3AC SUB X31, X31, 0x40
	0x01E7D3B0 STP X30, X23, [X31 + 0x10]
	0x01E7D3B4 STP X22, X21, [X31 + 0x20]
	0x01E7D3B8 STP X20, X19, [X31 + 0x30]
	0x01E7D3BC ADRP X20, 0x255C000
	0x01E7D3C0 LDRB W8, [X20 + 0x1BA]
	0x01E7D3C4 MOV X19, X0
	0x01E7D3C8 TBNZ X8, 0x0, 0x1E7D3EC
	0x01E7D3CC ADRP X0, 0x2280000
	0x01E7D3D0 LDR X0, [X0 + 0xB40]
	0x01E7D3D4 BL 0x1C16CF4
	0x01E7D3D8 ADRP X0, 0x2276000
	0x01E7D3DC LDR X0, [X0 + 0x598]
	0x01E7D3E0 BL 0x1C16CF4
	0x01E7D3E4 MOVZ W8, 0x1
	0x01E7D3E8 STRB W8, [X20 + 0x1BA]
	0x01E7D3EC STR X31, [X31 + 0x8]
	0x01E7D3F0 LDR X20, [X19 + 0x88]
	0x01E7D3F4 MOV X0, X19
	0x01E7D3F8 BL 0x1E7D23C
	0x01E7D3FC CBZ X20, 0x1E7D5C4
	0x01E7D400 MOV X21, X0
	0x01E7D404 MOV X0, X20
	0x01E7D408 MOV X1, X31
	0x01E7D40C BL 0x3C3EB78
	0x01E7D410 MOV X0, X19
	0x01E7D414 STP S0, S1, [X21 + 0x8]
	0x01E7D418 STR S2, [X21 + 0x10]
	0x01E7D41C BL 0x1E7D23C
	0x01E7D420 MOV X21, X0
	0x01E7D424 MOV X0, X20
	0x01E7D428 MOV X1, X31
	0x01E7D42C BL 0x3C3F830
	0x01E7D430 STP S0, S1, [X21 + 0x14]
	0x01E7D434 STP S2, S3, [X21 + 0x1C]
	0x01E7D438 LDRB W8, [X19 + 0x81]
	0x01E7D43C CBZ W8, 0x1E7D468
	0x01E7D440 MOV X0, X19
	0x01E7D444 BL 0x1E7D23C
	0x01E7D448 MOV X21, X0
	0x01E7D44C MOV X0, X20
	0x01E7D450 MOV X1, X31

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, 0x255D000
	011 Move W8, [X19+432]
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x2281000
	019 Move X0, [X0+2592]
	020 Call 0x1C17CF4
	021 Move X0, 0x2281000
	022 Move X0, [X0+2640]
	023 Call 0x1C17CF4
	024 Move X0, 0x2281000
	025 Move X0, [X0+2376]
	026 Call 0x1C17CF4
	027 Move X0, 0x2277000
	028 Move X0, [X0+1728]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X19+432], W8
	032 Move [X31+8], X31
	033 Move X0, [X20+16]
	034 Compare X0, 0
	035 JumpIfEqual {110}
	036 Move X23, 0x2281000
	037 Move X23, [X23+2640]
	038 Add X2, X31, 8
	039 Move X1, X21
	040 Move X3, [X23]
	041 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {99}
	046 Move X24, 0x2281000
	047 Move X25, 0x2277000
	048 Move X24, [X24+2376]
	049 Move X25, [X25+1728]
	050 Move X19, X21
	051 Move X0, [X25]
	052 Move X22, [X24]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X0, X22
	058 Move X1, X31
	059 Call Type.GetTypeFromHandle, X0
	060 Compare X0, 0
	061 JumpIfEqual {110}
	062 Move X8, [X0]
	063 Move X1, X19
	064 Move X9, [X8+680]
	065 Move X2, [X8+688]
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {111}
	071 Move X0, [X20+16]
	072 Compare X0, 0
	073 JumpIfEqual {110}
	074 Move X3, [X23]
	075 Add X2, X31, 8
	076 Move X1, X19
	077 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {90}
	082 Compare X19, 0
	083 JumpIfEqual {110}
	084 Move X8, [X19]
	085 Move X0, X19
	086 Move X9, [X8+2072]
	087 Move X1, [X8+2080]
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move X19, X0
	090 Move X0, [X20+16]
	091 Compare X0, 0
	092 JumpIfEqual {110}
	093 Move X8, 0x2281000
	094 Move X2, [X31+8]
	095 Move X8, [X8+2592]
	096 Move X1, X21
	097 Move X3, [X8]
	098 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	099 Move X0, [X31+8]
	100 Move X20, [X31+64]
	101 Move X19, [X31+72]
	102 Move X22, [X31+48]
	103 Move X21, [X31+56]
	104 Move X24, [X31+32]
	105 Move X23, [X31+40]
	106 Move X26, [X31+16]
	107 Move X25, [X31+24]
	108 Move X30, [X31+80]
	109 Return X0
	110 Call 0x1C17F20
	111 Move X0, 0x2277000
	112 Move X0, [X0+2760]
	113 Call 0x1C17D08
	114 Move W1, 1
	115 Call 0x1C17D6C
	116 Move X21, [X20+16]
	117 Move X20, X0
	118 Move X0, 0x2281000
	119 Move X0, [X0+2568]
	120 Call 0x1C17D08
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Move X0, 0x2281000
	126 Move X0, [X0+2568]
	127 Call 0x1C17D08
	128 Move X8, [X0+184]
	129 Move X0, 0x2277000
	130 Move X24, [X8+24]
	131 Move X0, [X0+2104]
	132 Call 0x1C17D08
	133 Move X22, X0
	134 Move X0, 0x2281000
	135 Move X0, [X0+2648]
	136 Call 0x1C17D08
	137 Move X23, X0
	138 Compare X24, 0
	139 JumpIfNotEqual {172}
	140 Move X0, 0x2281000
	141 Move X0, [X0+2568]
	142 Call 0x1C17D08
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {147}
	146 Call 0x1C17DFC
	147 Move X25, 0x2281000
	148 Move X25, [X25+2568]
	149 Move X0, X25
	150 Call 0x1C17D08
	151 Move X8, [X0+184]
	152 Move X0, 0x2281000
	153 Move X26, [X8]
	154 Move X0, [X0+2656]
	155 Call 0x1C17D08
	156 Call 0x1C17F10
	157 Move X24, X0
	158 Move X0, 0x2281000
	159 Move X0, [X0+2664]
	160 Call 0x1C17D08
	161 Move X2, X0
	162 Move X0, X24
	163 Move X1, X26
	164 Move X3, X31
	165 Call Func`2<KeyValuePair`2<Object, Object>, Object>..ctor, X0, X1, X2
	166 Move X0, X25
	167 Call 0x1C17D08
	168 Move X8, [X0+184]
	169 Move X0, X25
	170 Move [X8+24], X24
	171 Call 0x1C17D08
	172 Move X0, 0x2281000
	173 Move X0, [X0+2672]
	174 Call 0x1C17D08
	175 Move X2, X0
	176 Move X0, X21
	177 Move X1, X24
	178 Call 0x1994440
	179 Move X21, X0
	180 Call 0x19913C0
	181 Move X8, [X21]
	182 Move X0, X21
	183 Move X9, [X8+360]
	184 Move X1, [X8+368]
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Move X21, X0
	187 Move X0, X20
	188 Call 0x19913C0
	189 Move X0, X20
	190 Move X1, X31
	191 Move X2, X21
	192 Call 0x1994444
	193 Move X0, X22
	194 Move X1, X20
	195 Move X2, X31
	196 Call String.Join, X0, X1
	197 Move X2, X0
	198 Move X0, X23
	199 Move X1, X19
	200 Move X3, X31
	201 Call String.Format, X0, X1, X2
	202 Move X19, X0
	203 Move X0, 0x2277000
	204 Move X0, [X0+1456]
	205 Call 0x1C17D08
	206 Call 0x1C17F10
	207 Move X1, X19
	208 Move X2, X31
	209 Move X20, X0
	210 Call InvalidOperationException..ctor, X0, X1
	211 Move X0, 0x2281000
	212 Move X0, [X0+2680]
	213 Call 0x1C17D08
	214 Move X1, X0
	215 Move X0, X20
	216 Call 0x1C17DEC

Method: System.Void FinishBehaviourStatisticsPendingSnapshot()

Disassembly:
	0x01E7DCBC LDRB W3, [X19 + 0x82]
	0x01E7DCC0 ADD X5, X19, 0x84
	0x01E7DCC4 MOVZ W4, 0x1
	0x01E7DCC8 MOV X0, X19
	0x01E7DCCC MOVZ W20, 0x1
	0x01E7DCD0 BL 0x1E7DD18
	0x01E7DCD4 LDR X0, [X19 + 0x88]
	0x01E7DCD8 STRB W20, [X19 + 0x95]
	0x01E7DCDC CBZ X0, 0x1E7DD14
	0x01E7DCE0 MOV X1, X31
	0x01E7DCE4 BL 0x3C3EB78
	0x01E7DCE8 LDR X0, [X19 + 0x88]
	0x01E7DCEC STP S0, S1, [X19 + 0x98]
	0x01E7DCF0 STR S2, [X19 + 0xA0]
	0x01E7DCF4 CBZ X0, 0x1E7DD14
	0x01E7DCF8 MOV X1, X31
	0x01E7DCFC BL 0x3C3F830
	0x01E7DD00 STP S0, S1, [X19 + 0xA4]
	0x01E7DD04 STP S2, S3, [X19 + 0xAC]
	0x01E7DD08 LDP X20, X19, [X31 + 0x10]
	0x01E7DD0C LDR X30, [X31], #0x20
	0x01E7DD10 RET
	0x01E7DD14 BL 0x1C16F20
	0x01E7DD18 SUB X31, X31, 0x150
	0x01E7DD1C STP D15, D14, [X31 + 0xB0]
	0x01E7DD20 STP D13, D12, [X31 + 0xC0]
	0x01E7DD24 STP D11, D10, [X31 + 0xD0]
	0x01E7DD28 STP D9, D8, [X31 + 0xE0]
	0x01E7DD2C STP X29, X30, [X31 + 0xF0]
	0x01E7DD30 STP X28, X27, [X31 + 0x100]
	0x01E7DD34 STP X26, X25, [X31 + 0x110]
	0x01E7DD38 STP X24, X23, [X31 + 0x120]
	0x01E7DD3C STP X22, X21, [X31 + 0x130]
	0x01E7DD40 STP X20, X19, [X31 + 0x140]
	0x01E7DD44 MRS X29, 0xC000
	0x01E7DD48 LDR X8, [X29 + 0x28]
	0x01E7DD4C ADRP X21, 0x255C000
	0x01E7DD50 MOV X27, X5
	0x01E7DD54 MOV W20, W4
	0x01E7DD58 STR X8, [X31 + 0xA8]
	0x01E7DD5C LDRB W8, [X21 + 0x1C3]
	0x01E7DD60 MOV W25, W3
	0x01E7DD64 MOV W22, W2
	0x01E7DD68 MOV X19, X1
	0x01E7DD6C MOV X24, X0
	0x01E7DD70 TBNZ X8, 0x0, 0x1E7DD88
	0x01E7DD74 ADRP X0, 0x2280000
	0x01E7DD78 LDR X0, [X0 + 0xB70]
	0x01E7DD7C BL 0x1C16CF4
	0x01E7DD80 MOVZ W8, 0x1
	0x01E7DD84 STRB W8, [X21 + 0x1C3]
	0x01E7DD88 STP X31, X31, [X31 + 0x60]
	0x01E7DD8C STP X31, X31, [X31 + 0x50]
	0x01E7DD90 STR W31, [X31 + 0x4C]
	0x01E7DD94 CBZ X24, 0x1E7E11C
	0x01E7DD98 ADD X1, X31, 0x60
	0x01E7DD9C ADD X2, X31, 0x50
	0x01E7DDA0 ADD X3, X31, 0x4C
	0x01E7DDA4 MOV X0, X24
	0x01E7DDA8 MOV X4, X31
	0x01E7DDAC BL 0x1E749E0
	0x01E7DDB0 TBZ X0, 0x0, 0x1E7E0DC
	0x01E7DDB4 STR W20, [X31 + 0x38]
	0x01E7DDB8 ADRP X20, 0x2280000
	0x01E7DDBC LDR X20, [X20 + 0xB70]
	0x01E7DDC0 ADD X8, X31, 0x70
	0x01E7DDC4 ADD X0, X31, 0x60
	0x01E7DDC8 MOV W1, W31
	0x01E7DDCC LDR X2, [X20]
	0x01E7DDD0 BL 0x22277EC
	0x01E7DDD4 LDR X2, [X20]
	0x01E7DDD8 LDR X26, [X31 + 0x70]
	0x01E7DDDC LDR V12, [X31 + 0x78]
	0x01E7DDE0 LDP S13, S9, [X31 + 0x80]
	0x01E7DDE4 LDP S10, S8, [X31 + 0x88]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move X20, 0x255D000
	006 Move W8, [X20+433]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0x2281000
	013 Move X0, [X0+2792]
	014 Call 0x1C17CF4
	015 Move X0, 0x2281000
	016 Move X0, [X0+2800]
	017 Call 0x1C17CF4
	018 Move X0, 0x2281000
	019 Move X0, [X0+2808]
	020 Call 0x1C17CF4
	021 Move X0, 0x2281000
	022 Move X0, [X0+2816]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+433], W8
	026 Move [X31+8], X31
	027 Move [X31+16], X31
	028 Move [X31+24], X31
	029 Move X0, [X19+32]
	030 Compare X0, 0
	031 JumpIfEqual {56}
	032 Move X8, 0x2281000
	033 Move X8, [X8+2816]
	034 Move X20, 0x2281000
	035 Move X19, 0x2281000
	036 Move X1, [X8]
	037 Move X20, [X20+2800]
	038 Move X19, [X19+2792]
	039 Add X8, X31, 8
	040 Call List`1<Object>.GetEnumerator, X0
	041 Move X1, [X20]
	042 Add X0, X31, 8
	043 Call Enumerator<Object>.MoveNext, X0
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {41}
	048 Move X1, [X19]
	049 Add X0, X31, 8
	050 Call Enumerator<Object>.Dispose, X0
	051 Move X20, [X31+48]
	052 Move X19, [X31+56]
	053 Move X30, [X31+32]
	054 Add X31, X31, 64
	055 Return 
	056 Call 0x1C17F20
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X20, X0
	059 Move X0, X20
	060 Call 0x3EB2AD0
	061 Move X19, [X0]
	062 Call 0x3EB2AE0
	063 Move X8, 0x2281000
	064 Move X8, [X8+2792]
	065 Add X0, X31, 8
	066 Move X1, [X8]
	067 Call Enumerator<Object>.Dispose, X0
	068 Compare X19, 0
	069 JumpIfEqual {51}
	070 Move X0, X19
	071 Call 0x1C17F18
	072 Move X19, X31
	073 Move X20, X0
	074 Move X8, 0x2281000
	075 Move X8, [X8+2792]
	076 Move X1, [X8]
	077 Add X0, X31, 8
	078 Call Enumerator<Object>.Dispose, X0
	079 Compare X19, 0
	080 JumpIfNotEqual {83}
	081 Move X0, X20
	082 Call 0x1D2D690
	083 Move X0, X19
	084 Call 0x1C17F18
	085 Call 0x1991590

Method: System.Boolean TryGetBehaviourStatisticsSnapshot(System.Type behaviourType, out Fusion.Statistics.BehaviourStatisticsSnapshot behaviourStatisticsSnapshot)

Disassembly:
	0x01E7DDE8 LDR V11, [X31 + 0x90]
	0x01E7DDEC LDUR X23, [X31 + 0x94]
	0x01E7DDF0 LDR W21, [X31 + 0x9C]
	0x01E7DDF4 LDR X28, [X31 + 0xA0]
	0x01E7DDF8 ADD X8, X31, 0x70
	0x01E7DDFC ADD X0, X31, 0x50
	0x01E7DE00 MOV W1, W31
	0x01E7DE04 BL 0x22277EC
	0x01E7DE08 LDR X8, [X31 + 0xA0]
	0x01E7DE0C LDR W10, [X27]
	0x01E7DE10 LDR W9, [X31 + 0x5C]
	0x01E7DE14 CBZ W10, 0x1E7DE24
	0x01E7DE18 CMP W10, W9
	0x01E7DE1C B.EQ 0x1E7DE28
	0x01E7DE20 B 0x1E7DE30
	0x01E7DE24 STR W9, [X27]
	0x01E7DE28 MOVZ W9, 0x3F800000
	0x01E7DE2C STR W9, [X31 + 0x4C]
	0x01E7DE30 CMP W28, W8
	0x01E7DE34 B.EQ 0x1E7DE54
	0x01E7DE38 LDR V0, [X31 + 0x4C]
	0x01E7DE3C FMOV S1, 0.5
	0x01E7DE40 FMOV S2, 1
	0x01E7DE44 FCMP S0, S1
	0x01E7DE48 FMOV S0, W31
	0x01E7DE4C FCSEL S0, S0, S2, MI
	0x01E7DE50 STR S0, [X31 + 0x4C]
	0x01E7DE54 LDP S15, S1, [X31 + 0x80]
	0x01E7DE58 LDR V0, [X31 + 0x88]
	0x01E7DE5C LDUR X27, [X31 + 0x94]
	0x01E7DE60 LDR W28, [X31 + 0x9C]
	0x01E7DE64 LDR V14, [X31 + 0x78]
	0x01E7DE68 STP S0, S1, [X31 + 0x44]
	0x01E7DE6C LDR V1, [X31 + 0x8C]
	0x01E7DE70 LDR V0, [X31 + 0x90]
	0x01E7DE74 STP S0, S1, [X31 + 0x3C]
	0x01E7DE78 TBZ X25, 0x0, 0x1E7DEE0
	0x01E7DE7C ADRP X20, 0x255B000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x255D000
	007 Move W8, [X22+434]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2281000
	016 Move X0, [X0+2640]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+434], W8
	020 Move [X31+8], X31
	021 Move X0, [X21+16]
	022 Compare X0, 0
	023 JumpIfEqual {50}
	024 Move X8, 0x2281000
	025 Move X8, [X8+2640]
	026 Add X2, X31, 8
	027 Move X1, X20
	028 Move X3, [X8]
	029 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {41}
	034 Move X8, [X31+8]
	035 Compare X8, 0
	036 JumpIfEqual {50}
	037 Move X8, [X8+72]
	038 Compare X8, 0
	039 JumpIfEqual {50}
	040 Move X8, [X8+16]
	041 Move X8, X31
	042 Move [X19], X8
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 And W0, W0, 1
	048 Move X30, [X31+48]
	049 Return X0
	050 Call 0x1C17F20

