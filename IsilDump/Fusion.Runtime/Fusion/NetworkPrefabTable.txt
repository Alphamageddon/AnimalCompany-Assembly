Type: Fusion.NetworkPrefabTable

Method: System.Collections.Generic.IReadOnlyList`1<Fusion.INetworkPrefabSource> get_Prefabs()

Disassembly:
	0x01E9B44C LDR X8, [X22]
	0x01E9B450 MOV X1, X0

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Int32 get_Version()

Disassembly:
	0x01E9B454 MOV X2, X31
	0x01E9B458 MOV X0, X8

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: System.Collections.Generic.IEnumerable`1<System.ValueTuple`2<Fusion.NetworkPrefabId, Fusion.INetworkPrefabSource>> GetEntries()

Disassembly:
	0x01E9B45C BL 0x321EFD0
	0x01E9B460 MOV X1, X0
	0x01E9B464 AND W0, W20, 0x1
	0x01E9B468 MOV X2, X31
	0x01E9B46C BL 0x1E3BA60
	0x01E9B470 B 0x1E9B578
	0x01E9B474 LDR W9, [X10]
	0x01E9B478 ADD W9, W9, 0x1
	0x01E9B47C ADD X8, X8, W9, 0x4, SXTW
	0x01E9B480 ADD X0, X8, 0x138
	0x01E9B484 LDP X8, X1, [X0]
	0x01E9B488 MOV X0, X20
	0x01E9B48C BLR X8
	0x01E9B490 LDR X8, [X20]
	0x01E9B494 LDR X1, [X25]
	0x01E9B498 LDRH W9, [X8 + 0x12E]
	0x01E9B49C CBZ X9, 0x1E9B4C0
	0x01E9B4A0 LDR X10, [X8 + 0xB0]
	0x01E9B4A4 ADD X10, X10, 0x8
	0x01E9B4A8 LDUR X11, [X10 - 0x8]
	0x01E9B4AC CMP X11, X1
	0x01E9B4B0 B.EQ 0x1E9B4D0
	0x01E9B4B4 SUBS X9, X9, 0x1
	0x01E9B4B8 ADD X10, X10, 0x10
	0x01E9B4BC B.NE 0x1E9B4A8
	0x01E9B4C0 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x253F000
	006 Move X21, 0x2264000
	007 Move W8, [X20+734]
	008 Move X21, [X21+1384]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2264000
	015 Move X0, [X0+1384]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+734], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move TEMP, 1
	022 Not TEMP
	023 Move W1, TEMP
	024 Move X2, X31
	025 Move X20, X0
	026 Call <GetEntries>d__12..ctor, X0, X1
	027 Compare X20, 0
	028 JumpIfEqual {36}
	029 Move [X20+48], X19
	030 Move X0, X20
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0
	036 Call 0x1C17F20

Method: System.Void AddSource(Fusion.INetworkPrefabSource source)

Disassembly:
	0x01E9B4C4 MOV W2, W31
	0x01E9B4C8 BL 0x1C5C788
	0x01E9B4CC B 0x1E9B4DC
	0x01E9B4D0 LDRSW X9, [X10]
	0x01E9B4D4 ADD X8, X8, X9, 0x4, LSL
	0x01E9B4D8 ADD X0, X8, 0x138
	0x01E9B4DC LDP X8, X2, [X0]
	0x01E9B4E0 MOVZ W1, 0x1
	0x01E9B4E4 MOV X0, X20
	0x01E9B4E8 BLR X8
	0x01E9B4EC LDR X8, [X21 + 0x28]
	0x01E9B4F0 CBZ X8, 0x1E9B598
	0x01E9B4F4 LDR W9, [X8 + 0x18]
	0x01E9B4F8 CMP W22, W9
	0x01E9B4FC B.CS 0x1E9B59C
	0x01E9B500 ADD X8, X8, X24, 0x2, LSL
	0x01E9B504 ADD X0, X8, 0x20
	0x01E9B508 MOVZ W1, 0x1
	0x01E9B50C MOV X2, X31
	0x01E9B510 BL 0x1E9BE58
	0x01E9B514 LDR X8, [X20]
	0x01E9B518 LDR X1, [X25]
	0x01E9B51C LDRH W9, [X8 + 0x12E]
	0x01E9B520 CBZ X9, 0x1E9B544
	0x01E9B524 LDR X10, [X8 + 0xB0]
	0x01E9B528 ADD X10, X10, 0x8
	0x01E9B52C LDUR X11, [X10 - 0x8]
	0x01E9B530 CMP X11, X1
	0x01E9B534 B.EQ 0x1E9B554
	0x01E9B538 SUBS X9, X9, 0x1
	0x01E9B53C ADD X10, X10, 0x10
	0x01E9B540 B.NE 0x1E9B52C
	0x01E9B544 MOVZ W2, 0x3
	0x01E9B548 MOV X0, X20
	0x01E9B54C BL 0x1C5C788
	0x01E9B550 B 0x1E9B564
	0x01E9B554 LDR W9, [X10]
	0x01E9B558 ADD W9, W9, 0x3
	0x01E9B55C ADD X8, X8, W9, 0x4, SXTW
	0x01E9B560 ADD X0, X8, 0x138
	0x01E9B564 LDP X8, X1, [X0]
	0x01E9B568 MOV X0, X20
	0x01E9B56C BLR X8
	0x01E9B570 TBNZ X0, 0x0, 0x1E9B328
	0x01E9B574 MOV X23, X31
	0x01E9B578 MOV X0, X23
	0x01E9B57C LDP X20, X19, [X31 + 0x50]
	0x01E9B580 LDP X22, X21, [X31 + 0x40]
	0x01E9B584 LDP X24, X23, [X31 + 0x30]
	0x01E9B588 LDP X26, X25, [X31 + 0x20]
	0x01E9B58C LDR X30, [X31 + 0x10]
	0x01E9B590 ADD X31, X31, 0x60
	0x01E9B594 RET
	0x01E9B598 BL 0x1C16F20
	0x01E9B59C BL 0x1C16F28
	0x01E9B5A0 SUB X31, X31, 0x30
	0x01E9B5A4 STP X30, X21, [X31 + 0x10]
	0x01E9B5A8 STP X20, X19, [X31 + 0x20]
	0x01E9B5AC ADRP X21, 0x253E000
	0x01E9B5B0 LDRB W8, [X21 + 0x2E9]
	0x01E9B5B4 MOV X19, X1
	0x01E9B5B8 MOV X20, X0
	0x01E9B5BC TBNZ X8, 0x0, 0x1E9B5D4
	0x01E9B5C0 ADRP X0, 0x2263000
	0x01E9B5C4 LDR X0, [X0 + 0x5C0]
	0x01E9B5C8 BL 0x1C16CF4
	0x01E9B5CC MOVZ W8, 0x1
	0x01E9B5D0 STRB W8, [X21 + 0x2E9]
	0x01E9B5D4 CBZ W19, 0x1E9B600
	0x01E9B5D8 LDR X8, [X20 + 0x18]
	0x01E9B5DC CBZ X8, 0x1E9B65C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 NotImplemented "Instruction MRS not yet implemented."
	006 Move X8, [X20+40]
	007 Add X2, X31, 16
	008 Move X19, X1
	009 Move [X31+40], X8
	010 Move [X31+16], W31
	011 Call NetworkPrefabTable.TryAddSource, X0, X1, X2
	012 Move TEMP, X0
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfNotEqual {24}
	016 Move X8, [X20+40]
	017 Move X9, [X31+40]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X20, [X31+64]
	020 Move X19, [X31+72]
	021 Move X30, [X31+48]
	022 Add X31, X31, 80
	023 Return 
	024 Move X0, X19
	025 Call 0x19913C0
	026 Move X0, 0x2264000
	027 Move X0, [X0+1392]
	028 Call 0x1C17D08
	029 Move X1, X0
	030 Move W0, W31
	031 Move X2, X19
	032 Call 0x19973F0
	033 Move [X31+24], X0
	034 Move [X31+32], X1
	035 Move X0, 0x2264000
	036 Move X0, [X0+848]
	037 Call 0x1C17D08
	038 Add X1, X31, 24
	039 Call 0x1C17E04
	040 Move W8, [X31+16]
	041 Move X19, X0
	042 Move X0, 0x2264000
	043 Move [X31+8], W8
	044 Move X0, [X0+1352]
	045 Call 0x1C17D08
	046 Add X1, X31, 8
	047 Call 0x1C17E04
	048 Move X20, X0
	049 Move X0, 0x2264000
	050 Move X0, [X0+1400]
	051 Call 0x1C17D08
	052 Move X1, X19
	053 Move X2, X20
	054 Move X3, X31
	055 Call String.Format, X0, X1, X2
	056 Move X19, X0
	057 Move X0, 0x2261000
	058 Move X0, [X0+1400]
	059 Call 0x1C17D08
	060 Call 0x1C17F10
	061 Move X20, X0
	062 Move X0, 0x2264000
	063 Move X0, [X0+1408]
	064 Call 0x1C17D08
	065 Move X2, X0
	066 Move X0, X20
	067 Move X1, X19
	068 Move X3, X31
	069 Call ArgumentException..ctor, X0, X1, X2
	070 Move X0, 0x2264000
	071 Move X0, [X0+1416]
	072 Call 0x1C17D08
	073 Move X1, X0
	074 Move X0, X20
	075 Call 0x1C17DEC
	076 Call 0x3EB2B20

Method: System.Boolean TryAddSource(Fusion.INetworkPrefabSource source, out Fusion.NetworkPrefabId id)

Disassembly:
	0x01E9B5E0 LDR W8, [X8 + 0x18]
	0x01E9B5E4 SUB W0, W19, 0x1
	0x01E9B5E8 CMP W0, W8
	0x01E9B5EC B.GE 0x1E9B660
	0x01E9B5F0 LDP X20, X19, [X31 + 0x20]
	0x01E9B5F4 LDP X30, X21, [X31 + 0x10]
	0x01E9B5F8 ADD X31, X31, 0x30
	0x01E9B5FC RET
	0x01E9B600 ADRP X0, 0x2260000
	0x01E9B604 LDR X0, [X0 + 0x578]
	0x01E9B608 BL 0x1C16D08
	0x01E9B60C BL 0x1C16F10
	0x01E9B610 MOV X19, X0
	0x01E9B614 ADRP X0, 0x2263000
	0x01E9B618 LDR X0, [X0 + 0x5E8]
	0x01E9B61C BL 0x1C16D08
	0x01E9B620 MOV X20, X0
	0x01E9B624 ADRP X0, 0x2263000
	0x01E9B628 LDR X0, [X0 + 0x510]
	0x01E9B62C BL 0x1C16D08
	0x01E9B630 MOV X2, X0
	0x01E9B634 MOV X0, X19
	0x01E9B638 MOV X1, X20
	0x01E9B63C MOV X3, X31
	0x01E9B640 BL 0x330E16C
	0x01E9B644 ADRP X0, 0x2263000
	0x01E9B648 LDR X0, [X0 + 0x5F0]
	0x01E9B64C BL 0x1C16D08
	0x01E9B650 MOV X1, X0
	0x01E9B654 MOV X0, X19
	0x01E9B658 BL 0x1C16DEC
	0x01E9B65C BL 0x1C16F20
	0x01E9B660 STR W19, [X31 + 0x8]
	0x01E9B664 ADRP X0, 0x2263000
	0x01E9B668 LDR X0, [X0 + 0x548]
	0x01E9B66C BL 0x1C16D08
	0x01E9B670 ADD X1, X31, 0x8
	0x01E9B674 BL 0x1C16E04
	0x01E9B678 MOV X19, X0
	0x01E9B67C ADRP X0, 0x2263000
	0x01E9B680 LDR X0, [X0 + 0x5F8]
	0x01E9B684 BL 0x1C16D08
	0x01E9B688 MOV X1, X19
	0x01E9B68C MOV X2, X31
	0x01E9B690 BL 0x321EFD0
	0x01E9B694 MOV X19, X0
	0x01E9B698 ADRP X0, 0x2260000
	0x01E9B69C LDR X0, [X0 + 0x578]
	0x01E9B6A0 BL 0x1C16D08
	0x01E9B6A4 BL 0x1C16F10
	0x01E9B6A8 MOV X20, X0
	0x01E9B6AC ADRP X0, 0x2263000
	0x01E9B6B0 LDR X0, [X0 + 0x510]
	0x01E9B6B4 BL 0x1C16D08
	0x01E9B6B8 MOV X2, X0
	0x01E9B6BC MOV X0, X20
	0x01E9B6C0 MOV X1, X19
	0x01E9B6C4 MOV X3, X31
	0x01E9B6C8 BL 0x330E16C
	0x01E9B6CC ADRP X0, 0x2263000
	0x01E9B6D0 LDR X0, [X0 + 0x5F0]
	0x01E9B6D4 BL 0x1C16D08
	0x01E9B6D8 MOV X1, X0
	0x01E9B6DC MOV X0, X20
	0x01E9B6E0 BL 0x1C16DEC
	0x01E9B6E4 SUB X31, X31, 0x20
	0x01E9B6E8 STP X30, X19, [X31 + 0x10]
	0x01E9B6EC AND X1, X1, 0x0
	0x01E9B6F0 ADD X2, X31, 0xC
	0x01E9B6F4 MOV X19, X0
	0x01E9B6F8 STR W31, [X31 + 0xC]
	0x01E9B6FC BL 0x1E9AA88
	0x01E9B700 MOV W8, W0
	0x01E9B704 MOV W0, W31
	0x01E9B708 TBZ X8, 0x0, 0x1E9B758
	0x01E9B70C LDR W1, [X31 + 0xC]
	0x01E9B710 LDR X8, [X19 + 0x20]
	0x01E9B714 ADD W9, W1, 0x3F
	0x01E9B718 CMP W1, 0x0
	0x01E9B71C CSEL W9, W9, W1, LT
	0x01E9B720 CBZ X8, 0x1E9B764
	0x01E9B724 LDR W10, [X8 + 0x18]
	0x01E9B728 SBFM W9, W9, 0x6, 0x1F
	0x01E9B72C CMP W9, W10
	0x01E9B730 B.CS 0x1E9B768
	0x01E9B734 ADD X8, X8, W9, 0x3, SXTW
	0x01E9B738 LDR X8, [X8 + 0x20]
	0x01E9B73C LSRV X8, X8, X1
	0x01E9B740 TBZ X8, 0x0, 0x1E9B754
	0x01E9B744 MOV X0, X19
	0x01E9B748 BL 0x1E9AF00
	0x01E9B74C MOVZ W0, 0x1
	0x01E9B750 B 0x1E9B758
	0x01E9B754 MOV W0, W31
	0x01E9B758 LDP X30, X19, [X31 + 0x10]
	0x01E9B75C ADD X31, X31, 0x20
	0x01E9B760 RET
	0x01E9B764 BL 0x1C16F20
	0x01E9B768 BL 0x1C16F28
	0x01E9B76C SUB X31, X31, 0x60
	0x01E9B770 STP X30, X25, [X31 + 0x20]
	0x01E9B774 STP X24, X23, [X31 + 0x30]
	0x01E9B778 STP X22, X21, [X31 + 0x40]
	0x01E9B77C STP X20, X19, [X31 + 0x50]
	0x01E9B780 ADRP X21, 0x253E000
	0x01E9B784 LDRB W8, [X21 + 0x2E5]
	0x01E9B788 MOV W19, W1
	0x01E9B78C MOV X20, X0
	0x01E9B790 TBNZ X8, 0x0, 0x1E9B7C0
	0x01E9B794 ADRP X0, 0x2263000
	0x01E9B798 LDR X0, [X0 + 0x5D8]
	0x01E9B79C BL 0x1C16CF4
	0x01E9B7A0 ADRP X0, 0x2263000
	0x01E9B7A4 LDR X0, [X0 + 0x5C0]
	0x01E9B7A8 BL 0x1C16CF4
	0x01E9B7AC ADRP X0, 0x2263000
	0x01E9B7B0 LDR X0, [X0 + 0x5D0]
	0x01E9B7B4 BL 0x1C16CF4
	0x01E9B7B8 MOVZ W8, 0x1
	0x01E9B7BC STRB W8, [X21 + 0x2E5]
	0x01E9B7C0 STP X31, X31, [X31 + 0x10]
	0x01E9B7C4 STR X31, [X31 + 0x8]
	0x01E9B7C8 LDR X8, [X20 + 0x18]
	0x01E9B7CC CBZ X8, 0x1E9B97C
	0x01E9B7D0 ADRP X24, 0x2263000
	0x01E9B7D4 ADRP X25, 0x2263000
	0x01E9B7D8 LDR X24, [X24 + 0x5D0]
	0x01E9B7DC LDR X25, [X25 + 0x5D8]
	0x01E9B7E0 MOV W23, W31
	0x01E9B7E4 LDR W8, [X8 + 0x18]
	0x01E9B7E8 CMP W23, W8
	0x01E9B7EC B.GE 0x1E9B960
	0x01E9B7F0 LDR X8, [X20 + 0x20]
	0x01E9B7F4 CBZ X8, 0x1E9B97C
	0x01E9B7F8 LDR W10, [X8 + 0x18]
	0x01E9B7FC ADD W9, W23, 0x3F
	0x01E9B800 CMP W23, 0x0
	0x01E9B804 CSEL W9, W9, W23, LT
	0x01E9B808 SBFM W9, W9, 0x6, 0x1F
	0x01E9B80C CMP W9, W10
	0x01E9B810 B.CS 0x1E9B980
	0x01E9B814 ADD X8, X8, W9, 0x3, SXTW
	0x01E9B818 LDR X8, [X8 + 0x20]
	0x01E9B81C STR X8, [X31 + 0x18]
	0x01E9B820 CBZ X8, 0x1E9B8F8
	0x01E9B824 ADD X0, X31, 0x18
	0x01E9B828 MOV X1, X31
	0x01E9B82C BL 0x1E872B4
	0x01E9B830 STP X0, X1, [X31 + 0x8]
	0x01E9B834 ADD X0, X31, 0x8
	0x01E9B838 MOV X1, X31
	0x01E9B83C BL 0x1E874AC
	0x01E9B840 TBZ X0, 0x0, 0x1E9B8EC
	0x01E9B844 LDR X8, [X20 + 0x18]
	0x01E9B848 CBZ X8, 0x1E9B908
	0x01E9B84C LDR W9, [X31 + 0x10]
	0x01E9B850 LDR W10, [X8 + 0x18]
	0x01E9B854 ADD W21, W9, W23
	0x01E9B858 CMP W21, W10
	0x01E9B85C B.GE 0x1E9B8EC
	0x01E9B860 TBNZ X19, 0x0, 0x1E9B8DC
	0x01E9B864 LDR X2, [X24]
	0x01E9B868 MOV X0, X8
	0x01E9B86C MOV W1, W21
	0x01E9B870 BL 0x301BCCC
	0x01E9B874 MOV X22, X0
	0x01E9B878 CBZ X0, 0x1E9B910
	0x01E9B87C LDR X8, [X22]
	0x01E9B880 LDR X1, [X25]
	0x01E9B884 LDRH W9, [X8 + 0x12E]
	0x01E9B888 CBZ X9, 0x1E9B8AC
	0x01E9B88C LDR X10, [X8 + 0xB0]
	0x01E9B890 ADD X10, X10, 0x8
	0x01E9B894 LDUR X11, [X10 - 0x8]
	0x01E9B898 CMP X11, X1
	0x01E9B89C B.EQ 0x1E9B8BC
	0x01E9B8A0 SUBS X9, X9, 0x1
	0x01E9B8A4 ADD X10, X10, 0x10
	0x01E9B8A8 B.NE 0x1E9B894
	0x01E9B8AC MOVZ W2, 0x3
	0x01E9B8B0 MOV X0, X22
	0x01E9B8B4 BL 0x1C5C788
	0x01E9B8B8 B 0x1E9B8CC
	0x01E9B8BC LDR W9, [X10]
	0x01E9B8C0 ADD W9, W9, 0x3
	0x01E9B8C4 ADD X8, X8, W9, 0x4, SXTW
	0x01E9B8C8 ADD X0, X8, 0x138
	0x01E9B8CC LDP X8, X1, [X0]
	0x01E9B8D0 MOV X0, X22
	0x01E9B8D4 BLR X8
	0x01E9B8D8 TBNZ X0, 0x0, 0x1E9B834
	0x01E9B8DC MOV X0, X20
	0x01E9B8E0 MOV W1, W21
	0x01E9B8E4 BL 0x1E9AF00
	0x01E9B8E8 B 0x1E9B834
	0x01E9B8EC ADD X0, X31, 0x8
	0x01E9B8F0 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x253F000
	009 Move W8, [X22+735]
	010 Move X19, X2
	011 Move X21, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {43}
	017 Move X0, 0x2264000
	018 Move X0, [X0+1424]
	019 Call 0x1C17CF4
	020 Move X0, 0x2264000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move X0, 0x2264000
	024 Move X0, [X0+1440]
	025 Call 0x1C17CF4
	026 Move X0, 0x2264000
	027 Move X0, [X0+1448]
	028 Call 0x1C17CF4
	029 Move X0, 0x2264000
	030 Move X0, [X0+1392]
	031 Call 0x1C17CF4
	032 Move X0, 0x2264000
	033 Move X0, [X0+1456]
	034 Call 0x1C17CF4
	035 Move X0, 0x2264000
	036 Move X0, [X0+1464]
	037 Call 0x1C17CF4
	038 Move X0, 0x2264000
	039 Move X0, [X0+1472]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X22+735], W8
	043 Move [X31+12], W31
	044 Compare X21, 0
	045 JumpIfEqual {202}
	046 Move X10, 0x2264000
	047 Move X8, [X21]
	048 Move X10, [X10+1392]
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 Move X1, [X10]
	051 Compare X9, 0
	052 JumpIfEqual {59}
	053 Move X10, [X8+176]
	054 Add X10, X10, 8
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Subtract X9, X9, 1
	058 Add X10, X10, 16
	059 Move X0, X21
	060 Move W2, W31
	061 Call 0x1C5D788
	062 NotImplemented "Instruction LDRSW not yet implemented."
	063 Add X8, X8, X9
	064 Add X0, X8, 312
	065 Move X8, [X0]
	066 Move X1, [X0+8]
	067 Move X0, X21
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Or X8, X0, X1
	070 Compare X8, 0
	071 JumpIfEqual {106}
	072 Move X22, X0
	073 Move X0, [X20+48]
	074 Compare X0, 0
	075 JumpIfEqual {201}
	076 Move X8, 0x2264000
	077 Move X8, [X8+1448]
	078 Move X23, X1
	079 Add X3, X31, 12
	080 Move X1, X22
	081 Move X4, [X8]
	082 Move X2, X23
	083 Call Dictionary`2<NetworkObjectGuid, Int32>.TryGetValue, X0, X1, X2
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {93}
	088 Move W0, [X31+12]
	089 Call NetworkPrefabId.FromIndex, X0
	090 Move X8, X0
	091 Move W0, W31
	092 Move [X19], W8
	093 Move X8, [X20+24]
	094 Compare X8, 0
	095 JumpIfEqual {201}
	096 Move X0, [X20+48]
	097 Compare X0, 0
	098 JumpIfEqual {201}
	099 Move W3, [X8+24]
	100 Move X8, 0x2264000
	101 Move X8, [X8+1440]
	102 Move X1, X22
	103 Move X2, X23
	104 Move X4, [X8]
	105 Call Dictionary`2<NetworkObjectGuid, Int32>.Add, X0, X1, X2
	106 Move X0, [X20+24]
	107 Compare X0, 0
	108 JumpIfEqual {201}
	109 Move X9, 0x2264000
	110 Move X9, [X9+1456]
	111 Move W10, [X0+28]
	112 Move X8, [X0+16]
	113 Move X9, [X9]
	114 Add W10, W10, 1
	115 Move [X0+28], W10
	116 Compare X8, 0
	117 JumpIfEqual {201}
	118 NotImplemented "Instruction LDRSW not yet implemented."
	119 Move W11, [X8+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Add W9, W10, 1
	122 Add X8, X8, X10
	123 Move [X0+24], W9
	124 Move [X8+32], X21
	125 Move X8, [X9+32]
	126 Move X1, X21
	127 Move X8, [X8+192]
	128 Move X2, [X8+112]
	129 Call List`1<Object>.AddWithResize, X0, X1
	130 Move X21, X20
	131 Add X21, X21, 32
	132 Move X23, [X21]
	133 Compare X23, 0
	134 JumpIfEqual {201}
	135 Move X0, [X20+24]
	136 Compare X0, 0
	137 JumpIfEqual {201}
	138 Move X22, 0x2264000
	139 Move X22, [X22+1464]
	140 Move X1, [X22]
	141 Call List`1<Object>.get_Capacity, X0
	142 Move X0, X20
	143 Call NetworkPrefabTable.GetBitSetCapacity, X0, X1
	144 Move W8, [X23+24]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X0, [X20+24]
	147 Compare X0, 0
	148 JumpIfEqual {201}
	149 Move X1, [X22]
	150 Call List`1<Object>.get_Capacity, X0
	151 Move X0, X20
	152 Call NetworkPrefabTable.GetBitSetCapacity, X0, X1
	153 Move X8, 0x2264000
	154 Move X8, [X8+1424]
	155 Move W1, W0
	156 Move X0, X21
	157 Move X2, [X8]
	158 Call Array.Resize, X0, X1
	159 Move X21, X20
	160 Add X21, X21, 40
	161 Move X23, [X21]
	162 Compare X23, 0
	163 JumpIfEqual {201}
	164 Move X0, [X20+24]
	165 Compare X0, 0
	166 JumpIfEqual {201}
	167 Move X1, [X22]
	168 Call List`1<Object>.get_Capacity, X0
	169 Move W8, [X23+24]
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move X0, [X20+24]
	172 Compare X0, 0
	173 JumpIfEqual {201}
	174 Move X1, [X22]
	175 Call List`1<Object>.get_Capacity, X0
	176 Move X8, 0x2264000
	177 Move X8, [X8+1432]
	178 Move W1, W0
	179 Move X0, X21
	180 Move X2, [X8]
	181 Call Array.Resize, X0, X1
	182 Move X8, [X20+24]
	183 Compare X8, 0
	184 JumpIfEqual {201}
	185 Move W8, [X8+24]
	186 Subtract W0, W8, 1
	187 Call NetworkPrefabId.FromIndex, X0
	188 Move [X19], W0
	189 Move W8, [X20+56]
	190 Move W0, 1
	191 Add W8, W8, 1
	192 Move [X20+56], W8
	193 Move X20, [X31+48]
	194 Move X19, [X31+56]
	195 Move X22, [X31+32]
	196 Move X21, [X31+40]
	197 Move X30, [X31+16]
	198 Move X23, [X31+24]
	199 Add X31, X31, 64
	200 Return X0
	201 Call 0x1C17F20
	202 Move X0, 0x225E000
	203 Move X0, [X0+1320]
	204 Call 0x1C17D08
	205 Call 0x1C17F10
	206 Move X19, X0
	207 Move X0, 0x2264000
	208 Move X0, [X0+1408]
	209 Call 0x1C17D08
	210 Move X1, X0
	211 Move X0, X19
	212 Move X2, X31
	213 Call ArgumentNullException..ctor, X0, X1
	214 Move X0, 0x2264000
	215 Move X0, [X0+1480]
	216 Call 0x1C17D08
	217 Move X1, X0
	218 Move X0, X19
	219 Call 0x1C17DEC

Method: Fusion.INetworkPrefabSource GetSource(Fusion.NetworkObjectGuid guid)

Disassembly:
	0x01E9B95C BL 0x1C16F18
	0x01E9B960 LDP X20, X19, [X31 + 0x50]
	0x01E9B964 LDP X22, X21, [X31 + 0x40]
	0x01E9B968 LDP X24, X23, [X31 + 0x30]
	0x01E9B96C LDP X30, X25, [X31 + 0x20]
	0x01E9B970 MOV W0, W31
	0x01E9B974 ADD X31, X31, 0x60
	0x01E9B978 RET
	0x01E9B97C BL 0x1C16F20
	0x01E9B980 BL 0x1C16F28
	0x01E9B984 MOV X22, X31
	0x01E9B988 B 0x1E9B990
	0x01E9B98C MOV X21, X0
	0x01E9B990 ADD X0, X31, 0x8
	0x01E9B994 MOV X1, X31
	0x01E9B998 BL 0x1E875F8
	0x01E9B99C CBNZ X22, 0x1E9B9A8
	0x01E9B9A0 MOV X0, X21
	0x01E9B9A4 BL 0x1D2C690
	0x01E9B9A8 MOV X0, X22
	0x01E9B9AC BL 0x1C16F18
	0x01E9B9B0 BL 0x1990590
	0x01E9B9B4 STR X30, [X31 - 0x20]!
	0x01E9B9B8 STP X20, X19, [X31 + 0x10]
	0x01E9B9BC ADRP X20, 0x253E000
	0x01E9B9C0 LDRB W8, [X20 + 0x2E6]
	0x01E9B9C4 MOV X19, X0
	0x01E9B9C8 TBNZ X8, 0x0, 0x1E9B9E0
	0x01E9B9CC ADRP X0, 0x2263000
	0x01E9B9D0 LDR X0, [X0 + 0x5C0]
	0x01E9B9D4 BL 0x1C16CF4
	0x01E9B9D8 MOVZ W8, 0x1
	0x01E9B9DC STRB W8, [X20 + 0x2E6]
	0x01E9B9E0 LDR X8, [X19 + 0x18]
	0x01E9B9E4 CBZ X8, 0x1E9BA18
	0x01E9B9E8 MOV W20, W31
	0x01E9B9EC LDR W8, [X8 + 0x18]
	0x01E9B9F0 CMP W20, W8
	0x01E9B9F4 B.GE 0x1E9BA1C
	0x01E9B9F8 MOV W0, W20
	0x01E9B9FC BL 0x1E9A108
	0x01E9BA00 AND X1, X0, 0x0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x253F000
	007 Move W8, [X22+736]
	008 Move X20, X2
	009 Move X21, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x2264000
	016 Move X0, [X0+1448]
	017 Call 0x1C17CF4
	018 Move X0, 0x2264000
	019 Move X0, [X0+1488]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+736], W8
	023 Move [X31+12], W31
	024 Move X0, [X19+48]
	025 Compare X0, 0
	026 JumpIfEqual {53}
	027 Move X8, 0x2264000
	028 Move X8, [X8+1448]
	029 Add X3, X31, 12
	030 Move X1, X21
	031 Move X2, X20
	032 Move X4, [X8]
	033 Call Dictionary`2<NetworkObjectGuid, Int32>.TryGetValue, X0, X1, X2
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {46}
	038 Move X0, [X19+24]
	039 Compare X0, 0
	040 JumpIfEqual {53}
	041 Move X8, 0x2264000
	042 Move W1, [X31+12]
	043 Move X8, [X8+1488]
	044 Move X2, [X8]
	045 Call List`1<Object>.get_Item, X0, X1
	046 Move X0, X31
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Return X0
	053 Call 0x1C17F20

Method: Fusion.INetworkPrefabSource GetSource(Fusion.NetworkPrefabId prefabId)

Disassembly:
	0x01E9BA04 MOV X0, X19
	0x01E9BA08 BL 0x1E9B6E4
	0x01E9BA0C LDR X8, [X19 + 0x18]
	0x01E9BA10 ADD W20, W20, 0x1
	0x01E9BA14 CBNZ X8, 0x1E9B9EC
	0x01E9BA18 BL 0x1C16F20
	0x01E9BA1C LDP X20, X19, [X31 + 0x10]
	0x01E9BA20 LDR X30, [X31], #0x20
	0x01E9BA24 RET
	0x01E9BA28 STR X30, [X31 - 0x20]!
	0x01E9BA2C STP X20, X19, [X31 + 0x10]
	0x01E9BA30 ADRP X20, 0x253E000
	0x01E9BA34 LDRB W8, [X20 + 0x2E7]
	0x01E9BA38 MOV X19, X0
	0x01E9BA3C TBNZ X8, 0x0, 0x1E9BA78
	0x01E9BA40 ADRP X0, 0x2263000
	0x01E9BA44 LDR X0, [X0 + 0x600]
	0x01E9BA48 BL 0x1C16CF4
	0x01E9BA4C ADRP X0, 0x2263000
	0x01E9BA50 LDR X0, [X0 + 0x608]
	0x01E9BA54 BL 0x1C16CF4
	0x01E9BA58 ADRP X0, 0x2263000
	0x01E9BA5C LDR X0, [X0 + 0x610]
	0x01E9BA60 BL 0x1C16CF4
	0x01E9BA64 ADRP X0, 0x2263000
	0x01E9BA68 LDR X0, [X0 + 0x5C0]
	0x01E9BA6C BL 0x1C16CF4
	0x01E9BA70 MOVZ W8, 0x1
	0x01E9BA74 STRB W8, [X20 + 0x2E7]
	0x01E9BA78 MOV X0, X19
	0x01E9BA7C BL 0x1E9B9B4
	0x01E9BA80 LDR X8, [X19 + 0x18]
	0x01E9BA84 CBZ X8, 0x1E9BB4C

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x253F000
	007 Move W8, [X21+737]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2264000
	015 Move X0, [X0+1488]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+737], W8
	019 And X1, X20, 0
	020 Add X2, X31, 12
	021 Move X0, X19
	022 Move [X31+12], W31
	023 Call NetworkPrefabTable.TryDecodePrefabId, X0, X1, X2
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {36}
	028 Move X0, [X19+24]
	029 Compare X0, 0
	030 JumpIfEqual {43}
	031 Move X8, 0x2264000
	032 Move W1, [X31+12]
	033 Move X8, [X8+1488]
	034 Move X2, [X8]
	035 Call List`1<Object>.get_Item, X0, X1
	036 Move X0, X31
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X30, [X31+16]
	040 Move X21, [X31+24]
	041 Add X31, X31, 48
	042 Return X0
	043 Call 0x1C17F20

Method: Fusion.NetworkPrefabId GetId(Fusion.NetworkObjectGuid guid)

Disassembly:
	0x01E9BB04 ADD W9, W9, 0x1
	0x01E9BB08 CMP W2, 0x1
	0x01E9BB0C STP W31, W9, [X8 + 0x18]
	0x01E9BB10 B.LT 0x1E9BB24
	0x01E9BB14 LDR X0, [X8 + 0x10]
	0x01E9BB18 MOV W1, W31
	0x01E9BB1C MOV X3, X31
	0x01E9BB20 BL 0x339FA34
	0x01E9BB24 LDR X0, [X19 + 0x30]
	0x01E9BB28 CBZ X0, 0x1E9BB4C
	0x01E9BB2C ADRP X8, 0x2263000
	0x01E9BB30 LDR X8, [X8 + 0x608]
	0x01E9BB34 LDR X1, [X8]
	0x01E9BB38 BL 0x2A8056C
	0x01E9BB3C STR W31, [X19 + 0x38]
	0x01E9BB40 LDP X20, X19, [X31 + 0x10]
	0x01E9BB44 LDR X30, [X31], #0x20
	0x01E9BB48 RET
	0x01E9BB4C BL 0x1C16F20
	0x01E9BB50 STP X30, X23, [X31 - 0x30]!
	0x01E9BB54 STP X22, X21, [X31 + 0x10]
	0x01E9BB58 STP X20, X19, [X31 + 0x20]
	0x01E9BB5C ADRP X21, 0x253E000
	0x01E9BB60 ADRP X20, 0x2263000
	0x01E9BB64 LDRB W8, [X21 + 0x2EC]
	0x01E9BB68 LDR X20, [X20 + 0x618]
	0x01E9BB6C MOV X19, X0
	0x01E9BB70 TBNZ X8, 0x0, 0x1E9BBD0
	0x01E9BB74 ADRP X0, 0x2263000
	0x01E9BB78 LDR X0, [X0 + 0x600]
	0x01E9BB7C BL 0x1C16CF4
	0x01E9BB80 ADRP X0, 0x2263000
	0x01E9BB84 LDR X0, [X0 + 0x620]
	0x01E9BB88 BL 0x1C16CF4
	0x01E9BB8C ADRP X0, 0x2263000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x253F000
	007 Move W8, [X22+738]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2264000
	016 Move X0, [X0+1448]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+738], W8
	020 Move [X31+12], W31
	021 Move X0, [X21+48]
	022 Compare X0, 0
	023 JumpIfEqual {45}
	024 Move X8, 0x2264000
	025 Move X8, [X8+1448]
	026 Add X3, X31, 12
	027 Move X1, X20
	028 Move X2, X19
	029 Move X4, [X8]
	030 Call Dictionary`2<NetworkObjectGuid, Int32>.TryGetValue, X0, X1, X2
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {38}
	035 Move W0, [X31+12]
	036 Call NetworkPrefabId.FromIndex, X0
	037 And X0, X0, 0
	038 Move X0, X31
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return X0
	045 Call 0x1C17F20

Method: Fusion.NetworkObjectGuid GetGuid(Fusion.NetworkPrefabId prefabId)

Disassembly:
	0x01E9BB90 LDR X0, [X0 + 0x628]
	0x01E9BB94 BL 0x1C16CF4
	0x01E9BB98 ADRP X0, 0x2263000
	0x01E9BB9C LDR X0, [X0 + 0x630]
	0x01E9BBA0 BL 0x1C16CF4
	0x01E9BBA4 ADRP X0, 0x2263000
	0x01E9BBA8 LDR X0, [X0 + 0x638]
	0x01E9BBAC BL 0x1C16CF4
	0x01E9BBB0 ADRP X0, 0x2263000
	0x01E9BBB4 LDR X0, [X0 + 0x640]
	0x01E9BBB8 BL 0x1C16CF4
	0x01E9BBBC ADRP X0, 0x2263000
	0x01E9BBC0 LDR X0, [X0 + 0x618]
	0x01E9BBC4 BL 0x1C16CF4
	0x01E9BBC8 MOVZ W8, 0x1
	0x01E9BBCC STRB W8, [X21 + 0x2EC]
	0x01E9BBD0 LDR X0, [X20]
	0x01E9BBD4 ADRP X23, 0x2263000
	0x01E9BBD8 ADRP X22, 0x2263000
	0x01E9BBDC ADRP X21, 0x2263000
	0x01E9BBE0 LDR W8, [X0 + 0xE0]
	0x01E9BBE4 LDR X23, [X23 + 0x640]
	0x01E9BBE8 LDR X22, [X22 + 0x638]
	0x01E9BBEC LDR X21, [X21 + 0x600]
	0x01E9BBF0 CBNZ W8, 0x1E9BBFC
	0x01E9BBF4 BL 0x1C16DFC
	0x01E9BBF8 LDR X0, [X20]
	0x01E9BBFC LDR X8, [X0 + 0xB8]
	0x01E9BC00 LDRH W8, [X8]
	0x01E9BC04 STRH W8, [X19 + 0x10]
	0x01E9BC08 LDR X0, [X23]
	0x01E9BC0C BL 0x1C16F10
	0x01E9BC10 LDR X1, [X22]
	0x01E9BC14 MOV X20, X0
	0x01E9BC18 BL 0x301B7C4
	0x01E9BC1C STR X20, [X19 + 0x18]
	0x01E9BC20 LDR X20, [X21]
	0x01E9BC24 LDR X8, [X20 + 0x38]
	0x01E9BC28 CBNZ X8, 0x1E9BC38
	0x01E9BC2C MOV X0, X20
	0x01E9BC30 BL 0x1C5C6E0
	0x01E9BC34 LDR X8, [X20 + 0x38]
	0x01E9BC38 LDR X0, [X8 + 0x10]
	0x01E9BC3C LDRB W8, [X0 + 0x135]
	0x01E9BC40 TBNZ X8, 0x0, 0x1E9BC48
	0x01E9BC44 BL 0x1C5C684
	0x01E9BC48 LDR W8, [X0 + 0xE0]
	0x01E9BC4C CBNZ W8, 0x1E9BC54
	0x01E9BC50 BL 0x1C16DFC
	0x01E9BC54 LDR X8, [X20 + 0x38]
	0x01E9BC58 ADRP X20, 0x2263000
	0x01E9BC5C LDR X0, [X8 + 0x10]
	0x01E9BC60 LDRB W8, [X0 + 0x135]
	0x01E9BC64 LDR X20, [X20 + 0x620]
	0x01E9BC68 TBNZ X8, 0x0, 0x1E9BC70
	0x01E9BC6C BL 0x1C5C684
	0x01E9BC70 LDR X8, [X0 + 0xB8]
	0x01E9BC74 LDR X8, [X8]
	0x01E9BC78 STR X8, [X19 + 0x20]
	0x01E9BC7C LDR X20, [X20]
	0x01E9BC80 LDR X8, [X20 + 0x38]
	0x01E9BC84 CBNZ X8, 0x1E9BC94
	0x01E9BC88 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x253F000
	007 Move W8, [X21+739]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2264000
	015 Move X0, [X0+1392]
	016 Call 0x1C17CF4
	017 Move X0, 0x2264000
	018 Move X0, [X0+1488]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+739], W8
	022 And X1, X20, 0
	023 Add X2, X31, 12
	024 Move X0, X19
	025 Move [X31+12], W31
	026 Call NetworkPrefabTable.TryDecodePrefabId, X0, X1, X2
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {58}
	031 Move X0, [X19+24]
	032 Compare X0, 0
	033 JumpIfEqual {73}
	034 Move X8, 0x2264000
	035 Move W1, [X31+12]
	036 Move X8, [X8+1488]
	037 Move X2, [X8]
	038 Call List`1<Object>.get_Item, X0, X1
	039 Compare X0, 0
	040 JumpIfEqual {73}
	041 Move X10, 0x2264000
	042 Move X8, [X0]
	043 Move X10, [X10+1392]
	044 Move X19, X0
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Move X1, [X10]
	047 Compare X9, 0
	048 JumpIfEqual {55}
	049 Move X10, [X8+176]
	050 Add X10, X10, 8
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X9, X9, 1
	054 Add X10, X10, 16
	055 Move X0, X19
	056 Move W2, W31
	057 Call 0x1C5D788
	058 Move X0, X31
	059 Move X1, X31
	060 NotImplemented "Instruction LDRSW not yet implemented."
	061 Add X8, X8, X9
	062 Add X0, X8, 312
	063 Move X8, [X0]
	064 Move X1, [X0+8]
	065 Move X0, X19
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X30, [X31+16]
	070 Move X21, [X31+24]
	071 Add X31, X31, 48
	072 Return X0
	073 Call 0x1C17F20

Method: System.Int32 GetInstancesCount(Fusion.NetworkPrefabId prefabId)

Disassembly:
	0x01E9BC8C BL 0x1C5C6E0
	0x01E9BC90 LDR X8, [X20 + 0x38]
	0x01E9BC94 LDR X0, [X8 + 0x10]
	0x01E9BC98 LDRB W8, [X0 + 0x135]
	0x01E9BC9C TBNZ X8, 0x0, 0x1E9BCA4
	0x01E9BCA0 BL 0x1C5C684
	0x01E9BCA4 LDR W8, [X0 + 0xE0]
	0x01E9BCA8 CBNZ W8, 0x1E9BCB0
	0x01E9BCAC BL 0x1C16DFC
	0x01E9BCB0 LDR X8, [X20 + 0x38]
	0x01E9BCB4 ADRP X21, 0x2263000
	0x01E9BCB8 ADRP X20, 0x2263000
	0x01E9BCBC LDR X0, [X8 + 0x10]
	0x01E9BCC0 LDRB W8, [X0 + 0x135]
	0x01E9BCC4 LDR X21, [X21 + 0x630]
	0x01E9BCC8 LDR X20, [X20 + 0x628]
	0x01E9BCCC TBNZ X8, 0x0, 0x1E9BCD4
	0x01E9BCD0 BL 0x1C5C684
	0x01E9BCD4 LDR X8, [X0 + 0xB8]
	0x01E9BCD8 LDR X8, [X8]
	0x01E9BCDC STR X8, [X19 + 0x28]
	0x01E9BCE0 LDR X0, [X21]
	0x01E9BCE4 BL 0x1C16F10
	0x01E9BCE8 LDR X1, [X20]
	0x01E9BCEC MOV X20, X0
	0x01E9BCF0 BL 0x2A7FAC4
	0x01E9BCF4 STR X20, [X19 + 0x30]
	0x01E9BCF8 MOV X0, X19
	0x01E9BCFC LDP X20, X19, [X31 + 0x20]
	0x01E9BD00 LDP X22, X21, [X31 + 0x10]
	0x01E9BD04 MOV X1, X31
	0x01E9BD08 LDP X30, X23, [X31], #0x30
	0x01E9BD0C B 0x33BDD8C
	0x01E9BD10 SUB X31, X31, 0x30
	0x01E9BD14 STP X30, X21, [X31 + 0x10]
	0x01E9BD18 STP X20, X19, [X31 + 0x20]
	0x01E9BD1C ADRP X21, 0x253E000
	0x01E9BD20 LDRB W8, [X21 + 0x2EF]
	0x01E9BD24 MOV X20, X1
	0x01E9BD28 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 And X1, X1, 0
	005 Add X2, X31, 12
	006 Move X19, X0
	007 Move [X31+12], W31
	008 Call NetworkPrefabTable.TryDecodePrefabId, X0, X1, X2
	009 Move W8, W0
	010 Move W0, W31
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {42}
	015 Move W8, [X31+12]
	016 Move X9, [X19+32]
	017 Add W10, W8, 63
	018 NotImplemented "Instruction CMP not yet implemented."
	019 NotImplemented "Instruction CSEL not yet implemented."
	020 Compare X9, 0
	021 JumpIfEqual {46}
	022 Move W11, [X9+24]
	023 NotImplemented "Instruction SBFM not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Add X9, X9, W10
	026 Move X9, [X9+32]
	027 NotImplemented "Instruction LSRV not yet implemented."
	028 Move TEMP, X9
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {41}
	032 Move X9, [X19+40]
	033 Compare X9, 0
	034 JumpIfEqual {46}
	035 Move W10, [X9+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Add X8, X9, W8
	038 Add X0, X8, 32
	039 Move X1, X31
	040 Call PrefabAcquireData.get_InstanceCount, X0
	041 Move W0, W31
	042 Move X30, [X31+16]
	043 Move X19, [X31+24]
	044 Add X31, X31, 32
	045 Return X0
	046 Call 0x1C17F20
	047 Call 0x1C17F28

Method: System.Int32 AddInstance(Fusion.NetworkPrefabId prefabId)

Disassembly:
	0x01E9BD2C CBNZ W8, 0x1E9BD5C
	0x01E9BD30 ADRP X0, 0x225B000
	0x01E9BD34 LDR X0, [X0 + 0x398]
	0x01E9BD38 BL 0x1C16CF4
	0x01E9BD3C ADRP X0, 0x225B000
	0x01E9BD40 LDR X0, [X0 + 0xE40]
	0x01E9BD44 BL 0x1C16CF4
	0x01E9BD48 ADRP X0, 0x225D000
	0x01E9BD4C LDR X0, [X0 + 0x28]
	0x01E9BD50 BL 0x1C16CF4
	0x01E9BD54 MOVZ W8, 0x1
	0x01E9BD58 STRB W8, [X21 + 0x2EF]
	0x01E9BD5C MOV X0, X19
	0x01E9BD60 MOV X1, X31
	0x01E9BD64 STR X31, [X31 + 0x8]
	0x01E9BD68 BL 0x1EC0810
	0x01E9BD6C CMP W0, 0x1
	0x01E9BD70 B.NE 0x1E9BD7C
	0x01E9BD74 MOV W8, W31
	0x01E9BD78 B 0x1E9BE18
	0x01E9BD7C MOV X0, X19
	0x01E9BD80 MOV X1, X31
	0x01E9BD84 BL 0x1EC0810
	0x01E9BD88 CMP W0, 0x2
	0x01E9BD8C B.NE 0x1E9BE08
	0x01E9BD90 CBZ X20, 0x1E9BE2C
	0x01E9BD94 LDR X21, [X20 + 0x20]
	0x01E9BD98 CBZ X21, 0x1E9BE2C
	0x01E9BD9C ADRP X8, 0x225B000
	0x01E9BDA0 LDR X8, [X8 + 0xE40]
	0x01E9BDA4 LDR X0, [X8]
	0x01E9BDA8 LDR W8, [X0 + 0xE0]
	0x01E9BDAC CBNZ W8, 0x1E9BDB4
	0x01E9BDB0 BL 0x1C16DFC
	0x01E9BDB4 LDR W8, [X21 + 0x20]
	0x01E9BDB8 ADDS W31, W8, 0x1
	0x01E9BDBC B.NE 0x1E9BE0C
	0x01E9BDC0 ADRP X8, 0x225B000
	0x01E9BDC4 LDR X8, [X8 + 0x398]
	0x01E9BDC8 LDR X0, [X8]
	0x01E9BDCC LDR W8, [X0 + 0xE0]
	0x01E9BDD0 CBNZ W8, 0x1E9BDD8
	0x01E9BDD4 BL 0x1C16DFC
	0x01E9BDD8 ADRP X8, 0x225D000
	0x01E9BDDC LDR X8, [X8 + 0x28]
	0x01E9BDE0 ADD X2, X31, 0x8
	0x01E9BDE4 MOVZ W1, 0x1
	0x01E9BDE8 MOV X0, X19
	0x01E9BDEC LDR X3, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 And X1, X1, 0
	005 Add X2, X31, 12
	006 Move X19, X0
	007 Move [X31+12], W31
	008 Call NetworkPrefabTable.TryDecodePrefabId, X0, X1, X2
	009 Move W20, W31
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {50}
	014 Move W8, [X31+12]
	015 Move X9, [X19+32]
	016 Add W10, W8, 63
	017 NotImplemented "Instruction CMP not yet implemented."
	018 NotImplemented "Instruction CSEL not yet implemented."
	019 Compare X9, 0
	020 JumpIfEqual {55}
	021 Move W11, [X9+24]
	022 NotImplemented "Instruction SBFM not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Add X9, X9, W10
	025 Move X9, [X9+32]
	026 NotImplemented "Instruction LSRV not yet implemented."
	027 Move TEMP, X9
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {49}
	031 Move W10, [X19+56]
	032 Move X9, [X19+40]
	033 Add W10, W10, 1
	034 Move [X19+56], W10
	035 Compare X9, 0
	036 JumpIfEqual {55}
	037 Move W10, [X9+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add X8, X9, W8
	040 Add X19, X8, 32
	041 Move X0, X19
	042 Move X1, X31
	043 Call PrefabAcquireData.get_InstanceCount, X0
	044 Add W20, W0, 1
	045 Move X0, X19
	046 Move W1, W20
	047 Move X2, X31
	048 Call PrefabAcquireData.set_InstanceCount, X0, X1
	049 Move W20, W31
	050 Move W0, W20
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Return X0
	055 Call 0x1C17F20
	056 Call 0x1C17F28

Method: System.Int32 RemoveInstance(Fusion.NetworkPrefabId prefabId)

Disassembly:
	0x01E9BDF0 BL 0x2255240
	0x01E9BDF4 TBZ X0, 0x0, 0x1E9BD74
	0x01E9BDF8 LDR X8, [X31 + 0x8]
	0x01E9BDFC CBZ X8, 0x1E9BE2C
	0x01E9BE00 LDR W8, [X8 + 0x18]
	0x01E9BE04 B 0x1E9BE18
	0x01E9BE08 CBZ X20, 0x1E9BE2C
	0x01E9BE0C LDR X8, [X20 + 0x20]
	0x01E9BE10 CBZ X8, 0x1E9BE2C
	0x01E9BE14 LDR W8, [X8 + 0x20]
	0x01E9BE18 LDP X20, X19, [X31 + 0x20]
	0x01E9BE1C LDP X30, X21, [X31 + 0x10]
	0x01E9BE20 MOV W0, W8
	0x01E9BE24 ADD X31, X31, 0x30
	0x01E9BE28 RET
	0x01E9BE2C BL 0x1C16F20
	0x01E9BE30 LDR W8, [X0]
	0x01E9BE34 AND W0, W8, 0x7FFFFFFF
	0x01E9BE38 RET
	0x01E9BE3C LDR W8, [X0]
	0x01E9BE40 BFM W8, W1, 0x0, 0x1E
	0x01E9BE44 STR W8, [X0]
	0x01E9BE48 RET
	0x01E9BE4C LDR W8, [X0]
	0x01E9BE50 UBFM W0, W8, 0x1F, 0x1F
	0x01E9BE54 RET
	0x01E9BE58 LDR W8, [X0]
	0x01E9BE5C ANDS W31, W1, 0x1
	0x01E9BE60 MOVZ W9, 0x80000000
	0x01E9BE64 CSEL W9, W9, W31, NE
	0x01E9BE68 BFM W9, W8, 0x0, 0x1E
	0x01E9BE6C STR W9, [X0]
	0x01E9BE70 RET
	0x01E9BE74 STR X30, [X31 - 0x20]!
	0x01E9BE78 STP X20, X19, [X31 + 0x10]
	0x01E9BE7C MOV W19, W1
	0x01E9BE80 MOV X1, X31
	0x01E9BE84 MOV X20, X0
	0x01E9BE88 BL 0x33BDD8C
	0x01E9BE8C MOV X0, X31
	0x01E9BE90 STR W19, [X20 + 0x10]
	0x01E9BE94 BL 0x33C151C
	0x01E9BE98 STR W0, [X20 + 0x28]
	0x01E9BE9C LDP X20, X19, [X31 + 0x10]
	0x01E9BEA0 LDR X30, [X31], #0x20
	0x01E9BEA4 RET
	0x01E9BEA8 RET
	0x01E9BEAC SUB X31, X31, 0x30
	0x01E9BEB0 STR X30, [X31 + 0x10]
	0x01E9BEB4 STP X20, X19, [X31 + 0x20]
	0x01E9BEB8 ADRP X20, 0x253E000
	0x01E9BEBC LDRB W8, [X20 + 0x2F4]
	0x01E9BEC0 MOV X19, X0
	0x01E9BEC4 TBNZ X8, 0x0, 0x1E9BEF4
	0x01E9BEC8 ADRP X0, 0x2263000
	0x01E9BECC LDR X0, [X0 + 0x5C0]
	0x01E9BED0 BL 0x1C16CF4
	0x01E9BED4 ADRP X0, 0x2263000
	0x01E9BED8 LDR X0, [X0 + 0x5D0]
	0x01E9BEDC BL 0x1C16CF4
	0x01E9BEE0 ADRP X0, 0x2263000
	0x01E9BEE4 LDR X0, [X0 + 0x648]
	0x01E9BEE8 BL 0x1C16CF4
	0x01E9BEEC MOVZ W8, 0x1
	0x01E9BEF0 STRB W8, [X20 + 0x2F4]
	0x01E9BEF4 LDR W8, [X19 + 0x10]
	0x01E9BEF8 LDR X20, [X19 + 0x30]
	0x01E9BEFC CMP W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 And X1, X1, 0
	007 Add X2, X31, 12
	008 Move X19, X0
	009 Move [X31+12], W31
	010 Call NetworkPrefabTable.TryDecodePrefabId, X0, X1, X2
	011 Move W21, W31
	012 Move TEMP, X0
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfNotEqual {72}
	016 Move W20, [X31+12]
	017 Move X8, [X19+32]
	018 Add W9, W20, 63
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CSEL not yet implemented."
	021 Compare X8, 0
	022 JumpIfEqual {79}
	023 Move W10, [X8+24]
	024 NotImplemented "Instruction SBFM not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Add X8, X8, W9
	027 Move X8, [X8+32]
	028 NotImplemented "Instruction LSRV not yet implemented."
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {71}
	033 Move X8, [X19+40]
	034 Compare X8, 0
	035 JumpIfEqual {79}
	036 Move W9, [X8+24]
	037 Move X21, W20
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add X8, X8, X21
	040 Add X0, X8, 32
	041 Move X1, X31
	042 Call PrefabAcquireData.get_InstanceCount, X0
	043 Compare W0, 0
	044 JumpIfEqual {71}
	045 Move X8, [X19+40]
	046 Compare X8, 0
	047 JumpIfEqual {79}
	048 Move W9, [X8+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Add X8, X8, X21
	051 Add X22, X8, 32
	052 Move X0, X22
	053 Move X1, X31
	054 Call PrefabAcquireData.get_InstanceCount, X0
	055 Subtract W21, W0, 1
	056 Move X0, X22
	057 Move W1, W21
	058 Move X2, X31
	059 Call PrefabAcquireData.set_InstanceCount, X0, X1
	060 Compare W21, 0
	061 JumpIfNotEqual {68}
	062 Move W8, [X19+16]
	063 Compare W8, 0
	064 JumpIfEqual {68}
	065 Move X0, X19
	066 Move W1, W20
	067 Call NetworkPrefabTable.UnloadInternal, X0, X1
	068 Move W8, [X19+56]
	069 Add W8, W8, 1
	070 Move [X19+56], W8
	071 Move W21, W31
	072 Move W0, W21
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X30, [X31+48]
	078 Return X0
	079 Call 0x1C17F20
	080 Call 0x1C17F28

Method: System.Boolean Contains(Fusion.NetworkPrefabId prefabId)

Disassembly:
	0x01E9BFF0 LDR X0, [X0 + 0x650]
	0x01E9BFF4 BL 0x1C16D08
	0x01E9BFF8 MOV X1, X0
	0x01E9BFFC MOV X0, X19
	0x01E9C000 BL 0x1C16DEC
	0x01E9C004 SUB X31, X31, 0x30
	0x01E9C008 STP X30, X21, [X31 + 0x10]
	0x01E9C00C STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 And X1, X1, 0
	003 Add X2, X31, 12
	004 Move [X31+12], W31
	005 Call NetworkPrefabTable.TryDecodePrefabId, X0, X1, X2
	006 And W0, W0, 1
	007 Move X30, [X31+16]
	008 Return X0

Method: System.Boolean IsAcquired(Fusion.NetworkPrefabId prefabId)

Disassembly:
	0x01E9C010 ADRP X21, 0x253D000
	0x01E9C014 ADRP X20, 0x2262000
	0x01E9C018 LDRB W8, [X21 + 0x2F5]
	0x01E9C01C LDR X20, [X20 + 0x658]
	0x01E9C020 MOV X19, X0
	0x01E9C024 TBNZ X8, 0x0, 0x1E9C03C
	0x01E9C028 ADRP X0, 0x2262000
	0x01E9C02C LDR X0, [X0 + 0x658]
	0x01E9C030 BL 0x1C16CF4
	0x01E9C034 MOVZ W8, 0x1
	0x01E9C038 STRB W8, [X21 + 0x2F5]
	0x01E9C03C LDUR V0, [X19 + 0x18]
	0x01E9C040 LDR X0, [X20]
	0x01E9C044 ADD X1, X31, 0x0
	0x01E9C048 STR V0, [X31]
	0x01E9C04C BL 0x1C16E04
	0x01E9C050 LDP X20, X19, [X31 + 0x20]
	0x01E9C054 LDP X30, X21, [X31 + 0x10]
	0x01E9C058 ADD X31, X31, 0x30
	0x01E9C05C RET
	0x01E9C060 STR X30, [X31 - 0x20]!
	0x01E9C064 STP X20, X19, [X31 + 0x10]
	0x01E9C068 ADRP X20, 0x253D000
	0x01E9C06C LDRB W8, [X20 + 0x2F6]
	0x01E9C070 MOV X19, X0
	0x01E9C074 TBNZ X8, 0x0, 0x1E9C08C
	0x01E9C078 ADRP X0, 0x2262000
	0x01E9C07C LDR X0, [X0 + 0x568]
	0x01E9C080 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 And X1, X1, 0
	005 Add X2, X31, 12
	006 Move X19, X0
	007 Move [X31+12], W31
	008 Call NetworkPrefabTable.TryDecodePrefabId, X0, X1, X2
	009 Move W8, W0
	010 Move W0, W31
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {29}
	015 Move W8, [X31+12]
	016 Move X9, [X19+32]
	017 Add W10, W8, 63
	018 NotImplemented "Instruction CMP not yet implemented."
	019 NotImplemented "Instruction CSEL not yet implemented."
	020 Compare X9, 0
	021 JumpIfEqual {33}
	022 Move W11, [X9+24]
	023 NotImplemented "Instruction SBFM not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Add X9, X9, W10
	026 Move X9, [X9+32]
	027 NotImplemented "Instruction LSRV not yet implemented."
	028 And W0, W8, 1
	029 Move X30, [X31+16]
	030 Move X19, [X31+24]
	031 Add X31, X31, 32
	032 Return X0
	033 Call 0x1C17F20
	034 Call 0x1C17F28

Method: System.Boolean IsAcquired(System.Int32 index)

Disassembly:
	0x01E9C084 MOVZ W8, 0x1
	0x01E9C088 STRB W8, [X20 + 0x2F6]
	0x01E9C08C LDR W8, [X19 + 0x10]
	0x01E9C090 ADDS W31, W8, 0x2
	0x01E9C094 B.NE 0x1E9C0B4
	0x01E9C098 LDR W20, [X19 + 0x28]
	0x01E9C09C MOV X0, X31
	0x01E9C0A0 BL 0x33C151C
	0x01E9C0A4 CMP W20, W0
	0x01E9C0A8 B.NE 0x1E9C0B4
	0x01E9C0AC STR W31, [X19 + 0x10]
	0x01E9C0B0 B 0x1E9C0EC
	0x01E9C0B4 ADRP X8, 0x2262000
	0x01E9C0B8 LDR X8, [X8 + 0x568]
	0x01E9C0BC LDR X0, [X8]
	0x01E9C0C0 BL 0x1C16F10
	0x01E9C0C4 MOV X1, X31
	0x01E9C0C8 MOV X20, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+32]
	003 Add W9, W1, 63
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSEL not yet implemented."
	006 Compare X8, 0
	007 JumpIfEqual {17}
	008 Move W10, [X8+24]
	009 NotImplemented "Instruction SBFM not yet implemented."
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Add X8, X8, W9
	012 Move X8, [X8+32]
	013 NotImplemented "Instruction LSRV not yet implemented."
	014 And W0, W8, 1
	015 Move X30, [X31+16]
	016 Return X0
	017 Call 0x1C17F20
	018 Call 0x1C17F28

Method: System.Void SetAcquired(System.Int32 index, System.Boolean value)

Disassembly:
	0x01E9C0CC BL 0x33BDD8C
	0x01E9C0D0 MOV X0, X31
	0x01E9C0D4 STR W31, [X20 + 0x10]
	0x01E9C0D8 BL 0x33C151C
	0x01E9C0DC STR W0, [X20 + 0x28]
	0x01E9C0E0 LDR X8, [X19 + 0x30]
	0x01E9C0E4 MOV X19, X20
	0x01E9C0E8 STR X8, [X20 + 0x30]
	0x01E9C0EC MOV X0, X19
	0x01E9C0F0 LDP X20, X19, [X31 + 0x10]
	0x01E9C0F4 LDR X30, [X31], #0x20
	0x01E9C0F8 RET
	0x01E9C0FC B 0x1E9C060
	0x01E9C100 STR X30, [X31 - 0x20]!
	0x01E9C104 STP X20, X19, [X31 + 0x10]
	0x01E9C108 ADRP X19, 0x253D000
	0x01E9C10C ADRP X20, 0x2262000
	0x01E9C110 LDRB W8, [X19 + 0x2F7]
	0x01E9C114 LDR X20, [X20 + 0x618]
	0x01E9C118 TBNZ X8, 0x0, 0x1E9C130
	0x01E9C11C ADRP X0, 0x2262000
	0x01E9C120 LDR X0, [X0 + 0x618]
	0x01E9C124 BL 0x1C16CF4
	0x01E9C128 MOVZ W8, 0x1
	0x01E9C12C STRB W8, [X19 + 0x2F7]
	0x01E9C130 LDR X8, [X20]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+32]
	003 Add W9, W1, 63
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSEL not yet implemented."
	006 Compare X8, 0
	007 JumpIfEqual {25}
	008 Move W10, [X8+24]
	009 NotImplemented "Instruction SBFM not yet implemented."
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Add X8, X8, W9
	012 Move X9, [X8+32]
	013 Move W10, 1
	014 NotImplemented "Instruction LSLV not yet implemented."
	015 And W31, W2, 1
	016 NotImplemented "Instruction BIC not yet implemented."
	017 Or X9, X9, X10
	018 NotImplemented "Instruction CSEL not yet implemented."
	019 Move [X8+32], X9
	020 Move W8, [X0+56]
	021 Add W8, W8, 1
	022 Move [X0+56], W8
	023 Move X30, [X31+16]
	024 Return 
	025 Call 0x1C17F20
	026 Call 0x1C17F28

Method: Fusion.NetworkObject Load(Fusion.NetworkPrefabId prefabId, System.Boolean isSynchronous)

Disassembly:
	0x01E9C134 LDP X20, X19, [X31 + 0x10]
	0x01E9C138 MOVZ W9, 0x100
	0x01E9C13C LDR X8, [X8 + 0xB8]
	0x01E9C140 STRH W9, [X8]
	0x01E9C144 LDR X30, [X31], #0x20
	0x01E9C148 RET
	0x01E9C14C ANDS W31, W1, 0x1
	0x01E9C150 TBZ X0, 0x0, 0x1E9C160
	0x01E9C154 MOVZ W8, 0x3
	0x01E9C158 CSINC W0, W8, W31, NE
	0x01E9C15C RET
	0x01E9C160 MOVZ W8, 0x4
	0x01E9C164 MOVZ W9, 0x2
	0x01E9C168 CSEL W0, W9, W8, NE
	0x01E9C16C RET
	0x01E9C170 LDR W0, [X0 + 0x10]
	0x01E9C174 RET
	0x01E9C178 LDR W0, [X0 + 0x14]
	0x01E9C17C RET
	0x01E9C180 LDRB W0, [X0 + 0x18]
	0x01E9C184 RET
	0x01E9C188 AND W8, W1, 0x1
	0x01E9C18C STRB W8, [X0 + 0x18]
	0x01E9C190 RET
	0x01E9C194 LDR W0, [X0 + 0x1C]
	0x01E9C198 RET
	0x01E9C19C STR W1, [X0 + 0x1C]
	0x01E9C1A0 RET
	0x01E9C1A4 LDRB W0, [X0 + 0x20]
	0x01E9C1A8 RET
	0x01E9C1AC AND W8, W1, 0x1
	0x01E9C1B0 STRB W8, [X0 + 0x20]
	0x01E9C1B4 RET
	0x01E9C1B8 LDR W0, [X0 + 0x24]
	0x01E9C1BC RET
	0x01E9C1C0 STR W1, [X0 + 0x24]
	0x01E9C1C4 RET
	0x01E9C1C8 MOVZ W8, 0x1
	0x01E9C1CC MOV X1, X31
	0x01E9C1D0 STRB W8, [X0 + 0x18]
	0x01E9C1D4 STRB W8, [X0 + 0x20]
	0x01E9C1D8 B 0x33A51F0
	0x01E9C1DC STP X30, X21, [X31 - 0x20]!
	0x01E9C1E0 STP X20, X19, [X31 + 0x10]
	0x01E9C1E4 MOV W20, W1
	0x01E9C1E8 MOVZ W8, 0x1
	0x01E9C1EC MOV X1, X31
	0x01E9C1F0 MOV W19, W2
	0x01E9C1F4 MOV X21, X0
	0x01E9C1F8 STRB W8, [X0 + 0x18]
	0x01E9C1FC STRB W8, [X0 + 0x20]
	0x01E9C200 BL 0x33A51F0
	0x01E9C204 STP W20, W19, [X21 + 0x10]
	0x01E9C208 LDP X20, X19, [X31 + 0x10]
	0x01E9C20C LDP X30, X21, [X31], #0x20
	0x01E9C210 RET
	0x01E9C214 MOV X8, X0
	0x01E9C218 MOVZ W0, 0x8
	0x01E9C21C STR X8, [X1]
	0x01E9C220 RET
	0x01E9C224 MOVZ W0, 0x8
	0x01E9C228 RET
	0x01E9C22C MOVZ W8, 0x8
	0x01E9C230 STR W8, [X1]
	0x01E9C234 LDR X0, [X0]
	0x01E9C238 RET
	0x01E9C23C AND W8, W1, 0xFFFF
	0x01E9C240 BFM X0, X8, 0x20, 0xF
	0x01E9C244 BFM X0, X2, 0x10, 0xF
	0x01E9C248 RET
	0x01E9C24C UBFM X0, X0, 0x10, 0xF
	0x01E9C250 RET
	0x01E9C254 SUB X31, X31, 0x40
	0x01E9C258 STP X30, X23, [X31 + 0x10]
	0x01E9C25C STP X22, X21, [X31 + 0x20]
	0x01E9C260 STP X20, X19, [X31 + 0x30]
	0x01E9C264 ADRP X20, 0x253D000
	0x01E9C268 ADRP X21, 0x2257000
	0x01E9C26C LDRB W8, [X20 + 0x2F8]
	0x01E9C270 LDR X21, [X21 + 0x9D0]
	0x01E9C274 MOV X19, X0
	0x01E9C278 TBNZ X8, 0x0, 0x1E9C2D8
	0x01E9C27C ADRP X0, 0x225A000
	0x01E9C280 LDR X0, [X0 + 0x398]
	0x01E9C284 BL 0x1C16CF4
	0x01E9C288 ADRP X0, 0x2257000
	0x01E9C28C LDR X0, [X0 + 0x9D0]
	0x01E9C290 BL 0x1C16CF4
	0x01E9C294 ADRP X0, 0x225C000
	0x01E9C298 LDR X0, [X0 + 0x658]
	0x01E9C29C BL 0x1C16CF4
	0x01E9C2A0 ADRP X0, 0x2262000
	0x01E9C2A4 LDR X0, [X0 + 0x660]
	0x01E9C2A8 BL 0x1C16CF4
	0x01E9C2AC ADRP X0, 0x2262000
	0x01E9C2B0 LDR X0, [X0 + 0x668]
	0x01E9C2B4 BL 0x1C16CF4
	0x01E9C2B8 ADRP X0, 0x2262000
	0x01E9C2BC LDR X0, [X0 + 0x670]
	0x01E9C2C0 BL 0x1C16CF4
	0x01E9C2C4 ADRP X0, 0x225F000
	0x01E9C2C8 LDR X0, [X0 + 0xA30]
	0x01E9C2CC BL 0x1C16CF4
	0x01E9C2D0 MOVZ W8, 0x1
	0x01E9C2D4 STRB W8, [X20 + 0x2F8]
	0x01E9C2D8 LDR X0, [X21]
	0x01E9C2DC MOVZ W1, 0x6
	0x01E9C2E0 BL 0x1C16D6C
	0x01E9C2E4 CBZ X0, 0x1E9C490
	0x01E9C2E8 ADRP X21, 0x225F000
	0x01E9C2EC LDR X21, [X21 + 0xA30]
	0x01E9C2F0 MOV X20, X0
	0x01E9C2F4 LDR X0, [X21]
	0x01E9C2F8 CBZ X0, 0x1E9C30C
	0x01E9C2FC LDR X8, [X20]
	0x01E9C300 LDR X1, [X8 + 0x40]
	0x01E9C304 BL 0x1C16E00
	0x01E9C308 CBZ X0, 0x1E9C484
	0x01E9C30C LDR W8, [X20 + 0x18]
	0x01E9C310 CBZ W8, 0x1E9C480
	0x01E9C314 LDR X8, [X21]
	0x01E9C318 ADRP X9, 0x225A000
	0x01E9C31C LDR X9, [X9 + 0x398]
	0x01E9C320 ADD X1, X31, 0x8
	0x01E9C324 STR X8, [X20 + 0x20]
	0x01E9C328 LDR W8, [X19]
	0x01E9C32C LDR X0, [X9]
	0x01E9C330 STR W8, [X31 + 0x8]
	0x01E9C334 BL 0x1C16E04
	0x01E9C338 MOV X21, X0
	0x01E9C33C CBZ X0, 0x1E9C354
	0x01E9C340 LDR X8, [X20]
	0x01E9C344 MOV X0, X21
	0x01E9C348 LDR X1, [X8 + 0x40]
	0x01E9C34C BL 0x1C16E00
	0x01E9C350 CBZ X0, 0x1E9C484
	0x01E9C354 LDR W8, [X20 + 0x18]
	0x01E9C358 CMP W8, 0x1
	0x01E9C35C B.LS 0x1E9C480
	0x01E9C360 ADRP X22, 0x2262000
	0x01E9C364 LDR X22, [X22 + 0x660]
	0x01E9C368 STR X21, [X20 + 0x28]
	0x01E9C36C LDR X0, [X22]
	0x01E9C370 CBZ X0, 0x1E9C388
	0x01E9C374 LDR X8, [X20]
	0x01E9C378 LDR X1, [X8 + 0x40]
	0x01E9C37C BL 0x1C16E00
	0x01E9C380 CBZ X0, 0x1E9C484
	0x01E9C384 LDR W8, [X20 + 0x18]
	0x01E9C388 CMP W8, 0x2
	0x01E9C38C B.LS 0x1E9C480
	0x01E9C390 LDR X8, [X22]
	0x01E9C394 ADRP X22, 0x225C000
	0x01E9C398 LDR X22, [X22 + 0x658]
	0x01E9C39C ADD X1, X31, 0x4
	0x01E9C3A0 STR X8, [X20 + 0x30]
	0x01E9C3A4 LDRH W8, [X19 + 0x4]
	0x01E9C3A8 LDR X0, [X22]
	0x01E9C3AC STRH W8, [X31 + 0x4]
	0x01E9C3B0 BL 0x1C16E04
	0x01E9C3B4 MOV X21, X0
	0x01E9C3B8 CBZ X0, 0x1E9C3D0
	0x01E9C3BC LDR X8, [X20]
	0x01E9C3C0 MOV X0, X21
	0x01E9C3C4 LDR X1, [X8 + 0x40]
	0x01E9C3C8 BL 0x1C16E00
	0x01E9C3CC CBZ X0, 0x1E9C484
	0x01E9C3D0 LDR W8, [X20 + 0x18]
	0x01E9C3D4 CMP W8, 0x3
	0x01E9C3D8 B.LS 0x1E9C480
	0x01E9C3DC ADRP X23, 0x2262000
	0x01E9C3E0 LDR X23, [X23 + 0x668]
	0x01E9C3E4 STR X21, [X20 + 0x38]
	0x01E9C3E8 LDR X0, [X23]
	0x01E9C3EC CBZ X0, 0x1E9C404
	0x01E9C3F0 LDR X8, [X20]
	0x01E9C3F4 LDR X1, [X8 + 0x40]
	0x01E9C3F8 BL 0x1C16E00
	0x01E9C3FC CBZ X0, 0x1E9C484
	0x01E9C400 LDR W8, [X20 + 0x18]
	0x01E9C404 CMP W8, 0x4
	0x01E9C408 B.LS 0x1E9C480
	0x01E9C40C LDR X8, [X23]
	0x01E9C410 ADD X1, X31, 0x0
	0x01E9C414 STR X8, [X20 + 0x40]
	0x01E9C418 LDRH W8, [X19 + 0x6]
	0x01E9C41C LDR X0, [X22]
	0x01E9C420 STRH W8, [X31]
	0x01E9C424 BL 0x1C16E04
	0x01E9C428 MOV X19, X0
	0x01E9C42C CBZ X0, 0x1E9C444
	0x01E9C430 LDR X8, [X20]
	0x01E9C434 MOV X0, X19
	0x01E9C438 LDR X1, [X8 + 0x40]
	0x01E9C43C BL 0x1C16E00
	0x01E9C440 CBZ X0, 0x1E9C484
	0x01E9C444 LDR W8, [X20 + 0x18]
	0x01E9C448 CMP W8, 0x5
	0x01E9C44C B.LS 0x1E9C480
	0x01E9C450 ADRP X8, 0x2262000
	0x01E9C454 LDR X8, [X8 + 0x670]
	0x01E9C458 STR X19, [X20 + 0x48]
	0x01E9C45C MOV X1, X20
	0x01E9C460 MOV X2, X31
	0x01E9C464 LDR X0, [X8]
	0x01E9C468 BL 0x3227C5C
	0x01E9C46C LDP X20, X19, [X31 + 0x30]
	0x01E9C470 LDP X22, X21, [X31 + 0x20]
	0x01E9C474 LDP X30, X23, [X31 + 0x10]
	0x01E9C478 ADD X31, X31, 0x40
	0x01E9C47C RET
	0x01E9C480 BL 0x1C16F28
	0x01E9C484 BL 0x1C16F44
	0x01E9C488 MOV X1, X31
	0x01E9C48C BL 0x1C16DEC
	0x01E9C490 BL 0x1C16F20
	0x01E9C494 STP X30, X23, [X31 - 0x30]!
	0x01E9C498 STP X22, X21, [X31 + 0x10]
	0x01E9C49C STP X20, X19, [X31 + 0x20]
	0x01E9C4A0 CBZ X0, 0x1E9C510
	0x01E9C4A4 MOV X22, X0
	0x01E9C4A8 LDR X0, [X0 + 0x50]
	0x01E9C4AC CBZ X0, 0x1E9C510
	0x01E9C4B0 LDR X8, [X0]
	0x01E9C4B4 MOV W19, W1
	0x01E9C4B8 LDR W20, [X0 + 0x48]
	0x01E9C4BC MOV W23, W2
	0x01E9C4C0 LDR X9, [X8 + 0x268]
	0x01E9C4C4 LDR X1, [X8 + 0x270]
	0x01E9C4C8 BLR X9
	0x01E9C4CC MOV X21, X0
	0x01E9C4D0 CBNZ W23, 0x1E9C4F0
	0x01E9C4D4 LDR X0, [X22 + 0x50]
	0x01E9C4D8 CBZ X0, 0x1E9C510
	0x01E9C4DC AND X1, X21, 0x0
	0x01E9C4E0 MOV X2, X31
	0x01E9C4E4 BL 0x1EC2EA4
	0x01E9C4E8 ANDS W31, W0, 0x1
	0x01E9C4EC CSEL X21, X31, X21, NE
	0x01E9C4F0 BFM X20, X21, 0x20, 0x1F
	0x01E9C4F4 MOV W8, W19
	0x01E9C4F8 MOV X0, X20
	0x01E9C4FC LDP X20, X19, [X31 + 0x20]
	0x01E9C500 LDP X22, X21, [X31 + 0x10]
	0x01E9C504 ORR X1, X8, 0x1FFFFFFFF
	0x01E9C508 LDP X30, X23, [X31], #0x30
	0x01E9C50C RET
	0x01E9C510 BL 0x1C16F20
	0x01E9C514 STR X30, [X31 - 0x40]!
	0x01E9C518 STP X24, X23, [X31 + 0x10]
	0x01E9C51C STP X22, X21, [X31 + 0x20]
	0x01E9C520 STP X20, X19, [X31 + 0x30]
	0x01E9C524 ADRP X22, 0x253D000
	0x01E9C528 LDRB W8, [X22 + 0x2F9]
	0x01E9C52C MOV W20, W2
	0x01E9C530 MOV X21, X1
	0x01E9C534 MOV X19, X0
	0x01E9C538 TBNZ X8, 0x0, 0x1E9C550
	0x01E9C53C ADRP X0, 0x225A000
	0x01E9C540 LDR X0, [X0 + 0xE40]
	0x01E9C544 BL 0x1C16CF4
	0x01E9C548 MOVZ W8, 0x1
	0x01E9C54C STRB W8, [X22 + 0x2F9]
	0x01E9C550 STR W31, [X31 + 0x8]
	0x01E9C554 CBZ X21, 0x1E9C5D0
	0x01E9C558 ADRP X8, 0x225A000
	0x01E9C55C LDR X8, [X8 + 0xE40]
	0x01E9C560 LDP W23, W22, [X21]
	0x01E9C564 LDR W24, [X21 + 0x14]
	0x01E9C568 LDR X0, [X8]
	0x01E9C56C MOV W8, W22
	0x01E9C570 LDR W9, [X0 + 0xE0]
	0x01E9C574 CBNZ W9, 0x1E9C580
	0x01E9C578 BL 0x1C16DFC
	0x01E9C57C LDR W8, [X21 + 0x4]
	0x01E9C580 CMP W20, 0x1
	0x01E9C584 B.NE 0x1E9C5B0
	0x01E9C588 CBNZ W8, 0x1E9C5B0
	0x01E9C58C CBZ X19, 0x1E9C5D0
	0x01E9C590 LDR X0, [X19 + 0x50]
	0x01E9C594 CBZ X0, 0x1E9C5D0
	0x01E9C598 ADD X1, X31, 0x8
	0x01E9C59C MOV X2, X31

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X20, 0x253E000
	012 Move W8, [X20+740]
	013 Move W23, W2
	014 Move X19, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {37}
	020 Move X0, 0x2263000
	021 Move X0, [X0+1496]
	022 Call 0x1C17CF4
	023 Move X0, 0x2263000
	024 Move X0, [X0+1488]
	025 Call 0x1C17CF4
	026 Move X0, 0x2263000
	027 Move X0, [X0+1352]
	028 Call 0x1C17CF4
	029 Move X0, 0x2258000
	030 Move X0, [X0+1432]
	031 Call 0x1C17CF4
	032 Move X0, 0x2263000
	033 Move X0, [X0+1504]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+740], W8
	037 And X1, X19, 0
	038 Move X0, X21
	039 Move [X31+24], W31
	040 Call NetworkPrefabTable.DecodePrefabId, X0, X1
	041 Move X8, [X21+24]
	042 Compare X8, 0
	043 JumpIfEqual {305}
	044 Move X9, 0x2263000
	045 Move X9, [X9+1488]
	046 Move W22, W0
	047 Move X0, X8
	048 Move W1, W22
	049 Move X2, [X9]
	050 Call List`1<Object>.get_Item, X0, X1
	051 Move X8, [X21+32]
	052 Add W9, W22, 63
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CSEL not yet implemented."
	055 Compare X8, 0
	056 JumpIfEqual {305}
	057 Move W10, [X8+24]
	058 NotImplemented "Instruction SBFM not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Add X8, X8, W9
	061 Move X8, [X8+32]
	062 Move X25, 0x2263000
	063 Move X25, [X25+1496]
	064 Move X20, X0
	065 NotImplemented "Instruction LSRV not yet implemented."
	066 Move TEMP, X8
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {112}
	070 Compare X20, 0
	071 JumpIfEqual {305}
	072 Move X8, [X20]
	073 Move X1, [X25]
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Compare X9, 0
	076 JumpIfEqual {83}
	077 Move X10, [X8+176]
	078 Add X10, X10, 8
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Subtract X9, X9, 1
	082 Add X10, X10, 16
	083 Move X0, X20
	084 Move W2, W31
	085 Call 0x1C5D788
	086 NotImplemented "Instruction LDRSW not yet implemented."
	087 Add X8, X8, X9
	088 Add X0, X8, 312
	089 Move X8, [X0]
	090 Move X2, [X0+8]
	091 And W24, W23, 1
	092 Move X0, X20
	093 Move W1, W24
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Move W2, 1
	096 Move X0, X21
	097 Move W1, W22
	098 Call NetworkPrefabTable.SetAcquired, X0, X1, X2
	099 Move X26, [X21+40]
	100 Add X0, X31, 24
	101 Move W1, W24
	102 Move X2, X31
	103 Move [X31+24], W31
	104 Call PrefabAcquireData.set_IsSynchronous, X0, X1
	105 Compare X26, 0
	106 JumpIfEqual {305}
	107 Move W8, [X26+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move W8, [X31+24]
	110 Add X9, X26, W22
	111 Move [X9+32], W8
	112 Compare X20, 0
	113 JumpIfEqual {305}
	114 Move X8, [X20]
	115 Move X1, [X25]
	116 NotImplemented "Instruction LDRH not yet implemented."
	117 Compare X9, 0
	118 JumpIfEqual {125}
	119 Move X10, [X8+176]
	120 Add X10, X10, 8
	121 NotImplemented "Instruction LDUR not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Subtract X9, X9, 1
	124 Add X10, X10, 16
	125 Move W2, 3
	126 Move X0, X20
	127 Call 0x1C5D788
	128 Move W9, [X10]
	129 Add W9, W9, 3
	130 Add X8, X8, W9
	131 Add X0, X8, 312
	132 Move X8, [X0]
	133 Move X1, [X0+8]
	134 Move X0, X20
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Move TEMP, X0
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfNotEqual {156}
	140 Move X8, [X20]
	141 Move X21, 0x2258000
	142 Move X1, [X25]
	143 NotImplemented "Instruction LDRH not yet implemented."
	144 Move X21, [X21+1432]
	145 Compare X9, 0
	146 JumpIfEqual {153}
	147 Move X10, [X8+176]
	148 Add X10, X10, 8
	149 NotImplemented "Instruction LDUR not yet implemented."
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Subtract X9, X9, 1
	152 Add X10, X10, 16
	153 Move W2, 2
	154 Move X0, X20
	155 Call 0x1C5D788
	156 Move TEMP, X23
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfNotEqual {292}
	160 Move X8, [X21+40]
	161 Compare X8, 0
	162 JumpIfEqual {305}
	163 Move W9, [X8+24]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move W9, W22
	166 Move X24, W9
	167 Add X8, X8, X24
	168 Add X0, X8, 32
	169 Move X1, X31
	170 Call PrefabAcquireData.get_IsSynchronous, X0
	171 Move X23, X31
	172 Move TEMP, X0
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfEqual {293}
	176 Move X8, [X20]
	177 Move X1, [X25]
	178 NotImplemented "Instruction LDRH not yet implemented."
	179 Compare X9, 0
	180 JumpIfEqual {187}
	181 Move X10, [X8+176]
	182 Add X10, X10, 8
	183 NotImplemented "Instruction LDUR not yet implemented."
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Subtract X9, X9, 1
	186 Add X10, X10, 16
	187 Move W2, 1
	188 Move X0, X20
	189 Call 0x1C5D788
	190 Move W9, [X10]
	191 Add W9, W9, 2
	192 Add X8, X8, W9
	193 Add X0, X8, 312
	194 Move X8, [X0]
	195 Move X1, [X0+8]
	196 Move X24, 0x2263000
	197 Move X22, 0x2263000
	198 Move X24, [X24+1352]
	199 Move X22, [X22+1504]
	200 Move X0, X20
	201 NotImplemented "Instruction BLR not yet implemented."
	202 Move X8, [X21]
	203 Move X23, X0
	204 Move W9, [X8+224]
	205 Compare W9, 0
	206 JumpIfNotEqual {209}
	207 Move X0, X8
	208 Call 0x1C17DFC
	209 Move X0, X23
	210 Move X1, X31
	211 Call Object.op_Implicit, X0
	212 Move W20, W0
	213 Move X0, [X24]
	214 Add X1, X31, 8
	215 Move [X31+8], W19
	216 Call 0x1C17E04
	217 Move X8, [X22]
	218 Move X1, X0
	219 Move X2, X31
	220 Move X0, X8
	221 Call String.Format, X0, X1
	222 Move X1, X0
	223 And W0, W20, 1
	224 Move X2, X31
	225 Call Assert.Always, X0, X1
	226 Move W9, [X10]
	227 Add W9, W9, 1
	228 Add X8, X8, W9
	229 Add X0, X8, 312
	230 Move X8, [X0]
	231 Move X1, [X0+8]
	232 Move X0, X20
	233 NotImplemented "Instruction BLR not yet implemented."
	234 Move X8, [X20]
	235 Move X1, [X25]
	236 NotImplemented "Instruction LDRH not yet implemented."
	237 Compare X9, 0
	238 JumpIfEqual {245}
	239 Move X10, [X8+176]
	240 Add X10, X10, 8
	241 NotImplemented "Instruction LDUR not yet implemented."
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Subtract X9, X9, 1
	244 Add X10, X10, 16
	245 Move X0, X20
	246 Move W2, W31
	247 Call 0x1C5D788
	248 NotImplemented "Instruction LDRSW not yet implemented."
	249 Add X8, X8, X9
	250 Add X0, X8, 312
	251 Move X8, [X0]
	252 Move X2, [X0+8]
	253 Move W1, 1
	254 Move X0, X20
	255 NotImplemented "Instruction BLR not yet implemented."
	256 Move X8, [X21+40]
	257 Compare X8, 0
	258 JumpIfEqual {305}
	259 Move W9, [X8+24]
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Add X8, X8, X24
	262 Add X0, X8, 32
	263 Move W1, 1
	264 Move X2, X31
	265 Call PrefabAcquireData.set_IsSynchronous, X0, X1
	266 Move X8, [X20]
	267 Move X1, [X25]
	268 NotImplemented "Instruction LDRH not yet implemented."
	269 Compare X9, 0
	270 JumpIfEqual {277}
	271 Move X10, [X8+176]
	272 Add X10, X10, 8
	273 NotImplemented "Instruction LDUR not yet implemented."
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Subtract X9, X9, 1
	276 Add X10, X10, 16
	277 Move W2, 3
	278 Move X0, X20
	279 Call 0x1C5D788
	280 Move W9, [X10]
	281 Add W9, W9, 3
	282 Add X8, X8, W9
	283 Add X0, X8, 312
	284 Move X8, [X0]
	285 Move X1, [X0+8]
	286 Move X0, X20
	287 NotImplemented "Instruction BLR not yet implemented."
	288 Move TEMP, X0
	289 And TEMP, TEMP, 1
	290 Compare TEMP, 1
	291 JumpIfEqual {140}
	292 Move X23, X31
	293 Move X0, X23
	294 Move X20, [X31+80]
	295 Move X19, [X31+88]
	296 Move X22, [X31+64]
	297 Move X21, [X31+72]
	298 Move X24, [X31+48]
	299 Move X23, [X31+56]
	300 Move X26, [X31+32]
	301 Move X25, [X31+40]
	302 Move X30, [X31+16]
	303 Add X31, X31, 96
	304 Return X0
	305 Call 0x1C17F20
	306 Call 0x1C17F28

Method: System.Boolean Unload(Fusion.NetworkPrefabId prefabId)

Disassembly:
	0x01E9C6E4 LDR X8, [X20]
	0x01E9C6E8 MOV X0, X21
	0x01E9C6EC LDR X1, [X8 + 0x40]
	0x01E9C6F0 BL 0x1C16E00
	0x01E9C6F4 CBZ X0, 0x1E9C8AC
	0x01E9C6F8 LDR W8, [X20 + 0x18]
	0x01E9C6FC CMP W8, 0x1
	0x01E9C700 B.LS 0x1E9C8A8
	0x01E9C704 ADRP X22, 0x2262000
	0x01E9C708 LDR X22, [X22 + 0x698]
	0x01E9C70C STR X21, [X20 + 0x28]
	0x01E9C710 LDR X0, [X22]
	0x01E9C714 CBZ X0, 0x1E9C72C
	0x01E9C718 LDR X8, [X20]
	0x01E9C71C LDR X1, [X8 + 0x40]
	0x01E9C720 BL 0x1C16E00
	0x01E9C724 CBZ X0, 0x1E9C8AC
	0x01E9C728 LDR W8, [X20 + 0x18]
	0x01E9C72C CMP W8, 0x2
	0x01E9C730 B.LS 0x1E9C8A8
	0x01E9C734 LDR X8, [X22]
	0x01E9C738 ADRP X9, 0x225A000
	0x01E9C73C LDR X9, [X9 + 0xE40]
	0x01E9C740 ADD X1, X31, 0x8
	0x01E9C744 STR X8, [X20 + 0x30]
	0x01E9C748 LDR W8, [X19 + 0x4]
	0x01E9C74C LDR X0, [X9]
	0x01E9C750 STR W8, [X31 + 0x8]
	0x01E9C754 BL 0x1C16E04
	0x01E9C758 MOV X21, X0
	0x01E9C75C CBZ X0, 0x1E9C774
	0x01E9C760 LDR X8, [X20]
	0x01E9C764 MOV X0, X21
	0x01E9C768 LDR X1, [X8 + 0x40]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 And X1, X1, 0
	005 Add X2, X31, 12
	006 Move X19, X0
	007 Move [X31+12], W31
	008 Call NetworkPrefabTable.TryDecodePrefabId, X0, X1, X2
	009 Move W8, W0
	010 Move W0, W31
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {36}
	015 Move W1, [X31+12]
	016 Move X8, [X19+32]
	017 Add W9, W1, 63
	018 NotImplemented "Instruction CMP not yet implemented."
	019 NotImplemented "Instruction CSEL not yet implemented."
	020 Compare X8, 0
	021 JumpIfEqual {40}
	022 Move W10, [X8+24]
	023 NotImplemented "Instruction SBFM not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Add X8, X8, W9
	026 Move X8, [X8+32]
	027 NotImplemented "Instruction LSRV not yet implemented."
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {35}
	032 Move X0, X19
	033 Call NetworkPrefabTable.UnloadInternal, X0, X1
	034 Move W0, 1
	035 Move W0, W31
	036 Move X30, [X31+16]
	037 Move X19, [X31+24]
	038 Add X31, X31, 32
	039 Return X0
	040 Call 0x1C17F20
	041 Call 0x1C17F28

Method: System.Int32 UnloadUnreferenced(System.Boolean includeIncompleteLoads = False)

Disassembly:
	0x01E9C76C BL 0x1C16E00
	0x01E9C770 CBZ X0, 0x1E9C8AC
	0x01E9C774 LDR W8, [X20 + 0x18]
	0x01E9C778 CMP W8, 0x3
	0x01E9C77C B.LS 0x1E9C8A8
	0x01E9C780 ADRP X22, 0x2262000
	0x01E9C784 LDR X22, [X22 + 0x6A0]
	0x01E9C788 STR X21, [X20 + 0x38]
	0x01E9C78C LDR X0, [X22]
	0x01E9C790 CBZ X0, 0x1E9C7A8
	0x01E9C794 LDR X8, [X20]
	0x01E9C798 LDR X1, [X8 + 0x40]
	0x01E9C79C BL 0x1C16E00
	0x01E9C7A0 CBZ X0, 0x1E9C8AC
	0x01E9C7A4 LDR W8, [X20 + 0x18]
	0x01E9C7A8 CMP W8, 0x4
	0x01E9C7AC B.LS 0x1E9C8A8
	0x01E9C7B0 LDR X8, [X22]
	0x01E9C7B4 ADRP X9, 0x2257000
	0x01E9C7B8 LDR X9, [X9 + 0xB58]
	0x01E9C7BC ADD X1, X31, 0x1C
	0x01E9C7C0 STR X8, [X20 + 0x40]
	0x01E9C7C4 LDRB W8, [X19 + 0xC]
	0x01E9C7C8 LDR X0, [X9]
	0x01E9C7CC STRB W8, [X31 + 0x1C]
	0x01E9C7D0 BL 0x1C16E04
	0x01E9C7D4 MOV X21, X0
	0x01E9C7D8 CBZ X0, 0x1E9C7F0
	0x01E9C7DC LDR X8, [X20]
	0x01E9C7E0 MOV X0, X21
	0x01E9C7E4 LDR X1, [X8 + 0x40]
	0x01E9C7E8 BL 0x1C16E00
	0x01E9C7EC CBZ X0, 0x1E9C8AC
	0x01E9C7F0 LDR W8, [X20 + 0x18]
	0x01E9C7F4 CMP W8, 0x5
	0x01E9C7F8 B.LS 0x1E9C8A8
	0x01E9C7FC ADRP X22, 0x2262000
	0x01E9C800 LDR X22, [X22 + 0x688]
	0x01E9C804 STR X21, [X20 + 0x48]
	0x01E9C808 LDR X0, [X22]
	0x01E9C80C CBZ X0, 0x1E9C824
	0x01E9C810 LDR X8, [X20]
	0x01E9C814 LDR X1, [X8 + 0x40]
	0x01E9C818 BL 0x1C16E00
	0x01E9C81C CBZ X0, 0x1E9C8AC
	0x01E9C820 LDR W8, [X20 + 0x18]
	0x01E9C824 CMP W8, 0x6
	0x01E9C828 B.LS 0x1E9C8A8
	0x01E9C82C LDR X8, [X22]
	0x01E9C830 ADRP X9, 0x2262000
	0x01E9C834 LDR X9, [X9 + 0x678]
	0x01E9C838 ADD X1, X31, 0x4
	0x01E9C83C STR X8, [X20 + 0x50]
	0x01E9C840 LDR W8, [X19 + 0x8]
	0x01E9C844 LDR X0, [X9]
	0x01E9C848 STR W8, [X31 + 0x4]
	0x01E9C84C BL 0x1C16E04
	0x01E9C850 MOV X19, X0
	0x01E9C854 CBZ X0, 0x1E9C86C
	0x01E9C858 LDR X8, [X20]
	0x01E9C85C MOV X0, X19
	0x01E9C860 LDR X1, [X8 + 0x40]
	0x01E9C864 BL 0x1C16E00
	0x01E9C868 CBZ X0, 0x1E9C8AC
	0x01E9C86C LDR W8, [X20 + 0x18]
	0x01E9C870 CMP W8, 0x7
	0x01E9C874 B.LS 0x1E9C8A8
	0x01E9C878 ADRP X8, 0x2262000
	0x01E9C87C LDR X8, [X8 + 0x690]
	0x01E9C880 STR X19, [X20 + 0x58]
	0x01E9C884 MOV X1, X20
	0x01E9C888 MOV X2, X31
	0x01E9C88C LDR X0, [X8]
	0x01E9C890 BL 0x3227C5C
	0x01E9C894 LDP X20, X19, [X31 + 0x30]
	0x01E9C898 LDP X22, X21, [X31 + 0x20]
	0x01E9C89C LDR X30, [X31 + 0x10]
	0x01E9C8A0 ADD X31, X31, 0x40
	0x01E9C8A4 RET
	0x01E9C8A8 BL 0x1C16F28
	0x01E9C8AC BL 0x1C16F44
	0x01E9C8B0 MOV X1, X31
	0x01E9C8B4 BL 0x1C16DEC
	0x01E9C8B8 BL 0x1C16F20
	0x01E9C8BC SUB X31, X31, 0x40
	0x01E9C8C0 STR X30, [X31 + 0x10]
	0x01E9C8C4 STP X22, X21, [X31 + 0x20]
	0x01E9C8C8 STP X20, X19, [X31 + 0x30]
	0x01E9C8CC ADRP X19, 0x253D000
	0x01E9C8D0 ADRP X21, 0x2257000
	0x01E9C8D4 ADRP X22, 0x2257000
	0x01E9C8D8 LDRB W8, [X19 + 0x2FC]
	0x01E9C8DC LDR X21, [X21 + 0x9D0]
	0x01E9C8E0 LDR X22, [X22 + 0x758]
	0x01E9C8E4 MOV X20, X0
	0x01E9C8E8 TBNZ X8, 0x0, 0x1E9C918
	0x01E9C8EC ADRP X0, 0x2257000
	0x01E9C8F0 LDR X0, [X0 + 0x758]
	0x01E9C8F4 BL 0x1C16CF4
	0x01E9C8F8 ADRP X0, 0x2257000
	0x01E9C8FC LDR X0, [X0 + 0x9D0]
	0x01E9C900 BL 0x1C16CF4
	0x01E9C904 ADRP X0, 0x2262000
	0x01E9C908 LDR X0, [X0 + 0x6A8]
	0x01E9C90C BL 0x1C16CF4
	0x01E9C910 MOVZ W8, 0x1
	0x01E9C914 STRB W8, [X19 + 0x2FC]
	0x01E9C918 LDR X0, [X21]
	0x01E9C91C MOVZ W1, 0x4
	0x01E9C920 BL 0x1C16D6C
	0x01E9C924 MOV X19, X0
	0x01E9C928 LDR W8, [X20]
	0x01E9C92C LDR X0, [X22]
	0x01E9C930 ADD X1, X31, 0x1C
	0x01E9C934 STR W8, [X31 + 0x1C]
	0x01E9C938 BL 0x1C16E04
	0x01E9C93C CBZ X19, 0x1E9CA50
	0x01E9C940 MOV X21, X0
	0x01E9C944 CBZ X0, 0x1E9C95C
	0x01E9C948 LDR X8, [X19]
	0x01E9C94C MOV X0, X21
	0x01E9C950 LDR X1, [X8 + 0x40]
	0x01E9C954 BL 0x1C16E00
	0x01E9C958 CBZ X0, 0x1E9CA44
	0x01E9C95C LDR W8, [X19 + 0x18]
	0x01E9C960 CBZ W8, 0x1E9CA40
	0x01E9C964 STR X21, [X19 + 0x20]
	0x01E9C968 LDR W8, [X20 + 0x4]
	0x01E9C96C LDR X0, [X22]
	0x01E9C970 ADD X1, X31, 0x18
	0x01E9C974 STR W8, [X31 + 0x18]
	0x01E9C978 BL 0x1C16E04
	0x01E9C97C MOV X21, X0
	0x01E9C980 CBZ X0, 0x1E9C998
	0x01E9C984 LDR X8, [X19]
	0x01E9C988 MOV X0, X21
	0x01E9C98C LDR X1, [X8 + 0x40]
	0x01E9C990 BL 0x1C16E00
	0x01E9C994 CBZ X0, 0x1E9CA44
	0x01E9C998 LDR W8, [X19 + 0x18]
	0x01E9C99C CMP W8, 0x1
	0x01E9C9A0 B.LS 0x1E9CA40
	0x01E9C9A4 STR X21, [X19 + 0x28]
	0x01E9C9A8 LDR W8, [X20 + 0x8]
	0x01E9C9AC LDR X0, [X22]
	0x01E9C9B0 ADD X1, X31, 0xC

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X21, 0x253E000
	011 Move W8, [X21+741]
	012 Move W19, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x2263000
	019 Move X0, [X0+1496]
	020 Call 0x1C17CF4
	021 Move X0, 0x2263000
	022 Move X0, [X0+1472]
	023 Call 0x1C17CF4
	024 Move X0, 0x2263000
	025 Move X0, [X0+1488]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+741], W8
	029 Move [X31+16], X31
	030 Move [X31+24], X31
	031 Move [X31+8], X31
	032 Move X8, [X20+24]
	033 Compare X8, 0
	034 JumpIfEqual {148}
	035 Move X24, 0x2263000
	036 Move X25, 0x2263000
	037 Move X24, [X24+1488]
	038 Move X25, [X25+1496]
	039 Move W23, W31
	040 Move W8, [X8+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X8, [X20+32]
	043 Compare X8, 0
	044 JumpIfEqual {148}
	045 Move W10, [X8+24]
	046 Add W9, W23, 63
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CSEL not yet implemented."
	049 NotImplemented "Instruction SBFM not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add X8, X8, W9
	052 Move X8, [X8+32]
	053 Move [X31+24], X8
	054 Compare X8, 0
	055 JumpIfEqual {118}
	056 Add X0, X31, 24
	057 Move X1, X31
	058 Call BitSet64.GetEnumerator, X0
	059 Move [X31+8], X0
	060 Move [X31+16], X1
	061 Add X0, X31, 8
	062 Move X1, X31
	063 Call Enumerator.MoveNext, X0
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {115}
	068 Move X8, [X20+24]
	069 Compare X8, 0
	070 JumpIfEqual {122}
	071 Move W9, [X31+16]
	072 Move W10, [X8+24]
	073 Add W21, W9, W23
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move TEMP, X19
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {112}
	079 Move X2, [X24]
	080 Move X0, X8
	081 Move W1, W21
	082 Call List`1<Object>.get_Item, X0, X1
	083 Move X22, X0
	084 Compare X0, 0
	085 JumpIfEqual {123}
	086 Move X8, [X22]
	087 Move X1, [X25]
	088 NotImplemented "Instruction LDRH not yet implemented."
	089 Compare X9, 0
	090 JumpIfEqual {97}
	091 Move X10, [X8+176]
	092 Add X10, X10, 8
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Subtract X9, X9, 1
	096 Add X10, X10, 16
	097 Move W2, 3
	098 Move X0, X22
	099 Call 0x1C5D788
	100 Move W9, [X10]
	101 Add W9, W9, 3
	102 Add X8, X8, W9
	103 Add X0, X8, 312
	104 Move X8, [X0]
	105 Move X1, [X0+8]
	106 Move X0, X22
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfEqual {61}
	112 Move X0, X20
	113 Move W1, W21
	114 Call NetworkPrefabTable.UnloadInternal, X0, X1
	115 Add X0, X31, 8
	116 Move X1, X31
	117 Call Enumerator.Dispose, X0
	118 Move X8, [X20+24]
	119 Add W23, W23, 64
	120 Compare X8, 0
	121 JumpIfNotEqual {40}
	122 Call 0x1C17F20
	123 Call 0x1C17F20
	124 Move X21, X0
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X0, X21
	127 Call 0x3EB2AD0
	128 Move X22, [X0]
	129 Call 0x3EB2AE0
	130 Add X0, X31, 8
	131 Move X1, X31
	132 Call Enumerator.Dispose, X0
	133 Compare X22, 0
	134 JumpIfEqual {118}
	135 Move X0, X22
	136 Call 0x1C17F18
	137 Move X20, [X31+80]
	138 Move X19, [X31+88]
	139 Move X22, [X31+64]
	140 Move X21, [X31+72]
	141 Move X24, [X31+48]
	142 Move X23, [X31+56]
	143 Move X30, [X31+32]
	144 Move X25, [X31+40]
	145 Move W0, W31
	146 Add X31, X31, 96
	147 Return X0
	148 Call 0x1C17F20
	149 Call 0x1C17F28
	150 Move X22, X31
	151 Move X21, X0
	152 Add X0, X31, 8
	153 Move X1, X31
	154 Call Enumerator.Dispose, X0
	155 Compare X22, 0
	156 JumpIfNotEqual {159}
	157 Move X0, X21
	158 Call 0x1D2D690
	159 Move X0, X22
	160 Call 0x1C17F18
	161 Call 0x1991590

Method: System.Void UnloadAll()

Disassembly:
	0x01E9C9B4 STR W8, [X31 + 0xC]
	0x01E9C9B8 BL 0x1C16E04
	0x01E9C9BC MOV X21, X0
	0x01E9C9C0 CBZ X0, 0x1E9C9D8
	0x01E9C9C4 LDR X8, [X19]
	0x01E9C9C8 MOV X0, X21
	0x01E9C9CC LDR X1, [X8 + 0x40]
	0x01E9C9D0 BL 0x1C16E00
	0x01E9C9D4 CBZ X0, 0x1E9CA44
	0x01E9C9D8 LDR W8, [X19 + 0x18]
	0x01E9C9DC CMP W8, 0x2
	0x01E9C9E0 B.LS 0x1E9CA40
	0x01E9C9E4 STR X21, [X19 + 0x30]
	0x01E9C9E8 LDR X20, [X20 + 0x10]
	0x01E9C9EC CBZ X20, 0x1E9CA08
	0x01E9C9F0 LDR X8, [X19]
	0x01E9C9F4 MOV X0, X20
	0x01E9C9F8 LDR X1, [X8 + 0x40]
	0x01E9C9FC BL 0x1C16E00
	0x01E9CA00 CBZ X0, 0x1E9CA44
	0x01E9CA04 LDR W8, [X19 + 0x18]
	0x01E9CA08 CMP W8, 0x3
	0x01E9CA0C B.LS 0x1E9CA40
	0x01E9CA10 ADRP X8, 0x2262000
	0x01E9CA14 LDR X8, [X8 + 0x6A8]
	0x01E9CA18 STR X20, [X19 + 0x38]
	0x01E9CA1C MOV X1, X19
	0x01E9CA20 MOV X2, X31
	0x01E9CA24 LDR X0, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x253E000
	005 Move W8, [X20+742]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2263000
	012 Move X0, [X0+1472]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+742], W8
	016 Move X8, [X19+24]
	017 Compare X8, 0
	018 JumpIfEqual {31}
	019 Move W20, W31
	020 Move W8, [X8+24]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W0, W20
	023 Call NetworkPrefabId.FromIndex, X0
	024 And X1, X0, 0
	025 Move X0, X19
	026 Call NetworkPrefabTable.Unload, X0, X1
	027 Move X8, [X19+24]
	028 Add W20, W20, 1
	029 Compare X8, 0
	030 JumpIfNotEqual {20}
	031 Call 0x1C17F20
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return 

Method: System.Void Clear()

Disassembly:
	0x01E9CA28 BL 0x3227C5C
	0x01E9CA2C LDP X20, X19, [X31 + 0x30]
	0x01E9CA30 LDP X22, X21, [X31 + 0x20]
	0x01E9CA34 LDR X30, [X31 + 0x10]
	0x01E9CA38 ADD X31, X31, 0x40
	0x01E9CA3C RET
	0x01E9CA40 BL 0x1C16F28
	0x01E9CA44 BL 0x1C16F44
	0x01E9CA48 MOV X1, X31
	0x01E9CA4C BL 0x1C16DEC
	0x01E9CA50 BL 0x1C16F20
	0x01E9CA54 STR X30, [X31 - 0x30]!
	0x01E9CA58 STP X22, X21, [X31 + 0x10]
	0x01E9CA5C STP X20, X19, [X31 + 0x20]
	0x01E9CA60 LDR X8, [X2 + 0x8]
	0x01E9CA64 STP X1, X2, [X0 + 0x20]
	0x01E9CA68 MOV X19, X0
	0x01E9CA6C MOV X20, X2
	0x01E9CA70 STR X8, [X0 + 0x10]
	0x01E9CA74 LDRB W22, [X2 + 0x52]
	0x01E9CA78 STR X0, [X0 + 0x40]
	0x01E9CA7C MOV X0, X2
	0x01E9CA80 MOV X21, X1
	0x01E9CA84 BL 0x1C16D84
	0x01E9CA88 TBZ X0, 0x0, 0x1E9CAA0
	0x01E9CA8C CMP W22, 0x2
	0x01E9CA90 B.NE 0x1E9CADC
	0x01E9CA94 ADRP X8, 0xFFFFFFFFFFAFA000
	0x01E9CA98 ADD X8, X8, 0x6E0
	0x01E9CA9C B 0x1E9CB20
	0x01E9CAA0 CMP W22, 0x1
	0x01E9CAA4 B.NE 0x1E9CAD8
	0x01E9CAA8 LDRB W8, [X19 + 0x70]
	0x01E9CAAC CBZ W8, 0x1E9CAF0
	0x01E9CAB0 MOV X0, X20
	0x01E9CAB4 BL 0x1C16D7C
	0x01E9CAB8 MOV W21, W0
	0x01E9CABC MOV X0, X20
	0x01E9CAC0 BL 0x1C17238
	0x01E9CAC4 TBZ X21, 0x0, 0x1E9CAFC
	0x01E9CAC8 TBZ X0, 0x0, 0x1E9CB0C
	0x01E9CACC ADRP X8, 0xFFFFFFFFFFAFA000
	0x01E9CAD0 ADD X8, X8, 0x7FC
	0x01E9CAD4 B 0x1E9CB20
	0x01E9CAD8 CBZ X21, 0x1E9CB40
	0x01E9CADC LDR X8, [X19 + 0x10]
	0x01E9CAE0 LDR X9, [X19 + 0x20]
	0x01E9CAE4 STR X8, [X19 + 0x18]
	0x01E9CAE8 STR X9, [X19 + 0x40]
	0x01E9CAEC B 0x1E9CB24
	0x01E9CAF0 ADRP X8, 0xFFFFFFFFFFAFA000
	0x01E9CAF4 ADD X8, X8, 0x6BC
	0x01E9CAF8 B 0x1E9CB20
	0x01E9CAFC TBZ X0, 0x0, 0x1E9CB18
	0x01E9CB00 ADRP X8, 0xFFFFFFFFFFAFA000
	0x01E9CB04 ADD X8, X8, 0x724
	0x01E9CB08 B 0x1E9CB20
	0x01E9CB0C ADRP X8, 0xFFFFFFFFFFAFA000
	0x01E9CB10 ADD X8, X8, 0x7B0
	0x01E9CB14 B 0x1E9CB20
	0x01E9CB18 ADRP X8, 0xFFFFFFFFFFAFA000
	0x01E9CB1C ADD X8, X8, 0x6F4
	0x01E9CB20 STR X8, [X19 + 0x18]
	0x01E9CB24 ADRP X8, 0xFFFFFFFFFFAFA000
	0x01E9CB28 ADD X8, X8, 0x664
	0x01E9CB2C STR X8, [X19 + 0x38]
	0x01E9CB30 LDP X20, X19, [X31 + 0x20]
	0x01E9CB34 LDP X22, X21, [X31 + 0x10]
	0x01E9CB38 LDR X30, [X31], #0x30
	0x01E9CB3C RET
	0x01E9CB40 ADRP X1, 0xFFFFFFFFFEC7F000
	0x01E9CB44 ADD X1, X1, 0xEE3
	0x01E9CB48 MOV X0, X31
	0x01E9CB4C BL 0x1C16F3C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x253E000
	005 Move W8, [X20+743]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {25}
	011 Move X0, 0x2263000
	012 Move X0, [X0+1536]
	013 Call 0x1C17CF4
	014 Move X0, 0x2263000
	015 Move X0, [X0+1544]
	016 Call 0x1C17CF4
	017 Move X0, 0x2263000
	018 Move X0, [X0+1552]
	019 Call 0x1C17CF4
	020 Move X0, 0x2263000
	021 Move X0, [X0+1472]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+743], W8
	025 Move X0, X19
	026 Call NetworkPrefabTable.UnloadAll, X0
	027 Move X8, [X19+24]
	028 Compare X8, 0
	029 JumpIfEqual {91}
	030 Move X0, [X19+40]
	031 Move W2, [X8+24]
	032 Move X20, 0x2263000
	033 Move X20, [X20+1536]
	034 Move W1, W31
	035 Move X3, X31
	036 Call Array.Clear, X0, X1, X2
	037 Move X20, [X20]
	038 Move X8, [X20+56]
	039 Compare X8, 0
	040 JumpIfNotEqual {44}
	041 Move X0, X20
	042 Call 0x1C5D6E0
	043 Move X8, [X20+56]
	044 Move X0, [X8+16]
	045 Move W8, [X0+309]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {51}
	050 Call 0x1C5D684
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X8, [X20+56]
	056 Move X0, [X8+16]
	057 Move W8, [X0+309]
	058 Move TEMP, X8
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {63}
	062 Call 0x1C5D684
	063 Move X8, [X0+184]
	064 Move X9, [X8]
	065 Move X8, [X19+24]
	066 Move [X19+32], X9
	067 Compare X8, 0
	068 JumpIfEqual {91}
	069 Move W2, [X8+24]
	070 Move W9, [X8+28]
	071 Add W9, W9, 1
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move [X8+24], W31
	074 Move [X8+28], W9
	075 Move X0, [X8+16]
	076 Move W1, W31
	077 Move X3, X31
	078 Call Array.Clear, X0, X1, X2
	079 Move X0, [X19+48]
	080 Compare X0, 0
	081 JumpIfEqual {91}
	082 Move X8, 0x2263000
	083 Move X8, [X8+1544]
	084 Move X1, [X8]
	085 Call Dictionary`2<NetworkObjectGuid, Int32>.Clear, X0
	086 Move [X19+56], W31
	087 Move X20, [X31+16]
	088 Move X19, [X31+24]
	089 Move X30, [X31+32]
	090 Return 
	091 Call 0x1C17F20

Method: System.Void UnloadInternal(System.Int32 index)

Disassembly:
	0x01E9BF00 B.EQ 0x1E9BF1C
	0x01E9BF04 CBNZ W8, 0x1E9BFA8
	0x01E9BF08 MOVN W8, 0x0
	0x01E9BF0C MOV W0, W31
	0x01E9BF10 STR W8, [X19 + 0x10]
	0x01E9BF14 STR W31, [X19 + 0x38]
	0x01E9BF18 B 0x1E9BF30
	0x01E9BF1C LDR W8, [X19 + 0x38]
	0x01E9BF20 MOVN W9, 0x0
	0x01E9BF24 STR W9, [X19 + 0x10]
	0x01E9BF28 ADD W0, W8, 0x1
	0x01E9BF2C STR W0, [X19 + 0x38]
	0x01E9BF30 CBZ X20, 0x1E9BFBC
	0x01E9BF34 LDR X8, [X20 + 0x18]
	0x01E9BF38 CBZ X8, 0x1E9BFBC
	0x01E9BF3C LDR W8, [X8 + 0x18]
	0x01E9BF40 CMP W0, W8
	0x01E9BF44 B.GE 0x1E9BFA8
	0x01E9BF48 MOV X1, X31
	0x01E9BF4C BL 0x1E9A108
	0x01E9BF50 LDR X8, [X20 + 0x18]
	0x01E9BF54 CBZ X8, 0x1E9BFBC
	0x01E9BF58 ADRP X9, 0x2263000
	0x01E9BF5C LDR W1, [X19 + 0x38]
	0x01E9BF60 LDR X9, [X9 + 0x5D0]
	0x01E9BF64 MOV X20, X0
	0x01E9BF68 MOV X0, X8
	0x01E9BF6C LDR X2, [X9]
	0x01E9BF70 BL 0x301BCCC
	0x01E9BF74 ADRP X8, 0x2263000
	0x01E9BF78 LDR X8, [X8 + 0x648]
	0x01E9BF7C MOV X2, X0
	0x01E9BF80 AND X1, X20, 0x0
	0x01E9BF84 ADD X0, X31, 0x0
	0x01E9BF88 LDR X3, [X8]
	0x01E9BF8C STP X31, X31, [X31]
	0x01E9BF90 BL 0x27A7920
	0x01E9BF94 LDR V0, [X31]
	0x01E9BF98 MOVZ W0, 0x1
	0x01E9BF9C STR W0, [X19 + 0x10]
	0x01E9BFA0 STUR V0, [X19 + 0x18]
	0x01E9BFA4 B 0x1E9BFAC
	0x01E9BFA8 MOV W0, W31
	0x01E9BFAC LDP X20, X19, [X31 + 0x20]
	0x01E9BFB0 LDR X30, [X31 + 0x10]
	0x01E9BFB4 ADD X31, X31, 0x30
	0x01E9BFB8 RET
	0x01E9BFBC BL 0x1C16F20
	0x01E9BFC0 LDP X8, X1, [X0 + 0x18]
	0x01E9BFC4 MOV X0, X8
	0x01E9BFC8 RET
	0x01E9BFCC STP X30, X19, [X31 - 0x10]!
	0x01E9BFD0 ADRP X0, 0x2258000
	0x01E9BFD4 LDR X0, [X0 + 0xB40]
	0x01E9BFD8 BL 0x1C16D08
	0x01E9BFDC BL 0x1C16F10
	0x01E9BFE0 MOV X1, X31
	0x01E9BFE4 MOV X19, X0
	0x01E9BFE8 BL 0x3380310
	0x01E9BFEC ADRP X0, 0x2263000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x253F000
	006 Move W8, [X21+744]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x2264000
	014 Move X0, [X0+1496]
	015 Call 0x1C17CF4
	016 Move X0, 0x2264000
	017 Move X0, [X0+1488]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+744], W8
	021 Move X0, [X19+24]
	022 Compare X0, 0
	023 JumpIfEqual {68}
	024 Move X8, 0x2264000
	025 Move X8, [X8+1488]
	026 Move W1, W20
	027 Move X2, [X8]
	028 Call List`1<Object>.get_Item, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {68}
	031 Move X10, 0x2264000
	032 Move X8, [X0]
	033 Move X10, [X10+1496]
	034 Move X21, X0
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X1, [X10]
	037 Compare X9, 0
	038 JumpIfEqual {45}
	039 Move X10, [X8+176]
	040 Add X10, X10, 8
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract X9, X9, 1
	044 Add X10, X10, 16
	045 Move W2, 1
	046 Move X0, X21
	047 Call 0x1C5D788
	048 Move W9, [X10]
	049 Add W9, W9, 1
	050 Add X8, X8, W9
	051 Add X0, X8, 312
	052 Move X8, [X0]
	053 Move X1, [X0+8]
	054 Move X0, X21
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X0, X19
	057 Move W1, W20
	058 Move W2, W31
	059 Call NetworkPrefabTable.SetAcquired, X0, X1, X2
	060 Move W8, [X19+56]
	061 Add W8, W8, 1
	062 Move [X19+56], W8
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X30, [X31+32]
	066 Move X21, [X31+40]
	067 Return 
	068 Call 0x1C17F20

Method: System.Int32 DecodePrefabId(Fusion.NetworkPrefabId prefabId)

Disassembly:
	0x01E9C5A0 BL 0x1EC2F7C
	0x01E9C5A4 LDR W8, [X31 + 0x8]
	0x01E9C5A8 ANDS W31, W0, 0x1
	0x01E9C5AC CSEL W22, W8, W22, NE
	0x01E9C5B0 BIC W0, W23, W23, 0x1F
	0x01E9C5B4 UBFM X1, X24, 0x3, 0x3
	0x01E9C5B8 BFM X0, X22, 0x20, 0x1F
	0x01E9C5BC LDP X20, X19, [X31 + 0x30]
	0x01E9C5C0 LDP X22, X21, [X31 + 0x20]
	0x01E9C5C4 LDP X24, X23, [X31 + 0x10]
	0x01E9C5C8 LDR X30, [X31], #0x40
	0x01E9C5CC RET
	0x01E9C5D0 BL 0x1C16F20
	0x01E9C5D4 SUB X31, X31, 0x40
	0x01E9C5D8 STR X30, [X31 + 0x10]
	0x01E9C5DC STP X22, X21, [X31 + 0x20]
	0x01E9C5E0 STP X20, X19, [X31 + 0x30]
	0x01E9C5E4 ADRP X20, 0x253D000
	0x01E9C5E8 ADRP X21, 0x2257000
	0x01E9C5EC LDRB W8, [X20 + 0x2FA]
	0x01E9C5F0 LDR X21, [X21 + 0x9D0]
	0x01E9C5F4 MOV X19, X0
	0x01E9C5F8 TBNZ X8, 0x0, 0x1E9C67C
	0x01E9C5FC ADRP X0, 0x2257000
	0x01E9C600 LDR X0, [X0 + 0xB58]
	0x01E9C604 BL 0x1C16CF4
	0x01E9C608 ADRP X0, 0x2257000
	0x01E9C60C LDR X0, [X0 + 0x9D0]
	0x01E9C610 BL 0x1C16CF4
	0x01E9C614 ADRP X0, 0x225A000
	0x01E9C618 LDR X0, [X0 + 0xE40]
	0x01E9C61C BL 0x1C16CF4
	0x01E9C620 ADRP X0, 0x2262000
	0x01E9C624 LDR X0, [X0 + 0x678]
	0x01E9C628 BL 0x1C16CF4
	0x01E9C62C ADRP X0, 0x2262000
	0x01E9C630 LDR X0, [X0 + 0x158]
	0x01E9C634 BL 0x1C16CF4
	0x01E9C638 ADRP X0, 0x2262000
	0x01E9C63C LDR X0, [X0 + 0x680]
	0x01E9C640 BL 0x1C16CF4
	0x01E9C644 ADRP X0, 0x2262000
	0x01E9C648 LDR X0, [X0 + 0x688]
	0x01E9C64C BL 0x1C16CF4
	0x01E9C650 ADRP X0, 0x2262000
	0x01E9C654 LDR X0, [X0 + 0x690]
	0x01E9C658 BL 0x1C16CF4
	0x01E9C65C ADRP X0, 0x2262000
	0x01E9C660 LDR X0, [X0 + 0x698]
	0x01E9C664 BL 0x1C16CF4
	0x01E9C668 ADRP X0, 0x2262000
	0x01E9C66C LDR X0, [X0 + 0x6A0]
	0x01E9C670 BL 0x1C16CF4
	0x01E9C674 MOVZ W8, 0x1
	0x01E9C678 STRB W8, [X20 + 0x2FA]
	0x01E9C67C LDR X0, [X21]
	0x01E9C680 MOVZ W1, 0x8
	0x01E9C684 BL 0x1C16D6C
	0x01E9C688 CBZ X0, 0x1E9C8B8
	0x01E9C68C ADRP X21, 0x2262000
	0x01E9C690 LDR X21, [X21 + 0x680]
	0x01E9C694 MOV X20, X0
	0x01E9C698 LDR X0, [X21]
	0x01E9C69C CBZ X0, 0x1E9C6B0
	0x01E9C6A0 LDR X8, [X20]
	0x01E9C6A4 LDR X1, [X8 + 0x40]
	0x01E9C6A8 BL 0x1C16E00
	0x01E9C6AC CBZ X0, 0x1E9C8AC
	0x01E9C6B0 LDR W8, [X20 + 0x18]
	0x01E9C6B4 CBZ W8, 0x1E9C8A8
	0x01E9C6B8 LDR X8, [X21]
	0x01E9C6BC ADRP X9, 0x2262000
	0x01E9C6C0 LDR X9, [X9 + 0x158]
	0x01E9C6C4 ADD X1, X31, 0x18
	0x01E9C6C8 STR X8, [X20 + 0x20]
	0x01E9C6CC LDR W8, [X19]
	0x01E9C6D0 LDR X0, [X9]
	0x01E9C6D4 STR W8, [X31 + 0x18]
	0x01E9C6D8 BL 0x1C16E04
	0x01E9C6DC MOV X21, X0
	0x01E9C6E0 CBZ X0, 0x1E9C6F8

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x253E000
	007 Move W8, [X21+745]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2263000
	015 Move X0, [X0+1472]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+745], W8
	019 Compare W19, 0
	020 JumpIfEqual {33}
	021 Move X8, [X20+24]
	022 Compare X8, 0
	023 JumpIfEqual {56}
	024 Move W8, [X8+24]
	025 Subtract W0, W19, 1
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X30, [X31+16]
	030 Move X21, [X31+24]
	031 Add X31, X31, 48
	032 Return X0
	033 Move X0, 0x2260000
	034 Move X0, [X0+1400]
	035 Call 0x1C17D08
	036 Call 0x1C17F10
	037 Move X19, X0
	038 Move X0, 0x2263000
	039 Move X0, [X0+1512]
	040 Call 0x1C17D08
	041 Move X20, X0
	042 Move X0, 0x2263000
	043 Move X0, [X0+1296]
	044 Call 0x1C17D08
	045 Move X2, X0
	046 Move X0, X19
	047 Move X1, X20
	048 Move X3, X31
	049 Call ArgumentException..ctor, X0, X1, X2
	050 Move X0, 0x2263000
	051 Move X0, [X0+1520]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X19
	055 Call 0x1C17DEC
	056 Call 0x1C17F20
	057 Move [X31+8], W19
	058 Move X0, 0x2263000
	059 Move X0, [X0+1352]
	060 Call 0x1C17D08
	061 Add X1, X31, 8
	062 Call 0x1C17E04
	063 Move X19, X0
	064 Move X0, 0x2263000
	065 Move X0, [X0+1528]
	066 Call 0x1C17D08
	067 Move X1, X19
	068 Move X2, X31
	069 Call String.Format, X0, X1
	070 Move X19, X0
	071 Move X0, 0x2260000
	072 Move X0, [X0+1400]
	073 Call 0x1C17D08
	074 Call 0x1C17F10
	075 Move X20, X0
	076 Move X0, 0x2263000
	077 Move X0, [X0+1296]
	078 Call 0x1C17D08
	079 Move X2, X0
	080 Move X0, X20
	081 Move X1, X19
	082 Move X3, X31
	083 Call ArgumentException..ctor, X0, X1, X2
	084 Move X0, 0x2263000
	085 Move X0, [X0+1520]
	086 Call 0x1C17D08
	087 Move X1, X0
	088 Move X0, X20
	089 Call 0x1C17DEC

Method: System.Boolean TryDecodePrefabId(Fusion.NetworkPrefabId prefabId, out System.Int32 index)

Disassembly:
	0x01E9BA88 LDR X0, [X19 + 0x28]
	0x01E9BA8C LDR W2, [X8 + 0x18]
	0x01E9BA90 ADRP X20, 0x2263000
	0x01E9BA94 LDR X20, [X20 + 0x600]
	0x01E9BA98 MOV W1, W31
	0x01E9BA9C MOV X3, X31
	0x01E9BAA0 BL 0x339FA34
	0x01E9BAA4 LDR X20, [X20]
	0x01E9BAA8 LDR X8, [X20 + 0x38]
	0x01E9BAAC CBNZ X8, 0x1E9BABC
	0x01E9BAB0 MOV X0, X20
	0x01E9BAB4 BL 0x1C5C6E0
	0x01E9BAB8 LDR X8, [X20 + 0x38]
	0x01E9BABC LDR X0, [X8 + 0x10]
	0x01E9BAC0 LDRB W8, [X0 + 0x135]
	0x01E9BAC4 TBNZ X8, 0x0, 0x1E9BACC
	0x01E9BAC8 BL 0x1C5C684
	0x01E9BACC LDR W8, [X0 + 0xE0]
	0x01E9BAD0 CBNZ W8, 0x1E9BAD8
	0x01E9BAD4 BL 0x1C16DFC
	0x01E9BAD8 LDR X8, [X20 + 0x38]
	0x01E9BADC LDR X0, [X8 + 0x10]
	0x01E9BAE0 LDRB W8, [X0 + 0x135]
	0x01E9BAE4 TBNZ X8, 0x0, 0x1E9BAEC
	0x01E9BAE8 BL 0x1C5C684
	0x01E9BAEC LDR X8, [X0 + 0xB8]
	0x01E9BAF0 LDR X9, [X8]
	0x01E9BAF4 LDR X8, [X19 + 0x18]
	0x01E9BAF8 STR X9, [X19 + 0x20]
	0x01E9BAFC CBZ X8, 0x1E9BB4C
	0x01E9BB00 LDP W2, W9, [X8 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x253F000
	007 Move W8, [X22+746]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2264000
	016 Move X0, [X0+1472]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+746], W8
	020 Compare W20, 0
	021 JumpIfEqual {30}
	022 Move X8, [X21+24]
	023 Compare X8, 0
	024 JumpIfEqual {39}
	025 Move W8, [X8+24]
	026 Subtract W9, W20, 1
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CSET not yet implemented."
	029 NotImplemented "Instruction CSEL not yet implemented."
	030 Move W8, W31
	031 Move W0, W31
	032 Move [X19], W8
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return X0
	039 Call 0x1C17F20

Method: System.Int32 GetBitSetCapacity(System.Int32 length)

Disassembly:
	0x01E9B8F4 BL 0x1E875F8
	0x01E9B8F8 LDR X8, [X20 + 0x18]
	0x01E9B8FC ADD W23, W23, 0x40
	0x01E9B900 CBNZ X8, 0x1E9B7E4
	0x01E9B904 B 0x1E9B97C
	0x01E9B908 BL 0x1C16F20
	0x01E9B90C B 0x1E9B98C
	0x01E9B910 BL 0x1C16F20
	0x01E9B914 B 0x1E9B98C
	0x01E9B918 B 0x1E9B92C
	0x01E9B91C B 0x1E9B92C
	0x01E9B920 B 0x1E9B92C
	0x01E9B924 B 0x1E9B92C
	0x01E9B928 B 0x1E9B92C
	0x01E9B92C MOV X21, X0
	0x01E9B930 CMP W1, 0x1
	0x01E9B934 B.NE 0x1E9B984
	0x01E9B938 MOV X0, X21
	0x01E9B93C BL 0x3EB1AD0
	0x01E9B940 LDR X22, [X0]
	0x01E9B944 BL 0x3EB1AE0
	0x01E9B948 ADD X0, X31, 0x8
	0x01E9B94C MOV X1, X31
	0x01E9B950 BL 0x1E875F8
	0x01E9B954 CBZ X22, 0x1E9B8F8
	0x01E9B958 MOV X0, X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x253F000
	005 Move W8, [X20+747]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2264000
	012 Move X0, [X0+1464]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+747], W8
	016 Move X0, [X19+24]
	017 Compare X0, 0
	018 JumpIfEqual {32}
	019 Move X8, 0x2264000
	020 Move X8, [X8+1464]
	021 Move X1, [X8]
	022 Call List`1<Object>.get_Capacity, X0
	023 Add W8, W0, 63
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Add W9, W0, 126
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CSEL not yet implemented."
	029 NotImplemented "Instruction SBFM not yet implemented."
	030 Move X30, [X31+32]
	031 Return X0
	032 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01E9CB50 MOV X1, X31
	0x01E9CB54 BL 0x1C16DEC
	0x01E9CB58 LDR X8, [X0 + 0x40]
	0x01E9CB5C LDR X4, [X0 + 0x18]
	0x01E9CB60 LDR X3, [X0 + 0x28]
	0x01E9CB64 MOV X0, X8
	0x01E9CB68 BR X4
	0x01E9CB6C SUB X31, X31, 0x30
	0x01E9CB70 STP X31, X30, [X31 + 0x18]
	0x01E9CB74 STP X1, X2, [X31 + 0x8]
	0x01E9CB78 ADD X1, X31, 0x8
	0x01E9CB7C MOV X2, X3
	0x01E9CB80 MOV X3, X4
	0x01E9CB84 BL 0x1C16CB0
	0x01E9CB88 LDR X30, [X31 + 0x20]
	0x01E9CB8C ADD X31, X31, 0x30
	0x01E9CB90 RET
	0x01E9CB94 MOV X0, X1
	0x01E9CB98 MOV X1, X31
	0x01E9CB9C B 0x1C16CB4
	0x01E9CBA0 SUB X31, X31, 0x50
	0x01E9CBA4 STR X30, [X31 + 0x10]
	0x01E9CBA8 STP X24, X23, [X31 + 0x20]
	0x01E9CBAC STP X22, X21, [X31 + 0x30]
	0x01E9CBB0 STP X20, X19, [X31 + 0x40]
	0x01E9CBB4 ADRP X24, 0x253D000
	0x01E9CBB8 ADRP X20, 0x2262000
	0x01E9CBBC ADRP X21, 0x2262000
	0x01E9CBC0 ADRP X23, 0x2262000
	0x01E9CBC4 ADRP X22, 0x2262000
	0x01E9CBC8 LDRB W8, [X24 + 0x2FD]
	0x01E9CBCC LDR X20, [X20 + 0x6B0]
	0x01E9CBD0 LDR X21, [X21 + 0x6B8]
	0x01E9CBD4 LDR X23, [X23 + 0x6C0]
	0x01E9CBD8 LDR X22, [X22 + 0x6C8]
	0x01E9CBDC MOV X19, X0
	0x01E9CBE0 TBNZ X8, 0x0, 0x1E9CC1C
	0x01E9CBE4 ADRP X0, 0x2262000
	0x01E9CBE8 LDR X0, [X0 + 0x6B0]
	0x01E9CBEC BL 0x1C16CF4
	0x01E9CBF0 ADRP X0, 0x2262000
	0x01E9CBF4 LDR X0, [X0 + 0x6B8]
	0x01E9CBF8 BL 0x1C16CF4
	0x01E9CBFC ADRP X0, 0x2262000
	0x01E9CC00 LDR X0, [X0 + 0x6C0]
	0x01E9CC04 BL 0x1C16CF4
	0x01E9CC08 ADRP X0, 0x2262000
	0x01E9CC0C LDR X0, [X0 + 0x6C8]
	0x01E9CC10 BL 0x1C16CF4
	0x01E9CC14 MOVZ W8, 0x1
	0x01E9CC18 STRB W8, [X24 + 0x2FD]
	0x01E9CC1C LDR W8, [X19]
	0x01E9CC20 LDR X0, [X20]
	0x01E9CC24 ADD X1, X31, 0x1C
	0x01E9CC28 STR W8, [X31 + 0x1C]
	0x01E9CC2C BL 0x1C16E04
	0x01E9CC30 MOV X20, X0
	0x01E9CC34 LDR W8, [X19 + 0x4]
	0x01E9CC38 LDR X0, [X21]
	0x01E9CC3C ADD X1, X31, 0x18
	0x01E9CC40 STR W8, [X31 + 0x18]
	0x01E9CC44 BL 0x1C16E04
	0x01E9CC48 MOV X21, X0
	0x01E9CC4C LDR X8, [X19 + 0x8]
	0x01E9CC50 LDR X0, [X23]
	0x01E9CC54 ADD X1, X31, 0x8
	0x01E9CC58 STR X8, [X31 + 0x8]
	0x01E9CC5C BL 0x1C16E04
	0x01E9CC60 LDR X8, [X22]
	0x01E9CC64 MOV X3, X0
	0x01E9CC68 MOV X1, X20
	0x01E9CC6C MOV X2, X21
	0x01E9CC70 MOV X0, X8
	0x01E9CC74 MOV X4, X31
	0x01E9CC78 BL 0x3227C18
	0x01E9CC7C LDP X20, X19, [X31 + 0x40]
	0x01E9CC80 LDP X22, X21, [X31 + 0x30]
	0x01E9CC84 LDP X24, X23, [X31 + 0x20]
	0x01E9CC88 LDR X30, [X31 + 0x10]
	0x01E9CC8C ADD X31, X31, 0x50
	0x01E9CC90 RET
	0x01E9CC94 SUB X31, X31, 0x60
	0x01E9CC98 STR X30, [X31 + 0x20]
	0x01E9CC9C STP X24, X23, [X31 + 0x30]
	0x01E9CCA0 STP X22, X21, [X31 + 0x40]
	0x01E9CCA4 STP X20, X19, [X31 + 0x50]
	0x01E9CCA8 ADRP X20, 0x253D000
	0x01E9CCAC ADRP X21, 0x2257000
	0x01E9CCB0 LDRB W8, [X20 + 0x2FE]
	0x01E9CCB4 LDR X21, [X21 + 0x8F0]
	0x01E9CCB8 MOV X19, X0
	0x01E9CCBC TBNZ X8, 0x0, 0x1E9CD10
	0x01E9CCC0 ADRP X0, 0x2262000
	0x01E9CCC4 LDR X0, [X0 + 0x6D0]
	0x01E9CCC8 BL 0x1C16CF4
	0x01E9CCCC ADRP X0, 0x2257000
	0x01E9CCD0 LDR X0, [X0 + 0x8F0]
	0x01E9CCD4 BL 0x1C16CF4
	0x01E9CCD8 ADRP X0, 0x2262000
	0x01E9CCDC LDR X0, [X0 + 0x6D8]
	0x01E9CCE0 BL 0x1C16CF4
	0x01E9CCE4 ADRP X0, 0x2262000
	0x01E9CCE8 LDR X0, [X0 + 0x6E0]
	0x01E9CCEC BL 0x1C16CF4
	0x01E9CCF0 ADRP X0, 0x2257000
	0x01E9CCF4 LDR X0, [X0 + 0xEC8]
	0x01E9CCF8 BL 0x1C16CF4
	0x01E9CCFC ADRP X0, 0x2257000
	0x01E9CD00 LDR X0, [X0 + 0x848]
	0x01E9CD04 BL 0x1C16CF4
	0x01E9CD08 MOVZ W8, 0x1
	0x01E9CD0C STRB W8, [X20 + 0x2FE]
	0x01E9CD10 LDR X0, [X21]
	0x01E9CD14 BL 0x1C16F10
	0x01E9CD18 MOV X1, X31
	0x01E9CD1C MOV X20, X0
	0x01E9CD20 BL 0x3231AC4
	0x01E9CD24 CBZ X20, 0x1E9CDF8
	0x01E9CD28 ADRP X8, 0x2257000
	0x01E9CD2C LDR X8, [X8 + 0xEC8]
	0x01E9CD30 ADRP X21, 0x2262000
	0x01E9CD34 LDR X21, [X21 + 0x6D0]
	0x01E9CD38 ADRP X22, 0x2262000
	0x01E9CD3C LDR X1, [X8]
	0x01E9CD40 ADRP X23, 0x2262000
	0x01E9CD44 ADRP X24, 0x2257000
	0x01E9CD48 LDR X22, [X22 + 0x6E0]
	0x01E9CD4C LDR X23, [X23 + 0x6D8]
	0x01E9CD50 LDR X24, [X24 + 0x848]
	0x01E9CD54 MOV X0, X20
	0x01E9CD58 MOV X2, X31
	0x01E9CD5C BL 0x32333E0
	0x01E9CD60 LDR X8, [X21]
	0x01E9CD64 MOVN X9, 0x0
	0x01E9CD68 ADD X0, X31, 0x8
	0x01E9CD6C MOV X1, X31
	0x01E9CD70 STP X8, X9, [X31 + 0x8]
	0x01E9CD74 LDR W8, [X19]
	0x01E9CD78 STR W8, [X31 + 0x18]
	0x01E9CD7C BL 0x33B162C
	0x01E9CD80 MOV X1, X0
	0x01E9CD84 MOV X0, X20
	0x01E9CD88 MOV X2, X31
	0x01E9CD8C BL 0x32333E0
	0x01E9CD90 LDR X1, [X22]
	0x01E9CD94 MOV X0, X20
	0x01E9CD98 MOV X2, X31
	0x01E9CD9C BL 0x32333E0
	0x01E9CDA0 LDR W1, [X19 + 0x4]
	0x01E9CDA4 MOV X0, X20
	0x01E9CDA8 MOV X2, X31
	0x01E9CDAC BL 0x3233E30
	0x01E9CDB0 LDR X1, [X23]
	0x01E9CDB4 MOV X0, X20
	0x01E9CDB8 MOV X2, X31
	0x01E9CDBC BL 0x32333E0
	0x01E9CDC0 LDR X1, [X24]
	0x01E9CDC4 MOV X0, X20
	0x01E9CDC8 MOV X2, X31
	0x01E9CDCC BL 0x32333E0
	0x01E9CDD0 LDR X8, [X20]
	0x01E9CDD4 MOV X0, X20
	0x01E9CDD8 LDP X9, X1, [X8 + 0x168]
	0x01E9CDDC BLR X9
	0x01E9CDE0 LDP X20, X19, [X31 + 0x50]
	0x01E9CDE4 LDP X22, X21, [X31 + 0x40]
	0x01E9CDE8 LDP X24, X23, [X31 + 0x30]
	0x01E9CDEC LDR X30, [X31 + 0x20]
	0x01E9CDF0 ADD X31, X31, 0x60
	0x01E9CDF4 RET
	0x01E9CDF8 BL 0x1C16F20
	0x01E9CDFC STP X30, X21, [X31 - 0x20]!
	0x01E9CE00 STP X20, X19, [X31 + 0x10]
	0x01E9CE04 LDR X8, [X2 + 0x8]
	0x01E9CE08 STP X1, X2, [X0 + 0x20]
	0x01E9CE0C MOV X19, X0
	0x01E9CE10 MOV X20, X1
	0x01E9CE14 STR X8, [X0 + 0x10]
	0x01E9CE18 LDRB W21, [X2 + 0x52]
	0x01E9CE1C STR X0, [X0 + 0x40]
	0x01E9CE20 MOV X0, X2
	0x01E9CE24 BL 0x1C16D84
	0x01E9CE28 TBZ X0, 0x0, 0x1E9CE40
	0x01E9CE2C CMP W21, 0x2

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x253E000
	008 Move X20, 0x2263000
	009 Move W8, [X21+748]
	010 Move X20, [X20+1560]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0x2263000
	017 Move X0, [X0+1536]
	018 Call 0x1C17CF4
	019 Move X0, 0x2263000
	020 Move X0, [X0+1568]
	021 Call 0x1C17CF4
	022 Move X0, 0x2263000
	023 Move X0, [X0+1576]
	024 Call 0x1C17CF4
	025 Move X0, 0x2263000
	026 Move X0, [X0+1584]
	027 Call 0x1C17CF4
	028 Move X0, 0x2263000
	029 Move X0, [X0+1592]
	030 Call 0x1C17CF4
	031 Move X0, 0x2263000
	032 Move X0, [X0+1600]
	033 Call 0x1C17CF4
	034 Move X0, 0x2263000
	035 Move X0, [X0+1560]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+748], W8
	039 Move X0, [X20]
	040 Move X23, 0x2263000
	041 Move X22, 0x2263000
	042 Move X21, 0x2263000
	043 Move W8, [X0+224]
	044 Move X23, [X23+1600]
	045 Move X22, [X22+1592]
	046 Move X21, [X21+1536]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X0, [X20]
	051 Move X8, [X0+184]
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 NotImplemented "Instruction STRH not yet implemented."
	054 Move X0, [X23]
	055 Call 0x1C17F10
	056 Move X1, [X22]
	057 Move X20, X0
	058 Call List`1<Object>..ctor, X0
	059 Move [X19+24], X20
	060 Move X20, [X21]
	061 Move X8, [X20+56]
	062 Compare X8, 0
	063 JumpIfNotEqual {67}
	064 Move X0, X20
	065 Call 0x1C5D6E0
	066 Move X8, [X20+56]
	067 Move X0, [X8+16]
	068 Move W8, [X0+309]
	069 Move TEMP, X8
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {74}
	073 Call 0x1C5D684
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move X8, [X20+56]
	079 Move X20, 0x2263000
	080 Move X0, [X8+16]
	081 Move W8, [X0+309]
	082 Move X20, [X20+1568]
	083 Move TEMP, X8
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {88}
	087 Call 0x1C5D684
	088 Move X8, [X0+184]
	089 Move X8, [X8]
	090 Move [X19+32], X8
	091 Move X20, [X20]
	092 Move X8, [X20+56]
	093 Compare X8, 0
	094 JumpIfNotEqual {98}
	095 Move X0, X20
	096 Call 0x1C5D6E0
	097 Move X8, [X20+56]
	098 Move X0, [X8+16]
	099 Move W8, [X0+309]
	100 Move TEMP, X8
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {105}
	104 Call 0x1C5D684
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Move X8, [X20+56]
	110 Move X21, 0x2263000
	111 Move X20, 0x2263000
	112 Move X0, [X8+16]
	113 Move W8, [X0+309]
	114 Move X21, [X21+1584]
	115 Move X20, [X20+1576]
	116 Move TEMP, X8
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfEqual {121}
	120 Call 0x1C5D684
	121 Move X8, [X0+184]
	122 Move X8, [X8]
	123 Move [X19+40], X8
	124 Move X0, [X21]
	125 Call 0x1C17F10
	126 Move X1, [X20]
	127 Move X20, X0
	128 Call Dictionary`2<NetworkObjectGuid, Int32>..ctor, X0
	129 Move [X19+48], X20
	130 Move X0, X19
	131 Move X20, [X31+32]
	132 Move X19, [X31+40]
	133 Move X22, [X31+16]
	134 Move X21, [X31+24]
	135 Move X1, X31
	136 Move X30, [X31+48]
	137 Move X23, [X31+56]
	138 Call Object..ctor, X0
	139 Return 
	140 Subtract X31, X31, 48
	141 Move [X31+16], X30
	142 Move [X31+24], X21
	143 Move [X31+32], X20
	144 Move [X31+40], X19
	145 Move X21, 0x253E000
	146 Move W8, [X21+751]
	147 Move X20, X1
	148 Move X19, X0
	149 Compare W8, 0
	150 JumpIfNotEqual {162}
	151 Move X0, 0x225B000
	152 Move X0, [X0+920]
	153 Call 0x1C17CF4
	154 Move X0, 0x225B000
	155 Move X0, [X0+3648]
	156 Call 0x1C17CF4
	157 Move X0, 0x225D000
	158 Move X0, [X0+40]
	159 Call 0x1C17CF4
	160 Move W8, 1
	161 Move [X21+751], W8
	162 Move X0, X19
	163 Move X1, X31
	164 Move [X31+8], X31
	165 Call Simulation.get_Topology, X0
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move W8, W31
	168 Move X0, X19
	169 Move X1, X31
	170 Call Simulation.get_Topology, X0
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Compare X20, 0
	173 JumpIfEqual {221}
	174 Move X21, [X20+32]
	175 Compare X21, 0
	176 JumpIfEqual {221}
	177 Move X8, 0x225B000
	178 Move X8, [X8+3648]
	179 Move X0, [X8]
	180 Move W8, [X0+224]
	181 Compare W8, 0
	182 JumpIfNotEqual {184}
	183 Call 0x1C17DFC
	184 Move W8, [X21+32]
	185 Add W31, W8, 1
	186 Move X8, 0x225B000
	187 Move X8, [X8+920]
	188 Move X0, [X8]
	189 Move W8, [X0+224]
	190 Compare W8, 0
	191 JumpIfNotEqual {193}
	192 Call 0x1C17DFC
	193 Move X8, 0x225D000
	194 Move X8, [X8+40]
	195 Add X2, X31, 8
	196 Move W1, 1
	197 Move X0, X19
	198 Move X3, [X8]
	199 Call Simulation.TryGetStructData, X0, X1, X2
	200 Move TEMP, X0
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfNotEqual {167}
	204 Move X8, [X31+8]
	205 Compare X8, 0
	206 JumpIfEqual {221}
	207 Move W8, [X8+24]
	208 Compare X20, 0
	209 JumpIfEqual {221}
	210 Move X8, [X20+32]
	211 Compare X8, 0
	212 JumpIfEqual {221}
	213 Move W8, [X8+32]
	214 Move X20, [X31+32]
	215 Move X19, [X31+40]
	216 Move X30, [X31+16]
	217 Move X21, [X31+24]
	218 Move W0, W8
	219 Add X31, X31, 48
	220 Return 
	221 Call 0x1C17F20

