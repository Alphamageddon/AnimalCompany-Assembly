Type: Fusion.ReflectionUtils

Method: T GetCustomAttributeOrThrow(System.Reflection.MemberInfo member, System.Boolean inherit)

Disassembly:
	0x02240BEC LDRB W10, [X8 + 0x130]
	0x02240BF0 CMP W10, W9
	0x02240BF4 B.CC 0x2240C0C
	0x02240BF8 LDR X8, [X8 + 0xC8]
	0x02240BFC ADD X8, X8, X9, 0x3, LSL
	0x02240C00 LDUR X8, [X8 - 0x8]
	0x02240C04 CMP X8, X0
	0x02240C08 B.EQ 0x2240D38
	0x02240C0C TBNZ X22, 0x1F, 0x2240D58
	0x02240C10 TBNZ X21, 0x1F, 0x2240D94
	0x02240C14 CBZ X23, 0x2240DD0
	0x02240C18 LDR X8, [X20 + 0x38]
	0x02240C1C LDR X1, [X8 + 0x18]
	0x02240C20 LDRB W8, [X1 + 0x135]
	0x02240C24 TBNZ X8, 0x0, 0x2240C34
	0x02240C28 MOV X0, X1
	0x02240C2C BL 0x1C5C684
	0x02240C30 MOV X1, X0
	0x02240C34 LDR X8, [X23]
	0x02240C38 LDRH W9, [X8 + 0x12E]
	0x02240C3C CBZ X9, 0x2240C60
	0x02240C40 LDR X10, [X8 + 0xB0]
	0x02240C44 ADD X10, X10, 0x8
	0x02240C48 LDUR X11, [X10 - 0x8]
	0x02240C4C CMP X11, X1
	0x02240C50 B.EQ 0x2240C70
	0x02240C54 SUBS X9, X9, 0x1
	0x02240C58 ADD X10, X10, 0x10
	0x02240C5C B.NE 0x2240C48
	0x02240C60 MOV X0, X23
	0x02240C64 MOV W2, W31
	0x02240C68 BL 0x1C5C788
	0x02240C6C B 0x2240C7C
	0x02240C70 LDRSW X9, [X10]
	0x02240C74 ADD X8, X8, X9, 0x4, LSL
	0x02240C78 ADD X0, X8, 0x138
	0x02240C7C LDP X8, X1, [X0]
	0x02240C80 MOV X0, X23
	0x02240C84 BLR X8
	0x02240C88 SUB W8, W0, W22
	0x02240C8C CMP W8, W21
	0x02240C90 B.LT 0x2240DD4
	0x02240C94 CMP W21, 0x1
	0x02240C98 B.LT 0x2240D1C
	0x02240C9C LDR X8, [X20 + 0x38]
	0x02240CA0 LDR X1, [X8]
	0x02240CA4 LDRB W8, [X1 + 0x135]
	0x02240CA8 TBNZ X8, 0x0, 0x2240CB8
	0x02240CAC MOV X0, X1
	0x02240CB0 BL 0x1C5C684
	0x02240CB4 MOV X1, X0
	0x02240CB8 LDR X8, [X23]
	0x02240CBC LDRH W9, [X8 + 0x12E]
	0x02240CC0 CBZ X9, 0x2240CE4
	0x02240CC4 LDR X10, [X8 + 0xB0]
	0x02240CC8 ADD X10, X10, 0x8
	0x02240CCC LDUR X11, [X10 - 0x8]
	0x02240CD0 CMP X11, X1
	0x02240CD4 B.EQ 0x2240CF4
	0x02240CD8 SUBS X9, X9, 0x1
	0x02240CDC ADD X10, X10, 0x10
	0x02240CE0 B.NE 0x2240CCC
	0x02240CE4 MOVZ W2, 0x4
	0x02240CE8 MOV X0, X23
	0x02240CEC BL 0x1C5C788
	0x02240CF0 B 0x2240D04
	0x02240CF4 LDR W9, [X10]
	0x02240CF8 ADD W9, W9, 0x4
	0x02240CFC ADD X8, X8, W9, 0x4, SXTW
	0x02240D00 ADD X0, X8, 0x138
	0x02240D04 LDP X8, X2, [X0]
	0x02240D08 MOV X0, X23
	0x02240D0C MOV W1, W22
	0x02240D10 BLR X8
	0x02240D14 SUBS W21, W21, 0x1
	0x02240D18 B.GT 0x2240C9C
	0x02240D1C MOV X20, X31
	0x02240D20 MOVZ W0, 0x1
	0x02240D24 STR X20, [X19]
	0x02240D28 LDP X20, X19, [X31 + 0x20]
	0x02240D2C LDP X22, X21, [X31 + 0x10]
	0x02240D30 LDP X30, X23, [X31], #0x30
	0x02240D34 RET
	0x02240D38 LDR X8, [X20 + 0x38]
	0x02240D3C LDR X3, [X8 + 0x10]
	0x02240D40 LDR X8, [X3]
	0x02240D44 MOV X0, X23
	0x02240D48 MOV W1, W22
	0x02240D4C MOV W2, W21
	0x02240D50 BLR X8
	0x02240D54 B 0x2240D1C
	0x02240D58 ADRP X0, 0x1EBB000
	0x02240D5C LDR X0, [X0 + 0x760]
	0x02240D60 BL 0x1C16D08
	0x02240D64 BL 0x1C16F10
	0x02240D68 MOV X21, X0
	0x02240D6C ADRP X0, 0x1EBE000
	0x02240D70 LDR X0, [X0 + 0x130]
	0x02240D74 BL 0x1C16D08
	0x02240D78 MOV X1, X0
	0x02240D7C MOV X0, X21
	0x02240D80 MOV X2, X31
	0x02240D84 BL 0x3316014
	0x02240D88 MOV X0, X21
	0x02240D8C MOV X1, X20
	0x02240D90 BL 0x1C16DEC
	0x02240D94 ADRP X0, 0x1EBB000
	0x02240D98 LDR X0, [X0 + 0x760]
	0x02240D9C BL 0x1C16D08
	0x02240DA0 BL 0x1C16F10
	0x02240DA4 MOV X21, X0
	0x02240DA8 ADRP X0, 0x1EDB000
	0x02240DAC LDR X0, [X0 + 0x648]
	0x02240DB0 BL 0x1C16D08
	0x02240DB4 MOV X1, X0
	0x02240DB8 MOV X0, X21
	0x02240DBC MOV X2, X31
	0x02240DC0 BL 0x3316014
	0x02240DC4 MOV X0, X21
	0x02240DC8 MOV X1, X20
	0x02240DCC BL 0x1C16DEC
	0x02240DD0 BL 0x1C16F20
	0x02240DD4 ADRP X0, 0x1EBB000
	0x02240DD8 LDR X0, [X0 + 0x578]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X19, X2
	008 Move W21, W1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {21}
	012 Move X0, 0x1EB4000
	013 Move X0, [X0+1728]
	014 Call 0x1C17CF4
	015 Move X8, [X19+56]
	016 Compare X8, 0
	017 JumpIfNotEqual {21}
	018 Move X0, X19
	019 Call 0x1C5D6E0
	020 Move X8, [X19+56]
	021 Move X9, 0x1EB4000
	022 Move X9, [X9+1728]
	023 Move X22, [X8]
	024 Move X0, [X9]
	025 Move W9, [X0+224]
	026 Compare W9, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X22
	030 Move X1, X31
	031 Call Type.GetTypeFromHandle, X0
	032 Compare X20, 0
	033 JumpIfEqual {77}
	034 Move X8, [X20]
	035 Move X1, X0
	036 And W2, W21, 1
	037 Move X0, X20
	038 Move X9, [X8+520]
	039 Move X3, [X8+528]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Compare X0, 0
	042 JumpIfEqual {77}
	043 Move X8, [X0+24]
	044 Compare X8, 0
	045 JumpIfEqual {78}
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Compare W8, 0
	048 JumpIfEqual {138}
	049 Move X8, [X19+56]
	050 Move X20, [X0+32]
	051 Move X19, [X8+8]
	052 Move W8, [X19+309]
	053 Move TEMP, X8
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {60}
	057 Move X0, X19
	058 Call 0x1C5D684
	059 Move X19, X0
	060 Compare X20, 0
	061 JumpIfEqual {70}
	062 Move X0, X20
	063 Move X1, X19
	064 Call 0x1C17E00
	065 Compare X0, 0
	066 JumpIfNotEqual {71}
	067 Move X0, X20
	068 Move X1, X19
	069 Call 0x1C181E0
	070 Move X0, X31
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X30, [X31+48]
	076 Return X0
	077 Call 0x1C17F20
	078 Move X8, [X19+56]
	079 Move X0, 0x1EB4000
	080 Move X21, [X8]
	081 Move X0, [X0+1728]
	082 Call 0x1C17D08
	083 Call 0x19913D0
	084 Move X0, X21
	085 Move X1, X31
	086 Call Type.GetTypeFromHandle, X0
	087 Move X21, X0
	088 Move X0, 0x1EDD000
	089 Move X0, [X0+1040]
	090 Call 0x1C17D08
	091 Move X1, X20
	092 Move X2, X21
	093 Move X3, X31
	094 Call String.Format, X0, X1, X2
	095 Move X20, X0
	096 Move X0, 0x1EBC000
	097 Move X0, [X0+1888]
	098 Call 0x1C17D08
	099 Call 0x1C17F10
	100 Move X21, X0
	101 Move X0, 0x1EDD000
	102 Move X0, [X0+1048]
	103 Call 0x1C17D08
	104 Move X1, X0
	105 Move X0, X21
	106 Move X2, X20
	107 Move X3, X31
	108 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	109 Move X8, [X19+56]
	110 Move X0, 0x1EB4000
	111 Move X21, [X8]
	112 Move X0, [X0+1728]
	113 Call 0x1C17D08
	114 Call 0x19913D0
	115 Move X0, X21
	116 Move X1, X31
	117 Call Type.GetTypeFromHandle, X0
	118 Move X21, X0
	119 Move X0, 0x1EDD000
	120 Move X0, [X0+1056]
	121 Call 0x1C17D08
	122 Move X1, X20
	123 Move X2, X21
	124 Move X3, X31
	125 Call String.Format, X0, X1, X2
	126 Move X20, X0
	127 Move X0, 0x1EB4000
	128 Move X0, [X0+1456]
	129 Call 0x1C17D08
	130 Call 0x1C17F10
	131 Move X1, X20
	132 Move X2, X31
	133 Move X21, X0
	134 Call InvalidOperationException..ctor, X0, X1
	135 Move X0, X21
	136 Move X1, X19
	137 Call 0x1C17DEC
	138 Call 0x1C17F28

Method: Fusion.NetworkBehaviourWeavedAttribute GetWeavedAttributeOrThrow(System.Type type)

Disassembly:
	0x01E8F0B0 LDRSW X9, [X10]
	0x01E8F0B4 ADD X8, X8, X9, 0x4, LSL
	0x01E8F0B8 ADD X0, X8, 0x138
	0x01E8F0BC LDP X8, X1, [X0]
	0x01E8F0C0 MOV X0, X19
	0x01E8F0C4 BLR X8
	0x01E8F0C8 MOV X19, X0
	0x01E8F0CC LDR X0, [X24]
	0x01E8F0D0 LDR X20, [X23]
	0x01E8F0D4 LDR W8, [X0 + 0xE0]
	0x01E8F0D8 CBNZ W8, 0x1E8F0E0
	0x01E8F0DC BL 0x1C16DFC
	0x01E8F0E0 MOV X0, X20
	0x01E8F0E4 MOV X1, X31
	0x01E8F0E8 BL 0x338C698
	0x01E8F0EC CBZ X0, 0x1E8F140
	0x01E8F0F0 LDR X8, [X0]
	0x01E8F0F4 LDR X9, [X8 + 0x2A8]
	0x01E8F0F8 LDR X2, [X8 + 0x2B0]
	0x01E8F0FC MOV X1, X19
	0x01E8F100 BLR X9
	0x01E8F104 LDR X8, [X31 + 0x18]
	0x01E8F108 TBNZ X0, 0x0, 0x1E8F12C
	0x01E8F10C LDR X19, [X8 + 0x28]
	0x01E8F110 CBNZ X19, 0x1E8F004
	0x01E8F114 BL 0x1C16F20
	0x01E8F118 BL 0x1E8F1EC
	0x01E8F11C LDR X8, [X31 + 0x18]
	0x01E8F120 MOV W0, W31
	0x01E8F124 STR X31, [X8 + 0x28]
	0x01E8F128 B 0x1E8F190
	0x01E8F12C MOVZ W0, 0x1
	0x01E8F130 STR X19, [X8 + 0x18]
	0x01E8F134 STR W0, [X8 + 0x10]
	0x01E8F138 B 0x1E8F190
	0x01E8F13C BL 0x1C16F20
	0x01E8F140 BL 0x1C16F20
	0x01E8F144 BL 0x1C16F20
	0x01E8F148 B 0x1E8F170
	0x01E8F14C B 0x1E8F170
	0x01E8F150 B 0x1E8F170
	0x01E8F154 B 0x1E8F170
	0x01E8F158 B 0x1E8F170
	0x01E8F15C B 0x1E8F170
	0x01E8F160 B 0x1E8F170
	0x01E8F164 B 0x1E8F170
	0x01E8F168 B 0x1E8F170
	0x01E8F16C B 0x1E8F170
	0x01E8F170 CMP W1, 0x1
	0x01E8F174 B.NE 0x1E8F1C0
	0x01E8F178 BL 0x3EB1AD0
	0x01E8F17C LDR X19, [X0]
	0x01E8F180 STR X19, [X31]
	0x01E8F184 BL 0x3EB1AE0
	0x01E8F188 CBNZ X19, 0x1E8F1A8
	0x01E8F18C MOV W0, W31
	0x01E8F190 LDP X20, X19, [X31 + 0x40]
	0x01E8F194 LDP X22, X21, [X31 + 0x30]
	0x01E8F198 LDP X24, X23, [X31 + 0x20]
	0x01E8F19C LDR X30, [X31 + 0x10]
	0x01E8F1A0 ADD X31, X31, 0x50
	0x01E8F1A4 RET
	0x01E8F1A8 ADD X8, X31, 0x0
	0x01E8F1AC ADD X0, X8, 0x8
	0x01E8F1B0 BL 0x1996474
	0x01E8F1B4 MOV X0, X19
	0x01E8F1B8 BL 0x1C16F18
	0x01E8F1BC CBNZ X19, 0x1E8F1C4
	0x01E8F1C0 BL 0x1D2C690
	0x01E8F1C4 LDR X0, [X31 + 0x18]
	0x01E8F1C8 LDR W8, [X0 + 0x10]
	0x01E8F1CC CMP W8, 0x1
	0x01E8F1D0 B.EQ 0x1E8F1DC
	0x01E8F1D4 ADDS W31, W8, 0x3
	0x01E8F1D8 B.NE 0x1E8F1E0
	0x01E8F1DC BL 0x1E8F1EC
	0x01E8F1E0 MOV X0, X19
	0x01E8F1E4 BL 0x1C16F18
	0x01E8F1E8 BL 0x1990590
	0x01E8F1EC STR X30, [X31 - 0x20]!
	0x01E8F1F0 STP X20, X19, [X31 + 0x10]
	0x01E8F1F4 ADRP X19, 0x254A000
	0x01E8F1F8 LDRB W8, [X19 + 0x260]
	0x01E8F1FC MOV X20, X0
	0x01E8F200 TBNZ X8, 0x0, 0x1E8F218
	0x01E8F204 ADRP X0, 0x2264000
	0x01E8F208 LDR X0, [X0 + 0xE00]
	0x01E8F20C BL 0x1C16CF4
	0x01E8F210 MOVZ W8, 0x1
	0x01E8F214 STRB W8, [X19 + 0x260]
	0x01E8F218 LDR X19, [X20 + 0x28]
	0x01E8F21C MOVN W8, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x254B000
	006 Move X21, 0x2270000
	007 Move W8, [X20+593]
	008 Move X21, [X21+96]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2270000
	015 Move X0, [X0+96]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+593], W8
	019 Move X2, [X21]
	020 Move X0, X19
	021 Move W1, W31
	022 Call 0x2240BEC, X0, X1
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X20, X0
	030 Move X0, X20
	031 Call 0x3EB2AD0
	032 Move X20, X0
	033 Move X0, 0x226D000
	034 Move X0, [X0+1888]
	035 Call 0x1C17D08
	036 Move X8, [X20]
	037 Move X1, [X8]
	038 Call 0x1C18270
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {89}
	043 Call 0x3EB2AE0
	044 Move X0, X19
	045 Call 0x19913C0
	046 Move X8, [X19]
	047 Move X0, X19
	048 Move X9, [X8+760]
	049 Move X1, [X8+768]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X20, X0
	052 Call 0x19913C0
	053 Move X8, [X20]
	054 Move X0, X20
	055 Move X9, [X8+600]
	056 Move X1, [X8+608]
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move X20, X0
	059 Call 0x19913C0
	060 Move X0, 0x2270000
	061 Move X20, [X20+16]
	062 Move X0, [X0+104]
	063 Call 0x1C17D08
	064 Move X21, X0
	065 Move X0, 0x2270000
	066 Move X0, [X0+112]
	067 Call 0x1C17D08
	068 Move X3, X0
	069 Move X0, X21
	070 Move X1, X19
	071 Move X2, X20
	072 Move X4, X31
	073 Call String.Format, X0, X1, X2, X3
	074 Move X19, X0
	075 Move X0, 0x2265000
	076 Move X0, [X0+1456]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X1, X19
	080 Move X2, X31
	081 Move X20, X0
	082 Call InvalidOperationException..ctor, X0, X1
	083 Move X0, 0x2270000
	084 Move X0, [X0+120]
	085 Call 0x1C17D08
	086 Move X1, X0
	087 Move X0, X20
	088 Call 0x1C17DEC
	089 Move W0, 8
	090 Call 0x3EB2AF0
	091 Move X8, [X20]
	092 Move [X0], X8
	093 Move X1, 0x2026000
	094 Add X1, X1, 3672
	095 Move X2, X31
	096 Call 0x3EB2B00
	097 Move X20, X0
	098 Call 0x3EB2AE0
	099 Move X0, X20
	100 Call 0x1D2D690
	101 Call 0x1991590

Method: System.Collections.Generic.IEnumerable`1<System.Reflection.Assembly> GetAllWeavedAssemblies()

Disassembly:
	0x01E8F220 STR W8, [X20 + 0x10]
	0x01E8F224 CBZ X19, 0x1E8F270
	0x01E8F228 ADRP X10, 0x2264000
	0x01E8F22C LDR X8, [X19]
	0x01E8F230 LDR X10, [X10 + 0xE00]
	0x01E8F234 LDRH W9, [X8 + 0x12E]
	0x01E8F238 LDR X1, [X10]
	0x01E8F23C CBZ X9, 0x1E8F260
	0x01E8F240 LDR X10, [X8 + 0xB0]
	0x01E8F244 ADD X10, X10, 0x8
	0x01E8F248 LDUR X11, [X10 - 0x8]
	0x01E8F24C CMP X11, X1
	0x01E8F250 B.EQ 0x1E8F27C
	0x01E8F254 SUBS X9, X9, 0x1
	0x01E8F258 ADD X10, X10, 0x10
	0x01E8F25C B.NE 0x1E8F248
	0x01E8F260 MOV X0, X19
	0x01E8F264 MOV W2, W31
	0x01E8F268 BL 0x1C5C788
	0x01E8F26C B 0x1E8F288
	0x01E8F270 LDP X20, X19, [X31 + 0x10]
	0x01E8F274 LDR X30, [X31], #0x20
	0x01E8F278 RET
	0x01E8F27C LDRSW X9, [X10]
	0x01E8F280 ADD X8, X8, X9, 0x4, LSL
	0x01E8F284 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x254B000
	005 Move X20, 0x2270000
	006 Move W8, [X19+594]
	007 Move X20, [X20+128]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2270000
	013 Move X0, [X0+128]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+594], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move TEMP, 1
	023 Not TEMP
	024 Move W8, TEMP
	025 Move X0, X31
	026 Move [X19+16], W8
	027 Call Environment.get_CurrentManagedThreadId
	028 Move [X19+32], W0
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return X0

Method: System.Collections.Generic.IEnumerable`1<System.Type> GetAllSimulationBehaviourTypes()

Disassembly:
	0x01E8F2BC MOV X19, X0
	0x01E8F2C0 BL 0x3380310
	0x01E8F2C4 ADRP X0, 0x226F000
	0x01E8F2C8 LDR X0, [X0 + 0xD0]
	0x01E8F2CC BL 0x1C16D08
	0x01E8F2D0 MOV X1, X0
	0x01E8F2D4 MOV X0, X19
	0x01E8F2D8 BL 0x1C16DEC
	0x01E8F2DC LDR X0, [X0 + 0x18]
	0x01E8F2E0 RET
	0x01E8F2E4 STR X30, [X31 - 0x20]!
	0x01E8F2E8 STP X20, X19, [X31 + 0x10]
	0x01E8F2EC ADRP X20, 0x254A000
	0x01E8F2F0 LDRB W8, [X20 + 0x261]
	0x01E8F2F4 MOV X19, X0
	0x01E8F2F8 TBNZ X8, 0x0, 0x1E8F310
	0x01E8F2FC ADRP X0, 0x226F000
	0x01E8F300 LDR X0, [X0 + 0xA0]
	0x01E8F304 BL 0x1C16CF4
	0x01E8F308 MOVZ W8, 0x1
	0x01E8F30C STRB W8, [X20 + 0x261]
	0x01E8F310 LDR W8, [X19 + 0x10]
	0x01E8F314 ADDS W31, W8, 0x2
	0x01E8F318 B.NE 0x1E8F338
	0x01E8F31C LDR W20, [X19 + 0x20]
	0x01E8F320 MOV X0, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x254B000
	005 Move X20, 0x2270000
	006 Move W8, [X19+595]
	007 Move X20, [X20+136]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2270000
	013 Move X0, [X0+136]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+595], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move TEMP, 1
	023 Not TEMP
	024 Move W8, TEMP
	025 Move X0, X31
	026 Move [X19+16], W8
	027 Call Environment.get_CurrentManagedThreadId
	028 Move [X19+32], W0
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return X0

Method: System.Collections.Generic.IEnumerable`1<System.Type> GetAllWeavedSimulationBehaviourTypes()

Disassembly:
	0x01E8F358 STR W31, [X19 + 0x10]
	0x01E8F35C BL 0x33C151C
	0x01E8F360 STR W0, [X19 + 0x20]
	0x01E8F364 MOV X0, X19
	0x01E8F368 LDP X20, X19, [X31 + 0x10]
	0x01E8F36C LDR X30, [X31], #0x20
	0x01E8F370 RET
	0x01E8F374 B 0x1E8F2E4
	0x01E8F378 LDR W8, [X0 + 0x10]
	0x01E8F37C CMP W8, 0x1
	0x01E8F380 B.EQ 0x1E8F38C
	0x01E8F384 ADDS W31, W8, 0x3
	0x01E8F388 B.NE 0x1E8F390
	0x01E8F38C B 0x1E8F718
	0x01E8F390 RET
	0x01E8F394 SUB X31, X31, 0x30
	0x01E8F398 STP X30, X0, [X31 + 0x10]
	0x01E8F39C STP X20, X19, [X31 + 0x20]
	0x01E8F3A0 ADRP X20, 0x254A000
	0x01E8F3A4 LDRB W8, [X20 + 0x262]
	0x01E8F3A8 MOV X19, X0
	0x01E8F3AC TBNZ X8, 0x0, 0x1E8F3F4
	0x01E8F3B0 ADRP X0, 0x226F000
	0x01E8F3B4 LDR X0, [X0 + 0xD8]
	0x01E8F3B8 BL 0x1C16CF4
	0x01E8F3BC ADRP X0, 0x226F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x254B000
	005 Move X20, 0x2270000
	006 Move W8, [X19+596]
	007 Move X20, [X20+144]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2270000
	013 Move X0, [X0+144]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+596], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move TEMP, 1
	023 Not TEMP
	024 Move W8, TEMP
	025 Move X0, X31
	026 Move [X19+16], W8
	027 Call Environment.get_CurrentManagedThreadId
	028 Move [X19+32], W0
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return X0

Method: System.Collections.Generic.IEnumerable`1<System.Type> GetAllNetworkBehaviourTypes()

Disassembly:
	0x01E8F3F4 ADD X8, X31, 0x18
	0x01E8F3F8 STP X31, X8, [X31]
	0x01E8F3FC LDR W8, [X19 + 0x10]
	0x01E8F400 CMP W8, 0x1
	0x01E8F404 B.EQ 0x1E8F468
	0x01E8F408 CBNZ W8, 0x1E8F4B8
	0x01E8F40C MOVN W8, 0x0
	0x01E8F410 STR W8, [X19 + 0x10]
	0x01E8F414 BL 0x1E8E220
	0x01E8F418 MOV X19, X0
	0x01E8F41C CBZ X0, 0x1E8F4A8
	0x01E8F420 ADRP X10, 0x226F000
	0x01E8F424 LDR X8, [X19]
	0x01E8F428 LDR X10, [X10 + 0xD8]
	0x01E8F42C LDRH W9, [X8 + 0x12E]
	0x01E8F430 LDR X1, [X10]
	0x01E8F434 CBZ X9, 0x1E8F458
	0x01E8F438 LDR X10, [X8 + 0xB0]
	0x01E8F43C ADD X10, X10, 0x8
	0x01E8F440 LDUR X11, [X10 - 0x8]
	0x01E8F444 CMP X11, X1
	0x01E8F448 B.EQ 0x1E8F474
	0x01E8F44C SUBS X9, X9, 0x1
	0x01E8F450 ADD X10, X10, 0x10
	0x01E8F454 B.NE 0x1E8F440
	0x01E8F458 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x254B000
	005 Move X20, 0x2270000
	006 Move W8, [X19+597]
	007 Move X20, [X20+152]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2270000
	013 Move X0, [X0+152]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+597], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move TEMP, 1
	023 Not TEMP
	024 Move W8, TEMP
	025 Move X0, X31
	026 Move [X19+16], W8
	027 Call Environment.get_CurrentManagedThreadId
	028 Move [X19+32], W0
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return X0

Method: System.Collections.Generic.IEnumerable`1<System.Type> GetAllWeavedNetworkBehaviourTypes()

Disassembly:
	0x01E8F490 MOVN W9, 0x2
	0x01E8F494 MOV X20, X0
	0x01E8F498 STR X0, [X8 + 0x28]
	0x01E8F49C STR W9, [X8 + 0x10]
	0x01E8F4A0 CBNZ X20, 0x1E8F5E0
	0x01E8F4A4 BL 0x1C16F20
	0x01E8F4A8 BL 0x1C16F20
	0x01E8F4AC B 0x1E8F6B8
	0x01E8F4B0 B 0x1E8F6B8
	0x01E8F4B4 B 0x1E8F6B8
	0x01E8F4B8 MOV W0, W31
	0x01E8F4BC B 0x1E8F66C
	0x01E8F4C0 LDR X19, [X0 + 0x28]
	0x01E8F4C4 CBZ X19, 0x1E8F67C
	0x01E8F4C8 ADRP X10, 0x226F000
	0x01E8F4CC LDR X8, [X19]
	0x01E8F4D0 LDR X10, [X10 + 0xE0]
	0x01E8F4D4 LDRH W9, [X8 + 0x12E]
	0x01E8F4D8 LDR X1, [X10]
	0x01E8F4DC CBZ X9, 0x1E8F500
	0x01E8F4E0 LDR X10, [X8 + 0xB0]
	0x01E8F4E4 ADD X10, X10, 0x8
	0x01E8F4E8 LDUR X11, [X10 - 0x8]
	0x01E8F4EC CMP X11, X1
	0x01E8F4F0 B.EQ 0x1E8F510
	0x01E8F4F4 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x254B000
	005 Move X20, 0x2270000
	006 Move W8, [X19+598]
	007 Move X20, [X20+160]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2270000
	013 Move X0, [X0+160]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+598], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move TEMP, 1
	023 Not TEMP
	024 Move W8, TEMP
	025 Move X0, X31
	026 Move [X19+16], W8
	027 Call Environment.get_CurrentManagedThreadId
	028 Move [X19+32], W0
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return X0

Method: System.Collections.Generic.IEnumerable`1<System.Type> GetAllWeaverGeneratedTypes()

Disassembly:
	0x01E8F52C LDR X8, [X0]
	0x01E8F530 LDR X1, [X8 + 0x230]
	0x01E8F534 LDR X9, [X8 + 0x228]
	0x01E8F538 BLR X9
	0x01E8F53C LDR X19, [X31 + 0x18]
	0x01E8F540 MOV X8, X0
	0x01E8F544 MOV W9, W31
	0x01E8F548 STR X0, [X19 + 0x30]
	0x01E8F54C STR W31, [X19 + 0x38]
	0x01E8F550 CBZ X8, 0x1E8F5D0
	0x01E8F554 LDR W10, [X8 + 0x18]
	0x01E8F558 CMP W9, W10
	0x01E8F55C B.GE 0x1E8F5D4
	0x01E8F560 B.CS 0x1E8F684
	0x01E8F564 ADRP X10, 0x2264000
	0x01E8F568 LDR X10, [X10 + 0x6C0]
	0x01E8F56C ADD X8, X8, W9, 0x3, SXTW
	0x01E8F570 LDR X0, [X10]
	0x01E8F574 ADRP X10, 0x226E000
	0x01E8F578 LDR X10, [X10 + 0x948]
	0x01E8F57C LDR X20, [X8 + 0x20]
	0x01E8F580 LDR W8, [X0 + 0xE0]
	0x01E8F584 LDR X19, [X10]
	0x01E8F588 CBNZ W8, 0x1E8F590
	0x01E8F58C BL 0x1C16DFC
	0x01E8F590 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x254B000
	005 Move X20, 0x2270000
	006 Move W8, [X19+599]
	007 Move X20, [X20+168]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2270000
	013 Move X0, [X0+168]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+599], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move TEMP, 1
	023 Not TEMP
	024 Move W8, TEMP
	025 Move X0, X31
	026 Move [X19+16], W8
	027 Call Environment.get_CurrentManagedThreadId
	028 Move [X19+32], W0
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return X0

