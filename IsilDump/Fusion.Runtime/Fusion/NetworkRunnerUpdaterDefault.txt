Type: Fusion.NetworkRunnerUpdaterDefault

Method: System.Void ClearStatics()

Disassembly:
	0x01EBA334 ADRP X0, 0x2245000
	0x01EBA338 LDR X0, [X0 + 0x588]
	0x01EBA33C BL 0x1C16CF4
	0x01EBA340 MOVZ W8, 0x1
	0x01EBA344 STRB W8, [X21 + 0x41B]
	0x01EBA348 ADRP X22, 0x2244000
	0x01EBA34C LDR X0, [X19]
	0x01EBA350 LDR X20, [X20]
	0x01EBA354 LDR X22, [X22 + 0x298]
	0x01EBA358 CBZ X0, 0x1EBA374
	0x01EBA35C LDR X8, [X0]
	0x01EBA360 LDR X9, [X8 + 0x2E8]
	0x01EBA364 LDR X1, [X8 + 0x2F0]
	0x01EBA368 BLR X9
	0x01EBA36C MOV X21, X0
	0x01EBA370 B 0x1EBA378
	0x01EBA374 MOV X21, X31
	0x01EBA378 LDR W8, [X19 + 0x8]
	0x01EBA37C LDR X0, [X22]
	0x01EBA380 ADD X1, X31, 0xC
	0x01EBA384 STR W8, [X31 + 0xC]
	0x01EBA388 BL 0x1C16E04
	0x01EBA38C MOV X2, X0
	0x01EBA390 MOV X0, X20
	0x01EBA394 MOV X1, X21
	0x01EBA398 MOV X3, X31
	0x01EBA39C BL 0x3227BD4
	0x01EBA3A0 LDP X20, X19, [X31 + 0x20]
	0x01EBA3A4 LDP X22, X21, [X31 + 0x10]
	0x01EBA3A8 LDR X30, [X31], #0x30
	0x01EBA3AC RET
	0x01EBA3B0 SUB X31, X31, 0x20
	0x01EBA3B4 STP X1, X30, [X31 + 0x8]
	0x01EBA3B8 STR X0, [X31]
	0x01EBA3BC ADD X0, X31, 0x0
	0x01EBA3C0 MOV X1, X2
	0x01EBA3C4 MOV X2, X3
	0x01EBA3C8 BL 0x1EBA168
	0x01EBA3CC LDR X30, [X31 + 0x10]
	0x01EBA3D0 AND W0, W0, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2520000
	005 Move X19, 0x2245000
	006 Move W8, [X20+1036]
	007 Move X19, [X19+2384]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x2245000
	013 Move X0, [X0+1960]
	014 Call 0x1C17CF4
	015 Move X0, 0x2245000
	016 Move X0, [X0+2384]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1036], W8
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X19]
	026 Move X8, [X0+184]
	027 Move X9, [X8]
	028 Compare X9, 0
	029 JumpIfEqual {50}
	030 Move W2, [X9+24]
	031 Move W10, [X9+28]
	032 Add W10, W10, 1
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move [X9+24], W31
	035 Move [X9+28], W10
	036 Move X0, [X9+16]
	037 Move W1, W31
	038 Move X3, X31
	039 Call Array.Clear, X0, X1, X2
	040 Move X8, [X19]
	041 Move X8, [X8+184]
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move TEMP, 0
	045 Not TEMP
	046 Move W9, TEMP
	047 Move [X8+8], W9
	048 Move X30, [X31+32]
	049 Return 
	050 Call 0x1C17F20

Method: System.Boolean RegisterInPlayerLoop(Fusion.NetworkRunnerUpdaterDefaultInvokeSettings updateSettings, Fusion.NetworkRunnerUpdaterDefaultInvokeSettings renderSettings)

Disassembly:
	0x01EBA3D4 ADD X31, X31, 0x20
	0x01EBA3D8 RET
	0x01EBA3DC SUB X31, X31, 0x150
	0x01EBA3E0 STP X29, X30, [X31 + 0xF0]
	0x01EBA3E4 STP X28, X27, [X31 + 0x100]
	0x01EBA3E8 STP X26, X25, [X31 + 0x110]
	0x01EBA3EC STP X24, X23, [X31 + 0x120]
	0x01EBA3F0 STP X22, X21, [X31 + 0x130]
	0x01EBA3F4 STP X20, X19, [X31 + 0x140]
	0x01EBA3F8 MRS X25, 0xC000
	0x01EBA3FC LDR X8, [X25 + 0x28]
	0x01EBA400 ADRP X20, 0x251F000
	0x01EBA404 MOV X19, X0
	0x01EBA408 STR X8, [X31 + 0xE8]
	0x01EBA40C LDRB W8, [X20 + 0x41C]
	0x01EBA410 TBNZ X8, 0x0, 0x1EBA608
	0x01EBA414 ADRP X0, 0x2239000
	0x01EBA418 LDR X0, [X0 + 0xB58]
	0x01EBA41C BL 0x1C16CF4
	0x01EBA420 ADRP X0, 0x223D000
	0x01EBA424 LDR X0, [X0 + 0xFA8]
	0x01EBA428 BL 0x1C16CF4
	0x01EBA42C ADRP X0, 0x2245000
	0x01EBA430 LDR X0, [X0 + 0x590]
	0x01EBA434 BL 0x1C16CF4
	0x01EBA438 ADRP X0, 0x223D000
	0x01EBA43C LDR X0, [X0 + 0xFB0]
	0x01EBA440 BL 0x1C16CF4
	0x01EBA444 ADRP X0, 0x223D000
	0x01EBA448 LDR X0, [X0 + 0xFB8]
	0x01EBA44C BL 0x1C16CF4
	0x01EBA450 ADRP X0, 0x223D000
	0x01EBA454 LDR X0, [X0 + 0xFC0]
	0x01EBA458 BL 0x1C16CF4
	0x01EBA45C ADRP X0, 0x2243000
	0x01EBA460 LDR X0, [X0 + 0x280]
	0x01EBA464 BL 0x1C16CF4
	0x01EBA468 ADRP X0, 0x2239000
	0x01EBA46C LDR X0, [X0 + 0x758]
	0x01EBA470 BL 0x1C16CF4
	0x01EBA474 ADRP X0, 0x223D000
	0x01EBA478 LDR X0, [X0 + 0xE30]
	0x01EBA47C BL 0x1C16CF4
	0x01EBA480 ADRP X0, 0x223D000
	0x01EBA484 LDR X0, [X0 + 0xE38]
	0x01EBA488 BL 0x1C16CF4
	0x01EBA48C ADRP X0, 0x2245000
	0x01EBA490 LDR X0, [X0 + 0x598]
	0x01EBA494 BL 0x1C16CF4
	0x01EBA498 ADRP X0, 0x2245000
	0x01EBA49C LDR X0, [X0 + 0x5A0]
	0x01EBA4A0 BL 0x1C16CF4
	0x01EBA4A4 ADRP X0, 0x223A000
	0x01EBA4A8 LDR X0, [X0 + 0x478]
	0x01EBA4AC BL 0x1C16CF4
	0x01EBA4B0 ADRP X0, 0x2245000
	0x01EBA4B4 LDR X0, [X0 + 0x5A8]
	0x01EBA4B8 BL 0x1C16CF4
	0x01EBA4BC ADRP X0, 0x2239000
	0x01EBA4C0 LDR X0, [X0 + 0xAC8]
	0x01EBA4C4 BL 0x1C16CF4
	0x01EBA4C8 ADRP X0, 0x2245000
	0x01EBA4CC LDR X0, [X0 + 0x5B0]
	0x01EBA4D0 BL 0x1C16CF4
	0x01EBA4D4 ADRP X0, 0x2245000
	0x01EBA4D8 LDR X0, [X0 + 0x5B8]
	0x01EBA4DC BL 0x1C16CF4
	0x01EBA4E0 ADRP X0, 0x2245000
	0x01EBA4E4 LDR X0, [X0 + 0x5C0]
	0x01EBA4E8 BL 0x1C16CF4
	0x01EBA4EC ADRP X0, 0x2245000
	0x01EBA4F0 LDR X0, [X0 + 0x5C8]
	0x01EBA4F4 BL 0x1C16CF4
	0x01EBA4F8 ADRP X0, 0x2245000
	0x01EBA4FC LDR X0, [X0 + 0x5D0]
	0x01EBA500 BL 0x1C16CF4
	0x01EBA504 ADRP X0, 0x2245000
	0x01EBA508 LDR X0, [X0 + 0x5D8]
	0x01EBA50C BL 0x1C16CF4
	0x01EBA510 ADRP X0, 0x2245000
	0x01EBA514 LDR X0, [X0 + 0x268]
	0x01EBA518 BL 0x1C16CF4
	0x01EBA51C ADRP X0, 0x2245000
	0x01EBA520 LDR X0, [X0 + 0x5E0]
	0x01EBA524 BL 0x1C16CF4
	0x01EBA528 ADRP X0, 0x2243000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x2520000
	011 Move X24, 0x2245000
	012 Move W8, [X23+1037]
	013 Move X24, [X24+2384]
	014 Move X19, X3
	015 Move X20, X2
	016 Move X21, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x2245000
	023 Move X0, [X0+2384]
	024 Call 0x1C17CF4
	025 Move X0, 0x2246000
	026 Move X0, [X0+1256]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+1037], W8
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X24]
	036 Move X8, [X0+184]
	037 Move X25, [X8+16]
	038 Compare X25, 0
	039 JumpIfEqual {80}
	040 Move W9, [X0+224]
	041 Move X8, X25
	042 Compare W9, 0
	043 JumpIfNotEqual {50}
	044 Call 0x1C17DFC
	045 Move X8, [X24]
	046 Move X8, [X8+184]
	047 Move X8, [X8+16]
	048 Compare X8, 0
	049 JumpIfEqual {110}
	050 Move X9, [X8+16]
	051 Move X8, [X8+24]
	052 Add X0, X31, 0
	053 Move X1, X22
	054 Move X2, X21
	055 Move [X31], X9
	056 Move [X31+8], X8
	057 Call NetworkRunnerUpdaterDefaultInvokeSettings.Equals, X0, X1
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {98}
	062 Move X0, [X24]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {68}
	066 Call 0x1C17DFC
	067 Move X0, [X24]
	068 Move X8, [X0+184]
	069 Move X8, [X8+16]
	070 Compare X8, 0
	071 JumpIfEqual {110}
	072 Move X9, [X8+32]
	073 Move X8, [X8+40]
	074 Add X0, X31, 0
	075 Move X1, X20
	076 Move X2, X19
	077 Move [X31], X9
	078 Move [X31+8], X8
	079 Call NetworkRunnerUpdaterDefaultInvokeSettings.Equals, X0, X1
	080 Move X8, 0x2246000
	081 Move X8, [X8+1256]
	082 Move X0, [X8]
	083 Call 0x1C17F10
	084 Move X1, X22
	085 Move X2, X21
	086 Move X3, X20
	087 Move X4, X19
	088 Move X23, X0
	089 Call PlayerLoopSystemRegistration..ctor, X0, X1, X2
	090 Move X0, [X24]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {96}
	094 Call 0x1C17DFC
	095 Move X0, [X24]
	096 Move X8, [X0+184]
	097 Move [X8+16], X23
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X20, [X31+64]
	100 Move X19, [X31+72]
	101 Move X22, [X31+48]
	102 Move X21, [X31+56]
	103 Move X24, [X31+32]
	104 Move X23, [X31+40]
	105 Move X30, [X31+16]
	106 Move X25, [X31+24]
	107 NotImplemented "Instruction CSET not yet implemented."
	108 Add X31, X31, 80
	109 Return X0
	110 Call 0x1C17F20

Method: System.Boolean UnregisterFromPlayerLoop()

Disassembly:
	0x01EBA7FC STR X8, [X22 + 0x40]
	0x01EBA800 LDRH W8, [X19 + 0xEA]
	0x01EBA804 LDR X0, [X24]
	0x01EBA808 LDR X28, [X28 + 0x388]
	0x01EBA80C ADD X1, X31, 0x28
	0x01EBA810 STRH W8, [X31 + 0x28]
	0x01EBA814 BL 0x1C16E04
	0x01EBA818 LDR X8, [X27]
	0x01EBA81C LDR X1, [X28]
	0x01EBA820 MOV X2, X0
	0x01EBA824 MOV X3, X31
	0x01EBA828 MOV X0, X8
	0x01EBA82C BL 0x3227BD4
	0x01EBA830 LDR W8, [X22 + 0x18]
	0x01EBA834 CMP W8, 0x5
	0x01EBA838 B.LS 0x1EBAC44
	0x01EBA83C STR X0, [X22 + 0x48]
	0x01EBA840 LDRH W8, [X19 + 0xE8]
	0x01EBA844 LDR X0, [X24]
	0x01EBA848 ADRP X28, 0x2243000
	0x01EBA84C LDR X28, [X28 + 0x368]
	0x01EBA850 ADD X1, X31, 0x24
	0x01EBA854 STRH W8, [X31 + 0x24]
	0x01EBA858 BL 0x1C16E04
	0x01EBA85C LDR X8, [X27]
	0x01EBA860 LDR X1, [X28]
	0x01EBA864 MOV X2, X0
	0x01EBA868 MOV X3, X31
	0x01EBA86C MOV X0, X8
	0x01EBA870 BL 0x3227BD4
	0x01EBA874 LDR W8, [X22 + 0x18]
	0x01EBA878 CMP W8, 0x6
	0x01EBA87C B.LS 0x1EBAC44
	0x01EBA880 ADRP X28, 0x2245000
	0x01EBA884 LDR X28, [X28 + 0x5A8]
	0x01EBA888 STR X0, [X22 + 0x50]
	0x01EBA88C LDUR V0, [X19 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2520000
	005 Move X19, 0x2245000
	006 Move W8, [X20+1038]
	007 Move X19, [X19+2384]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2245000
	013 Move X0, [X0+2384]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1038], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X8+16]
	025 Compare X20, 0
	026 JumpIfEqual {40}
	027 Move W9, [X0+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {33}
	030 Call 0x1C17DFC
	031 Move X8, [X19]
	032 Move X8, [X8+184]
	033 Move X8, [X8+16]
	034 Compare X8, 0
	035 JumpIfEqual {46}
	036 Call PlayerLoopSystemRegistration.Dispose, X0
	037 Move X8, [X19]
	038 Move X8, [X8+184]
	039 Move [X8+16], X31
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 NotImplemented "Instruction CSET not yet implemented."
	044 Move X30, [X31+32]
	045 Return X0
	046 Call 0x1C17F20

Method: System.Void Fusion.INetworkRunnerUpdater.Initialize(Fusion.NetworkRunner runner)

Disassembly:
	0x01EBA990 STR X9, [X31 + 0x18]
	0x01EBA994 BL 0x1C16E04
	0x01EBA998 LDR X8, [X27]
	0x01EBA99C LDR X1, [X28]
	0x01EBA9A0 MOV X2, X0
	0x01EBA9A4 MOV X3, X31
	0x01EBA9A8 MOV X0, X8
	0x01EBA9AC BL 0x3227BD4
	0x01EBA9B0 LDR W8, [X22 + 0x18]
	0x01EBA9B4 CMP W8, 0xB
	0x01EBA9B8 B.LS 0x1EBAC44
	0x01EBA9BC ADRP X8, 0x2245000
	0x01EBA9C0 LDR X8, [X8 + 0x5A0]
	0x01EBA9C4 ADRP X28, 0x2245000
	0x01EBA9C8 LDR X28, [X28 + 0x640]
	0x01EBA9CC STR X0, [X22 + 0x78]
	0x01EBA9D0 LDUR V0, [X19 + 0x88]
	0x01EBA9D4 LDR X9, [X19 + 0xB8]
	0x01EBA9D8 LDUR V1, [X19 + 0xA8]
	0x01EBA9DC LDUR V2, [X19 + 0x98]
	0x01EBA9E0 LDR X0, [X8]
	0x01EBA9E4 ADD X1, X31, 0x60
	0x01EBA9E8 STR X9, [X31 + 0x90]
	0x01EBA9EC STP V2, V1, [X31 + 0x70]
	0x01EBA9F0 STR V0, [X31 + 0x6]
	0x01EBA9F4 BL 0x1C16E04
	0x01EBA9F8 LDR X8, [X27]
	0x01EBA9FC LDR X1, [X28]
	0x01EBAA00 MOV X2, X0
	0x01EBAA04 MOV X3, X31
	0x01EBAA08 MOV X0, X8
	0x01EBAA0C BL 0x3227BD4
	0x01EBAA10 LDR W8, [X22 + 0x18]
	0x01EBAA14 CMP W8, 0xC
	0x01EBAA18 B.LS 0x1EBAC44
	0x01EBAA1C ADRP X8, 0x2239000
	0x01EBAA20 LDR X8, [X8 + 0xB58]
	0x01EBAA24 STR X0, [X22 + 0x80]
	0x01EBAA28 LDRB W9, [X19 + 0xC8]
	0x01EBAA2C ADRP X28, 0x2245000
	0x01EBAA30 LDR X0, [X8]
	0x01EBAA34 LDR X28, [X28 + 0x638]
	0x01EBAA38 ADD X1, X31, 0x14
	0x01EBAA3C STRB W9, [X31 + 0x14]
	0x01EBAA40 BL 0x1C16E04
	0x01EBAA44 LDR X8, [X27]
	0x01EBAA48 LDR X1, [X28]
	0x01EBAA4C MOV X2, X0
	0x01EBAA50 MOV X3, X31
	0x01EBAA54 MOV X0, X8
	0x01EBAA58 BL 0x3227BD4
	0x01EBAA5C LDR W8, [X22 + 0x18]
	0x01EBAA60 CMP W8, 0xD
	0x01EBAA64 B.LS 0x1EBAC44
	0x01EBAA68 CMP W8, 0xE
	0x01EBAA6C STR X0, [X22 + 0x88]
	0x01EBAA70 B.EQ 0x1EBAC44
	0x01EBAA74 ADRP X9, 0x2245000
	0x01EBAA78 LDR X9, [X9 + 0x5F0]
	0x01EBAA7C CMP W8, 0xF
	0x01EBAA80 LDR X9, [X9]
	0x01EBAA84 STR X9, [X22 + 0x90]
	0x01EBAA88 B.LS 0x1EBAC44
	0x01EBAA8C CMP W8, 0x10
	0x01EBAA90 STR X20, [X22 + 0x98]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2520000
	009 Move X24, 0x2245000
	010 Move W8, [X21+1039]
	011 Move X24, [X24+2384]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x2245000
	019 Move X0, [X0+2608]
	020 Call 0x1C17CF4
	021 Move X0, 0x2245000
	022 Move X0, [X0+2384]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+1039], W8
	026 Move X0, [X24]
	027 Move X23, [X20+16]
	028 Move X22, [X20+24]
	029 Move X21, [X20+32]
	030 Move X20, [X20+40]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X23
	036 Move X1, X22
	037 Move X2, X21
	038 Move X3, X20
	039 Call NetworkRunnerUpdaterDefault.RegisterInPlayerLoop, X0, X1
	040 Move X8, [X24]
	041 Move X8, [X8+184]
	042 Move X0, [X8]
	043 Compare X0, 0
	044 JumpIfEqual {82}
	045 Move X9, 0x2245000
	046 Move X9, [X9+2608]
	047 Move W10, [X0+28]
	048 Move X8, [X0+16]
	049 Move X9, [X9]
	050 Add W10, W10, 1
	051 Move [X0+28], W10
	052 Compare X8, 0
	053 JumpIfEqual {82}
	054 NotImplemented "Instruction LDRSW not yet implemented."
	055 Move W11, [X8+24]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Add W9, W10, 1
	058 Add X8, X8, X10
	059 Move [X0+24], W9
	060 Move [X8+32], X19
	061 Move X20, [X31+48]
	062 Move X19, [X31+56]
	063 Move X22, [X31+32]
	064 Move X21, [X31+40]
	065 Move X24, [X31+16]
	066 Move X23, [X31+24]
	067 Move X30, [X31+64]
	068 Return 
	069 Move X8, [X9+32]
	070 Move X1, X19
	071 Move X20, [X31+48]
	072 Move X19, [X31+56]
	073 Move X22, [X31+32]
	074 Move X21, [X31+40]
	075 Move X8, [X8+192]
	076 Move X24, [X31+16]
	077 Move X23, [X31+24]
	078 Move X2, [X8+112]
	079 Move X30, [X31+64]
	080 Call List`1<Object>.AddWithResize, X0, X1
	081 Return 
	082 Call 0x1C17F20

Method: System.Void Fusion.INetworkRunnerUpdater.Shutdown(Fusion.NetworkRunner runner)

Disassembly:
	0x01EBAA94 B.EQ 0x1EBAC44
	0x01EBAA98 ADRP X9, 0x2245000
	0x01EBAA9C LDR X9, [X9 + 0x618]
	0x01EBAAA0 CMP W8, 0x11
	0x01EBAAA4 LDR X9, [X9]
	0x01EBAAA8 STR X9, [X22 + 0xA0]
	0x01EBAAAC B.LS 0x1EBAC44
	0x01EBAAB0 CMP W8, 0x12
	0x01EBAAB4 STR X21, [X22 + 0xA8]
	0x01EBAAB8 B.EQ 0x1EBAC44
	0x01EBAABC ADRP X9, 0x2245000
	0x01EBAAC0 LDR X9, [X9 + 0x610]
	0x01EBAAC4 CMP W8, 0x13
	0x01EBAAC8 LDR X9, [X9]
	0x01EBAACC STR X9, [X22 + 0xB0]
	0x01EBAAD0 B.LS 0x1EBAC44
	0x01EBAAD4 CMP W8, 0x14
	0x01EBAAD8 STR X23, [X22 + 0xB8]
	0x01EBAADC B.EQ 0x1EBAC44
	0x01EBAAE0 ADRP X9, 0x2245000
	0x01EBAAE4 LDR X9, [X9 + 0x630]
	0x01EBAAE8 CMP W8, 0x15
	0x01EBAAEC LDR X9, [X9]
	0x01EBAAF0 STR X9, [X22 + 0xC0]
	0x01EBAAF4 B.LS 0x1EBAC44
	0x01EBAAF8 LDR X9, [X19 + 0xF0]
	0x01EBAAFC CMP W8, 0x16
	0x01EBAB00 STR X9, [X22 + 0xC8]
	0x01EBAB04 B.EQ 0x1EBAC44
	0x01EBAB08 ADRP X9, 0x2245000
	0x01EBAB0C LDR X9, [X9 + 0x620]
	0x01EBAB10 CMP W8, 0x17
	0x01EBAB14 LDR X9, [X9]
	0x01EBAB18 STR X9, [X22 + 0xD0]
	0x01EBAB1C B.LS 0x1EBAC44
	0x01EBAB20 LDR X9, [X19 + 0xF8]
	0x01EBAB24 CMP W8, 0x18
	0x01EBAB28 STR X9, [X22 + 0xD8]
	0x01EBAB2C B.EQ 0x1EBAC44
	0x01EBAB30 LDR X8, [X26]
	0x01EBAB34 ADRP X9, 0x2245000
	0x01EBAB38 LDR X9, [X9 + 0x5D0]
	0x01EBAB3C MOV X3, X31
	0x01EBAB40 STR X8, [X22 + 0xE0]
	0x01EBAB44 LDR X2, [X19 + 0x100]
	0x01EBAB48 LDR X0, [X27]
	0x01EBAB4C LDR X1, [X9]
	0x01EBAB50 BL 0x3227BD4
	0x01EBAB54 LDR W8, [X22 + 0x18]
	0x01EBAB58 CMP W8, 0x19
	0x01EBAB5C B.LS 0x1EBAC44
	0x01EBAB60 ADRP X8, 0x2245000
	0x01EBAB64 LDR X8, [X8 + 0x5C8]
	0x01EBAB68 STR X0, [X22 + 0xE8]
	0x01EBAB6C LDR X2, [X19 + 0x108]
	0x01EBAB70 LDR X0, [X27]
	0x01EBAB74 LDR X1, [X8]
	0x01EBAB78 MOV X3, X31
	0x01EBAB7C BL 0x3227BD4
	0x01EBAB80 LDR W8, [X22 + 0x18]
	0x01EBAB84 CMP W8, 0x1A
	0x01EBAB88 B.LS 0x1EBAC44
	0x01EBAB8C STR X0, [X22 + 0xF0]
	0x01EBAB90 LDRH W8, [X19 + 0x110]
	0x01EBAB94 LDR X0, [X24]
	0x01EBAB98 ADRP X20, 0x2245000
	0x01EBAB9C LDR X20, [X20 + 0x5B8]
	0x01EBABA0 ADD X1, X31, 0x10
	0x01EBABA4 STRH W8, [X31 + 0x10]
	0x01EBABA8 BL 0x1C16E04
	0x01EBABAC LDR X8, [X27]
	0x01EBABB0 LDR X1, [X20]
	0x01EBABB4 MOV X2, X0
	0x01EBABB8 MOV X3, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2520000
	006 Move X20, 0x2245000
	007 Move W8, [X21+1040]
	008 Move X20, [X20+2384]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x2246000
	015 Move X0, [X0+1328]
	016 Call 0x1C17CF4
	017 Move X0, 0x2246000
	018 Move X0, [X0+1336]
	019 Call 0x1C17CF4
	020 Move X0, 0x2246000
	021 Move X0, [X0+1344]
	022 Call 0x1C17CF4
	023 Move X0, 0x2245000
	024 Move X0, [X0+2384]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+1040], W8
	028 Move X0, [X20]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X20]
	034 Move X8, [X0+184]
	035 Move X0, [X8]
	036 Compare X0, 0
	037 JumpIfEqual {97}
	038 Move X8, 0x2246000
	039 Move X8, [X8+1328]
	040 Move X1, X19
	041 Move X2, [X8]
	042 Call List`1<Object>.IndexOf, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, -2147483648
	045 Compare TEMP, -2147483648
	046 JumpIfEqual {54}
	047 Move W19, W0
	048 Move X0, [X20]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfEqual {59}
	052 Move X8, [X0+184]
	053 Move W21, [X8+8]
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Return 
	059 Call 0x1C17DFC
	060 Move X0, [X20]
	061 Move X8, [X0+184]
	062 Move W9, [X0+224]
	063 Move W21, [X8+8]
	064 Compare W9, 0
	065 JumpIfNotEqual {68}
	066 Call 0x1C17DFC
	067 Move X0, [X20]
	068 Move X8, [X0+184]
	069 Move X0, [X8]
	070 Compare X0, 0
	071 JumpIfEqual {97}
	072 Move TEMP, X21
	073 And TEMP, TEMP, -2147483648
	074 Compare TEMP, -2147483648
	075 JumpIfEqual {87}
	076 Move X8, 0x2246000
	077 Move X8, [X8+1344]
	078 Move W1, W19
	079 Move X20, [X31+16]
	080 Move X19, [X31+24]
	081 Move X2, X31
	082 Move X3, [X8]
	083 Move X30, [X31+32]
	084 Move X21, [X31+40]
	085 Call List`1<Object>.set_Item, X0, X1, X2
	086 Return 
	087 Move X8, 0x2246000
	088 Move X8, [X8+1336]
	089 Move W1, W19
	090 Move X20, [X31+16]
	091 Move X19, [X31+24]
	092 Move X2, [X8]
	093 Move X30, [X31+32]
	094 Move X21, [X31+40]
	095 Call List`1<Object>.RemoveAt, X0, X1
	096 Return 
	097 Call 0x1C17F20

Method: System.Void InvokeUpdate()

Disassembly:
	0x01EBABBC MOV X0, X8
	0x01EBABC0 BL 0x3227BD4
	0x01EBABC4 LDR W8, [X22 + 0x18]
	0x01EBABC8 CMP W8, 0x1B
	0x01EBABCC B.LS 0x1EBAC44
	0x01EBABD0 ADRP X8, 0x2245000
	0x01EBABD4 ADRP X9, 0x2245000
	0x01EBABD8 LDR X8, [X8 + 0x5F8]
	0x01EBABDC LDR X9, [X9 + 0x600]
	0x01EBABE0 STR X0, [X22 + 0xF8]
	0x01EBABE4 LDR X2, [X19 + 0x118]
	0x01EBABE8 LDR X0, [X8]
	0x01EBABEC LDR X1, [X9]
	0x01EBABF0 MOV X3, X31
	0x01EBABF4 BL 0x3227BD4
	0x01EBABF8 LDR W8, [X22 + 0x18]
	0x01EBABFC CMP W8, 0x1C
	0x01EBAC00 B.LS 0x1EBAC44
	0x01EBAC04 STR X0, [X22 + 0x100]
	0x01EBAC08 MOV X0, X22
	0x01EBAC0C MOV X1, X31
	0x01EBAC10 BL 0x32278CC
	0x01EBAC14 LDR X8, [X25 + 0x28]
	0x01EBAC18 LDR X9, [X31 + 0xE8]
	0x01EBAC1C CMP X8, X9
	0x01EBAC20 B.NE 0x1EBAC4C
	0x01EBAC24 LDP X20, X19, [X31 + 0x140]
	0x01EBAC28 LDP X22, X21, [X31 + 0x130]
	0x01EBAC2C LDP X24, X23, [X31 + 0x120]
	0x01EBAC30 LDP X26, X25, [X31 + 0x110]
	0x01EBAC34 LDP X28, X27, [X31 + 0x100]
	0x01EBAC38 LDP X29, X30, [X31 + 0xF0]
	0x01EBAC3C ADD X31, X31, 0x150
	0x01EBAC40 RET
	0x01EBAC44 BL 0x1C16F28
	0x01EBAC48 BL 0x1C16F20
	0x01EBAC4C BL 0x3EB1B20
	0x01EBAC50 B 0x1EBAC58
	0x01EBAC54 B 0x1EBAC58
	0x01EBAC58 MOV X22, X0
	0x01EBAC5C CMP W1, 0x1
	0x01EBAC60 B.NE 0x1EBAC94
	0x01EBAC64 MOV X0, X22
	0x01EBAC68 BL 0x3EB1AD0
	0x01EBAC6C LDR X24, [X0]
	0x01EBAC70 BL 0x3EB1AE0
	0x01EBAC74 ADRP X8, 0x223D000
	0x01EBAC78 LDR X8, [X8 + 0xFB0]
	0x01EBAC7C ADD X0, X31, 0x30
	0x01EBAC80 LDR X1, [X8]
	0x01EBAC84 BL 0x2C0A83C
	0x01EBAC88 CBZ X24, 0x1EBA73C
	0x01EBAC8C MOV X0, X24
	0x01EBAC90 BL 0x1C16F18
	0x01EBAC94 MOV X24, X31
	0x01EBAC98 B 0x1EBACA0
	0x01EBAC9C MOV X22, X0
	0x01EBACA0 ADRP X8, 0x223D000
	0x01EBACA4 LDR X8, [X8 + 0xFB0]
	0x01EBACA8 LDR X1, [X8]
	0x01EBACAC ADD X0, X31, 0x30
	0x01EBACB0 BL 0x2C0A83C
	0x01EBACB4 CBNZ X24, 0x1EBACC0
	0x01EBACB8 MOV X0, X22
	0x01EBACBC BL 0x1D2C690
	0x01EBACC0 MOV X0, X24
	0x01EBACC4 BL 0x1C16F18
	0x01EBACC8 BL 0x1990590
	0x01EBACCC LDR W0, [X0 + 0x8C]
	0x01EBACD0 RET
	0x01EBACD4 STR W1, [X0 + 0x8C]
	0x01EBACD8 RET
	0x01EBACDC STR X30, [X31 - 0x30]!
	0x01EBACE0 STP X22, X21, [X31 + 0x10]
	0x01EBACE4 STP X20, X19, [X31 + 0x20]
	0x01EBACE8 ADRP X20, 0x251F000
	0x01EBACEC ADRP X21, 0x2239000
	0x01EBACF0 LDRB W8, [X20 + 0x41E]
	0x01EBACF4 LDR X21, [X21 + 0x9D0]
	0x01EBACF8 MOV X19, X0
	0x01EBACFC TBNZ X8, 0x0, 0x1EBAD50
	0x01EBAD00 ADRP X0, 0x2239000
	0x01EBAD04 LDR X0, [X0 + 0x9D0]
	0x01EBAD08 BL 0x1C16CF4
	0x01EBAD0C ADRP X0, 0x223D000
	0x01EBAD10 LDR X0, [X0 + 0xEB8]
	0x01EBAD14 BL 0x1C16CF4
	0x01EBAD18 ADRP X0, 0x2245000
	0x01EBAD1C LDR X0, [X0 + 0x648]
	0x01EBAD20 BL 0x1C16CF4
	0x01EBAD24 ADRP X0, 0x2245000
	0x01EBAD28 LDR X0, [X0 + 0x650]
	0x01EBAD2C BL 0x1C16CF4
	0x01EBAD30 ADRP X0, 0x2245000
	0x01EBAD34 LDR X0, [X0 + 0x658]
	0x01EBAD38 BL 0x1C16CF4
	0x01EBAD3C ADRP X0, 0x2245000
	0x01EBAD40 LDR X0, [X0 + 0x660]
	0x01EBAD44 BL 0x1C16CF4
	0x01EBAD48 MOVZ W8, 0x1
	0x01EBAD4C STRB W8, [X20 + 0x41E]
	0x01EBAD50 LDR X0, [X21]
	0x01EBAD54 MOVZ W1, 0x5
	0x01EBAD58 BL 0x1C16D6C
	0x01EBAD5C CBZ X0, 0x1EBAEB8
	0x01EBAD60 ADRP X21, 0x2245000
	0x01EBAD64 LDR X21, [X21 + 0x658]
	0x01EBAD68 MOV X20, X0
	0x01EBAD6C LDR X0, [X21]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X19, 0x2520000
	010 Move X22, 0x2245000
	011 Move W8, [X19+1041]
	012 Move X22, [X22+2384]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x2246000
	018 Move X0, [X0+1352]
	019 Call 0x1C17CF4
	020 Move X0, 0x2246000
	021 Move X0, [X0+1360]
	022 Call 0x1C17CF4
	023 Move X0, 0x2245000
	024 Move X0, [X0+2384]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X19+1041], W8
	028 Move X0, [X22]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X22]
	034 Move X8, [X0+184]
	035 Move X9, [X8]
	036 Compare X9, 0
	037 JumpIfEqual {117}
	038 Move W9, [X9+24]
	039 Move X23, 0x2246000
	040 Move X20, 0x223A000
	041 Move X23, [X23+1360]
	042 Move X20, [X20+1432]
	043 Move W19, W31
	044 Move X24, 0x251F000
	045 Move [X8+8], W9
	046 Move W25, 1
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X22]
	052 Move X8, [X0+184]
	053 Move W8, [X8+8]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1C17DFC
	059 Move X0, [X22]
	060 Move X8, [X0+184]
	061 Move X0, [X8]
	062 Compare X0, 0
	063 JumpIfEqual {117}
	064 Move X2, [X23]
	065 Move W1, W19
	066 Call List`1<Object>.get_Item, X0, X1
	067 Move W8, [X24+2594]
	068 Move X21, X0
	069 Compare W8, 0
	070 JumpIfNotEqual {74}
	071 Move X0, X20
	072 Call 0x1C17CF4
	073 Move [X24+2594], W25
	074 Move X0, [X20]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X0, X21
	080 Move X1, X31
	081 Call Object.op_Implicit, X0
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {106}
	086 Compare X21, 0
	087 JumpIfEqual {117}
	088 Move X8, [X21+80]
	089 Compare X8, 0
	090 JumpIfEqual {117}
	091 Move X8, [X8+88]
	092 Compare X8, 0
	093 JumpIfEqual {117}
	094 Move W8, [X8+32]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Compare W8, 0
	097 JumpIfNotEqual {118}
	098 Move X0, X31
	099 Call Time.get_unscaledDeltaTime
	100 Move X0, X31
	101 Call Time.get_deltaTime
	102 NotImplemented "Instruction FCVT not yet implemented."
	103 Move X0, X21
	104 Move X1, X31
	105 Call NetworkRunner.UpdateInternal, X0, V0
	106 Move X0, [X22]
	107 Add W19, W19, 1
	108 Move X20, [X31+48]
	109 Move X19, [X31+56]
	110 Move X22, [X31+32]
	111 Move X21, [X31+40]
	112 Move X24, [X31+16]
	113 Move X23, [X31+24]
	114 Move X30, [X31+64]
	115 Move X25, [X31+72]
	116 Return 
	117 Call 0x1C17F20
	118 Move X0, 0x2243000
	119 Move X0, [X0+1880]
	120 Call 0x1C17D08
	121 Call 0x1C17F10
	122 Move X1, X31
	123 Move X19, X0
	124 Call NotImplementedException..ctor, X0
	125 Move X0, 0x2246000
	126 Move X0, [X0+1288]
	127 Call 0x1C17D08
	128 Move X1, X0
	129 Move X0, X19
	130 Call 0x1C17DEC

Method: System.Void InvokeRender()

Disassembly:
	0x01EBAD70 CBZ X0, 0x1EBAD84
	0x01EBAD74 LDR X8, [X20]
	0x01EBAD78 LDR X1, [X8 + 0x40]
	0x01EBAD7C BL 0x1C16E00
	0x01EBAD80 CBZ X0, 0x1EBAEAC
	0x01EBAD84 LDR W8, [X20 + 0x18]
	0x01EBAD88 CBZ W8, 0x1EBAEA8
	0x01EBAD8C LDR X9, [X21]
	0x01EBAD90 ADRP X21, 0x2245000
	0x01EBAD94 LDR X21, [X21 + 0x648]
	0x01EBAD98 STR X9, [X20 + 0x20]
	0x01EBAD9C LDR X0, [X21]
	0x01EBADA0 CBZ X0, 0x1EBADB8
	0x01EBADA4 LDR X8, [X20]
	0x01EBADA8 LDR X1, [X8 + 0x40]
	0x01EBADAC BL 0x1C16E00
	0x01EBADB0 CBZ X0, 0x1EBAEAC
	0x01EBADB4 LDR W8, [X20 + 0x18]
	0x01EBADB8 CMP W8, 0x1
	0x01EBADBC B.LS 0x1EBAEA8
	0x01EBADC0 LDR X8, [X21]
	0x01EBADC4 ADRP X9, 0x223D000
	0x01EBADC8 LDR X9, [X9 + 0xEB8]
	0x01EBADCC ADD X1, X31, 0xC
	0x01EBADD0 STR X8, [X20 + 0x28]
	0x01EBADD4 LDR W8, [X19 + 0x8C]
	0x01EBADD8 LDR X0, [X9]
	0x01EBADDC STR W8, [X31 + 0xC]
	0x01EBADE0 BL 0x1C16E04
	0x01EBADE4 MOV X21, X0
	0x01EBADE8 CBZ X0, 0x1EBAE00
	0x01EBADEC LDR X8, [X20]
	0x01EBADF0 MOV X0, X21
	0x01EBADF4 LDR X1, [X8 + 0x40]
	0x01EBADF8 BL 0x1C16E00
	0x01EBADFC CBZ X0, 0x1EBAEAC
	0x01EBAE00 LDR W8, [X20 + 0x18]
	0x01EBAE04 CMP W8, 0x2
	0x01EBAE08 B.LS 0x1EBAEA8
	0x01EBAE0C ADRP X22, 0x2245000
	0x01EBAE10 LDR X22, [X22 + 0x650]
	0x01EBAE14 STR X21, [X20 + 0x30]
	0x01EBAE18 LDR X0, [X22]
	0x01EBAE1C CBZ X0, 0x1EBAE34
	0x01EBAE20 LDR X8, [X20]
	0x01EBAE24 LDR X1, [X8 + 0x40]
	0x01EBAE28 BL 0x1C16E00
	0x01EBAE2C CBZ X0, 0x1EBAEAC
	0x01EBAE30 LDR W8, [X20 + 0x18]
	0x01EBAE34 CMP W8, 0x3
	0x01EBAE38 B.LS 0x1EBAEA8
	0x01EBAE3C LDR X8, [X22]
	0x01EBAE40 MOV X0, X19
	0x01EBAE44 STR X8, [X20 + 0x38]
	0x01EBAE48 LDR X8, [X19]
	0x01EBAE4C LDP X9, X1, [X8 + 0x188]
	0x01EBAE50 BLR X9
	0x01EBAE54 MOV X19, X0
	0x01EBAE58 CBZ X0, 0x1EBAE70
	0x01EBAE5C LDR X8, [X20]
	0x01EBAE60 MOV X0, X19
	0x01EBAE64 LDR X1, [X8 + 0x40]
	0x01EBAE68 BL 0x1C16E00
	0x01EBAE6C CBZ X0, 0x1EBAEAC
	0x01EBAE70 LDR W8, [X20 + 0x18]
	0x01EBAE74 CMP W8, 0x4
	0x01EBAE78 B.LS 0x1EBAEA8
	0x01EBAE7C ADRP X8, 0x2245000
	0x01EBAE80 LDR X8, [X8 + 0x660]
	0x01EBAE84 STR X19, [X20 + 0x40]
	0x01EBAE88 MOV X1, X20
	0x01EBAE8C MOV X2, X31
	0x01EBAE90 LDR X0, [X8]
	0x01EBAE94 BL 0x3227C5C
	0x01EBAE98 LDP X20, X19, [X31 + 0x20]
	0x01EBAE9C LDP X22, X21, [X31 + 0x10]
	0x01EBAEA0 LDR X30, [X31], #0x30
	0x01EBAEA4 RET
	0x01EBAEA8 BL 0x1C16F28
	0x01EBAEAC BL 0x1C16F44
	0x01EBAEB0 MOV X1, X31
	0x01EBAEB4 BL 0x1C16DEC
	0x01EBAEB8 BL 0x1C16F20
	0x01EBAEBC LDR W8, [X0 + 0x10]
	0x01EBAEC0 CMP W8, 0x0
	0x01EBAEC4 CSET W0, EQ
	0x01EBAEC8 RET
	0x01EBAECC LDR W0, [X0 + 0x10]
	0x01EBAED0 RET
	0x01EBAED4 STR W1, [X0 + 0x10]
	0x01EBAED8 RET
	0x01EBAEDC LDR X0, [X0 + 0x18]
	0x01EBAEE0 RET
	0x01EBAEE4 STR X1, [X0 + 0x18]
	0x01EBAEE8 RET
	0x01EBAEEC LDR X0, [X0 + 0x20]
	0x01EBAEF0 RET
	0x01EBAEF4 STR X1, [X0 + 0x20]
	0x01EBAEF8 RET
	0x01EBAEFC STR X30, [X31 - 0x30]!
	0x01EBAF00 STP X22, X21, [X31 + 0x10]
	0x01EBAF04 STP X20, X19, [X31 + 0x20]
	0x01EBAF08 ADRP X20, 0x251F000
	0x01EBAF0C ADRP X21, 0x2239000
	0x01EBAF10 LDRB W8, [X20 + 0x420]
	0x01EBAF14 LDR X21, [X21 + 0x9D0]
	0x01EBAF18 MOV X19, X0
	0x01EBAF1C TBNZ X8, 0x0, 0x1EBAF94
	0x01EBAF20 ADRP X0, 0x2239000
	0x01EBAF24 LDR X0, [X0 + 0xB58]
	0x01EBAF28 BL 0x1C16CF4
	0x01EBAF2C ADRP X0, 0x2239000
	0x01EBAF30 LDR X0, [X0 + 0x9D0]
	0x01EBAF34 BL 0x1C16CF4
	0x01EBAF38 ADRP X0, 0x223D000
	0x01EBAF3C LDR X0, [X0 + 0xEB8]
	0x01EBAF40 BL 0x1C16CF4
	0x01EBAF44 ADRP X0, 0x2245000
	0x01EBAF48 LDR X0, [X0 + 0x668]
	0x01EBAF4C BL 0x1C16CF4
	0x01EBAF50 ADRP X0, 0x2245000

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+104], X25
	004 Move [X31+112], X24
	005 Move [X31+120], X23
	006 Move [X31+128], X22
	007 Move [X31+136], X21
	008 Move [X31+144], X20
	009 Move [X31+152], X19
	010 Move X19, 0x2520000
	011 Move W8, [X19+1042]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x2246000
	017 Move X0, [X0+1368]
	018 Call 0x1C17CF4
	019 Move X0, 0x2246000
	020 Move X0, [X0+1360]
	021 Call 0x1C17CF4
	022 Move X0, 0x2245000
	023 Move X0, [X0+2384]
	024 Call 0x1C17CF4
	025 Move X0, 0x2246000
	026 Move X0, [X0+1376]
	027 Call 0x1C17CF4
	028 Move X0, 0x2246000
	029 Move X0, [X0+1384]
	030 Call 0x1C17CF4
	031 Move X0, 0x2246000
	032 Move X0, [X0+1392]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X19+1042], W8
	036 Move X22, 0x2245000
	037 Move X23, 0x2246000
	038 Add X8, X31, 92
	039 Add X9, X31, 80
	040 Add X10, X31, 72
	041 Move X22, [X22+2384]
	042 Move X23, [X23+1360]
	043 Move [X31+72], X31
	044 Move [X31+80], X31
	045 Move [X31+56], X31
	046 Move [X31+64], X31
	047 Move [X31+92], W31
	048 Move [X31+8], X31
	049 Move [X31+16], X8
	050 Move [X31+24], X9
	051 Move [X31+32], X10
	052 Move X20, 0x223A000
	053 Move X20, [X20+1432]
	054 Add X11, X31, 64
	055 Add X12, X31, 56
	056 Move W19, W31
	057 Move X24, 0x251F000
	058 Move [X31+40], X11
	059 Move [X31+48], X12
	060 Move W25, 1
	061 Move X8, [X22]
	062 Move W9, [X8+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {68}
	065 Move X0, X8
	066 Call 0x1C17DFC
	067 Move X8, [X22]
	068 Move X9, [X8+184]
	069 Move W9, [X9+8]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move W9, [X8+224]
	072 Compare W9, 0
	073 JumpIfNotEqual {77}
	074 Move X0, X8
	075 Call 0x1C17DFC
	076 Move X8, [X22]
	077 Move X8, [X8+184]
	078 Move X0, [X8]
	079 Compare X0, 0
	080 JumpIfEqual {110}
	081 Move X2, [X23]
	082 Move W1, W19
	083 Call List`1<Object>.get_Item, X0, X1
	084 Move W8, [X24+2594]
	085 Move X21, X0
	086 Compare W8, 0
	087 JumpIfNotEqual {91}
	088 Move X0, X20
	089 Call 0x1C17CF4
	090 Move [X24+2594], W25
	091 Move X0, [X20]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X0, X21
	097 Move X1, X31
	098 Call Object.op_Implicit, X0
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {108}
	103 Compare X21, 0
	104 JumpIfEqual {111}
	105 Move X0, X21
	106 Move X1, X31
	107 Call NetworkRunner.RenderInternal, X0
	108 Move [X31+92], W25
	109 Add W19, W19, 1
	110 Call 0x1C17F20
	111 Call 0x1C17F20
	112 Move X19, X0
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X0, X19
	115 Call 0x3EB2AD0
	116 Move X8, [X0]
	117 Move [X31+8], X8
	118 Call 0x3EB2AE0
	119 Add X0, X31, 8
	120 Call 0x19980B4
	121 Move X20, [X31+144]
	122 Move X19, [X31+152]
	123 Move X22, [X31+128]
	124 Move X21, [X31+136]
	125 Move X24, [X31+112]
	126 Move X23, [X31+120]
	127 Move X30, [X31+96]
	128 Move X25, [X31+104]
	129 Add X31, X31, 160
	130 Return 
	131 Move X19, X0
	132 Add X0, X31, 8
	133 Call 0x19980B4
	134 Move X0, X19
	135 Call 0x1D2D690
	136 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x01EBAF54 LDR X0, [X0 + 0x670]
	0x01EBAF58 BL 0x1C16CF4
	0x01EBAF5C ADRP X0, 0x2245000
	0x01EBAF60 LDR X0, [X0 + 0x678]
	0x01EBAF64 BL 0x1C16CF4
	0x01EBAF68 ADRP X0, 0x2245000
	0x01EBAF6C LDR X0, [X0 + 0x648]
	0x01EBAF70 BL 0x1C16CF4
	0x01EBAF74 ADRP X0, 0x2245000
	0x01EBAF78 LDR X0, [X0 + 0x680]
	0x01EBAF7C BL 0x1C16CF4
	0x01EBAF80 ADRP X0, 0x2245000
	0x01EBAF84 LDR X0, [X0 + 0x688]
	0x01EBAF88 BL 0x1C16CF4
	0x01EBAF8C MOVZ W8, 0x1
	0x01EBAF90 STRB W8, [X20 + 0x420]
	0x01EBAF94 LDR X0, [X21]
	0x01EBAF98 MOVZ W1, 0x9
	0x01EBAF9C BL 0x1C16D6C
	0x01EBAFA0 CBZ X0, 0x1EBB1D0
	0x01EBAFA4 ADRP X21, 0x2245000
	0x01EBAFA8 LDR X21, [X21 + 0x678]
	0x01EBAFAC MOV X20, X0
	0x01EBAFB0 LDR X0, [X21]
	0x01EBAFB4 CBZ X0, 0x1EBAFC8
	0x01EBAFB8 LDR X8, [X20]
	0x01EBAFBC LDR X1, [X8 + 0x40]
	0x01EBAFC0 BL 0x1C16E00
	0x01EBAFC4 CBZ X0, 0x1EBB1C4
	0x01EBAFC8 LDR W8, [X20 + 0x18]
	0x01EBAFCC CBZ W8, 0x1EBB1C0
	0x01EBAFD0 LDR X9, [X21]
	0x01EBAFD4 ADRP X21, 0x2245000
	0x01EBAFD8 LDR X21, [X21 + 0x668]
	0x01EBAFDC STR X9, [X20 + 0x20]
	0x01EBAFE0 LDR X0, [X21]
	0x01EBAFE4 CBZ X0, 0x1EBAFFC
	0x01EBAFE8 LDR X8, [X20]
	0x01EBAFEC LDR X1, [X8 + 0x40]
	0x01EBAFF0 BL 0x1C16E00
	0x01EBAFF4 CBZ X0, 0x1EBB1C4
	0x01EBAFF8 LDR W8, [X20 + 0x18]
	0x01EBAFFC CMP W8, 0x1
	0x01EBB000 B.LS 0x1EBB1C0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2520000
	007 Move X21, 0x2246000
	008 Move X20, 0x223A000
	009 Move W8, [X22+1043]
	010 Move X21, [X21+1400]
	011 Move X20, [X20+1728]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2246000
	018 Move X0, [X0+1400]
	019 Call 0x1C17CF4
	020 Move X0, 0x223A000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+1043], W8
	025 Move X0, [X20]
	026 Move X20, [X21]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Call Type.GetTypeFromHandle, X0
	034 Move X8, -20758528
	035 Move V0, [X8+2200]
	036 Move [X19+16], X0
	037 Move X1, X31
	038 Move [X19+24], D0
	039 Move X0, [X21]
	040 Call Type.GetTypeFromHandle, X0
	041 Move X8, -20758528
	042 Move V0, [X8+3784]
	043 Move [X19+32], X0
	044 Move X0, X19
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move [X19+40], D0
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X1, X31
	051 Move X30, [X31+48]
	052 Call Object..ctor, X0
	053 Return 

Method: System.Void .cctor()

Disassembly:
	0x01EBB004 LDR X8, [X21]
	0x01EBB008 ADRP X9, 0x2238000
	0x01EBB00C ADD X1, X31, 0xC
	0x01EBB010 STR X8, [X20 + 0x28]
	0x01EBB014 LDR W8, [X19 + 0x10]
	0x01EBB018 LDR X9, [X9 + 0xB58]
	0x01EBB01C CMP W8, 0x0
	0x01EBB020 LDR X0, [X9]
	0x01EBB024 CSET W8, EQ
	0x01EBB028 STRB W8, [X31 + 0xC]
	0x01EBB02C BL 0x1C16E04
	0x01EBB030 MOV X21, X0
	0x01EBB034 CBZ X0, 0x1EBB04C
	0x01EBB038 LDR X8, [X20]
	0x01EBB03C MOV X0, X21
	0x01EBB040 LDR X1, [X8 + 0x40]
	0x01EBB044 BL 0x1C16E00
	0x01EBB048 CBZ X0, 0x1EBB1C4
	0x01EBB04C LDR W8, [X20 + 0x18]
	0x01EBB050 CMP W8, 0x2
	0x01EBB054 B.LS 0x1EBB1C0
	0x01EBB058 ADRP X22, 0x2244000
	0x01EBB05C LDR X22, [X22 + 0x648]
	0x01EBB060 STR X21, [X20 + 0x30]
	0x01EBB064 LDR X0, [X22]
	0x01EBB068 CBZ X0, 0x1EBB080
	0x01EBB06C LDR X8, [X20]
	0x01EBB070 LDR X1, [X8 + 0x40]
	0x01EBB074 BL 0x1C16E00
	0x01EBB078 CBZ X0, 0x1EBB1C4
	0x01EBB07C LDR W8, [X20 + 0x18]
	0x01EBB080 CMP W8, 0x3
	0x01EBB084 B.LS 0x1EBB1C0
	0x01EBB088 LDR X8, [X22]
	0x01EBB08C ADRP X9, 0x223C000
	0x01EBB090 LDR X9, [X9 + 0xEB8]
	0x01EBB094 ADD X1, X31, 0x8
	0x01EBB098 STR X8, [X20 + 0x38]
	0x01EBB09C LDR W8, [X19 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x251F000
	007 Move X22, 0x2245000
	008 Move X19, 0x2245000
	009 Move X20, 0x2244000
	010 Move W8, [X21+1044]
	011 Move X22, [X22+128]
	012 Move X19, [X19+136]
	013 Move X20, [X20+2384]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x2245000
	019 Move X0, [X0+136]
	020 Call 0x1C17CF4
	021 Move X0, 0x2245000
	022 Move X0, [X0+128]
	023 Call 0x1C17CF4
	024 Move X0, 0x2244000
	025 Move X0, [X0+2384]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1044], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call List`1<Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move TEMP, 0
	038 Not TEMP
	039 Move W9, TEMP
	040 Move X8, [X8+184]
	041 Move [X8], X19
	042 Move X8, [X20]
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X8, [X8+184]
	046 Move [X8+8], W9
	047 Move X30, [X31+48]
	048 Return 

