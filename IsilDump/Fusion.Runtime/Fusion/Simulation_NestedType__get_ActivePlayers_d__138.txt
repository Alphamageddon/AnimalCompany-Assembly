Type: Fusion.Simulation/<get_ActivePlayers>d__138

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01ED7DBC STR X9, [X0 + 0x38]
	0x01ED7DC0 STUR V0, [X0 + 0x18]
	0x01ED7DC4 STUR V1, [X0 + 0x48]
	0x01ED7DC8 B 0x33BDD8C
	0x01ED7DCC ADRP X8, 0xFFFFFFFFFEC15000
	0x01ED7DD0 LDR V0, [X8 + 0x99]
	0x01ED7DD4 MOVZ X8, 0x40140000
	0x01ED7DD8 MOVI V1.2S, 0x2
	0x01ED7DDC MOV X1, X31
	0x01ED7DE0 STR X8, [X0 + 0x20]
	0x01ED7DE4 STR V0, [X0 + 0x1]
	0x01ED7DE8 STR D1, [X0 + 0x28]
	0x01ED7DEC B 0x33BDD8C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+24], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01ED7DF0 STR D8, [X31 - 0x30]!
	0x01ED7DF4 STP X30, X21, [X31 + 0x10]
	0x01ED7DF8 STP X20, X19, [X31 + 0x20]
	0x01ED7DFC ADRP X21, 0x2502000
	0x01ED7E00 ADRP X20, 0x2223000
	0x01ED7E04 LDRB W8, [X21 + 0x519]
	0x01ED7E08 LDR X20, [X20 + 0xC68]

ISIL:
	001 Move W8, [X0+16]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Add W31, W8, 3
	004 Call <get_ActivePlayers>d__138.<>m__Finally1, X0
	005 Return 
	006 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01ED7E0C MOV X19, X0
	0x01ED7E10 TBNZ X8, 0x0, 0x1ED7E28
	0x01ED7E14 ADRP X0, 0x2223000
	0x01ED7E18 LDR X0, [X0 + 0xC68]
	0x01ED7E1C BL 0x1C16CF4
	0x01ED7E20 MOVZ W8, 0x1
	0x01ED7E24 STRB W8, [X21 + 0x519]
	0x01ED7E28 LDR X0, [X20]
	0x01ED7E2C LDR V8, [X19 + 0x10]
	0x01ED7E30 LDR W8, [X0 + 0xE0]
	0x01ED7E34 CBNZ W8, 0x1ED7E3C
	0x01ED7E38 BL 0x1C16DFC
	0x01ED7E3C LDP X20, X19, [X31 + 0x20]
	0x01ED7E40 LDP X30, X21, [X31 + 0x10]
	0x01ED7E44 FMOV D1, 1
	0x01ED7E48 FMOV D2, 8.000000000465661
	0x01ED7E4C MOV V0.16B, V8.16B
	0x01ED7E50 MOV X0, X31
	0x01ED7E54 LDR V8, [X31], #0x30
	0x01ED7E58 B 0x1E3516C
	0x01ED7E5C STR D8, [X31 - 0x30]!
	0x01ED7E60 STP X30, X21, [X31 + 0x10]
	0x01ED7E64 STP X20, X19, [X31 + 0x20]
	0x01ED7E68 ADRP X21, 0x2502000
	0x01ED7E6C ADRP X20, 0x2223000
	0x01ED7E70 LDRB W8, [X21 + 0x51A]
	0x01ED7E74 LDR X20, [X20 + 0xC68]
	0x01ED7E78 MOV X19, X0
	0x01ED7E7C TBNZ X8, 0x0, 0x1ED7E94
	0x01ED7E80 ADRP X0, 0x2223000
	0x01ED7E84 LDR X0, [X0 + 0xC68]
	0x01ED7E88 BL 0x1C16CF4
	0x01ED7E8C MOVZ W8, 0x1
	0x01ED7E90 STRB W8, [X21 + 0x51A]
	0x01ED7E94 LDR X0, [X20]
	0x01ED7E98 LDR V8, [X19 + 0x18]
	0x01ED7E9C LDR W8, [X0 + 0xE0]
	0x01ED7EA0 CBNZ W8, 0x1ED7EA8
	0x01ED7EA4 BL 0x1C16DFC
	0x01ED7EA8 ADRP X8, 0xFFFFFFFFFEC16000
	0x01ED7EAC LDR V1, [X8 + 0xF40]
	0x01ED7EB0 FMOV D2, 16.000000002095476
	0x01ED7EB4 MOV V0.16B, V8.16B
	0x01ED7EB8 MOV X0, X31
	0x01ED7EBC BL 0x1E3516C
	0x01ED7EC0 LDP X20, X19, [X31 + 0x20]
	0x01ED7EC4 LDP X30, X21, [X31 + 0x10]
	0x01ED7EC8 MOVZ X8, 0x40590000
	0x01ED7ECC FMOV D1, X8
	0x01ED7ED0 FDIV D0, D0, D1
	0x01ED7ED4 LDR V8, [X31], #0x30
	0x01ED7ED8 RET
	0x01ED7EDC STR D8, [X31 - 0x30]!
	0x01ED7EE0 STP X30, X21, [X31 + 0x10]
	0x01ED7EE4 STP X20, X19, [X31 + 0x20]
	0x01ED7EE8 ADRP X21, 0x2502000
	0x01ED7EEC ADRP X20, 0x2223000
	0x01ED7EF0 LDRB W8, [X21 + 0x51B]
	0x01ED7EF4 LDR X20, [X20 + 0xC68]
	0x01ED7EF8 MOV X19, X0
	0x01ED7EFC TBNZ X8, 0x0, 0x1ED7F14
	0x01ED7F00 ADRP X0, 0x2223000
	0x01ED7F04 LDR X0, [X0 + 0xC68]
	0x01ED7F08 BL 0x1C16CF4
	0x01ED7F0C MOVZ W8, 0x1
	0x01ED7F10 STRB W8, [X21 + 0x51B]
	0x01ED7F14 LDR X0, [X20]
	0x01ED7F18 LDR V8, [X19 + 0x20]
	0x01ED7F1C LDR W8, [X0 + 0xE0]
	0x01ED7F20 CBNZ W8, 0x1ED7F28
	0x01ED7F24 BL 0x1C16DFC
	0x01ED7F28 ADRP X8, 0xFFFFFFFFFEC16000
	0x01ED7F2C LDR V1, [X8 + 0xF40]
	0x01ED7F30 FMOV D2, 16.000000002095476
	0x01ED7F34 MOV V0.16B, V8.16B
	0x01ED7F38 MOV X0, X31
	0x01ED7F3C BL 0x1E3516C
	0x01ED7F40 LDP X20, X19, [X31 + 0x20]
	0x01ED7F44 LDP X30, X21, [X31 + 0x10]
	0x01ED7F48 MOVZ X8, 0x40590000
	0x01ED7F4C FMOV D1, X8
	0x01ED7F50 FDIV D0, D0, D1
	0x01ED7F54 LDR V8, [X31], #0x30
	0x01ED7F58 RET
	0x01ED7F5C STP X30, X21, [X31 - 0x20]!
	0x01ED7F60 STP X20, X19, [X31 + 0x10]
	0x01ED7F64 ADRP X21, 0x2502000
	0x01ED7F68 ADRP X20, 0x2223000
	0x01ED7F6C LDRB W8, [X21 + 0x51C]
	0x01ED7F70 LDR X20, [X20 + 0xC68]
	0x01ED7F74 MOV X19, X0
	0x01ED7F78 TBNZ X8, 0x0, 0x1ED7F90
	0x01ED7F7C ADRP X0, 0x2223000
	0x01ED7F80 LDR X0, [X0 + 0xC68]
	0x01ED7F84 BL 0x1C16CF4
	0x01ED7F88 MOVZ W8, 0x1
	0x01ED7F8C STRB W8, [X21 + 0x51C]
	0x01ED7F90 LDR X0, [X20]
	0x01ED7F94 LDR W19, [X19 + 0x28]
	0x01ED7F98 LDR W8, [X0 + 0xE0]
	0x01ED7F9C CBNZ W8, 0x1ED7FA4
	0x01ED7FA0 BL 0x1C16DFC
	0x01ED7FA4 MOV W0, W19
	0x01ED7FA8 LDP X20, X19, [X31 + 0x10]
	0x01ED7FAC MOVZ W2, 0x8
	0x01ED7FB0 MOV W1, W31
	0x01ED7FB4 MOV X3, X31
	0x01ED7FB8 LDP X30, X21, [X31], #0x20
	0x01ED7FBC B 0x1E35134
	0x01ED7FC0 STP X30, X21, [X31 - 0x20]!
	0x01ED7FC4 STP X20, X19, [X31 + 0x10]
	0x01ED7FC8 ADRP X21, 0x2502000
	0x01ED7FCC ADRP X20, 0x2223000
	0x01ED7FD0 LDRB W8, [X21 + 0x51D]
	0x01ED7FD4 LDR X20, [X20 + 0xC68]
	0x01ED7FD8 MOV X19, X0
	0x01ED7FDC TBNZ X8, 0x0, 0x1ED7FF4
	0x01ED7FE0 ADRP X0, 0x2223000
	0x01ED7FE4 LDR X0, [X0 + 0xC68]
	0x01ED7FE8 BL 0x1C16CF4
	0x01ED7FEC MOVZ W8, 0x1
	0x01ED7FF0 STRB W8, [X21 + 0x51D]
	0x01ED7FF4 LDR X0, [X20]
	0x01ED7FF8 LDR W19, [X19 + 0x2C]
	0x01ED7FFC LDR W8, [X0 + 0xE0]
	0x01ED8000 CBNZ W8, 0x1ED8008
	0x01ED8004 BL 0x1C16DFC
	0x01ED8008 MOV W0, W19
	0x01ED800C LDP X20, X19, [X31 + 0x10]
	0x01ED8010 MOVZ W2, 0x8
	0x01ED8014 MOV W1, W31
	0x01ED8018 MOV X3, X31
	0x01ED801C LDP X30, X21, [X31], #0x20
	0x01ED8020 B 0x1E35134
	0x01ED8024 FMOV D0, 4.000000000232831
	0x01ED8028 RET
	0x01ED802C STR X30, [X31 - 0x20]!
	0x01ED8030 STP X20, X19, [X31 + 0x10]
	0x01ED8034 ADRP X19, 0x2501000
	0x01ED8038 ADRP X20, 0x2222000
	0x01ED803C LDRB W8, [X19 + 0x51E]
	0x01ED8040 LDR X20, [X20 + 0xC68]
	0x01ED8044 TBNZ X8, 0x0, 0x1ED805C
	0x01ED8048 ADRP X0, 0x2222000
	0x01ED804C LDR X0, [X0 + 0xC68]
	0x01ED8050 BL 0x1C16CF4
	0x01ED8054 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+80], X30
	003 Move [X31+88], X0
	004 Move [X31+96], X20
	005 Move [X31+104], X19
	006 Move X19, 0x2503000
	007 Move W8, [X19+1289]
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x2228000
	014 Move X0, [X0+2960]
	015 Call 0x1C17CF4
	016 Move X0, 0x2228000
	017 Move X0, [X0+2976]
	018 Call 0x1C17CF4
	019 Move X0, 0x2228000
	020 Move X0, [X0+2984]
	021 Call 0x1C17CF4
	022 Move X0, 0x2228000
	023 Move X0, [X0+2992]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+1289], W8
	027 Add X8, X31, 88
	028 Move [X31+72], X8
	029 Move W8, [X20+16]
	030 Move X19, [X20+32]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Compare W8, 0
	034 JumpIfNotEqual {140}
	035 Move TEMP, 0
	036 Not TEMP
	037 Move W8, TEMP
	038 Move [X20+16], W8
	039 Compare X19, 0
	040 JumpIfEqual {129}
	041 Move X0, X19
	042 Move X1, X31
	043 Call Simulation.get_IsPlayer, X0
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {64}
	048 Move X8, [X19]
	049 Move X1, [X8+624]
	050 Move X9, [X8+616]
	051 Move X0, X19
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X9, [X31+88]
	054 Move X8, X0
	055 Move W0, 1
	056 Move [X9+16], W0
	057 Move [X9+20], W8
	058 Move TEMP, 0
	059 Not TEMP
	060 Move W8, TEMP
	061 Move [X20+16], W8
	062 Compare X19, 0
	063 JumpIfEqual {128}
	064 Move X0, X19
	065 Move X1, X31
	066 Call Simulation.get_IsServer, X0
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {140}
	071 Move X0, [X19+176]
	072 Compare X0, 0
	073 JumpIfEqual {131}
	074 Move X8, 0x2228000
	075 Move X8, [X8+2960]
	076 Move X1, [X8]
	077 Call Dictionary`2<Int32, Object>.get_Values, X0
	078 Compare X0, 0
	079 JumpIfEqual {132}
	080 Move X8, 0x2228000
	081 Move X8, [X8+2992]
	082 Move X1, [X8]
	083 Add X8, X31, 8
	084 Call ValueCollection<Int32, Object>.GetEnumerator, X0
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 Move X8, [X31+24]
	087 Move X20, [X31+88]
	088 Move TEMP, 2
	089 Not TEMP
	090 Move W9, TEMP
	091 Move [X31+2], V0
	092 Move [X31+48], X8
	093 Move [X20+56], X8
	094 Move [X20+40], V0
	095 Move [X20+16], W9
	096 Move TEMP, 2
	097 Not TEMP
	098 Move W8, TEMP
	099 Move [X20+16], W8
	100 Move X8, 0x2228000
	101 Move X8, [X8+2976]
	102 Add X0, X20, 40
	103 Move X1, [X8]
	104 Call Enumerator<Int32, Object>.MoveNext, X0
	105 Move W8, W0
	106 Move X0, [X31+88]
	107 Move TEMP, X8
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {122}
	111 Compare X19, 0
	112 JumpIfEqual {130}
	113 Move X1, [X0+56]
	114 Move X0, X19
	115 Move X2, X31
	116 Call Simulation.Connection2Player, X0, X1
	117 Move X8, [X31+88]
	118 Move W9, 2
	119 Move [X8+16], W9
	120 Move [X8+20], W0
	121 Move W0, 1
	122 Call <get_ActivePlayers>d__138.<>m__Finally1, X0
	123 Move X8, [X31+88]
	124 Move W0, W31
	125 Move [X8+40], X31
	126 Move [X8+48], X31
	127 Move [X8+56], X31
	128 Call 0x1C17F20
	129 Call 0x1C17F20
	130 Call 0x1C17F20
	131 Call 0x1C17F20
	132 Call 0x1C17F20
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Call 0x3EB2AD0
	135 Move X19, [X0]
	136 Move [X31+64], X19
	137 Call 0x3EB2AE0
	138 Compare X19, 0
	139 JumpIfNotEqual {146}
	140 Move W0, W31
	141 Move X20, [X31+96]
	142 Move X19, [X31+104]
	143 Move X30, [X31+80]
	144 Add X31, X31, 112
	145 Return X0
	146 Add X8, X31, 64
	147 Add X0, X8, 8
	148 Call 0x1998CF0
	149 Move X0, X19
	150 Call 0x1C17F18
	151 Compare X19, 0
	152 JumpIfNotEqual {154}
	153 Call 0x1D2D690
	154 Move X0, [X31+88]
	155 Move W8, [X0+16]
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Add W31, W8, 3
	158 Call <get_ActivePlayers>d__138.<>m__Finally1, X0
	159 Move X0, X19
	160 Call 0x1C17F18
	161 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x01ED8058 STRB W8, [X19 + 0x51E]
	0x01ED805C LDR X0, [X20]
	0x01ED8060 LDR W8, [X0 + 0xE0]
	0x01ED8064 CBNZ W8, 0x1ED806C
	0x01ED8068 BL 0x1C16DFC
	0x01ED806C FMOV D0, 4.000000000232831
	0x01ED8070 FMOV D1, 1
	0x01ED8074 FMOV D2, 8.000000000465661
	0x01ED8078 MOV X0, X31
	0x01ED807C BL 0x1E3516C
	0x01ED8080 LDP X20, X19, [X31 + 0x10]
	0x01ED8084 MOVZ X8, 0x40590000
	0x01ED8088 FMOV D1, X8
	0x01ED808C FDIV D0, D0, D1
	0x01ED8090 LDR X30, [X31], #0x20
	0x01ED8094 RET
	0x01ED8098 FMOV D0, 4.000000000232831
	0x01ED809C RET
	0x01ED80A0 STR X30, [X31 - 0x20]!
	0x01ED80A4 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2502000
	006 Move X20, 0x2227000
	007 Move W8, [X21+1290]
	008 Move X20, [X20+2968]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2227000
	015 Move X0, [X0+2968]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1290], W8
	019 Move TEMP, 0
	020 Not TEMP
	021 Move W8, TEMP
	022 Move [X19+16], W8
	023 Move X1, [X20]
	024 Add X0, X19, 40
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Enumerator<Int32, Object>.Dispose, X0
	030 Return 

Method: Fusion.PlayerRef System.Collections.Generic.IEnumerator<Fusion.PlayerRef>.get_Current()

Disassembly:
	0x01ED80A8 ADRP X19, 0x2501000
	0x01ED80AC ADRP X20, 0x2222000

ISIL:
	001 Move W0, [X0+20]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01ED80B0 LDRB W8, [X19 + 0x51F]
	0x01ED80B4 LDR X20, [X20 + 0xC68]
	0x01ED80B8 TBNZ X8, 0x0, 0x1ED80D0
	0x01ED80BC ADRP X0, 0x2222000
	0x01ED80C0 LDR X0, [X0 + 0xC68]
	0x01ED80C4 BL 0x1C16CF4
	0x01ED80C8 MOVZ W8, 0x1
	0x01ED80CC STRB W8, [X19 + 0x51F]
	0x01ED80D0 LDR X0, [X20]
	0x01ED80D4 LDR W8, [X0 + 0xE0]
	0x01ED80D8 CBNZ W8, 0x1ED80E0
	0x01ED80DC BL 0x1C16DFC
	0x01ED80E0 FMOV D0, 4.000000000232831
	0x01ED80E4 FMOV D1, 1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x221C000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2229000
	011 Move X0, [X0+112]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01ED80E8 FMOV D2, 8.000000000465661
	0x01ED80EC MOV X0, X31
	0x01ED80F0 BL 0x1E3516C
	0x01ED80F4 LDP X20, X19, [X31 + 0x10]
	0x01ED80F8 MOVZ X8, 0x40590000
	0x01ED80FC FMOV D1, X8
	0x01ED8100 FDIV D0, D0, D1
	0x01ED8104 LDR X30, [X31], #0x20
	0x01ED8108 RET
	0x01ED810C STR X30, [X31 - 0x10]!
	0x01ED8110 LDR X8, [X0 + 0xD0]
	0x01ED8114 CBZ X8, 0x1ED8124
	0x01ED8118 LDRSH W0, [X8 + 0x1A]
	0x01ED811C LDR X30, [X31], #0x10
	0x01ED8120 RET
	0x01ED8124 BL 0x1C16F20
	0x01ED8128 STR X30, [X31 - 0x10]!
	0x01ED812C CBZ X0, 0x1ED813C
	0x01ED8130 LDR W0, [X0 + 0x28]
	0x01ED8134 LDR X30, [X31], #0x10
	0x01ED8138 RET
	0x01ED813C BL 0x1C16F20
	0x01ED8140 STP X30, X27, [X31 - 0x50]!

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2502000
	007 Move X20, 0x221F000
	008 Move W8, [X21+1291]
	009 Move X20, [X20+3648]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x221F000
	016 Move X0, [X0+3648]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1291], W8
	020 Move W8, [X19+20]
	021 Move X0, [X20]
	022 Add X1, X31, 8
	023 Move [X31+8], W8
	024 Call 0x1C17E04
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X30, [X31+16]
	028 Move X21, [X31+24]
	029 Add X31, X31, 48
	030 Return X0

Method: System.Collections.Generic.IEnumerator`1<Fusion.PlayerRef> System.Collections.Generic.IEnumerable<Fusion.PlayerRef>.GetEnumerator()

Disassembly:
	0x01ED8144 STP X26, X25, [X31 + 0x10]
	0x01ED8148 STP X24, X23, [X31 + 0x20]
	0x01ED814C STP X22, X21, [X31 + 0x30]
	0x01ED8150 STP X20, X19, [X31 + 0x40]
	0x01ED8154 ADRP X25, 0x2501000
	0x01ED8158 ADRP X26, 0x221C000
	0x01ED815C ADRP X21, 0x2222000
	0x01ED8160 ADRP X24, 0x2228000
	0x01ED8164 ADRP X22, 0x2228000
	0x01ED8168 ADRP X23, 0x221E000
	0x01ED816C LDRB W8, [X25 + 0x521]
	0x01ED8170 LDR X26, [X26 + 0xE08]
	0x01ED8174 LDR X21, [X21 + 0x688]
	0x01ED8178 LDR X24, [X24 + 0x90]
	0x01ED817C LDR X22, [X22 + 0x98]
	0x01ED8180 LDR X23, [X23 + 0x398]
	0x01ED8184 MOV X20, X1
	0x01ED8188 MOV X19, X0
	0x01ED818C TBNZ X8, 0x0, 0x1ED8258
	0x01ED8190 ADRP X0, 0x2227000
	0x01ED8194 LDR X0, [X0 + 0xDA8]
	0x01ED8198 BL 0x1C16CF4
	0x01ED819C ADRP X0, 0x2228000
	0x01ED81A0 LDR X0, [X0 + 0xA0]
	0x01ED81A4 BL 0x1C16CF4
	0x01ED81A8 ADRP X0, 0x2228000
	0x01ED81AC LDR X0, [X0 + 0xA8]
	0x01ED81B0 BL 0x1C16CF4
	0x01ED81B4 ADRP X0, 0x2222000
	0x01ED81B8 LDR X0, [X0 + 0x688]
	0x01ED81BC BL 0x1C16CF4
	0x01ED81C0 ADRP X0, 0x2227000
	0x01ED81C4 LDR X0, [X0 + 0xA00]
	0x01ED81C8 BL 0x1C16CF4
	0x01ED81CC ADRP X0, 0x2227000
	0x01ED81D0 LDR X0, [X0 + 0xA08]
	0x01ED81D4 BL 0x1C16CF4
	0x01ED81D8 ADRP X0, 0x221C000
	0x01ED81DC LDR X0, [X0 + 0xE08]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2502000
	005 Move W8, [X20+1292]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2228000
	012 Move X0, [X0+2360]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1292], W8
	016 Move W8, [X19+16]
	017 Add W31, W8, 2
	018 Move W20, [X19+24]
	019 Move X0, X31
	020 Call Environment.get_CurrentManagedThreadId
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X19+16], W31
	023 Move X8, 0x2228000
	024 Move X8, [X8+2360]
	025 Move X0, [X8]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X20, X0
	029 Call Object..ctor, X0
	030 Move X0, X31
	031 Move [X20+16], W31
	032 Call Environment.get_CurrentManagedThreadId
	033 Move [X20+24], W0
	034 Move X8, [X19+32]
	035 Move X19, X20
	036 Move [X20+32], X8
	037 Move X0, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x01ED81E0 BL 0x1C16CF4

ISIL:
	001 Call <get_ActivePlayers>d__138.System.Collections.Generic.IEnumerable<Fusion.PlayerRef>.GetEnumerator, X0
	002 Return X0

