Type: Fusion.SceneRef

Method: Fusion.SceneRef get_None()

Disassembly:
	0x01E90D80 LDR X0, [X22]
	0x01E90D84 LDR X20, [X20 + 0x1B8]

ISIL:
	001 Move X0, X31
	002 Return X0

Method: System.Boolean get_IsValid()

Disassembly:
	0x01E90D88 BL 0x1C16D6C
	0x01E90D8C LDR X1, [X20]
	0x01E90D90 MOV X2, X31
	0x01E90D94 MOV X20, X0

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_IsIndex()

Disassembly:
	0x01E90D98 BL 0x32C5BD8
	0x01E90D9C ADD X0, X31, 0x228
	0x01E90DA0 MOV X1, X20
	0x01E90DA4 STR X31, [X31 + 0x230]

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction ORN not yet implemented."
	003 Move W0, W8
	004 ShiftRight W0, 31
	005 And W0, W0, 0x7FFFFFFF
	006 Return X0

Method: System.Int32 get_AsIndex()

Disassembly:
	0x01E90DA8 STR X31, [X31 + 0x228]
	0x01E90DAC STR W31, [X31 + 0x238]
	0x01E90DB0 BL 0x1E9067C
	0x01E90DB4 LDR W8, [X31 + 0x238]
	0x01E90DB8 LDR V0, [X23 + 0x18]
	0x01E90DBC STR W8, [X31 + 0x220]
	0x01E90DC0 STR V0, [X31 + 0x21]
	0x01E90DC4 LDR W8, [X19 + 0x18]
	0x01E90DC8 CMP W8, 0x3
	0x01E90DCC B.LS 0x1E913CC
	0x01E90DD0 LDR W8, [X31 + 0x220]
	0x01E90DD4 LDR V0, [X31 + 0x21]
	0x01E90DD8 ADRP X20, 0x226E000
	0x01E90DDC MOVZ W1, 0x3
	0x01E90DE0 STR W8, [X19 + 0x6C]
	0x01E90DE4 STUR V0, [X19 + 0x5C]
	0x01E90DE8 LDR X0, [X22]
	0x01E90DEC LDR X20, [X20 + 0x1A8]
	0x01E90DF0 BL 0x1C16D6C
	0x01E90DF4 LDR X1, [X20]
	0x01E90DF8 MOV X2, X31
	0x01E90DFC MOV X20, X0
	0x01E90E00 BL 0x32C5BD8
	0x01E90E04 ADD X0, X31, 0x1F8
	0x01E90E08 MOV X1, X20
	0x01E90E0C STP X31, X31, [X31 + 0x1F8]
	0x01E90E10 STR W31, [X31 + 0x208]
	0x01E90E14 BL 0x1E9067C
	0x01E90E18 LDR W8, [X31 + 0x208]
	0x01E90E1C LDR V0, [X23 + 0x15]
	0x01E90E20 STR W8, [X31 + 0x1F0]
	0x01E90E24 STR V0, [X31 + 0x1E]
	0x01E90E28 LDR W8, [X19 + 0x18]
	0x01E90E2C CMP W8, 0x4
	0x01E90E30 B.LS 0x1E913CC
	0x01E90E34 LDR W8, [X31 + 0x1F0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0]
	005 Move TEMP, X8
	006 And TEMP, TEMP, -2147483648
	007 Compare TEMP, -2147483648
	008 JumpIfEqual {14}
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Subtract W0, W8, 1
	012 Move X30, [X31+32]
	013 Return X0
	014 Move [X31+12], W8
	015 Move X0, 0x226C000
	016 Move X0, [X0+1824]
	017 Call 0x1C17D08
	018 Add X1, X31, 12
	019 Call 0x1C17E04
	020 Move X19, X0
	021 Move X0, 0x226F000
	022 Move X0, [X0+256]
	023 Call 0x1C17D08
	024 Move X1, X19
	025 Move X2, X31
	026 Call String.Format, X0, X1
	027 Move X19, X0
	028 Move X0, 0x2264000
	029 Move X0, [X0+1456]
	030 Call 0x1C17D08
	031 Call 0x1C17F10
	032 Move X1, X19
	033 Move X2, X31
	034 Move X20, X0
	035 Call InvalidOperationException..ctor, X0, X1
	036 Move X0, 0x226F000
	037 Move X0, [X0+264]
	038 Call 0x1C17D08
	039 Move X1, X0
	040 Move X0, X20
	041 Call 0x1C17DEC

Method: System.UInt32 get_AsPathHash()

Disassembly:
	0x01E90E38 LDR V0, [X31 + 0x1E]
	0x01E90E3C MOVZ W1, 0x2
	0x01E90E40 STR W8, [X19 + 0x80]
	0x01E90E44 STR V0, [X19 + 0x7]
	0x01E90E48 LDR X0, [X22]
	0x01E90E4C BL 0x1C16D6C
	0x01E90E50 CBZ X0, 0x1E913D0
	0x01E90E54 LDR W8, [X0 + 0x18]
	0x01E90E58 MOV X1, X0
	0x01E90E5C CBZ W8, 0x1E913CC
	0x01E90E60 MOVZ W9, 0x1E
	0x01E90E64 CMP W8, 0x1
	0x01E90E68 STR W9, [X1 + 0x20]
	0x01E90E6C B.EQ 0x1E913CC
	0x01E90E70 MOVZ W8, 0xF
	0x01E90E74 ADD X0, X31, 0x1C8
	0x01E90E78 STR W8, [X1 + 0x24]
	0x01E90E7C STP X31, X31, [X31 + 0x1C8]
	0x01E90E80 STR W31, [X31 + 0x1D8]
	0x01E90E84 BL 0x1E9067C
	0x01E90E88 LDR W8, [X31 + 0x1D8]
	0x01E90E8C LDR V0, [X23 + 0x12]
	0x01E90E90 STR W8, [X31 + 0x1C0]
	0x01E90E94 STR V0, [X31 + 0x1B]
	0x01E90E98 LDR W8, [X19 + 0x18]
	0x01E90E9C CMP W8, 0x5
	0x01E90EA0 B.LS 0x1E913CC
	0x01E90EA4 LDR W8, [X31 + 0x1C0]
	0x01E90EA8 LDR V0, [X31 + 0x1B]
	0x01E90EAC ADRP X20, 0x226E000
	0x01E90EB0 MOVZ W1, 0x3
	0x01E90EB4 STR W8, [X19 + 0x94]
	0x01E90EB8 STUR V0, [X19 + 0x84]
	0x01E90EBC LDR X0, [X22]
	0x01E90EC0 LDR X20, [X20 + 0x1B0]
	0x01E90EC4 BL 0x1C16D6C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0]
	005 Move TEMP, X8
	006 And TEMP, TEMP, -2147483648
	007 Compare TEMP, -2147483648
	008 JumpIfNotEqual {14}
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 And W0, W8, 0x7FFFFFFF
	012 Move X30, [X31+32]
	013 Return X0
	014 Move [X31+12], W8
	015 Move X0, 0x226C000
	016 Move X0, [X0+1824]
	017 Call 0x1C17D08
	018 Add X1, X31, 12
	019 Call 0x1C17E04
	020 Move X19, X0
	021 Move X0, 0x226F000
	022 Move X0, [X0+272]
	023 Call 0x1C17D08
	024 Move X1, X19
	025 Move X2, X31
	026 Call String.Format, X0, X1
	027 Move X19, X0
	028 Move X0, 0x2264000
	029 Move X0, [X0+1456]
	030 Call 0x1C17D08
	031 Call 0x1C17F10
	032 Move X1, X19
	033 Move X2, X31
	034 Move X20, X0
	035 Call InvalidOperationException..ctor, X0, X1
	036 Move X0, 0x226F000
	037 Move X0, [X0+280]
	038 Call 0x1C17D08
	039 Move X1, X0
	040 Move X0, X20
	041 Call 0x1C17DEC

Method: System.Boolean IsPath(System.String path)

Disassembly:
	0x01E90EC8 LDR X1, [X20]
	0x01E90ECC MOV X2, X31
	0x01E90ED0 MOV X20, X0
	0x01E90ED4 BL 0x32C5BD8
	0x01E90ED8 ADD X0, X31, 0x198
	0x01E90EDC MOV X1, X20
	0x01E90EE0 STP X31, X31, [X31 + 0x198]
	0x01E90EE4 STR W31, [X31 + 0x1A8]
	0x01E90EE8 BL 0x1E9067C
	0x01E90EEC LDR W8, [X31 + 0x1A8]
	0x01E90EF0 LDR V0, [X23 + 0xF]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W19, [X0]
	004 Move TEMP, X19
	005 And TEMP, TEMP, -2147483648
	006 Compare TEMP, -2147483648
	007 JumpIfEqual {9}
	008 Move W0, W31
	009 Move X0, X1
	010 Call SceneRef.FromPath, X0
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CSET not yet implemented."
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return X0

Method: Fusion.SceneRef FromIndex(System.Int32 index)

Disassembly:
	0x01E90F64 STR W8, [X31 + 0x160]
	0x01E90F68 STR V0, [X31 + 0x15]
	0x01E90F6C LDR W8, [X19 + 0x18]
	0x01E90F70 CMP W8, 0x7
	0x01E90F74 B.LS 0x1E913CC
	0x01E90F78 LDR W8, [X31 + 0x160]
	0x01E90F7C LDR V0, [X31 + 0x15]
	0x01E90F80 ADRP X20, 0x226E000
	0x01E90F84 MOVZ W1, 0x3
	0x01E90F88 STR W8, [X19 + 0xBC]
	0x01E90F8C STUR V0, [X19 + 0xAC]
	0x01E90F90 LDR X0, [X22]
	0x01E90F94 LDR X20, [X20 + 0x1D0]
	0x01E90F98 BL 0x1C16D6C
	0x01E90F9C LDR X1, [X20]
	0x01E90FA0 MOV X2, X31
	0x01E90FA4 MOV X20, X0
	0x01E90FA8 BL 0x32C5BD8
	0x01E90FAC ADD X0, X31, 0x138
	0x01E90FB0 MOV X1, X20
	0x01E90FB4 STP X31, X31, [X31 + 0x138]
	0x01E90FB8 STR W31, [X31 + 0x148]
	0x01E90FBC BL 0x1E9067C
	0x01E90FC0 LDR W8, [X31 + 0x148]

ISIL:
	001 Move TEMP, 0x80000000
	002 Not TEMP
	003 Move W8, TEMP
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Add W0, W0, 1
	006 Return X0
	007 Move [X31-16], X30
	008 Move [X31-8], X19
	009 Move X0, 0x226C000
	010 Move X0, [X0+1888]
	011 Call 0x1C17D08
	012 Call 0x1C17F10
	013 Move X19, X0
	014 Move X0, 0x226F000
	015 Move X0, [X0+304]
	016 Call 0x1C17D08
	017 Move X1, X0
	018 Move X0, X19
	019 Move X2, X31
	020 Call ArgumentOutOfRangeException..ctor, X0, X1
	021 Move X0, 0x226F000
	022 Move X0, [X0+312]
	023 Call 0x1C17D08
	024 Move X1, X0
	025 Move X0, X19
	026 Call 0x1C17DEC

Method: Fusion.SceneRef FromPath(System.String path)

Disassembly:
	0x01E90EF4 STR W8, [X31 + 0x190]
	0x01E90EF8 STR V0, [X31 + 0x18]
	0x01E90EFC LDR W8, [X19 + 0x18]
	0x01E90F00 CMP W8, 0x6
	0x01E90F04 B.LS 0x1E913CC
	0x01E90F08 LDR W8, [X31 + 0x190]
	0x01E90F0C LDR V0, [X31 + 0x18]
	0x01E90F10 MOVZ W1, 0x2
	0x01E90F14 STR W8, [X19 + 0xA8]
	0x01E90F18 STUR V0, [X19 + 0x98]
	0x01E90F1C LDR X0, [X22]
	0x01E90F20 BL 0x1C16D6C
	0x01E90F24 CBZ X0, 0x1E913D0
	0x01E90F28 LDR W8, [X0 + 0x18]
	0x01E90F2C MOV X1, X0
	0x01E90F30 CBZ W8, 0x1E913CC
	0x01E90F34 MOVZ W9, 0x32
	0x01E90F38 CMP W8, 0x1
	0x01E90F3C STR W9, [X1 + 0x20]
	0x01E90F40 B.EQ 0x1E913CC
	0x01E90F44 MOVZ W8, 0x19
	0x01E90F48 ADD X0, X31, 0x168
	0x01E90F4C STR W8, [X1 + 0x24]
	0x01E90F50 STP X31, X31, [X31 + 0x168]
	0x01E90F54 STR W31, [X31 + 0x178]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move W1, W31
	006 Call HashCodeUtilities.GetHashCodeDeterministic, X0, X1
	007 Or W0, W0, 0x80000000
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return X0
	011 Move X0, 0x2269000
	012 Move X0, [X0+1320]
	013 Call 0x1C17D08
	014 Call 0x1C17F10
	015 Move X19, X0
	016 Move X0, 0x226F000
	017 Move X0, [X0+288]
	018 Call 0x1C17D08
	019 Move X1, X0
	020 Move X0, X19
	021 Move X2, X31
	022 Call ArgumentNullException..ctor, X0, X1
	023 Move X0, 0x226F000
	024 Move X0, [X0+296]
	025 Call 0x1C17D08
	026 Move X1, X0
	027 Move X0, X19
	028 Call 0x1C17DEC

Method: Fusion.SceneRef FromRaw(System.UInt32 rawValue)

Disassembly:
	0x01E90FC4 LDR V0, [X23 + 0x9]
	0x01E90FC8 STR W8, [X31 + 0x130]

ISIL:
	001 Move W0, W0
	002 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x01E90FCC STR V0, [X31 + 0x12]
	0x01E90FD0 LDR W8, [X19 + 0x18]
	0x01E90FD4 CMP W8, 0x8
	0x01E90FD8 B.LS 0x1E913CC
	0x01E90FDC LDR W8, [X31 + 0x130]
	0x01E90FE0 LDR V0, [X31 + 0x12]
	0x01E90FE4 ADRP X20, 0x226E000
	0x01E90FE8 MOVZ W1, 0x3
	0x01E90FEC STR W8, [X19 + 0xD0]
	0x01E90FF0 STR V0, [X19 + 0xC]
	0x01E90FF4 LDR X0, [X22]
	0x01E90FF8 LDR X20, [X20 + 0x1A0]
	0x01E90FFC BL 0x1C16D6C
	0x01E91000 LDR X1, [X20]
	0x01E91004 MOV X2, X31
	0x01E91008 MOV X20, X0
	0x01E9100C BL 0x32C5BD8
	0x01E91010 ADD X0, X31, 0x108
	0x01E91014 MOV X1, X20
	0x01E91018 STP X31, X31, [X31 + 0x108]
	0x01E9101C STR W31, [X31 + 0x118]
	0x01E91020 BL 0x1E9067C
	0x01E91024 LDR W8, [X31 + 0x118]
	0x01E91028 LDR V0, [X23 + 0x6]
	0x01E9102C STR W8, [X31 + 0x100]
	0x01E91030 STR V0, [X31 + 0xF]
	0x01E91034 LDR W8, [X19 + 0x18]
	0x01E91038 CMP W8, 0x9
	0x01E9103C B.LS 0x1E913CC
	0x01E91040 LDR W8, [X31 + 0x100]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x254A000
	006 Move W8, [X21+616]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x226F000
	014 Move X0, [X0+320]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+616], W8
	018 Compare X20, 0
	019 JumpIfEqual {25}
	020 Move X8, 0x226E000
	021 Move X8, [X8+320]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 Move X0, X20
	027 Call 0x1C17E08
	028 Move W8, [X0]
	029 Move W9, [X19]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0

Method: System.Boolean Equals(Fusion.SceneRef other)

Disassembly:
	0x01E91044 LDR V0, [X31 + 0xF]
	0x01E91048 ADRP X20, 0x226D000
	0x01E9104C MOVZ W1, 0x3
	0x01E91050 STR W8, [X19 + 0xE4]

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x01E91054 STUR V0, [X19 + 0xD4]
	0x01E91058 LDR X0, [X22]

ISIL:
	001 Move X1, X31
	002 Call UInt32.GetHashCode, X0
	003 Return X0

Method: System.String ToString()

Disassembly:
	0x01E9105C LDR X20, [X20 + 0x1F0]
	0x01E91060 BL 0x1C16D6C
	0x01E91064 LDR X1, [X20]

ISIL:
	001 Move W1, 1
	002 Move W2, 1

Method: System.String ToString(System.Boolean brackets, System.Boolean prefix)

Disassembly:
	0x01E91068 MOV X2, X31
	0x01E9106C MOV X20, X0
	0x01E91070 BL 0x32C5BD8
	0x01E91074 ADD X0, X31, 0xD8
	0x01E91078 MOV X1, X20
	0x01E9107C STP X31, X31, [X31 + 0xD8]
	0x01E91080 STR W31, [X31 + 0xE8]
	0x01E91084 BL 0x1E9067C
	0x01E91088 LDR W8, [X31 + 0xE8]
	0x01E9108C LDR V0, [X23 + 0x3]
	0x01E91090 STR W8, [X31 + 0xD0]
	0x01E91094 STR V0, [X31 + 0xC]
	0x01E91098 LDR W8, [X19 + 0x18]
	0x01E9109C CMP W8, 0xA
	0x01E910A0 B.LS 0x1E913CC
	0x01E910A4 LDR W8, [X31 + 0xD0]
	0x01E910A8 LDR V0, [X31 + 0xC]
	0x01E910AC ADRP X20, 0x226D000
	0x01E910B0 MOVZ W1, 0x3
	0x01E910B4 STR W8, [X19 + 0xF8]
	0x01E910B8 STUR V0, [X19 + 0xE8]
	0x01E910BC LDR X0, [X22]
	0x01E910C0 LDR X20, [X20 + 0x1C8]
	0x01E910C4 BL 0x1C16D6C
	0x01E910C8 LDR X1, [X20]
	0x01E910CC MOV X2, X31
	0x01E910D0 MOV X20, X0
	0x01E910D4 BL 0x32C5BD8
	0x01E910D8 ADD X0, X31, 0xA8
	0x01E910DC MOV X1, X20
	0x01E910E0 STP X31, X31, [X31 + 0xA8]
	0x01E910E4 STR W31, [X31 + 0xB8]
	0x01E910E8 BL 0x1E9067C
	0x01E910EC LDR W8, [X31 + 0xB8]
	0x01E910F0 LDR V0, [X23]
	0x01E910F4 STR W8, [X31 + 0xA0]
	0x01E910F8 STR V0, [X31 + 0x9]
	0x01E910FC LDR W8, [X19 + 0x18]
	0x01E91100 CMP W8, 0xB
	0x01E91104 B.LS 0x1E913CC
	0x01E91108 LDR V0, [X31 + 0x9]
	0x01E9110C LDR W8, [X31 + 0xA0]
	0x01E91110 ADD X9, X19, 0xFC
	0x01E91114 ADRP X20, 0x226D000
	0x01E91118 STUR V0, [X19 + 0xFC]
	0x01E9111C STR W8, [X9 + 0x10]
	0x01E91120 LDR X0, [X22]
	0x01E91124 LDR X20, [X20 + 0x1E0]
	0x01E91128 MOVZ W1, 0x3
	0x01E9112C BL 0x1C16D6C
	0x01E91130 LDR X1, [X20]
	0x01E91134 MOV X2, X31
	0x01E91138 MOV X20, X0
	0x01E9113C BL 0x32C5BD8
	0x01E91140 ADD X0, X31, 0x78
	0x01E91144 MOV X1, X20
	0x01E91148 STP X31, X31, [X31 + 0x78]
	0x01E9114C STR W31, [X31 + 0x88]
	0x01E91150 BL 0x1E9067C
	0x01E91154 LDR W8, [X31 + 0x88]
	0x01E91158 LDUR V0, [X31 + 0x78]
	0x01E9115C STR W8, [X31 + 0x70]
	0x01E91160 STR V0, [X31 + 0x6]
	0x01E91164 LDR W8, [X19 + 0x18]
	0x01E91168 CMP W8, 0xC
	0x01E9116C B.LS 0x1E913CC
	0x01E91170 LDR W8, [X31 + 0x70]
	0x01E91174 LDR V0, [X31 + 0x6]
	0x01E91178 ADRP X20, 0x226D000
	0x01E9117C MOVZ W1, 0x4
	0x01E91180 STR W8, [X19 + 0x120]
	0x01E91184 STR V0, [X19 + 0x11]
	0x01E91188 LDR X0, [X22]
	0x01E9118C LDR X20, [X20 + 0x1E8]
	0x01E91190 BL 0x1C16D6C
	0x01E91194 LDR X1, [X20]
	0x01E91198 MOV X2, X31
	0x01E9119C MOV X20, X0
	0x01E911A0 BL 0x32C5BD8
	0x01E911A4 ADD X0, X31, 0x48
	0x01E911A8 MOV X1, X20
	0x01E911AC STP X31, X31, [X31 + 0x48]
	0x01E911B0 STR W31, [X31 + 0x58]
	0x01E911B4 BL 0x1E9067C
	0x01E911B8 LDR W8, [X31 + 0x58]
	0x01E911BC LDUR V0, [X31 + 0x48]
	0x01E911C0 STR W8, [X31 + 0x40]
	0x01E911C4 STR V0, [X31 + 0x3]
	0x01E911C8 LDR W8, [X19 + 0x18]
	0x01E911CC CMP W8, 0xD
	0x01E911D0 B.LS 0x1E913CC
	0x01E911D4 LDR W8, [X31 + 0x40]
	0x01E911D8 LDR V0, [X31 + 0x3]
	0x01E911DC ADD X9, X19, 0x124
	0x01E911E0 ADRP X20, 0x226D000
	0x01E911E4 STR W8, [X9 + 0x10]
	0x01E911E8 STR V0, [X9]
	0x01E911EC LDR X0, [X22]
	0x01E911F0 LDR X20, [X20 + 0x1D8]
	0x01E911F4 MOVZ W1, 0x4
	0x01E911F8 BL 0x1C16D6C
	0x01E911FC LDR X1, [X20]
	0x01E91200 MOV X2, X31
	0x01E91204 MOV X20, X0
	0x01E91208 BL 0x32C5BD8
	0x01E9120C ADD X0, X31, 0x18
	0x01E91210 MOV X1, X20
	0x01E91214 STP X31, X31, [X31 + 0x18]
	0x01E91218 STR W31, [X31 + 0x28]
	0x01E9121C BL 0x1E9067C
	0x01E91220 LDR W8, [X31 + 0x28]
	0x01E91224 LDUR V0, [X31 + 0x18]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x2549000
	009 Move X23, 0x2263000
	010 Move W8, [X20+617]
	011 Move X23, [X23+2288]
	012 Move W22, W2
	013 Move W19, W1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0x2263000
	020 Move X0, [X0+2288]
	021 Call 0x1C17CF4
	022 Move X0, 0x226B000
	023 Move X0, [X0+1824]
	024 Call 0x1C17CF4
	025 Move X0, 0x2264000
	026 Move X0, [X0+2568]
	027 Call 0x1C17CF4
	028 Move X0, 0x2265000
	029 Move X0, [X0+1944]
	030 Call 0x1C17CF4
	031 Move X0, 0x226E000
	032 Move X0, [X0+328]
	033 Call 0x1C17CF4
	034 Move X0, 0x226E000
	035 Move X0, [X0+336]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+617], W8
	039 Move X0, [X23]
	040 Call 0x1C17F10
	041 Move X1, X31
	042 Move X20, X0
	043 Call StringBuilder..ctor, X0
	044 Move TEMP, X19
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {54}
	048 Compare X20, 0
	049 JumpIfEqual {145}
	050 Move W1, 91
	051 Move X0, X20
	052 Move X2, X31
	053 Call StringBuilder.Append, X0, X1
	054 Move TEMP, X22
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {66}
	058 Compare X20, 0
	059 JumpIfEqual {145}
	060 Move X8, 0x226E000
	061 Move X8, [X8+336]
	062 Move X0, X20
	063 Move X2, X31
	064 Move X1, [X8]
	065 Call StringBuilder.Append, X0, X1
	066 Move W8, [X21]
	067 Compare W8, 0
	068 JumpIfEqual {94}
	069 Move TEMP, X8
	070 And TEMP, TEMP, -2147483648
	071 Compare TEMP, -2147483648
	072 JumpIfEqual {123}
	073 Compare X20, 0
	074 JumpIfEqual {145}
	075 Move X8, 0x2264000
	076 Move X8, [X8+2568]
	077 Move X0, X20
	078 Move X2, X31
	079 Move X1, [X8]
	080 Call StringBuilder.Append, X0, X1
	081 Move X22, X0
	082 Move X0, X21
	083 Call SceneRef.get_AsIndex, X0
	084 Compare X22, 0
	085 JumpIfEqual {145}
	086 Move W1, W0
	087 Move X0, X22
	088 Move X2, X31
	089 Call StringBuilder.Append, X0, X1
	090 Move TEMP, X19
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {106}
	094 Compare X20, 0
	095 JumpIfEqual {145}
	096 Move X8, 0x2265000
	097 Move X8, [X8+1944]
	098 Move X0, X20
	099 Move X2, X31
	100 Move X1, [X8]
	101 Call StringBuilder.Append, X0, X1
	102 Move TEMP, X19
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {110}
	106 Move W1, 93
	107 Move X0, X20
	108 Move X2, X31
	109 Call StringBuilder.Append, X0, X1
	110 Move X8, [X20]
	111 Move X0, X20
	112 Move X9, [X8+360]
	113 Move X1, [X8+368]
	114 NotImplemented "Instruction BLR not yet implemented."
	115 Move X20, [X31+48]
	116 Move X19, [X31+56]
	117 Move X22, [X31+32]
	118 Move X21, [X31+40]
	119 Move X30, [X31+16]
	120 Move X23, [X31+24]
	121 Add X31, X31, 64
	122 Return X0
	123 Move X0, X21
	124 Call SceneRef.get_AsPathHash, X0
	125 Move X8, 0x226B000
	126 Move X8, [X8+1824]
	127 Move [X31+12], W0
	128 Add X1, X31, 12
	129 Move X8, [X8]
	130 Move X0, X8
	131 Call 0x1C17E04
	132 Compare X20, 0
	133 JumpIfEqual {145}
	134 Move X8, 0x226E000
	135 Move X8, [X8+328]
	136 Move X2, X0
	137 Move X0, X20
	138 Move X3, X31
	139 Move X1, [X8]
	140 Call StringBuilder.AppendFormat, X0, X1, X2
	141 Move TEMP, X19
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfEqual {106}
	145 Call 0x1C17F20

Method: System.Boolean op_Equality(Fusion.SceneRef a, Fusion.SceneRef b)

Disassembly:
	0x01E90F58 BL 0x1E9067C
	0x01E90F5C LDR W8, [X31 + 0x178]
	0x01E90F60 LDR V0, [X23 + 0xC]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Boolean op_Inequality(Fusion.SceneRef a, Fusion.SceneRef b)

Disassembly:
	0x01E91228 STR W8, [X31 + 0x10]
	0x01E9122C STR V0, [X31]
	0x01E91230 LDR W8, [X19 + 0x18]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

