Type: Fusion.NetworkSpawnOp/Awaiter

Method: System.Void .ctor(in Fusion.NetworkSpawnOp op)

Disassembly:
	0x01EB96E8 BL 0x338C698
	0x01EB96EC LDR X8, [X26]
	0x01EB96F0 MOV X21, X0
	0x01EB96F4 MOV X0, X8
	0x01EB96F8 BL 0x1C16F10

ISIL:
	001 Move X8, [X1+16]
	002 Move V0, [X1]
	003 Move [X0+16], X8
	004 Move [X0], V0
	005 Return 

Method: System.Boolean get_IsCompleted()

Disassembly:
	0x01EB99AC LDR X24, [X24 + 0x950]
	0x01EB99B0 MOV X19, X1
	0x01EB99B4 MOV X20, X0
	0x01EB99B8 TBNZ X8, 0x0, 0x1EB99DC
	0x01EB99BC ADRP X0, 0x2245000
	0x01EB99C0 LDR X0, [X0 + 0xA30]
	0x01EB99C4 BL 0x1C16CF4
	0x01EB99C8 ADRP X0, 0x2245000
	0x01EB99CC LDR X0, [X0 + 0x950]
	0x01EB99D0 BL 0x1C16CF4
	0x01EB99D4 MOVZ W8, 0x1
	0x01EB99D8 STRB W8, [X21 + 0x40F]
	0x01EB99DC LDR X0, [X24]
	0x01EB99E0 LDP X23, X22, [X20 + 0x10]
	0x01EB99E4 LDP X21, X20, [X20 + 0x20]
	0x01EB99E8 LDR W8, [X0 + 0xE0]
	0x01EB99EC CBNZ W8, 0x1EB99F4
	0x01EB99F0 BL 0x1C16DFC
	0x01EB99F4 MOV X0, X23
	0x01EB99F8 MOV X1, X22
	0x01EB99FC MOV X2, X21
	0x01EB9A00 MOV X3, X20
	0x01EB9A04 BL 0x1EB93D4
	0x01EB9A08 LDR X8, [X24]
	0x01EB9A0C LDR X8, [X8 + 0xB8]
	0x01EB9A10 LDR X0, [X8]
	0x01EB9A14 CBZ X0, 0x1EB9A90
	0x01EB9A18 ADRP X9, 0x2245000
	0x01EB9A1C LDR X9, [X9 + 0xA30]
	0x01EB9A20 LDR W10, [X0 + 0x1C]
	0x01EB9A24 LDR X8, [X0 + 0x10]
	0x01EB9A28 LDR X9, [X9]
	0x01EB9A2C ADD W10, W10, 0x1
	0x01EB9A30 STR W10, [X0 + 0x1C]
	0x01EB9A34 CBZ X8, 0x1EB9A90
	0x01EB9A38 LDRSW X10, [X0 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2521000
	005 Move W8, [X20+1204]
	006 Move X19, X0
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0x223E000
	010 Move X0, [X0+2976]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X20+1204], W8
	014 Move W8, [X19+8]
	015 Compare W8, 0
	016 JumpIfNotEqual {32}
	017 Move X8, [X19+16]
	018 Compare X8, 0
	019 JumpIfEqual {32}
	020 Move X9, 0x223E000
	021 Move X9, [X9+2976]
	022 Move X10, [X8]
	023 Move X9, [X9]
	024 Move W12, [X10+304]
	025 Move W11, [X9+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X10, [X10+200]
	028 Add X10, X10, X11
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W8, W31
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CSET not yet implemented."
	036 Move X30, [X31+32]
	037 Return X0
	038 Move W8, [X8+16]

Method: Fusion.NetworkObject GetResult()

Disassembly:
	0x01EB9A3C LDR W11, [X8 + 0x18]
	0x01EB9A40 CMP W10, W11
	0x01EB9A44 B.CS 0x1EB9A6C
	0x01EB9A48 ADD W9, W10, 0x1
	0x01EB9A4C ADD X8, X8, X10, 0x3, LSL
	0x01EB9A50 STR W9, [X0 + 0x18]
	0x01EB9A54 STR X19, [X8 + 0x20]
	0x01EB9A58 LDP X20, X19, [X31 + 0x30]
	0x01EB9A5C LDP X22, X21, [X31 + 0x20]
	0x01EB9A60 LDP X24, X23, [X31 + 0x10]
	0x01EB9A64 LDR X30, [X31], #0x40
	0x01EB9A68 RET
	0x01EB9A6C LDR X8, [X9 + 0x20]
	0x01EB9A70 MOV X1, X19
	0x01EB9A74 LDP X20, X19, [X31 + 0x30]
	0x01EB9A78 LDP X22, X21, [X31 + 0x20]
	0x01EB9A7C LDR X8, [X8 + 0xC0]
	0x01EB9A80 LDP X24, X23, [X31 + 0x10]
	0x01EB9A84 LDR X2, [X8 + 0x70]
	0x01EB9A88 LDR X30, [X31], #0x40
	0x01EB9A8C B 0x301BF90
	0x01EB9A90 BL 0x1C16F20
	0x01EB9A94 STP X30, X21, [X31 - 0x20]!
	0x01EB9A98 STP X20, X19, [X31 + 0x10]
	0x01EB9A9C ADRP X21, 0x2520000
	0x01EB9AA0 ADRP X20, 0x2245000
	0x01EB9AA4 LDRB W8, [X21 + 0x410]
	0x01EB9AA8 LDR X20, [X20 + 0x950]
	0x01EB9AAC MOV X19, X1
	0x01EB9AB0 TBNZ X8, 0x0, 0x1EB9AEC
	0x01EB9AB4 ADRP X0, 0x2246000
	0x01EB9AB8 LDR X0, [X0 + 0x530]
	0x01EB9ABC BL 0x1C16CF4
	0x01EB9AC0 ADRP X0, 0x2246000
	0x01EB9AC4 LDR X0, [X0 + 0x538]
	0x01EB9AC8 BL 0x1C16CF4
	0x01EB9ACC ADRP X0, 0x2246000
	0x01EB9AD0 LDR X0, [X0 + 0x540]
	0x01EB9AD4 BL 0x1C16CF4
	0x01EB9AD8 ADRP X0, 0x2245000
	0x01EB9ADC LDR X0, [X0 + 0x950]
	0x01EB9AE0 BL 0x1C16CF4
	0x01EB9AE4 MOVZ W8, 0x1
	0x01EB9AE8 STRB W8, [X21 + 0x410]
	0x01EB9AEC LDR X0, [X20]
	0x01EB9AF0 LDR W8, [X0 + 0xE0]
	0x01EB9AF4 CBNZ W8, 0x1EB9B00
	0x01EB9AF8 BL 0x1C16DFC
	0x01EB9AFC LDR X0, [X20]
	0x01EB9B00 LDR X8, [X0 + 0xB8]
	0x01EB9B04 LDR X0, [X8]
	0x01EB9B08 CBZ X0, 0x1EB9BB8
	0x01EB9B0C ADRP X8, 0x2246000
	0x01EB9B10 LDR X8, [X8 + 0x530]
	0x01EB9B14 MOV X1, X19
	0x01EB9B18 LDR X2, [X8]
	0x01EB9B1C BL 0x301CD00
	0x01EB9B20 TBNZ X0, 0x1F, 0x1EB9B40
	0x01EB9B24 MOV W19, W0
	0x01EB9B28 LDR X0, [X20]
	0x01EB9B2C LDR W8, [X0 + 0xE0]
	0x01EB9B30 CBZ W8, 0x1EB9B4C
	0x01EB9B34 LDR X8, [X0 + 0xB8]
	0x01EB9B38 LDR W21, [X8 + 0x8]
	0x01EB9B3C B 0x1EB9B6C
	0x01EB9B40 LDP X20, X19, [X31 + 0x10]
	0x01EB9B44 LDP X30, X21, [X31], #0x20
	0x01EB9B48 RET
	0x01EB9B4C BL 0x1C16DFC
	0x01EB9B50 LDR X0, [X20]
	0x01EB9B54 LDR X8, [X0 + 0xB8]
	0x01EB9B58 LDR W9, [X0 + 0xE0]
	0x01EB9B5C LDR W21, [X8 + 0x8]
	0x01EB9B60 CBNZ W9, 0x1EB9B6C
	0x01EB9B64 BL 0x1C16DFC
	0x01EB9B68 LDR X0, [X20]
	0x01EB9B6C LDR X8, [X0 + 0xB8]
	0x01EB9B70 LDR X0, [X8]
	0x01EB9B74 CBZ X0, 0x1EB9BB8
	0x01EB9B78 TBNZ X21, 0x1F, 0x1EB9B9C
	0x01EB9B7C ADRP X8, 0x2246000
	0x01EB9B80 LDR X8, [X8 + 0x540]
	0x01EB9B84 MOV W1, W19
	0x01EB9B88 LDP X20, X19, [X31 + 0x10]
	0x01EB9B8C MOV X2, X31
	0x01EB9B90 LDR X3, [X8]
	0x01EB9B94 LDP X30, X21, [X31], #0x20
	0x01EB9B98 B 0x301BD20
	0x01EB9B9C ADRP X8, 0x2246000
	0x01EB9BA0 LDR X8, [X8 + 0x538]
	0x01EB9BA4 MOV W1, W19
	0x01EB9BA8 LDP X20, X19, [X31 + 0x10]
	0x01EB9BAC LDR X2, [X8]
	0x01EB9BB0 LDP X30, X21, [X31], #0x20
	0x01EB9BB4 B 0x301DA48
	0x01EB9BB8 BL 0x1C16F20
	0x01EB9BBC STP X30, X25, [X31 - 0x40]!
	0x01EB9BC0 STP X24, X23, [X31 + 0x10]
	0x01EB9BC4 STP X22, X21, [X31 + 0x20]
	0x01EB9BC8 STP X20, X19, [X31 + 0x30]
	0x01EB9BCC ADRP X19, 0x2520000
	0x01EB9BD0 ADRP X22, 0x2245000
	0x01EB9BD4 LDRB W8, [X19 + 0x411]
	0x01EB9BD8 LDR X22, [X22 + 0x950]
	0x01EB9BDC TBNZ X8, 0x0, 0x1EB9C0C
	0x01EB9BE0 ADRP X0, 0x2246000
	0x01EB9BE4 LDR X0, [X0 + 0x548]
	0x01EB9BE8 BL 0x1C16CF4
	0x01EB9BEC ADRP X0, 0x2246000
	0x01EB9BF0 LDR X0, [X0 + 0x550]
	0x01EB9BF4 BL 0x1C16CF4
	0x01EB9BF8 ADRP X0, 0x2245000
	0x01EB9BFC LDR X0, [X0 + 0x950]
	0x01EB9C00 BL 0x1C16CF4
	0x01EB9C04 MOVZ W8, 0x1
	0x01EB9C08 STRB W8, [X19 + 0x411]
	0x01EB9C0C LDR X0, [X22]
	0x01EB9C10 LDR W8, [X0 + 0xE0]
	0x01EB9C14 CBNZ W8, 0x1EB9C20
	0x01EB9C18 BL 0x1C16DFC
	0x01EB9C1C LDR X0, [X22]
	0x01EB9C20 LDR X8, [X0 + 0xB8]
	0x01EB9C24 LDR X9, [X8]
	0x01EB9C28 CBZ X9, 0x1EB9D38
	0x01EB9C2C LDR W9, [X9 + 0x18]
	0x01EB9C30 ADRP X23, 0x2246000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2521000
	005 Move W8, [X20+1026]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2247000
	012 Move X0, [X0+1136]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1026], W8
	016 Move X0, X19
	017 Move [X31+8], W31
	018 Call Awaiter.get_IsCompleted, X0
	019 Move TEMP, X0
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {46}
	023 Move X0, X19
	024 Move [X31+8], W31
	025 Call Awaiter.get_IsCompleted, X0
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {46}
	030 Move X20, 0x2247000
	031 Move X20, [X20+1136]
	032 Move X0, [X20]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Add X0, X31, 8
	038 Move X1, X31
	039 Call SpinWait.SpinOnce, X0
	040 Move X0, X19
	041 Call Awaiter.get_IsCompleted, X0
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {32}
	046 Move X20, 0x2521000
	047 Move W8, [X20+1204]
	048 Compare W8, 0
	049 JumpIfNotEqual {55}
	050 Move X0, 0x223E000
	051 Move X0, [X0+2976]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X20+1204], W8
	055 Move W8, [X19+8]
	056 Move W9, W8
	057 Compare W8, 0
	058 JumpIfNotEqual {74}
	059 Move X9, [X19+16]
	060 Compare X9, 0
	061 JumpIfEqual {124}
	062 Move X10, 0x223E000
	063 Move X10, [X10+2976]
	064 Move X11, [X9]
	065 Move X10, [X10]
	066 Move W13, [X11+304]
	067 Move W12, [X10+304]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X11, [X11+200]
	070 Add X11, X11, X12
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move W9, [X9+16]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X20, 0x2520000
	076 Move W9, [X20+2593]
	077 Compare W9, 0
	078 JumpIfNotEqual {88}
	079 Move X0, 0x223E000
	080 Move X0, [X0+2976]
	081 Call 0x1C17CF4
	082 Move X0, 0x223E000
	083 Move X0, [X0+2984]
	084 Call 0x1C17CF4
	085 Move W8, 1
	086 Move [X20+2593], W8
	087 Move W8, [X19+8]
	088 Move X0, [X19+16]
	089 Compare W8, 0
	090 JumpIfEqual {95}
	091 Compare X0, 0
	092 JumpIfEqual {117}
	093 Move X8, [X0]
	094 Move W9, [X8+304]
	095 Compare X0, 0
	096 JumpIfEqual {117}
	097 Move X9, 0x223E000
	098 Move X9, [X9+2976]
	099 Move X8, [X0]
	100 Move X10, [X9]
	101 Move W9, [X8+304]
	102 Move W11, [X10+304]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X12, [X8+200]
	105 Add X11, X12, X11
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X10, 0x223E000
	109 Move X10, [X10+2984]
	110 Move X1, [X10]
	111 Move W10, [X1+304]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X8, [X8+200]
	114 Add X8, X8, X10
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X20, [X31+16]
	118 Move X19, [X31+24]
	119 Move X30, [X31+32]
	120 Return X0
	121 Move X0, [X0+24]
	122 Call 0x1C181E0
	123 Move W9, W31
	124 Move X0, 0x2247000
	125 Move X0, [X0+288]
	126 Move W19, W9
	127 Call 0x1C17D08
	128 Call 0x1C17F10
	129 Move W1, W19
	130 Move X2, X31
	131 Move X3, X31
	132 Move X20, X0
	133 Call NetworkObjectSpawnException..ctor, X0, X1, X2
	134 Move X0, 0x2247000
	135 Move X0, [X0+1144]
	136 Call 0x1C17D08
	137 Move X1, X0
	138 Move X0, X20
	139 Call 0x1C17DEC

Method: System.Void OnCompleted(System.Action continuation)

Disassembly:
	0x01EB9C34 ADRP X20, 0x223A000
	0x01EB9C38 LDR X23, [X23 + 0x550]
	0x01EB9C3C LDR X20, [X20 + 0x598]
	0x01EB9C40 MOV W19, W31
	0x01EB9C44 ADRP X24, 0x251F000
	0x01EB9C48 STR W9, [X8 + 0x8]
	0x01EB9C4C MOVZ W25, 0x1
	0x01EB9C50 LDR W8, [X0 + 0xE0]
	0x01EB9C54 CBNZ W8, 0x1EB9C60
	0x01EB9C58 BL 0x1C16DFC
	0x01EB9C5C LDR X0, [X22]
	0x01EB9C60 LDR X8, [X0 + 0xB8]
	0x01EB9C64 LDR W8, [X8 + 0x8]
	0x01EB9C68 CMP W19, W8
	0x01EB9C6C B.GE 0x1EB9D24
	0x01EB9C70 LDR W8, [X0 + 0xE0]
	0x01EB9C74 CBNZ W8, 0x1EB9C80
	0x01EB9C78 BL 0x1C16DFC
	0x01EB9C7C LDR X0, [X22]
	0x01EB9C80 LDR X8, [X0 + 0xB8]
	0x01EB9C84 LDR X0, [X8]
	0x01EB9C88 CBZ X0, 0x1EB9D38
	0x01EB9C8C LDR X2, [X23]
	0x01EB9C90 MOV W1, W19
	0x01EB9C94 BL 0x301BCCC
	0x01EB9C98 LDRB W8, [X24 + 0xA22]
	0x01EB9C9C MOV X21, X0
	0x01EB9CA0 CBNZ W8, 0x1EB9CB0
	0x01EB9CA4 MOV X0, X20
	0x01EB9CA8 BL 0x1C16CF4
	0x01EB9CAC STRB W25, [X24 + 0xA22]
	0x01EB9CB0 LDR X0, [X20]
	0x01EB9CB4 LDR W8, [X0 + 0xE0]
	0x01EB9CB8 CBNZ W8, 0x1EB9CC0
	0x01EB9CBC BL 0x1C16DFC
	0x01EB9CC0 MOV X0, X21
	0x01EB9CC4 MOV X1, X31
	0x01EB9CC8 BL 0x3C38948
	0x01EB9CCC TBZ X0, 0x0, 0x1EB9D18
	0x01EB9CD0 CBZ X21, 0x1EB9D38
	0x01EB9CD4 LDR X8, [X21 + 0x50]
	0x01EB9CD8 CBZ X8, 0x1EB9D38
	0x01EB9CDC LDR X8, [X8 + 0x58]
	0x01EB9CE0 CBZ X8, 0x1EB9D38
	0x01EB9CE4 LDR W8, [X8 + 0x20]
	0x01EB9CE8 CMP W8, 0x1
	0x01EB9CEC B.EQ 0x1EB9D00
	0x01EB9CF0 CBNZ W8, 0x1EB9D3C
	0x01EB9CF4 MOV X0, X31
	0x01EB9CF8 BL 0x3C3C7B4
	0x01EB9CFC B 0x1EB9D08
	0x01EB9D00 MOV X0, X31
	0x01EB9D04 BL 0x3C3C714
	0x01EB9D08 FCVT S0, S0
	0x01EB9D0C MOV X0, X21
	0x01EB9D10 MOV X1, X31
	0x01EB9D14 BL 0x1EA2838
	0x01EB9D18 LDR X0, [X22]
	0x01EB9D1C ADD W19, W19, 0x1
	0x01EB9D20 B 0x1EB9C50
	0x01EB9D24 LDP X20, X19, [X31 + 0x30]
	0x01EB9D28 LDP X22, X21, [X31 + 0x20]
	0x01EB9D2C LDP X24, X23, [X31 + 0x10]
	0x01EB9D30 LDP X30, X25, [X31], #0x40
	0x01EB9D34 RET
	0x01EB9D38 BL 0x1C16F20
	0x01EB9D3C ADRP X0, 0x2243000
	0x01EB9D40 LDR X0, [X0 + 0x758]
	0x01EB9D44 BL 0x1C16D08
	0x01EB9D48 BL 0x1C16F10
	0x01EB9D4C MOV X1, X31
	0x01EB9D50 MOV X19, X0
	0x01EB9D54 BL 0x3380288
	0x01EB9D58 ADRP X0, 0x2246000
	0x01EB9D5C LDR X0, [X0 + 0x508]
	0x01EB9D60 BL 0x1C16D08
	0x01EB9D64 MOV X1, X0
	0x01EB9D68 MOV X0, X19
	0x01EB9D6C BL 0x1C16DEC
	0x01EB9D70 SUB X31, X31, 0xA0
	0x01EB9D74 STP X30, X25, [X31 + 0x60]
	0x01EB9D78 STP X24, X23, [X31 + 0x70]
	0x01EB9D7C STP X22, X21, [X31 + 0x80]
	0x01EB9D80 STP X20, X19, [X31 + 0x90]
	0x01EB9D84 ADRP X19, 0x2520000
	0x01EB9D88 LDRB W8, [X19 + 0x412]
	0x01EB9D8C TBNZ X8, 0x0, 0x1EB9DE0
	0x01EB9D90 ADRP X0, 0x2246000
	0x01EB9D94 LDR X0, [X0 + 0x558]
	0x01EB9D98 BL 0x1C16CF4
	0x01EB9D9C ADRP X0, 0x2246000
	0x01EB9DA0 LDR X0, [X0 + 0x550]
	0x01EB9DA4 BL 0x1C16CF4
	0x01EB9DA8 ADRP X0, 0x2245000
	0x01EB9DAC LDR X0, [X0 + 0x950]
	0x01EB9DB0 BL 0x1C16CF4
	0x01EB9DB4 ADRP X0, 0x2246000
	0x01EB9DB8 LDR X0, [X0 + 0x560]
	0x01EB9DBC BL 0x1C16CF4
	0x01EB9DC0 ADRP X0, 0x2246000
	0x01EB9DC4 LDR X0, [X0 + 0x568]
	0x01EB9DC8 BL 0x1C16CF4
	0x01EB9DCC ADRP X0, 0x2246000
	0x01EB9DD0 LDR X0, [X0 + 0x570]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2521000
	007 Move X22, 0x2247000
	008 Move W8, [X20+1027]
	009 Move X22, [X22+1152]
	010 Move X21, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x223C000
	017 Move X0, [X0+3696]
	018 Call 0x1C17CF4
	019 Move X0, 0x223E000
	020 Move X0, [X0+2976]
	021 Call 0x1C17CF4
	022 Move X0, 0x2247000
	023 Move X0, [X0+1152]
	024 Call 0x1C17CF4
	025 Move X0, 0x2247000
	026 Move X0, [X0+1160]
	027 Call 0x1C17CF4
	028 Move X0, 0x2247000
	029 Move X0, [X0+1168]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+1027], W8
	033 Move X0, [X22]
	034 Call 0x1C17F10
	035 Move X1, X31
	036 Move X20, X0
	037 Call Object..ctor, X0
	038 Compare X20, 0
	039 JumpIfEqual {106}
	040 Move X0, X19
	041 Move [X20+16], X21
	042 Call Awaiter.get_IsCompleted, X0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {59}
	047 Move X8, [X20+16]
	048 Compare X8, 0
	049 JumpIfEqual {106}
	050 Move X2, [X8+24]
	051 Move X0, [X8+64]
	052 Move X1, [X8+40]
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X30, [X31+48]
	058 CallNoReturn X2
	059 Move X19, [X19+16]
	060 Compare X19, 0
	061 JumpIfEqual {107}
	062 Move X8, 0x223E000
	063 Move X8, [X8+2976]
	064 Move X9, [X19]
	065 Move X8, [X8]
	066 Move W11, [X9+304]
	067 Move W10, [X8+304]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X9, [X9+200]
	070 Add X9, X9, X10
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X8, 0x2247000
	074 Move X8, [X8+1168]
	075 Move X0, [X8]
	076 Call 0x1C17F10
	077 Move X1, X31
	078 Move X21, X0
	079 Call Object..ctor, X0
	080 Compare X21, 0
	081 JumpIfEqual {106}
	082 Move X0, X31
	083 Move [X21+24], X20
	084 Call SynchronizationContext.get_Current
	085 Move [X21+16], X0
	086 Move X8, 0x223C000
	087 Move X8, [X8+3696]
	088 Move X0, [X8]
	089 Call 0x1C17F10
	090 Move X8, 0x2247000
	091 Move X8, [X8+1160]
	092 Move X1, X21
	093 Move X3, X31
	094 Move X20, X0
	095 Move X2, [X8]
	096 Call Action..ctor, X0, X1, X2
	097 Move X0, X19
	098 Move X1, X20
	099 Move X20, [X31+32]
	100 Move X19, [X31+40]
	101 Move X22, [X31+16]
	102 Move X21, [X31+24]
	103 Move X30, [X31+48]
	104 Call AsyncOpData.add_Completed, X0, X1
	105 Return 
	106 Call 0x1C17F20
	107 Move X0, 0x223B000
	108 Move X0, [X0+2880]
	109 Call 0x1C17D08
	110 Call 0x1C17F10
	111 Move X1, X31
	112 Move X19, X0
	113 Call NotSupportedException..ctor, X0
	114 Move X0, 0x2247000
	115 Move X0, [X0+1176]
	116 Call 0x1C17D08
	117 Move X1, X0
	118 Move X0, X19
	119 Call 0x1C17DEC

