Type: Fusion.NetworkBehaviourId

Method: System.Boolean get_IsValid()

Disassembly:
	0x01E75DE4 STP X20, X19, [X31 + 0x60]
	0x01E75DE8 ADRP X24, 0x2564000
	0x01E75DEC STR X2, [X31 + 0x20]
	0x01E75DF0 ADRP X23, 0x2288000
	0x01E75DF4 LDRB W8, [X24 + 0x16B]
	0x01E75DF8 LDR X23, [X23 + 0x630]
	0x01E75DFC MOV X19, X5
	0x01E75E00 MOV X20, X4
	0x01E75E04 MOV X22, X1
	0x01E75E08 MOV X21, X0
	0x01E75E0C TBNZ X8, 0x0, 0x1E75E24
	0x01E75E10 ADRP X0, 0x2288000
	0x01E75E14 LDR X0, [X0 + 0x630]
	0x01E75E18 BL 0x1C16CF4
	0x01E75E1C MOVZ W8, 0x1
	0x01E75E20 STRB W8, [X24 + 0x16B]
	0x01E75E24 LDR X0, [X23]
	0x01E75E28 ADD X1, X31, 0x20
	0x01E75E2C STP X31, X31, [X31 + 0x10]
	0x01E75E30 STR X22, [X31 + 0x8]
	0x01E75E34 BL 0x1C16E04
	0x01E75E38 STR X0, [X31 + 0x10]
	0x01E75E3C ADD X1, X31, 0x8
	0x01E75E40 MOV X0, X21
	0x01E75E44 MOV X2, X20
	0x01E75E48 MOV X3, X19
	0x01E75E4C BL 0x1C16CB0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2565000
	006 Move X21, 0x2282000
	007 Move W8, [X20+381]
	008 Move X21, [X21+920]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2282000
	015 Move X0, [X0+920]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+381], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move W8, [X19]
	025 Compare W8, 0
	026 JumpIfEqual {32}
	027 Move W8, [X19+4]
	028 NotImplemented "Instruction ORN not yet implemented."
	029 Move W0, W8
	030 ShiftRight W0, 31
	031 And W0, W0, 0x7FFFFFFF
	032 Move W0, W31
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0

Method: Fusion.NetworkBehaviourId get_None()

Disassembly:
	0x01E779D8 BL 0x1C16CF4
	0x01E779DC ADRP X0, 0x2286000

ISIL:
	001 Move X0, X31
	002 Return X0

Method: System.Boolean Equals(Fusion.NetworkBehaviourId other)

Disassembly:
	0x01E779E0 LDR X0, [X0 + 0x7D8]
	0x01E779E4 BL 0x1C16CF4
	0x01E779E8 ADRP X0, 0x2286000
	0x01E779EC LDR X0, [X0 + 0x7E0]
	0x01E779F0 BL 0x1C16CF4
	0x01E779F4 MOVZ W8, 0x1
	0x01E779F8 STRB W8, [X21 + 0x18B]
	0x01E779FC TBNZ X20, 0x1F, 0x1E77AB4
	0x01E77A00 ADRP X21, 0x227F000
	0x01E77A04 LDR X21, [X21 + 0xA78]
	0x01E77A08 LDR X0, [X21]
	0x01E77A0C LDR W8, [X0 + 0xE0]
	0x01E77A10 CBNZ W8, 0x1E77A1C
	0x01E77A14 BL 0x1C16DFC
	0x01E77A18 LDR X0, [X21]
	0x01E77A1C LDR X8, [X0 + 0xB8]
	0x01E77A20 LDR X8, [X8 + 0x10]
	0x01E77A24 CBZ X8, 0x1E77AF4
	0x01E77A28 LDR W9, [X8 + 0x20]
	0x01E77A2C CMP W9, W20
	0x01E77A30 B.LE 0x1E77AB4
	0x01E77A34 LDR W9, [X0 + 0xE0]
	0x01E77A38 CBNZ W9, 0x1E77A50
	0x01E77A3C BL 0x1C16DFC
	0x01E77A40 LDR X8, [X21]
	0x01E77A44 LDR X8, [X8 + 0xB8]
	0x01E77A48 LDR X8, [X8 + 0x10]
	0x01E77A4C CBZ X8, 0x1E77AF4
	0x01E77A50 ADRP X9, 0x2286000
	0x01E77A54 LDR X9, [X9 + 0x7E0]
	0x01E77A58 MOV X0, X8
	0x01E77A5C LDR X1, [X9]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2563000
	007 Move X22, 0x2280000
	008 Move W8, [X21+382]
	009 Move X22, [X22+920]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2280000
	017 Move X0, [X0+920]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+382], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W8, [X20]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W8, [X20+4]
	029 Move X9, X19
	030 ShiftRight X9, 32
	031 And X9, X9, 0x7FFFFFFF
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSET not yet implemented."
	034 Move W0, W31
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x01E77A60 BL 0x25F1444
	0x01E77A64 CBZ X0, 0x1E77AF4
	0x01E77A68 ADRP X10, 0x2286000
	0x01E77A6C LDR X8, [X0]
	0x01E77A70 LDR X10, [X10 + 0x7D0]
	0x01E77A74 MOV X21, X0
	0x01E77A78 LDRH W9, [X8 + 0x12E]
	0x01E77A7C LDR X1, [X10]
	0x01E77A80 CBZ X9, 0x1E77AA4
	0x01E77A84 LDR X10, [X8 + 0xB0]
	0x01E77A88 ADD X10, X10, 0x8
	0x01E77A8C LDUR X11, [X10 - 0x8]
	0x01E77A90 CMP X11, X1
	0x01E77A94 B.EQ 0x1E77AC0
	0x01E77A98 SUBS X9, X9, 0x1
	0x01E77A9C ADD X10, X10, 0x10
	0x01E77AA0 B.NE 0x1E77A8C
	0x01E77AA4 MOV X0, X21
	0x01E77AA8 MOV W2, W31
	0x01E77AAC BL 0x1C5C788
	0x01E77AB0 B 0x1E77ACC
	0x01E77AB4 MOV X0, X31
	0x01E77AB8 MOV W8, W31
	0x01E77ABC B 0x1E77AE0
	0x01E77AC0 LDRSW X9, [X10]
	0x01E77AC4 ADD X8, X8, X9, 0x4, LSL
	0x01E77AC8 ADD X0, X8, 0x138
	0x01E77ACC LDP X8, X2, [X0]
	0x01E77AD0 MOV X0, X21
	0x01E77AD4 MOV W1, W20
	0x01E77AD8 BLR X8
	0x01E77ADC MOVZ W8, 0x1
	0x01E77AE0 STR X0, [X19]
	0x01E77AE4 LDP X20, X19, [X31 + 0x10]
	0x01E77AE8 MOV W0, W8
	0x01E77AEC LDP X30, X21, [X31], #0x20
	0x01E77AF0 RET
	0x01E77AF4 BL 0x1C16F20
	0x01E77AF8 RET
	0x01E77AFC RET
	0x01E77B00 RET
	0x01E77B04 RET
	0x01E77B08 STR X30, [X31 - 0x20]!
	0x01E77B0C STP X20, X19, [X31 + 0x10]
	0x01E77B10 CBZ X0, 0x1E77B9C
	0x01E77B14 LDR X8, [X0 + 0x40]
	0x01E77B18 CBZ X8, 0x1E77B7C
	0x01E77B1C LDRB W8, [X8 + 0x60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2563000
	006 Move W8, [X21+383]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2287000
	014 Move X0, [X0+1728]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+383], W8
	018 Compare X20, 0
	019 JumpIfEqual {52}
	020 Move X8, 0x2287000
	021 Move X8, [X8+1728]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X20
	026 Call 0x1C17E08
	027 Move X21, 0x2562000
	028 Move W8, [X21+2592]
	029 Move X20, [X0]
	030 Compare W8, 0
	031 JumpIfNotEqual {37}
	032 Move X0, 0x2280000
	033 Move X0, [X0+920]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+2592], W8
	037 Move X8, 0x2280000
	038 Move X8, [X8+920]
	039 Move X0, [X8]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move W8, [X19]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W8, [X19+4]
	047 Move X9, X20
	048 ShiftRight X9, 32
	049 And X9, X9, 0x7FFFFFFF
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CSET not yet implemented."
	052 Move W0, W31
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x01E77B20 TBNZ X8, 0x1, 0x1E77B7C
	0x01E77B24 ADRP X20, 0x2562000
	0x01E77B28 LDRB W8, [X20 + 0x19F]
	0x01E77B2C LDR X19, [X0 + 0x38]
	0x01E77B30 CBNZ W8, 0x1E77B48
	0x01E77B34 ADRP X0, 0x227C000
	0x01E77B38 LDR X0, [X0 + 0x598]
	0x01E77B3C BL 0x1C16CF4
	0x01E77B40 MOVZ W8, 0x1
	0x01E77B44 STRB W8, [X20 + 0x19F]
	0x01E77B48 ADRP X8, 0x227C000
	0x01E77B4C LDR X8, [X8 + 0x598]
	0x01E77B50 LDR X0, [X8]
	0x01E77B54 LDR W8, [X0 + 0xE0]
	0x01E77B58 CBNZ W8, 0x1E77B60
	0x01E77B5C BL 0x1C16DFC
	0x01E77B60 MOV X0, X19
	0x01E77B64 MOV X1, X31
	0x01E77B68 BL 0x3C38948
	0x01E77B6C TBZ X0, 0x0, 0x1E77BA0
	0x01E77B70 LDP X20, X19, [X31 + 0x10]
	0x01E77B74 LDR X30, [X31], #0x20
	0x01E77B78 RET
	0x01E77B7C ADRP X0, 0x227C000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2563000
	006 Move X21, 0x2280000
	007 Move W8, [X20+384]
	008 Move X21, [X21+920]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2280000
	015 Move X0, [X0+920]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+384], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move W8, [X19]
	025 Move W9, [X19+4]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move W10, 397
	029 Multiply W8, W8, W10
	030 Xor W0, W8, W9
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0

Method: System.String ToString()

Disassembly:
	0x01E77B80 LDR X0, [X0 + 0x5B0]
	0x01E77B84 BL 0x1C16D08
	0x01E77B88 BL 0x1C16F10
	0x01E77B8C MOV X19, X0
	0x01E77B90 ADRP X0, 0x2286000
	0x01E77B94 LDR X0, [X0 + 0x7E8]
	0x01E77B98 B 0x1E77BBC
	0x01E77B9C BL 0x1C16F20
	0x01E77BA0 ADRP X0, 0x227C000
	0x01E77BA4 LDR X0, [X0 + 0x5B0]
	0x01E77BA8 BL 0x1C16D08
	0x01E77BAC BL 0x1C16F10
	0x01E77BB0 MOV X19, X0
	0x01E77BB4 ADRP X0, 0x2286000
	0x01E77BB8 LDR X0, [X0 + 0x7F0]
	0x01E77BBC BL 0x1C16D08
	0x01E77BC0 MOV X1, X0
	0x01E77BC4 MOV X0, X19
	0x01E77BC8 MOV X2, X31
	0x01E77BCC BL 0x337DF1C
	0x01E77BD0 ADRP X0, 0x2286000
	0x01E77BD4 LDR X0, [X0 + 0x7F8]
	0x01E77BD8 BL 0x1C16D08
	0x01E77BDC MOV X1, X0
	0x01E77BE0 MOV X0, X19
	0x01E77BE4 BL 0x1C16DEC
	0x01E77BE8 STR X30, [X31 - 0x10]!
	0x01E77BEC CBZ X0, 0x1E77C04
	0x01E77BF0 LDR W8, [X0 + 0x30]
	0x01E77BF4 ORR W8, W8, 0x8
	0x01E77BF8 STR W8, [X0 + 0x30]
	0x01E77BFC LDR X30, [X31], #0x10
	0x01E77C00 RET
	0x01E77C04 BL 0x1C16F20
	0x01E77C08 STR X30, [X31 - 0x10]!
	0x01E77C0C CBZ X0, 0x1E77C24
	0x01E77C10 LDR W8, [X0 + 0x30]
	0x01E77C14 AND W8, W8, 0xFFFFFFEF
	0x01E77C18 STR W8, [X0 + 0x30]
	0x01E77C1C LDR X30, [X31], #0x10
	0x01E77C20 RET
	0x01E77C24 BL 0x1C16F20
	0x01E77C28 STR X30, [X31 - 0x10]!
	0x01E77C2C CBZ X0, 0x1E77C44
	0x01E77C30 LDR W8, [X0 + 0x30]
	0x01E77C34 ORR W8, W8, 0x10
	0x01E77C38 STR W8, [X0 + 0x30]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x2563000
	009 Move X20, 0x2280000
	010 Move X22, 0x227D000
	011 Move X21, 0x2287000
	012 Move W8, [X23+385]
	013 Move X20, [X20+920]
	014 Move X22, [X22+1880]
	015 Move X21, [X21+1736]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0x227D000
	022 Move X0, [X0+1880]
	023 Call 0x1C17CF4
	024 Move X0, 0x2280000
	025 Move X0, [X0+920]
	026 Call 0x1C17CF4
	027 Move X0, 0x2287000
	028 Move X0, [X0+1736]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X23+385], W8
	032 Move W8, [X19]
	033 Move X0, [X20]
	034 Add X1, X31, 8
	035 Move [X31+8], W8
	036 Call 0x1C17E04
	037 Move X20, X0
	038 Move W8, [X19+4]
	039 Move X0, [X22]
	040 Add X1, X31, 4
	041 Move [X31+4], W8
	042 Call 0x1C17E04
	043 Move X8, [X21]
	044 Move X2, X0
	045 Move X1, X20
	046 Move X3, X31
	047 Move X0, X8
	048 Call String.Format, X0, X1, X2
	049 Move X20, [X31+48]
	050 Move X19, [X31+56]
	051 Move X22, [X31+32]
	052 Move X21, [X31+40]
	053 Move X30, [X31+16]
	054 Move X23, [X31+24]
	055 Add X31, X31, 64
	056 Return X0

Method: System.Boolean op_Equality(Fusion.NetworkBehaviourId a, Fusion.NetworkBehaviourId b)

Disassembly:
	0x01E77C3C LDR X30, [X31], #0x10
	0x01E77C40 RET
	0x01E77C44 BL 0x1C16F20
	0x01E77C48 STR X30, [X31 - 0x60]!
	0x01E77C4C STP X28, X27, [X31 + 0x10]
	0x01E77C50 STP X26, X25, [X31 + 0x20]
	0x01E77C54 STP X24, X23, [X31 + 0x30]
	0x01E77C58 STP X22, X21, [X31 + 0x40]
	0x01E77C5C STP X20, X19, [X31 + 0x50]
	0x01E77C60 ADRP X27, 0x2562000
	0x01E77C64 ADRP X28, 0x2286000
	0x01E77C68 ADRP X19, 0x2286000
	0x01E77C6C ADRP X20, 0x227F000
	0x01E77C70 ADRP X26, 0x2286000
	0x01E77C74 ADRP X25, 0x2286000
	0x01E77C78 ADRP X24, 0x2286000
	0x01E77C7C ADRP X23, 0x2286000
	0x01E77C80 ADRP X22, 0x2286000
	0x01E77C84 ADRP X21, 0x2286000
	0x01E77C88 LDR X28, [X28 + 0x800]
	0x01E77C8C LDR X19, [X19 + 0x808]
	0x01E77C90 LDR X20, [X20 + 0xA78]
	0x01E77C94 LDR X26, [X26 + 0x810]
	0x01E77C98 LDRB W8, [X27 + 0x18C]
	0x01E77C9C LDR X25, [X25 + 0x818]
	0x01E77CA0 LDR X24, [X24 + 0x820]
	0x01E77CA4 LDR X23, [X23 + 0x828]
	0x01E77CA8 LDR X22, [X22 + 0x830]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2562000
	006 Move W8, [X21+2592]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x2280000
	012 Move X0, [X0+920]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X21+2592], W8
	016 Move X8, 0x2280000
	017 Move X8, [X8+920]
	018 Move X0, [X8]
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move X8, X19
	024 ShiftRight X8, 32
	025 And X8, X8, 0x7FFFFFFF
	026 Move X9, X20
	027 ShiftRight X9, 32
	028 And X9, X9, 0x7FFFFFFF
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 NotImplemented "Instruction CSET not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSET not yet implemented."
	035 And W0, W10, W8
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0

Method: System.Boolean op_Inequality(Fusion.NetworkBehaviourId a, Fusion.NetworkBehaviourId b)

Disassembly:
	0x01E77CAC LDR X21, [X21 + 0x838]
	0x01E77CB0 TBNZ X8, 0x0, 0x1E77D28
	0x01E77CB4 ADRP X0, 0x2286000
	0x01E77CB8 LDR X0, [X0 + 0x808]
	0x01E77CBC BL 0x1C16CF4
	0x01E77CC0 ADRP X0, 0x2286000
	0x01E77CC4 LDR X0, [X0 + 0x838]
	0x01E77CC8 BL 0x1C16CF4
	0x01E77CCC ADRP X0, 0x2286000
	0x01E77CD0 LDR X0, [X0 + 0x818]
	0x01E77CD4 BL 0x1C16CF4
	0x01E77CD8 ADRP X0, 0x2286000
	0x01E77CDC LDR X0, [X0 + 0x800]
	0x01E77CE0 BL 0x1C16CF4
	0x01E77CE4 ADRP X0, 0x2286000
	0x01E77CE8 LDR X0, [X0 + 0x810]
	0x01E77CEC BL 0x1C16CF4
	0x01E77CF0 ADRP X0, 0x2286000
	0x01E77CF4 LDR X0, [X0 + 0x830]
	0x01E77CF8 BL 0x1C16CF4
	0x01E77CFC ADRP X0, 0x227F000
	0x01E77D00 LDR X0, [X0 + 0xA78]
	0x01E77D04 BL 0x1C16CF4
	0x01E77D08 ADRP X0, 0x2286000
	0x01E77D0C LDR X0, [X0 + 0x828]
	0x01E77D10 BL 0x1C16CF4
	0x01E77D14 ADRP X0, 0x2286000
	0x01E77D18 LDR X0, [X0 + 0x820]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2562000
	006 Move W8, [X21+2592]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x2280000
	012 Move X0, [X0+920]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X21+2592], W8
	016 Move X8, 0x2280000
	017 Move X8, [X8+920]
	018 Move X0, [X8]
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move X8, X19
	024 ShiftRight X8, 32
	025 And X8, X8, 0x7FFFFFFF
	026 Move X9, X20
	027 ShiftRight X9, 32
	028 And X9, X9, 0x7FFFFFFF
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 NotImplemented "Instruction CSET not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSET not yet implemented."
	035 Or W0, W10, W8
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0

