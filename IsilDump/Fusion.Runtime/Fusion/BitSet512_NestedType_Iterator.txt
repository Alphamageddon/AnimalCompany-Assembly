Type: Fusion.BitSet512/Iterator

Method: System.Void .ctor(Fusion.BitSet512 set)

Disassembly:
	0x01E8A8A0 LDR V8, [X31], #0x20
	0x01E8A8A4 RET
	0x01E8A8A8 STP D9, D8, [X31 - 0x30]!
	0x01E8A8AC STP X30, X21, [X31 + 0x10]
	0x01E8A8B0 STP X20, X19, [X31 + 0x20]
	0x01E8A8B4 ADRP X19, 0x254E000
	0x01E8A8B8 LDRB W8, [X19 + 0xE8F]
	0x01E8A8BC MOV V8.16B, V1.16B
	0x01E8A8C0 MOV V9.16B, V0.16B

ISIL:
	001 Move V0, [X1+32]
	002 Move V1, [X1+48]
	003 Move V2, [X1]
	004 Move V3, [X1+16]
	005 Move TEMP, 0
	006 Not TEMP
	007 Move W8, TEMP
	008 Move [X0], W8
	009 Move [X0+56], V1
	010 Move [X0+40], V0
	011 Move [X0+24], V3
	012 Move [X0+8], V2
	013 Return 

Method: System.Boolean Next(out System.Int32 index)

Disassembly:
	0x01E8B274 LDP X20, X19, [X31 + 0x20]
	0x01E8B278 LDP X30, X21, [X31 + 0x10]
	0x01E8B27C SBFM W9, W8, 0x1F, 0x1F
	0x01E8B280 EOR W8, W9, W8, 0x1
	0x01E8B284 BFM X0, X8, 0x20, 0x1F
	0x01E8B288 MOV X1, X31
	0x01E8B28C LDP D9, D8, [X31], #0x30
	0x01E8B290 RET
	0x01E8B294 STR X30, [X31 - 0x30]!
	0x01E8B298 STP X22, X21, [X31 + 0x10]
	0x01E8B29C STP X20, X19, [X31 + 0x20]
	0x01E8B2A0 ADRP X21, 0x254D000
	0x01E8B2A4 LDRB W8, [X21 + 0xE90]
	0x01E8B2A8 MOV X19, X0
	0x01E8B2AC CBNZ W8, 0x1E8B2C4
	0x01E8B2B0 ADRP X0, 0x226F000
	0x01E8B2B4 LDR X0, [X0 + 0xC68]
	0x01E8B2B8 BL 0x1C16CF4
	0x01E8B2BC MOVZ W8, 0x1
	0x01E8B2C0 STRB W8, [X21 + 0xE90]
	0x01E8B2C4 ADRP X22, 0x226F000
	0x01E8B2C8 LDR X22, [X22 + 0xC68]
	0x01E8B2CC UBFM X20, X19, 0x20, 0x3F
	0x01E8B2D0 LDR X0, [X22]
	0x01E8B2D4 LDR W8, [X0 + 0xE0]
	0x01E8B2D8 CBNZ W8, 0x1E8B2FC
	0x01E8B2DC BL 0x1C16DFC
	0x01E8B2E0 LDRB W8, [X21 + 0xE90]
	0x01E8B2E4 CBNZ W8, 0x1E8B2FC
	0x01E8B2E8 ADRP X0, 0x226F000
	0x01E8B2EC LDR X0, [X0 + 0xC68]
	0x01E8B2F0 BL 0x1C16CF4
	0x01E8B2F4 MOVZ W8, 0x1
	0x01E8B2F8 STRB W8, [X21 + 0xE90]
	0x01E8B2FC LDR X0, [X22]
	0x01E8B300 LDR W8, [X0 + 0xE0]
	0x01E8B304 CBNZ W8, 0x1E8B30C
	0x01E8B308 BL 0x1C16DFC
	0x01E8B30C AND W8, W19, 0x1
	0x01E8B310 MOVZ W9, 0x3A800000
	0x01E8B314 AND W10, W20, 0x1
	0x01E8B318 SUB W8, W31, W8
	0x01E8B31C FMOV S1, W9
	0x01E8B320 SUB W9, W31, W10
	0x01E8B324 EOR W8, W8, W19, 0x1
	0x01E8B328 EOR W9, W9, W20, 0x1
	0x01E8B32C LDP X20, X19, [X31 + 0x20]
	0x01E8B330 LDP X22, X21, [X31 + 0x10]
	0x01E8B334 SCVTF S0, W8
	0x01E8B338 SCVTF S2, W9
	0x01E8B33C FMUL S0, S0, S1
	0x01E8B340 FMUL S1, S2, S1
	0x01E8B344 LDR X30, [X31], #0x30
	0x01E8B348 RET
	0x01E8B34C LDR W8, [X0]
	0x01E8B350 CMP W8, W1
	0x01E8B354 B.NE 0x1E8B378
	0x01E8B358 LDR W8, [X0 + 0x4]
	0x01E8B35C UBFM X9, X1, 0x20, 0x3F
	0x01E8B360 CMP W8, W9
	0x01E8B364 B.NE 0x1E8B378
	0x01E8B368 LDR W8, [X0 + 0x8]
	0x01E8B36C CMP W8, W2

ISIL:
	001 Subtract X31, X31, 16
	002 Move [X31+8], X31
	003 Move W8, [X0]
	004 Add W8, W8, 1
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move [X0], W8
	007 Add X9, X0, 8
	008 Move W10, 1
	009 Add X11, X31, 8
	010 Add W12, W8, 63
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CSEL not yet implemented."
	013 NotImplemented "Instruction SBFM not yet implemented."
	014 Move X14, [X9]
	015 And W12, W12, 0xFFFFFFC0
	016 Subtract W15, W8, W12
	017 NotImplemented "Instruction LSLV not yet implemented."
	018 And X12, X14, X12
	019 Move [X31+8], X14
	020 Compare X14, 0
	021 JumpIfEqual {50}
	022 NotImplemented "Instruction SXTB not yet implemented."
	023 Move W17, W16
	024 ShiftRight W17, 10
	025 And W17, W17, 0x3FFF
	026 Add W17, W15, W17
	027 NotImplemented "Instruction SBFM not yet implemented."
	028 Move W17, [X11]
	029 Compare W17, 0
	030 JumpIfEqual {51}
	031 Move W16, W16
	032 ShiftRight W16, 11
	033 And W16, W16, 0x3FFF
	034 Add W15, W15, W16
	035 NotImplemented "Instruction SBFM not yet implemented."
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Compare W15, 0
	038 JumpIfEqual {52}
	039 Move W15, W8
	040 Add W8, W8, 1
	041 Add W16, W15, 64
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CSINC not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction LSRV not yet implemented."
	046 Move TEMP, X15
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {39}
	050 Add W8, W8, 64
	051 Add W8, W8, 32
	052 Add W8, W8, 16
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move [X0], W8
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W8, TEMP
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CSET not yet implemented."
	060 Move W0, W31
	061 Move TEMP, 0
	062 Not TEMP
	063 Move W8, TEMP
	064 Move [X0], W8
	065 Move W0, 1
	066 Move [X1], W8
	067 Add X31, X31, 16
	068 Return X0

