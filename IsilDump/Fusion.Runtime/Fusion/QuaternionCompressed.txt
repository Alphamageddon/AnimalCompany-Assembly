Type: Fusion.QuaternionCompressed

Method: System.Single get_X()

Disassembly:
	0x01E8CDD8 CBNZ W8, 0x1E8CDE0
	0x01E8CDDC BL 0x1C16DFC
	0x01E8CDE0 MOV X0, X19
	0x01E8CDE4 LDP X20, X19, [X31 + 0x10]
	0x01E8CDE8 MOV X1, X31
	0x01E8CDEC LDP X30, X21, [X31], #0x20
	0x01E8CDF0 B 0x3C02C84
	0x01E8CDF4 MOV X1, X31
	0x01E8CDF8 B 0x33BDD8C
	0x01E8CDFC B 0x1E8CB98
	0x01E8CE00 B 0x1E8CD9C
	0x01E8CE04 AND W8, W1, 0x1
	0x01E8CE08 STR W8, [X0]
	0x01E8CE0C RET
	0x01E8CE10 LDR W8, [X0]
	0x01E8CE14 CMP W8, W1
	0x01E8CE18 CSET W0, EQ
	0x01E8CE1C RET
	0x01E8CE20 STR X30, [X31 - 0x30]!
	0x01E8CE24 STP X22, X21, [X31 + 0x10]
	0x01E8CE28 STP X20, X19, [X31 + 0x20]
	0x01E8CE2C ADRP X22, 0x254D000
	0x01E8CE30 ADRP X20, 0x2271000
	0x01E8CE34 ADRP X21, 0x2272000
	0x01E8CE38 LDRB W8, [X22 + 0x242]
	0x01E8CE3C LDR X20, [X20 + 0xFF8]
	0x01E8CE40 LDR X21, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x254D000
	005 Move W8, [X20+3728]
	006 Move W19, [X0]
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0x226F000
	010 Move X0, [X0+3176]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X20+3728], W8
	014 Move X8, 0x226F000
	015 Move X8, [X8+3176]
	016 Move X0, [X8]
	017 Move W8, [X0+224]
	018 Compare W8, 0
	019 JumpIfNotEqual {21}
	020 Call 0x1C17DFC
	021 And W8, W19, 1
	022 Subtract W8, W31, W8
	023 Xor W8, W8, W19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W9, 0x3A800000
	027 NotImplemented "Instruction SCVTF not yet implemented."
	028 Move S1, W9
	029 Multiply S0, S0, S1
	030 Move X30, [X31+32]
	031 Return V0

Method: System.Void set_X(System.Single value)

Disassembly:
	0x01E8CE44 MOV X19, X0
	0x01E8CE48 TBNZ X8, 0x0, 0x1E8CE6C
	0x01E8CE4C ADRP X0, 0x2271000
	0x01E8CE50 LDR X0, [X0 + 0xFF8]
	0x01E8CE54 BL 0x1C16CF4
	0x01E8CE58 ADRP X0, 0x2272000
	0x01E8CE5C LDR X0, [X0]
	0x01E8CE60 BL 0x1C16CF4
	0x01E8CE64 MOVZ W8, 0x1
	0x01E8CE68 STRB W8, [X22 + 0x242]
	0x01E8CE6C LDR W8, [X19]
	0x01E8CE70 CMP W8, 0x0
	0x01E8CE74 CSEL X8, X20, X21, EQ
	0x01E8CE78 LDR X0, [X8]
	0x01E8CE7C LDP X20, X19, [X31 + 0x20]
	0x01E8CE80 LDP X22, X21, [X31 + 0x10]
	0x01E8CE84 LDR X30, [X31], #0x30
	0x01E8CE88 RET
	0x01E8CE8C STP X30, X21, [X31 - 0x20]!
	0x01E8CE90 STP X20, X19, [X31 + 0x10]
	0x01E8CE94 ADRP X21, 0x254D000
	0x01E8CE98 LDRB W8, [X21 + 0x243]
	0x01E8CE9C MOV X20, X1
	0x01E8CEA0 MOV X19, X0
	0x01E8CEA4 TBNZ X8, 0x0, 0x1E8CEBC
	0x01E8CEA8 ADRP X0, 0x2272000
	0x01E8CEAC LDR X0, [X0 + 0x8]
	0x01E8CEB0 BL 0x1C16CF4
	0x01E8CEB4 MOVZ W8, 0x1
	0x01E8CEB8 STRB W8, [X21 + 0x243]
	0x01E8CEBC CBZ X20, 0x1E8CED8
	0x01E8CEC0 ADRP X8, 0x2272000
	0x01E8CEC4 LDR X8, [X8 + 0x8]
	0x01E8CEC8 LDR X9, [X20]
	0x01E8CECC LDR X8, [X8]
	0x01E8CED0 CMP X9, X8
	0x01E8CED4 B.EQ 0x1E8CEE0
	0x01E8CED8 MOV W0, W31
	0x01E8CEDC B 0x1E8CEF8
	0x01E8CEE0 MOV X0, X20
	0x01E8CEE4 BL 0x1C16E08

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x254D000
	006 Move W8, [X20+3727]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x226F000
	012 Move X0, [X0+3176]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3727], W8
	016 Move X8, 0x226F000
	017 Move X8, [X8+3176]
	018 Move X0, [X8]
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move W8, S8
	024 Move W9, 0x44800000
	025 Move W8, W8
	026 ShiftRight W8, 31
	027 And W8, W8, 0x7FFFFFFF
	028 Move S0, 0.5
	029 Move S1, W9
	030 NotImplemented "Instruction UCVTF not yet implemented."
	031 Move W9, 0x7F800000
	032 Multiply S1, S8, S1
	033 Subtract S0, S0, S2
	034 Move S2, W9
	035 Add S0, S1, S0
	036 NotImplemented "Instruction FCVTZS not yet implemented."
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 Move W9, 0x80000000
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 NotImplemented "Instruction SBFM not yet implemented."
	041 Xor W8, W9, W8
	042 Move [X19], W8
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+8]
	046 Move V8, [X31+32]
	047 Return 

Method: System.Single get_Y()

Disassembly:
	0x01E8CEE8 LDR W8, [X0]
	0x01E8CEEC LDR W9, [X19]
	0x01E8CEF0 CMP W9, W8
	0x01E8CEF4 CSET W0, EQ
	0x01E8CEF8 LDP X20, X19, [X31 + 0x10]
	0x01E8CEFC LDP X30, X21, [X31], #0x20
	0x01E8CF00 RET
	0x01E8CF04 LDR W0, [X0]
	0x01E8CF08 RET
	0x01E8CF0C CMP W0, 0x1
	0x01E8CF10 CSET W0, EQ
	0x01E8CF14 RET
	0x01E8CF18 AND X0, X0, 0x1
	0x01E8CF1C RET
	0x01E8CF20 LDR W0, [X0]
	0x01E8CF24 RET
	0x01E8CF28 STR W1, [X0]
	0x01E8CF2C RET
	0x01E8CF30 LDR W8, [X0]
	0x01E8CF34 LSRV W8, W8, W1
	0x01E8CF38 AND W0, W8, 0x1
	0x01E8CF3C RET
	0x01E8CF40 LDR W8, [X0]
	0x01E8CF44 MOVZ W9, 0x1
	0x01E8CF48 LSLV W9, W9, W1
	0x01E8CF4C ORR W8, W8, W9, 0x0
	0x01E8CF50 STR W8, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x254D000
	005 Move W8, [X20+3728]
	006 Move W19, [X0+4]
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0x226F000
	010 Move X0, [X0+3176]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X20+3728], W8
	014 Move X8, 0x226F000
	015 Move X8, [X8+3176]
	016 Move X0, [X8]
	017 Move W8, [X0+224]
	018 Compare W8, 0
	019 JumpIfNotEqual {21}
	020 Call 0x1C17DFC
	021 And W8, W19, 1
	022 Subtract W8, W31, W8
	023 Xor W8, W8, W19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W9, 0x3A800000
	027 NotImplemented "Instruction SCVTF not yet implemented."
	028 Move S1, W9
	029 Multiply S0, S0, S1
	030 Move X30, [X31+32]
	031 Return V0

Method: System.Void set_Y(System.Single value)

Disassembly:
	0x01E8CF54 RET
	0x01E8CF58 LDR W8, [X0]
	0x01E8CF5C MOVZ W9, 0x1
	0x01E8CF60 LSLV W9, W9, W1
	0x01E8CF64 BIC W8, W8, W9, 0x0
	0x01E8CF68 STR W8, [X0]
	0x01E8CF6C RET
	0x01E8CF70 LDR W8, [X0]
	0x01E8CF74 MOVZ W9, 0x1
	0x01E8CF78 LSLV W9, W9, W1
	0x01E8CF7C ANDS W31, W2, 0x1
	0x01E8CF80 BIC W10, W8, W9, 0x0
	0x01E8CF84 ORR W8, W8, W9, 0x0
	0x01E8CF88 CSEL W8, W8, W10, NE
	0x01E8CF8C STR W8, [X0]
	0x01E8CF90 RET
	0x01E8CF94 STR W31, [X0]
	0x01E8CF98 RET
	0x01E8CF9C MOVN W8, 0x0
	0x01E8CFA0 STR W8, [X0]
	0x01E8CFA4 RET
	0x01E8CFA8 STR X30, [X31 - 0x30]!
	0x01E8CFAC STP X22, X21, [X31 + 0x10]
	0x01E8CFB0 STP X20, X19, [X31 + 0x20]
	0x01E8CFB4 ADRP X22, 0x254D000
	0x01E8CFB8 ADRP X21, 0x2272000
	0x01E8CFBC LDRB W8, [X22 + 0x244]
	0x01E8CFC0 LDR X21, [X21 + 0x10]
	0x01E8CFC4 MOV X19, X1
	0x01E8CFC8 MOV X20, X0
	0x01E8CFCC TBNZ X8, 0x0, 0x1E8CFE4
	0x01E8CFD0 ADRP X0, 0x2272000
	0x01E8CFD4 LDR X0, [X0 + 0x10]
	0x01E8CFD8 BL 0x1C16CF4
	0x01E8CFDC MOVZ W8, 0x1
	0x01E8CFE0 STRB W8, [X22 + 0x244]
	0x01E8CFE4 LDR W8, [X20]
	0x01E8CFE8 LDR X3, [X21]
	0x01E8CFEC ADD X0, X31, 0x8
	0x01E8CFF0 STR X31, [X31 + 0x8]
	0x01E8CFF4 BIC W1, W8, W19, 0x0

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x254D000
	006 Move W8, [X20+3727]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x226F000
	012 Move X0, [X0+3176]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3727], W8
	016 Move X8, 0x226F000
	017 Move X8, [X8+3176]
	018 Move X0, [X8]
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move W8, S8
	024 Move W9, 0x44800000
	025 Move W8, W8
	026 ShiftRight W8, 31
	027 And W8, W8, 0x7FFFFFFF
	028 Move S0, 0.5
	029 Move S1, W9
	030 NotImplemented "Instruction UCVTF not yet implemented."
	031 Move W9, 0x7F800000
	032 Multiply S1, S8, S1
	033 Subtract S0, S0, S2
	034 Move S2, W9
	035 Add S0, S1, S0
	036 NotImplemented "Instruction FCVTZS not yet implemented."
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 Move W9, 0x80000000
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 NotImplemented "Instruction SBFM not yet implemented."
	041 Xor W8, W9, W8
	042 Move [X19+4], W8
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+8]
	046 Move V8, [X31+32]
	047 Return 

Method: System.Single get_Z()

Disassembly:
	0x01E8CFF8 BIC W2, W19, W8, 0x0
	0x01E8CFFC BL 0x27A6ACC
	0x01E8D000 LDR X0, [X31 + 0x8]
	0x01E8D004 LDP X20, X19, [X31 + 0x20]
	0x01E8D008 LDP X22, X21, [X31 + 0x10]
	0x01E8D00C LDR X30, [X31], #0x30
	0x01E8D010 RET
	0x01E8D014 LDR W8, [X0]
	0x01E8D018 BIC W0, W8, W1, 0x0
	0x01E8D01C RET
	0x01E8D020 LDR W8, [X0]
	0x01E8D024 BIC W0, W1, W8, 0x0
	0x01E8D028 RET
	0x01E8D02C LDR W8, [X0]
	0x01E8D030 MOVZ W9, 0x1
	0x01E8D034 LSLV W9, W9, W2
	0x01E8D038 BIC W9, W9, W1, 0x0
	0x01E8D03C ANDS W31, W9, W8, 0x0
	0x01E8D040 CSET W0, NE
	0x01E8D044 RET
	0x01E8D048 LDR W8, [X0]
	0x01E8D04C MOVZ W9, 0x1
	0x01E8D050 LSLV W9, W9, W2
	0x01E8D054 AND W9, W9, W1, 0x0
	0x01E8D058 BICS W31, W9, W8, 0x0
	0x01E8D05C CSET W0, NE
	0x01E8D060 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x254C000
	005 Move W8, [X20+3728]
	006 Move W19, [X0+8]
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0x226E000
	010 Move X0, [X0+3176]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X20+3728], W8
	014 Move X8, 0x226E000
	015 Move X8, [X8+3176]
	016 Move X0, [X8]
	017 Move W8, [X0+224]
	018 Compare W8, 0
	019 JumpIfNotEqual {21}
	020 Call 0x1C17DFC
	021 And W8, W19, 1
	022 Subtract W8, W31, W8
	023 Xor W8, W8, W19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W9, 0x3A800000
	027 NotImplemented "Instruction SCVTF not yet implemented."
	028 Move S1, W9
	029 Multiply S0, S0, S1
	030 Move X30, [X31+32]
	031 Return V0

Method: System.Void set_Z(System.Single value)

Disassembly:
	0x01E8D064 LDR W8, [X0]
	0x01E8D068 CMP W8, W1
	0x01E8D06C CSET W0, EQ
	0x01E8D070 RET
	0x01E8D074 STP X30, X21, [X31 - 0x20]!
	0x01E8D078 STP X20, X19, [X31 + 0x10]
	0x01E8D07C ADRP X21, 0x254C000
	0x01E8D080 LDRB W8, [X21 + 0x245]
	0x01E8D084 MOV X20, X1
	0x01E8D088 MOV X19, X0
	0x01E8D08C TBNZ X8, 0x0, 0x1E8D0A4
	0x01E8D090 ADRP X0, 0x2271000
	0x01E8D094 LDR X0, [X0 + 0x18]
	0x01E8D098 BL 0x1C16CF4
	0x01E8D09C MOVZ W8, 0x1
	0x01E8D0A0 STRB W8, [X21 + 0x245]
	0x01E8D0A4 CBZ X20, 0x1E8D0C0
	0x01E8D0A8 ADRP X8, 0x2271000
	0x01E8D0AC LDR X8, [X8 + 0x18]
	0x01E8D0B0 LDR X9, [X20]
	0x01E8D0B4 LDR X8, [X8]
	0x01E8D0B8 CMP X9, X8
	0x01E8D0BC B.EQ 0x1E8D0C8
	0x01E8D0C0 MOV W0, W31
	0x01E8D0C4 B 0x1E8D0E0
	0x01E8D0C8 MOV X0, X20
	0x01E8D0CC BL 0x1C16E08
	0x01E8D0D0 LDR W8, [X0]
	0x01E8D0D4 LDR W9, [X19]
	0x01E8D0D8 CMP W9, W8
	0x01E8D0DC CSET W0, EQ
	0x01E8D0E0 LDP X20, X19, [X31 + 0x10]
	0x01E8D0E4 LDP X30, X21, [X31], #0x20
	0x01E8D0E8 RET
	0x01E8D0EC LDR W0, [X0]
	0x01E8D0F0 RET
	0x01E8D0F4 LDP X8, X1, [X0]
	0x01E8D0F8 MOV X0, X8
	0x01E8D0FC RET
	0x01E8D100 LDP X8, X9, [X0]
	0x01E8D104 MOVZ X10, 0x7F2D

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x254C000
	006 Move W8, [X20+3727]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x226E000
	012 Move X0, [X0+3176]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3727], W8
	016 Move X8, 0x226E000
	017 Move X8, [X8+3176]
	018 Move X0, [X8]
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move W8, S8
	024 Move W9, 0x44800000
	025 Move W8, W8
	026 ShiftRight W8, 31
	027 And W8, W8, 0x7FFFFFFF
	028 Move S0, 0.5
	029 Move S1, W9
	030 NotImplemented "Instruction UCVTF not yet implemented."
	031 Move W9, 0x7F800000
	032 Multiply S1, S8, S1
	033 Subtract S0, S0, S2
	034 Move S2, W9
	035 Add S0, S1, S0
	036 NotImplemented "Instruction FCVTZS not yet implemented."
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 Move W9, 0x80000000
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 NotImplemented "Instruction SBFM not yet implemented."
	041 Xor W8, W9, W8
	042 Move [X19+8], W8
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+8]
	046 Move V8, [X31+32]
	047 Return 

Method: System.Single get_W()

Disassembly:
	0x01E8D108 MOVK X10, 0x4C950000
	0x01E8D10C MOVK X10, 0xF42D
	0x01E8D110 MOVK X10, 0x58510000
	0x01E8D114 ADRP X11, 0xFFFFFFFFFEC60000
	0x01E8D118 ORR X9, X9, 0x1
	0x01E8D11C LDR V0, [X11 + 0xF38]
	0x01E8D120 UBFM X11, X8, 0x2D, 0x3F
	0x01E8D124 MADD X9, X8, X10, X9
	0x01E8D128 UBFM X10, X8, 0x1B, 0x3F
	0x01E8D12C EOR W10, W11, W10, 0x0
	0x01E8D130 UBFM X8, X8, 0x3B, 0x3F
	0x01E8D134 RORV W8, W10, W8
	0x01E8D138 UCVTF D1, W8
	0x01E8D13C FMUL D0, D1, D0
	0x01E8D140 STR X9, [X0]
	0x01E8D144 RET
	0x01E8D148 LDP X9, X8, [X0]
	0x01E8D14C MOVZ X10, 0x7F2D
	0x01E8D150 MOVK X10, 0x4C950000
	0x01E8D154 MOVK X10, 0xF42D
	0x01E8D158 MOVK X10, 0x58510000
	0x01E8D15C ORR X8, X8, 0x1
	0x01E8D160 UBFM X11, X9, 0x2D, 0x3F
	0x01E8D164 UBFM X12, X9, 0x1B, 0x3F
	0x01E8D168 MADD X10, X9, X10, X8
	0x01E8D16C EOR W8, W11, W12, 0x0
	0x01E8D170 UBFM X9, X9, 0x3B, 0x3F

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x254C000
	005 Move W8, [X20+3728]
	006 Move W19, [X0+12]
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0x226E000
	010 Move X0, [X0+3176]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X20+3728], W8
	014 Move X8, 0x226E000
	015 Move X8, [X8+3176]
	016 Move X0, [X8]
	017 Move W8, [X0+224]
	018 Compare W8, 0
	019 JumpIfNotEqual {21}
	020 Call 0x1C17DFC
	021 And W8, W19, 1
	022 Subtract W8, W31, W8
	023 Xor W8, W8, W19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W9, 0x3A800000
	027 NotImplemented "Instruction SCVTF not yet implemented."
	028 Move S1, W9
	029 Multiply S0, S0, S1
	030 Move X30, [X31+32]
	031 Return V0

Method: System.Void set_W(System.Single value)

Disassembly:
	0x01E8D174 RORV W8, W8, W9
	0x01E8D178 STR X10, [X0]
	0x01E8D17C MOV W0, W8
	0x01E8D180 RET
	0x01E8D184 LDP X9, X8, [X0]
	0x01E8D188 MOVZ X10, 0x7F2D
	0x01E8D18C MOVK X10, 0x4C950000
	0x01E8D190 MOVK X10, 0xF42D
	0x01E8D194 MOVK X10, 0x58510000
	0x01E8D198 ORR X8, X8, 0x1
	0x01E8D19C UBFM X11, X9, 0x2D, 0x3F
	0x01E8D1A0 MADD X8, X9, X10, X8
	0x01E8D1A4 UBFM X10, X9, 0x1B, 0x3F
	0x01E8D1A8 EOR W10, W11, W10, 0x0
	0x01E8D1AC UBFM X9, X9, 0x3B, 0x3F
	0x01E8D1B0 RORV W9, W10, W9
	0x01E8D1B4 MOVZ X10, 0x3DF00000
	0x01E8D1B8 UCVTF D0, W9
	0x01E8D1BC FMOV D1, X10
	0x01E8D1C0 FMUL D0, D0, D1
	0x01E8D1C4 STR X8, [X0]
	0x01E8D1C8 RET
	0x01E8D1CC LDP X8, X9, [X0]
	0x01E8D1D0 MOVZ X10, 0x7F2D
	0x01E8D1D4 MOVK X10, 0x4C950000
	0x01E8D1D8 MOVK X10, 0xF42D
	0x01E8D1DC MOVK X10, 0x58510000
	0x01E8D1E0 ADRP X11, 0xFFFFFFFFFEC5C000
	0x01E8D1E4 ORR X9, X9, 0x1
	0x01E8D1E8 LDR V0, [X11 + 0xF60]
	0x01E8D1EC UBFM X11, X8, 0x2D, 0x3F
	0x01E8D1F0 MADD X9, X8, X10, X9
	0x01E8D1F4 UBFM X10, X8, 0x1B, 0x3F
	0x01E8D1F8 EOR W10, W11, W10, 0x0
	0x01E8D1FC UBFM X8, X8, 0x3B, 0x3F
	0x01E8D200 RORV W8, W10, W8
	0x01E8D204 UBFM W8, W8, 0x8, 0x1F
	0x01E8D208 UCVTF S1, W8
	0x01E8D20C FMUL S0, S1, S0
	0x01E8D210 STR X9, [X0]
	0x01E8D214 RET

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x254C000
	006 Move W8, [X20+3727]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x226E000
	012 Move X0, [X0+3176]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3727], W8
	016 Move X8, 0x226E000
	017 Move X8, [X8+3176]
	018 Move X0, [X8]
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move W8, S8
	024 Move W9, 0x44800000
	025 Move W8, W8
	026 ShiftRight W8, 31
	027 And W8, W8, 0x7FFFFFFF
	028 Move S0, 0.5
	029 Move S1, W9
	030 NotImplemented "Instruction UCVTF not yet implemented."
	031 Move W9, 0x7F800000
	032 Multiply S1, S8, S1
	033 Subtract S0, S0, S2
	034 Move S2, W9
	035 Add S0, S1, S0
	036 NotImplemented "Instruction FCVTZS not yet implemented."
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 Move W9, 0x80000000
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 NotImplemented "Instruction SBFM not yet implemented."
	041 Xor W8, W9, W8
	042 Move [X19+12], W8
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+8]
	046 Move V8, [X31+32]
	047 Return 

Method: Fusion.QuaternionCompressed op_Implicit(UnityEngine.Quaternion v)

Disassembly:
	0x01E8D218 LDP X9, X8, [X0]
	0x01E8D21C MOVZ X10, 0x7F2D
	0x01E8D220 MOVK X10, 0x4C950000
	0x01E8D224 MOVK X10, 0xF42D
	0x01E8D228 MOVK X10, 0x58510000
	0x01E8D22C ORR X8, X8, 0x1
	0x01E8D230 UBFM X11, X9, 0x2D, 0x3F
	0x01E8D234 MADD X8, X9, X10, X8
	0x01E8D238 UBFM X10, X9, 0x1B, 0x3F
	0x01E8D23C EOR W10, W11, W10, 0x0
	0x01E8D240 UBFM X9, X9, 0x3B, 0x3F
	0x01E8D244 RORV W9, W10, W9
	0x01E8D248 UBFM W9, W9, 0x8, 0x1F
	0x01E8D24C MOVZ W10, 0x33800000
	0x01E8D250 UCVTF S0, W9
	0x01E8D254 FMOV S1, W10
	0x01E8D258 FMUL S0, S0, S1
	0x01E8D25C STR X8, [X0]
	0x01E8D260 RET
	0x01E8D264 LDP X9, X8, [X0]
	0x01E8D268 MOVZ X10, 0x7F2D
	0x01E8D26C MOVK X10, 0x4C950000
	0x01E8D270 MOVK X10, 0xF42D
	0x01E8D274 MOVK X10, 0x58510000
	0x01E8D278 ORR X8, X8, 0x1
	0x01E8D27C UBFM X11, X9, 0x2D, 0x3F
	0x01E8D280 UBFM X12, X9, 0x1B, 0x3F
	0x01E8D284 MADD X10, X9, X10, X8
	0x01E8D288 EOR W8, W11, W12, 0x0
	0x01E8D28C UBFM X9, X9, 0x3B, 0x3F
	0x01E8D290 RORV W8, W8, W9
	0x01E8D294 STR X10, [X0]
	0x01E8D298 MOV W0, W8
	0x01E8D29C RET
	0x01E8D2A0 LDP X9, X8, [X0]
	0x01E8D2A4 MOVZ X10, 0x7F2D
	0x01E8D2A8 MOVK X10, 0x4C950000
	0x01E8D2AC MOVK X10, 0xF42D
	0x01E8D2B0 MOVK X10, 0x58510000
	0x01E8D2B4 ORR X8, X8, 0x1
	0x01E8D2B8 UBFM X11, X9, 0x2D, 0x3F
	0x01E8D2BC UBFM X12, X9, 0x1B, 0x3F
	0x01E8D2C0 MADD X10, X9, X10, X8
	0x01E8D2C4 EOR W8, W11, W12, 0x0
	0x01E8D2C8 UBFM X9, X9, 0x3B, 0x3F
	0x01E8D2CC RORV W8, W8, W9
	0x01E8D2D0 STR X10, [X0]
	0x01E8D2D4 MOV W0, W8
	0x01E8D2D8 RET
	0x01E8D2DC SUB W8, W31, W1
	0x01E8D2E0 LDP X11, X9, [X0]
	0x01E8D2E4 UDIV W10, W8, W1
	0x01E8D2E8 MSUB W8, W10, W1, W8
	0x01E8D2EC MOVZ X10, 0x7F2D
	0x01E8D2F0 MOVK X10, 0x4C950000
	0x01E8D2F4 MOVK X10, 0xF42D
	0x01E8D2F8 ORR X9, X9, 0x1
	0x01E8D2FC MOVK X10, 0x58510000
	0x01E8D300 UBFM X12, X11, 0x2D, 0x3F
	0x01E8D304 UBFM X13, X11, 0x1B, 0x3F
	0x01E8D308 EOR W12, W12, W13, 0x0
	0x01E8D30C UBFM X13, X11, 0x3B, 0x3F
	0x01E8D310 RORV W12, W12, W13
	0x01E8D314 CMP W12, W8
	0x01E8D318 MADD X11, X11, X10, X9
	0x01E8D31C B.CC 0x1E8D300
	0x01E8D320 UDIV W8, W12, W1
	0x01E8D324 MSUB W8, W8, W1, W12
	0x01E8D328 STR X11, [X0]
	0x01E8D32C MOV W0, W8
	0x01E8D330 RET
	0x01E8D334 MOVZ X8, 0x7C15
	0x01E8D338 MOVZ X10, 0xF82A
	0x01E8D33C MOVK X8, 0x7F4A0000
	0x01E8D340 MOVK X10, 0xFE940000
	0x01E8D344 MOVK X8, 0x79B9
	0x01E8D348 MOVZ X9, 0xE5B9
	0x01E8D34C MOVK X10, 0xF372
	0x01E8D350 MOVK X8, 0x9E370000
	0x01E8D354 MOVK X9, 0x1CE40000
	0x01E8D358 MOVK X10, 0x3C6E0000
	0x01E8D35C MOVK X9, 0x476D
	0x01E8D360 ADD X8, X8, W1, SXTW
	0x01E8D364 ADD X10, X10, W1, SXTW
	0x01E8D368 MOVZ X11, 0x11EB
	0x01E8D36C MOVK X9, 0xBF580000
	0x01E8D370 MOVK X11, 0x13310000
	0x01E8D374 EOR X8, X8, X8, 0x1E
	0x01E8D378 EOR X10, X10, X10, 0x1E
	0x01E8D37C MOVK X11, 0x49BB
	0x01E8D380 MUL X8, X8, X9
	0x01E8D384 MUL X9, X10, X9
	0x01E8D388 MOVK X11, 0x94D00000
	0x01E8D38C EOR X8, X8, X8, 0x1B
	0x01E8D390 EOR X9, X9, X9, 0x1B
	0x01E8D394 MUL X8, X8, X11
	0x01E8D398 MUL X9, X9, X11
	0x01E8D39C EOR X8, X8, X8, 0x1F
	0x01E8D3A0 EOR X9, X9, X9, 0x1F
	0x01E8D3A4 STP X8, X9, [X0]
	0x01E8D3A8 RET
	0x01E8D3AC LDR X8, [X0]
	0x01E8D3B0 MOVZ X9, 0x7C15
	0x01E8D3B4 MOVK X9, 0x7F4A0000
	0x01E8D3B8 MOVK X9, 0x79B9
	0x01E8D3BC MOVZ X10, 0xE5B9
	0x01E8D3C0 MOVK X9, 0x9E370000
	0x01E8D3C4 MOVK X10, 0x1CE40000
	0x01E8D3C8 MOVK X10, 0x476D
	0x01E8D3CC ADD X9, X8, X9
	0x01E8D3D0 MOVK X10, 0xBF580000
	0x01E8D3D4 EOR X8, X9, X9, 0x1E
	0x01E8D3D8 MUL X8, X8, X10
	0x01E8D3DC MOVZ X10, 0x11EB
	0x01E8D3E0 MOVK X10, 0x13310000
	0x01E8D3E4 MOVK X10, 0x49BB
	0x01E8D3E8 EOR X8, X8, X8, 0x1B
	0x01E8D3EC MOVK X10, 0x94D00000
	0x01E8D3F0 MUL X8, X8, X10
	0x01E8D3F4 EOR X8, X8, X8, 0x1F
	0x01E8D3F8 STR X9, [X0]
	0x01E8D3FC MOV X0, X8
	0x01E8D400 RET
	0x01E8D404 SUB X31, X31, 0x40
	0x01E8D408 STP X30, X23, [X31 + 0x10]
	0x01E8D40C STP X22, X21, [X31 + 0x20]
	0x01E8D410 STP X20, X19, [X31 + 0x30]
	0x01E8D414 ADRP X20, 0x254C000
	0x01E8D418 ADRP X21, 0x2266000
	0x01E8D41C LDRB W8, [X20 + 0x246]
	0x01E8D420 LDR X21, [X21 + 0x9D0]
	0x01E8D424 MOV X19, X0
	0x01E8D428 TBNZ X8, 0x0, 0x1E8D470
	0x01E8D42C ADRP X0, 0x2266000
	0x01E8D430 LDR X0, [X0 + 0x9D0]
	0x01E8D434 BL 0x1C16CF4
	0x01E8D438 ADRP X0, 0x2267000
	0x01E8D43C LDR X0, [X0 + 0x758]
	0x01E8D440 BL 0x1C16CF4
	0x01E8D444 ADRP X0, 0x2271000
	0x01E8D448 LDR X0, [X0 + 0x20]
	0x01E8D44C BL 0x1C16CF4
	0x01E8D450 ADRP X0, 0x2271000
	0x01E8D454 LDR X0, [X0 + 0x28]

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X19, 0x254C000
	012 Move W8, [X19+3727]
	013 Move V8, V3
	014 Move V9, V2
	015 Move V10, V1
	016 Move V11, V0
	017 Compare W8, 0
	018 JumpIfNotEqual {24}
	019 Move X0, 0x226E000
	020 Move X0, [X0+3176]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X19+3727], W8
	024 Move X20, 0x226E000
	025 Move X20, [X20+3176]
	026 Move X0, [X20]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfEqual {31}
	030 Move W8, W31
	031 Call 0x1C17DFC
	032 Move W8, [X19+3727]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSET not yet implemented."
	035 Move W9, S11
	036 Move W10, 0x44800000
	037 Move W9, W9
	038 ShiftRight W9, 31
	039 And W9, W9, 0x7FFFFFFF
	040 Move S0, 0.5
	041 Move S1, W10
	042 NotImplemented "Instruction UCVTF not yet implemented."
	043 Move W11, 0x7F800000
	044 Multiply S1, S11, S1
	045 Subtract S0, S0, S2
	046 Move S3, W11
	047 Add S0, S1, S0
	048 NotImplemented "Instruction FCVTZS not yet implemented."
	049 NotImplemented "Instruction FCMP not yet implemented."
	050 Move W10, 0x80000000
	051 NotImplemented "Instruction CSEL not yet implemented."
	052 Compare W8, 0
	053 JumpIfEqual {59}
	054 Move X0, 0x226E000
	055 Move X0, [X0+3176]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X19+3727], W8
	059 Move X0, [X20]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfEqual {64}
	063 Move W8, W31
	064 Call 0x1C17DFC
	065 Move W8, [X19+3727]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 NotImplemented "Instruction CSET not yet implemented."
	068 Move W9, S10
	069 Move W10, 0x44800000
	070 Move W9, W9
	071 ShiftRight W9, 31
	072 And W9, W9, 0x7FFFFFFF
	073 Move S0, 0.5
	074 Move S1, W10
	075 NotImplemented "Instruction UCVTF not yet implemented."
	076 Move W11, 0x7F800000
	077 Multiply S1, S10, S1
	078 Subtract S0, S0, S2
	079 Move S3, W11
	080 Add S0, S1, S0
	081 NotImplemented "Instruction FCVTZS not yet implemented."
	082 NotImplemented "Instruction FCMP not yet implemented."
	083 Move W10, 0x80000000
	084 NotImplemented "Instruction CSEL not yet implemented."
	085 Compare W8, 0
	086 JumpIfEqual {92}
	087 Move X0, 0x226E000
	088 Move X0, [X0+3176]
	089 Call 0x1C17CF4
	090 Move W8, 1
	091 Move [X19+3727], W8
	092 Move X0, [X20]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfEqual {97}
	096 Move W8, W31
	097 Call 0x1C17DFC
	098 Move W8, [X19+3727]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 NotImplemented "Instruction CSET not yet implemented."
	101 Move W9, S9
	102 Move W10, 0x44800000
	103 Move W9, W9
	104 ShiftRight W9, 31
	105 And W9, W9, 0x7FFFFFFF
	106 Move S0, 0.5
	107 Move S1, W10
	108 NotImplemented "Instruction UCVTF not yet implemented."
	109 Move W11, 0x7F800000
	110 Multiply S1, S9, S1
	111 Subtract S0, S0, S2
	112 Move S3, W11
	113 Add S0, S1, S0
	114 NotImplemented "Instruction FCVTZS not yet implemented."
	115 NotImplemented "Instruction FCMP not yet implemented."
	116 Move W10, 0x80000000
	117 NotImplemented "Instruction CSEL not yet implemented."
	118 Compare W8, 0
	119 JumpIfEqual {125}
	120 Move X0, 0x226E000
	121 Move X0, [X0+3176]
	122 Call 0x1C17CF4
	123 Move W8, 1
	124 Move [X19+3727], W8
	125 Move X0, [X20]
	126 Move W8, [X0+224]
	127 Compare W8, 0
	128 JumpIfNotEqual {130}
	129 Call 0x1C17DFC
	130 NotImplemented "Instruction SBFM not yet implemented."
	131 Xor W1, W8, W23
	132 NotImplemented "Instruction SBFM not yet implemented."
	133 Move W10, S8
	134 Xor W0, W8, W21
	135 Move W8, 0x44800000
	136 Move W10, W10
	137 ShiftRight W10, 31
	138 And W10, W10, 0x7FFFFFFF
	139 Move S0, 0.5
	140 Move S1, W8
	141 NotImplemented "Instruction UCVTF not yet implemented."
	142 Move W8, 0x7F800000
	143 Multiply S1, S8, S1
	144 Subtract S0, S0, S2
	145 Move S2, W8
	146 Add S0, S1, S0
	147 NotImplemented "Instruction SBFM not yet implemented."
	148 Move W10, 0x80000000
	149 NotImplemented "Instruction FCVTZS not yet implemented."
	150 NotImplemented "Instruction FCMP not yet implemented."
	151 Xor W9, W9, W22
	152 NotImplemented "Instruction CSEL not yet implemented."
	153 Move X20, [X31+64]
	154 Move X19, [X31+72]
	155 Move X22, [X31+48]
	156 Move X21, [X31+56]
	157 Move X30, [X31+32]
	158 Move X23, [X31+40]
	159 Move D9, [X31+16]
	160 Move D8, [X31+24]
	161 NotImplemented "Instruction SBFM not yet implemented."
	162 Xor W8, W10, W8
	163 NotImplemented "Instruction BFM not yet implemented."
	164 NotImplemented "Instruction BFM not yet implemented."
	165 Move D11, [X31+80]
	166 Move D10, [X31+88]
	167 Return X0

Method: UnityEngine.Quaternion op_Implicit(Fusion.QuaternionCompressed q)

Disassembly:
	0x01E8D458 BL 0x1C16CF4
	0x01E8D45C ADRP X0, 0x2271000
	0x01E8D460 LDR X0, [X0 + 0x30]
	0x01E8D464 BL 0x1C16CF4
	0x01E8D468 MOVZ W8, 0x1
	0x01E8D46C STRB W8, [X20 + 0x246]
	0x01E8D470 LDR X0, [X21]
	0x01E8D474 MOVZ W1, 0x4
	0x01E8D478 BL 0x1C16D6C
	0x01E8D47C CBZ X0, 0x1E8D5AC
	0x01E8D480 ADRP X21, 0x2271000
	0x01E8D484 LDR X21, [X21 + 0x20]
	0x01E8D488 MOV X20, X0
	0x01E8D48C LDR X0, [X21]
	0x01E8D490 CBZ X0, 0x1E8D4A4
	0x01E8D494 LDR X8, [X20]
	0x01E8D498 LDR X1, [X8 + 0x40]
	0x01E8D49C BL 0x1C16E00
	0x01E8D4A0 CBZ X0, 0x1E8D5A0
	0x01E8D4A4 LDR W8, [X20 + 0x18]
	0x01E8D4A8 CBZ W8, 0x1E8D59C
	0x01E8D4AC LDR X8, [X21]
	0x01E8D4B0 ADRP X22, 0x2267000
	0x01E8D4B4 LDR X22, [X22 + 0x758]
	0x01E8D4B8 ADD X1, X31, 0x8
	0x01E8D4BC STR X8, [X20 + 0x20]
	0x01E8D4C0 LDR X8, [X19]
	0x01E8D4C4 LDR X0, [X22]
	0x01E8D4C8 STR X8, [X31 + 0x8]
	0x01E8D4CC BL 0x1C16E04
	0x01E8D4D0 MOV X21, X0
	0x01E8D4D4 CBZ X0, 0x1E8D4EC
	0x01E8D4D8 LDR X8, [X20]
	0x01E8D4DC MOV X0, X21
	0x01E8D4E0 LDR X1, [X8 + 0x40]
	0x01E8D4E4 BL 0x1C16E00
	0x01E8D4E8 CBZ X0, 0x1E8D5A0
	0x01E8D4EC LDR W8, [X20 + 0x18]
	0x01E8D4F0 CMP W8, 0x1
	0x01E8D4F4 B.LS 0x1E8D59C
	0x01E8D4F8 ADRP X23, 0x2271000
	0x01E8D4FC LDR X23, [X23 + 0x28]
	0x01E8D500 STR X21, [X20 + 0x28]
	0x01E8D504 LDR X0, [X23]
	0x01E8D508 CBZ X0, 0x1E8D520
	0x01E8D50C LDR X8, [X20]
	0x01E8D510 LDR X1, [X8 + 0x40]
	0x01E8D514 BL 0x1C16E00
	0x01E8D518 CBZ X0, 0x1E8D5A0
	0x01E8D51C LDR W8, [X20 + 0x18]
	0x01E8D520 CMP W8, 0x2
	0x01E8D524 B.LS 0x1E8D59C
	0x01E8D528 LDR X8, [X23]
	0x01E8D52C ADD X1, X31, 0x0
	0x01E8D530 STR X8, [X20 + 0x30]
	0x01E8D534 LDR X8, [X19 + 0x8]
	0x01E8D538 LDR X0, [X22]
	0x01E8D53C STR X8, [X31]
	0x01E8D540 BL 0x1C16E04
	0x01E8D544 MOV X19, X0
	0x01E8D548 CBZ X0, 0x1E8D560
	0x01E8D54C LDR X8, [X20]
	0x01E8D550 MOV X0, X19
	0x01E8D554 LDR X1, [X8 + 0x40]
	0x01E8D558 BL 0x1C16E00
	0x01E8D55C CBZ X0, 0x1E8D5A0
	0x01E8D560 LDR W8, [X20 + 0x18]
	0x01E8D564 CMP W8, 0x3
	0x01E8D568 B.LS 0x1E8D59C
	0x01E8D56C ADRP X8, 0x2271000
	0x01E8D570 LDR X8, [X8 + 0x30]
	0x01E8D574 STR X19, [X20 + 0x38]
	0x01E8D578 MOV X1, X20
	0x01E8D57C MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x254C000
	007 Move W8, [X21+3728]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare W8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, 0x226E000
	013 Move X0, [X0+3176]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X21+3728], W8
	017 Move X22, 0x226E000
	018 Move X22, [X22+3176]
	019 Move X0, [X22]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {32}
	023 Call 0x1C17DFC
	024 Move W8, [X21+3728]
	025 Compare W8, 0
	026 JumpIfNotEqual {32}
	027 Move X0, 0x226E000
	028 Move X0, [X0+3176]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+3728], W8
	032 Move X0, [X22]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {45}
	036 Call 0x1C17DFC
	037 Move W8, [X21+3728]
	038 Compare W8, 0
	039 JumpIfNotEqual {45}
	040 Move X0, 0x226E000
	041 Move X0, [X0+3176]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+3728], W8
	045 Move X0, [X22]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {58}
	049 Call 0x1C17DFC
	050 Move W8, [X21+3728]
	051 Compare W8, 0
	052 JumpIfNotEqual {58}
	053 Move X0, 0x226E000
	054 Move X0, [X0+3176]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X21+3728], W8
	058 Move X0, [X22]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X9, X20
	064 ShiftRight X9, 32
	065 And X9, X9, 0x7FFFFFFF
	066 Move S0, W20
	067 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	068 Move X8, X19
	069 ShiftRight X8, 32
	070 And X8, X8, 0x7FFFFFFF
	071 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	072 NotImplemented "Instruction MOVI not yet implemented."
	073 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	074 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	075 And V0, V0, V1
	076 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	077 Move W10, 0x3A800000
	078 NotImplemented "Instruction INVALID not yet implemented."
	079 Move X20, [X31+32]
	080 Move X19, [X31+40]
	081 Move X22, [X31+16]
	082 Move X21, [X31+24]
	083 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	084 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	085 NotImplemented "Instruction INVALID not yet implemented."
	086 Move S1, V0.S[1]
	087 Move S2, V0.S[2]
	088 Move S3, V0.S[3]
	089 Move X30, [X31+48]
	090 Return X0

Method: System.Boolean Equals(Fusion.QuaternionCompressed other)

Disassembly:
	0x01E8D580 LDR X0, [X8]
	0x01E8D584 BL 0x3227C5C
	0x01E8D588 LDP X20, X19, [X31 + 0x30]
	0x01E8D58C LDP X22, X21, [X31 + 0x20]
	0x01E8D590 LDP X30, X23, [X31 + 0x10]
	0x01E8D594 ADD X31, X31, 0x40
	0x01E8D598 RET
	0x01E8D59C BL 0x1C16F28
	0x01E8D5A0 BL 0x1C16F44
	0x01E8D5A4 MOV X1, X31
	0x01E8D5A8 BL 0x1C16DEC
	0x01E8D5AC BL 0x1C16F20
	0x01E8D5B0 LDP X8, X9, [X0]
	0x01E8D5B4 MOVZ X10, 0x7F2D
	0x01E8D5B8 MOVK X10, 0x4C950000
	0x01E8D5BC MOVK X10, 0xF42D
	0x01E8D5C0 MOVK X10, 0x58510000

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, [X0+4]
	004 Move X9, X1
	005 ShiftRight X9, 32
	006 And X9, X9, 0x7FFFFFFF
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W8, [X0+8]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W8, [X0+12]
	011 Move X9, X2
	012 ShiftRight X9, 32
	013 And X9, X9, 0x7FFFFFFF
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CSET not yet implemented."
	016 Return X0
	017 Move W0, W31
	018 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x01E8D5C4 ADRP X11, 0xFFFFFFFFFEC60000
	0x01E8D5C8 ORR X9, X9, 0x1
	0x01E8D5CC LDR V2, [X11 + 0xF38]
	0x01E8D5D0 UBFM X11, X8, 0x2D, 0x3F
	0x01E8D5D4 MADD X9, X8, X10, X9
	0x01E8D5D8 UBFM X10, X8, 0x1B, 0x3F
	0x01E8D5DC EOR W10, W11, W10, 0x0
	0x01E8D5E0 UBFM X8, X8, 0x3B, 0x3F
	0x01E8D5E4 FCMP D0, D1
	0x01E8D5E8 RORV W8, W10, W8
	0x01E8D5EC FCSEL D3, D0, D1, GT
	0x01E8D5F0 FCSEL D0, D1, D0, GT
	0x01E8D5F4 UCVTF D1, W8
	0x01E8D5F8 FMUL D1, D1, D2
	0x01E8D5FC FSUB D2, D3, D0
	0x01E8D600 FMUL D1, D2, D1
	0x01E8D604 FADD D0, D0, D1
	0x01E8D608 STR X9, [X0]
	0x01E8D60C RET
	0x01E8D610 LDP X8, X9, [X0]
	0x01E8D614 MOVZ X10, 0x7F2D
	0x01E8D618 MOVK X10, 0x4C950000
	0x01E8D61C MOVK X10, 0xF42D
	0x01E8D620 MOVK X10, 0x58510000
	0x01E8D624 ADRP X11, 0xFFFFFFFFFEC5C000
	0x01E8D628 ORR X9, X9, 0x1
	0x01E8D62C LDR V2, [X11 + 0xF60]
	0x01E8D630 UBFM X11, X8, 0x2D, 0x3F
	0x01E8D634 MADD X9, X8, X10, X9
	0x01E8D638 UBFM X10, X8, 0x1B, 0x3F
	0x01E8D63C EOR W10, W11, W10, 0x0
	0x01E8D640 UBFM X8, X8, 0x3B, 0x3F
	0x01E8D644 RORV W8, W10, W8
	0x01E8D648 FCMP S0, S1
	0x01E8D64C UBFM W8, W8, 0x8, 0x1F
	0x01E8D650 FCSEL S3, S0, S1, GT
	0x01E8D654 FCSEL S0, S1, S0, GT
	0x01E8D658 UCVTF S1, W8
	0x01E8D65C FMUL S1, S1, S2
	0x01E8D660 FSUB S2, S3, S0
	0x01E8D664 FMUL S1, S2, S1
	0x01E8D668 FADD S0, S0, S1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x254D000
	006 Move W8, [X21+570]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2271000
	014 Move X0, [X0+4040]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+570], W8
	018 Compare X20, 0
	019 JumpIfEqual {44}
	020 Move X8, 0x2271000
	021 Move X8, [X8+4040]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X20
	026 Call 0x1C17E08
	027 Move X8, [X0]
	028 Move W9, [X19]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W9, [X19+4]
	031 Move X8, X8
	032 ShiftRight X8, 32
	033 And X8, X8, 0x7FFFFFFF
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X8, [X0+8]
	036 Move W9, [X19+8]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W9, [X19+12]
	039 Move X8, X8
	040 ShiftRight X8, 32
	041 And X8, X8, 0x7FFFFFFF
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CSET not yet implemented."
	044 Move W0, W31
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x01E8D66C STR X9, [X0]
	0x01E8D670 RET
	0x01E8D674 CMP W1, W2
	0x01E8D678 B.EQ 0x1E8D698
	0x01E8D67C STP X30, X19, [X31 - 0x10]!
	0x01E8D680 CSEL W8, W1, W2, GT
	0x01E8D684 CSEL W19, W2, W1, GT
	0x01E8D688 SUB W1, W8, W19
	0x01E8D68C BL 0x1E8D2DC
	0x01E8D690 ADD W1, W0, W19

ISIL:
	001 Move W8, [X0]
	002 Move W9, [X0+4]
	003 Move W10, [X0+8]
	004 Move W11, [X0+12]
	005 Move W12, 397
	006 Multiply W8, W8, W12
	007 Xor W8, W8, W9
	008 Multiply W8, W8, W12
	009 Xor W8, W8, W10
	010 Multiply W8, W8, W12
	011 Xor W0, W8, W11
	012 Return X0

Method: System.Boolean op_Equality(Fusion.QuaternionCompressed left, Fusion.QuaternionCompressed right)

Disassembly:
	0x01E8D694 LDP X30, X19, [X31], #0x10
	0x01E8D698 MOV W0, W1
	0x01E8D69C RET
	0x01E8D6A0 STP X30, X19, [X31 - 0x10]!
	0x01E8D6A4 CMP W1, W2
	0x01E8D6A8 CSEL W8, W1, W2, GT
	0x01E8D6AC CSEL W19, W2, W1, GT
	0x01E8D6B0 SUB W8, W8, W19
	0x01E8D6B4 ADDS W1, W8, 0x1
	0x01E8D6B8 B.CC 0x1E8D6F4
	0x01E8D6BC LDP X9, X8, [X0]
	0x01E8D6C0 MOVZ X10, 0x7F2D
	0x01E8D6C4 MOVK X10, 0x4C950000
	0x01E8D6C8 MOVK X10, 0xF42D
	0x01E8D6CC MOVK X10, 0x58510000
	0x01E8D6D0 ORR X8, X8, 0x1
	0x01E8D6D4 UBFM X11, X9, 0x2D, 0x3F

ISIL:
	001 Move X8, X0
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move W0, W31
	005 Move X8, X8
	006 ShiftRight X8, 32
	007 And X8, X8, 0x7FFFFFFF
	008 Move X9, X2
	009 ShiftRight X9, 32
	010 And X9, X9, 0x7FFFFFFF
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X8, X1
	013 ShiftRight X8, 32
	014 And X8, X8, 0x7FFFFFFF
	015 Move X9, X3
	016 ShiftRight X9, 32
	017 And X9, X9, 0x7FFFFFFF
	018 NotImplemented "Instruction CMP not yet implemented."
	019 NotImplemented "Instruction CSET not yet implemented."
	020 Return X0
	021 Move W0, W31
	022 Return X0

Method: System.Boolean op_Inequality(Fusion.QuaternionCompressed left, Fusion.QuaternionCompressed right)

Disassembly:
	0x01E8D6D8 UBFM X12, X9, 0x1B, 0x3F
	0x01E8D6DC UBFM X13, X9, 0x3B, 0x3F
	0x01E8D6E0 MADD X8, X9, X10, X8
	0x01E8D6E4 EOR W9, W11, W12, 0x0
	0x01E8D6E8 STR X8, [X0]
	0x01E8D6EC RORV W0, W9, W13
	0x01E8D6F0 B 0x1E8D6FC
	0x01E8D6F4 BL 0x1E8D2DC
	0x01E8D6F8 ADD W0, W0, W19
	0x01E8D6FC LDP X30, X19, [X31], #0x10
	0x01E8D700 RET
	0x01E8D704 CMP W1, W2
	0x01E8D708 B.EQ 0x1E8D728
	0x01E8D70C STP X30, X19, [X31 - 0x10]!
	0x01E8D710 CSEL W8, W1, W2, HI
	0x01E8D714 CSEL W19, W2, W1, HI
	0x01E8D718 SUB W1, W8, W19

ISIL:
	001 Move X8, X0
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move W0, 1
	005 Move X8, X8
	006 ShiftRight X8, 32
	007 And X8, X8, 0x7FFFFFFF
	008 Move X9, X2
	009 ShiftRight X9, 32
	010 And X9, X9, 0x7FFFFFFF
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X8, X1
	013 ShiftRight X8, 32
	014 And X8, X8, 0x7FFFFFFF
	015 Move X9, X3
	016 ShiftRight X9, 32
	017 And X9, X9, 0x7FFFFFFF
	018 NotImplemented "Instruction CMP not yet implemented."
	019 NotImplemented "Instruction CSET not yet implemented."
	020 Return X0
	021 Move W0, 1
	022 Return X0

