Type: Fusion.NetworkRunner/<PushHostMigrationSnapshot>d__2

Method: System.Void MoveNext()

Disassembly:
	0x01EB4EA8 MOV X0, X21
	0x01EB4EAC MOV X3, X31
	0x01EB4EB0 BL 0x1E69764
	0x01EB4EB4 CBZ X0, 0x1EB555C
	0x01EB4EB8 ADRP X8, 0x224B000
	0x01EB4EBC LDR X8, [X8 + 0x178]
	0x01EB4EC0 LDR X1, [X8]
	0x01EB4EC4 BL 0x269C840
	0x01EB4EC8 ADRP X8, 0x224B000
	0x01EB4ECC LDR X8, [X8 + 0x168]
	0x01EB4ED0 STR X0, [X31 + 0x18]
	0x01EB4ED4 LDR X1, [X8]
	0x01EB4ED8 ADD X0, X31, 0x18
	0x01EB4EDC BL 0x26771E0
	0x01EB4EE0 TBNZ X0, 0x0, 0x1EB4FCC
	0x01EB4EE4 MOVZ W8, 0x1
	0x01EB4EE8 STR W8, [X19]
	0x01EB4EEC LDR X8, [X31 + 0x18]
	0x01EB4EF0 STR X8, [X19 + 0x180]
	0x01EB4EF4 ADRP X8, 0x224A000
	0x01EB4EF8 LDR X8, [X8 + 0xFD0]
	0x01EB4EFC LDR X0, [X8]
	0x01EB4F00 LDR W8, [X0 + 0xE0]
	0x01EB4F04 CBNZ W8, 0x1EB4F0C
	0x01EB4F08 BL 0x1C16DFC
	0x01EB4F0C ADRP X8, 0x224B000
	0x01EB4F10 LDR X8, [X8 + 0x1E0]
	0x01EB4F14 ADD X0, X19, 0x8
	0x01EB4F18 LDR X3, [X8]
	0x01EB4F1C ADD X1, X31, 0x18
	0x01EB4F20 MOV X2, X19
	0x01EB4F24 BL 0x1FB054C
	0x01EB4F28 B 0x1EB54E0
	0x01EB4F2C STR W31, [X19]
	0x01EB4F30 LDR X8, [X31 + 0x20]
	0x01EB4F34 STR X8, [X19 + 0x178]
	0x01EB4F38 ADRP X8, 0x224A000
	0x01EB4F3C LDR X8, [X8 + 0xFD0]
	0x01EB4F40 LDR X0, [X8]
	0x01EB4F44 LDR W8, [X0 + 0xE0]
	0x01EB4F48 CBNZ W8, 0x1EB4F50
	0x01EB4F4C BL 0x1C16DFC
	0x01EB4F50 ADRP X8, 0x224B000
	0x01EB4F54 LDR X8, [X8 + 0x1F8]
	0x01EB4F58 ADD X0, X19, 0x8
	0x01EB4F5C LDR X3, [X8]
	0x01EB4F60 ADD X1, X31, 0x20
	0x01EB4F64 MOV X2, X19
	0x01EB4F68 BL 0x1FC5498
	0x01EB4F6C B 0x1EB54E0
	0x01EB4F70 LDR X8, [X19 + 0x190]
	0x01EB4F74 MOVN W27, 0x0
	0x01EB4F78 STR X8, [X31 + 0x8]
	0x01EB4F7C STR X31, [X19 + 0x190]
	0x01EB4F80 STR W27, [X19]
	0x01EB4F84 B 0x1EB5350
	0x01EB4F88 LDR X8, [X19 + 0x178]
	0x01EB4F8C MOVN W27, 0x0
	0x01EB4F90 STR X8, [X31 + 0x20]
	0x01EB4F94 STR X31, [X19 + 0x178]
	0x01EB4F98 STR W27, [X19]
	0x01EB4F9C B 0x1EB5240
	0x01EB4FA0 LDR X8, [X19 + 0x188]
	0x01EB4FA4 MOVN W27, 0x0
	0x01EB4FA8 STR X8, [X31 + 0x10]
	0x01EB4FAC STR X31, [X19 + 0x188]
	0x01EB4FB0 STR W27, [X19]
	0x01EB4FB4 B 0x1EB5298
	0x01EB4FB8 LDR X8, [X19 + 0x180]
	0x01EB4FBC MOVN W27, 0x0
	0x01EB4FC0 STR X8, [X31 + 0x18]
	0x01EB4FC4 STR X31, [X19 + 0x180]
	0x01EB4FC8 STR W27, [X19]
	0x01EB4FCC ADRP X8, 0x224B000
	0x01EB4FD0 LDR X8, [X8 + 0x158]
	0x01EB4FD4 LDR X1, [X8]
	0x01EB4FD8 ADD X0, X31, 0x18
	0x01EB4FDC BL 0x2677224
	0x01EB4FE0 CBZ X20, 0x1EB5620
	0x01EB4FE4 LDR X0, [X20 + 0x1B0]
	0x01EB4FE8 CBZ X0, 0x1EB5624
	0x01EB4FEC MOV X1, X31
	0x01EB4FF0 BL 0x1E6A1D0
	0x01EB4FF4 LDR W8, [X20 + 0x188]
	0x01EB4FF8 CMP W8, 0x6
	0x01EB4FFC B.NE 0x1EB504C
	0x01EB5000 LDRB W8, [X19 + 0x160]
	0x01EB5004 CBNZ W8, 0x1EB5058
	0x01EB5008 LDR X0, [X20 + 0x1B0]
	0x01EB500C CBZ X0, 0x1EB5744
	0x01EB5010 MOV X1, X31
	0x01EB5014 BL 0x1E687A0
	0x01EB5018 ADRP X8, 0x224A000
	0x01EB501C LDR X8, [X8 + 0x208]
	0x01EB5020 TBZ X0, 0x0, 0x1EB5518
	0x01EB5024 LDR X2, [X8]
	0x01EB5028 STR X31, [X31 + 0x120]
	0x01EB502C ADD X0, X31, 0x120
	0x01EB5030 MOVZ W1, 0x2
	0x01EB5034 BL 0x24345B8
	0x01EB5038 LDR X8, [X31 + 0x120]
	0x01EB503C MOVZ W9, 0x4
	0x01EB5040 STR X8, [X19 + 0x160]
	0x01EB5044 STR W9, [X20 + 0x188]
	0x01EB5048 B 0x1EB5050
	0x01EB504C LDRB W8, [X19 + 0x160]
	0x01EB5050 ANDS W31, W8, 0xFF
	0x01EB5054 B.EQ 0x1EB5648
	0x01EB5058 LDR X21, [X20 + 0x1B0]
	0x01EB505C ADD X8, X31, 0x390
	0x01EB5060 ADD X0, X8, 0x38
	0x01EB5064 MOVZ W2, 0xC0
	0x01EB5068 MOV W1, W31
	0x01EB506C ADD X22, X31, 0x120
	0x01EB5070 BL 0x3EB1B10
	0x01EB5074 LDR X8, [X19 + 0x160]
	0x01EB5078 ADRP X9, 0x2248000
	0x01EB507C LDR X9, [X9 + 0x78]
	0x01EB5080 STR X8, [X31 + 0x410]
	0x01EB5084 LDP V2, V0, [X19 + 0xC0]
	0x01EB5088 LDR X8, [X19 + 0xE0]
	0x01EB508C LDR V1, [X19 + 0xB]
	0x01EB5090 LDR X0, [X9]
	0x01EB5094 STP V2, V0, [X22 + 0x280]
	0x01EB5098 STR X8, [X31 + 0x3C0]
	0x01EB509C STR V1, [X22 + 0x27]
	0x01EB50A0 LDR W8, [X0 + 0xE0]
	0x01EB50A4 CBNZ W8, 0x1EB50AC
	0x01EB50A8 BL 0x1C16DFC
	0x01EB50AC ADD X8, X31, 0x120
	0x01EB50B0 MOV W0, W31
	0x01EB50B4 MOV X1, X31
	0x01EB50B8 BL 0x1EF8BF0
	0x01EB50BC ADRP X9, 0x224A000
	0x01EB50C0 LDR V0, [X22]
	0x01EB50C4 LDR X8, [X31 + 0x130]
	0x01EB50C8 LDR X9, [X9 + 0x200]
	0x01EB50CC ADD X0, X19, 0x40
	0x01EB50D0 STR V0, [X22 + 0x12]
	0x01EB50D4 STR X8, [X31 + 0x250]
	0x01EB50D8 LDR X2, [X9]
	0x01EB50DC STR V0, [X22]
	0x01EB50E0 STR X8, [X31 + 0x130]
	0x01EB50E4 ADD X8, X31, 0x4B0
	0x01EB50E8 ADD X1, X31, 0x120
	0x01EB50EC BL 0x243528C
	0x01EB50F0 ADRP X9, 0x224A000
	0x01EB50F4 LDR V0, [X28 + 0x12]
	0x01EB50F8 LDR X8, [X31 + 0x4C0]
	0x01EB50FC LDR X9, [X9 + 0x210]
	0x01EB5100 MOVI V1.2D, 0x0
	0x01EB5104 STP V1, V1, [X22]
	0x01EB5108 STR V0, [X22 + 0x10]
	0x01EB510C LDR X2, [X9]
	0x01EB5110 STR X8, [X31 + 0x230]
	0x01EB5114 STR V0, [X28 + 0x12]
	0x01EB5118 STR X8, [X31 + 0x4C0]
	0x01EB511C ADD X0, X31, 0x120
	0x01EB5120 ADD X1, X31, 0x4B0
	0x01EB5124 BL 0x2435218
	0x01EB5128 LDP V0, V1, [X22]
	0x01EB512C STUR V0, [X28 + 0x38]
	0x01EB5130 STUR V1, [X28 + 0x48]
	0x01EB5134 LDP V0, V1, [X19 + 0x60]
	0x01EB5138 STUR V0, [X28 + 0x58]
	0x01EB513C STUR V1, [X28 + 0x68]
	0x01EB5140 LDR X8, [X19 + 0xA0]
	0x01EB5144 STR X8, [X31 + 0x428]
	0x01EB5148 LDR X8, [X19 + 0xA8]
	0x01EB514C STR X8, [X31 + 0x408]
	0x01EB5150 LDR X8, [X19 + 0xE8]
	0x01EB5154 STR X8, [X31 + 0x430]
	0x01EB5158 LDR V0, [X19 + 0x8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2526000
	007 Move W8, [X20+962]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0x224C000
	014 Move X0, [X0+408]
	015 Call 0x1C17CF4
	016 Move X0, 0x224A000
	017 Move X0, [X0+392]
	018 Call 0x1C17CF4
	019 Move X0, 0x224A000
	020 Move X0, [X0+224]
	021 Call 0x1C17CF4
	022 Move X0, 0x2248000
	023 Move X0, [X0+2192]
	024 Call 0x1C17CF4
	025 Move X0, 0x2248000
	026 Move X0, [X0+2200]
	027 Call 0x1C17CF4
	028 Move X0, 0x2248000
	029 Move X0, [X0+2208]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+962], W8
	033 Move [X31+8], X31
	034 Move X21, 0x224A000
	035 Move W8, [X19]
	036 Move X21, [X21+224]
	037 Compare W8, 0
	038 JumpIfEqual {75}
	039 Move X0, [X19+32]
	040 Compare X0, 0
	041 JumpIfEqual {109}
	042 Move X1, X31
	043 Call NetworkRunner.SendHostMigrationSnapshot, X0
	044 Compare X0, 0
	045 JumpIfEqual {110}
	046 Move X8, 0x2248000
	047 Move X8, [X8+2208]
	048 Move X1, [X8]
	049 Call Task`1<Boolean>.GetAwaiter, X0
	050 Move X8, 0x2248000
	051 Move X8, [X8+2200]
	052 Move [X31+8], X0
	053 Move X1, [X8]
	054 Add X0, X31, 8
	055 Call TaskAwaiter`1<Boolean>.get_IsCompleted, X0
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {82}
	060 Move [X19], W31
	061 Move X8, [X31+8]
	062 Move [X19+40], X8
	063 Move X0, [X21]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X8, 0x224C000
	069 Move X8, [X8+408]
	070 Add X0, X19, 8
	071 Move X3, [X8]
	072 Add X1, X31, 8
	073 Move X2, X19
	074 Call AsyncTaskMethodBuilder`1<Boolean>.AwaitUnsafeOnCompleted, X0, X1, X2
	075 Move X8, [X19+40]
	076 Move TEMP, 0
	077 Not TEMP
	078 Move W9, TEMP
	079 Move [X31+8], X8
	080 Move [X19+40], X31
	081 Move [X19], W9
	082 Move X8, 0x2248000
	083 Move X8, [X8+2192]
	084 Move X1, [X8]
	085 Add X0, X31, 8
	086 Call TaskAwaiter`1<Boolean>.GetResult, X0
	087 Move W20, W0
	088 Move TEMP, 1
	089 Not TEMP
	090 Move W8, TEMP
	091 Move [X19+8], W8
	092 Move X0, [X21]
	093 Move X21, 0x224A000
	094 Move W8, [X0+224]
	095 Move X21, [X21+392]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X2, [X21]
	100 And W1, W20, 1
	101 Move X0, X19
	102 Call AsyncTaskMethodBuilder`1<Boolean>.SetResult, X0, X1
	103 Move X20, [X31+32]
	104 Move X19, [X31+40]
	105 Move X30, [X31+16]
	106 Move X21, [X31+24]
	107 Add X31, X31, 48
	108 Return 
	109 Call 0x1C17F20
	110 Call 0x1C17F20
	111 Move X20, X0
	112 Move X20, X0
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X0, X20
	115 Call 0x3EB2AD0
	116 Move X20, X0
	117 Move X0, 0x2245000
	118 Move X0, [X0+3264]
	119 Call 0x1C17D08
	120 Move X8, [X20]
	121 Move X1, [X8]
	122 Call 0x1C18270
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfNotEqual {129}
	127 Call 0x3EB2AE0
	128 Move W20, W31
	129 Move W0, 8
	130 Call 0x3EB2AF0
	131 Move X8, [X20]
	132 Move [X0], X8
	133 Move X1, 0x2000000
	134 Add X1, X1, 3672
	135 Move X2, X31
	136 Call 0x3EB2B00
	137 Move X20, X0
	138 Move X21, X1
	139 Move X20, X0
	140 Call 0x3EB2AE0
	141 Move W1, W21
	142 Move W8, 1
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X0, X20
	145 Call 0x3EB2AD0
	146 Move X20, X0
	147 Move X0, 0x223F000
	148 Move X0, [X0+2000]
	149 Call 0x1C17D08
	150 Move X8, [X20]
	151 Move X1, [X8]
	152 Call 0x1C18270
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfNotEqual {177}
	157 Move X20, [X20]
	158 Call 0x3EB2AE0
	159 Move TEMP, 1
	160 Not TEMP
	161 Move W8, TEMP
	162 Move [X19+8], W8
	163 Move X0, 0x2249000
	164 Move X0, [X0+224]
	165 Call 0x1C17D08
	166 Move W8, [X0+224]
	167 Compare W8, 0
	168 JumpIfNotEqual {170}
	169 Call 0x1C17DFC
	170 Move X0, 0x2249000
	171 Move X0, [X0+400]
	172 Call 0x1C17D08
	173 Move X2, X0
	174 Move X0, X19
	175 Move X1, X20
	176 Call AsyncTaskMethodBuilder`1<Boolean>.SetException, X0, X1
	177 Move W0, 8
	178 Call 0x3EB2AF0
	179 Move X8, [X20]
	180 Move [X0], X8
	181 Move X1, 0x2000000
	182 Add X1, X1, 3672
	183 Move X2, X31
	184 Call 0x3EB2B00
	185 Move X20, X0
	186 Call 0x3EB2AE0
	187 Move X0, X20
	188 Call 0x1D2D690
	189 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x01EB515C STUR V0, [X28 + 0xA8]
	0x01EB5160 LDR X8, [X19 + 0x90]
	0x01EB5164 STR X8, [X31 + 0x448]
	0x01EB5168 LDR X8, [X19 + 0xF8]
	0x01EB516C STR X8, [X31 + 0x458]
	0x01EB5170 LDR X8, [X19 + 0x100]
	0x01EB5174 STR X8, [X31 + 0x460]
	0x01EB5178 LDR X0, [X19 + 0x140]
	0x01EB517C CBZ X0, 0x1EB51C0
	0x01EB5180 MOV X1, X31
	0x01EB5184 BL 0x1E9CF1C
	0x01EB5188 MOV X8, X0
	0x01EB518C LDR X0, [X19 + 0x140]
	0x01EB5190 STR X8, [X31 + 0x478]
	0x01EB5194 CBZ X0, 0x1EB51C4
	0x01EB5198 MOV X1, X31
	0x01EB519C BL 0x1E9CF34
	0x01EB51A0 MOV X8, X0
	0x01EB51A4 LDR X0, [X19 + 0x140]
	0x01EB51A8 STR X8, [X31 + 0x470]
	0x01EB51AC CBZ X0, 0x1EB5510
	0x01EB51B0 MOV X1, X31
	0x01EB51B4 BL 0x1E9CFFC
	0x01EB51B8 MOV X8, X0
	0x01EB51BC B 0x1EB51CC
	0x01EB51C0 STR X31, [X31 + 0x478]
	0x01EB51C4 MOV X8, X31
	0x01EB51C8 STR X31, [X31 + 0x470]
	0x01EB51CC STR X8, [X31 + 0x468]
	0x01EB51D0 LDR X8, [X19 + 0x148]
	0x01EB51D4 ADD X0, X31, 0x120

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2525000
	007 Move X21, 0x2249000
	008 Move W8, [X22+963]
	009 Move X21, [X21+224]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x2249000
	017 Move X0, [X0+408]
	018 Call 0x1C17CF4
	019 Move X0, 0x2249000
	020 Move X0, [X0+224]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+963], W8
	024 Move X0, [X21]
	025 Move X21, 0x2249000
	026 Move W8, [X0+224]
	027 Move X21, [X21+408]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Boolean>.SetStateMachine, X0, X1
	040 Return 

