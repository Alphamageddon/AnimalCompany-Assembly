Type: Fusion.NetworkObjectHeaderSnapshotRef

Method: System.Boolean get_Valid()

Disassembly:
	0x01E977F0 STR X8, [X20 + 0x68]!
	0x01E977F4 LDUR X21, [X20 - 0x10]
	0x01E977F8 CBZ X21, 0x1E97864
	0x01E977FC ADRP X22, 0x2267000

ISIL:
	001 Move X8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: Fusion.Tick get_Tick()

Disassembly:
	0x01E94338 BL 0x1ED8A64
	0x01E9433C LDR X0, [X25]
	0x01E94340 LDR W8, [X0 + 0xE0]
	0x01E94344 CBNZ W8, 0x1E9434C
	0x01E94348 BL 0x1C16DFC
	0x01E9434C CMP W20, 0x1
	0x01E94350 B.LT 0x1E943F8

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+40]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Int32 get_Bytes()

Disassembly:
	0x01E97800 LDR X22, [X22 + 0x470]
	0x01E97804 LDR X1, [X22]
	0x01E97808 MOV X0, X20
	0x01E9780C BL 0x243AFD4
	0x01E97810 LDR X23, [X19 + 0x60]
	0x01E97814 CBZ X23, 0x1E978A8
	0x01E97818 LDR W8, [X21 + 0x28]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+44]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: Fusion.NetworkObjectHeader get_Header()

Disassembly:
	0x01E9781C LDR W9, [X23 + 0x18]
	0x01E97820 SUB W24, W0, W8
	0x01E97824 CMP W24, W9
	0x01E97828 B.GE 0x1E9785C
	0x01E9782C LDR X8, [X23]
	0x01E97830 MOV X0, X21
	0x01E97834 LDR X1, [X8 + 0x40]
	0x01E97838 BL 0x1C16E00
	0x01E9783C CBZ X0, 0x1E978AC

ISIL:
	001 Move [X31-16], X30
	002 Move X9, [X0]
	003 Compare X9, 0
	004 JumpIfEqual {11}
	005 Move X1, [X9+48]
	006 Move W2, 80
	007 Move X0, X8
	008 Move X30, [X31+16]
	009 Call 0x3EB2AC0
	010 Return X0
	011 Call 0x1C17F20

Method: System.UInt64 get_SnapshotCRC()

Disassembly:
	0x01E97840 LDR W8, [X23 + 0x18]
	0x01E97844 CMP W24, W8
	0x01E97848 B.CS 0x1E978B8
	0x01E9784C ADD X8, X23, W24, 0x3, SXTW
	0x01E97850 STR X21, [X8 + 0x20]
	0x01E97854 LDR X21, [X21 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0]
	003 Compare X0, 0
	004 JumpIfEqual {6}
	005 Move X30, [X31+16]
	006 Call 0x1C17F20

Method: Fusion.NetworkObjectHeader* get_UnsafePointer()

Disassembly:
	0x01E978BC SUB X31, X31, 0x50
	0x01E978C0 STR X30, [X31 + 0x10]
	0x01E978C4 STP X24, X23, [X31 + 0x20]
	0x01E978C8 STP X22, X21, [X31 + 0x30]
	0x01E978CC STP X20, X19, [X31 + 0x40]
	0x01E978D0 ADRP X20, 0x2542000
	0x01E978D4 LDRB W8, [X20 + 0x2B6]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+48]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void .ctor(Fusion.NetworkObjectHeaderSnapshot snapshot)

Disassembly:
	0x01E978D8 MOV X19, X0
	0x01E978DC TBNZ X8, 0x0, 0x1E97924

ISIL:
	001 Move [X0], X1
	002 Return 

Method: System.Int32 GetChangedTickForBehaviour(System.Int32 index)

Disassembly:
	0x01E978E0 ADRP X0, 0x225C000
	0x01E978E4 LDR X0, [X0 + 0x5A8]
	0x01E978E8 BL 0x1C16CF4
	0x01E978EC ADRP X0, 0x2267000
	0x01E978F0 LDR X0, [X0 + 0x478]
	0x01E978F4 BL 0x1C16CF4
	0x01E978F8 ADRP X0, 0x2267000
	0x01E978FC LDR X0, [X0 + 0x480]
	0x01E97900 BL 0x1C16CF4
	0x01E97904 ADRP X0, 0x2267000
	0x01E97908 LDR X0, [X0 + 0x488]
	0x01E9790C BL 0x1C16CF4
	0x01E97910 ADRP X0, 0x2267000

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Compare X8, 0
	004 JumpIfEqual {15}
	005 Move X8, [X8+48]
	006 Compare X8, 0
	007 JumpIfEqual {15}
	008 NotImplemented "Instruction LDRSH not yet implemented."
	009 NotImplemented "Instruction LDRSH not yet implemented."
	010 Subtract X9, X9, X10
	011 Add X9, X9, W1
	012 Move W0, [X8]
	013 Move X30, [X31+16]
	014 Return X0
	015 Call 0x1C17F20

Method: System.Void CopyFrom(Fusion.NetworkObjectHeader* target)

Disassembly:
	0x01E97914 LDR X0, [X0 + 0x490]
	0x01E97918 BL 0x1C16CF4
	0x01E9791C MOVZ W8, 0x1
	0x01E97920 STRB W8, [X20 + 0x2B6]
	0x01E97924 LDR X0, [X19 + 0x20]
	0x01E97928 CBZ X0, 0x1E97A14
	0x01E9792C MOV X1, X31
	0x01E97930 BL 0x1EC0864
	0x01E97934 TBZ X0, 0x0, 0x1E97A78

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move X0, [X8+48]
	006 Move W2, [X8+44]
	007 Move X3, X31
	008 Move X30, [X31+16]
	009 Call Native.MemCpy, X0, X1, X2
	010 Return 
	011 Call 0x1C17F20

Method: System.Void CopyFrom(Fusion.NetworkObjectHeaderSnapshotRef target)

Disassembly:
	0x01E9794C LDR X8, [X19 + 0x68]
	0x01E97950 MOV X0, X19
	0x01E97954 UBFM X9, X8, 0x20, 0x3F
	0x01E97958 ANDS W31, W8, 0xFF
	0x01E9795C CSEL X20, X31, X9, EQ
	0x01E97960 BL 0x1E97268

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0]
	003 Compare X0, 0
	004 JumpIfEqual {6}
	005 Move X30, [X31+16]
	006 Call 0x1C17F20

Method: System.Void CopyTo(Fusion.NetworkObjectHeader* target)

Disassembly:
	0x01E9798C MOV X0, X19
	0x01E97990 BL 0x1E97268
	0x01E97994 CBZ X0, 0x1E97A90
	0x01E97998 LDR X0, [X0 + 0x10]
	0x01E9799C CBZ X0, 0x1E97A94
	0x01E979A0 ADRP X8, 0x2267000
	0x01E979A4 LDR X8, [X8 + 0x488]
	0x01E979A8 LDR X1, [X8]
	0x01E979AC BL 0x25D2974
	0x01E979B0 LDR W21, [X0 + 0x4]
	0x01E979B4 LDR X8, [X19 + 0xB0]

ISIL:
	001 Move [X31-16], X30
	002 Move X9, [X0]
	003 Compare X9, 0
	004 JumpIfEqual {13}
	005 Move X8, [X9+48]
	006 Move W2, [X9+44]
	007 Move X0, X1
	008 Move X3, X31
	009 Move X1, X8
	010 Move X30, [X31+16]
	011 Call Native.MemCpy, X0, X1, X2
	012 Return 
	013 Call 0x1C17F20

Method: System.Void CopyTo(Fusion.NetworkObjectHeaderSnapshotRef target)

Disassembly:
	0x01E979D0 B.GE 0x1E97A18
	0x01E979D4 LDRSH X10, [X8 + 0x4]
	0x01E979D8 LDR X0, [X24]
	0x01E979DC SUB X9, X10, X9
	0x01E979E0 ADD X9, X23, X9
	0x01E979E4 LDR W10, [X0 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0]
	003 Compare X0, 0
	004 JumpIfEqual {6}
	005 Move X30, [X31+16]
	006 Call 0x1C17F20

Method: System.Int32* GetBehaviourPtr(Fusion.NetworkBehaviour behaviour)

Disassembly:
	0x01E97A10 CBNZ X8, 0x1E979C8
	0x01E97A14 BL 0x1C16F20
	0x01E97A18 MOV X0, X19
	0x01E97A1C BL 0x1E97268
	0x01E97A20 LDR X8, [X19 + 0x20]
	0x01E97A24 CBZ X8, 0x1E97A14
	0x01E97A28 MOV X22, X0
	0x01E97A2C MOV X0, X8
	0x01E97A30 MOV X1, X31
	0x01E97A34 BL 0x1EC0524

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Compare X8, 0
	004 JumpIfEqual {12}
	005 Compare X1, 0
	006 JumpIfEqual {12}
	007 Move X8, [X8+48]
	008 NotImplemented "Instruction LDRSW not yet implemented."
	009 Add X0, X8, X9
	010 Move X30, [X31+16]
	011 Return X0
	012 Call 0x1C17F20

