Type: Fusion.ReflectionUtils/<GetAllSimulationBehaviourTypes>d__3

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01E8F324 BL 0x33C151C
	0x01E8F328 CMP W20, W0
	0x01E8F32C B.NE 0x1E8F338
	0x01E8F330 STR W31, [X19 + 0x10]
	0x01E8F334 B 0x1E8F364
	0x01E8F338 ADRP X8, 0x226F000
	0x01E8F33C LDR X8, [X8 + 0xA0]
	0x01E8F340 LDR X0, [X8]
	0x01E8F344 BL 0x1C16F10
	0x01E8F348 MOV X1, X31
	0x01E8F34C MOV X19, X0
	0x01E8F350 BL 0x33BDD8C
	0x01E8F354 MOV X0, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+32], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01E8FA84 ADRP X10, 0x226F000

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01E8FA88 LDR X10, [X10 + 0xF0]
	0x01E8FA8C ADD X8, X8, W9, 0x3, SXTW
	0x01E8FA90 LDR X20, [X8 + 0x20]
	0x01E8FA94 LDR X1, [X10]
	0x01E8FA98 MOV X0, X20
	0x01E8FA9C BL 0x21A891C
	0x01E8FAA0 LDR X19, [X31 + 0x18]
	0x01E8FAA4 CBNZ X0, 0x1E8FB4C
	0x01E8FAA8 LDR W9, [X19 + 0x38]
	0x01E8FAAC LDR X8, [X19 + 0x30]
	0x01E8FAB0 ADD W9, W9, 0x1
	0x01E8FAB4 STR W9, [X19 + 0x38]
	0x01E8FAB8 CBNZ X8, 0x1E8FA74
	0x01E8FABC BL 0x1C16F20
	0x01E8FAC0 LDR X20, [X19 + 0x28]
	0x01E8FAC4 STR X31, [X19 + 0x30]
	0x01E8FAC8 CBZ X20, 0x1E8F9C4
	0x01E8FACC ADRP X10, 0x2264000
	0x01E8FAD0 LDR X8, [X20]
	0x01E8FAD4 LDR X10, [X10 + 0xE18]
	0x01E8FAD8 LDRH W9, [X8 + 0x12E]
	0x01E8FADC LDR X1, [X10]
	0x01E8FAE0 CBZ X9, 0x1E8FB04
	0x01E8FAE4 LDR X10, [X8 + 0xB0]
	0x01E8FAE8 ADD X10, X10, 0x8
	0x01E8FAEC LDUR X11, [X10 - 0x8]
	0x01E8FAF0 CMP X11, X1
	0x01E8FAF4 B.EQ 0x1E8FB14
	0x01E8FAF8 SUBS X9, X9, 0x1
	0x01E8FAFC ADD X10, X10, 0x10
	0x01E8FB00 B.NE 0x1E8FAEC
	0x01E8FB04 MOV X0, X20
	0x01E8FB08 MOV W2, W31
	0x01E8FB0C BL 0x1C5C788
	0x01E8FB10 B 0x1E8FB20
	0x01E8FB14 LDRSW X9, [X10]
	0x01E8FB18 ADD X8, X8, X9, 0x4, LSL
	0x01E8FB1C ADD X0, X8, 0x138
	0x01E8FB20 LDP X8, X1, [X0]
	0x01E8FB24 MOV X0, X20
	0x01E8FB28 BLR X8
	0x01E8FB2C MOV W8, W0
	0x01E8FB30 LDR X0, [X31 + 0x18]
	0x01E8FB34 TBNZ X8, 0x0, 0x1E8F9E0
	0x01E8FB38 BL 0x1E8FBF4
	0x01E8FB3C LDR X8, [X31 + 0x18]
	0x01E8FB40 MOV W0, W31
	0x01E8FB44 STR X31, [X8 + 0x28]
	0x01E8FB48 B 0x1E8FB58
	0x01E8FB4C MOVZ W0, 0x1
	0x01E8FB50 STR X20, [X19 + 0x18]
	0x01E8FB54 STR W0, [X19 + 0x10]
	0x01E8FB58 LDP X20, X19, [X31 + 0x20]
	0x01E8FB5C LDR X30, [X31 + 0x10]
	0x01E8FB60 ADD X31, X31, 0x30
	0x01E8FB64 RET
	0x01E8FB68 BL 0x1C16F20
	0x01E8FB6C BL 0x1C16F20
	0x01E8FB70 BL 0x1C16F28
	0x01E8FB74 B 0x1E8FB94
	0x01E8FB78 B 0x1E8FB94
	0x01E8FB7C B 0x1E8FB94
	0x01E8FB80 B 0x1E8FB94
	0x01E8FB84 B 0x1E8FB94
	0x01E8FB88 B 0x1E8FB94
	0x01E8FB8C B 0x1E8FB94
	0x01E8FB90 B 0x1E8FB94
	0x01E8FB94 CMP W1, 0x1
	0x01E8FB98 B.NE 0x1E8FBC8
	0x01E8FB9C BL 0x3EB1AD0
	0x01E8FBA0 LDR X19, [X0]
	0x01E8FBA4 STR X19, [X31]
	0x01E8FBA8 BL 0x3EB1AE0
	0x01E8FBAC CBZ X19, 0x1E8F9D8
	0x01E8FBB0 ADD X8, X31, 0x0
	0x01E8FBB4 ADD X0, X8, 0x8
	0x01E8FBB8 BL 0x19964B4
	0x01E8FBBC MOV X0, X19
	0x01E8FBC0 BL 0x1C16F18
	0x01E8FBC4 CBNZ X19, 0x1E8FBCC
	0x01E8FBC8 BL 0x1D2C690
	0x01E8FBCC LDR X0, [X31 + 0x18]
	0x01E8FBD0 LDR W8, [X0 + 0x10]
	0x01E8FBD4 CMP W8, 0x1
	0x01E8FBD8 B.EQ 0x1E8FBE4
	0x01E8FBDC ADDS W31, W8, 0x3
	0x01E8FBE0 B.NE 0x1E8FBE8
	0x01E8FBE4 BL 0x1E8FBF4
	0x01E8FBE8 MOV X0, X19
	0x01E8FBEC BL 0x1C16F18
	0x01E8FBF0 BL 0x1990590
	0x01E8FBF4 STR X30, [X31 - 0x20]!
	0x01E8FBF8 STP X20, X19, [X31 + 0x10]
	0x01E8FBFC ADRP X19, 0x254A000
	0x01E8FC00 LDRB W8, [X19 + 0x266]
	0x01E8FC04 MOV X20, X0
	0x01E8FC08 TBNZ X8, 0x0, 0x1E8FC20
	0x01E8FC0C ADRP X0, 0x2264000
	0x01E8FC10 LDR X0, [X0 + 0xE00]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x254B000
	006 Move W8, [X20+603]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x226F000
	013 Move X0, [X0+2376]
	014 Call 0x1C17CF4
	015 Move X0, 0x2265000
	016 Move X0, [X0+1728]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+603], W8
	020 Move W8, [X19+16]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Compare W8, 0
	023 JumpIfNotEqual {43}
	024 Move TEMP, 0
	025 Not TEMP
	026 Move W8, TEMP
	027 Move X0, X31
	028 Move [X19+16], W8
	029 Call AppDomain.get_CurrentDomain
	030 Compare X0, 0
	031 JumpIfEqual {111}
	032 Move X1, X31
	033 Call AppDomain.GetAssemblies, X0
	034 Move W8, W31
	035 Move [X19+40], X0
	036 Move [X19+48], W31
	037 Compare X0, 0
	038 JumpIfNotEqual {99}
	039 Move TEMP, 0
	040 Not TEMP
	041 Move W8, TEMP
	042 Move [X19+16], W8
	043 Move W0, W31
	044 Add X8, X0, W8
	045 Move X0, [X8+32]
	046 Compare X0, 0
	047 JumpIfEqual {111}
	048 Move X8, [X0]
	049 Move X9, [X8+552]
	050 Move X1, [X8+560]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move W9, W31
	053 Move [X19+56], X0
	054 Move [X19+64], W31
	055 Compare X0, 0
	056 JumpIfNotEqual {90}
	057 Move X8, 0x2265000
	058 Move X8, [X8+1728]
	059 Move X10, 0x226F000
	060 Add X9, X0, W9
	061 Move X8, [X8]
	062 Move X10, [X10+2376]
	063 Move X20, [X9+32]
	064 Move W9, [X8+224]
	065 Move X21, [X10]
	066 Compare W9, 0
	067 JumpIfNotEqual {70}
	068 Move X0, X8
	069 Call 0x1C17DFC
	070 Move X0, X21
	071 Move X1, X31
	072 Call Type.GetTypeFromHandle, X0
	073 Compare X0, 0
	074 JumpIfEqual {111}
	075 Move X8, [X0]
	076 Move X1, X20
	077 Move X9, [X8+680]
	078 Move X2, [X8+688]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {103}
	084 Move W8, [X19+64]
	085 Move X0, [X19+56]
	086 Add W9, W8, 1
	087 Move [X19+64], W9
	088 Compare X0, 0
	089 JumpIfEqual {111}
	090 Move W8, [X0+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move W8, [X19+48]
	093 Move X0, [X19+40]
	094 Move [X19+56], X31
	095 Add W8, W8, 1
	096 Move [X19+48], W8
	097 Compare X0, 0
	098 JumpIfEqual {111}
	099 Move W9, [X0+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move W0, W31
	102 Move [X19+40], X31
	103 Move W0, 1
	104 Move [X19+24], X20
	105 Move [X19+16], W0
	106 Move X20, [X31+16]
	107 Move X19, [X31+24]
	108 Move X30, [X31+32]
	109 Move X21, [X31+40]
	110 Return X0
	111 Call 0x1C17F20
	112 Call 0x1C17F28

Method: System.Type System.Collections.Generic.IEnumerator<System.Type>.get_Current()

Disassembly:
	0x01E8FC14 BL 0x1C16CF4
	0x01E8FC18 MOVZ W8, 0x1

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01E8FC1C STRB W8, [X19 + 0x266]
	0x01E8FC20 LDR X19, [X20 + 0x28]
	0x01E8FC24 MOVN W8, 0x0
	0x01E8FC28 STR W8, [X20 + 0x10]
	0x01E8FC2C CBZ X19, 0x1E8FC78
	0x01E8FC30 ADRP X10, 0x2264000
	0x01E8FC34 LDR X8, [X19]
	0x01E8FC38 LDR X10, [X10 + 0xE00]
	0x01E8FC3C LDRH W9, [X8 + 0x12E]
	0x01E8FC40 LDR X1, [X10]
	0x01E8FC44 CBZ X9, 0x1E8FC68
	0x01E8FC48 LDR X10, [X8 + 0xB0]
	0x01E8FC4C ADD X10, X10, 0x8
	0x01E8FC50 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x2265000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2270000
	011 Move X0, [X0+184]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01E8FC54 CMP X11, X1
	0x01E8FC58 B.EQ 0x1E8FC84

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Collections.Generic.IEnumerator`1<System.Type> System.Collections.Generic.IEnumerable<System.Type>.GetEnumerator()

Disassembly:
	0x01E8FC5C SUBS X9, X9, 0x1
	0x01E8FC60 ADD X10, X10, 0x10
	0x01E8FC64 B.NE 0x1E8FC50
	0x01E8FC68 MOV X0, X19
	0x01E8FC6C MOV W2, W31
	0x01E8FC70 BL 0x1C5C788
	0x01E8FC74 B 0x1E8FC90
	0x01E8FC78 LDP X20, X19, [X31 + 0x10]
	0x01E8FC7C LDR X30, [X31], #0x20
	0x01E8FC80 RET
	0x01E8FC84 LDRSW X9, [X10]
	0x01E8FC88 ADD X8, X8, X9, 0x4, LSL
	0x01E8FC8C ADD X0, X8, 0x138
	0x01E8FC90 LDP X2, X1, [X0]
	0x01E8FC94 MOV X0, X19
	0x01E8FC98 LDP X20, X19, [X31 + 0x10]
	0x01E8FC9C LDR X30, [X31], #0x20
	0x01E8FCA0 BR X2
	0x01E8FCA4 LDR X0, [X0 + 0x18]
	0x01E8FCA8 RET
	0x01E8FCAC STP X30, X19, [X31 - 0x10]!
	0x01E8FCB0 ADRP X0, 0x2264000
	0x01E8FCB4 LDR X0, [X0 + 0xB40]
	0x01E8FCB8 BL 0x1C16D08
	0x01E8FCBC BL 0x1C16F10
	0x01E8FCC0 MOV X1, X31
	0x01E8FCC4 MOV X19, X0
	0x01E8FCC8 BL 0x3380310
	0x01E8FCCC ADRP X0, 0x226F000
	0x01E8FCD0 LDR X0, [X0 + 0xF8]
	0x01E8FCD4 BL 0x1C16D08
	0x01E8FCD8 MOV X1, X0
	0x01E8FCDC MOV X0, X19
	0x01E8FCE0 BL 0x1C16DEC
	0x01E8FCE4 LDR X0, [X0 + 0x18]
	0x01E8FCE8 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x254B000
	005 Move W8, [X20+604]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2270000
	012 Move X0, [X0+136]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+604], W8
	016 Move W8, [X19+16]
	017 Add W31, W8, 2
	018 Move W20, [X19+32]
	019 Move X0, X31
	020 Call Environment.get_CurrentManagedThreadId
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X19+16], W31
	023 Move X8, 0x2270000
	024 Move X8, [X8+136]
	025 Move X0, [X8]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X19, X0
	029 Call Object..ctor, X0
	030 Move X0, X31
	031 Move [X19+16], W31
	032 Call Environment.get_CurrentManagedThreadId
	033 Move [X19+32], W0
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x01E8FCEC STR X30, [X31 - 0x20]!

ISIL:
	001 Call <GetAllSimulationBehaviourTypes>d__3.System.Collections.Generic.IEnumerable<System.Type>.GetEnumerator, X0
	002 Return X0

