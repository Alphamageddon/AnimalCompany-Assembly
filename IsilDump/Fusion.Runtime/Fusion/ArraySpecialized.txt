Type: Fusion.ArraySpecialized

Method: System.Int32 FloorLog2(System.Int32 n)

Disassembly:
	0x01E86C88 BL 0x3EB1B00
	0x01E86C8C MOV X19, X0
	0x01E86C90 BL 0x3EB1AE0
	0x01E86C94 MOV X0, X19
	0x01E86C98 BL 0x1D2C690
	0x01E86C9C BL 0x1990590
	0x01E86CA0 CMP X0, 0x0
	0x01E86CA4 CSET W0, EQ
	0x01E86CA8 RET
	0x01E86CAC CMP X0, 0x0

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, W31
	003 Move W0, W0
	004 ShiftRight W0, 1
	005 And W0, W0, 0x7FFFFFFF
	006 Add W8, W8, 1
	007 Compare W0, 0
	008 JumpIfNotEqual {3}
	009 Move W8, W31
	010 Move W0, W8
	011 Return X0

Method: System.Void Swap(T[] a, System.Int32 i, System.Int32 j)

Disassembly:
	0x0217DA34 B.NE 0x217DA20
	0x0217DA38 MOV X0, X21
	0x0217DA3C MOV W2, W31
	0x0217DA40 BL 0x1C5C788
	0x0217DA44 B 0x217DA54
	0x0217DA48 LDRSW X9, [X10]
	0x0217DA4C ADD X8, X8, X9, 0x4, LSL
	0x0217DA50 ADD X0, X8, 0x138
	0x0217DA54 LDP X8, X1, [X0]
	0x0217DA58 MOV X0, X21
	0x0217DA5C BLR X8
	0x0217DA60 CMP W0, 0x1
	0x0217DA64 B.LT 0x217DB70
	0x0217DA68 ADRP X25, 0x1F77000
	0x0217DA6C LDR X25, [X25 + 0xE10]
	0x0217DA70 MOV W23, W0
	0x0217DA74 MOV W24, W31

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {17}
	004 Move W8, [X0+24]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add X8, X0, W1
	008 Add X9, X0, W2
	009 Move W10, [X9+32]
	010 Add X8, X8, 32
	011 Move W11, [X8]
	012 Move [X8], W10
	013 Move [X9+32], W11
	014 Move X30, [X31+16]
	015 Return 
	016 Call 0x1C17F28
	017 Call 0x1C17F20

Method: System.Void Sort(System.Int32[] array, System.Int32 index, System.Int32 length)

Disassembly:
	0x01E86CB0 CSET W0, NE
	0x01E86CB4 RET
	0x01E86CB8 STP X30, X21, [X31 - 0x20]!
	0x01E86CBC STP X20, X19, [X31 + 0x10]
	0x01E86CC0 ADRP X20, 0x2553000
	0x01E86CC4 ADRP X21, 0x226D000
	0x01E86CC8 LDRB W8, [X20 + 0x20D]
	0x01E86CCC LDR X21, [X21 + 0x598]
	0x01E86CD0 MOV X19, X0
	0x01E86CD4 TBNZ X8, 0x0, 0x1E86CEC
	0x01E86CD8 ADRP X0, 0x226D000
	0x01E86CDC LDR X0, [X0 + 0x598]
	0x01E86CE0 BL 0x1C16CF4
	0x01E86CE4 MOVZ W8, 0x1
	0x01E86CE8 STRB W8, [X20 + 0x20D]
	0x01E86CEC LDR X0, [X21]
	0x01E86CF0 LDR W8, [X0 + 0xE0]
	0x01E86CF4 CBNZ W8, 0x1E86CFC
	0x01E86CF8 BL 0x1C16DFC
	0x01E86CFC MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move X30, [X31+16]
	004 Return 
	005 Compare X0, 0
	006 JumpIfEqual {20}
	007 Move W8, [X0+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W3, W31
	010 Move W8, W8
	011 ShiftRight W8, 1
	012 And W8, W8, 0x7FFFFFFF
	013 Add W3, W3, 2
	014 Compare W8, 0
	015 JumpIfNotEqual {10}
	016 Move W3, W31
	017 Add W8, W1, W2
	018 Subtract W2, W8, 1
	019 Move X30, [X31+16]
	020 Call 0x1C17F20

Method: System.Int32 Compare(System.Int32 x, System.Int32 y)

Disassembly:
	0x01E86E14 LDR X22, [X22 + 0xEB0]
	0x01E86E18 LDR X20, [X20 + 0x838]

ISIL:
	001 Subtract W0, W0, W1
	002 Return X0

Method: System.Void SwapIfGreater(System.Int32[] array, System.Int32 a, System.Int32 b)

Disassembly:
	0x01E86E1C LDR X21, [X21 + 0xEB8]
	0x01E86E20 MOV X19, X0
	0x01E86E24 TBNZ X8, 0x0, 0x1E86E54
	0x01E86E28 ADRP X0, 0x2277000
	0x01E86E2C LDR X0, [X0 + 0xEB0]
	0x01E86E30 BL 0x1C16CF4
	0x01E86E34 ADRP X0, 0x2277000
	0x01E86E38 LDR X0, [X0 + 0xEB8]
	0x01E86E3C BL 0x1C16CF4
	0x01E86E40 ADRP X0, 0x226D000
	0x01E86E44 LDR X0, [X0 + 0x838]
	0x01E86E48 BL 0x1C16CF4
	0x01E86E4C MOVZ W8, 0x1
	0x01E86E50 STRB W8, [X23 + 0x20F]
	0x01E86E54 LDR X0, [X19]
	0x01E86E58 LDR X1, [X22]
	0x01E86E5C BL 0x21B44BC
	0x01E86E60 LDR X8, [X20]
	0x01E86E64 LDR X2, [X21]
	0x01E86E68 LDP X20, X19, [X31 + 0x20]
	0x01E86E6C LDP X22, X21, [X31 + 0x10]
	0x01E86E70 MOV X1, X0

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Compare X0, 0
	004 JumpIfEqual {21}
	005 Move W10, [X0+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add X8, X0, W1
	008 Add X8, X8, 32
	009 Move W9, [X8]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Add X10, X0, W2
	012 Add X10, X10, 32
	013 Move W11, [X10]
	014 Subtract W12, W9, W11
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move [X8], W11
	017 Move [X10], W9
	018 Move X30, [X31+16]
	019 Return 
	020 Call 0x1C17F28
	021 Call 0x1C17F20

Method: System.Void IntroSort(System.Int32[] array, System.Int32 lo, System.Int32 hi, System.Int32 depthLimit)

Disassembly:
	0x01E86D00 LDP X20, X19, [X31 + 0x10]
	0x01E86D04 MOV X1, X31
	0x01E86D08 LDP X30, X21, [X31], #0x20
	0x01E86D0C B 0x3C38948
	0x01E86D10 STP X30, X21, [X31 - 0x20]!
	0x01E86D14 STP X20, X19, [X31 + 0x10]
	0x01E86D18 ADRP X20, 0x2553000
	0x01E86D1C ADRP X21, 0x226D000
	0x01E86D20 LDRB W8, [X20 + 0x20E]
	0x01E86D24 LDR X21, [X21 + 0x598]
	0x01E86D28 MOV X19, X0
	0x01E86D2C TBNZ X8, 0x0, 0x1E86D44
	0x01E86D30 ADRP X0, 0x226D000
	0x01E86D34 LDR X0, [X0 + 0x598]
	0x01E86D38 BL 0x1C16CF4
	0x01E86D3C MOVZ W8, 0x1
	0x01E86D40 STRB W8, [X20 + 0x20E]
	0x01E86D44 LDR X0, [X21]
	0x01E86D48 LDR W8, [X0 + 0xE0]
	0x01E86D4C CBNZ W8, 0x1E86D54
	0x01E86D50 BL 0x1C16DFC
	0x01E86D54 MOV X0, X19
	0x01E86D58 MOV X1, X31
	0x01E86D5C BL 0x3C38948
	0x01E86D60 LDP X20, X19, [X31 + 0x10]
	0x01E86D64 ORN W8, W31, W0, 0x0
	0x01E86D68 AND W0, W8, 0x1
	0x01E86D6C LDP X30, X21, [X31], #0x20
	0x01E86D70 RET
	0x01E86D74 CBZ X0, 0x1E86D84
	0x01E86D78 LDRB W8, [X0 + 0x30]
	0x01E86D7C ANDS W31, W8, 0x8
	0x01E86D80 CSET W0, EQ
	0x01E86D84 RET
	0x01E86D88 CBZ X0, 0x1E86D98
	0x01E86D8C LDRB W8, [X0 + 0x30]
	0x01E86D90 UBFM W0, W8, 0x3, 0x3
	0x01E86D94 RET
	0x01E86D98 MOVZ W0, 0x1
	0x01E86D9C RET
	0x01E86DA0 CBZ X0, 0x1E86DB0
	0x01E86DA4 LDRB W8, [X0 + 0x60]
	0x01E86DA8 ANDS W31, W8, 0x2
	0x01E86DAC CSET W0, EQ
	0x01E86DB0 RET
	0x01E86DB4 CBZ X0, 0x1E86DC4
	0x01E86DB8 LDRB W8, [X0 + 0x60]
	0x01E86DBC UBFM W0, W8, 0x1, 0x1
	0x01E86DC0 RET
	0x01E86DC4 MOVZ W0, 0x1
	0x01E86DC8 RET
	0x01E86DCC CMP X0, X1
	0x01E86DD0 CSET W0, EQ
	0x01E86DD4 RET
	0x01E86DD8 CMP X0, 0x0
	0x01E86DDC CSET W8, NE
	0x01E86DE0 CMP X0, X1
	0x01E86DE4 CSET W9, EQ
	0x01E86DE8 AND W0, W8, W9, 0x0
	0x01E86DEC RET
	0x01E86DF0 RET
	0x01E86DF4 STP X30, X23, [X31 - 0x30]!
	0x01E86DF8 STP X22, X21, [X31 + 0x10]
	0x01E86DFC STP X20, X19, [X31 + 0x20]
	0x01E86E00 ADRP X23, 0x2553000
	0x01E86E04 ADRP X22, 0x2277000
	0x01E86E08 ADRP X20, 0x226D000
	0x01E86E0C ADRP X21, 0x2277000
	0x01E86E10 LDRB W8, [X23 + 0x20F]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W19, W2
	009 Move W20, W1
	010 Move X21, X0
	011 Subtract W22, W3, 1
	012 Subtract W8, W19, W20
	013 Add W9, W8, 1
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Add W31, W22, 1
	016 Move X0, X21
	017 Move W1, W20
	018 Move W2, W19
	019 Call ArraySpecialized.PickPivotAndPartition, X0, X1, X2
	020 Move W23, W0
	021 Add W1, W0, 1
	022 Move X0, X21
	023 Move W2, W19
	024 Move W3, W22
	025 Call ArraySpecialized.IntroSort, X0, X1, X2, X3
	026 Subtract W19, W23, 1
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Subtract W22, W22, 1
	029 Compare W8, 0
	030 JumpIfEqual {44}
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X0, X21
	033 Move W1, W20
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W2, W19
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Move X23, [X31+56]
	042 Call ArraySpecialized.InsertionSort, X0, X1, X2
	043 Return 
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Move X23, [X31+56]
	050 Return 
	051 Move X0, X21
	052 Move W1, W20
	053 Move W2, W19
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Move X23, [X31+56]
	060 Call ArraySpecialized.Heapsort, X0, X1, X2
	061 Return 
	062 Subtract W22, W19, 1
	063 Move X0, X21
	064 Move W1, W20
	065 Move W2, W22
	066 Call ArraySpecialized.SwapIfGreater, X0, X1, X2
	067 Move X0, X21
	068 Move W1, W20
	069 Move W2, W19
	070 Call ArraySpecialized.SwapIfGreater, X0, X1, X2
	071 Move X0, X21
	072 Move W1, W22
	073 Move W2, W19
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 Move X30, [X31+48]
	079 Move X23, [X31+56]
	080 Call ArraySpecialized.SwapIfGreater, X0, X1, X2
	081 Return 

Method: System.Int32 PickPivotAndPartition(System.Int32[] array, System.Int32 lo, System.Int32 hi)

Disassembly:
	0x01E87004 ADRP X0, 0x2276000
	0x01E87008 LDR X0, [X0 + 0xEE8]
	0x01E8700C BL 0x1C16D08
	0x01E87010 MOV X1, X0
	0x01E87014 MOV X0, X19
	0x01E87018 BL 0x1C16DEC
	0x01E8701C ADD W8, W1, 0x3F
	0x01E87020 CMP W1, 0x0
	0x01E87024 CSEL W8, W8, W1, LT
	0x01E87028 SBFM W8, W8, 0x6, 0x1F
	0x01E8702C LDR X9, [X0, W8, SXTW]
	0x01E87030 MOVZ W10, 0x1
	0x01E87034 LSLV X10, X10, X1
	0x01E87038 ORR X9, X9, X10, 0x0
	0x01E8703C STR X9, [X0, W8, SXTW]
	0x01E87040 RET
	0x01E87044 ADD W8, W1, 0x3F
	0x01E87048 CMP W1, 0x0
	0x01E8704C CSEL W8, W8, W1, LT
	0x01E87050 SBFM W8, W8, 0x6, 0x1F
	0x01E87054 LDR X9, [X0, W8, SXTW]
	0x01E87058 MOVZ W10, 0x1
	0x01E8705C LSLV X10, X10, X1
	0x01E87060 BIC X9, X9, X10, 0x0
	0x01E87064 STR X9, [X0, W8, SXTW]
	0x01E87068 RET
	0x01E8706C ADD W8, W1, 0x3F
	0x01E87070 CMP W1, 0x0
	0x01E87074 CSEL W8, W8, W1, LT
	0x01E87078 SBFM W8, W8, 0x6, 0x1F
	0x01E8707C LDR X8, [X0, W8, SXTW]
	0x01E87080 LSRV X8, X8, X1
	0x01E87084 AND W0, W8, 0x1
	0x01E87088 RET
	0x01E8708C ADD W8, W1, 0x3F
	0x01E87090 CMP W1, 0x0
	0x01E87094 CSEL W8, W8, W1, LT
	0x01E87098 SBFM W8, W8, 0x6, 0x1F
	0x01E8709C LDR X9, [X0, W8, SXTW]
	0x01E870A0 MOVZ W10, 0x1
	0x01E870A4 LSLV X10, X10, X1
	0x01E870A8 ANDS W31, W2, 0x1
	0x01E870AC BIC X11, X9, X10, 0x0
	0x01E870B0 ORR X9, X9, X10, 0x0
	0x01E870B4 CSEL X9, X9, X11, NE
	0x01E870B8 STR X9, [X0, W8, SXTW]
	0x01E870BC RET
	0x01E870C0 LDR X8, [X0]
	0x01E870C4 AND X8, X8, X1, 0x0
	0x01E870C8 STR X8, [X0]
	0x01E870CC RET
	0x01E870D0 LDR X8, [X0]
	0x01E870D4 ORR X8, X8, X1, 0x0
	0x01E870D8 STR X8, [X0]
	0x01E870DC RET
	0x01E870E0 LDR X8, [X0]
	0x01E870E4 EOR X8, X8, X1, 0x0
	0x01E870E8 STR X8, [X0]
	0x01E870EC RET
	0x01E870F0 LDR X8, [X0]
	0x01E870F4 BIC X8, X8, X1, 0x0
	0x01E870F8 STR X8, [X0]
	0x01E870FC RET
	0x01E87100 LDR X8, [X0]
	0x01E87104 ORN X8, X31, X8, 0x0
	0x01E87108 STR X8, [X0]
	0x01E8710C RET
	0x01E87110 STR X31, [X0]
	0x01E87114 RET
	0x01E87118 ADD W8, W1, 0x3F
	0x01E8711C CMP W1, 0x0
	0x01E87120 CSEL W8, W8, W1, LT
	0x01E87124 SBFM W8, W8, 0x6, 0x1F
	0x01E87128 LDR X8, [X0, W8, SXTW]
	0x01E8712C LSRV X8, X8, X1
	0x01E87130 AND W0, W8, 0x1
	0x01E87134 RET
	0x01E87138 STP X30, X21, [X31 - 0x20]!
	0x01E8713C STP X20, X19, [X31 + 0x10]
	0x01E87140 ADRP X21, 0x2552000
	0x01E87144 ADRP X20, 0x2273000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2553000
	007 Move W8, [X22+518]
	008 Move W21, W2
	009 Move W19, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2277000
	016 Move X0, [X0+3728]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+518], W8
	020 Subtract W8, W21, W19
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction CINC not yet implemented."
	023 Add W22, W19, W8
	024 Move X0, X20
	025 Move W1, W19
	026 Move W2, W22
	027 Call ArraySpecialized.SwapIfGreater, X0, X1, X2
	028 Move X0, X20
	029 Move W1, W19
	030 Move W2, W21
	031 Call ArraySpecialized.SwapIfGreater, X0, X1, X2
	032 Move X0, X20
	033 Move W1, W22
	034 Move W2, W21
	035 Call ArraySpecialized.SwapIfGreater, X0, X1, X2
	036 Compare X20, 0
	037 JumpIfEqual {82}
	038 Move W8, [X20+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X12, X20, W22
	041 Add X12, X12, 32
	042 Move W11, [X12]
	043 Subtract W10, W21, 1
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Add X9, X20, W10
	046 Add X9, X9, 32
	047 Move W13, [X9]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move [X12], W13
	050 Move [X9], W11
	051 Move W12, W10
	052 Add W19, W19, 1
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Add X13, X20, W19
	055 Add X13, X13, 32
	056 Move W14, [X13]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Subtract W12, W12, 1
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Add X15, X20, W12
	061 Add X15, X15, 32
	062 Move W16, [X15]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move [X13], W16
	066 Move [X15], W14
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Add X8, X20, W19
	070 Move W10, [X9]
	071 Move W11, [X8+32]
	072 Move [X8+32], W10
	073 Move [X9], W11
	074 Move W0, W19
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X30, [X31+48]
	080 Return X0
	081 Call 0x1C17F28
	082 Call 0x1C17F20

Method: System.Void Heapsort(System.Int32[] array, System.Int32 lo, System.Int32 hi)

Disassembly:
	0x01E86F10 B.CS 0x1E86F18
	0x01E86F14 RET
	0x01E86F18 STP X30, X19, [X31 - 0x10]!
	0x01E86F1C ADRP X0, 0x2275000
	0x01E86F20 LDR X0, [X0 + 0x760]
	0x01E86F24 BL 0x1C16D08
	0x01E86F28 BL 0x1C16F10
	0x01E86F2C MOV X19, X0
	0x01E86F30 ADRP X0, 0x2277000
	0x01E86F34 LDR X0, [X0 + 0xEC8]
	0x01E86F38 BL 0x1C16D08
	0x01E86F3C MOV X1, X0
	0x01E86F40 MOV X0, X19
	0x01E86F44 MOV X2, X31
	0x01E86F48 BL 0x3316014
	0x01E86F4C ADRP X0, 0x2277000
	0x01E86F50 LDR X0, [X0 + 0xED0]
	0x01E86F54 BL 0x1C16D08
	0x01E86F58 MOV X1, X0
	0x01E86F5C MOV X0, X19
	0x01E86F60 BL 0x1C16DEC
	0x01E86F64 STR X30, [X31 - 0x20]!
	0x01E86F68 STP X20, X19, [X31 + 0x10]
	0x01E86F6C CBZ X0, 0x1E86F8C
	0x01E86F70 LDR W8, [X0 + 0x18]
	0x01E86F74 CMP W8, 0x1
	0x01E86F78 B.NE 0x1E86FC0
	0x01E86F7C LDR X0, [X0 + 0x20]
	0x01E86F80 LDP X20, X19, [X31 + 0x10]
	0x01E86F84 LDR X30, [X31], #0x20
	0x01E86F88 RET
	0x01E86F8C ADRP X0, 0x2272000
	0x01E86F90 LDR X0, [X0 + 0x528]
	0x01E86F94 BL 0x1C16D08
	0x01E86F98 BL 0x1C16F10
	0x01E86F9C MOV X19, X0
	0x01E86FA0 ADRP X0, 0x2277000
	0x01E86FA4 LDR X0, [X0 + 0xED8]
	0x01E86FA8 BL 0x1C16D08
	0x01E86FAC MOV X1, X0
	0x01E86FB0 MOV X0, X19
	0x01E86FB4 MOV X2, X31
	0x01E86FB8 BL 0x330E100
	0x01E86FBC B 0x1E87004
	0x01E86FC0 ADRP X0, 0x2275000
	0x01E86FC4 LDR X0, [X0 + 0x578]
	0x01E86FC8 BL 0x1C16D08
	0x01E86FCC BL 0x1C16F10
	0x01E86FD0 MOV X19, X0
	0x01E86FD4 ADRP X0, 0x2277000
	0x01E86FD8 LDR X0, [X0 + 0xEE0]
	0x01E86FDC BL 0x1C16D08
	0x01E86FE0 MOV X20, X0
	0x01E86FE4 ADRP X0, 0x2277000
	0x01E86FE8 LDR X0, [X0 + 0xED8]
	0x01E86FEC BL 0x1C16D08
	0x01E86FF0 MOV X2, X0
	0x01E86FF4 MOV X0, X19
	0x01E86FF8 MOV X1, X20
	0x01E86FFC MOV X3, X31
	0x01E87000 BL 0x330E16C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x2554000
	009 Move W8, [X22+519]
	010 Move W19, W2
	011 Move W20, W1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x2278000
	018 Move X0, [X0+3728]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+519], W8
	022 Subtract W8, W19, W20
	023 Add W22, W8, 1
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W23, W22
	026 ShiftRight W23, 1
	027 And W23, W23, 0x7FFFFFFF
	028 Move X0, X21
	029 Move W1, W23
	030 Move W2, W22
	031 Move W3, W20
	032 Call ArraySpecialized.DownHeap, X0, X1, X2, X3
	033 Subtract W23, W23, 1
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Compare X21, 0
	036 JumpIfEqual {67}
	037 Add X8, X21, W20
	038 Move W9, W22
	039 Add X22, X8, 32
	040 Add X23, X9, 1
	041 Subtract W24, W31, W20
	042 Move W8, [X21+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Add X8, X21, W19
	046 Move W9, [X8+32]
	047 Move W10, [X22]
	048 Add W2, W24, W19
	049 Move W1, 1
	050 Move X0, X21
	051 Move W3, W20
	052 Move [X22], W9
	053 Move [X8+32], W10
	054 Call ArraySpecialized.DownHeap, X0, X1, X2, X3
	055 Subtract X23, X23, 1
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Subtract W19, W19, 1
	058 Move X20, [X31+48]
	059 Move X19, [X31+56]
	060 Move X22, [X31+32]
	061 Move X21, [X31+40]
	062 Move X24, [X31+16]
	063 Move X23, [X31+24]
	064 Move X30, [X31+64]
	065 Return 
	066 Call 0x1C17F28
	067 Call 0x1C17F20

Method: System.Void DownHeap(System.Int32[] array, System.Int32 i, System.Int32 n, System.Int32 lo)

Disassembly:
	0x01E87148 LDRB W8, [X21 + 0x211]
	0x01E8714C LDR X20, [X20 + 0xC68]
	0x01E87150 MOV X19, X0
	0x01E87154 TBNZ X8, 0x0, 0x1E8716C
	0x01E87158 ADRP X0, 0x2273000
	0x01E8715C LDR X0, [X0 + 0xC68]
	0x01E87160 BL 0x1C16CF4
	0x01E87164 MOVZ W8, 0x1
	0x01E87168 STRB W8, [X21 + 0x211]
	0x01E8716C LDR X0, [X20]
	0x01E87170 LDR X19, [X19]
	0x01E87174 LDR W8, [X0 + 0xE0]
	0x01E87178 CBNZ W8, 0x1E87180
	0x01E8717C BL 0x1C16DFC
	0x01E87180 UBFM X8, X19, 0x1, 0x3F
	0x01E87184 AND X8, X8, 0x5555555555555555
	0x01E87188 SUB X8, X19, X8
	0x01E8718C AND X9, X8, 0x3333333333333333
	0x01E87190 UBFM X8, X8, 0x2, 0x3F
	0x01E87194 AND X8, X8, 0x3333333333333333
	0x01E87198 ADD X8, X8, X9
	0x01E8719C ADD X8, X8, X8, 0x4, LSR
	0x01E871A0 AND X8, X8, 0xF0F0F0F0F0F0F0F
	0x01E871A4 ORR X9, X31, 0x101010101010101
	0x01E871A8 LDP X20, X19, [X31 + 0x10]
	0x01E871AC MUL X8, X8, X9
	0x01E871B0 UBFM X0, X8, 0x38, 0x3F
	0x01E871B4 LDP X30, X21, [X31], #0x20
	0x01E871B8 RET
	0x01E871BC LDR X8, [X0]
	0x01E871C0 CMP X8, 0x0
	0x01E871C4 CSET W0, NE
	0x01E871C8 RET
	0x01E871CC LDR X8, [X0]
	0x01E871D0 CMP X8, 0x0
	0x01E871D4 CSET W0, EQ
	0x01E871D8 RET
	0x01E871DC STP X30, X21, [X31 - 0x20]!
	0x01E871E0 STP X20, X19, [X31 + 0x10]
	0x01E871E4 ADRP X20, 0x2552000
	0x01E871E8 ADRP X21, 0x2276000
	0x01E871EC LDRB W8, [X20 + 0x212]
	0x01E871F0 LDR X21, [X21 + 0xEF0]
	0x01E871F4 MOV X19, X0
	0x01E871F8 TBNZ X8, 0x0, 0x1E87210
	0x01E871FC ADRP X0, 0x2276000
	0x01E87200 LDR X0, [X0 + 0xEF0]
	0x01E87204 BL 0x1C16CF4
	0x01E87208 MOVZ W8, 0x1
	0x01E8720C STRB W8, [X20 + 0x212]
	0x01E87210 LDR X3, [X21]
	0x01E87214 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {45}
	004 Move W8, [X0+24]
	005 Subtract W10, W3, 1
	006 Add W13, W10, W1
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Add X9, X0, W13
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W9, [X9+32]
	011 NotImplemented "Instruction CINC not yet implemented."
	012 NotImplemented "Instruction SBFM not yet implemented."
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move W12, W1
	015 ShiftRight W12, 31
	016 And W12, W12, 0x3FFFFFFF
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Add W13, W12, W3
	019 Subtract W14, W13, 1
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Add X15, X0, 32
	023 Move W14, [X15]
	024 Move W13, [X15]
	025 Subtract W13, W14, W13
	026 Or W12, W12, W13
	027 Add W14, W10, W12
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Add X13, X0, W14
	030 Move W15, [X13+32]
	031 Add W13, W10, W1
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Add X13, X0, W13
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W1, W12
	037 Move [X13+32], W15
	038 Move W13, W14
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X8, X0, W13
	041 Move [X8+32], W9
	042 Move X30, [X31+16]
	043 Return 
	044 Call 0x1C17F28
	045 Call 0x1C17F20

Method: System.Void InsertionSort(System.Int32[] array, System.Int32 lo, System.Int32 hi)

Disassembly:
	0x01E86E74 MOV X0, X8
	0x01E86E78 LDP X30, X23, [X31], #0x30
	0x01E86E7C B 0x226B7E8
	0x01E86E80 STR X1, [X0]
	0x01E86E84 RET
	0x01E86E88 RET
	0x01E86E8C STR X30, [X31 - 0x20]!
	0x01E86E90 STP X20, X19, [X31 + 0x10]
	0x01E86E94 ADRP X20, 0x2553000
	0x01E86E98 LDRB W8, [X20 + 0x210]
	0x01E86E9C MOV X19, X0
	0x01E86EA0 TBNZ X8, 0x0, 0x1E86EB8
	0x01E86EA4 ADRP X0, 0x2277000
	0x01E86EA8 LDR X0, [X0 + 0xEC0]
	0x01E86EAC BL 0x1C16CF4
	0x01E86EB0 MOVZ W8, 0x1
	0x01E86EB4 STRB W8, [X20 + 0x210]
	0x01E86EB8 LDR X0, [X19]
	0x01E86EBC CBZ X0, 0x1E86ECC
	0x01E86EC0 LDP X20, X19, [X31 + 0x10]
	0x01E86EC4 LDR X30, [X31], #0x20
	0x01E86EC8 B 0x1E86B98
	0x01E86ECC ADRP X8, 0x2277000
	0x01E86ED0 LDR X8, [X8 + 0xEC0]
	0x01E86ED4 LDP X20, X19, [X31 + 0x10]
	0x01E86ED8 LDR X0, [X8]
	0x01E86EDC LDR X30, [X31], #0x20
	0x01E86EE0 RET
	0x01E86EE4 LDR X1, [X0]
	0x01E86EE8 MOVN W0, 0x0
	0x01E86EEC RET
	0x01E86EF0 MOVN W8, 0x0
	0x01E86EF4 STR X1, [X0 + 0x8]
	0x01E86EF8 STR W8, [X0]
	0x01E86EFC RET
	0x01E86F00 MOVZ W0, 0x40
	0x01E86F04 RET
	0x01E86F08 ORR X8, X31, 0xFFFFFFFFFFFFFFFF
	0x01E86F0C CMP X0, X8

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Compare X0, 0
	004 JumpIfEqual {32}
	005 Move W8, [X0+24]
	006 Move X9, W1
	007 Move X10, W2
	008 Move X12, X9
	009 Add X11, X12, 1
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Add X13, X0, X11
	012 Move W13, [X13+32]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Add X14, X0, W12
	016 Move W14, [X14+32]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Add W15, W12, 1
	019 Subtract W12, W12, 1
	020 Add X15, X0, W15
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X15+32], W14
	023 Add W12, W12, 1
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Add X12, X0, W12
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move [X12+32], W13
	028 Move X12, X11
	029 Move X30, [X31+16]
	030 Return 
	031 Call 0x1C17F28
	032 Call 0x1C17F20

Method: System.Void Sort(Fusion.SimulationInput[] array, System.Int32 index, System.Int32 length)

Disassembly:
	0x01E87218 LDP X20, X19, [X31 + 0x10]
	0x01E8721C MOVZ W1, 0x1
	0x01E87220 MOVZ W2, 0x2B
	0x01E87224 LDP X30, X21, [X31], #0x20
	0x01E87228 B 0x21EB454
	0x01E8722C STP X30, X21, [X31 - 0x20]!
	0x01E87230 STP X20, X19, [X31 + 0x10]
	0x01E87234 ADRP X21, 0x2552000
	0x01E87238 LDRB W8, [X21 + 0x213]
	0x01E8723C MOV X20, X1
	0x01E87240 MOV X19, X0
	0x01E87244 TBNZ X8, 0x0, 0x1E8725C
	0x01E87248 ADRP X0, 0x2276000
	0x01E8724C LDR X0, [X0 + 0xEF8]
	0x01E87250 BL 0x1C16CF4
	0x01E87254 MOVZ W8, 0x1
	0x01E87258 STRB W8, [X21 + 0x213]
	0x01E8725C CBZ X20, 0x1E87278
	0x01E87260 ADRP X8, 0x2276000
	0x01E87264 LDR X8, [X8 + 0xEF8]

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move X30, [X31+16]
	004 Return 
	005 Compare X0, 0
	006 JumpIfEqual {20}
	007 Move W8, [X0+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W3, W31
	010 Move W8, W8
	011 ShiftRight W8, 1
	012 And W8, W8, 0x7FFFFFFF
	013 Add W3, W3, 2
	014 Compare W8, 0
	015 JumpIfNotEqual {10}
	016 Move W3, W31
	017 Add W8, W1, W2
	018 Subtract W2, W8, 1
	019 Move X30, [X31+16]
	020 Call 0x1C17F20

Method: System.Int32 Compare(Fusion.SimulationInput x, Fusion.SimulationInput y)

Disassembly:
	0x01E8737C ADD X31, X31, 0x30
	0x01E87380 RET
	0x01E87384 CMP X0, X1
	0x01E87388 CSET W0, EQ
	0x01E8738C RET
	0x01E87390 CMP X0, X1
	0x01E87394 CSET W0, NE
	0x01E87398 RET
	0x01E8739C SUB X31, X31, 0x10
	0x01E873A0 STR X31, [X31 + 0x8]
	0x01E873A4 LDR W8, [X0]
	0x01E873A8 ADD W8, W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {17}
	004 Move X0, [X0+32]
	005 Compare X0, 0
	006 JumpIfEqual {17}
	007 Compare X1, 0
	008 JumpIfEqual {17}
	009 Move X8, [X1+32]
	010 Compare X8, 0
	011 JumpIfEqual {17}
	012 Move W1, [X8]
	013 Move X2, X31
	014 Move X30, [X31+16]
	015 Call Tick.CompareTo, X0, X1
	016 Return X0
	017 Call 0x1C17F20

Method: System.Void SwapIfGreater(Fusion.SimulationInput[] array, System.Int32 a, System.Int32 b)

Disassembly:
	0x01E873AC CMP W8, 0x3F
	0x01E873B0 STR W8, [X0]
	0x01E873B4 B.GT 0x1E87478
	0x01E873B8 ADD X9, X0, 0x8
	0x01E873BC MOVZ W10, 0x1
	0x01E873C0 ADD X11, X31, 0x8
	0x01E873C4 ADD W12, W8, 0x3F
	0x01E873C8 CMP W8, 0x0
	0x01E873CC CSEL W12, W12, W8, LT
	0x01E873D0 SBFM W13, W12, 0x6, 0x1F
	0x01E873D4 LDR X14, [X9, W13, SXTW]
	0x01E873D8 AND W12, W12, 0xFFFFFFC0
	0x01E873DC SUB W15, W8, W12
	0x01E873E0 LSLV X12, X10, X15
	0x01E873E4 ANDS X12, X14, X12, 0x0
	0x01E873E8 STR X14, [X31 + 0x8]
	0x01E873EC B.NE 0x1E8746C
	0x01E873F0 CBZ X14, 0x1E87448
	0x01E873F4 SXTB W16, W15
	0x01E873F8 UBFM W17, W16, 0xA, 0xE
	0x01E873FC ADD W17, W15, W17
	0x01E87400 SBFM W17, W17, 0x5, 0x7
	0x01E87404 LDR W17, [X11, W17, SXTW]
	0x01E87408 CBZ W17, 0x1E87450
	0x01E8740C UBFM W16, W16, 0xB, 0xE
	0x01E87410 ADD W15, W15, W16
	0x01E87414 SBFM W15, W15, 0x4, 0x7
	0x01E87418 LDRH W15, [X11, W15, SXTW]
	0x01E8741C CBZ W15, 0x1E87458
	0x01E87420 MOV W15, W8
	0x01E87424 ADD W8, W8, 0x1
	0x01E87428 ADD W16, W15, 0x40
	0x01E8742C CMP W8, 0x0
	0x01E87430 CSINC W15, W16, W15, LT
	0x01E87434 CMP W13, W15, ASR
	0x01E87438 B.NE 0x1E8745C
	0x01E8743C LSRV X15, X14, X8
	0x01E87440 TBZ X15, 0x0, 0x1E87420
	0x01E87444 B 0x1E87484
	0x01E87448 ADD W8, W8, 0x40
	0x01E8744C B 0x1E8745C
	0x01E87450 ADD W8, W8, 0x20
	0x01E87454 B 0x1E8745C
	0x01E87458 ADD W8, W8, 0x10
	0x01E8745C CMP W8, 0x40
	0x01E87460 STR W8, [X0]
	0x01E87464 B.LT 0x1E873C4
	0x01E87468 MOVN W8, 0x0
	0x01E8746C CMP X12, 0x0
	0x01E87470 CSET W0, NE
	0x01E87474 B 0x1E8748C
	0x01E87478 MOV W0, W31
	0x01E8747C MOVN W8, 0x0
	0x01E87480 B 0x1E8748C
	0x01E87484 STR W8, [X0]
	0x01E87488 MOVZ W0, 0x1
	0x01E8748C STR W8, [X1]
	0x01E87490 ADD X31, X31, 0x10
	0x01E87494 RET
	0x01E87498 LDR W0, [X0 + 0x8]
	0x01E8749C RET
	0x01E874A0 MOVN W8, 0x0
	0x01E874A4 STR W8, [X0 + 0x8]
	0x01E874A8 RET
	0x01E874AC SUB X31, X31, 0x10
	0x01E874B0 STR X31, [X31 + 0x8]
	0x01E874B4 LDR W8, [X0 + 0x8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X20, X0
	011 Compare X0, 0
	012 JumpIfEqual {74}
	013 Move W9, [X20+24]
	014 Move W21, W1
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Add X25, X20, W21
	017 Add X25, X25, 32
	018 Move X8, [X25]
	019 Move W19, W2
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Add X24, X20, W19
	022 Add X24, X24, 32
	023 Move X9, [X24]
	024 Compare X8, 0
	025 JumpIfEqual {74}
	026 Move X0, [X8+32]
	027 Compare X0, 0
	028 JumpIfEqual {74}
	029 Compare X9, 0
	030 JumpIfEqual {74}
	031 Move X8, [X9+32]
	032 Compare X8, 0
	033 JumpIfEqual {74}
	034 Move W1, [X8]
	035 Move X2, X31
	036 Call Tick.CompareTo, X0, X1
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W8, [X20+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X23, [X24]
	042 Move X22, [X25]
	043 Compare X23, 0
	044 JumpIfEqual {52}
	045 Move X8, [X20]
	046 Move X0, X23
	047 Move X1, [X8+64]
	048 Call 0x1C17E00
	049 Compare X0, 0
	050 JumpIfEqual {76}
	051 Move W8, [X20+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move [X25], X23
	054 Compare X22, 0
	055 JumpIfEqual {63}
	056 Move X8, [X20]
	057 Move X0, X22
	058 Move X1, [X8+64]
	059 Call 0x1C17E00
	060 Compare X0, 0
	061 JumpIfEqual {76}
	062 Move W8, [X20+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move [X24], X22
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+64]
	072 Move X25, [X31+72]
	073 Return 
	074 Call 0x1C17F20
	075 Call 0x1C17F28
	076 Call 0x1C17F44
	077 Move X1, X31
	078 Call 0x1C17DEC

Method: System.Void IntroSort(Fusion.SimulationInput[] array, System.Int32 lo, System.Int32 hi, System.Int32 depthLimit)

Disassembly:
	0x01E87268 LDR X9, [X20]
	0x01E8726C LDR X8, [X8]
	0x01E87270 CMP X9, X8
	0x01E87274 B.EQ 0x1E87280
	0x01E87278 MOV W0, W31
	0x01E8727C B 0x1E87298
	0x01E87280 MOV X0, X20
	0x01E87284 BL 0x1C16E08
	0x01E87288 LDR X8, [X0]
	0x01E8728C LDR X9, [X19]
	0x01E87290 CMP X9, X8
	0x01E87294 CSET W0, EQ
	0x01E87298 LDP X20, X19, [X31 + 0x10]
	0x01E8729C LDP X30, X21, [X31], #0x20
	0x01E872A0 RET
	0x01E872A4 LDR X8, [X0]
	0x01E872A8 CMP X8, X1
	0x01E872AC CSET W0, EQ
	0x01E872B0 RET
	0x01E872B4 MOVN W1, 0x0
	0x01E872B8 RET
	0x01E872BC MOVN W8, 0x0
	0x01E872C0 STR X1, [X0]
	0x01E872C4 STR W8, [X0 + 0x8]
	0x01E872C8 RET
	0x01E872CC SUB X31, X31, 0x30
	0x01E872D0 STP X30, X21, [X31 + 0x10]
	0x01E872D4 STP X20, X19, [X31 + 0x20]
	0x01E872D8 ADRP X21, 0x2552000
	0x01E872DC ADRP X20, 0x2276000
	0x01E872E0 LDRB W8, [X21 + 0x214]
	0x01E872E4 LDR X20, [X20 + 0xF00]
	0x01E872E8 MOV X19, X0
	0x01E872EC TBNZ X8, 0x0, 0x1E87304
	0x01E872F0 ADRP X0, 0x2276000
	0x01E872F4 LDR X0, [X0 + 0xF00]
	0x01E872F8 BL 0x1C16CF4
	0x01E872FC MOVZ W8, 0x1
	0x01E87300 STRB W8, [X21 + 0x214]
	0x01E87304 LDR X0, [X20]
	0x01E87308 MOVN W8, 0x0
	0x01E8730C ADD X1, X31, 0x0
	0x01E87310 STP X19, X8, [X31]
	0x01E87314 BL 0x1C16E04
	0x01E87318 LDP X20, X19, [X31 + 0x20]
	0x01E8731C LDP X30, X21, [X31 + 0x10]
	0x01E87320 ADD X31, X31, 0x30
	0x01E87324 RET
	0x01E87328 SUB X31, X31, 0x30
	0x01E8732C STP X30, X21, [X31 + 0x10]
	0x01E87330 STP X20, X19, [X31 + 0x20]
	0x01E87334 ADRP X21, 0x2552000
	0x01E87338 ADRP X20, 0x2276000
	0x01E8733C LDRB W8, [X21 + 0x215]
	0x01E87340 LDR X20, [X20 + 0xF00]
	0x01E87344 MOV X19, X0
	0x01E87348 TBNZ X8, 0x0, 0x1E87360
	0x01E8734C ADRP X0, 0x2276000
	0x01E87350 LDR X0, [X0 + 0xF00]
	0x01E87354 BL 0x1C16CF4
	0x01E87358 MOVZ W8, 0x1
	0x01E8735C STRB W8, [X21 + 0x215]
	0x01E87360 LDR X0, [X20]
	0x01E87364 MOVN W8, 0x0
	0x01E87368 ADD X1, X31, 0x0
	0x01E8736C STP X19, X8, [X31]
	0x01E87370 BL 0x1C16E04
	0x01E87374 LDP X20, X19, [X31 + 0x20]
	0x01E87378 LDP X30, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W19, W2
	009 Move W20, W1
	010 Move X21, X0
	011 Subtract W22, W3, 1
	012 Subtract W8, W19, W20
	013 Add W9, W8, 1
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Add W31, W22, 1
	016 Move X0, X21
	017 Move W1, W20
	018 Move W2, W19
	019 Call ArraySpecialized.PickPivotAndPartition, X0, X1, X2
	020 Move W23, W0
	021 Add W1, W0, 1
	022 Move X0, X21
	023 Move W2, W19
	024 Move W3, W22
	025 Call ArraySpecialized.IntroSort, X0, X1, X2, X3
	026 Subtract W19, W23, 1
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Subtract W22, W22, 1
	029 Compare W8, 0
	030 JumpIfEqual {44}
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X0, X21
	033 Move W1, W20
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W2, W19
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Move X23, [X31+56]
	042 Call ArraySpecialized.InsertionSort, X0, X1, X2
	043 Return 
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Move X23, [X31+56]
	050 Return 
	051 Move X0, X21
	052 Move W1, W20
	053 Move W2, W19
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Move X23, [X31+56]
	060 Call ArraySpecialized.Heapsort, X0, X1, X2
	061 Return 
	062 Subtract W22, W19, 1
	063 Move X0, X21
	064 Move W1, W20
	065 Move W2, W22
	066 Call ArraySpecialized.SwapIfGreater, X0, X1, X2
	067 Move X0, X21
	068 Move W1, W20
	069 Move W2, W19
	070 Call ArraySpecialized.SwapIfGreater, X0, X1, X2
	071 Move X0, X21
	072 Move W1, W22
	073 Move W2, W19
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 Move X30, [X31+48]
	079 Move X23, [X31+56]
	080 Call ArraySpecialized.SwapIfGreater, X0, X1, X2
	081 Return 

Method: System.Int32 PickPivotAndPartition(Fusion.SimulationInput[] array, System.Int32 lo, System.Int32 hi)

Disassembly:
	0x01E876F0 MOV X19, X0
	0x01E876F4 ADRP X0, 0x2276000
	0x01E876F8 LDR X0, [X0 + 0xF08]
	0x01E876FC BL 0x1C16D08
	0x01E87700 MOV X20, X0
	0x01E87704 ADRP X0, 0x2276000
	0x01E87708 LDR X0, [X0 + 0xED8]
	0x01E8770C BL 0x1C16D08
	0x01E87710 MOV X2, X0
	0x01E87714 MOV X0, X19
	0x01E87718 MOV X1, X20
	0x01E8771C MOV X3, X31
	0x01E87720 BL 0x330E16C
	0x01E87724 ADRP X0, 0x2276000
	0x01E87728 LDR X0, [X0 + 0xF10]
	0x01E8772C BL 0x1C16D08
	0x01E87730 MOV X1, X0
	0x01E87734 MOV X0, X19
	0x01E87738 BL 0x1C16DEC
	0x01E8773C BL 0x3EB1B20
	0x01E87740 ADD W8, W1, 0x3F
	0x01E87744 CMP W1, 0x0
	0x01E87748 CSEL W8, W8, W1, LT
	0x01E8774C SBFM W8, W8, 0x6, 0x1F
	0x01E87750 LDR X9, [X0, W8, SXTW]
	0x01E87754 MOVZ W10, 0x1
	0x01E87758 LSLV X10, X10, X1
	0x01E8775C ORR X9, X9, X10, 0x0
	0x01E87760 STR X9, [X0, W8, SXTW]
	0x01E87764 RET
	0x01E87768 ADD W8, W1, 0x3F
	0x01E8776C CMP W1, 0x0
	0x01E87770 CSEL W8, W8, W1, LT
	0x01E87774 SBFM W8, W8, 0x6, 0x1F
	0x01E87778 LDR X9, [X0, W8, SXTW]
	0x01E8777C MOVZ W10, 0x1
	0x01E87780 LSLV X10, X10, X1
	0x01E87784 BIC X9, X9, X10, 0x0
	0x01E87788 STR X9, [X0, W8, SXTW]
	0x01E8778C RET
	0x01E87790 ADD W8, W1, 0x3F
	0x01E87794 CMP W1, 0x0
	0x01E87798 CSEL W8, W8, W1, LT
	0x01E8779C SBFM W8, W8, 0x6, 0x1F
	0x01E877A0 LDR X8, [X0, W8, SXTW]
	0x01E877A4 LSRV X8, X8, X1
	0x01E877A8 AND W0, W8, 0x1
	0x01E877AC RET
	0x01E877B0 ADD W8, W1, 0x3F
	0x01E877B4 CMP W1, 0x0
	0x01E877B8 CSEL W8, W8, W1, LT
	0x01E877BC SBFM W8, W8, 0x6, 0x1F
	0x01E877C0 LDR X9, [X0, W8, SXTW]
	0x01E877C4 MOVZ W10, 0x1
	0x01E877C8 LSLV X10, X10, X1
	0x01E877CC ANDS W31, W2, 0x1
	0x01E877D0 BIC X11, X9, X10, 0x0
	0x01E877D4 ORR X9, X9, X10, 0x0
	0x01E877D8 CSEL X9, X9, X11, NE
	0x01E877DC STR X9, [X0, W8, SXTW]
	0x01E877E0 RET
	0x01E877E4 SUB X31, X31, 0x30
	0x01E877E8 STR X30, [X31 + 0x20]
	0x01E877EC MRS X8, 0xC000
	0x01E877F0 LDR X9, [X8 + 0x28]
	0x01E877F4 STR X9, [X31 + 0x18]
	0x01E877F8 STP X1, X2, [X31 + 0x8]
	0x01E877FC LDP X9, X10, [X0]
	0x01E87800 AND X9, X9, X1, 0x0
	0x01E87804 STR X9, [X0]
	0x01E87808 LDR X9, [X31 + 0x10]
	0x01E8780C AND X9, X9, X10, 0x0
	0x01E87810 STR X9, [X0 + 0x8]
	0x01E87814 LDR X8, [X8 + 0x28]
	0x01E87818 LDR X9, [X31 + 0x18]
	0x01E8781C CMP X8, X9
	0x01E87820 B.NE 0x1E87830
	0x01E87824 LDR X30, [X31 + 0x20]
	0x01E87828 ADD X31, X31, 0x30
	0x01E8782C RET
	0x01E87830 BL 0x3EB1B20
	0x01E87834 SUB X31, X31, 0x30
	0x01E87838 STR X30, [X31 + 0x20]
	0x01E8783C MRS X8, 0xC000
	0x01E87840 LDR X9, [X8 + 0x28]
	0x01E87844 STR X9, [X31 + 0x18]
	0x01E87848 STP X1, X2, [X31 + 0x8]
	0x01E8784C LDP X9, X10, [X0]
	0x01E87850 ORR X9, X9, X1, 0x0
	0x01E87854 STR X9, [X0]
	0x01E87858 LDR X9, [X31 + 0x10]
	0x01E8785C ORR X9, X9, X10, 0x0
	0x01E87860 STR X9, [X0 + 0x8]
	0x01E87864 LDR X8, [X8 + 0x28]
	0x01E87868 LDR X9, [X31 + 0x18]
	0x01E8786C CMP X8, X9
	0x01E87870 B.NE 0x1E87880
	0x01E87874 LDR X30, [X31 + 0x20]
	0x01E87878 ADD X31, X31, 0x30
	0x01E8787C RET
	0x01E87880 BL 0x3EB1B20
	0x01E87884 SUB X31, X31, 0x30
	0x01E87888 STR X30, [X31 + 0x20]
	0x01E8788C MRS X8, 0xC000
	0x01E87890 LDR X9, [X8 + 0x28]
	0x01E87894 STR X9, [X31 + 0x18]
	0x01E87898 STP X1, X2, [X31 + 0x8]
	0x01E8789C LDP X9, X10, [X0]
	0x01E878A0 EOR X9, X9, X1, 0x0
	0x01E878A4 STR X9, [X0]
	0x01E878A8 LDR X9, [X31 + 0x10]
	0x01E878AC EOR X9, X9, X10, 0x0
	0x01E878B0 STR X9, [X0 + 0x8]
	0x01E878B4 LDR X8, [X8 + 0x28]
	0x01E878B8 LDR X9, [X31 + 0x18]
	0x01E878BC CMP X8, X9
	0x01E878C0 B.NE 0x1E878D0
	0x01E878C4 LDR X30, [X31 + 0x20]
	0x01E878C8 ADD X31, X31, 0x30
	0x01E878CC RET
	0x01E878D0 BL 0x3EB1B20
	0x01E878D4 SUB X31, X31, 0x30
	0x01E878D8 STR X30, [X31 + 0x20]
	0x01E878DC MRS X8, 0xC000
	0x01E878E0 LDR X9, [X8 + 0x28]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x2553000
	011 Move W8, [X22+520]
	012 Move W21, W2
	013 Move W19, W1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x2277000
	020 Move X0, [X0+3736]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+520], W8
	024 Subtract W8, W21, W19
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CINC not yet implemented."
	027 Add W22, W19, W8
	028 Move X0, X20
	029 Move W1, W19
	030 Move W2, W22
	031 Call ArraySpecialized.SwapIfGreater, X0, X1, X2
	032 Move X0, X20
	033 Move W1, W19
	034 Move W2, W21
	035 Call ArraySpecialized.SwapIfGreater, X0, X1, X2
	036 Move X0, X20
	037 Move W1, W22
	038 Move W2, W21
	039 Call ArraySpecialized.SwapIfGreater, X0, X1, X2
	040 Compare X20, 0
	041 JumpIfEqual {136}
	042 Move X8, [X20+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Subtract W21, W21, 1
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X9, W22
	047 Add X10, X20, 32
	048 Add X11, X20, X9
	049 Add X22, X10, W21
	050 Move X12, [X22]
	051 Move X23, [X11+32]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move [X10], X12
	054 Move [X22], X23
	055 Add W19, W19, 1
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move W24, W21
	058 Add X8, X20, W19
	059 Move X8, [X8+32]
	060 Compare X8, 0
	061 JumpIfEqual {136}
	062 Move X0, [X8+32]
	063 Compare X0, 0
	064 JumpIfEqual {136}
	065 Compare X23, 0
	066 JumpIfEqual {136}
	067 Move X8, [X23+32]
	068 Compare X8, 0
	069 JumpIfEqual {136}
	070 Move W1, [X8]
	071 Move X2, X31
	072 Call Tick.CompareTo, X0, X1
	073 Move TEMP, X0
	074 And TEMP, TEMP, -2147483648
	075 Compare TEMP, -2147483648
	076 JumpIfNotEqual {80}
	077 Move W8, [X20+24]
	078 Add W19, W19, 1
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X25, W19
	081 Move W8, [X20+24]
	082 Subtract W24, W24, 1
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X0, [X23+32]
	085 Compare X0, 0
	086 JumpIfEqual {136}
	087 Move X26, W24
	088 Add X8, X20, X26
	089 Move X8, [X8+32]
	090 Compare X8, 0
	091 JumpIfEqual {136}
	092 Move X8, [X8+32]
	093 Compare X8, 0
	094 JumpIfEqual {136}
	095 Move W1, [X8]
	096 Move X2, X31
	097 Call Tick.CompareTo, X0, X1
	098 Move TEMP, X0
	099 And TEMP, TEMP, -2147483648
	100 Compare TEMP, -2147483648
	101 JumpIfEqual {81}
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X8, [X20+24]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Add X9, X20, X25
	107 Add X10, X20, X26
	108 Move X11, [X10+32]
	109 Add X9, X9, 32
	110 Move X12, [X9]
	111 Add W19, W19, 1
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move [X9], X11
	114 Move [X10+32], X12
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move W8, [X20+24]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Add X8, X20, W19
	120 Move X9, [X22]
	121 Add X8, X8, 32
	122 Move X10, [X8]
	123 Move [X8], X9
	124 Move [X22], X10
	125 Move W0, W19
	126 Move X20, [X31+64]
	127 Move X19, [X31+72]
	128 Move X22, [X31+48]
	129 Move X21, [X31+56]
	130 Move X24, [X31+32]
	131 Move X23, [X31+40]
	132 Move X26, [X31+16]
	133 Move X25, [X31+24]
	134 Move X30, [X31+80]
	135 Return X0
	136 Call 0x1C17F20
	137 Call 0x1C17F28

Method: System.Void Heapsort(Fusion.SimulationInput[] array, System.Int32 lo, System.Int32 hi)

Disassembly:
	0x01E875FC STR X31, [X0]
	0x01E87600 STR W8, [X0 + 0x8]
	0x01E87604 RET
	0x01E87608 LDR V0, [X0]
	0x01E8760C MOVN W9, 0x0
	0x01E87610 STR X31, [X8]
	0x01E87614 STR W9, [X8]
	0x01E87618 STUR V0, [X8 + 0x8]
	0x01E8761C RET
	0x01E87620 MOVN W8, 0x0
	0x01E87624 STP X1, X2, [X0 + 0x8]
	0x01E87628 STR W8, [X0]
	0x01E8762C RET
	0x01E87630 MOVZ W0, 0x80
	0x01E87634 RET
	0x01E87638 SUB X31, X31, 0x40
	0x01E8763C STR X30, [X31 + 0x20]
	0x01E87640 STP X20, X19, [X31 + 0x30]
	0x01E87644 MRS X8, 0xC000
	0x01E87648 LDR X9, [X8 + 0x28]
	0x01E8764C STR X9, [X31 + 0x18]
	0x01E87650 CBZ X0, 0x1E876AC
	0x01E87654 LDR X9, [X0 + 0x18]
	0x01E87658 CMP W9, 0x2
	0x01E8765C B.NE 0x1E876E0
	0x01E87660 AND X9, X9, 0x0
	0x01E87664 STP X31, X31, [X31 + 0x8]
	0x01E87668 CBZ X9, 0x1E876A8
	0x01E8766C LDR X9, [X0 + 0x20]
	0x01E87670 STR X9, [X31 + 0x8]
	0x01E87674 LDR W9, [X0 + 0x18]
	0x01E87678 ANDS W31, W9, 0xFFFFFFFE
	0x01E8767C B.EQ 0x1E876A8
	0x01E87680 LDR X1, [X0 + 0x28]
	0x01E87684 LDR X0, [X31 + 0x8]
	0x01E87688 LDR X8, [X8 + 0x28]
	0x01E8768C LDR X9, [X31 + 0x18]
	0x01E87690 CMP X8, X9
	0x01E87694 B.NE 0x1E8773C
	0x01E87698 LDP X20, X19, [X31 + 0x30]
	0x01E8769C LDR X30, [X31 + 0x20]
	0x01E876A0 ADD X31, X31, 0x40
	0x01E876A4 RET
	0x01E876A8 BL 0x1C16F28
	0x01E876AC ADRP X0, 0x2271000
	0x01E876B0 LDR X0, [X0 + 0x528]
	0x01E876B4 BL 0x1C16D08
	0x01E876B8 BL 0x1C16F10
	0x01E876BC MOV X19, X0
	0x01E876C0 ADRP X0, 0x2276000
	0x01E876C4 LDR X0, [X0 + 0xED8]
	0x01E876C8 BL 0x1C16D08
	0x01E876CC MOV X1, X0
	0x01E876D0 MOV X0, X19
	0x01E876D4 MOV X2, X31
	0x01E876D8 BL 0x330E100
	0x01E876DC B 0x1E87724
	0x01E876E0 ADRP X0, 0x2274000
	0x01E876E4 LDR X0, [X0 + 0x578]
	0x01E876E8 BL 0x1C16D08
	0x01E876EC BL 0x1C16F10

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x2553000
	009 Move W8, [X22+521]
	010 Move W19, W2
	011 Move W20, W1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x2277000
	018 Move X0, [X0+3736]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+521], W8
	022 Subtract W8, W19, W20
	023 Add W22, W8, 1
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W23, W22
	026 ShiftRight W23, 1
	027 And W23, W23, 0x7FFFFFFF
	028 Move X0, X21
	029 Move W1, W23
	030 Move W2, W22
	031 Move W3, W20
	032 Call ArraySpecialized.DownHeap, X0, X1, X2, X3
	033 Subtract W23, W23, 1
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Compare X21, 0
	036 JumpIfEqual {67}
	037 Add X8, X21, W20
	038 Move W9, W22
	039 Add X22, X8, 32
	040 Add X23, X9, 1
	041 Subtract W24, W31, W20
	042 Move W8, [X21+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Add X8, X21, W19
	046 Move X9, [X8+32]
	047 Move X10, [X22]
	048 Add W2, W24, W19
	049 Move W1, 1
	050 Move X0, X21
	051 Move W3, W20
	052 Move [X22], X9
	053 Move [X8+32], X10
	054 Call ArraySpecialized.DownHeap, X0, X1, X2, X3
	055 Subtract X23, X23, 1
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Subtract W19, W19, 1
	058 Move X20, [X31+48]
	059 Move X19, [X31+56]
	060 Move X22, [X31+32]
	061 Move X21, [X31+40]
	062 Move X24, [X31+16]
	063 Move X23, [X31+24]
	064 Move X30, [X31+64]
	065 Return 
	066 Call 0x1C17F28
	067 Call 0x1C17F20

Method: System.Void DownHeap(Fusion.SimulationInput[] array, System.Int32 i, System.Int32 n, System.Int32 lo)

Disassembly:
	0x01E878E4 STR X9, [X31 + 0x18]
	0x01E878E8 STP X1, X2, [X31 + 0x8]
	0x01E878EC LDP X9, X10, [X0]
	0x01E878F0 BIC X9, X9, X1, 0x0
	0x01E878F4 STR X9, [X0]
	0x01E878F8 LDR X9, [X31 + 0x10]
	0x01E878FC BIC X9, X10, X9, 0x0
	0x01E87900 STR X9, [X0 + 0x8]
	0x01E87904 LDR X8, [X8 + 0x28]
	0x01E87908 LDR X9, [X31 + 0x18]
	0x01E8790C CMP X8, X9
	0x01E87910 B.NE 0x1E87920
	0x01E87914 LDR X30, [X31 + 0x20]
	0x01E87918 ADD X31, X31, 0x30
	0x01E8791C RET
	0x01E87920 BL 0x3EB1B20
	0x01E87924 LDP X8, X9, [X0]
	0x01E87928 ORN X8, X31, X8, 0x0
	0x01E8792C ORN X9, X31, X9, 0x0
	0x01E87930 STP X8, X9, [X0]
	0x01E87934 RET
	0x01E87938 STP X31, X31, [X0]
	0x01E8793C RET
	0x01E87940 ADD W8, W1, 0x3F
	0x01E87944 CMP W1, 0x0
	0x01E87948 CSEL W8, W8, W1, LT
	0x01E8794C SBFM W8, W8, 0x6, 0x1F
	0x01E87950 LDR X8, [X0, W8, SXTW]
	0x01E87954 LSRV X8, X8, X1
	0x01E87958 AND W0, W8, 0x1
	0x01E8795C RET
	0x01E87960 STP X30, X21, [X31 - 0x20]!
	0x01E87964 STP X20, X19, [X31 + 0x10]
	0x01E87968 ADRP X21, 0x2552000
	0x01E8796C ADRP X20, 0x2273000
	0x01E87970 LDRB W8, [X21 + 0x217]
	0x01E87974 LDR X20, [X20 + 0xC68]
	0x01E87978 MOV X19, X0
	0x01E8797C TBNZ X8, 0x0, 0x1E87994
	0x01E87980 ADRP X0, 0x2273000
	0x01E87984 LDR X0, [X0 + 0xC68]
	0x01E87988 BL 0x1C16CF4
	0x01E8798C MOVZ W8, 0x1
	0x01E87990 STRB W8, [X21 + 0x217]
	0x01E87994 LDR X0, [X20]
	0x01E87998 LDR X20, [X19]
	0x01E8799C LDR W8, [X0 + 0xE0]
	0x01E879A0 CBNZ W8, 0x1E879A8
	0x01E879A4 BL 0x1C16DFC
	0x01E879A8 UBFM X8, X20, 0x1, 0x3F
	0x01E879AC LDR X10, [X19 + 0x8]
	0x01E879B0 AND X8, X8, 0x5555555555555555
	0x01E879B4 SUB X8, X20, X8
	0x01E879B8 AND X11, X8, 0x3333333333333333
	0x01E879BC UBFM X8, X8, 0x2, 0x3F
	0x01E879C0 AND X8, X8, 0x3333333333333333
	0x01E879C4 ADD X8, X8, X11
	0x01E879C8 UBFM X11, X10, 0x1, 0x3F
	0x01E879CC AND X11, X11, 0x5555555555555555
	0x01E879D0 SUB X10, X10, X11
	0x01E879D4 AND X11, X10, 0x3333333333333333
	0x01E879D8 UBFM X10, X10, 0x2, 0x3F
	0x01E879DC AND X10, X10, 0x3333333333333333
	0x01E879E0 ADD X10, X10, X11
	0x01E879E4 ADD X8, X8, X8, 0x4, LSR
	0x01E879E8 ADD X10, X10, X10, 0x4, LSR
	0x01E879EC ORR X9, X31, 0x101010101010101
	0x01E879F0 AND X8, X8, 0xF0F0F0F0F0F0F0F
	0x01E879F4 AND X10, X10, 0xF0F0F0F0F0F0F0F
	0x01E879F8 LDP X20, X19, [X31 + 0x10]
	0x01E879FC MUL X8, X8, X9
	0x01E87A00 MUL X9, X10, X9
	0x01E87A04 UBFM X8, X8, 0x38, 0x3F
	0x01E87A08 UBFM X9, X9, 0x38, 0x3F
	0x01E87A0C ADD W0, W9, W8
	0x01E87A10 LDP X30, X21, [X31], #0x20
	0x01E87A14 RET
	0x01E87A18 LDR X8, [X0]
	0x01E87A1C CBZ X8, 0x1E87A28
	0x01E87A20 MOVZ W0, 0x1
	0x01E87A24 RET
	0x01E87A28 LDR X8, [X0 + 0x8]
	0x01E87A2C CMP X8, 0x0
	0x01E87A30 CSET W0, NE
	0x01E87A34 RET
	0x01E87A38 LDR X8, [X0]
	0x01E87A3C CBZ X8, 0x1E87A48
	0x01E87A40 MOV W0, W31
	0x01E87A44 RET
	0x01E87A48 LDR X8, [X0 + 0x8]
	0x01E87A4C CMP X8, 0x0
	0x01E87A50 CSET W0, EQ
	0x01E87A54 RET
	0x01E87A58 STP X30, X21, [X31 - 0x20]!
	0x01E87A5C STP X20, X19, [X31 + 0x10]
	0x01E87A60 ADRP X20, 0x2552000
	0x01E87A64 ADRP X21, 0x2276000
	0x01E87A68 LDRB W8, [X20 + 0x218]
	0x01E87A6C LDR X21, [X21 + 0xEF0]
	0x01E87A70 MOV X19, X0
	0x01E87A74 TBNZ X8, 0x0, 0x1E87A8C
	0x01E87A78 ADRP X0, 0x2276000
	0x01E87A7C LDR X0, [X0 + 0xEF0]
	0x01E87A80 BL 0x1C16CF4
	0x01E87A84 MOVZ W8, 0x1
	0x01E87A88 STRB W8, [X20 + 0x218]
	0x01E87A8C LDR X3, [X21]
	0x01E87A90 MOV X0, X19
	0x01E87A94 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Compare X0, 0
	013 JumpIfEqual {122}
	014 Move X8, [X0+24]
	015 Subtract W25, W3, 1
	016 Add W9, W25, W1
	017 Move W22, W3
	018 Move W20, W1
	019 Move X19, X0
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Add X9, X19, W9
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X21, [X9+32]
	024 NotImplemented "Instruction CINC not yet implemented."
	025 NotImplemented "Instruction SBFM not yet implemented."
	026 Move W23, W2
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Compare X21, 0
	029 JumpIfNotEqual {99}
	030 Move W27, W20
	031 Move W20, W27
	032 ShiftRight W20, 31
	033 And W20, W20, 0x3FFFFFFF
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Add W9, W20, W22
	036 Subtract W10, W9, 1
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add X8, X19, W10
	040 Move X8, [X8+32]
	041 Compare X8, 0
	042 JumpIfEqual {122}
	043 Move X0, [X8+32]
	044 Compare X0, 0
	045 JumpIfEqual {122}
	046 Add X8, X19, W9
	047 Move X8, [X8+32]
	048 Compare X8, 0
	049 JumpIfEqual {122}
	050 Move X8, [X8+32]
	051 Compare X8, 0
	052 JumpIfEqual {122}
	053 Move W1, [X8]
	054 Move X2, X31
	055 Call Tick.CompareTo, X0, X1
	056 Move X8, [X19+24]
	057 Or W20, W20, W0
	058 Add W24, W25, W20
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Add X28, X19, W24
	061 Add X28, X28, 32
	062 Move X8, [X28]
	063 Compare X21, 0
	064 JumpIfEqual {122}
	065 Move X0, [X21+32]
	066 Compare X0, 0
	067 JumpIfEqual {122}
	068 Compare X8, 0
	069 JumpIfEqual {122}
	070 Move X8, [X8+32]
	071 Compare X8, 0
	072 JumpIfEqual {122}
	073 Move W1, [X8]
	074 Move X2, X31
	075 Call Tick.CompareTo, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, -2147483648
	078 Compare TEMP, -2147483648
	079 JumpIfNotEqual {98}
	080 Move X8, [X19+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X24, [X28]
	083 Compare X24, 0
	084 JumpIfEqual {92}
	085 Move X8, [X19]
	086 Move X0, X24
	087 Move X1, [X8+64]
	088 Call 0x1C17E00
	089 Compare X0, 0
	090 JumpIfEqual {124}
	091 Move X8, [X19+24]
	092 Add W9, W25, W27
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Add X9, X19, W9
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move W27, W20
	097 Move [X9+32], X24
	098 Move W20, W27
	099 Move X8, [X19]
	100 Move X0, X21
	101 Move X1, [X8+64]
	102 Call 0x1C17E00
	103 Compare X0, 0
	104 JumpIfEqual {124}
	105 Move W9, [X19+24]
	106 Add W8, W25, W20
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Add X8, X19, W8
	109 Move [X8+32], X21
	110 Move X20, [X31+80]
	111 Move X19, [X31+88]
	112 Move X22, [X31+64]
	113 Move X21, [X31+72]
	114 Move X24, [X31+48]
	115 Move X23, [X31+56]
	116 Move X26, [X31+32]
	117 Move X25, [X31+40]
	118 Move X28, [X31+16]
	119 Move X27, [X31+24]
	120 Move X30, [X31+96]
	121 Return 
	122 Call 0x1C17F20
	123 Call 0x1C17F28
	124 Call 0x1C17F44
	125 Move X1, X31
	126 Call 0x1C17DEC

Method: System.Void InsertionSort(Fusion.SimulationInput[] array, System.Int32 lo, System.Int32 hi)

Disassembly:
	0x01E874B8 ADD W8, W8, 0x1
	0x01E874BC CMP W8, 0x3F
	0x01E874C0 STR W8, [X0 + 0x8]
	0x01E874C4 B.GT 0x1E87584
	0x01E874C8 LDR X9, [X0]
	0x01E874CC MOVZ W10, 0x1
	0x01E874D0 ADD X11, X31, 0x8
	0x01E874D4 ADD W12, W8, 0x3F
	0x01E874D8 CMP W8, 0x0
	0x01E874DC CSEL W12, W12, W8, LT
	0x01E874E0 SBFM W13, W12, 0x6, 0x1F
	0x01E874E4 LDR X14, [X9, W13, SXTW]
	0x01E874E8 AND W12, W12, 0xFFFFFFC0
	0x01E874EC SUB W15, W8, W12
	0x01E874F0 LSLV X12, X10, X15
	0x01E874F4 ANDS X12, X14, X12, 0x0
	0x01E874F8 STR X14, [X31 + 0x8]
	0x01E874FC B.NE 0x1E87578
	0x01E87500 CBZ X14, 0x1E87558
	0x01E87504 SXTB W16, W15
	0x01E87508 UBFM W17, W16, 0xA, 0xE
	0x01E8750C ADD W17, W15, W17
	0x01E87510 SBFM W17, W17, 0x5, 0x7
	0x01E87514 LDR W17, [X11, W17, SXTW]
	0x01E87518 CBZ W17, 0x1E87560
	0x01E8751C UBFM W16, W16, 0xB, 0xE
	0x01E87520 ADD W15, W15, W16
	0x01E87524 SBFM W15, W15, 0x4, 0x7
	0x01E87528 LDRH W15, [X11, W15, SXTW]
	0x01E8752C CBZ W15, 0x1E87568
	0x01E87530 MOV W15, W8
	0x01E87534 ADD W8, W8, 0x1
	0x01E87538 ADD W16, W15, 0x40
	0x01E8753C CMP W8, 0x0
	0x01E87540 CSINC W15, W16, W15, LT
	0x01E87544 CMP W13, W15, ASR
	0x01E87548 B.NE 0x1E8756C
	0x01E8754C LSRV X15, X14, X8
	0x01E87550 TBZ X15, 0x0, 0x1E87530
	0x01E87554 B 0x1E8758C
	0x01E87558 ADD W8, W8, 0x40
	0x01E8755C B 0x1E8756C
	0x01E87560 ADD W8, W8, 0x20
	0x01E87564 B 0x1E8756C
	0x01E87568 ADD W8, W8, 0x10
	0x01E8756C CMP W8, 0x40
	0x01E87570 STR W8, [X0 + 0x8]
	0x01E87574 B.LT 0x1E874D4
	0x01E87578 CMP X12, 0x0
	0x01E8757C CSET W0, NE
	0x01E87580 B 0x1E87594
	0x01E87584 MOV W0, W31
	0x01E87588 B 0x1E87594
	0x01E8758C STR W8, [X0 + 0x8]
	0x01E87590 MOVZ W0, 0x1
	0x01E87594 ADD X31, X31, 0x10
	0x01E87598 RET
	0x01E8759C SUB X31, X31, 0x30
	0x01E875A0 STP X30, X21, [X31 + 0x10]
	0x01E875A4 STP X20, X19, [X31 + 0x20]
	0x01E875A8 ADRP X21, 0x2552000
	0x01E875AC ADRP X20, 0x226C000
	0x01E875B0 LDRB W8, [X21 + 0x216]
	0x01E875B4 LDR X20, [X20 + 0x758]
	0x01E875B8 MOV X19, X0
	0x01E875BC TBNZ X8, 0x0, 0x1E875D4
	0x01E875C0 ADRP X0, 0x226C000
	0x01E875C4 LDR X0, [X0 + 0x758]
	0x01E875C8 BL 0x1C16CF4
	0x01E875CC MOVZ W8, 0x1
	0x01E875D0 STRB W8, [X21 + 0x216]
	0x01E875D4 LDR W8, [X19 + 0x8]
	0x01E875D8 LDR X0, [X20]
	0x01E875DC ADD X1, X31, 0xC
	0x01E875E0 STR W8, [X31 + 0xC]
	0x01E875E4 BL 0x1C16E04
	0x01E875E8 LDP X20, X19, [X31 + 0x20]
	0x01E875EC LDP X30, X21, [X31 + 0x10]
	0x01E875F0 ADD X31, X31, 0x30
	0x01E875F4 RET
	0x01E875F8 MOVN W8, 0x0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X20, X0
	012 Compare X0, 0
	013 JumpIfEqual {88}
	014 Move X8, [X20+24]
	015 Move W19, W1
	016 Move X23, W19
	017 Move X24, W2
	018 Move X26, X23
	019 Add X25, X26, 1
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Add X9, X20, X25
	022 Move X21, [X9+32]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Compare X21, 0
	025 JumpIfNotEqual {65}
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Add X22, X20, W26
	028 Add X22, X22, 32
	029 Move X8, [X22]
	030 Compare X21, 0
	031 JumpIfEqual {88}
	032 Move X0, [X21+32]
	033 Compare X0, 0
	034 JumpIfEqual {88}
	035 Compare X8, 0
	036 JumpIfEqual {88}
	037 Move X8, [X8+32]
	038 Compare X8, 0
	039 JumpIfEqual {88}
	040 Move W1, [X8]
	041 Move X2, X31
	042 Call Tick.CompareTo, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, -2147483648
	045 Compare TEMP, -2147483648
	046 JumpIfNotEqual {65}
	047 Move X8, [X20+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X22, [X22]
	050 Compare X22, 0
	051 JumpIfEqual {59}
	052 Move X8, [X20]
	053 Move X0, X22
	054 Move X1, [X8+64]
	055 Call 0x1C17E00
	056 Compare X0, 0
	057 JumpIfEqual {90}
	058 Move X8, [X20+24]
	059 Add W9, W26, 1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract W26, W26, 1
	062 Add X9, X20, W9
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move [X9+32], X22
	065 Move X8, [X20]
	066 Move X0, X21
	067 Move X1, [X8+64]
	068 Call 0x1C17E00
	069 Compare X0, 0
	070 JumpIfEqual {90}
	071 Move X8, [X20+24]
	072 Add W9, W26, 1
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Add X9, X20, W9
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X26, X25
	077 Move [X9+32], X21
	078 Move X20, [X31+64]
	079 Move X19, [X31+72]
	080 Move X22, [X31+48]
	081 Move X21, [X31+56]
	082 Move X24, [X31+32]
	083 Move X23, [X31+40]
	084 Move X26, [X31+16]
	085 Move X25, [X31+24]
	086 Move X30, [X31+80]
	087 Return 
	088 Call 0x1C17F20
	089 Call 0x1C17F28
	090 Call 0x1C17F44
	091 Move X1, X31
	092 Call 0x1C17DEC

