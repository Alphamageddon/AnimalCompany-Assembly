Type: POpusCodec.OpusLib

Method: System.String get_Version()

Disassembly:
	0x035524B4 ADD X31, X31, 0x70
	0x035524B8 RET
	0x035524BC SUB X31, X31, 0x40
	0x035524C0 STP X30, X23, [X31 + 0x10]
	0x035524C4 STP X22, X21, [X31 + 0x20]
	0x035524C8 STP X20, X19, [X31 + 0x30]
	0x035524CC ADRP X22, 0xE8D000
	0x035524D0 LDRB W8, [X22 + 0xCD1]
	0x035524D4 MOV W19, W2
	0x035524D8 MOV X21, X1
	0x035524DC MOV X20, X0
	0x035524E0 TBNZ X8, 0x0, 0x3552510
	0x035524E4 ADRP X0, 0xBCC000
	0x035524E8 LDR X0, [X0 + 0xB88]
	0x035524EC BL 0x1C16CF4
	0x035524F0 ADRP X0, 0xBA1000
	0x035524F4 LDR X0, [X0 + 0x618]
	0x035524F8 BL 0x1C16CF4
	0x035524FC ADRP X0, 0xBC9000
	0x03552500 LDR X0, [X0 + 0x850]
	0x03552504 BL 0x1C16CF4
	0x03552508 MOVZ W8, 0x1
	0x0355250C STRB W8, [X22 + 0xCD1]
	0x03552510 LDR X8, [X20 + 0x40]
	0x03552514 CBZ X8, 0x35525B8
	0x03552518 ADRP X23, 0xBC9000
	0x0355251C LDR X22, [X20 + 0x38]
	0x03552520 LDR X23, [X23 + 0x850]
	0x03552524 CBZ X22, 0x3552534
	0x03552528 LDR W8, [X22 + 0x18]
	0x0355252C CMP W8, W19
	0x03552530 B.GE 0x3552550
	0x03552534 ADRP X8, 0xBA1000
	0x03552538 LDR X8, [X8 + 0x618]
	0x0355253C MOV W1, W19
	0x03552540 LDR X0, [X8]
	0x03552544 BL 0x1C16D6C
	0x03552548 MOV X22, X0
	0x0355254C STR X0, [X20 + 0x38]
	0x03552550 LDR X0, [X23]
	0x03552554 ADRP X23, 0xBCC000
	0x03552558 LDR W8, [X0 + 0xE0]
	0x0355255C LDR X23, [X23 + 0xB88]
	0x03552560 CBNZ W8, 0x3552568
	0x03552564 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE8E000
	005 Move X19, 0xBCA000
	006 Move W8, [X20+3277]
	007 Move X19, [X19+2128]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0xBCA000
	013 Move X0, [X0+2128]
	014 Call 0x1C17CF4
	015 Move X0, 0xBD0000
	016 Move X0, [X0+2448]
	017 Call 0x1C17CF4
	018 Move X0, 0xBA2000
	019 Move X0, [X0+2440]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3277], W8
	023 Call Wrapper.opus_get_version_string
	024 Move X8, [X19]
	025 Move X19, X0
	026 Move W9, [X8+224]
	027 Compare W9, 0
	028 JumpIfNotEqual {31}
	029 Move X0, X8
	030 Call 0x1C17DFC
	031 Move X20, 0xBA2000
	032 Move X20, [X20+2440]
	033 Move X0, X19
	034 Move X1, X31
	035 Call Marshal.PtrToStringAnsi, X0
	036 Compare X0, 0
	037 JumpIfEqual {46}
	038 Move X1, [X20]
	039 Move X2, X31
	040 Move X19, X0
	041 Call String.op_Equality, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {49}
	046 Move X8, 0xBD0000
	047 Move X8, [X8+2448]
	048 Move X19, [X8]
	049 Move X8, [X20]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CSEL not yet implemented."
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Return X0

