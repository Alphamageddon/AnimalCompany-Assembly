Type: POpusCodec.OpusException

Method: POpusCodec.Enums.OpusStatusCode get_StatusCode()

Disassembly:
	0x03553CD0 BL 0x1C16F28
	0x03553CD4 BL 0x1C16F28

ISIL:
	001 Move W0, [X0+140]
	002 Return X0

Method: System.Void .ctor(POpusCodec.Enums.OpusStatusCode statusCode, System.String message)

Disassembly:
	0x035533B8 ADRP X10, 0xFFFFFFFFFD5B1000
	0x035533BC ADD X8, X8, 0x155
	0x035533C0 MOVZ W9, 0x9
	0x035533C4 ADD X10, X10, 0x8E6
	0x035533C8 MOVZ W11, 0x15
	0x035533CC MOVZ W13, 0x4
	0x035533D0 ADD X0, X31, 0x0
	0x035533D4 STP X8, X9, [X31]
	0x035533D8 STP X10, X11, [X31 + 0x10]
	0x035533DC STR W13, [X31 + 0x28]
	0x035533E0 STR D0, [X31 + 0x20]
	0x035533E4 STRB W31, [X31 + 0x2C]
	0x035533E8 BL 0x1C1729C
	0x035533EC MOV X8, X0
	0x035533F0 STR X0, [X20 + 0xD38]
	0x035533F4 MOV W0, W19
	0x035533F8 BLR X8
	0x035533FC LDP X20, X19, [X31 + 0x40]
	0x03553400 LDR X30, [X31 + 0x30]
	0x03553404 ADD X31, X31, 0x50
	0x03553408 RET
	0x0355340C SUB X31, X31, 0x60
	0x03553410 STR X30, [X31 + 0x30]
	0x03553414 STP X22, X21, [X31 + 0x40]
	0x03553418 STP X20, X19, [X31 + 0x50]
	0x0355341C ADRP X22, 0xE8C000
	0x03553420 LDR X8, [X22 + 0xD40]
	0x03553424 MOV W19, W2
	0x03553428 MOV W20, W1
	0x0355342C MOV X21, X0
	0x03553430 CBNZ X8, 0x355347C
	0x03553434 ADRP X12, 0xFFFFFFFFFD59A000
	0x03553438 LDR V0, [X12 + 0xEC0]
	0x0355343C ADRP X8, 0xFFFFFFFFFD5CB000
	0x03553440 ADRP X10, 0xFFFFFFFFFD5BB000
	0x03553444 ADD X8, X8, 0x155
	0x03553448 MOVZ W9, 0x9
	0x0355344C ADD X10, X10, 0x638
	0x03553450 MOVZ W11, 0x11
	0x03553454 MOVZ W13, 0x10
	0x03553458 ADD X0, X31, 0x0
	0x0355345C STP X8, X9, [X31]
	0x03553460 STP X10, X11, [X31 + 0x10]
	0x03553464 STR W13, [X31 + 0x28]
	0x03553468 STR D0, [X31 + 0x20]
	0x0355346C STRB W31, [X31 + 0x2C]
	0x03553470 BL 0x1C1729C
	0x03553474 MOV X8, X0
	0x03553478 STR X0, [X22 + 0xD40]
	0x0355347C MOV X0, X21
	0x03553480 MOV W1, W20
	0x03553484 MOV W2, W19
	0x03553488 BLR X8
	0x0355348C LDP X20, X19, [X31 + 0x50]
	0x03553490 LDP X22, X21, [X31 + 0x40]
	0x03553494 LDR X30, [X31 + 0x30]
	0x03553498 ADD X31, X31, 0x60
	0x0355349C RET
	0x035534A0 SUB X31, X31, 0x50
	0x035534A4 STR X30, [X31 + 0x30]
	0x035534A8 STP X20, X19, [X31 + 0x40]
	0x035534AC ADRP X20, 0xE8C000
	0x035534B0 LDR X8, [X20 + 0xD48]
	0x035534B4 MOV X19, X0
	0x035534B8 CBNZ X8, 0x3553504

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+48], X26
	004 Move [X31+56], X25
	005 Move [X31+64], X24
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X25, 0xE8D000
	012 Move X26, 0xBE3000
	013 Move X23, 0xBA2000
	014 Move X24, 0xBA2000
	015 Move X22, 0xBA1000
	016 Move W8, [X25+3286]
	017 Move X26, [X26+672]
	018 Move X23, [X23+1552]
	019 Move X24, [X24+1544]
	020 Move X22, [X22+2000]
	021 Move X21, X2
	022 Move W19, W1
	023 Move X20, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {42}
	028 Move X0, 0xBA1000
	029 Move X0, [X0+2000]
	030 Call 0x1C17CF4
	031 Move X0, 0xBE3000
	032 Move X0, [X0+672]
	033 Call 0x1C17CF4
	034 Move X0, 0xBA2000
	035 Move X0, [X0+1544]
	036 Call 0x1C17CF4
	037 Move X0, 0xBA2000
	038 Move X0, [X0+1552]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X25+3286], W8
	042 Move X8, [X26]
	043 Move TEMP, 0
	044 Not TEMP
	045 Move X9, TEMP
	046 Add X0, X31, 8
	047 Move X1, X31
	048 Move [X31+8], X8
	049 Move [X31+16], X9
	050 Move [X31+24], W19
	051 Call Enum.ToString, X0
	052 Move X1, [X23]
	053 Move X3, [X24]
	054 Move X2, X0
	055 Move X0, X21
	056 Move X4, X31
	057 Call String.Concat, X0, X1, X2, X3
	058 Move X8, [X22]
	059 Move X21, X0
	060 Move W9, [X8+224]
	061 Compare W9, 0
	062 JumpIfNotEqual {65}
	063 Move X0, X8
	064 Call 0x1C17DFC
	065 Move X0, X20
	066 Move X1, X21
	067 Move X2, X31
	068 Call Exception..ctor, X0, X1
	069 Move [X20+140], W19
	070 Move X20, [X31+96]
	071 Move X19, [X31+104]
	072 Move X22, [X31+80]
	073 Move X21, [X31+88]
	074 Move X24, [X31+64]
	075 Move X23, [X31+72]
	076 Move X26, [X31+48]
	077 Move X25, [X31+56]
	078 Move X30, [X31+32]
	079 Add X31, X31, 112
	080 Return 

