Type: POpusCodec.OpusDecoderAsync`1

Method: System.Void DataCallbackStatic(System.IntPtr handle, System.IntPtr p, System.Int32 count, System.Boolean endOfStream)

Disassembly:
	0x0249C57C SUB X31, X31, 0xC0
	0x0249C580 STR X30, [X31 + 0x80]
	0x0249C584 STP X24, X23, [X31 + 0x90]
	0x0249C588 STP X22, X21, [X31 + 0xA0]
	0x0249C58C STP X20, X19, [X31 + 0xB0]
	0x0249C590 ADRP X23, 0x1F3D000
	0x0249C594 LDRB W8, [X23 + 0xB9E]
	0x0249C598 MOV X20, X5
	0x0249C59C MOV W19, W4
	0x0249C5A0 MOV W22, W2
	0x0249C5A4 MOV X24, X1
	0x0249C5A8 MOV X21, X0
	0x0249C5AC TBNZ X8, 0x0, 0x249C5D0
	0x0249C5B0 ADRP X0, 0x1C7F000
	0x0249C5B4 LDR X0, [X0 + 0x820]
	0x0249C5B8 BL 0x1C16CF4
	0x0249C5BC ADRP X0, 0x1C57000
	0x0249C5C0 LDR X0, [X0 + 0x638]
	0x0249C5C4 BL 0x1C16CF4
	0x0249C5C8 MOVZ W8, 0x1
	0x0249C5CC STRB W8, [X23 + 0xB9E]
	0x0249C5D0 LDRB W8, [X21 + 0x18]
	0x0249C5D4 LDR X23, [X21 + 0x28]
	0x0249C5D8 CBZ W8, 0x249C660
	0x0249C5DC LDP V2, V0, [X24 + 0x10]
	0x0249C5E0 LDR X8, [X24 + 0x30]
	0x0249C5E4 LDR V1, [X24]
	0x0249C5E8 ADRP X9, 0x1C57000
	0x0249C5EC LDR X9, [X9 + 0x638]
	0x0249C5F0 STR X8, [X31 + 0x30]
	0x0249C5F4 STP V2, V0, [X31 + 0x10]
	0x0249C5F8 STR V1, [X31]
	0x0249C5FC LDR X0, [X21 + 0x38]
	0x0249C600 LDR X1, [X9]
	0x0249C604 LDR W24, [X21 + 0x34]
	0x0249C608 BL 0x1C16E00
	0x0249C60C MOV X2, X0
	0x0249C610 ADD X1, X31, 0x0
	0x0249C614 MOV X0, X23
	0x0249C618 MOV W3, W24
	0x0249C61C MOV W4, W22
	0x0249C620 MOV X5, X31
	0x0249C624 BL 0x35540D0
	0x0249C628 CBZ W0, 0x249C648
	0x0249C62C LDR X8, [X20 + 0x20]
	0x0249C630 LDR X1, [X21 + 0x38]
	0x0249C634 AND W2, W19, 0x1
	0x0249C638 MOV X0, X21
	0x0249C63C LDR X8, [X8 + 0xC0]
	0x0249C640 LDR X3, [X8 + 0x40]
	0x0249C644 BL 0x249C6B4
	0x0249C648 LDP X20, X19, [X31 + 0xB0]
	0x0249C64C LDP X22, X21, [X31 + 0xA0]
	0x0249C650 LDP X24, X23, [X31 + 0x90]
	0x0249C654 LDR X30, [X31 + 0x80]
	0x0249C658 ADD X31, X31, 0xC0
	0x0249C65C RET
	0x0249C660 LDP V2, V0, [X24 + 0x10]
	0x0249C664 LDR X8, [X24 + 0x30]
	0x0249C668 LDR V1, [X24]
	0x0249C66C ADRP X9, 0x1C7F000
	0x0249C670 LDR X9, [X9 + 0x820]
	0x0249C674 STR X8, [X31 + 0x70]
	0x0249C678 STP V2, V0, [X31 + 0x50]
	0x0249C67C STR V1, [X31 + 0x4]
	0x0249C680 LDR X0, [X21 + 0x38]
	0x0249C684 LDR X1, [X9]
	0x0249C688 LDR W24, [X21 + 0x34]
	0x0249C68C BL 0x1C16E00
	0x0249C690 MOV X2, X0
	0x0249C694 ADD X1, X31, 0x40
	0x0249C698 MOV X0, X23
	0x0249C69C MOV W3, W24
	0x0249C6A0 MOV W4, W22
	0x0249C6A4 MOV X5, X31
	0x0249C6A8 BL 0x3553DAC
	0x0249C6AC CBNZ W0, 0x249C62C
	0x0249C6B0 B 0x249C648
	0x0249C6B4 STP X30, X19, [X31 - 0x10]!
	0x0249C6B8 MOV X8, X0
	0x0249C6BC LDR X0, [X0 + 0x20]
	0x0249C6C0 CBZ X0, 0x249C6F8
	0x0249C6C4 LDR X9, [X3 + 0x20]
	0x0249C6C8 LDR X19, [X8 + 0x10]
	0x0249C6CC AND W2, W2, 0x1
	0x0249C6D0 LDR X9, [X9 + 0xC0]
	0x0249C6D4 LDR X3, [X9 + 0x48]
	0x0249C6D8 BL 0x2D24B58
	0x0249C6DC CBZ X19, 0x249C6F8
	0x0249C6E0 MOV X1, X0
	0x0249C6E4 LDR X3, [X19 + 0x18]
	0x0249C6E8 LDR X0, [X19 + 0x40]
	0x0249C6EC LDR X2, [X19 + 0x28]
	0x0249C6F0 LDP X30, X19, [X31], #0x10
	0x0249C6F4 BR X3
	0x0249C6F8 BL 0x1C16F20
	0x0249C6FC SUB X31, X31, 0x100
	0x0249C700 STR X30, [X31 + 0xC0]
	0x0249C704 STP X24, X23, [X31 + 0xD0]
	0x0249C708 STP X22, X21, [X31 + 0xE0]
	0x0249C70C STP X20, X19, [X31 + 0xF0]
	0x0249C710 ADRP X24, 0x1F3D000
	0x0249C714 ADRP X23, 0x1C80000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move [X31+8], X31
	011 Move X8, [X4+32]
	012 Move X22, X4
	013 Move W21, W3
	014 Move W19, W2
	015 Move W9, [X8+309]
	016 Move X20, X1
	017 Move X23, X0
	018 Move TEMP, X9
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {25}
	022 Move X0, X8
	023 Call 0x1C5D684
	024 Move X8, X0
	025 Move X8, [X8+192]
	026 Move X0, [X8+16]
	027 Move W8, [X0+309]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {33}
	032 Call 0x1C5D684
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, [X22+32]
	038 Move W8, [X0+309]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {44}
	043 Call 0x1C5D684
	044 Move X8, [X0+192]
	045 Move X0, [X8+16]
	046 Move W8, [X0+309]
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {52}
	051 Call 0x1C5D684
	052 Move X8, [X0+184]
	053 Move X24, [X8]
	054 Compare X24, 0
	055 JumpIfEqual {138}
	056 Move X8, [X22+32]
	057 Add X9, X8, 309
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Move TEMP, X9
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {68}
	063 Move X0, X8
	064 Call 0x1C5D684
	065 Move X8, [X22+32]
	066 Add X9, X8, 309
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Move X0, X8
	069 Move X10, [X0+192]
	070 Move X10, [X10+32]
	071 Move X25, [X10]
	072 Move TEMP, X9
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {79}
	076 Move X0, X8
	077 Call 0x1C5D684
	078 Move X8, X0
	079 Move X8, [X8+192]
	080 Add X9, X31, 8
	081 Add X3, X31, 16
	082 Add X4, X31, 36
	083 Move X1, [X8+32]
	084 Add X8, X31, 40
	085 Move [X31+40], X23
	086 Move [X31+16], X8
	087 Move [X31+24], X9
	088 Move X8, [X1+16]
	089 Move X0, X25
	090 Move X2, X24
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move W8, [X31+36]
	093 Compare W8, 0
	094 JumpIfEqual {128}
	095 Move X23, [X31+8]
	096 Compare X23, 0
	097 JumpIfEqual {138}
	098 Move X8, [X22+32]
	099 Add X9, X8, 309
	100 NotImplemented "Instruction LDRH not yet implemented."
	101 Move TEMP, X9
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {110}
	105 Move X0, X8
	106 Call 0x1C5D684
	107 Move X8, [X22+32]
	108 Add X9, X8, 309
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 Move X0, X8
	111 Move X10, [X0+192]
	112 Move X10, [X10+48]
	113 Move X22, [X10]
	114 Move TEMP, X9
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfEqual {121}
	118 Move X0, X8
	119 Call 0x1C5D684
	120 Move X8, X0
	121 Move X8, [X8+192]
	122 And W3, W21, 1
	123 Move X0, X23
	124 Move X1, X20
	125 Move X4, [X8+48]
	126 Move W2, W19
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move X20, [X31+96]
	129 Move X19, [X31+104]
	130 Move X22, [X31+80]
	131 Move X21, [X31+88]
	132 Move X24, [X31+64]
	133 Move X23, [X31+72]
	134 Move X30, [X31+48]
	135 Move X25, [X31+56]
	136 Add X31, X31, 112
	137 Return 
	138 Call 0x1C17F20

Method: System.Void .ctor(System.Action`1<Photon.Voice.FrameOut`1<T>> output, POpusCodec.Enums.SamplingRate outputSamplingRateHz, POpusCodec.Enums.Channels numChannels, System.Int32 frameDurationSamples)

Disassembly:
	0x0249C718 LDRB W8, [X24 + 0xB9F]
	0x0249C71C LDR X23, [X23 + 0xE18]
	0x0249C720 MOV X20, X3
	0x0249C724 MOV W21, W2
	0x0249C728 MOV X22, X1
	0x0249C72C MOV X19, X0
	0x0249C730 TBNZ X8, 0x0, 0x249C748
	0x0249C734 ADRP X0, 0x1C80000
	0x0249C738 LDR X0, [X0 + 0xE18]
	0x0249C73C BL 0x1C16CF4
	0x0249C740 MOVZ W8, 0x1
	0x0249C744 STRB W8, [X24 + 0xB9F]
	0x0249C748 LDR X0, [X23]
	0x0249C74C LDR W8, [X0 + 0xE0]
	0x0249C750 CBNZ W8, 0x249C758
	0x0249C754 BL 0x1C16DFC
	0x0249C758 LDR X8, [X22]
	0x0249C75C CBZ X8, 0x249C7E0
	0x0249C760 LDR X0, [X23]
	0x0249C764 LDR W8, [X0 + 0xE0]
	0x0249C768 CBNZ W8, 0x249C770
	0x0249C76C BL 0x1C16DFC
	0x0249C770 MOV X0, X22
	0x0249C774 MOV X1, X31
	0x0249C778 BL 0x355406C
	0x0249C77C MOV X1, X31
	0x0249C780 BL 0x35534A0
	0x0249C784 MOV X23, X19
	0x0249C788 LDRB W8, [X23 + 0x40]!
	0x0249C78C CBZ W8, 0x249C820
	0x0249C790 ADDS W31, W0, 0x4
	0x0249C794 B.EQ 0x249C7EC
	0x0249C798 LDR X8, [X22 + 0x30]
	0x0249C79C LDP V1, V0, [X22 + 0x10]
	0x0249C7A0 LDR V2, [X22]
	0x0249C7A4 ADD X1, X31, 0x80
	0x0249C7A8 STR X8, [X31 + 0x70]
	0x0249C7AC STP V1, V0, [X31 + 0x50]
	0x0249C7B0 STR V2, [X31 + 0x4]
	0x0249C7B4 LDR X9, [X20 + 0x20]
	0x0249C7B8 MOVZ W2, 0x1
	0x0249C7BC MOV X0, X19
	0x0249C7C0 MOV W4, W31
	0x0249C7C4 LDR X9, [X9 + 0xC0]
	0x0249C7C8 LDR X5, [X9 + 0x58]
	0x0249C7CC STP V2, V1, [X31 + 0x80]
	0x0249C7D0 STR V0, [X31 + 0xA]
	0x0249C7D4 STR X8, [X31 + 0xB0]
	0x0249C7D8 BL 0x249C57C
	0x0249C7DC B 0x249C830
	0x0249C7E0 MOV X23, X19
	0x0249C7E4 LDRB W8, [X23 + 0x40]!
	0x0249C7E8 CBZ W8, 0x249C828
	0x0249C7EC LDR X8, [X20 + 0x20]
	0x0249C7F0 MOVI V0.2D, 0x0
	0x0249C7F4 ADD X1, X31, 0x80
	0x0249C7F8 MOV X0, X19
	0x0249C7FC LDR X8, [X8 + 0xC0]
	0x0249C800 MOV W2, W31
	0x0249C804 MOV W4, W31
	0x0249C808 LDR X5, [X8 + 0x58]
	0x0249C80C STR X31, [X31 + 0xB0]
	0x0249C810 STP V0, V0, [X31 + 0x90]
	0x0249C814 STR V0, [X31 + 0x8]
	0x0249C818 BL 0x249C57C
	0x0249C81C B 0x249C828
	0x0249C820 ADDS W31, W0, 0x4
	0x0249C824 B.NE 0x249C830
	0x0249C828 MOVZ W8, 0x1
	0x0249C82C B 0x249C878

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X8, [X5+32]
	010 Move X20, X5
	011 Move W21, W4
	012 Move W22, W3
	013 Move X8, [X8+192]
	014 Move W23, W2
	015 Move X24, X1
	016 Move X19, X0
	017 Move X8, [X8+24]
	018 Move W9, [X8+309]
	019 Move TEMP, X9
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {26}
	023 Move X0, X8
	024 Call 0x1C5D684
	025 Move X8, X0
	026 Move W9, [X8+224]
	027 Compare W9, 0
	028 JumpIfNotEqual {31}
	029 Move X0, X8
	030 Call 0x1C17DFC
	031 Move X8, [X20+32]
	032 Move X0, X19
	033 Move X1, X24
	034 Move W2, W23
	035 Move X8, [X8+192]
	036 Move W3, W22
	037 Move W4, W21
	038 Move X5, [X8+64]
	039 Move X8, [X5]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move X8, [X20+32]
	042 Move X8, [X8+192]
	043 Move X0, [X8+16]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X8, [X20+32]
	055 Move X8, [X8+192]
	056 Move X0, [X8+16]
	057 Move W8, [X0+309]
	058 Move TEMP, X8
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {63}
	062 Call 0x1C5D684
	063 Move X8, [X0+184]
	064 Move X2, [X8]
	065 Compare X2, 0
	066 JumpIfEqual {89}
	067 Move X8, [X20+32]
	068 Add X9, X31, 24
	069 Add X3, X31, 0
	070 Move X4, X19
	071 Move X8, [X8+192]
	072 Move X1, [X8+80]
	073 Move X8, [X19+40]
	074 Move X0, [X1]
	075 Move [X31+24], X8
	076 Move [X31], X9
	077 Move [X31+8], X19
	078 Move X8, [X1+16]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X20, [X31+64]
	081 Move X19, [X31+72]
	082 Move X22, [X31+48]
	083 Move X21, [X31+56]
	084 Move X24, [X31+32]
	085 Move X23, [X31+40]
	086 Move X30, [X31+16]
	087 Add X31, X31, 80
	088 Return 
	089 Call 0x1C17F20

Method: System.Void dataCallback(System.IntPtr p, System.Int32 count, System.Boolean endOfStream)

Disassembly:
	0x0249C830 LDR X8, [X22 + 0x30]
	0x0249C834 LDP V1, V0, [X22 + 0x10]
	0x0249C838 LDR V2, [X22]
	0x0249C83C AND W4, W21, 0x1
	0x0249C840 STR X8, [X31 + 0x30]
	0x0249C844 STP V1, V0, [X31 + 0x10]
	0x0249C848 STR V2, [X31]
	0x0249C84C LDR X9, [X20 + 0x20]
	0x0249C850 ADD X1, X31, 0x80
	0x0249C854 MOV X0, X19
	0x0249C858 MOV W2, W31
	0x0249C85C LDR X9, [X9 + 0xC0]
	0x0249C860 LDR X5, [X9 + 0x58]
	0x0249C864 STP V2, V1, [X31 + 0x80]
	0x0249C868 STR V0, [X31 + 0xA]
	0x0249C86C STR X8, [X31 + 0xB0]
	0x0249C870 BL 0x249C57C
	0x0249C874 MOV W8, W31
	0x0249C878 STRB W8, [X23]
	0x0249C87C LDP X20, X19, [X31 + 0xF0]
	0x0249C880 LDP X22, X21, [X31 + 0xE0]
	0x0249C884 LDP X24, X23, [X31 + 0xD0]
	0x0249C888 LDR X30, [X31 + 0xC0]
	0x0249C88C ADD X31, X31, 0x100
	0x0249C890 RET
	0x0249C894 STP X30, X19, [X31 - 0x10]!
	0x0249C898 MOV X19, X0
	0x0249C89C LDR X0, [X0 + 0x28]
	0x0249C8A0 MOV X1, X31
	0x0249C8A4 MOV X2, X31
	0x0249C8A8 BL 0x33C5D2C
	0x0249C8AC TBZ X0, 0x0, 0x249C8C0
	0x0249C8B0 LDR X0, [X19 + 0x28]
	0x0249C8B4 MOV X1, X31
	0x0249C8B8 BL 0x3552E60
	0x0249C8BC STR X31, [X19 + 0x28]
	0x0249C8C0 LDP X30, X19, [X31], #0x10
	0x0249C8C4 RET
	0x0249C8C8 STR X30, [X31 - 0x20]!
	0x0249C8CC STP X20, X19, [X31 + 0x10]
	0x0249C8D0 MOV X19, X0
	0x0249C8D4 LDR X0, [X0 + 0x20]
	0x0249C8D8 LDRB W8, [X0 + 0x135]
	0x0249C8DC TBNZ X8, 0x0, 0x249C8E4
	0x0249C8E0 BL 0x1C5C684
	0x0249C8E4 LDR X8, [X0 + 0xC0]
	0x0249C8E8 LDR X0, [X8 + 0x38]
	0x0249C8EC LDRB W8, [X0 + 0x135]
	0x0249C8F0 TBNZ X8, 0x0, 0x249C8F8
	0x0249C8F4 BL 0x1C5C684
	0x0249C8F8 MOV W1, W31
	0x0249C8FC BL 0x1C16D6C
	0x0249C900 LDR X8, [X19 + 0x20]
	0x0249C904 MOV X20, X0
	0x0249C908 LDRB W9, [X8 + 0x135]
	0x0249C90C TBNZ X9, 0x0, 0x249C91C
	0x0249C910 MOV X0, X8
	0x0249C914 BL 0x1C5C684
	0x0249C918 MOV X8, X0
	0x0249C91C LDR X8, [X8 + 0xC0]
	0x0249C920 LDR X0, [X8 + 0x60]
	0x0249C924 LDRB W8, [X0 + 0x135]
	0x0249C928 TBNZ X8, 0x0, 0x249C930
	0x0249C92C BL 0x1C5C684
	0x0249C930 LDR X8, [X0 + 0xB8]
	0x0249C934 STR X20, [X8]
	0x0249C938 LDR X0, [X19 + 0x20]
	0x0249C93C LDRB W8, [X0 + 0x135]
	0x0249C940 TBNZ X8, 0x0, 0x249C948
	0x0249C944 BL 0x1C5C684
	0x0249C948 LDR X8, [X0 + 0xC0]
	0x0249C94C LDR X0, [X8 + 0x60]
	0x0249C950 LDRB W8, [X0 + 0x135]
	0x0249C954 TBNZ X8, 0x0, 0x249C964
	0x0249C958 LDP X20, X19, [X31 + 0x10]
	0x0249C95C LDR X30, [X31], #0x20
	0x0249C960 B 0x1C5C684
	0x0249C964 LDP X20, X19, [X31 + 0x10]
	0x0249C968 LDR X30, [X31], #0x20
	0x0249C96C RET
	0x0249C970 STP X29, X30, [X31 - 0x60]!
	0x0249C974 STP X28, X27, [X31 + 0x10]
	0x0249C978 STP X26, X25, [X31 + 0x20]
	0x0249C97C STP X24, X23, [X31 + 0x30]
	0x0249C980 STP X22, X21, [X31 + 0x40]
	0x0249C984 STP X20, X19, [X31 + 0x50]
	0x0249C988 ADD X29, X31, 0x0
	0x0249C98C SUB X31, X31, 0x40
	0x0249C990 STUR W4, [X29 - 0x2C]
	0x0249C994 MRS X8, 0xC000
	0x0249C998 STUR X8, [X29 - 0x38]
	0x0249C99C LDR X8, [X8 + 0x28]
	0x0249C9A0 ADRP X23, 0x1F3D000
	0x0249C9A4 MOV X19, X5
	0x0249C9A8 MOV W21, W3
	0x0249C9AC STUR X8, [X29 - 0x8]
	0x0249C9B0 LDRB W8, [X23 + 0xBA0]
	0x0249C9B4 MOV W20, W2
	0x0249C9B8 MOV X27, X1
	0x0249C9BC MOV X22, X0
	0x0249C9C0 TBNZ X8, 0x0, 0x249C9E4
	0x0249C9C4 ADRP X0, 0x1C7F000
	0x0249C9C8 LDR X0, [X0 + 0x850]
	0x0249C9CC BL 0x1C16CF4
	0x0249C9D0 ADRP X0, 0x1C57000
	0x0249C9D4 LDR X0, [X0 + 0xA90]
	0x0249C9D8 BL 0x1C16CF4
	0x0249C9DC MOVZ W8, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1F3E000
	009 Move W8, [X24+2969]
	010 Move X21, X4
	011 Move W19, W3
	012 Move W22, W2
	013 Move X23, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x1C80000
	020 Move X0, [X0+2080]
	021 Call 0x1C17CF4
	022 Move X0, 0x1C80000
	023 Move X0, [X0+2128]
	024 Call 0x1C17CF4
	025 Move X0, 0x1C58000
	026 Move X0, [X0+1592]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X24+2969], W8
	030 Move X8, [X20+16]
	031 Compare X8, 0
	032 JumpIfEqual {63}
	033 Move W8, [X20+24]
	034 Compare W8, 0
	035 JumpIfEqual {71}
	036 Move X24, [X20+72]
	037 Compare X24, 0
	038 JumpIfEqual {41}
	039 Move W8, [X24+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X8, 0x1C58000
	042 Move X8, [X8+1592]
	043 Move W1, W22
	044 Move X0, [X8]
	045 Call 0x1C17D6C
	046 Move X24, X0
	047 Move [X20+72], X0
	048 Move X8, 0x1C80000
	049 Move X8, [X8+2128]
	050 Move X0, [X8]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X23
	056 Move X1, X24
	057 Move W2, W31
	058 Move W3, W22
	059 Move X4, X31
	060 Call Marshal.Copy, X0, X1, X2, X3
	061 Move X8, [X21+32]
	062 Move X22, [X20+72]
	063 Move X20, [X31+48]
	064 Move X19, [X31+56]
	065 Move X22, [X31+32]
	066 Move X21, [X31+40]
	067 Move X24, [X31+16]
	068 Move X23, [X31+24]
	069 Move X30, [X31+64]
	070 Return 
	071 Move X24, [X20+80]
	072 Compare X24, 0
	073 JumpIfEqual {76}
	074 Move W8, [X24+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X8, 0x1C80000
	077 Move X8, [X8+2080]
	078 Move W1, W22
	079 Move X0, [X8]
	080 Call 0x1C17D6C
	081 Move X24, X0
	082 Move [X20+80], X0
	083 Move X8, 0x1C80000
	084 Move X8, [X8+2128]
	085 Move X0, [X8]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X0, X23
	091 Move X1, X24
	092 Move W2, W31
	093 Move W3, W22
	094 Move X4, X31
	095 Call Marshal.Copy, X0, X1, X2, X3
	096 Move X8, [X21+32]
	097 Move X22, [X20+80]
	098 Move X8, [X8+192]
	099 Move X1, [X8+88]
	100 Move X8, [X8+96]
	101 Move W9, [X1+309]
	102 Move X0, [X8]
	103 Move [X31+8], X0
	104 Move TEMP, X9
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfEqual {111}
	108 Move X0, X1
	109 Call 0x1C5D684
	110 Move X1, X0
	111 Move X0, X22
	112 Call 0x1C17E00
	113 Move X8, [X21+32]
	114 And W2, W19, 1
	115 Move X1, X0
	116 Move X0, X20
	117 Move X8, [X8+192]
	118 Move X4, [X31+8]
	119 Move X20, [X31+48]
	120 Move X19, [X31+56]
	121 Move X22, [X31+32]
	122 Move X21, [X31+40]
	123 Move X3, [X8+96]
	124 Move X24, [X31+16]
	125 Move X23, [X31+24]
	126 Move X30, [X31+64]
	127 CallNoReturn X4

Method: System.Void Dispose()

Disassembly:
	0x0249C9E0 STRB W8, [X23 + 0xBA0]
	0x0249C9E4 LDR X8, [X19 + 0x20]
	0x0249C9E8 LDR X23, [X8 + 0xC0]
	0x0249C9EC LDR X8, [X23 + 0x28]
	0x0249C9F0 LDR W25, [X8 + 0xFC]
	0x0249C9F4 ADD X8, X31, 0x0
	0x0249C9F8 ADD X9, X25, 0xF
	0x0249C9FC AND X9, X9, 0x1FFFFFFFF
	0x0249CA00 SUB X28, X8, X9
	0x0249CA04 ADD X31, X28, 0x0
	0x0249CA08 ADD X8, X31, 0x0
	0x0249CA0C SUB X24, X8, X9
	0x0249CA10 ADD X31, X24, 0x0
	0x0249CA14 ADD X8, X31, 0x0
	0x0249CA18 SUB X26, X8, X9
	0x0249CA1C ADD X31, X26, 0x0
	0x0249CA20 MOV X0, X26
	0x0249CA24 MOV W1, W31
	0x0249CA28 MOV X2, X25
	0x0249CA2C BL 0x3EB1B10
	0x0249CA30 LDR X0, [X23]
	0x0249CA34 LDRB W8, [X0 + 0x135]
	0x0249CA38 TBNZ X8, 0x0, 0x249CA40
	0x0249CA3C BL 0x1C5C684
	0x0249CA40 BL 0x1C16F10
	0x0249CA44 LDR X8, [X19 + 0x20]
	0x0249CA48 MOV X1, X31
	0x0249CA4C MOV W2, W31
	0x0249CA50 MOV X23, X0
	0x0249CA54 LDR X8, [X8 + 0xC0]
	0x0249CA58 LDR X3, [X8 + 0x8]
	0x0249CA5C LDR X8, [X3]
	0x0249CA60 BLR X8
	0x0249CA64 MOV X0, X22
	0x0249CA68 MOV X1, X31
	0x0249CA6C STP X23, X31, [X22 + 0x20]
	0x0249CA70 BL 0x33BDD8C
	0x0249CA74 MOV X0, X26
	0x0249CA78 MOV W1, W31
	0x0249CA7C MOV X2, X25
	0x0249CA80 STR X27, [X22 + 0x10]
	0x0249CA84 BL 0x3EB1B10
	0x0249CA88 MOV X0, X28
	0x0249CA8C MOV X1, X26
	0x0249CA90 MOV X2, X25
	0x0249CA94 BL 0x3EB1AC0
	0x0249CA98 LDR X8, [X19 + 0x20]
	0x0249CA9C MOV X1, X28
	0x0249CAA0 LDR X8, [X8 + 0xC0]
	0x0249CAA4 LDR X0, [X8 + 0x28]
	0x0249CAA8 BL 0x1C16E04

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X19, X0
	006 Move X0, [X0+40]
	007 Move X20, X1
	008 Move X1, X31
	009 Move X2, X31
	010 Call IntPtr.op_Inequality, X0, X1
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {53}
	015 Move X8, [X20+32]
	016 Move X8, [X8+192]
	017 Move X0, [X8+16]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X8, [X20+32]
	029 Move X8, [X8+192]
	030 Move X0, [X8+16]
	031 Move W8, [X0+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Move X8, [X0+184]
	038 Move X2, [X8]
	039 Compare X2, 0
	040 JumpIfEqual {64}
	041 Move X8, [X20+32]
	042 Add X9, X31, 24
	043 Add X3, X31, 0
	044 Add X4, X31, 12
	045 Move X8, [X8+192]
	046 Move X1, [X8+104]
	047 Move X8, [X19+40]
	048 Move X0, [X1]
	049 Move [X31+24], X8
	050 Move [X31], X9
	051 Move X8, [X1+16]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X8, [X20+32]
	054 Move X0, X19
	055 Move X8, [X8+192]
	056 Move X1, [X8+112]
	057 Move X8, [X1]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X30, [X31+16]
	062 Add X31, X31, 48
	063 Return 
	064 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x0249CAAC CBZ X0, 0x249CACC
	0x0249CAB0 ADRP X8, 0x1C57000
	0x0249CAB4 LDR X8, [X8 + 0xA90]
	0x0249CAB8 LDR X9, [X0]
	0x0249CABC LDR X8, [X8]
	0x0249CAC0 CMP X9, X8
	0x0249CAC4 CSET W8, EQ
	0x0249CAC8 B 0x249CAD0
	0x0249CACC MOV W8, W31
	0x0249CAD0 LDUR W23, [X29 - 0x2C]
	0x0249CAD4 MOV X0, X26
	0x0249CAD8 MOV W1, W31
	0x0249CADC MOV X2, X25
	0x0249CAE0 STRB W8, [X22 + 0x18]
	0x0249CAE4 BL 0x3EB1B10
	0x0249CAE8 MOV X0, X24
	0x0249CAEC MOV X1, X26
	0x0249CAF0 MOV X2, X25
	0x0249CAF4 BL 0x3EB1AC0
	0x0249CAF8 ADRP X8, 0x1C7F000
	0x0249CAFC LDR X8, [X8 + 0x850]
	0x0249CB00 LDR X0, [X8]
	0x0249CB04 LDR W8, [X0 + 0xE0]
	0x0249CB08 CBNZ W8, 0x249CB10
	0x0249CB0C BL 0x1C16DFC
	0x0249CB10 LDR X8, [X19 + 0x20]
	0x0249CB14 LDR X8, [X8 + 0xC0]
	0x0249CB18 LDP X9, X1, [X8 + 0x28]
	0x0249CB1C LDR W8, [X9 + 0x28]
	0x0249CB20 LDR X0, [X1]
	0x0249CB24 TBNZ X8, 0x1F, 0x249CB2C
	0x0249CB28 LDR X24, [X24]
	0x0249CB2C STUR X24, [X29 - 0x28]
	0x0249CB30 LDR X8, [X1 + 0x10]
	0x0249CB34 SUB X3, X29, 0x28
	0x0249CB38 SUB X4, X29, 0xC
	0x0249CB3C MOV X2, X31
	0x0249CB40 BLR X8
	0x0249CB44 LDUR W8, [X29 - 0xC]
	0x0249CB48 MOVZ W9, 0x3E7F
	0x0249CB4C CMP W20, W9
	0x0249CB50 STR W8, [X22 + 0x1C]
	0x0249CB54 B.LE 0x249CB78
	0x0249CB58 MOVZ W8, 0x3E80
	0x0249CB5C CMP W20, W8
	0x0249CB60 B.EQ 0x249CB90
	0x0249CB64 MOVZ W8, 0x5DC0
	0x0249CB68 CMP W20, W8
	0x0249CB6C B.EQ 0x249CB90
	0x0249CB70 MOVZ W8, 0xBB80
	0x0249CB74 B 0x249CB88
	0x0249CB78 MOVZ W8, 0x1F40
	0x0249CB7C CMP W20, W8
	0x0249CB80 B.EQ 0x249CB90
	0x0249CB84 MOVZ W8, 0x2EE0
	0x0249CB88 CMP W20, W8
	0x0249CB8C B.NE 0x249CCA8
	0x0249CB90 SUB W8, W21, 0x1
	0x0249CB94 CMP W8, 0x2
	0x0249CB98 B.CS 0x249CC20
	0x0249CB9C STP W21, W23, [X22 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+32]
	007 Move W8, [X0+309]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {13}
	012 Call 0x1C5D684
	013 Move X8, [X0+192]
	014 Move X0, [X8+8]
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Call 0x1C17F10
	022 Move X8, [X19+32]
	023 Move X20, X0
	024 Add X9, X8, 309
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move TEMP, X9
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {35}
	030 Move X0, X8
	031 Call 0x1C5D684
	032 Move X8, [X19+32]
	033 Add X9, X8, 309
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Move X0, X8
	036 Move X10, [X0+192]
	037 Move X10, [X10+120]
	038 Move X21, [X10]
	039 Move TEMP, X9
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {46}
	043 Move X0, X8
	044 Call 0x1C5D684
	045 Move X8, X0
	046 Move X8, [X8+192]
	047 Move X0, X20
	048 Move X1, [X8+120]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X0, [X19+32]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Move X8, [X0+192]
	058 Move X0, [X8+16]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 Move X8, [X0+184]
	066 Move [X8], X20
	067 Move X0, [X19+32]
	068 Move W8, [X0+309]
	069 Move TEMP, X8
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {74}
	073 Call 0x1C5D684
	074 Move X8, [X0+192]
	075 Move X0, [X8+16]
	076 Move W8, [X0+309]
	077 Move TEMP, X8
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {87}
	081 Move X20, [X31+16]
	082 Move X19, [X31+24]
	083 Move X30, [X31+32]
	084 Move X21, [X31+40]
	085 Call 0x1C5D684
	086 Return 
	087 Move X20, [X31+16]
	088 Move X19, [X31+24]
	089 Move X30, [X31+32]
	090 Move X21, [X31+40]
	091 Return 

