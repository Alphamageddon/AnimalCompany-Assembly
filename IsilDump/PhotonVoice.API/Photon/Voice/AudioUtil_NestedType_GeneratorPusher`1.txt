Type: Photon.Voice.AudioUtil/GeneratorPusher`1

Method: System.Void .ctor(System.Int32 bufSizeMs = 100, System.Int32 samplingRate = 48000, System.Int32 channels = 1)

Disassembly:
	0x02D44140 B 0x2D44158
	0x02D44144 LDR X8, [X8 + 0xC8]
	0x02D44148 ADD X8, X8, X9, 0x3, LSL
	0x02D4414C LDUR X8, [X8 - 0x8]
	0x02D44150 CMP X8, X0
	0x02D44154 CSET W0, EQ
	0x02D44158 LDP X30, X19, [X31], #0x10
	0x02D4415C RET
	0x02D44160 STR X30, [X31 - 0x10]!
	0x02D44164 CBZ X0, 0x2D44194
	0x02D44168 MOV X1, X31
	0x02D4416C BL 0x33BE520
	0x02D44170 CBZ X0, 0x2D44194
	0x02D44174 LDR X8, [X0]
	0x02D44178 LDP X9, X1, [X8 + 0x1A8]
	0x02D4417C BLR X9
	0x02D44180 CBZ X0, 0x2D44194
	0x02D44184 LDR X8, [X0]
	0x02D44188 LDP X2, X1, [X8 + 0x158]
	0x02D4418C LDR X30, [X31], #0x10
	0x02D44190 BR X2
	0x02D44194 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W21, W1
	007 Move X1, X31
	008 Move W19, W3
	009 Move W20, W2
	010 Move X22, X0
	011 Call Object..ctor, X0
	012 Move W9, 0x4DD3
	013 Multiply W8, W20, W21
	014 NotImplemented "Instruction MOVK not yet implemented."
	015 NotImplemented "Instruction SMADDL not yet implemented."
	016 Move X9, X8
	017 ShiftRight X9, 63
	018 And X9, X9, 0x7FFFFFFF
	019 NotImplemented "Instruction SBFM not yet implemented."
	020 Add W8, W8, W9
	021 Move [X22+52], W19
	022 Move [X22+56], W20
	023 Move [X22+48], W8
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Return 

Method: System.Void SetCallback(System.Action`1<T[]> callback, Photon.Voice.ObjectFactory`2<T[], System.Int32> bufferFactory)

Disassembly:
	0x02D44198 LDR X8, [X1 + 0x20]
	0x02D4419C LDR X8, [X8 + 0xC0]
	0x02D441A0 LDR X1, [X8 + 0x20]
	0x02D441A4 B 0x290ECAC
	0x02D441A8 SUB X31, X31, 0x50
	0x02D441AC STR X30, [X31 + 0x40]
	0x02D441B0 LDP V1, V0, [X2]
	0x02D441B4 MOV X0, X1
	0x02D441B8 ADD X1, X31, 0x20
	0x02D441BC STP V1, V0, [X31]
	0x02D441C0 LDR X8, [X3 + 0x20]
	0x02D441C4 LDR X8, [X8 + 0xC0]
	0x02D441C8 LDR X2, [X8 + 0x10]
	0x02D441CC STP V1, V0, [X31 + 0x20]
	0x02D441D0 BL 0x27C9F14
	0x02D441D4 LDR X30, [X31 + 0x40]
	0x02D441D8 ADD X31, X31, 0x50
	0x02D441DC RET
	0x02D441E0 STP X30, X19, [X31 - 0x10]!
	0x02D441E4 LDR X8, [X2 + 0x20]
	0x02D441E8 MOV X19, X1
	0x02D441EC LDR X8, [X8 + 0xC0]
	0x02D441F0 LDR X0, [X8 + 0x18]
	0x02D441F4 LDRB W8, [X0 + 0x135]
	0x02D441F8 TBNZ X8, 0x0, 0x2D44200
	0x02D441FC BL 0x1C5C684
	0x02D44200 CBZ X19, 0x2D44218
	0x02D44204 LDR X8, [X19]
	0x02D44208 LDRB W9, [X0 + 0x130]
	0x02D4420C LDRB W10, [X8 + 0x130]
	0x02D44210 CMP W10, W9
	0x02D44214 B.CS 0x2D44220
	0x02D44218 MOV W0, W31
	0x02D4421C B 0x2D44234
	0x02D44220 LDR X8, [X8 + 0xC8]
	0x02D44224 ADD X8, X8, X9, 0x3, LSL
	0x02D44228 LDUR X8, [X8 - 0x8]
	0x02D4422C CMP X8, X0
	0x02D44230 CSET W0, EQ
	0x02D44234 LDP X30, X19, [X31], #0x10
	0x02D44238 RET
	0x02D4423C STR X30, [X31 - 0x10]!
	0x02D44240 CBZ X0, 0x2D44270
	0x02D44244 MOV X1, X31
	0x02D44248 BL 0x33BE520
	0x02D4424C CBZ X0, 0x2D44270
	0x02D44250 LDR X8, [X0]
	0x02D44254 LDP X9, X1, [X8 + 0x1A8]
	0x02D44258 BLR X9
	0x02D4425C CBZ X0, 0x2D44270
	0x02D44260 LDR X8, [X0]
	0x02D44264 LDP X2, X1, [X8 + 0x158]
	0x02D44268 LDR X30, [X31], #0x10
	0x02D4426C BR X2
	0x02D44270 BL 0x1C16F20
	0x02D44274 LDR X8, [X1 + 0x20]
	0x02D44278 LDR X8, [X8 + 0xC0]
	0x02D4427C LDR X1, [X8 + 0x20]
	0x02D44280 B 0x290F2E4
	0x02D44284 STR X30, [X31 - 0x30]!
	0x02D44288 STP X22, X21, [X31 + 0x10]
	0x02D4428C STP X20, X19, [X31 + 0x20]
	0x02D44290 AND W9, W1, 0x1
	0x02D44294 ADRP X21, 0x1697000
	0x02D44298 STRB W9, [X31 + 0xC]
	0x02D4429C ADRP X22, 0x13AF000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0x1698000
	010 Move W8, [X23+2144]
	011 Move X20, X3
	012 Move X21, X2
	013 Move X22, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x13DB000
	020 Move X0, [X0+3816]
	021 Call 0x1C17CF4
	022 Move X0, 0x13DB000
	023 Move X0, [X0+3824]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2144], W8
	027 Move X24, 0x13DB000
	028 Move X23, 0x13DB000
	029 Move X0, [X19+16]
	030 Move X24, [X24+3824]
	031 Move X23, [X23+3816]
	032 Compare X0, 0
	033 JumpIfEqual {36}
	034 Move X1, X31
	035 Call Timer.Close, X0
	036 Move [X19+24], X22
	037 Move [X19+32], X21
	038 Move X0, [X24]
	039 Move W22, [X19+48]
	040 Move W25, [X19+56]
	041 Call 0x1C17F10
	042 Move X8, -36003840
	043 Move V0, [X8+2904]
	044 NotImplemented "Instruction SCVTF not yet implemented."
	045 Move X1, X31
	046 Move X21, X0
	047 Multiply D0, D1, D0
	048 NotImplemented "Instruction SCVTF not yet implemented."
	049 NotImplemented "Instruction FDIV not yet implemented."
	050 Call Timer..ctor, X0, V0
	051 Move [X19+16], X21
	052 Move X0, [X23]
	053 Call 0x1C17F10
	054 Move X8, [X20+32]
	055 Move X1, X19
	056 Move X3, X31
	057 Move X20, X0
	058 Move X8, [X8+192]
	059 Move X2, [X8+40]
	060 Call ElapsedEventHandler..ctor, X0, X1, X2
	061 Compare X21, 0
	062 JumpIfEqual {82}
	063 Move X0, X21
	064 Move X1, X20
	065 Move X2, X31
	066 Call Timer.add_Elapsed, X0, X1
	067 Move X0, [X19+16]
	068 Compare X0, 0
	069 JumpIfEqual {82}
	070 Move X20, [X31+48]
	071 Move X19, [X31+56]
	072 Move X22, [X31+32]
	073 Move X21, [X31+40]
	074 Move X24, [X31+16]
	075 Move X23, [X31+24]
	076 Move W1, 1
	077 Move X2, X31
	078 Move X30, [X31+64]
	079 Move X25, [X31+72]
	080 Call Timer.set_Enabled, X0, X1
	081 Return 
	082 Call 0x1C17F20

Method: System.Void OnTimedEvent(System.Object source, System.Timers.ElapsedEventArgs e)

Disassembly:
	0x02D442A0 LDRB W8, [X21 + 0x864]
	0x02D442A4 LDR X22, [X22 + 0xB58]
	0x02D442A8 MOV X20, X3
	0x02D442AC MOV W19, W2
	0x02D442B0 TBNZ X8, 0x0, 0x2D442C8
	0x02D442B4 ADRP X0, 0x13AF000
	0x02D442B8 LDR X0, [X0 + 0xB58]
	0x02D442BC BL 0x1C16CF4
	0x02D442C0 MOVZ W8, 0x1
	0x02D442C4 STRB W8, [X21 + 0x864]
	0x02D442C8 LDR X0, [X22]
	0x02D442CC LDR W8, [X0 + 0xE0]
	0x02D442D0 CBNZ W8, 0x2D442D8
	0x02D442D4 BL 0x1C16DFC
	0x02D442D8 LDR X8, [X20 + 0x20]
	0x02D442DC AND W1, W19, 0x1
	0x02D442E0 ADD X0, X31, 0xC
	0x02D442E4 LDR X8, [X8 + 0xC0]
	0x02D442E8 LDR X2, [X8 + 0x10]
	0x02D442EC BL 0x33178E4
	0x02D442F0 LDP X20, X19, [X31 + 0x20]
	0x02D442F4 LDP X22, X21, [X31 + 0x10]
	0x02D442F8 LDR X30, [X31], #0x30
	0x02D442FC RET
	0x02D44300 STP X30, X19, [X31 - 0x10]!
	0x02D44304 LDR X8, [X2 + 0x20]
	0x02D44308 MOV X19, X1
	0x02D4430C LDR X8, [X8 + 0xC0]
	0x02D44310 LDR X0, [X8 + 0x18]
	0x02D44314 LDRB W8, [X0 + 0x135]
	0x02D44318 TBNZ X8, 0x0, 0x2D44320
	0x02D4431C BL 0x1C5C684
	0x02D44320 CBZ X19, 0x2D44338
	0x02D44324 LDR X8, [X19]
	0x02D44328 LDRB W9, [X0 + 0x130]
	0x02D4432C LDRB W10, [X8 + 0x130]
	0x02D44330 CMP W10, W9
	0x02D44334 B.CS 0x2D44340
	0x02D44338 MOV W0, W31
	0x02D4433C B 0x2D44354
	0x02D44340 LDR X8, [X8 + 0xC8]
	0x02D44344 ADD X8, X8, X9, 0x3, LSL
	0x02D44348 LDUR X8, [X8 - 0x8]
	0x02D4434C CMP X8, X0
	0x02D44350 CSET W0, EQ
	0x02D44354 LDP X30, X19, [X31], #0x10
	0x02D44358 RET
	0x02D4435C STR X30, [X31 - 0x10]!
	0x02D44360 CBZ X0, 0x2D44390
	0x02D44364 MOV X1, X31
	0x02D44368 BL 0x33BE520
	0x02D4436C CBZ X0, 0x2D44390
	0x02D44370 LDR X8, [X0]
	0x02D44374 LDP X9, X1, [X8 + 0x1A8]
	0x02D44378 BLR X9
	0x02D4437C CBZ X0, 0x2D44390
	0x02D44380 LDR X8, [X0]
	0x02D44384 LDP X2, X1, [X8 + 0x158]
	0x02D44388 LDR X30, [X31], #0x10
	0x02D4438C BR X2

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, [X0+32]
	007 Compare X20, 0
	008 JumpIfEqual {70}
	009 Move X8, [X3+32]
	010 Move W21, [X0+48]
	011 Move W22, [X0+52]
	012 Move X19, X0
	013 Move X8, [X8+192]
	014 Move X1, [X8+32]
	015 Move W8, [X1+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {23}
	020 Move X0, X1
	021 Call 0x1C5D684
	022 Move X1, X0
	023 Move X8, [X20]
	024 Multiply W21, W22, W21
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Compare X9, 0
	027 JumpIfEqual {34}
	028 Move X10, [X8+176]
	029 Add X10, X10, 8
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Subtract X9, X9, 1
	033 Add X10, X10, 16
	034 Move W2, 2
	035 Move X0, X20
	036 Call 0x1C5D788
	037 Move W9, [X10]
	038 Add W9, W9, 2
	039 Add X8, X8, W9
	040 Add X0, X8, 312
	041 Move X8, [X0]
	042 Move X2, [X0+8]
	043 Move X0, X20
	044 Move W1, W21
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move X8, [X19]
	047 Move X21, [X19+40]
	048 Move X20, X0
	049 Move X0, X19
	050 Move X9, [X8+456]
	051 Move X3, [X8+464]
	052 Move X1, X20
	053 Move X2, X21
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move X8, [X19+24]
	056 Add X9, X21, W0
	057 Move [X19+40], X9
	058 Compare X8, 0
	059 JumpIfEqual {70}
	060 Move X3, [X8+24]
	061 Move X0, [X8+64]
	062 Move X2, [X8+40]
	063 Move X1, X20
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 CallNoReturn X3
	070 Call 0x1C17F20

Method: System.Int32 Gen(T[] buf, System.Int64 timeSamples)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Int32 get_Channels()

Disassembly:
	0x02D44390 BL 0x1C16F20
	0x02D44394 LDR X8, [X1 + 0x20]

ISIL:
	001 Move W0, [X0+52]
	002 Return X0

Method: System.Int32 get_SamplingRate()

Disassembly:
	0x02D44398 LDR X8, [X8 + 0xC0]
	0x02D4439C LDR X1, [X8 + 0x20]

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: System.String get_Error()

Disassembly:
	0x02D443A0 B 0x2912530
	0x02D443A4 STR X30, [X31 - 0x10]!

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set_Error(System.String value)

Disassembly:
	0x02D443A8 STRB W1, [X31 + 0xC]
	0x02D443AC LDR X8, [X3 + 0x20]

ISIL:
	001 Move [X0+64], X1
	002 Return 

Method: System.Void Dispose()

Disassembly:
	0x02D443B0 MOV W1, W2
	0x02D443B4 ADD X0, X31, 0xC
	0x02D443B8 LDR X8, [X8 + 0xC0]
	0x02D443BC LDR X8, [X8 + 0x10]
	0x02D443C0 MOV X2, X8

ISIL:
	001 Move X0, [X0+16]
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move X1, X31
	005 Call Timer.Close, X0
	006 Return 
	007 Return 

