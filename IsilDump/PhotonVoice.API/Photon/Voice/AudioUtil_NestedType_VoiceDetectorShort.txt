Type: Photon.Voice.AudioUtil/VoiceDetectorShort

Method: System.Void .ctor(System.Int32 samplingRate, System.Int32 numChannels)

Disassembly:
	0x03555CD8 STRB W8, [X20 + 0xD84]
	0x03555CDC LDR W8, [X19 + 0x1C]
	0x03555CE0 SUB W8, W8, 0x1
	0x03555CE4 CMP W8, 0x0
	0x03555CE8 STR W8, [X19 + 0x1C]
	0x03555CEC B.LE 0x3555CFC
	0x03555CF0 LDP X20, X19, [X31 + 0x10]
	0x03555CF4 LDR X30, [X31], #0x20
	0x03555CF8 RET
	0x03555CFC ADRP X8, 0xBC7000
	0x03555D00 LDR X8, [X8 + 0xE18]
	0x03555D04 LDR X0, [X8]
	0x03555D08 LDR W8, [X0 + 0xE0]
	0x03555D0C CBNZ W8, 0x3555D14
	0x03555D10 BL 0x1C16DFC
	0x03555D14 MOV X0, X19
	0x03555D18 LDP X20, X19, [X31 + 0x10]
	0x03555D1C LDR X30, [X31], #0x20
	0x03555D20 B 0x3555D24
	0x03555D24 STR X30, [X31 - 0x20]!
	0x03555D28 STP X20, X19, [X31 + 0x10]
	0x03555D2C ADRP X20, 0xE8A000
	0x03555D30 LDRB W8, [X20 + 0xD85]
	0x03555D34 MOV X19, X0
	0x03555D38 TBNZ X8, 0x0, 0x3555D50
	0x03555D3C ADRP X0, 0xB9E000
	0x03555D40 LDR X0, [X0 + 0xE00]
	0x03555D44 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xE8B000
	008 Move X23, 0xBE1000
	009 Move W8, [X22+3439]
	010 Move X23, [X23+888]
	011 Move W20, W2
	012 Move W21, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xBE1000
	019 Move X0, [X0+888]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3439], W8
	023 Move X3, [X23]
	024 Move X0, X19
	025 Move W1, W21
	026 Move W2, W20
	027 Call 0x2846ADC, X0, X1, X2
	028 Move W8, 256
	029 NotImplemented "Instruction MOVK not yet implemented."
	030 Move [X19+20], W8
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X30, [X31+48]
	036 Move X23, [X31+56]
	037 Return 

Method: System.Int16[] Process(System.Int16[] buffer)

Disassembly:
	0x03555D48 MOVZ W8, 0x1
	0x03555D4C STRB W8, [X20 + 0xD85]
	0x03555D50 LDRB W8, [X19 + 0x30]
	0x03555D54 CBZ W8, 0x3555D68
	0x03555D58 ADD X0, X19, 0x20
	0x03555D5C MOV X1, X31
	0x03555D60 BL 0x32C0794
	0x03555D64 STRB W31, [X19 + 0x30]
	0x03555D68 LDR X20, [X19 + 0x10]
	0x03555D6C CBZ X20, 0x3555DE0
	0x03555D70 LDRB W8, [X19 + 0x18]
	0x03555D74 CBNZ W8, 0x3555DE0
	0x03555D78 ADRP X10, 0xB9E000
	0x03555D7C LDR X8, [X20]
	0x03555D80 LDR X10, [X10 + 0xE00]
	0x03555D84 LDRH W9, [X8 + 0x12E]
	0x03555D88 LDR X1, [X10]
	0x03555D8C CBZ X9, 0x3555DB0
	0x03555D90 LDR X10, [X8 + 0xB0]
	0x03555D94 ADD X10, X10, 0x8
	0x03555D98 LDUR X11, [X10 - 0x8]
	0x03555D9C CMP X11, X1
	0x03555DA0 B.EQ 0x3555DC0
	0x03555DA4 SUBS X9, X9, 0x1
	0x03555DA8 ADD X10, X10, 0x10
	0x03555DAC B.NE 0x3555D98
	0x03555DB0 MOV X0, X20
	0x03555DB4 MOV W2, W31
	0x03555DB8 BL 0x1C5C788
	0x03555DBC B 0x3555DCC
	0x03555DC0 LDRSW X9, [X10]
	0x03555DC4 ADD X8, X8, X9, 0x4, LSL
	0x03555DC8 ADD X0, X8, 0x138
	0x03555DCC LDP X8, X1, [X0]
	0x03555DD0 MOV X0, X20
	0x03555DD4 BLR X8
	0x03555DD8 MOVZ W8, 0x1
	0x03555DDC STRB W8, [X19 + 0x18]
	0x03555DE0 LDP X20, X19, [X31 + 0x10]
	0x03555DE4 LDR X30, [X31], #0x20
	0x03555DE8 RET
	0x03555DEC LDR X0, [X0]
	0x03555DF0 RET
	0x03555DF4 LDR W0, [X0 + 0xC]
	0x03555DF8 RET
	0x03555DFC LDR W0, [X0 + 0x8]
	0x03555E00 RET
	0x03555E04 LDRB W0, [X0 + 0x31]
	0x03555E08 RET
	0x03555E0C LDRB W0, [X0 + 0x32]
	0x03555E10 RET
	0x03555E14 STP X30, X21, [X31 - 0x20]!
	0x03555E18 STP X20, X19, [X31 + 0x10]
	0x03555E1C ADRP X20, 0xE8A000
	0x03555E20 ADRP X21, 0xBC7000
	0x03555E24 LDRB W8, [X20 + 0xD86]
	0x03555E28 LDR X21, [X21 + 0xE18]
	0x03555E2C MOV X19, X0
	0x03555E30 TBNZ X8, 0x0, 0x3555E48
	0x03555E34 ADRP X0, 0xBC7000
	0x03555E38 LDR X0, [X0 + 0xE18]
	0x03555E3C BL 0x1C16CF4
	0x03555E40 MOVZ W8, 0x1
	0x03555E44 STRB W8, [X20 + 0xD86]
	0x03555E48 LDR X0, [X21]
	0x03555E4C LDR W8, [X0 + 0xE0]
	0x03555E50 CBNZ W8, 0x3555E58
	0x03555E54 BL 0x1C16DFC
	0x03555E58 LDRB W8, [X19 + 0x31]
	0x03555E5C LDP X20, X19, [X31 + 0x10]
	0x03555E60 UBFM W0, W8, 0x6, 0x6

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xE8B000
	008 Move W8, [X21+3440]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xBE1000
	016 Move X0, [X0+896]
	017 Call 0x1C17CF4
	018 Move X0, 0xBE1000
	019 Move X0, [X0+904]
	020 Call 0x1C17CF4
	021 Move X0, 0xBE1000
	022 Move X0, [X0+912]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3440], W8
	026 Move W8, [X20+16]
	027 Compare W8, 0
	028 JumpIfEqual {66}
	029 Compare X19, 0
	030 JumpIfEqual {75}
	031 Move X8, [X19+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X23, 0xBE1000
	034 Move X23, [X23+912]
	035 Move X21, X31
	036 And X8, X8, 0
	037 Add X22, X19, 32
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction LDRSH not yet implemented."
	040 Move V0, [X20+24]
	041 NotImplemented "Instruction SCVTF not yet implemented."
	042 NotImplemented "Instruction FCMP not yet implemented."
	043 Move X2, [X23]
	044 Move W1, 1
	045 Move X0, X20
	046 Call 0x28468C8, X0, X1
	047 Move W8, W31
	048 Move W8, [X20+52]
	049 Add W8, W8, 1
	050 Move [X20+52], W8
	051 Move W8, [X19+24]
	052 Add X21, X21, 1
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W8, [X20+52]
	055 Move W9, [X20+60]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X8, 0xBE1000
	058 Move X8, [X8+912]
	059 Move X0, X20
	060 Move W1, W31
	061 Move X2, [X8]
	062 Call 0x28468C8, X0, X1
	063 Move W8, [X20+28]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 NotImplemented "Instruction CSEL not yet implemented."
	066 Move X0, X19
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+48]
	072 Move X23, [X31+56]
	073 Return X0
	074 Call 0x1C17F28
	075 Call 0x1C17F20

