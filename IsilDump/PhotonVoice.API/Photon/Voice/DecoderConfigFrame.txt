Type: Photon.Voice.DecoderConfigFrame

Method: System.Void .ctor(Photon.Voice.ILogger logger, Photon.Voice.IDecoder decoder)

Disassembly:
	0x03557A90 LDR X8, [X20 + 0x90]
	0x03557A94 CBZ X8, 0x3557E00
	0x03557A98 ADRP X9, 0xB9C000
	0x03557A9C LDR X9, [X9 + 0xAC8]
	0x03557AA0 MOV X22, X0
	0x03557AA4 LDR X23, [X8 + 0x18]
	0x03557AA8 MOVZ W1, 0x7
	0x03557AAC LDR X0, [X9]
	0x03557AB0 BL 0x1C16D6C
	0x03557AB4 CBZ X0, 0x3557E00
	0x03557AB8 LDR W8, [X0 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move [X21+16], X20
	011 Move [X21+24], X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: System.Boolean TryConfigure(ref Photon.Voice.FrameBuffer buf, System.Boolean decoderReady)

Disassembly:
	0x03557ABC MOV X24, X0
	0x03557AC0 CBZ W8, 0x3557DFC
	0x03557AC4 LDR X9, [X20 + 0xD0]
	0x03557AC8 CMP W8, 0x1
	0x03557ACC STR X9, [X24 + 0x20]
	0x03557AD0 B.EQ 0x3557DFC
	0x03557AD4 ADRP X9, 0xBDE000
	0x03557AD8 LDR X9, [X9 + 0x4E0]
	0x03557ADC CMP W8, 0x2
	0x03557AE0 LDR X9, [X9]
	0x03557AE4 STR X9, [X24 + 0x28]
	0x03557AE8 B.LS 0x3557DFC
	0x03557AEC CMP W8, 0x3
	0x03557AF0 STR X22, [X24 + 0x30]
	0x03557AF4 B.EQ 0x3557DFC
	0x03557AF8 ADRP X8, 0xBA0000
	0x03557AFC LDR X8, [X8 + 0x928]
	0x03557B00 ADD X0, X20, 0x48
	0x03557B04 LDR X8, [X8]
	0x03557B08 STR X8, [X24 + 0x38]
	0x03557B0C BL 0x3559520
	0x03557B10 LDR W8, [X24 + 0x18]
	0x03557B14 CMP W8, 0x4
	0x03557B18 B.LS 0x3557DFC
	0x03557B1C CMP W8, 0x5
	0x03557B20 STR X0, [X24 + 0x40]
	0x03557B24 B.EQ 0x3557DFC
	0x03557B28 ADRP X8, 0xBDE000
	0x03557B2C LDR X8, [X8 + 0x4E8]
	0x03557B30 ADD X0, X20, 0x88
	0x03557B34 MOV X1, X31
	0x03557B38 LDR X8, [X8]
	0x03557B3C STR X8, [X24 + 0x48]
	0x03557B40 BL 0x3319BB4
	0x03557B44 LDR W8, [X24 + 0x18]
	0x03557B48 CMP W8, 0x6
	0x03557B4C B.LS 0x3557DFC
	0x03557B50 ADRP X26, 0xB9C000
	0x03557B54 LDR X26, [X26 + 0x9C8]
	0x03557B58 STR X0, [X24 + 0x50]
	0x03557B5C MOV X0, X24
	0x03557B60 MOV X1, X31
	0x03557B64 BL 0x32278CC
	0x03557B68 LDR X25, [X26]
	0x03557B6C MOV X24, X0
	0x03557B70 LDR X8, [X25 + 0x38]
	0x03557B74 CBNZ X8, 0x3557B84
	0x03557B78 MOV X0, X25
	0x03557B7C BL 0x1C5C6E0
	0x03557B80 LDR X8, [X25 + 0x38]
	0x03557B84 LDR X0, [X8 + 0x10]
	0x03557B88 LDRB W8, [X0 + 0x135]
	0x03557B8C TBNZ X8, 0x0, 0x3557B94
	0x03557B90 BL 0x1C5C684
	0x03557B94 LDR W8, [X0 + 0xE0]
	0x03557B98 CBNZ W8, 0x3557BA0
	0x03557B9C BL 0x1C16DFC
	0x03557BA0 LDR X8, [X25 + 0x38]
	0x03557BA4 LDR X0, [X8 + 0x10]
	0x03557BA8 LDRB W8, [X0 + 0x135]
	0x03557BAC TBNZ X8, 0x0, 0x3557BB4
	0x03557BB0 BL 0x1C5C684
	0x03557BB4 CBZ X23, 0x3557E00
	0x03557BB8 ADRP X27, 0xBA1000
	0x03557BBC LDR X9, [X0 + 0xB8]
	0x03557BC0 LDR X8, [X23]
	0x03557BC4 LDR X27, [X27 + 0x348]
	0x03557BC8 LDR X25, [X9]
	0x03557BCC LDRH W9, [X8 + 0x12E]
	0x03557BD0 LDR X1, [X27]
	0x03557BD4 CBZ X9, 0x3557BF8
	0x03557BD8 LDR X10, [X8 + 0xB0]
	0x03557BDC ADD X10, X10, 0x8
	0x03557BE0 LDUR X11, [X10 - 0x8]
	0x03557BE4 CMP X11, X1
	0x03557BE8 B.EQ 0x3557C08
	0x03557BEC SUBS X9, X9, 0x1
	0x03557BF0 ADD X10, X10, 0x10
	0x03557BF4 B.NE 0x3557BE0
	0x03557BF8 MOVZ W2, 0x1
	0x03557BFC MOV X0, X23
	0x03557C00 BL 0x1C5C788
	0x03557C04 B 0x3557C18
	0x03557C08 LDR W9, [X10]
	0x03557C0C ADD W9, W9, 0x1
	0x03557C10 ADD X8, X8, W9, 0x4, SXTW
	0x03557C14 ADD X0, X8, 0x138
	0x03557C18 LDP X8, X4, [X0]
	0x03557C1C MOVZ W1, 0x3
	0x03557C20 MOV X0, X23
	0x03557C24 MOV X2, X24
	0x03557C28 MOV X3, X25
	0x03557C2C BLR X8
	0x03557C30 LDR X8, [X20 + 0x90]
	0x03557C34 CBZ X8, 0x3557E00
	0x03557C38 LDR X23, [X8 + 0x10]
	0x03557C3C CBZ X23, 0x3557E00
	0x03557C40 ADRP X10, 0xBDE000
	0x03557C44 LDR X8, [X23]
	0x03557C48 LDR X10, [X10 + 0x4D0]
	0x03557C4C ADRP X25, 0xBC4000
	0x03557C50 LDR W24, [X20 + 0x84]
	0x03557C54 LDRH W9, [X8 + 0x12E]
	0x03557C58 LDR X1, [X10]
	0x03557C5C LDR X25, [X25 + 0x5B0]
	0x03557C60 CBZ X9, 0x3557C84
	0x03557C64 LDR X10, [X8 + 0xB0]
	0x03557C68 ADD X10, X10, 0x8
	0x03557C6C LDUR X11, [X10 - 0x8]
	0x03557C70 CMP X11, X1
	0x03557C74 B.EQ 0x3557C94
	0x03557C78 SUBS X9, X9, 0x1
	0x03557C7C ADD X10, X10, 0x10
	0x03557C80 B.NE 0x3557C6C
	0x03557C84 MOVZ W2, 0x1
	0x03557C88 MOV X0, X23
	0x03557C8C BL 0x1C5C788
	0x03557C90 B 0x3557CA4
	0x03557C94 LDR W9, [X10]
	0x03557C98 ADD W9, W9, 0x1
	0x03557C9C ADD X8, X8, W9, 0x4, SXTW
	0x03557CA0 ADD X0, X8, 0x138
	0x03557CA4 LDP X8, X5, [X0]
	0x03557CA8 AND W3, W21, 0x1
	0x03557CAC MOV X0, X23
	0x03557CB0 MOV X1, X20
	0x03557CB4 MOV W2, W24
	0x03557CB8 MOV X4, X19
	0x03557CBC BLR X8
	0x03557CC0 LDR X0, [X25]
	0x03557CC4 LDR W8, [X0 + 0xE0]
	0x03557CC8 CBNZ W8, 0x3557CD0
	0x03557CCC BL 0x1C16DFC
	0x03557CD0 LDR W8, [X20 + 0xAC]
	0x03557CD4 CBZ W8, 0x3557DE0
	0x03557CD8 LDR X8, [X20 + 0x90]
	0x03557CDC CBZ X8, 0x3557E00
	0x03557CE0 ADRP X9, 0xBDE000
	0x03557CE4 LDR X9, [X9 + 0x4D8]
	0x03557CE8 LDR X0, [X20 + 0xD0]
	0x03557CEC LDR X23, [X8 + 0x18]
	0x03557CF0 MOV X2, X22
	0x03557CF4 LDR X1, [X9]
	0x03557CF8 MOV X3, X31
	0x03557CFC BL 0x32274B8
	0x03557D00 LDR X24, [X26]
	0x03557D04 MOV X22, X0
	0x03557D08 LDR X8, [X24 + 0x38]
	0x03557D0C CBNZ X8, 0x3557D1C
	0x03557D10 MOV X0, X24
	0x03557D14 BL 0x1C5C6E0
	0x03557D18 LDR X8, [X24 + 0x38]
	0x03557D1C LDR X0, [X8 + 0x10]
	0x03557D20 LDRB W8, [X0 + 0x135]
	0x03557D24 TBNZ X8, 0x0, 0x3557D2C
	0x03557D28 BL 0x1C5C684
	0x03557D2C LDR W8, [X0 + 0xE0]
	0x03557D30 CBNZ W8, 0x3557D38
	0x03557D34 BL 0x1C16DFC
	0x03557D38 LDR X8, [X24 + 0x38]
	0x03557D3C LDR X0, [X8 + 0x10]
	0x03557D40 LDRB W8, [X0 + 0x135]
	0x03557D44 TBNZ X8, 0x0, 0x3557D4C
	0x03557D48 BL 0x1C5C684
	0x03557D4C CBZ X23, 0x3557E00
	0x03557D50 LDR X9, [X0 + 0xB8]
	0x03557D54 LDR X8, [X23]
	0x03557D58 LDR X1, [X27]
	0x03557D5C LDR X24, [X9]
	0x03557D60 LDRH W9, [X8 + 0x12E]
	0x03557D64 CBZ X9, 0x3557D88
	0x03557D68 LDR X10, [X8 + 0xB0]
	0x03557D6C ADD X10, X10, 0x8
	0x03557D70 LDUR X11, [X10 - 0x8]
	0x03557D74 CMP X11, X1
	0x03557D78 B.EQ 0x3557D98
	0x03557D7C SUBS X9, X9, 0x1
	0x03557D80 ADD X10, X10, 0x10
	0x03557D84 B.NE 0x3557D70
	0x03557D88 MOVZ W2, 0x1
	0x03557D8C MOV X0, X23
	0x03557D90 BL 0x1C5C788
	0x03557D94 B 0x3557DA8
	0x03557D98 LDR W9, [X10]
	0x03557D9C ADD W9, W9, 0x1
	0x03557DA0 ADD X8, X8, W9, 0x4, SXTW
	0x03557DA4 ADD X0, X8, 0x138
	0x03557DA8 LDP X8, X4, [X0]
	0x03557DAC MOVZ W1, 0x3
	0x03557DB0 MOV X0, X23
	0x03557DB4 MOV X2, X22
	0x03557DB8 MOV X3, X24
	0x03557DBC BLR X8
	0x03557DC0 LDP X1, X2, [X20 + 0xA0]
	0x03557DC4 AND W4, W21, 0x1
	0x03557DC8 MOVZ W3, 0x1
	0x03557DCC MOVZ W7, 0x1
	0x03557DD0 MOV X0, X20
	0x03557DD4 MOV X5, X19
	0x03557DD8 MOV W6, W31
	0x03557DDC BL 0x35598FC
	0x03557DE0 LDP X20, X19, [X31 + 0x50]
	0x03557DE4 LDP X22, X21, [X31 + 0x40]
	0x03557DE8 LDP X24, X23, [X31 + 0x30]
	0x03557DEC LDP X26, X25, [X31 + 0x20]
	0x03557DF0 LDP X30, X27, [X31 + 0x10]
	0x03557DF4 ADD X31, X31, 0x60
	0x03557DF8 RET
	0x03557DFC BL 0x1C16F28
	0x03557E00 BL 0x1C16F20
	0x03557E04 STP X30, X25, [X31 - 0x40]!
	0x03557E08 STP X24, X23, [X31 + 0x10]
	0x03557E0C STP X22, X21, [X31 + 0x20]
	0x03557E10 STP X20, X19, [X31 + 0x30]
	0x03557E14 ADRP X22, 0xE88000
	0x03557E18 LDRB W8, [X22 + 0xDA6]
	0x03557E1C MOV X19, X2
	0x03557E20 MOV W20, W1
	0x03557E24 MOV X21, X0
	0x03557E28 TBNZ X8, 0x0, 0x3557E64
	0x03557E2C ADRP X0, 0xB9C000
	0x03557E30 LDR X0, [X0 + 0x9C8]
	0x03557E34 BL 0x1C16CF4
	0x03557E38 ADRP X0, 0xBA1000
	0x03557E3C LDR X0, [X0 + 0x348]
	0x03557E40 BL 0x1C16CF4
	0x03557E44 ADRP X0, 0xBDE000
	0x03557E48 LDR X0, [X0 + 0x4D0]
	0x03557E4C BL 0x1C16CF4
	0x03557E50 ADRP X0, 0xBDE000
	0x03557E54 LDR X0, [X0 + 0x4F0]
	0x03557E58 BL 0x1C16CF4
	0x03557E5C MOVZ W8, 0x1
	0x03557E60 STRB W8, [X22 + 0xDA6]
	0x03557E64 CBZ X19, 0x3557E74
	0x03557E68 TBNZ X20, 0x0, 0x3557E74
	0x03557E6C LDR W8, [X19 + 0x18]
	0x03557E70 CBZ W8, 0x3558014
	0x03557E74 LDR X8, [X21 + 0x90]
	0x03557E78 CBZ X8, 0x3558028
	0x03557E7C ADRP X24, 0xBDE000
	0x03557E80 ADRP X25, 0xB9C000
	0x03557E84 LDR X22, [X8 + 0x18]
	0x03557E88 LDR X23, [X21 + 0xD0]
	0x03557E8C LDR X24, [X24 + 0x4F0]
	0x03557E90 LDR X25, [X25 + 0x9C8]
	0x03557E94 AND W1, W20, 0x1
	0x03557E98 MOV X2, X19
	0x03557E9C BL 0x355942C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0xE89000
	011 Move W8, [X22+3475]
	012 Move W21, W2
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0xB9D000
	020 Move X0, [X0+2504]
	021 Call 0x1C17CF4
	022 Move X0, 0xBC6000
	023 Move X0, [X0+3608]
	024 Call 0x1C17CF4
	025 Move X0, 0xBDF000
	026 Move X0, [X0+1128]
	027 Call 0x1C17CF4
	028 Move X0, 0xBA2000
	029 Move X0, [X0+840]
	030 Call 0x1C17CF4
	031 Move X0, 0xBDF000
	032 Move X0, [X0+1136]
	033 Call 0x1C17CF4
	034 Move X0, 0xBDF000
	035 Move X0, [X0+1144]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X22+3475], W8
	039 Move [X31+12], W31
	040 Move W8, [X20+88]
	041 Compare W8, 0
	042 JumpIfEqual {44}
	043 Move W0, 1
	044 Move X25, 0xBC6000
	045 Move X25, [X25+3608]
	046 Move X0, [X25]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X19
	052 Call FrameBuffer.get_IsConfig, X0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {146}
	057 Move X8, [X19+48]
	058 Move V1, [X19+16]
	059 Move V0, [X19+32]
	060 Move V2, [X19]
	061 Move [X20+80], X8
	062 Move [X20+48], V1
	063 Move [X20+56], V0
	064 Move [X20+2], V2
	065 Move X0, [X25]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move W8, [X19+28]
	071 Add X0, X31, 12
	072 Move X1, X31
	073 Add W8, W8, 1
	074 Move [X19+28], W8
	075 Move W8, [X20+44]
	076 Move X22, [X20+16]
	077 Move [X31+12], W8
	078 Call Int32.ToString, X0
	079 Move X8, 0xBDF000
	080 Move X8, [X8+1144]
	081 Move X1, X0
	082 Move X2, X31
	083 Move X8, [X8]
	084 Move X0, X8
	085 Call String.Concat, X0, X1
	086 Move X8, 0xB9D000
	087 Move X8, [X8+2504]
	088 Move X23, X0
	089 Move X24, [X8]
	090 Move X8, [X24+56]
	091 Compare X8, 0
	092 JumpIfNotEqual {96}
	093 Move X0, X24
	094 Call 0x1C5D6E0
	095 Move X8, [X24+56]
	096 Move X0, [X8+16]
	097 Move W8, [X0+309]
	098 Move TEMP, X8
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfEqual {103}
	102 Call 0x1C5D684
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Move X8, [X24+56]
	108 Move X0, [X8+16]
	109 Move W8, [X0+309]
	110 Move TEMP, X8
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfEqual {115}
	114 Call 0x1C5D684
	115 Compare X22, 0
	116 JumpIfEqual {289}
	117 Move X10, 0xBA2000
	118 Move X9, [X0+184]
	119 Move X8, [X22]
	120 Move X10, [X10+840]
	121 Move X24, [X9]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Move X1, [X10]
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move W2, 1
	133 Move X0, X22
	134 Call 0x1C5D788
	135 Move W9, [X10]
	136 Add W9, W9, 1
	137 Add X8, X8, W9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X4, [X0+8]
	141 Move W1, 3
	142 Move X0, X22
	143 Move X2, X23
	144 Move X3, X24
	145 NotImplemented "Instruction BLR not yet implemented."
	146 Move TEMP, X21
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfNotEqual {226}
	150 Move X0, [X25]
	151 Add X21, X20, 32
	152 Move W8, [X0+224]
	153 Compare W8, 0
	154 JumpIfNotEqual {156}
	155 Call 0x1C17DFC
	156 Move X8, [X21]
	157 Compare X8, 0
	158 JumpIfEqual {270}
	159 Move X0, [X25]
	160 Move X22, [X20+16]
	161 Move W8, [X0+224]
	162 Compare W8, 0
	163 JumpIfNotEqual {165}
	164 Call 0x1C17DFC
	165 Move W8, [X20+44]
	166 Add X0, X31, 12
	167 Move X1, X31
	168 Move [X31+12], W8
	169 Call Int32.ToString, X0
	170 Move X8, 0xBDF000
	171 Move X8, [X8+1136]
	172 Move X1, X0
	173 Move X2, X31
	174 Move X8, [X8]
	175 Move X0, X8
	176 Call String.Concat, X0, X1
	177 Move X8, 0xB9D000
	178 Move X8, [X8+2504]
	179 Move X23, X0
	180 Move X24, [X8]
	181 Move X8, [X24+56]
	182 Compare X8, 0
	183 JumpIfNotEqual {187}
	184 Move X0, X24
	185 Call 0x1C5D6E0
	186 Move X8, [X24+56]
	187 Move X0, [X8+16]
	188 Move W8, [X0+309]
	189 Move TEMP, X8
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfEqual {194}
	193 Call 0x1C5D684
	194 Move W8, [X0+224]
	195 Compare W8, 0
	196 JumpIfNotEqual {198}
	197 Call 0x1C17DFC
	198 Move X8, [X24+56]
	199 Move X0, [X8+16]
	200 Move W8, [X0+309]
	201 Move TEMP, X8
	202 And TEMP, TEMP, 1
	203 Compare TEMP, 1
	204 JumpIfEqual {206}
	205 Call 0x1C5D684
	206 Compare X22, 0
	207 JumpIfEqual {289}
	208 Move X10, 0xBA2000
	209 Move X9, [X0+184]
	210 Move X8, [X22]
	211 Move X10, [X10+840]
	212 Move X24, [X9]
	213 NotImplemented "Instruction LDRH not yet implemented."
	214 Move X1, [X10]
	215 Compare X9, 0
	216 JumpIfEqual {223}
	217 Move X10, [X8+176]
	218 Add X10, X10, 8
	219 NotImplemented "Instruction LDUR not yet implemented."
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Subtract X9, X9, 1
	222 Add X10, X10, 16
	223 Move W2, 1
	224 Move X0, X22
	225 Call 0x1C5D788
	226 Move W0, W31
	227 Move W9, [X10]
	228 Add W9, W9, 1
	229 Add X8, X8, W9
	230 Add X0, X8, 312
	231 Move X8, [X0]
	232 Move X4, [X0+8]
	233 Move W1, 3
	234 Move X0, X22
	235 Move X2, X23
	236 Move X3, X24
	237 NotImplemented "Instruction BLR not yet implemented."
	238 Move X22, [X20+24]
	239 Move W8, 1
	240 Move [X20+88], W8
	241 Compare X22, 0
	242 JumpIfEqual {289}
	243 Move X10, 0xBDF000
	244 Move X8, [X22]
	245 Move X10, [X10+1128]
	246 NotImplemented "Instruction LDRH not yet implemented."
	247 Move X1, [X10]
	248 Compare X9, 0
	249 JumpIfEqual {256}
	250 Move X10, [X8+176]
	251 Add X10, X10, 8
	252 NotImplemented "Instruction LDUR not yet implemented."
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Subtract X9, X9, 1
	255 Add X10, X10, 16
	256 Move W2, 2
	257 Move X0, X22
	258 Call 0x1C5D788
	259 Move W9, [X10]
	260 Add W9, W9, 2
	261 Add X8, X8, W9
	262 Add X0, X8, 312
	263 Move X8, [X0]
	264 Move X2, [X0+8]
	265 Move X0, X22
	266 Move X1, X21
	267 NotImplemented "Instruction BLR not yet implemented."
	268 Move X0, X21
	269 Call FrameBuffer.Release, X0
	270 Move X0, [X25]
	271 Move W8, [X0+224]
	272 Compare W8, 0
	273 JumpIfNotEqual {275}
	274 Call 0x1C17DFC
	275 Move X8, [X19]
	276 Move X9, [X21]
	277 NotImplemented "Instruction CMP not yet implemented."
	278 NotImplemented "Instruction CSET not yet implemented."
	279 Move X20, [X31+64]
	280 Move X19, [X31+72]
	281 Move X22, [X31+48]
	282 Move X21, [X31+56]
	283 Move X24, [X31+32]
	284 Move X23, [X31+40]
	285 Move X30, [X31+16]
	286 Move X25, [X31+24]
	287 Add X31, X31, 80
	288 Return X0
	289 Call 0x1C17F20

Method: System.Void Dispose()

Disassembly:
	0x03557EA0 LDR X1, [X24]
	0x03557EA4 MOV X2, X0
	0x03557EA8 MOV X0, X23
	0x03557EAC MOV X3, X31
	0x03557EB0 BL 0x32274B8
	0x03557EB4 LDR X24, [X25]
	0x03557EB8 MOV X23, X0
	0x03557EBC LDR X8, [X24 + 0x38]
	0x03557EC0 CBNZ X8, 0x3557ED0
	0x03557EC4 MOV X0, X24
	0x03557EC8 BL 0x1C5C6E0
	0x03557ECC LDR X8, [X24 + 0x38]
	0x03557ED0 LDR X0, [X8 + 0x10]
	0x03557ED4 LDRB W8, [X0 + 0x135]
	0x03557ED8 TBNZ X8, 0x0, 0x3557EE0
	0x03557EDC BL 0x1C5C684
	0x03557EE0 LDR W8, [X0 + 0xE0]
	0x03557EE4 CBNZ W8, 0x3557EEC
	0x03557EE8 BL 0x1C16DFC
	0x03557EEC LDR X8, [X24 + 0x38]
	0x03557EF0 LDR X0, [X8 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE89000
	006 Move X21, 0xBC6000
	007 Move W8, [X20+3476]
	008 Move X21, [X21+3608]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xBC6000
	015 Move X0, [X0+3608]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3476], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Add X0, X19, 32
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call FrameBuffer.Release, X0
	030 Return 

