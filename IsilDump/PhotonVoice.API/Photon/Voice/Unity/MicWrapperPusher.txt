Type: Photon.Voice.Unity.MicWrapperPusher

Method: System.Void .ctor(UnityEngine.GameObject parent, System.String device, System.Int32 suggestedFrequency, Photon.Voice.ILogger logger)

Disassembly:
	0x0357088C ADRP X0, 0xBC5000
	0x03570890 LDR X0, [X0 + 0xFB8]
	0x03570894 BL 0x1C16CF4
	0x03570898 MOVZ W8, 0x1
	0x0357089C STRB W8, [X23 + 0xE57]
	0x035708A0 LDR X0, [X19 + 0xB0]
	0x035708A4 CBZ X0, 0x3570900
	0x035708A8 ADRP X23, 0xBC5000
	0x035708AC LDR X23, [X23 + 0xFB8]
	0x035708B0 MOVZ W1, 0x1
	0x035708B4 MOV X2, X31
	0x035708B8 BL 0x3BFCF88
	0x035708BC LDR X0, [X23]
	0x035708C0 MOV W1, W22
	0x035708C4 MOV W2, W21
	0x035708C8 MOV W3, W20
	0x035708CC MOV W4, W31
	0x035708D0 MOV X5, X31
	0x035708D4 BL 0x3BFC1C8
	0x035708D8 LDR X8, [X19 + 0xB0]
	0x035708DC STR X0, [X19 + 0xB8]
	0x035708E0 CBZ X8, 0x3570900
	0x035708E4 LDP X20, X19, [X31 + 0x20]
	0x035708E8 LDP X22, X21, [X31 + 0x10]
	0x035708EC MOV X1, X0
	0x035708F0 MOV X0, X8
	0x035708F4 MOV X2, X31
	0x035708F8 LDP X30, X23, [X31], #0x30
	0x035708FC B 0x3BFCA38
	0x03570900 BL 0x1C16F20
	0x03570904 STR X30, [X31 - 0x10]!
	0x03570908 LDR X0, [X0 + 0xB0]
	0x0357090C CBZ X0, 0x357091C
	0x03570910 MOV X1, X31
	0x03570914 LDR X30, [X31], #0x10
	0x03570918 B 0x3BFCAC0
	0x0357091C BL 0x1C16F20
	0x03570920 STR X30, [X31 - 0x10]!
	0x03570924 LDR X0, [X0 + 0xB8]
	0x03570928 CBZ X0, 0x3570938
	0x0357092C MOV X3, X31
	0x03570930 LDR X30, [X31], #0x10
	0x03570934 B 0x3BFBFA4
	0x03570938 BL 0x1C16F20
	0x0357093C STP X30, X21, [X31 - 0x20]!
	0x03570940 STP X20, X19, [X31 + 0x10]
	0x03570944 ADRP X20, 0xE6F000
	0x03570948 ADRP X21, 0xBC5000
	0x0357094C LDRB W8, [X20 + 0xE58]
	0x03570950 LDR X21, [X21 + 0xFC0]
	0x03570954 MOV X19, X0
	0x03570958 TBNZ X8, 0x0, 0x357097C
	0x0357095C ADRP X0, 0xBC5000
	0x03570960 LDR X0, [X0 + 0xFC0]
	0x03570964 BL 0x1C16CF4
	0x03570968 ADRP X0, 0xB83000
	0x0357096C LDR X0, [X0 + 0x598]
	0x03570970 BL 0x1C16CF4
	0x03570974 MOVZ W8, 0x1
	0x03570978 STRB W8, [X20 + 0xE58]
	0x0357097C LDR X1, [X21]
	0x03570980 MOV X0, X19
	0x03570984 BL 0x263FAAC
	0x03570988 LDR X0, [X19 + 0xB0]
	0x0357098C CBZ X0, 0x35709EC
	0x03570990 ADRP X20, 0xB83000
	0x03570994 LDR X20, [X20 + 0x598]
	0x03570998 MOV X1, X31
	0x0357099C BL 0x3BFCC04
	0x035709A0 LDR X0, [X20]
	0x035709A4 LDR X20, [X19 + 0xB0]
	0x035709A8 LDR W8, [X0 + 0xE0]
	0x035709AC CBNZ W8, 0x35709B4
	0x035709B0 BL 0x1C16DFC
	0x035709B4 MOV X0, X20
	0x035709B8 MOV X1, X31
	0x035709BC MOV X2, X31
	0x035709C0 BL 0x3C354F8
	0x035709C4 TBZ X0, 0x0, 0x35709E0
	0x035709C8 LDR X0, [X19 + 0xB0]
	0x035709CC CBZ X0, 0x35709EC
	0x035709D0 MOV X1, X31
	0x035709D4 MOV X2, X31
	0x035709D8 BL 0x3BFCA38
	0x035709DC STR X31, [X19 + 0xB8]
	0x035709E0 LDP X20, X19, [X31 + 0x10]
	0x035709E4 LDP X30, X21, [X31], #0x20
	0x035709E8 RET
	0x035709EC BL 0x1C16F20
	0x035709F0 MOV X3, X31
	0x035709F4 B 0x3BFD6A0
	0x035709F8 MOV X1, X31
	0x035709FC B 0x3BFD5A0
	0x03570A00 STR X30, [X31 - 0x10]!
	0x03570A04 LDR X11, [X0 + 0x8]
	0x03570A08 CBZ X11, 0x3570A4C
	0x03570A0C LDR X9, [X11 + 0x18]
	0x03570A10 CMP W9, 0x1
	0x03570A14 B.LT 0x3570A4C
	0x03570A18 AND X9, X9, 0x0
	0x03570A1C MOV X8, X31
	0x03570A20 MOV W0, W31
	0x03570A24 SXTW X10, W9
	0x03570A28 ADD X11, X11, 0x20
	0x03570A2C CMP X8, X9
	0x03570A30 B.CS 0x3570A58
	0x03570A34 LDR W12, [X11, X8, LSL #2]
	0x03570A38 ADD X8, X8, 0x1
	0x03570A3C CMP X8, X10
	0x03570A40 ORR W0, W12, W0, 0x0
	0x03570A44 B.LT 0x3570A2C
	0x03570A48 B 0x3570A50
	0x03570A4C MOV W0, W31
	0x03570A50 LDR X30, [X31], #0x10
	0x03570A54 RET
	0x03570A58 BL 0x1C16F28
	0x03570A5C SUB X31, X31, 0x60
	0x03570A60 STR X30, [X31 + 0x20]
	0x03570A64 STP X24, X23, [X31 + 0x30]
	0x03570A68 STP X22, X21, [X31 + 0x40]
	0x03570A6C STP X20, X19, [X31 + 0x50]
	0x03570A70 ADRP X21, 0xE6F000
	0x03570A74 ADRP X20, 0xB83000
	0x03570A78 LDRB W8, [X21 + 0xE5B]
	0x03570A7C LDR X20, [X20 + 0xEC8]
	0x03570A80 MOV X19, X0
	0x03570A84 TBNZ X8, 0x0, 0x3570AE4
	0x03570A88 ADRP X0, 0xBC5000
	0x03570A8C LDR X0, [X0 + 0xFC8]
	0x03570A90 BL 0x1C16CF4
	0x03570A94 ADRP X0, 0xBC5000
	0x03570A98 LDR X0, [X0 + 0xFD0]
	0x03570A9C BL 0x1C16CF4
	0x03570AA0 ADRP X0, 0xBC5000
	0x03570AA4 LDR X0, [X0 + 0xFD8]
	0x03570AA8 BL 0x1C16CF4
	0x03570AAC ADRP X0, 0xB83000
	0x03570AB0 LDR X0, [X0 + 0x838]
	0x03570AB4 BL 0x1C16CF4
	0x03570AB8 ADRP X0, 0xBC5000
	0x03570ABC LDR X0, [X0 + 0xFE0]
	0x03570AC0 BL 0x1C16CF4
	0x03570AC4 ADRP X0, 0xB83000
	0x03570AC8 LDR X0, [X0 + 0xEC8]
	0x03570ACC BL 0x1C16CF4
	0x03570AD0 ADRP X0, 0xB83000
	0x03570AD4 LDR X0, [X0 + 0x848]
	0x03570AD8 BL 0x1C16CF4
	0x03570ADC MOVZ W8, 0x1
	0x03570AE0 STRB W8, [X21 + 0xE5B]
	0x03570AE4 LDR X8, [X19 + 0x8]
	0x03570AE8 LDR X20, [X20]
	0x03570AEC CBZ X8, 0x3570B8C
	0x03570AF0 ADRP X22, 0xBC5000
	0x03570AF4 ADRP X23, 0xB83000
	0x03570AF8 LDR X22, [X22 + 0xFC8]
	0x03570AFC LDR X23, [X23 + 0x838]
	0x03570B00 MOV X21, X31
	0x03570B04 MOVN X24, 0x0
	0x03570B08 LDR W9, [X8 + 0x18]
	0x03570B0C CMP X21, W9, SXTW
	0x03570B10 B.GE 0x3570B8C
	0x03570B14 CMP X21, X9
	0x03570B18 B.CS 0x3570C20
	0x03570B1C LDR X9, [X22]
	0x03570B20 ADD X8, X8, X21, 0x2, LSL
	0x03570B24 ADD X0, X31, 0x8
	0x03570B28 MOV X1, X31
	0x03570B2C STP X9, X24, [X31 + 0x8]
	0x03570B30 LDR W8, [X8 + 0x20]
	0x03570B34 STR W8, [X31 + 0x18]
	0x03570B38 BL 0x33B162C
	0x03570B3C MOV X1, X0
	0x03570B40 MOV X0, X20
	0x03570B44 MOV X2, X31
	0x03570B48 BL 0x321B938
	0x03570B4C LDR X8, [X19 + 0x8]
	0x03570B50 CBZ X8, 0x3570B88
	0x03570B54 LDR W9, [X8 + 0x18]
	0x03570B58 MOV X20, X0
	0x03570B5C SUB W9, W9, 0x1
	0x03570B60 CMP X21, X9
	0x03570B64 B.EQ 0x3570B80
	0x03570B68 LDR X1, [X23]
	0x03570B6C MOV X0, X20
	0x03570B70 MOV X2, X31
	0x03570B74 BL 0x321B938
	0x03570B78 LDR X8, [X19 + 0x8]
	0x03570B7C MOV X20, X0
	0x03570B80 ADD X21, X21, 0x1
	0x03570B84 CBNZ X8, 0x3570B08
	0x03570B88 BL 0x1C16F20
	0x03570B8C ADRP X8, 0xB83000
	0x03570B90 LDR X8, [X8 + 0x848]
	0x03570B94 ADRP X21, 0xBC5000
	0x03570B98 ADRP X22, 0xBC5000
	0x03570B9C ADRP X23, 0xBC5000
	0x03570BA0 LDR X1, [X8]
	0x03570BA4 LDR X21, [X21 + 0xFD0]
	0x03570BA8 LDR X22, [X22 + 0xFD8]
	0x03570BAC LDR X23, [X23 + 0xFE0]
	0x03570BB0 MOV X0, X20
	0x03570BB4 MOV X2, X31
	0x03570BB8 BL 0x321B938
	0x03570BBC MOV X20, X0
	0x03570BC0 LDR W8, [X19]
	0x03570BC4 LDR X0, [X21]
	0x03570BC8 ADD X1, X31, 0x8
	0x03570BCC STR W8, [X31 + 0x8]
	0x03570BD0 BL 0x1C16E04
	0x03570BD4 MOV X21, X0
	0x03570BD8 LDR W8, [X19 + 0x4]
	0x03570BDC LDR X0, [X22]
	0x03570BE0 ADD X1, X31, 0x2C
	0x03570BE4 STR W8, [X31 + 0x2C]
	0x03570BE8 BL 0x1C16E04
	0x03570BEC LDR X8, [X23]
	0x03570BF0 MOV X2, X0
	0x03570BF4 MOV X1, X21
	0x03570BF8 MOV X3, X20
	0x03570BFC MOV X0, X8
	0x03570C00 MOV X4, X31
	0x03570C04 BL 0x3227C18
	0x03570C08 LDP X20, X19, [X31 + 0x50]
	0x03570C0C LDP X22, X21, [X31 + 0x40]
	0x03570C10 LDP X24, X23, [X31 + 0x30]
	0x03570C14 LDR X30, [X31 + 0x20]
	0x03570C18 ADD X31, X31, 0x60
	0x03570C1C RET
	0x03570C20 BL 0x1C16F28
	0x03570C24 STR D8, [X31 - 0x20]!
	0x03570C28 STR X30, [X31 + 0x8]
	0x03570C2C STP X20, X19, [X31 + 0x10]
	0x03570C30 ADRP X20, 0xE6F000
	0x03570C34 ADRP X19, 0xBC5000
	0x03570C38 LDRB W8, [X20 + 0xE5C]
	0x03570C3C LDR X19, [X19 + 0xFE8]
	0x03570C40 TBNZ X8, 0x0, 0x3570C64
	0x03570C44 ADRP X0, 0xBC5000
	0x03570C48 LDR X0, [X0 + 0xFE8]
	0x03570C4C BL 0x1C16CF4
	0x03570C50 ADRP X0, 0xBC5000
	0x03570C54 LDR X0, [X0 + 0xFF0]
	0x03570C58 BL 0x1C16CF4
	0x03570C5C MOVZ W8, 0x1
	0x03570C60 STRB W8, [X20 + 0xE5C]
	0x03570C64 LDR X0, [X19]
	0x03570C68 MOVZ W1, 0x2
	0x03570C6C BL 0x1C16D6C
	0x03570C70 CBZ X0, 0x3570CF8
	0x03570C74 LDR W8, [X0 + 0x18]
	0x03570C78 CBZ W8, 0x3570CF4
	0x03570C7C MOVZ W9, 0x8
	0x03570C80 CMP W8, 0x1
	0x03570C84 STR W9, [X0 + 0x20]
	0x03570C88 B.EQ 0x3570CF4
	0x03570C8C ADRP X20, 0xBC5000
	0x03570C90 LDR X20, [X20 + 0xFF0]
	0x03570C94 MOVZ W8, 0x4
	0x03570C98 STR W8, [X0 + 0x24]
	0x03570C9C ADRP X9, 0xFFFFFFFFFD57D000
	0x03570CA0 LDR X8, [X20]
	0x03570CA4 LDR V8, [X9 + 0x3C8]
	0x03570CA8 MOVZ W1, 0x1
	0x03570CAC LDR X8, [X8 + 0xB8]
	0x03570CB0 STR D8, [X8]
	0x03570CB4 STR X0, [X8 + 0x8]
	0x03570CB8 LDR X0, [X19]
	0x03570CBC BL 0x1C16D6C
	0x03570CC0 CBZ X0, 0x3570CF8
	0x03570CC4 LDR W8, [X0 + 0x18]
	0x03570CC8 CBZ W8, 0x3570CF4
	0x03570CCC MOVZ W8, 0x4
	0x03570CD0 STR W8, [X0 + 0x20]
	0x03570CD4 LDR X8, [X20]
	0x03570CD8 LDP X20, X19, [X31 + 0x10]
	0x03570CDC LDR X30, [X31 + 0x8]
	0x03570CE0 LDR X8, [X8 + 0xB8]
	0x03570CE4 STR D8, [X8 + 0x10]
	0x03570CE8 STR X0, [X8 + 0x18]
	0x03570CEC LDR V8, [X31], #0x20
	0x03570CF0 RET
	0x03570CF4 BL 0x1C16F28
	0x03570CF8 BL 0x1C16F20
	0x03570CFC STP X30, X23, [X31 - 0x30]!
	0x03570D00 STP X22, X21, [X31 + 0x10]
	0x03570D04 STP X20, X19, [X31 + 0x20]
	0x03570D08 ADRP X23, 0xE6F000
	0x03570D0C ADRP X22, 0xB83000
	0x03570D10 ADRP X20, 0xBC5000
	0x03570D14 ADRP X21, 0xBC6000
	0x03570D18 MOV X19, X8
	0x03570D1C LDRB W8, [X23 + 0xE5D]
	0x03570D20 LDR X22, [X22 + 0x618]
	0x03570D24 LDR X20, [X20 + 0xFF8]
	0x03570D28 LDR X21, [X21]
	0x03570D2C TBNZ X8, 0x0, 0x3570D5C
	0x03570D30 ADRP X0, 0xB83000
	0x03570D34 LDR X0, [X0 + 0x618]
	0x03570D38 BL 0x1C16CF4
	0x03570D3C ADRP X0, 0xBC5000
	0x03570D40 LDR X0, [X0 + 0xFF8]
	0x03570D44 BL 0x1C16CF4
	0x03570D48 ADRP X0, 0xBC6000
	0x03570D4C LDR X0, [X0]
	0x03570D50 BL 0x1C16CF4
	0x03570D54 MOVZ W8, 0x1
	0x03570D58 STRB W8, [X23 + 0xE5D]
	0x03570D5C LDR X0, [X22]
	0x03570D60 MOVZ W1, 0x617
	0x03570D64 BL 0x1C16D6C
	0x03570D68 LDR X1, [X20]
	0x03570D6C MOV X2, X31
	0x03570D70 MOV X20, X0
	0x03570D74 BL 0x32C5BD8
	0x03570D78 LDR X0, [X22]
	0x03570D7C MOVZ W1, 0x5B2
	0x03570D80 BL 0x1C16D6C
	0x03570D84 LDR X1, [X21]
	0x03570D88 MOV X2, X31
	0x03570D8C MOV X21, X0
	0x03570D90 BL 0x32C5BD8
	0x03570D94 ADRP X8, 0xFFFFFFFFFD57D000
	0x03570D98 LDR V0, [X8 + 0xD58]
	0x03570D9C STP X20, X21, [X19]
	0x03570DA0 STRB W31, [X19 + 0x18]
	0x03570DA4 STUR W31, [X19 + 0x19]
	0x03570DA8 STR D0, [X19 + 0x10]
	0x03570DAC STR W31, [X19 + 0x1C]
	0x03570DB0 LDP X20, X19, [X31 + 0x20]
	0x03570DB4 LDP X22, X21, [X31 + 0x10]
	0x03570DB8 LDP X30, X23, [X31], #0x30
	0x03570DBC RET
	0x03570DC0 MOV X1, X31
	0x03570DC4 B 0x33BDD8C
	0x03570DC8 STR X30, [X31 - 0x20]!
	0x03570DCC STP X20, X19, [X31 + 0x10]
	0x03570DD0 LDR X20, [X0 + 0x18]
	0x03570DD4 CBZ X20, 0x3570E08
	0x03570DD8 STR X1, [X20 + 0x10]
	0x03570DDC MOV X0, X2
	0x03570DE0 MOV X1, X31
	0x03570DE4 MOV X19, X2
	0x03570DE8 STR X31, [X20 + 0x50]
	0x03570DEC BL 0x32277A8
	0x03570DF0 ANDS W31, W0, 0x1
	0x03570DF4 CSEL X8, X31, X19, NE
	0x03570DF8 STR X8, [X20 + 0x40]
	0x03570DFC LDP X20, X19, [X31 + 0x10]
	0x03570E00 LDR X30, [X31], #0x20
	0x03570E04 RET
	0x03570E08 BL 0x1C16F20
	0x03570E0C STP X30, X21, [X31 - 0x20]!
	0x03570E10 STP X20, X19, [X31 + 0x10]
	0x03570E14 ADRP X21, 0xE6F000
	0x03570E18 ADRP X20, 0xBC6000
	0x03570E1C ADRP X19, 0xB83000
	0x03570E20 LDRB W8, [X21 + 0xE5F]
	0x03570E24 LDR X20, [X20 + 0x8]
	0x03570E28 LDR X19, [X19 + 0x598]
	0x03570E2C TBNZ X8, 0x0, 0x3570E50
	0x03570E30 ADRP X0, 0xB83000
	0x03570E34 LDR X0, [X0 + 0x598]
	0x03570E38 BL 0x1C16CF4
	0x03570E3C ADRP X0, 0xBC6000
	0x03570E40 LDR X0, [X0 + 0x8]
	0x03570E44 BL 0x1C16CF4
	0x03570E48 MOVZ W8, 0x1
	0x03570E4C STRB W8, [X21 + 0xE5F]
	0x03570E50 LDR X8, [X20]
	0x03570E54 LDR X0, [X19]
	0x03570E58 LDR X8, [X8 + 0xB8]
	0x03570E5C LDR W9, [X0 + 0xE0]
	0x03570E60 LDR X19, [X8]
	0x03570E64 CBNZ W9, 0x3570E6C
	0x03570E68 BL 0x1C16DFC
	0x03570E6C MOV X0, X19
	0x03570E70 MOV X1, X31
	0x03570E74 MOV X2, X31
	0x03570E78 BL 0x3C3883C
	0x03570E7C TBZ X0, 0x0, 0x3570E84
	0x03570E80 BL 0x3570E9C
	0x03570E84 LDR X8, [X20]
	0x03570E88 LDP X20, X19, [X31 + 0x10]
	0x03570E8C LDR X8, [X8 + 0xB8]
	0x03570E90 LDR X0, [X8]
	0x03570E94 LDP X30, X21, [X31], #0x20
	0x03570E98 RET
	0x03570E9C STP X30, X23, [X31 - 0x30]!
	0x03570EA0 STP X22, X21, [X31 + 0x10]
	0x03570EA4 STP X20, X19, [X31 + 0x20]
	0x03570EA8 ADRP X19, 0xE6F000
	0x03570EAC ADRP X21, 0xBC6000
	0x03570EB0 ADRP X22, 0xB83000
	0x03570EB4 LDRB W8, [X19 + 0xE60]
	0x03570EB8 LDR X21, [X21 + 0x10]
	0x03570EBC LDR X22, [X22 + 0x6C0]
	0x03570EC0 TBNZ X8, 0x0, 0x3570F20
	0x03570EC4 ADRP X0, 0xB83000
	0x03570EC8 LDR X0, [X0 + 0xA28]
	0x03570ECC BL 0x1C16CF4
	0x03570ED0 ADRP X0, 0xB83000
	0x03570ED4 LDR X0, [X0 + 0x598]
	0x03570ED8 BL 0x1C16CF4
	0x03570EDC ADRP X0, 0xBC6000
	0x03570EE0 LDR X0, [X0 + 0x10]
	0x03570EE4 BL 0x1C16CF4
	0x03570EE8 ADRP X0, 0xBC6000
	0x03570EEC LDR X0, [X0 + 0x8]
	0x03570EF0 BL 0x1C16CF4
	0x03570EF4 ADRP X0, 0xB83000
	0x03570EF8 LDR X0, [X0 + 0x6C0]
	0x03570EFC BL 0x1C16CF4
	0x03570F00 ADRP X0, 0xBC5000
	0x03570F04 LDR X0, [X0 + 0x1D8]
	0x03570F08 BL 0x1C16CF4
	0x03570F0C ADRP X0, 0xBC6000
	0x03570F10 LDR X0, [X0 + 0x18]
	0x03570F14 BL 0x1C16CF4
	0x03570F18 MOVZ W8, 0x1
	0x03570F1C STRB W8, [X19 + 0xE60]
	0x03570F20 LDR X0, [X22]
	0x03570F24 ADRP X23, 0xBC6000
	0x03570F28 ADRP X20, 0xBC6000
	0x03570F2C LDR X19, [X21]
	0x03570F30 LDR W8, [X0 + 0xE0]
	0x03570F34 LDR X23, [X23 + 0x18]
	0x03570F38 LDR X20, [X20 + 0x8]
	0x03570F3C CBNZ W8, 0x3570F44
	0x03570F40 BL 0x1C16DFC
	0x03570F44 MOV X0, X19
	0x03570F48 MOV X1, X31
	0x03570F4C BL 0x338C698
	0x03570F50 LDR X8, [X23]
	0x03570F54 MOV X1, X0
	0x03570F58 MOV X2, X31
	0x03570F5C MOV X0, X8
	0x03570F60 BL 0x3C30CE8
	0x03570F64 LDR X1, [X20]
	0x03570F68 CBZ X0, 0x3570FCC
	0x03570F6C LDR X8, [X0]
	0x03570F70 LDRB W9, [X1 + 0x130]
	0x03570F74 LDRB W10, [X8 + 0x130]
	0x03570F78 CMP W10, W9
	0x03570F7C B.CC 0x35710C8
	0x03570F80 LDR X8, [X8 + 0xC8]
	0x03570F84 ADD X8, X8, X9, 0x3, LSL
	0x03570F88 LDUR X8, [X8 - 0x8]
	0x03570F8C CMP X8, X1
	0x03570F90 B.NE 0x35710C8
	0x03570F94 LDR X8, [X1 + 0xB8]
	0x03570F98 STR X0, [X8]
	0x03570F9C LDR X8, [X0]
	0x03570FA0 LDR X1, [X20]
	0x03570FA4 LDRB W10, [X8 + 0x130]
	0x03570FA8 LDRB W9, [X1 + 0x130]
	0x03570FAC CMP W10, W9
	0x03570FB0 B.CC 0x35710C8
	0x03570FB4 LDR X8, [X8 + 0xC8]
	0x03570FB8 ADD X8, X8, X9, 0x3, LSL
	0x03570FBC LDUR X8, [X8 - 0x8]
	0x03570FC0 CMP X8, X1
	0x03570FC4 B.EQ 0x3570FD8
	0x03570FC8 B 0x35710C8
	0x03570FCC LDR X8, [X1 + 0xB8]
	0x03570FD0 STR X0, [X8]
	0x03570FD4 LDR X1, [X20]
	0x03570FD8 ADRP X23, 0xB83000
	0x03570FDC LDR X23, [X23 + 0x598]
	0x03570FE0 LDR X8, [X1 + 0xB8]
	0x03570FE4 LDR X0, [X23]
	0x03570FE8 LDR X19, [X8]
	0x03570FEC LDR W9, [X0 + 0xE0]
	0x03570FF0 CBNZ W9, 0x3570FF8
	0x03570FF4 BL 0x1C16DFC
	0x03570FF8 MOV X0, X19
	0x03570FFC MOV X1, X31
	0x03571000 MOV X2, X31
	0x03571004 BL 0x3C354F8
	0x03571008 TBNZ X0, 0x0, 0x357113C
	0x0357100C LDR X8, [X20]
	0x03571010 LDR X0, [X23]
	0x03571014 LDR X8, [X8 + 0xB8]
	0x03571018 LDR W9, [X0 + 0xE0]
	0x0357101C LDR X19, [X8]
	0x03571020 CBNZ W9, 0x3571028
	0x03571024 BL 0x1C16DFC
	0x03571028 MOV X0, X19
	0x0357102C MOV X1, X31
	0x03571030 MOV X2, X31
	0x03571034 BL 0x3C3883C
	0x03571038 TBZ X0, 0x0, 0x357113C
	0x0357103C LDR X0, [X22]
	0x03571040 LDR X19, [X21]
	0x03571044 LDR W8, [X0 + 0xE0]
	0x03571048 CBNZ W8, 0x3571050
	0x0357104C BL 0x1C16DFC
	0x03571050 MOV X0, X19
	0x03571054 MOV X1, X31
	0x03571058 BL 0x338C698
	0x0357105C MOV X1, X31
	0x03571060 BL 0x3C36DE8
	0x03571064 LDR X1, [X20]
	0x03571068 CBZ X0, 0x35710CC
	0x0357106C LDR X8, [X0]
	0x03571070 LDRB W9, [X1 + 0x130]
	0x03571074 LDRB W10, [X8 + 0x130]
	0x03571078 CMP W10, W9
	0x0357107C B.CC 0x35710C8
	0x03571080 LDR X8, [X8 + 0xC8]
	0x03571084 ADD X8, X8, X9, 0x3, LSL
	0x03571088 LDUR X8, [X8 - 0x8]
	0x0357108C CMP X8, X1
	0x03571090 B.NE 0x35710C8
	0x03571094 LDR X8, [X1 + 0xB8]
	0x03571098 STR X0, [X8]
	0x0357109C LDR X8, [X0]
	0x035710A0 LDR X1, [X20]
	0x035710A4 LDRB W10, [X8 + 0x130]
	0x035710A8 LDRB W9, [X1 + 0x130]
	0x035710AC CMP W10, W9
	0x035710B0 B.CC 0x35710C8
	0x035710B4 LDR X8, [X8 + 0xC8]
	0x035710B8 ADD X8, X8, X9, 0x3, LSL
	0x035710BC LDUR X8, [X8 - 0x8]
	0x035710C0 CMP X8, X1
	0x035710C4 B.EQ 0x35710D8
	0x035710C8 BL 0x1C171E0
	0x035710CC LDR X8, [X1 + 0xB8]
	0x035710D0 STR X0, [X8]
	0x035710D4 LDR X1, [X20]
	0x035710D8 LDR X0, [X23]
	0x035710DC LDR X8, [X1 + 0xB8]
	0x035710E0 LDR W9, [X0 + 0xE0]
	0x035710E4 LDR X19, [X8]
	0x035710E8 CBNZ W9, 0x35710F0
	0x035710EC BL 0x1C16DFC
	0x035710F0 MOV X0, X19
	0x035710F4 MOV X1, X31
	0x035710F8 MOV X2, X31
	0x035710FC BL 0x3C3883C
	0x03571100 TBZ X0, 0x0, 0x357113C
	0x03571104 ADRP X8, 0xB82000
	0x03571108 LDR X8, [X8 + 0xA28]
	0x0357110C LDR X0, [X8]
	0x03571110 LDR W8, [X0 + 0xE0]
	0x03571114 CBNZ W8, 0x357111C
	0x03571118 BL 0x1C16DFC
	0x0357111C ADRP X8, 0xBC4000
	0x03571120 LDR X8, [X8 + 0x1D8]
	0x03571124 LDP X20, X19, [X31 + 0x20]
	0x03571128 LDP X22, X21, [X31 + 0x10]
	0x0357112C MOV X1, X31
	0x03571130 LDR X0, [X8]
	0x03571134 LDP X30, X23, [X31], #0x30
	0x03571138 B 0x3C0649C
	0x0357113C LDP X20, X19, [X31 + 0x20]
	0x03571140 LDP X22, X21, [X31 + 0x10]
	0x03571144 LDP X30, X23, [X31], #0x30
	0x03571148 RET
	0x0357114C STR X30, [X31 - 0x20]!
	0x03571150 STP X20, X19, [X31 + 0x10]
	0x03571154 ADRP X20, 0xE6E000
	0x03571158 LDRB W8, [X20 + 0xE61]
	0x0357115C MOV X19, X0
	0x03571160 TBNZ X8, 0x0, 0x3571178
	0x03571164 ADRP X0, 0xBC5000
	0x03571168 LDR X0, [X0 + 0x20]
	0x0357116C BL 0x1C16CF4
	0x03571170 MOVZ W8, 0x1
	0x03571174 STRB W8, [X20 + 0xE61]
	0x03571178 LDR X0, [X19 + 0x18]
	0x0357117C CBZ X0, 0x35711AC
	0x03571180 ADRP X19, 0xBC5000
	0x03571184 LDR X19, [X19 + 0x20]
	0x03571188 MOV X1, X31
	0x0357118C BL 0x353491C
	0x03571190 LDR X8, [X19]
	0x03571194 LDP X20, X19, [X31 + 0x10]
	0x03571198 MOV X1, X0
	0x0357119C MOV X2, X31
	0x035711A0 MOV X0, X8
	0x035711A4 LDR X30, [X31], #0x20
	0x035711A8 B 0x321B938
	0x035711AC BL 0x1C16F20
	0x035711B0 MOV X1, X31
	0x035711B4 B 0x3C36D2C

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+48], X26
	004 Move [X31+56], X25
	005 Move [X31+64], X24
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X24, 0xE70000
	012 Move W8, [X24+3663]
	013 Move X19, X4
	014 Move W22, W3
	015 Move X21, X2
	016 Move X23, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {66}
	022 Move X0, 0xB84000
	023 Move X0, [X0+2504]
	024 Call 0x1C17CF4
	025 Move X0, 0xBC6000
	026 Move X0, [X0+3912]
	027 Call 0x1C17CF4
	028 Move X0, 0xB89000
	029 Move X0, [X0+1600]
	030 Call 0x1C17CF4
	031 Move X0, 0xBC6000
	032 Move X0, [X0+3920]
	033 Call 0x1C17CF4
	034 Move X0, 0xB84000
	035 Move X0, [X0+2648]
	036 Call 0x1C17CF4
	037 Move X0, 0xB89000
	038 Move X0, [X0+840]
	039 Call 0x1C17CF4
	040 Move X0, 0xB84000
	041 Move X0, [X0+1880]
	042 Call 0x1C17CF4
	043 Move X0, 0xB84000
	044 Move X0, [X0+2512]
	045 Call 0x1C17CF4
	046 Move X0, 0xBC6000
	047 Move X0, [X0+3928]
	048 Call 0x1C17CF4
	049 Move X0, 0xBC6000
	050 Move X0, [X0+3936]
	051 Call 0x1C17CF4
	052 Move X0, 0xBC6000
	053 Move X0, [X0+3944]
	054 Call 0x1C17CF4
	055 Move X0, 0xBC6000
	056 Move X0, [X0+3952]
	057 Call 0x1C17CF4
	058 Move X0, 0xBC6000
	059 Move X0, [X0+3960]
	060 Call 0x1C17CF4
	061 Move X0, 0xBC6000
	062 Move X0, [X0+3968]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X24+3663], W8
	066 Move X0, X20
	067 Move X1, X31
	068 Move [X31+44], W31
	069 Call Object..ctor, X0
	070 Move [X20+32], X21
	071 Move [X20+40], X19
	072 Move X0, X31
	073 Call AudioSettings.get_outputSampleRate
	074 Move [X20+56], W0
	075 Move X0, X31
	076 Call AudioSettings.get_speakerMode
	077 Subtract W8, W0, 1
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move [X20+60], W0
	080 Move X8, 0xBC6000
	081 Move X8, [X8+3928]
	082 Move X1, [X8]
	083 Add X4, X31, 44
	084 Move X0, X19
	085 Move X2, X21
	086 Move W3, W22
	087 Call UnityMicrophone.CheckDevice, X0, X1, X2, X3, X4
	088 Move [X20+64], X0
	089 Compare X0, 0
	090 JumpIfNotEqual {467}
	091 Move X8, 0xB84000
	092 Move X8, [X8+2648]
	093 Move X0, [X8]
	094 Call 0x1C17F10
	095 Move X8, 0xBC6000
	096 Move X8, [X8+3944]
	097 Move X22, X0
	098 Move X1, [X8]
	099 Move X2, X31
	100 Call GameObject..ctor, X0, X1
	101 Compare X22, 0
	102 JumpIfEqual {479}
	103 Move X0, X22
	104 Move X1, X31
	105 Call GameObject.get_transform, X0
	106 Compare X23, 0
	107 JumpIfEqual {480}
	108 Move X24, X0
	109 Move X0, X23
	110 Move X1, X31
	111 Call GameObject.get_transform, X0
	112 Move X1, X0
	113 Compare X24, 0
	114 JumpIfEqual {481}
	115 Move X0, X24
	116 Move W2, W31
	117 Move X3, X31
	118 Call Transform.SetParent, X0, X1, X2
	119 Move X8, 0xB89000
	120 Move X8, [X8+1600]
	121 Move X1, [X8]
	122 Move X0, X22
	123 Call 0x21E61FC, X0
	124 Move [X20+16], X0
	125 Move X26, 0xB84000
	126 Move X26, [X26+2504]
	127 Move X23, [X26]
	128 Move X8, [X23+56]
	129 Compare X8, 0
	130 JumpIfNotEqual {134}
	131 Move X0, X23
	132 Call 0x1C5D6E0
	133 Move X8, [X23+56]
	134 Move X0, [X8+16]
	135 Move W8, [X0+309]
	136 Move TEMP, X8
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfEqual {141}
	140 Call 0x1C5D684
	141 Move W8, [X0+224]
	142 Compare W8, 0
	143 JumpIfNotEqual {145}
	144 Call 0x1C17DFC
	145 Move X8, [X23+56]
	146 Move X0, [X8+16]
	147 Move W8, [X0+309]
	148 Move TEMP, X8
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfEqual {153}
	152 Call 0x1C5D684
	153 Compare X19, 0
	154 JumpIfEqual {482}
	155 Move X25, 0xB89000
	156 Move X10, 0xBC6000
	157 Move X9, [X0+184]
	158 Move X25, [X25+840]
	159 Move X8, [X19]
	160 Move X10, [X10+3952]
	161 Move X23, [X9]
	162 Move X1, [X25]
	163 NotImplemented "Instruction LDRH not yet implemented."
	164 Move X24, [X10]
	165 Compare X9, 0
	166 JumpIfEqual {173}
	167 Move X10, [X8+176]
	168 Add X10, X10, 8
	169 NotImplemented "Instruction LDUR not yet implemented."
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Subtract X9, X9, 1
	172 Add X10, X10, 16
	173 Move W2, 1
	174 Move X0, X19
	175 Call 0x1C5D788
	176 Move X0, X31
	177 Call AudioSettings.get_speakerMode
	178 Move X8, 0xBC6000
	179 Move X8, [X8+3912]
	180 Move TEMP, 0
	181 Not TEMP
	182 Move X9, TEMP
	183 Move [X31+24], W0
	184 Move X8, [X8]
	185 Move [X31+8], X8
	186 Move [X31+16], X9
	187 Add X0, X31, 8
	188 Move X1, X31
	189 Call Enum.ToString, X0
	190 Move X1, X0
	191 Move X8, 0xBC6000
	192 Move X8, [X8+3936]
	193 Move X0, [X8]
	194 Move X2, X31
	195 Call String.Concat, X0, X1
	196 Move X1, X0
	197 Move [X20+64], X1
	198 Move X8, 0xBC6000
	199 Move X8, [X8+3928]
	200 Move X0, [X8]
	201 Move X2, X31
	202 Call String.Concat, X0, X1
	203 Move X8, 0xB84000
	204 Move X8, [X8+2504]
	205 Move X21, X0
	206 Move X22, [X8]
	207 Move X8, [X22+56]
	208 Compare X8, 0
	209 JumpIfNotEqual {213}
	210 Move X0, X22
	211 Call 0x1C5D6E0
	212 Move X8, [X22+56]
	213 Move X0, [X8+16]
	214 Move W8, [X0+309]
	215 Move TEMP, X8
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfEqual {220}
	219 Call 0x1C5D684
	220 Move W8, [X0+224]
	221 Compare W8, 0
	222 JumpIfNotEqual {224}
	223 Call 0x1C17DFC
	224 Move X8, [X22+56]
	225 Move X0, [X8+16]
	226 Move W8, [X0+309]
	227 Move TEMP, X8
	228 And TEMP, TEMP, 1
	229 Compare TEMP, 1
	230 JumpIfEqual {232}
	231 Call 0x1C5D684
	232 Compare X19, 0
	233 JumpIfEqual {478}
	234 Move X10, 0xB89000
	235 Move X9, [X0+184]
	236 Move X8, [X19]
	237 Move X10, [X10+840]
	238 Move X22, [X9]
	239 NotImplemented "Instruction LDRH not yet implemented."
	240 Move X1, [X10]
	241 Compare X9, 0
	242 JumpIfEqual {249}
	243 Move X10, [X8+176]
	244 Add X10, X10, 8
	245 NotImplemented "Instruction LDUR not yet implemented."
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Subtract X9, X9, 1
	248 Add X10, X10, 16
	249 Move W2, 1
	250 Move X0, X19
	251 Call 0x1C5D788
	252 Move W9, [X10]
	253 Add W9, W9, 1
	254 Add X8, X8, W9
	255 Add X0, X8, 312
	256 Move X8, [X0]
	257 Move X4, [X0+8]
	258 Move W1, 1
	259 Move X0, X19
	260 Move X2, X21
	261 Move X3, X22
	262 NotImplemented "Instruction BLR not yet implemented."
	263 Move W9, [X10]
	264 Add W9, W9, 1
	265 Add X8, X8, W9
	266 Add X0, X8, 312
	267 Move X8, [X0]
	268 Move X4, [X0+8]
	269 Move W1, 3
	270 Move X0, X19
	271 Move X2, X24
	272 Move X3, X23
	273 NotImplemented "Instruction BLR not yet implemented."
	274 Move X8, 0xBC6000
	275 Move X8, [X8+3920]
	276 Move X1, [X8]
	277 Move X0, X22
	278 Call 0x21E61FC, X0
	279 Move [X20+48], X0
	280 Move W3, [X31+44]
	281 Move W1, 1
	282 Move W2, 1
	283 Move X0, X21
	284 Move X4, X31
	285 Call Microphone.Start, X0, X1, X2, X3
	286 Move X1, X0
	287 Move X0, [X20+16]
	288 Move [X20+24], X1
	289 Compare X0, 0
	290 JumpIfEqual {483}
	291 Move X2, X31
	292 Call AudioSource.set_clip, X0, X1
	293 Move X0, [X20+16]
	294 Compare X0, 0
	295 JumpIfEqual {484}
	296 Move W1, 1
	297 Move X2, X31
	298 Call AudioSource.set_loop, X0, X1
	299 Move W22, 1000
	300 Move X0, X21
	301 Move X1, X31
	302 Call Microphone.GetPosition, X0
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Move W0, 1
	305 Move X1, X31
	306 Call Thread.Sleep, X0
	307 Subtract W22, W22, 1
	308 Move X0, X21
	309 Move X1, X31
	310 Call Microphone.GetPosition, X0
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Move X22, [X26]
	313 Move X8, [X22+56]
	314 Compare X8, 0
	315 JumpIfNotEqual {319}
	316 Move X0, X22
	317 Call 0x1C5D6E0
	318 Move X8, [X22+56]
	319 Move X0, [X8+16]
	320 Move W8, [X0+309]
	321 Move TEMP, X8
	322 And TEMP, TEMP, 1
	323 Compare TEMP, 1
	324 JumpIfEqual {326}
	325 Call 0x1C5D684
	326 Move W8, [X0+224]
	327 Compare W8, 0
	328 JumpIfNotEqual {330}
	329 Call 0x1C17DFC
	330 Move X8, [X22+56]
	331 Move X0, [X8+16]
	332 Move W8, [X0+309]
	333 Move TEMP, X8
	334 And TEMP, TEMP, 1
	335 Compare TEMP, 1
	336 JumpIfEqual {338}
	337 Call 0x1C5D684
	338 Move X10, 0xBC6000
	339 Move X9, [X0+184]
	340 Move X8, [X19]
	341 Move X1, [X25]
	342 Move X10, [X10+3968]
	343 Move X22, [X9]
	344 NotImplemented "Instruction LDRH not yet implemented."
	345 Move X23, [X10]
	346 Compare X9, 0
	347 JumpIfEqual {354}
	348 Move X10, [X8+176]
	349 Add X10, X10, 8
	350 NotImplemented "Instruction LDUR not yet implemented."
	351 NotImplemented "Instruction CMP not yet implemented."
	352 Subtract X9, X9, 1
	353 Add X10, X10, 16
	354 Move W2, 1
	355 Move X0, X19
	356 Call 0x1C5D788
	357 Move W9, [X10]
	358 Add W9, W9, 1
	359 Add X8, X8, W9
	360 Add X0, X8, 312
	361 Move X8, [X0]
	362 Move X4, [X0+8]
	363 Move W1, 2
	364 Move X0, X19
	365 Move X2, X23
	366 Move X3, X22
	367 NotImplemented "Instruction BLR not yet implemented."
	368 Move X0, [X20+16]
	369 Compare X0, 0
	370 JumpIfEqual {485}
	371 Move X1, X31
	372 Call AudioSource.Play, X0
	373 Move X8, 0xB84000
	374 Move X8, [X8+2512]
	375 Move X0, [X8]
	376 Move W1, 3
	377 Call 0x1C17D6C
	378 Move X22, X0
	379 Compare X0, 0
	380 JumpIfEqual {486}
	381 Compare X21, 0
	382 JumpIfEqual {389}
	383 Move X8, [X22]
	384 Move X1, [X8+64]
	385 Move X0, X21
	386 Call 0x1C17E00
	387 Compare X0, 0
	388 JumpIfEqual {492}
	389 Move W8, [X22+24]
	390 Compare W8, 0
	391 JumpIfEqual {487}
	392 Move [X22+32], X21
	393 Move X0, [X20+24]
	394 Compare X0, 0
	395 JumpIfEqual {488}
	396 Move X1, X31
	397 Call AudioClip.get_frequency, X0
	398 Move X23, 0xB84000
	399 Move X23, [X23+1880]
	400 Move [X31+8], W0
	401 Move X8, [X23]
	402 Add X1, X31, 8
	403 Move X0, X8
	404 Call 0x1C17E04
	405 Move X21, X0
	406 Compare X0, 0
	407 JumpIfEqual {414}
	408 Move X8, [X22]
	409 Move X1, [X8+64]
	410 Move X0, X21
	411 Call 0x1C17E00
	412 Compare X0, 0
	413 JumpIfEqual {495}
	414 Move W8, [X22+24]
	415 NotImplemented "Instruction CMP not yet implemented."
	416 Move [X22+40], X21
	417 Move X0, [X20+24]
	418 Compare X0, 0
	419 JumpIfEqual {490}
	420 Move X1, X31
	421 Call AudioClip.get_channels, X0
	422 Move X8, [X23]
	423 Move [X31+40], W0
	424 Add X1, X31, 40
	425 Move X0, X8
	426 Call 0x1C17E04
	427 Move X21, X0
	428 Compare X0, 0
	429 JumpIfEqual {436}
	430 Move X8, [X22]
	431 Move X1, [X8+64]
	432 Move X0, X21
	433 Call 0x1C17E00
	434 Compare X0, 0
	435 JumpIfEqual {498}
	436 Move W8, [X22+24]
	437 NotImplemented "Instruction CMP not yet implemented."
	438 Move [X22+48], X21
	439 Move X10, 0xBC6000
	440 Move X8, [X19]
	441 Move X1, [X25]
	442 Move X10, [X10+3960]
	443 NotImplemented "Instruction LDRH not yet implemented."
	444 Move X21, [X10]
	445 Compare X9, 0
	446 JumpIfEqual {453}
	447 Move X10, [X8+176]
	448 Add X10, X10, 8
	449 NotImplemented "Instruction LDUR not yet implemented."
	450 NotImplemented "Instruction CMP not yet implemented."
	451 Subtract X9, X9, 1
	452 Add X10, X10, 16
	453 Move W2, 1
	454 Move X0, X19
	455 Call 0x1C5D788
	456 Move W9, [X10]
	457 Add W9, W9, 1
	458 Add X8, X8, W9
	459 Add X0, X8, 312
	460 Move X8, [X0]
	461 Move X4, [X0+8]
	462 Move W1, 3
	463 Move X0, X19
	464 Move X2, X21
	465 Move X3, X22
	466 NotImplemented "Instruction BLR not yet implemented."
	467 Move X20, [X31+96]
	468 Move X19, [X31+104]
	469 Move X22, [X31+80]
	470 Move X21, [X31+88]
	471 Move X24, [X31+64]
	472 Move X23, [X31+72]
	473 Move X26, [X31+48]
	474 Move X25, [X31+56]
	475 Move X30, [X31+32]
	476 Add X31, X31, 112
	477 Return 
	478 Call 0x1C17F20
	479 Call 0x1C17F20
	480 Call 0x1C17F20
	481 Call 0x1C17F20
	482 Call 0x1C17F20
	483 Call 0x1C17F20
	484 Call 0x1C17F20
	485 Call 0x1C17F20
	486 Call 0x1C17F20
	487 Call 0x1C17F28
	488 Call 0x1C17F20
	489 Call 0x1C17F28
	490 Call 0x1C17F20
	491 Call 0x1C17F28
	492 Call 0x1C17F44
	493 Move X1, X31
	494 Call 0x1C17DEC
	495 Call 0x1C17F44
	496 Move X1, X31
	497 Call 0x1C17DEC
	498 Call 0x1C17F44
	499 Move X1, X31
	500 Call 0x1C17DEC
	501 Move X21, X0
	502 NotImplemented "Instruction CMP not yet implemented."
	503 Move X0, X21
	504 Call 0x3EB2AD0
	505 Move X21, X0
	506 Move X0, 0xB83000
	507 Move X0, [X0+2000]
	508 Call 0x1C17D08
	509 Move X8, [X21]
	510 Move X1, [X8]
	511 Call 0x1C18270
	512 Move TEMP, X0
	513 And TEMP, TEMP, 1
	514 Compare TEMP, 1
	515 JumpIfNotEqual {603}
	516 Move X21, [X21]
	517 Call 0x3EB2AE0
	518 Compare X21, 0
	519 JumpIfEqual {602}
	520 Move X8, [X21]
	521 Move X0, X21
	522 Move X9, [X8+360]
	523 Move X1, [X8+368]
	524 NotImplemented "Instruction BLR not yet implemented."
	525 Move X21, X0
	526 Move [X20+64], X0
	527 Compare X0, 0
	528 JumpIfNotEqual {534}
	529 Move X0, 0xBC5000
	530 Move X0, [X0+3976]
	531 Call 0x1C17D08
	532 Move X21, X0
	533 Move [X20+64], X0
	534 Move X0, 0xBC5000
	535 Move X0, [X0+3928]
	536 Call 0x1C17D08
	537 Move X1, X21
	538 Move X2, X31
	539 Call String.Concat, X0, X1
	540 Move X20, X0
	541 Move X0, 0xB83000
	542 Move X0, [X0+2504]
	543 Call 0x1C17D08
	544 Move X8, [X0+56]
	545 Move X21, X0
	546 Compare X8, 0
	547 JumpIfNotEqual {551}
	548 Move X0, X21
	549 Call 0x1C5D6E0
	550 Move X8, [X21+56]
	551 Move X0, [X8+16]
	552 Move W8, [X0+309]
	553 Move TEMP, X8
	554 And TEMP, TEMP, 1
	555 Compare TEMP, 1
	556 JumpIfEqual {558}
	557 Call 0x1C5D684
	558 Move W8, [X0+224]
	559 Compare W8, 0
	560 JumpIfNotEqual {562}
	561 Call 0x1C17DFC
	562 Move X8, [X21+56]
	563 Move X0, [X8+16]
	564 Move W8, [X0+309]
	565 Move TEMP, X8
	566 And TEMP, TEMP, 1
	567 Compare TEMP, 1
	568 JumpIfEqual {570}
	569 Call 0x1C5D684
	570 Compare X19, 0
	571 JumpIfEqual {602}
	572 Move X8, [X0+184]
	573 Move X0, 0xB88000
	574 Move X21, [X8]
	575 Move X0, [X0+840]
	576 Call 0x1C17D08
	577 Move X8, [X19]
	578 Move X1, X0
	579 NotImplemented "Instruction LDRH not yet implemented."
	580 Compare X9, 0
	581 JumpIfEqual {588}
	582 Move X10, [X8+176]
	583 Add X10, X10, 8
	584 NotImplemented "Instruction LDUR not yet implemented."
	585 NotImplemented "Instruction CMP not yet implemented."
	586 Subtract X9, X9, 1
	587 Add X10, X10, 16
	588 Move W2, 1
	589 Move X0, X19
	590 Call 0x1C5D788
	591 Move W9, [X10]
	592 Add W9, W9, 1
	593 Add X8, X8, W9
	594 Add X0, X8, 312
	595 Move X8, [X0]
	596 Move X4, [X0+8]
	597 Move W1, 1
	598 Move X0, X19
	599 Move X2, X20
	600 Move X3, X21
	601 NotImplemented "Instruction BLR not yet implemented."
	602 Call 0x1C17F20
	603 Move W0, 8
	604 Call 0x3EB2AF0
	605 Move X8, [X21]
	606 Move [X0], X8
	607 Move X1, 0x944000
	608 Add X1, X1, 3672
	609 Move X2, X31
	610 Call 0x3EB2B00
	611 Move X21, X0
	612 Call 0x3EB2AE0
	613 Move X0, X21
	614 Call 0x1D2D690
	615 Call 0x1991590

Method: System.Void SetCallback(System.Action`1<System.Single[]> callback, Photon.Voice.ObjectFactory`2<System.Single[], System.Int32> bufferFactory)

Disassembly:
	0x035711B8 STP X30, X21, [X31 - 0x20]!
	0x035711BC STP X20, X19, [X31 + 0x10]
	0x035711C0 ADRP X20, 0xE6E000
	0x035711C4 LDRB W8, [X20 + 0xE62]
	0x035711C8 MOV X19, X0
	0x035711CC TBNZ X8, 0x0, 0x3571208
	0x035711D0 ADRP X0, 0xB82000
	0x035711D4 LDR X0, [X0 + 0x9C8]
	0x035711D8 BL 0x1C16CF4
	0x035711DC ADRP X0, 0xB87000
	0x035711E0 LDR X0, [X0 + 0x348]
	0x035711E4 BL 0x1C16CF4
	0x035711E8 ADRP X0, 0xBC5000
	0x035711EC LDR X0, [X0 + 0x28]
	0x035711F0 BL 0x1C16CF4
	0x035711F4 ADRP X0, 0xBC5000
	0x035711F8 LDR X0, [X0 + 0x30]
	0x035711FC BL 0x1C16CF4
	0x03571200 MOVZ W8, 0x1
	0x03571204 STRB W8, [X20 + 0xE62]
	0x03571208 LDR X8, [X19]
	0x0357120C MOV X0, X19
	0x03571210 LDR X9, [X8 + 0x218]
	0x03571214 LDR X1, [X8 + 0x220]
	0x03571218 BLR X9
	0x0357121C TBZ X0, 0x0, 0x3571244
	0x03571220 LDR X8, [X19]
	0x03571224 MOV X0, X19
	0x03571228 LDR X9, [X8 + 0x248]
	0x0357122C LDR X1, [X8 + 0x250]
	0x03571230 BLR X9
	0x03571234 TBZ X0, 0x0, 0x35712F4
	0x03571238 STRB W31, [X19 + 0xC5]
	0x0357123C MOVZ W0, 0x1
	0x03571240 B 0x35713DC
	0x03571244 LDR X9, [X19 + 0x40]
	0x03571248 CBZ X9, 0x35713E8
	0x0357124C ADRP X8, 0xB82000
	0x03571250 LDR X8, [X8 + 0x9C8]
	0x03571254 LDR X19, [X9 + 0x18]
	0x03571258 LDR X20, [X8]
	0x0357125C LDR X8, [X20 + 0x38]
	0x03571260 CBNZ X8, 0x3571270
	0x03571264 MOV X0, X20
	0x03571268 BL 0x1C5C6E0
	0x0357126C LDR X8, [X20 + 0x38]
	0x03571270 LDR X0, [X8 + 0x10]
	0x03571274 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE6F000
	007 Move X22, 0xBC5000
	008 Move W8, [X21+3664]
	009 Move X22, [X22+3984]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xBC5000
	017 Move X0, [X0+3832]
	018 Call 0x1C17CF4
	019 Move X0, 0xBC5000
	020 Move X0, [X0+3992]
	021 Call 0x1C17CF4
	022 Move X0, 0xBC5000
	023 Move X0, [X0+3984]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3664], W8
	027 Move X0, [X22]
	028 Call 0x1C17F10
	029 Move X1, X31
	030 Move X21, X0
	031 Call Object..ctor, X0
	032 Compare X21, 0
	033 JumpIfEqual {58}
	034 Move X8, 0xBC5000
	035 Move X8, [X8+3832]
	036 Move [X21+16], X20
	037 Move X20, 0xBC5000
	038 Move X19, [X19+48]
	039 Move X0, [X8]
	040 Move X20, [X20+3992]
	041 Call 0x1C17F10
	042 Move X2, [X20]
	043 Move X1, X21
	044 Move X3, X31
	045 Move X20, X0
	046 Call Action`2<Object, Int32>..ctor, X0, X1, X2
	047 Compare X19, 0
	048 JumpIfEqual {58}
	049 Move X0, X19
	050 Move X1, X20
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Call MicWrapperPusherOnAudioFilterRead.add_OnAudioFrame, X0, X1
	057 Return 
	058 Call 0x1C17F20

Method: System.Void Dispose()

Disassembly:
	0x03571330 LDR W8, [X0 + 0xE0]
	0x03571334 CBNZ W8, 0x357133C
	0x03571338 BL 0x1C16DFC
	0x0357133C LDR X8, [X20 + 0x38]
	0x03571340 LDR X0, [X8 + 0x10]
	0x03571344 LDRB W8, [X0 + 0x135]
	0x03571348 TBNZ X8, 0x0, 0x3571350
	0x0357134C BL 0x1C5C684
	0x03571350 CBZ X19, 0x35713E8
	0x03571354 ADRP X10, 0xB87000
	0x03571358 ADRP X11, 0xBC5000
	0x0357135C LDR X9, [X0 + 0xB8]
	0x03571360 LDR X10, [X10 + 0x348]
	0x03571364 LDR X8, [X19]
	0x03571368 LDR X11, [X11 + 0x28]
	0x0357136C LDR X20, [X9]
	0x03571370 LDR X1, [X10]
	0x03571374 LDRH W9, [X8 + 0x12E]
	0x03571378 LDR X21, [X11]
	0x0357137C CBZ X9, 0x35713A0
	0x03571380 LDR X10, [X8 + 0xB0]
	0x03571384 ADD X10, X10, 0x8
	0x03571388 LDUR X11, [X10 - 0x8]
	0x0357138C CMP X11, X1
	0x03571390 B.EQ 0x35713B0
	0x03571394 SUBS X9, X9, 0x1
	0x03571398 ADD X10, X10, 0x10
	0x0357139C B.NE 0x3571388
	0x035713A0 MOVZ W2, 0x1
	0x035713A4 MOV X0, X19
	0x035713A8 BL 0x1C5C788
	0x035713AC B 0x35713C0
	0x035713B0 LDR W9, [X10]
	0x035713B4 ADD W9, W9, 0x1
	0x035713B8 ADD X8, X8, W9, 0x4, SXTW
	0x035713BC ADD X0, X8, 0x138
	0x035713C0 LDP X8, X4, [X0]
	0x035713C4 MOVZ W1, 0x1
	0x035713C8 MOV X0, X19
	0x035713CC MOV X2, X21
	0x035713D0 MOV X3, X20
	0x035713D4 BLR X8
	0x035713D8 MOV W0, W31
	0x035713DC LDP X20, X19, [X31 + 0x10]
	0x035713E0 LDP X30, X21, [X31], #0x20
	0x035713E4 RET
	0x035713E8 BL 0x1C16F20
	0x035713EC STR X30, [X31 - 0x10]!
	0x035713F0 LDR X8, [X0 + 0x40]
	0x035713F4 CBZ X8, 0x3571404
	0x035713F8 LDR X0, [X8 + 0x18]
	0x035713FC LDR X30, [X31], #0x10
	0x03571400 RET
	0x03571404 BL 0x1C16F20
	0x03571408 STP X30, X21, [X31 - 0x20]!
	0x0357140C STP X20, X19, [X31 + 0x10]
	0x03571410 ADRP X20, 0xE6E000
	0x03571414 LDRB W8, [X20 + 0xE63]
	0x03571418 MOV X19, X0
	0x0357141C TBNZ X8, 0x0, 0x357144C
	0x03571420 ADRP X0, 0xB82000
	0x03571424 LDR X0, [X0 + 0x9C8]
	0x03571428 BL 0x1C16CF4
	0x0357142C ADRP X0, 0xB87000
	0x03571430 LDR X0, [X0 + 0x348]
	0x03571434 BL 0x1C16CF4
	0x03571438 ADRP X0, 0xBC5000
	0x0357143C LDR X0, [X0 + 0x38]
	0x03571440 BL 0x1C16CF4
	0x03571444 MOVZ W8, 0x1
	0x03571448 STRB W8, [X20 + 0xE63]
	0x0357144C LDR X0, [X19 + 0x48]
	0x03571450 CBZ X0, 0x3571570
	0x03571454 MOV X1, X31
	0x03571458 BL 0x3535374
	0x0357145C TBZ X0, 0x0, 0x3571484
	0x03571460 LDR X0, [X19 + 0x48]
	0x03571464 MOVZ W8, 0x1
	0x03571468 STRB W8, [X19 + 0xC5]
	0x0357146C CBZ X0, 0x3571570
	0x03571470 LDP X20, X19, [X31 + 0x10]
	0x03571474 MOVZ W1, 0x11
	0x03571478 MOV X2, X31
	0x0357147C LDP X30, X21, [X31], #0x20
	0x03571480 B 0x35353A0
	0x03571484 LDR X9, [X19 + 0x40]
	0x03571488 CBZ X9, 0x3571570
	0x0357148C ADRP X8, 0xB82000
	0x03571490 LDR X8, [X8 + 0x9C8]
	0x03571494 LDR X19, [X9 + 0x18]
	0x03571498 LDR X20, [X8]
	0x0357149C LDR X8, [X20 + 0x38]
	0x035714A0 CBNZ X8, 0x35714B0
	0x035714A4 MOV X0, X20
	0x035714A8 BL 0x1C5C6E0
	0x035714AC LDR X8, [X20 + 0x38]
	0x035714B0 LDR X0, [X8 + 0x10]
	0x035714B4 LDRB W8, [X0 + 0x135]
	0x035714B8 TBNZ X8, 0x0, 0x35714C0
	0x035714BC BL 0x1C5C684
	0x035714C0 LDR W8, [X0 + 0xE0]
	0x035714C4 CBNZ W8, 0x35714CC
	0x035714C8 BL 0x1C16DFC
	0x035714CC LDR X8, [X20 + 0x38]
	0x035714D0 LDR X0, [X8 + 0x10]
	0x035714D4 LDRB W8, [X0 + 0x135]
	0x035714D8 TBNZ X8, 0x0, 0x35714E0
	0x035714DC BL 0x1C5C684
	0x035714E0 CBZ X19, 0x3571570

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE6F000
	006 Move X21, 0xB83000
	007 Move W8, [X20+3665]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xB83000
	015 Move X0, [X0+2504]
	016 Call 0x1C17CF4
	017 Move X0, 0xB88000
	018 Move X0, [X0+840]
	019 Call 0x1C17CF4
	020 Move X0, 0xB83000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move X0, 0xBC5000
	024 Move X0, [X0+4000]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+3665], W8
	028 Move X0, [X19+32]
	029 Move X1, X31
	030 Call Microphone.End, X0
	031 Move X0, [X21]
	032 Move X20, [X19+16]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X20
	038 Move X1, X31
	039 Move X2, X31
	040 Call Object.op_Inequality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {112}
	045 Move X0, [X19+16]
	046 Compare X0, 0
	047 JumpIfEqual {132}
	048 Move X1, X31
	049 Call Component.get_gameObject, X0
	050 Move X8, [X21]
	051 Move X20, X0
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {57}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 Move X0, X20
	058 Move X1, X31
	059 Call Object.Destroy, X0
	060 Move X8, 0xB83000
	061 Move X8, [X8+2504]
	062 Move X19, [X19+40]
	063 Move X20, [X8]
	064 Move X8, [X20+56]
	065 Compare X8, 0
	066 JumpIfNotEqual {70}
	067 Move X0, X20
	068 Call 0x1C5D6E0
	069 Move X8, [X20+56]
	070 Move X0, [X8+16]
	071 Move W8, [X0+309]
	072 Move TEMP, X8
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {77}
	076 Call 0x1C5D684
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X8, [X20+56]
	082 Move X0, [X8+16]
	083 Move W8, [X0+309]
	084 Move TEMP, X8
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfEqual {89}
	088 Call 0x1C5D684
	089 Compare X19, 0
	090 JumpIfEqual {132}
	091 Move X10, 0xB88000
	092 Move X11, 0xBC5000
	093 Move X9, [X0+184]
	094 Move X10, [X10+840]
	095 Move X8, [X19]
	096 Move X11, [X11+4000]
	097 Move X20, [X9]
	098 Move X1, [X10]
	099 NotImplemented "Instruction LDRH not yet implemented."
	100 Move X21, [X11]
	101 Compare X9, 0
	102 JumpIfEqual {109}
	103 Move X10, [X8+176]
	104 Add X10, X10, 8
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Subtract X9, X9, 1
	108 Add X10, X10, 16
	109 Move W2, 1
	110 Move X0, X19
	111 Call 0x1C5D788
	112 Move X20, [X31+16]
	113 Move X19, [X31+24]
	114 Move X30, [X31+32]
	115 Move X21, [X31+40]
	116 Return 
	117 Move W9, [X10]
	118 Add W9, W9, 1
	119 Add X8, X8, W9
	120 Add X0, X8, 312
	121 Move X5, [X0]
	122 Move X4, [X0+8]
	123 Move X0, X19
	124 Move X3, X20
	125 Move X20, [X31+16]
	126 Move X19, [X31+24]
	127 Move W1, 3
	128 Move X2, X21
	129 Move X30, [X31+32]
	130 Move X21, [X31+40]
	131 CallNoReturn X5
	132 Call 0x1C17F20

Method: System.Int32 get_SamplingRate()

Disassembly:
	0x035714E4 ADRP X10, 0xB87000
	0x035714E8 ADRP X11, 0xBC5000
	0x035714EC LDR X9, [X0 + 0xB8]
	0x035714F0 LDR X10, [X10 + 0x348]
	0x035714F4 LDR X8, [X19]
	0x035714F8 LDR X11, [X11 + 0x38]

ISIL:
	001 Move X8, [X0+64]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move W0, W31
	005 Return X0
	006 Move W0, [X0+56]
	007 Return X0

Method: System.Int32 get_Channels()

Disassembly:
	0x035714FC LDR X20, [X9]
	0x03571500 LDR X1, [X10]
	0x03571504 LDRH W9, [X8 + 0x12E]
	0x03571508 LDR X21, [X11]
	0x0357150C CBZ X9, 0x3571530
	0x03571510 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move X8, [X0+64]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move W0, W31
	005 Return X0
	006 Move W0, [X0+60]
	007 Return X0

Method: System.String get_Error()

Disassembly:
	0x03571514 ADD X10, X10, 0x8
	0x03571518 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set_Error(System.String value)

Disassembly:
	0x0357151C CMP X11, X1
	0x03571520 B.EQ 0x3571540

ISIL:
	001 Move [X0+64], X1
	002 Return 

