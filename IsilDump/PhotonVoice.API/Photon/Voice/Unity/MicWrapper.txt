Type: Photon.Voice.Unity.MicWrapper

Method: System.Void .ctor(System.String device, System.Int32 suggestedFrequency, Photon.Voice.ILogger logger)

Disassembly:
	0x0356F9C4 MOV W3, W22
	0x0356F9C8 BL 0x356EE10
	0x0356F9CC STR X0, [X20 + 0x40]
	0x0356F9D0 CBNZ X0, 0x356FF28
	0x0356F9D4 ADRP X8, 0xB84000
	0x0356F9D8 LDR X8, [X8 + 0xA58]
	0x0356F9DC LDR X0, [X8]
	0x0356F9E0 BL 0x1C16F10
	0x0356F9E4 ADRP X8, 0xBC6000
	0x0356F9E8 LDR X8, [X8 + 0xF68]
	0x0356F9EC MOV X22, X0
	0x0356F9F0 LDR X1, [X8]
	0x0356F9F4 MOV X2, X31
	0x0356F9F8 BL 0x3C35934
	0x0356F9FC CBZ X22, 0x356FF48
	0x0356FA00 MOV X0, X22
	0x0356FA04 MOV X1, X31
	0x0356FA08 BL 0x3C356F8
	0x0356FA0C CBZ X23, 0x356FF4C
	0x0356FA10 MOV X24, X0
	0x0356FA14 MOV X0, X23
	0x0356FA18 MOV X1, X31
	0x0356FA1C BL 0x3C356F8
	0x0356FA20 MOV X1, X0
	0x0356FA24 CBZ X24, 0x356FF50
	0x0356FA28 MOV X0, X24
	0x0356FA2C MOV W2, W31
	0x0356FA30 MOV X3, X31
	0x0356FA34 BL 0x3C3FEB8
	0x0356FA38 ADRP X8, 0xB89000
	0x0356FA3C LDR X8, [X8 + 0x640]
	0x0356FA40 LDR X1, [X8]
	0x0356FA44 MOV X0, X22
	0x0356FA48 BL 0x21E51FC
	0x0356FA4C STR X0, [X20 + 0x10]
	0x0356FA50 ADRP X26, 0xB84000
	0x0356FA54 LDR X26, [X26 + 0x9C8]
	0x0356FA58 LDR X23, [X26]
	0x0356FA5C LDR X8, [X23 + 0x38]
	0x0356FA60 CBNZ X8, 0x356FA70
	0x0356FA64 MOV X0, X23
	0x0356FA68 BL 0x1C5C6E0
	0x0356FA6C LDR X8, [X23 + 0x38]
	0x0356FA70 LDR X0, [X8 + 0x10]
	0x0356FA74 LDRB W8, [X0 + 0x135]
	0x0356FA78 TBNZ X8, 0x0, 0x356FA80
	0x0356FA7C BL 0x1C5C684
	0x0356FA80 LDR W8, [X0 + 0xE0]
	0x0356FA84 CBNZ W8, 0x356FA8C
	0x0356FA88 BL 0x1C16DFC
	0x0356FA8C LDR X8, [X23 + 0x38]
	0x0356FA90 LDR X0, [X8 + 0x10]
	0x0356FA94 LDRB W8, [X0 + 0x135]
	0x0356FA98 TBNZ X8, 0x0, 0x356FAA0
	0x0356FA9C BL 0x1C5C684
	0x0356FAA0 CBZ X19, 0x356FF54
	0x0356FAA4 ADRP X25, 0xB89000
	0x0356FAA8 ADRP X10, 0xBC6000
	0x0356FAAC LDR X9, [X0 + 0xB8]
	0x0356FAB0 LDR X25, [X25 + 0x348]
	0x0356FAB4 LDR X8, [X19]
	0x0356FAB8 LDR X10, [X10 + 0xF70]
	0x0356FABC LDR X23, [X9]
	0x0356FAC0 LDR X1, [X25]
	0x0356FAC4 LDRH W9, [X8 + 0x12E]
	0x0356FAC8 LDR X24, [X10]
	0x0356FACC CBZ X9, 0x356FAF0
	0x0356FAD0 LDR X10, [X8 + 0xB0]
	0x0356FAD4 ADD X10, X10, 0x8
	0x0356FAD8 LDUR X11, [X10 - 0x8]
	0x0356FADC CMP X11, X1
	0x0356FAE0 B.EQ 0x356FC34
	0x0356FAE4 SUBS X9, X9, 0x1
	0x0356FAE8 ADD X10, X10, 0x10
	0x0356FAEC B.NE 0x356FAD8
	0x0356FAF0 MOVZ W2, 0x1
	0x0356FAF4 MOV X0, X19
	0x0356FAF8 BL 0x1C5C788
	0x0356FAFC B 0x356FC44
	0x0356FB00 MOV X0, X31
	0x0356FB04 BL 0x3BFB460
	0x0356FB08 ADRP X8, 0xBC6000
	0x0356FB0C LDR X8, [X8 + 0xF48]
	0x0356FB10 MOVN X9, 0x0
	0x0356FB14 STR W0, [X31 + 0x18]
	0x0356FB18 LDR X8, [X8]
	0x0356FB1C STP X8, X9, [X31 + 0x8]
	0x0356FB20 ADD X0, X31, 0x8
	0x0356FB24 MOV X1, X31
	0x0356FB28 BL 0x33B162C
	0x0356FB2C MOV X1, X0
	0x0356FB30 ADRP X8, 0xBC6000
	0x0356FB34 LDR X8, [X8 + 0xF60]
	0x0356FB38 LDR X0, [X8]
	0x0356FB3C MOV X2, X31
	0x0356FB40 BL 0x321B938
	0x0356FB44 MOV X1, X0
	0x0356FB48 STR X1, [X20 + 0x40]
	0x0356FB4C ADRP X8, 0xBC6000
	0x0356FB50 LDR X8, [X8 + 0xF58]
	0x0356FB54 LDR X0, [X8]
	0x0356FB58 MOV X2, X31
	0x0356FB5C BL 0x321B938
	0x0356FB60 ADRP X8, 0xB84000
	0x0356FB64 LDR X8, [X8 + 0x9C8]
	0x0356FB68 MOV X21, X0
	0x0356FB6C LDR X22, [X8]
	0x0356FB70 LDR X8, [X22 + 0x38]
	0x0356FB74 CBNZ X8, 0x356FB84
	0x0356FB78 MOV X0, X22
	0x0356FB7C BL 0x1C5C6E0
	0x0356FB80 LDR X8, [X22 + 0x38]
	0x0356FB84 LDR X0, [X8 + 0x10]
	0x0356FB88 LDRB W8, [X0 + 0x135]
	0x0356FB8C TBNZ X8, 0x0, 0x356FB94
	0x0356FB90 BL 0x1C5C684
	0x0356FB94 LDR W8, [X0 + 0xE0]
	0x0356FB98 CBNZ W8, 0x356FBA0
	0x0356FB9C BL 0x1C16DFC
	0x0356FBA0 LDR X8, [X22 + 0x38]
	0x0356FBA4 LDR X0, [X8 + 0x10]
	0x0356FBA8 LDRB W8, [X0 + 0x135]
	0x0356FBAC TBNZ X8, 0x0, 0x356FBB4
	0x0356FBB0 BL 0x1C5C684
	0x0356FBB4 CBZ X19, 0x356FF44
	0x0356FBB8 ADRP X10, 0xB89000
	0x0356FBBC LDR X9, [X0 + 0xB8]
	0x0356FBC0 LDR X8, [X19]
	0x0356FBC4 LDR X10, [X10 + 0x348]
	0x0356FBC8 LDR X22, [X9]
	0x0356FBCC LDRH W9, [X8 + 0x12E]
	0x0356FBD0 LDR X1, [X10]
	0x0356FBD4 CBZ X9, 0x356FBF8
	0x0356FBD8 LDR X10, [X8 + 0xB0]
	0x0356FBDC ADD X10, X10, 0x8
	0x0356FBE0 LDUR X11, [X10 - 0x8]
	0x0356FBE4 CMP X11, X1
	0x0356FBE8 B.EQ 0x356FC08
	0x0356FBEC SUBS X9, X9, 0x1
	0x0356FBF0 ADD X10, X10, 0x10
	0x0356FBF4 B.NE 0x356FBE0
	0x0356FBF8 MOVZ W2, 0x1
	0x0356FBFC MOV X0, X19
	0x0356FC00 BL 0x1C5C788
	0x0356FC04 B 0x356FC18
	0x0356FC08 LDR W9, [X10]
	0x0356FC0C ADD W9, W9, 0x1
	0x0356FC10 ADD X8, X8, W9, 0x4, SXTW
	0x0356FC14 ADD X0, X8, 0x138
	0x0356FC18 LDP X8, X4, [X0]
	0x0356FC1C MOVZ W1, 0x1
	0x0356FC20 MOV X0, X19
	0x0356FC24 MOV X2, X21
	0x0356FC28 MOV X3, X22
	0x0356FC2C BLR X8
	0x0356FC30 B 0x356FF28
	0x0356FC34 LDR W9, [X10]
	0x0356FC38 ADD W9, W9, 0x1
	0x0356FC3C ADD X8, X8, W9, 0x4, SXTW
	0x0356FC40 ADD X0, X8, 0x138
	0x0356FC44 LDP X8, X4, [X0]
	0x0356FC48 MOVZ W1, 0x3
	0x0356FC4C MOV X0, X19
	0x0356FC50 MOV X2, X24
	0x0356FC54 MOV X3, X23
	0x0356FC58 BLR X8
	0x0356FC5C ADRP X8, 0xBC6000
	0x0356FC60 LDR X8, [X8 + 0xF50]
	0x0356FC64 LDR X1, [X8]
	0x0356FC68 MOV X0, X22
	0x0356FC6C BL 0x21E51FC
	0x0356FC70 STR X0, [X20 + 0x30]
	0x0356FC74 LDR W3, [X31 + 0x2C]
	0x0356FC78 MOVZ W1, 0x1
	0x0356FC7C MOVZ W2, 0x1
	0x0356FC80 MOV X0, X21
	0x0356FC84 MOV X4, X31
	0x0356FC88 BL 0x3BFD368
	0x0356FC8C MOV X1, X0
	0x0356FC90 LDR X0, [X20 + 0x10]
	0x0356FC94 STR X1, [X20 + 0x18]
	0x0356FC98 CBZ X0, 0x356FF58
	0x0356FC9C MOV X2, X31
	0x0356FCA0 BL 0x3BFCA38
	0x0356FCA4 LDR X0, [X20 + 0x10]
	0x0356FCA8 CBZ X0, 0x356FF5C
	0x0356FCAC MOVZ W1, 0x1
	0x0356FCB0 MOV X2, X31
	0x0356FCB4 BL 0x3BFCF88
	0x0356FCB8 MOVZ W22, 0x3E8
	0x0356FCBC MOV X0, X21
	0x0356FCC0 MOV X1, X31
	0x0356FCC4 BL 0x3BFD620
	0x0356FCC8 CMP W0, 0x0
	0x0356FCCC B.GT 0x356FCE4
	0x0356FCD0 MOVZ W0, 0x1
	0x0356FCD4 MOV X1, X31
	0x0356FCD8 BL 0x33E3BEC
	0x0356FCDC SUBS W22, W22, 0x1
	0x0356FCE0 B.NE 0x356FCBC
	0x0356FCE4 MOV X0, X21
	0x0356FCE8 MOV X1, X31
	0x0356FCEC BL 0x3BFD620
	0x0356FCF0 CMP W0, 0x0
	0x0356FCF4 B.GT 0x356FDBC
	0x0356FCF8 LDR X22, [X26]
	0x0356FCFC LDR X8, [X22 + 0x38]
	0x0356FD00 CBNZ X8, 0x356FD10
	0x0356FD04 MOV X0, X22
	0x0356FD08 BL 0x1C5C6E0
	0x0356FD0C LDR X8, [X22 + 0x38]
	0x0356FD10 LDR X0, [X8 + 0x10]
	0x0356FD14 LDRB W8, [X0 + 0x135]
	0x0356FD18 TBNZ X8, 0x0, 0x356FD20
	0x0356FD1C BL 0x1C5C684
	0x0356FD20 LDR W8, [X0 + 0xE0]
	0x0356FD24 CBNZ W8, 0x356FD2C
	0x0356FD28 BL 0x1C16DFC
	0x0356FD2C LDR X8, [X22 + 0x38]
	0x0356FD30 LDR X0, [X8 + 0x10]
	0x0356FD34 LDRB W8, [X0 + 0x135]
	0x0356FD38 TBNZ X8, 0x0, 0x356FD40
	0x0356FD3C BL 0x1C5C684
	0x0356FD40 ADRP X10, 0xBC6000
	0x0356FD44 LDR X9, [X0 + 0xB8]
	0x0356FD48 LDR X8, [X19]
	0x0356FD4C LDR X1, [X25]
	0x0356FD50 LDR X10, [X10 + 0xF80]
	0x0356FD54 LDR X22, [X9]
	0x0356FD58 LDRH W9, [X8 + 0x12E]
	0x0356FD5C LDR X23, [X10]
	0x0356FD60 CBZ X9, 0x356FD84
	0x0356FD64 LDR X10, [X8 + 0xB0]
	0x0356FD68 ADD X10, X10, 0x8
	0x0356FD6C LDUR X11, [X10 - 0x8]
	0x0356FD70 CMP X11, X1
	0x0356FD74 B.EQ 0x356FD94
	0x0356FD78 SUBS X9, X9, 0x1
	0x0356FD7C ADD X10, X10, 0x10
	0x0356FD80 B.NE 0x356FD6C
	0x0356FD84 MOVZ W2, 0x1
	0x0356FD88 MOV X0, X19
	0x0356FD8C BL 0x1C5C788
	0x0356FD90 B 0x356FDA4
	0x0356FD94 LDR W9, [X10]
	0x0356FD98 ADD W9, W9, 0x1
	0x0356FD9C ADD X8, X8, W9, 0x4, SXTW
	0x0356FDA0 ADD X0, X8, 0x138
	0x0356FDA4 LDP X8, X4, [X0]
	0x0356FDA8 MOVZ W1, 0x2
	0x0356FDAC MOV X0, X19
	0x0356FDB0 MOV X2, X23
	0x0356FDB4 MOV X3, X22
	0x0356FDB8 BLR X8
	0x0356FDBC LDR X0, [X20 + 0x10]
	0x0356FDC0 CBZ X0, 0x356FF60
	0x0356FDC4 MOV X1, X31
	0x0356FDC8 BL 0x3BFCAC0
	0x0356FDCC ADRP X8, 0xB84000
	0x0356FDD0 LDR X8, [X8 + 0x9D0]
	0x0356FDD4 LDR X0, [X8]
	0x0356FDD8 MOVZ W1, 0x3
	0x0356FDDC BL 0x1C16D6C
	0x0356FDE0 MOV X22, X0
	0x0356FDE4 CBZ X0, 0x356FF64
	0x0356FDE8 CBZ X21, 0x356FE00
	0x0356FDEC LDR X8, [X22]
	0x0356FDF0 LDR X1, [X8 + 0x40]
	0x0356FDF4 MOV X0, X21
	0x0356FDF8 BL 0x1C16E00
	0x0356FDFC CBZ X0, 0x356FF7C
	0x0356FE00 LDR W8, [X22 + 0x18]
	0x0356FE04 CBZ W8, 0x356FF68
	0x0356FE08 STR X21, [X22 + 0x20]
	0x0356FE0C LDR X0, [X20 + 0x18]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X24, 0xE71000
	010 Move X23, 0xBC7000
	011 Move W8, [X24+3661]
	012 Move X23, [X23+3840]
	013 Move X19, X3
	014 Move W21, W2
	015 Move X22, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0xB8A000
	022 Move X0, [X0+840]
	023 Call 0x1C17CF4
	024 Move X0, 0xB85000
	025 Move X0, [X0+1880]
	026 Call 0x1C17CF4
	027 Move X0, 0xB85000
	028 Move X0, [X0+2512]
	029 Call 0x1C17CF4
	030 Move X0, 0xBC7000
	031 Move X0, [X0+3848]
	032 Call 0x1C17CF4
	033 Move X0, 0xBC7000
	034 Move X0, [X0+3840]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X24+3661], W8
	038 Move X0, X20
	039 Move X1, X31
	040 Move [X31+28], W31
	041 Call Object..ctor, X0
	042 Move [X20+24], X22
	043 Move [X20+32], X19
	044 Move X1, [X23]
	045 Add X4, X31, 28
	046 Move X0, X19
	047 Move X2, X22
	048 Move W3, W21
	049 Call UnityMicrophone.CheckDevice, X0, X1, X2, X3, X4
	050 Move [X20+40], X0
	051 Compare X0, 0
	052 JumpIfNotEqual {158}
	053 Move W3, [X31+28]
	054 Move W1, 1
	055 Move W2, 1
	056 Move X0, X22
	057 Move X4, X31
	058 Call Microphone.Start, X0, X1, X2, X3
	059 Move [X20+16], X0
	060 Move X8, 0xB85000
	061 Move X8, [X8+2512]
	062 Move X0, [X8]
	063 Move W1, 3
	064 Call 0x1C17D6C
	065 Move X21, X0
	066 Compare X0, 0
	067 JumpIfEqual {167}
	068 Compare X22, 0
	069 JumpIfEqual {76}
	070 Move X8, [X21]
	071 Move X1, [X8+64]
	072 Move X0, X22
	073 Call 0x1C17E00
	074 Compare X0, 0
	075 JumpIfEqual {174}
	076 Move W8, [X21+24]
	077 Compare W8, 0
	078 JumpIfEqual {168}
	079 Move [X21+32], X22
	080 Move X0, [X20+16]
	081 Compare X0, 0
	082 JumpIfEqual {169}
	083 Move X1, X31
	084 Call AudioClip.get_frequency, X0
	085 Move X23, 0xB85000
	086 Move X23, [X23+1880]
	087 Move [X31+24], W0
	088 Move X8, [X23]
	089 Add X1, X31, 24
	090 Move X0, X8
	091 Call 0x1C17E04
	092 Move X22, X0
	093 Compare X0, 0
	094 JumpIfEqual {101}
	095 Move X8, [X21]
	096 Move X1, [X8+64]
	097 Move X0, X22
	098 Call 0x1C17E00
	099 Compare X0, 0
	100 JumpIfEqual {177}
	101 Move W8, [X21+24]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move [X21+40], X22
	104 Move X0, [X20+16]
	105 Compare X0, 0
	106 JumpIfEqual {171}
	107 Move X1, X31
	108 Call AudioClip.get_channels, X0
	109 Move X8, [X23]
	110 Move [X31+12], W0
	111 Add X1, X31, 12
	112 Move X0, X8
	113 Call 0x1C17E04
	114 Move X22, X0
	115 Compare X0, 0
	116 JumpIfEqual {123}
	117 Move X8, [X21]
	118 Move X1, [X8+64]
	119 Move X0, X22
	120 Call 0x1C17E00
	121 Compare X0, 0
	122 JumpIfEqual {180}
	123 Move W8, [X21+24]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move [X21+48], X22
	126 Compare X19, 0
	127 JumpIfEqual {173}
	128 Move X9, 0xB8A000
	129 Move X8, [X19]
	130 Move X9, [X9+840]
	131 Move X10, 0xBC7000
	132 Move X1, [X9]
	133 Move X10, [X10+3848]
	134 NotImplemented "Instruction LDRH not yet implemented."
	135 Move X22, [X10]
	136 Compare X9, 0
	137 JumpIfEqual {144}
	138 Move X10, [X8+176]
	139 Add X10, X10, 8
	140 NotImplemented "Instruction LDUR not yet implemented."
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Subtract X9, X9, 1
	143 Add X10, X10, 16
	144 Move W2, 1
	145 Move X0, X19
	146 Call 0x1C5D788
	147 Move W9, [X10]
	148 Add W9, W9, 1
	149 Add X8, X8, W9
	150 Add X0, X8, 312
	151 Move X8, [X0]
	152 Move X4, [X0+8]
	153 Move W1, 3
	154 Move X0, X19
	155 Move X2, X22
	156 Move X3, X21
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Move X20, [X31+64]
	159 Move X19, [X31+72]
	160 Move X22, [X31+48]
	161 Move X21, [X31+56]
	162 Move X24, [X31+32]
	163 Move X23, [X31+40]
	164 Move X30, [X31+16]
	165 Add X31, X31, 80
	166 Return 
	167 Call 0x1C17F20
	168 Call 0x1C17F28
	169 Call 0x1C17F20
	170 Call 0x1C17F28
	171 Call 0x1C17F20
	172 Call 0x1C17F28
	173 Call 0x1C17F20
	174 Call 0x1C17F44
	175 Move X1, X31
	176 Call 0x1C17DEC
	177 Call 0x1C17F44
	178 Move X1, X31
	179 Call 0x1C17DEC
	180 Call 0x1C17F44
	181 Move X1, X31
	182 Call 0x1C17DEC
	183 Move X21, X0
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move X0, X21
	186 Call 0x3EB2AD0
	187 Move X21, X0
	188 Move X0, 0xB85000
	189 Move X0, [X0+2000]
	190 Call 0x1C17D08
	191 Move X8, [X21]
	192 Move X1, [X8]
	193 Call 0x1C18270
	194 Move TEMP, X0
	195 And TEMP, TEMP, 1
	196 Compare TEMP, 1
	197 JumpIfNotEqual {285}
	198 Move X21, [X21]
	199 Call 0x3EB2AE0
	200 Compare X21, 0
	201 JumpIfEqual {284}
	202 Move X8, [X21]
	203 Move X0, X21
	204 Move X9, [X8+360]
	205 Move X1, [X8+368]
	206 NotImplemented "Instruction BLR not yet implemented."
	207 Move X21, X0
	208 Move [X20+40], X0
	209 Compare X0, 0
	210 JumpIfNotEqual {216}
	211 Move X0, 0xBC7000
	212 Move X0, [X0+3856]
	213 Call 0x1C17D08
	214 Move X21, X0
	215 Move [X20+40], X0
	216 Move X0, 0xBC7000
	217 Move X0, [X0+3840]
	218 Call 0x1C17D08
	219 Move X1, X21
	220 Move X2, X31
	221 Call String.Concat, X0, X1
	222 Move X20, X0
	223 Move X0, 0xB85000
	224 Move X0, [X0+2504]
	225 Call 0x1C17D08
	226 Move X8, [X0+56]
	227 Move X21, X0
	228 Compare X8, 0
	229 JumpIfNotEqual {233}
	230 Move X0, X21
	231 Call 0x1C5D6E0
	232 Move X8, [X21+56]
	233 Move X0, [X8+16]
	234 Move W8, [X0+309]
	235 Move TEMP, X8
	236 And TEMP, TEMP, 1
	237 Compare TEMP, 1
	238 JumpIfEqual {240}
	239 Call 0x1C5D684
	240 Move W8, [X0+224]
	241 Compare W8, 0
	242 JumpIfNotEqual {244}
	243 Call 0x1C17DFC
	244 Move X8, [X21+56]
	245 Move X0, [X8+16]
	246 Move W8, [X0+309]
	247 Move TEMP, X8
	248 And TEMP, TEMP, 1
	249 Compare TEMP, 1
	250 JumpIfEqual {252}
	251 Call 0x1C5D684
	252 Compare X19, 0
	253 JumpIfEqual {284}
	254 Move X8, [X0+184]
	255 Move X0, 0xB8A000
	256 Move X21, [X8]
	257 Move X0, [X0+840]
	258 Call 0x1C17D08
	259 Move X8, [X19]
	260 Move X1, X0
	261 NotImplemented "Instruction LDRH not yet implemented."
	262 Compare X9, 0
	263 JumpIfEqual {270}
	264 Move X10, [X8+176]
	265 Add X10, X10, 8
	266 NotImplemented "Instruction LDUR not yet implemented."
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Subtract X9, X9, 1
	269 Add X10, X10, 16
	270 Move W2, 1
	271 Move X0, X19
	272 Call 0x1C5D788
	273 Move W9, [X10]
	274 Add W9, W9, 1
	275 Add X8, X8, W9
	276 Add X0, X8, 312
	277 Move X8, [X0]
	278 Move X4, [X0+8]
	279 Move W1, 1
	280 Move X0, X19
	281 Move X2, X20
	282 Move X3, X21
	283 NotImplemented "Instruction BLR not yet implemented."
	284 Call 0x1C17F20
	285 Move W0, 8
	286 Call 0x3EB2AF0
	287 Move X8, [X21]
	288 Move [X0], X8
	289 Move X1, 0x946000
	290 Add X1, X1, 3672
	291 Move X2, X31
	292 Call 0x3EB2B00
	293 Move X21, X0
	294 Call 0x3EB2AE0
	295 Move X0, X21
	296 Call 0x1D2D690
	297 Call 0x1991590

Method: System.Int32 get_SamplingRate()

Disassembly:
	0x035705C8 BL 0x1C24138
	0x035705CC CMP X21, X0
	0x035705D0 MOV X21, X0
	0x035705D4 B.NE 0x357058C
	0x035705D8 LDP X20, X19, [X31 + 0x30]
	0x035705DC LDP X22, X21, [X31 + 0x20]
	0x035705E0 LDP X24, X23, [X31 + 0x10]
	0x035705E4 LDR X30, [X31], #0x40
	0x035705E8 RET
	0x035705EC MOV X0, X22
	0x035705F0 MOV X1, X23
	0x035705F4 BL 0x1C171E0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+40]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, W31
	006 Move X30, [X31+16]
	007 Return X0
	008 Move X0, [X0+16]
	009 Compare X0, 0
	010 JumpIfEqual {15}
	011 Move X1, X31
	012 Move X30, [X31+16]
	013 Call AudioClip.get_frequency, X0
	014 Return X0
	015 Call 0x1C17F20

Method: System.Int32 get_Channels()

Disassembly:
	0x035705F8 STR X30, [X31 - 0x30]!
	0x035705FC STP X22, X21, [X31 + 0x10]
	0x03570600 STP X20, X19, [X31 + 0x20]
	0x03570604 ADRP X22, 0xE6F000
	0x03570608 LDRB W8, [X22 + 0xE54]
	0x0357060C MOV W20, W2
	0x03570610 MOV X19, X1
	0x03570614 MOV X21, X0
	0x03570618 TBNZ X8, 0x0, 0x3570630
	0x0357061C ADRP X0, 0xB83000
	0x03570620 LDR X0, [X0 + 0x638]
	0x03570624 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+40]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, W31
	006 Move X30, [X31+16]
	007 Return X0
	008 Move X0, [X0+16]
	009 Compare X0, 0
	010 JumpIfEqual {15}
	011 Move X1, X31
	012 Move X30, [X31+16]
	013 Call AudioClip.get_channels, X0
	014 Return X0
	015 Call 0x1C17F20

Method: System.String get_Error()

Disassembly:
	0x03570628 MOVZ W8, 0x1
	0x0357062C STRB W8, [X22 + 0xE54]

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_Error(System.String value)

Disassembly:
	0x03570630 LDR X8, [X21 + 0x28]
	0x03570634 CBZ X8, 0x35706A4

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.Void Dispose()

Disassembly:
	0x03570638 LDR X1, [X21 + 0x20]
	0x0357063C CBZ X1, 0x35706C8
	0x03570640 CBZ X19, 0x35706C8

ISIL:
	001 Move X0, [X0+24]
	002 Move X1, X31
	003 Call Microphone.End, X0
	004 Return 

Method: System.Boolean Read(System.Single[] buffer)

Disassembly:
	0x0357064C CMP W8, W2
	0x03570650 B.EQ 0x3570674
	0x03570654 ADRP X8, 0xB83000
	0x03570658 LDR X8, [X8 + 0x638]
	0x0357065C MOV W1, W2
	0x03570660 LDR X0, [X8]
	0x03570664 BL 0x1C16D6C
	0x03570668 STR X0, [X21 + 0x20]
	0x0357066C LDR W2, [X19 + 0x18]
	0x03570670 MOV X1, X0
	0x03570674 MOV X0, X19
	0x03570678 MOV X3, X31
	0x0357067C BL 0x33A0C7C
	0x03570680 LDR X8, [X21 + 0x28]
	0x03570684 CBZ X8, 0x35706C8
	0x03570688 LDR X1, [X21 + 0x20]
	0x0357068C LDR X9, [X8 + 0x18]
	0x03570690 LDR X0, [X8 + 0x40]
	0x03570694 LDR X3, [X8 + 0x28]
	0x03570698 MOV W2, W20
	0x0357069C BLR X9
	0x035706A0 B 0x35706A8
	0x035706A4 CBZ X19, 0x35706C8
	0x035706A8 LDR W2, [X19 + 0x18]
	0x035706AC MOV X0, X19
	0x035706B0 LDP X20, X19, [X31 + 0x20]
	0x035706B4 LDP X22, X21, [X31 + 0x10]
	0x035706B8 MOV W1, W31
	0x035706BC MOV X3, X31
	0x035706C0 LDR X30, [X31], #0x30
	0x035706C4 B 0x339FA34
	0x035706C8 BL 0x1C16F20
	0x035706CC STP X30, X21, [X31 - 0x20]!
	0x035706D0 STP X20, X19, [X31 + 0x10]
	0x035706D4 ADRP X20, 0xE6F000
	0x035706D8 ADRP X21, 0xB83000
	0x035706DC LDRB W8, [X20 + 0xE55]
	0x035706E0 LDR X21, [X21 + 0x638]
	0x035706E4 MOV X19, X0
	0x035706E8 TBNZ X8, 0x0, 0x3570700
	0x035706EC ADRP X0, 0xB83000
	0x035706F0 LDR X0, [X0 + 0x638]
	0x035706F4 BL 0x1C16CF4
	0x035706F8 MOVZ W8, 0x1
	0x035706FC STRB W8, [X20 + 0xE55]
	0x03570700 LDR X0, [X21]
	0x03570704 MOV W1, W31
	0x03570708 BL 0x1C16D6C
	0x0357070C STR X0, [X19 + 0x20]
	0x03570710 MOV X0, X19
	0x03570714 LDP X20, X19, [X31 + 0x10]
	0x03570718 MOV X1, X31
	0x0357071C LDP X30, X21, [X31], #0x20
	0x03570720 B 0x3C36C30
	0x03570724 STR X30, [X31 - 0x60]!
	0x03570728 STP X28, X27, [X31 + 0x10]
	0x0357072C STP X26, X25, [X31 + 0x20]
	0x03570730 STP X24, X23, [X31 + 0x30]
	0x03570734 STP X22, X21, [X31 + 0x40]
	0x03570738 STP X20, X19, [X31 + 0x50]
	0x0357073C ADRP X28, 0xE6F000
	0x03570740 ADRP X27, 0xB83000
	0x03570744 ADRP X26, 0xBC5000
	0x03570748 LDRB W8, [X28 + 0xE56]
	0x0357074C LDR X27, [X27 + 0x988]
	0x03570750 LDR X26, [X26 + 0xFA8]
	0x03570754 MOV W23, W6
	0x03570758 MOV X25, X5
	0x0357075C MOV X21, X4
	0x03570760 MOV X22, X3
	0x03570764 MOV X24, X2
	0x03570768 MOV X19, X1
	0x0357076C MOV X20, X0
	0x03570770 TBNZ X8, 0x0, 0x35707AC
	0x03570774 ADRP X0, 0xBC5000
	0x03570778 LDR X0, [X0 + 0xFB0]
	0x0357077C BL 0x1C16CF4
	0x03570780 ADRP X0, 0xB83000
	0x03570784 LDR X0, [X0 + 0xDD8]
	0x03570788 BL 0x1C16CF4
	0x0357078C ADRP X0, 0xBC5000
	0x03570790 LDR X0, [X0 + 0xFA8]
	0x03570794 BL 0x1C16CF4
	0x03570798 ADRP X0, 0xB83000
	0x0357079C LDR X0, [X0 + 0x988]
	0x035707A0 BL 0x1C16CF4
	0x035707A4 MOVZ W8, 0x1
	0x035707A8 STRB W8, [X28 + 0xE56]
	0x035707AC LDR X1, [X27]
	0x035707B0 ADRP X28, 0xBC5000
	0x035707B4 LDR X28, [X28 + 0xFB0]
	0x035707B8 MOV X0, X25
	0x035707BC MOV X2, X31
	0x035707C0 BL 0x321BA08
	0x035707C4 LDR X26, [X26]
	0x035707C8 TBZ X0, 0x0, 0x35707D4
	0x035707CC LDR X1, [X27]
	0x035707D0 B 0x35707F0
	0x035707D4 ADRP X8, 0xB83000
	0x035707D8 LDR X8, [X8 + 0xDD8]
	0x035707DC MOV X1, X25
	0x035707E0 MOV X2, X31
	0x035707E4 LDR X0, [X8]
	0x035707E8 BL 0x321B938
	0x035707EC MOV X1, X0
	0x035707F0 MOV X0, X26
	0x035707F4 MOV X2, X31
	0x035707F8 BL 0x321B938
	0x035707FC LDR X7, [X28]
	0x03570800 MOV X5, X0
	0x03570804 AND W6, W23, 0x1
	0x03570808 MOVZ W1, 0x1
	0x0357080C MOV X0, X20
	0x03570810 MOV X2, X24
	0x03570814 MOV X3, X22
	0x03570818 MOV X4, X21
	0x0357081C BL 0x263DCE4
	0x03570820 STR X19, [X20 + 0xB0]
	0x03570824 LDP X20, X19, [X31 + 0x50]
	0x03570828 LDP X22, X21, [X31 + 0x40]
	0x0357082C LDP X24, X23, [X31 + 0x30]
	0x03570830 LDP X26, X25, [X31 + 0x20]
	0x03570834 LDP X28, X27, [X31 + 0x10]
	0x03570838 LDR X30, [X31], #0x60
	0x0357083C RET
	0x03570840 STR X30, [X31 - 0x10]!
	0x03570844 LDR X0, [X0 + 0xB0]
	0x03570848 CBZ X0, 0x3570860
	0x0357084C MOV X1, X31
	0x03570850 BL 0x3BFC9C0
	0x03570854 SXTW X0, W0
	0x03570858 LDR X30, [X31], #0x10
	0x0357085C RET
	0x03570860 BL 0x1C16F20
	0x03570864 STP X30, X23, [X31 - 0x30]!
	0x03570868 STP X22, X21, [X31 + 0x10]
	0x0357086C STP X20, X19, [X31 + 0x20]
	0x03570870 ADRP X23, 0xE6F000
	0x03570874 LDRB W8, [X23 + 0xE57]
	0x03570878 MOV W22, W3
	0x0357087C MOV W21, W2
	0x03570880 MOV W20, W1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xE70000
	008 Move W8, [X21+3662]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xB84000
	016 Move X0, [X0+2504]
	017 Call 0x1C17CF4
	018 Move X0, 0xB89000
	019 Move X0, [X0+840]
	020 Call 0x1C17CF4
	021 Move X0, 0xBC6000
	022 Move X0, [X0+3840]
	023 Call 0x1C17CF4
	024 Move X0, 0xBC6000
	025 Move X0, [X0+3904]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3662], W8
	029 Move X8, [X20+40]
	030 Compare X8, 0
	031 JumpIfEqual {40}
	032 Move W0, W31
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Move X23, [X31+56]
	039 Return X0
	040 Move X0, [X20+24]
	041 Move X1, X31
	042 Call Microphone.GetPosition, X0
	043 Move W8, [X20+48]
	044 Move W21, W0
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W8, [X20+52]
	047 Add W8, W8, 1
	048 Move [X20+52], W8
	049 Move X0, [X20+16]
	050 Move [X20+48], W21
	051 Compare X0, 0
	052 JumpIfEqual {162}
	053 Move W23, [X20+52]
	054 Move X1, X31
	055 Call AudioClip.get_samples, X0
	056 Move X8, [X20+16]
	057 Compare X8, 0
	058 JumpIfEqual {162}
	059 Move W22, W0
	060 Move X0, X8
	061 Move X1, X31
	062 Call AudioClip.get_channels, X0
	063 Compare W0, 0
	064 JumpIfEqual {92}
	065 Compare X19, 0
	066 JumpIfEqual {162}
	067 Move X0, [X20+16]
	068 Compare X0, 0
	069 JumpIfEqual {162}
	070 Move X1, X31
	071 NotImplemented "Instruction MADD not yet implemented."
	072 Call AudioClip.get_channels, X0
	073 Move W8, [X19+24]
	074 Move W23, [X20+56]
	075 NotImplemented "Instruction SDIV not yet implemented."
	076 Add W22, W23, W8
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X21, [X20+16]
	079 Compare X21, 0
	080 JumpIfEqual {162}
	081 Move X0, X21
	082 Move X1, X31
	083 Call AudioClip.get_samples, X0
	084 NotImplemented "Instruction SDIV not yet implemented."
	085 NotImplemented "Instruction MSUB not yet implemented."
	086 Move X0, X21
	087 Move X1, X19
	088 Move X3, X31
	089 Call AudioClip.GetData, X0, X1, X2
	090 Move W0, 1
	091 Move [X20+56], W22
	092 Move X8, 0xBC6000
	093 Move X8, [X8+3904]
	094 Move X19, [X20+32]
	095 Move X2, X31
	096 Move X1, [X8]
	097 Move X8, 0xBC6000
	098 Move [X20+40], X1
	099 Move X8, [X8+3840]
	100 Move X0, [X8]
	101 Call String.Concat, X0, X1
	102 Move X8, 0xB84000
	103 Move X8, [X8+2504]
	104 Move X20, X0
	105 Move X21, [X8]
	106 Move X8, [X21+56]
	107 Compare X8, 0
	108 JumpIfNotEqual {112}
	109 Move X0, X21
	110 Call 0x1C5D6E0
	111 Move X8, [X21+56]
	112 Move X0, [X8+16]
	113 Move W8, [X0+309]
	114 Move TEMP, X8
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfEqual {119}
	118 Call 0x1C5D684
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {123}
	122 Call 0x1C17DFC
	123 Move X8, [X21+56]
	124 Move X0, [X8+16]
	125 Move W8, [X0+309]
	126 Move TEMP, X8
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfEqual {131}
	130 Call 0x1C5D684
	131 Compare X19, 0
	132 JumpIfEqual {162}
	133 Move X10, 0xB89000
	134 Move X9, [X0+184]
	135 Move X8, [X19]
	136 Move X10, [X10+840]
	137 Move X21, [X9]
	138 NotImplemented "Instruction LDRH not yet implemented."
	139 Move X1, [X10]
	140 Compare X9, 0
	141 JumpIfEqual {148}
	142 Move X10, [X8+176]
	143 Add X10, X10, 8
	144 NotImplemented "Instruction LDUR not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Subtract X9, X9, 1
	147 Add X10, X10, 16
	148 Move W2, 1
	149 Move X0, X19
	150 Call 0x1C5D788
	151 Move W9, [X10]
	152 Add W9, W9, 1
	153 Add X8, X8, W9
	154 Add X0, X8, 312
	155 Move X8, [X0]
	156 Move X4, [X0+8]
	157 Move W1, 1
	158 Move X0, X19
	159 Move X2, X20
	160 Move X3, X21
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Call 0x1C17F20

