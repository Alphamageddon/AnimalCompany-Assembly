Type: Photon.Voice.Unity.UnityMicrophone

Method: System.String[] get_devices()

Disassembly:
	0x0356F89C STP X22, X21, [X31 + 0x50]
	0x0356F8A0 STP X20, X19, [X31 + 0x60]

ISIL:
	001 Move X0, X31
	002 Call Microphone.get_devices
	003 Return X0

Method: System.Void End(System.String deviceName)

Disassembly:
	0x03570644 LDR W8, [X1 + 0x18]
	0x03570648 LDR W2, [X19 + 0x18]

ISIL:
	001 Move X1, X31
	002 Call Microphone.End, X0
	003 Return 

Method: System.Void GetDeviceCaps(System.String deviceName, out System.Int32 minFreq, out System.Int32 maxFreq)

Disassembly:
	0x035719F0 CBZ X8, 0x3571A28
	0x035719F4 LDR X9, [X8]

ISIL:
	001 Move X3, X31
	002 Call Microphone.GetDeviceCaps, X0, X1, X2
	003 Return 

Method: System.Int32 GetPosition(System.String deviceName)

Disassembly:
	0x03570884 MOV X19, X0
	0x03570888 TBNZ X8, 0x0, 0x35708A0

ISIL:
	001 Move X1, X31
	002 Call Microphone.GetPosition, X0
	003 Return X0

Method: System.Boolean IsRecording(System.String deviceName)

Disassembly:
	0x035719F8 MOV X0, X8
	0x035719FC LDP X10, X1, [X9 + 0x1B8]

ISIL:
	001 Move X1, X31
	002 Call Microphone.IsRecording, X0
	003 Return X0

Method: UnityEngine.AudioClip Start(System.String deviceName, System.Boolean loop, System.Int32 lengthSec, System.Int32 frequency)

Disassembly:
	0x035705BC MOV X1, X31
	0x035705C0 MOV X0, X20
	0x035705C4 MOV X2, X21

ISIL:
	001 And W1, W1, 1
	002 Move X4, X31
	003 Call Microphone.Start, X0, X1, X2, X3
	004 Return X0

Method: System.String CheckDevice(Photon.Voice.ILogger logger, System.String logPref, System.String device, System.Int32 suggestedFrequency, out System.Int32 frequency)

Disassembly:
	0x0356FE10 CBZ X0, 0x356FF6C
	0x0356FE14 MOV X1, X31
	0x0356FE18 BL 0x3BFBDE0
	0x0356FE1C ADRP X23, 0xB84000
	0x0356FE20 LDR X23, [X23 + 0x758]
	0x0356FE24 STR W0, [X31 + 0x8]
	0x0356FE28 LDR X8, [X23]
	0x0356FE2C ADD X1, X31, 0x8
	0x0356FE30 MOV X0, X8
	0x0356FE34 BL 0x1C16E04
	0x0356FE38 MOV X21, X0
	0x0356FE3C CBZ X0, 0x356FE54
	0x0356FE40 LDR X8, [X22]
	0x0356FE44 LDR X1, [X8 + 0x40]
	0x0356FE48 MOV X0, X21
	0x0356FE4C BL 0x1C16E00
	0x0356FE50 CBZ X0, 0x356FF88
	0x0356FE54 LDR W8, [X22 + 0x18]
	0x0356FE58 CMP W8, 0x1
	0x0356FE5C B.LS 0x356FF70
	0x0356FE60 STR X21, [X22 + 0x28]
	0x0356FE64 LDR X0, [X20 + 0x18]
	0x0356FE68 CBZ X0, 0x356FF74
	0x0356FE6C MOV X1, X31
	0x0356FE70 BL 0x3BFBDA4
	0x0356FE74 LDR X8, [X23]
	0x0356FE78 STR W0, [X31 + 0x28]
	0x0356FE7C ADD X1, X31, 0x28
	0x0356FE80 MOV X0, X8
	0x0356FE84 BL 0x1C16E04
	0x0356FE88 MOV X21, X0
	0x0356FE8C CBZ X0, 0x356FEA4
	0x0356FE90 LDR X8, [X22]
	0x0356FE94 LDR X1, [X8 + 0x40]
	0x0356FE98 MOV X0, X21
	0x0356FE9C BL 0x1C16E00
	0x0356FEA0 CBZ X0, 0x356FF94
	0x0356FEA4 LDR W8, [X22 + 0x18]
	0x0356FEA8 CMP W8, 0x2
	0x0356FEAC B.LS 0x356FF78
	0x0356FEB0 STR X21, [X22 + 0x30]
	0x0356FEB4 ADRP X10, 0xBC6000
	0x0356FEB8 LDR X8, [X19]
	0x0356FEBC LDR X1, [X25]
	0x0356FEC0 LDR X10, [X10 + 0xF78]
	0x0356FEC4 LDRH W9, [X8 + 0x12E]
	0x0356FEC8 LDR X21, [X10]
	0x0356FECC CBZ X9, 0x356FEF0
	0x0356FED0 LDR X10, [X8 + 0xB0]
	0x0356FED4 ADD X10, X10, 0x8
	0x0356FED8 LDUR X11, [X10 - 0x8]
	0x0356FEDC CMP X11, X1
	0x0356FEE0 B.EQ 0x356FF00
	0x0356FEE4 SUBS X9, X9, 0x1
	0x0356FEE8 ADD X10, X10, 0x10
	0x0356FEEC B.NE 0x356FED8
	0x0356FEF0 MOVZ W2, 0x1
	0x0356FEF4 MOV X0, X19
	0x0356FEF8 BL 0x1C5C788
	0x0356FEFC B 0x356FF10
	0x0356FF00 LDR W9, [X10]
	0x0356FF04 ADD W9, W9, 0x1
	0x0356FF08 ADD X8, X8, W9, 0x4, SXTW
	0x0356FF0C ADD X0, X8, 0x138
	0x0356FF10 LDP X8, X4, [X0]
	0x0356FF14 MOVZ W1, 0x3
	0x0356FF18 MOV X0, X19
	0x0356FF1C MOV X2, X21
	0x0356FF20 MOV X3, X22
	0x0356FF24 BLR X8
	0x0356FF28 LDP X20, X19, [X31 + 0x60]
	0x0356FF2C LDP X22, X21, [X31 + 0x50]
	0x0356FF30 LDP X24, X23, [X31 + 0x40]
	0x0356FF34 LDP X26, X25, [X31 + 0x30]
	0x0356FF38 LDR X30, [X31 + 0x20]
	0x0356FF3C ADD X31, X31, 0x70
	0x0356FF40 RET
	0x0356FF44 BL 0x1C16F20
	0x0356FF48 BL 0x1C16F20
	0x0356FF4C BL 0x1C16F20
	0x0356FF50 BL 0x1C16F20
	0x0356FF54 BL 0x1C16F20
	0x0356FF58 BL 0x1C16F20
	0x0356FF5C BL 0x1C16F20
	0x0356FF60 BL 0x1C16F20
	0x0356FF64 BL 0x1C16F20
	0x0356FF68 BL 0x1C16F28
	0x0356FF6C BL 0x1C16F20
	0x0356FF70 BL 0x1C16F28
	0x0356FF74 BL 0x1C16F20
	0x0356FF78 BL 0x1C16F28
	0x0356FF7C BL 0x1C16F44
	0x0356FF80 MOV X1, X31
	0x0356FF84 BL 0x1C16DEC
	0x0356FF88 BL 0x1C16F44
	0x0356FF8C MOV X1, X31
	0x0356FF90 BL 0x1C16DEC
	0x0356FF94 BL 0x1C16F44
	0x0356FF98 MOV X1, X31
	0x0356FF9C BL 0x1C16DEC
	0x0356FFA0 B 0x357001C
	0x0356FFA4 B 0x357001C
	0x0356FFA8 B 0x357001C
	0x0356FFAC B 0x357001C
	0x0356FFB0 B 0x357001C
	0x0356FFB4 B 0x357001C
	0x0356FFB8 B 0x357001C
	0x0356FFBC B 0x357001C
	0x0356FFC0 B 0x357001C
	0x0356FFC4 B 0x357001C
	0x0356FFC8 B 0x357001C
	0x0356FFCC B 0x357001C
	0x0356FFD0 B 0x357001C
	0x0356FFD4 B 0x357001C
	0x0356FFD8 B 0x357001C
	0x0356FFDC B 0x357001C
	0x0356FFE0 B 0x357001C
	0x0356FFE4 B 0x357001C
	0x0356FFE8 B 0x357001C
	0x0356FFEC B 0x357001C
	0x0356FFF0 B 0x357001C
	0x0356FFF4 B 0x357001C
	0x0356FFF8 B 0x357001C
	0x0356FFFC B 0x357001C
	0x03570000 B 0x357001C
	0x03570004 B 0x357001C
	0x03570008 B 0x357001C
	0x0357000C B 0x357001C
	0x03570010 B 0x357001C
	0x03570014 B 0x357001C
	0x03570018 B 0x357001C
	0x0357001C MOV X21, X0
	0x03570020 CMP W1, 0x1
	0x03570024 B.NE 0x35701AC
	0x03570028 MOV X0, X21
	0x0357002C BL 0x3EB1AD0
	0x03570030 MOV X21, X0
	0x03570034 ADRP X0, 0xB83000
	0x03570038 LDR X0, [X0 + 0x7D0]
	0x0357003C BL 0x1C16D08
	0x03570040 LDR X8, [X21]
	0x03570044 LDR X1, [X8]
	0x03570048 BL 0x1C17270
	0x0357004C TBZ X0, 0x0, 0x3570184
	0x03570050 LDR X21, [X21]
	0x03570054 BL 0x3EB1AE0
	0x03570058 CBZ X21, 0x3570180
	0x0357005C LDR X8, [X21]
	0x03570060 MOV X0, X21
	0x03570064 LDP X9, X1, [X8 + 0x168]
	0x03570068 BLR X9
	0x0357006C MOV X21, X0
	0x03570070 STR X0, [X20 + 0x40]
	0x03570074 CBNZ X0, 0x357008C
	0x03570078 ADRP X0, 0xBC5000
	0x0357007C LDR X0, [X0 + 0xF88]
	0x03570080 BL 0x1C16D08
	0x03570084 MOV X21, X0
	0x03570088 STR X0, [X20 + 0x40]
	0x0357008C ADRP X0, 0xBC5000
	0x03570090 LDR X0, [X0 + 0xF58]
	0x03570094 BL 0x1C16D08
	0x03570098 MOV X1, X21
	0x0357009C MOV X2, X31
	0x035700A0 BL 0x321B938
	0x035700A4 MOV X20, X0
	0x035700A8 ADRP X0, 0xB83000
	0x035700AC LDR X0, [X0 + 0x9C8]
	0x035700B0 BL 0x1C16D08
	0x035700B4 LDR X8, [X0 + 0x38]
	0x035700B8 MOV X21, X0
	0x035700BC CBNZ X8, 0x35700CC
	0x035700C0 MOV X0, X21
	0x035700C4 BL 0x1C5C6E0
	0x035700C8 LDR X8, [X21 + 0x38]
	0x035700CC LDR X0, [X8 + 0x10]
	0x035700D0 LDRB W8, [X0 + 0x135]
	0x035700D4 TBNZ X8, 0x0, 0x35700DC
	0x035700D8 BL 0x1C5C684
	0x035700DC LDR W8, [X0 + 0xE0]
	0x035700E0 CBNZ W8, 0x35700E8
	0x035700E4 BL 0x1C16DFC
	0x035700E8 LDR X8, [X21 + 0x38]
	0x035700EC LDR X0, [X8 + 0x10]
	0x035700F0 LDRB W8, [X0 + 0x135]
	0x035700F4 TBNZ X8, 0x0, 0x35700FC
	0x035700F8 BL 0x1C5C684
	0x035700FC CBZ X19, 0x3570180
	0x03570100 LDR X8, [X0 + 0xB8]
	0x03570104 ADRP X0, 0xB88000
	0x03570108 LDR X21, [X8]
	0x0357010C LDR X0, [X0 + 0x348]
	0x03570110 BL 0x1C16D08
	0x03570114 LDR X8, [X19]
	0x03570118 MOV X1, X0
	0x0357011C LDRH W9, [X8 + 0x12E]
	0x03570120 CBZ X9, 0x3570144
	0x03570124 LDR X10, [X8 + 0xB0]
	0x03570128 ADD X10, X10, 0x8
	0x0357012C LDUR X11, [X10 - 0x8]
	0x03570130 CMP X11, X1
	0x03570134 B.EQ 0x3570154
	0x03570138 SUBS X9, X9, 0x1
	0x0357013C ADD X10, X10, 0x10
	0x03570140 B.NE 0x357012C
	0x03570144 MOVZ W2, 0x1
	0x03570148 MOV X0, X19
	0x0357014C BL 0x1C5C788
	0x03570150 B 0x3570164
	0x03570154 LDR W9, [X10]
	0x03570158 ADD W9, W9, 0x1
	0x0357015C ADD X8, X8, W9, 0x4, SXTW
	0x03570160 ADD X0, X8, 0x138
	0x03570164 LDP X8, X4, [X0]
	0x03570168 MOVZ W1, 0x1
	0x0357016C MOV X0, X19
	0x03570170 MOV X2, X20
	0x03570174 MOV X3, X21
	0x03570178 BLR X8
	0x0357017C B 0x356FF28
	0x03570180 BL 0x1C16F20
	0x03570184 MOVZ W0, 0x8
	0x03570188 BL 0x3EB1AF0
	0x0357018C LDR X8, [X21]
	0x03570190 STR X8, [X0]
	0x03570194 ADRP X1, 0x944000
	0x03570198 ADD X1, X1, 0xE58
	0x0357019C MOV X2, X31
	0x035701A0 BL 0x3EB1B00
	0x035701A4 MOV X21, X0
	0x035701A8 BL 0x3EB1AE0
	0x035701AC MOV X0, X21
	0x035701B0 BL 0x1D2C690
	0x035701B4 BL 0x1990590
	0x035701B8 STR X30, [X31 - 0x30]!
	0x035701BC STP X22, X21, [X31 + 0x10]
	0x035701C0 STP X20, X19, [X31 + 0x20]
	0x035701C4 ADRP X21, 0xE6F000
	0x035701C8 ADRP X22, 0xBC5000
	0x035701CC LDRB W8, [X21 + 0xE50]
	0x035701D0 LDR X22, [X22 + 0xF90]
	0x035701D4 MOV X20, X1
	0x035701D8 MOV X19, X0
	0x035701DC TBNZ X8, 0x0, 0x357020C
	0x035701E0 ADRP X0, 0xBC5000
	0x035701E4 LDR X0, [X0 + 0xEF8]
	0x035701E8 BL 0x1C16CF4
	0x035701EC ADRP X0, 0xBC5000
	0x035701F0 LDR X0, [X0 + 0xF98]
	0x035701F4 BL 0x1C16CF4
	0x035701F8 ADRP X0, 0xBC5000
	0x035701FC LDR X0, [X0 + 0xF90]
	0x03570200 BL 0x1C16CF4
	0x03570204 MOVZ W8, 0x1
	0x03570208 STRB W8, [X21 + 0xE50]
	0x0357020C LDR X0, [X22]
	0x03570210 BL 0x1C16F10
	0x03570214 MOV X1, X31
	0x03570218 MOV X21, X0
	0x0357021C BL 0x33BDD8C
	0x03570220 CBZ X21, 0x3570274
	0x03570224 ADRP X8, 0xBC5000
	0x03570228 LDR X8, [X8 + 0xEF8]
	0x0357022C STR X20, [X21 + 0x10]
	0x03570230 ADRP X20, 0xBC5000
	0x03570234 LDR X19, [X19 + 0x30]
	0x03570238 LDR X0, [X8]
	0x0357023C LDR X20, [X20 + 0xF98]
	0x03570240 BL 0x1C16F10
	0x03570244 LDR X2, [X20]
	0x03570248 MOV X1, X21
	0x0357024C MOV X3, X31
	0x03570250 MOV X20, X0
	0x03570254 BL 0x2A7689C
	0x03570258 CBZ X19, 0x3570274
	0x0357025C MOV X0, X19
	0x03570260 MOV X1, X20
	0x03570264 LDP X20, X19, [X31 + 0x20]
	0x03570268 LDP X22, X21, [X31 + 0x10]
	0x0357026C LDR X30, [X31], #0x30
	0x03570270 B 0x3570280
	0x03570274 BL 0x1C16F20
	0x03570278 MOV X1, X31
	0x0357027C B 0x33BDD8C
	0x03570280 STR X30, [X31 - 0x40]!
	0x03570284 STP X24, X23, [X31 + 0x10]
	0x03570288 STP X22, X21, [X31 + 0x20]
	0x0357028C STP X20, X19, [X31 + 0x30]
	0x03570290 ADRP X21, 0xE6F000
	0x03570294 LDRB W8, [X21 + 0xE52]
	0x03570298 MOV X19, X1
	0x0357029C MOV X20, X0
	0x035702A0 TBNZ X8, 0x0, 0x35702B8
	0x035702A4 ADRP X0, 0xBC5000
	0x035702A8 LDR X0, [X0 + 0xEF8]
	0x035702AC BL 0x1C16CF4
	0x035702B0 MOVZ W8, 0x1
	0x035702B4 STRB W8, [X21 + 0xE52]
	0x035702B8 ADRP X24, 0xBC5000
	0x035702BC LDR X21, [X20 + 0x28]!
	0x035702C0 LDR X24, [X24 + 0xEF8]
	0x035702C4 MOV X0, X21
	0x035702C8 MOV X1, X19
	0x035702CC MOV X2, X31
	0x035702D0 BL 0x33C0DE4
	0x035702D4 CBZ X0, 0x35702F4
	0x035702D8 LDR X23, [X24]
	0x035702DC MOV X22, X0
	0x035702E0 MOV X1, X23
	0x035702E4 BL 0x1C16E00
	0x035702E8 MOV X1, X0
	0x035702EC CBNZ X0, 0x35702F8
	0x035702F0 B 0x3570324
	0x035702F4 MOV X1, X31
	0x035702F8 MOV X0, X20
	0x035702FC MOV X2, X21
	0x03570300 BL 0x1C24138
	0x03570304 CMP X21, X0
	0x03570308 MOV X21, X0
	0x0357030C B.NE 0x35702C4
	0x03570310 LDP X20, X19, [X31 + 0x30]
	0x03570314 LDP X22, X21, [X31 + 0x20]
	0x03570318 LDP X24, X23, [X31 + 0x10]
	0x0357031C LDR X30, [X31], #0x40
	0x03570320 RET
	0x03570324 MOV X0, X22
	0x03570328 MOV X1, X23
	0x0357032C BL 0x1C171E0
	0x03570330 STP X30, X21, [X31 - 0x20]!
	0x03570334 STP X20, X19, [X31 + 0x10]
	0x03570338 ADRP X20, 0xE6F000
	0x0357033C ADRP X21, 0xB83000
	0x03570340 LDRB W8, [X20 + 0xE51]
	0x03570344 LDR X21, [X21 + 0x598]
	0x03570348 MOV X19, X0
	0x0357034C TBNZ X8, 0x0, 0x3570388
	0x03570350 ADRP X0, 0xB83000
	0x03570354 LDR X0, [X0 + 0x9C8]
	0x03570358 BL 0x1C16CF4
	0x0357035C ADRP X0, 0xB88000
	0x03570360 LDR X0, [X0 + 0x348]
	0x03570364 BL 0x1C16CF4
	0x03570368 ADRP X0, 0xB83000
	0x0357036C LDR X0, [X0 + 0x598]
	0x03570370 BL 0x1C16CF4
	0x03570374 ADRP X0, 0xBC5000
	0x03570378 LDR X0, [X0 + 0xFA0]
	0x0357037C BL 0x1C16CF4
	0x03570380 MOVZ W8, 0x1
	0x03570384 STRB W8, [X20 + 0xE51]
	0x03570388 LDR X0, [X19 + 0x20]
	0x0357038C MOV X1, X31
	0x03570390 BL 0x3BFD4FC
	0x03570394 LDR X0, [X21]
	0x03570398 LDR X20, [X19 + 0x10]
	0x0357039C LDR W8, [X0 + 0xE0]
	0x035703A0 CBNZ W8, 0x35703A8
	0x035703A4 BL 0x1C16DFC
	0x035703A8 MOV X0, X20
	0x035703AC MOV X1, X31
	0x035703B0 MOV X2, X31
	0x035703B4 BL 0x3C354F8
	0x035703B8 TBZ X0, 0x0, 0x35704A4
	0x035703BC LDR X0, [X19 + 0x10]
	0x035703C0 CBZ X0, 0x35704E0
	0x035703C4 MOV X1, X31
	0x035703C8 BL 0x3C32ECC
	0x035703CC LDR X8, [X21]
	0x035703D0 MOV X20, X0
	0x035703D4 LDR W9, [X8 + 0xE0]
	0x035703D8 CBNZ W9, 0x35703E4
	0x035703DC MOV X0, X8
	0x035703E0 BL 0x1C16DFC
	0x035703E4 MOV X0, X20
	0x035703E8 MOV X1, X31
	0x035703EC BL 0x3C394A8
	0x035703F0 ADRP X8, 0xB83000
	0x035703F4 LDR X8, [X8 + 0x9C8]
	0x035703F8 LDR X19, [X19 + 0x28]
	0x035703FC LDR X20, [X8]
	0x03570400 LDR X8, [X20 + 0x38]
	0x03570404 CBNZ X8, 0x3570414
	0x03570408 MOV X0, X20
	0x0357040C BL 0x1C5C6E0
	0x03570410 LDR X8, [X20 + 0x38]
	0x03570414 LDR X0, [X8 + 0x10]
	0x03570418 LDRB W8, [X0 + 0x135]
	0x0357041C TBNZ X8, 0x0, 0x3570424
	0x03570420 BL 0x1C5C684
	0x03570424 LDR W8, [X0 + 0xE0]
	0x03570428 CBNZ W8, 0x3570430
	0x0357042C BL 0x1C16DFC
	0x03570430 LDR X8, [X20 + 0x38]
	0x03570434 LDR X0, [X8 + 0x10]
	0x03570438 LDRB W8, [X0 + 0x135]
	0x0357043C TBNZ X8, 0x0, 0x3570444
	0x03570440 BL 0x1C5C684
	0x03570444 CBZ X19, 0x35704E0
	0x03570448 ADRP X10, 0xB88000
	0x0357044C ADRP X11, 0xBC5000
	0x03570450 LDR X9, [X0 + 0xB8]
	0x03570454 LDR X10, [X10 + 0x348]
	0x03570458 LDR X8, [X19]
	0x0357045C LDR X11, [X11 + 0xFA0]
	0x03570460 LDR X20, [X9]
	0x03570464 LDR X1, [X10]
	0x03570468 LDRH W9, [X8 + 0x12E]
	0x0357046C LDR X21, [X11]
	0x03570470 CBZ X9, 0x3570494
	0x03570474 LDR X10, [X8 + 0xB0]
	0x03570478 ADD X10, X10, 0x8
	0x0357047C LDUR X11, [X10 - 0x8]
	0x03570480 CMP X11, X1
	0x03570484 B.EQ 0x35704B0
	0x03570488 SUBS X9, X9, 0x1
	0x0357048C ADD X10, X10, 0x10
	0x03570490 B.NE 0x357047C
	0x03570494 MOVZ W2, 0x1
	0x03570498 MOV X0, X19
	0x0357049C BL 0x1C5C788
	0x035704A0 B 0x35704C0
	0x035704A4 LDP X20, X19, [X31 + 0x10]
	0x035704A8 LDP X30, X21, [X31], #0x20
	0x035704AC RET
	0x035704B0 LDR W9, [X10]
	0x035704B4 ADD W9, W9, 0x1
	0x035704B8 ADD X8, X8, W9, 0x4, SXTW
	0x035704BC ADD X0, X8, 0x138
	0x035704C0 LDP X5, X4, [X0]
	0x035704C4 MOV X0, X19
	0x035704C8 MOV X3, X20
	0x035704CC LDP X20, X19, [X31 + 0x10]
	0x035704D0 MOVZ W1, 0x3
	0x035704D4 MOV X2, X21
	0x035704D8 LDP X30, X21, [X31], #0x20
	0x035704DC BR X5
	0x035704E0 BL 0x1C16F20
	0x035704E4 LDR X8, [X0 + 0x40]
	0x035704E8 CBZ X8, 0x35704F4
	0x035704EC MOV W0, W31
	0x035704F0 RET
	0x035704F4 LDR W0, [X0 + 0x38]
	0x035704F8 RET
	0x035704FC LDR X8, [X0 + 0x40]
	0x03570500 CBZ X8, 0x357050C
	0x03570504 MOV W0, W31
	0x03570508 RET
	0x0357050C LDR W0, [X0 + 0x3C]
	0x03570510 RET
	0x03570514 LDR X0, [X0 + 0x40]
	0x03570518 RET
	0x0357051C STR X1, [X0 + 0x40]
	0x03570520 RET
	0x03570524 STR X30, [X31 - 0x10]!
	0x03570528 LDR X8, [X0 + 0x10]
	0x0357052C CBZ X8, 0x3570544
	0x03570530 LDR X3, [X8 + 0x18]
	0x03570534 LDR X0, [X8 + 0x40]
	0x03570538 LDR X2, [X8 + 0x28]
	0x0357053C LDR X30, [X31], #0x10
	0x03570540 BR X3
	0x03570544 BL 0x1C16F20
	0x03570548 STR X30, [X31 - 0x40]!
	0x0357054C STP X24, X23, [X31 + 0x10]
	0x03570550 STP X22, X21, [X31 + 0x20]
	0x03570554 STP X20, X19, [X31 + 0x30]
	0x03570558 ADRP X21, 0xE6F000
	0x0357055C LDRB W8, [X21 + 0xE53]
	0x03570560 MOV X19, X1
	0x03570564 MOV X20, X0
	0x03570568 TBNZ X8, 0x0, 0x3570580
	0x0357056C ADRP X0, 0xBC5000
	0x03570570 LDR X0, [X0 + 0xEF8]
	0x03570574 BL 0x1C16CF4
	0x03570578 MOVZ W8, 0x1
	0x0357057C STRB W8, [X21 + 0xE53]
	0x03570580 ADRP X24, 0xBC5000
	0x03570584 LDR X21, [X20 + 0x28]!
	0x03570588 LDR X24, [X24 + 0xEF8]
	0x0357058C MOV X0, X21
	0x03570590 MOV X1, X19
	0x03570594 MOV X2, X31
	0x03570598 BL 0x33C0FDC
	0x0357059C CBZ X0, 0x35705BC
	0x035705A0 LDR X23, [X24]
	0x035705A4 MOV X22, X0
	0x035705A8 MOV X1, X23
	0x035705AC BL 0x1C16E00
	0x035705B0 MOV X1, X0
	0x035705B4 CBNZ X0, 0x35705C0
	0x035705B8 B 0x35705EC

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X24, 0xE71000
	014 Move W8, [X24+3673]
	015 Move X19, X4
	016 Move W21, W3
	017 Move X23, X2
	018 Move X22, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {59}
	024 Move X0, 0xB85000
	025 Move X0, [X0+2416]
	026 Call 0x1C17CF4
	027 Move X0, 0xB85000
	028 Move X0, [X0+2504]
	029 Call 0x1C17CF4
	030 Move X0, 0xB86000
	031 Move X0, [X0+3152]
	032 Call 0x1C17CF4
	033 Move X0, 0xB8A000
	034 Move X0, [X0+840]
	035 Call 0x1C17CF4
	036 Move X0, 0xB85000
	037 Move X0, [X0+1880]
	038 Call 0x1C17CF4
	039 Move X0, 0xB85000
	040 Move X0, [X0+2512]
	041 Call 0x1C17CF4
	042 Move X0, 0xBC7000
	043 Move X0, [X0+3864]
	044 Call 0x1C17CF4
	045 Move X0, 0xBC7000
	046 Move X0, [X0+3872]
	047 Call 0x1C17CF4
	048 Move X0, 0xBC7000
	049 Move X0, [X0+3880]
	050 Call 0x1C17CF4
	051 Move X0, 0xBC7000
	052 Move X0, [X0+3888]
	053 Call 0x1C17CF4
	054 Move X0, 0xBC7000
	055 Move X0, [X0+3896]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X24+3673], W8
	059 Move X0, X31
	060 Move [X31+24], X31
	061 Call Microphone.get_devices
	062 Compare X0, 0
	063 JumpIfEqual {532}
	064 Move W8, [X0+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X0, X23
	067 Move X1, X31
	068 Call String.IsNullOrEmpty, X0
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {84}
	073 Move X0, X31
	074 Call Microphone.get_devices
	075 Move X8, 0xB86000
	076 Move X8, [X8+3152]
	077 Move X1, X23
	078 Move X2, [X8]
	079 Call Enumerable.Contains, X0, X1
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {196}
	084 Move X28, 0xB85000
	085 Move X28, [X28+2512]
	086 Move W1, 2
	087 Move X0, [X28]
	088 Call 0x1C17D6C
	089 Compare X0, 0
	090 JumpIfEqual {532}
	091 Move X24, X0
	092 Compare X23, 0
	093 JumpIfEqual {100}
	094 Move X8, [X24]
	095 Move X0, X23
	096 Move X1, [X8+64]
	097 Call 0x1C17E00
	098 Compare X0, 0
	099 JumpIfEqual {534}
	100 Move W8, [X24+24]
	101 Compare W8, 0
	102 JumpIfEqual {533}
	103 Move [X24+32], X23
	104 Move X27, 0xB85000
	105 Move X27, [X27+1880]
	106 Add X1, X31, 12
	107 Move [X31+12], W21
	108 Move X0, [X27]
	109 Call 0x1C17E04
	110 Move X25, X0
	111 Compare X0, 0
	112 JumpIfEqual {119}
	113 Move X8, [X24]
	114 Move X0, X25
	115 Move X1, [X8+64]
	116 Call 0x1C17E00
	117 Compare X0, 0
	118 JumpIfEqual {534}
	119 Move W8, [X24+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move [X24+40], X25
	122 Compare X20, 0
	123 JumpIfEqual {532}
	124 Move X26, 0xB8A000
	125 Move X8, [X20]
	126 Move X26, [X26+840]
	127 Move X10, 0xBC7000
	128 Move X1, [X26]
	129 Move X10, [X10+3888]
	130 NotImplemented "Instruction LDRH not yet implemented."
	131 Move X25, [X10]
	132 Compare X9, 0
	133 JumpIfEqual {140}
	134 Move X10, [X8+176]
	135 Add X10, X10, 8
	136 NotImplemented "Instruction LDUR not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Subtract X9, X9, 1
	139 Add X10, X10, 16
	140 Move W2, 1
	141 Move X0, X20
	142 Call 0x1C5D788
	143 Move X8, 0xBC6000
	144 Move X8, [X8+3864]
	145 Move X0, X22
	146 Move X2, X31
	147 Move X23, [X8]
	148 Move X1, X23
	149 Call String.Concat, X0, X1
	150 Move X8, 0xB84000
	151 Move X8, [X8+2504]
	152 Move X21, X0
	153 Move X22, [X8]
	154 Move X8, [X22+56]
	155 Compare X8, 0
	156 JumpIfNotEqual {160}
	157 Move X0, X22
	158 Call 0x1C5D6E0
	159 Move X8, [X22+56]
	160 Move X0, [X8+16]
	161 Move W8, [X0+309]
	162 Move TEMP, X8
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfEqual {167}
	166 Call 0x1C5D684
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {171}
	170 Call 0x1C17DFC
	171 Move X8, [X22+56]
	172 Move X0, [X8+16]
	173 Move W8, [X0+309]
	174 Move TEMP, X8
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfEqual {179}
	178 Call 0x1C5D684
	179 Compare X20, 0
	180 JumpIfEqual {532}
	181 Move X10, 0xB89000
	182 Move X9, [X0+184]
	183 Move X8, [X20]
	184 Move X10, [X10+840]
	185 Move X22, [X9]
	186 NotImplemented "Instruction LDRH not yet implemented."
	187 Move X1, [X10]
	188 Compare X9, 0
	189 JumpIfEqual {253}
	190 Move X10, [X8+176]
	191 Add X10, X10, 8
	192 NotImplemented "Instruction LDUR not yet implemented."
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Subtract X9, X9, 1
	195 Add X10, X10, 16
	196 Move X8, 0xBC6000
	197 Move X8, [X8+3880]
	198 Move X1, X23
	199 Move X2, X31
	200 Move X0, [X8]
	201 Call String.Format, X0, X1
	202 Move X23, X0
	203 Move X0, X22
	204 Move X1, X23
	205 Move X2, X31
	206 Call String.Concat, X0, X1
	207 Move X8, 0xB84000
	208 Move X8, [X8+2504]
	209 Move X21, X0
	210 Move X22, [X8]
	211 Move X8, [X22+56]
	212 Compare X8, 0
	213 JumpIfNotEqual {217}
	214 Move X0, X22
	215 Call 0x1C5D6E0
	216 Move X8, [X22+56]
	217 Move X0, [X8+16]
	218 Move W8, [X0+309]
	219 Move TEMP, X8
	220 And TEMP, TEMP, 1
	221 Compare TEMP, 1
	222 JumpIfEqual {224}
	223 Call 0x1C5D684
	224 Move W8, [X0+224]
	225 Compare W8, 0
	226 JumpIfNotEqual {228}
	227 Call 0x1C17DFC
	228 Move X8, [X22+56]
	229 Move X0, [X8+16]
	230 Move W8, [X0+309]
	231 Move TEMP, X8
	232 And TEMP, TEMP, 1
	233 Compare TEMP, 1
	234 JumpIfEqual {236}
	235 Call 0x1C5D684
	236 Compare X20, 0
	237 JumpIfEqual {532}
	238 Move X10, 0xB89000
	239 Move X9, [X0+184]
	240 Move X8, [X20]
	241 Move X10, [X10+840]
	242 Move X22, [X9]
	243 NotImplemented "Instruction LDRH not yet implemented."
	244 Move X1, [X10]
	245 Compare X9, 0
	246 JumpIfEqual {253}
	247 Move X10, [X8+176]
	248 Add X10, X10, 8
	249 NotImplemented "Instruction LDUR not yet implemented."
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Subtract X9, X9, 1
	252 Add X10, X10, 16
	253 Move W2, 1
	254 Move X0, X20
	255 Call 0x1C5D788
	256 Move W9, [X10]
	257 Add W9, W9, 1
	258 Add X8, X8, W9
	259 Add X0, X8, 312
	260 Move X8, [X0]
	261 Move X4, [X0+8]
	262 Move W1, 1
	263 Move X0, X20
	264 Move X2, X21
	265 Move X3, X22
	266 NotImplemented "Instruction BLR not yet implemented."
	267 Move [X19], W31
	268 Move W9, [X10]
	269 Add W9, W9, 1
	270 Add X8, X8, W9
	271 Add X0, X8, 312
	272 Move X8, [X0]
	273 Move X4, [X0+8]
	274 Move W1, 3
	275 Move X0, X20
	276 Move X2, X25
	277 Move X3, X24
	278 NotImplemented "Instruction BLR not yet implemented."
	279 Add X1, X31, 28
	280 Add X2, X31, 24
	281 Move X0, X23
	282 Move X3, X31
	283 Call Microphone.GetDeviceCaps, X0, X1, X2
	284 Move [X19], W21
	285 Move X23, 0xB84000
	286 Move X23, [X23+2416]
	287 Move X0, [X23]
	288 Move W8, [X0+224]
	289 Compare W8, 0
	290 JumpIfNotEqual {292}
	291 Call 0x1C17DFC
	292 Move X0, X31
	293 Call Application.get_platform
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Move X0, [X23]
	296 Move W8, [X0+224]
	297 Compare W8, 0
	298 JumpIfNotEqual {300}
	299 Call 0x1C17DFC
	300 Move X0, X31
	301 Call Application.get_platform
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Move W8, [X31+28]
	304 Move X23, X31
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Move W9, [X31+24]
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Move X10, 0xBC6000
	309 Move X10, [X10+3896]
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Move X0, X22
	312 Move X2, X31
	313 Move X1, [X10]
	314 NotImplemented "Instruction CSEL not yet implemented."
	315 Call String.Concat, X0, X1
	316 Move X8, [X28]
	317 Move X22, X0
	318 Move W1, 4
	319 Move X0, X8
	320 Call 0x1C17D6C
	321 Move X23, X0
	322 Move X0, [X27]
	323 Add X1, X31, 12
	324 Move [X31+12], W21
	325 Call 0x1C17E04
	326 Compare X23, 0
	327 JumpIfEqual {532}
	328 Move X21, X0
	329 Compare X0, 0
	330 JumpIfEqual {337}
	331 Move X8, [X23]
	332 Move X0, X21
	333 Move X1, [X8+64]
	334 Call 0x1C17E00
	335 Compare X0, 0
	336 JumpIfEqual {534}
	337 Move W8, [X23+24]
	338 Compare W8, 0
	339 JumpIfEqual {533}
	340 Move [X23+32], X21
	341 Move W8, [X31+28]
	342 Move X0, [X27]
	343 Add X1, X31, 8
	344 Move [X31+8], W8
	345 Call 0x1C17E04
	346 Move X21, X0
	347 Compare X0, 0
	348 JumpIfEqual {355}
	349 Move X8, [X23]
	350 Move X0, X21
	351 Move X1, [X8+64]
	352 Call 0x1C17E00
	353 Compare X0, 0
	354 JumpIfEqual {534}
	355 Move W8, [X23+24]
	356 NotImplemented "Instruction CMP not yet implemented."
	357 Move [X23+40], X21
	358 Move W8, [X31+24]
	359 Move X0, [X27]
	360 Add X1, X31, 4
	361 Move [X31+4], W8
	362 Call 0x1C17E04
	363 Move X21, X0
	364 Compare X0, 0
	365 JumpIfEqual {372}
	366 Move X8, [X23]
	367 Move X0, X21
	368 Move X1, [X8+64]
	369 Call 0x1C17E00
	370 Compare X0, 0
	371 JumpIfEqual {534}
	372 Move W8, [X23+24]
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Move [X23+48], X21
	375 Move X0, [X27]
	376 Add X1, X31, 0
	377 Move [X31], W24
	378 Call 0x1C17E04
	379 Move X21, X0
	380 Compare X0, 0
	381 JumpIfEqual {388}
	382 Move X8, [X23]
	383 Move X0, X21
	384 Move X1, [X8+64]
	385 Call 0x1C17E00
	386 Compare X0, 0
	387 JumpIfEqual {534}
	388 Move W8, [X23+24]
	389 NotImplemented "Instruction CMP not yet implemented."
	390 Move [X23+56], X21
	391 Move X8, [X20]
	392 Move X1, [X26]
	393 NotImplemented "Instruction LDRH not yet implemented."
	394 Compare X9, 0
	395 JumpIfEqual {402}
	396 Move X10, [X8+176]
	397 Add X10, X10, 8
	398 NotImplemented "Instruction LDUR not yet implemented."
	399 NotImplemented "Instruction CMP not yet implemented."
	400 Subtract X9, X9, 1
	401 Add X10, X10, 16
	402 Move W2, 1
	403 Move X0, X20
	404 Call 0x1C5D788
	405 Move W8, [X31+28]
	406 NotImplemented "Instruction CMP not yet implemented."
	407 Move W8, [X31+24]
	408 Move X23, X31
	409 Compare W8, 0
	410 JumpIfEqual {518}
	411 NotImplemented "Instruction CMP not yet implemented."
	412 Move X8, 0xBC6000
	413 Move X8, [X8+3872]
	414 Move X0, X22
	415 Move X2, X31
	416 Move X1, [X8]
	417 Call String.Concat, X0, X1
	418 Move X8, [X28]
	419 Move X22, X0
	420 Move W1, 3
	421 Move X0, X8
	422 Call 0x1C17D6C
	423 Move X23, X0
	424 Move X0, [X27]
	425 Add X1, X31, 12
	426 Move [X31+12], W21
	427 Call 0x1C17E04
	428 Compare X23, 0
	429 JumpIfEqual {532}
	430 Move X21, X0
	431 Compare X0, 0
	432 JumpIfEqual {439}
	433 Move X8, [X23]
	434 Move X0, X21
	435 Move X1, [X8+64]
	436 Call 0x1C17E00
	437 Compare X0, 0
	438 JumpIfEqual {534}
	439 Move W8, [X23+24]
	440 Compare W8, 0
	441 JumpIfEqual {533}
	442 Move [X23+32], X21
	443 Move W8, [X31+28]
	444 Move X0, [X27]
	445 Add X1, X31, 8
	446 Move [X31+8], W8
	447 Call 0x1C17E04
	448 Move X21, X0
	449 Compare X0, 0
	450 JumpIfEqual {457}
	451 Move X8, [X23]
	452 Move X0, X21
	453 Move X1, [X8+64]
	454 Call 0x1C17E00
	455 Compare X0, 0
	456 JumpIfEqual {534}
	457 Move W8, [X23+24]
	458 NotImplemented "Instruction CMP not yet implemented."
	459 Move [X23+40], X21
	460 Move W8, [X31+24]
	461 Move X0, [X27]
	462 Add X1, X31, 4
	463 Move [X31+4], W8
	464 Call 0x1C17E04
	465 Move X21, X0
	466 Compare X0, 0
	467 JumpIfEqual {474}
	468 Move X8, [X23]
	469 Move X0, X21
	470 Move X1, [X8+64]
	471 Call 0x1C17E00
	472 Compare X0, 0
	473 JumpIfEqual {534}
	474 Move W8, [X23+24]
	475 NotImplemented "Instruction CMP not yet implemented."
	476 Move [X23+48], X21
	477 Move X8, [X20]
	478 Move X1, [X26]
	479 NotImplemented "Instruction LDRH not yet implemented."
	480 Compare X9, 0
	481 JumpIfEqual {488}
	482 Move X10, [X8+176]
	483 Add X10, X10, 8
	484 NotImplemented "Instruction LDUR not yet implemented."
	485 NotImplemented "Instruction CMP not yet implemented."
	486 Subtract X9, X9, 1
	487 Add X10, X10, 16
	488 Move W2, 1
	489 Move X0, X20
	490 Call 0x1C5D788
	491 Move W9, [X10]
	492 Add W9, W9, 1
	493 Add X8, X8, W9
	494 Add X0, X8, 312
	495 Move X8, [X0]
	496 Move X4, [X0+8]
	497 Move W1, 2
	498 Move X0, X20
	499 Move X2, X22
	500 Move X3, X23
	501 NotImplemented "Instruction BLR not yet implemented."
	502 Move X23, X31
	503 Move [X19], W24
	504 Move W9, [X10]
	505 Add W9, W9, 1
	506 Add X8, X8, W9
	507 Add X0, X8, 312
	508 Move X8, [X0]
	509 Move X4, [X0+8]
	510 Move W1, 2
	511 Move X0, X20
	512 Move X2, X22
	513 Move X3, X23
	514 NotImplemented "Instruction BLR not yet implemented."
	515 Move W8, [X31+24]
	516 Move X23, X31
	517 Move [X19], W8
	518 Move X0, X23
	519 Move X20, [X31+96]
	520 Move X19, [X31+104]
	521 Move X22, [X31+80]
	522 Move X21, [X31+88]
	523 Move X24, [X31+64]
	524 Move X23, [X31+72]
	525 Move X26, [X31+48]
	526 Move X25, [X31+56]
	527 Move X28, [X31+32]
	528 Move X27, [X31+40]
	529 Move X30, [X31+16]
	530 Add X31, X31, 112
	531 Return X0
	532 Call 0x1C17F20
	533 Call 0x1C17F28
	534 Call 0x1C17F44
	535 Move X1, X31
	536 Call 0x1C17DEC

