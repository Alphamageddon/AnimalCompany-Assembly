Type: Photon.Voice.Unity.UnityAudioOut

Method: System.Void .ctor(UnityEngine.AudioSource audioSource, Photon.Voice.AudioOutDelayControl/PlayDelayConfig playDelayConfig, Photon.Voice.ILogger logger, System.String logPrefix, System.Boolean debugInfo)

Disassembly:
	0x03571724 LDR X1, [X8 + 0x40]
	0x03571728 BL 0x1C16E00
	0x0357172C CBZ X0, 0x3571904
	0x03571730 LDR W8, [X21 + 0x18]
	0x03571734 CBZ W8, 0x3571900
	0x03571738 STR X23, [X21 + 0x20]
	0x0357173C CBZ X22, 0x3571758
	0x03571740 LDR X8, [X21]
	0x03571744 MOV X0, X22
	0x03571748 LDR X1, [X8 + 0x40]
	0x0357174C BL 0x1C16E00
	0x03571750 CBZ X0, 0x3571904
	0x03571754 LDR W8, [X21 + 0x18]
	0x03571758 CMP W8, 0x1
	0x0357175C B.LS 0x3571900
	0x03571760 STR X22, [X21 + 0x28]
	0x03571764 CBZ X20, 0x35718FC
	0x03571768 ADRP X23, 0xB87000
	0x0357176C LDR X8, [X20]
	0x03571770 LDR X23, [X23 + 0x348]
	0x03571774 ADRP X10, 0xBC5000
	0x03571778 LDR X1, [X23]
	0x0357177C LDR X10, [X10 + 0x48]
	0x03571780 LDRH W9, [X8 + 0x12E]
	0x03571784 LDR X22, [X10]
	0x03571788 CBZ X9, 0x35717AC
	0x0357178C LDR X10, [X8 + 0xB0]
	0x03571790 ADD X10, X10, 0x8
	0x03571794 LDUR X11, [X10 - 0x8]
	0x03571798 CMP X11, X1
	0x0357179C B.EQ 0x35717D0
	0x035717A0 SUBS X9, X9, 0x1
	0x035717A4 ADD X10, X10, 0x10
	0x035717A8 B.NE 0x3571794
	0x035717AC MOVZ W2, 0x1
	0x035717B0 MOV X0, X20
	0x035717B4 BL 0x1C5C788
	0x035717B8 B 0x35717E0
	0x035717BC MOV X0, X19
	0x035717C0 LDP X20, X19, [X31 + 0x20]
	0x035717C4 LDP X22, X21, [X31 + 0x10]
	0x035717C8 LDP X30, X23, [X31], #0x30
	0x035717CC B 0x35727FC
	0x035717D0 LDR W9, [X10]
	0x035717D4 ADD W9, W9, 0x1
	0x035717D8 ADD X8, X8, W9, 0x4, SXTW
	0x035717DC ADD X0, X8, 0x138
	0x035717E0 LDP X8, X4, [X0]
	0x035717E4 MOVZ W1, 0x2
	0x035717E8 MOV X0, X20
	0x035717EC MOV X2, X22
	0x035717F0 MOV X3, X21
	0x035717F4 BLR X8
	0x035717F8 LDR X0, [X19 + 0x48]
	0x035717FC CBZ X0, 0x35718FC
	0x03571800 MOV W1, W31
	0x03571804 MOV W2, W31
	0x03571808 MOV X3, X31
	0x0357180C BL 0x353BCD4
	0x03571810 TBNZ X0, 0x0, 0x35715E4
	0x03571814 LDR X9, [X19 + 0x40]
	0x03571818 CBZ X9, 0x35718FC
	0x0357181C ADRP X8, 0xB82000
	0x03571820 LDR X8, [X8 + 0x9C8]
	0x03571824 LDR X19, [X9 + 0x18]
	0x03571828 LDR X20, [X8]
	0x0357182C LDR X8, [X20 + 0x38]
	0x03571830 CBNZ X8, 0x3571840
	0x03571834 MOV X0, X20
	0x03571838 BL 0x1C5C6E0
	0x0357183C LDR X8, [X20 + 0x38]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X28, 0xE6F000
	013 Move X27, 0xB83000
	014 Move X26, 0xBC5000
	015 Move W8, [X28+3670]
	016 Move X27, [X27+2440]
	017 Move X26, [X26+4008]
	018 Move W23, W6
	019 Move X25, X5
	020 Move X21, X4
	021 Move X22, X3
	022 Move X24, X2
	023 Move X19, X1
	024 Move X20, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {43}
	029 Move X0, 0xBC5000
	030 Move X0, [X0+4016]
	031 Call 0x1C17CF4
	032 Move X0, 0xB83000
	033 Move X0, [X0+3544]
	034 Call 0x1C17CF4
	035 Move X0, 0xBC5000
	036 Move X0, [X0+4008]
	037 Call 0x1C17CF4
	038 Move X0, 0xB83000
	039 Move X0, [X0+2440]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X28+3670], W8
	043 Move X1, [X27]
	044 Move X28, 0xBC5000
	045 Move X28, [X28+4016]
	046 Move X0, X25
	047 Move X2, X31
	048 Call String.op_Equality, X0, X1
	049 Move X26, [X26]
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {55}
	054 Move X1, [X27]
	055 Move X8, 0xB83000
	056 Move X8, [X8+3544]
	057 Move X1, X25
	058 Move X2, X31
	059 Move X0, [X8]
	060 Call String.Concat, X0, X1
	061 Move X1, X0
	062 Move X0, X26
	063 Move X2, X31
	064 Call String.Concat, X0, X1
	065 Move X7, [X28]
	066 Move X5, X0
	067 And W6, W23, 1
	068 Move W1, 1
	069 Move X0, X20
	070 Move X2, X24
	071 Move X3, X22
	072 Move X4, X21
	073 Call 0x263ECE4, X0, X1, X2, X3, X4, X5
	074 Move [X20+176], X19
	075 Move X20, [X31+80]
	076 Move X19, [X31+88]
	077 Move X22, [X31+64]
	078 Move X21, [X31+72]
	079 Move X24, [X31+48]
	080 Move X23, [X31+56]
	081 Move X26, [X31+32]
	082 Move X25, [X31+40]
	083 Move X28, [X31+16]
	084 Move X27, [X31+24]
	085 Move X30, [X31+96]
	086 Return 

Method: System.Int64 get_OutPos()

Disassembly:
	0x03571840 LDR X0, [X8 + 0x10]
	0x03571844 LDRB W8, [X0 + 0x135]
	0x03571848 TBNZ X8, 0x0, 0x3571850
	0x0357184C BL 0x1C5C684
	0x03571850 LDR W8, [X0 + 0xE0]
	0x03571854 CBNZ W8, 0x357185C
	0x03571858 BL 0x1C16DFC
	0x0357185C LDR X8, [X20 + 0x38]
	0x03571860 LDR X0, [X8 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+176]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X1, X31
	006 Call AudioSource.get_timeSamples, X0
	007 Move X0, W0
	008 Move X30, [X31+16]
	009 Return X0
	010 Call 0x1C17F20

Method: System.Void OutCreate(System.Int32 frequency, System.Int32 channels, System.Int32 bufferSamples)

Disassembly:
	0x03571864 LDRB W8, [X0 + 0x135]
	0x03571868 TBNZ X8, 0x0, 0x3571870
	0x0357186C BL 0x1C5C684
	0x03571870 CBZ X19, 0x35718FC
	0x03571874 ADRP X10, 0xBC5000
	0x03571878 LDR X9, [X0 + 0xB8]
	0x0357187C LDR X8, [X19]
	0x03571880 LDR X1, [X23]
	0x03571884 LDR X10, [X10 + 0x40]
	0x03571888 LDR X20, [X9]
	0x0357188C LDRH W9, [X8 + 0x12E]
	0x03571890 LDR X21, [X10]
	0x03571894 CBZ X9, 0x35718B8
	0x03571898 LDR X10, [X8 + 0xB0]
	0x0357189C ADD X10, X10, 0x8
	0x035718A0 LDUR X11, [X10 - 0x8]
	0x035718A4 CMP X11, X1
	0x035718A8 B.EQ 0x35718C8
	0x035718AC SUBS X9, X9, 0x1
	0x035718B0 ADD X10, X10, 0x10
	0x035718B4 B.NE 0x35718A0
	0x035718B8 MOVZ W2, 0x1
	0x035718BC MOV X0, X19
	0x035718C0 BL 0x1C5C788
	0x035718C4 B 0x35718D8
	0x035718C8 LDR W9, [X10]
	0x035718CC ADD W9, W9, 0x1
	0x035718D0 ADD X8, X8, W9, 0x4, SXTW
	0x035718D4 ADD X0, X8, 0x138
	0x035718D8 LDP X5, X4, [X0]
	0x035718DC MOV X0, X19
	0x035718E0 MOV X2, X21
	0x035718E4 MOV X3, X20
	0x035718E8 LDP X20, X19, [X31 + 0x20]
	0x035718EC LDP X22, X21, [X31 + 0x10]
	0x035718F0 MOVZ W1, 0x1
	0x035718F4 LDP X30, X23, [X31], #0x30
	0x035718F8 BR X5
	0x035718FC BL 0x1C16F20
	0x03571900 BL 0x1C16F28

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xE6F000
	008 Move W8, [X23+3671]
	009 Move W22, W3
	010 Move W21, W2
	011 Move W20, W1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xBC5000
	018 Move X0, [X0+4024]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+3671], W8
	022 Move X0, [X19+176]
	023 Compare X0, 0
	024 JumpIfEqual {52}
	025 Move X23, 0xBC5000
	026 Move X23, [X23+4024]
	027 Move W1, 1
	028 Move X2, X31
	029 Call AudioSource.set_loop, X0, X1
	030 Move X0, [X23]
	031 Move W1, W22
	032 Move W2, W21
	033 Move W3, W20
	034 Move W4, W31
	035 Move X5, X31
	036 Call AudioClip.Create, X0, X1, X2, X3, X4
	037 Move X8, [X19+176]
	038 Move [X19+184], X0
	039 Compare X8, 0
	040 JumpIfEqual {52}
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X1, X0
	046 Move X0, X8
	047 Move X2, X31
	048 Move X30, [X31+48]
	049 Move X23, [X31+56]
	050 Call AudioSource.set_clip, X0, X1
	051 Return 
	052 Call 0x1C17F20

Method: System.Void OutStart()

Disassembly:
	0x03571904 BL 0x1C16F44
	0x03571908 MOV X1, X31
	0x0357190C BL 0x1C16DEC
	0x03571910 B 0x3571914
	0x03571914 STR X30, [X31 - 0x30]!
	0x03571918 STP X22, X21, [X31 + 0x10]
	0x0357191C STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+176]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call AudioSource.Play, X0
	008 Return 
	009 Call 0x1C17F20

Method: System.Void OutWrite(System.Single[] data, System.Int32 offsetSamples)

Disassembly:
	0x03571920 ADRP X20, 0xE6E000
	0x03571924 ADRP X21, 0xBC3000
	0x03571928 LDRB W8, [X20 + 0xEBA]
	0x0357192C LDR X21, [X21 + 0xBD8]
	0x03571930 MOV X19, X0
	0x03571934 TBNZ X8, 0x0, 0x3571958
	0x03571938 ADRP X0, 0xB8A000

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+184]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X3, X31
	006 Move X30, [X31+16]
	007 Call AudioClip.SetData, X0, X1, X2
	008 Return 
	009 Call 0x1C17F20

Method: System.Void Stop()

Disassembly:
	0x0357193C LDR X0, [X0 + 0xF70]
	0x03571940 BL 0x1C16CF4
	0x03571944 ADRP X0, 0xBC3000
	0x03571948 LDR X0, [X0 + 0xBD8]
	0x0357194C BL 0x1C16CF4
	0x03571950 MOVZ W8, 0x1
	0x03571954 STRB W8, [X20 + 0xEBA]
	0x03571958 LDR X0, [X21]
	0x0357195C LDR X20, [X19 + 0x48]
	0x03571960 BL 0x1C16F10
	0x03571964 LDR X8, [X19]
	0x03571968 MOV X1, X19
	0x0357196C MOV X3, X31
	0x03571970 MOV X21, X0
	0x03571974 LDR X2, [X8 + 0x200]
	0x03571978 BL 0x2A76254
	0x0357197C CBZ X20, 0x3571A3C
	0x03571980 ADRP X22, 0xB8A000
	0x03571984 LDR X22, [X22 + 0xF70]
	0x03571988 MOV X0, X20
	0x0357198C MOV X1, X21
	0x03571990 MOV X2, X31
	0x03571994 BL 0x3538B30
	0x03571998 LDR X0, [X22]
	0x0357199C LDR X20, [X19 + 0x48]
	0x035719A0 BL 0x1C16F10
	0x035719A4 LDR X8, [X19]
	0x035719A8 MOV X1, X19
	0x035719AC MOV X3, X31
	0x035719B0 MOV X21, X0
	0x035719B4 LDR X2, [X8 + 0x210]
	0x035719B8 BL 0x2A6B948
	0x035719BC CBZ X20, 0x3571A3C
	0x035719C0 MOV X0, X20
	0x035719C4 MOV X1, X21
	0x035719C8 MOV X2, X31
	0x035719CC BL 0x3538DF0
	0x035719D0 LDR X0, [X19 + 0x48]
	0x035719D4 CBZ X0, 0x3571A3C
	0x035719D8 MOVZ W1, 0x11
	0x035719DC MOV X2, X31
	0x035719E0 BL 0x35353A0
	0x035719E4 LDR X0, [X19 + 0x48]
	0x035719E8 CBZ X0, 0x3571A3C
	0x035719EC LDR X8, [X0 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE6F000
	006 Move X21, 0xBC5000
	007 Move W8, [X20+3672]
	008 Move X21, [X21+4032]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xBC5000
	015 Move X0, [X0+4032]
	016 Call 0x1C17CF4
	017 Move X0, 0xB83000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3672], W8
	022 Move X1, [X21]
	023 Move X0, X19
	024 Call 0x2640AAC, X0
	025 Move X0, [X19+176]
	026 Compare X0, 0
	027 JumpIfEqual {58}
	028 Move X20, 0xB83000
	029 Move X20, [X20+1432]
	030 Move X1, X31
	031 Call AudioSource.Stop, X0
	032 Move X0, [X20]
	033 Move X20, [X19+176]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X20
	039 Move X1, X31
	040 Move X2, X31
	041 Call Object.op_Inequality, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {53}
	046 Move X0, [X19+176]
	047 Compare X0, 0
	048 JumpIfEqual {58}
	049 Move X1, X31
	050 Move X2, X31
	051 Call AudioSource.set_clip, X0, X1
	052 Move [X19+184], X31
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Return 
	058 Call 0x1C17F20

