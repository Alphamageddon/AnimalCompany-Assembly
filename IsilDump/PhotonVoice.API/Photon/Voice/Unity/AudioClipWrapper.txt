Type: Photon.Voice.Unity.AudioClipWrapper

Method: System.Boolean get_Loop()

Disassembly:
	0x0356F378 BL 0x1C16E00
	0x0356F37C CBZ X0, 0x356F5B0

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_Loop(System.Boolean value)

Disassembly:
	0x0356F380 LDR W8, [X23 + 0x18]
	0x0356F384 CMP W8, 0x3
	0x0356F388 B.LS 0x356F5AC

ISIL:
	001 And W8, W1, 1
	002 Move [X0+32], W8
	003 Return 

Method: System.Void .ctor(UnityEngine.AudioClip audioClip)

Disassembly:
	0x0356F38C STR X21, [X23 + 0x38]
	0x0356F390 LDR X8, [X20]
	0x0356F394 LDR X1, [X26]
	0x0356F398 LDRH W9, [X8 + 0x12E]
	0x0356F39C CBZ X9, 0x356F3C0
	0x0356F3A0 LDR X10, [X8 + 0xB0]
	0x0356F3A4 ADD X10, X10, 0x8
	0x0356F3A8 LDUR X11, [X10 - 0x8]
	0x0356F3AC CMP X11, X1
	0x0356F3B0 B.EQ 0x356F51C
	0x0356F3B4 SUBS X9, X9, 0x1
	0x0356F3B8 ADD X10, X10, 0x10
	0x0356F3BC B.NE 0x356F3A8
	0x0356F3C0 MOVZ W2, 0x1
	0x0356F3C4 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move W8, 1
	006 Move X1, X31
	007 Move X20, X0
	008 Move [X0+33], W8
	009 Call Object..ctor, X0
	010 Move X0, X31
	011 Move [X20+16], X19
	012 Call Time.get_time
	013 Move [X20+28], S0
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Return 

Method: System.Boolean Read(System.Single[] buffer)

Disassembly:
	0x0356F3C8 BL 0x1C5C788
	0x0356F3CC B 0x356F52C
	0x0356F3D0 LDR W8, [X31 + 0x1C]
	0x0356F3D4 CMP W8, W21
	0x0356F3D8 B.GT 0x356F3F0
	0x0356F3DC LDR W8, [X31 + 0x18]
	0x0356F3E0 MOV X23, X31
	0x0356F3E4 CBZ W8, 0x356F584
	0x0356F3E8 CMP W8, W21
	0x0356F3EC B.GE 0x356F584
	0x0356F3F0 ADRP X8, 0xBC6000
	0x0356F3F4 LDR X8, [X8 + 0xF20]
	0x0356F3F8 MOV X0, X22
	0x0356F3FC MOV X2, X31
	0x0356F400 LDR X1, [X8]
	0x0356F404 BL 0x321B938
	0x0356F408 LDR X8, [X28]
	0x0356F40C MOV X22, X0
	0x0356F410 MOVZ W1, 0x3
	0x0356F414 MOV X0, X8
	0x0356F418 BL 0x1C16D6C
	0x0356F41C MOV X23, X0
	0x0356F420 LDR X0, [X27]
	0x0356F424 ADD X1, X31, 0xC
	0x0356F428 STR W21, [X31 + 0xC]
	0x0356F42C BL 0x1C16E04
	0x0356F430 CBZ X23, 0x356F5A8
	0x0356F434 MOV X21, X0
	0x0356F438 CBZ X0, 0x356F450
	0x0356F43C LDR X8, [X23]
	0x0356F440 MOV X0, X21
	0x0356F444 LDR X1, [X8 + 0x40]
	0x0356F448 BL 0x1C16E00
	0x0356F44C CBZ X0, 0x356F5B0
	0x0356F450 LDR W8, [X23 + 0x18]
	0x0356F454 CBZ W8, 0x356F5AC
	0x0356F458 STR X21, [X23 + 0x20]
	0x0356F45C LDR W8, [X31 + 0x1C]
	0x0356F460 LDR X0, [X27]
	0x0356F464 ADD X1, X31, 0x8
	0x0356F468 STR W8, [X31 + 0x8]
	0x0356F46C BL 0x1C16E04
	0x0356F470 MOV X21, X0
	0x0356F474 CBZ X0, 0x356F48C
	0x0356F478 LDR X8, [X23]
	0x0356F47C MOV X0, X21
	0x0356F480 LDR X1, [X8 + 0x40]
	0x0356F484 BL 0x1C16E00
	0x0356F488 CBZ X0, 0x356F5B0
	0x0356F48C LDR W8, [X23 + 0x18]
	0x0356F490 CMP W8, 0x1
	0x0356F494 B.LS 0x356F5AC
	0x0356F498 STR X21, [X23 + 0x28]
	0x0356F49C LDR W8, [X31 + 0x18]
	0x0356F4A0 LDR X0, [X27]
	0x0356F4A4 ADD X1, X31, 0x4
	0x0356F4A8 STR W8, [X31 + 0x4]
	0x0356F4AC BL 0x1C16E04
	0x0356F4B0 MOV X21, X0
	0x0356F4B4 CBZ X0, 0x356F4CC
	0x0356F4B8 LDR X8, [X23]
	0x0356F4BC MOV X0, X21
	0x0356F4C0 LDR X1, [X8 + 0x40]
	0x0356F4C4 BL 0x1C16E00
	0x0356F4C8 CBZ X0, 0x356F5B0
	0x0356F4CC LDR W8, [X23 + 0x18]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W8, [X0+33]
	008 Compare W8, 0
	009 JumpIfEqual {65}
	010 Move X19, X0
	011 Move X0, X31
	012 Move X20, X1
	013 Call Time.get_time
	014 Move X0, [X19+16]
	015 Compare X0, 0
	016 JumpIfEqual {75}
	017 Move V9, [X19+28]
	018 Move X1, X31
	019 Move V8, V0
	020 Call AudioClip.get_frequency, X0
	021 Compare X20, 0
	022 JumpIfEqual {75}
	023 Move W21, W0
	024 Move X0, [X19+16]
	025 Compare X0, 0
	026 JumpIfEqual {75}
	027 Move X1, X31
	028 Call AudioClip.get_channels, X0
	029 Move W8, [X20+24]
	030 Move W2, [X19+24]
	031 Subtract S0, S8, S9
	032 NotImplemented "Instruction SCVTF not yet implemented."
	033 Move W9, 0x7F800000
	034 Multiply S0, S0, S1
	035 Move S1, W9
	036 Move W10, 0x80000000
	037 NotImplemented "Instruction FCVTZS not yet implemented."
	038 NotImplemented "Instruction FCMP not yet implemented."
	039 NotImplemented "Instruction SDIV not yet implemented."
	040 NotImplemented "Instruction CSEL not yet implemented."
	041 Add W9, W2, W21
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, [X19+16]
	044 Compare X0, 0
	045 JumpIfEqual {75}
	046 Move X1, X20
	047 Move X3, X31
	048 Call AudioClip.GetData, X0, X1, X2
	049 Move W8, [X19+24]
	050 Move X0, [X19+16]
	051 Add W20, W8, W21
	052 Move [X19+24], W20
	053 Compare X0, 0
	054 JumpIfEqual {75}
	055 Move X1, X31
	056 Call AudioClip.get_samples, X0
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move W8, [X19+32]
	059 Compare W8, 0
	060 JumpIfEqual {66}
	061 Move X0, X31
	062 Move [X19+24], W31
	063 Call Time.get_time
	064 Move [X19+28], S0
	065 Move W0, W31
	066 Move [X19+33], W31
	067 Move W0, 1
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X30, [X31+16]
	071 Move X21, [X31+24]
	072 Move D9, [X31+48]
	073 Move D8, [X31+56]
	074 Return X0
	075 Call 0x1C17F20

Method: System.Int32 get_SamplingRate()

Disassembly:
	0x0356F4D0 CMP W8, 0x2
	0x0356F4D4 B.LS 0x356F5AC
	0x0356F4D8 STR X21, [X23 + 0x30]
	0x0356F4DC LDR X8, [X20]
	0x0356F4E0 LDR X1, [X26]
	0x0356F4E4 LDRH W9, [X8 + 0x12E]
	0x0356F4E8 CBZ X9, 0x356F50C

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call AudioClip.get_frequency, X0
	008 Return X0
	009 Call 0x1C17F20

Method: System.Int32 get_Channels()

Disassembly:
	0x0356F4EC LDR X10, [X8 + 0xB0]
	0x0356F4F0 ADD X10, X10, 0x8
	0x0356F4F4 LDUR X11, [X10 - 0x8]
	0x0356F4F8 CMP X11, X1
	0x0356F4FC B.EQ 0x356F550
	0x0356F500 SUBS X9, X9, 0x1
	0x0356F504 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call AudioClip.get_channels, X0
	008 Return X0
	009 Call 0x1C17F20

Method: System.String get_Error()

Disassembly:
	0x0356F508 B.NE 0x356F4F4
	0x0356F50C MOVZ W2, 0x1

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_Error(System.String value)

Disassembly:
	0x0356F510 MOV X0, X20
	0x0356F514 BL 0x1C5C788

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.Void Dispose()

Disassembly:
	0x0356F518 B 0x356F560

ISIL:
	001 Return 

