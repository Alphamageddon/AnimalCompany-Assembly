Type: Photon.Voice.LocalVoiceAudio`1

Method: Photon.Voice.LocalVoiceAudio`1<T> Create(Photon.Voice.VoiceClient voiceClient, System.Byte voiceId, Photon.Voice.VoiceInfo voiceInfo, Photon.Voice.IAudioDesc audioSourceDesc, System.Int32 channelId, Photon.Voice.VoiceCreateOptions options = null)

Disassembly:
	0x03190E7C LDR X24, [X19 + 0x150]
	0x03190E80 LDR X22, [X19 + 0x160]
	0x03190E84 LDR X8, [X8 + 0xC0]
	0x03190E88 LDR W21, [X19 + 0x4C]
	0x03190E8C LDR W23, [X19 + 0x168]
	0x03190E90 MOV X20, X1
	0x03190E94 LDR X0, [X8 + 0x20]
	0x03190E98 LDRB W8, [X0 + 0x135]
	0x03190E9C TBNZ X8, 0x0, 0x3190EA4
	0x03190EA0 BL 0x1C5C684
	0x03190EA4 BL 0x1C16F10
	0x03190EA8 LDR X8, [X20 + 0x20]
	0x03190EAC MOV X1, X24
	0x03190EB0 MOV X2, X22
	0x03190EB4 MOV W3, W21
	0x03190EB8 LDR X8, [X8 + 0xC0]
	0x03190EBC MOV W4, W23
	0x03190EC0 MOV X25, X0
	0x03190EC4 LDR X5, [X8 + 0x48]
	0x03190EC8 LDR X8, [X5]
	0x03190ECC BLR X8
	0x03190ED0 STR X25, [X19 + 0x158]
	0x03190ED4 LDR X8, [X20 + 0x20]
	0x03190ED8 LDR X8, [X8 + 0xC0]
	0x03190EDC LDR X0, [X8 + 0x50]
	0x03190EE0 LDRB W8, [X0 + 0x135]
	0x03190EE4 TBNZ X8, 0x0, 0x3190EEC
	0x03190EE8 BL 0x1C5C684
	0x03190EEC MOVZ W1, 0x3
	0x03190EF0 BL 0x1C16D6C
	0x03190EF4 CBZ X0, 0x3190FB8
	0x03190EF8 LDR X22, [X19 + 0x160]
	0x03190EFC MOV X21, X0
	0x03190F00 CBZ X22, 0x3190F18
	0x03190F04 LDR X8, [X21]
	0x03190F08 MOV X0, X22
	0x03190F0C LDR X1, [X8 + 0x40]
	0x03190F10 BL 0x1C16E00
	0x03190F14 CBZ X0, 0x3190FAC
	0x03190F18 LDR W8, [X21 + 0x18]
	0x03190F1C CBZ W8, 0x3190FA8
	0x03190F20 STR X22, [X21 + 0x20]
	0x03190F24 LDR X22, [X19 + 0x158]
	0x03190F28 CBZ X22, 0x3190F44
	0x03190F2C LDR X8, [X21]
	0x03190F30 MOV X0, X22
	0x03190F34 LDR X1, [X8 + 0x40]
	0x03190F38 BL 0x1C16E00
	0x03190F3C CBZ X0, 0x3190FAC
	0x03190F40 LDR W8, [X21 + 0x18]
	0x03190F44 CMP W8, 0x1
	0x03190F48 B.LS 0x3190FA8
	0x03190F4C STR X22, [X21 + 0x28]
	0x03190F50 LDR X22, [X19 + 0x150]
	0x03190F54 CBZ X22, 0x3190F70
	0x03190F58 LDR X8, [X21]
	0x03190F5C MOV X0, X22
	0x03190F60 LDR X1, [X8 + 0x40]
	0x03190F64 BL 0x1C16E00
	0x03190F68 CBZ X0, 0x3190FAC
	0x03190F6C LDR W8, [X21 + 0x18]
	0x03190F70 CMP W8, 0x2
	0x03190F74 B.LS 0x3190FA8
	0x03190F78 STR X22, [X21 + 0x30]
	0x03190F7C LDR X8, [X20 + 0x20]
	0x03190F80 MOV X0, X19
	0x03190F84 MOV X1, X21
	0x03190F88 LDP X20, X19, [X31 + 0x30]
	0x03190F8C LDR X8, [X8 + 0xC0]
	0x03190F90 LDP X22, X21, [X31 + 0x20]
	0x03190F94 LDP X24, X23, [X31 + 0x10]
	0x03190F98 LDR X2, [X8 + 0x58]
	0x03190F9C LDR X3, [X2]
	0x03190FA0 LDP X30, X25, [X31], #0x40
	0x03190FA4 BR X3
	0x03190FA8 BL 0x1C16F28
	0x03190FAC BL 0x1C16F44
	0x03190FB0 MOV X1, X31
	0x03190FB4 BL 0x1C16DEC
	0x03190FB8 BL 0x1C16F20
	0x03190FBC STR X30, [X31 - 0x40]!
	0x03190FC0 STP X24, X23, [X31 + 0x10]
	0x03190FC4 STP X22, X21, [X31 + 0x20]
	0x03190FC8 STP X20, X19, [X31 + 0x30]
	0x03190FCC MOV X19, X1
	0x03190FD0 CMP W2, W3
	0x03190FD4 B.GE 0x3191098
	0x03190FD8 MOV X20, X4
	0x03190FDC MOV W21, W3
	0x03190FE0 MOV W22, W2
	0x03190FE4 MOV X23, X0
	0x03190FE8 LDR X0, [X23 + 0x118]
	0x03190FEC CBZ X0, 0x31910B0
	0x03190FF0 LDR X8, [X20 + 0x20]
	0x03190FF4 MOV W1, W22
	0x03190FF8 LDR X8, [X8 + 0xC0]
	0x03190FFC LDR X2, [X8 + 0x10]
	0x03191000 BL 0x301BCCC
	0x03191004 CBZ X0, 0x31910B0
	0x03191008 LDR X8, [X20 + 0x20]
	0x0319100C MOV X24, X0
	0x03191010 LDR X8, [X8 + 0xC0]
	0x03191014 LDR X1, [X8 + 0x18]
	0x03191018 LDRB W8, [X1 + 0x135]
	0x0319101C TBNZ X8, 0x0, 0x319102C
	0x03191020 MOV X0, X1
	0x03191024 BL 0x1C5C684
	0x03191028 MOV X1, X0
	0x0319102C LDR X8, [X24]
	0x03191030 LDRH W9, [X8 + 0x12E]
	0x03191034 CBZ X9, 0x3191058
	0x03191038 LDR X10, [X8 + 0xB0]
	0x0319103C ADD X10, X10, 0x8
	0x03191040 LDUR X11, [X10 - 0x8]
	0x03191044 CMP X11, X1
	0x03191048 B.EQ 0x3191068
	0x0319104C SUBS X9, X9, 0x1
	0x03191050 ADD X10, X10, 0x10
	0x03191054 B.NE 0x3191040
	0x03191058 MOV X0, X24
	0x0319105C MOV W2, W31
	0x03191060 BL 0x1C5C788
	0x03191064 B 0x3191074
	0x03191068 LDRSW X9, [X10]
	0x0319106C ADD X8, X8, X9, 0x4, LSL
	0x03191070 ADD X0, X8, 0x138
	0x03191074 LDP X8, X2, [X0]
	0x03191078 MOV X0, X24
	0x0319107C MOV X1, X19
	0x03191080 BLR X8
	0x03191084 MOV X19, X0
	0x03191088 CBZ X0, 0x3191098
	0x0319108C ADD W22, W22, 0x1
	0x03191090 CMP W22, W21
	0x03191094 B.NE 0x3190FE8
	0x03191098 MOV X0, X19
	0x0319109C LDP X20, X19, [X31 + 0x30]
	0x031910A0 LDP X22, X21, [X31 + 0x20]
	0x031910A4 LDP X24, X23, [X31 + 0x10]
	0x031910A8 LDR X30, [X31], #0x40
	0x031910AC RET
	0x031910B0 BL 0x1C16F20
	0x031910B4 STR X30, [X31 - 0x40]!
	0x031910B8 STP X24, X23, [X31 + 0x10]
	0x031910BC STP X22, X21, [X31 + 0x20]
	0x031910C0 STP X20, X19, [X31 + 0x30]
	0x031910C4 LDR X19, [X0 + 0xB8]
	0x031910C8 MOV X20, X2
	0x031910CC MOV X21, X1
	0x031910D0 MOV X22, X0
	0x031910D4 STRB W31, [X31 + 0xC]
	0x031910D8 ADD X1, X31, 0xC
	0x031910DC MOV X0, X19
	0x031910E0 MOV X2, X31
	0x031910E4 BL 0x33DE64C
	0x031910E8 CBZ X21, 0x31911C0
	0x031910EC LDR X8, [X21 + 0x18]
	0x031910F0 CMP W8, 0x1
	0x031910F4 B.LT 0x319117C
	0x031910F8 MOV X23, X31
	0x031910FC AND X8, X8, 0x0
	0x03191100 ADD X24, X21, 0x20
	0x03191104 CMP X23, W8, UXTW
	0x03191108 B.CS 0x31911B4
	0x0319110C LDR X0, [X22 + 0x118]
	0x03191110 CBZ X0, 0x31911AC
	0x03191114 LDR X8, [X20 + 0x20]
	0x03191118 LDR W10, [X0 + 0x1C]
	0x0319111C LDR X1, [X24, X23, LSL #3]
	0x03191120 LDR X9, [X8 + 0xC0]
	0x03191124 LDR X8, [X0 + 0x10]
	0x03191128 ADD W10, W10, 0x1
	0x0319112C LDR X9, [X9 + 0x38]
	0x03191130 STR W10, [X0 + 0x1C]
	0x03191134 CBZ X8, 0x31911B0
	0x03191138 LDRSW X10, [X0 + 0x18]
	0x0319113C LDR W11, [X8 + 0x18]
	0x03191140 CMP W10, W11
	0x03191144 B.CS 0x319115C
	0x03191148 ADD W9, W10, 0x1

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+160], X30
	003 Move [X31+176], X28
	004 Move [X31+184], X27
	005 Move [X31+192], X26
	006 Move [X31+200], X25
	007 Move [X31+208], X24
	008 Move [X31+216], X23
	009 Move [X31+224], X22
	010 Move [X31+232], X21
	011 Move [X31+240], X20
	012 Move [X31+248], X19
	013 Move X26, 0x124C000
	014 Move W8, [X26+3563]
	015 Move X19, X6
	016 Move X24, X5
	017 Move W20, W4
	018 Move X21, X3
	019 Move X25, X2
	020 Move W22, W1
	021 Move X23, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {43}
	026 Move X0, 0xF8B000
	027 Move X0, [X0+3448]
	028 Call 0x1C17CF4
	029 Move X0, 0xF90000
	030 Move X0, [X0+352]
	031 Call 0x1C17CF4
	032 Move X0, 0xF90000
	033 Move X0, [X0+360]
	034 Call 0x1C17CF4
	035 Move X0, 0xF8C000
	036 Move X0, [X0+2688]
	037 Call 0x1C17CF4
	038 Move X0, 0xF64000
	039 Move X0, [X0+1728]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X26+3563], W8
	043 Move X0, [X19+32]
	044 Move X27, 0xF64000
	045 Move W8, [X0+309]
	046 Move X27, [X27+1728]
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {52}
	051 Call 0x1C5D684
	052 Move X8, [X27]
	053 Move X9, [X0+192]
	054 Move X28, 0xF8C000
	055 Move W10, [X8+224]
	056 Move X26, [X9]
	057 Move X28, [X28+2688]
	058 Compare W10, 0
	059 JumpIfNotEqual {62}
	060 Move X0, X8
	061 Call 0x1C17DFC
	062 Move X0, X26
	063 Move X1, X31
	064 Call Type.GetTypeFromHandle, X0
	065 Move X8, [X28]
	066 Move X26, X0
	067 Move X1, X31
	068 Move X0, X8
	069 Call Type.GetTypeFromHandle, X0
	070 Move X1, X0
	071 Move X0, X26
	072 Move X2, X31
	073 Call Type.op_Equality, X0, X1
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {101}
	078 Move V1, [X25+16]
	079 Move V0, [X25+32]
	080 Move V2, [X25]
	081 Move X8, 0xF90000
	082 Move [X31+128], V1
	083 Move [X31+136], V0
	084 Move [X31+7], V2
	085 Move V0, [X24]
	086 Move V1, [X24+16]
	087 Move X8, [X8+352]
	088 Move [X31+80], V0
	089 Move [X31+88], V1
	090 Move X0, [X8]
	091 Call 0x1C17F10
	092 Add X3, X31, 112
	093 Add X6, X31, 80
	094 Move X1, X23
	095 Move W2, W22
	096 Move X4, X21
	097 Move W5, W20
	098 Move X7, X31
	099 Move X24, X0
	100 Call LocalVoiceAudioFloat..ctor, X0, X1, X2, X3, X4, X5, X6
	101 Move X0, [X19+32]
	102 Move W8, [X0+309]
	103 Move TEMP, X8
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfEqual {108}
	107 Call 0x1C5D684
	108 Move X8, [X27]
	109 Move X9, [X0+192]
	110 Move X27, 0xF8B000
	111 Move W10, [X8+224]
	112 Move X26, [X9]
	113 Move X27, [X27+3448]
	114 Compare W10, 0
	115 JumpIfNotEqual {118}
	116 Move X0, X8
	117 Call 0x1C17DFC
	118 Move X0, X26
	119 Move X1, X31
	120 Call Type.GetTypeFromHandle, X0
	121 Move X8, [X27]
	122 Move X26, X0
	123 Move X1, X31
	124 Move X0, X8
	125 Call Type.GetTypeFromHandle, X0
	126 Move X1, X0
	127 Move X0, X26
	128 Move X2, X31
	129 Call Type.op_Equality, X0, X1
	130 Move TEMP, X0
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfNotEqual {197}
	134 Move V1, [X25+16]
	135 Move V0, [X25+32]
	136 Move V2, [X25]
	137 Move X8, 0xF8F000
	138 Move [X31+48], V1
	139 Move [X31+56], V0
	140 Move [X31+2], V2
	141 Move V0, [X24]
	142 Move V1, [X24+16]
	143 Move X8, [X8+360]
	144 Move [X31], V0
	145 Move [X31+8], V1
	146 Move X0, [X8]
	147 Call 0x1C17F10
	148 Add X3, X31, 32
	149 Add X6, X31, 0
	150 Move X1, X23
	151 Move W2, W22
	152 Move X4, X21
	153 Move W5, W20
	154 Move X7, X31
	155 Move X24, X0
	156 Call LocalVoiceAudioShort..ctor, X0, X1, X2, X3, X4, X5, X6
	157 Move X0, [X19+32]
	158 Move W8, [X0+309]
	159 Move TEMP, X8
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfEqual {164}
	163 Call 0x1C5D684
	164 Move X8, [X0+192]
	165 Move X0, [X8+8]
	166 Move W8, [X0+309]
	167 Move TEMP, X8
	168 And TEMP, TEMP, 1
	169 Compare TEMP, 1
	170 JumpIfEqual {172}
	171 Call 0x1C5D684
	172 Compare X24, 0
	173 JumpIfEqual {178}
	174 Move X8, [X24]
	175 Move W9, [X0+304]
	176 Move W10, [X8+304]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X0, X31
	179 Move X8, [X8+200]
	180 Add X8, X8, X9
	181 NotImplemented "Instruction LDUR not yet implemented."
	182 NotImplemented "Instruction CMP not yet implemented."
	183 NotImplemented "Instruction CSEL not yet implemented."
	184 Move X20, [X31+240]
	185 Move X19, [X31+248]
	186 Move X22, [X31+224]
	187 Move X21, [X31+232]
	188 Move X24, [X31+208]
	189 Move X23, [X31+216]
	190 Move X26, [X31+192]
	191 Move X25, [X31+200]
	192 Move X28, [X31+176]
	193 Move X27, [X31+184]
	194 Move X30, [X31+160]
	195 Add X31, X31, 256
	196 Return X0
	197 Move X0, [X19+32]
	198 Call 0x199C99C
	199 Move X8, [X0+192]
	200 Move X0, 0xF63000
	201 Move X20, [X8]
	202 Move X0, [X0+1728]
	203 Call 0x1C17D08
	204 Call 0x19913D0
	205 Move X0, X20
	206 Move X1, X31
	207 Call Type.GetTypeFromHandle, X0
	208 Move X20, X0
	209 Move X0, 0xF8F000
	210 Move X0, [X0+368]
	211 Call 0x1C17D08
	212 Call 0x1C17F10
	213 Move X1, X20
	214 Move X2, X31
	215 Move X21, X0
	216 Call UnsupportedSampleTypeException..ctor, X0, X1
	217 Move X0, X21
	218 Move X1, X19
	219 Call 0x1C17DEC

Method: Photon.Voice.AudioUtil/IVoiceDetector get_VoiceDetector()

Disassembly:
	0x0319114C ADD X8, X8, X10, 0x3, LSL
	0x03191150 STR W9, [X0 + 0x18]

ISIL:
	001 Move X0, [X0+336]
	002 Return X0

Method: Photon.Voice.AudioUtil/ILevelMeter get_LevelMeter()

Disassembly:
	0x03191154 STR X1, [X8 + 0x20]
	0x03191158 B 0x319116C

ISIL:
	001 Move X0, [X0+352]
	002 Return X0

Method: System.Void VoiceDetectorCalibrate(System.Int32 durationMs, System.Action`1<System.Single> onCalibrated = null)

Disassembly:
	0x0319115C LDR X8, [X9 + 0x20]
	0x03191160 LDR X8, [X8 + 0xC0]
	0x03191164 LDR X2, [X8 + 0x70]
	0x03191168 BL 0x301BF90
	0x0319116C LDR W8, [X21 + 0x18]
	0x03191170 ADD X23, X23, 0x1
	0x03191174 CMP X23, W8, SXTW
	0x03191178 B.LT 0x3191104
	0x0319117C MOV X21, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+344]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X3+32]
	006 Move X8, [X8+192]
	007 Move X3, [X8+40]
	008 Move X30, [X31+16]
	009 Call 0x2845FA8, X0, X1, X2
	010 Return 
	011 Call 0x1C17F20

Method: System.Boolean get_VoiceDetectorCalibrating()

Disassembly:
	0x03191180 LDRB W8, [X31 + 0xC]
	0x03191184 CBZ W8, 0x3191194
	0x03191188 MOV X0, X19
	0x0319118C MOV X1, X31
	0x03191190 BL 0x33E14E4
	0x03191194 CBNZ X21, 0x31911B8
	0x03191198 LDP X20, X19, [X31 + 0x30]
	0x0319119C LDP X22, X21, [X31 + 0x20]
	0x031911A0 LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+344]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X1+32]
	006 Move X8, [X8+192]
	007 Move X1, [X8+48]
	008 Move X30, [X31+16]
	009 Call 0x2845F54, X0
	010 Return X0
	011 Call 0x1C17F20

Method: System.Void .ctor(Photon.Voice.VoiceClient voiceClient, System.Byte id, Photon.Voice.VoiceInfo voiceInfo, Photon.Voice.IAudioDesc audioSourceDesc, System.Int32 channelId, Photon.Voice.VoiceCreateOptions opt)

Disassembly:
	0x031911A4 LDR X30, [X31], #0x40
	0x031911A8 RET
	0x031911AC BL 0x1C16F20
	0x031911B0 BL 0x1C16F20
	0x031911B4 BL 0x1C16F28
	0x031911B8 MOV X0, X21
	0x031911BC BL 0x1C16F18
	0x031911C0 BL 0x1C16F20
	0x031911C4 B 0x31911D4
	0x031911C8 B 0x31911D4
	0x031911CC B 0x31911D4
	0x031911D0 B 0x31911D4
	0x031911D4 MOV X20, X0
	0x031911D8 CMP W1, 0x1
	0x031911DC B.NE 0x31911F4
	0x031911E0 MOV X0, X20
	0x031911E4 BL 0x3EB1AD0
	0x031911E8 LDR X21, [X0]
	0x031911EC BL 0x3EB1AE0
	0x031911F0 B 0x3191180
	0x031911F4 MOV X21, X31
	0x031911F8 B 0x3191200
	0x031911FC MOV X20, X0
	0x03191200 LDRB W8, [X31 + 0xC]
	0x03191204 CBZ W8, 0x3191214
	0x03191208 MOV X0, X19
	0x0319120C MOV X1, X31
	0x03191210 BL 0x33E14E4
	0x03191214 CBNZ X21, 0x3191220
	0x03191218 MOV X0, X20
	0x0319121C BL 0x1D2C690
	0x03191220 MOV X0, X21
	0x03191224 BL 0x1C16F18
	0x03191228 BL 0x1990590
	0x0319122C STR X30, [X31 - 0x40]!
	0x03191230 STP X24, X23, [X31 + 0x10]
	0x03191234 STP X22, X21, [X31 + 0x20]
	0x03191238 STP X20, X19, [X31 + 0x30]
	0x0319123C LDR X19, [X0 + 0xB8]
	0x03191240 MOV X20, X2
	0x03191244 MOV X21, X1
	0x03191248 MOV X22, X0
	0x0319124C STRB W31, [X31 + 0xC]
	0x03191250 ADD X1, X31, 0xC
	0x03191254 MOV X0, X19
	0x03191258 MOV X2, X31
	0x0319125C BL 0x33DE64C
	0x03191260 CBZ X21, 0x31912FC
	0x03191264 LDR X8, [X21 + 0x18]
	0x03191268 CMP W8, 0x1
	0x0319126C B.LT 0x31912BC
	0x03191270 MOV X23, X31
	0x03191274 AND X8, X8, 0x0
	0x03191278 ADD X24, X21, 0x20
	0x0319127C CMP X23, W8, UXTW
	0x03191280 B.CS 0x31912F0
	0x03191284 LDR W1, [X22 + 0x110]
	0x03191288 LDR X0, [X22 + 0x118]
	0x0319128C LDR X2, [X24, X23, LSL #3]
	0x03191290 ADD W8, W1, 0x1
	0x03191294 STR W8, [X22 + 0x110]
	0x03191298 CBZ X0, 0x31912EC
	0x0319129C LDR X8, [X20 + 0x20]
	0x031912A0 LDR X8, [X8 + 0xC0]
	0x031912A4 LDR X3, [X8 + 0x40]
	0x031912A8 BL 0x301CEEC
	0x031912AC LDR W8, [X21 + 0x18]
	0x031912B0 ADD X23, X23, 0x1
	0x031912B4 CMP X23, W8, SXTW
	0x031912B8 B.LT 0x319127C
	0x031912BC MOV X21, X31
	0x031912C0 LDRB W8, [X31 + 0xC]
	0x031912C4 CBZ W8, 0x31912D4
	0x031912C8 MOV X0, X19
	0x031912CC MOV X1, X31
	0x031912D0 BL 0x33E14E4
	0x031912D4 CBNZ X21, 0x31912F4
	0x031912D8 LDP X20, X19, [X31 + 0x30]
	0x031912DC LDP X22, X21, [X31 + 0x20]
	0x031912E0 LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+160], X30
	003 Move [X31+168], X27
	004 Move [X31+176], X26
	005 Move [X31+184], X25
	006 Move [X31+192], X24
	007 Move [X31+200], X23
	008 Move [X31+208], X22
	009 Move [X31+216], X21
	010 Move [X31+224], X20
	011 Move [X31+232], X19
	012 Move X27, 0x124B000
	013 Move W8, [X27+3564]
	014 Move X24, X7
	015 Move X25, X6
	016 Move W20, W5
	017 Move X26, X4
	018 Move X19, X3
	019 Move W21, W2
	020 Move X23, X1
	021 Move X22, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0xF8F000
	027 Move X0, [X0+376]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X27+3564], W8
	031 Move V1, [X19+16]
	032 Move V0, [X19+32]
	033 Move V2, [X19]
	034 Move [X31+48], V1
	035 Move [X31+56], V0
	036 Move [X31+2], V2
	037 Compare X26, 0
	038 JumpIfEqual {101}
	039 Move X10, 0xF8F000
	040 Move X8, [X26]
	041 Move X10, [X10+376]
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 Move X1, [X10]
	044 Compare X9, 0
	045 JumpIfEqual {52}
	046 Move X10, [X8+176]
	047 Add X10, X10, 8
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Subtract X9, X9, 1
	051 Add X10, X10, 16
	052 Move X0, X26
	053 Move W2, W31
	054 Call 0x1C5D788
	055 NotImplemented "Instruction LDRSW not yet implemented."
	056 Add X8, X8, X9
	057 Add X0, X8, 312
	058 Move X8, [X0]
	059 Move X1, [X0+8]
	060 Move X0, X26
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move V1, [X25]
	063 Move V0, [X25+16]
	064 Move V2, [X31+4]
	065 Move W4, W0
	066 Add X3, X31, 112
	067 Move [X31], V1
	068 Move [X31+8], V0
	069 Move X8, [X24+32]
	070 Move V0, [X31+32]
	071 Move V1, [X31+48]
	072 Move V3, [X31]
	073 Move V4, [X31+16]
	074 Add X6, X31, 80
	075 Move X8, [X8+192]
	076 Move X0, X22
	077 Move X1, X23
	078 Move W2, W21
	079 Move X7, [X8+56]
	080 Move W5, W20
	081 Move [X31+112], V0
	082 Move [X31+120], V1
	083 Move [X31+9], V2
	084 Move [X31+80], V3
	085 Move [X31+88], V4
	086 Call 0x31925D0, X0, X1, X2, X3, X4, X5, X6
	087 Move W8, [X19+8]
	088 Move X20, [X31+224]
	089 Move X19, [X31+232]
	090 Move X24, [X31+192]
	091 Move X23, [X31+200]
	092 Move X26, [X31+176]
	093 Move X25, [X31+184]
	094 Move [X22+360], W8
	095 Move X22, [X31+208]
	096 Move X21, [X31+216]
	097 Move X30, [X31+160]
	098 Move X27, [X31+168]
	099 Add X31, X31, 240
	100 Return 
	101 Call 0x1C17F20

Method: System.Void initBuiltinProcessors()

Disassembly:
	0x031912E4 LDR X30, [X31], #0x40
	0x031912E8 RET
	0x031912EC BL 0x1C16F20
	0x031912F0 BL 0x1C16F28
	0x031912F4 MOV X0, X21
	0x031912F8 BL 0x1C16F18
	0x031912FC BL 0x1C16F20
	0x03191300 B 0x3191310
	0x03191304 B 0x3191310
	0x03191308 B 0x3191310
	0x0319130C B 0x3191310
	0x03191310 MOV X20, X0
	0x03191314 CMP W1, 0x1
	0x03191318 B.NE 0x3191330
	0x0319131C MOV X0, X20
	0x03191320 BL 0x3EB1AD0
	0x03191324 LDR X21, [X0]
	0x03191328 BL 0x3EB1AE0
	0x0319132C B 0x31912C0
	0x03191330 MOV X21, X31
	0x03191334 B 0x319133C
	0x03191338 MOV X20, X0
	0x0319133C LDRB W8, [X31 + 0xC]
	0x03191340 CBZ W8, 0x3191350
	0x03191344 MOV X0, X19
	0x03191348 MOV X1, X31
	0x0319134C BL 0x33E14E4
	0x03191350 CBNZ X21, 0x319135C
	0x03191354 MOV X0, X20
	0x03191358 BL 0x1D2C690
	0x0319135C MOV X0, X21
	0x03191360 BL 0x1C16F18
	0x03191364 BL 0x1990590
	0x03191368 SUB X31, X31, 0x50
	0x0319136C STP X30, X25, [X31 + 0x10]
	0x03191370 STP X24, X23, [X31 + 0x20]
	0x03191374 STP X22, X21, [X31 + 0x30]
	0x03191378 STP X20, X19, [X31 + 0x40]
	0x0319137C LDR X19, [X0 + 0xB8]
	0x03191380 MOV X20, X2
	0x03191384 MOV X21, X1
	0x03191388 MOV X22, X0
	0x0319138C STRB W31, [X31 + 0xC]
	0x03191390 ADD X1, X31, 0xC
	0x03191394 MOV X0, X19
	0x03191398 MOV X2, X31
	0x0319139C BL 0x33DE64C
	0x031913A0 CBZ X21, 0x3191470
	0x031913A4 LDR X8, [X21 + 0x18]
	0x031913A8 CMP W8, 0x1
	0x031913AC B.LT 0x3191428
	0x031913B0 MOV X24, X31
	0x031913B4 AND X8, X8, 0x0
	0x031913B8 ADD X25, X21, 0x20
	0x031913BC CMP X24, W8, UXTW
	0x031913C0 B.CS 0x319145C
	0x031913C4 LDR X0, [X22 + 0x118]
	0x031913C8 CBZ X0, 0x3191460
	0x031913CC LDR X8, [X20 + 0x20]
	0x031913D0 LDR X23, [X25, X24, LSL #3]
	0x031913D4 LDR X8, [X8 + 0xC0]
	0x031913D8 LDR X2, [X8 + 0x48]
	0x031913DC MOV X1, X23
	0x031913E0 BL 0x301CD00
	0x031913E4 TBNZ X0, 0x1F, 0x3191418
	0x031913E8 LDR W8, [X22 + 0x110]
	0x031913EC CMP W0, W8
	0x031913F0 B.GE 0x31913FC
	0x031913F4 SUB W8, W8, 0x1
	0x031913F8 STR W8, [X22 + 0x110]
	0x031913FC LDR X0, [X22 + 0x118]
	0x03191400 CBZ X0, 0x3191464
	0x03191404 LDR X8, [X20 + 0x20]
	0x03191408 LDR X8, [X8 + 0xC0]
	0x0319140C LDR X2, [X8 + 0x50]
	0x03191410 MOV X1, X23
	0x03191414 BL 0x301D7A8
	0x03191418 LDR W8, [X21 + 0x18]
	0x0319141C ADD X24, X24, 0x1
	0x03191420 CMP X24, W8, SXTW
	0x03191424 B.LT 0x31913BC
	0x03191428 MOV X21, X31
	0x0319142C LDRB W8, [X31 + 0xC]
	0x03191430 CBZ W8, 0x3191440

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X8, [X1+32]
	010 Move X19, X0
	011 Move X24, [X19+336]
	012 Move X22, [X19+352]
	013 Move X8, [X8+192]
	014 Move W21, [X19+76]
	015 Move W23, [X19+360]
	016 Move X20, X1
	017 Move X0, [X8+32]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Call 0x1C17F10
	025 Move X8, [X20+32]
	026 Move X1, X24
	027 Move X2, X22
	028 Move W3, W21
	029 Move X8, [X8+192]
	030 Move W4, W23
	031 Move X25, X0
	032 Move X5, [X8+72]
	033 Call 0x2845F64, X0, X1, X2, X3, X4
	034 Move [X19+344], X25
	035 Move X8, [X20+32]
	036 Move X8, [X8+192]
	037 Move X0, [X8+80]
	038 Move W8, [X0+309]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {44}
	043 Call 0x1C5D684
	044 Move W1, 3
	045 Call 0x1C17D6C
	046 Compare X0, 0
	047 JumpIfEqual {105}
	048 Move X22, [X19+352]
	049 Move X21, X0
	050 Compare X22, 0
	051 JumpIfEqual {58}
	052 Move X8, [X21]
	053 Move X0, X22
	054 Move X1, [X8+64]
	055 Call 0x1C17E00
	056 Compare X0, 0
	057 JumpIfEqual {102}
	058 Move W8, [X21+24]
	059 Compare W8, 0
	060 JumpIfEqual {101}
	061 Move [X21+32], X22
	062 Move X22, [X19+344]
	063 Compare X22, 0
	064 JumpIfEqual {72}
	065 Move X8, [X21]
	066 Move X0, X22
	067 Move X1, [X8+64]
	068 Call 0x1C17E00
	069 Compare X0, 0
	070 JumpIfEqual {102}
	071 Move W8, [X21+24]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move [X21+40], X22
	074 Move X22, [X19+336]
	075 Compare X22, 0
	076 JumpIfEqual {84}
	077 Move X8, [X21]
	078 Move X0, X22
	079 Move X1, [X8+64]
	080 Call 0x1C17E00
	081 Compare X0, 0
	082 JumpIfEqual {102}
	083 Move W8, [X21+24]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move [X21+48], X22
	086 Move X8, [X20+32]
	087 Move X0, X19
	088 Move X1, X21
	089 Move X20, [X31+48]
	090 Move X19, [X31+56]
	091 Move X8, [X8+192]
	092 Move X22, [X31+32]
	093 Move X21, [X31+40]
	094 Move X24, [X31+16]
	095 Move X23, [X31+24]
	096 Move X2, [X8+88]
	097 Move X30, [X31+64]
	098 Move X25, [X31+72]
	099 Call 0x31920B4, X0, X1
	100 Return 
	101 Call 0x1C17F28
	102 Call 0x1C17F44
	103 Move X1, X31
	104 Call 0x1C17DEC
	105 Call 0x1C17F20

