Type: Photon.Voice.AudioOutDelayControl`1

Method: System.Int64 get_OutPos()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void OutCreate(System.Int32 frequency, System.Int32 channels, System.Int32 bufferSamples)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void OutStart()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void OutWrite(T[] data, System.Int32 offsetSamples)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean IsZeroFrame(T[] f)

Disassembly:
	0x0263ECD4 LDR X0, [X24]
	0x0263ECD8 ADD X1, X31, 0xC
	0x0263ECDC STR W20, [X31 + 0xC]
	0x0263ECE0 BL 0x1C16E04

ISIL:
	001 Move X8, [X0+120]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Void .ctor(System.Boolean processInService, Photon.Voice.AudioOutDelayControl/PlayDelayConfig playDelayConfig, Photon.Voice.ILogger logger, System.String logPrefix, System.Boolean debugInfo)

Disassembly:
	0x0263ECE4 MOV X23, X0
	0x0263ECE8 CBZ X0, 0x263ED00
	0x0263ECEC LDR X8, [X22]
	0x0263ECF0 MOV X0, X23
	0x0263ECF4 LDR X1, [X8 + 0x40]
	0x0263ECF8 BL 0x1C16E00
	0x0263ECFC CBZ X0, 0x263F608
	0x0263ED00 LDR W8, [X22 + 0x18]
	0x0263ED04 CMP W8, 0x3
	0x0263ED08 B.LS 0x263F604
	0x0263ED0C STR X23, [X22 + 0x38]
	0x0263ED10 LDR W8, [X19 + 0x28]
	0x0263ED14 LDR X0, [X24]
	0x0263ED18 ADD X1, X31, 0x8
	0x0263ED1C STR W8, [X31 + 0x8]
	0x0263ED20 BL 0x1C16E04
	0x0263ED24 MOV X23, X0
	0x0263ED28 CBZ X0, 0x263ED40
	0x0263ED2C LDR X8, [X22]
	0x0263ED30 MOV X0, X23
	0x0263ED34 LDR X1, [X8 + 0x40]
	0x0263ED38 BL 0x1C16E00
	0x0263ED3C CBZ X0, 0x263F608
	0x0263ED40 LDR W8, [X22 + 0x18]
	0x0263ED44 CMP W8, 0x4
	0x0263ED48 B.LS 0x263F604
	0x0263ED4C STR X23, [X22 + 0x40]
	0x0263ED50 LDR W8, [X19 + 0x4C]
	0x0263ED54 LDR X0, [X24]
	0x0263ED58 ADD X1, X31, 0x4
	0x0263ED5C ADD W8, W8, W20
	0x0263ED60 STR W8, [X31 + 0x4]
	0x0263ED64 BL 0x1C16E04
	0x0263ED68 MOV X23, X0
	0x0263ED6C CBZ X0, 0x263ED84
	0x0263ED70 LDR X8, [X22]
	0x0263ED74 MOV X0, X23
	0x0263ED78 LDR X1, [X8 + 0x40]
	0x0263ED7C BL 0x1C16E00
	0x0263ED80 CBZ X0, 0x263F608
	0x0263ED84 LDR W8, [X22 + 0x18]
	0x0263ED88 CMP W8, 0x5
	0x0263ED8C B.LS 0x263F604
	0x0263ED90 STR X23, [X22 + 0x48]
	0x0263ED94 CBZ X21, 0x263F614
	0x0263ED98 ADRP X9, 0x1ABA000
	0x0263ED9C LDR X8, [X21]
	0x0263EDA0 LDR X9, [X9 + 0x348]
	0x0263EDA4 ADRP X10, 0x1ADF000
	0x0263EDA8 LDR X1, [X9]
	0x0263EDAC LDR X10, [X10 + 0x4C8]
	0x0263EDB0 LDRH W9, [X8 + 0x12E]
	0x0263EDB4 LDR X23, [X10]
	0x0263EDB8 CBZ X9, 0x263EDDC
	0x0263EDBC LDR X10, [X8 + 0xB0]
	0x0263EDC0 ADD X10, X10, 0x8
	0x0263EDC4 LDUR X11, [X10 - 0x8]
	0x0263EDC8 CMP X11, X1
	0x0263EDCC B.EQ 0x263F044
	0x0263EDD0 SUBS X9, X9, 0x1
	0x0263EDD4 ADD X10, X10, 0x10
	0x0263EDD8 B.NE 0x263EDC4
	0x0263EDDC MOVZ W2, 0x1
	0x0263EDE0 MOV X0, X21
	0x0263EDE4 BL 0x1C5C788
	0x0263EDE8 B 0x263F054
	0x0263EDEC LDR W9, [X10]
	0x0263EDF0 ADD W9, W9, 0x1
	0x0263EDF4 ADD X8, X8, W9, 0x4, SXTW
	0x0263EDF8 ADD X0, X8, 0x138
	0x0263EDFC LDP X8, X4, [X0]
	0x0263EE00 MOVZ W1, 0x4
	0x0263EE04 MOV X0, X23
	0x0263EE08 MOV X2, X25
	0x0263EE0C MOV X3, X24
	0x0263EE10 BLR X8
	0x0263EE14 LDR W8, [X19 + 0x50]
	0x0263EE18 CMP W26, W8
	0x0263EE1C B.LE 0x263F2B8
	0x0263EE20 LDRB W8, [X19 + 0xA8]
	0x0263EE24 CBNZ W8, 0x263F2B8
	0x0263EE28 LDRB W8, [X19 + 0x90]
	0x0263EE2C CBNZ W8, 0x263EE50
	0x0263EE30 LDR X0, [X19 + 0x88]
	0x0263EE34 CBZ X0, 0x263F614
	0x0263EE38 LDR X8, [X22 + 0x20]
	0x0263EE3C LDP W2, W1, [X19 + 0x40]
	0x0263EE40 MOVZ W3, 0x6
	0x0263EE44 LDR X8, [X8 + 0xC0]
	0x0263EE48 LDR X4, [X8 + 0x88]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X27, 0x1D9D000
	013 Move X28, 0x1ADE000
	014 Move W8, [X27+228]
	015 Move X28, [X28+2128]
	016 Move X24, X7
	017 Move W25, W6
	018 Move X19, X5
	019 Move X20, X4
	020 Move X22, X3
	021 Move X23, X2
	022 Move W26, W1
	023 Move X21, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {36}
	028 Move X0, 0x1ADE000
	029 Move X0, [X0+2128]
	030 Call 0x1C17CF4
	031 Move X0, 0x1AE0000
	032 Move X0, [X0+1128]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X27+228], W8
	036 Move X0, [X28]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X8, [X24+32]
	042 Move S0, W31
	043 Move X8, [X8+192]
	044 Move X0, [X8+24]
	045 Call Marshal.SizeOf, V0
	046 Move [X21+16], W0
	047 Move W8, 1
	048 Move X0, X31
	049 Move [X21+73], W8
	050 Call Environment.get_TickCount
	051 Subtract W8, W0, 120
	052 Move [X21+88], W8
	053 Move X8, [X24+32]
	054 Move X8, [X8+192]
	055 Move X0, [X8+32]
	056 Move W8, [X0+309]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {62}
	061 Call 0x1C5D684
	062 Move X28, 0x1AE0000
	063 Move X28, [X28+1128]
	064 Call 0x1C17F10
	065 Move X8, [X24+32]
	066 Move X27, X0
	067 Move X8, [X8+192]
	068 Move X1, [X8+40]
	069 Call ConcurrentQueue`1<Object>..ctor, X0
	070 Move [X21+152], X27
	071 Move X8, [X24+32]
	072 Move X8, [X8+192]
	073 Move X0, [X8+48]
	074 Move W8, [X0+309]
	075 Move TEMP, X8
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {80}
	079 Call 0x1C5D684
	080 And W26, W26, 1
	081 And W25, W25, 1
	082 Call 0x1C17F10
	083 Move X8, [X24+32]
	084 Move X2, [X28]
	085 Move W1, 50
	086 Move X24, X0
	087 Move X8, [X8+192]
	088 Move X3, [X8+56]
	089 Call PrimitiveArrayPool`1<Single>..ctor, X0, X1, X2
	090 Move X0, X21
	091 Move X1, X31
	092 Move [X21+160], X24
	093 Call AudioOutDelayControl..ctor, X0
	094 Move [X21+113], W26
	095 Move [X21+52], X23
	096 Move [X21+60], X22
	097 Move [X21+96], X20
	098 Move [X21+104], X19
	099 Move [X21+112], W25
	100 Move X20, [X31+80]
	101 Move X19, [X31+88]
	102 Move X22, [X31+64]
	103 Move X21, [X31+72]
	104 Move X24, [X31+48]
	105 Move X23, [X31+56]
	106 Move X26, [X31+32]
	107 Move X25, [X31+40]
	108 Move X28, [X31+16]
	109 Move X27, [X31+24]
	110 Move X30, [X31+96]
	111 Return 

Method: System.Int32 get_Lag()

Disassembly:
	0x0263EE4C BL 0x26AFEA4
	0x0263EE50 LDRB W8, [X19 + 0x70]
	0x0263EE54 MOVZ W9, 0x1
	0x0263EE58 STRB W9, [X19 + 0xA8]
	0x0263EE5C CBZ W8, 0x263F2B8
	0x0263EE60 ADRP X8, 0x1AB5000
	0x0263EE64 LDR X23, [X19 + 0x60]
	0x0263EE68 LDR X8, [X8 + 0x9D0]
	0x0263EE6C MOVZ W1, 0x6
	0x0263EE70 LDR X0, [X8]
	0x0263EE74 BL 0x1C16D6C
	0x0263EE78 CBZ X0, 0x263F614
	0x0263EE7C LDR X25, [X19 + 0x68]
	0x0263EE80 MOV X24, X0
	0x0263EE84 CBZ X25, 0x263EE9C
	0x0263EE88 LDR X8, [X24]
	0x0263EE8C MOV X0, X25
	0x0263EE90 LDR X1, [X8 + 0x40]
	0x0263EE94 BL 0x1C16E00
	0x0263EE98 CBZ X0, 0x263F608
	0x0263EE9C LDR W8, [X24 + 0x18]
	0x0263EEA0 CBZ W8, 0x263F604
	0x0263EEA4 STR X25, [X24 + 0x20]

ISIL:
	001 Move W8, [X0+72]
	002 Compare W8, 0
	003 JumpIfEqual {11}
	004 Move W8, [X0+40]
	005 Move W10, [X0+48]
	006 Move W9, [X0+32]
	007 Subtract W8, W8, W10
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W9, [X0+28]
	010 Subtract W8, W8, W9
	011 Move W0, W31
	012 Return X0
	013 Subtract W9, W31, W9
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move W9, [X0+28]
	016 Add W8, W9, W8
	017 Move W9, [X0+36]
	018 Move W10, 1000
	019 Multiply W8, W8, W10
	020 NotImplemented "Instruction SDIV not yet implemented."
	021 Return X0

Method: System.Boolean get_IsFlushed()

Disassembly:
	0x0263EEA8 ADRP X27, 0x1AB5000
	0x0263EEAC LDR W8, [X19 + 0x50]
	0x0263EEB0 LDR X27, [X27 + 0x758]
	0x0263EEB4 ADD X1, X31, 0x1C
	0x0263EEB8 STR W8, [X31 + 0x1C]
	0x0263EEBC LDR X0, [X27]
	0x0263EEC0 BL 0x1C16E04
	0x0263EEC4 MOV X25, X0

ISIL:
	001 Move W8, [X0+72]
	002 Compare W8, 0
	003 JumpIfEqual {8}
	004 Move W8, [X0+73]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 Return X0
	008 Move W0, 1
	009 Return X0

Method: System.Boolean get_IsPlaying()

Disassembly:
	0x0263EEC8 CBZ X0, 0x263EEE0
	0x0263EECC LDR X8, [X24]
	0x0263EED0 MOV X0, X25
	0x0263EED4 LDR X1, [X8 + 0x40]
	0x0263EED8 BL 0x1C16E00
	0x0263EEDC CBZ X0, 0x263F608
	0x0263EEE0 LDR W8, [X24 + 0x18]
	0x0263EEE4 CMP W8, 0x1
	0x0263EEE8 B.LS 0x263F604
	0x0263EEEC STR X25, [X24 + 0x28]
	0x0263EEF0 LDR X0, [X27]
	0x0263EEF4 ADD X1, X31, 0x18
	0x0263EEF8 STR W26, [X31 + 0x18]
	0x0263EEFC BL 0x1C16E04
	0x0263EF00 MOV X25, X0
	0x0263EF04 CBZ X0, 0x263EF1C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+72]
	004 Compare W8, 0
	005 JumpIfEqual {10}
	006 Move W8, [X0+73]
	007 Move X19, X0
	008 Compare W8, 0
	009 JumpIfEqual {11}
	010 Move W0, W31
	011 Move X0, X31
	012 Call Environment.get_TickCount
	013 Move W8, [X19+88]
	014 Subtract W8, W0, W8
	015 NotImplemented "Instruction CMP not yet implemented."
	016 NotImplemented "Instruction CSET not yet implemented."
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return X0

Method: System.Void Start(System.Int32 frequency, System.Int32 channels, System.Int32 frameSamples)

Disassembly:
	0x0263EF08 LDR X8, [X24]
	0x0263EF0C MOV X0, X25
	0x0263EF10 LDR X1, [X8 + 0x40]
	0x0263EF14 BL 0x1C16E00
	0x0263EF18 CBZ X0, 0x263F608
	0x0263EF1C LDR W8, [X24 + 0x18]
	0x0263EF20 CMP W8, 0x2
	0x0263EF24 B.LS 0x263F604
	0x0263EF28 STR X25, [X24 + 0x30]
	0x0263EF2C LDR X0, [X27]
	0x0263EF30 ADD X1, X31, 0xC
	0x0263EF34 STR W20, [X31 + 0xC]
	0x0263EF38 BL 0x1C16E04
	0x0263EF3C MOV X25, X0
	0x0263EF40 CBZ X0, 0x263EF58
	0x0263EF44 LDR X8, [X24]
	0x0263EF48 MOV X0, X25
	0x0263EF4C LDR X1, [X8 + 0x40]
	0x0263EF50 BL 0x1C16E00
	0x0263EF54 CBZ X0, 0x263F608
	0x0263EF58 LDR W8, [X24 + 0x18]
	0x0263EF5C CMP W8, 0x3
	0x0263EF60 B.LS 0x263F604
	0x0263EF64 STR X25, [X24 + 0x38]
	0x0263EF68 LDR W8, [X19 + 0x28]
	0x0263EF6C LDR X0, [X27]
	0x0263EF70 ADD X1, X31, 0x8
	0x0263EF74 STR W8, [X31 + 0x8]
	0x0263EF78 BL 0x1C16E04
	0x0263EF7C MOV X25, X0
	0x0263EF80 CBZ X0, 0x263EF98
	0x0263EF84 LDR X8, [X24]
	0x0263EF88 MOV X0, X25
	0x0263EF8C LDR X1, [X8 + 0x40]
	0x0263EF90 BL 0x1C16E00
	0x0263EF94 CBZ X0, 0x263F608
	0x0263EF98 LDR W8, [X24 + 0x18]
	0x0263EF9C CMP W8, 0x4
	0x0263EFA0 B.LS 0x263F604
	0x0263EFA4 STR X25, [X24 + 0x40]
	0x0263EFA8 LDR W8, [X19 + 0x4C]
	0x0263EFAC LDR X0, [X27]
	0x0263EFB0 ADD X1, X31, 0x4
	0x0263EFB4 ADD W8, W8, W20
	0x0263EFB8 STR W8, [X31 + 0x4]
	0x0263EFBC BL 0x1C16E04
	0x0263EFC0 MOV X25, X0
	0x0263EFC4 CBZ X0, 0x263EFDC
	0x0263EFC8 LDR X8, [X24]
	0x0263EFCC MOV X0, X25
	0x0263EFD0 LDR X1, [X8 + 0x40]
	0x0263EFD4 BL 0x1C16E00
	0x0263EFD8 CBZ X0, 0x263F608
	0x0263EFDC LDR W8, [X24 + 0x18]
	0x0263EFE0 CMP W8, 0x5
	0x0263EFE4 B.LS 0x263F604
	0x0263EFE8 STR X25, [X24 + 0x48]
	0x0263EFEC CBZ X23, 0x263F614
	0x0263EFF0 ADRP X9, 0x1ABA000
	0x0263EFF4 LDR X8, [X23]
	0x0263EFF8 LDR X9, [X9 + 0x348]
	0x0263EFFC ADRP X10, 0x1ADF000
	0x0263F000 LDR X1, [X9]
	0x0263F004 B 0x3EB181C
	0x0263F008 LDRH W9, [X8 + 0x12E]
	0x0263F00C LDR X25, [X10]
	0x0263F010 CBZ X9, 0x263F034
	0x0263F014 LDR X10, [X8 + 0xB0]
	0x0263F018 ADD X10, X10, 0x8
	0x0263F01C LDUR X11, [X10 - 0x8]
	0x0263F020 CMP X11, X1
	0x0263F024 B.EQ 0x263F290
	0x0263F028 SUBS X9, X9, 0x1
	0x0263F02C ADD X10, X10, 0x10
	0x0263F030 B.NE 0x263F01C
	0x0263F034 MOVZ W2, 0x1
	0x0263F038 MOV X0, X23
	0x0263F03C BL 0x1C5C788
	0x0263F040 B 0x263F2A0
	0x0263F044 LDR W9, [X10]
	0x0263F048 ADD W9, W9, 0x1
	0x0263F04C ADD X8, X8, W9, 0x4, SXTW
	0x0263F050 ADD X0, X8, 0x138
	0x0263F054 LDP X8, X4, [X0]
	0x0263F058 MOVZ W1, 0x4
	0x0263F05C MOV X0, X21
	0x0263F060 MOV X2, X23
	0x0263F064 MOV X3, X22
	0x0263F068 BLR X8
	0x0263F06C LDRB W8, [X19 + 0xA8]
	0x0263F070 CBZ W8, 0x263F5E4
	0x0263F074 LDRB W8, [X19 + 0x70]
	0x0263F078 STRB W31, [X19 + 0xA8]
	0x0263F07C CBZ W8, 0x263F5E4
	0x0263F080 ADRP X8, 0x1AB4000
	0x0263F084 LDR X21, [X19 + 0x60]
	0x0263F088 LDR X8, [X8 + 0x9D0]
	0x0263F08C MOVZ W1, 0x6
	0x0263F090 LDR X0, [X8]
	0x0263F094 BL 0x1C16D6C
	0x0263F098 CBZ X0, 0x263F614
	0x0263F09C LDR X23, [X19 + 0x68]
	0x0263F0A0 MOV X22, X0
	0x0263F0A4 CBZ X23, 0x263F0BC
	0x0263F0A8 LDR X8, [X22]
	0x0263F0AC MOV X0, X23
	0x0263F0B0 LDR X1, [X8 + 0x40]
	0x0263F0B4 BL 0x1C16E00
	0x0263F0B8 CBZ X0, 0x263F608
	0x0263F0BC LDR W8, [X22 + 0x18]
	0x0263F0C0 CBZ W8, 0x263F604
	0x0263F0C4 STR X23, [X22 + 0x20]
	0x0263F0C8 ADRP X24, 0x1AB4000
	0x0263F0CC LDR W8, [X19 + 0x50]
	0x0263F0D0 LDR X24, [X24 + 0x758]
	0x0263F0D4 ADD X1, X31, 0x1C
	0x0263F0D8 STR W8, [X31 + 0x1C]
	0x0263F0DC LDR X0, [X24]
	0x0263F0E0 BL 0x1C16E04
	0x0263F0E4 MOV X23, X0
	0x0263F0E8 CBZ X0, 0x263F100
	0x0263F0EC LDR X8, [X22]
	0x0263F0F0 MOV X0, X23
	0x0263F0F4 LDR X1, [X8 + 0x40]
	0x0263F0F8 BL 0x1C16E00
	0x0263F0FC CBZ X0, 0x263F608
	0x0263F100 LDR W8, [X22 + 0x18]
	0x0263F104 CMP W8, 0x1
	0x0263F108 B.LS 0x263F604
	0x0263F10C STR X23, [X22 + 0x28]
	0x0263F110 LDR X0, [X24]
	0x0263F114 ADD X1, X31, 0x18
	0x0263F118 STR W26, [X31 + 0x18]
	0x0263F11C BL 0x1C16E04
	0x0263F120 MOV X23, X0
	0x0263F124 CBZ X0, 0x263F13C
	0x0263F128 LDR X8, [X22]
	0x0263F12C MOV X0, X23
	0x0263F130 LDR X1, [X8 + 0x40]
	0x0263F134 BL 0x1C16E00
	0x0263F138 CBZ X0, 0x263F608
	0x0263F13C LDR W8, [X22 + 0x18]
	0x0263F140 CMP W8, 0x2
	0x0263F144 B.LS 0x263F604
	0x0263F148 STR X23, [X22 + 0x30]
	0x0263F14C LDR X0, [X24]
	0x0263F150 ADD X1, X31, 0xC
	0x0263F154 STR W20, [X31 + 0xC]
	0x0263F158 BL 0x1C16E04
	0x0263F15C MOV X23, X0
	0x0263F160 CBZ X0, 0x263F178
	0x0263F164 LDR X8, [X22]
	0x0263F168 MOV X0, X23
	0x0263F16C LDR X1, [X8 + 0x40]
	0x0263F170 BL 0x1C16E00
	0x0263F174 CBZ X0, 0x263F608
	0x0263F178 LDR W8, [X22 + 0x18]
	0x0263F17C CMP W8, 0x3
	0x0263F180 B.LS 0x263F604
	0x0263F184 STR X23, [X22 + 0x38]
	0x0263F188 LDR W8, [X19 + 0x28]
	0x0263F18C LDR X0, [X24]
	0x0263F190 ADD X1, X31, 0x8
	0x0263F194 STR W8, [X31 + 0x8]
	0x0263F198 BL 0x1C16E04
	0x0263F19C MOV X23, X0
	0x0263F1A0 CBZ X0, 0x263F1B8
	0x0263F1A4 LDR X8, [X22]
	0x0263F1A8 MOV X0, X23
	0x0263F1AC LDR X1, [X8 + 0x40]
	0x0263F1B0 BL 0x1C16E00
	0x0263F1B4 CBZ X0, 0x263F608
	0x0263F1B8 LDR W8, [X22 + 0x18]
	0x0263F1BC CMP W8, 0x4
	0x0263F1C0 B.LS 0x263F604
	0x0263F1C4 STR X23, [X22 + 0x40]
	0x0263F1C8 LDR W8, [X19 + 0x4C]
	0x0263F1CC LDR X0, [X24]
	0x0263F1D0 ADD X1, X31, 0x4
	0x0263F1D4 ADD W8, W8, W20
	0x0263F1D8 STR W8, [X31 + 0x4]
	0x0263F1DC BL 0x1C16E04
	0x0263F1E0 MOV X19, X0
	0x0263F1E4 CBZ X0, 0x263F1FC
	0x0263F1E8 LDR X8, [X22]
	0x0263F1EC MOV X0, X19
	0x0263F1F0 LDR X1, [X8 + 0x40]
	0x0263F1F4 BL 0x1C16E00
	0x0263F1F8 CBZ X0, 0x263F608
	0x0263F1FC LDR W8, [X22 + 0x18]
	0x0263F200 CMP W8, 0x5
	0x0263F204 B.LS 0x263F604
	0x0263F208 STR X19, [X22 + 0x48]
	0x0263F20C CBZ X21, 0x263F614
	0x0263F210 ADRP X9, 0x1AB9000
	0x0263F214 LDR X8, [X21]
	0x0263F218 LDR X9, [X9 + 0x348]
	0x0263F21C ADRP X10, 0x1ADE000
	0x0263F220 LDR X1, [X9]
	0x0263F224 LDR X10, [X10 + 0x4B0]
	0x0263F228 LDRH W9, [X8 + 0x12E]
	0x0263F22C LDR X19, [X10]
	0x0263F230 CBZ X9, 0x263F254
	0x0263F234 LDR X10, [X8 + 0xB0]
	0x0263F238 ADD X10, X10, 0x8
	0x0263F23C LDUR X11, [X10 - 0x8]
	0x0263F240 CMP X11, X1
	0x0263F244 B.EQ 0x263F264
	0x0263F248 SUBS X9, X9, 0x1
	0x0263F24C ADD X10, X10, 0x10
	0x0263F250 B.NE 0x263F23C
	0x0263F254 MOVZ W2, 0x1
	0x0263F258 MOV X0, X21
	0x0263F25C BL 0x1C5C788
	0x0263F260 B 0x263F274
	0x0263F264 LDR W9, [X10]
	0x0263F268 ADD W9, W9, 0x1
	0x0263F26C ADD X8, X8, W9, 0x4, SXTW
	0x0263F270 ADD X0, X8, 0x138
	0x0263F274 LDP X8, X4, [X0]
	0x0263F278 MOVZ W1, 0x4
	0x0263F27C MOV X0, X21
	0x0263F280 MOV X2, X19
	0x0263F284 MOV X3, X22
	0x0263F288 BLR X8
	0x0263F28C B 0x263F5E4
	0x0263F290 LDR W9, [X10]
	0x0263F294 ADD W9, W9, 0x1
	0x0263F298 ADD X8, X8, W9, 0x4, SXTW
	0x0263F29C ADD X0, X8, 0x138
	0x0263F2A0 LDP X8, X4, [X0]
	0x0263F2A4 MOVZ W1, 0x4
	0x0263F2A8 MOV X0, X23
	0x0263F2AC MOV X2, X25
	0x0263F2B0 MOV X3, X24
	0x0263F2B4 BLR X8
	0x0263F2B8 LDR W8, [X19 + 0x4C]
	0x0263F2BC CMP W26, W8
	0x0263F2C0 B.GT 0x263F560
	0x0263F2C4 LDRB W8, [X19 + 0xA8]
	0x0263F2C8 CBZ W8, 0x263F560
	0x0263F2CC LDRB W27, [X19 + 0x90]
	0x0263F2D0 CBZ W27, 0x263F2E4
	0x0263F2D4 LDRB W8, [X19 + 0x70]
	0x0263F2D8 STRB W31, [X19 + 0xA8]
	0x0263F2DC CBNZ W8, 0x263F350
	0x0263F2E0 B 0x263F560
	0x0263F2E4 LDR X0, [X19 + 0x88]
	0x0263F2E8 CBZ X0, 0x263F614
	0x0263F2EC LDR X8, [X22 + 0x20]
	0x0263F2F0 MOV X1, X21
	0x0263F2F4 LDR X8, [X8 + 0xC0]
	0x0263F2F8 LDR X2, [X8 + 0x90]
	0x0263F2FC BL 0x26AFF90
	0x0263F300 LDR W8, [X19 + 0x44]
	0x0263F304 LDR W9, [X21 + 0x18]
	0x0263F308 LDR W10, [X19 + 0x10]
	0x0263F30C LDR X2, [X19 + 0x80]
	0x0263F310 MOV W3, W31
	0x0263F314 SDIV W9, W9, W8
	0x0263F318 MUL W8, W10, W8
	0x0263F31C SUB W23, W9, W0
	0x0263F320 MUL W1, W8, W0
	0x0263F324 MUL W4, W8, W23
	0x0263F328 MOV X0, X21
	0x0263F32C MOV X5, X31
	0x0263F330 BL 0x33A8A9C
	0x0263F334 LDR X1, [X19 + 0x80]
	0x0263F338 MOV X0, X19
	0x0263F33C MOV W2, W23
	0x0263F340 BL 0x263F73C
	0x0263F344 LDRB W8, [X19 + 0x70]
	0x0263F348 STRB W31, [X19 + 0xA8]
	0x0263F34C CBZ W8, 0x263F5E4
	0x0263F350 ADRP X8, 0x1AB4000
	0x0263F354 LDR X23, [X19 + 0x60]
	0x0263F358 LDR X8, [X8 + 0x9D0]
	0x0263F35C MOVZ W1, 0x6
	0x0263F360 LDR X0, [X8]
	0x0263F364 BL 0x1C16D6C
	0x0263F368 CBZ X0, 0x263F614
	0x0263F36C LDR X25, [X19 + 0x68]
	0x0263F370 MOV X24, X0
	0x0263F374 CBZ X25, 0x263F38C
	0x0263F378 LDR X8, [X24]
	0x0263F37C MOV X0, X25
	0x0263F380 LDR X1, [X8 + 0x40]
	0x0263F384 BL 0x1C16E00
	0x0263F388 CBZ X0, 0x263F608
	0x0263F38C LDR W8, [X24 + 0x18]
	0x0263F390 CBZ W8, 0x263F604
	0x0263F394 STR X25, [X24 + 0x20]
	0x0263F398 ADRP X28, 0x1AB4000
	0x0263F39C LDR W8, [X19 + 0x50]
	0x0263F3A0 LDR X28, [X28 + 0x758]
	0x0263F3A4 ADD X1, X31, 0x1C
	0x0263F3A8 STR W8, [X31 + 0x1C]
	0x0263F3AC LDR X0, [X28]
	0x0263F3B0 BL 0x1C16E04
	0x0263F3B4 MOV X25, X0
	0x0263F3B8 CBZ X0, 0x263F3D0
	0x0263F3BC LDR X8, [X24]
	0x0263F3C0 MOV X0, X25
	0x0263F3C4 LDR X1, [X8 + 0x40]
	0x0263F3C8 BL 0x1C16E00
	0x0263F3CC CBZ X0, 0x263F608
	0x0263F3D0 LDR W8, [X24 + 0x18]
	0x0263F3D4 CMP W8, 0x1
	0x0263F3D8 B.LS 0x263F604
	0x0263F3DC STR X25, [X24 + 0x28]
	0x0263F3E0 LDR X0, [X28]
	0x0263F3E4 ADD X1, X31, 0x18
	0x0263F3E8 STR W26, [X31 + 0x18]
	0x0263F3EC BL 0x1C16E04
	0x0263F3F0 MOV X25, X0
	0x0263F3F4 CBZ X0, 0x263F40C
	0x0263F3F8 LDR X8, [X24]
	0x0263F3FC MOV X0, X25
	0x0263F400 LDR X1, [X8 + 0x40]
	0x0263F404 BL 0x1C16E00
	0x0263F408 CBZ X0, 0x263F608
	0x0263F40C LDR W8, [X24 + 0x18]
	0x0263F410 CMP W8, 0x2
	0x0263F414 B.LS 0x263F604
	0x0263F418 STR X25, [X24 + 0x30]
	0x0263F41C LDR X0, [X28]
	0x0263F420 ADD X1, X31, 0xC
	0x0263F424 STR W20, [X31 + 0xC]
	0x0263F428 BL 0x1C16E04
	0x0263F42C MOV X25, X0
	0x0263F430 CBZ X0, 0x263F448
	0x0263F434 LDR X8, [X24]
	0x0263F438 MOV X0, X25
	0x0263F43C LDR X1, [X8 + 0x40]
	0x0263F440 BL 0x1C16E00
	0x0263F444 CBZ X0, 0x263F608
	0x0263F448 LDR W8, [X24 + 0x18]
	0x0263F44C CMP W8, 0x3
	0x0263F450 B.LS 0x263F604
	0x0263F454 STR X25, [X24 + 0x38]
	0x0263F458 LDR W8, [X19 + 0x28]
	0x0263F45C LDR X0, [X28]
	0x0263F460 ADD X1, X31, 0x8
	0x0263F464 STR W8, [X31 + 0x8]
	0x0263F468 BL 0x1C16E04
	0x0263F46C MOV X25, X0
	0x0263F470 CBZ X0, 0x263F488
	0x0263F474 LDR X8, [X24]
	0x0263F478 MOV X0, X25
	0x0263F47C LDR X1, [X8 + 0x40]
	0x0263F480 BL 0x1C16E00
	0x0263F484 CBZ X0, 0x263F608
	0x0263F488 LDR W8, [X24 + 0x18]
	0x0263F48C CMP W8, 0x4

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+48], X26
	004 Move [X31+56], X25
	005 Move [X31+64], X24
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X24, 0x1D9D000
	012 Move W8, [X24+229]
	013 Move X20, X4
	014 Move W22, W3
	015 Move W23, W2
	016 Move W21, W1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {48}
	022 Move X0, 0x1ABB000
	023 Move X0, [X0+840]
	024 Call 0x1C17CF4
	025 Move X0, 0x1AB6000
	026 Move X0, [X0+1880]
	027 Call 0x1C17CF4
	028 Move X0, 0x1AB6000
	029 Move X0, [X0+2512]
	030 Call 0x1C17CF4
	031 Move X0, 0x1AE0000
	032 Move X0, [X0+1136]
	033 Call 0x1C17CF4
	034 Move X0, 0x1AE0000
	035 Move X0, [X0+1144]
	036 Call 0x1C17CF4
	037 Move X0, 0x1AE0000
	038 Move X0, [X0+1152]
	039 Call 0x1C17CF4
	040 Move X0, 0x1AE0000
	041 Move X0, [X0+1160]
	042 Call 0x1C17CF4
	043 Move X0, 0x1AE0000
	044 Move X0, [X0+1168]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X24+229], W8
	048 Move W10, [X19+52]
	049 Move W11, [X19+56]
	050 Move W12, [X19+60]
	051 Move W8, 0x6667
	052 Move W9, 0x4DD3
	053 NotImplemented "Instruction MOVK not yet implemented."
	054 NotImplemented "Instruction MOVK not yet implemented."
	055 Subtract W12, W12, W11
	056 Subtract W11, W11, W10
	057 Multiply W10, W10, W21
	058 NotImplemented "Instruction SMADDL not yet implemented."
	059 NotImplemented "Instruction SMADDL not yet implemented."
	060 Multiply W11, W11, W21
	061 Multiply W12, W12, W21
	062 Move X13, X8
	063 ShiftRight X13, 32
	064 And X13, X13, 0x7FFFFFFF
	065 Move X8, X8
	066 ShiftRight X8, 63
	067 And X8, X8, 0x7FFFFFFF
	068 NotImplemented "Instruction SMADDL not yet implemented."
	069 NotImplemented "Instruction SMADDL not yet implemented."
	070 Move X12, X10
	071 ShiftRight X12, 32
	072 And X12, X12, 0x7FFFFFFF
	073 Move X10, X10
	074 ShiftRight X10, 63
	075 And X10, X10, 0x7FFFFFFF
	076 Add W8, W8, W13
	077 Add W10, W10, W12
	078 Move X12, X11
	079 ShiftRight X12, 32
	080 And X12, X12, 0x7FFFFFFF
	081 Move X11, X11
	082 ShiftRight X11, 63
	083 And X11, X11, 0x7FFFFFFF
	084 Add W11, W11, W12
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction CSEL not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X12, X9
	089 ShiftRight X12, 32
	090 And X12, X12, 0x7FFFFFFF
	091 Move X9, X9
	092 ShiftRight X9, 63
	093 And X9, X9, 0x7FFFFFFF
	094 NotImplemented "Instruction CSEL not yet implemented."
	095 Add W9, W9, W12
	096 Add W8, W8, W10
	097 Move [X19+76], W10
	098 Move [X19+80], W8
	099 Add W8, W8, W9
	100 Move [X19+84], W8
	101 Move W8, W8
	102 ShiftRight W8, 30
	103 And W8, W8, 0x1FFFFFFF
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X0, [X19+160]
	106 NotImplemented "Instruction CSEL not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 NotImplemented "Instruction CINC not yet implemented."
	109 Multiply W24, W22, W23
	110 NotImplemented "Instruction SBFM not yet implemented."
	111 Move [X19+68], W23
	112 Move [X19+20], W22
	113 Move [X19+24], W24
	114 Move [X19+28], W8
	115 Move [X19+32], W9
	116 Move [X19+36], W21
	117 Move [X19+40], W10
	118 Compare X0, 0
	119 JumpIfEqual {411}
	120 Move W8, [X0+20]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X8, [X20+32]
	123 Move W1, W24
	124 Move X8, [X8+192]
	125 Move X2, [X8+88]
	126 Call ObjectPool`2<Object, Int32>.Init, X0, X1
	127 Move W24, [X19+24]
	128 Move X8, [X20+32]
	129 Move X8, [X8+192]
	130 Move X0, [X8+96]
	131 Move W8, [X0+309]
	132 Move TEMP, X8
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfEqual {137}
	136 Call 0x1C5D684
	137 Move W1, W24
	138 Call 0x1C17D6C
	139 Move [X19+120], X0
	140 Move X8, [X20+32]
	141 Move W22, [X19+24]
	142 Move X8, [X8+192]
	143 Move X0, [X8+96]
	144 Move W8, [X0+309]
	145 Move TEMP, X8
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {150}
	149 Call 0x1C5D684
	150 Move X24, 0x1AB5000
	151 Move X24, [X24+2512]
	152 Move W1, W22
	153 Call 0x1C17D6C
	154 Move [X19+128], X0
	155 Move [X19+144], W31
	156 Move X8, [X20+32]
	157 Move X8, [X8+192]
	158 Move X0, [X8+104]
	159 Move W8, [X0+309]
	160 Move TEMP, X8
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfEqual {165}
	164 Call 0x1C5D684
	165 Call 0x1C17F10
	166 Move X8, [X20+32]
	167 Move X20, X0
	168 Move X8, [X8+192]
	169 Move X1, [X8+112]
	170 Call 0x26B196C, X0
	171 Move X8, [X19]
	172 Move [X19+136], X20
	173 Move W3, [X19+28]
	174 Move X0, X19
	175 Move X9, [X8+504]
	176 Move X4, [X8+512]
	177 Move W1, W21
	178 Move W2, W23
	179 NotImplemented "Instruction BLR not yet implemented."
	180 Move X8, [X19]
	181 Move X0, X19
	182 Move X9, [X8+520]
	183 Move X1, [X8+528]
	184 NotImplemented "Instruction BLR not yet implemented."
	185 Move W8, 1
	186 Move [X19+72], W8
	187 Move X0, [X24]
	188 Move X20, [X19+96]
	189 Move W1, 10
	190 Call 0x1C17D6C
	191 Compare X0, 0
	192 JumpIfEqual {411}
	193 Move X24, [X19+104]
	194 Move X22, X0
	195 Compare X24, 0
	196 JumpIfEqual {203}
	197 Move X8, [X22]
	198 Move X0, X24
	199 Move X1, [X8+64]
	200 Call 0x1C17E00
	201 Compare X0, 0
	202 JumpIfEqual {408}
	203 Move W8, [X22+24]
	204 Compare W8, 0
	205 JumpIfEqual {407}
	206 Move [X22+32], X24
	207 Move W9, [X19+16]
	208 Move X10, 0x1ADF000
	209 Move X11, 0x1ADF000
	210 Move X12, 0x1ADF000
	211 Move X10, [X10+1152]
	212 Move X11, [X11+1144]
	213 Move X12, [X12+1168]
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move X24, [X10]
	216 NotImplemented "Instruction CSEL not yet implemented."
	217 Move X25, [X9]
	218 Compare X25, 0
	219 JumpIfEqual {227}
	220 Move X8, [X22]
	221 Move X0, X25
	222 Move X1, [X8+64]
	223 Call 0x1C17E00
	224 Compare X0, 0
	225 JumpIfEqual {408}
	226 Move W8, [X22+24]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move X26, 0x1AB5000
	229 Move X26, [X26+1880]
	230 Move [X22+40], X25
	231 Move W8, [X19+28]
	232 Add X1, X31, 44
	233 Move X0, [X26]
	234 Move [X31+44], W8
	235 Call 0x1C17E04
	236 Move X25, X0
	237 Compare X0, 0
	238 JumpIfEqual {245}
	239 Move X8, [X22]
	240 Move X0, X25
	241 Move X1, [X8+64]
	242 Call 0x1C17E00
	243 Compare X0, 0
	244 JumpIfEqual {408}
	245 Move W8, [X22+24]
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Move [X22+48], X25
	248 Move X0, [X26]
	249 Add X1, X31, 40
	250 Move [X31+40], W23
	251 Call 0x1C17E04
	252 Move X23, X0
	253 Compare X0, 0
	254 JumpIfEqual {261}
	255 Move X8, [X22]
	256 Move X0, X23
	257 Move X1, [X8+64]
	258 Call 0x1C17E00
	259 Compare X0, 0
	260 JumpIfEqual {408}
	261 Move W8, [X22+24]
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Move [X22+56], X23
	264 Move X0, [X26]
	265 Add X1, X31, 28
	266 Move [X31+28], W21
	267 Call 0x1C17E04
	268 Move X21, X0
	269 Compare X0, 0
	270 JumpIfEqual {277}
	271 Move X8, [X22]
	272 Move X0, X21
	273 Move X1, [X8+64]
	274 Call 0x1C17E00
	275 Compare X0, 0
	276 JumpIfEqual {408}
	277 Move W8, [X22+24]
	278 NotImplemented "Instruction CMP not yet implemented."
	279 Move [X22+64], X21
	280 Move W8, [X19+76]
	281 Move X0, [X26]
	282 Add X1, X31, 24
	283 Move [X31+24], W8
	284 Call 0x1C17E04
	285 Move X21, X0
	286 Compare X0, 0
	287 JumpIfEqual {294}
	288 Move X8, [X22]
	289 Move X0, X21
	290 Move X1, [X8+64]
	291 Call 0x1C17E00
	292 Compare X0, 0
	293 JumpIfEqual {408}
	294 Move W8, [X22+24]
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Move [X22+72], X21
	297 Move W8, [X19+80]
	298 Move X0, [X26]
	299 Add X1, X31, 20
	300 Move [X31+20], W8
	301 Call 0x1C17E04
	302 Move X21, X0
	303 Compare X0, 0
	304 JumpIfEqual {311}
	305 Move X8, [X22]
	306 Move X0, X21
	307 Move X1, [X8+64]
	308 Call 0x1C17E00
	309 Compare X0, 0
	310 JumpIfEqual {408}
	311 Move W8, [X22+24]
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Move [X22+80], X21
	314 Move W8, [X19+84]
	315 Move X0, [X26]
	316 Add X1, X31, 16
	317 Move [X31+16], W8
	318 Call 0x1C17E04
	319 Move X21, X0
	320 Compare X0, 0
	321 JumpIfEqual {328}
	322 Move X8, [X22]
	323 Move X0, X21
	324 Move X1, [X8+64]
	325 Call 0x1C17E00
	326 Compare X0, 0
	327 JumpIfEqual {408}
	328 Move W8, [X22+24]
	329 NotImplemented "Instruction CMP not yet implemented."
	330 Move [X22+88], X21
	331 Move W8, [X19+64]
	332 Move X0, [X26]
	333 Add X1, X31, 12
	334 Move [X31+12], W8
	335 Call 0x1C17E04
	336 Move X21, X0
	337 Compare X0, 0
	338 JumpIfEqual {345}
	339 Move X8, [X22]
	340 Move X0, X21
	341 Move X1, [X8+64]
	342 Call 0x1C17E00
	343 Compare X0, 0
	344 JumpIfEqual {408}
	345 Move W8, [X22+24]
	346 NotImplemented "Instruction CMP not yet implemented."
	347 Move [X22+96], X21
	348 Move W9, [X19+144]
	349 Move X10, 0x1ADF000
	350 Move X11, 0x1ADF000
	351 Move X10, [X10+1136]
	352 Move X11, [X11+1160]
	353 NotImplemented "Instruction CMP not yet implemented."
	354 NotImplemented "Instruction CSEL not yet implemented."
	355 Move X19, [X9]
	356 Compare X19, 0
	357 JumpIfEqual {365}
	358 Move X8, [X22]
	359 Move X0, X19
	360 Move X1, [X8+64]
	361 Call 0x1C17E00
	362 Compare X0, 0
	363 JumpIfEqual {408}
	364 Move W8, [X22+24]
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Move [X22+104], X19
	367 Compare X20, 0
	368 JumpIfEqual {411}
	369 Move X10, 0x1ABA000
	370 Move X8, [X20]
	371 Move X10, [X10+840]
	372 NotImplemented "Instruction LDRH not yet implemented."
	373 Move X1, [X10]
	374 Compare X9, 0
	375 JumpIfEqual {382}
	376 Move X10, [X8+176]
	377 Add X10, X10, 8
	378 NotImplemented "Instruction LDUR not yet implemented."
	379 NotImplemented "Instruction CMP not yet implemented."
	380 Subtract X9, X9, 1
	381 Add X10, X10, 16
	382 Move W2, 1
	383 Move X0, X20
	384 Call 0x1C5D788
	385 Move W9, [X10]
	386 Add W9, W9, 1
	387 Add X8, X8, W9
	388 Add X0, X8, 312
	389 Move X8, [X0]
	390 Move X4, [X0+8]
	391 Move W1, 3
	392 Move X0, X20
	393 Move X2, X24
	394 Move X3, X22
	395 NotImplemented "Instruction BLR not yet implemented."
	396 Move X20, [X31+96]
	397 Move X19, [X31+104]
	398 Move X22, [X31+80]
	399 Move X21, [X31+88]
	400 Move X24, [X31+64]
	401 Move X23, [X31+72]
	402 Move X26, [X31+48]
	403 Move X25, [X31+56]
	404 Move X30, [X31+32]
	405 Add X31, X31, 112
	406 Return 
	407 Call 0x1C17F28
	408 Call 0x1C17F44
	409 Move X1, X31
	410 Call 0x1C17DEC
	411 Call 0x1C17F20

Method: System.Void processFrame(T[] frame, System.Int32 playSamplePos)

Disassembly:
	0x0263F490 B.LS 0x263F604
	0x0263F494 STR X25, [X24 + 0x40]
	0x0263F498 LDR W8, [X19 + 0x4C]
	0x0263F49C LDR X0, [X28]
	0x0263F4A0 ADD X1, X31, 0x4
	0x0263F4A4 ADD W8, W8, W20
	0x0263F4A8 STR W8, [X31 + 0x4]
	0x0263F4AC BL 0x1C16E04
	0x0263F4B0 MOV X20, X0
	0x0263F4B4 CBZ X0, 0x263F4CC
	0x0263F4B8 LDR X8, [X24]
	0x0263F4BC MOV X0, X20
	0x0263F4C0 LDR X1, [X8 + 0x40]
	0x0263F4C4 BL 0x1C16E00
	0x0263F4C8 CBZ X0, 0x263F608
	0x0263F4CC LDR W8, [X24 + 0x18]
	0x0263F4D0 CMP W8, 0x5
	0x0263F4D4 B.LS 0x263F604
	0x0263F4D8 STR X20, [X24 + 0x48]
	0x0263F4DC CBZ X23, 0x263F614
	0x0263F4E0 ADRP X9, 0x1AB9000
	0x0263F4E4 LDR X8, [X23]
	0x0263F4E8 LDR X9, [X9 + 0x348]
	0x0263F4EC ADRP X10, 0x1ADE000
	0x0263F4F0 LDR X1, [X9]
	0x0263F4F4 LDR X10, [X10 + 0x4C0]
	0x0263F4F8 LDRH W9, [X8 + 0x12E]
	0x0263F4FC LDR X20, [X10]
	0x0263F500 CBZ X9, 0x263F524
	0x0263F504 LDR X10, [X8 + 0xB0]
	0x0263F508 ADD X10, X10, 0x8
	0x0263F50C LDUR X11, [X10 - 0x8]
	0x0263F510 CMP X11, X1
	0x0263F514 B.EQ 0x263F534
	0x0263F518 SUBS X9, X9, 0x1
	0x0263F51C ADD X10, X10, 0x10
	0x0263F520 B.NE 0x263F50C
	0x0263F524 MOVZ W2, 0x1
	0x0263F528 MOV X0, X23
	0x0263F52C BL 0x1C5C788
	0x0263F530 B 0x263F544
	0x0263F534 LDR W9, [X10]
	0x0263F538 ADD W9, W9, 0x1
	0x0263F53C ADD X8, X8, W9, 0x4, SXTW
	0x0263F540 ADD X0, X8, 0x138
	0x0263F544 LDP X8, X4, [X0]
	0x0263F548 MOVZ W1, 0x4
	0x0263F54C MOV X0, X23
	0x0263F550 MOV X2, X20
	0x0263F554 MOV X3, X24
	0x0263F558 BLR X8
	0x0263F55C CBZ W27, 0x263F5E4
	0x0263F560 LDRB W8, [X19 + 0xA8]
	0x0263F564 CBZ W8, 0x263F5A4
	0x0263F568 LDRB W8, [X19 + 0x90]
	0x0263F56C CBNZ W8, 0x263F5E4
	0x0263F570 LDR X0, [X19 + 0x88]
	0x0263F574 CBZ X0, 0x263F614
	0x0263F578 LDR X8, [X22 + 0x20]
	0x0263F57C LDR X2, [X19 + 0x80]
	0x0263F580 MOV X1, X21
	0x0263F584 LDR X8, [X8 + 0xC0]
	0x0263F588 LDR X3, [X8 + 0xA0]
	0x0263F58C BL 0x26AFEC0
	0x0263F590 LDR X1, [X19 + 0x80]
	0x0263F594 MOV W2, W0
	0x0263F598 MOV X0, X19
	0x0263F59C BL 0x263F73C
	0x0263F5A0 B 0x263F5E4
	0x0263F5A4 LDR X8, [X19]
	0x0263F5A8 LDR W2, [X19 + 0x28]
	0x0263F5AC MOV X0, X19
	0x0263F5B0 MOV X1, X21
	0x0263F5B4 LDR X9, [X8 + 0x218]
	0x0263F5B8 LDR X3, [X8 + 0x220]
	0x0263F5BC BLR X9
	0x0263F5C0 LDR W8, [X19 + 0x44]
	0x0263F5C4 LDR W9, [X21 + 0x18]
	0x0263F5C8 LDR W10, [X19 + 0x28]
	0x0263F5CC LDR W11, [X19 + 0x1C]
	0x0263F5D0 SDIV W8, W9, W8
	0x0263F5D4 ADD W8, W8, W10
	0x0263F5D8 SDIV W9, W8, W11
	0x0263F5DC MSUB W8, W9, W11, W8
	0x0263F5E0 STR W8, [X19 + 0x28]
	0x0263F5E4 LDP X20, X19, [X31 + 0x60]
	0x0263F5E8 LDP X22, X21, [X31 + 0x50]
	0x0263F5EC LDP X24, X23, [X31 + 0x40]
	0x0263F5F0 LDP X26, X25, [X31 + 0x30]
	0x0263F5F4 LDP X28, X27, [X31 + 0x20]
	0x0263F5F8 LDR X30, [X31 + 0x10]
	0x0263F5FC ADD X31, X31, 0x70
	0x0263F600 RET
	0x0263F604 BL 0x1C16F28
	0x0263F608 BL 0x1C16F44
	0x0263F60C MOV X1, X31
	0x0263F610 BL 0x1C16DEC
	0x0263F614 BL 0x1C16F20
	0x0263F618 STR X30, [X31 - 0x20]!
	0x0263F61C STP X20, X19, [X31 + 0x10]
	0x0263F620 STR X31, [X31 + 0x8]
	0x0263F624 LDRB W8, [X0 + 0x48]
	0x0263F628 CBZ W8, 0x263F72C
	0x0263F62C LDR X8, [X0]
	0x0263F630 MOV X20, X1
	0x0263F634 MOV X19, X0
	0x0263F638 LDP X9, X1, [X8 + 0x1E8]
	0x0263F63C BLR X9
	0x0263F640 LDRSW X8, [X19 + 0x1C]
	0x0263F644 LDRB W10, [X19 + 0x71]
	0x0263F648 SDIV X9, X0, X8
	0x0263F64C MSUB W9, W9, W8, W0
	0x0263F650 STR W9, [X19 + 0x30]
	0x0263F654 CBZ W10, 0x263F6BC
	0x0263F658 LDR X0, [X19 + 0x98]
	0x0263F65C CBZ X0, 0x263F738
	0x0263F660 LDR X8, [X20 + 0x20]
	0x0263F664 ADD X1, X31, 0x8
	0x0263F668 LDR X8, [X8 + 0xC0]
	0x0263F66C LDR X2, [X8 + 0xB8]
	0x0263F670 BL 0x2992E94
	0x0263F674 TBZ X0, 0x0, 0x263F6B8
	0x0263F678 LDR X8, [X20 + 0x20]
	0x0263F67C LDR X1, [X31 + 0x8]
	0x0263F680 LDR W2, [X19 + 0x30]
	0x0263F684 MOV X0, X19
	0x0263F688 LDR X8, [X8 + 0xC0]
	0x0263F68C LDR X3, [X8 + 0xC8]
	0x0263F690 BL 0x263E490
	0x0263F694 LDR X1, [X31 + 0x8]
	0x0263F698 CBZ X1, 0x263F6B8
	0x0263F69C LDR X0, [X19 + 0xA0]
	0x0263F6A0 CBZ X0, 0x263F738
	0x0263F6A4 LDR X8, [X0]
	0x0263F6A8 LDR W2, [X1 + 0x18]
	0x0263F6AC LDP X9, X3, [X8 + 0x1B8]
	0x0263F6B0 BLR X9
	0x0263F6B4 B 0x263F658
	0x0263F6B8 LDR W9, [X19 + 0x30]
	0x0263F6BC LDR W8, [X19 + 0x2C]
	0x0263F6C0 CMP W8, W9
	0x0263F6C4 B.LE 0x263F6D4
	0x0263F6C8 LDR W10, [X19 + 0x1C]
	0x0263F6CC SUB W8, W8, W10
	0x0263F6D0 STR W8, [X19 + 0x2C]
	0x0263F6D4 LDR W10, [X19 + 0x14]
	0x0263F6D8 ADD W10, W10, W8
	0x0263F6DC CMP W10, W9
	0x0263F6E0 B.GE 0x263F72C
	0x0263F6E4 LDR W9, [X19 + 0x1C]
	0x0263F6E8 LDR X10, [X19]
	0x0263F6EC LDR X1, [X19 + 0x78]
	0x0263F6F0 MOV X0, X19
	0x0263F6F4 SDIV W11, W8, W9
	0x0263F6F8 LDR X12, [X10 + 0x218]
	0x0263F6FC LDR X3, [X10 + 0x220]
	0x0263F700 MSUB W8, W11, W9, W8
	0x0263F704 AND W9, W9, W8, 0x1F
	0x0263F708 ADD W2, W9, W8
	0x0263F70C BLR X12
	0x0263F710 LDR W9, [X19 + 0x14]
	0x0263F714 LDP W8, W10, [X19 + 0x2C]
	0x0263F718 ADD W8, W9, W8
	0x0263F71C ADD W9, W9, W8
	0x0263F720 CMP W9, W10
	0x0263F724 STR W8, [X19 + 0x2C]
	0x0263F728 B.LT 0x263F6E4
	0x0263F72C LDP X20, X19, [X31 + 0x10]
	0x0263F730 LDR X30, [X31], #0x20
	0x0263F734 RET
	0x0263F738 BL 0x1C16F20
	0x0263F73C STP X30, X21, [X31 - 0x20]!
	0x0263F740 STP X20, X19, [X31 + 0x10]
	0x0263F744 CBZ X1, 0x263F7D0
	0x0263F748 LDR W9, [X0 + 0x44]
	0x0263F74C LDR W10, [X1 + 0x18]
	0x0263F750 LDR W8, [X0 + 0x10]
	0x0263F754 MOV W19, W2
	0x0263F758 MUL W9, W9, W2
	0x0263F75C SUB W10, W10, W9
	0x0263F760 MUL W4, W10, W8
	0x0263F764 MOV X21, X1
	0x0263F768 MOV X20, X0
	0x0263F76C CMP W4, 0x1
	0x0263F770 B.LT 0x263F78C
	0x0263F774 LDR X0, [X20 + 0x78]
	0x0263F778 MUL W3, W8, W9
	0x0263F77C MOV W1, W31
	0x0263F780 MOV X2, X21
	0x0263F784 MOV X5, X31
	0x0263F788 BL 0x33A8A9C
	0x0263F78C LDR X8, [X20]
	0x0263F790 LDR W2, [X20 + 0x28]
	0x0263F794 MOV X0, X20
	0x0263F798 MOV X1, X21
	0x0263F79C LDR X9, [X8 + 0x218]
	0x0263F7A0 LDR X3, [X8 + 0x220]
	0x0263F7A4 BLR X9
	0x0263F7A8 LDR W8, [X20 + 0x28]
	0x0263F7AC LDR W9, [X20 + 0x1C]
	0x0263F7B0 MOV W0, W19
	0x0263F7B4 ADD W8, W8, W19
	0x0263F7B8 SDIV W10, W8, W9
	0x0263F7BC MSUB W8, W10, W9, W8
	0x0263F7C0 STR W8, [X20 + 0x28]
	0x0263F7C4 LDP X20, X19, [X31 + 0x10]
	0x0263F7C8 LDP X30, X21, [X31], #0x20
	0x0263F7CC RET
	0x0263F7D0 BL 0x1C16F20
	0x0263F7D4 SUB X31, X31, 0x40
	0x0263F7D8 STP X30, X23, [X31 + 0x10]
	0x0263F7DC STP X22, X21, [X31 + 0x20]
	0x0263F7E0 STP X20, X19, [X31 + 0x30]
	0x0263F7E4 ADRP X21, 0x1D9B000
	0x0263F7E8 LDRB W8, [X21 + 0xE7]
	0x0263F7EC MOV X20, X2
	0x0263F7F0 MOV X22, X1
	0x0263F7F4 MOV X19, X0
	0x0263F7F8 TBNZ X8, 0x0, 0x263F834
	0x0263F7FC ADRP X0, 0x1AB9000
	0x0263F800 LDR X0, [X0 + 0x348]
	0x0263F804 BL 0x1C16CF4
	0x0263F808 ADRP X0, 0x1AB4000
	0x0263F80C LDR X0, [X0 + 0x758]
	0x0263F810 BL 0x1C16CF4
	0x0263F814 ADRP X0, 0x1AB4000
	0x0263F818 LDR X0, [X0 + 0x9D0]
	0x0263F81C BL 0x1C16CF4
	0x0263F820 ADRP X0, 0x1ADE000
	0x0263F824 LDR X0, [X0 + 0x4D0]
	0x0263F828 BL 0x1C16CF4
	0x0263F82C MOVZ W8, 0x1
	0x0263F830 STRB W8, [X21 + 0xE7]
	0x0263F834 LDRB W8, [X19 + 0x48]
	0x0263F838 CBZ W8, 0x263FA38
	0x0263F83C CBZ X22, 0x263FA4C
	0x0263F840 LDR X8, [X22 + 0x18]
	0x0263F844 CBZ X8, 0x263FA38
	0x0263F848 LDR W9, [X19 + 0x18]
	0x0263F84C CMP W9, W8
	0x0263F850 B.NE 0x263F8BC
	0x0263F854 LDRB W8, [X19 + 0x71]
	0x0263F858 CBZ W8, 0x263F9E4
	0x0263F85C LDR X0, [X19 + 0xA0]
	0x0263F860 CBZ X0, 0x263FA4C
	0x0263F864 LDR X8, [X20 + 0x20]
	0x0263F868 LDR X8, [X8 + 0xC0]
	0x0263F86C LDR X1, [X8 + 0xD8]
	0x0263F870 BL 0x2495ADC
	0x0263F874 LDR W8, [X19 + 0x10]
	0x0263F878 LDR W9, [X22 + 0x18]
	0x0263F87C MOV X21, X0
	0x0263F880 MOV X0, X22
	0x0263F884 MOV W1, W31
	0x0263F888 MUL W4, W8, W9
	0x0263F88C MOV X2, X21
	0x0263F890 MOV W3, W31
	0x0263F894 MOV X5, X31
	0x0263F898 BL 0x33A8A9C
	0x0263F89C LDR X0, [X19 + 0x98]
	0x0263F8A0 CBZ X0, 0x263FA4C
	0x0263F8A4 LDR X8, [X20 + 0x20]
	0x0263F8A8 MOV X1, X21
	0x0263F8AC LDR X8, [X8 + 0xC0]
	0x0263F8B0 LDR X2, [X8 + 0xE0]
	0x0263F8B4 BL 0x2992C14
	0x0263F8B8 B 0x263FA00
	0x0263F8BC ADRP X8, 0x1AB4000
	0x0263F8C0 LDR X20, [X19 + 0x60]
	0x0263F8C4 LDR X8, [X8 + 0x9D0]
	0x0263F8C8 MOVZ W1, 0x3
	0x0263F8CC LDR X0, [X8]
	0x0263F8D0 BL 0x1C16D6C
	0x0263F8D4 CBZ X0, 0x263FA4C
	0x0263F8D8 LDR X23, [X19 + 0x68]
	0x0263F8DC MOV X21, X0
	0x0263F8E0 CBZ X23, 0x263F8F8
	0x0263F8E4 LDR X8, [X21]
	0x0263F8E8 MOV X0, X23
	0x0263F8EC LDR X1, [X8 + 0x40]
	0x0263F8F0 BL 0x1C16E00
	0x0263F8F4 CBZ X0, 0x263FA54
	0x0263F8F8 LDR W8, [X21 + 0x18]
	0x0263F8FC CBZ W8, 0x263FA50
	0x0263F900 STR X23, [X21 + 0x20]
	0x0263F904 ADRP X23, 0x1AB4000
	0x0263F908 LDR X8, [X22 + 0x18]
	0x0263F90C LDR X23, [X23 + 0x758]
	0x0263F910 ADD X1, X31, 0xC
	0x0263F914 STR W8, [X31 + 0xC]
	0x0263F918 LDR X0, [X23]
	0x0263F91C BL 0x1C16E04
	0x0263F920 MOV X22, X0
	0x0263F924 CBZ X0, 0x263F93C
	0x0263F928 LDR X8, [X21]
	0x0263F92C MOV X0, X22
	0x0263F930 LDR X1, [X8 + 0x40]
	0x0263F934 BL 0x1C16E00
	0x0263F938 CBZ X0, 0x263FA54
	0x0263F93C LDR W8, [X21 + 0x18]
	0x0263F940 CMP W8, 0x1
	0x0263F944 B.LS 0x263FA50
	0x0263F948 STR X22, [X21 + 0x28]
	0x0263F94C LDR W8, [X19 + 0x18]
	0x0263F950 LDR X0, [X23]
	0x0263F954 ADD X1, X31, 0x8
	0x0263F958 STR W8, [X31 + 0x8]
	0x0263F95C BL 0x1C16E04
	0x0263F960 MOV X19, X0
	0x0263F964 CBZ X0, 0x263F97C
	0x0263F968 LDR X8, [X21]
	0x0263F96C MOV X0, X19
	0x0263F970 LDR X1, [X8 + 0x40]
	0x0263F974 BL 0x1C16E00
	0x0263F978 CBZ X0, 0x263FA54
	0x0263F97C LDR W8, [X21 + 0x18]
	0x0263F980 CMP W8, 0x2
	0x0263F984 B.LS 0x263FA50
	0x0263F988 STR X19, [X21 + 0x30]
	0x0263F98C CBZ X20, 0x263FA4C
	0x0263F990 ADRP X9, 0x1AB9000
	0x0263F994 LDR X8, [X20]
	0x0263F998 LDR X9, [X9 + 0x348]
	0x0263F99C ADRP X10, 0x1ADE000
	0x0263F9A0 LDR X1, [X9]
	0x0263F9A4 LDR X10, [X10 + 0x4D0]
	0x0263F9A8 LDRH W9, [X8 + 0x12E]
	0x0263F9AC LDR X19, [X10]
	0x0263F9B0 CBZ X9, 0x263F9D4
	0x0263F9B4 LDR X10, [X8 + 0xB0]
	0x0263F9B8 ADD X10, X10, 0x8
	0x0263F9BC LDUR X11, [X10 - 0x8]
	0x0263F9C0 CMP X11, X1
	0x0263F9C4 B.EQ 0x263FA10
	0x0263F9C8 SUBS X9, X9, 0x1
	0x0263F9CC ADD X10, X10, 0x10
	0x0263F9D0 B.NE 0x263F9BC
	0x0263F9D4 MOVZ W2, 0x1
	0x0263F9D8 MOV X0, X20
	0x0263F9DC BL 0x1C5C788
	0x0263F9E0 B 0x263FA20
	0x0263F9E4 LDR X8, [X20 + 0x20]
	0x0263F9E8 LDR W2, [X19 + 0x30]
	0x0263F9EC MOV X0, X19
	0x0263F9F0 MOV X1, X22
	0x0263F9F4 LDR X8, [X8 + 0xC0]
	0x0263F9F8 LDR X3, [X8 + 0xC8]
	0x0263F9FC BL 0x263E490
	0x0263FA00 MOV X0, X31
	0x0263FA04 BL 0x33C18F4
	0x0263FA08 STR W0, [X19 + 0x58]
	0x0263FA0C B 0x263FA38
	0x0263FA10 LDR W9, [X10]
	0x0263FA14 ADD W9, W9, 0x1
	0x0263FA18 ADD X8, X8, W9, 0x4, SXTW
	0x0263FA1C ADD X0, X8, 0x138
	0x0263FA20 LDP X8, X4, [X0]
	0x0263FA24 MOVZ W1, 0x1
	0x0263FA28 MOV X0, X20
	0x0263FA2C MOV X2, X19
	0x0263FA30 MOV X3, X21
	0x0263FA34 BLR X8
	0x0263FA38 LDP X20, X19, [X31 + 0x30]
	0x0263FA3C LDP X22, X21, [X31 + 0x20]
	0x0263FA40 LDP X30, X23, [X31 + 0x10]
	0x0263FA44 ADD X31, X31, 0x40
	0x0263FA48 RET
	0x0263FA4C BL 0x1C16F20
	0x0263FA50 BL 0x1C16F28
	0x0263FA54 BL 0x1C16F44
	0x0263FA58 MOV X1, X31
	0x0263FA5C BL 0x1C16DEC
	0x0263FA60 STR X30, [X31 - 0x10]!
	0x0263FA64 LDRB W8, [X0 + 0x71]
	0x0263FA68 CBZ W8, 0x263FA8C
	0x0263FA6C LDR X0, [X0 + 0x98]
	0x0263FA70 CBZ X0, 0x263FAA8
	0x0263FA74 LDR X8, [X1 + 0x20]
	0x0263FA78 MOV X1, X31
	0x0263FA7C LDR X8, [X8 + 0xC0]
	0x0263FA80 LDR X2, [X8 + 0xE0]
	0x0263FA84 LDR X30, [X31], #0x10
	0x0263FA88 B 0x2992C14
	0x0263FA8C LDR X8, [X1 + 0x20]
	0x0263FA90 LDR W2, [X0 + 0x30]
	0x0263FA94 MOV X1, X31
	0x0263FA98 LDR X8, [X8 + 0xC0]
	0x0263FA9C LDR X3, [X8 + 0xC8]
	0x0263FAA0 LDR X30, [X31], #0x10
	0x0263FAA4 B 0x263E490
	0x0263FAA8 BL 0x1C16F20
	0x0263FAAC STRB W31, [X0 + 0x48]
	0x0263FAB0 RET
	0x0263FAB4 LDR X8, [X0 + 0x78]
	0x0263FAB8 CMP X8, X1
	0x0263FABC CSET W0, EQ
	0x0263FAC0 RET
	0x0263FAC4 STP X29, X30, [X31 - 0x60]!
	0x0263FAC8 STP X28, X27, [X31 + 0x10]
	0x0263FACC STP X26, X25, [X31 + 0x20]
	0x0263FAD0 STP X24, X23, [X31 + 0x30]
	0x0263FAD4 STP X22, X21, [X31 + 0x40]
	0x0263FAD8 STP X20, X19, [X31 + 0x50]
	0x0263FADC ADD X29, X31, 0x0
	0x0263FAE0 SUB X31, X31, 0x40
	0x0263FAE4 STP X4, X5, [X29 - 0x28]
	0x0263FAE8 STP X2, X3, [X29 - 0x38]
	0x0263FAEC MRS X20, 0xC000
	0x0263FAF0 LDR X8, [X20 + 0x28]
	0x0263FAF4 ADRP X19, 0x1D9B000
	0x0263FAF8 ADRP X22, 0x1ADC000
	0x0263FAFC MOV X24, X7
	0x0263FB00 STUR X8, [X29 - 0x8]
	0x0263FB04 LDRB W8, [X19 + 0xE8]
	0x0263FB08 LDR X22, [X22 + 0x850]
	0x0263FB0C MOV W25, W6
	0x0263FB10 MOV W26, W1
	0x0263FB14 MOV X21, X0
	0x0263FB18 TBNZ X8, 0x0, 0x263FB3C
	0x0263FB1C ADRP X0, 0x1ADC000
	0x0263FB20 LDR X0, [X0 + 0x850]
	0x0263FB24 BL 0x1C16CF4
	0x0263FB28 ADRP X0, 0x1ADE000
	0x0263FB2C LDR X0, [X0 + 0x468]
	0x0263FB30 BL 0x1C16CF4
	0x0263FB34 MOVZ W8, 0x1
	0x0263FB38 STRB W8, [X19 + 0xE8]
	0x0263FB3C LDR X23, [X24 + 0x20]
	0x0263FB40 LDR X8, [X23 + 0xC0]
	0x0263FB44 LDR X8, [X8 + 0x10]
	0x0263FB48 LDR W28, [X8 + 0xFC]
	0x0263FB4C ADD X8, X31, 0x0
	0x0263FB50 ADD X9, X28, 0xF
	0x0263FB54 AND X9, X9, 0x1FFFFFFFF
	0x0263FB58 SUB X27, X8, X9
	0x0263FB5C ADD X31, X27, 0x0
	0x0263FB60 ADD X8, X31, 0x0
	0x0263FB64 SUB X19, X8, X9
	0x0263FB68 ADD X31, X19, 0x0
	0x0263FB6C MOV X0, X19
	0x0263FB70 MOV W1, W31
	0x0263FB74 MOV X2, X28
	0x0263FB78 BL 0x3EB1B10
	0x0263FB7C MOV X0, X19
	0x0263FB80 MOV W1, W31
	0x0263FB84 MOV X2, X28
	0x0263FB88 BL 0x3EB1B10
	0x0263FB8C MOV X0, X27
	0x0263FB90 MOV X1, X19
	0x0263FB94 MOV X2, X28
	0x0263FB98 BL 0x3EB1AC0
	0x0263FB9C LDR X0, [X22]
	0x0263FBA0 LDR W8, [X0 + 0xE0]
	0x0263FBA4 CBNZ W8, 0x263FBB0
	0x0263FBA8 BL 0x1C16DFC
	0x0263FBAC LDR X23, [X24 + 0x20]
	0x0263FBB0 LDR X8, [X23 + 0xC0]
	0x0263FBB4 LDP X9, X1, [X8 + 0x10]
	0x0263FBB8 LDR W8, [X9 + 0x28]
	0x0263FBBC LDR X0, [X1]
	0x0263FBC0 TBNZ X8, 0x1F, 0x263FBC8
	0x0263FBC4 LDR X27, [X27]
	0x0263FBC8 STUR X27, [X29 - 0x18]
	0x0263FBCC LDR X8, [X1 + 0x10]
	0x0263FBD0 SUB X3, X29, 0x18
	0x0263FBD4 SUB X4, X29, 0xC
	0x0263FBD8 MOV X2, X31
	0x0263FBDC BLR X8
	0x0263FBE0 LDUR W8, [X29 - 0xC]
	0x0263FBE4 MOVZ W9, 0x1
	0x0263FBE8 MOV X0, X31
	0x0263FBEC STRB W9, [X21 + 0x49]
	0x0263FBF0 STR W8, [X21 + 0x10]
	0x0263FBF4 BL 0x33C18F4
	0x0263FBF8 SUB W8, W0, 0x78
	0x0263FBFC STR W8, [X21 + 0x58]
	0x0263FC00 LDR X8, [X24 + 0x20]
	0x0263FC04 LDR X8, [X8 + 0xC0]
	0x0263FC08 LDR X0, [X8 + 0x20]
	0x0263FC0C LDRB W8, [X0 + 0x135]
	0x0263FC10 TBNZ X8, 0x0, 0x263FC18
	0x0263FC14 BL 0x1C5C684
	0x0263FC18 ADRP X22, 0x1ADE000
	0x0263FC1C LDR X22, [X22 + 0x468]
	0x0263FC20 BL 0x1C16F10
	0x0263FC24 LDR X8, [X24 + 0x20]
	0x0263FC28 MOV X19, X0
	0x0263FC2C LDR X8, [X8 + 0xC0]
	0x0263FC30 LDR X1, [X8 + 0x28]
	0x0263FC34 LDR X8, [X1]
	0x0263FC38 BLR X8
	0x0263FC3C STR X19, [X21 + 0x98]
	0x0263FC40 LDR X8, [X24 + 0x20]
	0x0263FC44 LDR X8, [X8 + 0xC0]
	0x0263FC48 LDR X0, [X8 + 0x30]
	0x0263FC4C LDRB W8, [X0 + 0x135]
	0x0263FC50 TBNZ X8, 0x0, 0x263FC58
	0x0263FC54 BL 0x1C5C684
	0x0263FC58 AND W23, W26, 0x1
	0x0263FC5C AND W25, W25, 0x1
	0x0263FC60 BL 0x1C16F10
	0x0263FC64 LDR X8, [X24 + 0x20]
	0x0263FC68 LDR X2, [X22]
	0x0263FC6C MOVZ W1, 0x32
	0x0263FC70 MOV X19, X0
	0x0263FC74 LDR X8, [X8 + 0xC0]
	0x0263FC78 LDR X3, [X8 + 0x38]
	0x0263FC7C LDR X8, [X3]
	0x0263FC80 BLR X8
	0x0263FC84 MOV X0, X21
	0x0263FC88 MOV X1, X31
	0x0263FC8C STR X19, [X21 + 0xA0]
	0x0263FC90 BL 0x3554E64
	0x0263FC94 LDUR X8, [X29 - 0x38]
	0x0263FC98 LDUR X9, [X29 - 0x28]
	0x0263FC9C STRB W23, [X21 + 0x71]
	0x0263FCA0 STRB W25, [X21 + 0x70]
	0x0263FCA4 STUR X8, [X21 + 0x34]
	0x0263FCA8 LDUR X8, [X29 - 0x30]
	0x0263FCAC STUR X8, [X21 + 0x3C]
	0x0263FCB0 LDUR X8, [X29 - 0x20]
	0x0263FCB4 STP X9, X8, [X21 + 0x60]
	0x0263FCB8 LDR X8, [X20 + 0x28]
	0x0263FCBC LDUR X9, [X29 - 0x8]
	0x0263FCC0 CMP X8, X9
	0x0263FCC4 B.NE 0x263FCE8
	0x0263FCC8 ADD X31, X29, 0x0
	0x0263FCCC LDP X20, X19, [X31 + 0x50]
	0x0263FCD0 LDP X22, X21, [X31 + 0x40]
	0x0263FCD4 LDP X24, X23, [X31 + 0x30]
	0x0263FCD8 LDP X26, X25, [X31 + 0x20]
	0x0263FCDC LDP X28, X27, [X31 + 0x10]
	0x0263FCE0 LDP X29, X30, [X31], #0x60
	0x0263FCE4 RET
	0x0263FCE8 BL 0x3EB1B20
	0x0263FCEC LDRB W8, [X0 + 0x48]
	0x0263FCF0 CBZ W8, 0x263FD18
	0x0263FCF4 LDR W8, [X0 + 0x28]
	0x0263FCF8 LDR W10, [X0 + 0x30]
	0x0263FCFC LDR W9, [X0 + 0x20]
	0x0263FD00 SUB W8, W8, W10
	0x0263FD04 CMP W8, W9
	0x0263FD08 B.LE 0x263FD20
	0x0263FD0C LDR W9, [X0 + 0x1C]
	0x0263FD10 SUB W8, W8, W9
	0x0263FD14 B 0x263FD34
	0x0263FD18 MOV W0, W31
	0x0263FD1C RET
	0x0263FD20 SUB W9, W31, W9
	0x0263FD24 CMP W8, W9
	0x0263FD28 B.GE 0x263FD34
	0x0263FD2C LDR W9, [X0 + 0x1C]
	0x0263FD30 ADD W8, W9, W8
	0x0263FD34 LDR W9, [X0 + 0x24]
	0x0263FD38 MOVZ W10, 0x3E8
	0x0263FD3C MUL W8, W8, W10
	0x0263FD40 SDIV W0, W8, W9
	0x0263FD44 RET
	0x0263FD48 LDRB W8, [X0 + 0x48]
	0x0263FD4C CBZ W8, 0x263FD60
	0x0263FD50 LDRB W8, [X0 + 0x49]
	0x0263FD54 CMP W8, 0x0
	0x0263FD58 CSET W0, NE
	0x0263FD5C RET
	0x0263FD60 MOVZ W0, 0x1
	0x0263FD64 RET
	0x0263FD68 STP X30, X19, [X31 - 0x10]!
	0x0263FD6C LDR X8, [X1 + 0x20]
	0x0263FD70 MOV X19, X0
	0x0263FD74 LDR X8, [X8 + 0xC0]
	0x0263FD78 LDR X1, [X8 + 0x40]
	0x0263FD7C LDR X8, [X1]
	0x0263FD80 BLR X8
	0x0263FD84 TBZ X0, 0x0, 0x263FD90
	0x0263FD88 MOV W0, W31
	0x0263FD8C B 0x263FDA8
	0x0263FD90 MOV X0, X31
	0x0263FD94 BL 0x33C18F4
	0x0263FD98 LDR W8, [X19 + 0x58]
	0x0263FD9C SUB W8, W0, W8
	0x0263FDA0 CMP W8, 0x78
	0x0263FDA4 CSET W0, LT
	0x0263FDA8 LDP X30, X19, [X31], #0x10
	0x0263FDAC RET
	0x0263FDB0 SUB X31, X31, 0x70
	0x0263FDB4 STR X30, [X31 + 0x20]
	0x0263FDB8 STP X26, X25, [X31 + 0x30]
	0x0263FDBC STP X24, X23, [X31 + 0x40]
	0x0263FDC0 STP X22, X21, [X31 + 0x50]
	0x0263FDC4 STP X20, X19, [X31 + 0x60]
	0x0263FDC8 ADRP X24, 0x1D9B000
	0x0263FDCC LDRB W8, [X24 + 0xE9]
	0x0263FDD0 MOV X22, X4
	0x0263FDD4 MOV W23, W3
	0x0263FDD8 MOV W21, W2
	0x0263FDDC MOV W20, W1
	0x0263FDE0 MOV X19, X0
	0x0263FDE4 TBNZ X8, 0x0, 0x263FE50
	0x0263FDE8 ADRP X0, 0x1AB9000
	0x0263FDEC LDR X0, [X0 + 0x348]
	0x0263FDF0 BL 0x1C16CF4
	0x0263FDF4 ADRP X0, 0x1AB4000
	0x0263FDF8 LDR X0, [X0 + 0x758]
	0x0263FDFC BL 0x1C16CF4
	0x0263FE00 ADRP X0, 0x1AB4000
	0x0263FE04 LDR X0, [X0 + 0x9D0]
	0x0263FE08 BL 0x1C16CF4
	0x0263FE0C ADRP X0, 0x1ADE000
	0x0263FE10 LDR X0, [X0 + 0x470]
	0x0263FE14 BL 0x1C16CF4
	0x0263FE18 ADRP X0, 0x1ADE000
	0x0263FE1C LDR X0, [X0 + 0x478]
	0x0263FE20 BL 0x1C16CF4
	0x0263FE24 ADRP X0, 0x1ADE000
	0x0263FE28 LDR X0, [X0 + 0x480]
	0x0263FE2C BL 0x1C16CF4
	0x0263FE30 ADRP X0, 0x1ADE000
	0x0263FE34 LDR X0, [X0 + 0x488]
	0x0263FE38 BL 0x1C16CF4
	0x0263FE3C ADRP X0, 0x1ADE000
	0x0263FE40 LDR X0, [X0 + 0x490]
	0x0263FE44 BL 0x1C16CF4
	0x0263FE48 MOVZ W8, 0x1
	0x0263FE4C STRB W8, [X24 + 0xE9]
	0x0263FE50 LDP W10, W11, [X19 + 0x34]
	0x0263FE54 LDR W12, [X19 + 0x3C]
	0x0263FE58 MOVZ W8, 0x6667
	0x0263FE5C MOVZ W9, 0x4DD3
	0x0263FE60 MOVK W8, 0x66660000
	0x0263FE64 MOVK W9, 0x10620000
	0x0263FE68 SUB W12, W12, W11
	0x0263FE6C SUB W11, W11, W10
	0x0263FE70 MUL W10, W10, W20
	0x0263FE74 MUL W13, W23, W21
	0x0263FE78 SMADDL X8, X20, X8, X31
	0x0263FE7C SMADDL X10, X10, X9, X31
	0x0263FE80 MUL W11, W11, W20
	0x0263FE84 MUL W12, W12, W20
	0x0263FE88 STP W23, W13, [X19 + 0x14]
	0x0263FE8C UBFM X13, X8, 0x20, 0x3F
	0x0263FE90 UBFM X8, X8, 0x3F, 0x3F
	0x0263FE94 SMADDL X11, X11, X9, X31
	0x0263FE98 SMADDL X9, X12, X9, X31
	0x0263FE9C UBFM X12, X10, 0x20, 0x3F
	0x0263FEA0 UBFM X10, X10, 0x3F, 0x3F
	0x0263FEA4 ADD W8, W8, W13, 0x3, ASR
	0x0263FEA8 ADD W10, W10, W12, 0x6, ASR
	0x0263FEAC UBFM X12, X11, 0x20, 0x3F
	0x0263FEB0 UBFM X11, X11, 0x3F, 0x3F
	0x0263FEB4 ADD W11, W11, W12, 0x6, ASR
	0x0263FEB8 CMP W10, W8
	0x0263FEBC CSEL W10, W8, W10, LT
	0x0263FEC0 CMP W11, W8
	0x0263FEC4 UBFM X12, X9, 0x20, 0x3F
	0x0263FEC8 UBFM X9, X9, 0x3F, 0x3F
	0x0263FECC CSEL W8, W8, W11, LT
	0x0263FED0 ADD W9, W9, W12, 0x6, ASR
	0x0263FED4 ADD W8, W8, W10
	0x0263FED8 STP W10, W8, [X19 + 0x4C]
	0x0263FEDC ADD W8, W8, W9
	0x0263FEE0 STR W8, [X19 + 0x54]
	0x0263FEE4 UBFM W8, W8, 0x1E, 0x1D
	0x0263FEE8 CMP W8, W23
	0x0263FEEC LDR X2, [X19 + 0xA0]
	0x0263FEF0 CSEL W8, W23, W8, LT
	0x0263FEF4 CMP W8, 0x0
	0x0263FEF8 CINC W9, W8, LT
	0x0263FEFC SBFM W9, W9, 0x1, 0x1F
	0x0263FF00 STR W21, [X19 + 0x44]
	0x0263FF04 STP W8, W9, [X19 + 0x1C]
	0x0263FF08 STP W20, W10, [X19 + 0x24]
	0x0263FF0C CBZ X2, 0x264037C
	0x0263FF10 LDR X8, [X22 + 0x20]
	0x0263FF14 ADD X4, X31, 0x18
	0x0263FF18 MOV X3, X31
	0x0263FF1C LDR X8, [X8 + 0xC0]
	0x0263FF20 LDR X1, [X8 + 0x50]
	0x0263FF24 LDR X0, [X1]
	0x0263FF28 LDR X8, [X1 + 0x10]
	0x0263FF2C BLR X8
	0x0263FF30 LDR W23, [X31 + 0x18]
	0x0263FF34 LDR W8, [X19 + 0x18]
	0x0263FF38 CMP W23, W8
	0x0263FF3C B.EQ 0x263FF78
	0x0263FF40 LDR X2, [X19 + 0xA0]
	0x0263FF44 CBZ X2, 0x264037C
	0x0263FF48 LDR X9, [X22 + 0x20]
	0x0263FF4C ADD X3, X31, 0x18
	0x0263FF50 ADD X4, X31, 0x2C
	0x0263FF54 LDR X9, [X9 + 0xC0]
	0x0263FF58 LDR X1, [X9 + 0x58]
	0x0263FF5C ADD X9, X31, 0x2C
	0x0263FF60 LDR X0, [X1]
	0x0263FF64 STR W8, [X31 + 0x2C]
	0x0263FF68 STR X9, [X31 + 0x18]
	0x0263FF6C LDR X8, [X1 + 0x10]
	0x0263FF70 BLR X8
	0x0263FF74 LDR W23, [X19 + 0x18]
	0x0263FF78 LDR X8, [X22 + 0x20]
	0x0263FF7C LDR X8, [X8 + 0xC0]
	0x0263FF80 LDR X0, [X8 + 0x60]
	0x0263FF84 LDRB W8, [X0 + 0x135]
	0x0263FF88 TBNZ X8, 0x0, 0x263FF90
	0x0263FF8C BL 0x1C5C684
	0x0263FF90 MOV W1, W23
	0x0263FF94 BL 0x1C16D6C
	0x0263FF98 STR X0, [X19 + 0x78]
	0x0263FF9C LDR X8, [X22 + 0x20]
	0x0263FFA0 LDR W23, [X19 + 0x18]
	0x0263FFA4 LDR X8, [X8 + 0xC0]
	0x0263FFA8 LDR X0, [X8 + 0x60]
	0x0263FFAC LDRB W8, [X0 + 0x135]
	0x0263FFB0 TBNZ X8, 0x0, 0x263FFB8
	0x0263FFB4 BL 0x1C5C684
	0x0263FFB8 ADRP X24, 0x1AB4000
	0x0263FFBC LDR X24, [X24 + 0x9D0]
	0x0263FFC0 MOV W1, W23
	0x0263FFC4 BL 0x1C16D6C
	0x0263FFC8 STR X0, [X19 + 0x80]
	0x0263FFCC STRB W31, [X19 + 0x90]
	0x0263FFD0 LDR X8, [X22 + 0x20]
	0x0263FFD4 LDR X8, [X8 + 0xC0]
	0x0263FFD8 LDR X0, [X8 + 0x68]
	0x0263FFDC LDRB W8, [X0 + 0x135]
	0x0263FFE0 TBNZ X8, 0x0, 0x263FFE8
	0x0263FFE4 BL 0x1C5C684
	0x0263FFE8 BL 0x1C16F10
	0x0263FFEC LDR X8, [X22 + 0x20]
	0x0263FFF0 MOV X22, X0
	0x0263FFF4 LDR X8, [X8 + 0xC0]
	0x0263FFF8 LDR X1, [X8 + 0x70]
	0x0263FFFC LDR X8, [X1]
	0x02640000 BLR X8
	0x02640004 LDR X8, [X19]
	0x02640008 STR X22, [X19 + 0x88]
	0x0264000C LDR W3, [X19 + 0x1C]
	0x02640010 MOV X0, X19
	0x02640014 LDP X9, X4, [X8 + 0x1F8]
	0x02640018 MOV W1, W20
	0x0264001C MOV W2, W21
	0x02640020 BLR X9
	0x02640024 LDR X8, [X19]
	0x02640028 MOV X0, X19
	0x0264002C LDR X9, [X8 + 0x208]
	0x02640030 LDR X1, [X8 + 0x210]
	0x02640034 BLR X9
	0x02640038 MOVZ W8, 0x1
	0x0264003C STRB W8, [X19 + 0x48]
	0x02640040 LDR X0, [X24]
	0x02640044 LDR X22, [X19 + 0x60]
	0x02640048 MOVZ W1, 0xA
	0x0264004C BL 0x1C16D6C
	0x02640050 CBZ X0, 0x264037C
	0x02640054 LDR X24, [X19 + 0x68]
	0x02640058 MOV X23, X0
	0x0264005C CBZ X24, 0x2640074
	0x02640060 LDR X8, [X23]
	0x02640064 MOV X0, X24
	0x02640068 LDR X1, [X8 + 0x40]
	0x0264006C BL 0x1C16E00
	0x02640070 CBZ X0, 0x2640370
	0x02640074 LDR W8, [X23 + 0x18]
	0x02640078 CBZ W8, 0x264036C
	0x0264007C STR X24, [X23 + 0x20]
	0x02640080 LDR W9, [X19 + 0x10]
	0x02640084 ADRP X10, 0x1ADD000
	0x02640088 ADRP X11, 0x1ADD000
	0x0264008C ADRP X12, 0x1ADD000
	0x02640090 LDR X10, [X10 + 0x480]
	0x02640094 LDR X11, [X11 + 0x478]
	0x02640098 LDR X12, [X12 + 0x490]
	0x0264009C CMP W9, 0x2
	0x026400A0 LDR X24, [X10]
	0x026400A4 CSEL X9, X11, X12, EQ
	0x026400A8 LDR X25, [X9]
	0x026400AC CBZ X25, 0x26400C8
	0x026400B0 LDR X8, [X23]
	0x026400B4 MOV X0, X25
	0x026400B8 LDR X1, [X8 + 0x40]
	0x026400BC BL 0x1C16E00
	0x026400C0 CBZ X0, 0x2640370
	0x026400C4 LDR W8, [X23 + 0x18]
	0x026400C8 CMP W8, 0x1
	0x026400CC B.LS 0x264036C
	0x026400D0 ADRP X26, 0x1AB3000
	0x026400D4 LDR X26, [X26 + 0x758]
	0x026400D8 STR X25, [X23 + 0x28]
	0x026400DC LDR W8, [X19 + 0x1C]
	0x026400E0 ADD X1, X31, 0x18
	0x026400E4 LDR X0, [X26]
	0x026400E8 STR W8, [X31 + 0x18]
	0x026400EC BL 0x1C16E04
	0x026400F0 MOV X25, X0
	0x026400F4 CBZ X0, 0x264010C
	0x026400F8 LDR X8, [X23]
	0x026400FC MOV X0, X25
	0x02640100 LDR X1, [X8 + 0x40]
	0x02640104 BL 0x1C16E00
	0x02640108 CBZ X0, 0x2640370
	0x0264010C LDR W8, [X23 + 0x18]
	0x02640110 CMP W8, 0x2
	0x02640114 B.LS 0x264036C
	0x02640118 STR X25, [X23 + 0x30]
	0x0264011C LDR X0, [X26]
	0x02640120 ADD X1, X31, 0x2C
	0x02640124 STR W21, [X31 + 0x2C]
	0x02640128 BL 0x1C16E04
	0x0264012C MOV X21, X0
	0x02640130 CBZ X0, 0x2640148
	0x02640134 LDR X8, [X23]
	0x02640138 MOV X0, X21
	0x0264013C LDR X1, [X8 + 0x40]
	0x02640140 BL 0x1C16E00
	0x02640144 CBZ X0, 0x2640370
	0x02640148 LDR W8, [X23 + 0x18]
	0x0264014C CMP W8, 0x3
	0x02640150 B.LS 0x264036C
	0x02640154 STR X21, [X23 + 0x38]
	0x02640158 LDR X0, [X26]
	0x0264015C ADD X1, X31, 0x28
	0x02640160 STR W20, [X31 + 0x28]
	0x02640164 BL 0x1C16E04
	0x02640168 MOV X20, X0
	0x0264016C CBZ X0, 0x2640184
	0x02640170 LDR X8, [X23]
	0x02640174 MOV X0, X20
	0x02640178 LDR X1, [X8 + 0x40]
	0x0264017C BL 0x1C16E00
	0x02640180 CBZ X0, 0x2640370
	0x02640184 LDR W8, [X23 + 0x18]
	0x02640188 CMP W8, 0x4
	0x0264018C B.LS 0x264036C
	0x02640190 STR X20, [X23 + 0x40]
	0x02640194 LDR W8, [X19 + 0x4C]
	0x02640198 LDR X0, [X26]
	0x0264019C ADD X1, X31, 0x14
	0x026401A0 STR W8, [X31 + 0x14]
	0x026401A4 BL 0x1C16E04
	0x026401A8 MOV X20, X0
	0x026401AC CBZ X0, 0x26401C4
	0x026401B0 LDR X8, [X23]
	0x026401B4 MOV X0, X20
	0x026401B8 LDR X1, [X8 + 0x40]
	0x026401BC BL 0x1C16E00
	0x026401C0 CBZ X0, 0x2640370
	0x026401C4 LDR W8, [X23 + 0x18]
	0x026401C8 CMP W8, 0x5
	0x026401CC B.LS 0x264036C
	0x026401D0 STR X20, [X23 + 0x48]
	0x026401D4 LDR W8, [X19 + 0x50]
	0x026401D8 LDR X0, [X26]
	0x026401DC ADD X1, X31, 0x10
	0x026401E0 STR W8, [X31 + 0x10]
	0x026401E4 BL 0x1C16E04
	0x026401E8 MOV X20, X0
	0x026401EC CBZ X0, 0x2640204
	0x026401F0 LDR X8, [X23]
	0x026401F4 MOV X0, X20
	0x026401F8 LDR X1, [X8 + 0x40]
	0x026401FC BL 0x1C16E00
	0x02640200 CBZ X0, 0x2640370
	0x02640204 LDR W8, [X23 + 0x18]
	0x02640208 CMP W8, 0x6
	0x0264020C B.LS 0x264036C
	0x02640210 STR X20, [X23 + 0x50]
	0x02640214 LDR W8, [X19 + 0x54]
	0x02640218 LDR X0, [X26]
	0x0264021C ADD X1, X31, 0xC
	0x02640220 STR W8, [X31 + 0xC]
	0x02640224 BL 0x1C16E04
	0x02640228 MOV X20, X0
	0x0264022C CBZ X0, 0x2640244
	0x02640230 LDR X8, [X23]
	0x02640234 MOV X0, X20
	0x02640238 LDR X1, [X8 + 0x40]
	0x0264023C BL 0x1C16E00
	0x02640240 CBZ X0, 0x2640370
	0x02640244 LDR W8, [X23 + 0x18]
	0x02640248 CMP W8, 0x7
	0x0264024C B.LS 0x264036C
	0x02640250 STR X20, [X23 + 0x58]
	0x02640254 LDR W8, [X19 + 0x40]
	0x02640258 LDR X0, [X26]
	0x0264025C ADD X1, X31, 0x8
	0x02640260 STR W8, [X31 + 0x8]
	0x02640264 BL 0x1C16E04
	0x02640268 MOV X20, X0
	0x0264026C CBZ X0, 0x2640284
	0x02640270 LDR X8, [X23]
	0x02640274 MOV X0, X20
	0x02640278 LDR X1, [X8 + 0x40]
	0x0264027C BL 0x1C16E00
	0x02640280 CBZ X0, 0x2640370
	0x02640284 LDR W8, [X23 + 0x18]
	0x02640288 CMP W8, 0x8
	0x0264028C B.LS 0x264036C
	0x02640290 STR X20, [X23 + 0x60]
	0x02640294 LDRB W9, [X19 + 0x90]
	0x02640298 ADRP X10, 0x1ADD000
	0x0264029C ADRP X11, 0x1ADD000
	0x026402A0 LDR X10, [X10 + 0x470]
	0x026402A4 LDR X11, [X11 + 0x488]
	0x026402A8 CMP W9, 0x0
	0x026402AC CSEL X9, X10, X11, EQ
	0x026402B0 LDR X19, [X9]
	0x026402B4 CBZ X19, 0x26402D0
	0x026402B8 LDR X8, [X23]
	0x026402BC MOV X0, X19
	0x026402C0 LDR X1, [X8 + 0x40]
	0x026402C4 BL 0x1C16E00
	0x026402C8 CBZ X0, 0x2640370
	0x026402CC LDR W8, [X23 + 0x18]
	0x026402D0 CMP W8, 0x9
	0x026402D4 B.LS 0x264036C
	0x026402D8 STR X19, [X23 + 0x68]
	0x026402DC CBZ X22, 0x264037C
	0x026402E0 ADRP X10, 0x1AB8000
	0x026402E4 LDR X8, [X22]
	0x026402E8 LDR X10, [X10 + 0x348]
	0x026402EC LDRH W9, [X8 + 0x12E]
	0x026402F0 LDR X1, [X10]
	0x026402F4 CBZ X9, 0x2640318
	0x026402F8 LDR X10, [X8 + 0xB0]
	0x026402FC ADD X10, X10, 0x8
	0x02640300 LDUR X11, [X10 - 0x8]
	0x02640304 CMP X11, X1
	0x02640308 B.EQ 0x2640328
	0x0264030C SUBS X9, X9, 0x1
	0x02640310 ADD X10, X10, 0x10
	0x02640314 B.NE 0x2640300
	0x02640318 MOVZ W2, 0x1
	0x0264031C MOV X0, X22
	0x02640320 BL 0x1C5C788
	0x02640324 B 0x2640338
	0x02640328 LDR W9, [X10]
	0x0264032C ADD W9, W9, 0x1
	0x02640330 ADD X8, X8, W9, 0x4, SXTW
	0x02640334 ADD X0, X8, 0x138
	0x02640338 LDP X8, X4, [X0]
	0x0264033C MOVZ W1, 0x3
	0x02640340 MOV X0, X22
	0x02640344 MOV X2, X24
	0x02640348 MOV X3, X23
	0x0264034C BLR X8
	0x02640350 LDP X20, X19, [X31 + 0x60]
	0x02640354 LDP X22, X21, [X31 + 0x50]
	0x02640358 LDP X24, X23, [X31 + 0x40]
	0x0264035C LDP X26, X25, [X31 + 0x30]
	0x02640360 LDR X30, [X31 + 0x20]
	0x02640364 ADD X31, X31, 0x70
	0x02640368 RET
	0x0264036C BL 0x1C16F28
	0x02640370 BL 0x1C16F44
	0x02640374 MOV X1, X31
	0x02640378 BL 0x1C16DEC
	0x0264037C BL 0x1C16F20
	0x02640380 SUB X31, X31, 0x70
	0x02640384 STR X30, [X31 + 0x10]
	0x02640388 STP X28, X27, [X31 + 0x20]
	0x0264038C STP X26, X25, [X31 + 0x30]
	0x02640390 STP X24, X23, [X31 + 0x40]
	0x02640394 STP X22, X21, [X31 + 0x50]
	0x02640398 STP X20, X19, [X31 + 0x60]
	0x0264039C ADRP X23, 0x1D9A000
	0x026403A0 LDRB W8, [X23 + 0xEA]
	0x026403A4 MOV X22, X3
	0x026403A8 MOV W20, W2
	0x026403AC MOV X21, X1
	0x026403B0 MOV X19, X0
	0x026403B4 TBNZ X8, 0x0, 0x2640438
	0x026403B8 ADRP X0, 0x1AB8000
	0x026403BC LDR X0, [X0 + 0x348]
	0x026403C0 BL 0x1C16CF4
	0x026403C4 ADRP X0, 0x1AB3000
	0x026403C8 LDR X0, [X0 + 0x758]
	0x026403CC BL 0x1C16CF4
	0x026403D0 ADRP X0, 0x1AB3000
	0x026403D4 LDR X0, [X0 + 0x9D0]
	0x026403D8 BL 0x1C16CF4
	0x026403DC ADRP X0, 0x1ADD000
	0x026403E0 LDR X0, [X0 + 0x498]
	0x026403E4 BL 0x1C16CF4
	0x026403E8 ADRP X0, 0x1ADD000
	0x026403EC LDR X0, [X0 + 0x4A0]
	0x026403F0 BL 0x1C16CF4
	0x026403F4 ADRP X0, 0x1ADD000
	0x026403F8 LDR X0, [X0 + 0x4A8]
	0x026403FC BL 0x1C16CF4
	0x02640400 ADRP X0, 0x1ADD000
	0x02640404 LDR X0, [X0 + 0x4B0]
	0x02640408 BL 0x1C16CF4
	0x0264040C ADRP X0, 0x1ADD000
	0x02640410 LDR X0, [X0 + 0x4B8]
	0x02640414 BL 0x1C16CF4
	0x02640418 ADRP X0, 0x1ADD000
	0x0264041C LDR X0, [X0 + 0x4C0]
	0x02640420 BL 0x1C16CF4
	0x02640424 ADRP X0, 0x1ADD000
	0x02640428 LDR X0, [X0 + 0x4C8]
	0x0264042C BL 0x1C16CF4
	0x02640430 MOVZ W8, 0x1
	0x02640434 STRB W8, [X23 + 0xEA]
	0x02640438 LDR W9, [X19 + 0x28]
	0x0264043C LDR W8, [X19 + 0x20]
	0x02640440 SUB W26, W9, W20
	0x02640444 CMP W26, W8
	0x02640448 B.LE 0x2640458
	0x0264044C LDR W8, [X19 + 0x1C]
	0x02640450 SUB W26, W26, W8
	0x02640454 B 0x264046C
	0x02640458 SUB W8, W31, W8
	0x0264045C CMP W26, W8
	0x02640460 B.GE 0x264046C
	0x02640464 LDR W8, [X19 + 0x1C]
	0x02640468 ADD W26, W8, W26
	0x0264046C LDRB W8, [X19 + 0x49]
	0x02640470 CBNZ W8, 0x26408D4
	0x02640474 LDR W8, [X19 + 0x54]
	0x02640478 CMP W26, W8
	0x0264047C B.LE 0x264066C
	0x02640480 LDRB W9, [X19 + 0x70]
	0x02640484 CBZ W9, 0x264085C
	0x02640488 ADRP X8, 0x1AB3000
	0x0264048C LDR X23, [X19 + 0x60]
	0x02640490 LDR X8, [X8 + 0x9D0]
	0x02640494 MOVZ W1, 0x6
	0x02640498 LDR X0, [X8]
	0x0264049C BL 0x1C16D6C
	0x026404A0 CBZ X0, 0x2641530
	0x026404A4 LDR X25, [X19 + 0x68]
	0x026404A8 MOV X24, X0
	0x026404AC CBZ X25, 0x26404C4
	0x026404B0 LDR X8, [X24]
	0x026404B4 MOV X0, X25
	0x026404B8 LDR X1, [X8 + 0x40]
	0x026404BC BL 0x1C16E00
	0x026404C0 CBZ X0, 0x2641524
	0x026404C4 LDR W8, [X24 + 0x18]
	0x026404C8 CBZ W8, 0x2641520
	0x026404CC STR X25, [X24 + 0x20]
	0x026404D0 ADRP X27, 0x1AB3000
	0x026404D4 LDR W8, [X19 + 0x50]
	0x026404D8 LDR X27, [X27 + 0x758]
	0x026404DC ADD X1, X31, 0x1C
	0x026404E0 STR W8, [X31 + 0x1C]
	0x026404E4 LDR X0, [X27]
	0x026404E8 BL 0x1C16E04
	0x026404EC MOV X25, X0
	0x026404F0 CBZ X0, 0x2640508
	0x026404F4 LDR X8, [X24]
	0x026404F8 MOV X0, X25
	0x026404FC LDR X1, [X8 + 0x40]
	0x02640500 BL 0x1C16E00
	0x02640504 CBZ X0, 0x2641524
	0x02640508 LDR W8, [X24 + 0x18]
	0x0264050C CMP W8, 0x1
	0x02640510 B.LS 0x2641520
	0x02640514 STR X25, [X24 + 0x28]
	0x02640518 LDR X0, [X27]
	0x0264051C ADD X1, X31, 0x18
	0x02640520 STR W26, [X31 + 0x18]
	0x02640524 BL 0x1C16E04
	0x02640528 MOV X25, X0
	0x0264052C CBZ X0, 0x2640544
	0x02640530 LDR X8, [X24]
	0x02640534 MOV X0, X25
	0x02640538 LDR X1, [X8 + 0x40]
	0x0264053C BL 0x1C16E00
	0x02640540 CBZ X0, 0x2641524
	0x02640544 LDR W8, [X24 + 0x18]
	0x02640548 CMP W8, 0x2
	0x0264054C B.LS 0x2641520
	0x02640550 STR X25, [X24 + 0x30]
	0x02640554 LDR X0, [X27]
	0x02640558 ADD X1, X31, 0xC
	0x0264055C STR W20, [X31 + 0xC]
	0x02640560 BL 0x1C16E04
	0x02640564 MOV X25, X0
	0x02640568 CBZ X0, 0x2640580
	0x0264056C LDR X8, [X24]
	0x02640570 MOV X0, X25
	0x02640574 LDR X1, [X8 + 0x40]
	0x02640578 BL 0x1C16E00
	0x0264057C CBZ X0, 0x2641524
	0x02640580 LDR W8, [X24 + 0x18]
	0x02640584 CMP W8, 0x3
	0x02640588 B.LS 0x2641520
	0x0264058C STR X25, [X24 + 0x38]
	0x02640590 LDR W8, [X19 + 0x28]
	0x02640594 LDR X0, [X27]
	0x02640598 ADD X1, X31, 0x8
	0x0264059C STR W8, [X31 + 0x8]
	0x026405A0 BL 0x1C16E04
	0x026405A4 MOV X25, X0
	0x026405A8 CBZ X0, 0x26405C0
	0x026405AC LDR X8, [X24]
	0x026405B0 MOV X0, X25
	0x026405B4 LDR X1, [X8 + 0x40]
	0x026405B8 BL 0x1C16E00
	0x026405BC CBZ X0, 0x2641524
	0x026405C0 LDR W8, [X24 + 0x18]
	0x026405C4 CMP W8, 0x4
	0x026405C8 B.LS 0x2641520
	0x026405CC STR X25, [X24 + 0x40]
	0x026405D0 LDR W8, [X19 + 0x4C]
	0x026405D4 LDR X0, [X27]
	0x026405D8 ADD X1, X31, 0x4
	0x026405DC ADD W8, W8, W20
	0x026405E0 STR W8, [X31 + 0x4]
	0x026405E4 BL 0x1C16E04
	0x026405E8 MOV X25, X0
	0x026405EC CBZ X0, 0x2640604
	0x026405F0 LDR X8, [X24]
	0x026405F4 MOV X0, X25
	0x026405F8 LDR X1, [X8 + 0x40]
	0x026405FC BL 0x1C16E00
	0x02640600 CBZ X0, 0x2641524
	0x02640604 LDR W8, [X24 + 0x18]
	0x02640608 CMP W8, 0x5
	0x0264060C B.LS 0x2641520
	0x02640610 STR X25, [X24 + 0x48]
	0x02640614 CBZ X23, 0x2641530

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X23, 0x1D9C000
	014 Move W8, [X23+230]
	015 Move X22, X3
	016 Move W20, W2
	017 Move X21, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {55}
	023 Move X0, 0x1ABA000
	024 Move X0, [X0+840]
	025 Call 0x1C17CF4
	026 Move X0, 0x1AB5000
	027 Move X0, [X0+1880]
	028 Call 0x1C17CF4
	029 Move X0, 0x1AB5000
	030 Move X0, [X0+2512]
	031 Call 0x1C17CF4
	032 Move X0, 0x1ADF000
	033 Move X0, [X0+1176]
	034 Call 0x1C17CF4
	035 Move X0, 0x1ADF000
	036 Move X0, [X0+1184]
	037 Call 0x1C17CF4
	038 Move X0, 0x1ADF000
	039 Move X0, [X0+1192]
	040 Call 0x1C17CF4
	041 Move X0, 0x1ADF000
	042 Move X0, [X0+1200]
	043 Call 0x1C17CF4
	044 Move X0, 0x1ADF000
	045 Move X0, [X0+1208]
	046 Call 0x1C17CF4
	047 Move X0, 0x1ADF000
	048 Move X0, [X0+1216]
	049 Call 0x1C17CF4
	050 Move X0, 0x1ADF000
	051 Move X0, [X0+1224]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X23+230], W8
	055 Move W9, [X19+40]
	056 Move W8, [X19+32]
	057 Subtract W26, W9, W20
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move W8, [X19+28]
	060 Subtract W26, W26, W8
	061 Subtract W8, W31, W8
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move W8, [X19+28]
	064 Add W26, W8, W26
	065 Move W8, [X19+73]
	066 Compare W8, 0
	067 JumpIfNotEqual {368}
	068 Move W8, [X19+84]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move W9, [X19+112]
	071 Compare W9, 0
	072 JumpIfEqual {338}
	073 Move X8, 0x1AB5000
	074 Move X23, [X19+96]
	075 Move X8, [X8+2512]
	076 Move W1, 6
	077 Move X0, [X8]
	078 Call 0x1C17D6C
	079 Compare X0, 0
	080 JumpIfEqual {1214}
	081 Move X25, [X19+104]
	082 Move X24, X0
	083 Compare X25, 0
	084 JumpIfEqual {91}
	085 Move X8, [X24]
	086 Move X0, X25
	087 Move X1, [X8+64]
	088 Call 0x1C17E00
	089 Compare X0, 0
	090 JumpIfEqual {1211}
	091 Move W8, [X24+24]
	092 Compare W8, 0
	093 JumpIfEqual {1210}
	094 Move [X24+32], X25
	095 Move X27, 0x1AB5000
	096 Move W8, [X19+80]
	097 Move X27, [X27+1880]
	098 Add X1, X31, 28
	099 Move [X31+28], W8
	100 Move X0, [X27]
	101 Call 0x1C17E04
	102 Move X25, X0
	103 Compare X0, 0
	104 JumpIfEqual {111}
	105 Move X8, [X24]
	106 Move X0, X25
	107 Move X1, [X8+64]
	108 Call 0x1C17E00
	109 Compare X0, 0
	110 JumpIfEqual {1211}
	111 Move W8, [X24+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move [X24+40], X25
	114 Move X0, [X27]
	115 Add X1, X31, 24
	116 Move [X31+24], W26
	117 Call 0x1C17E04
	118 Move X25, X0
	119 Compare X0, 0
	120 JumpIfEqual {127}
	121 Move X8, [X24]
	122 Move X0, X25
	123 Move X1, [X8+64]
	124 Call 0x1C17E00
	125 Compare X0, 0
	126 JumpIfEqual {1211}
	127 Move W8, [X24+24]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move [X24+48], X25
	130 Move X0, [X27]
	131 Add X1, X31, 12
	132 Move [X31+12], W20
	133 Call 0x1C17E04
	134 Move X25, X0
	135 Compare X0, 0
	136 JumpIfEqual {143}
	137 Move X8, [X24]
	138 Move X0, X25
	139 Move X1, [X8+64]
	140 Call 0x1C17E00
	141 Compare X0, 0
	142 JumpIfEqual {1211}
	143 Move W8, [X24+24]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move [X24+56], X25
	146 Move W8, [X19+40]
	147 Move X0, [X27]
	148 Add X1, X31, 8
	149 Move [X31+8], W8
	150 Call 0x1C17E04
	151 Move X25, X0
	152 Compare X0, 0
	153 JumpIfEqual {160}
	154 Move X8, [X24]
	155 Move X0, X25
	156 Move X1, [X8+64]
	157 Call 0x1C17E00
	158 Compare X0, 0
	159 JumpIfEqual {1211}
	160 Move W8, [X24+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move [X24+64], X25
	163 Move W8, [X19+76]
	164 Move X0, [X27]
	165 Add X1, X31, 4
	166 Add W8, W8, W20
	167 Move [X31+4], W8
	168 Call 0x1C17E04
	169 Move X25, X0
	170 Compare X0, 0
	171 JumpIfEqual {178}
	172 Move X8, [X24]
	173 Move X0, X25
	174 Move X1, [X8+64]
	175 Call 0x1C17E00
	176 Compare X0, 0
	177 JumpIfEqual {1211}
	178 Move W8, [X24+24]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move [X24+72], X25
	181 Compare X23, 0
	182 JumpIfEqual {1214}
	183 Move X9, 0x1ABA000
	184 Move X8, [X23]
	185 Move X9, [X9+840]
	186 Move X10, 0x1ADF000
	187 Move X1, [X9]
	188 Move X10, [X10+1184]
	189 NotImplemented "Instruction LDRH not yet implemented."
	190 Move X25, [X10]
	191 Compare X9, 0
	192 JumpIfEqual {199}
	193 Move X10, [X8+176]
	194 Add X10, X10, 8
	195 NotImplemented "Instruction LDUR not yet implemented."
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Subtract X9, X9, 1
	198 Add X10, X10, 16
	199 Move W2, 1
	200 Move X0, X23
	201 Call 0x1C5D788
	202 Move TEMP, X26
	203 And TEMP, TEMP, -2147483648
	204 Compare TEMP, -2147483648
	205 JumpIfNotEqual {368}
	206 Move W8, [X19+112]
	207 Compare W8, 0
	208 JumpIfEqual {362}
	209 Move X8, 0x1AB5000
	210 Move X23, [X19+96]
	211 Move X8, [X8+2512]
	212 Move W1, 6
	213 Move X0, [X8]
	214 Call 0x1C17D6C
	215 Compare X0, 0
	216 JumpIfEqual {1214}
	217 Move X25, [X19+104]
	218 Move X24, X0
	219 Compare X25, 0
	220 JumpIfEqual {227}
	221 Move X8, [X24]
	222 Move X0, X25
	223 Move X1, [X8+64]
	224 Call 0x1C17E00
	225 Compare X0, 0
	226 JumpIfEqual {1211}
	227 Move W8, [X24+24]
	228 Compare W8, 0
	229 JumpIfEqual {1210}
	230 Move [X24+32], X25
	231 Move X27, 0x1AB5000
	232 Move W8, [X19+80]
	233 Move X27, [X27+1880]
	234 Add X1, X31, 28
	235 Move [X31+28], W8
	236 Move X0, [X27]
	237 Call 0x1C17E04
	238 Move X25, X0
	239 Compare X0, 0
	240 JumpIfEqual {247}
	241 Move X8, [X24]
	242 Move X0, X25
	243 Move X1, [X8+64]
	244 Call 0x1C17E00
	245 Compare X0, 0
	246 JumpIfEqual {1211}
	247 Move W8, [X24+24]
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Move [X24+40], X25
	250 Move X0, [X27]
	251 Add X1, X31, 24
	252 Move [X31+24], W26
	253 Call 0x1C17E04
	254 Move X25, X0
	255 Compare X0, 0
	256 JumpIfEqual {263}
	257 Move X8, [X24]
	258 Move X0, X25
	259 Move X1, [X8+64]
	260 Call 0x1C17E00
	261 Compare X0, 0
	262 JumpIfEqual {1211}
	263 Move W8, [X24+24]
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Move [X24+48], X25
	266 Move X0, [X27]
	267 Add X1, X31, 12
	268 Move [X31+12], W20
	269 Call 0x1C17E04
	270 Move X25, X0
	271 Compare X0, 0
	272 JumpIfEqual {279}
	273 Move X8, [X24]
	274 Move X0, X25
	275 Move X1, [X8+64]
	276 Call 0x1C17E00
	277 Compare X0, 0
	278 JumpIfEqual {1211}
	279 Move W8, [X24+24]
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Move [X24+56], X25
	282 Move W8, [X19+40]
	283 Move X0, [X27]
	284 Add X1, X31, 8
	285 Move [X31+8], W8
	286 Call 0x1C17E04
	287 Move X25, X0
	288 Compare X0, 0
	289 JumpIfEqual {296}
	290 Move X8, [X24]
	291 Move X0, X25
	292 Move X1, [X8+64]
	293 Call 0x1C17E00
	294 Compare X0, 0
	295 JumpIfEqual {1211}
	296 Move W8, [X24+24]
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Move [X24+64], X25
	299 Move W8, [X19+76]
	300 Move X0, [X27]
	301 Add X1, X31, 4
	302 Add W8, W8, W20
	303 Move [X31+4], W8
	304 Call 0x1C17E04
	305 Move X25, X0
	306 Compare X0, 0
	307 JumpIfEqual {314}
	308 Move X8, [X24]
	309 Move X0, X25
	310 Move X1, [X8+64]
	311 Call 0x1C17E00
	312 Compare X0, 0
	313 JumpIfEqual {1211}
	314 Move W8, [X24+24]
	315 NotImplemented "Instruction CMP not yet implemented."
	316 Move [X24+72], X25
	317 Compare X23, 0
	318 JumpIfEqual {1214}
	319 Move X9, 0x1ABA000
	320 Move X8, [X23]
	321 Move X9, [X9+840]
	322 Move X10, 0x1ADF000
	323 Move X1, [X9]
	324 Move X10, [X10+1208]
	325 NotImplemented "Instruction LDRH not yet implemented."
	326 Move X25, [X10]
	327 Compare X9, 0
	328 JumpIfEqual {335}
	329 Move X10, [X8+176]
	330 Add X10, X10, 8
	331 NotImplemented "Instruction LDUR not yet implemented."
	332 NotImplemented "Instruction CMP not yet implemented."
	333 Subtract X9, X9, 1
	334 Add X10, X10, 16
	335 Move W2, 1
	336 Move X0, X23
	337 Call 0x1C5D788
	338 Move W26, W8
	339 Move W9, [X10]
	340 Add W9, W9, 1
	341 Add X8, X8, W9
	342 Add X0, X8, 312
	343 Move X8, [X0]
	344 Move X4, [X0+8]
	345 Move W1, 4
	346 Move X0, X23
	347 Move X2, X25
	348 Move X3, X24
	349 NotImplemented "Instruction BLR not yet implemented."
	350 Move W26, [X19+84]
	351 Move W9, [X10]
	352 Add W9, W9, 1
	353 Add X8, X8, W9
	354 Add X0, X8, 312
	355 Move X8, [X0]
	356 Move X4, [X0+8]
	357 Move W1, 4
	358 Move X0, X23
	359 Move X2, X25
	360 Move X3, X24
	361 NotImplemented "Instruction BLR not yet implemented."
	362 Move W26, [X19+76]
	363 Move W8, [X19+28]
	364 Add W9, W26, W20
	365 NotImplemented "Instruction SDIV not yet implemented."
	366 NotImplemented "Instruction MSUB not yet implemented."
	367 Move [X19+40], W8
	368 Compare X21, 0
	369 JumpIfEqual {512}
	370 Move W8, [X19+73]
	371 Compare W8, 0
	372 JumpIfEqual {657}
	373 Move W26, [X19+76]
	374 Move W8, [X19+28]
	375 Move W9, [X19+112]
	376 Move [X19+73], W31
	377 Add W10, W26, W20
	378 NotImplemented "Instruction SDIV not yet implemented."
	379 NotImplemented "Instruction MSUB not yet implemented."
	380 Move [X19+40], W8
	381 Compare W9, 0
	382 JumpIfEqual {657}
	383 Move X8, 0x1AB5000
	384 Move X23, [X19+96]
	385 Move X8, [X8+2512]
	386 Move W1, 6
	387 Move X0, [X8]
	388 Call 0x1C17D6C
	389 Compare X0, 0
	390 JumpIfEqual {1214}
	391 Move X25, [X19+104]
	392 Move X24, X0
	393 Compare X25, 0
	394 JumpIfEqual {401}
	395 Move X8, [X24]
	396 Move X0, X25
	397 Move X1, [X8+64]
	398 Call 0x1C17E00
	399 Compare X0, 0
	400 JumpIfEqual {1211}
	401 Move W8, [X24+24]
	402 Compare W8, 0
	403 JumpIfEqual {1210}
	404 Move [X24+32], X25
	405 Move X27, 0x1AB5000
	406 Move W8, [X19+80]
	407 Move X27, [X27+1880]
	408 Add X1, X31, 28
	409 Move [X31+28], W8
	410 Move X0, [X27]
	411 Call 0x1C17E04
	412 Move X25, X0
	413 Compare X0, 0
	414 JumpIfEqual {421}
	415 Move X8, [X24]
	416 Move X0, X25
	417 Move X1, [X8+64]
	418 Call 0x1C17E00
	419 Compare X0, 0
	420 JumpIfEqual {1211}
	421 Move W8, [X24+24]
	422 NotImplemented "Instruction CMP not yet implemented."
	423 Move [X24+40], X25
	424 Move X0, [X27]
	425 Add X1, X31, 24
	426 Move [X31+24], W26
	427 Call 0x1C17E04
	428 Move X25, X0
	429 Compare X0, 0
	430 JumpIfEqual {437}
	431 Move X8, [X24]
	432 Move X0, X25
	433 Move X1, [X8+64]
	434 Call 0x1C17E00
	435 Compare X0, 0
	436 JumpIfEqual {1211}
	437 Move W8, [X24+24]
	438 NotImplemented "Instruction CMP not yet implemented."
	439 Move [X24+48], X25
	440 Move X0, [X27]
	441 Add X1, X31, 12
	442 Move [X31+12], W20
	443 Call 0x1C17E04
	444 Move X25, X0
	445 Compare X0, 0
	446 JumpIfEqual {453}
	447 Move X8, [X24]
	448 Move X0, X25
	449 Move X1, [X8+64]
	450 Call 0x1C17E00
	451 Compare X0, 0
	452 JumpIfEqual {1211}
	453 Move W8, [X24+24]
	454 NotImplemented "Instruction CMP not yet implemented."
	455 Move [X24+56], X25
	456 Move W8, [X19+40]
	457 Move X0, [X27]
	458 Add X1, X31, 8
	459 Move [X31+8], W8
	460 Call 0x1C17E04
	461 Move X25, X0
	462 Compare X0, 0
	463 JumpIfEqual {470}
	464 Move X8, [X24]
	465 Move X0, X25
	466 Move X1, [X8+64]
	467 Call 0x1C17E00
	468 Compare X0, 0
	469 JumpIfEqual {1211}
	470 Move W8, [X24+24]
	471 NotImplemented "Instruction CMP not yet implemented."
	472 Move [X24+64], X25
	473 Move W8, [X19+76]
	474 Move X0, [X27]
	475 Add X1, X31, 4
	476 Add W8, W8, W20
	477 Move [X31+4], W8
	478 Call 0x1C17E04
	479 Move X25, X0
	480 Compare X0, 0
	481 JumpIfEqual {488}
	482 Move X8, [X24]
	483 Move X0, X25
	484 Move X1, [X8+64]
	485 Call 0x1C17E00
	486 Compare X0, 0
	487 JumpIfEqual {1211}
	488 Move W8, [X24+24]
	489 NotImplemented "Instruction CMP not yet implemented."
	490 Move [X24+72], X25
	491 Compare X23, 0
	492 JumpIfEqual {1214}
	493 Move X9, 0x1ABA000
	494 Move X8, [X23]
	495 Move X9, [X9+840]
	496 Move X10, 0x1ADF000
	497 Move X1, [X9]
	498 Move X10, [X10+1176]
	499 NotImplemented "Instruction LDRH not yet implemented."
	500 Move X25, [X10]
	501 Compare X9, 0
	502 JumpIfEqual {509}
	503 Move X10, [X8+176]
	504 Add X10, X10, 8
	505 NotImplemented "Instruction LDUR not yet implemented."
	506 NotImplemented "Instruction CMP not yet implemented."
	507 Subtract X9, X9, 1
	508 Add X10, X10, 16
	509 Move W2, 1
	510 Move X0, X23
	511 Call 0x1C5D788
	512 Move W8, [X19+112]
	513 Move W9, 1
	514 Move [X19+73], W9
	515 Compare W8, 0
	516 JumpIfEqual {821}
	517 Move X8, 0x1AB5000
	518 Move X21, [X19+96]
	519 Move X8, [X8+2512]
	520 Move W1, 6
	521 Move X0, [X8]
	522 Call 0x1C17D6C
	523 Compare X0, 0
	524 JumpIfEqual {1214}
	525 Move X23, [X19+104]
	526 Move X22, X0
	527 Compare X23, 0
	528 JumpIfEqual {535}
	529 Move X8, [X22]
	530 Move X0, X23
	531 Move X1, [X8+64]
	532 Call 0x1C17E00
	533 Compare X0, 0
	534 JumpIfEqual {1211}
	535 Move W8, [X22+24]
	536 Compare W8, 0
	537 JumpIfEqual {1210}
	538 Move [X22+32], X23
	539 Move X24, 0x1AB5000
	540 Move W8, [X19+80]
	541 Move X24, [X24+1880]
	542 Add X1, X31, 28
	543 Move [X31+28], W8
	544 Move X0, [X24]
	545 Call 0x1C17E04
	546 Move X23, X0
	547 Compare X0, 0
	548 JumpIfEqual {555}
	549 Move X8, [X22]
	550 Move X0, X23
	551 Move X1, [X8+64]
	552 Call 0x1C17E00
	553 Compare X0, 0
	554 JumpIfEqual {1211}
	555 Move W8, [X22+24]
	556 NotImplemented "Instruction CMP not yet implemented."
	557 Move [X22+40], X23
	558 Move X0, [X24]
	559 Add X1, X31, 24
	560 Move [X31+24], W26
	561 Call 0x1C17E04
	562 Move X23, X0
	563 Compare X0, 0
	564 JumpIfEqual {571}
	565 Move X8, [X22]
	566 Move X0, X23
	567 Move X1, [X8+64]
	568 Call 0x1C17E00
	569 Compare X0, 0
	570 JumpIfEqual {1211}
	571 Move W8, [X22+24]
	572 NotImplemented "Instruction CMP not yet implemented."
	573 Move [X22+48], X23
	574 Move X0, [X24]
	575 Add X1, X31, 12
	576 Move [X31+12], W20
	577 Call 0x1C17E04
	578 Move X23, X0
	579 Compare X0, 0
	580 JumpIfEqual {587}
	581 Move X8, [X22]
	582 Move X0, X23
	583 Move X1, [X8+64]
	584 Call 0x1C17E00
	585 Compare X0, 0
	586 JumpIfEqual {1211}
	587 Move W8, [X22+24]
	588 NotImplemented "Instruction CMP not yet implemented."
	589 Move [X22+56], X23
	590 Move W8, [X19+40]
	591 Move X0, [X24]
	592 Add X1, X31, 8
	593 Move [X31+8], W8
	594 Call 0x1C17E04
	595 Move X23, X0
	596 Compare X0, 0
	597 JumpIfEqual {604}
	598 Move X8, [X22]
	599 Move X0, X23
	600 Move X1, [X8+64]
	601 Call 0x1C17E00
	602 Compare X0, 0
	603 JumpIfEqual {1211}
	604 Move W8, [X22+24]
	605 NotImplemented "Instruction CMP not yet implemented."
	606 Move [X22+64], X23
	607 Move W8, [X19+76]
	608 Move X0, [X24]
	609 Add X1, X31, 4
	610 Add W8, W8, W20
	611 Move [X31+4], W8
	612 Call 0x1C17E04
	613 Move X23, X0
	614 Compare X0, 0
	615 JumpIfEqual {622}
	616 Move X8, [X22]
	617 Move X0, X23
	618 Move X1, [X8+64]
	619 Call 0x1C17E00
	620 Compare X0, 0
	621 JumpIfEqual {1211}
	622 Move W8, [X22+24]
	623 NotImplemented "Instruction CMP not yet implemented."
	624 Move [X22+72], X23
	625 Compare X21, 0
	626 JumpIfEqual {1214}
	627 Move X9, 0x1ABA000
	628 Move X8, [X21]
	629 Move X9, [X9+840]
	630 Move X10, 0x1ADF000
	631 Move X1, [X9]
	632 Move X10, [X10+1224]
	633 NotImplemented "Instruction LDRH not yet implemented."
	634 Move X23, [X10]
	635 Compare X9, 0
	636 JumpIfEqual {643}
	637 Move X10, [X8+176]
	638 Add X10, X10, 8
	639 NotImplemented "Instruction LDUR not yet implemented."
	640 NotImplemented "Instruction CMP not yet implemented."
	641 Subtract X9, X9, 1
	642 Add X10, X10, 16
	643 Move W2, 1
	644 Move X0, X21
	645 Call 0x1C5D788
	646 Move W9, [X10]
	647 Add W9, W9, 1
	648 Add X8, X8, W9
	649 Add X0, X8, 312
	650 Move X8, [X0]
	651 Move X4, [X0+8]
	652 Move W1, 4
	653 Move X0, X23
	654 Move X2, X25
	655 Move X3, X24
	656 NotImplemented "Instruction BLR not yet implemented."
	657 Move W8, [X19+80]
	658 NotImplemented "Instruction CMP not yet implemented."
	659 Move W8, [X19+168]
	660 Compare W8, 0
	661 JumpIfNotEqual {979}
	662 Move W8, [X19+144]
	663 Compare W8, 0
	664 JumpIfNotEqual {675}
	665 Move X0, [X19+136]
	666 Compare X0, 0
	667 JumpIfEqual {1214}
	668 Move X8, [X22+32]
	669 Move W2, [X19+64]
	670 Move W1, [X19+68]
	671 Move W3, 6
	672 Move X8, [X8+192]
	673 Move X4, [X8+136]
	674 Call 0x26B0EA4, X0, X1, X2, X3
	675 Move W8, [X19+112]
	676 Move W9, 1
	677 Move [X19+168], W9
	678 Compare W8, 0
	679 JumpIfEqual {979}
	680 Move X8, 0x1AB5000
	681 Move X23, [X19+96]
	682 Move X8, [X8+2512]
	683 Move W1, 6
	684 Move X0, [X8]
	685 Call 0x1C17D6C
	686 Compare X0, 0
	687 JumpIfEqual {1214}
	688 Move X25, [X19+104]
	689 Move X24, X0
	690 Compare X25, 0
	691 JumpIfEqual {698}
	692 Move X8, [X24]
	693 Move X0, X25
	694 Move X1, [X8+64]
	695 Call 0x1C17E00
	696 Compare X0, 0
	697 JumpIfEqual {1211}
	698 Move W8, [X24+24]
	699 Compare W8, 0
	700 JumpIfEqual {1210}
	701 Move [X24+32], X25
	702 Move X27, 0x1AB5000
	703 Move W8, [X19+80]
	704 Move X27, [X27+1880]
	705 Add X1, X31, 28
	706 Move [X31+28], W8
	707 Move X0, [X27]
	708 Call 0x1C17E04
	709 Move X25, X0
	710 Compare X0, 0
	711 JumpIfEqual {718}
	712 Move X8, [X24]
	713 Move X0, X25
	714 Move X1, [X8+64]
	715 Call 0x1C17E00
	716 Compare X0, 0
	717 JumpIfEqual {1211}
	718 Move W8, [X24+24]
	719 NotImplemented "Instruction CMP not yet implemented."
	720 Move [X24+40], X25
	721 Move X0, [X27]
	722 Add X1, X31, 24
	723 Move [X31+24], W26
	724 Call 0x1C17E04
	725 Move X25, X0
	726 Compare X0, 0
	727 JumpIfEqual {734}
	728 Move X8, [X24]
	729 Move X0, X25
	730 Move X1, [X8+64]
	731 Call 0x1C17E00
	732 Compare X0, 0
	733 JumpIfEqual {1211}
	734 Move W8, [X24+24]
	735 NotImplemented "Instruction CMP not yet implemented."
	736 Move [X24+48], X25
	737 Move X0, [X27]
	738 Add X1, X31, 12
	739 Move [X31+12], W20
	740 Call 0x1C17E04
	741 Move X25, X0
	742 Compare X0, 0
	743 JumpIfEqual {750}
	744 Move X8, [X24]
	745 Move X0, X25
	746 Move X1, [X8+64]
	747 Call 0x1C17E00
	748 Compare X0, 0
	749 JumpIfEqual {1211}
	750 Move W8, [X24+24]
	751 NotImplemented "Instruction CMP not yet implemented."
	752 Move [X24+56], X25
	753 Move W8, [X19+40]
	754 Move X0, [X27]
	755 Add X1, X31, 8
	756 Move [X31+8], W8
	757 Call 0x1C17E04
	758 Move X25, X0
	759 Compare X0, 0
	760 JumpIfEqual {767}
	761 Move X8, [X24]
	762 Move X0, X25
	763 Move X1, [X8+64]
	764 Call 0x1C17E00
	765 Compare X0, 0
	766 JumpIfEqual {1211}
	767 Move W8, [X24+24]
	768 NotImplemented "Instruction CMP not yet implemented."
	769 Move [X24+64], X25
	770 Move W8, [X19+76]
	771 Move X0, [X27]
	772 Add X1, X31, 4
	773 Add W8, W8, W20
	774 Move [X31+4], W8
	775 Call 0x1C17E04
	776 Move X25, X0
	777 Compare X0, 0
	778 JumpIfEqual {785}
	779 Move X8, [X24]
	780 Move X0, X25
	781 Move X1, [X8+64]
	782 Call 0x1C17E00
	783 Compare X0, 0
	784 JumpIfEqual {1211}
	785 Move W8, [X24+24]
	786 NotImplemented "Instruction CMP not yet implemented."
	787 Move [X24+72], X25
	788 Compare X23, 0
	789 JumpIfEqual {1214}
	790 Move X9, 0x1ABA000
	791 Move X8, [X23]
	792 Move X9, [X9+840]
	793 Move X10, 0x1ADF000
	794 Move X1, [X9]
	795 Call 0x3EB281C
	796 Return 
	797 NotImplemented "Instruction LDRH not yet implemented."
	798 Move X25, [X10]
	799 Compare X9, 0
	800 JumpIfEqual {807}
	801 Move X10, [X8+176]
	802 Add X10, X10, 8
	803 NotImplemented "Instruction LDUR not yet implemented."
	804 NotImplemented "Instruction CMP not yet implemented."
	805 Subtract X9, X9, 1
	806 Add X10, X10, 16
	807 Move W2, 1
	808 Move X0, X23
	809 Call 0x1C5D788
	810 Move W9, [X10]
	811 Add W9, W9, 1
	812 Add X8, X8, W9
	813 Add X0, X8, 312
	814 Move X8, [X0]
	815 Move X4, [X0+8]
	816 Move W1, 4
	817 Move X0, X21
	818 Move X2, X23
	819 Move X3, X22
	820 NotImplemented "Instruction BLR not yet implemented."
	821 Move W8, [X19+168]
	822 Compare W8, 0
	823 JumpIfEqual {1197}
	824 Move W8, [X19+112]
	825 Move [X19+168], W31
	826 Compare W8, 0
	827 JumpIfEqual {1197}
	828 Move X8, 0x1AB4000
	829 Move X21, [X19+96]
	830 Move X8, [X8+2512]
	831 Move W1, 6
	832 Move X0, [X8]
	833 Call 0x1C17D6C
	834 Compare X0, 0
	835 JumpIfEqual {1214}
	836 Move X23, [X19+104]
	837 Move X22, X0
	838 Compare X23, 0
	839 JumpIfEqual {846}
	840 Move X8, [X22]
	841 Move X0, X23
	842 Move X1, [X8+64]
	843 Call 0x1C17E00
	844 Compare X0, 0
	845 JumpIfEqual {1211}
	846 Move W8, [X22+24]
	847 Compare W8, 0
	848 JumpIfEqual {1210}
	849 Move [X22+32], X23
	850 Move X24, 0x1AB4000
	851 Move W8, [X19+80]
	852 Move X24, [X24+1880]
	853 Add X1, X31, 28
	854 Move [X31+28], W8
	855 Move X0, [X24]
	856 Call 0x1C17E04
	857 Move X23, X0
	858 Compare X0, 0
	859 JumpIfEqual {866}
	860 Move X8, [X22]
	861 Move X0, X23
	862 Move X1, [X8+64]
	863 Call 0x1C17E00
	864 Compare X0, 0
	865 JumpIfEqual {1211}
	866 Move W8, [X22+24]
	867 NotImplemented "Instruction CMP not yet implemented."
	868 Move [X22+40], X23
	869 Move X0, [X24]
	870 Add X1, X31, 24
	871 Move [X31+24], W26
	872 Call 0x1C17E04
	873 Move X23, X0
	874 Compare X0, 0
	875 JumpIfEqual {882}
	876 Move X8, [X22]
	877 Move X0, X23
	878 Move X1, [X8+64]
	879 Call 0x1C17E00
	880 Compare X0, 0
	881 JumpIfEqual {1211}
	882 Move W8, [X22+24]
	883 NotImplemented "Instruction CMP not yet implemented."
	884 Move [X22+48], X23
	885 Move X0, [X24]
	886 Add X1, X31, 12
	887 Move [X31+12], W20
	888 Call 0x1C17E04
	889 Move X23, X0
	890 Compare X0, 0
	891 JumpIfEqual {898}
	892 Move X8, [X22]
	893 Move X0, X23
	894 Move X1, [X8+64]
	895 Call 0x1C17E00
	896 Compare X0, 0
	897 JumpIfEqual {1211}
	898 Move W8, [X22+24]
	899 NotImplemented "Instruction CMP not yet implemented."
	900 Move [X22+56], X23
	901 Move W8, [X19+40]
	902 Move X0, [X24]
	903 Add X1, X31, 8
	904 Move [X31+8], W8
	905 Call 0x1C17E04
	906 Move X23, X0
	907 Compare X0, 0
	908 JumpIfEqual {915}
	909 Move X8, [X22]
	910 Move X0, X23
	911 Move X1, [X8+64]
	912 Call 0x1C17E00
	913 Compare X0, 0
	914 JumpIfEqual {1211}
	915 Move W8, [X22+24]
	916 NotImplemented "Instruction CMP not yet implemented."
	917 Move [X22+64], X23
	918 Move W8, [X19+76]
	919 Move X0, [X24]
	920 Add X1, X31, 4
	921 Add W8, W8, W20
	922 Move [X31+4], W8
	923 Call 0x1C17E04
	924 Move X19, X0
	925 Compare X0, 0
	926 JumpIfEqual {933}
	927 Move X8, [X22]
	928 Move X0, X19
	929 Move X1, [X8+64]
	930 Call 0x1C17E00
	931 Compare X0, 0
	932 JumpIfEqual {1211}
	933 Move W8, [X22+24]
	934 NotImplemented "Instruction CMP not yet implemented."
	935 Move [X22+72], X19
	936 Compare X21, 0
	937 JumpIfEqual {1214}
	938 Move X9, 0x1AB9000
	939 Move X8, [X21]
	940 Move X9, [X9+840]
	941 Move X10, 0x1ADE000
	942 Move X1, [X9]
	943 Move X10, [X10+1200]
	944 NotImplemented "Instruction LDRH not yet implemented."
	945 Move X19, [X10]
	946 Compare X9, 0
	947 JumpIfEqual {954}
	948 Move X10, [X8+176]
	949 Add X10, X10, 8
	950 NotImplemented "Instruction LDUR not yet implemented."
	951 NotImplemented "Instruction CMP not yet implemented."
	952 Subtract X9, X9, 1
	953 Add X10, X10, 16
	954 Move W2, 1
	955 Move X0, X21
	956 Call 0x1C5D788
	957 Move W9, [X10]
	958 Add W9, W9, 1
	959 Add X8, X8, W9
	960 Add X0, X8, 312
	961 Move X8, [X0]
	962 Move X4, [X0+8]
	963 Move W1, 4
	964 Move X0, X21
	965 Move X2, X19
	966 Move X3, X22
	967 NotImplemented "Instruction BLR not yet implemented."
	968 Move W9, [X10]
	969 Add W9, W9, 1
	970 Add X8, X8, W9
	971 Add X0, X8, 312
	972 Move X8, [X0]
	973 Move X4, [X0+8]
	974 Move W1, 4
	975 Move X0, X23
	976 Move X2, X25
	977 Move X3, X24
	978 NotImplemented "Instruction BLR not yet implemented."
	979 Move W8, [X19+76]
	980 NotImplemented "Instruction CMP not yet implemented."
	981 Move W8, [X19+168]
	982 Compare W8, 0
	983 JumpIfEqual {1162}
	984 Move W27, [X19+144]
	985 Compare W27, 0
	986 JumpIfEqual {991}
	987 Move W8, [X19+112]
	988 Move [X19+168], W31
	989 Compare W8, 0
	990 JumpIfNotEqual {1020}
	991 Move X0, [X19+136]
	992 Compare X0, 0
	993 JumpIfEqual {1214}
	994 Move X8, [X22+32]
	995 Move X1, X21
	996 Move X8, [X8+192]
	997 Move X2, [X8+144]
	998 Call 0x26B0F90, X0, X1
	999 Move W8, [X19+68]
	1000 Move W9, [X21+24]
	1001 Move W10, [X19+16]
	1002 Move X2, [X19+128]
	1003 Move W3, W31
	1004 NotImplemented "Instruction SDIV not yet implemented."
	1005 Multiply W8, W10, W8
	1006 Subtract W23, W9, W0
	1007 Multiply W1, W8, W0
	1008 Multiply W4, W8, W23
	1009 Move X0, X21
	1010 Move X5, X31
	1011 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	1012 Move X1, [X19+128]
	1013 Move X0, X19
	1014 Move W2, W23
	1015 Call 0x264073C, X0, X1, X2
	1016 Move W8, [X19+112]
	1017 Move [X19+168], W31
	1018 Compare W8, 0
	1019 JumpIfEqual {1197}
	1020 Move X8, 0x1AB4000
	1021 Move X23, [X19+96]
	1022 Move X8, [X8+2512]
	1023 Move W1, 6
	1024 Move X0, [X8]
	1025 Call 0x1C17D6C
	1026 Compare X0, 0
	1027 JumpIfEqual {1214}
	1028 Move X25, [X19+104]
	1029 Move X24, X0
	1030 Compare X25, 0
	1031 JumpIfEqual {1038}
	1032 Move X8, [X24]
	1033 Move X0, X25
	1034 Move X1, [X8+64]
	1035 Call 0x1C17E00
	1036 Compare X0, 0
	1037 JumpIfEqual {1211}
	1038 Move W8, [X24+24]
	1039 Compare W8, 0
	1040 JumpIfEqual {1210}
	1041 Move [X24+32], X25
	1042 Move X28, 0x1AB4000
	1043 Move W8, [X19+80]
	1044 Move X28, [X28+1880]
	1045 Add X1, X31, 28
	1046 Move [X31+28], W8
	1047 Move X0, [X28]
	1048 Call 0x1C17E04
	1049 Move X25, X0
	1050 Compare X0, 0
	1051 JumpIfEqual {1058}
	1052 Move X8, [X24]
	1053 Move X0, X25
	1054 Move X1, [X8+64]
	1055 Call 0x1C17E00
	1056 Compare X0, 0
	1057 JumpIfEqual {1211}
	1058 Move W8, [X24+24]
	1059 NotImplemented "Instruction CMP not yet implemented."
	1060 Move [X24+40], X25
	1061 Move X0, [X28]
	1062 Add X1, X31, 24
	1063 Move [X31+24], W26
	1064 Call 0x1C17E04
	1065 Move X25, X0
	1066 Compare X0, 0
	1067 JumpIfEqual {1074}
	1068 Move X8, [X24]
	1069 Move X0, X25
	1070 Move X1, [X8+64]
	1071 Call 0x1C17E00
	1072 Compare X0, 0
	1073 JumpIfEqual {1211}
	1074 Move W8, [X24+24]
	1075 NotImplemented "Instruction CMP not yet implemented."
	1076 Move [X24+48], X25
	1077 Move X0, [X28]
	1078 Add X1, X31, 12
	1079 Move [X31+12], W20
	1080 Call 0x1C17E04
	1081 Move X25, X0
	1082 Compare X0, 0
	1083 JumpIfEqual {1090}
	1084 Move X8, [X24]
	1085 Move X0, X25
	1086 Move X1, [X8+64]
	1087 Call 0x1C17E00
	1088 Compare X0, 0
	1089 JumpIfEqual {1211}
	1090 Move W8, [X24+24]
	1091 NotImplemented "Instruction CMP not yet implemented."
	1092 Move [X24+56], X25
	1093 Move W8, [X19+40]
	1094 Move X0, [X28]
	1095 Add X1, X31, 8
	1096 Move [X31+8], W8
	1097 Call 0x1C17E04
	1098 Move X25, X0
	1099 Compare X0, 0
	1100 JumpIfEqual {1107}
	1101 Move X8, [X24]
	1102 Move X0, X25
	1103 Move X1, [X8+64]
	1104 Call 0x1C17E00
	1105 Compare X0, 0
	1106 JumpIfEqual {1211}
	1107 Move W8, [X24+24]
	1108 NotImplemented "Instruction CMP not yet implemented."
	1109 Move [X24+64], X25
	1110 Move W8, [X19+76]
	1111 Move X0, [X28]
	1112 Add X1, X31, 4
	1113 Add W8, W8, W20
	1114 Move [X31+4], W8
	1115 Call 0x1C17E04
	1116 Move X20, X0
	1117 Compare X0, 0
	1118 JumpIfEqual {1125}
	1119 Move X8, [X24]
	1120 Move X0, X20
	1121 Move X1, [X8+64]
	1122 Call 0x1C17E00
	1123 Compare X0, 0
	1124 JumpIfEqual {1211}
	1125 Move W8, [X24+24]
	1126 NotImplemented "Instruction CMP not yet implemented."
	1127 Move [X24+72], X20
	1128 Compare X23, 0
	1129 JumpIfEqual {1214}
	1130 Move X9, 0x1AB9000
	1131 Move X8, [X23]
	1132 Move X9, [X9+840]
	1133 Move X10, 0x1ADE000
	1134 Move X1, [X9]
	1135 Move X10, [X10+1216]
	1136 NotImplemented "Instruction LDRH not yet implemented."
	1137 Move X20, [X10]
	1138 Compare X9, 0
	1139 JumpIfEqual {1146}
	1140 Move X10, [X8+176]
	1141 Add X10, X10, 8
	1142 NotImplemented "Instruction LDUR not yet implemented."
	1143 NotImplemented "Instruction CMP not yet implemented."
	1144 Subtract X9, X9, 1
	1145 Add X10, X10, 16
	1146 Move W2, 1
	1147 Move X0, X23
	1148 Call 0x1C5D788
	1149 Move W9, [X10]
	1150 Add W9, W9, 1
	1151 Add X8, X8, W9
	1152 Add X0, X8, 312
	1153 Move X8, [X0]
	1154 Move X4, [X0+8]
	1155 Move W1, 4
	1156 Move X0, X23
	1157 Move X2, X20
	1158 Move X3, X24
	1159 NotImplemented "Instruction BLR not yet implemented."
	1160 Compare W27, 0
	1161 JumpIfEqual {1197}
	1162 Move W8, [X19+168]
	1163 Compare W8, 0
	1164 JumpIfEqual {1181}
	1165 Move W8, [X19+144]
	1166 Compare W8, 0
	1167 JumpIfNotEqual {1197}
	1168 Move X0, [X19+136]
	1169 Compare X0, 0
	1170 JumpIfEqual {1214}
	1171 Move X8, [X22+32]
	1172 Move X2, [X19+128]
	1173 Move X1, X21
	1174 Move X8, [X8+192]
	1175 Move X3, [X8+160]
	1176 Call 0x26B0EC0, X0, X1, X2
	1177 Move X1, [X19+128]
	1178 Move W2, W0
	1179 Move X0, X19
	1180 Call 0x264073C, X0, X1, X2
	1181 Move X8, [X19]
	1182 Move W2, [X19+40]
	1183 Move X0, X19
	1184 Move X1, X21
	1185 Move X9, [X8+536]
	1186 Move X3, [X8+544]
	1187 NotImplemented "Instruction BLR not yet implemented."
	1188 Move W8, [X19+68]
	1189 Move W9, [X21+24]
	1190 Move W10, [X19+40]
	1191 Move W11, [X19+28]
	1192 NotImplemented "Instruction SDIV not yet implemented."
	1193 Add W8, W8, W10
	1194 NotImplemented "Instruction SDIV not yet implemented."
	1195 NotImplemented "Instruction MSUB not yet implemented."
	1196 Move [X19+40], W8
	1197 Move X20, [X31+96]
	1198 Move X19, [X31+104]
	1199 Move X22, [X31+80]
	1200 Move X21, [X31+88]
	1201 Move X24, [X31+64]
	1202 Move X23, [X31+72]
	1203 Move X26, [X31+48]
	1204 Move X25, [X31+56]
	1205 Move X28, [X31+32]
	1206 Move X27, [X31+40]
	1207 Move X30, [X31+16]
	1208 Add X31, X31, 112
	1209 Return 
	1210 Call 0x1C17F28
	1211 Call 0x1C17F44
	1212 Move X1, X31
	1213 Call 0x1C17DEC
	1214 Call 0x1C17F20

Method: System.Void Service()

Disassembly:
	0x02640618 ADRP X9, 0x1AB8000
	0x0264061C LDR X8, [X23]
	0x02640620 LDR X9, [X9 + 0x348]
	0x02640624 ADRP X10, 0x1ADD000
	0x02640628 LDR X1, [X9]
	0x0264062C LDR X10, [X10 + 0x4A0]
	0x02640630 LDRH W9, [X8 + 0x12E]
	0x02640634 LDR X25, [X10]
	0x02640638 CBZ X9, 0x264065C
	0x0264063C LDR X10, [X8 + 0xB0]
	0x02640640 ADD X10, X10, 0x8
	0x02640644 LDUR X11, [X10 - 0x8]
	0x02640648 CMP X11, X1
	0x0264064C B.EQ 0x2640864
	0x02640650 SUBS X9, X9, 0x1
	0x02640654 ADD X10, X10, 0x10
	0x02640658 B.NE 0x2640644
	0x0264065C MOVZ W2, 0x1
	0x02640660 MOV X0, X23
	0x02640664 BL 0x1C5C788
	0x02640668 B 0x2640874
	0x0264066C TBZ X26, 0x1F, 0x26408D4
	0x02640670 LDRB W8, [X19 + 0x70]
	0x02640674 CBZ W8, 0x26408BC
	0x02640678 ADRP X8, 0x1AB3000
	0x0264067C LDR X23, [X19 + 0x60]
	0x02640680 LDR X8, [X8 + 0x9D0]
	0x02640684 MOVZ W1, 0x6
	0x02640688 LDR X0, [X8]
	0x0264068C BL 0x1C16D6C
	0x02640690 CBZ X0, 0x2641530
	0x02640694 LDR X25, [X19 + 0x68]
	0x02640698 MOV X24, X0
	0x0264069C CBZ X25, 0x26406B4
	0x026406A0 LDR X8, [X24]
	0x026406A4 MOV X0, X25
	0x026406A8 LDR X1, [X8 + 0x40]
	0x026406AC BL 0x1C16E00
	0x026406B0 CBZ X0, 0x2641524
	0x026406B4 LDR W8, [X24 + 0x18]
	0x026406B8 CBZ W8, 0x2641520
	0x026406BC STR X25, [X24 + 0x20]
	0x026406C0 ADRP X27, 0x1AB3000
	0x026406C4 LDR W8, [X19 + 0x50]
	0x026406C8 LDR X27, [X27 + 0x758]
	0x026406CC ADD X1, X31, 0x1C
	0x026406D0 STR W8, [X31 + 0x1C]
	0x026406D4 LDR X0, [X27]
	0x026406D8 BL 0x1C16E04
	0x026406DC MOV X25, X0
	0x026406E0 CBZ X0, 0x26406F8
	0x026406E4 LDR X8, [X24]
	0x026406E8 MOV X0, X25
	0x026406EC LDR X1, [X8 + 0x40]
	0x026406F0 BL 0x1C16E00
	0x026406F4 CBZ X0, 0x2641524
	0x026406F8 LDR W8, [X24 + 0x18]
	0x026406FC CMP W8, 0x1
	0x02640700 B.LS 0x2641520
	0x02640704 STR X25, [X24 + 0x28]
	0x02640708 LDR X0, [X27]
	0x0264070C ADD X1, X31, 0x18
	0x02640710 STR W26, [X31 + 0x18]
	0x02640714 BL 0x1C16E04
	0x02640718 MOV X25, X0
	0x0264071C CBZ X0, 0x2640734
	0x02640720 LDR X8, [X24]
	0x02640724 MOV X0, X25
	0x02640728 LDR X1, [X8 + 0x40]
	0x0264072C BL 0x1C16E00
	0x02640730 CBZ X0, 0x2641524
	0x02640734 LDR W8, [X24 + 0x18]
	0x02640738 CMP W8, 0x2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move [X31+8], X31
	005 Move W8, [X0+72]
	006 Compare W8, 0
	007 JumpIfEqual {78}
	008 Move X8, [X0]
	009 Move X20, X1
	010 Move X19, X0
	011 Move X9, [X8+488]
	012 Move X1, [X8+496]
	013 NotImplemented "Instruction BLR not yet implemented."
	014 NotImplemented "Instruction LDRSW not yet implemented."
	015 Move W10, [X19+113]
	016 NotImplemented "Instruction SDIV not yet implemented."
	017 NotImplemented "Instruction MSUB not yet implemented."
	018 Move [X19+48], W9
	019 Compare W10, 0
	020 JumpIfEqual {52}
	021 Move X0, [X19+152]
	022 Compare X0, 0
	023 JumpIfEqual {82}
	024 Move X8, [X20+32]
	025 Add X1, X31, 8
	026 Move X8, [X8+192]
	027 Move X2, [X8+184]
	028 Call ConcurrentQueue`1<Object>.TryDequeue, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {51}
	033 Move X8, [X20+32]
	034 Move X1, [X31+8]
	035 Move W2, [X19+48]
	036 Move X0, X19
	037 Move X8, [X8+192]
	038 Move X3, [X8+200]
	039 Call 0x263F490, X0, X1, X2
	040 Move X1, [X31+8]
	041 Compare X1, 0
	042 JumpIfEqual {51}
	043 Move X0, [X19+160]
	044 Compare X0, 0
	045 JumpIfEqual {82}
	046 Move X8, [X0]
	047 Move W2, [X1+24]
	048 Move X9, [X8+440]
	049 Move X3, [X8+448]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move W9, [X19+48]
	052 Move W8, [X19+44]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W10, [X19+28]
	055 Subtract W8, W8, W10
	056 Move [X19+44], W8
	057 Move W10, [X19+20]
	058 Add W10, W10, W8
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W9, [X19+28]
	061 Move X10, [X19]
	062 Move X1, [X19+120]
	063 Move X0, X19
	064 NotImplemented "Instruction SDIV not yet implemented."
	065 Move X12, [X10+536]
	066 Move X3, [X10+544]
	067 NotImplemented "Instruction MSUB not yet implemented."
	068 And W9, W9, W8
	069 Add W2, W9, W8
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move W9, [X19+20]
	072 Move W8, [X19+44]
	073 Move W10, [X19+48]
	074 Add W8, W9, W8
	075 Add W9, W9, W8
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move [X19+44], W8
	078 Move X20, [X31+16]
	079 Move X19, [X31+24]
	080 Move X30, [X31+32]
	081 Return 
	082 Call 0x1C17F20

Method: System.Int32 writeResampled(T[] f, System.Int32 resampledLenSamples)

Disassembly:
	0x0264073C B.LS 0x2641520
	0x02640740 STR X25, [X24 + 0x30]
	0x02640744 LDR X0, [X27]
	0x02640748 ADD X1, X31, 0xC
	0x0264074C STR W20, [X31 + 0xC]
	0x02640750 BL 0x1C16E04
	0x02640754 MOV X25, X0
	0x02640758 CBZ X0, 0x2640770
	0x0264075C LDR X8, [X24]
	0x02640760 MOV X0, X25
	0x02640764 LDR X1, [X8 + 0x40]
	0x02640768 BL 0x1C16E00
	0x0264076C CBZ X0, 0x2641524
	0x02640770 LDR W8, [X24 + 0x18]
	0x02640774 CMP W8, 0x3
	0x02640778 B.LS 0x2641520
	0x0264077C STR X25, [X24 + 0x38]
	0x02640780 LDR W8, [X19 + 0x28]
	0x02640784 LDR X0, [X27]
	0x02640788 ADD X1, X31, 0x8
	0x0264078C STR W8, [X31 + 0x8]
	0x02640790 BL 0x1C16E04
	0x02640794 MOV X25, X0
	0x02640798 CBZ X0, 0x26407B0
	0x0264079C LDR X8, [X24]
	0x026407A0 MOV X0, X25
	0x026407A4 LDR X1, [X8 + 0x40]
	0x026407A8 BL 0x1C16E00
	0x026407AC CBZ X0, 0x2641524
	0x026407B0 LDR W8, [X24 + 0x18]
	0x026407B4 CMP W8, 0x4
	0x026407B8 B.LS 0x2641520
	0x026407BC STR X25, [X24 + 0x40]
	0x026407C0 LDR W8, [X19 + 0x4C]
	0x026407C4 LDR X0, [X27]
	0x026407C8 ADD X1, X31, 0x4
	0x026407CC ADD W8, W8, W20
	0x026407D0 STR W8, [X31 + 0x4]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {42}
	007 Move W9, [X0+68]
	008 Move W10, [X1+24]
	009 Move W8, [X0+16]
	010 Move W19, W2
	011 Multiply W9, W9, W2
	012 Subtract W10, W10, W9
	013 Multiply W4, W10, W8
	014 Move X21, X1
	015 Move X20, X0
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X0, [X20+120]
	018 Multiply W3, W8, W9
	019 Move W1, W31
	020 Move X2, X21
	021 Move X5, X31
	022 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	023 Move X8, [X20]
	024 Move W2, [X20+40]
	025 Move X0, X20
	026 Move X1, X21
	027 Move X9, [X8+536]
	028 Move X3, [X8+544]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move W8, [X20+40]
	031 Move W9, [X20+28]
	032 Move W0, W19
	033 Add W8, W8, W19
	034 NotImplemented "Instruction SDIV not yet implemented."
	035 NotImplemented "Instruction MSUB not yet implemented."
	036 Move [X20+40], W8
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return X0
	042 Call 0x1C17F20

Method: System.Void Push(T[] frame)

Disassembly:
	0x026407D4 BL 0x1C16E04
	0x026407D8 MOV X25, X0
	0x026407DC CBZ X0, 0x26407F4
	0x026407E0 LDR X8, [X24]
	0x026407E4 MOV X0, X25
	0x026407E8 LDR X1, [X8 + 0x40]
	0x026407EC BL 0x1C16E00
	0x026407F0 CBZ X0, 0x2641524
	0x026407F4 LDR W8, [X24 + 0x18]
	0x026407F8 CMP W8, 0x5
	0x026407FC B.LS 0x2641520
	0x02640800 STR X25, [X24 + 0x48]
	0x02640804 CBZ X23, 0x2641530
	0x02640808 ADRP X9, 0x1AB8000
	0x0264080C LDR X8, [X23]
	0x02640810 LDR X9, [X9 + 0x348]
	0x02640814 ADRP X10, 0x1ADD000
	0x02640818 LDR X1, [X9]
	0x0264081C LDR X10, [X10 + 0x4B8]
	0x02640820 LDRH W9, [X8 + 0x12E]
	0x02640824 LDR X25, [X10]
	0x02640828 CBZ X9, 0x264084C
	0x0264082C LDR X10, [X8 + 0xB0]
	0x02640830 ADD X10, X10, 0x8
	0x02640834 LDUR X11, [X10 - 0x8]
	0x02640838 CMP X11, X1
	0x0264083C B.EQ 0x2640894
	0x02640840 SUBS X9, X9, 0x1
	0x02640844 ADD X10, X10, 0x10
	0x02640848 B.NE 0x2640834
	0x0264084C MOVZ W2, 0x1
	0x02640850 MOV X0, X23
	0x02640854 BL 0x1C5C788
	0x02640858 B 0x26408A4
	0x0264085C MOV W26, W8
	0x02640860 B 0x26408C0
	0x02640864 LDR W9, [X10]
	0x02640868 ADD W9, W9, 0x1
	0x0264086C ADD X8, X8, W9, 0x4, SXTW
	0x02640870 ADD X0, X8, 0x138
	0x02640874 LDP X8, X4, [X0]
	0x02640878 MOVZ W1, 0x4
	0x0264087C MOV X0, X23
	0x02640880 MOV X2, X25
	0x02640884 MOV X3, X24
	0x02640888 BLR X8
	0x0264088C LDR W26, [X19 + 0x54]
	0x02640890 B 0x26408C0
	0x02640894 LDR W9, [X10]
	0x02640898 ADD W9, W9, 0x1
	0x0264089C ADD X8, X8, W9, 0x4, SXTW
	0x026408A0 ADD X0, X8, 0x138
	0x026408A4 LDP X8, X4, [X0]
	0x026408A8 MOVZ W1, 0x4
	0x026408AC MOV X0, X23
	0x026408B0 MOV X2, X25
	0x026408B4 MOV X3, X24
	0x026408B8 BLR X8
	0x026408BC LDR W26, [X19 + 0x4C]
	0x026408C0 LDR W8, [X19 + 0x1C]
	0x026408C4 ADD W9, W26, W20
	0x026408C8 SDIV W10, W9, W8
	0x026408CC MSUB W8, W10, W8, W9
	0x026408D0 STR W8, [X19 + 0x28]
	0x026408D4 CBZ X21, 0x2640AE8
	0x026408D8 LDRB W8, [X19 + 0x49]
	0x026408DC CBZ W8, 0x2640D04
	0x026408E0 LDR W26, [X19 + 0x4C]
	0x026408E4 LDR W8, [X19 + 0x1C]
	0x026408E8 LDRB W9, [X19 + 0x70]
	0x026408EC STRB W31, [X19 + 0x49]
	0x026408F0 ADD W10, W26, W20
	0x026408F4 SDIV W11, W10, W8
	0x026408F8 MSUB W8, W11, W8, W10
	0x026408FC STR W8, [X19 + 0x28]
	0x02640900 CBZ W9, 0x2640D04
	0x02640904 ADRP X8, 0x1AB3000
	0x02640908 LDR X23, [X19 + 0x60]
	0x0264090C LDR X8, [X8 + 0x9D0]
	0x02640910 MOVZ W1, 0x6
	0x02640914 LDR X0, [X8]
	0x02640918 BL 0x1C16D6C
	0x0264091C CBZ X0, 0x2641530
	0x02640920 LDR X25, [X19 + 0x68]
	0x02640924 MOV X24, X0
	0x02640928 CBZ X25, 0x2640940
	0x0264092C LDR X8, [X24]
	0x02640930 MOV X0, X25
	0x02640934 LDR X1, [X8 + 0x40]
	0x02640938 BL 0x1C16E00
	0x0264093C CBZ X0, 0x2641524
	0x02640940 LDR W8, [X24 + 0x18]
	0x02640944 CBZ W8, 0x2641520
	0x02640948 STR X25, [X24 + 0x20]
	0x0264094C ADRP X27, 0x1AB3000
	0x02640950 LDR W8, [X19 + 0x50]
	0x02640954 LDR X27, [X27 + 0x758]
	0x02640958 ADD X1, X31, 0x1C
	0x0264095C STR W8, [X31 + 0x1C]
	0x02640960 LDR X0, [X27]
	0x02640964 BL 0x1C16E04
	0x02640968 MOV X25, X0
	0x0264096C CBZ X0, 0x2640984
	0x02640970 LDR X8, [X24]
	0x02640974 MOV X0, X25
	0x02640978 LDR X1, [X8 + 0x40]
	0x0264097C BL 0x1C16E00
	0x02640980 CBZ X0, 0x2641524
	0x02640984 LDR W8, [X24 + 0x18]
	0x02640988 CMP W8, 0x1
	0x0264098C B.LS 0x2641520
	0x02640990 STR X25, [X24 + 0x28]
	0x02640994 LDR X0, [X27]
	0x02640998 ADD X1, X31, 0x18
	0x0264099C STR W26, [X31 + 0x18]
	0x026409A0 BL 0x1C16E04
	0x026409A4 MOV X25, X0
	0x026409A8 CBZ X0, 0x26409C0
	0x026409AC LDR X8, [X24]
	0x026409B0 MOV X0, X25
	0x026409B4 LDR X1, [X8 + 0x40]
	0x026409B8 BL 0x1C16E00
	0x026409BC CBZ X0, 0x2641524
	0x026409C0 LDR W8, [X24 + 0x18]
	0x026409C4 CMP W8, 0x2
	0x026409C8 B.LS 0x2641520
	0x026409CC STR X25, [X24 + 0x30]
	0x026409D0 LDR X0, [X27]
	0x026409D4 ADD X1, X31, 0xC
	0x026409D8 STR W20, [X31 + 0xC]
	0x026409DC BL 0x1C16E04
	0x026409E0 MOV X25, X0
	0x026409E4 CBZ X0, 0x26409FC
	0x026409E8 LDR X8, [X24]
	0x026409EC MOV X0, X25
	0x026409F0 LDR X1, [X8 + 0x40]
	0x026409F4 BL 0x1C16E00
	0x026409F8 CBZ X0, 0x2641524
	0x026409FC LDR W8, [X24 + 0x18]
	0x02640A00 CMP W8, 0x3
	0x02640A04 B.LS 0x2641520
	0x02640A08 STR X25, [X24 + 0x38]
	0x02640A0C LDR W8, [X19 + 0x28]
	0x02640A10 LDR X0, [X27]
	0x02640A14 ADD X1, X31, 0x8
	0x02640A18 STR W8, [X31 + 0x8]
	0x02640A1C BL 0x1C16E04
	0x02640A20 MOV X25, X0
	0x02640A24 CBZ X0, 0x2640A3C
	0x02640A28 LDR X8, [X24]
	0x02640A2C MOV X0, X25
	0x02640A30 LDR X1, [X8 + 0x40]
	0x02640A34 BL 0x1C16E00
	0x02640A38 CBZ X0, 0x2641524
	0x02640A3C LDR W8, [X24 + 0x18]
	0x02640A40 CMP W8, 0x4
	0x02640A44 B.LS 0x2641520
	0x02640A48 STR X25, [X24 + 0x40]
	0x02640A4C LDR W8, [X19 + 0x4C]
	0x02640A50 LDR X0, [X27]
	0x02640A54 ADD X1, X31, 0x4
	0x02640A58 ADD W8, W8, W20
	0x02640A5C STR W8, [X31 + 0x4]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1D9B000
	009 Move W8, [X21+231]
	010 Move X20, X2
	011 Move X22, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x1AB9000
	018 Move X0, [X0+840]
	019 Call 0x1C17CF4
	020 Move X0, 0x1AB4000
	021 Move X0, [X0+1880]
	022 Call 0x1C17CF4
	023 Move X0, 0x1AB4000
	024 Move X0, [X0+2512]
	025 Call 0x1C17CF4
	026 Move X0, 0x1ADE000
	027 Move X0, [X0+1232]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+231], W8
	031 Move W8, [X19+72]
	032 Compare W8, 0
	033 JumpIfEqual {169}
	034 Compare X22, 0
	035 JumpIfEqual {177}
	036 Move X8, [X22+24]
	037 Compare X8, 0
	038 JumpIfEqual {169}
	039 Move W9, [X19+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W8, [X19+113]
	042 Compare W8, 0
	043 JumpIfEqual {148}
	044 Move X0, [X19+160]
	045 Compare X0, 0
	046 JumpIfEqual {177}
	047 Move X8, [X20+32]
	048 Move X8, [X8+192]
	049 Move X1, [X8+216]
	050 Call ObjectPool`2<Object, Int32>.AcquireOrCreate, X0
	051 Move W8, [X19+16]
	052 Move W9, [X22+24]
	053 Move X21, X0
	054 Move X0, X22
	055 Move W1, W31
	056 Multiply W4, W8, W9
	057 Move X2, X21
	058 Move W3, W31
	059 Move X5, X31
	060 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	061 Move X0, [X19+152]
	062 Compare X0, 0
	063 JumpIfEqual {177}
	064 Move X8, [X20+32]
	065 Move X1, X21
	066 Move X8, [X8+192]
	067 Move X2, [X8+224]
	068 Call ConcurrentQueue`1<Object>.Enqueue, X0, X1
	069 Move X8, 0x1AB4000
	070 Move X20, [X19+96]
	071 Move X8, [X8+2512]
	072 Move W1, 3
	073 Move X0, [X8]
	074 Call 0x1C17D6C
	075 Compare X0, 0
	076 JumpIfEqual {177}
	077 Move X23, [X19+104]
	078 Move X21, X0
	079 Compare X23, 0
	080 JumpIfEqual {87}
	081 Move X8, [X21]
	082 Move X0, X23
	083 Move X1, [X8+64]
	084 Call 0x1C17E00
	085 Compare X0, 0
	086 JumpIfEqual {179}
	087 Move W8, [X21+24]
	088 Compare W8, 0
	089 JumpIfEqual {178}
	090 Move [X21+32], X23
	091 Move X23, 0x1AB4000
	092 Move X8, [X22+24]
	093 Move X23, [X23+1880]
	094 Add X1, X31, 12
	095 Move [X31+12], W8
	096 Move X0, [X23]
	097 Call 0x1C17E04
	098 Move X22, X0
	099 Compare X0, 0
	100 JumpIfEqual {107}
	101 Move X8, [X21]
	102 Move X0, X22
	103 Move X1, [X8+64]
	104 Call 0x1C17E00
	105 Compare X0, 0
	106 JumpIfEqual {179}
	107 Move W8, [X21+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move [X21+40], X22
	110 Move W8, [X19+24]
	111 Move X0, [X23]
	112 Add X1, X31, 8
	113 Move [X31+8], W8
	114 Call 0x1C17E04
	115 Move X19, X0
	116 Compare X0, 0
	117 JumpIfEqual {124}
	118 Move X8, [X21]
	119 Move X0, X19
	120 Move X1, [X8+64]
	121 Call 0x1C17E00
	122 Compare X0, 0
	123 JumpIfEqual {179}
	124 Move W8, [X21+24]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move [X21+48], X19
	127 Compare X20, 0
	128 JumpIfEqual {177}
	129 Move X9, 0x1AB9000
	130 Move X8, [X20]
	131 Move X9, [X9+840]
	132 Move X10, 0x1ADE000
	133 Move X1, [X9]
	134 Move X10, [X10+1232]
	135 NotImplemented "Instruction LDRH not yet implemented."
	136 Move X19, [X10]
	137 Compare X9, 0
	138 JumpIfEqual {145}
	139 Move X10, [X8+176]
	140 Add X10, X10, 8
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Subtract X9, X9, 1
	144 Add X10, X10, 16
	145 Move W2, 1
	146 Move X0, X20
	147 Call 0x1C5D788
	148 Move X8, [X20+32]
	149 Move W2, [X19+48]
	150 Move X0, X19
	151 Move X1, X22
	152 Move X8, [X8+192]
	153 Move X3, [X8+200]
	154 Call 0x263F490, X0, X1, X2
	155 Move X0, X31
	156 Call Environment.get_TickCount
	157 Move [X19+88], W0
	158 Move W9, [X10]
	159 Add W9, W9, 1
	160 Add X8, X8, W9
	161 Add X0, X8, 312
	162 Move X8, [X0]
	163 Move X4, [X0+8]
	164 Move W1, 1
	165 Move X0, X20
	166 Move X2, X19
	167 Move X3, X21
	168 NotImplemented "Instruction BLR not yet implemented."
	169 Move X20, [X31+48]
	170 Move X19, [X31+56]
	171 Move X22, [X31+32]
	172 Move X21, [X31+40]
	173 Move X30, [X31+16]
	174 Move X23, [X31+24]
	175 Add X31, X31, 64
	176 Return 
	177 Call 0x1C17F20
	178 Call 0x1C17F28
	179 Call 0x1C17F44
	180 Move X1, X31
	181 Call 0x1C17DEC

Method: System.Void Flush()

Disassembly:
	0x02640A60 BL 0x1C16E04
	0x02640A64 MOV X25, X0
	0x02640A68 CBZ X0, 0x2640A80
	0x02640A6C LDR X8, [X24]
	0x02640A70 MOV X0, X25
	0x02640A74 LDR X1, [X8 + 0x40]
	0x02640A78 BL 0x1C16E00
	0x02640A7C CBZ X0, 0x2641524
	0x02640A80 LDR W8, [X24 + 0x18]
	0x02640A84 CMP W8, 0x5
	0x02640A88 B.LS 0x2641520
	0x02640A8C STR X25, [X24 + 0x48]
	0x02640A90 CBZ X23, 0x2641530
	0x02640A94 ADRP X9, 0x1AB8000
	0x02640A98 LDR X8, [X23]
	0x02640A9C LDR X9, [X9 + 0x348]
	0x02640AA0 ADRP X10, 0x1ADD000
	0x02640AA4 LDR X1, [X9]
	0x02640AA8 LDR X10, [X10 + 0x498]

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+113]
	003 Compare W8, 0
	004 JumpIfEqual {15}
	005 Move X0, [X0+152]
	006 Compare X0, 0
	007 JumpIfEqual {23}
	008 Move X8, [X1+32]
	009 Move X1, X31
	010 Move X8, [X8+192]
	011 Move X2, [X8+224]
	012 Move X30, [X31+16]
	013 Call ConcurrentQueue`1<Object>.Enqueue, X0, X1
	014 Return 
	015 Move X8, [X1+32]
	016 Move W2, [X0+48]
	017 Move X1, X31
	018 Move X8, [X8+192]
	019 Move X3, [X8+200]
	020 Move X30, [X31+16]
	021 Call 0x263F490, X0, X1, X2
	022 Return 
	023 Call 0x1C17F20

Method: System.Void Stop()

Disassembly:
	0x02640AAC LDRH W9, [X8 + 0x12E]
	0x02640AB0 LDR X25, [X10]

ISIL:
	001 Move [X0+72], W31
	002 Return 

