Type: Photon.Voice.ImageBufferNative

Method: System.Void .ctor(Photon.Voice.ImageBufferInfo info)

Disassembly:
	0x03567DF8 TBZ X0, 0x0, 0x3567E44
	0x03567DFC CBZ X21, 0x3567E74
	0x03567E00 LDR X0, [X20 + 0x18]
	0x03567E04 LDR W2, [X21 + 0x18]
	0x03567E08 MOV X1, X21
	0x03567E0C BL 0x35547EC
	0x03567E10 LDR X2, [X27]
	0x03567E14 MOV X0, X19
	0x03567E18 MOV X1, X21
	0x03567E1C BL 0x3194090
	0x03567E20 LDR X0, [X19 + 0x138]
	0x03567E24 CBZ X0, 0x3567E74
	0x03567E28 LDR X1, [X24]
	0x03567E2C BL 0x2D10E70
	0x03567E30 LDR X23, [X20 + 0x10]
	0x03567E34 CBZ X23, 0x3567E74
	0x03567E38 LDR X22, [X20 + 0x18]
	0x03567E3C MOV X21, X0
	0x03567E40 B 0x3567D9C
	0x03567E44 CBZ X21, 0x3567E74

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move W8, 1
	006 Move X1, X31
	007 Move X20, X0
	008 Move [X0+96], W8
	009 Call Object..ctor, X0
	010 Move X8, [X19+32]
	011 Move V1, [X19]
	012 Move V0, [X19+16]
	013 Move [X20+48], X8
	014 Move [X20+16], V1
	015 Move [X20+24], V0
	016 Move W8, [X19+24]
	017 NotImplemented "Instruction MOVI not yet implemented."
	018 Move [X20+72], V0
	019 Move [X20+56], V0
	020 Move [X20+88], W8
	021 Move [X20+92], W31
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return 

Method: System.Void .ctor(System.IntPtr buf, System.Int32 width, System.Int32 height, System.Int32 stride, Photon.Voice.ImageFormat imageFormat)

Disassembly:
	0x03567E58 MOV X1, X21
	0x03567E5C LDP X20, X19, [X31 + 0x40]
	0x03567E60 LDP X22, X21, [X31 + 0x30]
	0x03567E64 LDP X24, X23, [X31 + 0x20]
	0x03567E68 LDP X26, X25, [X31 + 0x10]
	0x03567E6C LDP X30, X27, [X31], #0x50
	0x03567E70 B 0x2D10ED8
	0x03567E74 BL 0x1C16F20
	0x03567E78 MOV X0, X19
	0x03567E7C BL 0x1C171E0
	0x03567E80 STR X30, [X31 - 0x20]!
	0x03567E84 STP X20, X19, [X31 + 0x10]
	0x03567E88 LDR W8, [X0 + 0x10]
	0x03567E8C CMP W8, W1
	0x03567E90 B.EQ 0x3567ECC
	0x03567E94 MOV X19, X0
	0x03567E98 LDR X0, [X0 + 0x58]
	0x03567E9C MOV W20, W1
	0x03567EA0 STR W1, [X19 + 0x10]
	0x03567EA4 MOV X1, X31
	0x03567EA8 MOV X2, X31
	0x03567EAC BL 0x33C5D2C
	0x03567EB0 TBZ X0, 0x0, 0x3567ECC
	0x03567EB4 MOV X0, X19
	0x03567EB8 MOV W2, W20
	0x03567EBC LDP X20, X19, [X31 + 0x10]
	0x03567EC0 MOVZ W1, 0x1
	0x03567EC4 LDR X30, [X31], #0x20
	0x03567EC8 B 0x3567ED8
	0x03567ECC LDP X20, X19, [X31 + 0x10]
	0x03567ED0 LDR X30, [X31], #0x20
	0x03567ED4 RET
	0x03567ED8 SUB X31, X31, 0x50
	0x03567EDC STP X30, X23, [X31 + 0x20]
	0x03567EE0 STP X22, X21, [X31 + 0x30]
	0x03567EE4 STP X20, X19, [X31 + 0x40]
	0x03567EE8 ADRP X21, 0xE78000
	0x03567EEC LDRB W8, [X21 + 0xDFF]
	0x03567EF0 MOV W19, W1
	0x03567EF4 MOV X20, X0
	0x03567EF8 STR W2, [X31 + 0x1C]
	0x03567EFC TBNZ X8, 0x0, 0x3567F44
	0x03567F00 ADRP X0, 0xB8C000

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+96], X24
	004 Move [X31+104], X23
	005 Move [X31+112], X22
	006 Move [X31+120], X21
	007 Move [X31+128], X20
	008 Move [X31+136], X19
	009 Move X23, X1
	010 Move W8, 1
	011 Move X1, X31
	012 Move W19, W5
	013 Move W20, W4
	014 Move W21, W3
	015 Move W22, W2
	016 Move X24, X0
	017 Move [X0+96], W8
	018 Call Object..ctor, X0
	019 Move X8, -44539904
	020 Move V1, [X8+31]
	021 NotImplemented "Instruction MOVI not yet implemented."
	022 Add X0, X31, 32
	023 Add X3, X31, 8
	024 Move W1, W22
	025 Move W2, W21
	026 Move W4, W19
	027 Move [X31+64], X31
	028 Move [X31+32], V0
	029 Move [X31+40], V0
	030 Move [X31+8], W20
	031 Move [X31+12], V1
	032 Call ImageBufferInfo..ctor, X0, X1, X2, X3, X4
	033 Move X9, -44535808
	034 Move V0, [X31+32]
	035 Move V1, [X31+48]
	036 Move X8, [X31+64]
	037 Move V2, [X9+3776]
	038 Move [X24+72], X31
	039 Move [X24+80], X31
	040 Move [X24+16], V0
	041 Move [X24+24], V1
	042 Move [X24+48], X8
	043 Move [X24+56], X23
	044 Move [X24+64], X31
	045 Move [X24+88], D2
	046 Move X20, [X31+128]
	047 Move X19, [X31+136]
	048 Move X22, [X31+112]
	049 Move X21, [X31+120]
	050 Move X24, [X31+96]
	051 Move X23, [X31+104]
	052 Move X30, [X31+80]
	053 Add X31, X31, 144
	054 Return 

Method: System.Void Reset()

Disassembly:
	0x03567F04 LDR X0, [X0 + 0x9C8]
	0x03567F08 BL 0x1C16CF4
	0x03567F0C ADRP X0, 0xB91000
	0x03567F10 LDR X0, [X0 + 0x348]
	0x03567F14 BL 0x1C16CF4
	0x03567F18 ADRP X0, 0xBCE000
	0x03567F1C LDR X0, [X0 + 0xCD0]
	0x03567F20 BL 0x1C16CF4
	0x03567F24 ADRP X0, 0xBB9000
	0x03567F28 LDR X0, [X0 + 0xFB8]
	0x03567F2C BL 0x1C16CF4
	0x03567F30 ADRP X0, 0xBCE000
	0x03567F34 LDR X0, [X0 + 0xCD8]
	0x03567F38 BL 0x1C16CF4
	0x03567F3C MOVZ W8, 0x1
	0x03567F40 STRB W8, [X21 + 0xDFF]
	0x03567F44 LDRB W8, [X20 + 0x60]
	0x03567F48 CBZ W8, 0x3567F54
	0x03567F4C MOV W0, W31
	0x03567F50 B 0x356809C
	0x03567F54 ADRP X8, 0xBCE000
	0x03567F58 LDR X8, [X8 + 0xCD0]
	0x03567F5C LDR X21, [X20 + 0x78]
	0x03567F60 MOVN X9, 0x0
	0x03567F64 ADD X0, X31, 0x0
	0x03567F68 LDR X8, [X8]
	0x03567F6C MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE79000
	006 Move X20, 0xBCF000
	007 Move W8, [X21+3565]
	008 Move X20, [X20+3176]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xBCF000
	015 Move X0, [X0+3176]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3565], W8
	019 Move W8, 1
	020 Move [X19+96], W8
	021 Move [X19+48], W31
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 NotImplemented "Instruction STRH not yet implemented."
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

Method: System.Void Free()

Disassembly:
	0x03567F70 STR W19, [X31 + 0x10]

ISIL:
	001 Return 

Method: System.Void Retain()

Disassembly:
	0x03567F74 STP X8, X9, [X31]
	0x03567F78 BL 0x33B162C
	0x03567F7C MOV X22, X0

ISIL:
	001 Add X0, X0, 96
	002 Move X1, X31
	003 Call Interlocked.Increment, X0
	004 Return 

Method: System.Void Retain(System.Int32 times)

Disassembly:
	0x03567F80 ADD X0, X31, 0x1C
	0x03567F84 MOV X1, X31
	0x03567F88 BL 0x337B6E0

ISIL:
	001 Add X0, X0, 96
	002 Move X2, X31
	003 Call Interlocked.Add, X0, X1
	004 Return 

Method: System.Void Release()

Disassembly:
	0x03567F8C ADRP X8, 0xBCE000
	0x03567F90 LDR X8, [X8 + 0xCD8]
	0x03567F94 ADRP X9, 0xBB9000
	0x03567F98 LDR X9, [X9 + 0xFB8]
	0x03567F9C MOV X3, X0
	0x03567FA0 LDR X8, [X8]
	0x03567FA4 MOV X1, X22
	0x03567FA8 LDR X2, [X9]
	0x03567FAC MOV X4, X31
	0x03567FB0 MOV X0, X8
	0x03567FB4 BL 0x32277C4
	0x03567FB8 ADRP X8, 0xB8C000
	0x03567FBC LDR X8, [X8 + 0x9C8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Add X0, X0, 96
	005 Move X1, X31
	006 Call Interlocked.Decrement, X0
	007 Compare W0, 0
	008 JumpIfEqual {12}
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return 
	012 Move X8, [X19]
	013 Move X0, X19
	014 Move X2, [X8+392]
	015 Move X1, [X8+400]
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 CallNoReturn X2

Method: System.Void Dispose()

Disassembly:
	0x03567FC0 MOV X22, X0

ISIL:
	001 Return 

