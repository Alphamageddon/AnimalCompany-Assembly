Type: Photon.Voice.SpacingProfile/<>c

Method: System.Void .cctor()

Disassembly:
	0x03558488 MOVZ W8, 0x1
	0x0355848C STRB W8, [X20 + 0x10]
	0x03558490 LDR X0, [X25]
	0x03558494 BL 0x1C16F10
	0x03558498 MOV X1, X31
	0x0355849C MOV X25, X0
	0x035584A0 BL 0x33BDD8C
	0x035584A4 MOV X0, X31
	0x035584A8 STR X25, [X20 + 0xB8]
	0x035584AC BL 0x33C18F4
	0x035584B0 SUB W8, W0, 0x64
	0x035584B4 STR W8, [X20 + 0xD8]
	0x035584B8 LDR X0, [X29]
	0x035584BC MOV W1, W31
	0x035584C0 BL 0x1C16D6C
	0x035584C4 STR X0, [X20 + 0xE0]
	0x035584C8 LDR X0, [X28]
	0x035584CC BL 0x1C16F10
	0x035584D0 LDR X1, [X27]
	0x035584D4 MOV X25, X0
	0x035584D8 BL 0x29CFA10
	0x035584DC STR X25, [X20 + 0xF8]
	0x035584E0 ADRP X8, 0xBDD000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xE88000
	005 Move X20, 0xBDE000
	006 Move W8, [X19+3481]
	007 Move X20, [X20+1192]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xBDE000
	013 Move X0, [X0+1192]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3481], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x035584E4 LDR X8, [X8 + 0x510]
	0x035584E8 LDR X0, [X8]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Int16 <get_Max>b__13_0(System.Int16 v)

Disassembly:
	0x035584EC BL 0x1C16F10
	0x035584F0 MOV X1, X31
	0x035584F4 MOV X25, X0
	0x035584F8 BL 0x33BDD8C
	0x035584FC MOVZ W8, 0x3E8
	0x03558500 MOV X0, X20
	0x03558504 MOV X1, X31
	0x03558508 STR W8, [X25 + 0x20]
	0x0355850C STR X25, [X20 + 0x100]
	0x03558510 BL 0x33BDD8C
	0x03558514 LDP V1, V0, [X24 + 0x10]
	0x03558518 LDR V2, [X24]
	0x0355851C STR W22, [X20 + 0x84]
	0x03558520 MOV X0, X20
	0x03558524 STUR V0, [X20 + 0x68]
	0x03558528 STUR V1, [X20 + 0x58]
	0x0355852C STUR V2, [X20 + 0x48]
	0x03558530 LDRB W8, [X21 + 0x8]
	0x03558534 STRB W8, [X20 + 0x38]
	0x03558538 LDR X1, [X21 + 0x10]
	0x0355853C BL 0x35580A0
	0x03558540 LDRB W8, [X21 + 0x18]
	0x03558544 MOV X0, X20
	0x03558548 AND W1, W8, 0x1
	0x0355854C BL 0x355786C
	0x03558550 LDRB W8, [X21 + 0x19]
	0x03558554 AND W8, W8, 0x1
	0x03558558 STRB W8, [X20 + 0x24]
	0x0355855C LDRB W8, [X21 + 0x1A]
	0x03558560 AND W8, W8, 0x1
	0x03558564 STRB W8, [X20 + 0x25]
	0x03558568 LDRB W8, [X21 + 0x1B]
	0x0355856C AND W8, W8, 0x1
	0x03558570 STRB W8, [X20 + 0x26]
	0x03558574 LDR W8, [X21 + 0x1C]
	0x03558578 STR X19, [X20 + 0x90]
	0x0355857C STR W8, [X20 + 0x28]
	0x03558580 CBZ X19, 0x35587A4
	0x03558584 LDRB W8, [X19 + 0x20]
	0x03558588 ADRP X24, 0xBDD000
	0x0355858C ADRP X25, 0xBDD000
	0x03558590 ADRP X26, 0xB9B000
	0x03558594 LDR X24, [X24 + 0x538]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE88000
	006 Move X20, 0xB9C000
	007 Move W8, [X21+3482]
	008 Move X20, [X20+1448]
	009 Move W19, W1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB9C000
	015 Move X0, [X0+1448]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3482], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X21, 0xE88000
	025 Move W8, [X21+3586]
	026 Compare W8, 0
	027 JumpIfEqual {32}
	028 Move TEMP, X19
	029 And TEMP, TEMP, 0x8000
	030 Compare TEMP, 0x8000
	031 JumpIfNotEqual {55}
	032 Move X0, 0xB9C000
	033 Move X0, [X0+1448]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+3586], W8
	037 Move TEMP, X19
	038 And TEMP, TEMP, 0x8000
	039 Compare TEMP, 0x8000
	040 JumpIfNotEqual {55}
	041 Subtract W8, W31, W19
	042 Move TEMP, X8
	043 And TEMP, TEMP, 0x8000
	044 Compare TEMP, 0x8000
	045 JumpIfEqual {47}
	046 NotImplemented "Instruction SXTH not yet implemented."
	047 Move X0, [X20]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X31
	053 Call Math.ThrowAbsOverflow
	054 Move W19, 0x8000
	055 Move W0, W19
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 Return X0

