Type: Photon.Voice.AudioUtil/LevelMeterFloat

Method: System.Void .ctor(System.Int32 samplingRate, System.Int32 numChannels)

Disassembly:
	0x03555880 TBNZ X8, 0x0, 0x3555888
	0x03555884 BL 0x1C5C684
	0x03555888 LDR X8, [X0 + 0xB8]
	0x0355588C LDR X19, [X8]
	0x03555890 CBZ X19, 0x35558FC
	0x03555894 ADRP X10, 0xBE0000
	0x03555898 LDR X8, [X19]
	0x0355589C LDR X10, [X10 + 0x3C0]
	0x035558A0 LDRH W9, [X8 + 0x12E]
	0x035558A4 LDR X1, [X10]
	0x035558A8 CBZ X9, 0x35558CC
	0x035558AC LDR X10, [X8 + 0xB0]
	0x035558B0 ADD X10, X10, 0x8
	0x035558B4 LDUR X11, [X10 - 0x8]
	0x035558B8 CMP X11, X1
	0x035558BC B.EQ 0x35558DC
	0x035558C0 SUBS X9, X9, 0x1
	0x035558C4 ADD X10, X10, 0x10
	0x035558C8 B.NE 0x35558B4
	0x035558CC MOV X0, X19
	0x035558D0 MOV W2, W31
	0x035558D4 BL 0x1C5C788
	0x035558D8 B 0x35558E8
	0x035558DC LDRSW X9, [X10]
	0x035558E0 ADD X8, X8, X9, 0x4, LSL
	0x035558E4 ADD X0, X8, 0x138
	0x035558E8 LDP X2, X1, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xE8B000
	008 Move X23, 0xBE1000
	009 Move W8, [X22+3435]
	010 Move X23, [X23+840]
	011 Move W20, W2
	012 Move W21, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xBE1000
	019 Move X0, [X0+840]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3435], W8
	023 Move X3, [X23]
	024 Move X0, X19
	025 Move W1, W21
	026 Move W2, W20
	027 Call LevelMeter`1<Single>..ctor, X0, X1, X2
	028 Move W8, 0x3F800000
	029 Move [X19+56], W8
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Move X23, [X31+56]
	036 Return 

Method: System.Single[] Process(System.Single[] buf)

Disassembly:
	0x035558EC MOV X0, X19
	0x035558F0 LDP X20, X19, [X31 + 0x10]
	0x035558F4 LDR X30, [X31], #0x20
	0x035558F8 BR X2
	0x035558FC BL 0x1C16F20
	0x03555900 LDR X0, [X0 + 0x28]
	0x03555904 RET
	0x03555908 STR X1, [X0 + 0x28]
	0x0355590C CBZ X1, 0x3555928
	0x03555910 LDR X8, [X0 + 0x10]
	0x03555914 CBZ X8, 0x3555928
	0x03555918 LDR X2, [X1 + 0x18]
	0x0355591C LDR X0, [X1 + 0x40]
	0x03555920 LDR X1, [X1 + 0x28]
	0x03555924 BR X2
	0x03555928 RET
	0x0355592C B 0x35557F8
	0x03555930 SUB X31, X31, 0xD0
	0x03555934 STR X30, [X31 + 0x90]
	0x03555938 STP X24, X23, [X31 + 0xA0]
	0x0355593C STP X22, X21, [X31 + 0xB0]
	0x03555940 STP X20, X19, [X31 + 0xC0]
	0x03555944 ADRP X24, 0xE8A000
	0x03555948 ADRP X23, 0xBE0000
	0x0355594C ADRP X22, 0xBE0000
	0x03555950 LDRB W8, [X24 + 0xD80]
	0x03555954 LDR X23, [X23 + 0x3A8]
	0x03555958 LDR X22, [X22 + 0x3B0]
	0x0355595C MOV X21, X2
	0x03555960 MOV X20, X1
	0x03555964 MOV X19, X0
	0x03555968 TBNZ X8, 0x0, 0x3555998
	0x0355596C ADRP X0, 0xBE0000
	0x03555970 LDR X0, [X0 + 0x3C8]
	0x03555974 BL 0x1C16CF4
	0x03555978 ADRP X0, 0xBE0000
	0x0355597C LDR X0, [X0 + 0x3B0]
	0x03555980 BL 0x1C16CF4
	0x03555984 ADRP X0, 0xBE0000
	0x03555988 LDR X0, [X0 + 0x3A8]
	0x0355598C BL 0x1C16CF4
	0x03555990 MOVZ W8, 0x1
	0x03555994 STRB W8, [X24 + 0xD80]
	0x03555998 MOV X0, X19
	0x0355599C MOV X1, X20
	0x035559A0 BL 0x3555758
	0x035559A4 LDR X0, [X23]
	0x035559A8 BL 0x1C16F10
	0x035559AC LDR X1, [X22]
	0x035559B0 MOV X20, X0
	0x035559B4 BL 0x2FAE5A8
	0x035559B8 MOVI V0.2D, 0x0
	0x035559BC ADD X0, X31, 0x0

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {54}
	004 Move X8, [X1+24]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 And X8, X8, 0
	007 Compare X8, 0
	008 JumpIfEqual {50}
	009 Add X9, X1, 32
	010 Compare X8, 0
	011 JumpIfEqual {53}
	012 Move V0, [X9]
	013 Move X11, [X0+32]
	014 NotImplemented "Instruction FNEG not yet implemented."
	015 NotImplemented "Instruction FCMP not yet implemented."
	016 NotImplemented "Instruction FCSEL not yet implemented."
	017 Compare X11, 0
	018 JumpIfEqual {54}
	019 NotImplemented "Instruction LDRSW not yet implemented."
	020 Move W12, [X11+24]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move V1, [X0+16]
	023 Add X11, X11, X10
	024 Move V2, [X11+32]
	025 Add S1, S1, S0
	026 Subtract S1, S1, S2
	027 Move [X0+16], S1
	028 Move [X11+32], S0
	029 Move V1, [X0+20]
	030 NotImplemented "Instruction FCMP not yet implemented."
	031 Move V1, V0
	032 Move [X0+20], S0
	033 Compare W10, 0
	034 JumpIfNotEqual {43}
	035 Move V0, [X0+44]
	036 Move W11, [X0+48]
	037 Move [X0+52], S1
	038 Move [X0+20], W31
	039 Add S0, S1, S0
	040 Add W11, W11, 1
	041 Move [X0+44], S0
	042 Move [X0+48], W11
	043 Move W11, [X0+24]
	044 Add W10, W10, 1
	045 Subtract X8, X8, 1
	046 Add X9, X9, 4
	047 NotImplemented "Instruction SDIV not yet implemented."
	048 NotImplemented "Instruction MSUB not yet implemented."
	049 Move [X0+40], W10
	050 Move X0, X1
	051 Move X30, [X31+16]
	052 Return X0
	053 Call 0x1C17F28
	054 Call 0x1C17F20

