Type: Photon.Voice.RemoteVoiceOptions

Method: System.Void .ctor(Photon.Voice.ILogger logger, System.String logPrefix, Photon.Voice.VoiceInfo voiceInfo)

Disassembly:
	0x0355BAE4 LDR X0, [X24]
	0x0355BAE8 LDRB W22, [X31 + 0x14C]
	0x0355BAEC LDR W8, [X0 + 0xE0]
	0x0355BAF0 CBNZ W8, 0x355BAF8
	0x0355BAF4 BL 0x1C16DFC
	0x0355BAF8 LDR W8, [X21 + 0x18]
	0x0355BAFC CMP W22, W8
	0x0355BB00 B.CS 0x355BFC4
	0x0355BB04 MOVZ W8, 0x38

ISIL:
	001 Move [X0+16], X1
	002 Move [X0+72], X2
	003 Move V1, [X3+16]
	004 Move V0, [X3+32]
	005 Move V2, [X3]
	006 Move [X0], X31
	007 Move [X0+8], X31
	008 Move [X0+56], V0
	009 Move [X0+40], V1
	010 Move [X0+24], V2
	011 Return 

Method: System.Void SetOutput(System.Action`1<Photon.Voice.FrameOut`1<System.Single>> output)

Disassembly:
	0x0355BB08 UMADDL X8, X22, X8, X21
	0x0355BB0C ADD X0, X8, 0x20
	0x0355BB10 BL 0x3555CB0
	0x0355BB14 LDR X9, [X19 + 0xD0]
	0x0355BB18 LDP V2, V0, [X20 + 0x10]
	0x0355BB1C LDR X10, [X20 + 0x30]
	0x0355BB20 LDR V1, [X20]
	0x0355BB24 LDRB W8, [X31 + 0x14C]
	0x0355BB28 STP V2, V0, [X31 + 0x110]
	0x0355BB2C STR X10, [X31 + 0x130]
	0x0355BB30 STR V1, [X31 + 0x10]
	0x0355BB34 CBZ X9, 0x355B834
	0x0355BB38 LDP V0, V1, [X31 + 0x100]
	0x0355BB3C LDR V2, [X31 + 0x12]
	0x0355BB40 LDR X10, [X31 + 0x130]
	0x0355BB44 STP V0, V1, [X31]
	0x0355BB48 STR V2, [X31 + 0x2]
	0x0355BB4C STR X10, [X31 + 0x30]
	0x0355BB50 LDR W10, [X9 + 0x18]
	0x0355BB54 CMP W8, W10
	0x0355BB58 B.CS 0x355BFC4
	0x0355BB5C LDP V2, V0, [X31 + 0x10]
	0x0355BB60 LDR X11, [X31 + 0x30]
	0x0355BB64 LDR V1, [X31]
	0x0355BB68 MOVZ W10, 0x38
	0x0355BB6C MADD X9, X8, X10, X9
	0x0355BB70 STR X11, [X9 + 0x50]
	0x0355BB74 STP V2, V0, [X9 + 0x30]
	0x0355BB78 STR V1, [X9 + 0x2]
	0x0355BB7C LDR X9, [X19 + 0xD8]
	0x0355BB80 CBZ X9, 0x355B834
	0x0355BB84 LDR W10, [X9 + 0x18]
	0x0355BB88 CMP W8, W10
	0x0355BB8C B.CS 0x355BFC4
	0x0355BB90 ADD X8, X9, X8, 0x2, LSL
	0x0355BB94 ADD X0, X8, 0x20
	0x0355BB98 MOV W1, W31
	0x0355BB9C MOV X2, X31
	0x0355BBA0 BL 0x33E9064
	0x0355BBA4 LDR W8, [X20 + 0x1C]
	0x0355BBA8 LDRB W9, [X20 + 0x31]
	0x0355BBAC ADD W8, W8, 0x1
	0x0355BBB0 STR W8, [X20 + 0x1C]
	0x0355BBB4 TBZ X9, 0x3, 0x355BBC0
	0x0355BBB8 LDRB W8, [X31 + 0x14C]
	0x0355BBBC STR W8, [X19 + 0xF0]
	0x0355BBC0 LDRB W8, [X19 + 0x128]
	0x0355BBC4 CMP W8, 0x7E
	0x0355BBC8 B.HI 0x355BBD4
	0x0355BBCC ADD W8, W8, 0x1
	0x0355BBD0 STRB W8, [X19 + 0x128]
	0x0355BBD4 MOV X22, X19
	0x0355BBD8 LDRB W21, [X22 + 0xE0]!
	0x0355BBDC LDR X0, [X24]
	0x0355BBE0 LDR W8, [X0 + 0xE0]
	0x0355BBE4 CBNZ W8, 0x355BBEC
	0x0355BBE8 BL 0x1C16DFC
	0x0355BBEC LDRB W8, [X20 + 0x32]
	0x0355BBF0 SUB W9, W21, W8
	0x0355BBF4 TBZ X9, 0x7, 0x355BC20
	0x0355BBF8 LDR X0, [X24]
	0x0355BBFC LDR W9, [X0 + 0xE0]
	0x0355BC00 CBNZ W9, 0x355BC0C
	0x0355BC04 BL 0x1C16DFC
	0x0355BC08 LDRB W8, [X20 + 0x32]
	0x0355BC0C LDR X0, [X19 + 0xE8]
	0x0355BC10 STRB W8, [X19 + 0xE0]
	0x0355BC14 CBZ X0, 0x355BC20
	0x0355BC18 MOV X1, X31
	0x0355BC1C BL 0x33DE66C
	0x0355BC20 LDR X0, [X24]
	0x0355BC24 LDR W8, [X0 + 0xE0]
	0x0355BC28 CBNZ W8, 0x355BC30
	0x0355BC2C BL 0x1C16DFC
	0x0355BC30 LDRB W8, [X20 + 0x32]
	0x0355BC34 LDRB W9, [X19 + 0xE1]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xE85000
	010 Move W8, [X21+3499]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0xBDB000
	018 Move X0, [X0+1672]
	019 Call 0x1C17CF4
	020 Move X0, 0xBDB000
	021 Move X0, [X0+1680]
	022 Call 0x1C17CF4
	023 Move X0, 0xBDB000
	024 Move X0, [X0+1688]
	025 Call 0x1C17CF4
	026 Move X0, 0xBDB000
	027 Move X0, [X0+1696]
	028 Call 0x1C17CF4
	029 Move X0, 0xBDB000
	030 Move X0, [X0+1704]
	031 Call 0x1C17CF4
	032 Move X0, 0xBDB000
	033 Move X0, [X0+1712]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+3499], W8
	037 Move W8, [X19+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X8, 0xBDB000
	040 Move X8, [X8+1712]
	041 Move X22, 0xBDB000
	042 Move X22, [X22+1672]
	043 Move X23, 0xBDB000
	044 Move X0, [X8]
	045 Move X24, 0xBDB000
	046 Move X25, 0xBDB000
	047 Move X23, [X23+1704]
	048 Move X24, [X24+1688]
	049 Move X25, [X25+1680]
	050 Call 0x1C17F10
	051 Move X1, X20
	052 Move X21, X0
	053 Call ShortToFloat..ctor, X0, X1
	054 Move X0, [X22]
	055 Call 0x1C17F10
	056 Move X2, [X23]
	057 Move X1, X21
	058 Move X3, X31
	059 Move X20, X0
	060 Call Action`1<Object>..ctor, X0, X1, X2
	061 Move X0, [X24]
	062 Call 0x1C17F10
	063 Move X2, [X25]
	064 Move X1, X20
	065 Move X21, X0
	066 Call 0x29B2568, X0, X1
	067 Move [X19+8], X21
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Move X25, [X31+72]
	076 Return 
	077 Move X8, 0xBDB000
	078 Move X8, [X8+1696]
	079 Move X0, X19
	080 Move X1, X20
	081 Move X20, [X31+48]
	082 Move X19, [X31+56]
	083 Move X2, [X8]
	084 Move X22, [X31+32]
	085 Move X21, [X31+40]
	086 Move X24, [X31+16]
	087 Move X23, [X31+24]
	088 Move X30, [X31+64]
	089 Move X25, [X31+72]
	090 Call RemoteVoiceOptions.setOutput, X0, X1
	091 Return 

Method: System.Void SetOutput(System.Action`1<Photon.Voice.FrameOut`1<System.Int16>> output)

Disassembly:
	0x0355BC38 SUB W8, W8, W9
	0x0355BC3C TBZ X8, 0x7, 0x355BF58
	0x0355BC40 LDR X8, [X19 + 0xC8]
	0x0355BC44 CBZ X8, 0x355B834
	0x0355BC48 LDR W9, [X8 + 0x34]
	0x0355BC4C STR W9, [X31 + 0xBC]
	0x0355BC50 LDR X21, [X8 + 0x18]
	0x0355BC54 ADD W9, W9, 0x1
	0x0355BC58 STR W9, [X8 + 0x34]
	0x0355BC5C CBZ X21, 0x355B834
	0x0355BC60 ADRP X25, 0xB9D000
	0x0355BC64 LDR X8, [X21]
	0x0355BC68 LDR X25, [X25 + 0x348]
	0x0355BC6C LDRH W9, [X8 + 0x12E]
	0x0355BC70 LDR X1, [X25]
	0x0355BC74 CBZ X9, 0x355BC98
	0x0355BC78 LDR X10, [X8 + 0xB0]
	0x0355BC7C ADD X10, X10, 0x8
	0x0355BC80 LDUR X11, [X10 - 0x8]
	0x0355BC84 CMP X11, X1
	0x0355BC88 B.EQ 0x355BCA8
	0x0355BC8C SUBS X9, X9, 0x1
	0x0355BC90 ADD X10, X10, 0x10
	0x0355BC94 B.NE 0x355BC80
	0x0355BC98 MOV X0, X21
	0x0355BC9C MOV W2, W31
	0x0355BCA0 BL 0x1C5C788
	0x0355BCA4 B 0x355BCB4
	0x0355BCA8 LDRSW X9, [X10]
	0x0355BCAC ADD X8, X8, X9, 0x4, LSL
	0x0355BCB0 ADD X0, X8, 0x138
	0x0355BCB4 LDP X8, X1, [X0]
	0x0355BCB8 MOV X0, X21
	0x0355BCBC BLR X8
	0x0355BCC0 CMP W0, 0x5
	0x0355BCC4 B.LT 0x355BF58
	0x0355BCC8 LDR X8, [X19 + 0xC8]
	0x0355BCCC CBZ X8, 0x355B834
	0x0355BCD0 LDR X21, [X8 + 0x18]
	0x0355BCD4 ADRP X8, 0xB98000
	0x0355BCD8 LDR X8, [X8 + 0xAC8]
	0x0355BCDC MOVZ W1, 0xD
	0x0355BCE0 LDR X0, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE85000
	006 Move W8, [X21+3500]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xBDB000
	014 Move X0, [X0+1680]
	015 Call 0x1C17CF4
	016 Move X0, 0xBDB000
	017 Move X0, [X0+1688]
	018 Call 0x1C17CF4
	019 Move X0, 0xBDB000
	020 Move X0, [X0+1720]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3500], W8
	024 Move W8, [X20+24]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, 0xBDB000
	027 Move X8, [X8+1688]
	028 Move X21, 0xBDB000
	029 Move X0, [X8]
	030 Move X21, [X21+1680]
	031 Call 0x1C17F10
	032 Move X2, [X21]
	033 Move X1, X19
	034 Move X21, X0
	035 Call 0x29B2568, X0, X1
	036 Move [X20+8], X21
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 
	042 Move X8, 0xBDB000
	043 Move X8, [X8+1720]
	044 Move X0, X20
	045 Move X1, X19
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X2, [X8]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Call 0x2240DDC, X0, X1
	052 Return 

Method: System.Void setOutput(System.Action`1<Photon.Voice.FrameOut`1<T>> output)

Disassembly:
	0x02240DDC BL 0x1C16D08
	0x02240DE0 BL 0x1C16F10
	0x02240DE4 MOV X21, X0
	0x02240DE8 ADRP X0, 0x1EDC000
	0x02240DEC LDR X0, [X0 + 0x450]
	0x02240DF0 BL 0x1C16D08
	0x02240DF4 MOV X1, X0
	0x02240DF8 MOV X0, X21
	0x02240DFC MOV X2, X31
	0x02240E00 BL 0x3314A68
	0x02240E04 MOV X0, X21
	0x02240E08 MOV X1, X20
	0x02240E0C BL 0x1C16DEC
	0x02240E10 B 0x2240E2C
	0x02240E14 B 0x2240E2C
	0x02240E18 B 0x2240E2C
	0x02240E1C B 0x2240E2C
	0x02240E20 B 0x2240E2C
	0x02240E24 B 0x2240E2C
	0x02240E28 B 0x2240E2C
	0x02240E2C MOV X20, X0
	0x02240E30 CMP W1, 0x1
	0x02240E34 B.NE 0x2240E98
	0x02240E38 MOV X0, X20
	0x02240E3C BL 0x3EB1AD0
	0x02240E40 MOV X20, X0
	0x02240E44 ADRP X0, 0x1EB3000
	0x02240E48 LDR X0, [X0 + 0x7D0]
	0x02240E4C BL 0x1C16D08
	0x02240E50 LDR X8, [X20]
	0x02240E54 LDR X1, [X8]
	0x02240E58 BL 0x1C17270
	0x02240E5C TBZ X0, 0x0, 0x2240E70
	0x02240E60 LDR X20, [X20]
	0x02240E64 BL 0x3EB1AE0
	0x02240E68 MOV W0, W31
	0x02240E6C B 0x2240D24
	0x02240E70 MOVZ W0, 0x8
	0x02240E74 BL 0x3EB1AF0
	0x02240E78 LDR X8, [X20]
	0x02240E7C STR X8, [X0]
	0x02240E80 ADRP X1, 0x1C74000
	0x02240E84 ADD X1, X1, 0xE58
	0x02240E88 MOV X2, X31
	0x02240E8C BL 0x3EB1B00
	0x02240E90 MOV X20, X0
	0x02240E94 BL 0x3EB1AE0
	0x02240E98 MOV X0, X20
	0x02240E9C BL 0x1D2C690
	0x02240EA0 BL 0x1990590
	0x02240EA4 SUB X31, X31, 0x50
	0x02240EA8 STP X30, X23, [X31 + 0x20]
	0x02240EAC STP X22, X21, [X31 + 0x30]
	0x02240EB0 STP X20, X19, [X31 + 0x40]
	0x02240EB4 LDR X9, [X3 + 0x38]
	0x02240EB8 MOV X23, X3
	0x02240EBC MOV X20, X2
	0x02240EC0 MOV X21, X1
	0x02240EC4 MOV X22, X0
	0x02240EC8 MOV X19, X8
	0x02240ECC CBNZ X9, 0x2240ED8
	0x02240ED0 MOV X0, X23
	0x02240ED4 BL 0x1C5C6E0
	0x02240ED8 MOV X0, X22
	0x02240EDC MOV X1, X21
	0x02240EE0 MOV X2, X31
	0x02240EE4 BL 0x3994E54
	0x02240EE8 LDR X8, [X23 + 0x38]
	0x02240EEC MOV X3, X0
	0x02240EF0 MOV X0, X22
	0x02240EF4 MOV X1, X21
	0x02240EF8 LDR X4, [X8 + 0x8]
	0x02240EFC ADD X8, X31, 0x0
	0x02240F00 MOV X2, X20
	0x02240F04 BL 0x2240F24
	0x02240F08 LDP V1, V0, [X31]
	0x02240F0C LDP X22, X21, [X31 + 0x30]
	0x02240F10 LDP X30, X23, [X31 + 0x20]
	0x02240F14 STP V1, V0, [X19]
	0x02240F18 LDP X20, X19, [X31 + 0x40]
	0x02240F1C ADD X31, X31, 0x50
	0x02240F20 RET
	0x02240F24 STR X30, [X31 - 0x50]!
	0x02240F28 STP X26, X25, [X31 + 0x10]
	0x02240F2C STP X24, X23, [X31 + 0x20]
	0x02240F30 STP X22, X21, [X31 + 0x30]
	0x02240F34 STP X20, X19, [X31 + 0x40]
	0x02240F38 LDR X9, [X4 + 0x38]
	0x02240F3C MOV X25, X4
	0x02240F40 MOV X23, X3
	0x02240F44 MOV X22, X2
	0x02240F48 MOV X24, X1
	0x02240F4C MOV X19, X0
	0x02240F50 MOV X20, X8
	0x02240F54 CBNZ X9, 0x2240F80
	0x02240F58 ADRP X0, 0x1EDC000
	0x02240F5C LDR X0, [X0 + 0x458]
	0x02240F60 BL 0x1C16CF4
	0x02240F64 ADRP X0, 0x1EDC000
	0x02240F68 LDR X0, [X0 + 0x460]
	0x02240F6C BL 0x1C16CF4
	0x02240F70 LDR X8, [X25 + 0x38]
	0x02240F74 CBNZ X8, 0x2240F80
	0x02240F78 MOV X0, X25
	0x02240F7C BL 0x1C5C6E0
	0x02240F80 LDR X0, [X19 + 0x18]
	0x02240F84 CBZ X0, 0x2241078
	0x02240F88 LDR X8, [X25 + 0x38]
	0x02240F8C LDR X1, [X8]
	0x02240F90 BL 0x224113C
	0x02240F94 LDR X8, [X19 + 0x20]
	0x02240F98 CBZ X8, 0x2241078
	0x02240F9C LDR X9, [X19 + 0x18]
	0x02240FA0 CBZ X9, 0x2241078
	0x02240FA4 LDR X9, [X25 + 0x38]
	0x02240FA8 LDR W26, [X8 + 0x18]
	0x02240FAC MOV X21, X0
	0x02240FB0 LDR X1, [X9 + 0x10]
	0x02240FB4 BL 0x224113C
	0x02240FB8 CBZ X21, 0x2241078
	0x02240FBC LDR X8, [X25 + 0x38]
	0x02240FC0 MOV X2, X0
	0x02240FC4 MOV X0, X21
	0x02240FC8 MOV W1, W26
	0x02240FCC LDR X5, [X8 + 0x20]
	0x02240FD0 MOV X3, X24
	0x02240FD4 MOV X4, X23
	0x02240FD8 BL 0x25C7A48
	0x02240FDC LDR X8, [X21 + 0x70]
	0x02240FE0 STR X8, [X22]
	0x02240FE4 LDR X0, [X19 + 0x20]
	0x02240FE8 CBZ X0, 0x2241078
	0x02240FEC ADRP X9, 0x1EDC000
	0x02240FF0 LDR X9, [X9 + 0x458]
	0x02240FF4 LDR W10, [X0 + 0x1C]
	0x02240FF8 LDR X8, [X0 + 0x10]
	0x02240FFC LDR X9, [X9]
	0x02241000 ADD W10, W10, 0x1
	0x02241004 STR W10, [X0 + 0x1C]
	0x02241008 CBZ X8, 0x2241078
	0x0224100C LDRSW X10, [X0 + 0x18]
	0x02241010 LDR W11, [X8 + 0x18]
	0x02241014 CMP W10, W11
	0x02241018 B.CS 0x2241030
	0x0224101C ADD W9, W10, 0x1
	0x02241020 ADD X8, X8, X10, 0x3, LSL
	0x02241024 STR W9, [X0 + 0x18]
	0x02241028 STR X21, [X8 + 0x20]
	0x0224102C B 0x2241044
	0x02241030 LDR X8, [X9 + 0x20]
	0x02241034 MOV X1, X21
	0x02241038 LDR X8, [X8 + 0xC0]
	0x0224103C LDR X2, [X8 + 0x70]
	0x02241040 BL 0x301BF90
	0x02241044 MOVI V0.2D, 0x0
	0x02241048 LDR X2, [X19 + 0x10]
	0x0224104C STP V0, V0, [X20]
	0x02241050 MOV X0, X20
	0x02241054 MOV X1, X21
	0x02241058 MOV X3, X19
	0x0224105C LDP X20, X19, [X31 + 0x40]
	0x02241060 LDP X22, X21, [X31 + 0x30]
	0x02241064 LDP X24, X23, [X31 + 0x20]
	0x02241068 LDP X26, X25, [X31 + 0x10]
	0x0224106C MOV X4, X31
	0x02241070 LDR X30, [X31], #0x50
	0x02241074 B 0x3997350
	0x02241078 BL 0x1C16F20
	0x0224107C STP X30, X21, [X31 - 0x20]!
	0x02241080 STP X20, X19, [X31 + 0x10]
	0x02241084 LDR X8, [X2 + 0x38]
	0x02241088 MOV X20, X2
	0x0224108C MOV X21, X1
	0x02241090 MOV X19, X0
	0x02241094 CBNZ X8, 0x22410A4
	0x02241098 MOV X0, X20
	0x0224109C BL 0x1C5C6E0
	0x022410A0 LDR X8, [X20 + 0x38]
	0x022410A4 LDR X1, [X8]
	0x022410A8 LDR X19, [X19]
	0x022410AC LDRB W8, [X1 + 0x135]
	0x022410B0 TBNZ X8, 0x0, 0x22410C0
	0x022410B4 MOV X0, X1
	0x022410B8 BL 0x1C5C684
	0x022410BC MOV X1, X0
	0x022410C0 CBZ X19, 0x2241138
	0x022410C4 LDR X8, [X19]
	0x022410C8 CMP X8, X1
	0x022410CC B.NE 0x2241130
	0x022410D0 LDR X8, [X20 + 0x38]
	0x022410D4 LDR X1, [X8]
	0x022410D8 LDRB W8, [X1 + 0x135]
	0x022410DC TBNZ X8, 0x0, 0x22410EC
	0x022410E0 MOV X0, X1
	0x022410E4 BL 0x1C5C684
	0x022410E8 MOV X1, X0
	0x022410EC LDR X8, [X19]
	0x022410F0 CMP X8, X1
	0x022410F4 B.NE 0x2241130
	0x022410F8 STR X21, [X19 + 0x78]
	0x022410FC LDR X8, [X20 + 0x38]
	0x02241100 LDR X1, [X8]
	0x02241104 LDRB W8, [X1 + 0x135]
	0x02241108 TBNZ X8, 0x0, 0x2241118
	0x0224110C MOV X0, X1
	0x02241110 BL 0x1C5C684
	0x02241114 MOV X1, X0
	0x02241118 LDR X8, [X19]
	0x0224111C CMP X8, X1
	0x02241120 B.NE 0x2241130
	0x02241124 LDP X20, X19, [X31 + 0x10]
	0x02241128 LDP X30, X21, [X31], #0x20
	0x0224112C RET
	0x02241130 MOV X0, X19
	0x02241134 BL 0x1C171E0
	0x02241138 BL 0x1C16F20
	0x0224113C STP X30, X19, [X31 - 0x10]!
	0x02241140 LDR X8, [X1 + 0x38]
	0x02241144 MOV X19, X1
	0x02241148 CBNZ X8, 0x2241158
	0x0224114C MOV X0, X19
	0x02241150 BL 0x1C5C6E0
	0x02241154 LDR X8, [X19 + 0x38]
	0x02241158 LDR X0, [X8 + 0x8]
	0x0224115C LDRB W8, [X0 + 0x135]
	0x02241160 TBNZ X8, 0x0, 0x2241168
	0x02241164 BL 0x1C5C684
	0x02241168 LDR W8, [X0 + 0xE0]
	0x0224116C CBNZ W8, 0x2241174
	0x02241170 BL 0x1C16DFC
	0x02241174 LDR X8, [X19 + 0x38]
	0x02241178 LDR X0, [X8]
	0x0224117C BL 0x25E5C20
	0x02241180 CBZ X0, 0x2241194
	0x02241184 LDR X8, [X19 + 0x38]
	0x02241188 LDR X1, [X8 + 0x18]
	0x0224118C LDP X30, X19, [X31], #0x10
	0x02241190 B 0x25E5A80
	0x02241194 BL 0x1C16F20
	0x02241198 STP X29, X30, [X31 - 0x40]!
	0x0224119C STR X23, [X31 + 0x10]
	0x022411A0 STP X22, X21, [X31 + 0x20]
	0x022411A4 STP X20, X19, [X31 + 0x30]
	0x022411A8 ADD X29, X31, 0x0
	0x022411AC SUB X31, X31, 0x10
	0x022411B0 MRS X23, 0xC000
	0x022411B4 LDR X8, [X23 + 0x28]
	0x022411B8 MOV X20, X2
	0x022411BC MOV X19, X1
	0x022411C0 STUR X8, [X29 - 0x8]
	0x022411C4 LDR X8, [X2 + 0x38]
	0x022411C8 CBNZ X8, 0x22411D8
	0x022411CC MOV X0, X20
	0x022411D0 BL 0x1C5C6E0
	0x022411D4 LDR X8, [X20 + 0x38]
	0x022411D8 LDR X9, [X8 + 0x20]
	0x022411DC LDR W21, [X9 + 0xFC]
	0x022411E0 ADD X9, X31, 0x0
	0x022411E4 ADD X10, X21, 0xF
	0x022411E8 AND X10, X10, 0x1FFFFFFFF
	0x022411EC SUB X22, X9, X10
	0x022411F0 ADD X31, X22, 0x0
	0x022411F4 LDR X0, [X8 + 0x8]
	0x022411F8 LDRB W8, [X0 + 0x135]
	0x022411FC TBNZ X8, 0x0, 0x2241204
	0x02241200 BL 0x1C5C684
	0x02241204 LDR W8, [X0 + 0xE0]
	0x02241208 CBNZ W8, 0x2241210
	0x0224120C BL 0x1C16DFC
	0x02241210 LDR X8, [X20 + 0x38]
	0x02241214 LDR X0, [X8]
	0x02241218 LDR X8, [X0]
	0x0224121C BLR X8
	0x02241220 CBZ X0, 0x2241280
	0x02241224 LDR X8, [X20 + 0x38]
	0x02241228 MOV X2, X0
	0x0224122C SUB X3, X29, 0x10
	0x02241230 MOV X4, X22
	0x02241234 LDR X1, [X8 + 0x18]
	0x02241238 LDR X0, [X1]
	0x0224123C STUR X22, [X29 - 0x10]
	0x02241240 LDR X8, [X1 + 0x10]
	0x02241244 BLR X8
	0x02241248 MOV X0, X19
	0x0224124C MOV X1, X22
	0x02241250 MOV X2, X21
	0x02241254 BL 0x3EB1AC0
	0x02241258 LDR X8, [X23 + 0x28]
	0x0224125C LDUR X9, [X29 - 0x8]
	0x02241260 CMP X8, X9
	0x02241264 B.NE 0x2241284
	0x02241268 ADD X31, X29, 0x0
	0x0224126C LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X8, [X2+56]
	015 Move X20, X2
	016 Move X21, X1
	017 Move X19, X0
	018 Compare X8, 0
	019 JumpIfNotEqual {55}
	020 Move X0, 0x1EB4000
	021 Move X0, [X0+2504]
	022 Call 0x1C17CF4
	023 Move X0, 0x1EDD000
	024 Move X0, [X0+1064]
	025 Call 0x1C17CF4
	026 Move X0, 0x1EB9000
	027 Move X0, [X0+840]
	028 Call 0x1C17CF4
	029 Move X0, 0x1EB4000
	030 Move X0, [X0+2760]
	031 Call 0x1C17CF4
	032 Move X0, 0x1EB4000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move X0, 0x1EDD000
	036 Move X0, [X0+1072]
	037 Call 0x1C17CF4
	038 Move X0, 0x1EDD000
	039 Move X0, [X0+1080]
	040 Call 0x1C17CF4
	041 Move X0, 0x1EDD000
	042 Move X0, [X0+1088]
	043 Call 0x1C17CF4
	044 Move X0, 0x1EDD000
	045 Move X0, [X0+1096]
	046 Call 0x1C17CF4
	047 Move X0, 0x1EB6000
	048 Move X0, [X0+608]
	049 Call 0x1C17CF4
	050 Move X8, [X20+56]
	051 Compare X8, 0
	052 JumpIfNotEqual {55}
	053 Move X0, X20
	054 Call 0x1C5D6E0
	055 Move X26, 0x1EB4000
	056 Move X22, [X19+16]
	057 Move X26, [X26+2760]
	058 Move W1, 6
	059 Move X0, [X26]
	060 Call 0x1C17D6C
	061 Compare X0, 0
	062 JumpIfEqual {331}
	063 Move W8, [X0+24]
	064 Move X23, X0
	065 Compare W8, 0
	066 JumpIfEqual {330}
	067 Move X9, [X19+72]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move [X23+32], X9
	070 Move X8, 0x1EDD000
	071 Move X8, [X8+1096]
	072 Move X25, 0x1EDD000
	073 Move TEMP, 0
	074 Not TEMP
	075 Move X10, TEMP
	076 Add X0, X31, 8
	077 Move X8, [X8]
	078 Move X25, [X25+1064]
	079 Move X1, X31
	080 Move [X23+40], X8
	081 Move X8, [X25]
	082 Move W9, [X19+24]
	083 Move [X31+8], X8
	084 Move [X31+16], X10
	085 Move [X31+24], W9
	086 Call Enum.ToString, X0
	087 Move W8, [X23+24]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move [X23+48], X0
	091 Move X8, 0x1EDD000
	092 Move X8, [X8+1072]
	093 Move X29, 0x1EB4000
	094 Move X8, [X8]
	095 Move [X23+56], X8
	096 Move X29, [X29+1728]
	097 Move X8, [X20+56]
	098 Move X0, [X29]
	099 Move X24, [X8]
	100 Move W9, [X0+224]
	101 Compare W9, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move X0, X24
	105 Move X1, X31
	106 Call Type.GetTypeFromHandle, X0
	107 Compare X0, 0
	108 JumpIfEqual {113}
	109 Move X8, [X0]
	110 Move X9, [X8+360]
	111 Move X1, [X8+368]
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Move W8, [X23+24]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move [X23+64], X0
	117 Move X8, 0x1EB6000
	118 Move X8, [X8+608]
	119 Move X0, X23
	120 Move X1, X31
	121 Move X8, [X8]
	122 Move [X23+72], X8
	123 Call String.Concat, X0
	124 Move X27, 0x1EB4000
	125 Move X27, [X27+2504]
	126 Move X23, X0
	127 Move X24, [X27]
	128 Move X8, [X24+56]
	129 Compare X8, 0
	130 JumpIfNotEqual {134}
	131 Move X0, X24
	132 Call 0x1C5D6E0
	133 Move X8, [X24+56]
	134 Move X0, [X8+16]
	135 Move W8, [X0+309]
	136 Move TEMP, X8
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfEqual {141}
	140 Call 0x1C5D684
	141 Move W8, [X0+224]
	142 Compare W8, 0
	143 JumpIfNotEqual {145}
	144 Call 0x1C17DFC
	145 Move X8, [X24+56]
	146 Move X0, [X8+16]
	147 Move W8, [X0+309]
	148 Move TEMP, X8
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfEqual {153}
	152 Call 0x1C5D684
	153 Compare X22, 0
	154 JumpIfEqual {331}
	155 Move X28, 0x1EB9000
	156 Move X9, [X0+184]
	157 Move X8, [X22]
	158 Move X28, [X28+840]
	159 Move X24, [X9]
	160 NotImplemented "Instruction LDRH not yet implemented."
	161 Move X1, [X28]
	162 Compare X9, 0
	163 JumpIfEqual {170}
	164 Move X10, [X8+176]
	165 Add X10, X10, 8
	166 NotImplemented "Instruction LDUR not yet implemented."
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Subtract X9, X9, 1
	169 Add X10, X10, 16
	170 Move W2, 1
	171 Move X0, X22
	172 Call 0x1C5D788
	173 Move W9, [X10]
	174 Add W9, W9, 1
	175 Add X8, X8, W9
	176 Add X0, X8, 312
	177 Move X8, [X0]
	178 Move X4, [X0+8]
	179 Move W1, 3
	180 Move X0, X22
	181 Move X2, X23
	182 Move X3, X24
	183 NotImplemented "Instruction BLR not yet implemented."
	184 Move W8, [X19+24]
	185 Move X22, [X19+16]
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move X8, [X20+56]
	188 Move X0, [X8+16]
	189 Move W8, [X0+309]
	190 Move TEMP, X8
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfEqual {195}
	194 Call 0x1C5D684
	195 Call 0x1C17F10
	196 Move X8, [X20+56]
	197 Move X1, X21
	198 Move X2, X22
	199 Move X20, X0
	200 Move X3, [X8+24]
	201 Call 0x29B209C, X0, X1, X2
	202 Move [X19+8], X20
	203 Move X0, [X26]
	204 Move W1, 5
	205 Call 0x1C17D6C
	206 Compare X0, 0
	207 JumpIfEqual {331}
	208 Move W8, [X0+24]
	209 Move X21, X0
	210 Compare W8, 0
	211 JumpIfEqual {330}
	212 Move X9, [X19+72]
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move [X21+32], X9
	215 Move X8, 0x1EDC000
	216 Move X8, [X8+1088]
	217 Move X8, [X8]
	218 Move [X21+40], X8
	219 Move X0, [X29]
	220 Move X8, [X20+56]
	221 Move W9, [X0+224]
	222 Move X20, [X8]
	223 Compare W9, 0
	224 JumpIfNotEqual {226}
	225 Call 0x1C17DFC
	226 Move X0, X20
	227 Move X1, X31
	228 Call Type.GetTypeFromHandle, X0
	229 Compare X0, 0
	230 JumpIfEqual {235}
	231 Move X8, [X0]
	232 Move X9, [X8+360]
	233 Move X1, [X8+368]
	234 NotImplemented "Instruction BLR not yet implemented."
	235 Move W8, [X21+24]
	236 NotImplemented "Instruction CMP not yet implemented."
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move [X21+48], X0
	239 Move X8, 0x1EDC000
	240 Move X8, [X8+1080]
	241 Move TEMP, 0
	242 Not TEMP
	243 Move X10, TEMP
	244 Add X0, X31, 8
	245 Move X1, X31
	246 Move X8, [X8]
	247 Move [X21+56], X8
	248 Move X8, [X25]
	249 Move W9, [X19+24]
	250 Move [X31+8], X8
	251 Move [X31+16], X10
	252 Move [X31+24], W9
	253 Call Enum.ToString, X0
	254 Move W8, [X21+24]
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move [X21+64], X0
	257 Move X0, X21
	258 Move X1, X31
	259 Call String.Concat, X0
	260 Move X20, [X27]
	261 Move X19, X0
	262 Move X8, [X20+56]
	263 Compare X8, 0
	264 JumpIfNotEqual {268}
	265 Move X0, X20
	266 Call 0x1C5D6E0
	267 Move X8, [X20+56]
	268 Move X0, [X8+16]
	269 Move W8, [X0+309]
	270 Move TEMP, X8
	271 And TEMP, TEMP, 1
	272 Compare TEMP, 1
	273 JumpIfEqual {275}
	274 Call 0x1C5D684
	275 Move W8, [X0+224]
	276 Compare W8, 0
	277 JumpIfNotEqual {279}
	278 Call 0x1C17DFC
	279 Move X8, [X20+56]
	280 Move X0, [X8+16]
	281 Move W8, [X0+309]
	282 Move TEMP, X8
	283 And TEMP, TEMP, 1
	284 Compare TEMP, 1
	285 JumpIfEqual {287}
	286 Call 0x1C5D684
	287 Compare X22, 0
	288 JumpIfEqual {331}
	289 Move X9, [X0+184]
	290 Move X8, [X22]
	291 Move X1, [X28]
	292 Move X20, [X9]
	293 NotImplemented "Instruction LDRH not yet implemented."
	294 Compare X9, 0
	295 JumpIfEqual {302}
	296 Move X10, [X8+176]
	297 Add X10, X10, 8
	298 NotImplemented "Instruction LDUR not yet implemented."
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Subtract X9, X9, 1
	301 Add X10, X10, 16
	302 Move W2, 1
	303 Move X0, X22
	304 Call 0x1C5D788
	305 Move W9, [X10]
	306 Add W9, W9, 1
	307 Add X8, X8, W9
	308 Add X0, X8, 312
	309 Move X8, [X0]
	310 Move X4, [X0+8]
	311 Move W1, 1
	312 Move X0, X22
	313 Move X2, X19
	314 Move X3, X20
	315 NotImplemented "Instruction BLR not yet implemented."
	316 Move X20, [X31+112]
	317 Move X19, [X31+120]
	318 Move X22, [X31+96]
	319 Move X21, [X31+104]
	320 Move X24, [X31+80]
	321 Move X23, [X31+88]
	322 Move X26, [X31+64]
	323 Move X25, [X31+72]
	324 Move X28, [X31+48]
	325 Move X27, [X31+56]
	326 Move X29, [X31+32]
	327 Move X30, [X31+40]
	328 Add X31, X31, 128
	329 Return 
	330 Call 0x1C17F28
	331 Call 0x1C17F20

Method: System.Action get_OnRemoteVoiceRemoveAction()

Disassembly:
	0x0355BCE4 BL 0x1C16D6C
	0x0355BCE8 CBZ X0, 0x355B834

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: System.Void set_OnRemoteVoiceRemoveAction(System.Action value)

Disassembly:
	0x0355BCEC LDR W8, [X0 + 0x18]
	0x0355BCF0 MOV X23, X0

ISIL:
	001 Move [X0], X1
	002 Return 

Method: Photon.Voice.IDecoder get_Decoder()

Disassembly:
	0x0355BCF4 CBZ W8, 0x355BFC4
	0x0355BCF8 LDR X9, [X19 + 0xB8]

ISIL:
	001 Move X0, [X0+8]
	002 Return X0

Method: System.Void set_Decoder(Photon.Voice.IDecoder value)

Disassembly:
	0x0355BCFC CMP W8, 0x1
	0x0355BD00 STR X9, [X23 + 0x20]

ISIL:
	001 Move [X0+8], X1
	002 Return 

Method: System.String get_logPrefix()

Disassembly:
	0x0355BD04 B.EQ 0x355BFC4
	0x0355BD08 ADRP X8, 0xBDA000

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

