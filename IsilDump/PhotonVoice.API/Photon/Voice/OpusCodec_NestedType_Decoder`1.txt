Type: Photon.Voice.OpusCodec/Decoder`1

Method: System.Void .ctor(System.Action`1<Photon.Voice.FrameOut`1<T>> output, Photon.Voice.ILogger logger)

Disassembly:
	0x029B209C MOVZ W1, 0x1
	0x029B20A0 MOV X0, X20
	0x029B20A4 MOV X2, X19
	0x029B20A8 MOV X3, X21
	0x029B20AC BLR X8
	0x029B20B0 B 0x29B1EB0
	0x029B20B4 BL 0x1C16F20
	0x029B20B8 MOVZ W0, 0x8
	0x029B20BC BL 0x3EB1AF0
	0x029B20C0 LDR X8, [X21]
	0x029B20C4 STR X8, [X0]
	0x029B20C8 ADRP X1, 0x1502000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move [X21+40], X20
	011 Move [X21+24], X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: System.Void Open(Photon.Voice.VoiceInfo i)

Disassembly:
	0x029B20CC ADD X1, X1, 0xE58
	0x029B20D0 MOV X2, X31
	0x029B20D4 BL 0x3EB1B00
	0x029B20D8 MOV X21, X0
	0x029B20DC BL 0x3EB1AE0
	0x029B20E0 MOV X0, X21
	0x029B20E4 BL 0x1D2C690
	0x029B20E8 BL 0x1990590
	0x029B20EC LDR X0, [X0 + 0x20]
	0x029B20F0 RET
	0x029B20F4 STR X1, [X0 + 0x20]
	0x029B20F8 RET
	0x029B20FC LDR X0, [X0 + 0x10]
	0x029B2100 CBZ X0, 0x29B2110
	0x029B2104 LDR X8, [X0]
	0x029B2108 LDP X2, X1, [X8 + 0x188]
	0x029B210C BR X2
	0x029B2110 RET
	0x029B2114 STR X30, [X31 - 0x30]!
	0x029B2118 STP X22, X21, [X31 + 0x10]
	0x029B211C STP X20, X19, [X31 + 0x20]
	0x029B2120 ADRP X22, 0x1A28000
	0x029B2124 LDRB W8, [X22 + 0xFBF]
	0x029B2128 MOV X20, X2
	0x029B212C MOV X19, X1
	0x029B2130 MOV X21, X0
	0x029B2134 TBNZ X8, 0x0, 0x29B214C
	0x029B2138 ADRP X0, 0x176A000
	0x029B213C LDR X0, [X0 + 0xE18]
	0x029B2140 BL 0x1C16CF4
	0x029B2144 MOVZ W8, 0x1
	0x029B2148 STRB W8, [X22 + 0xFBF]
	0x029B214C LDR X8, [X20 + 0x20]
	0x029B2150 MOV X0, X21
	0x029B2154 LDR X8, [X8 + 0xC0]
	0x029B2158 LDR X1, [X8 + 0x28]
	0x029B215C LDR X8, [X1]
	0x029B2160 BLR X8
	0x029B2164 CBZ X0, 0x29B2178
	0x029B2168 LDP X20, X19, [X31 + 0x20]
	0x029B216C LDP X22, X21, [X31 + 0x10]
	0x029B2170 LDR X30, [X31], #0x30
	0x029B2174 RET
	0x029B2178 ADRP X8, 0x176A000
	0x029B217C LDR X8, [X8 + 0xE18]
	0x029B2180 LDR X0, [X8]
	0x029B2184 LDR W8, [X0 + 0xE0]
	0x029B2188 CBNZ W8, 0x29B2190
	0x029B218C BL 0x1C16DFC
	0x029B2190 LDR X0, [X21 + 0x10]
	0x029B2194 CBZ X0, 0x29B21C4
	0x029B2198 LDR X8, [X20 + 0x20]
	0x029B219C MOV X1, X19
	0x029B21A0 LDP X22, X21, [X31 + 0x10]
	0x029B21A4 LDR X8, [X8 + 0xC0]
	0x029B21A8 LDR X3, [X8 + 0x38]
	0x029B21AC LDRB W8, [X19 + 0x31]
	0x029B21B0 LDP X20, X19, [X31 + 0x20]
	0x029B21B4 LDR X4, [X3]
	0x029B21B8 UBFM W2, W8, 0x3, 0x3
	0x029B21BC LDR X30, [X31], #0x30
	0x029B21C0 BR X4
	0x029B21C4 BL 0x1C16F20
	0x029B21C8 LDR X0, [X0 + 0x10]
	0x029B21CC RET
	0x029B21D0 STR X1, [X0 + 0x10]
	0x029B21D4 RET
	0x029B21D8 STP X29, X30, [X31 - 0x60]!
	0x029B21DC STR X27, [X31 + 0x10]
	0x029B21E0 STP X26, X25, [X31 + 0x20]
	0x029B21E4 STP X24, X23, [X31 + 0x30]
	0x029B21E8 STP X22, X21, [X31 + 0x40]
	0x029B21EC STP X20, X19, [X31 + 0x50]
	0x029B21F0 ADD X29, X31, 0x0
	0x029B21F4 SUB X31, X31, 0x20
	0x029B21F8 MRS X25, 0xC000
	0x029B21FC LDR X8, [X25 + 0x28]
	0x029B2200 ADRP X22, 0x1A28000
	0x029B2204 MOV X21, X2
	0x029B2208 MOV X19, X1
	0x029B220C STUR X8, [X29 - 0x8]
	0x029B2210 LDRB W8, [X22 + 0xFC0]
	0x029B2214 MOV X20, X0
	0x029B2218 TBNZ X8, 0x0, 0x29B2230
	0x029B221C ADRP X0, 0x1769000
	0x029B2220 LDR X0, [X0 + 0x850]
	0x029B2224 BL 0x1C16CF4
	0x029B2228 MOVZ W8, 0x1
	0x029B222C STRB W8, [X22 + 0xFC0]
	0x029B2230 LDR X8, [X21 + 0x20]
	0x029B2234 ADRP X26, 0x1769000
	0x029B2238 LDR X27, [X8 + 0xC0]
	0x029B223C LDR X8, [X27 + 0x18]
	0x029B2240 LDR W23, [X8 + 0xFC]
	0x029B2244 LDR X26, [X26 + 0x850]
	0x029B2248 ADD X8, X31, 0x0
	0x029B224C ADD X9, X23, 0xF
	0x029B2250 AND X9, X9, 0x1FFFFFFFF
	0x029B2254 SUB X22, X8, X9
	0x029B2258 ADD X31, X22, 0x0
	0x029B225C ADD X8, X31, 0x0
	0x029B2260 SUB X24, X8, X9
	0x029B2264 ADD X31, X24, 0x0
	0x029B2268 MOV X0, X24
	0x029B226C MOV W1, W31
	0x029B2270 MOV X2, X23
	0x029B2274 BL 0x3EB1B10
	0x029B2278 LDR X0, [X27 + 0x8]
	0x029B227C LDRB W8, [X0 + 0x135]
	0x029B2280 TBNZ X8, 0x0, 0x29B2288
	0x029B2284 BL 0x1C5C684
	0x029B2288 MOV W1, W31
	0x029B228C BL 0x1C16D6C
	0x029B2290 STR X0, [X20 + 0x18]
	0x029B2294 MOV X0, X24
	0x029B2298 MOV W1, W31
	0x029B229C MOV X2, X23
	0x029B22A0 BL 0x3EB1B10
	0x029B22A4 MOV X0, X22
	0x029B22A8 MOV X1, X24
	0x029B22AC MOV X2, X23
	0x029B22B0 BL 0x3EB1AC0
	0x029B22B4 LDR X0, [X26]
	0x029B22B8 LDR W8, [X0 + 0xE0]
	0x029B22BC CBNZ W8, 0x29B22C4
	0x029B22C0 BL 0x1C16DFC
	0x029B22C4 LDR X8, [X21 + 0x20]
	0x029B22C8 LDR X8, [X8 + 0xC0]
	0x029B22CC LDP X9, X1, [X8 + 0x18]
	0x029B22D0 LDR W8, [X9 + 0x28]
	0x029B22D4 LDR X0, [X1]
	0x029B22D8 TBNZ X8, 0x1F, 0x29B22E0
	0x029B22DC LDR X22, [X22]
	0x029B22E0 STUR X22, [X29 - 0x18]
	0x029B22E4 LDR X8, [X1 + 0x10]
	0x029B22E8 SUB X3, X29, 0x18
	0x029B22EC SUB X4, X29, 0xC
	0x029B22F0 MOV X2, X31
	0x029B22F4 BLR X8
	0x029B22F8 LDUR W8, [X29 - 0xC]
	0x029B22FC MOV X0, X20
	0x029B2300 MOV X1, X31
	0x029B2304 STR W8, [X20 + 0x20]
	0x029B2308 BL 0x33BDD8C
	0x029B230C STR X19, [X20 + 0x28]
	0x029B2310 LDR X8, [X25 + 0x28]
	0x029B2314 LDUR X9, [X29 - 0x8]
	0x029B2318 CMP X8, X9
	0x029B231C B.NE 0x29B2340
	0x029B2320 ADD X31, X29, 0x0
	0x029B2324 LDP X20, X19, [X31 + 0x50]
	0x029B2328 LDP X22, X21, [X31 + 0x40]
	0x029B232C LDP X24, X23, [X31 + 0x30]
	0x029B2330 LDP X26, X25, [X31 + 0x20]
	0x029B2334 LDR X27, [X31 + 0x10]
	0x029B2338 LDP X29, X30, [X31], #0x60
	0x029B233C RET
	0x029B2340 BL 0x3EB1B20
	0x029B2344 RET
	0x029B2348 STR X30, [X31 - 0x40]!
	0x029B234C STP X24, X23, [X31 + 0x10]
	0x029B2350 STP X22, X21, [X31 + 0x20]
	0x029B2354 STP X20, X19, [X31 + 0x30]
	0x029B2358 ADRP X22, 0x1A28000
	0x029B235C ADRP X23, 0x176A000
	0x029B2360 LDRB W8, [X22 + 0xFC1]
	0x029B2364 LDR X23, [X23 + 0xE18]
	0x029B2368 MOV X19, X2
	0x029B236C MOV X21, X1
	0x029B2370 MOV X20, X0
	0x029B2374 TBNZ X8, 0x0, 0x29B238C
	0x029B2378 ADRP X0, 0x176A000
	0x029B237C LDR X0, [X0 + 0xE18]
	0x029B2380 BL 0x1C16CF4
	0x029B2384 MOVZ W8, 0x1
	0x029B2388 STRB W8, [X22 + 0xFC1]
	0x029B238C LDR X0, [X23]
	0x029B2390 LDR W8, [X0 + 0xE0]
	0x029B2394 CBNZ W8, 0x29B239C
	0x029B2398 BL 0x1C16DFC
	0x029B239C LDR X8, [X21]
	0x029B23A0 CBZ X8, 0x29B24F8
	0x029B23A4 LDR X0, [X23]
	0x029B23A8 LDR W8, [X0 + 0xE0]
	0x029B23AC CBNZ W8, 0x29B23B4
	0x029B23B0 BL 0x1C16DFC
	0x029B23B4 LDR W8, [X21 + 0xC]
	0x029B23B8 CBZ W8, 0x29B24F8
	0x029B23BC LDR X0, [X23]
	0x029B23C0 LDR W9, [X0 + 0xE0]
	0x029B23C4 CBNZ W9, 0x29B23D0
	0x029B23C8 BL 0x1C16DFC
	0x029B23CC LDR W8, [X21 + 0xC]
	0x029B23D0 LDR X2, [X20 + 0x18]
	0x029B23D4 CBZ X2, 0x29B250C
	0x029B23D8 LDR W9, [X20 + 0x20]
	0x029B23DC LDR W10, [X2 + 0x18]
	0x029B23E0 SDIV W22, W8, W9
	0x029B23E4 CMP W22, W10
	0x029B23E8 B.LE 0x29B2414
	0x029B23EC LDR X8, [X19 + 0x20]
	0x029B23F0 LDR X8, [X8 + 0xC0]
	0x029B23F4 LDR X0, [X8 + 0x8]
	0x029B23F8 LDRB W8, [X0 + 0x135]
	0x029B23FC TBNZ X8, 0x0, 0x29B2404
	0x029B2400 BL 0x1C5C684
	0x029B2404 MOV W1, W22
	0x029B2408 BL 0x1C16D6C
	0x029B240C MOV X2, X0
	0x029B2410 STR X0, [X20 + 0x18]
	0x029B2414 LDR X0, [X23]
	0x029B2418 LDR W8, [X0 + 0xE0]
	0x029B241C CBNZ W8, 0x29B2428
	0x029B2420 BL 0x1C16DFC
	0x029B2424 LDR X2, [X20 + 0x18]
	0x029B2428 LDR X0, [X21]
	0x029B242C LDP W1, W4, [X21 + 0x8]
	0x029B2430 MOV W3, W31
	0x029B2434 MOV X5, X31
	0x029B2438 BL 0x33A8A9C
	0x029B243C LDR X8, [X19 + 0x20]
	0x029B2440 LDR X21, [X20 + 0x28]
	0x029B2444 LDR X22, [X20 + 0x18]
	0x029B2448 LDR X8, [X8 + 0xC0]
	0x029B244C LDR X0, [X8 + 0x30]
	0x029B2450 LDRB W8, [X0 + 0x135]
	0x029B2454 TBNZ X8, 0x0, 0x29B245C
	0x029B2458 BL 0x1C5C684
	0x029B245C BL 0x1C16F10
	0x029B2460 LDR X8, [X19 + 0x20]
	0x029B2464 MOV X20, X0
	0x029B2468 LDR X8, [X8 + 0xC0]
	0x029B246C LDR X23, [X8 + 0x10]
	0x029B2470 LDR X8, [X8 + 0x38]
	0x029B2474 LDRB W9, [X23 + 0x135]
	0x029B2478 LDR X24, [X8]
	0x029B247C TBNZ X9, 0x0, 0x29B248C
	0x029B2480 MOV X0, X23
	0x029B2484 BL 0x1C5C684
	0x029B2488 MOV X23, X0
	0x029B248C CBZ X22, 0x29B24B0
	0x029B2490 MOV X0, X22

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], X30
	003 Move [X31+64], X26
	004 Move [X31+72], X25
	005 Move [X31+80], X24
	006 Move [X31+88], X23
	007 Move [X31+96], X22
	008 Move [X31+104], X21
	009 Move [X31+112], X20
	010 Move [X31+120], X19
	011 Move X22, 0x1A29000
	012 Move W8, [X22+4024]
	013 Move X20, X2
	014 Move X21, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x1742000
	021 Move X0, [X0+2504]
	022 Call 0x1C17CF4
	023 Move X0, 0x1747000
	024 Move X0, [X0+840]
	025 Call 0x1C17CF4
	026 Move X0, 0x176D000
	027 Move X0, [X0+1536]
	028 Call 0x1C17CF4
	029 Move X0, 0x1742000
	030 Move X0, [X0+2104]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+4024], W8
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+16], V0
	036 Move [X31+24], V0
	037 Move [X31], V0
	038 Move X22, [X19+40]
	039 Move W23, [X21+4]
	040 Move W24, [X21+8]
	041 Move X0, X21
	042 Move X1, X31
	043 Call VoiceInfo.get_FrameDurationSamples, X0
	044 Move X8, [X20+32]
	045 Move W25, W0
	046 Move X8, [X8+192]
	047 Move X0, [X8+16]
	048 Move W8, [X0+309]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {54}
	053 Call 0x1C5D684
	054 Call 0x1C17F10
	055 Move X8, [X20+32]
	056 Move X26, X0
	057 Move X8, [X8+192]
	058 Move X5, [X8+24]
	059 Move X1, X22
	060 Move W2, W23
	061 Move W3, W24
	062 Move W4, W25
	063 Call 0x249CBA0, X0, X1, X2, X3, X4
	064 Move X20, [X19+24]
	065 Move [X19+16], X26
	066 Move X0, X31
	067 Call OpusCodec.get_Version
	068 Move V1, [X21+16]
	069 Move V0, [X21+32]
	070 Move V2, [X21]
	071 Move X22, X0
	072 Move [X31+16], V1
	073 Move [X31+24], V0
	074 Move [X31], V2
	075 Add X0, X31, 0
	076 Move X1, X31
	077 Call VoiceInfo.ToString, X0
	078 Move X8, 0x176D000
	079 Move X8, [X8+1536]
	080 Move X9, 0x1742000
	081 Move X9, [X9+2104]
	082 Move X3, X0
	083 Move X0, [X8]
	084 Move X2, [X9]
	085 Move X1, X22
	086 Move X4, X31
	087 Call String.Concat, X0, X1, X2, X3
	088 Move X8, 0x1742000
	089 Move X8, [X8+2504]
	090 Move X21, X0
	091 Move X22, [X8]
	092 Move X8, [X22+56]
	093 Compare X8, 0
	094 JumpIfNotEqual {98}
	095 Move X0, X22
	096 Call 0x1C5D6E0
	097 Move X8, [X22+56]
	098 Move X0, [X8+16]
	099 Move W8, [X0+309]
	100 Move TEMP, X8
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {105}
	104 Call 0x1C5D684
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Move X8, [X22+56]
	110 Move X0, [X8+16]
	111 Move W8, [X0+309]
	112 Move TEMP, X8
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfEqual {117}
	116 Call 0x1C5D684
	117 Compare X20, 0
	118 JumpIfEqual {159}
	119 Move X10, 0x1747000
	120 Move X9, [X0+184]
	121 Move X8, [X20]
	122 Move X10, [X10+840]
	123 Move X22, [X9]
	124 NotImplemented "Instruction LDRH not yet implemented."
	125 Move X1, [X10]
	126 Compare X9, 0
	127 JumpIfEqual {134}
	128 Move X10, [X8+176]
	129 Add X10, X10, 8
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Subtract X9, X9, 1
	133 Add X10, X10, 16
	134 Move W2, 1
	135 Move X0, X20
	136 Call 0x1C5D788
	137 Move W9, [X10]
	138 Add W9, W9, 1
	139 Add X8, X8, W9
	140 Add X0, X8, 312
	141 Move X8, [X0]
	142 Move X4, [X0+8]
	143 Move W1, 3
	144 Move X0, X20
	145 Move X2, X21
	146 Move X3, X22
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Move X20, [X31+112]
	149 Move X19, [X31+120]
	150 Move X22, [X31+96]
	151 Move X21, [X31+104]
	152 Move X24, [X31+80]
	153 Move X23, [X31+88]
	154 Move X26, [X31+64]
	155 Move X25, [X31+72]
	156 Move X30, [X31+48]
	157 Add X31, X31, 128
	158 Return 
	159 Call 0x1C17F20
	160 Move X20, X0
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X0, X20
	163 Call 0x3EB2AD0
	164 Move X20, X0
	165 Move X0, 0x1742000
	166 Move X0, [X0+2000]
	167 Call 0x1C17D08
	168 Move X8, [X20]
	169 Move X1, [X8]
	170 Call 0x1C18270
	171 Move TEMP, X0
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfNotEqual {263}
	175 Move X20, [X20]
	176 Call 0x3EB2AE0
	177 Compare X20, 0
	178 JumpIfEqual {262}
	179 Move X8, [X20]
	180 Move X0, X20
	181 Move X9, [X8+360]
	182 Move X1, [X8+368]
	183 NotImplemented "Instruction BLR not yet implemented."
	184 Move X20, X0
	185 Move [X19+32], X0
	186 Compare X0, 0
	187 JumpIfNotEqual {193}
	188 Move X0, 0x176D000
	189 Move X0, [X0+1544]
	190 Call 0x1C17D08
	191 Move X20, X0
	192 Move [X19+32], X0
	193 Move X0, 0x176D000
	194 Move X19, [X19+24]
	195 Move X0, [X0+1552]
	196 Call 0x1C17D08
	197 Move X1, X20
	198 Move X2, X31
	199 Call String.Concat, X0, X1
	200 Move X20, X0
	201 Move X0, 0x1742000
	202 Move X0, [X0+2504]
	203 Call 0x1C17D08
	204 Move X8, [X0+56]
	205 Move X21, X0
	206 Compare X8, 0
	207 JumpIfNotEqual {211}
	208 Move X0, X21
	209 Call 0x1C5D6E0
	210 Move X8, [X21+56]
	211 Move X0, [X8+16]
	212 Move W8, [X0+309]
	213 Move TEMP, X8
	214 And TEMP, TEMP, 1
	215 Compare TEMP, 1
	216 JumpIfEqual {218}
	217 Call 0x1C5D684
	218 Move W8, [X0+224]
	219 Compare W8, 0
	220 JumpIfNotEqual {222}
	221 Call 0x1C17DFC
	222 Move X8, [X21+56]
	223 Move X0, [X8+16]
	224 Move W8, [X0+309]
	225 Move TEMP, X8
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfEqual {230}
	229 Call 0x1C5D684
	230 Compare X19, 0
	231 JumpIfEqual {262}
	232 Move X8, [X0+184]
	233 Move X0, 0x1747000
	234 Move X21, [X8]
	235 Move X0, [X0+840]
	236 Call 0x1C17D08
	237 Move X8, [X19]
	238 Move X1, X0
	239 NotImplemented "Instruction LDRH not yet implemented."
	240 Compare X9, 0
	241 JumpIfEqual {248}
	242 Move X10, [X8+176]
	243 Add X10, X10, 8
	244 NotImplemented "Instruction LDUR not yet implemented."
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Subtract X9, X9, 1
	247 Add X10, X10, 16
	248 Move W2, 1
	249 Move X0, X19
	250 Call 0x1C5D788
	251 Move W9, [X10]
	252 Add W9, W9, 1
	253 Add X8, X8, W9
	254 Add X0, X8, 312
	255 Move X8, [X0]
	256 Move X4, [X0+8]
	257 Move W1, 1
	258 Move X0, X19
	259 Move X2, X20
	260 Move X3, X21
	261 NotImplemented "Instruction BLR not yet implemented."
	262 Call 0x1C17F20
	263 Move W0, 8
	264 Call 0x3EB2AF0
	265 Move X8, [X20]
	266 Move [X0], X8
	267 Move X1, 0x1503000
	268 Add X1, X1, 3672
	269 Move X2, X31
	270 Call 0x3EB2B00
	271 Move X20, X0
	272 Call 0x3EB2AE0
	273 Move X0, X20
	274 Call 0x1D2D690
	275 Call 0x1991590

Method: System.String get_Error()

Disassembly:
	0x029B2494 MOV X1, X23
	0x029B2498 BL 0x1C16E00

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_Error(System.String value)

Disassembly:
	0x029B249C MOV X1, X0
	0x029B24A0 CBNZ X0, 0x29B24B4

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Void Dispose()

Disassembly:
	0x029B24A4 MOV X0, X22
	0x029B24A8 MOV X1, X23
	0x029B24AC BL 0x1C171E0
	0x029B24B0 MOV X1, X31
	0x029B24B4 LDR X8, [X19 + 0x20]
	0x029B24B8 MOV X0, X20

ISIL:
	001 Move X0, [X0+16]
	002 Compare X0, 0
	003 JumpIfEqual {8}
	004 Move X8, [X0]
	005 Move X2, [X8+392]
	006 Move X1, [X8+400]
	007 CallNoReturn X2
	008 Return 

Method: System.Void Input(ref Photon.Voice.FrameBuffer buf)

Disassembly:
	0x029B24BC MOV W2, W31
	0x029B24C0 LDR X8, [X8 + 0xC0]
	0x029B24C4 LDR X3, [X8 + 0x38]
	0x029B24C8 BLR X24
	0x029B24CC CBZ X21, 0x29B250C
	0x029B24D0 LDR X8, [X19 + 0x20]
	0x029B24D4 ADD X3, X31, 0x8
	0x029B24D8 MOV X2, X21
	0x029B24DC MOV X4, X20
	0x029B24E0 LDR X8, [X8 + 0xC0]
	0x029B24E4 LDR X1, [X8 + 0x40]
	0x029B24E8 LDR X0, [X1]
	0x029B24EC STR X20, [X31 + 0x8]
	0x029B24F0 LDR X8, [X1 + 0x10]
	0x029B24F4 BLR X8
	0x029B24F8 LDP X20, X19, [X31 + 0x30]
	0x029B24FC LDP X22, X21, [X31 + 0x20]
	0x029B2500 LDP X24, X23, [X31 + 0x10]
	0x029B2504 LDR X30, [X31], #0x40
	0x029B2508 RET
	0x029B250C BL 0x1C16F20
	0x029B2510 RET
	0x029B2514 SUB X31, X31, 0x20
	0x029B2518 STP X30, X19, [X31 + 0x10]
	0x029B251C STR W1, [X31 + 0xC]
	0x029B2520 LDR X0, [X3 + 0x20]
	0x029B2524 MOV W19, W2
	0x029B2528 LDRB W8, [X0 + 0x135]
	0x029B252C TBNZ X8, 0x0, 0x29B2534
	0x029B2530 BL 0x1C5C684
	0x029B2534 LDR X8, [X0 + 0xC0]
	0x029B2538 ADD X0, X31, 0xC
	0x029B253C MOV W1, W19
	0x029B2540 LDR X2, [X8 + 0x10]
	0x029B2544 BL 0x337B634
	0x029B2548 LDP X30, X19, [X31 + 0x10]
	0x029B254C ADD X31, X31, 0x20
	0x029B2550 RET
	0x029B2554 SUB X31, X31, 0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1A29000
	007 Move W8, [X22+4025]
	008 Move X20, X2
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x176B000
	016 Move X0, [X0+3608]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+4025], W8
	020 Move X8, [X21+32]
	021 Compare X8, 0
	022 JumpIfEqual {29}
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X22, [X31+16]
	026 Move X21, [X31+24]
	027 Move X30, [X31+48]
	028 Return 
	029 Move X8, 0x176B000
	030 Move X8, [X8+3608]
	031 Move X0, [X8]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, [X21+16]
	037 Compare X0, 0
	038 JumpIfEqual {54}
	039 Move X8, [X20+32]
	040 Move W9, [X19+49]
	041 Move X1, X19
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X8, [X8+192]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move W2, W9
	048 ShiftRight W2, 3
	049 And W2, W2, 7
	050 Move X3, [X8+56]
	051 Move X30, [X31+48]
	052 Call 0x249D014, X0, X1, X2
	053 Return 
	054 Call 0x1C17F20

