Type: Photon.Voice.RawCodec/Decoder`1

Method: System.String get_Error()

Disassembly:
	0x029B2558 STR D8, [X31 + 0x10]
	0x029B255C STR X30, [X31 + 0x18]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Error(System.String value)

Disassembly:
	0x029B2560 STR S0, [X31 + 0xC]
	0x029B2564 LDR X0, [X1 + 0x20]

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Void .ctor(System.Action`1<Photon.Voice.FrameOut`1<T>> output)

Disassembly:
	0x029B2568 MOV V8.16B, V1.16B
	0x029B256C LDRB W8, [X0 + 0x135]
	0x029B2570 TBNZ X8, 0x0, 0x29B2578
	0x029B2574 BL 0x1C5C684
	0x029B2578 LDR X8, [X0 + 0xC0]
	0x029B257C ADD X0, X31, 0xC
	0x029B2580 MOV V0.16B, V8.16B
	0x029B2584 LDR X1, [X8 + 0x10]
	0x029B2588 BL 0x338FCB8
	0x029B258C LDR X30, [X31 + 0x18]
	0x029B2590 LDR V8, [X31 + 0x10]
	0x029B2594 ADD X31, X31, 0x20
	0x029B2598 RET
	0x029B259C STP X29, X30, [X31 - 0x50]!
	0x029B25A0 STP X26, X25, [X31 + 0x10]
	0x029B25A4 STP X24, X23, [X31 + 0x20]
	0x029B25A8 STP X22, X21, [X31 + 0x30]
	0x029B25AC STP X20, X19, [X31 + 0x40]
	0x029B25B0 ADD X29, X31, 0x0
	0x029B25B4 SUB X31, X31, 0x30
	0x029B25B8 MRS X26, 0xC000
	0x029B25BC LDR X8, [X26 + 0x28]
	0x029B25C0 MOV X20, X3
	0x029B25C4 MOV X23, X2
	0x029B25C8 MOV X19, X1
	0x029B25CC STUR X8, [X29 - 0x8]
	0x029B25D0 STP X2, X1, [X29 - 0x28]
	0x029B25D4 LDR X8, [X3 + 0x20]
	0x029B25D8 ADD X9, X8, 0x135
	0x029B25DC LDRH W9, [X9]
	0x029B25E0 TBNZ X9, 0x0, 0x29B25FC
	0x029B25E4 MOV X0, X8
	0x029B25E8 BL 0x1C5C684
	0x029B25EC LDR X8, [X20 + 0x20]
	0x029B25F0 ADD X9, X8, 0x135
	0x029B25F4 LDRH W9, [X9]
	0x029B25F8 B 0x29B2600
	0x029B25FC MOV X0, X8
	0x029B2600 LDR X10, [X0 + 0xC0]
	0x029B2604 LDR X10, [X10]
	0x029B2608 LDR W24, [X10 + 0xFC]
	0x029B260C TBNZ X9, 0x0, 0x29B261C
	0x029B2610 MOV X0, X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1A29000
	007 Move W8, [X22+4026]
	008 Move X21, X2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x176A000
	016 Move X0, [X0+2128]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+4026], W8
	020 Move X8, [X21+32]
	021 Move X22, 0x176A000
	022 Move X8, [X8+192]
	023 Move X0, [X8+8]
	024 Move W8, [X0+309]
	025 Move X22, [X22+2128]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move W1, W31
	032 Call 0x1C17D6C
	033 Move [X20+24], X0
	034 Move X0, [X22]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X8, [X21+32]
	040 Move W0, W31
	041 Move X8, [X8+192]
	042 Move X1, [X8+32]
	043 Call 0x2216D84, X0
	044 Move [X20+32], W0
	045 Move X0, X20
	046 Move X1, X31
	047 Call Object..ctor, X0
	048 Move [X20+40], X19
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Return 

Method: System.Void Open(Photon.Voice.VoiceInfo info)

Disassembly:
	0x029B2614 BL 0x1C5C684

ISIL:
	001 Return 

Method: System.Void Input(ref Photon.Voice.FrameBuffer byteBuf)

Disassembly:
	0x029B2618 MOV X8, X0
	0x029B261C LDR X8, [X8 + 0xC0]
	0x029B2620 LDR X0, [X8]
	0x029B2624 LDRB W8, [X0 + 0x135]
	0x029B2628 TBNZ X8, 0x0, 0x29B2630
	0x029B262C BL 0x1C5C684
	0x029B2630 LDR W8, [X0 + 0xFC]
	0x029B2634 ADD X9, X31, 0x0
	0x029B2638 ADD W8, W8, 0x10
	0x029B263C ADD X8, X8, 0xF
	0x029B2640 AND X8, X8, 0x1FFFFFFFF
	0x029B2644 SUB X21, X9, X8
	0x029B2648 ADD X31, X21, 0x0
	0x029B264C ADD X9, X24, 0xF
	0x029B2650 ADD X8, X31, 0x0
	0x029B2654 AND X9, X9, 0x1FFFFFFFF
	0x029B2658 SUB X22, X8, X9
	0x029B265C ADD X31, X22, 0x0
	0x029B2660 LDR X25, [X20 + 0x20]
	0x029B2664 LDRB W8, [X25 + 0x135]
	0x029B2668 TBNZ X8, 0x0, 0x29B267C
	0x029B266C MOV X0, X25
	0x029B2670 BL 0x1C5C684
	0x029B2674 LDR X25, [X20 + 0x20]
	0x029B2678 B 0x29B2680
	0x029B267C MOV X0, X25
	0x029B2680 LDR X8, [X0 + 0xC0]
	0x029B2684 MOV X0, X22
	0x029B2688 MOV X2, X24
	0x029B268C LDR X8, [X8]
	0x029B2690 LDR W8, [X8 + 0x28]
	0x029B2694 CMP W8, 0x0
	0x029B2698 SUB X8, X29, 0x28
	0x029B269C CSEL X1, X23, X8, LT
	0x029B26A0 BL 0x3EB1AC0
	0x029B26A4 LDRB W8, [X25 + 0x135]
	0x029B26A8 TBNZ X8, 0x0, 0x29B26B8
	0x029B26AC MOV X0, X25
	0x029B26B0 BL 0x1C5C684
	0x029B26B4 MOV X25, X0
	0x029B26B8 LDR X8, [X25 + 0xC0]
	0x029B26BC LDR X23, [X8]
	0x029B26C0 LDRB W8, [X23 + 0x135]
	0x029B26C4 TBNZ X8, 0x0, 0x29B26D4
	0x029B26C8 MOV X0, X23
	0x029B26CC BL 0x1C5C684
	0x029B26D0 MOV X23, X0
	0x029B26D4 LDR X8, [X20 + 0x20]
	0x029B26D8 ADD X9, X8, 0x135
	0x029B26DC LDRH W9, [X9]
	0x029B26E0 TBNZ X9, 0x0, 0x29B26FC
	0x029B26E4 MOV X0, X8
	0x029B26E8 BL 0x1C5C684
	0x029B26EC LDR X8, [X20 + 0x20]
	0x029B26F0 ADD X9, X8, 0x135
	0x029B26F4 LDRH W9, [X9]
	0x029B26F8 B 0x29B2700
	0x029B26FC MOV X0, X8
	0x029B2700 LDR X10, [X0 + 0xC0]
	0x029B2704 LDR X24, [X10 + 0x10]
	0x029B2708 TBNZ X9, 0x0, 0x29B2724
	0x029B270C MOV X0, X8
	0x029B2710 BL 0x1C5C684
	0x029B2714 LDR X8, [X20 + 0x20]
	0x029B2718 ADD X9, X8, 0x135
	0x029B271C LDRH W9, [X9]
	0x029B2720 B 0x29B2728
	0x029B2724 MOV X0, X8
	0x029B2728 LDR X10, [X0 + 0xC0]
	0x029B272C LDR X10, [X10]
	0x029B2730 LDR W20, [X10 + 0x28]
	0x029B2734 TBNZ X9, 0x0, 0x29B2744
	0x029B2738 MOV X0, X8
	0x029B273C BL 0x1C5C684
	0x029B2740 MOV X8, X0
	0x029B2744 LDR X8, [X8 + 0xC0]
	0x029B2748 LDR X8, [X8]
	0x029B274C LDR W8, [X8 + 0x28]
	0x029B2750 TBNZ X8, 0x1F, 0x29B2758
	0x029B2754 LDR X22, [X22]
	0x029B2758 CMP W20, 0x0
	0x029B275C SUB X8, X29, 0x20
	0x029B2760 CSEL X3, X19, X8, LT
	0x029B2764 SUB X4, X29, 0x18
	0x029B2768 SUB X5, X29, 0xC
	0x029B276C MOV X0, X23
	0x029B2770 MOV X1, X24
	0x029B2774 MOV X2, X21
	0x029B2778 STUR X22, [X29 - 0x18]
	0x029B277C BL 0x1C17728
	0x029B2780 LDUR W0, [X29 - 0xC]
	0x029B2784 LDR X8, [X26 + 0x28]
	0x029B2788 LDUR X9, [X29 - 0x8]
	0x029B278C CMP X8, X9
	0x029B2790 B.NE 0x29B27B0
	0x029B2794 ADD X31, X29, 0x0
	0x029B2798 LDP X20, X19, [X31 + 0x40]
	0x029B279C LDP X22, X21, [X31 + 0x30]
	0x029B27A0 LDP X24, X23, [X31 + 0x20]
	0x029B27A4 LDP X26, X25, [X31 + 0x10]
	0x029B27A8 LDP X29, X30, [X31], #0x50
	0x029B27AC RET
	0x029B27B0 BL 0x3EB1B20
	0x029B27B4 SUB X31, X31, 0x40
	0x029B27B8 STR X30, [X31 + 0x10]
	0x029B27BC STP X22, X21, [X31 + 0x20]
	0x029B27C0 STP X20, X19, [X31 + 0x30]
	0x029B27C4 STR W1, [X31 + 0x1C]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1A29000
	008 Move X23, 0x176B000
	009 Move W8, [X22+4027]
	010 Move X23, [X23+3608]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x176B000
	019 Move X0, [X0+3608]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+4027], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X8, [X21]
	029 Compare X8, 0
	030 JumpIfEqual {112}
	031 Move X0, [X23]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move W8, [X21+12]
	037 Compare W8, 0
	038 JumpIfEqual {112}
	039 Move X0, [X23]
	040 Move W9, [X0+224]
	041 Compare W9, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1C17DFC
	044 Move W8, [X21+12]
	045 Move X2, [X20+24]
	046 Compare X2, 0
	047 JumpIfEqual {139}
	048 Move W9, [X20+32]
	049 Move W10, [X2+24]
	050 NotImplemented "Instruction SDIV not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X8, [X19+32]
	053 Move X8, [X8+192]
	054 Move X0, [X8+8]
	055 Move W8, [X0+309]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {61}
	060 Call 0x1C5D684
	061 Move W1, W22
	062 Call 0x1C17D6C
	063 Move X2, X0
	064 Move [X20+24], X0
	065 Move X0, [X23]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {71}
	069 Call 0x1C17DFC
	070 Move X2, [X20+24]
	071 Move X0, [X21]
	072 Move W1, [X21+8]
	073 Move W4, [X21+12]
	074 Move W3, W31
	075 Move X5, X31
	076 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	077 Move X8, [X19+32]
	078 Move X23, [X20+40]
	079 Move X21, [X20+24]
	080 Move X8, [X8+192]
	081 Move X0, [X8+48]
	082 Move W8, [X0+309]
	083 Move TEMP, X8
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {88}
	087 Call 0x1C5D684
	088 Call 0x1C17F10
	089 Move X8, [X19+32]
	090 Move X20, X0
	091 Move X8, [X8+192]
	092 Move X22, [X8+16]
	093 Move W8, [X22+309]
	094 Move TEMP, X8
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {101}
	098 Move X0, X22
	099 Call 0x1C5D684
	100 Move X22, X0
	101 Compare X21, 0
	102 JumpIfEqual {119}
	103 Move X0, X21
	104 Move X1, X22
	105 Call 0x1C17E00
	106 Move X1, X0
	107 Compare X0, 0
	108 JumpIfNotEqual {120}
	109 Move X0, X21
	110 Move X1, X22
	111 Call 0x1C181E0
	112 Move X20, [X31+32]
	113 Move X19, [X31+40]
	114 Move X22, [X31+16]
	115 Move X21, [X31+24]
	116 Move X30, [X31+48]
	117 Move X23, [X31+56]
	118 Return 
	119 Move X1, X31
	120 Move X8, [X19+32]
	121 Move X0, X20
	122 Move W2, W31
	123 Move X8, [X8+192]
	124 Move X3, [X8+56]
	125 Call 0x2D25ABC, X0, X1, X2
	126 Compare X23, 0
	127 JumpIfEqual {139}
	128 Move X3, [X23+24]
	129 Move X0, [X23+64]
	130 Move X2, [X23+40]
	131 Move X1, X20
	132 Move X20, [X31+32]
	133 Move X19, [X31+40]
	134 Move X22, [X31+16]
	135 Move X21, [X31+24]
	136 Move X30, [X31+48]
	137 Move X23, [X31+56]
	138 CallNoReturn X3
	139 Call 0x1C17F20

Method: System.Void Dispose()

Disassembly:
	0x029B27C8 LDR X8, [X3 + 0x20]

ISIL:
	001 Return 

