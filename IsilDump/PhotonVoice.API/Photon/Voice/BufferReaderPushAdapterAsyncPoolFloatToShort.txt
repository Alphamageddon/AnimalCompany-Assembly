Type: Photon.Voice.BufferReaderPushAdapterAsyncPoolFloatToShort

Method: System.Void .ctor(Photon.Voice.IDataReader`1<System.Single> reader)

Disassembly:
	0x03563B74 LDR X2, [X0 + 0x40]
	0x03563B78 BL 0x35579C4
	0x03563B7C B 0x3563B58
	0x03563B80 ADRP X8, 0xBD2000
	0x03563B84 LDR X8, [X8 + 0xB20]
	0x03563B88 ADD X0, X31, 0x0
	0x03563B8C LDR X1, [X8]
	0x03563B90 BL 0x2BC434C
	0x03563B94 LDP X20, X19, [X31 + 0x30]
	0x03563B98 LDP X30, X21, [X31 + 0x20]
	0x03563B9C ADD X31, X31, 0x40
	0x03563BA0 RET
	0x03563BA4 BL 0x1C16F20
	0x03563BA8 BL 0x1C16F20
	0x03563BAC B 0x3563BB4
	0x03563BB0 B 0x3563BB4
	0x03563BB4 MOV X19, X0
	0x03563BB8 CMP W1, 0x1
	0x03563BBC B.NE 0x3563BF0
	0x03563BC0 MOV X0, X19
	0x03563BC4 BL 0x3EB1AD0
	0x03563BC8 LDR X20, [X0]
	0x03563BCC BL 0x3EB1AE0
	0x03563BD0 ADRP X8, 0xBD2000
	0x03563BD4 LDR X8, [X8 + 0xB20]
	0x03563BD8 ADD X0, X31, 0x0
	0x03563BDC LDR X1, [X8]
	0x03563BE0 BL 0x2BC434C
	0x03563BE4 CBZ X20, 0x3563B94
	0x03563BE8 MOV X0, X20
	0x03563BEC BL 0x1C16F18
	0x03563BF0 MOV X20, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xE7D000
	008 Move X23, 0xBD3000
	009 Move X21, 0xB91000
	010 Move W8, [X22+3571]
	011 Move X23, [X23+2744]
	012 Move X21, [X21+1592]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xBD3000
	020 Move X0, [X0+2744]
	021 Call 0x1C17CF4
	022 Move X0, 0xB91000
	023 Move X0, [X0+1592]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+3571], W8
	027 Move X2, [X23]
	028 Move X0, X19
	029 Move X1, X20
	030 Call BufferReaderPushAdapterBase`1<Single>..ctor, X0, X1
	031 Move X0, [X21]
	032 Move W1, W31
	033 Call 0x1C17D6C
	034 Move [X19+24], X0
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Move X23, [X31+56]
	041 Return 

Method: System.Void Service(Photon.Voice.LocalVoice localVoice)

Disassembly:
	0x03568A60 MOVZ W1, 0x1
	0x03568A64 MOV X0, X19
	0x03568A68 MOV X2, X21
	0x03568A6C MOV X3, X20
	0x03568A70 BLR X8
	0x03568A74 LDP X20, X19, [X31 + 0x20]
	0x03568A78 LDP X30, X21, [X31 + 0x10]
	0x03568A7C ADD X31, X31, 0x30
	0x03568A80 RET
	0x03568A84 BL 0x1C16F20
	0x03568A88 BL 0x1C16F28
	0x03568A8C BL 0x1C16F44
	0x03568A90 MOV X1, X31
	0x03568A94 BL 0x1C16DEC
	0x03568A98 SUB X31, X31, 0x30
	0x03568A9C STP X30, X21, [X31 + 0x10]
	0x03568AA0 STP X20, X19, [X31 + 0x20]
	0x03568AA4 ADRP X20, 0xE77000
	0x03568AA8 LDRB W8, [X20 + 0xDF8]
	0x03568AAC MOV W21, W1
	0x03568AB0 MOV X19, X0
	0x03568AB4 TBNZ X8, 0x0, 0x3568AF0
	0x03568AB8 ADRP X0, 0xB90000
	0x03568ABC LDR X0, [X0 + 0x348]
	0x03568AC0 BL 0x1C16CF4
	0x03568AC4 ADRP X0, 0xB8B000
	0x03568AC8 LDR X0, [X0 + 0x758]
	0x03568ACC BL 0x1C16CF4
	0x03568AD0 ADRP X0, 0xB8B000
	0x03568AD4 LDR X0, [X0 + 0x9D0]
	0x03568AD8 BL 0x1C16CF4
	0x03568ADC ADRP X0, 0xBCD000
	0x03568AE0 LDR X0, [X0 + 0xD40]
	0x03568AE4 BL 0x1C16CF4
	0x03568AE8 MOVZ W8, 0x1
	0x03568AEC STRB W8, [X20 + 0xDF8]
	0x03568AF0 LDR W8, [X19 + 0x20]
	0x03568AF4 CMP W8, W21
	0x03568AF8 B.EQ 0x3568C18
	0x03568AFC CMP W21, 0x20
	0x03568B00 B.CS 0x3568B38
	0x03568B04 LDR X0, [X19 + 0x58]
	0x03568B08 MOV X1, X31
	0x03568B0C MOV X2, X31
	0x03568B10 STR W21, [X19 + 0x20]
	0x03568B14 BL 0x33C5D2C
	0x03568B18 TBZ X0, 0x0, 0x3568C18
	0x03568B1C MOV X0, X19
	0x03568B20 MOV W2, W21
	0x03568B24 LDP X20, X19, [X31 + 0x20]
	0x03568B28 LDP X30, X21, [X31 + 0x10]
	0x03568B2C MOVZ W1, 0x37
	0x03568B30 ADD X31, X31, 0x30
	0x03568B34 B 0x3567ED8
	0x03568B38 ADRP X8, 0xB8B000
	0x03568B3C LDR X19, [X19 + 0x78]
	0x03568B40 LDR X8, [X8 + 0x9D0]
	0x03568B44 MOVZ W1, 0x1
	0x03568B48 LDR X0, [X8]
	0x03568B4C BL 0x1C16D6C
	0x03568B50 ADRP X8, 0xB8B000
	0x03568B54 LDR X8, [X8 + 0x758]
	0x03568B58 MOV X20, X0
	0x03568B5C ADD X1, X31, 0xC
	0x03568B60 STR W21, [X31 + 0xC]
	0x03568B64 LDR X0, [X8]
	0x03568B68 BL 0x1C16E04
	0x03568B6C CBZ X20, 0x3568C28
	0x03568B70 MOV X21, X0
	0x03568B74 CBZ X0, 0x3568B8C
	0x03568B78 LDR X8, [X20]
	0x03568B7C MOV X0, X21
	0x03568B80 LDR X1, [X8 + 0x40]
	0x03568B84 BL 0x1C16E00
	0x03568B88 CBZ X0, 0x3568C30
	0x03568B8C LDR W8, [X20 + 0x18]
	0x03568B90 CBZ W8, 0x3568C2C
	0x03568B94 STR X21, [X20 + 0x20]
	0x03568B98 CBZ X19, 0x3568C28
	0x03568B9C ADRP X9, 0xB90000
	0x03568BA0 LDR X8, [X19]
	0x03568BA4 LDR X9, [X9 + 0x348]
	0x03568BA8 ADRP X10, 0xBCD000
	0x03568BAC LDR X1, [X9]
	0x03568BB0 LDR X10, [X10 + 0xD40]
	0x03568BB4 LDRH W9, [X8 + 0x12E]
	0x03568BB8 LDR X21, [X10]
	0x03568BBC CBZ X9, 0x3568BE0
	0x03568BC0 LDR X10, [X8 + 0xB0]
	0x03568BC4 ADD X10, X10, 0x8
	0x03568BC8 LDUR X11, [X10 - 0x8]
	0x03568BCC CMP X11, X1
	0x03568BD0 B.EQ 0x3568BF0
	0x03568BD4 SUBS X9, X9, 0x1
	0x03568BD8 ADD X10, X10, 0x10
	0x03568BDC B.NE 0x3568BC8
	0x03568BE0 MOVZ W2, 0x1
	0x03568BE4 MOV X0, X19
	0x03568BE8 BL 0x1C5C788
	0x03568BEC B 0x3568C00
	0x03568BF0 LDR W9, [X10]
	0x03568BF4 ADD W9, W9, 0x1
	0x03568BF8 ADD X8, X8, W9, 0x4, SXTW
	0x03568BFC ADD X0, X8, 0x138
	0x03568C00 LDP X8, X4, [X0]
	0x03568C04 MOVZ W1, 0x1
	0x03568C08 MOV X0, X19
	0x03568C0C MOV X2, X21
	0x03568C10 MOV X3, X20
	0x03568C14 BLR X8
	0x03568C18 LDP X20, X19, [X31 + 0x20]
	0x03568C1C LDP X30, X21, [X31 + 0x10]
	0x03568C20 ADD X31, X31, 0x30
	0x03568C24 RET
	0x03568C28 BL 0x1C16F20
	0x03568C2C BL 0x1C16F28
	0x03568C30 BL 0x1C16F44
	0x03568C34 MOV X1, X31
	0x03568C38 BL 0x1C16DEC
	0x03568C3C STR X30, [X31 - 0x20]!
	0x03568C40 STP X20, X19, [X31 + 0x10]
	0x03568C44 LDRB W9, [X0 + 0x24]
	0x03568C48 AND W8, W1, 0x1
	0x03568C4C CMP W9, W8
	0x03568C50 B.EQ 0x3568C8C
	0x03568C54 MOV X19, X0
	0x03568C58 LDR X0, [X0 + 0x58]
	0x03568C5C MOV W20, W1
	0x03568C60 MOV X1, X31
	0x03568C64 MOV X2, X31
	0x03568C68 STRB W8, [X19 + 0x24]
	0x03568C6C BL 0x33C5D2C

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0xE78000
	012 Move W8, [X21+3572]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {42}
	019 Move X0, 0xBCE000
	020 Move X0, [X0+3216]
	021 Call 0x1C17CF4
	022 Move X0, 0xBCE000
	023 Move X0, [X0+3224]
	024 Call 0x1C17CF4
	025 Move X0, 0xBCE000
	026 Move X0, [X0+3232]
	027 Call 0x1C17CF4
	028 Move X0, 0xBCE000
	029 Move X0, [X0+3088]
	030 Call 0x1C17CF4
	031 Move X0, 0xBCE000
	032 Move X0, [X0+2600]
	033 Call 0x1C17CF4
	034 Move X0, 0xBCE000
	035 Move X0, [X0+3240]
	036 Call 0x1C17CF4
	037 Move X0, 0xB8C000
	038 Move X0, [X0+1592]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X21+3572], W8
	042 Compare X19, 0
	043 JumpIfEqual {152}
	044 Move X9, 0xBCE000
	045 Move X9, [X9+3240]
	046 Move X8, [X19]
	047 Move X1, [X9]
	048 Move W10, [X8+304]
	049 Move W9, [X1+304]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X8, [X8+200]
	052 Add X8, X8, X9
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X0, [X19+312]
	056 Compare X0, 0
	057 JumpIfEqual {152}
	058 Move X24, 0xBCE000
	059 Move X24, [X24+3224]
	060 Move X1, [X24]
	061 Call 0x2D11CC0, X0
	062 Move X22, [X20+24]
	063 Compare X22, 0
	064 JumpIfEqual {152}
	065 Move X21, X0
	066 Compare X0, 0
	067 JumpIfEqual {152}
	068 Move W8, [X22+24]
	069 Move W1, [X21+24]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, 0xB8C000
	072 Move X8, [X8+1592]
	073 Move X0, [X8]
	074 Call 0x1C17D6C
	075 Move X22, X0
	076 Move [X20+24], X0
	077 Move X23, [X20+16]
	078 Compare X23, 0
	079 JumpIfEqual {152}
	080 Move X25, 0xBCE000
	081 Move X26, 0xBCE000
	082 Move X27, 0xBCE000
	083 Move X25, [X25+3216]
	084 Move X26, [X26+3232]
	085 Move X27, [X27+3088]
	086 Move X8, [X23]
	087 Move X1, [X26]
	088 NotImplemented "Instruction LDRH not yet implemented."
	089 Compare X9, 0
	090 JumpIfEqual {97}
	091 Move X10, [X8+176]
	092 Add X10, X10, 8
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Subtract X9, X9, 1
	096 Add X10, X10, 16
	097 Move X0, X23
	098 Move W2, W31
	099 Call 0x1C5D788
	100 NotImplemented "Instruction LDRSW not yet implemented."
	101 Add X8, X8, X9
	102 Add X0, X8, 312
	103 Move X8, [X0]
	104 Move X2, [X0+8]
	105 Move X0, X23
	106 Move X1, X22
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {132}
	112 Compare X21, 0
	113 JumpIfEqual {152}
	114 Move X0, [X20+24]
	115 Move W2, [X21+24]
	116 Move X1, X21
	117 Call AudioUtil.Convert, X0, X1, X2
	118 Move X2, [X27]
	119 Move X0, X19
	120 Move X1, X21
	121 Call 0x3192E98, X0, X1
	122 Move X0, [X19+312]
	123 Compare X0, 0
	124 JumpIfEqual {152}
	125 Move X1, [X24]
	126 Call 0x2D11CC0, X0
	127 Move X23, [X20+16]
	128 Compare X23, 0
	129 JumpIfEqual {152}
	130 Move X22, [X20+24]
	131 Move X21, X0
	132 Compare X21, 0
	133 JumpIfEqual {152}
	134 Move X0, [X19+312]
	135 Compare X0, 0
	136 JumpIfEqual {152}
	137 Move W2, [X21+24]
	138 Move X3, [X25]
	139 Move X1, X21
	140 Move X20, [X31+64]
	141 Move X19, [X31+72]
	142 Move X22, [X31+48]
	143 Move X21, [X31+56]
	144 Move X24, [X31+32]
	145 Move X23, [X31+40]
	146 Move X26, [X31+16]
	147 Move X25, [X31+24]
	148 Move X30, [X31+80]
	149 Move X27, [X31+88]
	150 Call 0x2D11D28, X0, X1, X2
	151 Return 
	152 Call 0x1C17F20
	153 Move X0, X19
	154 Call 0x1C181E0

