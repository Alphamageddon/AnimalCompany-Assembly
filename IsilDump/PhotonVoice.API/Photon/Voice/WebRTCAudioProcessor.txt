Type: Photon.Voice.WebRTCAudioProcessor

Method: System.Void set_AECStreamDelayMs(System.Int32 value)

Disassembly:
	0x03568E80 LDR X30, [X31], #0x30
	0x03568E84 RET
	0x03568E88 BL 0x1C16F20
	0x03568E8C LDRB W0, [X0 + 0x40]
	0x03568E90 RET
	0x03568E94 SUB X31, X31, 0x80
	0x03568E98 STP X29, X30, [X31 + 0x20]
	0x03568E9C STP X28, X27, [X31 + 0x30]
	0x03568EA0 STP X26, X25, [X31 + 0x40]
	0x03568EA4 STP X24, X23, [X31 + 0x50]
	0x03568EA8 STP X22, X21, [X31 + 0x60]
	0x03568EAC STP X20, X19, [X31 + 0x70]
	0x03568EB0 STR W5, [X31 + 0x8]
	0x03568EB4 ADRP X22, 0xE77000
	0x03568EB8 ADRP X29, 0xBCD000
	0x03568EBC ADRP X26, 0xBCD000
	0x03568EC0 ADRP X28, 0xBB7000
	0x03568EC4 ADRP X27, 0xBCD000
	0x03568EC8 LDRB W8, [X22 + 0xDFA]
	0x03568ECC LDR X29, [X29 + 0xD50]
	0x03568ED0 LDR X26, [X26 + 0xD58]
	0x03568ED4 LDR X28, [X28 + 0x180]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+16]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X19, X0
	007 Move X0, [X0+88]
	008 Move W20, W1
	009 Move [X19+16], W1
	010 Move X1, X31
	011 Move X2, X31
	012 Call IntPtr.op_Inequality, X0, X1
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {23}
	017 Move X0, X19
	018 Move W2, W20
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move W1, 1
	022 Move X30, [X31+32]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Return 

Method: System.Void set_AEC(System.Boolean value)

Disassembly:
	0x035690B4 LDR X10, [X8 + 0xB0]
	0x035690B8 ADD X10, X10, 0x8
	0x035690BC LDUR X11, [X10 - 0x8]
	0x035690C0 CMP X11, X1
	0x035690C4 B.EQ 0x356924C
	0x035690C8 SUBS X9, X9, 0x1
	0x035690CC ADD X10, X10, 0x10
	0x035690D0 B.NE 0x35690BC
	0x035690D4 B 0x356923C
	0x035690D8 ADD W8, W21, W21, 0x2, LSL
	0x035690DC MOVZ W9, 0x4DD3
	0x035690E0 MOVK W9, 0x10620000
	0x035690E4 UBFM W8, W8, 0x1F, 0x1E
	0x035690E8 SMADDL X8, X8, X9, X31
	0x035690EC UBFM X9, X8, 0x3F, 0x3F
	0x035690F0 SBFM X8, X8, 0x26, 0x3F
	0x035690F4 ADD W2, W8, W9
	0x035690F8 SDIV W8, W25, W2
	0x035690FC MSUB W8, W8, W2, W25
	0x03569100 STR X19, [X20 + 0x78]
	0x03569104 STP W25, W2, [X20 + 0x44]
	0x03569108 CBZ W8, 0x356929C
	0x0356910C LDR X0, [X28]
	0x03569110 MOVZ W1, 0x3
	0x03569114 BL 0x1C16D6C
	0x03569118 MOV X22, X0
	0x0356911C LDR W8, [X20 + 0x44]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W9, [X0+20]
	004 And W8, W1, 1
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X19, X0
	007 Move [X0+20], W8
	008 Call WebRTCAudioProcessor.InitReverseStream, X0
	009 Move X0, [X19+88]
	010 Move X1, X31
	011 Move X2, X31
	012 Call IntPtr.op_Inequality, X0, X1
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {21}
	017 Move W2, [X19+20]
	018 Move W1, 10
	019 Move X0, X19
	020 Call WebRTCAudioProcessor.setParam, X0, X1, X2
	021 Move W8, [X19+20]
	022 Compare W8, 0
	023 JumpIfEqual {25}
	024 Move W8, W31
	025 Move W8, [X19+22]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CSET not yet implemented."
	028 Move [X19+22], W8
	029 Move X30, [X31+16]
	030 Move X19, [X31+24]
	031 Return 

Method: System.Void set_AECHighPass(System.Boolean value)

Disassembly:
	0x03569718 CBZ W8, 0x35697BC
	0x0356971C STR X22, [X21 + 0x20]
	0x03569720 CBZ X20, 0x35697B8
	0x03569724 ADRP X9, 0xB8F000
	0x03569728 LDR X8, [X20]
	0x0356972C LDR X9, [X9 + 0x348]
	0x03569730 ADRP X10, 0xBCC000
	0x03569734 LDR X1, [X9]
	0x03569738 LDR X10, [X10 + 0xD80]
	0x0356973C LDRH W9, [X8 + 0x12E]
	0x03569740 LDR X22, [X10]
	0x03569744 CBZ X9, 0x3569768
	0x03569748 LDR X10, [X8 + 0xB0]
	0x0356974C ADD X10, X10, 0x8
	0x03569750 LDUR X11, [X10 - 0x8]
	0x03569754 CMP X11, X1
	0x03569758 B.EQ 0x3569778
	0x0356975C SUBS X9, X9, 0x1
	0x03569760 ADD X10, X10, 0x10
	0x03569764 B.NE 0x3569750
	0x03569768 MOVZ W2, 0x1
	0x0356976C MOV X0, X20
	0x03569770 BL 0x1C5C788

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W9, [X0+21]
	005 And W8, W1, 1
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X19, X0
	008 Move X0, [X0+88]
	009 Move W20, W1
	010 Move X1, X31
	011 Move X2, X31
	012 Move [X19+21], W8
	013 Call IntPtr.op_Inequality, X0, X1
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {26}
	018 And W2, W20, 1
	019 Move X0, X19
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move W1, 11
	023 Move X30, [X31+32]
	024 Call WebRTCAudioProcessor.setParam, X0, X1, X2
	025 Return 
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return 

Method: System.Void set_AECMobile(System.Boolean value)

Disassembly:
	0x03569774 B 0x3569788
	0x03569778 LDR W9, [X10]
	0x0356977C ADD W9, W9, 0x1
	0x03569780 ADD X8, X8, W9, 0x4, SXTW
	0x03569784 ADD X0, X8, 0x138
	0x03569788 LDP X8, X4, [X0]
	0x0356978C MOVZ W1, 0x1
	0x03569790 MOV X0, X20
	0x03569794 MOV X2, X22
	0x03569798 MOV X3, X21
	0x0356979C BLR X8
	0x035697A0 MOV X0, X19
	0x035697A4 LDP X20, X19, [X31 + 0x30]
	0x035697A8 LDP X22, X21, [X31 + 0x20]
	0x035697AC LDP X30, X23, [X31 + 0x10]
	0x035697B0 ADD X31, X31, 0x40
	0x035697B4 RET
	0x035697B8 BL 0x1C16F20
	0x035697BC BL 0x1C16F28
	0x035697C0 BL 0x1C16F44
	0x035697C4 MOV X1, X31
	0x035697C8 BL 0x1C16DEC
	0x035697CC SUB X31, X31, 0x70
	0x035697D0 STP X29, X30, [X31 + 0x10]
	0x035697D4 STP X28, X27, [X31 + 0x20]
	0x035697D8 STP X26, X25, [X31 + 0x30]
	0x035697DC STP X24, X23, [X31 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W9, [X0+22]
	004 And W8, W1, 1
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X19, X0
	007 Move [X0+22], W8
	008 Call WebRTCAudioProcessor.InitReverseStream, X0
	009 Move X0, [X19+88]
	010 Move X1, X31
	011 Move X2, X31
	012 Call IntPtr.op_Inequality, X0, X1
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {21}
	017 Move W2, [X19+22]
	018 Move W1, 20
	019 Move X0, X19
	020 Call WebRTCAudioProcessor.setParam, X0, X1, X2
	021 Move W8, [X19+22]
	022 Compare W8, 0
	023 JumpIfEqual {25}
	024 Move W8, W31
	025 Move W8, [X19+20]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CSET not yet implemented."
	028 Move [X19+20], W8
	029 Move X30, [X31+16]
	030 Move X19, [X31+24]
	031 Return 

Method: System.Void set_HighPass(System.Boolean value)

Disassembly:
	0x035697E0 STP X22, X21, [X31 + 0x50]
	0x035697E4 STP X20, X19, [X31 + 0x60]
	0x035697E8 ADRP X21, 0xE76000
	0x035697EC LDRB W8, [X21 + 0xDFD]
	0x035697F0 MOV X19, X1
	0x035697F4 MOV X20, X0
	0x035697F8 TBNZ X8, 0x0, 0x3569888
	0x035697FC ADRP X0, 0xB8A000
	0x03569800 LDR X0, [X0 + 0x9C8]
	0x03569804 BL 0x1C16CF4
	0x03569808 ADRP X0, 0xBCC000
	0x0356980C LDR X0, [X0 + 0xD90]
	0x03569810 BL 0x1C16CF4
	0x03569814 ADRP X0, 0xBCC000
	0x03569818 LDR X0, [X0 + 0xC98]
	0x0356981C BL 0x1C16CF4
	0x03569820 ADRP X0, 0xB8A000
	0x03569824 LDR X0, [X0 + 0xE00]
	0x03569828 BL 0x1C16CF4
	0x0356982C ADRP X0, 0xBCC000
	0x03569830 LDR X0, [X0 + 0xD98]
	0x03569834 BL 0x1C16CF4
	0x03569838 ADRP X0, 0xBCC000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W9, [X0+23]
	005 And W8, W1, 1
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X19, X0
	008 Move X0, [X0+88]
	009 Move W20, W1
	010 Move X1, X31
	011 Move X2, X31
	012 Move [X19+23], W8
	013 Call IntPtr.op_Inequality, X0, X1
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {26}
	018 And W2, W20, 1
	019 Move X0, X19
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move W1, 31
	023 Move X30, [X31+32]
	024 Call WebRTCAudioProcessor.setParam, X0, X1, X2
	025 Return 
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return 

Method: System.Void set_NoiseSuppression(System.Boolean value)

Disassembly:
	0x0356983C LDR X0, [X0 + 0xDA0]
	0x03569840 BL 0x1C16CF4
	0x03569844 ADRP X0, 0xB8A000
	0x03569848 LDR X0, [X0 + 0xE18]
	0x0356984C BL 0x1C16CF4
	0x03569850 ADRP X0, 0xB8F000
	0x03569854 LDR X0, [X0 + 0x348]
	0x03569858 BL 0x1C16CF4
	0x0356985C ADRP X0, 0xBCC000
	0x03569860 LDR X0, [X0 + 0xDA8]
	0x03569864 BL 0x1C16CF4
	0x03569868 ADRP X0, 0xBCC000
	0x0356986C LDR X0, [X0 + 0xDB0]
	0x03569870 BL 0x1C16CF4
	0x03569874 ADRP X0, 0xBCC000
	0x03569878 LDR X0, [X0 + 0xDB8]
	0x0356987C BL 0x1C16CF4
	0x03569880 MOVZ W8, 0x1
	0x03569884 STRB W8, [X21 + 0xDFD]
	0x03569888 STRB W31, [X31 + 0xC]
	0x0356988C LDRB W8, [X20 + 0x60]
	0x03569890 CBZ W8, 0x35698B4
	0x03569894 LDP X20, X19, [X31 + 0x60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W9, [X0+24]
	005 And W8, W1, 1
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X19, X0
	008 Move X0, [X0+88]
	009 Move W20, W1
	010 Move X1, X31
	011 Move X2, X31
	012 Move [X19+24], W8
	013 Call IntPtr.op_Inequality, X0, X1
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {26}
	018 And W2, W20, 1
	019 Move X0, X19
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move W1, 41
	023 Move X30, [X31+32]
	024 Call WebRTCAudioProcessor.setParam, X0, X1, X2
	025 Return 
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return 

Method: System.Void set_AGC(System.Boolean value)

Disassembly:
	0x03569898 LDP X22, X21, [X31 + 0x50]
	0x0356989C LDP X24, X23, [X31 + 0x40]
	0x035698A0 LDP X26, X25, [X31 + 0x30]
	0x035698A4 LDP X28, X27, [X31 + 0x20]
	0x035698A8 LDP X29, X30, [X31 + 0x10]
	0x035698AC ADD X31, X31, 0x70
	0x035698B0 RET
	0x035698B4 LDRB W8, [X20 + 0x80]
	0x035698B8 CBZ W8, 0x3569894
	0x035698BC LDR X0, [X20 + 0x58]
	0x035698C0 MOV X1, X31
	0x035698C4 MOV X2, X31
	0x035698C8 BL 0x33BE5B0
	0x035698CC TBNZ X0, 0x0, 0x3569894
	0x035698D0 LDR X0, [X20 + 0x68]
	0x035698D4 CBZ X0, 0x3569CD8
	0x035698D8 LDR X8, [X0]
	0x035698DC MOV X1, X19
	0x035698E0 LDP X9, X2, [X8 + 0x178]
	0x035698E4 BLR X9
	0x035698E8 CBZ X0, 0x3569CD8
	0x035698EC ADRP X10, 0xBCC000
	0x035698F0 LDR X8, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W9, [X0+25]
	005 And W8, W1, 1
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X19, X0
	008 Move X0, [X0+88]
	009 Move W20, W1
	010 Move X1, X31
	011 Move X2, X31
	012 Move [X19+25], W8
	013 Call IntPtr.op_Inequality, X0, X1
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {26}
	018 And W2, W20, 1
	019 Move X0, X19
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move W1, 51
	023 Move X30, [X31+32]
	024 Call WebRTCAudioProcessor.setParam, X0, X1, X2
	025 Return 
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return 

Method: System.Void set_AGCCompressionGain(System.Int32 value)

Disassembly:
	0x035698F4 LDR X10, [X10 + 0xD98]
	0x035698F8 MOV X19, X0
	0x035698FC LDRH W9, [X8 + 0x12E]
	0x03569900 LDR X1, [X10]
	0x03569904 CBZ X9, 0x3569928
	0x03569908 LDR X10, [X8 + 0xB0]
	0x0356990C ADD X10, X10, 0x8
	0x03569910 LDUR X11, [X10 - 0x8]
	0x03569914 CMP X11, X1
	0x03569918 B.EQ 0x3569938
	0x0356991C SUBS X9, X9, 0x1
	0x03569920 ADD X10, X10, 0x10
	0x03569924 B.NE 0x3569910
	0x03569928 MOV X0, X19
	0x0356992C MOV W2, W31
	0x03569930 BL 0x1C5C788
	0x03569934 B 0x3569944
	0x03569938 LDRSW X9, [X10]
	0x0356993C ADD X8, X8, X9, 0x4, LSL
	0x03569940 ADD X0, X8, 0x138
	0x03569944 LDP X8, X1, [X0]
	0x03569948 MOV X0, X19
	0x0356994C BLR X8
	0x03569950 MOV X19, X0
	0x03569954 CBZ X0, 0x3569CDC
	0x03569958 ADRP X26, 0xB8A000
	0x0356995C ADRP X27, 0xBCC000
	0x03569960 ADRP X28, 0xBCC000
	0x03569964 ADRP X29, 0xBCC000
	0x03569968 LDR X26, [X26 + 0xE18]
	0x0356996C LDR X27, [X27 + 0xDA0]
	0x03569970 LDR X28, [X28 + 0xC98]
	0x03569974 LDR X29, [X29 + 0xDA8]
	0x03569978 LDR X8, [X19]
	0x0356997C LDR X1, [X26]
	0x03569980 LDRH W9, [X8 + 0x12E]
	0x03569984 CBZ X9, 0x35699A8
	0x03569988 LDR X10, [X8 + 0xB0]
	0x0356998C ADD X10, X10, 0x8
	0x03569990 LDUR X11, [X10 - 0x8]
	0x03569994 CMP X11, X1
	0x03569998 B.EQ 0x35699B8
	0x0356999C SUBS X9, X9, 0x1
	0x035699A0 ADD X10, X10, 0x10
	0x035699A4 B.NE 0x3569990
	0x035699A8 MOV X0, X19
	0x035699AC MOV W2, W31
	0x035699B0 BL 0x1C5C788
	0x035699B4 B 0x35699C4
	0x035699B8 LDRSW X9, [X10]
	0x035699BC ADD X8, X8, X9, 0x4, LSL
	0x035699C0 ADD X0, X8, 0x138
	0x035699C4 LDP X8, X1, [X0]
	0x035699C8 MOV X0, X19
	0x035699CC BLR X8
	0x035699D0 TBZ X0, 0x0, 0x3569C30
	0x035699D4 LDR X8, [X19]
	0x035699D8 LDR X1, [X27]
	0x035699DC LDRH W9, [X8 + 0x12E]
	0x035699E0 CBZ X9, 0x3569A04
	0x035699E4 LDR X10, [X8 + 0xB0]
	0x035699E8 ADD X10, X10, 0x8
	0x035699EC LDUR X11, [X10 - 0x8]
	0x035699F0 CMP X11, X1
	0x035699F4 B.EQ 0x3569A14
	0x035699F8 SUBS X9, X9, 0x1
	0x035699FC ADD X10, X10, 0x10
	0x03569A00 B.NE 0x35699EC
	0x03569A04 MOV X0, X19
	0x03569A08 MOV W2, W31
	0x03569A0C BL 0x1C5C788
	0x03569A10 B 0x3569A20
	0x03569A14 LDRSW X9, [X10]
	0x03569A18 ADD X8, X8, X9, 0x4, LSL
	0x03569A1C ADD X0, X8, 0x138
	0x03569A20 LDP X8, X1, [X0]
	0x03569A24 MOV X0, X19
	0x03569A28 BLR X8
	0x03569A2C MOV X21, X0
	0x03569A30 LDR X0, [X20 + 0x38]
	0x03569A34 CBZ X0, 0x3569CAC
	0x03569A38 LDR X1, [X28]
	0x03569A3C BL 0x2D10CC0
	0x03569A40 MOV X22, X0
	0x03569A44 CBZ X0, 0x3569CB0
	0x03569A48 LDR W2, [X22 + 0x18]
	0x03569A4C MOV X0, X21
	0x03569A50 MOV X1, X22
	0x03569A54 BL 0x355476C
	0x03569A58 LDR X21, [X20 + 0x28]
	0x03569A5C STRB W31, [X31 + 0xC]
	0x03569A60 ADD X1, X31, 0xC
	0x03569A64 MOV X0, X21
	0x03569A68 MOV X2, X31
	0x03569A6C BL 0x33DE64C
	0x03569A70 LDR X8, [X20 + 0x28]
	0x03569A74 CBZ X8, 0x3569BD0
	0x03569A78 LDR W9, [X8 + 0x20]
	0x03569A7C CMP W9, 0x30
	0x03569A80 B.LE 0x3569B38
	0x03569A84 ADRP X8, 0xB8A000
	0x03569A88 LDR X8, [X8 + 0x9C8]
	0x03569A8C LDR X23, [X20 + 0x78]
	0x03569A90 LDR X24, [X8]
	0x03569A94 LDR X8, [X24 + 0x38]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE77000
	007 Move W8, [X20+3575]
	008 Move W21, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xB90000
	015 Move X0, [X0+840]
	016 Call 0x1C17CF4
	017 Move X0, 0xB8B000
	018 Move X0, [X0+1880]
	019 Call 0x1C17CF4
	020 Move X0, 0xB8B000
	021 Move X0, [X0+2512]
	022 Call 0x1C17CF4
	023 Move X0, 0xBCD000
	024 Move X0, [X0+3384]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+3575], W8
	028 Move W8, [X19+28]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, [X19+88]
	032 Move X1, X31
	033 Move X2, X31
	034 Move [X19+28], W21
	035 Call IntPtr.op_Inequality, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {110}
	040 Move X0, X19
	041 Move W2, W21
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X30, [X31+16]
	045 Move X21, [X31+24]
	046 Move W1, 56
	047 Add X31, X31, 48
	048 Call WebRTCAudioProcessor.setParam, X0, X1, X2
	049 Return 
	050 Move X8, 0xB8B000
	051 Move X19, [X19+120]
	052 Move X8, [X8+2512]
	053 Move W1, 1
	054 Move X0, [X8]
	055 Call 0x1C17D6C
	056 Move X8, 0xB8B000
	057 Move X8, [X8+1880]
	058 Move X20, X0
	059 Add X1, X31, 12
	060 Move [X31+12], W21
	061 Move X0, [X8]
	062 Call 0x1C17E04
	063 Compare X20, 0
	064 JumpIfEqual {116}
	065 Move X21, X0
	066 Compare X0, 0
	067 JumpIfEqual {74}
	068 Move X8, [X20]
	069 Move X0, X21
	070 Move X1, [X8+64]
	071 Call 0x1C17E00
	072 Compare X0, 0
	073 JumpIfEqual {118}
	074 Move W8, [X20+24]
	075 Compare W8, 0
	076 JumpIfEqual {117}
	077 Move [X20+32], X21
	078 Compare X19, 0
	079 JumpIfEqual {116}
	080 Move X9, 0xB90000
	081 Move X8, [X19]
	082 Move X9, [X9+840]
	083 Move X10, 0xBCD000
	084 Move X1, [X9]
	085 Move X10, [X10+3384]
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Move X21, [X10]
	088 Compare X9, 0
	089 JumpIfEqual {96}
	090 Move X10, [X8+176]
	091 Add X10, X10, 8
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Subtract X9, X9, 1
	095 Add X10, X10, 16
	096 Move W2, 1
	097 Move X0, X19
	098 Call 0x1C5D788
	099 Move W9, [X10]
	100 Add W9, W9, 1
	101 Add X8, X8, W9
	102 Add X0, X8, 312
	103 Move X8, [X0]
	104 Move X4, [X0+8]
	105 Move W1, 1
	106 Move X0, X19
	107 Move X2, X21
	108 Move X3, X20
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move X20, [X31+32]
	111 Move X19, [X31+40]
	112 Move X30, [X31+16]
	113 Move X21, [X31+24]
	114 Add X31, X31, 48
	115 Return 
	116 Call 0x1C17F20
	117 Call 0x1C17F28
	118 Call 0x1C17F44
	119 Move X1, X31
	120 Call 0x1C17DEC

Method: System.Void set_AGCTargetLevel(System.Int32 value)

Disassembly:
	0x03569A98 CBNZ X8, 0x3569AA8
	0x03569A9C MOV X0, X24
	0x03569AA0 BL 0x1C5C6E0
	0x03569AA4 LDR X8, [X24 + 0x38]
	0x03569AA8 LDR X0, [X8 + 0x10]
	0x03569AAC LDRB W8, [X0 + 0x135]
	0x03569AB0 TBNZ X8, 0x0, 0x3569AB8
	0x03569AB4 BL 0x1C5C684
	0x03569AB8 LDR W8, [X0 + 0xE0]
	0x03569ABC CBNZ W8, 0x3569AC4
	0x03569AC0 BL 0x1C16DFC
	0x03569AC4 LDR X8, [X24 + 0x38]
	0x03569AC8 LDR X0, [X8 + 0x10]
	0x03569ACC LDRB W8, [X0 + 0x135]
	0x03569AD0 TBNZ X8, 0x0, 0x3569AD8
	0x03569AD4 BL 0x1C5C684
	0x03569AD8 CBZ X23, 0x3569BE0
	0x03569ADC ADRP X10, 0xB8F000
	0x03569AE0 LDR X9, [X0 + 0xB8]
	0x03569AE4 LDR X8, [X23]
	0x03569AE8 LDR X10, [X10 + 0x348]
	0x03569AEC LDR X24, [X9]
	0x03569AF0 LDRH W9, [X8 + 0x12E]
	0x03569AF4 LDR X1, [X10]
	0x03569AF8 ADRP X10, 0xBCC000
	0x03569AFC LDR X10, [X10 + 0xDB8]
	0x03569B00 LDR X25, [X10]
	0x03569B04 CBZ X9, 0x3569B28
	0x03569B08 LDR X10, [X8 + 0xB0]
	0x03569B0C ADD X10, X10, 0x8
	0x03569B10 LDUR X11, [X10 - 0x8]
	0x03569B14 CMP X11, X1
	0x03569B18 B.EQ 0x3569B5C
	0x03569B1C SUBS X9, X9, 0x1
	0x03569B20 ADD X10, X10, 0x10
	0x03569B24 B.NE 0x3569B10
	0x03569B28 MOVZ W2, 0x1
	0x03569B2C MOV X0, X23
	0x03569B30 BL 0x1C5C788
	0x03569B34 B 0x3569B6C
	0x03569B38 LDR X2, [X29]
	0x03569B3C MOV X0, X8
	0x03569B40 MOV X1, X22
	0x03569B44 BL 0x24F1750
	0x03569B48 LDR X0, [X20 + 0x30]
	0x03569B4C CBZ X0, 0x3569BD8
	0x03569B50 MOV X1, X31
	0x03569B54 BL 0x33DE66C
	0x03569B58 B 0x3569BA0
	0x03569B5C LDR W9, [X10]
	0x03569B60 ADD W9, W9, 0x1
	0x03569B64 ADD X8, X8, W9, 0x4, SXTW
	0x03569B68 ADD X0, X8, 0x138
	0x03569B6C LDP X8, X4, [X0]
	0x03569B70 MOVZ W1, 0x1
	0x03569B74 MOV X0, X23
	0x03569B78 MOV X2, X25
	0x03569B7C MOV X3, X24
	0x03569B80 BLR X8
	0x03569B84 LDR X0, [X20 + 0x38]
	0x03569B88 CBZ X0, 0x3569BE8
	0x03569B8C ADRP X8, 0xBCC000
	0x03569B90 LDR X8, [X8 + 0xD90]
	0x03569B94 LDR X2, [X8]
	0x03569B98 MOV X1, X22
	0x03569B9C BL 0x2D10D08
	0x03569BA0 MOV X24, X31
	0x03569BA4 MOVZ W22, 0x5
	0x03569BA8 LDRB W8, [X31 + 0xC]
	0x03569BAC CBZ W8, 0x3569BBC
	0x03569BB0 MOV X0, X21
	0x03569BB4 MOV X1, X31
	0x03569BB8 BL 0x33E14E4
	0x03569BBC CBNZ X24, 0x3569CA4
	0x03569BC0 CBZ W22, 0x3569978
	0x03569BC4 CMP W22, 0x5
	0x03569BC8 B.EQ 0x3569978
	0x03569BCC B 0x3569C30
	0x03569BD0 BL 0x1C16F20
	0x03569BD4 B 0x3569CE0
	0x03569BD8 BL 0x1C16F20
	0x03569BDC B 0x3569CE0
	0x03569BE0 BL 0x1C16F20
	0x03569BE4 B 0x3569CE0
	0x03569BE8 BL 0x1C16F20
	0x03569BEC B 0x3569CE0
	0x03569BF0 B 0x3569C08
	0x03569BF4 B 0x3569C08
	0x03569BF8 B 0x3569C08
	0x03569BFC B 0x3569C08
	0x03569C00 B 0x3569C08
	0x03569C04 B 0x3569C08
	0x03569C08 MOV X23, X1
	0x03569C0C MOV X22, X0
	0x03569C10 CMP W23, 0x1
	0x03569C14 B.NE 0x3569CB4
	0x03569C18 MOV X0, X22
	0x03569C1C BL 0x3EB1AD0
	0x03569C20 LDR X24, [X0]
	0x03569C24 BL 0x3EB1AE0
	0x03569C28 MOV W22, W31
	0x03569C2C B 0x3569BA8
	0x03569C30 MOV X20, X31
	0x03569C34 CBZ X19, 0x3569C98
	0x03569C38 ADRP X10, 0xB8A000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE77000
	007 Move W8, [X20+3576]
	008 Move W21, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xB90000
	015 Move X0, [X0+840]
	016 Call 0x1C17CF4
	017 Move X0, 0xB8B000
	018 Move X0, [X0+1880]
	019 Call 0x1C17CF4
	020 Move X0, 0xB8B000
	021 Move X0, [X0+2512]
	022 Call 0x1C17CF4
	023 Move X0, 0xBCD000
	024 Move X0, [X0+3392]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+3576], W8
	028 Move W8, [X19+32]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, [X19+88]
	032 Move X1, X31
	033 Move X2, X31
	034 Move [X19+32], W21
	035 Call IntPtr.op_Inequality, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {110}
	040 Move X0, X19
	041 Move W2, W21
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X30, [X31+16]
	045 Move X21, [X31+24]
	046 Move W1, 55
	047 Add X31, X31, 48
	048 Call WebRTCAudioProcessor.setParam, X0, X1, X2
	049 Return 
	050 Move X8, 0xB8B000
	051 Move X19, [X19+120]
	052 Move X8, [X8+2512]
	053 Move W1, 1
	054 Move X0, [X8]
	055 Call 0x1C17D6C
	056 Move X8, 0xB8B000
	057 Move X8, [X8+1880]
	058 Move X20, X0
	059 Add X1, X31, 12
	060 Move [X31+12], W21
	061 Move X0, [X8]
	062 Call 0x1C17E04
	063 Compare X20, 0
	064 JumpIfEqual {116}
	065 Move X21, X0
	066 Compare X0, 0
	067 JumpIfEqual {74}
	068 Move X8, [X20]
	069 Move X0, X21
	070 Move X1, [X8+64]
	071 Call 0x1C17E00
	072 Compare X0, 0
	073 JumpIfEqual {118}
	074 Move W8, [X20+24]
	075 Compare W8, 0
	076 JumpIfEqual {117}
	077 Move [X20+32], X21
	078 Compare X19, 0
	079 JumpIfEqual {116}
	080 Move X9, 0xB90000
	081 Move X8, [X19]
	082 Move X9, [X9+840]
	083 Move X10, 0xBCD000
	084 Move X1, [X9]
	085 Move X10, [X10+3392]
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Move X21, [X10]
	088 Compare X9, 0
	089 JumpIfEqual {96}
	090 Move X10, [X8+176]
	091 Add X10, X10, 8
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Subtract X9, X9, 1
	095 Add X10, X10, 16
	096 Move W2, 1
	097 Move X0, X19
	098 Call 0x1C5D788
	099 Move W9, [X10]
	100 Add W9, W9, 1
	101 Add X8, X8, W9
	102 Add X0, X8, 312
	103 Move X8, [X0]
	104 Move X4, [X0+8]
	105 Move W1, 1
	106 Move X0, X19
	107 Move X2, X21
	108 Move X3, X20
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move X20, [X31+32]
	111 Move X19, [X31+40]
	112 Move X30, [X31+16]
	113 Move X21, [X31+24]
	114 Add X31, X31, 48
	115 Return 
	116 Call 0x1C17F20
	117 Call 0x1C17F28
	118 Call 0x1C17F44
	119 Move X1, X31
	120 Call 0x1C17DEC

Method: System.Void set_AGC2(System.Boolean value)

Disassembly:
	0x03569C3C LDR X8, [X19]
	0x03569C40 LDR X10, [X10 + 0xE00]
	0x03569C44 LDRH W9, [X8 + 0x12E]
	0x03569C48 LDR X1, [X10]
	0x03569C4C CBZ X9, 0x3569C70
	0x03569C50 LDR X10, [X8 + 0xB0]
	0x03569C54 ADD X10, X10, 0x8
	0x03569C58 LDUR X11, [X10 - 0x8]
	0x03569C5C CMP X11, X1
	0x03569C60 B.EQ 0x3569C80
	0x03569C64 SUBS X9, X9, 0x1
	0x03569C68 ADD X10, X10, 0x10
	0x03569C6C B.NE 0x3569C58
	0x03569C70 MOV X0, X19
	0x03569C74 MOV W2, W31
	0x03569C78 BL 0x1C5C788
	0x03569C7C B 0x3569C8C
	0x03569C80 LDRSW X9, [X10]
	0x03569C84 ADD X8, X8, X9, 0x4, LSL
	0x03569C88 ADD X0, X8, 0x138
	0x03569C8C LDP X8, X1, [X0]
	0x03569C90 MOV X0, X19
	0x03569C94 BLR X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W9, [X0+36]
	005 And W8, W1, 1
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X19, X0
	008 Move X0, [X0+88]
	009 Move W20, W1
	010 Move X1, X31
	011 Move X2, X31
	012 Move [X19+36], W8
	013 Call IntPtr.op_Inequality, X0, X1
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {26}
	018 And W2, W20, 1
	019 Move X0, X19
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move W1, 71
	023 Move X30, [X31+32]
	024 Call WebRTCAudioProcessor.setParam, X0, X1, X2
	025 Return 
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return 

Method: System.Void set_VAD(System.Boolean value)

Disassembly:
	0x03569C98 CBZ X20, 0x3569894
	0x03569C9C MOV X0, X20
	0x03569CA0 BL 0x1C16F18
	0x03569CA4 MOV X0, X24
	0x03569CA8 BL 0x1C16F18
	0x03569CAC BL 0x1C16F20
	0x03569CB0 BL 0x1C16F20
	0x03569CB4 MOV X24, X31
	0x03569CB8 LDRB W8, [X31 + 0xC]
	0x03569CBC CBZ W8, 0x3569CCC
	0x03569CC0 MOV X0, X21
	0x03569CC4 MOV X1, X31
	0x03569CC8 BL 0x33E14E4
	0x03569CCC CBZ X24, 0x3569D14
	0x03569CD0 MOV X0, X24
	0x03569CD4 BL 0x1C16F18
	0x03569CD8 BL 0x1C16F20
	0x03569CDC BL 0x1C16F20
	0x03569CE0 MOV X23, X1
	0x03569CE4 MOV X22, X0
	0x03569CE8 B 0x3569CB8
	0x03569CEC B 0x3569D0C
	0x03569CF0 B 0x3569D0C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W9, [X0+37]
	005 And W8, W1, 1
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X19, X0
	008 Move X0, [X0+88]
	009 Move W20, W1
	010 Move X1, X31
	011 Move X2, X31
	012 Move [X19+37], W8
	013 Call IntPtr.op_Inequality, X0, X1
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {26}
	018 And W2, W20, 1
	019 Move X0, X19
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move W1, 61
	023 Move X30, [X31+32]
	024 Call WebRTCAudioProcessor.setParam, X0, X1, X2
	025 Return 
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return 

Method: System.Void set_Bypass(System.Boolean value)

Disassembly:
	0x03569CF4 B 0x3569D0C
	0x03569CF8 B 0x3569D0C
	0x03569CFC B 0x3569D0C
	0x03569D00 B 0x3569D0C
	0x03569D04 B 0x3569D0C
	0x03569D08 B 0x3569D0C
	0x03569D0C MOV X23, X1
	0x03569D10 MOV X22, X0
	0x03569D14 CMP W23, 0x1
	0x03569D18 B.NE 0x3569D30
	0x03569D1C MOV X0, X22
	0x03569D20 BL 0x3EB1AD0
	0x03569D24 LDR X20, [X0]
	0x03569D28 BL 0x3EB1AE0
	0x03569D2C B 0x3569C34
	0x03569D30 MOV X20, X31
	0x03569D34 B 0x3569D3C
	0x03569D38 MOV X22, X0
	0x03569D3C CBZ X19, 0x3569DA0
	0x03569D40 ADRP X10, 0xB8A000
	0x03569D44 LDR X8, [X19]
	0x03569D48 LDR X10, [X10 + 0xE00]
	0x03569D4C LDRH W9, [X8 + 0x12E]
	0x03569D50 LDR X1, [X10]
	0x03569D54 CBZ X9, 0x3569D78
	0x03569D58 LDR X10, [X8 + 0xB0]
	0x03569D5C ADD X10, X10, 0x8
	0x03569D60 LDUR X11, [X10 - 0x8]
	0x03569D64 CMP X11, X1
	0x03569D68 B.EQ 0x3569D88
	0x03569D6C SUBS X9, X9, 0x1
	0x03569D70 ADD X10, X10, 0x10
	0x03569D74 B.NE 0x3569D60
	0x03569D78 MOV X0, X19
	0x03569D7C MOV W2, W31
	0x03569D80 BL 0x1C5C788
	0x03569D84 B 0x3569D94
	0x03569D88 LDRSW X9, [X10]
	0x03569D8C ADD X8, X8, X9, 0x4, LSL
	0x03569D90 ADD X0, X8, 0x138
	0x03569D94 LDP X8, X1, [X0]
	0x03569D98 MOV X0, X19
	0x03569D9C BLR X8
	0x03569DA0 CBNZ X20, 0x3569DAC
	0x03569DA4 MOV X0, X22
	0x03569DA8 BL 0x1D2C690
	0x03569DAC MOV X0, X20
	0x03569DB0 BL 0x1C16F18
	0x03569DB4 BL 0x1990590
	0x03569DB8 SUB X31, X31, 0x80
	0x03569DBC STP X30, X0, [X31 + 0x20]
	0x03569DC0 STP X28, X27, [X31 + 0x30]
	0x03569DC4 STP X26, X25, [X31 + 0x40]
	0x03569DC8 STP X24, X23, [X31 + 0x50]
	0x03569DCC STP X22, X21, [X31 + 0x60]
	0x03569DD0 STP X20, X19, [X31 + 0x70]
	0x03569DD4 ADRP X21, 0xE76000
	0x03569DD8 ADRP X20, 0xB8A000
	0x03569DDC LDRB W8, [X21 + 0xDFE]
	0x03569DE0 LDR X20, [X20 + 0x9C8]
	0x03569DE4 MOV X19, X0
	0x03569DE8 TBNZ X8, 0x0, 0x3569E6C
	0x03569DEC ADRP X0, 0xB8A000
	0x03569DF0 LDR X0, [X0 + 0x9C8]
	0x03569DF4 BL 0x1C16CF4
	0x03569DF8 ADRP X0, 0xBCC000
	0x03569DFC LDR X0, [X0 + 0xD90]
	0x03569E00 BL 0x1C16CF4
	0x03569E04 ADRP X0, 0xB8F000
	0x03569E08 LDR X0, [X0 + 0x348]
	0x03569E0C BL 0x1C16CF4
	0x03569E10 ADRP X0, 0xB8A000
	0x03569E14 LDR X0, [X0 + 0x758]
	0x03569E18 BL 0x1C16CF4
	0x03569E1C ADRP X0, 0xB8A000
	0x03569E20 LDR X0, [X0 + 0x9D0]
	0x03569E24 BL 0x1C16CF4
	0x03569E28 ADRP X0, 0xBCC000
	0x03569E2C LDR X0, [X0 + 0xDC0]
	0x03569E30 BL 0x1C16CF4
	0x03569E34 ADRP X0, 0xBCC000
	0x03569E38 LDR X0, [X0 + 0xDB0]
	0x03569E3C BL 0x1C16CF4
	0x03569E40 ADRP X0, 0xBCC000
	0x03569E44 LDR X0, [X0 + 0xDC8]
	0x03569E48 BL 0x1C16CF4
	0x03569E4C ADRP X0, 0xBCC000
	0x03569E50 LDR X0, [X0 + 0xDD0]
	0x03569E54 BL 0x1C16CF4
	0x03569E58 ADRP X0, 0xBCC000
	0x03569E5C LDR X0, [X0 + 0xDD8]
	0x03569E60 BL 0x1C16CF4
	0x03569E64 MOVZ W8, 0x1
	0x03569E68 STRB W8, [X21 + 0xDFE]
	0x03569E6C LDR X21, [X20]
	0x03569E70 STRB W31, [X31 + 0x1C]
	0x03569E74 LDR X20, [X19 + 0x78]
	0x03569E78 LDR X8, [X21 + 0x38]
	0x03569E7C CBNZ X8, 0x3569E8C
	0x03569E80 MOV X0, X21
	0x03569E84 BL 0x1C5C6E0
	0x03569E88 LDR X8, [X21 + 0x38]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE77000
	007 Move W8, [X21+3577]
	008 Move X19, X0
	009 And W20, W1, 1
	010 Move [X31+12], W20
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xB8B000
	016 Move X0, [X0+2504]
	017 Call 0x1C17CF4
	018 Move X0, 0xB8B000
	019 Move X0, [X0+2904]
	020 Call 0x1C17CF4
	021 Move X0, 0xB90000
	022 Move X0, [X0+840]
	023 Call 0x1C17CF4
	024 Move X0, 0xBCD000
	025 Move X0, [X0+3400]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3577], W8
	029 Move W8, [X19+64]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X8, 0xB8B000
	032 Move X8, [X8+2904]
	033 Move X20, [X19+120]
	034 Move X0, [X8]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Add X0, X31, 12
	040 Move X1, X31
	041 Call Boolean.ToString, X0
	042 Move X8, 0xBCD000
	043 Move X8, [X8+3400]
	044 Move X1, X0
	045 Move X2, X31
	046 Move X8, [X8]
	047 Move X0, X8
	048 Call String.Concat, X0, X1
	049 Move X8, 0xB8B000
	050 Move X8, [X8+2504]
	051 Move X21, X0
	052 Move X22, [X8]
	053 Move X8, [X22+56]
	054 Compare X8, 0
	055 JumpIfNotEqual {59}
	056 Move X0, X22
	057 Call 0x1C5D6E0
	058 Move X8, [X22+56]
	059 Move X0, [X8+16]
	060 Move W8, [X0+309]
	061 Move TEMP, X8
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {66}
	065 Call 0x1C5D684
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X8, [X22+56]
	071 Move X0, [X8+16]
	072 Move W8, [X0+309]
	073 Move TEMP, X8
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {78}
	077 Call 0x1C5D684
	078 Compare X20, 0
	079 JumpIfEqual {117}
	080 Move X10, 0xB90000
	081 Move X9, [X0+184]
	082 Move X8, [X20]
	083 Move X10, [X10+840]
	084 Move X22, [X9]
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Move X1, [X10]
	087 Compare X9, 0
	088 JumpIfEqual {95}
	089 Move X10, [X8+176]
	090 Add X10, X10, 8
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Subtract X9, X9, 1
	094 Add X10, X10, 16
	095 Move W2, 1
	096 Move X0, X20
	097 Call 0x1C5D788
	098 Move W9, [X10]
	099 Add W9, W9, 1
	100 Add X8, X8, W9
	101 Add X0, X8, 312
	102 Move X8, [X0]
	103 Move X4, [X0+8]
	104 Move W1, 3
	105 Move X0, X20
	106 Move X2, X21
	107 Move X3, X22
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move W20, [X31+12]
	110 Move [X19+64], W20
	111 Move X20, [X31+32]
	112 Move X19, [X31+40]
	113 Move X22, [X31+16]
	114 Move X21, [X31+24]
	115 Move X30, [X31+48]
	116 Return 
	117 Call 0x1C17F20

Method: System.Boolean get_Bypass()

Disassembly:
	0x03569E8C LDR X0, [X8 + 0x10]
	0x03569E90 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move W0, [X0+64]
	002 Return X0

Method: System.Void .ctor(Photon.Voice.ILogger logger, System.Int32 frameSize, System.Int32 samplingRate, System.Int32 channels, System.Int32 reverseSamplingRate, System.Int32 reverseChannels)

Disassembly:
	0x03569E94 TBNZ X8, 0x0, 0x3569E9C
	0x03569E98 BL 0x1C5C684
	0x03569E9C LDR W8, [X0 + 0xE0]
	0x03569EA0 CBNZ W8, 0x3569EA8
	0x03569EA4 BL 0x1C16DFC
	0x03569EA8 LDR X8, [X21 + 0x38]
	0x03569EAC LDR X0, [X8 + 0x10]
	0x03569EB0 LDRB W8, [X0 + 0x135]
	0x03569EB4 TBNZ X8, 0x0, 0x3569EBC
	0x03569EB8 BL 0x1C5C684
	0x03569EBC CBZ X20, 0x356A1DC
	0x03569EC0 ADRP X23, 0xB8F000
	0x03569EC4 ADRP X10, 0xBCC000
	0x03569EC8 LDR X23, [X23 + 0x348]
	0x03569ECC LDR X9, [X0 + 0xB8]
	0x03569ED0 LDR X8, [X20]
	0x03569ED4 LDR X10, [X10 + 0xDC8]
	0x03569ED8 LDR X1, [X23]
	0x03569EDC LDR X21, [X9]
	0x03569EE0 LDRH W9, [X8 + 0x12E]
	0x03569EE4 LDR X22, [X10]
	0x03569EE8 CBZ X9, 0x3569F0C
	0x03569EEC LDR X10, [X8 + 0xB0]
	0x03569EF0 ADD X10, X10, 0x8
	0x03569EF4 LDUR X11, [X10 - 0x8]
	0x03569EF8 CMP X11, X1
	0x03569EFC B.EQ 0x3569F1C
	0x03569F00 SUBS X9, X9, 0x1
	0x03569F04 ADD X10, X10, 0x10
	0x03569F08 B.NE 0x3569EF4
	0x03569F0C MOVZ W2, 0x1
	0x03569F10 MOV X0, X20
	0x03569F14 BL 0x1C5C788
	0x03569F18 B 0x3569F2C
	0x03569F1C LDR W9, [X10]
	0x03569F20 ADD W9, W9, 0x1
	0x03569F24 ADD X8, X8, W9, 0x4, SXTW
	0x03569F28 ADD X0, X8, 0x138
	0x03569F2C LDP X8, X4, [X0]
	0x03569F30 MOVZ W1, 0x3
	0x03569F34 MOV X0, X20
	0x03569F38 MOV X2, X22
	0x03569F3C MOV X3, X21
	0x03569F40 BLR X8
	0x03569F44 MOVZ W8, 0x1
	0x03569F48 ADD X9, X31, 0x28
	0x03569F4C STRB W8, [X19 + 0x26]
	0x03569F50 STP X31, X9, [X31 + 0x8]
	0x03569F54 LDRB W8, [X19 + 0x60]
	0x03569F58 CBZ W8, 0x3569F84
	0x03569F5C ADD X0, X31, 0x8
	0x03569F60 BL 0x1BC0860
	0x03569F64 LDP X20, X19, [X31 + 0x70]
	0x03569F68 LDP X22, X21, [X31 + 0x60]
	0x03569F6C LDP X24, X23, [X31 + 0x50]
	0x03569F70 LDP X26, X25, [X31 + 0x40]
	0x03569F74 LDP X28, X27, [X31 + 0x30]
	0x03569F78 LDR X30, [X31 + 0x20]
	0x03569F7C ADD X31, X31, 0x80
	0x03569F80 RET
	0x03569F84 ADRP X24, 0xBCC000
	0x03569F88 ADRP X25, 0xBCC000
	0x03569F8C ADRP X26, 0xB8A000
	0x03569F90 ADRP X27, 0xB8A000
	0x03569F94 ADRP X28, 0xBCC000
	0x03569F98 LDR X24, [X24 + 0xDC0]
	0x03569F9C LDR X25, [X25 + 0xD90]
	0x03569FA0 LDR X26, [X26 + 0x9D0]
	0x03569FA4 LDR X27, [X27 + 0x758]
	0x03569FA8 LDR X28, [X28 + 0xDD0]
	0x03569FAC LDR X0, [X19 + 0x30]
	0x03569FB0 CBZ X0, 0x356A1D8
	0x03569FB4 LDR X8, [X0]
	0x03569FB8 LDP X9, X1, [X8 + 0x1D8]
	0x03569FBC BLR X9
	0x03569FC0 LDR X8, [X31 + 0x28]
	0x03569FC4 LDR X20, [X8 + 0x28]
	0x03569FC8 STRB W31, [X31 + 0x1C]
	0x03569FCC ADD X1, X31, 0x1C
	0x03569FD0 MOV X0, X20
	0x03569FD4 MOV X2, X31
	0x03569FD8 BL 0x33DE64C
	0x03569FDC LDR X8, [X31 + 0x28]
	0x03569FE0 LDR X0, [X8 + 0x28]
	0x03569FE4 CBZ X0, 0x356A148
	0x03569FE8 LDR W8, [X0 + 0x20]
	0x03569FEC CMP W8, 0x1
	0x03569FF0 B.LT 0x356A008
	0x03569FF4 LDR X1, [X24]
	0x03569FF8 BL 0x24F18D4
	0x03569FFC MOV X21, X0
	0x0356A000 MOV X22, X31
	0x0356A004 B 0x356A010
	0x0356A008 MOV X22, X31
	0x0356A00C MOV X21, X31
	0x0356A010 MOVZ W19, 0x6
	0x0356A014 LDRB W8, [X31 + 0x1C]
	0x0356A018 CBZ W8, 0x356A028
	0x0356A01C MOV X0, X20
	0x0356A020 MOV X1, X31
	0x0356A024 BL 0x33E14E4
	0x0356A028 CBNZ X22, 0x356A190
	0x0356A02C CMP W19, 0x6
	0x0356A030 B.EQ 0x356A038
	0x0356A034 CBNZ W19, 0x3569F5C
	0x0356A038 LDR X19, [X31 + 0x28]
	0x0356A03C CBZ X21, 0x356A184
	0x0356A040 LDR X0, [X19 + 0x58]
	0x0356A044 LDR W2, [X21 + 0x18]
	0x0356A048 MOV X1, X21
	0x0356A04C MOV X3, X31
	0x0356A050 BL 0x356AA38
	0x0356A054 LDR X8, [X31 + 0x28]
	0x0356A058 MOV W22, W0
	0x0356A05C LDR X0, [X8 + 0x38]
	0x0356A060 CBZ X0, 0x356A198
	0x0356A064 LDR X2, [X25]
	0x0356A068 MOV X1, X21
	0x0356A06C BL 0x2D10D08
	0x0356A070 LDR X8, [X31 + 0x28]
	0x0356A074 LDR W9, [X8 + 0x88]
	0x0356A078 CMP W9, W22
	0x0356A07C B.EQ 0x3569FC0
	0x0356A080 STR W22, [X8 + 0x88]
	0x0356A084 LDR X19, [X8 + 0x78]
	0x0356A088 LDR X0, [X26]
	0x0356A08C MOVZ W1, 0x1
	0x0356A090 BL 0x1C16D6C
	0x0356A094 MOV X20, X0
	0x0356A098 LDR X0, [X27]
	0x0356A09C STR W22, [X31 + 0x4]
	0x0356A0A0 ADD X1, X31, 0x4
	0x0356A0A4 BL 0x1C16E04
	0x0356A0A8 CBZ X20, 0x356A1A0
	0x0356A0AC MOV X21, X0
	0x0356A0B0 CBZ X0, 0x356A0C8
	0x0356A0B4 LDR X8, [X20]
	0x0356A0B8 LDR X1, [X8 + 0x40]
	0x0356A0BC MOV X0, X21
	0x0356A0C0 BL 0x1C16E00
	0x0356A0C4 CBZ X0, 0x356A1A8
	0x0356A0C8 LDR W8, [X20 + 0x18]
	0x0356A0CC CBZ W8, 0x356A19C
	0x0356A0D0 STR X21, [X20 + 0x20]
	0x0356A0D4 CBZ X19, 0x356A1A4
	0x0356A0D8 LDR X8, [X19]
	0x0356A0DC LDR X1, [X23]
	0x0356A0E0 LDR X21, [X28]
	0x0356A0E4 LDRH W9, [X8 + 0x12E]
	0x0356A0E8 CBZ X9, 0x356A10C
	0x0356A0EC LDR X10, [X8 + 0xB0]
	0x0356A0F0 ADD X10, X10, 0x8
	0x0356A0F4 LDUR X11, [X10 - 0x8]
	0x0356A0F8 CMP X11, X1
	0x0356A0FC B.EQ 0x356A11C
	0x0356A100 SUBS X9, X9, 0x1
	0x0356A104 ADD X10, X10, 0x10
	0x0356A108 B.NE 0x356A0F4
	0x0356A10C MOVZ W2, 0x1
	0x0356A110 MOV X0, X19
	0x0356A114 BL 0x1C5C788
	0x0356A118 B 0x356A12C
	0x0356A11C LDR W9, [X10]
	0x0356A120 ADD W9, W9, 0x1
	0x0356A124 ADD X8, X8, W9, 0x4, SXTW
	0x0356A128 ADD X0, X8, 0x138
	0x0356A12C LDP X8, X4, [X0]
	0x0356A130 MOVZ W1, 0x1
	0x0356A134 MOV X0, X19
	0x0356A138 MOV X2, X21
	0x0356A13C MOV X3, X20
	0x0356A140 BLR X8
	0x0356A144 B 0x3569FC0
	0x0356A148 BL 0x1C16F20
	0x0356A14C B 0x356A1E0
	0x0356A150 B 0x356A158
	0x0356A154 B 0x356A158
	0x0356A158 MOV X21, X1
	0x0356A15C MOV X19, X0
	0x0356A160 CMP W21, 0x1
	0x0356A164 B.NE 0x356A1B4
	0x0356A168 MOV X0, X19
	0x0356A16C BL 0x3EB1AD0
	0x0356A170 LDR X22, [X0]
	0x0356A174 BL 0x3EB1AE0
	0x0356A178 MOV W19, W31
	0x0356A17C MOV X21, X31
	0x0356A180 B 0x356A014
	0x0356A184 LDRB W8, [X19 + 0x60]
	0x0356A188 CBZ W8, 0x3569FAC
	0x0356A18C B 0x3569F5C
	0x0356A190 MOV X0, X22
	0x0356A194 BL 0x1C16F18
	0x0356A198 BL 0x1C16F20
	0x0356A19C BL 0x1C16F28
	0x0356A1A0 BL 0x1C16F20
	0x0356A1A4 BL 0x1C16F20
	0x0356A1A8 BL 0x1C16F44
	0x0356A1AC MOV X1, X31
	0x0356A1B0 BL 0x1C16DEC
	0x0356A1B4 MOV X22, X31
	0x0356A1B8 LDRB W8, [X31 + 0x1C]
	0x0356A1BC CBZ W8, 0x356A1CC
	0x0356A1C0 MOV X0, X20
	0x0356A1C4 MOV X1, X31
	0x0356A1C8 BL 0x33E14E4
	0x0356A1CC CBZ X22, 0x356A218
	0x0356A1D0 MOV X0, X22
	0x0356A1D4 BL 0x1C16F18
	0x0356A1D8 BL 0x1C16F20
	0x0356A1DC BL 0x1C16F20
	0x0356A1E0 MOV X19, X0
	0x0356A1E4 MOV W21, W1
	0x0356A1E8 B 0x356A1B8
	0x0356A1EC B 0x356A210
	0x0356A1F0 B 0x356A210
	0x0356A1F4 B 0x356A210
	0x0356A1F8 B 0x356A210
	0x0356A1FC B 0x356A210
	0x0356A200 B 0x356A210
	0x0356A204 B 0x356A210
	0x0356A208 B 0x356A210
	0x0356A20C B 0x356A210
	0x0356A210 MOV X19, X0
	0x0356A214 MOV W21, W1
	0x0356A218 CMP W21, 0x1
	0x0356A21C B.NE 0x356A3D0
	0x0356A220 MOV X0, X19
	0x0356A224 BL 0x3EB1AD0
	0x0356A228 MOV X19, X0
	0x0356A22C ADRP X0, 0xB89000
	0x0356A230 LDR X0, [X0 + 0x7D0]
	0x0356A234 BL 0x1C16D08
	0x0356A238 LDR X8, [X19]
	0x0356A23C LDR X1, [X8]
	0x0356A240 BL 0x1C17270
	0x0356A244 TBZ X0, 0x0, 0x356A380
	0x0356A248 LDR X21, [X19]
	0x0356A24C BL 0x3EB1AE0
	0x0356A250 LDR X8, [X31 + 0x28]
	0x0356A254 LDR X19, [X8 + 0x78]
	0x0356A258 CBZ X21, 0x356A284
	0x0356A25C ADRP X0, 0xBCB000
	0x0356A260 LDR X0, [X0 + 0xDE0]
	0x0356A264 BL 0x1C16D08
	0x0356A268 LDR X8, [X21]
	0x0356A26C MOV X20, X0
	0x0356A270 LDP X9, X1, [X8 + 0x168]
	0x0356A274 MOV X0, X21
	0x0356A278 BLR X9
	0x0356A27C MOV X1, X0
	0x0356A280 B 0x356A298
	0x0356A284 ADRP X0, 0xBCB000
	0x0356A288 LDR X0, [X0 + 0xDE0]
	0x0356A28C BL 0x1C16D08
	0x0356A290 MOV X20, X0
	0x0356A294 MOV X1, X31
	0x0356A298 MOV X0, X20
	0x0356A29C MOV X2, X31
	0x0356A2A0 BL 0x321B938
	0x0356A2A4 MOV X20, X0
	0x0356A2A8 ADRP X0, 0xB89000
	0x0356A2AC LDR X0, [X0 + 0x9C8]
	0x0356A2B0 BL 0x1C16D08
	0x0356A2B4 LDR X8, [X0 + 0x38]
	0x0356A2B8 MOV X21, X0
	0x0356A2BC CBNZ X8, 0x356A2CC
	0x0356A2C0 MOV X0, X21
	0x0356A2C4 BL 0x1C5C6E0
	0x0356A2C8 LDR X8, [X21 + 0x38]
	0x0356A2CC LDR X0, [X8 + 0x10]
	0x0356A2D0 LDRB W8, [X0 + 0x135]
	0x0356A2D4 TBNZ X8, 0x0, 0x356A2DC
	0x0356A2D8 BL 0x1C5C684
	0x0356A2DC LDR W8, [X0 + 0xE0]
	0x0356A2E0 CBNZ W8, 0x356A2E8
	0x0356A2E4 BL 0x1C16DFC
	0x0356A2E8 LDR X8, [X21 + 0x38]
	0x0356A2EC LDR X0, [X8 + 0x10]
	0x0356A2F0 LDRB W8, [X0 + 0x135]
	0x0356A2F4 TBNZ X8, 0x0, 0x356A2FC
	0x0356A2F8 BL 0x1C5C684
	0x0356A2FC CBZ X19, 0x356A3A0
	0x0356A300 LDR X8, [X0 + 0xB8]
	0x0356A304 LDR X21, [X8]
	0x0356A308 ADRP X0, 0xB8E000
	0x0356A30C LDR X0, [X0 + 0x348]
	0x0356A310 BL 0x1C16D08
	0x0356A314 MOV X1, X0
	0x0356A318 LDR X8, [X19]
	0x0356A31C LDRH W9, [X8 + 0x12E]
	0x0356A320 CBZ X9, 0x356A344
	0x0356A324 LDR X10, [X8 + 0xB0]
	0x0356A328 ADD X10, X10, 0x8
	0x0356A32C LDUR X11, [X10 - 0x8]
	0x0356A330 CMP X11, X1
	0x0356A334 B.EQ 0x356A354
	0x0356A338 SUBS X9, X9, 0x1
	0x0356A33C ADD X10, X10, 0x10
	0x0356A340 B.NE 0x356A32C
	0x0356A344 MOVZ W2, 0x1
	0x0356A348 MOV X0, X19
	0x0356A34C BL 0x1C5C788
	0x0356A350 B 0x356A364
	0x0356A354 LDR W9, [X10]
	0x0356A358 ADD W9, W9, 0x1
	0x0356A35C ADD X8, X8, W9, 0x4, SXTW
	0x0356A360 ADD X0, X8, 0x138
	0x0356A364 LDP X8, X4, [X0]
	0x0356A368 MOVZ W1, 0x1
	0x0356A36C MOV X0, X19
	0x0356A370 MOV X2, X20
	0x0356A374 MOV X3, X21
	0x0356A378 BLR X8
	0x0356A37C B 0x3569F5C
	0x0356A380 MOVZ W0, 0x8
	0x0356A384 BL 0x3EB1AF0
	0x0356A388 LDR X8, [X19]
	0x0356A38C STR X8, [X0]
	0x0356A390 ADRP X1, 0x94A000
	0x0356A394 ADD X1, X1, 0xE58
	0x0356A398 MOV X2, X31
	0x0356A39C BL 0x3EB1B00
	0x0356A3A0 BL 0x1C16F20
	0x0356A3A4 B 0x356A3C8
	0x0356A3A8 B 0x356A3C8
	0x0356A3AC B 0x356A3C8
	0x0356A3B0 B 0x356A3C8
	0x0356A3B4 MOV X20, X1
	0x0356A3B8 MOV X19, X0
	0x0356A3BC BL 0x3EB1AE0
	0x0356A3C0 MOV W21, W20
	0x0356A3C4 B 0x356A3D0
	0x0356A3C8 MOV X19, X0
	0x0356A3CC MOV W21, W1
	0x0356A3D0 MOVZ W8, 0x1
	0x0356A3D4 CMP W21, W8
	0x0356A3D8 B.NE 0x356A3F8
	0x0356A3DC MOV X0, X19
	0x0356A3E0 BL 0x3EB1AD0
	0x0356A3E4 LDR X8, [X0]
	0x0356A3E8 STR X8, [X31 + 0x8]
	0x0356A3EC BL 0x3EB1AE0
	0x0356A3F0 B 0x3569F5C
	0x0356A3F4 MOV X19, X0
	0x0356A3F8 ADD X0, X31, 0x8
	0x0356A3FC BL 0x1BC0860
	0x0356A400 MOV X0, X19
	0x0356A404 BL 0x1D2C690
	0x0356A408 BL 0x1990590
	0x0356A40C STR X30, [X31 - 0x40]!
	0x0356A410 STP X24, X23, [X31 + 0x10]
	0x0356A414 STP X22, X21, [X31 + 0x20]
	0x0356A418 STP X20, X19, [X31 + 0x30]
	0x0356A41C ADRP X20, 0xE75000
	0x0356A420 LDRB W8, [X20 + 0xE00]
	0x0356A424 MOV X19, X0
	0x0356A428 TBNZ X8, 0x0, 0x356A464
	0x0356A42C ADRP X0, 0xB89000
	0x0356A430 LDR X0, [X0 + 0x9C8]
	0x0356A434 BL 0x1C16CF4
	0x0356A438 ADRP X0, 0xB8E000
	0x0356A43C LDR X0, [X0 + 0x348]
	0x0356A440 BL 0x1C16CF4
	0x0356A444 ADRP X0, 0xBCB000
	0x0356A448 LDR X0, [X0 + 0xDE8]
	0x0356A44C BL 0x1C16CF4
	0x0356A450 ADRP X0, 0xBCB000
	0x0356A454 LDR X0, [X0 + 0xDF0]
	0x0356A458 BL 0x1C16CF4
	0x0356A45C MOVZ W8, 0x1
	0x0356A460 STRB W8, [X20 + 0xE00]
	0x0356A464 STRB W31, [X31 + 0xC]
	0x0356A468 ADD X1, X31, 0xC
	0x0356A46C MOV X0, X19
	0x0356A470 MOV X2, X31
	0x0356A474 BL 0x33DE64C
	0x0356A478 LDRB W8, [X19 + 0x60]
	0x0356A47C CBNZ W8, 0x356A678
	0x0356A480 MOVZ W8, 0x1
	0x0356A484 STRB W8, [X19 + 0x60]
	0x0356A488 ADRP X24, 0xB89000
	0x0356A48C LDR X24, [X24 + 0x9C8]
	0x0356A490 LDR X20, [X19 + 0x78]
	0x0356A494 LDR X21, [X24]
	0x0356A498 LDR X8, [X21 + 0x38]
	0x0356A49C CBNZ X8, 0x356A4AC
	0x0356A4A0 MOV X0, X21
	0x0356A4A4 BL 0x1C5C6E0
	0x0356A4A8 LDR X8, [X21 + 0x38]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move [X31+8], W5
	015 Move X22, 0xE77000
	016 Move X29, 0xBCD000
	017 Move X26, 0xBCD000
	018 Move X28, 0xBB7000
	019 Move X27, 0xBCD000
	020 Move W8, [X22+3578]
	021 Move X29, [X29+3408]
	022 Move X26, [X26+3416]
	023 Move X28, [X28+384]
	024 Move X27, [X27+3424]
	025 Move W23, W6
	026 Move W24, W4
	027 Move W21, W3
	028 Move W25, W2
	029 Move X19, X1
	030 Move X20, X0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {70}
	035 Move X0, 0xBB7000
	036 Move X0, [X0+384]
	037 Call 0x1C17CF4
	038 Move X0, 0xB90000
	039 Move X0, [X0+840]
	040 Call 0x1C17CF4
	041 Move X0, 0xB8B000
	042 Move X0, [X0+1880]
	043 Call 0x1C17CF4
	044 Move X0, 0xB8B000
	045 Move X0, [X0+2512]
	046 Call 0x1C17CF4
	047 Move X0, 0xBCD000
	048 Move X0, [X0+3416]
	049 Call 0x1C17CF4
	050 Move X0, 0xBCD000
	051 Move X0, [X0+3408]
	052 Call 0x1C17CF4
	053 Move X0, 0xB8B000
	054 Move X0, [X0+2704]
	055 Call 0x1C17CF4
	056 Move X0, 0xBCD000
	057 Move X0, [X0+3424]
	058 Call 0x1C17CF4
	059 Move X0, 0xBCD000
	060 Move X0, [X0+3432]
	061 Call 0x1C17CF4
	062 Move X0, 0xBCD000
	063 Move X0, [X0+3440]
	064 Call 0x1C17CF4
	065 Move X0, 0xBCD000
	066 Move X0, [X0+3448]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X22+3578], W8
	070 Move X8, -44544000
	071 Move V0, [X8+2928]
	072 Move W8, 1
	073 Move [X20+21], W8
	074 Move [X20+25], W8
	075 Move [X20+28], D0
	076 Move X0, [X29]
	077 Call 0x1C17F10
	078 Move X1, [X26]
	079 Move X26, X0
	080 Call Queue`1<Object>..ctor, X0
	081 Move [X20+40], X26
	082 Move X0, [X28]
	083 Call 0x1C17F10
	084 Move W1, W31
	085 Move X2, X31
	086 Move X26, X0
	087 Call AutoResetEvent..ctor, X0, X1
	088 Move X0, X20
	089 Move X1, X31
	090 Move [X20+48], X26
	091 Call WebRTCAudioLib..ctor, X0
	092 Move X0, [X27]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {98}
	096 Call 0x1C17DFC
	097 Move X0, [X27]
	098 Move X8, [X0+184]
	099 Move X8, [X8]
	100 Compare X8, 0
	101 JumpIfEqual {424}
	102 Move W9, [X8+24]
	103 Move X28, 0xB8A000
	104 Move X27, 0xB8A000
	105 Move X26, 0xB8F000
	106 Move X28, [X28+2512]
	107 Move X27, [X27+1880]
	108 Move X26, [X26+840]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move W10, W31
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Add X11, X8, W10
	113 Move W11, [X11+32]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Add W10, W10, 1
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X0, [X28]
	118 Move W1, 1
	119 Call 0x1C17D6C
	120 Move X22, X0
	121 Move X0, [X27]
	122 Add X1, X31, 28
	123 Move [X31+28], W21
	124 Call 0x1C17E04
	125 Compare X22, 0
	126 JumpIfEqual {424}
	127 Move X21, X0
	128 Compare X0, 0
	129 JumpIfEqual {136}
	130 Move X8, [X22]
	131 Move X0, X21
	132 Move X1, [X8+64]
	133 Call 0x1C17E00
	134 Compare X0, 0
	135 JumpIfEqual {425}
	136 Move W8, [X22+24]
	137 Compare W8, 0
	138 JumpIfEqual {423}
	139 Move [X22+32], X21
	140 Compare X19, 0
	141 JumpIfEqual {424}
	142 Move X10, 0xBCC000
	143 Move X8, [X19]
	144 Move X10, [X10+3448]
	145 Move X1, [X26]
	146 NotImplemented "Instruction LDRH not yet implemented."
	147 Move X21, [X10]
	148 Compare X9, 0
	149 JumpIfEqual {257}
	150 Move X10, [X8+176]
	151 Add X10, X10, 8
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Subtract X9, X9, 1
	155 Add X10, X10, 16
	156 Add W8, W21, W21
	157 Move W9, 0x4DD3
	158 NotImplemented "Instruction MOVK not yet implemented."
	159 Move W8, W8
	160 ShiftRight W8, 31
	161 And W8, W8, 0x3FFFFFFF
	162 NotImplemented "Instruction SMADDL not yet implemented."
	163 Move X9, X8
	164 ShiftRight X9, 63
	165 And X9, X9, 0x7FFFFFFF
	166 NotImplemented "Instruction SBFM not yet implemented."
	167 Add W2, W8, W9
	168 NotImplemented "Instruction SDIV not yet implemented."
	169 NotImplemented "Instruction MSUB not yet implemented."
	170 Move [X20+120], X19
	171 Move [X20+68], W25
	172 Move [X20+72], W2
	173 Compare W8, 0
	174 JumpIfEqual {287}
	175 Move X0, [X28]
	176 Move W1, 3
	177 Call 0x1C17D6C
	178 Move X22, X0
	179 Move W8, [X20+68]
	180 Move X0, [X27]
	181 Add X1, X31, 28
	182 Move [X31+28], W8
	183 Call 0x1C17E04
	184 Compare X22, 0
	185 JumpIfEqual {424}
	186 Move X23, X0
	187 Compare X0, 0
	188 JumpIfEqual {195}
	189 Move X8, [X22]
	190 Move X0, X23
	191 Move X1, [X8+64]
	192 Call 0x1C17E00
	193 Compare X0, 0
	194 JumpIfEqual {425}
	195 Move W8, [X22+24]
	196 Compare W8, 0
	197 JumpIfEqual {423}
	198 Move [X22+32], X23
	199 Move X9, 0xB8A000
	200 Move V0, [X20+68]
	201 Move X9, [X9+2704]
	202 Move W8, 0x447A0000
	203 Move S1, W8
	204 NotImplemented "Instruction SCVTF not yet implemented."
	205 Move X0, [X9]
	206 Multiply S0, S0, S1
	207 NotImplemented "Instruction SCVTF not yet implemented."
	208 NotImplemented "Instruction FDIV not yet implemented."
	209 Add X1, X31, 24
	210 Move [X31+24], S0
	211 Call 0x1C17E04
	212 Move X21, X0
	213 Compare X0, 0
	214 JumpIfEqual {221}
	215 Move X8, [X22]
	216 Move X0, X21
	217 Move X1, [X8+64]
	218 Call 0x1C17E00
	219 Compare X0, 0
	220 JumpIfEqual {425}
	221 Move W8, [X22+24]
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Move [X22+40], X21
	224 Move W8, [X20+72]
	225 Move X0, [X27]
	226 Add X1, X31, 20
	227 Move [X31+20], W8
	228 Call 0x1C17E04
	229 Move X21, X0
	230 Compare X0, 0
	231 JumpIfEqual {238}
	232 Move X8, [X22]
	233 Move X0, X21
	234 Move X1, [X8+64]
	235 Call 0x1C17E00
	236 Compare X0, 0
	237 JumpIfEqual {425}
	238 Move W8, [X22+24]
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Move [X22+48], X21
	241 Compare X19, 0
	242 JumpIfEqual {424}
	243 Move X10, 0xBCC000
	244 Move X8, [X19]
	245 Move X1, [X26]
	246 Move X10, [X10+3432]
	247 NotImplemented "Instruction LDRH not yet implemented."
	248 Move X21, [X10]
	249 Compare X9, 0
	250 JumpIfEqual {257}
	251 Move X10, [X8+176]
	252 Add X10, X10, 8
	253 NotImplemented "Instruction LDUR not yet implemented."
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Subtract X9, X9, 1
	256 Add X10, X10, 16
	257 Move W2, 1
	258 Move X0, X19
	259 Call 0x1C5D788
	260 Move W9, [X10]
	261 Add W9, W9, 1
	262 Add X8, X8, W9
	263 Add X0, X8, 312
	264 Move X8, [X0]
	265 Move X4, [X0+8]
	266 Move W1, 1
	267 Move X0, X19
	268 Move X2, X21
	269 Move X3, X22
	270 Move W23, 1
	271 NotImplemented "Instruction BLR not yet implemented."
	272 Move [X20+96], W23
	273 Move X20, [X31+112]
	274 Move X19, [X31+120]
	275 Move X22, [X31+96]
	276 Move X21, [X31+104]
	277 Move X24, [X31+80]
	278 Move X23, [X31+88]
	279 Move X26, [X31+64]
	280 Move X25, [X31+72]
	281 Move X28, [X31+48]
	282 Move X27, [X31+56]
	283 Move X29, [X31+32]
	284 Move X30, [X31+40]
	285 Add X31, X31, 128
	286 Return 
	287 Move W8, [X31+8]
	288 Move W0, W21
	289 Move W1, W24
	290 Move W3, W21
	291 Move W4, W23
	292 Move X5, X31
	293 Move [X20+76], W21
	294 Move [X20+80], W24
	295 Move [X20+112], W8
	296 Move [X20+116], W23
	297 Call WebRTCAudioLib.webrtc_audio_processor_create, X0, X1, X2, X3, X4
	298 Move X1, X31
	299 Move [X20+88], X0
	300 Call WebRTCAudioLib.webrtc_audio_processor_init, X0
	301 Move X0, [X28]
	302 Move W1, 5
	303 Call 0x1C17D6C
	304 Move X23, X0
	305 Move X0, [X27]
	306 Add X1, X31, 28
	307 Move [X31+28], W21
	308 Call 0x1C17E04
	309 Compare X23, 0
	310 JumpIfEqual {424}
	311 Move X21, X0
	312 Compare X0, 0
	313 JumpIfEqual {320}
	314 Move X8, [X23]
	315 Move X0, X21
	316 Move X1, [X8+64]
	317 Call 0x1C17E00
	318 Compare X0, 0
	319 JumpIfEqual {425}
	320 Move W8, [X23+24]
	321 Compare W8, 0
	322 JumpIfEqual {423}
	323 Move [X23+32], X21
	324 Move X0, [X27]
	325 Add X1, X31, 24
	326 Move [X31+24], W24
	327 Call 0x1C17E04
	328 Move X21, X0
	329 Compare X0, 0
	330 JumpIfEqual {337}
	331 Move X8, [X23]
	332 Move X0, X21
	333 Move X1, [X8+64]
	334 Call 0x1C17E00
	335 Compare X0, 0
	336 JumpIfEqual {425}
	337 Move W8, [X23+24]
	338 NotImplemented "Instruction CMP not yet implemented."
	339 Move [X23+40], X21
	340 Move W8, [X20+72]
	341 Move X0, [X27]
	342 Add X1, X31, 20
	343 Move [X31+20], W8
	344 Call 0x1C17E04
	345 Move X21, X0
	346 Compare X0, 0
	347 JumpIfEqual {354}
	348 Move X8, [X23]
	349 Move X0, X21
	350 Move X1, [X8+64]
	351 Call 0x1C17E00
	352 Compare X0, 0
	353 JumpIfEqual {425}
	354 Move W8, [X23+24]
	355 NotImplemented "Instruction CMP not yet implemented."
	356 Move [X23+48], X21
	357 Move W8, [X20+68]
	358 Move W9, [X20+80]
	359 Move X0, [X27]
	360 Add X1, X31, 16
	361 NotImplemented "Instruction SDIV not yet implemented."
	362 Move [X31+16], W8
	363 Call 0x1C17E04
	364 Move X21, X0
	365 Compare X0, 0
	366 JumpIfEqual {373}
	367 Move X8, [X23]
	368 Move X0, X21
	369 Move X1, [X8+64]
	370 Call 0x1C17E00
	371 Compare X0, 0
	372 JumpIfEqual {425}
	373 Move W8, [X23+24]
	374 NotImplemented "Instruction CMP not yet implemented."
	375 Move [X23+56], X21
	376 Move W8, [X20+116]
	377 Move X0, [X27]
	378 Add X1, X31, 12
	379 Move [X31+12], W8
	380 Call 0x1C17E04
	381 Move X20, X0
	382 Compare X0, 0
	383 JumpIfEqual {390}
	384 Move X8, [X23]
	385 Move X0, X20
	386 Move X1, [X8+64]
	387 Call 0x1C17E00
	388 Compare X0, 0
	389 JumpIfEqual {425}
	390 Move W8, [X23+24]
	391 NotImplemented "Instruction CMP not yet implemented."
	392 Move [X23+64], X20
	393 Compare X19, 0
	394 JumpIfEqual {424}
	395 Move X10, 0xBCC000
	396 Move X8, [X19]
	397 Move X1, [X26]
	398 Move X10, [X10+3440]
	399 NotImplemented "Instruction LDRH not yet implemented."
	400 Move X20, [X10]
	401 Compare X9, 0
	402 JumpIfEqual {409}
	403 Move X10, [X8+176]
	404 Add X10, X10, 8
	405 NotImplemented "Instruction LDUR not yet implemented."
	406 NotImplemented "Instruction CMP not yet implemented."
	407 Subtract X9, X9, 1
	408 Add X10, X10, 16
	409 Move W2, 1
	410 Move X0, X19
	411 Call 0x1C5D788
	412 Move W9, [X10]
	413 Add W9, W9, 1
	414 Add X8, X8, W9
	415 Add X0, X8, 312
	416 Move X8, [X0]
	417 Move X4, [X0+8]
	418 Move W1, 3
	419 Move X0, X19
	420 Move X2, X20
	421 Move X3, X23
	422 NotImplemented "Instruction BLR not yet implemented."
	423 Call 0x1C17F28
	424 Call 0x1C17F20
	425 Call 0x1C17F44
	426 Move X1, X31
	427 Call 0x1C17DEC

Method: System.Void InitReverseStream()

Disassembly:
	0x03569120 LDR X0, [X27]
	0x03569124 ADD X1, X31, 0x1C
	0x03569128 STR W8, [X31 + 0x1C]
	0x0356912C BL 0x1C16E04
	0x03569130 CBZ X22, 0x356949C
	0x03569134 MOV X23, X0
	0x03569138 CBZ X0, 0x3569150
	0x0356913C LDR X8, [X22]
	0x03569140 MOV X0, X23
	0x03569144 LDR X1, [X8 + 0x40]
	0x03569148 BL 0x1C16E00
	0x0356914C CBZ X0, 0x35694A0
	0x03569150 LDR W8, [X22 + 0x18]
	0x03569154 CBZ W8, 0x3569498
	0x03569158 STR X23, [X22 + 0x20]
	0x0356915C ADRP X9, 0xB8A000
	0x03569160 LDR V0, [X20 + 0x44]
	0x03569164 LDR X9, [X9 + 0xA90]
	0x03569168 MOVZ W8, 0x447A0000
	0x0356916C FMOV S1, W8
	0x03569170 SCVTF S0, S0
	0x03569174 LDR X0, [X9]
	0x03569178 FMUL S0, S0, S1
	0x0356917C SCVTF S1, W21
	0x03569180 FDIV S0, S0, S1
	0x03569184 ADD X1, X31, 0x18
	0x03569188 STR S0, [X31 + 0x18]
	0x0356918C BL 0x1C16E04
	0x03569190 MOV X21, X0
	0x03569194 CBZ X0, 0x35691AC
	0x03569198 LDR X8, [X22]
	0x0356919C MOV X0, X21
	0x035691A0 LDR X1, [X8 + 0x40]
	0x035691A4 BL 0x1C16E00
	0x035691A8 CBZ X0, 0x35694A0
	0x035691AC LDR W8, [X22 + 0x18]
	0x035691B0 CMP W8, 0x1
	0x035691B4 B.LS 0x3569498
	0x035691B8 STR X21, [X22 + 0x28]
	0x035691BC LDR W8, [X20 + 0x48]
	0x035691C0 LDR X0, [X27]
	0x035691C4 ADD X1, X31, 0x14
	0x035691C8 STR W8, [X31 + 0x14]
	0x035691CC BL 0x1C16E04
	0x035691D0 MOV X21, X0
	0x035691D4 CBZ X0, 0x35691EC
	0x035691D8 LDR X8, [X22]
	0x035691DC MOV X0, X21
	0x035691E0 LDR X1, [X8 + 0x40]
	0x035691E4 BL 0x1C16E00
	0x035691E8 CBZ X0, 0x35694A0
	0x035691EC LDR W8, [X22 + 0x18]
	0x035691F0 CMP W8, 0x2
	0x035691F4 B.LS 0x3569498
	0x035691F8 STR X21, [X22 + 0x30]
	0x035691FC CBZ X19, 0x356949C
	0x03569200 ADRP X10, 0xBCC000
	0x03569204 LDR X8, [X19]
	0x03569208 LDR X1, [X26]
	0x0356920C LDR X10, [X10 + 0xD68]
	0x03569210 LDRH W9, [X8 + 0x12E]
	0x03569214 LDR X21, [X10]
	0x03569218 CBZ X9, 0x356923C
	0x0356921C LDR X10, [X8 + 0xB0]
	0x03569220 ADD X10, X10, 0x8
	0x03569224 LDUR X11, [X10 - 0x8]
	0x03569228 CMP X11, X1
	0x0356922C B.EQ 0x356924C
	0x03569230 SUBS X9, X9, 0x1
	0x03569234 ADD X10, X10, 0x10
	0x03569238 B.NE 0x3569224
	0x0356923C MOVZ W2, 0x1
	0x03569240 MOV X0, X19
	0x03569244 BL 0x1C5C788
	0x03569248 B 0x356925C
	0x0356924C LDR W9, [X10]
	0x03569250 ADD W9, W9, 0x1
	0x03569254 ADD X8, X8, W9, 0x4, SXTW
	0x03569258 ADD X0, X8, 0x138
	0x0356925C LDP X8, X4, [X0]
	0x03569260 MOVZ W1, 0x1
	0x03569264 MOV X0, X19
	0x03569268 MOV X2, X21
	0x0356926C MOV X3, X22
	0x03569270 MOVZ W23, 0x1
	0x03569274 BLR X8
	0x03569278 STRB W23, [X20 + 0x60]
	0x0356927C LDP X20, X19, [X31 + 0x70]
	0x03569280 LDP X22, X21, [X31 + 0x60]
	0x03569284 LDP X24, X23, [X31 + 0x50]
	0x03569288 LDP X26, X25, [X31 + 0x40]
	0x0356928C LDP X28, X27, [X31 + 0x30]
	0x03569290 LDP X29, X30, [X31 + 0x20]
	0x03569294 ADD X31, X31, 0x80
	0x03569298 RET
	0x0356929C LDR W8, [X31 + 0x8]
	0x035692A0 MOV W0, W21
	0x035692A4 MOV W1, W24
	0x035692A8 MOV W3, W21
	0x035692AC MOV W4, W23
	0x035692B0 MOV X5, X31
	0x035692B4 STP W21, W24, [X20 + 0x4C]
	0x035692B8 STP W8, W23, [X20 + 0x70]
	0x035692BC BL 0x356A7C4
	0x035692C0 MOV X1, X31
	0x035692C4 STR X0, [X20 + 0x58]
	0x035692C8 BL 0x356A870
	0x035692CC LDR X0, [X28]
	0x035692D0 MOVZ W1, 0x5
	0x035692D4 BL 0x1C16D6C
	0x035692D8 MOV X23, X0
	0x035692DC LDR X0, [X27]
	0x035692E0 ADD X1, X31, 0x1C
	0x035692E4 STR W21, [X31 + 0x1C]
	0x035692E8 BL 0x1C16E04
	0x035692EC CBZ X23, 0x356949C
	0x035692F0 MOV X21, X0
	0x035692F4 CBZ X0, 0x356930C
	0x035692F8 LDR X8, [X23]
	0x035692FC MOV X0, X21
	0x03569300 LDR X1, [X8 + 0x40]
	0x03569304 BL 0x1C16E00
	0x03569308 CBZ X0, 0x35694A0
	0x0356930C LDR W8, [X23 + 0x18]
	0x03569310 CBZ W8, 0x3569498
	0x03569314 STR X21, [X23 + 0x20]
	0x03569318 LDR X0, [X27]
	0x0356931C ADD X1, X31, 0x18
	0x03569320 STR W24, [X31 + 0x18]
	0x03569324 BL 0x1C16E04
	0x03569328 MOV X21, X0
	0x0356932C CBZ X0, 0x3569344
	0x03569330 LDR X8, [X23]
	0x03569334 MOV X0, X21
	0x03569338 LDR X1, [X8 + 0x40]
	0x0356933C BL 0x1C16E00
	0x03569340 CBZ X0, 0x35694A0
	0x03569344 LDR W8, [X23 + 0x18]
	0x03569348 CMP W8, 0x1
	0x0356934C B.LS 0x3569498
	0x03569350 STR X21, [X23 + 0x28]
	0x03569354 LDR W8, [X20 + 0x48]
	0x03569358 LDR X0, [X27]
	0x0356935C ADD X1, X31, 0x14
	0x03569360 STR W8, [X31 + 0x14]
	0x03569364 BL 0x1C16E04
	0x03569368 MOV X21, X0
	0x0356936C CBZ X0, 0x3569384
	0x03569370 LDR X8, [X23]
	0x03569374 MOV X0, X21
	0x03569378 LDR X1, [X8 + 0x40]
	0x0356937C BL 0x1C16E00
	0x03569380 CBZ X0, 0x35694A0
	0x03569384 LDR W8, [X23 + 0x18]
	0x03569388 CMP W8, 0x2
	0x0356938C B.LS 0x3569498
	0x03569390 STR X21, [X23 + 0x30]
	0x03569394 LDR W8, [X20 + 0x44]
	0x03569398 LDR W9, [X20 + 0x50]
	0x0356939C LDR X0, [X27]
	0x035693A0 ADD X1, X31, 0x10
	0x035693A4 SDIV W8, W8, W9
	0x035693A8 STR W8, [X31 + 0x10]
	0x035693AC BL 0x1C16E04
	0x035693B0 MOV X21, X0
	0x035693B4 CBZ X0, 0x35693CC
	0x035693B8 LDR X8, [X23]
	0x035693BC MOV X0, X21
	0x035693C0 LDR X1, [X8 + 0x40]
	0x035693C4 BL 0x1C16E00
	0x035693C8 CBZ X0, 0x35694A0
	0x035693CC LDR W8, [X23 + 0x18]
	0x035693D0 CMP W8, 0x3
	0x035693D4 B.LS 0x3569498
	0x035693D8 STR X21, [X23 + 0x38]
	0x035693DC LDR W8, [X20 + 0x74]
	0x035693E0 LDR X0, [X27]
	0x035693E4 ADD X1, X31, 0xC
	0x035693E8 STR W8, [X31 + 0xC]
	0x035693EC BL 0x1C16E04
	0x035693F0 MOV X20, X0
	0x035693F4 CBZ X0, 0x356940C
	0x035693F8 LDR X8, [X23]
	0x035693FC MOV X0, X20
	0x03569400 LDR X1, [X8 + 0x40]
	0x03569404 BL 0x1C16E00
	0x03569408 CBZ X0, 0x35694A0
	0x0356940C LDR W8, [X23 + 0x18]
	0x03569410 CMP W8, 0x4
	0x03569414 B.LS 0x3569498
	0x03569418 STR X20, [X23 + 0x40]
	0x0356941C CBZ X19, 0x356949C
	0x03569420 ADRP X10, 0xBCC000
	0x03569424 LDR X8, [X19]
	0x03569428 LDR X1, [X26]
	0x0356942C LDR X10, [X10 + 0xD70]
	0x03569430 LDRH W9, [X8 + 0x12E]
	0x03569434 LDR X20, [X10]
	0x03569438 CBZ X9, 0x356945C
	0x0356943C LDR X10, [X8 + 0xB0]
	0x03569440 ADD X10, X10, 0x8
	0x03569444 LDUR X11, [X10 - 0x8]
	0x03569448 CMP X11, X1
	0x0356944C B.EQ 0x356946C
	0x03569450 SUBS X9, X9, 0x1
	0x03569454 ADD X10, X10, 0x10
	0x03569458 B.NE 0x3569444
	0x0356945C MOVZ W2, 0x1
	0x03569460 MOV X0, X19
	0x03569464 BL 0x1C5C788
	0x03569468 B 0x356947C
	0x0356946C LDR W9, [X10]
	0x03569470 ADD W9, W9, 0x1
	0x03569474 ADD X8, X8, W9, 0x4, SXTW
	0x03569478 ADD X0, X8, 0x138
	0x0356947C LDP X8, X4, [X0]
	0x03569480 MOVZ W1, 0x3
	0x03569484 MOV X0, X19
	0x03569488 MOV X2, X20
	0x0356948C MOV X3, X23
	0x03569490 BLR X8
	0x03569494 B 0x356927C
	0x03569498 BL 0x1C16F28
	0x0356949C BL 0x1C16F20
	0x035694A0 BL 0x1C16F44
	0x035694A4 MOV X1, X31
	0x035694A8 BL 0x1C16DEC
	0x035694AC SUB X31, X31, 0x40
	0x035694B0 STP X30, X23, [X31 + 0x10]
	0x035694B4 STP X22, X21, [X31 + 0x20]
	0x035694B8 STP X20, X19, [X31 + 0x30]
	0x035694BC ADRP X20, 0xE76000
	0x035694C0 LDRB W8, [X20 + 0xDFC]
	0x035694C4 MOV X19, X1
	0x035694C8 MOV X22, X0
	0x035694CC TBNZ X8, 0x0, 0x3569514
	0x035694D0 ADRP X0, 0xB8F000
	0x035694D4 LDR X0, [X0 + 0x348]
	0x035694D8 BL 0x1C16CF4
	0x035694DC ADRP X0, 0xB8A000
	0x035694E0 LDR X0, [X0 + 0x758]
	0x035694E4 BL 0x1C16CF4
	0x035694E8 ADRP X0, 0xB8A000
	0x035694EC LDR X0, [X0 + 0x9D0]
	0x035694F0 BL 0x1C16CF4
	0x035694F4 ADRP X0, 0xBCC000
	0x035694F8 LDR X0, [X0 + 0xD80]
	0x035694FC BL 0x1C16CF4
	0x03569500 ADRP X0, 0xBCC000
	0x03569504 LDR X0, [X0 + 0xD88]
	0x03569508 BL 0x1C16CF4
	0x0356950C MOVZ W8, 0x1
	0x03569510 STRB W8, [X20 + 0xDFC]
	0x03569514 STRB W31, [X31 + 0xC]
	0x03569518 LDRB W8, [X22 + 0x40]
	0x0356951C CBNZ W8, 0x35697A0
	0x03569520 LDRB W8, [X22 + 0x60]
	0x03569524 CBNZ W8, 0x35697A0
	0x03569528 LDR X0, [X22 + 0x58]
	0x0356952C MOV X1, X31
	0x03569530 MOV X2, X31
	0x03569534 BL 0x33BE5B0
	0x03569538 TBNZ X0, 0x0, 0x35697A0
	0x0356953C CBZ X19, 0x35697B8
	0x03569540 LDR W8, [X22 + 0x44]
	0x03569544 LDR W9, [X19 + 0x18]
	0x03569548 CMP W8, W9
	0x0356954C B.NE 0x35695A8
	0x03569550 CMP W8, 0x1
	0x03569554 B.LT 0x3569698
	0x03569558 MOV W21, W31
	0x0356955C MOV W20, W31
	0x03569560 LDR X0, [X22 + 0x58]
	0x03569564 ADD X3, X31, 0xC
	0x03569568 MOV X1, X19
	0x0356956C MOV W2, W20
	0x03569570 MOV X4, X31
	0x03569574 BL 0x356A980
	0x03569578 LDR W8, [X22 + 0x84]
	0x0356957C CMP W8, W0
	0x03569580 B.NE 0x35696B8
	0x03569584 LDRB W8, [X31 + 0xC]
	0x03569588 LDP W10, W9, [X22 + 0x44]
	0x0356958C CMP W8, 0x0
	0x03569590 ADD W20, W9, W20
	0x03569594 CSET W8, NE
	0x03569598 CMP W20, W10
	0x0356959C ORR W21, W21, W8, 0x0
	0x035695A0 B.LT 0x3569560
	0x035695A4 B 0x356969C
	0x035695A8 ADRP X8, 0xB8A000
	0x035695AC LDR X20, [X22 + 0x78]
	0x035695B0 LDR X8, [X8 + 0x9D0]
	0x035695B4 MOVZ W1, 0x2
	0x035695B8 LDR X0, [X8]
	0x035695BC BL 0x1C16D6C
	0x035695C0 ADRP X23, 0xB8A000
	0x035695C4 LDR W8, [X22 + 0x44]
	0x035695C8 LDR X23, [X23 + 0x758]
	0x035695CC MOV X21, X0
	0x035695D0 ADD X1, X31, 0x8
	0x035695D4 STR W8, [X31 + 0x8]
	0x035695D8 LDR X0, [X23]
	0x035695DC BL 0x1C16E04
	0x035695E0 CBZ X21, 0x35697B8
	0x035695E4 MOV X22, X0
	0x035695E8 CBZ X0, 0x3569600
	0x035695EC LDR X8, [X21]
	0x035695F0 MOV X0, X22
	0x035695F4 LDR X1, [X8 + 0x40]
	0x035695F8 BL 0x1C16E00
	0x035695FC CBZ X0, 0x35697C0
	0x03569600 LDR W8, [X21 + 0x18]
	0x03569604 CBZ W8, 0x35697BC
	0x03569608 STR X22, [X21 + 0x20]
	0x0356960C LDR X8, [X19 + 0x18]
	0x03569610 LDR X0, [X23]
	0x03569614 ADD X1, X31, 0x4
	0x03569618 STR W8, [X31 + 0x4]
	0x0356961C BL 0x1C16E04
	0x03569620 MOV X22, X0
	0x03569624 CBZ X0, 0x356963C
	0x03569628 LDR X8, [X21]
	0x0356962C MOV X0, X22
	0x03569630 LDR X1, [X8 + 0x40]
	0x03569634 BL 0x1C16E00
	0x03569638 CBZ X0, 0x35697C0
	0x0356963C LDR W8, [X21 + 0x18]
	0x03569640 CMP W8, 0x1
	0x03569644 B.LS 0x35697BC
	0x03569648 STR X22, [X21 + 0x28]
	0x0356964C CBZ X20, 0x35697B8
	0x03569650 ADRP X9, 0xB8F000
	0x03569654 LDR X8, [X20]
	0x03569658 LDR X9, [X9 + 0x348]
	0x0356965C ADRP X10, 0xBCC000
	0x03569660 LDR X1, [X9]
	0x03569664 LDR X10, [X10 + 0xD88]
	0x03569668 LDRH W9, [X8 + 0x12E]
	0x0356966C LDR X22, [X10]
	0x03569670 CBZ X9, 0x3569768
	0x03569674 LDR X10, [X8 + 0xB0]
	0x03569678 ADD X10, X10, 0x8
	0x0356967C LDUR X11, [X10 - 0x8]
	0x03569680 CMP X11, X1
	0x03569684 B.EQ 0x3569778
	0x03569688 SUBS X9, X9, 0x1
	0x0356968C ADD X10, X10, 0x10
	0x03569690 B.NE 0x356967C
	0x03569694 B 0x3569768
	0x03569698 MOV W21, W31
	0x0356969C LDRB W8, [X22 + 0x25]
	0x035696A0 CMP W8, 0x0
	0x035696A4 CSET W8, EQ
	0x035696A8 ORR W8, W21, W8, 0x0
	0x035696AC ANDS W31, W8, 0x1
	0x035696B0 CSEL X19, X19, X31, NE
	0x035696B4 B 0x35697A0
	0x035696B8 STR W0, [X22 + 0x84]
	0x035696BC ADRP X8, 0xB8A000
	0x035696C0 LDR X20, [X22 + 0x78]
	0x035696C4 LDR X8, [X8 + 0x9D0]
	0x035696C8 MOV W23, W0
	0x035696CC MOVZ W1, 0x1
	0x035696D0 LDR X0, [X8]
	0x035696D4 BL 0x1C16D6C
	0x035696D8 ADRP X8, 0xB8A000
	0x035696DC LDR X8, [X8 + 0x758]
	0x035696E0 MOV X21, X0
	0x035696E4 ADD X1, X31, 0x0
	0x035696E8 STR W23, [X31]
	0x035696EC LDR X0, [X8]
	0x035696F0 BL 0x1C16E04
	0x035696F4 CBZ X21, 0x35697B8
	0x035696F8 MOV X22, X0
	0x035696FC CBZ X0, 0x3569714
	0x03569700 LDR X8, [X21]
	0x03569704 MOV X0, X22
	0x03569708 LDR X1, [X8 + 0x40]
	0x0356970C BL 0x1C16E00
	0x03569710 CBZ X0, 0x35697C0
	0x03569714 LDR W8, [X21 + 0x18]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xE77000
	011 Move W8, [X20+3579]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {67}
	017 Move X0, 0xBCD000
	018 Move X0, [X0+3296]
	019 Call 0x1C17CF4
	020 Move X0, 0xBCD000
	021 Move X0, [X0+3304]
	022 Call 0x1C17CF4
	023 Move X0, 0xBCD000
	024 Move X0, [X0+3312]
	025 Call 0x1C17CF4
	026 Move X0, 0xBCD000
	027 Move X0, [X0+3320]
	028 Call 0x1C17CF4
	029 Move X0, 0xBCD000
	030 Move X0, [X0+3328]
	031 Call 0x1C17CF4
	032 Move X0, 0xBCD000
	033 Move X0, [X0+3336]
	034 Call 0x1C17CF4
	035 Move X0, 0xB90000
	036 Move X0, [X0+840]
	037 Call 0x1C17CF4
	038 Move X0, 0xB8B000
	039 Move X0, [X0+1880]
	040 Call 0x1C17CF4
	041 Move X0, 0xB8B000
	042 Move X0, [X0+2512]
	043 Call 0x1C17CF4
	044 Move X0, 0xBB7000
	045 Move X0, [X0+464]
	046 Call 0x1C17CF4
	047 Move X0, 0xBB7000
	048 Move X0, [X0+472]
	049 Call 0x1C17CF4
	050 Move X0, 0xBCD000
	051 Move X0, [X0+3344]
	052 Call 0x1C17CF4
	053 Move X0, 0xBCD000
	054 Move X0, [X0+3352]
	055 Call 0x1C17CF4
	056 Move X0, 0xBCD000
	057 Move X0, [X0+3360]
	058 Call 0x1C17CF4
	059 Move X0, 0xBCD000
	060 Move X0, [X0+3368]
	061 Call 0x1C17CF4
	062 Move X0, 0xBCD000
	063 Move X0, [X0+3376]
	064 Call 0x1C17CF4
	065 Move W8, 1
	066 Move [X20+3579], W8
	067 Move [X31+12], W31
	068 Add X1, X31, 12
	069 Move X0, X19
	070 Move X2, X31
	071 Call Monitor.Enter, X0, X1
	072 Move W8, [X19+128]
	073 Compare W8, 0
	074 JumpIfNotEqual {78}
	075 Move W8, [X19+96]
	076 Compare W8, 0
	077 JumpIfEqual {97}
	078 Move X21, X31
	079 Move W8, [X31+12]
	080 Compare W8, 0
	081 JumpIfEqual {85}
	082 Move X0, X19
	083 Move X1, X31
	084 Call Monitor.Exit, X0
	085 Compare X21, 0
	086 JumpIfNotEqual {347}
	087 Move X20, [X31+64]
	088 Move X19, [X31+72]
	089 Move X22, [X31+48]
	090 Move X21, [X31+56]
	091 Move X24, [X31+32]
	092 Move X23, [X31+40]
	093 Move X30, [X31+16]
	094 Move X25, [X31+24]
	095 Add X31, X31, 80
	096 Return 
	097 Move W8, [X19+72]
	098 Move W21, [X19+76]
	099 Move W23, [X19+112]
	100 Move W24, [X19+116]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Multiply W22, W24, W8
	103 Move X8, 0xBCD000
	104 Move X8, [X8+3336]
	105 Move X0, [X8]
	106 Call 0x1C17F10
	107 Move X8, 0xBCD000
	108 Move X8, [X8+3328]
	109 Move X20, X0
	110 Move X2, [X8]
	111 Move W1, W22
	112 Call Framer`1<Single>..ctor, X0, X1
	113 Move X8, 0xBCD000
	114 Move X8, [X8+3320]
	115 Move X0, [X8]
	116 Call 0x1C17F10
	117 Move X8, 0xBCD000
	118 Move X8, [X8+3312]
	119 Move X20, X0
	120 Move X6, [X8]
	121 Move W5, 1
	122 Move W1, W22
	123 Move W2, W24
	124 Move W3, W21
	125 Move W4, W23
	126 Call FramerResampler`1<Single>..ctor, X0, X1, X2, X3, X4, X5
	127 Move [X19+104], X20
	128 Move X8, 0xBCD000
	129 Move X8, [X8+3304]
	130 Move X0, [X8]
	131 Call 0x1C17F10
	132 Move X8, 0xBCD000
	133 Move X9, 0xBCD000
	134 Move X8, [X8+3360]
	135 Move X9, [X9+3296]
	136 Move X20, X0
	137 Move X2, [X8]
	138 Move X4, [X9]
	139 Move W1, 50
	140 Move W3, W22
	141 Call 0x2D11C2C, X0, X1, X2, X3
	142 Move [X19+56], X20
	143 Move X24, 0xB8B000
	144 Move X20, [X19+120]
	145 Move X24, [X24+2512]
	146 Move X0, [X24]
	147 Move W1, 3
	148 Call 0x1C17D6C
	149 Move X23, 0xB8B000
	150 Move X23, [X23+1880]
	151 Move X21, X0
	152 Move [X31+8], W22
	153 Move X0, [X23]
	154 Add X1, X31, 8
	155 Call 0x1C17E04
	156 Compare X21, 0
	157 JumpIfEqual {349}
	158 Move X22, X0
	159 Compare X0, 0
	160 JumpIfEqual {167}
	161 Move X8, [X21]
	162 Move X1, [X8+64]
	163 Move X0, X22
	164 Call 0x1C17E00
	165 Compare X0, 0
	166 JumpIfEqual {354}
	167 Move W8, [X21+24]
	168 Compare W8, 0
	169 JumpIfEqual {350}
	170 Move [X21+32], X22
	171 Move W8, [X19+112]
	172 Move X0, [X23]
	173 Move [X31+4], W8
	174 Add X1, X31, 4
	175 Call 0x1C17E04
	176 Move X22, X0
	177 Compare X0, 0
	178 JumpIfEqual {185}
	179 Move X8, [X21]
	180 Move X1, [X8+64]
	181 Move X0, X22
	182 Call 0x1C17E00
	183 Compare X0, 0
	184 JumpIfEqual {357}
	185 Move W8, [X21+24]
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move [X21+40], X22
	188 Move W8, [X19+116]
	189 Move X0, [X23]
	190 Move [X31], W8
	191 Add X1, X31, 0
	192 Call 0x1C17E04
	193 Move X22, X0
	194 Compare X0, 0
	195 JumpIfEqual {202}
	196 Move X8, [X21]
	197 Move X1, [X8+64]
	198 Move X0, X22
	199 Call 0x1C17E00
	200 Compare X0, 0
	201 JumpIfEqual {360}
	202 Move W8, [X21+24]
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move [X21+48], X22
	205 Compare X20, 0
	206 JumpIfEqual {353}
	207 Move X25, 0xB90000
	208 Move X8, [X20]
	209 Move X25, [X25+840]
	210 Move X10, 0xBCD000
	211 Move X1, [X25]
	212 Move X10, [X10+3376]
	213 NotImplemented "Instruction LDRH not yet implemented."
	214 Move X22, [X10]
	215 Compare X9, 0
	216 JumpIfEqual {223}
	217 Move X10, [X8+176]
	218 Add X10, X10, 8
	219 NotImplemented "Instruction LDUR not yet implemented."
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Subtract X9, X9, 1
	222 Add X10, X10, 16
	223 Move W2, 1
	224 Move X0, X20
	225 Call 0x1C5D788
	226 Move W9, [X10]
	227 Add W9, W9, 1
	228 Add X8, X8, W9
	229 Add X0, X8, 312
	230 Move X8, [X0]
	231 Move X4, [X0+8]
	232 Move W1, 3
	233 Move X0, X20
	234 Move X2, X22
	235 Move X3, X21
	236 NotImplemented "Instruction BLR not yet implemented."
	237 Move W8, [X19+38]
	238 Compare W8, 0
	239 JumpIfNotEqual {269}
	240 Move X8, 0xBB7000
	241 Move X8, [X8+464]
	242 Move X0, [X8]
	243 Call 0x1C17F10
	244 Move X8, 0xBCD000
	245 Move X8, [X8+3344]
	246 Move X20, X0
	247 Move X2, [X8]
	248 Move X1, X19
	249 Move X3, X31
	250 Call ThreadStart..ctor, X0, X1, X2
	251 Move X8, 0xBB7000
	252 Move X8, [X8+472]
	253 Move X0, [X8]
	254 Call 0x1C17F10
	255 Move X21, X0
	256 Move X1, X20
	257 Move X2, X31
	258 Call Thread..ctor, X0, X1
	259 Compare X21, 0
	260 JumpIfEqual {367}
	261 Move X0, X21
	262 Move X1, X31
	263 Call Thread.Start, X0
	264 Move X8, 0xBCD000
	265 Move X8, [X8+3352]
	266 Move X1, [X8]
	267 Move X0, X21
	268 Call Util.SetThreadName, X0, X1
	269 Move W8, [X19+112]
	270 Move W9, [X19+76]
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Move X20, [X19+120]
	273 Move X0, [X24]
	274 Move W1, 2
	275 Call 0x1C17D6C
	276 Move X21, X0
	277 Move W8, [X19+112]
	278 Move X0, [X23]
	279 Move [X31+8], W8
	280 Add X1, X31, 8
	281 Call 0x1C17E04
	282 Compare X21, 0
	283 JumpIfEqual {363}
	284 Move X22, X0
	285 Compare X0, 0
	286 JumpIfEqual {293}
	287 Move X8, [X21]
	288 Move X1, [X8+64]
	289 Move X0, X22
	290 Call 0x1C17E00
	291 Compare X0, 0
	292 JumpIfEqual {368}
	293 Move W8, [X21+24]
	294 Compare W8, 0
	295 JumpIfEqual {364}
	296 Move [X21+32], X22
	297 Move W8, [X19+76]
	298 Move X0, [X23]
	299 Move [X31+4], W8
	300 Add X1, X31, 4
	301 Call 0x1C17E04
	302 Move X22, X0
	303 Compare X0, 0
	304 JumpIfEqual {311}
	305 Move X8, [X21]
	306 Move X1, [X8+64]
	307 Move X0, X22
	308 Call 0x1C17E00
	309 Compare X0, 0
	310 JumpIfEqual {371}
	311 Move W8, [X21+24]
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Move [X21+40], X22
	314 Compare X20, 0
	315 JumpIfEqual {366}
	316 Move X10, 0xBCD000
	317 Move X8, [X20]
	318 Move X1, [X25]
	319 Move X10, [X10+3368]
	320 NotImplemented "Instruction LDRH not yet implemented."
	321 Move X22, [X10]
	322 Compare X9, 0
	323 JumpIfEqual {330}
	324 Move X10, [X8+176]
	325 Add X10, X10, 8
	326 NotImplemented "Instruction LDUR not yet implemented."
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Subtract X9, X9, 1
	329 Add X10, X10, 16
	330 Move W2, 1
	331 Move X0, X20
	332 Call 0x1C5D788
	333 Move W9, [X10]
	334 Add W9, W9, 1
	335 Add X8, X8, W9
	336 Add X0, X8, 312
	337 Move X8, [X0]
	338 Move X4, [X0+8]
	339 Move W1, 2
	340 Move X0, X20
	341 Move X2, X22
	342 Move X3, X21
	343 NotImplemented "Instruction BLR not yet implemented."
	344 Move W8, 1
	345 Move X21, X31
	346 Move [X19+128], W8
	347 Move X0, X21
	348 Call 0x1C17F18
	349 Call 0x1C17F20
	350 Call 0x1C17F28
	351 Call 0x1C17F28
	352 Call 0x1C17F28
	353 Call 0x1C17F20
	354 Call 0x1C17F44
	355 Move X1, X31
	356 Call 0x1C17DEC
	357 Call 0x1C17F44
	358 Move X1, X31
	359 Call 0x1C17DEC
	360 Call 0x1C17F44
	361 Move X1, X31
	362 Call 0x1C17DEC
	363 Call 0x1C17F20
	364 Call 0x1C17F28
	365 Call 0x1C17F28
	366 Call 0x1C17F20
	367 Call 0x1C17F20
	368 Call 0x1C17F44
	369 Move X1, X31
	370 Call 0x1C17DEC
	371 Call 0x1C17F44
	372 Move X1, X31
	373 Call 0x1C17DEC
	374 Move X20, X0
	375 NotImplemented "Instruction CMP not yet implemented."
	376 Move X0, X20
	377 Call 0x3EB2AD0
	378 Move X21, [X0]
	379 Call 0x3EB2AE0
	380 Move X21, X31
	381 Move X20, X0
	382 Move W8, [X31+12]
	383 Compare W8, 0
	384 JumpIfEqual {388}
	385 Move X0, X19
	386 Move X1, X31
	387 Call Monitor.Exit, X0
	388 Compare X21, 0
	389 JumpIfNotEqual {392}
	390 Move X0, X20
	391 Call 0x1D2D690
	392 Move X0, X21
	393 Call 0x1C17F18
	394 Call 0x1991590

Method: System.Int16[] Process(System.Int16[] buf)

Disassembly:
	0x0356A4AC LDR X0, [X8 + 0x10]
	0x0356A4B0 LDRB W8, [X0 + 0x135]
	0x0356A4B4 TBNZ X8, 0x0, 0x356A4BC
	0x0356A4B8 BL 0x1C5C684
	0x0356A4BC LDR W8, [X0 + 0xE0]
	0x0356A4C0 CBNZ W8, 0x356A4C8
	0x0356A4C4 BL 0x1C16DFC
	0x0356A4C8 LDR X8, [X21 + 0x38]
	0x0356A4CC LDR X0, [X8 + 0x10]
	0x0356A4D0 LDRB W8, [X0 + 0x135]
	0x0356A4D4 TBNZ X8, 0x0, 0x356A4DC
	0x0356A4D8 BL 0x1C5C684
	0x0356A4DC CBZ X20, 0x356A6B0
	0x0356A4E0 ADRP X23, 0xB8E000
	0x0356A4E4 ADRP X10, 0xBCB000
	0x0356A4E8 LDR X9, [X0 + 0xB8]
	0x0356A4EC LDR X23, [X23 + 0x348]
	0x0356A4F0 LDR X8, [X20]
	0x0356A4F4 LDR X10, [X10 + 0xDF0]
	0x0356A4F8 LDR X21, [X9]
	0x0356A4FC LDR X1, [X23]
	0x0356A500 LDRH W9, [X8 + 0x12E]
	0x0356A504 LDR X22, [X10]
	0x0356A508 CBZ X9, 0x356A52C
	0x0356A50C LDR X10, [X8 + 0xB0]
	0x0356A510 ADD X10, X10, 0x8
	0x0356A514 LDUR X11, [X10 - 0x8]
	0x0356A518 CMP X11, X1
	0x0356A51C B.EQ 0x356A53C
	0x0356A520 SUBS X9, X9, 0x1
	0x0356A524 ADD X10, X10, 0x10
	0x0356A528 B.NE 0x356A514
	0x0356A52C MOVZ W2, 0x1
	0x0356A530 MOV X0, X20
	0x0356A534 BL 0x1C5C788
	0x0356A538 B 0x356A54C
	0x0356A53C LDR W9, [X10]
	0x0356A540 ADD W9, W9, 0x1
	0x0356A544 ADD X8, X8, W9, 0x4, SXTW
	0x0356A548 ADD X0, X8, 0x138
	0x0356A54C LDP X8, X4, [X0]
	0x0356A550 MOVZ W1, 0x3
	0x0356A554 MOV X0, X20
	0x0356A558 MOV X2, X22
	0x0356A55C MOV X3, X21
	0x0356A560 BLR X8
	0x0356A564 LDR X0, [X19 + 0x30]
	0x0356A568 CBZ X0, 0x356A6B4
	0x0356A56C MOV X1, X31
	0x0356A570 BL 0x33DE66C
	0x0356A574 LDR X0, [X19 + 0x58]
	0x0356A578 MOV X1, X31
	0x0356A57C MOV X2, X31
	0x0356A580 BL 0x33C5D2C
	0x0356A584 TBZ X0, 0x0, 0x356A678
	0x0356A588 LDRB W8, [X19 + 0x26]
	0x0356A58C CBZ W8, 0x356A5A0
	0x0356A590 MOVZ W0, 0x1
	0x0356A594 MOV X1, X31
	0x0356A598 BL 0x33E3BEC
	0x0356A59C B 0x356A588
	0x0356A5A0 LDR X0, [X19 + 0x58]
	0x0356A5A4 MOV X1, X31
	0x0356A5A8 BL 0x356AAD4
	0x0356A5AC LDR X21, [X24]
	0x0356A5B0 LDR X20, [X19 + 0x78]
	0x0356A5B4 LDR X8, [X21 + 0x38]
	0x0356A5B8 CBNZ X8, 0x356A5C8
	0x0356A5BC MOV X0, X21
	0x0356A5C0 BL 0x1C5C6E0
	0x0356A5C4 LDR X8, [X21 + 0x38]
	0x0356A5C8 LDR X0, [X8 + 0x10]
	0x0356A5CC LDRB W8, [X0 + 0x135]
	0x0356A5D0 TBNZ X8, 0x0, 0x356A5D8
	0x0356A5D4 BL 0x1C5C684
	0x0356A5D8 LDR W8, [X0 + 0xE0]
	0x0356A5DC CBNZ W8, 0x356A5E4
	0x0356A5E0 BL 0x1C16DFC
	0x0356A5E4 LDR X8, [X21 + 0x38]
	0x0356A5E8 LDR X0, [X8 + 0x10]
	0x0356A5EC LDRB W8, [X0 + 0x135]
	0x0356A5F0 TBNZ X8, 0x0, 0x356A5F8
	0x0356A5F4 BL 0x1C5C684
	0x0356A5F8 CBZ X20, 0x356A6B8
	0x0356A5FC ADRP X10, 0xBCB000
	0x0356A600 LDR X9, [X0 + 0xB8]
	0x0356A604 LDR X8, [X20]
	0x0356A608 LDR X1, [X23]
	0x0356A60C LDR X10, [X10 + 0xDE8]
	0x0356A610 LDR X21, [X9]
	0x0356A614 LDRH W9, [X8 + 0x12E]
	0x0356A618 LDR X22, [X10]
	0x0356A61C CBZ X9, 0x356A640
	0x0356A620 LDR X10, [X8 + 0xB0]
	0x0356A624 ADD X10, X10, 0x8
	0x0356A628 LDUR X11, [X10 - 0x8]
	0x0356A62C CMP X11, X1
	0x0356A630 B.EQ 0x356A650
	0x0356A634 SUBS X9, X9, 0x1
	0x0356A638 ADD X10, X10, 0x10
	0x0356A63C B.NE 0x356A628
	0x0356A640 MOVZ W2, 0x1
	0x0356A644 MOV X0, X20
	0x0356A648 BL 0x1C5C788
	0x0356A64C B 0x356A660
	0x0356A650 LDR W9, [X10]
	0x0356A654 ADD W9, W9, 0x1
	0x0356A658 ADD X8, X8, W9, 0x4, SXTW
	0x0356A65C ADD X0, X8, 0x138
	0x0356A660 LDP X8, X4, [X0]
	0x0356A664 MOVZ W1, 0x3
	0x0356A668 MOV X0, X20
	0x0356A66C MOV X2, X22
	0x0356A670 MOV X3, X21
	0x0356A674 BLR X8
	0x0356A678 MOV X21, X31
	0x0356A67C LDRB W8, [X31 + 0xC]
	0x0356A680 CBZ W8, 0x356A690
	0x0356A684 MOV X0, X19
	0x0356A688 MOV X1, X31
	0x0356A68C BL 0x33E14E4
	0x0356A690 CBNZ X21, 0x356A6A8
	0x0356A694 LDP X20, X19, [X31 + 0x30]
	0x0356A698 LDP X22, X21, [X31 + 0x20]
	0x0356A69C LDP X24, X23, [X31 + 0x10]
	0x0356A6A0 LDR X30, [X31], #0x40
	0x0356A6A4 RET
	0x0356A6A8 MOV X0, X21
	0x0356A6AC BL 0x1C16F18
	0x0356A6B0 BL 0x1C16F20
	0x0356A6B4 BL 0x1C16F20
	0x0356A6B8 BL 0x1C16F20
	0x0356A6BC B 0x356A6D8
	0x0356A6C0 B 0x356A6D8
	0x0356A6C4 B 0x356A6D8
	0x0356A6C8 B 0x356A6D8
	0x0356A6CC B 0x356A6D8
	0x0356A6D0 B 0x356A6D8
	0x0356A6D4 B 0x356A6D8
	0x0356A6D8 MOV X20, X0
	0x0356A6DC CMP W1, 0x1
	0x0356A6E0 B.NE 0x356A6F8
	0x0356A6E4 MOV X0, X20
	0x0356A6E8 BL 0x3EB1AD0
	0x0356A6EC LDR X21, [X0]
	0x0356A6F0 BL 0x3EB1AE0
	0x0356A6F4 B 0x356A67C
	0x0356A6F8 MOV X21, X31
	0x0356A6FC B 0x356A704
	0x0356A700 MOV X20, X0
	0x0356A704 LDRB W8, [X31 + 0xC]
	0x0356A708 CBZ W8, 0x356A718
	0x0356A70C MOV X0, X19
	0x0356A710 MOV X1, X31
	0x0356A714 BL 0x33E14E4
	0x0356A718 CBNZ X21, 0x356A724
	0x0356A71C MOV X0, X20
	0x0356A720 BL 0x1D2C690
	0x0356A724 MOV X0, X21
	0x0356A728 BL 0x1C16F18
	0x0356A72C BL 0x1990590
	0x0356A730 STR X30, [X31 - 0x30]!
	0x0356A734 STP X22, X21, [X31 + 0x10]
	0x0356A738 STP X20, X19, [X31 + 0x20]
	0x0356A73C ADRP X21, 0xE75000
	0x0356A740 ADRP X22, 0xB8A000
	0x0356A744 ADRP X19, 0xBCB000
	0x0356A748 ADRP X20, 0xBCB000
	0x0356A74C LDRB W8, [X21 + 0xE01]
	0x0356A750 LDR X22, [X22 + 0xE58]
	0x0356A754 LDR X19, [X19 + 0xDF8]
	0x0356A758 LDR X20, [X20 + 0xD60]
	0x0356A75C TBNZ X8, 0x0, 0x356A78C
	0x0356A760 ADRP X0, 0xB8A000
	0x0356A764 LDR X0, [X0 + 0xE58]
	0x0356A768 BL 0x1C16CF4
	0x0356A76C ADRP X0, 0xBCB000
	0x0356A770 LDR X0, [X0 + 0xDF8]
	0x0356A774 BL 0x1C16CF4
	0x0356A778 ADRP X0, 0xBCB000
	0x0356A77C LDR X0, [X0 + 0xD60]
	0x0356A780 BL 0x1C16CF4
	0x0356A784 MOVZ W8, 0x1
	0x0356A788 STRB W8, [X21 + 0xE01]
	0x0356A78C LDR X0, [X22]
	0x0356A790 MOVZ W1, 0x4
	0x0356A794 BL 0x1C16D6C
	0x0356A798 LDR X1, [X19]
	0x0356A79C MOV X2, X31
	0x0356A7A0 MOV X19, X0
	0x0356A7A4 BL 0x32C5BD8
	0x0356A7A8 LDR X8, [X20]
	0x0356A7AC LDP X22, X21, [X31 + 0x10]
	0x0356A7B0 LDR X8, [X8 + 0xB8]
	0x0356A7B4 STR X19, [X8]
	0x0356A7B8 LDP X20, X19, [X31 + 0x20]
	0x0356A7BC LDR X30, [X31], #0x30
	0x0356A7C0 RET
	0x0356A7C4 SUB X31, X31, 0x70
	0x0356A7C8 STR X30, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE76000
	009 Move W8, [X20+3580]
	010 Move X19, X1
	011 Move X22, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0xB8F000
	017 Move X0, [X0+840]
	018 Call 0x1C17CF4
	019 Move X0, 0xB8A000
	020 Move X0, [X0+1880]
	021 Call 0x1C17CF4
	022 Move X0, 0xB8A000
	023 Move X0, [X0+2512]
	024 Call 0x1C17CF4
	025 Move X0, 0xBCC000
	026 Move X0, [X0+3456]
	027 Call 0x1C17CF4
	028 Move X0, 0xBCC000
	029 Move X0, [X0+3464]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+3580], W8
	033 Move [X31+12], W31
	034 Move W8, [X22+64]
	035 Compare W8, 0
	036 JumpIfNotEqual {205}
	037 Move W8, [X22+96]
	038 Compare W8, 0
	039 JumpIfNotEqual {205}
	040 Move X0, [X22+88]
	041 Move X1, X31
	042 Move X2, X31
	043 Call IntPtr.op_Equality, X0, X1
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {205}
	048 Compare X19, 0
	049 JumpIfEqual {214}
	050 Move W8, [X22+68]
	051 Move W9, [X19+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W21, W31
	055 Move W20, W31
	056 Move X0, [X22+88]
	057 Add X3, X31, 12
	058 Move X1, X19
	059 Move W2, W20
	060 Move X4, X31
	061 Call WebRTCAudioLib.webrtc_audio_processor_process, X0, X1, X2, X3
	062 Move W8, [X22+132]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move W8, [X31+12]
	065 Move W10, [X22+68]
	066 Move W9, [X22+72]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Add W20, W9, W20
	069 NotImplemented "Instruction CSET not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Or W21, W21, W8
	072 Move X8, 0xB8A000
	073 Move X20, [X22+120]
	074 Move X8, [X8+2512]
	075 Move W1, 2
	076 Move X0, [X8]
	077 Call 0x1C17D6C
	078 Move X23, 0xB8A000
	079 Move W8, [X22+68]
	080 Move X23, [X23+1880]
	081 Move X21, X0
	082 Add X1, X31, 8
	083 Move [X31+8], W8
	084 Move X0, [X23]
	085 Call 0x1C17E04
	086 Compare X21, 0
	087 JumpIfEqual {214}
	088 Move X22, X0
	089 Compare X0, 0
	090 JumpIfEqual {97}
	091 Move X8, [X21]
	092 Move X0, X22
	093 Move X1, [X8+64]
	094 Call 0x1C17E00
	095 Compare X0, 0
	096 JumpIfEqual {216}
	097 Move W8, [X21+24]
	098 Compare W8, 0
	099 JumpIfEqual {215}
	100 Move [X21+32], X22
	101 Move X8, [X19+24]
	102 Move X0, [X23]
	103 Add X1, X31, 4
	104 Move [X31+4], W8
	105 Call 0x1C17E04
	106 Move X22, X0
	107 Compare X0, 0
	108 JumpIfEqual {115}
	109 Move X8, [X21]
	110 Move X0, X22
	111 Move X1, [X8+64]
	112 Call 0x1C17E00
	113 Compare X0, 0
	114 JumpIfEqual {216}
	115 Move W8, [X21+24]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move [X21+40], X22
	118 Compare X20, 0
	119 JumpIfEqual {214}
	120 Move X9, 0xB8F000
	121 Move X8, [X20]
	122 Move X9, [X9+840]
	123 Move X10, 0xBCC000
	124 Move X1, [X9]
	125 Move X10, [X10+3464]
	126 NotImplemented "Instruction LDRH not yet implemented."
	127 Move X22, [X10]
	128 Compare X9, 0
	129 JumpIfEqual {191}
	130 Move X10, [X8+176]
	131 Add X10, X10, 8
	132 NotImplemented "Instruction LDUR not yet implemented."
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Subtract X9, X9, 1
	135 Add X10, X10, 16
	136 Move W21, W31
	137 Move W8, [X22+37]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 NotImplemented "Instruction CSET not yet implemented."
	140 Or W8, W21, W8
	141 And W31, W8, 1
	142 NotImplemented "Instruction CSEL not yet implemented."
	143 Move [X22+132], W0
	144 Move X8, 0xB8A000
	145 Move X20, [X22+120]
	146 Move X8, [X8+2512]
	147 Move W23, W0
	148 Move W1, 1
	149 Move X0, [X8]
	150 Call 0x1C17D6C
	151 Move X8, 0xB8A000
	152 Move X8, [X8+1880]
	153 Move X21, X0
	154 Add X1, X31, 0
	155 Move [X31], W23
	156 Move X0, [X8]
	157 Call 0x1C17E04
	158 Compare X21, 0
	159 JumpIfEqual {214}
	160 Move X22, X0
	161 Compare X0, 0
	162 JumpIfEqual {169}
	163 Move X8, [X21]
	164 Move X0, X22
	165 Move X1, [X8+64]
	166 Call 0x1C17E00
	167 Compare X0, 0
	168 JumpIfEqual {216}
	169 Move W8, [X21+24]
	170 Compare W8, 0
	171 JumpIfEqual {215}
	172 Move [X21+32], X22
	173 Compare X20, 0
	174 JumpIfEqual {214}
	175 Move X9, 0xB8F000
	176 Move X8, [X20]
	177 Move X9, [X9+840]
	178 Move X10, 0xBCC000
	179 Move X1, [X9]
	180 Move X10, [X10+3456]
	181 NotImplemented "Instruction LDRH not yet implemented."
	182 Move X22, [X10]
	183 Compare X9, 0
	184 JumpIfEqual {191}
	185 Move X10, [X8+176]
	186 Add X10, X10, 8
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Subtract X9, X9, 1
	190 Add X10, X10, 16
	191 Move W2, 1
	192 Move X0, X20
	193 Call 0x1C5D788
	194 Move W9, [X10]
	195 Add W9, W9, 1
	196 Add X8, X8, W9
	197 Add X0, X8, 312
	198 Move X8, [X0]
	199 Move X4, [X0+8]
	200 Move W1, 1
	201 Move X0, X20
	202 Move X2, X22
	203 Move X3, X21
	204 NotImplemented "Instruction BLR not yet implemented."
	205 Move X0, X19
	206 Move X20, [X31+48]
	207 Move X19, [X31+56]
	208 Move X22, [X31+32]
	209 Move X21, [X31+40]
	210 Move X30, [X31+16]
	211 Move X23, [X31+24]
	212 Add X31, X31, 64
	213 Return X0
	214 Call 0x1C17F20
	215 Call 0x1C17F28
	216 Call 0x1C17F44
	217 Move X1, X31
	218 Call 0x1C17DEC

Method: System.Void OnAudioOutFrameFloat(System.Single[] data)

Disassembly:
	0x0356A7CC STP X24, X23, [X31 + 0x40]
	0x0356A7D0 STP X22, X21, [X31 + 0x50]
	0x0356A7D4 STP X20, X19, [X31 + 0x60]
	0x0356A7D8 ADRP X24, 0xE75000
	0x0356A7DC LDR X8, [X24 + 0xE08]
	0x0356A7E0 MOV W19, W4
	0x0356A7E4 MOV W20, W3
	0x0356A7E8 MOV W21, W2
	0x0356A7EC MOV W22, W1
	0x0356A7F0 MOV W23, W0
	0x0356A7F4 CBNZ X8, 0x356A840
	0x0356A7F8 ADRP X12, 0xFFFFFFFFFD583000
	0x0356A7FC LDR V0, [X12 + 0xEC0]
	0x0356A800 ADRP X8, 0xFFFFFFFFFD5AA000
	0x0356A804 ADRP X10, 0xFFFFFFFFFD5B0000
	0x0356A808 ADD X8, X8, 0x27
	0x0356A80C MOVZ W9, 0xC
	0x0356A810 ADD X10, X10, 0xA
	0x0356A814 MOVZ W11, 0x1D
	0x0356A818 MOVZ W13, 0x14
	0x0356A81C ADD X0, X31, 0x0
	0x0356A820 STP X8, X9, [X31]
	0x0356A824 STP X10, X11, [X31 + 0x10]
	0x0356A828 STR W13, [X31 + 0x28]
	0x0356A82C STR D0, [X31 + 0x20]
	0x0356A830 STRB W31, [X31 + 0x2C]
	0x0356A834 BL 0x1C1729C
	0x0356A838 MOV X8, X0
	0x0356A83C STR X0, [X24 + 0xE08]
	0x0356A840 MOV W0, W23
	0x0356A844 MOV W1, W22
	0x0356A848 MOV W2, W21
	0x0356A84C MOV W3, W20
	0x0356A850 MOV W4, W19
	0x0356A854 BLR X8
	0x0356A858 LDP X20, X19, [X31 + 0x60]
	0x0356A85C LDP X22, X21, [X31 + 0x50]
	0x0356A860 LDP X24, X23, [X31 + 0x40]
	0x0356A864 LDR X30, [X31 + 0x30]
	0x0356A868 ADD X31, X31, 0x70
	0x0356A86C RET
	0x0356A870 SUB X31, X31, 0x50
	0x0356A874 STR X30, [X31 + 0x30]
	0x0356A878 STP X20, X19, [X31 + 0x40]
	0x0356A87C ADRP X20, 0xE75000
	0x0356A880 LDR X8, [X20 + 0xE10]
	0x0356A884 MOV X19, X0
	0x0356A888 CBNZ X8, 0x356A8D4
	0x0356A88C ADRP X12, 0xFFFFFFFFFD583000
	0x0356A890 LDR V0, [X12 + 0xEC0]
	0x0356A894 ADRP X8, 0xFFFFFFFFFD5AA000
	0x0356A898 ADRP X10, 0xFFFFFFFFFD5A4000
	0x0356A89C ADD X8, X8, 0x27
	0x0356A8A0 MOVZ W9, 0xC
	0x0356A8A4 ADD X10, X10, 0x64A
	0x0356A8A8 MOVZ W11, 0x1B
	0x0356A8AC MOVZ W13, 0x8
	0x0356A8B0 ADD X0, X31, 0x0
	0x0356A8B4 STP X8, X9, [X31]
	0x0356A8B8 STP X10, X11, [X31 + 0x10]
	0x0356A8BC STR W13, [X31 + 0x28]
	0x0356A8C0 STR D0, [X31 + 0x20]
	0x0356A8C4 STRB W31, [X31 + 0x2C]
	0x0356A8C8 BL 0x1C1729C
	0x0356A8CC MOV X8, X0
	0x0356A8D0 STR X0, [X20 + 0xE10]
	0x0356A8D4 MOV X0, X19
	0x0356A8D8 BLR X8
	0x0356A8DC LDP X20, X19, [X31 + 0x40]
	0x0356A8E0 LDR X30, [X31 + 0x30]
	0x0356A8E4 ADD X31, X31, 0x50
	0x0356A8E8 RET
	0x0356A8EC SUB X31, X31, 0x60
	0x0356A8F0 STR X30, [X31 + 0x30]
	0x0356A8F4 STP X22, X21, [X31 + 0x40]
	0x0356A8F8 STP X20, X19, [X31 + 0x50]
	0x0356A8FC ADRP X22, 0xE75000
	0x0356A900 LDR X8, [X22 + 0xE18]
	0x0356A904 MOV W19, W2
	0x0356A908 MOV W20, W1
	0x0356A90C MOV X21, X0
	0x0356A910 CBNZ X8, 0x356A95C
	0x0356A914 ADRP X12, 0xFFFFFFFFFD583000
	0x0356A918 LDR V0, [X12 + 0xEC0]
	0x0356A91C ADRP X8, 0xFFFFFFFFFD5AA000
	0x0356A920 ADRP X10, 0xFFFFFFFFFD592000
	0x0356A924 ADD X8, X8, 0x27
	0x0356A928 MOVZ W9, 0xC
	0x0356A92C ADD X10, X10, 0x95A
	0x0356A930 MOVZ W11, 0x20
	0x0356A934 MOVZ W13, 0x10
	0x0356A938 ADD X0, X31, 0x0
	0x0356A93C STP X8, X9, [X31]
	0x0356A940 STP X10, X11, [X31 + 0x10]
	0x0356A944 STR W13, [X31 + 0x28]
	0x0356A948 STR D0, [X31 + 0x20]
	0x0356A94C STRB W31, [X31 + 0x2C]
	0x0356A950 BL 0x1C1729C
	0x0356A954 MOV X8, X0
	0x0356A958 STR X0, [X22 + 0xE18]
	0x0356A95C MOV X0, X21
	0x0356A960 MOV W1, W20
	0x0356A964 MOV W2, W19
	0x0356A968 BLR X8
	0x0356A96C LDP X20, X19, [X31 + 0x50]
	0x0356A970 LDP X22, X21, [X31 + 0x40]
	0x0356A974 LDR X30, [X31 + 0x30]
	0x0356A978 ADD X31, X31, 0x60
	0x0356A97C RET
	0x0356A980 SUB X31, X31, 0x60
	0x0356A984 STP X30, X23, [X31 + 0x30]
	0x0356A988 STP X22, X21, [X31 + 0x40]
	0x0356A98C STP X20, X19, [X31 + 0x50]
	0x0356A990 ADRP X23, 0xE75000
	0x0356A994 LDR X8, [X23 + 0xE20]
	0x0356A998 MOV X19, X3
	0x0356A99C MOV W20, W2
	0x0356A9A0 MOV X22, X1
	0x0356A9A4 MOV X21, X0
	0x0356A9A8 CBNZ X8, 0x356A9F4
	0x0356A9AC ADRP X12, 0xFFFFFFFFFD583000
	0x0356A9B0 LDR V0, [X12 + 0xEC0]
	0x0356A9B4 ADRP X8, 0xFFFFFFFFFD5AA000
	0x0356A9B8 ADRP X10, 0xFFFFFFFFFD5BD000
	0x0356A9BC ADD X8, X8, 0x27
	0x0356A9C0 MOVZ W9, 0xC
	0x0356A9C4 ADD X10, X10, 0xEDA
	0x0356A9C8 MOVZ W11, 0x1E
	0x0356A9CC MOVZ W13, 0x1C
	0x0356A9D0 ADD X0, X31, 0x0
	0x0356A9D4 STP X8, X9, [X31]
	0x0356A9D8 STP X10, X11, [X31 + 0x10]
	0x0356A9DC STR W13, [X31 + 0x28]
	0x0356A9E0 STR D0, [X31 + 0x20]
	0x0356A9E4 STRB W31, [X31 + 0x2C]
	0x0356A9E8 BL 0x1C1729C
	0x0356A9EC MOV X8, X0
	0x0356A9F0 STR X0, [X23 + 0xE20]
	0x0356A9F4 ADD X9, X22, 0x20
	0x0356A9F8 CMP X22, 0x0
	0x0356A9FC CSEL X1, X31, X9, EQ
	0x0356AA00 ADD X3, X31, 0x0
	0x0356AA04 MOV X0, X21
	0x0356AA08 MOV W2, W20
	0x0356AA0C STR W31, [X31]
	0x0356AA10 BLR X8
	0x0356AA14 LDR W8, [X31]
	0x0356AA18 LDP X22, X21, [X31 + 0x40]
	0x0356AA1C LDP X30, X23, [X31 + 0x30]
	0x0356AA20 CMP W8, 0x0
	0x0356AA24 CSET W8, NE
	0x0356AA28 STRB W8, [X19]
	0x0356AA2C LDP X20, X19, [X31 + 0x50]
	0x0356AA30 ADD X31, X31, 0x60
	0x0356AA34 RET
	0x0356AA38 SUB X31, X31, 0x60
	0x0356AA3C STR X30, [X31 + 0x30]
	0x0356AA40 STP X22, X21, [X31 + 0x40]
	0x0356AA44 STP X20, X19, [X31 + 0x50]
	0x0356AA48 ADRP X22, 0xE75000
	0x0356AA4C LDR X8, [X22 + 0xE28]
	0x0356AA50 MOV W19, W2
	0x0356AA54 MOV X21, X1
	0x0356AA58 MOV X20, X0
	0x0356AA5C CBNZ X8, 0x356AAA8
	0x0356AA60 ADRP X12, 0xFFFFFFFFFD583000
	0x0356AA64 LDR V0, [X12 + 0xEC0]
	0x0356AA68 ADRP X8, 0xFFFFFFFFFD5AA000
	0x0356AA6C ADRP X10, 0xFFFFFFFFFD59E000
	0x0356AA70 ADD X8, X8, 0x27
	0x0356AA74 MOVZ W9, 0xC
	0x0356AA78 ADD X10, X10, 0x764
	0x0356AA7C MOVZ W11, 0x26
	0x0356AA80 MOVZ W13, 0x14
	0x0356AA84 ADD X0, X31, 0x0
	0x0356AA88 STP X8, X9, [X31]
	0x0356AA8C STP X10, X11, [X31 + 0x10]
	0x0356AA90 STR W13, [X31 + 0x28]
	0x0356AA94 STR D0, [X31 + 0x20]
	0x0356AA98 STRB W31, [X31 + 0x2C]
	0x0356AA9C BL 0x1C1729C
	0x0356AAA0 MOV X8, X0
	0x0356AAA4 STR X0, [X22 + 0xE28]
	0x0356AAA8 ADD X9, X21, 0x20
	0x0356AAAC CMP X21, 0x0
	0x0356AAB0 CSEL X1, X31, X9, EQ
	0x0356AAB4 MOV X0, X20
	0x0356AAB8 MOV W2, W19
	0x0356AABC BLR X8
	0x0356AAC0 LDP X20, X19, [X31 + 0x50]
	0x0356AAC4 LDP X22, X21, [X31 + 0x40]
	0x0356AAC8 LDR X30, [X31 + 0x30]
	0x0356AACC ADD X31, X31, 0x60
	0x0356AAD0 RET
	0x0356AAD4 SUB X31, X31, 0x50
	0x0356AAD8 STR X30, [X31 + 0x30]
	0x0356AADC STP X20, X19, [X31 + 0x40]
	0x0356AAE0 ADRP X20, 0xE75000
	0x0356AAE4 LDR X8, [X20 + 0xE30]
	0x0356AAE8 MOV X19, X0
	0x0356AAEC CBNZ X8, 0x356AB38
	0x0356AAF0 ADRP X12, 0xFFFFFFFFFD583000
	0x0356AAF4 LDR V0, [X12 + 0xEC0]
	0x0356AAF8 ADRP X8, 0xFFFFFFFFFD5AA000
	0x0356AAFC ADRP X10, 0xFFFFFFFFFD5B2000
	0x0356AB00 ADD X8, X8, 0x27
	0x0356AB04 MOVZ W9, 0xC
	0x0356AB08 ADD X10, X10, 0x4CC
	0x0356AB0C MOVZ W11, 0x1E
	0x0356AB10 MOVZ W13, 0x8
	0x0356AB14 ADD X0, X31, 0x0
	0x0356AB18 STP X8, X9, [X31]
	0x0356AB1C STP X10, X11, [X31 + 0x10]
	0x0356AB20 STR W13, [X31 + 0x28]
	0x0356AB24 STR D0, [X31 + 0x20]
	0x0356AB28 STRB W31, [X31 + 0x2C]
	0x0356AB2C BL 0x1C1729C
	0x0356AB30 MOV X8, X0
	0x0356AB34 STR X0, [X20 + 0xE30]
	0x0356AB38 MOV X0, X19
	0x0356AB3C BLR X8
	0x0356AB40 LDP X20, X19, [X31 + 0x40]
	0x0356AB44 LDR X30, [X31 + 0x30]
	0x0356AB48 ADD X31, X31, 0x50
	0x0356AB4C RET
	0x0356AB50 MOV X1, X31
	0x0356AB54 B 0x33BDD8C
	0x0356AB58 MOV X1, X31
	0x0356AB5C B 0x33BDD8C
	0x0356AB60 LDR X8, [X1 + 0x8]
	0x0356AB64 CBZ X8, 0x356AB78
	0x0356AB68 LDR W8, [X8 + 0x18]
	0x0356AB6C MOVZ W9, 0x451
	0x0356AB70 SUB W0, W9, W8
	0x0356AB74 RET
	0x0356AB78 MOVZ W0, 0x454
	0x0356AB7C RET
	0x0356AB80 LDR X0, [X0 + 0x188]
	0x0356AB84 RET
	0x0356AB88 LDR W8, [X0 + 0x90]
	0x0356AB8C CMP W8, 0x9
	0x0356AB90 CSET W0, EQ
	0x0356AB94 RET
	0x0356AB98 STR X30, [X31 - 0x50]!
	0x0356AB9C STP X26, X25, [X31 + 0x10]
	0x0356ABA0 STP X24, X23, [X31 + 0x20]
	0x0356ABA4 STP X22, X21, [X31 + 0x30]
	0x0356ABA8 STP X20, X19, [X31 + 0x40]
	0x0356ABAC ADRP X24, 0xE75000
	0x0356ABB0 ADRP X23, 0xBCA000
	0x0356ABB4 LDRB W8, [X24 + 0xE38]
	0x0356ABB8 LDR X23, [X23 + 0xBB8]
	0x0356ABBC MOV W22, W3
	0x0356ABC0 MOV W21, W2
	0x0356ABC4 MOV X20, X1
	0x0356ABC8 MOV X19, X0
	0x0356ABCC TBNZ X8, 0x0, 0x356AC2C
	0x0356ABD0 ADRP X0, 0xB91000
	0x0356ABD4 LDR X0, [X0 + 0xCB0]
	0x0356ABD8 BL 0x1C16CF4
	0x0356ABDC ADRP X0, 0xBCA000
	0x0356ABE0 LDR X0, [X0 + 0xBD8]
	0x0356ABE4 BL 0x1C16CF4
	0x0356ABE8 ADRP X0, 0xBCB000
	0x0356ABEC LDR X0, [X0 + 0xE00]
	0x0356ABF0 BL 0x1C16CF4
	0x0356ABF4 ADRP X0, 0xBCA000
	0x0356ABF8 LDR X0, [X0 + 0xBB8]
	0x0356ABFC BL 0x1C16CF4
	0x0356AC00 ADRP X0, 0xBCB000
	0x0356AC04 LDR X0, [X0 + 0xE08]
	0x0356AC08 BL 0x1C16CF4
	0x0356AC0C ADRP X0, 0xBCB000
	0x0356AC10 LDR X0, [X0 + 0xE10]
	0x0356AC14 BL 0x1C16CF4
	0x0356AC18 ADRP X0, 0xBCB000
	0x0356AC1C LDR X0, [X0 + 0xE18]
	0x0356AC20 BL 0x1C16CF4
	0x0356AC24 MOVZ W8, 0x1
	0x0356AC28 STRB W8, [X24 + 0xE38]
	0x0356AC2C LDR X0, [X23]
	0x0356AC30 LDR W8, [X0 + 0xE0]
	0x0356AC34 CBNZ W8, 0x356AC3C
	0x0356AC38 BL 0x1C16DFC
	0x0356AC3C MOV X0, X19
	0x0356AC40 MOV W1, W21
	0x0356AC44 MOV X2, X31
	0x0356AC48 AND W24, W22, 0x1
	0x0356AC4C BL 0x353909C
	0x0356AC50 CBNZ X20, 0x356AC74
	0x0356AC54 ADRP X8, 0xBCB000
	0x0356AC58 LDR X8, [X8 + 0xE00]
	0x0356AC5C LDR X0, [X8]
	0x0356AC60 BL 0x1C16F10
	0x0356AC64 MOV X1, X31
	0x0356AC68 MOV X20, X0
	0x0356AC6C BL 0x33BDD8C
	0x0356AC70 STR X19, [X20 + 0x10]
	0x0356AC74 LDR X0, [X23]
	0x0356AC78 ADRP X21, 0xB91000
	0x0356AC7C ADRP X26, 0xBCA000
	0x0356AC80 ADRP X25, 0xBCB000
	0x0356AC84 ADRP X22, 0xBCB000
	0x0356AC88 LDR W8, [X0 + 0xE0]
	0x0356AC8C LDR X21, [X21 + 0xCB0]
	0x0356AC90 LDR X26, [X26 + 0xBD8]
	0x0356AC94 LDR X25, [X25 + 0xE08]
	0x0356AC98 LDR X22, [X22 + 0xE18]
	0x0356AC9C CBNZ W8, 0x356ACA4
	0x0356ACA0 BL 0x1C16DFC
	0x0356ACA4 MOVZ W8, 0x1
	0x0356ACA8 STR W8, [X19 + 0x28]
	0x0356ACAC STRB W24, [X19 + 0x198]
	0x0356ACB0 LDR X0, [X21]
	0x0356ACB4 BL 0x1C16F10
	0x0356ACB8 LDR X8, [X19]
	0x0356ACBC MOV X1, X19
	0x0356ACC0 MOV X3, X31
	0x0356ACC4 MOV X21, X0
	0x0356ACC8 LDR X2, [X8 + 0x330]
	0x0356ACCC BL 0x2A6B948
	0x0356ACD0 MOV X0, X19
	0x0356ACD4 MOV X1, X21
	0x0356ACD8 MOV X2, X31
	0x0356ACDC BL 0x3538BE0
	0x0356ACE0 LDR X0, [X26]
	0x0356ACE4 BL 0x1C16F10
	0x0356ACE8 LDR X2, [X25]
	0x0356ACEC MOV X1, X19
	0x0356ACF0 MOV X3, X31
	0x0356ACF4 MOV X21, X0
	0x0356ACF8 BL 0x2A76254
	0x0356ACFC MOV X0, X19
	0x0356AD00 MOV X1, X21
	0x0356AD04 MOV X2, X31
	0x0356AD08 BL 0x3538A80
	0x0356AD0C LDR X0, [X22]
	0x0356AD10 BL 0x1C16F10
	0x0356AD14 MOV X1, X19
	0x0356AD18 MOV X2, X20
	0x0356AD1C MOV X3, X31
	0x0356AD20 MOV X4, X31
	0x0356AD24 MOV X21, X0
	0x0356AD28 BL 0x356115C
	0x0356AD2C LDR X8, [X19 + 0x10]
	0x0356AD30 STR X21, [X19 + 0x188]
	0x0356AD34 CBZ X8, 0x356ADA8
	0x0356AD38 LDRB W9, [X8 + 0x6A]
	0x0356AD3C CMP W9, 0x3
	0x0356AD40 B.HI 0x356AD68
	0x0356AD44 LDR X0, [X23]
	0x0356AD48 LDR W9, [X0 + 0xE0]
	0x0356AD4C CBNZ W9, 0x356AD5C
	0x0356AD50 BL 0x1C16DFC
	0x0356AD54 LDR X8, [X19 + 0x10]
	0x0356AD58 CBZ X8, 0x356ADA8
	0x0356AD5C MOVZ W9, 0x4
	0x0356AD60 STRB W9, [X8 + 0x6A]
	0x0356AD64 LDR X21, [X19 + 0x188]
	0x0356AD68 ADRP X8, 0xBCB000
	0x0356AD6C LDR X8, [X8 + 0xE10]
	0x0356AD70 LDR X0, [X8]
	0x0356AD74 BL 0x1C16F10
	0x0356AD78 MOV X1, X31
	0x0356AD7C MOV X22, X0
	0x0356AD80 BL 0x33BDD8C
	0x0356AD84 STP X21, X20, [X22 + 0x10]
	0x0356AD88 STR X22, [X19 + 0x190]
	0x0356AD8C STR X20, [X19 + 0x1A0]
	0x0356AD90 LDP X20, X19, [X31 + 0x40]
	0x0356AD94 LDP X22, X21, [X31 + 0x30]
	0x0356AD98 LDP X24, X23, [X31 + 0x20]
	0x0356AD9C LDP X26, X25, [X31 + 0x10]
	0x0356ADA0 LDR X30, [X31], #0x50
	0x0356ADA4 RET
	0x0356ADA8 BL 0x1C16F20
	0x0356ADAC STR X30, [X31 - 0x20]!
	0x0356ADB0 STP X20, X19, [X31 + 0x10]
	0x0356ADB4 MOV X19, X1

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0xE76000
	015 Move W8, [X21+3581]
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {57}
	022 Move X0, 0xB8A000
	023 Move X0, [X0+2504]
	024 Call 0x1C17CF4
	025 Move X0, 0xBCC000
	026 Move X0, [X0+3472]
	027 Call 0x1C17CF4
	028 Move X0, 0xBCC000
	029 Move X0, [X0+3224]
	030 Call 0x1C17CF4
	031 Move X0, 0xB8A000
	032 Move X0, [X0+3584]
	033 Call 0x1C17CF4
	034 Move X0, 0xBCC000
	035 Move X0, [X0+3480]
	036 Call 0x1C17CF4
	037 Move X0, 0xBCC000
	038 Move X0, [X0+3488]
	039 Call 0x1C17CF4
	040 Move X0, 0xB8A000
	041 Move X0, [X0+3608]
	042 Call 0x1C17CF4
	043 Move X0, 0xB8F000
	044 Move X0, [X0+840]
	045 Call 0x1C17CF4
	046 Move X0, 0xBCC000
	047 Move X0, [X0+3496]
	048 Call 0x1C17CF4
	049 Move X0, 0xBCC000
	050 Move X0, [X0+3504]
	051 Call 0x1C17CF4
	052 Move X0, 0xBCC000
	053 Move X0, [X0+3512]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X21+3581], W8
	057 Move [X31+12], W31
	058 Move W8, [X20+96]
	059 Compare W8, 0
	060 JumpIfEqual {75}
	061 Move X20, [X31+96]
	062 Move X19, [X31+104]
	063 Move X22, [X31+80]
	064 Move X21, [X31+88]
	065 Move X24, [X31+64]
	066 Move X23, [X31+72]
	067 Move X26, [X31+48]
	068 Move X25, [X31+56]
	069 Move X28, [X31+32]
	070 Move X27, [X31+40]
	071 Move X29, [X31+16]
	072 Move X30, [X31+24]
	073 Add X31, X31, 112
	074 Return 
	075 Move W8, [X20+128]
	076 Compare W8, 0
	077 JumpIfEqual {61}
	078 Move X0, [X20+88]
	079 Move X1, X31
	080 Move X2, X31
	081 Call IntPtr.op_Equality, X0, X1
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {61}
	086 Move X0, [X20+104]
	087 Compare X0, 0
	088 JumpIfEqual {351}
	089 Move X8, [X0]
	090 Move X1, X19
	091 Move X9, [X8+376]
	092 Move X2, [X8+384]
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Compare X0, 0
	095 JumpIfEqual {351}
	096 Move X10, 0xBCC000
	097 Move X8, [X0]
	098 Move X10, [X10+3480]
	099 Move X19, X0
	100 NotImplemented "Instruction LDRH not yet implemented."
	101 Move X1, [X10]
	102 Compare X9, 0
	103 JumpIfEqual {110}
	104 Move X10, [X8+176]
	105 Add X10, X10, 8
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Subtract X9, X9, 1
	109 Add X10, X10, 16
	110 Move X0, X19
	111 Move W2, W31
	112 Call 0x1C5D788
	113 NotImplemented "Instruction LDRSW not yet implemented."
	114 Add X8, X8, X9
	115 Add X0, X8, 312
	116 Move X8, [X0]
	117 Move X1, [X0+8]
	118 Move X0, X19
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move X19, X0
	121 Compare X0, 0
	122 JumpIfEqual {352}
	123 Move X26, 0xB8A000
	124 Move X27, 0xBCC000
	125 Move X28, 0xBCC000
	126 Move X29, 0xBCC000
	127 Move X26, [X26+3608]
	128 Move X27, [X27+3488]
	129 Move X28, [X28+3224]
	130 Move X29, [X29+3496]
	131 Move X8, [X19]
	132 Move X1, [X26]
	133 NotImplemented "Instruction LDRH not yet implemented."
	134 Compare X9, 0
	135 JumpIfEqual {142}
	136 Move X10, [X8+176]
	137 Add X10, X10, 8
	138 NotImplemented "Instruction LDUR not yet implemented."
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Subtract X9, X9, 1
	141 Add X10, X10, 16
	142 Move X0, X19
	143 Move W2, W31
	144 Call 0x1C5D788
	145 NotImplemented "Instruction LDRSW not yet implemented."
	146 Add X8, X8, X9
	147 Add X0, X8, 312
	148 Move X8, [X0]
	149 Move X1, [X0+8]
	150 Move X0, X19
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Move TEMP, X0
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfNotEqual {306}
	156 Move X8, [X19]
	157 Move X1, [X27]
	158 NotImplemented "Instruction LDRH not yet implemented."
	159 Compare X9, 0
	160 JumpIfEqual {167}
	161 Move X10, [X8+176]
	162 Add X10, X10, 8
	163 NotImplemented "Instruction LDUR not yet implemented."
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Subtract X9, X9, 1
	166 Add X10, X10, 16
	167 Move X0, X19
	168 Move W2, W31
	169 Call 0x1C5D788
	170 NotImplemented "Instruction LDRSW not yet implemented."
	171 Add X8, X8, X9
	172 Add X0, X8, 312
	173 Move X8, [X0]
	174 Move X1, [X0+8]
	175 Move X0, X19
	176 NotImplemented "Instruction BLR not yet implemented."
	177 Move X21, X0
	178 Move X0, [X20+56]
	179 Compare X0, 0
	180 JumpIfEqual {338}
	181 Move X1, [X28]
	182 Call 0x2D11CC0, X0
	183 Move X22, X0
	184 Compare X0, 0
	185 JumpIfEqual {339}
	186 Move W2, [X22+24]
	187 Move X0, X21
	188 Move X1, X22
	189 Call AudioUtil.Convert, X0, X1, X2
	190 Move X21, [X20+40]
	191 Move [X31+12], W31
	192 Add X1, X31, 12
	193 Move X0, X21
	194 Move X2, X31
	195 Call Monitor.Enter, X0, X1
	196 Move X8, [X20+40]
	197 Compare X8, 0
	198 JumpIfEqual {294}
	199 Move W9, [X8+32]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move X8, 0xB8A000
	202 Move X8, [X8+2504]
	203 Move X23, [X20+120]
	204 Move X24, [X8]
	205 Move X8, [X24+56]
	206 Compare X8, 0
	207 JumpIfNotEqual {211}
	208 Move X0, X24
	209 Call 0x1C5D6E0
	210 Move X8, [X24+56]
	211 Move X0, [X8+16]
	212 Move W8, [X0+309]
	213 Move TEMP, X8
	214 And TEMP, TEMP, 1
	215 Compare TEMP, 1
	216 JumpIfEqual {218}
	217 Call 0x1C5D684
	218 Move W8, [X0+224]
	219 Compare W8, 0
	220 JumpIfNotEqual {222}
	221 Call 0x1C17DFC
	222 Move X8, [X24+56]
	223 Move X0, [X8+16]
	224 Move W8, [X0+309]
	225 Move TEMP, X8
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfEqual {230}
	229 Call 0x1C5D684
	230 Compare X23, 0
	231 JumpIfEqual {296}
	232 Move X10, 0xB8F000
	233 Move X9, [X0+184]
	234 Move X8, [X23]
	235 Move X10, [X10+840]
	236 Move X24, [X9]
	237 NotImplemented "Instruction LDRH not yet implemented."
	238 Move X1, [X10]
	239 Move X10, 0xBCC000
	240 Move X10, [X10+3512]
	241 Move X25, [X10]
	242 Compare X9, 0
	243 JumpIfEqual {250}
	244 Move X10, [X8+176]
	245 Add X10, X10, 8
	246 NotImplemented "Instruction LDUR not yet implemented."
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Subtract X9, X9, 1
	249 Add X10, X10, 16
	250 Move W2, 1
	251 Move X0, X23
	252 Call 0x1C5D788
	253 Move X2, [X29]
	254 Move X0, X8
	255 Move X1, X22
	256 Call Queue`1<Object>.Enqueue, X0, X1
	257 Move X0, [X20+48]
	258 Compare X0, 0
	259 JumpIfEqual {295}
	260 Move X1, X31
	261 Call EventWaitHandle.Set, X0
	262 Move W9, [X10]
	263 Add W9, W9, 1
	264 Add X8, X8, W9
	265 Add X0, X8, 312
	266 Move X8, [X0]
	267 Move X4, [X0+8]
	268 Move W1, 1
	269 Move X0, X23
	270 Move X2, X25
	271 Move X3, X24
	272 NotImplemented "Instruction BLR not yet implemented."
	273 Move X0, [X20+56]
	274 Compare X0, 0
	275 JumpIfEqual {297}
	276 Move X8, 0xBCC000
	277 Move X8, [X8+3472]
	278 Move X2, [X8]
	279 Move X1, X22
	280 Call 0x2D11D08, X0, X1
	281 Move X24, X31
	282 Move W22, 5
	283 Move W8, [X31+12]
	284 Compare W8, 0
	285 JumpIfEqual {289}
	286 Move X0, X21
	287 Move X1, X31
	288 Call Monitor.Exit, X0
	289 Compare X24, 0
	290 JumpIfNotEqual {336}
	291 Compare W22, 0
	292 JumpIfEqual {131}
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Call 0x1C17F20
	295 Call 0x1C17F20
	296 Call 0x1C17F20
	297 Call 0x1C17F20
	298 Move X23, X1
	299 Move X22, X0
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Move X0, X22
	302 Call 0x3EB2AD0
	303 Move X24, [X0]
	304 Call 0x3EB2AE0
	305 Move W22, W31
	306 Move X20, X31
	307 Compare X19, 0
	308 JumpIfEqual {332}
	309 Move X10, 0xB8A000
	310 Move X8, [X19]
	311 Move X10, [X10+3584]
	312 NotImplemented "Instruction LDRH not yet implemented."
	313 Move X1, [X10]
	314 Compare X9, 0
	315 JumpIfEqual {322}
	316 Move X10, [X8+176]
	317 Add X10, X10, 8
	318 NotImplemented "Instruction LDUR not yet implemented."
	319 NotImplemented "Instruction CMP not yet implemented."
	320 Subtract X9, X9, 1
	321 Add X10, X10, 16
	322 Move X0, X19
	323 Move W2, W31
	324 Call 0x1C5D788
	325 NotImplemented "Instruction LDRSW not yet implemented."
	326 Add X8, X8, X9
	327 Add X0, X8, 312
	328 Move X8, [X0]
	329 Move X1, [X0+8]
	330 Move X0, X19
	331 NotImplemented "Instruction BLR not yet implemented."
	332 Compare X20, 0
	333 JumpIfEqual {61}
	334 Move X0, X20
	335 Call 0x1C17F18
	336 Move X0, X24
	337 Call 0x1C17F18
	338 Call 0x1C17F20
	339 Call 0x1C17F20
	340 Move X24, X31
	341 Move W8, [X31+12]
	342 Compare W8, 0
	343 JumpIfEqual {347}
	344 Move X0, X21
	345 Move X1, X31
	346 Call Monitor.Exit, X0
	347 Compare X24, 0
	348 JumpIfEqual {357}
	349 Move X0, X24
	350 Call 0x1C17F18
	351 Call 0x1C17F20
	352 Call 0x1C17F20
	353 Move X23, X1
	354 Move X22, X0
	355 Move X23, X1
	356 Move X22, X0
	357 NotImplemented "Instruction CMP not yet implemented."
	358 Move X0, X22
	359 Call 0x3EB2AD0
	360 Move X20, [X0]
	361 Call 0x3EB2AE0
	362 Move X20, X31
	363 Move X22, X0
	364 Compare X19, 0
	365 JumpIfEqual {389}
	366 Move X10, 0xB8A000
	367 Move X8, [X19]
	368 Move X10, [X10+3584]
	369 NotImplemented "Instruction LDRH not yet implemented."
	370 Move X1, [X10]
	371 Compare X9, 0
	372 JumpIfEqual {379}
	373 Move X10, [X8+176]
	374 Add X10, X10, 8
	375 NotImplemented "Instruction LDUR not yet implemented."
	376 NotImplemented "Instruction CMP not yet implemented."
	377 Subtract X9, X9, 1
	378 Add X10, X10, 16
	379 Move X0, X19
	380 Move W2, W31
	381 Call 0x1C5D788
	382 NotImplemented "Instruction LDRSW not yet implemented."
	383 Add X8, X8, X9
	384 Add X0, X8, 312
	385 Move X8, [X0]
	386 Move X1, [X0+8]
	387 Move X0, X19
	388 NotImplemented "Instruction BLR not yet implemented."
	389 Compare X20, 0
	390 JumpIfNotEqual {393}
	391 Move X0, X22
	392 Call 0x1D2D690
	393 Move X0, X20
	394 Call 0x1C17F18
	395 Call 0x1991590

Method: System.Void ReverseStreamThread()

Disassembly:
	0x0356ADB8 MOV X1, X31
	0x0356ADBC MOV X20, X0
	0x0356ADC0 BL 0x33BDD8C
	0x0356ADC4 STR X19, [X20 + 0x10]
	0x0356ADC8 LDP X20, X19, [X31 + 0x10]
	0x0356ADCC LDR X30, [X31], #0x20
	0x0356ADD0 RET
	0x0356ADD4 STP X30, X21, [X31 - 0x20]!
	0x0356ADD8 STP X20, X19, [X31 + 0x10]
	0x0356ADDC MOV X20, X1
	0x0356ADE0 MOV X1, X31
	0x0356ADE4 MOV X19, X2
	0x0356ADE8 MOV X21, X0
	0x0356ADEC BL 0x33BDD8C
	0x0356ADF0 STP X20, X19, [X21 + 0x10]
	0x0356ADF4 LDP X20, X19, [X31 + 0x10]
	0x0356ADF8 LDP X30, X21, [X31], #0x20
	0x0356ADFC RET
	0x0356AE00 STP X30, X19, [X31 - 0x10]!
	0x0356AE04 MOV X1, X31
	0x0356AE08 MOV X19, X0
	0x0356AE0C BL 0x353B018
	0x0356AE10 LDR X0, [X19 + 0x188]
	0x0356AE14 CBZ X0, 0x356AE24
	0x0356AE18 MOV X1, X31
	0x0356AE1C LDP X30, X19, [X31], #0x10
	0x0356AE20 B 0x356137C
	0x0356AE24 BL 0x1C16F20
	0x0356AE28 STR X30, [X31 - 0x10]!
	0x0356AE2C LDR X0, [X0 + 0x10]
	0x0356AE30 CBZ X0, 0x356AE48
	0x0356AE34 LDR X8, [X0]
	0x0356AE38 LDR X4, [X8 + 0x308]
	0x0356AE3C LDR X3, [X8 + 0x310]
	0x0356AE40 LDR X30, [X31], #0x10
	0x0356AE44 BR X4
	0x0356AE48 BL 0x1C16F20
	0x0356AE4C STP X30, X23, [X31 - 0x30]!
	0x0356AE50 STP X22, X21, [X31 + 0x10]
	0x0356AE54 STP X20, X19, [X31 + 0x20]
	0x0356AE58 ADRP X19, 0xE75000
	0x0356AE5C ADRP X23, 0xBCA000
	0x0356AE60 LDRB W8, [X19 + 0xE39]
	0x0356AE64 LDR X23, [X23 + 0xFC8]
	0x0356AE68 MOV X20, X2
	0x0356AE6C MOV W22, W1
	0x0356AE70 MOV X21, X0
	0x0356AE74 TBNZ X8, 0x0, 0x356AE98
	0x0356AE78 ADRP X0, 0xB8A000
	0x0356AE7C LDR X0, [X0 + 0xE58]
	0x0356AE80 BL 0x1C16CF4
	0x0356AE84 ADRP X0, 0xBCA000
	0x0356AE88 LDR X0, [X0 + 0xFC8]
	0x0356AE8C BL 0x1C16CF4
	0x0356AE90 MOVZ W8, 0x1
	0x0356AE94 STRB W8, [X19 + 0xE39]
	0x0356AE98 LDR X0, [X23]
	0x0356AE9C BL 0x1C16F10
	0x0356AEA0 MOV X1, X31
	0x0356AEA4 MOV X19, X0
	0x0356AEA8 BL 0x35482A4
	0x0356AEAC TBZ X22, 0x0, 0x356AF20
	0x0356AEB0 CBZ X20, 0x356AF3C
	0x0356AEB4 ADRP X9, 0xB8A000
	0x0356AEB8 LDR X8, [X20 + 0x18]
	0x0356AEBC LDR X9, [X9 + 0xE58]
	0x0356AEC0 LDR X0, [X9]
	0x0356AEC4 CBZ X8, 0x356AF4C
	0x0356AEC8 ADD W1, W8, 0x1
	0x0356AECC BL 0x1C16D6C
	0x0356AED0 CBZ X19, 0x356AF8C
	0x0356AED4 STR X0, [X19 + 0x18]
	0x0356AED8 LDR W2, [X20 + 0x18]
	0x0356AEDC MOV X1, X0
	0x0356AEE0 MOV X0, X20
	0x0356AEE4 MOV X3, X31
	0x0356AEE8 BL 0x33A0C7C
	0x0356AEEC LDR X8, [X21 + 0x108]
	0x0356AEF0 CBZ X8, 0x356AF8C
	0x0356AEF4 LDR X9, [X19 + 0x18]
	0x0356AEF8 CBZ X9, 0x356AF8C
	0x0356AEFC LDR X10, [X20 + 0x18]
	0x0356AF00 LDR W11, [X9 + 0x18]
	0x0356AF04 CMP W10, W11
	0x0356AF08 B.CS 0x356AFD8
	0x0356AF0C LDR W8, [X8 + 0x18]
	0x0356AF10 UBFM X10, X10, 0x20, 0x1F
	0x0356AF14 ADD X9, X9, X10, 0x1E, ASR
	0x0356AF18 STR W8, [X9 + 0x20]
	0x0356AF1C B 0x356AF78
	0x0356AF20 CBZ X19, 0x356AF8C
	0x0356AF24 LDR X8, [X19 + 0x18]
	0x0356AF28 CBZ X8, 0x356AF34
	0x0356AF2C LDR X8, [X8 + 0x18]
	0x0356AF30 CBZ X8, 0x356AF90
	0x0356AF34 STR X20, [X19 + 0x18]
	0x0356AF38 B 0x356AF78
	0x0356AF3C CBZ X19, 0x356AF8C
	0x0356AF40 MOVZ W8, 0x1
	0x0356AF44 STRB W8, [X19 + 0x20]
	0x0356AF48 B 0x356AF78
	0x0356AF4C MOVZ W1, 0x1
	0x0356AF50 BL 0x1C16D6C
	0x0356AF54 LDR X8, [X21 + 0x108]
	0x0356AF58 CBZ X8, 0x356AF8C
	0x0356AF5C CBZ X0, 0x356AF8C
	0x0356AF60 LDR W9, [X0 + 0x18]
	0x0356AF64 CBZ W9, 0x356AFD8
	0x0356AF68 LDR W8, [X8 + 0x18]
	0x0356AF6C STR W8, [X0 + 0x20]
	0x0356AF70 CBZ X19, 0x356AF8C
	0x0356AF74 STR X0, [X19 + 0x18]
	0x0356AF78 MOV X0, X19
	0x0356AF7C LDP X20, X19, [X31 + 0x20]
	0x0356AF80 LDP X22, X21, [X31 + 0x10]
	0x0356AF84 LDP X30, X23, [X31], #0x30
	0x0356AF88 RET
	0x0356AF8C BL 0x1C16F20
	0x0356AF90 ADRP X0, 0xB91000
	0x0356AF94 LDR X0, [X0 + 0x578]
	0x0356AF98 BL 0x1C16D08
	0x0356AF9C BL 0x1C16F10
	0x0356AFA0 MOV X19, X0
	0x0356AFA4 ADRP X0, 0xBCB000
	0x0356AFA8 LDR X0, [X0 + 0xE20]
	0x0356AFAC BL 0x1C16D08
	0x0356AFB0 MOV X1, X0
	0x0356AFB4 MOV X0, X19
	0x0356AFB8 MOV X2, X31
	0x0356AFBC BL 0x3314A68
	0x0356AFC0 ADRP X0, 0xBCB000
	0x0356AFC4 LDR X0, [X0 + 0xE28]
	0x0356AFC8 BL 0x1C16D08
	0x0356AFCC MOV X1, X0
	0x0356AFD0 MOV X0, X19
	0x0356AFD4 BL 0x1C16DEC
	0x0356AFD8 BL 0x1C16F28
	0x0356AFDC STP X30, X23, [X31 - 0x30]!
	0x0356AFE0 STP X22, X21, [X31 + 0x10]
	0x0356AFE4 STP X20, X19, [X31 + 0x20]
	0x0356AFE8 LDR X8, [X0 + 0x190]
	0x0356AFEC CBZ X8, 0x356B050
	0x0356AFF0 MOV X20, X4
	0x0356AFF4 MOV W21, W3
	0x0356AFF8 MOV W22, W2
	0x0356AFFC MOV X19, X0
	0x0356B000 BL 0x356B054
	0x0356B004 MOV X23, X0
	0x0356B008 AND W8, W22, 0xFF
	0x0356B00C MOVZ W22, 0x1
	0x0356B010 AND W1, W21, 0x1
	0x0356B014 MOV X0, X19
	0x0356B018 MOV X2, X20
	0x0356B01C BFM X22, X8, 0x18, 0x7
	0x0356B020 BL 0x356AE4C
	0x0356B024 LDR X8, [X19]
	0x0356B028 MOV X3, X0
	0x0356B02C MOV X0, X19
	0x0356B030 MOV X4, X22
	0x0356B034 LDP X6, X5, [X8 + 0x1D8]
	0x0356B038 LDP X20, X19, [X31 + 0x20]
	0x0356B03C LDP X22, X21, [X31 + 0x10]
	0x0356B040 MOVZ W1, 0xCA
	0x0356B044 MOV X2, X23
	0x0356B048 LDP X30, X23, [X31], #0x30
	0x0356B04C BR X6
	0x0356B050 BL 0x1C16F20
	0x0356B054 SUB X31, X31, 0x80
	0x0356B058 STR X30, [X31 + 0x30]
	0x0356B05C STP X26, X25, [X31 + 0x40]
	0x0356B060 STP X24, X23, [X31 + 0x50]
	0x0356B064 STP X22, X21, [X31 + 0x60]
	0x0356B068 STP X20, X19, [X31 + 0x70]
	0x0356B06C ADRP X21, 0xE74000
	0x0356B070 ADRP X20, 0xB88000
	0x0356B074 ADRP X23, 0xB89000
	0x0356B078 LDRB W8, [X21 + 0xE3C]
	0x0356B07C LDR X20, [X20 + 0x9D0]
	0x0356B080 LDR X23, [X23 + 0x9D8]
	0x0356B084 MOV X19, X1
	0x0356B088 TBNZ X8, 0x0, 0x356B0F4
	0x0356B08C ADRP X0, 0xB89000
	0x0356B090 LDR X0, [X0 + 0x9D8]
	0x0356B094 BL 0x1C16CF4
	0x0356B098 ADRP X0, 0xBB1000
	0x0356B09C LDR X0, [X0 + 0x428]
	0x0356B0A0 BL 0x1C16CF4
	0x0356B0A4 ADRP X0, 0xB91000
	0x0356B0A8 LDR X0, [X0 + 0x538]
	0x0356B0AC BL 0x1C16CF4
	0x0356B0B0 ADRP X0, 0xB91000
	0x0356B0B4 LDR X0, [X0 + 0x540]
	0x0356B0B8 BL 0x1C16CF4
	0x0356B0BC ADRP X0, 0xB91000
	0x0356B0C0 LDR X0, [X0 + 0x2B8]
	0x0356B0C4 BL 0x1C16CF4
	0x0356B0C8 ADRP X0, 0xBCA000
	0x0356B0CC LDR X0, [X0 + 0xE30]
	0x0356B0D0 BL 0x1C16CF4
	0x0356B0D4 ADRP X0, 0xB88000
	0x0356B0D8 LDR X0, [X0 + 0x758]
	0x0356B0DC BL 0x1C16CF4
	0x0356B0E0 ADRP X0, 0xB88000
	0x0356B0E4 LDR X0, [X0 + 0x9D0]
	0x0356B0E8 BL 0x1C16CF4
	0x0356B0EC MOVZ W8, 0x1
	0x0356B0F0 STRB W8, [X21 + 0xE3C]
	0x0356B0F4 LDR X0, [X20]
	0x0356B0F8 MOVZ W1, 0x1
	0x0356B0FC BL 0x1C16D6C
	0x0356B100 LDR X8, [X20]
	0x0356B104 MOV X20, X0
	0x0356B108 MOVZ W1, 0x3
	0x0356B10C MOV X0, X8
	0x0356B110 BL 0x1C16D6C
	0x0356B114 MOV X21, X0
	0x0356B118 LDR X0, [X23]
	0x0356B11C ADD X1, X31, 0x3C
	0x0356B120 STRB W31, [X31 + 0x3C]
	0x0356B124 BL 0x1C16E04
	0x0356B128 CBZ X21, 0x356B418
	0x0356B12C MOV X22, X0
	0x0356B130 CBZ X0, 0x356B148
	0x0356B134 LDR X8, [X21]
	0x0356B138 MOV X0, X22
	0x0356B13C LDR X1, [X8 + 0x40]
	0x0356B140 BL 0x1C16E00
	0x0356B144 CBZ X0, 0x356B420
	0x0356B148 LDR W8, [X21 + 0x18]
	0x0356B14C CBZ W8, 0x356B41C
	0x0356B150 ADRP X8, 0xBCA000
	0x0356B154 LDR X8, [X8 + 0xE30]
	0x0356B158 STR X22, [X21 + 0x20]
	0x0356B15C ADD X1, X31, 0x38
	0x0356B160 LDR X0, [X8]
	0x0356B164 MOVZ W8, 0x1
	0x0356B168 STRB W8, [X31 + 0x38]
	0x0356B16C BL 0x1C16E04
	0x0356B170 MOV X22, X0
	0x0356B174 CBZ X0, 0x356B18C
	0x0356B178 LDR X8, [X21]
	0x0356B17C MOV X0, X22
	0x0356B180 LDR X1, [X8 + 0x40]
	0x0356B184 BL 0x1C16E00
	0x0356B188 CBZ X0, 0x356B420
	0x0356B18C LDR W8, [X21 + 0x18]
	0x0356B190 CMP W8, 0x1
	0x0356B194 B.LS 0x356B41C
	0x0356B198 STR X22, [X21 + 0x28]
	0x0356B19C CBZ X20, 0x356B1B8
	0x0356B1A0 LDR X8, [X21]
	0x0356B1A4 MOV X0, X20
	0x0356B1A8 LDR X1, [X8 + 0x40]
	0x0356B1AC BL 0x1C16E00
	0x0356B1B0 CBZ X0, 0x356B420
	0x0356B1B4 LDR W8, [X21 + 0x18]
	0x0356B1B8 CMP W8, 0x2
	0x0356B1BC B.LS 0x356B41C
	0x0356B1C0 ADRP X8, 0xB91000
	0x0356B1C4 LDR X8, [X8 + 0x2B8]
	0x0356B1C8 STR X20, [X21 + 0x30]
	0x0356B1CC ADRP X22, 0xB91000
	0x0356B1D0 LDR X0, [X8]
	0x0356B1D4 LDR X22, [X22 + 0x540]
	0x0356B1D8 BL 0x1C16F10
	0x0356B1DC LDR X1, [X22]
	0x0356B1E0 MOV X22, X0
	0x0356B1E4 BL 0x29D2C7C
	0x0356B1E8 CBZ X19, 0x356B418
	0x0356B1EC LDRB W8, [X19 + 0x80]
	0x0356B1F0 LDR X0, [X23]
	0x0356B1F4 ADD X1, X31, 0x2C
	0x0356B1F8 STRB W8, [X31 + 0x2C]
	0x0356B1FC BL 0x1C16E04
	0x0356B200 CBZ X22, 0x356B418
	0x0356B204 ADRP X24, 0xB91000
	0x0356B208 LDR X24, [X24 + 0x538]
	0x0356B20C ADRP X26, 0xBB1000
	0x0356B210 ADRP X25, 0xB88000
	0x0356B214 MOV X2, X0
	0x0356B218 LDR X3, [X24]
	0x0356B21C LDR X26, [X26 + 0x428]
	0x0356B220 LDR X25, [X25 + 0x758]
	0x0356B224 MOVZ W1, 0x1
	0x0356B228 MOV X0, X22
	0x0356B22C BL 0x29D3534
	0x0356B230 LDR W8, [X19 + 0x48]
	0x0356B234 LDR X0, [X26]
	0x0356B238 ADD X1, X31, 0x28
	0x0356B23C STR W8, [X31 + 0x28]
	0x0356B240 BL 0x1C16E04
	0x0356B244 LDR X3, [X24]
	0x0356B248 MOV X2, X0
	0x0356B24C MOVZ W1, 0xC
	0x0356B250 MOV X0, X22
	0x0356B254 BL 0x29D3534
	0x0356B258 LDR W8, [X19 + 0x4C]
	0x0356B25C LDR X0, [X25]
	0x0356B260 ADD X1, X31, 0x24
	0x0356B264 STR W8, [X31 + 0x24]
	0x0356B268 BL 0x1C16E04
	0x0356B26C LDR X3, [X24]
	0x0356B270 MOV X2, X0
	0x0356B274 MOVZ W1, 0x2
	0x0356B278 MOV X0, X22
	0x0356B27C BL 0x29D3534
	0x0356B280 LDR W8, [X19 + 0x50]
	0x0356B284 LDR X0, [X25]
	0x0356B288 ADD X1, X31, 0x20
	0x0356B28C STR W8, [X31 + 0x20]
	0x0356B290 BL 0x1C16E04
	0x0356B294 LDR X3, [X24]
	0x0356B298 MOV X2, X0
	0x0356B29C MOVZ W1, 0x3
	0x0356B2A0 MOV X0, X22
	0x0356B2A4 BL 0x29D3534
	0x0356B2A8 LDR W8, [X19 + 0x54]
	0x0356B2AC LDR X0, [X25]
	0x0356B2B0 ADD X1, X31, 0x1C
	0x0356B2B4 STR W8, [X31 + 0x1C]
	0x0356B2B8 BL 0x1C16E04
	0x0356B2BC LDR X3, [X24]
	0x0356B2C0 MOV X2, X0
	0x0356B2C4 MOVZ W1, 0x4
	0x0356B2C8 MOV X0, X22
	0x0356B2CC BL 0x29D3534
	0x0356B2D0 LDR W8, [X19 + 0x58]
	0x0356B2D4 LDR X0, [X25]
	0x0356B2D8 ADD X1, X31, 0x18
	0x0356B2DC STR W8, [X31 + 0x18]
	0x0356B2E0 BL 0x1C16E04
	0x0356B2E4 LDR X3, [X24]
	0x0356B2E8 MOV X2, X0
	0x0356B2EC MOVZ W1, 0x5
	0x0356B2F0 MOV X0, X22
	0x0356B2F4 BL 0x29D3534
	0x0356B2F8 LDR W8, [X19 + 0x5C]
	0x0356B2FC LDR X0, [X25]
	0x0356B300 ADD X1, X31, 0x14
	0x0356B304 STR W8, [X31 + 0x14]
	0x0356B308 BL 0x1C16E04
	0x0356B30C LDR X3, [X24]
	0x0356B310 MOV X2, X0
	0x0356B314 MOVZ W1, 0x6
	0x0356B318 MOV X0, X22
	0x0356B31C BL 0x29D3534
	0x0356B320 LDR W8, [X19 + 0x60]
	0x0356B324 LDR X0, [X25]
	0x0356B328 ADD X1, X31, 0x10
	0x0356B32C STR W8, [X31 + 0x10]
	0x0356B330 BL 0x1C16E04
	0x0356B334 LDR X3, [X24]
	0x0356B338 MOV X2, X0
	0x0356B33C MOVZ W1, 0x7
	0x0356B340 MOV X0, X22
	0x0356B344 BL 0x29D3534
	0x0356B348 LDR W8, [X19 + 0x64]
	0x0356B34C LDR X0, [X25]
	0x0356B350 ADD X1, X31, 0xC
	0x0356B354 STR W8, [X31 + 0xC]
	0x0356B358 BL 0x1C16E04
	0x0356B35C LDR X3, [X24]
	0x0356B360 MOV X2, X0
	0x0356B364 MOVZ W1, 0x8
	0x0356B368 MOV X0, X22
	0x0356B36C BL 0x29D3534
	0x0356B370 LDR W8, [X19 + 0x68]
	0x0356B374 LDR X0, [X25]
	0x0356B378 ADD X1, X31, 0x8
	0x0356B37C STR W8, [X31 + 0x8]
	0x0356B380 BL 0x1C16E04
	0x0356B384 LDR X3, [X24]
	0x0356B388 MOV X2, X0
	0x0356B38C MOVZ W1, 0x9
	0x0356B390 MOV X0, X22
	0x0356B394 BL 0x29D3534
	0x0356B398 LDR X2, [X19 + 0x70]
	0x0356B39C LDR X3, [X24]
	0x0356B3A0 MOVZ W1, 0xA
	0x0356B3A4 MOV X0, X22
	0x0356B3A8 BL 0x29D3534
	0x0356B3AC LDRB W8, [X19 + 0x88]
	0x0356B3B0 LDR X0, [X23]
	0x0356B3B4 ADD X1, X31, 0x4
	0x0356B3B8 STRB W8, [X31 + 0x4]
	0x0356B3BC BL 0x1C16E04
	0x0356B3C0 LDR X3, [X24]
	0x0356B3C4 MOV X2, X0
	0x0356B3C8 MOVZ W1, 0xB
	0x0356B3CC MOV X0, X22
	0x0356B3D0 BL 0x29D3534
	0x0356B3D4 CBZ X20, 0x356B418
	0x0356B3D8 LDR X8, [X20]
	0x0356B3DC MOV X0, X22
	0x0356B3E0 LDR X1, [X8 + 0x40]
	0x0356B3E4 BL 0x1C16E00
	0x0356B3E8 CBZ X0, 0x356B420
	0x0356B3EC LDR W8, [X20 + 0x18]
	0x0356B3F0 CBZ W8, 0x356B41C
	0x0356B3F4 STR X22, [X20 + 0x20]
	0x0356B3F8 MOV X0, X21
	0x0356B3FC LDP X20, X19, [X31 + 0x70]
	0x0356B400 LDP X22, X21, [X31 + 0x60]
	0x0356B404 LDP X24, X23, [X31 + 0x50]
	0x0356B408 LDP X26, X25, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X30
	003 Move [X31+40], X0
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X21, 0xE76000
	015 Move X20, 0xB8A000
	016 Move W8, [X21+3582]
	017 Move X20, [X20+2504]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {55}
	023 Move X0, 0xB8A000
	024 Move X0, [X0+2504]
	025 Call 0x1C17CF4
	026 Move X0, 0xBCC000
	027 Move X0, [X0+3472]
	028 Call 0x1C17CF4
	029 Move X0, 0xB8F000
	030 Move X0, [X0+840]
	031 Call 0x1C17CF4
	032 Move X0, 0xB8A000
	033 Move X0, [X0+1880]
	034 Call 0x1C17CF4
	035 Move X0, 0xB8A000
	036 Move X0, [X0+2512]
	037 Call 0x1C17CF4
	038 Move X0, 0xBCC000
	039 Move X0, [X0+3520]
	040 Call 0x1C17CF4
	041 Move X0, 0xBCC000
	042 Move X0, [X0+3504]
	043 Call 0x1C17CF4
	044 Move X0, 0xBCC000
	045 Move X0, [X0+3528]
	046 Call 0x1C17CF4
	047 Move X0, 0xBCC000
	048 Move X0, [X0+3536]
	049 Call 0x1C17CF4
	050 Move X0, 0xBCC000
	051 Move X0, [X0+3544]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X21+3582], W8
	055 Move X21, [X20]
	056 Move [X31+28], W31
	057 Move X20, [X19+120]
	058 Move X8, [X21+56]
	059 Compare X8, 0
	060 JumpIfNotEqual {64}
	061 Move X0, X21
	062 Call 0x1C5D6E0
	063 Move X8, [X21+56]
	064 Move X0, [X8+16]
	065 Move W8, [X0+309]
	066 Move TEMP, X8
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {71}
	070 Call 0x1C5D684
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X8, [X21+56]
	076 Move X0, [X8+16]
	077 Move W8, [X0+309]
	078 Move TEMP, X8
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {83}
	082 Call 0x1C5D684
	083 Compare X20, 0
	084 JumpIfEqual {294}
	085 Move X23, 0xB8F000
	086 Move X10, 0xBCC000
	087 Move X23, [X23+840]
	088 Move X9, [X0+184]
	089 Move X8, [X20]
	090 Move X10, [X10+3528]
	091 Move X1, [X23]
	092 Move X21, [X9]
	093 NotImplemented "Instruction LDRH not yet implemented."
	094 Move X22, [X10]
	095 Compare X9, 0
	096 JumpIfEqual {103}
	097 Move X10, [X8+176]
	098 Add X10, X10, 8
	099 NotImplemented "Instruction LDUR not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Subtract X9, X9, 1
	102 Add X10, X10, 16
	103 Move W2, 1
	104 Move X0, X20
	105 Call 0x1C5D788
	106 Move W9, [X10]
	107 Add W9, W9, 1
	108 Add X8, X8, W9
	109 Add X0, X8, 312
	110 Move X8, [X0]
	111 Move X4, [X0+8]
	112 Move W1, 3
	113 Move X0, X20
	114 Move X2, X22
	115 Move X3, X21
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move W8, 1
	118 Add X9, X31, 40
	119 Move [X19+38], W8
	120 Move [X31+8], X31
	121 Move [X31+16], X9
	122 Move W8, [X19+96]
	123 Compare W8, 0
	124 JumpIfEqual {140}
	125 Add X0, X31, 8
	126 Call 0x1BC1860
	127 Move X20, [X31+112]
	128 Move X19, [X31+120]
	129 Move X22, [X31+96]
	130 Move X21, [X31+104]
	131 Move X24, [X31+80]
	132 Move X23, [X31+88]
	133 Move X26, [X31+64]
	134 Move X25, [X31+72]
	135 Move X28, [X31+48]
	136 Move X27, [X31+56]
	137 Move X30, [X31+32]
	138 Add X31, X31, 128
	139 Return 
	140 Move X24, 0xBCC000
	141 Move X25, 0xBCC000
	142 Move X26, 0xB8A000
	143 Move X27, 0xB8A000
	144 Move X28, 0xBCC000
	145 Move X24, [X24+3520]
	146 Move X25, [X25+3472]
	147 Move X26, [X26+2512]
	148 Move X27, [X27+1880]
	149 Move X28, [X28+3536]
	150 Move X0, [X19+48]
	151 Compare X0, 0
	152 JumpIfEqual {293}
	153 Move X8, [X0]
	154 Move X9, [X8+472]
	155 Move X1, [X8+480]
	156 NotImplemented "Instruction BLR not yet implemented."
	157 Move X8, [X31+40]
	158 Move X20, [X8+40]
	159 Move [X31+28], W31
	160 Add X1, X31, 28
	161 Move X0, X20
	162 Move X2, X31
	163 Call Monitor.Enter, X0, X1
	164 Move X8, [X31+40]
	165 Move X0, [X8+40]
	166 Compare X0, 0
	167 JumpIfEqual {260}
	168 Move W8, [X0+32]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move X1, [X24]
	171 Call Queue`1<Object>.Dequeue, X0
	172 Move X21, X0
	173 Move X22, X31
	174 Move X22, X31
	175 Move X21, X31
	176 Move W19, 6
	177 Move W8, [X31+28]
	178 Compare W8, 0
	179 JumpIfEqual {183}
	180 Move X0, X20
	181 Move X1, X31
	182 Call Monitor.Exit, X0
	183 Compare X22, 0
	184 JumpIfNotEqual {273}
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Compare W19, 0
	187 JumpIfNotEqual {125}
	188 Move X19, [X31+40]
	189 Compare X21, 0
	190 JumpIfEqual {270}
	191 Move X0, [X19+88]
	192 Move W2, [X21+24]
	193 Move X1, X21
	194 Move X3, X31
	195 Call WebRTCAudioLib.webrtc_audio_processor_process_reverse, X0, X1, X2
	196 Move X8, [X31+40]
	197 Move W22, W0
	198 Move X0, [X8+56]
	199 Compare X0, 0
	200 JumpIfEqual {275}
	201 Move X2, [X25]
	202 Move X1, X21
	203 Call 0x2D11D08, X0, X1
	204 Move X8, [X31+40]
	205 Move W9, [X8+136]
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move [X8+136], W22
	208 Move X19, [X8+120]
	209 Move X0, [X26]
	210 Move W1, 1
	211 Call 0x1C17D6C
	212 Move X20, X0
	213 Move X0, [X27]
	214 Move [X31+4], W22
	215 Add X1, X31, 4
	216 Call 0x1C17E04
	217 Compare X20, 0
	218 JumpIfEqual {277}
	219 Move X21, X0
	220 Compare X0, 0
	221 JumpIfEqual {228}
	222 Move X8, [X20]
	223 Move X1, [X8+64]
	224 Move X0, X21
	225 Call 0x1C17E00
	226 Compare X0, 0
	227 JumpIfEqual {279}
	228 Move W8, [X20+24]
	229 Compare W8, 0
	230 JumpIfEqual {276}
	231 Move [X20+32], X21
	232 Compare X19, 0
	233 JumpIfEqual {278}
	234 Move X8, [X19]
	235 Move X1, [X23]
	236 Move X21, [X28]
	237 NotImplemented "Instruction LDRH not yet implemented."
	238 Compare X9, 0
	239 JumpIfEqual {246}
	240 Move X10, [X8+176]
	241 Add X10, X10, 8
	242 NotImplemented "Instruction LDUR not yet implemented."
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Subtract X9, X9, 1
	245 Add X10, X10, 16
	246 Move W2, 1
	247 Move X0, X19
	248 Call 0x1C5D788
	249 Move W9, [X10]
	250 Add W9, W9, 1
	251 Add X8, X8, W9
	252 Add X0, X8, 312
	253 Move X8, [X0]
	254 Move X4, [X0+8]
	255 Move W1, 1
	256 Move X0, X19
	257 Move X2, X21
	258 Move X3, X20
	259 NotImplemented "Instruction BLR not yet implemented."
	260 Call 0x1C17F20
	261 Move X21, X1
	262 Move X19, X0
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Move X0, X19
	265 Call 0x3EB2AD0
	266 Move X22, [X0]
	267 Call 0x3EB2AE0
	268 Move W19, W31
	269 Move X21, X31
	270 Move W8, [X19+96]
	271 Compare W8, 0
	272 JumpIfEqual {150}
	273 Move X0, X22
	274 Call 0x1C17F18
	275 Call 0x1C17F20
	276 Call 0x1C17F28
	277 Call 0x1C17F20
	278 Call 0x1C17F20
	279 Call 0x1C17F44
	280 Move X1, X31
	281 Call 0x1C17DEC
	282 Move X22, X31
	283 Move W8, [X31+28]
	284 Compare W8, 0
	285 JumpIfEqual {289}
	286 Move X0, X20
	287 Move X1, X31
	288 Call Monitor.Exit, X0
	289 Compare X22, 0
	290 JumpIfEqual {299}
	291 Move X0, X22
	292 Call 0x1C17F18
	293 Call 0x1C17F20
	294 Call 0x1C17F20
	295 Move X19, X0
	296 Move W21, W1
	297 Move X19, X0
	298 Move W21, W1
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Move X0, X19
	301 Call 0x3EB2AD0
	302 Move X19, X0
	303 Move X0, 0xB89000
	304 Move X0, [X0+2000]
	305 Call 0x1C17D08
	306 Move X8, [X19]
	307 Move X1, [X8]
	308 Call 0x1C18270
	309 Move TEMP, X0
	310 And TEMP, TEMP, 1
	311 Compare TEMP, 1
	312 JumpIfNotEqual {399}
	313 Move X21, [X19]
	314 Call 0x3EB2AE0
	315 Move X8, [X31+40]
	316 Move X19, [X8+120]
	317 Compare X21, 0
	318 JumpIfEqual {329}
	319 Move X0, 0xBCB000
	320 Move X0, [X0+3552]
	321 Call 0x1C17D08
	322 Move X8, [X21]
	323 Move X20, X0
	324 Move X9, [X8+360]
	325 Move X1, [X8+368]
	326 Move X0, X21
	327 NotImplemented "Instruction BLR not yet implemented."
	328 Move X1, X0
	329 Move X0, 0xBCB000
	330 Move X0, [X0+3552]
	331 Call 0x1C17D08
	332 Move X20, X0
	333 Move X1, X31
	334 Move X0, X20
	335 Move X2, X31
	336 Call String.Concat, X0, X1
	337 Move X20, X0
	338 Move X0, 0xB89000
	339 Move X0, [X0+2504]
	340 Call 0x1C17D08
	341 Move X8, [X0+56]
	342 Move X21, X0
	343 Compare X8, 0
	344 JumpIfNotEqual {348}
	345 Move X0, X21
	346 Call 0x1C5D6E0
	347 Move X8, [X21+56]
	348 Move X0, [X8+16]
	349 Move W8, [X0+309]
	350 Move TEMP, X8
	351 And TEMP, TEMP, 1
	352 Compare TEMP, 1
	353 JumpIfEqual {355}
	354 Call 0x1C5D684
	355 Move W8, [X0+224]
	356 Compare W8, 0
	357 JumpIfNotEqual {359}
	358 Call 0x1C17DFC
	359 Move X8, [X21+56]
	360 Move X0, [X8+16]
	361 Move W8, [X0+309]
	362 Move TEMP, X8
	363 And TEMP, TEMP, 1
	364 Compare TEMP, 1
	365 JumpIfEqual {367}
	366 Call 0x1C5D684
	367 Compare X19, 0
	368 JumpIfEqual {407}
	369 Move X8, [X0+184]
	370 Move X21, [X8]
	371 Move X0, 0xB8E000
	372 Move X0, [X0+840]
	373 Call 0x1C17D08
	374 Move X1, X0
	375 Move X8, [X19]
	376 NotImplemented "Instruction LDRH not yet implemented."
	377 Compare X9, 0
	378 JumpIfEqual {385}
	379 Move X10, [X8+176]
	380 Add X10, X10, 8
	381 NotImplemented "Instruction LDUR not yet implemented."
	382 NotImplemented "Instruction CMP not yet implemented."
	383 Subtract X9, X9, 1
	384 Add X10, X10, 16
	385 Move W2, 1
	386 Move X0, X19
	387 Call 0x1C5D788
	388 Move W9, [X10]
	389 Add W9, W9, 1
	390 Add X8, X8, W9
	391 Add X0, X8, 312
	392 Move X8, [X0]
	393 Move X4, [X0+8]
	394 Move W1, 1
	395 Move X0, X19
	396 Move X2, X20
	397 Move X3, X21
	398 NotImplemented "Instruction BLR not yet implemented."
	399 Move W0, 8
	400 Call 0x3EB2AF0
	401 Move X8, [X19]
	402 Move [X0], X8
	403 Move X1, 0x94A000
	404 Add X1, X1, 3672
	405 Move X2, X31
	406 Call 0x3EB2B00
	407 Call 0x1C17F20
	408 Move X20, X1
	409 Move X19, X0
	410 Call 0x3EB2AE0
	411 Move W21, W20
	412 Move X19, X0
	413 Move W21, W1
	414 Move W8, 1
	415 NotImplemented "Instruction CMP not yet implemented."
	416 Move X0, X19
	417 Call 0x3EB2AD0
	418 Move X8, [X0]
	419 Move [X31+8], X8
	420 Call 0x3EB2AE0
	421 Move X19, X0
	422 Add X0, X31, 8
	423 Call 0x1BC1860
	424 Move X0, X19
	425 Call 0x1D2D690
	426 Call 0x1991590

Method: System.Int32 setParam(Photon.Voice.WebRTCAudioLib/Param param, System.Int32 v)

Disassembly:
	0x03568ED8 LDR X27, [X27 + 0xD60]
	0x03568EDC MOV W23, W6
	0x03568EE0 MOV W24, W4
	0x03568EE4 MOV W21, W3
	0x03568EE8 MOV W25, W2
	0x03568EEC MOV X19, X1
	0x03568EF0 MOV X20, X0
	0x03568EF4 TBNZ X8, 0x0, 0x3568F84
	0x03568EF8 ADRP X0, 0xBB7000
	0x03568EFC LDR X0, [X0 + 0x180]
	0x03568F00 BL 0x1C16CF4
	0x03568F04 ADRP X0, 0xB90000
	0x03568F08 LDR X0, [X0 + 0x348]
	0x03568F0C BL 0x1C16CF4
	0x03568F10 ADRP X0, 0xB8B000
	0x03568F14 LDR X0, [X0 + 0x758]
	0x03568F18 BL 0x1C16CF4
	0x03568F1C ADRP X0, 0xB8B000
	0x03568F20 LDR X0, [X0 + 0x9D0]
	0x03568F24 BL 0x1C16CF4
	0x03568F28 ADRP X0, 0xBCD000
	0x03568F2C LDR X0, [X0 + 0xD58]
	0x03568F30 BL 0x1C16CF4
	0x03568F34 ADRP X0, 0xBCD000
	0x03568F38 LDR X0, [X0 + 0xD50]
	0x03568F3C BL 0x1C16CF4
	0x03568F40 ADRP X0, 0xB8B000
	0x03568F44 LDR X0, [X0 + 0xA90]
	0x03568F48 BL 0x1C16CF4
	0x03568F4C ADRP X0, 0xBCD000
	0x03568F50 LDR X0, [X0 + 0xD60]
	0x03568F54 BL 0x1C16CF4
	0x03568F58 ADRP X0, 0xBCD000
	0x03568F5C LDR X0, [X0 + 0xD68]
	0x03568F60 BL 0x1C16CF4
	0x03568F64 ADRP X0, 0xBCD000
	0x03568F68 LDR X0, [X0 + 0xD70]
	0x03568F6C BL 0x1C16CF4
	0x03568F70 ADRP X0, 0xBCD000
	0x03568F74 LDR X0, [X0 + 0xD78]
	0x03568F78 BL 0x1C16CF4
	0x03568F7C MOVZ W8, 0x1
	0x03568F80 STRB W8, [X22 + 0xDFA]
	0x03568F84 ADRP X8, 0xFFFFFFFFFD585000
	0x03568F88 LDR V0, [X8 + 0xB70]
	0x03568F8C MOVZ W8, 0x1
	0x03568F90 STRB W8, [X20 + 0x15]
	0x03568F94 STRB W8, [X20 + 0x19]
	0x03568F98 STUR D0, [X20 + 0x1C]
	0x03568F9C LDR X0, [X29]
	0x03568FA0 BL 0x1C16F10
	0x03568FA4 LDR X1, [X26]
	0x03568FA8 MOV X26, X0
	0x03568FAC BL 0x24F1248
	0x03568FB0 STR X26, [X20 + 0x28]
	0x03568FB4 LDR X0, [X28]
	0x03568FB8 BL 0x1C16F10
	0x03568FBC MOV W1, W31
	0x03568FC0 MOV X2, X31
	0x03568FC4 MOV X26, X0
	0x03568FC8 BL 0x33DCBA4
	0x03568FCC MOV X0, X20
	0x03568FD0 MOV X1, X31
	0x03568FD4 STR X26, [X20 + 0x30]
	0x03568FD8 BL 0x356AB50
	0x03568FDC LDR X0, [X27]
	0x03568FE0 LDR W8, [X0 + 0xE0]
	0x03568FE4 CBNZ W8, 0x3568FF0
	0x03568FE8 BL 0x1C16DFC
	0x03568FEC LDR X0, [X27]
	0x03568FF0 LDR X8, [X0 + 0xB8]
	0x03568FF4 LDR X8, [X8]
	0x03568FF8 CBZ X8, 0x356949C
	0x03568FFC LDR W9, [X8 + 0x18]
	0x03569000 ADRP X28, 0xB8A000
	0x03569004 ADRP X27, 0xB8A000
	0x03569008 ADRP X26, 0xB8F000
	0x0356900C LDR X28, [X28 + 0x9D0]
	0x03569010 LDR X27, [X27 + 0x758]
	0x03569014 LDR X26, [X26 + 0x348]
	0x03569018 CMP W9, 0x1
	0x0356901C B.LT 0x3569048
	0x03569020 MOV W10, W31
	0x03569024 CMP W9, W10
	0x03569028 B.EQ 0x3569498
	0x0356902C ADD X11, X8, W10, 0x2, SXTW
	0x03569030 LDR W11, [X11 + 0x20]
	0x03569034 CMP W11, W21
	0x03569038 B.EQ 0x35690D8
	0x0356903C ADD W10, W10, 0x1
	0x03569040 CMP W9, W10
	0x03569044 B.NE 0x3569024
	0x03569048 LDR X0, [X28]
	0x0356904C MOVZ W1, 0x1
	0x03569050 BL 0x1C16D6C
	0x03569054 MOV X22, X0
	0x03569058 LDR X0, [X27]
	0x0356905C ADD X1, X31, 0x1C
	0x03569060 STR W21, [X31 + 0x1C]
	0x03569064 BL 0x1C16E04
	0x03569068 CBZ X22, 0x356949C
	0x0356906C MOV X21, X0
	0x03569070 CBZ X0, 0x3569088
	0x03569074 LDR X8, [X22]
	0x03569078 MOV X0, X21
	0x0356907C LDR X1, [X8 + 0x40]
	0x03569080 BL 0x1C16E00
	0x03569084 CBZ X0, 0x35694A0
	0x03569088 LDR W8, [X22 + 0x18]
	0x0356908C CBZ W8, 0x3569498
	0x03569090 STR X21, [X22 + 0x20]
	0x03569094 CBZ X19, 0x356949C
	0x03569098 ADRP X10, 0xBCC000
	0x0356909C LDR X8, [X19]
	0x035690A0 LDR X10, [X10 + 0xD78]
	0x035690A4 LDR X1, [X26]
	0x035690A8 LDRH W9, [X8 + 0x12E]
	0x035690AC LDR X21, [X10]
	0x035690B0 CBZ X9, 0x356923C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X21, 0xE78000
	009 Move W8, [X21+3583]
	010 Move W19, W1
	011 Move X20, X0
	012 Move [X31+28], W2
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0xB8C000
	018 Move X0, [X0+2504]
	019 Call 0x1C17CF4
	020 Move X0, 0xB91000
	021 Move X0, [X0+840]
	022 Call 0x1C17CF4
	023 Move X0, 0xBCE000
	024 Move X0, [X0+3280]
	025 Call 0x1C17CF4
	026 Move X0, 0xBB9000
	027 Move X0, [X0+4024]
	028 Call 0x1C17CF4
	029 Move X0, 0xBCE000
	030 Move X0, [X0+3288]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+3583], W8
	034 Move W8, [X20+96]
	035 Compare W8, 0
	036 JumpIfEqual {38}
	037 Move W0, W31
	038 Move X8, 0xBCE000
	039 Move X8, [X8+3280]
	040 Move X21, [X20+120]
	041 Move TEMP, 0
	042 Not TEMP
	043 Move X9, TEMP
	044 Add X0, X31, 0
	045 Move X8, [X8]
	046 Move X1, X31
	047 Move [X31+16], W19
	048 Move [X31], X8
	049 Move [X31+8], X9
	050 Call Enum.ToString, X0
	051 Move X22, X0
	052 Add X0, X31, 28
	053 Move X1, X31
	054 Call Int32.ToString, X0
	055 Move X8, 0xBCE000
	056 Move X8, [X8+3288]
	057 Move X9, 0xBB9000
	058 Move X9, [X9+4024]
	059 Move X3, X0
	060 Move X8, [X8]
	061 Move X1, X22
	062 Move X2, [X9]
	063 Move X4, X31
	064 Move X0, X8
	065 Call String.Concat, X0, X1, X2, X3
	066 Move X8, 0xB8C000
	067 Move X8, [X8+2504]
	068 Move X22, X0
	069 Move X23, [X8]
	070 Move X8, [X23+56]
	071 Compare X8, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X23
	074 Call 0x1C5D6E0
	075 Move X8, [X23+56]
	076 Move X0, [X8+16]
	077 Move W8, [X0+309]
	078 Move TEMP, X8
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {83}
	082 Call 0x1C5D684
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X8, [X23+56]
	088 Move X0, [X8+16]
	089 Move W8, [X0+309]
	090 Move TEMP, X8
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {95}
	094 Call 0x1C5D684
	095 Compare X21, 0
	096 JumpIfEqual {139}
	097 Move X10, 0xB90000
	098 Move X9, [X0+184]
	099 Move X8, [X21]
	100 Move X10, [X10+840]
	101 Move X23, [X9]
	102 NotImplemented "Instruction LDRH not yet implemented."
	103 Move X1, [X10]
	104 Compare X9, 0
	105 JumpIfEqual {112}
	106 Move X10, [X8+176]
	107 Add X10, X10, 8
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Subtract X9, X9, 1
	111 Add X10, X10, 16
	112 Move W2, 1
	113 Move X0, X21
	114 Call 0x1C5D788
	115 Move W9, [X10]
	116 Add W9, W9, 1
	117 Add X8, X8, W9
	118 Add X0, X8, 312
	119 Move X8, [X0]
	120 Move X4, [X0+8]
	121 Move W1, 3
	122 Move X0, X21
	123 Move X2, X22
	124 Move X3, X23
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Move X0, [X20+88]
	127 Move W2, [X31+28]
	128 Move W1, W19
	129 Move X3, X31
	130 Call WebRTCAudioLib.webrtc_audio_processor_set_param, X0, X1, X2
	131 Move X20, [X31+64]
	132 Move X19, [X31+72]
	133 Move X22, [X31+48]
	134 Move X21, [X31+56]
	135 Move X30, [X31+32]
	136 Move X23, [X31+40]
	137 Add X31, X31, 80
	138 Return X0
	139 Call 0x1C17F20

Method: System.Void Dispose()

Disassembly:
	0x0356B40C LDR X30, [X31 + 0x30]
	0x0356B410 ADD X31, X31, 0x80
	0x0356B414 RET
	0x0356B418 BL 0x1C16F20
	0x0356B41C BL 0x1C16F28
	0x0356B420 BL 0x1C16F44
	0x0356B424 MOV X1, X31
	0x0356B428 BL 0x1C16DEC
	0x0356B42C STP X30, X23, [X31 - 0x30]!
	0x0356B430 STP X22, X21, [X31 + 0x10]
	0x0356B434 STP X20, X19, [X31 + 0x20]
	0x0356B438 LDR X8, [X0 + 0x190]
	0x0356B43C CBZ X8, 0x356B4A0
	0x0356B440 MOV X20, X4
	0x0356B444 MOV W21, W3
	0x0356B448 MOV W22, W2
	0x0356B44C MOV X19, X0
	0x0356B450 BL 0x356B4A4
	0x0356B454 MOV X23, X0
	0x0356B458 AND W8, W22, 0xFF
	0x0356B45C MOVZ W22, 0x1
	0x0356B460 AND W1, W21, 0x1
	0x0356B464 MOV X0, X19
	0x0356B468 MOV X2, X20
	0x0356B46C BFM X22, X8, 0x18, 0x7
	0x0356B470 BL 0x356AE4C
	0x0356B474 LDR X8, [X19]
	0x0356B478 MOV X3, X0
	0x0356B47C MOV X0, X19
	0x0356B480 MOV X4, X22
	0x0356B484 LDP X6, X5, [X8 + 0x1D8]
	0x0356B488 LDP X20, X19, [X31 + 0x20]
	0x0356B48C LDP X22, X21, [X31 + 0x10]
	0x0356B490 MOVZ W1, 0xCA
	0x0356B494 MOV X2, X23
	0x0356B498 LDP X30, X23, [X31], #0x30
	0x0356B49C BR X6
	0x0356B4A0 BL 0x1C16F20
	0x0356B4A4 SUB X31, X31, 0x30
	0x0356B4A8 STP X30, X21, [X31 + 0x10]
	0x0356B4AC STP X20, X19, [X31 + 0x20]
	0x0356B4B0 ADRP X19, 0xE74000
	0x0356B4B4 ADRP X21, 0xB88000
	0x0356B4B8 LDRB W8, [X19 + 0xE3D]
	0x0356B4BC LDR X21, [X21 + 0x618]
	0x0356B4C0 MOV X20, X1
	0x0356B4C4 TBNZ X8, 0x0, 0x356B500
	0x0356B4C8 ADRP X0, 0xB88000
	0x0356B4CC LDR X0, [X0 + 0x618]
	0x0356B4D0 BL 0x1C16CF4
	0x0356B4D4 ADRP X0, 0xB89000
	0x0356B4D8 LDR X0, [X0 + 0x9D8]
	0x0356B4DC BL 0x1C16CF4
	0x0356B4E0 ADRP X0, 0xBCA000
	0x0356B4E4 LDR X0, [X0 + 0xE30]
	0x0356B4E8 BL 0x1C16CF4
	0x0356B4EC ADRP X0, 0xB88000
	0x0356B4F0 LDR X0, [X0 + 0x9D0]
	0x0356B4F4 BL 0x1C16CF4
	0x0356B4F8 MOVZ W8, 0x1
	0x0356B4FC STRB W8, [X19 + 0xE3D]
	0x0356B500 LDR X0, [X21]
	0x0356B504 MOVZ W1, 0x1
	0x0356B508 BL 0x1C16D6C
	0x0356B50C CBZ X20, 0x356B608
	0x0356B510 MOV X19, X0
	0x0356B514 CBZ X0, 0x356B608
	0x0356B518 LDR W8, [X19 + 0x18]
	0x0356B51C CBZ W8, 0x356B604
	0x0356B520 LDRB W8, [X20 + 0x80]
	0x0356B524 ADRP X9, 0xB88000
	0x0356B528 LDR X9, [X9 + 0x9D0]
	0x0356B52C ADRP X21, 0xB89000
	0x0356B530 STRB W8, [X19 + 0x20]
	0x0356B534 MOVZ W1, 0x3
	0x0356B538 LDR X0, [X9]
	0x0356B53C LDR X21, [X21 + 0x9D8]
	0x0356B540 BL 0x1C16D6C
	0x0356B544 MOV X20, X0
	0x0356B548 LDR X0, [X21]
	0x0356B54C ADD X1, X31, 0xC
	0x0356B550 STRB W31, [X31 + 0xC]
	0x0356B554 BL 0x1C16E04
	0x0356B558 CBZ X20, 0x356B608
	0x0356B55C MOV X21, X0
	0x0356B560 CBZ X0, 0x356B578
	0x0356B564 LDR X8, [X20]
	0x0356B568 MOV X0, X21
	0x0356B56C LDR X1, [X8 + 0x40]
	0x0356B570 BL 0x1C16E00
	0x0356B574 CBZ X0, 0x356B60C
	0x0356B578 LDR W8, [X20 + 0x18]
	0x0356B57C CBZ W8, 0x356B604
	0x0356B580 ADRP X8, 0xBCA000
	0x0356B584 LDR X8, [X8 + 0xE30]
	0x0356B588 STR X21, [X20 + 0x20]
	0x0356B58C ADD X1, X31, 0x8
	0x0356B590 LDR X0, [X8]
	0x0356B594 MOVZ W8, 0x2
	0x0356B598 STRB W8, [X31 + 0x8]
	0x0356B59C BL 0x1C16E04
	0x0356B5A0 MOV X21, X0
	0x0356B5A4 CBZ X0, 0x356B5BC
	0x0356B5A8 LDR X8, [X20]
	0x0356B5AC MOV X0, X21
	0x0356B5B0 LDR X1, [X8 + 0x40]
	0x0356B5B4 BL 0x1C16E00
	0x0356B5B8 CBZ X0, 0x356B60C
	0x0356B5BC LDR W8, [X20 + 0x18]
	0x0356B5C0 CMP W8, 0x1
	0x0356B5C4 B.LS 0x356B604
	0x0356B5C8 LDR X8, [X20]
	0x0356B5CC STR X21, [X20 + 0x28]
	0x0356B5D0 MOV X0, X19
	0x0356B5D4 LDR X1, [X8 + 0x40]
	0x0356B5D8 BL 0x1C16E00
	0x0356B5DC CBZ X0, 0x356B60C
	0x0356B5E0 LDR W8, [X20 + 0x18]
	0x0356B5E4 CMP W8, 0x2
	0x0356B5E8 B.LS 0x356B604
	0x0356B5EC STR X19, [X20 + 0x30]
	0x0356B5F0 MOV X0, X20
	0x0356B5F4 LDP X20, X19, [X31 + 0x20]
	0x0356B5F8 LDP X30, X21, [X31 + 0x10]
	0x0356B5FC ADD X31, X31, 0x30
	0x0356B600 RET
	0x0356B604 BL 0x1C16F28
	0x0356B608 BL 0x1C16F20
	0x0356B60C BL 0x1C16F44
	0x0356B610 MOV X1, X31
	0x0356B614 BL 0x1C16DEC
	0x0356B618 MOVZ W0, 0xCA
	0x0356B61C RET
	0x0356B620 STR X30, [X31 - 0x10]!
	0x0356B624 LDR X8, [X0 + 0x190]
	0x0356B628 CBZ X8, 0x356B634
	0x0356B62C LDR X30, [X31], #0x10
	0x0356B630 B 0x356B638
	0x0356B634 BL 0x1C16F20
	0x0356B638 SUB X31, X31, 0x70
	0x0356B63C STR X30, [X31 + 0x20]
	0x0356B640 STP X26, X25, [X31 + 0x30]
	0x0356B644 STP X24, X23, [X31 + 0x40]
	0x0356B648 STP X22, X21, [X31 + 0x50]
	0x0356B64C STP X20, X19, [X31 + 0x60]
	0x0356B650 ADRP X26, 0xE74000
	0x0356B654 ADRP X19, 0xB88000
	0x0356B658 LDRB W8, [X26 + 0xE3E]
	0x0356B65C LDR X19, [X19 + 0x9D0]
	0x0356B660 MOV W20, W6
	0x0356B664 MOV X21, X5
	0x0356B668 MOV X22, X4
	0x0356B66C MOV W23, W3
	0x0356B670 MOV W24, W2
	0x0356B674 MOV W25, W1
	0x0356B678 TBNZ X8, 0x0, 0x356B6A8
	0x0356B67C ADRP X0, 0xBB0000
	0x0356B680 LDR X0, [X0 + 0x5B0]
	0x0356B684 BL 0x1C16CF4
	0x0356B688 ADRP X0, 0xB89000
	0x0356B68C LDR X0, [X0 + 0x9D8]
	0x0356B690 BL 0x1C16CF4
	0x0356B694 ADRP X0, 0xB88000
	0x0356B698 LDR X0, [X0 + 0x9D0]
	0x0356B69C BL 0x1C16CF4
	0x0356B6A0 MOVZ W8, 0x1
	0x0356B6A4 STRB W8, [X26 + 0xE3E]
	0x0356B6A8 LDR X0, [X19]
	0x0356B6AC AND W8, W24, 0xFF
	0x0356B6B0 CMP W8, W23, UXTB
	0x0356B6B4 B.NE 0x356B7C8
	0x0356B6B8 MOVZ W1, 0x4
	0x0356B6BC BL 0x1C16D6C
	0x0356B6C0 ADRP X26, 0xB89000
	0x0356B6C4 LDR X26, [X26 + 0x9D8]
	0x0356B6C8 MOV X19, X0
	0x0356B6CC ADD X1, X31, 0x2C
	0x0356B6D0 STRB W25, [X31 + 0x2C]
	0x0356B6D4 LDR X0, [X26]
	0x0356B6D8 BL 0x1C16E04
	0x0356B6DC CBZ X19, 0x356B940
	0x0356B6E0 MOV X23, X0
	0x0356B6E4 CBZ X0, 0x356B6FC
	0x0356B6E8 LDR X8, [X19]
	0x0356B6EC MOV X0, X23
	0x0356B6F0 LDR X1, [X8 + 0x40]
	0x0356B6F4 BL 0x1C16E00
	0x0356B6F8 CBZ X0, 0x356B934
	0x0356B6FC LDR W8, [X19 + 0x18]
	0x0356B700 CBZ W8, 0x356B930
	0x0356B704 STR X23, [X19 + 0x20]
	0x0356B708 LDR X0, [X26]
	0x0356B70C ADD X1, X31, 0x28
	0x0356B710 STRB W24, [X31 + 0x28]
	0x0356B714 BL 0x1C16E04
	0x0356B718 MOV X23, X0
	0x0356B71C CBZ X0, 0x356B734
	0x0356B720 LDR X8, [X19]
	0x0356B724 MOV X0, X23
	0x0356B728 LDR X1, [X8 + 0x40]
	0x0356B72C BL 0x1C16E00

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE75000
	009 Move W8, [X20+3584]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xB89000
	016 Move X0, [X0+2504]
	017 Call 0x1C17CF4
	018 Move X0, 0xB8E000
	019 Move X0, [X0+840]
	020 Call 0x1C17CF4
	021 Move X0, 0xBCB000
	022 Move X0, [X0+3560]
	023 Call 0x1C17CF4
	024 Move X0, 0xBCB000
	025 Move X0, [X0+3568]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+3584], W8
	029 Move [X31+12], W31
	030 Add X1, X31, 12
	031 Move X0, X19
	032 Move X2, X31
	033 Call Monitor.Enter, X0, X1
	034 Move W8, [X19+96]
	035 Compare W8, 0
	036 JumpIfNotEqual {183}
	037 Move W8, 1
	038 Move [X19+96], W8
	039 Move X24, 0xB89000
	040 Move X24, [X24+2504]
	041 Move X20, [X19+120]
	042 Move X21, [X24]
	043 Move X8, [X21+56]
	044 Compare X8, 0
	045 JumpIfNotEqual {49}
	046 Move X0, X21
	047 Call 0x1C5D6E0
	048 Move X8, [X21+56]
	049 Move X0, [X8+16]
	050 Move W8, [X0+309]
	051 Move TEMP, X8
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {56}
	055 Call 0x1C5D684
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X8, [X21+56]
	061 Move X0, [X8+16]
	062 Move W8, [X0+309]
	063 Move TEMP, X8
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {68}
	067 Call 0x1C5D684
	068 Compare X20, 0
	069 JumpIfEqual {202}
	070 Move X23, 0xB8E000
	071 Move X10, 0xBCB000
	072 Move X9, [X0+184]
	073 Move X23, [X23+840]
	074 Move X8, [X20]
	075 Move X10, [X10+3568]
	076 Move X21, [X9]
	077 Move X1, [X23]
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 Move X22, [X10]
	080 Compare X9, 0
	081 JumpIfEqual {88}
	082 Move X10, [X8+176]
	083 Add X10, X10, 8
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Subtract X9, X9, 1
	087 Add X10, X10, 16
	088 Move W2, 1
	089 Move X0, X20
	090 Call 0x1C5D788
	091 Move W9, [X10]
	092 Add W9, W9, 1
	093 Add X8, X8, W9
	094 Add X0, X8, 312
	095 Move X8, [X0]
	096 Move X4, [X0+8]
	097 Move W1, 3
	098 Move X0, X20
	099 Move X2, X22
	100 Move X3, X21
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move X0, [X19+48]
	103 Compare X0, 0
	104 JumpIfEqual {203}
	105 Move X1, X31
	106 Call EventWaitHandle.Set, X0
	107 Move X0, [X19+88]
	108 Move X1, X31
	109 Move X2, X31
	110 Call IntPtr.op_Inequality, X0, X1
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {183}
	115 Move W8, [X19+38]
	116 Compare W8, 0
	117 JumpIfEqual {121}
	118 Move W0, 1
	119 Move X1, X31
	120 Call Thread.Sleep, X0
	121 Move X0, [X19+88]
	122 Move X1, X31
	123 Call WebRTCAudioLib.webrtc_audio_processor_destroy, X0
	124 Move X21, [X24]
	125 Move X20, [X19+120]
	126 Move X8, [X21+56]
	127 Compare X8, 0
	128 JumpIfNotEqual {132}
	129 Move X0, X21
	130 Call 0x1C5D6E0
	131 Move X8, [X21+56]
	132 Move X0, [X8+16]
	133 Move W8, [X0+309]
	134 Move TEMP, X8
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfEqual {139}
	138 Call 0x1C5D684
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {143}
	142 Call 0x1C17DFC
	143 Move X8, [X21+56]
	144 Move X0, [X8+16]
	145 Move W8, [X0+309]
	146 Move TEMP, X8
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfEqual {151}
	150 Call 0x1C5D684
	151 Compare X20, 0
	152 JumpIfEqual {204}
	153 Move X10, 0xBCB000
	154 Move X9, [X0+184]
	155 Move X8, [X20]
	156 Move X1, [X23]
	157 Move X10, [X10+3560]
	158 Move X21, [X9]
	159 NotImplemented "Instruction LDRH not yet implemented."
	160 Move X22, [X10]
	161 Compare X9, 0
	162 JumpIfEqual {169}
	163 Move X10, [X8+176]
	164 Add X10, X10, 8
	165 NotImplemented "Instruction LDUR not yet implemented."
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Subtract X9, X9, 1
	168 Add X10, X10, 16
	169 Move W2, 1
	170 Move X0, X20
	171 Call 0x1C5D788
	172 Move W9, [X10]
	173 Add W9, W9, 1
	174 Add X8, X8, W9
	175 Add X0, X8, 312
	176 Move X8, [X0]
	177 Move X4, [X0+8]
	178 Move W1, 3
	179 Move X0, X20
	180 Move X2, X22
	181 Move X3, X21
	182 NotImplemented "Instruction BLR not yet implemented."
	183 Move X21, X31
	184 Move W8, [X31+12]
	185 Compare W8, 0
	186 JumpIfEqual {190}
	187 Move X0, X19
	188 Move X1, X31
	189 Call Monitor.Exit, X0
	190 Compare X21, 0
	191 JumpIfNotEqual {200}
	192 Move X20, [X31+48]
	193 Move X19, [X31+56]
	194 Move X22, [X31+32]
	195 Move X21, [X31+40]
	196 Move X24, [X31+16]
	197 Move X23, [X31+24]
	198 Move X30, [X31+64]
	199 Return 
	200 Move X0, X21
	201 Call 0x1C17F18
	202 Call 0x1C17F20
	203 Call 0x1C17F20
	204 Call 0x1C17F20
	205 Move X20, X0
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move X0, X20
	208 Call 0x3EB2AD0
	209 Move X21, [X0]
	210 Call 0x3EB2AE0
	211 Move X21, X31
	212 Move X20, X0
	213 Move W8, [X31+12]
	214 Compare W8, 0
	215 JumpIfEqual {219}
	216 Move X0, X19
	217 Move X1, X31
	218 Call Monitor.Exit, X0
	219 Compare X21, 0
	220 JumpIfNotEqual {223}
	221 Move X0, X20
	222 Call 0x1D2D690
	223 Move X0, X21
	224 Call 0x1C17F18
	225 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x0356B730 CBZ X0, 0x356B934
	0x0356B734 LDR W8, [X19 + 0x18]
	0x0356B738 CMP W8, 0x1
	0x0356B73C B.LS 0x356B930
	0x0356B740 STR X23, [X19 + 0x28]
	0x0356B744 ADRP X8, 0xBB0000
	0x0356B748 LDR X8, [X8 + 0x5B0]
	0x0356B74C ADD X1, X31, 0x10
	0x0356B750 STP X22, X21, [X31 + 0x10]
	0x0356B754 LDR X0, [X8]
	0x0356B758 BL 0x1C16E04
	0x0356B75C MOV X21, X0
	0x0356B760 CBZ X0, 0x356B778
	0x0356B764 LDR X8, [X19]
	0x0356B768 MOV X0, X21
	0x0356B76C LDR X1, [X8 + 0x40]
	0x0356B770 BL 0x1C16E00
	0x0356B774 CBZ X0, 0x356B934
	0x0356B778 LDR W8, [X19 + 0x18]
	0x0356B77C CMP W8, 0x2
	0x0356B780 B.LS 0x356B930
	0x0356B784 STR X21, [X19 + 0x30]
	0x0356B788 LDR X0, [X26]
	0x0356B78C ADD X1, X31, 0xC
	0x0356B790 STRB W20, [X31 + 0xC]
	0x0356B794 BL 0x1C16E04
	0x0356B798 MOV X20, X0
	0x0356B79C CBZ X0, 0x356B7B4
	0x0356B7A0 LDR X8, [X19]
	0x0356B7A4 MOV X0, X20
	0x0356B7A8 LDR X1, [X8 + 0x40]
	0x0356B7AC BL 0x1C16E00
	0x0356B7B0 CBZ X0, 0x356B934
	0x0356B7B4 LDR W8, [X19 + 0x18]
	0x0356B7B8 CMP W8, 0x3
	0x0356B7BC B.LS 0x356B930
	0x0356B7C0 STR X20, [X19 + 0x38]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE75000
	007 Move X22, 0xB8A000
	008 Move X19, 0xBCB000
	009 Move X20, 0xBCB000
	010 Move W8, [X21+3585]
	011 Move X22, [X22+3672]
	012 Move X19, [X19+3576]
	013 Move X20, [X20+3424]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xB8A000
	019 Move X0, [X0+3672]
	020 Call 0x1C17CF4
	021 Move X0, 0xBCB000
	022 Move X0, [X0+3576]
	023 Call 0x1C17CF4
	024 Move X0, 0xBCB000
	025 Move X0, [X0+3424]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3585], W8
	029 Move X0, [X22]
	030 Move W1, 4
	031 Call 0x1C17D6C
	032 Move X1, [X19]
	033 Move X2, X31
	034 Move X19, X0
	035 Call RuntimeHelpers.InitializeArray, X0, X1
	036 Move X8, [X20]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X8, [X8+184]
	040 Move [X8], X19
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+48]
	044 Return 

