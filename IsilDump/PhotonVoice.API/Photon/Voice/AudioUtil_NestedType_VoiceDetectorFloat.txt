Type: Photon.Voice.AudioUtil/VoiceDetectorFloat

Method: System.Void .ctor(System.Int32 samplingRate, System.Int32 numChannels)

Disassembly:
	0x03555B54 RET
	0x03555B58 STR X30, [X31 - 0x30]!
	0x03555B5C STP X22, X21, [X31 + 0x10]
	0x03555B60 STP X20, X19, [X31 + 0x20]
	0x03555B64 ADRP X21, 0xE8A000
	0x03555B68 ADRP X22, 0xBE0000
	0x03555B6C LDRB W8, [X21 + 0xD82]
	0x03555B70 LDR X22, [X22 + 0x3D8]
	0x03555B74 MOV X20, X1
	0x03555B78 MOV X19, X0
	0x03555B7C TBNZ X8, 0x0, 0x3555B94
	0x03555B80 ADRP X0, 0xBE0000
	0x03555B84 LDR X0, [X0 + 0x3D8]
	0x03555B88 BL 0x1C16CF4
	0x03555B8C MOVZ W8, 0x1
	0x03555B90 STRB W8, [X21 + 0xD82]
	0x03555B94 LDR X21, [X22]
	0x03555B98 MOV X0, X19
	0x03555B9C MOV X1, X20
	0x03555BA0 BL 0x3555758
	0x03555BA4 STR X21, [X19 + 0x30]
	0x03555BA8 LDP X20, X19, [X31 + 0x20]
	0x03555BAC LDP X22, X21, [X31 + 0x10]
	0x03555BB0 LDR X30, [X31], #0x30
	0x03555BB4 RET
	0x03555BB8 MOV W0, W31
	0x03555BBC RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xE8B000
	008 Move X23, 0xBE1000
	009 Move W8, [X22+3437]
	010 Move X23, [X23+856]
	011 Move W20, W2
	012 Move W21, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xBE1000
	019 Move X0, [X0+856]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3437], W8
	023 Move X3, [X23]
	024 Move X0, X19
	025 Move W1, W21
	026 Move W2, W20
	027 Call VoiceDetector`1<Single>..ctor, X0, X1, X2
	028 Move W8, 0x3F800000
	029 Move [X19+20], W8
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Move X23, [X31+56]
	036 Return 

Method: System.Single[] Process(System.Single[] buffer)

Disassembly:
	0x03555BC0 MOV X1, X31
	0x03555BC4 B 0x33BDD8C
	0x03555BC8 STR X30, [X31 - 0x20]!
	0x03555BCC STP X20, X19, [X31 + 0x10]
	0x03555BD0 ADRP X19, 0xE8A000
	0x03555BD4 ADRP X20, 0xBE0000
	0x03555BD8 LDRB W8, [X19 + 0xD83]
	0x03555BDC LDR X20, [X20 + 0x3E0]
	0x03555BE0 TBNZ X8, 0x0, 0x3555BF8
	0x03555BE4 ADRP X0, 0xBE0000
	0x03555BE8 LDR X0, [X0 + 0x3E0]
	0x03555BEC BL 0x1C16CF4
	0x03555BF0 MOVZ W8, 0x1
	0x03555BF4 STRB W8, [X19 + 0xD83]
	0x03555BF8 LDR X0, [X20]
	0x03555BFC LDP X20, X19, [X31 + 0x10]
	0x03555C00 LDR X30, [X31], #0x20
	0x03555C04 RET
	0x03555C08 RET
	0x03555C0C MOVZ W8, 0x1
	0x03555C10 STR X1, [X0]
	0x03555C14 STP W2, W3, [X0 + 0x8]
	0x03555C18 STRB W4, [X0 + 0x31]
	0x03555C1C STRB W5, [X0 + 0x32]
	0x03555C20 STR X6, [X0 + 0x10]
	0x03555C24 STRB W31, [X0 + 0x18]
	0x03555C28 STP X31, X31, [X0 + 0x20]
	0x03555C2C STR W8, [X0 + 0x1C]
	0x03555C30 STRB W31, [X0 + 0x30]
	0x03555C34 RET
	0x03555C38 STR X1, [X0]
	0x03555C3C STR W31, [X0 + 0x8]
	0x03555C40 CBZ X1, 0x3555C4C
	0x03555C44 LDR W8, [X1 + 0x18]
	0x03555C48 B 0x3555C50
	0x03555C4C MOV W8, W31
	0x03555C50 STR W8, [X0 + 0xC]
	0x03555C54 MOVZ W8, 0x1
	0x03555C58 STRB W2, [X0 + 0x31]
	0x03555C5C STRB W3, [X0 + 0x32]
	0x03555C60 STR X31, [X0 + 0x10]
	0x03555C64 STRB W31, [X0 + 0x18]
	0x03555C68 STP X31, X31, [X0 + 0x20]
	0x03555C6C STR W8, [X0 + 0x1C]
	0x03555C70 STRB W31, [X0 + 0x30]
	0x03555C74 RET
	0x03555C78 LDR X8, [X1 + 0x30]
	0x03555C7C LDP V2, V0, [X1 + 0x10]
	0x03555C80 LDR V1, [X1]
	0x03555C84 STR X8, [X0 + 0x30]
	0x03555C88 STP V2, V0, [X0 + 0x10]
	0x03555C8C STR V1, [X0]
	0x03555C90 STP W2, W3, [X0 + 0x8]
	0x03555C94 STRB W4, [X0 + 0x31]
	0x03555C98 STRB W5, [X0 + 0x32]
	0x03555C9C RET
	0x03555CA0 LDR W8, [X0 + 0x1C]
	0x03555CA4 ADD W8, W8, 0x1
	0x03555CA8 STR W8, [X0 + 0x1C]
	0x03555CAC RET
	0x03555CB0 STR X30, [X31 - 0x20]!
	0x03555CB4 STP X20, X19, [X31 + 0x10]
	0x03555CB8 ADRP X20, 0xE8A000
	0x03555CBC LDRB W8, [X20 + 0xD84]
	0x03555CC0 MOV X19, X0
	0x03555CC4 TBNZ X8, 0x0, 0x3555CDC
	0x03555CC8 ADRP X0, 0xBC7000
	0x03555CCC LDR X0, [X0 + 0xE18]
	0x03555CD0 BL 0x1C16CF4
	0x03555CD4 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xE8B000
	008 Move W8, [X21+3438]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xBE1000
	016 Move X0, [X0+864]
	017 Call 0x1C17CF4
	018 Move X0, 0xBE1000
	019 Move X0, [X0+872]
	020 Call 0x1C17CF4
	021 Move X0, 0xBE1000
	022 Move X0, [X0+880]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3438], W8
	026 Move W8, [X20+16]
	027 Compare W8, 0
	028 JumpIfEqual {65}
	029 Compare X19, 0
	030 JumpIfEqual {74}
	031 Move X8, [X19+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X23, 0xBE1000
	034 Move X23, [X23+880]
	035 Move X21, X31
	036 And X8, X8, 0
	037 Add X22, X19, 32
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move V0, [X22]
	040 Move V1, [X20+24]
	041 NotImplemented "Instruction FCMP not yet implemented."
	042 Move X2, [X23]
	043 Move W1, 1
	044 Move X0, X20
	045 Call VoiceDetector`1<Single>.set_Detected, X0, X1
	046 Move W8, W31
	047 Move W8, [X20+52]
	048 Add W8, W8, 1
	049 Move [X20+52], W8
	050 Move W8, [X19+24]
	051 Add X21, X21, 1
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move W8, [X20+52]
	054 Move W9, [X20+60]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X8, 0xBE1000
	057 Move X8, [X8+880]
	058 Move X0, X20
	059 Move W1, W31
	060 Move X2, [X8]
	061 Call VoiceDetector`1<Single>.set_Detected, X0, X1
	062 Move W8, [X20+28]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 NotImplemented "Instruction CSEL not yet implemented."
	065 Move X0, X19
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Move X23, [X31+56]
	072 Return X0
	073 Call 0x1C17F28
	074 Call 0x1C17F20

