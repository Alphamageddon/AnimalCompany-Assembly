Type: Photon.Voice.Framer`1

Method: System.Void .ctor(System.Int32 frameSize)

Disassembly:
	0x02D261FC TBZ X21, 0x0, 0x2D2621C
	0x02D26200 CBZ X19, 0x2D26244
	0x02D26204 LDR X8, [X20 + 0x20]
	0x02D26208 LDR X8, [X8 + 0xC0]
	0x02D2620C LDR X2, [X8 + 0x40]
	0x02D26210 MOV X0, X19
	0x02D26214 BL 0x26A438C
	0x02D26218 B 0x2D26234
	0x02D2621C CBZ X19, 0x2D26248
	0x02D26220 LDR X8, [X20 + 0x20]
	0x02D26224 LDR X8, [X8 + 0xC0]
	0x02D26228 LDR X2, [X8 + 0x48]
	0x02D2622C MOV X0, X19
	0x02D26230 BL 0x26A4428
	0x02D26234 LDP X20, X19, [X31 + 0x10]
	0x02D26238 LDP X30, X21, [X31], #0x20
	0x02D2623C RET
	0x02D26240 BL 0x1C16F20
	0x02D26244 BL 0x1C16F20
	0x02D26248 BL 0x1C16F20
	0x02D2624C B 0x2D2625C
	0x02D26250 B 0x2D2625C
	0x02D26254 B 0x2D2625C
	0x02D26258 B 0x2D2625C
	0x02D2625C MOV X20, X0
	0x02D26260 CMP W1, 0x1
	0x02D26264 B.NE 0x2D26328
	0x02D26268 MOV X0, X20
	0x02D2626C BL 0x3EB1AD0
	0x02D26270 MOV X20, X0
	0x02D26274 ADRP X0, 0x13D5000
	0x02D26278 LDR X0, [X0 + 0x8A8]
	0x02D2627C BL 0x1C16D08
	0x02D26280 LDR X8, [X20]
	0x02D26284 LDR X1, [X8]
	0x02D26288 BL 0x1C17270
	0x02D2628C TBZ X0, 0x0, 0x2D262BC
	0x02D26290 LDR X20, [X20]
	0x02D26294 BL 0x3EB1AE0
	0x02D26298 CBZ X20, 0x2D262FC
	0x02D2629C CBZ X19, 0x2D262FC
	0x02D262A0 LDR X1, [X20 + 0x90]
	0x02D262A4 MOV X0, X19
	0x02D262A8 MOV X2, X20
	0x02D262AC LDP X20, X19, [X31 + 0x10]
	0x02D262B0 MOV X3, X31
	0x02D262B4 LDP X30, X21, [X31], #0x20
	0x02D262B8 B 0x33EDA6C
	0x02D262BC ADRP X0, 0x13CD000
	0x02D262C0 LDR X0, [X0 + 0x7D0]
	0x02D262C4 BL 0x1C16D08
	0x02D262C8 LDR X8, [X20]
	0x02D262CC LDR X1, [X8]
	0x02D262D0 BL 0x1C17270
	0x02D262D4 TBZ X0, 0x0, 0x2D26300
	0x02D262D8 LDR X20, [X20]
	0x02D262DC BL 0x3EB1AE0
	0x02D262E0 CBZ X19, 0x2D262FC
	0x02D262E4 MOV X0, X19
	0x02D262E8 MOV X1, X20
	0x02D262EC LDP X20, X19, [X31 + 0x10]
	0x02D262F0 MOV X2, X31
	0x02D262F4 LDP X30, X21, [X31], #0x20
	0x02D262F8 B 0x33EE46C
	0x02D262FC BL 0x1C16F20
	0x02D26300 MOVZ W0, 0x8
	0x02D26304 BL 0x3EB1AF0
	0x02D26308 LDR X8, [X20]
	0x02D2630C STR X8, [X0]
	0x02D26310 ADRP X1, 0x118E000
	0x02D26314 ADD X1, X1, 0xE58
	0x02D26318 MOV X2, X31
	0x02D2631C BL 0x3EB1B00
	0x02D26320 MOV X20, X0
	0x02D26324 BL 0x3EB1AE0
	0x02D26328 MOV X0, X20
	0x02D2632C BL 0x1D2C690
	0x02D26330 BL 0x1990590
	0x02D26334 STP X30, X21, [X31 - 0x20]!
	0x02D26338 STP X20, X19, [X31 + 0x10]
	0x02D2633C ADRP X20, 0x16B5000
	0x02D26340 ADRP X21, 0x13F5000
	0x02D26344 LDRB W8, [X20 + 0x7F2]
	0x02D26348 LDR X21, [X21 + 0x720]
	0x02D2634C MOV X19, X0
	0x02D26350 TBNZ X8, 0x0, 0x2D26368
	0x02D26354 ADRP X0, 0x13F5000
	0x02D26358 LDR X0, [X0 + 0x720]
	0x02D2635C BL 0x1C16CF4
	0x02D26360 MOVZ W8, 0x1
	0x02D26364 STRB W8, [X20 + 0x7F2]
	0x02D26368 LDR X0, [X21]
	0x02D2636C BL 0x1C16F10
	0x02D26370 LDR X8, [X19 + 0x20]
	0x02D26374 MOV X20, X0
	0x02D26378 LDRB W9, [X8 + 0x135]
	0x02D2637C TBNZ X9, 0x0, 0x2D2638C
	0x02D26380 MOV X0, X8
	0x02D26384 BL 0x1C5C684
	0x02D26388 MOV X8, X0
	0x02D2638C LDR X8, [X8 + 0xC0]
	0x02D26390 MOV X0, X20
	0x02D26394 MOV X1, X31
	0x02D26398 MOV X3, X31
	0x02D2639C LDR X2, [X8 + 0x50]
	0x02D263A0 BL 0x3316570
	0x02D263A4 LDR X0, [X19 + 0x20]
	0x02D263A8 LDRB W8, [X0 + 0x135]
	0x02D263AC TBNZ X8, 0x0, 0x2D263B4
	0x02D263B0 BL 0x1C5C684
	0x02D263B4 LDR X8, [X0 + 0xC0]
	0x02D263B8 LDR X0, [X8 + 0x58]
	0x02D263BC LDRB W8, [X0 + 0x135]
	0x02D263C0 TBNZ X8, 0x0, 0x2D263C8
	0x02D263C4 BL 0x1C5C684
	0x02D263C8 LDR X8, [X0 + 0xB8]
	0x02D263CC STR X20, [X8]
	0x02D263D0 LDR X0, [X19 + 0x20]
	0x02D263D4 LDRB W8, [X0 + 0x135]
	0x02D263D8 TBNZ X8, 0x0, 0x2D263E0
	0x02D263DC BL 0x1C5C684
	0x02D263E0 LDR X8, [X0 + 0xC0]
	0x02D263E4 LDR X0, [X8 + 0x58]
	0x02D263E8 LDRB W8, [X0 + 0x135]
	0x02D263EC TBNZ X8, 0x0, 0x2D263FC
	0x02D263F0 LDP X20, X19, [X31 + 0x10]
	0x02D263F4 LDP X30, X21, [X31], #0x20
	0x02D263F8 B 0x1C5C684
	0x02D263FC LDP X20, X19, [X31 + 0x10]
	0x02D26400 LDP X30, X21, [X31], #0x20
	0x02D26404 RET
	0x02D26408 STP X30, X23, [X31 - 0x30]!
	0x02D2640C STP X22, X21, [X31 + 0x10]
	0x02D26410 STP X20, X19, [X31 + 0x20]
	0x02D26414 LDR X8, [X3 + 0x20]
	0x02D26418 MOV X21, X1
	0x02D2641C MOV X19, X3
	0x02D26420 MOV X20, X2
	0x02D26424 LDR X8, [X8 + 0xC0]
	0x02D26428 MOV X22, X0
	0x02D2642C LDR X1, [X8]
	0x02D26430 LDR X8, [X1]
	0x02D26434 BLR X8
	0x02D26438 LDR X8, [X19 + 0x20]
	0x02D2643C MOVZ W1, 0x8
	0x02D26440 LDR X8, [X8 + 0xC0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X22, 0x16B6000
	008 Move W8, [X22+2028]
	009 Move X19, X2
	010 Move W21, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x13CF000
	017 Move X0, [X0+2520]
	018 Call 0x1C17CF4
	019 Move X0, 0x13D2000
	020 Move X0, [X0+1576]
	021 Call 0x1C17CF4
	022 Move X0, 0x13CE000
	023 Move X0, [X0+2704]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+2028], W8
	027 Move X0, X20
	028 Move X1, X31
	029 Call Object..ctor, X0
	030 Move X8, [X19+32]
	031 Move X8, [X8+192]
	032 Move X0, [X8]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Move W1, W21
	040 Call 0x1C17D6C
	041 Move [X20+16], X0
	042 Move X8, [X19+32]
	043 Move X8, [X8+192]
	044 Move X0, [X8]
	045 Move W8, [X0+309]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {51}
	050 Call 0x1C5D684
	051 Move W1, 1
	052 Call 0x1C17D6C
	053 Compare X0, 0
	054 JumpIfEqual {131}
	055 Move W8, [X0+24]
	056 Move X21, X0
	057 Compare W8, 0
	058 JumpIfEqual {130}
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Add X1, X31, 8
	061 NotImplemented "Instruction STRH not yet implemented."
	062 Move X8, [X19+32]
	063 Move X8, [X8+192]
	064 Move X0, [X8+24]
	065 Call 0x1C17E04
	066 Compare X0, 0
	067 JumpIfEqual {73}
	068 Move X8, 0x13CF000
	069 Move X8, [X8+2520]
	070 Move X9, [X0]
	071 Move X8, [X8]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move W8, [X21+24]
	074 Compare W8, 0
	075 JumpIfEqual {130}
	076 NotImplemented "Instruction LDRH not yet implemented."
	077 Add X1, X31, 8
	078 NotImplemented "Instruction STRH not yet implemented."
	079 Move X8, [X19+32]
	080 Move X8, [X8+192]
	081 Move X0, [X8+24]
	082 Call 0x1C17E04
	083 Compare X0, 0
	084 JumpIfEqual {90}
	085 Move X8, 0x13D2000
	086 Move X8, [X8+1576]
	087 Move X9, [X0]
	088 Move X8, [X8]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move W8, [X21+24]
	091 Compare W8, 0
	092 JumpIfEqual {130}
	093 NotImplemented "Instruction LDRH not yet implemented."
	094 Add X1, X31, 8
	095 NotImplemented "Instruction STRH not yet implemented."
	096 Move X8, [X19+32]
	097 Move X8, [X8+192]
	098 Move X0, [X8+24]
	099 Call 0x1C17E04
	100 Compare X0, 0
	101 JumpIfEqual {118}
	102 Move X8, 0x13CE000
	103 Move X8, [X8+2704]
	104 Move X9, [X0]
	105 Move X8, [X8]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move W8, 4
	108 Move W8, 1
	109 Move W8, 2
	110 Move [X20+24], W8
	111 Move X20, [X31+64]
	112 Move X19, [X31+72]
	113 Move X22, [X31+48]
	114 Move X21, [X31+56]
	115 Move X30, [X31+32]
	116 Add X31, X31, 80
	117 Return 
	118 Move X8, [X19+32]
	119 Move X8, [X8+192]
	120 Move X0, [X8+24]
	121 Move W8, [X0+309]
	122 Move TEMP, X8
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfEqual {127}
	126 Call 0x1C5D684
	127 Move W8, [X21+24]
	128 Compare W8, 0
	129 JumpIfNotEqual {132}
	130 Call 0x1C17F28
	131 Call 0x1C17F20
	132 Move TEMP, 0
	133 Not TEMP
	134 Move X8, TEMP
	135 Move [X31+8], X0
	136 Move [X31+16], X8
	137 NotImplemented "Instruction LDRH not yet implemented."
	138 Add X0, X31, 8
	139 Move X1, X31
	140 NotImplemented "Instruction STRH not yet implemented."
	141 Call "il2cpp_vm_object_is_inst", X0
	142 Move X21, X0
	143 Move X0, 0x13F9000
	144 Move X0, [X0+3520]
	145 Call 0x1C17D08
	146 Move X20, X0
	147 Move X1, X31
	148 Compare X21, 0
	149 JumpIfEqual {156}
	150 Move X8, [X21]
	151 Move X0, X21
	152 Move X9, [X8+360]
	153 Move X1, [X8+368]
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Move X1, X0
	156 Move X0, X20
	157 Move X2, X31
	158 Call String.Concat, X0, X1
	159 Move X20, X0
	160 Move X0, 0x13CE000
	161 Move X0, [X0+2000]
	162 Call 0x1C17D08
	163 Call 0x1C17F10
	164 Move X1, X20
	165 Move X2, X31
	166 Move X21, X0
	167 Call Exception..ctor, X0, X1
	168 Move X0, X21
	169 Move X1, X19
	170 Call 0x1C17DEC

Method: System.Collections.Generic.IEnumerable`1<T[]> Frame(T[] buf)

Disassembly:
	0x02D26444 LDR X8, [X8 + 0x18]
	0x02D26448 LDR X8, [X8 + 0x80]
	0x02D2644C ADD X23, X8, 0x20
	0x02D26450 MOV X0, X23
	0x02D26454 BL 0x1C16D14
	0x02D26458 MOV X0, X22
	0x02D2645C MOV X1, X23
	0x02D26460 BL 0x1C16D18
	0x02D26464 STR X21, [X0]
	0x02D26468 LDR X8, [X19 + 0x20]
	0x02D2646C MOVZ W1, 0x8
	0x02D26470 LDR X8, [X8 + 0xC0]
	0x02D26474 LDR X8, [X8 + 0x18]
	0x02D26478 LDR X8, [X8 + 0x80]
	0x02D2647C ADD X19, X8, 0x40
	0x02D26480 MOV X0, X19
	0x02D26484 BL 0x1C16D14
	0x02D26488 MOV X0, X22
	0x02D2648C MOV X1, X19
	0x02D26490 BL 0x1C16D18
	0x02D26494 STR X20, [X0]
	0x02D26498 LDP X20, X19, [X31 + 0x20]
	0x02D2649C LDP X22, X21, [X31 + 0x10]
	0x02D264A0 LDP X30, X23, [X31], #0x30
	0x02D264A4 RET
	0x02D264A8 SUB X31, X31, 0x50
	0x02D264AC STP X30, X25, [X31 + 0x10]
	0x02D264B0 STP X24, X23, [X31 + 0x20]
	0x02D264B4 STP X22, X21, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X21, X2
	007 Move X19, X1
	008 Move X20, X0
	009 Move X8, [X8+192]
	010 Move X8, [X8+40]
	011 Move W9, [X8+309]
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X8
	017 Call 0x1C5D684
	018 Move X8, X0
	019 Move X0, X8
	020 Call 0x1C17F10
	021 Move X8, [X21+32]
	022 Move TEMP, 1
	023 Not TEMP
	024 Move W1, TEMP
	025 Move X21, X0
	026 Move X8, [X8+192]
	027 Move X2, [X8+48]
	028 Call 0x239685C, X0, X1
	029 Compare X21, 0
	030 JumpIfEqual {39}
	031 Move [X21+40], X20
	032 Move [X21+56], X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X0, X21
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0
	039 Call 0x1C17F20

