Type: Photon.Voice.AudioUtil/TempoUp`1

Method: System.Void Begin(System.Int32 channels, System.Int32 changePerc, System.Int32 skipGroup)

Disassembly:
	0x026B0EA4 CMP W8, 0x2
	0x026B0EA8 B.NE 0x26B0FCC
	0x026B0EAC CBZ X1, 0x26B1090
	0x026B0EB0 LDR W8, [X1 + 0x18]
	0x026B0EB4 CMP W8, 0x1
	0x026B0EB8 B.LT 0x26B1064
	0x026B0EBC MOV W9, W31

ISIL:
	001 Move W8, 100
	002 NotImplemented "Instruction SDIV not yet implemented."
	003 Move [X0+20], W1
	004 Move [X0+24], W3
	005 Move [X0+32], X31
	006 Move [X0+28], W8
	007 Move [X0+40], W31
	008 Return 

Method: System.Int32 Process(T[] s, T[] d)

Disassembly:
	0x026B0EC0 CMP W9, W8
	0x026B0EC4 B.CS 0x26B108C
	0x026B0EC8 ADD W10, W9, 0x1
	0x026B0ECC CMP W10, W8
	0x026B0ED0 B.CS 0x26B108C
	0x026B0ED4 ADD X11, X1, 0x20
	0x026B0ED8 LDR V0, [X11, W9, SXTW]
	0x026B0EDC LDR V1, [X11, W10, SXTW]
	0x026B0EE0 FADD S0, S0, S1
	0x026B0EE4 FCMP S0, 0x0
	0x026B0EE8 B.PL 0x26B0EF4
	0x026B0EEC MOVN W10, 0x0
	0x026B0EF0 B 0x26B0F2C
	0x026B0EF4 LDR W10, [X0 + 0x20]
	0x026B0EF8 TBZ X10, 0x1F, 0x26B0F30
	0x026B0EFC LDR W10, [X0 + 0x24]
	0x026B0F00 LDP W11, W12, [X0 + 0x18]
	0x026B0F04 ADD W10, W10, 0x1
	0x026B0F08 MUL W12, W12, W11
	0x026B0F0C SDIV W13, W10, W12
	0x026B0F10 STR W10, [X0 + 0x24]
	0x026B0F14 MSUB W10, W13, W12, W10
	0x026B0F18 CMP W10, W11
	0x026B0F1C CSET W10, LT
	0x026B0F20 STRB W10, [X0 + 0x28]
	0x026B0F24 B.GE 0x26B1074
	0x026B0F28 MOV W10, W31
	0x026B0F2C STR W10, [X0 + 0x20]
	0x026B0F30 ADD W9, W9, 0x2
	0x026B0F34 CMP W9, W8
	0x026B0F38 B.LT 0x26B0EC0
	0x026B0F3C B 0x26B1064
	0x026B0F40 CBZ X1, 0x26B1090
	0x026B0F44 LDR X9, [X1 + 0x18]
	0x026B0F48 MOV W8, W31
	0x026B0F4C CMP W9, 0x1
	0x026B0F50 B.LT 0x26B1068
	0x026B0F54 AND X9, X9, 0x0
	0x026B0F58 CBZ X9, 0x26B1068
	0x026B0F5C MOV X8, X31
	0x026B0F60 ADD X10, X1, 0x20
	0x026B0F64 CMP X9, X8
	0x026B0F68 B.EQ 0x26B108C
	0x026B0F6C LDR V0, [X10, X8, LSL #2]
	0x026B0F70 FCMP S0, 0x0
	0x026B0F74 B.PL 0x26B0F80
	0x026B0F78 MOVN W11, 0x0
	0x026B0F7C B 0x26B0FB8
	0x026B0F80 LDR W11, [X0 + 0x20]
	0x026B0F84 TBZ X11, 0x1F, 0x26B0FBC
	0x026B0F88 LDR W11, [X0 + 0x24]
	0x026B0F8C LDP W12, W13, [X0 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1D2B000
	007 Move W8, [X22+971]
	008 Move X20, X2
	009 Move X21, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x1A6C000
	016 Move X0, [X0+2080]
	017 Call 0x1C17CF4
	018 Move X0, 0x1A44000
	019 Move X0, [X0+1592]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+971], W8
	023 Move W8, [X19+16]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X22, 0x1A6C000
	026 Move X22, [X22+2080]
	027 Move X0, X21
	028 Move X1, [X22]
	029 Call 0x1C17E00
	030 Move X1, [X22]
	031 Move X21, X0
	032 Move X0, X20
	033 Call 0x1C17E00
	034 Move X2, X0
	035 Move X0, X19
	036 Move X1, X21
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Call 0x26B14E4, X0, X1, X2
	043 Return X0
	044 Move X22, 0x1A44000
	045 Move X22, [X22+1592]
	046 Move X0, X21
	047 Move X1, [X22]
	048 Call 0x1C17E00
	049 Move X1, [X22]
	050 Move X21, X0
	051 Move X0, X20
	052 Call 0x1C17E00
	053 Move X2, X0
	054 Move X0, X19
	055 Move X1, X21
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 Call 0x26B1040, X0, X1, X2
	062 Return X0

Method: System.Int32 End(T[] s)

Disassembly:
	0x026B0F90 ADD W11, W11, 0x1
	0x026B0F94 MUL W13, W13, W12
	0x026B0F98 SDIV W14, W11, W13
	0x026B0F9C STR W11, [X0 + 0x24]
	0x026B0FA0 MSUB W11, W14, W13, W11
	0x026B0FA4 CMP W11, W12
	0x026B0FA8 CSET W11, LT
	0x026B0FAC STRB W11, [X0 + 0x28]
	0x026B0FB0 B.GE 0x26B1068
	0x026B0FB4 MOV W11, W31
	0x026B0FB8 STR W11, [X0 + 0x20]
	0x026B0FBC ADD X8, X8, 0x1
	0x026B0FC0 CMP X9, X8
	0x026B0FC4 B.NE 0x26B0F64
	0x026B0FC8 B 0x26B1064
	0x026B0FCC CBZ X1, 0x26B1090
	0x026B0FD0 LDR W9, [X1 + 0x18]
	0x026B0FD4 CMP W9, 0x1
	0x026B0FD8 B.LT 0x26B1064
	0x026B0FDC MOV W10, W31
	0x026B0FE0 CMP W10, W9
	0x026B0FE4 B.CS 0x26B108C
	0x026B0FE8 ADD W11, W10, 0x1
	0x026B0FEC CMP W11, W9
	0x026B0FF0 B.CS 0x26B108C
	0x026B0FF4 CMP W10, W8
	0x026B0FF8 B.LT 0x26B108C
	0x026B0FFC ADD X12, X1, 0x20
	0x026B1000 LDR V0, [X12, W10, SXTW]
	0x026B1004 LDR V1, [X12, W11, SXTW]
	0x026B1008 FADD S0, S0, S1
	0x026B100C FCMP S0, 0x0
	0x026B1010 B.PL 0x26B101C
	0x026B1014 MOVN W11, 0x0
	0x026B1018 B 0x26B1054
	0x026B101C LDR W11, [X0 + 0x20]
	0x026B1020 TBZ X11, 0x1F, 0x26B1058
	0x026B1024 LDR W11, [X0 + 0x24]
	0x026B1028 LDP W12, W13, [X0 + 0x18]
	0x026B102C ADD W11, W11, 0x1
	0x026B1030 MUL W13, W13, W12
	0x026B1034 SDIV W14, W11, W13
	0x026B1038 STR W11, [X0 + 0x24]
	0x026B103C MSUB W11, W14, W13, W11

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1D2B000
	006 Move W8, [X21+972]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x1A6C000
	014 Move X0, [X0+2080]
	015 Call 0x1C17CF4
	016 Move X0, 0x1A44000
	017 Move X0, [X0+1592]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+972], W8
	021 Move W8, [X19+40]
	022 Compare W8, 0
	023 JumpIfEqual {39}
	024 Move W8, [X19+16]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, 0x1A6C000
	027 Move X8, [X8+2080]
	028 Move X0, X20
	029 Move X1, [X8]
	030 Call 0x1C17E00
	031 Move X1, X0
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Call 0x26B1778, X0, X1
	038 Return X0
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move W0, W31
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return X0
	045 Move X8, 0x1A43000
	046 Move X8, [X8+1592]
	047 Move X0, X20
	048 Move X1, [X8]
	049 Call 0x1C17E00
	050 Move X1, X0
	051 Move X0, X19
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Call 0x26B12E4, X0, X1
	057 Return X0

Method: System.Int32 processFloat(System.Single[] s, System.Single[] d)

Disassembly:
	0x026B1040 CMP W11, W12
	0x026B1044 CSET W11, LT
	0x026B1048 STRB W11, [X0 + 0x28]
	0x026B104C B.GE 0x26B1084
	0x026B1050 MOV W11, W31
	0x026B1054 STR W11, [X0 + 0x20]
	0x026B1058 ADD W10, W10, W8
	0x026B105C CMP W10, W9
	0x026B1060 B.LT 0x26B0FE0
	0x026B1064 MOV W8, W31
	0x026B1068 MOV W0, W8
	0x026B106C LDR X30, [X31], #0x10
	0x026B1070 RET
	0x026B1074 CMP W9, 0x0
	0x026B1078 CINC W8, W9, LT
	0x026B107C SBFM W8, W8, 0x1, 0x1F
	0x026B1080 B 0x26B1068
	0x026B1084 SDIV W8, W10, W8
	0x026B1088 B 0x26B1068
	0x026B108C BL 0x1C16F28
	0x026B1090 BL 0x1C16F20
	0x026B1094 STR X30, [X31 - 0x10]!
	0x026B1098 LDR W8, [X0 + 0x14]
	0x026B109C CMP W8, 0x1
	0x026B10A0 B.EQ 0x26B1188
	0x026B10A4 CMP W8, 0x2
	0x026B10A8 B.NE 0x26B122C
	0x026B10AC CBZ X1, 0x26B1324
	0x026B10B0 LDR W10, [X1 + 0x18]
	0x026B10B4 CMP W10, 0x1
	0x026B10B8 B.LT 0x26B1310
	0x026B10BC MOV W9, W31
	0x026B10C0 MOVZ W11, 0x1
	0x026B10C4 MOVN W12, 0x0
	0x026B10C8 SUB W14, W11, 0x1
	0x026B10CC CMP W14, W10
	0x026B10D0 B.CS 0x26B1320
	0x026B10D4 ADD W13, W14, 0x1
	0x026B10D8 CMP W13, W10
	0x026B10DC B.CS 0x26B1320
	0x026B10E0 ADD X15, X1, W14, 0x1, SXTW
	0x026B10E4 ADD X14, X1, W11, 0x1, SXTW
	0x026B10E8 LDRSH W15, [X15 + 0x20]
	0x026B10EC LDRSH W16, [X14 + 0x20]!
	0x026B10F0 ADDS W31, W16, W15
	0x026B10F4 B.MI 0x26B1130
	0x026B10F8 LDR W16, [X0 + 0x20]
	0x026B10FC TBZ X16, 0x1F, 0x26B1134
	0x026B1100 LDR W16, [X0 + 0x24]
	0x026B1104 LDP W17, W3, [X0 + 0x18]
	0x026B1108 ADD W4, W16, 0x1
	0x026B110C MUL W16, W3, W17
	0x026B1110 SDIV W3, W4, W16
	0x026B1114 MSUB W16, W3, W16, W4
	0x026B1118 CMP W16, W17
	0x026B111C CSET W16, LT
	0x026B1120 STRB W16, [X0 + 0x28]
	0x026B1124 STP W31, W4, [X0 + 0x20]
	0x026B1128 CBNZ W16, 0x26B1174
	0x026B112C B 0x26B113C
	0x026B1130 STR W12, [X0 + 0x20]
	0x026B1134 LDRB W16, [X0 + 0x28]
	0x026B1138 CBNZ W16, 0x26B1174
	0x026B113C CBZ X2, 0x26B1324
	0x026B1140 LDR W16, [X2 + 0x18]
	0x026B1144 CMP W9, W16
	0x026B1148 B.CS 0x26B1320
	0x026B114C AND W17, W15, 0xFFFF
	0x026B1150 ADD W15, W9, 0x1
	0x026B1154 ADD X3, X2, W9, 0x1, SXTW
	0x026B1158 CMP W15, W16
	0x026B115C STRH W17, [X3 + 0x20]
	0x026B1160 B.CS 0x26B1320
	0x026B1164 LDRH W14, [X14]
	0x026B1168 ADD W9, W9, 0x2
	0x026B116C ADD X15, X2, W15, 0x1, SXTW
	0x026B1170 STRH W14, [X15 + 0x20]
	0x026B1174 ADD W13, W13, 0x1
	0x026B1178 CMP W13, W10
	0x026B117C ADD W11, W11, 0x2
	0x026B1180 B.LT 0x26B10C8
	0x026B1184 B 0x26B1314
	0x026B1188 CBZ X1, 0x26B1324
	0x026B118C LDR X10, [X1 + 0x18]
	0x026B1190 MOV W9, W31
	0x026B1194 CMP W10, 0x1
	0x026B1198 B.LT 0x26B1314
	0x026B119C AND X10, X10, 0x0
	0x026B11A0 CBZ X10, 0x26B1314
	0x026B11A4 MOV W9, W31
	0x026B11A8 ADD X11, X1, 0x20
	0x026B11AC MOVN W12, 0x0
	0x026B11B0 CBZ X10, 0x26B1320
	0x026B11B4 LDRSH W13, [X11]
	0x026B11B8 TBNZ X13, 0x1F, 0x26B11F4
	0x026B11BC LDR W14, [X0 + 0x20]
	0x026B11C0 TBZ X14, 0x1F, 0x26B11F8
	0x026B11C4 LDR W14, [X0 + 0x24]
	0x026B11C8 LDP W15, W16, [X0 + 0x18]
	0x026B11CC ADD W17, W14, 0x1
	0x026B11D0 MUL W14, W16, W15
	0x026B11D4 SDIV W16, W17, W14
	0x026B11D8 MSUB W14, W16, W14, W17
	0x026B11DC CMP W14, W15
	0x026B11E0 CSET W14, LT
	0x026B11E4 STRB W14, [X0 + 0x28]
	0x026B11E8 STP W31, W17, [X0 + 0x20]
	0x026B11EC CBNZ W14, 0x26B121C
	0x026B11F0 B 0x26B1200
	0x026B11F4 STR W12, [X0 + 0x20]
	0x026B11F8 LDRB W14, [X0 + 0x28]
	0x026B11FC CBNZ W14, 0x26B121C
	0x026B1200 CBZ X2, 0x26B1324
	0x026B1204 LDR W14, [X2 + 0x18]
	0x026B1208 CMP W9, W14
	0x026B120C B.CS 0x26B1320
	0x026B1210 ADD X14, X2, W9, 0x1, SXTW
	0x026B1214 ADD W9, W9, 0x1
	0x026B1218 STRH W13, [X14 + 0x20]
	0x026B121C SUBS X10, X10, 0x1
	0x026B1220 ADD X11, X11, 0x2
	0x026B1224 B.NE 0x26B11B0
	0x026B1228 B 0x26B1314
	0x026B122C CBZ X1, 0x26B1324
	0x026B1230 LDR W10, [X1 + 0x18]
	0x026B1234 CMP W10, 0x1
	0x026B1238 B.LT 0x26B1310
	0x026B123C MOV W9, W31
	0x026B1240 MOVZ W11, 0x1
	0x026B1244 MOVN W12, 0x0
	0x026B1248 SUB W13, W11, 0x1
	0x026B124C CMP W13, W10
	0x026B1250 B.CS 0x26B1320
	0x026B1254 CMP W11, W10
	0x026B1258 B.CS 0x26B1320
	0x026B125C CMP W13, W8
	0x026B1260 B.LT 0x26B1320
	0x026B1264 ADD X13, X1, W13, 0x1, SXTW
	0x026B1268 ADD X15, X1, W11, 0x1, SXTW
	0x026B126C LDRSH W14, [X13 + 0x20]
	0x026B1270 ADD X13, X15, 0x20
	0x026B1274 LDRSH W15, [X13]
	0x026B1278 ADDS W31, W15, W14
	0x026B127C B.MI 0x26B12B8
	0x026B1280 LDR W15, [X0 + 0x20]
	0x026B1284 TBZ X15, 0x1F, 0x26B12BC
	0x026B1288 LDR W15, [X0 + 0x24]
	0x026B128C LDP W16, W17, [X0 + 0x18]
	0x026B1290 ADD W3, W15, 0x1
	0x026B1294 MUL W15, W17, W16
	0x026B1298 SDIV W17, W3, W15
	0x026B129C MSUB W15, W17, W15, W3
	0x026B12A0 CMP W15, W16
	0x026B12A4 CSET W15, LT
	0x026B12A8 STRB W15, [X0 + 0x28]
	0x026B12AC STP W31, W3, [X0 + 0x20]
	0x026B12B0 CBNZ W15, 0x26B12FC
	0x026B12B4 B 0x26B12C4
	0x026B12B8 STR W12, [X0 + 0x20]
	0x026B12BC LDRB W15, [X0 + 0x28]
	0x026B12C0 CBNZ W15, 0x26B12FC
	0x026B12C4 CBZ X2, 0x26B1324
	0x026B12C8 LDR W15, [X2 + 0x18]
	0x026B12CC CMP W9, W15
	0x026B12D0 B.CS 0x26B1320
	0x026B12D4 AND W16, W14, 0xFFFF
	0x026B12D8 ADD W14, W9, 0x1
	0x026B12DC ADD X17, X2, W9, 0x1, SXTW
	0x026B12E0 CMP W14, W15

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+20]
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Compare X1, 0
	006 JumpIfEqual {175}
	007 Move W10, [X1+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W9, W31
	010 Move W11, 1
	011 Move TEMP, 0
	012 Not TEMP
	013 Move W12, TEMP
	014 Subtract W14, W11, 1
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Add W13, W14, 1
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Add X15, X1, W14
	019 Add X14, X1, W11
	020 Move V0, [X15+32]
	021 Add X14, X14, 32
	022 Move V1, [X14]
	023 Add S1, S0, S1
	024 NotImplemented "Instruction FCMP not yet implemented."
	025 Move [X0+32], W12
	026 Move W15, [X0+32]
	027 Move TEMP, X15
	028 And TEMP, TEMP, -2147483648
	029 Compare TEMP, -2147483648
	030 JumpIfEqual {46}
	031 Move W15, [X0+40]
	032 Compare W15, 0
	033 JumpIfNotEqual {60}
	034 Compare X2, 0
	035 JumpIfEqual {175}
	036 Move W16, [X2+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add W15, W9, 1
	039 Add X17, X2, W9
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move [X17+32], S0
	042 Move V0, [X14]
	043 Add W9, W9, 2
	044 Add X14, X2, W15
	045 Move [X14+32], S0
	046 Move W15, [X0+36]
	047 Move W16, [X0+24]
	048 Move W17, [X0+28]
	049 Add W3, W15, 1
	050 Multiply W15, W17, W16
	051 NotImplemented "Instruction SDIV not yet implemented."
	052 NotImplemented "Instruction MSUB not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CSET not yet implemented."
	055 Move [X0+40], W15
	056 Move [X0+32], W31
	057 Move [X0+36], W3
	058 Compare W15, 0
	059 JumpIfEqual {34}
	060 Add W13, W13, 1
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Add W11, W11, 2
	063 Compare X1, 0
	064 JumpIfEqual {175}
	065 Move X10, [X1+24]
	066 Move W9, W31
	067 NotImplemented "Instruction CMP not yet implemented."
	068 And X10, X10, 0
	069 Compare X10, 0
	070 JumpIfEqual {171}
	071 Move W9, W31
	072 Add X11, X1, 32
	073 Move TEMP, 0
	074 Not TEMP
	075 Move W12, TEMP
	076 Compare X10, 0
	077 JumpIfEqual {174}
	078 Move V0, [X11]
	079 NotImplemented "Instruction FCMP not yet implemented."
	080 Move [X0+32], W12
	081 Move W13, [X0+32]
	082 Move TEMP, X13
	083 And TEMP, TEMP, -2147483648
	084 Compare TEMP, -2147483648
	085 JumpIfEqual {96}
	086 Move W13, [X0+40]
	087 Compare W13, 0
	088 JumpIfNotEqual {110}
	089 Compare X2, 0
	090 JumpIfEqual {175}
	091 Move W13, [X2+24]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Add X13, X2, W9
	094 Add W9, W9, 1
	095 Move [X13+32], S0
	096 Move W13, [X0+36]
	097 Move W14, [X0+24]
	098 Move W15, [X0+28]
	099 Add W16, W13, 1
	100 Multiply W13, W15, W14
	101 NotImplemented "Instruction SDIV not yet implemented."
	102 NotImplemented "Instruction MSUB not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 NotImplemented "Instruction CSET not yet implemented."
	105 Move [X0+40], W13
	106 Move [X0+32], W31
	107 Move [X0+36], W16
	108 Compare W13, 0
	109 JumpIfEqual {89}
	110 Subtract X10, X10, 1
	111 Add X11, X11, 4
	112 Compare X1, 0
	113 JumpIfEqual {175}
	114 Move W10, [X1+24]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move W9, W31
	117 Move W11, 1
	118 Move TEMP, 0
	119 Not TEMP
	120 Move W12, TEMP
	121 Subtract W13, W11, 1
	122 NotImplemented "Instruction CMP not yet implemented."
	123 NotImplemented "Instruction CMP not yet implemented."
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Add X13, X1, W13
	126 Add X14, X1, W11
	127 Move V0, [X13+32]
	128 Add X13, X14, 32
	129 Move V1, [X13]
	130 Add S1, S0, S1
	131 NotImplemented "Instruction FCMP not yet implemented."
	132 Move [X0+32], W12
	133 Move W14, [X0+32]
	134 Move TEMP, X14
	135 And TEMP, TEMP, -2147483648
	136 Compare TEMP, -2147483648
	137 JumpIfEqual {153}
	138 Move W14, [X0+40]
	139 Compare W14, 0
	140 JumpIfNotEqual {167}
	141 Compare X2, 0
	142 JumpIfEqual {175}
	143 Move W15, [X2+24]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Add W14, W9, 1
	146 Add X16, X2, W9
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move [X16+32], S0
	149 Move V0, [X13]
	150 Add W9, W9, 2
	151 Add X13, X2, W14
	152 Move [X13+32], S0
	153 Move W14, [X0+36]
	154 Move W15, [X0+24]
	155 Move W16, [X0+28]
	156 Add W17, W14, 1
	157 Multiply W14, W16, W15
	158 NotImplemented "Instruction SDIV not yet implemented."
	159 NotImplemented "Instruction MSUB not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 NotImplemented "Instruction CSET not yet implemented."
	162 Move [X0+40], W14
	163 Move [X0+32], W31
	164 Move [X0+36], W17
	165 Compare W14, 0
	166 JumpIfEqual {141}
	167 Add W11, W11, W8
	168 Subtract W13, W11, 1
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move W9, W31
	171 NotImplemented "Instruction SDIV not yet implemented."
	172 Move X30, [X31+16]
	173 Return X0
	174 Call 0x1C17F28
	175 Call 0x1C17F20

Method: System.Int32 endFloat(System.Single[] s)

Disassembly:
	0x026B12E4 STRH W16, [X17 + 0x20]
	0x026B12E8 B.CS 0x26B1320
	0x026B12EC LDRH W13, [X13]
	0x026B12F0 ADD W9, W9, 0x2
	0x026B12F4 ADD X14, X2, W14, 0x1, SXTW
	0x026B12F8 STRH W13, [X14 + 0x20]
	0x026B12FC ADD W11, W11, W8
	0x026B1300 SUB W13, W11, 0x1
	0x026B1304 CMP W13, W10
	0x026B1308 B.LT 0x26B1248
	0x026B130C B 0x26B1314
	0x026B1310 MOV W9, W31
	0x026B1314 SDIV W0, W9, W8
	0x026B1318 LDR X30, [X31], #0x10
	0x026B131C RET
	0x026B1320 BL 0x1C16F28
	0x026B1324 BL 0x1C16F20
	0x026B1328 STR X30, [X31 - 0x10]!
	0x026B132C LDR W8, [X0 + 0x14]
	0x026B1330 CMP W8, 0x1
	0x026B1334 B.EQ 0x26B13D0
	0x026B1338 CMP W8, 0x2
	0x026B133C B.NE 0x26B1458
	0x026B1340 CBZ X1, 0x26B1518
	0x026B1344 LDR W8, [X1 + 0x18]
	0x026B1348 CMP W8, 0x1
	0x026B134C B.LT 0x26B14EC
	0x026B1350 MOV W9, W31
	0x026B1354 CMP W9, W8
	0x026B1358 B.CS 0x26B1514
	0x026B135C ADD W10, W9, 0x1
	0x026B1360 CMP W10, W8
	0x026B1364 B.CS 0x26B1514
	0x026B1368 ADD X11, X1, 0x20
	0x026B136C LDRSH W12, [X11, W9, SXTW]
	0x026B1370 LDRSH W10, [X11, W10, SXTW]
	0x026B1374 ADDS W31, W10, W12
	0x026B1378 B.MI 0x26B13B8
	0x026B137C LDR W10, [X0 + 0x20]
	0x026B1380 TBZ X10, 0x1F, 0x26B13C0
	0x026B1384 LDR W10, [X0 + 0x24]
	0x026B1388 LDP W11, W12, [X0 + 0x18]
	0x026B138C ADD W10, W10, 0x1
	0x026B1390 MUL W12, W12, W11
	0x026B1394 SDIV W13, W10, W12
	0x026B1398 STR W10, [X0 + 0x24]
	0x026B139C MSUB W10, W13, W12, W10
	0x026B13A0 CMP W10, W11
	0x026B13A4 CSET W10, LT
	0x026B13A8 STRB W10, [X0 + 0x28]
	0x026B13AC B.GE 0x26B14FC
	0x026B13B0 MOV W10, W31
	0x026B13B4 B 0x26B13BC
	0x026B13B8 MOVN W10, 0x0
	0x026B13BC STR W10, [X0 + 0x20]
	0x026B13C0 ADD W9, W9, 0x2
	0x026B13C4 CMP W9, W8
	0x026B13C8 B.LT 0x26B1354
	0x026B13CC B 0x26B14EC
	0x026B13D0 CBZ X1, 0x26B1518
	0x026B13D4 LDR X9, [X1 + 0x18]
	0x026B13D8 MOV W8, W31
	0x026B13DC CMP W9, 0x1
	0x026B13E0 B.LT 0x26B14F0
	0x026B13E4 AND X9, X9, 0x0
	0x026B13E8 CBZ X9, 0x26B14F0
	0x026B13EC MOV X8, X31
	0x026B13F0 ADD X10, X1, 0x20
	0x026B13F4 CMP X9, X8
	0x026B13F8 B.EQ 0x26B1514
	0x026B13FC LDRSH W11, [X10, X8, LSL #1]
	0x026B1400 TBNZ X11, 0x1F, 0x26B1440
	0x026B1404 LDR W11, [X0 + 0x20]
	0x026B1408 TBZ X11, 0x1F, 0x26B1448
	0x026B140C LDR W11, [X0 + 0x24]
	0x026B1410 LDP W12, W13, [X0 + 0x18]
	0x026B1414 ADD W11, W11, 0x1
	0x026B1418 MUL W13, W13, W12
	0x026B141C SDIV W14, W11, W13
	0x026B1420 STR W11, [X0 + 0x24]
	0x026B1424 MSUB W11, W14, W13, W11
	0x026B1428 CMP W11, W12
	0x026B142C CSET W11, LT
	0x026B1430 STRB W11, [X0 + 0x28]
	0x026B1434 B.GE 0x26B14F0
	0x026B1438 MOV W11, W31
	0x026B143C B 0x26B1444
	0x026B1440 MOVN W11, 0x0
	0x026B1444 STR W11, [X0 + 0x20]
	0x026B1448 ADD X8, X8, 0x1
	0x026B144C CMP X9, X8
	0x026B1450 B.NE 0x26B13F4
	0x026B1454 B 0x26B14EC
	0x026B1458 CBZ X1, 0x26B1518
	0x026B145C LDR W9, [X1 + 0x18]
	0x026B1460 CMP W9, 0x1
	0x026B1464 B.LT 0x26B14EC
	0x026B1468 MOV W10, W31
	0x026B146C CMP W10, W9
	0x026B1470 B.CS 0x26B1514
	0x026B1474 ADD W11, W10, 0x1
	0x026B1478 CMP W11, W9
	0x026B147C B.CS 0x26B1514
	0x026B1480 CMP W10, W8
	0x026B1484 B.LT 0x26B1514
	0x026B1488 ADD X12, X1, 0x20
	0x026B148C LDRSH W11, [X12, W11, SXTW]
	0x026B1490 LDRSH W12, [X12, W10, SXTW]
	0x026B1494 ADDS W31, W11, W12
	0x026B1498 B.MI 0x26B14D8
	0x026B149C LDR W11, [X0 + 0x20]
	0x026B14A0 TBZ X11, 0x1F, 0x26B14E0
	0x026B14A4 LDR W11, [X0 + 0x24]
	0x026B14A8 LDP W12, W13, [X0 + 0x18]
	0x026B14AC ADD W11, W11, 0x1
	0x026B14B0 MUL W13, W13, W12
	0x026B14B4 SDIV W14, W11, W13
	0x026B14B8 STR W11, [X0 + 0x24]
	0x026B14BC MSUB W11, W14, W13, W11
	0x026B14C0 CMP W11, W12
	0x026B14C4 CSET W11, LT
	0x026B14C8 STRB W11, [X0 + 0x28]
	0x026B14CC B.GE 0x26B150C
	0x026B14D0 MOV W11, W31
	0x026B14D4 B 0x26B14DC
	0x026B14D8 MOVN W11, 0x0
	0x026B14DC STR W11, [X0 + 0x20]
	0x026B14E0 ADD W10, W10, W8

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+20]
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Compare X1, 0
	006 JumpIfEqual {123}
	007 Move W8, [X1+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W9, W31
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Add W10, W9, 1
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Add X11, X1, 32
	014 Move V0, [X11]
	015 Move V1, [X11]
	016 Add S0, S0, S1
	017 NotImplemented "Instruction FCMP not yet implemented."
	018 Move TEMP, 0
	019 Not TEMP
	020 Move W10, TEMP
	021 Move W10, [X0+32]
	022 Move TEMP, X10
	023 And TEMP, TEMP, -2147483648
	024 Compare TEMP, -2147483648
	025 JumpIfNotEqual {39}
	026 Move W10, [X0+36]
	027 Move W11, [X0+24]
	028 Move W12, [X0+28]
	029 Add W10, W10, 1
	030 Multiply W12, W12, W11
	031 NotImplemented "Instruction SDIV not yet implemented."
	032 Move [X0+36], W10
	033 NotImplemented "Instruction MSUB not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CSET not yet implemented."
	036 Move [X0+40], W10
	037 Move W10, W31
	038 Move [X0+32], W10
	039 Add W9, W9, 2
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Compare X1, 0
	042 JumpIfEqual {123}
	043 Move X9, [X1+24]
	044 Move W8, W31
	045 NotImplemented "Instruction CMP not yet implemented."
	046 And X9, X9, 0
	047 Compare X9, 0
	048 JumpIfEqual {115}
	049 Move X8, X31
	050 Add X10, X1, 32
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move V0, [X10]
	053 NotImplemented "Instruction FCMP not yet implemented."
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W11, TEMP
	057 Move W11, [X0+32]
	058 Move TEMP, X11
	059 And TEMP, TEMP, -2147483648
	060 Compare TEMP, -2147483648
	061 JumpIfNotEqual {75}
	062 Move W11, [X0+36]
	063 Move W12, [X0+24]
	064 Move W13, [X0+28]
	065 Add W11, W11, 1
	066 Multiply W13, W13, W12
	067 NotImplemented "Instruction SDIV not yet implemented."
	068 Move [X0+36], W11
	069 NotImplemented "Instruction MSUB not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 NotImplemented "Instruction CSET not yet implemented."
	072 Move [X0+40], W11
	073 Move W11, W31
	074 Move [X0+32], W11
	075 Add X8, X8, 1
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Compare X1, 0
	078 JumpIfEqual {123}
	079 Move W9, [X1+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move W10, W31
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Add W11, W10, 1
	084 NotImplemented "Instruction CMP not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Add X12, X1, 32
	087 Move V0, [X12]
	088 Move V1, [X12]
	089 Add S0, S0, S1
	090 NotImplemented "Instruction FCMP not yet implemented."
	091 Move TEMP, 0
	092 Not TEMP
	093 Move W11, TEMP
	094 Move W11, [X0+32]
	095 Move TEMP, X11
	096 And TEMP, TEMP, -2147483648
	097 Compare TEMP, -2147483648
	098 JumpIfNotEqual {112}
	099 Move W11, [X0+36]
	100 Move W12, [X0+24]
	101 Move W13, [X0+28]
	102 Add W11, W11, 1
	103 Multiply W13, W13, W12
	104 NotImplemented "Instruction SDIV not yet implemented."
	105 Move [X0+36], W11
	106 NotImplemented "Instruction MSUB not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 NotImplemented "Instruction CSET not yet implemented."
	109 Move [X0+40], W11
	110 Move W11, W31
	111 Move [X0+32], W11
	112 Add W10, W10, W8
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move W8, W31
	115 Move W0, W8
	116 Move X30, [X31+16]
	117 Return X0
	118 NotImplemented "Instruction CMP not yet implemented."
	119 NotImplemented "Instruction CINC not yet implemented."
	120 NotImplemented "Instruction SBFM not yet implemented."
	121 NotImplemented "Instruction SDIV not yet implemented."
	122 Call 0x1C17F28
	123 Call 0x1C17F20

Method: System.Int32 processShort(System.Int16[] s, System.Int16[] d)

Disassembly:
	0x026B14E4 CMP W10, W9
	0x026B14E8 B.LT 0x26B146C
	0x026B14EC MOV W8, W31
	0x026B14F0 MOV W0, W8
	0x026B14F4 LDR X30, [X31], #0x10
	0x026B14F8 RET
	0x026B14FC CMP W9, 0x0
	0x026B1500 CINC W8, W9, LT
	0x026B1504 SBFM W8, W8, 0x1, 0x1F
	0x026B1508 B 0x26B14F0
	0x026B150C SDIV W8, W10, W8
	0x026B1510 B 0x26B14F0
	0x026B1514 BL 0x1C16F28
	0x026B1518 BL 0x1C16F20
	0x026B151C STP X29, X30, [X31 - 0x50]!
	0x026B1520 STP X26, X25, [X31 + 0x10]
	0x026B1524 STP X24, X23, [X31 + 0x20]
	0x026B1528 STP X22, X21, [X31 + 0x30]
	0x026B152C STP X20, X19, [X31 + 0x40]
	0x026B1530 ADD X29, X31, 0x0
	0x026B1534 SUB X31, X31, 0x20
	0x026B1538 MRS X24, 0xC000
	0x026B153C LDR X8, [X24 + 0x28]
	0x026B1540 ADRP X21, 0x1D29000
	0x026B1544 ADRP X25, 0x1A6A000
	0x026B1548 MOV X20, X1
	0x026B154C STUR X8, [X29 - 0x8]
	0x026B1550 LDRB W8, [X21 + 0x3D0]
	0x026B1554 LDR X25, [X25 + 0x850]
	0x026B1558 MOV X19, X0
	0x026B155C TBNZ X8, 0x0, 0x26B1574
	0x026B1560 ADRP X0, 0x1A6A000
	0x026B1564 LDR X0, [X0 + 0x850]
	0x026B1568 BL 0x1C16CF4
	0x026B156C MOVZ W8, 0x1
	0x026B1570 STRB W8, [X21 + 0x3D0]
	0x026B1574 LDR X26, [X20 + 0x20]
	0x026B1578 LDR X8, [X26 + 0xC0]
	0x026B157C LDR X8, [X8 + 0x30]
	0x026B1580 LDR W22, [X8 + 0xFC]
	0x026B1584 ADD X8, X31, 0x0
	0x026B1588 ADD X9, X22, 0xF
	0x026B158C AND X9, X9, 0x1FFFFFFFF
	0x026B1590 SUB X21, X8, X9
	0x026B1594 ADD X31, X21, 0x0
	0x026B1598 ADD X8, X31, 0x0
	0x026B159C SUB X23, X8, X9
	0x026B15A0 ADD X31, X23, 0x0
	0x026B15A4 MOV X0, X23
	0x026B15A8 MOV W1, W31
	0x026B15AC MOV X2, X22
	0x026B15B0 BL 0x3EB1B10
	0x026B15B4 MOV X0, X23
	0x026B15B8 MOV W1, W31
	0x026B15BC MOV X2, X22
	0x026B15C0 BL 0x3EB1B10
	0x026B15C4 MOV X0, X21
	0x026B15C8 MOV X1, X23
	0x026B15CC MOV X2, X22
	0x026B15D0 BL 0x3EB1AC0
	0x026B15D4 LDR X0, [X25]
	0x026B15D8 LDR W8, [X0 + 0xE0]
	0x026B15DC CBNZ W8, 0x26B15E8
	0x026B15E0 BL 0x1C16DFC
	0x026B15E4 LDR X26, [X20 + 0x20]
	0x026B15E8 LDR X8, [X26 + 0xC0]
	0x026B15EC LDP X9, X1, [X8 + 0x30]
	0x026B15F0 LDR W8, [X9 + 0x28]
	0x026B15F4 LDR X0, [X1]
	0x026B15F8 TBNZ X8, 0x1F, 0x26B1600
	0x026B15FC LDR X21, [X21]
	0x026B1600 STUR X21, [X29 - 0x18]
	0x026B1604 LDR X8, [X1 + 0x10]
	0x026B1608 SUB X3, X29, 0x18
	0x026B160C SUB X4, X29, 0xC
	0x026B1610 MOV X2, X31
	0x026B1614 BLR X8
	0x026B1618 LDUR W8, [X29 - 0xC]
	0x026B161C MOV X0, X19
	0x026B1620 MOV X1, X31
	0x026B1624 STR W8, [X19 + 0x10]
	0x026B1628 BL 0x33BDD8C
	0x026B162C LDR X8, [X24 + 0x28]
	0x026B1630 LDUR X9, [X29 - 0x8]
	0x026B1634 CMP X8, X9
	0x026B1638 B.NE 0x26B1658
	0x026B163C ADD X31, X29, 0x0
	0x026B1640 LDP X20, X19, [X31 + 0x40]
	0x026B1644 LDP X22, X21, [X31 + 0x30]
	0x026B1648 LDP X24, X23, [X31 + 0x20]
	0x026B164C LDP X26, X25, [X31 + 0x10]
	0x026B1650 LDP X29, X30, [X31], #0x50
	0x026B1654 RET
	0x026B1658 BL 0x3EB1B20
	0x026B165C LDR X0, [X0 + 0x3C8]
	0x026B1660 RET
	0x026B1664 STR X1, [X0 + 0x3C8]
	0x026B1668 RET
	0x026B166C STR X30, [X31 - 0x10]!
	0x026B1670 LDR X0, [X0 + 0x3C8]
	0x026B1674 CBZ X0, 0x26B1684
	0x026B1678 MOV X1, X31
	0x026B167C LDR X30, [X31], #0x10
	0x026B1680 B 0x3E0C77C
	0x026B1684 BL 0x1C16F20
	0x026B1688 STR X30, [X31 - 0x10]!
	0x026B168C LDR X0, [X0 + 0x3C8]
	0x026B1690 CBZ X0, 0x26B16A0
	0x026B1694 MOV X1, X31
	0x026B1698 LDR X30, [X31], #0x10
	0x026B169C B 0x3E0AF0C
	0x026B16A0 BL 0x1C16F20
	0x026B16A4 STR X30, [X31 - 0x20]!
	0x026B16A8 STP X20, X19, [X31 + 0x10]
	0x026B16AC ADRP X20, 0x1D29000
	0x026B16B0 LDRB W8, [X20 + 0x3D1]
	0x026B16B4 MOV X19, X0
	0x026B16B8 TBNZ X8, 0x0, 0x26B16D0
	0x026B16BC ADRP X0, 0x1A6C000
	0x026B16C0 LDR X0, [X0 + 0x628]
	0x026B16C4 BL 0x1C16CF4
	0x026B16C8 MOVZ W8, 0x1
	0x026B16CC STRB W8, [X20 + 0x3D1]
	0x026B16D0 LDR X0, [X19 + 0x3C8]
	0x026B16D4 CBZ X0, 0x26B1754
	0x026B16D8 MOV X1, X31
	0x026B16DC BL 0x3E0C77C
	0x026B16E0 CBZ X0, 0x26B1754
	0x026B16E4 ADRP X10, 0x1A6C000
	0x026B16E8 LDR X8, [X0]
	0x026B16EC LDR X10, [X10 + 0x628]
	0x026B16F0 MOV X19, X0
	0x026B16F4 LDRH W9, [X8 + 0x12E]
	0x026B16F8 LDR X1, [X10]
	0x026B16FC CBZ X9, 0x26B1720
	0x026B1700 LDR X10, [X8 + 0xB0]
	0x026B1704 ADD X10, X10, 0x8
	0x026B1708 LDUR X11, [X10 - 0x8]
	0x026B170C CMP X11, X1
	0x026B1710 B.EQ 0x26B1730
	0x026B1714 SUBS X9, X9, 0x1
	0x026B1718 ADD X10, X10, 0x10
	0x026B171C B.NE 0x26B1708
	0x026B1720 MOVZ W2, 0xD
	0x026B1724 MOV X0, X19
	0x026B1728 BL 0x1C5C788
	0x026B172C B 0x26B1740
	0x026B1730 LDR W9, [X10]
	0x026B1734 ADD W9, W9, 0xD
	0x026B1738 ADD X8, X8, W9, 0x4, SXTW
	0x026B173C ADD X0, X8, 0x138
	0x026B1740 LDP X2, X1, [X0]
	0x026B1744 MOV X0, X19
	0x026B1748 LDP X20, X19, [X31 + 0x10]
	0x026B174C LDR X30, [X31], #0x20
	0x026B1750 BR X2
	0x026B1754 BL 0x1C16F20
	0x026B1758 STR X30, [X31 - 0x20]!
	0x026B175C STP X20, X19, [X31 + 0x10]
	0x026B1760 ADRP X20, 0x1D29000
	0x026B1764 LDRB W8, [X20 + 0x3D2]
	0x026B1768 MOV X19, X0
	0x026B176C TBNZ X8, 0x0, 0x26B1784
	0x026B1770 ADRP X0, 0x1A6C000
	0x026B1774 LDR X0, [X0 + 0x628]

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+20]
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Compare X1, 0
	006 JumpIfEqual {177}
	007 Move W10, [X1+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W9, W31
	010 Move W11, 1
	011 Move TEMP, 0
	012 Not TEMP
	013 Move W12, TEMP
	014 Subtract W14, W11, 1
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Add W13, W14, 1
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Add X15, X1, W14
	019 Add X14, X1, W11
	020 NotImplemented "Instruction LDRSH not yet implemented."
	021 NotImplemented "Instruction LDRSH not yet implemented."
	022 Add W31, W16, W15
	023 Move W16, [X0+32]
	024 Move TEMP, X16
	025 And TEMP, TEMP, -2147483648
	026 Compare TEMP, -2147483648
	027 JumpIfNotEqual {43}
	028 Move W16, [X0+36]
	029 Move W17, [X0+24]
	030 Move W3, [X0+28]
	031 Add W4, W16, 1
	032 Multiply W16, W3, W17
	033 NotImplemented "Instruction SDIV not yet implemented."
	034 NotImplemented "Instruction MSUB not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Move [X0+40], W16
	038 Move [X0+32], W31
	039 Move [X0+36], W4
	040 Compare W16, 0
	041 JumpIfNotEqual {59}
	042 Move [X0+32], W12
	043 Move W16, [X0+40]
	044 Compare W16, 0
	045 JumpIfNotEqual {59}
	046 Compare X2, 0
	047 JumpIfEqual {177}
	048 Move W16, [X2+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 And W17, W15, 0xFFFF
	051 Add W15, W9, 1
	052 Add X3, X2, W9
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction STRH not yet implemented."
	055 NotImplemented "Instruction LDRH not yet implemented."
	056 Add W9, W9, 2
	057 Add X15, X2, W15
	058 NotImplemented "Instruction STRH not yet implemented."
	059 Add W13, W13, 1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add W11, W11, 2
	062 Compare X1, 0
	063 JumpIfEqual {177}
	064 Move X10, [X1+24]
	065 Move W9, W31
	066 NotImplemented "Instruction CMP not yet implemented."
	067 And X10, X10, 0
	068 Compare X10, 0
	069 JumpIfEqual {173}
	070 Move W9, W31
	071 Add X11, X1, 32
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W12, TEMP
	075 Compare X10, 0
	076 JumpIfEqual {176}
	077 NotImplemented "Instruction LDRSH not yet implemented."
	078 Move TEMP, X13
	079 And TEMP, TEMP, -2147483648
	080 Compare TEMP, -2147483648
	081 JumpIfEqual {101}
	082 Move W14, [X0+32]
	083 Move TEMP, X14
	084 And TEMP, TEMP, -2147483648
	085 Compare TEMP, -2147483648
	086 JumpIfNotEqual {102}
	087 Move W14, [X0+36]
	088 Move W15, [X0+24]
	089 Move W16, [X0+28]
	090 Add W17, W14, 1
	091 Multiply W14, W16, W15
	092 NotImplemented "Instruction SDIV not yet implemented."
	093 NotImplemented "Instruction MSUB not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 NotImplemented "Instruction CSET not yet implemented."
	096 Move [X0+40], W14
	097 Move [X0+32], W31
	098 Move [X0+36], W17
	099 Compare W14, 0
	100 JumpIfNotEqual {112}
	101 Move [X0+32], W12
	102 Move W14, [X0+40]
	103 Compare W14, 0
	104 JumpIfNotEqual {112}
	105 Compare X2, 0
	106 JumpIfEqual {177}
	107 Move W14, [X2+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Add X14, X2, W9
	110 Add W9, W9, 1
	111 NotImplemented "Instruction STRH not yet implemented."
	112 Subtract X10, X10, 1
	113 Add X11, X11, 2
	114 Compare X1, 0
	115 JumpIfEqual {177}
	116 Move W10, [X1+24]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move W9, W31
	119 Move W11, 1
	120 Move TEMP, 0
	121 Not TEMP
	122 Move W12, TEMP
	123 Subtract W13, W11, 1
	124 NotImplemented "Instruction CMP not yet implemented."
	125 NotImplemented "Instruction CMP not yet implemented."
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Add X13, X1, W13
	128 Add X15, X1, W11
	129 NotImplemented "Instruction LDRSH not yet implemented."
	130 Add X13, X15, 32
	131 NotImplemented "Instruction LDRSH not yet implemented."
	132 Add W31, W15, W14
	133 Move W15, [X0+32]
	134 Move TEMP, X15
	135 And TEMP, TEMP, -2147483648
	136 Compare TEMP, -2147483648
	137 JumpIfNotEqual {153}
	138 Move W15, [X0+36]
	139 Move W16, [X0+24]
	140 Move W17, [X0+28]
	141 Add W3, W15, 1
	142 Multiply W15, W17, W16
	143 NotImplemented "Instruction SDIV not yet implemented."
	144 NotImplemented "Instruction MSUB not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 NotImplemented "Instruction CSET not yet implemented."
	147 Move [X0+40], W15
	148 Move [X0+32], W31
	149 Move [X0+36], W3
	150 Compare W15, 0
	151 JumpIfNotEqual {169}
	152 Move [X0+32], W12
	153 Move W15, [X0+40]
	154 Compare W15, 0
	155 JumpIfNotEqual {169}
	156 Compare X2, 0
	157 JumpIfEqual {177}
	158 Move W15, [X2+24]
	159 NotImplemented "Instruction CMP not yet implemented."
	160 And W16, W14, 0xFFFF
	161 Add W14, W9, 1
	162 Add X17, X2, W9
	163 NotImplemented "Instruction CMP not yet implemented."
	164 NotImplemented "Instruction STRH not yet implemented."
	165 NotImplemented "Instruction LDRH not yet implemented."
	166 Add W9, W9, 2
	167 Add X14, X2, W14
	168 NotImplemented "Instruction STRH not yet implemented."
	169 Add W11, W11, W8
	170 Subtract W13, W11, 1
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move W9, W31
	173 NotImplemented "Instruction SDIV not yet implemented."
	174 Move X30, [X31+16]
	175 Return X0
	176 Call 0x1C17F28
	177 Call 0x1C17F20

Method: System.Int32 endShort(System.Int16[] s)

Disassembly:
	0x026B1778 BL 0x1C16CF4
	0x026B177C MOVZ W8, 0x1
	0x026B1780 STRB W8, [X20 + 0x3D2]
	0x026B1784 LDR X0, [X19 + 0x3C8]
	0x026B1788 CBZ X0, 0x26B1808
	0x026B178C MOV X1, X31
	0x026B1790 BL 0x3E0C77C
	0x026B1794 CBZ X0, 0x26B1808
	0x026B1798 ADRP X10, 0x1A6C000
	0x026B179C LDR X8, [X0]
	0x026B17A0 LDR X10, [X10 + 0x628]
	0x026B17A4 MOV X19, X0
	0x026B17A8 LDRH W9, [X8 + 0x12E]
	0x026B17AC LDR X1, [X10]
	0x026B17B0 CBZ X9, 0x26B17D4
	0x026B17B4 LDR X10, [X8 + 0xB0]
	0x026B17B8 ADD X10, X10, 0x8
	0x026B17BC LDUR X11, [X10 - 0x8]
	0x026B17C0 CMP X11, X1
	0x026B17C4 B.EQ 0x26B17E4
	0x026B17C8 SUBS X9, X9, 0x1
	0x026B17CC ADD X10, X10, 0x10
	0x026B17D0 B.NE 0x26B17BC
	0x026B17D4 MOVZ W2, 0xE
	0x026B17D8 MOV X0, X19
	0x026B17DC BL 0x1C5C788
	0x026B17E0 B 0x26B17F4
	0x026B17E4 LDR W9, [X10]
	0x026B17E8 ADD W9, W9, 0xE
	0x026B17EC ADD X8, X8, W9, 0x4, SXTW
	0x026B17F0 ADD X0, X8, 0x138
	0x026B17F4 LDP X2, X1, [X0]
	0x026B17F8 MOV X0, X19
	0x026B17FC LDP X20, X19, [X31 + 0x10]
	0x026B1800 LDR X30, [X31], #0x20
	0x026B1804 BR X2
	0x026B1808 BL 0x1C16F20
	0x026B180C STR X30, [X31 - 0x10]!
	0x026B1810 LDR X8, [X0 + 0x3C8]
	0x026B1814 CBZ X8, 0x26B1824
	0x026B1818 LDR X0, [X8 + 0x458]
	0x026B181C LDR X30, [X31], #0x10
	0x026B1820 RET
	0x026B1824 BL 0x1C16F20
	0x026B1828 STR X30, [X31 - 0x20]!
	0x026B182C STP X20, X19, [X31 + 0x10]
	0x026B1830 ADRP X0, 0x1A42000
	0x026B1834 LDR X0, [X0 + 0xB40]
	0x026B1838 MOV X19, X2
	0x026B183C BL 0x1C16D08
	0x026B1840 BL 0x1C16F10
	0x026B1844 MOV X1, X31
	0x026B1848 MOV X20, X0
	0x026B184C BL 0x3380310
	0x026B1850 MOV X0, X20
	0x026B1854 MOV X1, X19
	0x026B1858 BL 0x1C16DEC
	0x026B185C STP X30, X19, [X31 - 0x10]!
	0x026B1860 CBZ X0, 0x26B18D4
	0x026B1864 MOV X19, X1
	0x026B1868 MOV X1, X31
	0x026B186C BL 0x3DEBF58
	0x026B1870 LDR X8, [X19 + 0x20]
	0x026B1874 MOV X19, X0
	0x026B1878 LDR X8, [X8 + 0xC0]
	0x026B187C LDR X1, [X8 + 0x20]
	0x026B1880 LDRB W8, [X1 + 0x135]
	0x026B1884 TBNZ X8, 0x0, 0x26B1894
	0x026B1888 MOV X0, X1
	0x026B188C BL 0x1C5C684
	0x026B1890 MOV X1, X0
	0x026B1894 CBZ X19, 0x26B18D4
	0x026B1898 LDR X8, [X19]
	0x026B189C LDRB W9, [X1 + 0x130]
	0x026B18A0 LDRB W10, [X8 + 0x130]
	0x026B18A4 CMP W10, W9
	0x026B18A8 B.CC 0x26B18D8
	0x026B18AC LDR X10, [X8 + 0xC8]
	0x026B18B0 ADD X9, X10, X9, 0x3, LSL
	0x026B18B4 LDUR X9, [X9 - 0x8]
	0x026B18B8 CMP X9, X1
	0x026B18BC B.NE 0x26B18D8
	0x026B18C0 LDR X2, [X8 + 0x8B8]
	0x026B18C4 LDR X1, [X8 + 0x8C0]
	0x026B18C8 MOV X0, X19
	0x026B18CC LDP X30, X19, [X31], #0x10
	0x026B18D0 BR X2
	0x026B18D4 BL 0x1C16F20
	0x026B18D8 MOV X0, X19
	0x026B18DC BL 0x1C171E0
	0x026B18E0 STP X30, X19, [X31 - 0x10]!
	0x026B18E4 CBZ X0, 0x26B1958
	0x026B18E8 MOV X19, X1
	0x026B18EC MOV X1, X31
	0x026B18F0 BL 0x3DEBF58
	0x026B18F4 LDR X8, [X19 + 0x20]
	0x026B18F8 MOV X19, X0
	0x026B18FC LDR X8, [X8 + 0xC0]
	0x026B1900 LDR X1, [X8 + 0x20]
	0x026B1904 LDRB W8, [X1 + 0x135]
	0x026B1908 TBNZ X8, 0x0, 0x26B1918
	0x026B190C MOV X0, X1
	0x026B1910 BL 0x1C5C684
	0x026B1914 MOV X1, X0
	0x026B1918 CBZ X19, 0x26B1958
	0x026B191C LDR X8, [X19]
	0x026B1920 LDRB W9, [X1 + 0x130]
	0x026B1924 LDRB W10, [X8 + 0x130]
	0x026B1928 CMP W10, W9
	0x026B192C B.CC 0x26B195C
	0x026B1930 LDR X10, [X8 + 0xC8]
	0x026B1934 ADD X9, X10, X9, 0x3, LSL
	0x026B1938 LDUR X9, [X9 - 0x8]
	0x026B193C CMP X9, X1
	0x026B1940 B.NE 0x26B195C
	0x026B1944 LDR X2, [X8 + 0x8C8]
	0x026B1948 LDR X1, [X8 + 0x8D0]
	0x026B194C MOV X0, X19
	0x026B1950 LDP X30, X19, [X31], #0x10
	0x026B1954 BR X2
	0x026B1958 BL 0x1C16F20
	0x026B195C MOV X0, X19
	0x026B1960 BL 0x1C171E0
	0x026B1964 STP X30, X19, [X31 - 0x10]!
	0x026B1968 CBZ X0, 0x26B19DC

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+20]
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Compare X1, 0
	006 JumpIfEqual {124}
	007 Move W8, [X1+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W9, W31
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Add W10, W9, 1
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Add X11, X1, 32
	014 NotImplemented "Instruction LDRSH not yet implemented."
	015 NotImplemented "Instruction LDRSH not yet implemented."
	016 Add W31, W10, W12
	017 Move W10, [X0+32]
	018 Move TEMP, X10
	019 And TEMP, TEMP, -2147483648
	020 Compare TEMP, -2147483648
	021 JumpIfNotEqual {38}
	022 Move W10, [X0+36]
	023 Move W11, [X0+24]
	024 Move W12, [X0+28]
	025 Add W10, W10, 1
	026 Multiply W12, W12, W11
	027 NotImplemented "Instruction SDIV not yet implemented."
	028 Move [X0+36], W10
	029 NotImplemented "Instruction MSUB not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move [X0+40], W10
	033 Move W10, W31
	034 Move TEMP, 0
	035 Not TEMP
	036 Move W10, TEMP
	037 Move [X0+32], W10
	038 Add W9, W9, 2
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Compare X1, 0
	041 JumpIfEqual {124}
	042 Move X9, [X1+24]
	043 Move W8, W31
	044 NotImplemented "Instruction CMP not yet implemented."
	045 And X9, X9, 0
	046 Compare X9, 0
	047 JumpIfEqual {116}
	048 Move X8, X31
	049 Add X10, X1, 32
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction LDRSH not yet implemented."
	052 Move TEMP, X11
	053 And TEMP, TEMP, -2147483648
	054 Compare TEMP, -2147483648
	055 JumpIfEqual {73}
	056 Move W11, [X0+32]
	057 Move TEMP, X11
	058 And TEMP, TEMP, -2147483648
	059 Compare TEMP, -2147483648
	060 JumpIfNotEqual {77}
	061 Move W11, [X0+36]
	062 Move W12, [X0+24]
	063 Move W13, [X0+28]
	064 Add W11, W11, 1
	065 Multiply W13, W13, W12
	066 NotImplemented "Instruction SDIV not yet implemented."
	067 Move [X0+36], W11
	068 NotImplemented "Instruction MSUB not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CSET not yet implemented."
	071 Move [X0+40], W11
	072 Move W11, W31
	073 Move TEMP, 0
	074 Not TEMP
	075 Move W11, TEMP
	076 Move [X0+32], W11
	077 Add X8, X8, 1
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Compare X1, 0
	080 JumpIfEqual {124}
	081 Move W9, [X1+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move W10, W31
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Add W11, W10, 1
	086 NotImplemented "Instruction CMP not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Add X12, X1, 32
	089 NotImplemented "Instruction LDRSH not yet implemented."
	090 NotImplemented "Instruction LDRSH not yet implemented."
	091 Add W31, W11, W12
	092 Move W11, [X0+32]
	093 Move TEMP, X11
	094 And TEMP, TEMP, -2147483648
	095 Compare TEMP, -2147483648
	096 JumpIfNotEqual {113}
	097 Move W11, [X0+36]
	098 Move W12, [X0+24]
	099 Move W13, [X0+28]
	100 Add W11, W11, 1
	101 Multiply W13, W13, W12
	102 NotImplemented "Instruction SDIV not yet implemented."
	103 Move [X0+36], W11
	104 NotImplemented "Instruction MSUB not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 NotImplemented "Instruction CSET not yet implemented."
	107 Move [X0+40], W11
	108 Move W11, W31
	109 Move TEMP, 0
	110 Not TEMP
	111 Move W11, TEMP
	112 Move [X0+32], W11
	113 Add W10, W10, W8
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move W8, W31
	116 Move W0, W8
	117 Move X30, [X31+16]
	118 Return X0
	119 NotImplemented "Instruction CMP not yet implemented."
	120 NotImplemented "Instruction CINC not yet implemented."
	121 NotImplemented "Instruction SBFM not yet implemented."
	122 NotImplemented "Instruction SDIV not yet implemented."
	123 Call 0x1C17F28
	124 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x026B196C MOV X19, X1
	0x026B1970 MOV X1, X31
	0x026B1974 BL 0x3DEBF58
	0x026B1978 LDR X8, [X19 + 0x20]
	0x026B197C MOV X19, X0
	0x026B1980 LDR X8, [X8 + 0xC0]
	0x026B1984 LDR X1, [X8 + 0x20]
	0x026B1988 LDRB W8, [X1 + 0x135]
	0x026B198C TBNZ X8, 0x0, 0x26B199C
	0x026B1990 MOV X0, X1
	0x026B1994 BL 0x1C5C684
	0x026B1998 MOV X1, X0
	0x026B199C CBZ X19, 0x26B19DC
	0x026B19A0 LDR X8, [X19]
	0x026B19A4 LDRB W9, [X1 + 0x130]
	0x026B19A8 LDRB W10, [X8 + 0x130]
	0x026B19AC CMP W10, W9
	0x026B19B0 B.CC 0x26B19E0
	0x026B19B4 LDR X10, [X8 + 0xC8]
	0x026B19B8 ADD X9, X10, X9, 0x3, LSL
	0x026B19BC LDUR X9, [X9 - 0x8]
	0x026B19C0 CMP X9, X1
	0x026B19C4 B.NE 0x26B19E0
	0x026B19C8 LDR X2, [X8 + 0x248]
	0x026B19CC LDR X1, [X8 + 0x250]
	0x026B19D0 MOV X0, X19
	0x026B19D4 LDP X30, X19, [X31], #0x10
	0x026B19D8 BR X2
	0x026B19DC BL 0x1C16F20
	0x026B19E0 MOV X0, X19
	0x026B19E4 BL 0x1C171E0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1D2A000
	007 Move X22, 0x1A6B000
	008 Move W8, [X21+973]
	009 Move X22, [X22+2128]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x1A6B000
	017 Move X0, [X0+2128]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+973], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X8, [X20+32]
	027 Move S0, W31
	028 Move X8, [X8+192]
	029 Move X0, [X8+56]
	030 Call Marshal.SizeOf, V0
	031 Move [X19+16], W0
	032 Move X0, X19
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X1, X31
	038 Move X30, [X31+48]
	039 Call Object..ctor, X0
	040 Return 

