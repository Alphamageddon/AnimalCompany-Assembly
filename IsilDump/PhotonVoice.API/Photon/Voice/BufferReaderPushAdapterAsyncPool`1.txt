Type: Photon.Voice.BufferReaderPushAdapterAsyncPool`1

Method: System.Void .ctor(Photon.Voice.IDataReader`1<T> reader)

Disassembly:
	0x028E4F38 LDUR X11, [X10 - 0x8]
	0x028E4F3C CMP X11, X1
	0x028E4F40 B.EQ 0x28E4F68
	0x028E4F44 SUBS X9, X9, 0x1
	0x028E4F48 ADD X10, X10, 0x10
	0x028E4F4C B.NE 0x28E4F38
	0x028E4F50 MOVZ W2, 0x5
	0x028E4F54 MOV X0, X22
	0x028E4F58 BL 0x1C5C788
	0x028E4F5C B 0x28E4F78

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void Service(Photon.Voice.LocalVoice localVoice)

Disassembly:
	0x028E4F60 MOV X23, X31
	0x028E4F64 B 0x28E525C
	0x028E4F68 LDR W9, [X10]
	0x028E4F6C ADD W9, W9, 0x5
	0x028E4F70 ADD X8, X8, W9, 0x4, SXTW
	0x028E4F74 ADD X0, X8, 0x138
	0x028E4F78 LDP X8, X3, [X0]
	0x028E4F7C MOV X0, X22
	0x028E4F80 MOV X1, X23
	0x028E4F84 MOV W2, W31
	0x028E4F88 BLR X8
	0x028E4F8C B 0x28E525C
	0x028E4F90 LDRSW X9, [X10]
	0x028E4F94 ADD X8, X8, X9, 0x4, LSL
	0x028E4F98 ADD X0, X8, 0x138
	0x028E4F9C LDP X8, X1, [X0]
	0x028E4FA0 MOV X0, X20
	0x028E4FA4 BLR X8
	0x028E4FA8 MOV X22, X0
	0x028E4FAC CBZ X0, 0x28E529C
	0x028E4FB0 ADRP X25, 0x180F000
	0x028E4FB4 LDR X25, [X25 + 0xE18]
	0x028E4FB8 MOV X23, X31
	0x028E4FBC MOV W20, W31
	0x028E4FC0 MOVZ W26, 0x38
	0x028E4FC4 MOVZ W27, 0x40000000
	0x028E4FC8 LDR X8, [X22]
	0x028E4FCC LDR X1, [X25]
	0x028E4FD0 LDRH W9, [X8 + 0x12E]
	0x028E4FD4 CBZ X9, 0x28E4FF8
	0x028E4FD8 LDR X10, [X8 + 0xB0]
	0x028E4FDC ADD X10, X10, 0x8
	0x028E4FE0 LDUR X11, [X10 - 0x8]
	0x028E4FE4 CMP X11, X1
	0x028E4FE8 B.EQ 0x28E5008
	0x028E4FEC SUBS X9, X9, 0x1
	0x028E4FF0 ADD X10, X10, 0x10
	0x028E4FF4 B.NE 0x28E4FE0
	0x028E4FF8 MOV X0, X22
	0x028E4FFC MOV W2, W31
	0x028E5000 BL 0x1C5C788
	0x028E5004 B 0x28E5014
	0x028E5008 LDRSW X9, [X10]
	0x028E500C ADD X8, X8, X9, 0x4, LSL
	0x028E5010 ADD X0, X8, 0x138
	0x028E5014 LDP X8, X1, [X0]
	0x028E5018 MOV X0, X22
	0x028E501C BLR X8
	0x028E5020 TBZ X0, 0x0, 0x28E51E0
	0x028E5024 LDR X0, [X21 + 0x20]
	0x028E5028 LDRB W8, [X0 + 0x135]
	0x028E502C TBNZ X8, 0x0, 0x28E5034
	0x028E5030 BL 0x1C5C684
	0x028E5034 LDR X8, [X0 + 0xC0]
	0x028E5038 LDR X1, [X8 + 0x38]
	0x028E503C LDRB W8, [X1 + 0x135]
	0x028E5040 TBNZ X8, 0x0, 0x28E5050
	0x028E5044 MOV X0, X1
	0x028E5048 BL 0x1C5C684
	0x028E504C MOV X1, X0
	0x028E5050 LDR X8, [X22]
	0x028E5054 LDRH W9, [X8 + 0x12E]
	0x028E5058 CBZ X9, 0x28E507C
	0x028E505C LDR X10, [X8 + 0xB0]
	0x028E5060 ADD X10, X10, 0x8
	0x028E5064 LDUR X11, [X10 - 0x8]
	0x028E5068 CMP X11, X1
	0x028E506C B.EQ 0x28E508C
	0x028E5070 SUBS X9, X9, 0x1
	0x028E5074 ADD X10, X10, 0x10
	0x028E5078 B.NE 0x28E5064
	0x028E507C MOV X0, X22
	0x028E5080 MOV W2, W31
	0x028E5084 BL 0x1C5C788
	0x028E5088 B 0x28E5098
	0x028E508C LDRSW X9, [X10]
	0x028E5090 ADD X8, X8, X9, 0x4, LSL
	0x028E5094 ADD X0, X8, 0x138
	0x028E5098 LDP X9, X1, [X0]
	0x028E509C ADD X8, X31, 0x40
	0x028E50A0 MOV X0, X22
	0x028E50A4 BLR X9
	0x028E50A8 LDP V0, V1, [X31 + 0x40]
	0x028E50AC LDR V2, [X31 + 0x6]
	0x028E50B0 LDR X8, [X31 + 0x70]
	0x028E50B4 STP V0, V1, [X31 + 0x80]
	0x028E50B8 STR V2, [X31 + 0xA]
	0x028E50BC STR X8, [X31 + 0xB0]
	0x028E50C0 CBZ X23, 0x28E5128
	0x028E50C4 LDR W8, [X23 + 0x18]
	0x028E50C8 CMP W20, W8
	0x028E50CC B.NE 0x28E517C
	0x028E50D0 ADDS W31, W20, W27

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X2+32]
	008 Move X19, X1
	009 Move X20, X2
	010 Move X21, X0
	011 Move X8, [X8+192]
	012 Move X1, [X8+24]
	013 Move W8, [X1+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {21}
	018 Move X0, X1
	019 Call 0x1C5D684
	020 Move X1, X0
	021 Compare X19, 0
	022 JumpIfEqual {95}
	023 Move X8, [X19]
	024 Move W9, [X1+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, [X8+200]
	028 Add X8, X8, X9
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, [X19+312]
	032 Compare X0, 0
	033 JumpIfEqual {95}
	034 Move X8, [X20+32]
	035 Move X8, [X8+192]
	036 Move X1, [X8+48]
	037 Call 0x2D11CC0, X0
	038 Move X23, [X21+16]
	039 Compare X23, 0
	040 JumpIfEqual {95}
	041 Move X22, X0
	042 Move X8, [X20+32]
	043 Move X8, [X8+192]
	044 Move X1, [X8]
	045 Move W8, [X1+309]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {53}
	050 Move X0, X1
	051 Call 0x1C5D684
	052 Move X1, X0
	053 Move X8, [X23]
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Compare X9, 0
	056 JumpIfEqual {63}
	057 Move X10, [X8+176]
	058 Add X10, X10, 8
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract X9, X9, 1
	062 Add X10, X10, 16
	063 Move X0, X23
	064 Move W2, W31
	065 Call 0x1C5D788
	066 NotImplemented "Instruction LDRSW not yet implemented."
	067 Add X8, X8, X9
	068 Add X0, X8, 312
	069 Move X8, [X0]
	070 Move X2, [X0+8]
	071 Move X0, X23
	072 Move X1, X22
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move X8, [X20+32]
	075 Move X8, [X8+192]
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {96}
	080 Move X2, [X8+64]
	081 Move X0, X19
	082 Move X1, X22
	083 Call 0x3192E98, X0, X1
	084 Move X0, [X19+312]
	085 Compare X0, 0
	086 JumpIfEqual {95}
	087 Move X8, [X20+32]
	088 Move X8, [X8+192]
	089 Move X1, [X8+48]
	090 Call 0x2D11CC0, X0
	091 Move X23, [X21+16]
	092 Move X22, X0
	093 Compare X23, 0
	094 JumpIfNotEqual {42}
	095 Call 0x1C17F20
	096 Compare X22, 0
	097 JumpIfEqual {95}
	098 Move X0, [X19+312]
	099 Compare X0, 0
	100 JumpIfEqual {95}
	101 Move W2, [X22+24]
	102 Move X3, [X8+88]
	103 Move X1, X22
	104 Move X20, [X31+32]
	105 Move X19, [X31+40]
	106 Move X22, [X31+16]
	107 Move X21, [X31+24]
	108 Move X30, [X31+48]
	109 Move X23, [X31+56]
	110 Call 0x2D11D28, X0, X1, X2
	111 Return 
	112 Move X0, X19
	113 Call 0x1C181E0

