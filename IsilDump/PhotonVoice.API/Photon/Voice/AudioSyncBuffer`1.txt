Type: Photon.Voice.AudioSyncBuffer`1

Method: System.Void .ctor(Photon.Voice.AudioOutDelayControl/PlayDelayConfig playDelayConfig, Photon.Voice.ILogger logger, System.String logPrefix, System.Boolean debugInfo)

Disassembly:
	0x02642A64 LDR X8, [X0]
	0x02642A68 MOV X20, X1
	0x02642A6C MOV X19, X0
	0x02642A70 LDR X9, [X8 + 0x278]
	0x02642A74 LDR X1, [X8 + 0x280]
	0x02642A78 BLR X9
	0x02642A7C LDR X8, [X19]
	0x02642A80 STP S0, S1, [X19 + 0x44]
	0x02642A84 STP S2, S3, [X19 + 0x4C]
	0x02642A88 MOV X0, X19
	0x02642A8C LDP X9, X1, [X8 + 0x1C8]
	0x02642A90 BLR X9
	0x02642A94 CBZ X0, 0x2642AC4
	0x02642A98 LDR X8, [X20 + 0x20]
	0x02642A9C LDP S2, S3, [X19 + 0x4C]
	0x02642AA0 LDP S0, S1, [X19 + 0x44]
	0x02642AA4 LDR X8, [X8 + 0xC0]
	0x02642AA8 LDR X1, [X8 + 0x90]
	0x02642AAC BL 0x28CC210
	0x02642AB0 MOVZ W8, 0x1
	0x02642AB4 STRB W8, [X19 + 0x54]
	0x02642AB8 LDP X20, X19, [X31 + 0x10]
	0x02642ABC LDR X30, [X31], #0x20
	0x02642AC0 RET
	0x02642AC4 BL 0x1C16F20
	0x02642AC8 STR X30, [X31 - 0x10]!
	0x02642ACC LDR X8, [X0]
	0x02642AD0 LDP X9, X1, [X8 + 0x1C8]
	0x02642AD4 BLR X9
	0x02642AD8 CBZ X0, 0x2642AEC
	0x02642ADC LDP S0, S1, [X0 + 0x18]
	0x02642AE0 LDP S2, S3, [X0 + 0x20]
	0x02642AE4 LDR X30, [X31], #0x10
	0x02642AE8 RET
	0x02642AEC BL 0x1C16F20
	0x02642AF0 RET
	0x02642AF4 STR X30, [X31 - 0x30]!
	0x02642AF8 STP X22, X21, [X31 + 0x10]
	0x02642AFC STP X20, X19, [X31 + 0x20]
	0x02642B00 ADRP X21, 0x1D98000
	0x02642B04 ADRP X22, 0x1ADB000
	0x02642B08 ADRP X20, 0x1ADB000
	0x02642B0C LDRB W8, [X21 + 0xF4]
	0x02642B10 LDR X22, [X22 + 0x530]
	0x02642B14 LDR X20, [X20 + 0x538]
	0x02642B18 MOV X19, X0
	0x02642B1C TBNZ X8, 0x0, 0x2642B40
	0x02642B20 ADRP X0, 0x1ADB000
	0x02642B24 LDR X0, [X0 + 0x538]
	0x02642B28 BL 0x1C16CF4
	0x02642B2C ADRP X0, 0x1ADB000
	0x02642B30 LDR X0, [X0 + 0x530]
	0x02642B34 BL 0x1C16CF4
	0x02642B38 MOVZ W8, 0x1
	0x02642B3C STRB W8, [X21 + 0xF4]
	0x02642B40 LDR X0, [X22]
	0x02642B44 BL 0x1C16F10
	0x02642B48 LDR X5, [X20]
	0x02642B4C MOVZ W2, 0x1
	0x02642B50 MOV X1, X31
	0x02642B54 MOV X3, X31
	0x02642B58 MOV W4, W31
	0x02642B5C MOV X20, X0
	0x02642B60 BL 0x28E275C
	0x02642B64 STR X20, [X19 + 0x38]
	0x02642B68 MOV X0, X19

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X28, 0x1D99000
	013 Move X27, 0x1AB2000
	014 Move X26, 0x1ADC000
	015 Move W8, [X28+236]
	016 Move X27, [X27+2440]
	017 Move X26, [X26+1240]
	018 Move X23, X6
	019 Move W21, W5
	020 Move X25, X4
	021 Move X19, X3
	022 Move X20, X2
	023 Move X22, X1
	024 Move X24, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {40}
	029 Move X0, 0x1ADC000
	030 Move X0, [X0+1240]
	031 Call 0x1C17CF4
	032 Move X0, 0x1AB2000
	033 Move X0, [X0+3544]
	034 Call 0x1C17CF4
	035 Move X0, 0x1AB2000
	036 Move X0, [X0+2440]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X28+236], W8
	040 Move X1, [X27]
	041 Move X0, X25
	042 Move X2, X31
	043 Call String.op_Equality, X0, X1
	044 Move X26, [X26]
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {50}
	049 Move X1, [X27]
	050 Move X8, 0x1AB2000
	051 Move X8, [X8+3544]
	052 Move X1, X25
	053 Move X2, X31
	054 Move X0, [X8]
	055 Call String.Concat, X0, X1
	056 Move X1, X0
	057 Move X0, X26
	058 Move X2, X31
	059 Call String.Concat, X0, X1
	060 Move X8, [X23+32]
	061 And W6, W21, 1
	062 Move X5, X0
	063 Move X0, X24
	064 Move X8, [X8+192]
	065 Move X2, X22
	066 Move X3, X20
	067 Move X4, X19
	068 Move X7, [X8]
	069 Move X20, [X31+80]
	070 Move X19, [X31+88]
	071 Move X22, [X31+64]
	072 Move X21, [X31+72]
	073 Move X24, [X31+48]
	074 Move X23, [X31+56]
	075 Move X26, [X31+32]
	076 Move X25, [X31+40]
	077 Move X28, [X31+16]
	078 Move X27, [X31+24]
	079 Move W1, W31
	080 Move X30, [X31+96]
	081 Call 0x263ECE4, X0, X1, X2, X3, X4, X5
	082 Return 

Method: System.Int64 get_OutPos()

Disassembly:
	0x02642B6C LDP X20, X19, [X31 + 0x20]
	0x02642B70 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 NotImplemented "Instruction LDRSW not yet implemented."
	002 Return X0

Method: System.Void OutCreate(System.Int32 frequency, System.Int32 channels, System.Int32 bufferSamples)

Disassembly:
	0x02642B74 MOV X1, X31
	0x02642B78 LDR X30, [X31], #0x30
	0x02642B7C B 0x3C36C30
	0x02642B80 LDR X0, [X0 + 0x20]
	0x02642B84 RET
	0x02642B88 STR X1, [X0 + 0x20]
	0x02642B8C RET
	0x02642B90 LDRB W0, [X0 + 0x28]
	0x02642B94 RET
	0x02642B98 AND W8, W1, 0x1
	0x02642B9C STRB W8, [X0 + 0x28]
	0x02642BA0 RET
	0x02642BA4 LDR X0, [X0 + 0x30]
	0x02642BA8 RET
	0x02642BAC LDR X8, [X0]
	0x02642BB0 STR X1, [X0 + 0x30]
	0x02642BB4 LDR X3, [X8 + 0x228]
	0x02642BB8 LDR X2, [X8 + 0x230]
	0x02642BBC BR X3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move [X0+188], W1
	006 Move [X0+192], W2
	007 Move [X0+196], W3
	008 Move X8, [X4+32]
	009 Move X19, X0
	010 Move W20, W3
	011 Move W21, W2
	012 Move X8, [X8+192]
	013 Move X0, [X8+24]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Multiply W1, W20, W21
	021 Call 0x1C17D6C
	022 Move [X19+176], X0
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return 

Method: System.Void OutStart()

Disassembly:
	0x02642BC0 LDR X8, [X0]
	0x02642BC4 LDP X2, X1, [X8 + 0x1C8]
	0x02642BC8 BR X2

ISIL:
	001 Move W8, 1
	002 Move [X0+200], W8
	003 Return 

Method: System.Void OutWrite(T[] data, System.Int32 offsetSamples)

Disassembly:
	0x02642BCC LDR X0, [X0 + 0x38]
	0x02642BD0 RET
	0x02642BD4 LDR V0, [X0 + 0x44]
	0x02642BD8 RET
	0x02642BDC STR S0, [X0 + 0x44]
	0x02642BE0 RET
	0x02642BE4 LDRB W0, [X0 + 0x48]
	0x02642BE8 RET
	0x02642BEC AND W8, W1, 0x1
	0x02642BF0 STRB W8, [X0 + 0x48]
	0x02642BF4 RET
	0x02642BF8 STP X30, X21, [X31 - 0x20]!
	0x02642BFC STP X20, X19, [X31 + 0x10]
	0x02642C00 ADRP X21, 0x1D98000
	0x02642C04 ADRP X20, 0x1AB1000
	0x02642C08 LDRB W8, [X21 + 0xF5]
	0x02642C0C LDR X20, [X20 + 0x598]
	0x02642C10 MOV X19, X0
	0x02642C14 TBNZ X8, 0x0, 0x2642C38
	0x02642C18 ADRP X0, 0x1ADB000
	0x02642C1C LDR X0, [X0 + 0x4E0]
	0x02642C20 BL 0x1C16CF4
	0x02642C24 ADRP X0, 0x1AB1000
	0x02642C28 LDR X0, [X0 + 0x598]
	0x02642C2C BL 0x1C16CF4
	0x02642C30 MOVZ W8, 0x1
	0x02642C34 STRB W8, [X21 + 0xF5]
	0x02642C38 LDR X0, [X20]
	0x02642C3C LDR X20, [X19 + 0x20]
	0x02642C40 LDR W8, [X0 + 0xE0]
	0x02642C44 CBNZ W8, 0x2642C4C
	0x02642C48 BL 0x1C16DFC
	0x02642C4C MOV X0, X20
	0x02642C50 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, W2
	006 Move X2, [X0+176]
	007 Compare X2, 0
	008 JumpIfEqual {39}
	009 Move X19, X1
	010 Compare X1, 0
	011 JumpIfEqual {39}
	012 Move W9, [X0+192]
	013 Move W10, [X2+24]
	014 Move W4, [X19+24]
	015 Move X20, X0
	016 Multiply W3, W9, W8
	017 Subtract W21, W10, W3
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X0, X19
	020 Move W1, W31
	021 Move W4, W21
	022 Move X5, X31
	023 Call Array.Copy, X0, X1, X2, X3, X4
	024 Move W8, [X19+24]
	025 Move X2, [X20+176]
	026 Move X0, X19
	027 Move W1, W21
	028 Subtract W4, W8, W21
	029 Move W3, W31
	030 Move X0, X19
	031 Move W1, W31
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X5, X31
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Call Array.Copy, X0, X1, X2, X3, X4
	038 Return 
	039 Call 0x1C17F20

Method: System.Void Stop()

Disassembly:
	0x02642C54 MOV X2, X31
	0x02642C58 BL 0x3C3883C

ISIL:
	001 Move [X0+200], W31
	002 Return 

Method: System.Void Read(T[] outBuf, System.Int32 outChannels, System.Int32 outSampleRate)

Disassembly:
	0x02642C5C TBZ X0, 0x0, 0x2642C78
	0x02642C60 ADRP X8, 0x1ADB000
	0x02642C64 LDR X8, [X8 + 0x4E0]
	0x02642C68 MOV X0, X19
	0x02642C6C LDR X1, [X8]
	0x02642C70 BL 0x21A3F50
	0x02642C74 STR X0, [X19 + 0x20]
	0x02642C78 LDP X20, X19, [X31 + 0x10]
	0x02642C7C LDP X30, X21, [X31], #0x20
	0x02642C80 RET
	0x02642C84 LDR X8, [X1 + 0x20]
	0x02642C88 LDR X8, [X8 + 0xC0]
	0x02642C8C LDR X1, [X8 + 0x38]
	0x02642C90 B 0x2642E10
	0x02642C94 STP X30, X21, [X31 - 0x20]!
	0x02642C98 STP X20, X19, [X31 + 0x10]
	0x02642C9C ADRP X21, 0x1D98000
	0x02642CA0 ADRP X20, 0x1AB1000
	0x02642CA4 LDRB W8, [X21 + 0xF6]
	0x02642CA8 LDR X20, [X20 + 0x598]
	0x02642CAC MOV X19, X0
	0x02642CB0 TBNZ X8, 0x0, 0x2642CC8
	0x02642CB4 ADRP X0, 0x1AB1000
	0x02642CB8 LDR X0, [X0 + 0x598]
	0x02642CBC BL 0x1C16CF4
	0x02642CC0 MOVZ W8, 0x1
	0x02642CC4 STRB W8, [X21 + 0xF6]
	0x02642CC8 LDR X0, [X20]
	0x02642CCC LDR X20, [X19 + 0x20]
	0x02642CD0 LDR W8, [X0 + 0xE0]
	0x02642CD4 CBNZ W8, 0x2642CDC
	0x02642CD8 BL 0x1C16DFC
	0x02642CDC MOV X0, X20
	0x02642CE0 MOV X1, X31
	0x02642CE4 MOV X2, X31
	0x02642CE8 BL 0x3C354F8
	0x02642CEC TBZ X0, 0x0, 0x2642D0C
	0x02642CF0 LDR X0, [X19 + 0x20]
	0x02642CF4 CBZ X0, 0x2642D18
	0x02642CF8 MOV X1, X19
	0x02642CFC LDP X20, X19, [X31 + 0x10]
	0x02642D00 MOV X2, X31
	0x02642D04 LDP X30, X21, [X31], #0x20
	0x02642D08 B 0x3BCD438
	0x02642D0C LDP X20, X19, [X31 + 0x10]
	0x02642D10 LDP X30, X21, [X31], #0x20
	0x02642D14 RET
	0x02642D18 BL 0x1C16F20
	0x02642D1C STR X30, [X31 - 0x30]!
	0x02642D20 STP X22, X21, [X31 + 0x10]
	0x02642D24 STP X20, X19, [X31 + 0x20]
	0x02642D28 ADRP X22, 0x1D98000
	0x02642D2C ADRP X21, 0x1AB1000
	0x02642D30 LDRB W8, [X22 + 0xF7]
	0x02642D34 LDR X21, [X21 + 0x598]
	0x02642D38 MOV X20, X1
	0x02642D3C MOV X19, X0
	0x02642D40 TBNZ X8, 0x0, 0x2642D70
	0x02642D44 ADRP X0, 0x1AB1000
	0x02642D48 LDR X0, [X0 + 0x598]
	0x02642D4C BL 0x1C16CF4
	0x02642D50 ADRP X0, 0x1ADB000
	0x02642D54 LDR X0, [X0 + 0x1E8]
	0x02642D58 BL 0x1C16CF4
	0x02642D5C ADRP X0, 0x1ADB000
	0x02642D60 LDR X0, [X0 + 0x4E8]
	0x02642D64 BL 0x1C16CF4
	0x02642D68 MOVZ W8, 0x1
	0x02642D6C STRB W8, [X22 + 0xF7]
	0x02642D70 LDR X8, [X20 + 0x20]
	0x02642D74 MOV X0, X19
	0x02642D78 LDR X8, [X8 + 0xC0]
	0x02642D7C LDR X1, [X8 + 0x38]
	0x02642D80 BL 0x2642E10
	0x02642D84 LDR X0, [X21]
	0x02642D88 LDR X20, [X19 + 0x20]
	0x02642D8C LDR W8, [X0 + 0xE0]
	0x02642D90 CBNZ W8, 0x2642D98
	0x02642D94 BL 0x1C16DFC
	0x02642D98 MOV X0, X20
	0x02642D9C MOV X1, X31
	0x02642DA0 MOV X2, X31
	0x02642DA4 BL 0x3C3883C
	0x02642DA8 TBZ X0, 0x0, 0x2642E00
	0x02642DAC ADRP X8, 0x1ADB000
	0x02642DB0 LDR X8, [X8 + 0x4E8]
	0x02642DB4 ADRP X20, 0x1ADB000
	0x02642DB8 MOV X1, X19
	0x02642DBC MOV X2, X31
	0x02642DC0 LDR X0, [X8]
	0x02642DC4 LDR X20, [X20 + 0x1E8]
	0x02642DC8 BL 0x321EFD0
	0x02642DCC LDR X8, [X20]
	0x02642DD0 MOV X20, X0
	0x02642DD4 LDR W9, [X8 + 0xE0]
	0x02642DD8 CBNZ W9, 0x2642DE4
	0x02642DDC MOV X0, X8
	0x02642DE0 BL 0x1C16DFC
	0x02642DE4 MOV X0, X20
	0x02642DE8 MOV X1, X19
	0x02642DEC LDP X20, X19, [X31 + 0x20]
	0x02642DF0 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move W8, [X0+200]
	012 Compare W8, 0
	013 JumpIfEqual {96}
	014 Move X20, X1
	015 Compare X1, 0
	016 JumpIfEqual {107}
	017 Move X19, X0
	018 Move X0, [X0+176]
	019 Compare X0, 0
	020 JumpIfEqual {107}
	021 Move W6, [X20+24]
	022 Move W10, [X19+184]
	023 Move W9, [X19+188]
	024 Move W8, [X19+192]
	025 Move W11, [X0+24]
	026 NotImplemented "Instruction SDIV not yet implemented."
	027 Move X22, X4
	028 Multiply W1, W8, W10
	029 Multiply W10, W12, W9
	030 Move W21, W2
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction SDIV not yet implemented."
	033 Subtract W23, W11, W1
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X2, X20
	037 Move W3, W31
	038 Move W4, W23
	039 Move X5, X31
	040 Call Array.Copy, X0, X1, X2, X3, X4
	041 Move W8, [X20+24]
	042 Move X0, [X19+176]
	043 Move W1, W31
	044 Move X2, X20
	045 Subtract W4, W8, W23
	046 Move W3, W23
	047 Multiply W2, W8, W26
	048 Subtract W24, W2, W23
	049 Move X10, [X22+32]
	050 Multiply W11, W23, W3
	051 NotImplemented "Instruction SDIV not yet implemented."
	052 Multiply W9, W9, W21
	053 Move X10, [X10+192]
	054 NotImplemented "Instruction SDIV not yet implemented."
	055 Move W2, W23
	056 Move W3, W8
	057 Move X10, [X10+40]
	058 Move X4, X20
	059 Move W5, W31
	060 Move W6, W25
	061 Move W7, W21
	062 Move [X31], X10
	063 Call 0x219E44C, X0, X1, X2, X3, X4, X5, X6, X7
	064 Move X8, [X22+32]
	065 Move W9, [X20+24]
	066 Move X0, [X19+176]
	067 Move W3, [X19+192]
	068 Move X8, [X8+192]
	069 Subtract W6, W9, W25
	070 Move W1, W31
	071 Move W2, W24
	072 Move X8, [X8+40]
	073 Move X4, X20
	074 Move W5, W25
	075 Move [X31], X8
	076 Move X2, X20
	077 Move W3, W31
	078 Move W4, W6
	079 Move X5, X31
	080 Call Array.Copy, X0, X1, X2, X3, X4
	081 Move X9, [X22+32]
	082 Move W3, W8
	083 Move X4, X20
	084 Move W5, W31
	085 Move X9, [X9+192]
	086 Move X9, [X9+40]
	087 Move [X31], X9
	088 Move W7, W21
	089 Call 0x219E44C, X0, X1, X2, X3, X4, X5, X6, X7
	090 Move W8, [X19+184]
	091 Move W9, [X19+196]
	092 Add W8, W8, W26
	093 NotImplemented "Instruction SDIV not yet implemented."
	094 NotImplemented "Instruction MSUB not yet implemented."
	095 Move [X19+184], W8
	096 Move X20, [X31+80]
	097 Move X19, [X31+88]
	098 Move X22, [X31+64]
	099 Move X21, [X31+72]
	100 Move X24, [X31+48]
	101 Move X23, [X31+56]
	102 Move X26, [X31+32]
	103 Move X25, [X31+40]
	104 Move X30, [X31+16]
	105 Add X31, X31, 96
	106 Return 
	107 Call 0x1C17F20

