Type: Photon.Voice.VoiceClient

Method: System.Boolean get_ThreadingEnabled()

Disassembly:
	0x03560DFC CBZ X19, 0x3560E90
	0x03560E00 LDR X9, [X0 + 0xB8]

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_ThreadingEnabled(System.Boolean value)

Disassembly:
	0x03560E04 LDR X8, [X19]
	0x03560E08 LDR X1, [X27]
	0x03560E0C LDR X21, [X9]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+32], W8
	003 Return 

Method: System.Int32 get_EventsLost()

Disassembly:
	0x03560E10 LDRH W9, [X8 + 0x12E]
	0x03560E14 CBZ X9, 0x3560E38

ISIL:
	001 Move W0, [X0+36]
	002 Return X0

Method: System.Void set_EventsLost(System.Int32 value)

Disassembly:
	0x03560E18 LDR X10, [X8 + 0xB0]
	0x03560E1C ADD X10, X10, 0x8

ISIL:
	001 Move [X0+36], W1
	002 Return 

Method: System.Int32 get_FramesLost()

Disassembly:
	0x03560E20 LDUR X11, [X10 - 0x8]
	0x03560E24 CMP X11, X1

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_FramesLost(System.Int32 value)

Disassembly:
	0x03560E28 B.EQ 0x3560E48
	0x03560E2C SUBS X9, X9, 0x1

ISIL:
	001 Move [X0+40], W1
	002 Return 

Method: System.Int32 get_FramesFragPart()

Disassembly:
	0x03560E30 ADD X10, X10, 0x10
	0x03560E34 B.NE 0x3560E20

ISIL:
	001 Move W0, [X0+44]
	002 Return X0

Method: System.Void set_FramesFragPart(System.Int32 value)

Disassembly:
	0x03560E38 MOVZ W2, 0x1
	0x03560E3C MOV X0, X19

ISIL:
	001 Move [X0+44], W1
	002 Return 

Method: System.Int32 get_FramesRecovered()

Disassembly:
	0x03560E40 BL 0x1C5C788
	0x03560E44 B 0x3560E58

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.Void set_FramesRecovered(System.Int32 value)

Disassembly:
	0x03560E48 LDR W9, [X10]
	0x03560E4C ADD W9, W9, 0x1

ISIL:
	001 Move [X0+48], W1
	002 Return 

Method: System.Int32 get_FramesLate()

Disassembly:
	0x03560E50 ADD X8, X8, W9, 0x4, SXTW
	0x03560E54 ADD X0, X8, 0x138

ISIL:
	001 Move W0, [X0+52]
	002 Return X0

Method: System.Void set_FramesLate(System.Int32 value)

Disassembly:
	0x03560E58 LDP X8, X4, [X0]
	0x03560E5C MOVZ W1, 0x3

ISIL:
	001 Move [X0+52], W1
	002 Return 

Method: System.Int32 get_FramesReceived()

Disassembly:
	0x03560E60 MOV X0, X19
	0x03560E64 MOV X2, X20

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: System.Void set_FramesReceived(System.Int32 value)

Disassembly:
	0x03560E68 MOV X3, X21
	0x03560E6C BLR X8

ISIL:
	001 Move [X0+56], W1
	002 Return 

Method: System.Int32 get_FramesReceivedFEC()

Disassembly:
	0x03560E70 LDP X20, X19, [X31 + 0x60]
	0x03560E74 LDP X22, X21, [X31 + 0x50]

ISIL:
	001 Move W0, [X0+60]
	002 Return X0

Method: System.Void set_FramesReceivedFEC(System.Int32 value)

Disassembly:
	0x03560E78 LDP X24, X23, [X31 + 0x40]
	0x03560E7C LDP X26, X25, [X31 + 0x30]

ISIL:
	001 Move [X0+60], W1
	002 Return 

Method: System.Int32 get_FramesTryFEC()

Disassembly:
	0x03560E80 LDP X30, X27, [X31 + 0x20]
	0x03560E84 ADD X31, X31, 0x70

ISIL:
	001 Move W0, [X0+64]
	002 Return X0

Method: System.Void set_FramesTryFEC(System.Int32 value)

Disassembly:
	0x03560E88 RET
	0x03560E8C BL 0x1C16F28

ISIL:
	001 Move [X0+64], W1
	002 Return 

Method: System.Int32 get_FramesReceivedFragments()

Disassembly:
	0x03560E90 BL 0x1C16F20
	0x03560E94 SUB X31, X31, 0xE0

ISIL:
	001 Move W0, [X0+68]
	002 Return X0

Method: System.Void set_FramesReceivedFragments(System.Int32 value)

Disassembly:
	0x03560E98 STR X30, [X31 + 0x90]
	0x03560E9C STP X26, X25, [X31 + 0xA0]

ISIL:
	001 Move [X0+68], W1
	002 Return 

Method: System.Int32 get_FramesReceivedFragmented()

Disassembly:
	0x03560EA0 STP X24, X23, [X31 + 0xB0]
	0x03560EA4 STP X22, X21, [X31 + 0xC0]

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: System.Void set_FramesReceivedFragmented(System.Int32 value)

Disassembly:
	0x03560EA8 STP X20, X19, [X31 + 0xD0]
	0x03560EAC ADRP X22, 0xE7F000

ISIL:
	001 Move [X0+72], W1
	002 Return 

Method: System.Int32 get_FramesSent()

Disassembly:
	0x03560EB0 LDRB W8, [X22 + 0xDC1]
	0x03560EB4 MOV W19, W2
	0x03560EB8 MOV W20, W1
	0x03560EBC MOV X21, X0
	0x03560EC0 TBNZ X8, 0x0, 0x3560F50
	0x03560EC4 ADRP X0, 0xBD5000
	0x03560EC8 LDR X0, [X0 + 0x8B0]
	0x03560ECC BL 0x1C16CF4
	0x03560ED0 ADRP X0, 0xBD5000
	0x03560ED4 LDR X0, [X0 + 0x8B8]
	0x03560ED8 BL 0x1C16CF4
	0x03560EDC ADRP X0, 0xBD5000
	0x03560EE0 LDR X0, [X0 + 0x918]
	0x03560EE4 BL 0x1C16CF4
	0x03560EE8 ADRP X0, 0xBD5000
	0x03560EEC LDR X0, [X0 + 0x8C0]
	0x03560EF0 BL 0x1C16CF4
	0x03560EF4 ADRP X0, 0xBD5000
	0x03560EF8 LDR X0, [X0 + 0x8C8]
	0x03560EFC BL 0x1C16CF4
	0x03560F00 ADRP X0, 0xBD5000
	0x03560F04 LDR X0, [X0 + 0x8D0]
	0x03560F08 BL 0x1C16CF4
	0x03560F0C ADRP X0, 0xBD5000
	0x03560F10 LDR X0, [X0 + 0x8D8]
	0x03560F14 BL 0x1C16CF4
	0x03560F18 ADRP X0, 0xBD5000
	0x03560F1C LDR X0, [X0 + 0x8E0]
	0x03560F20 BL 0x1C16CF4
	0x03560F24 ADRP X0, 0xBD5000
	0x03560F28 LDR X0, [X0 + 0x8E8]
	0x03560F2C BL 0x1C16CF4
	0x03560F30 ADRP X0, 0xBD5000
	0x03560F34 LDR X0, [X0 + 0x8F0]
	0x03560F38 BL 0x1C16CF4
	0x03560F3C ADRP X0, 0xBD5000
	0x03560F40 LDR X0, [X0 + 0x8F8]
	0x03560F44 BL 0x1C16CF4
	0x03560F48 MOVZ W8, 0x1
	0x03560F4C STRB W8, [X22 + 0xDC1]
	0x03560F50 MOVI V0.2D, 0x0
	0x03560F54 STR X31, [X31 + 0x80]
	0x03560F58 STR X31, [X31 + 0x50]
	0x03560F5C STP V0, V0, [X31 + 0x60]
	0x03560F60 STP V0, V0, [X31 + 0x30]
	0x03560F64 LDR X0, [X21 + 0x68]
	0x03560F68 CBZ X0, 0x35610DC
	0x03560F6C ADRP X8, 0xBD5000
	0x03560F70 LDR X8, [X8 + 0x918]
	0x03560F74 MOV W1, W20
	0x03560F78 MOV W2, W19
	0x03560F7C LDR X3, [X8]
	0x03560F80 BL 0x2A3EFA4
	0x03560F84 LDR X0, [X21 + 0x88]
	0x03560F88 CBZ X0, 0x35610DC
	0x03560F8C ADRP X8, 0xBD5000
	0x03560F90 LDR X8, [X8 + 0x8B0]
	0x03560F94 ADRP X24, 0xBD5000
	0x03560F98 ADRP X25, 0xBD5000
	0x03560F9C LDR X24, [X24 + 0x8D0]
	0x03560FA0 LDR X25, [X25 + 0x8B8]
	0x03560FA4 LDR X1, [X8]
	0x03560FA8 ADRP X26, 0xBD5000
	0x03560FAC ADRP X23, 0xBD5000
	0x03560FB0 ADRP X22, 0xBD5000
	0x03560FB4 LDR X26, [X26 + 0x8D8]
	0x03560FB8 LDR X23, [X23 + 0x8C8]
	0x03560FBC LDR X22, [X22 + 0x8C0]
	0x03560FC0 ADD X8, X31, 0x8
	0x03560FC4 BL 0x2A13AB4
	0x03560FC8 LDUR V0, [X31 + 0x8]
	0x03560FCC LDUR V1, [X31 + 0x18]
	0x03560FD0 LDR X8, [X31 + 0x28]
	0x03560FD4 STP V0, V1, [X31 + 0x60]
	0x03560FD8 STR X8, [X31 + 0x80]
	0x03560FDC LDR X1, [X24]
	0x03560FE0 ADD X0, X31, 0x60
	0x03560FE4 BL 0x2BF5330
	0x03560FE8 TBZ X0, 0x0, 0x356107C
	0x03560FEC LDR X0, [X31 + 0x78]
	0x03560FF0 CBZ X0, 0x35610D8
	0x03560FF4 LDR X1, [X25]
	0x03560FF8 ADD X8, X31, 0x8
	0x03560FFC BL 0x29D395C
	0x03561000 LDUR V0, [X31 + 0x8]
	0x03561004 LDUR V1, [X31 + 0x18]
	0x03561008 LDR X8, [X31 + 0x28]
	0x0356100C STP V0, V1, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X20, 0xE80000
	007 Move W8, [X20+3514]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0xBD6000
	014 Move X0, [X0+2120]
	015 Call 0x1C17CF4
	016 Move X0, 0xBD6000
	017 Move X0, [X0+2128]
	018 Call 0x1C17CF4
	019 Move X0, 0xBD6000
	020 Move X0, [X0+2136]
	021 Call 0x1C17CF4
	022 Move X0, 0xBD6000
	023 Move X0, [X0+2144]
	024 Call 0x1C17CF4
	025 Move X0, 0xBD6000
	026 Move X0, [X0+2152]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3514], W8
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 Move [X31+32], X31
	032 Move [X31], V0
	033 Move [X31+8], V0
	034 Move X0, [X19+120]
	035 Compare X0, 0
	036 JumpIfEqual {70}
	037 Move X8, 0xBD6000
	038 Move X8, [X8+2120]
	039 Move X21, 0xBD6000
	040 Move X20, 0xBD6000
	041 Move X1, [X8]
	042 Move X21, [X21+2136]
	043 Move X20, [X20+2128]
	044 Add X8, X31, 0
	045 Call Dictionary`2<Byte, Object>.GetEnumerator, X0
	046 Move W19, W31
	047 Move X1, [X21]
	048 Add X0, X31, 0
	049 Call Enumerator<Byte, Object>.MoveNext, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {59}
	054 Move X8, [X31+24]
	055 Compare X8, 0
	056 JumpIfEqual {69}
	057 Move W8, [X8+20]
	058 Add W19, W8, W19
	059 Move X1, [X20]
	060 Add X0, X31, 0
	061 Call Enumerator<Byte, Object>.Dispose, X0
	062 Move W0, W19
	063 Move X20, [X31+64]
	064 Move X19, [X31+72]
	065 Move X30, [X31+48]
	066 Move X21, [X31+56]
	067 Add X31, X31, 80
	068 Return X0
	069 Call 0x1C17F20
	070 Call 0x1C17F20
	071 Move X21, X0
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X0, X21
	074 Call 0x3EB2AD0
	075 Move X20, [X0]
	076 Call 0x3EB2AE0
	077 Move X8, 0xBD6000
	078 Move X8, [X8+2128]
	079 Add X0, X31, 0
	080 Move X1, [X8]
	081 Call Enumerator<Byte, Object>.Dispose, X0
	082 Compare X20, 0
	083 JumpIfEqual {62}
	084 Move X0, X20
	085 Call 0x1C17F18
	086 Move X20, X31
	087 Move X21, X0
	088 Move X8, 0xBD6000
	089 Move X8, [X8+2128]
	090 Move X1, [X8]
	091 Add X0, X31, 0
	092 Call Enumerator<Byte, Object>.Dispose, X0
	093 Compare X20, 0
	094 JumpIfNotEqual {97}
	095 Move X0, X21
	096 Call 0x1D2D690
	097 Move X0, X20
	098 Call 0x1C17F18
	099 Call 0x1991590

Method: System.Int32 get_FramesSentBytes()

Disassembly:
	0x03561010 STR X8, [X31 + 0x50]
	0x03561014 LDR X1, [X26]
	0x03561018 ADD X0, X31, 0x30
	0x0356101C BL 0x2BEA018
	0x03561020 TBZ X0, 0x0, 0x3561040
	0x03561024 LDR X8, [X31 + 0x48]
	0x03561028 CBZ X8, 0x3561058
	0x0356102C LDR W9, [X8 + 0x10]
	0x03561030 CMP W9, W20
	0x03561034 B.NE 0x3561014
	0x03561038 STR W19, [X8 + 0x94]
	0x0356103C B 0x3561014
	0x03561040 MOV X21, X31
	0x03561044 LDR X1, [X23]
	0x03561048 ADD X0, X31, 0x30
	0x0356104C BL 0x2BEA130
	0x03561050 CBZ X21, 0x3560FDC
	0x03561054 B 0x35610D0
	0x03561058 BL 0x1C16F20
	0x0356105C B 0x35610E0
	0x03561060 B 0x3561064
	0x03561064 CMP W1, 0x1
	0x03561068 B.NE 0x35610A4
	0x0356106C BL 0x3EB1AD0
	0x03561070 LDR X21, [X0]
	0x03561074 BL 0x3EB1AE0
	0x03561078 B 0x3561044
	0x0356107C LDR X1, [X22]
	0x03561080 ADD X0, X31, 0x60
	0x03561084 BL 0x2BF5448
	0x03561088 LDP X20, X19, [X31 + 0xD0]
	0x0356108C LDP X22, X21, [X31 + 0xC0]
	0x03561090 LDP X24, X23, [X31 + 0xB0]
	0x03561094 LDP X26, X25, [X31 + 0xA0]
	0x03561098 LDR X30, [X31 + 0x90]
	0x0356109C ADD X31, X31, 0xE0
	0x035610A0 RET
	0x035610A4 MOV X19, X1
	0x035610A8 MOV X20, X0
	0x035610AC MOV X21, X31
	0x035610B0 LDR X1, [X23]
	0x035610B4 ADD X0, X31, 0x30
	0x035610B8 BL 0x2BEA130
	0x035610BC MOV X0, X20
	0x035610C0 MOV X1, X19
	0x035610C4 CBZ X21, 0x35610FC
	0x035610C8 MOV X0, X21
	0x035610CC BL 0x1C16F18
	0x035610D0 MOV X0, X21
	0x035610D4 BL 0x1C16F18
	0x035610D8 BL 0x1C16F20
	0x035610DC BL 0x1C16F20
	0x035610E0 MOV X19, X1
	0x035610E4 MOV X20, X0
	0x035610E8 B 0x35610B0
	0x035610EC B 0x35610FC
	0x035610F0 B 0x35610FC
	0x035610F4 B 0x35610FC
	0x035610F8 B 0x35610FC
	0x035610FC CMP W1, 0x1
	0x03561100 B.NE 0x3561128
	0x03561104 BL 0x3EB1AD0
	0x03561108 LDR X19, [X0]
	0x0356110C BL 0x3EB1AE0
	0x03561110 LDR X1, [X22]
	0x03561114 ADD X0, X31, 0x60
	0x03561118 BL 0x2BF5448
	0x0356111C CBZ X19, 0x3561088
	0x03561120 MOV X0, X19
	0x03561124 BL 0x1C16F18
	0x03561128 MOV X20, X0
	0x0356112C MOV X19, X31
	0x03561130 B 0x3561138
	0x03561134 MOV X20, X0
	0x03561138 LDR X1, [X22]
	0x0356113C ADD X0, X31, 0x60
	0x03561140 BL 0x2BF5448
	0x03561144 CBNZ X19, 0x3561150
	0x03561148 MOV X0, X20
	0x0356114C BL 0x1D2C690
	0x03561150 MOV X0, X19
	0x03561154 BL 0x1C16F18
	0x03561158 BL 0x1990590
	0x0356115C SUB X31, X31, 0x80
	0x03561160 STP X29, X30, [X31 + 0x20]
	0x03561164 STP X28, X27, [X31 + 0x30]
	0x03561168 STP X26, X25, [X31 + 0x40]
	0x0356116C STP X24, X23, [X31 + 0x50]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X20, 0xE7F000
	007 Move W8, [X20+3515]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0xBD5000
	014 Move X0, [X0+2120]
	015 Call 0x1C17CF4
	016 Move X0, 0xBD5000
	017 Move X0, [X0+2128]
	018 Call 0x1C17CF4
	019 Move X0, 0xBD5000
	020 Move X0, [X0+2136]
	021 Call 0x1C17CF4
	022 Move X0, 0xBD5000
	023 Move X0, [X0+2144]
	024 Call 0x1C17CF4
	025 Move X0, 0xBD5000
	026 Move X0, [X0+2152]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3515], W8
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 Move [X31+32], X31
	032 Move [X31], V0
	033 Move [X31+8], V0
	034 Move X0, [X19+120]
	035 Compare X0, 0
	036 JumpIfEqual {70}
	037 Move X8, 0xBD5000
	038 Move X8, [X8+2120]
	039 Move X21, 0xBD5000
	040 Move X20, 0xBD5000
	041 Move X1, [X8]
	042 Move X21, [X21+2136]
	043 Move X20, [X20+2128]
	044 Add X8, X31, 0
	045 Call Dictionary`2<Byte, Object>.GetEnumerator, X0
	046 Move W19, W31
	047 Move X1, [X21]
	048 Add X0, X31, 0
	049 Call Enumerator<Byte, Object>.MoveNext, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {59}
	054 Move X8, [X31+24]
	055 Compare X8, 0
	056 JumpIfEqual {69}
	057 Move W8, [X8+32]
	058 Add W19, W8, W19
	059 Move X1, [X20]
	060 Add X0, X31, 0
	061 Call Enumerator<Byte, Object>.Dispose, X0
	062 Move W0, W19
	063 Move X20, [X31+64]
	064 Move X19, [X31+72]
	065 Move X30, [X31+48]
	066 Move X21, [X31+56]
	067 Add X31, X31, 80
	068 Return X0
	069 Call 0x1C17F20
	070 Call 0x1C17F20
	071 Move X21, X0
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X0, X21
	074 Call 0x3EB2AD0
	075 Move X20, [X0]
	076 Call 0x3EB2AE0
	077 Move X8, 0xBD5000
	078 Move X8, [X8+2128]
	079 Add X0, X31, 0
	080 Move X1, [X8]
	081 Call Enumerator<Byte, Object>.Dispose, X0
	082 Compare X20, 0
	083 JumpIfEqual {62}
	084 Move X0, X20
	085 Call 0x1C17F18
	086 Move X20, X31
	087 Move X21, X0
	088 Move X8, 0xBD5000
	089 Move X8, [X8+2128]
	090 Move X1, [X8]
	091 Add X0, X31, 0
	092 Call Enumerator<Byte, Object>.Dispose, X0
	093 Compare X20, 0
	094 JumpIfNotEqual {97}
	095 Move X0, X21
	096 Call 0x1D2D690
	097 Move X0, X20
	098 Call 0x1C17F18
	099 Call 0x1991590

Method: System.Int32 get_RoundTripTime()

Disassembly:
	0x03561170 STP X22, X21, [X31 + 0x60]
	0x03561174 STP X20, X19, [X31 + 0x70]

ISIL:
	001 Move W0, [X0+76]
	002 Return X0

Method: System.Void set_RoundTripTime(System.Int32 value)

Disassembly:
	0x03561178 ADRP X28, 0xE7E000
	0x0356117C ADRP X27, 0xBD4000

ISIL:
	001 Move [X0+76], W1
	002 Return 

Method: System.Int32 get_RoundTripTimeVariance()

Disassembly:
	0x03561180 ADRP X23, 0xBD4000
	0x03561184 ADRP X26, 0xBD4000

ISIL:
	001 Move W0, [X0+80]
	002 Return X0

Method: System.Void set_RoundTripTimeVariance(System.Int32 value)

Disassembly:
	0x03561188 ADRP X25, 0xBD4000
	0x0356118C ADRP X29, 0xBD4000

ISIL:
	001 Move [X0+80], W1
	002 Return 

Method: System.Boolean get_SuppressInfoDuplicateWarning()

Disassembly:
	0x03561190 ADRP X24, 0xBD4000
	0x03561194 LDR X27, [X27 + 0x920]

ISIL:
	001 Move W0, [X0+84]
	002 Return X0

Method: System.Void set_SuppressInfoDuplicateWarning(System.Boolean value)

Disassembly:
	0x03561198 LDR X23, [X23 + 0x928]
	0x0356119C LDR X26, [X26 + 0x930]
	0x035611A0 LDR X25, [X25 + 0x938]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+84], W8
	003 Return 

Method: Photon.Voice.VoiceClient/RemoteVoiceInfoDelegate get_OnRemoteVoiceInfoAction()

Disassembly:
	0x035611A4 LDR X29, [X29 + 0x940]
	0x035611A8 LDRB W8, [X28 + 0xDC2]

ISIL:
	001 Move X0, [X0+88]
	002 Return X0

Method: System.Void set_OnRemoteVoiceInfoAction(Photon.Voice.VoiceClient/RemoteVoiceInfoDelegate value)

Disassembly:
	0x035611AC LDR X24, [X24 + 0x948]
	0x035611B0 MOV X20, X3

ISIL:
	001 Move [X0+88], X1
	002 Return 

Method: System.Int32 get_DebugLostPercent()

Disassembly:
	0x035611B4 MOV X21, X2
	0x035611B8 MOV X22, X1

ISIL:
	001 Move W0, [X0+96]
	002 Return X0

Method: System.Void set_DebugLostPercent(System.Int32 value)

Disassembly:
	0x035611BC MOV X19, X0
	0x035611C0 TBNZ X8, 0x0, 0x3561244

ISIL:
	001 Move [X0+96], W1
	002 Return 

Method: System.Collections.Generic.IEnumerable`1<Photon.Voice.LocalVoice> get_LocalVoices()

Disassembly:
	0x035611C4 ADRP X0, 0xBD4000
	0x035611C8 LDR X0, [X0 + 0x948]
	0x035611CC BL 0x1C16CF4
	0x035611D0 ADRP X0, 0xBD4000
	0x035611D4 LDR X0, [X0 + 0x950]
	0x035611D8 BL 0x1C16CF4
	0x035611DC ADRP X0, 0xBD4000
	0x035611E0 LDR X0, [X0 + 0x928]
	0x035611E4 BL 0x1C16CF4
	0x035611E8 ADRP X0, 0xBD4000
	0x035611EC LDR X0, [X0 + 0x938]
	0x035611F0 BL 0x1C16CF4
	0x035611F4 ADRP X0, 0xBD4000
	0x035611F8 LDR X0, [X0 + 0x958]
	0x035611FC BL 0x1C16CF4
	0x03561200 ADRP X0, 0xBD4000
	0x03561204 LDR X0, [X0 + 0x920]
	0x03561208 BL 0x1C16CF4
	0x0356120C ADRP X0, 0xBD4000
	0x03561210 LDR X0, [X0 + 0x960]
	0x03561214 BL 0x1C16CF4
	0x03561218 ADRP X0, 0xBD4000
	0x0356121C LDR X0, [X0 + 0x940]
	0x03561220 BL 0x1C16CF4
	0x03561224 ADRP X0, 0xBD4000
	0x03561228 LDR X0, [X0 + 0x930]
	0x0356122C BL 0x1C16CF4
	0x03561230 ADRP X0, 0xB99000
	0x03561234 LDR X0, [X0 + 0x2E8]
	0x03561238 BL 0x1C16CF4
	0x0356123C MOVZ W8, 0x1
	0x03561240 STRB W8, [X28 + 0xDC2]
	0x03561244 MOVZ W8, 0x1
	0x03561248 STRB W8, [X19 + 0x20]
	0x0356124C LDR X0, [X27]
	0x03561250 BL 0x1C16F10
	0x03561254 LDR X1, [X23]
	0x03561258 MOV X23, X0
	0x0356125C BL 0x2A3E710
	0x03561260 STR X23, [X19 + 0x68]
	0x03561264 LDR X0, [X26]
	0x03561268 BL 0x1C16F10
	0x0356126C LDR X1, [X25]
	0x03561270 MOV X23, X0
	0x03561274 BL 0x29D2C7C
	0x03561278 STR X23, [X19 + 0x78]
	0x0356127C LDR X0, [X29]
	0x03561280 BL 0x1C16F10
	0x03561284 ADRP X8, 0xBD4000
	0x03561288 LDR X8, [X8 + 0x958]
	0x0356128C MOV X23, X0
	0x03561290 LDR X1, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE7F000
	005 Move W8, [X20+3516]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {25}
	011 Move X0, 0xBD5000
	012 Move X0, [X0+2160]
	013 Call 0x1C17CF4
	014 Move X0, 0xBD5000
	015 Move X0, [X0+2168]
	016 Call 0x1C17CF4
	017 Move X0, 0xBD5000
	018 Move X0, [X0+2176]
	019 Call 0x1C17CF4
	020 Move X0, 0xBD5000
	021 Move X0, [X0+2184]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3516], W8
	025 Move X0, [X19+120]
	026 Compare X0, 0
	027 JumpIfEqual {60}
	028 Move X8, 0xBD5000
	029 Move X8, [X8+2160]
	030 Move X20, 0xBD5000
	031 Move X1, [X8]
	032 Move X20, [X20+2176]
	033 Call Dictionary`2<Byte, Object>.get_Count, X0
	034 Move X8, [X20]
	035 Move W1, W0
	036 Move X0, X8
	037 Call 0x1C17D6C
	038 Move X8, [X19+120]
	039 Compare X8, 0
	040 JumpIfEqual {60}
	041 Move X9, 0xBD5000
	042 Move X9, [X9+2168]
	043 Move X19, X0
	044 Move X0, X8
	045 Move X1, [X9]
	046 Call Dictionary`2<Byte, Object>.get_Values, X0
	047 Compare X0, 0
	048 JumpIfEqual {60}
	049 Move X8, 0xBD5000
	050 Move X8, [X8+2184]
	051 Move X1, X19
	052 Move W2, W31
	053 Move X3, [X8]
	054 Call ValueCollection<Byte, Object>.CopyTo, X0, X1, X2
	055 Move X0, X19
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Return X0
	060 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<Photon.Voice.LocalVoice> LocalVoicesInChannel(System.Int32 channelId)

Disassembly:
	0x03561294 BL 0x2A12DD4
	0x03561298 STR X23, [X19 + 0x80]
	0x0356129C ADRP X8, 0xBD4000
	0x035612A0 LDR X8, [X8 + 0x960]
	0x035612A4 LDR X0, [X8]
	0x035612A8 BL 0x1C16F10
	0x035612AC ADRP X8, 0xBD4000
	0x035612B0 LDR X8, [X8 + 0x950]
	0x035612B4 MOV X23, X0
	0x035612B8 LDR X1, [X8]
	0x035612BC BL 0x2A12DD4
	0x035612C0 STR X23, [X19 + 0x88]
	0x035612C4 ADRP X8, 0xB99000
	0x035612C8 LDR X8, [X8 + 0x2E8]
	0x035612CC LDR X0, [X8]
	0x035612D0 BL 0x1C16F10
	0x035612D4 MOV X1, X31
	0x035612D8 MOV X23, X0
	0x035612DC BL 0x338E3CC
	0x035612E0 MOV X0, X19
	0x035612E4 MOV X1, X31
	0x035612E8 STR X23, [X19 + 0x90]
	0x035612EC BL 0x33BDD8C
	0x035612F0 STP X22, X21, [X19 + 0x10]
	0x035612F4 LDR X0, [X24]
	0x035612F8 ADD X1, X31, 0x1C
	0x035612FC STRH W31, [X31 + 0x1C]
	0x03561300 BL 0x1C16E04
	0x03561304 LDR X8, [X24]
	0x03561308 MOV X1, X0
	0x0356130C MOVN X9, 0x0
	0x03561310 ADD X0, X31, 0x0
	0x03561314 MOV X2, X31
	0x03561318 STP X8, X9, [X31]
	0x0356131C STRH W20, [X31 + 0x10]
	0x03561320 BL 0x33D55D0
	0x03561324 TBZ X0, 0x0, 0x356134C
	0x03561328 LDR X0, [X24]
	0x0356132C LDR W8, [X0 + 0xE0]
	0x03561330 CBNZ W8, 0x356133C
	0x03561334 BL 0x1C16DFC
	0x03561338 LDR X0, [X24]
	0x0356133C LDR X8, [X0 + 0xB8]
	0x03561340 LDRH W20, [X8]
	0x03561344 UBFM W8, W20, 0x8, 0x1F
	0x03561348 B 0x3561350
	0x0356134C UBFM X8, X20, 0x8, 0x3F
	0x03561350 STRB W20, [X19 + 0x70]
	0x03561354 STRB W8, [X19 + 0x71]
	0x03561358 STRB W8, [X19 + 0x72]
	0x0356135C LDP X20, X19, [X31 + 0x70]
	0x03561360 LDP X22, X21, [X31 + 0x60]
	0x03561364 LDP X24, X23, [X31 + 0x50]
	0x03561368 LDP X26, X25, [X31 + 0x40]
	0x0356136C LDP X28, X27, [X31 + 0x30]
	0x03561370 LDP X29, X30, [X31 + 0x20]
	0x03561374 ADD X31, X31, 0x80
	0x03561378 RET
	0x0356137C SUB X31, X31, 0x50
	0x03561380 STR X30, [X31 + 0x30]
	0x03561384 STP X20, X19, [X31 + 0x40]
	0x03561388 ADRP X20, 0xE7E000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE7F000
	007 Move W8, [X21+3517]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xBD5000
	015 Move X0, [X0+2192]
	016 Call 0x1C17CF4
	017 Move X0, 0xBD5000
	018 Move X0, [X0+2200]
	019 Call 0x1C17CF4
	020 Move X0, 0xBD5000
	021 Move X0, [X0+2208]
	022 Call 0x1C17CF4
	023 Move X0, 0xBD5000
	024 Move X0, [X0+2176]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+3517], W8
	028 Move [X31+8], X31
	029 Move X0, [X20+128]
	030 Compare X0, 0
	031 JumpIfEqual {74}
	032 Move X8, 0xBD5000
	033 Move X8, [X8+2192]
	034 Add X2, X31, 8
	035 Move W1, W19
	036 Move X3, [X8]
	037 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {61}
	042 Move X8, [X31+8]
	043 Compare X8, 0
	044 JumpIfEqual {74}
	045 Move W1, [X8+24]
	046 Move X8, 0xBD5000
	047 Move X8, [X8+2176]
	048 Move X0, [X8]
	049 Call 0x1C17D6C
	050 Move X8, [X31+8]
	051 Compare X8, 0
	052 JumpIfEqual {74}
	053 Move X9, 0xBD5000
	054 Move X9, [X9+2200]
	055 Move X19, X0
	056 Move X0, X8
	057 Move X1, X19
	058 Move X3, [X9]
	059 Move W2, W31
	060 Call List`1<Object>.CopyTo, X0, X1, X2
	061 Move X8, 0xBD5000
	062 Move X8, [X8+2176]
	063 Move W1, W31
	064 Move X0, [X8]
	065 Call 0x1C17D6C
	066 Move X19, X0
	067 Move X0, X19
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X30, [X31+16]
	071 Move X21, [X31+24]
	072 Add X31, X31, 48
	073 Return X0
	074 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<Photon.Voice.RemoteVoiceInfo> get_RemoteVoiceInfos()

Disassembly:
	0x0356138C LDRB W8, [X20 + 0xDC3]
	0x03561390 MOV X19, X0
	0x03561394 TBNZ X8, 0x0, 0x35613DC
	0x03561398 ADRP X0, 0xBD4000
	0x0356139C LDR X0, [X0 + 0x848]
	0x035613A0 BL 0x1C16CF4
	0x035613A4 ADRP X0, 0xBD4000
	0x035613A8 LDR X0, [X0 + 0x850]
	0x035613AC BL 0x1C16CF4
	0x035613B0 ADRP X0, 0xBD4000
	0x035613B4 LDR X0, [X0 + 0x858]
	0x035613B8 BL 0x1C16CF4
	0x035613BC ADRP X0, 0xBD4000
	0x035613C0 LDR X0, [X0 + 0x860]
	0x035613C4 BL 0x1C16CF4
	0x035613C8 ADRP X0, 0xBD4000
	0x035613CC LDR X0, [X0 + 0x868]
	0x035613D0 BL 0x1C16CF4
	0x035613D4 MOVZ W8, 0x1
	0x035613D8 STRB W8, [X20 + 0xDC3]
	0x035613DC MOVI V0.2D, 0x0
	0x035613E0 STR X31, [X31 + 0x20]
	0x035613E4 STP V0, V0, [X31]
	0x035613E8 LDR X0, [X19 + 0x78]
	0x035613EC CBZ X0, 0x356145C
	0x035613F0 ADRP X8, 0xBD4000
	0x035613F4 LDR X8, [X8 + 0x848]
	0x035613F8 ADRP X20, 0xBD4000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE7F000
	006 Move X21, 0xBD5000
	007 Move W8, [X20+3518]
	008 Move X21, [X21+2216]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xBD5000
	015 Move X0, [X0+2216]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3518], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move TEMP, 1
	025 Not TEMP
	026 Move W8, TEMP
	027 Move X0, X31
	028 Move [X20+16], W8
	029 Call Environment.get_CurrentManagedThreadId
	030 Move [X20+32], W0
	031 Move [X20+40], X19
	032 Move X0, X20
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0

Method: System.Void LogSpacingProfiles()

Disassembly:
	0x03561430 LDP X9, X1, [X8 + 0x188]
	0x03561434 BLR X9
	0x03561438 B 0x3561414
	0x0356143C LDR X1, [X19]
	0x03561440 ADD X0, X31, 0x0
	0x03561444 BL 0x2BEA130
	0x03561448 LDP X20, X19, [X31 + 0x40]
	0x0356144C LDR X30, [X31 + 0x30]
	0x03561450 ADD X31, X31, 0x50
	0x03561454 RET
	0x03561458 BL 0x1C16F20
	0x0356145C BL 0x1C16F20
	0x03561460 B 0x3561468
	0x03561464 B 0x3561468
	0x03561468 MOV X19, X0
	0x0356146C CMP W1, 0x1
	0x03561470 B.NE 0x35614A4
	0x03561474 MOV X0, X19
	0x03561478 BL 0x3EB1AD0
	0x0356147C LDR X20, [X0]
	0x03561480 BL 0x3EB1AE0
	0x03561484 ADRP X8, 0xBD4000
	0x03561488 LDR X8, [X8 + 0x850]
	0x0356148C ADD X0, X31, 0x0
	0x03561490 LDR X1, [X8]
	0x03561494 BL 0x2BEA130
	0x03561498 CBZ X20, 0x3561448
	0x0356149C MOV X0, X20
	0x035614A0 BL 0x1C16F18
	0x035614A4 MOV X20, X31
	0x035614A8 B 0x35614B0
	0x035614AC MOV X19, X0
	0x035614B0 ADRP X8, 0xBD4000
	0x035614B4 LDR X8, [X8 + 0x850]
	0x035614B8 LDR X1, [X8]
	0x035614BC ADD X0, X31, 0x0
	0x035614C0 BL 0x2BEA130
	0x035614C4 CBNZ X20, 0x35614D0
	0x035614C8 MOV X0, X19
	0x035614CC BL 0x1D2C690
	0x035614D0 MOV X0, X20
	0x035614D4 BL 0x1C16F18
	0x035614D8 BL 0x1990590
	0x035614DC SUB X31, X31, 0x60
	0x035614E0 STR X30, [X31 + 0x30]
	0x035614E4 STP X22, X21, [X31 + 0x40]
	0x035614E8 STP X20, X19, [X31 + 0x50]
	0x035614EC ADRP X22, 0xE7E000
	0x035614F0 LDRB W8, [X22 + 0xDC4]
	0x035614F4 MOV X19, X2
	0x035614F8 MOV W21, W1
	0x035614FC MOV X20, X0
	0x03561500 TBNZ X8, 0x0, 0x3561530
	0x03561504 ADRP X0, 0xB92000
	0x03561508 LDR X0, [X0 + 0x9C8]
	0x0356150C BL 0x1C16CF4
	0x03561510 ADRP X0, 0xB97000
	0x03561514 LDR X0, [X0 + 0x348]
	0x03561518 BL 0x1C16CF4
	0x0356151C ADRP X0, 0xBD4000
	0x03561520 LDR X0, [X0 + 0x968]
	0x03561524 BL 0x1C16CF4
	0x03561528 MOVZ W8, 0x1
	0x0356152C STRB W8, [X22 + 0xDC4]
	0x03561530 MOV X0, X20
	0x03561534 BL 0x35616B0
	0x03561538 ANDS W31, W0, 0xFF
	0x0356153C B.EQ 0x3561664
	0x03561540 CBZ X19, 0x35616AC
	0x03561544 MOV W22, W0
	0x03561548 LDR X8, [X19 + 0x18]
	0x0356154C LDR X0, [X19 + 0x40]
	0x03561550 LDR X3, [X19 + 0x28]
	0x03561554 MOV W1, W22
	0x03561558 MOV W2, W21
	0x0356155C BLR X8
	0x03561560 MOV X19, X0
	0x03561564 CBZ X0, 0x3561694
	0x03561568 MOV X0, X20
	0x0356156C MOV W1, W22
	0x03561570 MOV W2, W21
	0x03561574 MOV X3, X19
	0x03561578 BL 0x35618DC
	0x0356157C LDUR V0, [X19 + 0x68]
	0x03561580 LDUR V1, [X19 + 0x58]
	0x03561584 LDUR V2, [X19 + 0x48]
	0x03561588 LDR X20, [X20 + 0x18]
	0x0356158C LDR X21, [X19 + 0xD0]
	0x03561590 ADD X0, X31, 0x0
	0x03561594 STP V1, V0, [X31 + 0x10]
	0x03561598 STR V2, [X31]
	0x0356159C BL 0x3559520
	0x035615A0 ADRP X8, 0xBD4000
	0x035615A4 LDR X8, [X8 + 0x968]
	0x035615A8 MOV X2, X0
	0x035615AC MOV X0, X21
	0x035615B0 MOV X3, X31
	0x035615B4 LDR X1, [X8]
	0x035615B8 BL 0x32274B8
	0x035615BC ADRP X8, 0xB92000
	0x035615C0 LDR X8, [X8 + 0x9C8]
	0x035615C4 MOV X21, X0
	0x035615C8 LDR X22, [X8]
	0x035615CC LDR X8, [X22 + 0x38]
	0x035615D0 CBNZ X8, 0x35615E0
	0x035615D4 MOV X0, X22
	0x035615D8 BL 0x1C5C6E0
	0x035615DC LDR X8, [X22 + 0x38]
	0x035615E0 LDR X0, [X8 + 0x10]
	0x035615E4 LDRB W8, [X0 + 0x135]
	0x035615E8 TBNZ X8, 0x0, 0x35615F0
	0x035615EC BL 0x1C5C684
	0x035615F0 LDR W8, [X0 + 0xE0]
	0x035615F4 CBNZ W8, 0x35615FC
	0x035615F8 BL 0x1C16DFC
	0x035615FC LDR X8, [X22 + 0x38]
	0x03561600 LDR X0, [X8 + 0x10]
	0x03561604 LDRB W8, [X0 + 0x135]
	0x03561608 TBNZ X8, 0x0, 0x3561610
	0x0356160C BL 0x1C5C684
	0x03561610 CBZ X20, 0x35616AC
	0x03561614 ADRP X10, 0xB97000
	0x03561618 LDR X9, [X0 + 0xB8]
	0x0356161C LDR X8, [X20]
	0x03561620 LDR X10, [X10 + 0x348]
	0x03561624 LDR X22, [X9]
	0x03561628 LDRH W9, [X8 + 0x12E]
	0x0356162C LDR X1, [X10]
	0x03561630 CBZ X9, 0x3561654
	0x03561634 LDR X10, [X8 + 0xB0]
	0x03561638 ADD X10, X10, 0x8
	0x0356163C LDUR X11, [X10 - 0x8]
	0x03561640 CMP X11, X1
	0x03561644 B.EQ 0x356166C
	0x03561648 SUBS X9, X9, 0x1
	0x0356164C ADD X10, X10, 0x10
	0x03561650 B.NE 0x356163C
	0x03561654 MOVZ W2, 0x1
	0x03561658 MOV X0, X20
	0x0356165C BL 0x1C5C788
	0x03561660 B 0x356167C
	0x03561664 MOV X19, X31
	0x03561668 B 0x3561694
	0x0356166C LDR W9, [X10]
	0x03561670 ADD W9, W9, 0x1
	0x03561674 ADD X8, X8, W9, 0x4, SXTW
	0x03561678 ADD X0, X8, 0x138
	0x0356167C LDP X8, X4, [X0]
	0x03561680 MOVZ W1, 0x3
	0x03561684 MOV X0, X20
	0x03561688 MOV X2, X21
	0x0356168C MOV X3, X22
	0x03561690 BLR X8
	0x03561694 MOV X0, X19
	0x03561698 LDP X20, X19, [X31 + 0x50]
	0x0356169C LDP X22, X21, [X31 + 0x40]
	0x035616A0 LDR X30, [X31 + 0x30]
	0x035616A4 ADD X31, X31, 0x60
	0x035616A8 RET
	0x035616AC BL 0x1C16F20
	0x035616B0 SUB X31, X31, 0x90
	0x035616B4 STP X30, X23, [X31 + 0x60]
	0x035616B8 STP X22, X21, [X31 + 0x70]
	0x035616BC STP X20, X19, [X31 + 0x80]
	0x035616C0 ADRP X21, 0xE7E000
	0x035616C4 ADRP X20, 0xB94000
	0x035616C8 LDRB W8, [X21 + 0xDC7]
	0x035616CC LDR X20, [X20 + 0x9B8]
	0x035616D0 MOV X19, X0
	0x035616D4 TBNZ X8, 0x0, 0x3561728
	0x035616D8 ADRP X0, 0xB94000
	0x035616DC LDR X0, [X0 + 0x9B8]
	0x035616E0 BL 0x1C16CF4
	0x035616E4 ADRP X0, 0xBD4000
	0x035616E8 LDR X0, [X0 + 0x848]
	0x035616EC BL 0x1C16CF4
	0x035616F0 ADRP X0, 0xBD4000
	0x035616F4 LDR X0, [X0 + 0x850]
	0x035616F8 BL 0x1C16CF4
	0x035616FC ADRP X0, 0xBD4000
	0x03561700 LDR X0, [X0 + 0x858]
	0x03561704 BL 0x1C16CF4
	0x03561708 ADRP X0, 0xBD4000
	0x0356170C LDR X0, [X0 + 0x860]
	0x03561710 BL 0x1C16CF4
	0x03561714 ADRP X0, 0xBD4000
	0x03561718 LDR X0, [X0 + 0x868]
	0x0356171C BL 0x1C16CF4
	0x03561720 MOVZ W8, 0x1
	0x03561724 STRB W8, [X21 + 0xDC7]
	0x03561728 LDR X0, [X20]
	0x0356172C MOVI V0.2D, 0x0
	0x03561730 MOVZ W1, 0x100
	0x03561734 STR X31, [X31 + 0x50]
	0x03561738 STP V0, V0, [X31 + 0x30]
	0x0356173C BL 0x1C16D6C
	0x03561740 LDR X9, [X19 + 0x78]
	0x03561744 CBZ X9, 0x356185C
	0x03561748 ADRP X8, 0xBD4000
	0x0356174C LDR X8, [X8 + 0x848]
	0x03561750 ADRP X22, 0xBD4000
	0x03561754 ADRP X21, 0xBD4000
	0x03561758 MOV X20, X0
	0x0356175C LDR X1, [X8]
	0x03561760 LDR X22, [X22 + 0x858]
	0x03561764 LDR X21, [X21 + 0x850]
	0x03561768 ADD X8, X31, 0x8
	0x0356176C MOV X0, X9
	0x03561770 BL 0x29D395C
	0x03561774 LDUR V0, [X31 + 0x8]
	0x03561778 LDUR V1, [X31 + 0x18]
	0x0356177C LDR X8, [X31 + 0x28]
	0x03561780 MOVZ W23, 0x1
	0x03561784 STP V0, V1, [X31 + 0x30]
	0x03561788 STR X8, [X31 + 0x50]
	0x0356178C LDR X1, [X22]
	0x03561790 ADD X0, X31, 0x30
	0x03561794 BL 0x2BEA018
	0x03561798 TBZ X0, 0x0, 0x35617C4
	0x0356179C LDR X8, [X31 + 0x48]
	0x035617A0 CBZ X8, 0x3561850
	0x035617A4 CBZ X20, 0x3561854
	0x035617A8 LDRB W8, [X8 + 0x80]
	0x035617AC LDR W9, [X20 + 0x18]
	0x035617B0 CMP W8, W9
	0x035617B4 B.CS 0x356184C
	0x035617B8 ADD X8, X20, X8
	0x035617BC STRB W23, [X8 + 0x20]
	0x035617C0 B 0x356178C
	0x035617C4 LDR X1, [X21]
	0x035617C8 ADD X0, X31, 0x30
	0x035617CC BL 0x2BEA130
	0x035617D0 LDRB W8, [X19 + 0x72]
	0x035617D4 LDRB W9, [X19 + 0x71]
	0x035617D8 CMP W9, W8
	0x035617DC B.NE 0x35617F0
	0x035617E0 LDRB W0, [X19 + 0x70]
	0x035617E4 CMP W0, W8
	0x035617E8 B.NE 0x35617F4
	0x035617EC B 0x356182C
	0x035617F0 ADD W0, W8, 0x1
	0x035617F4 CBZ X20, 0x356185C
	0x035617F8 LDR W10, [X20 + 0x18]
	0x035617FC CMP W10, W0, UXTB
	0x03561800 B.LS 0x3561858
	0x03561804 ADD X11, X20, W0, UXTB
	0x03561808 LDRB W11, [X11 + 0x20]
	0x0356180C CBZ W11, 0x3561834
	0x03561810 CMP W9, W0, UXTB
	0x03561814 B.NE 0x3561820
	0x03561818 LDRB W0, [X19 + 0x70]
	0x0356181C B 0x3561824
	0x03561820 ADD W0, W0, 0x1
	0x03561824 CMP W8, W0, UXTB
	0x03561828 B.NE 0x35617FC
	0x0356182C MOV W0, W31
	0x03561830 B 0x3561838
	0x03561834 STRB W0, [X19 + 0x72]
	0x03561838 LDP X20, X19, [X31 + 0x80]
	0x0356183C LDP X22, X21, [X31 + 0x70]
	0x03561840 LDP X30, X23, [X31 + 0x60]
	0x03561844 ADD X31, X31, 0x90
	0x03561848 RET
	0x0356184C BL 0x1C16F28
	0x03561850 BL 0x1C16F20
	0x03561854 BL 0x1C16F20
	0x03561858 BL 0x1C16F28
	0x0356185C BL 0x1C16F20
	0x03561860 B 0x3561868
	0x03561864 B 0x3561868
	0x03561868 MOV X21, X0
	0x0356186C CMP W1, 0x1
	0x03561870 B.NE 0x35618A4
	0x03561874 MOV X0, X21
	0x03561878 BL 0x3EB1AD0
	0x0356187C LDR X22, [X0]
	0x03561880 BL 0x3EB1AE0
	0x03561884 ADRP X8, 0xBD4000
	0x03561888 LDR X8, [X8 + 0x850]
	0x0356188C ADD X0, X31, 0x30
	0x03561890 LDR X1, [X8]
	0x03561894 BL 0x2BEA130
	0x03561898 CBZ X22, 0x35617D0
	0x0356189C MOV X0, X22
	0x035618A0 BL 0x1C16F18
	0x035618A4 MOV X22, X31
	0x035618A8 B 0x35618B0
	0x035618AC MOV X21, X0
	0x035618B0 ADRP X8, 0xBD4000
	0x035618B4 LDR X8, [X8 + 0x850]
	0x035618B8 LDR X1, [X8]
	0x035618BC ADD X0, X31, 0x30
	0x035618C0 BL 0x2BEA130
	0x035618C4 CBNZ X22, 0x35618D0
	0x035618C8 MOV X0, X21
	0x035618CC BL 0x1D2C690
	0x035618D0 MOV X0, X22
	0x035618D4 BL 0x1C16F18
	0x035618D8 BL 0x1990590
	0x035618DC SUB X31, X31, 0x40
	0x035618E0 STP X30, X23, [X31 + 0x10]
	0x035618E4 STP X22, X21, [X31 + 0x20]
	0x035618E8 STP X20, X19, [X31 + 0x30]
	0x035618EC ADRP X23, 0xE7E000
	0x035618F0 LDRB W8, [X23 + 0xDC8]
	0x035618F4 MOV X19, X3
	0x035618F8 MOV W20, W2
	0x035618FC MOV W22, W1
	0x03561900 MOV X21, X0
	0x03561904 TBNZ X8, 0x0, 0x3561964
	0x03561908 ADRP X0, 0xBD4000
	0x0356190C LDR X0, [X0 + 0x890]
	0x03561910 BL 0x1C16CF4
	0x03561914 ADRP X0, 0xBD4000
	0x03561918 LDR X0, [X0 + 0x970]
	0x0356191C BL 0x1C16CF4
	0x03561920 ADRP X0, 0xBD4000
	0x03561924 LDR X0, [X0 + 0x978]
	0x03561928 BL 0x1C16CF4
	0x0356192C ADRP X0, 0xBD4000
	0x03561930 LDR X0, [X0 + 0x4D0]
	0x03561934 BL 0x1C16CF4
	0x03561938 ADRP X0, 0xBD4000
	0x0356193C LDR X0, [X0 + 0x980]
	0x03561940 BL 0x1C16CF4
	0x03561944 ADRP X0, 0xBD4000
	0x03561948 LDR X0, [X0 + 0x988]
	0x0356194C BL 0x1C16CF4
	0x03561950 ADRP X0, 0xBD4000
	0x03561954 LDR X0, [X0 + 0x990]
	0x03561958 BL 0x1C16CF4
	0x0356195C MOVZ W8, 0x1
	0x03561960 STRB W8, [X23 + 0xDC8]
	0x03561964 STR X31, [X31 + 0x8]
	0x03561968 LDR X0, [X21 + 0x78]
	0x0356196C CBZ X0, 0x3561AEC
	0x03561970 ADRP X8, 0xBD4000
	0x03561974 LDR X8, [X8 + 0x970]
	0x03561978 MOV W1, W22
	0x0356197C MOV X2, X19
	0x03561980 LDR X3, [X8]
	0x03561984 BL 0x29D3520
	0x03561988 LDR X0, [X21 + 0x80]
	0x0356198C CBZ X0, 0x3561AEC
	0x03561990 ADRP X8, 0xBD4000
	0x03561994 LDR X8, [X8 + 0x890]
	0x03561998 ADD X2, X31, 0x8
	0x0356199C MOV W1, W20
	0x035619A0 LDR X3, [X8]
	0x035619A4 BL 0x2A150AC
	0x035619A8 TBNZ X0, 0x0, 0x35619F4
	0x035619AC ADRP X8, 0xBD4000
	0x035619B0 LDR X8, [X8 + 0x990]
	0x035619B4 LDR X0, [X8]
	0x035619B8 BL 0x1C16F10
	0x035619BC ADRP X8, 0xBD4000
	0x035619C0 LDR X8, [X8 + 0x988]
	0x035619C4 MOV X22, X0
	0x035619C8 LDR X1, [X8]
	0x035619CC BL 0x301B7C4
	0x035619D0 STR X22, [X31 + 0x8]
	0x035619D4 LDR X0, [X21 + 0x80]
	0x035619D8 CBZ X0, 0x3561AEC
	0x035619DC ADRP X8, 0xBD4000
	0x035619E0 LDR X8, [X8 + 0x978]
	0x035619E4 MOV W1, W20
	0x035619E8 MOV X2, X22
	0x035619EC LDR X3, [X8]
	0x035619F0 BL 0x2A13678
	0x035619F4 LDR X0, [X31 + 0x8]
	0x035619F8 CBZ X0, 0x3561AEC
	0x035619FC ADRP X9, 0xBD4000
	0x03561A00 LDR X9, [X9 + 0x980]
	0x03561A04 LDR W10, [X0 + 0x1C]
	0x03561A08 LDR X8, [X0 + 0x10]
	0x03561A0C LDR X9, [X9]
	0x03561A10 ADD W10, W10, 0x1
	0x03561A14 STR W10, [X0 + 0x1C]
	0x03561A18 CBZ X8, 0x3561AEC
	0x03561A1C LDRSW X10, [X0 + 0x18]
	0x03561A20 LDR W11, [X8 + 0x18]
	0x03561A24 CMP W10, W11
	0x03561A28 B.CS 0x3561A40
	0x03561A2C ADD W9, W10, 0x1
	0x03561A30 ADD X8, X8, X10, 0x3, LSL
	0x03561A34 STR W9, [X0 + 0x18]
	0x03561A38 STR X19, [X8 + 0x20]
	0x03561A3C B 0x3561A54
	0x03561A40 LDR X8, [X9 + 0x20]
	0x03561A44 MOV X1, X19
	0x03561A48 LDR X8, [X8 + 0xC0]
	0x03561A4C LDR X2, [X8 + 0x70]
	0x03561A50 BL 0x301BF90
	0x03561A54 LDR X21, [X21 + 0x10]
	0x03561A58 CBZ X21, 0x3561AEC
	0x03561A5C ADRP X10, 0xBD4000
	0x03561A60 LDR X8, [X21]
	0x03561A64 LDR X10, [X10 + 0x4D0]
	0x03561A68 LDRH W9, [X8 + 0x12E]
	0x03561A6C LDR X1, [X10]
	0x03561A70 CBZ X9, 0x3561A94
	0x03561A74 LDR X10, [X8 + 0xB0]
	0x03561A78 ADD X10, X10, 0x8
	0x03561A7C LDUR X11, [X10 - 0x8]
	0x03561A80 CMP X11, X1

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+192], X29
	003 Move [X31+200], X30
	004 Move [X31+208], X28
	005 Move [X31+216], X27
	006 Move [X31+224], X26
	007 Move [X31+232], X25
	008 Move [X31+240], X24
	009 Move [X31+248], X23
	010 Move [X31+256], X22
	011 Move [X31+264], X21
	012 Move [X31+272], X20
	013 Move [X31+280], X19
	014 Move X21, 0xE7F000
	015 Move W8, [X21+3519]
	016 Move X19, X0
	017 Add X20, X31, 144
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {78}
	022 Move X0, 0xB93000
	023 Move X0, [X0+2504]
	024 Call 0x1C17CF4
	025 Move X0, 0xBD5000
	026 Move X0, [X0+2120]
	027 Call 0x1C17CF4
	028 Move X0, 0xBD5000
	029 Move X0, [X0+2224]
	030 Call 0x1C17CF4
	031 Move X0, 0xBD5000
	032 Move X0, [X0+2232]
	033 Call 0x1C17CF4
	034 Move X0, 0xBD5000
	035 Move X0, [X0+2128]
	036 Call 0x1C17CF4
	037 Move X0, 0xBD5000
	038 Move X0, [X0+2240]
	039 Call 0x1C17CF4
	040 Move X0, 0xBD5000
	041 Move X0, [X0+2248]
	042 Call 0x1C17CF4
	043 Move X0, 0xBD5000
	044 Move X0, [X0+2256]
	045 Call 0x1C17CF4
	046 Move X0, 0xBD5000
	047 Move X0, [X0+2136]
	048 Call 0x1C17CF4
	049 Move X0, 0xBD5000
	050 Move X0, [X0+2264]
	051 Call 0x1C17CF4
	052 Move X0, 0xBD5000
	053 Move X0, [X0+2144]
	054 Call 0x1C17CF4
	055 Move X0, 0xBD5000
	056 Move X0, [X0+2272]
	057 Call 0x1C17CF4
	058 Move X0, 0xBD5000
	059 Move X0, [X0+2280]
	060 Call 0x1C17CF4
	061 Move X0, 0xB98000
	062 Move X0, [X0+840]
	063 Call 0x1C17CF4
	064 Move X0, 0xBD5000
	065 Move X0, [X0+2152]
	066 Call 0x1C17CF4
	067 Move X0, 0xBD5000
	068 Move X0, [X0+2288]
	069 Call 0x1C17CF4
	070 Move X0, 0xBD5000
	071 Move X0, [X0+2296]
	072 Call 0x1C17CF4
	073 Move X0, 0xBD5000
	074 Move X0, [X0+2304]
	075 Call 0x1C17CF4
	076 Move W8, 1
	077 Move [X21+3519], W8
	078 NotImplemented "Instruction MOVI not yet implemented."
	079 Move [X31+176], X31
	080 Move [X31+128], X31
	081 Move [X31+80], X31
	082 Move [X20], V0
	083 Move [X20+8], V0
	084 Move [X31+96], V0
	085 Move [X31+104], V0
	086 Move [X31+48], V0
	087 Move [X31+56], V0
	088 Move X0, [X19+120]
	089 Compare X0, 0
	090 JumpIfEqual {374}
	091 Move X8, 0xBD5000
	092 Move X8, [X8+2120]
	093 Move X24, 0xBD5000
	094 Move X25, 0xBD5000
	095 Move X26, 0xB93000
	096 Move X27, 0xB98000
	097 Move X28, 0xBD5000
	098 Move X29, 0xBD5000
	099 Move X23, 0xBD5000
	100 Move X24, [X24+2136]
	101 Move X25, [X25+2304]
	102 Move X26, [X26+2504]
	103 Move X27, [X27+840]
	104 Move X28, [X28+2256]
	105 Move X29, [X29+2232]
	106 Move X23, [X23+2264]
	107 Move X1, [X8]
	108 Add X8, X31, 8
	109 Call Dictionary`2<Byte, Object>.GetEnumerator, X0
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 Move X8, [X31+40]
	113 Move [X20], V0
	114 Move [X20+8], V1
	115 Move [X31+176], X8
	116 Move X1, [X24]
	117 Add X0, X31, 144
	118 Call Enumerator<Byte, Object>.MoveNext, X0
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {197}
	123 Move X21, [X31+168]
	124 Compare X21, 0
	125 JumpIfEqual {369}
	126 Move X0, [X21+256]
	127 Compare X0, 0
	128 JumpIfEqual {370}
	129 Call SpacingProfile.Start, X0
	130 Move X0, [X21+256]
	131 Compare X0, 0
	132 JumpIfEqual {367}
	133 Move X20, [X19+24]
	134 Move X21, [X21+208]
	135 Call SpacingProfile.get_Dump, X0
	136 Move X1, [X25]
	137 Move X2, X0
	138 Move X0, X21
	139 Move X3, X31
	140 Call String.Concat, X0, X1, X2
	141 Move X22, [X26]
	142 Move X21, X0
	143 Move X8, [X22+56]
	144 Compare X8, 0
	145 JumpIfNotEqual {149}
	146 Move X0, X22
	147 Call 0x1C5D6E0
	148 Move X8, [X22+56]
	149 Move X0, [X8+16]
	150 Move W8, [X0+309]
	151 Move TEMP, X8
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfEqual {156}
	155 Call 0x1C5D684
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X8, [X22+56]
	161 Move X0, [X8+16]
	162 Move W8, [X0+309]
	163 Move TEMP, X8
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfEqual {168}
	167 Call 0x1C5D684
	168 Compare X20, 0
	169 JumpIfEqual {368}
	170 Move X9, [X0+184]
	171 Move X8, [X20]
	172 Move X1, [X27]
	173 Move X22, [X9]
	174 NotImplemented "Instruction LDRH not yet implemented."
	175 Compare X9, 0
	176 JumpIfEqual {183}
	177 Move X10, [X8+176]
	178 Add X10, X10, 8
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Subtract X9, X9, 1
	182 Add X10, X10, 16
	183 Move W2, 1
	184 Move X0, X20
	185 Call 0x1C5D788
	186 Move W9, [X10]
	187 Add W9, W9, 1
	188 Add X8, X8, W9
	189 Add X0, X8, 312
	190 Move X8, [X0]
	191 Move X4, [X0+8]
	192 Move W1, 3
	193 Move X0, X20
	194 Move X2, X21
	195 Move X3, X22
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Move X8, 0xBD5000
	198 Move X8, [X8+2128]
	199 Add X0, X31, 144
	200 Move X1, [X8]
	201 Call Enumerator<Byte, Object>.Dispose, X0
	202 Move X24, 0xBD5000
	203 Move X24, [X24+2248]
	204 Move X0, [X19+136]
	205 Compare X0, 0
	206 JumpIfEqual {374}
	207 Move X8, 0xBD5000
	208 Move X8, [X8+2224]
	209 Move X1, [X8]
	210 Add X8, X31, 8
	211 Call Dictionary`2<Int32, Object>.GetEnumerator, X0
	212 NotImplemented "Instruction LDUR not yet implemented."
	213 NotImplemented "Instruction LDUR not yet implemented."
	214 Move X8, [X31+40]
	215 Move [X31+96], V0
	216 Move [X31+104], V1
	217 Move [X31+128], X8
	218 Move X1, [X28]
	219 Add X0, X31, 96
	220 Call Enumerator<Int32, Object>.MoveNext, X0
	221 Move TEMP, X0
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfNotEqual {340}
	225 Move X0, [X31+120]
	226 Compare X0, 0
	227 JumpIfEqual {373}
	228 Move X1, [X29]
	229 Add X8, X31, 8
	230 Call Dictionary`2<Byte, Object>.GetEnumerator, X0
	231 NotImplemented "Instruction LDUR not yet implemented."
	232 NotImplemented "Instruction LDUR not yet implemented."
	233 Move X8, [X31+40]
	234 Move [X31+48], V0
	235 Move [X31+56], V1
	236 Move [X31+80], X8
	237 Move X1, [X23]
	238 Add X0, X31, 48
	239 Call Enumerator<Byte, Object>.MoveNext, X0
	240 Move TEMP, X0
	241 And TEMP, TEMP, 1
	242 Compare TEMP, 1
	243 JumpIfNotEqual {318}
	244 Move X21, [X31+72]
	245 Compare X21, 0
	246 JumpIfEqual {330}
	247 Move X0, [X21+192]
	248 Compare X0, 0
	249 JumpIfEqual {331}
	250 Call SpacingProfile.Start, X0
	251 Move X0, [X21+192]
	252 Compare X0, 0
	253 JumpIfEqual {328}
	254 Move X20, [X19+24]
	255 Move X21, [X21+184]
	256 Call SpacingProfile.get_Dump, X0
	257 Move X1, [X25]
	258 Move X2, X0
	259 Move X0, X21
	260 Move X3, X31
	261 Call String.Concat, X0, X1, X2
	262 Move X22, [X26]
	263 Move X21, X0
	264 Move X8, [X22+56]
	265 Compare X8, 0
	266 JumpIfNotEqual {270}
	267 Move X0, X22
	268 Call 0x1C5D6E0
	269 Move X8, [X22+56]
	270 Move X0, [X8+16]
	271 Move W8, [X0+309]
	272 Move TEMP, X8
	273 And TEMP, TEMP, 1
	274 Compare TEMP, 1
	275 JumpIfEqual {277}
	276 Call 0x1C5D684
	277 Move W8, [X0+224]
	278 Compare W8, 0
	279 JumpIfNotEqual {281}
	280 Call 0x1C17DFC
	281 Move X8, [X22+56]
	282 Move X0, [X8+16]
	283 Move W8, [X0+309]
	284 Move TEMP, X8
	285 And TEMP, TEMP, 1
	286 Compare TEMP, 1
	287 JumpIfEqual {289}
	288 Call 0x1C5D684
	289 Compare X20, 0
	290 JumpIfEqual {329}
	291 Move X9, [X0+184]
	292 Move X8, [X20]
	293 Move X1, [X27]
	294 Move X22, [X9]
	295 NotImplemented "Instruction LDRH not yet implemented."
	296 Compare X9, 0
	297 JumpIfEqual {304}
	298 Move X10, [X8+176]
	299 Add X10, X10, 8
	300 NotImplemented "Instruction LDUR not yet implemented."
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Subtract X9, X9, 1
	303 Add X10, X10, 16
	304 Move W2, 1
	305 Move X0, X20
	306 Call 0x1C5D788
	307 Move W9, [X10]
	308 Add W9, W9, 1
	309 Add X8, X8, W9
	310 Add X0, X8, 312
	311 Move X8, [X0]
	312 Move X4, [X0+8]
	313 Move W1, 3
	314 Move X0, X20
	315 Move X2, X21
	316 Move X3, X22
	317 NotImplemented "Instruction BLR not yet implemented."
	318 Move X22, X31
	319 Move W20, 5
	320 Move X1, [X24]
	321 Add X0, X31, 48
	322 Call Enumerator<Byte, Object>.Dispose, X0
	323 Compare X22, 0
	324 JumpIfNotEqual {371}
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Compare W20, 0
	327 JumpIfEqual {218}
	328 Call 0x1C17F20
	329 Call 0x1C17F20
	330 Call 0x1C17F20
	331 Call 0x1C17F20
	332 Move X21, X1
	333 Move X20, X0
	334 NotImplemented "Instruction CMP not yet implemented."
	335 Move X0, X20
	336 Call 0x3EB2AD0
	337 Move X22, [X0]
	338 Call 0x3EB2AE0
	339 Move W20, W31
	340 Move X8, 0xBD5000
	341 Move X8, [X8+2240]
	342 Add X0, X31, 96
	343 Move X1, [X8]
	344 Call Enumerator<Int32, Object>.Dispose, X0
	345 Move X20, [X31+272]
	346 Move X19, [X31+280]
	347 Move X22, [X31+256]
	348 Move X21, [X31+264]
	349 Move X24, [X31+240]
	350 Move X23, [X31+248]
	351 Move X26, [X31+224]
	352 Move X25, [X31+232]
	353 Move X28, [X31+208]
	354 Move X27, [X31+216]
	355 Move X29, [X31+192]
	356 Move X30, [X31+200]
	357 Add X31, X31, 288
	358 Return 
	359 Move X22, X31
	360 Move X1, [X24]
	361 Add X0, X31, 48
	362 Call Enumerator<Byte, Object>.Dispose, X0
	363 Compare X22, 0
	364 JumpIfEqual {379}
	365 Move X0, X22
	366 Call 0x1C17F18
	367 Call 0x1C17F20
	368 Call 0x1C17F20
	369 Call 0x1C17F20
	370 Call 0x1C17F20
	371 Move X0, X22
	372 Call 0x1C17F18
	373 Call 0x1C17F20
	374 Call 0x1C17F20
	375 Move X21, X1
	376 Move X20, X0
	377 Move X21, X1
	378 Move X20, X0
	379 NotImplemented "Instruction CMP not yet implemented."
	380 Move X0, X20
	381 Call 0x3EB2AD0
	382 Move X19, [X0]
	383 Call 0x3EB2AE0
	384 Move X8, 0xBD5000
	385 Move X8, [X8+2240]
	386 Add X0, X31, 96
	387 Move X1, [X8]
	388 Call Enumerator<Int32, Object>.Dispose, X0
	389 Compare X19, 0
	390 JumpIfEqual {345}
	391 Move X0, X19
	392 Call 0x1C17F18
	393 Move X19, X31
	394 Move X20, X0
	395 Move X8, 0xBD5000
	396 Move X8, [X8+2240]
	397 Move X1, [X8]
	398 Add X0, X31, 96
	399 Call Enumerator<Int32, Object>.Dispose, X0
	400 Compare X19, 0
	401 JumpIfEqual {430}
	402 Move X0, X19
	403 Call 0x1C17F18
	404 Move X24, 0xBD5000
	405 Move X24, [X24+2248]
	406 Move X20, X0
	407 NotImplemented "Instruction CMP not yet implemented."
	408 Move X0, X20
	409 Call 0x3EB2AD0
	410 Move X21, [X0]
	411 Call 0x3EB2AE0
	412 Move X8, 0xBD5000
	413 Move X8, [X8+2128]
	414 Add X0, X31, 144
	415 Move X1, [X8]
	416 Call Enumerator<Byte, Object>.Dispose, X0
	417 Compare X21, 0
	418 JumpIfEqual {204}
	419 Move X0, X21
	420 Call 0x1C17F18
	421 Move X21, X31
	422 Move X20, X0
	423 Move X8, 0xBD5000
	424 Move X8, [X8+2128]
	425 Move X1, [X8]
	426 Add X0, X31, 144
	427 Call Enumerator<Byte, Object>.Dispose, X0
	428 Compare X21, 0
	429 JumpIfNotEqual {432}
	430 Move X0, X20
	431 Call 0x1D2D690
	432 Move X0, X21
	433 Call 0x1C17F18
	434 Call 0x1991590

Method: System.Void LogStats()

Disassembly:
	0x03561A84 B.EQ 0x3561AA4
	0x03561A88 SUBS X9, X9, 0x1
	0x03561A8C ADD X10, X10, 0x10
	0x03561A90 B.NE 0x3561A7C
	0x03561A94 MOV X0, X21
	0x03561A98 MOV W2, W31
	0x03561A9C BL 0x1C5C788
	0x03561AA0 B 0x3561AB0
	0x03561AA4 LDRSW X9, [X10]
	0x03561AA8 ADD X8, X8, X9, 0x4, LSL
	0x03561AAC ADD X0, X8, 0x138
	0x03561AB0 LDP X8, X2, [X0]
	0x03561AB4 MOV X0, X21
	0x03561AB8 MOV W1, W20
	0x03561ABC BLR X8
	0x03561AC0 TBZ X0, 0x0, 0x3561AD8
	0x03561AC4 CBZ X19, 0x3561AEC
	0x03561AC8 LDRB W1, [X19 + 0x39]
	0x03561ACC LDR X2, [X19 + 0x40]
	0x03561AD0 MOV X0, X19
	0x03561AD4 BL 0x35579C4
	0x03561AD8 LDP X20, X19, [X31 + 0x30]
	0x03561ADC LDP X22, X21, [X31 + 0x20]
	0x03561AE0 LDP X30, X23, [X31 + 0x10]
	0x03561AE4 ADD X31, X31, 0x40
	0x03561AE8 RET
	0x03561AEC BL 0x1C16F20
	0x03561AF0 STR X30, [X31 - 0x40]!
	0x03561AF4 STP X24, X23, [X31 + 0x10]
	0x03561AF8 STP X22, X21, [X31 + 0x20]
	0x03561AFC STP X20, X19, [X31 + 0x30]
	0x03561B00 ADRP X23, 0xE7E000
	0x03561B04 ADRP X24, 0xBD4000
	0x03561B08 LDRB W8, [X23 + 0xDC5]
	0x03561B0C LDR X24, [X24 + 0x998]
	0x03561B10 MOV X21, X3
	0x03561B14 MOV W19, W2
	0x03561B18 MOV X22, X1
	0x03561B1C MOV X20, X0
	0x03561B20 TBNZ X8, 0x0, 0x3561B50
	0x03561B24 ADRP X0, 0xBBB000
	0x03561B28 LDR X0, [X0 + 0x930]
	0x03561B2C BL 0x1C16CF4
	0x03561B30 ADRP X0, 0xBD4000
	0x03561B34 LDR X0, [X0 + 0x9A0]
	0x03561B38 BL 0x1C16CF4
	0x03561B3C ADRP X0, 0xBD4000
	0x03561B40 LDR X0, [X0 + 0x998]
	0x03561B44 BL 0x1C16CF4
	0x03561B48 MOVZ W8, 0x1
	0x03561B4C STRB W8, [X23 + 0xDC5]
	0x03561B50 LDR X0, [X24]
	0x03561B54 BL 0x1C16F10
	0x03561B58 MOV X1, X31
	0x03561B5C MOV X23, X0
	0x03561B60 BL 0x33BDD8C
	0x03561B64 CBZ X23, 0x3561BD8
	0x03561B68 STR X20, [X23 + 0x10]
	0x03561B6C LDP V1, V0, [X22 + 0x10]
	0x03561B70 LDR V2, [X22]
	0x03561B74 STR W19, [X23 + 0x48]
	0x03561B78 ADRP X8, 0xBBB000
	0x03561B7C STUR V0, [X23 + 0x38]
	0x03561B80 STUR V1, [X23 + 0x28]
	0x03561B84 STUR V2, [X23 + 0x18]
	0x03561B88 LDP V1, V0, [X21]
	0x03561B8C LDR X8, [X8 + 0x930]
	0x03561B90 ADRP X21, 0xBD4000
	0x03561B94 STP V1, V0, [X23 + 0x50]
	0x03561B98 LDR X0, [X8]
	0x03561B9C LDR X21, [X21 + 0x9A0]
	0x03561BA0 BL 0x1C16F10
	0x03561BA4 LDR X2, [X21]
	0x03561BA8 MOV X1, X23
	0x03561BAC MOV X3, X31
	0x03561BB0 MOV X21, X0
	0x03561BB4 BL 0x2D36780
	0x03561BB8 MOV X0, X20
	0x03561BBC MOV W1, W19
	0x03561BC0 MOV X2, X21
	0x03561BC4 LDP X20, X19, [X31 + 0x30]
	0x03561BC8 LDP X22, X21, [X31 + 0x20]
	0x03561BCC LDP X24, X23, [X31 + 0x10]
	0x03561BD0 LDR X30, [X31], #0x40
	0x03561BD4 B 0x35614DC
	0x03561BD8 BL 0x1C16F20
	0x03561BDC MOV X1, X31
	0x03561BE0 B 0x33BDD8C
	0x03561BE4 STP X29, X30, [X31 - 0x60]!
	0x03561BE8 STP X28, X27, [X31 + 0x10]
	0x03561BEC STP X26, X25, [X31 + 0x20]
	0x03561BF0 STP X24, X23, [X31 + 0x30]
	0x03561BF4 STP X22, X21, [X31 + 0x40]
	0x03561BF8 STP X20, X19, [X31 + 0x50]
	0x03561BFC SUB X31, X31, 0x330
	0x03561C00 ADRP X25, 0xE7E000
	0x03561C04 LDRB W8, [X25 + 0xDC6]
	0x03561C08 MOV X22, X5
	0x03561C0C MOV W20, W4
	0x03561C10 MOV W24, W3
	0x03561C14 MOV X19, X2
	0x03561C18 MOV X23, X1
	0x03561C1C MOV X21, X0
	0x03561C20 TBNZ X8, 0x0, 0x3561E00
	0x03561C24 ADRP X0, 0xB96000
	0x03561C28 LDR X0, [X0 + 0xAF8]
	0x03561C2C BL 0x1C16CF4
	0x03561C30 ADRP X0, 0xBD4000
	0x03561C34 LDR X0, [X0 + 0x9A8]
	0x03561C38 BL 0x1C16CF4
	0x03561C3C ADRP X0, 0xB92000
	0x03561C40 LDR X0, [X0 + 0x9C8]
	0x03561C44 BL 0x1C16CF4
	0x03561C48 ADRP X0, 0xBD4000
	0x03561C4C LDR X0, [X0 + 0x9B0]
	0x03561C50 BL 0x1C16CF4
	0x03561C54 ADRP X0, 0xBD4000
	0x03561C58 LDR X0, [X0 + 0x9B8]
	0x03561C5C BL 0x1C16CF4
	0x03561C60 ADRP X0, 0xBD4000
	0x03561C64 LDR X0, [X0 + 0x9C0]
	0x03561C68 BL 0x1C16CF4
	0x03561C6C ADRP X0, 0xBD4000
	0x03561C70 LDR X0, [X0 + 0x9C8]
	0x03561C74 BL 0x1C16CF4
	0x03561C78 ADRP X0, 0xBD4000
	0x03561C7C LDR X0, [X0 + 0x9D0]
	0x03561C80 BL 0x1C16CF4
	0x03561C84 ADRP X0, 0xBD4000
	0x03561C88 LDR X0, [X0 + 0x9D8]
	0x03561C8C BL 0x1C16CF4
	0x03561C90 ADRP X0, 0xBD4000
	0x03561C94 LDR X0, [X0 + 0x9E0]
	0x03561C98 BL 0x1C16CF4
	0x03561C9C ADRP X0, 0xBD4000
	0x03561CA0 LDR X0, [X0 + 0x9E8]
	0x03561CA4 BL 0x1C16CF4
	0x03561CA8 ADRP X0, 0xBD4000
	0x03561CAC LDR X0, [X0 + 0x9F0]
	0x03561CB0 BL 0x1C16CF4
	0x03561CB4 ADRP X0, 0xBD4000
	0x03561CB8 LDR X0, [X0 + 0x9F8]
	0x03561CBC BL 0x1C16CF4
	0x03561CC0 ADRP X0, 0xBD4000
	0x03561CC4 LDR X0, [X0 + 0xA00]
	0x03561CC8 BL 0x1C16CF4
	0x03561CCC ADRP X0, 0xBD4000
	0x03561CD0 LDR X0, [X0 + 0xA08]
	0x03561CD4 BL 0x1C16CF4
	0x03561CD8 ADRP X0, 0xBD4000
	0x03561CDC LDR X0, [X0 + 0xA10]
	0x03561CE0 BL 0x1C16CF4
	0x03561CE4 ADRP X0, 0xBD4000
	0x03561CE8 LDR X0, [X0 + 0xA18]
	0x03561CEC BL 0x1C16CF4
	0x03561CF0 ADRP X0, 0xB97000
	0x03561CF4 LDR X0, [X0 + 0x348]
	0x03561CF8 BL 0x1C16CF4
	0x03561CFC ADRP X0, 0xBD4000
	0x03561D00 LDR X0, [X0 + 0x820]
	0x03561D04 BL 0x1C16CF4
	0x03561D08 ADRP X0, 0xBD4000
	0x03561D0C LDR X0, [X0 + 0xA20]
	0x03561D10 BL 0x1C16CF4
	0x03561D14 ADRP X0, 0xBD4000
	0x03561D18 LDR X0, [X0 + 0xA28]
	0x03561D1C BL 0x1C16CF4
	0x03561D20 ADRP X0, 0xB92000
	0x03561D24 LDR X0, [X0 + 0x9D0]
	0x03561D28 BL 0x1C16CF4
	0x03561D2C ADRP X0, 0xBD4000
	0x03561D30 LDR X0, [X0 + 0xA30]
	0x03561D34 BL 0x1C16CF4
	0x03561D38 ADRP X0, 0xBD4000
	0x03561D3C LDR X0, [X0 + 0xA38]
	0x03561D40 BL 0x1C16CF4
	0x03561D44 ADRP X0, 0xBD4000
	0x03561D48 LDR X0, [X0 + 0xA40]
	0x03561D4C BL 0x1C16CF4
	0x03561D50 ADRP X0, 0xBD4000
	0x03561D54 LDR X0, [X0 + 0xA48]
	0x03561D58 BL 0x1C16CF4
	0x03561D5C ADRP X0, 0xBD4000
	0x03561D60 LDR X0, [X0 + 0xA50]
	0x03561D64 BL 0x1C16CF4
	0x03561D68 ADRP X0, 0xBD4000
	0x03561D6C LDR X0, [X0 + 0xA58]
	0x03561D70 BL 0x1C16CF4
	0x03561D74 ADRP X0, 0xBD4000
	0x03561D78 LDR X0, [X0 + 0xA60]
	0x03561D7C BL 0x1C16CF4
	0x03561D80 ADRP X0, 0xBD4000
	0x03561D84 LDR X0, [X0 + 0xA68]
	0x03561D88 BL 0x1C16CF4
	0x03561D8C ADRP X0, 0xBD4000
	0x03561D90 LDR X0, [X0 + 0xA70]
	0x03561D94 BL 0x1C16CF4
	0x03561D98 ADRP X0, 0xBD4000
	0x03561D9C LDR X0, [X0 + 0xA78]
	0x03561DA0 BL 0x1C16CF4
	0x03561DA4 ADRP X0, 0xBD4000
	0x03561DA8 LDR X0, [X0 + 0xA80]
	0x03561DAC BL 0x1C16CF4
	0x03561DB0 ADRP X0, 0xBD4000
	0x03561DB4 LDR X0, [X0 + 0xA88]
	0x03561DB8 BL 0x1C16CF4
	0x03561DBC ADRP X0, 0xBD4000
	0x03561DC0 LDR X0, [X0 + 0xA90]
	0x03561DC4 BL 0x1C16CF4
	0x03561DC8 ADRP X0, 0xBD4000
	0x03561DCC LDR X0, [X0 + 0xA98]
	0x03561DD0 BL 0x1C16CF4
	0x03561DD4 ADRP X0, 0xBD4000
	0x03561DD8 LDR X0, [X0 + 0xAA0]
	0x03561DDC BL 0x1C16CF4
	0x03561DE0 ADRP X0, 0xBD4000
	0x03561DE4 LDR X0, [X0 + 0xAA8]
	0x03561DE8 BL 0x1C16CF4
	0x03561DEC ADRP X0, 0xBD4000
	0x03561DF0 LDR X0, [X0 + 0xAB0]
	0x03561DF4 BL 0x1C16CF4
	0x03561DF8 MOVZ W8, 0x1
	0x03561DFC STRB W8, [X25 + 0xDC6]
	0x03561E00 ADRP X28, 0xBD4000
	0x03561E04 LDR X28, [X28 + 0xA08]
	0x03561E08 CBNZ W24, 0x3561E38
	0x03561E0C LDR X1, [X28]
	0x03561E10 MOV X0, X19
	0x03561E14 BL 0x1C16E00
	0x03561E18 CBNZ X0, 0x3561E34
	0x03561E1C ADRP X8, 0xBD4000
	0x03561E20 LDR X8, [X8 + 0xA18]
	0x03561E24 MOV X0, X19
	0x03561E28 LDR X1, [X8]
	0x03561E2C BL 0x1C16E00
	0x03561E30 CBZ X0, 0x35624EC
	0x03561E34 MOVZ W24, 0x2
	0x03561E38 LDR X8, [X22]
	0x03561E3C CBNZ X8, 0x3561EB8
	0x03561E40 CMP W24, 0x1
	0x03561E44 B.EQ 0x3561E84
	0x03561E48 CMP W24, 0x2
	0x03561E4C B.NE 0x3561EB8
	0x03561E50 ADRP X8, 0xBD4000
	0x03561E54 LDR X0, [X21 + 0x18]
	0x03561E58 LDP V2, V0, [X23 + 0x10]
	0x03561E5C LDR V1, [X23]
	0x03561E60 LDR X8, [X8 + 0xA38]
	0x03561E64 ADD X1, X31, 0x300
	0x03561E68 STP V2, V0, [X31 + 0x2C0]
	0x03561E6C STR V1, [X31 + 0x2B]
	0x03561E70 LDR X2, [X8]
	0x03561E74 STP V1, V2, [X31 + 0x300]
	0x03561E78 STR V0, [X31 + 0x32]
	0x03561E7C BL 0x222F9D4
	0x03561E80 B 0x3561EB4
	0x03561E84 ADRP X8, 0xBD4000
	0x03561E88 LDR X0, [X21 + 0x18]
	0x03561E8C LDP V2, V0, [X23 + 0x10]
	0x03561E90 LDR V1, [X23]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X21, 0xE7F000
	013 Move X20, 0xBBC000
	014 Move W8, [X21+3520]
	015 Move X20, [X20+3608]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {47}
	021 Move X0, 0xB93000
	022 Move X0, [X0+2504]
	023 Call 0x1C17CF4
	024 Move X0, 0xBBC000
	025 Move X0, [X0+3608]
	026 Call 0x1C17CF4
	027 Move X0, 0xB98000
	028 Move X0, [X0+840]
	029 Call 0x1C17CF4
	030 Move X0, 0xB93000
	031 Move X0, [X0+2760]
	032 Call 0x1C17CF4
	033 Move X0, 0xBD5000
	034 Move X0, [X0+2312]
	035 Call 0x1C17CF4
	036 Move X0, 0xBBD000
	037 Move X0, [X0+936]
	038 Call 0x1C17CF4
	039 Move X0, 0xBD5000
	040 Move X0, [X0+2320]
	041 Call 0x1C17CF4
	042 Move X0, 0xBBF000
	043 Move X0, [X0+800]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X21+3520], W8
	047 Move X0, [X20]
	048 Move [X31+16], X31
	049 Move [X31+24], X31
	050 Move [X31+12], W31
	051 Move X23, 0xB93000
	052 Move W8, [X0+224]
	053 Move X23, [X23+2760]
	054 Compare W8, 0
	055 JumpIfNotEqual {58}
	056 Call 0x1C17DFC
	057 Move X0, [X20]
	058 Move X8, [X0+184]
	059 Move X0, [X23]
	060 Move W1, 6
	061 Move W10, [X8]
	062 Move W9, [X8+4]
	063 Move [X31+24], W9
	064 Move [X31+28], W10
	065 Move W9, [X8+8]
	066 Move W8, [X8+12]
	067 Move [X31+16], W8
	068 Move [X31+20], W9
	069 Move X20, [X19+24]
	070 Call 0x1C17D6C
	071 Compare X0, 0
	072 JumpIfEqual {290}
	073 Move W8, [X0+24]
	074 Move X21, X0
	075 Compare W8, 0
	076 JumpIfEqual {289}
	077 Move X8, 0xBD5000
	078 Move X8, [X8+2312]
	079 Add X0, X31, 28
	080 Move X1, X31
	081 Move X8, [X8]
	082 Move [X21+32], X8
	083 Call Int32.ToString, X0
	084 Move W8, [X21+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move [X21+40], X0
	088 Move X25, 0xBBF000
	089 Move X25, [X25+800]
	090 Add X0, X31, 24
	091 Move X1, X31
	092 Move X8, [X25]
	093 Move [X21+48], X8
	094 Call Int32.ToString, X0
	095 Move W8, [X21+24]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move [X21+56], X0
	099 Move X26, 0xBBD000
	100 Move X26, [X26+936]
	101 Add X0, X31, 12
	102 Move X1, X31
	103 Move X8, [X26]
	104 Move [X21+64], X8
	105 Move W9, [X31+24]
	106 Move W8, [X31+28]
	107 Subtract W8, W8, W9
	108 Move [X31+12], W8
	109 Call Int32.ToString, X0
	110 Move W8, [X21+24]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X24, 0xB93000
	113 Move X24, [X24+2504]
	114 Move [X21+72], X0
	115 Move X0, X21
	116 Move X1, X31
	117 Call String.Concat, X0
	118 Move X22, [X24]
	119 Move X21, X0
	120 Move X8, [X22+56]
	121 Compare X8, 0
	122 JumpIfNotEqual {126}
	123 Move X0, X22
	124 Call 0x1C5D6E0
	125 Move X8, [X22+56]
	126 Move X0, [X8+16]
	127 Move W8, [X0+309]
	128 Move TEMP, X8
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfEqual {133}
	132 Call 0x1C5D684
	133 Move W8, [X0+224]
	134 Compare W8, 0
	135 JumpIfNotEqual {137}
	136 Call 0x1C17DFC
	137 Move X8, [X22+56]
	138 Move X0, [X8+16]
	139 Move W8, [X0+309]
	140 Move TEMP, X8
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfEqual {145}
	144 Call 0x1C5D684
	145 Compare X20, 0
	146 JumpIfEqual {290}
	147 Move X27, 0xB98000
	148 Move X9, [X0+184]
	149 Move X8, [X20]
	150 Move X27, [X27+840]
	151 Move X22, [X9]
	152 NotImplemented "Instruction LDRH not yet implemented."
	153 Move X1, [X27]
	154 Compare X9, 0
	155 JumpIfEqual {162}
	156 Move X10, [X8+176]
	157 Add X10, X10, 8
	158 NotImplemented "Instruction LDUR not yet implemented."
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Subtract X9, X9, 1
	161 Add X10, X10, 16
	162 Move W2, 1
	163 Move X0, X20
	164 Call 0x1C5D788
	165 Move W9, [X10]
	166 Add W9, W9, 1
	167 Add X8, X8, W9
	168 Add X0, X8, 312
	169 Move X8, [X0]
	170 Move X4, [X0+8]
	171 Move W1, 3
	172 Move X0, X20
	173 Move X2, X21
	174 Move X3, X22
	175 NotImplemented "Instruction BLR not yet implemented."
	176 Move X0, [X23]
	177 Move X19, [X19+24]
	178 Move W1, 6
	179 Call 0x1C17D6C
	180 Compare X0, 0
	181 JumpIfEqual {290}
	182 Move W8, [X0+24]
	183 Move X20, X0
	184 Compare W8, 0
	185 JumpIfEqual {289}
	186 Move X8, 0xBD5000
	187 Move X8, [X8+2320]
	188 Add X0, X31, 20
	189 Move X1, X31
	190 Move X8, [X8]
	191 Move [X20+32], X8
	192 Call Int32.ToString, X0
	193 Move W8, [X20+24]
	194 NotImplemented "Instruction CMP not yet implemented."
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move [X20+40], X0
	197 Move X8, [X25]
	198 Add X0, X31, 16
	199 Move X1, X31
	200 Move [X20+48], X8
	201 Call Int32.ToString, X0
	202 Move W8, [X20+24]
	203 NotImplemented "Instruction CMP not yet implemented."
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Move [X20+56], X0
	206 Move X8, [X26]
	207 Add X0, X31, 12
	208 Move X1, X31
	209 Move [X20+64], X8
	210 Move W9, [X31+16]
	211 Move W8, [X31+20]
	212 Subtract W8, W8, W9
	213 Move [X31+12], W8
	214 Call Int32.ToString, X0
	215 Move W8, [X20+24]
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move [X20+72], X0
	218 Move X0, X20
	219 Move X1, X31
	220 Call String.Concat, X0
	221 Move X21, [X24]
	222 Move X20, X0
	223 Move X8, [X21+56]
	224 Compare X8, 0
	225 JumpIfNotEqual {229}
	226 Move X0, X21
	227 Call 0x1C5D6E0
	228 Move X8, [X21+56]
	229 Move X0, [X8+16]
	230 Move W8, [X0+309]
	231 Move TEMP, X8
	232 And TEMP, TEMP, 1
	233 Compare TEMP, 1
	234 JumpIfEqual {236}
	235 Call 0x1C5D684
	236 Move W8, [X0+224]
	237 Compare W8, 0
	238 JumpIfNotEqual {240}
	239 Call 0x1C17DFC
	240 Move X8, [X21+56]
	241 Move X0, [X8+16]
	242 Move W8, [X0+309]
	243 Move TEMP, X8
	244 And TEMP, TEMP, 1
	245 Compare TEMP, 1
	246 JumpIfEqual {248}
	247 Call 0x1C5D684
	248 Compare X19, 0
	249 JumpIfEqual {290}
	250 Move X9, [X0+184]
	251 Move X8, [X19]
	252 Move X1, [X27]
	253 Move X21, [X9]
	254 NotImplemented "Instruction LDRH not yet implemented."
	255 Compare X9, 0
	256 JumpIfEqual {263}
	257 Move X10, [X8+176]
	258 Add X10, X10, 8
	259 NotImplemented "Instruction LDUR not yet implemented."
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Subtract X9, X9, 1
	262 Add X10, X10, 16
	263 Move W2, 1
	264 Move X0, X19
	265 Call 0x1C5D788
	266 Move W9, [X10]
	267 Add W9, W9, 1
	268 Add X8, X8, W9
	269 Add X0, X8, 312
	270 Move X8, [X0]
	271 Move X4, [X0+8]
	272 Move W1, 3
	273 Move X0, X19
	274 Move X2, X20
	275 Move X3, X21
	276 NotImplemented "Instruction BLR not yet implemented."
	277 Move X20, [X31+96]
	278 Move X19, [X31+104]
	279 Move X22, [X31+80]
	280 Move X21, [X31+88]
	281 Move X24, [X31+64]
	282 Move X23, [X31+72]
	283 Move X26, [X31+48]
	284 Move X25, [X31+56]
	285 Move X30, [X31+32]
	286 Move X27, [X31+40]
	287 Add X31, X31, 112
	288 Return 
	289 Call 0x1C17F28
	290 Call 0x1C17F20

Method: System.Void SetRemoteVoiceDelayFrames(Photon.Voice.Codec codec, System.Int32 delayFrames)

Disassembly:
	0x03561E94 LDR X8, [X8 + 0xA30]
	0x03561E98 ADD X1, X31, 0x300
	0x03561E9C STP V2, V0, [X31 + 0x290]
	0x03561EA0 STR V1, [X31 + 0x28]
	0x03561EA4 LDR X2, [X8]
	0x03561EA8 STP V1, V2, [X31 + 0x300]
	0x03561EAC STR V0, [X31 + 0x32]
	0x03561EB0 BL 0x222F8E4
	0x03561EB4 STR X0, [X22]
	0x03561EB8 LDR X1, [X28]
	0x03561EBC MOV X0, X19
	0x03561EC0 BL 0x1C16E00
	0x03561EC4 CBZ X0, 0x3561FA0
	0x03561EC8 CMP W24, 0x1
	0x03561ECC B.NE 0x3562090
	0x03561ED0 ADRP X8, 0xBD4000
	0x03561ED4 LDR X8, [X8 + 0xA48]
	0x03561ED8 LDR X0, [X8]
	0x03561EDC BL 0x1C16F10
	0x03561EE0 MOV X1, X31
	0x03561EE4 MOV X24, X0
	0x03561EE8 BL 0x33BDD8C
	0x03561EEC ADRP X8, 0xB92000
	0x03561EF0 LDR X8, [X8 + 0x9C8]
	0x03561EF4 LDR X25, [X21 + 0x18]
	0x03561EF8 LDR X26, [X8]
	0x03561EFC LDR X8, [X26 + 0x38]
	0x03561F00 CBNZ X8, 0x3561F10
	0x03561F04 MOV X0, X26
	0x03561F08 BL 0x1C5C6E0
	0x03561F0C LDR X8, [X26 + 0x38]
	0x03561F10 LDR X0, [X8 + 0x10]
	0x03561F14 LDRB W8, [X0 + 0x135]
	0x03561F18 TBNZ X8, 0x0, 0x3561F20
	0x03561F1C BL 0x1C5C684
	0x03561F20 LDR W8, [X0 + 0xE0]
	0x03561F24 CBNZ W8, 0x3561F2C
	0x03561F28 BL 0x1C16DFC
	0x03561F2C LDR X8, [X26 + 0x38]
	0x03561F30 LDR X0, [X8 + 0x10]
	0x03561F34 LDRB W8, [X0 + 0x135]
	0x03561F38 TBNZ X8, 0x0, 0x3561F40
	0x03561F3C BL 0x1C5C684
	0x03561F40 CBZ X25, 0x3562B28
	0x03561F44 ADRP X10, 0xB97000
	0x03561F48 ADRP X11, 0xBD4000
	0x03561F4C LDR X9, [X0 + 0xB8]
	0x03561F50 LDR X10, [X10 + 0x348]
	0x03561F54 LDR X8, [X25]
	0x03561F58 LDR X11, [X11 + 0xAA0]
	0x03561F5C LDR X26, [X9]
	0x03561F60 LDR X1, [X10]
	0x03561F64 LDRH W9, [X8 + 0x12E]
	0x03561F68 LDR X27, [X11]
	0x03561F6C CBZ X9, 0x3561F90
	0x03561F70 LDR X10, [X8 + 0xB0]
	0x03561F74 ADD X10, X10, 0x8
	0x03561F78 LDUR X11, [X10 - 0x8]
	0x03561F7C CMP X11, X1
	0x03561F80 B.EQ 0x35623B4
	0x03561F84 SUBS X9, X9, 0x1
	0x03561F88 ADD X10, X10, 0x10
	0x03561F8C B.NE 0x3561F78
	0x03561F90 MOVZ W2, 0x1
	0x03561F94 MOV X0, X25
	0x03561F98 BL 0x1C5C788
	0x03561F9C B 0x35623C4
	0x03561FA0 ADRP X28, 0xBD4000
	0x03561FA4 LDR X28, [X28 + 0xA00]
	0x03561FA8 MOV X0, X19
	0x03561FAC LDR X1, [X28]
	0x03561FB0 BL 0x1C16E00
	0x03561FB4 CBZ X0, 0x35621A0
	0x03561FB8 CMP W24, 0x2
	0x03561FBC B.NE 0x3562274
	0x03561FC0 ADRP X8, 0xBD4000
	0x03561FC4 LDR X8, [X8 + 0xA68]
	0x03561FC8 LDR X0, [X8]
	0x03561FCC BL 0x1C16F10
	0x03561FD0 MOV X1, X31
	0x03561FD4 MOV X24, X0
	0x03561FD8 BL 0x33BDD8C
	0x03561FDC ADRP X8, 0xB92000
	0x03561FE0 LDR X8, [X8 + 0x9C8]
	0x03561FE4 LDR X25, [X21 + 0x18]
	0x03561FE8 LDR X26, [X8]
	0x03561FEC LDR X8, [X26 + 0x38]
	0x03561FF0 CBNZ X8, 0x3562000
	0x03561FF4 MOV X0, X26
	0x03561FF8 BL 0x1C5C6E0
	0x03561FFC LDR X8, [X26 + 0x38]
	0x03562000 LDR X0, [X8 + 0x10]
	0x03562004 LDRB W8, [X0 + 0x135]
	0x03562008 TBNZ X8, 0x0, 0x3562010
	0x0356200C BL 0x1C5C684
	0x03562010 LDR W8, [X0 + 0xE0]
	0x03562014 CBNZ W8, 0x356201C
	0x03562018 BL 0x1C16DFC
	0x0356201C LDR X8, [X26 + 0x38]
	0x03562020 LDR X0, [X8 + 0x10]
	0x03562024 LDRB W8, [X0 + 0x135]
	0x03562028 TBNZ X8, 0x0, 0x3562030
	0x0356202C BL 0x1C5C684
	0x03562030 CBZ X25, 0x3562B28
	0x03562034 ADRP X10, 0xB96000
	0x03562038 ADRP X11, 0xBD3000
	0x0356203C LDR X9, [X0 + 0xB8]
	0x03562040 LDR X10, [X10 + 0x348]
	0x03562044 LDR X8, [X25]
	0x03562048 LDR X11, [X11 + 0xA98]
	0x0356204C LDR X26, [X9]
	0x03562050 LDR X1, [X10]
	0x03562054 LDRH W9, [X8 + 0x12E]
	0x03562058 LDR X27, [X11]
	0x0356205C CBZ X9, 0x3562080
	0x03562060 LDR X10, [X8 + 0xB0]
	0x03562064 ADD X10, X10, 0x8
	0x03562068 LDUR X11, [X10 - 0x8]
	0x0356206C CMP X11, X1
	0x03562070 B.EQ 0x356268C
	0x03562074 SUBS X9, X9, 0x1
	0x03562078 ADD X10, X10, 0x10
	0x0356207C B.NE 0x3562068
	0x03562080 MOVZ W2, 0x1
	0x03562084 MOV X0, X25
	0x03562088 BL 0x1C5C788
	0x0356208C B 0x356269C
	0x03562090 ADRP X8, 0xBD3000
	0x03562094 LDR X8, [X8 + 0xA58]
	0x03562098 LDR X0, [X8]
	0x0356209C BL 0x1C16F10
	0x035620A0 MOV X1, X31
	0x035620A4 MOV X24, X0
	0x035620A8 BL 0x33BDD8C
	0x035620AC LDP V1, V0, [X23 + 0x10]
	0x035620B0 LDR V2, [X23]
	0x035620B4 ADRP X8, 0xBD3000
	0x035620B8 ADD X1, X31, 0x300
	0x035620BC STP V1, V0, [X31 + 0x210]
	0x035620C0 STR V2, [X31 + 0x20]
	0x035620C4 LDP V0, V1, [X22]
	0x035620C8 LDR X8, [X8 + 0xA88]
	0x035620CC LDP V2, V3, [X31 + 0x200]
	0x035620D0 ADD X4, X31, 0x2E0
	0x035620D4 STP V0, V1, [X31 + 0x1E0]
	0x035620D8 LDR V0, [X31 + 0x22]
	0x035620DC STP V2, V3, [X31 + 0x300]
	0x035620E0 LDP V1, V2, [X31 + 0x1E0]
	0x035620E4 LDR X5, [X8]
	0x035620E8 MOV X0, X21
	0x035620EC MOV X2, X19
	0x035620F0 MOV W3, W20
	0x035620F4 STR V0, [X31 + 0x32]
	0x035620F8 STP V1, V2, [X31 + 0x2E0]
	0x035620FC BL 0x22AB3A0
	0x03562100 CBZ X24, 0x3562B28
	0x03562104 STR X0, [X24 + 0x10]
	0x03562108 ADRP X8, 0xB95000
	0x0356210C LDR X8, [X8 + 0xAF8]
	0x03562110 LDR X0, [X8]
	0x03562114 BL 0x1C16F10
	0x03562118 ADRP X8, 0xBD3000
	0x0356211C LDR X8, [X8 + 0xA50]
	0x03562120 MOV X1, X24
	0x03562124 MOV X3, X31
	0x03562128 MOV X20, X0
	0x0356212C LDR X2, [X8]
	0x03562130 BL 0x2A6B948
	0x03562134 LDR X8, [X24 + 0x10]
	0x03562138 CBZ X8, 0x3562B28
	0x0356213C CBZ X19, 0x3562B28
	0x03562140 LDR X22, [X28]
	0x03562144 LDR X21, [X8 + 0x138]
	0x03562148 MOV X0, X19
	0x0356214C MOV X1, X22
	0x03562150 BL 0x1C16E00
	0x03562154 CBZ X0, 0x3562B2C
	0x03562158 LDR X23, [X28]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+144], X30
	003 Move [X31+160], X26
	004 Move [X31+168], X25
	005 Move [X31+176], X24
	006 Move [X31+184], X23
	007 Move [X31+192], X22
	008 Move [X31+200], X21
	009 Move [X31+208], X20
	010 Move [X31+216], X19
	011 Move X22, 0xE7F000
	012 Move W8, [X22+3521]
	013 Move W19, W2
	014 Move W20, W1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {55}
	020 Move X0, 0xBD5000
	021 Move X0, [X0+2224]
	022 Call 0x1C17CF4
	023 Move X0, 0xBD5000
	024 Move X0, [X0+2232]
	025 Call 0x1C17CF4
	026 Move X0, 0xBD5000
	027 Move X0, [X0+2328]
	028 Call 0x1C17CF4
	029 Move X0, 0xBD5000
	030 Move X0, [X0+2240]
	031 Call 0x1C17CF4
	032 Move X0, 0xBD5000
	033 Move X0, [X0+2248]
	034 Call 0x1C17CF4
	035 Move X0, 0xBD5000
	036 Move X0, [X0+2256]
	037 Call 0x1C17CF4
	038 Move X0, 0xBD5000
	039 Move X0, [X0+2264]
	040 Call 0x1C17CF4
	041 Move X0, 0xBD5000
	042 Move X0, [X0+2272]
	043 Call 0x1C17CF4
	044 Move X0, 0xBD5000
	045 Move X0, [X0+2280]
	046 Call 0x1C17CF4
	047 Move X0, 0xBD5000
	048 Move X0, [X0+2288]
	049 Call 0x1C17CF4
	050 Move X0, 0xBD5000
	051 Move X0, [X0+2296]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X22+3521], W8
	055 NotImplemented "Instruction MOVI not yet implemented."
	056 Move [X31+128], X31
	057 Move [X31+80], X31
	058 Move [X31+96], V0
	059 Move [X31+104], V0
	060 Move [X31+48], V0
	061 Move [X31+56], V0
	062 Move X0, [X21+104]
	063 Compare X0, 0
	064 JumpIfEqual {167}
	065 Move X8, 0xBD5000
	066 Move X8, [X8+2328]
	067 Move W1, W20
	068 Move W2, W19
	069 Move X3, [X8]
	070 Call Dictionary`2<Int32Enum, Int32>.set_Item, X0, X1, X2
	071 Move X0, [X21+136]
	072 Compare X0, 0
	073 JumpIfEqual {167}
	074 Move X8, 0xBD5000
	075 Move X8, [X8+2224]
	076 Move X24, 0xBD5000
	077 Move X25, 0xBD5000
	078 Move X24, [X24+2256]
	079 Move X25, [X25+2232]
	080 Move X1, [X8]
	081 Move X26, 0xBD5000
	082 Move X23, 0xBD5000
	083 Move X22, 0xBD5000
	084 Move X26, [X26+2264]
	085 Move X23, [X23+2248]
	086 Move X22, [X22+2240]
	087 Add X8, X31, 8
	088 Call Dictionary`2<Int32, Object>.GetEnumerator, X0
	089 NotImplemented "Instruction LDUR not yet implemented."
	090 NotImplemented "Instruction LDUR not yet implemented."
	091 Move X8, [X31+40]
	092 Move [X31+96], V0
	093 Move [X31+104], V1
	094 Move [X31+128], X8
	095 Move X1, [X24]
	096 Add X0, X31, 96
	097 Call Enumerator<Int32, Object>.MoveNext, X0
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {138}
	102 Move X0, [X31+120]
	103 Compare X0, 0
	104 JumpIfEqual {166}
	105 Move X1, [X25]
	106 Add X8, X31, 8
	107 Call Dictionary`2<Byte, Object>.GetEnumerator, X0
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction LDUR not yet implemented."
	110 Move X8, [X31+40]
	111 Move [X31+48], V0
	112 Move [X31+56], V1
	113 Move [X31+80], X8
	114 Move X1, [X26]
	115 Add X0, X31, 48
	116 Call Enumerator<Byte, Object>.MoveNext, X0
	117 Move TEMP, X0
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfNotEqual {127}
	121 Move X8, [X31+72]
	122 Compare X8, 0
	123 JumpIfEqual {133}
	124 Move W9, [X8+16]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move [X8+148], W19
	127 Move X21, X31
	128 Move X1, [X23]
	129 Add X0, X31, 48
	130 Call Enumerator<Byte, Object>.Dispose, X0
	131 Compare X21, 0
	132 JumpIfEqual {95}
	133 Call 0x1C17F20
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Call 0x3EB2AD0
	136 Move X21, [X0]
	137 Call 0x3EB2AE0
	138 Move X1, [X22]
	139 Add X0, X31, 96
	140 Call Enumerator<Int32, Object>.Dispose, X0
	141 Move X20, [X31+208]
	142 Move X19, [X31+216]
	143 Move X22, [X31+192]
	144 Move X21, [X31+200]
	145 Move X24, [X31+176]
	146 Move X23, [X31+184]
	147 Move X26, [X31+160]
	148 Move X25, [X31+168]
	149 Move X30, [X31+144]
	150 Add X31, X31, 224
	151 Return 
	152 Move X19, X1
	153 Move X20, X0
	154 Move X21, X31
	155 Move X1, [X23]
	156 Add X0, X31, 48
	157 Call Enumerator<Byte, Object>.Dispose, X0
	158 Move X0, X20
	159 Move X1, X19
	160 Compare X21, 0
	161 JumpIfEqual {170}
	162 Move X0, X21
	163 Call 0x1C17F18
	164 Move X0, X21
	165 Call 0x1C17F18
	166 Call 0x1C17F20
	167 Call 0x1C17F20
	168 Move X19, X1
	169 Move X20, X0
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Call 0x3EB2AD0
	172 Move X19, [X0]
	173 Call 0x3EB2AE0
	174 Move X1, [X22]
	175 Add X0, X31, 96
	176 Call Enumerator<Int32, Object>.Dispose, X0
	177 Compare X19, 0
	178 JumpIfEqual {141}
	179 Move X0, X19
	180 Call 0x1C17F18
	181 Move X20, X0
	182 Move X19, X31
	183 Move X20, X0
	184 Move X1, [X22]
	185 Add X0, X31, 96
	186 Call Enumerator<Int32, Object>.Dispose, X0
	187 Compare X19, 0
	188 JumpIfNotEqual {191}
	189 Move X0, X20
	190 Call 0x1D2D690
	191 Move X0, X19
	192 Call 0x1C17F18
	193 Call 0x1991590

Method: System.Void .ctor(Photon.Voice.IVoiceTransport transport, Photon.Voice.ILogger logger, Photon.Voice.VoiceClient/CreateOptions opt = null)

Disassembly:
	0x0356215C MOV X0, X19
	0x03562160 MOV X1, X23
	0x03562164 BL 0x1C16E00
	0x03562168 CBZ X0, 0x3562B38
	0x0356216C LDR X8, [X0]
	0x03562170 MOV X22, X0
	0x03562174 LDRH W9, [X8 + 0x12E]
	0x03562178 CBZ X9, 0x3562380
	0x0356217C LDR X10, [X8 + 0xB0]
	0x03562180 ADD X10, X10, 0x8
	0x03562184 LDUR X11, [X10 - 0x8]
	0x03562188 CMP X11, X23
	0x0356218C B.EQ 0x3562394
	0x03562190 SUBS X9, X9, 0x1
	0x03562194 ADD X10, X10, 0x10
	0x03562198 B.NE 0x3562184
	0x0356219C B 0x3562380
	0x035621A0 ADRP X27, 0xBD3000
	0x035621A4 LDR X27, [X27 + 0xA18]
	0x035621A8 MOV X0, X19
	0x035621AC LDR X1, [X27]
	0x035621B0 BL 0x1C16E00
	0x035621B4 CBZ X0, 0x3562524
	0x035621B8 CMP W24, 0x1
	0x035621BC B.NE 0x35625F8
	0x035621C0 ADRP X8, 0xB91000
	0x035621C4 LDR X8, [X8 + 0x9C8]
	0x035621C8 LDR X24, [X21 + 0x18]
	0x035621CC LDR X25, [X8]
	0x035621D0 LDR X8, [X25 + 0x38]
	0x035621D4 CBNZ X8, 0x35621E4
	0x035621D8 MOV X0, X25
	0x035621DC BL 0x1C5C6E0
	0x035621E0 LDR X8, [X25 + 0x38]
	0x035621E4 LDR X0, [X8 + 0x10]
	0x035621E8 LDRB W8, [X0 + 0x135]
	0x035621EC TBNZ X8, 0x0, 0x35621F4
	0x035621F0 BL 0x1C5C684
	0x035621F4 LDR W8, [X0 + 0xE0]
	0x035621F8 CBNZ W8, 0x3562200
	0x035621FC BL 0x1C16DFC
	0x03562200 LDR X8, [X25 + 0x38]
	0x03562204 LDR X0, [X8 + 0x10]
	0x03562208 LDRB W8, [X0 + 0x135]
	0x0356220C TBNZ X8, 0x0, 0x3562214
	0x03562210 BL 0x1C5C684
	0x03562214 CBZ X24, 0x3562B28
	0x03562218 ADRP X10, 0xB96000
	0x0356221C ADRP X11, 0xBD3000
	0x03562220 LDR X9, [X0 + 0xB8]
	0x03562224 LDR X10, [X10 + 0x348]
	0x03562228 LDR X8, [X24]
	0x0356222C LDR X11, [X11 + 0xA90]
	0x03562230 LDR X25, [X9]
	0x03562234 LDR X1, [X10]
	0x03562238 LDRH W9, [X8 + 0x12E]
	0x0356223C LDR X26, [X11]
	0x03562240 CBZ X9, 0x3562264
	0x03562244 LDR X10, [X8 + 0xB0]
	0x03562248 ADD X10, X10, 0x8
	0x0356224C LDUR X11, [X10 - 0x8]
	0x03562250 CMP X11, X1
	0x03562254 B.EQ 0x3562960
	0x03562258 SUBS X9, X9, 0x1
	0x0356225C ADD X10, X10, 0x10
	0x03562260 B.NE 0x356224C
	0x03562264 MOVZ W2, 0x1
	0x03562268 MOV X0, X24
	0x0356226C BL 0x1C5C788
	0x03562270 B 0x3562970
	0x03562274 ADRP X8, 0xBD3000
	0x03562278 LDR X8, [X8 + 0xA78]
	0x0356227C LDR X0, [X8]
	0x03562280 BL 0x1C16F10
	0x03562284 MOV X1, X31
	0x03562288 MOV X24, X0
	0x0356228C BL 0x33BDD8C
	0x03562290 LDP V1, V0, [X23 + 0x10]
	0x03562294 LDR V2, [X23]
	0x03562298 ADRP X8, 0xBD3000
	0x0356229C ADD X1, X31, 0x300
	0x035622A0 STP V1, V0, [X31 + 0x170]
	0x035622A4 STR V2, [X31 + 0x16]
	0x035622A8 LDP V0, V1, [X22]
	0x035622AC LDR X8, [X8 + 0xA80]
	0x035622B0 LDP V2, V3, [X31 + 0x160]
	0x035622B4 ADD X4, X31, 0x2E0
	0x035622B8 STP V0, V1, [X31 + 0x140]
	0x035622BC LDR V0, [X31 + 0x18]
	0x035622C0 STP V2, V3, [X31 + 0x300]
	0x035622C4 LDP V1, V2, [X31 + 0x140]
	0x035622C8 LDR X5, [X8]
	0x035622CC MOV X0, X21
	0x035622D0 MOV X2, X19
	0x035622D4 MOV W3, W20
	0x035622D8 STR V0, [X31 + 0x32]
	0x035622DC STP V1, V2, [X31 + 0x2E0]
	0x035622E0 BL 0x22AB250
	0x035622E4 CBZ X24, 0x3562B28
	0x035622E8 STR X0, [X24 + 0x10]
	0x035622EC ADRP X8, 0xBD3000
	0x035622F0 LDR X8, [X8 + 0x9A8]
	0x035622F4 LDR X0, [X8]
	0x035622F8 BL 0x1C16F10
	0x035622FC ADRP X8, 0xBD3000
	0x03562300 LDR X8, [X8 + 0xA70]
	0x03562304 MOV X1, X24
	0x03562308 MOV X3, X31
	0x0356230C MOV X20, X0
	0x03562310 LDR X2, [X8]
	0x03562314 BL 0x2A6B948
	0x03562318 LDR X8, [X24 + 0x10]
	0x0356231C CBZ X8, 0x3562B28
	0x03562320 CBZ X19, 0x3562B28
	0x03562324 LDR X22, [X28]
	0x03562328 LDR X21, [X8 + 0x138]
	0x0356232C MOV X0, X19
	0x03562330 MOV X1, X22
	0x03562334 BL 0x1C16E00
	0x03562338 CBZ X0, 0x3562B2C
	0x0356233C LDR X23, [X28]
	0x03562340 MOV X0, X19
	0x03562344 MOV X1, X23
	0x03562348 BL 0x1C16E00
	0x0356234C CBZ X0, 0x3562B38
	0x03562350 LDR X8, [X0]
	0x03562354 MOV X22, X0
	0x03562358 LDRH W9, [X8 + 0x12E]
	0x0356235C CBZ X9, 0x3562380
	0x03562360 LDR X10, [X8 + 0xB0]
	0x03562364 ADD X10, X10, 0x8
	0x03562368 LDUR X11, [X10 - 0x8]
	0x0356236C CMP X11, X23
	0x03562370 B.EQ 0x3562394
	0x03562374 SUBS X9, X9, 0x1
	0x03562378 ADD X10, X10, 0x10

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X28, 0xE7E000
	015 Move X27, 0xBD4000
	016 Move X23, 0xBD4000
	017 Move X26, 0xBD4000
	018 Move X25, 0xBD4000
	019 Move X29, 0xBD4000
	020 Move X24, 0xBD4000
	021 Move X27, [X27+2336]
	022 Move X23, [X23+2344]
	023 Move X26, [X26+2352]
	024 Move X25, [X25+2360]
	025 Move X29, [X29+2368]
	026 Move W8, [X28+3522]
	027 Move X24, [X24+2376]
	028 Move X20, X3
	029 Move X21, X2
	030 Move X22, X1
	031 Move X19, X0
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {68}
	036 Move X0, 0xBD4000
	037 Move X0, [X0+2376]
	038 Call 0x1C17CF4
	039 Move X0, 0xBD4000
	040 Move X0, [X0+2384]
	041 Call 0x1C17CF4
	042 Move X0, 0xBD4000
	043 Move X0, [X0+2344]
	044 Call 0x1C17CF4
	045 Move X0, 0xBD4000
	046 Move X0, [X0+2360]
	047 Call 0x1C17CF4
	048 Move X0, 0xBD4000
	049 Move X0, [X0+2392]
	050 Call 0x1C17CF4
	051 Move X0, 0xBD4000
	052 Move X0, [X0+2336]
	053 Call 0x1C17CF4
	054 Move X0, 0xBD4000
	055 Move X0, [X0+2400]
	056 Call 0x1C17CF4
	057 Move X0, 0xBD4000
	058 Move X0, [X0+2368]
	059 Call 0x1C17CF4
	060 Move X0, 0xBD4000
	061 Move X0, [X0+2352]
	062 Call 0x1C17CF4
	063 Move X0, 0xB99000
	064 Move X0, [X0+744]
	065 Call 0x1C17CF4
	066 Move W8, 1
	067 Move [X28+3522], W8
	068 Move W8, 1
	069 Move [X19+32], W8
	070 Move X0, [X27]
	071 Call 0x1C17F10
	072 Move X1, [X23]
	073 Move X23, X0
	074 Call Dictionary`2<Int32Enum, Int32>..ctor, X0
	075 Move [X19+104], X23
	076 Move X0, [X26]
	077 Call 0x1C17F10
	078 Move X1, [X25]
	079 Move X23, X0
	080 Call Dictionary`2<Byte, Object>..ctor, X0
	081 Move [X19+120], X23
	082 Move X0, [X29]
	083 Call 0x1C17F10
	084 Move X8, 0xBD4000
	085 Move X8, [X8+2392]
	086 Move X23, X0
	087 Move X1, [X8]
	088 Call Dictionary`2<Int32, Object>..ctor, X0
	089 Move [X19+128], X23
	090 Move X8, 0xBD4000
	091 Move X8, [X8+2400]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X8, 0xBD4000
	095 Move X8, [X8+2384]
	096 Move X23, X0
	097 Move X1, [X8]
	098 Call Dictionary`2<Int32, Object>..ctor, X0
	099 Move [X19+136], X23
	100 Move X8, 0xB99000
	101 Move X8, [X8+744]
	102 Move X0, [X8]
	103 Call 0x1C17F10
	104 Move X1, X31
	105 Move X23, X0
	106 Call Random..ctor, X0
	107 Move X0, X19
	108 Move X1, X31
	109 Move [X19+144], X23
	110 Call Object..ctor, X0
	111 Move [X19+16], X22
	112 Move [X19+24], X21
	113 Move X0, [X24]
	114 Add X1, X31, 28
	115 NotImplemented "Instruction STRH not yet implemented."
	116 Call 0x1C17E04
	117 Move X8, [X24]
	118 Move X1, X0
	119 Move TEMP, 0
	120 Not TEMP
	121 Move X9, TEMP
	122 Add X0, X31, 0
	123 Move X2, X31
	124 Move [X31], X8
	125 Move [X31+8], X9
	126 NotImplemented "Instruction STRH not yet implemented."
	127 Call ValueType.Equals, X0, X1
	128 Move TEMP, X0
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfNotEqual {143}
	132 Move X0, [X24]
	133 Move W8, [X0+224]
	134 Compare W8, 0
	135 JumpIfNotEqual {138}
	136 Call 0x1C17DFC
	137 Move X0, [X24]
	138 Move X8, [X0+184]
	139 NotImplemented "Instruction LDRH not yet implemented."
	140 Move W8, W20
	141 ShiftRight W8, 8
	142 And W8, W8, 0x7FFFFFFF
	143 Move X8, X20
	144 ShiftRight X8, 8
	145 And X8, X8, 0x7FFFFFFF
	146 Move [X19+112], W20
	147 Move [X19+113], W8
	148 Move [X19+114], W8
	149 Move X20, [X31+112]
	150 Move X19, [X31+120]
	151 Move X22, [X31+96]
	152 Move X21, [X31+104]
	153 Move X24, [X31+80]
	154 Move X23, [X31+88]
	155 Move X26, [X31+64]
	156 Move X25, [X31+72]
	157 Move X28, [X31+48]
	158 Move X27, [X31+56]
	159 Move X29, [X31+32]
	160 Move X30, [X31+40]
	161 Add X31, X31, 128
	162 Return 

Method: System.Void Service()

Disassembly:
	0x0356237C B.NE 0x3562368
	0x03562380 MOV X0, X22
	0x03562384 MOV X1, X23
	0x03562388 MOV W2, W31
	0x0356238C BL 0x1C5C788
	0x03562390 B 0x35623A0
	0x03562394 LDRSW X9, [X10]
	0x03562398 ADD X8, X8, X9, 0x4, LSL
	0x0356239C ADD X0, X8, 0x138
	0x035623A0 LDP X8, X3, [X0]
	0x035623A4 MOV X0, X22
	0x035623A8 MOV X1, X20
	0x035623AC MOV X2, X21
	0x035623B0 B 0x35627F0
	0x035623B4 LDR W9, [X10]
	0x035623B8 ADD W9, W9, 0x1
	0x035623BC ADD X8, X8, W9, 0x4, SXTW
	0x035623C0 ADD X0, X8, 0x138
	0x035623C4 LDP X8, X4, [X0]
	0x035623C8 MOVZ W1, 0x3
	0x035623CC MOV X0, X25
	0x035623D0 MOV X2, X27
	0x035623D4 MOV X3, X26
	0x035623D8 BLR X8
	0x035623DC LDP V1, V0, [X23 + 0x10]
	0x035623E0 LDR V2, [X23]
	0x035623E4 ADRP X8, 0xBD3000
	0x035623E8 ADD X1, X31, 0x300
	0x035623EC STP V1, V0, [X31 + 0x260]
	0x035623F0 STR V2, [X31 + 0x25]
	0x035623F4 LDP V0, V1, [X22]
	0x035623F8 LDR X8, [X8 + 0xA80]
	0x035623FC LDP V2, V3, [X31 + 0x250]
	0x03562400 ADD X4, X31, 0x2E0
	0x03562404 STP V0, V1, [X31 + 0x230]
	0x03562408 LDR V0, [X31 + 0x27]
	0x0356240C STP V2, V3, [X31 + 0x300]
	0x03562410 LDP V1, V2, [X31 + 0x230]
	0x03562414 LDR X5, [X8]
	0x03562418 MOV X0, X21
	0x0356241C MOV X2, X19
	0x03562420 MOV W3, W20
	0x03562424 STR V0, [X31 + 0x32]
	0x03562428 STP V1, V2, [X31 + 0x2E0]
	0x0356242C BL 0x22AB250
	0x03562430 CBZ X24, 0x3562B28
	0x03562434 STR X0, [X24 + 0x10]
	0x03562438 ADRP X8, 0xBD3000
	0x0356243C LDR X8, [X8 + 0x9F0]
	0x03562440 LDR X0, [X8]
	0x03562444 BL 0x1C16F10
	0x03562448 ADRP X8, 0xBD3000
	0x0356244C LDR X8, [X8 + 0x9E8]
	0x03562450 MOV W1, W31
	0x03562454 MOV X20, X0
	0x03562458 LDR X2, [X8]
	0x0356245C BL 0x2D11258
	0x03562460 ADRP X8, 0xB95000
	0x03562464 LDR X8, [X8 + 0xAF8]
	0x03562468 LDR X0, [X8]
	0x0356246C BL 0x1C16F10
	0x03562470 ADRP X8, 0xBD3000
	0x03562474 LDR X8, [X8 + 0xA40]
	0x03562478 MOV X1, X24
	0x0356247C MOV X3, X31
	0x03562480 MOV X21, X0
	0x03562484 LDR X2, [X8]
	0x03562488 BL 0x2A6B948
	0x0356248C CBZ X19, 0x3562B28
	0x03562490 LDR X22, [X28]
	0x03562494 MOV X0, X19
	0x03562498 MOV X1, X22
	0x0356249C BL 0x1C16E00
	0x035624A0 CBZ X0, 0x3562B2C
	0x035624A4 LDR X23, [X28]
	0x035624A8 MOV X0, X19
	0x035624AC MOV X1, X23
	0x035624B0 BL 0x1C16E00
	0x035624B4 CBZ X0, 0x3562B38
	0x035624B8 LDR X8, [X0]
	0x035624BC MOV X22, X0
	0x035624C0 LDRH W9, [X8 + 0x12E]
	0x035624C4 CBZ X9, 0x35627C0
	0x035624C8 LDR X10, [X8 + 0xB0]
	0x035624CC ADD X10, X10, 0x8
	0x035624D0 LDUR X11, [X10 - 0x8]
	0x035624D4 CMP X11, X23
	0x035624D8 B.EQ 0x35627D4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xE7E000
	006 Move W8, [X20+3523]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {29}
	012 Move X0, 0xBD4000
	013 Move X0, [X0+2120]
	014 Call 0x1C17CF4
	015 Move X0, 0xBD4000
	016 Move X0, [X0+2128]
	017 Call 0x1C17CF4
	018 Move X0, 0xBD4000
	019 Move X0, [X0+2136]
	020 Call 0x1C17CF4
	021 Move X0, 0xBD4000
	022 Move X0, [X0+2144]
	023 Call 0x1C17CF4
	024 Move X0, 0xBD4000
	025 Move X0, [X0+2152]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+3523], W8
	029 NotImplemented "Instruction MOVI not yet implemented."
	030 Move [X31+32], X31
	031 Move [X31], V0
	032 Move [X31+8], V0
	033 Move X0, [X19+120]
	034 Compare X0, 0
	035 JumpIfEqual {68}
	036 Move X8, 0xBD4000
	037 Move X8, [X8+2120]
	038 Move X20, 0xBD4000
	039 Move X19, 0xBD4000
	040 Move X1, [X8]
	041 Move X20, [X20+2136]
	042 Move X19, [X19+2128]
	043 Add X8, X31, 0
	044 Call Dictionary`2<Byte, Object>.GetEnumerator, X0
	045 Move X1, [X20]
	046 Add X0, X31, 0
	047 Call Enumerator<Byte, Object>.MoveNext, X0
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {59}
	052 Move X0, [X31+24]
	053 Compare X0, 0
	054 JumpIfEqual {67}
	055 Move X8, [X0]
	056 Move X9, [X8+392]
	057 Move X1, [X8+400]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X1, [X19]
	060 Add X0, X31, 0
	061 Call Enumerator<Byte, Object>.Dispose, X0
	062 Move X20, [X31+64]
	063 Move X19, [X31+72]
	064 Move X30, [X31+48]
	065 Add X31, X31, 80
	066 Return 
	067 Call 0x1C17F20
	068 Call 0x1C17F20
	069 Move X19, X0
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X0, X19
	072 Call 0x3EB2AD0
	073 Move X20, [X0]
	074 Call 0x3EB2AE0
	075 Move X8, 0xBD4000
	076 Move X8, [X8+2128]
	077 Add X0, X31, 0
	078 Move X1, [X8]
	079 Call Enumerator<Byte, Object>.Dispose, X0
	080 Compare X20, 0
	081 JumpIfEqual {62}
	082 Move X0, X20
	083 Call 0x1C17F18
	084 Move X20, X31
	085 Move X19, X0
	086 Move X8, 0xBD4000
	087 Move X8, [X8+2128]
	088 Move X1, [X8]
	089 Add X0, X31, 0
	090 Call Enumerator<Byte, Object>.Dispose, X0
	091 Compare X20, 0
	092 JumpIfNotEqual {95}
	093 Move X0, X19
	094 Call 0x1D2D690
	095 Move X0, X20
	096 Call 0x1C17F18
	097 Call 0x1991590

Method: Photon.Voice.LocalVoice createLocalVoice(System.Int32 channelId, System.Func`3<System.Byte, System.Int32, Photon.Voice.LocalVoice> voiceFactory)

Disassembly:
	0x035624DC SUBS X9, X9, 0x1
	0x035624E0 ADD X10, X10, 0x10
	0x035624E4 B.NE 0x35624D0
	0x035624E8 B 0x35627C0
	0x035624EC ADRP X8, 0xBD3000
	0x035624F0 LDR X8, [X8 + 0xA00]
	0x035624F4 MOV X0, X19
	0x035624F8 LDR X1, [X8]
	0x035624FC BL 0x1C16E00
	0x03562500 CBNZ X0, 0x356251C
	0x03562504 ADRP X8, 0xBD3000
	0x03562508 LDR X8, [X8 + 0xA10]
	0x0356250C MOV X0, X19
	0x03562510 LDR X1, [X8]
	0x03562514 BL 0x1C16E00
	0x03562518 CBZ X0, 0x3562A1C
	0x0356251C MOVZ W24, 0x1
	0x03562520 B 0x3561E38
	0x03562524 ADRP X27, 0xBD3000
	0x03562528 LDR X27, [X27 + 0xA10]
	0x0356252C MOV X0, X19
	0x03562530 LDR X1, [X27]
	0x03562534 BL 0x1C16E00
	0x03562538 CBZ X0, 0x356281C
	0x0356253C CMP W24, 0x2
	0x03562540 B.NE 0x35628CC
	0x03562544 ADRP X8, 0xB91000
	0x03562548 LDR X8, [X8 + 0x9C8]
	0x0356254C LDR X24, [X21 + 0x18]
	0x03562550 LDR X25, [X8]
	0x03562554 LDR X8, [X25 + 0x38]
	0x03562558 CBNZ X8, 0x3562568
	0x0356255C MOV X0, X25
	0x03562560 BL 0x1C5C6E0
	0x03562564 LDR X8, [X25 + 0x38]
	0x03562568 LDR X0, [X8 + 0x10]
	0x0356256C LDRB W8, [X0 + 0x135]
	0x03562570 TBNZ X8, 0x0, 0x3562578
	0x03562574 BL 0x1C5C684
	0x03562578 LDR W8, [X0 + 0xE0]
	0x0356257C CBNZ W8, 0x3562584
	0x03562580 BL 0x1C16DFC
	0x03562584 LDR X8, [X25 + 0x38]
	0x03562588 LDR X0, [X8 + 0x10]
	0x0356258C LDRB W8, [X0 + 0x135]
	0x03562590 TBNZ X8, 0x0, 0x3562598
	0x03562594 BL 0x1C5C684
	0x03562598 CBZ X24, 0x3562B28
	0x0356259C ADRP X10, 0xB96000
	0x035625A0 ADRP X11, 0xBD3000
	0x035625A4 LDR X9, [X0 + 0xB8]
	0x035625A8 LDR X10, [X10 + 0x348]
	0x035625AC LDR X8, [X24]
	0x035625B0 LDR X11, [X11 + 0xAB0]
	0x035625B4 LDR X25, [X9]
	0x035625B8 LDR X1, [X10]
	0x035625BC LDRH W9, [X8 + 0x12E]
	0x035625C0 LDR X26, [X11]
	0x035625C4 CBZ X9, 0x35625E8
	0x035625C8 LDR X10, [X8 + 0xB0]
	0x035625CC ADD X10, X10, 0x8
	0x035625D0 LDUR X11, [X10 - 0x8]
	0x035625D4 CMP X11, X1
	0x035625D8 B.EQ 0x3562A74
	0x035625DC SUBS X9, X9, 0x1
	0x035625E0 ADD X10, X10, 0x10
	0x035625E4 B.NE 0x35625D0
	0x035625E8 MOVZ W2, 0x1
	0x035625EC MOV X0, X24
	0x035625F0 BL 0x1C5C788
	0x035625F4 B 0x3562A84
	0x035625F8 LDP V1, V0, [X23 + 0x10]
	0x035625FC LDR V2, [X23]
	0x03562600 ADRP X8, 0xBD3000
	0x03562604 ADD X1, X31, 0x300
	0x03562608 STP V1, V0, [X31 + 0xD0]
	0x0356260C STR V2, [X31 + 0xC]
	0x03562610 LDP V4, V3, [X22]
	0x03562614 LDR X8, [X8 + 0xA88]
	0x03562618 ADD X4, X31, 0x2E0
	0x0356261C MOV X0, X21
	0x03562620 STP V4, V3, [X31 + 0xA0]
	0x03562624 LDR X5, [X8]
	0x03562628 LDP V3, V4, [X31 + 0xA0]
	0x0356262C MOV X2, X19
	0x03562630 MOV W3, W20
	0x03562634 STP V2, V1, [X31 + 0x300]
	0x03562638 STR V0, [X31 + 0x32]
	0x0356263C STP V3, V4, [X31 + 0x2E0]
	0x03562640 BL 0x22AB3A0
	0x03562644 ADRP X8, 0xBD3000
	0x03562648 LDR X8, [X8 + 0x9D0]
	0x0356264C MOV X20, X0
	0x03562650 LDR X8, [X8]
	0x03562654 MOV X0, X8
	0x03562658 BL 0x1C16F10
	0x0356265C LDR X1, [X27]
	0x03562660 MOV X21, X0
	0x03562664 MOV X0, X19
	0x03562668 BL 0x1C16E00
	0x0356266C ADRP X8, 0xBD3000
	0x03562670 LDR X8, [X8 + 0x9C8]
	0x03562674 MOV X1, X0
	0x03562678 MOV X0, X21
	0x0356267C LDR X2, [X8]
	0x03562680 BL 0x28E40D4
	0x03562684 CBNZ X20, 0x3562A14
	0x03562688 B 0x3562B28
	0x0356268C LDR W9, [X10]
	0x03562690 ADD W9, W9, 0x1
	0x03562694 ADD X8, X8, W9, 0x4, SXTW
	0x03562698 ADD X0, X8, 0x138
	0x0356269C LDP X8, X4, [X0]
	0x035626A0 MOVZ W1, 0x3
	0x035626A4 MOV X0, X25
	0x035626A8 MOV X2, X27
	0x035626AC MOV X3, X26

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0xE7E000
	008 Move W8, [X22+3524]
	009 Move X19, X2
	010 Move W21, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xB92000
	017 Move X0, [X0+2504]
	018 Call 0x1C17CF4
	019 Move X0, 0xB97000
	020 Move X0, [X0+840]
	021 Call 0x1C17CF4
	022 Move X0, 0xBD4000
	023 Move X0, [X0+2408]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+3524], W8
	027 Move X0, X20
	028 Call VoiceClient.getNewVoiceId, X0
	029 And W31, W0, 255
	030 Compare X19, 0
	031 JumpIfEqual {133}
	032 Move W22, W0
	033 Move X8, [X19+24]
	034 Move X0, [X19+64]
	035 Move X3, [X19+40]
	036 Move W1, W22
	037 Move W2, W21
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X19, X0
	040 Compare X0, 0
	041 JumpIfEqual {125}
	042 Move X0, X20
	043 Move W1, W22
	044 Move W2, W21
	045 Move X3, X19
	046 Call VoiceClient.addVoice, X0, X1, X2, X3
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 Move X20, [X20+24]
	051 Move X21, [X19+208]
	052 Add X0, X31, 0
	053 Move [X31+16], V1
	054 Move [X31+24], V0
	055 Move [X31], V2
	056 Call VoiceInfo.ToString, X0
	057 Move X8, 0xBD4000
	058 Move X8, [X8+2408]
	059 Move X2, X0
	060 Move X0, X21
	061 Move X3, X31
	062 Move X1, [X8]
	063 Call String.Concat, X0, X1, X2
	064 Move X8, 0xB92000
	065 Move X8, [X8+2504]
	066 Move X21, X0
	067 Move X22, [X8]
	068 Move X8, [X22+56]
	069 Compare X8, 0
	070 JumpIfNotEqual {74}
	071 Move X0, X22
	072 Call 0x1C5D6E0
	073 Move X8, [X22+56]
	074 Move X0, [X8+16]
	075 Move W8, [X0+309]
	076 Move TEMP, X8
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {81}
	080 Call 0x1C5D684
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move X8, [X22+56]
	086 Move X0, [X8+16]
	087 Move W8, [X0+309]
	088 Move TEMP, X8
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {93}
	092 Call 0x1C5D684
	093 Compare X20, 0
	094 JumpIfEqual {133}
	095 Move X10, 0xB97000
	096 Move X9, [X0+184]
	097 Move X8, [X20]
	098 Move X10, [X10+840]
	099 Move X22, [X9]
	100 NotImplemented "Instruction LDRH not yet implemented."
	101 Move X1, [X10]
	102 Compare X9, 0
	103 JumpIfEqual {110}
	104 Move X10, [X8+176]
	105 Add X10, X10, 8
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Subtract X9, X9, 1
	109 Add X10, X10, 16
	110 Move W2, 1
	111 Move X0, X20
	112 Call 0x1C5D788
	113 Move X19, X31
	114 Move W9, [X10]
	115 Add W9, W9, 1
	116 Add X8, X8, W9
	117 Add X0, X8, 312
	118 Move X8, [X0]
	119 Move X4, [X0+8]
	120 Move W1, 3
	121 Move X0, X20
	122 Move X2, X21
	123 Move X3, X22
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move X0, X19
	126 Move X20, [X31+80]
	127 Move X19, [X31+88]
	128 Move X22, [X31+64]
	129 Move X21, [X31+72]
	130 Move X30, [X31+48]
	131 Add X31, X31, 96
	132 Return X0
	133 Call 0x1C17F20

Method: Photon.Voice.LocalVoice CreateLocalVoice(Photon.Voice.VoiceInfo voiceInfo, System.Int32 channelId, Photon.Voice.VoiceCreateOptions options = null)

Disassembly:
	0x03562AF0 ADRP X8, 0xBD3000
	0x03562AF4 LDR X8, [X8 + 0x9B8]
	0x03562AF8 MOV X20, X0
	0x03562AFC LDR X8, [X8]
	0x03562B00 MOV X0, X8
	0x03562B04 BL 0x1C16F10
	0x03562B08 LDR X1, [X27]
	0x03562B0C MOV X21, X0
	0x03562B10 MOV X0, X19
	0x03562B14 BL 0x1C16E00
	0x03562B18 MOV X1, X0
	0x03562B1C MOV X0, X21
	0x03562B20 BL 0x3562BF4
	0x03562B24 CBNZ X20, 0x3562A14
	0x03562B28 BL 0x1C16F20
	0x03562B2C MOV X0, X19
	0x03562B30 MOV X1, X22
	0x03562B34 BL 0x1C171E0
	0x03562B38 MOV X0, X19
	0x03562B3C MOV X1, X23
	0x03562B40 BL 0x1C171E0
	0x03562B44 BL 0x1C16F28
	0x03562B48 BL 0x1C16F44
	0x03562B4C MOV X1, X31
	0x03562B50 BL 0x1C16DEC
	0x03562B54 MOV X1, X31
	0x03562B58 B 0x33BDD8C
	0x03562B5C MOV X1, X31
	0x03562B60 B 0x33BDD8C
	0x03562B64 MOV X1, X31
	0x03562B68 B 0x33BDD8C
	0x03562B6C MOV X1, X31
	0x03562B70 B 0x33BDD8C
	0x03562B74 STP X30, X23, [X31 - 0x30]!
	0x03562B78 STP X22, X21, [X31 + 0x10]
	0x03562B7C STP X20, X19, [X31 + 0x20]
	0x03562B80 ADRP X22, 0xE7D000
	0x03562B84 ADRP X23, 0xBD3000
	0x03562B88 ADRP X21, 0xB91000
	0x03562B8C LDRB W8, [X22 + 0xDF3]
	0x03562B90 LDR X23, [X23 + 0xAB8]
	0x03562B94 LDR X21, [X21 + 0x638]
	0x03562B98 MOV X20, X1
	0x03562B9C MOV X19, X0
	0x03562BA0 TBNZ X8, 0x0, 0x3562BC4
	0x03562BA4 ADRP X0, 0xBD3000
	0x03562BA8 LDR X0, [X0 + 0xAB8]
	0x03562BAC BL 0x1C16CF4
	0x03562BB0 ADRP X0, 0xB91000
	0x03562BB4 LDR X0, [X0 + 0x638]
	0x03562BB8 BL 0x1C16CF4
	0x03562BBC MOVZ W8, 0x1
	0x03562BC0 STRB W8, [X22 + 0xDF3]
	0x03562BC4 LDR X2, [X23]
	0x03562BC8 MOV X0, X19
	0x03562BCC MOV X1, X20
	0x03562BD0 BL 0x28E450C
	0x03562BD4 LDR X0, [X21]
	0x03562BD8 MOV W1, W31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xE7E000
	009 Move X24, 0xBD4000
	010 Move W8, [X23+3525]
	011 Move X24, [X24+2456]
	012 Move X21, X3
	013 Move W19, W2
	014 Move X22, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0xBBB000
	021 Move X0, [X0+2352]
	022 Call 0x1C17CF4
	023 Move X0, 0xBD4000
	024 Move X0, [X0+2464]
	025 Call 0x1C17CF4
	026 Move X0, 0xBD4000
	027 Move X0, [X0+2456]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+3525], W8
	031 Move X0, [X24]
	032 Call 0x1C17F10
	033 Move X1, X31
	034 Move X23, X0
	035 Call Object..ctor, X0
	036 Compare X23, 0
	037 JumpIfEqual {73}
	038 Move [X23+16], X20
	039 Move V1, [X22+16]
	040 Move V0, [X22+32]
	041 Move V2, [X22]
	042 Move [X23+72], W19
	043 Move X8, 0xBBB000
	044 Move [X23+56], V0
	045 Move [X23+40], V1
	046 Move [X23+24], V2
	047 Move V1, [X21]
	048 Move V0, [X21+16]
	049 Move X8, [X8+2352]
	050 Move X21, 0xBD4000
	051 Move [X23+80], V1
	052 Move [X23+88], V0
	053 Move X0, [X8]
	054 Move X21, [X21+2464]
	055 Call 0x1C17F10
	056 Move X2, [X21]
	057 Move X1, X23
	058 Move X3, X31
	059 Move X21, X0
	060 Call Func`3<Byte, Int32, Object>..ctor, X0, X1, X2
	061 Move X0, X20
	062 Move W1, W19
	063 Move X2, X21
	064 Move X20, [X31+48]
	065 Move X19, [X31+56]
	066 Move X22, [X31+32]
	067 Move X21, [X31+40]
	068 Move X24, [X31+16]
	069 Move X23, [X31+24]
	070 Move X30, [X31+64]
	071 Call VoiceClient.createLocalVoice, X0, X1, X2
	072 Return X0
	073 Call 0x1C17F20

Method: Photon.Voice.LocalVoiceAudio`1<T> CreateLocalVoiceAudio(Photon.Voice.VoiceInfo voiceInfo, Photon.Voice.IAudioDesc audioSourceDesc, System.Int32 channelId, Photon.Voice.VoiceCreateOptions options = null)

Disassembly:
	0x022AC250 BR X2
	0x022AC254 MOV X0, X19
	0x022AC258 BL 0x1C171E0
	0x022AC25C BL 0x1C16F20
	0x022AC260 STP X29, X30, [X31 - 0x40]!
	0x022AC264 STP X24, X23, [X31 + 0x10]
	0x022AC268 STP X22, X21, [X31 + 0x20]
	0x022AC26C STP X20, X19, [X31 + 0x30]
	0x022AC270 ADD X29, X31, 0x0
	0x022AC274 SUB X31, X31, 0x10
	0x022AC278 MRS X24, 0xC000
	0x022AC27C LDR X8, [X24 + 0x28]
	0x022AC280 MOV X23, X2
	0x022AC284 MOV X19, X1
	0x022AC288 MOV X20, X0
	0x022AC28C STUR X8, [X29 - 0x8]
	0x022AC290 LDR X8, [X2 + 0x38]
	0x022AC294 CBNZ X8, 0x22AC2A4
	0x022AC298 MOV X0, X23
	0x022AC29C BL 0x1C5C6E0
	0x022AC2A0 LDR X8, [X23 + 0x38]
	0x022AC2A4 LDR X9, [X8 + 0x10]
	0x022AC2A8 LDR W21, [X9 + 0xFC]
	0x022AC2AC ADD X9, X31, 0x0
	0x022AC2B0 ADD X10, X21, 0xF
	0x022AC2B4 AND X10, X10, 0x1FFFFFFFF
	0x022AC2B8 SUB X22, X9, X10
	0x022AC2BC ADD X31, X22, 0x0
	0x022AC2C0 LDR X1, [X8]
	0x022AC2C4 LDRB W8, [X1 + 0x135]
	0x022AC2C8 TBNZ X8, 0x0, 0x22AC2D8
	0x022AC2CC MOV X0, X1
	0x022AC2D0 BL 0x1C5C684
	0x022AC2D4 MOV X1, X0
	0x022AC2D8 CBZ X20, 0x22AC3A4
	0x022AC2DC LDR X8, [X20]
	0x022AC2E0 LDRB W9, [X1 + 0x130]
	0x022AC2E4 LDRB W10, [X8 + 0x130]
	0x022AC2E8 CMP W10, W9
	0x022AC2EC B.CC 0x22AC39C
	0x022AC2F0 LDR X8, [X8 + 0xC8]
	0x022AC2F4 ADD X8, X8, X9, 0x3, LSL
	0x022AC2F8 LDUR X8, [X8 - 0x8]
	0x022AC2FC CMP X8, X1
	0x022AC300 B.NE 0x22AC39C
	0x022AC304 LDR X8, [X23 + 0x38]
	0x022AC308 LDR X1, [X8]
	0x022AC30C LDRB W8, [X1 + 0x135]
	0x022AC310 TBNZ X8, 0x0, 0x22AC320
	0x022AC314 MOV X0, X1
	0x022AC318 BL 0x1C5C684
	0x022AC31C MOV X1, X0
	0x022AC320 LDR X8, [X20]
	0x022AC324 LDRB W9, [X1 + 0x130]
	0x022AC328 LDRB W10, [X8 + 0x130]
	0x022AC32C CMP W10, W9
	0x022AC330 B.CC 0x22AC39C
	0x022AC334 LDR X10, [X8 + 0xC8]
	0x022AC338 ADD X9, X10, X9, 0x3, LSL
	0x022AC33C LDUR X9, [X9 - 0x8]
	0x022AC340 CMP X9, X1
	0x022AC344 B.NE 0x22AC39C
	0x022AC348 STUR X22, [X29 - 0x10]
	0x022AC34C LDR X1, [X8 + 0x220]
	0x022AC350 SUB X3, X29, 0x10
	0x022AC354 MOV X2, X20
	0x022AC358 MOV X4, X22
	0x022AC35C LDP X0, X8, [X1 + 0x8]
	0x022AC360 BLR X8
	0x022AC364 MOV X0, X19
	0x022AC368 MOV X1, X22
	0x022AC36C MOV X2, X21
	0x022AC370 BL 0x3EB1AC0
	0x022AC374 LDR X8, [X24 + 0x28]
	0x022AC378 LDUR X9, [X29 - 0x8]
	0x022AC37C CMP X8, X9
	0x022AC380 B.NE 0x22AC3A8
	0x022AC384 ADD X31, X29, 0x0
	0x022AC388 LDP X20, X19, [X31 + 0x30]
	0x022AC38C LDP X22, X21, [X31 + 0x20]
	0x022AC390 LDP X24, X23, [X31 + 0x10]
	0x022AC394 LDP X29, X30, [X31], #0x40
	0x022AC398 RET
	0x022AC39C MOV X0, X20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X8, [X5+56]
	010 Move X19, X5
	011 Move X22, X4
	012 Move W20, W3
	013 Move X23, X2
	014 Move X24, X1
	015 Move X21, X0
	016 Compare X8, 0
	017 JumpIfNotEqual {27}
	018 Move X0, 0x1E71000
	019 Move X0, [X0+2352]
	020 Call 0x1C17CF4
	021 Move X8, [X19+56]
	022 Compare X8, 0
	023 JumpIfNotEqual {27}
	024 Move X0, X19
	025 Call 0x1C5D6E0
	026 Move X8, [X19+56]
	027 Move X0, [X8]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Call 0x1C17F10
	035 Move X8, [X19+56]
	036 Move X25, X0
	037 Move X1, [X8+8]
	038 Call 0x2380E9C, X0
	039 Compare X25, 0
	040 JumpIfEqual {102}
	041 Move [X25+16], X21
	042 Move V2, [X24+16]
	043 Move V0, [X24+32]
	044 Move V1, [X24]
	045 Move [X25+72], X23
	046 Move [X25+80], W20
	047 Move [X25+56], V0
	048 Move [X25+40], V2
	049 Move [X25+24], V1
	050 Move V1, [X22]
	051 Move V0, [X22+16]
	052 Move X8, 0x1E71000
	053 Move [X25+104], V0
	054 Move [X25+88], V1
	055 Move X8, [X8+2352]
	056 Move X0, [X8]
	057 Call 0x1C17F10
	058 Move X8, [X19+56]
	059 Move X1, X25
	060 Move X3, X31
	061 Move X22, X0
	062 Move X2, [X8+16]
	063 Call Func`3<Byte, Int32, Object>..ctor, X0, X1, X2
	064 Move X0, X21
	065 Move W1, W20
	066 Move X2, X22
	067 Move X3, X31
	068 Call VoiceClient.createLocalVoice, X0, X1, X2
	069 Move X8, [X19+56]
	070 Move X19, X0
	071 Move X1, [X8+24]
	072 Move W8, [X1+309]
	073 Move TEMP, X8
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {80}
	077 Move X0, X1
	078 Call 0x1C5D684
	079 Move X1, X0
	080 Compare X19, 0
	081 JumpIfEqual {90}
	082 Move X8, [X19]
	083 Move W9, [X1+304]
	084 Move W10, [X8+304]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, [X8+200]
	087 Add X8, X8, X9
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X0, X19
	091 Move X20, [X31+48]
	092 Move X19, [X31+56]
	093 Move X22, [X31+32]
	094 Move X21, [X31+40]
	095 Move X24, [X31+16]
	096 Move X23, [X31+24]
	097 Move X30, [X31+64]
	098 Move X25, [X31+72]
	099 Return X0
	100 Move X0, X19
	101 Call 0x1C181E0
	102 Call 0x1C17F20

Method: Photon.Voice.LocalVoice CreateLocalVoiceAudioFromSource(Photon.Voice.VoiceInfo voiceInfo, Photon.Voice.IAudioDesc source, Photon.Voice.AudioSampleType sampleType, System.Int32 channelId, Photon.Voice.VoiceCreateOptions options = null)

Disassembly:
	0x03562BE4 LDP X20, X19, [X31 + 0x20]
	0x03562BE8 LDP X22, X21, [X31 + 0x10]
	0x03562BEC LDP X30, X23, [X31], #0x30
	0x03562BF0 RET
	0x03562BF4 STP X30, X23, [X31 - 0x30]!
	0x03562BF8 STP X22, X21, [X31 + 0x10]
	0x03562BFC STP X20, X19, [X31 + 0x20]
	0x03562C00 ADRP X22, 0xE7D000
	0x03562C04 ADRP X23, 0xBB9000
	0x03562C08 ADRP X21, 0xBD3000
	0x03562C0C LDRB W8, [X22 + 0xDF5]
	0x03562C10 LDR X23, [X23 + 0x820]
	0x03562C14 LDR X21, [X21 + 0xAC0]
	0x03562C18 MOV X19, X1
	0x03562C1C MOV X20, X0
	0x03562C20 TBNZ X8, 0x0, 0x3562C44
	0x03562C24 ADRP X0, 0xBD3000
	0x03562C28 LDR X0, [X0 + 0xAC0]
	0x03562C2C BL 0x1C16CF4
	0x03562C30 ADRP X0, 0xBB9000
	0x03562C34 LDR X0, [X0 + 0x820]
	0x03562C38 BL 0x1C16CF4
	0x03562C3C MOVZ W8, 0x1
	0x03562C40 STRB W8, [X22 + 0xDF5]
	0x03562C44 LDR X0, [X23]
	0x03562C48 MOV W1, W31
	0x03562C4C BL 0x1C16D6C
	0x03562C50 STR X0, [X20 + 0x18]
	0x03562C54 LDR X2, [X21]
	0x03562C58 MOV X0, X20
	0x03562C5C MOV X1, X19
	0x03562C60 LDP X20, X19, [X31 + 0x20]
	0x03562C64 LDP X22, X21, [X31 + 0x10]
	0x03562C68 LDP X30, X23, [X31], #0x30
	0x03562C6C B 0x28E4444
	0x03562C70 LDRB W8, [X0 + 0x71]
	0x03562C74 CMP W8, W1, UXTB
	0x03562C78 B.NE 0x3562C84
	0x03562C7C LDRB W0, [X0 + 0x70]
	0x03562C80 RET
	0x03562C84 ADD W0, W1, 0x1
	0x03562C88 RET
	0x03562C8C SUB X31, X31, 0xF0
	0x03562C90 STP X29, X30, [X31 + 0x90]
	0x03562C94 STP X28, X27, [X31 + 0xA0]
	0x03562C98 STP X26, X25, [X31 + 0xB0]
	0x03562C9C STP X24, X23, [X31 + 0xC0]
	0x03562CA0 STP X22, X21, [X31 + 0xD0]
	0x03562CA4 STP X20, X19, [X31 + 0xE0]
	0x03562CA8 ADRP X20, 0xE7D000
	0x03562CAC LDRB W8, [X20 + 0xDCA]
	0x03562CB0 MOV X19, X0
	0x03562CB4 TBNZ X8, 0x0, 0x3562D68
	0x03562CB8 ADRP X0, 0xB91000
	0x03562CBC LDR X0, [X0 + 0x9C8]
	0x03562CC0 BL 0x1C16CF4
	0x03562CC4 ADRP X0, 0xBD3000
	0x03562CC8 LDR X0, [X0 + 0xAC8]
	0x03562CCC BL 0x1C16CF4
	0x03562CD0 ADRP X0, 0xBD3000
	0x03562CD4 LDR X0, [X0 + 0x8B0]
	0x03562CD8 BL 0x1C16CF4
	0x03562CDC ADRP X0, 0xBD3000
	0x03562CE0 LDR X0, [X0 + 0x8B8]
	0x03562CE4 BL 0x1C16CF4
	0x03562CE8 ADRP X0, 0xBD3000
	0x03562CEC LDR X0, [X0 + 0x8C0]
	0x03562CF0 BL 0x1C16CF4
	0x03562CF4 ADRP X0, 0xBD3000
	0x03562CF8 LDR X0, [X0 + 0x8C8]
	0x03562CFC BL 0x1C16CF4
	0x03562D00 ADRP X0, 0xBD3000
	0x03562D04 LDR X0, [X0 + 0x8D0]
	0x03562D08 BL 0x1C16CF4
	0x03562D0C ADRP X0, 0xBD3000
	0x03562D10 LDR X0, [X0 + 0x8D8]
	0x03562D14 BL 0x1C16CF4
	0x03562D18 ADRP X0, 0xBD3000
	0x03562D1C LDR X0, [X0 + 0x8E0]
	0x03562D20 BL 0x1C16CF4
	0x03562D24 ADRP X0, 0xBD3000
	0x03562D28 LDR X0, [X0 + 0x8E8]
	0x03562D2C BL 0x1C16CF4
	0x03562D30 ADRP X0, 0xB96000
	0x03562D34 LDR X0, [X0 + 0x348]
	0x03562D38 BL 0x1C16CF4
	0x03562D3C ADRP X0, 0xBD3000
	0x03562D40 LDR X0, [X0 + 0x8F0]
	0x03562D44 BL 0x1C16CF4
	0x03562D48 ADRP X0, 0xBD3000
	0x03562D4C LDR X0, [X0 + 0x8F8]
	0x03562D50 BL 0x1C16CF4
	0x03562D54 ADRP X0, 0xBD3000
	0x03562D58 LDR X0, [X0 + 0xAD0]
	0x03562D5C BL 0x1C16CF4
	0x03562D60 MOVZ W8, 0x1
	0x03562D64 STRB W8, [X20 + 0xDCA]
	0x03562D68 MOVI V0.2D, 0x0
	0x03562D6C STR X31, [X31 + 0x80]
	0x03562D70 STR X31, [X31 + 0x50]
	0x03562D74 STP V0, V0, [X31 + 0x60]
	0x03562D78 STP V0, V0, [X31 + 0x30]
	0x03562D7C LDR X0, [X19 + 0x88]
	0x03562D80 CBZ X0, 0x3562FE0
	0x03562D84 ADRP X8, 0xBD3000
	0x03562D88 LDR X8, [X8 + 0x8B0]
	0x03562D8C ADRP X21, 0xBD3000
	0x03562D90 ADRP X28, 0xBD3000
	0x03562D94 ADRP X29, 0xBD3000
	0x03562D98 ADRP X27, 0xBD3000
	0x03562D9C ADRP X25, 0xBD3000
	0x03562DA0 ADRP X24, 0xB91000
	0x03562DA4 LDR X21, [X21 + 0x8D0]
	0x03562DA8 LDR X28, [X28 + 0x8B8]
	0x03562DAC LDR X29, [X29 + 0x8D8]
	0x03562DB0 LDR X27, [X27 + 0x8C8]
	0x03562DB4 LDR X25, [X25 + 0xAC8]
	0x03562DB8 LDR X24, [X24 + 0x9C8]
	0x03562DBC LDR X1, [X8]
	0x03562DC0 ADRP X23, 0xB96000
	0x03562DC4 ADRP X22, 0xBD3000
	0x03562DC8 ADRP X26, 0xBD3000
	0x03562DCC LDR X23, [X23 + 0x348]
	0x03562DD0 LDR X22, [X22 + 0xAD0]
	0x03562DD4 LDR X26, [X26 + 0x8C0]
	0x03562DD8 ADD X8, X31, 0x8
	0x03562DDC BL 0x2A13AB4
	0x03562DE0 LDUR V0, [X31 + 0x8]
	0x03562DE4 LDUR V1, [X31 + 0x18]
	0x03562DE8 LDR X8, [X31 + 0x28]
	0x03562DEC STP V0, V1, [X31 + 0x60]
	0x03562DF0 STR X8, [X31 + 0x80]
	0x03562DF4 LDR X1, [X21]
	0x03562DF8 ADD X0, X31, 0x60
	0x03562DFC BL 0x2BF5330
	0x03562E00 TBZ X0, 0x0, 0x3562EA8
	0x03562E04 LDR X0, [X31 + 0x78]
	0x03562E08 CBZ X0, 0x3562FDC
	0x03562E0C LDR X1, [X28]
	0x03562E10 ADD X8, X31, 0x8
	0x03562E14 BL 0x29D395C
	0x03562E18 LDUR V0, [X31 + 0x8]
	0x03562E1C LDUR V1, [X31 + 0x18]
	0x03562E20 LDR X8, [X31 + 0x28]
	0x03562E24 STP V0, V1, [X31 + 0x30]
	0x03562E28 STR X8, [X31 + 0x50]
	0x03562E2C LDR X1, [X29]
	0x03562E30 ADD X0, X31, 0x30
	0x03562E34 BL 0x2BEA018
	0x03562E38 TBZ X0, 0x0, 0x3562E68
	0x03562E3C LDR X20, [X31 + 0x48]
	0x03562E40 CBZ X20, 0x3562E80
	0x03562E44 LDR X8, [X20 + 0x40]
	0x03562E48 CBZ X8, 0x3562E5C
	0x03562E4C LDR X0, [X8 + 0x40]
	0x03562E50 LDR X1, [X8 + 0x28]
	0x03562E54 LDR X9, [X8 + 0x18]
	0x03562E58 BLR X9
	0x03562E5C MOV X0, X20
	0x03562E60 BL 0x355C5D8
	0x03562E64 B 0x3562E2C
	0x03562E68 MOV X20, X31
	0x03562E6C LDR X1, [X27]
	0x03562E70 ADD X0, X31, 0x30
	0x03562E74 BL 0x2BEA130
	0x03562E78 CBZ X20, 0x3562DF4
	0x03562E7C B 0x3562FD4
	0x03562E80 BL 0x1C16F20
	0x03562E84 B 0x3562FE4
	0x03562E88 B 0x3562E90
	0x03562E8C B 0x3562E90
	0x03562E90 CMP W1, 0x1
	0x03562E94 B.NE 0x3562FA8
	0x03562E98 BL 0x3EB1AD0
	0x03562E9C LDR X20, [X0]
	0x03562EA0 BL 0x3EB1AE0
	0x03562EA4 B 0x3562E6C
	0x03562EA8 LDR X1, [X26]
	0x03562EAC ADD X0, X31, 0x60
	0x03562EB0 BL 0x2BF5448
	0x03562EB4 LDR X0, [X19 + 0x88]
	0x03562EB8 CBZ X0, 0x3562FE0
	0x03562EBC LDR X1, [X25]
	0x03562EC0 BL 0x2A13814
	0x03562EC4 LDR X20, [X24]
	0x03562EC8 LDR X19, [X19 + 0x18]
	0x03562ECC LDR X8, [X20 + 0x38]
	0x03562ED0 CBNZ X8, 0x3562EE0
	0x03562ED4 MOV X0, X20
	0x03562ED8 BL 0x1C5C6E0
	0x03562EDC LDR X8, [X20 + 0x38]
	0x03562EE0 LDR X0, [X8 + 0x10]
	0x03562EE4 LDRB W8, [X0 + 0x135]
	0x03562EE8 TBNZ X8, 0x0, 0x3562EF0
	0x03562EEC BL 0x1C5C684
	0x03562EF0 LDR W8, [X0 + 0xE0]
	0x03562EF4 CBNZ W8, 0x3562EFC
	0x03562EF8 BL 0x1C16DFC
	0x03562EFC LDR X8, [X20 + 0x38]
	0x03562F00 LDR X0, [X8 + 0x10]
	0x03562F04 LDRB W8, [X0 + 0x135]
	0x03562F08 TBNZ X8, 0x0, 0x3562F10
	0x03562F0C BL 0x1C5C684
	0x03562F10 CBZ X19, 0x3562FE0
	0x03562F14 LDR X9, [X0 + 0xB8]
	0x03562F18 LDR X8, [X19]
	0x03562F1C LDR X1, [X23]
	0x03562F20 LDR X21, [X22]
	0x03562F24 LDR X20, [X9]
	0x03562F28 LDRH W9, [X8 + 0x12E]
	0x03562F2C CBZ X9, 0x3562F50
	0x03562F30 LDR X10, [X8 + 0xB0]
	0x03562F34 ADD X10, X10, 0x8
	0x03562F38 LDUR X11, [X10 - 0x8]
	0x03562F3C CMP X11, X1
	0x03562F40 B.EQ 0x3562F60
	0x03562F44 SUBS X9, X9, 0x1
	0x03562F48 ADD X10, X10, 0x10
	0x03562F4C B.NE 0x3562F38
	0x03562F50 MOVZ W2, 0x1
	0x03562F54 MOV X0, X19
	0x03562F58 BL 0x1C5C788
	0x03562F5C B 0x3562F70
	0x03562F60 LDR W9, [X10]
	0x03562F64 ADD W9, W9, 0x1
	0x03562F68 ADD X8, X8, W9, 0x4, SXTW
	0x03562F6C ADD X0, X8, 0x138
	0x03562F70 LDP X8, X4, [X0]
	0x03562F74 MOVZ W1, 0x3
	0x03562F78 MOV X0, X19
	0x03562F7C MOV X2, X21
	0x03562F80 MOV X3, X20
	0x03562F84 BLR X8
	0x03562F88 LDP X20, X19, [X31 + 0xE0]
	0x03562F8C LDP X22, X21, [X31 + 0xD0]
	0x03562F90 LDP X24, X23, [X31 + 0xC0]
	0x03562F94 LDP X26, X25, [X31 + 0xB0]
	0x03562F98 LDP X28, X27, [X31 + 0xA0]
	0x03562F9C LDP X29, X30, [X31 + 0x90]
	0x03562FA0 ADD X31, X31, 0xF0
	0x03562FA4 RET
	0x03562FA8 STR X1, [X31]
	0x03562FAC MOV X21, X0
	0x03562FB0 MOV X20, X31
	0x03562FB4 LDR X1, [X27]
	0x03562FB8 ADD X0, X31, 0x30
	0x03562FBC BL 0x2BEA130
	0x03562FC0 LDR X1, [X31]
	0x03562FC4 MOV X0, X21
	0x03562FC8 CBZ X20, 0x3563000
	0x03562FCC MOV X0, X20
	0x03562FD0 BL 0x1C16F18
	0x03562FD4 MOV X0, X20
	0x03562FD8 BL 0x1C16F18
	0x03562FDC BL 0x1C16F20
	0x03562FE0 BL 0x1C16F20
	0x03562FE4 MOV X21, X0
	0x03562FE8 STR X1, [X31]
	0x03562FEC B 0x3562FB4
	0x03562FF0 B 0x3563000
	0x03562FF4 B 0x3563000
	0x03562FF8 B 0x3563000
	0x03562FFC B 0x3563000
	0x03563000 CMP W1, 0x1
	0x03563004 B.NE 0x356302C
	0x03563008 BL 0x3EB1AD0
	0x0356300C LDR X20, [X0]
	0x03563010 BL 0x3EB1AE0
	0x03563014 LDR X1, [X26]
	0x03563018 ADD X0, X31, 0x60
	0x0356301C BL 0x2BF5448
	0x03563020 CBZ X20, 0x3562EB4
	0x03563024 MOV X0, X20
	0x03563028 BL 0x1C16F18
	0x0356302C MOV X19, X0
	0x03563030 MOV X20, X31
	0x03563034 B 0x356303C
	0x03563038 MOV X19, X0
	0x0356303C LDR X1, [X26]
	0x03563040 ADD X0, X31, 0x60
	0x03563044 BL 0x2BF5448
	0x03563048 CBNZ X20, 0x3563054
	0x0356304C MOV X0, X19
	0x03563050 BL 0x1D2C690
	0x03563054 MOV X0, X20
	0x03563058 BL 0x1C16F18
	0x0356305C BL 0x1990590
	0x03563060 SUB X31, X31, 0x120
	0x03563064 STP X29, X30, [X31 + 0xC0]
	0x03563068 STP X28, X27, [X31 + 0xD0]
	0x0356306C STP X26, X25, [X31 + 0xE0]
	0x03563070 STP X24, X23, [X31 + 0xF0]
	0x03563074 STP X22, X21, [X31 + 0x100]
	0x03563078 STP X20, X19, [X31 + 0x110]
	0x0356307C ADRP X20, 0xE7C000
	0x03563080 LDRB W8, [X20 + 0xDCB]
	0x03563084 MOV W19, W1
	0x03563088 MOV X22, X0
	0x0356308C ADD X21, X31, 0x90
	0x03563090 TBNZ X8, 0x0, 0x35631B0
	0x03563094 ADRP X0, 0xB90000
	0x03563098 LDR X0, [X0 + 0x9C8]
	0x0356309C BL 0x1C16CF4
	0x035630A0 ADRP X0, 0xBD2000
	0x035630A4 LDR X0, [X0 + 0x8B0]
	0x035630A8 BL 0x1C16CF4
	0x035630AC ADRP X0, 0xBD2000
	0x035630B0 LDR X0, [X0 + 0x8B8]
	0x035630B4 BL 0x1C16CF4
	0x035630B8 ADRP X0, 0xBD2000
	0x035630BC LDR X0, [X0 + 0xAD8]
	0x035630C0 BL 0x1C16CF4
	0x035630C4 ADRP X0, 0xBD2000
	0x035630C8 LDR X0, [X0 + 0xAE0]
	0x035630CC BL 0x1C16CF4
	0x035630D0 ADRP X0, 0xBD2000
	0x035630D4 LDR X0, [X0 + 0x8C0]
	0x035630D8 BL 0x1C16CF4
	0x035630DC ADRP X0, 0xBD2000
	0x035630E0 LDR X0, [X0 + 0x8C8]
	0x035630E4 BL 0x1C16CF4
	0x035630E8 ADRP X0, 0xBD2000
	0x035630EC LDR X0, [X0 + 0x8D0]
	0x035630F0 BL 0x1C16CF4
	0x035630F4 ADRP X0, 0xBD2000
	0x035630F8 LDR X0, [X0 + 0xAE8]
	0x035630FC BL 0x1C16CF4
	0x03563100 ADRP X0, 0xBD2000
	0x03563104 LDR X0, [X0 + 0x8D8]
	0x03563108 BL 0x1C16CF4
	0x0356310C ADRP X0, 0xBD2000
	0x03563110 LDR X0, [X0 + 0x8E0]
	0x03563114 BL 0x1C16CF4
	0x03563118 ADRP X0, 0xBD2000
	0x0356311C LDR X0, [X0 + 0xAF0]
	0x03563120 BL 0x1C16CF4
	0x03563124 ADRP X0, 0xBD2000
	0x03563128 LDR X0, [X0 + 0x8E8]
	0x0356312C BL 0x1C16CF4
	0x03563130 ADRP X0, 0xB95000
	0x03563134 LDR X0, [X0 + 0x348]
	0x03563138 BL 0x1C16CF4
	0x0356313C ADRP X0, 0xBD2000
	0x03563140 LDR X0, [X0 + 0xAF8]
	0x03563144 BL 0x1C16CF4
	0x03563148 ADRP X0, 0xBD2000
	0x0356314C LDR X0, [X0 + 0x8F0]
	0x03563150 BL 0x1C16CF4
	0x03563154 ADRP X0, 0xBD2000
	0x03563158 LDR X0, [X0 + 0x8F8]
	0x0356315C BL 0x1C16CF4
	0x03563160 ADRP X0, 0xB94000
	0x03563164 LDR X0, [X0 + 0x7D8]
	0x03563168 BL 0x1C16CF4
	0x0356316C ADRP X0, 0xBD2000
	0x03563170 LDR X0, [X0 + 0xB00]
	0x03563174 BL 0x1C16CF4
	0x03563178 ADRP X0, 0xB94000
	0x0356317C LDR X0, [X0 + 0x7F0]
	0x03563180 BL 0x1C16CF4
	0x03563184 ADRP X0, 0xB94000
	0x03563188 LDR X0, [X0 + 0x808]
	0x0356318C BL 0x1C16CF4
	0x03563190 ADRP X0, 0xBD2000
	0x03563194 LDR X0, [X0 + 0xB08]
	0x03563198 BL 0x1C16CF4
	0x0356319C ADRP X0, 0xBD2000
	0x035631A0 LDR X0, [X0 + 0xB10]
	0x035631A4 BL 0x1C16CF4
	0x035631A8 MOVZ W8, 0x1
	0x035631AC STRB W8, [X20 + 0xDCB]
	0x035631B0 MOVI V0.2D, 0x0
	0x035631B4 STR X31, [X31 + 0xB0]
	0x035631B8 STR X31, [X31 + 0x80]
	0x035631BC STP X31, X31, [X31 + 0x40]
	0x035631C0 STR V0, [X21 + 0x1]
	0x035631C4 STR V0, [X31 + 0x9]
	0x035631C8 STP V0, V0, [X31 + 0x60]
	0x035631CC STR X31, [X31 + 0x50]
	0x035631D0 LDR X0, [X22 + 0x88]
	0x035631D4 STR X22, [X31 + 0x10]
	0x035631D8 CBZ X0, 0x3563618
	0x035631DC ADRP X8, 0xBD2000
	0x035631E0 LDR X8, [X8 + 0x8B0]
	0x035631E4 ADRP X27, 0xBD2000
	0x035631E8 ADRP X20, 0xBD2000
	0x035631EC ADRP X26, 0xBD2000
	0x035631F0 ADRP X25, 0xB94000
	0x035631F4 ADRP X28, 0xBD2000
	0x035631F8 ADRP X29, 0xBD2000
	0x035631FC LDR X27, [X27 + 0x8D0]
	0x03563200 LDR X20, [X20 + 0x8B8]
	0x03563204 LDR X26, [X26 + 0x8D8]
	0x03563208 LDR X25, [X25 + 0x7D8]
	0x0356320C LDR X28, [X28 + 0xAE8]
	0x03563210 LDR X29, [X29 + 0xAD8]
	0x03563214 LDR X1, [X8]
	0x03563218 ADD X8, X31, 0x18
	0x0356321C BL 0x2A13AB4
	0x03563220 LDUR V0, [X31 + 0x18]
	0x03563224 LDUR V1, [X31 + 0x28]
	0x03563228 LDR X8, [X31 + 0x38]
	0x0356322C STR V0, [X31 + 0x9]
	0x03563230 STR V1, [X21 + 0x1]
	0x03563234 STR X8, [X31 + 0xB0]
	0x03563238 LDR X1, [X27]
	0x0356323C ADD X0, X31, 0x90
	0x03563240 BL 0x2BF5330
	0x03563244 TBZ X0, 0x0, 0x3563438
	0x03563248 ADRP X8, 0xB94000
	0x0356324C LDR X21, [X31 + 0xA8]
	0x03563250 LDR X8, [X8 + 0x808]
	0x03563254 LDR X0, [X8]
	0x03563258 BL 0x1C16F10
	0x0356325C ADRP X8, 0xB94000
	0x03563260 LDR X8, [X8 + 0x7F0]
	0x03563264 MOV X22, X0
	0x03563268 LDR X1, [X8]
	0x0356326C BL 0x2F67714
	0x03563270 CBZ X21, 0x3563600
	0x03563274 LDR X1, [X20]
	0x03563278 ADD X8, X31, 0x18
	0x0356327C MOV X0, X21
	0x03563280 BL 0x29D395C
	0x03563284 LDUR V0, [X31 + 0x18]
	0x03563288 LDUR V1, [X31 + 0x28]
	0x0356328C LDR X8, [X31 + 0x38]
	0x03563290 STP V0, V1, [X31 + 0x60]
	0x03563294 STR X8, [X31 + 0x80]
	0x03563298 LDR X1, [X26]
	0x0356329C ADD X0, X31, 0x60
	0x035632A0 BL 0x2BEA018
	0x035632A4 TBZ X0, 0x0, 0x356333C
	0x035632A8 LDR X24, [X31 + 0x78]
	0x035632AC CBZ X24, 0x35633D8
	0x035632B0 LDR W8, [X24 + 0x90]
	0x035632B4 CMP W8, W19
	0x035632B8 B.NE 0x3563298
	0x035632BC LDR X8, [X24 + 0x40]
	0x035632C0 LDRB W23, [X31 + 0x70]
	0x035632C4 CBZ X8, 0x35632D8
	0x035632C8 LDR X0, [X8 + 0x40]
	0x035632CC LDR X1, [X8 + 0x28]
	0x035632D0 LDR X9, [X8 + 0x18]
	0x035632D4 BLR X9
	0x035632D8 MOV X0, X24
	0x035632DC BL 0x355C5D8
	0x035632E0 CBZ X22, 0x35633E0
	0x035632E4 LDR W10, [X22 + 0x1C]
	0x035632E8 LDR X8, [X22 + 0x10]
	0x035632EC LDR X9, [X25]
	0x035632F0 ADD W10, W10, 0x1
	0x035632F4 STR W10, [X22 + 0x1C]
	0x035632F8 CBZ X8, 0x35633E8
	0x035632FC LDRSW X10, [X22 + 0x18]
	0x03563300 LDR W11, [X8 + 0x18]
	0x03563304 CMP W10, W11
	0x03563308 B.CS 0x3563320
	0x0356330C ADD W9, W10, 0x1
	0x03563310 ADD X8, X8, X10
	0x03563314 STR W9, [X22 + 0x18]
	0x03563318 STRB W23, [X8 + 0x20]
	0x0356331C B 0x3563298
	0x03563320 LDR X8, [X9 + 0x20]
	0x03563324 LDR X8, [X8 + 0xC0]
	0x03563328 LDR X2, [X8 + 0x70]
	0x0356332C MOV X0, X22
	0x03563330 MOV W1, W23
	0x03563334 BL 0x2F67F0C
	0x03563338 B 0x3563298
	0x0356333C MOV X23, X31
	0x03563340 MOVZ W24, 0x6
	0x03563344 ADRP X8, 0xBD2000
	0x03563348 LDR X8, [X8 + 0x8C8]
	0x0356334C LDR X1, [X8]
	0x03563350 ADD X0, X31, 0x60
	0x03563354 BL 0x2BEA130
	0x03563358 CBNZ X23, 0x3563604
	0x0356335C CMP W24, 0x6
	0x03563360 B.EQ 0x3563368
	0x03563364 CBNZ W24, 0x3563530
	0x03563368 CBZ X22, 0x3563614
	0x0356336C ADRP X8, 0xBD2000
	0x03563370 LDR X8, [X8 + 0xB00]
	0x03563374 LDR X1, [X8]
	0x03563378 ADD X8, X31, 0x18
	0x0356337C MOV X0, X22
	0x03563380 BL 0x2F68AC0
	0x03563384 LDUR V0, [X31 + 0x18]
	0x03563388 LDR X8, [X31 + 0x28]
	0x0356338C STR V0, [X31 + 0x4]
	0x03563390 STR X8, [X31 + 0x50]
	0x03563394 LDR X1, [X28]
	0x03563398 ADD X0, X31, 0x40
	0x0356339C BL 0x2BB713C
	0x035633A0 TBZ X0, 0x0, 0x35633B8
	0x035633A4 LDRB W1, [X31 + 0x50]
	0x035633A8 LDR X2, [X29]
	0x035633AC MOV X0, X21
	0x035633B0 BL 0x29D4934
	0x035633B4 B 0x3563394
	0x035633B8 MOV X21, X31
	0x035633BC ADRP X8, 0xBD2000
	0x035633C0 LDR X8, [X8 + 0xAE0]
	0x035633C4 LDR X1, [X8]
	0x035633C8 ADD X0, X31, 0x40
	0x035633CC BL 0x2BB7138
	0x035633D0 CBZ X21, 0x3563238
	0x035633D4 B 0x356360C
	0x035633D8 BL 0x1C16F20
	0x035633DC B 0x356361C
	0x035633E0 BL 0x1C16F20
	0x035633E4 B 0x356361C
	0x035633E8 BL 0x1C16F20
	0x035633EC B 0x356361C
	0x035633F0 B 0x356341C
	0x035633F4 B 0x356341C
	0x035633F8 B 0x3563404
	0x035633FC B 0x356341C
	0x03563400 B 0x356341C
	0x03563404 CMP W1, 0x1
	0x03563408 B.NE 0x35635C8
	0x0356340C BL 0x3EB1AD0
	0x03563410 LDR X21, [X0]
	0x03563414 BL 0x3EB1AE0
	0x03563418 B 0x35633BC
	0x0356341C CMP W1, 0x1
	0x03563420 B.NE 0x3563590
	0x03563424 BL 0x3EB1AD0
	0x03563428 LDR X23, [X0]
	0x0356342C BL 0x3EB1AE0
	0x03563430 MOV W24, W31
	0x03563434 B 0x3563344
	0x03563438 ADRP X8, 0xBD2000
	0x0356343C LDR X8, [X8 + 0x8C0]
	0x03563440 ADD X0, X31, 0x90
	0x03563444 LDR X1, [X8]
	0x03563448 BL 0x2BF5448
	0x0356344C LDR X20, [X31 + 0x10]
	0x03563450 LDR X21, [X20 + 0x18]
	0x03563454 MOV X0, X20
	0x03563458 MOV W1, W19
	0x0356345C BL 0x3558864
	0x03563460 ADRP X8, 0xBD2000
	0x03563464 LDR X8, [X8 + 0xB10]
	0x03563468 ADRP X9, 0xBD2000
	0x0356346C MOV X1, X0
	0x03563470 MOV X3, X31
	0x03563474 LDR X8, [X8]
	0x03563478 LDR X9, [X9 + 0xB08]
	0x0356347C MOV X0, X8
	0x03563480 LDR X2, [X9]
	0x03563484 BL 0x32274B8
	0x03563488 ADRP X8, 0xB90000
	0x0356348C LDR X8, [X8 + 0x9C8]
	0x03563490 MOV X19, X0
	0x03563494 LDR X20, [X8]
	0x03563498 LDR X8, [X20 + 0x38]
	0x0356349C CBNZ X8, 0x35634AC
	0x035634A0 MOV X0, X20
	0x035634A4 BL 0x1C5C6E0
	0x035634A8 LDR X8, [X20 + 0x38]
	0x035634AC LDR X0, [X8 + 0x10]
	0x035634B0 LDRB W8, [X0 + 0x135]
	0x035634B4 TBNZ X8, 0x0, 0x35634BC
	0x035634B8 BL 0x1C5C684
	0x035634BC LDR W8, [X0 + 0xE0]
	0x035634C0 CBNZ W8, 0x35634C8
	0x035634C4 BL 0x1C16DFC
	0x035634C8 LDR X8, [X20 + 0x38]
	0x035634CC LDR X0, [X8 + 0x10]
	0x035634D0 LDRB W8, [X0 + 0x135]
	0x035634D4 TBNZ X8, 0x0, 0x35634DC
	0x035634D8 BL 0x1C5C684
	0x035634DC CBZ X21, 0x3563618
	0x035634E0 LDR X9, [X0 + 0xB8]
	0x035634E4 LDR X8, [X21]
	0x035634E8 ADRP X10, 0xB95000
	0x035634EC LDR X20, [X9]
	0x035634F0 LDRH W9, [X8 + 0x12E]
	0x035634F4 LDR X10, [X10 + 0x348]
	0x035634F8 LDR X1, [X10]
	0x035634FC CBZ X9, 0x3563520
	0x03563500 LDR X10, [X8 + 0xB0]
	0x03563504 ADD X10, X10, 0x8
	0x03563508 LDUR X11, [X10 - 0x8]
	0x0356350C CMP X11, X1
	0x03563510 B.EQ 0x3563548
	0x03563514 SUBS X9, X9, 0x1
	0x03563518 ADD X10, X10, 0x10
	0x0356351C B.NE 0x3563508
	0x03563520 MOVZ W2, 0x1
	0x03563524 MOV X0, X21
	0x03563528 BL 0x1C5C788
	0x0356352C B 0x3563558
	0x03563530 ADRP X8, 0xBD2000
	0x03563534 LDR X8, [X8 + 0x8C0]
	0x03563538 ADD X0, X31, 0x90
	0x0356353C LDR X1, [X8]
	0x03563540 BL 0x2BF5448
	0x03563544 B 0x3563570
	0x03563548 LDR W9, [X10]
	0x0356354C ADD W9, W9, 0x1
	0x03563550 ADD X8, X8, W9, 0x4, SXTW
	0x03563554 ADD X0, X8, 0x138
	0x03563558 LDP X8, X4, [X0]
	0x0356355C MOVZ W1, 0x3
	0x03563560 MOV X0, X21
	0x03563564 MOV X2, X19
	0x03563568 MOV X3, X20
	0x0356356C BLR X8
	0x03563570 LDP X20, X19, [X31 + 0x110]
	0x03563574 LDP X22, X21, [X31 + 0x100]
	0x03563578 LDP X24, X23, [X31 + 0xF0]
	0x0356357C LDP X26, X25, [X31 + 0xE0]
	0x03563580 LDP X28, X27, [X31 + 0xD0]
	0x03563584 LDP X29, X30, [X31 + 0xC0]
	0x03563588 ADD X31, X31, 0x120
	0x0356358C RET
	0x03563590 MOV X21, X1
	0x03563594 MOV X22, X0
	0x03563598 MOV X23, X31
	0x0356359C ADRP X8, 0xBD2000
	0x035635A0 LDR X8, [X8 + 0x8C8]
	0x035635A4 LDR X1, [X8]
	0x035635A8 ADD X0, X31, 0x60
	0x035635AC BL 0x2BEA130
	0x035635B0 LDR X20, [X31 + 0x10]
	0x035635B4 MOV X0, X22
	0x035635B8 MOV X1, X21
	0x035635BC CBZ X23, 0x356365C
	0x035635C0 MOV X0, X23
	0x035635C4 BL 0x1C16F18
	0x035635C8 MOV X22, X1
	0x035635CC MOV X23, X0
	0x035635D0 MOV X21, X31
	0x035635D4 ADRP X8, 0xBD2000
	0x035635D8 LDR X8, [X8 + 0xAE0]
	0x035635DC LDR X1, [X8]
	0x035635E0 ADD X0, X31, 0x40
	0x035635E4 BL 0x2BB7138
	0x035635E8 LDR X20, [X31 + 0x10]
	0x035635EC MOV X0, X23
	0x035635F0 MOV X1, X22
	0x035635F4 CBZ X21, 0x356365C
	0x035635F8 MOV X0, X21
	0x035635FC BL 0x1C16F18
	0x03563600 BL 0x1C16F20
	0x03563604 MOV X0, X23
	0x03563608 BL 0x1C16F18
	0x0356360C MOV X0, X21
	0x03563610 BL 0x1C16F18
	0x03563614 BL 0x1C16F20
	0x03563618 BL 0x1C16F20
	0x0356361C MOV X22, X1
	0x03563620 MOV X23, X0
	0x03563624 B 0x35635D4
	0x03563628 MOV X21, X1
	0x0356362C MOV X22, X0
	0x03563630 B 0x356359C
	0x03563634 B 0x3563658
	0x03563638 B 0x3563658
	0x0356363C B 0x3563658
	0x03563640 B 0x3563658
	0x03563644 B 0x3563658
	0x03563648 B 0x3563658
	0x0356364C B 0x3563658
	0x03563650 B 0x3563658
	0x03563654 B 0x3563658
	0x03563658 LDR X20, [X31 + 0x10]
	0x0356365C CMP W1, 0x1
	0x03563660 B.NE 0x3563690
	0x03563664 BL 0x3EB1AD0
	0x03563668 LDR X21, [X0]
	0x0356366C BL 0x3EB1AE0
	0x03563670 ADRP X8, 0xBD2000
	0x03563674 LDR X8, [X8 + 0x8C0]
	0x03563678 ADD X0, X31, 0x90
	0x0356367C LDR X1, [X8]
	0x03563680 BL 0x2BF5448
	0x03563684 CBZ X21, 0x3563450
	0x03563688 MOV X0, X21
	0x0356368C BL 0x1C16F18
	0x03563690 MOV X19, X0
	0x03563694 MOV X21, X31
	0x03563698 B 0x35636A0
	0x0356369C MOV X19, X0
	0x035636A0 ADRP X8, 0xBD2000
	0x035636A4 LDR X8, [X8 + 0x8C0]
	0x035636A8 LDR X1, [X8]
	0x035636AC ADD X0, X31, 0x90
	0x035636B0 BL 0x2BF5448
	0x035636B4 CBNZ X21, 0x35636C0
	0x035636B8 MOV X0, X19
	0x035636BC BL 0x1D2C690
	0x035636C0 MOV X0, X21
	0x035636C4 BL 0x1C16F18
	0x035636C8 BL 0x1990590
	0x035636CC SUB X31, X31, 0xC0
	0x035636D0 STR X30, [X31 + 0x80]
	0x035636D4 STP X24, X23, [X31 + 0x90]
	0x035636D8 STP X22, X21, [X31 + 0xA0]
	0x035636DC STP X20, X19, [X31 + 0xB0]
	0x035636E0 ADRP X22, 0xE7C000
	0x035636E4 LDRB W8, [X22 + 0xDCC]
	0x035636E8 MOV W20, W2
	0x035636EC MOV W19, W1
	0x035636F0 MOV X21, X0
	0x035636F4 TBNZ X8, 0x0, 0x35637B4
	0x035636F8 ADRP X0, 0xBD2000
	0x035636FC LDR X0, [X0 + 0x8B8]
	0x03563700 BL 0x1C16CF4
	0x03563704 ADRP X0, 0xBD2000
	0x03563708 LDR X0, [X0 + 0xAD8]
	0x0356370C BL 0x1C16CF4
	0x03563710 ADRP X0, 0xBD2000
	0x03563714 LDR X0, [X0 + 0xB18]
	0x03563718 BL 0x1C16CF4
	0x0356371C ADRP X0, 0xBD2000
	0x03563720 LDR X0, [X0 + 0xAE0]
	0x03563724 BL 0x1C16CF4
	0x03563728 ADRP X0, 0xBD2000
	0x0356372C LDR X0, [X0 + 0x8C8]
	0x03563730 BL 0x1C16CF4
	0x03563734 ADRP X0, 0xBD2000
	0x03563738 LDR X0, [X0 + 0xAE8]
	0x0356373C BL 0x1C16CF4
	0x03563740 ADRP X0, 0xBD2000
	0x03563744 LDR X0, [X0 + 0x8D8]
	0x03563748 BL 0x1C16CF4
	0x0356374C ADRP X0, 0xBD2000
	0x03563750 LDR X0, [X0 + 0x8E0]
	0x03563754 BL 0x1C16CF4
	0x03563758 ADRP X0, 0xBD2000
	0x0356375C LDR X0, [X0 + 0xAF0]
	0x03563760 BL 0x1C16CF4
	0x03563764 ADRP X0, 0xBD2000
	0x03563768 LDR X0, [X0 + 0xAF8]
	0x0356376C BL 0x1C16CF4
	0x03563770 ADRP X0, 0xBD2000
	0x03563774 LDR X0, [X0 + 0x8F8]
	0x03563778 BL 0x1C16CF4
	0x0356377C ADRP X0, 0xB94000
	0x03563780 LDR X0, [X0 + 0x7D8]
	0x03563784 BL 0x1C16CF4
	0x03563788 ADRP X0, 0xBD2000
	0x0356378C LDR X0, [X0 + 0xB00]
	0x03563790 BL 0x1C16CF4
	0x03563794 ADRP X0, 0xB94000
	0x03563798 LDR X0, [X0 + 0x7F0]
	0x0356379C BL 0x1C16CF4
	0x035637A0 ADRP X0, 0xB94000
	0x035637A4 LDR X0, [X0 + 0x808]
	0x035637A8 BL 0x1C16CF4
	0x035637AC MOVZ W8, 0x1
	0x035637B0 STRB W8, [X22 + 0xDCC]
	0x035637B4 MOVI V0.2D, 0x0
	0x035637B8 STR X31, [X31 + 0x70]
	0x035637BC STP X31, X31, [X31 + 0x30]
	0x035637C0 STR X31, [X31 + 0x40]
	0x035637C4 STP V0, V0, [X31 + 0x50]
	0x035637C8 STR X31, [X31 + 0x88]
	0x035637CC LDR X0, [X21 + 0x88]
	0x035637D0 CBZ X0, 0x35639AC
	0x035637D4 ADRP X8, 0xBD2000
	0x035637D8 LDR X8, [X8 + 0xB18]
	0x035637DC ADD X2, X31, 0x88
	0x035637E0 MOV W1, W20
	0x035637E4 LDR X3, [X8]
	0x035637E8 BL 0x2A150AC
	0x035637EC TBZ X0, 0x0, 0x3563984
	0x035637F0 ADRP X8, 0xB94000
	0x035637F4 LDR X8, [X8 + 0x808]
	0x035637F8 LDR X0, [X8]
	0x035637FC BL 0x1C16F10
	0x03563800 ADRP X8, 0xB94000
	0x03563804 LDR X8, [X8 + 0x7F0]
	0x03563808 MOV X20, X0
	0x0356380C LDR X1, [X8]
	0x03563810 BL 0x2F67714
	0x03563814 LDR X0, [X31 + 0x88]
	0x03563818 CBZ X0, 0x35639AC
	0x0356381C ADRP X8, 0xBD2000
	0x03563820 LDR X8, [X8 + 0x8B8]
	0x03563824 LDR X1, [X8]
	0x03563828 ADD X8, X31, 0x8
	0x0356382C BL 0x29D395C
	0x03563830 LDUR V0, [X31 + 0x8]
	0x03563834 LDUR V1, [X31 + 0x18]
	0x03563838 LDR X8, [X31 + 0x28]
	0x0356383C ADRP X23, 0xBD2000
	0x03563840 LDR X23, [X23 + 0x8D8]
	0x03563844 STP V0, V1, [X31 + 0x50]
	0x03563848 STR X8, [X31 + 0x70]
	0x0356384C ADRP X24, 0xB94000
	0x03563850 LDR X24, [X24 + 0x7D8]
	0x03563854 LDR X1, [X23]
	0x03563858 ADD X0, X31, 0x50
	0x0356385C BL 0x2BEA018
	0x03563860 TBZ X0, 0x0, 0x35638F8
	0x03563864 LDR X22, [X31 + 0x68]
	0x03563868 CBZ X22, 0x35639A0
	0x0356386C LDR W8, [X22 + 0x90]
	0x03563870 CMP W8, W19
	0x03563874 B.NE 0x3563854
	0x03563878 LDR X8, [X22 + 0x40]
	0x0356387C LDRB W21, [X31 + 0x60]
	0x03563880 CBZ X8, 0x3563894
	0x03563884 LDR X0, [X8 + 0x40]
	0x03563888 LDR X1, [X8 + 0x28]
	0x0356388C LDR X9, [X8 + 0x18]
	0x03563890 BLR X9
	0x03563894 MOV X0, X22
	0x03563898 BL 0x355C5D8
	0x0356389C CBZ X20, 0x35639A4
	0x035638A0 LDR W10, [X20 + 0x1C]
	0x035638A4 LDR X8, [X20 + 0x10]
	0x035638A8 LDR X9, [X24]
	0x035638AC ADD W10, W10, 0x1
	0x035638B0 STR W10, [X20 + 0x1C]
	0x035638B4 CBZ X8, 0x35639A8
	0x035638B8 LDRSW X10, [X20 + 0x18]
	0x035638BC LDR W11, [X8 + 0x18]
	0x035638C0 CMP W10, W11
	0x035638C4 B.CS 0x35638DC
	0x035638C8 ADD W9, W10, 0x1
	0x035638CC ADD X8, X8, X10
	0x035638D0 STR W9, [X20 + 0x18]
	0x035638D4 STRB W21, [X8 + 0x20]
	0x035638D8 B 0x3563854
	0x035638DC LDR X8, [X9 + 0x20]
	0x035638E0 LDR X8, [X8 + 0xC0]
	0x035638E4 LDR X2, [X8 + 0x70]
	0x035638E8 MOV X0, X20
	0x035638EC MOV W1, W21
	0x035638F0 BL 0x2F67F0C
	0x035638F4 B 0x3563854
	0x035638F8 ADRP X8, 0xBD2000
	0x035638FC LDR X8, [X8 + 0x8C8]
	0x03563900 ADD X0, X31, 0x50
	0x03563904 LDR X1, [X8]
	0x03563908 BL 0x2BEA130
	0x0356390C CBZ X20, 0x35639AC
	0x03563910 ADRP X8, 0xBD2000
	0x03563914 LDR X8, [X8 + 0xB00]
	0x03563918 MOV X0, X20
	0x0356391C LDR X1, [X8]
	0x03563920 ADD X8, X31, 0x8
	0x03563924 BL 0x2F68AC0
	0x03563928 LDUR V0, [X31 + 0x8]
	0x0356392C LDR X8, [X31 + 0x18]
	0x03563930 ADRP X19, 0xBD2000
	0x03563934 LDR X19, [X19 + 0xAE8]
	0x03563938 STR V0, [X31 + 0x3]
	0x0356393C STR X8, [X31 + 0x40]
	0x03563940 ADRP X20, 0xBD2000
	0x03563944 LDR X20, [X20 + 0xAD8]
	0x03563948 LDR X1, [X19]
	0x0356394C ADD X0, X31, 0x30
	0x03563950 BL 0x2BB713C
	0x03563954 TBZ X0, 0x0, 0x3563970
	0x03563958 LDR X0, [X31 + 0x88]
	0x0356395C CBZ X0, 0x356399C
	0x03563960 LDRB W1, [X31 + 0x40]
	0x03563964 LDR X2, [X20]
	0x03563968 BL 0x29D4934
	0x0356396C B 0x3563948
	0x03563970 ADRP X8, 0xBD2000
	0x03563974 LDR X8, [X8 + 0xAE0]
	0x03563978 ADD X0, X31, 0x30
	0x0356397C LDR X1, [X8]
	0x03563980 BL 0x2BB7138
	0x03563984 LDP X20, X19, [X31 + 0xB0]
	0x03563988 LDP X22, X21, [X31 + 0xA0]
	0x0356398C LDP X24, X23, [X31 + 0x90]
	0x03563990 LDR X30, [X31 + 0x80]
	0x03563994 ADD X31, X31, 0xC0
	0x03563998 RET
	0x0356399C BL 0x1C16F20
	0x035639A0 BL 0x1C16F20
	0x035639A4 BL 0x1C16F20
	0x035639A8 BL 0x1C16F20
	0x035639AC BL 0x1C16F20
	0x035639B0 B 0x35639C8
	0x035639B4 B 0x35639C8
	0x035639B8 B 0x35639C8
	0x035639BC B 0x35639C8
	0x035639C0 B 0x3563A30
	0x035639C4 B 0x3563A30
	0x035639C8 MOV X19, X0
	0x035639CC CMP W1, 0x1
	0x035639D0 B.NE 0x3563A04
	0x035639D4 MOV X0, X19
	0x035639D8 BL 0x3EB1AD0
	0x035639DC LDR X21, [X0]
	0x035639E0 BL 0x3EB1AE0
	0x035639E4 ADRP X8, 0xBD2000
	0x035639E8 LDR X8, [X8 + 0x8C8]
	0x035639EC ADD X0, X31, 0x50
	0x035639F0 LDR X1, [X8]
	0x035639F4 BL 0x2BEA130
	0x035639F8 CBZ X21, 0x356390C
	0x035639FC MOV X0, X21
	0x03563A00 BL 0x1C16F18
	0x03563A04 MOV X21, X31
	0x03563A08 B 0x3563A10
	0x03563A0C MOV X19, X0
	0x03563A10 ADRP X8, 0xBD2000
	0x03563A14 LDR X8, [X8 + 0x8C8]
	0x03563A18 LDR X1, [X8]
	0x03563A1C ADD X0, X31, 0x50
	0x03563A20 BL 0x2BEA130
	0x03563A24 CBZ X21, 0x3563A90
	0x03563A28 MOV X0, X21
	0x03563A2C BL 0x1C16F18
	0x03563A30 MOV X19, X0
	0x03563A34 CMP W1, 0x1
	0x03563A38 B.NE 0x3563A6C
	0x03563A3C MOV X0, X19
	0x03563A40 BL 0x3EB1AD0
	0x03563A44 LDR X20, [X0]
	0x03563A48 BL 0x3EB1AE0
	0x03563A4C ADRP X8, 0xBD2000
	0x03563A50 LDR X8, [X8 + 0xAE0]
	0x03563A54 ADD X0, X31, 0x30
	0x03563A58 LDR X1, [X8]
	0x03563A5C BL 0x2BB7138
	0x03563A60 CBZ X20, 0x3563984
	0x03563A64 MOV X0, X20
	0x03563A68 BL 0x1C16F18
	0x03563A6C MOV X20, X31
	0x03563A70 B 0x3563A78
	0x03563A74 MOV X19, X0
	0x03563A78 ADRP X8, 0xBD2000
	0x03563A7C LDR X8, [X8 + 0xAE0]
	0x03563A80 LDR X1, [X8]
	0x03563A84 ADD X0, X31, 0x30
	0x03563A88 BL 0x2BB7138
	0x03563A8C CBNZ X20, 0x3563A98
	0x03563A90 MOV X0, X19
	0x03563A94 BL 0x1D2C690
	0x03563A98 MOV X0, X20
	0x03563A9C BL 0x1C16F18
	0x03563AA0 BL 0x1990590
	0x03563AA4 SUB X31, X31, 0x40
	0x03563AA8 STP X30, X21, [X31 + 0x20]
	0x03563AAC STP X20, X19, [X31 + 0x30]
	0x03563AB0 ADRP X21, 0xE7C000
	0x03563AB4 LDRB W8, [X21 + 0xDCD]
	0x03563AB8 MOV W19, W1
	0x03563ABC MOV X20, X0
	0x03563AC0 TBNZ X8, 0x0, 0x3563B08
	0x03563AC4 ADRP X0, 0xBD2000
	0x03563AC8 LDR X0, [X0 + 0x890]
	0x03563ACC BL 0x1C16CF4
	0x03563AD0 ADRP X0, 0xBD2000
	0x03563AD4 LDR X0, [X0 + 0xB20]
	0x03563AD8 BL 0x1C16CF4
	0x03563ADC ADRP X0, 0xBD2000
	0x03563AE0 LDR X0, [X0 + 0xB28]
	0x03563AE4 BL 0x1C16CF4
	0x03563AE8 ADRP X0, 0xBD2000
	0x03563AEC LDR X0, [X0 + 0xB30]
	0x03563AF0 BL 0x1C16CF4
	0x03563AF4 ADRP X0, 0xBD2000
	0x03563AF8 LDR X0, [X0 + 0xB38]
	0x03563AFC BL 0x1C16CF4
	0x03563B00 MOVZ W8, 0x1
	0x03563B04 STRB W8, [X21 + 0xDCD]
	0x03563B08 STP X31, X31, [X31 + 0x10]
	0x03563B0C STP X31, X31, [X31]
	0x03563B10 LDR X0, [X20 + 0x80]
	0x03563B14 CBZ X0, 0x3563BA8
	0x03563B18 ADRP X8, 0xBD2000
	0x03563B1C LDR X8, [X8 + 0x890]
	0x03563B20 ADD X2, X31, 0x18
	0x03563B24 MOV W1, W19
	0x03563B28 LDR X3, [X8]
	0x03563B2C BL 0x2A150AC
	0x03563B30 TBZ X0, 0x0, 0x3563B94
	0x03563B34 LDR X0, [X31 + 0x18]
	0x03563B38 CBZ X0, 0x3563BA8
	0x03563B3C ADRP X8, 0xBD2000
	0x03563B40 LDR X8, [X8 + 0xB38]
	0x03563B44 LDR X1, [X8]
	0x03563B48 ADD X8, X31, 0x0
	0x03563B4C BL 0x301CB58
	0x03563B50 ADRP X19, 0xBD2000

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 816
	014 Move X25, 0xE7E000
	015 Move W8, [X25+3526]
	016 Move X22, X5
	017 Move W20, W4
	018 Move W24, W3
	019 Move X19, X2
	020 Move X23, X1
	021 Move X21, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {145}
	026 Move X0, 0xB96000
	027 Move X0, [X0+2808]
	028 Call 0x1C17CF4
	029 Move X0, 0xBD4000
	030 Move X0, [X0+2472]
	031 Call 0x1C17CF4
	032 Move X0, 0xB92000
	033 Move X0, [X0+2504]
	034 Call 0x1C17CF4
	035 Move X0, 0xBD4000
	036 Move X0, [X0+2480]
	037 Call 0x1C17CF4
	038 Move X0, 0xBD4000
	039 Move X0, [X0+2488]
	040 Call 0x1C17CF4
	041 Move X0, 0xBD4000
	042 Move X0, [X0+2496]
	043 Call 0x1C17CF4
	044 Move X0, 0xBD4000
	045 Move X0, [X0+2504]
	046 Call 0x1C17CF4
	047 Move X0, 0xBD4000
	048 Move X0, [X0+2512]
	049 Call 0x1C17CF4
	050 Move X0, 0xBD4000
	051 Move X0, [X0+2520]
	052 Call 0x1C17CF4
	053 Move X0, 0xBD4000
	054 Move X0, [X0+2528]
	055 Call 0x1C17CF4
	056 Move X0, 0xBD4000
	057 Move X0, [X0+2536]
	058 Call 0x1C17CF4
	059 Move X0, 0xBD4000
	060 Move X0, [X0+2544]
	061 Call 0x1C17CF4
	062 Move X0, 0xBD4000
	063 Move X0, [X0+2552]
	064 Call 0x1C17CF4
	065 Move X0, 0xBD4000
	066 Move X0, [X0+2560]
	067 Call 0x1C17CF4
	068 Move X0, 0xBD4000
	069 Move X0, [X0+2568]
	070 Call 0x1C17CF4
	071 Move X0, 0xBD4000
	072 Move X0, [X0+2576]
	073 Call 0x1C17CF4
	074 Move X0, 0xBD4000
	075 Move X0, [X0+2584]
	076 Call 0x1C17CF4
	077 Move X0, 0xB97000
	078 Move X0, [X0+840]
	079 Call 0x1C17CF4
	080 Move X0, 0xBD4000
	081 Move X0, [X0+2080]
	082 Call 0x1C17CF4
	083 Move X0, 0xBD4000
	084 Move X0, [X0+2592]
	085 Call 0x1C17CF4
	086 Move X0, 0xBD4000
	087 Move X0, [X0+2600]
	088 Call 0x1C17CF4
	089 Move X0, 0xB92000
	090 Move X0, [X0+2512]
	091 Call 0x1C17CF4
	092 Move X0, 0xBD4000
	093 Move X0, [X0+2608]
	094 Call 0x1C17CF4
	095 Move X0, 0xBD4000
	096 Move X0, [X0+2616]
	097 Call 0x1C17CF4
	098 Move X0, 0xBD4000
	099 Move X0, [X0+2624]
	100 Call 0x1C17CF4
	101 Move X0, 0xBD4000
	102 Move X0, [X0+2632]
	103 Call 0x1C17CF4
	104 Move X0, 0xBD4000
	105 Move X0, [X0+2640]
	106 Call 0x1C17CF4
	107 Move X0, 0xBD4000
	108 Move X0, [X0+2648]
	109 Call 0x1C17CF4
	110 Move X0, 0xBD4000
	111 Move X0, [X0+2656]
	112 Call 0x1C17CF4
	113 Move X0, 0xBD4000
	114 Move X0, [X0+2664]
	115 Call 0x1C17CF4
	116 Move X0, 0xBD4000
	117 Move X0, [X0+2672]
	118 Call 0x1C17CF4
	119 Move X0, 0xBD4000
	120 Move X0, [X0+2680]
	121 Call 0x1C17CF4
	122 Move X0, 0xBD4000
	123 Move X0, [X0+2688]
	124 Call 0x1C17CF4
	125 Move X0, 0xBD4000
	126 Move X0, [X0+2696]
	127 Call 0x1C17CF4
	128 Move X0, 0xBD4000
	129 Move X0, [X0+2704]
	130 Call 0x1C17CF4
	131 Move X0, 0xBD4000
	132 Move X0, [X0+2712]
	133 Call 0x1C17CF4
	134 Move X0, 0xBD4000
	135 Move X0, [X0+2720]
	136 Call 0x1C17CF4
	137 Move X0, 0xBD4000
	138 Move X0, [X0+2728]
	139 Call 0x1C17CF4
	140 Move X0, 0xBD4000
	141 Move X0, [X0+2736]
	142 Call 0x1C17CF4
	143 Move W8, 1
	144 Move [X25+3526], W8
	145 Move X28, 0xBD4000
	146 Move X28, [X28+2568]
	147 Compare W24, 0
	148 JumpIfNotEqual {162}
	149 Move X1, [X28]
	150 Move X0, X19
	151 Call 0x1C17E00
	152 Compare X0, 0
	153 JumpIfNotEqual {161}
	154 Move X8, 0xBD4000
	155 Move X8, [X8+2584]
	156 Move X0, X19
	157 Move X1, [X8]
	158 Call 0x1C17E00
	159 Compare X0, 0
	160 JumpIfEqual {649}
	161 Move W24, 2
	162 Move X8, [X22]
	163 Compare X8, 0
	164 JumpIfNotEqual {198}
	165 NotImplemented "Instruction CMP not yet implemented."
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X8, 0xBD4000
	168 Move X0, [X21+24]
	169 Move V2, [X23+16]
	170 Move V0, [X23+32]
	171 Move V1, [X23]
	172 Move X8, [X8+2616]
	173 Add X1, X31, 768
	174 Move [X31+704], V2
	175 Move [X31+712], V0
	176 Move [X31+43], V1
	177 Move X2, [X8]
	178 Move [X31+768], V1
	179 Move [X31+776], V2
	180 Move [X31+50], V0
	181 Call Platform.CreateDefaultAudioEncoder, X0, X1
	182 Move X8, 0xBD4000
	183 Move X0, [X21+24]
	184 Move V2, [X23+16]
	185 Move V0, [X23+32]
	186 Move V1, [X23]
	187 Move X8, [X8+2608]
	188 Add X1, X31, 768
	189 Move [X31+656], V2
	190 Move [X31+664], V0
	191 Move [X31+40], V1
	192 Move X2, [X8]
	193 Move [X31+768], V1
	194 Move [X31+776], V2
	195 Move [X31+50], V0
	196 Call 0x22308E4, X0, X1
	197 Move [X22], X0
	198 Move X1, [X28]
	199 Move X0, X19
	200 Call 0x1C17E00
	201 Compare X0, 0
	202 JumpIfEqual {263}
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move X8, 0xBD4000
	205 Move X8, [X8+2632]
	206 Move X0, [X8]
	207 Call 0x1C17F10
	208 Move X1, X31
	209 Move X24, X0
	210 Call Object..ctor, X0
	211 Move X8, 0xB92000
	212 Move X8, [X8+2504]
	213 Move X25, [X21+24]
	214 Move X26, [X8]
	215 Move X8, [X26+56]
	216 Compare X8, 0
	217 JumpIfNotEqual {221}
	218 Move X0, X26
	219 Call 0x1C5D6E0
	220 Move X8, [X26+56]
	221 Move X0, [X8+16]
	222 Move W8, [X0+309]
	223 Move TEMP, X8
	224 And TEMP, TEMP, 1
	225 Compare TEMP, 1
	226 JumpIfEqual {228}
	227 Call 0x1C5D684
	228 Move W8, [X0+224]
	229 Compare W8, 0
	230 JumpIfNotEqual {232}
	231 Call 0x1C17DFC
	232 Move X8, [X26+56]
	233 Move X0, [X8+16]
	234 Move W8, [X0+309]
	235 Move TEMP, X8
	236 And TEMP, TEMP, 1
	237 Compare TEMP, 1
	238 JumpIfEqual {240}
	239 Call 0x1C5D684
	240 Compare X25, 0
	241 JumpIfEqual {1111}
	242 Move X10, 0xB97000
	243 Move X11, 0xBD4000
	244 Move X9, [X0+184]
	245 Move X10, [X10+840]
	246 Move X8, [X25]
	247 Move X11, [X11+2720]
	248 Move X26, [X9]
	249 Move X1, [X10]
	250 NotImplemented "Instruction LDRH not yet implemented."
	251 Move X27, [X11]
	252 Compare X9, 0
	253 JumpIfEqual {260}
	254 Move X10, [X8+176]
	255 Add X10, X10, 8
	256 NotImplemented "Instruction LDUR not yet implemented."
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Subtract X9, X9, 1
	259 Add X10, X10, 16
	260 Move W2, 1
	261 Move X0, X25
	262 Call 0x1C5D788
	263 Move X28, 0xBD4000
	264 Move X28, [X28+2560]
	265 Move X0, X19
	266 Move X1, [X28]
	267 Call 0x1C17E00
	268 Compare X0, 0
	269 JumpIfEqual {409}
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Move X8, 0xBD4000
	272 Move X8, [X8+2664]
	273 Move X0, [X8]
	274 Call 0x1C17F10
	275 Move X1, X31
	276 Move X24, X0
	277 Call Object..ctor, X0
	278 Move X8, 0xB92000
	279 Move X8, [X8+2504]
	280 Move X25, [X21+24]
	281 Move X26, [X8]
	282 Move X8, [X26+56]
	283 Compare X8, 0
	284 JumpIfNotEqual {288}
	285 Move X0, X26
	286 Call 0x1C5D6E0
	287 Move X8, [X26+56]
	288 Move X0, [X8+16]
	289 Move W8, [X0+309]
	290 Move TEMP, X8
	291 And TEMP, TEMP, 1
	292 Compare TEMP, 1
	293 JumpIfEqual {295}
	294 Call 0x1C5D684
	295 Move W8, [X0+224]
	296 Compare W8, 0
	297 JumpIfNotEqual {299}
	298 Call 0x1C17DFC
	299 Move X8, [X26+56]
	300 Move X0, [X8+16]
	301 Move W8, [X0+309]
	302 Move TEMP, X8
	303 And TEMP, TEMP, 1
	304 Compare TEMP, 1
	305 JumpIfEqual {307}
	306 Call 0x1C5D684
	307 Compare X25, 0
	308 JumpIfEqual {1111}
	309 Move X10, 0xB96000
	310 Move X11, 0xBD3000
	311 Move X9, [X0+184]
	312 Move X10, [X10+840]
	313 Move X8, [X25]
	314 Move X11, [X11+2712]
	315 Move X26, [X9]
	316 Move X1, [X10]
	317 NotImplemented "Instruction LDRH not yet implemented."
	318 Move X27, [X11]
	319 Compare X9, 0
	320 JumpIfEqual {327}
	321 Move X10, [X8+176]
	322 Add X10, X10, 8
	323 NotImplemented "Instruction LDUR not yet implemented."
	324 NotImplemented "Instruction CMP not yet implemented."
	325 Subtract X9, X9, 1
	326 Add X10, X10, 16
	327 Move W2, 1
	328 Move X0, X25
	329 Call 0x1C5D788
	330 Move X8, 0xBD3000
	331 Move X8, [X8+2648]
	332 Move X0, [X8]
	333 Call 0x1C17F10
	334 Move X1, X31
	335 Move X24, X0
	336 Call Object..ctor, X0
	337 Move V1, [X23+16]
	338 Move V0, [X23+32]
	339 Move V2, [X23]
	340 Move X8, 0xBD3000
	341 Add X1, X31, 768
	342 Move [X31+528], V1
	343 Move [X31+536], V0
	344 Move [X31+32], V2
	345 Move V0, [X22]
	346 Move V1, [X22+16]
	347 Move X8, [X8+2696]
	348 Move V2, [X31+512]
	349 Move V3, [X31+528]
	350 Add X4, X31, 736
	351 Move [X31+480], V0
	352 Move [X31+488], V1
	353 Move V0, [X31+34]
	354 Move [X31+768], V2
	355 Move [X31+776], V3
	356 Move V1, [X31+480]
	357 Move V2, [X31+496]
	358 Move X5, [X8]
	359 Move X0, X21
	360 Move X2, X19
	361 Move W3, W20
	362 Move [X31+50], V0
	363 Move [X31+736], V1
	364 Move [X31+744], V2
	365 Call VoiceClient.CreateLocalVoiceAudio, X0, X1, X2, X3, X4
	366 Compare X24, 0
	367 JumpIfEqual {1111}
	368 Move [X24+16], X0
	369 Move X8, 0xB95000
	370 Move X8, [X8+2808]
	371 Move X0, [X8]
	372 Call 0x1C17F10
	373 Move X8, 0xBD3000
	374 Move X8, [X8+2640]
	375 Move X1, X24
	376 Move X3, X31
	377 Move X20, X0
	378 Move X2, [X8]
	379 Call Action`1<Object>..ctor, X0, X1, X2
	380 Move X8, [X24+16]
	381 Compare X8, 0
	382 JumpIfEqual {1111}
	383 Compare X19, 0
	384 JumpIfEqual {1111}
	385 Move X22, [X28]
	386 Move X21, [X8+312]
	387 Move X0, X19
	388 Move X1, X22
	389 Call 0x1C17E00
	390 Compare X0, 0
	391 JumpIfEqual {1112}
	392 Move X23, [X28]
	393 Move X0, X19
	394 Move X1, X23
	395 Call 0x1C17E00
	396 Compare X0, 0
	397 JumpIfEqual {1115}
	398 Move X8, [X0]
	399 Move X22, X0
	400 NotImplemented "Instruction LDRH not yet implemented."
	401 Compare X9, 0
	402 JumpIfEqual {548}
	403 Move X10, [X8+176]
	404 Add X10, X10, 8
	405 NotImplemented "Instruction LDUR not yet implemented."
	406 NotImplemented "Instruction CMP not yet implemented."
	407 Subtract X9, X9, 1
	408 Add X10, X10, 16
	409 Move X27, 0xBD3000
	410 Move X27, [X27+2584]
	411 Move X0, X19
	412 Move X1, [X27]
	413 Call 0x1C17E00
	414 Compare X0, 0
	415 JumpIfEqual {664}
	416 NotImplemented "Instruction CMP not yet implemented."
	417 Move X8, 0xB91000
	418 Move X8, [X8+2504]
	419 Move X24, [X21+24]
	420 Move X25, [X8]
	421 Move X8, [X25+56]
	422 Compare X8, 0
	423 JumpIfNotEqual {427}
	424 Move X0, X25
	425 Call 0x1C5D6E0
	426 Move X8, [X25+56]
	427 Move X0, [X8+16]
	428 Move W8, [X0+309]
	429 Move TEMP, X8
	430 And TEMP, TEMP, 1
	431 Compare TEMP, 1
	432 JumpIfEqual {434}
	433 Call 0x1C5D684
	434 Move W8, [X0+224]
	435 Compare W8, 0
	436 JumpIfNotEqual {438}
	437 Call 0x1C17DFC
	438 Move X8, [X25+56]
	439 Move X0, [X8+16]
	440 Move W8, [X0+309]
	441 Move TEMP, X8
	442 And TEMP, TEMP, 1
	443 Compare TEMP, 1
	444 JumpIfEqual {446}
	445 Call 0x1C5D684
	446 Compare X24, 0
	447 JumpIfEqual {1111}
	448 Move X10, 0xB96000
	449 Move X11, 0xBD3000
	450 Move X9, [X0+184]
	451 Move X10, [X10+840]
	452 Move X8, [X24]
	453 Move X11, [X11+2704]
	454 Move X25, [X9]
	455 Move X1, [X10]
	456 NotImplemented "Instruction LDRH not yet implemented."
	457 Move X26, [X11]
	458 Compare X9, 0
	459 JumpIfEqual {466}
	460 Move X10, [X8+176]
	461 Add X10, X10, 8
	462 NotImplemented "Instruction LDUR not yet implemented."
	463 NotImplemented "Instruction CMP not yet implemented."
	464 Subtract X9, X9, 1
	465 Add X10, X10, 16
	466 Move W2, 1
	467 Move X0, X24
	468 Call 0x1C5D788
	469 Move X8, 0xBD3000
	470 Move X8, [X8+2680]
	471 Move X0, [X8]
	472 Call 0x1C17F10
	473 Move X1, X31
	474 Move X24, X0
	475 Call Object..ctor, X0
	476 Move V1, [X23+16]
	477 Move V0, [X23+32]
	478 Move V2, [X23]
	479 Move X8, 0xBD3000
	480 Add X1, X31, 768
	481 Move [X31+368], V1
	482 Move [X31+376], V0
	483 Move [X31+22], V2
	484 Move V0, [X22]
	485 Move V1, [X22+16]
	486 Move X8, [X8+2688]
	487 Move V2, [X31+352]
	488 Move V3, [X31+368]
	489 Add X4, X31, 736
	490 Move [X31+320], V0
	491 Move [X31+328], V1
	492 Move V0, [X31+24]
	493 Move [X31+768], V2
	494 Move [X31+776], V3
	495 Move V1, [X31+320]
	496 Move V2, [X31+336]
	497 Move X5, [X8]
	498 Move X0, X21
	499 Move X2, X19
	500 Move W3, W20
	501 Move [X31+50], V0
	502 Move [X31+736], V1
	503 Move [X31+744], V2
	504 Call 0x22AC250, X0, X1, X2, X3, X4
	505 Compare X24, 0
	506 JumpIfEqual {1111}
	507 Move [X24+16], X0
	508 Move X8, 0xBD3000
	509 Move X8, [X8+2472]
	510 Move X0, [X8]
	511 Call 0x1C17F10
	512 Move X8, 0xBD3000
	513 Move X8, [X8+2672]
	514 Move X1, X24
	515 Move X3, X31
	516 Move X20, X0
	517 Move X2, [X8]
	518 Call Action`1<Object>..ctor, X0, X1, X2
	519 Move X8, [X24+16]
	520 Compare X8, 0
	521 JumpIfEqual {1111}
	522 Compare X19, 0
	523 JumpIfEqual {1111}
	524 Move X22, [X28]
	525 Move X21, [X8+312]
	526 Move X0, X19
	527 Move X1, X22
	528 Call 0x1C17E00
	529 Compare X0, 0
	530 JumpIfEqual {1112}
	531 Move X23, [X28]
	532 Move X0, X19
	533 Move X1, X23
	534 Call 0x1C17E00
	535 Compare X0, 0
	536 JumpIfEqual {1115}
	537 Move X8, [X0]
	538 Move X22, X0
	539 NotImplemented "Instruction LDRH not yet implemented."
	540 Compare X9, 0
	541 JumpIfEqual {548}
	542 Move X10, [X8+176]
	543 Add X10, X10, 8
	544 NotImplemented "Instruction LDUR not yet implemented."
	545 NotImplemented "Instruction CMP not yet implemented."
	546 Subtract X9, X9, 1
	547 Add X10, X10, 16
	548 Move X0, X22
	549 Move X1, X23
	550 Move W2, W31
	551 Call 0x1C5D788
	552 NotImplemented "Instruction LDRSW not yet implemented."
	553 Add X8, X8, X9
	554 Add X0, X8, 312
	555 Move X8, [X0]
	556 Move X3, [X0+8]
	557 Move X0, X22
	558 Move X1, X20
	559 Move X2, X21
	560 Move W9, [X10]
	561 Add W9, W9, 1
	562 Add X8, X8, W9
	563 Add X0, X8, 312
	564 Move X8, [X0]
	565 Move X4, [X0+8]
	566 Move W1, 3
	567 Move X0, X25
	568 Move X2, X27
	569 Move X3, X26
	570 NotImplemented "Instruction BLR not yet implemented."
	571 Move V1, [X23+16]
	572 Move V0, [X23+32]
	573 Move V2, [X23]
	574 Move X8, 0xBD3000
	575 Add X1, X31, 768
	576 Move [X31+608], V1
	577 Move [X31+616], V0
	578 Move [X31+37], V2
	579 Move V0, [X22]
	580 Move V1, [X22+16]
	581 Move X8, [X8+2688]
	582 Move V2, [X31+592]
	583 Move V3, [X31+608]
	584 Add X4, X31, 736
	585 Move [X31+560], V0
	586 Move [X31+568], V1
	587 Move V0, [X31+39]
	588 Move [X31+768], V2
	589 Move [X31+776], V3
	590 Move V1, [X31+560]
	591 Move V2, [X31+576]
	592 Move X5, [X8]
	593 Move X0, X21
	594 Move X2, X19
	595 Move W3, W20
	596 Move [X31+50], V0
	597 Move [X31+736], V1
	598 Move [X31+744], V2
	599 Call 0x22AC250, X0, X1, X2, X3, X4
	600 Compare X24, 0
	601 JumpIfEqual {1111}
	602 Move [X24+16], X0
	603 Move X8, 0xBD3000
	604 Move X8, [X8+2544]
	605 Move X0, [X8]
	606 Call 0x1C17F10
	607 Move X8, 0xBD3000
	608 Move X8, [X8+2536]
	609 Move W1, W31
	610 Move X20, X0
	611 Move X2, [X8]
	612 Call FactoryReusableArray`1<Single>..ctor, X0, X1
	613 Move X8, 0xB95000
	614 Move X8, [X8+2808]
	615 Move X0, [X8]
	616 Call 0x1C17F10
	617 Move X8, 0xBD3000
	618 Move X8, [X8+2624]
	619 Move X1, X24
	620 Move X3, X31
	621 Move X21, X0
	622 Move X2, [X8]
	623 Call Action`1<Object>..ctor, X0, X1, X2
	624 Compare X19, 0
	625 JumpIfEqual {1111}
	626 Move X22, [X28]
	627 Move X0, X19
	628 Move X1, X22
	629 Call 0x1C17E00
	630 Compare X0, 0
	631 JumpIfEqual {1112}
	632 Move X23, [X28]
	633 Move X0, X19
	634 Move X1, X23
	635 Call 0x1C17E00
	636 Compare X0, 0
	637 JumpIfEqual {1115}
	638 Move X8, [X0]
	639 Move X22, X0
	640 NotImplemented "Instruction LDRH not yet implemented."
	641 Compare X9, 0
	642 JumpIfEqual {857}
	643 Move X10, [X8+176]
	644 Add X10, X10, 8
	645 NotImplemented "Instruction LDUR not yet implemented."
	646 NotImplemented "Instruction CMP not yet implemented."
	647 Subtract X9, X9, 1
	648 Add X10, X10, 16
	649 Move X8, 0xBD3000
	650 Move X8, [X8+2560]
	651 Move X0, X19
	652 Move X1, [X8]
	653 Call 0x1C17E00
	654 Compare X0, 0
	655 JumpIfNotEqual {663}
	656 Move X8, 0xBD3000
	657 Move X8, [X8+2576]
	658 Move X0, X19
	659 Move X1, [X8]
	660 Call 0x1C17E00
	661 Compare X0, 0
	662 JumpIfEqual {1034}
	663 Move W24, 1
	664 Move X27, 0xBD3000
	665 Move X27, [X27+2576]
	666 Move X0, X19
	667 Move X1, [X27]
	668 Call 0x1C17E00
	669 Compare X0, 0
	670 JumpIfEqual {886}
	671 NotImplemented "Instruction CMP not yet implemented."
	672 Move X8, 0xB91000
	673 Move X8, [X8+2504]
	674 Move X24, [X21+24]
	675 Move X25, [X8]
	676 Move X8, [X25+56]
	677 Compare X8, 0
	678 JumpIfNotEqual {682}
	679 Move X0, X25
	680 Call 0x1C5D6E0
	681 Move X8, [X25+56]
	682 Move X0, [X8+16]
	683 Move W8, [X0+309]
	684 Move TEMP, X8
	685 And TEMP, TEMP, 1
	686 Compare TEMP, 1
	687 JumpIfEqual {689}
	688 Call 0x1C5D684
	689 Move W8, [X0+224]
	690 Compare W8, 0
	691 JumpIfNotEqual {693}
	692 Call 0x1C17DFC
	693 Move X8, [X25+56]
	694 Move X0, [X8+16]
	695 Move W8, [X0+309]
	696 Move TEMP, X8
	697 And TEMP, TEMP, 1
	698 Compare TEMP, 1
	699 JumpIfEqual {701}
	700 Call 0x1C5D684
	701 Compare X24, 0
	702 JumpIfEqual {1111}
	703 Move X10, 0xB96000
	704 Move X11, 0xBD3000
	705 Move X9, [X0+184]
	706 Move X10, [X10+840]
	707 Move X8, [X24]
	708 Move X11, [X11+2736]
	709 Move X25, [X9]
	710 Move X1, [X10]
	711 NotImplemented "Instruction LDRH not yet implemented."
	712 Move X26, [X11]
	713 Compare X9, 0
	714 JumpIfEqual {721}
	715 Move X10, [X8+176]
	716 Add X10, X10, 8
	717 NotImplemented "Instruction LDUR not yet implemented."
	718 NotImplemented "Instruction CMP not yet implemented."
	719 Subtract X9, X9, 1
	720 Add X10, X10, 16
	721 Move W2, 1
	722 Move X0, X24
	723 Call 0x1C5D788
	724 Move V1, [X23+16]
	725 Move V0, [X23+32]
	726 Move V2, [X23]
	727 Move X8, 0xBD3000
	728 Add X1, X31, 768
	729 Move [X31+208], V1
	730 Move [X31+216], V0
	731 Move [X31+12], V2
	732 Move V4, [X22]
	733 Move V3, [X22+16]
	734 Move X8, [X8+2696]
	735 Add X4, X31, 736
	736 Move X0, X21
	737 Move [X31+160], V4
	738 Move [X31+168], V3
	739 Move X5, [X8]
	740 Move V3, [X31+160]
	741 Move V4, [X31+176]
	742 Move X2, X19
	743 Move W3, W20
	744 Move [X31+768], V2
	745 Move [X31+776], V1
	746 Move [X31+50], V0
	747 Move [X31+736], V3
	748 Move [X31+744], V4
	749 Call VoiceClient.CreateLocalVoiceAudio, X0, X1, X2, X3, X4
	750 Move X8, 0xBD3000
	751 Move X8, [X8+2512]
	752 Move X20, X0
	753 Move X8, [X8]
	754 Move X0, X8
	755 Call 0x1C17F10
	756 Move X1, [X27]
	757 Move X21, X0
	758 Move X0, X19
	759 Call 0x1C17E00
	760 Move X8, 0xBD3000
	761 Move X8, [X8+2504]
	762 Move X1, X0
	763 Move X0, X21
	764 Move X2, [X8]
	765 Call BufferReaderPushAdapterAsyncPool`1<Single>..ctor, X0, X1
	766 Compare X20, 0
	767 JumpIfNotEqual {1033}
	768 Move W9, [X10]
	769 Add W9, W9, 1
	770 Add X8, X8, W9
	771 Add X0, X8, 312
	772 Move X8, [X0]
	773 Move X4, [X0+8]
	774 Move W1, 3
	775 Move X0, X25
	776 Move X2, X27
	777 Move X3, X26
	778 NotImplemented "Instruction BLR not yet implemented."
	779 Move V1, [X23+16]
	780 Move V0, [X23+32]
	781 Move V2, [X23]
	782 Move X8, 0xBD3000
	783 Add X1, X31, 768
	784 Move [X31+448], V1
	785 Move [X31+456], V0
	786 Move [X31+27], V2
	787 Move V0, [X22]
	788 Move V1, [X22+16]
	789 Move X8, [X8+2696]
	790 Move V2, [X31+432]
	791 Move V3, [X31+448]
	792 Add X4, X31, 736
	793 Move [X31+400], V0
	794 Move [X31+408], V1
	795 Move V0, [X31+29]
	796 Move [X31+768], V2
	797 Move [X31+776], V3
	798 Move V1, [X31+400]
	799 Move V2, [X31+416]
	800 Move X5, [X8]
	801 Move X0, X21
	802 Move X2, X19
	803 Move W3, W20
	804 Move [X31+50], V0
	805 Move [X31+736], V1
	806 Move [X31+744], V2
	807 Call VoiceClient.CreateLocalVoiceAudio, X0, X1, X2, X3, X4
	808 Compare X24, 0
	809 JumpIfEqual {1111}
	810 Move [X24+16], X0
	811 Move X8, 0xBD3000
	812 Move X8, [X8+2552]
	813 Move X0, [X8]
	814 Call 0x1C17F10
	815 Move X8, 0xBD3000
	816 Move X8, [X8+2528]
	817 Move W1, W31
	818 Move X20, X0
	819 Move X2, [X8]
	820 Call 0x2D12184, X0, X1
	821 Move X8, 0xBD3000
	822 Move X8, [X8+2472]
	823 Move X0, [X8]
	824 Call 0x1C17F10
	825 Move X8, 0xBD3000
	826 Move X8, [X8+2656]
	827 Move X1, X24
	828 Move X3, X31
	829 Move X21, X0
	830 Move X2, [X8]
	831 Call Action`1<Object>..ctor, X0, X1, X2
	832 Compare X19, 0
	833 JumpIfEqual {1111}
	834 Move X22, [X28]
	835 Move X0, X19
	836 Move X1, X22
	837 Call 0x1C17E00
	838 Compare X0, 0
	839 JumpIfEqual {1112}
	840 Move X23, [X28]
	841 Move X0, X19
	842 Move X1, X23
	843 Call 0x1C17E00
	844 Compare X0, 0
	845 JumpIfEqual {1115}
	846 Move X8, [X0]
	847 Move X22, X0
	848 NotImplemented "Instruction LDRH not yet implemented."
	849 Compare X9, 0
	850 JumpIfEqual {857}
	851 Move X10, [X8+176]
	852 Add X10, X10, 8
	853 NotImplemented "Instruction LDUR not yet implemented."
	854 NotImplemented "Instruction CMP not yet implemented."
	855 Subtract X9, X9, 1
	856 Add X10, X10, 16
	857 Move X0, X22
	858 Move X1, X23
	859 Move W2, W31
	860 Call 0x1C5D788
	861 NotImplemented "Instruction LDRSW not yet implemented."
	862 Add X8, X8, X9
	863 Add X0, X8, 312
	864 Move X8, [X0]
	865 Move X3, [X0+8]
	866 Move X0, X22
	867 Move X1, X21
	868 Move X2, X20
	869 NotImplemented "Instruction BLR not yet implemented."
	870 Move X20, [X24+16]
	871 Move X0, X20
	872 Add X31, X31, 816
	873 Move X20, [X31+80]
	874 Move X19, [X31+88]
	875 Move X22, [X31+64]
	876 Move X21, [X31+72]
	877 Move X24, [X31+48]
	878 Move X23, [X31+56]
	879 Move X26, [X31+32]
	880 Move X25, [X31+40]
	881 Move X28, [X31+16]
	882 Move X27, [X31+24]
	883 Move X29, [X31+96]
	884 Move X30, [X31+104]
	885 Return X0
	886 Move X8, 0xB91000
	887 Move X20, [X21+24]
	888 Move X8, [X8+2512]
	889 Move W1, 1
	890 Move X0, [X8]
	891 Call 0x1C17D6C
	892 Compare X19, 0
	893 JumpIfEqual {1111}
	894 Move X21, X0
	895 Move X0, X19
	896 Move X1, X31
	897 Call "il2cpp_vm_object_is_inst", X0
	898 Compare X21, 0
	899 JumpIfEqual {1111}
	900 Move X19, X0
	901 Compare X0, 0
	902 JumpIfEqual {909}
	903 Move X8, [X21]
	904 Move X0, X19
	905 Move X1, [X8+64]
	906 Call 0x1C17E00
	907 Compare X0, 0
	908 JumpIfEqual {1119}
	909 Move W8, [X21+24]
	910 Compare W8, 0
	911 JumpIfEqual {1118}
	912 Move [X21+32], X19
	913 Compare X20, 0
	914 JumpIfEqual {1111}
	915 Move X9, 0xB96000
	916 Move X8, [X20]
	917 Move X9, [X9+840]
	918 Move X10, 0xBD3000
	919 Move X1, [X9]
	920 Move X10, [X10+2728]
	921 NotImplemented "Instruction LDRH not yet implemented."
	922 Move X19, [X10]
	923 Compare X9, 0
	924 JumpIfEqual {931}
	925 Move X10, [X8+176]
	926 Add X10, X10, 8
	927 NotImplemented "Instruction LDUR not yet implemented."
	928 NotImplemented "Instruction CMP not yet implemented."
	929 Subtract X9, X9, 1
	930 Add X10, X10, 16
	931 Move W2, 1
	932 Move X0, X20
	933 Call 0x1C5D788
	934 Move V1, [X23+16]
	935 Move V0, [X23+32]
	936 Move V2, [X23]
	937 Move X8, 0xBD3000
	938 Add X1, X31, 768
	939 Move [X31+48], V1
	940 Move [X31+56], V0
	941 Move [X31+2], V2
	942 Move V4, [X22]
	943 Move V3, [X22+16]
	944 Move X8, [X8+2688]
	945 Add X4, X31, 736
	946 Move X0, X21
	947 Move [X31], V4
	948 Move [X31+8], V3
	949 Move X5, [X8]
	950 Move V3, [X31]
	951 Move V4, [X31+16]
	952 Move X2, X19
	953 Move W3, W20
	954 Move [X31+768], V2
	955 Move [X31+776], V1
	956 Move [X31+50], V0
	957 Move [X31+736], V3
	958 Move [X31+744], V4
	959 Call 0x22AC250, X0, X1, X2, X3, X4
	960 Move X8, 0xBD3000
	961 Move X8, [X8+2520]
	962 Move X20, X0
	963 Move X8, [X8]
	964 Move X0, X8
	965 Call 0x1C17F10
	966 Move X1, [X27]
	967 Move X21, X0
	968 Move X0, X19
	969 Call 0x1C17E00
	970 Move X8, 0xBD3000
	971 Move X8, [X8+2496]
	972 Move X1, X0
	973 Move X0, X21
	974 Move X2, [X8]
	975 Call 0x28E4F38, X0, X1
	976 Compare X20, 0
	977 JumpIfNotEqual {1033}
	978 Move W9, [X10]
	979 Add W9, W9, 1
	980 Add X8, X8, W9
	981 Add X0, X8, 312
	982 Move X8, [X0]
	983 Move X4, [X0+8]
	984 Move W1, 3
	985 Move X0, X24
	986 Move X2, X26
	987 Move X3, X25
	988 NotImplemented "Instruction BLR not yet implemented."
	989 Move V1, [X23+16]
	990 Move V0, [X23+32]
	991 Move V2, [X23]
	992 Move X8, 0xBD3000
	993 Add X1, X31, 768
	994 Move [X31+288], V1
	995 Move [X31+296], V0
	996 Move [X31+17], V2
	997 Move V0, [X22]
	998 Move V1, [X22+16]
	999 Move X8, [X8+2688]
	1000 Move V2, [X31+272]
	1001 Move V3, [X31+288]
	1002 Add X4, X31, 736
	1003 Move [X31+240], V0
	1004 Move [X31+248], V1
	1005 Move V0, [X31+19]
	1006 Move [X31+768], V2
	1007 Move [X31+776], V3
	1008 Move V1, [X31+240]
	1009 Move V2, [X31+256]
	1010 Move X5, [X8]
	1011 Move X0, X21
	1012 Move X2, X19
	1013 Move W3, W20
	1014 Move [X31+50], V0
	1015 Move [X31+736], V1
	1016 Move [X31+744], V2
	1017 Call 0x22AC250, X0, X1, X2, X3, X4
	1018 Move X8, 0xBD3000
	1019 Move X8, [X8+2480]
	1020 Move X20, X0
	1021 Move X8, [X8]
	1022 Move X0, X8
	1023 Call 0x1C17F10
	1024 Move X1, [X27]
	1025 Move X21, X0
	1026 Move X0, X19
	1027 Call 0x1C17E00
	1028 Move X1, X0
	1029 Move X0, X21
	1030 Call BufferReaderPushAdapterAsyncPoolFloatToShort..ctor, X0, X1
	1031 Compare X20, 0
	1032 JumpIfEqual {1111}
	1033 Move [X20+48], X21
	1034 Move W24, W31
	1035 Move W9, [X10]
	1036 Add W9, W9, 1
	1037 Add X8, X8, W9
	1038 Add X0, X8, 312
	1039 Move X8, [X0]
	1040 Move X4, [X0+8]
	1041 Move W1, 1
	1042 Move X0, X20
	1043 Move X2, X19
	1044 Move X3, X21
	1045 NotImplemented "Instruction BLR not yet implemented."
	1046 Move X19, 0xBD3000
	1047 Move X19, [X19+2080]
	1048 Move X0, [X19]
	1049 Move W8, [X0+224]
	1050 Compare W8, 0
	1051 JumpIfNotEqual {1054}
	1052 Call 0x1C17DFC
	1053 Move X0, [X19]
	1054 Move X8, [X0+184]
	1055 Move X20, [X8]
	1056 Move W9, [X10]
	1057 Add W9, W9, 1
	1058 Add X8, X8, W9
	1059 Add X0, X8, 312
	1060 Move X8, [X0]
	1061 Move X4, [X0+8]
	1062 Move W1, 3
	1063 Move X0, X24
	1064 Move X2, X26
	1065 Move X3, X25
	1066 NotImplemented "Instruction BLR not yet implemented."
	1067 Move V1, [X23+16]
	1068 Move V0, [X23+32]
	1069 Move V2, [X23]
	1070 Move X8, 0xBD3000
	1071 Add X1, X31, 768
	1072 Move [X31+128], V1
	1073 Move [X31+136], V0
	1074 Move [X31+7], V2
	1075 Move V0, [X22]
	1076 Move V1, [X22+16]
	1077 Move X8, [X8+2696]
	1078 Move V2, [X31+112]
	1079 Move V3, [X31+128]
	1080 Add X4, X31, 736
	1081 Move [X31+80], V0
	1082 Move [X31+88], V1
	1083 Move V0, [X31+9]
	1084 Move [X31+768], V2
	1085 Move [X31+776], V3
	1086 Move V1, [X31+80]
	1087 Move V2, [X31+96]
	1088 Move X5, [X8]
	1089 Move X0, X21
	1090 Move X2, X19
	1091 Move W3, W20
	1092 Move [X31+50], V0
	1093 Move [X31+736], V1
	1094 Move [X31+744], V2
	1095 Call VoiceClient.CreateLocalVoiceAudio, X0, X1, X2, X3, X4
	1096 Move X8, 0xBD3000
	1097 Move X8, [X8+2488]
	1098 Move X20, X0
	1099 Move X8, [X8]
	1100 Move X0, X8
	1101 Call 0x1C17F10
	1102 Move X1, [X27]
	1103 Move X21, X0
	1104 Move X0, X19
	1105 Call 0x1C17E00
	1106 Move X1, X0
	1107 Move X0, X21
	1108 Call BufferReaderPushAdapterAsyncPoolShortToFloat..ctor, X0, X1
	1109 Compare X20, 0
	1110 JumpIfNotEqual {1033}
	1111 Call 0x1C17F20
	1112 Move X0, X19
	1113 Move X1, X22
	1114 Call 0x1C181E0
	1115 Move X0, X19
	1116 Move X1, X23
	1117 Call 0x1C181E0
	1118 Call 0x1C17F28
	1119 Call 0x1C17F44
	1120 Move X1, X31
	1121 Call 0x1C17DEC

Method: System.Byte idInc(System.Byte id)

Disassembly:
	0x03563C70 BL 0x1C16CF4
	0x03563C74 ADRP X0, 0xBD2000
	0x03563C78 LDR X0, [X0 + 0x868]
	0x03563C7C BL 0x1C16CF4
	0x03563C80 MOVZ W8, 0x1
	0x03563C84 STRB W8, [X20 + 0xDCE]
	0x03563C88 MOVI V0.2D, 0x0

ISIL:
	001 Move W8, [X0+113]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W0, [X0+112]
	004 Return X0
	005 Add W0, W1, 1
	006 Return X0

Method: System.Byte getNewVoiceId()

Disassembly:
	0x035626B0 BLR X8
	0x035626B4 LDP V1, V0, [X23 + 0x10]
	0x035626B8 LDR V2, [X23]
	0x035626BC ADRP X8, 0xBD3000
	0x035626C0 ADD X1, X31, 0x300
	0x035626C4 STP V1, V0, [X31 + 0x1C0]
	0x035626C8 STR V2, [X31 + 0x1B]
	0x035626CC LDP V0, V1, [X22]
	0x035626D0 LDR X8, [X8 + 0xA88]
	0x035626D4 LDP V2, V3, [X31 + 0x1B0]
	0x035626D8 ADD X4, X31, 0x2E0
	0x035626DC STP V0, V1, [X31 + 0x190]
	0x035626E0 LDR V0, [X31 + 0x1D]
	0x035626E4 STP V2, V3, [X31 + 0x300]
	0x035626E8 LDP V1, V2, [X31 + 0x190]
	0x035626EC LDR X5, [X8]
	0x035626F0 MOV X0, X21
	0x035626F4 MOV X2, X19
	0x035626F8 MOV W3, W20
	0x035626FC STR V0, [X31 + 0x32]
	0x03562700 STP V1, V2, [X31 + 0x2E0]
	0x03562704 BL 0x22AB3A0
	0x03562708 CBZ X24, 0x3562B28
	0x0356270C STR X0, [X24 + 0x10]
	0x03562710 ADRP X8, 0xBD3000
	0x03562714 LDR X8, [X8 + 0x9F8]
	0x03562718 LDR X0, [X8]
	0x0356271C BL 0x1C16F10
	0x03562720 ADRP X8, 0xBD3000
	0x03562724 LDR X8, [X8 + 0x9E0]
	0x03562728 MOV W1, W31
	0x0356272C MOV X20, X0
	0x03562730 LDR X2, [X8]
	0x03562734 BL 0x2D11184
	0x03562738 ADRP X8, 0xBD3000
	0x0356273C LDR X8, [X8 + 0x9A8]
	0x03562740 LDR X0, [X8]
	0x03562744 BL 0x1C16F10
	0x03562748 ADRP X8, 0xBD3000
	0x0356274C LDR X8, [X8 + 0xA60]
	0x03562750 MOV X1, X24
	0x03562754 MOV X3, X31
	0x03562758 MOV X21, X0
	0x0356275C LDR X2, [X8]
	0x03562760 BL 0x2A6B948
	0x03562764 CBZ X19, 0x3562B28
	0x03562768 LDR X22, [X28]
	0x0356276C MOV X0, X19
	0x03562770 MOV X1, X22
	0x03562774 BL 0x1C16E00
	0x03562778 CBZ X0, 0x3562B2C
	0x0356277C LDR X23, [X28]
	0x03562780 MOV X0, X19
	0x03562784 MOV X1, X23
	0x03562788 BL 0x1C16E00
	0x0356278C CBZ X0, 0x3562B38
	0x03562790 LDR X8, [X0]
	0x03562794 MOV X22, X0
	0x03562798 LDRH W9, [X8 + 0x12E]
	0x0356279C CBZ X9, 0x35627C0
	0x035627A0 LDR X10, [X8 + 0xB0]
	0x035627A4 ADD X10, X10, 0x8
	0x035627A8 LDUR X11, [X10 - 0x8]
	0x035627AC CMP X11, X23
	0x035627B0 B.EQ 0x35627D4
	0x035627B4 SUBS X9, X9, 0x1
	0x035627B8 ADD X10, X10, 0x10
	0x035627BC B.NE 0x35627A8
	0x035627C0 MOV X0, X22
	0x035627C4 MOV X1, X23
	0x035627C8 MOV W2, W31
	0x035627CC BL 0x1C5C788
	0x035627D0 B 0x35627E0
	0x035627D4 LDRSW X9, [X10]
	0x035627D8 ADD X8, X8, X9, 0x4, LSL
	0x035627DC ADD X0, X8, 0x138
	0x035627E0 LDP X8, X3, [X0]
	0x035627E4 MOV X0, X22
	0x035627E8 MOV X1, X21
	0x035627EC MOV X2, X20
	0x035627F0 BLR X8
	0x035627F4 LDR X20, [X24 + 0x10]
	0x035627F8 MOV X0, X20
	0x035627FC ADD X31, X31, 0x330
	0x03562800 LDP X20, X19, [X31 + 0x50]
	0x03562804 LDP X22, X21, [X31 + 0x40]
	0x03562808 LDP X24, X23, [X31 + 0x30]
	0x0356280C LDP X26, X25, [X31 + 0x20]
	0x03562810 LDP X28, X27, [X31 + 0x10]
	0x03562814 LDP X29, X30, [X31], #0x60
	0x03562818 RET
	0x0356281C ADRP X8, 0xB91000
	0x03562820 LDR X20, [X21 + 0x18]
	0x03562824 LDR X8, [X8 + 0x9D0]
	0x03562828 MOVZ W1, 0x1
	0x0356282C LDR X0, [X8]
	0x03562830 BL 0x1C16D6C
	0x03562834 CBZ X19, 0x3562B28
	0x03562838 MOV X21, X0
	0x0356283C MOV X0, X19
	0x03562840 MOV X1, X31
	0x03562844 BL 0x33BE520
	0x03562848 CBZ X21, 0x3562B28
	0x0356284C MOV X19, X0
	0x03562850 CBZ X0, 0x3562868
	0x03562854 LDR X8, [X21]
	0x03562858 MOV X0, X19
	0x0356285C LDR X1, [X8 + 0x40]
	0x03562860 BL 0x1C16E00
	0x03562864 CBZ X0, 0x3562B48
	0x03562868 LDR W8, [X21 + 0x18]
	0x0356286C CBZ W8, 0x3562B44
	0x03562870 STR X19, [X21 + 0x20]
	0x03562874 CBZ X20, 0x3562B28
	0x03562878 ADRP X9, 0xB96000
	0x0356287C LDR X8, [X20]
	0x03562880 LDR X9, [X9 + 0x348]
	0x03562884 ADRP X10, 0xBD3000
	0x03562888 LDR X1, [X9]
	0x0356288C LDR X10, [X10 + 0xAA8]
	0x03562890 LDRH W9, [X8 + 0x12E]
	0x03562894 LDR X19, [X10]
	0x03562898 CBZ X9, 0x35628BC
	0x0356289C LDR X10, [X8 + 0xB0]
	0x035628A0 ADD X10, X10, 0x8
	0x035628A4 LDUR X11, [X10 - 0x8]
	0x035628A8 CMP X11, X1
	0x035628AC B.EQ 0x3562A24
	0x035628B0 SUBS X9, X9, 0x1
	0x035628B4 ADD X10, X10, 0x10
	0x035628B8 B.NE 0x35628A4
	0x035628BC MOVZ W2, 0x1
	0x035628C0 MOV X0, X20
	0x035628C4 BL 0x1C5C788
	0x035628C8 B 0x3562A34
	0x035628CC LDP V1, V0, [X23 + 0x10]
	0x035628D0 LDR V2, [X23]
	0x035628D4 ADRP X8, 0xBD3000
	0x035628D8 ADD X1, X31, 0x300

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+104], X23
	004 Move [X31+112], X22
	005 Move [X31+120], X21
	006 Move [X31+128], X20
	007 Move [X31+136], X19
	008 Move X21, 0xE7E000
	009 Move X20, 0xB94000
	010 Move W8, [X21+3527]
	011 Move X20, [X20+2488]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0xB94000
	018 Move X0, [X0+2488]
	019 Call 0x1C17CF4
	020 Move X0, 0xBD4000
	021 Move X0, [X0+2120]
	022 Call 0x1C17CF4
	023 Move X0, 0xBD4000
	024 Move X0, [X0+2128]
	025 Call 0x1C17CF4
	026 Move X0, 0xBD4000
	027 Move X0, [X0+2136]
	028 Call 0x1C17CF4
	029 Move X0, 0xBD4000
	030 Move X0, [X0+2144]
	031 Call 0x1C17CF4
	032 Move X0, 0xBD4000
	033 Move X0, [X0+2152]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+3527], W8
	037 Move X0, [X20]
	038 NotImplemented "Instruction MOVI not yet implemented."
	039 Move W1, 256
	040 Move [X31+80], X31
	041 Move [X31+48], V0
	042 Move [X31+56], V0
	043 Call 0x1C17D6C
	044 Move X9, [X19+120]
	045 Compare X9, 0
	046 JumpIfEqual {117}
	047 Move X8, 0xBD4000
	048 Move X8, [X8+2120]
	049 Move X22, 0xBD4000
	050 Move X21, 0xBD4000
	051 Move X20, X0
	052 Move X1, [X8]
	053 Move X22, [X22+2136]
	054 Move X21, [X21+2128]
	055 Add X8, X31, 8
	056 Move X0, X9
	057 Call Dictionary`2<Byte, Object>.GetEnumerator, X0
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 Move X8, [X31+40]
	061 Move W23, 1
	062 Move [X31+48], V0
	063 Move [X31+56], V1
	064 Move [X31+80], X8
	065 Move X1, [X22]
	066 Add X0, X31, 48
	067 Call Enumerator<Byte, Object>.MoveNext, X0
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {82}
	072 Move X8, [X31+72]
	073 Compare X8, 0
	074 JumpIfEqual {114}
	075 Compare X20, 0
	076 JumpIfEqual {115}
	077 Move W8, [X8+128]
	078 Move W9, [X20+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Add X8, X20, X8
	081 Move [X8+32], W23
	082 Move X1, [X21]
	083 Add X0, X31, 48
	084 Call Enumerator<Byte, Object>.Dispose, X0
	085 Move W8, [X19+114]
	086 Move W9, [X19+113]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move W0, [X19+112]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Add W0, W8, 1
	091 Compare X20, 0
	092 JumpIfEqual {117}
	093 Move W10, [X20+24]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Add X11, X20, W0
	096 Move W11, [X11+32]
	097 Compare W11, 0
	098 JumpIfEqual {104}
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move W0, [X19+112]
	101 Add W0, W0, 1
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move W0, W31
	104 Move [X19+114], W0
	105 Move X20, [X31+128]
	106 Move X19, [X31+136]
	107 Move X22, [X31+112]
	108 Move X21, [X31+120]
	109 Move X30, [X31+96]
	110 Move X23, [X31+104]
	111 Add X31, X31, 144
	112 Return X0
	113 Call 0x1C17F28
	114 Call 0x1C17F20
	115 Call 0x1C17F20
	116 Call 0x1C17F28
	117 Call 0x1C17F20
	118 Move X21, X0
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X0, X21
	121 Call 0x3EB2AD0
	122 Move X22, [X0]
	123 Call 0x3EB2AE0
	124 Move X8, 0xBD4000
	125 Move X8, [X8+2128]
	126 Add X0, X31, 48
	127 Move X1, [X8]
	128 Call Enumerator<Byte, Object>.Dispose, X0
	129 Compare X22, 0
	130 JumpIfEqual {85}
	131 Move X0, X22
	132 Call 0x1C17F18
	133 Move X22, X31
	134 Move X21, X0
	135 Move X8, 0xBD4000
	136 Move X8, [X8+2128]
	137 Move X1, [X8]
	138 Add X0, X31, 48
	139 Call Enumerator<Byte, Object>.Dispose, X0
	140 Compare X22, 0
	141 JumpIfNotEqual {144}
	142 Move X0, X21
	143 Call 0x1D2D690
	144 Move X0, X22
	145 Call 0x1C17F18
	146 Call 0x1991590

Method: System.Void addVoice(System.Byte newId, System.Int32 channelId, Photon.Voice.LocalVoice v)

Disassembly:
	0x035628DC STP V1, V0, [X31 + 0x30]
	0x035628E0 STR V2, [X31 + 0x2]
	0x035628E4 LDP V4, V3, [X22]
	0x035628E8 LDR X8, [X8 + 0xA80]
	0x035628EC ADD X4, X31, 0x2E0
	0x035628F0 MOV X0, X21
	0x035628F4 STP V4, V3, [X31]
	0x035628F8 LDR X5, [X8]
	0x035628FC LDP V3, V4, [X31]
	0x03562900 MOV X2, X19
	0x03562904 MOV W3, W20
	0x03562908 STP V2, V1, [X31 + 0x300]
	0x0356290C STR V0, [X31 + 0x32]
	0x03562910 STP V3, V4, [X31 + 0x2E0]
	0x03562914 BL 0x22AB250
	0x03562918 ADRP X8, 0xBD3000
	0x0356291C LDR X8, [X8 + 0x9D8]
	0x03562920 MOV X20, X0
	0x03562924 LDR X8, [X8]
	0x03562928 MOV X0, X8
	0x0356292C BL 0x1C16F10
	0x03562930 LDR X1, [X27]
	0x03562934 MOV X21, X0
	0x03562938 MOV X0, X19
	0x0356293C BL 0x1C16E00
	0x03562940 ADRP X8, 0xBD3000
	0x03562944 LDR X8, [X8 + 0x9C0]
	0x03562948 MOV X1, X0
	0x0356294C MOV X0, X21
	0x03562950 LDR X2, [X8]
	0x03562954 BL 0x28E3F38
	0x03562958 CBNZ X20, 0x3562A14
	0x0356295C B 0x3562B28
	0x03562960 LDR W9, [X10]
	0x03562964 ADD W9, W9, 0x1
	0x03562968 ADD X8, X8, W9, 0x4, SXTW
	0x0356296C ADD X0, X8, 0x138
	0x03562970 LDP X8, X4, [X0]
	0x03562974 MOVZ W1, 0x3
	0x03562978 MOV X0, X24
	0x0356297C MOV X2, X26
	0x03562980 MOV X3, X25
	0x03562984 BLR X8
	0x03562988 LDP V1, V0, [X23 + 0x10]
	0x0356298C LDR V2, [X23]
	0x03562990 ADRP X8, 0xBD3000
	0x03562994 ADD X1, X31, 0x300
	0x03562998 STP V1, V0, [X31 + 0x120]
	0x0356299C STR V2, [X31 + 0x11]
	0x035629A0 LDP V0, V1, [X22]
	0x035629A4 LDR X8, [X8 + 0xA80]
	0x035629A8 LDP V2, V3, [X31 + 0x110]
	0x035629AC ADD X4, X31, 0x2E0
	0x035629B0 STP V0, V1, [X31 + 0xF0]
	0x035629B4 LDR V0, [X31 + 0x13]
	0x035629B8 STP V2, V3, [X31 + 0x300]
	0x035629BC LDP V1, V2, [X31 + 0xF0]
	0x035629C0 LDR X5, [X8]
	0x035629C4 MOV X0, X21
	0x035629C8 MOV X2, X19
	0x035629CC MOV W3, W20
	0x035629D0 STR V0, [X31 + 0x32]
	0x035629D4 STP V1, V2, [X31 + 0x2E0]
	0x035629D8 BL 0x22AB250
	0x035629DC ADRP X8, 0xBD3000
	0x035629E0 LDR X8, [X8 + 0x9B0]
	0x035629E4 MOV X20, X0
	0x035629E8 LDR X8, [X8]
	0x035629EC MOV X0, X8
	0x035629F0 BL 0x1C16F10
	0x035629F4 LDR X1, [X27]
	0x035629F8 MOV X21, X0
	0x035629FC MOV X0, X19
	0x03562A00 BL 0x1C16E00
	0x03562A04 MOV X1, X0
	0x03562A08 MOV X0, X21
	0x03562A0C BL 0x3562B74
	0x03562A10 CBZ X20, 0x3562B28
	0x03562A14 STR X21, [X20 + 0x30]
	0x03562A18 B 0x35627F8
	0x03562A1C MOV W24, W31
	0x03562A20 B 0x3561E38
	0x03562A24 LDR W9, [X10]
	0x03562A28 ADD W9, W9, 0x1
	0x03562A2C ADD X8, X8, W9, 0x4, SXTW
	0x03562A30 ADD X0, X8, 0x138
	0x03562A34 LDP X8, X4, [X0]
	0x03562A38 MOVZ W1, 0x1
	0x03562A3C MOV X0, X20
	0x03562A40 MOV X2, X19
	0x03562A44 MOV X3, X21
	0x03562A48 BLR X8
	0x03562A4C ADRP X19, 0xBD3000
	0x03562A50 LDR X19, [X19 + 0x820]
	0x03562A54 LDR X0, [X19]
	0x03562A58 LDR W8, [X0 + 0xE0]
	0x03562A5C CBNZ W8, 0x3562A68
	0x03562A60 BL 0x1C16DFC
	0x03562A64 LDR X0, [X19]
	0x03562A68 LDR X8, [X0 + 0xB8]
	0x03562A6C LDR X20, [X8]
	0x03562A70 B 0x35627F8
	0x03562A74 LDR W9, [X10]
	0x03562A78 ADD W9, W9, 0x1
	0x03562A7C ADD X8, X8, W9, 0x4, SXTW
	0x03562A80 ADD X0, X8, 0x138
	0x03562A84 LDP X8, X4, [X0]
	0x03562A88 MOVZ W1, 0x3
	0x03562A8C MOV X0, X24
	0x03562A90 MOV X2, X26
	0x03562A94 MOV X3, X25
	0x03562A98 BLR X8
	0x03562A9C LDP V1, V0, [X23 + 0x10]
	0x03562AA0 LDR V2, [X23]
	0x03562AA4 ADRP X8, 0xBD3000
	0x03562AA8 ADD X1, X31, 0x300
	0x03562AAC STP V1, V0, [X31 + 0x80]
	0x03562AB0 STR V2, [X31 + 0x7]
	0x03562AB4 LDP V0, V1, [X22]
	0x03562AB8 LDR X8, [X8 + 0xA88]
	0x03562ABC LDP V2, V3, [X31 + 0x70]
	0x03562AC0 ADD X4, X31, 0x2E0
	0x03562AC4 STP V0, V1, [X31 + 0x50]
	0x03562AC8 LDR V0, [X31 + 0x9]
	0x03562ACC STP V2, V3, [X31 + 0x300]
	0x03562AD0 LDP V1, V2, [X31 + 0x50]
	0x03562AD4 LDR X5, [X8]
	0x03562AD8 MOV X0, X21
	0x03562ADC MOV X2, X19
	0x03562AE0 MOV W3, W20
	0x03562AE4 STR V0, [X31 + 0x32]
	0x03562AE8 STP V1, V2, [X31 + 0x2E0]
	0x03562AEC BL 0x22AB3A0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xE7E000
	009 Move W8, [X23+3528]
	010 Move X19, X3
	011 Move W20, W2
	012 Move W22, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0xBD4000
	019 Move X0, [X0+2192]
	020 Call 0x1C17CF4
	021 Move X0, 0xBD4000
	022 Move X0, [X0+2416]
	023 Call 0x1C17CF4
	024 Move X0, 0xBD4000
	025 Move X0, [X0+2424]
	026 Call 0x1C17CF4
	027 Move X0, 0xBD4000
	028 Move X0, [X0+1232]
	029 Call 0x1C17CF4
	030 Move X0, 0xBD4000
	031 Move X0, [X0+2432]
	032 Call 0x1C17CF4
	033 Move X0, 0xBD4000
	034 Move X0, [X0+2440]
	035 Call 0x1C17CF4
	036 Move X0, 0xBD4000
	037 Move X0, [X0+2448]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X23+3528], W8
	041 Move [X31+8], X31
	042 Move X0, [X21+120]
	043 Compare X0, 0
	044 JumpIfEqual {152}
	045 Move X8, 0xBD4000
	046 Move X8, [X8+2416]
	047 Move W1, W22
	048 Move X2, X19
	049 Move X3, [X8]
	050 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	051 Move X0, [X21+128]
	052 Compare X0, 0
	053 JumpIfEqual {152}
	054 Move X8, 0xBD4000
	055 Move X8, [X8+2192]
	056 Add X2, X31, 8
	057 Move W1, W20
	058 Move X3, [X8]
	059 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {83}
	064 Move X8, 0xBD4000
	065 Move X8, [X8+2448]
	066 Move X0, [X8]
	067 Call 0x1C17F10
	068 Move X8, 0xBD4000
	069 Move X8, [X8+2440]
	070 Move X22, X0
	071 Move X1, [X8]
	072 Call List`1<Object>..ctor, X0
	073 Move [X31+8], X22
	074 Move X0, [X21+128]
	075 Compare X0, 0
	076 JumpIfEqual {152}
	077 Move X8, 0xBD4000
	078 Move X8, [X8+2424]
	079 Move W1, W20
	080 Move X2, X22
	081 Move X3, [X8]
	082 Call Dictionary`2<Int32, Object>.set_Item, X0, X1, X2
	083 Move X0, [X31+8]
	084 Compare X0, 0
	085 JumpIfEqual {152}
	086 Move X9, 0xBD4000
	087 Move X9, [X9+2432]
	088 Move W10, [X0+28]
	089 Move X8, [X0+16]
	090 Move X9, [X9]
	091 Add W10, W10, 1
	092 Move [X0+28], W10
	093 Compare X8, 0
	094 JumpIfEqual {152}
	095 NotImplemented "Instruction LDRSW not yet implemented."
	096 Move W11, [X8+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Add W9, W10, 1
	099 Add X8, X8, X10
	100 Move [X0+24], W9
	101 Move [X8+32], X19
	102 Move X8, [X9+32]
	103 Move X1, X19
	104 Move X8, [X8+192]
	105 Move X2, [X8+112]
	106 Call List`1<Object>.AddWithResize, X0, X1
	107 Move X21, [X21+16]
	108 Compare X21, 0
	109 JumpIfEqual {152}
	110 Move X10, 0xBD4000
	111 Move X8, [X21]
	112 Move X10, [X10+1232]
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Move X1, [X10]
	115 Compare X9, 0
	116 JumpIfEqual {123}
	117 Move X10, [X8+176]
	118 Add X10, X10, 8
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Subtract X9, X9, 1
	122 Add X10, X10, 16
	123 Move X0, X21
	124 Move W2, W31
	125 Call 0x1C5D788
	126 NotImplemented "Instruction LDRSW not yet implemented."
	127 Add X8, X8, X9
	128 Add X0, X8, 312
	129 Move X8, [X0]
	130 Move X2, [X0+8]
	131 Move X0, X21
	132 Move W1, W20
	133 NotImplemented "Instruction BLR not yet implemented."
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfNotEqual {144}
	138 Compare X19, 0
	139 JumpIfEqual {152}
	140 Move W1, [X19+57]
	141 Move X2, [X19+64]
	142 Move X0, X19
	143 Call LocalVoice.sendVoiceInfoAndConfigFrame, X0, X1, X2
	144 Move X20, [X31+48]
	145 Move X19, [X31+56]
	146 Move X22, [X31+32]
	147 Move X21, [X31+40]
	148 Move X30, [X31+16]
	149 Move X23, [X31+24]
	150 Add X31, X31, 64
	151 Return 
	152 Call 0x1C17F20

Method: System.Void RemoveLocalVoice(Photon.Voice.LocalVoice voice)

Disassembly:
	0x0355B7C4 ADRP X22, 0xBDA000
	0x0355B7C8 ADRP X23, 0xBDA000
	0x0355B7CC LDR X21, [X21 + 0x720]
	0x0355B7D0 LDR X22, [X22 + 0x718]
	0x0355B7D4 LDR X23, [X23 + 0x710]
	0x0355B7D8 LDR X1, [X21]
	0x0355B7DC BL 0x2990514
	0x0355B7E0 TBNZ X0, 0x0, 0x355B838
	0x0355B7E4 LDR X0, [X19 + 0xF8]
	0x0355B7E8 CBZ X0, 0x355B834
	0x0355B7EC LDR X1, [X22]
	0x0355B7F0 BL 0x29908F0
	0x0355B7F4 CMP W0, 0xA
	0x0355B7F8 B.LE 0x355B838
	0x0355B7FC LDR X0, [X19 + 0xF8]
	0x0355B800 CBZ X0, 0x355B834
	0x0355B804 LDR X2, [X23]
	0x0355B808 ADD X1, X31, 0xC0
	0x0355B80C BL 0x29917E8
	0x0355B810 TBZ X0, 0x0, 0x355B82C
	0x0355B814 LDR X0, [X24]
	0x0355B818 LDR W8, [X0 + 0xE0]
	0x0355B81C CBNZ W8, 0x355B824
	0x0355B820 BL 0x1C16DFC
	0x0355B824 ADD X0, X31, 0xC0
	0x0355B828 BL 0x3555CB0
	0x0355B82C LDR X0, [X19 + 0xF8]
	0x0355B830 CBNZ X0, 0x355B7D8
	0x0355B834 BL 0x1C16F20
	0x0355B838 LDP V2, V0, [X20 + 0x10]
	0x0355B83C LDR X8, [X20 + 0x30]
	0x0355B840 LDR V1, [X20]
	0x0355B844 LDR X0, [X19 + 0xF8]
	0x0355B848 STP V2, V0, [X31 + 0x90]
	0x0355B84C STR X8, [X31 + 0xB0]
	0x0355B850 STR V1, [X31 + 0x8]
	0x0355B854 CBZ X0, 0x355B834
	0x0355B858 ADRP X8, 0xBDA000
	0x0355B85C LDR X8, [X8 + 0x708]
	0x0355B860 LDP V0, V1, [X31 + 0x80]
	0x0355B864 LDR V2, [X31 + 0xA]
	0x0355B868 LDR X9, [X31 + 0xB0]
	0x0355B86C LDR X2, [X8]
	0x0355B870 ADD X1, X31, 0x100
	0x0355B874 STP V0, V1, [X31 + 0x100]
	0x0355B878 STR V2, [X31 + 0x12]
	0x0355B87C STR X9, [X31 + 0x130]
	0x0355B880 BL 0x29914E0
	0x0355B884 LDR X0, [X24]
	0x0355B888 LDR W8, [X0 + 0xE0]
	0x0355B88C CBNZ W8, 0x355B894
	0x0355B890 BL 0x1C16DFC
	0x0355B894 LDR W8, [X20 + 0x1C]
	0x0355B898 ADD W8, W8, 0x1
	0x0355B89C STR W8, [X20 + 0x1C]
	0x0355B8A0 B 0x355B8CC
	0x0355B8A4 LDR W9, [X10]
	0x0355B8A8 ADD W9, W9, 0x1
	0x0355B8AC ADD X8, X8, W9, 0x4, SXTW
	0x0355B8B0 ADD X0, X8, 0x138
	0x0355B8B4 LDP X8, X4, [X0]
	0x0355B8B8 MOVZ W1, 0x1
	0x0355B8BC MOV X0, X21
	0x0355B8C0 MOV X2, X22
	0x0355B8C4 MOV X3, X23
	0x0355B8C8 BLR X8
	0x0355B8CC LDRB W8, [X19 + 0x100]
	0x0355B8D0 CBNZ W8, 0x355B91C
	0x0355B8D4 LDR X0, [X24]
	0x0355B8D8 LDR W8, [X0 + 0xE0]
	0x0355B8DC CBNZ W8, 0x355B8E4
	0x0355B8E0 BL 0x1C16DFC
	0x0355B8E4 MOV X0, X20
	0x0355B8E8 BL 0x3555E14
	0x0355B8EC TBNZ X0, 0x0, 0x355B91C
	0x0355B8F0 MOVZ W8, 0x1
	0x0355B8F4 STRB W8, [X19 + 0x100]
	0x0355B8F8 LDR X0, [X24]
	0x0355B8FC LDR W8, [X0 + 0xE0]
	0x0355B900 CBNZ W8, 0x355B908
	0x0355B904 BL 0x1C16DFC
	0x0355B908 LDRB W8, [X20 + 0x32]
	0x0355B90C STRB W8, [X19 + 0xE1]
	0x0355B910 STRB W8, [X19 + 0xE0]
	0x0355B914 LDRB W8, [X31 + 0x14C]
	0x0355B918 STRB W8, [X19 + 0xE2]
	0x0355B91C LDR X0, [X24]
	0x0355B920 LDR W8, [X0 + 0xE0]
	0x0355B924 CBNZ W8, 0x355B92C
	0x0355B928 BL 0x1C16DFC
	0x0355B92C MOV X0, X20
	0x0355B930 BL 0x3555E14
	0x0355B934 TBZ X0, 0x0, 0x355BAA8
	0x0355B938 LDR X8, [X19 + 0x118]
	0x0355B93C CBZ X8, 0x355B834
	0x0355B940 LDRB W9, [X31 + 0x14C]
	0x0355B944 LDR W10, [X8 + 0x18]
	0x0355B948 CMP W9, W10
	0x0355B94C B.CS 0x355BFC4
	0x0355B950 ADD X8, X8, X9, 0x2, LSL
	0x0355B954 ADD X0, X8, 0x20
	0x0355B958 MOVZ W1, 0x1
	0x0355B95C MOV X2, X31
	0x0355B960 BL 0x33E9064
	0x0355B964 CMP W0, 0x1
	0x0355B968 B.EQ 0x355B938
	0x0355B96C LDR X21, [X19 + 0x110]
	0x0355B970 CBZ X21, 0x355B834
	0x0355B974 LDR X0, [X24]
	0x0355B978 LDRB W22, [X31 + 0x14C]
	0x0355B97C LDR W8, [X0 + 0xE0]
	0x0355B980 CBNZ W8, 0x355B988
	0x0355B984 BL 0x1C16DFC
	0x0355B988 LDR W8, [X21 + 0x18]
	0x0355B98C CMP W22, W8
	0x0355B990 B.CS 0x355BFC4
	0x0355B994 MOVZ W8, 0x38
	0x0355B998 UMADDL X8, X22, X8, X21
	0x0355B99C ADD X0, X8, 0x20
	0x0355B9A0 BL 0x3555CB0
	0x0355B9A4 LDR X9, [X19 + 0x110]
	0x0355B9A8 LDP V2, V0, [X20 + 0x10]
	0x0355B9AC LDR X10, [X20 + 0x30]
	0x0355B9B0 LDR V1, [X20]
	0x0355B9B4 LDRB W8, [X31 + 0x14C]
	0x0355B9B8 STP V2, V0, [X31 + 0x110]
	0x0355B9BC STR X10, [X31 + 0x130]
	0x0355B9C0 STR V1, [X31 + 0x10]
	0x0355B9C4 CBZ X9, 0x355B834
	0x0355B9C8 LDP V0, V1, [X31 + 0x100]
	0x0355B9CC LDR V2, [X31 + 0x12]
	0x0355B9D0 LDR X10, [X31 + 0x130]
	0x0355B9D4 STP V0, V1, [X31 + 0x40]
	0x0355B9D8 STR V2, [X31 + 0x6]
	0x0355B9DC STR X10, [X31 + 0x70]
	0x0355B9E0 LDR W10, [X9 + 0x18]
	0x0355B9E4 CMP W8, W10
	0x0355B9E8 B.CS 0x355BFC4
	0x0355B9EC LDP V2, V0, [X31 + 0x50]
	0x0355B9F0 LDR X11, [X31 + 0x70]
	0x0355B9F4 LDR V1, [X31 + 0x4]
	0x0355B9F8 MOVZ W10, 0x38
	0x0355B9FC MADD X9, X8, X10, X9
	0x0355BA00 STR X11, [X9 + 0x50]
	0x0355BA04 STP V2, V0, [X9 + 0x30]
	0x0355BA08 STR V1, [X9 + 0x2]
	0x0355BA0C LDR X9, [X19 + 0x118]
	0x0355BA10 CBZ X9, 0x355B834
	0x0355BA14 LDR W10, [X9 + 0x18]
	0x0355BA18 CMP W8, W10
	0x0355BA1C B.CS 0x355BFC4
	0x0355BA20 ADD X8, X9, X8, 0x2, LSL
	0x0355BA24 ADD X0, X8, 0x20
	0x0355BA28 MOV W1, W31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xE85000
	009 Move W8, [X21+3529]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0xB99000
	017 Move X0, [X0+2504]
	018 Call 0x1C17CF4
	019 Move X0, 0xBDB000
	020 Move X0, [X0+1640]
	021 Call 0x1C17CF4
	022 Move X0, 0xBDB000
	023 Move X0, [X0+1648]
	024 Call 0x1C17CF4
	025 Move X0, 0xB9E000
	026 Move X0, [X0+840]
	027 Call 0x1C17CF4
	028 Move X0, 0xBDB000
	029 Move X0, [X0+1232]
	030 Call 0x1C17CF4
	031 Move X0, 0xBDB000
	032 Move X0, [X0+1656]
	033 Call 0x1C17CF4
	034 Move X0, 0xBDB000
	035 Move X0, [X0+1664]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+3529], W8
	039 Compare X19, 0
	040 JumpIfEqual {179}
	041 Move X0, [X20+120]
	042 Compare X0, 0
	043 JumpIfEqual {179}
	044 Move X8, 0xBDB000
	045 Move X8, [X8+1640]
	046 Move W1, [X19+128]
	047 Move X2, [X8]
	048 Call Dictionary`2<Byte, Object>.Remove, X0, X1
	049 Move X0, [X20+128]
	050 Compare X0, 0
	051 JumpIfEqual {179}
	052 Move X8, 0xBDB000
	053 Move X8, [X8+1648]
	054 Move W1, [X19+132]
	055 Move X2, [X8]
	056 Call Dictionary`2<Int32, Object>.get_Item, X0, X1
	057 Compare X0, 0
	058 JumpIfEqual {179}
	059 Move X8, 0xBDB000
	060 Move X8, [X8+1656]
	061 Move X1, X19
	062 Move X2, [X8]
	063 Call List`1<Object>.Remove, X0, X1
	064 Move X21, [X20+16]
	065 Compare X21, 0
	066 JumpIfEqual {179}
	067 Move X10, 0xBDB000
	068 Move X8, [X21]
	069 Move X10, [X10+1232]
	070 Move W22, [X19+132]
	071 NotImplemented "Instruction LDRH not yet implemented."
	072 Move X1, [X10]
	073 Compare X9, 0
	074 JumpIfEqual {81}
	075 Move X10, [X8+176]
	076 Add X10, X10, 8
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Subtract X9, X9, 1
	080 Add X10, X10, 16
	081 Move X0, X21
	082 Move W2, W31
	083 Call 0x1C5D788
	084 NotImplemented "Instruction LDRSW not yet implemented."
	085 Add X8, X8, X9
	086 Add X0, X8, 312
	087 Move X8, [X0]
	088 Move X2, [X0+8]
	089 Move X24, 0xBDB000
	090 Move X23, 0xB99000
	091 Move X24, [X24+1664]
	092 Move X23, [X23+2504]
	093 Move X0, X21
	094 Move W1, W22
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {104}
	100 Move W1, [X19+57]
	101 Move X2, [X19+64]
	102 Move X0, X19
	103 Call LocalVoice.sendVoiceRemove, X0, X1, X2
	104 Move X8, [X19]
	105 Move X0, X19
	106 Move X9, [X8+408]
	107 Move X1, [X8+416]
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move X0, [X19+208]
	110 Move X1, [X24]
	111 Move X20, [X20+24]
	112 Move X2, X31
	113 Call String.Concat, X0, X1
	114 Move X21, [X23]
	115 Move X19, X0
	116 Move X8, [X21+56]
	117 Compare X8, 0
	118 JumpIfNotEqual {122}
	119 Move X0, X21
	120 Call 0x1C5D6E0
	121 Move X8, [X21+56]
	122 Move X0, [X8+16]
	123 Move W8, [X0+309]
	124 Move TEMP, X8
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {129}
	128 Call 0x1C5D684
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move X8, [X21+56]
	134 Move X0, [X8+16]
	135 Move W8, [X0+309]
	136 Move TEMP, X8
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfEqual {141}
	140 Call 0x1C5D684
	141 Compare X20, 0
	142 JumpIfEqual {179}
	143 Move X10, 0xB9E000
	144 Move X9, [X0+184]
	145 Move X8, [X20]
	146 Move X10, [X10+840]
	147 Move X21, [X9]
	148 NotImplemented "Instruction LDRH not yet implemented."
	149 Move X1, [X10]
	150 Compare X9, 0
	151 JumpIfEqual {158}
	152 Move X10, [X8+176]
	153 Add X10, X10, 8
	154 NotImplemented "Instruction LDUR not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Subtract X9, X9, 1
	157 Add X10, X10, 16
	158 Move W2, 1
	159 Move X0, X20
	160 Call 0x1C5D788
	161 Move W9, [X10]
	162 Add W9, W9, 1
	163 Add X8, X8, W9
	164 Add X0, X8, 312
	165 Move X5, [X0]
	166 Move X4, [X0+8]
	167 Move X0, X20
	168 Move X2, X19
	169 Move X3, X21
	170 Move X20, [X31+48]
	171 Move X19, [X31+56]
	172 Move X22, [X31+32]
	173 Move X21, [X31+40]
	174 Move X24, [X31+16]
	175 Move X23, [X31+24]
	176 Move W1, 3
	177 Move X30, [X31+64]
	178 CallNoReturn X5
	179 Call 0x1C17F20

Method: System.Void clearRemoteVoices()

Disassembly:
	0x03563C8C STR X31, [X31 + 0x20]
	0x03563C90 STP V0, V0, [X31]
	0x03563C94 LDR X0, [X19 + 0x78]
	0x03563C98 CBZ X0, 0x3563D08
	0x03563C9C ADRP X8, 0xBD2000
	0x03563CA0 LDR X8, [X8 + 0x848]
	0x03563CA4 ADRP X20, 0xBD2000
	0x03563CA8 ADRP X19, 0xBD2000
	0x03563CAC LDR X1, [X8]
	0x03563CB0 LDR X20, [X20 + 0x858]
	0x03563CB4 LDR X19, [X19 + 0x850]
	0x03563CB8 ADD X8, X31, 0x0
	0x03563CBC BL 0x29D395C
	0x03563CC0 LDR X1, [X20]
	0x03563CC4 ADD X0, X31, 0x0
	0x03563CC8 BL 0x2BEA018
	0x03563CCC TBZ X0, 0x0, 0x3563CE8
	0x03563CD0 LDR X0, [X31 + 0x18]
	0x03563CD4 CBZ X0, 0x3563D04
	0x03563CD8 LDRB W1, [X0 + 0x39]
	0x03563CDC LDR X2, [X0 + 0x40]
	0x03563CE0 BL 0x35579C4
	0x03563CE4 B 0x3563CC0
	0x03563CE8 LDR X1, [X19]
	0x03563CEC ADD X0, X31, 0x0
	0x03563CF0 BL 0x2BEA130
	0x03563CF4 LDP X20, X19, [X31 + 0x40]
	0x03563CF8 LDR X30, [X31 + 0x30]
	0x03563CFC ADD X31, X31, 0x50
	0x03563D00 RET
	0x03563D04 BL 0x1C16F20
	0x03563D08 BL 0x1C16F20
	0x03563D0C B 0x3563D14
	0x03563D10 B 0x3563D14
	0x03563D14 MOV X19, X0
	0x03563D18 CMP W1, 0x1
	0x03563D1C B.NE 0x3563D50
	0x03563D20 MOV X0, X19
	0x03563D24 BL 0x3EB1AD0
	0x03563D28 LDR X20, [X0]
	0x03563D2C BL 0x3EB1AE0
	0x03563D30 ADRP X8, 0xBD2000
	0x03563D34 LDR X8, [X8 + 0x850]
	0x03563D38 ADD X0, X31, 0x0
	0x03563D3C LDR X1, [X8]
	0x03563D40 BL 0x2BEA130
	0x03563D44 CBZ X20, 0x3563CF4
	0x03563D48 MOV X0, X20
	0x03563D4C BL 0x1C16F18
	0x03563D50 MOV X20, X31
	0x03563D54 B 0x3563D5C
	0x03563D58 MOV X19, X0
	0x03563D5C ADRP X8, 0xBD2000
	0x03563D60 LDR X8, [X8 + 0x850]
	0x03563D64 LDR X1, [X8]
	0x03563D68 ADD X0, X31, 0x0
	0x03563D6C BL 0x2BEA130
	0x03563D70 CBNZ X20, 0x3563D7C
	0x03563D74 MOV X0, X19
	0x03563D78 BL 0x1D2C690
	0x03563D7C MOV X0, X20
	0x03563D80 BL 0x1C16F18
	0x03563D84 BL 0x1990590
	0x03563D88 B 0x3563060
	0x03563D8C B 0x3562C8C
	0x03563D90 SUB X31, X31, 0x50
	0x03563D94 STR X30, [X31 + 0x20]
	0x03563D98 STP X22, X21, [X31 + 0x30]
	0x03563D9C STP X20, X19, [X31 + 0x40]
	0x03563DA0 ADRP X22, 0xE7C000
	0x03563DA4 LDRB W8, [X22 + 0xDCF]
	0x03563DA8 MOV W19, W2
	0x03563DAC MOV W20, W1
	0x03563DB0 MOV X21, X0
	0x03563DB4 TBNZ X8, 0x0, 0x3563DFC
	0x03563DB8 ADRP X0, 0xBD2000
	0x03563DBC LDR X0, [X0 + 0x890]
	0x03563DC0 BL 0x1C16CF4
	0x03563DC4 ADRP X0, 0xBD2000
	0x03563DC8 LDR X0, [X0 + 0xB20]
	0x03563DCC BL 0x1C16CF4
	0x03563DD0 ADRP X0, 0xBD2000
	0x03563DD4 LDR X0, [X0 + 0xB28]
	0x03563DD8 BL 0x1C16CF4
	0x03563DDC ADRP X0, 0xBD2000
	0x03563DE0 LDR X0, [X0 + 0xB30]
	0x03563DE4 BL 0x1C16CF4
	0x03563DE8 ADRP X0, 0xBD2000
	0x03563DEC LDR X0, [X0 + 0xB38]
	0x03563DF0 BL 0x1C16CF4
	0x03563DF4 MOVZ W8, 0x1
	0x03563DF8 STRB W8, [X22 + 0xDCF]
	0x03563DFC STR X31, [X31 + 0x28]
	0x03563E00 STP X31, X31, [X31 + 0x8]
	0x03563E04 STR X31, [X31 + 0x18]
	0x03563E08 LDR X0, [X21 + 0x80]
	0x03563E0C CBZ X0, 0x3563EA0
	0x03563E10 ADRP X8, 0xBD2000
	0x03563E14 LDR X8, [X8 + 0x890]
	0x03563E18 ADD X2, X31, 0x28
	0x03563E1C MOV W1, W20
	0x03563E20 LDR X3, [X8]
	0x03563E24 BL 0x2A150AC
	0x03563E28 TBZ X0, 0x0, 0x3563E88
	0x03563E2C LDR X0, [X31 + 0x28]
	0x03563E30 CBZ X0, 0x3563EA0
	0x03563E34 ADRP X8, 0xBD2000
	0x03563E38 LDR X8, [X8 + 0xB38]
	0x03563E3C LDR X1, [X8]
	0x03563E40 ADD X8, X31, 0x8
	0x03563E44 BL 0x301CB58
	0x03563E48 ADRP X20, 0xBD2000
	0x03563E4C LDR X20, [X20 + 0xB28]
	0x03563E50 LDR X1, [X20]
	0x03563E54 ADD X0, X31, 0x8
	0x03563E58 BL 0x2BC4350
	0x03563E5C TBZ X0, 0x0, 0x3563E74
	0x03563E60 LDR X0, [X31 + 0x18]
	0x03563E64 CBZ X0, 0x3563E9C
	0x03563E68 MOV W1, W19
	0x03563E6C BL 0x3559220
	0x03563E70 B 0x3563E50
	0x03563E74 ADRP X8, 0xBD2000
	0x03563E78 LDR X8, [X8 + 0xB20]
	0x03563E7C ADD X0, X31, 0x8
	0x03563E80 LDR X1, [X8]
	0x03563E84 BL 0x2BC434C
	0x03563E88 LDP X20, X19, [X31 + 0x40]
	0x03563E8C LDP X22, X21, [X31 + 0x30]
	0x03563E90 LDR X30, [X31 + 0x20]
	0x03563E94 ADD X31, X31, 0x50
	0x03563E98 RET
	0x03563E9C BL 0x1C16F20
	0x03563EA0 BL 0x1C16F20
	0x03563EA4 B 0x3563EAC
	0x03563EA8 B 0x3563EAC
	0x03563EAC MOV X19, X0
	0x03563EB0 CMP W1, 0x1
	0x03563EB4 B.NE 0x3563EE8
	0x03563EB8 MOV X0, X19
	0x03563EBC BL 0x3EB1AD0
	0x03563EC0 LDR X20, [X0]
	0x03563EC4 BL 0x3EB1AE0
	0x03563EC8 ADRP X8, 0xBD2000
	0x03563ECC LDR X8, [X8 + 0xB20]
	0x03563ED0 ADD X0, X31, 0x8
	0x03563ED4 LDR X1, [X8]
	0x03563ED8 BL 0x2BC434C
	0x03563EDC CBZ X20, 0x3563E88
	0x03563EE0 MOV X0, X20
	0x03563EE4 BL 0x1C16F18
	0x03563EE8 MOV X20, X31
	0x03563EEC B 0x3563EF4
	0x03563EF0 MOV X19, X0
	0x03563EF4 ADRP X8, 0xBD2000
	0x03563EF8 LDR X8, [X8 + 0xB20]
	0x03563EFC LDR X1, [X8]
	0x03563F00 ADD X0, X31, 0x8
	0x03563F04 BL 0x2BC434C
	0x03563F08 CBNZ X20, 0x3563F14
	0x03563F0C MOV X0, X19
	0x03563F10 BL 0x1D2C690
	0x03563F14 MOV X0, X20
	0x03563F18 BL 0x1C16F18
	0x03563F1C BL 0x1990590
	0x03563F20 SUB X31, X31, 0x50
	0x03563F24 STP X30, X21, [X31 + 0x30]
	0x03563F28 STP X20, X19, [X31 + 0x40]
	0x03563F2C ADRP X21, 0xE7C000
	0x03563F30 LDRB W8, [X21 + 0xDD0]
	0x03563F34 MOV W19, W1
	0x03563F38 MOV X20, X0
	0x03563F3C TBNZ X8, 0x0, 0x3563F84
	0x03563F40 ADRP X0, 0xBD2000
	0x03563F44 LDR X0, [X0 + 0x848]
	0x03563F48 BL 0x1C16CF4
	0x03563F4C ADRP X0, 0xBD2000
	0x03563F50 LDR X0, [X0 + 0x850]
	0x03563F54 BL 0x1C16CF4
	0x03563F58 ADRP X0, 0xBD2000
	0x03563F5C LDR X0, [X0 + 0x858]
	0x03563F60 BL 0x1C16CF4
	0x03563F64 ADRP X0, 0xBD2000
	0x03563F68 LDR X0, [X0 + 0x860]
	0x03563F6C BL 0x1C16CF4
	0x03563F70 ADRP X0, 0xBD2000
	0x03563F74 LDR X0, [X0 + 0x868]
	0x03563F78 BL 0x1C16CF4
	0x03563F7C MOVZ W8, 0x1
	0x03563F80 STRB W8, [X21 + 0xDD0]
	0x03563F84 MOVI V0.2D, 0x0
	0x03563F88 STR X31, [X31 + 0x20]
	0x03563F8C STP V0, V0, [X31]
	0x03563F90 LDR X0, [X20 + 0x78]
	0x03563F94 CBZ X0, 0x3564000
	0x03563F98 ADRP X8, 0xBD2000
	0x03563F9C LDR X8, [X8 + 0x848]
	0x03563FA0 ADRP X21, 0xBD2000
	0x03563FA4 ADRP X20, 0xBD2000
	0x03563FA8 LDR X1, [X8]
	0x03563FAC LDR X21, [X21 + 0x858]
	0x03563FB0 LDR X20, [X20 + 0x850]
	0x03563FB4 ADD X8, X31, 0x0
	0x03563FB8 BL 0x29D395C
	0x03563FBC LDR X1, [X21]
	0x03563FC0 ADD X0, X31, 0x0
	0x03563FC4 BL 0x2BEA018
	0x03563FC8 TBZ X0, 0x0, 0x3563FE0
	0x03563FCC LDR X0, [X31 + 0x18]
	0x03563FD0 CBZ X0, 0x3563FFC
	0x03563FD4 MOV W1, W19
	0x03563FD8 BL 0x3559220
	0x03563FDC B 0x3563FBC
	0x03563FE0 LDR X1, [X20]
	0x03563FE4 ADD X0, X31, 0x0
	0x03563FE8 BL 0x2BEA130
	0x03563FEC LDP X20, X19, [X31 + 0x40]
	0x03563FF0 LDP X30, X21, [X31 + 0x30]
	0x03563FF4 ADD X31, X31, 0x50
	0x03563FF8 RET
	0x03563FFC BL 0x1C16F20
	0x03564000 BL 0x1C16F20
	0x03564004 B 0x356400C
	0x03564008 B 0x356400C
	0x0356400C MOV X19, X0
	0x03564010 CMP W1, 0x1
	0x03564014 B.NE 0x3564048
	0x03564018 MOV X0, X19
	0x0356401C BL 0x3EB1AD0
	0x03564020 LDR X20, [X0]
	0x03564024 BL 0x3EB1AE0
	0x03564028 ADRP X8, 0xBD1000
	0x0356402C LDR X8, [X8 + 0x850]
	0x03564030 ADD X0, X31, 0x0
	0x03564034 LDR X1, [X8]
	0x03564038 BL 0x2BEA130
	0x0356403C CBZ X20, 0x3563FEC
	0x03564040 MOV X0, X20
	0x03564044 BL 0x1C16F18
	0x03564048 MOV X20, X31
	0x0356404C B 0x3564054
	0x03564050 MOV X19, X0
	0x03564054 ADRP X8, 0xBD1000
	0x03564058 LDR X8, [X8 + 0x850]
	0x0356405C LDR X1, [X8]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+144], X29
	003 Move [X31+152], X30
	004 Move [X31+160], X28
	005 Move [X31+168], X27
	006 Move [X31+176], X26
	007 Move [X31+184], X25
	008 Move [X31+192], X24
	009 Move [X31+200], X23
	010 Move [X31+208], X22
	011 Move [X31+216], X21
	012 Move [X31+224], X20
	013 Move [X31+232], X19
	014 Move X20, 0xE7D000
	015 Move W8, [X20+3530]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {65}
	021 Move X0, 0xB91000
	022 Move X0, [X0+2504]
	023 Call 0x1C17CF4
	024 Move X0, 0xBD3000
	025 Move X0, [X0+2760]
	026 Call 0x1C17CF4
	027 Move X0, 0xBD3000
	028 Move X0, [X0+2224]
	029 Call 0x1C17CF4
	030 Move X0, 0xBD3000
	031 Move X0, [X0+2232]
	032 Call 0x1C17CF4
	033 Move X0, 0xBD3000
	034 Move X0, [X0+2240]
	035 Call 0x1C17CF4
	036 Move X0, 0xBD3000
	037 Move X0, [X0+2248]
	038 Call 0x1C17CF4
	039 Move X0, 0xBD3000
	040 Move X0, [X0+2256]
	041 Call 0x1C17CF4
	042 Move X0, 0xBD3000
	043 Move X0, [X0+2264]
	044 Call 0x1C17CF4
	045 Move X0, 0xBD3000
	046 Move X0, [X0+2272]
	047 Call 0x1C17CF4
	048 Move X0, 0xBD3000
	049 Move X0, [X0+2280]
	050 Call 0x1C17CF4
	051 Move X0, 0xB96000
	052 Move X0, [X0+840]
	053 Call 0x1C17CF4
	054 Move X0, 0xBD3000
	055 Move X0, [X0+2288]
	056 Call 0x1C17CF4
	057 Move X0, 0xBD3000
	058 Move X0, [X0+2296]
	059 Call 0x1C17CF4
	060 Move X0, 0xBD3000
	061 Move X0, [X0+2768]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X20+3530], W8
	065 NotImplemented "Instruction MOVI not yet implemented."
	066 Move [X31+128], X31
	067 Move [X31+80], X31
	068 Move [X31+96], V0
	069 Move [X31+104], V0
	070 Move [X31+48], V0
	071 Move [X31+56], V0
	072 Move X0, [X19+136]
	073 Compare X0, 0
	074 JumpIfEqual {247}
	075 Move X8, 0xBD3000
	076 Move X8, [X8+2224]
	077 Move X21, 0xBD3000
	078 Move X28, 0xBD3000
	079 Move X29, 0xBD3000
	080 Move X27, 0xBD3000
	081 Move X25, 0xBD3000
	082 Move X24, 0xB91000
	083 Move X21, [X21+2256]
	084 Move X28, [X28+2232]
	085 Move X29, [X29+2264]
	086 Move X27, [X27+2248]
	087 Move X25, [X25+2760]
	088 Move X24, [X24+2504]
	089 Move X1, [X8]
	090 Move X23, 0xB96000
	091 Move X22, 0xBD3000
	092 Move X26, 0xBD3000
	093 Move X23, [X23+840]
	094 Move X22, [X22+2768]
	095 Move X26, [X26+2240]
	096 Add X8, X31, 8
	097 Call Dictionary`2<Int32, Object>.GetEnumerator, X0
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 NotImplemented "Instruction LDUR not yet implemented."
	100 Move X8, [X31+40]
	101 Move [X31+96], V0
	102 Move [X31+104], V1
	103 Move [X31+128], X8
	104 Move X1, [X21]
	105 Add X0, X31, 96
	106 Call Enumerator<Int32, Object>.MoveNext, X0
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {153}
	111 Move X0, [X31+120]
	112 Compare X0, 0
	113 JumpIfEqual {246}
	114 Move X1, [X28]
	115 Add X8, X31, 8
	116 Call Dictionary`2<Byte, Object>.GetEnumerator, X0
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 Move X8, [X31+40]
	120 Move [X31+48], V0
	121 Move [X31+56], V1
	122 Move [X31+80], X8
	123 Move X1, [X29]
	124 Add X0, X31, 48
	125 Call Enumerator<Byte, Object>.MoveNext, X0
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfNotEqual {142}
	130 Move X20, [X31+72]
	131 Compare X20, 0
	132 JumpIfEqual {148}
	133 Move X8, [X20+64]
	134 Compare X8, 0
	135 JumpIfEqual {140}
	136 Move X0, [X8+64]
	137 Move X1, [X8+40]
	138 Move X9, [X8+24]
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Move X0, X20
	141 Call RemoteVoice.Dispose, X0
	142 Move X20, X31
	143 Move X1, [X27]
	144 Add X0, X31, 48
	145 Call Enumerator<Byte, Object>.Dispose, X0
	146 Compare X20, 0
	147 JumpIfEqual {104}
	148 Call 0x1C17F20
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Call 0x3EB2AD0
	151 Move X20, [X0]
	152 Call 0x3EB2AE0
	153 Move X1, [X26]
	154 Add X0, X31, 96
	155 Call Enumerator<Int32, Object>.Dispose, X0
	156 Move X0, [X19+136]
	157 Compare X0, 0
	158 JumpIfEqual {247}
	159 Move X1, [X25]
	160 Call Dictionary`2<Int32, Object>.Clear, X0
	161 Move X20, [X24]
	162 Move X19, [X19+24]
	163 Move X8, [X20+56]
	164 Compare X8, 0
	165 JumpIfNotEqual {169}
	166 Move X0, X20
	167 Call 0x1C5D6E0
	168 Move X8, [X20+56]
	169 Move X0, [X8+16]
	170 Move W8, [X0+309]
	171 Move TEMP, X8
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfEqual {176}
	175 Call 0x1C5D684
	176 Move W8, [X0+224]
	177 Compare W8, 0
	178 JumpIfNotEqual {180}
	179 Call 0x1C17DFC
	180 Move X8, [X20+56]
	181 Move X0, [X8+16]
	182 Move W8, [X0+309]
	183 Move TEMP, X8
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfEqual {188}
	187 Call 0x1C5D684
	188 Compare X19, 0
	189 JumpIfEqual {247}
	190 Move X9, [X0+184]
	191 Move X8, [X19]
	192 Move X1, [X23]
	193 Move X21, [X22]
	194 Move X20, [X9]
	195 NotImplemented "Instruction LDRH not yet implemented."
	196 Compare X9, 0
	197 JumpIfEqual {204}
	198 Move X10, [X8+176]
	199 Add X10, X10, 8
	200 NotImplemented "Instruction LDUR not yet implemented."
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Subtract X9, X9, 1
	203 Add X10, X10, 16
	204 Move W2, 1
	205 Move X0, X19
	206 Call 0x1C5D788
	207 Move W9, [X10]
	208 Add W9, W9, 1
	209 Add X8, X8, W9
	210 Add X0, X8, 312
	211 Move X8, [X0]
	212 Move X4, [X0+8]
	213 Move W1, 3
	214 Move X0, X19
	215 Move X2, X21
	216 Move X3, X20
	217 NotImplemented "Instruction BLR not yet implemented."
	218 Move X20, [X31+224]
	219 Move X19, [X31+232]
	220 Move X22, [X31+208]
	221 Move X21, [X31+216]
	222 Move X24, [X31+192]
	223 Move X23, [X31+200]
	224 Move X26, [X31+176]
	225 Move X25, [X31+184]
	226 Move X28, [X31+160]
	227 Move X27, [X31+168]
	228 Move X29, [X31+144]
	229 Move X30, [X31+152]
	230 Add X31, X31, 240
	231 Return 
	232 Move [X31], X1
	233 Move X21, X0
	234 Move X20, X31
	235 Move X1, [X27]
	236 Add X0, X31, 48
	237 Call Enumerator<Byte, Object>.Dispose, X0
	238 Move X1, [X31]
	239 Move X0, X21
	240 Compare X20, 0
	241 JumpIfEqual {250}
	242 Move X0, X20
	243 Call 0x1C17F18
	244 Move X0, X20
	245 Call 0x1C17F18
	246 Call 0x1C17F20
	247 Call 0x1C17F20
	248 Move X21, X0
	249 Move [X31], X1
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Call 0x3EB2AD0
	252 Move X20, [X0]
	253 Call 0x3EB2AE0
	254 Move X1, [X26]
	255 Add X0, X31, 96
	256 Call Enumerator<Int32, Object>.Dispose, X0
	257 Compare X20, 0
	258 JumpIfEqual {156}
	259 Move X0, X20
	260 Call 0x1C17F18
	261 Move X19, X0
	262 Move X20, X31
	263 Move X19, X0
	264 Move X1, [X26]
	265 Add X0, X31, 96
	266 Call Enumerator<Int32, Object>.Dispose, X0
	267 Compare X20, 0
	268 JumpIfNotEqual {271}
	269 Move X0, X19
	270 Call 0x1D2D690
	271 Move X0, X20
	272 Call 0x1C17F18
	273 Call 0x1991590

Method: System.Void clearRemoteVoicesInChannel(System.Int32 channelId)

Disassembly:
	0x03564060 ADD X0, X31, 0x0
	0x03564064 BL 0x2BEA130
	0x03564068 CBNZ X20, 0x3564074
	0x0356406C MOV X0, X19
	0x03564070 BL 0x1D2C690
	0x03564074 MOV X0, X20
	0x03564078 BL 0x1C16F18
	0x0356407C BL 0x1990590
	0x03564080 B 0x35636CC
	0x03564084 SUB X31, X31, 0xB0
	0x03564088 STP X30, X23, [X31 + 0x80]
	0x0356408C STP X22, X21, [X31 + 0x90]
	0x03564090 STP X20, X19, [X31 + 0xA0]
	0x03564094 ADRP X21, 0xE7B000
	0x03564098 LDRB W8, [X21 + 0xDD1]
	0x0356409C MOV W19, W1
	0x035640A0 MOV X20, X0
	0x035640A4 TBNZ X8, 0x0, 0x3564164
	0x035640A8 ADRP X0, 0xBD1000
	0x035640AC LDR X0, [X0 + 0x8B8]
	0x035640B0 BL 0x1C16CF4
	0x035640B4 ADRP X0, 0xBD1000
	0x035640B8 LDR X0, [X0 + 0xAD8]
	0x035640BC BL 0x1C16CF4
	0x035640C0 ADRP X0, 0xBD1000
	0x035640C4 LDR X0, [X0 + 0xB18]
	0x035640C8 BL 0x1C16CF4
	0x035640CC ADRP X0, 0xBD1000
	0x035640D0 LDR X0, [X0 + 0xAE0]
	0x035640D4 BL 0x1C16CF4
	0x035640D8 ADRP X0, 0xBD1000
	0x035640DC LDR X0, [X0 + 0x8C8]
	0x035640E0 BL 0x1C16CF4
	0x035640E4 ADRP X0, 0xBD1000
	0x035640E8 LDR X0, [X0 + 0xAE8]
	0x035640EC BL 0x1C16CF4
	0x035640F0 ADRP X0, 0xBD1000
	0x035640F4 LDR X0, [X0 + 0x8D8]
	0x035640F8 BL 0x1C16CF4
	0x035640FC ADRP X0, 0xBD1000
	0x03564100 LDR X0, [X0 + 0x8E0]
	0x03564104 BL 0x1C16CF4
	0x03564108 ADRP X0, 0xBD1000
	0x0356410C LDR X0, [X0 + 0xAF0]
	0x03564110 BL 0x1C16CF4
	0x03564114 ADRP X0, 0xBD1000
	0x03564118 LDR X0, [X0 + 0xAF8]
	0x0356411C BL 0x1C16CF4
	0x03564120 ADRP X0, 0xBD1000
	0x03564124 LDR X0, [X0 + 0x8F8]
	0x03564128 BL 0x1C16CF4
	0x0356412C ADRP X0, 0xB93000
	0x03564130 LDR X0, [X0 + 0x7D8]
	0x03564134 BL 0x1C16CF4
	0x03564138 ADRP X0, 0xBD1000
	0x0356413C LDR X0, [X0 + 0xB00]
	0x03564140 BL 0x1C16CF4
	0x03564144 ADRP X0, 0xB93000
	0x03564148 LDR X0, [X0 + 0x7F0]
	0x0356414C BL 0x1C16CF4
	0x03564150 ADRP X0, 0xB93000
	0x03564154 LDR X0, [X0 + 0x808]
	0x03564158 BL 0x1C16CF4
	0x0356415C MOVZ W8, 0x1
	0x03564160 STRB W8, [X21 + 0xDD1]
	0x03564164 MOVI V0.2D, 0x0
	0x03564168 STP X31, X31, [X31 + 0x70]
	0x0356416C STP X31, X31, [X31 + 0x30]
	0x03564170 STP V0, V0, [X31 + 0x50]
	0x03564174 STR X31, [X31 + 0x40]
	0x03564178 LDR X0, [X20 + 0x88]
	0x0356417C CBZ X0, 0x3564348
	0x03564180 ADRP X8, 0xBD1000
	0x03564184 LDR X8, [X8 + 0xB18]
	0x03564188 ADD X2, X31, 0x78
	0x0356418C MOV W1, W19
	0x03564190 LDR X3, [X8]
	0x03564194 BL 0x2A150AC
	0x03564198 TBZ X0, 0x0, 0x3564324
	0x0356419C ADRP X8, 0xB93000
	0x035641A0 LDR X8, [X8 + 0x808]
	0x035641A4 LDR X0, [X8]
	0x035641A8 BL 0x1C16F10
	0x035641AC ADRP X8, 0xB93000
	0x035641B0 LDR X8, [X8 + 0x7F0]
	0x035641B4 MOV X19, X0
	0x035641B8 LDR X1, [X8]
	0x035641BC BL 0x2F67714
	0x035641C0 LDR X0, [X31 + 0x78]
	0x035641C4 CBZ X0, 0x3564348
	0x035641C8 ADRP X8, 0xBD1000
	0x035641CC LDR X8, [X8 + 0x8B8]
	0x035641D0 LDR X1, [X8]
	0x035641D4 ADD X8, X31, 0x8
	0x035641D8 BL 0x29D395C
	0x035641DC LDUR V0, [X31 + 0x8]
	0x035641E0 LDUR V1, [X31 + 0x18]
	0x035641E4 LDR X8, [X31 + 0x28]
	0x035641E8 ADRP X22, 0xBD1000
	0x035641EC LDR X22, [X22 + 0x8D8]
	0x035641F0 STP V0, V1, [X31 + 0x50]
	0x035641F4 STR X8, [X31 + 0x70]
	0x035641F8 ADRP X23, 0xB93000
	0x035641FC LDR X23, [X23 + 0x7D8]
	0x03564200 LDR X1, [X22]
	0x03564204 ADD X0, X31, 0x50
	0x03564208 BL 0x2BEA018
	0x0356420C TBZ X0, 0x0, 0x3564298
	0x03564210 LDR X21, [X31 + 0x68]
	0x03564214 CBZ X21, 0x3564340
	0x03564218 LDR X8, [X21 + 0x40]
	0x0356421C LDRB W20, [X31 + 0x60]
	0x03564220 CBZ X8, 0x3564234
	0x03564224 LDR X0, [X8 + 0x40]
	0x03564228 LDR X1, [X8 + 0x28]
	0x0356422C LDR X9, [X8 + 0x18]
	0x03564230 BLR X9
	0x03564234 MOV X0, X21
	0x03564238 BL 0x355C5D8
	0x0356423C CBZ X19, 0x3564344
	0x03564240 LDR W10, [X19 + 0x1C]
	0x03564244 LDR X8, [X19 + 0x10]
	0x03564248 LDR X9, [X23]
	0x0356424C ADD W10, W10, 0x1
	0x03564250 STR W10, [X19 + 0x1C]
	0x03564254 CBZ X8, 0x356433C
	0x03564258 LDRSW X10, [X19 + 0x18]
	0x0356425C LDR W11, [X8 + 0x18]
	0x03564260 CMP W10, W11
	0x03564264 B.CS 0x356427C
	0x03564268 ADD W9, W10, 0x1
	0x0356426C ADD X8, X8, X10
	0x03564270 STR W9, [X19 + 0x18]
	0x03564274 STRB W20, [X8 + 0x20]
	0x03564278 B 0x3564200
	0x0356427C LDR X8, [X9 + 0x20]
	0x03564280 LDR X8, [X8 + 0xC0]
	0x03564284 LDR X2, [X8 + 0x70]
	0x03564288 MOV X0, X19
	0x0356428C MOV W1, W20
	0x03564290 BL 0x2F67F0C
	0x03564294 B 0x3564200
	0x03564298 ADRP X8, 0xBD1000
	0x0356429C LDR X8, [X8 + 0x8C8]
	0x035642A0 ADD X0, X31, 0x50
	0x035642A4 LDR X1, [X8]
	0x035642A8 BL 0x2BEA130
	0x035642AC CBZ X19, 0x3564348
	0x035642B0 ADRP X8, 0xBD1000
	0x035642B4 LDR X8, [X8 + 0xB00]
	0x035642B8 MOV X0, X19
	0x035642BC LDR X1, [X8]
	0x035642C0 ADD X8, X31, 0x8
	0x035642C4 BL 0x2F68AC0
	0x035642C8 LDUR V0, [X31 + 0x8]
	0x035642CC LDR X8, [X31 + 0x18]
	0x035642D0 ADRP X19, 0xBD1000
	0x035642D4 LDR X19, [X19 + 0xAE8]
	0x035642D8 STR V0, [X31 + 0x3]
	0x035642DC STR X8, [X31 + 0x40]
	0x035642E0 ADRP X20, 0xBD1000
	0x035642E4 LDR X20, [X20 + 0xAD8]
	0x035642E8 LDR X1, [X19]
	0x035642EC ADD X0, X31, 0x30
	0x035642F0 BL 0x2BB713C
	0x035642F4 TBZ X0, 0x0, 0x3564310
	0x035642F8 LDR X0, [X31 + 0x78]
	0x035642FC CBZ X0, 0x3564338
	0x03564300 LDRB W1, [X31 + 0x40]
	0x03564304 LDR X2, [X20]
	0x03564308 BL 0x29D4934
	0x0356430C B 0x35642E8
	0x03564310 ADRP X8, 0xBD1000
	0x03564314 LDR X8, [X8 + 0xAE0]
	0x03564318 ADD X0, X31, 0x30
	0x0356431C LDR X1, [X8]
	0x03564320 BL 0x2BB7138
	0x03564324 LDP X20, X19, [X31 + 0xA0]
	0x03564328 LDP X22, X21, [X31 + 0x90]
	0x0356432C LDP X30, X23, [X31 + 0x80]
	0x03564330 ADD X31, X31, 0xB0
	0x03564334 RET
	0x03564338 BL 0x1C16F20
	0x0356433C BL 0x1C16F20
	0x03564340 BL 0x1C16F20
	0x03564344 BL 0x1C16F20
	0x03564348 BL 0x1C16F20
	0x0356434C B 0x35643CC
	0x03564350 B 0x35643CC
	0x03564354 B 0x3564360
	0x03564358 B 0x3564360
	0x0356435C B 0x35643CC
	0x03564360 MOV X20, X0
	0x03564364 CMP W1, 0x1
	0x03564368 B.NE 0x356439C
	0x0356436C MOV X0, X20
	0x03564370 BL 0x3EB1AD0
	0x03564374 LDR X19, [X0]
	0x03564378 BL 0x3EB1AE0
	0x0356437C ADRP X8, 0xBD1000
	0x03564380 LDR X8, [X8 + 0xAE0]
	0x03564384 ADD X0, X31, 0x30
	0x03564388 LDR X1, [X8]
	0x0356438C BL 0x2BB7138
	0x03564390 CBZ X19, 0x3564324
	0x03564394 MOV X0, X19
	0x03564398 BL 0x1C16F18
	0x0356439C MOV X19, X31
	0x035643A0 B 0x35643A8
	0x035643A4 MOV X20, X0
	0x035643A8 ADRP X8, 0xBD1000
	0x035643AC LDR X8, [X8 + 0xAE0]
	0x035643B0 LDR X1, [X8]
	0x035643B4 ADD X0, X31, 0x30
	0x035643B8 BL 0x2BB7138
	0x035643BC CBZ X19, 0x356442C
	0x035643C0 MOV X0, X19
	0x035643C4 BL 0x1C16F18
	0x035643C8 B 0x35643CC
	0x035643CC MOV X20, X0
	0x035643D0 CMP W1, 0x1
	0x035643D4 B.NE 0x3564408
	0x035643D8 MOV X0, X20
	0x035643DC BL 0x3EB1AD0
	0x035643E0 LDR X21, [X0]
	0x035643E4 BL 0x3EB1AE0
	0x035643E8 ADRP X8, 0xBD1000
	0x035643EC LDR X8, [X8 + 0x8C8]
	0x035643F0 ADD X0, X31, 0x50
	0x035643F4 LDR X1, [X8]
	0x035643F8 BL 0x2BEA130
	0x035643FC CBZ X21, 0x35642AC
	0x03564400 MOV X0, X21
	0x03564404 BL 0x1C16F18
	0x03564408 MOV X21, X31
	0x0356440C B 0x3564414
	0x03564410 MOV X20, X0
	0x03564414 ADRP X8, 0xBD1000
	0x03564418 LDR X8, [X8 + 0x8C8]
	0x0356441C LDR X1, [X8]
	0x03564420 ADD X0, X31, 0x50
	0x03564424 BL 0x2BEA130
	0x03564428 CBNZ X21, 0x3564434
	0x0356442C MOV X0, X20
	0x03564430 BL 0x1D2C690
	0x03564434 MOV X0, X21
	0x03564438 BL 0x1C16F18
	0x0356443C BL 0x1990590
	0x03564440 SUB X31, X31, 0x1C0
	0x03564444 STR X29, [X31 + 0x160]
	0x03564448 STP X30, X27, [X31 + 0x170]
	0x0356444C STP X26, X25, [X31 + 0x180]
	0x03564450 STP X24, X23, [X31 + 0x190]
	0x03564454 STP X22, X21, [X31 + 0x1A0]
	0x03564458 STP X20, X19, [X31 + 0x1B0]
	0x0356445C ADRP X23, 0xE7B000
	0x03564460 LDRB W8, [X23 + 0xDD2]
	0x03564464 MOV X22, X5
	0x03564468 MOV W21, W2
	0x0356446C MOV W20, W1
	0x03564470 MOV X19, X0
	0x03564474 STRB W3, [X31 + 0x12C]
	0x03564478 STRB W4, [X31 + 0x128]
	0x0356447C TBNZ X8, 0x0, 0x3564590
	0x03564480 ADRP X0, 0xB8F000
	0x03564484 LDR X0, [X0 + 0x9C8]
	0x03564488 BL 0x1C16CF4
	0x0356448C ADRP X0, 0xBB8000
	0x03564490 LDR X0, [X0 + 0x428]
	0x03564494 BL 0x1C16CF4
	0x03564498 ADRP X0, 0xBD1000
	0x0356449C LDR X0, [X0 + 0xB40]
	0x035644A0 BL 0x1C16CF4
	0x035644A4 ADRP X0, 0xBD1000
	0x035644A8 LDR X0, [X0 + 0xB18]
	0x035644AC BL 0x1C16CF4
	0x035644B0 ADRP X0, 0xBD1000
	0x035644B4 LDR X0, [X0 + 0xB48]
	0x035644B8 BL 0x1C16CF4
	0x035644BC ADRP X0, 0xBD1000
	0x035644C0 LDR X0, [X0 + 0xB50]
	0x035644C4 BL 0x1C16CF4
	0x035644C8 ADRP X0, 0xBD1000
	0x035644CC LDR X0, [X0 + 0xB58]
	0x035644D0 BL 0x1C16CF4
	0x035644D4 ADRP X0, 0xBD1000
	0x035644D8 LDR X0, [X0 + 0xB60]
	0x035644DC BL 0x1C16CF4
	0x035644E0 ADRP X0, 0xBD1000
	0x035644E4 LDR X0, [X0 + 0xB68]
	0x035644E8 BL 0x1C16CF4
	0x035644EC ADRP X0, 0xB94000
	0x035644F0 LDR X0, [X0 + 0x348]
	0x035644F4 BL 0x1C16CF4
	0x035644F8 ADRP X0, 0xBD1000
	0x035644FC LDR X0, [X0 + 0x750]
	0x03564500 BL 0x1C16CF4
	0x03564504 ADRP X0, 0xB8F000
	0x03564508 LDR X0, [X0 + 0xAC8]
	0x0356450C BL 0x1C16CF4
	0x03564510 ADRP X0, 0xBD1000
	0x03564514 LDR X0, [X0 + 0x528]
	0x03564518 BL 0x1C16CF4
	0x0356451C ADRP X0, 0xBD1000
	0x03564520 LDR X0, [X0 + 0x540]
	0x03564524 BL 0x1C16CF4
	0x03564528 ADRP X0, 0xBD1000
	0x0356452C LDR X0, [X0 + 0xB70]
	0x03564530 BL 0x1C16CF4
	0x03564534 ADRP X0, 0xBD1000
	0x03564538 LDR X0, [X0 + 0xB78]
	0x0356453C BL 0x1C16CF4
	0x03564540 ADRP X0, 0xBD1000
	0x03564544 LDR X0, [X0 + 0xB80]
	0x03564548 BL 0x1C16CF4
	0x0356454C ADRP X0, 0xBD1000
	0x03564550 LDR X0, [X0 + 0xB88]
	0x03564554 BL 0x1C16CF4
	0x03564558 ADRP X0, 0xBD1000
	0x0356455C LDR X0, [X0 + 0x550]
	0x03564560 BL 0x1C16CF4
	0x03564564 ADRP X0, 0xBD1000
	0x03564568 LDR X0, [X0 + 0xB90]
	0x0356456C BL 0x1C16CF4
	0x03564570 ADRP X0, 0xBD1000
	0x03564574 LDR X0, [X0 + 0xB98]
	0x03564578 BL 0x1C16CF4
	0x0356457C ADRP X0, 0xBD1000
	0x03564580 LDR X0, [X0 + 0x4E8]
	0x03564584 BL 0x1C16CF4
	0x03564588 MOVZ W8, 0x1
	0x0356458C STRB W8, [X23 + 0xDD2]
	0x03564590 MOVI V0.2D, 0x0
	0x03564594 STR W31, [X31 + 0xCC]
	0x03564598 STP V0, V0, [X31 + 0x100]
	0x0356459C STP V0, V0, [X31 + 0xE0]
	0x035645A0 STR V0, [X31 + 0xD]
	0x035645A4 STR X31, [X31 + 0x120]
	0x035645A8 LDR X0, [X19 + 0x88]
	0x035645AC CBZ X0, 0x3564B9C
	0x035645B0 ADRP X8, 0xBD1000
	0x035645B4 LDR X8, [X8 + 0xB18]
	0x035645B8 ADD X2, X31, 0x120
	0x035645BC MOV W1, W21
	0x035645C0 LDR X3, [X8]
	0x035645C4 BL 0x2A150AC
	0x035645C8 TBNZ X0, 0x0, 0x3564614
	0x035645CC ADRP X8, 0xBD1000
	0x035645D0 LDR X8, [X8 + 0xB68]
	0x035645D4 LDR X0, [X8]
	0x035645D8 BL 0x1C16F10
	0x035645DC ADRP X8, 0xBD1000
	0x035645E0 LDR X8, [X8 + 0xB50]
	0x035645E4 MOV X23, X0
	0x035645E8 LDR X1, [X8]
	0x035645EC BL 0x29D2C7C
	0x035645F0 STR X23, [X31 + 0x120]
	0x035645F4 LDR X0, [X19 + 0x88]
	0x035645F8 CBZ X0, 0x3564B9C
	0x035645FC ADRP X8, 0xBD1000
	0x03564600 LDR X8, [X8 + 0xB58]
	0x03564604 MOV W1, W21
	0x03564608 MOV X2, X23
	0x0356460C LDR X3, [X8]
	0x03564610 BL 0x2A13678
	0x03564614 LDR X0, [X31 + 0x120]
	0x03564618 CBZ X0, 0x3564B9C
	0x0356461C ADRP X8, 0xBD1000
	0x03564620 LDR X8, [X8 + 0xB40]
	0x03564624 LDRB W1, [X31 + 0x12C]
	0x03564628 LDR X2, [X8]
	0x0356462C BL 0x29D3728
	0x03564630 TBZ X0, 0x0, 0x35647AC
	0x03564634 LDRB W8, [X19 + 0x54]
	0x03564638 CBNZ W8, 0x3564B78
	0x0356463C ADRP X8, 0xB8F000
	0x03564640 LDR X22, [X19 + 0x18]
	0x03564644 LDR X8, [X8 + 0xAC8]
	0x03564648 MOVZ W1, 0x6
	0x0356464C LDR X0, [X8]
	0x03564650 BL 0x1C16D6C
	0x03564654 CBZ X0, 0x3564B9C
	0x03564658 LDR W8, [X0 + 0x18]
	0x0356465C MOV X23, X0
	0x03564660 CBZ W8, 0x3564B98
	0x03564664 ADRP X8, 0xBD1000
	0x03564668 LDR X8, [X8 + 0xB90]
	0x0356466C ADD X0, X31, 0x12C
	0x03564670 MOV X1, X31
	0x03564674 LDR X8, [X8]
	0x03564678 STR X8, [X23 + 0x20]
	0x0356467C BL 0x3319BB4
	0x03564680 LDR W8, [X23 + 0x18]
	0x03564684 CMP W8, 0x1
	0x03564688 B.LS 0x3564B98
	0x0356468C CMP W8, 0x2
	0x03564690 STR X0, [X23 + 0x28]
	0x03564694 B.EQ 0x3564B98
	0x03564698 ADRP X8, 0xBD1000
	0x0356469C LDR X8, [X8 + 0xB80]
	0x035646A0 MOV X0, X19
	0x035646A4 MOV W1, W21
	0x035646A8 LDR X8, [X8]
	0x035646AC STR X8, [X23 + 0x30]
	0x035646B0 BL 0x3564BA0
	0x035646B4 LDR W8, [X23 + 0x18]
	0x035646B8 CMP W8, 0x3
	0x035646BC B.LS 0x3564B98
	0x035646C0 CMP W8, 0x4
	0x035646C4 STR X0, [X23 + 0x38]
	0x035646C8 B.EQ 0x3564B98

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+192], X29
	003 Move [X31+200], X30
	004 Move [X31+208], X28
	005 Move [X31+216], X27
	006 Move [X31+224], X26
	007 Move [X31+232], X25
	008 Move [X31+240], X24
	009 Move [X31+248], X23
	010 Move [X31+256], X22
	011 Move [X31+264], X21
	012 Move [X31+272], X20
	013 Move [X31+280], X19
	014 Move X20, 0xE7C000
	015 Move W8, [X20+3531]
	016 Move W19, W1
	017 Move X22, X0
	018 Add X21, X31, 144
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {94}
	023 Move X0, 0xB90000
	024 Move X0, [X0+2504]
	025 Call 0x1C17CF4
	026 Move X0, 0xBD2000
	027 Move X0, [X0+2224]
	028 Call 0x1C17CF4
	029 Move X0, 0xBD2000
	030 Move X0, [X0+2232]
	031 Call 0x1C17CF4
	032 Move X0, 0xBD2000
	033 Move X0, [X0+2776]
	034 Call 0x1C17CF4
	035 Move X0, 0xBD2000
	036 Move X0, [X0+2784]
	037 Call 0x1C17CF4
	038 Move X0, 0xBD2000
	039 Move X0, [X0+2240]
	040 Call 0x1C17CF4
	041 Move X0, 0xBD2000
	042 Move X0, [X0+2248]
	043 Call 0x1C17CF4
	044 Move X0, 0xBD2000
	045 Move X0, [X0+2256]
	046 Call 0x1C17CF4
	047 Move X0, 0xBD2000
	048 Move X0, [X0+2792]
	049 Call 0x1C17CF4
	050 Move X0, 0xBD2000
	051 Move X0, [X0+2264]
	052 Call 0x1C17CF4
	053 Move X0, 0xBD2000
	054 Move X0, [X0+2272]
	055 Call 0x1C17CF4
	056 Move X0, 0xBD2000
	057 Move X0, [X0+2800]
	058 Call 0x1C17CF4
	059 Move X0, 0xBD2000
	060 Move X0, [X0+2280]
	061 Call 0x1C17CF4
	062 Move X0, 0xB95000
	063 Move X0, [X0+840]
	064 Call 0x1C17CF4
	065 Move X0, 0xBD2000
	066 Move X0, [X0+2808]
	067 Call 0x1C17CF4
	068 Move X0, 0xBD2000
	069 Move X0, [X0+2288]
	070 Call 0x1C17CF4
	071 Move X0, 0xBD2000
	072 Move X0, [X0+2296]
	073 Call 0x1C17CF4
	074 Move X0, 0xB94000
	075 Move X0, [X0+2008]
	076 Call 0x1C17CF4
	077 Move X0, 0xBD2000
	078 Move X0, [X0+2816]
	079 Call 0x1C17CF4
	080 Move X0, 0xB94000
	081 Move X0, [X0+2032]
	082 Call 0x1C17CF4
	083 Move X0, 0xB94000
	084 Move X0, [X0+2056]
	085 Call 0x1C17CF4
	086 Move X0, 0xBD2000
	087 Move X0, [X0+2824]
	088 Call 0x1C17CF4
	089 Move X0, 0xBD2000
	090 Move X0, [X0+2832]
	091 Call 0x1C17CF4
	092 Move W8, 1
	093 Move [X20+3531], W8
	094 NotImplemented "Instruction MOVI not yet implemented."
	095 Move [X31+176], X31
	096 Move [X31+128], X31
	097 Move [X31+64], X31
	098 Move [X31+72], X31
	099 Move [X21+1], V0
	100 Move [X31+9], V0
	101 Move [X31+96], V0
	102 Move [X31+104], V0
	103 Move [X31+80], X31
	104 Move X0, [X22+136]
	105 Move [X31+16], X22
	106 Compare X0, 0
	107 JumpIfEqual {394}
	108 Move X8, 0xBD2000
	109 Move X8, [X8+2224]
	110 Move X27, 0xBD2000
	111 Move X20, 0xBD2000
	112 Move X26, 0xBD2000
	113 Move X25, 0xB94000
	114 Move X28, 0xBD2000
	115 Move X29, 0xBD2000
	116 Move X27, [X27+2256]
	117 Move X20, [X20+2232]
	118 Move X26, [X26+2264]
	119 Move X25, [X25+2008]
	120 Move X28, [X28+2792]
	121 Move X29, [X29+2776]
	122 Move X1, [X8]
	123 Add X8, X31, 24
	124 Call Dictionary`2<Int32, Object>.GetEnumerator, X0
	125 NotImplemented "Instruction LDUR not yet implemented."
	126 NotImplemented "Instruction LDUR not yet implemented."
	127 Move X8, [X31+56]
	128 Move [X31+9], V0
	129 Move [X21+1], V1
	130 Move [X31+176], X8
	131 Move X1, [X27]
	132 Add X0, X31, 144
	133 Call Enumerator<Int32, Object>.MoveNext, X0
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfNotEqual {259}
	138 Move X8, 0xB94000
	139 Move X21, [X31+168]
	140 Move X8, [X8+2056]
	141 Move X0, [X8]
	142 Call 0x1C17F10
	143 Move X8, 0xB94000
	144 Move X8, [X8+2032]
	145 Move X22, X0
	146 Move X1, [X8]
	147 Call List`1<Byte>..ctor, X0
	148 Compare X21, 0
	149 JumpIfEqual {388}
	150 Move X1, [X20]
	151 Add X8, X31, 24
	152 Move X0, X21
	153 Call Dictionary`2<Byte, Object>.GetEnumerator, X0
	154 NotImplemented "Instruction LDUR not yet implemented."
	155 NotImplemented "Instruction LDUR not yet implemented."
	156 Move X8, [X31+56]
	157 Move [X31+96], V0
	158 Move [X31+104], V1
	159 Move [X31+128], X8
	160 Move X1, [X26]
	161 Add X0, X31, 96
	162 Call Enumerator<Byte, Object>.MoveNext, X0
	163 Move TEMP, X0
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfNotEqual {204}
	167 Move X24, [X31+120]
	168 Compare X24, 0
	169 JumpIfEqual {247}
	170 Move W8, [X24+144]
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move X8, [X24+64]
	173 Move W23, [X31+112]
	174 Compare X8, 0
	175 JumpIfEqual {180}
	176 Move X0, [X8+64]
	177 Move X1, [X8+40]
	178 Move X9, [X8+24]
	179 NotImplemented "Instruction BLR not yet implemented."
	180 Move X0, X24
	181 Call RemoteVoice.Dispose, X0
	182 Compare X22, 0
	183 JumpIfEqual {248}
	184 Move W10, [X22+28]
	185 Move X8, [X22+16]
	186 Move X9, [X25]
	187 Add W10, W10, 1
	188 Move [X22+28], W10
	189 Compare X8, 0
	190 JumpIfEqual {249}
	191 NotImplemented "Instruction LDRSW not yet implemented."
	192 Move W11, [X8+24]
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Add W9, W10, 1
	195 Add X8, X8, X10
	196 Move [X22+24], W9
	197 Move [X8+32], W23
	198 Move X8, [X9+32]
	199 Move X8, [X8+192]
	200 Move X2, [X8+112]
	201 Move X0, X22
	202 Move W1, W23
	203 Call List`1<Byte>.AddWithResize, X0, X1
	204 Move X23, X31
	205 Move W24, 6
	206 Move X8, 0xBD2000
	207 Move X8, [X8+2248]
	208 Move X1, [X8]
	209 Add X0, X31, 96
	210 Call Enumerator<Byte, Object>.Dispose, X0
	211 Compare X23, 0
	212 JumpIfNotEqual {389}
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Compare W24, 0
	215 JumpIfNotEqual {328}
	216 Compare X22, 0
	217 JumpIfEqual {393}
	218 Move X8, 0xBD2000
	219 Move X8, [X8+2816]
	220 Move X1, [X8]
	221 Add X8, X31, 24
	222 Move X0, X22
	223 Call List`1<Byte>.GetEnumerator, X0
	224 NotImplemented "Instruction LDUR not yet implemented."
	225 Move X8, [X31+40]
	226 Move [X31+4], V0
	227 Move [X31+80], X8
	228 Move X1, [X28]
	229 Add X0, X31, 64
	230 Call Enumerator<Byte>.MoveNext, X0
	231 Move TEMP, X0
	232 And TEMP, TEMP, 1
	233 Compare TEMP, 1
	234 JumpIfNotEqual {239}
	235 Move W1, [X31+80]
	236 Move X2, [X29]
	237 Move X0, X21
	238 Call Dictionary`2<Byte, Object>.Remove, X0, X1
	239 Move X21, X31
	240 Move X8, 0xBD2000
	241 Move X8, [X8+2784]
	242 Move X1, [X8]
	243 Add X0, X31, 64
	244 Call Enumerator<Byte>.Dispose, X0
	245 Compare X21, 0
	246 JumpIfEqual {131}
	247 Call 0x1C17F20
	248 Call 0x1C17F20
	249 Call 0x1C17F20
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Call 0x3EB2AD0
	252 Move X21, [X0]
	253 Call 0x3EB2AE0
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Call 0x3EB2AD0
	256 Move X23, [X0]
	257 Call 0x3EB2AE0
	258 Move W24, W31
	259 Move X8, 0xBD2000
	260 Move X8, [X8+2240]
	261 Add X0, X31, 144
	262 Move X1, [X8]
	263 Call Enumerator<Int32, Object>.Dispose, X0
	264 Move X20, [X31+16]
	265 Move X21, [X20+24]
	266 Move X0, X20
	267 Move W1, W19
	268 Call VoiceClient.channelStr, X0, X1
	269 Move X8, 0xBD2000
	270 Move X8, [X8+2832]
	271 Move X9, 0xBD2000
	272 Move X1, X0
	273 Move X3, X31
	274 Move X8, [X8]
	275 Move X9, [X9+2824]
	276 Move X0, X8
	277 Move X2, [X9]
	278 Call String.Concat, X0, X1, X2
	279 Move X8, 0xB90000
	280 Move X8, [X8+2504]
	281 Move X19, X0
	282 Move X20, [X8]
	283 Move X8, [X20+56]
	284 Compare X8, 0
	285 JumpIfNotEqual {289}
	286 Move X0, X20
	287 Call 0x1C5D6E0
	288 Move X8, [X20+56]
	289 Move X0, [X8+16]
	290 Move W8, [X0+309]
	291 Move TEMP, X8
	292 And TEMP, TEMP, 1
	293 Compare TEMP, 1
	294 JumpIfEqual {296}
	295 Call 0x1C5D684
	296 Move W8, [X0+224]
	297 Compare W8, 0
	298 JumpIfNotEqual {300}
	299 Call 0x1C17DFC
	300 Move X8, [X20+56]
	301 Move X0, [X8+16]
	302 Move W8, [X0+309]
	303 Move TEMP, X8
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfEqual {308}
	307 Call 0x1C5D684
	308 Compare X21, 0
	309 JumpIfEqual {394}
	310 Move X9, [X0+184]
	311 Move X8, [X21]
	312 Move X10, 0xB95000
	313 Move X20, [X9]
	314 NotImplemented "Instruction LDRH not yet implemented."
	315 Move X10, [X10+840]
	316 Move X1, [X10]
	317 Compare X9, 0
	318 JumpIfEqual {325}
	319 Move X10, [X8+176]
	320 Add X10, X10, 8
	321 NotImplemented "Instruction LDUR not yet implemented."
	322 NotImplemented "Instruction CMP not yet implemented."
	323 Subtract X9, X9, 1
	324 Add X10, X10, 16
	325 Move W2, 1
	326 Move X0, X21
	327 Call 0x1C5D788
	328 Move X8, 0xBD2000
	329 Move X8, [X8+2240]
	330 Add X0, X31, 144
	331 Move X1, [X8]
	332 Call Enumerator<Int32, Object>.Dispose, X0
	333 Move W9, [X10]
	334 Add W9, W9, 1
	335 Add X8, X8, W9
	336 Add X0, X8, 312
	337 Move X8, [X0]
	338 Move X4, [X0+8]
	339 Move W1, 3
	340 Move X0, X21
	341 Move X2, X19
	342 Move X3, X20
	343 NotImplemented "Instruction BLR not yet implemented."
	344 Move X20, [X31+272]
	345 Move X19, [X31+280]
	346 Move X22, [X31+256]
	347 Move X21, [X31+264]
	348 Move X24, [X31+240]
	349 Move X23, [X31+248]
	350 Move X26, [X31+224]
	351 Move X25, [X31+232]
	352 Move X28, [X31+208]
	353 Move X27, [X31+216]
	354 Move X29, [X31+192]
	355 Move X30, [X31+200]
	356 Add X31, X31, 288
	357 Return 
	358 Move X21, X1
	359 Move X22, X0
	360 Move X23, X31
	361 Move X8, 0xBD2000
	362 Move X8, [X8+2248]
	363 Move X1, [X8]
	364 Add X0, X31, 96
	365 Call Enumerator<Byte, Object>.Dispose, X0
	366 Move X20, [X31+16]
	367 Move X0, X22
	368 Move X1, X21
	369 Compare X23, 0
	370 JumpIfEqual {400}
	371 Move X0, X23
	372 Call 0x1C17F18
	373 Move X22, X1
	374 Move X23, X0
	375 Move X21, X31
	376 Move X8, 0xBD2000
	377 Move X8, [X8+2784]
	378 Move X1, [X8]
	379 Add X0, X31, 64
	380 Call Enumerator<Byte>.Dispose, X0
	381 Move X20, [X31+16]
	382 Move X0, X23
	383 Move X1, X22
	384 Compare X21, 0
	385 JumpIfEqual {400}
	386 Move X0, X21
	387 Call 0x1C17F18
	388 Call 0x1C17F20
	389 Move X0, X23
	390 Call 0x1C17F18
	391 Move X0, X21
	392 Call 0x1C17F18
	393 Call 0x1C17F20
	394 Call 0x1C17F20
	395 Move X22, X1
	396 Move X23, X0
	397 Move X21, X1
	398 Move X22, X0
	399 Move X20, [X31+16]
	400 NotImplemented "Instruction CMP not yet implemented."
	401 Call 0x3EB2AD0
	402 Move X21, [X0]
	403 Call 0x3EB2AE0
	404 Move X8, 0xBD2000
	405 Move X8, [X8+2240]
	406 Add X0, X31, 144
	407 Move X1, [X8]
	408 Call Enumerator<Int32, Object>.Dispose, X0
	409 Compare X21, 0
	410 JumpIfEqual {265}
	411 Move X0, X21
	412 Call 0x1C17F18
	413 Move X19, X0
	414 Move X21, X31
	415 Move X19, X0
	416 Move X8, 0xBD2000
	417 Move X8, [X8+2240]
	418 Move X1, [X8]
	419 Add X0, X31, 144
	420 Call Enumerator<Int32, Object>.Dispose, X0
	421 Compare X21, 0
	422 JumpIfNotEqual {425}
	423 Move X0, X19
	424 Call 0x1D2D690
	425 Move X0, X21
	426 Call 0x1C17F18
	427 Call 0x1991590

Method: System.Void clearRemoteVoicesInChannelForPlayer(System.Int32 channelId, System.Int32 playerId)

Disassembly:
	0x035646CC ADRP X8, 0xBD1000
	0x035646D0 LDR X8, [X8 + 0xB98]
	0x035646D4 MOV X0, X19
	0x035646D8 MOV W1, W20
	0x035646DC LDR X8, [X8]
	0x035646E0 STR X8, [X23 + 0x40]
	0x035646E4 BL 0x3558864
	0x035646E8 LDR W8, [X23 + 0x18]
	0x035646EC CMP W8, 0x5
	0x035646F0 B.LS 0x3564B98
	0x035646F4 STR X0, [X23 + 0x48]
	0x035646F8 MOV X0, X23
	0x035646FC MOV X1, X31
	0x03564700 BL 0x32278CC
	0x03564704 ADRP X8, 0xB8F000
	0x03564708 LDR X8, [X8 + 0x9C8]
	0x0356470C MOV X19, X0
	0x03564710 LDR X20, [X8]
	0x03564714 LDR X8, [X20 + 0x38]
	0x03564718 CBNZ X8, 0x3564728
	0x0356471C MOV X0, X20
	0x03564720 BL 0x1C5C6E0
	0x03564724 LDR X8, [X20 + 0x38]
	0x03564728 LDR X0, [X8 + 0x10]
	0x0356472C LDRB W8, [X0 + 0x135]
	0x03564730 TBNZ X8, 0x0, 0x3564738
	0x03564734 BL 0x1C5C684
	0x03564738 LDR W8, [X0 + 0xE0]
	0x0356473C CBNZ W8, 0x3564744
	0x03564740 BL 0x1C16DFC
	0x03564744 LDR X8, [X20 + 0x38]
	0x03564748 LDR X0, [X8 + 0x10]
	0x0356474C LDRB W8, [X0 + 0x135]
	0x03564750 TBNZ X8, 0x0, 0x3564758
	0x03564754 BL 0x1C5C684
	0x03564758 CBZ X22, 0x3564B9C
	0x0356475C ADRP X10, 0xB94000
	0x03564760 LDR X9, [X0 + 0xB8]
	0x03564764 LDR X8, [X22]
	0x03564768 LDR X10, [X10 + 0x348]
	0x0356476C LDR X20, [X9]
	0x03564770 LDRH W9, [X8 + 0x12E]
	0x03564774 LDR X1, [X10]
	0x03564778 CBZ X9, 0x356479C
	0x0356477C LDR X10, [X8 + 0xB0]
	0x03564780 ADD X10, X10, 0x8
	0x03564784 LDUR X11, [X10 - 0x8]
	0x03564788 CMP X11, X1
	0x0356478C B.EQ 0x3564B50
	0x03564790 SUBS X9, X9, 0x1
	0x03564794 ADD X10, X10, 0x10
	0x03564798 B.NE 0x3564784
	0x0356479C MOVZ W2, 0x1
	0x035647A0 MOV X0, X22
	0x035647A4 BL 0x1C5C788
	0x035647A8 B 0x3564B60
	0x035647AC ADRP X25, 0xB8F000
	0x035647B0 LDR X25, [X25 + 0xAC8]
	0x035647B4 MOVZ W1, 0x6
	0x035647B8 LDR X0, [X25]
	0x035647BC BL 0x1C16D6C
	0x035647C0 CBZ X0, 0x3564B9C
	0x035647C4 LDR W8, [X0 + 0x18]
	0x035647C8 MOV X23, X0
	0x035647CC CBZ W8, 0x3564B98
	0x035647D0 ADRP X8, 0xBD1000
	0x035647D4 LDR X8, [X8 + 0xB78]
	0x035647D8 MOV X0, X19
	0x035647DC MOV W1, W21
	0x035647E0 LDR X8, [X8]
	0x035647E4 STR X8, [X23 + 0x20]
	0x035647E8 BL 0x3564BA0
	0x035647EC LDR W8, [X23 + 0x18]
	0x035647F0 CMP W8, 0x1
	0x035647F4 B.LS 0x3564B98
	0x035647F8 CMP W8, 0x2
	0x035647FC STR X0, [X23 + 0x28]
	0x03564800 B.EQ 0x3564B98
	0x03564804 ADRP X8, 0xBD1000
	0x03564808 LDR X8, [X8 + 0x540]
	0x0356480C ADD X0, X31, 0x12C
	0x03564810 MOV X1, X31
	0x03564814 LDR X8, [X8]
	0x03564818 STR X8, [X23 + 0x30]
	0x0356481C BL 0x3319BB4
	0x03564820 LDR W8, [X23 + 0x18]
	0x03564824 CMP W8, 0x3
	0x03564828 B.LS 0x3564B98
	0x0356482C CMP W8, 0x4
	0x03564830 STR X0, [X23 + 0x38]
	0x03564834 B.EQ 0x3564B98
	0x03564838 ADRP X8, 0xBD1000
	0x0356483C LDR X8, [X8 + 0x550]
	0x03564840 MOV X0, X19
	0x03564844 MOV W1, W20
	0x03564848 LDR X8, [X8]
	0x0356484C STR X8, [X23 + 0x40]
	0x03564850 BL 0x3558864
	0x03564854 LDR W8, [X23 + 0x18]
	0x03564858 CMP W8, 0x5
	0x0356485C B.LS 0x3564B98
	0x03564860 STR X0, [X23 + 0x48]
	0x03564864 MOV X0, X23
	0x03564868 MOV X1, X31
	0x0356486C BL 0x32278CC
	0x03564870 LDR X8, [X25]
	0x03564874 LDR X24, [X19 + 0x18]
	0x03564878 MOV X23, X0
	0x0356487C MOVZ W1, 0x6
	0x03564880 MOV X0, X8
	0x03564884 BL 0x1C16D6C
	0x03564888 CBZ X0, 0x3564B9C
	0x0356488C LDR W8, [X0 + 0x18]
	0x03564890 MOV X25, X0
	0x03564894 CBZ W8, 0x3564B98
	0x03564898 ADRP X9, 0xBD1000
	0x0356489C LDR X9, [X9 + 0x528]
	0x035648A0 CMP W8, 0x1
	0x035648A4 LDR X9, [X9]
	0x035648A8 STR X9, [X25 + 0x20]
	0x035648AC B.EQ 0x3564B98
	0x035648B0 CMP W8, 0x2
	0x035648B4 STR X23, [X25 + 0x28]
	0x035648B8 B.LS 0x3564B98
	0x035648BC ADRP X8, 0xBD1000
	0x035648C0 LDR X8, [X8 + 0xB70]
	0x035648C4 MOV X0, X22
	0x035648C8 LDR X8, [X8]
	0x035648CC STR X8, [X25 + 0x30]
	0x035648D0 BL 0x3559520
	0x035648D4 LDR W8, [X25 + 0x18]
	0x035648D8 CMP W8, 0x3
	0x035648DC B.LS 0x3564B98
	0x035648E0 CMP W8, 0x4
	0x035648E4 STR X0, [X25 + 0x38]
	0x035648E8 B.EQ 0x3564B98
	0x035648EC ADRP X8, 0xBD1000
	0x035648F0 LDR X8, [X8 + 0x4E8]
	0x035648F4 ADD X0, X31, 0x128
	0x035648F8 MOV X1, X31
	0x035648FC LDR X8, [X8]
	0x03564900 STR X8, [X25 + 0x40]
	0x03564904 BL 0x3319BB4
	0x03564908 LDR W8, [X25 + 0x18]
	0x0356490C CMP W8, 0x5
	0x03564910 B.LS 0x3564B98
	0x03564914 STR X0, [X25 + 0x48]
	0x03564918 MOV X0, X25
	0x0356491C MOV X1, X31
	0x03564920 BL 0x32278CC
	0x03564924 ADRP X8, 0xB8F000
	0x03564928 LDR X8, [X8 + 0x9C8]
	0x0356492C MOV X25, X0
	0x03564930 LDR X26, [X8]
	0x03564934 LDR X8, [X26 + 0x38]
	0x03564938 CBNZ X8, 0x3564948
	0x0356493C MOV X0, X26
	0x03564940 BL 0x1C5C6E0
	0x03564944 LDR X8, [X26 + 0x38]
	0x03564948 LDR X0, [X8 + 0x10]
	0x0356494C LDRB W8, [X0 + 0x135]
	0x03564950 TBNZ X8, 0x0, 0x3564958
	0x03564954 BL 0x1C5C684
	0x03564958 LDR W8, [X0 + 0xE0]
	0x0356495C CBNZ W8, 0x3564964
	0x03564960 BL 0x1C16DFC
	0x03564964 LDR X8, [X26 + 0x38]
	0x03564968 LDR X0, [X8 + 0x10]
	0x0356496C LDRB W8, [X0 + 0x135]
	0x03564970 TBNZ X8, 0x0, 0x3564978
	0x03564974 BL 0x1C5C684
	0x03564978 CBZ X24, 0x3564B9C
	0x0356497C ADRP X10, 0xB94000
	0x03564980 LDR X9, [X0 + 0xB8]
	0x03564984 LDR X8, [X24]
	0x03564988 LDR X10, [X10 + 0x348]
	0x0356498C ADD X27, X31, 0xD0
	0x03564990 LDR X26, [X9]
	0x03564994 LDRH W9, [X8 + 0x12E]
	0x03564998 LDR X1, [X10]
	0x0356499C CBZ X9, 0x35649C0
	0x035649A0 LDR X10, [X8 + 0xB0]
	0x035649A4 ADD X10, X10, 0x8
	0x035649A8 LDUR X11, [X10 - 0x8]
	0x035649AC CMP X11, X1
	0x035649B0 B.EQ 0x35649D0
	0x035649B4 SUBS X9, X9, 0x1
	0x035649B8 ADD X10, X10, 0x10
	0x035649BC B.NE 0x35649A8
	0x035649C0 MOVZ W2, 0x1
	0x035649C4 MOV X0, X24
	0x035649C8 BL 0x1C5C788
	0x035649CC B 0x35649E0
	0x035649D0 LDR W9, [X10]
	0x035649D4 ADD W9, W9, 0x1
	0x035649D8 ADD X8, X8, W9, 0x4, SXTW
	0x035649DC ADD X0, X8, 0x138
	0x035649E0 LDP X8, X4, [X0]
	0x035649E4 MOVZ W1, 0x3
	0x035649E8 MOV X0, X24
	0x035649EC MOV X2, X25
	0x035649F0 MOV X3, X26
	0x035649F4 BLR X8
	0x035649F8 ADRP X8, 0xBB8000
	0x035649FC LDR X8, [X8 + 0x428]
	0x03564A00 LDR W9, [X22]
	0x03564A04 MOVN X10, 0x0
	0x03564A08 ADD X0, X31, 0x130
	0x03564A0C LDR X8, [X8]
	0x03564A10 MOV X1, X31
	0x03564A14 STR W9, [X31 + 0x140]
	0x03564A18 STP X8, X10, [X31 + 0x130]
	0x03564A1C BL 0x33B162C
	0x03564A20 ADRP X8, 0xBD1000
	0x03564A24 LDR X8, [X8 + 0xB88]
	0x03564A28 MOV X1, X0
	0x03564A2C MOV X2, X23
	0x03564A30 MOV X3, X31
	0x03564A34 LDR X8, [X8]
	0x03564A38 MOV X0, X8
	0x03564A3C BL 0x32274B8
	0x03564A40 LDP V1, V0, [X22 + 0x10]
	0x03564A44 LDR V2, [X22]
	0x03564A48 LDR X8, [X19 + 0x18]
	0x03564A4C STUR V0, [X27 + 0x38]
	0x03564A50 STUR V1, [X27 + 0x28]
	0x03564A54 STUR V2, [X27 + 0x18]
	0x03564A58 STP X31, X8, [X31 + 0xD8]
	0x03564A5C STR X0, [X31 + 0x118]
	0x03564A60 STR X31, [X31 + 0xD0]
	0x03564A64 LDR X8, [X19 + 0x58]
	0x03564A68 CBZ X8, 0x3564AA8
	0x03564A6C LDP V0, V1, [X22]
	0x03564A70 LDR V2, [X22 + 0x2]
	0x03564A74 LDRB W3, [X31 + 0x12C]
	0x03564A78 ADD X4, X31, 0x130
	0x03564A7C STP V0, V1, [X31 + 0x90]
	0x03564A80 STR V2, [X31 + 0xB]
	0x03564A84 LDR X9, [X8 + 0x18]
	0x03564A88 LDR X0, [X8 + 0x40]
	0x03564A8C STP V0, V1, [X31 + 0x130]
	0x03564A90 STR V2, [X31 + 0x15]
	0x03564A94 LDR X6, [X8 + 0x28]
	0x03564A98 ADD X5, X31, 0xD0
	0x03564A9C MOV W1, W20
	0x03564AA0 MOV W2, W21

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+144], X24
	004 Move [X31+152], X23
	005 Move [X31+160], X22
	006 Move [X31+168], X21
	007 Move [X31+176], X20
	008 Move [X31+184], X19
	009 Move X22, 0xE7C000
	010 Move W8, [X22+3532]
	011 Move W20, W2
	012 Move W19, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {65}
	018 Move X0, 0xBD2000
	019 Move X0, [X0+2232]
	020 Call 0x1C17CF4
	021 Move X0, 0xBD2000
	022 Move X0, [X0+2776]
	023 Call 0x1C17CF4
	024 Move X0, 0xBD2000
	025 Move X0, [X0+2840]
	026 Call 0x1C17CF4
	027 Move X0, 0xBD2000
	028 Move X0, [X0+2784]
	029 Call 0x1C17CF4
	030 Move X0, 0xBD2000
	031 Move X0, [X0+2248]
	032 Call 0x1C17CF4
	033 Move X0, 0xBD2000
	034 Move X0, [X0+2792]
	035 Call 0x1C17CF4
	036 Move X0, 0xBD2000
	037 Move X0, [X0+2264]
	038 Call 0x1C17CF4
	039 Move X0, 0xBD2000
	040 Move X0, [X0+2272]
	041 Call 0x1C17CF4
	042 Move X0, 0xBD2000
	043 Move X0, [X0+2800]
	044 Call 0x1C17CF4
	045 Move X0, 0xBD2000
	046 Move X0, [X0+2808]
	047 Call 0x1C17CF4
	048 Move X0, 0xBD2000
	049 Move X0, [X0+2296]
	050 Call 0x1C17CF4
	051 Move X0, 0xB94000
	052 Move X0, [X0+2008]
	053 Call 0x1C17CF4
	054 Move X0, 0xBD2000
	055 Move X0, [X0+2816]
	056 Call 0x1C17CF4
	057 Move X0, 0xB94000
	058 Move X0, [X0+2032]
	059 Call 0x1C17CF4
	060 Move X0, 0xB94000
	061 Move X0, [X0+2056]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X22+3532], W8
	065 NotImplemented "Instruction MOVI not yet implemented."
	066 Move [X31+112], X31
	067 Move [X31+48], X31
	068 Move [X31+56], X31
	069 Move [X31+64], X31
	070 Move [X31+80], V0
	071 Move [X31+88], V0
	072 Move [X31+136], X31
	073 Move X0, [X21+136]
	074 Compare X0, 0
	075 JumpIfEqual {209}
	076 Move X8, 0xBD2000
	077 Move X8, [X8+2840]
	078 Add X2, X31, 136
	079 Move W1, W20
	080 Move X3, [X8]
	081 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {196}
	086 Move X8, 0xB94000
	087 Move X8, [X8+2056]
	088 Move X0, [X8]
	089 Call 0x1C17F10
	090 Move X8, 0xB94000
	091 Move X8, [X8+2032]
	092 Move X20, X0
	093 Move X1, [X8]
	094 Call List`1<Byte>..ctor, X0
	095 Move X0, [X31+136]
	096 Compare X0, 0
	097 JumpIfEqual {209}
	098 Move X8, 0xBD2000
	099 Move X8, [X8+2232]
	100 Move X1, [X8]
	101 Add X8, X31, 8
	102 Call Dictionary`2<Byte, Object>.GetEnumerator, X0
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 Move X8, [X31+40]
	106 Move X23, 0xBD2000
	107 Move X23, [X23+2264]
	108 Move [X31+80], V0
	109 Move [X31+88], V1
	110 Move [X31+112], X8
	111 Move X24, 0xB94000
	112 Move X24, [X24+2008]
	113 Move X1, [X23]
	114 Add X0, X31, 80
	115 Call Enumerator<Byte, Object>.MoveNext, X0
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {157}
	120 Move X22, [X31+104]
	121 Compare X22, 0
	122 JumpIfEqual {206}
	123 Move W8, [X22+144]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X8, [X22+64]
	126 Move W21, [X31+96]
	127 Compare X8, 0
	128 JumpIfEqual {133}
	129 Move X0, [X8+64]
	130 Move X1, [X8+40]
	131 Move X9, [X8+24]
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Move X0, X22
	134 Call RemoteVoice.Dispose, X0
	135 Compare X20, 0
	136 JumpIfEqual {207}
	137 Move W10, [X20+28]
	138 Move X8, [X20+16]
	139 Move X9, [X24]
	140 Add W10, W10, 1
	141 Move [X20+28], W10
	142 Compare X8, 0
	143 JumpIfEqual {208}
	144 NotImplemented "Instruction LDRSW not yet implemented."
	145 Move W11, [X8+24]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Add W9, W10, 1
	148 Add X8, X8, X10
	149 Move [X20+24], W9
	150 Move [X8+32], W21
	151 Move X8, [X9+32]
	152 Move X8, [X8+192]
	153 Move X2, [X8+112]
	154 Move X0, X20
	155 Move W1, W21
	156 Call List`1<Byte>.AddWithResize, X0, X1
	157 Move X8, 0xBD2000
	158 Move X8, [X8+2248]
	159 Add X0, X31, 80
	160 Move X1, [X8]
	161 Call Enumerator<Byte, Object>.Dispose, X0
	162 Compare X20, 0
	163 JumpIfEqual {209}
	164 Move X8, 0xBD2000
	165 Move X8, [X8+2816]
	166 Move X0, X20
	167 Move X1, [X8]
	168 Add X8, X31, 8
	169 Call List`1<Byte>.GetEnumerator, X0
	170 NotImplemented "Instruction LDUR not yet implemented."
	171 Move X8, [X31+24]
	172 Move X19, 0xBD2000
	173 Move X19, [X19+2792]
	174 Move [X31+3], V0
	175 Move [X31+64], X8
	176 Move X20, 0xBD2000
	177 Move X20, [X20+2776]
	178 Move X1, [X19]
	179 Add X0, X31, 48
	180 Call Enumerator<Byte>.MoveNext, X0
	181 Move TEMP, X0
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfNotEqual {191}
	185 Move X0, [X31+136]
	186 Compare X0, 0
	187 JumpIfEqual {205}
	188 Move W1, [X31+64]
	189 Move X2, [X20]
	190 Call Dictionary`2<Byte, Object>.Remove, X0, X1
	191 Move X8, 0xBD2000
	192 Move X8, [X8+2784]
	193 Add X0, X31, 48
	194 Move X1, [X8]
	195 Call Enumerator<Byte>.Dispose, X0
	196 Move X20, [X31+176]
	197 Move X19, [X31+184]
	198 Move X22, [X31+160]
	199 Move X21, [X31+168]
	200 Move X24, [X31+144]
	201 Move X23, [X31+152]
	202 Move X30, [X31+128]
	203 Add X31, X31, 192
	204 Return 
	205 Call 0x1C17F20
	206 Call 0x1C17F20
	207 Call 0x1C17F20
	208 Call 0x1C17F20
	209 Call 0x1C17F20
	210 Move X19, X0
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move X0, X19
	213 Call 0x3EB2AD0
	214 Move X21, [X0]
	215 Call 0x3EB2AE0
	216 Move X8, 0xBD2000
	217 Move X8, [X8+2248]
	218 Add X0, X31, 80
	219 Move X1, [X8]
	220 Call Enumerator<Byte, Object>.Dispose, X0
	221 Compare X21, 0
	222 JumpIfEqual {162}
	223 Move X0, X21
	224 Call 0x1C17F18
	225 Move X21, X31
	226 Move X19, X0
	227 Move X8, 0xBD2000
	228 Move X8, [X8+2248]
	229 Move X1, [X8]
	230 Add X0, X31, 80
	231 Call Enumerator<Byte, Object>.Dispose, X0
	232 Compare X21, 0
	233 JumpIfEqual {260}
	234 Move X0, X21
	235 Call 0x1C17F18
	236 Move X19, X0
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move X0, X19
	239 Call 0x3EB2AD0
	240 Move X20, [X0]
	241 Call 0x3EB2AE0
	242 Move X8, 0xBD2000
	243 Move X8, [X8+2784]
	244 Add X0, X31, 48
	245 Move X1, [X8]
	246 Call Enumerator<Byte>.Dispose, X0
	247 Compare X20, 0
	248 JumpIfEqual {196}
	249 Move X0, X20
	250 Call 0x1C17F18
	251 Move X20, X31
	252 Move X19, X0
	253 Move X8, 0xBD2000
	254 Move X8, [X8+2784]
	255 Move X1, [X8]
	256 Add X0, X31, 48
	257 Call Enumerator<Byte>.Dispose, X0
	258 Compare X20, 0
	259 JumpIfNotEqual {262}
	260 Move X0, X19
	261 Call 0x1D2D690
	262 Move X0, X20
	263 Call 0x1C17F18
	264 Call 0x1991590

Method: System.Void onJoinChannel(System.Int32 channelId)

Disassembly:
	0x03564AA4 BLR X9
	0x03564AA8 ADD X0, X31, 0x40
	0x03564AAC ADD X1, X31, 0xD0
	0x03564AB0 MOVZ W2, 0x50
	0x03564AB4 BL 0x3EB1AC0
	0x03564AB8 ADRP X8, 0xBD1000
	0x03564ABC LDP V1, V0, [X22 + 0x10]
	0x03564AC0 LDR V2, [X22]
	0x03564AC4 LDR X8, [X8 + 0x750]
	0x03564AC8 LDRB W24, [X31 + 0x12C]
	0x03564ACC STR V0, [X31 + 0x3]
	0x03564AD0 STP V2, V1, [X31 + 0x10]
	0x03564AD4 LDR X0, [X8]
	0x03564AD8 BL 0x1C16F10
	0x03564ADC ADD X2, X31, 0x40
	0x03564AE0 ADD X6, X31, 0x10
	0x03564AE4 MOV X1, X19
	0x03564AE8 MOV W3, W20
	0x03564AEC MOV W4, W21
	0x03564AF0 MOV W5, W24
	0x03564AF4 MOV X23, X0
	0x03564AF8 BL 0x355AD44
	0x03564AFC LDR X0, [X31 + 0x120]
	0x03564B00 CBZ X0, 0x3564B9C
	0x03564B04 ADRP X8, 0xBD1000
	0x03564B08 LDR X8, [X8 + 0xB60]
	0x03564B0C LDRB W1, [X31 + 0x12C]
	0x03564B10 MOV X2, X23
	0x03564B14 LDR X3, [X8]
	0x03564B18 BL 0x29D3520
	0x03564B1C LDR X0, [X19 + 0x68]
	0x03564B20 CBZ X0, 0x3564B9C
	0x03564B24 ADRP X8, 0xBD1000
	0x03564B28 LDR W1, [X22]
	0x03564B2C LDR X8, [X8 + 0xB48]
	0x03564B30 ADD X2, X31, 0xCC
	0x03564B34 LDR X3, [X8]
	0x03564B38 BL 0x2A408BC
	0x03564B3C TBZ X0, 0x0, 0x3564B78
	0x03564B40 CBZ X23, 0x3564B9C
	0x03564B44 LDR W8, [X31 + 0xCC]
	0x03564B48 STR W8, [X23 + 0x94]
	0x03564B4C B 0x3564B78
	0x03564B50 LDR W9, [X10]
	0x03564B54 ADD W9, W9, 0x1
	0x03564B58 ADD X8, X8, W9, 0x4, SXTW
	0x03564B5C ADD X0, X8, 0x138
	0x03564B60 LDP X8, X4, [X0]
	0x03564B64 MOVZ W1, 0x2
	0x03564B68 MOV X0, X22
	0x03564B6C MOV X2, X19
	0x03564B70 MOV X3, X20
	0x03564B74 BLR X8
	0x03564B78 LDP X20, X19, [X31 + 0x1B0]
	0x03564B7C LDP X22, X21, [X31 + 0x1A0]
	0x03564B80 LDP X24, X23, [X31 + 0x190]
	0x03564B84 LDP X26, X25, [X31 + 0x180]
	0x03564B88 LDP X30, X27, [X31 + 0x170]
	0x03564B8C LDR X29, [X31 + 0x160]
	0x03564B90 ADD X31, X31, 0x1C0
	0x03564B94 RET
	0x03564B98 BL 0x1C16F28
	0x03564B9C BL 0x1C16F20
	0x03564BA0 SUB X31, X31, 0x30
	0x03564BA4 STP X30, X21, [X31 + 0x10]
	0x03564BA8 STP X20, X19, [X31 + 0x20]
	0x03564BAC ADRP X21, 0xE7B000
	0x03564BB0 LDRB W8, [X21 + 0xDD6]
	0x03564BB4 MOV W19, W1
	0x03564BB8 MOV X20, X0
	0x03564BBC STR W1, [X31 + 0xC]
	0x03564BC0 TBNZ X8, 0x0, 0x3564BF0
	0x03564BC4 ADRP X0, 0xBD1000
	0x03564BC8 LDR X0, [X0 + 0x4D0]
	0x03564BCC BL 0x1C16CF4
	0x03564BD0 ADRP X0, 0xB9A000
	0x03564BD4 LDR X0, [X0 + 0x310]
	0x03564BD8 BL 0x1C16CF4
	0x03564BDC ADRP X0, 0xB90000
	0x03564BE0 LDR X0, [X0 + 0x608]
	0x03564BE4 BL 0x1C16CF4
	0x03564BE8 MOVZ W8, 0x1
	0x03564BEC STRB W8, [X21 + 0xDD6]
	0x03564BF0 LDR X20, [X20 + 0x10]
	0x03564BF4 CBZ X20, 0x3564CA8
	0x03564BF8 ADRP X10, 0xBD1000
	0x03564BFC LDR X8, [X20]
	0x03564C00 LDR X10, [X10 + 0x4D0]
	0x03564C04 LDRH W9, [X8 + 0x12E]
	0x03564C08 LDR X1, [X10]
	0x03564C0C CBZ X9, 0x3564C30
	0x03564C10 LDR X10, [X8 + 0xB0]
	0x03564C14 ADD X10, X10, 0x8
	0x03564C18 LDUR X11, [X10 - 0x8]
	0x03564C1C CMP X11, X1
	0x03564C20 B.EQ 0x3564C40
	0x03564C24 SUBS X9, X9, 0x1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0xE7C000
	007 Move W8, [X21+3533]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0xBD2000
	015 Move X0, [X0+2192]
	016 Call 0x1C17CF4
	017 Move X0, 0xBD2000
	018 Move X0, [X0+2848]
	019 Call 0x1C17CF4
	020 Move X0, 0xBD2000
	021 Move X0, [X0+2856]
	022 Call 0x1C17CF4
	023 Move X0, 0xBD2000
	024 Move X0, [X0+2864]
	025 Call 0x1C17CF4
	026 Move X0, 0xBD2000
	027 Move X0, [X0+2872]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+3533], W8
	031 Move [X31+16], X31
	032 Move [X31+24], X31
	033 Move [X31], X31
	034 Move [X31+8], X31
	035 Move X0, [X20+128]
	036 Compare X0, 0
	037 JumpIfEqual {83}
	038 Move X8, 0xBD2000
	039 Move X8, [X8+2192]
	040 Add X2, X31, 24
	041 Move W1, W19
	042 Move X3, [X8]
	043 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {76}
	048 Move X0, [X31+24]
	049 Compare X0, 0
	050 JumpIfEqual {83}
	051 Move X8, 0xBD2000
	052 Move X8, [X8+2872]
	053 Move X1, [X8]
	054 Add X8, X31, 0
	055 Call List`1<Object>.GetEnumerator, X0
	056 Move X19, 0xBD2000
	057 Move X19, [X19+2856]
	058 Move X1, [X19]
	059 Add X0, X31, 0
	060 Call Enumerator<Object>.MoveNext, X0
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {71}
	065 Move X0, [X31+16]
	066 Compare X0, 0
	067 JumpIfEqual {82}
	068 Move W1, [X0+57]
	069 Move X2, [X0+64]
	070 Call LocalVoice.sendVoiceInfoAndConfigFrame, X0, X1, X2
	071 Move X8, 0xBD2000
	072 Move X8, [X8+2848]
	073 Add X0, X31, 0
	074 Move X1, [X8]
	075 Call Enumerator<Object>.Dispose, X0
	076 Move X20, [X31+48]
	077 Move X19, [X31+56]
	078 Move X30, [X31+32]
	079 Move X21, [X31+40]
	080 Add X31, X31, 64
	081 Return 
	082 Call 0x1C17F20
	083 Call 0x1C17F20
	084 Move X19, X0
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X0, X19
	087 Call 0x3EB2AD0
	088 Move X20, [X0]
	089 Call 0x3EB2AE0
	090 Move X8, 0xBD2000
	091 Move X8, [X8+2848]
	092 Add X0, X31, 0
	093 Move X1, [X8]
	094 Call Enumerator<Object>.Dispose, X0
	095 Compare X20, 0
	096 JumpIfEqual {76}
	097 Move X0, X20
	098 Call 0x1C17F18
	099 Move X20, X31
	100 Move X19, X0
	101 Move X8, 0xBD2000
	102 Move X8, [X8+2848]
	103 Move X1, [X8]
	104 Add X0, X31, 0
	105 Call Enumerator<Object>.Dispose, X0
	106 Compare X20, 0
	107 JumpIfNotEqual {110}
	108 Move X0, X19
	109 Call 0x1D2D690
	110 Move X0, X20
	111 Call 0x1C17F18
	112 Call 0x1991590

Method: System.Void onJoinAllChannels()

Disassembly:
	0x03564C28 ADD X10, X10, 0x10
	0x03564C2C B.NE 0x3564C18
	0x03564C30 MOVZ W2, 0x5
	0x03564C34 MOV X0, X20
	0x03564C38 BL 0x1C5C788
	0x03564C3C B 0x3564C50
	0x03564C40 LDR W9, [X10]
	0x03564C44 ADD W9, W9, 0x5
	0x03564C48 ADD X8, X8, W9, 0x4, SXTW
	0x03564C4C ADD X0, X8, 0x138
	0x03564C50 LDP X8, X2, [X0]
	0x03564C54 MOV X0, X20
	0x03564C58 MOV W1, W19
	0x03564C5C BLR X8
	0x03564C60 MOV X19, X0
	0x03564C64 ADD X0, X31, 0xC
	0x03564C68 MOV X1, X31
	0x03564C6C BL 0x337B6E0
	0x03564C70 CBZ X19, 0x3564C98
	0x03564C74 ADRP X8, 0xB9A000
	0x03564C78 ADRP X9, 0xB90000
	0x03564C7C LDR X8, [X8 + 0x310]
	0x03564C80 LDR X9, [X9 + 0x608]
	0x03564C84 MOV X2, X19
	0x03564C88 MOV X4, X31
	0x03564C8C LDR X1, [X8]
	0x03564C90 LDR X3, [X9]
	0x03564C94 BL 0x32277C4
	0x03564C98 LDP X20, X19, [X31 + 0x20]
	0x03564C9C LDP X30, X21, [X31 + 0x10]
	0x03564CA0 ADD X31, X31, 0x30
	0x03564CA4 RET
	0x03564CA8 BL 0x1C16F20
	0x03564CAC SUB X31, X31, 0x80
	0x03564CB0 STP X29, X30, [X31 + 0x20]
	0x03564CB4 STP X28, X27, [X31 + 0x30]
	0x03564CB8 STP X26, X25, [X31 + 0x40]
	0x03564CBC STP X24, X23, [X31 + 0x50]
	0x03564CC0 STP X22, X21, [X31 + 0x60]
	0x03564CC4 STP X20, X19, [X31 + 0x70]
	0x03564CC8 ADRP X22, 0xE7B000
	0x03564CCC LDRB W8, [X22 + 0xDD3]
	0x03564CD0 MOV X20, X2
	0x03564CD4 MOV W19, W1
	0x03564CD8 MOV X21, X0
	0x03564CDC TBNZ X8, 0x0, 0x3564D84
	0x03564CE0 ADRP X0, 0xB8F000
	0x03564CE4 LDR X0, [X0 + 0x9C8]
	0x03564CE8 BL 0x1C16CF4
	0x03564CEC ADRP X0, 0xBD1000
	0x03564CF0 LDR X0, [X0 + 0xAD8]
	0x03564CF4 BL 0x1C16CF4
	0x03564CF8 ADRP X0, 0xBD1000
	0x03564CFC LDR X0, [X0 + 0xB18]
	0x03564D00 BL 0x1C16CF4
	0x03564D04 ADRP X0, 0xBD1000
	0x03564D08 LDR X0, [X0 + 0xBA0]
	0x03564D0C BL 0x1C16CF4
	0x03564D10 ADRP X0, 0xB94000
	0x03564D14 LDR X0, [X0 + 0x348]
	0x03564D18 BL 0x1C16CF4
	0x03564D1C ADRP X0, 0xB8F000
	0x03564D20 LDR X0, [X0 + 0xAC8]
	0x03564D24 BL 0x1C16CF4
	0x03564D28 ADRP X0, 0xBD1000
	0x03564D2C LDR X0, [X0 + 0xBA8]
	0x03564D30 BL 0x1C16CF4
	0x03564D34 ADRP X0, 0xBD1000
	0x03564D38 LDR X0, [X0 + 0x680]
	0x03564D3C BL 0x1C16CF4
	0x03564D40 ADRP X0, 0xBD1000
	0x03564D44 LDR X0, [X0 + 0xBB0]
	0x03564D48 BL 0x1C16CF4
	0x03564D4C ADRP X0, 0xBD1000
	0x03564D50 LDR X0, [X0 + 0xBB8]
	0x03564D54 BL 0x1C16CF4
	0x03564D58 ADRP X0, 0xBD1000
	0x03564D5C LDR X0, [X0 + 0xB80]
	0x03564D60 BL 0x1C16CF4
	0x03564D64 ADRP X0, 0xBD1000
	0x03564D68 LDR X0, [X0 + 0xBC0]
	0x03564D6C BL 0x1C16CF4
	0x03564D70 ADRP X0, 0xBD1000
	0x03564D74 LDR X0, [X0 + 0xB98]
	0x03564D78 BL 0x1C16CF4
	0x03564D7C MOVZ W8, 0x1
	0x03564D80 STRB W8, [X22 + 0xDD3]
	0x03564D84 STRB W31, [X31 + 0x14]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xE7C000
	006 Move W8, [X20+3534]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {29}
	012 Move X0, 0xBD2000
	013 Move X0, [X0+2120]
	014 Call 0x1C17CF4
	015 Move X0, 0xBD2000
	016 Move X0, [X0+2128]
	017 Call 0x1C17CF4
	018 Move X0, 0xBD2000
	019 Move X0, [X0+2136]
	020 Call 0x1C17CF4
	021 Move X0, 0xBD2000
	022 Move X0, [X0+2144]
	023 Call 0x1C17CF4
	024 Move X0, 0xBD2000
	025 Move X0, [X0+2152]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+3534], W8
	029 NotImplemented "Instruction MOVI not yet implemented."
	030 Move [X31+32], X31
	031 Move [X31], V0
	032 Move [X31+8], V0
	033 Move X0, [X19+120]
	034 Compare X0, 0
	035 JumpIfEqual {67}
	036 Move X8, 0xBD2000
	037 Move X8, [X8+2120]
	038 Move X20, 0xBD2000
	039 Move X19, 0xBD2000
	040 Move X1, [X8]
	041 Move X20, [X20+2136]
	042 Move X19, [X19+2128]
	043 Add X8, X31, 0
	044 Call Dictionary`2<Byte, Object>.GetEnumerator, X0
	045 Move X1, [X20]
	046 Add X0, X31, 0
	047 Call Enumerator<Byte, Object>.MoveNext, X0
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {58}
	052 Move X0, [X31+24]
	053 Compare X0, 0
	054 JumpIfEqual {66}
	055 Move W1, [X0+57]
	056 Move X2, [X0+64]
	057 Call LocalVoice.sendVoiceInfoAndConfigFrame, X0, X1, X2
	058 Move X1, [X19]
	059 Add X0, X31, 0
	060 Call Enumerator<Byte, Object>.Dispose, X0
	061 Move X20, [X31+64]
	062 Move X19, [X31+72]
	063 Move X30, [X31+48]
	064 Add X31, X31, 80
	065 Return 
	066 Call 0x1C17F20
	067 Call 0x1C17F20
	068 Move X19, X0
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X0, X19
	071 Call 0x3EB2AD0
	072 Move X20, [X0]
	073 Call 0x3EB2AE0
	074 Move X8, 0xBD2000
	075 Move X8, [X8+2128]
	076 Add X0, X31, 0
	077 Move X1, [X8]
	078 Call Enumerator<Byte, Object>.Dispose, X0
	079 Compare X20, 0
	080 JumpIfEqual {61}
	081 Move X0, X20
	082 Call 0x1C17F18
	083 Move X20, X31
	084 Move X19, X0
	085 Move X8, 0xBD2000
	086 Move X8, [X8+2128]
	087 Move X1, [X8]
	088 Add X0, X31, 0
	089 Call Enumerator<Byte, Object>.Dispose, X0
	090 Compare X20, 0
	091 JumpIfNotEqual {94}
	092 Move X0, X19
	093 Call 0x1D2D690
	094 Move X0, X20
	095 Call 0x1C17F18
	096 Call 0x1991590

Method: System.Void onLeaveChannel(System.Int32 channel)

Disassembly:
	0x03564D88 STR X31, [X31 + 0x8]

ISIL:
	001 Call VoiceClient.clearRemoteVoicesInChannel, X0, X1
	002 Return 

Method: System.Void onLeaveAllChannels()

Disassembly:
	0x03564D8C STR X31, [X31 + 0x18]

ISIL:
	001 Call VoiceClient.clearRemoteVoices, X0
	002 Return 

Method: System.Void onPlayerJoin(System.Int32 channelId, System.Int32 playerId)

Disassembly:
	0x03564D90 LDR X0, [X21 + 0x88]
	0x03564D94 CBZ X0, 0x356529C
	0x03564D98 ADRP X8, 0xBD1000
	0x03564D9C LDR X8, [X8 + 0xB18]
	0x03564DA0 ADD X2, X31, 0x18
	0x03564DA4 MOV W1, W19
	0x03564DA8 LDR X3, [X8]
	0x03564DAC BL 0x2A150AC
	0x03564DB0 TBZ X0, 0x0, 0x3565170
	0x03564DB4 CBZ X20, 0x356529C
	0x03564DB8 LDR X8, [X20 + 0x18]
	0x03564DBC CMP W8, 0x1
	0x03564DC0 B.LT 0x3565278
	0x03564DC4 ADRP X29, 0xBD1000
	0x03564DC8 ADRP X27, 0xBD1000
	0x03564DCC ADRP X26, 0xB8F000
	0x03564DD0 ADRP X28, 0xB94000
	0x03564DD4 LDR X29, [X29 + 0xBB8]
	0x03564DD8 LDR X27, [X27 + 0xB80]
	0x03564DDC LDR X26, [X26 + 0x9C8]
	0x03564DE0 LDR X28, [X28 + 0x348]
	0x03564DE4 MOV X25, X31
	0x03564DE8 AND X8, X8, 0x0
	0x03564DEC CMP X25, W8, UXTW
	0x03564DF0 B.CS 0x3565298
	0x03564DF4 ADD X8, X20, X25
	0x03564DF8 LDRB W1, [X8 + 0x20]
	0x03564DFC LDR X0, [X31 + 0x18]
	0x03564E00 STRB W1, [X31 + 0x14]
	0x03564E04 CBZ X0, 0x356529C
	0x03564E08 ADRP X8, 0xBD1000
	0x03564E0C LDR X8, [X8 + 0xBA0]
	0x03564E10 ADD X2, X31, 0x8
	0x03564E14 LDR X3, [X8]
	0x03564E18 BL 0x29D4F58
	0x03564E1C TBZ X0, 0x0, 0x3564FAC
	0x03564E20 LDR X0, [X31 + 0x18]
	0x03564E24 CBZ X0, 0x356529C
	0x03564E28 ADRP X8, 0xBD1000
	0x03564E2C LDR X8, [X8 + 0xAD8]
	0x03564E30 LDRB W1, [X31 + 0x14]
	0x03564E34 LDR X2, [X8]
	0x03564E38 BL 0x29D4934
	0x03564E3C ADRP X8, 0xB8F000
	0x03564E40 LDR X22, [X21 + 0x18]
	0x03564E44 LDR X8, [X8 + 0xAC8]
	0x03564E48 MOVZ W1, 0x7
	0x03564E4C LDR X0, [X8]
	0x03564E50 BL 0x1C16D6C
	0x03564E54 CBZ X0, 0x356529C
	0x03564E58 LDR W8, [X0 + 0x18]
	0x03564E5C MOV X23, X0
	0x03564E60 CBZ W8, 0x3565298
	0x03564E64 LDR X8, [X29]
	0x03564E68 ADD X0, X31, 0x14
	0x03564E6C MOV X1, X31
	0x03564E70 STR X8, [X23 + 0x20]
	0x03564E74 BL 0x3319BB4
	0x03564E78 LDR W8, [X23 + 0x18]
	0x03564E7C CMP W8, 0x1
	0x03564E80 B.LS 0x3565298
	0x03564E84 CMP W8, 0x2
	0x03564E88 STR X0, [X23 + 0x28]
	0x03564E8C B.EQ 0x3565298
	0x03564E90 LDR X8, [X27]
	0x03564E94 MOV X0, X21
	0x03564E98 MOV W1, W19
	0x03564E9C STR X8, [X23 + 0x30]
	0x03564EA0 BL 0x3564BA0
	0x03564EA4 LDR W8, [X23 + 0x18]
	0x03564EA8 CMP W8, 0x3
	0x03564EAC B.LS 0x3565298
	0x03564EB0 CMP W8, 0x4
	0x03564EB4 STR X0, [X23 + 0x38]
	0x03564EB8 B.EQ 0x3565298
	0x03564EBC ADRP X8, 0xBD1000
	0x03564EC0 LDR X8, [X8 + 0xB98]
	0x03564EC4 LDR X8, [X8]
	0x03564EC8 STR X8, [X23 + 0x40]
	0x03564ECC LDR X8, [X31 + 0x8]
	0x03564ED0 CBZ X8, 0x356529C
	0x03564ED4 LDR W1, [X8 + 0x90]
	0x03564ED8 MOV X0, X21
	0x03564EDC BL 0x3558864
	0x03564EE0 LDR W8, [X23 + 0x18]
	0x03564EE4 CMP W8, 0x5
	0x03564EE8 B.LS 0x3565298
	0x03564EEC CMP W8, 0x6
	0x03564EF0 STR X0, [X23 + 0x48]
	0x03564EF4 B.EQ 0x3565298
	0x03564EF8 ADRP X8, 0xBD1000
	0x03564EFC LDR X8, [X8 + 0x680]
	0x03564F00 MOV X0, X23
	0x03564F04 MOV X1, X31
	0x03564F08 LDR X8, [X8]
	0x03564F0C STR X8, [X23 + 0x50]
	0x03564F10 BL 0x32278CC
	0x03564F14 LDR X24, [X26]
	0x03564F18 MOV X23, X0
	0x03564F1C LDR X8, [X24 + 0x38]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X22, 0xE7C000
	008 Move W8, [X22+3535]
	009 Move W19, W2
	010 Move W20, W1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0xBD2000
	017 Move X0, [X0+2192]
	018 Call 0x1C17CF4
	019 Move X0, 0xBD2000
	020 Move X0, [X0+2848]
	021 Call 0x1C17CF4
	022 Move X0, 0xBD2000
	023 Move X0, [X0+2856]
	024 Call 0x1C17CF4
	025 Move X0, 0xBD2000
	026 Move X0, [X0+2864]
	027 Call 0x1C17CF4
	028 Move X0, 0xBD2000
	029 Move X0, [X0+2872]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+3535], W8
	033 Move [X31+40], X31
	034 Move [X31+8], X31
	035 Move [X31+16], X31
	036 Move [X31+24], X31
	037 Move X0, [X21+128]
	038 Compare X0, 0
	039 JumpIfEqual {85}
	040 Move X8, 0xBD2000
	041 Move X8, [X8+2192]
	042 Add X2, X31, 40
	043 Move W1, W20
	044 Move X3, [X8]
	045 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {77}
	050 Move X0, [X31+40]
	051 Compare X0, 0
	052 JumpIfEqual {85}
	053 Move X8, 0xBD2000
	054 Move X8, [X8+2872]
	055 Move X1, [X8]
	056 Add X8, X31, 8
	057 Call List`1<Object>.GetEnumerator, X0
	058 Move X20, 0xBD2000
	059 Move X20, [X20+2856]
	060 Move X1, [X20]
	061 Add X0, X31, 8
	062 Call Enumerator<Object>.MoveNext, X0
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {72}
	067 Move X0, [X31+24]
	068 Compare X0, 0
	069 JumpIfEqual {84}
	070 Move W1, W19
	071 Call LocalVoice.onPlayerJoin, X0, X1
	072 Move X8, 0xBD2000
	073 Move X8, [X8+2848]
	074 Add X0, X31, 8
	075 Move X1, [X8]
	076 Call Enumerator<Object>.Dispose, X0
	077 Move X20, [X31+64]
	078 Move X19, [X31+72]
	079 Move X22, [X31+48]
	080 Move X21, [X31+56]
	081 Move X30, [X31+32]
	082 Add X31, X31, 80
	083 Return 
	084 Call 0x1C17F20
	085 Call 0x1C17F20
	086 Move X19, X0
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X0, X19
	089 Call 0x3EB2AD0
	090 Move X20, [X0]
	091 Call 0x3EB2AE0
	092 Move X8, 0xBD2000
	093 Move X8, [X8+2848]
	094 Add X0, X31, 8
	095 Move X1, [X8]
	096 Call Enumerator<Object>.Dispose, X0
	097 Compare X20, 0
	098 JumpIfEqual {77}
	099 Move X0, X20
	100 Call 0x1C17F18
	101 Move X20, X31
	102 Move X19, X0
	103 Move X8, 0xBD2000
	104 Move X8, [X8+2848]
	105 Move X1, [X8]
	106 Add X0, X31, 8
	107 Call Enumerator<Object>.Dispose, X0
	108 Compare X20, 0
	109 JumpIfNotEqual {112}
	110 Move X0, X19
	111 Call 0x1D2D690
	112 Move X0, X20
	113 Call 0x1C17F18
	114 Call 0x1991590

Method: System.Void onPlayerJoin(System.Int32 playerId)

Disassembly:
	0x03564F20 CBNZ X8, 0x3564F30
	0x03564F24 MOV X0, X24
	0x03564F28 BL 0x1C5C6E0
	0x03564F2C LDR X8, [X24 + 0x38]
	0x03564F30 LDR X0, [X8 + 0x10]
	0x03564F34 LDRB W8, [X0 + 0x135]
	0x03564F38 TBNZ X8, 0x0, 0x3564F40
	0x03564F3C BL 0x1C5C684
	0x03564F40 LDR W8, [X0 + 0xE0]
	0x03564F44 CBNZ W8, 0x3564F4C
	0x03564F48 BL 0x1C16DFC
	0x03564F4C LDR X8, [X24 + 0x38]
	0x03564F50 LDR X0, [X8 + 0x10]
	0x03564F54 LDRB W8, [X0 + 0x135]
	0x03564F58 TBNZ X8, 0x0, 0x3564F60
	0x03564F5C BL 0x1C5C684
	0x03564F60 CBZ X22, 0x356529C
	0x03564F64 LDR X9, [X0 + 0xB8]
	0x03564F68 LDR X8, [X22]
	0x03564F6C LDR X1, [X28]
	0x03564F70 LDR X24, [X9]
	0x03564F74 LDRH W9, [X8 + 0x12E]
	0x03564F78 CBZ X9, 0x3564F9C
	0x03564F7C LDR X10, [X8 + 0xB0]
	0x03564F80 ADD X10, X10, 0x8
	0x03564F84 LDUR X11, [X10 - 0x8]
	0x03564F88 CMP X11, X1
	0x03564F8C B.EQ 0x356510C
	0x03564F90 SUBS X9, X9, 0x1
	0x03564F94 ADD X10, X10, 0x10
	0x03564F98 B.NE 0x3564F84
	0x03564F9C MOVZ W2, 0x1
	0x03564FA0 MOV X0, X22
	0x03564FA4 BL 0x1C5C788
	0x03564FA8 B 0x356511C
	0x03564FAC ADRP X8, 0xB8F000
	0x03564FB0 LDR X22, [X21 + 0x18]
	0x03564FB4 LDR X8, [X8 + 0xAC8]
	0x03564FB8 MOVZ W1, 0x5
	0x03564FBC LDR X0, [X8]
	0x03564FC0 BL 0x1C16D6C
	0x03564FC4 CBZ X0, 0x356529C
	0x03564FC8 LDR W8, [X0 + 0x18]
	0x03564FCC MOV X23, X0
	0x03564FD0 CBZ W8, 0x3565298
	0x03564FD4 LDR X8, [X29]
	0x03564FD8 ADD X0, X31, 0x14
	0x03564FDC MOV X1, X31
	0x03564FE0 STR X8, [X23 + 0x20]
	0x03564FE4 BL 0x3319BB4
	0x03564FE8 LDR W8, [X23 + 0x18]
	0x03564FEC CMP W8, 0x1
	0x03564FF0 B.LS 0x3565298
	0x03564FF4 CMP W8, 0x2
	0x03564FF8 STR X0, [X23 + 0x28]
	0x03564FFC B.EQ 0x3565298
	0x03565000 LDR X8, [X27]
	0x03565004 MOV X0, X21
	0x03565008 MOV W1, W19
	0x0356500C STR X8, [X23 + 0x30]
	0x03565010 BL 0x3564BA0
	0x03565014 LDR W8, [X23 + 0x18]
	0x03565018 CMP W8, 0x3
	0x0356501C B.LS 0x3565298
	0x03565020 CMP W8, 0x4
	0x03565024 STR X0, [X23 + 0x38]
	0x03565028 B.EQ 0x3565298
	0x0356502C ADRP X8, 0xBD0000
	0x03565030 LDR X8, [X8 + 0xBC0]
	0x03565034 MOV X0, X23
	0x03565038 MOV X1, X31
	0x0356503C LDR X8, [X8]
	0x03565040 STR X8, [X23 + 0x40]
	0x03565044 BL 0x32278CC
	0x03565048 LDR X24, [X26]
	0x0356504C MOV X23, X0
	0x03565050 LDR X8, [X24 + 0x38]
	0x03565054 CBNZ X8, 0x3565064
	0x03565058 MOV X0, X24
	0x0356505C BL 0x1C5C6E0
	0x03565060 LDR X8, [X24 + 0x38]
	0x03565064 LDR X0, [X8 + 0x10]
	0x03565068 LDRB W8, [X0 + 0x135]
	0x0356506C TBNZ X8, 0x0, 0x3565074
	0x03565070 BL 0x1C5C684
	0x03565074 LDR W8, [X0 + 0xE0]
	0x03565078 CBNZ W8, 0x3565080
	0x0356507C BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xE7C000
	007 Move W8, [X21+3536]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0xBD2000
	015 Move X0, [X0+2120]
	016 Call 0x1C17CF4
	017 Move X0, 0xBD2000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move X0, 0xBD2000
	021 Move X0, [X0+2136]
	022 Call 0x1C17CF4
	023 Move X0, 0xBD2000
	024 Move X0, [X0+2144]
	025 Call 0x1C17CF4
	026 Move X0, 0xBD2000
	027 Move X0, [X0+2152]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+3536], W8
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 Move [X31+32], X31
	033 Move [X31], V0
	034 Move [X31+8], V0
	035 Move X0, [X20+120]
	036 Compare X0, 0
	037 JumpIfEqual {69}
	038 Move X8, 0xBD2000
	039 Move X8, [X8+2120]
	040 Move X21, 0xBD2000
	041 Move X20, 0xBD2000
	042 Move X1, [X8]
	043 Move X21, [X21+2136]
	044 Move X20, [X20+2128]
	045 Add X8, X31, 0
	046 Call Dictionary`2<Byte, Object>.GetEnumerator, X0
	047 Move X1, [X21]
	048 Add X0, X31, 0
	049 Call Enumerator<Byte, Object>.MoveNext, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {59}
	054 Move X0, [X31+24]
	055 Compare X0, 0
	056 JumpIfEqual {68}
	057 Move W1, W19
	058 Call LocalVoice.onPlayerJoin, X0, X1
	059 Move X1, [X20]
	060 Add X0, X31, 0
	061 Call Enumerator<Byte, Object>.Dispose, X0
	062 Move X20, [X31+64]
	063 Move X19, [X31+72]
	064 Move X30, [X31+48]
	065 Move X21, [X31+56]
	066 Add X31, X31, 80
	067 Return 
	068 Call 0x1C17F20
	069 Call 0x1C17F20
	070 Move X19, X0
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X0, X19
	073 Call 0x3EB2AD0
	074 Move X20, [X0]
	075 Call 0x3EB2AE0
	076 Move X8, 0xBD1000
	077 Move X8, [X8+2128]
	078 Add X0, X31, 0
	079 Move X1, [X8]
	080 Call Enumerator<Byte, Object>.Dispose, X0
	081 Compare X20, 0
	082 JumpIfEqual {62}
	083 Move X0, X20
	084 Call 0x1C17F18
	085 Move X20, X31
	086 Move X19, X0
	087 Move X8, 0xBD1000
	088 Move X8, [X8+2128]
	089 Move X1, [X8]
	090 Add X0, X31, 0
	091 Call Enumerator<Byte, Object>.Dispose, X0
	092 Compare X20, 0
	093 JumpIfNotEqual {96}
	094 Move X0, X19
	095 Call 0x1D2D690
	096 Move X0, X20
	097 Call 0x1C17F18
	098 Call 0x1991590

Method: System.Void onPlayerLeave(System.Int32 channelId, System.Int32 playerId)

Disassembly:
	0x03565080 LDR X8, [X24 + 0x38]

ISIL:
	001 Call VoiceClient.clearRemoteVoicesInChannelForPlayer, X0, X1, X2
	002 Return 

Method: System.Void onPlayerLeave(System.Int32 playerId)

Disassembly:
	0x03565084 LDR X0, [X8 + 0x10]
	0x03565088 LDRB W8, [X0 + 0x135]
	0x0356508C TBNZ X8, 0x0, 0x3565094
	0x03565090 BL 0x1C5C684
	0x03565094 CBZ X22, 0x356529C
	0x03565098 LDR X9, [X0 + 0xB8]
	0x0356509C LDR X8, [X22]
	0x035650A0 LDR X1, [X28]
	0x035650A4 LDR X24, [X9]
	0x035650A8 LDRH W9, [X8 + 0x12E]
	0x035650AC CBZ X9, 0x35650D0
	0x035650B0 LDR X10, [X8 + 0xB0]
	0x035650B4 ADD X10, X10, 0x8
	0x035650B8 LDUR X11, [X10 - 0x8]
	0x035650BC CMP X11, X1
	0x035650C0 B.EQ 0x35650E0
	0x035650C4 SUBS X9, X9, 0x1
	0x035650C8 ADD X10, X10, 0x10
	0x035650CC B.NE 0x35650B8
	0x035650D0 MOVZ W2, 0x1
	0x035650D4 MOV X0, X22
	0x035650D8 BL 0x1C5C788
	0x035650DC B 0x35650F0
	0x035650E0 LDR W9, [X10]
	0x035650E4 ADD W9, W9, 0x1
	0x035650E8 ADD X8, X8, W9, 0x4, SXTW
	0x035650EC ADD X0, X8, 0x138
	0x035650F0 LDP X8, X4, [X0]
	0x035650F4 MOVZ W1, 0x2
	0x035650F8 MOV X0, X22
	0x035650FC MOV X2, X23
	0x03565100 MOV X3, X24
	0x03565104 BLR X8
	0x03565108 B 0x356515C
	0x0356510C LDR W9, [X10]
	0x03565110 ADD W9, W9, 0x1
	0x03565114 ADD X8, X8, W9, 0x4, SXTW
	0x03565118 ADD X0, X8, 0x138
	0x0356511C LDP X8, X4, [X0]
	0x03565120 MOVZ W1, 0x3
	0x03565124 MOV X0, X22
	0x03565128 MOV X2, X23
	0x0356512C MOV X3, X24
	0x03565130 BLR X8
	0x03565134 LDR X22, [X31 + 0x8]
	0x03565138 CBZ X22, 0x356529C
	0x0356513C LDR X8, [X22 + 0x40]
	0x03565140 CBZ X8, 0x3565154
	0x03565144 LDR X9, [X8 + 0x18]
	0x03565148 LDR X0, [X8 + 0x40]
	0x0356514C LDR X1, [X8 + 0x28]
	0x03565150 BLR X9
	0x03565154 MOV X0, X22
	0x03565158 BL 0x355C5D8
	0x0356515C LDR W8, [X20 + 0x18]
	0x03565160 ADD X25, X25, 0x1
	0x03565164 CMP X25, W8, SXTW
	0x03565168 B.LT 0x3564DEC
	0x0356516C B 0x3565278
	0x03565170 LDR X20, [X21 + 0x18]
	0x03565174 MOV X0, X21
	0x03565178 MOV W1, W19
	0x0356517C BL 0x3564BA0
	0x03565180 ADRP X8, 0xBD0000
	0x03565184 LDR X8, [X8 + 0xBB0]
	0x03565188 ADRP X9, 0xBD0000
	0x0356518C LDR X9, [X9 + 0xBA8]
	0x03565190 MOV X1, X0
	0x03565194 LDR X8, [X8]
	0x03565198 MOV X3, X31
	0x0356519C LDR X2, [X9]
	0x035651A0 MOV X0, X8
	0x035651A4 BL 0x32274B8
	0x035651A8 ADRP X8, 0xB8E000
	0x035651AC LDR X8, [X8 + 0x9C8]
	0x035651B0 MOV X19, X0
	0x035651B4 LDR X21, [X8]
	0x035651B8 LDR X8, [X21 + 0x38]
	0x035651BC CBNZ X8, 0x35651CC
	0x035651C0 MOV X0, X21
	0x035651C4 BL 0x1C5C6E0
	0x035651C8 LDR X8, [X21 + 0x38]
	0x035651CC LDR X0, [X8 + 0x10]
	0x035651D0 LDRB W8, [X0 + 0x135]
	0x035651D4 TBNZ X8, 0x0, 0x35651DC
	0x035651D8 BL 0x1C5C684
	0x035651DC LDR W8, [X0 + 0xE0]
	0x035651E0 CBNZ W8, 0x35651E8
	0x035651E4 BL 0x1C16DFC
	0x035651E8 LDR X8, [X21 + 0x38]
	0x035651EC LDR X0, [X8 + 0x10]
	0x035651F0 LDRB W8, [X0 + 0x135]
	0x035651F4 TBNZ X8, 0x0, 0x35651FC
	0x035651F8 BL 0x1C5C684
	0x035651FC CBZ X20, 0x356529C
	0x03565200 ADRP X10, 0xB93000
	0x03565204 LDR X9, [X0 + 0xB8]
	0x03565208 LDR X8, [X20]
	0x0356520C LDR X10, [X10 + 0x348]
	0x03565210 LDR X21, [X9]
	0x03565214 LDRH W9, [X8 + 0x12E]
	0x03565218 LDR X1, [X10]
	0x0356521C CBZ X9, 0x3565240
	0x03565220 LDR X10, [X8 + 0xB0]
	0x03565224 ADD X10, X10, 0x8
	0x03565228 LDUR X11, [X10 - 0x8]
	0x0356522C CMP X11, X1
	0x03565230 B.EQ 0x3565250
	0x03565234 SUBS X9, X9, 0x1
	0x03565238 ADD X10, X10, 0x10
	0x0356523C B.NE 0x3565228
	0x03565240 MOVZ W2, 0x1
	0x03565244 MOV X0, X20
	0x03565248 BL 0x1C5C788
	0x0356524C B 0x3565260
	0x03565250 LDR W9, [X10]
	0x03565254 ADD W9, W9, 0x1
	0x03565258 ADD X8, X8, W9, 0x4, SXTW
	0x0356525C ADD X0, X8, 0x138
	0x03565260 LDP X8, X4, [X0]
	0x03565264 MOVZ W1, 0x2
	0x03565268 MOV X0, X20
	0x0356526C MOV X2, X19
	0x03565270 MOV X3, X21
	0x03565274 BLR X8
	0x03565278 LDP X20, X19, [X31 + 0x70]
	0x0356527C LDP X22, X21, [X31 + 0x60]
	0x03565280 LDP X24, X23, [X31 + 0x50]
	0x03565284 LDP X26, X25, [X31 + 0x40]
	0x03565288 LDP X28, X27, [X31 + 0x30]
	0x0356528C LDP X29, X30, [X31 + 0x20]
	0x03565290 ADD X31, X31, 0x80
	0x03565294 RET
	0x03565298 BL 0x1C16F28
	0x0356529C BL 0x1C16F20
	0x035652A0 SUB X31, X31, 0x70
	0x035652A4 STP X30, X25, [X31 + 0x30]
	0x035652A8 STP X24, X23, [X31 + 0x40]
	0x035652AC STP X22, X21, [X31 + 0x50]
	0x035652B0 STP X20, X19, [X31 + 0x60]
	0x035652B4 ADRP X25, 0xE7A000
	0x035652B8 LDRB W8, [X25 + 0xDD4]
	0x035652BC MOV W24, W5
	0x035652C0 MOV X21, X4
	0x035652C4 MOV W22, W3
	0x035652C8 MOV W23, W2
	0x035652CC MOV W20, W1
	0x035652D0 MOV X19, X0
	0x035652D4 STRB W2, [X31 + 0x2C]
	0x035652D8 TBNZ X8, 0x0, 0x3565368
	0x035652DC ADRP X0, 0xB8E000
	0x035652E0 LDR X0, [X0 + 0x9C8]
	0x035652E4 BL 0x1C16CF4
	0x035652E8 ADRP X0, 0xBD0000
	0x035652EC LDR X0, [X0 + 0xB18]
	0x035652F0 BL 0x1C16CF4
	0x035652F4 ADRP X0, 0xBD0000
	0x035652F8 LDR X0, [X0 + 0xBC8]
	0x035652FC BL 0x1C16CF4
	0x03565300 ADRP X0, 0xBD0000
	0x03565304 LDR X0, [X0 + 0xBD0]
	0x03565308 BL 0x1C16CF4
	0x0356530C ADRP X0, 0xBD0000
	0x03565310 LDR X0, [X0 + 0xBA0]
	0x03565314 BL 0x1C16CF4
	0x03565318 ADRP X0, 0xB93000
	0x0356531C LDR X0, [X0 + 0x348]
	0x03565320 BL 0x1C16CF4
	0x03565324 ADRP X0, 0xBD0000
	0x03565328 LDR X0, [X0 + 0xB80]
	0x0356532C BL 0x1C16CF4
	0x03565330 ADRP X0, 0xBD0000
	0x03565334 LDR X0, [X0 + 0xBD8]
	0x03565338 BL 0x1C16CF4
	0x0356533C ADRP X0, 0xBD0000
	0x03565340 LDR X0, [X0 + 0xBE0]
	0x03565344 BL 0x1C16CF4
	0x03565348 ADRP X0, 0xBD0000
	0x0356534C LDR X0, [X0 + 0xBE8]
	0x03565350 BL 0x1C16CF4
	0x03565354 ADRP X0, 0xBD0000
	0x03565358 LDR X0, [X0 + 0xBF0]
	0x0356535C BL 0x1C16CF4
	0x03565360 MOVZ W8, 0x1
	0x03565364 STRB W8, [X25 + 0xDD4]
	0x03565368 STP X31, X31, [X31 + 0x18]
	0x0356536C STR W31, [X31 + 0x14]
	0x03565370 STR X31, [X31 + 0x8]
	0x03565374 TBZ X24, 0x0, 0x3565424
	0x03565378 LDR X0, [X19 + 0x78]
	0x0356537C CBZ X0, 0x35657B4
	0x03565380 ADRP X8, 0xBD0000
	0x03565384 LDR X8, [X8 + 0xBC8]
	0x03565388 ADD X2, X31, 0x18
	0x0356538C MOV W1, W23
	0x03565390 LDR X3, [X8]
	0x03565394 BL 0x29D4F58
	0x03565398 TBZ X0, 0x0, 0x3565424
	0x0356539C LDR X8, [X31 + 0x18]
	0x035653A0 CBZ X8, 0x35657B4
	0x035653A4 LDR X0, [X8 + 0xF8]
	0x035653A8 CBZ X0, 0x35657B4
	0x035653AC ADRP X8, 0xBD0000
	0x035653B0 LDR X8, [X8 + 0xBD0]
	0x035653B4 ADD X2, X31, 0x14
	0x035653B8 MOV W1, W22
	0x035653BC LDR X3, [X8]
	0x035653C0 BL 0x29D1BEC
	0x035653C4 TBZ X0, 0x0, 0x3565424
	0x035653C8 MOV X0, X31
	0x035653CC BL 0x33C18F4
	0x035653D0 LDR W8, [X31 + 0x14]
	0x035653D4 LDR W9, [X19 + 0x64]
	0x035653D8 LDP W11, W10, [X19 + 0x4C]
	0x035653DC MOVZ W12, 0x13
	0x035653E0 SUB W8, W0, W8
	0x035653E4 SUBS W9, W8, W9
	0x035653E8 STR W8, [X19 + 0x64]
	0x035653EC MADD W8, W11, W12, W8
	0x035653F0 MOVZ W11, 0x6667
	0x035653F4 MOVK W11, 0x66660000
	0x035653F8 CSNEG W9, W9, W9, PL
	0x035653FC SMADDL X8, X8, X11, X31
	0x03565400 MADD W9, W10, W12, W9
	0x03565404 UBFM X10, X8, 0x3F, 0x3F
	0x03565408 SBFM X8, X8, 0x23, 0x3F
	0x0356540C SMADDL X9, X9, X11, X31
	0x03565410 ADD W8, W8, W10
	0x03565414 UBFM X10, X9, 0x3F, 0x3F
	0x03565418 SBFM X9, X9, 0x23, 0x3F
	0x0356541C ADD W9, W9, W10
	0x03565420 STP W8, W9, [X19 + 0x4C]
	0x03565424 LDR W8, [X19 + 0x60]
	0x03565428 CMP W8, 0x1
	0x0356542C B.LT 0x3565508
	0x03565430 LDR X0, [X19 + 0x90]
	0x03565434 CBZ X0, 0x35657B4
	0x03565438 LDR X8, [X0]
	0x0356543C MOVZ W1, 0x64

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+136], X23
	004 Move [X31+144], X22
	005 Move [X31+152], X21
	006 Move [X31+160], X20
	007 Move [X31+168], X19
	008 Move X21, 0xE7B000
	009 Move W8, [X21+3537]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {63}
	016 Move X0, 0xBD1000
	017 Move X0, [X0+2232]
	018 Call 0x1C17CF4
	019 Move X0, 0xBD1000
	020 Move X0, [X0+2776]
	021 Call 0x1C17CF4
	022 Move X0, 0xBD1000
	023 Move X0, [X0+2840]
	024 Call 0x1C17CF4
	025 Move X0, 0xBD1000
	026 Move X0, [X0+2784]
	027 Call 0x1C17CF4
	028 Move X0, 0xBD1000
	029 Move X0, [X0+2248]
	030 Call 0x1C17CF4
	031 Move X0, 0xBD1000
	032 Move X0, [X0+2792]
	033 Call 0x1C17CF4
	034 Move X0, 0xBD1000
	035 Move X0, [X0+2264]
	036 Call 0x1C17CF4
	037 Move X0, 0xBD1000
	038 Move X0, [X0+2272]
	039 Call 0x1C17CF4
	040 Move X0, 0xBD1000
	041 Move X0, [X0+2800]
	042 Call 0x1C17CF4
	043 Move X0, 0xBD1000
	044 Move X0, [X0+2808]
	045 Call 0x1C17CF4
	046 Move X0, 0xBD1000
	047 Move X0, [X0+2296]
	048 Call 0x1C17CF4
	049 Move X0, 0xB93000
	050 Move X0, [X0+2008]
	051 Call 0x1C17CF4
	052 Move X0, 0xBD1000
	053 Move X0, [X0+2816]
	054 Call 0x1C17CF4
	055 Move X0, 0xB93000
	056 Move X0, [X0+2032]
	057 Call 0x1C17CF4
	058 Move X0, 0xB93000
	059 Move X0, [X0+2056]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X21+3537], W8
	063 NotImplemented "Instruction MOVI not yet implemented."
	064 Move [X31+112], X31
	065 Move [X31+120], X31
	066 Move [X31+48], X31
	067 Move [X31+56], X31
	068 Move [X31+80], V0
	069 Move [X31+88], V0
	070 Move [X31+64], X31
	071 Move X0, [X20+136]
	072 Compare X0, 0
	073 JumpIfEqual {204}
	074 Move X8, 0xBD1000
	075 Move X8, [X8+2840]
	076 Add X2, X31, 120
	077 Move W1, W19
	078 Move X3, [X8]
	079 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {192}
	084 Move X8, 0xB93000
	085 Move X8, [X8+2056]
	086 Move X0, [X8]
	087 Call 0x1C17F10
	088 Move X8, 0xB93000
	089 Move X8, [X8+2032]
	090 Move X19, X0
	091 Move X1, [X8]
	092 Call List`1<Byte>..ctor, X0
	093 Move X0, [X31+120]
	094 Compare X0, 0
	095 JumpIfEqual {204}
	096 Move X8, 0xBD1000
	097 Move X8, [X8+2232]
	098 Move X1, [X8]
	099 Add X8, X31, 8
	100 Call Dictionary`2<Byte, Object>.GetEnumerator, X0
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 Move X8, [X31+40]
	104 Move X22, 0xBD1000
	105 Move X22, [X22+2264]
	106 Move [X31+80], V0
	107 Move [X31+88], V1
	108 Move [X31+112], X8
	109 Move X23, 0xB93000
	110 Move X23, [X23+2008]
	111 Move X1, [X22]
	112 Add X0, X31, 80
	113 Call Enumerator<Byte, Object>.MoveNext, X0
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {153}
	118 Move X21, [X31+104]
	119 Compare X21, 0
	120 JumpIfEqual {202}
	121 Move X8, [X21+64]
	122 Move W20, [X31+96]
	123 Compare X8, 0
	124 JumpIfEqual {129}
	125 Move X0, [X8+64]
	126 Move X1, [X8+40]
	127 Move X9, [X8+24]
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Move X0, X21
	130 Call RemoteVoice.Dispose, X0
	131 Compare X19, 0
	132 JumpIfEqual {203}
	133 Move W10, [X19+28]
	134 Move X8, [X19+16]
	135 Move X9, [X23]
	136 Add W10, W10, 1
	137 Move [X19+28], W10
	138 Compare X8, 0
	139 JumpIfEqual {201}
	140 NotImplemented "Instruction LDRSW not yet implemented."
	141 Move W11, [X8+24]
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Add W9, W10, 1
	144 Add X8, X8, X10
	145 Move [X19+24], W9
	146 Move [X8+32], W20
	147 Move X8, [X9+32]
	148 Move X8, [X8+192]
	149 Move X2, [X8+112]
	150 Move X0, X19
	151 Move W1, W20
	152 Call List`1<Byte>.AddWithResize, X0, X1
	153 Move X8, 0xBD1000
	154 Move X8, [X8+2248]
	155 Add X0, X31, 80
	156 Move X1, [X8]
	157 Call Enumerator<Byte, Object>.Dispose, X0
	158 Compare X19, 0
	159 JumpIfEqual {204}
	160 Move X8, 0xBD1000
	161 Move X8, [X8+2816]
	162 Move X0, X19
	163 Move X1, [X8]
	164 Add X8, X31, 8
	165 Call List`1<Byte>.GetEnumerator, X0
	166 NotImplemented "Instruction LDUR not yet implemented."
	167 Move X8, [X31+24]
	168 Move X19, 0xBD1000
	169 Move X19, [X19+2792]
	170 Move [X31+3], V0
	171 Move [X31+64], X8
	172 Move X20, 0xBD1000
	173 Move X20, [X20+2776]
	174 Move X1, [X19]
	175 Add X0, X31, 48
	176 Call Enumerator<Byte>.MoveNext, X0
	177 Move TEMP, X0
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfNotEqual {187}
	181 Move X0, [X31+120]
	182 Compare X0, 0
	183 JumpIfEqual {200}
	184 Move W1, [X31+64]
	185 Move X2, [X20]
	186 Call Dictionary`2<Byte, Object>.Remove, X0, X1
	187 Move X8, 0xBD1000
	188 Move X8, [X8+2784]
	189 Add X0, X31, 48
	190 Move X1, [X8]
	191 Call Enumerator<Byte>.Dispose, X0
	192 Move X20, [X31+160]
	193 Move X19, [X31+168]
	194 Move X22, [X31+144]
	195 Move X21, [X31+152]
	196 Move X30, [X31+128]
	197 Move X23, [X31+136]
	198 Add X31, X31, 176
	199 Return 
	200 Call 0x1C17F20
	201 Call 0x1C17F20
	202 Call 0x1C17F20
	203 Call 0x1C17F20
	204 Call 0x1C17F20
	205 Move X20, X0
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move X0, X20
	208 Call 0x3EB2AD0
	209 Move X19, [X0]
	210 Call 0x3EB2AE0
	211 Move X8, 0xBD1000
	212 Move X8, [X8+2784]
	213 Add X0, X31, 48
	214 Move X1, [X8]
	215 Call Enumerator<Byte>.Dispose, X0
	216 Compare X19, 0
	217 JumpIfEqual {192}
	218 Move X0, X19
	219 Call 0x1C17F18
	220 Move X19, X31
	221 Move X20, X0
	222 Move X8, 0xBD1000
	223 Move X8, [X8+2784]
	224 Move X1, [X8]
	225 Add X0, X31, 48
	226 Call Enumerator<Byte>.Dispose, X0
	227 Compare X19, 0
	228 JumpIfEqual {255}
	229 Move X0, X19
	230 Call 0x1C17F18
	231 Move X20, X0
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Move X0, X20
	234 Call 0x3EB2AD0
	235 Move X21, [X0]
	236 Call 0x3EB2AE0
	237 Move X8, 0xBD1000
	238 Move X8, [X8+2248]
	239 Add X0, X31, 80
	240 Move X1, [X8]
	241 Call Enumerator<Byte, Object>.Dispose, X0
	242 Compare X21, 0
	243 JumpIfEqual {158}
	244 Move X0, X21
	245 Call 0x1C17F18
	246 Move X21, X31
	247 Move X20, X0
	248 Move X8, 0xBD1000
	249 Move X8, [X8+2248]
	250 Move X1, [X8]
	251 Add X0, X31, 80
	252 Call Enumerator<Byte, Object>.Dispose, X0
	253 Compare X21, 0
	254 JumpIfNotEqual {257}
	255 Move X0, X20
	256 Call 0x1D2D690
	257 Move X0, X21
	258 Call 0x1C17F18
	259 Call 0x1991590

Method: System.Void onVoiceInfo(System.Int32 channelId, System.Int32 playerId, System.Byte voiceId, System.Byte eventNumber, Photon.Voice.VoiceInfo info)

Disassembly:
	0x03565440 LDP X9, X2, [X8 + 0x1A8]
	0x03565444 BLR X9
	0x03565448 LDR W8, [X19 + 0x60]
	0x0356544C CMP W0, W8
	0x03565450 B.GE 0x3565508
	0x03565454 ADRP X8, 0xB8E000
	0x03565458 LDR X8, [X8 + 0x9C8]
	0x0356545C LDR X19, [X19 + 0x18]
	0x03565460 LDR X20, [X8]
	0x03565464 LDR X8, [X20 + 0x38]
	0x03565468 CBNZ X8, 0x3565478
	0x0356546C MOV X0, X20
	0x03565470 BL 0x1C5C6E0
	0x03565474 LDR X8, [X20 + 0x38]
	0x03565478 LDR X0, [X8 + 0x10]
	0x0356547C LDRB W8, [X0 + 0x135]
	0x03565480 TBNZ X8, 0x0, 0x3565488
	0x03565484 BL 0x1C5C684
	0x03565488 LDR W8, [X0 + 0xE0]
	0x0356548C CBNZ W8, 0x3565494
	0x03565490 BL 0x1C16DFC
	0x03565494 LDR X8, [X20 + 0x38]
	0x03565498 LDR X0, [X8 + 0x10]
	0x0356549C LDRB W8, [X0 + 0x135]
	0x035654A0 TBNZ X8, 0x0, 0x35654A8
	0x035654A4 BL 0x1C5C684
	0x035654A8 CBZ X19, 0x35657B4
	0x035654AC ADRP X10, 0xB93000
	0x035654B0 ADRP X11, 0xBD0000
	0x035654B4 LDR X9, [X0 + 0xB8]
	0x035654B8 LDR X10, [X10 + 0x348]
	0x035654BC LDR X8, [X19]
	0x035654C0 LDR X11, [X11 + 0xBF0]
	0x035654C4 LDR X20, [X9]
	0x035654C8 LDR X1, [X10]
	0x035654CC LDRH W9, [X8 + 0x12E]
	0x035654D0 LDR X21, [X11]
	0x035654D4 CBZ X9, 0x35654F8
	0x035654D8 LDR X10, [X8 + 0xB0]
	0x035654DC ADD X10, X10, 0x8
	0x035654E0 LDUR X11, [X10 - 0x8]
	0x035654E4 CMP X11, X1
	0x035654E8 B.EQ 0x3565774
	0x035654EC SUBS X9, X9, 0x1
	0x035654F0 ADD X10, X10, 0x10
	0x035654F4 B.NE 0x35654E0
	0x035654F8 MOVZ W2, 0x1
	0x035654FC MOV X0, X19
	0x03565500 BL 0x1C5C788
	0x03565504 B 0x3565784
	0x03565508 LDR W8, [X19 + 0x38]
	0x0356550C LDR X0, [X19 + 0x88]
	0x03565510 ADD W8, W8, 0x1
	0x03565514 STR W8, [X19 + 0x38]
	0x03565518 CBZ X0, 0x35657B4
	0x0356551C ADRP X8, 0xBD0000
	0x03565520 LDR X8, [X8 + 0xB18]
	0x03565524 ADD X2, X31, 0x20
	0x03565528 MOV W1, W20
	0x0356552C LDR X3, [X8]
	0x03565530 BL 0x2A150AC
	0x03565534 TBZ X0, 0x0, 0x3565574
	0x03565538 LDR X0, [X31 + 0x20]
	0x0356553C CBZ X0, 0x35657B4
	0x03565540 ADRP X8, 0xBD0000
	0x03565544 LDR X8, [X8 + 0xBA0]
	0x03565548 LDRB W1, [X31 + 0x2C]
	0x0356554C ADD X2, X31, 0x8
	0x03565550 LDR X3, [X8]
	0x03565554 BL 0x29D4F58
	0x03565558 TBZ X0, 0x0, 0x356565C
	0x0356555C LDR X0, [X31 + 0x8]
	0x03565560 CBZ X0, 0x35657B4
	0x03565564 MOV X1, X21
	0x03565568 MOV W2, W22
	0x0356556C BL 0x355B460
	0x03565570 B 0x356579C
	0x03565574 LDR X21, [X19 + 0x18]
	0x03565578 ADD X0, X31, 0x2C
	0x0356557C MOV X1, X31
	0x03565580 BL 0x3319BB4
	0x03565584 MOV X22, X0
	0x03565588 MOV X0, X19
	0x0356558C MOV W1, W20
	0x03565590 BL 0x3564BA0
	0x03565594 ADRP X8, 0xBD0000
	0x03565598 LDR X8, [X8 + 0xBD8]
	0x0356559C ADRP X9, 0xBD0000
	0x035655A0 LDR X9, [X9 + 0xBE0]
	0x035655A4 MOV X3, X0
	0x035655A8 LDR X8, [X8]
	0x035655AC MOV X1, X22
	0x035655B0 LDR X2, [X9]
	0x035655B4 MOV X4, X31
	0x035655B8 MOV X0, X8
	0x035655BC BL 0x32277C4
	0x035655C0 ADRP X8, 0xB8E000
	0x035655C4 LDR X8, [X8 + 0x9C8]
	0x035655C8 MOV X19, X0
	0x035655CC LDR X20, [X8]
	0x035655D0 LDR X8, [X20 + 0x38]
	0x035655D4 CBNZ X8, 0x35655E4
	0x035655D8 MOV X0, X20
	0x035655DC BL 0x1C5C6E0
	0x035655E0 LDR X8, [X20 + 0x38]
	0x035655E4 LDR X0, [X8 + 0x10]
	0x035655E8 LDRB W8, [X0 + 0x135]
	0x035655EC TBNZ X8, 0x0, 0x35655F4
	0x035655F0 BL 0x1C5C684
	0x035655F4 LDR W8, [X0 + 0xE0]
	0x035655F8 CBNZ W8, 0x3565600
	0x035655FC BL 0x1C16DFC
	0x03565600 LDR X8, [X20 + 0x38]
	0x03565604 LDR X0, [X8 + 0x10]
	0x03565608 LDRB W8, [X0 + 0x135]
	0x0356560C TBNZ X8, 0x0, 0x3565614
	0x03565610 BL 0x1C5C684
	0x03565614 CBZ X21, 0x35657B4
	0x03565618 ADRP X10, 0xB93000
	0x0356561C LDR X9, [X0 + 0xB8]
	0x03565620 LDR X8, [X21]
	0x03565624 LDR X10, [X10 + 0x348]
	0x03565628 LDR X20, [X9]
	0x0356562C LDRH W9, [X8 + 0x12E]
	0x03565630 LDR X1, [X10]
	0x03565634 CBZ X9, 0x3565740
	0x03565638 LDR X10, [X8 + 0xB0]
	0x0356563C ADD X10, X10, 0x8
	0x03565640 LDUR X11, [X10 - 0x8]
	0x03565644 CMP X11, X1
	0x03565648 B.EQ 0x3565750
	0x0356564C SUBS X9, X9, 0x1
	0x03565650 ADD X10, X10, 0x10
	0x03565654 B.NE 0x3565640
	0x03565658 B 0x3565740
	0x0356565C LDR X21, [X19 + 0x18]
	0x03565660 ADD X0, X31, 0x2C
	0x03565664 MOV X1, X31
	0x03565668 BL 0x3319BB4
	0x0356566C MOV X22, X0
	0x03565670 MOV X0, X19
	0x03565674 MOV W1, W20
	0x03565678 BL 0x3564BA0
	0x0356567C ADRP X8, 0xBD0000
	0x03565680 LDR X8, [X8 + 0xBE8]
	0x03565684 ADRP X9, 0xBD0000
	0x03565688 LDR X9, [X9 + 0xB80]
	0x0356568C MOV X3, X0
	0x03565690 LDR X8, [X8]
	0x03565694 MOV X1, X22
	0x03565698 LDR X2, [X9]
	0x0356569C MOV X4, X31
	0x035656A0 MOV X0, X8
	0x035656A4 BL 0x32277C4
	0x035656A8 ADRP X8, 0xB8E000
	0x035656AC LDR X8, [X8 + 0x9C8]
	0x035656B0 MOV X19, X0
	0x035656B4 LDR X20, [X8]
	0x035656B8 LDR X8, [X20 + 0x38]
	0x035656BC CBNZ X8, 0x35656CC
	0x035656C0 MOV X0, X20
	0x035656C4 BL 0x1C5C6E0
	0x035656C8 LDR X8, [X20 + 0x38]
	0x035656CC LDR X0, [X8 + 0x10]
	0x035656D0 LDRB W8, [X0 + 0x135]
	0x035656D4 TBNZ X8, 0x0, 0x35656DC
	0x035656D8 BL 0x1C5C684
	0x035656DC LDR W8, [X0 + 0xE0]
	0x035656E0 CBNZ W8, 0x35656E8
	0x035656E4 BL 0x1C16DFC
	0x035656E8 LDR X8, [X20 + 0x38]
	0x035656EC LDR X0, [X8 + 0x10]
	0x035656F0 LDRB W8, [X0 + 0x135]
	0x035656F4 TBNZ X8, 0x0, 0x35656FC
	0x035656F8 BL 0x1C5C684
	0x035656FC CBZ X21, 0x35657B4
	0x03565700 ADRP X10, 0xB93000
	0x03565704 LDR X9, [X0 + 0xB8]
	0x03565708 LDR X8, [X21]
	0x0356570C LDR X10, [X10 + 0x348]
	0x03565710 LDR X20, [X9]
	0x03565714 LDRH W9, [X8 + 0x12E]
	0x03565718 LDR X1, [X10]
	0x0356571C CBZ X9, 0x3565740
	0x03565720 LDR X10, [X8 + 0xB0]
	0x03565724 ADD X10, X10, 0x8
	0x03565728 LDUR X11, [X10 - 0x8]
	0x0356572C CMP X11, X1
	0x03565730 B.EQ 0x3565750
	0x03565734 SUBS X9, X9, 0x1
	0x03565738 ADD X10, X10, 0x10
	0x0356573C B.NE 0x3565728
	0x03565740 MOVZ W2, 0x1
	0x03565744 MOV X0, X21
	0x03565748 BL 0x1C5C788
	0x0356574C B 0x3565760
	0x03565750 LDR W9, [X10]
	0x03565754 ADD W9, W9, 0x1
	0x03565758 ADD X8, X8, W9, 0x4, SXTW
	0x0356575C ADD X0, X8, 0x138
	0x03565760 LDP X8, X4, [X0]
	0x03565764 MOVZ W1, 0x2
	0x03565768 MOV X0, X21
	0x0356576C MOV X2, X19
	0x03565770 B 0x3565794
	0x03565774 LDR W9, [X10]
	0x03565778 ADD W9, W9, 0x1
	0x0356577C ADD X8, X8, W9, 0x4, SXTW
	0x03565780 ADD X0, X8, 0x138
	0x03565784 LDP X8, X4, [X0]
	0x03565788 MOVZ W1, 0x2
	0x0356578C MOV X0, X19
	0x03565790 MOV X2, X21
	0x03565794 MOV X3, X20
	0x03565798 BLR X8
	0x0356579C LDP X20, X19, [X31 + 0x60]
	0x035657A0 LDP X22, X21, [X31 + 0x50]
	0x035657A4 LDP X24, X23, [X31 + 0x40]
	0x035657A8 LDP X30, X25, [X31 + 0x30]
	0x035657AC ADD X31, X31, 0x70
	0x035657B0 RET
	0x035657B4 BL 0x1C16F20
	0x035657B8 SUB X31, X31, 0x120
	0x035657BC STP X29, X30, [X31 + 0xC0]
	0x035657C0 STP X28, X27, [X31 + 0xD0]
	0x035657C4 STP X26, X25, [X31 + 0xE0]
	0x035657C8 STP X24, X23, [X31 + 0xF0]
	0x035657CC STP X22, X21, [X31 + 0x100]
	0x035657D0 STP X20, X19, [X31 + 0x110]
	0x035657D4 ADRP X21, 0xE7A000
	0x035657D8 LDRB W8, [X21 + 0xDD7]
	0x035657DC MOV X19, X0
	0x035657E0 ADD X20, X31, 0x90
	0x035657E4 TBNZ X8, 0x0, 0x35658A4
	0x035657E8 ADRP X0, 0xBD0000
	0x035657EC LDR X0, [X0 + 0x848]
	0x035657F0 BL 0x1C16CF4
	0x035657F4 ADRP X0, 0xBD0000
	0x035657F8 LDR X0, [X0 + 0x8B0]
	0x035657FC BL 0x1C16CF4
	0x03565800 ADRP X0, 0xBD0000
	0x03565804 LDR X0, [X0 + 0x8B8]
	0x03565808 BL 0x1C16CF4
	0x0356580C ADRP X0, 0xBD0000
	0x03565810 LDR X0, [X0 + 0x850]
	0x03565814 BL 0x1C16CF4
	0x03565818 ADRP X0, 0xBD0000
	0x0356581C LDR X0, [X0 + 0x8C0]
	0x03565820 BL 0x1C16CF4
	0x03565824 ADRP X0, 0xBD0000
	0x03565828 LDR X0, [X0 + 0x8C8]
	0x0356582C BL 0x1C16CF4
	0x03565830 ADRP X0, 0xBD0000
	0x03565834 LDR X0, [X0 + 0x8D0]
	0x03565838 BL 0x1C16CF4
	0x0356583C ADRP X0, 0xBD0000
	0x03565840 LDR X0, [X0 + 0x858]
	0x03565844 BL 0x1C16CF4
	0x03565848 ADRP X0, 0xBD0000
	0x0356584C LDR X0, [X0 + 0x8D8]
	0x03565850 BL 0x1C16CF4
	0x03565854 ADRP X0, 0xBD0000
	0x03565858 LDR X0, [X0 + 0x860]
	0x0356585C BL 0x1C16CF4
	0x03565860 ADRP X0, 0xBD0000
	0x03565864 LDR X0, [X0 + 0x8E0]
	0x03565868 BL 0x1C16CF4
	0x0356586C ADRP X0, 0xBD0000
	0x03565870 LDR X0, [X0 + 0x8E8]
	0x03565874 BL 0x1C16CF4
	0x03565878 ADRP X0, 0xBD0000
	0x0356587C LDR X0, [X0 + 0x868]
	0x03565880 BL 0x1C16CF4
	0x03565884 ADRP X0, 0xBD0000
	0x03565888 LDR X0, [X0 + 0x8F0]
	0x0356588C BL 0x1C16CF4
	0x03565890 ADRP X0, 0xBD0000
	0x03565894 LDR X0, [X0 + 0x8F8]
	0x03565898 BL 0x1C16CF4
	0x0356589C MOVZ W8, 0x1
	0x035658A0 STRB W8, [X21 + 0xDD7]
	0x035658A4 MOVI V0.2D, 0x0
	0x035658A8 STR X31, [X31 + 0xB0]
	0x035658AC STR X31, [X31 + 0x80]
	0x035658B0 STR X31, [X31 + 0x50]
	0x035658B4 STP V0, V0, [X20]
	0x035658B8 STP V0, V0, [X31 + 0x60]
	0x035658BC STP V0, V0, [X31 + 0x30]
	0x035658C0 LDR X0, [X19 + 0x78]
	0x035658C4 CBZ X0, 0x3565A9C
	0x035658C8 ADRP X8, 0xBD0000
	0x035658CC LDR X8, [X8 + 0x848]
	0x035658D0 ADRP X28, 0xBD0000
	0x035658D4 ADRP X26, 0xBD0000
	0x035658D8 ADRP X23, 0xBD0000
	0x035658DC ADRP X24, 0xBD0000
	0x035658E0 ADRP X25, 0xBD0000
	0x035658E4 LDR X28, [X28 + 0x858]
	0x035658E8 LDR X26, [X26 + 0x8B0]
	0x035658EC LDR X23, [X23 + 0x8D0]
	0x035658F0 LDR X24, [X24 + 0x8B8]
	0x035658F4 LDR X25, [X25 + 0x8D8]
	0x035658F8 LDR X1, [X8]
	0x035658FC ADRP X22, 0xBD0000
	0x03565900 ADRP X21, 0xBD0000
	0x03565904 ADRP X27, 0xBD0000
	0x03565908 LDR X22, [X22 + 0x8C8]
	0x0356590C LDR X21, [X21 + 0x8C0]
	0x03565910 LDR X27, [X27 + 0x850]
	0x03565914 ADD X8, X31, 0x8
	0x03565918 BL 0x29D395C
	0x0356591C LDUR V0, [X31 + 0x8]
	0x03565920 LDUR V1, [X31 + 0x18]
	0x03565924 LDR X8, [X31 + 0x28]
	0x03565928 STP V0, V1, [X20]
	0x0356592C STR X8, [X31 + 0xB0]
	0x03565930 LDR X1, [X28]
	0x03565934 ADD X0, X31, 0x90
	0x03565938 BL 0x2BEA018
	0x0356593C TBZ X0, 0x0, 0x3565958
	0x03565940 LDR X0, [X31 + 0xA8]
	0x03565944 CBZ X0, 0x3565A8C
	0x03565948 LDR X8, [X0]
	0x0356594C LDP X9, X1, [X8 + 0x198]
	0x03565950 BLR X9
	0x03565954 B 0x3565930
	0x03565958 LDR X1, [X27]
	0x0356595C ADD X0, X31, 0x90
	0x03565960 BL 0x2BEA130
	0x03565964 LDR X0, [X19 + 0x88]
	0x03565968 CBZ X0, 0x3565A9C
	0x0356596C LDR X1, [X26]
	0x03565970 ADD X8, X31, 0x8
	0x03565974 BL 0x2A13AB4
	0x03565978 LDUR V0, [X31 + 0x8]
	0x0356597C LDUR V1, [X31 + 0x18]
	0x03565980 LDR X8, [X31 + 0x28]
	0x03565984 STP V0, V1, [X31 + 0x60]
	0x03565988 STR X8, [X31 + 0x80]
	0x0356598C LDR X1, [X23]
	0x03565990 ADD X0, X31, 0x60
	0x03565994 BL 0x2BF5330
	0x03565998 TBZ X0, 0x0, 0x3565A3C
	0x0356599C LDR X0, [X31 + 0x78]
	0x035659A0 CBZ X0, 0x3565A98
	0x035659A4 LDR X1, [X24]
	0x035659A8 ADD X8, X31, 0x8
	0x035659AC BL 0x29D395C
	0x035659B0 LDUR V0, [X31 + 0x8]
	0x035659B4 LDUR V1, [X31 + 0x18]
	0x035659B8 LDR X8, [X31 + 0x28]
	0x035659BC STP V0, V1, [X31 + 0x30]
	0x035659C0 STR X8, [X31 + 0x50]
	0x035659C4 LDR X1, [X25]
	0x035659C8 ADD X0, X31, 0x30
	0x035659CC BL 0x2BEA018
	0x035659D0 TBZ X0, 0x0, 0x35659E4
	0x035659D4 LDR X0, [X31 + 0x48]
	0x035659D8 CBZ X0, 0x3565A0C
	0x035659DC BL 0x355C5D8
	0x035659E0 B 0x35659C4
	0x035659E4 MOV X20, X31
	0x035659E8 MOVZ W19, 0x5
	0x035659EC LDR X1, [X22]
	0x035659F0 ADD X0, X31, 0x30
	0x035659F4 BL 0x2BEA130
	0x035659F8 CBNZ X20, 0x3565A90
	0x035659FC CMP W19, 0x5
	0x03565A00 B.EQ 0x356598C
	0x03565A04 CBZ W19, 0x356598C
	0x03565A08 B 0x3565A3C
	0x03565A0C BL 0x1C16F20
	0x03565A10 B 0x3565AA0
	0x03565A14 B 0x3565A1C
	0x03565A18 B 0x3565A1C
	0x03565A1C MOV X19, X1
	0x03565A20 CMP W19, 0x1
	0x03565A24 B.NE 0x3565A68
	0x03565A28 BL 0x3EB1AD0
	0x03565A2C LDR X20, [X0]
	0x03565A30 BL 0x3EB1AE0
	0x03565A34 MOV W19, W31
	0x03565A38 B 0x35659EC
	0x03565A3C LDR X1, [X21]
	0x03565A40 ADD X0, X31, 0x60
	0x03565A44 BL 0x2BF5448
	0x03565A48 LDP X20, X19, [X31 + 0x110]
	0x03565A4C LDP X22, X21, [X31 + 0x100]
	0x03565A50 LDP X24, X23, [X31 + 0xF0]
	0x03565A54 LDP X26, X25, [X31 + 0xE0]
	0x03565A58 LDP X28, X27, [X31 + 0xD0]
	0x03565A5C LDP X29, X30, [X31 + 0xC0]
	0x03565A60 ADD X31, X31, 0x120
	0x03565A64 RET
	0x03565A68 STR X0, [X31]
	0x03565A6C MOV X20, X31
	0x03565A70 LDR X1, [X22]
	0x03565A74 ADD X0, X31, 0x30
	0x03565A78 BL 0x2BEA130
	0x03565A7C LDR X0, [X31]
	0x03565A80 CBZ X20, 0x3565AC0
	0x03565A84 MOV X0, X20
	0x03565A88 BL 0x1C16F18
	0x03565A8C BL 0x1C16F20
	0x03565A90 MOV X0, X20
	0x03565A94 BL 0x1C16F18
	0x03565A98 BL 0x1C16F20
	0x03565A9C BL 0x1C16F20
	0x03565AA0 MOV X19, X1
	0x03565AA4 STR X0, [X31]
	0x03565AA8 B 0x3565A70
	0x03565AAC B 0x3565ABC
	0x03565AB0 B 0x3565ABC
	0x03565AB4 B 0x3565ABC
	0x03565AB8 B 0x3565ABC
	0x03565ABC MOV X19, X1
	0x03565AC0 CMP W19, 0x1
	0x03565AC4 B.NE 0x3565AEC
	0x03565AC8 BL 0x3EB1AD0
	0x03565ACC LDR X19, [X0]
	0x03565AD0 BL 0x3EB1AE0
	0x03565AD4 LDR X1, [X21]
	0x03565AD8 ADD X0, X31, 0x60
	0x03565ADC BL 0x2BF5448
	0x03565AE0 CBZ X19, 0x3565A48
	0x03565AE4 MOV X0, X19
	0x03565AE8 BL 0x1C16F18
	0x03565AEC STR X0, [X31]
	0x03565AF0 MOV X19, X31
	0x03565AF4 B 0x3565AFC
	0x03565AF8 STR X0, [X31]
	0x03565AFC LDR X1, [X21]
	0x03565B00 ADD X0, X31, 0x60
	0x03565B04 BL 0x2BF5448
	0x03565B08 CBZ X19, 0x3565B6C
	0x03565B0C MOV X0, X19
	0x03565B10 BL 0x1C16F18
	0x03565B14 B 0x3565B1C
	0x03565B18 B 0x3565B1C
	0x03565B1C CMP W1, 0x1
	0x03565B20 STR X0, [X31]
	0x03565B24 B.NE 0x3565B50
	0x03565B28 LDR X0, [X31]
	0x03565B2C BL 0x3EB1AD0
	0x03565B30 LDR X20, [X0]
	0x03565B34 BL 0x3EB1AE0
	0x03565B38 LDR X1, [X27]
	0x03565B3C ADD X0, X31, 0x90
	0x03565B40 BL 0x2BEA130
	0x03565B44 CBZ X20, 0x3565964
	0x03565B48 MOV X0, X20
	0x03565B4C BL 0x1C16F18
	0x03565B50 MOV X20, X31
	0x03565B54 B 0x3565B5C
	0x03565B58 STR X0, [X31]
	0x03565B5C LDR X1, [X27]
	0x03565B60 ADD X0, X31, 0x90
	0x03565B64 BL 0x2BEA130
	0x03565B68 CBNZ X20, 0x3565B74
	0x03565B6C LDR X0, [X31]
	0x03565B70 BL 0x1D2C690
	0x03565B74 MOV X0, X20
	0x03565B78 BL 0x1C16F18
	0x03565B7C BL 0x1990590
	0x03565B80 STP X30, X21, [X31 - 0x20]!
	0x03565B84 STP X20, X19, [X31 + 0x10]
	0x03565B88 LDR X8, [X2 + 0x8]
	0x03565B8C STP X1, X2, [X0 + 0x20]
	0x03565B90 MOV X19, X0
	0x03565B94 MOV X20, X1
	0x03565B98 STR X8, [X0 + 0x10]
	0x03565B9C LDRB W21, [X2 + 0x52]

ISIL:
	001 Subtract X31, X31, 448
	002 Move [X31+352], X29
	003 Move [X31+368], X30
	004 Move [X31+376], X27
	005 Move [X31+384], X26
	006 Move [X31+392], X25
	007 Move [X31+400], X24
	008 Move [X31+408], X23
	009 Move [X31+416], X22
	010 Move [X31+424], X21
	011 Move [X31+432], X20
	012 Move [X31+440], X19
	013 Move X23, 0xE7B000
	014 Move W8, [X23+3538]
	015 Move X22, X5
	016 Move W21, W2
	017 Move W20, W1
	018 Move X19, X0
	019 Move [X31+300], W3
	020 Move [X31+296], W4
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {93}
	025 Move X0, 0xB8F000
	026 Move X0, [X0+2504]
	027 Call 0x1C17CF4
	028 Move X0, 0xBB8000
	029 Move X0, [X0+1064]
	030 Call 0x1C17CF4
	031 Move X0, 0xBD1000
	032 Move X0, [X0+2880]
	033 Call 0x1C17CF4
	034 Move X0, 0xBD1000
	035 Move X0, [X0+2840]
	036 Call 0x1C17CF4
	037 Move X0, 0xBD1000
	038 Move X0, [X0+2888]
	039 Call 0x1C17CF4
	040 Move X0, 0xBD1000
	041 Move X0, [X0+2896]
	042 Call 0x1C17CF4
	043 Move X0, 0xBD1000
	044 Move X0, [X0+2904]
	045 Call 0x1C17CF4
	046 Move X0, 0xBD1000
	047 Move X0, [X0+2912]
	048 Call 0x1C17CF4
	049 Move X0, 0xBD1000
	050 Move X0, [X0+2920]
	051 Call 0x1C17CF4
	052 Move X0, 0xB94000
	053 Move X0, [X0+840]
	054 Call 0x1C17CF4
	055 Move X0, 0xBD1000
	056 Move X0, [X0+1872]
	057 Call 0x1C17CF4
	058 Move X0, 0xB8F000
	059 Move X0, [X0+2760]
	060 Call 0x1C17CF4
	061 Move X0, 0xBD1000
	062 Move X0, [X0+1320]
	063 Call 0x1C17CF4
	064 Move X0, 0xBD1000
	065 Move X0, [X0+1344]
	066 Call 0x1C17CF4
	067 Move X0, 0xBD1000
	068 Move X0, [X0+2928]
	069 Call 0x1C17CF4
	070 Move X0, 0xBD1000
	071 Move X0, [X0+2936]
	072 Call 0x1C17CF4
	073 Move X0, 0xBD1000
	074 Move X0, [X0+2944]
	075 Call 0x1C17CF4
	076 Move X0, 0xBD1000
	077 Move X0, [X0+2952]
	078 Call 0x1C17CF4
	079 Move X0, 0xBD1000
	080 Move X0, [X0+1360]
	081 Call 0x1C17CF4
	082 Move X0, 0xBD1000
	083 Move X0, [X0+2960]
	084 Call 0x1C17CF4
	085 Move X0, 0xBD1000
	086 Move X0, [X0+2968]
	087 Call 0x1C17CF4
	088 Move X0, 0xBD1000
	089 Move X0, [X0+1256]
	090 Call 0x1C17CF4
	091 Move W8, 1
	092 Move [X23+3538], W8
	093 NotImplemented "Instruction MOVI not yet implemented."
	094 Move [X31+204], W31
	095 Move [X31+256], V0
	096 Move [X31+264], V0
	097 Move [X31+224], V0
	098 Move [X31+232], V0
	099 Move [X31+13], V0
	100 Move [X31+288], X31
	101 Move X0, [X19+136]
	102 Compare X0, 0
	103 JumpIfEqual {520}
	104 Move X8, 0xBD1000
	105 Move X8, [X8+2840]
	106 Add X2, X31, 288
	107 Move W1, W21
	108 Move X3, [X8]
	109 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfEqual {133}
	114 Move X8, 0xBD1000
	115 Move X8, [X8+2920]
	116 Move X0, [X8]
	117 Call 0x1C17F10
	118 Move X8, 0xBD1000
	119 Move X8, [X8+2896]
	120 Move X23, X0
	121 Move X1, [X8]
	122 Call Dictionary`2<Byte, Object>..ctor, X0
	123 Move [X31+288], X23
	124 Move X0, [X19+136]
	125 Compare X0, 0
	126 JumpIfEqual {520}
	127 Move X8, 0xBD1000
	128 Move X8, [X8+2904]
	129 Move W1, W21
	130 Move X2, X23
	131 Move X3, [X8]
	132 Call Dictionary`2<Int32, Object>.set_Item, X0, X1, X2
	133 Move X0, [X31+288]
	134 Compare X0, 0
	135 JumpIfEqual {520}
	136 Move X8, 0xBD1000
	137 Move X8, [X8+2880]
	138 Move W1, [X31+300]
	139 Move X2, [X8]
	140 Call Dictionary`2<Byte, Object>.ContainsKey, X0, X1
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {244}
	145 Move W8, [X19+84]
	146 Compare W8, 0
	147 JumpIfNotEqual {506}
	148 Move X8, 0xB8F000
	149 Move X22, [X19+24]
	150 Move X8, [X8+2760]
	151 Move W1, 6
	152 Move X0, [X8]
	153 Call 0x1C17D6C
	154 Compare X0, 0
	155 JumpIfEqual {520}
	156 Move W8, [X0+24]
	157 Move X23, X0
	158 Compare W8, 0
	159 JumpIfEqual {519}
	160 Move X8, 0xBD1000
	161 Move X8, [X8+2960]
	162 Add X0, X31, 300
	163 Move X1, X31
	164 Move X8, [X8]
	165 Move [X23+32], X8
	166 Call Byte.ToString, X0
	167 Move W8, [X23+24]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move [X23+40], X0
	171 Move X8, 0xBD1000
	172 Move X8, [X8+2944]
	173 Move X0, X19
	174 Move W1, W21
	175 Move X8, [X8]
	176 Move [X23+48], X8
	177 Call VoiceClient.playerStr, X0, X1
	178 Move W8, [X23+24]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move [X23+56], X0
	182 Move X8, 0xBD1000
	183 Move X8, [X8+2968]
	184 Move X0, X19
	185 Move W1, W20
	186 Move X8, [X8]
	187 Move [X23+64], X8
	188 Call VoiceClient.channelStr, X0, X1
	189 Move W8, [X23+24]
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move [X23+72], X0
	192 Move X0, X23
	193 Move X1, X31
	194 Call String.Concat, X0
	195 Move X8, 0xB8F000
	196 Move X8, [X8+2504]
	197 Move X19, X0
	198 Move X20, [X8]
	199 Move X8, [X20+56]
	200 Compare X8, 0
	201 JumpIfNotEqual {205}
	202 Move X0, X20
	203 Call 0x1C5D6E0
	204 Move X8, [X20+56]
	205 Move X0, [X8+16]
	206 Move W8, [X0+309]
	207 Move TEMP, X8
	208 And TEMP, TEMP, 1
	209 Compare TEMP, 1
	210 JumpIfEqual {212}
	211 Call 0x1C5D684
	212 Move W8, [X0+224]
	213 Compare W8, 0
	214 JumpIfNotEqual {216}
	215 Call 0x1C17DFC
	216 Move X8, [X20+56]
	217 Move X0, [X8+16]
	218 Move W8, [X0+309]
	219 Move TEMP, X8
	220 And TEMP, TEMP, 1
	221 Compare TEMP, 1
	222 JumpIfEqual {224}
	223 Call 0x1C5D684
	224 Compare X22, 0
	225 JumpIfEqual {520}
	226 Move X10, 0xB94000
	227 Move X9, [X0+184]
	228 Move X8, [X22]
	229 Move X10, [X10+840]
	230 Move X20, [X9]
	231 NotImplemented "Instruction LDRH not yet implemented."
	232 Move X1, [X10]
	233 Compare X9, 0
	234 JumpIfEqual {241}
	235 Move X10, [X8+176]
	236 Add X10, X10, 8
	237 NotImplemented "Instruction LDUR not yet implemented."
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Subtract X9, X9, 1
	240 Add X10, X10, 16
	241 Move W2, 1
	242 Move X0, X22
	243 Call 0x1C5D788
	244 Move X25, 0xB8F000
	245 Move X25, [X25+2760]
	246 Move W1, 6
	247 Move X0, [X25]
	248 Call 0x1C17D6C
	249 Compare X0, 0
	250 JumpIfEqual {520}
	251 Move W8, [X0+24]
	252 Move X23, X0
	253 Compare W8, 0
	254 JumpIfEqual {519}
	255 Move X8, 0xBD1000
	256 Move X8, [X8+2936]
	257 Move X0, X19
	258 Move W1, W21
	259 Move X8, [X8]
	260 Move [X23+32], X8
	261 Call VoiceClient.playerStr, X0, X1
	262 Move W8, [X23+24]
	263 NotImplemented "Instruction CMP not yet implemented."
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Move [X23+40], X0
	266 Move X8, 0xBD1000
	267 Move X8, [X8+1344]
	268 Add X0, X31, 300
	269 Move X1, X31
	270 Move X8, [X8]
	271 Move [X23+48], X8
	272 Call Byte.ToString, X0
	273 Move W8, [X23+24]
	274 NotImplemented "Instruction CMP not yet implemented."
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Move [X23+56], X0
	277 Move X8, 0xBD1000
	278 Move X8, [X8+1360]
	279 Move X0, X19
	280 Move W1, W20
	281 Move X8, [X8]
	282 Move [X23+64], X8
	283 Call VoiceClient.channelStr, X0, X1
	284 Move W8, [X23+24]
	285 NotImplemented "Instruction CMP not yet implemented."
	286 Move [X23+72], X0
	287 Move X0, X23
	288 Move X1, X31
	289 Call String.Concat, X0
	290 Move X8, [X25]
	291 Move X24, [X19+24]
	292 Move X23, X0
	293 Move W1, 6
	294 Move X0, X8
	295 Call 0x1C17D6C
	296 Compare X0, 0
	297 JumpIfEqual {520}
	298 Move W8, [X0+24]
	299 Move X25, X0
	300 Compare W8, 0
	301 JumpIfEqual {519}
	302 Move X9, 0xBD1000
	303 Move X9, [X9+1320]
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Move X9, [X9]
	306 Move [X25+32], X9
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Move [X25+40], X23
	309 Move X8, 0xBD1000
	310 Move X8, [X8+2928]
	311 Move X0, X22
	312 Move X8, [X8]
	313 Move [X25+48], X8
	314 Call VoiceInfo.ToString, X0
	315 Move W8, [X25+24]
	316 NotImplemented "Instruction CMP not yet implemented."
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move [X25+56], X0
	319 Move X8, 0xBD1000
	320 Move X8, [X8+1256]
	321 Add X0, X31, 296
	322 Move X1, X31
	323 Move X8, [X8]
	324 Move [X25+64], X8
	325 Call Byte.ToString, X0
	326 Move W8, [X25+24]
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Move [X25+72], X0
	329 Move X0, X25
	330 Move X1, X31
	331 Call String.Concat, X0
	332 Move X8, 0xB8F000
	333 Move X8, [X8+2504]
	334 Move X25, X0
	335 Move X26, [X8]
	336 Move X8, [X26+56]
	337 Compare X8, 0
	338 JumpIfNotEqual {342}
	339 Move X0, X26
	340 Call 0x1C5D6E0
	341 Move X8, [X26+56]
	342 Move X0, [X8+16]
	343 Move W8, [X0+309]
	344 Move TEMP, X8
	345 And TEMP, TEMP, 1
	346 Compare TEMP, 1
	347 JumpIfEqual {349}
	348 Call 0x1C5D684
	349 Move W8, [X0+224]
	350 Compare W8, 0
	351 JumpIfNotEqual {353}
	352 Call 0x1C17DFC
	353 Move X8, [X26+56]
	354 Move X0, [X8+16]
	355 Move W8, [X0+309]
	356 Move TEMP, X8
	357 And TEMP, TEMP, 1
	358 Compare TEMP, 1
	359 JumpIfEqual {361}
	360 Call 0x1C5D684
	361 Compare X24, 0
	362 JumpIfEqual {520}
	363 Move X10, 0xB94000
	364 Move X9, [X0+184]
	365 Move X8, [X24]
	366 Move X10, [X10+840]
	367 Add X27, X31, 208
	368 Move X26, [X9]
	369 NotImplemented "Instruction LDRH not yet implemented."
	370 Move X1, [X10]
	371 Compare X9, 0
	372 JumpIfEqual {379}
	373 Move X10, [X8+176]
	374 Add X10, X10, 8
	375 NotImplemented "Instruction LDUR not yet implemented."
	376 NotImplemented "Instruction CMP not yet implemented."
	377 Subtract X9, X9, 1
	378 Add X10, X10, 16
	379 Move W2, 1
	380 Move X0, X24
	381 Call 0x1C5D788
	382 Move W9, [X10]
	383 Add W9, W9, 1
	384 Add X8, X8, W9
	385 Add X0, X8, 312
	386 Move X8, [X0]
	387 Move X4, [X0+8]
	388 Move W1, 3
	389 Move X0, X24
	390 Move X2, X25
	391 Move X3, X26
	392 NotImplemented "Instruction BLR not yet implemented."
	393 Move X8, 0xBB8000
	394 Move X8, [X8+1064]
	395 Move W9, [X22]
	396 Move TEMP, 0
	397 Not TEMP
	398 Move X10, TEMP
	399 Add X0, X31, 304
	400 Move X8, [X8]
	401 Move X1, X31
	402 Move [X31+320], W9
	403 Move [X31+304], X8
	404 Move [X31+312], X10
	405 Call Enum.ToString, X0
	406 Move X8, 0xBD1000
	407 Move X8, [X8+2952]
	408 Move X1, X0
	409 Move X2, X23
	410 Move X3, X31
	411 Move X8, [X8]
	412 Move X0, X8
	413 Call String.Concat, X0, X1, X2
	414 Move V1, [X22+16]
	415 Move V0, [X22+32]
	416 Move V2, [X22]
	417 Move X8, [X19+24]
	418 Move [X27+56], V0
	419 Move [X27+40], V1
	420 Move [X27+24], V2
	421 Move [X31+216], X31
	422 Move [X31+224], X8
	423 Move [X31+280], X0
	424 Move [X31+208], X31
	425 Move X8, [X19+88]
	426 Compare X8, 0
	427 JumpIfEqual {446}
	428 Move V0, [X22]
	429 Move V1, [X22+16]
	430 Move V2, [X22+2]
	431 Move W3, [X31+300]
	432 Add X4, X31, 304
	433 Move [X31+144], V0
	434 Move [X31+152], V1
	435 Move [X31+11], V2
	436 Move X9, [X8+24]
	437 Move X0, [X8+64]
	438 Move [X31+304], V0
	439 Move [X31+312], V1
	440 Move [X31+21], V2
	441 Move X6, [X8+40]
	442 Add X5, X31, 208
	443 Move W1, W20
	444 Move W2, W21
	445 NotImplemented "Instruction BLR not yet implemented."
	446 Add X0, X31, 64
	447 Add X1, X31, 208
	448 Move W2, 80
	449 Call 0x3EB2AC0
	450 Move X8, 0xBD1000
	451 Move V1, [X22+16]
	452 Move V0, [X22+32]
	453 Move V2, [X22]
	454 Move X8, [X8+1872]
	455 Move W24, [X31+300]
	456 Move [X31+3], V0
	457 Move [X31+16], V2
	458 Move [X31+24], V1
	459 Move X0, [X8]
	460 Call 0x1C17F10
	461 Add X2, X31, 64
	462 Add X6, X31, 16
	463 Move X1, X19
	464 Move W3, W20
	465 Move W4, W21
	466 Move W5, W24
	467 Move X23, X0
	468 Call RemoteVoice..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	469 Move X0, [X31+288]
	470 Compare X0, 0
	471 JumpIfEqual {520}
	472 Move X8, 0xBD1000
	473 Move X8, [X8+2912]
	474 Move W1, [X31+300]
	475 Move X2, X23
	476 Move X3, [X8]
	477 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	478 Move X0, [X19+104]
	479 Compare X0, 0
	480 JumpIfEqual {520}
	481 Move X8, 0xBD1000
	482 Move W1, [X22]
	483 Move X8, [X8+2888]
	484 Add X2, X31, 204
	485 Move X3, [X8]
	486 Call Dictionary`2<Int32Enum, Int32>.TryGetValue, X0, X1, X2
	487 Move TEMP, X0
	488 And TEMP, TEMP, 1
	489 Compare TEMP, 1
	490 JumpIfNotEqual {506}
	491 Compare X23, 0
	492 JumpIfEqual {520}
	493 Move W8, [X31+204]
	494 Move [X23+148], W8
	495 Move W9, [X10]
	496 Add W9, W9, 1
	497 Add X8, X8, W9
	498 Add X0, X8, 312
	499 Move X8, [X0]
	500 Move X4, [X0+8]
	501 Move W1, 2
	502 Move X0, X22
	503 Move X2, X19
	504 Move X3, X20
	505 NotImplemented "Instruction BLR not yet implemented."
	506 Move X20, [X31+432]
	507 Move X19, [X31+440]
	508 Move X22, [X31+416]
	509 Move X21, [X31+424]
	510 Move X24, [X31+400]
	511 Move X23, [X31+408]
	512 Move X26, [X31+384]
	513 Move X25, [X31+392]
	514 Move X30, [X31+368]
	515 Move X27, [X31+376]
	516 Move X29, [X31+352]
	517 Add X31, X31, 448
	518 Return 
	519 Call 0x1C17F28
	520 Call 0x1C17F20

Method: System.Void onVoiceRemove(System.Int32 playerId, System.Byte[] voiceIds)

Disassembly:
	0x03565CAC ADRP X0, 0xB8F000
	0x03565CB0 LDR X0, [X0 + 0x9D8]
	0x03565CB4 BL 0x1C16CF4
	0x03565CB8 ADRP X0, 0xB8E000
	0x03565CBC LDR X0, [X0 + 0x758]
	0x03565CC0 BL 0x1C16CF4
	0x03565CC4 ADRP X0, 0xBD0000
	0x03565CC8 LDR X0, [X0 + 0xBF8]
	0x03565CCC BL 0x1C16CF4
	0x03565CD0 ADRP X0, 0xB93000
	0x03565CD4 LDR X0, [X0 + 0x390]
	0x03565CD8 BL 0x1C16CF4
	0x03565CDC MOVZ W8, 0x1
	0x03565CE0 STRB W8, [X28 + 0xDD8]
	0x03565CE4 LDR X0, [X27]
	0x03565CE8 MOVI V0.2D, 0x0
	0x03565CEC ADD X1, X31, 0x4C
	0x03565CF0 STP V0, V0, [X31 + 0x10]
	0x03565CF4 STR V0, [X31]
	0x03565CF8 BL 0x1C16E04
	0x03565CFC LDR X8, [X27]
	0x03565D00 STR X0, [X31]
	0x03565D04 ADD X1, X31, 0x48
	0x03565D08 MOV X0, X8
	0x03565D0C BL 0x1C16E04
	0x03565D10 LDR X8, [X26]
	0x03565D14 STR X0, [X31 + 0x8]
	0x03565D18 ADD X1, X31, 0x3C
	0x03565D1C MOV X0, X8
	0x03565D20 BL 0x1C16E04
	0x03565D24 LDR X8, [X25]
	0x03565D28 STR X0, [X31 + 0x10]
	0x03565D2C MOV X1, X23
	0x03565D30 MOV X0, X8
	0x03565D34 BL 0x1C16E04
	0x03565D38 LDR X8, [X24]
	0x03565D3C STR X0, [X31 + 0x18]
	0x03565D40 MOV X1, X22
	0x03565D44 MOV X0, X8
	0x03565D48 BL 0x1C16E04
	0x03565D4C STR X0, [X31 + 0x20]
	0x03565D50 ADD X1, X31, 0x0
	0x03565D54 MOV X0, X21
	0x03565D58 MOV X2, X20
	0x03565D5C MOV X3, X19
	0x03565D60 BL 0x1C16CB0
	0x03565D64 LDP X20, X19, [X31 + 0x90]
	0x03565D68 LDP X22, X21, [X31 + 0x80]
	0x03565D6C LDP X24, X23, [X31 + 0x70]
	0x03565D70 LDP X26, X25, [X31 + 0x60]
	0x03565D74 LDP X28, X27, [X31 + 0x50]
	0x03565D78 LDR X30, [X31 + 0x40]
	0x03565D7C ADD X31, X31, 0xA0
	0x03565D80 RET
	0x03565D84 STR X30, [X31 - 0x10]!
	0x03565D88 MOV X0, X2
	0x03565D8C STR X1, [X31 + 0x8]
	0x03565D90 ADD X1, X31, 0x8
	0x03565D94 BL 0x1C16CB4
	0x03565D98 LDR X30, [X31], #0x10
	0x03565D9C RET
	0x03565DA0 STR X30, [X31 - 0x20]!
	0x03565DA4 STP X20, X19, [X31 + 0x10]
	0x03565DA8 ADRP X19, 0xE7A000
	0x03565DAC ADRP X20, 0xBD0000
	0x03565DB0 LDRB W8, [X19 + 0xDD9]
	0x03565DB4 LDR X20, [X20 + 0x948]
	0x03565DB8 TBNZ X8, 0x0, 0x3565DD0
	0x03565DBC ADRP X0, 0xBD0000
	0x03565DC0 LDR X0, [X0 + 0x948]
	0x03565DC4 BL 0x1C16CF4
	0x03565DC8 MOVZ W8, 0x1
	0x03565DCC STRB W8, [X19 + 0xDD9]
	0x03565DD0 LDR X8, [X20]
	0x03565DD4 LDP X20, X19, [X31 + 0x10]
	0x03565DD8 MOVZ W9, 0xF01
	0x03565DDC LDR X8, [X8 + 0xB8]
	0x03565DE0 STRH W9, [X8]
	0x03565DE4 LDR X30, [X31], #0x20
	0x03565DE8 RET
	0x03565DEC SUB X31, X31, 0x80
	0x03565DF0 STR X30, [X31 + 0x50]
	0x03565DF4 STP X22, X21, [X31 + 0x60]
	0x03565DF8 STP X20, X19, [X31 + 0x70]
	0x03565DFC ADRP X21, 0xE7A000
	0x03565E00 ADRP X22, 0xBD0000
	0x03565E04 LDRB W8, [X21 + 0xDDA]
	0x03565E08 LDR X22, [X22 + 0xC00]
	0x03565E0C MOV W19, W1
	0x03565E10 MOV X20, X0
	0x03565E14 TBNZ X8, 0x0, 0x3565E2C
	0x03565E18 ADRP X0, 0xBD0000
	0x03565E1C LDR X0, [X0 + 0xC00]
	0x03565E20 BL 0x1C16CF4
	0x03565E24 MOVZ W8, 0x1
	0x03565E28 STRB W8, [X21 + 0xDDA]
	0x03565E2C LDUR V0, [X20 + 0x38]
	0x03565E30 LDUR V1, [X20 + 0x28]
	0x03565E34 LDUR V2, [X20 + 0x18]
	0x03565E38 LDR X21, [X20 + 0x10]
	0x03565E3C LDR X0, [X22]
	0x03565E40 STP V1, V0, [X31 + 0x30]
	0x03565E44 LDP V0, V1, [X20 + 0x50]
	0x03565E48 LDR W20, [X20 + 0x48]
	0x03565E4C STP V1, V2, [X31 + 0x10]
	0x03565E50 STR V0, [X31]
	0x03565E54 BL 0x1C16F10
	0x03565E58 ADD X3, X31, 0x20
	0x03565E5C ADD X5, X31, 0x0
	0x03565E60 MOV X1, X21
	0x03565E64 MOV W2, W19
	0x03565E68 MOV W4, W20
	0x03565E6C MOV X22, X0
	0x03565E70 BL 0x355835C
	0x03565E74 MOV X0, X22
	0x03565E78 LDP X20, X19, [X31 + 0x70]
	0x03565E7C LDP X22, X21, [X31 + 0x60]
	0x03565E80 LDR X30, [X31 + 0x50]
	0x03565E84 ADD X31, X31, 0x80
	0x03565E88 RET
	0x03565E8C STP X30, X21, [X31 - 0x20]!
	0x03565E90 STP X20, X19, [X31 + 0x10]
	0x03565E94 ADRP X21, 0xE7A000
	0x03565E98 LDRB W8, [X21 + 0xDDB]
	0x03565E9C MOV X20, X1
	0x03565EA0 MOV X19, X0
	0x03565EA4 TBNZ X8, 0x0, 0x3565ED4
	0x03565EA8 ADRP X0, 0xBD0000
	0x03565EAC LDR X0, [X0 + 0xC08]
	0x03565EB0 BL 0x1C16CF4
	0x03565EB4 ADRP X0, 0xBD0000
	0x03565EB8 LDR X0, [X0 + 0xC10]
	0x03565EBC BL 0x1C16CF4
	0x03565EC0 ADRP X0, 0xBD0000
	0x03565EC4 LDR X0, [X0 + 0xA28]
	0x03565EC8 BL 0x1C16CF4
	0x03565ECC MOVZ W8, 0x1
	0x03565ED0 STRB W8, [X21 + 0xDDB]
	0x03565ED4 LDR X8, [X19 + 0x10]
	0x03565ED8 CBZ X8, 0x3565F34
	0x03565EDC CBZ X20, 0x3565F34
	0x03565EE0 LDR X0, [X8 + 0x138]
	0x03565EE4 CBZ X0, 0x3565F34
	0x03565EE8 ADRP X8, 0xBD0000
	0x03565EEC LDR X8, [X8 + 0xC08]
	0x03565EF0 LDR W1, [X20 + 0x18]
	0x03565EF4 LDR X2, [X8]
	0x03565EF8 BL 0x2D10CE4
	0x03565EFC LDR W2, [X20 + 0x18]
	0x03565F00 MOV X21, X0
	0x03565F04 MOV X0, X20
	0x03565F08 MOV X1, X21
	0x03565F0C BL 0x355476C
	0x03565F10 LDR X0, [X19 + 0x10]
	0x03565F14 CBZ X0, 0x3565F34
	0x03565F18 ADRP X8, 0xBD0000
	0x03565F1C LDR X8, [X8 + 0xC10]
	0x03565F20 LDP X20, X19, [X31 + 0x10]
	0x03565F24 MOV X1, X21
	0x03565F28 LDR X2, [X8]
	0x03565F2C LDP X30, X21, [X31], #0x20
	0x03565F30 B 0x3191E98
	0x03565F34 BL 0x1C16F20
	0x03565F38 STP X30, X21, [X31 - 0x20]!
	0x03565F3C STP X20, X19, [X31 + 0x10]
	0x03565F40 ADRP X21, 0xE7A000
	0x03565F44 LDRB W8, [X21 + 0xDDC]
	0x03565F48 MOV X19, X1
	0x03565F4C MOV X20, X0
	0x03565F50 TBNZ X8, 0x0, 0x3565F68
	0x03565F54 ADRP X0, 0xBD0000
	0x03565F58 LDR X0, [X0 + 0xC18]
	0x03565F5C BL 0x1C16CF4
	0x03565F60 MOVZ W8, 0x1
	0x03565F64 STRB W8, [X21 + 0xDDC]
	0x03565F68 LDR X0, [X20 + 0x10]
	0x03565F6C CBZ X0, 0x3565F8C
	0x03565F70 ADRP X8, 0xBD0000
	0x03565F74 LDR X8, [X8 + 0xC18]
	0x03565F78 MOV X1, X19
	0x03565F7C LDP X20, X19, [X31 + 0x10]
	0x03565F80 LDR X2, [X8]
	0x03565F84 LDP X30, X21, [X31], #0x20
	0x03565F88 B 0x3194090
	0x03565F8C BL 0x1C16F20
	0x03565F90 STP X30, X21, [X31 - 0x20]!
	0x03565F94 STP X20, X19, [X31 + 0x10]
	0x03565F98 ADRP X21, 0xE7A000
	0x03565F9C LDRB W8, [X21 + 0xDDD]
	0x03565FA0 MOV X20, X1
	0x03565FA4 MOV X19, X0
	0x03565FA8 TBNZ X8, 0x0, 0x3565FD8
	0x03565FAC ADRP X0, 0xBD0000
	0x03565FB0 LDR X0, [X0 + 0xC20]
	0x03565FB4 BL 0x1C16CF4
	0x03565FB8 ADRP X0, 0xBD0000
	0x03565FBC LDR X0, [X0 + 0xC18]
	0x03565FC0 BL 0x1C16CF4
	0x03565FC4 ADRP X0, 0xBD0000
	0x03565FC8 LDR X0, [X0 + 0xA20]
	0x03565FCC BL 0x1C16CF4
	0x03565FD0 MOVZ W8, 0x1
	0x03565FD4 STRB W8, [X21 + 0xDDD]
	0x03565FD8 LDR X8, [X19 + 0x10]
	0x03565FDC CBZ X8, 0x3566038
	0x03565FE0 CBZ X20, 0x3566038
	0x03565FE4 LDR X0, [X8 + 0x138]
	0x03565FE8 CBZ X0, 0x3566038
	0x03565FEC ADRP X8, 0xBD0000
	0x03565FF0 LDR X8, [X8 + 0xC20]
	0x03565FF4 LDR W1, [X20 + 0x18]
	0x03565FF8 LDR X2, [X8]
	0x03565FFC BL 0x2D10E94
	0x03566000 LDR W2, [X20 + 0x18]
	0x03566004 MOV X21, X0
	0x03566008 MOV X0, X20
	0x0356600C MOV X1, X21
	0x03566010 BL 0x35547EC
	0x03566014 LDR X0, [X19 + 0x10]
	0x03566018 CBZ X0, 0x3566038
	0x0356601C ADRP X8, 0xBCF000
	0x03566020 LDR X8, [X8 + 0xC18]
	0x03566024 LDP X20, X19, [X31 + 0x10]
	0x03566028 MOV X1, X21
	0x0356602C LDR X2, [X8]
	0x03566030 LDP X30, X21, [X31], #0x20
	0x03566034 B 0x3194090
	0x03566038 BL 0x1C16F20
	0x0356603C STP X30, X21, [X31 - 0x20]!
	0x03566040 STP X20, X19, [X31 + 0x10]
	0x03566044 ADRP X21, 0xE79000
	0x03566048 LDRB W8, [X21 + 0xDDE]
	0x0356604C MOV X19, X1
	0x03566050 MOV X20, X0
	0x03566054 TBNZ X8, 0x0, 0x356606C
	0x03566058 ADRP X0, 0xBCF000
	0x0356605C LDR X0, [X0 + 0xC10]
	0x03566060 BL 0x1C16CF4
	0x03566064 MOVZ W8, 0x1
	0x03566068 STRB W8, [X21 + 0xDDE]
	0x0356606C LDR X0, [X20 + 0x10]
	0x03566070 CBZ X0, 0x3566090
	0x03566074 ADRP X8, 0xBCF000
	0x03566078 LDR X8, [X8 + 0xC10]
	0x0356607C MOV X1, X19
	0x03566080 LDP X20, X19, [X31 + 0x10]
	0x03566084 LDR X2, [X8]
	0x03566088 LDP X30, X21, [X31], #0x20
	0x0356608C B 0x3191E98
	0x03566090 BL 0x1C16F20
	0x03566094 STP X30, X21, [X31 - 0x20]!
	0x03566098 STP X20, X19, [X31 + 0x10]
	0x0356609C LDR W8, [X0 + 0x10]
	0x035660A0 MOV X19, X0
	0x035660A4 AND W9, W8, 0xFFFFFFFE
	0x035660A8 ADDS W31, W9, 0x4
	0x035660AC B.NE 0x35660BC
	0x035660B0 ADDS W31, W8, 0x4
	0x035660B4 B.EQ 0x35660C4
	0x035660B8 B 0x35660CC
	0x035660BC CMP W8, 0x1
	0x035660C0 B.NE 0x3566104
	0x035660C4 MOV X0, X19
	0x035660C8 BL 0x3566494
	0x035660CC MOV X0, X19
	0x035660D0 LDP X20, X19, [X31 + 0x10]
	0x035660D4 LDP X30, X21, [X31], #0x20
	0x035660D8 B 0x35664E4
	0x035660DC CMP W1, 0x1
	0x035660E0 MOV X21, X0
	0x035660E4 B.NE 0x3566110
	0x035660E8 MOV X0, X21
	0x035660EC BL 0x3EB1AD0
	0x035660F0 LDR X20, [X0]
	0x035660F4 BL 0x3EB1AE0
	0x035660F8 MOV X0, X19
	0x035660FC BL 0x35664E4
	0x03566100 CBNZ X20, 0x3566118
	0x03566104 LDP X20, X19, [X31 + 0x10]
	0x03566108 LDP X30, X21, [X31], #0x20
	0x0356610C RET
	0x03566110 MOV X20, X31
	0x03566114 B 0x3566124
	0x03566118 MOV X0, X20
	0x0356611C BL 0x1C16F18
	0x03566120 MOV X21, X0
	0x03566124 MOV X0, X19
	0x03566128 BL 0x35664E4
	0x0356612C CBNZ X20, 0x3566138
	0x03566130 MOV X0, X21
	0x03566134 BL 0x1D2C690
	0x03566138 MOV X0, X20
	0x0356613C BL 0x1C16F18
	0x03566140 BL 0x1990590
	0x03566144 SUB X31, X31, 0xD0
	0x03566148 STP X30, X0, [X31 + 0xA0]
	0x0356614C STP X22, X21, [X31 + 0xB0]
	0x03566150 STP X20, X19, [X31 + 0xC0]
	0x03566154 ADRP X20, 0xE79000
	0x03566158 LDRB W8, [X20 + 0xDDF]
	0x0356615C MOV X19, X0
	0x03566160 TBNZ X8, 0x0, 0x35661F0
	0x03566164 ADRP X0, 0xBCF000
	0x03566168 LDR X0, [X0 + 0x8B0]
	0x0356616C BL 0x1C16CF4
	0x03566170 ADRP X0, 0xBCF000
	0x03566174 LDR X0, [X0 + 0x8B8]
	0x03566178 BL 0x1C16CF4
	0x0356617C ADRP X0, 0xBCF000
	0x03566180 LDR X0, [X0 + 0x8D0]
	0x03566184 BL 0x1C16CF4
	0x03566188 ADRP X0, 0xBCF000
	0x0356618C LDR X0, [X0 + 0x8D8]
	0x03566190 BL 0x1C16CF4
	0x03566194 ADRP X0, 0xBCF000
	0x03566198 LDR X0, [X0 + 0x8E0]
	0x0356619C BL 0x1C16CF4
	0x035661A0 ADRP X0, 0xBCF000
	0x035661A4 LDR X0, [X0 + 0x8E8]
	0x035661A8 BL 0x1C16CF4
	0x035661AC ADRP X0, 0xBCF000
	0x035661B0 LDR X0, [X0 + 0xAF8]
	0x035661B4 BL 0x1C16CF4
	0x035661B8 ADRP X0, 0xBCF000
	0x035661BC LDR X0, [X0 + 0xC28]
	0x035661C0 BL 0x1C16CF4
	0x035661C4 ADRP X0, 0xBCF000
	0x035661C8 LDR X0, [X0 + 0x8F0]
	0x035661CC BL 0x1C16CF4
	0x035661D0 ADRP X0, 0xBCF000
	0x035661D4 LDR X0, [X0 + 0x8F8]
	0x035661D8 BL 0x1C16CF4
	0x035661DC ADRP X0, 0xBCF000
	0x035661E0 LDR X0, [X0 + 0xC30]
	0x035661E4 BL 0x1C16CF4
	0x035661E8 MOVZ W8, 0x1
	0x035661EC STRB W8, [X20 + 0xDDF]
	0x035661F0 ADD X8, X31, 0xA8
	0x035661F4 STR X8, [X31 + 0x98]
	0x035661F8 LDR W8, [X19 + 0x10]
	0x035661FC CMP W8, 0x1
	0x03566200 B.EQ 0x3566260
	0x03566204 CBNZ W8, 0x3566280
	0x03566208 LDR X8, [X19 + 0x28]
	0x0356620C MOVN W9, 0x0
	0x03566210 STR W9, [X19 + 0x10]
	0x03566214 CBZ X8, 0x356626C
	0x03566218 LDR X0, [X8 + 0x88]
	0x0356621C CBZ X0, 0x3566270
	0x03566220 ADRP X8, 0xBCF000
	0x03566224 LDR X8, [X8 + 0x8B0]
	0x03566228 LDR X1, [X8]
	0x0356622C ADD X8, X31, 0x68
	0x03566230 BL 0x2A13AB4
	0x03566234 LDUR V0, [X31 + 0x68]
	0x03566238 LDUR V1, [X31 + 0x78]
	0x0356623C LDR X9, [X31 + 0x88]
	0x03566240 LDR X8, [X31 + 0xA8]
	0x03566244 MOVN W10, 0x2
	0x03566248 STP V0, V1, [X31 + 0x30]
	0x0356624C STR X9, [X31 + 0x50]
	0x03566250 STR X9, [X8 + 0x50]
	0x03566254 STP V0, V1, [X8 + 0x30]
	0x03566258 STR W10, [X8 + 0x10]
	0x0356625C B 0x3566310
	0x03566260 MOVN W8, 0x3
	0x03566264 STR W8, [X19 + 0x10]
	0x03566268 B 0x35662D4
	0x0356626C BL 0x1C16F20
	0x03566270 BL 0x1C16F20
	0x03566274 B 0x35663F8
	0x03566278 B 0x35663F8
	0x0356627C B 0x35663F8
	0x03566280 MOV W0, W31
	0x03566284 B 0x35663C4
	0x03566288 LDP X9, X0, [X8 + 0x40]
	0x0356628C STP X9, X0, [X8 + 0x58]
	0x03566290 CBZ X0, 0x35663D8
	0x03566294 ADRP X8, 0xBCF000
	0x03566298 LDR X8, [X8 + 0x8B8]
	0x0356629C LDR X1, [X8]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X22, 0xE7B000
	015 Move W8, [X22+3539]
	016 Move X20, X2
	017 Move W19, W1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {64}
	023 Move X0, 0xB8F000
	024 Move X0, [X0+2504]
	025 Call 0x1C17CF4
	026 Move X0, 0xBD1000
	027 Move X0, [X0+2776]
	028 Call 0x1C17CF4
	029 Move X0, 0xBD1000
	030 Move X0, [X0+2840]
	031 Call 0x1C17CF4
	032 Move X0, 0xBD1000
	033 Move X0, [X0+2976]
	034 Call 0x1C17CF4
	035 Move X0, 0xB94000
	036 Move X0, [X0+840]
	037 Call 0x1C17CF4
	038 Move X0, 0xB8F000
	039 Move X0, [X0+2760]
	040 Call 0x1C17CF4
	041 Move X0, 0xBD1000
	042 Move X0, [X0+2984]
	043 Call 0x1C17CF4
	044 Move X0, 0xBD1000
	045 Move X0, [X0+1664]
	046 Call 0x1C17CF4
	047 Move X0, 0xBD1000
	048 Move X0, [X0+2992]
	049 Call 0x1C17CF4
	050 Move X0, 0xBD1000
	051 Move X0, [X0+3000]
	052 Call 0x1C17CF4
	053 Move X0, 0xBD1000
	054 Move X0, [X0+2944]
	055 Call 0x1C17CF4
	056 Move X0, 0xBD1000
	057 Move X0, [X0+3008]
	058 Call 0x1C17CF4
	059 Move X0, 0xBD1000
	060 Move X0, [X0+2968]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X22+3539], W8
	064 Move [X31+20], W31
	065 Move [X31+8], X31
	066 Move [X31+24], X31
	067 Move X0, [X21+136]
	068 Compare X0, 0
	069 JumpIfEqual {422}
	070 Move X8, 0xBD1000
	071 Move X8, [X8+2840]
	072 Add X2, X31, 24
	073 Move W1, W19
	074 Move X3, [X8]
	075 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {333}
	080 Compare X20, 0
	081 JumpIfEqual {422}
	082 Move X8, [X20+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X29, 0xBD1000
	085 Move X27, 0xBD1000
	086 Move X26, 0xB8F000
	087 Move X28, 0xB94000
	088 Move X29, [X29+3000]
	089 Move X27, [X27+2944]
	090 Move X26, [X26+2504]
	091 Move X28, [X28+840]
	092 Move X25, X31
	093 And X8, X8, 0
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Add X8, X20, X25
	096 Move W1, [X8+32]
	097 Move X0, [X31+24]
	098 Move [X31+20], W1
	099 Compare X0, 0
	100 JumpIfEqual {422}
	101 Move X8, 0xBD1000
	102 Move X8, [X8+2976]
	103 Add X2, X31, 8
	104 Move X3, [X8]
	105 Call Dictionary`2<Byte, Object>.TryGetValue, X0, X1, X2
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {214}
	110 Move X0, [X31+24]
	111 Compare X0, 0
	112 JumpIfEqual {422}
	113 Move X8, 0xBD1000
	114 Move X8, [X8+2776]
	115 Move W1, [X31+20]
	116 Move X2, [X8]
	117 Call Dictionary`2<Byte, Object>.Remove, X0, X1
	118 Move X8, 0xB8F000
	119 Move X22, [X21+24]
	120 Move X8, [X8+2760]
	121 Move W1, 7
	122 Move X0, [X8]
	123 Call 0x1C17D6C
	124 Compare X0, 0
	125 JumpIfEqual {422}
	126 Move W8, [X0+24]
	127 Move X23, X0
	128 Compare W8, 0
	129 JumpIfEqual {421}
	130 Move X8, [X29]
	131 Add X0, X31, 20
	132 Move X1, X31
	133 Move [X23+32], X8
	134 Call Byte.ToString, X0
	135 Move W8, [X23+24]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move [X23+40], X0
	139 Move X8, [X27]
	140 Move X0, X21
	141 Move W1, W19
	142 Move [X23+48], X8
	143 Call VoiceClient.playerStr, X0, X1
	144 Move W8, [X23+24]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move [X23+56], X0
	148 Move X8, 0xBD1000
	149 Move X8, [X8+2968]
	150 Move X8, [X8]
	151 Move [X23+64], X8
	152 Move X8, [X31+8]
	153 Compare X8, 0
	154 JumpIfEqual {422}
	155 Move W1, [X8+144]
	156 Move X0, X21
	157 Call VoiceClient.channelStr, X0, X1
	158 Move W8, [X23+24]
	159 NotImplemented "Instruction CMP not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move [X23+72], X0
	162 Move X8, 0xBD1000
	163 Move X8, [X8+1664]
	164 Move X0, X23
	165 Move X1, X31
	166 Move X8, [X8]
	167 Move [X23+80], X8
	168 Call String.Concat, X0
	169 Move X24, [X26]
	170 Move X23, X0
	171 Move X8, [X24+56]
	172 Compare X8, 0
	173 JumpIfNotEqual {177}
	174 Move X0, X24
	175 Call 0x1C5D6E0
	176 Move X8, [X24+56]
	177 Move X0, [X8+16]
	178 Move W8, [X0+309]
	179 Move TEMP, X8
	180 And TEMP, TEMP, 1
	181 Compare TEMP, 1
	182 JumpIfEqual {184}
	183 Call 0x1C5D684
	184 Move W8, [X0+224]
	185 Compare W8, 0
	186 JumpIfNotEqual {188}
	187 Call 0x1C17DFC
	188 Move X8, [X24+56]
	189 Move X0, [X8+16]
	190 Move W8, [X0+309]
	191 Move TEMP, X8
	192 And TEMP, TEMP, 1
	193 Compare TEMP, 1
	194 JumpIfEqual {196}
	195 Call 0x1C5D684
	196 Compare X22, 0
	197 JumpIfEqual {422}
	198 Move X9, [X0+184]
	199 Move X8, [X22]
	200 Move X1, [X28]
	201 Move X24, [X9]
	202 NotImplemented "Instruction LDRH not yet implemented."
	203 Compare X9, 0
	204 JumpIfEqual {211}
	205 Move X10, [X8+176]
	206 Add X10, X10, 8
	207 NotImplemented "Instruction LDUR not yet implemented."
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Subtract X9, X9, 1
	210 Add X10, X10, 16
	211 Move W2, 1
	212 Move X0, X22
	213 Call 0x1C5D788
	214 Move X8, 0xB8F000
	215 Move X22, [X21+24]
	216 Move X8, [X8+2760]
	217 Move W1, 5
	218 Move X0, [X8]
	219 Call 0x1C17D6C
	220 Compare X0, 0
	221 JumpIfEqual {422}
	222 Move W8, [X0+24]
	223 Move X23, X0
	224 Compare W8, 0
	225 JumpIfEqual {421}
	226 Move X8, [X29]
	227 Add X0, X31, 20
	228 Move X1, X31
	229 Move [X23+32], X8
	230 Call Byte.ToString, X0
	231 Move W8, [X23+24]
	232 NotImplemented "Instruction CMP not yet implemented."
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Move [X23+40], X0
	235 Move X8, [X27]
	236 Move X0, X21
	237 Move W1, W19
	238 Move [X23+48], X8
	239 Call VoiceClient.playerStr, X0, X1
	240 Move W8, [X23+24]
	241 NotImplemented "Instruction CMP not yet implemented."
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move [X23+56], X0
	244 Move X8, 0xBD0000
	245 Move X8, [X8+3008]
	246 Move X0, X23
	247 Move X1, X31
	248 Move X8, [X8]
	249 Move [X23+64], X8
	250 Call String.Concat, X0
	251 Move X24, [X26]
	252 Move X23, X0
	253 Move X8, [X24+56]
	254 Compare X8, 0
	255 JumpIfNotEqual {259}
	256 Move X0, X24
	257 Call 0x1C5D6E0
	258 Move X8, [X24+56]
	259 Move X0, [X8+16]
	260 Move W8, [X0+309]
	261 Move TEMP, X8
	262 And TEMP, TEMP, 1
	263 Compare TEMP, 1
	264 JumpIfEqual {266}
	265 Call 0x1C5D684
	266 Move W8, [X0+224]
	267 Compare W8, 0
	268 JumpIfNotEqual {270}
	269 Call 0x1C17DFC
	270 Move X8, [X24+56]
	271 Move X0, [X8+16]
	272 Move W8, [X0+309]
	273 Move TEMP, X8
	274 And TEMP, TEMP, 1
	275 Compare TEMP, 1
	276 JumpIfEqual {278}
	277 Call 0x1C5D684
	278 Compare X22, 0
	279 JumpIfEqual {422}
	280 Move X9, [X0+184]
	281 Move X8, [X22]
	282 Move X1, [X28]
	283 Move X24, [X9]
	284 NotImplemented "Instruction LDRH not yet implemented."
	285 Compare X9, 0
	286 JumpIfEqual {293}
	287 Move X10, [X8+176]
	288 Add X10, X10, 8
	289 NotImplemented "Instruction LDUR not yet implemented."
	290 NotImplemented "Instruction CMP not yet implemented."
	291 Subtract X9, X9, 1
	292 Add X10, X10, 16
	293 Move W2, 1
	294 Move X0, X22
	295 Call 0x1C5D788
	296 Move W9, [X10]
	297 Add W9, W9, 1
	298 Add X8, X8, W9
	299 Add X0, X8, 312
	300 Move X8, [X0]
	301 Move X4, [X0+8]
	302 Move W1, 2
	303 Move X0, X22
	304 Move X2, X23
	305 Move X3, X24
	306 NotImplemented "Instruction BLR not yet implemented."
	307 Move W9, [X10]
	308 Add W9, W9, 1
	309 Add X8, X8, W9
	310 Add X0, X8, 312
	311 Move X8, [X0]
	312 Move X4, [X0+8]
	313 Move W1, 3
	314 Move X0, X22
	315 Move X2, X23
	316 Move X3, X24
	317 NotImplemented "Instruction BLR not yet implemented."
	318 Move X22, [X31+8]
	319 Compare X22, 0
	320 JumpIfEqual {422}
	321 Move X8, [X22+64]
	322 Compare X8, 0
	323 JumpIfEqual {328}
	324 Move X9, [X8+24]
	325 Move X0, [X8+64]
	326 Move X1, [X8+40]
	327 NotImplemented "Instruction BLR not yet implemented."
	328 Move X0, X22
	329 Call RemoteVoice.Dispose, X0
	330 Move W8, [X20+24]
	331 Add X25, X25, 1
	332 NotImplemented "Instruction CMP not yet implemented."
	333 Move X20, [X21+24]
	334 Move X0, X21
	335 Move W1, W19
	336 Call VoiceClient.playerStr, X0, X1
	337 Move X8, 0xBD0000
	338 Move X8, [X8+2992]
	339 Move X9, 0xBD0000
	340 Move X9, [X9+2984]
	341 Move X1, X0
	342 Move X8, [X8]
	343 Move X3, X31
	344 Move X2, [X9]
	345 Move X0, X8
	346 Call String.Concat, X0, X1, X2
	347 Move X8, 0xB8E000
	348 Move X8, [X8+2504]
	349 Move X19, X0
	350 Move X21, [X8]
	351 Move X8, [X21+56]
	352 Compare X8, 0
	353 JumpIfNotEqual {357}
	354 Move X0, X21
	355 Call 0x1C5D6E0
	356 Move X8, [X21+56]
	357 Move X0, [X8+16]
	358 Move W8, [X0+309]
	359 Move TEMP, X8
	360 And TEMP, TEMP, 1
	361 Compare TEMP, 1
	362 JumpIfEqual {364}
	363 Call 0x1C5D684
	364 Move W8, [X0+224]
	365 Compare W8, 0
	366 JumpIfNotEqual {368}
	367 Call 0x1C17DFC
	368 Move X8, [X21+56]
	369 Move X0, [X8+16]
	370 Move W8, [X0+309]
	371 Move TEMP, X8
	372 And TEMP, TEMP, 1
	373 Compare TEMP, 1
	374 JumpIfEqual {376}
	375 Call 0x1C5D684
	376 Compare X20, 0
	377 JumpIfEqual {422}
	378 Move X10, 0xB93000
	379 Move X9, [X0+184]
	380 Move X8, [X20]
	381 Move X10, [X10+840]
	382 Move X21, [X9]
	383 NotImplemented "Instruction LDRH not yet implemented."
	384 Move X1, [X10]
	385 Compare X9, 0
	386 JumpIfEqual {393}
	387 Move X10, [X8+176]
	388 Add X10, X10, 8
	389 NotImplemented "Instruction LDUR not yet implemented."
	390 NotImplemented "Instruction CMP not yet implemented."
	391 Subtract X9, X9, 1
	392 Add X10, X10, 16
	393 Move W2, 1
	394 Move X0, X20
	395 Call 0x1C5D788
	396 Move W9, [X10]
	397 Add W9, W9, 1
	398 Add X8, X8, W9
	399 Add X0, X8, 312
	400 Move X8, [X0]
	401 Move X4, [X0+8]
	402 Move W1, 2
	403 Move X0, X20
	404 Move X2, X19
	405 Move X3, X21
	406 NotImplemented "Instruction BLR not yet implemented."
	407 Move X20, [X31+112]
	408 Move X19, [X31+120]
	409 Move X22, [X31+96]
	410 Move X21, [X31+104]
	411 Move X24, [X31+80]
	412 Move X23, [X31+88]
	413 Move X26, [X31+64]
	414 Move X25, [X31+72]
	415 Move X28, [X31+48]
	416 Move X27, [X31+56]
	417 Move X29, [X31+32]
	418 Move X30, [X31+40]
	419 Add X31, X31, 128
	420 Return 
	421 Call 0x1C17F28
	422 Call 0x1C17F20

Method: System.Void onFrame(System.Int32 playerId, System.Byte voiceId, System.Byte evNumber, ref Photon.Voice.FrameBuffer receivedBytes, System.Boolean isLocalPlayer)

Disassembly:
	0x035662A0 ADD X8, X31, 0x68
	0x035662A4 BL 0x29D395C
	0x035662A8 LDUR V0, [X31 + 0x68]
	0x035662AC LDUR V1, [X31 + 0x78]
	0x035662B0 LDR X8, [X31 + 0x88]
	0x035662B4 LDR X19, [X31 + 0xA8]
	0x035662B8 MOVN W9, 0x3
	0x035662BC STP V0, V1, [X31 + 0x30]
	0x035662C0 STR X8, [X31 + 0x50]
	0x035662C4 STR X8, [X19 + 0x88]
	0x035662C8 STUR V1, [X19 + 0x78]
	0x035662CC STUR V0, [X19 + 0x68]
	0x035662D0 STR W9, [X19 + 0x10]
	0x035662D4 ADRP X8, 0xBCF000
	0x035662D8 LDR X8, [X8 + 0x8D8]
	0x035662DC ADD X0, X19, 0x68
	0x035662E0 LDR X1, [X8]
	0x035662E4 BL 0x2BEA018
	0x035662E8 MOV W8, W0
	0x035662EC LDR X0, [X31 + 0xA8]
	0x035662F0 TBNZ X8, 0x0, 0x356634C
	0x035662F4 BL 0x3566494
	0x035662F8 LDR X8, [X31 + 0xA8]
	0x035662FC MOVI V0.2D, 0x0
	0x03566300 STR X31, [X8 + 0x88]
	0x03566304 STUR V0, [X8 + 0x78]
	0x03566308 STUR V0, [X8 + 0x68]
	0x0356630C STUR V0, [X8 + 0x58]
	0x03566310 ADRP X9, 0xBCF000
	0x03566314 LDR X9, [X9 + 0x8D0]
	0x03566318 ADD X0, X8, 0x30
	0x0356631C LDR X1, [X9]
	0x03566320 BL 0x2BF5330
	0x03566324 LDR X8, [X31 + 0xA8]
	0x03566328 TBNZ X0, 0x0, 0x3566288
	0x0356632C MOV X0, X8
	0x03566330 BL 0x35664E4
	0x03566334 LDR X8, [X31 + 0xA8]
	0x03566338 MOV W0, W31
	0x0356633C MOVI V0.2D, 0x0
	0x03566340 STR X31, [X8 + 0x50]
	0x03566344 STP V0, V0, [X8 + 0x30]
	0x03566348 B 0x35663C4
	0x0356634C LDR X8, [X0 + 0x80]
	0x03566350 CBZ X8, 0x35663DC
	0x03566354 LDR W21, [X8 + 0x90]
	0x03566358 LDP V2, V0, [X8 + 0x20]
	0x0356635C LDR V1, [X8 + 0x1]
	0x03566360 ADRP X8, 0xBCF000
	0x03566364 LDRB W20, [X0 + 0x78]
	0x03566368 LDR W22, [X0 + 0x58]
	0x0356636C LDR X8, [X8 + 0xC30]
	0x03566370 STP V2, V0, [X31 + 0x40]
	0x03566374 STR V1, [X31 + 0x3]
	0x03566378 LDR X0, [X8]
	0x0356637C BL 0x1C16F10
	0x03566380 LDP V0, V1, [X31 + 0x30]
	0x03566384 LDR V2, [X31 + 0x5]
	0x03566388 MOV X19, X0
	0x0356638C STP V0, V1, [X31]
	0x03566390 STR V2, [X31 + 0x2]
	0x03566394 MOV X1, X31
	0x03566398 BL 0x33BDD8C
	0x0356639C STP W21, W22, [X19 + 0x40]
	0x035663A0 STRB W20, [X19 + 0x48]
	0x035663A4 LDP V1, V0, [X31 + 0x10]
	0x035663A8 LDR V2, [X31]
	0x035663AC MOVZ W0, 0x1
	0x035663B0 STP V1, V0, [X19 + 0x20]
	0x035663B4 STR V2, [X19 + 0x1]
	0x035663B8 LDR X8, [X31 + 0xA8]
	0x035663BC STR X19, [X8 + 0x18]
	0x035663C0 STR W0, [X8 + 0x10]
	0x035663C4 LDP X20, X19, [X31 + 0xC0]
	0x035663C8 LDP X22, X21, [X31 + 0xB0]
	0x035663CC LDR X30, [X31 + 0xA0]
	0x035663D0 ADD X31, X31, 0xD0
	0x035663D4 RET
	0x035663D8 BL 0x1C16F20
	0x035663DC BL 0x1C16F20
	0x035663E0 B 0x35663F8
	0x035663E4 B 0x35663F8
	0x035663E8 B 0x35663F8
	0x035663EC B 0x35663F8
	0x035663F0 B 0x35663F8
	0x035663F4 B 0x35663F8
	0x035663F8 CMP W1, 0x1
	0x035663FC B.NE 0x356642C
	0x03566400 BL 0x3EB1AD0
	0x03566404 LDR X19, [X0]
	0x03566408 STR X19, [X31 + 0x90]
	0x0356640C BL 0x3EB1AE0
	0x03566410 CBZ X19, 0x3566280
	0x03566414 ADD X8, X31, 0x90
	0x03566418 ADD X0, X8, 0x8
	0x0356641C BL 0x1BC0980
	0x03566420 MOV X0, X19
	0x03566424 BL 0x1C16F18
	0x03566428 CBNZ X19, 0x3566430
	0x0356642C BL 0x1D2C690
	0x03566430 LDR X0, [X31 + 0xA8]
	0x03566434 BL 0x3566094
	0x03566438 MOV X0, X19
	0x0356643C BL 0x1C16F18
	0x03566440 BL 0x1990590
	0x03566444 STP X30, X23, [X31 - 0x30]!
	0x03566448 STP X22, X21, [X31 + 0x10]
	0x0356644C STP X20, X19, [X31 + 0x20]
	0x03566450 MOV W22, W1
	0x03566454 MOV X1, X31
	0x03566458 MOV X19, X4
	0x0356645C MOV W20, W3
	0x03566460 MOV W21, W2
	0x03566464 MOV X23, X0
	0x03566468 BL 0x33BDD8C
	0x0356646C STP W22, W21, [X23 + 0x40]
	0x03566470 STRB W20, [X23 + 0x48]
	0x03566474 LDP V1, V0, [X19 + 0x10]
	0x03566478 LDR V2, [X19]
	0x0356647C LDP X20, X19, [X31 + 0x20]
	0x03566480 LDP X22, X21, [X31 + 0x10]
	0x03566484 STP V1, V0, [X23 + 0x20]
	0x03566488 STR V2, [X23 + 0x1]
	0x0356648C LDP X30, X23, [X31], #0x30
	0x03566490 RET
	0x03566494 STP X30, X21, [X31 - 0x20]!
	0x03566498 STP X20, X19, [X31 + 0x10]
	0x0356649C ADRP X21, 0xE79000
	0x035664A0 ADRP X20, 0xBCF000
	0x035664A4 LDRB W8, [X21 + 0xDE1]
	0x035664A8 LDR X20, [X20 + 0x8C8]
	0x035664AC MOV X19, X0
	0x035664B0 TBNZ X8, 0x0, 0x35664C8
	0x035664B4 ADRP X0, 0xBCF000
	0x035664B8 LDR X0, [X0 + 0x8C8]
	0x035664BC BL 0x1C16CF4
	0x035664C0 MOVZ W8, 0x1
	0x035664C4 STRB W8, [X21 + 0xDE1]
	0x035664C8 MOVN W8, 0x2
	0x035664CC STR W8, [X19 + 0x10]
	0x035664D0 LDR X1, [X20]
	0x035664D4 ADD X0, X19, 0x68
	0x035664D8 LDP X20, X19, [X31 + 0x10]
	0x035664DC LDP X30, X21, [X31], #0x20
	0x035664E0 B 0x2BEA130
	0x035664E4 STP X30, X21, [X31 - 0x20]!
	0x035664E8 STP X20, X19, [X31 + 0x10]
	0x035664EC ADRP X21, 0xE79000
	0x035664F0 ADRP X20, 0xBCF000
	0x035664F4 LDRB W8, [X21 + 0xDE0]
	0x035664F8 LDR X20, [X20 + 0x8C0]
	0x035664FC MOV X19, X0
	0x03566500 TBNZ X8, 0x0, 0x3566518
	0x03566504 ADRP X0, 0xBCF000
	0x03566508 LDR X0, [X0 + 0x8C0]
	0x0356650C BL 0x1C16CF4
	0x03566510 MOVZ W8, 0x1
	0x03566514 STRB W8, [X21 + 0xDE0]
	0x03566518 MOVN W8, 0x0
	0x0356651C STR W8, [X19 + 0x10]
	0x03566520 LDR X1, [X20]
	0x03566524 ADD X0, X19, 0x30
	0x03566528 LDP X20, X19, [X31 + 0x10]
	0x0356652C LDP X30, X21, [X31], #0x20
	0x03566530 B 0x2BF5448
	0x03566534 LDR X0, [X0 + 0x18]
	0x03566538 RET
	0x0356653C STP X30, X19, [X31 - 0x10]!
	0x03566540 ADRP X0, 0xB8D000
	0x03566544 LDR X0, [X0 + 0xB40]
	0x03566548 BL 0x1C16D08
	0x0356654C BL 0x1C16F10
	0x03566550 MOV X1, X31
	0x03566554 MOV X19, X0
	0x03566558 BL 0x3380310
	0x0356655C ADRP X0, 0xBCF000
	0x03566560 LDR X0, [X0 + 0xC38]
	0x03566564 BL 0x1C16D08
	0x03566568 MOV X1, X0
	0x0356656C MOV X0, X19
	0x03566570 BL 0x1C16DEC
	0x03566574 LDR X0, [X0 + 0x18]
	0x03566578 RET
	0x0356657C STR X30, [X31 - 0x20]!
	0x03566580 STP X20, X19, [X31 + 0x10]
	0x03566584 ADRP X20, 0xE79000
	0x03566588 LDRB W8, [X20 + 0xDE2]
	0x0356658C MOV X19, X0
	0x03566590 TBNZ X8, 0x0, 0x35665A8
	0x03566594 ADRP X0, 0xBCF000
	0x03566598 LDR X0, [X0 + 0x8A8]
	0x0356659C BL 0x1C16CF4
	0x035665A0 MOVZ W8, 0x1
	0x035665A4 STRB W8, [X20 + 0xDE2]
	0x035665A8 LDR W8, [X19 + 0x10]
	0x035665AC ADDS W31, W8, 0x2
	0x035665B0 B.NE 0x35665D0
	0x035665B4 LDR W20, [X19 + 0x20]
	0x035665B8 MOV X0, X31
	0x035665BC BL 0x33C151C
	0x035665C0 CMP W20, W0
	0x035665C4 B.NE 0x35665D0
	0x035665C8 STR W31, [X19 + 0x10]
	0x035665CC B 0x3566608
	0x035665D0 ADRP X8, 0xBCF000
	0x035665D4 LDR X8, [X8 + 0x8A8]
	0x035665D8 LDR X0, [X8]
	0x035665DC BL 0x1C16F10
	0x035665E0 MOV X1, X31
	0x035665E4 MOV X20, X0
	0x035665E8 BL 0x33BDD8C
	0x035665EC MOV X0, X31
	0x035665F0 STR W31, [X20 + 0x10]
	0x035665F4 BL 0x33C151C
	0x035665F8 STR W0, [X20 + 0x20]
	0x035665FC LDR X8, [X19 + 0x28]
	0x03566600 MOV X19, X20
	0x03566604 STR X8, [X20 + 0x28]
	0x03566608 MOV X0, X19
	0x0356660C LDP X20, X19, [X31 + 0x10]
	0x03566610 LDR X30, [X31], #0x20
	0x03566614 RET
	0x03566618 B 0x356657C
	0x0356661C STR X30, [X31 - 0x30]!
	0x03566620 STP X22, X21, [X31 + 0x10]
	0x03566624 STP X20, X19, [X31 + 0x20]
	0x03566628 ADRP X22, 0xE79000
	0x0356662C ADRP X21, 0xBCF000
	0x03566630 LDRB W8, [X22 + 0xDE3]
	0x03566634 LDR X21, [X21 + 0xC40]
	0x03566638 MOV X20, X1
	0x0356663C MOV X19, X0
	0x03566640 TBNZ X8, 0x0, 0x3566664
	0x03566644 ADRP X0, 0xB8D000
	0x03566648 LDR X0, [X0 + 0x7D0]
	0x0356664C BL 0x1C16CF4
	0x03566650 ADRP X0, 0xBCF000
	0x03566654 LDR X0, [X0 + 0xC40]
	0x03566658 BL 0x1C16CF4
	0x0356665C MOVZ W8, 0x1
	0x03566660 STRB W8, [X22 + 0xDE3]
	0x03566664 ADRP X22, 0xB8D000
	0x03566668 LDR X21, [X21]
	0x0356666C LDR X22, [X22 + 0x7D0]
	0x03566670 CBZ X20, 0x356668C
	0x03566674 LDR X8, [X20]
	0x03566678 MOV X0, X20
	0x0356667C LDP X9, X1, [X8 + 0x168]
	0x03566680 BLR X9
	0x03566684 MOV X1, X0
	0x03566688 B 0x3566690
	0x0356668C MOV X1, X31
	0x03566690 MOV X0, X21
	0x03566694 MOV X2, X31
	0x03566698 BL 0x321B938
	0x0356669C LDR X8, [X22]
	0x035666A0 MOV X20, X0
	0x035666A4 LDR W9, [X8 + 0xE0]
	0x035666A8 CBNZ W9, 0x35666B4
	0x035666AC MOV X0, X8
	0x035666B0 BL 0x1C16DFC
	0x035666B4 MOV X0, X19
	0x035666B8 MOV X1, X20
	0x035666BC LDP X20, X19, [X31 + 0x20]
	0x035666C0 LDP X22, X21, [X31 + 0x10]
	0x035666C4 MOV X2, X31
	0x035666C8 LDR X30, [X31], #0x30
	0x035666CC B 0x33B2C70
	0x035666D0 SUB X31, X31, 0x70
	0x035666D4 STR X30, [X31 + 0x20]
	0x035666D8 STP X26, X25, [X31 + 0x30]
	0x035666DC STP X24, X23, [X31 + 0x40]
	0x035666E0 STP X22, X21, [X31 + 0x50]
	0x035666E4 STP X20, X19, [X31 + 0x60]
	0x035666E8 ADRP X25, 0xE79000
	0x035666EC ADRP X26, 0xBB6000
	0x035666F0 ADRP X23, 0xBCF000
	0x035666F4 ADRP X24, 0xBCF000
	0x035666F8 ADRP X22, 0xB8D000
	0x035666FC LDRB W8, [X25 + 0xDE4]
	0x03566700 LDR X26, [X26 + 0x428]
	0x03566704 LDR X23, [X23 + 0x528]
	0x03566708 LDR X24, [X24 + 0xC48]
	0x0356670C LDR X22, [X22 + 0x7D0]
	0x03566710 MOV W21, W2
	0x03566714 MOV X20, X1
	0x03566718 MOV X19, X0
	0x0356671C TBNZ X8, 0x0, 0x3566758
	0x03566720 ADRP X0, 0xBB6000
	0x03566724 LDR X0, [X0 + 0x428]
	0x03566728 BL 0x1C16CF4
	0x0356672C ADRP X0, 0xB8D000
	0x03566730 LDR X0, [X0 + 0x7D0]
	0x03566734 BL 0x1C16CF4
	0x03566738 ADRP X0, 0xBCF000
	0x0356673C LDR X0, [X0 + 0x528]
	0x03566740 BL 0x1C16CF4
	0x03566744 ADRP X0, 0xBCF000
	0x03566748 LDR X0, [X0 + 0xC48]
	0x0356674C BL 0x1C16CF4
	0x03566750 MOVZ W8, 0x1
	0x03566754 STRB W8, [X25 + 0xDE4]
	0x03566758 LDR X8, [X26]
	0x0356675C MOVN X9, 0x0
	0x03566760 ADD X0, X31, 0x8
	0x03566764 MOV X1, X31
	0x03566768 STP X8, X9, [X31 + 0x8]
	0x0356676C STR W21, [X31 + 0x18]
	0x03566770 BL 0x33B162C
	0x03566774 LDR X8, [X23]
	0x03566778 LDR X2, [X24]
	0x0356677C MOV X3, X0
	0x03566780 MOV X1, X20
	0x03566784 MOV X0, X8
	0x03566788 MOV X4, X31
	0x0356678C BL 0x32277C4
	0x03566790 LDR X8, [X22]
	0x03566794 MOV X20, X0
	0x03566798 LDR W9, [X8 + 0xE0]
	0x0356679C CBNZ W9, 0x35667A8
	0x035667A0 MOV X0, X8
	0x035667A4 BL 0x1C16DFC
	0x035667A8 MOV X0, X19
	0x035667AC MOV X1, X20
	0x035667B0 MOV X2, X31
	0x035667B4 BL 0x33B2C70

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X25, 0xE7A000
	011 Move W8, [X25+3540]
	012 Move W24, W5
	013 Move X21, X4
	014 Move W22, W3
	015 Move W23, W2
	016 Move W20, W1
	017 Move X19, X0
	018 Move [X31+44], W2
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {58}
	023 Move X0, 0xB8E000
	024 Move X0, [X0+2504]
	025 Call 0x1C17CF4
	026 Move X0, 0xBD0000
	027 Move X0, [X0+2840]
	028 Call 0x1C17CF4
	029 Move X0, 0xBD0000
	030 Move X0, [X0+3016]
	031 Call 0x1C17CF4
	032 Move X0, 0xBD0000
	033 Move X0, [X0+3024]
	034 Call 0x1C17CF4
	035 Move X0, 0xBD0000
	036 Move X0, [X0+2976]
	037 Call 0x1C17CF4
	038 Move X0, 0xB93000
	039 Move X0, [X0+840]
	040 Call 0x1C17CF4
	041 Move X0, 0xBD0000
	042 Move X0, [X0+2944]
	043 Call 0x1C17CF4
	044 Move X0, 0xBD0000
	045 Move X0, [X0+3032]
	046 Call 0x1C17CF4
	047 Move X0, 0xBD0000
	048 Move X0, [X0+3040]
	049 Call 0x1C17CF4
	050 Move X0, 0xBD0000
	051 Move X0, [X0+3048]
	052 Call 0x1C17CF4
	053 Move X0, 0xBD0000
	054 Move X0, [X0+3056]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X25+3540], W8
	058 Move [X31+24], X31
	059 Move [X31+32], X31
	060 Move [X31+20], W31
	061 Move [X31+8], X31
	062 Move TEMP, X24
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {124}
	066 Move X0, [X19+120]
	067 Compare X0, 0
	068 JumpIfEqual {386}
	069 Move X8, 0xBD0000
	070 Move X8, [X8+3016]
	071 Add X2, X31, 24
	072 Move W1, W23
	073 Move X3, [X8]
	074 Call Dictionary`2<Byte, Object>.TryGetValue, X0, X1, X2
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {124}
	079 Move X8, [X31+24]
	080 Compare X8, 0
	081 JumpIfEqual {386}
	082 Move X0, [X8+248]
	083 Compare X0, 0
	084 JumpIfEqual {386}
	085 Move X8, 0xBD0000
	086 Move X8, [X8+3024]
	087 Add X2, X31, 20
	088 Move W1, W22
	089 Move X3, [X8]
	090 Call Dictionary`2<Byte, Int32>.TryGetValue, X0, X1, X2
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {124}
	095 Move X0, X31
	096 Call Environment.get_TickCount
	097 Move W8, [X31+20]
	098 Move W9, [X19+100]
	099 Move W11, [X19+76]
	100 Move W10, [X19+80]
	101 Move W12, 19
	102 Subtract W8, W0, W8
	103 Subtract W9, W8, W9
	104 Move [X19+100], W8
	105 NotImplemented "Instruction MADD not yet implemented."
	106 Move W11, 0x6667
	107 NotImplemented "Instruction MOVK not yet implemented."
	108 NotImplemented "Instruction CSNEG not yet implemented."
	109 NotImplemented "Instruction SMADDL not yet implemented."
	110 NotImplemented "Instruction MADD not yet implemented."
	111 Move X10, X8
	112 ShiftRight X10, 63
	113 And X10, X10, 0x7FFFFFFF
	114 NotImplemented "Instruction SBFM not yet implemented."
	115 NotImplemented "Instruction SMADDL not yet implemented."
	116 Add W8, W8, W10
	117 Move X10, X9
	118 ShiftRight X10, 63
	119 And X10, X10, 0x7FFFFFFF
	120 NotImplemented "Instruction SBFM not yet implemented."
	121 Add W9, W9, W10
	122 Move [X19+76], W8
	123 Move [X19+80], W9
	124 Move W8, [X19+96]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X0, [X19+144]
	127 Compare X0, 0
	128 JumpIfEqual {386}
	129 Move X8, [X0]
	130 Move W1, 100
	131 Move X9, [X8+424]
	132 Move X2, [X8+432]
	133 NotImplemented "Instruction BLR not yet implemented."
	134 Move W8, [X19+96]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X8, 0xB8E000
	137 Move X8, [X8+2504]
	138 Move X19, [X19+24]
	139 Move X20, [X8]
	140 Move X8, [X20+56]
	141 Compare X8, 0
	142 JumpIfNotEqual {146}
	143 Move X0, X20
	144 Call 0x1C5D6E0
	145 Move X8, [X20+56]
	146 Move X0, [X8+16]
	147 Move W8, [X0+309]
	148 Move TEMP, X8
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfEqual {153}
	152 Call 0x1C5D684
	153 Move W8, [X0+224]
	154 Compare W8, 0
	155 JumpIfNotEqual {157}
	156 Call 0x1C17DFC
	157 Move X8, [X20+56]
	158 Move X0, [X8+16]
	159 Move W8, [X0+309]
	160 Move TEMP, X8
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfEqual {165}
	164 Call 0x1C5D684
	165 Compare X19, 0
	166 JumpIfEqual {386}
	167 Move X10, 0xB93000
	168 Move X11, 0xBD0000
	169 Move X9, [X0+184]
	170 Move X10, [X10+840]
	171 Move X8, [X19]
	172 Move X11, [X11+3056]
	173 Move X20, [X9]
	174 Move X1, [X10]
	175 NotImplemented "Instruction LDRH not yet implemented."
	176 Move X21, [X11]
	177 Compare X9, 0
	178 JumpIfEqual {185}
	179 Move X10, [X8+176]
	180 Add X10, X10, 8
	181 NotImplemented "Instruction LDUR not yet implemented."
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Subtract X9, X9, 1
	184 Add X10, X10, 16
	185 Move W2, 1
	186 Move X0, X19
	187 Call 0x1C5D788
	188 Move W8, [X19+56]
	189 Move X0, [X19+136]
	190 Add W8, W8, 1
	191 Move [X19+56], W8
	192 Compare X0, 0
	193 JumpIfEqual {386}
	194 Move X8, 0xBD0000
	195 Move X8, [X8+2840]
	196 Add X2, X31, 32
	197 Move W1, W20
	198 Move X3, [X8]
	199 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	200 Move TEMP, X0
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfNotEqual {223}
	204 Move X0, [X31+32]
	205 Compare X0, 0
	206 JumpIfEqual {386}
	207 Move X8, 0xBD0000
	208 Move X8, [X8+2976]
	209 Move W1, [X31+44]
	210 Add X2, X31, 8
	211 Move X3, [X8]
	212 Call Dictionary`2<Byte, Object>.TryGetValue, X0, X1, X2
	213 Move TEMP, X0
	214 And TEMP, TEMP, 1
	215 Compare TEMP, 1
	216 JumpIfNotEqual {288}
	217 Move X0, [X31+8]
	218 Compare X0, 0
	219 JumpIfEqual {386}
	220 Move X1, X21
	221 Move W2, W22
	222 Call RemoteVoice.receiveBytes, X0, X1, X2
	223 Move X21, [X19+24]
	224 Add X0, X31, 44
	225 Move X1, X31
	226 Call Byte.ToString, X0
	227 Move X22, X0
	228 Move X0, X19
	229 Move W1, W20
	230 Call VoiceClient.playerStr, X0, X1
	231 Move X8, 0xBD0000
	232 Move X8, [X8+3032]
	233 Move X9, 0xBD0000
	234 Move X9, [X9+3040]
	235 Move X3, X0
	236 Move X8, [X8]
	237 Move X1, X22
	238 Move X2, [X9]
	239 Move X4, X31
	240 Move X0, X8
	241 Call String.Concat, X0, X1, X2, X3
	242 Move X8, 0xB8E000
	243 Move X8, [X8+2504]
	244 Move X19, X0
	245 Move X20, [X8]
	246 Move X8, [X20+56]
	247 Compare X8, 0
	248 JumpIfNotEqual {252}
	249 Move X0, X20
	250 Call 0x1C5D6E0
	251 Move X8, [X20+56]
	252 Move X0, [X8+16]
	253 Move W8, [X0+309]
	254 Move TEMP, X8
	255 And TEMP, TEMP, 1
	256 Compare TEMP, 1
	257 JumpIfEqual {259}
	258 Call 0x1C5D684
	259 Move W8, [X0+224]
	260 Compare W8, 0
	261 JumpIfNotEqual {263}
	262 Call 0x1C17DFC
	263 Move X8, [X20+56]
	264 Move X0, [X8+16]
	265 Move W8, [X0+309]
	266 Move TEMP, X8
	267 And TEMP, TEMP, 1
	268 Compare TEMP, 1
	269 JumpIfEqual {271}
	270 Call 0x1C5D684
	271 Compare X21, 0
	272 JumpIfEqual {386}
	273 Move X10, 0xB93000
	274 Move X9, [X0+184]
	275 Move X8, [X21]
	276 Move X10, [X10+840]
	277 Move X20, [X9]
	278 NotImplemented "Instruction LDRH not yet implemented."
	279 Move X1, [X10]
	280 Compare X9, 0
	281 JumpIfEqual {353}
	282 Move X10, [X8+176]
	283 Add X10, X10, 8
	284 NotImplemented "Instruction LDUR not yet implemented."
	285 NotImplemented "Instruction CMP not yet implemented."
	286 Subtract X9, X9, 1
	287 Add X10, X10, 16
	288 Move X21, [X19+24]
	289 Add X0, X31, 44
	290 Move X1, X31
	291 Call Byte.ToString, X0
	292 Move X22, X0
	293 Move X0, X19
	294 Move W1, W20
	295 Call VoiceClient.playerStr, X0, X1
	296 Move X8, 0xBD0000
	297 Move X8, [X8+3048]
	298 Move X9, 0xBD0000
	299 Move X9, [X9+2944]
	300 Move X3, X0
	301 Move X8, [X8]
	302 Move X1, X22
	303 Move X2, [X9]
	304 Move X4, X31
	305 Move X0, X8
	306 Call String.Concat, X0, X1, X2, X3
	307 Move X8, 0xB8E000
	308 Move X8, [X8+2504]
	309 Move X19, X0
	310 Move X20, [X8]
	311 Move X8, [X20+56]
	312 Compare X8, 0
	313 JumpIfNotEqual {317}
	314 Move X0, X20
	315 Call 0x1C5D6E0
	316 Move X8, [X20+56]
	317 Move X0, [X8+16]
	318 Move W8, [X0+309]
	319 Move TEMP, X8
	320 And TEMP, TEMP, 1
	321 Compare TEMP, 1
	322 JumpIfEqual {324}
	323 Call 0x1C5D684
	324 Move W8, [X0+224]
	325 Compare W8, 0
	326 JumpIfNotEqual {328}
	327 Call 0x1C17DFC
	328 Move X8, [X20+56]
	329 Move X0, [X8+16]
	330 Move W8, [X0+309]
	331 Move TEMP, X8
	332 And TEMP, TEMP, 1
	333 Compare TEMP, 1
	334 JumpIfEqual {336}
	335 Call 0x1C5D684
	336 Compare X21, 0
	337 JumpIfEqual {386}
	338 Move X10, 0xB93000
	339 Move X9, [X0+184]
	340 Move X8, [X21]
	341 Move X10, [X10+840]
	342 Move X20, [X9]
	343 NotImplemented "Instruction LDRH not yet implemented."
	344 Move X1, [X10]
	345 Compare X9, 0
	346 JumpIfEqual {353}
	347 Move X10, [X8+176]
	348 Add X10, X10, 8
	349 NotImplemented "Instruction LDUR not yet implemented."
	350 NotImplemented "Instruction CMP not yet implemented."
	351 Subtract X9, X9, 1
	352 Add X10, X10, 16
	353 Move W2, 1
	354 Move X0, X21
	355 Call 0x1C5D788
	356 Move W9, [X10]
	357 Add W9, W9, 1
	358 Add X8, X8, W9
	359 Add X0, X8, 312
	360 Move X8, [X0]
	361 Move X4, [X0+8]
	362 Move W1, 2
	363 Move X0, X21
	364 Move X2, X19
	365 Move W9, [X10]
	366 Add W9, W9, 1
	367 Add X8, X8, W9
	368 Add X0, X8, 312
	369 Move X8, [X0]
	370 Move X4, [X0+8]
	371 Move W1, 2
	372 Move X0, X19
	373 Move X2, X21
	374 Move X3, X20
	375 NotImplemented "Instruction BLR not yet implemented."
	376 Move X20, [X31+96]
	377 Move X19, [X31+104]
	378 Move X22, [X31+80]
	379 Move X21, [X31+88]
	380 Move X24, [X31+64]
	381 Move X23, [X31+72]
	382 Move X30, [X31+48]
	383 Move X25, [X31+56]
	384 Add X31, X31, 112
	385 Return 
	386 Call 0x1C17F20

Method: System.String channelStr(System.Int32 channelId)

Disassembly:
	0x03559864 B.EQ 0x35598F4
	0x03559868 ADRP X8, 0xBDC000
	0x0355986C LDR X8, [X8 + 0x608]
	0x03559870 ADD X0, X31, 0x1C
	0x03559874 MOV X1, X31
	0x03559878 LDR X8, [X8]
	0x0355987C STR X8, [X20 + 0xB0]
	0x03559880 LDR W8, [X19 + 0x20]
	0x03559884 STR W8, [X31 + 0x1C]
	0x03559888 BL 0x337B6E0
	0x0355988C LDR W8, [X20 + 0x18]
	0x03559890 CMP W8, 0x13
	0x03559894 B.LS 0x35598F4
	0x03559898 CMP W8, 0x14
	0x0355989C STR X0, [X20 + 0xB8]
	0x035598A0 B.EQ 0x35598F4
	0x035598A4 ADRP X8, 0xBDC000
	0x035598A8 LDR X8, [X8 + 0x5F8]
	0x035598AC LDR X8, [X8]
	0x035598B0 STR X8, [X20 + 0xC0]
	0x035598B4 LDR X0, [X19 + 0x28]
	0x035598B8 CBZ X0, 0x35598C8
	0x035598BC LDR X8, [X0]
	0x035598C0 LDP X9, X1, [X8 + 0x168]
	0x035598C4 BLR X9
	0x035598C8 LDR W8, [X20 + 0x18]
	0x035598CC CMP W8, 0x15
	0x035598D0 B.LS 0x35598F4
	0x035598D4 STR X0, [X20 + 0xC8]
	0x035598D8 MOV X0, X20
	0x035598DC MOV X1, X31
	0x035598E0 BL 0x32278CC
	0x035598E4 LDP X20, X19, [X31 + 0x30]
	0x035598E8 LDP X30, X21, [X31 + 0x20]
	0x035598EC ADD X31, X31, 0x40
	0x035598F0 RET
	0x035598F4 BL 0x1C16F28
	0x035598F8 BL 0x1C16F20
	0x035598FC SUB X31, X31, 0x130
	0x03559900 STP X29, X30, [X31 + 0xD0]
	0x03559904 STP X28, X27, [X31 + 0xE0]
	0x03559908 STP X26, X25, [X31 + 0xF0]
	0x0355990C STP X24, X23, [X31 + 0x100]
	0x03559910 STP X22, X21, [X31 + 0x110]
	0x03559914 STP X20, X19, [X31 + 0x120]
	0x03559918 ADRP X20, 0xE86000
	0x0355991C LDRB W8, [X20 + 0xDA8]
	0x03559920 MOV W25, W7
	0x03559924 MOV X23, X5
	0x03559928 MOV W26, W4
	0x0355992C MOV W27, W3
	0x03559930 MOV X21, X2
	0x03559934 MOV X22, X1
	0x03559938 MOV X19, X0
	0x0355993C STR W6, [X31 + 0x44]
	0x03559940 TBNZ X8, 0x0, 0x3559A18
	0x03559944 ADRP X0, 0xBC5000
	0x03559948 LDR X0, [X0 + 0xB88]
	0x0355994C BL 0x1C16CF4
	0x03559950 ADRP X0, 0xBCD000
	0x03559954 LDR X0, [X0 + 0xCF0]
	0x03559958 BL 0x1C16CF4
	0x0355995C ADRP X0, 0xBCD000
	0x03559960 LDR X0, [X0 + 0xCF8]
	0x03559964 BL 0x1C16CF4
	0x03559968 ADRP X0, 0xBCD000
	0x0355996C LDR X0, [X0 + 0xD00]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE87000
	007 Move W8, [X21+3541]
	008 Move W19, W1
	009 Move X20, X0
	010 Move [X31+12], W1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xBDD000
	016 Move X0, [X0+1232]
	017 Call 0x1C17CF4
	018 Move X0, 0xBA6000
	019 Move X0, [X0+784]
	020 Call 0x1C17CF4
	021 Move X0, 0xB9C000
	022 Move X0, [X0+1544]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3541], W8
	026 Move X20, [X20+16]
	027 Compare X20, 0
	028 JumpIfEqual {75}
	029 Move X10, 0xBDD000
	030 Move X8, [X20]
	031 Move X10, [X10+1232]
	032 NotImplemented "Instruction LDRH not yet implemented."
	033 Move X1, [X10]
	034 Compare X9, 0
	035 JumpIfEqual {42}
	036 Move X10, [X8+176]
	037 Add X10, X10, 8
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Subtract X9, X9, 1
	041 Add X10, X10, 16
	042 Move W2, 4
	043 Move X0, X20
	044 Call 0x1C5D788
	045 Move W9, [X10]
	046 Add W9, W9, 4
	047 Add X8, X8, W9
	048 Add X0, X8, 312
	049 Move X8, [X0]
	050 Move X2, [X0+8]
	051 Move X0, X20
	052 Move W1, W19
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X19, X0
	055 Add X0, X31, 12
	056 Move X1, X31
	057 Call Int32.ToString, X0
	058 Compare X19, 0
	059 JumpIfEqual {69}
	060 Move X8, 0xBA6000
	061 Move X9, 0xB9C000
	062 Move X8, [X8+784]
	063 Move X9, [X9+1544]
	064 Move X2, X19
	065 Move X4, X31
	066 Move X1, [X8]
	067 Move X3, [X9]
	068 Call String.Concat, X0, X1, X2, X3
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X30, [X31+16]
	072 Move X21, [X31+24]
	073 Add X31, X31, 48
	074 Return X0
	075 Call 0x1C17F20

Method: System.String playerStr(System.Int32 playerId)

Disassembly:
	0x03565BA0 STR X0, [X0 + 0x40]
	0x03565BA4 MOV X0, X2
	0x03565BA8 BL 0x1C16D84
	0x03565BAC TBZ X0, 0x0, 0x3565BC8
	0x03565BB0 CMP W21, 0x5
	0x03565BB4 B.NE 0x3565BCC
	0x03565BB8 ADRP X8, 0xFFFFFFFFFE65B000
	0x03565BBC ADD X8, X8, 0x2F4
	0x03565BC0 STR X8, [X19 + 0x18]
	0x03565BC4 B 0x3565BDC
	0x03565BC8 CBZ X20, 0x3565BF4
	0x03565BCC LDR X8, [X19 + 0x10]
	0x03565BD0 LDR X9, [X19 + 0x20]
	0x03565BD4 STR X8, [X19 + 0x18]
	0x03565BD8 STR X9, [X19 + 0x40]
	0x03565BDC ADRP X8, 0xFFFFFFFFFE65B000
	0x03565BE0 ADD X8, X8, 0x264
	0x03565BE4 STR X8, [X19 + 0x38]
	0x03565BE8 LDP X20, X19, [X31 + 0x10]
	0x03565BEC LDP X30, X21, [X31], #0x20
	0x03565BF0 RET
	0x03565BF4 ADRP X1, 0xFFFFFFFFFD5B6000
	0x03565BF8 ADD X1, X1, 0xEE3
	0x03565BFC MOV X0, X31
	0x03565C00 BL 0x1C16F3C
	0x03565C04 MOV X1, X31
	0x03565C08 BL 0x1C16DEC
	0x03565C0C SUB X31, X31, 0x40
	0x03565C10 STR X30, [X31 + 0x30]
	0x03565C14 LDP V2, V0, [X4 + 0x10]
	0x03565C18 LDR V1, [X4]
	0x03565C1C LDR X9, [X0 + 0x18]
	0x03565C20 LDR X8, [X0 + 0x40]
	0x03565C24 STP V2, V0, [X31 + 0x10]
	0x03565C28 STR V1, [X31]
	0x03565C2C LDR X6, [X0 + 0x28]
	0x03565C30 ADD X4, X31, 0x0
	0x03565C34 MOV X0, X8
	0x03565C38 BLR X9
	0x03565C3C LDR X30, [X31 + 0x30]
	0x03565C40 ADD X31, X31, 0x40
	0x03565C44 RET
	0x03565C48 SUB X31, X31, 0xA0
	0x03565C4C STR X30, [X31 + 0x40]
	0x03565C50 STP X28, X27, [X31 + 0x50]
	0x03565C54 STP X26, X25, [X31 + 0x60]
	0x03565C58 STP X24, X23, [X31 + 0x70]
	0x03565C5C STP X22, X21, [X31 + 0x80]
	0x03565C60 STP X20, X19, [X31 + 0x90]
	0x03565C64 STP W2, W1, [X31 + 0x48]
	0x03565C68 STRB W3, [X31 + 0x3C]
	0x03565C6C ADRP X28, 0xE7A000
	0x03565C70 ADRP X27, 0xB8E000
	0x03565C74 ADRP X26, 0xB8F000
	0x03565C78 ADRP X25, 0xB93000
	0x03565C7C ADRP X24, 0xBD0000
	0x03565C80 LDRB W8, [X28 + 0xDD8]
	0x03565C84 LDR X27, [X27 + 0x758]
	0x03565C88 LDR X26, [X26 + 0x9D8]
	0x03565C8C LDR X25, [X25 + 0x390]
	0x03565C90 LDR X24, [X24 + 0xBF8]
	0x03565C94 MOV X19, X7
	0x03565C98 MOV X20, X6
	0x03565C9C MOV X22, X5
	0x03565CA0 MOV X23, X4
	0x03565CA4 MOV X21, X0
	0x03565CA8 TBNZ X8, 0x0, 0x3565CE4

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE7B000
	007 Move W8, [X21+3542]
	008 Move W19, W1
	009 Move X20, X0
	010 Move [X31+12], W1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xBD1000
	016 Move X0, [X0+1232]
	017 Call 0x1C17CF4
	018 Move X0, 0xB9A000
	019 Move X0, [X0+784]
	020 Call 0x1C17CF4
	021 Move X0, 0xB90000
	022 Move X0, [X0+1544]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3542], W8
	026 Move X20, [X20+16]
	027 Compare X20, 0
	028 JumpIfEqual {75}
	029 Move X10, 0xBD1000
	030 Move X8, [X20]
	031 Move X10, [X10+1232]
	032 NotImplemented "Instruction LDRH not yet implemented."
	033 Move X1, [X10]
	034 Compare X9, 0
	035 JumpIfEqual {42}
	036 Move X10, [X8+176]
	037 Add X10, X10, 8
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Subtract X9, X9, 1
	041 Add X10, X10, 16
	042 Move W2, 5
	043 Move X0, X20
	044 Call 0x1C5D788
	045 Move W9, [X10]
	046 Add W9, W9, 5
	047 Add X8, X8, W9
	048 Add X0, X8, 312
	049 Move X8, [X0]
	050 Move X2, [X0+8]
	051 Move X0, X20
	052 Move W1, W19
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X19, X0
	055 Add X0, X31, 12
	056 Move X1, X31
	057 Call Int32.ToString, X0
	058 Compare X19, 0
	059 JumpIfEqual {69}
	060 Move X8, 0xB9A000
	061 Move X9, 0xB90000
	062 Move X8, [X8+784]
	063 Move X9, [X9+1544]
	064 Move X2, X19
	065 Move X4, X31
	066 Move X1, [X8]
	067 Move X3, [X9]
	068 Call String.Concat, X0, X1, X2, X3
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X30, [X31+16]
	072 Move X21, [X31+24]
	073 Add X31, X31, 48
	074 Return X0
	075 Call 0x1C17F20

Method: System.Void Dispose()

Disassembly:
	0x035667B8 LDP X20, X19, [X31 + 0x60]
	0x035667BC LDP X22, X21, [X31 + 0x50]
	0x035667C0 LDP X24, X23, [X31 + 0x40]
	0x035667C4 LDP X26, X25, [X31 + 0x30]
	0x035667C8 LDR X30, [X31 + 0x20]
	0x035667CC ADD X31, X31, 0x70
	0x035667D0 RET
	0x035667D4 STP X30, X23, [X31 - 0x30]!
	0x035667D8 STP X22, X21, [X31 + 0x10]
	0x035667DC STP X20, X19, [X31 + 0x20]
	0x035667E0 ADRP X22, 0xE79000
	0x035667E4 ADRP X23, 0xB8D000
	0x035667E8 LDRB W8, [X22 + 0xDE5]
	0x035667EC LDR X23, [X23 + 0xAC8]
	0x035667F0 MOV X20, X2
	0x035667F4 MOV X21, X1
	0x035667F8 MOV X19, X0
	0x035667FC TBNZ X8, 0x0, 0x3566850
	0x03566800 ADRP X0, 0xB8D000
	0x03566804 LDR X0, [X0 + 0x7D0]
	0x03566808 BL 0x1C16CF4
	0x0356680C ADRP X0, 0xB8D000
	0x03566810 LDR X0, [X0 + 0xAC8]
	0x03566814 BL 0x1C16CF4
	0x03566818 ADRP X0, 0xBCF000
	0x0356681C LDR X0, [X0 + 0xC50]
	0x03566820 BL 0x1C16CF4
	0x03566824 ADRP X0, 0xBCF000
	0x03566828 LDR X0, [X0 + 0x528]
	0x0356682C BL 0x1C16CF4
	0x03566830 ADRP X0, 0xBCF000
	0x03566834 LDR X0, [X0 + 0xC58]
	0x03566838 BL 0x1C16CF4
	0x0356683C ADRP X0, 0xBCF000
	0x03566840 LDR X0, [X0 + 0xC60]
	0x03566844 BL 0x1C16CF4
	0x03566848 MOVZ W8, 0x1
	0x0356684C STRB W8, [X22 + 0xDE5]
	0x03566850 LDR X0, [X23]
	0x03566854 MOVZ W1, 0x5
	0x03566858 BL 0x1C16D6C
	0x0356685C CBZ X0, 0x356691C
	0x03566860 LDR W8, [X0 + 0x18]
	0x03566864 CBZ W8, 0x3566918
	0x03566868 ADRP X9, 0xBCF000
	0x0356686C LDR X9, [X9 + 0x528]
	0x03566870 CMP W8, 0x1
	0x03566874 LDR X9, [X9]
	0x03566878 STR X9, [X0 + 0x20]
	0x0356687C B.EQ 0x3566918
	0x03566880 CMP W8, 0x2
	0x03566884 STR X21, [X0 + 0x28]
	0x03566888 B.LS 0x3566918
	0x0356688C ADRP X9, 0xBCF000
	0x03566890 LDR X9, [X9 + 0xC58]
	0x03566894 CMP W8, 0x3
	0x03566898 LDR X9, [X9]
	0x0356689C STR X9, [X0 + 0x30]
	0x035668A0 B.EQ 0x3566918
	0x035668A4 ADRP X9, 0xBCF000
	0x035668A8 LDR X9, [X9 + 0xC50]
	0x035668AC CMP X20, 0x0
	0x035668B0 LDR X9, [X9]
	0x035668B4 CSEL X9, X9, X20, EQ
	0x035668B8 CMP W8, 0x4
	0x035668BC STR X9, [X0 + 0x38]
	0x035668C0 B.EQ 0x3566918
	0x035668C4 ADRP X8, 0xBCF000
	0x035668C8 LDR X8, [X8 + 0xC60]
	0x035668CC ADRP X20, 0xB8D000
	0x035668D0 MOV X1, X31
	0x035668D4 LDR X8, [X8]
	0x035668D8 LDR X20, [X20 + 0x7D0]
	0x035668DC STR X8, [X0 + 0x40]
	0x035668E0 BL 0x32278CC
	0x035668E4 LDR X8, [X20]
	0x035668E8 MOV X20, X0
	0x035668EC LDR W9, [X8 + 0xE0]
	0x035668F0 CBNZ W9, 0x35668FC
	0x035668F4 MOV X0, X8
	0x035668F8 BL 0x1C16DFC
	0x035668FC MOV X0, X19
	0x03566900 MOV X1, X20
	0x03566904 LDP X20, X19, [X31 + 0x20]
	0x03566908 LDP X22, X21, [X31 + 0x10]
	0x0356690C MOV X2, X31
	0x03566910 LDP X30, X23, [X31], #0x30
	0x03566914 B 0x33B2C70
	0x03566918 BL 0x1C16F28
	0x0356691C BL 0x1C16F20
	0x03566920 LDRB W0, [X0]
	0x03566924 RET
	0x03566928 AND W8, W1, 0x1
	0x0356692C STRB W8, [X0]
	0x03566930 RET
	0x03566934 LDRB W0, [X0 + 0x1]
	0x03566938 RET
	0x0356693C AND W8, W1, 0x1
	0x03566940 STRB W8, [X0 + 0x1]
	0x03566944 RET
	0x03566948 STR X30, [X31 - 0x30]!
	0x0356694C STP X22, X21, [X31 + 0x10]
	0x03566950 STP X20, X19, [X31 + 0x20]
	0x03566954 ADRP X22, 0xE79000
	0x03566958 ADRP X21, 0xBCF000
	0x0356695C LDRB W8, [X22 + 0xDE6]
	0x03566960 LDR X21, [X21 + 0xC68]
	0x03566964 MOV X19, X1
	0x03566968 MOV X20, X0
	0x0356696C TBNZ X8, 0x0, 0x3566984
	0x03566970 ADRP X0, 0xBCF000
	0x03566974 LDR X0, [X0 + 0xC68]
	0x03566978 BL 0x1C16CF4
	0x0356697C MOVZ W8, 0x1
	0x03566980 STRB W8, [X22 + 0xDE6]
	0x03566984 LDR X0, [X21]
	0x03566988 LDR W8, [X0 + 0xE0]
	0x0356698C CBNZ W8, 0x3566994
	0x03566990 BL 0x1C16DFC
	0x03566994 ANDS W31, W20, 0xFF
	0x03566998 CSET W8, NE
	0x0356699C ANDS W31, W19, 0xFF
	0x035669A0 CSET W9, NE
	0x035669A4 EOR W8, W8, W9, 0x0
	0x035669A8 TBZ X8, 0x0, 0x35669B4
	0x035669AC MOV W0, W31
	0x035669B0 B 0x35669D8
	0x035669B4 LDR X0, [X21]
	0x035669B8 LDR W8, [X0 + 0xE0]
	0x035669BC CBNZ W8, 0x35669C4
	0x035669C0 BL 0x1C16DFC
	0x035669C4 ANDS X31, X20, 0xFFFF
	0x035669C8 CSET W8, EQ
	0x035669CC ANDS X31, X19, 0xFFFF
	0x035669D0 CSET W9, NE
	0x035669D4 EOR W0, W8, W9, 0x0
	0x035669D8 LDP X20, X19, [X31 + 0x20]
	0x035669DC LDP X22, X21, [X31 + 0x10]
	0x035669E0 LDR X30, [X31], #0x30
	0x035669E4 RET
	0x035669E8 STR X30, [X31 - 0x30]!
	0x035669EC STP X22, X21, [X31 + 0x10]
	0x035669F0 STP X20, X19, [X31 + 0x20]
	0x035669F4 ADRP X22, 0xE79000
	0x035669F8 ADRP X21, 0xBCF000
	0x035669FC LDRB W8, [X22 + 0xDE7]
	0x03566A00 LDR X21, [X21 + 0xC68]
	0x03566A04 MOV X19, X1
	0x03566A08 MOV X20, X0
	0x03566A0C TBNZ X8, 0x0, 0x3566A24
	0x03566A10 ADRP X0, 0xBCF000
	0x03566A14 LDR X0, [X0 + 0xC68]
	0x03566A18 BL 0x1C16CF4
	0x03566A1C MOVZ W8, 0x1
	0x03566A20 STRB W8, [X22 + 0xDE7]
	0x03566A24 LDR X0, [X21]
	0x03566A28 LDR W8, [X0 + 0xE0]
	0x03566A2C CBNZ W8, 0x3566A34
	0x03566A30 BL 0x1C16DFC
	0x03566A34 ANDS W31, W20, 0xFF
	0x03566A38 CSET W8, NE
	0x03566A3C ANDS W31, W19, 0xFF
	0x03566A40 CSET W9, NE
	0x03566A44 EOR W8, W8, W9, 0x0
	0x03566A48 TBZ X8, 0x0, 0x3566A54
	0x03566A4C MOVZ W0, 0x1
	0x03566A50 B 0x3566A78
	0x03566A54 LDR X0, [X21]
	0x03566A58 LDR W8, [X0 + 0xE0]
	0x03566A5C CBNZ W8, 0x3566A64
	0x03566A60 BL 0x1C16DFC
	0x03566A64 ANDS X31, X20, 0xFFFF
	0x03566A68 CSET W8, NE
	0x03566A6C ANDS X31, X19, 0xFFFF
	0x03566A70 CSET W9, NE
	0x03566A74 EOR W0, W8, W9, 0x0
	0x03566A78 LDP X20, X19, [X31 + 0x20]
	0x03566A7C LDP X22, X21, [X31 + 0x10]
	0x03566A80 LDR X30, [X31], #0x30
	0x03566A84 RET
	0x03566A88 STR X30, [X31 - 0x30]!
	0x03566A8C STP X22, X21, [X31 + 0x10]
	0x03566A90 STP X20, X19, [X31 + 0x20]
	0x03566A94 ADRP X22, 0xE79000
	0x03566A98 ADRP X21, 0xBCF000
	0x03566A9C LDRB W8, [X22 + 0xDE8]
	0x03566AA0 LDR X21, [X21 + 0xC68]
	0x03566AA4 MOV X19, X1
	0x03566AA8 MOV X20, X0
	0x03566AAC TBNZ X8, 0x0, 0x3566AC4
	0x03566AB0 ADRP X0, 0xBCF000
	0x03566AB4 LDR X0, [X0 + 0xC68]
	0x03566AB8 BL 0x1C16CF4
	0x03566ABC MOVZ W8, 0x1
	0x03566AC0 STRB W8, [X22 + 0xDE8]
	0x03566AC4 LDRH W8, [X20]
	0x03566AC8 LDR X0, [X21]
	0x03566ACC ADD X1, X31, 0xC
	0x03566AD0 STRH W8, [X31 + 0xC]
	0x03566AD4 BL 0x1C16E04
	0x03566AD8 MOV X1, X19
	0x03566ADC MOV X2, X31
	0x03566AE0 BL 0x33D55D0
	0x03566AE4 LDP X20, X19, [X31 + 0x20]
	0x03566AE8 LDP X22, X21, [X31 + 0x10]
	0x03566AEC AND W0, W0, 0x1
	0x03566AF0 LDR X30, [X31], #0x30
	0x03566AF4 RET
	0x03566AF8 SUB X31, X31, 0x30
	0x03566AFC STP X30, X21, [X31 + 0x10]
	0x03566B00 STP X20, X19, [X31 + 0x20]
	0x03566B04 ADRP X21, 0xE79000
	0x03566B08 ADRP X20, 0xBCF000
	0x03566B0C LDRB W8, [X21 + 0xDE9]
	0x03566B10 LDR X20, [X20 + 0xC68]
	0x03566B14 MOV X19, X0
	0x03566B18 TBNZ X8, 0x0, 0x3566B30
	0x03566B1C ADRP X0, 0xBCF000
	0x03566B20 LDR X0, [X0 + 0xC68]
	0x03566B24 BL 0x1C16CF4
	0x03566B28 MOVZ W8, 0x1
	0x03566B2C STRB W8, [X21 + 0xDE9]
	0x03566B30 LDRH W8, [X19]
	0x03566B34 LDR X0, [X20]
	0x03566B38 ADD X1, X31, 0xC
	0x03566B3C STRH W8, [X31 + 0xC]
	0x03566B40 BL 0x1C16E04
	0x03566B44 MOV X1, X31
	0x03566B48 BL 0x33D55D8
	0x03566B4C LDP X20, X19, [X31 + 0x20]
	0x03566B50 LDP X30, X21, [X31 + 0x10]
	0x03566B54 ADD X31, X31, 0x30
	0x03566B58 RET
	0x03566B5C STR X30, [X31 - 0x30]!
	0x03566B60 STP X22, X21, [X31 + 0x10]
	0x03566B64 STP X20, X19, [X31 + 0x20]
	0x03566B68 ADRP X21, 0xE79000
	0x03566B6C ADRP X22, 0xBCF000
	0x03566B70 LDRB W8, [X21 + 0xDEA]
	0x03566B74 LDR X22, [X22 + 0xC68]
	0x03566B78 MOV X19, X1
	0x03566B7C MOV X20, X0

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+192], X29
	003 Move [X31+200], X30
	004 Move [X31+208], X28
	005 Move [X31+216], X27
	006 Move [X31+224], X26
	007 Move [X31+232], X25
	008 Move [X31+240], X24
	009 Move [X31+248], X23
	010 Move [X31+256], X22
	011 Move [X31+264], X21
	012 Move [X31+272], X20
	013 Move [X31+280], X19
	014 Move X21, 0xE7A000
	015 Move W8, [X21+3543]
	016 Move X19, X0
	017 Add X20, X31, 144
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {69}
	022 Move X0, 0xBD0000
	023 Move X0, [X0+2120]
	024 Call 0x1C17CF4
	025 Move X0, 0xBD0000
	026 Move X0, [X0+2224]
	027 Call 0x1C17CF4
	028 Move X0, 0xBD0000
	029 Move X0, [X0+2232]
	030 Call 0x1C17CF4
	031 Move X0, 0xBD0000
	032 Move X0, [X0+2128]
	033 Call 0x1C17CF4
	034 Move X0, 0xBD0000
	035 Move X0, [X0+2240]
	036 Call 0x1C17CF4
	037 Move X0, 0xBD0000
	038 Move X0, [X0+2248]
	039 Call 0x1C17CF4
	040 Move X0, 0xBD0000
	041 Move X0, [X0+2256]
	042 Call 0x1C17CF4
	043 Move X0, 0xBD0000
	044 Move X0, [X0+2136]
	045 Call 0x1C17CF4
	046 Move X0, 0xBD0000
	047 Move X0, [X0+2264]
	048 Call 0x1C17CF4
	049 Move X0, 0xBD0000
	050 Move X0, [X0+2144]
	051 Call 0x1C17CF4
	052 Move X0, 0xBD0000
	053 Move X0, [X0+2272]
	054 Call 0x1C17CF4
	055 Move X0, 0xBD0000
	056 Move X0, [X0+2280]
	057 Call 0x1C17CF4
	058 Move X0, 0xBD0000
	059 Move X0, [X0+2152]
	060 Call 0x1C17CF4
	061 Move X0, 0xBD0000
	062 Move X0, [X0+2288]
	063 Call 0x1C17CF4
	064 Move X0, 0xBD0000
	065 Move X0, [X0+2296]
	066 Call 0x1C17CF4
	067 Move W8, 1
	068 Move [X21+3543], W8
	069 NotImplemented "Instruction MOVI not yet implemented."
	070 Move [X31+176], X31
	071 Move [X31+128], X31
	072 Move [X31+80], X31
	073 Move [X20], V0
	074 Move [X20+8], V0
	075 Move [X31+96], V0
	076 Move [X31+104], V0
	077 Move [X31+48], V0
	078 Move [X31+56], V0
	079 Move X0, [X19+120]
	080 Compare X0, 0
	081 JumpIfEqual {216}
	082 Move X8, 0xBD0000
	083 Move X8, [X8+2120]
	084 Move X28, 0xBD0000
	085 Move X26, 0xBD0000
	086 Move X23, 0xBD0000
	087 Move X24, 0xBD0000
	088 Move X25, 0xBD0000
	089 Move X28, [X28+2136]
	090 Move X26, [X26+2224]
	091 Move X23, [X23+2256]
	092 Move X24, [X24+2232]
	093 Move X25, [X25+2264]
	094 Move X1, [X8]
	095 Move X22, 0xBD0000
	096 Move X21, 0xBD0000
	097 Move X27, 0xBD0000
	098 Move X22, [X22+2248]
	099 Move X21, [X21+2240]
	100 Move X27, [X27+2128]
	101 Add X8, X31, 8
	102 Call Dictionary`2<Byte, Object>.GetEnumerator, X0
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 Move X8, [X31+40]
	106 Move [X20], V0
	107 Move [X20+8], V1
	108 Move [X31+176], X8
	109 Move X1, [X28]
	110 Add X0, X31, 144
	111 Call Enumerator<Byte, Object>.MoveNext, X0
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {123}
	116 Move X0, [X31+168]
	117 Compare X0, 0
	118 JumpIfEqual {212}
	119 Move X8, [X0]
	120 Move X9, [X8+408]
	121 Move X1, [X8+416]
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Move X1, [X27]
	124 Add X0, X31, 144
	125 Call Enumerator<Byte, Object>.Dispose, X0
	126 Move X0, [X19+136]
	127 Compare X0, 0
	128 JumpIfEqual {216}
	129 Move X1, [X26]
	130 Add X8, X31, 8
	131 Call Dictionary`2<Int32, Object>.GetEnumerator, X0
	132 NotImplemented "Instruction LDUR not yet implemented."
	133 NotImplemented "Instruction LDUR not yet implemented."
	134 Move X8, [X31+40]
	135 Move [X31+96], V0
	136 Move [X31+104], V1
	137 Move [X31+128], X8
	138 Move X1, [X23]
	139 Add X0, X31, 96
	140 Call Enumerator<Int32, Object>.MoveNext, X0
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {185}
	145 Move X0, [X31+120]
	146 Compare X0, 0
	147 JumpIfEqual {215}
	148 Move X1, [X24]
	149 Add X8, X31, 8
	150 Call Dictionary`2<Byte, Object>.GetEnumerator, X0
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 Move X8, [X31+40]
	154 Move [X31+48], V0
	155 Move [X31+56], V1
	156 Move [X31+80], X8
	157 Move X1, [X25]
	158 Add X0, X31, 48
	159 Call Enumerator<Byte, Object>.MoveNext, X0
	160 Move TEMP, X0
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfNotEqual {168}
	164 Move X0, [X31+72]
	165 Compare X0, 0
	166 JumpIfEqual {178}
	167 Call RemoteVoice.Dispose, X0
	168 Move X20, X31
	169 Move W19, 5
	170 Move X1, [X22]
	171 Add X0, X31, 48
	172 Call Enumerator<Byte, Object>.Dispose, X0
	173 Compare X20, 0
	174 JumpIfNotEqual {213}
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Compare W19, 0
	177 JumpIfEqual {138}
	178 Call 0x1C17F20
	179 Move X19, X1
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Call 0x3EB2AD0
	182 Move X20, [X0]
	183 Call 0x3EB2AE0
	184 Move W19, W31
	185 Move X1, [X21]
	186 Add X0, X31, 96
	187 Call Enumerator<Int32, Object>.Dispose, X0
	188 Move X20, [X31+272]
	189 Move X19, [X31+280]
	190 Move X22, [X31+256]
	191 Move X21, [X31+264]
	192 Move X24, [X31+240]
	193 Move X23, [X31+248]
	194 Move X26, [X31+224]
	195 Move X25, [X31+232]
	196 Move X28, [X31+208]
	197 Move X27, [X31+216]
	198 Move X29, [X31+192]
	199 Move X30, [X31+200]
	200 Add X31, X31, 288
	201 Return 
	202 Move [X31], X0
	203 Move X20, X31
	204 Move X1, [X22]
	205 Add X0, X31, 48
	206 Call Enumerator<Byte, Object>.Dispose, X0
	207 Move X0, [X31]
	208 Compare X20, 0
	209 JumpIfEqual {220}
	210 Move X0, X20
	211 Call 0x1C17F18
	212 Call 0x1C17F20
	213 Move X0, X20
	214 Call 0x1C17F18
	215 Call 0x1C17F20
	216 Call 0x1C17F20
	217 Move X19, X1
	218 Move [X31], X0
	219 Move X19, X1
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Call 0x3EB2AD0
	222 Move X19, [X0]
	223 Call 0x3EB2AE0
	224 Move X1, [X21]
	225 Add X0, X31, 96
	226 Call Enumerator<Int32, Object>.Dispose, X0
	227 Compare X19, 0
	228 JumpIfEqual {188}
	229 Move X0, X19
	230 Call 0x1C17F18
	231 Move [X31], X0
	232 Move X19, X31
	233 Move [X31], X0
	234 Move X1, [X21]
	235 Add X0, X31, 96
	236 Call Enumerator<Int32, Object>.Dispose, X0
	237 Compare X19, 0
	238 JumpIfEqual {261}
	239 Move X0, X19
	240 Call 0x1C17F18
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move [X31], X0
	243 Move X0, [X31]
	244 Call 0x3EB2AD0
	245 Move X20, [X0]
	246 Call 0x3EB2AE0
	247 Move X1, [X27]
	248 Add X0, X31, 144
	249 Call Enumerator<Byte, Object>.Dispose, X0
	250 Compare X20, 0
	251 JumpIfEqual {126}
	252 Move X0, X20
	253 Call 0x1C17F18
	254 Move X20, X31
	255 Move [X31], X0
	256 Move X1, [X27]
	257 Add X0, X31, 144
	258 Call Enumerator<Byte, Object>.Dispose, X0
	259 Compare X20, 0
	260 JumpIfNotEqual {263}
	261 Move X0, [X31]
	262 Call 0x1D2D690
	263 Move X0, X20
	264 Call 0x1C17F18
	265 Call 0x1991590

