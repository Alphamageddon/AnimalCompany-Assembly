Type: Photon.Voice.PrimitiveArrayPool`1

Method: System.Void .ctor(System.Int32 capacity, System.String name)

Disassembly:
	0x024B3A08 LDRSW X9, [X10]
	0x024B3A0C ADD X8, X8, X9, 0x4, LSL
	0x024B3A10 ADD X0, X8, 0x138
	0x024B3A14 LDP X8, X1, [X0]

ISIL:
	001 Move X8, [X3+32]
	002 Move X8, [X8+192]
	003 Move X3, [X8]
	004 Call ObjectPool`2<Object, Int32>..ctor, X0, X1, X2
	005 Return 

Method: System.Void .ctor(System.Int32 capacity, System.String name, System.Int32 info)

Disassembly:
	0x024B3A18 ADRP X23, 0x1C40000
	0x024B3A1C LDR X23, [X23 + 0xE00]
	0x024B3A20 MOV X0, X21
	0x024B3A24 BLR X8

ISIL:
	001 Move X8, [X4+32]
	002 Move X8, [X8+192]
	003 Move X4, [X8+16]
	004 Call ObjectPool`2<Object, Int32>..ctor, X0, X1, X2, X3
	005 Return 

Method: T[] createObject(System.Int32 info)

Disassembly:
	0x024B3A28 MOV X21, X0
	0x024B3A2C CBZ X0, 0x24B3BB8
	0x024B3A30 ADRP X22, 0x1C40000
	0x024B3A34 LDR X22, [X22 + 0xE18]
	0x024B3A38 LDR X8, [X21]
	0x024B3A3C LDR X1, [X22]
	0x024B3A40 LDRH W9, [X8 + 0x12E]
	0x024B3A44 CBZ X9, 0x24B3A68
	0x024B3A48 LDR X10, [X8 + 0xB0]
	0x024B3A4C ADD X10, X10, 0x8
	0x024B3A50 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X2+32]
	004 Move W19, W1
	005 Move X8, [X8+192]
	006 Move X0, [X8+24]
	007 Move W8, [X0+309]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {13}
	012 Call 0x1C5D684
	013 Move W1, W19
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Call 0x1C17D6C
	017 Return X0

Method: System.Void destroyObject(T[] obj)

Disassembly:
	0x024B3A54 CMP X11, X1

ISIL:
	001 Return 

Method: System.Boolean infosMatch(System.Int32 i0, System.Int32 i1)

Disassembly:
	0x024B3A58 B.EQ 0x24B3A78
	0x024B3A5C SUBS X9, X9, 0x1
	0x024B3A60 ADD X10, X10, 0x10

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

