Type: Photon.Voice.BufferReaderPushAdapterAsyncPoolShortToFloat

Method: System.Void .ctor(Photon.Voice.IDataReader`1<System.Int16> reader)

Disassembly:
	0x03563BF4 B 0x3563BFC
	0x03563BF8 MOV X19, X0
	0x03563BFC ADRP X8, 0xBD2000
	0x03563C00 LDR X8, [X8 + 0xB20]
	0x03563C04 LDR X1, [X8]
	0x03563C08 ADD X0, X31, 0x0
	0x03563C0C BL 0x2BC434C
	0x03563C10 CBNZ X20, 0x3563C1C
	0x03563C14 MOV X0, X19
	0x03563C18 BL 0x1D2C690
	0x03563C1C MOV X0, X20
	0x03563C20 BL 0x1C16F18
	0x03563C24 BL 0x1990590
	0x03563C28 SUB X31, X31, 0x50
	0x03563C2C STR X30, [X31 + 0x30]
	0x03563C30 STP X20, X19, [X31 + 0x40]
	0x03563C34 ADRP X20, 0xE7C000
	0x03563C38 LDRB W8, [X20 + 0xDCE]
	0x03563C3C MOV X19, X0
	0x03563C40 TBNZ X8, 0x0, 0x3563C88
	0x03563C44 ADRP X0, 0xBD2000
	0x03563C48 LDR X0, [X0 + 0x848]
	0x03563C4C BL 0x1C16CF4
	0x03563C50 ADRP X0, 0xBD2000
	0x03563C54 LDR X0, [X0 + 0x850]
	0x03563C58 BL 0x1C16CF4
	0x03563C5C ADRP X0, 0xBD2000
	0x03563C60 LDR X0, [X0 + 0x858]
	0x03563C64 BL 0x1C16CF4
	0x03563C68 ADRP X0, 0xBD2000
	0x03563C6C LDR X0, [X0 + 0x860]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xE7D000
	008 Move X23, 0xBB9000
	009 Move X21, 0xBD3000
	010 Move W8, [X22+3573]
	011 Move X23, [X23+2080]
	012 Move X21, [X21+2752]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xBD3000
	020 Move X0, [X0+2752]
	021 Call 0x1C17CF4
	022 Move X0, 0xBB9000
	023 Move X0, [X0+2080]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+3573], W8
	027 Move X0, [X23]
	028 Move W1, W31
	029 Call 0x1C17D6C
	030 Move [X20+24], X0
	031 Move X2, [X21]
	032 Move X0, X20
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Move X23, [X31+56]
	040 Call 0x28E5444, X0, X1
	041 Return 

Method: System.Void Service(Photon.Voice.LocalVoice localVoice)

Disassembly:
	0x03568C70 TBZ X0, 0x0, 0x3568C8C
	0x03568C74 AND W2, W20, 0x1
	0x03568C78 MOV X0, X19
	0x03568C7C LDP X20, X19, [X31 + 0x10]
	0x03568C80 MOVZ W1, 0x47
	0x03568C84 LDR X30, [X31], #0x20
	0x03568C88 B 0x3567ED8
	0x03568C8C LDP X20, X19, [X31 + 0x10]
	0x03568C90 LDR X30, [X31], #0x20
	0x03568C94 RET
	0x03568C98 STR X30, [X31 - 0x20]!
	0x03568C9C STP X20, X19, [X31 + 0x10]
	0x03568CA0 LDRB W9, [X0 + 0x25]
	0x03568CA4 AND W8, W1, 0x1
	0x03568CA8 CMP W9, W8
	0x03568CAC B.EQ 0x3568CE8
	0x03568CB0 MOV X19, X0
	0x03568CB4 LDR X0, [X0 + 0x58]
	0x03568CB8 MOV W20, W1
	0x03568CBC MOV X1, X31
	0x03568CC0 MOV X2, X31
	0x03568CC4 STRB W8, [X19 + 0x25]
	0x03568CC8 BL 0x33C5D2C
	0x03568CCC TBZ X0, 0x0, 0x3568CE8
	0x03568CD0 AND W2, W20, 0x1
	0x03568CD4 MOV X0, X19
	0x03568CD8 LDP X20, X19, [X31 + 0x10]
	0x03568CDC MOVZ W1, 0x3D
	0x03568CE0 LDR X30, [X31], #0x20
	0x03568CE4 B 0x3567ED8
	0x03568CE8 LDP X20, X19, [X31 + 0x10]
	0x03568CEC LDR X30, [X31], #0x20
	0x03568CF0 RET
	0x03568CF4 STR X30, [X31 - 0x30]!
	0x03568CF8 STP X22, X21, [X31 + 0x10]
	0x03568CFC STP X20, X19, [X31 + 0x20]
	0x03568D00 ADRP X21, 0xE77000
	0x03568D04 LDRB W8, [X21 + 0xDF9]
	0x03568D08 MOV X19, X0
	0x03568D0C AND W20, W1, 0x1
	0x03568D10 STRB W20, [X31 + 0xC]
	0x03568D14 TBNZ X8, 0x0, 0x3568D50
	0x03568D18 ADRP X0, 0xB8B000
	0x03568D1C LDR X0, [X0 + 0x9C8]
	0x03568D20 BL 0x1C16CF4
	0x03568D24 ADRP X0, 0xB8B000
	0x03568D28 LDR X0, [X0 + 0xB58]
	0x03568D2C BL 0x1C16CF4
	0x03568D30 ADRP X0, 0xB90000
	0x03568D34 LDR X0, [X0 + 0x348]
	0x03568D38 BL 0x1C16CF4
	0x03568D3C ADRP X0, 0xBCD000
	0x03568D40 LDR X0, [X0 + 0xD48]
	0x03568D44 BL 0x1C16CF4
	0x03568D48 MOVZ W8, 0x1
	0x03568D4C STRB W8, [X21 + 0xDF9]
	0x03568D50 LDRB W8, [X19 + 0x40]
	0x03568D54 CMP W8, W20
	0x03568D58 B.EQ 0x3568E74
	0x03568D5C ADRP X8, 0xB8B000
	0x03568D60 LDR X8, [X8 + 0xB58]
	0x03568D64 LDR X20, [X19 + 0x78]
	0x03568D68 LDR X0, [X8]
	0x03568D6C LDR W8, [X0 + 0xE0]
	0x03568D70 CBNZ W8, 0x3568D78
	0x03568D74 BL 0x1C16DFC
	0x03568D78 ADD X0, X31, 0xC
	0x03568D7C MOV X1, X31
	0x03568D80 BL 0x33176C4
	0x03568D84 ADRP X8, 0xBCD000
	0x03568D88 LDR X8, [X8 + 0xD48]
	0x03568D8C MOV X1, X0
	0x03568D90 MOV X2, X31
	0x03568D94 LDR X8, [X8]
	0x03568D98 MOV X0, X8
	0x03568D9C BL 0x321B938
	0x03568DA0 ADRP X8, 0xB8B000
	0x03568DA4 LDR X8, [X8 + 0x9C8]
	0x03568DA8 MOV X21, X0
	0x03568DAC LDR X22, [X8]
	0x03568DB0 LDR X8, [X22 + 0x38]
	0x03568DB4 CBNZ X8, 0x3568DC4
	0x03568DB8 MOV X0, X22
	0x03568DBC BL 0x1C5C6E0
	0x03568DC0 LDR X8, [X22 + 0x38]
	0x03568DC4 LDR X0, [X8 + 0x10]
	0x03568DC8 LDRB W8, [X0 + 0x135]
	0x03568DCC TBNZ X8, 0x0, 0x3568DD4
	0x03568DD0 BL 0x1C5C684
	0x03568DD4 LDR W8, [X0 + 0xE0]
	0x03568DD8 CBNZ W8, 0x3568DE0
	0x03568DDC BL 0x1C16DFC
	0x03568DE0 LDR X8, [X22 + 0x38]
	0x03568DE4 LDR X0, [X8 + 0x10]
	0x03568DE8 LDRB W8, [X0 + 0x135]
	0x03568DEC TBNZ X8, 0x0, 0x3568DF4
	0x03568DF0 BL 0x1C5C684
	0x03568DF4 CBZ X20, 0x3568E88
	0x03568DF8 ADRP X10, 0xB90000
	0x03568DFC LDR X9, [X0 + 0xB8]
	0x03568E00 LDR X8, [X20]
	0x03568E04 LDR X10, [X10 + 0x348]
	0x03568E08 LDR X22, [X9]
	0x03568E0C LDRH W9, [X8 + 0x12E]
	0x03568E10 LDR X1, [X10]
	0x03568E14 CBZ X9, 0x3568E38
	0x03568E18 LDR X10, [X8 + 0xB0]
	0x03568E1C ADD X10, X10, 0x8
	0x03568E20 LDUR X11, [X10 - 0x8]
	0x03568E24 CMP X11, X1
	0x03568E28 B.EQ 0x3568E48
	0x03568E2C SUBS X9, X9, 0x1
	0x03568E30 ADD X10, X10, 0x10
	0x03568E34 B.NE 0x3568E20
	0x03568E38 MOVZ W2, 0x1
	0x03568E3C MOV X0, X20
	0x03568E40 BL 0x1C5C788
	0x03568E44 B 0x3568E58
	0x03568E48 LDR W9, [X10]
	0x03568E4C ADD W9, W9, 0x1
	0x03568E50 ADD X8, X8, W9, 0x4, SXTW
	0x03568E54 ADD X0, X8, 0x138
	0x03568E58 LDP X8, X4, [X0]
	0x03568E5C MOVZ W1, 0x3
	0x03568E60 MOV X0, X20
	0x03568E64 MOV X2, X21
	0x03568E68 MOV X3, X22
	0x03568E6C BLR X8
	0x03568E70 LDRB W20, [X31 + 0xC]
	0x03568E74 STRB W20, [X19 + 0x40]
	0x03568E78 LDP X20, X19, [X31 + 0x20]
	0x03568E7C LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0xE78000
	012 Move W8, [X21+3574]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {42}
	019 Move X0, 0xBCE000
	020 Move X0, [X0+3248]
	021 Call 0x1C17CF4
	022 Move X0, 0xBCE000
	023 Move X0, [X0+3256]
	024 Call 0x1C17CF4
	025 Move X0, 0xBCE000
	026 Move X0, [X0+3264]
	027 Call 0x1C17CF4
	028 Move X0, 0xBB4000
	029 Move X0, [X0+2080]
	030 Call 0x1C17CF4
	031 Move X0, 0xBCE000
	032 Move X0, [X0+3096]
	033 Call 0x1C17CF4
	034 Move X0, 0xBCE000
	035 Move X0, [X0+2592]
	036 Call 0x1C17CF4
	037 Move X0, 0xBCE000
	038 Move X0, [X0+3272]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X21+3574], W8
	042 Compare X19, 0
	043 JumpIfEqual {152}
	044 Move X9, 0xBCE000
	045 Move X9, [X9+3272]
	046 Move X8, [X19]
	047 Move X1, [X9]
	048 Move W10, [X8+304]
	049 Move W9, [X1+304]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X8, [X8+200]
	052 Add X8, X8, X9
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X0, [X19+312]
	056 Compare X0, 0
	057 JumpIfEqual {152}
	058 Move X24, 0xBCE000
	059 Move X24, [X24+3256]
	060 Move X1, [X24]
	061 Call FactoryPrimitiveArrayPool`1<Single>.New, X0
	062 Move X22, [X20+24]
	063 Compare X22, 0
	064 JumpIfEqual {152}
	065 Move X21, X0
	066 Compare X0, 0
	067 JumpIfEqual {152}
	068 Move W8, [X22+24]
	069 Move W1, [X21+24]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, 0xBB4000
	072 Move X8, [X8+2080]
	073 Move X0, [X8]
	074 Call 0x1C17D6C
	075 Move X22, X0
	076 Move [X20+24], X0
	077 Move X23, [X20+16]
	078 Compare X23, 0
	079 JumpIfEqual {152}
	080 Move X25, 0xBCE000
	081 Move X26, 0xBCE000
	082 Move X27, 0xBCE000
	083 Move X25, [X25+3248]
	084 Move X26, [X26+3264]
	085 Move X27, [X27+3096]
	086 Move X8, [X23]
	087 Move X1, [X26]
	088 NotImplemented "Instruction LDRH not yet implemented."
	089 Compare X9, 0
	090 JumpIfEqual {97}
	091 Move X10, [X8+176]
	092 Add X10, X10, 8
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Subtract X9, X9, 1
	096 Add X10, X10, 16
	097 Move X0, X23
	098 Move W2, W31
	099 Call 0x1C5D788
	100 NotImplemented "Instruction LDRSW not yet implemented."
	101 Add X8, X8, X9
	102 Add X0, X8, 312
	103 Move X8, [X0]
	104 Move X2, [X0+8]
	105 Move X0, X23
	106 Move X1, X22
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {132}
	112 Compare X21, 0
	113 JumpIfEqual {152}
	114 Move X0, [X20+24]
	115 Move W2, [X21+24]
	116 Move X1, X21
	117 Call AudioUtil.Convert, X0, X1, X2
	118 Move X2, [X27]
	119 Move X0, X19
	120 Move X1, X21
	121 Call LocalVoiceFramed`1<Single>.PushDataAsync, X0, X1
	122 Move X0, [X19+312]
	123 Compare X0, 0
	124 JumpIfEqual {152}
	125 Move X1, [X24]
	126 Call FactoryPrimitiveArrayPool`1<Single>.New, X0
	127 Move X23, [X20+16]
	128 Compare X23, 0
	129 JumpIfEqual {152}
	130 Move X22, [X20+24]
	131 Move X21, X0
	132 Compare X21, 0
	133 JumpIfEqual {152}
	134 Move X0, [X19+312]
	135 Compare X0, 0
	136 JumpIfEqual {152}
	137 Move W2, [X21+24]
	138 Move X3, [X25]
	139 Move X1, X21
	140 Move X20, [X31+64]
	141 Move X19, [X31+72]
	142 Move X22, [X31+48]
	143 Move X21, [X31+56]
	144 Move X24, [X31+32]
	145 Move X23, [X31+40]
	146 Move X26, [X31+16]
	147 Move X25, [X31+24]
	148 Move X30, [X31+80]
	149 Move X27, [X31+88]
	150 Call FactoryPrimitiveArrayPool`1<Single>.Free, X0, X1, X2
	151 Return 
	152 Call 0x1C17F20
	153 Move X0, X19
	154 Call 0x1C181E0

