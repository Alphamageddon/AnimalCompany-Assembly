Type: Photon.Voice.LoadBalancingTransport

Method: System.Int32 GetPayloadFragmentSize(Photon.Voice.SendFrameParams par)

Disassembly:
	0x0356BB60 LDP X30, X23, [X31], #0x30
	0x0356BB64 RET
	0x0356BB68 MOV X0, X20
	0x0356BB6C MOV X1, X31
	0x0356BB70 BL 0x3505B04
	0x0356BB74 LDR X8, [X19 + 0x108]
	0x0356BB78 CBZ X8, 0x356BBD8
	0x0356BB7C MOV W1, W0

ISIL:
	001 Move X8, [X1+8]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move W8, [X8+24]
	005 Move W9, 1105
	006 Subtract W0, W9, W8
	007 Return X0
	008 Move W0, 1108
	009 Return X0

Method: Photon.Voice.VoiceClient get_VoiceClient()

Disassembly:
	0x0356BB80 LDR X0, [X19 + 0x188]
	0x0356BB84 CBZ X0, 0x356BBD8

ISIL:
	001 Move X0, [X0+392]
	002 Return X0

Method: System.Boolean IsChannelJoined(System.Int32 channelId)

Disassembly:
	0x0356BB88 LDR W8, [X8 + 0x18]
	0x0356BB8C CMP W1, W8
	0x0356BB90 B.NE 0x356BBC4
	0x0356BB94 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move W8, [X0+144]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Void .ctor(Photon.Voice.ILogger logger = null, ExitGames.Client.Photon.ConnectionProtocol connectionProtocol = 0, System.Boolean cppCompatibilityMode = False)

Disassembly:
	0x0356BB98 LDP X22, X21, [X31 + 0x10]
	0x0356BB9C MOV X1, X31
	0x0356BBA0 LDP X30, X23, [X31], #0x30
	0x0356BBA4 B 0x3563D8C
	0x0356BBA8 LDR X0, [X19 + 0x188]
	0x0356BBAC CBZ X0, 0x356BBD8
	0x0356BBB0 LDP X20, X19, [X31 + 0x20]
	0x0356BBB4 LDP X22, X21, [X31 + 0x10]
	0x0356BBB8 MOV X2, X31
	0x0356BBBC LDP X30, X23, [X31], #0x30
	0x0356BBC0 B 0x3563F20
	0x0356BBC4 LDP X20, X19, [X31 + 0x20]
	0x0356BBC8 LDP X22, X21, [X31 + 0x10]
	0x0356BBCC MOV X2, X31
	0x0356BBD0 LDP X30, X23, [X31], #0x30
	0x0356BBD4 B 0x3564084
	0x0356BBD8 BL 0x1C16F20
	0x0356BBDC SUB X31, X31, 0xA0
	0x0356BBE0 STR X30, [X31 + 0x40]
	0x0356BBE4 STP X28, X27, [X31 + 0x50]
	0x0356BBE8 STP X26, X25, [X31 + 0x60]
	0x0356BBEC STP X24, X23, [X31 + 0x70]
	0x0356BBF0 STP X22, X21, [X31 + 0x80]
	0x0356BBF4 STP X20, X19, [X31 + 0x90]
	0x0356BBF8 ADRP X22, 0xE74000
	0x0356BBFC LDRB W8, [X22 + 0xE3F]
	0x0356BC00 MOV W21, W4
	0x0356BC04 MOV W19, W3
	0x0356BC08 MOV W23, W2
	0x0356BC0C MOV X24, X1
	0x0356BC10 MOV X20, X0
	0x0356BC14 TBNZ X8, 0x0, 0x356BC80
	0x0356BC18 ADRP X0, 0xB88000
	0x0356BC1C LDR X0, [X0 + 0x9C8]
	0x0356BC20 BL 0x1C16CF4
	0x0356BC24 ADRP X0, 0xB88000
	0x0356BC28 LDR X0, [X0 + 0x618]
	0x0356BC2C BL 0x1C16CF4
	0x0356BC30 ADRP X0, 0xB89000
	0x0356BC34 LDR X0, [X0 + 0x9D8]
	0x0356BC38 BL 0x1C16CF4
	0x0356BC3C ADRP X0, 0xBB1000
	0x0356BC40 LDR X0, [X0 + 0xE18]
	0x0356BC44 BL 0x1C16CF4
	0x0356BC48 ADRP X0, 0xBCA000
	0x0356BC4C LDR X0, [X0 + 0x3E8]
	0x0356BC50 BL 0x1C16CF4
	0x0356BC54 ADRP X0, 0xB8D000
	0x0356BC58 LDR X0, [X0 + 0x348]
	0x0356BC5C BL 0x1C16CF4
	0x0356BC60 ADRP X0, 0xB88000
	0x0356BC64 LDR X0, [X0 + 0x9D0]
	0x0356BC68 BL 0x1C16CF4
	0x0356BC6C ADRP X0, 0xBCA000
	0x0356BC70 LDR X0, [X0 + 0xE38]
	0x0356BC74 BL 0x1C16CF4
	0x0356BC78 MOVZ W8, 0x1
	0x0356BC7C STRB W8, [X22 + 0xE3F]
	0x0356BC80 MOVI V0.2D, 0x0
	0x0356BC84 STR X31, [X31 + 0x30]
	0x0356BC88 STP V0, V0, [X31 + 0x10]
	0x0356BC8C STR V0, [X31]
	0x0356BC90 CBZ X24, 0x356C034
	0x0356BC94 ADRP X8, 0xB88000
	0x0356BC98 LDR X8, [X8 + 0x9D0]
	0x0356BC9C MOV X0, X24
	0x0356BCA0 LDR X25, [X8]
	0x0356BCA4 MOV X1, X25
	0x0356BCA8 BL 0x1C16E00
	0x0356BCAC CBZ X0, 0x356C040
	0x0356BCB0 LDR W8, [X0 + 0x18]
	0x0356BCB4 MOV X22, X0
	0x0356BCB8 CBZ W8, 0x356C038
	0x0356BCBC LDR X0, [X22 + 0x20]
	0x0356BCC0 CBZ X0, 0x356C034
	0x0356BCC4 ADRP X28, 0xB89000
	0x0356BCC8 LDR X28, [X28 + 0x9D8]
	0x0356BCCC LDR X8, [X0]
	0x0356BCD0 LDR X1, [X28]
	0x0356BCD4 LDR X8, [X8 + 0x40]
	0x0356BCD8 LDR X9, [X1 + 0x40]
	0x0356BCDC CMP X8, X9
	0x0356BCE0 B.NE 0x356C03C
	0x0356BCE4 BL 0x1C16E08
	0x0356BCE8 LDRB W9, [X0]
	0x0356BCEC LDR W8, [X22 + 0x18]
	0x0356BCF0 CBZ W9, 0x356BD94
	0x0356BCF4 CBZ W8, 0x356C038
	0x0356BCF8 LDR X0, [X22 + 0x20]
	0x0356BCFC CBZ X0, 0x356C034
	0x0356BD00 LDR X8, [X0]
	0x0356BD04 LDR X1, [X28]
	0x0356BD08 LDR X8, [X8 + 0x40]
	0x0356BD0C LDR X9, [X1 + 0x40]
	0x0356BD10 CMP X8, X9
	0x0356BD14 B.NE 0x356C03C
	0x0356BD18 BL 0x1C16E08
	0x0356BD1C LDR W8, [X22 + 0x18]
	0x0356BD20 CMP W8, 0x1
	0x0356BD24 B.LS 0x356C038
	0x0356BD28 MOV X8, X0
	0x0356BD2C LDR X0, [X22 + 0x28]
	0x0356BD30 CBZ X0, 0x356C034
	0x0356BD34 LDR X9, [X0]
	0x0356BD38 LDR X1, [X28]
	0x0356BD3C LDR X9, [X9 + 0x40]
	0x0356BD40 LDR X10, [X1 + 0x40]
	0x0356BD44 CMP X9, X10
	0x0356BD48 B.NE 0x356C03C
	0x0356BD4C LDRB W23, [X8]
	0x0356BD50 BL 0x1C16E08
	0x0356BD54 LDR W8, [X22 + 0x18]
	0x0356BD58 CMP W8, 0x2
	0x0356BD5C B.LS 0x356C038
	0x0356BD60 LDR X26, [X22 + 0x30]
	0x0356BD64 LDRB W24, [X0]
	0x0356BD68 CBZ X26, 0x356BDF8
	0x0356BD6C ADRP X8, 0xB88000
	0x0356BD70 LDR X8, [X8 + 0x618]
	0x0356BD74 MOV X0, X26
	0x0356BD78 LDR X27, [X8]
	0x0356BD7C MOV X1, X27
	0x0356BD80 BL 0x1C16E00
	0x0356BD84 CBZ X0, 0x356C04C
	0x0356BD88 LDR W8, [X22 + 0x18]
	0x0356BD8C MOV X25, X0
	0x0356BD90 B 0x356BDFC
	0x0356BD94 CMP W8, 0x1
	0x0356BD98 B.LS 0x356C038
	0x0356BD9C LDR X0, [X22 + 0x28]
	0x0356BDA0 CBZ X0, 0x356C034
	0x0356BDA4 LDR X8, [X0]
	0x0356BDA8 LDR X1, [X28]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0xE75000
	011 Move X23, 0xBCA000
	012 Move W8, [X24+3640]
	013 Move X23, [X23+3000]
	014 Move W22, W3
	015 Move W21, W2
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {45}
	022 Move X0, 0xB91000
	023 Move X0, [X0+3248]
	024 Call 0x1C17CF4
	025 Move X0, 0xBCA000
	026 Move X0, [X0+3032]
	027 Call 0x1C17CF4
	028 Move X0, 0xBCB000
	029 Move X0, [X0+3584]
	030 Call 0x1C17CF4
	031 Move X0, 0xBCA000
	032 Move X0, [X0+3000]
	033 Call 0x1C17CF4
	034 Move X0, 0xBCB000
	035 Move X0, [X0+3592]
	036 Call 0x1C17CF4
	037 Move X0, 0xBCB000
	038 Move X0, [X0+3600]
	039 Call 0x1C17CF4
	040 Move X0, 0xBCB000
	041 Move X0, [X0+3608]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X24+3640], W8
	045 Move X0, [X23]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X19
	051 Move W1, W21
	052 Move X2, X31
	053 And W24, W22, 1
	054 Call LoadBalancingClient..ctor, X0, X1
	055 Compare X20, 0
	056 JumpIfNotEqual {65}
	057 Move X8, 0xBCB000
	058 Move X8, [X8+3584]
	059 Move X0, [X8]
	060 Call 0x1C17F10
	061 Move X1, X31
	062 Move X20, X0
	063 Call Object..ctor, X0
	064 Move [X20+16], X19
	065 Move X0, [X23]
	066 Move X21, 0xB91000
	067 Move X26, 0xBCA000
	068 Move X25, 0xBCB000
	069 Move X22, 0xBCB000
	070 Move W8, [X0+224]
	071 Move X21, [X21+3248]
	072 Move X26, [X26+3032]
	073 Move X25, [X25+3592]
	074 Move X22, [X22+3608]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move W8, 1
	079 Move [X19+40], W8
	080 Move [X19+408], W24
	081 Move X0, [X21]
	082 Call 0x1C17F10
	083 Move X8, [X19]
	084 Move X1, X19
	085 Move X3, X31
	086 Move X21, X0
	087 Move X2, [X8+816]
	088 Call Action`1<Object>..ctor, X0, X1, X2
	089 Move X0, X19
	090 Move X1, X21
	091 Move X2, X31
	092 Call LoadBalancingClient.add_EventReceived, X0, X1
	093 Move X0, [X26]
	094 Call 0x1C17F10
	095 Move X2, [X25]
	096 Move X1, X19
	097 Move X3, X31
	098 Move X21, X0
	099 Call Action`2<Int32Enum, Int32Enum>..ctor, X0, X1, X2
	100 Move X0, X19
	101 Move X1, X21
	102 Move X2, X31
	103 Call LoadBalancingClient.add_StateChanged, X0, X1
	104 Move X0, [X22]
	105 Call 0x1C17F10
	106 Move X1, X19
	107 Move X2, X20
	108 Move X3, X31
	109 Move X4, X31
	110 Move X21, X0
	111 Call VoiceClient..ctor, X0, X1, X2, X3
	112 Move X8, [X19+16]
	113 Move [X19+392], X21
	114 Compare X8, 0
	115 JumpIfEqual {150}
	116 Move W9, [X8+106]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X0, [X23]
	119 Move W9, [X0+224]
	120 Compare W9, 0
	121 JumpIfNotEqual {126}
	122 Call 0x1C17DFC
	123 Move X8, [X19+16]
	124 Compare X8, 0
	125 JumpIfEqual {150}
	126 Move W9, 4
	127 Move [X8+106], W9
	128 Move X21, [X19+392]
	129 Move X8, 0xBCB000
	130 Move X8, [X8+3600]
	131 Move X0, [X8]
	132 Call 0x1C17F10
	133 Move X1, X31
	134 Move X22, X0
	135 Call Object..ctor, X0
	136 Move [X22+16], X21
	137 Move [X22+24], X20
	138 Move [X19+400], X22
	139 Move [X19+416], X20
	140 Move X20, [X31+64]
	141 Move X19, [X31+72]
	142 Move X22, [X31+48]
	143 Move X21, [X31+56]
	144 Move X24, [X31+32]
	145 Move X23, [X31+40]
	146 Move X26, [X31+16]
	147 Move X25, [X31+24]
	148 Move X30, [X31+80]
	149 Return 
	150 Call 0x1C17F20

Method: System.Void Service()

Disassembly:
	0x0356BE00 B.GE 0x356BE0C
	0x0356BE04 MOV W26, W31
	0x0356BE08 B 0x356BE48
	0x0356BE0C LDR X0, [X22 + 0x38]
	0x0356BE10 CBZ X0, 0x356C034
	0x0356BE14 ADRP X8, 0xBCA000
	0x0356BE18 LDR X8, [X8 + 0x3E8]
	0x0356BE1C LDR X9, [X0]
	0x0356BE20 LDR X1, [X8]
	0x0356BE24 LDR X8, [X9 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call LoadBalancingClient.Service, X0
	006 Move X0, [X19+392]
	007 Compare X0, 0
	008 JumpIfEqual {14}
	009 Move X1, X31
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Call VoiceClient.Service, X0
	013 Return 
	014 Call 0x1C17F20

Method: System.Boolean ChangeAudioGroups(System.Byte[] groupsToRemove, System.Byte[] groupsToAdd)

Disassembly:
	0x0356BE28 LDR X9, [X1 + 0x40]
	0x0356BE2C CMP X8, X9
	0x0356BE30 B.NE 0x356C03C
	0x0356BE34 BL 0x1C16E08
	0x0356BE38 LDR W8, [X22 + 0x18]
	0x0356BE3C LDRB W26, [X0]
	0x0356BE40 CMP W8, 0x5
	0x0356BE44 B.GE 0x356BE50
	0x0356BE48 MOV W22, W24

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X4, [X8+776]
	007 Move X3, [X8+784]
	008 Move X30, [X31+16]
	009 CallNoReturn X4
	010 Call 0x1C17F20

Method: Photon.Realtime.RaiseEventOptions buildEvOptFromTargets(System.Boolean targetMe, System.Int32[] targetPlayers)

Disassembly:
	0x0356BE4C B 0x356BE78
	0x0356BE50 LDR X0, [X22 + 0x40]
	0x0356BE54 CBZ X0, 0x356C034
	0x0356BE58 LDR X8, [X0]
	0x0356BE5C LDR X1, [X28]
	0x0356BE60 LDR X8, [X8 + 0x40]
	0x0356BE64 LDR X9, [X1 + 0x40]
	0x0356BE68 CMP X8, X9
	0x0356BE6C B.NE 0x356C03C
	0x0356BE70 BL 0x1C16E08
	0x0356BE74 LDRB W22, [X0]
	0x0356BE78 ADRP X8, 0xBB1000
	0x0356BE7C LDR X8, [X8 + 0xE18]
	0x0356BE80 LDR X0, [X8]
	0x0356BE84 LDR W8, [X0 + 0xE0]
	0x0356BE88 CBNZ W8, 0x356BE90
	0x0356BE8C BL 0x1C16DFC
	0x0356BE90 ADD X0, X31, 0x0
	0x0356BE94 MOV X1, X25
	0x0356BE98 MOV W2, W26
	0x0356BE9C MOV W3, W22
	0x0356BEA0 MOV X4, X31
	0x0356BEA4 BL 0x3555C38
	0x0356BEA8 LDR X0, [X20 + 0x10]
	0x0356BEAC CBZ X0, 0x356C034
	0x0356BEB0 AND W5, W21, 0x1
	0x0356BEB4 ADD X4, X31, 0x0
	0x0356BEB8 MOV W1, W19
	0x0356BEBC MOV W2, W23
	0x0356BEC0 MOV W3, W24
	0x0356BEC4 MOV X6, X31
	0x0356BEC8 BL 0x35652A0
	0x0356BECC ADD X0, X31, 0x0
	0x0356BED0 MOV X1, X31
	0x0356BED4 BL 0x3555CB0
	0x0356BED8 LDP X20, X19, [X31 + 0x90]
	0x0356BEDC LDP X22, X21, [X31 + 0x80]
	0x0356BEE0 LDP X24, X23, [X31 + 0x70]
	0x0356BEE4 LDP X26, X25, [X31 + 0x60]
	0x0356BEE8 LDP X28, X27, [X31 + 0x50]
	0x0356BEEC LDR X30, [X31 + 0x40]
	0x0356BEF0 ADD X31, X31, 0xA0
	0x0356BEF4 RET
	0x0356BEF8 LDR W8, [X22 + 0x18]
	0x0356BEFC CMP W8, 0x2
	0x0356BF00 B.LS 0x356C038
	0x0356BF04 LDR X3, [X22 + 0x30]
	0x0356BF08 MOV X0, X20
	0x0356BF0C MOV W2, W19
	0x0356BF10 BL 0x356CA14
	0x0356BF14 B 0x356BED8
	0x0356BF18 LDR W8, [X22 + 0x18]
	0x0356BF1C CMP W8, 0x1
	0x0356BF20 B.LS 0x356C038
	0x0356BF24 ADRP X8, 0xBCA000
	0x0356BF28 LDR X19, [X20 + 0x18]
	0x0356BF2C LDR X0, [X22 + 0x28]
	0x0356BF30 LDR X8, [X8 + 0xE38]
	0x0356BF34 LDR X20, [X8]
	0x0356BF38 CBZ X0, 0x356BF50
	0x0356BF3C LDR X8, [X0]
	0x0356BF40 LDP X9, X1, [X8 + 0x168]
	0x0356BF44 BLR X9
	0x0356BF48 MOV X1, X0
	0x0356BF4C B 0x356BF54
	0x0356BF50 MOV X1, X31
	0x0356BF54 MOV X0, X20
	0x0356BF58 MOV X2, X31
	0x0356BF5C BL 0x321B938
	0x0356BF60 ADRP X8, 0xB88000
	0x0356BF64 LDR X8, [X8 + 0x9C8]
	0x0356BF68 MOV X20, X0
	0x0356BF6C LDR X21, [X8]
	0x0356BF70 LDR X8, [X21 + 0x38]
	0x0356BF74 CBNZ X8, 0x356BF84
	0x0356BF78 MOV X0, X21
	0x0356BF7C BL 0x1C5C6E0
	0x0356BF80 LDR X8, [X21 + 0x38]
	0x0356BF84 LDR X0, [X8 + 0x10]
	0x0356BF88 LDRB W8, [X0 + 0x135]
	0x0356BF8C TBNZ X8, 0x0, 0x356BF94
	0x0356BF90 BL 0x1C5C684
	0x0356BF94 LDR W8, [X0 + 0xE0]
	0x0356BF98 CBNZ W8, 0x356BFA0
	0x0356BF9C BL 0x1C16DFC
	0x0356BFA0 LDR X8, [X21 + 0x38]
	0x0356BFA4 LDR X0, [X8 + 0x10]
	0x0356BFA8 LDRB W8, [X0 + 0x135]
	0x0356BFAC TBNZ X8, 0x0, 0x356BFB4
	0x0356BFB0 BL 0x1C5C684
	0x0356BFB4 CBZ X19, 0x356C034
	0x0356BFB8 ADRP X10, 0xB8D000
	0x0356BFBC LDR X9, [X0 + 0xB8]
	0x0356BFC0 LDR X8, [X19]
	0x0356BFC4 LDR X10, [X10 + 0x348]
	0x0356BFC8 LDR X21, [X9]
	0x0356BFCC LDRH W9, [X8 + 0x12E]
	0x0356BFD0 LDR X1, [X10]
	0x0356BFD4 CBZ X9, 0x356BFF8
	0x0356BFD8 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0xE75000
	008 Move X23, 0xBCA000
	009 Move W8, [X19+3641]
	010 Move X23, [X23+4040]
	011 Move X20, X2
	012 Move W22, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xB8A000
	019 Move X0, [X0+3672]
	020 Call 0x1C17CF4
	021 Move X0, 0xBCA000
	022 Move X0, [X0+4040]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X19+3641], W8
	026 Move X0, [X23]
	027 Call 0x1C17F10
	028 Move X1, X31
	029 Move X19, X0
	030 Call RaiseEventOptions..ctor, X0
	031 Move TEMP, X22
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {68}
	035 Compare X20, 0
	036 JumpIfEqual {77}
	037 Move X9, 0xB8A000
	038 Move X8, [X20+24]
	039 Move X9, [X9+3672]
	040 Move X0, [X9]
	041 Compare X8, 0
	042 JumpIfEqual {81}
	043 Add W1, W8, 1
	044 Call 0x1C17D6C
	045 Compare X19, 0
	046 JumpIfEqual {104}
	047 Move [X19+24], X0
	048 Move W2, [X20+24]
	049 Move X1, X0
	050 Move X0, X20
	051 Move X3, X31
	052 Call Array.Copy, X0, X1, X2
	053 Move X8, [X21+264]
	054 Compare X8, 0
	055 JumpIfEqual {104}
	056 Move X9, [X19+24]
	057 Compare X9, 0
	058 JumpIfEqual {104}
	059 Move X10, [X20+24]
	060 Move W11, [X9+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move W8, [X8+24]
	063 Move X10, X10
	064 ShiftRight X10, 32
	065 And X10, X10, 0x7FFFFFFF
	066 Add X9, X9, X10
	067 Move [X9+32], W8
	068 Compare X19, 0
	069 JumpIfEqual {104}
	070 Move X8, [X19+24]
	071 Compare X8, 0
	072 JumpIfEqual {76}
	073 Move X8, [X8+24]
	074 Compare X8, 0
	075 JumpIfEqual {105}
	076 Move [X19+24], X20
	077 Compare X19, 0
	078 JumpIfEqual {104}
	079 Move W8, 1
	080 Move [X19+32], W8
	081 Move W1, 1
	082 Call 0x1C17D6C
	083 Move X8, [X21+264]
	084 Compare X8, 0
	085 JumpIfEqual {104}
	086 Compare X0, 0
	087 JumpIfEqual {104}
	088 Move W9, [X0+24]
	089 Compare W9, 0
	090 JumpIfEqual {123}
	091 Move W8, [X8+24]
	092 Move [X0+32], W8
	093 Compare X19, 0
	094 JumpIfEqual {104}
	095 Move [X19+24], X0
	096 Move X0, X19
	097 Move X20, [X31+32]
	098 Move X19, [X31+40]
	099 Move X22, [X31+16]
	100 Move X21, [X31+24]
	101 Move X30, [X31+48]
	102 Move X23, [X31+56]
	103 Return X0
	104 Call 0x1C17F20
	105 Move X0, 0xB91000
	106 Move X0, [X0+1400]
	107 Call 0x1C17D08
	108 Call 0x1C17F10
	109 Move X19, X0
	110 Move X0, 0xBCB000
	111 Move X0, [X0+3616]
	112 Call 0x1C17D08
	113 Move X1, X0
	114 Move X0, X19
	115 Move X2, X31
	116 Call ArgumentException..ctor, X0, X1
	117 Move X0, 0xBCB000
	118 Move X0, [X0+3624]
	119 Call 0x1C17D08
	120 Move X1, X0
	121 Move X0, X19
	122 Call 0x1C17DEC
	123 Call 0x1C17F28

Method: System.Void SendVoiceInfo(Photon.Voice.LocalVoice voice, System.Int32 channelId, System.Boolean targetMe, System.Int32[] targetPlayers)

Disassembly:
	0x0356BFDC ADD X10, X10, 0x8
	0x0356BFE0 LDUR X11, [X10 - 0x8]
	0x0356BFE4 CMP X11, X1
	0x0356BFE8 B.EQ 0x356C008
	0x0356BFEC SUBS X9, X9, 0x1
	0x0356BFF0 ADD X10, X10, 0x10
	0x0356BFF4 B.NE 0x356BFE0
	0x0356BFF8 MOVZ W2, 0x1
	0x0356BFFC MOV X0, X19
	0x0356C000 BL 0x1C5C788
	0x0356C004 B 0x356C018
	0x0356C008 LDR W9, [X10]
	0x0356C00C ADD W9, W9, 0x1
	0x0356C010 ADD X8, X8, W9, 0x4, SXTW
	0x0356C014 ADD X0, X8, 0x138
	0x0356C018 LDP X8, X4, [X0]
	0x0356C01C MOVZ W1, 0x1
	0x0356C020 MOV X0, X19
	0x0356C024 MOV X2, X20
	0x0356C028 MOV X3, X21
	0x0356C02C BLR X8
	0x0356C030 B 0x356BED8
	0x0356C034 BL 0x1C16F20
	0x0356C038 BL 0x1C16F28
	0x0356C03C BL 0x1C171E0
	0x0356C040 MOV X0, X24
	0x0356C044 MOV X1, X25
	0x0356C048 BL 0x1C171E0
	0x0356C04C MOV X0, X26
	0x0356C050 MOV X1, X27

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X0+400]
	008 Compare X8, 0
	009 JumpIfEqual {38}
	010 Move X20, X4
	011 Move W21, W3
	012 Move W22, W2
	013 Move X19, X0
	014 Call PhotonTransportProtocol.buildVoicesInfo, X0, X1
	015 Move X23, X0
	016 And W8, W22, 255
	017 Move W22, 1
	018 And W1, W21, 1
	019 Move X0, X19
	020 Move X2, X20
	021 NotImplemented "Instruction BFM not yet implemented."
	022 Call LoadBalancingTransport.buildEvOptFromTargets, X0, X1, X2
	023 Move X8, [X19]
	024 Move X3, X0
	025 Move X0, X19
	026 Move X4, X22
	027 Move X6, [X8+472]
	028 Move X5, [X8+480]
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move W1, 202
	034 Move X2, X23
	035 Move X30, [X31+48]
	036 Move X23, [X31+56]
	037 CallNoReturn X6
	038 Call 0x1C17F20

Method: System.Void SendVoiceRemove(Photon.Voice.LocalVoice voice, System.Int32 channelId, System.Boolean targetMe, System.Int32[] targetPlayers)

Disassembly:
	0x0356C42C BL 0x1C16F20
	0x0356C430 SUB X31, X31, 0xB0
	0x0356C434 STP X29, X30, [X31 + 0x50]
	0x0356C438 STP X28, X27, [X31 + 0x60]
	0x0356C43C STP X26, X25, [X31 + 0x70]
	0x0356C440 STP X24, X23, [X31 + 0x80]
	0x0356C444 STP X22, X21, [X31 + 0x90]
	0x0356C448 STP X20, X19, [X31 + 0xA0]
	0x0356C44C ADRP X23, 0xE73000
	0x0356C450 LDRB W8, [X23 + 0xE3B]
	0x0356C454 MOV W20, W4
	0x0356C458 MOV W19, W3
	0x0356C45C MOV X22, X1
	0x0356C460 MOV X21, X0
	0x0356C464 TBNZ X8, 0x0, 0x356C4B8
	0x0356C468 ADRP X0, 0xB87000
	0x0356C46C LDR X0, [X0 + 0x9C8]
	0x0356C470 BL 0x1C16CF4
	0x0356C474 ADRP X0, 0xB8F000
	0x0356C478 LDR X0, [X0 + 0xC98]
	0x0356C47C BL 0x1C16CF4
	0x0356C480 ADRP X0, 0xB87000
	0x0356C484 LDR X0, [X0 + 0x618]
	0x0356C488 BL 0x1C16CF4
	0x0356C48C ADRP X0, 0xBB0000
	0x0356C490 LDR X0, [X0 + 0xE18]
	0x0356C494 BL 0x1C16CF4
	0x0356C498 ADRP X0, 0xB8C000
	0x0356C49C LDR X0, [X0 + 0x348]
	0x0356C4A0 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X0+400]
	008 Compare X8, 0
	009 JumpIfEqual {38}
	010 Move X20, X4
	011 Move W21, W3
	012 Move W22, W2
	013 Move X19, X0
	014 Call PhotonTransportProtocol.buildVoiceRemoveMessage, X0, X1
	015 Move X23, X0
	016 And W8, W22, 255
	017 Move W22, 1
	018 And W1, W21, 1
	019 Move X0, X19
	020 Move X2, X20
	021 NotImplemented "Instruction BFM not yet implemented."
	022 Call LoadBalancingTransport.buildEvOptFromTargets, X0, X1, X2
	023 Move X8, [X19]
	024 Move X3, X0
	025 Move X0, X19
	026 Move X4, X22
	027 Move X6, [X8+472]
	028 Move X5, [X8+480]
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move W1, 202
	034 Move X2, X23
	035 Move X30, [X31+48]
	036 Move X23, [X31+56]
	037 CallNoReturn X6
	038 Call 0x1C17F20

Method: System.Byte get_FrameCode()

Disassembly:
	0x0356C618 ADRP X8, 0xB87000
	0x0356C61C LDR X8, [X8 + 0x9C8]

ISIL:
	001 Move W0, 202
	002 Return X0

Method: System.Object buildFrameMessage(System.Byte voiceId, System.Byte evNumber, System.Byte frNumber, System.ArraySegment`1<System.Byte> data, Photon.Voice.FrameFlags flags)

Disassembly:
	0x0356C620 MOV X20, X0
	0x0356C624 LDR X21, [X8]
	0x0356C628 LDR X8, [X21 + 0x38]
	0x0356C62C CBNZ X8, 0x356C63C
	0x0356C630 MOV X0, X21
	0x0356C634 BL 0x1C5C6E0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+400]
	003 Compare X8, 0
	004 JumpIfEqual {6}
	005 Move X30, [X31+16]
	006 Call 0x1C17F20

Method: System.Void SendFrame(System.ArraySegment`1<System.Byte> data, Photon.Voice.FrameFlags flags, System.Byte evNumber, System.Byte frNumber, System.Byte voiceId, System.Int32 channelId, Photon.Voice.SendFrameParams par)

Disassembly:
	0x0356C944 LDRB W24, [X0]
	0x0356C948 MOVZ W1, 0xB
	0x0356C94C MOV X0, X23
	0x0356C950 BL 0x29D3494
	0x0356C954 CBZ X0, 0x356C9F8
	0x0356C958 LDR X8, [X0]
	0x0356C95C LDR X1, [X29]
	0x0356C960 LDR X8, [X8 + 0x40]
	0x0356C964 LDR X9, [X1 + 0x40]
	0x0356C968 CMP X8, X9
	0x0356C96C B.NE 0x356CA00
	0x0356C970 BL 0x1C16E08
	0x0356C974 LDRB W25, [X0]
	0x0356C978 ADD X8, X31, 0x60
	0x0356C97C MOV X1, X23
	0x0356C980 BL 0x356CAA4
	0x0356C984 LDR X0, [X21 + 0x10]
	0x0356C988 LDP V0, V1, [X31 + 0x60]
	0x0356C98C LDR V2, [X31 + 0x8]
	0x0356C990 STP V0, V1, [X31 + 0x30]
	0x0356C994 STR V2, [X31 + 0x5]
	0x0356C998 CBZ X0, 0x356C9F8
	0x0356C99C LDP V0, V1, [X31 + 0x30]
	0x0356C9A0 LDR V2, [X31 + 0x5]
	0x0356C9A4 ADD X5, X31, 0x0
	0x0356C9A8 MOV W1, W20
	0x0356C9AC MOV W2, W19
	0x0356C9B0 MOV W3, W24
	0x0356C9B4 MOV W4, W25
	0x0356C9B8 MOV X6, X31
	0x0356C9BC STP V0, V1, [X31]
	0x0356C9C0 STR V2, [X31 + 0x2]
	0x0356C9C4 BL 0x3564440
	0x0356C9C8 LDR W8, [X22 + 0x18]
	0x0356C9CC ADD W26, W26, 0x1
	0x0356C9D0 CMP W26, W8
	0x0356C9D4 B.LT 0x356C8D0
	0x0356C9D8 LDP X20, X19, [X31 + 0xE0]
	0x0356C9DC LDP X22, X21, [X31 + 0xD0]
	0x0356C9E0 LDP X24, X23, [X31 + 0xC0]
	0x0356C9E4 LDP X26, X25, [X31 + 0xB0]
	0x0356C9E8 LDP X28, X27, [X31 + 0xA0]
	0x0356C9EC LDP X29, X30, [X31 + 0x90]
	0x0356C9F0 ADD X31, X31, 0xF0
	0x0356C9F4 RET
	0x0356C9F8 BL 0x1C16F20
	0x0356C9FC MOV X0, X23
	0x0356CA00 BL 0x1C171E0
	0x0356CA04 BL 0x1C16F28
	0x0356CA08 MOV X0, X23
	0x0356CA0C MOV X1, X24
	0x0356CA10 BL 0x1C171E0
	0x0356CA14 STR X30, [X31 - 0x30]!
	0x0356CA18 STP X22, X21, [X31 + 0x10]
	0x0356CA1C STP X20, X19, [X31 + 0x20]
	0x0356CA20 ADRP X22, 0xE73000
	0x0356CA24 LDRB W8, [X22 + 0xE41]
	0x0356CA28 MOV X21, X3
	0x0356CA2C MOV W19, W2
	0x0356CA30 MOV X20, X0
	0x0356CA34 TBNZ X8, 0x0, 0x356CA4C
	0x0356CA38 ADRP X0, 0xB87000
	0x0356CA3C LDR X0, [X0 + 0x618]
	0x0356CA40 BL 0x1C16CF4
	0x0356CA44 MOVZ W8, 0x1
	0x0356CA48 STRB W8, [X22 + 0xE41]
	0x0356CA4C CBZ X21, 0x356CA7C
	0x0356CA50 ADRP X8, 0xB87000
	0x0356CA54 LDR X8, [X8 + 0x618]
	0x0356CA58 MOV X0, X21
	0x0356CA5C LDR X22, [X8]
	0x0356CA60 MOV X1, X22
	0x0356CA64 BL 0x1C16E00
	0x0356CA68 MOV X2, X0
	0x0356CA6C CBNZ X0, 0x356CA80
	0x0356CA70 MOV X0, X21
	0x0356CA74 MOV X1, X22
	0x0356CA78 BL 0x1C171E0
	0x0356CA7C MOV X2, X31
	0x0356CA80 LDR X0, [X20 + 0x10]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X9, [X0]
	011 Move W20, W7
	012 Move X23, [X31+80]
	013 Move W22, W3
	014 Move X10, [X9+792]
	015 Move X7, [X9+800]
	016 Move X8, X2
	017 Move X9, X1
	018 Move W1, W6
	019 Move W2, W4
	020 Move W3, W5
	021 Move X4, X9
	022 Move X5, X8
	023 Move W6, W22
	024 Move X19, X0
	025 NotImplemented "Instruction BLR not yet implemented."
	026 And W9, W22, 1
	027 Add X8, X31, 8
	028 Move X21, X0
	029 NotImplemented "Instruction CSEL not yet implemented."
	030 Move [X31+8], W31
	031 Compare W9, 0
	032 JumpIfNotEqual {40}
	033 Move W8, [X23+17]
	034 Move W9, [X19+408]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Compare W9, 0
	037 JumpIfEqual {41}
	038 NotImplemented "Instruction CSET not yet implemented."
	039 Add X8, X31, 8
	040 Move W9, 1
	041 Move W8, 2
	042 NotImplemented "Instruction CINC not yet implemented."
	043 Move X8, X10
	044 Move [X8], W9
	045 Move W1, [X23]
	046 Move X2, [X23+8]
	047 Move W24, [X23+18]
	048 Move W25, [X31+8]
	049 Move X0, X19
	050 Call LoadBalancingTransport.buildEvOptFromTargets, X0, X1, X2
	051 Compare X0, 0
	052 JumpIfEqual {97}
	053 Move W8, [X23+16]
	054 And W9, W20, 255
	055 Move X22, X0
	056 Move [X0+17], W8
	057 Move X8, [X19]
	058 Move X0, X19
	059 Move X10, [X8+776]
	060 Move X1, [X8+784]
	061 Move X8, X9
	062 ShiftRight X8, 24
	063 And X8, X8, 0x7FFFFF
	064 NotImplemented "Instruction BFM not yet implemented."
	065 Or X20, X8, X25
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X8, [X19]
	068 Move W1, W0
	069 Move X0, X19
	070 Move X2, X21
	071 Move X9, [X8+472]
	072 Move X5, [X8+480]
	073 Move X3, X22
	074 Move X4, X20
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X0, [X19+16]
	077 Compare X0, 0
	078 JumpIfEqual {97}
	079 Move X8, [X0]
	080 Move X9, [X8+504]
	081 Move X1, [X8+512]
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {76}
	087 Move X20, [X31+64]
	088 Move X19, [X31+72]
	089 Move X22, [X31+48]
	090 Move X21, [X31+56]
	091 Move X24, [X31+32]
	092 Move X23, [X31+40]
	093 Move X30, [X31+16]
	094 Move X25, [X31+24]
	095 Add X31, X31, 80
	096 Return 
	097 Call 0x1C17F20

Method: System.String ChannelIdStr(System.Int32 channelId)

Disassembly:
	0x0356CA84 CBZ X0, 0x356CAA0
	0x0356CA88 MOV W1, W19

ISIL:
	001 Move X0, X31
	002 Return X0

Method: System.String PlayerIdStr(System.Int32 playerId)

Disassembly:
	0x0356CA8C LDP X20, X19, [X31 + 0x20]
	0x0356CA90 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move X0, X31
	002 Return X0

Method: System.Void onEventActionVoiceClient(ExitGames.Client.Photon.EventData ev)

Disassembly:
	0x0356CA94 MOV X3, X31
	0x0356CA98 LDR X30, [X31], #0x30
	0x0356CA9C B 0x3564CAC
	0x0356CAA0 BL 0x1C16F20
	0x0356CAA4 SUB X31, X31, 0x70
	0x0356CAA8 STP X29, X30, [X31 + 0x10]
	0x0356CAAC STP X28, X27, [X31 + 0x20]
	0x0356CAB0 STP X26, X25, [X31 + 0x30]
	0x0356CAB4 STP X24, X23, [X31 + 0x40]
	0x0356CAB8 STP X22, X21, [X31 + 0x50]
	0x0356CABC STP X20, X19, [X31 + 0x60]
	0x0356CAC0 ADRP X21, 0xE73000
	0x0356CAC4 LDRB W9, [X21 + 0xE42]
	0x0356CAC8 MOV X20, X1
	0x0356CACC MOV X19, X8
	0x0356CAD0 TBNZ X9, 0x0, 0x356CB0C
	0x0356CAD4 ADRP X0, 0xBB0000
	0x0356CAD8 LDR X0, [X0 + 0x428]
	0x0356CADC BL 0x1C16CF4
	0x0356CAE0 ADRP X0, 0xBC9000
	0x0356CAE4 LDR X0, [X0 + 0xE48]
	0x0356CAE8 BL 0x1C16CF4
	0x0356CAEC ADRP X0, 0xB90000
	0x0356CAF0 LDR X0, [X0 + 0x390]
	0x0356CAF4 BL 0x1C16CF4
	0x0356CAF8 ADRP X0, 0xB87000
	0x0356CAFC LDR X0, [X0 + 0x758]
	0x0356CB00 BL 0x1C16CF4
	0x0356CB04 MOVZ W8, 0x1
	0x0356CB08 STRB W8, [X21 + 0xE42]
	0x0356CB0C CBZ X20, 0x356CDD8
	0x0356CB10 ADRP X22, 0xB90000
	0x0356CB14 LDR X22, [X22 + 0x390]
	0x0356CB18 MOVZ W1, 0xC
	0x0356CB1C MOV X0, X20
	0x0356CB20 LDR X2, [X22]
	0x0356CB24 BL 0x29D3494
	0x0356CB28 CBZ X0, 0x356CDD8
	0x0356CB2C ADRP X8, 0xBB0000
	0x0356CB30 LDR X8, [X8 + 0x428]
	0x0356CB34 LDR X9, [X0]
	0x0356CB38 LDR X1, [X8]
	0x0356CB3C LDR X8, [X9 + 0x40]
	0x0356CB40 LDR X9, [X1 + 0x40]
	0x0356CB44 CMP X8, X9
	0x0356CB48 B.NE 0x356CDDC
	0x0356CB4C BL 0x1C16E08
	0x0356CB50 LDR X2, [X22]
	0x0356CB54 LDR W23, [X0]
	0x0356CB58 MOVZ W1, 0x2
	0x0356CB5C MOV X0, X20
	0x0356CB60 BL 0x29D3494
	0x0356CB64 CBZ X0, 0x356CDD8
	0x0356CB68 ADRP X24, 0xB87000
	0x0356CB6C LDR X24, [X24 + 0x758]
	0x0356CB70 LDR X8, [X0]
	0x0356CB74 LDR X1, [X24]
	0x0356CB78 LDR X8, [X8 + 0x40]
	0x0356CB7C LDR X9, [X1 + 0x40]
	0x0356CB80 CMP X8, X9
	0x0356CB84 B.NE 0x356CDDC
	0x0356CB88 BL 0x1C16E08
	0x0356CB8C LDR X2, [X22]
	0x0356CB90 LDR W25, [X0]
	0x0356CB94 MOVZ W1, 0x3
	0x0356CB98 MOV X0, X20
	0x0356CB9C BL 0x29D3494
	0x0356CBA0 CBZ X0, 0x356CDD8
	0x0356CBA4 LDR X8, [X0]
	0x0356CBA8 LDR X1, [X24]
	0x0356CBAC LDR X8, [X8 + 0x40]
	0x0356CBB0 LDR X9, [X1 + 0x40]
	0x0356CBB4 CMP X8, X9
	0x0356CBB8 B.NE 0x356CDDC
	0x0356CBBC BL 0x1C16E08
	0x0356CBC0 LDR X2, [X22]
	0x0356CBC4 LDR W26, [X0]
	0x0356CBC8 MOVZ W1, 0x4
	0x0356CBCC MOV X0, X20
	0x0356CBD0 BL 0x29D3494
	0x0356CBD4 CBZ X0, 0x356CDD8
	0x0356CBD8 LDR X8, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare X1, 0
	008 JumpIfEqual {104}
	009 Move W8, [X1+16]
	010 Move X20, X1
	011 Move X19, X0
	012 NotImplemented "Instruction CMP not yet implemented."
	013 NotImplemented "Instruction CMP not yet implemented."
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X21, [X19+400]
	016 Move W1, 245
	017 Move X0, X20
	018 Move X2, X31
	019 Call EventData.get_Item, X0, X1
	020 Move X22, X0
	021 Move X0, X20
	022 Move X1, X31
	023 Call EventData.get_Sender, X0
	024 Move W23, W0
	025 Move X0, X20
	026 Move X1, X31
	027 Call EventData.get_Sender, X0
	028 Move X8, [X19+264]
	029 Compare X8, 0
	030 JumpIfEqual {104}
	031 Compare X21, 0
	032 JumpIfEqual {104}
	033 Move W8, [X8+24]
	034 Move X1, X22
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move W2, W31
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X0, X21
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 NotImplemented "Instruction CSET not yet implemented."
	043 Move W3, W23
	044 Move X30, [X31+48]
	045 Move X23, [X31+56]
	046 Move X0, X20
	047 Move X1, X31
	048 Call EventData.get_Sender, X0
	049 Move X8, [X19+264]
	050 Compare X8, 0
	051 JumpIfEqual {104}
	052 Move W8, [X8+24]
	053 Move W1, W0
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Move X23, [X31+56]
	061 Return 
	062 Move X0, X20
	063 Move X1, X31
	064 Call EventData.get_Sender, X0
	065 Move X8, [X19+264]
	066 Compare X8, 0
	067 JumpIfEqual {104}
	068 Move W1, W0
	069 Move X0, [X19+392]
	070 Compare X0, 0
	071 JumpIfEqual {104}
	072 Move W8, [X8+24]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 Move X1, X31
	079 Move X30, [X31+48]
	080 Move X23, [X31+56]
	081 Call VoiceClient.onLeaveAllChannels, X0
	082 Return 
	083 Move X0, [X19+392]
	084 Compare X0, 0
	085 JumpIfEqual {104}
	086 Move X20, [X31+32]
	087 Move X19, [X31+40]
	088 Move X22, [X31+16]
	089 Move X21, [X31+24]
	090 Move X2, X31
	091 Move X30, [X31+48]
	092 Move X23, [X31+56]
	093 Call VoiceClient.onPlayerJoin, X0, X1
	094 Return 
	095 Move X20, [X31+32]
	096 Move X19, [X31+40]
	097 Move X22, [X31+16]
	098 Move X21, [X31+24]
	099 Move X2, X31
	100 Move X30, [X31+48]
	101 Move X23, [X31+56]
	102 Call VoiceClient.onPlayerLeave, X0, X1
	103 Return 
	104 Call 0x1C17F20

Method: System.Void onStateChangeVoiceClient(Photon.Realtime.ClientState fromState, Photon.Realtime.ClientState state)

Disassembly:
	0x0356D058 LDR X0, [X19]
	0x0356D05C MOVZ W1, 0x2
	0x0356D060 BL 0x1C16D6C
	0x0356D064 ADRP X27, 0xB86000
	0x0356D068 LDR X27, [X27 + 0x758]
	0x0356D06C MOV X23, X0
	0x0356D070 MOVZ W8, 0xAC44
	0x0356D074 STR W8, [X31 + 0x4C]
	0x0356D078 LDR X0, [X27]
	0x0356D07C ADD X1, X31, 0x4C
	0x0356D080 BL 0x1C16E04
	0x0356D084 CBZ X23, 0x356DA54
	0x0356D088 MOV X26, X0
	0x0356D08C CBZ X0, 0x356D0A4
	0x0356D090 LDR X8, [X23]
	0x0356D094 LDR X1, [X8 + 0x40]
	0x0356D098 MOV X0, X26
	0x0356D09C BL 0x1C16E00
	0x0356D0A0 CBZ X0, 0x356DAC0
	0x0356D0A4 LDR W8, [X23 + 0x18]
	0x0356D0A8 CBZ W8, 0x356DA58
	0x0356D0AC STR X26, [X23 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, W2
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X19, X0
	007 Move X0, [X19+392]
	008 Compare X0, 0
	009 JumpIfEqual {26}
	010 Move X1, X31
	011 Call VoiceClient.onLeaveAllChannels, X0
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X0, [X19+392]
	014 Compare X0, 0
	015 JumpIfEqual {26}
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X1, X31
	019 Move X30, [X31+32]
	020 Call VoiceClient.onJoinAllChannels, X0
	021 Return 
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return 
	026 Call 0x1C17F20

Method: System.Void Dispose()

Disassembly:
	0x0356D0B0 LDR X0, [X27]
	0x0356D0B4 MOVZ W8, 0x1
	0x0356D0B8 STR W8, [X31 + 0x48]
	0x0356D0BC ADD X1, X31, 0x48
	0x0356D0C0 BL 0x1C16E04
	0x0356D0C4 MOV X26, X0
	0x0356D0C8 CBZ X0, 0x356D0E0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+392]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call VoiceClient.Dispose, X0
	008 Return 
	009 Call 0x1C17F20

