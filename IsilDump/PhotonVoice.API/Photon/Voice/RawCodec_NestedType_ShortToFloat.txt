Type: Photon.Voice.RawCodec/ShortToFloat

Method: System.Void .ctor(System.Action`1<Photon.Voice.FrameOut`1<System.Single>> output)

Disassembly:
	0x035578F8 LDP X20, X19, [X31 + 0x10]
	0x035578FC LDP X30, X21, [X31], #0x20
	0x03557900 B 0x3557E04
	0x03557904 STR X30, [X31 - 0x20]!
	0x03557908 STP X20, X19, [X31 + 0x10]
	0x0355790C ADRP X19, 0xE88000
	0x03557910 LDRB W8, [X19 + 0xDA2]
	0x03557914 MOV X20, X0
	0x03557918 TBNZ X8, 0x0, 0x3557930
	0x0355791C ADRP X0, 0xBDE000
	0x03557920 LDR X0, [X0 + 0x4D0]
	0x03557924 BL 0x1C16CF4
	0x03557928 MOVZ W8, 0x1
	0x0355792C STRB W8, [X19 + 0xDA2]
	0x03557930 LDR X8, [X20 + 0x90]
	0x03557934 CBZ X8, 0x355798C
	0x03557938 LDR X19, [X8 + 0x10]
	0x0355793C CBZ X19, 0x35579C0
	0x03557940 ADRP X10, 0xBDE000
	0x03557944 LDR X8, [X19]
	0x03557948 LDR X10, [X10 + 0x4D0]
	0x0355794C LDR W20, [X20 + 0x84]
	0x03557950 LDRH W9, [X8 + 0x12E]
	0x03557954 LDR X1, [X10]
	0x03557958 CBZ X9, 0x355797C
	0x0355795C LDR X10, [X8 + 0xB0]
	0x03557960 ADD X10, X10, 0x8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE89000
	007 Move X22, 0xB9D000
	008 Move W8, [X21+3473]
	009 Move X22, [X22+1592]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB9D000
	017 Move X0, [X0+1592]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3473], W8
	021 Move X0, [X22]
	022 Move W1, W31
	023 Call 0x1C17D6C
	024 Move [X20+24], X0
	025 Move X0, X20
	026 Move X1, X31
	027 Call Object..ctor, X0
	028 Move [X20+16], X19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Return 

Method: System.Void Output(Photon.Voice.FrameOut`1<System.Int16> shortBuf)

Disassembly:
	0x03557964 LDUR X11, [X10 - 0x8]
	0x03557968 CMP X11, X1
	0x0355796C B.EQ 0x355799C
	0x03557970 SUBS X9, X9, 0x1
	0x03557974 ADD X10, X10, 0x10
	0x03557978 B.NE 0x3557964
	0x0355797C MOV X0, X19
	0x03557980 MOV W2, W31
	0x03557984 BL 0x1C5C788
	0x03557988 B 0x35579A8
	0x0355798C LDP X20, X19, [X31 + 0x10]
	0x03557990 MOV W0, W31
	0x03557994 LDR X30, [X31], #0x20
	0x03557998 RET
	0x0355799C LDRSW X9, [X10]
	0x035579A0 ADD X8, X8, X9, 0x4, LSL
	0x035579A4 ADD X0, X8, 0x138
	0x035579A8 LDP X3, X2, [X0]
	0x035579AC MOV X0, X19
	0x035579B0 MOV W1, W20
	0x035579B4 LDP X20, X19, [X31 + 0x10]
	0x035579B8 LDR X30, [X31], #0x20
	0x035579BC BR X3
	0x035579C0 BL 0x1C16F20
	0x035579C4 SUB X31, X31, 0x60
	0x035579C8 STP X30, X27, [X31 + 0x10]
	0x035579CC STP X26, X25, [X31 + 0x20]
	0x035579D0 STP X24, X23, [X31 + 0x30]
	0x035579D4 STP X22, X21, [X31 + 0x40]
	0x035579D8 STP X20, X19, [X31 + 0x50]
	0x035579DC ADRP X22, 0xE88000
	0x035579E0 LDRB W8, [X22 + 0xDA5]
	0x035579E4 MOV X19, X2
	0x035579E8 MOV W21, W1
	0x035579EC MOV X20, X0
	0x035579F0 TBNZ X8, 0x0, 0x3557A74
	0x035579F4 ADRP X0, 0xBCF000
	0x035579F8 LDR X0, [X0 + 0xCF8]
	0x035579FC BL 0x1C16CF4
	0x03557A00 ADRP X0, 0xBC4000
	0x03557A04 LDR X0, [X0 + 0x5B0]
	0x03557A08 BL 0x1C16CF4
	0x03557A0C ADRP X0, 0xB9C000
	0x03557A10 LDR X0, [X0 + 0x9C8]
	0x03557A14 BL 0x1C16CF4
	0x03557A18 ADRP X0, 0xBA1000
	0x03557A1C LDR X0, [X0 + 0x348]
	0x03557A20 BL 0x1C16CF4
	0x03557A24 ADRP X0, 0xBDE000
	0x03557A28 LDR X0, [X0 + 0x4D0]
	0x03557A2C BL 0x1C16CF4
	0x03557A30 ADRP X0, 0xB9C000
	0x03557A34 LDR X0, [X0 + 0xAC8]
	0x03557A38 BL 0x1C16CF4
	0x03557A3C ADRP X0, 0xBA0000
	0x03557A40 LDR X0, [X0 + 0x928]
	0x03557A44 BL 0x1C16CF4
	0x03557A48 ADRP X0, 0xBDE000
	0x03557A4C LDR X0, [X0 + 0x4D8]
	0x03557A50 BL 0x1C16CF4
	0x03557A54 ADRP X0, 0xBDE000
	0x03557A58 LDR X0, [X0 + 0x4E0]
	0x03557A5C BL 0x1C16CF4
	0x03557A60 ADRP X0, 0xBDE000
	0x03557A64 LDR X0, [X0 + 0x4E8]
	0x03557A68 BL 0x1C16CF4
	0x03557A6C MOVZ W8, 0x1
	0x03557A70 STRB W8, [X22 + 0xDA5]
	0x03557A74 CBZ X19, 0x3557A84
	0x03557A78 TBNZ X21, 0x0, 0x3557A84
	0x03557A7C LDR W8, [X19 + 0x18]
	0x03557A80 CBZ W8, 0x3557DE0
	0x03557A84 AND W1, W21, 0x1
	0x03557A88 MOV X2, X19
	0x03557A8C BL 0x355942C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xE89000
	008 Move W8, [X21+3474]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xBDF000
	016 Move X0, [X0+1104]
	017 Call 0x1C17CF4
	018 Move X0, 0xBDF000
	019 Move X0, [X0+1112]
	020 Call 0x1C17CF4
	021 Move X0, 0xBDF000
	022 Move X0, [X0+1120]
	023 Call 0x1C17CF4
	024 Move X0, 0xB9D000
	025 Move X0, [X0+1592]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3474], W8
	029 Move X1, [X19+24]
	030 Compare X1, 0
	031 JumpIfEqual {91}
	032 Compare X20, 0
	033 JumpIfEqual {91}
	034 Move X0, [X20+16]
	035 Compare X0, 0
	036 JumpIfEqual {91}
	037 Move W9, [X1+24]
	038 Move W8, [X0+24]
	039 Move X21, 0xB9D000
	040 Move X21, [X21+1592]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X0, [X21]
	043 Move W1, W8
	044 Call 0x1C17D6C
	045 Move [X19+24], X0
	046 Move X1, X0
	047 Move X0, [X20+16]
	048 Compare X0, 0
	049 JumpIfEqual {91}
	050 Move W2, [X0+24]
	051 Move X23, 0xBDF000
	052 Move X23, [X23+1120]
	053 Call AudioUtil.Convert, X0, X1, X2
	054 Move X0, [X23]
	055 Move X22, [X19+16]
	056 Move X20, [X19+24]
	057 Call 0x1C17F10
	058 Move X19, X0
	059 Compare X20, 0
	060 JumpIfEqual {71}
	061 Move X21, [X21]
	062 Move X0, X20
	063 Move X1, X21
	064 Call 0x1C17E00
	065 Move X1, X0
	066 Compare X0, 0
	067 JumpIfNotEqual {72}
	068 Move X0, X20
	069 Move X1, X21
	070 Call 0x1C181E0
	071 Move X1, X31
	072 Move X8, 0xBDF000
	073 Move X8, [X8+1104]
	074 Move X0, X19
	075 Move W2, W31
	076 Move X3, [X8]
	077 Call FrameOut`1<Single>..ctor, X0, X1, X2
	078 Compare X22, 0
	079 JumpIfEqual {91}
	080 Move X3, [X22+24]
	081 Move X0, [X22+64]
	082 Move X2, [X22+40]
	083 Move X1, X19
	084 Move X20, [X31+32]
	085 Move X19, [X31+40]
	086 Move X22, [X31+16]
	087 Move X21, [X31+24]
	088 Move X30, [X31+48]
	089 Move X23, [X31+56]
	090 CallNoReturn X3
	091 Call 0x1C17F20

