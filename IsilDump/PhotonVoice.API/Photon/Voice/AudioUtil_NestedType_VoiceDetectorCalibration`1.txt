Type: Photon.Voice.AudioUtil/VoiceDetectorCalibration`1

Method: System.Boolean get_IsCalibrating()

Disassembly:
	0x02845F54 STRB W8, [X21 + 0xAB7]
	0x02845F58 ADRP X22, 0x18AF000
	0x02845F5C LDR X21, [X20 + 0x28]!
	0x02845F60 LDR X22, [X22 + 0xE70]

ISIL:
	001 Move W8, [X0+36]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Void .ctor(Photon.Voice.AudioUtil/IVoiceDetector voiceDetector, Photon.Voice.AudioUtil/ILevelMeter levelMeter, System.Int32 samplingRate, System.Int32 channels)

Disassembly:
	0x02845F64 MOV X0, X21
	0x02845F68 MOV X1, X19
	0x02845F6C MOV X2, X31
	0x02845F70 BL 0x33C0DE4
	0x02845F74 MOV X8, X0
	0x02845F78 CBZ X0, 0x2845F8C
	0x02845F7C LDR X1, [X22]
	0x02845F80 LDR X9, [X8]
	0x02845F84 CMP X9, X1
	0x02845F88 B.NE 0x2845FB8
	0x02845F8C MOV X0, X20
	0x02845F90 MOV X1, X8
	0x02845F94 MOV X2, X21
	0x02845F98 BL 0x1C24138
	0x02845F9C CMP X21, X0
	0x02845FA0 MOV X21, X0
	0x02845FA4 B.NE 0x2845F64

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, X1
	008 Move X1, X31
	009 Move W19, W4
	010 Move W20, W3
	011 Move X21, X2
	012 Move X23, X0
	013 Call Object..ctor, X0
	014 Multiply W8, W19, W20
	015 Move [X23+16], X22
	016 Move [X23+24], X21
	017 Move X20, [X31+32]
	018 Move X19, [X31+40]
	019 Move X22, [X31+16]
	020 Move X21, [X31+24]
	021 Move [X23+32], W8
	022 Move X30, [X31+48]
	023 Move X23, [X31+56]
	024 Return 

Method: System.Void Calibrate(System.Int32 durationMs, System.Action`1<System.Single> onCalibrated = null)

Disassembly:
	0x02845FA8 LDP X20, X19, [X31 + 0x20]
	0x02845FAC LDP X22, X21, [X31 + 0x10]
	0x02845FB0 LDR X30, [X31], #0x30
	0x02845FB4 RET
	0x02845FB8 MOV X0, X8
	0x02845FBC BL 0x1C171E0
	0x02845FC0 STR X30, [X31 - 0x30]!
	0x02845FC4 STP X22, X21, [X31 + 0x10]
	0x02845FC8 STP X20, X19, [X31 + 0x20]
	0x02845FCC ADRP X21, 0x1B95000
	0x02845FD0 LDRB W8, [X21 + 0xAB8]
	0x02845FD4 MOV X19, X1
	0x02845FD8 MOV X20, X0
	0x02845FDC TBNZ X8, 0x0, 0x2845FF4
	0x02845FE0 ADRP X0, 0x18AF000
	0x02845FE4 LDR X0, [X0 + 0xE70]
	0x02845FE8 BL 0x1C16CF4
	0x02845FEC MOVZ W8, 0x1
	0x02845FF0 STRB W8, [X21 + 0xAB8]
	0x02845FF4 ADRP X22, 0x18AF000
	0x02845FF8 LDR X21, [X20 + 0x28]!
	0x02845FFC LDR X22, [X22 + 0xE70]
	0x02846000 MOV X0, X21
	0x02846004 MOV X1, X19
	0x02846008 MOV X2, X31
	0x0284600C BL 0x33C0FDC
	0x02846010 MOV X8, X0
	0x02846014 CBZ X0, 0x2846028
	0x02846018 LDR X1, [X22]
	0x0284601C LDR X9, [X8]
	0x02846020 CMP X9, X1
	0x02846024 B.NE 0x2846054
	0x02846028 MOV X0, X20
	0x0284602C MOV X1, X8
	0x02846030 MOV X2, X21
	0x02846034 BL 0x1C24138
	0x02846038 CMP X21, X0
	0x0284603C MOV X21, X0
	0x02846040 B.NE 0x2846000
	0x02846044 LDP X20, X19, [X31 + 0x20]
	0x02846048 LDP X22, X21, [X31 + 0x10]
	0x0284604C LDR X30, [X31], #0x30
	0x02846050 RET
	0x02846054 MOV X0, X8
	0x02846058 BL 0x1C171E0
	0x0284605C STR X30, [X31 - 0x30]!
	0x02846060 STP X22, X21, [X31 + 0x10]
	0x02846064 STP X20, X19, [X31 + 0x20]
	0x02846068 MOV W21, W1
	0x0284606C MOV X1, X31
	0x02846070 MOV X19, X3
	0x02846074 MOV W20, W2
	0x02846078 MOV X22, X0
	0x0284607C BL 0x33BDD8C
	0x02846080 MUL W8, W20, W21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x1B96000
	007 Move W8, [X19+2730]
	008 Move X20, X2
	009 Move W21, W1
	010 Move X22, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x18B3000
	016 Move X0, [X0+3200]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+2730], W8
	020 Move W8, [X22+32]
	021 Move W9, 0x4DD3
	022 NotImplemented "Instruction MOVK not yet implemented."
	023 Move X19, [X22+24]
	024 Multiply W8, W8, W21
	025 NotImplemented "Instruction SMADDL not yet implemented."
	026 Move X9, X8
	027 ShiftRight X9, 32
	028 And X9, X9, 0x7FFFFFFF
	029 Move X8, X8
	030 ShiftRight X8, 63
	031 And X8, X8, 0x7FFFFFFF
	032 Add W8, W8, W9
	033 Move [X22+36], W8
	034 Move [X22+40], X20
	035 Compare X19, 0
	036 JumpIfEqual {66}
	037 Move X10, 0x18B2000
	038 Move X8, [X19]
	039 Move X10, [X10+3200]
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Move X1, [X10]
	042 Compare X9, 0
	043 JumpIfEqual {50}
	044 Move X10, [X8+176]
	045 Add X10, X10, 8
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract X9, X9, 1
	049 Add X10, X10, 16
	050 Move W2, 3
	051 Move X0, X19
	052 Call 0x1C5D788
	053 Move W9, [X10]
	054 Add W9, W9, 3
	055 Add X8, X8, W9
	056 Add X0, X8, 312
	057 Move X2, [X0]
	058 Move X1, [X0+8]
	059 Move X0, X19
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X30, [X31+48]
	065 CallNoReturn X2
	066 Call 0x1C17F20

Method: T[] Process(T[] buf)

Disassembly:
	0x02846084 STR W8, [X22 + 0x38]
	0x02846088 LDR X8, [X19 + 0x20]
	0x0284608C MOVZ W1, 0x1F4
	0x02846090 MOV X0, X22
	0x02846094 LDR X8, [X8 + 0xC0]
	0x02846098 LDR X2, [X8 + 0x10]
	0x0284609C LDR X8, [X2]
	0x028460A0 BLR X8
	0x028460A4 LDR X8, [X19 + 0x20]
	0x028460A8 MOV X0, X22
	0x028460AC LDP X20, X19, [X31 + 0x20]
	0x028460B0 LDP X22, X21, [X31 + 0x10]
	0x028460B4 LDR X8, [X8 + 0xC0]
	0x028460B8 MOVZ W1, 0x1
	0x028460BC LDR X2, [X8 + 0x18]
	0x028460C0 LDR X3, [X2]
	0x028460C4 LDR X30, [X31], #0x30
	0x028460C8 BR X3
	0x028460CC RET
	0x028460D0 LDR X0, [X0 + 0x10]
	0x028460D4 RET
	0x028460D8 STR X1, [X0 + 0x10]
	0x028460DC RET
	0x028460E0 LDR X0, [X0 + 0x18]
	0x028460E4 RET
	0x028460E8 STR X1, [X0 + 0x18]
	0x028460EC RET
	0x028460F0 STP X29, X30, [X31 - 0x60]!
	0x028460F4 STP X28, X27, [X31 + 0x10]
	0x028460F8 STP X26, X25, [X31 + 0x20]
	0x028460FC STP X24, X23, [X31 + 0x30]
	0x02846100 STP X22, X21, [X31 + 0x40]
	0x02846104 STP X20, X19, [X31 + 0x50]
	0x02846108 ADD X29, X31, 0x0
	0x0284610C SUB X31, X31, 0x10
	0x02846110 MRS X28, 0xC000
	0x02846114 LDR X8, [X28 + 0x28]
	0x02846118 ADRP X23, 0x1B94000
	0x0284611C MOV X19, X3
	0x02846120 MOV W20, W2
	0x02846124 STUR X8, [X29 - 0x8]
	0x02846128 LDRB W8, [X23 + 0xAB9]
	0x0284612C MOV W21, W1
	0x02846130 MOV X22, X0
	0x02846134 TBNZ X8, 0x0, 0x2846188
	0x02846138 ADRP X0, 0x18B1000
	0x0284613C LDR X0, [X0 + 0x628]
	0x02846140 BL 0x1C16CF4
	0x02846144 ADRP X0, 0x18D7000
	0x02846148 LDR X0, [X0 + 0xF58]
	0x0284614C BL 0x1C16CF4
	0x02846150 ADRP X0, 0x18D7000
	0x02846154 LDR X0, [X0 + 0xF60]
	0x02846158 BL 0x1C16CF4
	0x0284615C ADRP X0, 0x18AD000
	0x02846160 LDR X0, [X0 + 0xA90]
	0x02846164 BL 0x1C16CF4
	0x02846168 ADRP X0, 0x18D7000
	0x0284616C LDR X0, [X0 + 0xF68]
	0x02846170 BL 0x1C16CF4
	0x02846174 ADRP X0, 0x18D7000
	0x02846178 LDR X0, [X0 + 0xF70]
	0x0284617C BL 0x1C16CF4
	0x02846180 MOVZ W8, 0x1
	0x02846184 STRB W8, [X23 + 0xAB9]
	0x02846188 LDR X8, [X19 + 0x20]
	0x0284618C LDR X8, [X8 + 0xC0]
	0x02846190 LDR X0, [X8 + 0x10]
	0x02846194 LDR W24, [X0 + 0xFC]
	0x02846198 LDRB W9, [X0 + 0x135]
	0x0284619C MOV W8, W24
	0x028461A0 TBNZ X9, 0x0, 0x28461AC
	0x028461A4 BL 0x1C5C684
	0x028461A8 LDR W8, [X0 + 0xFC]
	0x028461AC ADD W8, W8, 0x10
	0x028461B0 ADD X8, X8, 0xF
	0x028461B4 ADD X9, X31, 0x0
	0x028461B8 AND X8, X8, 0x1FFFFFFFF
	0x028461BC SUB X23, X9, X8
	0x028461C0 ADD X31, X23, 0x0
	0x028461C4 ADD X9, X24, 0xF
	0x028461C8 ADD X8, X31, 0x0
	0x028461CC AND X9, X9, 0x1FFFFFFFF
	0x028461D0 SUB X26, X8, X9
	0x028461D4 ADD X31, X26, 0x0
	0x028461D8 MOV X0, X22
	0x028461DC MOV X1, X31
	0x028461E0 BL 0x33BDD8C
	0x028461E4 LDR X8, [X19 + 0x20]
	0x028461E8 LDR X8, [X8 + 0xC0]
	0x028461EC LDR X0, [X8 + 0x8]
	0x028461F0 LDRB W8, [X0 + 0x135]
	0x028461F4 TBNZ X8, 0x0, 0x28461FC
	0x028461F8 BL 0x1C5C684
	0x028461FC MOVZ W1, 0x1
	0x02846200 BL 0x1C16D6C
	0x02846204 CBZ X0, 0x2846468
	0x02846208 LDR W8, [X0 + 0x18]
	0x0284620C MOV X27, X0
	0x02846210 CBZ W8, 0x2846464
	0x02846214 ADD X25, X27, 0x20
	0x02846218 MOV X0, X26
	0x0284621C MOV X1, X25
	0x02846220 MOV X2, X24
	0x02846224 BL 0x3EB1AC0
	0x02846228 LDR X8, [X19 + 0x20]
	0x0284622C MOV X1, X26
	0x02846230 LDR X8, [X8 + 0xC0]
	0x02846234 LDR X0, [X8 + 0x10]
	0x02846238 BL 0x1C16E04
	0x0284623C CBZ X0, 0x2846258
	0x02846240 ADRP X8, 0x18AD000
	0x02846244 LDR X8, [X8 + 0xA90]
	0x02846248 LDR X9, [X0]
	0x0284624C LDR X8, [X8]
	0x02846250 CMP X9, X8
	0x02846254 B.EQ 0x2846308
	0x02846258 LDR W8, [X27 + 0x18]
	0x0284625C CBZ W8, 0x2846464
	0x02846260 MOV X0, X26

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x1B95000
	008 Move W8, [X21+2731]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x18B2000
	016 Move X0, [X0+3200]
	017 Call 0x1C17CF4
	018 Move X0, 0x18D8000
	019 Move X0, [X0+3920]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2731], W8
	023 Move W8, [X20+36]
	024 Compare W8, 0
	025 JumpIfEqual {121}
	026 Compare X19, 0
	027 JumpIfEqual {129}
	028 Move W9, [X19+24]
	029 Subtract W8, W8, W9
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move [X20+36], W8
	032 Move X22, [X20+24]
	033 Move [X20+36], W31
	034 Compare X22, 0
	035 JumpIfEqual {129}
	036 Move X10, 0x18B2000
	037 Move X8, [X22]
	038 Move X21, [X20+16]
	039 Move X10, [X10+3200]
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Move X1, [X10]
	042 Compare X9, 0
	043 JumpIfEqual {50}
	044 Move X10, [X8+176]
	045 Add X10, X10, 8
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract X9, X9, 1
	049 Add X10, X10, 16
	050 Move W2, 2
	051 Move X0, X22
	052 Call 0x1C5D788
	053 Move W9, [X10]
	054 Add W9, W9, 2
	055 Add X8, X8, W9
	056 Add X0, X8, 312
	057 Move X8, [X0]
	058 Move X1, [X0+8]
	059 Move X0, X22
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Compare X21, 0
	062 JumpIfEqual {129}
	063 Move X22, 0x18D8000
	064 Move X8, [X21]
	065 Move X22, [X22+3920]
	066 Add S8, S0, S0
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Move X1, [X22]
	069 Compare X9, 0
	070 JumpIfEqual {77}
	071 Move X10, [X8+176]
	072 Add X10, X10, 8
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Subtract X9, X9, 1
	076 Add X10, X10, 16
	077 Move W2, 3
	078 Move X0, X21
	079 Call 0x1C5D788
	080 Move W9, [X10]
	081 Add W9, W9, 3
	082 Add X8, X8, W9
	083 Add X0, X8, 312
	084 Move X8, [X0]
	085 Move X1, [X0+8]
	086 Move X0, X21
	087 Move V0, V8
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move X21, [X20+40]
	090 Compare X21, 0
	091 JumpIfEqual {121}
	092 Move X20, [X20+16]
	093 Compare X20, 0
	094 JumpIfEqual {129}
	095 Move X8, [X20]
	096 Move X1, [X22]
	097 NotImplemented "Instruction LDRH not yet implemented."
	098 Compare X9, 0
	099 JumpIfEqual {106}
	100 Move X10, [X8+176]
	101 Add X10, X10, 8
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Subtract X9, X9, 1
	105 Add X10, X10, 16
	106 Move W2, 2
	107 Move X0, X20
	108 Call 0x1C5D788
	109 Move W9, [X10]
	110 Add W9, W9, 2
	111 Add X8, X8, W9
	112 Add X0, X8, 312
	113 Move X8, [X0]
	114 Move X1, [X0+8]
	115 Move X0, X20
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move X8, [X21+24]
	118 Move X0, [X21+64]
	119 Move X1, [X21+40]
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move X0, X19
	122 Move X20, [X31+32]
	123 Move X19, [X31+40]
	124 Move X22, [X31+16]
	125 Move X21, [X31+24]
	126 Move X30, [X31+8]
	127 Move V8, [X31+48]
	128 Return X0
	129 Call 0x1C17F20

Method: System.Void Dispose()

Disassembly:
	0x02846264 MOV X1, X25

ISIL:
	001 Return 

