Type: Photon.Voice.RemoteVoice

Method: Photon.Voice.VoiceInfo get_Info()

Disassembly:
	0x0355BD0C LDR X8, [X8 + 0x648]
	0x0355BD10 ADD X0, X31, 0x14C
	0x0355BD14 MOV X1, X31
	0x0355BD18 LDR X8, [X8]
	0x0355BD1C STR X8, [X23 + 0x28]

ISIL:
	001 Move V1, [X0+32]
	002 Move V0, [X0+48]
	003 Move V2, [X0+1]
	004 Move [X8+16], V1
	005 Move [X8+24], V0
	006 Move [X8], V2
	007 Return X0

Method: System.Void set_Info(Photon.Voice.VoiceInfo value)

Disassembly:
	0x0355BD20 BL 0x3319BB4
	0x0355BD24 LDR W8, [X23 + 0x18]
	0x0355BD28 CMP W8, 0x2
	0x0355BD2C B.LS 0x355BFC4
	0x0355BD30 CMP W8, 0x3

ISIL:
	001 Move V1, [X1+16]
	002 Move V0, [X1+32]
	003 Move V2, [X1]
	004 Move [X0+32], V1
	005 Move [X0+40], V0
	006 Move [X0+1], V2
	007 Return 

Method: System.Int32 get_DelayFrames()

Disassembly:
	0x0355BD34 STR X0, [X23 + 0x30]
	0x0355BD38 B.EQ 0x355BFC4

ISIL:
	001 Move W0, [X0+148]
	002 Return X0

Method: System.Void set_DelayFrames(System.Int32 value)

Disassembly:
	0x0355BD3C ADRP X8, 0xBDA000
	0x0355BD40 LDR X8, [X8 + 0x638]

ISIL:
	001 Move [X0+148], W1
	002 Return 

Method: System.Void .ctor(Photon.Voice.VoiceClient client, Photon.Voice.RemoteVoiceOptions options, System.Int32 channelId, System.Int32 playerId, System.Byte voiceId, Photon.Voice.VoiceInfo info, System.Byte lastEventNumber)

Disassembly:
	0x0355BD44 LDR X8, [X8]
	0x0355BD48 STR X8, [X23 + 0x38]
	0x0355BD4C LDR X0, [X24]
	0x0355BD50 LDR W8, [X0 + 0xE0]
	0x0355BD54 CBNZ W8, 0x355BD5C
	0x0355BD58 BL 0x1C16DFC
	0x0355BD5C LDRB W8, [X20 + 0x32]
	0x0355BD60 ADD X0, X31, 0x148
	0x0355BD64 MOV X1, X31
	0x0355BD68 STRB W8, [X31 + 0x148]
	0x0355BD6C BL 0x3319BB4
	0x0355BD70 LDR W8, [X23 + 0x18]
	0x0355BD74 CMP W8, 0x4
	0x0355BD78 B.LS 0x355BFC4
	0x0355BD7C CMP W8, 0x5
	0x0355BD80 STR X0, [X23 + 0x40]
	0x0355BD84 B.EQ 0x355BFC4
	0x0355BD88 ADRP X8, 0xBDA000
	0x0355BD8C LDR X8, [X8 + 0x728]
	0x0355BD90 MOV X0, X22
	0x0355BD94 MOV X1, X31
	0x0355BD98 LDR X8, [X8]
	0x0355BD9C STR X8, [X23 + 0x48]
	0x0355BDA0 BL 0x3319BB4
	0x0355BDA4 LDR W8, [X23 + 0x18]
	0x0355BDA8 CMP W8, 0x6
	0x0355BDAC B.LS 0x355BFC4
	0x0355BDB0 CMP W8, 0x7
	0x0355BDB4 STR X0, [X23 + 0x50]
	0x0355BDB8 B.EQ 0x355BFC4
	0x0355BDBC ADRP X8, 0xBDA000
	0x0355BDC0 LDR X8, [X8 + 0x740]
	0x0355BDC4 ADD X0, X31, 0x148
	0x0355BDC8 MOV X1, X31
	0x0355BDCC LDR X8, [X8]
	0x0355BDD0 STR X8, [X23 + 0x58]
	0x0355BDD4 LDRB W8, [X22]
	0x0355BDD8 LDRB W9, [X20 + 0x32]
	0x0355BDDC SUB W8, W8, W9
	0x0355BDE0 STRB W8, [X31 + 0x148]
	0x0355BDE4 BL 0x3319BB4
	0x0355BDE8 LDR W8, [X23 + 0x18]
	0x0355BDEC CMP W8, 0x8
	0x0355BDF0 B.LS 0x355BFC4
	0x0355BDF4 CMP W8, 0x9
	0x0355BDF8 STR X0, [X23 + 0x60]
	0x0355BDFC B.EQ 0x355BFC4
	0x0355BE00 ADRP X8, 0xBDA000
	0x0355BE04 LDR X8, [X8 + 0x730]
	0x0355BE08 ADD X0, X31, 0xBC
	0x0355BE0C MOV X1, X31
	0x0355BE10 LDR X8, [X8]
	0x0355BE14 STR X8, [X23 + 0x68]
	0x0355BE18 LDR W8, [X20 + 0xC]
	0x0355BE1C STR W8, [X31 + 0xBC]
	0x0355BE20 BL 0x337B6E0
	0x0355BE24 LDR W8, [X23 + 0x18]
	0x0355BE28 CMP W8, 0xA
	0x0355BE2C B.LS 0x355BFC4
	0x0355BE30 CMP W8, 0xB
	0x0355BE34 STR X0, [X23 + 0x70]
	0x0355BE38 B.EQ 0x355BFC4
	0x0355BE3C ADRP X8, 0xBDA000
	0x0355BE40 LDR X8, [X8 + 0x650]
	0x0355BE44 ADRP X9, 0xBDA000
	0x0355BE48 MOVN X10, 0x0
	0x0355BE4C ADD X0, X31, 0x100
	0x0355BE50 LDR X8, [X8]
	0x0355BE54 LDR X9, [X9 + 0x3E8]
	0x0355BE58 MOV X1, X31
	0x0355BE5C STR X8, [X23 + 0x78]
	0x0355BE60 LDR X8, [X9]
	0x0355BE64 LDRB W9, [X20 + 0x31]
	0x0355BE68 STP X8, X10, [X31 + 0x100]
	0x0355BE6C STRB W9, [X31 + 0x110]
	0x0355BE70 BL 0x33B162C
	0x0355BE74 LDR W8, [X23 + 0x18]
	0x0355BE78 CMP W8, 0xC
	0x0355BE7C B.LS 0x355BFC4
	0x0355BE80 STR X0, [X23 + 0x80]
	0x0355BE84 MOV X0, X23
	0x0355BE88 MOV X1, X31
	0x0355BE8C BL 0x32278CC
	0x0355BE90 ADRP X8, 0xB98000
	0x0355BE94 LDR X8, [X8 + 0x9C8]
	0x0355BE98 MOV X22, X0
	0x0355BE9C LDR X23, [X8]
	0x0355BEA0 LDR X8, [X23 + 0x38]
	0x0355BEA4 CBNZ X8, 0x355BEB4
	0x0355BEA8 MOV X0, X23
	0x0355BEAC BL 0x1C5C6E0
	0x0355BEB0 LDR X8, [X23 + 0x38]
	0x0355BEB4 LDR X0, [X8 + 0x10]
	0x0355BEB8 LDRB W8, [X0 + 0x135]
	0x0355BEBC TBNZ X8, 0x0, 0x355BEC4
	0x0355BEC0 BL 0x1C5C684
	0x0355BEC4 LDR W8, [X0 + 0xE0]
	0x0355BEC8 CBNZ W8, 0x355BED0
	0x0355BECC BL 0x1C16DFC
	0x0355BED0 LDR X8, [X23 + 0x38]
	0x0355BED4 LDR X0, [X8 + 0x10]
	0x0355BED8 LDRB W8, [X0 + 0x135]
	0x0355BEDC TBNZ X8, 0x0, 0x355BEE4
	0x0355BEE0 BL 0x1C5C684
	0x0355BEE4 CBZ X21, 0x355B834
	0x0355BEE8 LDR X9, [X0 + 0xB8]
	0x0355BEEC LDR X8, [X21]
	0x0355BEF0 LDR X1, [X25]
	0x0355BEF4 LDR X23, [X9]
	0x0355BEF8 LDRH W9, [X8 + 0x12E]
	0x0355BEFC CBZ X9, 0x355BF20
	0x0355BF00 LDR X10, [X8 + 0xB0]
	0x0355BF04 ADD X10, X10, 0x8
	0x0355BF08 LDUR X11, [X10 - 0x8]
	0x0355BF0C CMP X11, X1
	0x0355BF10 B.EQ 0x355BF30
	0x0355BF14 SUBS X9, X9, 0x1
	0x0355BF18 ADD X10, X10, 0x10
	0x0355BF1C B.NE 0x355BF08
	0x0355BF20 MOVZ W2, 0x1
	0x0355BF24 MOV X0, X21
	0x0355BF28 BL 0x1C5C788
	0x0355BF2C B 0x355BF40
	0x0355BF30 LDR W9, [X10]
	0x0355BF34 ADD W9, W9, 0x1
	0x0355BF38 ADD X8, X8, W9, 0x4, SXTW
	0x0355BF3C ADD X0, X8, 0x138
	0x0355BF40 LDP X8, X4, [X0]
	0x0355BF44 MOVZ W1, 0x5
	0x0355BF48 MOV X0, X21
	0x0355BF4C MOV X2, X22
	0x0355BF50 MOV X3, X23
	0x0355BF54 BLR X8
	0x0355BF58 LDRB W8, [X19 + 0x9D]
	0x0355BF5C CBNZ W8, 0x355BF68
	0x0355BF60 MOV X0, X19
	0x0355BF64 BL 0x355C188
	0x0355BF68 LDR X0, [X24]
	0x0355BF6C LDR X21, [X19 + 0xC0]
	0x0355BF70 LDR W8, [X0 + 0xE0]
	0x0355BF74 CBNZ W8, 0x355BF7C
	0x0355BF78 BL 0x1C16DFC
	0x0355BF7C CBZ X21, 0x355B834
	0x0355BF80 LDRB W8, [X20 + 0x31]
	0x0355BF84 MOV X0, X21
	0x0355BF88 MOV W1, W31
	0x0355BF8C UBFM W2, W8, 0x3, 0x3
	0x0355BF90 BL 0x3556FC8
	0x0355BF94 ADD X19, X19, 0xA8
	0x0355BF98 BL 0x1C16D44
	0x0355BF9C MOV X0, X19
	0x0355BFA0 MOV X1, X31
	0x0355BFA4 BL 0x33EB148
	0x0355BFA8 LDP X20, X19, [X31 + 0x180]
	0x0355BFAC LDP X22, X21, [X31 + 0x170]
	0x0355BFB0 LDP X24, X23, [X31 + 0x160]
	0x0355BFB4 LDP X30, X25, [X31 + 0x150]
	0x0355BFB8 LDR X29, [X31 + 0x140]
	0x0355BFBC ADD X31, X31, 0x190
	0x0355BFC0 RET
	0x0355BFC4 BL 0x1C16F28
	0x0355BFC8 CMP W1, 0x1
	0x0355BFCC MOV X21, X0
	0x0355BFD0 B.NE 0x355C17C
	0x0355BFD4 MOV X0, X21
	0x0355BFD8 MOV X25, X24
	0x0355BFDC BL 0x3EB1AD0
	0x0355BFE0 MOV X21, X0
	0x0355BFE4 ADRP X0, 0xB98000
	0x0355BFE8 LDR X0, [X0 + 0x7D0]
	0x0355BFEC BL 0x1C16D08
	0x0355BFF0 LDR X8, [X21]
	0x0355BFF4 LDR X1, [X8]
	0x0355BFF8 BL 0x1C17270
	0x0355BFFC TBZ X0, 0x0, 0x355C154
	0x0355C000 LDR X23, [X21]
	0x0355C004 BL 0x3EB1AE0
	0x0355C008 LDR X8, [X19 + 0xC8]
	0x0355C00C CBZ X8, 0x355B834
	0x0355C010 ADRP X0, 0xBD9000
	0x0355C014 LDR X21, [X8 + 0x18]
	0x0355C018 LDR X22, [X19 + 0xB8]
	0x0355C01C LDR X0, [X0 + 0x748]
	0x0355C020 BL 0x1C16D08
	0x0355C024 MOV X24, X0
	0x0355C028 CBZ X23, 0x355C044
	0x0355C02C LDR X8, [X23]
	0x0355C030 MOV X0, X23
	0x0355C034 LDP X9, X1, [X8 + 0x168]
	0x0355C038 BLR X9
	0x0355C03C MOV X2, X0
	0x0355C040 B 0x355C048
	0x0355C044 MOV X2, X31
	0x0355C048 MOV X0, X22
	0x0355C04C MOV X1, X24
	0x0355C050 MOV X3, X31
	0x0355C054 BL 0x32274B8
	0x0355C058 MOV X22, X0
	0x0355C05C ADRP X0, 0xB97000
	0x0355C060 LDR X0, [X0 + 0x9C8]
	0x0355C064 BL 0x1C16D08
	0x0355C068 LDR X8, [X0 + 0x38]
	0x0355C06C MOV X23, X0
	0x0355C070 CBNZ X8, 0x355C080
	0x0355C074 MOV X0, X23
	0x0355C078 BL 0x1C5C6E0
	0x0355C07C LDR X8, [X23 + 0x38]
	0x0355C080 LDR X0, [X8 + 0x10]
	0x0355C084 LDRB W8, [X0 + 0x135]
	0x0355C088 TBNZ X8, 0x0, 0x355C090
	0x0355C08C BL 0x1C5C684
	0x0355C090 LDR W8, [X0 + 0xE0]
	0x0355C094 CBNZ W8, 0x355C09C
	0x0355C098 BL 0x1C16DFC
	0x0355C09C LDR X8, [X23 + 0x38]
	0x0355C0A0 LDR X0, [X8 + 0x10]
	0x0355C0A4 LDRB W8, [X0 + 0x135]
	0x0355C0A8 TBNZ X8, 0x0, 0x355C0B0
	0x0355C0AC BL 0x1C5C684
	0x0355C0B0 CBZ X21, 0x355B834
	0x0355C0B4 LDR X8, [X0 + 0xB8]
	0x0355C0B8 ADRP X0, 0xB9C000
	0x0355C0BC LDR X23, [X8]
	0x0355C0C0 LDR X0, [X0 + 0x348]
	0x0355C0C4 BL 0x1C16D08
	0x0355C0C8 LDR X8, [X21]
	0x0355C0CC MOV X1, X0
	0x0355C0D0 LDRH W9, [X8 + 0x12E]
	0x0355C0D4 CBZ X9, 0x355C0F8
	0x0355C0D8 LDR X10, [X8 + 0xB0]
	0x0355C0DC ADD X10, X10, 0x8
	0x0355C0E0 LDUR X11, [X10 - 0x8]
	0x0355C0E4 CMP X11, X1
	0x0355C0E8 B.EQ 0x355C108
	0x0355C0EC SUBS X9, X9, 0x1
	0x0355C0F0 ADD X10, X10, 0x10
	0x0355C0F4 B.NE 0x355C0E0
	0x0355C0F8 MOVZ W2, 0x1
	0x0355C0FC MOV X0, X21
	0x0355C100 BL 0x1C5C788
	0x0355C104 B 0x355C118
	0x0355C108 LDR W9, [X10]
	0x0355C10C ADD W9, W9, 0x1
	0x0355C110 ADD X8, X8, W9, 0x4, SXTW
	0x0355C114 ADD X0, X8, 0x138
	0x0355C118 LDP X8, X4, [X0]
	0x0355C11C MOVZ W1, 0x1
	0x0355C120 MOV X0, X21
	0x0355C124 MOV X2, X22
	0x0355C128 MOV X3, X23
	0x0355C12C BLR X8
	0x0355C130 ADD X21, X19, 0xA8
	0x0355C134 BL 0x1C16D44
	0x0355C138 MOV X0, X21
	0x0355C13C MOV X1, X31
	0x0355C140 BL 0x33EB148
	0x0355C144 MOV X0, X19
	0x0355C148 BL 0x355C5D8
	0x0355C14C MOV X24, X25
	0x0355C150 B 0x355BF68
	0x0355C154 MOVZ W0, 0x8
	0x0355C158 BL 0x3EB1AF0
	0x0355C15C LDR X8, [X21]
	0x0355C160 STR X8, [X0]
	0x0355C164 ADRP X1, 0x958000
	0x0355C168 ADD X1, X1, 0xE58
	0x0355C16C MOV X2, X31
	0x0355C170 BL 0x3EB1B00
	0x0355C174 MOV X21, X0
	0x0355C178 BL 0x3EB1AE0
	0x0355C17C MOV X0, X21
	0x0355C180 BL 0x1D2C690
	0x0355C184 BL 0x1990590
	0x0355C188 SUB X31, X31, 0x170
	0x0355C18C STP X29, X30, [X31 + 0x110]
	0x0355C190 STP X28, X27, [X31 + 0x120]
	0x0355C194 STP X26, X25, [X31 + 0x130]
	0x0355C198 STP X24, X23, [X31 + 0x140]
	0x0355C19C STP X22, X21, [X31 + 0x150]
	0x0355C1A0 STP X20, X19, [X31 + 0x160]
	0x0355C1A4 ADRP X20, 0xE83000
	0x0355C1A8 LDRB W8, [X20 + 0xDAF]
	0x0355C1AC MOV X19, X0
	0x0355C1B0 TBNZ X8, 0x0, 0x355C1EC
	0x0355C1B4 ADRP X0, 0xBD9000
	0x0355C1B8 LDR X0, [X0 + 0x710]
	0x0355C1BC BL 0x1C16CF4
	0x0355C1C0 ADRP X0, 0xBC0000
	0x0355C1C4 LDR X0, [X0 + 0xE18]
	0x0355C1C8 BL 0x1C16CF4
	0x0355C1CC ADRP X0, 0xBD9000
	0x0355C1D0 LDR X0, [X0 + 0x468]
	0x0355C1D4 BL 0x1C16CF4
	0x0355C1D8 ADRP X0, 0xBD9000
	0x0355C1DC LDR X0, [X0 + 0x750]
	0x0355C1E0 BL 0x1C16CF4
	0x0355C1E4 MOVZ W8, 0x1
	0x0355C1E8 STRB W8, [X20 + 0xDAF]
	0x0355C1EC MOVI V0.2D, 0x0
	0x0355C1F0 STR X31, [X31 + 0x100]
	0x0355C1F4 STP V0, V0, [X31 + 0xE0]
	0x0355C1F8 STR V0, [X31 + 0xD]
	0x0355C1FC LDR W8, [X19 + 0xF0]
	0x0355C200 TBNZ X8, 0x1F, 0x355C20C
	0x0355C204 MOV W20, W31
	0x0355C208 B 0x355C22C
	0x0355C20C LDR W8, [X19 + 0x94]
	0x0355C210 CMP W8, 0x1
	0x0355C214 B.LT 0x355C228
	0x0355C218 CMP W8, 0x7F
	0x0355C21C MOVZ W9, 0x7F
	0x0355C220 CSEL W20, W8, W9, LT
	0x0355C224 B 0x355C22C
	0x0355C228 LDRB W20, [X19 + 0x129]
	0x0355C22C LDRB W21, [X19 + 0xE0]
	0x0355C230 LDRB W22, [X19 + 0x9E]
	0x0355C234 BL 0x1C16D44
	0x0355C238 CBZ W22, 0x355C25C
	0x0355C23C LDP X20, X19, [X31 + 0x160]
	0x0355C240 LDP X22, X21, [X31 + 0x150]
	0x0355C244 LDP X24, X23, [X31 + 0x140]
	0x0355C248 LDP X26, X25, [X31 + 0x130]
	0x0355C24C LDP X28, X27, [X31 + 0x120]
	0x0355C250 LDP X29, X30, [X31 + 0x110]
	0x0355C254 ADD X31, X31, 0x170
	0x0355C258 RET
	0x0355C25C ADRP X22, 0xBD9000
	0x0355C260 ADRP X23, 0xBD9000
	0x0355C264 ADRP X24, 0xBC0000
	0x0355C268 ADRP X27, 0xBD9000
	0x0355C26C LDR X22, [X22 + 0x710]
	0x0355C270 LDR X23, [X23 + 0x468]
	0x0355C274 LDR X24, [X24 + 0xE18]
	0x0355C278 LDR X27, [X27 + 0x750]
	0x0355C27C MOV W28, W31
	0x0355C280 SUB W29, W21, W20
	0x0355C284 MOVZ W26, 0x38
	0x0355C288 STR W29, [X31 + 0xC]
	0x0355C28C CMP W28, 0x9
	0x0355C290 B.GT 0x355C23C
	0x0355C294 LDRB W8, [X19 + 0xE1]
	0x0355C298 SUB W8, W29, W8
	0x0355C29C AND W8, W8, 0xFF
	0x0355C2A0 CMP W8, 0x7E
	0x0355C2A4 B.HI 0x355C23C
	0x0355C2A8 LDR X0, [X19 + 0xF8]
	0x0355C2AC CBZ X0, 0x355C5D0
	0x0355C2B0 ADD W25, W28, 0x1
	0x0355C2B4 LDR X2, [X22]
	0x0355C2B8 ADD X1, X31, 0xD0
	0x0355C2BC BL 0x29917E8
	0x0355C2C0 TBZ X0, 0x0, 0x355C350
	0x0355C2C4 LDR X21, [X19 + 0x48]
	0x0355C2C8 CBZ X21, 0x355C5D0
	0x0355C2CC LDR X8, [X21]
	0x0355C2D0 LDR X1, [X23]
	0x0355C2D4 LDRH W9, [X8 + 0x12E]
	0x0355C2D8 CBZ X9, 0x355C2FC
	0x0355C2DC LDR X10, [X8 + 0xB0]
	0x0355C2E0 ADD X10, X10, 0x8
	0x0355C2E4 LDUR X11, [X10 - 0x8]
	0x0355C2E8 CMP X11, X1
	0x0355C2EC B.EQ 0x355C30C
	0x0355C2F0 SUBS X9, X9, 0x1
	0x0355C2F4 ADD X10, X10, 0x10
	0x0355C2F8 B.NE 0x355C2E4
	0x0355C2FC MOVZ W2, 0x2
	0x0355C300 MOV X0, X21
	0x0355C304 BL 0x1C5C788
	0x0355C308 B 0x355C31C
	0x0355C30C LDR W9, [X10]
	0x0355C310 ADD W9, W9, 0x2
	0x0355C314 ADD X8, X8, W9, 0x4, SXTW
	0x0355C318 ADD X0, X8, 0x138
	0x0355C31C LDP X8, X2, [X0]
	0x0355C320 ADD X1, X31, 0xD0
	0x0355C324 MOV X0, X21
	0x0355C328 BLR X8
	0x0355C32C LDR X0, [X24]
	0x0355C330 LDR W8, [X0 + 0xE0]
	0x0355C334 CBNZ W8, 0x355C33C
	0x0355C338 BL 0x1C16DFC
	0x0355C33C ADD X0, X31, 0xD0
	0x0355C340 BL 0x3555CB0
	0x0355C344 LDR X0, [X19 + 0xF8]
	0x0355C348 CBNZ X0, 0x355C2B4
	0x0355C34C B 0x355C5D0
	0x0355C350 LDR W8, [X19 + 0xF0]
	0x0355C354 LDRB W20, [X19 + 0xE1]
	0x0355C358 CMP W8, W20
	0x0355C35C B.NE 0x355C368
	0x0355C360 MOVN W8, 0x0
	0x0355C364 STR W8, [X19 + 0xF0]
	0x0355C368 LDRB W21, [X19 + 0xE2]
	0x0355C36C MOV X0, X19
	0x0355C370 MOV W2, W29
	0x0355C374 MOV W1, W21
	0x0355C378 BL 0x355C990
	0x0355C37C LDRB W8, [X19 + 0xE1]
	0x0355C380 AND W9, W0, 0xFF
	0x0355C384 ADD W10, W0, W21
	0x0355C388 STRB W10, [X19 + 0xE2]
	0x0355C38C CMP W20, W8
	0x0355C390 CSEL W28, W25, W31, EQ
	0x0355C394 CBZ W9, 0x355C5BC
	0x0355C398 SUB W8, W21, 0x40
	0x0355C39C AND W25, W8, 0xFF
	0x0355C3A0 AND X29, X8, 0xFF
	0x0355C3A4 LDR X8, [X19 + 0xD8]
	0x0355C3A8 CBZ X8, 0x355C5D0
	0x0355C3AC LDR W9, [X8 + 0x18]
	0x0355C3B0 CMP W25, W9
	0x0355C3B4 B.CS 0x355C5D4
	0x0355C3B8 ADD X8, X8, X29, 0x2, LSL
	0x0355C3BC ADD X0, X8, 0x20
	0x0355C3C0 MOVZ W1, 0x1
	0x0355C3C4 MOV X2, X31
	0x0355C3C8 BL 0x33E9064
	0x0355C3CC CMP W0, 0x1
	0x0355C3D0 B.EQ 0x355C3A4
	0x0355C3D4 LDR X20, [X19 + 0xD0]
	0x0355C3D8 CBZ X20, 0x355C5D0
	0x0355C3DC LDR X0, [X24]
	0x0355C3E0 LDR W8, [X0 + 0xE0]
	0x0355C3E4 CBNZ W8, 0x355C3EC
	0x0355C3E8 BL 0x1C16DFC
	0x0355C3EC LDR W8, [X20 + 0x18]
	0x0355C3F0 CMP W25, W8
	0x0355C3F4 B.CS 0x355C5D4
	0x0355C3F8 MADD X8, X29, X26, X20
	0x0355C3FC ADD X0, X8, 0x20
	0x0355C400 BL 0x3555CB0
	0x0355C404 LDR X0, [X27]

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+176], X29
	003 Move [X31+184], X30
	004 Move [X31+192], X28
	005 Move [X31+200], X27
	006 Move [X31+208], X26
	007 Move [X31+216], X25
	008 Move [X31+224], X24
	009 Move [X31+232], X23
	010 Move [X31+240], X22
	011 Move [X31+248], X21
	012 Move [X31+256], X20
	013 Move [X31+264], X19
	014 Move [X31+124], W4
	015 Move [X31+120], W5
	016 Move X26, 0xE85000
	017 Move X27, 0xB9F000
	018 Move X29, 0xBDB000
	019 Move X28, 0xB9A000
	020 Move X27, [X27+3264]
	021 Move X29, [X29+1728]
	022 Move W8, [X26+3501]
	023 Move X28, [X28+3672]
	024 Move X22, X6
	025 Move W23, W5
	026 Move W24, W4
	027 Move W21, W3
	028 Move X20, X2
	029 Move X25, X1
	030 Move X19, X0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {100}
	035 Move X0, 0xB99000
	036 Move X0, [X0+2504]
	037 Call 0x1C17CF4
	038 Move X0, 0xB99000
	039 Move X0, [X0+1560]
	040 Call 0x1C17CF4
	041 Move X0, 0xBDB000
	042 Move X0, [X0+1736]
	043 Call 0x1C17CF4
	044 Move X0, 0xBDB000
	045 Move X0, [X0+1744]
	046 Call 0x1C17CF4
	047 Move X0, 0xBDB000
	048 Move X0, [X0+1752]
	049 Call 0x1C17CF4
	050 Move X0, 0xBDB000
	051 Move X0, [X0+1728]
	052 Call 0x1C17CF4
	053 Move X0, 0xBDB000
	054 Move X0, [X0+1128]
	055 Call 0x1C17CF4
	056 Move X0, 0xB9E000
	057 Move X0, [X0+840]
	058 Call 0x1C17CF4
	059 Move X0, 0xB9A000
	060 Move X0, [X0+3672]
	061 Call 0x1C17CF4
	062 Move X0, 0xBDB000
	063 Move X0, [X0+1760]
	064 Call 0x1C17CF4
	065 Move X0, 0xB9F000
	066 Move X0, [X0+3264]
	067 Call 0x1C17CF4
	068 Move X0, 0xBDB000
	069 Move X0, [X0+1296]
	070 Call 0x1C17CF4
	071 Move X0, 0xB99000
	072 Move X0, [X0+2760]
	073 Call 0x1C17CF4
	074 Move X0, 0xBC5000
	075 Move X0, [X0+464]
	076 Call 0x1C17CF4
	077 Move X0, 0xBC5000
	078 Move X0, [X0+472]
	079 Call 0x1C17CF4
	080 Move X0, 0xBDB000
	081 Move X0, [X0+1336]
	082 Call 0x1C17CF4
	083 Move X0, 0xBDB000
	084 Move X0, [X0+1352]
	085 Call 0x1C17CF4
	086 Move X0, 0xBDB000
	087 Move X0, [X0+1768]
	088 Call 0x1C17CF4
	089 Move X0, 0xBDB000
	090 Move X0, [X0+1776]
	091 Call 0x1C17CF4
	092 Move X0, 0xBDB000
	093 Move X0, [X0+1784]
	094 Call 0x1C17CF4
	095 Move X0, 0xBDB000
	096 Move X0, [X0+1792]
	097 Call 0x1C17CF4
	098 Move W8, 1
	099 Move [X26+3501], W8
	100 Move X0, [X27]
	101 Call 0x1C17F10
	102 Move X1, X31
	103 Move X26, X0
	104 Call Object..ctor, X0
	105 Move [X19+160], X26
	106 Move X8, 0xBDB000
	107 Move X8, [X8+1296]
	108 Move X0, [X8]
	109 Call 0x1C17F10
	110 Move X1, X31
	111 Move X26, X0
	112 Call Object..ctor, X0
	113 Move W8, 1000
	114 Move [X26+32], W8
	115 Move [X19+192], X26
	116 Move X0, [X29]
	117 Move W1, 256
	118 Call 0x1C17D6C
	119 Move [X19+208], X0
	120 Move X0, [X28]
	121 Move W1, 256
	122 Call 0x1C17D6C
	123 Move TEMP, 0
	124 Not TEMP
	125 Move W8, TEMP
	126 Move [X19+216], X0
	127 Move [X19+240], W8
	128 Move X8, 0xBDB000
	129 Move X8, [X8+1744]
	130 Move X0, [X8]
	131 Call 0x1C17F10
	132 Move X8, 0xBDB000
	133 Move X8, [X8+1736]
	134 Move X26, X0
	135 Move X1, [X8]
	136 Call 0x29912A0, X0
	137 Move [X19+248], X26
	138 Move X8, 0xBDB000
	139 Move X8, [X8+1752]
	140 Move W1, 10
	141 Move X0, [X8]
	142 Call 0x1C17D6C
	143 Move [X19+264], X0
	144 Move X0, [X29]
	145 Move W1, 256
	146 Call 0x1C17D6C
	147 Move [X19+272], X0
	148 Move X0, [X28]
	149 Move W1, 256
	150 Call 0x1C17D6C
	151 Move [X19+280], X0
	152 Move X8, 0xB99000
	153 Move X8, [X8+1560]
	154 Move W1, 256
	155 Move X0, [X8]
	156 Call 0x1C17D6C
	157 Move [X19+288], X0
	158 Move W8, 127
	159 Move X0, X19
	160 Move X1, X31
	161 Move [X19+296], W8
	162 Call Object..ctor, X0
	163 Add X0, X19, 64
	164 Move W2, 80
	165 Move X1, X20
	166 Call 0x3EB2B30
	167 Move X8, [X20+72]
	168 Move [X19+200], X25
	169 Move [X19+184], X8
	170 Compare X25, 0
	171 JumpIfEqual {475}
	172 Move W8, [X25+32]
	173 Move [X19+144], W21
	174 Move [X19+152], W24
	175 Move [X19+156], W23
	176 Move [X19+157], W8
	177 Move V1, [X22+16]
	178 Move V0, [X22+32]
	179 Move V2, [X22]
	180 Move X8, 0xB99000
	181 Move X8, [X8+2760]
	182 Move [X19+32], V1
	183 Move [X19+40], V0
	184 Move [X19+1], V2
	185 Move W1, 6
	186 Move X0, [X8]
	187 Call 0x1C17D6C
	188 Compare X0, 0
	189 JumpIfEqual {475}
	190 Move W8, [X0+24]
	191 Move X22, X0
	192 Compare W8, 0
	193 JumpIfEqual {474}
	194 Move X8, 0xBDA000
	195 Move X8, [X8+1336]
	196 Add X0, X31, 120
	197 Move X1, X31
	198 Move X8, [X8]
	199 Move [X22+32], X8
	200 Call Byte.ToString, X0
	201 Move W8, [X22+24]
	202 NotImplemented "Instruction CMP not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move [X22+40], X0
	205 Move X8, 0xBDA000
	206 Move X8, [X8+1352]
	207 Move X8, [X8]
	208 Move [X22+48], X8
	209 Move X0, [X19+200]
	210 Compare X0, 0
	211 JumpIfEqual {475}
	212 Move W1, W21
	213 Call VoiceClient.channelStr, X0, X1
	214 Move W8, [X22+24]
	215 NotImplemented "Instruction CMP not yet implemented."
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move [X22+56], X0
	218 Move X8, 0xBDA000
	219 Move X8, [X8+1784]
	220 Add X0, X31, 124
	221 Move X1, X31
	222 Move X8, [X8]
	223 Move [X22+64], X8
	224 Call Int32.ToString, X0
	225 Move W8, [X22+24]
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Move [X22+72], X0
	228 Move X0, X22
	229 Move X1, X31
	230 Call String.Concat, X0
	231 Move X8, [X19+72]
	232 Move [X19+176], X0
	233 Compare X8, 0
	234 JumpIfEqual {271}
	235 Move W8, [X19+157]
	236 Compare W8, 0
	237 JumpIfEqual {330}
	238 Move X8, 0xBC4000
	239 Move X8, [X8+464]
	240 Move X0, [X8]
	241 Call 0x1C17F10
	242 Move X8, 0xBDA000
	243 Move X8, [X8+1760]
	244 Move X1, X19
	245 Move X3, X31
	246 Move X21, X0
	247 Move X2, [X8]
	248 Call ThreadStart..ctor, X0, X1, X2
	249 Move X8, 0xBC4000
	250 Move X8, [X8+472]
	251 Move X0, [X8]
	252 Call 0x1C17F10
	253 Move X1, X21
	254 Move X2, X31
	255 Move X20, X0
	256 Call Thread..ctor, X0, X1
	257 Move X8, 0xBDA000
	258 Move X1, [X19+176]
	259 Move X8, [X8+1776]
	260 Move X2, X31
	261 Move X0, [X8]
	262 Call String.Concat, X0, X1
	263 Move X1, X0
	264 Move X0, X20
	265 Call Util.SetThreadName, X0, X1
	266 Compare X20, 0
	267 JumpIfEqual {475}
	268 Move X0, X20
	269 Move X1, X31
	270 Call Thread.Start, X0
	271 Move X8, 0xBDA000
	272 Move X0, [X19+184]
	273 Move X8, [X8+1768]
	274 Move X2, X31
	275 Move X1, [X8]
	276 Call String.Concat, X0, X1
	277 Move X9, [X19+200]
	278 Compare X9, 0
	279 JumpIfEqual {475}
	280 Move X8, 0xB98000
	281 Move X8, [X8+2504]
	282 Move X21, [X9+24]
	283 Move X20, X0
	284 Move X22, [X8]
	285 Move X8, [X22+56]
	286 Compare X8, 0
	287 JumpIfNotEqual {291}
	288 Move X0, X22
	289 Call 0x1C5D6E0
	290 Move X8, [X22+56]
	291 Move X0, [X8+16]
	292 Move W8, [X0+309]
	293 Move TEMP, X8
	294 And TEMP, TEMP, 1
	295 Compare TEMP, 1
	296 JumpIfEqual {298}
	297 Call 0x1C5D684
	298 Move W8, [X0+224]
	299 Compare W8, 0
	300 JumpIfNotEqual {302}
	301 Call 0x1C17DFC
	302 Move X8, [X22+56]
	303 Move X0, [X8+16]
	304 Move W8, [X0+309]
	305 Move TEMP, X8
	306 And TEMP, TEMP, 1
	307 Compare TEMP, 1
	308 JumpIfEqual {310}
	309 Call 0x1C5D684
	310 Compare X21, 0
	311 JumpIfEqual {475}
	312 Move X10, 0xB9D000
	313 Move X9, [X0+184]
	314 Move X8, [X21]
	315 Move X10, [X10+840]
	316 Move X22, [X9]
	317 NotImplemented "Instruction LDRH not yet implemented."
	318 Move X1, [X10]
	319 Compare X9, 0
	320 JumpIfEqual {327}
	321 Move X10, [X8+176]
	322 Add X10, X10, 8
	323 NotImplemented "Instruction LDUR not yet implemented."
	324 NotImplemented "Instruction CMP not yet implemented."
	325 Subtract X9, X9, 1
	326 Add X10, X10, 16
	327 Move W2, 1
	328 Move X0, X21
	329 Call 0x1C5D788
	330 Move X8, [X19+200]
	331 Compare X8, 0
	332 JumpIfEqual {475}
	333 Move X21, [X8+24]
	334 Move X8, 0xBDA000
	335 Move X0, [X19+184]
	336 Move X8, [X8+1792]
	337 Move X2, X31
	338 Move X1, [X8]
	339 Call String.Concat, X0, X1
	340 Move X8, 0xB98000
	341 Move X8, [X8+2504]
	342 Move X22, X0
	343 Move X23, [X8]
	344 Move X8, [X23+56]
	345 Compare X8, 0
	346 JumpIfNotEqual {350}
	347 Move X0, X23
	348 Call 0x1C5D6E0
	349 Move X8, [X23+56]
	350 Move X0, [X8+16]
	351 Move W8, [X0+309]
	352 Move TEMP, X8
	353 And TEMP, TEMP, 1
	354 Compare TEMP, 1
	355 JumpIfEqual {357}
	356 Call 0x1C5D684
	357 Move W8, [X0+224]
	358 Compare W8, 0
	359 JumpIfNotEqual {361}
	360 Call 0x1C17DFC
	361 Move X8, [X23+56]
	362 Move X0, [X8+16]
	363 Move W8, [X0+309]
	364 Move TEMP, X8
	365 And TEMP, TEMP, 1
	366 Compare TEMP, 1
	367 JumpIfEqual {369}
	368 Call 0x1C5D684
	369 Compare X21, 0
	370 JumpIfEqual {475}
	371 Move X10, 0xB9D000
	372 Move X9, [X0+184]
	373 Move X8, [X21]
	374 Move X10, [X10+840]
	375 Add X19, X19, 16
	376 Move X23, [X9]
	377 NotImplemented "Instruction LDRH not yet implemented."
	378 Move X1, [X10]
	379 Compare X9, 0
	380 JumpIfEqual {387}
	381 Move X10, [X8+176]
	382 Add X10, X10, 8
	383 NotImplemented "Instruction LDUR not yet implemented."
	384 NotImplemented "Instruction CMP not yet implemented."
	385 Subtract X9, X9, 1
	386 Add X10, X10, 16
	387 Move W2, 1
	388 Move X0, X21
	389 Call 0x1C5D788
	390 Move W9, [X10]
	391 Add W9, W9, 1
	392 Add X8, X8, W9
	393 Add X0, X8, 312
	394 Move X8, [X0]
	395 Move X4, [X0+8]
	396 Move W1, 1
	397 Move X0, X21
	398 Move X2, X20
	399 Move X3, X22
	400 Move W23, 1
	401 NotImplemented "Instruction BLR not yet implemented."
	402 Call 0x1C17D44
	403 Move [X19+158], W23
	404 Move W9, [X10]
	405 Add W9, W9, 1
	406 Add X8, X8, W9
	407 Add X0, X8, 312
	408 Move X8, [X0]
	409 Move X4, [X0+8]
	410 Move W1, 3
	411 Move X0, X21
	412 Move X2, X22
	413 Move X3, X23
	414 NotImplemented "Instruction BLR not yet implemented."
	415 Move V2, [X19+16]
	416 Move V0, [X19+32]
	417 Move V1, [X19]
	418 Move X19, [X20+8]
	419 Move [X31+80], V2
	420 Move [X31+88], V0
	421 Move [X31+4], V1
	422 Compare X19, 0
	423 JumpIfEqual {475}
	424 Move V0, [X31+64]
	425 Move V1, [X31+80]
	426 Move V2, [X31+6]
	427 Move X10, 0xBDA000
	428 Move [X31+16], V0
	429 Move [X31+24], V1
	430 Move [X31+3], V2
	431 Move X8, [X19]
	432 Move X10, [X10+1128]
	433 NotImplemented "Instruction LDRH not yet implemented."
	434 Move X1, [X10]
	435 Compare X9, 0
	436 JumpIfEqual {443}
	437 Move X10, [X8+176]
	438 Add X10, X10, 8
	439 NotImplemented "Instruction LDUR not yet implemented."
	440 NotImplemented "Instruction CMP not yet implemented."
	441 Subtract X9, X9, 1
	442 Add X10, X10, 16
	443 Move X0, X19
	444 Move W2, W31
	445 Call 0x1C5D788
	446 NotImplemented "Instruction LDRSW not yet implemented."
	447 Add X8, X8, X9
	448 Add X0, X8, 312
	449 Move V0, [X31+16]
	450 Move V1, [X31+32]
	451 Move V2, [X31+3]
	452 Move X8, [X0]
	453 Add X1, X31, 128
	454 Move [X31+128], V0
	455 Move [X31+136], V1
	456 Move [X31+10], V2
	457 Move X2, [X0+8]
	458 Move X0, X19
	459 NotImplemented "Instruction BLR not yet implemented."
	460 Move X20, [X31+256]
	461 Move X19, [X31+264]
	462 Move X22, [X31+240]
	463 Move X21, [X31+248]
	464 Move X24, [X31+224]
	465 Move X23, [X31+232]
	466 Move X26, [X31+208]
	467 Move X25, [X31+216]
	468 Move X28, [X31+192]
	469 Move X27, [X31+200]
	470 Move X29, [X31+176]
	471 Move X30, [X31+184]
	472 Add X31, X31, 272
	473 Return 
	474 Call 0x1C17F28
	475 Call 0x1C17F20

Method: System.String get_shortName()

Disassembly:
	0x0355C408 LDR X20, [X19 + 0xD0]
	0x0355C40C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move X0, [X0+176]
	002 Return X0

Method: System.String get_LogPrefix()

Disassembly:
	0x0355C410 CBNZ W8, 0x355C41C
	0x0355C414 BL 0x1C16DFC

ISIL:
	001 Move X0, [X0+184]
	002 Return X0

Method: System.Void ReceiveSpacingProfileStart()

Disassembly:
	0x0355C418 LDR X0, [X27]
	0x0355C41C LDR X8, [X0 + 0xB8]
	0x0355C420 LDR X9, [X8 + 0x30]
	0x0355C424 LDP V1, V0, [X8 + 0x10]
	0x0355C428 LDR V2, [X8]
	0x0355C42C STR X9, [X31 + 0xC0]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+192]
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X30, [X31+16]
	006 Call SpacingProfile.Start, X0
	007 Return 
	008 Call 0x1C17F20

Method: System.String get_ReceiveSpacingProfileDump()

Disassembly:
	0x0355C430 STP V1, V0, [X31 + 0xA0]
	0x0355C434 STR V2, [X31 + 0x9]
	0x0355C438 CBZ X20, 0x355C5D0
	0x0355C43C LDP V0, V1, [X31 + 0x90]
	0x0355C440 LDR V2, [X31 + 0xB]
	0x0355C444 LDR X8, [X31 + 0xC0]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+192]
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X30, [X31+16]
	006 Call SpacingProfile.get_Dump, X0
	007 Return X0
	008 Call 0x1C17F20

Method: System.Int32 get_ReceiveSpacingProfileMax()

Disassembly:
	0x0355C448 STP V0, V1, [X31 + 0x50]
	0x0355C44C STR V2, [X31 + 0x7]
	0x0355C450 STR X8, [X31 + 0x80]
	0x0355C454 LDR W8, [X20 + 0x18]
	0x0355C458 CMP W25, W8
	0x0355C45C B.CS 0x355C5D4

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+192]
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X30, [X31+16]
	006 Call SpacingProfile.get_Max, X0
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void receiveBytes(ref Photon.Voice.FrameBuffer receivedBytes, System.Byte evNumber)

Disassembly:
	0x0355C460 LDP V2, V0, [X31 + 0x60]
	0x0355C464 LDR X8, [X31 + 0x80]
	0x0355C468 LDR V1, [X31 + 0x5]
	0x0355C46C NOP
	0x0355C470 MADD X9, X29, X26, X20
	0x0355C474 STP V2, V0, [X9 + 0x30]
	0x0355C478 STR X8, [X9 + 0x50]
	0x0355C47C STR V1, [X9 + 0x2]
	0x0355C480 LDR X8, [X19 + 0xD8]
	0x0355C484 CBZ X8, 0x355C5D0
	0x0355C488 LDR W9, [X8 + 0x18]
	0x0355C48C CMP W25, W9
	0x0355C490 B.CS 0x355C5D4
	0x0355C494 ADD X8, X8, X29, 0x2, LSL
	0x0355C498 ADD X0, X8, 0x20
	0x0355C49C MOV W1, W31
	0x0355C4A0 MOV X2, X31
	0x0355C4A4 BL 0x33E9064
	0x0355C4A8 LDR X8, [X19 + 0x118]
	0x0355C4AC CBZ X8, 0x355C5D0
	0x0355C4B0 LDR W9, [X8 + 0x18]
	0x0355C4B4 CMP W25, W9
	0x0355C4B8 B.CS 0x355C5D4
	0x0355C4BC ADD X8, X8, X29, 0x2, LSL
	0x0355C4C0 ADD X0, X8, 0x20
	0x0355C4C4 MOVZ W1, 0x1
	0x0355C4C8 MOV X2, X31
	0x0355C4CC BL 0x33E9064
	0x0355C4D0 CMP W0, 0x1
	0x0355C4D4 B.EQ 0x355C4A8
	0x0355C4D8 LDR X20, [X19 + 0x110]
	0x0355C4DC CBZ X20, 0x355C5D0
	0x0355C4E0 LDR X0, [X24]
	0x0355C4E4 LDR W8, [X0 + 0xE0]
	0x0355C4E8 CBNZ W8, 0x355C4F0
	0x0355C4EC BL 0x1C16DFC
	0x0355C4F0 LDR W8, [X20 + 0x18]
	0x0355C4F4 CMP W25, W8
	0x0355C4F8 B.CS 0x355C5D4
	0x0355C4FC MADD X8, X29, X26, X20
	0x0355C500 ADD X0, X8, 0x20
	0x0355C504 BL 0x3555CB0
	0x0355C508 LDR X0, [X27]
	0x0355C50C LDR X20, [X19 + 0x110]
	0x0355C510 LDR W8, [X0 + 0xE0]
	0x0355C514 CBNZ W8, 0x355C520
	0x0355C518 BL 0x1C16DFC
	0x0355C51C LDR X0, [X27]
	0x0355C520 LDR X8, [X0 + 0xB8]
	0x0355C524 LDR X9, [X8 + 0x30]
	0x0355C528 LDP V1, V0, [X8 + 0x10]
	0x0355C52C LDR V2, [X8]
	0x0355C530 STR X9, [X31 + 0xC0]
	0x0355C534 STP V1, V0, [X31 + 0xA0]
	0x0355C538 STR V2, [X31 + 0x9]
	0x0355C53C CBZ X20, 0x355C5D0
	0x0355C540 LDP V0, V1, [X31 + 0x90]
	0x0355C544 LDR V2, [X31 + 0xB]
	0x0355C548 LDR X8, [X31 + 0xC0]
	0x0355C54C STP V0, V1, [X31 + 0x10]
	0x0355C550 STR V2, [X31 + 0x3]
	0x0355C554 STR X8, [X31 + 0x40]
	0x0355C558 LDR W8, [X20 + 0x18]
	0x0355C55C CMP W25, W8
	0x0355C560 B.CS 0x355C5D4
	0x0355C564 LDP V2, V0, [X31 + 0x20]
	0x0355C568 LDR X8, [X31 + 0x40]
	0x0355C56C LDR V1, [X31 + 0x1]
	0x0355C570 NOP
	0x0355C574 MADD X9, X29, X26, X20
	0x0355C578 STP V2, V0, [X9 + 0x30]
	0x0355C57C STR X8, [X9 + 0x50]
	0x0355C580 STR V1, [X9 + 0x2]
	0x0355C584 LDR X8, [X19 + 0x118]
	0x0355C588 CBZ X8, 0x355C5D0
	0x0355C58C LDR W9, [X8 + 0x18]
	0x0355C590 CMP W25, W9
	0x0355C594 B.CS 0x355C5D4
	0x0355C598 ADD X8, X8, X29, 0x2, LSL
	0x0355C59C ADD X0, X8, 0x20
	0x0355C5A0 MOV W1, W31
	0x0355C5A4 MOV X2, X31
	0x0355C5A8 BL 0x33E9064
	0x0355C5AC LDRB W8, [X19 + 0xE2]
	0x0355C5B0 ADD W21, W21, 0x1
	0x0355C5B4 CMP W8, W21, UXTB
	0x0355C5B8 B.NE 0x355C398
	0x0355C5BC LDRB W20, [X19 + 0x9E]
	0x0355C5C0 BL 0x1C16D44
	0x0355C5C4 LDR W29, [X31 + 0xC]
	0x0355C5C8 CBZ W20, 0x355C28C
	0x0355C5CC B 0x355C23C
	0x0355C5D0 BL 0x1C16F20
	0x0355C5D4 BL 0x1C16F28
	0x0355C5D8 SUB X31, X31, 0x110
	0x0355C5DC STR X29, [X31 + 0xC0]
	0x0355C5E0 STP X30, X25, [X31 + 0xD0]
	0x0355C5E4 STP X24, X23, [X31 + 0xE0]
	0x0355C5E8 STP X22, X21, [X31 + 0xF0]
	0x0355C5EC STP X20, X19, [X31 + 0x100]
	0x0355C5F0 ADRP X20, 0xE83000
	0x0355C5F4 LDRB W8, [X20 + 0xDB4]
	0x0355C5F8 MOV X19, X0
	0x0355C5FC TBNZ X8, 0x0, 0x355C62C
	0x0355C600 ADRP X0, 0xBC0000
	0x0355C604 LDR X0, [X0 + 0xE18]
	0x0355C608 BL 0x1C16CF4
	0x0355C60C ADRP X0, 0xB97000
	0x0355C610 LDR X0, [X0 + 0xE00]
	0x0355C614 BL 0x1C16CF4
	0x0355C618 ADRP X0, 0xBD9000
	0x0355C61C LDR X0, [X0 + 0x750]
	0x0355C620 BL 0x1C16CF4
	0x0355C624 MOVZ W8, 0x1
	0x0355C628 STRB W8, [X20 + 0xDB4]
	0x0355C62C LDR X20, [X19 + 0xA0]
	0x0355C630 STRB W31, [X31 + 0xCC]
	0x0355C634 ADD X1, X31, 0xCC
	0x0355C638 MOV X0, X20
	0x0355C63C MOV X2, X31
	0x0355C640 BL 0x33DE64C
	0x0355C644 LDRB W21, [X19 + 0x9E]
	0x0355C648 BL 0x1C16D44
	0x0355C64C CBZ W21, 0x355C65C
	0x0355C650 MOV X21, X31
	0x0355C654 MOVZ W22, 0x3
	0x0355C658 B 0x355C670
	0x0355C65C BL 0x1C16D44
	0x0355C660 MOVZ W8, 0x1
	0x0355C664 MOV X21, X31
	0x0355C668 STRB W8, [X19 + 0x9E]
	0x0355C66C MOVZ W22, 0x4
	0x0355C670 LDRB W8, [X31 + 0xCC]
	0x0355C674 CBZ W8, 0x355C684
	0x0355C678 MOV X0, X20
	0x0355C67C MOV X1, X31
	0x0355C680 BL 0x33E14E4
	0x0355C684 CBNZ X21, 0x355C924
	0x0355C688 ORR W8, W22, 0x4
	0x0355C68C CMP W8, 0x4
	0x0355C690 B.NE 0x355C904
	0x0355C694 ADRP X21, 0xBC0000
	0x0355C698 ADRP X22, 0xBD9000
	0x0355C69C ADRP X20, 0xB97000
	0x0355C6A0 LDR X0, [X19 + 0xE8]
	0x0355C6A4 LDR X21, [X21 + 0xE18]
	0x0355C6A8 LDR X22, [X22 + 0x750]
	0x0355C6AC LDR X20, [X20 + 0xE00]
	0x0355C6B0 CBZ X0, 0x355C6F0
	0x0355C6B4 MOV X1, X31
	0x0355C6B8 BL 0x33DE66C
	0x0355C6BC B 0x355C6F0
	0x0355C6C0 LDR X0, [X19 + 0xD8]
	0x0355C6C4 CBZ X0, 0x355C8A0
	0x0355C6C8 LDR W2, [X0 + 0x18]
	0x0355C6CC MOV W1, W31
	0x0355C6D0 MOV X3, X31
	0x0355C6D4 BL 0x339FA34
	0x0355C6D8 LDR X0, [X19 + 0x118]
	0x0355C6DC CBZ X0, 0x355C8A0
	0x0355C6E0 LDR W2, [X0 + 0x18]
	0x0355C6E4 MOV W1, W31
	0x0355C6E8 MOV X3, X31
	0x0355C6EC BL 0x339FA34
	0x0355C6F0 LDR W23, [X19 + 0xA8]
	0x0355C6F4 BL 0x1C16D44
	0x0355C6F8 CMP W23, 0x0
	0x0355C6FC B.GT 0x355C6C0
	0x0355C700 LDRB W23, [X19 + 0xAC]
	0x0355C704 BL 0x1C16D44
	0x0355C708 CBNZ W23, 0x355C6C0
	0x0355C70C LDR X25, [X19 + 0xD0]
	0x0355C710 CBZ X25, 0x355C8A0
	0x0355C714 MOV X23, X31
	0x0355C718 MOVZ W24, 0x20
	0x0355C71C LDR W8, [X25 + 0x18]
	0x0355C720 CMP X23, W8, SXTW
	0x0355C724 B.GE 0x355C7D8
	0x0355C728 LDR X0, [X21]
	0x0355C72C LDR W9, [X0 + 0xE0]
	0x0355C730 CBNZ W9, 0x355C73C
	0x0355C734 BL 0x1C16DFC
	0x0355C738 LDR W8, [X25 + 0x18]
	0x0355C73C CMP X23, X8
	0x0355C740 B.CS 0x355C920
	0x0355C744 ADD X0, X25, X24
	0x0355C748 BL 0x3555CB0
	0x0355C74C LDR X0, [X22]
	0x0355C750 LDR X25, [X19 + 0xD0]
	0x0355C754 LDR W8, [X0 + 0xE0]
	0x0355C758 CBNZ W8, 0x355C764
	0x0355C75C BL 0x1C16DFC
	0x0355C760 LDR X0, [X22]
	0x0355C764 LDR X8, [X0 + 0xB8]
	0x0355C768 LDR X9, [X8 + 0x30]
	0x0355C76C LDP V1, V0, [X8 + 0x10]
	0x0355C770 LDR V2, [X8]
	0x0355C774 STR X9, [X31 + 0xB0]
	0x0355C778 STP V1, V0, [X31 + 0x90]
	0x0355C77C STR V2, [X31 + 0x8]
	0x0355C780 CBZ X25, 0x355C8A0
	0x0355C784 LDP V0, V1, [X31 + 0x80]
	0x0355C788 LDR V2, [X31 + 0xA]
	0x0355C78C LDR X8, [X31 + 0xB0]
	0x0355C790 STP V0, V1, [X31 + 0x40]
	0x0355C794 STR V2, [X31 + 0x6]
	0x0355C798 STR X8, [X31 + 0x70]
	0x0355C79C LDR W8, [X25 + 0x18]
	0x0355C7A0 CMP X23, X8
	0x0355C7A4 B.CS 0x355C920
	0x0355C7A8 LDP V2, V0, [X31 + 0x50]
	0x0355C7AC LDR X8, [X31 + 0x70]
	0x0355C7B0 LDR V1, [X31 + 0x4]
	0x0355C7B4 ADD X9, X25, X24
	0x0355C7B8 STP V2, V0, [X9 + 0x10]
	0x0355C7BC STR X8, [X9 + 0x30]
	0x0355C7C0 STR V1, [X9]
	0x0355C7C4 LDR X25, [X19 + 0xD0]
	0x0355C7C8 ADD X24, X24, 0x38
	0x0355C7CC ADD X23, X23, 0x1
	0x0355C7D0 CBNZ X25, 0x355C71C
	0x0355C7D4 B 0x355C8A0
	0x0355C7D8 LDR X25, [X19 + 0x110]
	0x0355C7DC CBZ X25, 0x355C8A0
	0x0355C7E0 MOV X23, X31
	0x0355C7E4 MOVZ W24, 0x20
	0x0355C7E8 LDR W8, [X25 + 0x18]
	0x0355C7EC CMP X23, W8, SXTW
	0x0355C7F0 B.GE 0x355C8A4
	0x0355C7F4 LDR X0, [X21]
	0x0355C7F8 LDR W9, [X0 + 0xE0]
	0x0355C7FC CBNZ W9, 0x355C808
	0x0355C800 BL 0x1C16DFC
	0x0355C804 LDR W8, [X25 + 0x18]
	0x0355C808 CMP X23, X8
	0x0355C80C B.CS 0x355C920
	0x0355C810 ADD X0, X25, X24
	0x0355C814 BL 0x3555CB0
	0x0355C818 LDR X0, [X22]
	0x0355C81C LDR X25, [X19 + 0x110]
	0x0355C820 LDR W8, [X0 + 0xE0]
	0x0355C824 CBNZ W8, 0x355C830
	0x0355C828 BL 0x1C16DFC
	0x0355C82C LDR X0, [X22]
	0x0355C830 LDR X8, [X0 + 0xB8]
	0x0355C834 LDR X9, [X8 + 0x30]
	0x0355C838 LDP V1, V0, [X8 + 0x10]
	0x0355C83C LDR V2, [X8]
	0x0355C840 STR X9, [X31 + 0xB0]
	0x0355C844 STP V1, V0, [X31 + 0x90]
	0x0355C848 STR V2, [X31 + 0x8]
	0x0355C84C CBZ X25, 0x355C8A0
	0x0355C850 LDP V0, V1, [X31 + 0x80]
	0x0355C854 LDR V2, [X31 + 0xA]
	0x0355C858 LDR X8, [X31 + 0xB0]
	0x0355C85C STP V0, V1, [X31]
	0x0355C860 STR V2, [X31 + 0x2]
	0x0355C864 STR X8, [X31 + 0x30]
	0x0355C868 LDR W8, [X25 + 0x18]
	0x0355C86C CMP X23, X8
	0x0355C870 B.CS 0x355C920
	0x0355C874 LDP V2, V0, [X31 + 0x10]
	0x0355C878 LDR X8, [X31 + 0x30]
	0x0355C87C LDR V1, [X31]
	0x0355C880 ADD X9, X25, X24
	0x0355C884 STP V2, V0, [X9 + 0x10]
	0x0355C888 STR X8, [X9 + 0x30]
	0x0355C88C STR V1, [X9]
	0x0355C890 LDR X25, [X19 + 0x110]
	0x0355C894 ADD X24, X24, 0x38
	0x0355C898 ADD X23, X23, 0x1
	0x0355C89C CBNZ X25, 0x355C7E8
	0x0355C8A0 BL 0x1C16F20
	0x0355C8A4 LDR X19, [X19 + 0x48]
	0x0355C8A8 CBZ X19, 0x355C8A0
	0x0355C8AC LDR X8, [X19]
	0x0355C8B0 LDR X1, [X20]
	0x0355C8B4 LDRH W9, [X8 + 0x12E]
	0x0355C8B8 CBZ X9, 0x355C8DC
	0x0355C8BC LDR X10, [X8 + 0xB0]
	0x0355C8C0 ADD X10, X10, 0x8
	0x0355C8C4 LDUR X11, [X10 - 0x8]
	0x0355C8C8 CMP X11, X1
	0x0355C8CC B.EQ 0x355C8EC
	0x0355C8D0 SUBS X9, X9, 0x1
	0x0355C8D4 ADD X10, X10, 0x10
	0x0355C8D8 B.NE 0x355C8C4
	0x0355C8DC MOV X0, X19
	0x0355C8E0 MOV W2, W31
	0x0355C8E4 BL 0x1C5C788
	0x0355C8E8 B 0x355C8F8
	0x0355C8EC LDRSW X9, [X10]
	0x0355C8F0 ADD X8, X8, X9, 0x4, LSL
	0x0355C8F4 ADD X0, X8, 0x138
	0x0355C8F8 LDP X8, X1, [X0]
	0x0355C8FC MOV X0, X19
	0x0355C900 BLR X8
	0x0355C904 LDP X20, X19, [X31 + 0x100]
	0x0355C908 LDP X22, X21, [X31 + 0xF0]
	0x0355C90C LDP X24, X23, [X31 + 0xE0]
	0x0355C910 LDP X30, X25, [X31 + 0xD0]
	0x0355C914 LDR X29, [X31 + 0xC0]
	0x0355C918 ADD X31, X31, 0x110
	0x0355C91C RET
	0x0355C920 BL 0x1C16F28
	0x0355C924 MOV X0, X21
	0x0355C928 BL 0x1C16F18
	0x0355C92C B 0x355C934
	0x0355C930 B 0x355C934
	0x0355C934 MOV X22, X0
	0x0355C938 CMP W1, 0x1
	0x0355C93C B.NE 0x355C958
	0x0355C940 MOV X0, X22
	0x0355C944 BL 0x3EB1AD0
	0x0355C948 LDR X21, [X0]
	0x0355C94C BL 0x3EB1AE0
	0x0355C950 MOV W22, W31
	0x0355C954 B 0x355C670
	0x0355C958 MOV X21, X31
	0x0355C95C B 0x355C964
	0x0355C960 MOV X22, X0
	0x0355C964 LDRB W8, [X31 + 0xCC]
	0x0355C968 CBZ W8, 0x355C978
	0x0355C96C MOV X0, X20
	0x0355C970 MOV X1, X31
	0x0355C974 BL 0x33E14E4
	0x0355C978 CBNZ X21, 0x355C984
	0x0355C97C MOV X0, X22
	0x0355C980 BL 0x1D2C690
	0x0355C984 MOV X0, X21
	0x0355C988 BL 0x1C16F18
	0x0355C98C BL 0x1990590
	0x0355C990 SUB X31, X31, 0xF0
	0x0355C994 STP X29, X30, [X31 + 0x90]
	0x0355C998 STP X28, X27, [X31 + 0xA0]
	0x0355C99C STP X26, X25, [X31 + 0xB0]
	0x0355C9A0 STP X24, X23, [X31 + 0xC0]
	0x0355C9A4 STP X22, X21, [X31 + 0xD0]
	0x0355C9A8 STP X20, X19, [X31 + 0xE0]
	0x0355C9AC ADRP X21, 0xE83000
	0x0355C9B0 LDRB W8, [X21 + 0xDB2]
	0x0355C9B4 MOV W22, W2
	0x0355C9B8 MOV W20, W1
	0x0355C9BC MOV X19, X0
	0x0355C9C0 STRB W1, [X31 + 0x8C]
	0x0355C9C4 TBNZ X8, 0x0, 0x355CB20
	0x0355C9C8 ADRP X0, 0xB97000
	0x0355C9CC LDR X0, [X0 + 0x9C8]
	0x0355C9D0 BL 0x1C16CF4
	0x0355C9D4 ADRP X0, 0xB97000
	0x0355C9D8 LDR X0, [X0 + 0x618]
	0x0355C9DC BL 0x1C16CF4
	0x0355C9E0 ADRP X0, 0xBD9000
	0x0355C9E4 LDR X0, [X0 + 0x758]
	0x0355C9E8 BL 0x1C16CF4
	0x0355C9EC ADRP X0, 0xBC0000
	0x0355C9F0 LDR X0, [X0 + 0xE18]
	0x0355C9F4 BL 0x1C16CF4
	0x0355C9F8 ADRP X0, 0xBD9000
	0x0355C9FC LDR X0, [X0 + 0x3E8]
	0x0355CA00 BL 0x1C16CF4
	0x0355CA04 ADRP X0, 0xBD9000
	0x0355CA08 LDR X0, [X0 + 0x468]
	0x0355CA0C BL 0x1C16CF4
	0x0355CA10 ADRP X0, 0xB9C000
	0x0355CA14 LDR X0, [X0 + 0x348]
	0x0355CA18 BL 0x1C16CF4
	0x0355CA1C ADRP X0, 0xBD9000
	0x0355CA20 LDR X0, [X0 + 0x750]
	0x0355CA24 BL 0x1C16CF4
	0x0355CA28 ADRP X0, 0xB97000
	0x0355CA2C LDR X0, [X0 + 0xAC8]
	0x0355CA30 BL 0x1C16CF4
	0x0355CA34 ADRP X0, 0xBD9000
	0x0355CA38 LDR X0, [X0 + 0x760]
	0x0355CA3C BL 0x1C16CF4
	0x0355CA40 ADRP X0, 0xBD9000
	0x0355CA44 LDR X0, [X0 + 0x768]
	0x0355CA48 BL 0x1C16CF4
	0x0355CA4C ADRP X0, 0xBD9000
	0x0355CA50 LDR X0, [X0 + 0x638]
	0x0355CA54 BL 0x1C16CF4
	0x0355CA58 ADRP X0, 0xBD9000
	0x0355CA5C LDR X0, [X0 + 0x770]
	0x0355CA60 BL 0x1C16CF4
	0x0355CA64 ADRP X0, 0xBD9000
	0x0355CA68 LDR X0, [X0 + 0x728]
	0x0355CA6C BL 0x1C16CF4
	0x0355CA70 ADRP X0, 0xB98000
	0x0355CA74 LDR X0, [X0 + 0x2A8]
	0x0355CA78 BL 0x1C16CF4
	0x0355CA7C ADRP X0, 0xBD9000
	0x0355CA80 LDR X0, [X0 + 0x778]
	0x0355CA84 BL 0x1C16CF4
	0x0355CA88 ADRP X0, 0xBD9000
	0x0355CA8C LDR X0, [X0 + 0x780]
	0x0355CA90 BL 0x1C16CF4
	0x0355CA94 ADRP X0, 0xBD9000
	0x0355CA98 LDR X0, [X0 + 0x788]
	0x0355CA9C BL 0x1C16CF4
	0x0355CAA0 ADRP X0, 0xBD9000
	0x0355CAA4 LDR X0, [X0 + 0x790]
	0x0355CAA8 BL 0x1C16CF4
	0x0355CAAC ADRP X0, 0xBD9000
	0x0355CAB0 LDR X0, [X0 + 0x648]
	0x0355CAB4 BL 0x1C16CF4
	0x0355CAB8 ADRP X0, 0xBD9000
	0x0355CABC LDR X0, [X0 + 0x798]
	0x0355CAC0 BL 0x1C16CF4
	0x0355CAC4 ADRP X0, 0xBD9000
	0x0355CAC8 LDR X0, [X0 + 0x3F8]
	0x0355CACC BL 0x1C16CF4
	0x0355CAD0 ADRP X0, 0xB97000
	0x0355CAD4 LDR X0, [X0 + 0x988]
	0x0355CAD8 BL 0x1C16CF4
	0x0355CADC ADRP X0, 0xBD9000
	0x0355CAE0 LDR X0, [X0 + 0x650]
	0x0355CAE4 BL 0x1C16CF4
	0x0355CAE8 ADRP X0, 0xBD9000
	0x0355CAEC LDR X0, [X0 + 0x7A0]
	0x0355CAF0 BL 0x1C16CF4
	0x0355CAF4 ADRP X0, 0xBD9000
	0x0355CAF8 LDR X0, [X0 + 0x7A8]
	0x0355CAFC BL 0x1C16CF4
	0x0355CB00 ADRP X0, 0xBD9000
	0x0355CB04 LDR X0, [X0 + 0x7B0]
	0x0355CB08 BL 0x1C16CF4
	0x0355CB0C ADRP X0, 0xBD9000
	0x0355CB10 LDR X0, [X0 + 0x658]
	0x0355CB14 BL 0x1C16CF4
	0x0355CB18 MOVZ W8, 0x1
	0x0355CB1C STRB W8, [X21 + 0xDB2]
	0x0355CB20 ADRP X25, 0xBC0000
	0x0355CB24 LDR X25, [X25 + 0xE18]
	0x0355CB28 MOVI V0.2D, 0x0
	0x0355CB2C AND W21, W20, 0xFF
	0x0355CB30 AND X28, X20, 0xFF
	0x0355CB34 STRB W31, [X31 + 0x88]
	0x0355CB38 STRB W31, [X31 + 0x84]
	0x0355CB3C STP W31, W31, [X31 + 0x7C]
	0x0355CB40 STR X31, [X31 + 0x70]
	0x0355CB44 STRB W31, [X31 + 0x3C]
	0x0355CB48 STP V0, V0, [X31 + 0x50]
	0x0355CB4C STR V0, [X31 + 0x4]
	0x0355CB50 LDR X8, [X19 + 0xD8]
	0x0355CB54 CBZ X8, 0x355E2B4
	0x0355CB58 LDR W9, [X8 + 0x18]
	0x0355CB5C CMP W21, W9
	0x0355CB60 B.CS 0x355E2B8
	0x0355CB64 ADD X8, X8, X28, 0x2, LSL
	0x0355CB68 ADD X0, X8, 0x20
	0x0355CB6C MOVZ W1, 0x1
	0x0355CB70 MOV X2, X31
	0x0355CB74 BL 0x33E9064
	0x0355CB78 CMP W0, 0x1
	0x0355CB7C B.EQ 0x355CB50
	0x0355CB80 LDR X27, [X19 + 0xD0]
	0x0355CB84 CBZ X27, 0x355E2B4
	0x0355CB88 LDR W8, [X27 + 0x18]
	0x0355CB8C CMP W21, W8
	0x0355CB90 B.CS 0x355E2B8
	0x0355CB94 LDR X0, [X25]
	0x0355CB98 MOVZ W9, 0x38
	0x0355CB9C MADD X9, X28, X9, X27
	0x0355CBA0 ADD X23, X9, 0x20
	0x0355CBA4 LDR W8, [X0 + 0xE0]
	0x0355CBA8 CBNZ W8, 0x355CBB0
	0x0355CBAC BL 0x1C16DFC
	0x0355CBB0 LDR X8, [X23]
	0x0355CBB4 CBNZ X8, 0x355CBD4
	0x0355CBB8 LDRB W8, [X19 + 0x128]
	0x0355CBBC CMP W8, 0x7E
	0x0355CBC0 B.HI 0x355CBD4
	0x0355CBC4 MOV X0, X19
	0x0355CBC8 MOV W1, W20
	0x0355CBCC MOV X2, X23
	0x0355CBD0 BL 0x355E2C8
	0x0355CBD4 LDR X0, [X25]
	0x0355CBD8 LDR W8, [X0 + 0xE0]
	0x0355CBDC CBNZ W8, 0x355CBE4
	0x0355CBE0 BL 0x1C16DFC
	0x0355CBE4 MOV X0, X23
	0x0355CBE8 BL 0x3555E6C
	0x0355CBEC TBZ X0, 0x0, 0x355CC28
	0x0355CBF0 LDR X8, [X19 + 0xD8]
	0x0355CBF4 CBZ X8, 0x355E2B4
	0x0355CBF8 LDR W9, [X8 + 0x18]
	0x0355CBFC CMP W21, W9
	0x0355CC00 B.CS 0x355E2B8
	0x0355CC04 ADD X8, X8, X28, 0x2, LSL
	0x0355CC08 ADD X0, X8, 0x20
	0x0355CC0C MOV W1, W31
	0x0355CC10 MOV X2, X31
	0x0355CC14 BL 0x33E9064
	0x0355CC18 LDRB W8, [X19 + 0xE1]
	0x0355CC1C ADD W8, W8, 0x1
	0x0355CC20 STRB W8, [X19 + 0xE1]
	0x0355CC24 B 0x355D794
	0x0355CC28 LDR X0, [X25]
	0x0355CC2C LDR W8, [X0 + 0xE0]
	0x0355CC30 CBNZ W8, 0x355CC38
	0x0355CC34 BL 0x1C16DFC
	0x0355CC38 LDR X8, [X23]
	0x0355CC3C CBZ X8, 0x355D004
	0x0355CC40 STR X23, [X31 + 0x10]
	0x0355CC44 MOV X20, X19
	0x0355CC48 ADRP X21, 0xBD9000
	0x0355CC4C LDR X21, [X21 + 0x750]
	0x0355CC50 LDRB W23, [X20 + 0xE1]!
	0x0355CC54 MOVZ W8, 0x38
	0x0355CC58 MADD X8, X28, X8, X27
	0x0355CC5C AND W26, W22, 0xFF
	0x0355CC60 ADD X29, X8, 0x52
	0x0355CC64 SUB X22, X20, 0x1
	0x0355CC68 LDR X0, [X25]
	0x0355CC6C LDR W8, [X0 + 0xE0]
	0x0355CC70 CBNZ W8, 0x355CC78
	0x0355CC74 BL 0x1C16DFC
	0x0355CC78 LDRB W8, [X29]
	0x0355CC7C CMP W8, W23, UXTB
	0x0355CC80 B.EQ 0x355D05C
	0x0355CC84 LDR X8, [X19 + 0xC8]
	0x0355CC88 CBZ X8, 0x355E2B4
	0x0355CC8C LDR X23, [X8 + 0x18]
	0x0355CC90 CBZ X23, 0x355E2B4
	0x0355CC94 LDR X8, [X23]
	0x0355CC98 ADRP X10, 0xB9C000
	0x0355CC9C LDRH W9, [X8 + 0x12E]
	0x0355CCA0 LDR X10, [X10 + 0x348]
	0x0355CCA4 LDR X1, [X10]
	0x0355CCA8 CBZ X9, 0x355CCCC
	0x0355CCAC LDR X10, [X8 + 0xB0]
	0x0355CCB0 ADD X10, X10, 0x8
	0x0355CCB4 LDUR X11, [X10 - 0x8]
	0x0355CCB8 CMP X11, X1
	0x0355CCBC B.EQ 0x355CCDC
	0x0355CCC0 SUBS X9, X9, 0x1
	0x0355CCC4 ADD X10, X10, 0x10
	0x0355CCC8 B.NE 0x355CCB4
	0x0355CCCC MOV X0, X23
	0x0355CCD0 MOV W2, W31
	0x0355CCD4 BL 0x1C5C788
	0x0355CCD8 B 0x355CCE8
	0x0355CCDC LDRSW X9, [X10]
	0x0355CCE0 ADD X8, X8, X9, 0x4, LSL
	0x0355CCE4 ADD X0, X8, 0x138
	0x0355CCE8 LDP X8, X1, [X0]
	0x0355CCEC MOV X0, X23
	0x0355CCF0 BLR X8
	0x0355CCF4 CMP W0, 0x5
	0x0355CCF8 B.LT 0x355CF18
	0x0355CCFC LDR X8, [X19 + 0xC8]
	0x0355CD00 CBZ X8, 0x355E2B4
	0x0355CD04 LDR X23, [X8 + 0x18]
	0x0355CD08 ADRP X8, 0xB97000
	0x0355CD0C LDR X8, [X8 + 0xAC8]
	0x0355CD10 MOVZ W1, 0xA
	0x0355CD14 LDR X0, [X8]
	0x0355CD18 BL 0x1C16D6C
	0x0355CD1C CBZ X0, 0x355E2B4
	0x0355CD20 LDR W8, [X0 + 0x18]
	0x0355CD24 MOV X24, X0
	0x0355CD28 CBZ W8, 0x355E2B8
	0x0355CD2C LDR X9, [X19 + 0xB8]
	0x0355CD30 CMP W8, 0x1
	0x0355CD34 STR X9, [X24 + 0x20]
	0x0355CD38 B.EQ 0x355E2B8
	0x0355CD3C ADRP X8, 0xBD9000
	0x0355CD40 LDR X8, [X8 + 0x648]
	0x0355CD44 ADD X0, X31, 0x8C
	0x0355CD48 MOV X1, X31
	0x0355CD4C LDR X8, [X8]
	0x0355CD50 STR X8, [X24 + 0x28]
	0x0355CD54 BL 0x3319BB4
	0x0355CD58 LDR W8, [X24 + 0x18]
	0x0355CD5C CMP W8, 0x2
	0x0355CD60 B.LS 0x355E2B8
	0x0355CD64 CMP W8, 0x3
	0x0355CD68 STR X0, [X24 + 0x30]
	0x0355CD6C B.EQ 0x355E2B8
	0x0355CD70 ADRP X8, 0xBD9000
	0x0355CD74 LDR X8, [X8 + 0x638]
	0x0355CD78 LDR X8, [X8]
	0x0355CD7C STR X8, [X24 + 0x38]
	0x0355CD80 LDR X0, [X25]
	0x0355CD84 LDR W8, [X0 + 0xE0]
	0x0355CD88 CBNZ W8, 0x355CD90
	0x0355CD8C BL 0x1C16DFC
	0x0355CD90 LDRB W8, [X29]
	0x0355CD94 ADD X0, X31, 0x88
	0x0355CD98 MOV X1, X31
	0x0355CD9C STRB W8, [X31 + 0x88]
	0x0355CDA0 BL 0x3319BB4
	0x0355CDA4 LDR W8, [X24 + 0x18]
	0x0355CDA8 CMP W8, 0x4
	0x0355CDAC B.LS 0x355E2B8
	0x0355CDB0 CMP W8, 0x5
	0x0355CDB4 STR X0, [X24 + 0x40]
	0x0355CDB8 B.EQ 0x355E2B8
	0x0355CDBC ADRP X8, 0xBD9000
	0x0355CDC0 LDR X8, [X8 + 0x728]
	0x0355CDC4 MOV X0, X22
	0x0355CDC8 MOV X1, X31
	0x0355CDCC LDR X8, [X8]
	0x0355CDD0 STR X8, [X24 + 0x48]
	0x0355CDD4 BL 0x3319BB4
	0x0355CDD8 LDR W8, [X24 + 0x18]
	0x0355CDDC CMP W8, 0x6
	0x0355CDE0 B.LS 0x355E2B8
	0x0355CDE4 CMP W8, 0x7
	0x0355CDE8 STR X0, [X24 + 0x50]
	0x0355CDEC B.EQ 0x355E2B8
	0x0355CDF0 ADRP X8, 0xBD9000
	0x0355CDF4 LDR X8, [X8 + 0x7B0]
	0x0355CDF8 MOV X0, X20
	0x0355CDFC MOV X1, X31
	0x0355CE00 LDR X8, [X8]
	0x0355CE04 STR X8, [X24 + 0x58]
	0x0355CE08 BL 0x3319BB4
	0x0355CE0C LDR W8, [X24 + 0x18]
	0x0355CE10 CMP W8, 0x8
	0x0355CE14 B.LS 0x355E2B8
	0x0355CE18 CMP W8, 0x9
	0x0355CE1C STR X0, [X24 + 0x60]
	0x0355CE20 B.EQ 0x355E2B8
	0x0355CE24 ADRP X8, 0xBD9000
	0x0355CE28 LDR X8, [X8 + 0x7A8]
	0x0355CE2C MOV X0, X24
	0x0355CE30 MOV X1, X31
	0x0355CE34 LDR X8, [X8]
	0x0355CE38 STR X8, [X24 + 0x68]
	0x0355CE3C BL 0x32278CC
	0x0355CE40 ADRP X8, 0xB97000
	0x0355CE44 LDR X8, [X8 + 0x9C8]
	0x0355CE48 MOV X24, X0
	0x0355CE4C LDR X25, [X8]
	0x0355CE50 LDR X8, [X25 + 0x38]
	0x0355CE54 CBNZ X8, 0x355CE64
	0x0355CE58 MOV X0, X25
	0x0355CE5C BL 0x1C5C6E0
	0x0355CE60 LDR X8, [X25 + 0x38]
	0x0355CE64 LDR X0, [X8 + 0x10]
	0x0355CE68 LDRB W8, [X0 + 0x135]
	0x0355CE6C TBNZ X8, 0x0, 0x355CE74
	0x0355CE70 BL 0x1C5C684
	0x0355CE74 LDR W8, [X0 + 0xE0]
	0x0355CE78 CBNZ W8, 0x355CE80
	0x0355CE7C BL 0x1C16DFC
	0x0355CE80 LDR X8, [X25 + 0x38]
	0x0355CE84 LDR X0, [X8 + 0x10]
	0x0355CE88 LDRB W8, [X0 + 0x135]
	0x0355CE8C TBNZ X8, 0x0, 0x355CE94
	0x0355CE90 BL 0x1C5C684
	0x0355CE94 CBZ X23, 0x355E2B4
	0x0355CE98 LDR X9, [X0 + 0xB8]
	0x0355CE9C LDR X8, [X23]
	0x0355CEA0 ADRP X10, 0xB9C000
	0x0355CEA4 LDR X25, [X9]
	0x0355CEA8 LDRH W9, [X8 + 0x12E]
	0x0355CEAC LDR X10, [X10 + 0x348]
	0x0355CEB0 LDR X1, [X10]
	0x0355CEB4 CBZ X9, 0x355CED8
	0x0355CEB8 LDR X10, [X8 + 0xB0]
	0x0355CEBC ADD X10, X10, 0x8
	0x0355CEC0 LDUR X11, [X10 - 0x8]
	0x0355CEC4 CMP X11, X1
	0x0355CEC8 B.EQ 0x355CEE8
	0x0355CECC SUBS X9, X9, 0x1
	0x0355CED0 ADD X10, X10, 0x10
	0x0355CED4 B.NE 0x355CEC0
	0x0355CED8 MOVZ W2, 0x1
	0x0355CEDC MOV X0, X23
	0x0355CEE0 BL 0x1C5C788
	0x0355CEE4 B 0x355CEF8
	0x0355CEE8 LDR W9, [X10]
	0x0355CEEC ADD W9, W9, 0x1
	0x0355CEF0 ADD X8, X8, W9, 0x4, SXTW
	0x0355CEF4 ADD X0, X8, 0x138
	0x0355CEF8 LDP X8, X4, [X0]
	0x0355CEFC MOVZ W1, 0x5
	0x0355CF00 MOV X0, X23
	0x0355CF04 MOV X2, X24
	0x0355CF08 MOV X3, X25
	0x0355CF0C BLR X8
	0x0355CF10 ADRP X25, 0xBC0000
	0x0355CF14 LDR X25, [X25 + 0xE18]
	0x0355CF18 LDR X0, [X21]
	0x0355CF1C LDR X23, [X19 + 0x48]
	0x0355CF20 LDR W8, [X0 + 0xE0]
	0x0355CF24 CBNZ W8, 0x355CF2C
	0x0355CF28 BL 0x1C16DFC
	0x0355CF2C CBZ X23, 0x355E2B4
	0x0355CF30 ADRP X9, 0xBD9000
	0x0355CF34 LDR X8, [X23]
	0x0355CF38 LDR X10, [X21]
	0x0355CF3C LDR X9, [X9 + 0x468]
	0x0355CF40 LDR X24, [X10 + 0xB8]
	0x0355CF44 LDR X1, [X9]
	0x0355CF48 LDRH W9, [X8 + 0x12E]
	0x0355CF4C CBZ X9, 0x355CF70
	0x0355CF50 LDR X10, [X8 + 0xB0]
	0x0355CF54 ADD X10, X10, 0x8
	0x0355CF58 LDUR X11, [X10 - 0x8]
	0x0355CF5C CMP X11, X1
	0x0355CF60 B.EQ 0x355CF80
	0x0355CF64 SUBS X9, X9, 0x1
	0x0355CF68 ADD X10, X10, 0x10
	0x0355CF6C B.NE 0x355CF58
	0x0355CF70 MOVZ W2, 0x2
	0x0355CF74 MOV X0, X23
	0x0355CF78 BL 0x1C5C788
	0x0355CF7C B 0x355CF90
	0x0355CF80 LDR W9, [X10]
	0x0355CF84 ADD W9, W9, 0x2
	0x0355CF88 ADD X8, X8, W9, 0x4, SXTW
	0x0355CF8C ADD X0, X8, 0x138
	0x0355CF90 LDP X8, X2, [X0]
	0x0355CF94 MOV X0, X23
	0x0355CF98 MOV X1, X24
	0x0355CF9C BLR X8
	0x0355CFA0 LDR X8, [X19 + 0xC8]
	0x0355CFA4 CBZ X8, 0x355E2B4
	0x0355CFA8 LDR W9, [X8 + 0x28]
	0x0355CFAC ADD W9, W9, 0x1
	0x0355CFB0 STR W9, [X8 + 0x28]
	0x0355CFB4 LDRB W8, [X20]
	0x0355CFB8 ADD W23, W8, 0x1
	0x0355CFBC SUB W8, W26, W23
	0x0355CFC0 AND W8, W8, 0xFF
	0x0355CFC4 CMP W8, 0x7F
	0x0355CFC8 STRB W23, [X20]
	0x0355CFCC B.CC 0x355CC68
	0x0355CFD0 LDR X8, [X19 + 0xD8]
	0x0355CFD4 CBZ X8, 0x355E2B4
	0x0355CFD8 LDRB W9, [X31 + 0x8C]
	0x0355CFDC LDR W10, [X8 + 0x18]
	0x0355CFE0 CMP W9, W10
	0x0355CFE4 B.CS 0x355E2B8
	0x0355CFE8 ADD X8, X8, X9, 0x2, LSL
	0x0355CFEC ADD X0, X8, 0x20
	0x0355CFF0 MOV W1, W31
	0x0355CFF4 MOV X2, X31
	0x0355CFF8 BL 0x33E9064
	0x0355CFFC MOV W0, W31
	0x0355D000 B 0x355D798
	0x0355D004 LDR X8, [X19 + 0xC8]
	0x0355D008 CBZ X8, 0x355E2B4
	0x0355D00C LDR X20, [X8 + 0x18]
	0x0355D010 CBZ X20, 0x355E2B4
	0x0355D014 ADRP X23, 0xB9B000
	0x0355D018 LDR X8, [X20]
	0x0355D01C LDR X23, [X23 + 0x348]
	0x0355D020 LDRH W9, [X8 + 0x12E]
	0x0355D024 LDR X1, [X23]
	0x0355D028 CBZ X9, 0x355D04C
	0x0355D02C LDR X10, [X8 + 0xB0]
	0x0355D030 ADD X10, X10, 0x8
	0x0355D034 LDUR X11, [X10 - 0x8]
	0x0355D038 CMP X11, X1
	0x0355D03C B.EQ 0x355D164
	0x0355D040 SUBS X9, X9, 0x1
	0x0355D044 ADD X10, X10, 0x10
	0x0355D048 B.NE 0x355D034
	0x0355D04C MOV X0, X20
	0x0355D050 MOV W2, W31
	0x0355D054 BL 0x1C5C788
	0x0355D058 B 0x355D170
	0x0355D05C LDRB W8, [X20]
	0x0355D060 ADD W8, W8, 0x1
	0x0355D064 STRB W8, [X20]
	0x0355D068 LDR X0, [X25]
	0x0355D06C LDR W8, [X0 + 0xE0]
	0x0355D070 CBNZ W8, 0x355D078
	0x0355D074 BL 0x1C16DFC
	0x0355D078 MOVZ W8, 0x38
	0x0355D07C MADD X9, X28, X8, X27
	0x0355D080 LDRB W8, [X9 + 0x51]!
	0x0355D084 LDR X26, [X31 + 0x10]
	0x0355D088 ANDS W8, W8, 0x30
	0x0355D08C B.EQ 0x355D370
	0x0355D090 CMP W8, 0x20
	0x0355D094 B.NE 0x355D3C0
	0x0355D098 MOVZ W8, 0x1
	0x0355D09C STRB W8, [X19 + 0x129]
	0x0355D0A0 LDR X0, [X25]
	0x0355D0A4 STR X9, [X31 + 0x8]
	0x0355D0A8 LDR W8, [X0 + 0xE0]
	0x0355D0AC CBNZ W8, 0x355D0B4
	0x0355D0B0 BL 0x1C16DFC
	0x0355D0B4 LDR X8, [X26]
	0x0355D0B8 CBZ X8, 0x355E2B4
	0x0355D0BC MOVZ W9, 0x38
	0x0355D0C0 MADD X9, X28, X9, X27
	0x0355D0C4 ADD X21, X9, 0x28
	0x0355D0C8 ADD X20, X9, 0x2C
	0x0355D0CC LDR W9, [X20]
	0x0355D0D0 LDR W10, [X21]
	0x0355D0D4 LDR W11, [X8 + 0x18]
	0x0355D0D8 ADD W9, W9, W10
	0x0355D0DC SUB W9, W9, 0x1
	0x0355D0E0 CMP W9, W11
	0x0355D0E4 B.CS 0x355E2B8
	0x0355D0E8 ADD X8, X8, W9, SXTW
	0x0355D0EC LDRB W8, [X8 + 0x20]
	0x0355D0F0 STRB W8, [X31 + 0x84]
	0x0355D0F4 CBZ W8, 0x355D444
	0x0355D0F8 LDR X0, [X25]
	0x0355D0FC LDR W9, [X0 + 0xE0]
	0x0355D100 CBNZ W9, 0x355D10C
	0x0355D104 BL 0x1C16DFC
	0x0355D108 LDRB W8, [X31 + 0x84]
	0x0355D10C LDR W9, [X20]
	0x0355D110 SUB W9, W9, 0x1
	0x0355D114 MUL W1, W9, W8
	0x0355D118 STR W1, [X31 + 0x80]
	0x0355D11C LDR X8, [X19 + 0x108]
	0x0355D120 STR W9, [X31 + 0x1C]
	0x0355D124 CBZ X8, 0x355E2B4
	0x0355D128 LDR X9, [X8 + 0x18]
	0x0355D12C CMP W9, 0x1
	0x0355D130 B.LT 0x355D620
	0x0355D134 MOV W25, W31
	0x0355D138 CMP W25, W9
	0x0355D13C B.CS 0x355E2B8
	0x0355D140 ADD X10, X8, W25, 0x3, SXTW
	0x0355D144 LDR X10, [X10 + 0x20]
	0x0355D148 CBZ X10, 0x355D624
	0x0355D14C LDRB W10, [X10 + 0x10]
	0x0355D150 CBNZ W10, 0x355D624
	0x0355D154 ADD W25, W25, 0x1
	0x0355D158 CMP W25, W9
	0x0355D15C B.LT 0x355D138
	0x0355D160 B 0x355D624
	0x0355D164 LDRSW X9, [X10]
	0x0355D168 ADD X8, X8, X9, 0x4, LSL
	0x0355D16C ADD X0, X8, 0x138
	0x0355D170 LDP X8, X1, [X0]
	0x0355D174 MOV X0, X20
	0x0355D178 BLR X8
	0x0355D17C CMP W0, 0x5
	0x0355D180 B.LT 0x355D400
	0x0355D184 LDR X8, [X19 + 0xC8]

ISIL:
	001 Subtract X31, X31, 400
	002 Move [X31+320], X29
	003 Move [X31+336], X30
	004 Move [X31+344], X25
	005 Move [X31+352], X24
	006 Move [X31+360], X23
	007 Move [X31+368], X22
	008 Move [X31+376], X21
	009 Move [X31+384], X20
	010 Move [X31+392], X19
	011 Move X21, 0xE84000
	012 Move [X31+332], W2
	013 Move X24, 0xBC1000
	014 Move W8, [X21+3502]
	015 Move X24, [X24+3608]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {72}
	022 Move X0, 0xB98000
	023 Move X0, [X0+2504]
	024 Call 0x1C17CF4
	025 Move X0, 0xBDA000
	026 Move X0, [X0+1800]
	027 Call 0x1C17CF4
	028 Move X0, 0xBDA000
	029 Move X0, [X0+1808]
	030 Call 0x1C17CF4
	031 Move X0, 0xBDA000
	032 Move X0, [X0+1816]
	033 Call 0x1C17CF4
	034 Move X0, 0xBDA000
	035 Move X0, [X0+1824]
	036 Call 0x1C17CF4
	037 Move X0, 0xBC1000
	038 Move X0, [X0+3608]
	039 Call 0x1C17CF4
	040 Move X0, 0xBDA000
	041 Move X0, [X0+1000]
	042 Call 0x1C17CF4
	043 Move X0, 0xB9D000
	044 Move X0, [X0+840]
	045 Call 0x1C17CF4
	046 Move X0, 0xB98000
	047 Move X0, [X0+2760]
	048 Call 0x1C17CF4
	049 Move X0, 0xBDA000
	050 Move X0, [X0+1592]
	051 Call 0x1C17CF4
	052 Move X0, 0xBDA000
	053 Move X0, [X0+1832]
	054 Call 0x1C17CF4
	055 Move X0, 0xBDA000
	056 Move X0, [X0+1840]
	057 Call 0x1C17CF4
	058 Move X0, 0xBDA000
	059 Move X0, [X0+1848]
	060 Call 0x1C17CF4
	061 Move X0, 0xBDA000
	062 Move X0, [X0+1608]
	063 Call 0x1C17CF4
	064 Move X0, 0xBDA000
	065 Move X0, [X0+1616]
	066 Call 0x1C17CF4
	067 Move X0, 0xBDA000
	068 Move X0, [X0+1856]
	069 Call 0x1C17CF4
	070 Move W8, 1
	071 Move [X21+3502], W8
	072 Move X0, [X24]
	073 NotImplemented "Instruction MOVI not yet implemented."
	074 Move [X31+328], W31
	075 Move [X31+240], X31
	076 Move [X31+208], V0
	077 Move [X31+216], V0
	078 Move [X31+12], V0
	079 Move [X31+188], W31
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X0, X20
	085 Call FrameBuffer.get_IsConfig, X0
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {317}
	090 Move X0, [X24]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move W8, [X20+49]
	096 And W31, W8, 48
	097 Move X8, [X19+200]
	098 Compare X8, 0
	099 JumpIfEqual {273}
	100 Move X21, [X8+24]
	101 Move X8, 0xB98000
	102 Move X8, [X8+2760]
	103 Move W1, 10
	104 Move X0, [X8]
	105 Call 0x1C17D6C
	106 Compare X0, 0
	107 JumpIfEqual {273}
	108 Move W8, [X0+24]
	109 Move X22, X0
	110 Compare W8, 0
	111 JumpIfEqual {808}
	112 Move X9, [X19+184]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move [X22+32], X9
	115 Move X8, 0xBDA000
	116 Move X8, [X8+1608]
	117 Add X0, X31, 332
	118 Move X1, X31
	119 Move X8, [X8]
	120 Move [X22+40], X8
	121 Call Byte.ToString, X0
	122 Move W8, [X22+24]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move [X22+48], X0
	126 Move X8, 0xBDA000
	127 Move X8, [X8+1592]
	128 Move X8, [X8]
	129 Move [X22+56], X8
	130 Move X0, [X24]
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {135}
	134 Call 0x1C17DFC
	135 Move W8, [X20+50]
	136 Add X0, X31, 328
	137 Move X1, X31
	138 Move [X31+328], W8
	139 Call Byte.ToString, X0
	140 Move W8, [X22+24]
	141 NotImplemented "Instruction CMP not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move [X22+64], X0
	144 Move X8, 0xBDA000
	145 Move X8, [X8+1832]
	146 Add X0, X19, 224
	147 Move X1, X31
	148 Move X8, [X8]
	149 Move [X22+72], X8
	150 Call Byte.ToString, X0
	151 Move W8, [X22+24]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move [X22+80], X0
	155 Move X8, 0xBDA000
	156 Move X8, [X8+1616]
	157 Move X9, 0xBDA000
	158 Move TEMP, 0
	159 Not TEMP
	160 Move X10, TEMP
	161 Add X0, X31, 256
	162 Move X8, [X8]
	163 Move X9, [X9+1000]
	164 Move X1, X31
	165 Move [X22+88], X8
	166 Move X8, [X9]
	167 Move W9, [X20+49]
	168 Move [X31+256], X8
	169 Move [X31+264], X10
	170 Move [X31+272], W9
	171 Call Enum.ToString, X0
	172 Move W8, [X22+24]
	173 NotImplemented "Instruction CMP not yet implemented."
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move [X22+96], X0
	176 Move X8, 0xBDA000
	177 Move X8, [X8+1848]
	178 Move X0, X22
	179 Move X1, X31
	180 Move X8, [X8]
	181 Move [X22+104], X8
	182 Call String.Concat, X0
	183 Move X8, 0xB98000
	184 Move X8, [X8+2504]
	185 Move X22, X0
	186 Move X23, [X8]
	187 Move X8, [X23+56]
	188 Compare X8, 0
	189 JumpIfNotEqual {193}
	190 Move X0, X23
	191 Call 0x1C5D6E0
	192 Move X8, [X23+56]
	193 Move X0, [X8+16]
	194 Move W8, [X0+309]
	195 Move TEMP, X8
	196 And TEMP, TEMP, 1
	197 Compare TEMP, 1
	198 JumpIfEqual {200}
	199 Call 0x1C5D684
	200 Move W8, [X0+224]
	201 Compare W8, 0
	202 JumpIfNotEqual {204}
	203 Call 0x1C17DFC
	204 Move X8, [X23+56]
	205 Move X0, [X8+16]
	206 Move W8, [X0+309]
	207 Move TEMP, X8
	208 And TEMP, TEMP, 1
	209 Compare TEMP, 1
	210 JumpIfEqual {212}
	211 Call 0x1C5D684
	212 Compare X21, 0
	213 JumpIfEqual {273}
	214 Move X10, 0xB9D000
	215 Move X9, [X0+184]
	216 Move X8, [X21]
	217 Move X10, [X10+840]
	218 Move X23, [X9]
	219 NotImplemented "Instruction LDRH not yet implemented."
	220 Move X1, [X10]
	221 Compare X9, 0
	222 JumpIfEqual {229}
	223 Move X10, [X8+176]
	224 Add X10, X10, 8
	225 NotImplemented "Instruction LDUR not yet implemented."
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Subtract X9, X9, 1
	228 Add X10, X10, 16
	229 Move W2, 1
	230 Move X0, X21
	231 Call 0x1C5D788
	232 Move X0, [X19+248]
	233 Compare X0, 0
	234 JumpIfEqual {273}
	235 Move X21, 0xBDA000
	236 Move X22, 0xBDA000
	237 Move X23, 0xBDA000
	238 Move X21, [X21+1824]
	239 Move X22, [X22+1816]
	240 Move X23, [X23+1808]
	241 Move X1, [X21]
	242 Call 0x2991514, X0
	243 Move TEMP, X0
	244 And TEMP, TEMP, 1
	245 Compare TEMP, 1
	246 JumpIfEqual {274}
	247 Move X0, [X19+248]
	248 Compare X0, 0
	249 JumpIfEqual {273}
	250 Move X1, [X22]
	251 Call 0x29918F0, X0
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Move X0, [X19+248]
	254 Compare X0, 0
	255 JumpIfEqual {273}
	256 Move X2, [X23]
	257 Add X1, X31, 192
	258 Call 0x29927E8, X0, X1
	259 Move TEMP, X0
	260 And TEMP, TEMP, 1
	261 Compare TEMP, 1
	262 JumpIfNotEqual {270}
	263 Move X0, [X24]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Add X0, X31, 192
	269 Call FrameBuffer.Release, X0
	270 Move X0, [X19+248]
	271 Compare X0, 0
	272 JumpIfNotEqual {241}
	273 Call 0x1C17F20
	274 Move V2, [X20+16]
	275 Move V0, [X20+32]
	276 Move X8, [X20+48]
	277 Move V1, [X20]
	278 Move X0, [X19+248]
	279 Move [X31+144], V2
	280 Move [X31+152], V0
	281 Move [X31+176], X8
	282 Move [X31+8], V1
	283 Compare X0, 0
	284 JumpIfEqual {273}
	285 Move X8, 0xBDA000
	286 Move X8, [X8+1800]
	287 Move V0, [X31+128]
	288 Move V1, [X31+144]
	289 Move V2, [X31+10]
	290 Move X9, [X31+176]
	291 Move X2, [X8]
	292 Add X1, X31, 256
	293 Move [X31+256], V0
	294 Move [X31+264], V1
	295 Move [X31+18], V2
	296 Move [X31+304], X9
	297 Call 0x29924E0, X0, X1
	298 Move X0, [X24]
	299 Move W8, [X0+224]
	300 Compare W8, 0
	301 JumpIfNotEqual {303}
	302 Call 0x1C17DFC
	303 Move W8, [X20+28]
	304 Add W8, W8, 1
	305 Move [X20+28], W8
	306 Move W9, [X10]
	307 Add W9, W9, 1
	308 Add X8, X8, W9
	309 Add X0, X8, 312
	310 Move X8, [X0]
	311 Move X4, [X0+8]
	312 Move W1, 1
	313 Move X0, X21
	314 Move X2, X22
	315 Move X3, X23
	316 NotImplemented "Instruction BLR not yet implemented."
	317 Move W8, [X19+256]
	318 Compare W8, 0
	319 JumpIfNotEqual {343}
	320 Move X0, [X24]
	321 Move W8, [X0+224]
	322 Compare W8, 0
	323 JumpIfNotEqual {325}
	324 Call 0x1C17DFC
	325 Move X0, X20
	326 Call FrameBuffer.get_IsFEC, X0
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfEqual {343}
	331 Move W8, 1
	332 Move [X19+256], W8
	333 Move X0, [X24]
	334 Move W8, [X0+224]
	335 Compare W8, 0
	336 JumpIfNotEqual {338}
	337 Call 0x1C17DFC
	338 Move W8, [X20+50]
	339 Move [X19+225], W8
	340 Move [X19+224], W8
	341 Move W8, [X31+332]
	342 Move [X19+226], W8
	343 Move X0, [X24]
	344 Move W8, [X0+224]
	345 Compare W8, 0
	346 JumpIfNotEqual {348}
	347 Call 0x1C17DFC
	348 Move X0, X20
	349 Call FrameBuffer.get_IsFEC, X0
	350 Move TEMP, X0
	351 And TEMP, TEMP, 1
	352 Compare TEMP, 1
	353 JumpIfNotEqual {450}
	354 Move X8, [X19+280]
	355 Compare X8, 0
	356 JumpIfEqual {273}
	357 Move W9, [X31+332]
	358 Move W10, [X8+24]
	359 NotImplemented "Instruction CMP not yet implemented."
	360 Add X8, X8, X9
	361 Add X0, X8, 32
	362 Move W1, 1
	363 Move X2, X31
	364 Call Interlocked.Exchange, X0, X1
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Move X21, [X19+272]
	367 Compare X21, 0
	368 JumpIfEqual {273}
	369 Move X0, [X24]
	370 Move W22, [X31+332]
	371 Move W8, [X0+224]
	372 Compare W8, 0
	373 JumpIfNotEqual {375}
	374 Call 0x1C17DFC
	375 Move W8, [X21+24]
	376 NotImplemented "Instruction CMP not yet implemented."
	377 Move W8, 56
	378 NotImplemented "Instruction UMADDL not yet implemented."
	379 Add X0, X8, 32
	380 Call FrameBuffer.Release, X0
	381 Move X9, [X19+272]
	382 Move V2, [X20+16]
	383 Move V0, [X20+32]
	384 Move X10, [X20+48]
	385 Move V1, [X20]
	386 Move W8, [X31+332]
	387 Move [X31+272], V2
	388 Move [X31+280], V0
	389 Move [X31+304], X10
	390 Move [X31+16], V1
	391 Compare X9, 0
	392 JumpIfEqual {273}
	393 Move V0, [X31+256]
	394 Move V1, [X31+272]
	395 Move V2, [X31+18]
	396 Move X10, [X31+304]
	397 Move [X31+64], V0
	398 Move [X31+72], V1
	399 Move [X31+6], V2
	400 Move [X31+112], X10
	401 Move W10, [X9+24]
	402 NotImplemented "Instruction CMP not yet implemented."
	403 Move V2, [X31+80]
	404 Move V0, [X31+96]
	405 Move X11, [X31+112]
	406 Move V1, [X31+4]
	407 Move W10, 56
	408 NotImplemented "Instruction MADD not yet implemented."
	409 Move [X9+80], X11
	410 Move [X9+48], V2
	411 Move [X9+56], V0
	412 Move [X9+2], V1
	413 Move X9, [X19+280]
	414 Compare X9, 0
	415 JumpIfEqual {273}
	416 Move W10, [X9+24]
	417 NotImplemented "Instruction CMP not yet implemented."
	418 Add X8, X9, X8
	419 Add X0, X8, 32
	420 Move W1, W31
	421 Move X2, X31
	422 Call Interlocked.Exchange, X0, X1
	423 Move W9, [X20+28]
	424 Move X8, [X20]
	425 Add W9, W9, 1
	426 Move [X20+28], W9
	427 Compare X8, 0
	428 JumpIfEqual {273}
	429 Move W10, [X20+8]
	430 Move W9, [X20+12]
	431 Move W11, [X8+24]
	432 Add W9, W9, W10
	433 Subtract W9, W9, 1
	434 NotImplemented "Instruction CMP not yet implemented."
	435 Add X8, X8, W9
	436 Move W8, [X8+32]
	437 Move W9, [X31+332]
	438 NotImplemented "Instruction CMP not yet implemented."
	439 Move X10, [X19+288]
	440 Compare X10, 0
	441 JumpIfEqual {273}
	442 Move W11, [X10+24]
	443 NotImplemented "Instruction CMP not yet implemented."
	444 Add X10, X10, W8
	445 Move [X10+32], W9
	446 Move W9, [X31+332]
	447 Add W8, W8, 1
	448 NotImplemented "Instruction CMP not yet implemented."
	449 Move [X19+296], W31
	450 Move X8, [X19+216]
	451 Compare X8, 0
	452 JumpIfEqual {273}
	453 Move W9, [X31+332]
	454 Move W10, [X8+24]
	455 NotImplemented "Instruction CMP not yet implemented."
	456 Add X8, X8, X9
	457 Add X0, X8, 32
	458 Move W1, 1
	459 Move X2, X31
	460 Call Interlocked.Exchange, X0, X1
	461 NotImplemented "Instruction CMP not yet implemented."
	462 Move X21, [X19+208]
	463 Compare X21, 0
	464 JumpIfEqual {273}
	465 Move X0, [X24]
	466 Move W22, [X31+332]
	467 Move W8, [X0+224]
	468 Compare W8, 0
	469 JumpIfNotEqual {471}
	470 Call 0x1C17DFC
	471 Move W8, [X21+24]
	472 NotImplemented "Instruction CMP not yet implemented."
	473 Move W8, 56
	474 NotImplemented "Instruction UMADDL not yet implemented."
	475 Add X0, X8, 32
	476 Call FrameBuffer.Release, X0
	477 Move X9, [X19+208]
	478 Move V2, [X20+16]
	479 Move V0, [X20+32]
	480 Move X10, [X20+48]
	481 Move V1, [X20]
	482 Move W8, [X31+332]
	483 Move [X31+272], V2
	484 Move [X31+280], V0
	485 Move [X31+304], X10
	486 Move [X31+16], V1
	487 Compare X9, 0
	488 JumpIfEqual {273}
	489 Move V0, [X31+256]
	490 Move V1, [X31+272]
	491 Move V2, [X31+18]
	492 Move X10, [X31+304]
	493 Move [X31], V0
	494 Move [X31+8], V1
	495 Move [X31+2], V2
	496 Move [X31+48], X10
	497 Move W10, [X9+24]
	498 NotImplemented "Instruction CMP not yet implemented."
	499 Move V2, [X31+16]
	500 Move V0, [X31+32]
	501 Move X11, [X31+48]
	502 Move V1, [X31]
	503 Move W10, 56
	504 NotImplemented "Instruction MADD not yet implemented."
	505 Move [X9+80], X11
	506 Move [X9+48], V2
	507 Move [X9+56], V0
	508 Move [X9+2], V1
	509 Move X9, [X19+216]
	510 Compare X9, 0
	511 JumpIfEqual {273}
	512 Move W10, [X9+24]
	513 NotImplemented "Instruction CMP not yet implemented."
	514 Add X8, X9, X8
	515 Add X0, X8, 32
	516 Move W1, W31
	517 Move X2, X31
	518 Call Interlocked.Exchange, X0, X1
	519 Move W8, [X20+28]
	520 Move W9, [X20+49]
	521 Add W8, W8, 1
	522 Move [X20+28], W8
	523 Move TEMP, X9
	524 And TEMP, TEMP, 8
	525 Compare TEMP, 8
	526 JumpIfNotEqual {529}
	527 Move W8, [X31+332]
	528 Move [X19+240], W8
	529 Move W8, [X19+296]
	530 NotImplemented "Instruction CMP not yet implemented."
	531 Add W8, W8, 1
	532 Move [X19+296], W8
	533 Move X22, X19
	534 Add X22, X22, 224
	535 Move W21, [X22]
	536 Move X0, [X24]
	537 Move W8, [X0+224]
	538 Compare W8, 0
	539 JumpIfNotEqual {541}
	540 Call 0x1C17DFC
	541 Move W8, [X20+50]
	542 Subtract W9, W21, W8
	543 Move TEMP, X9
	544 And TEMP, TEMP, 128
	545 Compare TEMP, 128
	546 JumpIfNotEqual {559}
	547 Move X0, [X24]
	548 Move W9, [X0+224]
	549 Compare W9, 0
	550 JumpIfNotEqual {553}
	551 Call 0x1C17DFC
	552 Move W8, [X20+50]
	553 Move X0, [X19+232]
	554 Move [X19+224], W8
	555 Compare X0, 0
	556 JumpIfEqual {559}
	557 Move X1, X31
	558 Call EventWaitHandle.Set, X0
	559 Move X0, [X24]
	560 Move W8, [X0+224]
	561 Compare W8, 0
	562 JumpIfNotEqual {564}
	563 Call 0x1C17DFC
	564 Move W8, [X20+50]
	565 Move W9, [X19+225]
	566 Subtract W8, W8, W9
	567 Move TEMP, X8
	568 And TEMP, TEMP, 128
	569 Compare TEMP, 128
	570 JumpIfNotEqual {772}
	571 Move X8, [X19+200]
	572 Compare X8, 0
	573 JumpIfEqual {273}
	574 Move W9, [X8+52]
	575 Move [X31+188], W9
	576 Move X21, [X8+24]
	577 Add W9, W9, 1
	578 Move [X8+52], W9
	579 Compare X21, 0
	580 JumpIfEqual {273}
	581 Move X25, 0xB9D000
	582 Move X8, [X21]
	583 Move X25, [X25+840]
	584 NotImplemented "Instruction LDRH not yet implemented."
	585 Move X1, [X25]
	586 Compare X9, 0
	587 JumpIfEqual {594}
	588 Move X10, [X8+176]
	589 Add X10, X10, 8
	590 NotImplemented "Instruction LDUR not yet implemented."
	591 NotImplemented "Instruction CMP not yet implemented."
	592 Subtract X9, X9, 1
	593 Add X10, X10, 16
	594 Move X0, X21
	595 Move W2, W31
	596 Call 0x1C5D788
	597 NotImplemented "Instruction LDRSW not yet implemented."
	598 Add X8, X8, X9
	599 Add X0, X8, 312
	600 Move X8, [X0]
	601 Move X1, [X0+8]
	602 Move X0, X21
	603 NotImplemented "Instruction BLR not yet implemented."
	604 NotImplemented "Instruction CMP not yet implemented."
	605 Move X8, [X19+200]
	606 Compare X8, 0
	607 JumpIfEqual {273}
	608 Move X21, [X8+24]
	609 Move X8, 0xB98000
	610 Move X8, [X8+2760]
	611 Move W1, 13
	612 Move X0, [X8]
	613 Call 0x1C17D6C
	614 Compare X0, 0
	615 JumpIfEqual {273}
	616 Move W8, [X0+24]
	617 Move X23, X0
	618 Compare W8, 0
	619 JumpIfEqual {808}
	620 Move X9, [X19+184]
	621 NotImplemented "Instruction CMP not yet implemented."
	622 Move [X23+32], X9
	623 Move X8, 0xBDA000
	624 Move X8, [X8+1608]
	625 Add X0, X31, 332
	626 Move X1, X31
	627 Move X8, [X8]
	628 Move [X23+40], X8
	629 Call Byte.ToString, X0
	630 Move W8, [X23+24]
	631 NotImplemented "Instruction CMP not yet implemented."
	632 NotImplemented "Instruction CMP not yet implemented."
	633 Move [X23+48], X0
	634 Move X8, 0xBDA000
	635 Move X8, [X8+1592]
	636 Move X8, [X8]
	637 Move [X23+56], X8
	638 Move X0, [X24]
	639 Move W8, [X0+224]
	640 Compare W8, 0
	641 JumpIfNotEqual {643}
	642 Call 0x1C17DFC
	643 Move W8, [X20+50]
	644 Add X0, X31, 328
	645 Move X1, X31
	646 Move [X31+328], W8
	647 Call Byte.ToString, X0
	648 Move W8, [X23+24]
	649 NotImplemented "Instruction CMP not yet implemented."
	650 NotImplemented "Instruction CMP not yet implemented."
	651 Move [X23+64], X0
	652 Move X8, 0xBDA000
	653 Move X8, [X8+1832]
	654 Move X0, X22
	655 Move X1, X31
	656 Move X8, [X8]
	657 Move [X23+72], X8
	658 Call Byte.ToString, X0
	659 Move W8, [X23+24]
	660 NotImplemented "Instruction CMP not yet implemented."
	661 NotImplemented "Instruction CMP not yet implemented."
	662 Move [X23+80], X0
	663 Move X8, 0xBDA000
	664 Move X8, [X8+1856]
	665 Add X0, X31, 328
	666 Move X1, X31
	667 Move X8, [X8]
	668 Move [X23+88], X8
	669 Move W8, [X22]
	670 Move W9, [X20+50]
	671 Subtract W8, W8, W9
	672 Move [X31+328], W8
	673 Call Byte.ToString, X0
	674 Move W8, [X23+24]
	675 NotImplemented "Instruction CMP not yet implemented."
	676 NotImplemented "Instruction CMP not yet implemented."
	677 Move [X23+96], X0
	678 Move X8, 0xBDA000
	679 Move X8, [X8+1840]
	680 Add X0, X31, 188
	681 Move X1, X31
	682 Move X8, [X8]
	683 Move [X23+104], X8
	684 Move W8, [X20+12]
	685 Move [X31+188], W8
	686 Call Int32.ToString, X0
	687 Move W8, [X23+24]
	688 NotImplemented "Instruction CMP not yet implemented."
	689 NotImplemented "Instruction CMP not yet implemented."
	690 Move [X23+112], X0
	691 Move X8, 0xBDA000
	692 Move X8, [X8+1616]
	693 Move X9, 0xBDA000
	694 Move TEMP, 0
	695 Not TEMP
	696 Move X10, TEMP
	697 Add X0, X31, 256
	698 Move X8, [X8]
	699 Move X9, [X9+1000]
	700 Move X1, X31
	701 Move [X23+120], X8
	702 Move X8, [X9]
	703 Move W9, [X20+49]
	704 Move [X31+256], X8
	705 Move [X31+264], X10
	706 Move [X31+272], W9
	707 Call Enum.ToString, X0
	708 Move W8, [X23+24]
	709 NotImplemented "Instruction CMP not yet implemented."
	710 Move [X23+128], X0
	711 Move X0, X23
	712 Move X1, X31
	713 Call String.Concat, X0
	714 Move X8, 0xB98000
	715 Move X8, [X8+2504]
	716 Move X22, X0
	717 Move X23, [X8]
	718 Move X8, [X23+56]
	719 Compare X8, 0
	720 JumpIfNotEqual {724}
	721 Move X0, X23
	722 Call 0x1C5D6E0
	723 Move X8, [X23+56]
	724 Move X0, [X8+16]
	725 Move W8, [X0+309]
	726 Move TEMP, X8
	727 And TEMP, TEMP, 1
	728 Compare TEMP, 1
	729 JumpIfEqual {731}
	730 Call 0x1C5D684
	731 Move W8, [X0+224]
	732 Compare W8, 0
	733 JumpIfNotEqual {735}
	734 Call 0x1C17DFC
	735 Move X8, [X23+56]
	736 Move X0, [X8+16]
	737 Move W8, [X0+309]
	738 Move TEMP, X8
	739 And TEMP, TEMP, 1
	740 Compare TEMP, 1
	741 JumpIfEqual {743}
	742 Call 0x1C5D684
	743 Compare X21, 0
	744 JumpIfEqual {273}
	745 Move X9, [X0+184]
	746 Move X8, [X21]
	747 Move X1, [X25]
	748 Move X23, [X9]
	749 NotImplemented "Instruction LDRH not yet implemented."
	750 Compare X9, 0
	751 JumpIfEqual {758}
	752 Move X10, [X8+176]
	753 Add X10, X10, 8
	754 NotImplemented "Instruction LDUR not yet implemented."
	755 NotImplemented "Instruction CMP not yet implemented."
	756 Subtract X9, X9, 1
	757 Add X10, X10, 16
	758 Move W2, 1
	759 Move X0, X21
	760 Call 0x1C5D788
	761 Move W9, [X10]
	762 Add W9, W9, 1
	763 Add X8, X8, W9
	764 Add X0, X8, 312
	765 Move X8, [X0]
	766 Move X4, [X0+8]
	767 Move W1, 5
	768 Move X0, X21
	769 Move X2, X22
	770 Move X3, X23
	771 NotImplemented "Instruction BLR not yet implemented."
	772 Move W8, [X19+157]
	773 Compare W8, 0
	774 JumpIfNotEqual {777}
	775 Move X0, X19
	776 Call RemoteVoice.decodeQueue, X0
	777 Move X0, [X24]
	778 Move X21, [X19+192]
	779 Move W8, [X0+224]
	780 Compare W8, 0
	781 JumpIfNotEqual {783}
	782 Call 0x1C17DFC
	783 Compare X21, 0
	784 JumpIfEqual {273}
	785 Move W8, [X20+49]
	786 Move X0, X21
	787 Move W1, W31
	788 Move W2, W8
	789 ShiftRight W2, 3
	790 And W2, W2, 7
	791 Call SpacingProfile.Update, X0, X1, X2
	792 Add X19, X19, 168
	793 Call 0x1C17D44
	794 Move X0, X19
	795 Move X1, X31
	796 Call Interlocked.Decrement, X0
	797 Move X20, [X31+384]
	798 Move X19, [X31+392]
	799 Move X22, [X31+368]
	800 Move X21, [X31+376]
	801 Move X24, [X31+352]
	802 Move X23, [X31+360]
	803 Move X30, [X31+336]
	804 Move X25, [X31+344]
	805 Move X29, [X31+320]
	806 Add X31, X31, 400
	807 Return 
	808 Call 0x1C17F28
	809 NotImplemented "Instruction CMP not yet implemented."
	810 Move X21, X0
	811 Move X0, X21
	812 Move X25, X24
	813 Call 0x3EB2AD0
	814 Move X21, X0
	815 Move X0, 0xB98000
	816 Move X0, [X0+2000]
	817 Call 0x1C17D08
	818 Move X8, [X21]
	819 Move X1, [X8]
	820 Call 0x1C18270
	821 Move TEMP, X0
	822 And TEMP, TEMP, 1
	823 Compare TEMP, 1
	824 JumpIfNotEqual {919}
	825 Move X23, [X21]
	826 Call 0x3EB2AE0
	827 Move X8, [X19+200]
	828 Compare X8, 0
	829 JumpIfEqual {273}
	830 Move X0, 0xBD9000
	831 Move X21, [X8+24]
	832 Move X22, [X19+184]
	833 Move X0, [X0+1864]
	834 Call 0x1C17D08
	835 Move X24, X0
	836 Compare X23, 0
	837 JumpIfEqual {844}
	838 Move X8, [X23]
	839 Move X0, X23
	840 Move X9, [X8+360]
	841 Move X1, [X8+368]
	842 NotImplemented "Instruction BLR not yet implemented."
	843 Move X2, X0
	844 Move X2, X31
	845 Move X0, X22
	846 Move X1, X24
	847 Move X3, X31
	848 Call String.Concat, X0, X1, X2
	849 Move X22, X0
	850 Move X0, 0xB97000
	851 Move X0, [X0+2504]
	852 Call 0x1C17D08
	853 Move X8, [X0+56]
	854 Move X23, X0
	855 Compare X8, 0
	856 JumpIfNotEqual {860}
	857 Move X0, X23
	858 Call 0x1C5D6E0
	859 Move X8, [X23+56]
	860 Move X0, [X8+16]
	861 Move W8, [X0+309]
	862 Move TEMP, X8
	863 And TEMP, TEMP, 1
	864 Compare TEMP, 1
	865 JumpIfEqual {867}
	866 Call 0x1C5D684
	867 Move W8, [X0+224]
	868 Compare W8, 0
	869 JumpIfNotEqual {871}
	870 Call 0x1C17DFC
	871 Move X8, [X23+56]
	872 Move X0, [X8+16]
	873 Move W8, [X0+309]
	874 Move TEMP, X8
	875 And TEMP, TEMP, 1
	876 Compare TEMP, 1
	877 JumpIfEqual {879}
	878 Call 0x1C5D684
	879 Compare X21, 0
	880 JumpIfEqual {273}
	881 Move X8, [X0+184]
	882 Move X0, 0xB9C000
	883 Move X23, [X8]
	884 Move X0, [X0+840]
	885 Call 0x1C17D08
	886 Move X8, [X21]
	887 Move X1, X0
	888 NotImplemented "Instruction LDRH not yet implemented."
	889 Compare X9, 0
	890 JumpIfEqual {897}
	891 Move X10, [X8+176]
	892 Add X10, X10, 8
	893 NotImplemented "Instruction LDUR not yet implemented."
	894 NotImplemented "Instruction CMP not yet implemented."
	895 Subtract X9, X9, 1
	896 Add X10, X10, 16
	897 Move W2, 1
	898 Move X0, X21
	899 Call 0x1C5D788
	900 Move W9, [X10]
	901 Add W9, W9, 1
	902 Add X8, X8, W9
	903 Add X0, X8, 312
	904 Move X8, [X0]
	905 Move X4, [X0+8]
	906 Move W1, 1
	907 Move X0, X21
	908 Move X2, X22
	909 Move X3, X23
	910 NotImplemented "Instruction BLR not yet implemented."
	911 Add X21, X19, 168
	912 Call 0x1C17D44
	913 Move X0, X21
	914 Move X1, X31
	915 Call Interlocked.Decrement, X0
	916 Move X0, X19
	917 Call RemoteVoice.Dispose, X0
	918 Move X24, X25
	919 Move W0, 8
	920 Call 0x3EB2AF0
	921 Move X8, [X21]
	922 Move [X0], X8
	923 Move X1, 0x958000
	924 Add X1, X1, 3672
	925 Move X2, X31
	926 Call 0x3EB2B00
	927 Move X21, X0
	928 Call 0x3EB2AE0
	929 Move X0, X21
	930 Call 0x1D2D690
	931 Call 0x1991590

Method: System.Void decodeQueue()

Disassembly:
	0x0355D188 CBZ X8, 0x355E2B4
	0x0355D18C LDR X20, [X8 + 0x18]
	0x0355D190 ADRP X8, 0xB96000
	0x0355D194 LDR X8, [X8 + 0xAC8]
	0x0355D198 MOVZ W1, 0xA
	0x0355D19C LDR X0, [X8]
	0x0355D1A0 BL 0x1C16D6C
	0x0355D1A4 CBZ X0, 0x355E2B4
	0x0355D1A8 LDR W8, [X0 + 0x18]
	0x0355D1AC MOV X21, X0
	0x0355D1B0 CBZ W8, 0x355E2B8
	0x0355D1B4 LDR X9, [X19 + 0xB8]
	0x0355D1B8 CMP W8, 0x1
	0x0355D1BC STR X9, [X21 + 0x20]
	0x0355D1C0 B.EQ 0x355E2B8
	0x0355D1C4 ADRP X8, 0xBD8000
	0x0355D1C8 LDR X8, [X8 + 0x648]
	0x0355D1CC ADD X0, X31, 0x8C
	0x0355D1D0 MOV X1, X31
	0x0355D1D4 LDR X8, [X8]
	0x0355D1D8 STR X8, [X21 + 0x28]
	0x0355D1DC BL 0x3319BB4
	0x0355D1E0 LDR W8, [X21 + 0x18]
	0x0355D1E4 CMP W8, 0x2
	0x0355D1E8 B.LS 0x355E2B8
	0x0355D1EC CMP W8, 0x3
	0x0355D1F0 STR X0, [X21 + 0x30]
	0x0355D1F4 B.EQ 0x355E2B8
	0x0355D1F8 ADRP X8, 0xBD8000
	0x0355D1FC LDR X8, [X8 + 0x638]
	0x0355D200 LDR X8, [X8]
	0x0355D204 STR X8, [X21 + 0x38]
	0x0355D208 LDR X0, [X25]
	0x0355D20C LDR W8, [X0 + 0xE0]
	0x0355D210 CBNZ W8, 0x355D218
	0x0355D214 BL 0x1C16DFC
	0x0355D218 MOVZ W8, 0x38
	0x0355D21C MADD X8, X28, X8, X27
	0x0355D220 LDRB W8, [X8 + 0x52]
	0x0355D224 ADD X0, X31, 0x88
	0x0355D228 MOV X1, X31
	0x0355D22C STRB W8, [X31 + 0x88]
	0x0355D230 BL 0x3319BB4
	0x0355D234 LDR W8, [X21 + 0x18]
	0x0355D238 CMP W8, 0x4
	0x0355D23C B.LS 0x355E2B8
	0x0355D240 CMP W8, 0x5
	0x0355D244 STR X0, [X21 + 0x40]
	0x0355D248 B.EQ 0x355E2B8
	0x0355D24C ADRP X8, 0xBD8000
	0x0355D250 LDR X8, [X8 + 0x728]
	0x0355D254 ADD X0, X19, 0xE0
	0x0355D258 MOV X1, X31
	0x0355D25C LDR X8, [X8]
	0x0355D260 STR X8, [X21 + 0x48]
	0x0355D264 BL 0x3319BB4
	0x0355D268 LDR W8, [X21 + 0x18]
	0x0355D26C CMP W8, 0x6
	0x0355D270 B.LS 0x355E2B8
	0x0355D274 CMP W8, 0x7
	0x0355D278 STR X0, [X21 + 0x50]
	0x0355D27C B.EQ 0x355E2B8
	0x0355D280 ADRP X8, 0xBD8000
	0x0355D284 LDR X8, [X8 + 0x7B0]
	0x0355D288 ADD X0, X19, 0xE1
	0x0355D28C MOV X1, X31
	0x0355D290 LDR X8, [X8]
	0x0355D294 STR X8, [X21 + 0x58]
	0x0355D298 BL 0x3319BB4
	0x0355D29C LDR W8, [X21 + 0x18]
	0x0355D2A0 CMP W8, 0x8
	0x0355D2A4 B.LS 0x355E2B8
	0x0355D2A8 CMP W8, 0x9
	0x0355D2AC STR X0, [X21 + 0x60]
	0x0355D2B0 B.EQ 0x355E2B8
	0x0355D2B4 ADRP X8, 0xBD8000
	0x0355D2B8 LDR X8, [X8 + 0x798]
	0x0355D2BC MOV X0, X21
	0x0355D2C0 MOV X1, X31
	0x0355D2C4 LDR X8, [X8]
	0x0355D2C8 STR X8, [X21 + 0x68]
	0x0355D2CC BL 0x32278CC
	0x0355D2D0 ADRP X8, 0xB96000
	0x0355D2D4 LDR X8, [X8 + 0x9C8]
	0x0355D2D8 MOV X21, X0
	0x0355D2DC LDR X22, [X8]
	0x0355D2E0 LDR X8, [X22 + 0x38]
	0x0355D2E4 CBNZ X8, 0x355D2F4
	0x0355D2E8 MOV X0, X22
	0x0355D2EC BL 0x1C5C6E0
	0x0355D2F0 LDR X8, [X22 + 0x38]
	0x0355D2F4 LDR X0, [X8 + 0x10]
	0x0355D2F8 LDRB W8, [X0 + 0x135]
	0x0355D2FC TBNZ X8, 0x0, 0x355D304
	0x0355D300 BL 0x1C5C684
	0x0355D304 LDR W8, [X0 + 0xE0]
	0x0355D308 CBNZ W8, 0x355D310
	0x0355D30C BL 0x1C16DFC
	0x0355D310 LDR X8, [X22 + 0x38]
	0x0355D314 LDR X0, [X8 + 0x10]
	0x0355D318 LDRB W8, [X0 + 0x135]
	0x0355D31C TBNZ X8, 0x0, 0x355D324
	0x0355D320 BL 0x1C5C684
	0x0355D324 CBZ X20, 0x355E2B4
	0x0355D328 LDR X9, [X0 + 0xB8]
	0x0355D32C LDR X8, [X20]
	0x0355D330 LDR X1, [X23]
	0x0355D334 LDR X22, [X9]
	0x0355D338 LDRH W9, [X8 + 0x12E]
	0x0355D33C CBZ X9, 0x355D360
	0x0355D340 LDR X10, [X8 + 0xB0]
	0x0355D344 ADD X10, X10, 0x8
	0x0355D348 LDUR X11, [X10 - 0x8]
	0x0355D34C CMP X11, X1
	0x0355D350 B.EQ 0x355D3D8
	0x0355D354 SUBS X9, X9, 0x1
	0x0355D358 ADD X10, X10, 0x10
	0x0355D35C B.NE 0x355D348
	0x0355D360 MOVZ W2, 0x1
	0x0355D364 MOV X0, X20
	0x0355D368 BL 0x1C5C788
	0x0355D36C B 0x355D3E8
	0x0355D370 LDR X20, [X19 + 0x48]
	0x0355D374 CBZ X20, 0x355E2B4
	0x0355D378 LDR X8, [X20]
	0x0355D37C ADRP X10, 0xBD8000
	0x0355D380 LDRH W9, [X8 + 0x12E]
	0x0355D384 LDR X10, [X10 + 0x468]
	0x0355D388 LDR X1, [X10]
	0x0355D38C CBZ X9, 0x355D3B0
	0x0355D390 LDR X10, [X8 + 0xB0]
	0x0355D394 ADD X10, X10, 0x8
	0x0355D398 LDUR X11, [X10 - 0x8]
	0x0355D39C CMP X11, X1
	0x0355D3A0 B.EQ 0x355D5FC
	0x0355D3A4 SUBS X9, X9, 0x1
	0x0355D3A8 ADD X10, X10, 0x10
	0x0355D3AC B.NE 0x355D398
	0x0355D3B0 MOVZ W2, 0x2
	0x0355D3B4 MOV X0, X20
	0x0355D3B8 BL 0x1C5C788
	0x0355D3BC B 0x355D60C
	0x0355D3C0 LDR X8, [X19 + 0xC8]
	0x0355D3C4 CBZ X8, 0x355E2B4
	0x0355D3C8 LDR W9, [X8 + 0x24]
	0x0355D3CC ADD W9, W9, 0x1
	0x0355D3D0 STR W9, [X8 + 0x24]
	0x0355D3D4 B 0x355D768
	0x0355D3D8 LDR W9, [X10]
	0x0355D3DC ADD W9, W9, 0x1
	0x0355D3E0 ADD X8, X8, W9, 0x4, SXTW
	0x0355D3E4 ADD X0, X8, 0x138
	0x0355D3E8 LDP X8, X4, [X0]
	0x0355D3EC MOVZ W1, 0x5
	0x0355D3F0 MOV X0, X20
	0x0355D3F4 MOV X2, X21
	0x0355D3F8 MOV X3, X22
	0x0355D3FC BLR X8
	0x0355D400 LDR X8, [X19 + 0xD8]
	0x0355D404 CBZ X8, 0x355E2B4
	0x0355D408 LDRB W9, [X31 + 0x8C]
	0x0355D40C LDR W10, [X8 + 0x18]
	0x0355D410 CMP W9, W10
	0x0355D414 B.CS 0x355E2B8
	0x0355D418 ADD X8, X8, X9, 0x2, LSL
	0x0355D41C ADD X0, X8, 0x20
	0x0355D420 MOV W1, W31
	0x0355D424 MOV X2, X31
	0x0355D428 BL 0x33E9064
	0x0355D42C LDR X8, [X19 + 0xC8]
	0x0355D430 CBZ X8, 0x355E2B4
	0x0355D434 LDR W9, [X8 + 0x24]
	0x0355D438 ADD W9, W9, 0x1
	0x0355D43C STR W9, [X8 + 0x24]
	0x0355D440 B 0x355D794
	0x0355D444 LDR X8, [X19 + 0xC8]
	0x0355D448 CBZ X8, 0x355E2B4
	0x0355D44C LDR X20, [X8 + 0x18]
	0x0355D450 ADRP X8, 0xB96000
	0x0355D454 LDR X8, [X8 + 0xAC8]
	0x0355D458 MOVZ W1, 0x8
	0x0355D45C LDR X0, [X8]
	0x0355D460 BL 0x1C16D6C
	0x0355D464 CBZ X0, 0x355E2B4
	0x0355D468 LDR W8, [X0 + 0x18]
	0x0355D46C MOV X21, X0
	0x0355D470 CBZ W8, 0x355E2B8
	0x0355D474 LDR X9, [X19 + 0xB8]
	0x0355D478 CMP W8, 0x1
	0x0355D47C STR X9, [X21 + 0x20]
	0x0355D480 B.EQ 0x355E2B8
	0x0355D484 ADRP X8, 0xBD8000
	0x0355D488 LDR X8, [X8 + 0x648]
	0x0355D48C ADD X0, X31, 0x8C
	0x0355D490 MOV X1, X31
	0x0355D494 LDR X8, [X8]
	0x0355D498 STR X8, [X21 + 0x28]
	0x0355D49C BL 0x3319BB4
	0x0355D4A0 LDR W8, [X21 + 0x18]
	0x0355D4A4 CMP W8, 0x2
	0x0355D4A8 B.LS 0x355E2B8
	0x0355D4AC CMP W8, 0x3
	0x0355D4B0 STR X0, [X21 + 0x30]
	0x0355D4B4 B.EQ 0x355E2B8
	0x0355D4B8 ADRP X8, 0xBD8000
	0x0355D4BC LDR X8, [X8 + 0x638]
	0x0355D4C0 LDR X8, [X8]
	0x0355D4C4 STR X8, [X21 + 0x38]
	0x0355D4C8 LDR X0, [X25]
	0x0355D4CC LDR W8, [X0 + 0xE0]
	0x0355D4D0 CBNZ W8, 0x355D4D8
	0x0355D4D4 BL 0x1C16DFC
	0x0355D4D8 LDRB W8, [X29]
	0x0355D4DC ADD X0, X31, 0x88
	0x0355D4E0 MOV X1, X31
	0x0355D4E4 STRB W8, [X31 + 0x88]
	0x0355D4E8 BL 0x3319BB4
	0x0355D4EC LDR W8, [X21 + 0x18]
	0x0355D4F0 CMP W8, 0x4
	0x0355D4F4 B.LS 0x355E2B8
	0x0355D4F8 CMP W8, 0x5
	0x0355D4FC STR X0, [X21 + 0x40]
	0x0355D500 B.EQ 0x355E2B8
	0x0355D504 ADRP X8, 0xBD8000
	0x0355D508 LDR X8, [X8 + 0x3F8]
	0x0355D50C ADD X0, X31, 0x84
	0x0355D510 MOV X1, X31
	0x0355D514 LDR X8, [X8]
	0x0355D518 STR X8, [X21 + 0x48]
	0x0355D51C BL 0x3319BB4
	0x0355D520 LDR W8, [X21 + 0x18]
	0x0355D524 CMP W8, 0x6
	0x0355D528 B.LS 0x355E2B8
	0x0355D52C CMP W8, 0x7
	0x0355D530 STR X0, [X21 + 0x50]
	0x0355D534 B.EQ 0x355E2B8
	0x0355D538 ADRP X8, 0xBD8000
	0x0355D53C LDR X8, [X8 + 0x768]
	0x0355D540 MOV X0, X21
	0x0355D544 MOV X1, X31
	0x0355D548 LDR X8, [X8]
	0x0355D54C STR X8, [X21 + 0x58]
	0x0355D550 BL 0x32278CC
	0x0355D554 ADRP X8, 0xB96000
	0x0355D558 LDR X8, [X8 + 0x9C8]
	0x0355D55C MOV X21, X0
	0x0355D560 LDR X22, [X8]
	0x0355D564 LDR X8, [X22 + 0x38]
	0x0355D568 CBNZ X8, 0x355D578
	0x0355D56C MOV X0, X22
	0x0355D570 BL 0x1C5C6E0
	0x0355D574 LDR X8, [X22 + 0x38]
	0x0355D578 LDR X0, [X8 + 0x10]
	0x0355D57C LDRB W8, [X0 + 0x135]
	0x0355D580 TBNZ X8, 0x0, 0x355D588
	0x0355D584 BL 0x1C5C684
	0x0355D588 LDR W8, [X0 + 0xE0]
	0x0355D58C CBNZ W8, 0x355D594
	0x0355D590 BL 0x1C16DFC
	0x0355D594 LDR X8, [X22 + 0x38]
	0x0355D598 LDR X0, [X8 + 0x10]
	0x0355D59C LDRB W8, [X0 + 0x135]
	0x0355D5A0 TBNZ X8, 0x0, 0x355D5A8
	0x0355D5A4 BL 0x1C5C684
	0x0355D5A8 CBZ X20, 0x355E2B4
	0x0355D5AC LDR X9, [X0 + 0xB8]
	0x0355D5B0 LDR X8, [X20]
	0x0355D5B4 ADRP X10, 0xB9B000
	0x0355D5B8 LDR X22, [X9]
	0x0355D5BC LDRH W9, [X8 + 0x12E]
	0x0355D5C0 LDR X10, [X10 + 0x348]
	0x0355D5C4 LDR X1, [X10]
	0x0355D5C8 CBZ X9, 0x355D5EC
	0x0355D5CC LDR X10, [X8 + 0xB0]
	0x0355D5D0 ADD X10, X10, 0x8
	0x0355D5D4 LDUR X11, [X10 - 0x8]

ISIL:
	001 Subtract X31, X31, 368
	002 Move [X31+272], X29
	003 Move [X31+280], X30
	004 Move [X31+288], X28
	005 Move [X31+296], X27
	006 Move [X31+304], X26
	007 Move [X31+312], X25
	008 Move [X31+320], X24
	009 Move [X31+328], X23
	010 Move [X31+336], X22
	011 Move [X31+344], X21
	012 Move [X31+352], X20
	013 Move [X31+360], X19
	014 Move X20, 0xE83000
	015 Move W8, [X20+3503]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0xBD9000
	022 Move X0, [X0+1808]
	023 Call 0x1C17CF4
	024 Move X0, 0xBC0000
	025 Move X0, [X0+3608]
	026 Call 0x1C17CF4
	027 Move X0, 0xBD9000
	028 Move X0, [X0+1128]
	029 Call 0x1C17CF4
	030 Move X0, 0xBD9000
	031 Move X0, [X0+1872]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+3503], W8
	035 NotImplemented "Instruction MOVI not yet implemented."
	036 Move [X31+256], X31
	037 Move [X31+224], V0
	038 Move [X31+232], V0
	039 Move [X31+13], V0
	040 Move W8, [X19+240]
	041 Move TEMP, X8
	042 And TEMP, TEMP, -2147483648
	043 Compare TEMP, -2147483648
	044 JumpIfEqual {46}
	045 Move W20, W31
	046 Move W8, [X19+148]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W9, 127
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 Move W20, [X19+297]
	052 Move W21, [X19+224]
	053 Move W22, [X19+158]
	054 Call 0x1C17D44
	055 Compare W22, 0
	056 JumpIfEqual {71}
	057 Move X20, [X31+352]
	058 Move X19, [X31+360]
	059 Move X22, [X31+336]
	060 Move X21, [X31+344]
	061 Move X24, [X31+320]
	062 Move X23, [X31+328]
	063 Move X26, [X31+304]
	064 Move X25, [X31+312]
	065 Move X28, [X31+288]
	066 Move X27, [X31+296]
	067 Move X29, [X31+272]
	068 Move X30, [X31+280]
	069 Add X31, X31, 368
	070 Return 
	071 Move X22, 0xBD9000
	072 Move X23, 0xBD9000
	073 Move X24, 0xBC0000
	074 Move X27, 0xBD9000
	075 Move X22, [X22+1808]
	076 Move X23, [X23+1128]
	077 Move X24, [X24+3608]
	078 Move X27, [X27+1872]
	079 Move W28, W31
	080 Subtract W29, W21, W20
	081 Move W26, 56
	082 Move [X31+12], W29
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move W8, [X19+225]
	085 Subtract W8, W29, W8
	086 And W8, W8, 255
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X0, [X19+248]
	089 Compare X0, 0
	090 JumpIfEqual {310}
	091 Add W25, W28, 1
	092 Move X2, [X22]
	093 Add X1, X31, 208
	094 Call 0x29927E8, X0, X1
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {135}
	099 Move X21, [X19+72]
	100 Compare X21, 0
	101 JumpIfEqual {310}
	102 Move X8, [X21]
	103 Move X1, [X23]
	104 NotImplemented "Instruction LDRH not yet implemented."
	105 Compare X9, 0
	106 JumpIfEqual {113}
	107 Move X10, [X8+176]
	108 Add X10, X10, 8
	109 NotImplemented "Instruction LDUR not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Subtract X9, X9, 1
	112 Add X10, X10, 16
	113 Move W2, 2
	114 Move X0, X21
	115 Call 0x1C5D788
	116 Move W9, [X10]
	117 Add W9, W9, 2
	118 Add X8, X8, W9
	119 Add X0, X8, 312
	120 Move X8, [X0]
	121 Move X2, [X0+8]
	122 Add X1, X31, 208
	123 Move X0, X21
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move X0, [X24]
	126 Move W8, [X0+224]
	127 Compare W8, 0
	128 JumpIfNotEqual {130}
	129 Call 0x1C17DFC
	130 Add X0, X31, 208
	131 Call FrameBuffer.Release, X0
	132 Move X0, [X19+248]
	133 Compare X0, 0
	134 JumpIfNotEqual {92}
	135 Move W8, [X19+240]
	136 Move W20, [X19+225]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move TEMP, 0
	139 Not TEMP
	140 Move W8, TEMP
	141 Move [X19+240], W8
	142 Move W21, [X19+226]
	143 Move X0, X19
	144 Move W2, W29
	145 Move W1, W21
	146 Call RemoteVoice.processFrame, X0, X1, X2
	147 Move W8, [X19+225]
	148 And W9, W0, 255
	149 Add W10, W0, W21
	150 Move [X19+226], W10
	151 NotImplemented "Instruction CMP not yet implemented."
	152 NotImplemented "Instruction CSEL not yet implemented."
	153 Compare W9, 0
	154 JumpIfEqual {305}
	155 Subtract W8, W21, 64
	156 And W25, W8, 255
	157 And X29, X8, 255
	158 Move X8, [X19+216]
	159 Compare X8, 0
	160 JumpIfEqual {310}
	161 Move W9, [X8+24]
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Add X8, X8, X29
	164 Add X0, X8, 32
	165 Move W1, 1
	166 Move X2, X31
	167 Call Interlocked.Exchange, X0, X1
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X20, [X19+208]
	170 Compare X20, 0
	171 JumpIfEqual {310}
	172 Move X0, [X24]
	173 Move W8, [X0+224]
	174 Compare W8, 0
	175 JumpIfNotEqual {177}
	176 Call 0x1C17DFC
	177 Move W8, [X20+24]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 NotImplemented "Instruction MADD not yet implemented."
	180 Add X0, X8, 32
	181 Call FrameBuffer.Release, X0
	182 Move X0, [X27]
	183 Move X20, [X19+208]
	184 Move W8, [X0+224]
	185 Compare W8, 0
	186 JumpIfNotEqual {189}
	187 Call 0x1C17DFC
	188 Move X0, [X27]
	189 Move X8, [X0+184]
	190 Move X9, [X8+48]
	191 Move V1, [X8+16]
	192 Move V0, [X8+32]
	193 Move V2, [X8]
	194 Move [X31+192], X9
	195 Move [X31+160], V1
	196 Move [X31+168], V0
	197 Move [X31+9], V2
	198 Compare X20, 0
	199 JumpIfEqual {310}
	200 Move V0, [X31+144]
	201 Move V1, [X31+160]
	202 Move V2, [X31+11]
	203 Move X8, [X31+192]
	204 Move [X31+80], V0
	205 Move [X31+88], V1
	206 Move [X31+7], V2
	207 Move [X31+128], X8
	208 Move W8, [X20+24]
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move V2, [X31+96]
	211 Move V0, [X31+112]
	212 Move X8, [X31+128]
	213 Move V1, [X31+5]
	214 NotImplemented "Instruction NOP not yet implemented."
	215 NotImplemented "Instruction MADD not yet implemented."
	216 Move [X9+48], V2
	217 Move [X9+56], V0
	218 Move [X9+80], X8
	219 Move [X9+2], V1
	220 Move X8, [X19+216]
	221 Compare X8, 0
	222 JumpIfEqual {310}
	223 Move W9, [X8+24]
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Add X8, X8, X29
	226 Add X0, X8, 32
	227 Move W1, W31
	228 Move X2, X31
	229 Call Interlocked.Exchange, X0, X1
	230 Move X8, [X19+280]
	231 Compare X8, 0
	232 JumpIfEqual {310}
	233 Move W9, [X8+24]
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Add X8, X8, X29
	236 Add X0, X8, 32
	237 Move W1, 1
	238 Move X2, X31
	239 Call Interlocked.Exchange, X0, X1
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Move X20, [X19+272]
	242 Compare X20, 0
	243 JumpIfEqual {310}
	244 Move X0, [X24]
	245 Move W8, [X0+224]
	246 Compare W8, 0
	247 JumpIfNotEqual {249}
	248 Call 0x1C17DFC
	249 Move W8, [X20+24]
	250 NotImplemented "Instruction CMP not yet implemented."
	251 NotImplemented "Instruction MADD not yet implemented."
	252 Add X0, X8, 32
	253 Call FrameBuffer.Release, X0
	254 Move X0, [X27]
	255 Move X20, [X19+272]
	256 Move W8, [X0+224]
	257 Compare W8, 0
	258 JumpIfNotEqual {261}
	259 Call 0x1C17DFC
	260 Move X0, [X27]
	261 Move X8, [X0+184]
	262 Move X9, [X8+48]
	263 Move V1, [X8+16]
	264 Move V0, [X8+32]
	265 Move V2, [X8]
	266 Move [X31+192], X9
	267 Move [X31+160], V1
	268 Move [X31+168], V0
	269 Move [X31+9], V2
	270 Compare X20, 0
	271 JumpIfEqual {310}
	272 Move V0, [X31+144]
	273 Move V1, [X31+160]
	274 Move V2, [X31+11]
	275 Move X8, [X31+192]
	276 Move [X31+16], V0
	277 Move [X31+24], V1
	278 Move [X31+3], V2
	279 Move [X31+64], X8
	280 Move W8, [X20+24]
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Move V2, [X31+32]
	283 Move V0, [X31+48]
	284 Move X8, [X31+64]
	285 Move V1, [X31+1]
	286 NotImplemented "Instruction NOP not yet implemented."
	287 NotImplemented "Instruction MADD not yet implemented."
	288 Move [X9+48], V2
	289 Move [X9+56], V0
	290 Move [X9+80], X8
	291 Move [X9+2], V1
	292 Move X8, [X19+280]
	293 Compare X8, 0
	294 JumpIfEqual {310}
	295 Move W9, [X8+24]
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Add X8, X8, X29
	298 Add X0, X8, 32
	299 Move W1, W31
	300 Move X2, X31
	301 Call Interlocked.Exchange, X0, X1
	302 Move W8, [X19+226]
	303 Add W21, W21, 1
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Move W20, [X19+158]
	306 Call 0x1C17D44
	307 Move W29, [X31+12]
	308 Compare W20, 0
	309 JumpIfEqual {83}
	310 Call 0x1C17F20
	311 Call 0x1C17F28

Method: System.Void processLostEvent(System.Byte lostEvNum, ref Photon.Voice.FrameBuffer lostEv)

Disassembly:
	0x0355F2C8 LDR W8, [X0 + 0xE0]
	0x0355F2CC CBNZ W8, 0x355F2D4
	0x0355F2D0 BL 0x1C16DFC
	0x0355F2D4 LDR X8, [X21 + 0x38]
	0x0355F2D8 LDR X0, [X8 + 0x10]
	0x0355F2DC LDRB W8, [X0 + 0x135]
	0x0355F2E0 TBNZ X8, 0x0, 0x355F2E8
	0x0355F2E4 BL 0x1C5C684
	0x0355F2E8 CBZ X20, 0x355F394
	0x0355F2EC LDR X9, [X0 + 0xB8]
	0x0355F2F0 LDR X8, [X20]
	0x0355F2F4 LDR X1, [X22]
	0x0355F2F8 LDR X21, [X9]
	0x0355F2FC LDRH W9, [X8 + 0x12E]
	0x0355F300 CBZ X9, 0x355F324
	0x0355F304 LDR X10, [X8 + 0xB0]
	0x0355F308 ADD X10, X10, 0x8
	0x0355F30C LDUR X11, [X10 - 0x8]
	0x0355F310 CMP X11, X1
	0x0355F314 B.EQ 0x355F334
	0x0355F318 SUBS X9, X9, 0x1
	0x0355F31C ADD X10, X10, 0x10
	0x0355F320 B.NE 0x355F30C
	0x0355F324 MOVZ W2, 0x1
	0x0355F328 MOV X0, X20
	0x0355F32C BL 0x1C5C788
	0x0355F330 B 0x355F344
	0x0355F334 LDR W9, [X10]
	0x0355F338 ADD W9, W9, 0x1
	0x0355F33C ADD X8, X8, W9, 0x4, SXTW
	0x0355F340 ADD X0, X8, 0x138
	0x0355F344 LDP X8, X4, [X0]
	0x0355F348 MOVZ W1, 0x4
	0x0355F34C MOV X0, X20
	0x0355F350 MOV X2, X19
	0x0355F354 MOV X3, X21
	0x0355F358 BLR X8
	0x0355F35C MOV W0, W31
	0x0355F360 LDR X8, [X24 + 0x28]
	0x0355F364 LDR X9, [X31 + 0x78]
	0x0355F368 CMP X8, X9
	0x0355F36C B.NE 0x355F398
	0x0355F370 LDP X20, X19, [X31 + 0xD0]
	0x0355F374 LDP X22, X21, [X31 + 0xC0]
	0x0355F378 LDP X24, X23, [X31 + 0xB0]
	0x0355F37C LDP X26, X25, [X31 + 0xA0]
	0x0355F380 LDP X28, X27, [X31 + 0x90]
	0x0355F384 LDP X29, X30, [X31 + 0x80]
	0x0355F388 ADD X31, X31, 0xE0
	0x0355F38C RET
	0x0355F390 BL 0x1C16F28
	0x0355F394 BL 0x1C16F20
	0x0355F398 BL 0x3EB1B20
	0x0355F39C MOV X1, X31
	0x0355F3A0 B 0x33BDD8C
	0x0355F3A4 STR X1, [X0 + 0x18]
	0x0355F3A8 STRB W31, [X0 + 0x10]
	0x0355F3AC RET
	0x0355F3B0 SUB X31, X31, 0xE0
	0x0355F3B4 STP X30, X0, [X31 + 0xB0]
	0x0355F3B8 STP X22, X21, [X31 + 0xC0]
	0x0355F3BC STP X20, X19, [X31 + 0xD0]
	0x0355F3C0 ADRP X20, 0xE80000
	0x0355F3C4 LDRB W8, [X20 + 0xDB3]
	0x0355F3C8 MOV X19, X0
	0x0355F3CC TBNZ X8, 0x0, 0x355F420
	0x0355F3D0 ADRP X0, 0xB94000
	0x0355F3D4 LDR X0, [X0 + 0x9C8]
	0x0355F3D8 BL 0x1C16CF4
	0x0355F3DC ADRP X0, 0xBC0000
	0x0355F3E0 LDR X0, [X0 + 0x180]
	0x0355F3E4 BL 0x1C16CF4
	0x0355F3E8 ADRP X0, 0xBD6000
	0x0355F3EC LDR X0, [X0 + 0x468]
	0x0355F3F0 BL 0x1C16CF4
	0x0355F3F4 ADRP X0, 0xB99000
	0x0355F3F8 LDR X0, [X0 + 0x348]
	0x0355F3FC BL 0x1C16CF4
	0x0355F400 ADRP X0, 0xBD6000
	0x0355F404 LDR X0, [X0 + 0x7F8]
	0x0355F408 BL 0x1C16CF4
	0x0355F40C ADRP X0, 0xBD6000
	0x0355F410 LDR X0, [X0 + 0x800]
	0x0355F414 BL 0x1C16CF4
	0x0355F418 MOVZ W8, 0x1
	0x0355F41C STRB W8, [X20 + 0xDB3]
	0x0355F420 LDR X20, [X19 + 0xA0]
	0x0355F424 STRB W31, [X31 + 0x7C]
	0x0355F428 ADD X1, X31, 0x7C
	0x0355F42C MOV X0, X20
	0x0355F430 MOV X2, X31
	0x0355F434 BL 0x33DE64C
	0x0355F438 LDR X8, [X31 + 0xB8]
	0x0355F43C LDRB W19, [X8 + 0x9E]
	0x0355F440 BL 0x1C16D44
	0x0355F444 CBZ W19, 0x355F454
	0x0355F448 MOV X21, X31
	0x0355F44C MOVZ W19, 0x3
	0x0355F450 B 0x355F46C
	0x0355F454 BL 0x1C16D44
	0x0355F458 LDR X8, [X31 + 0xB8]
	0x0355F45C MOVZ W9, 0x1
	0x0355F460 MOV X21, X31
	0x0355F464 MOVZ W19, 0x4
	0x0355F468 STRB W9, [X8 + 0xAC]
	0x0355F46C LDRB W8, [X31 + 0x7C]
	0x0355F470 CBZ W8, 0x355F480
	0x0355F474 MOV X0, X20
	0x0355F478 MOV X1, X31
	0x0355F47C BL 0x33E14E4
	0x0355F480 CBNZ X21, 0x355F6A0
	0x0355F484 ORR W8, W19, 0x4
	0x0355F488 CMP W8, 0x4
	0x0355F48C B.NE 0x355F930
	0x0355F490 LDR X8, [X31 + 0xB8]
	0x0355F494 LDR X9, [X8 + 0xC8]
	0x0355F498 CBZ X9, 0x355F69C
	0x0355F49C ADRP X10, 0xBD6000
	0x0355F4A0 LDR X10, [X10 + 0x7F8]
	0x0355F4A4 LDR X0, [X8 + 0xB8]
	0x0355F4A8 ADRP X20, 0xB94000
	0x0355F4AC LDR X19, [X9 + 0x18]
	0x0355F4B0 LDR X1, [X10]
	0x0355F4B4 LDR X20, [X20 + 0x9C8]
	0x0355F4B8 MOV X2, X31
	0x0355F4BC BL 0x321B938
	0x0355F4C0 LDR X21, [X20]
	0x0355F4C4 MOV X20, X0
	0x0355F4C8 LDR X8, [X21 + 0x38]
	0x0355F4CC CBNZ X8, 0x355F4DC
	0x0355F4D0 MOV X0, X21
	0x0355F4D4 BL 0x1C5C6E0
	0x0355F4D8 LDR X8, [X21 + 0x38]
	0x0355F4DC LDR X0, [X8 + 0x10]
	0x0355F4E0 LDRB W8, [X0 + 0x135]
	0x0355F4E4 TBNZ X8, 0x0, 0x355F4EC
	0x0355F4E8 BL 0x1C5C684
	0x0355F4EC LDR W8, [X0 + 0xE0]
	0x0355F4F0 CBNZ W8, 0x355F4F8
	0x0355F4F4 BL 0x1C16DFC
	0x0355F4F8 LDR X8, [X21 + 0x38]
	0x0355F4FC LDR X0, [X8 + 0x10]
	0x0355F500 LDRB W8, [X0 + 0x135]
	0x0355F504 TBNZ X8, 0x0, 0x355F50C
	0x0355F508 BL 0x1C5C684
	0x0355F50C CBZ X19, 0x355F69C
	0x0355F510 ADRP X10, 0xB99000
	0x0355F514 LDR X9, [X0 + 0xB8]
	0x0355F518 LDR X8, [X19]
	0x0355F51C LDR X10, [X10 + 0x348]
	0x0355F520 ADRP X22, 0xBC0000
	0x0355F524 LDR X21, [X9]
	0x0355F528 LDRH W9, [X8 + 0x12E]
	0x0355F52C LDR X1, [X10]
	0x0355F530 LDR X22, [X22 + 0x180]
	0x0355F534 CBZ X9, 0x355F558
	0x0355F538 LDR X10, [X8 + 0xB0]
	0x0355F53C ADD X10, X10, 0x8
	0x0355F540 LDUR X11, [X10 - 0x8]
	0x0355F544 CMP X11, X1
	0x0355F548 B.EQ 0x355F568
	0x0355F54C SUBS X9, X9, 0x1
	0x0355F550 ADD X10, X10, 0x10
	0x0355F554 B.NE 0x355F540
	0x0355F558 MOVZ W2, 0x1
	0x0355F55C MOV X0, X19
	0x0355F560 BL 0x1C5C788
	0x0355F564 B 0x355F578
	0x0355F568 LDR W9, [X10]
	0x0355F56C ADD W9, W9, 0x1
	0x0355F570 ADD X8, X8, W9, 0x4, SXTW
	0x0355F574 ADD X0, X8, 0x138
	0x0355F578 LDP X8, X4, [X0]
	0x0355F57C MOVZ W1, 0x3
	0x0355F580 MOV X0, X19
	0x0355F584 MOV X2, X20
	0x0355F588 MOV X3, X21
	0x0355F58C BLR X8
	0x0355F590 LDR X0, [X22]
	0x0355F594 BL 0x1C16F10
	0x0355F598 MOV W1, W31
	0x0355F59C MOV X2, X31
	0x0355F5A0 MOV X19, X0
	0x0355F5A4 BL 0x33DCBA4
	0x0355F5A8 LDR X8, [X31 + 0xB8]
	0x0355F5AC ADD X9, X31, 0xB8
	0x0355F5B0 STR X19, [X8 + 0xE8]
	0x0355F5B4 STP X31, X9, [X31 + 0x68]
	0x0355F5B8 MOV X0, X31
	0x0355F5BC BL 0x3BE6AF4
	0x0355F5C0 LDR X8, [X31 + 0xB8]
	0x0355F5C4 LDP V2, V0, [X8 + 0x20]
	0x0355F5C8 LDR V1, [X8 + 0x1]
	0x0355F5CC LDR X19, [X8 + 0x48]
	0x0355F5D0 STP V2, V0, [X31 + 0x40]
	0x0355F5D4 STR V1, [X31 + 0x3]
	0x0355F5D8 CBZ X19, 0x355F6A8
	0x0355F5DC LDP V0, V1, [X31 + 0x30]
	0x0355F5E0 LDR V2, [X31 + 0x5]
	0x0355F5E4 ADRP X10, 0xBD6000
	0x0355F5E8 STP V0, V1, [X31]
	0x0355F5EC STR V2, [X31 + 0x2]
	0x0355F5F0 LDR X8, [X19]
	0x0355F5F4 LDR X10, [X10 + 0x468]
	0x0355F5F8 LDRH W9, [X8 + 0x12E]
	0x0355F5FC LDR X1, [X10]
	0x0355F600 CBZ X9, 0x355F624
	0x0355F604 LDR X10, [X8 + 0xB0]
	0x0355F608 ADD X10, X10, 0x8
	0x0355F60C LDUR X11, [X10 - 0x8]
	0x0355F610 CMP X11, X1
	0x0355F614 B.EQ 0x355F634
	0x0355F618 SUBS X9, X9, 0x1
	0x0355F61C ADD X10, X10, 0x10
	0x0355F620 B.NE 0x355F60C
	0x0355F624 MOV X0, X19
	0x0355F628 MOV W2, W31
	0x0355F62C BL 0x1C5C788
	0x0355F630 B 0x355F640
	0x0355F634 LDRSW X9, [X10]
	0x0355F638 ADD X8, X8, X9, 0x4, LSL
	0x0355F63C ADD X0, X8, 0x138
	0x0355F640 LDP V0, V1, [X31]
	0x0355F644 LDR V2, [X31 + 0x2]
	0x0355F648 LDR X8, [X0]
	0x0355F64C STP V0, V1, [X31 + 0x80]
	0x0355F650 STR V2, [X31 + 0xA]
	0x0355F654 LDR X2, [X0 + 0x8]
	0x0355F658 ADD X1, X31, 0x80
	0x0355F65C MOV X0, X19
	0x0355F660 BLR X8
	0x0355F664 LDR X8, [X31 + 0xB8]
	0x0355F668 LDRB W19, [X8 + 0x9E]
	0x0355F66C BL 0x1C16D44
	0x0355F670 CBNZ W19, 0x355F91C
	0x0355F674 LDR X0, [X31 + 0xB8]
	0x0355F678 BL 0x355C188
	0x0355F67C LDR X8, [X31 + 0xB8]
	0x0355F680 LDR X0, [X8 + 0xE8]
	0x0355F684 CBZ X0, 0x355F698
	0x0355F688 LDR X8, [X0]
	0x0355F68C LDP X9, X1, [X8 + 0x1D8]
	0x0355F690 BLR X9
	0x0355F694 B 0x355F664
	0x0355F698 BL 0x1C16F20
	0x0355F69C BL 0x1C16F20
	0x0355F6A0 MOV X0, X21
	0x0355F6A4 BL 0x1C16F18
	0x0355F6A8 BL 0x1C16F20
	0x0355F6AC B 0x355F6B8
	0x0355F6B0 B 0x355F71C
	0x0355F6B4 B 0x355F6B8
	0x0355F6B8 MOV X19, X0
	0x0355F6BC CMP W1, 0x1
	0x0355F6C0 B.NE 0x355F6DC
	0x0355F6C4 MOV X0, X19
	0x0355F6C8 BL 0x3EB1AD0
	0x0355F6CC LDR X21, [X0]
	0x0355F6D0 BL 0x3EB1AE0
	0x0355F6D4 MOV W19, W31
	0x0355F6D8 B 0x355F46C
	0x0355F6DC MOV X21, X31
	0x0355F6E0 B 0x355F6E8
	0x0355F6E4 MOV X19, X0
	0x0355F6E8 LDRB W8, [X31 + 0x7C]
	0x0355F6EC CBZ W8, 0x355F6FC
	0x0355F6F0 MOV X0, X20
	0x0355F6F4 MOV X1, X31
	0x0355F6F8 BL 0x33E14E4
	0x0355F6FC CBZ X21, 0x355F950
	0x0355F700 MOV X0, X21
	0x0355F704 BL 0x1C16F18
	0x0355F708 MOV X19, X0
	0x0355F70C B 0x355F720
	0x0355F710 B 0x355F71C
	0x0355F714 B 0x355F71C
	0x0355F718 B 0x355F71C
	0x0355F71C MOV X19, X0
	0x0355F720 CMP W1, 0x1
	0x0355F724 B.NE 0x355F8FC
	0x0355F728 MOV X0, X19
	0x0355F72C BL 0x3EB1AD0
	0x0355F730 MOV X19, X0
	0x0355F734 ADRP X0, 0xB94000
	0x0355F738 LDR X0, [X0 + 0x7D0]
	0x0355F73C BL 0x1C16D08
	0x0355F740 LDR X8, [X19]
	0x0355F744 LDR X1, [X8]
	0x0355F748 BL 0x1C17270
	0x0355F74C TBZ X0, 0x0, 0x355F8A8
	0x0355F750 LDR X22, [X19]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+48], X26
	004 Move [X31+56], X25
	005 Move [X31+64], X24
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X21, 0xE81000
	012 Move W8, [X21+3504]
	013 Move X20, X2
	014 Move W23, W1
	015 Move X19, X0
	016 Move [X31+44], W1
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {56}
	021 Move X0, 0xB95000
	022 Move X0, [X0+2504]
	023 Call 0x1C17CF4
	024 Move X0, 0xBBE000
	025 Move X0, [X0+3608]
	026 Call 0x1C17CF4
	027 Move X0, 0xBD7000
	028 Move X0, [X0+1000]
	029 Call 0x1C17CF4
	030 Move X0, 0xB9A000
	031 Move X0, [X0+840]
	032 Call 0x1C17CF4
	033 Move X0, 0xB95000
	034 Move X0, [X0+2760]
	035 Call 0x1C17CF4
	036 Move X0, 0xBD7000
	037 Move X0, [X0+1976]
	038 Call 0x1C17CF4
	039 Move X0, 0xBD7000
	040 Move X0, [X0+1608]
	041 Call 0x1C17CF4
	042 Move X0, 0xB96000
	043 Move X0, [X0+1544]
	044 Call 0x1C17CF4
	045 Move X0, 0xBD7000
	046 Move X0, [X0+1984]
	047 Call 0x1C17CF4
	048 Move X0, 0xB96000
	049 Move X0, [X0+1552]
	050 Call 0x1C17CF4
	051 Move X0, 0xBD7000
	052 Move X0, [X0+1992]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X21+3504], W8
	056 Move [X31+40], W31
	057 Move X8, [X19+288]
	058 Compare X8, 0
	059 JumpIfEqual {316}
	060 Move W9, [X8+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Add X8, X8, W23
	063 Move X25, 0xBBE000
	064 Move W21, [X8+32]
	065 Move X25, [X25+3608]
	066 Move [X31+40], W21
	067 Move X8, [X19+280]
	068 Compare X8, 0
	069 JumpIfEqual {316}
	070 Move W9, [X8+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Add X8, X8, X21
	073 Add X0, X8, 32
	074 Move W1, 1
	075 Move X2, X31
	076 Call Interlocked.Exchange, X0, X1
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X26, [X19+272]
	079 Compare X26, 0
	080 JumpIfEqual {316}
	081 Move W8, [X26+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X0, [X25]
	084 Move W9, 56
	085 NotImplemented "Instruction MADD not yet implemented."
	086 Add X22, X9, 32
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move X0, X22
	092 Call FrameBuffer.get_IsFEC, X0
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {113}
	097 Move X0, X19
	098 Move W1, W23
	099 Move X2, X20
	100 Move W3, W21
	101 Move X4, X22
	102 Call RemoteVoice.recoverLostEvent, X0, X1, X2, X3, X4
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfNotEqual {294}
	107 Move X8, [X19+200]
	108 Compare X8, 0
	109 JumpIfEqual {316}
	110 Move W9, [X8+48]
	111 Add W9, W9, 1
	112 Move [X8+48], W9
	113 Move X8, [X19+200]
	114 Compare X8, 0
	115 JumpIfEqual {316}
	116 Move X20, [X8+24]
	117 Compare X20, 0
	118 JumpIfEqual {316}
	119 Move X24, 0xB9A000
	120 Move X8, [X20]
	121 Move X24, [X24+840]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Move X1, [X24]
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move X0, X20
	133 Move W2, W31
	134 Call 0x1C5D788
	135 NotImplemented "Instruction LDRSW not yet implemented."
	136 Add X8, X8, X9
	137 Add X0, X8, 312
	138 Move X8, [X0]
	139 Move X1, [X0+8]
	140 Move X0, X20
	141 NotImplemented "Instruction BLR not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move X8, [X19+200]
	144 Compare X8, 0
	145 JumpIfEqual {316}
	146 Move X20, [X8+24]
	147 Move X8, 0xB95000
	148 Move X8, [X8+2760]
	149 Move W1, 8
	150 Move X0, [X8]
	151 Call 0x1C17D6C
	152 Compare X0, 0
	153 JumpIfEqual {316}
	154 Move W8, [X0+24]
	155 Move X23, X0
	156 Compare W8, 0
	157 JumpIfEqual {317}
	158 Move X9, [X19+184]
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move [X23+32], X9
	161 Move X8, 0xBD7000
	162 Move X8, [X8+1608]
	163 Add X0, X31, 44
	164 Move X1, X31
	165 Move X8, [X8]
	166 Move [X23+40], X8
	167 Call Byte.ToString, X0
	168 Move W8, [X23+24]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move [X23+48], X0
	172 Move X8, 0xBD7000
	173 Move X8, [X8+1976]
	174 Add X0, X31, 40
	175 Move X1, X31
	176 Move X8, [X8]
	177 Move [X23+56], X8
	178 Call Byte.ToString, X0
	179 Move W8, [X23+24]
	180 NotImplemented "Instruction CMP not yet implemented."
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move [X23+64], X0
	183 Move X8, 0xB96000
	184 Move X8, [X8+1552]
	185 Move X8, [X8]
	186 Move [X23+72], X8
	187 Move X0, [X25]
	188 Move W8, [X0+224]
	189 Compare W8, 0
	190 JumpIfNotEqual {192}
	191 Call 0x1C17DFC
	192 Move X8, [X22]
	193 Compare X8, 0
	194 JumpIfEqual {222}
	195 Move X0, [X25]
	196 Move W8, [X0+224]
	197 Compare W8, 0
	198 JumpIfNotEqual {200}
	199 Call 0x1C17DFC
	200 Move X9, 0xBD7000
	201 Move X9, [X9+1000]
	202 Move W8, 56
	203 NotImplemented "Instruction MADD not yet implemented."
	204 Move W8, [X8+81]
	205 Move X9, [X9]
	206 Move TEMP, 0
	207 Not TEMP
	208 Move X10, TEMP
	209 Add X0, X31, 8
	210 Move X1, X31
	211 Move [X31+8], X9
	212 Move [X31+16], X10
	213 Move [X31+24], W8
	214 Call Enum.ToString, X0
	215 Move X8, 0xBD7000
	216 Move X8, [X8+1984]
	217 Move X1, X0
	218 Move X2, X31
	219 Move X8, [X8]
	220 Move X0, X8
	221 Call String.Concat, X0, X1
	222 Move X8, 0xBD7000
	223 Move X8, [X8+1992]
	224 Move X0, [X8]
	225 Move W8, [X23+24]
	226 NotImplemented "Instruction CMP not yet implemented."
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move [X23+80], X0
	229 Move X8, 0xB96000
	230 Move X8, [X8+1544]
	231 Move X0, X23
	232 Move X1, X31
	233 Move X8, [X8]
	234 Move [X23+88], X8
	235 Call String.Concat, X0
	236 Move X8, 0xB95000
	237 Move X8, [X8+2504]
	238 Move X21, X0
	239 Move X22, [X8]
	240 Move X8, [X22+56]
	241 Compare X8, 0
	242 JumpIfNotEqual {246}
	243 Move X0, X22
	244 Call 0x1C5D6E0
	245 Move X8, [X22+56]
	246 Move X0, [X8+16]
	247 Move W8, [X0+309]
	248 Move TEMP, X8
	249 And TEMP, TEMP, 1
	250 Compare TEMP, 1
	251 JumpIfEqual {253}
	252 Call 0x1C5D684
	253 Move W8, [X0+224]
	254 Compare W8, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1C17DFC
	257 Move X8, [X22+56]
	258 Move X0, [X8+16]
	259 Move W8, [X0+309]
	260 Move TEMP, X8
	261 And TEMP, TEMP, 1
	262 Compare TEMP, 1
	263 JumpIfEqual {265}
	264 Call 0x1C5D684
	265 Compare X20, 0
	266 JumpIfEqual {316}
	267 Move X9, [X0+184]
	268 Move X8, [X20]
	269 Move X1, [X24]
	270 Move X22, [X9]
	271 NotImplemented "Instruction LDRH not yet implemented."
	272 Compare X9, 0
	273 JumpIfEqual {280}
	274 Move X10, [X8+176]
	275 Add X10, X10, 8
	276 NotImplemented "Instruction LDUR not yet implemented."
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Subtract X9, X9, 1
	279 Add X10, X10, 16
	280 Move W2, 1
	281 Move X0, X20
	282 Call 0x1C5D788
	283 Move W9, [X10]
	284 Add W9, W9, 1
	285 Add X8, X8, W9
	286 Add X0, X8, 312
	287 Move X8, [X0]
	288 Move X4, [X0+8]
	289 Move W1, 4
	290 Move X0, X20
	291 Move X2, X21
	292 Move X3, X22
	293 NotImplemented "Instruction BLR not yet implemented."
	294 Move X8, [X19+280]
	295 Compare X8, 0
	296 JumpIfEqual {316}
	297 Move W9, [X31+40]
	298 Move W10, [X8+24]
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Add X8, X8, X9
	301 Add X0, X8, 32
	302 Move W1, W31
	303 Move X2, X31
	304 Call Interlocked.Exchange, X0, X1
	305 Move X20, [X31+96]
	306 Move X19, [X31+104]
	307 Move X22, [X31+80]
	308 Move X21, [X31+88]
	309 Move X24, [X31+64]
	310 Move X23, [X31+72]
	311 Move X26, [X31+48]
	312 Move X25, [X31+56]
	313 Move X30, [X31+32]
	314 Add X31, X31, 112
	315 Return 
	316 Call 0x1C17F20
	317 Call 0x1C17F28

Method: System.Boolean recoverLostEvent(System.Byte lostEvNum, ref Photon.Voice.FrameBuffer lostEv, System.Byte fecEvNum, ref Photon.Voice.FrameBuffer fecEv)

Disassembly:
	0x0355F754 BL 0x3EB1AE0
	0x0355F758 LDR X8, [X31 + 0xB8]
	0x0355F75C LDR X9, [X8 + 0xC8]
	0x0355F760 CBZ X9, 0x355F8C8
	0x0355F764 LDR X19, [X9 + 0x18]
	0x0355F768 LDR X20, [X8 + 0xB8]
	0x0355F76C CBZ X22, 0x355F798
	0x0355F770 ADRP X0, 0xBD6000
	0x0355F774 LDR X0, [X0 + 0x808]
	0x0355F778 BL 0x1C16D08
	0x0355F77C LDR X8, [X22]
	0x0355F780 MOV X21, X0
	0x0355F784 LDP X9, X1, [X8 + 0x168]
	0x0355F788 MOV X0, X22
	0x0355F78C BLR X9
	0x0355F790 MOV X2, X0
	0x0355F794 B 0x355F7AC
	0x0355F798 ADRP X0, 0xBD6000
	0x0355F79C LDR X0, [X0 + 0x808]
	0x0355F7A0 BL 0x1C16D08
	0x0355F7A4 MOV X21, X0
	0x0355F7A8 MOV X2, X31
	0x0355F7AC MOV X0, X20
	0x0355F7B0 MOV X1, X21
	0x0355F7B4 MOV X3, X31
	0x0355F7B8 BL 0x32274B8
	0x0355F7BC MOV X20, X0
	0x0355F7C0 ADRP X0, 0xB94000
	0x0355F7C4 LDR X0, [X0 + 0x9C8]
	0x0355F7C8 BL 0x1C16D08
	0x0355F7CC LDR X8, [X0 + 0x38]
	0x0355F7D0 MOV X21, X0
	0x0355F7D4 CBNZ X8, 0x355F7E4
	0x0355F7D8 MOV X0, X21
	0x0355F7DC BL 0x1C5C6E0
	0x0355F7E0 LDR X8, [X21 + 0x38]
	0x0355F7E4 LDR X0, [X8 + 0x10]
	0x0355F7E8 LDRB W8, [X0 + 0x135]
	0x0355F7EC TBNZ X8, 0x0, 0x355F7F4
	0x0355F7F0 BL 0x1C5C684
	0x0355F7F4 LDR W8, [X0 + 0xE0]
	0x0355F7F8 CBNZ W8, 0x355F800
	0x0355F7FC BL 0x1C16DFC
	0x0355F800 LDR X8, [X21 + 0x38]
	0x0355F804 LDR X0, [X8 + 0x10]
	0x0355F808 LDRB W8, [X0 + 0x135]
	0x0355F80C TBNZ X8, 0x0, 0x355F814
	0x0355F810 BL 0x1C5C684
	0x0355F814 CBZ X19, 0x355F8CC
	0x0355F818 LDR X8, [X0 + 0xB8]
	0x0355F81C LDR X21, [X8]
	0x0355F820 ADRP X0, 0xB99000
	0x0355F824 LDR X0, [X0 + 0x348]
	0x0355F828 BL 0x1C16D08
	0x0355F82C MOV X1, X0
	0x0355F830 LDR X8, [X19]
	0x0355F834 LDRH W9, [X8 + 0x12E]
	0x0355F838 CBZ X9, 0x355F85C
	0x0355F83C LDR X10, [X8 + 0xB0]
	0x0355F840 ADD X10, X10, 0x8
	0x0355F844 LDUR X11, [X10 - 0x8]
	0x0355F848 CMP X11, X1
	0x0355F84C B.EQ 0x355F86C
	0x0355F850 SUBS X9, X9, 0x1
	0x0355F854 ADD X10, X10, 0x10
	0x0355F858 B.NE 0x355F844
	0x0355F85C MOVZ W2, 0x1
	0x0355F860 MOV X0, X19
	0x0355F864 BL 0x1C5C788
	0x0355F868 B 0x355F87C
	0x0355F86C LDR W9, [X10]
	0x0355F870 ADD W9, W9, 0x1
	0x0355F874 ADD X8, X8, W9, 0x4, SXTW
	0x0355F878 ADD X0, X8, 0x138
	0x0355F87C LDP X8, X4, [X0]
	0x0355F880 MOVZ W1, 0x1
	0x0355F884 MOV X0, X19
	0x0355F888 MOV X2, X20
	0x0355F88C MOV X3, X21
	0x0355F890 BLR X8
	0x0355F894 BL 0x1C16D44
	0x0355F898 LDR X0, [X31 + 0xB8]
	0x0355F89C STRB W31, [X0 + 0xAC]
	0x0355F8A0 BL 0x355C5D8
	0x0355F8A4 B 0x355F91C
	0x0355F8A8 MOVZ W0, 0x8
	0x0355F8AC BL 0x3EB1AF0
	0x0355F8B0 LDR X8, [X19]
	0x0355F8B4 STR X8, [X0]
	0x0355F8B8 ADRP X1, 0x955000
	0x0355F8BC ADD X1, X1, 0xE58
	0x0355F8C0 MOV X2, X31
	0x0355F8C4 BL 0x3EB1B00
	0x0355F8C8 BL 0x1C16F20
	0x0355F8CC BL 0x1C16F20
	0x0355F8D0 B 0x355F8F8
	0x0355F8D4 B 0x355F8F8
	0x0355F8D8 B 0x355F8F8
	0x0355F8DC B 0x355F8F8
	0x0355F8E0 B 0x355F8F8
	0x0355F8E4 MOV X20, X1
	0x0355F8E8 MOV X19, X0
	0x0355F8EC BL 0x3EB1AE0
	0x0355F8F0 MOV W1, W20
	0x0355F8F4 B 0x355F8FC
	0x0355F8F8 MOV X19, X0
	0x0355F8FC MOVZ W8, 0x1
	0x0355F900 CMP W1, W8
	0x0355F904 B.NE 0x355F948
	0x0355F908 MOV X0, X19
	0x0355F90C BL 0x3EB1AD0
	0x0355F910 LDR X8, [X0]
	0x0355F914 STR X8, [X31 + 0x68]
	0x0355F918 BL 0x3EB1AE0
	0x0355F91C ADD X0, X31, 0x68
	0x0355F920 BL 0x1BBFFD4
	0x0355F924 BL 0x1C16D44
	0x0355F928 LDR X8, [X31 + 0xB8]
	0x0355F92C STRB W31, [X8 + 0xAC]
	0x0355F930 LDP X20, X19, [X31 + 0xD0]
	0x0355F934 LDP X22, X21, [X31 + 0xC0]
	0x0355F938 LDR X30, [X31 + 0xB0]
	0x0355F93C ADD X31, X31, 0xE0
	0x0355F940 RET
	0x0355F944 MOV X19, X0
	0x0355F948 ADD X0, X31, 0x68
	0x0355F94C BL 0x1BBFFD4
	0x0355F950 MOV X0, X19
	0x0355F954 BL 0x1D2C690
	0x0355F958 BL 0x1990590
	0x0355F95C STP X30, X19, [X31 - 0x10]!
	0x0355F960 LDR X8, [X0 + 0x40]
	0x0355F964 MOV X19, X0
	0x0355F968 CBZ X8, 0x355F97C
	0x0355F96C LDR X9, [X8 + 0x18]
	0x0355F970 LDR X0, [X8 + 0x40]
	0x0355F974 LDR X1, [X8 + 0x28]
	0x0355F978 BLR X9
	0x0355F97C MOV X0, X19
	0x0355F980 LDP X30, X19, [X31], #0x10
	0x0355F984 B 0x355C5D8
	0x0355F988 RET
	0x0355F98C LDRB W0, [X0 + 0x10]
	0x0355F990 RET
	0x0355F994 AND W8, W1, 0x1
	0x0355F998 STRB W8, [X0 + 0x10]
	0x0355F99C RET
	0x0355F9A0 LDR X0, [X0 + 0x18]
	0x0355F9A4 RET
	0x0355F9A8 MOVZ W8, 0x1
	0x0355F9AC STRB W8, [X0 + 0x10]
	0x0355F9B0 RET
	0x0355F9B4 STR X30, [X31 - 0x30]!
	0x0355F9B8 STP X22, X21, [X31 + 0x10]
	0x0355F9BC STP X20, X19, [X31 + 0x20]
	0x0355F9C0 MOV W21, W1
	0x0355F9C4 MOV X1, X31
	0x0355F9C8 MOV X19, X3
	0x0355F9CC MOV W20, W2
	0x0355F9D0 MOV X22, X0
	0x0355F9D4 BL 0x33BDD8C
	0x0355F9D8 STP W21, W20, [X22 + 0x10]
	0x0355F9DC STR X19, [X22 + 0x18]
	0x0355F9E0 LDP X20, X19, [X31 + 0x20]
	0x0355F9E4 LDP X22, X21, [X31 + 0x10]
	0x0355F9E8 LDR X30, [X31], #0x30
	0x0355F9EC RET
	0x0355F9F0 LDR W0, [X0 + 0x10]
	0x0355F9F4 RET
	0x0355F9F8 STR W1, [X0 + 0x10]
	0x0355F9FC RET
	0x0355FA00 LDR W0, [X0 + 0x14]
	0x0355FA04 RET
	0x0355FA08 STR W1, [X0 + 0x14]
	0x0355FA0C RET
	0x0355FA10 LDR X0, [X0 + 0x18]
	0x0355FA14 RET
	0x0355FA18 STR X1, [X0 + 0x18]
	0x0355FA1C RET
	0x0355FA20 RET
	0x0355FA24 LDR X0, [X0 + 0x108]
	0x0355FA28 RET
	0x0355FA2C LDR X0, [X0 + 0x110]
	0x0355FA30 RET
	0x0355FA34 MOV W0, W31
	0x0355FA38 RET
	0x0355FA3C RET
	0x0355FA40 STR X30, [X31 - 0x30]!
	0x0355FA44 STP X22, X21, [X31 + 0x10]
	0x0355FA48 STP X20, X19, [X31 + 0x20]
	0x0355FA4C ADRP X22, 0xE80000
	0x0355FA50 ADRP X20, 0xBD6000
	0x0355FA54 ADRP X21, 0xBD6000
	0x0355FA58 LDRB W8, [X22 + 0xDB5]
	0x0355FA5C LDR X20, [X20 + 0x810]
	0x0355FA60 LDR X21, [X21 + 0x818]
	0x0355FA64 MOV X19, X0
	0x0355FA68 TBNZ X8, 0x0, 0x355FA8C
	0x0355FA6C ADRP X0, 0xBD6000
	0x0355FA70 LDR X0, [X0 + 0x818]
	0x0355FA74 BL 0x1C16CF4
	0x0355FA78 ADRP X0, 0xBD6000
	0x0355FA7C LDR X0, [X0 + 0x810]
	0x0355FA80 BL 0x1C16CF4
	0x0355FA84 MOVZ W8, 0x1
	0x0355FA88 STRB W8, [X22 + 0xDB5]
	0x0355FA8C MOV X0, X19
	0x0355FA90 BL 0x355823C
	0x0355FA94 LDR X0, [X20]
	0x0355FA98 BL 0x1C16F10
	0x0355FA9C MOV X1, X31
	0x0355FAA0 MOV X20, X0
	0x0355FAA4 BL 0x33BDD8C
	0x0355FAA8 STR X20, [X19 + 0x108]
	0x0355FAAC LDR X0, [X21]
	0x0355FAB0 BL 0x1C16F10
	0x0355FAB4 MOV X1, X31
	0x0355FAB8 MOV X20, X0
	0x0355FABC BL 0x33BDD8C
	0x0355FAC0 STR X20, [X19 + 0x110]
	0x0355FAC4 LDP X20, X19, [X31 + 0x20]
	0x0355FAC8 LDP X22, X21, [X31 + 0x10]
	0x0355FACC LDR X30, [X31], #0x30
	0x0355FAD0 RET
	0x0355FAD4 STR X30, [X31 - 0x20]!
	0x0355FAD8 STP X20, X19, [X31 + 0x10]
	0x0355FADC ADRP X19, 0xE80000
	0x0355FAE0 ADRP X20, 0xBD6000
	0x0355FAE4 LDRB W8, [X19 + 0xDB6]
	0x0355FAE8 LDR X20, [X20 + 0x820]
	0x0355FAEC TBNZ X8, 0x0, 0x355FB04
	0x0355FAF0 ADRP X0, 0xBD6000
	0x0355FAF4 LDR X0, [X0 + 0x820]
	0x0355FAF8 BL 0x1C16CF4
	0x0355FAFC MOVZ W8, 0x1
	0x0355FB00 STRB W8, [X19 + 0xDB6]
	0x0355FB04 LDR X0, [X20]
	0x0355FB08 BL 0x1C16F10
	0x0355FB0C MOV X19, X0
	0x0355FB10 BL 0x355FA40
	0x0355FB14 LDR X8, [X20]
	0x0355FB18 LDR X8, [X8 + 0xB8]
	0x0355FB1C STR X19, [X8]
	0x0355FB20 LDP X20, X19, [X31 + 0x10]
	0x0355FB24 LDR X30, [X31], #0x20
	0x0355FB28 RET
	0x0355FB2C SUB X31, X31, 0x110
	0x0355FB30 STP X29, X30, [X31 + 0xB0]
	0x0355FB34 STP X28, X27, [X31 + 0xC0]
	0x0355FB38 STP X26, X25, [X31 + 0xD0]
	0x0355FB3C STP X24, X23, [X31 + 0xE0]
	0x0355FB40 STP X22, X21, [X31 + 0xF0]
	0x0355FB44 STP X20, X19, [X31 + 0x100]
	0x0355FB48 ADRP X26, 0xE80000
	0x0355FB4C ADRP X29, 0xBD6000
	0x0355FB50 ADRP X28, 0xBBE000
	0x0355FB54 ADRP X27, 0xBBE000
	0x0355FB58 LDRB W8, [X26 + 0xDB7]
	0x0355FB5C LDR X29, [X29 + 0x828]
	0x0355FB60 LDR X28, [X28 + 0xF58]
	0x0355FB64 LDR X27, [X27 + 0xF68]
	0x0355FB68 MOV X24, X6
	0x0355FB6C MOV W20, W5
	0x0355FB70 MOV X21, X4
	0x0355FB74 MOV X25, X3
	0x0355FB78 MOV W22, W2
	0x0355FB7C MOV X23, X1
	0x0355FB80 MOV X19, X0
	0x0355FB84 TBNZ X8, 0x0, 0x355FBC0
	0x0355FB88 ADRP X0, 0xBBE000
	0x0355FB8C LDR X0, [X0 + 0xF58]
	0x0355FB90 BL 0x1C16CF4
	0x0355FB94 ADRP X0, 0xBD6000
	0x0355FB98 LDR X0, [X0 + 0x828]
	0x0355FB9C BL 0x1C16CF4
	0x0355FBA0 ADRP X0, 0xBD6000
	0x0355FBA4 LDR X0, [X0 + 0x830]
	0x0355FBA8 BL 0x1C16CF4
	0x0355FBAC ADRP X0, 0xBBE000
	0x0355FBB0 LDR X0, [X0 + 0xF68]
	0x0355FBB4 BL 0x1C16CF4
	0x0355FBB8 MOVZ W8, 0x1
	0x0355FBBC STRB W8, [X26 + 0xDB7]
	0x0355FBC0 LDP V1, V0, [X25 + 0x10]
	0x0355FBC4 LDR V2, [X25]
	0x0355FBC8 LDR X7, [X29]
	0x0355FBCC ADD X3, X31, 0x80
	0x0355FBD0 STP V1, V0, [X31 + 0x40]
	0x0355FBD4 LDP V4, V3, [X24]
	0x0355FBD8 ADD X6, X31, 0x60
	0x0355FBDC MOV X0, X19
	0x0355FBE0 MOV X1, X23
	0x0355FBE4 STP V3, V2, [X31 + 0x20]
	0x0355FBE8 STR V4, [X31 + 0x1]
	0x0355FBEC LDP V3, V4, [X31 + 0x10]
	0x0355FBF0 MOV W2, W22
	0x0355FBF4 MOV X4, X21
	0x0355FBF8 MOV W5, W20
	0x0355FBFC STP V2, V1, [X31 + 0x80]
	0x0355FC00 STR V0, [X31 + 0xA]
	0x0355FC04 STP V3, V4, [X31 + 0x60]
	0x0355FC08 BL 0x319075C
	0x0355FC0C LDR X0, [X28]
	0x0355FC10 LDP W20, W21, [X19 + 0x4C]
	0x0355FC14 BL 0x1C16F10
	0x0355FC18 MOV W1, W20
	0x0355FC1C MOV W2, W21
	0x0355FC20 MOV X22, X0
	0x0355FC24 BL 0x3554880
	0x0355FC28 STR X22, [X19 + 0x160]
	0x0355FC2C LDR X0, [X27]
	0x0355FC30 LDP W20, W21, [X19 + 0x4C]
	0x0355FC34 BL 0x1C16F10
	0x0355FC38 MOV W1, W20
	0x0355FC3C MOV W2, W21
	0x0355FC40 MOV X22, X0
	0x0355FC44 BL 0x3554B54
	0x0355FC48 STR X22, [X19 + 0x150]
	0x0355FC4C ADRP X8, 0xBD6000
	0x0355FC50 LDR X8, [X8 + 0x830]
	0x0355FC54 MOV X0, X19
	0x0355FC58 LDR X1, [X8]
	0x0355FC5C BL 0x319089C
	0x0355FC60 LDP X20, X19, [X31 + 0x100]
	0x0355FC64 LDP X22, X21, [X31 + 0xF0]
	0x0355FC68 LDP X24, X23, [X31 + 0xE0]
	0x0355FC6C LDP X26, X25, [X31 + 0xD0]
	0x0355FC70 LDP X28, X27, [X31 + 0xC0]
	0x0355FC74 LDP X29, X30, [X31 + 0xB0]
	0x0355FC78 ADD X31, X31, 0x110
	0x0355FC7C RET
	0x0355FC80 SUB X31, X31, 0x110
	0x0355FC84 STP X29, X30, [X31 + 0xB0]
	0x0355FC88 STP X28, X27, [X31 + 0xC0]
	0x0355FC8C STP X26, X25, [X31 + 0xD0]
	0x0355FC90 STP X24, X23, [X31 + 0xE0]
	0x0355FC94 STP X22, X21, [X31 + 0xF0]
	0x0355FC98 STP X20, X19, [X31 + 0x100]
	0x0355FC9C ADRP X26, 0xE80000
	0x0355FCA0 ADRP X29, 0xBD6000
	0x0355FCA4 ADRP X28, 0xBBE000
	0x0355FCA8 ADRP X27, 0xBBE000
	0x0355FCAC LDRB W8, [X26 + 0xDB8]
	0x0355FCB0 LDR X29, [X29 + 0x838]
	0x0355FCB4 LDR X28, [X28 + 0xF60]
	0x0355FCB8 LDR X27, [X27 + 0xF70]
	0x0355FCBC MOV X24, X6
	0x0355FCC0 MOV W20, W5
	0x0355FCC4 MOV X21, X4
	0x0355FCC8 MOV X25, X3
	0x0355FCCC MOV W22, W2
	0x0355FCD0 MOV X23, X1
	0x0355FCD4 MOV X19, X0
	0x0355FCD8 TBNZ X8, 0x0, 0x355FD14
	0x0355FCDC ADRP X0, 0xBBE000
	0x0355FCE0 LDR X0, [X0 + 0xF60]
	0x0355FCE4 BL 0x1C16CF4
	0x0355FCE8 ADRP X0, 0xBD6000
	0x0355FCEC LDR X0, [X0 + 0x838]
	0x0355FCF0 BL 0x1C16CF4
	0x0355FCF4 ADRP X0, 0xBD6000
	0x0355FCF8 LDR X0, [X0 + 0x840]
	0x0355FCFC BL 0x1C16CF4
	0x0355FD00 ADRP X0, 0xBBE000
	0x0355FD04 LDR X0, [X0 + 0xF70]
	0x0355FD08 BL 0x1C16CF4
	0x0355FD0C MOVZ W8, 0x1
	0x0355FD10 STRB W8, [X26 + 0xDB8]
	0x0355FD14 LDP V1, V0, [X25 + 0x10]
	0x0355FD18 LDR V2, [X25]
	0x0355FD1C LDR X7, [X29]
	0x0355FD20 ADD X3, X31, 0x80
	0x0355FD24 STP V1, V0, [X31 + 0x40]
	0x0355FD28 LDP V4, V3, [X24]
	0x0355FD2C ADD X6, X31, 0x60
	0x0355FD30 MOV X0, X19
	0x0355FD34 MOV X1, X23
	0x0355FD38 STP V3, V2, [X31 + 0x20]
	0x0355FD3C STR V4, [X31 + 0x1]
	0x0355FD40 LDP V3, V4, [X31 + 0x10]
	0x0355FD44 MOV W2, W22
	0x0355FD48 MOV X4, X21
	0x0355FD4C MOV W5, W20
	0x0355FD50 STP V2, V1, [X31 + 0x80]
	0x0355FD54 STR V0, [X31 + 0xA]
	0x0355FD58 STP V3, V4, [X31 + 0x60]
	0x0355FD5C BL 0x31901A4
	0x0355FD60 LDR X0, [X28]
	0x0355FD64 LDP W20, W21, [X19 + 0x4C]
	0x0355FD68 BL 0x1C16F10
	0x0355FD6C MOV W1, W20
	0x0355FD70 MOV W2, W21
	0x0355FD74 MOV X22, X0
	0x0355FD78 BL 0x35549C0
	0x0355FD7C STR X22, [X19 + 0x160]
	0x0355FD80 LDR X0, [X27]
	0x0355FD84 LDP W20, W21, [X19 + 0x4C]
	0x0355FD88 BL 0x1C16F10
	0x0355FD8C MOV W1, W20
	0x0355FD90 MOV W2, W21
	0x0355FD94 MOV X22, X0
	0x0355FD98 BL 0x3554CD8
	0x0355FD9C STR X22, [X19 + 0x150]
	0x0355FDA0 ADRP X8, 0xBD6000
	0x0355FDA4 LDR X8, [X8 + 0x840]
	0x0355FDA8 MOV X0, X19
	0x0355FDAC LDR X1, [X8]
	0x0355FDB0 BL 0x31902E4
	0x0355FDB4 LDP X20, X19, [X31 + 0x100]
	0x0355FDB8 LDP X22, X21, [X31 + 0xF0]
	0x0355FDBC LDP X24, X23, [X31 + 0xE0]
	0x0355FDC0 LDP X26, X25, [X31 + 0xD0]
	0x0355FDC4 LDP X28, X27, [X31 + 0xC0]
	0x0355FDC8 LDP X29, X30, [X31 + 0xB0]
	0x0355FDCC ADD X31, X31, 0x110
	0x0355FDD0 RET
	0x0355FDD4 LDRB W0, [X0]
	0x0355FDD8 RET
	0x0355FDDC LDR X0, [X0 + 0x8]
	0x0355FDE0 RET
	0x0355FDE4 LDRB W0, [X0 + 0x10]
	0x0355FDE8 RET
	0x0355FDEC LDRB W0, [X0 + 0x11]
	0x0355FDF0 RET
	0x0355FDF4 LDRB W0, [X0 + 0x12]
	0x0355FDF8 RET
	0x0355FDFC LDRB W0, [X0 + 0x20]
	0x0355FE00 RET
	0x0355FE04 AND W8, W1, 0x1
	0x0355FE08 STRB W8, [X0 + 0x20]
	0x0355FE0C RET
	0x0355FE10 LDR W0, [X0 + 0x24]
	0x0355FE14 RET
	0x0355FE18 STR W1, [X0 + 0x24]
	0x0355FE1C RET
	0x0355FE20 LDR W0, [X0 + 0x28]
	0x0355FE24 RET
	0x0355FE28 STR W1, [X0 + 0x28]
	0x0355FE2C RET
	0x0355FE30 LDR W0, [X0 + 0x2C]
	0x0355FE34 RET
	0x0355FE38 STR W1, [X0 + 0x2C]
	0x0355FE3C RET
	0x0355FE40 LDR W0, [X0 + 0x30]
	0x0355FE44 RET
	0x0355FE48 STR W1, [X0 + 0x30]
	0x0355FE4C RET
	0x0355FE50 LDR W0, [X0 + 0x34]
	0x0355FE54 RET
	0x0355FE58 STR W1, [X0 + 0x34]
	0x0355FE5C RET
	0x0355FE60 LDR W0, [X0 + 0x38]
	0x0355FE64 RET
	0x0355FE68 STR W1, [X0 + 0x38]
	0x0355FE6C RET
	0x0355FE70 LDR W0, [X0 + 0x3C]
	0x0355FE74 RET
	0x0355FE78 STR W1, [X0 + 0x3C]
	0x0355FE7C RET
	0x0355FE80 LDR W0, [X0 + 0x40]
	0x0355FE84 RET
	0x0355FE88 STR W1, [X0 + 0x40]
	0x0355FE8C RET
	0x0355FE90 LDR W0, [X0 + 0x44]
	0x0355FE94 RET
	0x0355FE98 STR W1, [X0 + 0x44]
	0x0355FE9C RET
	0x0355FEA0 LDR W0, [X0 + 0x48]
	0x0355FEA4 RET
	0x0355FEA8 STR W1, [X0 + 0x48]
	0x0355FEAC RET
	0x0355FEB0 SUB X31, X31, 0x50
	0x0355FEB4 STP X30, X21, [X31 + 0x30]
	0x0355FEB8 STP X20, X19, [X31 + 0x40]
	0x0355FEBC ADRP X20, 0xE80000
	0x0355FEC0 LDRB W8, [X20 + 0xDBA]
	0x0355FEC4 MOV X19, X0
	0x0355FEC8 TBNZ X8, 0x0, 0x355FF10
	0x0355FECC ADRP X0, 0xBD6000
	0x0355FED0 LDR X0, [X0 + 0x848]
	0x0355FED4 BL 0x1C16CF4
	0x0355FED8 ADRP X0, 0xBD6000
	0x0355FEDC LDR X0, [X0 + 0x850]
	0x0355FEE0 BL 0x1C16CF4
	0x0355FEE4 ADRP X0, 0xBD6000
	0x0355FEE8 LDR X0, [X0 + 0x858]
	0x0355FEEC BL 0x1C16CF4
	0x0355FEF0 ADRP X0, 0xBD6000
	0x0355FEF4 LDR X0, [X0 + 0x860]
	0x0355FEF8 BL 0x1C16CF4
	0x0355FEFC ADRP X0, 0xBD6000
	0x0355FF00 LDR X0, [X0 + 0x868]
	0x0355FF04 BL 0x1C16CF4
	0x0355FF08 MOVZ W8, 0x1
	0x0355FF0C STRB W8, [X20 + 0xDBA]
	0x0355FF10 MOVI V0.2D, 0x0
	0x0355FF14 STR X31, [X31 + 0x20]
	0x0355FF18 STP V0, V0, [X31]
	0x0355FF1C LDR X0, [X19 + 0x78]
	0x0355FF20 CBZ X0, 0x355FF94
	0x0355FF24 ADRP X8, 0xBD6000
	0x0355FF28 LDR X8, [X8 + 0x848]
	0x0355FF2C ADRP X21, 0xBD6000
	0x0355FF30 ADRP X20, 0xBD6000
	0x0355FF34 LDR X1, [X8]
	0x0355FF38 LDR X21, [X21 + 0x858]
	0x0355FF3C LDR X20, [X20 + 0x850]
	0x0355FF40 ADD X8, X31, 0x0
	0x0355FF44 BL 0x29D395C
	0x0355FF48 MOV W19, W31
	0x0355FF4C LDR X1, [X21]
	0x0355FF50 ADD X0, X31, 0x0
	0x0355FF54 BL 0x2BEA018
	0x0355FF58 TBZ X0, 0x0, 0x355FF70
	0x0355FF5C LDR X8, [X31 + 0x18]
	0x0355FF60 CBZ X8, 0x355FF90
	0x0355FF64 LDR W8, [X8 + 0x14]
	0x0355FF68 ADD W19, W8, W19
	0x0355FF6C B 0x355FF4C
	0x0355FF70 LDR X1, [X20]
	0x0355FF74 ADD X0, X31, 0x0
	0x0355FF78 BL 0x2BEA130
	0x0355FF7C MOV W0, W19
	0x0355FF80 LDP X20, X19, [X31 + 0x40]
	0x0355FF84 LDP X30, X21, [X31 + 0x30]
	0x0355FF88 ADD X31, X31, 0x50
	0x0355FF8C RET
	0x0355FF90 BL 0x1C16F20
	0x0355FF94 BL 0x1C16F20
	0x0355FF98 B 0x355FF9C
	0x0355FF9C MOV X21, X0
	0x0355FFA0 CMP W1, 0x1
	0x0355FFA4 B.NE 0x355FFD8
	0x0355FFA8 MOV X0, X21
	0x0355FFAC BL 0x3EB1AD0
	0x0355FFB0 LDR X20, [X0]
	0x0355FFB4 BL 0x3EB1AE0
	0x0355FFB8 ADRP X8, 0xBD6000
	0x0355FFBC LDR X8, [X8 + 0x850]
	0x0355FFC0 ADD X0, X31, 0x0
	0x0355FFC4 LDR X1, [X8]
	0x0355FFC8 BL 0x2BEA130
	0x0355FFCC CBZ X20, 0x355FF7C
	0x0355FFD0 MOV X0, X20
	0x0355FFD4 BL 0x1C16F18
	0x0355FFD8 MOV X20, X31
	0x0355FFDC B 0x355FFE4
	0x0355FFE0 MOV X21, X0
	0x0355FFE4 ADRP X8, 0xBD6000
	0x0355FFE8 LDR X8, [X8 + 0x850]
	0x0355FFEC LDR X1, [X8]
	0x0355FFF0 ADD X0, X31, 0x0
	0x0355FFF4 BL 0x2BEA130
	0x0355FFF8 CBNZ X20, 0x3560004
	0x0355FFFC MOV X0, X21
	0x03560000 BL 0x1D2C690
	0x03560004 MOV X0, X20
	0x03560008 BL 0x1C16F18
	0x0356000C BL 0x1990590
	0x03560010 SUB X31, X31, 0x50
	0x03560014 STP X30, X21, [X31 + 0x30]
	0x03560018 STP X20, X19, [X31 + 0x40]
	0x0356001C ADRP X20, 0xE7F000
	0x03560020 LDRB W8, [X20 + 0xDBB]
	0x03560024 MOV X19, X0
	0x03560028 TBNZ X8, 0x0, 0x3560070
	0x0356002C ADRP X0, 0xBD5000
	0x03560030 LDR X0, [X0 + 0x848]
	0x03560034 BL 0x1C16CF4
	0x03560038 ADRP X0, 0xBD5000
	0x0356003C LDR X0, [X0 + 0x850]
	0x03560040 BL 0x1C16CF4
	0x03560044 ADRP X0, 0xBD5000
	0x03560048 LDR X0, [X0 + 0x858]
	0x0356004C BL 0x1C16CF4
	0x03560050 ADRP X0, 0xBD5000
	0x03560054 LDR X0, [X0 + 0x860]
	0x03560058 BL 0x1C16CF4
	0x0356005C ADRP X0, 0xBD5000
	0x03560060 LDR X0, [X0 + 0x868]
	0x03560064 BL 0x1C16CF4
	0x03560068 MOVZ W8, 0x1
	0x0356006C STRB W8, [X20 + 0xDBB]
	0x03560070 MOVI V0.2D, 0x0
	0x03560074 STR X31, [X31 + 0x20]
	0x03560078 STP V0, V0, [X31]
	0x0356007C LDR X0, [X19 + 0x78]
	0x03560080 CBZ X0, 0x35600F4
	0x03560084 ADRP X8, 0xBD5000
	0x03560088 LDR X8, [X8 + 0x848]
	0x0356008C ADRP X21, 0xBD5000
	0x03560090 ADRP X20, 0xBD5000
	0x03560094 LDR X1, [X8]
	0x03560098 LDR X21, [X21 + 0x858]
	0x0356009C LDR X20, [X20 + 0x850]
	0x035600A0 ADD X8, X31, 0x0
	0x035600A4 BL 0x29D395C
	0x035600A8 MOV W19, W31
	0x035600AC LDR X1, [X21]
	0x035600B0 ADD X0, X31, 0x0
	0x035600B4 BL 0x2BEA018
	0x035600B8 TBZ X0, 0x0, 0x35600D0
	0x035600BC LDR X8, [X31 + 0x18]
	0x035600C0 CBZ X8, 0x35600F0
	0x035600C4 LDR W8, [X8 + 0x20]
	0x035600C8 ADD W19, W8, W19
	0x035600CC B 0x35600AC
	0x035600D0 LDR X1, [X20]
	0x035600D4 ADD X0, X31, 0x0
	0x035600D8 BL 0x2BEA130
	0x035600DC MOV W0, W19
	0x035600E0 LDP X20, X19, [X31 + 0x40]
	0x035600E4 LDP X30, X21, [X31 + 0x30]
	0x035600E8 ADD X31, X31, 0x50
	0x035600EC RET
	0x035600F0 BL 0x1C16F20
	0x035600F4 BL 0x1C16F20
	0x035600F8 B 0x35600FC
	0x035600FC MOV X21, X0
	0x03560100 CMP W1, 0x1
	0x03560104 B.NE 0x3560138
	0x03560108 MOV X0, X21
	0x0356010C BL 0x3EB1AD0
	0x03560110 LDR X20, [X0]
	0x03560114 BL 0x3EB1AE0
	0x03560118 ADRP X8, 0xBD5000
	0x0356011C LDR X8, [X8 + 0x850]
	0x03560120 ADD X0, X31, 0x0
	0x03560124 LDR X1, [X8]
	0x03560128 BL 0x2BEA130
	0x0356012C CBZ X20, 0x35600DC
	0x03560130 MOV X0, X20
	0x03560134 BL 0x1C16F18
	0x03560138 MOV X20, X31
	0x0356013C B 0x3560144
	0x03560140 MOV X21, X0
	0x03560144 ADRP X8, 0xBD5000
	0x03560148 LDR X8, [X8 + 0x850]
	0x0356014C LDR X1, [X8]
	0x03560150 ADD X0, X31, 0x0
	0x03560154 BL 0x2BEA130
	0x03560158 CBNZ X20, 0x3560164
	0x0356015C MOV X0, X21
	0x03560160 BL 0x1D2C690
	0x03560164 MOV X0, X20
	0x03560168 BL 0x1C16F18
	0x0356016C BL 0x1990590
	0x03560170 LDR W0, [X0 + 0x4C]
	0x03560174 RET
	0x03560178 STR W1, [X0 + 0x4C]
	0x0356017C RET
	0x03560180 LDR W0, [X0 + 0x50]
	0x03560184 RET
	0x03560188 STR W1, [X0 + 0x50]
	0x0356018C RET
	0x03560190 LDRB W0, [X0 + 0x54]
	0x03560194 RET
	0x03560198 AND W8, W1, 0x1
	0x0356019C STRB W8, [X0 + 0x54]
	0x035601A0 RET
	0x035601A4 LDR X0, [X0 + 0x58]
	0x035601A8 RET
	0x035601AC STR X1, [X0 + 0x58]
	0x035601B0 RET
	0x035601B4 LDR W0, [X0 + 0x60]
	0x035601B8 RET
	0x035601BC STR W1, [X0 + 0x60]
	0x035601C0 RET
	0x035601C4 STR X30, [X31 - 0x20]!
	0x035601C8 STP X20, X19, [X31 + 0x10]
	0x035601CC ADRP X20, 0xE7F000
	0x035601D0 LDRB W8, [X20 + 0xDBC]
	0x035601D4 MOV X19, X0
	0x035601D8 TBNZ X8, 0x0, 0x3560214
	0x035601DC ADRP X0, 0xBD5000
	0x035601E0 LDR X0, [X0 + 0x870]
	0x035601E4 BL 0x1C16CF4
	0x035601E8 ADRP X0, 0xBD5000
	0x035601EC LDR X0, [X0 + 0x878]
	0x035601F0 BL 0x1C16CF4
	0x035601F4 ADRP X0, 0xBD5000
	0x035601F8 LDR X0, [X0 + 0x880]
	0x035601FC BL 0x1C16CF4
	0x03560200 ADRP X0, 0xBD5000
	0x03560204 LDR X0, [X0 + 0x888]
	0x03560208 BL 0x1C16CF4
	0x0356020C MOVZ W8, 0x1
	0x03560210 STRB W8, [X20 + 0xDBC]
	0x03560214 LDR X0, [X19 + 0x78]
	0x03560218 CBZ X0, 0x3560290
	0x0356021C ADRP X8, 0xBD5000
	0x03560220 LDR X8, [X8 + 0x870]
	0x03560224 ADRP X20, 0xBD5000
	0x03560228 LDR X1, [X8]
	0x0356022C LDR X20, [X20 + 0x880]
	0x03560230 BL 0x29D3304
	0x03560234 LDR X8, [X20]
	0x03560238 MOV W1, W0
	0x0356023C MOV X0, X8
	0x03560240 BL 0x1C16D6C
	0x03560244 LDR X8, [X19 + 0x78]
	0x03560248 CBZ X8, 0x3560290
	0x0356024C ADRP X9, 0xBD5000
	0x03560250 LDR X9, [X9 + 0x878]
	0x03560254 MOV X19, X0
	0x03560258 MOV X0, X8
	0x0356025C LDR X1, [X9]
	0x03560260 BL 0x29D33D4
	0x03560264 CBZ X0, 0x3560290
	0x03560268 ADRP X8, 0xBD5000
	0x0356026C LDR X8, [X8 + 0x888]
	0x03560270 MOV X1, X19
	0x03560274 MOV W2, W31
	0x03560278 LDR X3, [X8]
	0x0356027C BL 0x2743344
	0x03560280 MOV X0, X19
	0x03560284 LDP X20, X19, [X31 + 0x10]
	0x03560288 LDR X30, [X31], #0x20
	0x0356028C RET
	0x03560290 BL 0x1C16F20
	0x03560294 SUB X31, X31, 0x30
	0x03560298 STP X30, X21, [X31 + 0x10]
	0x0356029C STP X20, X19, [X31 + 0x20]
	0x035602A0 ADRP X21, 0xE7F000
	0x035602A4 LDRB W8, [X21 + 0xDBD]
	0x035602A8 MOV W19, W1
	0x035602AC MOV X20, X0
	0x035602B0 TBNZ X8, 0x0, 0x35602EC
	0x035602B4 ADRP X0, 0xBD5000
	0x035602B8 LDR X0, [X0 + 0x890]
	0x035602BC BL 0x1C16CF4
	0x035602C0 ADRP X0, 0xBD5000
	0x035602C4 LDR X0, [X0 + 0x898]
	0x035602C8 BL 0x1C16CF4
	0x035602CC ADRP X0, 0xBD5000
	0x035602D0 LDR X0, [X0 + 0x8A0]
	0x035602D4 BL 0x1C16CF4
	0x035602D8 ADRP X0, 0xBD5000
	0x035602DC LDR X0, [X0 + 0x880]
	0x035602E0 BL 0x1C16CF4
	0x035602E4 MOVZ W8, 0x1
	0x035602E8 STRB W8, [X21 + 0xDBD]
	0x035602EC STR X31, [X31 + 0x8]
	0x035602F0 LDR X0, [X20 + 0x80]
	0x035602F4 CBZ X0, 0x3560388
	0x035602F8 ADRP X8, 0xBD5000
	0x035602FC LDR X8, [X8 + 0x890]
	0x03560300 ADD X2, X31, 0x8
	0x03560304 MOV W1, W19
	0x03560308 LDR X3, [X8]
	0x0356030C BL 0x2A150AC
	0x03560310 TBZ X0, 0x0, 0x356035C
	0x03560314 LDR X8, [X31 + 0x8]
	0x03560318 CBZ X8, 0x3560388
	0x0356031C LDR W1, [X8 + 0x18]
	0x03560320 ADRP X8, 0xBD5000
	0x03560324 LDR X8, [X8 + 0x880]
	0x03560328 LDR X0, [X8]
	0x0356032C BL 0x1C16D6C
	0x03560330 LDR X8, [X31 + 0x8]
	0x03560334 CBZ X8, 0x3560388
	0x03560338 ADRP X9, 0xBD5000
	0x0356033C LDR X9, [X9 + 0x898]
	0x03560340 MOV X19, X0
	0x03560344 MOV X0, X8
	0x03560348 MOV X1, X19
	0x0356034C LDR X3, [X9]
	0x03560350 MOV W2, W31
	0x03560354 BL 0x301C538
	0x03560358 B 0x3560374
	0x0356035C ADRP X8, 0xBD5000
	0x03560360 LDR X8, [X8 + 0x880]
	0x03560364 MOV W1, W31
	0x03560368 LDR X0, [X8]
	0x0356036C BL 0x1C16D6C
	0x03560370 MOV X19, X0
	0x03560374 MOV X0, X19
	0x03560378 LDP X20, X19, [X31 + 0x20]
	0x0356037C LDP X30, X21, [X31 + 0x10]
	0x03560380 ADD X31, X31, 0x30
	0x03560384 RET
	0x03560388 BL 0x1C16F20
	0x0356038C STP X30, X21, [X31 - 0x20]!
	0x03560390 STP X20, X19, [X31 + 0x10]
	0x03560394 ADRP X20, 0xE7F000
	0x03560398 ADRP X21, 0xBD5000

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X29
	003 Move [X31+136], X30
	004 Move [X31+144], X28
	005 Move [X31+152], X27
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move [X31+8], X2
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X24+40]
	017 Move X21, 0xE81000
	018 Move X20, X4
	019 Move W23, W3
	020 Move [X31+120], X8
	021 Move W8, [X21+3505]
	022 Move W22, W1
	023 Move X19, X0
	024 Move [X31+76], W1
	025 Move [X31+72], W3
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {74}
	030 Move X0, 0xB95000
	031 Move X0, [X0+2504]
	032 Call 0x1C17CF4
	033 Move X0, 0xBBE000
	034 Move X0, [X0+3608]
	035 Call 0x1C17CF4
	036 Move X0, 0xB9A000
	037 Move X0, [X0+840]
	038 Call 0x1C17CF4
	039 Move X0, 0xBD7000
	040 Move X0, [X0+1872]
	041 Call 0x1C17CF4
	042 Move X0, 0xB95000
	043 Move X0, [X0+2760]
	044 Call 0x1C17CF4
	045 Move X0, 0xBD7000
	046 Move X0, [X0+1592]
	047 Call 0x1C17CF4
	048 Move X0, 0xB96000
	049 Move X0, [X0+680]
	050 Call 0x1C17CF4
	051 Move X0, 0xBD7000
	052 Move X0, [X0+2000]
	053 Call 0x1C17CF4
	054 Move X0, 0xBD7000
	055 Move X0, [X0+1608]
	056 Call 0x1C17CF4
	057 Move X0, 0xBD7000
	058 Move X0, [X0+2008]
	059 Call 0x1C17CF4
	060 Move X0, 0xBD7000
	061 Move X0, [X0+2016]
	062 Call 0x1C17CF4
	063 Move X0, 0xBD7000
	064 Move X0, [X0+2024]
	065 Call 0x1C17CF4
	066 Move X0, 0xBD7000
	067 Move X0, [X0+2032]
	068 Call 0x1C17CF4
	069 Move X0, 0xBD7000
	070 Move X0, [X0+1624]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X21+3505], W8
	074 Move [X31+68], W31
	075 Move [X31+64], W31
	076 Move [X31+56], W31
	077 Move X8, [X19+200]
	078 Compare X8, 0
	079 JumpIfEqual {815}
	080 Move W9, [X8+64]
	081 Move X25, 0xBBE000
	082 Move X25, [X25+3608]
	083 Move [X31+60], W9
	084 Add W9, W9, 1
	085 Move [X8+64], W9
	086 Move X0, [X25]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move X8, [X20]
	092 Compare X8, 0
	093 JumpIfEqual {815}
	094 Move W10, [X20+8]
	095 Move W11, [X20+12]
	096 Move W9, [X8+24]
	097 Add W10, W11, W10
	098 Subtract W11, W10, 5
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Subtract W12, W10, 4
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Subtract W13, W10, 3
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Subtract W14, W10, 2
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Add X15, X8, 32
	107 Add X11, X8, W11
	108 Add X12, X8, W12
	109 Move W28, [X15]
	110 Move W13, [X15]
	111 Move W26, [X11+32]
	112 Move W11, [X12+32]
	113 Subtract W10, W10, 1
	114 NotImplemented "Instruction BFM not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move [X31+44], W11
	117 Move [X31+68], W28
	118 Add X8, X8, W10
	119 Move W29, [X8+32]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move [X31+64], W29
	122 Move [X31], X24
	123 Move W24, W29
	124 Move [X31+40], W26
	125 And W26, W24, 255
	126 NotImplemented "Instruction CMP not yet implemented."
	127 And X27, X24, 255
	128 Move X8, [X19+216]
	129 Compare X8, 0
	130 JumpIfEqual {815}
	131 Move W9, [X8+24]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Add X8, X8, X27
	134 Add X0, X8, 32
	135 Move W1, 1
	136 Move X2, X31
	137 Call Interlocked.Exchange, X0, X1
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X21, [X19+208]
	140 Compare X21, 0
	141 JumpIfEqual {815}
	142 Move X0, [X25]
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {147}
	146 Call 0x1C17DFC
	147 Move W8, [X21+24]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move W8, 56
	150 NotImplemented "Instruction MADD not yet implemented."
	151 Move X8, [X8+32]
	152 Compare X8, 0
	153 JumpIfEqual {160}
	154 Add W24, W24, 1
	155 And W8, W24, 255
	156 NotImplemented "Instruction CMP not yet implemented."
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X24, [X31]
	159 Move W26, [X31+40]
	160 Add W8, W24, 1
	161 NotImplemented "Instruction CMP not yet implemented."
	162 And W8, W29, 255
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move X8, [X19+216]
	165 Compare X8, 0
	166 JumpIfEqual {815}
	167 Move W9, [X8+24]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Add X8, X8, W29
	170 Add X0, X8, 32
	171 Move W1, W31
	172 Move X2, X31
	173 Call Interlocked.Exchange, X0, X1
	174 And W8, W24, 255
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Add W8, W29, 1
	177 Move W29, W8
	178 Move X8, [X19+200]
	179 Compare X8, 0
	180 JumpIfEqual {815}
	181 Move X20, [X8+24]
	182 Move X24, [X31]
	183 Compare X20, 0
	184 JumpIfEqual {815}
	185 Move X22, 0xB9A000
	186 Move X8, [X20]
	187 Move X22, [X22+840]
	188 NotImplemented "Instruction LDRH not yet implemented."
	189 Move X1, [X22]
	190 Compare X9, 0
	191 JumpIfEqual {198}
	192 Move X10, [X8+176]
	193 Add X10, X10, 8
	194 NotImplemented "Instruction LDUR not yet implemented."
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Subtract X9, X9, 1
	197 Add X10, X10, 16
	198 Move X0, X20
	199 Move W2, W31
	200 Call 0x1C5D788
	201 Move W26, [X31+40]
	202 Move X24, 1
	203 And W8, W29, 255
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Move X8, [X19+208]
	206 Compare X8, 0
	207 JumpIfEqual {815}
	208 Move W9, [X8+24]
	209 And W23, W29, 255
	210 Move [X31+40], W26
	211 NotImplemented "Instruction CMP not yet implemented."
	212 And X10, X29, 255
	213 Move W9, 56
	214 NotImplemented "Instruction MADD not yet implemented."
	215 Move [X31+24], X10
	216 Move X27, [X8+32]
	217 Move W26, [X8+40]
	218 Move W10, [X8+44]
	219 Move W9, [X8+81]
	220 Move W8, [X8+82]
	221 Move X28, X31
	222 Move [X31+36], W10
	223 NotImplemented "Instruction BIC not yet implemented."
	224 Move [X31+16], W9
	225 Move [X31+20], W8
	226 Move X21, X26
	227 ShiftRight X21, 32
	228 And X21, X21, 0x7FFFFFFF
	229 Move X0, [X25]
	230 Move W8, [X0+224]
	231 Compare W8, 0
	232 JumpIfNotEqual {239}
	233 Call 0x1C17DFC
	234 Move X0, [X25]
	235 Move W8, [X0+224]
	236 Compare W8, 0
	237 JumpIfNotEqual {239}
	238 Call 0x1C17DFC
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Move X8, [X20]
	241 Compare X8, 0
	242 JumpIfEqual {815}
	243 Move W9, [X20+8]
	244 Move W10, [X8+24]
	245 Add X9, X28, X9
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Add X8, X8, W9
	248 Add X8, X8, 32
	249 Move W9, [X8]
	250 Compare X27, 0
	251 JumpIfEqual {815}
	252 Move W10, [X27+24]
	253 Add X11, X26, X28
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Add X10, X27, X21
	256 Move W10, [X10+32]
	257 Add X28, X28, 1
	258 Add X21, X21, X24
	259 Xor W9, W10, W9
	260 Move [X8], W9
	261 Move W8, [X31+68]
	262 Move W9, [X31+36]
	263 Subtract W28, W8, W9
	264 Move [X31+68], W28
	265 Move X8, [X19+216]
	266 Compare X8, 0
	267 JumpIfEqual {815}
	268 Move W9, [X8+24]
	269 Move W26, [X31+40]
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Move W9, [X31+44]
	272 Move W10, [X31+16]
	273 Move W1, W31
	274 Move X2, X31
	275 Xor W9, W10, W9
	276 Move [X31+44], W9
	277 Move W9, [X31+20]
	278 Xor W26, W9, W26
	279 Move X9, [X31+24]
	280 Add X8, X8, X9
	281 Add X0, X8, 32
	282 Call Interlocked.Exchange, X0, X1
	283 Move W23, [X31+72]
	284 Add W29, W29, 1
	285 And W8, W29, 255
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Move W22, [X31+76]
	288 Move X24, [X31]
	289 Move TEMP, X28
	290 And TEMP, TEMP, -2147483648
	291 Compare TEMP, -2147483648
	292 JumpIfEqual {300}
	293 Move X0, [X25]
	294 Move W8, [X0+224]
	295 Compare W8, 0
	296 JumpIfNotEqual {298}
	297 Call 0x1C17DFC
	298 Move W8, [X20+12]
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Move X8, [X19+200]
	301 Compare X8, 0
	302 JumpIfEqual {815}
	303 Move X21, [X8+24]
	304 Compare X21, 0
	305 JumpIfEqual {815}
	306 Move X23, 0xB9A000
	307 Move X8, [X21]
	308 Move X23, [X23+840]
	309 NotImplemented "Instruction LDRH not yet implemented."
	310 Move X1, [X23]
	311 Compare X9, 0
	312 JumpIfEqual {319}
	313 Move X10, [X8+176]
	314 Add X10, X10, 8
	315 NotImplemented "Instruction LDUR not yet implemented."
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Subtract X9, X9, 1
	318 Add X10, X10, 16
	319 Move X0, X21
	320 Move W2, W31
	321 Call 0x1C5D788
	322 Move W8, [X20+48]
	323 Move V1, [X20+16]
	324 Move V0, [X20+32]
	325 Move X21, [X20]
	326 Move X0, [X25]
	327 Move [X31+112], W8
	328 Move [X31+80], V1
	329 Move [X31+88], V0
	330 Move W8, [X20+55]
	331 NotImplemented "Instruction LDUR not yet implemented."
	332 Move [X31+52], W8
	333 Move [X31+48], W9
	334 Move W8, [X0+224]
	335 Compare W8, 0
	336 JumpIfNotEqual {338}
	337 Call 0x1C17DFC
	338 Move W8, [X20+8]
	339 Move X10, [X31+8]
	340 Move W9, [X31+44]
	341 Move [X10], X21
	342 Move [X10+8], W8
	343 Move [X10+12], W28
	344 Move W8, [X31+112]
	345 Move V0, [X31+80]
	346 Move V1, [X31+96]
	347 Move [X10+49], W9
	348 Move [X10+50], W26
	349 Move [X10+48], W8
	350 Move [X10+16], V0
	351 Move [X10+24], V1
	352 Move W8, [X31+52]
	353 Move W9, [X31+48]
	354 Move X21, 0xBD7000
	355 Move [X10+55], W8
	356 Move [X10+51], W9
	357 Move X21, [X21+1872]
	358 Move X0, [X21]
	359 Move W8, [X0+224]
	360 Compare W8, 0
	361 JumpIfNotEqual {364}
	362 Call 0x1C17DFC
	363 Move X0, [X21]
	364 Move X8, [X0+184]
	365 Move X9, [X8+48]
	366 Move V1, [X8+16]
	367 Move V0, [X8+32]
	368 Move V2, [X8]
	369 Move [X20+48], X9
	370 Move [X20+16], V1
	371 Move [X20+24], V0
	372 Move [X20], V2
	373 Move X8, [X19+200]
	374 Compare X8, 0
	375 JumpIfEqual {815}
	376 Move X20, [X8+24]
	377 Compare X20, 0
	378 JumpIfEqual {815}
	379 Move X23, 0xB9A000
	380 Move X8, [X20]
	381 Move X23, [X23+840]
	382 NotImplemented "Instruction LDRH not yet implemented."
	383 Move X1, [X23]
	384 Compare X9, 0
	385 JumpIfEqual {392}
	386 Move X10, [X8+176]
	387 Add X10, X10, 8
	388 NotImplemented "Instruction LDUR not yet implemented."
	389 NotImplemented "Instruction CMP not yet implemented."
	390 Subtract X9, X9, 1
	391 Add X10, X10, 16
	392 Move X0, X20
	393 Move W2, W31
	394 Call 0x1C5D788
	395 NotImplemented "Instruction LDRSW not yet implemented."
	396 Add X8, X8, X9
	397 Add X0, X8, 312
	398 Move X8, [X0]
	399 Move X1, [X0+8]
	400 Move X0, X21
	401 NotImplemented "Instruction BLR not yet implemented."
	402 NotImplemented "Instruction CMP not yet implemented."
	403 Move X8, [X19+200]
	404 Compare X8, 0
	405 JumpIfEqual {815}
	406 Move X21, [X8+24]
	407 Move X8, 0xB95000
	408 Move X8, [X8+2760]
	409 Move W1, 7
	410 Move X0, [X8]
	411 Call 0x1C17D6C
	412 Compare X0, 0
	413 JumpIfEqual {815}
	414 Move W8, [X0+24]
	415 Move X22, X0
	416 Compare W8, 0
	417 JumpIfEqual {814}
	418 Move X9, [X19+184]
	419 NotImplemented "Instruction CMP not yet implemented."
	420 Move [X22+32], X9
	421 Move X8, 0xBD7000
	422 Move X8, [X8+1608]
	423 Add X0, X31, 76
	424 Move X1, X31
	425 Move X8, [X8]
	426 Move [X22+40], X8
	427 Call Byte.ToString, X0
	428 Move W8, [X22+24]
	429 NotImplemented "Instruction CMP not yet implemented."
	430 NotImplemented "Instruction CMP not yet implemented."
	431 Move [X22+48], X0
	432 Move X8, 0xBD7000
	433 Move X8, [X8+2024]
	434 Move X8, [X8]
	435 Move [X22+56], X8
	436 Move X0, [X25]
	437 Move W8, [X0+224]
	438 Compare W8, 0
	439 JumpIfNotEqual {441}
	440 Call 0x1C17DFC
	441 Move W8, [X20+12]
	442 Add X0, X31, 60
	443 Move X1, X31
	444 Move [X31+60], W8
	445 Call Int32.ToString, X0
	446 Move W8, [X22+24]
	447 NotImplemented "Instruction CMP not yet implemented."
	448 NotImplemented "Instruction CMP not yet implemented."
	449 Move [X22+64], X0
	450 Move X8, 0xBD7000
	451 Move X8, [X8+2008]
	452 Add X0, X31, 68
	453 Move X1, X31
	454 Move X8, [X8]
	455 Move [X22+72], X8
	456 Call Int32.ToString, X0
	457 Move W8, [X22+24]
	458 NotImplemented "Instruction CMP not yet implemented."
	459 Move [X22+80], X0
	460 Move X0, X22
	461 Move X1, X31
	462 Call String.Concat, X0
	463 Move X8, 0xB95000
	464 Move X8, [X8+2504]
	465 Move X19, X0
	466 Move X20, [X8]
	467 Move X8, [X20+56]
	468 Compare X8, 0
	469 JumpIfNotEqual {473}
	470 Move X0, X20
	471 Call 0x1C5D6E0
	472 Move X8, [X20+56]
	473 Move X0, [X8+16]
	474 Move W8, [X0+309]
	475 Move TEMP, X8
	476 And TEMP, TEMP, 1
	477 Compare TEMP, 1
	478 JumpIfEqual {480}
	479 Call 0x1C5D684
	480 Move W8, [X0+224]
	481 Compare W8, 0
	482 JumpIfNotEqual {484}
	483 Call 0x1C17DFC
	484 Move X8, [X20+56]
	485 Move X0, [X8+16]
	486 Move W8, [X0+309]
	487 Move TEMP, X8
	488 And TEMP, TEMP, 1
	489 Compare TEMP, 1
	490 JumpIfEqual {492}
	491 Call 0x1C5D684
	492 Compare X21, 0
	493 JumpIfEqual {815}
	494 Move X9, [X0+184]
	495 Move X8, [X21]
	496 Move X1, [X23]
	497 Move X20, [X9]
	498 NotImplemented "Instruction LDRH not yet implemented."
	499 Compare X9, 0
	500 JumpIfEqual {507}
	501 Move X10, [X8+176]
	502 Add X10, X10, 8
	503 NotImplemented "Instruction LDUR not yet implemented."
	504 NotImplemented "Instruction CMP not yet implemented."
	505 Subtract X9, X9, 1
	506 Add X10, X10, 16
	507 Move W2, 1
	508 Move X0, X21
	509 Call 0x1C5D788
	510 NotImplemented "Instruction LDRSW not yet implemented."
	511 Add X8, X8, X9
	512 Add X0, X8, 312
	513 Move X8, [X0]
	514 Move X1, [X0+8]
	515 Move X0, X20
	516 NotImplemented "Instruction BLR not yet implemented."
	517 NotImplemented "Instruction CMP not yet implemented."
	518 Move X8, [X19+200]
	519 Compare X8, 0
	520 JumpIfEqual {815}
	521 Move X20, [X8+24]
	522 Move X8, 0xB95000
	523 Move X8, [X8+2760]
	524 Move W1, 11
	525 Move X0, [X8]
	526 Call 0x1C17D6C
	527 Compare X0, 0
	528 JumpIfEqual {815}
	529 Move W8, [X0+24]
	530 Move X22, X0
	531 Compare W8, 0
	532 JumpIfEqual {814}
	533 Move X9, [X19+184]
	534 NotImplemented "Instruction CMP not yet implemented."
	535 Move [X22+32], X9
	536 Move X8, 0xBD7000
	537 Move X8, [X8+1608]
	538 Add X0, X31, 76
	539 Move X1, X31
	540 Move X8, [X8]
	541 Move [X22+40], X8
	542 Call Byte.ToString, X0
	543 Move W8, [X22+24]
	544 NotImplemented "Instruction CMP not yet implemented."
	545 NotImplemented "Instruction CMP not yet implemented."
	546 Move [X22+48], X0
	547 Move X8, 0xBD7000
	548 Move X8, [X8+1592]
	549 Move X8, [X8]
	550 Move [X22+56], X8
	551 Move X0, [X25]
	552 Move W8, [X0+224]
	553 Compare W8, 0
	554 JumpIfNotEqual {556}
	555 Call 0x1C17DFC
	556 Move X8, [X31+8]
	557 Add X0, X31, 56
	558 Move X1, X31
	559 Move W8, [X8+50]
	560 Move [X31+56], W8
	561 Call Byte.ToString, X0
	562 Move W8, [X22+24]
	563 NotImplemented "Instruction CMP not yet implemented."
	564 NotImplemented "Instruction CMP not yet implemented."
	565 Move [X22+64], X0
	566 Move X8, 0xBD7000
	567 Move X8, [X8+2000]
	568 Add X0, X31, 64
	569 Move X1, X31
	570 Move X8, [X8]
	571 Move [X22+72], X8
	572 Call Byte.ToString, X0
	573 Move W8, [X22+24]
	574 NotImplemented "Instruction CMP not yet implemented."
	575 NotImplemented "Instruction CMP not yet implemented."
	576 Move [X22+80], X0
	577 Move X8, 0xB95000
	578 Move X8, [X8+680]
	579 Add X0, X31, 72
	580 Move X1, X31
	581 Move X8, [X8]
	582 Move [X22+88], X8
	583 Call Byte.ToString, X0
	584 Move W8, [X22+24]
	585 NotImplemented "Instruction CMP not yet implemented."
	586 NotImplemented "Instruction CMP not yet implemented."
	587 Move [X22+96], X0
	588 Move X8, 0xBD6000
	589 Move X8, [X8+1624]
	590 Add X0, X31, 60
	591 Move X1, X31
	592 Move X8, [X8]
	593 Move [X22+104], X8
	594 Move W8, [X31+68]
	595 Move [X31+60], W8
	596 Call Int32.ToString, X0
	597 Move W8, [X22+24]
	598 NotImplemented "Instruction CMP not yet implemented."
	599 Move [X22+112], X0
	600 Move X0, X22
	601 Move X1, X31
	602 Call String.Concat, X0
	603 Move X8, 0xB94000
	604 Move X8, [X8+2504]
	605 Move X19, X0
	606 Move X21, [X8]
	607 Move X8, [X21+56]
	608 Compare X8, 0
	609 JumpIfNotEqual {613}
	610 Move X0, X21
	611 Call 0x1C5D6E0
	612 Move X8, [X21+56]
	613 Move X0, [X8+16]
	614 Move W8, [X0+309]
	615 Move TEMP, X8
	616 And TEMP, TEMP, 1
	617 Compare TEMP, 1
	618 JumpIfEqual {620}
	619 Call 0x1C5D684
	620 Move W8, [X0+224]
	621 Compare W8, 0
	622 JumpIfNotEqual {624}
	623 Call 0x1C17DFC
	624 Move X8, [X21+56]
	625 Move X0, [X8+16]
	626 Move W8, [X0+309]
	627 Move TEMP, X8
	628 And TEMP, TEMP, 1
	629 Compare TEMP, 1
	630 JumpIfEqual {632}
	631 Call 0x1C5D684
	632 Compare X20, 0
	633 JumpIfEqual {815}
	634 Move X9, [X0+184]
	635 Move X8, [X20]
	636 Move X1, [X23]
	637 Move X21, [X9]
	638 NotImplemented "Instruction LDRH not yet implemented."
	639 Compare X9, 0
	640 JumpIfEqual {647}
	641 Move X10, [X8+176]
	642 Add X10, X10, 8
	643 NotImplemented "Instruction LDUR not yet implemented."
	644 NotImplemented "Instruction CMP not yet implemented."
	645 Subtract X9, X9, 1
	646 Add X10, X10, 16
	647 Move W2, 1
	648 Move X0, X20
	649 Call 0x1C5D788
	650 Move W9, [X10]
	651 Add W9, W9, 1
	652 Add X8, X8, W9
	653 Add X0, X8, 312
	654 Move X8, [X0]
	655 Move X4, [X0+8]
	656 Move W1, 4
	657 Move X0, X21
	658 Move X2, X19
	659 Move X3, X20
	660 Move W9, [X10]
	661 Add W9, W9, 1
	662 Add X8, X8, W9
	663 Add X0, X8, 312
	664 Move X8, [X0]
	665 Move X4, [X0+8]
	666 Move W1, 5
	667 Move X0, X20
	668 Move X2, X19
	669 Move X3, X21
	670 NotImplemented "Instruction BLR not yet implemented."
	671 Move W0, 1
	672 NotImplemented "Instruction LDRSW not yet implemented."
	673 Add X8, X8, X9
	674 Add X0, X8, 312
	675 Move X8, [X0]
	676 Move X1, [X0+8]
	677 Move X0, X20
	678 NotImplemented "Instruction BLR not yet implemented."
	679 NotImplemented "Instruction CMP not yet implemented."
	680 Move X8, [X19+200]
	681 Compare X8, 0
	682 JumpIfEqual {815}
	683 Move X20, [X8+24]
	684 Move X8, 0xB94000
	685 Move X8, [X8+2760]
	686 Move W1, 8
	687 Move X0, [X8]
	688 Call 0x1C17D6C
	689 Compare X0, 0
	690 JumpIfEqual {815}
	691 Move W8, [X0+24]
	692 Move X21, X0
	693 Compare W8, 0
	694 JumpIfEqual {814}
	695 Move X9, [X19+184]
	696 NotImplemented "Instruction CMP not yet implemented."
	697 Move [X21+32], X9
	698 Move X8, 0xBD6000
	699 Move X8, [X8+1608]
	700 Add X0, X31, 76
	701 Move X1, X31
	702 Move X8, [X8]
	703 Move [X21+40], X8
	704 Call Byte.ToString, X0
	705 Move W8, [X21+24]
	706 NotImplemented "Instruction CMP not yet implemented."
	707 NotImplemented "Instruction CMP not yet implemented."
	708 Move [X21+48], X0
	709 Move X8, 0xBD6000
	710 Move X8, [X8+2032]
	711 Add X0, X31, 64
	712 Move X1, X31
	713 Move X8, [X8]
	714 Move [X21+56], X8
	715 Call Byte.ToString, X0
	716 Move W8, [X21+24]
	717 NotImplemented "Instruction CMP not yet implemented."
	718 NotImplemented "Instruction CMP not yet implemented."
	719 Move [X21+64], X0
	720 Move X8, 0xB95000
	721 Move X8, [X8+680]
	722 Add X0, X31, 72
	723 Move X1, X31
	724 Move X8, [X8]
	725 Move [X21+72], X8
	726 Call Byte.ToString, X0
	727 Move W8, [X21+24]
	728 NotImplemented "Instruction CMP not yet implemented."
	729 NotImplemented "Instruction CMP not yet implemented."
	730 Move [X21+80], X0
	731 Move X8, 0xBD6000
	732 Move X8, [X8+2016]
	733 Move X0, X21
	734 Move X1, X31
	735 Move X8, [X8]
	736 Move [X21+88], X8
	737 Call String.Concat, X0
	738 Move X8, 0xB94000
	739 Move X8, [X8+2504]
	740 Move X19, X0
	741 Move X21, [X8]
	742 Move X8, [X21+56]
	743 Compare X8, 0
	744 JumpIfNotEqual {748}
	745 Move X0, X21
	746 Call 0x1C5D6E0
	747 Move X8, [X21+56]
	748 Move X0, [X8+16]
	749 Move W8, [X0+309]
	750 Move TEMP, X8
	751 And TEMP, TEMP, 1
	752 Compare TEMP, 1
	753 JumpIfEqual {755}
	754 Call 0x1C5D684
	755 Move W8, [X0+224]
	756 Compare W8, 0
	757 JumpIfNotEqual {759}
	758 Call 0x1C17DFC
	759 Move X8, [X21+56]
	760 Move X0, [X8+16]
	761 Move W8, [X0+309]
	762 Move TEMP, X8
	763 And TEMP, TEMP, 1
	764 Compare TEMP, 1
	765 JumpIfEqual {767}
	766 Call 0x1C5D684
	767 Compare X20, 0
	768 JumpIfEqual {815}
	769 Move X9, [X0+184]
	770 Move X8, [X20]
	771 Move X1, [X22]
	772 Move X21, [X9]
	773 NotImplemented "Instruction LDRH not yet implemented."
	774 Compare X9, 0
	775 JumpIfEqual {782}
	776 Move X10, [X8+176]
	777 Add X10, X10, 8
	778 NotImplemented "Instruction LDUR not yet implemented."
	779 NotImplemented "Instruction CMP not yet implemented."
	780 Subtract X9, X9, 1
	781 Add X10, X10, 16
	782 Move W2, 1
	783 Move X0, X20
	784 Call 0x1C5D788
	785 Move W9, [X10]
	786 Add W9, W9, 1
	787 Add X8, X8, W9
	788 Add X0, X8, 312
	789 Move X8, [X0]
	790 Move X4, [X0+8]
	791 Move W1, 4
	792 Move X0, X20
	793 Move X2, X19
	794 Move X3, X21
	795 NotImplemented "Instruction BLR not yet implemented."
	796 Move W0, W31
	797 Move X8, [X24+40]
	798 Move X9, [X31+120]
	799 NotImplemented "Instruction CMP not yet implemented."
	800 Move X20, [X31+208]
	801 Move X19, [X31+216]
	802 Move X22, [X31+192]
	803 Move X21, [X31+200]
	804 Move X24, [X31+176]
	805 Move X23, [X31+184]
	806 Move X26, [X31+160]
	807 Move X25, [X31+168]
	808 Move X28, [X31+144]
	809 Move X27, [X31+152]
	810 Move X29, [X31+128]
	811 Move X30, [X31+136]
	812 Add X31, X31, 224
	813 Return X0
	814 Call 0x1C17F28
	815 Call 0x1C17F20
	816 Call 0x3EB2B20

Method: System.Byte processFrame(System.Byte begEvNum, System.Byte maxFrameReadPos)

Disassembly:
	0x0355D990 MOV W2, W23
	0x0355D994 BL 0x339FA34
	0x0355D998 LDR W8, [X31 + 0x7C]
	0x0355D99C ADD W8, W8, W23
	0x0355D9A0 STR W8, [X31 + 0x7C]
	0x0355D9A4 LDR X8, [X19 + 0xC8]
	0x0355D9A8 CBZ X8, 0x355E2B4
	0x0355D9AC LDR X23, [X8 + 0x18]
	0x0355D9B0 CBZ X23, 0x355E2B4
	0x0355D9B4 LDR X8, [X23]
	0x0355D9B8 ADRP X10, 0xB9B000
	0x0355D9BC LDRH W9, [X8 + 0x12E]
	0x0355D9C0 LDR X10, [X10 + 0x348]
	0x0355D9C4 LDR X1, [X10]
	0x0355D9C8 CBZ X9, 0x355D9EC
	0x0355D9CC LDR X10, [X8 + 0xB0]
	0x0355D9D0 ADD X10, X10, 0x8
	0x0355D9D4 LDUR X11, [X10 - 0x8]
	0x0355D9D8 CMP X11, X1
	0x0355D9DC B.EQ 0x355DA90
	0x0355D9E0 SUBS X9, X9, 0x1
	0x0355D9E4 ADD X10, X10, 0x10
	0x0355D9E8 B.NE 0x355D9D4
	0x0355D9EC MOV X0, X23
	0x0355D9F0 MOV W2, W31
	0x0355D9F4 BL 0x1C5C788
	0x0355D9F8 B 0x355DA9C
	0x0355D9FC ADRP X8, 0xBBF000
	0x0355DA00 LDR X8, [X8 + 0xE18]
	0x0355DA04 LDR X0, [X8]
	0x0355DA08 LDR W8, [X0 + 0xE0]
	0x0355DA0C CBNZ W8, 0x355DA14
	0x0355DA10 BL 0x1C16DFC
	0x0355DA14 MADD X20, X22, X27, X26
	0x0355DA18 LDR W8, [X20 + 0x2C]!
	0x0355DA1C LDR W23, [X31 + 0x1C]
	0x0355DA20 CMP W8, W23
	0x0355DA24 B.GE 0x355DA48
	0x0355DA28 ADRP X9, 0xBBF000
	0x0355DA2C LDR X9, [X9 + 0xE18]
	0x0355DA30 MOV W23, W8
	0x0355DA34 LDR X0, [X9]
	0x0355DA38 LDR W9, [X0 + 0xE0]
	0x0355DA3C CBNZ W9, 0x355DA48
	0x0355DA40 BL 0x1C16DFC
	0x0355DA44 LDR W23, [X20]
	0x0355DA48 ADRP X8, 0xBBF000
	0x0355DA4C LDR X8, [X8 + 0xE18]
	0x0355DA50 LDR X0, [X8]
	0x0355DA54 LDR W8, [X0 + 0xE0]
	0x0355DA58 CBNZ W8, 0x355DA60
	0x0355DA5C BL 0x1C16DFC
	0x0355DA60 MADD X8, X22, X27, X26
	0x0355DA64 LDR X0, [X21]
	0x0355DA68 LDR W1, [X8 + 0x28]
	0x0355DA6C LDR W3, [X31 + 0x7C]
	0x0355DA70 LDR X2, [X31 + 0x10]
	0x0355DA74 MOV W4, W23
	0x0355DA78 MOV X5, X31
	0x0355DA7C BL 0x339FCE8
	0x0355DA80 LDR W8, [X31 + 0x7C]
	0x0355DA84 ADD W8, W8, W23
	0x0355DA88 STR W8, [X31 + 0x7C]
	0x0355DA8C B 0x355DD78
	0x0355DA90 LDRSW X9, [X10]
	0x0355DA94 ADD X8, X8, X9, 0x4, LSL
	0x0355DA98 ADD X0, X8, 0x138
	0x0355DA9C LDP X8, X1, [X0]
	0x0355DAA0 MOV X0, X23
	0x0355DAA4 BLR X8
	0x0355DAA8 CMP W0, 0x5
	0x0355DAAC B.LT 0x355DD74
	0x0355DAB0 LDR X8, [X19 + 0xC8]
	0x0355DAB4 CBZ X8, 0x355E2B4
	0x0355DAB8 LDR X23, [X8 + 0x18]
	0x0355DABC ADRP X8, 0xB96000
	0x0355DAC0 LDR X8, [X8 + 0xAC8]
	0x0355DAC4 MOVZ W1, 0xE
	0x0355DAC8 LDR X0, [X8]
	0x0355DACC BL 0x1C16D6C
	0x0355DAD0 CBZ X0, 0x355E2B4
	0x0355DAD4 LDR W8, [X0 + 0x18]
	0x0355DAD8 MOV X24, X0
	0x0355DADC CBZ W8, 0x355E2B8
	0x0355DAE0 LDR X9, [X19 + 0xB8]
	0x0355DAE4 CMP W8, 0x1
	0x0355DAE8 STR X9, [X24 + 0x20]
	0x0355DAEC B.EQ 0x355E2B8
	0x0355DAF0 ADRP X8, 0xBD8000
	0x0355DAF4 LDR X8, [X8 + 0x648]
	0x0355DAF8 ADD X0, X31, 0x8C
	0x0355DAFC MOV X1, X31
	0x0355DB00 LDR X8, [X8]
	0x0355DB04 STR X8, [X24 + 0x28]
	0x0355DB08 BL 0x3319BB4
	0x0355DB0C LDR W8, [X24 + 0x18]
	0x0355DB10 CMP W8, 0x2
	0x0355DB14 B.LS 0x355E2B8
	0x0355DB18 CMP W8, 0x3
	0x0355DB1C STR X0, [X24 + 0x30]
	0x0355DB20 B.EQ 0x355E2B8
	0x0355DB24 ADRP X8, 0xBD8000
	0x0355DB28 LDR X8, [X8 + 0x638]
	0x0355DB2C LDR X8, [X8]
	0x0355DB30 STR X8, [X24 + 0x38]
	0x0355DB34 ADRP X8, 0xBBF000
	0x0355DB38 LDR X8, [X8 + 0xE18]
	0x0355DB3C LDR X0, [X8]
	0x0355DB40 LDR W8, [X0 + 0xE0]
	0x0355DB44 CBNZ W8, 0x355DB4C
	0x0355DB48 BL 0x1C16DFC
	0x0355DB4C LDRB W8, [X29]
	0x0355DB50 ADD X0, X31, 0x88
	0x0355DB54 MOV X1, X31
	0x0355DB58 STRB W8, [X31 + 0x88]
	0x0355DB5C BL 0x3319BB4
	0x0355DB60 LDR W8, [X24 + 0x18]
	0x0355DB64 CMP W8, 0x4
	0x0355DB68 B.LS 0x355E2B8
	0x0355DB6C CMP W8, 0x5
	0x0355DB70 STR X0, [X24 + 0x40]
	0x0355DB74 B.EQ 0x355E2B8
	0x0355DB78 ADRP X8, 0xBD8000
	0x0355DB7C LDR X8, [X8 + 0x3F8]
	0x0355DB80 ADD X0, X31, 0x84
	0x0355DB84 MOV X1, X31
	0x0355DB88 LDR X8, [X8]
	0x0355DB8C STR X8, [X24 + 0x48]
	0x0355DB90 BL 0x3319BB4
	0x0355DB94 LDR W8, [X24 + 0x18]
	0x0355DB98 CMP W8, 0x6
	0x0355DB9C B.LS 0x355E2B8
	0x0355DBA0 CMP W8, 0x7
	0x0355DBA4 STR X0, [X24 + 0x50]
	0x0355DBA8 B.EQ 0x355E2B8
	0x0355DBAC ADRP X8, 0xBD8000
	0x0355DBB0 LDR X8, [X8 + 0x778]
	0x0355DBB4 ADD X0, X31, 0x3C
	0x0355DBB8 MOV X1, X31
	0x0355DBBC LDR X8, [X8]
	0x0355DBC0 STR X8, [X24 + 0x58]
	0x0355DBC4 BL 0x3319BB4
	0x0355DBC8 LDR W8, [X24 + 0x18]
	0x0355DBCC CMP W8, 0x8
	0x0355DBD0 B.LS 0x355E2B8
	0x0355DBD4 CMP W8, 0x9
	0x0355DBD8 STR X0, [X24 + 0x60]
	0x0355DBDC B.EQ 0x355E2B8
	0x0355DBE0 ADRP X8, 0xBD8000
	0x0355DBE4 LDR X8, [X8 + 0x638]
	0x0355DBE8 ADD X0, X31, 0x88
	0x0355DBEC MOV X1, X31
	0x0355DBF0 LDR X8, [X8]
	0x0355DBF4 STR X8, [X24 + 0x68]
	0x0355DBF8 LDRB W8, [X20]
	0x0355DBFC STRB W8, [X31 + 0x88]
	0x0355DC00 BL 0x3319BB4
	0x0355DC04 LDR W8, [X24 + 0x18]
	0x0355DC08 CMP W8, 0xA
	0x0355DC0C B.LS 0x355E2B8
	0x0355DC10 CMP W8, 0xB
	0x0355DC14 STR X0, [X24 + 0x70]
	0x0355DC18 B.EQ 0x355E2B8
	0x0355DC1C ADRP X8, 0xBD8000
	0x0355DC20 LDR X8, [X8 + 0x790]
	0x0355DC24 NOP
	0x0355DC28 MADD X9, X22, X27, X26
	0x0355DC2C ADD X0, X31, 0x20
	0x0355DC30 MOV X1, X31
	0x0355DC34 LDR X8, [X8]
	0x0355DC38 STR X8, [X24 + 0x78]
	0x0355DC3C ADRP X8, 0xBD8000
	0x0355DC40 LDR X8, [X8 + 0x3E8]
	0x0355DC44 LDRB W9, [X9 + 0x51]
	0x0355DC48 LDR X10, [X8]
	0x0355DC4C MOVN X8, 0x0
	0x0355DC50 STRB W9, [X31 + 0x30]
	0x0355DC54 STP X10, X8, [X31 + 0x20]
	0x0355DC58 BL 0x33B162C
	0x0355DC5C LDR W8, [X24 + 0x18]
	0x0355DC60 CMP W8, 0xC
	0x0355DC64 B.LS 0x355E2B8
	0x0355DC68 CMP W8, 0xD
	0x0355DC6C STR X0, [X24 + 0x80]
	0x0355DC70 B.EQ 0x355E2B8
	0x0355DC74 LDR X8, [X21]
	0x0355DC78 ADRP X9, 0xB96000
	0x0355DC7C MOV X0, X24
	0x0355DC80 MOV X1, X31
	0x0355DC84 CMP X8, 0x0
	0x0355DC88 ADRP X8, 0xBD8000
	0x0355DC8C LDR X8, [X8 + 0x780]
	0x0355DC90 LDR X9, [X9 + 0x988]
	0x0355DC94 CSEL X8, X8, X9, EQ
	0x0355DC98 LDR X8, [X8]
	0x0355DC9C STR X8, [X24 + 0x88]
	0x0355DCA0 BL 0x32278CC
	0x0355DCA4 ADRP X8, 0xB96000
	0x0355DCA8 LDR X8, [X8 + 0x9C8]
	0x0355DCAC MOV X21, X0
	0x0355DCB0 LDR X24, [X8]
	0x0355DCB4 LDR X8, [X24 + 0x38]
	0x0355DCB8 CBNZ X8, 0x355DCC8
	0x0355DCBC MOV X0, X24
	0x0355DCC0 BL 0x1C5C6E0
	0x0355DCC4 LDR X8, [X24 + 0x38]
	0x0355DCC8 LDR X0, [X8 + 0x10]
	0x0355DCCC LDRB W8, [X0 + 0x135]
	0x0355DCD0 TBNZ X8, 0x0, 0x355DCD8
	0x0355DCD4 BL 0x1C5C684
	0x0355DCD8 LDR W8, [X0 + 0xE0]
	0x0355DCDC CBNZ W8, 0x355DCE4
	0x0355DCE0 BL 0x1C16DFC
	0x0355DCE4 LDR X8, [X24 + 0x38]
	0x0355DCE8 LDR X0, [X8 + 0x10]
	0x0355DCEC LDRB W8, [X0 + 0x135]
	0x0355DCF0 TBNZ X8, 0x0, 0x355DCF8
	0x0355DCF4 BL 0x1C5C684
	0x0355DCF8 CBZ X23, 0x355E2B4
	0x0355DCFC LDR X9, [X0 + 0xB8]
	0x0355DD00 LDR X8, [X23]
	0x0355DD04 ADRP X10, 0xB9B000
	0x0355DD08 LDR X24, [X9]
	0x0355DD0C LDRH W9, [X8 + 0x12E]
	0x0355DD10 LDR X10, [X10 + 0x348]
	0x0355DD14 LDR X1, [X10]
	0x0355DD18 CBZ X9, 0x355DD3C
	0x0355DD1C LDR X10, [X8 + 0xB0]
	0x0355DD20 ADD X10, X10, 0x8
	0x0355DD24 LDUR X11, [X10 - 0x8]
	0x0355DD28 CMP X11, X1
	0x0355DD2C B.EQ 0x355DD4C
	0x0355DD30 SUBS X9, X9, 0x1
	0x0355DD34 ADD X10, X10, 0x10
	0x0355DD38 B.NE 0x355DD24
	0x0355DD3C MOVZ W2, 0x1
	0x0355DD40 MOV X0, X23
	0x0355DD44 BL 0x1C5C788
	0x0355DD48 B 0x355DD5C
	0x0355DD4C LDR W9, [X10]
	0x0355DD50 ADD W9, W9, 0x1
	0x0355DD54 ADD X8, X8, W9, 0x4, SXTW
	0x0355DD58 ADD X0, X8, 0x138
	0x0355DD5C LDP X8, X4, [X0]
	0x0355DD60 MOVZ W1, 0x5
	0x0355DD64 MOV X0, X23
	0x0355DD68 MOV X2, X21
	0x0355DD6C MOV X3, X24
	0x0355DD70 BLR X8
	0x0355DD74 MOVZ W24, 0x1
	0x0355DD78 LDR X8, [X19 + 0xD8]
	0x0355DD7C CBZ X8, 0x355E2B4
	0x0355DD80 LDRB W9, [X31 + 0x3C]
	0x0355DD84 LDR W10, [X8 + 0x18]
	0x0355DD88 CMP W9, W10
	0x0355DD8C B.CS 0x355E2B8
	0x0355DD90 ADD X8, X8, X9, 0x2, LSL
	0x0355DD94 ADD X0, X8, 0x20
	0x0355DD98 MOV W1, W31
	0x0355DD9C MOV X2, X31
	0x0355DDA0 BL 0x33E9064
	0x0355DDA4 LDRB W8, [X31 + 0x3C]
	0x0355DDA8 LDRB W9, [X31 + 0x84]
	0x0355DDAC ADD W10, W28, 0x1
	0x0355DDB0 AND W28, W10, 0xFF
	0x0355DDB4 ADD W8, W8, 0x1
	0x0355DDB8 CMP W9, W10, UXTB
	0x0355DDBC STRB W8, [X31 + 0x3C]
	0x0355DDC0 B.NE 0x355D88C
	0x0355DDC4 LDR X21, [X19 + 0x108]
	0x0355DDC8 CBZ X21, 0x355E2B4
	0x0355DDCC LDR W8, [X21 + 0x18]
	0x0355DDD0 LDR X26, [X31 + 0x10]
	0x0355DDD4 CMP W25, W8
	0x0355DDD8 B.NE 0x355DDEC
	0x0355DDDC ADRP X23, 0xBBF000
	0x0355DDE0 LDR X23, [X23 + 0xE18]
	0x0355DDE4 MOV X20, X31
	0x0355DDE8 B 0x355DE7C
	0x0355DDEC CMP W25, W8
	0x0355DDF0 B.CS 0x355E2B8
	0x0355DDF4 SXTW X22, W25
	0x0355DDF8 ADD X23, X21, X22, 0x3, LSL
	0x0355DDFC LDR X8, [X23 + 0x20]!
	0x0355DE00 CBNZ X8, 0x355DE50
	0x0355DE04 ADRP X8, 0xBD8000
	0x0355DE08 LDR X8, [X8 + 0x758]
	0x0355DE0C LDR X0, [X8]
	0x0355DE10 BL 0x1C16F10
	0x0355DE14 MOV X1, X31
	0x0355DE18 MOV X20, X0
	0x0355DE1C BL 0x33BDD8C
	0x0355DE20 CBZ X20, 0x355DE38
	0x0355DE24 LDR X8, [X21]
	0x0355DE28 MOV X0, X20
	0x0355DE2C LDR X1, [X8 + 0x40]
	0x0355DE30 BL 0x1C16E00
	0x0355DE34 CBZ X0, 0x355E2BC
	0x0355DE38 LDR W8, [X21 + 0x18]
	0x0355DE3C CMP W25, W8
	0x0355DE40 B.CS 0x355E2B8
	0x0355DE44 STR X20, [X23]
	0x0355DE48 LDR X21, [X19 + 0x108]
	0x0355DE4C CBZ X21, 0x355E2B4
	0x0355DE50 LDR W8, [X21 + 0x18]
	0x0355DE54 CMP W25, W8
	0x0355DE58 B.CS 0x355E2B8
	0x0355DE5C ADD X8, X21, X22, 0x3, LSL
	0x0355DE60 ADRP X23, 0xBBF000
	0x0355DE64 LDR X9, [X8 + 0x20]!
	0x0355DE68 LDR X23, [X23 + 0xE18]
	0x0355DE6C CBZ X9, 0x355E2B4
	0x0355DE70 STR X26, [X9 + 0x18]
	0x0355DE74 STRB W31, [X9 + 0x10]
	0x0355DE78 LDR X20, [X8]
	0x0355DE7C LDR X0, [X23]
	0x0355DE80 LDR W21, [X31 + 0x7C]
	0x0355DE84 LDR W8, [X0 + 0xE0]
	0x0355DE88 CBNZ W8, 0x355DE90
	0x0355DE8C BL 0x1C16DFC
	0x0355DE90 LDR X8, [X31 + 0x8]
	0x0355DE94 LDRB W9, [X29]
	0x0355DE98 MOVZ W10, 0x1
	0x0355DE9C LDRB W8, [X8]
	0x0355DEA0 STR X26, [X31 + 0x40]
	0x0355DEA4 STP W31, W21, [X31 + 0x48]
	0x0355DEA8 STR X20, [X31 + 0x50]
	0x0355DEAC STRB W31, [X31 + 0x58]
	0x0355DEB0 STP X31, X31, [X31 + 0x60]
	0x0355DEB4 STR W10, [X31 + 0x5C]
	0x0355DEB8 STRB W8, [X31 + 0x71]
	0x0355DEBC STRB W9, [X31 + 0x72]
	0x0355DEC0 STRB W31, [X31 + 0x70]
	0x0355DEC4 LDR X8, [X19 + 0xC8]
	0x0355DEC8 CBZ X8, 0x355E2B4
	0x0355DECC LDR W9, [X8 + 0x48]
	0x0355DED0 ADD W9, W9, 0x1
	0x0355DED4 STR W9, [X8 + 0x48]
	0x0355DED8 TBZ X24, 0x0, 0x355DEE8
	0x0355DEDC LDR W9, [X8 + 0x2C]
	0x0355DEE0 ADD W9, W9, 0x1
	0x0355DEE4 STR W9, [X8 + 0x2C]
	0x0355DEE8 LDR X20, [X8 + 0x18]
	0x0355DEEC CBZ X20, 0x355E2B4
	0x0355DEF0 LDR X8, [X20]
	0x0355DEF4 ADRP X10, 0xB9B000
	0x0355DEF8 LDRH W9, [X8 + 0x12E]
	0x0355DEFC LDR X10, [X10 + 0x348]
	0x0355DF00 LDR X1, [X10]
	0x0355DF04 CBZ X9, 0x355DF28
	0x0355DF08 LDR X10, [X8 + 0xB0]
	0x0355DF0C ADD X10, X10, 0x8
	0x0355DF10 LDUR X11, [X10 - 0x8]
	0x0355DF14 CMP X11, X1
	0x0355DF18 B.EQ 0x355DF38
	0x0355DF1C SUBS X9, X9, 0x1
	0x0355DF20 ADD X10, X10, 0x10
	0x0355DF24 B.NE 0x355DF10
	0x0355DF28 MOV X0, X20
	0x0355DF2C MOV W2, W31
	0x0355DF30 BL 0x1C5C788
	0x0355DF34 B 0x355DF44
	0x0355DF38 LDRSW X9, [X10]
	0x0355DF3C ADD X8, X8, X9, 0x4, LSL
	0x0355DF40 ADD X0, X8, 0x138
	0x0355DF44 LDP X8, X1, [X0]
	0x0355DF48 MOV X0, X20
	0x0355DF4C BLR X8
	0x0355DF50 CMP W0, 0x5
	0x0355DF54 B.LT 0x355E224
	0x0355DF58 LDR X8, [X19 + 0xC8]
	0x0355DF5C CBZ X8, 0x355E2B4
	0x0355DF60 LDR X20, [X8 + 0x18]
	0x0355DF64 ADRP X8, 0xB96000
	0x0355DF68 LDR X8, [X8 + 0xAC8]
	0x0355DF6C MOVZ W1, 0xF
	0x0355DF70 LDR X0, [X8]
	0x0355DF74 BL 0x1C16D6C
	0x0355DF78 CBZ X0, 0x355E2B4
	0x0355DF7C LDR W8, [X0 + 0x18]
	0x0355DF80 MOV X21, X0
	0x0355DF84 CBZ W8, 0x355E2B8
	0x0355DF88 LDR X9, [X19 + 0xB8]
	0x0355DF8C CMP W8, 0x1
	0x0355DF90 STR X9, [X21 + 0x20]
	0x0355DF94 B.EQ 0x355E2B8
	0x0355DF98 ADRP X8, 0xBD8000
	0x0355DF9C LDR X8, [X8 + 0x770]
	0x0355DFA0 ADD X0, X31, 0x8C
	0x0355DFA4 MOV X1, X31
	0x0355DFA8 LDR X8, [X8]
	0x0355DFAC STR X8, [X21 + 0x28]
	0x0355DFB0 BL 0x3319BB4
	0x0355DFB4 LDR W8, [X21 + 0x18]
	0x0355DFB8 CMP W8, 0x2
	0x0355DFBC B.LS 0x355E2B8
	0x0355DFC0 CMP W8, 0x3
	0x0355DFC4 STR X0, [X21 + 0x30]
	0x0355DFC8 B.EQ 0x355E2B8
	0x0355DFCC ADRP X8, 0xBD8000
	0x0355DFD0 LDR X8, [X8 + 0x638]
	0x0355DFD4 LDR X8, [X8]
	0x0355DFD8 STR X8, [X21 + 0x38]
	0x0355DFDC LDR X0, [X23]
	0x0355DFE0 LDR W8, [X0 + 0xE0]
	0x0355DFE4 CBNZ W8, 0x355DFEC
	0x0355DFE8 BL 0x1C16DFC
	0x0355DFEC LDRB W8, [X31 + 0x72]
	0x0355DFF0 ADD X0, X31, 0x88
	0x0355DFF4 MOV X1, X31
	0x0355DFF8 STRB W8, [X31 + 0x88]
	0x0355DFFC BL 0x3319BB4
	0x0355E000 LDR W8, [X21 + 0x18]
	0x0355E004 CMP W8, 0x4
	0x0355E008 B.LS 0x355E2B8
	0x0355E00C CMP W8, 0x5
	0x0355E010 STR X0, [X21 + 0x40]
	0x0355E014 B.EQ 0x355E2B8
	0x0355E018 ADRP X8, 0xBD7000
	0x0355E01C LDR X8, [X8 + 0x3F8]
	0x0355E020 ADD X0, X31, 0x84
	0x0355E024 MOV X1, X31
	0x0355E028 LDR X8, [X8]
	0x0355E02C STR X8, [X21 + 0x48]
	0x0355E030 BL 0x3319BB4
	0x0355E034 LDR W8, [X21 + 0x18]
	0x0355E038 CMP W8, 0x6
	0x0355E03C B.LS 0x355E2B8
	0x0355E040 CMP W8, 0x7
	0x0355E044 STR X0, [X21 + 0x50]
	0x0355E048 B.EQ 0x355E2B8
	0x0355E04C ADRP X8, 0xBD7000
	0x0355E050 LDR X8, [X8 + 0x7A0]
	0x0355E054 ADD X0, X31, 0x8C
	0x0355E058 MOV X1, X31
	0x0355E05C LDR X8, [X8]
	0x0355E060 STR X8, [X21 + 0x58]
	0x0355E064 BL 0x3319BB4
	0x0355E068 LDR W8, [X21 + 0x18]
	0x0355E06C CMP W8, 0x8
	0x0355E070 B.LS 0x355E2B8
	0x0355E074 CMP W8, 0x9
	0x0355E078 STR X0, [X21 + 0x60]
	0x0355E07C B.EQ 0x355E2B8
	0x0355E080 ADRP X8, 0xB96000
	0x0355E084 LDR X8, [X8 + 0x2A8]
	0x0355E088 ADD X0, X31, 0x88
	0x0355E08C MOV X1, X31
	0x0355E090 LDR X8, [X8]
	0x0355E094 STR X8, [X21 + 0x68]
	0x0355E098 LDRB W8, [X31 + 0x8C]
	0x0355E09C LDRB W9, [X31 + 0x84]
	0x0355E0A0 ADD W8, W8, W9
	0x0355E0A4 SUB W8, W8, 0x1
	0x0355E0A8 STRB W8, [X31 + 0x88]
	0x0355E0AC BL 0x3319BB4
	0x0355E0B0 LDR W8, [X21 + 0x18]
	0x0355E0B4 CMP W8, 0xA
	0x0355E0B8 B.LS 0x355E2B8
	0x0355E0BC CMP W8, 0xB
	0x0355E0C0 STR X0, [X21 + 0x70]
	0x0355E0C4 B.EQ 0x355E2B8
	0x0355E0C8 ADRP X8, 0xBD7000
	0x0355E0CC LDR X8, [X8 + 0x658]
	0x0355E0D0 ADD X0, X31, 0x7C
	0x0355E0D4 MOV X1, X31
	0x0355E0D8 LDR X8, [X8]
	0x0355E0DC STR X8, [X21 + 0x78]
	0x0355E0E0 BL 0x337B6E0
	0x0355E0E4 LDR W8, [X21 + 0x18]
	0x0355E0E8 CMP W8, 0xC
	0x0355E0EC B.LS 0x355E2B8
	0x0355E0F0 CMP W8, 0xD
	0x0355E0F4 STR X0, [X21 + 0x80]
	0x0355E0F8 B.EQ 0x355E2B8
	0x0355E0FC ADRP X8, 0xBD7000
	0x0355E100 LDR X8, [X8 + 0x650]
	0x0355E104 ADRP X9, 0xBD7000
	0x0355E108 MOVN X10, 0x0
	0x0355E10C ADD X0, X31, 0x20
	0x0355E110 LDR X8, [X8]
	0x0355E114 LDR X9, [X9 + 0x3E8]
	0x0355E118 MOV X1, X31
	0x0355E11C STR X8, [X21 + 0x88]
	0x0355E120 LDR X8, [X9]
	0x0355E124 LDR X9, [X31 + 0x8]
	0x0355E128 LDRB W9, [X9]
	0x0355E12C STP X8, X10, [X31 + 0x20]
	0x0355E130 STRB W9, [X31 + 0x30]
	0x0355E134 BL 0x33B162C
	0x0355E138 LDR W8, [X21 + 0x18]
	0x0355E13C CMP W8, 0xE
	0x0355E140 B.LS 0x355E2B8
	0x0355E144 STR X0, [X21 + 0x90]
	0x0355E148 MOV X0, X21
	0x0355E14C MOV X1, X31
	0x0355E150 BL 0x32278CC
	0x0355E154 ADRP X8, 0xB95000
	0x0355E158 LDR X8, [X8 + 0x9C8]
	0x0355E15C MOV X21, X0
	0x0355E160 LDR X22, [X8]
	0x0355E164 LDR X8, [X22 + 0x38]
	0x0355E168 CBNZ X8, 0x355E178
	0x0355E16C MOV X0, X22
	0x0355E170 BL 0x1C5C6E0
	0x0355E174 LDR X8, [X22 + 0x38]
	0x0355E178 LDR X0, [X8 + 0x10]
	0x0355E17C LDRB W8, [X0 + 0x135]
	0x0355E180 TBNZ X8, 0x0, 0x355E188
	0x0355E184 BL 0x1C5C684
	0x0355E188 LDR W8, [X0 + 0xE0]
	0x0355E18C CBNZ W8, 0x355E194
	0x0355E190 BL 0x1C16DFC
	0x0355E194 LDR X8, [X22 + 0x38]
	0x0355E198 LDR X0, [X8 + 0x10]
	0x0355E19C LDRB W8, [X0 + 0x135]
	0x0355E1A0 TBNZ X8, 0x0, 0x355E1A8
	0x0355E1A4 BL 0x1C5C684
	0x0355E1A8 CBZ X20, 0x355E2B4
	0x0355E1AC LDR X9, [X0 + 0xB8]
	0x0355E1B0 LDR X8, [X20]
	0x0355E1B4 ADRP X10, 0xB9A000
	0x0355E1B8 LDR X22, [X9]
	0x0355E1BC LDRH W9, [X8 + 0x12E]
	0x0355E1C0 LDR X10, [X10 + 0x348]
	0x0355E1C4 LDR X1, [X10]
	0x0355E1C8 CBZ X9, 0x355E1EC
	0x0355E1CC LDR X10, [X8 + 0xB0]
	0x0355E1D0 ADD X10, X10, 0x8
	0x0355E1D4 LDUR X11, [X10 - 0x8]
	0x0355E1D8 CMP X11, X1
	0x0355E1DC B.EQ 0x355E1FC
	0x0355E1E0 SUBS X9, X9, 0x1
	0x0355E1E4 ADD X10, X10, 0x10
	0x0355E1E8 B.NE 0x355E1D4
	0x0355E1EC MOVZ W2, 0x1
	0x0355E1F0 MOV X0, X20
	0x0355E1F4 BL 0x1C5C788
	0x0355E1F8 B 0x355E20C
	0x0355E1FC LDR W9, [X10]
	0x0355E200 ADD W9, W9, 0x1
	0x0355E204 ADD X8, X8, W9, 0x4, SXTW
	0x0355E208 ADD X0, X8, 0x138
	0x0355E20C LDP X8, X4, [X0]
	0x0355E210 MOVZ W1, 0x5
	0x0355E214 MOV X0, X20
	0x0355E218 MOV X2, X21
	0x0355E21C MOV X3, X22
	0x0355E220 BLR X8
	0x0355E224 LDR X19, [X19 + 0x48]
	0x0355E228 CBZ X19, 0x355E2B4
	0x0355E22C LDR X8, [X19]
	0x0355E230 ADRP X10, 0xBD7000
	0x0355E234 LDRH W9, [X8 + 0x12E]
	0x0355E238 LDR X10, [X10 + 0x468]
	0x0355E23C LDR X1, [X10]
	0x0355E240 CBZ X9, 0x355E264
	0x0355E244 LDR X10, [X8 + 0xB0]
	0x0355E248 ADD X10, X10, 0x8
	0x0355E24C LDUR X11, [X10 - 0x8]
	0x0355E250 CMP X11, X1
	0x0355E254 B.EQ 0x355E274
	0x0355E258 SUBS X9, X9, 0x1
	0x0355E25C ADD X10, X10, 0x10
	0x0355E260 B.NE 0x355E24C
	0x0355E264 MOVZ W2, 0x2
	0x0355E268 MOV X0, X19
	0x0355E26C BL 0x1C5C788
	0x0355E270 B 0x355E284
	0x0355E274 LDR W9, [X10]
	0x0355E278 ADD W9, W9, 0x2
	0x0355E27C ADD X8, X8, W9, 0x4, SXTW
	0x0355E280 ADD X0, X8, 0x138
	0x0355E284 LDP X8, X2, [X0]
	0x0355E288 ADD X1, X31, 0x40
	0x0355E28C MOV X0, X19
	0x0355E290 BLR X8
	0x0355E294 LDR X0, [X23]
	0x0355E298 LDR W8, [X0 + 0xE0]
	0x0355E29C CBNZ W8, 0x355E2A4
	0x0355E2A0 BL 0x1C16DFC
	0x0355E2A4 ADD X0, X31, 0x40
	0x0355E2A8 BL 0x3555CB0
	0x0355E2AC LDRB W0, [X31 + 0x84]
	0x0355E2B0 B 0x355D798
	0x0355E2B4 BL 0x1C16F20
	0x0355E2B8 BL 0x1C16F28
	0x0355E2BC BL 0x1C16F44
	0x0355E2C0 MOV X1, X31
	0x0355E2C4 BL 0x1C16DEC
	0x0355E2C8 SUB X31, X31, 0x70
	0x0355E2CC STR X30, [X31 + 0x20]
	0x0355E2D0 STP X26, X25, [X31 + 0x30]
	0x0355E2D4 STP X24, X23, [X31 + 0x40]
	0x0355E2D8 STP X22, X21, [X31 + 0x50]
	0x0355E2DC STP X20, X19, [X31 + 0x60]
	0x0355E2E0 ADRP X21, 0xE81000
	0x0355E2E4 LDRB W8, [X21 + 0xDB0]
	0x0355E2E8 MOV X20, X2
	0x0355E2EC MOV W23, W1
	0x0355E2F0 MOV X19, X0
	0x0355E2F4 STRB W1, [X31 + 0x2C]
	0x0355E2F8 TBNZ X8, 0x0, 0x355E388
	0x0355E2FC ADRP X0, 0xB95000
	0x0355E300 LDR X0, [X0 + 0x9C8]
	0x0355E304 BL 0x1C16CF4
	0x0355E308 ADRP X0, 0xBBE000
	0x0355E30C LDR X0, [X0 + 0xE18]
	0x0355E310 BL 0x1C16CF4
	0x0355E314 ADRP X0, 0xBD7000
	0x0355E318 LDR X0, [X0 + 0x3E8]
	0x0355E31C BL 0x1C16CF4
	0x0355E320 ADRP X0, 0xB9A000
	0x0355E324 LDR X0, [X0 + 0x348]
	0x0355E328 BL 0x1C16CF4
	0x0355E32C ADRP X0, 0xB95000
	0x0355E330 LDR X0, [X0 + 0xAC8]
	0x0355E334 BL 0x1C16CF4
	0x0355E338 ADRP X0, 0xBD7000
	0x0355E33C LDR X0, [X0 + 0x7B8]
	0x0355E340 BL 0x1C16CF4
	0x0355E344 ADRP X0, 0xBD7000
	0x0355E348 LDR X0, [X0 + 0x648]
	0x0355E34C BL 0x1C16CF4
	0x0355E350 ADRP X0, 0xB96000
	0x0355E354 LDR X0, [X0 + 0x608]
	0x0355E358 BL 0x1C16CF4
	0x0355E35C ADRP X0, 0xBD7000
	0x0355E360 LDR X0, [X0 + 0x7C0]
	0x0355E364 BL 0x1C16CF4
	0x0355E368 ADRP X0, 0xB96000
	0x0355E36C LDR X0, [X0 + 0x610]
	0x0355E370 BL 0x1C16CF4
	0x0355E374 ADRP X0, 0xBD7000
	0x0355E378 LDR X0, [X0 + 0x7C8]
	0x0355E37C BL 0x1C16CF4
	0x0355E380 MOVZ W8, 0x1
	0x0355E384 STRB W8, [X21 + 0xDB0]
	0x0355E388 STRB W31, [X31 + 0x28]
	0x0355E38C LDR X8, [X19 + 0x120]
	0x0355E390 CBZ X8, 0x355E74C
	0x0355E394 LDR W9, [X8 + 0x18]
	0x0355E398 CMP W9, W23, UXTB
	0x0355E39C B.LS 0x355E750
	0x0355E3A0 ADD X8, X8, W23, UXTB
	0x0355E3A4 ADRP X25, 0xBBE000
	0x0355E3A8 LDRB W21, [X8 + 0x20]
	0x0355E3AC LDR X25, [X25 + 0xE18]
	0x0355E3B0 STRB W21, [X31 + 0x28]
	0x0355E3B4 LDR X8, [X19 + 0x118]
	0x0355E3B8 CBZ X8, 0x355E74C
	0x0355E3BC LDR W9, [X8 + 0x18]
	0x0355E3C0 CMP W21, W9
	0x0355E3C4 B.CS 0x355E750
	0x0355E3C8 ADD X8, X8, X21, 0x2, LSL
	0x0355E3CC ADD X0, X8, 0x20
	0x0355E3D0 MOVZ W1, 0x1
	0x0355E3D4 MOV X2, X31
	0x0355E3D8 BL 0x33E9064
	0x0355E3DC CMP W0, 0x1
	0x0355E3E0 B.EQ 0x355E3B4
	0x0355E3E4 LDR X26, [X19 + 0x110]
	0x0355E3E8 CBZ X26, 0x355E74C
	0x0355E3EC LDR W8, [X26 + 0x18]
	0x0355E3F0 CMP W21, W8
	0x0355E3F4 B.CS 0x355E750
	0x0355E3F8 LDR X0, [X25]
	0x0355E3FC MOVZ W9, 0x38
	0x0355E400 MADD X9, X21, X9, X26
	0x0355E404 ADD X22, X9, 0x20
	0x0355E408 LDR W8, [X0 + 0xE0]
	0x0355E40C CBNZ W8, 0x355E414
	0x0355E410 BL 0x1C16DFC
	0x0355E414 MOV X0, X22
	0x0355E418 BL 0x3555E14
	0x0355E41C TBZ X0, 0x0, 0x355E454
	0x0355E420 MOV X0, X19
	0x0355E424 MOV W1, W23
	0x0355E428 MOV X2, X20
	0x0355E42C MOV W3, W21
	0x0355E430 MOV X4, X22
	0x0355E434 BL 0x355E754
	0x0355E438 TBZ X0, 0x0, 0x355E704
	0x0355E43C LDR X8, [X19 + 0xC8]
	0x0355E440 CBZ X8, 0x355E74C
	0x0355E444 LDR W9, [X8 + 0x30]
	0x0355E448 ADD W9, W9, 0x1
	0x0355E44C STR W9, [X8 + 0x30]
	0x0355E450 B 0x355E704
	0x0355E454 LDR X8, [X19 + 0xC8]
	0x0355E458 CBZ X8, 0x355E74C
	0x0355E45C LDR X20, [X8 + 0x18]
	0x0355E460 CBZ X20, 0x355E74C
	0x0355E464 ADRP X24, 0xB9A000
	0x0355E468 LDR X8, [X20]
	0x0355E46C LDR X24, [X24 + 0x348]
	0x0355E470 LDRH W9, [X8 + 0x12E]
	0x0355E474 LDR X1, [X24]
	0x0355E478 CBZ X9, 0x355E49C
	0x0355E47C LDR X10, [X8 + 0xB0]
	0x0355E480 ADD X10, X10, 0x8
	0x0355E484 LDUR X11, [X10 - 0x8]
	0x0355E488 CMP X11, X1
	0x0355E48C B.EQ 0x355E4AC
	0x0355E490 SUBS X9, X9, 0x1
	0x0355E494 ADD X10, X10, 0x10
	0x0355E498 B.NE 0x355E484
	0x0355E49C MOV X0, X20
	0x0355E4A0 MOV W2, W31
	0x0355E4A4 BL 0x1C5C788
	0x0355E4A8 B 0x355E4B8
	0x0355E4AC LDRSW X9, [X10]
	0x0355E4B0 ADD X8, X8, X9, 0x4, LSL
	0x0355E4B4 ADD X0, X8, 0x138
	0x0355E4B8 LDP X8, X1, [X0]
	0x0355E4BC MOV X0, X20
	0x0355E4C0 BLR X8
	0x0355E4C4 CMP W0, 0x4
	0x0355E4C8 B.LT 0x355E704
	0x0355E4CC LDR X8, [X19 + 0xC8]
	0x0355E4D0 CBZ X8, 0x355E74C
	0x0355E4D4 LDR X20, [X8 + 0x18]
	0x0355E4D8 ADRP X8, 0xB95000
	0x0355E4DC LDR X8, [X8 + 0xAC8]
	0x0355E4E0 MOVZ W1, 0x8
	0x0355E4E4 LDR X0, [X8]
	0x0355E4E8 BL 0x1C16D6C
	0x0355E4EC CBZ X0, 0x355E74C
	0x0355E4F0 LDR W8, [X0 + 0x18]
	0x0355E4F4 MOV X23, X0
	0x0355E4F8 CBZ W8, 0x355E750
	0x0355E4FC LDR X9, [X19 + 0xB8]
	0x0355E500 CMP W8, 0x1
	0x0355E504 STR X9, [X23 + 0x20]
	0x0355E508 B.EQ 0x355E750
	0x0355E50C ADRP X8, 0xBD7000
	0x0355E510 LDR X8, [X8 + 0x648]
	0x0355E514 ADD X0, X31, 0x2C
	0x0355E518 MOV X1, X31
	0x0355E51C LDR X8, [X8]
	0x0355E520 STR X8, [X23 + 0x28]
	0x0355E524 BL 0x3319BB4
	0x0355E528 LDR W8, [X23 + 0x18]
	0x0355E52C CMP W8, 0x2
	0x0355E530 B.LS 0x355E750
	0x0355E534 CMP W8, 0x3
	0x0355E538 STR X0, [X23 + 0x30]
	0x0355E53C B.EQ 0x355E750
	0x0355E540 ADRP X8, 0xBD7000
	0x0355E544 LDR X8, [X8 + 0x7B8]
	0x0355E548 ADD X0, X31, 0x28
	0x0355E54C MOV X1, X31
	0x0355E550 LDR X8, [X8]
	0x0355E554 STR X8, [X23 + 0x38]
	0x0355E558 BL 0x3319BB4
	0x0355E55C LDR W8, [X23 + 0x18]
	0x0355E560 CMP W8, 0x4
	0x0355E564 B.LS 0x355E750
	0x0355E568 CMP W8, 0x5
	0x0355E56C STR X0, [X23 + 0x40]
	0x0355E570 B.EQ 0x355E750
	0x0355E574 ADRP X8, 0xB96000
	0x0355E578 LDR X8, [X8 + 0x610]
	0x0355E57C LDR X8, [X8]
	0x0355E580 STR X8, [X23 + 0x48]
	0x0355E584 LDR X0, [X25]
	0x0355E588 LDR W8, [X0 + 0xE0]
	0x0355E58C CBNZ W8, 0x355E594
	0x0355E590 BL 0x1C16DFC
	0x0355E594 LDR X8, [X22]
	0x0355E598 CBZ X8, 0x355E5FC
	0x0355E59C LDR X0, [X25]
	0x0355E5A0 LDR W8, [X0 + 0xE0]
	0x0355E5A4 CBNZ W8, 0x355E5AC
	0x0355E5A8 BL 0x1C16DFC
	0x0355E5AC ADRP X9, 0xBD7000
	0x0355E5B0 LDR X9, [X9 + 0x3E8]
	0x0355E5B4 MOVZ W8, 0x38
	0x0355E5B8 MADD X8, X21, X8, X26
	0x0355E5BC LDRB W8, [X8 + 0x51]
	0x0355E5C0 LDR X9, [X9]
	0x0355E5C4 MOVN X10, 0x0
	0x0355E5C8 ADD X0, X31, 0x8
	0x0355E5CC MOV X1, X31
	0x0355E5D0 STP X9, X10, [X31 + 0x8]
	0x0355E5D4 STRB W8, [X31 + 0x18]
	0x0355E5D8 BL 0x33B162C
	0x0355E5DC ADRP X8, 0xBD7000
	0x0355E5E0 LDR X8, [X8 + 0x7C0]
	0x0355E5E4 MOV X1, X0
	0x0355E5E8 MOV X2, X31
	0x0355E5EC LDR X8, [X8]
	0x0355E5F0 MOV X0, X8
	0x0355E5F4 BL 0x321B938
	0x0355E5F8 B 0x355E608
	0x0355E5FC ADRP X8, 0xBD7000
	0x0355E600 LDR X8, [X8 + 0x7C8]
	0x0355E604 LDR X0, [X8]
	0x0355E608 LDR W8, [X23 + 0x18]
	0x0355E60C CMP W8, 0x6
	0x0355E610 B.LS 0x355E750
	0x0355E614 CMP W8, 0x7
	0x0355E618 STR X0, [X23 + 0x50]
	0x0355E61C B.EQ 0x355E750
	0x0355E620 ADRP X8, 0xB96000
	0x0355E624 LDR X8, [X8 + 0x608]
	0x0355E628 MOV X0, X23
	0x0355E62C MOV X1, X31
	0x0355E630 LDR X8, [X8]
	0x0355E634 STR X8, [X23 + 0x58]
	0x0355E638 BL 0x32278CC
	0x0355E63C ADRP X8, 0xB95000
	0x0355E640 LDR X8, [X8 + 0x9C8]
	0x0355E644 MOV X21, X0
	0x0355E648 LDR X22, [X8]
	0x0355E64C LDR X8, [X22 + 0x38]
	0x0355E650 CBNZ X8, 0x355E660
	0x0355E654 MOV X0, X22
	0x0355E658 BL 0x1C5C6E0
	0x0355E65C LDR X8, [X22 + 0x38]
	0x0355E660 LDR X0, [X8 + 0x10]
	0x0355E664 LDRB W8, [X0 + 0x135]
	0x0355E668 TBNZ X8, 0x0, 0x355E670
	0x0355E66C BL 0x1C5C684
	0x0355E670 LDR W8, [X0 + 0xE0]
	0x0355E674 CBNZ W8, 0x355E67C
	0x0355E678 BL 0x1C16DFC
	0x0355E67C LDR X8, [X22 + 0x38]
	0x0355E680 LDR X0, [X8 + 0x10]
	0x0355E684 LDRB W8, [X0 + 0x135]
	0x0355E688 TBNZ X8, 0x0, 0x355E690
	0x0355E68C BL 0x1C5C684
	0x0355E690 CBZ X20, 0x355E74C
	0x0355E694 LDR X9, [X0 + 0xB8]
	0x0355E698 LDR X8, [X20]
	0x0355E69C LDR X1, [X24]
	0x0355E6A0 LDR X22, [X9]
	0x0355E6A4 LDRH W9, [X8 + 0x12E]
	0x0355E6A8 CBZ X9, 0x355E6CC
	0x0355E6AC LDR X10, [X8 + 0xB0]
	0x0355E6B0 ADD X10, X10, 0x8
	0x0355E6B4 LDUR X11, [X10 - 0x8]
	0x0355E6B8 CMP X11, X1
	0x0355E6BC B.EQ 0x355E6DC
	0x0355E6C0 SUBS X9, X9, 0x1
	0x0355E6C4 ADD X10, X10, 0x10
	0x0355E6C8 B.NE 0x355E6B4
	0x0355E6CC MOVZ W2, 0x1
	0x0355E6D0 MOV X0, X20
	0x0355E6D4 BL 0x1C5C788
	0x0355E6D8 B 0x355E6EC
	0x0355E6DC LDR W9, [X10]
	0x0355E6E0 ADD W9, W9, 0x1
	0x0355E6E4 ADD X8, X8, W9, 0x4, SXTW
	0x0355E6E8 ADD X0, X8, 0x138
	0x0355E6EC LDP X8, X4, [X0]
	0x0355E6F0 MOVZ W1, 0x4
	0x0355E6F4 MOV X0, X20
	0x0355E6F8 MOV X2, X21
	0x0355E6FC MOV X3, X22
	0x0355E700 BLR X8
	0x0355E704 LDR X8, [X19 + 0x118]
	0x0355E708 CBZ X8, 0x355E74C
	0x0355E70C LDRB W9, [X31 + 0x28]
	0x0355E710 LDR W10, [X8 + 0x18]
	0x0355E714 CMP W9, W10
	0x0355E718 B.CS 0x355E750
	0x0355E71C ADD X8, X8, X9, 0x2, LSL
	0x0355E720 ADD X0, X8, 0x20
	0x0355E724 MOV W1, W31
	0x0355E728 MOV X2, X31
	0x0355E72C BL 0x33E9064
	0x0355E730 LDP X20, X19, [X31 + 0x60]
	0x0355E734 LDP X22, X21, [X31 + 0x50]
	0x0355E738 LDP X24, X23, [X31 + 0x40]
	0x0355E73C LDP X26, X25, [X31 + 0x30]
	0x0355E740 LDR X30, [X31 + 0x20]
	0x0355E744 ADD X31, X31, 0x70
	0x0355E748 RET
	0x0355E74C BL 0x1C16F20
	0x0355E750 BL 0x1C16F28
	0x0355E754 SUB X31, X31, 0xE0
	0x0355E758 STP X29, X30, [X31 + 0x80]
	0x0355E75C STP X28, X27, [X31 + 0x90]
	0x0355E760 STP X26, X25, [X31 + 0xA0]
	0x0355E764 STP X24, X23, [X31 + 0xB0]
	0x0355E768 STP X22, X21, [X31 + 0xC0]
	0x0355E76C STP X20, X19, [X31 + 0xD0]
	0x0355E770 STR X2, [X31 + 0x8]
	0x0355E774 MRS X24, 0xC000
	0x0355E778 LDR X8, [X24 + 0x28]
	0x0355E77C ADRP X21, 0xE81000
	0x0355E780 MOV X20, X4
	0x0355E784 MOV W23, W3
	0x0355E788 STR X8, [X31 + 0x78]
	0x0355E78C LDRB W8, [X21 + 0xDB1]
	0x0355E790 MOV W22, W1
	0x0355E794 MOV X19, X0
	0x0355E798 STRB W1, [X31 + 0x4C]
	0x0355E79C STRB W3, [X31 + 0x48]
	0x0355E7A0 TBNZ X8, 0x0, 0x355E854
	0x0355E7A4 ADRP X0, 0xB95000
	0x0355E7A8 LDR X0, [X0 + 0x9C8]
	0x0355E7AC BL 0x1C16CF4
	0x0355E7B0 ADRP X0, 0xBBE000
	0x0355E7B4 LDR X0, [X0 + 0xE18]
	0x0355E7B8 BL 0x1C16CF4
	0x0355E7BC ADRP X0, 0xB9A000
	0x0355E7C0 LDR X0, [X0 + 0x348]
	0x0355E7C4 BL 0x1C16CF4
	0x0355E7C8 ADRP X0, 0xBD7000
	0x0355E7CC LDR X0, [X0 + 0x750]
	0x0355E7D0 BL 0x1C16CF4
	0x0355E7D4 ADRP X0, 0xB95000
	0x0355E7D8 LDR X0, [X0 + 0xAC8]
	0x0355E7DC BL 0x1C16CF4
	0x0355E7E0 ADRP X0, 0xBD7000
	0x0355E7E4 LDR X0, [X0 + 0x638]
	0x0355E7E8 BL 0x1C16CF4
	0x0355E7EC ADRP X0, 0xB96000
	0x0355E7F0 LDR X0, [X0 + 0x2A8]
	0x0355E7F4 BL 0x1C16CF4
	0x0355E7F8 ADRP X0, 0xBD7000
	0x0355E7FC LDR X0, [X0 + 0x7D0]
	0x0355E800 BL 0x1C16CF4
	0x0355E804 ADRP X0, 0xBD7000
	0x0355E808 LDR X0, [X0 + 0x648]
	0x0355E80C BL 0x1C16CF4
	0x0355E810 ADRP X0, 0xBD7000
	0x0355E814 LDR X0, [X0 + 0x7D8]
	0x0355E818 BL 0x1C16CF4
	0x0355E81C ADRP X0, 0xBD7000
	0x0355E820 LDR X0, [X0 + 0x7E0]
	0x0355E824 BL 0x1C16CF4
	0x0355E828 ADRP X0, 0xBD7000
	0x0355E82C LDR X0, [X0 + 0x7E8]
	0x0355E830 BL 0x1C16CF4
	0x0355E834 ADRP X0, 0xBD7000
	0x0355E838 LDR X0, [X0 + 0x7F0]
	0x0355E83C BL 0x1C16CF4
	0x0355E840 ADRP X0, 0xBD7000
	0x0355E844 LDR X0, [X0 + 0x658]
	0x0355E848 BL 0x1C16CF4
	0x0355E84C MOVZ W8, 0x1
	0x0355E850 STRB W8, [X21 + 0xDB1]
	0x0355E854 STR W31, [X31 + 0x44]
	0x0355E858 STRB W31, [X31 + 0x40]
	0x0355E85C STRB W31, [X31 + 0x38]
	0x0355E860 LDR X8, [X19 + 0xC8]
	0x0355E864 CBZ X8, 0x355F394
	0x0355E868 LDR W9, [X8 + 0x40]
	0x0355E86C ADRP X25, 0xBBE000
	0x0355E870 LDR X25, [X25 + 0xE18]
	0x0355E874 STR W9, [X31 + 0x3C]
	0x0355E878 ADD W9, W9, 0x1
	0x0355E87C STR W9, [X8 + 0x40]
	0x0355E880 LDR X0, [X25]
	0x0355E884 LDR W8, [X0 + 0xE0]
	0x0355E888 CBNZ W8, 0x355E890
	0x0355E88C BL 0x1C16DFC
	0x0355E890 LDR X8, [X20]
	0x0355E894 CBZ X8, 0x355F394
	0x0355E898 LDP W10, W11, [X20 + 0x8]
	0x0355E89C LDR W9, [X8 + 0x18]
	0x0355E8A0 ADD W10, W11, W10
	0x0355E8A4 SUB W11, W10, 0x5
	0x0355E8A8 CMP W11, W9
	0x0355E8AC B.CS 0x355F390
	0x0355E8B0 SUB W12, W10, 0x4
	0x0355E8B4 CMP W12, W9
	0x0355E8B8 B.CS 0x355F390
	0x0355E8BC SUB W13, W10, 0x3
	0x0355E8C0 CMP W13, W9
	0x0355E8C4 B.CS 0x355F390
	0x0355E8C8 SUB W14, W10, 0x2
	0x0355E8CC CMP W14, W9
	0x0355E8D0 B.CS 0x355F390
	0x0355E8D4 ADD X15, X8, 0x20
	0x0355E8D8 ADD X11, X8, W11, SXTW
	0x0355E8DC ADD X12, X8, W12, SXTW
	0x0355E8E0 LDRB W28, [X15, W13, SXTW]
	0x0355E8E4 LDRB W13, [X15, W14, SXTW]
	0x0355E8E8 LDRB W26, [X11 + 0x20]
	0x0355E8EC LDRB W11, [X12 + 0x20]
	0x0355E8F0 SUB W10, W10, 0x1
	0x0355E8F4 BFM W28, W13, 0x18, 0x7
	0x0355E8F8 CMP W10, W9
	0x0355E8FC STR W11, [X31 + 0x2C]
	0x0355E900 STR W28, [X31 + 0x44]
	0x0355E904 B.CS 0x355F390
	0x0355E908 ADD X8, X8, W10, SXTW
	0x0355E90C LDRB W29, [X8 + 0x20]
	0x0355E910 CMP W29, W23, UXTB
	0x0355E914 STRB W29, [X31 + 0x40]
	0x0355E918 B.EQ 0x355EBCC
	0x0355E91C STR X24, [X31]
	0x0355E920 MOV W24, W29
	0x0355E924 STR W26, [X31 + 0x28]
	0x0355E928 AND W26, W24, 0xFF
	0x0355E92C CMP W26, W22, UXTB
	0x0355E930 B.EQ 0x355E99C
	0x0355E934 AND X27, X24, 0xFF
	0x0355E938 LDR X8, [X19 + 0xD8]
	0x0355E93C CBZ X8, 0x355F394
	0x0355E940 LDR W9, [X8 + 0x18]
	0x0355E944 CMP W26, W9
	0x0355E948 B.CS 0x355F390
	0x0355E94C ADD X8, X8, X27, 0x2, LSL
	0x0355E950 ADD X0, X8, 0x20
	0x0355E954 MOVZ W1, 0x1
	0x0355E958 MOV X2, X31
	0x0355E95C BL 0x33E9064
	0x0355E960 CMP W0, 0x1
	0x0355E964 B.EQ 0x355E938
	0x0355E968 LDR X21, [X19 + 0xD0]
	0x0355E96C CBZ X21, 0x355F394
	0x0355E970 LDR X0, [X25]
	0x0355E974 LDR W8, [X0 + 0xE0]
	0x0355E978 CBNZ W8, 0x355E980
	0x0355E97C BL 0x1C16DFC
	0x0355E980 LDR W8, [X21 + 0x18]
	0x0355E984 CMP W26, W8
	0x0355E988 B.CS 0x355F390
	0x0355E98C MOVZ W8, 0x38
	0x0355E990 MADD X8, X27, X8, X21
	0x0355E994 LDR X8, [X8 + 0x20]
	0x0355E998 CBZ X8, 0x355E9C0
	0x0355E99C ADD W24, W24, 0x1
	0x0355E9A0 AND W8, W24, 0xFF
	0x0355E9A4 CMP W8, W23, UXTB
	0x0355E9A8 B.NE 0x355E928
	0x0355E9AC CMP W29, W23, UXTB
	0x0355E9B0 B.NE 0x355EA70
	0x0355E9B4 LDR X24, [X31]
	0x0355E9B8 LDR W26, [X31 + 0x28]
	0x0355E9BC B 0x355EBCC
	0x0355E9C0 ADD W8, W24, 0x1
	0x0355E9C4 CMP W29, W8, UXTB
	0x0355E9C8 B.EQ 0x355EA14
	0x0355E9CC AND W8, W29, 0xFF
	0x0355E9D0 CMP W8, W22, UXTB
	0x0355E9D4 B.EQ 0x355EA00
	0x0355E9D8 LDR X8, [X19 + 0xD8]
	0x0355E9DC CBZ X8, 0x355F394
	0x0355E9E0 LDR W9, [X8 + 0x18]
	0x0355E9E4 CMP W9, W29, UXTB
	0x0355E9E8 B.LS 0x355F390
	0x0355E9EC ADD X8, X8, W29, 0x2, UXTB
	0x0355E9F0 ADD X0, X8, 0x20
	0x0355E9F4 MOV W1, W31
	0x0355E9F8 MOV X2, X31
	0x0355E9FC BL 0x33E9064
	0x0355EA00 AND W8, W24, 0xFF
	0x0355EA04 CMP W8, W29, UXTB
	0x0355EA08 ADD W8, W29, 0x1
	0x0355EA0C MOV W29, W8
	0x0355EA10 B.NE 0x355E9CC
	0x0355EA14 LDR X8, [X19 + 0xC8]
	0x0355EA18 CBZ X8, 0x355F394
	0x0355EA1C LDR X20, [X8 + 0x18]
	0x0355EA20 LDR X24, [X31]
	0x0355EA24 CBZ X20, 0x355F394
	0x0355EA28 ADRP X22, 0xB9A000
	0x0355EA2C LDR X8, [X20]
	0x0355EA30 LDR X22, [X22 + 0x348]
	0x0355EA34 LDRH W9, [X8 + 0x12E]
	0x0355EA38 LDR X1, [X22]
	0x0355EA3C CBZ X9, 0x355EA60
	0x0355EA40 LDR X10, [X8 + 0xB0]
	0x0355EA44 ADD X10, X10, 0x8
	0x0355EA48 LDUR X11, [X10 - 0x8]
	0x0355EA4C CMP X11, X1
	0x0355EA50 B.EQ 0x355F17C
	0x0355EA54 SUBS X9, X9, 0x1
	0x0355EA58 ADD X10, X10, 0x10
	0x0355EA5C B.NE 0x355EA48
	0x0355EA60 MOV X0, X20
	0x0355EA64 MOV W2, W31
	0x0355EA68 BL 0x1C5C788
	0x0355EA6C B 0x355F188
	0x0355EA70 LDR W26, [X31 + 0x28]
	0x0355EA74 MOVZ X24, 0x1
	0x0355EA78 AND W8, W29, 0xFF
	0x0355EA7C CMP W8, W22, UXTB
	0x0355EA80 B.EQ 0x355EBAC
	0x0355EA84 LDR X8, [X19 + 0xD0]
	0x0355EA88 CBZ X8, 0x355F394
	0x0355EA8C LDR W9, [X8 + 0x18]
	0x0355EA90 AND W23, W29, 0xFF
	0x0355EA94 STR W26, [X31 + 0x28]
	0x0355EA98 CMP W23, W9
	0x0355EA9C B.CS 0x355F390
	0x0355EAA0 AND X10, X29, 0xFF
	0x0355EAA4 MOVZ W9, 0x38
	0x0355EAA8 MADD X8, X10, X9, X8
	0x0355EAAC STR X10, [X31 + 0x18]
	0x0355EAB0 LDR X27, [X8 + 0x20]
	0x0355EAB4 LDP W26, W10, [X8 + 0x28]
	0x0355EAB8 LDRB W9, [X8 + 0x51]
	0x0355EABC LDRB W8, [X8 + 0x52]
	0x0355EAC0 MOV X28, X31
	0x0355EAC4 STR W10, [X31 + 0x24]
	0x0355EAC8 BIC W22, W10, W10, 0x1F
	0x0355EACC STP W9, W8, [X31 + 0x10]
	0x0355EAD0 UBFM X21, X26, 0x20, 0x1F
	0x0355EAD4 LDR X0, [X25]
	0x0355EAD8 LDR W8, [X0 + 0xE0]
	0x0355EADC CBNZ W8, 0x355EAF4
	0x0355EAE0 BL 0x1C16DFC
	0x0355EAE4 LDR X0, [X25]
	0x0355EAE8 LDR W8, [X0 + 0xE0]
	0x0355EAEC CBNZ W8, 0x355EAF4
	0x0355EAF0 BL 0x1C16DFC
	0x0355EAF4 CMP X22, X28
	0x0355EAF8 B.EQ 0x355EB50
	0x0355EAFC LDR X8, [X20]
	0x0355EB00 CBZ X8, 0x355F394
	0x0355EB04 LDR W9, [X20 + 0x8]
	0x0355EB08 LDR W10, [X8 + 0x18]
	0x0355EB0C ADD X9, X28, X9
	0x0355EB10 CMP W9, W10
	0x0355EB14 B.CS 0x355F390
	0x0355EB18 ADD X8, X8, W9, SXTW
	0x0355EB1C LDRB W9, [X8 + 0x20]!
	0x0355EB20 CBZ X27, 0x355F394
	0x0355EB24 LDR W10, [X27 + 0x18]
	0x0355EB28 ADD X11, X26, X28
	0x0355EB2C CMP X11, X10
	0x0355EB30 B.CS 0x355F390
	0x0355EB34 ADD X10, X27, X21, 0x20, ASR
	0x0355EB38 LDRB W10, [X10 + 0x20]
	0x0355EB3C ADD X28, X28, 0x1
	0x0355EB40 ADD X21, X21, X24
	0x0355EB44 EOR W9, W10, W9, 0x0
	0x0355EB48 STRB W9, [X8]
	0x0355EB4C B 0x355EAD4
	0x0355EB50 LDR W8, [X31 + 0x44]
	0x0355EB54 LDR W9, [X31 + 0x24]
	0x0355EB58 SUB W28, W8, W9
	0x0355EB5C STR W28, [X31 + 0x44]
	0x0355EB60 LDR X8, [X19 + 0xD8]
	0x0355EB64 CBZ X8, 0x355F394
	0x0355EB68 LDR W9, [X8 + 0x18]
	0x0355EB6C LDR W26, [X31 + 0x28]
	0x0355EB70 CMP W23, W9
	0x0355EB74 B.CS 0x355F390
	0x0355EB78 LDR W9, [X31 + 0x2C]
	0x0355EB7C LDR W10, [X31 + 0x10]
	0x0355EB80 MOV W1, W31
	0x0355EB84 MOV X2, X31
	0x0355EB88 EOR W9, W10, W9, 0x0
	0x0355EB8C STR W9, [X31 + 0x2C]
	0x0355EB90 LDR W9, [X31 + 0x14]
	0x0355EB94 EOR W26, W9, W26, 0x0
	0x0355EB98 LDR X9, [X31 + 0x18]
	0x0355EB9C ADD X8, X8, X9, 0x2, LSL
	0x0355EBA0 ADD X0, X8, 0x20
	0x0355EBA4 BL 0x33E9064
	0x0355EBA8 LDRB W23, [X31 + 0x48]
	0x0355EBAC ADD W29, W29, 0x1
	0x0355EBB0 AND W8, W29, 0xFF
	0x0355EBB4 CMP W8, W23, UXTB
	0x0355EBB8 B.EQ 0x355EBC4
	0x0355EBBC LDRB W22, [X31 + 0x4C]
	0x0355EBC0 B 0x355EA78
	0x0355EBC4 LDR X24, [X31]
	0x0355EBC8 TBNZ X28, 0x1F, 0x355EBE8
	0x0355EBCC LDR X0, [X25]
	0x0355EBD0 LDR W8, [X0 + 0xE0]
	0x0355EBD4 CBNZ W8, 0x355EBDC
	0x0355EBD8 BL 0x1C16DFC
	0x0355EBDC LDR W8, [X20 + 0xC]
	0x0355EBE0 CMP W28, W8
	0x0355EBE4 B.LE 0x355EC40
	0x0355EBE8 LDR X8, [X19 + 0xC8]
	0x0355EBEC CBZ X8, 0x355F394
	0x0355EBF0 LDR X21, [X8 + 0x18]
	0x0355EBF4 CBZ X21, 0x355F394
	0x0355EBF8 ADRP X23, 0xB9A000
	0x0355EBFC LDR X8, [X21]
	0x0355EC00 LDR X23, [X23 + 0x348]
	0x0355EC04 LDRH W9, [X8 + 0x12E]
	0x0355EC08 LDR X1, [X23]
	0x0355EC0C CBZ X9, 0x355EC30
	0x0355EC10 LDR X10, [X8 + 0xB0]
	0x0355EC14 ADD X10, X10, 0x8
	0x0355EC18 LDUR X11, [X10 - 0x8]
	0x0355EC1C CMP X11, X1
	0x0355EC20 B.EQ 0x355ED40
	0x0355EC24 SUBS X9, X9, 0x1
	0x0355EC28 ADD X10, X10, 0x10
	0x0355EC2C B.NE 0x355EC18
	0x0355EC30 MOV X0, X21
	0x0355EC34 MOV W2, W31
	0x0355EC38 BL 0x1C5C788
	0x0355EC3C B 0x355ED4C
	0x0355EC40 LDRB W8, [X20 + 0x30]
	0x0355EC44 LDP V1, V0, [X20 + 0x10]
	0x0355EC48 LDR X21, [X20]
	0x0355EC4C LDR X0, [X25]
	0x0355EC50 STRB W8, [X31 + 0x70]
	0x0355EC54 STP V1, V0, [X31 + 0x50]
	0x0355EC58 LDRB W8, [X20 + 0x37]
	0x0355EC5C LDUR W9, [X20 + 0x33]
	0x0355EC60 STRB W8, [X31 + 0x34]
	0x0355EC64 STR W9, [X31 + 0x30]
	0x0355EC68 LDR W8, [X0 + 0xE0]
	0x0355EC6C CBNZ W8, 0x355EC74
	0x0355EC70 BL 0x1C16DFC
	0x0355EC74 LDR W8, [X20 + 0x8]
	0x0355EC78 LDR X10, [X31 + 0x8]
	0x0355EC7C LDR W9, [X31 + 0x2C]
	0x0355EC80 STR X21, [X10]
	0x0355EC84 STP W8, W28, [X10 + 0x8]
	0x0355EC88 LDRB W8, [X31 + 0x70]
	0x0355EC8C LDP V0, V1, [X31 + 0x50]
	0x0355EC90 STRB W9, [X10 + 0x31]
	0x0355EC94 STRB W26, [X10 + 0x32]
	0x0355EC98 STRB W8, [X10 + 0x30]
	0x0355EC9C STP V0, V1, [X10 + 0x10]
	0x0355ECA0 LDRB W8, [X31 + 0x34]
	0x0355ECA4 LDR W9, [X31 + 0x30]
	0x0355ECA8 ADRP X21, 0xBD7000
	0x0355ECAC STRB W8, [X10 + 0x37]
	0x0355ECB0 STUR W9, [X10 + 0x33]
	0x0355ECB4 LDR X21, [X21 + 0x750]
	0x0355ECB8 LDR X0, [X21]
	0x0355ECBC LDR W8, [X0 + 0xE0]
	0x0355ECC0 CBNZ W8, 0x355ECCC
	0x0355ECC4 BL 0x1C16DFC
	0x0355ECC8 LDR X0, [X21]
	0x0355ECCC LDR X8, [X0 + 0xB8]
	0x0355ECD0 LDR X9, [X8 + 0x30]
	0x0355ECD4 LDP V1, V0, [X8 + 0x10]
	0x0355ECD8 LDR V2, [X8]
	0x0355ECDC STR X9, [X20 + 0x30]
	0x0355ECE0 STP V1, V0, [X20 + 0x10]
	0x0355ECE4 STR V2, [X20]
	0x0355ECE8 LDR X8, [X19 + 0xC8]
	0x0355ECEC CBZ X8, 0x355F394
	0x0355ECF0 LDR X20, [X8 + 0x18]
	0x0355ECF4 CBZ X20, 0x355F394
	0x0355ECF8 ADRP X23, 0xB9A000
	0x0355ECFC LDR X8, [X20]
	0x0355ED00 LDR X23, [X23 + 0x348]
	0x0355ED04 LDRH W9, [X8 + 0x12E]
	0x0355ED08 LDR X1, [X23]
	0x0355ED0C CBZ X9, 0x355ED30
	0x0355ED10 LDR X10, [X8 + 0xB0]
	0x0355ED14 ADD X10, X10, 0x8
	0x0355ED18 LDUR X11, [X10 - 0x8]
	0x0355ED1C CMP X11, X1
	0x0355ED20 B.EQ 0x355EEF8
	0x0355ED24 SUBS X9, X9, 0x1
	0x0355ED28 ADD X10, X10, 0x10
	0x0355ED2C B.NE 0x355ED18
	0x0355ED30 MOV X0, X20
	0x0355ED34 MOV W2, W31
	0x0355ED38 BL 0x1C5C788
	0x0355ED3C B 0x355EF04
	0x0355ED40 LDRSW X9, [X10]
	0x0355ED44 ADD X8, X8, X9, 0x4, LSL
	0x0355ED48 ADD X0, X8, 0x138
	0x0355ED4C LDP X8, X1, [X0]
	0x0355ED50 MOV X0, X21
	0x0355ED54 BLR X8
	0x0355ED58 CMP W0, 0x4
	0x0355ED5C B.LT 0x355F35C
	0x0355ED60 LDR X8, [X19 + 0xC8]
	0x0355ED64 CBZ X8, 0x355F394
	0x0355ED68 LDR X21, [X8 + 0x18]
	0x0355ED6C ADRP X8, 0xB95000
	0x0355ED70 LDR X8, [X8 + 0xAC8]
	0x0355ED74 MOVZ W1, 0x7
	0x0355ED78 LDR X0, [X8]
	0x0355ED7C BL 0x1C16D6C
	0x0355ED80 CBZ X0, 0x355F394
	0x0355ED84 LDR W8, [X0 + 0x18]
	0x0355ED88 MOV X22, X0
	0x0355ED8C CBZ W8, 0x355F390
	0x0355ED90 LDR X9, [X19 + 0xB8]
	0x0355ED94 CMP W8, 0x1
	0x0355ED98 STR X9, [X22 + 0x20]
	0x0355ED9C B.EQ 0x355F390
	0x0355EDA0 ADRP X8, 0xBD7000
	0x0355EDA4 LDR X8, [X8 + 0x648]
	0x0355EDA8 ADD X0, X31, 0x4C
	0x0355EDAC MOV X1, X31
	0x0355EDB0 LDR X8, [X8]
	0x0355EDB4 STR X8, [X22 + 0x28]
	0x0355EDB8 BL 0x3319BB4
	0x0355EDBC LDR W8, [X22 + 0x18]
	0x0355EDC0 CMP W8, 0x2
	0x0355EDC4 B.LS 0x355F390
	0x0355EDC8 CMP W8, 0x3
	0x0355EDCC STR X0, [X22 + 0x30]
	0x0355EDD0 B.EQ 0x355F390
	0x0355EDD4 ADRP X8, 0xBD7000
	0x0355EDD8 LDR X8, [X8 + 0x7E8]
	0x0355EDDC LDR X8, [X8]
	0x0355EDE0 STR X8, [X22 + 0x38]
	0x0355EDE4 LDR X0, [X25]
	0x0355EDE8 LDR W8, [X0 + 0xE0]
	0x0355EDEC CBNZ W8, 0x355EDF4
	0x0355EDF0 BL 0x1C16DFC
	0x0355EDF4 LDR W8, [X20 + 0xC]
	0x0355EDF8 ADD X0, X31, 0x3C
	0x0355EDFC MOV X1, X31
	0x0355EE00 STR W8, [X31 + 0x3C]
	0x0355EE04 BL 0x337B6E0
	0x0355EE08 LDR W8, [X22 + 0x18]
	0x0355EE0C CMP W8, 0x4
	0x0355EE10 B.LS 0x355F390
	0x0355EE14 CMP W8, 0x5
	0x0355EE18 STR X0, [X22 + 0x40]
	0x0355EE1C B.EQ 0x355F390
	0x0355EE20 ADRP X8, 0xBD7000
	0x0355EE24 LDR X8, [X8 + 0x7D8]
	0x0355EE28 ADD X0, X31, 0x44
	0x0355EE2C MOV X1, X31
	0x0355EE30 LDR X8, [X8]
	0x0355EE34 STR X8, [X22 + 0x48]
	0x0355EE38 BL 0x337B6E0
	0x0355EE3C LDR W8, [X22 + 0x18]
	0x0355EE40 CMP W8, 0x6
	0x0355EE44 B.LS 0x355F390
	0x0355EE48 STR X0, [X22 + 0x50]
	0x0355EE4C MOV X0, X22
	0x0355EE50 MOV X1, X31
	0x0355EE54 BL 0x32278CC
	0x0355EE58 ADRP X8, 0xB95000
	0x0355EE5C LDR X8, [X8 + 0x9C8]
	0x0355EE60 MOV X19, X0
	0x0355EE64 LDR X20, [X8]
	0x0355EE68 LDR X8, [X20 + 0x38]
	0x0355EE6C CBNZ X8, 0x355EE7C
	0x0355EE70 MOV X0, X20
	0x0355EE74 BL 0x1C5C6E0
	0x0355EE78 LDR X8, [X20 + 0x38]
	0x0355EE7C LDR X0, [X8 + 0x10]
	0x0355EE80 LDRB W8, [X0 + 0x135]
	0x0355EE84 TBNZ X8, 0x0, 0x355EE8C
	0x0355EE88 BL 0x1C5C684
	0x0355EE8C LDR W8, [X0 + 0xE0]
	0x0355EE90 CBNZ W8, 0x355EE98
	0x0355EE94 BL 0x1C16DFC
	0x0355EE98 LDR X8, [X20 + 0x38]
	0x0355EE9C LDR X0, [X8 + 0x10]
	0x0355EEA0 LDRB W8, [X0 + 0x135]
	0x0355EEA4 TBNZ X8, 0x0, 0x355EEAC
	0x0355EEA8 BL 0x1C5C684
	0x0355EEAC CBZ X21, 0x355F394
	0x0355EEB0 LDR X9, [X0 + 0xB8]
	0x0355EEB4 LDR X8, [X21]
	0x0355EEB8 LDR X1, [X23]
	0x0355EEBC LDR X20, [X9]
	0x0355EEC0 LDRH W9, [X8 + 0x12E]
	0x0355EEC4 CBZ X9, 0x355EEE8
	0x0355EEC8 LDR X10, [X8 + 0xB0]
	0x0355EECC ADD X10, X10, 0x8
	0x0355EED0 LDUR X11, [X10 - 0x8]
	0x0355EED4 CMP X11, X1
	0x0355EED8 B.EQ 0x355F124
	0x0355EEDC SUBS X9, X9, 0x1
	0x0355EEE0 ADD X10, X10, 0x10
	0x0355EEE4 B.NE 0x355EED0
	0x0355EEE8 MOVZ W2, 0x1
	0x0355EEEC MOV X0, X21
	0x0355EEF0 BL 0x1C5C788
	0x0355EEF4 B 0x355F134
	0x0355EEF8 LDRSW X9, [X10]
	0x0355EEFC ADD X8, X8, X9, 0x4, LSL
	0x0355EF00 ADD X0, X8, 0x138
	0x0355EF04 LDP X8, X1, [X0]
	0x0355EF08 MOV X0, X20
	0x0355EF0C BLR X8
	0x0355EF10 CMP W0, 0x5
	0x0355EF14 B.LT 0x355F174
	0x0355EF18 LDR X8, [X19 + 0xC8]
	0x0355EF1C CBZ X8, 0x355F394
	0x0355EF20 LDR X20, [X8 + 0x18]
	0x0355EF24 ADRP X8, 0xB95000
	0x0355EF28 LDR X8, [X8 + 0xAC8]
	0x0355EF2C MOVZ W1, 0xB
	0x0355EF30 LDR X0, [X8]
	0x0355EF34 BL 0x1C16D6C
	0x0355EF38 CBZ X0, 0x355F394
	0x0355EF3C LDR W8, [X0 + 0x18]
	0x0355EF40 MOV X22, X0
	0x0355EF44 CBZ W8, 0x355F390
	0x0355EF48 LDR X9, [X19 + 0xB8]
	0x0355EF4C CMP W8, 0x1
	0x0355EF50 STR X9, [X22 + 0x20]
	0x0355EF54 B.EQ 0x355F390
	0x0355EF58 ADRP X8, 0xBD7000
	0x0355EF5C LDR X8, [X8 + 0x648]
	0x0355EF60 ADD X0, X31, 0x4C
	0x0355EF64 MOV X1, X31
	0x0355EF68 LDR X8, [X8]
	0x0355EF6C STR X8, [X22 + 0x28]
	0x0355EF70 BL 0x3319BB4
	0x0355EF74 LDR W8, [X22 + 0x18]
	0x0355EF78 CMP W8, 0x2
	0x0355EF7C B.LS 0x355F390
	0x0355EF80 CMP W8, 0x3
	0x0355EF84 STR X0, [X22 + 0x30]
	0x0355EF88 B.EQ 0x355F390
	0x0355EF8C ADRP X8, 0xBD7000
	0x0355EF90 LDR X8, [X8 + 0x638]
	0x0355EF94 LDR X8, [X8]
	0x0355EF98 STR X8, [X22 + 0x38]
	0x0355EF9C LDR X0, [X25]
	0x0355EFA0 LDR W8, [X0 + 0xE0]
	0x0355EFA4 CBNZ W8, 0x355EFAC
	0x0355EFA8 BL 0x1C16DFC
	0x0355EFAC LDR X8, [X31 + 0x8]
	0x0355EFB0 ADD X0, X31, 0x38
	0x0355EFB4 MOV X1, X31
	0x0355EFB8 LDRB W8, [X8 + 0x32]
	0x0355EFBC STRB W8, [X31 + 0x38]
	0x0355EFC0 BL 0x3319BB4
	0x0355EFC4 LDR W8, [X22 + 0x18]
	0x0355EFC8 CMP W8, 0x4
	0x0355EFCC B.LS 0x355F390
	0x0355EFD0 CMP W8, 0x5
	0x0355EFD4 STR X0, [X22 + 0x40]
	0x0355EFD8 B.EQ 0x355F390
	0x0355EFDC ADRP X8, 0xBD7000
	0x0355EFE0 LDR X8, [X8 + 0x7D0]
	0x0355EFE4 ADD X0, X31, 0x40
	0x0355EFE8 MOV X1, X31
	0x0355EFEC LDR X8, [X8]
	0x0355EFF0 STR X8, [X22 + 0x48]
	0x0355EFF4 BL 0x3319BB4
	0x0355EFF8 LDR W8, [X22 + 0x18]
	0x0355EFFC CMP W8, 0x6
	0x0355F000 B.LS 0x355F390
	0x0355F004 CMP W8, 0x7
	0x0355F008 STR X0, [X22 + 0x50]
	0x0355F00C B.EQ 0x355F390
	0x0355F010 ADRP X8, 0xB95000
	0x0355F014 LDR X8, [X8 + 0x2A8]
	0x0355F018 ADD X0, X31, 0x48
	0x0355F01C MOV X1, X31
	0x0355F020 LDR X8, [X8]
	0x0355F024 STR X8, [X22 + 0x58]
	0x0355F028 BL 0x3319BB4
	0x0355F02C LDR W8, [X22 + 0x18]
	0x0355F030 CMP W8, 0x8
	0x0355F034 B.LS 0x355F390
	0x0355F038 CMP W8, 0x9
	0x0355F03C STR X0, [X22 + 0x60]
	0x0355F040 B.EQ 0x355F390
	0x0355F044 ADRP X8, 0xBD6000
	0x0355F048 LDR X8, [X8 + 0x658]
	0x0355F04C ADD X0, X31, 0x3C
	0x0355F050 MOV X1, X31
	0x0355F054 LDR X8, [X8]
	0x0355F058 STR X8, [X22 + 0x68]
	0x0355F05C LDR W8, [X31 + 0x44]
	0x0355F060 STR W8, [X31 + 0x3C]
	0x0355F064 BL 0x337B6E0
	0x0355F068 LDR W8, [X22 + 0x18]
	0x0355F06C CMP W8, 0xA
	0x0355F070 B.LS 0x355F390
	0x0355F074 STR X0, [X22 + 0x70]
	0x0355F078 MOV X0, X22
	0x0355F07C MOV X1, X31
	0x0355F080 BL 0x32278CC
	0x0355F084 ADRP X8, 0xB94000
	0x0355F088 LDR X8, [X8 + 0x9C8]
	0x0355F08C MOV X19, X0
	0x0355F090 LDR X21, [X8]
	0x0355F094 LDR X8, [X21 + 0x38]
	0x0355F098 CBNZ X8, 0x355F0A8
	0x0355F09C MOV X0, X21
	0x0355F0A0 BL 0x1C5C6E0
	0x0355F0A4 LDR X8, [X21 + 0x38]
	0x0355F0A8 LDR X0, [X8 + 0x10]
	0x0355F0AC LDRB W8, [X0 + 0x135]
	0x0355F0B0 TBNZ X8, 0x0, 0x355F0B8
	0x0355F0B4 BL 0x1C5C684
	0x0355F0B8 LDR W8, [X0 + 0xE0]
	0x0355F0BC CBNZ W8, 0x355F0C4
	0x0355F0C0 BL 0x1C16DFC
	0x0355F0C4 LDR X8, [X21 + 0x38]
	0x0355F0C8 LDR X0, [X8 + 0x10]
	0x0355F0CC LDRB W8, [X0 + 0x135]
	0x0355F0D0 TBNZ X8, 0x0, 0x355F0D8
	0x0355F0D4 BL 0x1C5C684
	0x0355F0D8 CBZ X20, 0x355F394
	0x0355F0DC LDR X9, [X0 + 0xB8]
	0x0355F0E0 LDR X8, [X20]
	0x0355F0E4 LDR X1, [X23]
	0x0355F0E8 LDR X21, [X9]
	0x0355F0EC LDRH W9, [X8 + 0x12E]
	0x0355F0F0 CBZ X9, 0x355F114
	0x0355F0F4 LDR X10, [X8 + 0xB0]
	0x0355F0F8 ADD X10, X10, 0x8
	0x0355F0FC LDUR X11, [X10 - 0x8]
	0x0355F100 CMP X11, X1
	0x0355F104 B.EQ 0x355F14C
	0x0355F108 SUBS X9, X9, 0x1
	0x0355F10C ADD X10, X10, 0x10
	0x0355F110 B.NE 0x355F0FC
	0x0355F114 MOVZ W2, 0x1
	0x0355F118 MOV X0, X20
	0x0355F11C BL 0x1C5C788
	0x0355F120 B 0x355F15C
	0x0355F124 LDR W9, [X10]
	0x0355F128 ADD W9, W9, 0x1
	0x0355F12C ADD X8, X8, W9, 0x4, SXTW
	0x0355F130 ADD X0, X8, 0x138
	0x0355F134 LDP X8, X4, [X0]
	0x0355F138 MOVZ W1, 0x4
	0x0355F13C MOV X0, X21
	0x0355F140 MOV X2, X19
	0x0355F144 MOV X3, X20
	0x0355F148 B 0x355F358
	0x0355F14C LDR W9, [X10]
	0x0355F150 ADD W9, W9, 0x1
	0x0355F154 ADD X8, X8, W9, 0x4, SXTW
	0x0355F158 ADD X0, X8, 0x138
	0x0355F15C LDP X8, X4, [X0]
	0x0355F160 MOVZ W1, 0x5
	0x0355F164 MOV X0, X20
	0x0355F168 MOV X2, X19
	0x0355F16C MOV X3, X21
	0x0355F170 BLR X8
	0x0355F174 MOVZ W0, 0x1
	0x0355F178 B 0x355F360
	0x0355F17C LDRSW X9, [X10]
	0x0355F180 ADD X8, X8, X9, 0x4, LSL
	0x0355F184 ADD X0, X8, 0x138
	0x0355F188 LDP X8, X1, [X0]
	0x0355F18C MOV X0, X20
	0x0355F190 BLR X8
	0x0355F194 CMP W0, 0x4
	0x0355F198 B.LT 0x355F35C
	0x0355F19C LDR X8, [X19 + 0xC8]
	0x0355F1A0 CBZ X8, 0x355F394
	0x0355F1A4 LDR X20, [X8 + 0x18]
	0x0355F1A8 ADRP X8, 0xB94000
	0x0355F1AC LDR X8, [X8 + 0xAC8]
	0x0355F1B0 MOVZ W1, 0x8
	0x0355F1B4 LDR X0, [X8]
	0x0355F1B8 BL 0x1C16D6C
	0x0355F1BC CBZ X0, 0x355F394
	0x0355F1C0 LDR W8, [X0 + 0x18]
	0x0355F1C4 MOV X21, X0
	0x0355F1C8 CBZ W8, 0x355F390
	0x0355F1CC LDR X9, [X19 + 0xB8]
	0x0355F1D0 CMP W8, 0x1
	0x0355F1D4 STR X9, [X21 + 0x20]
	0x0355F1D8 B.EQ 0x355F390
	0x0355F1DC ADRP X8, 0xBD6000
	0x0355F1E0 LDR X8, [X8 + 0x648]
	0x0355F1E4 ADD X0, X31, 0x4C
	0x0355F1E8 MOV X1, X31
	0x0355F1EC LDR X8, [X8]
	0x0355F1F0 STR X8, [X21 + 0x28]
	0x0355F1F4 BL 0x3319BB4
	0x0355F1F8 LDR W8, [X21 + 0x18]
	0x0355F1FC CMP W8, 0x2
	0x0355F200 B.LS 0x355F390
	0x0355F204 CMP W8, 0x3
	0x0355F208 STR X0, [X21 + 0x30]
	0x0355F20C B.EQ 0x355F390
	0x0355F210 ADRP X8, 0xBD6000
	0x0355F214 LDR X8, [X8 + 0x7F0]
	0x0355F218 ADD X0, X31, 0x40
	0x0355F21C MOV X1, X31
	0x0355F220 LDR X8, [X8]
	0x0355F224 STR X8, [X21 + 0x38]
	0x0355F228 BL 0x3319BB4
	0x0355F22C LDR W8, [X21 + 0x18]
	0x0355F230 CMP W8, 0x4
	0x0355F234 B.LS 0x355F390
	0x0355F238 CMP W8, 0x5
	0x0355F23C STR X0, [X21 + 0x40]
	0x0355F240 B.EQ 0x355F390
	0x0355F244 ADRP X8, 0xB95000
	0x0355F248 LDR X8, [X8 + 0x2A8]
	0x0355F24C ADD X0, X31, 0x48
	0x0355F250 MOV X1, X31
	0x0355F254 LDR X8, [X8]
	0x0355F258 STR X8, [X21 + 0x48]
	0x0355F25C BL 0x3319BB4
	0x0355F260 LDR W8, [X21 + 0x18]
	0x0355F264 CMP W8, 0x6
	0x0355F268 B.LS 0x355F390
	0x0355F26C CMP W8, 0x7
	0x0355F270 STR X0, [X21 + 0x50]
	0x0355F274 B.EQ 0x355F390
	0x0355F278 ADRP X8, 0xBD6000
	0x0355F27C LDR X8, [X8 + 0x7E0]
	0x0355F280 MOV X0, X21
	0x0355F284 MOV X1, X31
	0x0355F288 LDR X8, [X8]
	0x0355F28C STR X8, [X21 + 0x58]
	0x0355F290 BL 0x32278CC
	0x0355F294 ADRP X8, 0xB94000
	0x0355F298 LDR X8, [X8 + 0x9C8]
	0x0355F29C MOV X19, X0
	0x0355F2A0 LDR X21, [X8]
	0x0355F2A4 LDR X8, [X21 + 0x38]
	0x0355F2A8 CBNZ X8, 0x355F2B8
	0x0355F2AC MOV X0, X21
	0x0355F2B0 BL 0x1C5C6E0
	0x0355F2B4 LDR X8, [X21 + 0x38]
	0x0355F2B8 LDR X0, [X8 + 0x10]
	0x0355F2BC LDRB W8, [X0 + 0x135]
	0x0355F2C0 TBNZ X8, 0x0, 0x355F2C8
	0x0355F2C4 BL 0x1C5C684

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+144], X29
	003 Move [X31+152], X30
	004 Move [X31+160], X28
	005 Move [X31+168], X27
	006 Move [X31+176], X26
	007 Move [X31+184], X25
	008 Move [X31+192], X24
	009 Move [X31+200], X23
	010 Move [X31+208], X22
	011 Move [X31+216], X21
	012 Move [X31+224], X20
	013 Move [X31+232], X19
	014 Move X21, 0xE83000
	015 Move W8, [X21+3506]
	016 Move W22, W2
	017 Move W20, W1
	018 Move X19, X0
	019 Move [X31+140], W1
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {110}
	024 Move X0, 0xB97000
	025 Move X0, [X0+2504]
	026 Call 0x1C17CF4
	027 Move X0, 0xB97000
	028 Move X0, [X0+1560]
	029 Call 0x1C17CF4
	030 Move X0, 0xBD9000
	031 Move X0, [X0+1880]
	032 Call 0x1C17CF4
	033 Move X0, 0xBC0000
	034 Move X0, [X0+3608]
	035 Call 0x1C17CF4
	036 Move X0, 0xBD9000
	037 Move X0, [X0+1000]
	038 Call 0x1C17CF4
	039 Move X0, 0xBD9000
	040 Move X0, [X0+1128]
	041 Call 0x1C17CF4
	042 Move X0, 0xB9C000
	043 Move X0, [X0+840]
	044 Call 0x1C17CF4
	045 Move X0, 0xBD9000
	046 Move X0, [X0+1872]
	047 Call 0x1C17CF4
	048 Move X0, 0xB97000
	049 Move X0, [X0+2760]
	050 Call 0x1C17CF4
	051 Move X0, 0xBD9000
	052 Move X0, [X0+1888]
	053 Call 0x1C17CF4
	054 Move X0, 0xBD9000
	055 Move X0, [X0+1896]
	056 Call 0x1C17CF4
	057 Move X0, 0xBD9000
	058 Move X0, [X0+1592]
	059 Call 0x1C17CF4
	060 Move X0, 0xBD9000
	061 Move X0, [X0+1904]
	062 Call 0x1C17CF4
	063 Move X0, 0xBD9000
	064 Move X0, [X0+1832]
	065 Call 0x1C17CF4
	066 Move X0, 0xB98000
	067 Move X0, [X0+680]
	068 Call 0x1C17CF4
	069 Move X0, 0xBD9000
	070 Move X0, [X0+1912]
	071 Call 0x1C17CF4
	072 Move X0, 0xBD9000
	073 Move X0, [X0+1920]
	074 Call 0x1C17CF4
	075 Move X0, 0xBD9000
	076 Move X0, [X0+1928]
	077 Call 0x1C17CF4
	078 Move X0, 0xBD9000
	079 Move X0, [X0+1936]
	080 Call 0x1C17CF4
	081 Move X0, 0xBD9000
	082 Move X0, [X0+1608]
	083 Call 0x1C17CF4
	084 Move X0, 0xBD9000
	085 Move X0, [X0+1944]
	086 Call 0x1C17CF4
	087 Move X0, 0xBD9000
	088 Move X0, [X0+1016]
	089 Call 0x1C17CF4
	090 Move X0, 0xB97000
	091 Move X0, [X0+2440]
	092 Call 0x1C17CF4
	093 Move X0, 0xBD9000
	094 Move X0, [X0+1616]
	095 Call 0x1C17CF4
	096 Move X0, 0xBD9000
	097 Move X0, [X0+1952]
	098 Call 0x1C17CF4
	099 Move X0, 0xBD9000
	100 Move X0, [X0+1960]
	101 Call 0x1C17CF4
	102 Move X0, 0xBD9000
	103 Move X0, [X0+1968]
	104 Call 0x1C17CF4
	105 Move X0, 0xBD9000
	106 Move X0, [X0+1624]
	107 Call 0x1C17CF4
	108 Move W8, 1
	109 Move [X21+3506], W8
	110 Move X25, 0xBC0000
	111 Move X25, [X25+3608]
	112 NotImplemented "Instruction MOVI not yet implemented."
	113 And W21, W20, 255
	114 And X28, X20, 255
	115 Move [X31+136], W31
	116 Move [X31+132], W31
	117 Move [X31+124], W31
	118 Move [X31+128], W31
	119 Move [X31+112], X31
	120 Move [X31+60], W31
	121 Move [X31+80], V0
	122 Move [X31+88], V0
	123 Move [X31+4], V0
	124 Move X8, [X19+216]
	125 Compare X8, 0
	126 JumpIfEqual {1671}
	127 Move W9, [X8+24]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Add X8, X8, X28
	130 Add X0, X8, 32
	131 Move W1, 1
	132 Move X2, X31
	133 Call Interlocked.Exchange, X0, X1
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X27, [X19+208]
	136 Compare X27, 0
	137 JumpIfEqual {1671}
	138 Move W8, [X27+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X0, [X25]
	141 Move W9, 56
	142 NotImplemented "Instruction MADD not yet implemented."
	143 Add X23, X9, 32
	144 Move W8, [X0+224]
	145 Compare W8, 0
	146 JumpIfNotEqual {148}
	147 Call 0x1C17DFC
	148 Move X8, [X23]
	149 Compare X8, 0
	150 JumpIfNotEqual {157}
	151 Move W8, [X19+296]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X0, X19
	154 Move W1, W20
	155 Move X2, X23
	156 Call RemoteVoice.processLostEvent, X0, X1, X2
	157 Move X0, [X25]
	158 Move W8, [X0+224]
	159 Compare W8, 0
	160 JumpIfNotEqual {162}
	161 Call 0x1C17DFC
	162 Move X0, X23
	163 Call FrameBuffer.get_IsConfig, X0
	164 Move TEMP, X0
	165 And TEMP, TEMP, 1
	166 Compare TEMP, 1
	167 JumpIfNotEqual {181}
	168 Move X8, [X19+216]
	169 Compare X8, 0
	170 JumpIfEqual {1671}
	171 Move W9, [X8+24]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Add X8, X8, X28
	174 Add X0, X8, 32
	175 Move W1, W31
	176 Move X2, X31
	177 Call Interlocked.Exchange, X0, X1
	178 Move W8, [X19+225]
	179 Add W8, W8, 1
	180 Move [X19+225], W8
	181 Move X0, [X25]
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {186}
	185 Call 0x1C17DFC
	186 Move X8, [X23]
	187 Compare X8, 0
	188 JumpIfEqual {434}
	189 Move [X31+16], X23
	190 Move X20, X19
	191 Move X21, 0xBD9000
	192 Move X21, [X21+1872]
	193 Add X20, X20, 225
	194 Move W23, [X20]
	195 Move W8, 56
	196 NotImplemented "Instruction MADD not yet implemented."
	197 And W26, W22, 255
	198 Add X29, X8, 82
	199 Subtract X22, X20, 1
	200 Move X0, [X25]
	201 Move W8, [X0+224]
	202 Compare W8, 0
	203 JumpIfNotEqual {205}
	204 Call 0x1C17DFC
	205 Move W8, [X29]
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move X8, [X19+200]
	208 Compare X8, 0
	209 JumpIfEqual {1671}
	210 Move X23, [X8+24]
	211 Compare X23, 0
	212 JumpIfEqual {1671}
	213 Move X8, [X23]
	214 Move X10, 0xB9C000
	215 NotImplemented "Instruction LDRH not yet implemented."
	216 Move X10, [X10+840]
	217 Move X1, [X10]
	218 Compare X9, 0
	219 JumpIfEqual {226}
	220 Move X10, [X8+176]
	221 Add X10, X10, 8
	222 NotImplemented "Instruction LDUR not yet implemented."
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Subtract X9, X9, 1
	225 Add X10, X10, 16
	226 Move X0, X23
	227 Move W2, W31
	228 Call 0x1C5D788
	229 NotImplemented "Instruction LDRSW not yet implemented."
	230 Add X8, X8, X9
	231 Add X0, X8, 312
	232 Move X8, [X0]
	233 Move X1, [X0+8]
	234 Move X0, X23
	235 NotImplemented "Instruction BLR not yet implemented."
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Move X8, [X19+200]
	238 Compare X8, 0
	239 JumpIfEqual {1671}
	240 Move X23, [X8+24]
	241 Move X8, 0xB97000
	242 Move X8, [X8+2760]
	243 Move W1, 10
	244 Move X0, [X8]
	245 Call 0x1C17D6C
	246 Compare X0, 0
	247 JumpIfEqual {1671}
	248 Move W8, [X0+24]
	249 Move X24, X0
	250 Compare W8, 0
	251 JumpIfEqual {1672}
	252 Move X9, [X19+184]
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Move [X24+32], X9
	255 Move X8, 0xBD9000
	256 Move X8, [X8+1608]
	257 Add X0, X31, 140
	258 Move X1, X31
	259 Move X8, [X8]
	260 Move [X24+40], X8
	261 Call Byte.ToString, X0
	262 Move W8, [X24+24]
	263 NotImplemented "Instruction CMP not yet implemented."
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Move [X24+48], X0
	266 Move X8, 0xBD9000
	267 Move X8, [X8+1592]
	268 Move X8, [X8]
	269 Move [X24+56], X8
	270 Move X0, [X25]
	271 Move W8, [X0+224]
	272 Compare W8, 0
	273 JumpIfNotEqual {275}
	274 Call 0x1C17DFC
	275 Move W8, [X29]
	276 Add X0, X31, 136
	277 Move X1, X31
	278 Move [X31+136], W8
	279 Call Byte.ToString, X0
	280 Move W8, [X24+24]
	281 NotImplemented "Instruction CMP not yet implemented."
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Move [X24+64], X0
	284 Move X8, 0xBD9000
	285 Move X8, [X8+1832]
	286 Move X0, X22
	287 Move X1, X31
	288 Move X8, [X8]
	289 Move [X24+72], X8
	290 Call Byte.ToString, X0
	291 Move W8, [X24+24]
	292 NotImplemented "Instruction CMP not yet implemented."
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Move [X24+80], X0
	295 Move X8, 0xBD9000
	296 Move X8, [X8+1968]
	297 Move X0, X20
	298 Move X1, X31
	299 Move X8, [X8]
	300 Move [X24+88], X8
	301 Call Byte.ToString, X0
	302 Move W8, [X24+24]
	303 NotImplemented "Instruction CMP not yet implemented."
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Move [X24+96], X0
	306 Move X8, 0xBD9000
	307 Move X8, [X8+1960]
	308 Move X0, X24
	309 Move X1, X31
	310 Move X8, [X8]
	311 Move [X24+104], X8
	312 Call String.Concat, X0
	313 Move X8, 0xB97000
	314 Move X8, [X8+2504]
	315 Move X24, X0
	316 Move X25, [X8]
	317 Move X8, [X25+56]
	318 Compare X8, 0
	319 JumpIfNotEqual {323}
	320 Move X0, X25
	321 Call 0x1C5D6E0
	322 Move X8, [X25+56]
	323 Move X0, [X8+16]
	324 Move W8, [X0+309]
	325 Move TEMP, X8
	326 And TEMP, TEMP, 1
	327 Compare TEMP, 1
	328 JumpIfEqual {330}
	329 Call 0x1C5D684
	330 Move W8, [X0+224]
	331 Compare W8, 0
	332 JumpIfNotEqual {334}
	333 Call 0x1C17DFC
	334 Move X8, [X25+56]
	335 Move X0, [X8+16]
	336 Move W8, [X0+309]
	337 Move TEMP, X8
	338 And TEMP, TEMP, 1
	339 Compare TEMP, 1
	340 JumpIfEqual {342}
	341 Call 0x1C5D684
	342 Compare X23, 0
	343 JumpIfEqual {1671}
	344 Move X9, [X0+184]
	345 Move X8, [X23]
	346 Move X10, 0xB9C000
	347 Move X25, [X9]
	348 NotImplemented "Instruction LDRH not yet implemented."
	349 Move X10, [X10+840]
	350 Move X1, [X10]
	351 Compare X9, 0
	352 JumpIfEqual {359}
	353 Move X10, [X8+176]
	354 Add X10, X10, 8
	355 NotImplemented "Instruction LDUR not yet implemented."
	356 NotImplemented "Instruction CMP not yet implemented."
	357 Subtract X9, X9, 1
	358 Add X10, X10, 16
	359 Move W2, 1
	360 Move X0, X23
	361 Call 0x1C5D788
	362 Move W9, [X10]
	363 Add W9, W9, 1
	364 Add X8, X8, W9
	365 Add X0, X8, 312
	366 Move X8, [X0]
	367 Move X4, [X0+8]
	368 Move W1, 5
	369 Move X0, X23
	370 Move X2, X24
	371 Move X3, X25
	372 NotImplemented "Instruction BLR not yet implemented."
	373 Move X25, 0xBC0000
	374 Move X25, [X25+3608]
	375 Move X0, [X21]
	376 Move X23, [X19+72]
	377 Move W8, [X0+224]
	378 Compare W8, 0
	379 JumpIfNotEqual {381}
	380 Call 0x1C17DFC
	381 Compare X23, 0
	382 JumpIfEqual {1671}
	383 Move X9, 0xBD9000
	384 Move X8, [X23]
	385 Move X10, [X21]
	386 Move X9, [X9+1128]
	387 Move X24, [X10+184]
	388 Move X1, [X9]
	389 NotImplemented "Instruction LDRH not yet implemented."
	390 Compare X9, 0
	391 JumpIfEqual {398}
	392 Move X10, [X8+176]
	393 Add X10, X10, 8
	394 NotImplemented "Instruction LDUR not yet implemented."
	395 NotImplemented "Instruction CMP not yet implemented."
	396 Subtract X9, X9, 1
	397 Add X10, X10, 16
	398 Move W2, 2
	399 Move X0, X23
	400 Call 0x1C5D788
	401 Move W9, [X10]
	402 Add W9, W9, 2
	403 Add X8, X8, W9
	404 Add X0, X8, 312
	405 Move X8, [X0]
	406 Move X2, [X0+8]
	407 Move X0, X23
	408 Move X1, X24
	409 NotImplemented "Instruction BLR not yet implemented."
	410 Move X8, [X19+200]
	411 Compare X8, 0
	412 JumpIfEqual {1671}
	413 Move W9, [X8+40]
	414 Add W9, W9, 1
	415 Move [X8+40], W9
	416 Move W8, [X20]
	417 Add W23, W8, 1
	418 Subtract W8, W26, W23
	419 And W8, W8, 255
	420 NotImplemented "Instruction CMP not yet implemented."
	421 Move [X20], W23
	422 Move X8, [X19+216]
	423 Compare X8, 0
	424 JumpIfEqual {1671}
	425 Move W9, [X31+140]
	426 Move W10, [X8+24]
	427 NotImplemented "Instruction CMP not yet implemented."
	428 Add X8, X8, X9
	429 Add X0, X8, 32
	430 Move W1, W31
	431 Move X2, X31
	432 Call Interlocked.Exchange, X0, X1
	433 Move W0, W31
	434 Move X8, [X19+200]
	435 Compare X8, 0
	436 JumpIfEqual {1671}
	437 Move X20, [X8+24]
	438 Compare X20, 0
	439 JumpIfEqual {1671}
	440 Move X23, 0xB9B000
	441 Move X8, [X20]
	442 Move X23, [X23+840]
	443 NotImplemented "Instruction LDRH not yet implemented."
	444 Move X1, [X23]
	445 Compare X9, 0
	446 JumpIfEqual {453}
	447 Move X10, [X8+176]
	448 Add X10, X10, 8
	449 NotImplemented "Instruction LDUR not yet implemented."
	450 NotImplemented "Instruction CMP not yet implemented."
	451 Subtract X9, X9, 1
	452 Add X10, X10, 16
	453 Move X0, X20
	454 Move W2, W31
	455 Call 0x1C5D788
	456 Move W8, [X20]
	457 Add W8, W8, 1
	458 Move [X20], W8
	459 Move X0, [X25]
	460 Move W8, [X0+224]
	461 Compare W8, 0
	462 JumpIfNotEqual {464}
	463 Call 0x1C17DFC
	464 Move W8, 56
	465 NotImplemented "Instruction MADD not yet implemented."
	466 Add X9, X9, 81
	467 Move W8, [X9]
	468 Move X26, [X31+16]
	469 And W8, W8, 48
	470 NotImplemented "Instruction CMP not yet implemented."
	471 Move W8, 1
	472 Move [X19+297], W8
	473 Move X0, [X25]
	474 Move [X31+8], X9
	475 Move W8, [X0+224]
	476 Compare W8, 0
	477 JumpIfNotEqual {479}
	478 Call 0x1C17DFC
	479 Move X8, [X26]
	480 Compare X8, 0
	481 JumpIfEqual {1671}
	482 Move W9, 56
	483 NotImplemented "Instruction MADD not yet implemented."
	484 Add X21, X9, 40
	485 Add X20, X9, 44
	486 Move W9, [X20]
	487 Move W10, [X21]
	488 Move W11, [X8+24]
	489 Add W9, W9, W10
	490 Subtract W9, W9, 1
	491 NotImplemented "Instruction CMP not yet implemented."
	492 Add X8, X8, W9
	493 Move W8, [X8+32]
	494 Move [X31+132], W8
	495 Compare W8, 0
	496 JumpIfEqual {710}
	497 Move X0, [X25]
	498 Move W9, [X0+224]
	499 Compare W9, 0
	500 JumpIfNotEqual {503}
	501 Call 0x1C17DFC
	502 Move W8, [X31+132]
	503 Move W9, [X20]
	504 Subtract W9, W9, 1
	505 Multiply W1, W9, W8
	506 Move [X31+128], W1
	507 Move X8, [X19+264]
	508 Move [X31+28], W9
	509 Compare X8, 0
	510 JumpIfEqual {1671}
	511 Move X9, [X8+24]
	512 NotImplemented "Instruction CMP not yet implemented."
	513 Move W25, W31
	514 NotImplemented "Instruction CMP not yet implemented."
	515 Add X10, X8, W25
	516 Move X10, [X10+32]
	517 Compare X10, 0
	518 JumpIfEqual {834}
	519 Move W10, [X10+16]
	520 Compare W10, 0
	521 JumpIfNotEqual {834}
	522 Add W25, W25, 1
	523 NotImplemented "Instruction CMP not yet implemented."
	524 NotImplemented "Instruction LDRSW not yet implemented."
	525 Add X8, X8, X9
	526 Add X0, X8, 312
	527 Move X8, [X0]
	528 Move X1, [X0+8]
	529 Move X0, X20
	530 NotImplemented "Instruction BLR not yet implemented."
	531 NotImplemented "Instruction CMP not yet implemented."
	532 Move X8, [X19+200]
	533 Compare X8, 0
	534 JumpIfEqual {1671}
	535 Move X20, [X8+24]
	536 Move X8, 0xB96000
	537 Move X8, [X8+2760]
	538 Move W1, 10
	539 Move X0, [X8]
	540 Call 0x1C17D6C
	541 Compare X0, 0
	542 JumpIfEqual {1671}
	543 Move W8, [X0+24]
	544 Move X21, X0
	545 Compare W8, 0
	546 JumpIfEqual {1672}
	547 Move X9, [X19+184]
	548 NotImplemented "Instruction CMP not yet implemented."
	549 Move [X21+32], X9
	550 Move X8, 0xBD8000
	551 Move X8, [X8+1608]
	552 Add X0, X31, 140
	553 Move X1, X31
	554 Move X8, [X8]
	555 Move [X21+40], X8
	556 Call Byte.ToString, X0
	557 Move W8, [X21+24]
	558 NotImplemented "Instruction CMP not yet implemented."
	559 NotImplemented "Instruction CMP not yet implemented."
	560 Move [X21+48], X0
	561 Move X8, 0xBD8000
	562 Move X8, [X8+1592]
	563 Move X8, [X8]
	564 Move [X21+56], X8
	565 Move X0, [X25]
	566 Move W8, [X0+224]
	567 Compare W8, 0
	568 JumpIfNotEqual {570}
	569 Call 0x1C17DFC
	570 Move W8, 56
	571 NotImplemented "Instruction MADD not yet implemented."
	572 Move W8, [X8+82]
	573 Add X0, X31, 136
	574 Move X1, X31
	575 Move [X31+136], W8
	576 Call Byte.ToString, X0
	577 Move W8, [X21+24]
	578 NotImplemented "Instruction CMP not yet implemented."
	579 NotImplemented "Instruction CMP not yet implemented."
	580 Move [X21+64], X0
	581 Move X8, 0xBD8000
	582 Move X8, [X8+1832]
	583 Add X0, X19, 224
	584 Move X1, X31
	585 Move X8, [X8]
	586 Move [X21+72], X8
	587 Call Byte.ToString, X0
	588 Move W8, [X21+24]
	589 NotImplemented "Instruction CMP not yet implemented."
	590 NotImplemented "Instruction CMP not yet implemented."
	591 Move [X21+80], X0
	592 Move X8, 0xBD8000
	593 Move X8, [X8+1968]
	594 Add X0, X19, 225
	595 Move X1, X31
	596 Move X8, [X8]
	597 Move [X21+88], X8
	598 Call Byte.ToString, X0
	599 Move W8, [X21+24]
	600 NotImplemented "Instruction CMP not yet implemented."
	601 NotImplemented "Instruction CMP not yet implemented."
	602 Move [X21+96], X0
	603 Move X8, 0xBD8000
	604 Move X8, [X8+1944]
	605 Move X0, X21
	606 Move X1, X31
	607 Move X8, [X8]
	608 Move [X21+104], X8
	609 Call String.Concat, X0
	610 Move X8, 0xB96000
	611 Move X8, [X8+2504]
	612 Move X21, X0
	613 Move X22, [X8]
	614 Move X8, [X22+56]
	615 Compare X8, 0
	616 JumpIfNotEqual {620}
	617 Move X0, X22
	618 Call 0x1C5D6E0
	619 Move X8, [X22+56]
	620 Move X0, [X8+16]
	621 Move W8, [X0+309]
	622 Move TEMP, X8
	623 And TEMP, TEMP, 1
	624 Compare TEMP, 1
	625 JumpIfEqual {627}
	626 Call 0x1C5D684
	627 Move W8, [X0+224]
	628 Compare W8, 0
	629 JumpIfNotEqual {631}
	630 Call 0x1C17DFC
	631 Move X8, [X22+56]
	632 Move X0, [X8+16]
	633 Move W8, [X0+309]
	634 Move TEMP, X8
	635 And TEMP, TEMP, 1
	636 Compare TEMP, 1
	637 JumpIfEqual {639}
	638 Call 0x1C5D684
	639 Compare X20, 0
	640 JumpIfEqual {1671}
	641 Move X9, [X0+184]
	642 Move X8, [X20]
	643 Move X1, [X23]
	644 Move X22, [X9]
	645 NotImplemented "Instruction LDRH not yet implemented."
	646 Compare X9, 0
	647 JumpIfEqual {654}
	648 Move X10, [X8+176]
	649 Add X10, X10, 8
	650 NotImplemented "Instruction LDUR not yet implemented."
	651 NotImplemented "Instruction CMP not yet implemented."
	652 Subtract X9, X9, 1
	653 Add X10, X10, 16
	654 Move W2, 1
	655 Move X0, X20
	656 Call 0x1C5D788
	657 Move X20, [X19+72]
	658 Compare X20, 0
	659 JumpIfEqual {1671}
	660 Move X8, [X20]
	661 Move X10, 0xBD8000
	662 NotImplemented "Instruction LDRH not yet implemented."
	663 Move X10, [X10+1128]
	664 Move X1, [X10]
	665 Compare X9, 0
	666 JumpIfEqual {673}
	667 Move X10, [X8+176]
	668 Add X10, X10, 8
	669 NotImplemented "Instruction LDUR not yet implemented."
	670 NotImplemented "Instruction CMP not yet implemented."
	671 Subtract X9, X9, 1
	672 Add X10, X10, 16
	673 Move W2, 2
	674 Move X0, X20
	675 Call 0x1C5D788
	676 Move X8, [X19+200]
	677 Compare X8, 0
	678 JumpIfEqual {1671}
	679 Move W9, [X8+36]
	680 Add W9, W9, 1
	681 Move [X8+36], W9
	682 Move W9, [X10]
	683 Add W9, W9, 1
	684 Add X8, X8, W9
	685 Add X0, X8, 312
	686 Move X8, [X0]
	687 Move X4, [X0+8]
	688 Move W1, 5
	689 Move X0, X20
	690 Move X2, X21
	691 Move X3, X22
	692 NotImplemented "Instruction BLR not yet implemented."
	693 Move X8, [X19+216]
	694 Compare X8, 0
	695 JumpIfEqual {1671}
	696 Move W9, [X31+140]
	697 Move W10, [X8+24]
	698 NotImplemented "Instruction CMP not yet implemented."
	699 Add X8, X8, X9
	700 Add X0, X8, 32
	701 Move W1, W31
	702 Move X2, X31
	703 Call Interlocked.Exchange, X0, X1
	704 Move X8, [X19+200]
	705 Compare X8, 0
	706 JumpIfEqual {1671}
	707 Move W9, [X8+36]
	708 Add W9, W9, 1
	709 Move [X8+36], W9
	710 Move X8, [X19+200]
	711 Compare X8, 0
	712 JumpIfEqual {1671}
	713 Move X20, [X8+24]
	714 Move X8, 0xB96000
	715 Move X8, [X8+2760]
	716 Move W1, 8
	717 Move X0, [X8]
	718 Call 0x1C17D6C
	719 Compare X0, 0
	720 JumpIfEqual {1671}
	721 Move W8, [X0+24]
	722 Move X21, X0
	723 Compare W8, 0
	724 JumpIfEqual {1672}
	725 Move X9, [X19+184]
	726 NotImplemented "Instruction CMP not yet implemented."
	727 Move [X21+32], X9
	728 Move X8, 0xBD8000
	729 Move X8, [X8+1608]
	730 Add X0, X31, 140
	731 Move X1, X31
	732 Move X8, [X8]
	733 Move [X21+40], X8
	734 Call Byte.ToString, X0
	735 Move W8, [X21+24]
	736 NotImplemented "Instruction CMP not yet implemented."
	737 NotImplemented "Instruction CMP not yet implemented."
	738 Move [X21+48], X0
	739 Move X8, 0xBD8000
	740 Move X8, [X8+1592]
	741 Move X8, [X8]
	742 Move [X21+56], X8
	743 Move X0, [X25]
	744 Move W8, [X0+224]
	745 Compare W8, 0
	746 JumpIfNotEqual {748}
	747 Call 0x1C17DFC
	748 Move W8, [X29]
	749 Add X0, X31, 136
	750 Move X1, X31
	751 Move [X31+136], W8
	752 Call Byte.ToString, X0
	753 Move W8, [X21+24]
	754 NotImplemented "Instruction CMP not yet implemented."
	755 NotImplemented "Instruction CMP not yet implemented."
	756 Move [X21+64], X0
	757 Move X8, 0xBD8000
	758 Move X8, [X8+1016]
	759 Add X0, X31, 132
	760 Move X1, X31
	761 Move X8, [X8]
	762 Move [X21+72], X8
	763 Call Byte.ToString, X0
	764 Move W8, [X21+24]
	765 NotImplemented "Instruction CMP not yet implemented."
	766 NotImplemented "Instruction CMP not yet implemented."
	767 Move [X21+80], X0
	768 Move X8, 0xBD8000
	769 Move X8, [X8+1896]
	770 Move X0, X21
	771 Move X1, X31
	772 Move X8, [X8]
	773 Move [X21+88], X8
	774 Call String.Concat, X0
	775 Move X8, 0xB96000
	776 Move X8, [X8+2504]
	777 Move X21, X0
	778 Move X22, [X8]
	779 Move X8, [X22+56]
	780 Compare X8, 0
	781 JumpIfNotEqual {785}
	782 Move X0, X22
	783 Call 0x1C5D6E0
	784 Move X8, [X22+56]
	785 Move X0, [X8+16]
	786 Move W8, [X0+309]
	787 Move TEMP, X8
	788 And TEMP, TEMP, 1
	789 Compare TEMP, 1
	790 JumpIfEqual {792}
	791 Call 0x1C5D684
	792 Move W8, [X0+224]
	793 Compare W8, 0
	794 JumpIfNotEqual {796}
	795 Call 0x1C17DFC
	796 Move X8, [X22+56]
	797 Move X0, [X8+16]
	798 Move W8, [X0+309]
	799 Move TEMP, X8
	800 And TEMP, TEMP, 1
	801 Compare TEMP, 1
	802 JumpIfEqual {804}
	803 Call 0x1C5D684
	804 Compare X20, 0
	805 JumpIfEqual {1671}
	806 Move X9, [X0+184]
	807 Move X8, [X20]
	808 Move X10, 0xB9B000
	809 Move X22, [X9]
	810 NotImplemented "Instruction LDRH not yet implemented."
	811 Move X10, [X10+840]
	812 Move X1, [X10]
	813 Compare X9, 0
	814 JumpIfEqual {821}
	815 Move X10, [X8+176]
	816 Add X10, X10, 8
	817 NotImplemented "Instruction LDUR not yet implemented."
	818 NotImplemented "Instruction CMP not yet implemented."
	819 Subtract X9, X9, 1
	820 Add X10, X10, 16
	821 Move W2, 1
	822 Move X0, X20
	823 Call 0x1C5D788
	824 Move W9, [X10]
	825 Add W9, W9, 2
	826 Add X8, X8, W9
	827 Add X0, X8, 312
	828 Move X8, [X0]
	829 Move X2, [X0+8]
	830 Move X0, X20
	831 Move X1, X26
	832 NotImplemented "Instruction BLR not yet implemented."
	833 Move W25, W31
	834 NotImplemented "Instruction CMP not yet implemented."
	835 Move X8, [X19+200]
	836 Compare X8, 0
	837 JumpIfEqual {1671}
	838 Move X22, [X8+24]
	839 Move X23, [X19+184]
	840 Add X0, X31, 128
	841 Move X1, X31
	842 Call Int32.ToString, X0
	843 Move X8, 0xBD8000
	844 Move X9, 0xBD8000
	845 Move X8, [X8+1928]
	846 Move X9, [X9+1888]
	847 Move X2, X0
	848 Move X0, X23
	849 Move X1, [X8]
	850 Move X3, [X9]
	851 Move X4, X31
	852 Call String.Concat, X0, X1, X2, X3
	853 Move X8, 0xB96000
	854 Move X8, [X8+2504]
	855 Move X23, X0
	856 Move X24, [X8]
	857 Move X8, [X24+56]
	858 Compare X8, 0
	859 JumpIfNotEqual {863}
	860 Move X0, X24
	861 Call 0x1C5D6E0
	862 Move X8, [X24+56]
	863 Move X0, [X8+16]
	864 Move W8, [X0+309]
	865 Move TEMP, X8
	866 And TEMP, TEMP, 1
	867 Compare TEMP, 1
	868 JumpIfEqual {870}
	869 Call 0x1C5D684
	870 Move W8, [X0+224]
	871 Compare W8, 0
	872 JumpIfNotEqual {874}
	873 Call 0x1C17DFC
	874 Move X8, [X24+56]
	875 Move X0, [X8+16]
	876 Move W8, [X0+309]
	877 Move TEMP, X8
	878 And TEMP, TEMP, 1
	879 Compare TEMP, 1
	880 JumpIfEqual {882}
	881 Call 0x1C5D684
	882 Compare X22, 0
	883 JumpIfEqual {1671}
	884 Move X9, [X0+184]
	885 Move X8, [X22]
	886 Move X10, 0xB9B000
	887 Move X24, [X9]
	888 NotImplemented "Instruction LDRH not yet implemented."
	889 Move X10, [X10+840]
	890 Move X1, [X10]
	891 Compare X9, 0
	892 JumpIfEqual {899}
	893 Move X10, [X8+176]
	894 Add X10, X10, 8
	895 NotImplemented "Instruction LDUR not yet implemented."
	896 NotImplemented "Instruction CMP not yet implemented."
	897 Subtract X9, X9, 1
	898 Add X10, X10, 16
	899 Move W2, 1
	900 Move X0, X22
	901 Call 0x1C5D788
	902 Add X8, X8, W25
	903 Move X8, [X8+32]
	904 Compare X8, 0
	905 JumpIfEqual {960}
	906 Move X20, [X8+24]
	907 Compare X20, 0
	908 JumpIfEqual {1671}
	909 Move W8, [X20+24]
	910 NotImplemented "Instruction CMP not yet implemented."
	911 Move W9, [X10]
	912 Add W9, W9, 1
	913 Add X8, X8, W9
	914 Add X0, X8, 312
	915 Move X8, [X0]
	916 Move X4, [X0+8]
	917 Move W1, 2
	918 Move X0, X20
	919 Move X2, X21
	920 Move X3, X22
	921 NotImplemented "Instruction BLR not yet implemented."
	922 Move X8, [X19+216]
	923 Compare X8, 0
	924 JumpIfEqual {1671}
	925 Move W9, [X31+140]
	926 Move W10, [X8+24]
	927 NotImplemented "Instruction CMP not yet implemented."
	928 Add X8, X8, X9
	929 Add X0, X8, 32
	930 Move W1, W31
	931 Move X2, X31
	932 Call Interlocked.Exchange, X0, X1
	933 Move W0, 1
	934 Move X20, [X31+224]
	935 Move X19, [X31+232]
	936 Move X22, [X31+208]
	937 Move X21, [X31+216]
	938 Move X24, [X31+192]
	939 Move X23, [X31+200]
	940 Move X26, [X31+176]
	941 Move X25, [X31+184]
	942 Move X28, [X31+160]
	943 Move X27, [X31+168]
	944 Move X29, [X31+144]
	945 Move X30, [X31+152]
	946 Add X31, X31, 240
	947 Return X0
	948 Move W9, [X10]
	949 Add W9, W9, 1
	950 Add X8, X8, W9
	951 Add X0, X8, 312
	952 Move X8, [X0]
	953 Move X4, [X0+8]
	954 Move W1, 1
	955 Move X0, X22
	956 Move X2, X23
	957 Move X3, X24
	958 NotImplemented "Instruction BLR not yet implemented."
	959 Move W1, [X31+128]
	960 Move X8, 0xB96000
	961 Move X8, [X8+1560]
	962 Move X0, [X8]
	963 Call 0x1C17D6C
	964 Move X20, X0
	965 Move X8, 0xBBF000
	966 Move X8, [X8+3608]
	967 Move X0, [X8]
	968 Move W8, [X0+224]
	969 Compare W8, 0
	970 JumpIfNotEqual {972}
	971 Call 0x1C17DFC
	972 Move X0, [X26]
	973 Move W1, [X21]
	974 Move W4, [X31+28]
	975 Move X2, X20
	976 Move W3, W31
	977 Move X5, X31
	978 Call Array.Copy, X0, X1, X2, X3, X4
	979 Move X8, [X19+216]
	980 Compare X8, 0
	981 JumpIfEqual {1671}
	982 Move W9, [X31+140]
	983 Move W10, [X8+24]
	984 Move [X31+16], X20
	985 NotImplemented "Instruction CMP not yet implemented."
	986 Add X8, X8, X9
	987 Add X0, X8, 32
	988 Move W1, W31
	989 Move X2, X31
	990 Call Interlocked.Exchange, X0, X1
	991 Move W8, [X31+140]
	992 Move W9, [X31+132]
	993 Move W10, [X31+28]
	994 Move W24, W31
	995 Add W8, W8, 1
	996 NotImplemented "Instruction CMP not yet implemented."
	997 Move [X31+124], W10
	998 Move [X31+60], W8
	999 Move W24, W31
	1000 Move W28, 1
	1001 Move W27, 56
	1002 Move X8, [X19+200]
	1003 Compare X8, 0
	1004 JumpIfEqual {1671}
	1005 Move W9, [X8+68]
	1006 Add W9, W9, 1
	1007 Move [X8+68], W9
	1008 Move X8, [X19+216]
	1009 Compare X8, 0
	1010 JumpIfEqual {1671}
	1011 Move W9, [X31+60]
	1012 Move W10, [X8+24]
	1013 NotImplemented "Instruction CMP not yet implemented."
	1014 Add X8, X8, X9
	1015 Add X0, X8, 32
	1016 Move W1, 1
	1017 Move X2, X31
	1018 Call Interlocked.Exchange, X0, X1
	1019 NotImplemented "Instruction CMP not yet implemented."
	1020 Move X26, [X19+208]
	1021 Compare X26, 0
	1022 JumpIfEqual {1671}
	1023 Move W22, [X31+60]
	1024 Move W8, [X26+24]
	1025 NotImplemented "Instruction CMP not yet implemented."
	1026 Move X8, 0xBBF000
	1027 Move X8, [X8+3608]
	1028 Move X0, [X8]
	1029 Move W8, [X0+224]
	1030 Compare W8, 0
	1031 JumpIfNotEqual {1033}
	1032 Call 0x1C17DFC
	1033 NotImplemented "Instruction MADD not yet implemented."
	1034 Add X21, X8, 32
	1035 Move X8, [X21]
	1036 Compare X8, 0
	1037 JumpIfNotEqual {1044}
	1038 Move W8, [X19+296]
	1039 NotImplemented "Instruction CMP not yet implemented."
	1040 Move W1, [X31+60]
	1041 Move X0, X19
	1042 Move X2, X21
	1043 Call RemoteVoice.processLostEvent, X0, X1, X2
	1044 Move X8, 0xBBF000
	1045 Move X8, [X8+3608]
	1046 Move X0, [X8]
	1047 Move W8, [X0+224]
	1048 Compare W8, 0
	1049 JumpIfNotEqual {1051}
	1050 Call 0x1C17DFC
	1051 NotImplemented "Instruction MADD not yet implemented."
	1052 Add X20, X20, 82
	1053 Move W8, [X20]
	1054 Move W9, [X29]
	1055 NotImplemented "Instruction CMP not yet implemented."
	1056 Move X8, 0xBBF000
	1057 Move X8, [X8+3608]
	1058 Move X0, [X8]
	1059 Move W8, [X0+224]
	1060 Compare W8, 0
	1061 JumpIfNotEqual {1063}
	1062 Call 0x1C17DFC
	1063 NotImplemented "Instruction MADD not yet implemented."
	1064 Move W8, [X8+81]
	1065 Move TEMP, X8
	1066 And TEMP, TEMP, 16
	1067 Compare TEMP, 16
	1068 JumpIfEqual {1100}
	1069 Move W23, [X31+28]
	1070 Move W1, [X31+124]
	1071 Move X0, [X31+16]
	1072 Move X3, X31
	1073 Move W2, W23
	1074 Call Array.Clear, X0, X1, X2
	1075 Move W8, [X31+124]
	1076 Add W8, W8, W23
	1077 Move [X31+124], W8
	1078 Move X8, [X19+200]
	1079 Compare X8, 0
	1080 JumpIfEqual {1671}
	1081 Move X23, [X8+24]
	1082 Compare X23, 0
	1083 JumpIfEqual {1671}
	1084 Move X8, [X23]
	1085 Move X10, 0xB9B000
	1086 NotImplemented "Instruction LDRH not yet implemented."
	1087 Move X10, [X10+840]
	1088 Move X1, [X10]
	1089 Compare X9, 0
	1090 JumpIfEqual {1097}
	1091 Move X10, [X8+176]
	1092 Add X10, X10, 8
	1093 NotImplemented "Instruction LDUR not yet implemented."
	1094 NotImplemented "Instruction CMP not yet implemented."
	1095 Subtract X9, X9, 1
	1096 Add X10, X10, 16
	1097 Move X0, X23
	1098 Move W2, W31
	1099 Call 0x1C5D788
	1100 Move X8, 0xBBF000
	1101 Move X8, [X8+3608]
	1102 Move X0, [X8]
	1103 Move W8, [X0+224]
	1104 Compare W8, 0
	1105 JumpIfNotEqual {1107}
	1106 Call 0x1C17DFC
	1107 NotImplemented "Instruction MADD not yet implemented."
	1108 Add X20, X20, 44
	1109 Move W8, [X20]
	1110 Move W23, [X31+28]
	1111 NotImplemented "Instruction CMP not yet implemented."
	1112 Move X9, 0xBBF000
	1113 Move X9, [X9+3608]
	1114 Move W23, W8
	1115 Move X0, [X9]
	1116 Move W9, [X0+224]
	1117 Compare W9, 0
	1118 JumpIfNotEqual {1121}
	1119 Call 0x1C17DFC
	1120 Move W23, [X20]
	1121 Move X8, 0xBBF000
	1122 Move X8, [X8+3608]
	1123 Move X0, [X8]
	1124 Move W8, [X0+224]
	1125 Compare W8, 0
	1126 JumpIfNotEqual {1128}
	1127 Call 0x1C17DFC
	1128 NotImplemented "Instruction MADD not yet implemented."
	1129 Move X0, [X21]
	1130 Move W1, [X8+40]
	1131 Move W3, [X31+124]
	1132 Move X2, [X31+16]
	1133 Move W4, W23
	1134 Move X5, X31
	1135 Call Array.Copy, X0, X1, X2, X3, X4
	1136 Move W8, [X31+124]
	1137 Add W8, W8, W23
	1138 Move [X31+124], W8
	1139 NotImplemented "Instruction LDRSW not yet implemented."
	1140 Add X8, X8, X9
	1141 Add X0, X8, 312
	1142 Move X8, [X0]
	1143 Move X1, [X0+8]
	1144 Move X0, X23
	1145 NotImplemented "Instruction BLR not yet implemented."
	1146 NotImplemented "Instruction CMP not yet implemented."
	1147 Move X8, [X19+200]
	1148 Compare X8, 0
	1149 JumpIfEqual {1671}
	1150 Move X23, [X8+24]
	1151 Move X8, 0xB96000
	1152 Move X8, [X8+2760]
	1153 Move W1, 14
	1154 Move X0, [X8]
	1155 Call 0x1C17D6C
	1156 Compare X0, 0
	1157 JumpIfEqual {1671}
	1158 Move W8, [X0+24]
	1159 Move X24, X0
	1160 Compare W8, 0
	1161 JumpIfEqual {1672}
	1162 Move X9, [X19+184]
	1163 NotImplemented "Instruction CMP not yet implemented."
	1164 Move [X24+32], X9
	1165 Move X8, 0xBD8000
	1166 Move X8, [X8+1608]
	1167 Add X0, X31, 140
	1168 Move X1, X31
	1169 Move X8, [X8]
	1170 Move [X24+40], X8
	1171 Call Byte.ToString, X0
	1172 Move W8, [X24+24]
	1173 NotImplemented "Instruction CMP not yet implemented."
	1174 NotImplemented "Instruction CMP not yet implemented."
	1175 Move [X24+48], X0
	1176 Move X8, 0xBD8000
	1177 Move X8, [X8+1592]
	1178 Move X8, [X8]
	1179 Move [X24+56], X8
	1180 Move X8, 0xBBF000
	1181 Move X8, [X8+3608]
	1182 Move X0, [X8]
	1183 Move W8, [X0+224]
	1184 Compare W8, 0
	1185 JumpIfNotEqual {1187}
	1186 Call 0x1C17DFC
	1187 Move W8, [X29]
	1188 Add X0, X31, 136
	1189 Move X1, X31
	1190 Move [X31+136], W8
	1191 Call Byte.ToString, X0
	1192 Move W8, [X24+24]
	1193 NotImplemented "Instruction CMP not yet implemented."
	1194 NotImplemented "Instruction CMP not yet implemented."
	1195 Move [X24+64], X0
	1196 Move X8, 0xBD8000
	1197 Move X8, [X8+1016]
	1198 Add X0, X31, 132
	1199 Move X1, X31
	1200 Move X8, [X8]
	1201 Move [X24+72], X8
	1202 Call Byte.ToString, X0
	1203 Move W8, [X24+24]
	1204 NotImplemented "Instruction CMP not yet implemented."
	1205 NotImplemented "Instruction CMP not yet implemented."
	1206 Move [X24+80], X0
	1207 Move X8, 0xBD8000
	1208 Move X8, [X8+1912]
	1209 Add X0, X31, 60
	1210 Move X1, X31
	1211 Move X8, [X8]
	1212 Move [X24+88], X8
	1213 Call Byte.ToString, X0
	1214 Move W8, [X24+24]
	1215 NotImplemented "Instruction CMP not yet implemented."
	1216 NotImplemented "Instruction CMP not yet implemented."
	1217 Move [X24+96], X0
	1218 Move X8, 0xBD8000
	1219 Move X8, [X8+1592]
	1220 Add X0, X31, 136
	1221 Move X1, X31
	1222 Move X8, [X8]
	1223 Move [X24+104], X8
	1224 Move W8, [X20]
	1225 Move [X31+136], W8
	1226 Call Byte.ToString, X0
	1227 Move W8, [X24+24]
	1228 NotImplemented "Instruction CMP not yet implemented."
	1229 NotImplemented "Instruction CMP not yet implemented."
	1230 Move [X24+112], X0
	1231 Move X8, 0xBD8000
	1232 Move X8, [X8+1936]
	1233 NotImplemented "Instruction NOP not yet implemented."
	1234 NotImplemented "Instruction MADD not yet implemented."
	1235 Add X0, X31, 32
	1236 Move X1, X31
	1237 Move X8, [X8]
	1238 Move [X24+120], X8
	1239 Move X8, 0xBD8000
	1240 Move X8, [X8+1000]
	1241 Move W9, [X9+81]
	1242 Move X10, [X8]
	1243 Move TEMP, 0
	1244 Not TEMP
	1245 Move X8, TEMP
	1246 Move [X31+48], W9
	1247 Move [X31+32], X10
	1248 Move [X31+40], X8
	1249 Call Enum.ToString, X0
	1250 Move W8, [X24+24]
	1251 NotImplemented "Instruction CMP not yet implemented."
	1252 NotImplemented "Instruction CMP not yet implemented."
	1253 Move [X24+128], X0
	1254 Move X8, [X21]
	1255 Move X9, 0xB96000
	1256 Move X0, X24
	1257 Move X1, X31
	1258 NotImplemented "Instruction CMP not yet implemented."
	1259 Move X8, 0xBD8000
	1260 Move X8, [X8+1920]
	1261 Move X9, [X9+2440]
	1262 NotImplemented "Instruction CSEL not yet implemented."
	1263 Move X8, [X8]
	1264 Move [X24+136], X8
	1265 Call String.Concat, X0
	1266 Move X8, 0xB96000
	1267 Move X8, [X8+2504]
	1268 Move X21, X0
	1269 Move X24, [X8]
	1270 Move X8, [X24+56]
	1271 Compare X8, 0
	1272 JumpIfNotEqual {1276}
	1273 Move X0, X24
	1274 Call 0x1C5D6E0
	1275 Move X8, [X24+56]
	1276 Move X0, [X8+16]
	1277 Move W8, [X0+309]
	1278 Move TEMP, X8
	1279 And TEMP, TEMP, 1
	1280 Compare TEMP, 1
	1281 JumpIfEqual {1283}
	1282 Call 0x1C5D684
	1283 Move W8, [X0+224]
	1284 Compare W8, 0
	1285 JumpIfNotEqual {1287}
	1286 Call 0x1C17DFC
	1287 Move X8, [X24+56]
	1288 Move X0, [X8+16]
	1289 Move W8, [X0+309]
	1290 Move TEMP, X8
	1291 And TEMP, TEMP, 1
	1292 Compare TEMP, 1
	1293 JumpIfEqual {1295}
	1294 Call 0x1C5D684
	1295 Compare X23, 0
	1296 JumpIfEqual {1671}
	1297 Move X9, [X0+184]
	1298 Move X8, [X23]
	1299 Move X10, 0xB9B000
	1300 Move X24, [X9]
	1301 NotImplemented "Instruction LDRH not yet implemented."
	1302 Move X10, [X10+840]
	1303 Move X1, [X10]
	1304 Compare X9, 0
	1305 JumpIfEqual {1312}
	1306 Move X10, [X8+176]
	1307 Add X10, X10, 8
	1308 NotImplemented "Instruction LDUR not yet implemented."
	1309 NotImplemented "Instruction CMP not yet implemented."
	1310 Subtract X9, X9, 1
	1311 Add X10, X10, 16
	1312 Move W2, 1
	1313 Move X0, X23
	1314 Call 0x1C5D788
	1315 Move W9, [X10]
	1316 Add W9, W9, 1
	1317 Add X8, X8, W9
	1318 Add X0, X8, 312
	1319 Move X8, [X0]
	1320 Move X4, [X0+8]
	1321 Move W1, 5
	1322 Move X0, X23
	1323 Move X2, X21
	1324 Move X3, X24
	1325 NotImplemented "Instruction BLR not yet implemented."
	1326 Move W24, 1
	1327 Move X8, [X19+216]
	1328 Compare X8, 0
	1329 JumpIfEqual {1671}
	1330 Move W9, [X31+60]
	1331 Move W10, [X8+24]
	1332 NotImplemented "Instruction CMP not yet implemented."
	1333 Add X8, X8, X9
	1334 Add X0, X8, 32
	1335 Move W1, W31
	1336 Move X2, X31
	1337 Call Interlocked.Exchange, X0, X1
	1338 Move W8, [X31+60]
	1339 Move W9, [X31+132]
	1340 Add W10, W28, 1
	1341 And W28, W10, 255
	1342 Add W8, W8, 1
	1343 NotImplemented "Instruction CMP not yet implemented."
	1344 Move [X31+60], W8
	1345 Move X21, [X19+264]
	1346 Compare X21, 0
	1347 JumpIfEqual {1671}
	1348 Move W8, [X21+24]
	1349 Move X26, [X31+16]
	1350 NotImplemented "Instruction CMP not yet implemented."
	1351 Move X23, 0xBBF000
	1352 Move X23, [X23+3608]
	1353 Move X20, X31
	1354 NotImplemented "Instruction CMP not yet implemented."
	1355 Move X22, W25
	1356 Add X23, X21, X22
	1357 Add X23, X23, 32
	1358 Move X8, [X23]
	1359 Compare X8, 0
	1360 JumpIfNotEqual {1382}
	1361 Move X8, 0xBD8000
	1362 Move X8, [X8+1880]
	1363 Move X0, [X8]
	1364 Call 0x1C17F10
	1365 Move X1, X31
	1366 Move X20, X0
	1367 Call Object..ctor, X0
	1368 Compare X20, 0
	1369 JumpIfEqual {1376}
	1370 Move X8, [X21]
	1371 Move X0, X20
	1372 Move X1, [X8+64]
	1373 Call 0x1C17E00
	1374 Compare X0, 0
	1375 JumpIfEqual {1673}
	1376 Move W8, [X21+24]
	1377 NotImplemented "Instruction CMP not yet implemented."
	1378 Move [X23], X20
	1379 Move X21, [X19+264]
	1380 Compare X21, 0
	1381 JumpIfEqual {1671}
	1382 Move W8, [X21+24]
	1383 NotImplemented "Instruction CMP not yet implemented."
	1384 Add X8, X21, X22
	1385 Move X23, 0xBBF000
	1386 Add X8, X8, 32
	1387 Move X9, [X8]
	1388 Move X23, [X23+3608]
	1389 Compare X9, 0
	1390 JumpIfEqual {1671}
	1391 Move [X9+24], X26
	1392 Move [X9+16], W31
	1393 Move X20, [X8]
	1394 Move X0, [X23]
	1395 Move W21, [X31+124]
	1396 Move W8, [X0+224]
	1397 Compare W8, 0
	1398 JumpIfNotEqual {1400}
	1399 Call 0x1C17DFC
	1400 Move X8, [X31+8]
	1401 Move W9, [X29]
	1402 Move W10, 1
	1403 Move W8, [X8]
	1404 Move [X31+64], X26
	1405 Move [X31+72], W31
	1406 Move [X31+76], W21
	1407 Move [X31+80], X20
	1408 Move [X31+88], W31
	1409 Move [X31+96], X31
	1410 Move [X31+104], X31
	1411 Move [X31+92], W10
	1412 Move [X31+113], W8
	1413 Move [X31+114], W9
	1414 Move [X31+112], W31
	1415 Move X8, [X19+200]
	1416 Compare X8, 0
	1417 JumpIfEqual {1671}
	1418 Move W9, [X8+72]
	1419 Add W9, W9, 1
	1420 Move [X8+72], W9
	1421 Move TEMP, X24
	1422 And TEMP, TEMP, 1
	1423 Compare TEMP, 1
	1424 JumpIfNotEqual {1428}
	1425 Move W9, [X8+44]
	1426 Add W9, W9, 1
	1427 Move [X8+44], W9
	1428 Move X20, [X8+24]
	1429 Compare X20, 0
	1430 JumpIfEqual {1671}
	1431 Move X8, [X20]
	1432 Move X10, 0xB9B000
	1433 NotImplemented "Instruction LDRH not yet implemented."
	1434 Move X10, [X10+840]
	1435 Move X1, [X10]
	1436 Compare X9, 0
	1437 JumpIfEqual {1444}
	1438 Move X10, [X8+176]
	1439 Add X10, X10, 8
	1440 NotImplemented "Instruction LDUR not yet implemented."
	1441 NotImplemented "Instruction CMP not yet implemented."
	1442 Subtract X9, X9, 1
	1443 Add X10, X10, 16
	1444 Move X0, X20
	1445 Move W2, W31
	1446 Call 0x1C5D788
	1447 NotImplemented "Instruction LDRSW not yet implemented."
	1448 Add X8, X8, X9
	1449 Add X0, X8, 312
	1450 Move X8, [X0]
	1451 Move X1, [X0+8]
	1452 Move X0, X20
	1453 NotImplemented "Instruction BLR not yet implemented."
	1454 NotImplemented "Instruction CMP not yet implemented."
	1455 Move X8, [X19+200]
	1456 Compare X8, 0
	1457 JumpIfEqual {1671}
	1458 Move X20, [X8+24]
	1459 Move X8, 0xB96000
	1460 Move X8, [X8+2760]
	1461 Move W1, 15
	1462 Move X0, [X8]
	1463 Call 0x1C17D6C
	1464 Compare X0, 0
	1465 JumpIfEqual {1671}
	1466 Move W8, [X0+24]
	1467 Move X21, X0
	1468 Compare W8, 0
	1469 JumpIfEqual {1672}
	1470 Move X9, [X19+184]
	1471 NotImplemented "Instruction CMP not yet implemented."
	1472 Move [X21+32], X9
	1473 Move X8, 0xBD8000
	1474 Move X8, [X8+1904]
	1475 Add X0, X31, 140
	1476 Move X1, X31
	1477 Move X8, [X8]
	1478 Move [X21+40], X8
	1479 Call Byte.ToString, X0
	1480 Move W8, [X21+24]
	1481 NotImplemented "Instruction CMP not yet implemented."
	1482 NotImplemented "Instruction CMP not yet implemented."
	1483 Move [X21+48], X0
	1484 Move X8, 0xBD8000
	1485 Move X8, [X8+1592]
	1486 Move X8, [X8]
	1487 Move [X21+56], X8
	1488 Move X0, [X23]
	1489 Move W8, [X0+224]
	1490 Compare W8, 0
	1491 JumpIfNotEqual {1493}
	1492 Call 0x1C17DFC
	1493 Move W8, [X31+114]
	1494 Add X0, X31, 136
	1495 Move X1, X31
	1496 Move [X31+136], W8
	1497 Call Byte.ToString, X0
	1498 Move W8, [X21+24]
	1499 NotImplemented "Instruction CMP not yet implemented."
	1500 NotImplemented "Instruction CMP not yet implemented."
	1501 Move [X21+64], X0
	1502 Move X8, 0xBD7000
	1503 Move X8, [X8+1016]
	1504 Add X0, X31, 132
	1505 Move X1, X31
	1506 Move X8, [X8]
	1507 Move [X21+72], X8
	1508 Call Byte.ToString, X0
	1509 Move W8, [X21+24]
	1510 NotImplemented "Instruction CMP not yet implemented."
	1511 NotImplemented "Instruction CMP not yet implemented."
	1512 Move [X21+80], X0
	1513 Move X8, 0xBD7000
	1514 Move X8, [X8+1952]
	1515 Add X0, X31, 140
	1516 Move X1, X31
	1517 Move X8, [X8]
	1518 Move [X21+88], X8
	1519 Call Byte.ToString, X0
	1520 Move W8, [X21+24]
	1521 NotImplemented "Instruction CMP not yet implemented."
	1522 NotImplemented "Instruction CMP not yet implemented."
	1523 Move [X21+96], X0
	1524 Move X8, 0xB96000
	1525 Move X8, [X8+680]
	1526 Add X0, X31, 136
	1527 Move X1, X31
	1528 Move X8, [X8]
	1529 Move [X21+104], X8
	1530 Move W8, [X31+140]
	1531 Move W9, [X31+132]
	1532 Add W8, W8, W9
	1533 Subtract W8, W8, 1
	1534 Move [X31+136], W8
	1535 Call Byte.ToString, X0
	1536 Move W8, [X21+24]
	1537 NotImplemented "Instruction CMP not yet implemented."
	1538 NotImplemented "Instruction CMP not yet implemented."
	1539 Move [X21+112], X0
	1540 Move X8, 0xBD7000
	1541 Move X8, [X8+1624]
	1542 Add X0, X31, 124
	1543 Move X1, X31
	1544 Move X8, [X8]
	1545 Move [X21+120], X8
	1546 Call Int32.ToString, X0
	1547 Move W8, [X21+24]
	1548 NotImplemented "Instruction CMP not yet implemented."
	1549 NotImplemented "Instruction CMP not yet implemented."
	1550 Move [X21+128], X0
	1551 Move X8, 0xBD7000
	1552 Move X8, [X8+1616]
	1553 Move X9, 0xBD7000
	1554 Move TEMP, 0
	1555 Not TEMP
	1556 Move X10, TEMP
	1557 Add X0, X31, 32
	1558 Move X8, [X8]
	1559 Move X9, [X9+1000]
	1560 Move X1, X31
	1561 Move [X21+136], X8
	1562 Move X8, [X9]
	1563 Move X9, [X31+8]
	1564 Move W9, [X9]
	1565 Move [X31+32], X8
	1566 Move [X31+40], X10
	1567 Move [X31+48], W9
	1568 Call Enum.ToString, X0
	1569 Move W8, [X21+24]
	1570 NotImplemented "Instruction CMP not yet implemented."
	1571 Move [X21+144], X0
	1572 Move X0, X21
	1573 Move X1, X31
	1574 Call String.Concat, X0
	1575 Move X8, 0xB95000
	1576 Move X8, [X8+2504]
	1577 Move X21, X0
	1578 Move X22, [X8]
	1579 Move X8, [X22+56]
	1580 Compare X8, 0
	1581 JumpIfNotEqual {1585}
	1582 Move X0, X22
	1583 Call 0x1C5D6E0
	1584 Move X8, [X22+56]
	1585 Move X0, [X8+16]
	1586 Move W8, [X0+309]
	1587 Move TEMP, X8
	1588 And TEMP, TEMP, 1
	1589 Compare TEMP, 1
	1590 JumpIfEqual {1592}
	1591 Call 0x1C5D684
	1592 Move W8, [X0+224]
	1593 Compare W8, 0
	1594 JumpIfNotEqual {1596}
	1595 Call 0x1C17DFC
	1596 Move X8, [X22+56]
	1597 Move X0, [X8+16]
	1598 Move W8, [X0+309]
	1599 Move TEMP, X8
	1600 And TEMP, TEMP, 1
	1601 Compare TEMP, 1
	1602 JumpIfEqual {1604}
	1603 Call 0x1C5D684
	1604 Compare X20, 0
	1605 JumpIfEqual {1671}
	1606 Move X9, [X0+184]
	1607 Move X8, [X20]
	1608 Move X10, 0xB9A000
	1609 Move X22, [X9]
	1610 NotImplemented "Instruction LDRH not yet implemented."
	1611 Move X10, [X10+840]
	1612 Move X1, [X10]
	1613 Compare X9, 0
	1614 JumpIfEqual {1621}
	1615 Move X10, [X8+176]
	1616 Add X10, X10, 8
	1617 NotImplemented "Instruction LDUR not yet implemented."
	1618 NotImplemented "Instruction CMP not yet implemented."
	1619 Subtract X9, X9, 1
	1620 Add X10, X10, 16
	1621 Move W2, 1
	1622 Move X0, X20
	1623 Call 0x1C5D788
	1624 Move W9, [X10]
	1625 Add W9, W9, 1
	1626 Add X8, X8, W9
	1627 Add X0, X8, 312
	1628 Move X8, [X0]
	1629 Move X4, [X0+8]
	1630 Move W1, 5
	1631 Move X0, X20
	1632 Move X2, X21
	1633 Move X3, X22
	1634 NotImplemented "Instruction BLR not yet implemented."
	1635 Move X19, [X19+72]
	1636 Compare X19, 0
	1637 JumpIfEqual {1671}
	1638 Move X8, [X19]
	1639 Move X10, 0xBD7000
	1640 NotImplemented "Instruction LDRH not yet implemented."
	1641 Move X10, [X10+1128]
	1642 Move X1, [X10]
	1643 Compare X9, 0
	1644 JumpIfEqual {1651}
	1645 Move X10, [X8+176]
	1646 Add X10, X10, 8
	1647 NotImplemented "Instruction LDUR not yet implemented."
	1648 NotImplemented "Instruction CMP not yet implemented."
	1649 Subtract X9, X9, 1
	1650 Add X10, X10, 16
	1651 Move W2, 2
	1652 Move X0, X19
	1653 Call 0x1C5D788
	1654 Move W9, [X10]
	1655 Add W9, W9, 2
	1656 Add X8, X8, W9
	1657 Add X0, X8, 312
	1658 Move X8, [X0]
	1659 Move X2, [X0+8]
	1660 Add X1, X31, 64
	1661 Move X0, X19
	1662 NotImplemented "Instruction BLR not yet implemented."
	1663 Move X0, [X23]
	1664 Move W8, [X0+224]
	1665 Compare W8, 0
	1666 JumpIfNotEqual {1668}
	1667 Call 0x1C17DFC
	1668 Add X0, X31, 64
	1669 Call FrameBuffer.Release, X0
	1670 Move W0, [X31+132]
	1671 Call 0x1C17F20
	1672 Call 0x1C17F28
	1673 Call 0x1C17F44
	1674 Move X1, X31
	1675 Call 0x1C17DEC

Method: System.Void decodeThread()

Disassembly:
	0x035603B0 LDR X0, [X0 + 0x8A8]
	0x035603B4 BL 0x1C16CF4
	0x035603B8 MOVZ W8, 0x1
	0x035603BC STRB W8, [X20 + 0xDBE]
	0x035603C0 LDR X0, [X21]
	0x035603C4 BL 0x1C16F10
	0x035603C8 MOV X1, X31
	0x035603CC MOV X20, X0
	0x035603D0 BL 0x33BDD8C
	0x035603D4 MOVN W8, 0x1
	0x035603D8 MOV X0, X31
	0x035603DC STR W8, [X20 + 0x10]
	0x035603E0 BL 0x33C151C
	0x035603E4 STR W0, [X20 + 0x20]
	0x035603E8 STR X19, [X20 + 0x28]
	0x035603EC MOV X0, X20
	0x035603F0 LDP X20, X19, [X31 + 0x10]
	0x035603F4 LDP X30, X21, [X31], #0x20
	0x035603F8 RET
	0x035603FC STR X30, [X31 - 0x20]!
	0x03560400 STP X20, X19, [X31 + 0x10]
	0x03560404 MOV W19, W1
	0x03560408 MOV X1, X31
	0x0356040C MOV X20, X0
	0x03560410 BL 0x33BDD8C
	0x03560414 MOV X0, X31
	0x03560418 STR W19, [X20 + 0x10]
	0x0356041C BL 0x33C151C
	0x03560420 STR W0, [X20 + 0x20]
	0x03560424 LDP X20, X19, [X31 + 0x10]
	0x03560428 LDR X30, [X31], #0x20
	0x0356042C RET
	0x03560430 SUB X31, X31, 0x120
	0x03560434 STP X29, X30, [X31 + 0xC0]
	0x03560438 STP X28, X27, [X31 + 0xD0]
	0x0356043C STP X26, X25, [X31 + 0xE0]
	0x03560440 STP X24, X23, [X31 + 0xF0]
	0x03560444 STP X22, X21, [X31 + 0x100]
	0x03560448 STP X20, X19, [X31 + 0x110]
	0x0356044C ADRP X21, 0xE7F000
	0x03560450 LDRB W8, [X21 + 0xDBF]
	0x03560454 MOV X19, X0
	0x03560458 ADD X20, X31, 0x90
	0x0356045C TBNZ X8, 0x0, 0x3560540
	0x03560460 ADRP X0, 0xB93000
	0x03560464 LDR X0, [X0 + 0x9C8]
	0x03560468 BL 0x1C16CF4
	0x0356046C ADRP X0, 0xBD5000
	0x03560470 LDR X0, [X0 + 0x848]
	0x03560474 BL 0x1C16CF4
	0x03560478 ADRP X0, 0xBD5000
	0x0356047C LDR X0, [X0 + 0x8B0]
	0x03560480 BL 0x1C16CF4
	0x03560484 ADRP X0, 0xBD5000
	0x03560488 LDR X0, [X0 + 0x8B8]
	0x0356048C BL 0x1C16CF4
	0x03560490 ADRP X0, 0xBD5000
	0x03560494 LDR X0, [X0 + 0x850]
	0x03560498 BL 0x1C16CF4
	0x0356049C ADRP X0, 0xBD5000
	0x035604A0 LDR X0, [X0 + 0x8C0]
	0x035604A4 BL 0x1C16CF4
	0x035604A8 ADRP X0, 0xBD5000
	0x035604AC LDR X0, [X0 + 0x8C8]
	0x035604B0 BL 0x1C16CF4
	0x035604B4 ADRP X0, 0xBD5000
	0x035604B8 LDR X0, [X0 + 0x8D0]
	0x035604BC BL 0x1C16CF4
	0x035604C0 ADRP X0, 0xBD5000
	0x035604C4 LDR X0, [X0 + 0x858]
	0x035604C8 BL 0x1C16CF4
	0x035604CC ADRP X0, 0xBD5000
	0x035604D0 LDR X0, [X0 + 0x8D8]
	0x035604D4 BL 0x1C16CF4
	0x035604D8 ADRP X0, 0xBD5000
	0x035604DC LDR X0, [X0 + 0x860]
	0x035604E0 BL 0x1C16CF4
	0x035604E4 ADRP X0, 0xBD5000
	0x035604E8 LDR X0, [X0 + 0x8E0]
	0x035604EC BL 0x1C16CF4
	0x035604F0 ADRP X0, 0xBD5000
	0x035604F4 LDR X0, [X0 + 0x8E8]
	0x035604F8 BL 0x1C16CF4
	0x035604FC ADRP X0, 0xB98000
	0x03560500 LDR X0, [X0 + 0x348]
	0x03560504 BL 0x1C16CF4
	0x03560508 ADRP X0, 0xBD5000
	0x0356050C LDR X0, [X0 + 0x868]
	0x03560510 BL 0x1C16CF4
	0x03560514 ADRP X0, 0xBD5000
	0x03560518 LDR X0, [X0 + 0x8F0]
	0x0356051C BL 0x1C16CF4
	0x03560520 ADRP X0, 0xBD5000
	0x03560524 LDR X0, [X0 + 0x8F8]
	0x03560528 BL 0x1C16CF4
	0x0356052C ADRP X0, 0xBD5000
	0x03560530 LDR X0, [X0 + 0x900]
	0x03560534 BL 0x1C16CF4
	0x03560538 MOVZ W8, 0x1
	0x0356053C STRB W8, [X21 + 0xDBF]
	0x03560540 MOVI V0.2D, 0x0
	0x03560544 STR X31, [X31 + 0xB0]
	0x03560548 STR X31, [X31 + 0x80]
	0x0356054C STR X31, [X31 + 0x50]
	0x03560550 STP V0, V0, [X20]
	0x03560554 STP V0, V0, [X31 + 0x60]
	0x03560558 STP V0, V0, [X31 + 0x30]
	0x0356055C LDR X0, [X19 + 0x78]
	0x03560560 CBZ X0, 0x3560960
	0x03560564 ADRP X8, 0xBD5000
	0x03560568 LDR X8, [X8 + 0x848]
	0x0356056C ADRP X24, 0xBD5000
	0x03560570 ADRP X25, 0xBD5000
	0x03560574 ADRP X26, 0xB93000
	0x03560578 ADRP X27, 0xB98000
	0x0356057C ADRP X28, 0xBD5000
	0x03560580 ADRP X29, 0xBD5000
	0x03560584 ADRP X23, 0xBD5000
	0x03560588 LDR X24, [X24 + 0x858]
	0x0356058C LDR X25, [X25 + 0x900]
	0x03560590 LDR X26, [X26 + 0x9C8]
	0x03560594 LDR X27, [X27 + 0x348]
	0x03560598 LDR X28, [X28 + 0x8D0]
	0x0356059C LDR X29, [X29 + 0x8B8]
	0x035605A0 LDR X23, [X23 + 0x8D8]
	0x035605A4 LDR X1, [X8]
	0x035605A8 ADD X8, X31, 0x8
	0x035605AC BL 0x29D395C
	0x035605B0 LDUR V0, [X31 + 0x8]
	0x035605B4 LDUR V1, [X31 + 0x18]
	0x035605B8 LDR X8, [X31 + 0x28]
	0x035605BC STP V0, V1, [X20]
	0x035605C0 STR X8, [X31 + 0xB0]
	0x035605C4 LDR X1, [X24]
	0x035605C8 ADD X0, X31, 0x90
	0x035605CC BL 0x2BEA018
	0x035605D0 TBZ X0, 0x0, 0x35606D4
	0x035605D4 LDR X21, [X31 + 0xA8]
	0x035605D8 CBZ X21, 0x356094C
	0x035605DC LDR X0, [X21 + 0x100]
	0x035605E0 CBZ X0, 0x3560950
	0x035605E4 BL 0x3556F1C
	0x035605E8 LDR X0, [X21 + 0x100]
	0x035605EC CBZ X0, 0x3560944
	0x035605F0 LDR X20, [X19 + 0x18]
	0x035605F4 LDR X21, [X21 + 0xD0]
	0x035605F8 BL 0x3557088
	0x035605FC LDR X1, [X25]
	0x03560600 MOV X2, X0
	0x03560604 MOV X0, X21
	0x03560608 MOV X3, X31
	0x0356060C BL 0x32274B8
	0x03560610 LDR X22, [X26]
	0x03560614 MOV X21, X0
	0x03560618 LDR X8, [X22 + 0x38]
	0x0356061C CBNZ X8, 0x356062C
	0x03560620 MOV X0, X22
	0x03560624 BL 0x1C5C6E0
	0x03560628 LDR X8, [X22 + 0x38]
	0x0356062C LDR X0, [X8 + 0x10]
	0x03560630 LDRB W8, [X0 + 0x135]
	0x03560634 TBNZ X8, 0x0, 0x356063C
	0x03560638 BL 0x1C5C684
	0x0356063C LDR W8, [X0 + 0xE0]
	0x03560640 CBNZ W8, 0x3560648
	0x03560644 BL 0x1C16DFC
	0x03560648 LDR X8, [X22 + 0x38]
	0x0356064C LDR X0, [X8 + 0x10]
	0x03560650 LDRB W8, [X0 + 0x135]
	0x03560654 TBNZ X8, 0x0, 0x356065C
	0x03560658 BL 0x1C5C684
	0x0356065C CBZ X20, 0x3560948
	0x03560660 LDR X9, [X0 + 0xB8]
	0x03560664 LDR X8, [X20]
	0x03560668 LDR X1, [X27]
	0x0356066C LDR X22, [X9]
	0x03560670 LDRH W9, [X8 + 0x12E]
	0x03560674 CBZ X9, 0x3560698
	0x03560678 LDR X10, [X8 + 0xB0]
	0x0356067C ADD X10, X10, 0x8
	0x03560680 LDUR X11, [X10 - 0x8]
	0x03560684 CMP X11, X1
	0x03560688 B.EQ 0x35606A8
	0x0356068C SUBS X9, X9, 0x1
	0x03560690 ADD X10, X10, 0x10
	0x03560694 B.NE 0x3560680
	0x03560698 MOVZ W2, 0x1
	0x0356069C MOV X0, X20
	0x035606A0 BL 0x1C5C788
	0x035606A4 B 0x35606B8
	0x035606A8 LDR W9, [X10]
	0x035606AC ADD W9, W9, 0x1
	0x035606B0 ADD X8, X8, W9, 0x4, SXTW
	0x035606B4 ADD X0, X8, 0x138
	0x035606B8 LDP X8, X4, [X0]
	0x035606BC MOVZ W1, 0x3
	0x035606C0 MOV X0, X20
	0x035606C4 MOV X2, X21
	0x035606C8 MOV X3, X22
	0x035606CC BLR X8
	0x035606D0 B 0x35605C4
	0x035606D4 ADRP X8, 0xBD5000
	0x035606D8 LDR X8, [X8 + 0x850]
	0x035606DC ADD X0, X31, 0x90
	0x035606E0 LDR X1, [X8]
	0x035606E4 BL 0x2BEA130
	0x035606E8 ADRP X24, 0xBD5000
	0x035606EC LDR X24, [X24 + 0x8C8]
	0x035606F0 LDR X0, [X19 + 0x88]
	0x035606F4 CBZ X0, 0x3560960
	0x035606F8 ADRP X8, 0xBD5000
	0x035606FC LDR X8, [X8 + 0x8B0]
	0x03560700 LDR X1, [X8]
	0x03560704 ADD X8, X31, 0x8
	0x03560708 BL 0x2A13AB4
	0x0356070C LDUR V0, [X31 + 0x8]
	0x03560710 LDUR V1, [X31 + 0x18]
	0x03560714 LDR X8, [X31 + 0x28]
	0x03560718 STP V0, V1, [X31 + 0x60]
	0x0356071C STR X8, [X31 + 0x80]
	0x03560720 LDR X1, [X28]
	0x03560724 ADD X0, X31, 0x60
	0x03560728 BL 0x2BF5330
	0x0356072C TBZ X0, 0x0, 0x35608F4
	0x03560730 LDR X0, [X31 + 0x78]
	0x03560734 CBZ X0, 0x356095C
	0x03560738 LDR X1, [X29]
	0x0356073C ADD X8, X31, 0x8
	0x03560740 BL 0x29D395C
	0x03560744 LDUR V0, [X31 + 0x8]
	0x03560748 LDUR V1, [X31 + 0x18]
	0x0356074C LDR X8, [X31 + 0x28]
	0x03560750 STP V0, V1, [X31 + 0x30]
	0x03560754 STR X8, [X31 + 0x50]
	0x03560758 LDR X1, [X23]
	0x0356075C ADD X0, X31, 0x30
	0x03560760 BL 0x2BEA018
	0x03560764 TBZ X0, 0x0, 0x3560868
	0x03560768 LDR X21, [X31 + 0x48]
	0x0356076C CBZ X21, 0x35608A0
	0x03560770 LDR X0, [X21 + 0xC0]
	0x03560774 CBZ X0, 0x35608A8
	0x03560778 BL 0x3556F1C
	0x0356077C LDR X0, [X21 + 0xC0]
	0x03560780 CBZ X0, 0x3560890
	0x03560784 LDR X20, [X19 + 0x18]
	0x03560788 LDR X21, [X21 + 0xB8]
	0x0356078C BL 0x3557088
	0x03560790 LDR X1, [X25]
	0x03560794 MOV X2, X0
	0x03560798 MOV X0, X21
	0x0356079C MOV X3, X31
	0x035607A0 BL 0x32274B8
	0x035607A4 LDR X22, [X26]
	0x035607A8 MOV X21, X0
	0x035607AC LDR X8, [X22 + 0x38]
	0x035607B0 CBNZ X8, 0x35607C0
	0x035607B4 MOV X0, X22
	0x035607B8 BL 0x1C5C6E0
	0x035607BC LDR X8, [X22 + 0x38]
	0x035607C0 LDR X0, [X8 + 0x10]
	0x035607C4 LDRB W8, [X0 + 0x135]
	0x035607C8 TBNZ X8, 0x0, 0x35607D0
	0x035607CC BL 0x1C5C684
	0x035607D0 LDR W8, [X0 + 0xE0]
	0x035607D4 CBNZ W8, 0x35607DC
	0x035607D8 BL 0x1C16DFC
	0x035607DC LDR X8, [X22 + 0x38]
	0x035607E0 LDR X0, [X8 + 0x10]
	0x035607E4 LDRB W8, [X0 + 0x135]
	0x035607E8 TBNZ X8, 0x0, 0x35607F0
	0x035607EC BL 0x1C5C684
	0x035607F0 CBZ X20, 0x3560898
	0x035607F4 LDR X9, [X0 + 0xB8]
	0x035607F8 LDR X8, [X20]
	0x035607FC LDR X1, [X27]
	0x03560800 LDR X22, [X9]
	0x03560804 LDRH W9, [X8 + 0x12E]
	0x03560808 CBZ X9, 0x356082C
	0x0356080C LDR X10, [X8 + 0xB0]
	0x03560810 ADD X10, X10, 0x8
	0x03560814 LDUR X11, [X10 - 0x8]
	0x03560818 CMP X11, X1
	0x0356081C B.EQ 0x356083C
	0x03560820 SUBS X9, X9, 0x1
	0x03560824 ADD X10, X10, 0x10
	0x03560828 B.NE 0x3560814
	0x0356082C MOVZ W2, 0x1
	0x03560830 MOV X0, X20
	0x03560834 BL 0x1C5C788
	0x03560838 B 0x356084C
	0x0356083C LDR W9, [X10]
	0x03560840 ADD W9, W9, 0x1
	0x03560844 ADD X8, X8, W9, 0x4, SXTW
	0x03560848 ADD X0, X8, 0x138
	0x0356084C LDP X8, X4, [X0]
	0x03560850 MOVZ W1, 0x3
	0x03560854 MOV X0, X20
	0x03560858 MOV X2, X21
	0x0356085C MOV X3, X22
	0x03560860 BLR X8
	0x03560864 B 0x3560758
	0x03560868 MOV X22, X31
	0x0356086C MOVZ W20, 0x5
	0x03560870 LDR X1, [X24]
	0x03560874 ADD X0, X31, 0x30
	0x03560878 BL 0x2BEA130
	0x0356087C CBNZ X22, 0x3560954
	0x03560880 CMP W20, 0x5
	0x03560884 B.EQ 0x3560720
	0x03560888 CBZ W20, 0x3560720
	0x0356088C B 0x35608F4
	0x03560890 BL 0x1C16F20
	0x03560894 B 0x3560964
	0x03560898 BL 0x1C16F20
	0x0356089C B 0x3560964
	0x035608A0 BL 0x1C16F20
	0x035608A4 B 0x3560964
	0x035608A8 BL 0x1C16F20
	0x035608AC B 0x3560964
	0x035608B0 B 0x35608CC
	0x035608B4 B 0x35608CC
	0x035608B8 B 0x35608CC
	0x035608BC B 0x35608CC
	0x035608C0 B 0x35608CC
	0x035608C4 B 0x35608CC
	0x035608C8 B 0x35608CC
	0x035608CC MOV X21, X1
	0x035608D0 MOV X20, X0
	0x035608D4 CMP W21, 0x1
	0x035608D8 B.NE 0x3560928
	0x035608DC MOV X0, X20
	0x035608E0 BL 0x3EB1AD0
	0x035608E4 LDR X22, [X0]
	0x035608E8 BL 0x3EB1AE0
	0x035608EC MOV W20, W31
	0x035608F0 B 0x3560870
	0x035608F4 ADRP X8, 0xBD5000
	0x035608F8 LDR X8, [X8 + 0x8C0]
	0x035608FC ADD X0, X31, 0x60
	0x03560900 LDR X1, [X8]
	0x03560904 BL 0x2BF5448
	0x03560908 LDP X20, X19, [X31 + 0x110]
	0x0356090C LDP X22, X21, [X31 + 0x100]
	0x03560910 LDP X24, X23, [X31 + 0xF0]
	0x03560914 LDP X26, X25, [X31 + 0xE0]
	0x03560918 LDP X28, X27, [X31 + 0xD0]
	0x0356091C LDP X29, X30, [X31 + 0xC0]
	0x03560920 ADD X31, X31, 0x120
	0x03560924 RET
	0x03560928 MOV X22, X31
	0x0356092C LDR X1, [X24]
	0x03560930 ADD X0, X31, 0x30
	0x03560934 BL 0x2BEA130
	0x03560938 CBZ X22, 0x3560988
	0x0356093C MOV X0, X22
	0x03560940 BL 0x1C16F18
	0x03560944 BL 0x1C16F20
	0x03560948 BL 0x1C16F20
	0x0356094C BL 0x1C16F20
	0x03560950 BL 0x1C16F20
	0x03560954 MOV X0, X22
	0x03560958 BL 0x1C16F18

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+176], X30
	003 Move [X31+184], X0
	004 Move [X31+192], X22
	005 Move [X31+200], X21
	006 Move [X31+208], X20
	007 Move [X31+216], X19
	008 Move X20, 0xE80000
	009 Move W8, [X20+3507]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0xB94000
	016 Move X0, [X0+2504]
	017 Call 0x1C17CF4
	018 Move X0, 0xBC0000
	019 Move X0, [X0+384]
	020 Call 0x1C17CF4
	021 Move X0, 0xBD6000
	022 Move X0, [X0+1128]
	023 Call 0x1C17CF4
	024 Move X0, 0xB99000
	025 Move X0, [X0+840]
	026 Call 0x1C17CF4
	027 Move X0, 0xBD6000
	028 Move X0, [X0+2040]
	029 Call 0x1C17CF4
	030 Move X0, 0xBD6000
	031 Move X0, [X0+2048]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+3507], W8
	035 Move X20, [X19+160]
	036 Move [X31+124], W31
	037 Add X1, X31, 124
	038 Move X0, X20
	039 Move X2, X31
	040 Call Monitor.Enter, X0, X1
	041 Move X8, [X31+184]
	042 Move W19, [X8+158]
	043 Call 0x1C17D44
	044 Compare W19, 0
	045 JumpIfEqual {48}
	046 Move X21, X31
	047 Move W19, 3
	048 Call 0x1C17D44
	049 Move X8, [X31+184]
	050 Move W9, 1
	051 Move X21, X31
	052 Move W19, 4
	053 Move [X8+172], W9
	054 Move W8, [X31+124]
	055 Compare W8, 0
	056 JumpIfEqual {60}
	057 Move X0, X20
	058 Move X1, X31
	059 Call Monitor.Exit, X0
	060 Compare X21, 0
	061 JumpIfNotEqual {213}
	062 Or W8, W19, 4
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X8, [X31+184]
	065 Move X9, [X8+200]
	066 Compare X9, 0
	067 JumpIfEqual {212}
	068 Move X10, 0xBD6000
	069 Move X10, [X10+2040]
	070 Move X0, [X8+184]
	071 Move X20, 0xB94000
	072 Move X19, [X9+24]
	073 Move X1, [X10]
	074 Move X20, [X20+2504]
	075 Move X2, X31
	076 Call String.Concat, X0, X1
	077 Move X21, [X20]
	078 Move X20, X0
	079 Move X8, [X21+56]
	080 Compare X8, 0
	081 JumpIfNotEqual {85}
	082 Move X0, X21
	083 Call 0x1C5D6E0
	084 Move X8, [X21+56]
	085 Move X0, [X8+16]
	086 Move W8, [X0+309]
	087 Move TEMP, X8
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {92}
	091 Call 0x1C5D684
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X8, [X21+56]
	097 Move X0, [X8+16]
	098 Move W8, [X0+309]
	099 Move TEMP, X8
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {104}
	103 Call 0x1C5D684
	104 Compare X19, 0
	105 JumpIfEqual {212}
	106 Move X10, 0xB99000
	107 Move X9, [X0+184]
	108 Move X8, [X19]
	109 Move X10, [X10+840]
	110 Move X22, 0xBC0000
	111 Move X21, [X9]
	112 NotImplemented "Instruction LDRH not yet implemented."
	113 Move X1, [X10]
	114 Move X22, [X22+384]
	115 Compare X9, 0
	116 JumpIfEqual {123}
	117 Move X10, [X8+176]
	118 Add X10, X10, 8
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Subtract X9, X9, 1
	122 Add X10, X10, 16
	123 Move W2, 1
	124 Move X0, X19
	125 Call 0x1C5D788
	126 Move W9, [X10]
	127 Add W9, W9, 1
	128 Add X8, X8, W9
	129 Add X0, X8, 312
	130 Move X8, [X0]
	131 Move X4, [X0+8]
	132 Move W1, 3
	133 Move X0, X19
	134 Move X2, X20
	135 Move X3, X21
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Move X0, [X22]
	138 Call 0x1C17F10
	139 Move W1, W31
	140 Move X2, X31
	141 Move X19, X0
	142 Call AutoResetEvent..ctor, X0, X1
	143 Move X8, [X31+184]
	144 Add X9, X31, 184
	145 Move [X8+232], X19
	146 Move [X31+104], X31
	147 Move [X31+112], X9
	148 Move X0, X31
	149 Call AndroidJNI.AttachCurrentThread
	150 Move X8, [X31+184]
	151 Move V2, [X8+32]
	152 Move V0, [X8+48]
	153 Move V1, [X8+1]
	154 Move X19, [X8+72]
	155 Move [X31+64], V2
	156 Move [X31+72], V0
	157 Move [X31+3], V1
	158 Compare X19, 0
	159 JumpIfEqual {215}
	160 Move V0, [X31+48]
	161 Move V1, [X31+64]
	162 Move V2, [X31+5]
	163 Move X10, 0xBD6000
	164 Move [X31], V0
	165 Move [X31+8], V1
	166 Move [X31+2], V2
	167 Move X8, [X19]
	168 Move X10, [X10+1128]
	169 NotImplemented "Instruction LDRH not yet implemented."
	170 Move X1, [X10]
	171 Compare X9, 0
	172 JumpIfEqual {179}
	173 Move X10, [X8+176]
	174 Add X10, X10, 8
	175 NotImplemented "Instruction LDUR not yet implemented."
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Subtract X9, X9, 1
	178 Add X10, X10, 16
	179 Move X0, X19
	180 Move W2, W31
	181 Call 0x1C5D788
	182 NotImplemented "Instruction LDRSW not yet implemented."
	183 Add X8, X8, X9
	184 Add X0, X8, 312
	185 Move V0, [X31]
	186 Move V1, [X31+16]
	187 Move V2, [X31+2]
	188 Move X8, [X0]
	189 Move [X31+128], V0
	190 Move [X31+136], V1
	191 Move [X31+10], V2
	192 Move X2, [X0+8]
	193 Add X1, X31, 128
	194 Move X0, X19
	195 NotImplemented "Instruction BLR not yet implemented."
	196 Move X8, [X31+184]
	197 Move W19, [X8+158]
	198 Call 0x1C17D44
	199 Compare W19, 0
	200 JumpIfNotEqual {368}
	201 Move X0, [X31+184]
	202 Call RemoteVoice.decodeQueue, X0
	203 Move X8, [X31+184]
	204 Move X0, [X8+232]
	205 Compare X0, 0
	206 JumpIfEqual {211}
	207 Move X8, [X0]
	208 Move X9, [X8+472]
	209 Move X1, [X8+480]
	210 NotImplemented "Instruction BLR not yet implemented."
	211 Call 0x1C17F20
	212 Call 0x1C17F20
	213 Move X0, X21
	214 Call 0x1C17F18
	215 Call 0x1C17F20
	216 Move X19, X0
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move X0, X19
	219 Call 0x3EB2AD0
	220 Move X21, [X0]
	221 Call 0x3EB2AE0
	222 Move W19, W31
	223 Move X21, X31
	224 Move X19, X0
	225 Move W8, [X31+124]
	226 Compare W8, 0
	227 JumpIfEqual {231}
	228 Move X0, X20
	229 Move X1, X31
	230 Call Monitor.Exit, X0
	231 Compare X21, 0
	232 JumpIfEqual {383}
	233 Move X0, X21
	234 Call 0x1C17F18
	235 Move X19, X0
	236 Move X19, X0
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move X0, X19
	239 Call 0x3EB2AD0
	240 Move X19, X0
	241 Move X0, 0xB94000
	242 Move X0, [X0+2000]
	243 Call 0x1C17D08
	244 Move X8, [X19]
	245 Move X1, [X8]
	246 Call 0x1C18270
	247 Move TEMP, X0
	248 And TEMP, TEMP, 1
	249 Compare TEMP, 1
	250 JumpIfNotEqual {346}
	251 Move X22, [X19]
	252 Call 0x3EB2AE0
	253 Move X8, [X31+184]
	254 Move X9, [X8+200]
	255 Compare X9, 0
	256 JumpIfEqual {354}
	257 Move X19, [X9+24]
	258 Move X20, [X8+184]
	259 Compare X22, 0
	260 JumpIfEqual {271}
	261 Move X0, 0xBD6000
	262 Move X0, [X0+2056]
	263 Call 0x1C17D08
	264 Move X8, [X22]
	265 Move X21, X0
	266 Move X9, [X8+360]
	267 Move X1, [X8+368]
	268 Move X0, X22
	269 NotImplemented "Instruction BLR not yet implemented."
	270 Move X2, X0
	271 Move X0, 0xBD6000
	272 Move X0, [X0+2056]
	273 Call 0x1C17D08
	274 Move X21, X0
	275 Move X2, X31
	276 Move X0, X20
	277 Move X1, X21
	278 Move X3, X31
	279 Call String.Concat, X0, X1, X2
	280 Move X20, X0
	281 Move X0, 0xB94000
	282 Move X0, [X0+2504]
	283 Call 0x1C17D08
	284 Move X8, [X0+56]
	285 Move X21, X0
	286 Compare X8, 0
	287 JumpIfNotEqual {291}
	288 Move X0, X21
	289 Call 0x1C5D6E0
	290 Move X8, [X21+56]
	291 Move X0, [X8+16]
	292 Move W8, [X0+309]
	293 Move TEMP, X8
	294 And TEMP, TEMP, 1
	295 Compare TEMP, 1
	296 JumpIfEqual {298}
	297 Call 0x1C5D684
	298 Move W8, [X0+224]
	299 Compare W8, 0
	300 JumpIfNotEqual {302}
	301 Call 0x1C17DFC
	302 Move X8, [X21+56]
	303 Move X0, [X8+16]
	304 Move W8, [X0+309]
	305 Move TEMP, X8
	306 And TEMP, TEMP, 1
	307 Compare TEMP, 1
	308 JumpIfEqual {310}
	309 Call 0x1C5D684
	310 Compare X19, 0
	311 JumpIfEqual {355}
	312 Move X8, [X0+184]
	313 Move X21, [X8]
	314 Move X0, 0xB99000
	315 Move X0, [X0+840]
	316 Call 0x1C17D08
	317 Move X1, X0
	318 Move X8, [X19]
	319 NotImplemented "Instruction LDRH not yet implemented."
	320 Compare X9, 0
	321 JumpIfEqual {328}
	322 Move X10, [X8+176]
	323 Add X10, X10, 8
	324 NotImplemented "Instruction LDUR not yet implemented."
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Subtract X9, X9, 1
	327 Add X10, X10, 16
	328 Move W2, 1
	329 Move X0, X19
	330 Call 0x1C5D788
	331 Move W9, [X10]
	332 Add W9, W9, 1
	333 Add X8, X8, W9
	334 Add X0, X8, 312
	335 Move X8, [X0]
	336 Move X4, [X0+8]
	337 Move W1, 1
	338 Move X0, X19
	339 Move X2, X20
	340 Move X3, X21
	341 NotImplemented "Instruction BLR not yet implemented."
	342 Call 0x1C17D44
	343 Move X0, [X31+184]
	344 Move [X0+172], W31
	345 Call RemoteVoice.Dispose, X0
	346 Move W0, 8
	347 Call 0x3EB2AF0
	348 Move X8, [X19]
	349 Move [X0], X8
	350 Move X1, 0x955000
	351 Add X1, X1, 3672
	352 Move X2, X31
	353 Call 0x3EB2B00
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Move X20, X1
	357 Move X19, X0
	358 Call 0x3EB2AE0
	359 Move W1, W20
	360 Move X19, X0
	361 Move W8, 1
	362 NotImplemented "Instruction CMP not yet implemented."
	363 Move X0, X19
	364 Call 0x3EB2AD0
	365 Move X8, [X0]
	366 Move [X31+104], X8
	367 Call 0x3EB2AE0
	368 Add X0, X31, 104
	369 Call 0x1BC0FD4
	370 Call 0x1C17D44
	371 Move X8, [X31+184]
	372 Move [X8+172], W31
	373 Move X20, [X31+208]
	374 Move X19, [X31+216]
	375 Move X22, [X31+192]
	376 Move X21, [X31+200]
	377 Move X30, [X31+176]
	378 Add X31, X31, 224
	379 Return 
	380 Move X19, X0
	381 Add X0, X31, 104
	382 Call 0x1BC0FD4
	383 Move X0, X19
	384 Call 0x1D2D690
	385 Call 0x1991590

Method: System.Void removeAndDispose()

Disassembly:
	0x0356095C BL 0x1C16F20
	0x03560960 BL 0x1C16F20
	0x03560964 MOV X21, X1
	0x03560968 MOV X20, X0
	0x0356096C B 0x356092C
	0x03560970 B 0x3560980
	0x03560974 B 0x3560980
	0x03560978 B 0x3560980
	0x0356097C B 0x3560980
	0x03560980 MOV X21, X1
	0x03560984 MOV X20, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+64]
	004 Move X19, X0
	005 Compare X8, 0
	006 JumpIfEqual {11}
	007 Move X9, [X8+24]
	008 Move X0, [X8+64]
	009 Move X1, [X8+40]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move X0, X19
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Call RemoteVoice.Dispose, X0
	015 Return 

Method: System.Void Dispose()

Disassembly:
	0x0355D5D8 CMP X11, X1
	0x0355D5DC B.EQ 0x355D740
	0x0355D5E0 SUBS X9, X9, 0x1
	0x0355D5E4 ADD X10, X10, 0x10
	0x0355D5E8 B.NE 0x355D5D4
	0x0355D5EC MOVZ W2, 0x1
	0x0355D5F0 MOV X0, X20
	0x0355D5F4 BL 0x1C5C788
	0x0355D5F8 B 0x355D750
	0x0355D5FC LDR W9, [X10]
	0x0355D600 ADD W9, W9, 0x2
	0x0355D604 ADD X8, X8, W9, 0x4, SXTW
	0x0355D608 ADD X0, X8, 0x138
	0x0355D60C LDP X8, X2, [X0]
	0x0355D610 MOV X0, X20
	0x0355D614 MOV X1, X26
	0x0355D618 BLR X8
	0x0355D61C B 0x355D768
	0x0355D620 MOV W25, W31
	0x0355D624 CMP W25, W9
	0x0355D628 B.NE 0x355D718
	0x0355D62C LDR X8, [X19 + 0xC8]
	0x0355D630 CBZ X8, 0x355E2B4
	0x0355D634 LDR X22, [X8 + 0x18]
	0x0355D638 LDR X23, [X19 + 0xB8]
	0x0355D63C ADD X0, X31, 0x80
	0x0355D640 MOV X1, X31
	0x0355D644 BL 0x337B6E0
	0x0355D648 ADRP X8, 0xBD8000
	0x0355D64C ADRP X9, 0xBD8000
	0x0355D650 LDR X8, [X8 + 0x788]
	0x0355D654 LDR X9, [X9 + 0x760]
	0x0355D658 MOV X2, X0
	0x0355D65C MOV X0, X23
	0x0355D660 LDR X1, [X8]
	0x0355D664 LDR X3, [X9]
	0x0355D668 MOV X4, X31
	0x0355D66C BL 0x32277C4
	0x0355D670 ADRP X8, 0xB96000
	0x0355D674 LDR X8, [X8 + 0x9C8]
	0x0355D678 MOV X23, X0
	0x0355D67C LDR X24, [X8]
	0x0355D680 LDR X8, [X24 + 0x38]
	0x0355D684 CBNZ X8, 0x355D694
	0x0355D688 MOV X0, X24
	0x0355D68C BL 0x1C5C6E0
	0x0355D690 LDR X8, [X24 + 0x38]
	0x0355D694 LDR X0, [X8 + 0x10]
	0x0355D698 LDRB W8, [X0 + 0x135]
	0x0355D69C TBNZ X8, 0x0, 0x355D6A4
	0x0355D6A0 BL 0x1C5C684
	0x0355D6A4 LDR W8, [X0 + 0xE0]
	0x0355D6A8 CBNZ W8, 0x355D6B0
	0x0355D6AC BL 0x1C16DFC
	0x0355D6B0 LDR X8, [X24 + 0x38]
	0x0355D6B4 LDR X0, [X8 + 0x10]
	0x0355D6B8 LDRB W8, [X0 + 0x135]
	0x0355D6BC TBNZ X8, 0x0, 0x355D6C4
	0x0355D6C0 BL 0x1C5C684
	0x0355D6C4 CBZ X22, 0x355E2B4
	0x0355D6C8 LDR X9, [X0 + 0xB8]
	0x0355D6CC LDR X8, [X22]
	0x0355D6D0 ADRP X10, 0xB9B000
	0x0355D6D4 LDR X24, [X9]
	0x0355D6D8 LDRH W9, [X8 + 0x12E]
	0x0355D6DC LDR X10, [X10 + 0x348]
	0x0355D6E0 LDR X1, [X10]
	0x0355D6E4 CBZ X9, 0x355D708
	0x0355D6E8 LDR X10, [X8 + 0xB0]
	0x0355D6EC ADD X10, X10, 0x8
	0x0355D6F0 LDUR X11, [X10 - 0x8]
	0x0355D6F4 CMP X11, X1
	0x0355D6F8 B.EQ 0x355D7B8
	0x0355D6FC SUBS X9, X9, 0x1
	0x0355D700 ADD X10, X10, 0x10
	0x0355D704 B.NE 0x355D6F0
	0x0355D708 MOVZ W2, 0x1
	0x0355D70C MOV X0, X22
	0x0355D710 BL 0x1C5C788
	0x0355D714 B 0x355D7C8
	0x0355D718 B.CS 0x355E2B8
	0x0355D71C ADD X8, X8, W25, 0x3, SXTW
	0x0355D720 LDR X8, [X8 + 0x20]
	0x0355D724 CBZ X8, 0x355D7E4
	0x0355D728 LDR X20, [X8 + 0x18]
	0x0355D72C CBZ X20, 0x355E2B4
	0x0355D730 LDR W8, [X20 + 0x18]
	0x0355D734 CMP W1, W8
	0x0355D738 B.GT 0x355D7E4
	0x0355D73C B 0x355D7F8
	0x0355D740 LDR W9, [X10]
	0x0355D744 ADD W9, W9, 0x1
	0x0355D748 ADD X8, X8, W9, 0x4, SXTW
	0x0355D74C ADD X0, X8, 0x138
	0x0355D750 LDP X8, X4, [X0]
	0x0355D754 MOVZ W1, 0x2
	0x0355D758 MOV X0, X20
	0x0355D75C MOV X2, X21
	0x0355D760 MOV X3, X22
	0x0355D764 BLR X8
	0x0355D768 LDR X8, [X19 + 0xD8]
	0x0355D76C CBZ X8, 0x355E2B4
	0x0355D770 LDRB W9, [X31 + 0x8C]
	0x0355D774 LDR W10, [X8 + 0x18]
	0x0355D778 CMP W9, W10
	0x0355D77C B.CS 0x355E2B8
	0x0355D780 ADD X8, X8, X9, 0x2, LSL
	0x0355D784 ADD X0, X8, 0x20
	0x0355D788 MOV W1, W31
	0x0355D78C MOV X2, X31
	0x0355D790 BL 0x33E9064
	0x0355D794 MOVZ W0, 0x1
	0x0355D798 LDP X20, X19, [X31 + 0xE0]
	0x0355D79C LDP X22, X21, [X31 + 0xD0]
	0x0355D7A0 LDP X24, X23, [X31 + 0xC0]
	0x0355D7A4 LDP X26, X25, [X31 + 0xB0]
	0x0355D7A8 LDP X28, X27, [X31 + 0xA0]
	0x0355D7AC LDP X29, X30, [X31 + 0x90]
	0x0355D7B0 ADD X31, X31, 0xF0
	0x0355D7B4 RET
	0x0355D7B8 LDR W9, [X10]
	0x0355D7BC ADD W9, W9, 0x1
	0x0355D7C0 ADD X8, X8, W9, 0x4, SXTW
	0x0355D7C4 ADD X0, X8, 0x138
	0x0355D7C8 LDP X8, X4, [X0]
	0x0355D7CC MOVZ W1, 0x1
	0x0355D7D0 MOV X0, X22
	0x0355D7D4 MOV X2, X23
	0x0355D7D8 MOV X3, X24
	0x0355D7DC BLR X8
	0x0355D7E0 LDR W1, [X31 + 0x80]
	0x0355D7E4 ADRP X8, 0xB96000
	0x0355D7E8 LDR X8, [X8 + 0x618]
	0x0355D7EC LDR X0, [X8]
	0x0355D7F0 BL 0x1C16D6C
	0x0355D7F4 MOV X20, X0
	0x0355D7F8 ADRP X8, 0xBBF000
	0x0355D7FC LDR X8, [X8 + 0xE18]
	0x0355D800 LDR X0, [X8]
	0x0355D804 LDR W8, [X0 + 0xE0]
	0x0355D808 CBNZ W8, 0x355D810
	0x0355D80C BL 0x1C16DFC
	0x0355D810 LDR X0, [X26]
	0x0355D814 LDR W1, [X21]
	0x0355D818 LDR W4, [X31 + 0x1C]
	0x0355D81C MOV X2, X20
	0x0355D820 MOV W3, W31
	0x0355D824 MOV X5, X31
	0x0355D828 BL 0x339FCE8
	0x0355D82C LDR X8, [X19 + 0xD8]
	0x0355D830 CBZ X8, 0x355E2B4
	0x0355D834 LDRB W9, [X31 + 0x8C]
	0x0355D838 LDR W10, [X8 + 0x18]
	0x0355D83C STR X20, [X31 + 0x10]
	0x0355D840 CMP W9, W10
	0x0355D844 B.CS 0x355E2B8
	0x0355D848 ADD X8, X8, X9, 0x2, LSL
	0x0355D84C ADD X0, X8, 0x20
	0x0355D850 MOV W1, W31
	0x0355D854 MOV X2, X31
	0x0355D858 BL 0x33E9064
	0x0355D85C LDRB W8, [X31 + 0x8C]
	0x0355D860 LDRB W9, [X31 + 0x84]
	0x0355D864 LDR W10, [X31 + 0x1C]
	0x0355D868 MOV W24, W31
	0x0355D86C ADD W8, W8, 0x1
	0x0355D870 CMP W9, 0x1
	0x0355D874 STR W10, [X31 + 0x7C]
	0x0355D878 STRB W8, [X31 + 0x3C]
	0x0355D87C B.EQ 0x355DDC4
	0x0355D880 MOV W24, W31
	0x0355D884 MOVZ W28, 0x1
	0x0355D888 MOVZ W27, 0x38
	0x0355D88C LDR X8, [X19 + 0xC8]
	0x0355D890 CBZ X8, 0x355E2B4
	0x0355D894 LDR W9, [X8 + 0x44]
	0x0355D898 ADD W9, W9, 0x1
	0x0355D89C STR W9, [X8 + 0x44]
	0x0355D8A0 LDR X8, [X19 + 0xD8]
	0x0355D8A4 CBZ X8, 0x355E2B4
	0x0355D8A8 LDRB W9, [X31 + 0x3C]
	0x0355D8AC LDR W10, [X8 + 0x18]
	0x0355D8B0 CMP W9, W10
	0x0355D8B4 B.CS 0x355E2B8
	0x0355D8B8 ADD X8, X8, X9, 0x2, LSL
	0x0355D8BC ADD X0, X8, 0x20
	0x0355D8C0 MOVZ W1, 0x1
	0x0355D8C4 MOV X2, X31
	0x0355D8C8 BL 0x33E9064
	0x0355D8CC CMP W0, 0x1
	0x0355D8D0 B.EQ 0x355D8A0
	0x0355D8D4 LDR X26, [X19 + 0xD0]
	0x0355D8D8 CBZ X26, 0x355E2B4
	0x0355D8DC LDRB W22, [X31 + 0x3C]
	0x0355D8E0 LDR W8, [X26 + 0x18]
	0x0355D8E4 CMP W22, W8
	0x0355D8E8 B.CS 0x355E2B8
	0x0355D8EC ADRP X8, 0xBBF000
	0x0355D8F0 LDR X8, [X8 + 0xE18]
	0x0355D8F4 LDR X0, [X8]
	0x0355D8F8 LDR W8, [X0 + 0xE0]
	0x0355D8FC CBNZ W8, 0x355D904
	0x0355D900 BL 0x1C16DFC
	0x0355D904 MADD X8, X22, X27, X26
	0x0355D908 ADD X21, X8, 0x20
	0x0355D90C LDR X8, [X21]
	0x0355D910 CBNZ X8, 0x355D930
	0x0355D914 LDRB W8, [X19 + 0x128]
	0x0355D918 CMP W8, 0x7E
	0x0355D91C B.HI 0x355D930
	0x0355D920 LDRB W1, [X31 + 0x3C]
	0x0355D924 MOV X0, X19
	0x0355D928 MOV X2, X21
	0x0355D92C BL 0x355E2C8
	0x0355D930 ADRP X8, 0xBBF000
	0x0355D934 LDR X8, [X8 + 0xE18]
	0x0355D938 LDR X0, [X8]
	0x0355D93C LDR W8, [X0 + 0xE0]
	0x0355D940 CBNZ W8, 0x355D948
	0x0355D944 BL 0x1C16DFC
	0x0355D948 MADD X20, X22, X27, X26
	0x0355D94C LDRB W8, [X20 + 0x52]!
	0x0355D950 LDRB W9, [X29]
	0x0355D954 CMP W8, W9
	0x0355D958 B.NE 0x355D980
	0x0355D95C ADRP X8, 0xBBF000
	0x0355D960 LDR X8, [X8 + 0xE18]
	0x0355D964 LDR X0, [X8]
	0x0355D968 LDR W8, [X0 + 0xE0]
	0x0355D96C CBNZ W8, 0x355D974
	0x0355D970 BL 0x1C16DFC
	0x0355D974 MADD X8, X22, X27, X26
	0x0355D978 LDRB W8, [X8 + 0x51]
	0x0355D97C TBNZ X8, 0x4, 0x355D9FC
	0x0355D980 LDR W23, [X31 + 0x1C]
	0x0355D984 LDR W1, [X31 + 0x7C]
	0x0355D988 LDR X0, [X31 + 0x10]
	0x0355D98C MOV X3, X31

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+192], X29
	003 Move [X31+208], X30
	004 Move [X31+216], X25
	005 Move [X31+224], X24
	006 Move [X31+232], X23
	007 Move [X31+240], X22
	008 Move [X31+248], X21
	009 Move [X31+256], X20
	010 Move [X31+264], X19
	011 Move X20, 0xE83000
	012 Move W8, [X20+3508]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xBC0000
	019 Move X0, [X0+3608]
	020 Call 0x1C17CF4
	021 Move X0, 0xB97000
	022 Move X0, [X0+3584]
	023 Call 0x1C17CF4
	024 Move X0, 0xBD9000
	025 Move X0, [X0+1872]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+3508], W8
	029 Move X20, [X19+160]
	030 Move [X31+204], W31
	031 Add X1, X31, 204
	032 Move X0, X20
	033 Move X2, X31
	034 Call Monitor.Enter, X0, X1
	035 Move W21, [X19+158]
	036 Call 0x1C17D44
	037 Compare W21, 0
	038 JumpIfEqual {41}
	039 Move X21, X31
	040 Move W22, 3
	041 Call 0x1C17D44
	042 Move W8, 1
	043 Move X21, X31
	044 Move [X19+158], W8
	045 Move W22, 4
	046 Move W8, [X31+204]
	047 Compare W8, 0
	048 JumpIfEqual {52}
	049 Move X0, X20
	050 Move X1, X31
	051 Call Monitor.Exit, X0
	052 Compare X21, 0
	053 JumpIfNotEqual {241}
	054 Or W8, W22, 4
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X21, 0xBC0000
	057 Move X22, 0xBD9000
	058 Move X20, 0xB97000
	059 Move X0, [X19+232]
	060 Move X21, [X21+3608]
	061 Move X22, [X22+1872]
	062 Move X20, [X20+3584]
	063 Compare X0, 0
	064 JumpIfEqual {81}
	065 Move X1, X31
	066 Call EventWaitHandle.Set, X0
	067 Move X0, [X19+216]
	068 Compare X0, 0
	069 JumpIfEqual {204}
	070 Move W2, [X0+24]
	071 Move W1, W31
	072 Move X3, X31
	073 Call Array.Clear, X0, X1, X2
	074 Move X0, [X19+280]
	075 Compare X0, 0
	076 JumpIfEqual {204}
	077 Move W2, [X0+24]
	078 Move W1, W31
	079 Move X3, X31
	080 Call Array.Clear, X0, X1, X2
	081 Move W23, [X19+168]
	082 Call 0x1C17D44
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move W23, [X19+172]
	085 Call 0x1C17D44
	086 Compare W23, 0
	087 JumpIfNotEqual {67}
	088 Move X25, [X19+208]
	089 Compare X25, 0
	090 JumpIfEqual {204}
	091 Move X23, X31
	092 Move W24, 32
	093 Move W8, [X25+24]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X0, [X21]
	096 Move W9, [X0+224]
	097 Compare W9, 0
	098 JumpIfNotEqual {101}
	099 Call 0x1C17DFC
	100 Move W8, [X25+24]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Add X0, X25, X24
	103 Call FrameBuffer.Release, X0
	104 Move X0, [X22]
	105 Move X25, [X19+208]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {111}
	109 Call 0x1C17DFC
	110 Move X0, [X22]
	111 Move X8, [X0+184]
	112 Move X9, [X8+48]
	113 Move V1, [X8+16]
	114 Move V0, [X8+32]
	115 Move V2, [X8]
	116 Move [X31+176], X9
	117 Move [X31+144], V1
	118 Move [X31+152], V0
	119 Move [X31+8], V2
	120 Compare X25, 0
	121 JumpIfEqual {204}
	122 Move V0, [X31+128]
	123 Move V1, [X31+144]
	124 Move V2, [X31+10]
	125 Move X8, [X31+176]
	126 Move [X31+64], V0
	127 Move [X31+72], V1
	128 Move [X31+6], V2
	129 Move [X31+112], X8
	130 Move W8, [X25+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move V2, [X31+80]
	133 Move V0, [X31+96]
	134 Move X8, [X31+112]
	135 Move V1, [X31+4]
	136 Add X9, X25, X24
	137 Move [X9+16], V2
	138 Move [X9+24], V0
	139 Move [X9+48], X8
	140 Move [X9], V1
	141 Move X25, [X19+208]
	142 Add X24, X24, 56
	143 Add X23, X23, 1
	144 Compare X25, 0
	145 JumpIfNotEqual {93}
	146 Move X25, [X19+272]
	147 Compare X25, 0
	148 JumpIfEqual {204}
	149 Move X23, X31
	150 Move W24, 32
	151 Move W8, [X25+24]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X0, [X21]
	154 Move W9, [X0+224]
	155 Compare W9, 0
	156 JumpIfNotEqual {159}
	157 Call 0x1C17DFC
	158 Move W8, [X25+24]
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Add X0, X25, X24
	161 Call FrameBuffer.Release, X0
	162 Move X0, [X22]
	163 Move X25, [X19+272]
	164 Move W8, [X0+224]
	165 Compare W8, 0
	166 JumpIfNotEqual {169}
	167 Call 0x1C17DFC
	168 Move X0, [X22]
	169 Move X8, [X0+184]
	170 Move X9, [X8+48]
	171 Move V1, [X8+16]
	172 Move V0, [X8+32]
	173 Move V2, [X8]
	174 Move [X31+176], X9
	175 Move [X31+144], V1
	176 Move [X31+152], V0
	177 Move [X31+8], V2
	178 Compare X25, 0
	179 JumpIfEqual {204}
	180 Move V0, [X31+128]
	181 Move V1, [X31+144]
	182 Move V2, [X31+10]
	183 Move X8, [X31+176]
	184 Move [X31], V0
	185 Move [X31+8], V1
	186 Move [X31+2], V2
	187 Move [X31+48], X8
	188 Move W8, [X25+24]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move V2, [X31+16]
	191 Move V0, [X31+32]
	192 Move X8, [X31+48]
	193 Move V1, [X31]
	194 Add X9, X25, X24
	195 Move [X9+16], V2
	196 Move [X9+24], V0
	197 Move [X9+48], X8
	198 Move [X9], V1
	199 Move X25, [X19+272]
	200 Add X24, X24, 56
	201 Add X23, X23, 1
	202 Compare X25, 0
	203 JumpIfNotEqual {151}
	204 Call 0x1C17F20
	205 Move X19, [X19+72]
	206 Compare X19, 0
	207 JumpIfEqual {204}
	208 Move X8, [X19]
	209 Move X1, [X20]
	210 NotImplemented "Instruction LDRH not yet implemented."
	211 Compare X9, 0
	212 JumpIfEqual {219}
	213 Move X10, [X8+176]
	214 Add X10, X10, 8
	215 NotImplemented "Instruction LDUR not yet implemented."
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Subtract X9, X9, 1
	218 Add X10, X10, 16
	219 Move X0, X19
	220 Move W2, W31
	221 Call 0x1C5D788
	222 NotImplemented "Instruction LDRSW not yet implemented."
	223 Add X8, X8, X9
	224 Add X0, X8, 312
	225 Move X8, [X0]
	226 Move X1, [X0+8]
	227 Move X0, X19
	228 NotImplemented "Instruction BLR not yet implemented."
	229 Move X20, [X31+256]
	230 Move X19, [X31+264]
	231 Move X22, [X31+240]
	232 Move X21, [X31+248]
	233 Move X24, [X31+224]
	234 Move X23, [X31+232]
	235 Move X30, [X31+208]
	236 Move X25, [X31+216]
	237 Move X29, [X31+192]
	238 Add X31, X31, 272
	239 Return 
	240 Call 0x1C17F28
	241 Move X0, X21
	242 Call 0x1C17F18
	243 Move X22, X0
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Move X0, X22
	246 Call 0x3EB2AD0
	247 Move X21, [X0]
	248 Call 0x3EB2AE0
	249 Move W22, W31
	250 Move X21, X31
	251 Move X22, X0
	252 Move W8, [X31+204]
	253 Compare W8, 0
	254 JumpIfEqual {258}
	255 Move X0, X20
	256 Move X1, X31
	257 Call Monitor.Exit, X0
	258 Compare X21, 0
	259 JumpIfNotEqual {262}
	260 Move X0, X22
	261 Call 0x1D2D690
	262 Move X0, X21
	263 Call 0x1C17F18
	264 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x03560988 CMP W21, 0x1

ISIL:
	001 Return 

