Type: Photon.Voice.DeviceEnumeratorBase

Method: System.Void .ctor(Photon.Voice.ILogger logger)

Disassembly:
	0x03556758 BL 0x1990590
	0x0355675C MOV X1, X31
	0x03556760 B 0x33BDD8C
	0x03556764 STP X30, X21, [X31 - 0x20]!
	0x03556768 STP X20, X19, [X31 + 0x10]
	0x0355676C ADRP X20, 0xE89000
	0x03556770 ADRP X21, 0xBDF000
	0x03556774 LDRB W8, [X20 + 0xD8E]
	0x03556778 LDR X21, [X21 + 0x430]
	0x0355677C MOV X19, X0
	0x03556780 TBNZ X8, 0x0, 0x3556798
	0x03556784 ADRP X0, 0xBDF000
	0x03556788 LDR X0, [X0 + 0x430]
	0x0355678C BL 0x1C16CF4
	0x03556790 MOVZ W8, 0x1
	0x03556794 STRB W8, [X20 + 0xD8E]
	0x03556798 LDR X0, [X21]
	0x0355679C BL 0x1C16F10
	0x035567A0 MOV X1, X19
	0x035567A4 MOV X20, X0
	0x035567A8 BL 0x3555AF8
	0x035567AC MOV X0, X20
	0x035567B0 LDP X20, X19, [X31 + 0x10]
	0x035567B4 LDP X30, X21, [X31], #0x20
	0x035567B8 RET
	0x035567BC STR X30, [X31 - 0x20]!
	0x035567C0 STP X20, X19, [X31 + 0x10]
	0x035567C4 ADRP X19, 0xE89000
	0x035567C8 ADRP X20, 0xBDF000
	0x035567CC LDRB W8, [X19 + 0xD8F]
	0x035567D0 LDR X20, [X20 + 0x438]
	0x035567D4 TBNZ X8, 0x0, 0x35567EC
	0x035567D8 ADRP X0, 0xBDF000
	0x035567DC LDR X0, [X0 + 0x438]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xE8A000
	008 Move X23, 0xBE0000
	009 Move X21, 0xBE0000
	010 Move W8, [X22+3454]
	011 Move X23, [X23+936]
	012 Move X21, [X21+944]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xBE0000
	020 Move X0, [X0+944]
	021 Call 0x1C17CF4
	022 Move X0, 0xBE0000
	023 Move X0, [X0+936]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+3454], W8
	027 Move X0, [X23]
	028 Call 0x1C17F10
	029 Move X1, [X21]
	030 Move X21, X0
	031 Call List`1<DeviceInfo>..ctor, X0
	032 Move X0, X20
	033 Move X1, X31
	034 Move [X20+16], X21
	035 Call Object..ctor, X0
	036 Move [X20+24], X19
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Move X23, [X31+56]
	043 Return 

Method: System.Boolean get_IsSupported()

Disassembly:
	0x035567E0 BL 0x1C16CF4
	0x035567E4 MOVZ W8, 0x1

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.String get_Error()

Disassembly:
	0x035567E8 STRB W8, [X19 + 0xD8F]
	0x035567EC LDR X0, [X20]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_Error(System.String value)

Disassembly:
	0x035567F0 BL 0x1C16F10
	0x035567F4 MOV X1, X31

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Collections.Generic.IEnumerator`1<Photon.Voice.DeviceInfo> GetEnumerator()

Disassembly:
	0x035567F8 MOV X19, X0
	0x035567FC BL 0x33BDD8C
	0x03556800 MOV X0, X19
	0x03556804 LDP X20, X19, [X31 + 0x10]
	0x03556808 LDR X30, [X31], #0x20
	0x0355680C RET
	0x03556810 STR X30, [X31 - 0x40]!
	0x03556814 STP X24, X23, [X31 + 0x10]
	0x03556818 STP X22, X21, [X31 + 0x20]
	0x0355681C STP X20, X19, [X31 + 0x30]
	0x03556820 ADRP X21, 0xE89000
	0x03556824 LDRB W8, [X21 + 0xD90]
	0x03556828 MOV X20, X4
	0x0355682C MOV X19, X0
	0x03556830 TBNZ X8, 0x0, 0x3556854
	0x03556834 ADRP X0, 0xBDF000
	0x03556838 LDR X0, [X0 + 0x440]
	0x0355683C BL 0x1C16CF4
	0x03556840 ADRP X0, 0xBDF000
	0x03556844 LDR X0, [X0 + 0x448]
	0x03556848 BL 0x1C16CF4
	0x0355684C MOVZ W8, 0x1
	0x03556850 STRB W8, [X21 + 0xD90]
	0x03556854 ADRP X21, 0xBDF000
	0x03556858 LDR X21, [X21 + 0x440]
	0x0355685C CBZ X20, 0x35568B0
	0x03556860 ADRP X8, 0xBDF000
	0x03556864 LDR X8, [X8 + 0x448]
	0x03556868 LDR X9, [X20]
	0x0355686C MOV X0, X20
	0x03556870 LDR X1, [X8]
	0x03556874 LDR X8, [X9 + 0x40]
	0x03556878 LDR X9, [X1 + 0x40]
	0x0355687C CMP X8, X9
	0x03556880 B.NE 0x35568EC
	0x03556884 BL 0x1C16E08
	0x03556888 LDRB W22, [X0]
	0x0355688C LDRB W23, [X0 + 0x1]
	0x03556890 LDRB W24, [X0 + 0x2]
	0x03556894 LDR X0, [X21]
	0x03556898 BL 0x1C16F10
	0x0355689C MOV X20, X0
	0x035568A0 AND W2, W22, 0x1
	0x035568A4 AND W3, W23, 0x1
	0x035568A8 AND W4, W24, 0x1
	0x035568AC B 0x35568C8
	0x035568B0 LDR X0, [X21]
	0x035568B4 BL 0x1C16F10
	0x035568B8 MOV X20, X0
	0x035568BC MOVZ W2, 0x1
	0x035568C0 MOVZ W3, 0x1
	0x035568C4 MOVZ W4, 0x1
	0x035568C8 MOV X1, X19
	0x035568CC MOV X5, X31
	0x035568D0 BL 0x356CE34
	0x035568D4 MOV X0, X20
	0x035568D8 LDP X20, X19, [X31 + 0x30]
	0x035568DC LDP X22, X21, [X31 + 0x20]
	0x035568E0 LDP X24, X23, [X31 + 0x10]
	0x035568E4 LDR X30, [X31], #0x40
	0x035568E8 RET
	0x035568EC BL 0x1C171E0
	0x035568F0 MOV X1, X31
	0x035568F4 B 0x33BDD8C
	0x035568F8 STR X30, [X31 - 0x30]!
	0x035568FC STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE8A000
	005 Move W8, [X20+3455]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xBE0000
	012 Move X0, [X0+952]
	013 Call 0x1C17CF4
	014 Move X0, 0xBE0000
	015 Move X0, [X0+960]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3455], W8
	019 Move X19, [X19+16]
	020 Compare X19, 0
	021 JumpIfNotEqual {52}
	022 Move X8, 0xBE0000
	023 Move X8, [X8+952]
	024 Move X19, [X8]
	025 Move X8, [X19+56]
	026 Compare X8, 0
	027 JumpIfNotEqual {31}
	028 Move X0, X19
	029 Call 0x1C5D6E0
	030 Move X8, [X19+56]
	031 Move X0, [X8+16]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X8, [X19+56]
	043 Move X0, [X8+16]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move X8, [X0+184]
	051 Move X19, [X8]
	052 Compare X19, 0
	053 JumpIfEqual {80}
	054 Move X10, 0xBE0000
	055 Move X8, [X19]
	056 Move X10, [X10+960]
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 Move X1, [X10]
	059 Compare X9, 0
	060 JumpIfEqual {67}
	061 Move X10, [X8+176]
	062 Add X10, X10, 8
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Subtract X9, X9, 1
	066 Add X10, X10, 16
	067 Move X0, X19
	068 Move W2, W31
	069 Call 0x1C5D788
	070 NotImplemented "Instruction LDRSW not yet implemented."
	071 Add X8, X8, X9
	072 Add X0, X8, 312
	073 Move X2, [X0]
	074 Move X1, [X0+8]
	075 Move X0, X19
	076 Move X20, [X31+16]
	077 Move X19, [X31+24]
	078 Move X30, [X31+32]
	079 CallNoReturn X2
	080 Call 0x1C17F20

Method: System.Void Refresh()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Action get_OnReady()

Disassembly:
	0x03556900 STP X20, X19, [X31 + 0x20]
	0x03556904 ADRP X21, 0xE89000

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_OnReady(System.Action value)

Disassembly:
	0x03556908 ADRP X22, 0xB9D000
	0x0355690C LDRB W8, [X21 + 0xD91]
	0x03556910 LDR X22, [X22 + 0x638]
	0x03556914 MOV X19, X1
	0x03556918 MOV X20, X0
	0x0355691C TBNZ X8, 0x0, 0x3556934
	0x03556920 ADRP X0, 0xB9D000
	0x03556924 LDR X0, [X0 + 0x638]
	0x03556928 BL 0x1C16CF4

ISIL:
	001 Move [X0+40], X1
	002 Compare X1, 0
	003 JumpIfEqual {11}
	004 Move X8, [X0+16]
	005 Compare X8, 0
	006 JumpIfEqual {11}
	007 Move X2, [X1+24]
	008 Move X0, [X1+64]
	009 Move X1, [X1+40]
	010 CallNoReturn X2
	011 Return 

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x0355692C MOVZ W8, 0x1

ISIL:
	001 Call DeviceEnumeratorBase.GetEnumerator, X0
	002 Return X0

Method: System.Void Dispose()

Disassembly:
	

ISIL:
No ISIL was generated
