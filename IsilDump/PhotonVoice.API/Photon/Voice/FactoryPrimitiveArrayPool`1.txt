Type: Photon.Voice.FactoryPrimitiveArrayPool`1

Method: System.Void .ctor(System.Int32 capacity, System.String name)

Disassembly:
	0x02D11BBC LDR X8, [X1]
	0x02D11BC0 BLR X8
	0x02D11BC4 STR X20, [X19 + 0x18]
	0x02D11BC8 MOV X0, X19
	0x02D11BCC LDP X20, X19, [X31 + 0x10]
	0x02D11BD0 MOV X1, X31
	0x02D11BD4 LDP X30, X21, [X31], #0x20
	0x02D11BD8 B 0x33BDD8C
	0x02D11BDC STP X30, X21, [X31 - 0x20]!
	0x02D11BE0 STP X20, X19, [X31 + 0x10]
	0x02D11BE4 MOV X21, X0
	0x02D11BE8 LDR X0, [X0 + 0x18]
	0x02D11BEC CBZ X0, 0x2D11C60
	0x02D11BF0 LDR X8, [X2 + 0x20]
	0x02D11BF4 MOV X20, X2
	0x02D11BF8 MOV X19, X1
	0x02D11BFC LDR X8, [X8 + 0xC0]
	0x02D11C00 LDR X2, [X8 + 0x18]
	0x02D11C04 BL 0x2AA528C
	0x02D11C08 TBZ X0, 0x0, 0x2D11C18
	0x02D11C0C LDP X20, X19, [X31 + 0x10]
	0x02D11C10 LDP X30, X21, [X31], #0x20
	0x02D11C14 RET
	0x02D11C18 LDR X0, [X21 + 0x10]
	0x02D11C1C CBZ X0, 0x2D11C60
	0x02D11C20 LDR X8, [X20 + 0x20]
	0x02D11C24 LDR X21, [X21 + 0x18]
	0x02D11C28 MOV X1, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W21, W1
	007 Move X1, X31
	008 Move X22, X3
	009 Move X20, X2
	010 Move X19, X0
	011 Call Object..ctor, X0
	012 Move X8, [X22+32]
	013 Move X8, [X8+192]
	014 Move X0, [X8]
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Call 0x1C17F10
	022 Move X8, [X22+32]
	023 Move W1, W21
	024 Move X2, X20
	025 Move X22, X0
	026 Move X8, [X8+192]
	027 Move X3, [X8+8]
	028 Call 0x24B3A08, X0, X1, X2
	029 Move [X19+16], X22
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Return 

Method: System.Void .ctor(System.Int32 capacity, System.String name, System.Int32 info)

Disassembly:
	0x02D11C2C LDR X8, [X8 + 0xC0]
	0x02D11C30 LDR X2, [X8 + 0x28]
	0x02D11C34 BL 0x2EECFD4
	0x02D11C38 CBZ X21, 0x2D11C60
	0x02D11C3C LDR X8, [X20 + 0x20]
	0x02D11C40 MOV X1, X19
	0x02D11C44 LDP X20, X19, [X31 + 0x10]
	0x02D11C48 MOV X2, X0
	0x02D11C4C LDR X8, [X8 + 0xC0]
	0x02D11C50 MOV X0, X21
	0x02D11C54 LDR X3, [X8 + 0x38]
	0x02D11C58 LDP X30, X21, [X31], #0x20
	0x02D11C5C B 0x2AA5084
	0x02D11C60 BL 0x1C16F20
	0x02D11C64 SUB X31, X31, 0x30
	0x02D11C68 STP X30, X21, [X31 + 0x10]
	0x02D11C6C STP X20, X19, [X31 + 0x20]
	0x02D11C70 STR X31, [X31 + 0x8]
	0x02D11C74 MOV X20, X0
	0x02D11C78 LDR X0, [X0 + 0x18]
	0x02D11C7C CBZ X0, 0x2D11CE8
	0x02D11C80 LDR X8, [X2 + 0x20]
	0x02D11C84 MOV X19, X2
	0x02D11C88 ADD X2, X31, 0x8
	0x02D11C8C MOV X21, X1
	0x02D11C90 LDR X8, [X8 + 0xC0]
	0x02D11C94 LDR X3, [X8 + 0x40]
	0x02D11C98 BL 0x2AA6B2C
	0x02D11C9C TBZ X0, 0x0, 0x2D11CD8
	0x02D11CA0 LDR X0, [X20 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W22, W1
	008 Move X1, X31
	009 Move X23, X4
	010 Move W20, W3
	011 Move X21, X2
	012 Move X19, X0
	013 Call Object..ctor, X0
	014 Move X8, [X23+32]
	015 Move X8, [X8+192]
	016 Move X0, [X8]
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Call 0x1C17F10
	024 Move X8, [X23+32]
	025 Move W1, W22
	026 Move X2, X21
	027 Move W3, W20
	028 Move X8, [X8+192]
	029 Move X23, X0
	030 Move X4, [X8+24]
	031 Call 0x24B3A18, X0, X1, X2, X3
	032 Move [X19+16], X23
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Move X23, [X31+56]
	039 Return 

Method: System.Int32 get_Info()

Disassembly:
	0x02D11CA4 CBZ X0, 0x2D11CE8
	0x02D11CA8 LDR X8, [X19 + 0x20]
	0x02D11CAC MOV X1, X21
	0x02D11CB0 LDR X8, [X8 + 0xC0]
	0x02D11CB4 LDR X2, [X8 + 0x50]
	0x02D11CB8 BL 0x2AA64F8
	0x02D11CBC LDR X0, [X20 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+20]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: T[] New()

Disassembly:
	0x02D11CC0 CBZ X0, 0x2D11CE8
	0x02D11CC4 LDR X8, [X19 + 0x20]
	0x02D11CC8 LDR X1, [X31 + 0x8]
	0x02D11CCC LDR X8, [X8 + 0xC0]
	0x02D11CD0 LDR X2, [X8 + 0x58]
	0x02D11CD4 BL 0x2EED4A4
	0x02D11CD8 LDP X20, X19, [X31 + 0x20]
	0x02D11CDC LDP X30, X21, [X31 + 0x10]
	0x02D11CE0 ADD X31, X31, 0x30

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X1+32]
	006 Move X8, [X8+192]
	007 Move X1, [X8+48]
	008 Move X30, [X31+16]
	009 Call ObjectPool`2<Object, Int32>.AcquireOrCreate, X0
	010 Return X0
	011 Call 0x1C17F20

Method: T[] New(System.Int32 size)

Disassembly:
	0x02D11CE4 RET
	0x02D11CE8 BL 0x1C16F20
	0x02D11CEC STR X30, [X31 - 0x30]!
	0x02D11CF0 STP X22, X21, [X31 + 0x10]
	0x02D11CF4 STP X20, X19, [X31 + 0x20]
	0x02D11CF8 LDR X8, [X0 + 0x10]
	0x02D11CFC CBZ X8, 0x2D11D60
	0x02D11D00 LDR X21, [X8 + 0x10]
	0x02D11D04 CBZ X21, 0x2D11D50

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X2+32]
	006 Move X8, [X8+192]
	007 Move X2, [X8+64]
	008 Move X30, [X31+16]
	009 Call ObjectPool`2<Object, Int32>.AcquireOrCreate, X0, X1
	010 Return X0
	011 Call 0x1C17F20

Method: System.Void Free(T[] obj)

Disassembly:
	0x02D11D08 MOV X19, X3
	0x02D11D0C MOV X20, X2
	0x02D11D10 AND W22, W1, 0x1
	0x02D11D14 LDR X8, [X21 + 0x28]
	0x02D11D18 CBZ X8, 0x2D11D60
	0x02D11D1C LDR X9, [X8 + 0x18]
	0x02D11D20 LDR X0, [X8 + 0x40]
	0x02D11D24 LDR X3, [X8 + 0x28]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+456]
	007 Move X2, [X8+464]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Void Free(T[] obj, System.Int32 info)

Disassembly:
	0x02D11D28 MOV W1, W22
	0x02D11D2C MOV X2, X20
	0x02D11D30 BLR X9
	0x02D11D34 LDR X8, [X19 + 0x20]
	0x02D11D38 MOV X0, X21
	0x02D11D3C LDR X8, [X8 + 0xC0]
	0x02D11D40 LDR X1, [X8 + 0x88]
	0x02D11D44 BL 0x2EEA710

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X4, [X8+440]
	007 Move X3, [X8+448]
	008 Move X30, [X31+16]
	009 CallNoReturn X4
	010 Call 0x1C17F20

Method: System.Void Dispose()

Disassembly:
	0x02D11D48 MOV X21, X0
	0x02D11D4C CBNZ X0, 0x2D11D14
	0x02D11D50 LDP X20, X19, [X31 + 0x20]
	0x02D11D54 LDP X22, X21, [X31 + 0x10]
	0x02D11D58 LDR X30, [X31], #0x30
	0x02D11D5C RET
	0x02D11D60 BL 0x1C16F20
	0x02D11D64 STP X30, X21, [X31 - 0x20]!
	0x02D11D68 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X1+32]
	006 Move X8, [X8+192]
	007 Move X1, [X8+88]
	008 Move X30, [X31+16]
	009 Call ObjectPool`2<Object, Int32>.Dispose, X0
	010 Return 
	011 Call 0x1C17F20

