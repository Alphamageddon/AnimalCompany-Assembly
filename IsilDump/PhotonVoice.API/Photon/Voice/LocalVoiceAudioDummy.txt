Type: Photon.Voice.LocalVoiceAudioDummy

Method: Photon.Voice.AudioUtil/IVoiceDetector get_VoiceDetector()

Disassembly:
	0x03560A24 LDR X21, [X0]
	0x03560A28 BL 0x3EB1AE0

ISIL:
	001 Move X0, [X0+264]
	002 Return X0

Method: Photon.Voice.AudioUtil/ILevelMeter get_LevelMeter()

Disassembly:
	0x03560A2C ADRP X8, 0xBD5000
	0x03560A30 LDR X8, [X8 + 0x850]

ISIL:
	001 Move X0, [X0+272]
	002 Return X0

Method: System.Boolean get_VoiceDetectorCalibrating()

Disassembly:
	0x03560A34 ADD X0, X31, 0x90
	0x03560A38 LDR X1, [X8]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void VoiceDetectorCalibrate(System.Int32 durationMs, System.Action`1<System.Single> onCalibrated = null)

Disassembly:
	0x03560A3C BL 0x2BEA130

ISIL:
	001 Return 

Method: System.Void .ctor()

Disassembly:
	0x03560A40 CBZ X21, 0x35606F0
	0x03560A44 MOV X0, X21
	0x03560A48 BL 0x1C16F18
	0x03560A4C MOV X21, X31
	0x03560A50 B 0x3560A58
	0x03560A54 MOV X20, X0
	0x03560A58 ADRP X8, 0xBD5000
	0x03560A5C LDR X8, [X8 + 0x850]
	0x03560A60 LDR X1, [X8]
	0x03560A64 ADD X0, X31, 0x90
	0x03560A68 BL 0x2BEA130
	0x03560A6C CBNZ X21, 0x3560A78
	0x03560A70 MOV X0, X20
	0x03560A74 BL 0x1D2C690
	0x03560A78 MOV X0, X21
	0x03560A7C BL 0x1C16F18
	0x03560A80 BL 0x1990590
	0x03560A84 SUB X31, X31, 0x70
	0x03560A88 STP X30, X27, [X31 + 0x20]
	0x03560A8C STP X26, X25, [X31 + 0x30]
	0x03560A90 STP X24, X23, [X31 + 0x40]
	0x03560A94 STP X22, X21, [X31 + 0x50]
	0x03560A98 STP X20, X19, [X31 + 0x60]
	0x03560A9C ADRP X21, 0xE7F000
	0x03560AA0 ADRP X20, 0xBBC000
	0x03560AA4 LDRB W8, [X21 + 0xDC0]
	0x03560AA8 LDR X20, [X20 + 0xE18]
	0x03560AAC MOV X19, X0
	0x03560AB0 TBNZ X8, 0x0, 0x3560B1C
	0x03560AB4 ADRP X0, 0xB93000
	0x03560AB8 LDR X0, [X0 + 0x9C8]
	0x03560ABC BL 0x1C16CF4
	0x03560AC0 ADRP X0, 0xBBC000
	0x03560AC4 LDR X0, [X0 + 0xE18]
	0x03560AC8 BL 0x1C16CF4
	0x03560ACC ADRP X0, 0xB98000
	0x03560AD0 LDR X0, [X0 + 0x348]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE80000
	007 Move X20, 0xBD6000
	008 Move X21, 0xBD6000
	009 Move W8, [X22+3509]
	010 Move X20, [X20+2064]
	011 Move X21, [X21+2072]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xBD6000
	018 Move X0, [X0+2072]
	019 Call 0x1C17CF4
	020 Move X0, 0xBD6000
	021 Move X0, [X0+2064]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3509], W8
	025 Move X0, X19
	026 Call LocalVoice..ctor, X0
	027 Move X0, [X20]
	028 Call 0x1C17F10
	029 Move X1, X31
	030 Move X20, X0
	031 Call Object..ctor, X0
	032 Move [X19+264], X20
	033 Move X0, [X21]
	034 Call 0x1C17F10
	035 Move X1, X31
	036 Move X20, X0
	037 Call Object..ctor, X0
	038 Move [X19+272], X20
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 

Method: System.Void .cctor()

Disassembly:
	0x03560AD4 BL 0x1C16CF4
	0x03560AD8 ADRP X0, 0xB93000
	0x03560ADC LDR X0, [X0 + 0xAC8]
	0x03560AE0 BL 0x1C16CF4
	0x03560AE4 ADRP X0, 0xBD5000
	0x03560AE8 LDR X0, [X0 + 0x908]
	0x03560AEC BL 0x1C16CF4
	0x03560AF0 ADRP X0, 0xBBD000
	0x03560AF4 LDR X0, [X0 + 0x3A8]
	0x03560AF8 BL 0x1C16CF4
	0x03560AFC ADRP X0, 0xBD5000
	0x03560B00 LDR X0, [X0 + 0x910]
	0x03560B04 BL 0x1C16CF4
	0x03560B08 ADRP X0, 0xBBF000
	0x03560B0C LDR X0, [X0 + 0x320]
	0x03560B10 BL 0x1C16CF4
	0x03560B14 MOVZ W8, 0x1
	0x03560B18 STRB W8, [X21 + 0xDC0]
	0x03560B1C LDR X0, [X20]
	0x03560B20 STP X31, X31, [X31 + 0x10]
	0x03560B24 STR W31, [X31 + 0xC]
	0x03560B28 ADRP X23, 0xB93000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xE80000
	005 Move X20, 0xBD6000
	006 Move W8, [X19+3510]
	007 Move X20, [X20+2080]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xBD6000
	013 Move X0, [X0+2080]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3510], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Call LocalVoiceAudioDummy..ctor, X0
	021 Move X8, [X20]
	022 Move X8, [X8+184]
	023 Move [X8], X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return 

