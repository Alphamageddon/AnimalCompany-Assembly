Type: Photon.Voice.VoiceClient/<get_RemoteVoiceInfos>d__76

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x035613FC ADRP X19, 0xBD4000
	0x03561400 LDR X1, [X8]
	0x03561404 LDR X20, [X20 + 0x858]
	0x03561408 LDR X19, [X19 + 0x850]
	0x0356140C ADD X8, X31, 0x0
	0x03561410 BL 0x29D395C
	0x03561414 LDR X1, [X20]
	0x03561418 ADD X0, X31, 0x0
	0x0356141C BL 0x2BEA018
	0x03561420 TBZ X0, 0x0, 0x356143C
	0x03561424 LDR X0, [X31 + 0x18]
	0x03561428 CBZ X0, 0x3561458
	0x0356142C LDR X8, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+32], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x03567094 LDRB W8, [X22 + 0xDEE]
	0x03567098 MOV X20, X0
	0x0356709C TBNZ X8, 0x0, 0x35670B4
	0x035670A0 ADRP X0, 0xBB4000
	0x035670A4 LDR X0, [X0 + 0x850]
	0x035670A8 BL 0x1C16CF4
	0x035670AC MOVZ W8, 0x1
	0x035670B0 STRB W8, [X22 + 0xDEE]
	0x035670B4 LDR X8, [X19 + 0x10]
	0x035670B8 LDR V0, [X19]
	0x035670BC MOVZ W10, 0x1
	0x035670C0 MOV X0, X20
	0x035670C4 STR X8, [X31 + 0x50]
	0x035670C8 STR V0, [X31 + 0x4]
	0x035670CC LDR W8, [X19 + 0x24]
	0x035670D0 LDUR X9, [X19 + 0x1C]
	0x035670D4 LDR W22, [X19 + 0x18]
	0x035670D8 MOV X1, X31
	0x035670DC STR W8, [X31 + 0x38]
	0x035670E0 STR X9, [X31 + 0x30]
	0x035670E4 STR W10, [X20 + 0x60]
	0x035670E8 BL 0x33BDD8C
	0x035670EC LDR V0, [X31 + 0x4]
	0x035670F0 LDR X8, [X31 + 0x50]
	0x035670F4 STR W22, [X20 + 0x28]
	0x035670F8 MOV X23, X20
	0x035670FC STR V0, [X20 + 0x1]
	0x03567100 STR X8, [X20 + 0x20]
	0x03567104 LDR X8, [X31 + 0x30]
	0x03567108 LDR W9, [X31 + 0x38]
	0x0356710C MOVI V0.2D, 0x0
	0x03567110 STR V0, [X23 + 0x38]!
	0x03567114 STR V0, [X23 + 0x1]
	0x03567118 STP W22, W31, [X23 + 0x20]
	0x0356711C STUR W9, [X23 - 0x4]
	0x03567120 STUR X8, [X23 - 0xC]
	0x03567124 STR X21, [X23 + 0x30]
	0x03567128 LDR W8, [X19 + 0x18]
	0x0356712C CMP W8, 0x1
	0x03567130 B.LT 0x3567220
	0x03567134 ADRP X24, 0xBB4000
	0x03567138 LDR X24, [X24 + 0x850]
	0x0356713C ADD X9, X19, 0x14
	0x03567140 ADD X8, X19, 0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+16]
	006 Move X19, X0
	007 And W9, W8, 0xFFFFFFFE
	008 Add W31, W9, 4
	009 Add W31, W8, 4
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X0, X19
	012 Call <get_RemoteVoiceInfos>d__76.<>m__Finally2, X0
	013 Move X0, X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Move X21, [X31+40]
	018 Call <get_RemoteVoiceInfos>d__76.<>m__Finally1, X0
	019 Return 
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X21, X0
	022 Move X0, X21
	023 Call 0x3EB2AD0
	024 Move X20, [X0]
	025 Call 0x3EB2AE0
	026 Move X0, X19
	027 Call <get_RemoteVoiceInfos>d__76.<>m__Finally1, X0
	028 Compare X20, 0
	029 JumpIfNotEqual {36}
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return 
	035 Move X20, X31
	036 Move X0, X20
	037 Call 0x1C17F18
	038 Move X21, X0
	039 Move X0, X19
	040 Call <get_RemoteVoiceInfos>d__76.<>m__Finally1, X0
	041 Compare X20, 0
	042 JumpIfNotEqual {45}
	043 Move X0, X21
	044 Call 0x1D2D690
	045 Move X0, X20
	046 Call 0x1C17F18
	047 Call 0x1991590

Method: System.Boolean MoveNext()

Disassembly:
	0x03567144 STP X8, X9, [X31 + 0x20]
	0x03567148 ADD X9, X19, 0xC
	0x0356714C ADD X8, X20, 0x50
	0x03567150 ADRP X25, 0xFFFFFFFFFD62F000
	0x03567154 ADRP X27, 0xFFFFFFFFFD62F000
	0x03567158 MOV W21, W31
	0x0356715C ADD X26, X19, 0x8
	0x03567160 STP X8, X9, [X31 + 0x10]
	0x03567164 ADD X8, X20, 0x48
	0x03567168 ADD X20, X20, 0x40
	0x0356716C ADD X25, X25, 0xDCA
	0x03567170 ADD X27, X27, 0xDC6
	0x03567174 STR X8, [X31 + 0x8]
	0x03567178 CMP W21, 0x3
	0x0356717C MOV W28, W21
	0x03567180 B.HI 0x3567218
	0x03567184 ADR X9, 0x14
	0x03567188 LDRB W8, [X27, X28, LSL]
	0x0356718C ADD X9, X9, X8, 0x2, LSL
	0x03567190 MOV X8, X26
	0x03567194 BR X9
	0x03567198 LDR X8, [X31 + 0x18]
	0x0356719C B 0x35671AC
	0x035671A0 LDR X8, [X31 + 0x20]
	0x035671A4 B 0x35671AC
	0x035671A8 LDR X8, [X31 + 0x28]
	0x035671AC LDR W29, [X8]
	0x035671B0 LDR X0, [X24]
	0x035671B4 LDR W22, [X19 + 0x4]
	0x035671B8 LDR W8, [X0 + 0xE0]
	0x035671BC CBNZ W8, 0x35671C4
	0x035671C0 BL 0x1C16DFC
	0x035671C4 MUL W0, W22, W29
	0x035671C8 MOV X1, X31
	0x035671CC BL 0x32C098C
	0x035671D0 CMP W21, 0x3
	0x035671D4 B.HI 0x3567204
	0x035671D8 ADR X9, 0x14
	0x035671DC LDRB W8, [X25, X28, LSL]
	0x035671E0 ADD X9, X9, X8, 0x2, LSL
	0x035671E4 MOV X8, X23
	0x035671E8 BR X9
	0x035671EC MOV X8, X20
	0x035671F0 B 0x3567200
	0x035671F4 LDR X8, [X31 + 0x8]
	0x035671F8 B 0x3567200
	0x035671FC LDR X8, [X31 + 0x10]
	0x03567200 STR X0, [X8]
	0x03567204 LDR W8, [X19 + 0x18]
	0x03567208 ADD W21, W21, 0x1
	0x0356720C CMP W21, W8
	0x03567210 B.LT 0x3567178
	0x03567214 B 0x3567220
	0x03567218 MOV W29, W31
	0x0356721C B 0x35671B0
	0x03567220 LDR X8, [X31]
	0x03567224 LDR X8, [X8 + 0x28]
	0x03567228 LDR X9, [X31 + 0x58]
	0x0356722C CMP X8, X9
	0x03567230 B.NE 0x3567254
	0x03567234 LDP X20, X19, [X31 + 0xB0]
	0x03567238 LDP X22, X21, [X31 + 0xA0]
	0x0356723C LDP X24, X23, [X31 + 0x90]
	0x03567240 LDP X26, X25, [X31 + 0x80]
	0x03567244 LDP X28, X27, [X31 + 0x70]
	0x03567248 LDP X29, X30, [X31 + 0x60]
	0x0356724C ADD X31, X31, 0xC0
	0x03567250 RET
	0x03567254 BL 0x3EB1B20
	0x03567258 STP X30, X19, [X31 - 0x10]!
	0x0356725C LDR X9, [X0 + 0x68]
	0x03567260 LDR X8, [X0]
	0x03567264 MOV X19, X0
	0x03567268 CBZ X9, 0x3567294
	0x0356726C LDP X9, X1, [X8 + 0x178]
	0x03567270 MOV X0, X19
	0x03567274 BLR X9
	0x03567278 LDR X0, [X19 + 0x68]
	0x0356727C CBZ X0, 0x35672A4
	0x03567280 LDR X8, [X0]
	0x03567284 MOV X1, X19
	0x03567288 LDP X3, X2, [X8 + 0x1C8]
	0x0356728C LDP X30, X19, [X31], #0x10
	0x03567290 BR X3
	0x03567294 LDP X2, X1, [X8 + 0x198]
	0x03567298 MOV X0, X19
	0x0356729C LDP X30, X19, [X31], #0x10
	0x035672A0 BR X2
	0x035672A4 BL 0x1C16F20
	0x035672A8 STP X30, X27, [X31 - 0x50]!
	0x035672AC STP X26, X25, [X31 + 0x10]
	0x035672B0 STP X24, X23, [X31 + 0x20]
	0x035672B4 STP X22, X21, [X31 + 0x30]
	0x035672B8 STP X20, X19, [X31 + 0x40]
	0x035672BC ADRP X20, 0xE78000
	0x035672C0 LDRB W8, [X20 + 0xDEF]
	0x035672C4 MOV X19, X0
	0x035672C8 TBNZ X8, 0x0, 0x35672E0
	0x035672CC ADRP X0, 0xBB4000
	0x035672D0 LDR X0, [X0 + 0x850]
	0x035672D4 BL 0x1C16CF4
	0x035672D8 MOVZ W8, 0x1
	0x035672DC STRB W8, [X20 + 0xDEF]
	0x035672E0 LDR W8, [X19 + 0x28]
	0x035672E4 CMP W8, 0x1
	0x035672E8 B.LT 0x3567380
	0x035672EC ADRP X22, 0xBB4000
	0x035672F0 LDR X22, [X22 + 0x850]
	0x035672F4 ADRP X27, 0xFFFFFFFFFD62F000
	0x035672F8 MOV W21, W31
	0x035672FC ADD X23, X19, 0x50
	0x03567300 ADD X24, X19, 0x38
	0x03567304 ADD X25, X19, 0x48
	0x03567308 ADD X26, X19, 0x40
	0x0356730C ADD X27, X27, 0xDBA
	0x03567310 CMP W21, 0x3
	0x03567314 B.HI 0x3567378
	0x03567318 MOV W8, W21
	0x0356731C ADR X9, 0x14
	0x03567320 LDRB W10, [X27, X8, LSL]
	0x03567324 ADD X9, X9, X10, 0x2, LSL
	0x03567328 MOV X8, X24
	0x0356732C BR X9
	0x03567330 MOV X8, X26
	0x03567334 B 0x3567344
	0x03567338 MOV X8, X25
	0x0356733C B 0x3567344
	0x03567340 MOV X8, X23
	0x03567344 LDR X20, [X8]
	0x03567348 LDR X0, [X22]
	0x0356734C LDR W8, [X0 + 0xE0]
	0x03567350 CBNZ W8, 0x3567358
	0x03567354 BL 0x1C16DFC
	0x03567358 MOV X0, X20
	0x0356735C MOV X1, X31
	0x03567360 BL 0x32C1064
	0x03567364 LDR W8, [X19 + 0x28]
	0x03567368 ADD W21, W21, 0x1
	0x0356736C CMP W21, W8
	0x03567370 B.LT 0x3567310
	0x03567374 B 0x3567380
	0x03567378 MOV X20, X31
	0x0356737C B 0x3567348
	0x03567380 LDP X20, X19, [X31 + 0x40]
	0x03567384 LDP X22, X21, [X31 + 0x30]
	0x03567388 LDP X24, X23, [X31 + 0x20]
	0x0356738C LDP X26, X25, [X31 + 0x10]
	0x03567390 LDP X30, X27, [X31], #0x50
	0x03567394 RET
	0x03567398 SUB X31, X31, 0xC0
	0x0356739C STP X29, X30, [X31 + 0x60]
	0x035673A0 STP X28, X27, [X31 + 0x70]
	0x035673A4 STP X26, X25, [X31 + 0x80]
	0x035673A8 STP X24, X23, [X31 + 0x90]
	0x035673AC STP X22, X21, [X31 + 0xA0]
	0x035673B0 STP X20, X19, [X31 + 0xB0]
	0x035673B4 MRS X8, 0xC000
	0x035673B8 STR X8, [X31]
	0x035673BC LDR X8, [X8 + 0x28]
	0x035673C0 ADRP X23, 0xE78000
	0x035673C4 ADRP X25, 0xBCE000
	0x035673C8 ADRP X22, 0xBCE000
	0x035673CC STR X8, [X31 + 0x58]
	0x035673D0 LDRB W8, [X23 + 0xDF0]
	0x035673D4 LDR X25, [X25 + 0xC70]
	0x035673D8 LDR X22, [X22 + 0xC78]
	0x035673DC MOV X19, X2
	0x035673E0 MOV X21, X1
	0x035673E4 MOV X20, X0
	0x035673E8 TBNZ X8, 0x0, 0x3567418
	0x035673EC ADRP X0, 0xBCE000
	0x035673F0 LDR X0, [X0 + 0xC70]
	0x035673F4 BL 0x1C16CF4
	0x035673F8 ADRP X0, 0xB8C000
	0x035673FC LDR X0, [X0 + 0x618]
	0x03567400 BL 0x1C16CF4
	0x03567404 ADRP X0, 0xBCE000
	0x03567408 LDR X0, [X0 + 0xC78]
	0x0356740C BL 0x1C16CF4
	0x03567410 MOVZ W8, 0x1
	0x03567414 STRB W8, [X23 + 0xDF0]
	0x03567418 MOV X23, X19
	0x0356741C LDR V0, [X19]
	0x03567420 LDR X8, [X23 + 0x10]!
	0x03567424 MOVZ W10, 0x1
	0x03567428 MOV X0, X20
	0x0356742C STR V0, [X31 + 0x4]
	0x03567430 STR X8, [X31 + 0x50]
	0x03567434 LDR W8, [X19 + 0x24]
	0x03567438 LDUR X9, [X19 + 0x1C]
	0x0356743C LDR W26, [X19 + 0x18]
	0x03567440 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+160], X30
	003 Move [X31+168], X0
	004 Move [X31+176], X22
	005 Move [X31+184], X21
	006 Move [X31+192], X20
	007 Move [X31+200], X19
	008 Move X20, 0xE79000
	009 Move W8, [X20+3551]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {50}
	015 Move X0, 0xBCF000
	016 Move X0, [X0+2224]
	017 Call 0x1C17CF4
	018 Move X0, 0xBCF000
	019 Move X0, [X0+2232]
	020 Call 0x1C17CF4
	021 Move X0, 0xBCF000
	022 Move X0, [X0+2256]
	023 Call 0x1C17CF4
	024 Move X0, 0xBCF000
	025 Move X0, [X0+2264]
	026 Call 0x1C17CF4
	027 Move X0, 0xBCF000
	028 Move X0, [X0+2272]
	029 Call 0x1C17CF4
	030 Move X0, 0xBCF000
	031 Move X0, [X0+2280]
	032 Call 0x1C17CF4
	033 Move X0, 0xBCF000
	034 Move X0, [X0+2808]
	035 Call 0x1C17CF4
	036 Move X0, 0xBCF000
	037 Move X0, [X0+3112]
	038 Call 0x1C17CF4
	039 Move X0, 0xBCF000
	040 Move X0, [X0+2288]
	041 Call 0x1C17CF4
	042 Move X0, 0xBCF000
	043 Move X0, [X0+2296]
	044 Call 0x1C17CF4
	045 Move X0, 0xBCF000
	046 Move X0, [X0+3120]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X20+3551], W8
	050 Add X8, X31, 168
	051 Move [X31+152], X8
	052 Move W8, [X19+16]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Compare W8, 0
	055 JumpIfNotEqual {91}
	056 Move X8, [X19+40]
	057 Move TEMP, 0
	058 Not TEMP
	059 Move W9, TEMP
	060 Move [X19+16], W9
	061 Compare X8, 0
	062 JumpIfEqual {89}
	063 Move X0, [X8+136]
	064 Compare X0, 0
	065 JumpIfEqual {90}
	066 Move X8, 0xBCF000
	067 Move X8, [X8+2224]
	068 Move X1, [X8]
	069 Add X8, X31, 104
	070 Call Dictionary`2<Int32, Object>.GetEnumerator, X0
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 Move X9, [X31+136]
	074 Move X8, [X31+168]
	075 Move TEMP, 2
	076 Not TEMP
	077 Move W10, TEMP
	078 Move [X31+48], V0
	079 Move [X31+56], V1
	080 Move [X31+80], X9
	081 Move [X8+80], X9
	082 Move [X8+48], V0
	083 Move [X8+56], V1
	084 Move [X8+16], W10
	085 Move TEMP, 3
	086 Not TEMP
	087 Move W8, TEMP
	088 Move [X19+16], W8
	089 Call 0x1C17F20
	090 Call 0x1C17F20
	091 Move W0, W31
	092 Move X9, [X8+64]
	093 Move X0, [X8+72]
	094 Move [X8+88], X9
	095 Move [X8+96], X0
	096 Compare X0, 0
	097 JumpIfEqual {198}
	098 Move X8, 0xBCF000
	099 Move X8, [X8+2232]
	100 Move X1, [X8]
	101 Add X8, X31, 104
	102 Call Dictionary`2<Byte, Object>.GetEnumerator, X0
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 Move X8, [X31+136]
	106 Move X19, [X31+168]
	107 Move TEMP, 3
	108 Not TEMP
	109 Move W9, TEMP
	110 Move [X31+48], V0
	111 Move [X31+56], V1
	112 Move [X31+80], X8
	113 Move [X19+136], X8
	114 Move [X19+120], V1
	115 Move [X19+104], V0
	116 Move [X19+16], W9
	117 Move X8, 0xBCF000
	118 Move X8, [X8+2264]
	119 Add X0, X19, 104
	120 Move X1, [X8]
	121 Call Enumerator<Byte, Object>.MoveNext, X0
	122 Move W8, W0
	123 Move X0, [X31+168]
	124 Move TEMP, X8
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {153}
	128 Call <get_RemoteVoiceInfos>d__76.<>m__Finally2, X0
	129 Move X8, [X31+168]
	130 NotImplemented "Instruction MOVI not yet implemented."
	131 Move [X8+136], X31
	132 Move [X8+120], V0
	133 Move [X8+104], V0
	134 Move [X8+88], V0
	135 Move X9, 0xBCF000
	136 Move X9, [X9+2256]
	137 Add X0, X8, 48
	138 Move X1, [X9]
	139 Call Enumerator<Int32, Object>.MoveNext, X0
	140 Move X8, [X31+168]
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfEqual {92}
	145 Move X0, X8
	146 Call <get_RemoteVoiceInfos>d__76.<>m__Finally1, X0
	147 Move X8, [X31+168]
	148 Move W0, W31
	149 NotImplemented "Instruction MOVI not yet implemented."
	150 Move [X8+80], X31
	151 Move [X8+48], V0
	152 Move [X8+56], V0
	153 Move X8, [X0+128]
	154 Compare X8, 0
	155 JumpIfEqual {199}
	156 Move W21, [X8+144]
	157 Move V2, [X8+32]
	158 Move V0, [X8+48]
	159 Move V1, [X8+1]
	160 Move X8, 0xBCF000
	161 Move W20, [X0+120]
	162 Move W22, [X0+88]
	163 Move X8, [X8+3120]
	164 Move [X31+64], V2
	165 Move [X31+72], V0
	166 Move [X31+3], V1
	167 Move X0, [X8]
	168 Call 0x1C17F10
	169 Move V0, [X31+48]
	170 Move V1, [X31+64]
	171 Move V2, [X31+5]
	172 Move X19, X0
	173 Move [X31], V0
	174 Move [X31+8], V1
	175 Move [X31+2], V2
	176 Move X1, X31
	177 Call Object..ctor, X0
	178 Move [X19+64], W21
	179 Move [X19+68], W22
	180 Move [X19+72], W20
	181 Move V1, [X31+16]
	182 Move V0, [X31+32]
	183 Move V2, [X31]
	184 Move W0, 1
	185 Move [X19+32], V1
	186 Move [X19+40], V0
	187 Move [X19+1], V2
	188 Move X8, [X31+168]
	189 Move [X8+24], X19
	190 Move [X8+16], W0
	191 Move X20, [X31+192]
	192 Move X19, [X31+200]
	193 Move X22, [X31+176]
	194 Move X21, [X31+184]
	195 Move X30, [X31+160]
	196 Add X31, X31, 208
	197 Return X0
	198 Call 0x1C17F20
	199 Call 0x1C17F20
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Call 0x3EB2AD0
	202 Move X19, [X0]
	203 Move [X31+144], X19
	204 Call 0x3EB2AE0
	205 Compare X19, 0
	206 JumpIfEqual {91}
	207 Add X8, X31, 144
	208 Add X0, X8, 8
	209 Call 0x1BC1980
	210 Move X0, X19
	211 Call 0x1C17F18
	212 Compare X19, 0
	213 JumpIfNotEqual {215}
	214 Call 0x1D2D690
	215 Move X0, [X31+168]
	216 Call <get_RemoteVoiceInfos>d__76.System.IDisposable.Dispose, X0
	217 Move X0, X19
	218 Call 0x1C17F18
	219 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x035674E4 ADD X26, X19, 0x8
	0x035674E8 STP X8, X9, [X31 + 0x10]
	0x035674EC ADD X8, X20, 0x40
	0x035674F0 MOVZ W28, 0x20
	0x035674F4 ADD X29, X29, 0xDD2
	0x035674F8 ADD X22, X22, 0xDCE
	0x035674FC STR X8, [X31 + 0x8]
	0x03567500 LDR X27, [X20 + 0x78]
	0x03567504 CMP W21, 0x3
	0x03567508 B.HI 0x35675E4
	0x0356750C AND X8, X21, 0x0
	0x03567510 ADR X9, 0x14
	0x03567514 LDRB W10, [X22, X8, LSL]
	0x03567518 ADD X9, X9, X10, 0x2, LSL
	0x0356751C MOV X8, X26
	0x03567520 BR X9
	0x03567524 LDR X8, [X31 + 0x28]
	0x03567528 B 0x3567538
	0x0356752C MOV X8, X23
	0x03567530 B 0x3567538

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE79000
	006 Move X20, 0xBCF000
	007 Move W8, [X21+3552]
	008 Move X20, [X20+2240]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xBCF000
	015 Move X0, [X0+2240]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3552], W8
	019 Move TEMP, 0
	020 Not TEMP
	021 Move W8, TEMP
	022 Move [X19+16], W8
	023 Move X1, [X20]
	024 Add X0, X19, 48
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Enumerator<Int32, Object>.Dispose, X0
	030 Return 

Method: System.Void <>m__Finally2()

Disassembly:
	0x03567494 LDR X0, [X25]
	0x03567498 BL 0x1C16D6C
	0x0356749C STR X0, [X24 + 0x40]
	0x035674A0 LDR W1, [X19 + 0x18]
	0x035674A4 LDR X0, [X22]
	0x035674A8 BL 0x1C16D6C
	0x035674AC STR X0, [X24 + 0x38]
	0x035674B0 LDR W8, [X19 + 0x18]
	0x035674B4 CMP W8, 0x1
	0x035674B8 B.LT 0x3567610
	0x035674BC ADRP X25, 0xB8C000
	0x035674C0 LDR X25, [X25 + 0x618]
	0x035674C4 ADD X9, X19, 0xC
	0x035674C8 ADD X8, X19, 0x14
	0x035674CC STP X8, X9, [X31 + 0x20]
	0x035674D0 ADD X9, X20, 0x50
	0x035674D4 ADD X8, X20, 0x48
	0x035674D8 ADRP X29, 0xFFFFFFFFFD62F000
	0x035674DC ADRP X22, 0xFFFFFFFFFD62F000
	0x035674E0 MOV X21, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE79000
	006 Move X20, 0xBCF000
	007 Move W8, [X21+3553]
	008 Move X20, [X20+2248]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xBCF000
	015 Move X0, [X0+2248]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3553], W8
	019 Move TEMP, 2
	020 Not TEMP
	021 Move W8, TEMP
	022 Move [X19+16], W8
	023 Move X1, [X20]
	024 Add X0, X19, 104
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Enumerator<Byte, Object>.Dispose, X0
	030 Return 

Method: Photon.Voice.RemoteVoiceInfo System.Collections.Generic.IEnumerator<Photon.Voice.RemoteVoiceInfo>.get_Current()

Disassembly:
	0x03567534 LDR X8, [X31 + 0x20]
	0x03567538 LDR W8, [X8]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x0356753C LDR W9, [X19 + 0x4]
	0x03567540 LDR X0, [X25]
	0x03567544 MUL W1, W9, W8
	0x03567548 BL 0x1C16D6C
	0x0356754C CBZ X27, 0x3567644
	0x03567550 LDR W8, [X27 + 0x18]
	0x03567554 CMP X21, X8
	0x03567558 B.CS 0x3567648
	0x0356755C STR X0, [X27, X28, LSL]
	0x03567560 LDR X8, [X20 + 0x78]
	0x03567564 CBZ X8, 0x3567644
	0x03567568 LDR W9, [X8 + 0x18]
	0x0356756C CMP X21, X9
	0x03567570 B.CS 0x3567648

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xB8D000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xBCF000
	011 Move X0, [X0+3128]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x03567574 LDR X0, [X8, X28, LSL]
	0x03567578 LDR X27, [X20 + 0x70]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Collections.Generic.IEnumerator`1<Photon.Voice.RemoteVoiceInfo> System.Collections.Generic.IEnumerable<Photon.Voice.RemoteVoiceInfo>.GetEnumerator()

Disassembly:
	0x0356757C MOVZ W1, 0x3
	0x03567580 MOV X2, X31
	0x03567584 BL 0x32C0780
	0x03567588 CBZ X27, 0x3567644
	0x0356758C LDR W8, [X27 + 0x18]
	0x03567590 CMP X21, X8
	0x03567594 B.CS 0x3567648
	0x03567598 STR X0, [X27, X28, LSL]
	0x0356759C LDR X8, [X20 + 0x70]
	0x035675A0 CBZ X8, 0x3567644
	0x035675A4 LDR W9, [X8 + 0x18]
	0x035675A8 CMP X21, X9
	0x035675AC B.CS 0x3567648
	0x035675B0 ADD X0, X8, X28
	0x035675B4 MOV X1, X31
	0x035675B8 BL 0x32C0690
	0x035675BC CMP W21, 0x3
	0x035675C0 B.HI 0x35675FC
	0x035675C4 AND X8, X21, 0x0
	0x035675C8 ADR X9, 0x14
	0x035675CC LDRB W10, [X29, X8, LSL]
	0x035675D0 ADD X9, X9, X10, 0x2, LSL
	0x035675D4 MOV X8, X24
	0x035675D8 BR X9
	0x035675DC LDR X8, [X31 + 0x8]
	0x035675E0 B 0x35675F8
	0x035675E4 MOV W8, W31
	0x035675E8 B 0x356753C
	0x035675EC LDR X8, [X31 + 0x10]
	0x035675F0 B 0x35675F8
	0x035675F4 LDR X8, [X31 + 0x18]
	0x035675F8 STR X0, [X8]
	0x035675FC LDRSW X8, [X19 + 0x18]
	0x03567600 ADD X21, X21, 0x1
	0x03567604 ADD X28, X28, 0x8
	0x03567608 CMP X21, X8
	0x0356760C B.LT 0x3567500
	0x03567610 LDR X8, [X31]
	0x03567614 LDR X8, [X8 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE79000
	005 Move W8, [X20+3554]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xBCF000
	012 Move X0, [X0+2216]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3554], W8
	016 Move W8, [X19+16]
	017 Add W31, W8, 2
	018 Move W20, [X19+32]
	019 Move X0, X31
	020 Call Environment.get_CurrentManagedThreadId
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X19+16], W31
	023 Move X8, 0xBCF000
	024 Move X8, [X8+2216]
	025 Move X0, [X8]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X20, X0
	029 Call Object..ctor, X0
	030 Move X0, X31
	031 Move [X20+16], W31
	032 Call Environment.get_CurrentManagedThreadId
	033 Move [X20+32], W0
	034 Move X8, [X19+40]
	035 Move X19, X20
	036 Move [X20+40], X8
	037 Move X0, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x03567618 LDR X9, [X31 + 0x58]

ISIL:
	001 Call <get_RemoteVoiceInfos>d__76.System.Collections.Generic.IEnumerable<Photon.Voice.RemoteVoiceInfo>.GetEnumerator, X0
	002 Return X0

