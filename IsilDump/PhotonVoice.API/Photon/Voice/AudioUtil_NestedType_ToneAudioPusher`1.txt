Type: Photon.Voice.AudioUtil/ToneAudioPusher`1

Method: System.Void .ctor(System.Int32 frequency = 440, System.Int32 bufSizeMs = 100, System.Int32 samplingRate = 48000, System.Int32 channels = 1)

Disassembly:
	0x026F5A9C LDR X8, [X0 + 0xC0]
	0x026F5AA0 LDR X0, [X8 + 0x38]
	0x026F5AA4 BL 0x2D0D6C4
	0x026F5AA8 CBZ X0, 0x26F5B50
	0x026F5AAC MOV X22, X0
	0x026F5AB0 LDR X0, [X19 + 0x20]
	0x026F5AB4 LDRB W8, [X0 + 0x135]
	0x026F5AB8 TBNZ X8, 0x0, 0x26F5AC0
	0x026F5ABC BL 0x1C5C684
	0x026F5AC0 LDR X0, [X22 + 0x88]
	0x026F5AC4 CBZ X0, 0x26F5B50
	0x026F5AC8 ADRP X9, 0x1A28000
	0x026F5ACC LDR X9, [X9 + 0x7F0]
	0x026F5AD0 LDR W10, [X0 + 0x1C]
	0x026F5AD4 LDR X8, [X0 + 0x10]
	0x026F5AD8 LDR X9, [X9]
	0x026F5ADC ADD W10, W10, 0x1
	0x026F5AE0 STR W10, [X0 + 0x1C]
	0x026F5AE4 CBZ X8, 0x26F5B50
	0x026F5AE8 LDRSW X10, [X0 + 0x18]
	0x026F5AEC LDR W11, [X8 + 0x18]
	0x026F5AF0 CMP W10, W11
	0x026F5AF4 B.CS 0x26F5B0C
	0x026F5AF8 ADD W9, W10, 0x1
	0x026F5AFC ADD X8, X8, X10, 0x4, LSL

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X9, [X5+32]
	005 Move W8, W4
	006 Move W19, W1
	007 Move W1, W2
	008 Move X9, [X9+192]
	009 Move W2, W3
	010 Move W3, W8
	011 Move X20, X0
	012 Move X4, [X9]
	013 Call 0x2D44140, X0, X1, X2, X3
	014 Compare X20, 0
	015 JumpIfEqual {28}
	016 Move X8, -29384704
	017 Move V0, [X8+1144]
	018 Move W8, [X20+56]
	019 NotImplemented "Instruction SCVTF not yet implemented."
	020 Multiply D0, D1, D0
	021 NotImplemented "Instruction SCVTF not yet implemented."
	022 NotImplemented "Instruction FDIV not yet implemented."
	023 Move [X20+72], D0
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return 
	028 Call 0x1C17F20

Method: System.Int32 Gen(T[] buf, System.Int64 timeSamples)

Disassembly:
	0x026F5B00 STR W9, [X0 + 0x18]
	0x026F5B04 STP X21, X20, [X8 + 0x20]
	0x026F5B08 B 0x26F5B24
	0x026F5B0C LDR X8, [X9 + 0x20]
	0x026F5B10 MOV X1, X21
	0x026F5B14 MOV X2, X20
	0x026F5B18 LDR X8, [X8 + 0xC0]
	0x026F5B1C LDR X3, [X8 + 0x70]
	0x026F5B20 BL 0x30653AC
	0x026F5B24 LDR X0, [X19 + 0x20]
	0x026F5B28 LDRB W8, [X0 + 0x135]
	0x026F5B2C TBNZ X8, 0x0, 0x26F5B34
	0x026F5B30 BL 0x1C5C684
	0x026F5B34 STR D8, [X22 + 0x90]
	0x026F5B38 MOV X0, X22
	0x026F5B3C LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {18}
	004 Move X8, [X3+32]
	005 Move X10, -29388800
	006 Move V1, [X0+72]
	007 Move V0, [X10+1448]
	008 Move X9, [X8+192]
	009 Move W8, [X0+52]
	010 Move D2, X31
	011 Move X0, X1
	012 Move X3, [X9+48]
	013 Move X1, X2
	014 Move W2, W8
	015 Move X30, [X31+16]
	016 Call 0x219ECA8, X0, X1, X2, V0, V1, V2
	017 Return X0
	018 Call 0x1C17F20

