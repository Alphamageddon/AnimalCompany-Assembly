Type: Photon.Voice.SpacingProfile

Method: System.Void .ctor(System.Int32 capacity)

Disassembly:
	0x03557EF4 LDRB W8, [X0 + 0x135]
	0x03557EF8 TBNZ X8, 0x0, 0x3557F00
	0x03557EFC BL 0x1C5C684
	0x03557F00 CBZ X22, 0x3558028
	0x03557F04 ADRP X10, 0xBA1000
	0x03557F08 LDR X9, [X0 + 0xB8]
	0x03557F0C LDR X8, [X22]
	0x03557F10 LDR X10, [X10 + 0x348]
	0x03557F14 LDR X24, [X9]
	0x03557F18 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+32], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void Start()

Disassembly:
	0x03557F1C LDR X1, [X10]
	0x03557F20 CBZ X9, 0x3557F44
	0x03557F24 LDR X10, [X8 + 0xB0]
	0x03557F28 ADD X10, X10, 0x8
	0x03557F2C LDUR X11, [X10 - 0x8]
	0x03557F30 CMP X11, X1
	0x03557F34 B.EQ 0x3557F54
	0x03557F38 SUBS X9, X9, 0x1
	0x03557F3C ADD X10, X10, 0x10
	0x03557F40 B.NE 0x3557F2C
	0x03557F44 MOVZ W2, 0x1
	0x03557F48 MOV X0, X22
	0x03557F4C BL 0x1C5C788
	0x03557F50 B 0x3557F64
	0x03557F54 LDR W9, [X10]
	0x03557F58 ADD W9, W9, 0x1
	0x03557F5C ADD X8, X8, W9, 0x4, SXTW
	0x03557F60 ADD X0, X8, 0x138
	0x03557F64 LDP X8, X4, [X0]
	0x03557F68 MOVZ W1, 0x3
	0x03557F6C MOV X0, X22
	0x03557F70 MOV X2, X23
	0x03557F74 MOV X3, X24
	0x03557F78 BLR X8
	0x03557F7C LDR X8, [X21 + 0x90]
	0x03557F80 CBZ X8, 0x3558028
	0x03557F84 LDR X22, [X8 + 0x10]
	0x03557F88 CBZ X22, 0x3558028
	0x03557F8C ADRP X10, 0xBDE000
	0x03557F90 LDR X8, [X22]
	0x03557F94 LDR X10, [X10 + 0x4D0]
	0x03557F98 LDR W23, [X21 + 0x84]
	0x03557F9C LDRH W9, [X8 + 0x12E]
	0x03557FA0 LDR X1, [X10]
	0x03557FA4 CBZ X9, 0x3557FC8
	0x03557FA8 LDR X10, [X8 + 0xB0]
	0x03557FAC ADD X10, X10, 0x8
	0x03557FB0 LDUR X11, [X10 - 0x8]
	0x03557FB4 CMP X11, X1
	0x03557FB8 B.EQ 0x3557FD8
	0x03557FBC SUBS X9, X9, 0x1
	0x03557FC0 ADD X10, X10, 0x10
	0x03557FC4 B.NE 0x3557FB0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE89000
	005 Move W8, [X20+3477]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0xB9F000
	012 Move X0, [X0+2488]
	013 Call 0x1C17CF4
	014 Move X0, 0xBC5000
	015 Move X0, [X0+2080]
	016 Call 0x1C17CF4
	017 Move X0, 0xBA5000
	018 Move X0, [X0+1800]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3477], W8
	022 Move X8, [X19+40]
	023 Compare X8, 0
	024 JumpIfNotEqual {47}
	025 Move X8, 0xBC5000
	026 Move W1, [X19+32]
	027 Move X8, [X8+2080]
	028 Move X0, [X8]
	029 Call 0x1C17D6C
	030 Move [X19+16], X0
	031 Move X8, 0xB9F000
	032 Move W1, [X19+32]
	033 Move X8, [X8+2488]
	034 Move X0, [X8]
	035 Call 0x1C17D6C
	036 Move [X19+24], X0
	037 Move X8, 0xBA5000
	038 Move X8, [X8+1800]
	039 Move X0, [X8]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X31
	045 Call Stopwatch.StartNew
	046 Move [X19+40], X0
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Return 

Method: System.Void Update(System.Boolean lost, System.Boolean flush)

Disassembly:
	0x03557FC8 MOVZ W2, 0x2
	0x03557FCC MOV X0, X22
	0x03557FD0 BL 0x1C5C788
	0x03557FD4 B 0x3557FE8
	0x03557FD8 LDR W9, [X10]
	0x03557FDC ADD W9, W9, 0x2
	0x03557FE0 ADD X8, X8, W9, 0x4, SXTW
	0x03557FE4 ADD X0, X8, 0x138
	0x03557FE8 LDP X6, X5, [X0]
	0x03557FEC AND W3, W20, 0x1
	0x03557FF0 MOV X0, X22
	0x03557FF4 MOV X1, X21
	0x03557FF8 MOV W2, W23
	0x03557FFC MOV X4, X19
	0x03558000 LDP X20, X19, [X31 + 0x30]
	0x03558004 LDP X22, X21, [X31 + 0x20]
	0x03558008 LDP X24, X23, [X31 + 0x10]
	0x0355800C LDP X30, X25, [X31], #0x40
	0x03558010 BR X6
	0x03558014 LDP X20, X19, [X31 + 0x30]
	0x03558018 LDP X22, X21, [X31 + 0x20]
	0x0355801C LDP X24, X23, [X31 + 0x10]
	0x03558020 LDP X30, X25, [X31], #0x40
	0x03558024 RET
	0x03558028 BL 0x1C16F20
	0x0355802C STR X30, [X31 - 0x20]!
	0x03558030 STP X20, X19, [X31 + 0x10]
	0x03558034 ADRP X20, 0xE87000
	0x03558038 LDRB W8, [X20 + 0xD9D]
	0x0355803C MOV X19, X0
	0x03558040 TBNZ X8, 0x0, 0x3558058
	0x03558044 ADRP X0, 0xB9C000
	0x03558048 LDR X0, [X0 + 0xE58]
	0x0355804C BL 0x1C16CF4
	0x03558050 MOVZ W8, 0x1
	0x03558054 STRB W8, [X20 + 0xD9D]
	0x03558058 LDR X0, [X19 + 0x40]
	0x0355805C CBZ X0, 0x3558088
	0x03558060 MOV X1, X31
	0x03558064 BL 0x33A01F0
	0x03558068 CBZ X0, 0x3558088
	0x0355806C ADRP X8, 0xB9C000
	0x03558070 LDR X8, [X8 + 0xE58]
	0x03558074 MOV X19, X0
	0x03558078 LDR X20, [X8]
	0x0355807C MOV X1, X20
	0x03558080 BL 0x1C16E00
	0x03558084 CBZ X0, 0x3558094

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0+40]
	006 Compare X8, 0
	007 JumpIfEqual {49}
	008 Move W9, [X0+56]
	009 Move W20, W2
	010 Move X19, X0
	011 Move W21, W1
	012 Compare W9, 0
	013 JumpIfEqual {21}
	014 Move X0, X8
	015 Move X1, X31
	016 Call Stopwatch.get_ElapsedMilliseconds, X0
	017 Move X8, [X19+40]
	018 Move [X19+48], X0
	019 Compare X8, 0
	020 JumpIfEqual {54}
	021 Move X0, X8
	022 Move X1, X31
	023 Call Stopwatch.get_ElapsedMilliseconds, X0
	024 Move X10, [X19+16]
	025 Compare X10, 0
	026 JumpIfEqual {54}
	027 NotImplemented "Instruction LDRSW not yet implemented."
	028 Move W9, [X10+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W11, [X19+48]
	031 Add X10, X10, X8
	032 Subtract W11, W0, W11
	033 NotImplemented "Instruction STRH not yet implemented."
	034 Move X10, [X19+24]
	035 Compare X10, 0
	036 JumpIfEqual {54}
	037 Move W11, [X10+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add W13, W8, 1
	040 NotImplemented "Instruction CMP not yet implemented."
	041 And W11, W20, 1
	042 And W12, W21, 1
	043 Add X10, X10, X8
	044 NotImplemented "Instruction CSINC not yet implemented."
	045 Move [X10+32], W12
	046 Move [X19+48], X0
	047 Move [X19+36], W8
	048 Move [X19+56], W11
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Return 
	054 Call 0x1C17F20
	055 Call 0x1C17F28

Method: System.String get_Dump()

Disassembly:
	0x03558088 LDP X20, X19, [X31 + 0x10]
	0x0355808C LDR X30, [X31], #0x20
	0x03558090 RET
	0x03558094 MOV X0, X19
	0x03558098 MOV X1, X20
	0x0355809C BL 0x1C171E0
	0x035580A0 STR X30, [X31 - 0x30]!
	0x035580A4 STP X22, X21, [X31 + 0x10]
	0x035580A8 STP X20, X19, [X31 + 0x20]
	0x035580AC ADRP X21, 0xE87000
	0x035580B0 LDRB W8, [X21 + 0xD9E]
	0x035580B4 MOV X20, X1
	0x035580B8 MOV X19, X0
	0x035580BC TBNZ X8, 0x0, 0x35580EC
	0x035580C0 ADRP X0, 0xBDD000
	0x035580C4 LDR X0, [X0 + 0x4F8]
	0x035580C8 BL 0x1C16CF4
	0x035580CC ADRP X0, 0xB9D000
	0x035580D0 LDR X0, [X0 + 0x9C8]
	0x035580D4 BL 0x1C16CF4
	0x035580D8 ADRP X0, 0xB9C000
	0x035580DC LDR X0, [X0 + 0xE58]
	0x035580E0 BL 0x1C16CF4
	0x035580E4 MOVZ W8, 0x1
	0x035580E8 STRB W8, [X21 + 0xD9E]
	0x035580EC CBZ X20, 0x3558130
	0x035580F0 MOV X0, X20
	0x035580F4 MOV X1, X31
	0x035580F8 BL 0x33A01F0
	0x035580FC CBZ X0, 0x355812C
	0x03558100 ADRP X8, 0xB9C000
	0x03558104 LDR X8, [X8 + 0xE58]
	0x03558108 MOV X21, X0
	0x0355810C LDR X22, [X8]
	0x03558110 MOV X1, X22
	0x03558114 BL 0x1C16E00
	0x03558118 MOV X20, X0
	0x0355811C CBNZ X0, 0x3558130
	0x03558120 MOV X0, X21
	0x03558124 MOV X1, X22
	0x03558128 BL 0x1C171E0
	0x0355812C MOV X20, X31
	0x03558130 MOV X0, X19
	0x03558134 BL 0x3557904
	0x03558138 TBZ X0, 0x0, 0x35581D0
	0x0355813C LDR X8, [X19 + 0x40]
	0x03558140 CBZ X20, 0x35581A8
	0x03558144 CBZ X8, 0x35581A8
	0x03558148 ADRP X21, 0xBDD000
	0x0355814C LDR X21, [X21 + 0x4F8]
	0x03558150 MOV X0, X8
	0x03558154 MOV X1, X20
	0x03558158 LDR X2, [X21]
	0x0355815C BL 0x21C1B40
	0x03558160 ADRP X22, 0xB9D000
	0x03558164 LDR X22, [X22 + 0x9C8]
	0x03558168 LDR X1, [X22]
	0x0355816C BL 0x21D54D4
	0x03558170 MOV X2, X0
	0x03558174 MOV X0, X19
	0x03558178 MOV W1, W31
	0x0355817C BL 0x3557E04
	0x03558180 LDR X1, [X19 + 0x40]
	0x03558184 LDR X2, [X21]
	0x03558188 MOV X0, X20
	0x0355818C BL 0x21C1B40
	0x03558190 LDR X1, [X22]
	0x03558194 BL 0x21D54D4
	0x03558198 MOV X2, X0
	0x0355819C MOV X0, X19
	0x035581A0 MOV W1, W31
	0x035581A4 B 0x35581CC
	0x035581A8 ORR X9, X20, X8, 0x0
	0x035581AC CBZ X9, 0x35581D0
	0x035581B0 MOV X0, X19
	0x035581B4 MOV W1, W31
	0x035581B8 MOV X2, X8
	0x035581BC BL 0x3557E04
	0x035581C0 MOV X0, X19
	0x035581C4 MOV W1, W31
	0x035581C8 MOV X2, X20
	0x035581CC BL 0x35579C4
	0x035581D0 STR X20, [X19 + 0x40]
	0x035581D4 LDP X20, X19, [X31 + 0x20]
	0x035581D8 LDP X22, X21, [X31 + 0x10]
	0x035581DC LDR X30, [X31], #0x30
	0x035581E0 RET
	0x035581E4 STR X30, [X31 - 0x10]!
	0x035581E8 LDR X0, [X0 + 0x100]
	0x035581EC CBZ X0, 0x35581F8
	0x035581F0 LDR X30, [X31], #0x10
	0x035581F4 B 0x3556F1C
	0x035581F8 BL 0x1C16F20
	0x035581FC STR X30, [X31 - 0x10]!
	0x03558200 LDR X0, [X0 + 0x100]
	0x03558204 CBZ X0, 0x3558210
	0x03558208 LDR X30, [X31], #0x10
	0x0355820C B 0x3557088
	0x03558210 BL 0x1C16F20
	0x03558214 STR X30, [X31 - 0x10]!
	0x03558218 LDR X0, [X0 + 0x100]
	0x0355821C CBZ X0, 0x3558228
	0x03558220 LDR X30, [X31], #0x10
	0x03558224 B 0x35572B8
	0x03558228 BL 0x1C16F20
	0x0355822C LDRB W0, [X0 + 0x80]
	0x03558230 RET
	0x03558234 LDRB W0, [X0 + 0x88]
	0x03558238 RET
	0x0355823C STP X30, X25, [X31 - 0x40]!
	0x03558240 STP X24, X23, [X31 + 0x10]
	0x03558244 STP X22, X21, [X31 + 0x20]
	0x03558248 STP X20, X19, [X31 + 0x30]
	0x0355824C ADRP X25, 0xE87000
	0x03558250 ADRP X20, 0xBA1000
	0x03558254 ADRP X24, 0xB9B000
	0x03558258 ADRP X23, 0xBDD000
	0x0355825C ADRP X22, 0xBDD000
	0x03558260 ADRP X21, 0xBDD000
	0x03558264 LDRB W8, [X25 + 0xD9F]
	0x03558268 LDR X20, [X20 + 0xCC0]
	0x0355826C LDR X24, [X24 + 0x618]
	0x03558270 LDR X23, [X23 + 0x500]
	0x03558274 LDR X22, [X22 + 0x508]
	0x03558278 LDR X21, [X21 + 0x510]
	0x0355827C MOV X19, X0
	0x03558280 TBNZ X8, 0x0, 0x35582C8
	0x03558284 ADRP X0, 0xB9B000
	0x03558288 LDR X0, [X0 + 0x618]
	0x0355828C BL 0x1C16CF4
	0x03558290 ADRP X0, 0xBDD000
	0x03558294 LDR X0, [X0 + 0x508]
	0x03558298 BL 0x1C16CF4
	0x0355829C ADRP X0, 0xBDD000
	0x035582A0 LDR X0, [X0 + 0x500]
	0x035582A4 BL 0x1C16CF4
	0x035582A8 ADRP X0, 0xBA1000
	0x035582AC LDR X0, [X0 + 0xCC0]
	0x035582B0 BL 0x1C16CF4
	0x035582B4 ADRP X0, 0xBDD000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE88000
	009 Move W8, [X20+3478]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {47}
	015 Move X0, 0xBDE000
	016 Move X0, [X0+1152]
	017 Call 0x1C17CF4
	018 Move X0, 0xB9C000
	019 Move X0, [X0+3768]
	020 Call 0x1C17CF4
	021 Move X0, 0xBDE000
	022 Move X0, [X0+1160]
	023 Call 0x1C17CF4
	024 Move X0, 0xBDE000
	025 Move X0, [X0+1168]
	026 Call 0x1C17CF4
	027 Move X0, 0xB9C000
	028 Move X0, [X0+2760]
	029 Call 0x1C17CF4
	030 Move X0, 0xB9C000
	031 Move X0, [X0+3544]
	032 Call 0x1C17CF4
	033 Move X0, 0xB9C000
	034 Move X0, [X0+2104]
	035 Call 0x1C17CF4
	036 Move X0, 0xBDE000
	037 Move X0, [X0+1176]
	038 Call 0x1C17CF4
	039 Move X0, 0xB9E000
	040 Move X0, [X0+928]
	041 Call 0x1C17CF4
	042 Move X0, 0xBDE000
	043 Move X0, [X0+1184]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X20+3478], W8
	047 Move X8, [X19+40]
	048 Compare X8, 0
	049 JumpIfEqual {135}
	050 Move X8, 0xBDE000
	051 Move X8, [X8+1160]
	052 Move X21, 0xBDE000
	053 Move X21, [X21+1168]
	054 Move X22, 0xBDE000
	055 Move X0, [X8]
	056 Move X23, 0xB9C000
	057 Move X24, 0xB9C000
	058 Move X20, [X19+16]
	059 Move X22, [X22+1152]
	060 Move X23, [X23+3768]
	061 Move X24, [X24+2760]
	062 Call 0x1C17F10
	063 Move X2, [X21]
	064 Move X1, X19
	065 Move X3, X31
	066 Move X21, X0
	067 Call Func`3<Int16, Int32, Object>..ctor, X0, X1, X2
	068 Move X2, [X22]
	069 Move X0, X20
	070 Move X1, X21
	071 Call 0x21CE42C, X0, X1
	072 Move X1, [X23]
	073 Call Enumerable.ToArray, X0
	074 Move X8, [X24]
	075 Move X21, X0
	076 Move W1, 6
	077 Move X0, X8
	078 Call 0x1C17D6C
	079 Compare X0, 0
	080 JumpIfEqual {147}
	081 Move W8, [X0+24]
	082 Move X20, X0
	083 Compare W8, 0
	084 JumpIfEqual {146}
	085 Move X8, 0xBDE000
	086 Move X8, [X8+1176]
	087 Move X0, X19
	088 Move X8, [X8]
	089 Move [X20+32], X8
	090 Call SpacingProfile.get_Max, X0
	091 Move [X31+12], W0
	092 Add X0, X31, 12
	093 Move X1, X31
	094 Call Int32.ToString, X0
	095 Move W8, [X20+24]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move [X20+40], X0
	099 Move X8, 0xB9C000
	100 Move X8, [X8+3544]
	101 Move X8, [X8]
	102 Move [X20+48], X8
	103 Move X8, [X19+16]
	104 Compare X8, 0
	105 JumpIfEqual {147}
	106 Move X22, 0xB9E000
	107 Move X22, [X22+928]
	108 Move W2, [X19+36]
	109 Move W8, [X8+24]
	110 Move X1, X21
	111 Move X0, [X22]
	112 Move X4, X31
	113 Subtract W3, W8, W2
	114 Call String.Join, X0, X1, X2, X3
	115 Move W8, [X20+24]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move [X20+56], X0
	119 Move X8, 0xB9C000
	120 Move X8, [X8+2104]
	121 Move X1, X21
	122 Move W2, W31
	123 Move X4, X31
	124 Move X8, [X8]
	125 Move [X20+64], X8
	126 Move W3, [X19+36]
	127 Move X0, [X22]
	128 Call String.Join, X0, X1, X2, X3
	129 Move W8, [X20+24]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move [X20+72], X0
	132 Move X0, X20
	133 Move X1, X31
	134 Call String.Concat, X0
	135 Move X8, 0xBDE000
	136 Move X8, [X8+1184]
	137 Move X0, [X8]
	138 Move X20, [X31+48]
	139 Move X19, [X31+56]
	140 Move X22, [X31+32]
	141 Move X21, [X31+40]
	142 Move X24, [X31+16]
	143 Move X23, [X31+24]
	144 Move X30, [X31+64]
	145 Return X0
	146 Call 0x1C17F28
	147 Call 0x1C17F20

Method: System.Int32 get_Max()

Disassembly:
	0x035582B8 LDR X0, [X0 + 0x510]
	0x035582BC BL 0x1C16CF4
	0x035582C0 MOVZ W8, 0x1
	0x035582C4 STRB W8, [X25 + 0xD9F]
	0x035582C8 MOVZ W8, 0x1
	0x035582CC STRB W8, [X19 + 0x10]
	0x035582D0 LDR X0, [X20]
	0x035582D4 BL 0x1C16F10
	0x035582D8 MOV X1, X31
	0x035582DC MOV X20, X0
	0x035582E0 BL 0x33BDD8C
	0x035582E4 MOV X0, X31
	0x035582E8 STR X20, [X19 + 0xB8]
	0x035582EC BL 0x33C18F4
	0x035582F0 SUB W8, W0, 0x64
	0x035582F4 STR W8, [X19 + 0xD8]
	0x035582F8 LDR X0, [X24]
	0x035582FC MOV W1, W31
	0x03558300 BL 0x1C16D6C
	0x03558304 STR X0, [X19 + 0xE0]
	0x03558308 LDR X0, [X23]
	0x0355830C BL 0x1C16F10
	0x03558310 LDR X1, [X22]
	0x03558314 MOV X20, X0
	0x03558318 BL 0x29CFA10
	0x0355831C STR X20, [X19 + 0xF8]
	0x03558320 LDR X0, [X21]
	0x03558324 BL 0x1C16F10
	0x03558328 MOV X1, X31
	0x0355832C MOV X20, X0
	0x03558330 BL 0x33BDD8C
	0x03558334 MOVZ W8, 0x3E8
	0x03558338 STR W8, [X20 + 0x20]
	0x0355833C STR X20, [X19 + 0x100]
	0x03558340 MOV X0, X19
	0x03558344 LDP X20, X19, [X31 + 0x30]
	0x03558348 LDP X22, X21, [X31 + 0x20]
	0x0355834C LDP X24, X23, [X31 + 0x10]
	0x03558350 MOV X1, X31
	0x03558354 LDP X30, X25, [X31], #0x40
	0x03558358 B 0x33BDD8C
	0x0355835C SUB X31, X31, 0x80
	0x03558360 STP X29, X30, [X31 + 0x20]
	0x03558364 STP X28, X27, [X31 + 0x30]
	0x03558368 STP X26, X25, [X31 + 0x40]
	0x0355836C STP X24, X23, [X31 + 0x50]
	0x03558370 STP X22, X21, [X31 + 0x60]
	0x03558374 STP X20, X19, [X31 + 0x70]
	0x03558378 STRB W2, [X31 + 0x1C]
	0x0355837C ADRP X26, 0xE87000
	0x03558380 ADRP X25, 0xBA1000
	0x03558384 ADRP X29, 0xB9B000
	0x03558388 ADRP X28, 0xBDD000
	0x0355838C ADRP X27, 0xBDD000
	0x03558390 LDRB W8, [X26 + 0xDA0]
	0x03558394 LDR X25, [X25 + 0xCC0]
	0x03558398 LDR X29, [X29 + 0x618]
	0x0355839C LDR X28, [X28 + 0x500]
	0x035583A0 LDR X27, [X27 + 0x508]
	0x035583A4 MOV X21, X5
	0x035583A8 MOV W22, W4
	0x035583AC MOV X24, X3
	0x035583B0 MOV W23, W2
	0x035583B4 MOV X19, X1
	0x035583B8 MOV X20, X0
	0x035583BC TBNZ X8, 0x0, 0x3558488
	0x035583C0 ADRP X0, 0xBDD000
	0x035583C4 LDR X0, [X0 + 0x518]
	0x035583C8 BL 0x1C16CF4
	0x035583CC ADRP X0, 0xB9B000
	0x035583D0 LDR X0, [X0 + 0x618]
	0x035583D4 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE88000
	009 Move X22, 0xBDE000
	010 Move W8, [X20+3479]
	011 Move X22, [X22+1192]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0xBDE000
	018 Move X0, [X0+1200]
	019 Call 0x1C17CF4
	020 Move X0, 0xBDE000
	021 Move X0, [X0+1208]
	022 Call 0x1C17CF4
	023 Move X0, 0xBDE000
	024 Move X0, [X0+1216]
	025 Call 0x1C17CF4
	026 Move X0, 0xBDE000
	027 Move X0, [X0+1224]
	028 Call 0x1C17CF4
	029 Move X0, 0xBDE000
	030 Move X0, [X0+1192]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+3479], W8
	034 Move X0, [X22]
	035 Move X19, [X19+16]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X22]
	041 Move X8, [X0+184]
	042 Move X24, 0xBDE000
	043 Move X23, 0xBDE000
	044 Move X20, [X8+8]
	045 Move X24, [X24+1208]
	046 Move X23, [X23+1200]
	047 Compare X20, 0
	048 JumpIfNotEqual {70}
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X22]
	054 Move X9, 0xBDE000
	055 Move X8, [X0+184]
	056 Move X9, [X9+1216]
	057 Move X21, [X8]
	058 Move X0, [X9]
	059 Call 0x1C17F10
	060 Move X8, 0xBDE000
	061 Move X8, [X8+1224]
	062 Move X1, X21
	063 Move X3, X31
	064 Move X20, X0
	065 Move X2, [X8]
	066 Call Func`2<Int16, Int16>..ctor, X0, X1, X2
	067 Move X8, [X22]
	068 Move X8, [X8+184]
	069 Move [X8+8], X20
	070 Move X2, [X24]
	071 Move X0, X19
	072 Move X1, X20
	073 Call Enumerable.Select, X0, X1
	074 Move X1, [X23]
	075 Call 0x21C9648, X0
	076 Move X20, [X31+48]
	077 Move X19, [X31+56]
	078 Move X22, [X31+32]
	079 Move X21, [X31+40]
	080 Move X24, [X31+16]
	081 Move X23, [X31+24]
	082 NotImplemented "Instruction SXTH not yet implemented."
	083 Move X30, [X31+64]
	084 Return X0

Method: System.String <get_Dump>b__11_0(System.Int16 v, System.Int32 i)

Disassembly:
	0x035583D8 ADRP X0, 0xBC4000
	0x035583DC LDR X0, [X0 + 0x428]
	0x035583E0 BL 0x1C16CF4
	0x035583E4 ADRP X0, 0xBDD000
	0x035583E8 LDR X0, [X0 + 0x508]
	0x035583EC BL 0x1C16CF4
	0x035583F0 ADRP X0, 0xBDD000
	0x035583F4 LDR X0, [X0 + 0x500]
	0x035583F8 BL 0x1C16CF4
	0x035583FC ADRP X0, 0xBC7000
	0x03558400 LDR X0, [X0 + 0x208]
	0x03558404 BL 0x1C16CF4
	0x03558408 ADRP X0, 0xBDD000
	0x0355840C LDR X0, [X0 + 0x520]
	0x03558410 BL 0x1C16CF4
	0x03558414 ADRP X0, 0xBA1000
	0x03558418 LDR X0, [X0 + 0xCC0]
	0x0355841C BL 0x1C16CF4
	0x03558420 ADRP X0, 0xBDD000
	0x03558424 LDR X0, [X0 + 0x510]
	0x03558428 BL 0x1C16CF4
	0x0355842C ADRP X0, 0xB9B000
	0x03558430 LDR X0, [X0 + 0xAC8]
	0x03558434 BL 0x1C16CF4
	0x03558438 ADRP X0, 0xBDD000
	0x0355843C LDR X0, [X0 + 0x528]
	0x03558440 BL 0x1C16CF4
	0x03558444 ADRP X0, 0xBDD000
	0x03558448 LDR X0, [X0 + 0x530]
	0x0355844C BL 0x1C16CF4
	0x03558450 ADRP X0, 0xBDD000
	0x03558454 LDR X0, [X0 + 0x538]
	0x03558458 BL 0x1C16CF4
	0x0355845C ADRP X0, 0xBDD000
	0x03558460 LDR X0, [X0 + 0x540]
	0x03558464 BL 0x1C16CF4
	0x03558468 ADRP X0, 0xBDD000
	0x0355846C LDR X0, [X0 + 0x548]
	0x03558470 BL 0x1C16CF4
	0x03558474 ADRP X0, 0xBDD000
	0x03558478 LDR X0, [X0 + 0x550]
	0x0355847C BL 0x1C16CF4
	0x03558480 MOVZ W8, 0x1
	0x03558484 STRB W8, [X26 + 0xDA0]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE88000
	007 Move W8, [X21+3480]
	008 Move W19, W2
	009 Move X20, X0
	010 NotImplemented "Instruction STRH not yet implemented."
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xB9D000
	016 Move X0, [X0+680]
	017 Call 0x1C17CF4
	018 Move X0, 0xB9C000
	019 Move X0, [X0+2440]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+3480], W8
	023 Move X8, [X20+24]
	024 Compare X8, 0
	025 JumpIfEqual {50}
	026 Move W9, [X8+24]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Add X8, X8, W19
	029 Move W8, [X8+32]
	030 Move X9, 0xB9C000
	031 Move X10, 0xB9D000
	032 Move X9, [X9+2440]
	033 Move X10, [X10+680]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Add X0, X31, 12
	036 Move X1, X31
	037 NotImplemented "Instruction CSEL not yet implemented."
	038 Move X19, [X8]
	039 Call Int16.ToString, X0
	040 Move X1, X0
	041 Move X0, X19
	042 Move X2, X31
	043 Call String.Concat, X0, X1
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X30, [X31+16]
	047 Move X21, [X31+24]
	048 Add X31, X31, 48
	049 Return X0
	050 Call 0x1C17F20
	051 Call 0x1C17F28

