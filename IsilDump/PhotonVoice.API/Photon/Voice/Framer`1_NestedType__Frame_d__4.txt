Type: Photon.Voice.Framer`1/<Frame>d__4

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x0239685C B 0x2396874
	0x02396860 LDR X20, [X19 + 0x38]
	0x02396864 B 0x2396888
	0x02396868 LDRSW X9, [X10]
	0x0239686C ADD X8, X8, X9, 0x4, LSL
	0x02396870 ADD X0, X8, 0x138
	0x02396874 LDP X8, X1, [X0]
	0x02396878 MOV X0, X20
	0x0239687C BLR X8
	0x02396880 MOV X20, X0
	0x02396884 STR X0, [X19 + 0x38]
	0x02396888 CBZ X20, 0x23969C4
	0x0239688C ADRP X21, 0x1D5D000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+32], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x02396890 ADRP X22, 0x1D86000

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x02396894 LDR X21, [X21 + 0xE18]
	0x02396898 LDR X22, [X22 + 0xBA0]
	0x0239689C LDR X8, [X20]
	0x023968A0 LDR X1, [X21]
	0x023968A4 LDRH W9, [X8 + 0x12E]
	0x023968A8 CBZ X9, 0x23968CC
	0x023968AC LDR X10, [X8 + 0xB0]
	0x023968B0 ADD X10, X10, 0x8
	0x023968B4 LDUR X11, [X10 - 0x8]
	0x023968B8 CMP X11, X1
	0x023968BC B.EQ 0x23968DC
	0x023968C0 SUBS X9, X9, 0x1
	0x023968C4 ADD X10, X10, 0x10
	0x023968C8 B.NE 0x23968B4
	0x023968CC MOV X0, X20
	0x023968D0 MOV W2, W31
	0x023968D4 BL 0x1C5C788
	0x023968D8 B 0x23968E8
	0x023968DC LDRSW X9, [X10]
	0x023968E0 ADD X8, X8, X9, 0x4, LSL
	0x023968E4 ADD X0, X8, 0x138
	0x023968E8 LDP X8, X1, [X0]
	0x023968EC MOV X0, X20
	0x023968F0 BLR X8
	0x023968F4 AND W8, W0, 0x1
	0x023968F8 STRB W8, [X19 + 0x40]
	0x023968FC TBNZ X0, 0x0, 0x239693C
	0x02396900 LDR X8, [X19 + 0x30]
	0x02396904 CBZ X8, 0x23969C4
	0x02396908 LDR X0, [X8 + 0x30]
	0x0239690C CBZ X0, 0x23969C4
	0x02396910 LDR W8, [X0 + 0x18]
	0x02396914 CMP W8, 0x1
	0x02396918 B.LT 0x2396934
	0x0239691C LDR X1, [X22]
	0x02396920 BL 0x26022C0
	0x02396924 MOV X20, X0
	0x02396928 STR X0, [X19 + 0x38]
	0x0239692C CBNZ X0, 0x239689C
	0x02396930 B 0x23969C4
	0x02396934 MOV W0, W31
	0x02396938 B 0x23969B4
	0x0239693C LDR X20, [X19 + 0x38]
	0x02396940 CBZ X20, 0x23969C4
	0x02396944 ADRP X10, 0x1D85000
	0x02396948 LDR X8, [X20]
	0x0239694C LDR X10, [X10 + 0x7C0]
	0x02396950 LDRH W9, [X8 + 0x12E]
	0x02396954 LDR X1, [X10]
	0x02396958 CBZ X9, 0x239697C
	0x0239695C LDR X10, [X8 + 0xB0]
	0x02396960 ADD X10, X10, 0x8
	0x02396964 LDUR X11, [X10 - 0x8]
	0x02396968 CMP X11, X1
	0x0239696C B.EQ 0x239698C
	0x02396970 SUBS X9, X9, 0x1
	0x02396974 ADD X10, X10, 0x10
	0x02396978 B.NE 0x2396964
	0x0239697C MOV X0, X20
	0x02396980 MOV W2, W31
	0x02396984 BL 0x1C5C788
	0x02396988 B 0x2396998
	0x0239698C LDRSW X9, [X10]
	0x02396990 ADD X8, X8, X9, 0x4, LSL
	0x02396994 ADD X0, X8, 0x138
	0x02396998 LDP X8, X1, [X0]
	0x0239699C MOV X0, X20
	0x023969A0 BLR X8
	0x023969A4 MOV W8, W0
	0x023969A8 STR W0, [X19 + 0x44]
	0x023969AC MOVZ W0, 0x1
	0x023969B0 STP W0, W8, [X19 + 0x10]
	0x023969B4 LDP X20, X19, [X31 + 0x20]
	0x023969B8 LDP X22, X21, [X31 + 0x10]
	0x023969BC LDR X30, [X31], #0x30
	0x023969C0 RET
	0x023969C4 BL 0x1C16F20
	0x023969C8 LDR W0, [X0 + 0x14]
	0x023969CC RET
	0x023969D0 STR X30, [X31 - 0x20]!
	0x023969D4 STP X20, X19, [X31 + 0x10]
	0x023969D8 ADRP X0, 0x1D5D000
	0x023969DC LDR X0, [X0 + 0xB40]
	0x023969E0 MOV X19, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0+16]
	007 Move X20, [X0+40]
	008 Move X19, X0
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Compare W8, 0
	012 JumpIfNotEqual {52}
	013 Move TEMP, 0
	014 Not TEMP
	015 Move W8, TEMP
	016 Move [X19+16], W8
	017 Compare X20, 0
	018 JumpIfEqual {92}
	019 Move X9, [X20+16]
	020 Compare X9, 0
	021 JumpIfEqual {92}
	022 Move X8, [X19+48]
	023 Compare X8, 0
	024 JumpIfEqual {92}
	025 Move W9, [X9+24]
	026 Move W10, [X8+24]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W9, [X20+28]
	029 Compare W9, 0
	030 JumpIfEqual {83}
	031 Move [X19+64], W31
	032 Move TEMP, 0
	033 Not TEMP
	034 Move W8, TEMP
	035 Move [X19+16], W8
	036 Compare X20, 0
	037 JumpIfEqual {92}
	038 Move X2, [X20+16]
	039 Compare X2, 0
	040 JumpIfEqual {92}
	041 Move X0, [X19+48]
	042 Compare X0, 0
	043 JumpIfEqual {92}
	044 Move W8, [X20+28]
	045 Move W9, [X19+64]
	046 Move W11, [X2+24]
	047 Move W10, [X0+24]
	048 Subtract W22, W11, W8
	049 Subtract W21, W10, W9
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W0, W31
	053 Move TEMP, 0
	054 Not TEMP
	055 Move W8, TEMP
	056 Move W0, W31
	057 Move [X19+16], W8
	058 Move W10, [X20+24]
	059 Move X5, X31
	060 Multiply W1, W10, W9
	061 Multiply W3, W10, W8
	062 Multiply W4, W10, W22
	063 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	064 Move W8, [X19+64]
	065 Move W9, 2
	066 Move W0, 1
	067 Add W8, W8, W22
	068 Move [X19+64], W8
	069 Move X8, [X20+16]
	070 Move [X20+28], W31
	071 Move [X19+16], W9
	072 Move [X19+24], X8
	073 Move W10, [X20+24]
	074 Move X5, X31
	075 Multiply W1, W10, W9
	076 Multiply W3, W10, W8
	077 Multiply W4, W10, W21
	078 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	079 Move W8, [X20+28]
	080 Move W0, W31
	081 Add W8, W8, W21
	082 Move [X20+28], W8
	083 Move W0, 1
	084 Move [X19+24], X8
	085 Move [X19+16], W0
	086 Move X20, [X31+32]
	087 Move X19, [X31+40]
	088 Move X22, [X31+16]
	089 Move X21, [X31+24]
	090 Move X30, [X31+48]
	091 Return X0
	092 Call 0x1C17F20

Method: T[] System.Collections.Generic.IEnumerator<T[]>.get_Current()

Disassembly:
	0x023969E4 BL 0x1C16D08
	0x023969E8 BL 0x1C16F10

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x023969EC MOV X1, X31
	0x023969F0 MOV X20, X0
	0x023969F4 BL 0x3380310
	0x023969F8 MOV X0, X20
	0x023969FC MOV X1, X19
	0x02396A00 BL 0x1C16DEC
	0x02396A04 SUB X31, X31, 0x30
	0x02396A08 STP X30, X21, [X31 + 0x10]
	0x02396A0C STP X20, X19, [X31 + 0x20]
	0x02396A10 ADRP X21, 0x2043000
	0x02396A14 ADRP X20, 0x1D5D000
	0x02396A18 LDRB W8, [X21 + 0x957]
	0x02396A1C LDR X20, [X20 + 0x758]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1D5E000
	005 Move X0, [X0+2880]
	006 Move X19, X1
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X1, X31
	010 Move X20, X0
	011 Call NotSupportedException..ctor, X0
	012 Move X0, X20
	013 Move X1, X19
	014 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x02396A20 MOV X19, X0
	0x02396A24 TBNZ X8, 0x0, 0x2396A3C

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Collections.Generic.IEnumerator`1<T[]> System.Collections.Generic.IEnumerable<T[]>.GetEnumerator()

Disassembly:
	0x02396A28 ADRP X0, 0x1D5D000
	0x02396A2C LDR X0, [X0 + 0x758]
	0x02396A30 BL 0x1C16CF4
	0x02396A34 MOVZ W8, 0x1
	0x02396A38 STRB W8, [X21 + 0x957]
	0x02396A3C LDR W8, [X19 + 0x14]
	0x02396A40 LDR X0, [X20]
	0x02396A44 ADD X1, X31, 0xC
	0x02396A48 STR W8, [X31 + 0xC]
	0x02396A4C BL 0x1C16E04
	0x02396A50 LDP X20, X19, [X31 + 0x20]
	0x02396A54 LDP X30, X21, [X31 + 0x10]
	0x02396A58 ADD X31, X31, 0x30
	0x02396A5C RET
	0x02396A60 STP X30, X21, [X31 - 0x20]!
	0x02396A64 STP X20, X19, [X31 + 0x10]
	0x02396A68 LDR W8, [X0 + 0x10]
	0x02396A6C MOV X19, X0
	0x02396A70 MOV X20, X1
	0x02396A74 ADDS W31, W8, 0x2
	0x02396A78 B.NE 0x2396A9C
	0x02396A7C LDR W21, [X19 + 0x18]
	0x02396A80 MOV X0, X31
	0x02396A84 BL 0x33C151C
	0x02396A88 CMP W21, W0
	0x02396A8C B.NE 0x2396A9C
	0x02396A90 STR W31, [X19 + 0x10]
	0x02396A94 MOV X20, X19
	0x02396A98 B 0x2396ADC
	0x02396A9C LDR X8, [X20 + 0x20]
	0x02396AA0 LDR X8, [X8 + 0xC0]
	0x02396AA4 LDR X0, [X8]
	0x02396AA8 LDRB W8, [X0 + 0x135]
	0x02396AAC TBNZ X8, 0x0, 0x2396AB4
	0x02396AB0 BL 0x1C5C684
	0x02396AB4 BL 0x1C16F10
	0x02396AB8 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+16]
	006 Move X19, X0
	007 Move X20, X1
	008 Add W31, W8, 2
	009 Move W21, [X19+32]
	010 Move X0, X31
	011 Call Environment.get_CurrentManagedThreadId
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move [X19+16], W31
	014 Move X20, X19
	015 Move X8, [X20+32]
	016 Move X8, [X8+192]
	017 Move X0, [X8]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X20, X0
	027 Call Object..ctor, X0
	028 Move X0, X31
	029 Move [X20+16], W31
	030 Call Environment.get_CurrentManagedThreadId
	031 Move [X20+32], W0
	032 Move X8, [X19+40]
	033 Move [X20+40], X8
	034 Move X8, [X19+56]
	035 Move X0, X20
	036 Move [X20+48], X8
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x02396ABC MOV X20, X0
	0x02396AC0 BL 0x33BDD8C
	0x02396AC4 MOV X0, X31
	0x02396AC8 STR W31, [X20 + 0x10]

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+40]
	004 Call 0x2396A28, X0
	005 Return X0

