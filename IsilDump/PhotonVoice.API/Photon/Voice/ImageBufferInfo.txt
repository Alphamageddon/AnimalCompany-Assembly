Type: Photon.Voice.ImageBufferInfo

Method: System.Int32 get_Width()

Disassembly:
	0x03567C6C BL 0x1C171E0
	0x03567C70 STP X30, X27, [X31 - 0x50]!

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.Int32 get_Height()

Disassembly:
	0x03567C74 STP X26, X25, [X31 + 0x10]
	0x03567C78 STP X24, X23, [X31 + 0x20]

ISIL:
	001 Move W0, [X0+4]
	002 Return X0

Method: Photon.Voice.ImageBufferInfo/StrideSet get_Stride()

Disassembly:
	0x03567C7C STP X22, X21, [X31 + 0x30]
	0x03567C80 STP X20, X19, [X31 + 0x40]
	0x03567C84 ADRP X21, 0xE78000
	0x03567C88 LDRB W8, [X21 + 0xDF6]
	0x03567C8C MOV X19, X1

ISIL:
	001 Move W9, [X0+24]
	002 NotImplemented "Instruction LDUR not yet implemented."
	003 Move [X8+16], W9
	004 Move [X8], V0
	005 Return X0

Method: Photon.Voice.ImageFormat get_Format()

Disassembly:
	0x03567C90 MOV X20, X0
	0x03567C94 TBNZ X8, 0x0, 0x3567CF4

ISIL:
	001 Move W0, [X0+28]
	002 Return X0

Method: Photon.Voice.Rotation get_Rotation()

Disassembly:
	0x03567C98 ADRP X0, 0xBCE000
	0x03567C9C LDR X0, [X0 + 0xCB0]

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_Rotation(Photon.Voice.Rotation value)

Disassembly:
	0x03567CA0 BL 0x1C16CF4
	0x03567CA4 ADRP X0, 0xBCE000

ISIL:
	001 Move [X0+32], W1
	002 Return 

Method: Photon.Voice.Flip get_Flip()

Disassembly:
	0x03567CA8 LDR X0, [X0 + 0xCB8]
	0x03567CAC BL 0x1C16CF4

ISIL:
	001 NotImplemented "Instruction LDRH not yet implemented."
	002 Return X0

Method: System.Void set_Flip(Photon.Voice.Flip value)

Disassembly:
	0x03567CB0 ADRP X0, 0xBCE000
	0x03567CB4 LDR X0, [X0 + 0xCC0]

ISIL:
	001 NotImplemented "Instruction STRH not yet implemented."
	002 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 height, Photon.Voice.ImageBufferInfo/StrideSet stride, Photon.Voice.ImageFormat format)

Disassembly:
	0x03567CB8 BL 0x1C16CF4
	0x03567CBC ADRP X0, 0xBB4000
	0x03567CC0 LDR X0, [X0 + 0x820]
	0x03567CC4 BL 0x1C16CF4
	0x03567CC8 ADRP X0, 0xBCE000
	0x03567CCC LDR X0, [X0 + 0xC18]
	0x03567CD0 BL 0x1C16CF4
	0x03567CD4 ADRP X0, 0xBCE000
	0x03567CD8 LDR X0, [X0 + 0xA20]
	0x03567CDC BL 0x1C16CF4
	0x03567CE0 ADRP X0, 0xBCE000
	0x03567CE4 LDR X0, [X0 + 0xCC8]
	0x03567CE8 BL 0x1C16CF4
	0x03567CEC MOVZ W8, 0x1
	0x03567CF0 STRB W8, [X21 + 0xDF6]
	0x03567CF4 CBZ X19, 0x3567E74
	0x03567CF8 ADRP X9, 0xBCE000
	0x03567CFC LDR X9, [X9 + 0xCC8]
	0x03567D00 LDR X8, [X19]
	0x03567D04 LDR X1, [X9]
	0x03567D08 LDRB W10, [X8 + 0x130]
	0x03567D0C LDRB W9, [X1 + 0x130]
	0x03567D10 CMP W10, W9
	0x03567D14 B.CC 0x3567E78
	0x03567D18 LDR X8, [X8 + 0xC8]
	0x03567D1C ADD X8, X8, X9, 0x3, LSL
	0x03567D20 LDUR X8, [X8 - 0x8]
	0x03567D24 CMP X8, X1
	0x03567D28 B.NE 0x3567E78
	0x03567D2C LDR X0, [X19 + 0x138]
	0x03567D30 CBZ X0, 0x3567E74
	0x03567D34 ADRP X24, 0xBCE000
	0x03567D38 LDR X24, [X24 + 0xCB8]
	0x03567D3C LDR X1, [X24]
	0x03567D40 BL 0x2D10E70
	0x03567D44 LDR X22, [X20 + 0x18]
	0x03567D48 CBZ X22, 0x3567E74
	0x03567D4C MOV X21, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xE79000
	010 Move X24, 0xBCF000
	011 Move W8, [X25+3564]
	012 Move X24, [X24+3176]
	013 Move W20, W4
	014 Move X21, X3
	015 Move W22, W2
	016 Move W23, W1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xBCF000
	023 Move X0, [X0+3176]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+3564], W8
	027 Move [X19], W23
	028 Move [X19+4], W22
	029 Move V0, [X21]
	030 Move W8, [X21+16]
	031 Move [X19+32], W31
	032 Move [X19+8], V0
	033 Move [X19+24], W8
	034 Move [X19+28], W20
	035 Move X0, [X24]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X24]
	041 Move X8, [X0+184]
	042 Move X22, [X31+32]
	043 Move X21, [X31+40]
	044 Move X24, [X31+16]
	045 Move X23, [X31+24]
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 NotImplemented "Instruction STRH not yet implemented."
	048 Move X20, [X31+48]
	049 Move X19, [X31+56]
	050 Move X30, [X31+64]
	051 Move X25, [X31+72]
	052 Return 

