Type: Photon.Voice.ObjectPool`2

Method: TType createObject(TInfo info)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void destroyObject(TType obj)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean infosMatch(TInfo i0, TInfo i1)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.String get_LogPrefix()

Disassembly:
	0x02495E98 STR X20, [X8 + 0x20]
	0x02495E9C MOVZ W23, 0x3
	0x02495EA0 B 0x2495EB0
	0x02495EA4 MOV X21, X31
	0x02495EA8 MOV W22, W31
	0x02495EAC MOVZ W23, 0x4
	0x02495EB0 LDRB W8, [X31 + 0xC]
	0x02495EB4 CBZ W8, 0x2495EC4
	0x02495EB8 MOV X0, X19
	0x02495EBC MOV X1, X31
	0x02495EC0 BL 0x33E14E4
	0x02495EC4 CBNZ X21, 0x2495F04
	0x02495EC8 ORR W8, W23, 0x4
	0x02495ECC CMP W8, 0x4
	0x02495ED0 B.NE 0x2495EEC
	0x02495ED4 LDR X8, [X19]
	0x02495ED8 MOV X0, X19
	0x02495EDC MOV X1, X20
	0x02495EE0 LDP X9, X2, [X8 + 0x198]
	0x02495EE4 BLR X9
	0x02495EE8 MOV W22, W31
	0x02495EEC MOV W0, W22
	0x02495EF0 LDP X20, X19, [X31 + 0x30]
	0x02495EF4 LDP X22, X21, [X31 + 0x20]
	0x02495EF8 LDP X30, X23, [X31 + 0x10]
	0x02495EFC ADD X31, X31, 0x40
	0x02495F00 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1F45000
	007 Move X20, 0x1C88000
	008 Move X21, 0x1C5F000
	009 Move W8, [X22+2964]
	010 Move X20, [X20+3536]
	011 Move X21, [X21+2120]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x1C5F000
	018 Move X0, [X0+2120]
	019 Call 0x1C17CF4
	020 Move X0, 0x1C88000
	021 Move X0, [X0+3536]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2964], W8
	025 Move X1, [X19+80]
	026 Move X0, [X20]
	027 Move X2, [X21]
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X3, X31
	033 Move X30, [X31+48]
	034 Call String.Concat, X0, X1, X2
	035 Return X0

Method: System.Void .ctor(System.Int32 capacity, System.String name)

Disassembly:
	0x02495F04 MOV X0, X21
	0x02495F08 BL 0x1C16F18
	0x02495F0C BL 0x1C16F20
	0x02495F10 BL 0x1C16F28
	0x02495F14 B 0x2495F1C
	0x02495F18 B 0x2495F1C
	0x02495F1C MOV X22, X0
	0x02495F20 CMP W1, 0x1
	0x02495F24 B.NE 0x2495F44
	0x02495F28 MOV X0, X22
	0x02495F2C BL 0x3EB1AD0
	0x02495F30 LDR X21, [X0]
	0x02495F34 BL 0x3EB1AE0
	0x02495F38 MOV W23, W31
	0x02495F3C MOV W22, W31
	0x02495F40 B 0x2495EB0
	0x02495F44 MOV X21, X31
	0x02495F48 B 0x2495F50
	0x02495F4C MOV X22, X0
	0x02495F50 LDRB W8, [X31 + 0xC]
	0x02495F54 CBZ W8, 0x2495F64
	0x02495F58 MOV X0, X19
	0x02495F5C MOV X1, X31
	0x02495F60 BL 0x33E14E4
	0x02495F64 CBNZ X21, 0x2495F70

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X3+32]
	006 Move X19, X2
	007 Move W20, W1
	008 Move X21, X0
	009 Move X8, [X8+192]
	010 Move X8, [X8+8]
	011 Move W9, [X8+309]
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X8
	017 Call 0x1C5D684
	018 Move X8, X0
	019 Move X0, X8
	020 Move W1, W31
	021 Call 0x1C17D6C
	022 Move [X21+64], X0
	023 Move X0, X21
	024 Move X1, X31
	025 Call Object..ctor, X0
	026 Move [X21+16], W20
	027 Move [X21+80], X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return 

Method: System.Void .ctor(System.Int32 capacity, System.String name, TInfo info)

Disassembly:
	0x02495F68 MOV X0, X22
	0x02495F6C BL 0x1D2C690
	0x02495F70 MOV X0, X21
	0x02495F74 BL 0x1C16F18
	0x02495F78 BL 0x1990590
	0x02495F7C SUB X31, X31, 0x30
	0x02495F80 STP X30, X21, [X31 + 0x10]
	0x02495F84 STP X20, X19, [X31 + 0x20]
	0x02495F88 MOV X20, X1
	0x02495F8C MOV X19, X0
	0x02495F90 STRB W31, [X31 + 0xC]
	0x02495F94 ADD X1, X31, 0xC
	0x02495F98 MOV X2, X31
	0x02495F9C BL 0x33DE64C
	0x02495FA0 LDR W9, [X19 + 0x20]
	0x02495FA4 CMP W9, 0x0
	0x02495FA8 B.LE 0x2495FE4
	0x02495FAC LDR X8, [X19 + 0x18]
	0x02495FB0 SUB W9, W9, 0x1
	0x02495FB4 STR W9, [X19 + 0x20]
	0x02495FB8 CBZ X8, 0x2496038
	0x02495FBC LDR W10, [X8 + 0x18]
	0x02495FC0 CMP W9, W10
	0x02495FC4 B.CS 0x2496034
	0x02495FC8 LDR X10, [X19]
	0x02495FCC ADD X8, X8, W9, 0x3, UXTW
	0x02495FD0 LDR X1, [X8 + 0x20]
	0x02495FD4 LDP X8, X2, [X10 + 0x198]
	0x02495FD8 MOV X0, X19
	0x02495FDC BLR X8
	0x02495FE0 B 0x2495FA0
	0x02495FE4 LDR X8, [X20 + 0x20]
	0x02495FE8 LDR X8, [X8 + 0xC0]
	0x02495FEC LDR X0, [X8 + 0x8]
	0x02495FF0 LDRB W8, [X0 + 0x135]
	0x02495FF4 TBNZ X8, 0x0, 0x2495FFC
	0x02495FF8 BL 0x1C5C684
	0x02495FFC MOV W1, W31
	0x02496000 BL 0x1C16D6C
	0x02496004 MOV X21, X31
	0x02496008 STR X0, [X19 + 0x18]
	0x0249600C LDRB W8, [X31 + 0xC]
	0x02496010 CBZ W8, 0x2496020
	0x02496014 MOV X0, X19
	0x02496018 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+104], X23
	004 Move [X31+112], X22
	005 Move [X31+120], X21
	006 Move [X31+128], X20
	007 Move [X31+136], X19
	008 Move X8, [X4+32]
	009 Move X20, X4
	010 Move X21, X3
	011 Move X22, X2
	012 Move X8, [X8+192]
	013 Move W23, W1
	014 Move X19, X0
	015 Move X8, [X8+8]
	016 Move W9, [X8+309]
	017 Move TEMP, X9
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {24}
	021 Move X0, X8
	022 Call 0x1C5D684
	023 Move X8, X0
	024 Move X0, X8
	025 Move W1, W31
	026 Call 0x1C17D6C
	027 Move [X19+64], X0
	028 Move X0, X19
	029 Move X1, X31
	030 Call Object..ctor, X0
	031 Move [X19+16], W23
	032 Move [X19+80], X22
	033 Move X8, [X21+32]
	034 Move V1, [X21]
	035 Move V0, [X21+16]
	036 Add X1, X31, 48
	037 Move X0, X19
	038 Move [X31+32], X8
	039 Move [X31], V1
	040 Move [X31+8], V0
	041 Move X8, [X20+32]
	042 Move V0, [X31]
	043 Move V1, [X31+16]
	044 Move X9, [X31+32]
	045 Move X8, [X8+192]
	046 Move X2, [X8+32]
	047 Move [X31+48], V0
	048 Move [X31+56], V1
	049 Move [X31+80], X9
	050 Call 0x249601C, X0, X1
	051 Move X20, [X31+128]
	052 Move X19, [X31+136]
	053 Move X22, [X31+112]
	054 Move X21, [X31+120]
	055 Move X30, [X31+96]
	056 Move X23, [X31+104]
	057 Add X31, X31, 144
	058 Return 

Method: System.Void Init(TInfo info)

Disassembly:
	0x0249601C BL 0x33E14E4
	0x02496020 CBNZ X21, 0x249603C
	0x02496024 LDP X20, X19, [X31 + 0x20]
	0x02496028 LDP X30, X21, [X31 + 0x10]
	0x0249602C ADD X31, X31, 0x30
	0x02496030 RET
	0x02496034 BL 0x1C16F28
	0x02496038 BL 0x1C16F20
	0x0249603C MOV X0, X21
	0x02496040 BL 0x1C16F18
	0x02496044 B 0x2496054
	0x02496048 B 0x2496054
	0x0249604C B 0x2496054
	0x02496050 B 0x2496054
	0x02496054 MOV X20, X0
	0x02496058 CMP W1, 0x1
	0x0249605C B.NE 0x2496074
	0x02496060 MOV X0, X20
	0x02496064 BL 0x3EB1AD0
	0x02496068 LDR X21, [X0]
	0x0249606C BL 0x3EB1AE0
	0x02496070 B 0x249600C
	0x02496074 MOV X21, X31
	0x02496078 B 0x2496080
	0x0249607C MOV X20, X0
	0x02496080 LDRB W8, [X31 + 0xC]
	0x02496084 CBZ W8, 0x2496094
	0x02496088 MOV X0, X19
	0x0249608C MOV X1, X31
	0x02496090 BL 0x33E14E4
	0x02496094 CBNZ X21, 0x24960A0
	0x02496098 MOV X0, X20
	0x0249609C BL 0x1D2C690
	0x024960A0 MOV X0, X21
	0x024960A4 BL 0x1C16F18
	0x024960A8 BL 0x1990590
	0x024960AC STP X30, X23, [X31 - 0x30]!
	0x024960B0 STP X22, X21, [X31 + 0x10]
	0x024960B4 STP X20, X19, [X31 + 0x20]
	0x024960B8 ADRP X23, 0x1F43000
	0x024960BC ADRP X21, 0x1C86000
	0x024960C0 ADRP X22, 0x1C5D000
	0x024960C4 LDRB W8, [X23 + 0xB96]
	0x024960C8 LDR X21, [X21 + 0xDD0]
	0x024960CC LDR X22, [X22 + 0x848]
	0x024960D0 MOV X20, X1
	0x024960D4 MOV X19, X0
	0x024960D8 TBNZ X8, 0x0, 0x24960FC
	0x024960DC ADRP X0, 0x1C5D000
	0x024960E0 LDR X0, [X0 + 0x848]
	0x024960E4 BL 0x1C16CF4
	0x024960E8 ADRP X0, 0x1C86000
	0x024960EC LDR X0, [X0 + 0xDD0]
	0x024960F0 BL 0x1C16CF4
	0x024960F4 MOVZ W8, 0x1
	0x024960F8 STRB W8, [X23 + 0xB96]
	0x024960FC LDR X8, [X20 + 0x20]
	0x02496100 MOV X0, X19
	0x02496104 LDR X8, [X8 + 0xC0]
	0x02496108 LDR X8, [X8]
	0x0249610C LDR X8, [X8 + 0x80]
	0x02496110 ADD X1, X8, 0x80
	0x02496114 BL 0x1C16D18
	0x02496118 LDR X1, [X0]
	0x0249611C LDR X0, [X21]
	0x02496120 LDR X2, [X22]
	0x02496124 LDP X20, X19, [X31 + 0x20]
	0x02496128 LDP X22, X21, [X31 + 0x10]
	0x0249612C MOV X3, X31
	0x02496130 LDP X30, X23, [X31], #0x30
	0x02496134 B 0x32274B8
	0x02496138 STR X30, [X31 - 0x40]!
	0x0249613C STP X24, X23, [X31 + 0x10]
	0x02496140 STP X22, X21, [X31 + 0x20]
	0x02496144 STP X20, X19, [X31 + 0x30]
	0x02496148 LDR X8, [X3 + 0x20]
	0x0249614C MOV X21, X3
	0x02496150 MOV X19, X2
	0x02496154 MOV W22, W1
	0x02496158 LDR X8, [X8 + 0xC0]
	0x0249615C MOV X20, X0
	0x02496160 LDR X8, [X8 + 0x8]
	0x02496164 LDRB W9, [X8 + 0x135]
	0x02496168 TBNZ X9, 0x0, 0x2496178
	0x0249616C MOV X0, X8

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X2
	007 Move X21, X1
	008 Move X19, X0
	009 Move [X31+12], W31
	010 Add X1, X31, 12
	011 Move X2, X31
	012 Call Monitor.Enter, X0, X1
	013 Move W9, [X19+72]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X8, [X19+64]
	016 Subtract W9, W9, 1
	017 Move [X19+72], W9
	018 Compare X8, 0
	019 JumpIfEqual {66}
	020 Move W10, [X8+24]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X10, [X19]
	023 Add X8, X8, W9
	024 Move X1, [X8+32]
	025 Move X8, [X10+408]
	026 Move X2, [X10+416]
	027 Move X0, X19
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move X8, [X21+32]
	030 Move V1, [X21]
	031 Move V0, [X21+16]
	032 Move [X19+52], X8
	033 Move [X19+36], V0
	034 Move [X19+20], V1
	035 Move X8, [X20+32]
	036 Move W20, [X19+16]
	037 Move X8, [X8+192]
	038 Move X0, [X8+8]
	039 Move W8, [X0+309]
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {45}
	044 Call 0x1C5D684
	045 Move W1, W20
	046 Call 0x1C17D6C
	047 Move W8, 1
	048 Move X21, X31
	049 Move [X19+64], X0
	050 Move [X19+88], W8
	051 Move W8, [X31+12]
	052 Compare W8, 0
	053 JumpIfEqual {57}
	054 Move X0, X19
	055 Move X1, X31
	056 Call Monitor.Exit, X0
	057 Compare X21, 0
	058 JumpIfNotEqual {67}
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X30, [X31+16]
	062 Move X21, [X31+24]
	063 Add X31, X31, 48
	064 Return 
	065 Call 0x1C17F28
	066 Call 0x1C17F20
	067 Move X0, X21
	068 Call 0x1C17F18
	069 Move X20, X0
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X0, X20
	072 Call 0x3EB2AD0
	073 Move X21, [X0]
	074 Call 0x3EB2AE0
	075 Move X21, X31
	076 Move X20, X0
	077 Move W8, [X31+12]
	078 Compare W8, 0
	079 JumpIfEqual {83}
	080 Move X0, X19
	081 Move X1, X31
	082 Call Monitor.Exit, X0
	083 Compare X21, 0
	084 JumpIfNotEqual {87}
	085 Move X0, X20
	086 Call 0x1D2D690
	087 Move X0, X21
	088 Call 0x1C17F18
	089 Call 0x1991590

Method: TInfo get_Info()

Disassembly:
	0x02496170 BL 0x1C5C684
	0x02496174 MOV X8, X0
	0x02496178 MOV X0, X8
	0x0249617C MOV W1, W31
	0x02496180 BL 0x1C16D6C
	0x02496184 LDR X8, [X21 + 0x20]

ISIL:
	001 NotImplemented "Instruction LDUR not yet implemented."
	002 NotImplemented "Instruction LDUR not yet implemented."
	003 NotImplemented "Instruction LDUR not yet implemented."
	004 Move [X8+32], X9
	005 Move [X8], V1
	006 Move [X8+8], V0
	007 Return X0

Method: TType AcquireOrCreate()

Disassembly:
	0x02496188 MOV X23, X0
	0x0249618C MOVZ W1, 0x8
	0x02496190 LDR X8, [X8 + 0xC0]
	0x02496194 LDR X8, [X8]
	0x02496198 LDR X8, [X8 + 0x80]
	0x0249619C ADD X24, X8, 0x40
	0x024961A0 MOV X0, X24
	0x024961A4 BL 0x1C16D14
	0x024961A8 MOV X0, X20
	0x024961AC MOV X1, X24
	0x024961B0 BL 0x1C16D18
	0x024961B4 STR X23, [X0]
	0x024961B8 MOV X0, X20
	0x024961BC MOV X1, X31
	0x024961C0 BL 0x33BDD8C
	0x024961C4 LDR X8, [X21 + 0x20]
	0x024961C8 MOVZ W1, 0x4
	0x024961CC LDR X8, [X8 + 0xC0]
	0x024961D0 LDR X8, [X8]
	0x024961D4 LDR X23, [X8 + 0x80]
	0x024961D8 MOV X0, X23
	0x024961DC BL 0x1C16D14
	0x024961E0 MOV X0, X20
	0x024961E4 MOV X1, X23
	0x024961E8 BL 0x1C16D18
	0x024961EC STR W22, [X0]
	0x024961F0 LDR X8, [X21 + 0x20]
	0x024961F4 MOVZ W1, 0x8
	0x024961F8 LDR X8, [X8 + 0xC0]
	0x024961FC LDR X8, [X8]
	0x02496200 LDR X8, [X8 + 0x80]
	0x02496204 ADD X21, X8, 0x80
	0x02496208 MOV X0, X21
	0x0249620C BL 0x1C16D14
	0x02496210 MOV X0, X20
	0x02496214 MOV X1, X21
	0x02496218 BL 0x1C16D18
	0x0249621C STR X19, [X0]
	0x02496220 LDP X20, X19, [X31 + 0x30]
	0x02496224 LDP X22, X21, [X31 + 0x20]
	0x02496228 LDP X24, X23, [X31 + 0x10]
	0x0249622C LDR X30, [X31], #0x40
	0x02496230 RET
	0x02496234 STP X29, X30, [X31 - 0x60]!
	0x02496238 STP X28, X27, [X31 + 0x10]
	0x0249623C STP X26, X25, [X31 + 0x20]
	0x02496240 STP X24, X23, [X31 + 0x30]
	0x02496244 STP X22, X21, [X31 + 0x40]
	0x02496248 STP X20, X19, [X31 + 0x50]
	0x0249624C ADD X29, X31, 0x0
	0x02496250 SUB X31, X31, 0x20
	0x02496254 MRS X28, 0xC000
	0x02496258 LDR X8, [X28 + 0x28]
	0x0249625C MOV X22, X4
	0x02496260 MOV X21, X3
	0x02496264 MOV X24, X2
	0x02496268 STUR X8, [X29 - 0x8]
	0x0249626C STUR X3, [X29 - 0x18]
	0x02496270 LDR X8, [X4 + 0x20]
	0x02496274 MOV W25, W1
	0x02496278 MOV X19, X0
	0x0249627C LDR X8, [X8 + 0xC0]
	0x02496280 LDR X9, [X8 + 0x18]
	0x02496284 LDR W23, [X9 + 0xFC]
	0x02496288 ADD X9, X31, 0x0
	0x0249628C ADD X10, X23, 0xF
	0x02496290 AND X10, X10, 0x1FFFFFFFF
	0x02496294 SUB X20, X9, X10
	0x02496298 ADD X31, X20, 0x0
	0x0249629C LDR X0, [X8 + 0x8]
	0x024962A0 LDRB W8, [X0 + 0x135]
	0x024962A4 TBNZ X8, 0x0, 0x24962AC
	0x024962A8 BL 0x1C5C684
	0x024962AC MOV W1, W31
	0x024962B0 BL 0x1C16D6C
	0x024962B4 LDR X8, [X22 + 0x20]
	0x024962B8 MOV X26, X0
	0x024962BC MOVZ W1, 0x8
	0x024962C0 LDR X8, [X8 + 0xC0]
	0x024962C4 LDR X8, [X8]
	0x024962C8 LDR X8, [X8 + 0x80]
	0x024962CC ADD X27, X8, 0x40
	0x024962D0 MOV X0, X27
	0x024962D4 BL 0x1C16D14
	0x024962D8 MOV X0, X19
	0x024962DC MOV X1, X27
	0x024962E0 BL 0x1C16D18
	0x024962E4 STR X26, [X0]
	0x024962E8 MOV X0, X19
	0x024962EC MOV X1, X31
	0x024962F0 BL 0x33BDD8C
	0x024962F4 LDR X8, [X22 + 0x20]
	0x024962F8 MOVZ W1, 0x4
	0x024962FC LDR X8, [X8 + 0xC0]
	0x02496300 LDR X8, [X8]
	0x02496304 LDR X26, [X8 + 0x80]
	0x02496308 MOV X0, X26
	0x0249630C BL 0x1C16D14
	0x02496310 MOV X0, X19
	0x02496314 MOV X1, X26
	0x02496318 BL 0x1C16D18
	0x0249631C STR W25, [X0]
	0x02496320 LDR X8, [X22 + 0x20]
	0x02496324 MOVZ W1, 0x8
	0x02496328 LDR X8, [X8 + 0xC0]
	0x0249632C LDR X8, [X8]
	0x02496330 LDR X8, [X8 + 0x80]
	0x02496334 ADD X25, X8, 0x80
	0x02496338 MOV X0, X25
	0x0249633C BL 0x1C16D14
	0x02496340 MOV X0, X19
	0x02496344 MOV X1, X25
	0x02496348 BL 0x1C16D18

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+112], X22
	004 Move [X31+120], X21
	005 Move [X31+128], X20
	006 Move [X31+136], X19
	007 Move X20, X1
	008 Move X19, X0
	009 Move [X31+108], W31
	010 Add X1, X31, 108
	011 Move X2, X31
	012 Call Monitor.Enter, X0, X1
	013 Move W8, [X19+72]
	014 Subtract W8, W8, 1
	015 Move X9, [X19+64]
	016 Move [X19+72], W8
	017 Compare X9, 0
	018 JumpIfEqual {68}
	019 Move W10, [X9+24]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Add X8, X9, W8
	022 Move X21, [X8+32]
	023 Move X20, X31
	024 Move W22, 3
	025 Move W8, [X19+88]
	026 Compare W8, 0
	027 JumpIfEqual {70}
	028 Move X20, X31
	029 Move X21, X31
	030 Move W22, 7
	031 Move W8, [X31+108]
	032 Compare W8, 0
	033 JumpIfEqual {37}
	034 Move X0, X19
	035 Move X1, X31
	036 Call Monitor.Exit, X0
	037 Compare X20, 0
	038 JumpIfNotEqual {66}
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Compare W22, 0
	041 JumpIfNotEqual {58}
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 Add X1, X31, 48
	046 Move [X31+32], X8
	047 Move X0, X19
	048 Move [X31], V1
	049 Move [X31+8], V0
	050 Move X9, [X19]
	051 Move X10, [X9+392]
	052 Move [X31+48], V1
	053 Move [X31+56], V0
	054 Move [X31+80], X8
	055 Move X2, [X9+400]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X21, X0
	058 Move X0, X21
	059 Move X20, [X31+128]
	060 Move X19, [X31+136]
	061 Move X22, [X31+112]
	062 Move X21, [X31+120]
	063 Move X30, [X31+96]
	064 Add X31, X31, 144
	065 Return X0
	066 Move X0, X20
	067 Call 0x1C17F18
	068 Call 0x1C17F20
	069 Call 0x1C17F28
	070 Move X0, X19
	071 Call 0x2495E98, X0
	072 Move X21, X0
	073 Move X0, 0x1C87000
	074 Move X0, [X0+3544]
	075 Call 0x1C17D08
	076 Move X1, X0
	077 Move X0, X21
	078 Move X2, X31
	079 Call String.Concat, X0, X1
	080 Move X21, X0
	081 Move X0, 0x1C5E000
	082 Move X0, [X0+2000]
	083 Call 0x1C17D08
	084 Call 0x1C17F10
	085 Move X22, X0
	086 Move X1, X21
	087 Move X2, X31
	088 Call Exception..ctor, X0, X1
	089 Move X0, X22
	090 Move X1, X20
	091 Call 0x1C17DEC
	092 Move X21, X0
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X0, X21
	095 Call 0x3EB2AD0
	096 Move X20, [X0]
	097 Call 0x3EB2AE0
	098 Move W22, W31
	099 Move X21, X31
	100 Move X20, X31
	101 Move X21, X0
	102 Move W8, [X31+108]
	103 Compare W8, 0
	104 JumpIfEqual {108}
	105 Move X0, X19
	106 Move X1, X31
	107 Call Monitor.Exit, X0
	108 Compare X20, 0
	109 JumpIfNotEqual {112}
	110 Move X0, X21
	111 Call 0x1D2D690
	112 Move X0, X20
	113 Call 0x1C17F18
	114 Call 0x1991590

Method: TType AcquireOrCreate(TInfo info)

Disassembly:
	0x0249634C STR X24, [X0]
	0x02496350 LDR X22, [X22 + 0x20]
	0x02496354 MOV X0, X20
	0x02496358 MOV X2, X23
	0x0249635C LDR X8, [X22 + 0xC0]
	0x02496360 LDR X8, [X8 + 0x18]
	0x02496364 LDR W8, [X8 + 0x28]
	0x02496368 CMP W8, 0x0
	0x0249636C SUB X8, X29, 0x18
	0x02496370 CSEL X1, X21, X8, LT
	0x02496374 BL 0x3EB1AC0
	0x02496378 LDR X8, [X22 + 0xC0]
	0x0249637C LDP X9, X1, [X8 + 0x18]
	0x02496380 LDR W8, [X9 + 0x28]
	0x02496384 LDR X0, [X1]
	0x02496388 TBNZ X8, 0x1F, 0x2496390
	0x0249638C LDR X20, [X20]
	0x02496390 STUR X20, [X29 - 0x10]
	0x02496394 LDR X8, [X1 + 0x10]
	0x02496398 SUB X3, X29, 0x10
	0x0249639C MOV X2, X19
	0x024963A0 MOV X4, X20
	0x024963A4 BLR X8
	0x024963A8 LDR X8, [X28 + 0x28]
	0x024963AC LDUR X9, [X29 - 0x8]
	0x024963B0 CMP X8, X9
	0x024963B4 B.NE 0x24963D8
	0x024963B8 ADD X31, X29, 0x0
	0x024963BC LDP X20, X19, [X31 + 0x50]
	0x024963C0 LDP X22, X21, [X31 + 0x40]
	0x024963C4 LDP X24, X23, [X31 + 0x30]
	0x024963C8 LDP X26, X25, [X31 + 0x20]
	0x024963CC LDP X28, X27, [X31 + 0x10]
	0x024963D0 LDP X29, X30, [X31], #0x60
	0x024963D4 RET
	0x024963D8 BL 0x3EB1B20
	0x024963DC STP X29, X30, [X31 - 0x60]!
	0x024963E0 STP X28, X27, [X31 + 0x10]
	0x024963E4 STP X26, X25, [X31 + 0x20]
	0x024963E8 STP X24, X23, [X31 + 0x30]
	0x024963EC STP X22, X21, [X31 + 0x40]
	0x024963F0 STP X20, X19, [X31 + 0x50]
	0x024963F4 ADD X29, X31, 0x0
	0x024963F8 SUB X31, X31, 0x30
	0x024963FC MRS X8, 0xC000
	0x02496400 STUR X8, [X29 - 0x28]
	0x02496404 LDR X8, [X8 + 0x28]
	0x02496408 MOV X20, X2
	0x0249640C MOV X22, X1
	0x02496410 MOV X19, X0
	0x02496414 STUR X8, [X29 - 0x8]
	0x02496418 STUR X1, [X29 - 0x18]
	0x0249641C LDR X8, [X2 + 0x20]

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+240], X29
	003 Move [X31+256], X30
	004 Move [X31+264], X21
	005 Move [X31+272], X20
	006 Move [X31+280], X19
	007 NotImplemented "Instruction LDUR not yet implemented."
	008 NotImplemented "Instruction LDUR not yet implemented."
	009 NotImplemented "Instruction LDUR not yet implemented."
	010 Move X20, X1
	011 Move [X31+128], X8
	012 Move X9, [X31+128]
	013 Move [X31+96], V1
	014 Move [X31+104], V0
	015 Move X8, [X1+32]
	016 Move V1, [X1]
	017 Move V0, [X1+16]
	018 Move X21, X2
	019 Add X1, X31, 192
	020 Move [X31+80], X8
	021 Move [X31+48], V1
	022 Move [X31+56], V0
	023 Move X8, [X0]
	024 Move V1, [X31+96]
	025 Move V0, [X31+112]
	026 Move X11, [X31+80]
	027 Add X2, X31, 144
	028 Move X10, [X8+424]
	029 Move [X31+192], V1
	030 Move [X31+200], V0
	031 Move V0, [X31+48]
	032 Move V1, [X31+64]
	033 Move [X31+224], X9
	034 Move [X31+176], X11
	035 Move X19, X0
	036 Move [X31+144], V0
	037 Move [X31+152], V1
	038 Move X3, [X8+432]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {59}
	044 Move X8, [X20+32]
	045 Move V1, [X20]
	046 Move V0, [X20+16]
	047 Add X1, X31, 192
	048 Move X0, X19
	049 Move [X31+32], X8
	050 Move [X31], V1
	051 Move [X31+8], V0
	052 Move X9, [X21+32]
	053 Move X9, [X9+192]
	054 Move X2, [X9+32]
	055 Move [X31+192], V1
	056 Move [X31+200], V0
	057 Move [X31+224], X8
	058 Call 0x249601C, X0, X1
	059 Move X8, [X21+32]
	060 Move X0, X19
	061 Move X8, [X8+192]
	062 Move X1, [X8+80]
	063 Call 0x2496188, X0
	064 Move X20, [X31+272]
	065 Move X19, [X31+280]
	066 Move X30, [X31+256]
	067 Move X21, [X31+264]
	068 Move X29, [X31+240]
	069 Add X31, X31, 288
	070 Return X0

Method: System.Boolean Release(TType obj, TInfo objInfo)

Disassembly:
	0x02496420 LDR X8, [X8 + 0xC0]
	0x02496424 LDR X9, [X8 + 0x28]
	0x02496428 LDR X8, [X8 + 0x18]
	0x0249642C LDR W24, [X9 + 0xFC]
	0x02496430 LDR W21, [X8 + 0xFC]
	0x02496434 ADD X8, X31, 0x0
	0x02496438 ADD X9, X24, 0xF
	0x0249643C AND X9, X9, 0x1FFFFFFFF
	0x02496440 SUB X25, X8, X9
	0x02496444 ADD X31, X25, 0x0
	0x02496448 ADD X9, X21, 0xF
	0x0249644C ADD X8, X31, 0x0
	0x02496450 AND X9, X9, 0x1FFFFFFFF
	0x02496454 SUB X23, X8, X9
	0x02496458 ADD X31, X23, 0x0
	0x0249645C STURB W31, [X29 - 0x1C]
	0x02496460 SUB X1, X29, 0x1C
	0x02496464 MOV X2, X31
	0x02496468 BL 0x33DE64C
	0x0249646C LDR X8, [X20 + 0x20]
	0x02496470 LDR X8, [X8 + 0xC0]
	0x02496474 LDR X8, [X8]
	0x02496478 LDR X8, [X8 + 0x80]
	0x0249647C ADD X1, X8, 0x60
	0x02496480 MOV X0, X19
	0x02496484 BL 0x1C16D18
	0x02496488 LDR X26, [X20 + 0x20]
	0x0249648C LDR W9, [X0]
	0x02496490 LDR X8, [X26 + 0xC0]
	0x02496494 CMP W9, 0x0
	0x02496498 B.LE 0x2496578
	0x0249649C LDR X8, [X8]
	0x024964A0 LDR X8, [X8 + 0x80]
	0x024964A4 ADD X1, X8, 0x40
	0x024964A8 MOV X0, X19
	0x024964AC BL 0x1C16D18
	0x024964B0 LDR X8, [X20 + 0x20]
	0x024964B4 LDR X28, [X0]
	0x024964B8 LDR X8, [X8 + 0xC0]
	0x024964BC LDR X8, [X8]
	0x024964C0 LDR X8, [X8 + 0x80]
	0x024964C4 ADD X1, X8, 0x60
	0x024964C8 MOV X0, X19
	0x024964CC BL 0x1C16D18
	0x024964D0 LDR X8, [X20 + 0x20]
	0x024964D4 LDR W27, [X0]
	0x024964D8 LDR X8, [X8 + 0xC0]
	0x024964DC LDR X8, [X8]
	0x024964E0 LDR X8, [X8 + 0x80]
	0x024964E4 ADD X26, X8, 0x60
	0x024964E8 MOVZ W1, 0x4
	0x024964EC MOV X0, X26
	0x024964F0 BL 0x1C16D14
	0x024964F4 MOV X0, X19
	0x024964F8 MOV X1, X26
	0x024964FC BL 0x1C16D18
	0x02496500 SUB W8, W27, 0x1
	0x02496504 STR W8, [X0]
	0x02496508 CBZ X28, 0x24966B4
	0x0249650C LDR W9, [X28 + 0x18]
	0x02496510 CMP W8, W9
	0x02496514 B.CS 0x24966B0
	0x02496518 LDR X9, [X28]
	0x0249651C SXTW X8, W8
	0x02496520 MOV X0, X25
	0x02496524 MOV X2, X24
	0x02496528 LDR W9, [X9 + 0x104]
	0x0249652C NOP
	0x02496530 MADD X8, X9, X8, X28
	0x02496534 ADD X1, X8, 0x20
	0x02496538 BL 0x3EB1AC0
	0x0249653C LDR X8, [X20 + 0x20]
	0x02496540 MOV X4, X25
	0x02496544 LDR X8, [X8 + 0xC0]
	0x02496548 LDR X8, [X8 + 0x28]
	0x0249654C LDR W8, [X8 + 0x28]
	0x02496550 TBNZ X8, 0x1F, 0x2496558
	0x02496554 LDR X4, [X25]
	0x02496558 LDR X8, [X19]
	0x0249655C STUR X4, [X29 - 0x10]
	0x02496560 LDR X1, [X8 + 0x1A0]
	0x02496564 LDP X0, X8, [X1 + 0x8]
	0x02496568 SUB X3, X29, 0x10
	0x0249656C MOV X2, X19
	0x02496570 BLR X8
	0x02496574 B 0x249646C
	0x02496578 LDR X8, [X8 + 0x18]
	0x0249657C MOV X0, X23
	0x02496580 MOV X2, X21
	0x02496584 LDR W8, [X8 + 0x28]
	0x02496588 CMP W8, 0x0
	0x0249658C SUB X8, X29, 0x18
	0x02496590 CSEL X1, X22, X8, LT
	0x02496594 BL 0x3EB1AC0
	0x02496598 LDR X8, [X26 + 0xC0]
	0x0249659C LDR X8, [X8]
	0x024965A0 LDR X8, [X8 + 0x80]
	0x024965A4 ADD X1, X8, 0x20
	0x024965A8 MOV X0, X19
	0x024965AC MOV X2, X23
	0x024965B0 MOV W3, W21
	0x024965B4 BL 0x1C16D1C
	0x024965B8 LDR X8, [X20 + 0x20]
	0x024965BC LDR X8, [X8 + 0xC0]
	0x024965C0 LDR X8, [X8]
	0x024965C4 LDR X1, [X8 + 0x80]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+192], X30
	003 Move [X31+200], X23
	004 Move [X31+208], X22
	005 Move [X31+216], X21
	006 Move [X31+224], X20
	007 Move [X31+232], X19
	008 Move [X31+92], W31
	009 NotImplemented "Instruction LDUR not yet implemented."
	010 NotImplemented "Instruction LDUR not yet implemented."
	011 NotImplemented "Instruction LDUR not yet implemented."
	012 Move X20, X1
	013 Move [X31+80], X8
	014 Move X9, [X31+80]
	015 Move [X31+48], V1
	016 Move [X31+56], V0
	017 Move X8, [X2+32]
	018 Move V1, [X2]
	019 Move V0, [X2+16]
	020 Add X1, X31, 144
	021 Add X2, X31, 96
	022 Move [X31+32], X8
	023 Move [X31], V1
	024 Move [X31+8], V0
	025 Move X8, [X0]
	026 Move V1, [X31+48]
	027 Move V0, [X31+64]
	028 Move X11, [X31+32]
	029 Move X19, X0
	030 Move X10, [X8+424]
	031 Move [X31+144], V1
	032 Move [X31+152], V0
	033 Move V0, [X31]
	034 Move V1, [X31+16]
	035 Move [X31+176], X9
	036 Move [X31+128], X11
	037 Move [X31+96], V0
	038 Move [X31+104], V1
	039 Move X3, [X8+432]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {77}
	045 Move [X31+92], W31
	046 Add X1, X31, 92
	047 Move X0, X19
	048 Move X2, X31
	049 Call Monitor.Enter, X0, X1
	050 Move X8, [X19+64]
	051 Compare X8, 0
	052 JumpIfEqual {95}
	053 NotImplemented "Instruction LDRSW not yet implemented."
	054 Move W10, [X8+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Add W11, W9, 1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move [X19+72], W11
	059 Add X8, X8, X9
	060 Move X21, X31
	061 Move W22, 1
	062 Move [X8+32], X20
	063 Move W23, 4
	064 Move X21, X31
	065 Move W22, W31
	066 Move W23, 2
	067 Move W8, [X31+92]
	068 Compare W8, 0
	069 JumpIfEqual {73}
	070 Move X0, X19
	071 Move X1, X31
	072 Call Monitor.Exit, X0
	073 Compare X21, 0
	074 JumpIfNotEqual {93}
	075 Or W8, W23, 2
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X8, [X19]
	078 Move X0, X19
	079 Move X1, X20
	080 Move X9, [X8+408]
	081 Move X2, [X8+416]
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move W22, W31
	084 Move W0, W22
	085 Move X20, [X31+224]
	086 Move X19, [X31+232]
	087 Move X22, [X31+208]
	088 Move X21, [X31+216]
	089 Move X30, [X31+192]
	090 Move X23, [X31+200]
	091 Add X31, X31, 240
	092 Return X0
	093 Move X0, X21
	094 Call 0x1C17F18
	095 Call 0x1C17F20
	096 Call 0x1C17F28
	097 Move X22, X0
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X0, X22
	100 Call 0x3EB2AD0
	101 Move X21, [X0]
	102 Call 0x3EB2AE0
	103 Move W23, W31
	104 Move W22, W31
	105 Move X21, X31
	106 Move X22, X0
	107 Move W8, [X31+92]
	108 Compare W8, 0
	109 JumpIfEqual {113}
	110 Move X0, X19
	111 Move X1, X31
	112 Call Monitor.Exit, X0
	113 Compare X21, 0
	114 JumpIfNotEqual {117}
	115 Move X0, X22
	116 Call 0x1D2D690
	117 Move X0, X21
	118 Call 0x1C17F18
	119 Call 0x1991590

Method: System.Boolean Release(TType obj)

Disassembly:
	0x024965C8 MOV X0, X19
	0x024965CC BL 0x1C16D18
	0x024965D0 LDR X9, [X20 + 0x20]
	0x024965D4 MOV X8, X0
	0x024965D8 LDR W21, [X8]
	0x024965DC LDR X9, [X9 + 0xC0]
	0x024965E0 LDR X0, [X9 + 0x8]
	0x024965E4 LDRB W9, [X0 + 0x135]
	0x024965E8 TBNZ X9, 0x0, 0x24965F0
	0x024965EC BL 0x1C5C684
	0x024965F0 MOV W1, W21
	0x024965F4 BL 0x1C16D6C
	0x024965F8 LDR X8, [X20 + 0x20]
	0x024965FC MOV X21, X0
	0x02496600 LDR X8, [X8 + 0xC0]
	0x02496604 LDR X8, [X8]
	0x02496608 LDR X8, [X8 + 0x80]
	0x0249660C ADD X22, X8, 0x40
	0x02496610 MOVZ W1, 0x8
	0x02496614 MOV X0, X22
	0x02496618 BL 0x1C16D14
	0x0249661C MOV X0, X19
	0x02496620 MOV X1, X22
	0x02496624 BL 0x1C16D18
	0x02496628 STR X21, [X0]
	0x0249662C LDR X8, [X20 + 0x20]
	0x02496630 LDR X8, [X8 + 0xC0]
	0x02496634 LDR X8, [X8]
	0x02496638 LDR X8, [X8 + 0x80]
	0x0249663C ADD X20, X8, 0xA0
	0x02496640 MOVZ W1, 0x1
	0x02496644 MOV X0, X20
	0x02496648 BL 0x1C16D14
	0x0249664C MOV X0, X19
	0x02496650 MOV X1, X20
	0x02496654 BL 0x1C16D18
	0x02496658 MOVZ W8, 0x1
	0x0249665C MOV X21, X31
	0x02496660 STRB W8, [X0]
	0x02496664 LDURB W8, [X29 - 0x1C]
	0x02496668 CBZ W8, 0x2496678
	0x0249666C MOV X0, X19
	0x02496670 MOV X1, X31
	0x02496674 BL 0x33E14E4
	0x02496678 CBNZ X21, 0x24966B8
	0x0249667C LDUR X8, [X29 - 0x28]
	0x02496680 LDR X8, [X8 + 0x28]
	0x02496684 LDUR X9, [X29 - 0x8]
	0x02496688 CMP X8, X9
	0x0249668C B.NE 0x24966C0
	0x02496690 ADD X31, X29, 0x0
	0x02496694 LDP X20, X19, [X31 + 0x50]
	0x02496698 LDP X22, X21, [X31 + 0x40]
	0x0249669C LDP X24, X23, [X31 + 0x30]
	0x024966A0 LDP X26, X25, [X31 + 0x20]
	0x024966A4 LDP X28, X27, [X31 + 0x10]
	0x024966A8 LDP X29, X30, [X31], #0x60
	0x024966AC RET
	0x024966B0 BL 0x1C16F28
	0x024966B4 BL 0x1C16F20
	0x024966B8 MOV X0, X21
	0x024966BC BL 0x1C16F18
	0x024966C0 BL 0x3EB1B20
	0x024966C4 B 0x24966EC
	0x024966C8 B 0x24966EC
	0x024966CC B 0x24966EC
	0x024966D0 B 0x24966EC
	0x024966D4 B 0x24966EC
	0x024966D8 B 0x24966EC
	0x024966DC B 0x24966EC
	0x024966E0 B 0x24966EC
	0x024966E4 B 0x24966EC
	0x024966E8 B 0x24966EC
	0x024966EC MOV X20, X0
	0x024966F0 CMP W1, 0x1
	0x024966F4 B.NE 0x249670C
	0x024966F8 MOV X0, X20
	0x024966FC BL 0x3EB1AD0
	0x02496700 LDR X21, [X0]
	0x02496704 BL 0x3EB1AE0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, X1
	009 Move X19, X0
	010 Move [X31+12], W31
	011 Add X1, X31, 12
	012 Move X2, X31
	013 Call Monitor.Enter, X0, X1
	014 Move X8, [X19+64]
	015 Compare X8, 0
	016 JumpIfEqual {59}
	017 NotImplemented "Instruction LDRSW not yet implemented."
	018 Move W10, [X8+24]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Add W11, W9, 1
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X19+72], W11
	023 Add X8, X8, X9
	024 Move X21, X31
	025 Move W22, 1
	026 Move [X8+32], X20
	027 Move W23, 3
	028 Move X21, X31
	029 Move W22, W31
	030 Move W23, 4
	031 Move W8, [X31+12]
	032 Compare W8, 0
	033 JumpIfEqual {37}
	034 Move X0, X19
	035 Move X1, X31
	036 Call Monitor.Exit, X0
	037 Compare X21, 0
	038 JumpIfNotEqual {57}
	039 Or W8, W23, 4
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X8, [X19]
	042 Move X0, X19
	043 Move X1, X20
	044 Move X9, [X8+408]
	045 Move X2, [X8+416]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move W22, W31
	048 Move W0, W22
	049 Move X20, [X31+48]
	050 Move X19, [X31+56]
	051 Move X22, [X31+32]
	052 Move X21, [X31+40]
	053 Move X30, [X31+16]
	054 Move X23, [X31+24]
	055 Add X31, X31, 64
	056 Return X0
	057 Move X0, X21
	058 Call 0x1C17F18
	059 Call 0x1C17F20
	060 Call 0x1C17F28
	061 Move X22, X0
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, X22
	064 Call 0x3EB2AD0
	065 Move X21, [X0]
	066 Call 0x3EB2AE0
	067 Move W23, W31
	068 Move W22, W31
	069 Move X21, X31
	070 Move X22, X0
	071 Move W8, [X31+12]
	072 Compare W8, 0
	073 JumpIfEqual {77}
	074 Move X0, X19
	075 Move X1, X31
	076 Call Monitor.Exit, X0
	077 Compare X21, 0
	078 JumpIfNotEqual {81}
	079 Move X0, X22
	080 Call 0x1D2D690
	081 Move X0, X21
	082 Call 0x1C17F18
	083 Call 0x1991590

Method: System.Void Dispose()

Disassembly:
	0x02496708 B 0x2496664
	0x0249670C MOV X21, X31
	0x02496710 B 0x2496718
	0x02496714 MOV X20, X0
	0x02496718 LDURB W8, [X29 - 0x1C]
	0x0249671C CBZ W8, 0x249672C
	0x02496720 MOV X0, X19
	0x02496724 MOV X1, X31
	0x02496728 BL 0x33E14E4
	0x0249672C CBNZ X21, 0x2496738
	0x02496730 MOV X0, X20
	0x02496734 BL 0x1D2C690
	0x02496738 MOV X0, X21
	0x0249673C BL 0x1C16F18
	0x02496740 BL 0x1990590
	0x02496744 STP X29, X30, [X31 - 0x30]!
	0x02496748 STP X22, X21, [X31 + 0x10]
	0x0249674C STP X20, X19, [X31 + 0x20]
	0x02496750 ADD X29, X31, 0x0
	0x02496754 SUB X31, X31, 0x10
	0x02496758 MRS X22, 0xC000
	0x0249675C LDR X8, [X22 + 0x28]
	0x02496760 MOV X19, X1
	0x02496764 STUR X8, [X29 - 0x8]
	0x02496768 LDR X8, [X2 + 0x20]
	0x0249676C LDR X8, [X8 + 0xC0]
	0x02496770 LDR X9, [X8 + 0x18]
	0x02496774 LDR W20, [X9 + 0xFC]
	0x02496778 ADD X9, X31, 0x0
	0x0249677C ADD X10, X20, 0xF
	0x02496780 AND X10, X10, 0x1FFFFFFFF
	0x02496784 SUB X21, X9, X10
	0x02496788 ADD X31, X21, 0x0
	0x0249678C LDR X8, [X8]
	0x02496790 LDR X8, [X8 + 0x80]
	0x02496794 ADD X1, X8, 0x20
	0x02496798 BL 0x1C16D18
	0x0249679C MOV X1, X0
	0x024967A0 MOV X0, X21
	0x024967A4 MOV X2, X20
	0x024967A8 BL 0x3EB1AC0
	0x024967AC MOV X0, X19
	0x024967B0 MOV X1, X21
	0x024967B4 MOV X2, X20
	0x024967B8 BL 0x3EB1AC0
	0x024967BC LDR X8, [X22 + 0x28]
	0x024967C0 LDUR X9, [X29 - 0x8]
	0x024967C4 CMP X8, X9
	0x024967C8 B.NE 0x24967E0
	0x024967CC ADD X31, X29, 0x0
	0x024967D0 LDP X20, X19, [X31 + 0x20]
	0x024967D4 LDP X22, X21, [X31 + 0x10]
	0x024967D8 LDP X29, X30, [X31], #0x30
	0x024967DC RET
	0x024967E0 BL 0x3EB1B20
	0x024967E4 STP X29, X30, [X31 - 0x60]!
	0x024967E8 STP X28, X27, [X31 + 0x10]
	0x024967EC STP X26, X25, [X31 + 0x20]
	0x024967F0 STP X24, X23, [X31 + 0x30]
	0x024967F4 STP X22, X21, [X31 + 0x40]
	0x024967F8 STP X20, X19, [X31 + 0x50]
	0x024967FC ADD X29, X31, 0x0
	0x02496800 SUB X31, X31, 0x30
	0x02496804 STUR X1, [X29 - 0x28]
	0x02496808 MRS X28, 0xC000
	0x0249680C LDR X8, [X28 + 0x28]
	0x02496810 MOV X23, X2
	0x02496814 MOV X20, X0
	0x02496818 STUR X8, [X29 - 0x8]
	0x0249681C LDR X8, [X2 + 0x20]
	0x02496820 LDR X8, [X8 + 0xC0]
	0x02496824 LDR X9, [X8 + 0x28]
	0x02496828 LDR X8, [X8 + 0x18]
	0x0249682C LDR W21, [X9 + 0xFC]
	0x02496830 LDR W10, [X8 + 0xFC]
	0x02496834 ADD X8, X31, 0x0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X1
	007 Move X19, X0
	008 Move [X31+12], W31
	009 Add X1, X31, 12
	010 Move X2, X31
	011 Call Monitor.Enter, X0, X1
	012 Move W9, [X19+72]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X8, [X19+64]
	015 Subtract W9, W9, 1
	016 Move [X19+72], W9
	017 Compare X8, 0
	018 JumpIfEqual {56}
	019 Move W10, [X8+24]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X10, [X19]
	022 Add X8, X8, W9
	023 Move X1, [X8+32]
	024 Move X8, [X10+408]
	025 Move X2, [X10+416]
	026 Move X0, X19
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X8, [X20+32]
	029 Move X8, [X8+192]
	030 Move X0, [X8+8]
	031 Move W8, [X0+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Move W1, W31
	038 Call 0x1C17D6C
	039 Move X21, X31
	040 Move [X19+64], X0
	041 Move W8, [X31+12]
	042 Compare W8, 0
	043 JumpIfEqual {47}
	044 Move X0, X19
	045 Move X1, X31
	046 Call Monitor.Exit, X0
	047 Compare X21, 0
	048 JumpIfNotEqual {57}
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X30, [X31+16]
	052 Move X21, [X31+24]
	053 Add X31, X31, 48
	054 Return 
	055 Call 0x1C17F28
	056 Call 0x1C17F20
	057 Move X0, X21
	058 Call 0x1C17F18
	059 Move X20, X0
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X0, X20
	062 Call 0x3EB2AD0
	063 Move X21, [X0]
	064 Call 0x3EB2AE0
	065 Move X21, X31
	066 Move X20, X0
	067 Move W8, [X31+12]
	068 Compare W8, 0
	069 JumpIfEqual {73}
	070 Move X0, X19
	071 Move X1, X31
	072 Call Monitor.Exit, X0
	073 Compare X21, 0
	074 JumpIfNotEqual {77}
	075 Move X0, X20
	076 Call 0x1D2D690
	077 Move X0, X21
	078 Call 0x1C17F18
	079 Call 0x1991590

