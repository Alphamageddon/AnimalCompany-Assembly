Type: Photon.Voice.ImageBufferNativePool`1/Factory

Method: System.Void .ctor(System.Object object, System.IntPtr method)

Disassembly:
	0x02D119DC RET
	0x02D119E0 BL 0x1C16F20
	0x02D119E4 STP X29, X30, [X31 - 0x60]!
	0x02D119E8 STR X27, [X31 + 0x10]
	0x02D119EC STP X26, X25, [X31 + 0x20]
	0x02D119F0 STP X24, X23, [X31 + 0x30]
	0x02D119F4 STP X22, X21, [X31 + 0x40]
	0x02D119F8 STP X20, X19, [X31 + 0x50]
	0x02D119FC ADD X29, X31, 0x0
	0x02D11A00 SUB X31, X31, 0x20
	0x02D11A04 MRS X25, 0xC000
	0x02D11A08 LDR X8, [X25 + 0x28]
	0x02D11A0C STUR X8, [X29 - 0x8]
	0x02D11A10 STUR X1, [X29 - 0x18]
	0x02D11A14 LDR X8, [X2 + 0x20]
	0x02D11A18 LDR X8, [X8 + 0xC0]
	0x02D11A1C LDR X9, [X8 + 0x70]
	0x02D11A20 LDR W21, [X9 + 0xFC]
	0x02D11A24 ADD X9, X31, 0x0
	0x02D11A28 ADD X10, X21, 0xF
	0x02D11A2C AND X10, X10, 0x1FFFFFFFF
	0x02D11A30 SUB X22, X9, X10
	0x02D11A34 ADD X31, X22, 0x0
	0x02D11A38 LDR X0, [X0 + 0x10]
	0x02D11A3C CBZ X0, 0x2D11B34
	0x02D11A40 MOV X20, X1
	0x02D11A44 LDR X1, [X8 + 0x60]
	0x02D11A48 MOV X19, X2
	0x02D11A4C LDR X8, [X1]
	0x02D11A50 BLR X8
	0x02D11A54 CBZ X0, 0x2D11B04
	0x02D11A58 MOV X23, X0
	0x02D11A5C SUB X26, X29, 0x18
	0x02D11A60 LDR X8, [X19 + 0x20]
	0x02D11A64 SUB X4, X29, 0x10
	0x02D11A68 MOV X2, X23
	0x02D11A6C MOV X3, X31
	0x02D11A70 LDR X8, [X8 + 0xC0]
	0x02D11A74 LDR X1, [X8 + 0x68]
	0x02D11A78 LDR X0, [X1]
	0x02D11A7C LDR X8, [X1 + 0x10]
	0x02D11A80 BLR X8
	0x02D11A84 LDR X27, [X19 + 0x20]
	0x02D11A88 LDUR X24, [X29 - 0x10]
	0x02D11A8C MOV X0, X22
	0x02D11A90 MOV X2, X21
	0x02D11A94 LDR X8, [X27 + 0xC0]
	0x02D11A98 LDR X8, [X8 + 0x70]
	0x02D11A9C LDR W8, [X8 + 0x28]
	0x02D11AA0 CMP W8, 0x0
	0x02D11AA4 CSEL X1, X20, X26, LT
	0x02D11AA8 BL 0x3EB1AC0
	0x02D11AAC CBZ X24, 0x2D11B34
	0x02D11AB0 LDR X8, [X27 + 0xC0]
	0x02D11AB4 MOV X4, X22
	0x02D11AB8 LDR X9, [X8 + 0x70]
	0x02D11ABC LDR W9, [X9 + 0x28]
	0x02D11AC0 TBNZ X9, 0x1F, 0x2D11AC8
	0x02D11AC4 LDR X4, [X22]
	0x02D11AC8 LDR X1, [X8 + 0x78]
	0x02D11ACC SUB X3, X29, 0x10
	0x02D11AD0 MOV X2, X24
	0x02D11AD4 LDR X0, [X1]
	0x02D11AD8 STUR X4, [X29 - 0x10]
	0x02D11ADC LDR X8, [X1 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+8]
	007 Move [X0+32], X1
	008 Move [X0+40], X2
	009 Move X19, X0
	010 Move X20, X2
	011 Move [X0+16], X8
	012 Move W22, [X2+82]
	013 Move [X0+64], X0
	014 Move X0, X2
	015 Move X21, X1
	016 Call 0x1C17D84
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {24}
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X8, -19996672
	023 Add X8, X8, 560
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W8, [X19+112]
	026 Compare W8, 0
	027 JumpIfEqual {49}
	028 Move X0, X20
	029 Call 0x1C17D7C
	030 Move W21, W0
	031 Move X0, X20
	032 Call 0x1C18238
	033 Move TEMP, X21
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {51}
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {57}
	041 Move X8, -19996672
	042 Add X8, X8, 1000
	043 Compare X21, 0
	044 JumpIfEqual {71}
	045 Move X8, [X19+16]
	046 Move X9, [X19+32]
	047 Move [X19+24], X8
	048 Move [X19+64], X9
	049 Move X8, -19996672
	050 Add X8, X8, 492
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {59}
	055 Move X8, -19996672
	056 Add X8, X8, 704
	057 Move X8, -19996672
	058 Add X8, X8, 892
	059 Move X8, -19996672
	060 Add X8, X8, 620
	061 Move [X19+24], X8
	062 Move X8, -19996672
	063 Add X8, X8, 372
	064 Move [X19+56], X8
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X30, [X31+48]
	070 Return 
	071 Move X1, -35606528
	072 Add X1, X1, 3811
	073 Move X0, X31
	074 Call 0x1C17F3C
	075 Move X1, X31
	076 Call 0x1C17DEC

Method: T Invoke(Photon.Voice.ImageBufferNativePool`1<T> pool, Photon.Voice.ImageBufferInfo info)

Disassembly:
	0x02D11AE0 BLR X8
	0x02D11AE4 LDR X8, [X19 + 0x20]
	0x02D11AE8 MOV X0, X23
	0x02D11AEC LDR X8, [X8 + 0xC0]
	0x02D11AF0 LDR X1, [X8 + 0x80]
	0x02D11AF4 LDR X8, [X1]
	0x02D11AF8 BLR X8
	0x02D11AFC MOV X23, X0
	0x02D11B00 CBNZ X0, 0x2D11A60
	0x02D11B04 LDR X8, [X25 + 0x28]
	0x02D11B08 LDUR X9, [X29 - 0x8]
	0x02D11B0C CMP X8, X9
	0x02D11B10 B.NE 0x2D11B38
	0x02D11B14 ADD X31, X29, 0x0
	0x02D11B18 LDP X20, X19, [X31 + 0x50]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move X9, [X2+32]
	004 Move V0, [X2]
	005 Move V1, [X2+16]
	006 Move X10, [X0+24]
	007 Move X8, [X0+64]
	008 Move [X31+32], X9
	009 Move [X31], V0
	010 Move [X31+8], V1
	011 Move X3, [X0+40]
	012 Add X2, X31, 0
	013 Move X0, X8
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move X30, [X31+48]
	016 Add X31, X31, 64
	017 Return X0

Method: System.IAsyncResult BeginInvoke(Photon.Voice.ImageBufferNativePool`1<T> pool, Photon.Voice.ImageBufferInfo info, System.AsyncCallback callback, System.Object object)

Disassembly:
	0x02D11B1C LDP X22, X21, [X31 + 0x40]
	0x02D11B20 LDP X24, X23, [X31 + 0x30]
	0x02D11B24 LDP X26, X25, [X31 + 0x20]
	0x02D11B28 LDR X27, [X31 + 0x10]
	0x02D11B2C LDP X29, X30, [X31], #0x60
	0x02D11B30 RET
	0x02D11B34 BL 0x1C16F20
	0x02D11B38 BL 0x3EB1B20
	0x02D11B3C STP X30, X21, [X31 - 0x20]!
	0x02D11B40 STP X20, X19, [X31 + 0x10]
	0x02D11B44 LDR X8, [X1 + 0x20]
	0x02D11B48 MOV X20, X1
	0x02D11B4C MOV X19, X0
	0x02D11B50 LDR X8, [X8 + 0xC0]
	0x02D11B54 LDR X8, [X8 + 0x20]
	0x02D11B58 LDRB W9, [X8 + 0x135]
	0x02D11B5C TBNZ X9, 0x0, 0x2D11B6C
	0x02D11B60 MOV X0, X8
	0x02D11B64 BL 0x1C5C684
	0x02D11B68 MOV X8, X0
	0x02D11B6C MOV X0, X8
	0x02D11B70 BL 0x1C16F10
	0x02D11B74 LDR X8, [X20 + 0x20]
	0x02D11B78 MOV X21, X0
	0x02D11B7C LDR X8, [X8 + 0xC0]
	0x02D11B80 LDR X1, [X8 + 0x88]
	0x02D11B84 LDR X8, [X1]
	0x02D11B88 BLR X8
	0x02D11B8C STR X21, [X19 + 0x10]
	0x02D11B90 LDR X8, [X20 + 0x20]
	0x02D11B94 LDR X8, [X8 + 0xC0]
	0x02D11B98 LDR X0, [X8 + 0x8]
	0x02D11B9C LDRB W8, [X0 + 0x135]
	0x02D11BA0 TBNZ X8, 0x0, 0x2D11BA8
	0x02D11BA4 BL 0x1C5C684
	0x02D11BA8 BL 0x1C16F10
	0x02D11BAC LDR X8, [X20 + 0x20]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X25, 0x16CB000
	011 Move X24, 0x140E000
	012 Move W8, [X25+1941]
	013 Move X24, [X24+3288]
	014 Move X19, X4
	015 Move X20, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x140E000
	024 Move X0, [X0+3288]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X25+1941], W8
	028 Move X0, [X24]
	029 Move X1, X22
	030 Move [X31+24], X31
	031 Move [X31+8], X23
	032 Call 0x1C17E04
	033 Move [X31+16], X0
	034 Add X1, X31, 8
	035 Move X0, X21
	036 Move X2, X20
	037 Move X3, X19
	038 Call 0x1C17CB0
	039 Move X20, [X31+80]
	040 Move X19, [X31+88]
	041 Move X22, [X31+64]
	042 Move X21, [X31+72]
	043 Move X24, [X31+48]
	044 Move X23, [X31+56]
	045 Move X30, [X31+32]
	046 Move X25, [X31+40]
	047 Add X31, X31, 96
	048 Return X0

Method: T EndInvoke(System.IAsyncResult result)

Disassembly:
	0x02D11BB0 MOV X20, X0
	0x02D11BB4 LDR X8, [X8 + 0xC0]
	0x02D11BB8 LDR X1, [X8 + 0x90]

ISIL:
	001 Move X0, X1
	002 Move X1, X31
	003 Call 0x1C17CB4
	004 Return X0

