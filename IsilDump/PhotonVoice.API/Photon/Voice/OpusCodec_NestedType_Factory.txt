Type: Photon.Voice.OpusCodec/Factory

Method: Photon.Voice.IEncoder CreateEncoder(Photon.Voice.VoiceInfo i, Photon.Voice.ILogger logger)

Disassembly:
	0x022B88B4 LDRSW X27, [X21]
	0x022B88B8 CBZ X20, 0x22B88D4
	0x022B88BC LDR X8, [X19 + 0x38]
	0x022B88C0 MOV X0, X24
	0x022B88C4 MOV W1, W31
	0x022B88C8 LDR X2, [X8 + 0x18]
	0x022B88CC BL 0x337B634
	0x022B88D0 TBZ X0, 0x1F, 0x22B88E0
	0x022B88D4 MUL X8, X27, X25
	0x022B88D8 LDR W8, [X22, X8, LSL]
	0x022B88DC STR W8, [X23]
	0x022B88E0 ADD X21, X21, 0x4
	0x022B88E4 ADD X23, X23, 0x4
	0x022B88E8 SUBS X26, X26, 0x1
	0x022B88EC ADD X24, X24, 0x4
	0x022B88F0 B.NE 0x22B88B4
	0x022B88F4 LDP X20, X19, [X31 + 0x40]
	0x022B88F8 LDP X22, X21, [X31 + 0x30]
	0x022B88FC LDP X24, X23, [X31 + 0x20]
	0x022B8900 LDP X26, X25, [X31 + 0x10]
	0x022B8904 LDP X30, X27, [X31], #0x50
	0x022B8908 RET
	0x022B890C STP X30, X27, [X31 - 0x50]!
	0x022B8910 STP X26, X25, [X31 + 0x10]
	0x022B8914 STP X24, X23, [X31 + 0x20]
	0x022B8918 STP X22, X21, [X31 + 0x30]
	0x022B891C STP X20, X19, [X31 + 0x40]
	0x022B8920 LDR X8, [X6 + 0x38]
	0x022B8924 MOV X19, X6
	0x022B8928 MOV X20, X5
	0x022B892C MOV W24, W4
	0x022B8930 MOV W25, W3
	0x022B8934 MOV X21, X2
	0x022B8938 MOV X22, X1
	0x022B893C MOV X23, X0
	0x022B8940 CBNZ X8, 0x22B894C
	0x022B8944 MOV X0, X19
	0x022B8948 BL 0x1C5C6E0
	0x022B894C CMP W24, 0x1
	0x022B8950 B.LT 0x22B89A0
	0x022B8954 SXTW X25, W25
	0x022B8958 MOV W26, W24
	0x022B895C MOV X24, X20
	0x022B8960 LDR X27, [X21]
	0x022B8964 CBZ X20, 0x22B8980
	0x022B8968 LDR X8, [X19 + 0x38]
	0x022B896C MOV X0, X24
	0x022B8970 MOV W1, W31
	0x022B8974 LDR X2, [X8 + 0x18]
	0x022B8978 BL 0x337B634
	0x022B897C TBZ X0, 0x1F, 0x22B898C
	0x022B8980 MUL X8, X27, X25
	0x022B8984 LDR W8, [X22, X8, LSL]
	0x022B8988 STR W8, [X23]
	0x022B898C ADD X23, X23, 0x4
	0x022B8990 ADD X24, X24, 0x4
	0x022B8994 SUBS X26, X26, 0x1
	0x022B8998 ADD X21, X21, 0x8
	0x022B899C B.NE 0x22B8960
	0x022B89A0 LDP X20, X19, [X31 + 0x40]
	0x022B89A4 LDP X22, X21, [X31 + 0x30]
	0x022B89A8 LDP X24, X23, [X31 + 0x20]
	0x022B89AC LDP X26, X25, [X31 + 0x10]
	0x022B89B0 LDP X30, X27, [X31], #0x50
	0x022B89B4 RET
	0x022B89B8 STP X30, X27, [X31 - 0x50]!
	0x022B89BC STP X26, X25, [X31 + 0x10]
	0x022B89C0 STP X24, X23, [X31 + 0x20]
	0x022B89C4 STP X22, X21, [X31 + 0x30]
	0x022B89C8 STP X20, X19, [X31 + 0x40]
	0x022B89CC LDR X8, [X6 + 0x38]
	0x022B89D0 MOV X19, X6
	0x022B89D4 MOV X20, X5
	0x022B89D8 MOV W24, W4
	0x022B89DC MOV W25, W3
	0x022B89E0 MOV X21, X2
	0x022B89E4 MOV X22, X1
	0x022B89E8 MOV X23, X0
	0x022B89EC CBNZ X8, 0x22B89F8
	0x022B89F0 MOV X0, X19
	0x022B89F4 BL 0x1C5C6E0
	0x022B89F8 CMP W24, 0x1
	0x022B89FC B.LT 0x22B8A4C
	0x022B8A00 SXTW X25, W25
	0x022B8A04 MOV W26, W24
	0x022B8A08 MOV X24, X20
	0x022B8A0C LDRSW X27, [X21]
	0x022B8A10 CBZ X20, 0x22B8A2C
	0x022B8A14 LDR X8, [X19 + 0x38]
	0x022B8A18 MOV X0, X24
	0x022B8A1C MOV X1, X31
	0x022B8A20 LDR X2, [X8 + 0x18]
	0x022B8A24 BL 0x337C8BC
	0x022B8A28 TBZ X0, 0x1F, 0x22B8A38
	0x022B8A2C MUL X8, X27, X25
	0x022B8A30 LDR X8, [X22, X8, LSL]
	0x022B8A34 STR X8, [X23]
	0x022B8A38 ADD X23, X23, 0x8
	0x022B8A3C ADD X24, X24, 0x8
	0x022B8A40 SUBS X26, X26, 0x1
	0x022B8A44 ADD X21, X21, 0x4
	0x022B8A48 B.NE 0x22B8A0C
	0x022B8A4C LDP X20, X19, [X31 + 0x40]
	0x022B8A50 LDP X22, X21, [X31 + 0x30]
	0x022B8A54 LDP X24, X23, [X31 + 0x20]
	0x022B8A58 LDP X26, X25, [X31 + 0x10]
	0x022B8A5C LDP X30, X27, [X31], #0x50
	0x022B8A60 RET
	0x022B8A64 STP X30, X27, [X31 - 0x50]!
	0x022B8A68 STP X26, X25, [X31 + 0x10]
	0x022B8A6C STP X24, X23, [X31 + 0x20]
	0x022B8A70 STP X22, X21, [X31 + 0x30]
	0x022B8A74 STP X20, X19, [X31 + 0x40]
	0x022B8A78 LDR X8, [X6 + 0x38]
	0x022B8A7C MOV X19, X6
	0x022B8A80 MOV X20, X5
	0x022B8A84 MOV W24, W4
	0x022B8A88 MOV W25, W3
	0x022B8A8C MOV X21, X2
	0x022B8A90 MOV X22, X1
	0x022B8A94 MOV X23, X0
	0x022B8A98 CBNZ X8, 0x22B8AA4
	0x022B8A9C MOV X0, X19
	0x022B8AA0 BL 0x1C5C6E0
	0x022B8AA4 CMP W24, 0x1
	0x022B8AA8 B.LT 0x22B8AF8
	0x022B8AAC SXTW X25, W25
	0x022B8AB0 MOV W26, W24
	0x022B8AB4 MOV X24, X20
	0x022B8AB8 LDR X27, [X21]
	0x022B8ABC CBZ X20, 0x22B8AD8
	0x022B8AC0 LDR X8, [X19 + 0x38]
	0x022B8AC4 MOV X0, X24
	0x022B8AC8 MOV X1, X31
	0x022B8ACC LDR X2, [X8 + 0x18]
	0x022B8AD0 BL 0x337C8BC
	0x022B8AD4 TBZ X0, 0x1F, 0x22B8AE4
	0x022B8AD8 MUL X8, X27, X25
	0x022B8ADC LDR X8, [X22, X8, LSL]
	0x022B8AE0 STR X8, [X23]
	0x022B8AE4 ADD X21, X21, 0x8
	0x022B8AE8 ADD X23, X23, 0x8
	0x022B8AEC SUBS X26, X26, 0x1
	0x022B8AF0 ADD X24, X24, 0x8
	0x022B8AF4 B.NE 0x22B8AB8
	0x022B8AF8 LDP X20, X19, [X31 + 0x40]
	0x022B8AFC LDP X22, X21, [X31 + 0x30]
	0x022B8B00 LDP X24, X23, [X31 + 0x20]
	0x022B8B04 LDP X26, X25, [X31 + 0x10]
	0x022B8B08 LDP X30, X27, [X31], #0x50

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+104], X23
	004 Move [X31+112], X22
	005 Move [X31+120], X21
	006 Move [X31+128], X20
	007 Move [X31+136], X19
	008 Move X8, [X2+56]
	009 Move X19, X2
	010 Move X21, X1
	011 Move X20, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {35}
	014 Move X0, 0x1E65000
	015 Move X0, [X0+2640]
	016 Call 0x1C17CF4
	017 Move X0, 0x1E65000
	018 Move X0, [X0+2648]
	019 Call 0x1C17CF4
	020 Move X0, 0x1E65000
	021 Move X0, [X0+2656]
	022 Call 0x1C17CF4
	023 Move X0, 0x1E65000
	024 Move X0, [X0+2664]
	025 Call 0x1C17CF4
	026 Move X0, 0x1E3C000
	027 Move X0, [X0+1728]
	028 Call 0x1C17CF4
	029 Move X8, [X19+56]
	030 Compare X8, 0
	031 JumpIfNotEqual {35}
	032 Move X0, X19
	033 Call 0x1C5D6E0
	034 Move X8, [X19+56]
	035 Move X23, 0x1E3C000
	036 Move X23, [X23+1728]
	037 Move X22, [X8]
	038 Move X0, [X23]
	039 Move W9, [X0+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X22
	044 Move X1, X31
	045 Call Type.GetTypeFromHandle, X0
	046 Move X8, 0x1E65000
	047 Move X8, [X8+2664]
	048 Move X22, X0
	049 Move X1, X31
	050 Move X8, [X8]
	051 Move X0, X8
	052 Call Type.GetTypeFromHandle, X0
	053 Move X1, X0
	054 Move X0, X22
	055 Move X2, X31
	056 Call Type.op_Equality, X0, X1
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {76}
	061 Move X8, 0x1E65000
	062 Move V2, [X20+16]
	063 Move V0, [X20+32]
	064 Move V1, [X20]
	065 Move X8, [X8+2640]
	066 Move [X31+64], V2
	067 Move [X31+72], V0
	068 Move [X31+3], V1
	069 Move X0, [X8]
	070 Call 0x1C17F10
	071 Add X1, X31, 48
	072 Move X2, X21
	073 Move X3, X31
	074 Move X19, X0
	075 Call EncoderFloat..ctor, X0, X1, X2
	076 Move X0, [X23]
	077 Move X8, [X19+56]
	078 Move W9, [X0+224]
	079 Move X22, [X8]
	080 Compare W9, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X0, X22
	084 Move X1, X31
	085 Call Type.GetTypeFromHandle, X0
	086 Move X8, 0x1E65000
	087 Move X8, [X8+2656]
	088 Move X22, X0
	089 Move X1, X31
	090 Move X8, [X8]
	091 Move X0, X8
	092 Call Type.GetTypeFromHandle, X0
	093 Move X1, X0
	094 Move X0, X22
	095 Move X2, X31
	096 Call Type.op_Equality, X0, X1
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {125}
	101 Move X8, 0x1E65000
	102 Move V2, [X20+16]
	103 Move V0, [X20+32]
	104 Move V1, [X20]
	105 Move X8, [X8+2648]
	106 Move [X31+16], V2
	107 Move [X31+24], V0
	108 Move [X31], V1
	109 Move X0, [X8]
	110 Call 0x1C17F10
	111 Add X1, X31, 0
	112 Move X2, X21
	113 Move X3, X31
	114 Move X19, X0
	115 Call EncoderShort..ctor, X0, X1, X2
	116 Move X0, X19
	117 Move X20, [X31+128]
	118 Move X19, [X31+136]
	119 Move X22, [X31+112]
	120 Move X21, [X31+120]
	121 Move X30, [X31+96]
	122 Move X23, [X31+104]
	123 Add X31, X31, 144
	124 Return X0
	125 Move X8, [X19+56]
	126 Move X0, 0x1E3C000
	127 Move X21, [X8]
	128 Move X0, [X0+1728]
	129 Call 0x1C17D08
	130 Move W8, [X0+224]
	131 Compare W8, 0
	132 JumpIfNotEqual {134}
	133 Call 0x1C17DFC
	134 Move X0, X21
	135 Move X1, X31
	136 Call Type.GetTypeFromHandle, X0
	137 Move X22, X0
	138 Move X0, 0x1E65000
	139 Move X0, [X0+2672]
	140 Call 0x1C17D08
	141 Move X21, X0
	142 Move X23, X31
	143 Compare X22, 0
	144 JumpIfEqual {151}
	145 Move X8, [X22]
	146 Move X0, X22
	147 Move X9, [X8+360]
	148 Move X1, [X8+368]
	149 NotImplemented "Instruction BLR not yet implemented."
	150 Move X23, X0
	151 Move X0, 0x1E3E000
	152 Move X0, [X0+608]
	153 Call 0x1C17D08
	154 Move X2, X0
	155 Move X0, X21
	156 Move X1, X23
	157 Move X3, X31
	158 Call String.Concat, X0, X1, X2
	159 Move X21, X0
	160 Move X0, 0x1E65000
	161 Move W20, [X20]
	162 Move X0, [X0+544]
	163 Call 0x1C17D08
	164 Call 0x1C17F10
	165 Move X1, X21
	166 Move W2, W20
	167 Move X3, X31
	168 Move X22, X0
	169 Call UnsupportedCodecException..ctor, X0, X1, X2
	170 Move X0, X22
	171 Move X1, X19
	172 Call 0x1C17DEC

