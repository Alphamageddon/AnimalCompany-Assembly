Type: Photon.Voice.LoadBalancingTransport2

Method: System.Void .ctor(Photon.Voice.ILogger logger = null, ExitGames.Client.Photon.ConnectionProtocol connectionProtocol = 0, System.Boolean cppCompatibilityMode = False)

Disassembly:
	0x0356D1A4 BL 0x1C5C684
	0x0356D1A8 LDR W8, [X0 + 0xE0]
	0x0356D1AC CBNZ W8, 0x356D1B4
	0x0356D1B0 BL 0x1C16DFC
	0x0356D1B4 LDR X8, [X26 + 0x38]
	0x0356D1B8 LDR X0, [X8 + 0x10]
	0x0356D1BC LDRB W8, [X0 + 0x135]
	0x0356D1C0 TBNZ X8, 0x0, 0x356D1C8
	0x0356D1C4 BL 0x1C5C684
	0x0356D1C8 CBZ X25, 0x356DA6C
	0x0356D1CC ADRP X9, 0xBC8000
	0x0356D1D0 LDR X8, [X0 + 0xB8]
	0x0356D1D4 LDR X9, [X9 + 0xE98]
	0x0356D1D8 ADRP X26, 0xBC8000
	0x0356D1DC LDR X26, [X26 + 0xE58]
	0x0356D1E0 LDR X2, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 And W3, W3, 1
	004 Move X19, X0
	005 Call LoadBalancingTransport..ctor, X0, X1, X2, X3
	006 Move X0, [X19+16]
	007 Compare X0, 0
	008 JumpIfEqual {21}
	009 Move W1, 1
	010 Move X2, X31
	011 Call PhotonPeer.set_UseByteArraySlicePoolForEvents, X0, X1
	012 Move X0, [X19+16]
	013 Compare X0, 0
	014 JumpIfEqual {21}
	015 Move W1, 1
	016 Move X2, X31
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Call PhotonPeer.set_ReuseEventInstance, X0, X1
	020 Return 
	021 Call 0x1C17F20

Method: System.Int32 GetPayloadFragmentSize(Photon.Voice.SendFrameParams par)

Disassembly:
	0x0356D1E4 LDR X1, [X9]
	0x0356D1E8 LDR X3, [X26]
	0x0356D1EC MOV X0, X25
	0x0356D1F0 BL 0x227A714
	0x0356D1F4 LDR X8, [X29]
	0x0356D1F8 AND W9, W0, 0x1
	0x0356D1FC STRB W9, [X31 + 0x40]
	0x0356D200 ADD X1, X31, 0x40

ISIL:
	001 Move X8, [X1+8]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move W8, [X8+24]
	005 Move W9, 1104
	006 Subtract W0, W9, W8
	007 Return X0
	008 Move W0, 1107
	009 Return X0

Method: System.Byte get_FrameCode()

Disassembly:
	0x0356D204 MOV X0, X8
	0x0356D208 BL 0x1C16E04

ISIL:
	001 Move W0, 203
	002 Return X0

Method: System.Object buildFrameMessage(System.Byte voiceId, System.Byte evNumber, System.Byte frNumber, System.ArraySegment`1<System.Byte> data, Photon.Voice.FrameFlags flags)

Disassembly:
	0x0356D20C MOV X25, X0
	0x0356D210 CBZ X0, 0x356D228
	0x0356D214 LDR X8, [X23]
	0x0356D218 LDR X1, [X8 + 0x40]
	0x0356D21C MOV X0, X25
	0x0356D220 BL 0x1C16E00
	0x0356D224 CBZ X0, 0x356DAE4
	0x0356D228 LDR W8, [X23 + 0x18]
	0x0356D22C CMP W8, 0x1
	0x0356D230 B.LS 0x356DA70
	0x0356D234 STR X25, [X23 + 0x28]
	0x0356D238 LDR X0, [X29]
	0x0356D23C AND W19, W24, 0x1
	0x0356D240 STRB W19, [X31 + 0x3C]
	0x0356D244 ADD X1, X31, 0x3C
	0x0356D248 BL 0x1C16E04
	0x0356D24C MOV X24, X0
	0x0356D250 CBZ X0, 0x356D268
	0x0356D254 LDR X8, [X23]
	0x0356D258 LDR X1, [X8 + 0x40]
	0x0356D25C MOV X0, X24
	0x0356D260 BL 0x1C16E00
	0x0356D264 CBZ X0, 0x356DAF0
	0x0356D268 LDR W8, [X23 + 0x18]
	0x0356D26C CMP W8, 0x2
	0x0356D270 B.LS 0x356DA74
	0x0356D274 STR X24, [X23 + 0x30]
	0x0356D278 ADRP X8, 0xB86000
	0x0356D27C LDR X8, [X8 + 0x9C8]
	0x0356D280 LDR X24, [X20 + 0x10]
	0x0356D284 LDR X25, [X8]
	0x0356D288 LDR X8, [X25 + 0x38]
	0x0356D28C CBNZ X8, 0x356D29C
	0x0356D290 MOV X0, X25
	0x0356D294 BL 0x1C5C6E0
	0x0356D298 LDR X8, [X25 + 0x38]
	0x0356D29C LDR X0, [X8 + 0x10]
	0x0356D2A0 LDRB W8, [X0 + 0x135]
	0x0356D2A4 TBNZ X8, 0x0, 0x356D2AC
	0x0356D2A8 BL 0x1C5C684
	0x0356D2AC LDR W8, [X0 + 0xE0]
	0x0356D2B0 CBNZ W8, 0x356D2B8
	0x0356D2B4 BL 0x1C16DFC
	0x0356D2B8 LDR X8, [X25 + 0x38]
	0x0356D2BC LDR X0, [X8 + 0x10]
	0x0356D2C0 LDRB W8, [X0 + 0x135]
	0x0356D2C4 TBNZ X8, 0x0, 0x356D2CC
	0x0356D2C8 BL 0x1C5C684
	0x0356D2CC CBZ X24, 0x356DA78
	0x0356D2D0 ADRP X9, 0xBC8000
	0x0356D2D4 LDR X8, [X0 + 0xB8]
	0x0356D2D8 LDR X9, [X9 + 0xE68]
	0x0356D2DC LDR X3, [X26]
	0x0356D2E0 LDR X2, [X8]
	0x0356D2E4 LDR X1, [X9]
	0x0356D2E8 MOV X0, X24
	0x0356D2EC BL 0x227A714
	0x0356D2F0 LDR X8, [X29]
	0x0356D2F4 AND W9, W0, 0x1
	0x0356D2F8 STRB W9, [X31 + 0x38]
	0x0356D2FC ADD X1, X31, 0x38
	0x0356D300 MOV X0, X8
	0x0356D304 BL 0x1C16E04
	0x0356D308 MOV X24, X0
	0x0356D30C CBZ X0, 0x356D324
	0x0356D310 LDR X8, [X23]
	0x0356D314 LDR X1, [X8 + 0x40]
	0x0356D318 MOV X0, X24
	0x0356D31C BL 0x1C16E00
	0x0356D320 CBZ X0, 0x356DAFC
	0x0356D324 LDR W8, [X23 + 0x18]
	0x0356D328 CMP W8, 0x3
	0x0356D32C B.LS 0x356DA7C
	0x0356D330 STR X24, [X23 + 0x38]
	0x0356D334 LDR X0, [X29]
	0x0356D338 AND W25, W22, 0x1
	0x0356D33C STRB W25, [X31 + 0x34]
	0x0356D340 ADD X1, X31, 0x34
	0x0356D344 BL 0x1C16E04
	0x0356D348 MOV X22, X0
	0x0356D34C CBZ X0, 0x356D364
	0x0356D350 LDR X8, [X23]
	0x0356D354 LDR X1, [X8 + 0x40]
	0x0356D358 MOV X0, X22
	0x0356D35C BL 0x1C16E00
	0x0356D360 CBZ X0, 0x356DB08
	0x0356D364 LDR W8, [X23 + 0x18]
	0x0356D368 CMP W8, 0x4
	0x0356D36C B.LS 0x356DA80
	0x0356D370 STR X22, [X23 + 0x40]
	0x0356D374 ADRP X8, 0xB86000
	0x0356D378 LDR X8, [X8 + 0x9C8]
	0x0356D37C LDR X22, [X20 + 0x10]
	0x0356D380 LDR X24, [X8]
	0x0356D384 LDR X8, [X24 + 0x38]
	0x0356D388 CBNZ X8, 0x356D398
	0x0356D38C MOV X0, X24
	0x0356D390 BL 0x1C5C6E0
	0x0356D394 LDR X8, [X24 + 0x38]
	0x0356D398 LDR X0, [X8 + 0x10]
	0x0356D39C LDRB W8, [X0 + 0x135]
	0x0356D3A0 TBNZ X8, 0x0, 0x356D3A8
	0x0356D3A4 BL 0x1C5C684
	0x0356D3A8 LDR W8, [X0 + 0xE0]
	0x0356D3AC CBNZ W8, 0x356D3B4
	0x0356D3B0 BL 0x1C16DFC

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X25, 0xE73000
	012 Move W8, [X25+3642]
	013 Move W22, W6
	014 Move X19, X5
	015 Move X20, X4
	016 Move W21, W3
	017 Move W24, W2
	018 Move W26, W1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xBBA000
	025 Move X0, [X0+3312]
	026 Call 0x1C17CF4
	027 Move X0, 0xBBA000
	028 Move X0, [X0+3320]
	029 Call 0x1C17CF4
	030 Move X0, 0xBBA000
	031 Move X0, [X0+3328]
	032 Call 0x1C17CF4
	033 Move X0, 0xBAF000
	034 Move X0, [X0+1456]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+3642], W8
	038 Move X0, [X23+16]
	039 Compare X0, 0
	040 JumpIfEqual {125}
	041 Move X27, 0xBAF000
	042 Move X27, [X27+1456]
	043 Move X1, X31
	044 Call PhotonPeer.get_ByteArraySlicePool, X0
	045 Move X8, [X27]
	046 Move X25, X0
	047 Move W9, [X8+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Compare X25, 0
	053 JumpIfEqual {125}
	054 Move X23, X19
	055 ShiftRight X23, 32
	056 And X23, X23, 0x7FFFFFFF
	057 Add W1, W23, 5
	058 Move X0, X25
	059 Move X2, X31
	060 Call ByteArraySlicePool.Acquire, X0, X1
	061 Compare X0, 0
	062 JumpIfEqual {125}
	063 Move X8, [X0+16]
	064 Move X25, X0
	065 Compare X8, 0
	066 JumpIfEqual {125}
	067 Move W9, [X8+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move [X8+33], W26
	070 Move X8, [X25+16]
	071 Compare X8, 0
	072 JumpIfEqual {125}
	073 Move W9, [X8+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move [X8+34], W24
	076 Move X8, [X25+16]
	077 Compare X8, 0
	078 JumpIfEqual {125}
	079 Move W9, [X8+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 And W9, W24, 255
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move [X8+35], W22
	084 Move W21, 4
	085 Move X8, [X25+16]
	086 Compare X8, 0
	087 JumpIfEqual {125}
	088 Move W9, [X8+24]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move [X8+36], W21
	091 Move W21, 5
	092 Move X8, [X25+16]
	093 Compare X8, 0
	094 JumpIfEqual {125}
	095 Move W9, [X8+24]
	096 Compare W9, 0
	097 JumpIfEqual {126}
	098 Move [X8+32], W21
	099 Move X0, [X27]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move X2, [X25+16]
	105 Move X0, X20
	106 Move W1, W19
	107 Move W3, W21
	108 Move W4, W23
	109 Move X5, X31
	110 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	111 Add W8, W21, W23
	112 Move [X25+28], W8
	113 Move X0, X25
	114 Move X20, [X31+64]
	115 Move X19, [X31+72]
	116 Move X22, [X31+48]
	117 Move X21, [X31+56]
	118 Move X24, [X31+32]
	119 Move X23, [X31+40]
	120 Move X26, [X31+16]
	121 Move X25, [X31+24]
	122 Move X30, [X31+80]
	123 Move X27, [X31+88]
	124 Return X0
	125 Call 0x1C17F20
	126 Call 0x1C17F28

Method: System.Void onEventActionVoiceClient(ExitGames.Client.Photon.EventData ev)

Disassembly:
	0x0356D3B4 LDR X8, [X24 + 0x38]
	0x0356D3B8 LDR X0, [X8 + 0x10]
	0x0356D3BC LDRB W8, [X0 + 0x135]
	0x0356D3C0 TBNZ X8, 0x0, 0x356D3C8
	0x0356D3C4 BL 0x1C5C684
	0x0356D3C8 CBZ X22, 0x356DA84
	0x0356D3CC ADRP X9, 0xBC8000
	0x0356D3D0 LDR X8, [X0 + 0xB8]
	0x0356D3D4 LDR X9, [X9 + 0xE78]
	0x0356D3D8 LDR X3, [X26]
	0x0356D3DC LDR X2, [X8]
	0x0356D3E0 LDR X1, [X9]
	0x0356D3E4 MOV X0, X22
	0x0356D3E8 BL 0x227A714
	0x0356D3EC LDR X8, [X29]
	0x0356D3F0 AND W9, W0, 0x1
	0x0356D3F4 STRB W9, [X31 + 0x30]
	0x0356D3F8 ADD X1, X31, 0x30
	0x0356D3FC MOV X0, X8
	0x0356D400 BL 0x1C16E04
	0x0356D404 MOV X22, X0
	0x0356D408 CBZ X0, 0x356D420
	0x0356D40C LDR X8, [X23]
	0x0356D410 LDR X1, [X8 + 0x40]
	0x0356D414 MOV X0, X22
	0x0356D418 BL 0x1C16E00
	0x0356D41C CBZ X0, 0x356DB14
	0x0356D420 LDR W8, [X23 + 0x18]
	0x0356D424 CMP W8, 0x5
	0x0356D428 B.LS 0x356DA88
	0x0356D42C STR X22, [X23 + 0x48]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {38}
	007 Move W8, [X1+16]
	008 Move X20, X1
	009 Move X19, X0
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move W1, 245
	012 Move X0, X20
	013 Move X2, X31
	014 Call EventData.get_Item, X0, X1
	015 Move X21, X0
	016 Move X0, X20
	017 Move X1, X31
	018 Call EventData.get_Sender, X0
	019 Move X8, [X19+264]
	020 Compare X8, 0
	021 JumpIfEqual {38}
	022 Move W3, W0
	023 Move W4, [X8+24]
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X21
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Move X0, X19
	031 Move X1, X20
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call LoadBalancingTransport.onEventActionVoiceClient, X0, X1
	037 Return 
	038 Call 0x1C17F20

Method: System.Void onVoiceFrameEvent(System.Object content0, System.Int32 channelId, System.Int32 playerId, System.Int32 localPlayerId)

Disassembly:
	0x0356D430 LDR X0, [X27]
	0x0356D434 STR W21, [X31 + 0x2C]
	0x0356D438 ADD X1, X31, 0x2C
	0x0356D43C BL 0x1C16E04
	0x0356D440 MOV X22, X0
	0x0356D444 CBZ X0, 0x356D45C
	0x0356D448 LDR X8, [X23]
	0x0356D44C LDR X1, [X8 + 0x40]
	0x0356D450 MOV X0, X22
	0x0356D454 BL 0x1C16E00
	0x0356D458 CBZ X0, 0x356DB20
	0x0356D45C LDR W8, [X23 + 0x18]
	0x0356D460 CMP W8, 0x6
	0x0356D464 B.LS 0x356DA8C
	0x0356D468 LDR X8, [X31 + 0x8]
	0x0356D46C STR X22, [X23 + 0x50]
	0x0356D470 CBZ X8, 0x356DA90
	0x0356D474 ADRP X9, 0xB8B000
	0x0356D478 ADRP X10, 0xBC8000
	0x0356D47C LDR X8, [X8]
	0x0356D480 LDR X9, [X9 + 0x348]
	0x0356D484 LDR X10, [X10 + 0xE80]
	0x0356D488 LDR X1, [X9]
	0x0356D48C LDRH W9, [X8 + 0x12E]
	0x0356D490 LDR X22, [X10]
	0x0356D494 CBZ X9, 0x356D4B8
	0x0356D498 LDR X10, [X8 + 0xB0]
	0x0356D49C ADD X10, X10, 0x8
	0x0356D4A0 LDUR X11, [X10 - 0x8]
	0x0356D4A4 CMP X11, X1
	0x0356D4A8 B.EQ 0x356D4C8
	0x0356D4AC SUBS X9, X9, 0x1
	0x0356D4B0 ADD X10, X10, 0x10
	0x0356D4B4 B.NE 0x356D4A0
	0x0356D4B8 LDR X0, [X31 + 0x8]
	0x0356D4BC MOVZ W2, 0x1
	0x0356D4C0 BL 0x1C5C788
	0x0356D4C4 B 0x356D4D8
	0x0356D4C8 LDR W9, [X10]
	0x0356D4CC ADD W9, W9, 0x1
	0x0356D4D0 ADD X8, X8, W9, 0x4, SXTW
	0x0356D4D4 ADD X0, X8, 0x138
	0x0356D4D8 LDP X8, X4, [X0]
	0x0356D4DC LDR X0, [X31 + 0x8]
	0x0356D4E0 MOVZ W1, 0x3
	0x0356D4E4 MOV X2, X22
	0x0356D4E8 MOV X3, X23
	0x0356D4EC BLR X8
	0x0356D4F0 ADRP X8, 0xB86000
	0x0356D4F4 LDR X8, [X8 + 0x990]
	0x0356D4F8 LDR X0, [X8]
	0x0356D4FC BL 0x1C16F10
	0x0356D500 ADRP X8, 0xB86000
	0x0356D504 LDR X8, [X8 + 0x9E8]
	0x0356D508 MOV X22, X0
	0x0356D50C LDR X1, [X8]
	0x0356D510 MOV X2, X31
	0x0356D514 BL 0x3BEF5F8
	0x0356D518 CBZ X22, 0x356DA94
	0x0356D51C ADRP X8, 0xB86000
	0x0356D520 LDR X8, [X8 + 0xA20]
	0x0356D524 ADRP X9, 0xB86000
	0x0356D528 LDR X9, [X9 + 0x9B0]
	0x0356D52C LDR X1, [X8]
	0x0356D530 LDR X2, [X9]
	0x0356D534 MOV X0, X22
	0x0356D538 BL 0x227C7AC
	0x0356D53C ADRP X8, 0xB86000
	0x0356D540 LDR X22, [X20 + 0x10]
	0x0356D544 LDR X8, [X8 + 0x9D0]
	0x0356D548 MOV X24, X0
	0x0356D54C LDR X0, [X8]
	0x0356D550 MOVZ W1, 0x8
	0x0356D554 BL 0x1C16D6C
	0x0356D558 MOV X23, X0
	0x0356D55C CBZ X0, 0x356DA98
	0x0356D560 CBZ X24, 0x356D578
	0x0356D564 LDR X8, [X23]
	0x0356D568 LDR X1, [X8 + 0x40]
	0x0356D56C MOV X0, X24
	0x0356D570 BL 0x1C16E00
	0x0356D574 CBZ X0, 0x356DB2C
	0x0356D578 LDR W8, [X23 + 0x18]
	0x0356D57C CBZ W8, 0x356DA9C
	0x0356D580 STR X24, [X23 + 0x20]
	0x0356D584 LDR X24, [X20 + 0x30]
	0x0356D588 CBZ X24, 0x356D5A4
	0x0356D58C LDR X8, [X23]
	0x0356D590 LDR X1, [X8 + 0x40]
	0x0356D594 MOV X0, X24
	0x0356D598 BL 0x1C16E00
	0x0356D59C CBZ X0, 0x356DB38
	0x0356D5A0 LDR W8, [X23 + 0x18]
	0x0356D5A4 CMP W8, 0x1
	0x0356D5A8 B.LS 0x356DAA0
	0x0356D5AC STR X24, [X23 + 0x28]
	0x0356D5B0 LDR X0, [X27]
	0x0356D5B4 MOVZ W8, 0xAC44
	0x0356D5B8 STR W8, [X31 + 0x28]
	0x0356D5BC ADD X1, X31, 0x28
	0x0356D5C0 BL 0x1C16E04
	0x0356D5C4 MOV X24, X0
	0x0356D5C8 CBZ X0, 0x356D5E0
	0x0356D5CC LDR X8, [X23]
	0x0356D5D0 LDR X1, [X8 + 0x40]
	0x0356D5D4 MOV X0, X24
	0x0356D5D8 BL 0x1C16E00
	0x0356D5DC CBZ X0, 0x356DB44
	0x0356D5E0 LDR W8, [X23 + 0x18]
	0x0356D5E4 CMP W8, 0x2
	0x0356D5E8 B.LS 0x356DAA4
	0x0356D5EC STR X24, [X23 + 0x30]
	0x0356D5F0 LDR X0, [X27]
	0x0356D5F4 MOVZ W8, 0x1
	0x0356D5F8 STR W8, [X31 + 0x24]
	0x0356D5FC ADD X1, X31, 0x24
	0x0356D600 BL 0x1C16E04
	0x0356D604 MOV X24, X0
	0x0356D608 CBZ X0, 0x356D620
	0x0356D60C LDR X8, [X23]
	0x0356D610 LDR X1, [X8 + 0x40]
	0x0356D614 MOV X0, X24
	0x0356D618 BL 0x1C16E00
	0x0356D61C CBZ X0, 0x356DB50
	0x0356D620 LDR W8, [X23 + 0x18]
	0x0356D624 CMP W8, 0x3
	0x0356D628 B.LS 0x356DAA8
	0x0356D62C STR X24, [X23 + 0x38]
	0x0356D630 LDR X0, [X27]
	0x0356D634 UBFM W24, W21, 0x1E, 0x1D
	0x0356D638 STR W24, [X31 + 0x20]
	0x0356D63C ADD X1, X31, 0x20
	0x0356D640 BL 0x1C16E04
	0x0356D644 MOV X21, X0
	0x0356D648 CBZ X0, 0x356D660
	0x0356D64C LDR X8, [X23]
	0x0356D650 LDR X1, [X8 + 0x40]
	0x0356D654 MOV X0, X21
	0x0356D658 BL 0x1C16E00
	0x0356D65C CBZ X0, 0x356DB5C
	0x0356D660 LDR W8, [X23 + 0x18]
	0x0356D664 CMP W8, 0x4
	0x0356D668 B.LS 0x356DAAC
	0x0356D66C STR X21, [X23 + 0x40]
	0x0356D670 LDR X0, [X29]
	0x0356D674 STRB W28, [X31 + 0x1C]
	0x0356D678 ADD X1, X31, 0x1C
	0x0356D67C BL 0x1C16E04
	0x0356D680 MOV X21, X0
	0x0356D684 CBZ X0, 0x356D69C
	0x0356D688 LDR X8, [X23]
	0x0356D68C LDR X1, [X8 + 0x40]
	0x0356D690 MOV X0, X21
	0x0356D694 BL 0x1C16E00
	0x0356D698 CBZ X0, 0x356DB68
	0x0356D69C LDR W8, [X23 + 0x18]
	0x0356D6A0 CMP W8, 0x5
	0x0356D6A4 B.LS 0x356DAB0
	0x0356D6A8 STR X21, [X23 + 0x48]
	0x0356D6AC LDR X0, [X29]
	0x0356D6B0 STRB W19, [X31 + 0x18]
	0x0356D6B4 ADD X1, X31, 0x18
	0x0356D6B8 BL 0x1C16E04
	0x0356D6BC ADRP X19, 0xB86000
	0x0356D6C0 LDR X19, [X19 + 0x9D0]
	0x0356D6C4 MOV X21, X0
	0x0356D6C8 CBZ X0, 0x356D6E0
	0x0356D6CC LDR X8, [X23]
	0x0356D6D0 LDR X1, [X8 + 0x40]
	0x0356D6D4 MOV X0, X21
	0x0356D6D8 BL 0x1C16E00
	0x0356D6DC CBZ X0, 0x356DB74
	0x0356D6E0 LDR W8, [X23 + 0x18]
	0x0356D6E4 CMP W8, 0x6
	0x0356D6E8 B.LS 0x356DAB4
	0x0356D6EC STR X21, [X23 + 0x50]
	0x0356D6F0 LDR X0, [X29]
	0x0356D6F4 STRB W25, [X31 + 0x14]
	0x0356D6F8 ADD X1, X31, 0x14
	0x0356D6FC BL 0x1C16E04
	0x0356D700 MOV X21, X0
	0x0356D704 CBZ X0, 0x356D71C
	0x0356D708 LDR X8, [X23]
	0x0356D70C LDR X1, [X8 + 0x40]
	0x0356D710 MOV X0, X21
	0x0356D714 BL 0x1C16E00
	0x0356D718 CBZ X0, 0x356DB80
	0x0356D71C LDR W8, [X23 + 0x18]
	0x0356D720 CMP W8, 0x7
	0x0356D724 B.LS 0x356DAB8
	0x0356D728 STR X21, [X23 + 0x58]
	0x0356D72C CBZ X22, 0x356DABC
	0x0356D730 ADRP X8, 0xB8B000
	0x0356D734 LDR X8, [X8 + 0x780]
	0x0356D738 LDR X3, [X26]
	0x0356D73C LDR X1, [X8]
	0x0356D740 MOV X0, X22
	0x0356D744 MOV X2, X23
	0x0356D748 BL 0x227A714
	0x0356D74C MOV W22, W0
	0x0356D750 TBZ X0, 0x0, 0x356D93C
	0x0356D754 ADRP X8, 0xB86000
	0x0356D758 LDR X8, [X8 + 0x9C8]
	0x0356D75C LDR X21, [X20 + 0x10]
	0x0356D760 LDR X23, [X8]
	0x0356D764 LDR X8, [X23 + 0x38]
	0x0356D768 CBNZ X8, 0x356D778
	0x0356D76C MOV X0, X23
	0x0356D770 BL 0x1C5C6E0
	0x0356D774 LDR X8, [X23 + 0x38]
	0x0356D778 LDR X0, [X8 + 0x10]
	0x0356D77C LDRB W8, [X0 + 0x135]
	0x0356D780 TBNZ X8, 0x0, 0x356D788
	0x0356D784 BL 0x1C5C684
	0x0356D788 LDR W8, [X0 + 0xE0]
	0x0356D78C CBNZ W8, 0x356D794
	0x0356D790 BL 0x1C16DFC
	0x0356D794 LDR X8, [X23 + 0x38]
	0x0356D798 LDR X0, [X8 + 0x10]
	0x0356D79C LDRB W8, [X0 + 0x135]
	0x0356D7A0 TBNZ X8, 0x0, 0x356D7A8
	0x0356D7A4 BL 0x1C5C684
	0x0356D7A8 CBZ X21, 0x356DB90
	0x0356D7AC LDR X8, [X0 + 0xB8]
	0x0356D7B0 ADRP X9, 0xBC8000
	0x0356D7B4 LDR X9, [X9 + 0xEA8]
	0x0356D7B8 LDR X2, [X8]
	0x0356D7BC ADRP X8, 0xBC8000
	0x0356D7C0 LDR X1, [X9]
	0x0356D7C4 LDR X8, [X8 + 0xE60]
	0x0356D7C8 LDR X3, [X8]
	0x0356D7CC MOV X0, X21
	0x0356D7D0 BL 0x227A854
	0x0356D7D4 STR W0, [X20 + 0x28]
	0x0356D7D8 LDR X0, [X19]
	0x0356D7DC MOVZ W1, 0x4
	0x0356D7E0 BL 0x1C16D6C
	0x0356D7E4 MOV X21, X0
	0x0356D7E8 LDR X0, [X29]
	0x0356D7EC AND W8, W22, 0x1
	0x0356D7F0 STRB W8, [X31 + 0x28]
	0x0356D7F4 ADD X1, X31, 0x28
	0x0356D7F8 BL 0x1C16E04
	0x0356D7FC CBZ X21, 0x356DB98
	0x0356D800 MOV X22, X0
	0x0356D804 CBZ X0, 0x356D81C

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X23, 0xE73000
	015 Move W8, [X23+3643]
	016 Move W20, W4
	017 Move W19, W3
	018 Move X22, X1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {44}
	024 Move X0, 0xB87000
	025 Move X0, [X0+2504]
	026 Call 0x1C17CF4
	027 Move X0, 0xB8F000
	028 Move X0, [X0+3224]
	029 Call 0x1C17CF4
	030 Move X0, 0xB87000
	031 Move X0, [X0+1560]
	032 Call 0x1C17CF4
	033 Move X0, 0xBB0000
	034 Move X0, [X0+3608]
	035 Call 0x1C17CF4
	036 Move X0, 0xB8C000
	037 Move X0, [X0+840]
	038 Call 0x1C17CF4
	039 Move X0, 0xBC9000
	040 Move X0, [X0+3648]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X23+3643], W8
	044 NotImplemented "Instruction MOVI not yet implemented."
	045 Move [X31+64], X31
	046 Move [X31+32], V0
	047 Move [X31+40], V0
	048 Move [X31+1], V0
	049 Compare X22, 0
	050 JumpIfEqual {62}
	051 Move X8, 0xB8F000
	052 Move X8, [X8+3224]
	053 Move X9, [X22]
	054 Move X8, [X8]
	055 Move W11, [X9+304]
	056 Move W10, [X8+304]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X9, [X9+200]
	059 Add X9, X9, X10
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X8, 0xB87000
	063 Move X8, [X8+1560]
	064 Move X0, X22
	065 Move X1, [X8]
	066 Call 0x1C17E00
	067 Compare X0, 0
	068 JumpIfEqual {267}
	069 Move W29, [X0+24]
	070 Move X23, X0
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move W9, W31
	073 Move X22, X31
	074 Move W8, 1
	075 Move W10, [X23+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Add W11, W9, 1
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Add W12, W9, 2
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Add X9, X23, W9
	082 Add X11, X23, W11
	083 Move W26, [X9+32]
	084 Add X9, X23, W12
	085 Move W24, [X11+32]
	086 Move W25, [X9+32]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move W27, W31
	089 Move X8, 0xBC9000
	090 Move X19, [X21+416]
	091 Move X8, [X8+3648]
	092 Move X20, [X8]
	093 Compare X22, 0
	094 JumpIfEqual {125}
	095 Move X8, [X22]
	096 Move X0, X22
	097 Move X9, [X8+360]
	098 Move X1, [X8+368]
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move X1, X0
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move W27, [X23+35]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move W28, W25
	105 Move TEMP, X8
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {195}
	109 Move X8, 0xBB0000
	110 Move X8, [X8+3608]
	111 Move X0, [X8]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1C17DFC
	116 Subtract W3, W29, W26
	117 Add X0, X31, 16
	118 Move X1, X23
	119 Move W2, W26
	120 Move W4, W27
	121 Move W5, W28
	122 Move X6, X31
	123 Move X7, X31
	124 Call FrameBuffer..ctor, X0, X1, X2, X3, X4, X5, X6
	125 Move X1, X31
	126 Move X0, X20
	127 Move X2, X31
	128 Call String.Concat, X0, X1
	129 Move X8, 0xB87000
	130 Move X8, [X8+2504]
	131 Move X20, X0
	132 Move X21, [X8]
	133 Move X8, [X21+56]
	134 Compare X8, 0
	135 JumpIfNotEqual {139}
	136 Move X0, X21
	137 Call 0x1C5D6E0
	138 Move X8, [X21+56]
	139 Move X0, [X8+16]
	140 Move W8, [X0+309]
	141 Move TEMP, X8
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfEqual {146}
	145 Call 0x1C5D684
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Move X8, [X21+56]
	151 Move X0, [X8+16]
	152 Move W8, [X0+309]
	153 Move TEMP, X8
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfEqual {158}
	157 Call 0x1C5D684
	158 Compare X19, 0
	159 JumpIfEqual {267}
	160 Move X10, 0xB8C000
	161 Move X9, [X0+184]
	162 Move X8, [X19]
	163 Move X10, [X10+840]
	164 Move X21, [X9]
	165 NotImplemented "Instruction LDRH not yet implemented."
	166 Move X1, [X10]
	167 Compare X9, 0
	168 JumpIfEqual {175}
	169 Move X10, [X8+176]
	170 Add X10, X10, 8
	171 NotImplemented "Instruction LDUR not yet implemented."
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Subtract X9, X9, 1
	174 Add X10, X10, 16
	175 Move W2, 1
	176 Move X0, X19
	177 Call 0x1C5D788
	178 Move W9, [X10]
	179 Add W9, W9, 1
	180 Add X8, X8, W9
	181 Add X0, X8, 312
	182 Move X8, [X0]
	183 Move X4, [X0+8]
	184 Move W1, 1
	185 Move X0, X19
	186 Move X2, X20
	187 Move X3, X21
	188 NotImplemented "Instruction BLR not yet implemented."
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move W28, [X23+36]
	191 Move TEMP, X8
	192 And TEMP, TEMP, 1
	193 Compare TEMP, 1
	194 JumpIfEqual {109}
	195 Move [X31+8], X21
	196 Move X8, 0xBB0000
	197 Move X8, [X8+3608]
	198 Move W21, W24
	199 Move W24, W19
	200 Move W19, W20
	201 Move X0, [X8]
	202 Move X23, [X22+16]
	203 Move W20, [X22+24]
	204 Move W8, [X0+224]
	205 Compare W8, 0
	206 JumpIfNotEqual {208}
	207 Call 0x1C17DFC
	208 Add W2, W20, W26
	209 Subtract W3, W29, W26
	210 Add X0, X31, 16
	211 Move X1, X23
	212 Move W4, W27
	213 Move W5, W28
	214 Move X6, X22
	215 Move X7, X31
	216 Call FrameBuffer..ctor, X0, X1, X2, X3, X4, X5, X6
	217 Move W20, W19
	218 Move W19, W24
	219 Move W24, W21
	220 Move X21, [X31+8]
	221 Move X0, [X21+392]
	222 Compare X0, 0
	223 JumpIfEqual {267}
	224 NotImplemented "Instruction CMP not yet implemented."
	225 NotImplemented "Instruction CSET not yet implemented."
	226 Add X4, X31, 16
	227 Move W1, W19
	228 Move W2, W24
	229 Move W3, W25
	230 Move X6, X31
	231 Call VoiceClient.onFrame, X0, X1, X2, X3, X4, X5
	232 Move X8, 0xBB0000
	233 Move X8, [X8+3608]
	234 Move X0, [X8]
	235 Move W8, [X0+224]
	236 Compare W8, 0
	237 JumpIfNotEqual {239}
	238 Call 0x1C17DFC
	239 Add X0, X31, 16
	240 Move X1, X31
	241 Call FrameBuffer.Release, X0
	242 Move X20, [X31+160]
	243 Move X19, [X31+168]
	244 Move X22, [X31+144]
	245 Move X21, [X31+152]
	246 Move X24, [X31+128]
	247 Move X23, [X31+136]
	248 Move X26, [X31+112]
	249 Move X25, [X31+120]
	250 Move X28, [X31+96]
	251 Move X27, [X31+104]
	252 Move X29, [X31+80]
	253 Move X30, [X31+88]
	254 Add X31, X31, 176
	255 Return 
	256 Move W29, [X22+28]
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Move X23, [X22+16]
	259 Compare X23, 0
	260 JumpIfEqual {263}
	261 Move W9, [X22+24]
	262 Move W8, W31
	263 Move X8, 0xBC9000
	264 Move X19, [X21+416]
	265 Move X8, [X8+3648]
	266 Move X20, [X8]
	267 Call 0x1C17F20
	268 Call 0x1C17F28

