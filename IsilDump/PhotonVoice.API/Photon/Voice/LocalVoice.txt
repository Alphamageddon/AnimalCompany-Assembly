Type: Photon.Voice.LocalVoice

Method: Photon.Voice.VoiceInfo get_Info()

Disassembly:
	0x03558608 ADRP X9, 0xBC4000
	0x0355860C MOVN X10, 0x0
	0x03558610 ADD X0, X31, 0x0
	0x03558614 LDR X8, [X8]
	0x03558618 LDR X9, [X9 + 0x428]
	0x0355861C MOV X1, X31

ISIL:
	001 NotImplemented "Instruction LDUR not yet implemented."
	002 NotImplemented "Instruction LDUR not yet implemented."
	003 NotImplemented "Instruction LDUR not yet implemented."
	004 Move [X8+16], V1
	005 Move [X8+24], V0
	006 Move [X8], V2
	007 Return X0

Method: System.Boolean get_TransmitEnabled()

Disassembly:
	0x03558620 STR X8, [X23 + 0x20]
	0x03558624 LDR X8, [X9]

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_TransmitEnabled(System.Boolean value)

Disassembly:
	0x03558628 ADD X9, X20, 0x48
	0x0355862C LDR W9, [X9]
	0x03558630 STP X8, X10, [X31]
	0x03558634 STR W9, [X31 + 0x10]
	0x03558638 BL 0x33B162C
	0x0355863C LDR W8, [X23 + 0x18]
	0x03558640 CMP W8, 0x1
	0x03558644 B.LS 0x35587A0
	0x03558648 CMP W8, 0x2
	0x0355864C STR X0, [X23 + 0x28]
	0x03558650 B.EQ 0x35587A0
	0x03558654 ADRP X8, 0xBDD000
	0x03558658 LDR X8, [X8 + 0x540]
	0x0355865C ADD X0, X31, 0x1C
	0x03558660 MOV X1, X31
	0x03558664 LDR X8, [X8]
	0x03558668 STR X8, [X23 + 0x30]
	0x0355866C BL 0x3319BB4
	0x03558670 LDR W8, [X23 + 0x18]
	0x03558674 CMP W8, 0x3
	0x03558678 B.LS 0x35587A0
	0x0355867C CMP W8, 0x4
	0x03558680 STR X0, [X23 + 0x38]
	0x03558684 B.EQ 0x35587A0
	0x03558688 ADRP X8, 0xBDD000
	0x0355868C LDR X8, [X8 + 0x550]
	0x03558690 MOV X0, X19
	0x03558694 MOV W1, W22
	0x03558698 LDR X8, [X8]
	0x0355869C STR X8, [X23 + 0x40]
	0x035586A0 BL 0x3558864
	0x035586A4 LDR W8, [X23 + 0x18]
	0x035586A8 CMP W8, 0x5
	0x035586AC B.LS 0x35587A0
	0x035586B0 ADRP X22, 0xBDD000
	0x035586B4 LDR X22, [X22 + 0x528]
	0x035586B8 STR X0, [X23 + 0x48]
	0x035586BC MOV X0, X23
	0x035586C0 MOV X1, X31
	0x035586C4 BL 0x32278CC
	0x035586C8 STR X0, [X20 + 0xC8]
	0x035586CC MOV X1, X0
	0x035586D0 LDR X0, [X22]
	0x035586D4 MOV X2, X31
	0x035586D8 BL 0x321B938
	0x035586DC STR X0, [X20 + 0xD0]
	0x035586E0 LDR X21, [X21]
	0x035586E4 CBZ X21, 0x35587A8
	0x035586E8 ADRP X8, 0xBDD000
	0x035586EC LDR X8, [X8 + 0x518]
	0x035586F0 STR X21, [X20 + 0x78]
	0x035586F4 ADRP X19, 0xBDD000
	0x035586F8 ADRP X22, 0xBC7000
	0x035586FC LDR X0, [X8]
	0x03558700 LDR X19, [X19 + 0x520]
	0x03558704 LDR X22, [X22 + 0x208]
	0x03558708 BL 0x1C16F10
	0x0355870C LDR X2, [X19]
	0x03558710 MOV X1, X20
	0x03558714 MOV X3, X31
	0x03558718 MOV X19, X0
	0x0355871C BL 0x2A75B64
	0x03558720 LDR X8, [X21]
	0x03558724 LDR X1, [X22]
	0x03558728 LDRH W9, [X8 + 0x12E]
	0x0355872C CBZ X9, 0x3558750
	0x03558730 LDR X10, [X8 + 0xB0]
	0x03558734 ADD X10, X10, 0x8
	0x03558738 LDUR X11, [X10 - 0x8]
	0x0355873C CMP X11, X1
	0x03558740 B.EQ 0x3558760
	0x03558744 SUBS X9, X9, 0x1
	0x03558748 ADD X10, X10, 0x10
	0x0355874C B.NE 0x3558738
	0x03558750 MOVZ W2, 0x1
	0x03558754 MOV X0, X21
	0x03558758 BL 0x1C5C788
	0x0355875C B 0x3558770
	0x03558760 LDR W9, [X10]
	0x03558764 ADD W9, W9, 0x1
	0x03558768 ADD X8, X8, W9, 0x4, SXTW
	0x0355876C ADD X0, X8, 0x138
	0x03558770 LDP X8, X2, [X0]
	0x03558774 MOV X0, X21
	0x03558778 MOV X1, X19
	0x0355877C BLR X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE88000
	007 Move W8, [X20+3483]
	008 Move X19, X0
	009 And W22, W1, 1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xBC8000
	015 Move X0, [X0+520]
	016 Call 0x1C17CF4
	017 Move X0, 0xBDE000
	018 Move X0, [X0+1232]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3483], W8
	022 Move W8, [X19+16]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Compare W8, 0
	025 JumpIfEqual {91}
	026 Move X8, [X19+120]
	027 Compare X8, 0
	028 JumpIfEqual {91}
	029 Move X8, [X19+144]
	030 Compare X8, 0
	031 JumpIfEqual {98}
	032 Move X20, [X8+16]
	033 Compare X20, 0
	034 JumpIfEqual {98}
	035 Move X10, 0xBDE000
	036 Move X8, [X20]
	037 Move W21, [X19+132]
	038 Move X10, [X10+1232]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Move X1, [X10]
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move X0, X20
	050 Move W2, W31
	051 Call 0x1C5D788
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 Add X8, X8, X9
	054 Add X0, X8, 312
	055 Move X8, [X0]
	056 Move X2, [X0+8]
	057 Move X0, X20
	058 Move W1, W21
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {91}
	064 Move X20, [X19+120]
	065 Compare X20, 0
	066 JumpIfEqual {98}
	067 Move X10, 0xBC8000
	068 Move X8, [X20]
	069 Move X10, [X10+520]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Move X1, [X10]
	072 Compare X9, 0
	073 JumpIfEqual {80}
	074 Move X10, [X8+176]
	075 Add X10, X10, 8
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Subtract X9, X9, 1
	079 Add X10, X10, 16
	080 Move W2, 3
	081 Move X0, X20
	082 Call 0x1C5D788
	083 Move W9, [X10]
	084 Add W9, W9, 3
	085 Add X8, X8, W9
	086 Add X0, X8, 312
	087 Move X8, [X0]
	088 Move X1, [X0+8]
	089 Move X0, X20
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move [X19+16], W22
	092 Move X20, [X31+32]
	093 Move X19, [X31+40]
	094 Move X22, [X31+16]
	095 Move X21, [X31+24]
	096 Move X30, [X31+48]
	097 Return 
	098 Call 0x1C17F20

Method: System.Boolean get_IsCurrentlyTransmitting()

Disassembly:
	0x03558780 LDP X20, X19, [X31 + 0x70]
	0x03558784 LDP X22, X21, [X31 + 0x60]
	0x03558788 LDP X24, X23, [X31 + 0x50]
	0x0355878C LDP X26, X25, [X31 + 0x40]
	0x03558790 LDP X28, X27, [X31 + 0x30]
	0x03558794 LDP X29, X30, [X31 + 0x20]
	0x03558798 ADD X31, X31, 0x80
	0x0355879C RET
	0x035587A0 BL 0x1C16F28
	0x035587A4 BL 0x1C16F20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, X31
	005 Call Environment.get_TickCount
	006 Move W8, [X19+216]
	007 Subtract W8, W0, W8
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CSET not yet implemented."
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return X0

Method: System.Int32 get_FramesSent()

Disassembly:
	0x035587A8 MOV X22, X0
	0x035587AC ADRP X0, 0xBDD000

ISIL:
	001 Move W0, [X0+20]
	002 Return X0

Method: System.Void set_FramesSent(System.Int32 value)

Disassembly:
	0x035587B0 LDR X0, [X0 + 0x558]
	0x035587B4 BL 0x1C16D08

ISIL:
	001 Move [X0+20], W1
	002 Return 

Method: System.Int32 get_FramesSentFragmented()

Disassembly:
	0x035587B8 MOV X1, X0
	0x035587BC MOV X0, X22

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void set_FramesSentFragmented(System.Int32 value)

Disassembly:
	0x035587C0 MOV X2, X31
	0x035587C4 BL 0x321B938

ISIL:
	001 Move [X0+24], W1
	002 Return 

Method: System.Int32 get_FramesSentFragments()

Disassembly:
	0x035587C8 MOV X20, X0
	0x035587CC MOV X0, X19

ISIL:
	001 Move W0, [X0+28]
	002 Return X0

Method: System.Void set_FramesSentFragments(System.Int32 value)

Disassembly:
	0x035587D0 BL 0x19903C0
	0x035587D4 ADRP X0, 0xB9B000

ISIL:
	001 Move [X0+28], W1
	002 Return 

Method: System.Int32 get_FramesSentBytes()

Disassembly:
	0x035587D8 LDR X19, [X19 + 0x18]
	0x035587DC LDR X0, [X0 + 0x9C8]

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_FramesSentBytes(System.Int32 value)

Disassembly:
	0x035587E0 BL 0x1C16D08
	0x035587E4 BL 0x1BBE55C

ISIL:
	001 Move [X0+32], W1
	002 Return 

Method: System.Boolean get_Reliable()

Disassembly:
	0x035587E8 MOV X21, X0
	0x035587EC MOV X0, X19

ISIL:
	001 Move W0, [X0+36]
	002 Return X0

Method: System.Void set_Reliable(System.Boolean value)

Disassembly:
	0x035587F0 BL 0x19903C0
	0x035587F4 ADRP X0, 0xBA0000
	0x035587F8 LDR X0, [X0 + 0x348]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+36], W8
	003 Return 

Method: System.Boolean get_Encrypt()

Disassembly:
	0x035587FC BL 0x1C16D08
	0x03558800 MOV X1, X0

ISIL:
	001 Move W0, [X0+37]
	002 Return X0

Method: System.Void set_Encrypt(System.Boolean value)

Disassembly:
	0x03558804 MOVZ W0, 0x1
	0x03558808 MOVZ W3, 0x1
	0x0355880C MOV X2, X19

ISIL:
	001 And W8, W1, 1
	002 Move [X0+37], W8
	003 Return 

Method: System.Boolean get_Fragment()

Disassembly:
	0x03558810 MOV X4, X20
	0x03558814 MOV X5, X21

ISIL:
	001 Move W0, [X0+38]
	002 Return X0

Method: System.Void set_Fragment(System.Boolean value)

Disassembly:
	0x03558818 BL 0x1BBFE6C
	0x0355881C ADRP X0, 0xBA0000
	0x03558820 LDR X0, [X0 + 0x528]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+38], W8
	003 Return 

Method: System.Int32 get_FEC()

Disassembly:
	0x03558824 BL 0x1C16D08
	0x03558828 BL 0x1C16F10

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_FEC(System.Int32 value)

Disassembly:
	0x0355882C MOV X19, X0
	0x03558830 ADRP X0, 0xBDD000

ISIL:
	001 Move [X0+40], W1
	002 Return 

Method: Photon.Voice.IServiceable get_LocalUserServiceable()

Disassembly:
	0x03558834 LDR X0, [X0 + 0x560]
	0x03558838 BL 0x1C16D08

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_LocalUserServiceable(Photon.Voice.IServiceable value)

Disassembly:
	0x0355883C MOV X1, X0
	0x03558840 MOV X0, X19

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.Byte get_Group()

Disassembly:
	0x03558844 MOV X2, X31
	0x03558848 BL 0x330E100

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: System.Void set_Group(System.Byte value)

Disassembly:
	0x0355884C ADRP X0, 0xBDD000
	0x03558850 LDR X0, [X0 + 0x568]

ISIL:
	001 Move [X0+56], W1
	002 Return 

Method: System.Byte get_InterestGroup()

Disassembly:
	0x03558854 BL 0x1C16D08
	0x03558858 MOV X1, X0

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: System.Void set_InterestGroup(System.Byte value)

Disassembly:
	0x0355885C MOV X0, X19
	0x03558860 BL 0x1C16DEC

ISIL:
	001 Move [X0+56], W1
	002 Return 

Method: System.Boolean get_DebugEchoMode()

Disassembly:
	0x03558864 SUB X31, X31, 0x30
	0x03558868 STP X30, X21, [X31 + 0x10]

ISIL:
	001 Move W0, [X0+57]
	002 Return X0

Method: System.Void set_DebugEchoMode(System.Boolean value)

Disassembly:
	0x0355886C STP X20, X19, [X31 + 0x20]
	0x03558870 ADRP X21, 0xE87000
	0x03558874 LDRB W8, [X21 + 0xDD5]
	0x03558878 MOV W19, W1
	0x0355887C MOV X20, X0
	0x03558880 STR W1, [X31 + 0xC]
	0x03558884 TBNZ X8, 0x0, 0x35588B4
	0x03558888 ADRP X0, 0xBDD000
	0x0355888C LDR X0, [X0 + 0x4D0]
	0x03558890 BL 0x1C16CF4
	0x03558894 ADRP X0, 0xBA6000
	0x03558898 LDR X0, [X0 + 0x310]
	0x0355889C BL 0x1C16CF4
	0x035588A0 ADRP X0, 0xB9C000
	0x035588A4 LDR X0, [X0 + 0x608]
	0x035588A8 BL 0x1C16CF4
	0x035588AC MOVZ W8, 0x1
	0x035588B0 STRB W8, [X21 + 0xDD5]
	0x035588B4 LDR X20, [X20 + 0x10]
	0x035588B8 CBZ X20, 0x355896C
	0x035588BC ADRP X10, 0xBDD000
	0x035588C0 LDR X8, [X20]
	0x035588C4 LDR X10, [X10 + 0x4D0]
	0x035588C8 LDRH W9, [X8 + 0x12E]
	0x035588CC LDR X1, [X10]
	0x035588D0 CBZ X9, 0x35588F4
	0x035588D4 LDR X10, [X8 + 0xB0]
	0x035588D8 ADD X10, X10, 0x8
	0x035588DC LDUR X11, [X10 - 0x8]
	0x035588E0 CMP X11, X1
	0x035588E4 B.EQ 0x3558904
	0x035588E8 SUBS X9, X9, 0x1
	0x035588EC ADD X10, X10, 0x10
	0x035588F0 B.NE 0x35588DC
	0x035588F4 MOVZ W2, 0x4
	0x035588F8 MOV X0, X20
	0x035588FC BL 0x1C5C788
	0x03558900 B 0x3558914

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE88000
	006 Move W8, [X21+3484]
	007 Move X19, X0
	008 And W20, W1, 1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xB9D000
	014 Move X0, [X0+3672]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3484], W8
	018 Move W8, [X19+57]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X0, X19
	021 Move [X19+57], W20
	022 Call LocalVoice.get_isJoined, X0
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {44}
	027 Move X8, 0xB9D000
	028 Move W20, [X19+57]
	029 Move X8, [X8+3672]
	030 Move W1, W31
	031 Move X0, [X8]
	032 Call 0x1C17D6C
	033 Move X2, X0
	034 Move W1, 1
	035 Move X0, X19
	036 Compare W20, 0
	037 JumpIfEqual {49}
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Call LocalVoice.sendVoiceInfoAndConfigFrame, X0, X1, X2
	043 Return 
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return 
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Call LocalVoice.sendVoiceRemove, X0, X1, X2
	054 Return 

Method: System.Int32[] get_TargetPlayers()

Disassembly:
	0x0355902C ADRP X8, 0xBDC000
	0x03559030 ADRP X9, 0xBDC000
	0x03559034 LDR X8, [X8 + 0x598]
	0x03559038 LDR X9, [X9 + 0x5A0]
	0x0355903C MOV X2, X0
	0x03559040 MOV X0, X24
	0x03559044 LDR X1, [X8]
	0x03559048 LDR X3, [X9]
	0x0355904C MOV X4, X31
	0x03559050 BL 0x32277C4
	0x03559054 ADRP X8, 0xB9A000
	0x03559058 LDR X8, [X8 + 0x9C8]
	0x0355905C MOV X24, X0
	0x03559060 LDR X25, [X8]
	0x03559064 LDR X8, [X25 + 0x38]
	0x03559068 CBNZ X8, 0x3559078
	0x0355906C MOV X0, X25
	0x03559070 BL 0x1C5C6E0
	0x03559074 LDR X8, [X25 + 0x38]
	0x03559078 LDR X0, [X8 + 0x10]
	0x0355907C LDRB W8, [X0 + 0x135]
	0x03559080 TBNZ X8, 0x0, 0x3559088
	0x03559084 BL 0x1C5C684
	0x03559088 LDR W8, [X0 + 0xE0]
	0x0355908C CBNZ W8, 0x3559094
	0x03559090 BL 0x1C16DFC
	0x03559094 LDR X8, [X25 + 0x38]
	0x03559098 LDR X0, [X8 + 0x10]
	0x0355909C LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE87000
	005 Move W8, [X20+3485]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB9C000
	012 Move X0, [X0+3672]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3485], W8
	016 Move X0, [X19+64]
	017 Compare X0, 0
	018 JumpIfEqual {31}
	019 Move X1, X31
	020 Call Array.Clone, X0
	021 Compare X0, 0
	022 JumpIfEqual {31}
	023 Move X8, 0xB9C000
	024 Move X8, [X8+3672]
	025 Move X19, X0
	026 Move X20, [X8]
	027 Move X1, X20
	028 Call 0x1C17E00
	029 Compare X0, 0
	030 JumpIfEqual {35}
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0
	035 Move X0, X19
	036 Move X1, X20
	037 Call 0x1C181E0

Method: System.Void set_TargetPlayers(System.Int32[] value)

Disassembly:
	0x035590A0 TBNZ X8, 0x0, 0x35590A8
	0x035590A4 BL 0x1C5C684
	0x035590A8 CBZ X23, 0x35591E8
	0x035590AC ADRP X10, 0xB9F000
	0x035590B0 LDR X9, [X0 + 0xB8]
	0x035590B4 LDR X8, [X23]
	0x035590B8 LDR X10, [X10 + 0x348]
	0x035590BC LDR X25, [X9]
	0x035590C0 LDRH W9, [X8 + 0x12E]
	0x035590C4 LDR X1, [X10]
	0x035590C8 CBZ X9, 0x35590EC
	0x035590CC LDR X10, [X8 + 0xB0]
	0x035590D0 ADD X10, X10, 0x8
	0x035590D4 LDUR X11, [X10 - 0x8]
	0x035590D8 CMP X11, X1
	0x035590DC B.EQ 0x35590FC
	0x035590E0 SUBS X9, X9, 0x1
	0x035590E4 ADD X10, X10, 0x10
	0x035590E8 B.NE 0x35590D4
	0x035590EC MOVZ W2, 0x1
	0x035590F0 MOV X0, X23
	0x035590F4 BL 0x1C5C788
	0x035590F8 B 0x355910C
	0x035590FC LDR W9, [X10]
	0x03559100 ADD W9, W9, 0x1
	0x03559104 ADD X8, X8, W9, 0x4, SXTW
	0x03559108 ADD X0, X8, 0x138
	0x0355910C LDP X8, X4, [X0]
	0x03559110 MOVZ W1, 0x3
	0x03559114 MOV X0, X23
	0x03559118 MOV X2, X24
	0x0355911C MOV X3, X25
	0x03559120 BLR X8
	0x03559124 LDR X8, [X19 + 0x90]
	0x03559128 CBZ X8, 0x35591E8
	0x0355912C LDR X23, [X8 + 0x10]
	0x03559130 CBZ X23, 0x35591E8
	0x03559134 ADRP X10, 0xBDC000
	0x03559138 LDR X8, [X23]
	0x0355913C LDR X10, [X10 + 0x4D0]
	0x03559140 LDR W24, [X19 + 0x84]
	0x03559144 LDRH W9, [X8 + 0x12E]
	0x03559148 LDR X1, [X10]
	0x0355914C CBZ X9, 0x3559170
	0x03559150 LDR X10, [X8 + 0xB0]
	0x03559154 ADD X10, X10, 0x8
	0x03559158 LDUR X11, [X10 - 0x8]
	0x0355915C CMP X11, X1
	0x03559160 B.EQ 0x3559180
	0x03559164 SUBS X9, X9, 0x1
	0x03559168 ADD X10, X10, 0x10
	0x0355916C B.NE 0x3559158
	0x03559170 MOV X0, X23
	0x03559174 MOV W2, W31
	0x03559178 BL 0x1C5C788
	0x0355917C B 0x355918C
	0x03559180 LDRSW X9, [X10]
	0x03559184 ADD X8, X8, X9, 0x4, LSL
	0x03559188 ADD X0, X8, 0x138
	0x0355918C LDP X8, X2, [X0]
	0x03559190 MOV X0, X23
	0x03559194 MOV W1, W24
	0x03559198 BLR X8
	0x0355919C TBZ X0, 0x0, 0x35591CC
	0x035591A0 LDRB W8, [X19 + 0x10]
	0x035591A4 CBZ W8, 0x35591CC
	0x035591A8 LDRB W4, [X19 + 0x39]
	0x035591AC LDR X5, [X19 + 0x40]
	0x035591B0 LDRB W7, [X19 + 0x24]
	0x035591B4 LDRB W6, [X19 + 0x38]
	0x035591B8 MOV X0, X19
	0x035591BC MOV X1, X22
	0x035591C0 MOV X2, X21
	0x035591C4 MOV W3, W20
	0x035591C8 BL 0x35598FC
	0x035591CC LDP X20, X19, [X31 + 0x70]
	0x035591D0 LDP X22, X21, [X31 + 0x60]
	0x035591D4 LDP X24, X23, [X31 + 0x50]
	0x035591D8 LDP X26, X25, [X31 + 0x40]
	0x035591DC LDR X30, [X31 + 0x30]
	0x035591E0 ADD X31, X31, 0x80

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE87000
	007 Move W8, [X21+3486]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xBDD000
	015 Move X0, [X0+1272]
	016 Call 0x1C17CF4
	017 Move X0, 0xB9D000
	018 Move X0, [X0+2504]
	019 Call 0x1C17CF4
	020 Move X0, 0xB9C000
	021 Move X0, [X0+3672]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3486], W8
	025 Compare X20, 0
	026 JumpIfEqual {45}
	027 Move X0, X20
	028 Move X1, X31
	029 Call Array.Clone, X0
	030 Compare X0, 0
	031 JumpIfEqual {44}
	032 Move X8, 0xB9C000
	033 Move X8, [X8+3672]
	034 Move X21, X0
	035 Move X22, [X8]
	036 Move X1, X22
	037 Call 0x1C17E00
	038 Move X20, X0
	039 Compare X0, 0
	040 JumpIfNotEqual {45}
	041 Move X0, X21
	042 Move X1, X22
	043 Call 0x1C181E0
	044 Move X20, X31
	045 Move X0, X19
	046 Call LocalVoice.get_isJoined, X0
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {90}
	051 Move X8, [X19+64]
	052 Compare X20, 0
	053 JumpIfEqual {79}
	054 Compare X8, 0
	055 JumpIfEqual {79}
	056 Move X21, 0xBDD000
	057 Move X21, [X21+1272]
	058 Move X0, X8
	059 Move X1, X20
	060 Move X2, [X21]
	061 Call Enumerable.Except, X0, X1
	062 Move X22, 0xB9D000
	063 Move X22, [X22+2504]
	064 Move X1, [X22]
	065 Call Enumerable.ToArray, X0
	066 Move X2, X0
	067 Move X0, X19
	068 Move W1, W31
	069 Call LocalVoice.sendVoiceRemove, X0, X1, X2
	070 Move X1, [X19+64]
	071 Move X2, [X21]
	072 Move X0, X20
	073 Call Enumerable.Except, X0, X1
	074 Move X1, [X22]
	075 Call Enumerable.ToArray, X0
	076 Move X2, X0
	077 Move X0, X19
	078 Move W1, W31
	079 Or X9, X20, X8
	080 Compare X9, 0
	081 JumpIfEqual {90}
	082 Move X0, X19
	083 Move W1, W31
	084 Move X2, X8
	085 Call LocalVoice.sendVoiceRemove, X0, X1, X2
	086 Move X0, X19
	087 Move W1, W31
	088 Move X2, X20
	089 Call LocalVoice.sendVoiceInfoAndConfigFrame, X0, X1, X2
	090 Move [X19+64], X20
	091 Move X20, [X31+32]
	092 Move X19, [X31+40]
	093 Move X22, [X31+16]
	094 Move X21, [X31+24]
	095 Move X30, [X31+48]
	096 Return 

Method: System.Void SendSpacingProfileStart()

Disassembly:
	0x035591E4 RET
	0x035591E8 BL 0x1C16F20
	0x035591EC MOVZ W0, 0x1
	0x035591F0 CBZ X2, 0x3559204
	0x035591F4 TBNZ X1, 0x0, 0x3559204
	0x035591F8 LDR W8, [X2 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+256]
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X30, [X31+16]
	006 Call SpacingProfile.Start, X0
	007 Return 
	008 Call 0x1C17F20

Method: System.String get_SendSpacingProfileDump()

Disassembly:
	0x035591FC CMP W8, 0x0
	0x03559200 CSET W0, NE
	0x03559204 RET
	0x03559208 LDRB W1, [X0 + 0x39]
	0x0355920C LDR X2, [X0 + 0x40]
	0x03559210 B 0x35579C4

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+256]
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X30, [X31+16]
	006 Call SpacingProfile.get_Dump, X0
	007 Return X0
	008 Call 0x1C17F20

Method: System.Int32 get_SendSpacingProfileMax()

Disassembly:
	0x03559214 LDRB W1, [X0 + 0x39]
	0x03559218 LDR X2, [X0 + 0x40]
	0x0355921C B 0x3557E04
	0x03559220 SUB X31, X31, 0x30
	0x03559224 STP X30, X21, [X31 + 0x10]
	0x03559228 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+256]
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X30, [X31+16]
	006 Call SpacingProfile.get_Max, X0
	007 Return X0
	008 Call 0x1C17F20

Method: System.Byte get_ID()

Disassembly:
	0x0355922C ADRP X21, 0xE86000
	0x03559230 LDRB W8, [X21 + 0xDA3]

ISIL:
	001 Move W0, [X0+128]
	002 Return X0

Method: System.Byte get_EvNumber()

Disassembly:
	0x03559234 MOV W19, W1
	0x03559238 MOV X20, X0

ISIL:
	001 Move W0, [X0+136]
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x0355923C STR W1, [X31 + 0xC]
	0x03559240 TBNZ X8, 0x0, 0x3559294
	0x03559244 ADRP X0, 0xB9A000
	0x03559248 LDR X0, [X0 + 0x9C8]
	0x0355924C BL 0x1C16CF4
	0x03559250 ADRP X0, 0xBDC000
	0x03559254 LDR X0, [X0 + 0x5B0]
	0x03559258 BL 0x1C16CF4
	0x0355925C ADRP X0, 0xB9F000
	0x03559260 LDR X0, [X0 + 0x348]
	0x03559264 BL 0x1C16CF4
	0x03559268 ADRP X0, 0xB9B000
	0x0355926C LDR X0, [X0 + 0xE58]
	0x03559270 BL 0x1C16CF4
	0x03559274 ADRP X0, 0xBDC000
	0x03559278 LDR X0, [X0 + 0x5B8]
	0x0355927C BL 0x1C16CF4
	0x03559280 ADRP X0, 0xBDC000
	0x03559284 LDR X0, [X0 + 0x5C0]
	0x03559288 BL 0x1C16CF4
	0x0355928C MOVZ W8, 0x1
	0x03559290 STRB W8, [X21 + 0xDA3]
	0x03559294 LDR X0, [X20 + 0x40]
	0x03559298 CBZ X0, 0x35592B4
	0x0355929C ADRP X8, 0xBDC000
	0x035592A0 LDR X8, [X8 + 0x5B0]
	0x035592A4 MOV W1, W19
	0x035592A8 LDR X2, [X8]
	0x035592AC BL 0x21BA3B8
	0x035592B0 TBZ X0, 0x0, 0x35592F4
	0x035592B4 ADRP X8, 0xB9B000
	0x035592B8 LDR X8, [X8 + 0xE58]
	0x035592BC MOVZ W1, 0x1
	0x035592C0 LDR X0, [X8]
	0x035592C4 BL 0x1C16D6C
	0x035592C8 CBZ X0, 0x3559418
	0x035592CC LDR W8, [X0 + 0x18]
	0x035592D0 MOV X2, X0
	0x035592D4 CBZ W8, 0x355941C
	0x035592D8 STR W19, [X2 + 0x20]
	0x035592DC MOV X0, X20
	0x035592E0 LDP X20, X19, [X31 + 0x20]
	0x035592E4 LDP X30, X21, [X31 + 0x10]
	0x035592E8 MOV W1, W31
	0x035592EC ADD X31, X31, 0x30
	0x035592F0 B 0x35579C4
	0x035592F4 LDR X8, [X20 + 0x90]
	0x035592F8 CBZ X8, 0x3559418
	0x035592FC LDR X19, [X8 + 0x18]
	0x03559300 LDR X20, [X20 + 0xD0]
	0x03559304 ADD X0, X31, 0xC
	0x03559308 MOV X1, X31
	0x0355930C BL 0x337B6E0
	0x03559310 ADRP X8, 0xBDC000
	0x03559314 ADRP X9, 0xBDC000
	0x03559318 LDR X8, [X8 + 0x5B8]
	0x0355931C LDR X9, [X9 + 0x5C0]
	0x03559320 MOV X2, X0
	0x03559324 MOV X0, X20
	0x03559328 LDR X1, [X8]
	0x0355932C LDR X3, [X9]
	0x03559330 MOV X4, X31
	0x03559334 BL 0x32277C4
	0x03559338 ADRP X8, 0xB9A000
	0x0355933C LDR X8, [X8 + 0x9C8]
	0x03559340 MOV X20, X0
	0x03559344 LDR X21, [X8]
	0x03559348 LDR X8, [X21 + 0x38]
	0x0355934C CBNZ X8, 0x355935C
	0x03559350 MOV X0, X21
	0x03559354 BL 0x1C5C6E0
	0x03559358 LDR X8, [X21 + 0x38]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xE87000
	010 Move X20, 0xBA1000
	011 Move X24, 0xB9B000
	012 Move X23, 0xBDD000
	013 Move X22, 0xBDD000
	014 Move X21, 0xBDD000
	015 Move W8, [X25+3487]
	016 Move X20, [X20+3264]
	017 Move X24, [X24+1560]
	018 Move X23, [X23+1280]
	019 Move X22, [X22+1288]
	020 Move X21, [X21+1296]
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {43}
	026 Move X0, 0xB9B000
	027 Move X0, [X0+1560]
	028 Call 0x1C17CF4
	029 Move X0, 0xBDD000
	030 Move X0, [X0+1288]
	031 Call 0x1C17CF4
	032 Move X0, 0xBDD000
	033 Move X0, [X0+1280]
	034 Call 0x1C17CF4
	035 Move X0, 0xBA1000
	036 Move X0, [X0+3264]
	037 Call 0x1C17CF4
	038 Move X0, 0xBDD000
	039 Move X0, [X0+1296]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X25+3487], W8
	043 Move W8, 1
	044 Move [X19+16], W8
	045 Move X0, [X20]
	046 Call 0x1C17F10
	047 Move X1, X31
	048 Move X20, X0
	049 Call Object..ctor, X0
	050 Move X0, X31
	051 Move [X19+184], X20
	052 Call Environment.get_TickCount
	053 Subtract W8, W0, 100
	054 Move [X19+216], W8
	055 Move X0, [X24]
	056 Move W1, W31
	057 Call 0x1C17D6C
	058 Move [X19+224], X0
	059 Move X0, [X23]
	060 Call 0x1C17F10
	061 Move X1, [X22]
	062 Move X20, X0
	063 Call Dictionary`2<Byte, Int32>..ctor, X0
	064 Move [X19+248], X20
	065 Move X0, [X21]
	066 Call 0x1C17F10
	067 Move X1, X31
	068 Move X20, X0
	069 Call Object..ctor, X0
	070 Move W8, 1000
	071 Move [X20+32], W8
	072 Move [X19+256], X20
	073 Move X0, X19
	074 Move X20, [X31+48]
	075 Move X19, [X31+56]
	076 Move X22, [X31+32]
	077 Move X21, [X31+40]
	078 Move X24, [X31+16]
	079 Move X23, [X31+24]
	080 Move X1, X31
	081 Move X30, [X31+64]
	082 Move X25, [X31+72]
	083 Call Object..ctor, X0
	084 Return 

Method: System.Void .ctor(Photon.Voice.VoiceClient voiceClient, System.Byte id, Photon.Voice.VoiceInfo voiceInfo, System.Int32 channelId, Photon.Voice.VoiceCreateOptions opt)

Disassembly:
	0x0355935C LDR X0, [X8 + 0x10]
	0x03559360 LDRB W8, [X0 + 0x135]
	0x03559364 TBNZ X8, 0x0, 0x355936C
	0x03559368 BL 0x1C5C684
	0x0355936C LDR W8, [X0 + 0xE0]
	0x03559370 CBNZ W8, 0x3559378
	0x03559374 BL 0x1C16DFC
	0x03559378 LDR X8, [X21 + 0x38]
	0x0355937C LDR X0, [X8 + 0x10]
	0x03559380 LDRB W8, [X0 + 0x135]
	0x03559384 TBNZ X8, 0x0, 0x355938C
	0x03559388 BL 0x1C5C684
	0x0355938C CBZ X19, 0x3559418
	0x03559390 ADRP X10, 0xB9F000
	0x03559394 LDR X9, [X0 + 0xB8]
	0x03559398 LDR X8, [X19]
	0x0355939C LDR X10, [X10 + 0x348]
	0x035593A0 LDR X21, [X9]
	0x035593A4 LDRH W9, [X8 + 0x12E]
	0x035593A8 LDR X1, [X10]
	0x035593AC CBZ X9, 0x35593D0
	0x035593B0 LDR X10, [X8 + 0xB0]
	0x035593B4 ADD X10, X10, 0x8
	0x035593B8 LDUR X11, [X10 - 0x8]
	0x035593BC CMP X11, X1
	0x035593C0 B.EQ 0x35593E0
	0x035593C4 SUBS X9, X9, 0x1
	0x035593C8 ADD X10, X10, 0x10
	0x035593CC B.NE 0x35593B8
	0x035593D0 MOVZ W2, 0x1
	0x035593D4 MOV X0, X19
	0x035593D8 BL 0x1C5C788
	0x035593DC B 0x35593F0
	0x035593E0 LDR W9, [X10]
	0x035593E4 ADD W9, W9, 0x1
	0x035593E8 ADD X8, X8, W9, 0x4, SXTW
	0x035593EC ADD X0, X8, 0x138
	0x035593F0 LDP X8, X4, [X0]
	0x035593F4 MOVZ W1, 0x3
	0x035593F8 MOV X0, X19
	0x035593FC MOV X2, X20
	0x03559400 MOV X3, X21
	0x03559404 BLR X8
	0x03559408 LDP X20, X19, [X31 + 0x20]
	0x0355940C LDP X30, X21, [X31 + 0x10]
	0x03559410 ADD X31, X31, 0x30
	0x03559414 RET
	0x03559418 BL 0x1C16F20
	0x0355941C BL 0x1C16F28
	0x03559420 LDRB W1, [X0 + 0x39]
	0x03559424 LDR X2, [X0 + 0x40]
	0x03559428 B 0x35579C4
	0x0355942C STP X30, X21, [X31 - 0x20]!
	0x03559430 STP X20, X19, [X31 + 0x10]
	0x03559434 ADRP X21, 0xE86000
	0x03559438 LDRB W8, [X21 + 0xDA4]
	0x0355943C MOV X20, X2
	0x03559440 MOV W19, W1
	0x03559444 TBNZ X8, 0x0, 0x3559498
	0x03559448 ADRP X0, 0xB9E000
	0x0355944C LDR X0, [X0 + 0xBB8]
	0x03559450 BL 0x1C16CF4
	0x03559454 ADRP X0, 0xBDC000
	0x03559458 LDR X0, [X0 + 0x5C8]
	0x0355945C BL 0x1C16CF4
	0x03559460 ADRP X0, 0xBDC000
	0x03559464 LDR X0, [X0 + 0x5D0]
	0x03559468 BL 0x1C16CF4
	0x0355946C ADRP X0, 0xB9A000
	0x03559470 LDR X0, [X0 + 0x838]
	0x03559474 BL 0x1C16CF4
	0x03559478 ADRP X0, 0xB9A000
	0x0355947C LDR X0, [X0 + 0x988]
	0x03559480 BL 0x1C16CF4
	0x03559484 ADRP X0, 0xBDC000
	0x03559488 LDR X0, [X0 + 0x5D8]
	0x0355948C BL 0x1C16CF4
	0x03559490 MOVZ W8, 0x1
	0x03559494 STRB W8, [X21 + 0xDA4]
	0x03559498 CBZ X20, 0x3559500
	0x0355949C ADRP X8, 0xB9A000
	0x035594A0 ADRP X9, 0xB9E000
	0x035594A4 LDR X8, [X8 + 0x838]
	0x035594A8 LDR X9, [X9 + 0xBB8]
	0x035594AC MOV X1, X20
	0x035594B0 LDR X0, [X8]
	0x035594B4 LDR X2, [X9]
	0x035594B8 BL 0x226B6E8
	0x035594BC TBZ X19, 0x0, 0x3559510
	0x035594C0 CBZ X0, 0x355951C
	0x035594C4 LDR W8, [X0 + 0x10]
	0x035594C8 ADRP X9, 0xBDC000
	0x035594CC ADRP X10, 0xB9A000
	0x035594D0 LDR X9, [X9 + 0x5D0]
	0x035594D4 LDR X10, [X10 + 0x988]
	0x035594D8 ADRP X11, 0xBDC000
	0x035594DC LDR X11, [X11 + 0x5C8]
	0x035594E0 CMP W8, 0x0
	0x035594E4 CSEL X8, X9, X10, GT
	0x035594E8 LDR X1, [X8]
	0x035594EC LDR X2, [X11]
	0x035594F0 LDP X20, X19, [X31 + 0x10]
	0x035594F4 MOV X3, X31
	0x035594F8 LDP X30, X21, [X31], #0x20
	0x035594FC B 0x32274B8
	0x03559500 ADRP X8, 0xBDC000
	0x03559504 LDR X8, [X8 + 0x5D8]
	0x03559508 LDR X0, [X8]
	0x0355950C TBNZ X19, 0x0, 0x35594C0
	0x03559510 LDP X20, X19, [X31 + 0x10]
	0x03559514 LDP X30, X21, [X31], #0x20
	0x03559518 RET
	0x0355951C BL 0x1C16F20
	0x03559520 SUB X31, X31, 0x40
	0x03559524 STP X30, X21, [X31 + 0x20]
	0x03559528 STP X20, X19, [X31 + 0x30]
	0x0355952C ADRP X21, 0xE86000
	0x03559530 ADRP X20, 0xB9A000
	0x03559534 LDRB W8, [X21 + 0xDF2]
	0x03559538 LDR X20, [X20 + 0xAC8]
	0x0355953C MOV X19, X0
	0x03559540 TBNZ X8, 0x0, 0x35595E8
	0x03559544 ADRP X0, 0xBC3000
	0x03559548 LDR X0, [X0 + 0x428]
	0x0355954C BL 0x1C16CF4
	0x03559550 ADRP X0, 0xB9A000
	0x03559554 LDR X0, [X0 + 0xAC8]
	0x03559558 BL 0x1C16CF4
	0x0355955C ADRP X0, 0xBDC000
	0x03559560 LDR X0, [X0 + 0x5E0]
	0x03559564 BL 0x1C16CF4
	0x03559568 ADRP X0, 0xBDC000
	0x0355956C LDR X0, [X0 + 0x5E8]
	0x03559570 BL 0x1C16CF4
	0x03559574 ADRP X0, 0xBDC000
	0x03559578 LDR X0, [X0 + 0x5F0]
	0x0355957C BL 0x1C16CF4
	0x03559580 ADRP X0, 0xBDC000
	0x03559584 LDR X0, [X0 + 0x5F8]
	0x03559588 BL 0x1C16CF4
	0x0355958C ADRP X0, 0xBDC000
	0x03559590 LDR X0, [X0 + 0x600]
	0x03559594 BL 0x1C16CF4
	0x03559598 ADRP X0, 0xBDC000
	0x0355959C LDR X0, [X0 + 0x608]
	0x035595A0 BL 0x1C16CF4
	0x035595A4 ADRP X0, 0xBDC000
	0x035595A8 LDR X0, [X0 + 0x610]
	0x035595AC BL 0x1C16CF4
	0x035595B0 ADRP X0, 0xBDC000
	0x035595B4 LDR X0, [X0 + 0x618]
	0x035595B8 BL 0x1C16CF4
	0x035595BC ADRP X0, 0xBDC000
	0x035595C0 LDR X0, [X0 + 0x620]
	0x035595C4 BL 0x1C16CF4
	0x035595C8 ADRP X0, 0xBDC000
	0x035595CC LDR X0, [X0 + 0x628]
	0x035595D0 BL 0x1C16CF4
	0x035595D4 ADRP X0, 0xBDC000
	0x035595D8 LDR X0, [X0 + 0x630]
	0x035595DC BL 0x1C16CF4
	0x035595E0 MOVZ W8, 0x1
	0x035595E4 STRB W8, [X21 + 0xDF2]
	0x035595E8 LDR X0, [X20]
	0x035595EC MOVZ W1, 0x16
	0x035595F0 STR W31, [X31 + 0x1C]
	0x035595F4 BL 0x1C16D6C
	0x035595F8 CBZ X0, 0x35598F8
	0x035595FC LDR W8, [X0 + 0x18]
	0x03559600 MOV X20, X0
	0x03559604 CBZ W8, 0x35598F4
	0x03559608 ADRP X8, 0xBDC000
	0x0355960C LDR X8, [X8 + 0x600]
	0x03559610 ADRP X9, 0xBC3000
	0x03559614 MOVN X10, 0x0
	0x03559618 ADD X0, X31, 0x0
	0x0355961C LDR X8, [X8]
	0x03559620 LDR X9, [X9 + 0x428]
	0x03559624 MOV X1, X31
	0x03559628 STR X8, [X20 + 0x20]
	0x0355962C LDR X8, [X9]
	0x03559630 LDR W9, [X19]
	0x03559634 STP X8, X10, [X31]
	0x03559638 STR W9, [X31 + 0x10]
	0x0355963C BL 0x33B162C
	0x03559640 LDR W8, [X20 + 0x18]
	0x03559644 CMP W8, 0x1
	0x03559648 B.LS 0x35598F4
	0x0355964C CMP W8, 0x2
	0x03559650 STR X0, [X20 + 0x28]
	0x03559654 B.EQ 0x35598F4
	0x03559658 ADRP X8, 0xBDC000
	0x0355965C LDR X8, [X8 + 0x5E0]
	0x03559660 ADD X0, X31, 0x1C
	0x03559664 MOV X1, X31
	0x03559668 LDR X8, [X8]
	0x0355966C STR X8, [X20 + 0x30]
	0x03559670 LDR W8, [X19 + 0x4]
	0x03559674 STR W8, [X31 + 0x1C]
	0x03559678 BL 0x337B6E0
	0x0355967C LDR W8, [X20 + 0x18]
	0x03559680 CMP W8, 0x3
	0x03559684 B.LS 0x35598F4
	0x03559688 CMP W8, 0x4
	0x0355968C STR X0, [X20 + 0x38]
	0x03559690 B.EQ 0x35598F4
	0x03559694 ADRP X8, 0xBDC000
	0x03559698 LDR X8, [X8 + 0x620]
	0x0355969C ADD X0, X31, 0x1C
	0x035596A0 MOV X1, X31
	0x035596A4 LDR X8, [X8]
	0x035596A8 STR X8, [X20 + 0x40]
	0x035596AC LDR W8, [X19 + 0x8]
	0x035596B0 STR W8, [X31 + 0x1C]
	0x035596B4 BL 0x337B6E0
	0x035596B8 LDR W8, [X20 + 0x18]
	0x035596BC CMP W8, 0x5
	0x035596C0 B.LS 0x35598F4
	0x035596C4 CMP W8, 0x6
	0x035596C8 STR X0, [X20 + 0x48]
	0x035596CC B.EQ 0x35598F4
	0x035596D0 ADRP X8, 0xBDC000
	0x035596D4 LDR X8, [X8 + 0x5F0]
	0x035596D8 ADD X0, X31, 0x1C
	0x035596DC MOV X1, X31
	0x035596E0 LDR X8, [X8]
	0x035596E4 STR X8, [X20 + 0x50]
	0x035596E8 LDR W8, [X19 + 0xC]
	0x035596EC STR W8, [X31 + 0x1C]
	0x035596F0 BL 0x337B6E0
	0x035596F4 LDR W8, [X20 + 0x18]
	0x035596F8 CMP W8, 0x7
	0x035596FC B.LS 0x35598F4
	0x03559700 CMP W8, 0x8
	0x03559704 STR X0, [X20 + 0x58]
	0x03559708 B.EQ 0x35598F4
	0x0355970C ADRP X8, 0xBDC000
	0x03559710 LDR X8, [X8 + 0x628]
	0x03559714 MOVZ X10, 0x34DB
	0x03559718 MOVK X10, 0xD7B60000
	0x0355971C MOVK X10, 0xDE82
	0x03559720 LDR X8, [X8]
	0x03559724 MOVK X10, 0x431B0000
	0x03559728 ADD X0, X31, 0x1C
	0x0355972C MOV X1, X31
	0x03559730 STR X8, [X20 + 0x60]
	0x03559734 LDRSW X9, [X19 + 0x4]
	0x03559738 LDP W11, W8, [X19 + 0x8]
	0x0355973C SXTW X8, W8
	0x03559740 MUL X8, X8, X9
	0x03559744 SMULH X8, X8, X10, X31
	0x03559748 UBFM X9, X8, 0x3F, 0x3F
	0x0355974C UBFM X8, X8, 0x12, 0x3F
	0x03559750 ADD W8, W8, W9
	0x03559754 MUL W8, W11, W8
	0x03559758 STR W8, [X31 + 0x1C]
	0x0355975C BL 0x337B6E0
	0x03559760 LDR W8, [X20 + 0x18]
	0x03559764 CMP W8, 0x9
	0x03559768 B.LS 0x35598F4
	0x0355976C CMP W8, 0xA
	0x03559770 STR X0, [X20 + 0x68]
	0x03559774 B.EQ 0x35598F4
	0x03559778 ADRP X8, 0xBDC000
	0x0355977C LDR X8, [X8 + 0x618]
	0x03559780 ADD X0, X31, 0x1C
	0x03559784 MOV X1, X31
	0x03559788 LDR X8, [X8]
	0x0355978C STR X8, [X20 + 0x70]
	0x03559790 LDR W8, [X19 + 0x10]
	0x03559794 STR W8, [X31 + 0x1C]
	0x03559798 BL 0x337B6E0
	0x0355979C LDR W8, [X20 + 0x18]
	0x035597A0 CMP W8, 0xB
	0x035597A4 B.LS 0x35598F4
	0x035597A8 CMP W8, 0xC
	0x035597AC STR X0, [X20 + 0x78]
	0x035597B0 B.EQ 0x35598F4
	0x035597B4 ADRP X8, 0xBDC000
	0x035597B8 LDR X8, [X8 + 0x610]
	0x035597BC ADD X0, X31, 0x1C
	0x035597C0 MOV X1, X31
	0x035597C4 LDR X8, [X8]
	0x035597C8 STR X8, [X20 + 0x80]
	0x035597CC LDR W8, [X19 + 0x14]
	0x035597D0 STR W8, [X31 + 0x1C]
	0x035597D4 BL 0x337B6E0
	0x035597D8 LDR W8, [X20 + 0x18]
	0x035597DC CMP W8, 0xD
	0x035597E0 B.LS 0x35598F4
	0x035597E4 CMP W8, 0xE
	0x035597E8 STR X0, [X20 + 0x88]
	0x035597EC B.EQ 0x35598F4
	0x035597F0 ADRP X8, 0xBDC000
	0x035597F4 LDR X8, [X8 + 0x5E8]
	0x035597F8 ADD X0, X31, 0x1C
	0x035597FC MOV X1, X31
	0x03559800 LDR X8, [X8]
	0x03559804 STR X8, [X20 + 0x90]
	0x03559808 LDR W8, [X19 + 0x18]
	0x0355980C STR W8, [X31 + 0x1C]
	0x03559810 BL 0x337B6E0
	0x03559814 LDR W8, [X20 + 0x18]
	0x03559818 CMP W8, 0xF
	0x0355981C B.LS 0x35598F4
	0x03559820 CMP W8, 0x10
	0x03559824 STR X0, [X20 + 0x98]
	0x03559828 B.EQ 0x35598F4
	0x0355982C ADRP X8, 0xBDC000
	0x03559830 LDR X8, [X8 + 0x630]
	0x03559834 ADD X0, X31, 0x1C
	0x03559838 MOV X1, X31
	0x0355983C LDR X8, [X8]
	0x03559840 STR X8, [X20 + 0xA0]
	0x03559844 LDR W8, [X19 + 0x1C]
	0x03559848 STR W8, [X31 + 0x1C]
	0x0355984C BL 0x337B6E0
	0x03559850 LDR W8, [X20 + 0x18]
	0x03559854 CMP W8, 0x11
	0x03559858 B.LS 0x35598F4
	0x0355985C CMP W8, 0x12
	0x03559860 STR X0, [X20 + 0xA8]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move [X31+28], W2
	015 Move X26, 0xE87000
	016 Move X25, 0xBA1000
	017 Move X29, 0xB9B000
	018 Move X28, 0xBDD000
	019 Move X27, 0xBDD000
	020 Move W8, [X26+3488]
	021 Move X25, [X25+3264]
	022 Move X29, [X29+1560]
	023 Move X28, [X28+1280]
	024 Move X27, [X27+1288]
	025 Move X21, X5
	026 Move W22, W4
	027 Move X24, X3
	028 Move W23, W2
	029 Move X19, X1
	030 Move X20, X0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {85}
	035 Move X0, 0xBDD000
	036 Move X0, [X0+1304]
	037 Call 0x1C17CF4
	038 Move X0, 0xB9B000
	039 Move X0, [X0+1560]
	040 Call 0x1C17CF4
	041 Move X0, 0xBC4000
	042 Move X0, [X0+1064]
	043 Call 0x1C17CF4
	044 Move X0, 0xBDD000
	045 Move X0, [X0+1288]
	046 Call 0x1C17CF4
	047 Move X0, 0xBDD000
	048 Move X0, [X0+1280]
	049 Call 0x1C17CF4
	050 Move X0, 0xBC7000
	051 Move X0, [X0+520]
	052 Call 0x1C17CF4
	053 Move X0, 0xBDD000
	054 Move X0, [X0+1312]
	055 Call 0x1C17CF4
	056 Move X0, 0xBA1000
	057 Move X0, [X0+3264]
	058 Call 0x1C17CF4
	059 Move X0, 0xBDD000
	060 Move X0, [X0+1296]
	061 Call 0x1C17CF4
	062 Move X0, 0xB9B000
	063 Move X0, [X0+2760]
	064 Call 0x1C17CF4
	065 Move X0, 0xBDD000
	066 Move X0, [X0+1320]
	067 Call 0x1C17CF4
	068 Move X0, 0xBDD000
	069 Move X0, [X0+1328]
	070 Call 0x1C17CF4
	071 Move X0, 0xBDD000
	072 Move X0, [X0+1336]
	073 Call 0x1C17CF4
	074 Move X0, 0xBDD000
	075 Move X0, [X0+1344]
	076 Call 0x1C17CF4
	077 Move X0, 0xBDD000
	078 Move X0, [X0+1352]
	079 Call 0x1C17CF4
	080 Move X0, 0xBDD000
	081 Move X0, [X0+1360]
	082 Call 0x1C17CF4
	083 Move W8, 1
	084 Move [X26+3488], W8
	085 Move W8, 1
	086 Move [X20+16], W8
	087 Move X0, [X25]
	088 Call 0x1C17F10
	089 Move X1, X31
	090 Move X25, X0
	091 Call Object..ctor, X0
	092 Move X0, X31
	093 Move [X20+184], X25
	094 Call Environment.get_TickCount
	095 Subtract W8, W0, 100
	096 Move [X20+216], W8
	097 Move X0, [X29]
	098 Move W1, W31
	099 Call 0x1C17D6C
	100 Move [X20+224], X0
	101 Move X0, [X28]
	102 Call 0x1C17F10
	103 Move X1, [X27]
	104 Move X25, X0
	105 Call Dictionary`2<Byte, Int32>..ctor, X0
	106 Move [X20+248], X25
	107 Move X8, 0xBDD000
	108 Move X8, [X8+1296]
	109 Move X0, [X8]
	110 Call 0x1C17F10
	111 Move X1, X31
	112 Move X25, X0
	113 Call Object..ctor, X0
	114 Move W8, 1000
	115 Move X0, X20
	116 Move X1, X31
	117 Move [X25+32], W8
	118 Move [X20+256], X25
	119 Call Object..ctor, X0
	120 Move V1, [X24+16]
	121 Move V0, [X24+32]
	122 Move V2, [X24]
	123 Move [X20+132], W22
	124 Move X0, X20
	125 Move [X20+104], V0
	126 Move [X20+88], V1
	127 Move [X20+72], V2
	128 Move W8, [X21+8]
	129 Move [X20+56], W8
	130 Move X1, [X21+16]
	131 Call LocalVoice.set_TargetPlayers, X0, X1
	132 Move W8, [X21+24]
	133 Move X0, X20
	134 And W1, W8, 1
	135 Call LocalVoice.set_DebugEchoMode, X0, X1
	136 Move W8, [X21+25]
	137 And W8, W8, 1
	138 Move [X20+36], W8
	139 Move W8, [X21+26]
	140 And W8, W8, 1
	141 Move [X20+37], W8
	142 Move W8, [X21+27]
	143 And W8, W8, 1
	144 Move [X20+38], W8
	145 Move W8, [X21+28]
	146 Move [X20+144], X19
	147 Move [X20+40], W8
	148 Compare X19, 0
	149 JumpIfEqual {292}
	150 Move W8, [X19+32]
	151 Move X24, 0xBDD000
	152 Move X25, 0xBDD000
	153 Move X26, 0xB9B000
	154 Move X24, [X24+1336]
	155 Move X25, [X25+1352]
	156 Move X26, [X26+2760]
	157 Add X0, X31, 28
	158 Move X1, X31
	159 Move [X20+152], W8
	160 Move [X20+128], W23
	161 Call Byte.ToString, X0
	162 Move X23, X0
	163 Move X0, X19
	164 Move W1, W22
	165 Call VoiceClient.channelStr, X0, X1
	166 Move X8, [X24]
	167 Move X2, [X25]
	168 Move X3, X0
	169 Move X1, X23
	170 Move X0, X8
	171 Move X4, X31
	172 Call String.Concat, X0, X1, X2, X3
	173 Move [X20+192], X0
	174 Move X0, [X26]
	175 Move W1, 6
	176 Call 0x1C17D6C
	177 Compare X0, 0
	178 JumpIfEqual {292}
	179 Move W8, [X0+24]
	180 Move X23, X0
	181 Compare W8, 0
	182 JumpIfEqual {291}
	183 Move X8, 0xBDD000
	184 Move X8, [X8+1328]
	185 Move X9, 0xBC4000
	186 Move TEMP, 0
	187 Not TEMP
	188 Move X10, TEMP
	189 Add X0, X31, 0
	190 Move X8, [X8]
	191 Move X9, [X9+1064]
	192 Move X1, X31
	193 Move [X23+32], X8
	194 Move X8, [X9]
	195 Add X9, X20, 72
	196 Move W9, [X9]
	197 Move [X31], X8
	198 Move [X31+8], X10
	199 Move [X31+16], W9
	200 Call Enum.ToString, X0
	201 Move W8, [X23+24]
	202 NotImplemented "Instruction CMP not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move [X23+40], X0
	205 Move X8, 0xBDD000
	206 Move X8, [X8+1344]
	207 Add X0, X31, 28
	208 Move X1, X31
	209 Move X8, [X8]
	210 Move [X23+48], X8
	211 Call Byte.ToString, X0
	212 Move W8, [X23+24]
	213 NotImplemented "Instruction CMP not yet implemented."
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move [X23+56], X0
	216 Move X8, 0xBDD000
	217 Move X8, [X8+1360]
	218 Move X0, X19
	219 Move W1, W22
	220 Move X8, [X8]
	221 Move [X23+64], X8
	222 Call VoiceClient.channelStr, X0, X1
	223 Move W8, [X23+24]
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move X22, 0xBDD000
	226 Move X22, [X22+1320]
	227 Move [X23+72], X0
	228 Move X0, X23
	229 Move X1, X31
	230 Call String.Concat, X0
	231 Move [X20+200], X0
	232 Move X1, X0
	233 Move X0, [X22]
	234 Move X2, X31
	235 Call String.Concat, X0, X1
	236 Move [X20+208], X0
	237 Move X21, [X21]
	238 Compare X21, 0
	239 JumpIfEqual {293}
	240 Move X8, 0xBDD000
	241 Move X8, [X8+1304]
	242 Move [X20+120], X21
	243 Move X19, 0xBDD000
	244 Move X22, 0xBC7000
	245 Move X0, [X8]
	246 Move X19, [X19+1312]
	247 Move X22, [X22+520]
	248 Call 0x1C17F10
	249 Move X2, [X19]
	250 Move X1, X20
	251 Move X3, X31
	252 Move X19, X0
	253 Call 0x2A76B64, X0, X1, X2
	254 Move X8, [X21]
	255 Move X1, [X22]
	256 NotImplemented "Instruction LDRH not yet implemented."
	257 Compare X9, 0
	258 JumpIfEqual {265}
	259 Move X10, [X8+176]
	260 Add X10, X10, 8
	261 NotImplemented "Instruction LDUR not yet implemented."
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Subtract X9, X9, 1
	264 Add X10, X10, 16
	265 Move W2, 1
	266 Move X0, X21
	267 Call 0x1C5D788
	268 Move W9, [X10]
	269 Add W9, W9, 1
	270 Add X8, X8, W9
	271 Add X0, X8, 312
	272 Move X8, [X0]
	273 Move X2, [X0+8]
	274 Move X0, X21
	275 Move X1, X19
	276 NotImplemented "Instruction BLR not yet implemented."
	277 Move X20, [X31+112]
	278 Move X19, [X31+120]
	279 Move X22, [X31+96]
	280 Move X21, [X31+104]
	281 Move X24, [X31+80]
	282 Move X23, [X31+88]
	283 Move X26, [X31+64]
	284 Move X25, [X31+72]
	285 Move X28, [X31+48]
	286 Move X27, [X31+56]
	287 Move X29, [X31+32]
	288 Move X30, [X31+40]
	289 Add X31, X31, 128
	290 Return 
	291 Call 0x1C17F28
	292 Call 0x1C17F20
	293 Move X22, X0
	294 Move X0, 0xBDD000
	295 Move X0, [X0+1368]
	296 Call 0x1C17D08
	297 Move X1, X0
	298 Move X0, X22
	299 Move X2, X31
	300 Call String.Concat, X0, X1
	301 Move X20, X0
	302 Move X0, X19
	303 Call 0x19913C0
	304 Move X0, 0xB9B000
	305 Move X19, [X19+24]
	306 Move X0, [X0+2504]
	307 Call 0x1C17D08
	308 Call 0x1BBF55C
	309 Move X21, X0
	310 Move X0, X19
	311 Call 0x19913C0
	312 Move X0, 0xBA0000
	313 Move X0, [X0+840]
	314 Call 0x1C17D08
	315 Move X1, X0
	316 Move W0, 1
	317 Move W3, 1
	318 Move X2, X19
	319 Move X4, X20
	320 Move X5, X21
	321 Call 0x1BC0E6C
	322 Move X0, 0xBA0000
	323 Move X0, [X0+1320]
	324 Call 0x1C17D08
	325 Call 0x1C17F10
	326 Move X19, X0
	327 Move X0, 0xBDD000
	328 Move X0, [X0+1376]
	329 Call 0x1C17D08
	330 Move X1, X0
	331 Move X0, X19
	332 Move X2, X31
	333 Call ArgumentNullException..ctor, X0, X1
	334 Move X0, 0xBDD000
	335 Move X0, [X0+1384]
	336 Call 0x1C17D08
	337 Move X1, X0
	338 Move X0, X19
	339 Call 0x1C17DEC

Method: System.String get_shortName()

Disassembly:
	0x03559970 BL 0x1C16CF4
	0x03559974 ADRP X0, 0xBC2000

ISIL:
	001 Move X0, [X0+192]
	002 Return X0

Method: System.String get_Name()

Disassembly:
	0x03559978 LDR X0, [X0 + 0x5B0]
	0x0355997C BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+200]
	002 Return X0

Method: System.String get_LogPrefix()

Disassembly:
	0x03559980 ADRP X0, 0xB9A000
	0x03559984 LDR X0, [X0 + 0x9C8]

ISIL:
	001 Move X0, [X0+208]
	002 Return X0

Method: System.Void service()

Disassembly:
	0x03559988 BL 0x1C16CF4
	0x0355998C ADRP X0, 0xBDC000
	0x03559990 LDR X0, [X0 + 0x3E8]
	0x03559994 BL 0x1C16CF4
	0x03559998 ADRP X0, 0xB9F000
	0x0355999C LDR X0, [X0 + 0x348]
	0x035599A0 BL 0x1C16CF4
	0x035599A4 ADRP X0, 0xBDC000
	0x035599A8 LDR X0, [X0 + 0x4D0]
	0x035599AC BL 0x1C16CF4
	0x035599B0 ADRP X0, 0xB9A000
	0x035599B4 LDR X0, [X0 + 0xAC8]
	0x035599B8 BL 0x1C16CF4
	0x035599BC ADRP X0, 0xBDC000
	0x035599C0 LDR X0, [X0 + 0x638]
	0x035599C4 BL 0x1C16CF4
	0x035599C8 ADRP X0, 0xBDC000
	0x035599CC LDR X0, [X0 + 0x640]
	0x035599D0 BL 0x1C16CF4
	0x035599D4 ADRP X0, 0xB9B000
	0x035599D8 LDR X0, [X0 + 0x2A8]
	0x035599DC BL 0x1C16CF4
	0x035599E0 ADRP X0, 0xBDC000
	0x035599E4 LDR X0, [X0 + 0x648]
	0x035599E8 BL 0x1C16CF4
	0x035599EC ADRP X0, 0xBDC000
	0x035599F0 LDR X0, [X0 + 0x3F8]
	0x035599F4 BL 0x1C16CF4
	0x035599F8 ADRP X0, 0xBDC000
	0x035599FC LDR X0, [X0 + 0x650]
	0x03559A00 BL 0x1C16CF4
	0x03559A04 ADRP X0, 0xBDC000
	0x03559A08 LDR X0, [X0 + 0x658]
	0x03559A0C BL 0x1C16CF4
	0x03559A10 MOVZ W8, 0x1
	0x03559A14 STRB W8, [X20 + 0xDA8]
	0x03559A18 STR W31, [X31 + 0xB0]
	0x03559A1C STUR W31, [X31 + 0xB3]
	0x03559A20 STR W31, [X31 + 0xA8]
	0x03559A24 STRB W31, [X31 + 0xAC]
	0x03559A28 STRB W31, [X31 + 0xA4]
	0x03559A2C STR W31, [X31 + 0xA0]
	0x03559A30 STRB W31, [X31 + 0x9C]
	0x03559A34 CBZ X23, 0x3559A44
	0x03559A38 TBNZ X26, 0x0, 0x3559A44
	0x03559A3C LDR W8, [X23 + 0x18]
	0x03559A40 CBZ W8, 0x3559E90
	0x03559A44 LDRB W9, [X19 + 0x25]
	0x03559A48 AND W8, W26, 0x1
	0x03559A4C UBFM X28, X21, 0x20, 0x3F
	0x03559A50 STR W8, [X31 + 0x38]
	0x03559A54 AND W8, W25, 0x1
	0x03559A58 STP W8, W9, [X31 + 0x3C]
	0x03559A5C TBNZ X27, 0x0, 0x3559DE8
	0x03559A60 LDRB W8, [X19 + 0x26]
	0x03559A64 CBZ W8, 0x3559DE8
	0x03559A68 LDR X8, [X19 + 0x90]
	0x03559A6C CBZ X8, 0x355A1AC
	0x03559A70 LDR X25, [X8 + 0x10]
	0x03559A74 LDR W8, [X31 + 0xB0]
	0x03559A78 LDUR W9, [X31 + 0xB3]
	0x03559A7C LDR W10, [X31 + 0xA8]
	0x03559A80 LDRB W11, [X31 + 0xAC]
	0x03559A84 STR W8, [X31 + 0x94]
	0x03559A88 STUR W9, [X31 + 0x97]
	0x03559A8C STR W10, [X31 + 0x8C]
	0x03559A90 STRB W11, [X31 + 0x90]
	0x03559A94 CBZ X25, 0x355A1AC
	0x03559A98 LDR W8, [X31 + 0x94]
	0x03559A9C LDUR W9, [X31 + 0x97]
	0x03559AA0 LDR W10, [X31 + 0x8C]
	0x03559AA4 LDRB W11, [X31 + 0x90]
	0x03559AA8 STR W8, [X31 + 0x84]
	0x03559AAC STUR W9, [X31 + 0x87]
	0x03559AB0 STR W10, [X31 + 0x7C]
	0x03559AB4 STRB W11, [X31 + 0x80]
	0x03559AB8 ADRP X10, 0xBDC000
	0x03559ABC LDR X8, [X25]
	0x03559AC0 LDR X10, [X10 + 0x4D0]
	0x03559AC4 LDRH W9, [X8 + 0x12E]
	0x03559AC8 LDR X1, [X10]
	0x03559ACC CBZ X9, 0x3559AF0
	0x03559AD0 LDR X10, [X8 + 0xB0]
	0x03559AD4 ADD X10, X10, 0x8
	0x03559AD8 LDUR X11, [X10 - 0x8]
	0x03559ADC CMP X11, X1
	0x03559AE0 B.EQ 0x3559B00
	0x03559AE4 SUBS X9, X9, 0x1
	0x03559AE8 ADD X10, X10, 0x10
	0x03559AEC B.NE 0x3559AD8
	0x03559AF0 MOVZ W2, 0x6
	0x03559AF4 MOV X0, X25
	0x03559AF8 BL 0x1C5C788
	0x03559AFC B 0x3559B10
	0x03559B00 LDR W9, [X10]
	0x03559B04 ADD W9, W9, 0x6
	0x03559B08 ADD X8, X8, W9, 0x4, SXTW
	0x03559B0C ADD X0, X8, 0x138
	0x03559B10 LDR W11, [X31 + 0x44]
	0x03559B14 LDR X8, [X0]
	0x03559B18 LDR W9, [X31 + 0x38]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE87000
	009 Move W8, [X20+3489]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xBCE000
	016 Move X0, [X0+3320]
	017 Call 0x1C17CF4
	018 Move X0, 0xBC3000
	019 Move X0, [X0+1456]
	020 Call 0x1C17CF4
	021 Move X0, 0xBC7000
	022 Move X0, [X0+520]
	023 Call 0x1C17CF4
	024 Move X0, 0xBDD000
	025 Move X0, [X0+1392]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+3489], W8
	029 Move [X31+12], W31
	030 Move X20, [X19+120]
	031 Compare X20, 0
	032 JumpIfEqual {82}
	033 Move X22, 0xBDD000
	034 Move X23, 0xBC7000
	035 Move X24, 0xBC3000
	036 Move X22, [X22+1392]
	037 Move X23, [X23+520]
	038 Move X24, [X24+1456]
	039 Move X8, [X20]
	040 Move X1, [X23]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Compare X9, 0
	043 JumpIfEqual {50}
	044 Move X10, [X8+176]
	045 Add X10, X10, 8
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract X9, X9, 1
	049 Add X10, X10, 16
	050 Move W2, 2
	051 Move X0, X20
	052 Call 0x1C5D788
	053 Move W9, [X10]
	054 Add W9, W9, 2
	055 Add X8, X8, W9
	056 Add X0, X8, 312
	057 Move X8, [X0]
	058 Move X2, [X0+8]
	059 Add X1, X31, 12
	060 Move X0, X20
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move X20, X0
	063 Move X0, [X24]
	064 Move X21, X1
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X8, X21
	070 ShiftRight X8, 32
	071 And X8, X8, 0x7FFFFFFF
	072 Compare X8, 0
	073 JumpIfEqual {83}
	074 Move W3, [X31+12]
	075 Move X0, X19
	076 Move X1, X20
	077 Move X2, X21
	078 Call LocalVoice.sendFrame, X0, X1, X2
	079 Move X20, [X19+120]
	080 Compare X20, 0
	081 JumpIfNotEqual {39}
	082 Call 0x1C17F20
	083 Move X20, [X19+48]
	084 Compare X20, 0
	085 JumpIfEqual {108}
	086 Move X8, [X20]
	087 Move X1, [X22]
	088 NotImplemented "Instruction LDRH not yet implemented."
	089 Compare X9, 0
	090 JumpIfEqual {97}
	091 Move X10, [X8+176]
	092 Add X10, X10, 8
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Subtract X9, X9, 1
	096 Add X10, X10, 16
	097 Move X0, X20
	098 Move W2, W31
	099 Call 0x1C5D788
	100 NotImplemented "Instruction LDRSW not yet implemented."
	101 Add X8, X8, X9
	102 Add X0, X8, 312
	103 Move X8, [X0]
	104 Move X2, [X0+8]
	105 Move X0, X20
	106 Move X1, X19
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move X20, [X31+48]
	109 Move X19, [X31+56]
	110 Move X22, [X31+32]
	111 Move X21, [X31+40]
	112 Move X24, [X31+16]
	113 Move X23, [X31+24]
	114 Move X30, [X31+64]
	115 Return 

Method: System.Boolean get_isJoined()

Disassembly:
	0x03558904 LDR W9, [X10]
	0x03558908 ADD W9, W9, 0x4
	0x0355890C ADD X8, X8, W9, 0x4, SXTW
	0x03558910 ADD X0, X8, 0x138
	0x03558914 LDP X8, X2, [X0]
	0x03558918 MOV X0, X20
	0x0355891C MOV W1, W19
	0x03558920 BLR X8
	0x03558924 MOV X19, X0
	0x03558928 ADD X0, X31, 0xC
	0x0355892C MOV X1, X31
	0x03558930 BL 0x337B6E0
	0x03558934 CBZ X19, 0x355895C
	0x03558938 ADRP X8, 0xBA6000
	0x0355893C ADRP X9, 0xB9C000
	0x03558940 LDR X8, [X8 + 0x310]
	0x03558944 LDR X9, [X9 + 0x608]
	0x03558948 MOV X2, X19
	0x0355894C MOV X4, X31
	0x03558950 LDR X1, [X8]
	0x03558954 LDR X3, [X9]
	0x03558958 BL 0x32277C4
	0x0355895C LDP X20, X19, [X31 + 0x20]
	0x03558960 LDP X30, X21, [X31 + 0x10]
	0x03558964 ADD X31, X31, 0x30
	0x03558968 RET
	0x0355896C BL 0x1C16F20
	0x03558970 LDR X0, [X0 + 0xC0]
	0x03558974 RET
	0x03558978 LDR X0, [X0 + 0xC8]
	0x0355897C RET
	0x03558980 LDR X0, [X0 + 0xD0]
	0x03558984 RET
	0x03558988 STR X30, [X31 - 0x40]!
	0x0355898C STP X24, X23, [X31 + 0x10]
	0x03558990 STP X22, X21, [X31 + 0x20]
	0x03558994 STP X20, X19, [X31 + 0x30]
	0x03558998 ADRP X20, 0xE87000
	0x0355899C LDRB W8, [X20 + 0xDA1]
	0x035589A0 MOV X19, X0
	0x035589A4 TBNZ X8, 0x0, 0x35589E0
	0x035589A8 ADRP X0, 0xBCE000
	0x035589AC LDR X0, [X0 + 0xCF8]
	0x035589B0 BL 0x1C16CF4
	0x035589B4 ADRP X0, 0xBC3000
	0x035589B8 LDR X0, [X0 + 0x5B0]
	0x035589BC BL 0x1C16CF4
	0x035589C0 ADRP X0, 0xBC7000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xE88000
	005 Move W8, [X19+3490]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xBDE000
	012 Move X0, [X0+1232]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X19+3490], W8
	016 Move X8, [X20+144]
	017 Compare X8, 0
	018 JumpIfEqual {39}
	019 Move X19, [X8+16]
	020 Compare X19, 0
	021 JumpIfEqual {55}
	022 Move X10, 0xBDE000
	023 Move X8, [X19]
	024 Move X10, [X10+1232]
	025 Move W20, [X20+132]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move X0, X19
	037 Move W2, W31
	038 Call 0x1C5D788
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move W0, W31
	042 Move X30, [X31+32]
	043 Return X0
	044 NotImplemented "Instruction LDRSW not yet implemented."
	045 Add X8, X8, X9
	046 Add X0, X8, 312
	047 Move X3, [X0]
	048 Move X2, [X0+8]
	049 Move X0, X19
	050 Move W1, W20
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 CallNoReturn X3
	055 Call 0x1C17F20

Method: System.Boolean targetExits(System.Boolean targetMe, System.Int32[] targetPlayers)

Disassembly:
	0x0355A1EC STP X20, X19, [X31 + 0x110]
	0x0355A1F0 ADRP X21, 0xE85000
	0x0355A1F4 LDRB W8, [X21 + 0xDA9]
	0x0355A1F8 MOV X20, X4
	0x0355A1FC MOV X23, X2
	0x0355A200 MOV X22, X1
	0x0355A204 MOV X19, X0

ISIL:
	001 Move W0, 1
	002 Compare X2, 0
	003 JumpIfEqual {11}
	004 Move TEMP, X1
	005 And TEMP, TEMP, 1
	006 Compare TEMP, 1
	007 JumpIfEqual {11}
	008 Move W8, [X2+24]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 Return X0

Method: System.Void onJoinChannel()

Disassembly:
	0x0355A208 STR W3, [X31 + 0x2C]
	0x0355A20C TBNZ X8, 0x0, 0x355A278
	0x0355A210 ADRP X0, 0xBC4000

ISIL:
	001 Move W1, [X0+57]
	002 Move X2, [X0+64]
	003 Call LocalVoice.sendVoiceInfoAndConfigFrame, X0, X1, X2
	004 Return 

Method: System.Void onLeaveChannel()

Disassembly:
	0x0355A214 LDR X0, [X0 + 0xB88]
	0x0355A218 BL 0x1C16CF4
	0x0355A21C ADRP X0, 0xBCC000

ISIL:
	001 Move W1, [X0+57]
	002 Move X2, [X0+64]
	003 Call LocalVoice.sendVoiceRemove, X0, X1, X2
	004 Return 

Method: System.Void onPlayerJoin(System.Int32 playerId)

Disassembly:
	0x0355A220 LDR X0, [X0 + 0xCF0]
	0x0355A224 BL 0x1C16CF4
	0x0355A228 ADRP X0, 0xBCC000
	0x0355A22C LDR X0, [X0 + 0xCF8]
	0x0355A230 BL 0x1C16CF4
	0x0355A234 ADRP X0, 0xBCC000
	0x0355A238 LDR X0, [X0 + 0xD00]
	0x0355A23C BL 0x1C16CF4
	0x0355A240 ADRP X0, 0xBC1000
	0x0355A244 LDR X0, [X0 + 0x5B0]
	0x0355A248 BL 0x1C16CF4
	0x0355A24C ADRP X0, 0xB99000
	0x0355A250 LDR X0, [X0 + 0x618]
	0x0355A254 BL 0x1C16CF4
	0x0355A258 ADRP X0, 0xBDB000
	0x0355A25C LDR X0, [X0 + 0x660]
	0x0355A260 BL 0x1C16CF4
	0x0355A264 ADRP X0, 0xBDB000
	0x0355A268 LDR X0, [X0 + 0x4D0]
	0x0355A26C BL 0x1C16CF4
	0x0355A270 MOVZ W8, 0x1
	0x0355A274 STRB W8, [X21 + 0xDA9]
	0x0355A278 LDR X8, [X19 + 0x90]
	0x0355A27C CBZ X8, 0x355A778
	0x0355A280 LDR W21, [X19 + 0x28]
	0x0355A284 LDR X28, [X8 + 0x10]
	0x0355A288 LDRB W24, [X19 + 0x88]
	0x0355A28C LDR W25, [X19 + 0x14]
	0x0355A290 LDRB W26, [X19 + 0x80]
	0x0355A294 LDR X8, [X20 + 0x10]
	0x0355A298 LDR V0, [X20]
	0x0355A29C LDR W27, [X19 + 0x84]
	0x0355A2A0 STR X8, [X31 + 0x90]
	0x0355A2A4 STR V0, [X31 + 0x8]
	0x0355A2A8 CBZ X28, 0x355A778
	0x0355A2AC LDR V0, [X31 + 0x8]
	0x0355A2B0 LDR X8, [X31 + 0x90]
	0x0355A2B4 ADRP X10, 0xBDB000
	0x0355A2B8 STR V0, [X31 + 0x6]
	0x0355A2BC STR X8, [X31 + 0x70]
	0x0355A2C0 LDR X8, [X28]
	0x0355A2C4 LDR X10, [X10 + 0x4D0]
	0x0355A2C8 LDRH W9, [X8 + 0x12E]
	0x0355A2CC LDR X1, [X10]
	0x0355A2D0 CBZ X9, 0x355A2F4
	0x0355A2D4 LDR X10, [X8 + 0xB0]
	0x0355A2D8 ADD X10, X10, 0x8
	0x0355A2DC LDUR X11, [X10 - 0x8]
	0x0355A2E0 CMP X11, X1
	0x0355A2E4 B.EQ 0x355A304
	0x0355A2E8 SUBS X9, X9, 0x1
	0x0355A2EC ADD X10, X10, 0x10
	0x0355A2F0 B.NE 0x355A2DC
	0x0355A2F4 MOVZ W2, 0x3
	0x0355A2F8 MOV X0, X28
	0x0355A2FC BL 0x1C5C788
	0x0355A300 B 0x355A314
	0x0355A304 LDR W9, [X10]
	0x0355A308 ADD W9, W9, 0x3
	0x0355A30C ADD X8, X8, W9, 0x4, SXTW
	0x0355A310 ADD X0, X8, 0x138
	0x0355A314 LDR V0, [X31 + 0x6]
	0x0355A318 LDR X8, [X31 + 0x70]
	0x0355A31C LDR X9, [X0]
	0x0355A320 LDR W3, [X31 + 0x2C]
	0x0355A324 STR V0, [X31 + 0xA]
	0x0355A328 STR X8, [X31 + 0xB0]
	0x0355A32C LDR X8, [X0 + 0x8]
	0x0355A330 ADD X10, X31, 0xA0
	0x0355A334 MOV X0, X28
	0x0355A338 MOV X1, X22
	0x0355A33C MOV X2, X23
	0x0355A340 MOV W4, W24
	0x0355A344 MOV W5, W25
	0x0355A348 MOV W6, W26
	0x0355A34C MOV W7, W27
	0x0355A350 STP X10, X8, [X31]
	0x0355A354 BLR X9
	0x0355A358 LDR X0, [X19 + 0x100]
	0x0355A35C CBZ X0, 0x355A778
	0x0355A360 MOV W1, W31
	0x0355A364 MOV W2, W31
	0x0355A368 BL 0x3556FC8
	0x0355A36C LDRB W8, [X19 + 0x39]
	0x0355A370 CBZ W8, 0x355A3A4
	0x0355A374 LDR X24, [X19 + 0xF8]
	0x0355A378 LDRB W25, [X19 + 0x88]
	0x0355A37C MOV X0, X31
	0x0355A380 BL 0x33C18F4
	0x0355A384 CBZ X24, 0x355A778
	0x0355A388 ADRP X8, 0xBDB000
	0x0355A38C LDR X8, [X8 + 0x660]
	0x0355A390 MOV W2, W0
	0x0355A394 MOV X0, X24
	0x0355A398 MOV W1, W25
	0x0355A39C LDR X3, [X8]
	0x0355A3A0 BL 0x29D02A8
	0x0355A3A4 LDRB W8, [X19 + 0x88]
	0x0355A3A8 CMP W21, 0x1
	0x0355A3AC ADD W8, W8, 0x1
	0x0355A3B0 STRB W8, [X19 + 0x88]
	0x0355A3B4 B.LT 0x355A754
	0x0355A3B8 STR X20, [X31 + 0x20]
	0x0355A3BC LDR X20, [X19 + 0xE0]
	0x0355A3C0 CBZ X20, 0x355A778
	0x0355A3C4 ADRP X28, 0xBC1000
	0x0355A3C8 LDR X28, [X28 + 0x5B0]
	0x0355A3CC UBFM X27, X23, 0x20, 0x3F
	0x0355A3D0 LDR X0, [X28]
	0x0355A3D4 LDR W8, [X0 + 0xE0]
	0x0355A3D8 CBNZ W8, 0x355A3E0
	0x0355A3DC BL 0x1C16DFC
	0x0355A3E0 LDR W8, [X20 + 0x18]
	0x0355A3E4 ADD W24, W27, 0x5
	0x0355A3E8 CMP W24, W8
	0x0355A3EC B.LE 0x355A430
	0x0355A3F0 LDR X0, [X28]
	0x0355A3F4 LDR X25, [X19 + 0xE0]
	0x0355A3F8 LDR W8, [X0 + 0xE0]
	0x0355A3FC CBNZ W8, 0x355A404
	0x0355A400 BL 0x1C16DFC
	0x0355A404 ADRP X8, 0xB99000
	0x0355A408 LDR X8, [X8 + 0x618]
	0x0355A40C MOV W1, W24
	0x0355A410 LDR X0, [X8]
	0x0355A414 BL 0x1C16D6C
	0x0355A418 LDR W2, [X19 + 0xF0]
	0x0355A41C MOV X1, X0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE86000
	007 Move W8, [X21+3491]
	008 Move W19, W1
	009 Move X20, X0
	010 Move [X31+12], W1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0xB9A000
	016 Move X0, [X0+2504]
	017 Call 0x1C17CF4
	018 Move X0, 0xBDC000
	019 Move X0, [X0+1456]
	020 Call 0x1C17CF4
	021 Move X0, 0xB9F000
	022 Move X0, [X0+840]
	023 Call 0x1C17CF4
	024 Move X0, 0xB9B000
	025 Move X0, [X0+3672]
	026 Call 0x1C17CF4
	027 Move X0, 0xBDC000
	028 Move X0, [X0+1464]
	029 Call 0x1C17CF4
	030 Move X0, 0xBDC000
	031 Move X0, [X0+1472]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+3491], W8
	035 Move X0, [X20+64]
	036 Compare X0, 0
	037 JumpIfEqual {47}
	038 Move X8, 0xBDC000
	039 Move X8, [X8+1456]
	040 Move W1, W19
	041 Move X2, [X8]
	042 Call Enumerable.Contains, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {68}
	047 Move X8, 0xB9B000
	048 Move X8, [X8+3672]
	049 Move W1, 1
	050 Move X0, [X8]
	051 Call 0x1C17D6C
	052 Compare X0, 0
	053 JumpIfEqual {152}
	054 Move W8, [X0+24]
	055 Move X2, X0
	056 Compare W8, 0
	057 JumpIfEqual {153}
	058 Move [X2+32], W19
	059 Move X0, X20
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X30, [X31+16]
	063 Move X21, [X31+24]
	064 Move W1, W31
	065 Add X31, X31, 48
	066 Call LocalVoice.sendVoiceInfoAndConfigFrame, X0, X1, X2
	067 Return 
	068 Move X8, [X20+144]
	069 Compare X8, 0
	070 JumpIfEqual {152}
	071 Move X19, [X8+24]
	072 Move X20, [X20+208]
	073 Add X0, X31, 12
	074 Move X1, X31
	075 Call Int32.ToString, X0
	076 Move X8, 0xBDC000
	077 Move X9, 0xBDC000
	078 Move X8, [X8+1464]
	079 Move X9, [X9+1472]
	080 Move X2, X0
	081 Move X0, X20
	082 Move X1, [X8]
	083 Move X3, [X9]
	084 Move X4, X31
	085 Call String.Concat, X0, X1, X2, X3
	086 Move X8, 0xB9A000
	087 Move X8, [X8+2504]
	088 Move X20, X0
	089 Move X21, [X8]
	090 Move X8, [X21+56]
	091 Compare X8, 0
	092 JumpIfNotEqual {96}
	093 Move X0, X21
	094 Call 0x1C5D6E0
	095 Move X8, [X21+56]
	096 Move X0, [X8+16]
	097 Move W8, [X0+309]
	098 Move TEMP, X8
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfEqual {103}
	102 Call 0x1C5D684
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Move X8, [X21+56]
	108 Move X0, [X8+16]
	109 Move W8, [X0+309]
	110 Move TEMP, X8
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfEqual {115}
	114 Call 0x1C5D684
	115 Compare X19, 0
	116 JumpIfEqual {152}
	117 Move X10, 0xB9F000
	118 Move X9, [X0+184]
	119 Move X8, [X19]
	120 Move X10, [X10+840]
	121 Move X21, [X9]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Move X1, [X10]
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move W2, 1
	133 Move X0, X19
	134 Call 0x1C5D788
	135 Move W9, [X10]
	136 Add W9, W9, 1
	137 Add X8, X8, W9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X4, [X0+8]
	141 Move W1, 3
	142 Move X0, X19
	143 Move X2, X20
	144 Move X3, X21
	145 NotImplemented "Instruction BLR not yet implemented."
	146 Move X20, [X31+32]
	147 Move X19, [X31+40]
	148 Move X30, [X31+16]
	149 Move X21, [X31+24]
	150 Add X31, X31, 48
	151 Return 
	152 Call 0x1C17F20
	153 Call 0x1C17F28

Method: System.Void sendVoiceInfoAndConfigFrame()

Disassembly:
	0x0355A420 STR X0, [X19 + 0xE0]
	0x0355A424 MOV X0, X25
	0x0355A428 MOV X3, X31

ISIL:
	001 Move W1, [X0+57]
	002 Move X2, [X0+64]
	003 Call LocalVoice.sendVoiceInfoAndConfigFrame, X0, X1, X2
	004 Return 

Method: System.String getTargetStr(System.Boolean targetMe, System.Int32[] targetPlayers)

Disassembly:
	0x0355A42C BL 0x33A0C7C
	0x0355A430 AND X23, X23, 0x0
	0x0355A434 CMP W27, 0x0
	0x0355A438 STR W21, [X31 + 0x1C]
	0x0355A43C MOV X24, X31
	0x0355A440 CSEL X25, X27, X31, GT
	0x0355A444 UBFM X26, X23, 0x20, 0x1F
	0x0355A448 MOVZ X21, 0x1
	0x0355A44C LDR X0, [X28]
	0x0355A450 LDR W8, [X0 + 0xE0]
	0x0355A454 CBNZ W8, 0x355A45C
	0x0355A458 BL 0x1C16DFC
	0x0355A45C CMP X25, X24
	0x0355A460 B.EQ 0x355A4C0
	0x0355A464 LDR X8, [X19 + 0xE0]
	0x0355A468 CBZ X8, 0x355A778
	0x0355A46C LDR W9, [X8 + 0x18]
	0x0355A470 CMP X24, X9
	0x0355A474 B.CS 0x355A774
	0x0355A478 LDR X0, [X28]
	0x0355A47C ADD X20, X8, X24
	0x0355A480 LDRB W29, [X20 + 0x20]
	0x0355A484 LDR W8, [X0 + 0xE0]
	0x0355A488 CBNZ W8, 0x355A490
	0x0355A48C BL 0x1C16DFC
	0x0355A490 CBZ X22, 0x355A778
	0x0355A494 LDR W8, [X22 + 0x18]
	0x0355A498 ADD X9, X23, X24
	0x0355A49C CMP X9, X8
	0x0355A4A0 B.CS 0x355A774
	0x0355A4A4 ADD X8, X22, X26, 0x20, ASR
	0x0355A4A8 LDRB W8, [X8 + 0x20]
	0x0355A4AC ADD X24, X24, 0x1
	0x0355A4B0 ADD X26, X26, X21
	0x0355A4B4 EOR W8, W8, W29, 0x0
	0x0355A4B8 STRB W8, [X20 + 0x20]
	0x0355A4BC B 0x355A44C
	0x0355A4C0 LDR X0, [X28]
	0x0355A4C4 LDR W20, [X19 + 0xF0]
	0x0355A4C8 LDR W8, [X0 + 0xE0]
	0x0355A4CC CBNZ W8, 0x355A4D4
	0x0355A4D0 BL 0x1C16DFC
	0x0355A4D4 LDR W21, [X31 + 0x1C]
	0x0355A4D8 CMP W20, W27
	0x0355A4DC B.GE 0x355A4FC
	0x0355A4E0 LDR X0, [X28]
	0x0355A4E4 MOV W8, W27
	0x0355A4E8 LDR W9, [X0 + 0xE0]
	0x0355A4EC CBNZ W9, 0x355A500
	0x0355A4F0 BL 0x1C16DFC
	0x0355A4F4 MOV W8, W27
	0x0355A4F8 B 0x355A500
	0x0355A4FC LDR W8, [X19 + 0xF0]
	0x0355A500 MOV X26, X19
	0x0355A504 LDR W20, [X26 + 0xEC]!
	0x0355A508 LDURB W9, [X26 - 0x4]
	0x0355A50C LDURB W10, [X26 - 0x3]
	0x0355A510 LDURB W11, [X26 - 0xD8]
	0x0355A514 STR W8, [X26 + 0x4]
	0x0355A518 LDR W8, [X31 + 0x2C]
	0x0355A51C EOR W8, W9, W8, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE86000
	006 Move W8, [X21+3492]
	007 Move X20, X2
	008 Move W19, W1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0xB9E000
	014 Move X0, [X0+3000]
	015 Call 0x1C17CF4
	016 Move X0, 0xBDC000
	017 Move X0, [X0+1480]
	018 Call 0x1C17CF4
	019 Move X0, 0xBDC000
	020 Move X0, [X0+1488]
	021 Call 0x1C17CF4
	022 Move X0, 0xB9A000
	023 Move X0, [X0+2104]
	024 Call 0x1C17CF4
	025 Move X0, 0xB9A000
	026 Move X0, [X0+2440]
	027 Call 0x1C17CF4
	028 Move X0, 0xBDC000
	029 Move X0, [X0+1496]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+3492], W8
	033 Compare X20, 0
	034 JumpIfEqual {67}
	035 Move X8, 0xB9A000
	036 Move X9, 0xB9E000
	037 Move X8, [X8+2104]
	038 Move X9, [X9+3000]
	039 Move X1, X20
	040 Move X0, [X8]
	041 Move X2, [X9]
	042 Call String.Join, X0, X1
	043 Move TEMP, X19
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {74}
	047 Compare X0, 0
	048 JumpIfEqual {79}
	049 Move W8, [X0+16]
	050 Move X9, 0xBDC000
	051 Move X10, 0xB9A000
	052 Move X9, [X9+1488]
	053 Move X10, [X10+2440]
	054 Move X11, 0xBDC000
	055 Move X11, [X11+1480]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction CSEL not yet implemented."
	058 Move X1, [X8]
	059 Move X2, [X11]
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X3, X31
	063 Move X30, [X31+32]
	064 Move X21, [X31+40]
	065 Call String.Concat, X0, X1, X2
	066 Return X0
	067 Move X8, 0xBDC000
	068 Move X8, [X8+1496]
	069 Move X0, [X8]
	070 Move TEMP, X19
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {47}
	074 Move X20, [X31+16]
	075 Move X19, [X31+24]
	076 Move X30, [X31+32]
	077 Move X21, [X31+40]
	078 Return X0
	079 Call 0x1C17F20

Method: System.Void sendVoiceInfoAndConfigFrame(System.Boolean targetMe, System.Int32[] targetPlayers)

Disassembly:
	0x035589C4 LDR X0, [X0 + 0x208]
	0x035589C8 BL 0x1C16CF4
	0x035589CC ADRP X0, 0xBDD000
	0x035589D0 LDR X0, [X0 + 0x570]
	0x035589D4 BL 0x1C16CF4
	0x035589D8 MOVZ W8, 0x1
	0x035589DC STRB W8, [X20 + 0xDA1]
	0x035589E0 STRB W31, [X31 + 0xC]
	0x035589E4 LDR X20, [X19 + 0x78]
	0x035589E8 CBZ X20, 0x3558AA0
	0x035589EC ADRP X22, 0xBDD000
	0x035589F0 ADRP X23, 0xBC7000
	0x035589F4 ADRP X24, 0xBC3000
	0x035589F8 LDR X22, [X22 + 0x570]
	0x035589FC LDR X23, [X23 + 0x208]
	0x03558A00 LDR X24, [X24 + 0x5B0]
	0x03558A04 LDR X8, [X20]
	0x03558A08 LDR X1, [X23]
	0x03558A0C LDRH W9, [X8 + 0x12E]
	0x03558A10 CBZ X9, 0x3558A34
	0x03558A14 LDR X10, [X8 + 0xB0]
	0x03558A18 ADD X10, X10, 0x8
	0x03558A1C LDUR X11, [X10 - 0x8]
	0x03558A20 CMP X11, X1
	0x03558A24 B.EQ 0x3558A44
	0x03558A28 SUBS X9, X9, 0x1
	0x03558A2C ADD X10, X10, 0x10
	0x03558A30 B.NE 0x3558A1C
	0x03558A34 MOVZ W2, 0x2
	0x03558A38 MOV X0, X20
	0x03558A3C BL 0x1C5C788
	0x03558A40 B 0x3558A54
	0x03558A44 LDR W9, [X10]
	0x03558A48 ADD W9, W9, 0x2
	0x03558A4C ADD X8, X8, W9, 0x4, SXTW
	0x03558A50 ADD X0, X8, 0x138
	0x03558A54 LDP X8, X2, [X0]
	0x03558A58 ADD X1, X31, 0xC
	0x03558A5C MOV X0, X20
	0x03558A60 BLR X8
	0x03558A64 MOV X20, X0
	0x03558A68 LDR X0, [X24]
	0x03558A6C MOV X21, X1
	0x03558A70 LDR W8, [X0 + 0xE0]
	0x03558A74 CBNZ W8, 0x3558A7C
	0x03558A78 BL 0x1C16DFC
	0x03558A7C UBFM X8, X21, 0x20, 0x3F
	0x03558A80 CBZ X8, 0x3558AA4
	0x03558A84 LDRB W3, [X31 + 0xC]
	0x03558A88 MOV X0, X19
	0x03558A8C MOV X1, X20
	0x03558A90 MOV X2, X21
	0x03558A94 BL 0x3558B1C
	0x03558A98 LDR X20, [X19 + 0x78]
	0x03558A9C CBNZ X20, 0x3558A04
	0x03558AA0 BL 0x1C16F20
	0x03558AA4 LDR X20, [X19 + 0x30]
	0x03558AA8 CBZ X20, 0x3558B08
	0x03558AAC LDR X8, [X20]
	0x03558AB0 LDR X1, [X22]
	0x03558AB4 LDRH W9, [X8 + 0x12E]
	0x03558AB8 CBZ X9, 0x3558ADC
	0x03558ABC LDR X10, [X8 + 0xB0]
	0x03558AC0 ADD X10, X10, 0x8
	0x03558AC4 LDUR X11, [X10 - 0x8]
	0x03558AC8 CMP X11, X1
	0x03558ACC B.EQ 0x3558AEC
	0x03558AD0 SUBS X9, X9, 0x1
	0x03558AD4 ADD X10, X10, 0x10
	0x03558AD8 B.NE 0x3558AC4
	0x03558ADC MOV X0, X20
	0x03558AE0 MOV W2, W31
	0x03558AE4 BL 0x1C5C788
	0x03558AE8 B 0x3558AF8
	0x03558AEC LDRSW X9, [X10]
	0x03558AF0 ADD X8, X8, X9, 0x4, LSL
	0x03558AF4 ADD X0, X8, 0x138
	0x03558AF8 LDP X8, X2, [X0]
	0x03558AFC MOV X0, X20
	0x03558B00 MOV X1, X19
	0x03558B04 BLR X8
	0x03558B08 LDP X20, X19, [X31 + 0x30]
	0x03558B0C LDP X22, X21, [X31 + 0x20]
	0x03558B10 LDP X24, X23, [X31 + 0x10]
	0x03558B14 LDR X30, [X31], #0x40
	0x03558B18 RET
	0x03558B1C SUB X31, X31, 0x80
	0x03558B20 STR X30, [X31 + 0x30]
	0x03558B24 STP X26, X25, [X31 + 0x40]
	0x03558B28 STP X24, X23, [X31 + 0x50]
	0x03558B2C STP X22, X21, [X31 + 0x60]
	0x03558B30 STP X20, X19, [X31 + 0x70]
	0x03558B34 ADRP X23, 0xE87000
	0x03558B38 LDRB W8, [X23 + 0xDA7]
	0x03558B3C MOV W20, W3
	0x03558B40 MOV X21, X2
	0x03558B44 MOV X22, X1
	0x03558B48 MOV X19, X0
	0x03558B4C TBNZ X8, 0x0, 0x3558C24
	0x03558B50 ADRP X0, 0xBC6000
	0x03558B54 LDR X0, [X0 + 0xB88]
	0x03558B58 BL 0x1C16CF4
	0x03558B5C ADRP X0, 0xBA6000
	0x03558B60 LDR X0, [X0 + 0xE68]
	0x03558B64 BL 0x1C16CF4
	0x03558B68 ADRP X0, 0xBCE000
	0x03558B6C LDR X0, [X0 + 0xCF0]
	0x03558B70 BL 0x1C16CF4
	0x03558B74 ADRP X0, 0xBCE000
	0x03558B78 LDR X0, [X0 + 0xCF8]
	0x03558B7C BL 0x1C16CF4
	0x03558B80 ADRP X0, 0xBCE000
	0x03558B84 LDR X0, [X0 + 0xD00]
	0x03558B88 BL 0x1C16CF4
	0x03558B8C ADRP X0, 0xBDD000
	0x03558B90 LDR X0, [X0 + 0x578]
	0x03558B94 BL 0x1C16CF4
	0x03558B98 ADRP X0, 0xBDD000
	0x03558B9C LDR X0, [X0 + 0x580]
	0x03558BA0 BL 0x1C16CF4
	0x03558BA4 ADRP X0, 0xBC3000
	0x03558BA8 LDR X0, [X0 + 0x5B0]
	0x03558BAC BL 0x1C16CF4
	0x03558BB0 ADRP X0, 0xB9B000
	0x03558BB4 LDR X0, [X0 + 0x9C8]
	0x03558BB8 BL 0x1C16CF4
	0x03558BBC ADRP X0, 0xB9B000
	0x03558BC0 LDR X0, [X0 + 0x618]
	0x03558BC4 BL 0x1C16CF4
	0x03558BC8 ADRP X0, 0xBDD000
	0x03558BCC LDR X0, [X0 + 0x588]
	0x03558BD0 BL 0x1C16CF4
	0x03558BD4 ADRP X0, 0xBA0000
	0x03558BD8 LDR X0, [X0 + 0x348]
	0x03558BDC BL 0x1C16CF4
	0x03558BE0 ADRP X0, 0xBDD000
	0x03558BE4 LDR X0, [X0 + 0x4D0]
	0x03558BE8 BL 0x1C16CF4
	0x03558BEC ADRP X0, 0xBDD000
	0x03558BF0 LDR X0, [X0 + 0x590]
	0x03558BF4 BL 0x1C16CF4
	0x03558BF8 ADRP X0, 0xBDD000
	0x03558BFC LDR X0, [X0 + 0x598]
	0x03558C00 BL 0x1C16CF4
	0x03558C04 ADRP X0, 0xBDD000
	0x03558C08 LDR X0, [X0 + 0x5A0]
	0x03558C0C BL 0x1C16CF4
	0x03558C10 ADRP X0, 0xBDD000
	0x03558C14 LDR X0, [X0 + 0x5A8]
	0x03558C18 BL 0x1C16CF4
	0x03558C1C MOVZ W8, 0x1
	0x03558C20 STRB W8, [X23 + 0xDA7]
	0x03558C24 STR W31, [X31 + 0x3C]
	0x03558C28 TBZ X20, 0x0, 0x3559124
	0x03558C2C ADRP X26, 0xBC3000
	0x03558C30 LDR X26, [X26 + 0x5B0]
	0x03558C34 MOV X25, X19
	0x03558C38 LDR X23, [X25 + 0xA0]!
	0x03558C3C LDR X0, [X26]
	0x03558C40 LDR X24, [X25 + 0x8]
	0x03558C44 LDR W8, [X0 + 0xE0]
	0x03558C48 CBNZ W8, 0x3558C50
	0x03558C4C BL 0x1C16DFC
	0x03558C50 ADRP X8, 0xBDD000
	0x03558C54 LDR X8, [X8 + 0x578]
	0x03558C58 MOV X0, X31
	0x03558C5C LDR X1, [X8]
	0x03558C60 BL 0x2B880A4
	0x03558C64 ADRP X8, 0xBDD000
	0x03558C68 LDR X8, [X8 + 0x580]
	0x03558C6C MOV X2, X0
	0x03558C70 MOV X3, X1
	0x03558C74 MOV X0, X23
	0x03558C78 LDR X4, [X8]
	0x03558C7C MOV X1, X24
	0x03558C80 BL 0x2B88008
	0x03558C84 TBZ X0, 0x0, 0x3558DD0
	0x03558C88 LDR V0, [X25]
	0x03558C8C LDR X0, [X26]
	0x03558C90 ADD X1, X31, 0x20
	0x03558C94 STR V0, [X31 + 0x2]
	0x03558C98 BL 0x1C16E04
	0x03558C9C MOV X23, X0
	0x03558CA0 LDR X0, [X26]
	0x03558CA4 ADD X1, X31, 0x10
	0x03558CA8 STP X22, X21, [X31 + 0x10]
	0x03558CAC BL 0x1C16E04
	0x03558CB0 ADRP X8, 0xBDD000
	0x03558CB4 LDR X8, [X8 + 0x588]
	0x03558CB8 MOV X1, X0
	0x03558CBC MOV X0, X23
	0x03558CC0 LDR X2, [X8]
	0x03558CC4 BL 0x21D1508
	0x03558CC8 TBZ X0, 0x0, 0x3558F00
	0x03558CCC LDR X8, [X19 + 0x90]
	0x03558CD0 CBZ X8, 0x35591E8
	0x03558CD4 LDR X0, [X26]
	0x03558CD8 LDR X20, [X8 + 0x18]
	0x03558CDC LDR X21, [X19 + 0xD0]
	0x03558CE0 LDR W8, [X0 + 0xE0]
	0x03558CE4 CBNZ W8, 0x3558CEC
	0x03558CE8 BL 0x1C16DFC
	0x03558CEC LDR W8, [X19 + 0xAC]
	0x03558CF0 ADD X0, X31, 0x3C
	0x03558CF4 MOV X1, X31
	0x03558CF8 STR W8, [X31 + 0x3C]
	0x03558CFC BL 0x337B6E0
	0x03558D00 ADRP X8, 0xBDD000
	0x03558D04 ADRP X9, 0xBDD000
	0x03558D08 LDR X8, [X8 + 0x598]
	0x03558D0C LDR X9, [X9 + 0x5A8]
	0x03558D10 MOV X2, X0
	0x03558D14 MOV X0, X21
	0x03558D18 LDR X1, [X8]
	0x03558D1C LDR X3, [X9]
	0x03558D20 MOV X4, X31
	0x03558D24 BL 0x32277C4
	0x03558D28 ADRP X8, 0xB9B000
	0x03558D2C LDR X8, [X8 + 0x9C8]
	0x03558D30 MOV X19, X0
	0x03558D34 LDR X21, [X8]
	0x03558D38 LDR X8, [X21 + 0x38]
	0x03558D3C CBNZ X8, 0x3558D4C
	0x03558D40 MOV X0, X21
	0x03558D44 BL 0x1C5C6E0
	0x03558D48 LDR X8, [X21 + 0x38]
	0x03558D4C LDR X0, [X8 + 0x10]
	0x03558D50 LDRB W8, [X0 + 0x135]
	0x03558D54 TBNZ X8, 0x0, 0x3558D5C
	0x03558D58 BL 0x1C5C684
	0x03558D5C LDR W8, [X0 + 0xE0]
	0x03558D60 CBNZ W8, 0x3558D68
	0x03558D64 BL 0x1C16DFC
	0x03558D68 LDR X8, [X21 + 0x38]
	0x03558D6C LDR X0, [X8 + 0x10]
	0x03558D70 LDRB W8, [X0 + 0x135]
	0x03558D74 TBNZ X8, 0x0, 0x3558D7C
	0x03558D78 BL 0x1C5C684
	0x03558D7C CBZ X20, 0x35591E8
	0x03558D80 ADRP X10, 0xBA0000
	0x03558D84 LDR X9, [X0 + 0xB8]
	0x03558D88 LDR X8, [X20]
	0x03558D8C LDR X10, [X10 + 0x348]
	0x03558D90 LDR X21, [X9]
	0x03558D94 LDRH W9, [X8 + 0x12E]
	0x03558D98 LDR X1, [X10]
	0x03558D9C CBZ X9, 0x3558DC0
	0x03558DA0 LDR X10, [X8 + 0xB0]
	0x03558DA4 ADD X10, X10, 0x8
	0x03558DA8 LDUR X11, [X10 - 0x8]
	0x03558DAC CMP X11, X1
	0x03558DB0 B.EQ 0x3558F6C
	0x03558DB4 SUBS X9, X9, 0x1
	0x03558DB8 ADD X10, X10, 0x10
	0x03558DBC B.NE 0x3558DA8
	0x03558DC0 MOVZ W2, 0x1
	0x03558DC4 MOV X0, X20
	0x03558DC8 BL 0x1C5C788
	0x03558DCC B 0x3558F7C
	0x03558DD0 LDR X0, [X26]
	0x03558DD4 LDR W8, [X0 + 0xE0]
	0x03558DD8 CBNZ W8, 0x3558DE0
	0x03558DDC BL 0x1C16DFC
	0x03558DE0 ADRP X8, 0xB9B000
	0x03558DE4 LDR X8, [X8 + 0x618]
	0x03558DE8 UBFM X1, X21, 0x20, 0x3F
	0x03558DEC LDR X0, [X8]
	0x03558DF0 BL 0x1C16D6C
	0x03558DF4 ADRP X8, 0xBA6000
	0x03558DF8 LDR X8, [X8 + 0xE68]
	0x03558DFC MOV X1, X0
	0x03558E00 ADD X0, X31, 0x20

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0xE88000
	013 Move W8, [X22+3493]
	014 Move X19, X2
	015 Move W21, W1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {53}
	021 Move X0, 0xBCF000
	022 Move X0, [X0+3320]
	023 Call 0x1C17CF4
	024 Move X0, 0xBC4000
	025 Move X0, [X0+1456]
	026 Call 0x1C17CF4
	027 Move X0, 0xB9C000
	028 Move X0, [X0+2504]
	029 Call 0x1C17CF4
	030 Move X0, 0xBA1000
	031 Move X0, [X0+840]
	032 Call 0x1C17CF4
	033 Move X0, 0xBDE000
	034 Move X0, [X0+1232]
	035 Call 0x1C17CF4
	036 Move X0, 0xB9C000
	037 Move X0, [X0+2760]
	038 Call 0x1C17CF4
	039 Move X0, 0xBA0000
	040 Move X0, [X0+2344]
	041 Call 0x1C17CF4
	042 Move X0, 0xBDE000
	043 Move X0, [X0+1240]
	044 Call 0x1C17CF4
	045 Move X0, 0xBDE000
	046 Move X0, [X0+1248]
	047 Call 0x1C17CF4
	048 Move X0, 0xBDE000
	049 Move X0, [X0+1256]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X22+3493], W8
	053 Compare X19, 0
	054 JumpIfEqual {62}
	055 Move TEMP, X21
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {62}
	059 Move W8, [X19+24]
	060 Compare W8, 0
	061 JumpIfEqual {295}
	062 And W1, W21, 1
	063 Move X2, X19
	064 Call LocalVoice.getTargetStr, X0, X1, X2
	065 Move X8, [X20+144]
	066 Compare X8, 0
	067 JumpIfEqual {308}
	068 Move X9, 0xB9C000
	069 Move X9, [X9+2760]
	070 Move X22, X0
	071 Move X23, [X8+24]
	072 Move W1, 7
	073 Move X0, [X9]
	074 Call 0x1C17D6C
	075 Compare X0, 0
	076 JumpIfEqual {308}
	077 Move W8, [X0+24]
	078 Move X24, X0
	079 Compare W8, 0
	080 JumpIfEqual {307}
	081 Move X9, [X20+208]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move [X24+32], X9
	084 Move X9, 0xBDE000
	085 Move X9, [X9+1248]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X9, [X9]
	088 Move [X24+40], X9
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move [X24+48], X22
	091 Move X8, 0xBA0000
	092 Move X8, [X8+2344]
	093 Add X0, X20, 72
	094 Move X8, [X8]
	095 Move [X24+56], X8
	096 Call VoiceInfo.ToString, X0
	097 Move W8, [X24+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move [X24+64], X0
	101 Move X8, 0xBDE000
	102 Move X8, [X8+1256]
	103 Add X0, X20, 136
	104 Move X1, X31
	105 Move X8, [X8]
	106 Move [X24+72], X8
	107 Call Byte.ToString, X0
	108 Move W8, [X24+24]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X26, 0xB9C000
	111 Move X26, [X26+2504]
	112 Move [X24+80], X0
	113 Move X0, X24
	114 Move X1, X31
	115 Call String.Concat, X0
	116 Move X25, [X26]
	117 Move X24, X0
	118 Move X8, [X25+56]
	119 Compare X8, 0
	120 JumpIfNotEqual {124}
	121 Move X0, X25
	122 Call 0x1C5D6E0
	123 Move X8, [X25+56]
	124 Move X0, [X8+16]
	125 Move W8, [X0+309]
	126 Move TEMP, X8
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfEqual {131}
	130 Call 0x1C5D684
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {135}
	134 Call 0x1C17DFC
	135 Move X8, [X25+56]
	136 Move X0, [X8+16]
	137 Move W8, [X0+309]
	138 Move TEMP, X8
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfEqual {143}
	142 Call 0x1C5D684
	143 Compare X23, 0
	144 JumpIfEqual {308}
	145 Move X27, 0xBA1000
	146 Move X9, [X0+184]
	147 Move X8, [X23]
	148 Move X27, [X27+840]
	149 Move X25, [X9]
	150 NotImplemented "Instruction LDRH not yet implemented."
	151 Move X1, [X27]
	152 Compare X9, 0
	153 JumpIfEqual {160}
	154 Move X10, [X8+176]
	155 Add X10, X10, 8
	156 NotImplemented "Instruction LDUR not yet implemented."
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Subtract X9, X9, 1
	159 Add X10, X10, 16
	160 Move W2, 1
	161 Move X0, X23
	162 Call 0x1C5D788
	163 Move W9, [X10]
	164 Add W9, W9, 1
	165 Add X8, X8, W9
	166 Add X0, X8, 312
	167 Move X8, [X0]
	168 Move X4, [X0+8]
	169 Move W1, 3
	170 Move X0, X23
	171 Move X2, X24
	172 Move X3, X25
	173 NotImplemented "Instruction BLR not yet implemented."
	174 Move X8, [X20+144]
	175 Compare X8, 0
	176 JumpIfEqual {308}
	177 Move X23, [X8+16]
	178 Compare X23, 0
	179 JumpIfEqual {308}
	180 Move X10, 0xBDE000
	181 Move X8, [X23]
	182 Move X10, [X10+1232]
	183 Move X25, 0xBC4000
	184 Move W24, [X20+132]
	185 NotImplemented "Instruction LDRH not yet implemented."
	186 Move X1, [X10]
	187 Move X25, [X25+1456]
	188 Compare X9, 0
	189 JumpIfEqual {196}
	190 Move X10, [X8+176]
	191 Add X10, X10, 8
	192 NotImplemented "Instruction LDUR not yet implemented."
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Subtract X9, X9, 1
	195 Add X10, X10, 16
	196 Move W2, 1
	197 Move X0, X23
	198 Call 0x1C5D788
	199 Move W9, [X10]
	200 Add W9, W9, 1
	201 Add X8, X8, W9
	202 Add X0, X8, 312
	203 Move X8, [X0]
	204 Move X5, [X0+8]
	205 And W3, W21, 1
	206 Move X0, X23
	207 Move X1, X20
	208 Move W2, W24
	209 Move X4, X19
	210 NotImplemented "Instruction BLR not yet implemented."
	211 Move X0, [X25]
	212 Move W8, [X0+224]
	213 Compare W8, 0
	214 JumpIfNotEqual {216}
	215 Call 0x1C17DFC
	216 Move W8, [X20+172]
	217 Compare W8, 0
	218 JumpIfEqual {295}
	219 Move X8, [X20+144]
	220 Compare X8, 0
	221 JumpIfEqual {308}
	222 Move X9, 0xBDE000
	223 Move X9, [X9+1240]
	224 Move X0, [X20+208]
	225 Move X23, [X8+24]
	226 Move X2, X22
	227 Move X1, [X9]
	228 Move X3, X31
	229 Call String.Concat, X0, X1, X2
	230 Move X24, [X26]
	231 Move X22, X0
	232 Move X8, [X24+56]
	233 Compare X8, 0
	234 JumpIfNotEqual {238}
	235 Move X0, X24
	236 Call 0x1C5D6E0
	237 Move X8, [X24+56]
	238 Move X0, [X8+16]
	239 Move W8, [X0+309]
	240 Move TEMP, X8
	241 And TEMP, TEMP, 1
	242 Compare TEMP, 1
	243 JumpIfEqual {245}
	244 Call 0x1C5D684
	245 Move W8, [X0+224]
	246 Compare W8, 0
	247 JumpIfNotEqual {249}
	248 Call 0x1C17DFC
	249 Move X8, [X24+56]
	250 Move X0, [X8+16]
	251 Move W8, [X0+309]
	252 Move TEMP, X8
	253 And TEMP, TEMP, 1
	254 Compare TEMP, 1
	255 JumpIfEqual {257}
	256 Call 0x1C5D684
	257 Compare X23, 0
	258 JumpIfEqual {308}
	259 Move X9, [X0+184]
	260 Move X8, [X23]
	261 Move X1, [X27]
	262 Move X24, [X9]
	263 NotImplemented "Instruction LDRH not yet implemented."
	264 Compare X9, 0
	265 JumpIfEqual {272}
	266 Move X10, [X8+176]
	267 Add X10, X10, 8
	268 NotImplemented "Instruction LDUR not yet implemented."
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Subtract X9, X9, 1
	271 Add X10, X10, 16
	272 Move W2, 1
	273 Move X0, X23
	274 Call 0x1C5D788
	275 Move W9, [X10]
	276 Add W9, W9, 1
	277 Add X8, X8, W9
	278 Add X0, X8, 312
	279 Move X8, [X0]
	280 Move X4, [X0+8]
	281 Move W1, 3
	282 Move X0, X23
	283 Move X2, X22
	284 Move X3, X24
	285 NotImplemented "Instruction BLR not yet implemented."
	286 Move X1, [X20+160]
	287 Move X2, [X20+168]
	288 And W4, W21, 1
	289 Move W3, 1
	290 Move W7, 1
	291 Move X0, X20
	292 Move X5, X19
	293 Move W6, W31
	294 Call LocalVoice.sendFrame0, X0, X1, X2, X3, X4, X5, X6
	295 Move X20, [X31+80]
	296 Move X19, [X31+88]
	297 Move X22, [X31+64]
	298 Move X21, [X31+72]
	299 Move X24, [X31+48]
	300 Move X23, [X31+56]
	301 Move X26, [X31+32]
	302 Move X25, [X31+40]
	303 Move X30, [X31+16]
	304 Move X27, [X31+24]
	305 Add X31, X31, 96
	306 Return 
	307 Call 0x1C17F28
	308 Call 0x1C17F20

Method: System.Void sendVoiceRemove(System.Boolean targetMe, System.Int32[] targetPlayers)

Disassembly:
	0x03558E04 STP X31, X31, [X31 + 0x20]
	0x03558E08 LDR X2, [X8]
	0x03558E0C BL 0x2B87B6C
	0x03558E10 LDR V0, [X31 + 0x2]
	0x03558E14 STR V0, [X25]
	0x03558E18 LDR X8, [X19 + 0x90]
	0x03558E1C CBZ X8, 0x35591E8
	0x03558E20 LDR X23, [X8 + 0x18]
	0x03558E24 LDR W8, [X19 + 0xAC]
	0x03558E28 LDR X24, [X19 + 0xD0]
	0x03558E2C ADD X0, X31, 0x3C
	0x03558E30 MOV X1, X31
	0x03558E34 STR W8, [X31 + 0x3C]
	0x03558E38 BL 0x337B6E0
	0x03558E3C ADRP X8, 0xBDD000
	0x03558E40 ADRP X9, 0xBDD000
	0x03558E44 LDR X8, [X8 + 0x598]
	0x03558E48 LDR X9, [X9 + 0x590]
	0x03558E4C MOV X2, X0
	0x03558E50 MOV X0, X24
	0x03558E54 LDR X1, [X8]
	0x03558E58 LDR X3, [X9]
	0x03558E5C MOV X4, X31
	0x03558E60 BL 0x32277C4
	0x03558E64 ADRP X8, 0xB9B000
	0x03558E68 LDR X8, [X8 + 0x9C8]
	0x03558E6C MOV X24, X0
	0x03558E70 LDR X25, [X8]
	0x03558E74 LDR X8, [X25 + 0x38]
	0x03558E78 CBNZ X8, 0x3558E88
	0x03558E7C MOV X0, X25
	0x03558E80 BL 0x1C5C6E0
	0x03558E84 LDR X8, [X25 + 0x38]
	0x03558E88 LDR X0, [X8 + 0x10]
	0x03558E8C LDRB W8, [X0 + 0x135]
	0x03558E90 TBNZ X8, 0x0, 0x3558E98
	0x03558E94 BL 0x1C5C684
	0x03558E98 LDR W8, [X0 + 0xE0]
	0x03558E9C CBNZ W8, 0x3558EA4
	0x03558EA0 BL 0x1C16DFC
	0x03558EA4 LDR X8, [X25 + 0x38]
	0x03558EA8 LDR X0, [X8 + 0x10]
	0x03558EAC LDRB W8, [X0 + 0x135]
	0x03558EB0 TBNZ X8, 0x0, 0x3558EB8
	0x03558EB4 BL 0x1C5C684
	0x03558EB8 CBZ X23, 0x35591E8
	0x03558EBC ADRP X10, 0xBA0000
	0x03558EC0 LDR X9, [X0 + 0xB8]
	0x03558EC4 LDR X8, [X23]
	0x03558EC8 LDR X10, [X10 + 0x348]
	0x03558ECC LDR X25, [X9]
	0x03558ED0 LDRH W9, [X8 + 0x12E]
	0x03558ED4 LDR X1, [X10]
	0x03558ED8 CBZ X9, 0x35590EC
	0x03558EDC LDR X10, [X8 + 0xB0]
	0x03558EE0 ADD X10, X10, 0x8
	0x03558EE4 LDUR X11, [X10 - 0x8]
	0x03558EE8 CMP X11, X1
	0x03558EEC B.EQ 0x35590FC
	0x03558EF0 SUBS X9, X9, 0x1
	0x03558EF4 ADD X10, X10, 0x10
	0x03558EF8 B.NE 0x3558EE4
	0x03558EFC B 0x35590EC
	0x03558F00 LDR X0, [X26]
	0x03558F04 LDR W8, [X0 + 0xE0]
	0x03558F08 CBNZ W8, 0x3558F10
	0x03558F0C BL 0x1C16DFC
	0x03558F10 LDR X23, [X25]
	0x03558F14 CBZ X23, 0x3558F40
	0x03558F18 LDR X0, [X26]
	0x03558F1C LDR W8, [X0 + 0xE0]
	0x03558F20 CBNZ W8, 0x3558F30
	0x03558F24 BL 0x1C16DFC
	0x03558F28 LDR X23, [X25]
	0x03558F2C CBZ X23, 0x35591E8
	0x03558F30 LDR W8, [X23 + 0x18]
	0x03558F34 UBFM X9, X21, 0x20, 0x3F
	0x03558F38 CMP W9, W8
	0x03558F3C B.LE 0x3558F98
	0x03558F40 LDR X0, [X26]
	0x03558F44 LDR W8, [X0 + 0xE0]
	0x03558F48 CBNZ W8, 0x3558F50
	0x03558F4C BL 0x1C16DFC
	0x03558F50 ADRP X8, 0xB9B000
	0x03558F54 LDR X8, [X8 + 0x618]
	0x03558F58 UBFM X1, X21, 0x20, 0x3F
	0x03558F5C LDR X0, [X8]
	0x03558F60 BL 0x1C16D6C
	0x03558F64 MOV X23, X0
	0x03558F68 B 0x3558FAC
	0x03558F6C LDR W9, [X10]
	0x03558F70 ADD W9, W9, 0x1
	0x03558F74 ADD X8, X8, W9, 0x4, SXTW
	0x03558F78 ADD X0, X8, 0x138
	0x03558F7C LDP X8, X4, [X0]
	0x03558F80 MOVZ W1, 0x5
	0x03558F84 MOV X0, X20
	0x03558F88 MOV X2, X19
	0x03558F8C MOV X3, X21
	0x03558F90 BLR X8
	0x03558F94 B 0x35591CC
	0x03558F98 LDR X0, [X26]
	0x03558F9C LDR W8, [X0 + 0xE0]
	0x03558FA0 CBNZ W8, 0x3558FAC
	0x03558FA4 BL 0x1C16DFC
	0x03558FA8 LDR X23, [X25]
	0x03558FAC LDR X0, [X26]
	0x03558FB0 LDR W8, [X0 + 0xE0]
	0x03558FB4 CBNZ W8, 0x3558FBC
	0x03558FB8 BL 0x1C16DFC
	0x03558FBC UBFM X24, X21, 0x20, 0x3F
	0x03558FC0 MOV X0, X22
	0x03558FC4 MOV W1, W21
	0x03558FC8 MOV X2, X23
	0x03558FCC MOV W3, W31
	0x03558FD0 MOV W4, W24
	0x03558FD4 MOV X5, X31
	0x03558FD8 BL 0x33A8A9C
	0x03558FDC ADRP X8, 0xBC6000
	0x03558FE0 LDR X8, [X8 + 0xB88]
	0x03558FE4 ADD X0, X31, 0x20
	0x03558FE8 MOV X1, X23
	0x03558FEC MOV W2, W31
	0x03558FF0 LDR X4, [X8]
	0x03558FF4 MOV W3, W24
	0x03558FF8 STP X31, X31, [X31 + 0x20]
	0x03558FFC BL 0x2B87BB0
	0x03559000 LDR V0, [X31 + 0x2]
	0x03559004 STR V0, [X25]
	0x03559008 LDR X8, [X19 + 0x90]
	0x0355900C CBZ X8, 0x35591E8
	0x03559010 LDR X23, [X8 + 0x18]
	0x03559014 LDR W8, [X19 + 0xAC]
	0x03559018 LDR X24, [X19 + 0xD0]
	0x0355901C ADD X0, X31, 0x3C
	0x03559020 MOV X1, X31
	0x03559024 STR W8, [X31 + 0x3C]
	0x03559028 BL 0x337B6E0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0xE88000
	010 Move W8, [X22+3494]
	011 Move X19, X2
	012 Move W20, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0xB9C000
	019 Move X0, [X0+2504]
	020 Call 0x1C17CF4
	021 Move X0, 0xBA1000
	022 Move X0, [X0+840]
	023 Call 0x1C17CF4
	024 Move X0, 0xBDE000
	025 Move X0, [X0+1232]
	026 Call 0x1C17CF4
	027 Move X0, 0xBDE000
	028 Move X0, [X0+1264]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+3494], W8
	032 Compare X19, 0
	033 JumpIfEqual {41}
	034 Move TEMP, X20
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {41}
	038 Move W8, [X19+24]
	039 Compare W8, 0
	040 JumpIfEqual {159}
	041 Move X8, [X21+144]
	042 Compare X8, 0
	043 JumpIfEqual {168}
	044 Move X24, 0xBDE000
	045 Move X25, 0xB9C000
	046 Move X22, [X8+24]
	047 Move X23, [X21+208]
	048 Move X24, [X24+1264]
	049 Move X25, [X25+2504]
	050 And W1, W20, 1
	051 Move X2, X19
	052 Call LocalVoice.getTargetStr, X0, X1, X2
	053 Move X1, [X24]
	054 Move X2, X0
	055 Move X0, X23
	056 Move X3, X31
	057 Call String.Concat, X0, X1, X2
	058 Move X24, [X25]
	059 Move X23, X0
	060 Move X8, [X24+56]
	061 Compare X8, 0
	062 JumpIfNotEqual {66}
	063 Move X0, X24
	064 Call 0x1C5D6E0
	065 Move X8, [X24+56]
	066 Move X0, [X8+16]
	067 Move W8, [X0+309]
	068 Move TEMP, X8
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {73}
	072 Call 0x1C5D684
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X8, [X24+56]
	078 Move X0, [X8+16]
	079 Move W8, [X0+309]
	080 Move TEMP, X8
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {85}
	084 Call 0x1C5D684
	085 Compare X22, 0
	086 JumpIfEqual {168}
	087 Move X10, 0xBA1000
	088 Move X9, [X0+184]
	089 Move X8, [X22]
	090 Move X10, [X10+840]
	091 Move X24, [X9]
	092 NotImplemented "Instruction LDRH not yet implemented."
	093 Move X1, [X10]
	094 Compare X9, 0
	095 JumpIfEqual {102}
	096 Move X10, [X8+176]
	097 Add X10, X10, 8
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Subtract X9, X9, 1
	101 Add X10, X10, 16
	102 Move W2, 1
	103 Move X0, X22
	104 Call 0x1C5D788
	105 Move W9, [X10]
	106 Add W9, W9, 1
	107 Add X8, X8, W9
	108 Add X0, X8, 312
	109 Move X8, [X0]
	110 Move X4, [X0+8]
	111 Move W1, 3
	112 Move X0, X22
	113 Move X2, X23
	114 Move X3, X24
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move X8, [X21+144]
	117 Compare X8, 0
	118 JumpIfEqual {168}
	119 Move X22, [X8+16]
	120 Compare X22, 0
	121 JumpIfEqual {168}
	122 Move X10, 0xBDE000
	123 Move X8, [X22]
	124 Move X10, [X10+1232]
	125 Move W23, [X21+132]
	126 NotImplemented "Instruction LDRH not yet implemented."
	127 Move X1, [X10]
	128 Compare X9, 0
	129 JumpIfEqual {136}
	130 Move X10, [X8+176]
	131 Add X10, X10, 8
	132 NotImplemented "Instruction LDUR not yet implemented."
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Subtract X9, X9, 1
	135 Add X10, X10, 16
	136 Move W2, 2
	137 Move X0, X22
	138 Call 0x1C5D788
	139 Move W9, [X10]
	140 Add W9, W9, 2
	141 Add X8, X8, W9
	142 Add X0, X8, 312
	143 Move X6, [X0]
	144 Move X5, [X0+8]
	145 And W3, W20, 1
	146 Move X0, X22
	147 Move X1, X21
	148 Move W2, W23
	149 Move X4, X19
	150 Move X20, [X31+48]
	151 Move X19, [X31+56]
	152 Move X22, [X31+32]
	153 Move X21, [X31+40]
	154 Move X24, [X31+16]
	155 Move X23, [X31+24]
	156 Move X30, [X31+64]
	157 Move X25, [X31+72]
	158 CallNoReturn X6
	159 Move X20, [X31+48]
	160 Move X19, [X31+56]
	161 Move X22, [X31+32]
	162 Move X21, [X31+40]
	163 Move X24, [X31+16]
	164 Move X23, [X31+24]
	165 Move X30, [X31+64]
	166 Move X25, [X31+72]
	167 Return 
	168 Call 0x1C17F20

Method: System.Void sendFrame(System.ArraySegment`1<System.Byte> compressed, Photon.Voice.FrameFlags flags)

Disassembly:
	0x03559B1C LDUR W10, [X31 + 0x87]
	0x03559B20 STRB W11, [X31 + 0xC8]
	0x03559B24 LDR W11, [X31 + 0x3C]
	0x03559B28 STRB W9, [X31 + 0xB8]
	0x03559B2C LDR W9, [X31 + 0x84]
	0x03559B30 LDRB W12, [X31 + 0x80]
	0x03559B34 STRB W11, [X31 + 0xC9]
	0x03559B38 LDR W11, [X31 + 0x40]
	0x03559B3C STR X23, [X31 + 0xC0]
	0x03559B40 STUR W9, [X31 + 0xB9]
	0x03559B44 STR W10, [X31 + 0xBC]
	0x03559B48 STRB W11, [X31 + 0xCA]
	0x03559B4C LDR W11, [X31 + 0x7C]
	0x03559B50 STRB W12, [X31 + 0xCF]
	0x03559B54 ADD X1, X31, 0xB8
	0x03559B58 STUR W11, [X31 + 0xCB]
	0x03559B5C LDR X2, [X0 + 0x8]
	0x03559B60 MOV X0, X25
	0x03559B64 BLR X8
	0x03559B68 CMP W0, 0x1
	0x03559B6C B.LT 0x3559DE8
	0x03559B70 ADRP X8, 0xBC2000
	0x03559B74 LDR X8, [X8 + 0x5B0]
	0x03559B78 MOV W25, W0
	0x03559B7C LDR X0, [X8]
	0x03559B80 LDR W8, [X0 + 0xE0]
	0x03559B84 CBNZ W8, 0x3559B8C
	0x03559B88 BL 0x1C16DFC
	0x03559B8C CMP W25, W28
	0x03559B90 B.GE 0x3559DE8
	0x03559B94 STR X23, [X31 + 0x30]
	0x03559B98 ADRP X8, 0xBC2000
	0x03559B9C LDR X8, [X8 + 0x5B0]
	0x03559BA0 LDR X0, [X8]
	0x03559BA4 LDR W8, [X0 + 0xE0]
	0x03559BA8 CBNZ W8, 0x3559BB0
	0x03559BAC BL 0x1C16DFC
	0x03559BB0 ADD W8, W25, W28
	0x03559BB4 SDIV W8, W8, W25
	0x03559BB8 ANDS W31, W8, 0xFF
	0x03559BBC STR X28, [X31 + 0x18]
	0x03559BC0 STRB W8, [X31 + 0xA4]
	0x03559BC4 B.EQ 0x3559D8C
	0x03559BC8 ORR W9, W27, 0x10
	0x03559BCC STP W27, W9, [X31 + 0x28]
	0x03559BD0 ADD W10, W25, W21
	0x03559BD4 ADD W9, W25, 0x1
	0x03559BD8 STR W9, [X31 + 0x14]
	0x03559BDC ADD X9, X31, 0x48
	0x03559BE0 STR W10, [X31 + 0x24]
	0x03559BE4 ADD X10, X22, W10, SXTW
	0x03559BE8 MOV W23, W31
	0x03559BEC ORR X28, X9, 0x1
	0x03559BF0 ADD X20, X9, 0x13
	0x03559BF4 ADD X24, X10, 0x20
	0x03559BF8 LDR W9, [X31 + 0x2C]
	0x03559BFC AND W8, W8, 0xFF
	0x03559C00 CMP W23, 0x0
	0x03559C04 SUB W8, W8, 0x1
	0x03559C08 CSEL W9, W27, W9, EQ
	0x03559C0C ORR W10, W9, 0x20
	0x03559C10 CMP W23, W8
	0x03559C14 CSEL W26, W9, W10, EQ
	0x03559C18 CBZ W23, 0x3559C50
	0x03559C1C CMP W23, W8
	0x03559C20 B.NE 0x3559C90
	0x03559C24 ADRP X8, 0xBC2000
	0x03559C28 LDR X8, [X8 + 0x5B0]
	0x03559C2C LDR X0, [X8]
	0x03559C30 LDR W8, [X0 + 0xE0]
	0x03559C34 CBNZ W8, 0x3559C3C
	0x03559C38 BL 0x1C16DFC
	0x03559C3C LDR X9, [X31 + 0x18]
	0x03559C40 MOV W29, W31
	0x03559C44 SDIV W8, W9, W25
	0x03559C48 MSUB W27, W8, W25, W9
	0x03559C4C B 0x3559C98
	0x03559C50 ADRP X8, 0xBC2000
	0x03559C54 LDR X8, [X8 + 0x5B0]
	0x03559C58 LDR X0, [X8]
	0x03559C5C LDR W8, [X0 + 0xE0]
	0x03559C60 CBNZ W8, 0x3559C68
	0x03559C64 BL 0x1C16DFC
	0x03559C68 CBZ X22, 0x355A1AC
	0x03559C6C LDR W8, [X22 + 0x18]
	0x03559C70 LDR W9, [X31 + 0x24]
	0x03559C74 CMP W9, W8
	0x03559C78 B.CS 0x355A1A8
	0x03559C7C LDRB W8, [X31 + 0xA4]
	0x03559C80 LDRB W29, [X24]
	0x03559C84 LDR W27, [X31 + 0x14]
	0x03559C88 STRB W8, [X24]
	0x03559C8C B 0x3559C98
	0x03559C90 MOV W29, W31
	0x03559C94 MOV W27, W25
	0x03559C98 ADRP X8, 0xBC2000
	0x03559C9C LDR X8, [X8 + 0x5B0]
	0x03559CA0 LDR X0, [X8]
	0x03559CA4 LDR W8, [X0 + 0xE0]
	0x03559CA8 CBNZ W8, 0x3559CB0
	0x03559CAC BL 0x1C16DFC
	0x03559CB0 ADRP X8, 0xBC5000
	0x03559CB4 LDR X8, [X8 + 0xB88]
	0x03559CB8 ADD X0, X31, 0xB8
	0x03559CBC MOV X1, X22
	0x03559CC0 MOV W2, W21
	0x03559CC4 LDR X4, [X8]
	0x03559CC8 MOV W3, W27
	0x03559CCC STP X31, X31, [X31 + 0xB8]
	0x03559CD0 BL 0x2B87BB0
	0x03559CD4 LDR W8, [X31 + 0x38]
	0x03559CD8 LDR W9, [X31 + 0xB0]
	0x03559CDC LDP X1, X2, [X31 + 0xB8]
	0x03559CE0 LDR W10, [X31 + 0xA8]
	0x03559CE4 STRB W8, [X31 + 0x48]
	0x03559CE8 LDUR W8, [X31 + 0xB3]
	0x03559CEC LDRB W11, [X31 + 0xAC]
	0x03559CF0 ADD X4, X31, 0x48
	0x03559CF4 MOV X0, X19
	0x03559CF8 STUR W8, [X28 + 0x3]
	0x03559CFC LDR X8, [X31 + 0x30]
	0x03559D00 STR W9, [X28]
	0x03559D04 MOV W3, W26
	0x03559D08 STR X8, [X31 + 0x50]
	0x03559D0C LDR W8, [X31 + 0x44]
	0x03559D10 STRB W8, [X31 + 0x58]
	0x03559D14 LDR W8, [X31 + 0x3C]
	0x03559D18 STRB W8, [X31 + 0x59]
	0x03559D1C LDR W8, [X31 + 0x40]
	0x03559D20 STRB W8, [X31 + 0x5A]
	0x03559D24 STRB W11, [X20 + 0x4]
	0x03559D28 STR W10, [X20]
	0x03559D2C BL 0x355A1D4
	0x03559D30 CBNZ W23, 0x3559D64
	0x03559D34 ADRP X8, 0xBC2000
	0x03559D38 LDR X8, [X8 + 0x5B0]
	0x03559D3C LDR X0, [X8]
	0x03559D40 LDR W8, [X0 + 0xE0]
	0x03559D44 CBNZ W8, 0x3559D4C
	0x03559D48 BL 0x1C16DFC
	0x03559D4C CBZ X22, 0x355A1AC
	0x03559D50 LDR W8, [X22 + 0x18]
	0x03559D54 LDR W9, [X31 + 0x24]
	0x03559D58 CMP W9, W8
	0x03559D5C B.CS 0x355A1A8
	0x03559D60 STRB W29, [X24]
	0x03559D64 LDR W8, [X19 + 0x1C]
	0x03559D68 LDR W27, [X31 + 0x28]
	0x03559D6C ADD W23, W23, 0x1
	0x03559D70 ADD W21, W21, W25
	0x03559D74 STR W8, [X31 + 0xA0]
	0x03559D78 ADD W8, W8, 0x1
	0x03559D7C STR W8, [X19 + 0x1C]
	0x03559D80 LDRB W8, [X31 + 0xA4]
	0x03559D84 CMP W23, W8
	0x03559D88 B.CC 0x3559BF8
	0x03559D8C LDR X8, [X19 + 0x90]
	0x03559D90 CBZ X8, 0x355A1AC
	0x03559D94 LDR X21, [X8 + 0x18]
	0x03559D98 CBZ X21, 0x355A1AC
	0x03559D9C ADRP X24, 0xB9F000
	0x03559DA0 LDR X8, [X21]
	0x03559DA4 LDR X24, [X24 + 0x348]
	0x03559DA8 LDR X28, [X31 + 0x18]
	0x03559DAC LDRH W9, [X8 + 0x12E]
	0x03559DB0 LDR X1, [X24]
	0x03559DB4 CBZ X9, 0x3559DD8
	0x03559DB8 LDR X10, [X8 + 0xB0]
	0x03559DBC ADD X10, X10, 0x8
	0x03559DC0 LDUR X11, [X10 - 0x8]
	0x03559DC4 CMP X11, X1
	0x03559DC8 B.EQ 0x3559EB0
	0x03559DCC SUBS X9, X9, 0x1
	0x03559DD0 ADD X10, X10, 0x10
	0x03559DD4 B.NE 0x3559DC0
	0x03559DD8 MOV X0, X21
	0x03559DDC MOV W2, W31
	0x03559DE0 BL 0x1C5C788
	0x03559DE4 B 0x3559EBC
	0x03559DE8 LDR W10, [X31 + 0x44]
	0x03559DEC LDR W8, [X31 + 0x38]
	0x03559DF0 LDUR W9, [X31 + 0xB3]
	0x03559DF4 LDRB W11, [X31 + 0xAC]
	0x03559DF8 STRB W10, [X31 + 0x70]
	0x03559DFC LDR W10, [X31 + 0x3C]
	0x03559E00 STRB W8, [X31 + 0x60]
	0x03559E04 LDR W8, [X31 + 0xB0]
	0x03559E08 ADD X4, X31, 0x60
	0x03559E0C STRB W10, [X31 + 0x71]
	0x03559E10 LDR W10, [X31 + 0x40]
	0x03559E14 MOV X0, X19
	0x03559E18 MOV X1, X22
	0x03559E1C MOV X2, X21
	0x03559E20 STRB W10, [X31 + 0x72]
	0x03559E24 LDR W10, [X31 + 0xA8]
	0x03559E28 MOV W3, W27
	0x03559E2C STR X23, [X31 + 0x68]
	0x03559E30 STUR W8, [X31 + 0x61]
	0x03559E34 STR W9, [X31 + 0x64]
	0x03559E38 STUR W10, [X31 + 0x73]
	0x03559E3C STRB W11, [X31 + 0x77]
	0x03559E40 BL 0x355A1D4
	0x03559E44 LDR W8, [X19 + 0x14]
	0x03559E48 STR W8, [X31 + 0xA0]
	0x03559E4C ADD W8, W8, 0x1
	0x03559E50 STR W8, [X19 + 0x14]
	0x03559E54 ADRP X8, 0xBC2000
	0x03559E58 LDR X8, [X8 + 0x5B0]
	0x03559E5C LDR W20, [X19 + 0x20]
	0x03559E60 LDR X0, [X8]
	0x03559E64 LDR W8, [X0 + 0xE0]
	0x03559E68 CBNZ W8, 0x3559E70
	0x03559E6C BL 0x1C16DFC
	0x03559E70 ADD W8, W20, W28
	0x03559E74 STR W8, [X19 + 0x20]
	0x03559E78 TBNZ X27, 0x0, 0x3559E90
	0x03559E7C CMP W28, 0x1
	0x03559E80 B.LT 0x3559E90
	0x03559E84 MOV X0, X31
	0x03559E88 BL 0x33C18F4
	0x03559E8C STR W0, [X19 + 0xD8]
	0x03559E90 LDP X20, X19, [X31 + 0x120]
	0x03559E94 LDP X22, X21, [X31 + 0x110]
	0x03559E98 LDP X24, X23, [X31 + 0x100]
	0x03559E9C LDP X26, X25, [X31 + 0xF0]
	0x03559EA0 LDP X28, X27, [X31 + 0xE0]
	0x03559EA4 LDP X29, X30, [X31 + 0xD0]
	0x03559EA8 ADD X31, X31, 0x130
	0x03559EAC RET
	0x03559EB0 LDRSW X9, [X10]
	0x03559EB4 ADD X8, X8, X9, 0x4, LSL
	0x03559EB8 ADD X0, X8, 0x138
	0x03559EBC LDP X8, X1, [X0]
	0x03559EC0 MOV X0, X21
	0x03559EC4 BLR X8
	0x03559EC8 CMP W0, 0x5
	0x03559ECC B.LT 0x355A198
	0x03559ED0 LDR X8, [X19 + 0x90]
	0x03559ED4 CBZ X8, 0x355A1AC
	0x03559ED8 LDR X21, [X8 + 0x18]
	0x03559EDC ADRP X8, 0xB9A000
	0x03559EE0 LDR X8, [X8 + 0xAC8]
	0x03559EE4 MOVZ W1, 0xF
	0x03559EE8 LDR X0, [X8]
	0x03559EEC BL 0x1C16D6C
	0x03559EF0 CBZ X0, 0x355A1AC
	0x03559EF4 LDR W8, [X0 + 0x18]
	0x03559EF8 MOV X22, X0
	0x03559EFC CBZ W8, 0x355A1A8
	0x03559F00 LDR X9, [X19 + 0xD0]
	0x03559F04 CMP W8, 0x1
	0x03559F08 STR X9, [X22 + 0x20]
	0x03559F0C B.EQ 0x355A1A8
	0x03559F10 ADRP X8, 0xBDC000
	0x03559F14 LDR X8, [X8 + 0x648]
	0x03559F18 ADD X23, X19, 0x88
	0x03559F1C MOV X0, X23
	0x03559F20 MOV X1, X31
	0x03559F24 LDR X8, [X8]
	0x03559F28 STR X8, [X22 + 0x28]
	0x03559F2C BL 0x3319BB4
	0x03559F30 LDR W8, [X22 + 0x18]
	0x03559F34 CMP W8, 0x2
	0x03559F38 B.LS 0x355A1A8
	0x03559F3C CMP W8, 0x3
	0x03559F40 STR X0, [X22 + 0x30]
	0x03559F44 B.EQ 0x355A1A8
	0x03559F48 ADRP X8, 0xBDC000
	0x03559F4C LDR X8, [X8 + 0x638]
	0x03559F50 ADD X0, X31, 0xA0
	0x03559F54 MOV X1, X31
	0x03559F58 LDR X8, [X8]
	0x03559F5C STR X8, [X22 + 0x38]
	0x03559F60 LDR W8, [X19 + 0x14]
	0x03559F64 STR W8, [X31 + 0xA0]
	0x03559F68 BL 0x337B6E0
	0x03559F6C LDR W8, [X22 + 0x18]
	0x03559F70 CMP W8, 0x4
	0x03559F74 B.LS 0x355A1A8
	0x03559F78 CMP W8, 0x5
	0x03559F7C STR X0, [X22 + 0x40]
	0x03559F80 B.EQ 0x355A1A8
	0x03559F84 ADRP X8, 0xBDC000
	0x03559F88 LDR X8, [X8 + 0x3F8]
	0x03559F8C ADD X0, X31, 0xA4
	0x03559F90 MOV X1, X31
	0x03559F94 LDR X8, [X8]
	0x03559F98 STR X8, [X22 + 0x48]
	0x03559F9C BL 0x3319BB4
	0x03559FA0 LDR W8, [X22 + 0x18]
	0x03559FA4 CMP W8, 0x6
	0x03559FA8 B.LS 0x355A1A8
	0x03559FAC CMP W8, 0x7
	0x03559FB0 STR X0, [X22 + 0x50]
	0x03559FB4 B.EQ 0x355A1A8
	0x03559FB8 ADRP X8, 0xBDC000
	0x03559FBC LDR X8, [X8 + 0x640]
	0x03559FC0 ADD X0, X31, 0x9C
	0x03559FC4 MOV X1, X31
	0x03559FC8 LDR X8, [X8]
	0x03559FCC STR X8, [X22 + 0x58]
	0x03559FD0 LDRB W8, [X23]
	0x03559FD4 LDRB W9, [X31 + 0xA4]
	0x03559FD8 SUB W8, W8, W9
	0x03559FDC STRB W8, [X31 + 0x9C]
	0x03559FE0 BL 0x3319BB4
	0x03559FE4 LDR W8, [X22 + 0x18]
	0x03559FE8 CMP W8, 0x8
	0x03559FEC B.LS 0x355A1A8
	0x03559FF0 CMP W8, 0x9
	0x03559FF4 STR X0, [X22 + 0x60]
	0x03559FF8 B.EQ 0x355A1A8
	0x03559FFC ADRP X8, 0xB9B000
	0x0355A000 LDR X8, [X8 + 0x2A8]
	0x0355A004 MOV X0, X23
	0x0355A008 MOV X1, X31
	0x0355A00C LDR X8, [X8]
	0x0355A010 STR X8, [X22 + 0x68]
	0x0355A014 BL 0x3319BB4
	0x0355A018 LDR W8, [X22 + 0x18]
	0x0355A01C CMP W8, 0xA
	0x0355A020 B.LS 0x355A1A8
	0x0355A024 CMP W8, 0xB
	0x0355A028 STR X0, [X22 + 0x70]
	0x0355A02C B.EQ 0x355A1A8
	0x0355A030 ADRP X8, 0xBDB000
	0x0355A034 LDR X8, [X8 + 0x658]
	0x0355A038 LDR X8, [X8]
	0x0355A03C STR X8, [X22 + 0x78]
	0x0355A040 ADRP X8, 0xBC1000
	0x0355A044 LDR X8, [X8 + 0x5B0]
	0x0355A048 LDR X0, [X8]
	0x0355A04C LDR W8, [X0 + 0xE0]
	0x0355A050 CBNZ W8, 0x355A058
	0x0355A054 BL 0x1C16DFC
	0x0355A058 ADD X0, X31, 0xA0
	0x0355A05C MOV X1, X31
	0x0355A060 STR W28, [X31 + 0xA0]
	0x0355A064 BL 0x337B6E0
	0x0355A068 LDR W8, [X22 + 0x18]
	0x0355A06C CMP W8, 0xC
	0x0355A070 B.LS 0x355A1A8
	0x0355A074 CMP W8, 0xD
	0x0355A078 STR X0, [X22 + 0x80]
	0x0355A07C B.EQ 0x355A1A8
	0x0355A080 ADRP X8, 0xBDB000
	0x0355A084 LDR X8, [X8 + 0x650]
	0x0355A088 ADRP X9, 0xBDB000
	0x0355A08C ADD X0, X31, 0xB8
	0x0355A090 MOV X1, X31
	0x0355A094 LDR X8, [X8]
	0x0355A098 LDR X9, [X9 + 0x3E8]
	0x0355A09C STR X8, [X22 + 0x88]
	0x0355A0A0 LDR X8, [X9]
	0x0355A0A4 MOVN X9, 0x0
	0x0355A0A8 STRB W27, [X31 + 0xC8]
	0x0355A0AC STP X8, X9, [X31 + 0xB8]
	0x0355A0B0 BL 0x33B162C
	0x0355A0B4 LDR W8, [X22 + 0x18]
	0x0355A0B8 CMP W8, 0xE
	0x0355A0BC B.LS 0x355A1A8
	0x0355A0C0 STR X0, [X22 + 0x90]
	0x0355A0C4 MOV X0, X22
	0x0355A0C8 MOV X1, X31
	0x0355A0CC BL 0x32278CC
	0x0355A0D0 ADRP X8, 0xB99000
	0x0355A0D4 LDR X8, [X8 + 0x9C8]
	0x0355A0D8 MOV X22, X0
	0x0355A0DC LDR X23, [X8]
	0x0355A0E0 LDR X8, [X23 + 0x38]
	0x0355A0E4 CBNZ X8, 0x355A0F4
	0x0355A0E8 MOV X0, X23
	0x0355A0EC BL 0x1C5C6E0
	0x0355A0F0 LDR X8, [X23 + 0x38]
	0x0355A0F4 LDR X0, [X8 + 0x10]
	0x0355A0F8 LDRB W8, [X0 + 0x135]
	0x0355A0FC TBNZ X8, 0x0, 0x355A104
	0x0355A100 BL 0x1C5C684
	0x0355A104 LDR W8, [X0 + 0xE0]
	0x0355A108 CBNZ W8, 0x355A110
	0x0355A10C BL 0x1C16DFC
	0x0355A110 LDR X8, [X23 + 0x38]
	0x0355A114 LDR X0, [X8 + 0x10]
	0x0355A118 LDRB W8, [X0 + 0x135]
	0x0355A11C TBNZ X8, 0x0, 0x355A124
	0x0355A120 BL 0x1C5C684
	0x0355A124 CBZ X21, 0x355A1AC
	0x0355A128 LDR X9, [X0 + 0xB8]
	0x0355A12C LDR X8, [X21]
	0x0355A130 LDR X1, [X24]
	0x0355A134 LDR X23, [X9]
	0x0355A138 LDRH W9, [X8 + 0x12E]
	0x0355A13C CBZ X9, 0x355A160
	0x0355A140 LDR X10, [X8 + 0xB0]
	0x0355A144 ADD X10, X10, 0x8
	0x0355A148 LDUR X11, [X10 - 0x8]
	0x0355A14C CMP X11, X1
	0x0355A150 B.EQ 0x355A170
	0x0355A154 SUBS X9, X9, 0x1
	0x0355A158 ADD X10, X10, 0x10
	0x0355A15C B.NE 0x355A148
	0x0355A160 MOVZ W2, 0x1
	0x0355A164 MOV X0, X21
	0x0355A168 BL 0x1C5C788
	0x0355A16C B 0x355A180
	0x0355A170 LDR W9, [X10]
	0x0355A174 ADD W9, W9, 0x1
	0x0355A178 ADD X8, X8, W9, 0x4, SXTW
	0x0355A17C ADD X0, X8, 0x138
	0x0355A180 LDP X8, X4, [X0]
	0x0355A184 MOVZ W1, 0x5
	0x0355A188 MOV X0, X21
	0x0355A18C MOV X2, X22
	0x0355A190 MOV X3, X23
	0x0355A194 BLR X8
	0x0355A198 LDR W8, [X19 + 0x18]
	0x0355A19C ADD W8, W8, 0x1
	0x0355A1A0 STR W8, [X19 + 0x18]
	0x0355A1A4 B 0x3559E44
	0x0355A1A8 BL 0x1C16F28
	0x0355A1AC BL 0x1C16F20
	0x0355A1B0 AND W8, W1, 0x1
	0x0355A1B4 AND W9, W4, 0x1
	0x0355A1B8 AND W10, W5, 0x1
	0x0355A1BC STR X2, [X0 + 0x8]
	0x0355A1C0 STRB W3, [X0 + 0x10]
	0x0355A1C4 STRB W8, [X0]
	0x0355A1C8 STRB W9, [X0 + 0x11]
	0x0355A1CC STRB W10, [X0 + 0x12]
	0x0355A1D0 RET
	0x0355A1D4 SUB X31, X31, 0x120
	0x0355A1D8 STP X29, X30, [X31 + 0xC0]
	0x0355A1DC STP X28, X27, [X31 + 0xD0]
	0x0355A1E0 STP X26, X25, [X31 + 0xE0]
	0x0355A1E4 STP X24, X23, [X31 + 0xF0]
	0x0355A1E8 STP X22, X21, [X31 + 0x100]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], X30
	003 Move [X31+64], X26
	004 Move [X31+72], X25
	005 Move [X31+80], X24
	006 Move [X31+88], X23
	007 Move [X31+96], X22
	008 Move [X31+104], X21
	009 Move [X31+112], X20
	010 Move [X31+120], X19
	011 Move X23, 0xE87000
	012 Move W8, [X23+3495]
	013 Move W20, W3
	014 Move X21, X2
	015 Move X22, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {74}
	021 Move X0, 0xBC6000
	022 Move X0, [X0+2952]
	023 Call 0x1C17CF4
	024 Move X0, 0xBA6000
	025 Move X0, [X0+3688]
	026 Call 0x1C17CF4
	027 Move X0, 0xBCE000
	028 Move X0, [X0+3312]
	029 Call 0x1C17CF4
	030 Move X0, 0xBCE000
	031 Move X0, [X0+3320]
	032 Call 0x1C17CF4
	033 Move X0, 0xBCE000
	034 Move X0, [X0+3328]
	035 Call 0x1C17CF4
	036 Move X0, 0xBDD000
	037 Move X0, [X0+1400]
	038 Call 0x1C17CF4
	039 Move X0, 0xBDD000
	040 Move X0, [X0+1408]
	041 Call 0x1C17CF4
	042 Move X0, 0xBC3000
	043 Move X0, [X0+1456]
	044 Call 0x1C17CF4
	045 Move X0, 0xB9B000
	046 Move X0, [X0+2504]
	047 Call 0x1C17CF4
	048 Move X0, 0xB9B000
	049 Move X0, [X0+1560]
	050 Call 0x1C17CF4
	051 Move X0, 0xBDD000
	052 Move X0, [X0+1416]
	053 Call 0x1C17CF4
	054 Move X0, 0xBA0000
	055 Move X0, [X0+840]
	056 Call 0x1C17CF4
	057 Move X0, 0xBDD000
	058 Move X0, [X0+1232]
	059 Call 0x1C17CF4
	060 Move X0, 0xBDD000
	061 Move X0, [X0+1424]
	062 Call 0x1C17CF4
	063 Move X0, 0xBDD000
	064 Move X0, [X0+1432]
	065 Call 0x1C17CF4
	066 Move X0, 0xBDD000
	067 Move X0, [X0+1440]
	068 Call 0x1C17CF4
	069 Move X0, 0xBDD000
	070 Move X0, [X0+1448]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X23+3495], W8
	074 Move [X31+60], W31
	075 Move TEMP, X20
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {448}
	079 Move X26, 0xBC3000
	080 Move X26, [X26+1456]
	081 Move X25, X19
	082 Add X25, X25, 160
	083 Move X23, [X25]
	084 Move X0, [X26]
	085 Move X24, [X25+8]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X8, 0xBDD000
	091 Move X8, [X8+1400]
	092 Move X0, X31
	093 Move X1, [X8]
	094 Call 0x2B890A4, X0
	095 Move X8, 0xBDD000
	096 Move X8, [X8+1408]
	097 Move X2, X0
	098 Move X3, X1
	099 Move X0, X23
	100 Move X4, [X8]
	101 Move X1, X24
	102 Call 0x2B89008, X0, X1
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfNotEqual {202}
	107 Move V0, [X25]
	108 Move X0, [X26]
	109 Add X1, X31, 32
	110 Move [X31+2], V0
	111 Call 0x1C17E04
	112 Move X23, X0
	113 Move X0, [X26]
	114 Add X1, X31, 16
	115 Move [X31+16], X22
	116 Move [X31+24], X21
	117 Call 0x1C17E04
	118 Move X8, 0xBDD000
	119 Move X8, [X8+1416]
	120 Move X1, X0
	121 Move X0, X23
	122 Move X2, [X8]
	123 Call 0x21D2508, X0, X1
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfNotEqual {290}
	128 Move X8, [X19+144]
	129 Compare X8, 0
	130 JumpIfEqual {506}
	131 Move X0, [X26]
	132 Move X20, [X8+24]
	133 Move X21, [X19+208]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Move W8, [X19+172]
	139 Add X0, X31, 60
	140 Move X1, X31
	141 Move [X31+60], W8
	142 Call Int32.ToString, X0
	143 Move X8, 0xBDD000
	144 Move X9, 0xBDD000
	145 Move X8, [X8+1432]
	146 Move X9, [X9+1448]
	147 Move X2, X0
	148 Move X0, X21
	149 Move X1, [X8]
	150 Move X3, [X9]
	151 Move X4, X31
	152 Call String.Concat, X0, X1, X2, X3
	153 Move X8, 0xB9B000
	154 Move X8, [X8+2504]
	155 Move X19, X0
	156 Move X21, [X8]
	157 Move X8, [X21+56]
	158 Compare X8, 0
	159 JumpIfNotEqual {163}
	160 Move X0, X21
	161 Call 0x1C5D6E0
	162 Move X8, [X21+56]
	163 Move X0, [X8+16]
	164 Move W8, [X0+309]
	165 Move TEMP, X8
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfEqual {170}
	169 Call 0x1C5D684
	170 Move W8, [X0+224]
	171 Compare W8, 0
	172 JumpIfNotEqual {174}
	173 Call 0x1C17DFC
	174 Move X8, [X21+56]
	175 Move X0, [X8+16]
	176 Move W8, [X0+309]
	177 Move TEMP, X8
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfEqual {182}
	181 Call 0x1C5D684
	182 Compare X20, 0
	183 JumpIfEqual {506}
	184 Move X10, 0xBA0000
	185 Move X9, [X0+184]
	186 Move X8, [X20]
	187 Move X10, [X10+840]
	188 Move X21, [X9]
	189 NotImplemented "Instruction LDRH not yet implemented."
	190 Move X1, [X10]
	191 Compare X9, 0
	192 JumpIfEqual {199}
	193 Move X10, [X8+176]
	194 Add X10, X10, 8
	195 NotImplemented "Instruction LDUR not yet implemented."
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Subtract X9, X9, 1
	198 Add X10, X10, 16
	199 Move W2, 1
	200 Move X0, X20
	201 Call 0x1C5D788
	202 Move X0, [X26]
	203 Move W8, [X0+224]
	204 Compare W8, 0
	205 JumpIfNotEqual {207}
	206 Call 0x1C17DFC
	207 Move X8, 0xB9B000
	208 Move X8, [X8+1560]
	209 Move X1, X21
	210 ShiftRight X1, 32
	211 And X1, X1, 0x7FFFFFFF
	212 Move X0, [X8]
	213 Call 0x1C17D6C
	214 Move X8, 0xBA6000
	215 Move X8, [X8+3688]
	216 Move X1, X0
	217 Add X0, X31, 32
	218 Move [X31+32], X31
	219 Move [X31+40], X31
	220 Move X2, [X8]
	221 Call 0x2B88B6C, X0, X1
	222 Move V0, [X31+2]
	223 Move [X25], V0
	224 Move X8, [X19+144]
	225 Compare X8, 0
	226 JumpIfEqual {506}
	227 Move X23, [X8+24]
	228 Move W8, [X19+172]
	229 Move X24, [X19+208]
	230 Add X0, X31, 60
	231 Move X1, X31
	232 Move [X31+60], W8
	233 Call Int32.ToString, X0
	234 Move X8, 0xBDD000
	235 Move X9, 0xBDD000
	236 Move X8, [X8+1432]
	237 Move X9, [X9+1424]
	238 Move X2, X0
	239 Move X0, X24
	240 Move X1, [X8]
	241 Move X3, [X9]
	242 Move X4, X31
	243 Call String.Concat, X0, X1, X2, X3
	244 Move X8, 0xB9B000
	245 Move X8, [X8+2504]
	246 Move X24, X0
	247 Move X25, [X8]
	248 Move X8, [X25+56]
	249 Compare X8, 0
	250 JumpIfNotEqual {254}
	251 Move X0, X25
	252 Call 0x1C5D6E0
	253 Move X8, [X25+56]
	254 Move X0, [X8+16]
	255 Move W8, [X0+309]
	256 Move TEMP, X8
	257 And TEMP, TEMP, 1
	258 Compare TEMP, 1
	259 JumpIfEqual {261}
	260 Call 0x1C5D684
	261 Move W8, [X0+224]
	262 Compare W8, 0
	263 JumpIfNotEqual {265}
	264 Call 0x1C17DFC
	265 Move X8, [X25+56]
	266 Move X0, [X8+16]
	267 Move W8, [X0+309]
	268 Move TEMP, X8
	269 And TEMP, TEMP, 1
	270 Compare TEMP, 1
	271 JumpIfEqual {273}
	272 Call 0x1C5D684
	273 Compare X23, 0
	274 JumpIfEqual {506}
	275 Move X10, 0xBA0000
	276 Move X9, [X0+184]
	277 Move X8, [X23]
	278 Move X10, [X10+840]
	279 Move X25, [X9]
	280 NotImplemented "Instruction LDRH not yet implemented."
	281 Move X1, [X10]
	282 Compare X9, 0
	283 JumpIfEqual {434}
	284 Move X10, [X8+176]
	285 Add X10, X10, 8
	286 NotImplemented "Instruction LDUR not yet implemented."
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Subtract X9, X9, 1
	289 Add X10, X10, 16
	290 Move X0, [X26]
	291 Move W8, [X0+224]
	292 Compare W8, 0
	293 JumpIfNotEqual {295}
	294 Call 0x1C17DFC
	295 Move X23, [X25]
	296 Compare X23, 0
	297 JumpIfEqual {311}
	298 Move X0, [X26]
	299 Move W8, [X0+224]
	300 Compare W8, 0
	301 JumpIfNotEqual {306}
	302 Call 0x1C17DFC
	303 Move X23, [X25]
	304 Compare X23, 0
	305 JumpIfEqual {506}
	306 Move W8, [X23+24]
	307 Move X9, X21
	308 ShiftRight X9, 32
	309 And X9, X9, 0x7FFFFFFF
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Move X0, [X26]
	312 Move W8, [X0+224]
	313 Compare W8, 0
	314 JumpIfNotEqual {316}
	315 Call 0x1C17DFC
	316 Move X8, 0xB9B000
	317 Move X8, [X8+1560]
	318 Move X1, X21
	319 ShiftRight X1, 32
	320 And X1, X1, 0x7FFFFFFF
	321 Move X0, [X8]
	322 Call 0x1C17D6C
	323 Move X23, X0
	324 Move W9, [X10]
	325 Add W9, W9, 1
	326 Add X8, X8, W9
	327 Add X0, X8, 312
	328 Move X8, [X0]
	329 Move X4, [X0+8]
	330 Move W1, 5
	331 Move X0, X20
	332 Move X2, X19
	333 Move X3, X21
	334 NotImplemented "Instruction BLR not yet implemented."
	335 Move X0, [X26]
	336 Move W8, [X0+224]
	337 Compare W8, 0
	338 JumpIfNotEqual {341}
	339 Call 0x1C17DFC
	340 Move X23, [X25]
	341 Move X0, [X26]
	342 Move W8, [X0+224]
	343 Compare W8, 0
	344 JumpIfNotEqual {346}
	345 Call 0x1C17DFC
	346 Move X24, X21
	347 ShiftRight X24, 32
	348 And X24, X24, 0x7FFFFFFF
	349 Move X0, X22
	350 Move W1, W21
	351 Move X2, X23
	352 Move W3, W31
	353 Move W4, W24
	354 Move X5, X31
	355 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	356 Move X8, 0xBC6000
	357 Move X8, [X8+2952]
	358 Add X0, X31, 32
	359 Move X1, X23
	360 Move W2, W31
	361 Move X4, [X8]
	362 Move W3, W24
	363 Move [X31+32], X31
	364 Move [X31+40], X31
	365 Call 0x2B88BB0, X0, X1, X2, X3
	366 Move V0, [X31+2]
	367 Move [X25], V0
	368 Move X8, [X19+144]
	369 Compare X8, 0
	370 JumpIfEqual {506}
	371 Move X23, [X8+24]
	372 Move W8, [X19+172]
	373 Move X24, [X19+208]
	374 Add X0, X31, 60
	375 Move X1, X31
	376 Move [X31+60], W8
	377 Call Int32.ToString, X0
	378 Move X8, 0xBDC000
	379 Move X9, 0xBDC000
	380 Move X8, [X8+1432]
	381 Move X9, [X9+1440]
	382 Move X2, X0
	383 Move X0, X24
	384 Move X1, [X8]
	385 Move X3, [X9]
	386 Move X4, X31
	387 Call String.Concat, X0, X1, X2, X3
	388 Move X8, 0xB9A000
	389 Move X8, [X8+2504]
	390 Move X24, X0
	391 Move X25, [X8]
	392 Move X8, [X25+56]
	393 Compare X8, 0
	394 JumpIfNotEqual {398}
	395 Move X0, X25
	396 Call 0x1C5D6E0
	397 Move X8, [X25+56]
	398 Move X0, [X8+16]
	399 Move W8, [X0+309]
	400 Move TEMP, X8
	401 And TEMP, TEMP, 1
	402 Compare TEMP, 1
	403 JumpIfEqual {405}
	404 Call 0x1C5D684
	405 Move W8, [X0+224]
	406 Compare W8, 0
	407 JumpIfNotEqual {409}
	408 Call 0x1C17DFC
	409 Move X8, [X25+56]
	410 Move X0, [X8+16]
	411 Move W8, [X0+309]
	412 Move TEMP, X8
	413 And TEMP, TEMP, 1
	414 Compare TEMP, 1
	415 JumpIfEqual {417}
	416 Call 0x1C5D684
	417 Compare X23, 0
	418 JumpIfEqual {506}
	419 Move X10, 0xB9F000
	420 Move X9, [X0+184]
	421 Move X8, [X23]
	422 Move X10, [X10+840]
	423 Move X25, [X9]
	424 NotImplemented "Instruction LDRH not yet implemented."
	425 Move X1, [X10]
	426 Compare X9, 0
	427 JumpIfEqual {434}
	428 Move X10, [X8+176]
	429 Add X10, X10, 8
	430 NotImplemented "Instruction LDUR not yet implemented."
	431 NotImplemented "Instruction CMP not yet implemented."
	432 Subtract X9, X9, 1
	433 Add X10, X10, 16
	434 Move W2, 1
	435 Move X0, X23
	436 Call 0x1C5D788
	437 Move W9, [X10]
	438 Add W9, W9, 1
	439 Add X8, X8, W9
	440 Add X0, X8, 312
	441 Move X8, [X0]
	442 Move X4, [X0+8]
	443 Move W1, 3
	444 Move X0, X23
	445 Move X2, X24
	446 Move X3, X25
	447 NotImplemented "Instruction BLR not yet implemented."
	448 Move X8, [X19+144]
	449 Compare X8, 0
	450 JumpIfEqual {506}
	451 Move X23, [X8+16]
	452 Compare X23, 0
	453 JumpIfEqual {506}
	454 Move X10, 0xBDC000
	455 Move X8, [X23]
	456 Move X10, [X10+1232]
	457 Move W24, [X19+132]
	458 NotImplemented "Instruction LDRH not yet implemented."
	459 Move X1, [X10]
	460 Compare X9, 0
	461 JumpIfEqual {468}
	462 Move X10, [X8+176]
	463 Add X10, X10, 8
	464 NotImplemented "Instruction LDUR not yet implemented."
	465 NotImplemented "Instruction CMP not yet implemented."
	466 Subtract X9, X9, 1
	467 Add X10, X10, 16
	468 Move X0, X23
	469 Move W2, W31
	470 Call 0x1C5D788
	471 NotImplemented "Instruction LDRSW not yet implemented."
	472 Add X8, X8, X9
	473 Add X0, X8, 312
	474 Move X8, [X0]
	475 Move X2, [X0+8]
	476 Move X0, X23
	477 Move W1, W24
	478 NotImplemented "Instruction BLR not yet implemented."
	479 Move TEMP, X0
	480 And TEMP, TEMP, 1
	481 Compare TEMP, 1
	482 JumpIfNotEqual {495}
	483 Move W8, [X19+16]
	484 Compare W8, 0
	485 JumpIfEqual {495}
	486 Move W4, [X19+57]
	487 Move X5, [X19+64]
	488 Move W7, [X19+36]
	489 Move W6, [X19+56]
	490 Move X0, X19
	491 Move X1, X22
	492 Move X2, X21
	493 Move W3, W20
	494 Call LocalVoice.sendFrame0, X0, X1, X2, X3, X4, X5, X6
	495 Move X20, [X31+112]
	496 Move X19, [X31+120]
	497 Move X22, [X31+96]
	498 Move X21, [X31+104]
	499 Move X24, [X31+80]
	500 Move X23, [X31+88]
	501 Move X26, [X31+64]
	502 Move X25, [X31+72]
	503 Move X30, [X31+48]
	504 Add X31, X31, 128
	505 Return 
	506 Call 0x1C17F20

Method: System.Void sendFrame0(System.ArraySegment`1<System.Byte> compressed, Photon.Voice.FrameFlags flags, System.Boolean targetMe, System.Int32[] targetPlayers, System.Byte interestGroup, System.Boolean reliable)

Disassembly:
	0x0355A8FC ADRP X24, 0xBDB000
	0x0355A900 ADRP X23, 0xB99000
	0x0355A904 LDR X24, [X24 + 0x680]
	0x0355A908 LDR X23, [X23 + 0x9C8]
	0x0355A90C MOV X0, X21
	0x0355A910 MOV W1, W22
	0x0355A914 BLR X8
	0x0355A918 TBZ X0, 0x0, 0x355A92C
	0x0355A91C LDRB W1, [X19 + 0x39]
	0x0355A920 LDR X2, [X19 + 0x40]
	0x0355A924 MOV X0, X19
	0x0355A928 BL 0x3557E04
	0x0355A92C LDR X8, [X19]
	0x0355A930 MOV X0, X19
	0x0355A934 LDP X9, X1, [X8 + 0x198]
	0x0355A938 BLR X9
	0x0355A93C LDR X0, [X19 + 0xD0]
	0x0355A940 LDR X1, [X24]
	0x0355A944 LDR X20, [X20 + 0x18]
	0x0355A948 MOV X2, X31
	0x0355A94C BL 0x321B938
	0x0355A950 LDR X21, [X23]
	0x0355A954 MOV X19, X0
	0x0355A958 LDR X8, [X21 + 0x38]
	0x0355A95C CBNZ X8, 0x355A96C
	0x0355A960 MOV X0, X21
	0x0355A964 BL 0x1C5C6E0
	0x0355A968 LDR X8, [X21 + 0x38]
	0x0355A96C LDR X0, [X8 + 0x10]
	0x0355A970 LDRB W8, [X0 + 0x135]
	0x0355A974 TBNZ X8, 0x0, 0x355A97C
	0x0355A978 BL 0x1C5C684
	0x0355A97C LDR W8, [X0 + 0xE0]
	0x0355A980 CBNZ W8, 0x355A988
	0x0355A984 BL 0x1C16DFC
	0x0355A988 LDR X8, [X21 + 0x38]
	0x0355A98C LDR X0, [X8 + 0x10]
	0x0355A990 LDRB W8, [X0 + 0x135]
	0x0355A994 TBNZ X8, 0x0, 0x355A99C
	0x0355A998 BL 0x1C5C684
	0x0355A99C CBZ X20, 0x355AA28
	0x0355A9A0 ADRP X10, 0xB9E000
	0x0355A9A4 LDR X9, [X0 + 0xB8]
	0x0355A9A8 LDR X8, [X20]
	0x0355A9AC LDR X10, [X10 + 0x348]
	0x0355A9B0 LDR X21, [X9]
	0x0355A9B4 LDRH W9, [X8 + 0x12E]
	0x0355A9B8 LDR X1, [X10]
	0x0355A9BC CBZ X9, 0x355A9E0
	0x0355A9C0 LDR X10, [X8 + 0xB0]
	0x0355A9C4 ADD X10, X10, 0x8
	0x0355A9C8 LDUR X11, [X10 - 0x8]
	0x0355A9CC CMP X11, X1
	0x0355A9D0 B.EQ 0x355A9F0
	0x0355A9D4 SUBS X9, X9, 0x1
	0x0355A9D8 ADD X10, X10, 0x10
	0x0355A9DC B.NE 0x355A9C8
	0x0355A9E0 MOVZ W2, 0x1
	0x0355A9E4 MOV X0, X20
	0x0355A9E8 BL 0x1C5C788
	0x0355A9EC B 0x355AA00
	0x0355A9F0 LDR W9, [X10]
	0x0355A9F4 ADD W9, W9, 0x1
	0x0355A9F8 ADD X8, X8, W9, 0x4, SXTW
	0x0355A9FC ADD X0, X8, 0x138
	0x0355AA00 LDP X5, X4, [X0]
	0x0355AA04 MOV X0, X20
	0x0355AA08 MOV X2, X19
	0x0355AA0C MOV X3, X21
	0x0355AA10 LDP X20, X19, [X31 + 0x30]
	0x0355AA14 LDP X22, X21, [X31 + 0x20]
	0x0355AA18 LDP X24, X23, [X31 + 0x10]
	0x0355AA1C MOVZ W1, 0x3
	0x0355AA20 LDR X30, [X31], #0x40
	0x0355AA24 BR X5
	0x0355AA28 BL 0x1C16F20
	0x0355AA2C STR X30, [X31 - 0x20]!
	0x0355AA30 STP X20, X19, [X31 + 0x10]
	0x0355AA34 ADRP X20, 0xE85000
	0x0355AA38 LDRB W8, [X20 + 0xDAA]
	0x0355AA3C MOV X19, X0
	0x0355AA40 TBNZ X8, 0x0, 0x355AA58
	0x0355AA44 ADRP X0, 0xB99000
	0x0355AA48 LDR X0, [X0 + 0xE00]
	0x0355AA4C BL 0x1C16CF4
	0x0355AA50 MOVZ W8, 0x1
	0x0355AA54 STRB W8, [X20 + 0xDAA]
	0x0355AA58 LDRB W20, [X19 + 0xB0]
	0x0355AA5C BL 0x1C16D44
	0x0355AA60 CBNZ W20, 0x355AAD8
	0x0355AA64 LDR X20, [X19 + 0x78]
	0x0355AA68 CBZ X20, 0x355AACC
	0x0355AA6C ADRP X10, 0xB99000
	0x0355AA70 LDR X8, [X20]
	0x0355AA74 LDR X10, [X10 + 0xE00]
	0x0355AA78 LDRH W9, [X8 + 0x12E]
	0x0355AA7C LDR X1, [X10]
	0x0355AA80 CBZ X9, 0x355AAA4
	0x0355AA84 LDR X10, [X8 + 0xB0]
	0x0355AA88 ADD X10, X10, 0x8
	0x0355AA8C LDUR X11, [X10 - 0x8]
	0x0355AA90 CMP X11, X1
	0x0355AA94 B.EQ 0x355AAB4
	0x0355AA98 SUBS X9, X9, 0x1
	0x0355AA9C ADD X10, X10, 0x10
	0x0355AAA0 B.NE 0x355AA8C
	0x0355AAA4 MOV X0, X20
	0x0355AAA8 MOV W2, W31
	0x0355AAAC BL 0x1C5C788
	0x0355AAB0 B 0x355AAC0
	0x0355AAB4 LDRSW X9, [X10]
	0x0355AAB8 ADD X8, X8, X9, 0x4, LSL
	0x0355AABC ADD X0, X8, 0x138
	0x0355AAC0 LDP X8, X1, [X0]
	0x0355AAC4 MOV X0, X20
	0x0355AAC8 BLR X8
	0x0355AACC BL 0x1C16D44
	0x0355AAD0 MOVZ W8, 0x1
	0x0355AAD4 STRB W8, [X19 + 0xB0]
	0x0355AAD8 LDP X20, X19, [X31 + 0x10]
	0x0355AADC LDR X30, [X31], #0x20
	0x0355AAE0 RET
	0x0355AAE4 STR X1, [X0 + 0x10]
	0x0355AAE8 STR X2, [X0 + 0x48]
	0x0355AAEC LDP V1, V0, [X3 + 0x10]
	0x0355AAF0 LDR V2, [X3]
	0x0355AAF4 STP X31, X31, [X0]
	0x0355AAF8 STUR V0, [X0 + 0x38]
	0x0355AAFC STUR V1, [X0 + 0x28]
	0x0355AB00 STUR V2, [X0 + 0x18]
	0x0355AB04 RET
	0x0355AB08 STP X30, X25, [X31 - 0x40]!
	0x0355AB0C STP X24, X23, [X31 + 0x10]
	0x0355AB10 STP X22, X21, [X31 + 0x20]
	0x0355AB14 STP X20, X19, [X31 + 0x30]
	0x0355AB18 ADRP X21, 0xE85000
	0x0355AB1C LDRB W8, [X21 + 0xDAB]
	0x0355AB20 MOV X20, X1
	0x0355AB24 MOV X19, X0
	0x0355AB28 TBNZ X8, 0x0, 0x355AB7C
	0x0355AB2C ADRP X0, 0xBDB000
	0x0355AB30 LDR X0, [X0 + 0x688]
	0x0355AB34 BL 0x1C16CF4
	0x0355AB38 ADRP X0, 0xBDB000
	0x0355AB3C LDR X0, [X0 + 0x690]
	0x0355AB40 BL 0x1C16CF4
	0x0355AB44 ADRP X0, 0xBDB000
	0x0355AB48 LDR X0, [X0 + 0x698]
	0x0355AB4C BL 0x1C16CF4
	0x0355AB50 ADRP X0, 0xBDB000
	0x0355AB54 LDR X0, [X0 + 0x6A0]
	0x0355AB58 BL 0x1C16CF4
	0x0355AB5C ADRP X0, 0xBDB000
	0x0355AB60 LDR X0, [X0 + 0x6A8]
	0x0355AB64 BL 0x1C16CF4
	0x0355AB68 ADRP X0, 0xBDB000
	0x0355AB6C LDR X0, [X0 + 0x6B0]
	0x0355AB70 BL 0x1C16CF4
	0x0355AB74 MOVZ W8, 0x1
	0x0355AB78 STRB W8, [X21 + 0xDAB]
	0x0355AB7C LDR W8, [X19 + 0x18]
	0x0355AB80 CMP W8, 0x1
	0x0355AB84 B.NE 0x355AC10
	0x0355AB88 ADRP X8, 0xBDB000
	0x0355AB8C LDR X8, [X8 + 0x6B0]
	0x0355AB90 ADRP X22, 0xBDB000
	0x0355AB94 LDR X22, [X22 + 0x688]
	0x0355AB98 ADRP X23, 0xBDB000
	0x0355AB9C LDR X0, [X8]
	0x0355ABA0 ADRP X24, 0xBDB000
	0x0355ABA4 ADRP X25, 0xBDB000
	0x0355ABA8 LDR X23, [X23 + 0x6A8]
	0x0355ABAC LDR X24, [X24 + 0x698]
	0x0355ABB0 LDR X25, [X25 + 0x690]
	0x0355ABB4 BL 0x1C16F10
	0x0355ABB8 MOV X1, X20
	0x0355ABBC MOV X21, X0
	0x0355ABC0 BL 0x35568F8
	0x0355ABC4 LDR X0, [X22]
	0x0355ABC8 BL 0x1C16F10
	0x0355ABCC LDR X2, [X23]
	0x0355ABD0 MOV X1, X21
	0x0355ABD4 MOV X3, X31
	0x0355ABD8 MOV X20, X0
	0x0355ABDC BL 0x2A6B948
	0x0355ABE0 LDR X0, [X24]
	0x0355ABE4 BL 0x1C16F10
	0x0355ABE8 LDR X2, [X25]
	0x0355ABEC MOV X1, X20
	0x0355ABF0 MOV X21, X0
	0x0355ABF4 BL 0x29B1568
	0x0355ABF8 STR X21, [X19 + 0x8]
	0x0355ABFC LDP X20, X19, [X31 + 0x30]
	0x0355AC00 LDP X22, X21, [X31 + 0x20]
	0x0355AC04 LDP X24, X23, [X31 + 0x10]
	0x0355AC08 LDP X30, X25, [X31], #0x40
	0x0355AC0C RET
	0x0355AC10 ADRP X8, 0xBDB000
	0x0355AC14 LDR X8, [X8 + 0x6A0]
	0x0355AC18 MOV X0, X19
	0x0355AC1C MOV X1, X20
	0x0355AC20 LDP X20, X19, [X31 + 0x30]
	0x0355AC24 LDR X2, [X8]
	0x0355AC28 LDP X22, X21, [X31 + 0x20]
	0x0355AC2C LDP X24, X23, [X31 + 0x10]
	0x0355AC30 LDP X30, X25, [X31], #0x40
	0x0355AC34 B 0x2240270
	0x0355AC38 STP X30, X21, [X31 - 0x20]!
	0x0355AC3C STP X20, X19, [X31 + 0x10]
	0x0355AC40 ADRP X21, 0xE85000
	0x0355AC44 LDRB W8, [X21 + 0xDAC]
	0x0355AC48 MOV X19, X1
	0x0355AC4C MOV X20, X0
	0x0355AC50 TBNZ X8, 0x0, 0x355AC80
	0x0355AC54 ADRP X0, 0xBDB000
	0x0355AC58 LDR X0, [X0 + 0x690]
	0x0355AC5C BL 0x1C16CF4
	0x0355AC60 ADRP X0, 0xBDB000
	0x0355AC64 LDR X0, [X0 + 0x698]
	0x0355AC68 BL 0x1C16CF4
	0x0355AC6C ADRP X0, 0xBDB000
	0x0355AC70 LDR X0, [X0 + 0x6B8]
	0x0355AC74 BL 0x1C16CF4
	0x0355AC78 MOVZ W8, 0x1
	0x0355AC7C STRB W8, [X21 + 0xDAC]
	0x0355AC80 LDR W8, [X20 + 0x18]
	0x0355AC84 CMP W8, 0x1
	0x0355AC88 B.NE 0x355ACC4
	0x0355AC8C ADRP X8, 0xBDB000
	0x0355AC90 LDR X8, [X8 + 0x698]
	0x0355AC94 ADRP X21, 0xBDB000
	0x0355AC98 LDR X0, [X8]
	0x0355AC9C LDR X21, [X21 + 0x690]
	0x0355ACA0 BL 0x1C16F10
	0x0355ACA4 LDR X2, [X21]
	0x0355ACA8 MOV X1, X19
	0x0355ACAC MOV X21, X0
	0x0355ACB0 BL 0x29B1568
	0x0355ACB4 STR X21, [X20 + 0x8]
	0x0355ACB8 LDP X20, X19, [X31 + 0x10]
	0x0355ACBC LDP X30, X21, [X31], #0x20
	0x0355ACC0 RET
	0x0355ACC4 ADRP X8, 0xBDB000
	0x0355ACC8 LDR X8, [X8 + 0x6B8]
	0x0355ACCC MOV X0, X20
	0x0355ACD0 MOV X1, X19
	0x0355ACD4 LDP X20, X19, [X31 + 0x10]
	0x0355ACD8 LDR X2, [X8]
	0x0355ACDC LDP X30, X21, [X31], #0x20
	0x0355ACE0 B 0x223FDDC
	0x0355ACE4 LDR X0, [X0]
	0x0355ACE8 RET
	0x0355ACEC STR X1, [X0]
	0x0355ACF0 RET
	0x0355ACF4 LDR X0, [X0 + 0x8]
	0x0355ACF8 RET
	0x0355ACFC STR X1, [X0 + 0x8]
	0x0355AD00 RET
	0x0355AD04 LDR X0, [X0 + 0x48]
	0x0355AD08 RET
	0x0355AD0C LDP V1, V0, [X0 + 0x20]
	0x0355AD10 LDR V2, [X0 + 0x1]
	0x0355AD14 STP V1, V0, [X8 + 0x10]
	0x0355AD18 STR V2, [X8]
	0x0355AD1C RET
	0x0355AD20 LDP V1, V0, [X1 + 0x10]
	0x0355AD24 LDR V2, [X1]
	0x0355AD28 STP V1, V0, [X0 + 0x20]
	0x0355AD2C STR V2, [X0 + 0x1]
	0x0355AD30 RET
	0x0355AD34 LDR W0, [X0 + 0x94]
	0x0355AD38 RET
	0x0355AD3C STR W1, [X0 + 0x94]
	0x0355AD40 RET
	0x0355AD44 SUB X31, X31, 0x110
	0x0355AD48 STP X29, X30, [X31 + 0xB0]
	0x0355AD4C STP X28, X27, [X31 + 0xC0]
	0x0355AD50 STP X26, X25, [X31 + 0xD0]
	0x0355AD54 STP X24, X23, [X31 + 0xE0]
	0x0355AD58 STP X22, X21, [X31 + 0xF0]
	0x0355AD5C STP X20, X19, [X31 + 0x100]
	0x0355AD60 STR W4, [X31 + 0x7C]
	0x0355AD64 STRB W5, [X31 + 0x78]
	0x0355AD68 ADRP X26, 0xE85000
	0x0355AD6C ADRP X27, 0xB9F000
	0x0355AD70 ADRP X29, 0xBDB000
	0x0355AD74 ADRP X28, 0xB9A000
	0x0355AD78 LDR X27, [X27 + 0xCC0]
	0x0355AD7C LDR X29, [X29 + 0x6C0]
	0x0355AD80 LDRB W8, [X26 + 0xDAD]
	0x0355AD84 LDR X28, [X28 + 0xE58]
	0x0355AD88 MOV X22, X6
	0x0355AD8C MOV W23, W5
	0x0355AD90 MOV W24, W4
	0x0355AD94 MOV W21, W3
	0x0355AD98 MOV X20, X2
	0x0355AD9C MOV X25, X1
	0x0355ADA0 MOV X19, X0
	0x0355ADA4 TBNZ X8, 0x0, 0x355AEAC
	0x0355ADA8 ADRP X0, 0xB99000
	0x0355ADAC LDR X0, [X0 + 0x9C8]
	0x0355ADB0 BL 0x1C16CF4
	0x0355ADB4 ADRP X0, 0xB99000
	0x0355ADB8 LDR X0, [X0 + 0x618]
	0x0355ADBC BL 0x1C16CF4
	0x0355ADC0 ADRP X0, 0xBDB000
	0x0355ADC4 LDR X0, [X0 + 0x6C8]
	0x0355ADC8 BL 0x1C16CF4
	0x0355ADCC ADRP X0, 0xBDB000
	0x0355ADD0 LDR X0, [X0 + 0x6D0]
	0x0355ADD4 BL 0x1C16CF4
	0x0355ADD8 ADRP X0, 0xBDB000
	0x0355ADDC LDR X0, [X0 + 0x6D8]
	0x0355ADE0 BL 0x1C16CF4
	0x0355ADE4 ADRP X0, 0xBDB000
	0x0355ADE8 LDR X0, [X0 + 0x6C0]
	0x0355ADEC BL 0x1C16CF4
	0x0355ADF0 ADRP X0, 0xBDB000
	0x0355ADF4 LDR X0, [X0 + 0x468]
	0x0355ADF8 BL 0x1C16CF4
	0x0355ADFC ADRP X0, 0xB9E000
	0x0355AE00 LDR X0, [X0 + 0x348]
	0x0355AE04 BL 0x1C16CF4
	0x0355AE08 ADRP X0, 0xB9A000
	0x0355AE0C LDR X0, [X0 + 0xE58]
	0x0355AE10 BL 0x1C16CF4
	0x0355AE14 ADRP X0, 0xBDB000
	0x0355AE18 LDR X0, [X0 + 0x6E0]
	0x0355AE1C BL 0x1C16CF4
	0x0355AE20 ADRP X0, 0xB9F000
	0x0355AE24 LDR X0, [X0 + 0xCC0]
	0x0355AE28 BL 0x1C16CF4
	0x0355AE2C ADRP X0, 0xBDB000
	0x0355AE30 LDR X0, [X0 + 0x510]
	0x0355AE34 BL 0x1C16CF4
	0x0355AE38 ADRP X0, 0xB99000
	0x0355AE3C LDR X0, [X0 + 0xAC8]
	0x0355AE40 BL 0x1C16CF4
	0x0355AE44 ADRP X0, 0xBC5000
	0x0355AE48 LDR X0, [X0 + 0x1D0]
	0x0355AE4C BL 0x1C16CF4
	0x0355AE50 ADRP X0, 0xBC5000
	0x0355AE54 LDR X0, [X0 + 0x1D8]
	0x0355AE58 BL 0x1C16CF4
	0x0355AE5C ADRP X0, 0xBDB000
	0x0355AE60 LDR X0, [X0 + 0x538]
	0x0355AE64 BL 0x1C16CF4
	0x0355AE68 ADRP X0, 0xBDB000
	0x0355AE6C LDR X0, [X0 + 0x548]
	0x0355AE70 BL 0x1C16CF4
	0x0355AE74 ADRP X0, 0xBDB000
	0x0355AE78 LDR X0, [X0 + 0x6E8]
	0x0355AE7C BL 0x1C16CF4
	0x0355AE80 ADRP X0, 0xBDB000
	0x0355AE84 LDR X0, [X0 + 0x6F0]
	0x0355AE88 BL 0x1C16CF4
	0x0355AE8C ADRP X0, 0xBDB000
	0x0355AE90 LDR X0, [X0 + 0x6F8]
	0x0355AE94 BL 0x1C16CF4
	0x0355AE98 ADRP X0, 0xBDB000
	0x0355AE9C LDR X0, [X0 + 0x700]
	0x0355AEA0 BL 0x1C16CF4
	0x0355AEA4 MOVZ W8, 0x1
	0x0355AEA8 STRB W8, [X26 + 0xDAD]
	0x0355AEAC LDR X0, [X27]
	0x0355AEB0 BL 0x1C16F10
	0x0355AEB4 MOV X1, X31
	0x0355AEB8 MOV X26, X0
	0x0355AEBC BL 0x33BDD8C
	0x0355AEC0 STR X26, [X19 + 0xA0]
	0x0355AEC4 ADRP X8, 0xBDB000
	0x0355AEC8 LDR X8, [X8 + 0x510]
	0x0355AECC LDR X0, [X8]
	0x0355AED0 BL 0x1C16F10
	0x0355AED4 MOV X1, X31
	0x0355AED8 MOV X26, X0
	0x0355AEDC BL 0x33BDD8C
	0x0355AEE0 MOVZ W8, 0x3E8
	0x0355AEE4 STR W8, [X26 + 0x20]
	0x0355AEE8 STR X26, [X19 + 0xC0]
	0x0355AEEC LDR X0, [X29]
	0x0355AEF0 MOVZ W1, 0x100
	0x0355AEF4 BL 0x1C16D6C
	0x0355AEF8 STR X0, [X19 + 0xD0]
	0x0355AEFC LDR X0, [X28]
	0x0355AF00 MOVZ W1, 0x100
	0x0355AF04 BL 0x1C16D6C
	0x0355AF08 MOVN W8, 0x0
	0x0355AF0C STR X0, [X19 + 0xD8]
	0x0355AF10 STR W8, [X19 + 0xF0]
	0x0355AF14 ADRP X8, 0xBDB000
	0x0355AF18 LDR X8, [X8 + 0x6D0]
	0x0355AF1C LDR X0, [X8]
	0x0355AF20 BL 0x1C16F10
	0x0355AF24 ADRP X8, 0xBDB000
	0x0355AF28 LDR X8, [X8 + 0x6C8]
	0x0355AF2C MOV X26, X0
	0x0355AF30 LDR X1, [X8]
	0x0355AF34 BL 0x29902A0
	0x0355AF38 STR X26, [X19 + 0xF8]
	0x0355AF3C ADRP X8, 0xBDB000
	0x0355AF40 LDR X8, [X8 + 0x6D8]
	0x0355AF44 MOVZ W1, 0xA
	0x0355AF48 LDR X0, [X8]
	0x0355AF4C BL 0x1C16D6C
	0x0355AF50 STR X0, [X19 + 0x108]
	0x0355AF54 LDR X0, [X29]
	0x0355AF58 MOVZ W1, 0x100
	0x0355AF5C BL 0x1C16D6C
	0x0355AF60 STR X0, [X19 + 0x110]
	0x0355AF64 LDR X0, [X28]
	0x0355AF68 MOVZ W1, 0x100
	0x0355AF6C BL 0x1C16D6C
	0x0355AF70 STR X0, [X19 + 0x118]
	0x0355AF74 ADRP X8, 0xB99000
	0x0355AF78 LDR X8, [X8 + 0x618]
	0x0355AF7C MOVZ W1, 0x100
	0x0355AF80 LDR X0, [X8]
	0x0355AF84 BL 0x1C16D6C
	0x0355AF88 STR X0, [X19 + 0x120]
	0x0355AF8C MOVZ W8, 0x7F
	0x0355AF90 MOV X0, X19
	0x0355AF94 MOV X1, X31
	0x0355AF98 STRB W8, [X19 + 0x128]
	0x0355AF9C BL 0x33BDD8C
	0x0355AFA0 ADD X0, X19, 0x40
	0x0355AFA4 MOVZ W2, 0x50
	0x0355AFA8 MOV X1, X20
	0x0355AFAC BL 0x3EB1B30
	0x0355AFB0 LDR X8, [X20 + 0x48]
	0x0355AFB4 STR X25, [X19 + 0xC8]
	0x0355AFB8 STR X8, [X19 + 0xB8]
	0x0355AFBC CBZ X25, 0x355B404
	0x0355AFC0 LDRB W8, [X25 + 0x20]
	0x0355AFC4 STR W21, [X19 + 0x90]
	0x0355AFC8 STR W24, [X19 + 0x98]
	0x0355AFCC STRB W23, [X19 + 0x9C]
	0x0355AFD0 STRB W8, [X19 + 0x9D]
	0x0355AFD4 LDP V1, V0, [X22 + 0x10]
	0x0355AFD8 LDR V2, [X22]
	0x0355AFDC ADRP X8, 0xB99000
	0x0355AFE0 LDR X8, [X8 + 0xAC8]
	0x0355AFE4 STP V1, V0, [X19 + 0x20]
	0x0355AFE8 STR V2, [X19 + 0x1]
	0x0355AFEC MOVZ W1, 0x6
	0x0355AFF0 LDR X0, [X8]
	0x0355AFF4 BL 0x1C16D6C
	0x0355AFF8 CBZ X0, 0x355B404
	0x0355AFFC LDR W8, [X0 + 0x18]
	0x0355B000 MOV X22, X0
	0x0355B004 CBZ W8, 0x355B400
	0x0355B008 ADRP X8, 0xBDA000
	0x0355B00C LDR X8, [X8 + 0x538]
	0x0355B010 ADD X0, X31, 0x78
	0x0355B014 MOV X1, X31
	0x0355B018 LDR X8, [X8]
	0x0355B01C STR X8, [X22 + 0x20]
	0x0355B020 BL 0x3319BB4
	0x0355B024 LDR W8, [X22 + 0x18]
	0x0355B028 CMP W8, 0x1
	0x0355B02C B.LS 0x355B400
	0x0355B030 CMP W8, 0x2
	0x0355B034 STR X0, [X22 + 0x28]
	0x0355B038 B.EQ 0x355B400
	0x0355B03C ADRP X8, 0xBDA000
	0x0355B040 LDR X8, [X8 + 0x548]
	0x0355B044 LDR X8, [X8]
	0x0355B048 STR X8, [X22 + 0x30]
	0x0355B04C LDR X0, [X19 + 0xC8]
	0x0355B050 CBZ X0, 0x355B404
	0x0355B054 MOV W1, W21
	0x0355B058 BL 0x3558864
	0x0355B05C LDR W8, [X22 + 0x18]
	0x0355B060 CMP W8, 0x3
	0x0355B064 B.LS 0x355B400
	0x0355B068 CMP W8, 0x4
	0x0355B06C STR X0, [X22 + 0x38]
	0x0355B070 B.EQ 0x355B400
	0x0355B074 ADRP X8, 0xBDA000
	0x0355B078 LDR X8, [X8 + 0x6F8]
	0x0355B07C ADD X0, X31, 0x7C
	0x0355B080 MOV X1, X31
	0x0355B084 LDR X8, [X8]
	0x0355B088 STR X8, [X22 + 0x40]
	0x0355B08C BL 0x337B6E0
	0x0355B090 LDR W8, [X22 + 0x18]
	0x0355B094 CMP W8, 0x5
	0x0355B098 B.LS 0x355B400
	0x0355B09C STR X0, [X22 + 0x48]
	0x0355B0A0 MOV X0, X22
	0x0355B0A4 MOV X1, X31
	0x0355B0A8 BL 0x32278CC
	0x0355B0AC LDR X8, [X19 + 0x48]
	0x0355B0B0 STR X0, [X19 + 0xB0]
	0x0355B0B4 CBZ X8, 0x355B144
	0x0355B0B8 LDRB W8, [X19 + 0x9D]
	0x0355B0BC CBZ W8, 0x355B210
	0x0355B0C0 ADRP X8, 0xBC4000
	0x0355B0C4 LDR X8, [X8 + 0x1D0]
	0x0355B0C8 LDR X0, [X8]
	0x0355B0CC BL 0x1C16F10
	0x0355B0D0 ADRP X8, 0xBDA000
	0x0355B0D4 LDR X8, [X8 + 0x6E0]
	0x0355B0D8 MOV X1, X19
	0x0355B0DC MOV X3, X31
	0x0355B0E0 MOV X21, X0
	0x0355B0E4 LDR X2, [X8]
	0x0355B0E8 BL 0x33DD08C
	0x0355B0EC ADRP X8, 0xBC4000
	0x0355B0F0 LDR X8, [X8 + 0x1D8]
	0x0355B0F4 LDR X0, [X8]
	0x0355B0F8 BL 0x1C16F10
	0x0355B0FC MOV X1, X21
	0x0355B100 MOV X2, X31
	0x0355B104 MOV X20, X0
	0x0355B108 BL 0x33E67F0
	0x0355B10C ADRP X8, 0xBDA000
	0x0355B110 LDR X1, [X19 + 0xB0]
	0x0355B114 LDR X8, [X8 + 0x6F0]
	0x0355B118 MOV X2, X31
	0x0355B11C LDR X0, [X8]
	0x0355B120 BL 0x321B938
	0x0355B124 MOV X1, X0
	0x0355B128 MOV X0, X20
	0x0355B12C BL 0x3557598
	0x0355B130 CBZ X20, 0x355B404
	0x0355B134 MOV X0, X20
	0x0355B138 MOV X1, X31
	0x0355B13C BL 0x33E6A6C
	0x0355B140 B 0x355B3E0
	0x0355B144 ADRP X8, 0xBDA000
	0x0355B148 LDR X0, [X19 + 0xB8]
	0x0355B14C LDR X8, [X8 + 0x6E8]
	0x0355B150 MOV X2, X31
	0x0355B154 LDR X1, [X8]
	0x0355B158 BL 0x321B938
	0x0355B15C LDR X9, [X19 + 0xC8]
	0x0355B160 CBZ X9, 0x355B404
	0x0355B164 ADRP X8, 0xB98000
	0x0355B168 LDR X8, [X8 + 0x9C8]
	0x0355B16C LDR X21, [X9 + 0x18]
	0x0355B170 MOV X20, X0
	0x0355B174 LDR X22, [X8]
	0x0355B178 LDR X8, [X22 + 0x38]
	0x0355B17C CBNZ X8, 0x355B18C
	0x0355B180 MOV X0, X22
	0x0355B184 BL 0x1C5C6E0
	0x0355B188 LDR X8, [X22 + 0x38]
	0x0355B18C LDR X0, [X8 + 0x10]
	0x0355B190 LDRB W8, [X0 + 0x135]
	0x0355B194 TBNZ X8, 0x0, 0x355B19C
	0x0355B198 BL 0x1C5C684
	0x0355B19C LDR W8, [X0 + 0xE0]
	0x0355B1A0 CBNZ W8, 0x355B1A8
	0x0355B1A4 BL 0x1C16DFC
	0x0355B1A8 LDR X8, [X22 + 0x38]
	0x0355B1AC LDR X0, [X8 + 0x10]

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+208], X29
	003 Move [X31+216], X30
	004 Move [X31+224], X28
	005 Move [X31+232], X27
	006 Move [X31+240], X26
	007 Move [X31+248], X25
	008 Move [X31+256], X24
	009 Move [X31+264], X23
	010 Move [X31+272], X22
	011 Move [X31+280], X21
	012 Move [X31+288], X20
	013 Move [X31+296], X19
	014 Move X20, 0xE86000
	015 Move W8, [X20+3496]
	016 Move W25, W7
	017 Move X23, X5
	018 Move W26, W4
	019 Move W27, W3
	020 Move X21, X2
	021 Move X22, X1
	022 Move X19, X0
	023 Move [X31+68], W6
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {81}
	028 Move X0, 0xBC5000
	029 Move X0, [X0+2952]
	030 Call 0x1C17CF4
	031 Move X0, 0xBCD000
	032 Move X0, [X0+3312]
	033 Call 0x1C17CF4
	034 Move X0, 0xBCD000
	035 Move X0, [X0+3320]
	036 Call 0x1C17CF4
	037 Move X0, 0xBCD000
	038 Move X0, [X0+3328]
	039 Call 0x1C17CF4
	040 Move X0, 0xBC2000
	041 Move X0, [X0+1456]
	042 Call 0x1C17CF4
	043 Move X0, 0xB9A000
	044 Move X0, [X0+2504]
	045 Call 0x1C17CF4
	046 Move X0, 0xBDC000
	047 Move X0, [X0+1000]
	048 Call 0x1C17CF4
	049 Move X0, 0xB9F000
	050 Move X0, [X0+840]
	051 Call 0x1C17CF4
	052 Move X0, 0xBDC000
	053 Move X0, [X0+1232]
	054 Call 0x1C17CF4
	055 Move X0, 0xB9A000
	056 Move X0, [X0+2760]
	057 Call 0x1C17CF4
	058 Move X0, 0xBDC000
	059 Move X0, [X0+1592]
	060 Call 0x1C17CF4
	061 Move X0, 0xBDC000
	062 Move X0, [X0+1600]
	063 Call 0x1C17CF4
	064 Move X0, 0xB9B000
	065 Move X0, [X0+680]
	066 Call 0x1C17CF4
	067 Move X0, 0xBDC000
	068 Move X0, [X0+1608]
	069 Call 0x1C17CF4
	070 Move X0, 0xBDC000
	071 Move X0, [X0+1016]
	072 Call 0x1C17CF4
	073 Move X0, 0xBDC000
	074 Move X0, [X0+1616]
	075 Call 0x1C17CF4
	076 Move X0, 0xBDC000
	077 Move X0, [X0+1624]
	078 Call 0x1C17CF4
	079 Move W8, 1
	080 Move [X20+3496], W8
	081 Move [X31+176], W31
	082 Move [X31+179], W31
	083 Move [X31+168], W31
	084 Move [X31+172], W31
	085 Move [X31+164], W31
	086 Move [X31+160], W31
	087 Move [X31+156], W31
	088 Compare X23, 0
	089 JumpIfEqual {97}
	090 Move TEMP, X26
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {97}
	094 Move W8, [X23+24]
	095 Compare W8, 0
	096 JumpIfEqual {386}
	097 Move W9, [X19+37]
	098 And W8, W26, 1
	099 Move X28, X21
	100 ShiftRight X28, 32
	101 And X28, X28, 0x7FFFFFFF
	102 Move [X31+56], W8
	103 And W8, W25, 1
	104 Move [X31+60], W8
	105 Move [X31+64], W9
	106 Move TEMP, X27
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfEqual {341}
	110 Move W8, [X19+38]
	111 Compare W8, 0
	112 JumpIfEqual {341}
	113 Move X8, [X19+144]
	114 Compare X8, 0
	115 JumpIfEqual {591}
	116 Move X25, [X8+16]
	117 Move W8, [X31+176]
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 Move W10, [X31+168]
	120 Move W11, [X31+172]
	121 Move [X31+148], W8
	122 Move [X31+151], W9
	123 Move [X31+140], W10
	124 Move [X31+144], W11
	125 Compare X25, 0
	126 JumpIfEqual {591}
	127 Move W8, [X31+148]
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 Move W10, [X31+140]
	130 Move W11, [X31+144]
	131 Move [X31+132], W8
	132 Move [X31+135], W9
	133 Move [X31+124], W10
	134 Move [X31+128], W11
	135 Move X10, 0xBDC000
	136 Move X8, [X25]
	137 Move X10, [X10+1232]
	138 NotImplemented "Instruction LDRH not yet implemented."
	139 Move X1, [X10]
	140 Compare X9, 0
	141 JumpIfEqual {148}
	142 Move X10, [X8+176]
	143 Add X10, X10, 8
	144 NotImplemented "Instruction LDUR not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Subtract X9, X9, 1
	147 Add X10, X10, 16
	148 Move W2, 6
	149 Move X0, X25
	150 Call 0x1C5D788
	151 Move W9, [X10]
	152 Add W9, W9, 6
	153 Add X8, X8, W9
	154 Add X0, X8, 312
	155 Move W11, [X31+68]
	156 Move X8, [X0]
	157 Move W9, [X31+56]
	158 NotImplemented "Instruction LDUR not yet implemented."
	159 Move [X31+200], W11
	160 Move W11, [X31+60]
	161 Move [X31+184], W9
	162 Move W9, [X31+132]
	163 Move W12, [X31+128]
	164 Move [X31+201], W11
	165 Move W11, [X31+64]
	166 Move [X31+192], X23
	167 Move [X31+185], W9
	168 Move [X31+188], W10
	169 Move [X31+202], W11
	170 Move W11, [X31+124]
	171 Move [X31+207], W12
	172 Add X1, X31, 184
	173 Move [X31+203], W11
	174 Move X2, [X0+8]
	175 Move X0, X25
	176 NotImplemented "Instruction BLR not yet implemented."
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X8, 0xBC2000
	179 Move X8, [X8+1456]
	180 Move W25, W0
	181 Move X0, [X8]
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {186}
	185 Call 0x1C17DFC
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move [X31+48], X23
	188 Move X8, 0xBC2000
	189 Move X8, [X8+1456]
	190 Move X0, [X8]
	191 Move W8, [X0+224]
	192 Compare W8, 0
	193 JumpIfNotEqual {195}
	194 Call 0x1C17DFC
	195 Add W8, W25, W28
	196 NotImplemented "Instruction SDIV not yet implemented."
	197 And W31, W8, 255
	198 Move [X31+24], X28
	199 Move [X31+164], W8
	200 Or W9, W27, 16
	201 Move [X31+40], W27
	202 Move [X31+44], W9
	203 Add W10, W25, W21
	204 Add W9, W25, 1
	205 Move [X31+20], W9
	206 Add X9, X31, 72
	207 Move [X31+36], W10
	208 Add X10, X22, W10
	209 Move W23, W31
	210 Or X28, X9, 1
	211 Add X20, X9, 19
	212 Add X24, X10, 32
	213 Move W9, [X31+44]
	214 And W8, W8, 255
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Subtract W8, W8, 1
	217 NotImplemented "Instruction CSEL not yet implemented."
	218 Or W10, W9, 32
	219 NotImplemented "Instruction CMP not yet implemented."
	220 NotImplemented "Instruction CSEL not yet implemented."
	221 Compare W23, 0
	222 JumpIfEqual {235}
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Move X8, 0xBC2000
	225 Move X8, [X8+1456]
	226 Move X0, [X8]
	227 Move W8, [X0+224]
	228 Compare W8, 0
	229 JumpIfNotEqual {231}
	230 Call 0x1C17DFC
	231 Move X9, [X31+24]
	232 Move W29, W31
	233 NotImplemented "Instruction SDIV not yet implemented."
	234 NotImplemented "Instruction MSUB not yet implemented."
	235 Move X8, 0xBC2000
	236 Move X8, [X8+1456]
	237 Move X0, [X8]
	238 Move W8, [X0+224]
	239 Compare W8, 0
	240 JumpIfNotEqual {242}
	241 Call 0x1C17DFC
	242 Compare X22, 0
	243 JumpIfEqual {591}
	244 Move W8, [X22+24]
	245 Move W9, [X31+36]
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Move W8, [X31+164]
	248 Move W29, [X24]
	249 Move W27, [X31+20]
	250 Move [X24], W8
	251 Move W29, W31
	252 Move W27, W25
	253 Move X8, 0xBC2000
	254 Move X8, [X8+1456]
	255 Move X0, [X8]
	256 Move W8, [X0+224]
	257 Compare W8, 0
	258 JumpIfNotEqual {260}
	259 Call 0x1C17DFC
	260 Move X8, 0xBC5000
	261 Move X8, [X8+2952]
	262 Add X0, X31, 184
	263 Move X1, X22
	264 Move W2, W21
	265 Move X4, [X8]
	266 Move W3, W27
	267 Move [X31+184], X31
	268 Move [X31+192], X31
	269 Call 0x2B88BB0, X0, X1, X2, X3
	270 Move W8, [X31+56]
	271 Move W9, [X31+176]
	272 Move X1, [X31+184]
	273 Move X2, [X31+192]
	274 Move W10, [X31+168]
	275 Move [X31+72], W8
	276 NotImplemented "Instruction LDUR not yet implemented."
	277 Move W11, [X31+172]
	278 Add X4, X31, 72
	279 Move X0, X19
	280 Move [X28+3], W8
	281 Move X8, [X31+48]
	282 Move [X28], W9
	283 Move W3, W26
	284 Move [X31+80], X8
	285 Move W8, [X31+68]
	286 Move [X31+88], W8
	287 Move W8, [X31+60]
	288 Move [X31+89], W8
	289 Move W8, [X31+64]
	290 Move [X31+90], W8
	291 Move [X20+4], W11
	292 Move [X20], W10
	293 Call LocalVoice.sendFrameEvent, X0, X1, X2, X3
	294 Compare W23, 0
	295 JumpIfNotEqual {309}
	296 Move X8, 0xBC2000
	297 Move X8, [X8+1456]
	298 Move X0, [X8]
	299 Move W8, [X0+224]
	300 Compare W8, 0
	301 JumpIfNotEqual {303}
	302 Call 0x1C17DFC
	303 Compare X22, 0
	304 JumpIfEqual {591}
	305 Move W8, [X22+24]
	306 Move W9, [X31+36]
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Move [X24], W29
	309 Move W8, [X19+28]
	310 Move W27, [X31+40]
	311 Add W23, W23, 1
	312 Add W21, W21, W25
	313 Move [X31+160], W8
	314 Add W8, W8, 1
	315 Move [X19+28], W8
	316 Move W8, [X31+164]
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X8, [X19+144]
	319 Compare X8, 0
	320 JumpIfEqual {591}
	321 Move X21, [X8+24]
	322 Compare X21, 0
	323 JumpIfEqual {591}
	324 Move X24, 0xB9F000
	325 Move X8, [X21]
	326 Move X24, [X24+840]
	327 Move X28, [X31+24]
	328 NotImplemented "Instruction LDRH not yet implemented."
	329 Move X1, [X24]
	330 Compare X9, 0
	331 JumpIfEqual {338}
	332 Move X10, [X8+176]
	333 Add X10, X10, 8
	334 NotImplemented "Instruction LDUR not yet implemented."
	335 NotImplemented "Instruction CMP not yet implemented."
	336 Subtract X9, X9, 1
	337 Add X10, X10, 16
	338 Move X0, X21
	339 Move W2, W31
	340 Call 0x1C5D788
	341 Move W10, [X31+68]
	342 Move W8, [X31+56]
	343 NotImplemented "Instruction LDUR not yet implemented."
	344 Move W11, [X31+172]
	345 Move [X31+112], W10
	346 Move W10, [X31+60]
	347 Move [X31+96], W8
	348 Move W8, [X31+176]
	349 Add X4, X31, 96
	350 Move [X31+113], W10
	351 Move W10, [X31+64]
	352 Move X0, X19
	353 Move X1, X22
	354 Move X2, X21
	355 Move [X31+114], W10
	356 Move W10, [X31+168]
	357 Move W3, W27
	358 Move [X31+104], X23
	359 Move [X31+97], W8
	360 Move [X31+100], W9
	361 Move [X31+115], W10
	362 Move [X31+119], W11
	363 Call LocalVoice.sendFrameEvent, X0, X1, X2, X3
	364 Move W8, [X19+20]
	365 Move [X31+160], W8
	366 Add W8, W8, 1
	367 Move [X19+20], W8
	368 Move X8, 0xBC2000
	369 Move X8, [X8+1456]
	370 Move W20, [X19+32]
	371 Move X0, [X8]
	372 Move W8, [X0+224]
	373 Compare W8, 0
	374 JumpIfNotEqual {376}
	375 Call 0x1C17DFC
	376 Add W8, W20, W28
	377 Move [X19+32], W8
	378 Move TEMP, X27
	379 And TEMP, TEMP, 1
	380 Compare TEMP, 1
	381 JumpIfEqual {386}
	382 NotImplemented "Instruction CMP not yet implemented."
	383 Move X0, X31
	384 Call Environment.get_TickCount
	385 Move [X19+216], W0
	386 Move X20, [X31+288]
	387 Move X19, [X31+296]
	388 Move X22, [X31+272]
	389 Move X21, [X31+280]
	390 Move X24, [X31+256]
	391 Move X23, [X31+264]
	392 Move X26, [X31+240]
	393 Move X25, [X31+248]
	394 Move X28, [X31+224]
	395 Move X27, [X31+232]
	396 Move X29, [X31+208]
	397 Move X30, [X31+216]
	398 Add X31, X31, 304
	399 Return 
	400 NotImplemented "Instruction LDRSW not yet implemented."
	401 Add X8, X8, X9
	402 Add X0, X8, 312
	403 Move X8, [X0]
	404 Move X1, [X0+8]
	405 Move X0, X21
	406 NotImplemented "Instruction BLR not yet implemented."
	407 NotImplemented "Instruction CMP not yet implemented."
	408 Move X8, [X19+144]
	409 Compare X8, 0
	410 JumpIfEqual {591}
	411 Move X21, [X8+24]
	412 Move X8, 0xB9A000
	413 Move X8, [X8+2760]
	414 Move W1, 15
	415 Move X0, [X8]
	416 Call 0x1C17D6C
	417 Compare X0, 0
	418 JumpIfEqual {591}
	419 Move W8, [X0+24]
	420 Move X22, X0
	421 Compare W8, 0
	422 JumpIfEqual {590}
	423 Move X9, [X19+208]
	424 NotImplemented "Instruction CMP not yet implemented."
	425 Move [X22+32], X9
	426 Move X8, 0xBDC000
	427 Move X8, [X8+1608]
	428 Add X23, X19, 136
	429 Move X0, X23
	430 Move X1, X31
	431 Move X8, [X8]
	432 Move [X22+40], X8
	433 Call Byte.ToString, X0
	434 Move W8, [X22+24]
	435 NotImplemented "Instruction CMP not yet implemented."
	436 NotImplemented "Instruction CMP not yet implemented."
	437 Move [X22+48], X0
	438 Move X8, 0xBDC000
	439 Move X8, [X8+1592]
	440 Add X0, X31, 160
	441 Move X1, X31
	442 Move X8, [X8]
	443 Move [X22+56], X8
	444 Move W8, [X19+20]
	445 Move [X31+160], W8
	446 Call Int32.ToString, X0
	447 Move W8, [X22+24]
	448 NotImplemented "Instruction CMP not yet implemented."
	449 NotImplemented "Instruction CMP not yet implemented."
	450 Move [X22+64], X0
	451 Move X8, 0xBDC000
	452 Move X8, [X8+1016]
	453 Add X0, X31, 164
	454 Move X1, X31
	455 Move X8, [X8]
	456 Move [X22+72], X8
	457 Call Byte.ToString, X0
	458 Move W8, [X22+24]
	459 NotImplemented "Instruction CMP not yet implemented."
	460 NotImplemented "Instruction CMP not yet implemented."
	461 Move [X22+80], X0
	462 Move X8, 0xBDC000
	463 Move X8, [X8+1600]
	464 Add X0, X31, 156
	465 Move X1, X31
	466 Move X8, [X8]
	467 Move [X22+88], X8
	468 Move W8, [X23]
	469 Move W9, [X31+164]
	470 Subtract W8, W8, W9
	471 Move [X31+156], W8
	472 Call Byte.ToString, X0
	473 Move W8, [X22+24]
	474 NotImplemented "Instruction CMP not yet implemented."
	475 NotImplemented "Instruction CMP not yet implemented."
	476 Move [X22+96], X0
	477 Move X8, 0xB9B000
	478 Move X8, [X8+680]
	479 Move X0, X23
	480 Move X1, X31
	481 Move X8, [X8]
	482 Move [X22+104], X8
	483 Call Byte.ToString, X0
	484 Move W8, [X22+24]
	485 NotImplemented "Instruction CMP not yet implemented."
	486 NotImplemented "Instruction CMP not yet implemented."
	487 Move [X22+112], X0
	488 Move X8, 0xBDB000
	489 Move X8, [X8+1624]
	490 Move X8, [X8]
	491 Move [X22+120], X8
	492 Move X8, 0xBC1000
	493 Move X8, [X8+1456]
	494 Move X0, [X8]
	495 Move W8, [X0+224]
	496 Compare W8, 0
	497 JumpIfNotEqual {499}
	498 Call 0x1C17DFC
	499 Add X0, X31, 160
	500 Move X1, X31
	501 Move [X31+160], W28
	502 Call Int32.ToString, X0
	503 Move W8, [X22+24]
	504 NotImplemented "Instruction CMP not yet implemented."
	505 NotImplemented "Instruction CMP not yet implemented."
	506 Move [X22+128], X0
	507 Move X8, 0xBDB000
	508 Move X8, [X8+1616]
	509 Move X9, 0xBDB000
	510 Add X0, X31, 184
	511 Move X1, X31
	512 Move X8, [X8]
	513 Move X9, [X9+1000]
	514 Move [X22+136], X8
	515 Move X8, [X9]
	516 Move TEMP, 0
	517 Not TEMP
	518 Move X9, TEMP
	519 Move [X31+200], W27
	520 Move [X31+184], X8
	521 Move [X31+192], X9
	522 Call Enum.ToString, X0
	523 Move W8, [X22+24]
	524 NotImplemented "Instruction CMP not yet implemented."
	525 Move [X22+144], X0
	526 Move X0, X22
	527 Move X1, X31
	528 Call String.Concat, X0
	529 Move X8, 0xB99000
	530 Move X8, [X8+2504]
	531 Move X22, X0
	532 Move X23, [X8]
	533 Move X8, [X23+56]
	534 Compare X8, 0
	535 JumpIfNotEqual {539}
	536 Move X0, X23
	537 Call 0x1C5D6E0
	538 Move X8, [X23+56]
	539 Move X0, [X8+16]
	540 Move W8, [X0+309]
	541 Move TEMP, X8
	542 And TEMP, TEMP, 1
	543 Compare TEMP, 1
	544 JumpIfEqual {546}
	545 Call 0x1C5D684
	546 Move W8, [X0+224]
	547 Compare W8, 0
	548 JumpIfNotEqual {550}
	549 Call 0x1C17DFC
	550 Move X8, [X23+56]
	551 Move X0, [X8+16]
	552 Move W8, [X0+309]
	553 Move TEMP, X8
	554 And TEMP, TEMP, 1
	555 Compare TEMP, 1
	556 JumpIfEqual {558}
	557 Call 0x1C5D684
	558 Compare X21, 0
	559 JumpIfEqual {591}
	560 Move X9, [X0+184]
	561 Move X8, [X21]
	562 Move X1, [X24]
	563 Move X23, [X9]
	564 NotImplemented "Instruction LDRH not yet implemented."
	565 Compare X9, 0
	566 JumpIfEqual {573}
	567 Move X10, [X8+176]
	568 Add X10, X10, 8
	569 NotImplemented "Instruction LDUR not yet implemented."
	570 NotImplemented "Instruction CMP not yet implemented."
	571 Subtract X9, X9, 1
	572 Add X10, X10, 16
	573 Move W2, 1
	574 Move X0, X21
	575 Call 0x1C5D788
	576 Move W9, [X10]
	577 Add W9, W9, 1
	578 Add X8, X8, W9
	579 Add X0, X8, 312
	580 Move X8, [X0]
	581 Move X4, [X0+8]
	582 Move W1, 5
	583 Move X0, X21
	584 Move X2, X22
	585 Move X3, X23
	586 NotImplemented "Instruction BLR not yet implemented."
	587 Move W8, [X19+24]
	588 Add W8, W8, 1
	589 Move [X19+24], W8
	590 Call 0x1C17F28
	591 Call 0x1C17F20

Method: System.Void resetFEC()

Disassembly:
	0x0355B77C LDRH W9, [X8 + 0x12E]
	0x0355B780 LDR X1, [X10]
	0x0355B784 CBZ X9, 0x355B7A8
	0x0355B788 LDR X10, [X8 + 0xB0]
	0x0355B78C ADD X10, X10, 0x8
	0x0355B790 LDUR X11, [X10 - 0x8]
	0x0355B794 CMP X11, X1
	0x0355B798 B.EQ 0x355B8A4
	0x0355B79C SUBS X9, X9, 0x1
	0x0355B7A0 ADD X10, X10, 0x10
	0x0355B7A4 B.NE 0x355B790
	0x0355B7A8 MOVZ W2, 0x1
	0x0355B7AC MOV X0, X21

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+240]
	004 Move X19, X0
	005 Move X0, [X0+224]
	006 Move W1, W31
	007 Add W2, W8, 5
	008 Move X3, X31
	009 Call Array.Clear, X0, X1, X2
	010 NotImplemented "Instruction STRH not yet implemented."
	011 Move [X19+236], X31
	012 Move [X19+244], W31
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return 

Method: System.Void sendFrameEvent(System.ArraySegment`1<System.Byte> data, Photon.Voice.FrameFlags flags, Photon.Voice.SendFrameParams sendFramePar)

Disassembly:
	0x0355B1D4 LDRH W9, [X8 + 0x12E]
	0x0355B1D8 LDR X1, [X10]
	0x0355B1DC CBZ X9, 0x355B200
	0x0355B1E0 LDR X10, [X8 + 0xB0]
	0x0355B1E4 ADD X10, X10, 0x8
	0x0355B1E8 LDUR X11, [X10 - 0x8]
	0x0355B1EC CMP X11, X1
	0x0355B1F0 B.EQ 0x355B2E0
	0x0355B1F4 SUBS X9, X9, 0x1
	0x0355B1F8 ADD X10, X10, 0x10
	0x0355B1FC B.NE 0x355B1E8
	0x0355B200 MOVZ W2, 0x1
	0x0355B204 MOV X0, X21
	0x0355B208 BL 0x1C5C788
	0x0355B20C B 0x355B2F0
	0x0355B210 LDR X8, [X19 + 0xC8]
	0x0355B214 CBZ X8, 0x355B404
	0x0355B218 LDR X21, [X8 + 0x18]
	0x0355B21C ADRP X8, 0xBDA000
	0x0355B220 LDR X0, [X19 + 0xB8]
	0x0355B224 LDR X8, [X8 + 0x700]
	0x0355B228 MOV X2, X31
	0x0355B22C LDR X1, [X8]
	0x0355B230 BL 0x321B938
	0x0355B234 ADRP X8, 0xB98000
	0x0355B238 LDR X8, [X8 + 0x9C8]
	0x0355B23C MOV X22, X0
	0x0355B240 LDR X23, [X8]
	0x0355B244 LDR X8, [X23 + 0x38]
	0x0355B248 CBNZ X8, 0x355B258
	0x0355B24C MOV X0, X23
	0x0355B250 BL 0x1C5C6E0
	0x0355B254 LDR X8, [X23 + 0x38]
	0x0355B258 LDR X0, [X8 + 0x10]
	0x0355B25C LDRB W8, [X0 + 0x135]
	0x0355B260 TBNZ X8, 0x0, 0x355B268
	0x0355B264 BL 0x1C5C684
	0x0355B268 LDR W8, [X0 + 0xE0]
	0x0355B26C CBNZ W8, 0x355B274
	0x0355B270 BL 0x1C16DFC
	0x0355B274 LDR X8, [X23 + 0x38]
	0x0355B278 LDR X0, [X8 + 0x10]
	0x0355B27C LDRB W8, [X0 + 0x135]
	0x0355B280 TBNZ X8, 0x0, 0x355B288
	0x0355B284 BL 0x1C5C684
	0x0355B288 CBZ X21, 0x355B404
	0x0355B28C ADRP X10, 0xB9D000
	0x0355B290 LDR X9, [X0 + 0xB8]
	0x0355B294 LDR X8, [X21]
	0x0355B298 LDR X10, [X10 + 0x348]
	0x0355B29C ADD X19, X19, 0x10
	0x0355B2A0 LDR X23, [X9]
	0x0355B2A4 LDRH W9, [X8 + 0x12E]
	0x0355B2A8 LDR X1, [X10]
	0x0355B2AC CBZ X9, 0x355B2D0
	0x0355B2B0 LDR X10, [X8 + 0xB0]
	0x0355B2B4 ADD X10, X10, 0x8
	0x0355B2B8 LDUR X11, [X10 - 0x8]
	0x0355B2BC CMP X11, X1
	0x0355B2C0 B.EQ 0x355B318
	0x0355B2C4 SUBS X9, X9, 0x1
	0x0355B2C8 ADD X10, X10, 0x10
	0x0355B2CC B.NE 0x355B2B8
	0x0355B2D0 MOVZ W2, 0x1
	0x0355B2D4 MOV X0, X21
	0x0355B2D8 BL 0x1C5C788
	0x0355B2DC B 0x355B328
	0x0355B2E0 LDR W9, [X10]
	0x0355B2E4 ADD W9, W9, 0x1
	0x0355B2E8 ADD X8, X8, W9, 0x4, SXTW
	0x0355B2EC ADD X0, X8, 0x138
	0x0355B2F0 LDP X8, X4, [X0]
	0x0355B2F4 MOVZ W1, 0x1
	0x0355B2F8 MOV X0, X21
	0x0355B2FC MOV X2, X20
	0x0355B300 MOV X3, X22
	0x0355B304 MOVZ W23, 0x1
	0x0355B308 BLR X8
	0x0355B30C BL 0x1C16D44
	0x0355B310 STRB W23, [X19 + 0x9E]
	0x0355B314 B 0x355B3E0
	0x0355B318 LDR W9, [X10]
	0x0355B31C ADD W9, W9, 0x1
	0x0355B320 ADD X8, X8, W9, 0x4, SXTW
	0x0355B324 ADD X0, X8, 0x138
	0x0355B328 LDP X8, X4, [X0]
	0x0355B32C MOVZ W1, 0x3
	0x0355B330 MOV X0, X21
	0x0355B334 MOV X2, X22
	0x0355B338 MOV X3, X23
	0x0355B33C BLR X8
	0x0355B340 LDP V2, V0, [X19 + 0x10]
	0x0355B344 LDR V1, [X19]
	0x0355B348 LDR X19, [X20 + 0x8]
	0x0355B34C STP V2, V0, [X31 + 0x50]
	0x0355B350 STR V1, [X31 + 0x4]
	0x0355B354 CBZ X19, 0x355B404
	0x0355B358 LDP V0, V1, [X31 + 0x40]
	0x0355B35C LDR V2, [X31 + 0x6]
	0x0355B360 ADRP X10, 0xBDA000
	0x0355B364 STP V0, V1, [X31 + 0x10]
	0x0355B368 STR V2, [X31 + 0x3]
	0x0355B36C LDR X8, [X19]
	0x0355B370 LDR X10, [X10 + 0x468]
	0x0355B374 LDRH W9, [X8 + 0x12E]
	0x0355B378 LDR X1, [X10]
	0x0355B37C CBZ X9, 0x355B3A0
	0x0355B380 LDR X10, [X8 + 0xB0]
	0x0355B384 ADD X10, X10, 0x8
	0x0355B388 LDUR X11, [X10 - 0x8]
	0x0355B38C CMP X11, X1
	0x0355B390 B.EQ 0x355B3B0
	0x0355B394 SUBS X9, X9, 0x1
	0x0355B398 ADD X10, X10, 0x10
	0x0355B39C B.NE 0x355B388
	0x0355B3A0 MOV X0, X19
	0x0355B3A4 MOV W2, W31
	0x0355B3A8 BL 0x1C5C788
	0x0355B3AC B 0x355B3BC
	0x0355B3B0 LDRSW X9, [X10]
	0x0355B3B4 ADD X8, X8, X9, 0x4, LSL
	0x0355B3B8 ADD X0, X8, 0x138
	0x0355B3BC LDP V0, V1, [X31 + 0x10]
	0x0355B3C0 LDR V2, [X31 + 0x3]
	0x0355B3C4 LDR X8, [X0]
	0x0355B3C8 ADD X1, X31, 0x80
	0x0355B3CC STP V0, V1, [X31 + 0x80]
	0x0355B3D0 STR V2, [X31 + 0xA]
	0x0355B3D4 LDR X2, [X0 + 0x8]
	0x0355B3D8 MOV X0, X19
	0x0355B3DC BLR X8
	0x0355B3E0 LDP X20, X19, [X31 + 0x100]
	0x0355B3E4 LDP X22, X21, [X31 + 0xF0]
	0x0355B3E8 LDP X24, X23, [X31 + 0xE0]
	0x0355B3EC LDP X26, X25, [X31 + 0xD0]
	0x0355B3F0 LDP X28, X27, [X31 + 0xC0]
	0x0355B3F4 LDP X29, X30, [X31 + 0xB0]
	0x0355B3F8 ADD X31, X31, 0x110
	0x0355B3FC RET
	0x0355B400 BL 0x1C16F28
	0x0355B404 BL 0x1C16F20
	0x0355B408 LDR X0, [X0 + 0xB0]
	0x0355B40C RET
	0x0355B410 LDR X0, [X0 + 0xB8]
	0x0355B414 RET
	0x0355B418 STR X30, [X31 - 0x10]!
	0x0355B41C LDR X0, [X0 + 0xC0]
	0x0355B420 CBZ X0, 0x355B42C
	0x0355B424 LDR X30, [X31], #0x10
	0x0355B428 B 0x3556F1C
	0x0355B42C BL 0x1C16F20
	0x0355B430 STR X30, [X31 - 0x10]!
	0x0355B434 LDR X0, [X0 + 0xC0]
	0x0355B438 CBZ X0, 0x355B444
	0x0355B43C LDR X30, [X31], #0x10
	0x0355B440 B 0x3557088
	0x0355B444 BL 0x1C16F20
	0x0355B448 STR X30, [X31 - 0x10]!
	0x0355B44C LDR X0, [X0 + 0xC0]
	0x0355B450 CBZ X0, 0x355B45C
	0x0355B454 LDR X30, [X31], #0x10
	0x0355B458 B 0x35572B8
	0x0355B45C BL 0x1C16F20
	0x0355B460 SUB X31, X31, 0x190
	0x0355B464 STR X29, [X31 + 0x140]
	0x0355B468 STP X30, X25, [X31 + 0x150]
	0x0355B46C STP X24, X23, [X31 + 0x160]
	0x0355B470 STP X22, X21, [X31 + 0x170]
	0x0355B474 STP X20, X19, [X31 + 0x180]
	0x0355B478 ADRP X21, 0xE84000
	0x0355B47C STRB W2, [X31 + 0x14C]
	0x0355B480 ADRP X24, 0xBC1000
	0x0355B484 LDRB W8, [X21 + 0xDAE]
	0x0355B488 LDR X24, [X24 + 0xE18]
	0x0355B48C MOV X20, X1
	0x0355B490 MOV X19, X0
	0x0355B494 TBNZ X8, 0x0, 0x355B560
	0x0355B498 ADRP X0, 0xB98000
	0x0355B49C LDR X0, [X0 + 0x9C8]
	0x0355B4A0 BL 0x1C16CF4
	0x0355B4A4 ADRP X0, 0xBDA000
	0x0355B4A8 LDR X0, [X0 + 0x708]
	0x0355B4AC BL 0x1C16CF4
	0x0355B4B0 ADRP X0, 0xBDA000
	0x0355B4B4 LDR X0, [X0 + 0x710]
	0x0355B4B8 BL 0x1C16CF4
	0x0355B4BC ADRP X0, 0xBDA000
	0x0355B4C0 LDR X0, [X0 + 0x718]
	0x0355B4C4 BL 0x1C16CF4
	0x0355B4C8 ADRP X0, 0xBDA000
	0x0355B4CC LDR X0, [X0 + 0x720]
	0x0355B4D0 BL 0x1C16CF4
	0x0355B4D4 ADRP X0, 0xBC1000
	0x0355B4D8 LDR X0, [X0 + 0xE18]
	0x0355B4DC BL 0x1C16CF4
	0x0355B4E0 ADRP X0, 0xBDA000
	0x0355B4E4 LDR X0, [X0 + 0x3E8]
	0x0355B4E8 BL 0x1C16CF4
	0x0355B4EC ADRP X0, 0xB9D000
	0x0355B4F0 LDR X0, [X0 + 0x348]
	0x0355B4F4 BL 0x1C16CF4
	0x0355B4F8 ADRP X0, 0xB98000
	0x0355B4FC LDR X0, [X0 + 0xAC8]
	0x0355B500 BL 0x1C16CF4
	0x0355B504 ADRP X0, 0xBDA000
	0x0355B508 LDR X0, [X0 + 0x638]
	0x0355B50C BL 0x1C16CF4
	0x0355B510 ADRP X0, 0xBDA000
	0x0355B514 LDR X0, [X0 + 0x728]
	0x0355B518 BL 0x1C16CF4
	0x0355B51C ADRP X0, 0xBDA000
	0x0355B520 LDR X0, [X0 + 0x730]
	0x0355B524 BL 0x1C16CF4
	0x0355B528 ADRP X0, 0xBDA000
	0x0355B52C LDR X0, [X0 + 0x738]
	0x0355B530 BL 0x1C16CF4
	0x0355B534 ADRP X0, 0xBDA000
	0x0355B538 LDR X0, [X0 + 0x648]
	0x0355B53C BL 0x1C16CF4
	0x0355B540 ADRP X0, 0xBDA000
	0x0355B544 LDR X0, [X0 + 0x650]
	0x0355B548 BL 0x1C16CF4
	0x0355B54C ADRP X0, 0xBDA000
	0x0355B550 LDR X0, [X0 + 0x740]
	0x0355B554 BL 0x1C16CF4
	0x0355B558 MOVZ W8, 0x1
	0x0355B55C STRB W8, [X21 + 0xDAE]
	0x0355B560 LDR X0, [X24]
	0x0355B564 MOVI V0.2D, 0x0
	0x0355B568 STRB W31, [X31 + 0x148]
	0x0355B56C STR X31, [X31 + 0xF0]
	0x0355B570 STP V0, V0, [X31 + 0xD0]
	0x0355B574 STR V0, [X31 + 0xC]
	0x0355B578 STR W31, [X31 + 0xBC]
	0x0355B57C LDR W8, [X0 + 0xE0]
	0x0355B580 CBNZ W8, 0x355B588
	0x0355B584 BL 0x1C16DFC
	0x0355B588 MOV X0, X20
	0x0355B58C BL 0x3555E6C
	0x0355B590 TBZ X0, 0x0, 0x355B8CC
	0x0355B594 LDR X0, [X24]
	0x0355B598 LDR W8, [X0 + 0xE0]
	0x0355B59C CBNZ W8, 0x355B5A4
	0x0355B5A0 BL 0x1C16DFC
	0x0355B5A4 LDRB W8, [X20 + 0x31]
	0x0355B5A8 ANDS W31, W8, 0x30
	0x0355B5AC B.EQ 0x355B7B8
	0x0355B5B0 LDR X8, [X19 + 0xC8]
	0x0355B5B4 CBZ X8, 0x355B834
	0x0355B5B8 LDR X21, [X8 + 0x18]
	0x0355B5BC ADRP X8, 0xB98000
	0x0355B5C0 LDR X8, [X8 + 0xAC8]
	0x0355B5C4 MOVZ W1, 0xA
	0x0355B5C8 LDR X0, [X8]
	0x0355B5CC BL 0x1C16D6C
	0x0355B5D0 CBZ X0, 0x355B834
	0x0355B5D4 LDR W8, [X0 + 0x18]
	0x0355B5D8 MOV X22, X0
	0x0355B5DC CBZ W8, 0x355BFC4
	0x0355B5E0 LDR X9, [X19 + 0xB8]
	0x0355B5E4 CMP W8, 0x1
	0x0355B5E8 STR X9, [X22 + 0x20]
	0x0355B5EC B.EQ 0x355BFC4
	0x0355B5F0 ADRP X8, 0xBDA000
	0x0355B5F4 LDR X8, [X8 + 0x648]
	0x0355B5F8 ADD X0, X31, 0x14C
	0x0355B5FC MOV X1, X31
	0x0355B600 LDR X8, [X8]
	0x0355B604 STR X8, [X22 + 0x28]
	0x0355B608 BL 0x3319BB4
	0x0355B60C LDR W8, [X22 + 0x18]
	0x0355B610 CMP W8, 0x2
	0x0355B614 B.LS 0x355BFC4
	0x0355B618 CMP W8, 0x3
	0x0355B61C STR X0, [X22 + 0x30]
	0x0355B620 B.EQ 0x355BFC4
	0x0355B624 ADRP X8, 0xBDA000
	0x0355B628 LDR X8, [X8 + 0x638]
	0x0355B62C LDR X8, [X8]
	0x0355B630 STR X8, [X22 + 0x38]
	0x0355B634 LDR X0, [X24]
	0x0355B638 LDR W8, [X0 + 0xE0]
	0x0355B63C CBNZ W8, 0x355B644
	0x0355B640 BL 0x1C16DFC
	0x0355B644 LDRB W8, [X20 + 0x32]
	0x0355B648 ADD X0, X31, 0x148
	0x0355B64C MOV X1, X31
	0x0355B650 STRB W8, [X31 + 0x148]
	0x0355B654 BL 0x3319BB4
	0x0355B658 LDR W8, [X22 + 0x18]
	0x0355B65C CMP W8, 0x4
	0x0355B660 B.LS 0x355BFC4
	0x0355B664 CMP W8, 0x5
	0x0355B668 STR X0, [X22 + 0x40]
	0x0355B66C B.EQ 0x355BFC4
	0x0355B670 ADRP X8, 0xBDA000
	0x0355B674 LDR X8, [X8 + 0x728]
	0x0355B678 ADD X0, X19, 0xE0
	0x0355B67C MOV X1, X31
	0x0355B680 LDR X8, [X8]
	0x0355B684 STR X8, [X22 + 0x48]
	0x0355B688 BL 0x3319BB4
	0x0355B68C LDR W8, [X22 + 0x18]
	0x0355B690 CMP W8, 0x6
	0x0355B694 B.LS 0x355BFC4
	0x0355B698 CMP W8, 0x7
	0x0355B69C STR X0, [X22 + 0x50]
	0x0355B6A0 B.EQ 0x355BFC4
	0x0355B6A4 ADRP X8, 0xBDA000
	0x0355B6A8 LDR X8, [X8 + 0x650]
	0x0355B6AC ADRP X9, 0xBDA000
	0x0355B6B0 MOVN X10, 0x0
	0x0355B6B4 ADD X0, X31, 0x100
	0x0355B6B8 LDR X8, [X8]
	0x0355B6BC LDR X9, [X9 + 0x3E8]
	0x0355B6C0 MOV X1, X31
	0x0355B6C4 STR X8, [X22 + 0x58]
	0x0355B6C8 LDR X8, [X9]
	0x0355B6CC LDRB W9, [X20 + 0x31]
	0x0355B6D0 STP X8, X10, [X31 + 0x100]
	0x0355B6D4 STRB W9, [X31 + 0x110]
	0x0355B6D8 BL 0x33B162C
	0x0355B6DC LDR W8, [X22 + 0x18]
	0x0355B6E0 CMP W8, 0x8
	0x0355B6E4 B.LS 0x355BFC4
	0x0355B6E8 CMP W8, 0x9
	0x0355B6EC STR X0, [X22 + 0x60]
	0x0355B6F0 B.EQ 0x355BFC4
	0x0355B6F4 ADRP X8, 0xBDA000
	0x0355B6F8 LDR X8, [X8 + 0x738]
	0x0355B6FC MOV X0, X22
	0x0355B700 MOV X1, X31
	0x0355B704 LDR X8, [X8]
	0x0355B708 STR X8, [X22 + 0x68]
	0x0355B70C BL 0x32278CC
	0x0355B710 ADRP X8, 0xB98000
	0x0355B714 LDR X8, [X8 + 0x9C8]
	0x0355B718 MOV X22, X0
	0x0355B71C LDR X23, [X8]
	0x0355B720 LDR X8, [X23 + 0x38]
	0x0355B724 CBNZ X8, 0x355B734
	0x0355B728 MOV X0, X23
	0x0355B72C BL 0x1C5C6E0
	0x0355B730 LDR X8, [X23 + 0x38]
	0x0355B734 LDR X0, [X8 + 0x10]
	0x0355B738 LDRB W8, [X0 + 0x135]
	0x0355B73C TBNZ X8, 0x0, 0x355B744
	0x0355B740 BL 0x1C5C684
	0x0355B744 LDR W8, [X0 + 0xE0]
	0x0355B748 CBNZ W8, 0x355B750
	0x0355B74C BL 0x1C16DFC
	0x0355B750 LDR X8, [X23 + 0x38]
	0x0355B754 LDR X0, [X8 + 0x10]
	0x0355B758 LDRB W8, [X0 + 0x135]
	0x0355B75C TBNZ X8, 0x0, 0x355B764
	0x0355B760 BL 0x1C5C684
	0x0355B764 CBZ X21, 0x355B834
	0x0355B768 ADRP X10, 0xB9D000
	0x0355B76C LDR X9, [X0 + 0xB8]
	0x0355B770 LDR X8, [X21]
	0x0355B774 LDR X10, [X10 + 0x348]
	0x0355B778 LDR X23, [X9]

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+192], X29
	003 Move [X31+200], X30
	004 Move [X31+208], X28
	005 Move [X31+216], X27
	006 Move [X31+224], X26
	007 Move [X31+232], X25
	008 Move [X31+240], X24
	009 Move [X31+248], X23
	010 Move [X31+256], X22
	011 Move [X31+264], X21
	012 Move [X31+272], X20
	013 Move [X31+280], X19
	014 Move X21, 0xE85000
	015 Move W8, [X21+3497]
	016 Move X20, X4
	017 Move X23, X2
	018 Move X22, X1
	019 Move X19, X0
	020 Move [X31+44], W3
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {51}
	025 Move X0, 0xBC4000
	026 Move X0, [X0+2952]
	027 Call 0x1C17CF4
	028 Move X0, 0xBCC000
	029 Move X0, [X0+3312]
	030 Call 0x1C17CF4
	031 Move X0, 0xBCC000
	032 Move X0, [X0+3320]
	033 Call 0x1C17CF4
	034 Move X0, 0xBCC000
	035 Move X0, [X0+3328]
	036 Call 0x1C17CF4
	037 Move X0, 0xBC1000
	038 Move X0, [X0+1456]
	039 Call 0x1C17CF4
	040 Move X0, 0xB99000
	041 Move X0, [X0+1560]
	042 Call 0x1C17CF4
	043 Move X0, 0xBDB000
	044 Move X0, [X0+1632]
	045 Call 0x1C17CF4
	046 Move X0, 0xBDB000
	047 Move X0, [X0+1232]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X21+3497], W8
	051 Move X8, [X19+144]
	052 Compare X8, 0
	053 JumpIfEqual {392}
	054 Move W21, [X19+40]
	055 Move X28, [X8+16]
	056 Move W24, [X19+136]
	057 Move W25, [X19+20]
	058 Move W26, [X19+128]
	059 Move X8, [X20+16]
	060 Move V0, [X20]
	061 Move W27, [X19+132]
	062 Move [X31+144], X8
	063 Move [X31+8], V0
	064 Compare X28, 0
	065 JumpIfEqual {392}
	066 Move V0, [X31+8]
	067 Move X8, [X31+144]
	068 Move X10, 0xBDB000
	069 Move [X31+6], V0
	070 Move [X31+112], X8
	071 Move X8, [X28]
	072 Move X10, [X10+1232]
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Move X1, [X10]
	075 Compare X9, 0
	076 JumpIfEqual {83}
	077 Move X10, [X8+176]
	078 Add X10, X10, 8
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Subtract X9, X9, 1
	082 Add X10, X10, 16
	083 Move W2, 3
	084 Move X0, X28
	085 Call 0x1C5D788
	086 Move W9, [X10]
	087 Add W9, W9, 3
	088 Add X8, X8, W9
	089 Add X0, X8, 312
	090 Move V0, [X31+6]
	091 Move X8, [X31+112]
	092 Move X9, [X0]
	093 Move W3, [X31+44]
	094 Move [X31+10], V0
	095 Move [X31+176], X8
	096 Move X8, [X0+8]
	097 Add X10, X31, 160
	098 Move X0, X28
	099 Move X1, X22
	100 Move X2, X23
	101 Move W4, W24
	102 Move W5, W25
	103 Move W6, W26
	104 Move W7, W27
	105 Move [X31], X10
	106 Move [X31+8], X8
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move X0, [X19+256]
	109 Compare X0, 0
	110 JumpIfEqual {392}
	111 Move W1, W31
	112 Move W2, W31
	113 Call SpacingProfile.Update, X0, X1, X2
	114 Move W8, [X19+57]
	115 Compare W8, 0
	116 JumpIfEqual {130}
	117 Move X24, [X19+248]
	118 Move W25, [X19+136]
	119 Move X0, X31
	120 Call Environment.get_TickCount
	121 Compare X24, 0
	122 JumpIfEqual {392}
	123 Move X8, 0xBDB000
	124 Move X8, [X8+1632]
	125 Move W2, W0
	126 Move X0, X24
	127 Move W1, W25
	128 Move X3, [X8]
	129 Call Dictionary`2<Byte, Int32>.set_Item, X0, X1, X2
	130 Move W8, [X19+136]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Add W8, W8, 1
	133 Move [X19+136], W8
	134 Move [X31+32], X20
	135 Move X20, [X19+224]
	136 Compare X20, 0
	137 JumpIfEqual {392}
	138 Move X28, 0xBC1000
	139 Move X28, [X28+1456]
	140 Move X27, X23
	141 ShiftRight X27, 32
	142 And X27, X27, 0x7FFFFFFF
	143 Move X0, [X28]
	144 Move W8, [X0+224]
	145 Compare W8, 0
	146 JumpIfNotEqual {148}
	147 Call 0x1C17DFC
	148 Move W8, [X20+24]
	149 Add W24, W27, 5
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X0, [X28]
	152 Move X25, [X19+224]
	153 Move W8, [X0+224]
	154 Compare W8, 0
	155 JumpIfNotEqual {157}
	156 Call 0x1C17DFC
	157 Move X8, 0xB99000
	158 Move X8, [X8+1560]
	159 Move W1, W24
	160 Move X0, [X8]
	161 Call 0x1C17D6C
	162 Move W2, [X19+240]
	163 Move X1, X0
	164 Move [X19+224], X0
	165 Move X0, X25
	166 Move X3, X31
	167 Call Array.Copy, X0, X1, X2
	168 And X23, X23, 0
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move [X31+28], W21
	171 Move X24, X31
	172 NotImplemented "Instruction CSEL not yet implemented."
	173 Move X26, X23
	174 ShiftRight X26, 32
	175 And X26, X26, 0x7FFFFFFF
	176 Move X21, 1
	177 Move X0, [X28]
	178 Move W8, [X0+224]
	179 Compare W8, 0
	180 JumpIfNotEqual {182}
	181 Call 0x1C17DFC
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move X8, [X19+224]
	184 Compare X8, 0
	185 JumpIfEqual {392}
	186 Move W9, [X8+24]
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move X0, [X28]
	189 Add X20, X8, X24
	190 Move W29, [X20+32]
	191 Move W8, [X0+224]
	192 Compare W8, 0
	193 JumpIfNotEqual {195}
	194 Call 0x1C17DFC
	195 Compare X22, 0
	196 JumpIfEqual {392}
	197 Move W8, [X22+24]
	198 Add X9, X23, X24
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Add X8, X22, X26
	201 Move W8, [X8+32]
	202 Add X24, X24, 1
	203 Add X26, X26, X21
	204 Xor W8, W8, W29
	205 Move [X20+32], W8
	206 Move X0, [X28]
	207 Move W20, [X19+240]
	208 Move W8, [X0+224]
	209 Compare W8, 0
	210 JumpIfNotEqual {212}
	211 Call 0x1C17DFC
	212 Move W21, [X31+28]
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move X0, [X28]
	215 Move W8, W27
	216 Move W9, [X0+224]
	217 Compare W9, 0
	218 JumpIfNotEqual {222}
	219 Call 0x1C17DFC
	220 Move W8, W27
	221 Move W8, [X19+240]
	222 Move X26, X19
	223 Add X26, X26, 236
	224 Move W20, [X26]
	225 NotImplemented "Instruction LDURB not yet implemented."
	226 NotImplemented "Instruction LDURB not yet implemented."
	227 NotImplemented "Instruction LDURB not yet implemented."
	228 Move [X26+4], W8
	229 Move W8, [X31+44]
	230 Xor W8, W9, W8
	231 Xor W9, W10, W11
	232 NotImplemented "Instruction STURB not yet implemented."
	233 NotImplemented "Instruction STURB not yet implemented."
	234 Move X0, [X28]
	235 Move W8, [X0+224]
	236 Compare W8, 0
	237 JumpIfNotEqual {239}
	238 Call 0x1C17DFC
	239 Move W8, [X19+244]
	240 Add W9, W20, W27
	241 Move X20, [X31+32]
	242 Move [X19+236], W9
	243 Add W8, W8, 1
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Move [X19+244], W8
	246 Move X8, [X19+224]
	247 Compare X8, 0
	248 JumpIfEqual {392}
	249 NotImplemented "Instruction LDRSW not yet implemented."
	250 Move W10, [X8+24]
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Move W10, [X19+233]
	253 Add X8, X8, X9
	254 Move [X8+32], W10
	255 Move X8, [X19+224]
	256 Compare X8, 0
	257 JumpIfEqual {392}
	258 Move W9, [X19+240]
	259 Move W10, [X8+24]
	260 Add W9, W9, 1
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Move W10, [X19+232]
	263 Add X8, X8, W9
	264 Move [X8+32], W10
	265 Move X8, [X19+224]
	266 Compare X8, 0
	267 JumpIfEqual {392}
	268 Move W9, [X19+240]
	269 Move W10, [X8+24]
	270 Add W9, W9, 2
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Move W10, [X19+236]
	273 Add X8, X8, W9
	274 Move [X8+32], W10
	275 Move X8, [X19+224]
	276 Compare X8, 0
	277 JumpIfEqual {392}
	278 Move W9, [X19+240]
	279 Move W10, [X8+24]
	280 Add W9, W9, 3
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Move W10, [X19+236]
	283 Add X8, X8, W9
	284 Move W10, W10
	285 ShiftRight W10, 8
	286 And W10, W10, 0x7FFFFFFF
	287 Move [X8+32], W10
	288 Move X8, [X19+224]
	289 Compare X8, 0
	290 JumpIfEqual {392}
	291 Move W9, [X19+240]
	292 Move W10, [X8+24]
	293 Add W9, W9, 4
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Move W10, [X19+244]
	296 Move W11, [X19+136]
	297 Add X8, X8, W9
	298 Subtract W10, W11, W10
	299 Move [X8+32], W10
	300 Move X8, [X19+144]
	301 Compare X8, 0
	302 JumpIfEqual {392}
	303 Move X9, 0xBC4000
	304 Move X21, [X8+16]
	305 Move X1, [X19+224]
	306 Move W8, [X19+240]
	307 Move X9, [X9+2952]
	308 Add X0, X31, 80
	309 Move W2, W31
	310 Add W3, W8, 5
	311 Move X4, [X9]
	312 Move [X31+80], X31
	313 Move [X31+88], X31
	314 Call 0x2B88BB0, X0, X1, X2, X3
	315 Move W22, [X19+136]
	316 Move W23, [X19+128]
	317 Move X8, [X20+16]
	318 Move V0, [X20]
	319 Move W20, [X19+132]
	320 Move [X31+144], X8
	321 Move [X31+8], V0
	322 Compare X21, 0
	323 JumpIfEqual {392}
	324 Move V0, [X31+8]
	325 Move X8, [X31+144]
	326 Move X9, 0xBDB000
	327 Move [X31+3], V0
	328 Move [X31+64], X8
	329 Move X8, [X21]
	330 Move X9, [X9+1232]
	331 Move X25, [X31+80]
	332 Move X24, [X31+88]
	333 Move X1, [X9]
	334 NotImplemented "Instruction LDRH not yet implemented."
	335 Compare X9, 0
	336 JumpIfEqual {343}
	337 Move X10, [X8+176]
	338 Add X10, X10, 8
	339 NotImplemented "Instruction LDUR not yet implemented."
	340 NotImplemented "Instruction CMP not yet implemented."
	341 Subtract X9, X9, 1
	342 Add X10, X10, 16
	343 Move W2, 3
	344 Move X0, X21
	345 Call 0x1C5D788
	346 Move W9, [X10]
	347 Add W9, W9, 3
	348 Add X8, X8, W9
	349 Add X0, X8, 312
	350 Move V0, [X31+3]
	351 Move X8, [X31+64]
	352 Move X9, [X0]
	353 Add X10, X31, 160
	354 Move [X31+10], V0
	355 Move [X31+176], X8
	356 Move X8, [X0+8]
	357 Move W3, 64
	358 Move X0, X21
	359 Move X1, X25
	360 Move X2, X24
	361 Move W4, W22
	362 Move W5, W22
	363 Move W6, W23
	364 Move W7, W20
	365 Move [X31], X10
	366 Move [X31+8], X8
	367 NotImplemented "Instruction BLR not yet implemented."
	368 Move W8, [X19+240]
	369 Move X0, [X19+224]
	370 Move W1, W31
	371 Move X3, X31
	372 Add W2, W8, 5
	373 Call Array.Clear, X0, X1, X2
	374 NotImplemented "Instruction STRH not yet implemented."
	375 Move [X26+8], W31
	376 Move [X26], X31
	377 Move X20, [X31+272]
	378 Move X19, [X31+280]
	379 Move X22, [X31+256]
	380 Move X21, [X31+264]
	381 Move X24, [X31+240]
	382 Move X23, [X31+248]
	383 Move X26, [X31+224]
	384 Move X25, [X31+232]
	385 Move X28, [X31+208]
	386 Move X27, [X31+216]
	387 Move X29, [X31+192]
	388 Move X30, [X31+200]
	389 Add X31, X31, 288
	390 Return 
	391 Call 0x1C17F28
	392 Call 0x1C17F20

Method: System.Void RemoveSelf()

Disassembly:
	0x0355B7B0 BL 0x1C5C788
	0x0355B7B4 B 0x355B8B4
	0x0355B7B8 LDR X0, [X19 + 0xF8]
	0x0355B7BC CBZ X0, 0x355B834
	0x0355B7C0 ADRP X21, 0xBDA000

ISIL:
	001 Move X1, X0
	002 Move X0, [X0+144]
	003 Compare X0, 0
	004 JumpIfEqual {5}
	005 Return 

Method: System.Void Dispose()

Disassembly:
	0x0355BA2C MOV X2, X31
	0x0355BA30 BL 0x33E9064
	0x0355BA34 LDR W9, [X20 + 0x1C]
	0x0355BA38 LDR X8, [X20]
	0x0355BA3C ADD W9, W9, 0x1
	0x0355BA40 STR W9, [X20 + 0x1C]
	0x0355BA44 CBZ X8, 0x355B834
	0x0355BA48 LDP W10, W9, [X20 + 0x8]
	0x0355BA4C LDR W11, [X8 + 0x18]
	0x0355BA50 ADD W9, W9, W10
	0x0355BA54 SUB W9, W9, 0x1
	0x0355BA58 CMP W9, W11
	0x0355BA5C B.CS 0x355BFC4
	0x0355BA60 ADD X8, X8, W9, SXTW
	0x0355BA64 LDRB W8, [X8 + 0x20]
	0x0355BA68 LDRB W9, [X31 + 0x14C]
	0x0355BA6C CMP W8, W9
	0x0355BA70 B.EQ 0x355BAA0
	0x0355BA74 LDR X10, [X19 + 0x120]
	0x0355BA78 CBZ X10, 0x355B834
	0x0355BA7C LDR W11, [X10 + 0x18]
	0x0355BA80 CMP W11, W8, UXTB
	0x0355BA84 B.LS 0x355BFC4
	0x0355BA88 ADD X10, X10, W8, UXTB
	0x0355BA8C STRB W9, [X10 + 0x20]
	0x0355BA90 LDRB W9, [X31 + 0x14C]
	0x0355BA94 ADD W8, W8, 0x1
	0x0355BA98 CMP W9, W8, UXTB
	0x0355BA9C B.NE 0x355BA74
	0x0355BAA0 STRB W31, [X19 + 0x128]
	0x0355BAA4 B 0x355BF94
	0x0355BAA8 LDR X8, [X19 + 0xD8]
	0x0355BAAC CBZ X8, 0x355B834
	0x0355BAB0 LDRB W9, [X31 + 0x14C]
	0x0355BAB4 LDR W10, [X8 + 0x18]
	0x0355BAB8 CMP W9, W10
	0x0355BABC B.CS 0x355BFC4
	0x0355BAC0 ADD X8, X8, X9, 0x2, LSL
	0x0355BAC4 ADD X0, X8, 0x20
	0x0355BAC8 MOVZ W1, 0x1
	0x0355BACC MOV X2, X31
	0x0355BAD0 BL 0x33E9064
	0x0355BAD4 CMP W0, 0x1
	0x0355BAD8 B.EQ 0x355BAA8
	0x0355BADC LDR X21, [X19 + 0xD0]
	0x0355BAE0 CBZ X21, 0x355B834

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE85000
	005 Move W8, [X20+3498]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB99000
	012 Move X0, [X0+3584]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3498], W8
	016 Move W20, [X19+176]
	017 Call 0x1C17D44
	018 Compare W20, 0
	019 JumpIfNotEqual {49}
	020 Move X20, [X19+120]
	021 Compare X20, 0
	022 JumpIfEqual {46}
	023 Move X10, 0xB99000
	024 Move X8, [X20]
	025 Move X10, [X10+3584]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move X0, X20
	037 Move W2, W31
	038 Call 0x1C5D788
	039 NotImplemented "Instruction LDRSW not yet implemented."
	040 Add X8, X8, X9
	041 Add X0, X8, 312
	042 Move X8, [X0]
	043 Move X1, [X0+8]
	044 Move X0, X20
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Call 0x1C17D44
	047 Move W8, 1
	048 Move [X19+176], W8
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Return 

