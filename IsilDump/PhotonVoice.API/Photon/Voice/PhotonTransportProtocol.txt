Type: Photon.Voice.PhotonTransportProtocol

Method: System.Void .ctor(Photon.Voice.VoiceClient voiceClient, Photon.Voice.ILogger logger)

Disassembly:
	0x0356BDD4 LDR W8, [X22 + 0x18]
	0x0356BDD8 CMP W8, 0x2
	0x0356BDDC B.LS 0x356C038
	0x0356BDE0 LDR X3, [X22 + 0x30]
	0x0356BDE4 MOV X0, X20
	0x0356BDE8 MOV W1, W23
	0x0356BDEC MOV W2, W19
	0x0356BDF0 BL 0x356C808
	0x0356BDF4 B 0x356BED8
	0x0356BDF8 MOV X25, X31
	0x0356BDFC CMP W8, 0x4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move [X21+16], X20
	011 Move [X21+24], X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: System.Object[] buildVoicesInfo(Photon.Voice.LocalVoice v)

Disassembly:
	0x0356C054 BL 0x1C171E0
	0x0356C058 STR X30, [X31 - 0x20]!
	0x0356C05C STP X20, X19, [X31 + 0x10]
	0x0356C060 MOV W20, W2
	0x0356C064 CMP W1, 0x9
	0x0356C068 MOV X19, X0
	0x0356C06C B.NE 0x356C080
	0x0356C070 LDR X0, [X19 + 0x188]
	0x0356C074 CBZ X0, 0x356C0AC
	0x0356C078 MOV X1, X31
	0x0356C07C BL 0x3563D8C
	0x0356C080 CMP W20, 0x9
	0x0356C084 B.NE 0x356C0A0
	0x0356C088 LDR X0, [X19 + 0x188]
	0x0356C08C CBZ X0, 0x356C0AC
	0x0356C090 LDP X20, X19, [X31 + 0x10]
	0x0356C094 MOV X1, X31
	0x0356C098 LDR X30, [X31], #0x20
	0x0356C09C B 0x3563C28
	0x0356C0A0 LDP X20, X19, [X31 + 0x10]
	0x0356C0A4 LDR X30, [X31], #0x20
	0x0356C0A8 RET
	0x0356C0AC BL 0x1C16F20
	0x0356C0B0 STR X30, [X31 - 0x10]!
	0x0356C0B4 LDR X0, [X0 + 0x188]
	0x0356C0B8 CBZ X0, 0x356C0C8
	0x0356C0BC MOV X1, X31
	0x0356C0C0 LDR X30, [X31], #0x10
	0x0356C0C4 B 0x35657B8
	0x0356C0C8 BL 0x1C16F20
	0x0356C0CC STR X30, [X31 - 0x10]!
	0x0356C0D0 LDR X8, [X0 + 0x10]
	0x0356C0D4 CBZ X8, 0x356C118
	0x0356C0D8 LDR X8, [X8 + 0x10]
	0x0356C0DC CBZ X8, 0x356C118
	0x0356C0E0 LDRB W8, [X8 + 0x40]
	0x0356C0E4 CMP W8, 0x2
	0x0356C0E8 B.EQ 0x356C0FC
	0x0356C0EC CMP W8, 0x3
	0x0356C0F0 B.NE 0x356C104
	0x0356C0F4 MOVZ W0, 0x3
	0x0356C0F8 B 0x356C110
	0x0356C0FC MOVZ W0, 0x2
	0x0356C100 B 0x356C110
	0x0356C104 CMP W8, 0x1
	0x0356C108 MOVZ W8, 0x5
	0x0356C10C CSINC W0, W8, W31, HI
	0x0356C110 LDR X30, [X31], #0x10
	0x0356C114 RET
	0x0356C118 BL 0x1C16F20
	0x0356C11C STR X30, [X31 - 0x30]!
	0x0356C120 STP X22, X21, [X31 + 0x10]
	0x0356C124 STP X20, X19, [X31 + 0x20]
	0x0356C128 MOV X21, X3
	0x0356C12C MOV X22, X2
	0x0356C130 MOV W19, W1
	0x0356C134 MOV X20, X0
	0x0356C138 BL 0x356C0CC
	0x0356C13C CMP W0, W19
	0x0356C140 B.GE 0x356C154
	0x0356C144 LDP X20, X19, [X31 + 0x20]
	0x0356C148 LDP X22, X21, [X31 + 0x10]
	0x0356C14C LDR X30, [X31], #0x30
	0x0356C150 RET
	0x0356C154 LDR X20, [X20 + 0x10]
	0x0356C158 MOV X0, X22
	0x0356C15C MOV X1, X21
	0x0356C160 MOV X2, X31
	0x0356C164 BL 0x3227C5C
	0x0356C168 CBZ X20, 0x356C1A0
	0x0356C16C LDR X8, [X20]
	0x0356C170 MOV X2, X0
	0x0356C174 SUB W9, W19, 0x1
	0x0356C178 MOV X0, X20
	0x0356C17C LDR X4, [X8 + 0x218]
	0x0356C180 LDR X3, [X8 + 0x220]
	0x0356C184 LDP X20, X19, [X31 + 0x20]
	0x0356C188 LDP X22, X21, [X31 + 0x10]
	0x0356C18C CMP W9, 0x3
	0x0356C190 MOVZ W8, 0x5
	0x0356C194 CSINC W1, W8, W9, CS
	0x0356C198 LDR X30, [X31], #0x30
	0x0356C19C BR X4
	0x0356C1A0 BL 0x1C16F20
	0x0356C1A4 STP X30, X19, [X31 - 0x10]!
	0x0356C1A8 AND W3, W3, 0x1
	0x0356C1AC MOV X19, X0
	0x0356C1B0 BL 0x356AB98
	0x0356C1B4 LDR X0, [X19 + 0x10]
	0x0356C1B8 CBZ X0, 0x356C1E0
	0x0356C1BC MOVZ W1, 0x1
	0x0356C1C0 MOV X2, X31
	0x0356C1C4 BL 0x35019DC
	0x0356C1C8 LDR X0, [X19 + 0x10]
	0x0356C1CC CBZ X0, 0x356C1E0
	0x0356C1D0 MOVZ W1, 0x1
	0x0356C1D4 MOV X2, X31
	0x0356C1D8 LDP X30, X19, [X31], #0x10
	0x0356C1DC B 0x35018F4
	0x0356C1E0 BL 0x1C16F20
	0x0356C1E4 LDR X8, [X1 + 0x8]
	0x0356C1E8 CBZ X8, 0x356C1FC
	0x0356C1EC LDR W8, [X8 + 0x18]
	0x0356C1F0 MOVZ W9, 0x450
	0x0356C1F4 SUB W0, W9, W8
	0x0356C1F8 RET
	0x0356C1FC MOVZ W0, 0x453
	0x0356C200 RET
	0x0356C204 MOVZ W0, 0xCB
	0x0356C208 RET
	0x0356C20C STP X30, X27, [X31 - 0x50]!
	0x0356C210 STP X26, X25, [X31 + 0x10]
	0x0356C214 STP X24, X23, [X31 + 0x20]
	0x0356C218 STP X22, X21, [X31 + 0x30]
	0x0356C21C STP X20, X19, [X31 + 0x40]
	0x0356C220 ADRP X25, 0xE73000
	0x0356C224 LDRB W8, [X25 + 0xE3A]
	0x0356C228 MOV W22, W6
	0x0356C22C MOV X19, X5
	0x0356C230 MOV X20, X4
	0x0356C234 MOV W21, W3
	0x0356C238 MOV W24, W2
	0x0356C23C MOV W26, W1
	0x0356C240 MOV X23, X0
	0x0356C244 TBNZ X8, 0x0, 0x356C280
	0x0356C248 ADRP X0, 0xBBA000
	0x0356C24C LDR X0, [X0 + 0xCF0]
	0x0356C250 BL 0x1C16CF4
	0x0356C254 ADRP X0, 0xBBA000
	0x0356C258 LDR X0, [X0 + 0xCF8]
	0x0356C25C BL 0x1C16CF4
	0x0356C260 ADRP X0, 0xBBA000
	0x0356C264 LDR X0, [X0 + 0xD00]
	0x0356C268 BL 0x1C16CF4
	0x0356C26C ADRP X0, 0xBAF000
	0x0356C270 LDR X0, [X0 + 0x5B0]
	0x0356C274 BL 0x1C16CF4
	0x0356C278 MOVZ W8, 0x1
	0x0356C27C STRB W8, [X25 + 0xE3A]
	0x0356C280 LDR X0, [X23 + 0x10]
	0x0356C284 CBZ X0, 0x356C3AC
	0x0356C288 ADRP X27, 0xBAF000
	0x0356C28C LDR X27, [X27 + 0x5B0]
	0x0356C290 MOV X1, X31
	0x0356C294 BL 0x35019FC
	0x0356C298 LDR X8, [X27]
	0x0356C29C MOV X25, X0
	0x0356C2A0 LDR W9, [X8 + 0xE0]
	0x0356C2A4 CBNZ W9, 0x356C2B0
	0x0356C2A8 MOV X0, X8
	0x0356C2AC BL 0x1C16DFC
	0x0356C2B0 CBZ X25, 0x356C3AC
	0x0356C2B4 UBFM X23, X19, 0x20, 0x3F
	0x0356C2B8 ADD W1, W23, 0x5
	0x0356C2BC MOV X0, X25
	0x0356C2C0 MOV X2, X31
	0x0356C2C4 BL 0x34ED0AC
	0x0356C2C8 CBZ X0, 0x356C3AC
	0x0356C2CC LDR X8, [X0 + 0x10]
	0x0356C2D0 MOV X25, X0
	0x0356C2D4 CBZ X8, 0x356C3AC
	0x0356C2D8 LDR W9, [X8 + 0x18]
	0x0356C2DC CMP W9, 0x1
	0x0356C2E0 B.LS 0x356C3B0
	0x0356C2E4 STRB W26, [X8 + 0x21]
	0x0356C2E8 LDR X8, [X25 + 0x10]
	0x0356C2EC CBZ X8, 0x356C3AC
	0x0356C2F0 LDR W9, [X8 + 0x18]
	0x0356C2F4 CMP W9, 0x2
	0x0356C2F8 B.LS 0x356C3B0
	0x0356C2FC STRB W24, [X8 + 0x22]
	0x0356C300 LDR X8, [X25 + 0x10]
	0x0356C304 CBZ X8, 0x356C3AC
	0x0356C308 LDR W9, [X8 + 0x18]
	0x0356C30C CMP W9, 0x3
	0x0356C310 B.LS 0x356C3B0
	0x0356C314 AND W9, W24, 0xFF
	0x0356C318 CMP W9, W21, UXTB
	0x0356C31C STRB W22, [X8 + 0x23]
	0x0356C320 B.NE 0x356C32C
	0x0356C324 MOVZ W21, 0x4
	0x0356C328 B 0x356C348
	0x0356C32C LDR X8, [X25 + 0x10]
	0x0356C330 CBZ X8, 0x356C3AC
	0x0356C334 LDR W9, [X8 + 0x18]
	0x0356C338 CMP W9, 0x4
	0x0356C33C B.LS 0x356C3B0
	0x0356C340 STRB W21, [X8 + 0x24]
	0x0356C344 MOVZ W21, 0x5
	0x0356C348 LDR X8, [X25 + 0x10]
	0x0356C34C CBZ X8, 0x356C3AC
	0x0356C350 LDR W9, [X8 + 0x18]
	0x0356C354 CBZ W9, 0x356C3B0
	0x0356C358 STRB W21, [X8 + 0x20]
	0x0356C35C LDR X0, [X27]
	0x0356C360 LDR W8, [X0 + 0xE0]
	0x0356C364 CBNZ W8, 0x356C36C
	0x0356C368 BL 0x1C16DFC
	0x0356C36C LDR X2, [X25 + 0x10]
	0x0356C370 MOV X0, X20
	0x0356C374 MOV W1, W19
	0x0356C378 MOV W3, W21
	0x0356C37C MOV W4, W23
	0x0356C380 MOV X5, X31
	0x0356C384 BL 0x33A8A9C
	0x0356C388 ADD W8, W21, W23
	0x0356C38C STR W8, [X25 + 0x1C]
	0x0356C390 MOV X0, X25
	0x0356C394 LDP X20, X19, [X31 + 0x40]
	0x0356C398 LDP X22, X21, [X31 + 0x30]
	0x0356C39C LDP X24, X23, [X31 + 0x20]
	0x0356C3A0 LDP X26, X25, [X31 + 0x10]
	0x0356C3A4 LDP X30, X27, [X31], #0x50
	0x0356C3A8 RET
	0x0356C3AC BL 0x1C16F20
	0x0356C3B0 BL 0x1C16F28
	0x0356C3B4 STP X30, X21, [X31 - 0x20]!
	0x0356C3B8 STP X20, X19, [X31 + 0x10]
	0x0356C3BC CBZ X1, 0x356C42C
	0x0356C3C0 LDRB W8, [X1 + 0x10]
	0x0356C3C4 MOV X20, X1
	0x0356C3C8 MOV X19, X0
	0x0356C3CC CMP W8, 0xCB
	0x0356C3D0 B.NE 0x356C418
	0x0356C3D4 MOVZ W1, 0xF5
	0x0356C3D8 MOV X0, X20
	0x0356C3DC MOV X2, X31
	0x0356C3E0 BL 0x3505ABC
	0x0356C3E4 MOV X21, X0
	0x0356C3E8 MOV X0, X20
	0x0356C3EC MOV X1, X31
	0x0356C3F0 BL 0x3505B04
	0x0356C3F4 LDR X8, [X19 + 0x108]
	0x0356C3F8 CBZ X8, 0x356C42C
	0x0356C3FC MOV W3, W0
	0x0356C400 LDR W4, [X8 + 0x18]
	0x0356C404 MOV X0, X19
	0x0356C408 LDP X20, X19, [X31 + 0x10]
	0x0356C40C MOV X1, X21
	0x0356C410 LDP X30, X21, [X31], #0x20
	0x0356C414 B 0x356C430
	0x0356C418 MOV X0, X19
	0x0356C41C MOV X1, X20
	0x0356C420 LDP X20, X19, [X31 + 0x10]
	0x0356C424 LDP X30, X21, [X31], #0x20
	0x0356C428 B 0x356BA94

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], X30
	003 Move [X31+64], X26
	004 Move [X31+72], X25
	005 Move [X31+80], X24
	006 Move [X31+88], X23
	007 Move [X31+96], X22
	008 Move [X31+104], X21
	009 Move [X31+112], X20
	010 Move [X31+120], X19
	011 Move X21, 0xE74000
	012 Move X20, 0xB88000
	013 Move X23, 0xB89000
	014 Move W8, [X21+3644]
	015 Move X20, [X20+2512]
	016 Move X23, [X23+2520]
	017 Move X19, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {48}
	022 Move X0, 0xB89000
	023 Move X0, [X0+2520]
	024 Call 0x1C17CF4
	025 Move X0, 0xBB1000
	026 Move X0, [X0+1064]
	027 Call 0x1C17CF4
	028 Move X0, 0xB91000
	029 Move X0, [X0+1336]
	030 Call 0x1C17CF4
	031 Move X0, 0xB91000
	032 Move X0, [X0+1344]
	033 Call 0x1C17CF4
	034 Move X0, 0xB91000
	035 Move X0, [X0+696]
	036 Call 0x1C17CF4
	037 Move X0, 0xBCA000
	038 Move X0, [X0+3632]
	039 Call 0x1C17CF4
	040 Move X0, 0xB88000
	041 Move X0, [X0+1880]
	042 Call 0x1C17CF4
	043 Move X0, 0xB88000
	044 Move X0, [X0+2512]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X21+3644], W8
	048 Move X0, [X20]
	049 Move W1, 1
	050 Call 0x1C17D6C
	051 Move X8, [X20]
	052 Move X20, X0
	053 Move W1, 3
	054 Move X0, X8
	055 Call 0x1C17D6C
	056 Move X21, X0
	057 Move X0, [X23]
	058 Add X1, X31, 60
	059 Move [X31+60], W31
	060 Call 0x1C17E04
	061 Compare X21, 0
	062 JumpIfEqual {264}
	063 Move X22, X0
	064 Compare X0, 0
	065 JumpIfEqual {72}
	066 Move X8, [X21]
	067 Move X0, X22
	068 Move X1, [X8+64]
	069 Call 0x1C17E00
	070 Compare X0, 0
	071 JumpIfEqual {266}
	072 Move W8, [X21+24]
	073 Compare W8, 0
	074 JumpIfEqual {265}
	075 Move X8, 0xBCA000
	076 Move X8, [X8+3632]
	077 Move [X21+32], X22
	078 Add X1, X31, 56
	079 Move X0, [X8]
	080 Move W8, 1
	081 Move [X31+56], W8
	082 Call 0x1C17E04
	083 Move X22, X0
	084 Compare X0, 0
	085 JumpIfEqual {92}
	086 Move X8, [X21]
	087 Move X0, X22
	088 Move X1, [X8+64]
	089 Call 0x1C17E00
	090 Compare X0, 0
	091 JumpIfEqual {266}
	092 Move W8, [X21+24]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move [X21+40], X22
	095 Compare X20, 0
	096 JumpIfEqual {104}
	097 Move X8, [X21]
	098 Move X0, X20
	099 Move X1, [X8+64]
	100 Call 0x1C17E00
	101 Compare X0, 0
	102 JumpIfEqual {266}
	103 Move W8, [X21+24]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X8, 0xB91000
	106 Move X8, [X8+696]
	107 Move [X21+48], X20
	108 Move X22, 0xB91000
	109 Move X0, [X8]
	110 Move X22, [X22+1344]
	111 Call 0x1C17F10
	112 Move X1, [X22]
	113 Move X22, X0
	114 Call Dictionary`2<Byte, Object>..ctor, X0
	115 Compare X19, 0
	116 JumpIfEqual {264}
	117 Move W8, [X19+128]
	118 Move X0, [X23]
	119 Add X1, X31, 44
	120 Move [X31+44], W8
	121 Call 0x1C17E04
	122 Compare X22, 0
	123 JumpIfEqual {264}
	124 Move X24, 0xB91000
	125 Move X24, [X24+1336]
	126 Move X26, 0xBB1000
	127 Move X25, 0xB88000
	128 Move X2, X0
	129 Move X3, [X24]
	130 Move X26, [X26+1064]
	131 Move X25, [X25+1880]
	132 Move W1, 1
	133 Move X0, X22
	134 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	135 Move W8, [X19+72]
	136 Move X0, [X26]
	137 Add X1, X31, 40
	138 Move [X31+40], W8
	139 Call 0x1C17E04
	140 Move X3, [X24]
	141 Move X2, X0
	142 Move W1, 12
	143 Move X0, X22
	144 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	145 Move W8, [X19+76]
	146 Move X0, [X25]
	147 Add X1, X31, 36
	148 Move [X31+36], W8
	149 Call 0x1C17E04
	150 Move X3, [X24]
	151 Move X2, X0
	152 Move W1, 2
	153 Move X0, X22
	154 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	155 Move W8, [X19+80]
	156 Move X0, [X25]
	157 Add X1, X31, 32
	158 Move [X31+32], W8
	159 Call 0x1C17E04
	160 Move X3, [X24]
	161 Move X2, X0
	162 Move W1, 3
	163 Move X0, X22
	164 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	165 Move W8, [X19+84]
	166 Move X0, [X25]
	167 Add X1, X31, 28
	168 Move [X31+28], W8
	169 Call 0x1C17E04
	170 Move X3, [X24]
	171 Move X2, X0
	172 Move W1, 4
	173 Move X0, X22
	174 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	175 Move W8, [X19+88]
	176 Move X0, [X25]
	177 Add X1, X31, 24
	178 Move [X31+24], W8
	179 Call 0x1C17E04
	180 Move X3, [X24]
	181 Move X2, X0
	182 Move W1, 5
	183 Move X0, X22
	184 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	185 Move W8, [X19+92]
	186 Move X0, [X25]
	187 Add X1, X31, 20
	188 Move [X31+20], W8
	189 Call 0x1C17E04
	190 Move X3, [X24]
	191 Move X2, X0
	192 Move W1, 6
	193 Move X0, X22
	194 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	195 Move W8, [X19+96]
	196 Move X0, [X25]
	197 Add X1, X31, 16
	198 Move [X31+16], W8
	199 Call 0x1C17E04
	200 Move X3, [X24]
	201 Move X2, X0
	202 Move W1, 7
	203 Move X0, X22
	204 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	205 Move W8, [X19+100]
	206 Move X0, [X25]
	207 Add X1, X31, 12
	208 Move [X31+12], W8
	209 Call 0x1C17E04
	210 Move X3, [X24]
	211 Move X2, X0
	212 Move W1, 8
	213 Move X0, X22
	214 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	215 Move W8, [X19+104]
	216 Move X0, [X25]
	217 Add X1, X31, 8
	218 Move [X31+8], W8
	219 Call 0x1C17E04
	220 Move X3, [X24]
	221 Move X2, X0
	222 Move W1, 9
	223 Move X0, X22
	224 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	225 Move X2, [X19+112]
	226 Move X3, [X24]
	227 Move W1, 10
	228 Move X0, X22
	229 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	230 Move W8, [X19+136]
	231 Move X0, [X23]
	232 Add X1, X31, 4
	233 Move [X31+4], W8
	234 Call 0x1C17E04
	235 Move X3, [X24]
	236 Move X2, X0
	237 Move W1, 11
	238 Move X0, X22
	239 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	240 Compare X20, 0
	241 JumpIfEqual {264}
	242 Move X8, [X20]
	243 Move X0, X22
	244 Move X1, [X8+64]
	245 Call 0x1C17E00
	246 Compare X0, 0
	247 JumpIfEqual {266}
	248 Move W8, [X20+24]
	249 Compare W8, 0
	250 JumpIfEqual {265}
	251 Move [X20+32], X22
	252 Move X0, X21
	253 Move X20, [X31+112]
	254 Move X19, [X31+120]
	255 Move X22, [X31+96]
	256 Move X21, [X31+104]
	257 Move X24, [X31+80]
	258 Move X23, [X31+88]
	259 Move X26, [X31+64]
	260 Move X25, [X31+72]
	261 Move X30, [X31+48]
	262 Add X31, X31, 128
	263 Return X0
	264 Call 0x1C17F20
	265 Call 0x1C17F28
	266 Call 0x1C17F44
	267 Move X1, X31
	268 Call 0x1C17DEC

Method: System.Object[] buildVoiceRemoveMessage(Photon.Voice.LocalVoice v)

Disassembly:
	0x0356C4A4 ADRP X0, 0xBC9000
	0x0356C4A8 LDR X0, [X0 + 0xE40]
	0x0356C4AC BL 0x1C16CF4
	0x0356C4B0 MOVZ W8, 0x1
	0x0356C4B4 STRB W8, [X23 + 0xE3B]
	0x0356C4B8 MOVI V0.2D, 0x0
	0x0356C4BC STR X31, [X31 + 0x40]
	0x0356C4C0 STP V0, V0, [X31 + 0x20]
	0x0356C4C4 STR V0, [X31 + 0x1]
	0x0356C4C8 CBZ X22, 0x356C500
	0x0356C4CC ADRP X8, 0xB8F000
	0x0356C4D0 LDR X8, [X8 + 0xC98]
	0x0356C4D4 LDR X9, [X22]
	0x0356C4D8 LDR X8, [X8]
	0x0356C4DC LDRB W11, [X9 + 0x130]
	0x0356C4E0 LDRB W10, [X8 + 0x130]
	0x0356C4E4 CMP W11, W10
	0x0356C4E8 B.CC 0x356C500
	0x0356C4EC LDR X9, [X9 + 0xC8]
	0x0356C4F0 ADD X9, X9, X10, 0x3, LSL
	0x0356C4F4 LDUR X9, [X9 - 0x8]
	0x0356C4F8 CMP X9, X8
	0x0356C4FC B.EQ 0x356C7CC
	0x0356C500 ADRP X8, 0xB87000
	0x0356C504 LDR X8, [X8 + 0x618]
	0x0356C508 MOV X0, X22
	0x0356C50C LDR X1, [X8]
	0x0356C510 BL 0x1C16E00
	0x0356C514 CBZ X0, 0x356C800
	0x0356C518 LDR W29, [X0 + 0x18]
	0x0356C51C MOV X23, X0
	0x0356C520 CMP W29, 0x2
	0x0356C524 B.LE 0x356C580
	0x0356C528 MOV W9, W31
	0x0356C52C MOV X22, X31
	0x0356C530 MOVZ W8, 0x1
	0x0356C534 LDR W10, [X23 + 0x18]
	0x0356C538 CMP W9, W10
	0x0356C53C B.CS 0x356C804
	0x0356C540 ADD W11, W9, 0x1
	0x0356C544 CMP W11, W10
	0x0356C548 B.CS 0x356C804
	0x0356C54C ADD W12, W9, 0x2
	0x0356C550 CMP W12, W10
	0x0356C554 B.CS 0x356C804
	0x0356C558 ADD X9, X23, W9, SXTW
	0x0356C55C ADD X11, X23, W11, SXTW
	0x0356C560 LDRB W26, [X9 + 0x20]
	0x0356C564 ADD X9, X23, W12, SXTW
	0x0356C568 LDRB W24, [X11 + 0x20]
	0x0356C56C LDRB W25, [X9 + 0x20]
	0x0356C570 CMP W26, 0x4
	0x0356C574 B.CS 0x356C5AC
	0x0356C578 MOV W27, W31
	0x0356C57C B 0x356C5C0
	0x0356C580 ADRP X8, 0xBC9000
	0x0356C584 LDR X19, [X21 + 0x1A0]
	0x0356C588 LDR X8, [X8 + 0xE40]
	0x0356C58C LDR X20, [X8]
	0x0356C590 CBZ X22, 0x356C608
	0x0356C594 LDR X8, [X22]
	0x0356C598 MOV X0, X22
	0x0356C59C LDP X9, X1, [X8 + 0x168]
	0x0356C5A0 BLR X9
	0x0356C5A4 MOV X1, X0
	0x0356C5A8 B 0x356C60C
	0x0356C5AC CMP W10, 0x3
	0x0356C5B0 B.LS 0x356C804
	0x0356C5B4 LDRB W27, [X23 + 0x23]
	0x0356C5B8 CMP W26, 0x5
	0x0356C5BC B.CS 0x356C6EC
	0x0356C5C0 MOV W28, W25
	0x0356C5C4 TBZ X8, 0x0, 0x356C6FC
	0x0356C5C8 ADRP X8, 0xBB0000
	0x0356C5CC LDR X8, [X8 + 0xE18]
	0x0356C5D0 LDR X0, [X8]
	0x0356C5D4 LDR W8, [X0 + 0xE0]
	0x0356C5D8 CBNZ W8, 0x356C5E0
	0x0356C5DC BL 0x1C16DFC
	0x0356C5E0 SUB W3, W29, W26
	0x0356C5E4 ADD X0, X31, 0x10
	0x0356C5E8 MOV X1, X23
	0x0356C5EC MOV W2, W26
	0x0356C5F0 MOV W4, W27
	0x0356C5F4 MOV W5, W28
	0x0356C5F8 MOV X6, X31
	0x0356C5FC MOV X7, X31
	0x0356C600 BL 0x3555C0C
	0x0356C604 B 0x356C760
	0x0356C608 MOV X1, X31
	0x0356C60C MOV X0, X20
	0x0356C610 MOV X2, X31
	0x0356C614 BL 0x321B938

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xE74000
	007 Move X21, 0xB88000
	008 Move W8, [X19+3645]
	009 Move X21, [X21+1560]
	010 Move X20, X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xB88000
	016 Move X0, [X0+1560]
	017 Call 0x1C17CF4
	018 Move X0, 0xB89000
	019 Move X0, [X0+2520]
	020 Call 0x1C17CF4
	021 Move X0, 0xBCA000
	022 Move X0, [X0+3632]
	023 Call 0x1C17CF4
	024 Move X0, 0xB88000
	025 Move X0, [X0+2512]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+3645], W8
	029 Move X0, [X21]
	030 Move W1, 1
	031 Call 0x1C17D6C
	032 Compare X20, 0
	033 JumpIfEqual {105}
	034 Move X19, X0
	035 Compare X0, 0
	036 JumpIfEqual {105}
	037 Move W8, [X19+24]
	038 Compare W8, 0
	039 JumpIfEqual {104}
	040 Move W8, [X20+128]
	041 Move X9, 0xB88000
	042 Move X9, [X9+2512]
	043 Move X21, 0xB89000
	044 Move [X19+32], W8
	045 Move W1, 3
	046 Move X0, [X9]
	047 Move X21, [X21+2520]
	048 Call 0x1C17D6C
	049 Move X20, X0
	050 Move X0, [X21]
	051 Add X1, X31, 12
	052 Move [X31+12], W31
	053 Call 0x1C17E04
	054 Compare X20, 0
	055 JumpIfEqual {105}
	056 Move X21, X0
	057 Compare X0, 0
	058 JumpIfEqual {65}
	059 Move X8, [X20]
	060 Move X0, X21
	061 Move X1, [X8+64]
	062 Call 0x1C17E00
	063 Compare X0, 0
	064 JumpIfEqual {106}
	065 Move W8, [X20+24]
	066 Compare W8, 0
	067 JumpIfEqual {104}
	068 Move X8, 0xBCA000
	069 Move X8, [X8+3632]
	070 Move [X20+32], X21
	071 Add X1, X31, 8
	072 Move X0, [X8]
	073 Move W8, 2
	074 Move [X31+8], W8
	075 Call 0x1C17E04
	076 Move X21, X0
	077 Compare X0, 0
	078 JumpIfEqual {85}
	079 Move X8, [X20]
	080 Move X0, X21
	081 Move X1, [X8+64]
	082 Call 0x1C17E00
	083 Compare X0, 0
	084 JumpIfEqual {106}
	085 Move W8, [X20+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X8, [X20]
	088 Move [X20+40], X21
	089 Move X0, X19
	090 Move X1, [X8+64]
	091 Call 0x1C17E00
	092 Compare X0, 0
	093 JumpIfEqual {106}
	094 Move W8, [X20+24]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move [X20+48], X19
	097 Move X0, X20
	098 Move X20, [X31+32]
	099 Move X19, [X31+40]
	100 Move X30, [X31+16]
	101 Move X21, [X31+24]
	102 Add X31, X31, 48
	103 Return X0
	104 Call 0x1C17F28
	105 Call 0x1C17F20
	106 Call 0x1C17F44
	107 Move X1, X31
	108 Call 0x1C17DEC

Method: System.Object[] buildFrameMessage(System.Byte voiceId, System.Byte evNumber, System.Byte frNumber, System.ArraySegment`1<System.Byte> data, Photon.Voice.FrameFlags flags)

Disassembly:
	0x0356C638 LDR X8, [X21 + 0x38]
	0x0356C63C LDR X0, [X8 + 0x10]
	0x0356C640 LDRB W8, [X0 + 0x135]
	0x0356C644 TBNZ X8, 0x0, 0x356C64C
	0x0356C648 BL 0x1C5C684
	0x0356C64C LDR W8, [X0 + 0xE0]
	0x0356C650 CBNZ W8, 0x356C658
	0x0356C654 BL 0x1C16DFC
	0x0356C658 LDR X8, [X21 + 0x38]
	0x0356C65C LDR X0, [X8 + 0x10]
	0x0356C660 LDRB W8, [X0 + 0x135]
	0x0356C664 TBNZ X8, 0x0, 0x356C66C
	0x0356C668 BL 0x1C5C684
	0x0356C66C CBZ X19, 0x356C800
	0x0356C670 ADRP X10, 0xB8C000
	0x0356C674 LDR X9, [X0 + 0xB8]
	0x0356C678 LDR X8, [X19]
	0x0356C67C LDR X10, [X10 + 0x348]
	0x0356C680 LDR X21, [X9]
	0x0356C684 LDRH W9, [X8 + 0x12E]
	0x0356C688 LDR X1, [X10]
	0x0356C68C CBZ X9, 0x356C6B0
	0x0356C690 LDR X10, [X8 + 0xB0]
	0x0356C694 ADD X10, X10, 0x8
	0x0356C698 LDUR X11, [X10 - 0x8]
	0x0356C69C CMP X11, X1
	0x0356C6A0 B.EQ 0x356C6C0
	0x0356C6A4 SUBS X9, X9, 0x1
	0x0356C6A8 ADD X10, X10, 0x10
	0x0356C6AC B.NE 0x356C698
	0x0356C6B0 MOVZ W2, 0x1
	0x0356C6B4 MOV X0, X19
	0x0356C6B8 BL 0x1C5C788
	0x0356C6BC B 0x356C6D0
	0x0356C6C0 LDR W9, [X10]
	0x0356C6C4 ADD W9, W9, 0x1
	0x0356C6C8 ADD X8, X8, W9, 0x4, SXTW
	0x0356C6CC ADD X0, X8, 0x138
	0x0356C6D0 LDP X8, X4, [X0]
	0x0356C6D4 MOVZ W1, 0x1
	0x0356C6D8 MOV X0, X19
	0x0356C6DC MOV X2, X20
	0x0356C6E0 MOV X3, X21
	0x0356C6E4 BLR X8
	0x0356C6E8 B 0x356C7AC
	0x0356C6EC CMP W10, 0x4
	0x0356C6F0 B.LS 0x356C804
	0x0356C6F4 LDRB W28, [X23 + 0x24]
	0x0356C6F8 TBNZ X8, 0x0, 0x356C5C8
	0x0356C6FC STR X21, [X31 + 0x8]
	0x0356C700 ADRP X8, 0xBB0000
	0x0356C704 LDR X8, [X8 + 0xE18]
	0x0356C708 MOV W21, W24
	0x0356C70C MOV W24, W19
	0x0356C710 MOV W19, W20
	0x0356C714 LDR X0, [X8]
	0x0356C718 LDR X23, [X22 + 0x10]
	0x0356C71C LDR W20, [X22 + 0x18]
	0x0356C720 LDR W8, [X0 + 0xE0]
	0x0356C724 CBNZ W8, 0x356C72C
	0x0356C728 BL 0x1C16DFC
	0x0356C72C ADD W2, W20, W26
	0x0356C730 SUB W3, W29, W26
	0x0356C734 ADD X0, X31, 0x10
	0x0356C738 MOV X1, X23
	0x0356C73C MOV W4, W27
	0x0356C740 MOV W5, W28
	0x0356C744 MOV X6, X22
	0x0356C748 MOV X7, X31
	0x0356C74C BL 0x3555C0C
	0x0356C750 MOV W20, W19
	0x0356C754 MOV W19, W24
	0x0356C758 MOV W24, W21
	0x0356C75C LDR X21, [X31 + 0x8]
	0x0356C760 LDR X0, [X21 + 0x188]
	0x0356C764 CBZ X0, 0x356C800
	0x0356C768 CMP W19, W20
	0x0356C76C CSET W5, EQ
	0x0356C770 ADD X4, X31, 0x10
	0x0356C774 MOV W1, W19
	0x0356C778 MOV W2, W24
	0x0356C77C MOV W3, W25
	0x0356C780 MOV X6, X31
	0x0356C784 BL 0x35652A0
	0x0356C788 ADRP X8, 0xBB0000
	0x0356C78C LDR X8, [X8 + 0xE18]
	0x0356C790 LDR X0, [X8]
	0x0356C794 LDR W8, [X0 + 0xE0]
	0x0356C798 CBNZ W8, 0x356C7A0
	0x0356C79C BL 0x1C16DFC
	0x0356C7A0 ADD X0, X31, 0x10
	0x0356C7A4 MOV X1, X31
	0x0356C7A8 BL 0x3555CB0
	0x0356C7AC LDP X20, X19, [X31 + 0xA0]
	0x0356C7B0 LDP X22, X21, [X31 + 0x90]
	0x0356C7B4 LDP X24, X23, [X31 + 0x80]
	0x0356C7B8 LDP X26, X25, [X31 + 0x70]
	0x0356C7BC LDP X28, X27, [X31 + 0x60]
	0x0356C7C0 LDP X29, X30, [X31 + 0x50]
	0x0356C7C4 ADD X31, X31, 0xB0
	0x0356C7C8 RET
	0x0356C7CC LDR W29, [X22 + 0x1C]
	0x0356C7D0 CMP W29, 0x3
	0x0356C7D4 B.LT 0x356C7EC
	0x0356C7D8 LDR X23, [X22 + 0x10]
	0x0356C7DC CBZ X23, 0x356C7EC
	0x0356C7E0 LDR W9, [X22 + 0x18]
	0x0356C7E4 MOV W8, W31
	0x0356C7E8 B 0x356C534
	0x0356C7EC ADRP X8, 0xBC9000
	0x0356C7F0 LDR X19, [X21 + 0x1A0]
	0x0356C7F4 LDR X8, [X8 + 0xE40]
	0x0356C7F8 LDR X20, [X8]
	0x0356C7FC B 0x356C594
	0x0356C800 BL 0x1C16F20
	0x0356C804 BL 0x1C16F28
	0x0356C808 SUB X31, X31, 0xF0
	0x0356C80C STP X29, X30, [X31 + 0x90]
	0x0356C810 STP X28, X27, [X31 + 0xA0]
	0x0356C814 STP X26, X25, [X31 + 0xB0]
	0x0356C818 STP X24, X23, [X31 + 0xC0]
	0x0356C81C STP X22, X21, [X31 + 0xD0]
	0x0356C820 STP X20, X19, [X31 + 0xE0]
	0x0356C824 ADRP X22, 0xE73000
	0x0356C828 LDRB W8, [X22 + 0xE40]
	0x0356C82C MOV X23, X3
	0x0356C830 MOV W19, W2
	0x0356C834 MOV W20, W1
	0x0356C838 MOV X21, X0
	0x0356C83C TBNZ X8, 0x0, 0x356C878
	0x0356C840 ADRP X0, 0xB88000
	0x0356C844 LDR X0, [X0 + 0x9D8]
	0x0356C848 BL 0x1C16CF4
	0x0356C84C ADRP X0, 0xB90000
	0x0356C850 LDR X0, [X0 + 0x390]
	0x0356C854 BL 0x1C16CF4
	0x0356C858 ADRP X0, 0xB90000
	0x0356C85C LDR X0, [X0 + 0x2B8]
	0x0356C860 BL 0x1C16CF4
	0x0356C864 ADRP X0, 0xB87000
	0x0356C868 LDR X0, [X0 + 0x9D0]
	0x0356C86C BL 0x1C16CF4
	0x0356C870 MOVZ W8, 0x1
	0x0356C874 STRB W8, [X22 + 0xE40]
	0x0356C878 MOVI V0.2D, 0x0
	0x0356C87C STP V0, V0, [X31 + 0x70]
	0x0356C880 STR V0, [X31 + 0x6]
	0x0356C884 CBZ X23, 0x356C9F8
	0x0356C888 ADRP X8, 0xB87000
	0x0356C88C LDR X8, [X8 + 0x9D0]
	0x0356C890 MOV X0, X23
	0x0356C894 LDR X24, [X8]
	0x0356C898 MOV X1, X24
	0x0356C89C BL 0x1C16E00
	0x0356C8A0 CBZ X0, 0x356CA08
	0x0356C8A4 LDR W8, [X0 + 0x18]
	0x0356C8A8 MOV X22, X0
	0x0356C8AC CMP W8, 0x1
	0x0356C8B0 B.LT 0x356C9D8
	0x0356C8B4 ADRP X27, 0xB90000
	0x0356C8B8 ADRP X28, 0xB90000
	0x0356C8BC ADRP X29, 0xB88000
	0x0356C8C0 LDR X27, [X27 + 0x2B8]
	0x0356C8C4 LDR X28, [X28 + 0x390]
	0x0356C8C8 LDR X29, [X29 + 0x9D8]
	0x0356C8CC MOV W26, W31
	0x0356C8D0 CMP W26, W8
	0x0356C8D4 B.CS 0x356CA04
	0x0356C8D8 ADD X8, X22, W26, 0x3, SXTW
	0x0356C8DC LDR X23, [X8 + 0x20]
	0x0356C8E0 CBZ X23, 0x356C9F8
	0x0356C8E4 LDR X8, [X23]
	0x0356C8E8 LDR X1, [X27]
	0x0356C8EC LDRB W10, [X8 + 0x130]
	0x0356C8F0 LDRB W9, [X1 + 0x130]
	0x0356C8F4 CMP W10, W9
	0x0356C8F8 B.CC 0x356C9FC
	0x0356C8FC LDR X8, [X8 + 0xC8]
	0x0356C900 ADD X8, X8, X9, 0x3, LSL
	0x0356C904 LDUR X8, [X8 - 0x8]
	0x0356C908 CMP X8, X1
	0x0356C90C B.NE 0x356C9FC
	0x0356C910 LDR X2, [X28]
	0x0356C914 MOVZ W1, 0x1
	0x0356C918 MOV X0, X23
	0x0356C91C BL 0x29D3494
	0x0356C920 CBZ X0, 0x356C9F8
	0x0356C924 LDR X8, [X0]
	0x0356C928 LDR X1, [X29]
	0x0356C92C LDR X8, [X8 + 0x40]
	0x0356C930 LDR X9, [X1 + 0x40]
	0x0356C934 CMP X8, X9
	0x0356C938 B.NE 0x356CA00
	0x0356C93C BL 0x1C16E08
	0x0356C940 LDR X2, [X28]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+48], X26
	004 Move [X31+56], X25
	005 Move [X31+64], X24
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X26, 0xE74000
	012 Move X19, 0xB88000
	013 Move W8, [X26+3646]
	014 Move X19, [X19+2512]
	015 Move W20, W6
	016 Move X21, X5
	017 Move X22, X4
	018 Move W23, W3
	019 Move W24, W2
	020 Move W25, W1
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {36}
	025 Move X0, 0xBB0000
	026 Move X0, [X0+1456]
	027 Call 0x1C17CF4
	028 Move X0, 0xB89000
	029 Move X0, [X0+2520]
	030 Call 0x1C17CF4
	031 Move X0, 0xB88000
	032 Move X0, [X0+2512]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X26+3646], W8
	036 Move X0, [X19]
	037 And W8, W24, 255
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W1, 4
	040 Call 0x1C17D6C
	041 Move X26, 0xB89000
	042 Move X26, [X26+2520]
	043 Move X19, X0
	044 Add X1, X31, 44
	045 Move [X31+44], W25
	046 Move X0, [X26]
	047 Call 0x1C17E04
	048 Compare X19, 0
	049 JumpIfEqual {221}
	050 Move X23, X0
	051 Compare X0, 0
	052 JumpIfEqual {59}
	053 Move X8, [X19]
	054 Move X0, X23
	055 Move X1, [X8+64]
	056 Call 0x1C17E00
	057 Compare X0, 0
	058 JumpIfEqual {218}
	059 Move W8, [X19+24]
	060 Compare W8, 0
	061 JumpIfEqual {217}
	062 Move [X19+32], X23
	063 Move X0, [X26]
	064 Add X1, X31, 40
	065 Move [X31+40], W24
	066 Call 0x1C17E04
	067 Move X23, X0
	068 Compare X0, 0
	069 JumpIfEqual {76}
	070 Move X8, [X19]
	071 Move X0, X23
	072 Move X1, [X8+64]
	073 Call 0x1C17E00
	074 Compare X0, 0
	075 JumpIfEqual {218}
	076 Move W8, [X19+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move [X19+40], X23
	079 Move X8, 0xBB0000
	080 Move X8, [X8+1456]
	081 Add X1, X31, 16
	082 Move [X31+16], X22
	083 Move [X31+24], X21
	084 Move X0, [X8]
	085 Call 0x1C17E04
	086 Move X21, X0
	087 Compare X0, 0
	088 JumpIfEqual {95}
	089 Move X8, [X19]
	090 Move X0, X21
	091 Move X1, [X8+64]
	092 Call 0x1C17E00
	093 Compare X0, 0
	094 JumpIfEqual {218}
	095 Move W8, [X19+24]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move [X19+48], X21
	098 Move X0, [X26]
	099 Add X1, X31, 12
	100 Move [X31+12], W20
	101 Call 0x1C17E04
	102 Move X20, X0
	103 Compare X0, 0
	104 JumpIfEqual {111}
	105 Move X8, [X19]
	106 Move X0, X20
	107 Move X1, [X8+64]
	108 Call 0x1C17E00
	109 Compare X0, 0
	110 JumpIfEqual {218}
	111 Move W8, [X19+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move [X19+56], X20
	114 Move W1, 5
	115 Call 0x1C17D6C
	116 Move X26, 0xB89000
	117 Move X26, [X26+2520]
	118 Move X19, X0
	119 Add X1, X31, 44
	120 Move [X31+44], W25
	121 Move X0, [X26]
	122 Call 0x1C17E04
	123 Compare X19, 0
	124 JumpIfEqual {221}
	125 Move X25, X0
	126 Compare X0, 0
	127 JumpIfEqual {134}
	128 Move X8, [X19]
	129 Move X0, X25
	130 Move X1, [X8+64]
	131 Call 0x1C17E00
	132 Compare X0, 0
	133 JumpIfEqual {218}
	134 Move W8, [X19+24]
	135 Compare W8, 0
	136 JumpIfEqual {217}
	137 Move [X19+32], X25
	138 Move X0, [X26]
	139 Add X1, X31, 40
	140 Move [X31+40], W24
	141 Call 0x1C17E04
	142 Move X24, X0
	143 Compare X0, 0
	144 JumpIfEqual {151}
	145 Move X8, [X19]
	146 Move X0, X24
	147 Move X1, [X8+64]
	148 Call 0x1C17E00
	149 Compare X0, 0
	150 JumpIfEqual {218}
	151 Move W8, [X19+24]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move [X19+40], X24
	154 Move X8, 0xBB0000
	155 Move X8, [X8+1456]
	156 Add X1, X31, 16
	157 Move [X31+16], X22
	158 Move [X31+24], X21
	159 Move X0, [X8]
	160 Call 0x1C17E04
	161 Move X21, X0
	162 Compare X0, 0
	163 JumpIfEqual {170}
	164 Move X8, [X19]
	165 Move X0, X21
	166 Move X1, [X8+64]
	167 Call 0x1C17E00
	168 Compare X0, 0
	169 JumpIfEqual {218}
	170 Move W8, [X19+24]
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move [X19+48], X21
	173 Move X0, [X26]
	174 Add X1, X31, 12
	175 Move [X31+12], W20
	176 Call 0x1C17E04
	177 Move X20, X0
	178 Compare X0, 0
	179 JumpIfEqual {186}
	180 Move X8, [X19]
	181 Move X0, X20
	182 Move X1, [X8+64]
	183 Call 0x1C17E00
	184 Compare X0, 0
	185 JumpIfEqual {218}
	186 Move W8, [X19+24]
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move [X19+56], X20
	189 Move X0, [X26]
	190 Add X1, X31, 8
	191 Move [X31+8], W23
	192 Call 0x1C17E04
	193 Move X20, X0
	194 Compare X0, 0
	195 JumpIfEqual {202}
	196 Move X8, [X19]
	197 Move X0, X20
	198 Move X1, [X8+64]
	199 Call 0x1C17E00
	200 Compare X0, 0
	201 JumpIfEqual {218}
	202 Move W8, [X19+24]
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move [X19+64], X20
	205 Move X0, X19
	206 Move X20, [X31+96]
	207 Move X19, [X31+104]
	208 Move X22, [X31+80]
	209 Move X21, [X31+88]
	210 Move X24, [X31+64]
	211 Move X23, [X31+72]
	212 Move X26, [X31+48]
	213 Move X25, [X31+56]
	214 Move X30, [X31+32]
	215 Add X31, X31, 112
	216 Return X0
	217 Call 0x1C17F28
	218 Call 0x1C17F44
	219 Move X1, X31
	220 Call 0x1C17DEC
	221 Call 0x1C17F20

Method: System.Void onVoiceEvent(System.Object content0, System.Int32 channelId, System.Int32 playerId, System.Boolean isLocalPlayer)

Disassembly:
	0x0356CBDC LDR X1, [X24]
	0x0356CBE0 LDR X8, [X8 + 0x40]
	0x0356CBE4 LDR X9, [X1 + 0x40]
	0x0356CBE8 CMP X8, X9
	0x0356CBEC B.NE 0x356CDDC
	0x0356CBF0 BL 0x1C16E08
	0x0356CBF4 LDR X2, [X22]
	0x0356CBF8 LDR W28, [X0]
	0x0356CBFC MOVZ W1, 0x5
	0x0356CC00 MOV X0, X20
	0x0356CC04 BL 0x29D3494
	0x0356CC08 CBZ X0, 0x356CDD8
	0x0356CC0C LDR X8, [X0]
	0x0356CC10 LDR X1, [X24]
	0x0356CC14 LDR X8, [X8 + 0x40]
	0x0356CC18 LDR X9, [X1 + 0x40]
	0x0356CC1C CMP X8, X9
	0x0356CC20 B.NE 0x356CDDC
	0x0356CC24 ADRP X29, 0xBC9000
	0x0356CC28 LDR X29, [X29 + 0xE48]
	0x0356CC2C BL 0x1C16E08
	0x0356CC30 LDR X2, [X29]
	0x0356CC34 LDR W21, [X0]
	0x0356CC38 MOVZ W1, 0x6
	0x0356CC3C MOV X0, X20
	0x0356CC40 BL 0x29D3728
	0x0356CC44 TBZ X0, 0x0, 0x356CC80
	0x0356CC48 LDR X2, [X22]
	0x0356CC4C MOVZ W1, 0x6
	0x0356CC50 MOV X0, X20
	0x0356CC54 BL 0x29D3494
	0x0356CC58 CBZ X0, 0x356CDD8
	0x0356CC5C LDR X8, [X0]
	0x0356CC60 LDR X1, [X24]
	0x0356CC64 LDR X8, [X8 + 0x40]
	0x0356CC68 LDR X9, [X1 + 0x40]
	0x0356CC6C CMP X8, X9
	0x0356CC70 B.NE 0x356CDDC
	0x0356CC74 BL 0x1C16E08
	0x0356CC78 LDR W27, [X0]
	0x0356CC7C B 0x356CC84
	0x0356CC80 MOV W27, W31
	0x0356CC84 LDR X2, [X29]
	0x0356CC88 MOVZ W1, 0x7
	0x0356CC8C MOV X0, X20
	0x0356CC90 BL 0x29D3728
	0x0356CC94 STP W27, W21, [X31 + 0x8]
	0x0356CC98 TBZ X0, 0x0, 0x356CCD4
	0x0356CC9C LDR X2, [X22]
	0x0356CCA0 MOVZ W1, 0x7
	0x0356CCA4 MOV X0, X20
	0x0356CCA8 BL 0x29D3494
	0x0356CCAC CBZ X0, 0x356CDD8
	0x0356CCB0 LDR X8, [X0]
	0x0356CCB4 LDR X1, [X24]
	0x0356CCB8 LDR X8, [X8 + 0x40]
	0x0356CCBC LDR X9, [X1 + 0x40]
	0x0356CCC0 CMP X8, X9
	0x0356CCC4 B.NE 0x356CDDC
	0x0356CCC8 BL 0x1C16E08
	0x0356CCCC LDR W21, [X0]
	0x0356CCD0 B 0x356CCD8
	0x0356CCD4 MOV W21, W31
	0x0356CCD8 LDR X2, [X29]
	0x0356CCDC MOVZ W1, 0x8
	0x0356CCE0 MOV X0, X20
	0x0356CCE4 MOV W27, W26
	0x0356CCE8 BL 0x29D3728
	0x0356CCEC MOV W26, W25
	0x0356CCF0 TBZ X0, 0x0, 0x356CD30
	0x0356CCF4 LDR X2, [X22]
	0x0356CCF8 MOVZ W1, 0x8
	0x0356CCFC MOV X0, X20
	0x0356CD00 BL 0x29D3494
	0x0356CD04 CBZ X0, 0x356CDD8
	0x0356CD08 LDR X8, [X0]
	0x0356CD0C LDR X1, [X24]
	0x0356CD10 LDR X8, [X8 + 0x40]
	0x0356CD14 LDR X9, [X1 + 0x40]
	0x0356CD18 CMP X8, X9
	0x0356CD1C B.NE 0x356CDDC
	0x0356CD20 MOV W25, W23
	0x0356CD24 BL 0x1C16E08
	0x0356CD28 LDR W23, [X0]
	0x0356CD2C B 0x356CD38
	0x0356CD30 MOV W25, W23
	0x0356CD34 MOV W23, W31
	0x0356CD38 LDR X2, [X29]
	0x0356CD3C MOVZ W1, 0x9
	0x0356CD40 MOV X0, X20
	0x0356CD44 BL 0x29D3728
	0x0356CD48 TBZ X0, 0x0, 0x356CD84
	0x0356CD4C LDR X2, [X22]
	0x0356CD50 MOVZ W1, 0x9
	0x0356CD54 MOV X0, X20
	0x0356CD58 BL 0x29D3494
	0x0356CD5C CBZ X0, 0x356CDD8
	0x0356CD60 LDR X8, [X0]
	0x0356CD64 LDR X1, [X24]
	0x0356CD68 LDR X8, [X8 + 0x40]
	0x0356CD6C LDR X9, [X1 + 0x40]
	0x0356CD70 CMP X8, X9
	0x0356CD74 B.NE 0x356CDDC
	0x0356CD78 BL 0x1C16E08
	0x0356CD7C LDR W24, [X0]
	0x0356CD80 B 0x356CD88
	0x0356CD84 MOV W24, W31
	0x0356CD88 LDR X2, [X22]
	0x0356CD8C MOVZ W1, 0xA
	0x0356CD90 MOV X0, X20
	0x0356CD94 BL 0x29D3494
	0x0356CD98 LDR W9, [X31 + 0xC]
	0x0356CD9C LDR W8, [X31 + 0x8]
	0x0356CDA0 STP W25, W26, [X19]
	0x0356CDA4 STP W27, W28, [X19 + 0x8]
	0x0356CDA8 STP W21, W23, [X19 + 0x18]
	0x0356CDAC STP W9, W8, [X19 + 0x10]
	0x0356CDB0 STP W24, W31, [X19 + 0x20]
	0x0356CDB4 STR X0, [X19 + 0x28]
	0x0356CDB8 LDP X20, X19, [X31 + 0x60]
	0x0356CDBC LDP X22, X21, [X31 + 0x50]
	0x0356CDC0 LDP X24, X23, [X31 + 0x40]
	0x0356CDC4 LDP X26, X25, [X31 + 0x30]
	0x0356CDC8 LDP X28, X27, [X31 + 0x20]
	0x0356CDCC LDP X29, X30, [X31 + 0x10]
	0x0356CDD0 ADD X31, X31, 0x70
	0x0356CDD4 RET
	0x0356CDD8 BL 0x1C16F20
	0x0356CDDC BL 0x1C171E0
	0x0356CDE0 STR X30, [X31 - 0x20]!
	0x0356CDE4 STP X20, X19, [X31 + 0x10]
	0x0356CDE8 ADRP X19, 0xE73000
	0x0356CDEC ADRP X20, 0xBC9000
	0x0356CDF0 LDRB W8, [X19 + 0xE43]
	0x0356CDF4 LDR X20, [X20 + 0x448]
	0x0356CDF8 TBNZ X8, 0x0, 0x356CE10
	0x0356CDFC ADRP X0, 0xBC9000
	0x0356CE00 LDR X0, [X0 + 0x448]
	0x0356CE04 BL 0x1C16CF4
	0x0356CE08 MOVZ W8, 0x1
	0x0356CE0C STRB W8, [X19 + 0xE43]
	0x0356CE10 LDR X8, [X20]
	0x0356CE14 LDP X20, X19, [X31 + 0x10]
	0x0356CE18 MOVZ W9, 0x101
	0x0356CE1C MOVZ W10, 0x1
	0x0356CE20 LDR X8, [X8 + 0xB8]
	0x0356CE24 STRH W9, [X8]
	0x0356CE28 STRB W10, [X8 + 0x2]
	0x0356CE2C LDR X30, [X31], #0x20
	0x0356CE30 RET
	0x0356CE34 SUB X31, X31, 0xB0
	0x0356CE38 STP X29, X30, [X31 + 0x50]
	0x0356CE3C STP X28, X27, [X31 + 0x60]
	0x0356CE40 STP X26, X25, [X31 + 0x70]
	0x0356CE44 STP X24, X23, [X31 + 0x80]
	0x0356CE48 STP X22, X21, [X31 + 0x90]
	0x0356CE4C STP X20, X19, [X31 + 0xA0]
	0x0356CE50 ADRP X21, 0xE73000
	0x0356CE54 ADRP X19, 0xBC9000
	0x0356CE58 LDRB W8, [X21 + 0xE44]
	0x0356CE5C LDR X19, [X19 + 0xE50]
	0x0356CE60 MOV W22, W4
	0x0356CE64 MOV W24, W3
	0x0356CE68 MOV W25, W2
	0x0356CE6C MOV X23, X1
	0x0356CE70 MOV X20, X0
	0x0356CE74 TBNZ X8, 0x0, 0x356CFA0
	0x0356CE78 ADRP X0, 0xB87000
	0x0356CE7C LDR X0, [X0 + 0x990]
	0x0356CE80 BL 0x1C16CF4
	0x0356CE84 ADRP X0, 0xBC9000
	0x0356CE88 LDR X0, [X0 + 0xE58]
	0x0356CE8C BL 0x1C16CF4
	0x0356CE90 ADRP X0, 0xBC9000
	0x0356CE94 LDR X0, [X0 + 0xE60]
	0x0356CE98 BL 0x1C16CF4
	0x0356CE9C ADRP X0, 0xB87000
	0x0356CEA0 LDR X0, [X0 + 0x9B0]
	0x0356CEA4 BL 0x1C16CF4
	0x0356CEA8 ADRP X0, 0xBB0000
	0x0356CEAC LDR X0, [X0 + 0xA10]
	0x0356CEB0 BL 0x1C16CF4
	0x0356CEB4 ADRP X0, 0xB87000
	0x0356CEB8 LDR X0, [X0 + 0x9C8]
	0x0356CEBC BL 0x1C16CF4
	0x0356CEC0 ADRP X0, 0xB87000
	0x0356CEC4 LDR X0, [X0 + 0xB58]
	0x0356CEC8 BL 0x1C16CF4
	0x0356CECC ADRP X0, 0xBC9000
	0x0356CED0 LDR X0, [X0 + 0xE50]
	0x0356CED4 BL 0x1C16CF4
	0x0356CED8 ADRP X0, 0xB8C000
	0x0356CEDC LDR X0, [X0 + 0x348]
	0x0356CEE0 BL 0x1C16CF4
	0x0356CEE4 ADRP X0, 0xB87000
	0x0356CEE8 LDR X0, [X0 + 0x758]
	0x0356CEEC BL 0x1C16CF4
	0x0356CEF0 ADRP X0, 0xB87000
	0x0356CEF4 LDR X0, [X0 + 0x9D0]
	0x0356CEF8 BL 0x1C16CF4
	0x0356CEFC ADRP X0, 0xBC9000
	0x0356CF00 LDR X0, [X0 + 0xE68]
	0x0356CF04 BL 0x1C16CF4
	0x0356CF08 ADRP X0, 0xBC9000
	0x0356CF0C LDR X0, [X0 + 0xE70]
	0x0356CF10 BL 0x1C16CF4
	0x0356CF14 ADRP X0, 0xBC9000
	0x0356CF18 LDR X0, [X0 + 0xE78]
	0x0356CF1C BL 0x1C16CF4
	0x0356CF20 ADRP X0, 0xBC9000
	0x0356CF24 LDR X0, [X0 + 0xE80]
	0x0356CF28 BL 0x1C16CF4
	0x0356CF2C ADRP X0, 0xB87000
	0x0356CF30 LDR X0, [X0 + 0x9E8]
	0x0356CF34 BL 0x1C16CF4
	0x0356CF38 ADRP X0, 0xBC9000
	0x0356CF3C LDR X0, [X0 + 0xE88]
	0x0356CF40 BL 0x1C16CF4
	0x0356CF44 ADRP X0, 0xB8C000
	0x0356CF48 LDR X0, [X0 + 0x780]
	0x0356CF4C BL 0x1C16CF4
	0x0356CF50 ADRP X0, 0xBC9000
	0x0356CF54 LDR X0, [X0 + 0xE90]
	0x0356CF58 BL 0x1C16CF4
	0x0356CF5C ADRP X0, 0xBC9000
	0x0356CF60 LDR X0, [X0 + 0xE98]
	0x0356CF64 BL 0x1C16CF4
	0x0356CF68 ADRP X0, 0xBC9000
	0x0356CF6C LDR X0, [X0 + 0xEA0]
	0x0356CF70 BL 0x1C16CF4
	0x0356CF74 ADRP X0, 0xBC9000
	0x0356CF78 LDR X0, [X0 + 0xEA8]
	0x0356CF7C BL 0x1C16CF4
	0x0356CF80 ADRP X0, 0xBC9000
	0x0356CF84 LDR X0, [X0 + 0xEB0]
	0x0356CF88 BL 0x1C16CF4
	0x0356CF8C ADRP X0, 0xB87000
	0x0356CF90 LDR X0, [X0 + 0xA20]
	0x0356CF94 BL 0x1C16CF4
	0x0356CF98 MOVZ W8, 0x1
	0x0356CF9C STRB W8, [X21 + 0xE44]
	0x0356CFA0 MOV X0, X20
	0x0356CFA4 MOV X1, X31
	0x0356CFA8 BL 0x33BDD8C
	0x0356CFAC STR X23, [X20 + 0x20]
	0x0356CFB0 LDR X0, [X19]
	0x0356CFB4 STR X23, [X31 + 0x8]
	0x0356CFB8 BL 0x1C16F10
	0x0356CFBC MOV X21, X0
	0x0356CFC0 BL 0x356DE14
	0x0356CFC4 ADRP X8, 0xB87000
	0x0356CFC8 LDR X8, [X8 + 0x9C8]
	0x0356CFCC STR X21, [X20 + 0x30]
	0x0356CFD0 LDR X21, [X8]
	0x0356CFD4 LDR X8, [X21 + 0x38]
	0x0356CFD8 CBNZ X8, 0x356CFE8
	0x0356CFDC MOV X0, X21
	0x0356CFE0 BL 0x1C5C6E0
	0x0356CFE4 LDR X8, [X21 + 0x38]
	0x0356CFE8 LDR X0, [X8 + 0x10]
	0x0356CFEC LDRB W8, [X0 + 0x135]
	0x0356CFF0 TBNZ X8, 0x0, 0x356CFF8
	0x0356CFF4 BL 0x1C5C684
	0x0356CFF8 LDR W8, [X0 + 0xE0]
	0x0356CFFC CBNZ W8, 0x356D004
	0x0356D000 BL 0x1C16DFC
	0x0356D004 LDR X8, [X21 + 0x38]
	0x0356D008 LDR X0, [X8 + 0x10]
	0x0356D00C LDRB W8, [X0 + 0x135]
	0x0356D010 TBNZ X8, 0x0, 0x356D018
	0x0356D014 BL 0x1C5C684
	0x0356D018 ADRP X9, 0xBAF000
	0x0356D01C LDR X8, [X0 + 0xB8]
	0x0356D020 LDR X9, [X9 + 0xA10]
	0x0356D024 LDR X23, [X8]
	0x0356D028 LDR X0, [X9]
	0x0356D02C BL 0x1C16F10
	0x0356D030 ADRP X8, 0xBC8000
	0x0356D034 LDR X8, [X8 + 0xEA0]
	0x0356D038 MOV X21, X0
	0x0356D03C LDR X1, [X8]
	0x0356D040 MOV X2, X23
	0x0356D044 MOV X3, X31
	0x0356D048 BL 0x3BF21F8
	0x0356D04C ADRP X19, 0xB86000
	0x0356D050 LDR X19, [X19 + 0x9D0]
	0x0356D054 STR X21, [X20 + 0x10]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X30
	003 Move [X31+80], X28
	004 Move [X31+88], X27
	005 Move [X31+96], X26
	006 Move [X31+104], X25
	007 Move [X31+112], X24
	008 Move [X31+120], X23
	009 Move [X31+128], X22
	010 Move [X31+136], X21
	011 Move [X31+144], X20
	012 Move [X31+152], X19
	013 Move X22, 0xE74000
	014 Move W8, [X22+3647]
	015 Move W21, W4
	016 Move W19, W3
	017 Move W23, W2
	018 Move X24, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {50}
	024 Move X0, 0xB88000
	025 Move X0, [X0+2504]
	026 Call 0x1C17CF4
	027 Move X0, 0xB88000
	028 Move X0, [X0+1560]
	029 Call 0x1C17CF4
	030 Move X0, 0xB89000
	031 Move X0, [X0+2520]
	032 Call 0x1C17CF4
	033 Move X0, 0xBB1000
	034 Move X0, [X0+3608]
	035 Call 0x1C17CF4
	036 Move X0, 0xBCA000
	037 Move X0, [X0+1000]
	038 Call 0x1C17CF4
	039 Move X0, 0xB8D000
	040 Move X0, [X0+840]
	041 Call 0x1C17CF4
	042 Move X0, 0xB88000
	043 Move X0, [X0+2512]
	044 Call 0x1C17CF4
	045 Move X0, 0xBCA000
	046 Move X0, [X0+3640]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X22+3647], W8
	050 NotImplemented "Instruction MOVI not yet implemented."
	051 Move [X31+48], X31
	052 Move [X31+16], V0
	053 Move [X31+24], V0
	054 Move [X31], V0
	055 Compare X24, 0
	056 JumpIfEqual {295}
	057 Move X8, 0xB88000
	058 Move X8, [X8+2512]
	059 Move X0, X24
	060 Move X25, [X8]
	061 Move X1, X25
	062 Call 0x1C17E00
	063 Compare X0, 0
	064 JumpIfEqual {298}
	065 Move W8, [X0+24]
	066 Move X22, X0
	067 Compare W8, 0
	068 JumpIfEqual {296}
	069 Move X0, [X22+32]
	070 Compare X0, 0
	071 JumpIfEqual {295}
	072 Move X28, 0xB89000
	073 Move X28, [X28+2520]
	074 Move X8, [X0]
	075 Move X1, [X28]
	076 Move X8, [X8+64]
	077 Move X9, [X1+64]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Call 0x1C17E08
	080 Move W9, [X0]
	081 Move W8, [X22+24]
	082 Compare W9, 0
	083 JumpIfEqual {124}
	084 Compare W8, 0
	085 JumpIfEqual {296}
	086 Move X0, [X22+32]
	087 Compare X0, 0
	088 JumpIfEqual {295}
	089 Move X8, [X0]
	090 Move X1, [X28]
	091 Move X8, [X8+64]
	092 Move X9, [X1+64]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Call 0x1C17E08
	095 Move W8, [X22+24]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X8, X0
	098 Move X0, [X22+40]
	099 Compare X0, 0
	100 JumpIfEqual {295}
	101 Move X9, [X0]
	102 Move X1, [X28]
	103 Move X9, [X9+64]
	104 Move X10, [X1+64]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move W23, [X8]
	107 Call 0x1C17E08
	108 Move W8, [X22+24]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X26, [X22+48]
	111 Move W24, [X0]
	112 Compare X26, 0
	113 JumpIfEqual {144}
	114 Move X8, 0xB88000
	115 Move X8, [X8+1560]
	116 Move X0, X26
	117 Move X27, [X8]
	118 Move X1, X27
	119 Call 0x1C17E00
	120 Compare X0, 0
	121 JumpIfEqual {301}
	122 Move W8, [X22+24]
	123 Move X25, X0
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X0, [X22+40]
	126 Compare X0, 0
	127 JumpIfEqual {295}
	128 Move X8, [X0]
	129 Move X1, [X28]
	130 Move X8, [X8+64]
	131 Move X9, [X1+64]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Call 0x1C17E08
	134 Move W8, [X0]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move W8, [X22+24]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X3, [X22+48]
	140 Move X0, X20
	141 Move W1, W23
	142 Move W2, W19
	143 Call PhotonTransportProtocol.onVoiceInfo, X0, X1, X2, X3
	144 Move X25, X31
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move W26, W31
	147 Move X0, [X22+56]
	148 Compare X0, 0
	149 JumpIfEqual {295}
	150 Move X8, 0xBCA000
	151 Move X8, [X8+1000]
	152 Move X9, [X0]
	153 Move X1, [X8]
	154 Move X8, [X9+64]
	155 Move X9, [X1+64]
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Call 0x1C17E08
	158 Move W8, [X22+24]
	159 Move W26, [X0]
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move W22, W24
	162 Move X0, [X22+64]
	163 Compare X0, 0
	164 JumpIfEqual {295}
	165 Move X8, [X0]
	166 Move X1, [X28]
	167 Move X8, [X8+64]
	168 Move X9, [X1+64]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Call 0x1C17E08
	171 Move W22, [X0]
	172 Move X8, 0xBB1000
	173 Move X8, [X8+3608]
	174 Move X0, [X8]
	175 Move W8, [X0+224]
	176 Compare W8, 0
	177 JumpIfNotEqual {179}
	178 Call 0x1C17DFC
	179 Add X0, X31, 0
	180 Move X1, X25
	181 Move W2, W26
	182 Move W3, W22
	183 Move X4, X31
	184 Call FrameBuffer..ctor, X0, X1, X2, X3
	185 Move X0, [X20+16]
	186 Compare X0, 0
	187 JumpIfEqual {295}
	188 And W5, W21, 1
	189 Add X4, X31, 0
	190 Move W1, W19
	191 Move W2, W23
	192 Move W3, W24
	193 Move X6, X31
	194 Call VoiceClient.onFrame, X0, X1, X2, X3, X4, X5
	195 Add X0, X31, 0
	196 Move X1, X31
	197 Call FrameBuffer.Release, X0
	198 Move X20, [X31+144]
	199 Move X19, [X31+152]
	200 Move X22, [X31+128]
	201 Move X21, [X31+136]
	202 Move X24, [X31+112]
	203 Move X23, [X31+120]
	204 Move X26, [X31+96]
	205 Move X25, [X31+104]
	206 Move X28, [X31+80]
	207 Move X27, [X31+88]
	208 Move X30, [X31+64]
	209 Add X31, X31, 160
	210 Return 
	211 Move W8, [X22+24]
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Move X3, [X22+48]
	214 Move X0, X20
	215 Move W2, W19
	216 Call PhotonTransportProtocol.onVoiceRemove, X0, X1, X2, X3
	217 Move W8, [X22+24]
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Move X8, 0xBCA000
	220 Move X19, [X20+24]
	221 Move X0, [X22+40]
	222 Move X8, [X8+3640]
	223 Move X20, [X8]
	224 Compare X0, 0
	225 JumpIfEqual {231}
	226 Move X8, [X0]
	227 Move X9, [X8+360]
	228 Move X1, [X8+368]
	229 NotImplemented "Instruction BLR not yet implemented."
	230 Move X1, X0
	231 Move X1, X31
	232 Move X0, X20
	233 Move X2, X31
	234 Call String.Concat, X0, X1
	235 Move X8, 0xB88000
	236 Move X8, [X8+2504]
	237 Move X20, X0
	238 Move X21, [X8]
	239 Move X8, [X21+56]
	240 Compare X8, 0
	241 JumpIfNotEqual {245}
	242 Move X0, X21
	243 Call 0x1C5D6E0
	244 Move X8, [X21+56]
	245 Move X0, [X8+16]
	246 Move W8, [X0+309]
	247 Move TEMP, X8
	248 And TEMP, TEMP, 1
	249 Compare TEMP, 1
	250 JumpIfEqual {252}
	251 Call 0x1C5D684
	252 Move W8, [X0+224]
	253 Compare W8, 0
	254 JumpIfNotEqual {256}
	255 Call 0x1C17DFC
	256 Move X8, [X21+56]
	257 Move X0, [X8+16]
	258 Move W8, [X0+309]
	259 Move TEMP, X8
	260 And TEMP, TEMP, 1
	261 Compare TEMP, 1
	262 JumpIfEqual {264}
	263 Call 0x1C5D684
	264 Compare X19, 0
	265 JumpIfEqual {295}
	266 Move X10, 0xB8D000
	267 Move X9, [X0+184]
	268 Move X8, [X19]
	269 Move X10, [X10+840]
	270 Move X21, [X9]
	271 NotImplemented "Instruction LDRH not yet implemented."
	272 Move X1, [X10]
	273 Compare X9, 0
	274 JumpIfEqual {281}
	275 Move X10, [X8+176]
	276 Add X10, X10, 8
	277 NotImplemented "Instruction LDUR not yet implemented."
	278 NotImplemented "Instruction CMP not yet implemented."
	279 Subtract X9, X9, 1
	280 Add X10, X10, 16
	281 Move W2, 1
	282 Move X0, X19
	283 Call 0x1C5D788
	284 Move W9, [X10]
	285 Add W9, W9, 1
	286 Add X8, X8, W9
	287 Add X0, X8, 312
	288 Move X8, [X0]
	289 Move X4, [X0+8]
	290 Move W1, 1
	291 Move X0, X19
	292 Move X2, X20
	293 Move X3, X21
	294 NotImplemented "Instruction BLR not yet implemented."
	295 Call 0x1C17F20
	296 Call 0x1C17F28
	297 Call 0x1C181E0
	298 Move X0, X24
	299 Move X1, X25
	300 Call 0x1C181E0
	301 Move X0, X26
	302 Move X1, X27
	303 Call 0x1C181E0

Method: System.Void onVoiceInfo(System.Int32 channelId, System.Int32 playerId, System.Object payload)

Disassembly:
	0x0356D808 LDR X8, [X21]
	0x0356D80C LDR X1, [X8 + 0x40]
	0x0356D810 MOV X0, X22
	0x0356D814 BL 0x1C16E00
	0x0356D818 CBZ X0, 0x356DBB8
	0x0356D81C LDR W8, [X21 + 0x18]
	0x0356D820 CBZ W8, 0x356DB9C
	0x0356D824 STR X22, [X21 + 0x20]
	0x0356D828 LDR W8, [X20 + 0x28]
	0x0356D82C LDR X0, [X27]
	0x0356D830 STR W8, [X31 + 0x4C]
	0x0356D834 ADD X1, X31, 0x4C
	0x0356D838 BL 0x1C16E04
	0x0356D83C MOV X22, X0
	0x0356D840 CBZ X0, 0x356D858
	0x0356D844 LDR X8, [X21]
	0x0356D848 LDR X1, [X8 + 0x40]
	0x0356D84C MOV X0, X22
	0x0356D850 BL 0x1C16E00
	0x0356D854 CBZ X0, 0x356DBC4
	0x0356D858 LDR W8, [X21 + 0x18]
	0x0356D85C CMP W8, 0x1
	0x0356D860 B.LS 0x356DBA0
	0x0356D864 STR X22, [X21 + 0x28]
	0x0356D868 LDR X0, [X27]
	0x0356D86C MOVZ W8, 0x1
	0x0356D870 STR W8, [X31 + 0x48]
	0x0356D874 ADD X1, X31, 0x48
	0x0356D878 BL 0x1C16E04
	0x0356D87C MOV X22, X0
	0x0356D880 CBZ X0, 0x356D898
	0x0356D884 LDR X8, [X21]
	0x0356D888 LDR X1, [X8 + 0x40]
	0x0356D88C MOV X0, X22
	0x0356D890 BL 0x1C16E00
	0x0356D894 CBZ X0, 0x356DBD0
	0x0356D898 LDR W8, [X21 + 0x18]
	0x0356D89C CMP W8, 0x2
	0x0356D8A0 B.LS 0x356DBA4
	0x0356D8A4 STR X22, [X21 + 0x30]
	0x0356D8A8 LDR X0, [X27]
	0x0356D8AC STR W24, [X31 + 0x2C]
	0x0356D8B0 LDR X19, [X31 + 0x8]
	0x0356D8B4 ADD X1, X31, 0x2C
	0x0356D8B8 BL 0x1C16E04
	0x0356D8BC ADRP X23, 0xB8B000
	0x0356D8C0 LDR X23, [X23 + 0x348]
	0x0356D8C4 MOV X22, X0
	0x0356D8C8 CBZ X0, 0x356D8E0
	0x0356D8CC LDR X8, [X21]
	0x0356D8D0 LDR X1, [X8 + 0x40]
	0x0356D8D4 MOV X0, X22
	0x0356D8D8 BL 0x1C16E00
	0x0356D8DC CBZ X0, 0x356DBDC
	0x0356D8E0 LDR W8, [X21 + 0x18]
	0x0356D8E4 CMP W8, 0x3
	0x0356D8E8 B.LS 0x356DBA8
	0x0356D8EC STR X22, [X21 + 0x38]
	0x0356D8F0 ADRP X10, 0xBC8000
	0x0356D8F4 LDR X8, [X19]
	0x0356D8F8 LDR X1, [X23]
	0x0356D8FC LDR X10, [X10 + 0xE70]
	0x0356D900 LDRH W9, [X8 + 0x12E]
	0x0356D904 LDR X22, [X10]
	0x0356D908 CBZ X9, 0x356D92C
	0x0356D90C LDR X10, [X8 + 0xB0]
	0x0356D910 ADD X10, X10, 0x8
	0x0356D914 LDUR X11, [X10 - 0x8]
	0x0356D918 CMP X11, X1
	0x0356D91C B.EQ 0x356DA0C
	0x0356D920 SUBS X9, X9, 0x1
	0x0356D924 ADD X10, X10, 0x10
	0x0356D928 B.NE 0x356D914
	0x0356D92C MOVZ W2, 0x1
	0x0356D930 MOV X0, X19
	0x0356D934 BL 0x1C5C788
	0x0356D938 B 0x356DA1C
	0x0356D93C ADRP X8, 0xBC8000
	0x0356D940 LDR X8, [X8 + 0xE90]
	0x0356D944 LDR X8, [X8]
	0x0356D948 STR X8, [X20 + 0x38]
	0x0356D94C LDR X0, [X19]
	0x0356D950 MOVZ W1, 0x1
	0x0356D954 BL 0x1C16D6C
	0x0356D958 ADRP X23, 0xB8B000
	0x0356D95C LDR X19, [X31 + 0x8]
	0x0356D960 LDR X23, [X23 + 0x348]
	0x0356D964 MOV X21, X0
	0x0356D968 CBZ X0, 0x356DB8C
	0x0356D96C LDR X22, [X20 + 0x38]
	0x0356D970 CBZ X22, 0x356D988
	0x0356D974 LDR X8, [X21]
	0x0356D978 LDR X1, [X8 + 0x40]
	0x0356D97C MOV X0, X22
	0x0356D980 BL 0x1C16E00
	0x0356D984 CBZ X0, 0x356DBAC
	0x0356D988 LDR W8, [X21 + 0x18]
	0x0356D98C CBZ W8, 0x356DB94
	0x0356D990 STR X22, [X21 + 0x20]
	0x0356D994 ADRP X10, 0xBC8000
	0x0356D998 LDR X8, [X19]
	0x0356D99C LDR X1, [X23]
	0x0356D9A0 LDR X10, [X10 + 0xEB0]
	0x0356D9A4 LDRH W9, [X8 + 0x12E]
	0x0356D9A8 LDR X22, [X10]
	0x0356D9AC CBZ X9, 0x356D9D0
	0x0356D9B0 LDR X10, [X8 + 0xB0]
	0x0356D9B4 ADD X10, X10, 0x8
	0x0356D9B8 LDUR X11, [X10 - 0x8]
	0x0356D9BC CMP X11, X1
	0x0356D9C0 B.EQ 0x356D9E0
	0x0356D9C4 SUBS X9, X9, 0x1
	0x0356D9C8 ADD X10, X10, 0x10
	0x0356D9CC B.NE 0x356D9B8
	0x0356D9D0 MOVZ W2, 0x1
	0x0356D9D4 MOV X0, X19
	0x0356D9D8 BL 0x1C5C788
	0x0356D9DC B 0x356D9F0
	0x0356D9E0 LDR W9, [X10]
	0x0356D9E4 ADD W9, W9, 0x1
	0x0356D9E8 ADD X8, X8, W9, 0x4, SXTW
	0x0356D9EC ADD X0, X8, 0x138
	0x0356D9F0 LDP X8, X4, [X0]
	0x0356D9F4 MOVZ W1, 0x1
	0x0356D9F8 MOV X0, X19
	0x0356D9FC MOV X2, X22
	0x0356DA00 MOV X3, X21
	0x0356DA04 BLR X8
	0x0356DA08 B 0x356DA34
	0x0356DA0C LDR W9, [X10]
	0x0356DA10 ADD W9, W9, 0x1

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+144], X29
	003 Move [X31+152], X30
	004 Move [X31+160], X28
	005 Move [X31+168], X27
	006 Move [X31+176], X26
	007 Move [X31+184], X25
	008 Move [X31+192], X24
	009 Move [X31+200], X23
	010 Move [X31+208], X22
	011 Move [X31+216], X21
	012 Move [X31+224], X20
	013 Move [X31+232], X19
	014 Move X22, 0xE73000
	015 Move W8, [X22+3648]
	016 Move X23, X3
	017 Move W19, W2
	018 Move W20, W1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xB88000
	025 Move X0, [X0+2520]
	026 Call 0x1C17CF4
	027 Move X0, 0xB90000
	028 Move X0, [X0+912]
	029 Call 0x1C17CF4
	030 Move X0, 0xB90000
	031 Move X0, [X0+696]
	032 Call 0x1C17CF4
	033 Move X0, 0xB87000
	034 Move X0, [X0+2512]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X22+3648], W8
	038 NotImplemented "Instruction MOVI not yet implemented."
	039 Move [X31+112], V0
	040 Move [X31+120], V0
	041 Move [X31+6], V0
	042 Compare X23, 0
	043 JumpIfEqual {144}
	044 Move X8, 0xB87000
	045 Move X8, [X8+2512]
	046 Move X0, X23
	047 Move X24, [X8]
	048 Move X1, X24
	049 Call 0x1C17E00
	050 Compare X0, 0
	051 JumpIfEqual {148}
	052 Move W8, [X0+24]
	053 Move X22, X0
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X27, 0xB90000
	056 Move X28, 0xB90000
	057 Move X29, 0xB88000
	058 Move X27, [X27+696]
	059 Move X28, [X28+912]
	060 Move X29, [X29+2520]
	061 Move W26, W31
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Add X8, X22, W26
	064 Move X23, [X8+32]
	065 Compare X23, 0
	066 JumpIfEqual {144}
	067 Move X8, [X23]
	068 Move X1, [X27]
	069 Move W10, [X8+304]
	070 Move W9, [X1+304]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X8, [X8+200]
	073 Add X8, X8, X9
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X2, [X28]
	077 Move W1, 1
	078 Move X0, X23
	079 Call Dictionary`2<Byte, Object>.get_Item, X0, X1
	080 Compare X0, 0
	081 JumpIfEqual {144}
	082 Move X8, [X0]
	083 Move X1, [X29]
	084 Move X8, [X8+64]
	085 Move X9, [X1+64]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Call 0x1C17E08
	088 Move X2, [X28]
	089 Move W24, [X0]
	090 Move W1, 11
	091 Move X0, X23
	092 Call Dictionary`2<Byte, Object>.get_Item, X0, X1
	093 Compare X0, 0
	094 JumpIfEqual {144}
	095 Move X8, [X0]
	096 Move X1, [X29]
	097 Move X8, [X8+64]
	098 Move X9, [X1+64]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Call 0x1C17E08
	101 Move W25, [X0]
	102 Add X8, X31, 96
	103 Move X1, X23
	104 Call PhotonTransportProtocol.createVoiceInfoFromEventPayload, X0, X1
	105 Move X0, [X21+16]
	106 Move V0, [X31+96]
	107 Move V1, [X31+112]
	108 Move V2, [X31+8]
	109 Move [X31+48], V0
	110 Move [X31+56], V1
	111 Move [X31+5], V2
	112 Compare X0, 0
	113 JumpIfEqual {144}
	114 Move V0, [X31+48]
	115 Move V1, [X31+64]
	116 Move V2, [X31+5]
	117 Add X5, X31, 0
	118 Move W1, W20
	119 Move W2, W19
	120 Move W3, W24
	121 Move W4, W25
	122 Move X6, X31
	123 Move [X31], V0
	124 Move [X31+8], V1
	125 Move [X31+2], V2
	126 Call VoiceClient.onVoiceInfo, X0, X1, X2, X3, X4, X5
	127 Move W8, [X22+24]
	128 Add W26, W26, 1
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X20, [X31+224]
	131 Move X19, [X31+232]
	132 Move X22, [X31+208]
	133 Move X21, [X31+216]
	134 Move X24, [X31+192]
	135 Move X23, [X31+200]
	136 Move X26, [X31+176]
	137 Move X25, [X31+184]
	138 Move X28, [X31+160]
	139 Move X27, [X31+168]
	140 Move X29, [X31+144]
	141 Move X30, [X31+152]
	142 Add X31, X31, 240
	143 Return 
	144 Call 0x1C17F20
	145 Move X0, X23
	146 Call 0x1C181E0
	147 Call 0x1C17F28
	148 Move X0, X23
	149 Move X1, X24
	150 Call 0x1C181E0

Method: System.Void onVoiceRemove(System.Int32 channelId, System.Int32 playerId, System.Object payload)

Disassembly:
	0x0356DA14 ADD X8, X8, W9, 0x4, SXTW
	0x0356DA18 ADD X0, X8, 0x138
	0x0356DA1C LDP X8, X4, [X0]
	0x0356DA20 MOVZ W1, 0x3
	0x0356DA24 MOV X0, X19
	0x0356DA28 MOV X2, X22
	0x0356DA2C MOV X3, X21
	0x0356DA30 BLR X8
	0x0356DA34 LDP X20, X19, [X31 + 0xA0]
	0x0356DA38 LDP X22, X21, [X31 + 0x90]
	0x0356DA3C LDP X24, X23, [X31 + 0x80]
	0x0356DA40 LDP X26, X25, [X31 + 0x70]
	0x0356DA44 LDP X28, X27, [X31 + 0x60]
	0x0356DA48 LDP X29, X30, [X31 + 0x50]
	0x0356DA4C ADD X31, X31, 0xB0
	0x0356DA50 RET
	0x0356DA54 BL 0x1C16F20
	0x0356DA58 BL 0x1C16F28
	0x0356DA5C BL 0x1C16F28
	0x0356DA60 BL 0x1C16F20
	0x0356DA64 BL 0x1C16F20
	0x0356DA68 BL 0x1C16F28
	0x0356DA6C BL 0x1C16F20
	0x0356DA70 BL 0x1C16F28
	0x0356DA74 BL 0x1C16F28
	0x0356DA78 BL 0x1C16F20
	0x0356DA7C BL 0x1C16F28
	0x0356DA80 BL 0x1C16F28
	0x0356DA84 BL 0x1C16F20
	0x0356DA88 BL 0x1C16F28
	0x0356DA8C BL 0x1C16F28
	0x0356DA90 BL 0x1C16F20
	0x0356DA94 BL 0x1C16F20
	0x0356DA98 BL 0x1C16F20
	0x0356DA9C BL 0x1C16F28
	0x0356DAA0 BL 0x1C16F28

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE73000
	007 Move W8, [X22+3649]
	008 Move X21, X3
	009 Move W19, W2
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xB87000
	016 Move X0, [X0+1560]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3649], W8
	020 Compare X21, 0
	021 JumpIfEqual {34}
	022 Move X8, 0xB87000
	023 Move X8, [X8+1560]
	024 Move X0, X21
	025 Move X22, [X8]
	026 Move X1, X22
	027 Call 0x1C17E00
	028 Move X2, X0
	029 Compare X0, 0
	030 JumpIfNotEqual {35}
	031 Move X0, X21
	032 Move X1, X22
	033 Call 0x1C181E0
	034 Move X2, X31
	035 Move X0, [X20+16]
	036 Compare X0, 0
	037 JumpIfEqual {47}
	038 Move W1, W19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X3, X31
	044 Move X30, [X31+48]
	045 Call VoiceClient.onVoiceRemove, X0, X1, X2
	046 Return 
	047 Call 0x1C17F20

Method: Photon.Voice.VoiceInfo createVoiceInfoFromEventPayload(System.Collections.Generic.Dictionary`2<System.Byte, System.Object> h)

Disassembly:
	0x0356DAA4 BL 0x1C16F28
	0x0356DAA8 BL 0x1C16F28
	0x0356DAAC BL 0x1C16F28
	0x0356DAB0 BL 0x1C16F28
	0x0356DAB4 BL 0x1C16F28
	0x0356DAB8 BL 0x1C16F28
	0x0356DABC BL 0x1C16F20
	0x0356DAC0 BL 0x1C16F44
	0x0356DAC4 MOV X1, X31
	0x0356DAC8 BL 0x1C16DEC
	0x0356DACC BL 0x1C16F44
	0x0356DAD0 MOV X1, X31
	0x0356DAD4 BL 0x1C16DEC
	0x0356DAD8 BL 0x1C16F44
	0x0356DADC MOV X1, X31
	0x0356DAE0 BL 0x1C16DEC
	0x0356DAE4 BL 0x1C16F44
	0x0356DAE8 MOV X1, X31
	0x0356DAEC BL 0x1C16DEC
	0x0356DAF0 BL 0x1C16F44
	0x0356DAF4 MOV X1, X31
	0x0356DAF8 BL 0x1C16DEC
	0x0356DAFC BL 0x1C16F44
	0x0356DB00 MOV X1, X31
	0x0356DB04 BL 0x1C16DEC
	0x0356DB08 BL 0x1C16F44
	0x0356DB0C MOV X1, X31
	0x0356DB10 BL 0x1C16DEC
	0x0356DB14 BL 0x1C16F44
	0x0356DB18 MOV X1, X31
	0x0356DB1C BL 0x1C16DEC
	0x0356DB20 BL 0x1C16F44
	0x0356DB24 MOV X1, X31
	0x0356DB28 BL 0x1C16DEC
	0x0356DB2C BL 0x1C16F44
	0x0356DB30 MOV X1, X31
	0x0356DB34 BL 0x1C16DEC
	0x0356DB38 BL 0x1C16F44
	0x0356DB3C MOV X1, X31
	0x0356DB40 BL 0x1C16DEC
	0x0356DB44 BL 0x1C16F44
	0x0356DB48 MOV X1, X31
	0x0356DB4C BL 0x1C16DEC
	0x0356DB50 BL 0x1C16F44
	0x0356DB54 MOV X1, X31
	0x0356DB58 BL 0x1C16DEC
	0x0356DB5C BL 0x1C16F44
	0x0356DB60 MOV X1, X31
	0x0356DB64 BL 0x1C16DEC
	0x0356DB68 BL 0x1C16F44
	0x0356DB6C MOV X1, X31
	0x0356DB70 BL 0x1C16DEC
	0x0356DB74 BL 0x1C16F44
	0x0356DB78 MOV X1, X31
	0x0356DB7C BL 0x1C16DEC
	0x0356DB80 BL 0x1C16F44
	0x0356DB84 MOV X1, X31
	0x0356DB88 BL 0x1C16DEC
	0x0356DB8C BL 0x1C16F20
	0x0356DB90 BL 0x1C16F20
	0x0356DB94 BL 0x1C16F28
	0x0356DB98 BL 0x1C16F20
	0x0356DB9C BL 0x1C16F28
	0x0356DBA0 BL 0x1C16F28
	0x0356DBA4 BL 0x1C16F28
	0x0356DBA8 BL 0x1C16F28
	0x0356DBAC BL 0x1C16F44
	0x0356DBB0 MOV X1, X31
	0x0356DBB4 BL 0x1C16DEC
	0x0356DBB8 BL 0x1C16F44
	0x0356DBBC MOV X1, X31
	0x0356DBC0 BL 0x1C16DEC
	0x0356DBC4 BL 0x1C16F44
	0x0356DBC8 MOV X1, X31
	0x0356DBCC BL 0x1C16DEC
	0x0356DBD0 BL 0x1C16F44
	0x0356DBD4 MOV X1, X31
	0x0356DBD8 BL 0x1C16DEC
	0x0356DBDC BL 0x1C16F44
	0x0356DBE0 MOV X1, X31
	0x0356DBE4 BL 0x1C16DEC
	0x0356DBE8 B 0x356DC8C
	0x0356DBEC B 0x356DC8C
	0x0356DBF0 B 0x356DC8C
	0x0356DBF4 B 0x356DC8C
	0x0356DBF8 B 0x356DC8C
	0x0356DBFC B 0x356DC8C
	0x0356DC00 B 0x356DC8C
	0x0356DC04 B 0x356DC8C
	0x0356DC08 B 0x356DC8C
	0x0356DC0C B 0x356DC8C
	0x0356DC10 B 0x356DC8C
	0x0356DC14 B 0x356DC8C
	0x0356DC18 B 0x356DC8C
	0x0356DC1C B 0x356DC8C
	0x0356DC20 B 0x356DC8C
	0x0356DC24 B 0x356DC8C
	0x0356DC28 B 0x356DC8C
	0x0356DC2C B 0x356DC8C
	0x0356DC30 B 0x356DC8C
	0x0356DC34 B 0x356DC8C
	0x0356DC38 B 0x356DC8C
	0x0356DC3C B 0x356DC8C
	0x0356DC40 B 0x356DC8C
	0x0356DC44 B 0x356DC8C
	0x0356DC48 B 0x356DC8C
	0x0356DC4C B 0x356DC8C
	0x0356DC50 B 0x356DC8C
	0x0356DC54 B 0x356DC8C
	0x0356DC58 B 0x356DC8C
	0x0356DC5C B 0x356DC8C
	0x0356DC60 B 0x356DC8C
	0x0356DC64 B 0x356DC8C
	0x0356DC68 B 0x356DC8C
	0x0356DC6C B 0x356DC8C
	0x0356DC70 B 0x356DC8C
	0x0356DC74 B 0x356DC8C
	0x0356DC78 B 0x356DC8C
	0x0356DC7C B 0x356DC8C
	0x0356DC80 B 0x356DC8C
	0x0356DC84 B 0x356DC8C
	0x0356DC88 B 0x356DC8C
	0x0356DC8C MOV X21, X0
	0x0356DC90 CMP W1, 0x1
	0x0356DC94 B.NE 0x356DE08
	0x0356DC98 MOV X0, X21
	0x0356DC9C BL 0x3EB1AD0
	0x0356DCA0 MOV X21, X0
	0x0356DCA4 ADRP X0, 0xB86000
	0x0356DCA8 LDR X0, [X0 + 0x7D0]
	0x0356DCAC BL 0x1C16D08
	0x0356DCB0 LDR X8, [X21]
	0x0356DCB4 LDR X1, [X8]
	0x0356DCB8 BL 0x1C17270
	0x0356DCBC TBZ X0, 0x0, 0x356DDD0
	0x0356DCC0 LDR X21, [X21]
	0x0356DCC4 BL 0x3EB1AE0
	0x0356DCC8 CBZ X21, 0x356DDCC
	0x0356DCCC LDR X8, [X21]
	0x0356DCD0 MOV X0, X21
	0x0356DCD4 LDP X9, X1, [X8 + 0x168]
	0x0356DCD8 BLR X9
	0x0356DCDC STR X0, [X20 + 0x38]
	0x0356DCE0 CBNZ X0, 0x356DCF4
	0x0356DCE4 ADRP X0, 0xBC8000
	0x0356DCE8 LDR X0, [X0 + 0xEB8]
	0x0356DCEC BL 0x1C16D08
	0x0356DCF0 STR X0, [X20 + 0x38]
	0x0356DCF4 ADRP X0, 0xB86000
	0x0356DCF8 LDR X0, [X0 + 0x9D0]
	0x0356DCFC BL 0x1C16D08
	0x0356DD00 MOVZ W1, 0x1
	0x0356DD04 BL 0x1C16D6C
	0x0356DD08 CBZ X0, 0x356DDCC
	0x0356DD0C LDR X20, [X20 + 0x38]
	0x0356DD10 MOV X21, X0
	0x0356DD14 CBZ X20, 0x356DD2C
	0x0356DD18 LDR X8, [X21]
	0x0356DD1C MOV X0, X20
	0x0356DD20 LDR X1, [X8 + 0x40]
	0x0356DD24 BL 0x1C16E00
	0x0356DD28 CBZ X0, 0x356DDF4
	0x0356DD2C LDR W8, [X21 + 0x18]
	0x0356DD30 CBZ W8, 0x356DDF0
	0x0356DD34 LDR X19, [X31 + 0x8]
	0x0356DD38 STR X20, [X21 + 0x20]
	0x0356DD3C CBZ X19, 0x356DDCC
	0x0356DD40 ADRP X0, 0xB8B000
	0x0356DD44 LDR X0, [X0 + 0x348]
	0x0356DD48 BL 0x1C16D08
	0x0356DD4C MOV X22, X0
	0x0356DD50 ADRP X0, 0xBC8000
	0x0356DD54 LDR X0, [X0 + 0xEB0]
	0x0356DD58 BL 0x1C16D08
	0x0356DD5C LDR X8, [X19]
	0x0356DD60 MOV X20, X0
	0x0356DD64 LDRH W9, [X8 + 0x12E]
	0x0356DD68 CBZ X9, 0x356DD8C
	0x0356DD6C LDR X10, [X8 + 0xB0]
	0x0356DD70 ADD X10, X10, 0x8
	0x0356DD74 LDUR X11, [X10 - 0x8]
	0x0356DD78 CMP X11, X22
	0x0356DD7C B.EQ 0x356DDA0
	0x0356DD80 SUBS X9, X9, 0x1
	0x0356DD84 ADD X10, X10, 0x10
	0x0356DD88 B.NE 0x356DD74
	0x0356DD8C MOVZ W2, 0x1
	0x0356DD90 MOV X0, X19
	0x0356DD94 MOV X1, X22
	0x0356DD98 BL 0x1C5C788
	0x0356DD9C B 0x356DDB0
	0x0356DDA0 LDR W9, [X10]
	0x0356DDA4 ADD W9, W9, 0x1
	0x0356DDA8 ADD X8, X8, W9, 0x4, SXTW
	0x0356DDAC ADD X0, X8, 0x138
	0x0356DDB0 LDP X8, X4, [X0]
	0x0356DDB4 MOVZ W1, 0x1
	0x0356DDB8 MOV X0, X19
	0x0356DDBC MOV X2, X20
	0x0356DDC0 MOV X3, X21
	0x0356DDC4 BLR X8
	0x0356DDC8 B 0x356DA34
	0x0356DDCC BL 0x1C16F20
	0x0356DDD0 MOVZ W0, 0x8
	0x0356DDD4 BL 0x3EB1AF0
	0x0356DDD8 LDR X8, [X21]
	0x0356DDDC STR X8, [X0]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0xE73000
	015 Move W9, [X21+3650]
	016 Move X20, X1
	017 Move X19, X8
	018 Move TEMP, X9
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0xBB0000
	023 Move X0, [X0+1064]
	024 Call 0x1C17CF4
	025 Move X0, 0xBC9000
	026 Move X0, [X0+3656]
	027 Call 0x1C17CF4
	028 Move X0, 0xB90000
	029 Move X0, [X0+912]
	030 Call 0x1C17CF4
	031 Move X0, 0xB87000
	032 Move X0, [X0+1880]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+3650], W8
	036 Compare X20, 0
	037 JumpIfEqual {236}
	038 Move X22, 0xB90000
	039 Move X22, [X22+912]
	040 Move W1, 12
	041 Move X0, X20
	042 Move X2, [X22]
	043 Call Dictionary`2<Byte, Object>.get_Item, X0, X1
	044 Compare X0, 0
	045 JumpIfEqual {236}
	046 Move X8, 0xBB0000
	047 Move X8, [X8+1064]
	048 Move X9, [X0]
	049 Move X1, [X8]
	050 Move X8, [X9+64]
	051 Move X9, [X1+64]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Call 0x1C17E08
	054 Move X2, [X22]
	055 Move W23, [X0]
	056 Move W1, 2
	057 Move X0, X20
	058 Call Dictionary`2<Byte, Object>.get_Item, X0, X1
	059 Compare X0, 0
	060 JumpIfEqual {236}
	061 Move X24, 0xB87000
	062 Move X24, [X24+1880]
	063 Move X8, [X0]
	064 Move X1, [X24]
	065 Move X8, [X8+64]
	066 Move X9, [X1+64]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Call 0x1C17E08
	069 Move X2, [X22]
	070 Move W25, [X0]
	071 Move W1, 3
	072 Move X0, X20
	073 Call Dictionary`2<Byte, Object>.get_Item, X0, X1
	074 Compare X0, 0
	075 JumpIfEqual {236}
	076 Move X8, [X0]
	077 Move X1, [X24]
	078 Move X8, [X8+64]
	079 Move X9, [X1+64]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Call 0x1C17E08
	082 Move X2, [X22]
	083 Move W26, [X0]
	084 Move W1, 4
	085 Move X0, X20
	086 Call Dictionary`2<Byte, Object>.get_Item, X0, X1
	087 Compare X0, 0
	088 JumpIfEqual {236}
	089 Move X8, [X0]
	090 Move X1, [X24]
	091 Move X8, [X8+64]
	092 Move X9, [X1+64]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Call 0x1C17E08
	095 Move X2, [X22]
	096 Move W28, [X0]
	097 Move W1, 5
	098 Move X0, X20
	099 Call Dictionary`2<Byte, Object>.get_Item, X0, X1
	100 Compare X0, 0
	101 JumpIfEqual {236}
	102 Move X8, [X0]
	103 Move X1, [X24]
	104 Move X8, [X8+64]
	105 Move X9, [X1+64]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X29, 0xBC9000
	108 Move X29, [X29+3656]
	109 Call 0x1C17E08
	110 Move X2, [X29]
	111 Move W21, [X0]
	112 Move W1, 6
	113 Move X0, X20
	114 Call Dictionary`2<Byte, Object>.ContainsKey, X0, X1
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {132}
	119 Move X2, [X22]
	120 Move W1, 6
	121 Move X0, X20
	122 Call Dictionary`2<Byte, Object>.get_Item, X0, X1
	123 Compare X0, 0
	124 JumpIfEqual {236}
	125 Move X8, [X0]
	126 Move X1, [X24]
	127 Move X8, [X8+64]
	128 Move X9, [X1+64]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Call 0x1C17E08
	131 Move W27, [X0]
	132 Move W27, W31
	133 Move X2, [X29]
	134 Move W1, 7
	135 Move X0, X20
	136 Call Dictionary`2<Byte, Object>.ContainsKey, X0, X1
	137 Move [X31+8], W27
	138 Move [X31+12], W21
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfNotEqual {156}
	143 Move X2, [X22]
	144 Move W1, 7
	145 Move X0, X20
	146 Call Dictionary`2<Byte, Object>.get_Item, X0, X1
	147 Compare X0, 0
	148 JumpIfEqual {236}
	149 Move X8, [X0]
	150 Move X1, [X24]
	151 Move X8, [X8+64]
	152 Move X9, [X1+64]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Call 0x1C17E08
	155 Move W21, [X0]
	156 Move W21, W31
	157 Move X2, [X29]
	158 Move W1, 8
	159 Move X0, X20
	160 Move W27, W26
	161 Call Dictionary`2<Byte, Object>.ContainsKey, X0, X1
	162 Move W26, W25
	163 Move TEMP, X0
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfNotEqual {181}
	167 Move X2, [X22]
	168 Move W1, 8
	169 Move X0, X20
	170 Call Dictionary`2<Byte, Object>.get_Item, X0, X1
	171 Compare X0, 0
	172 JumpIfEqual {236}
	173 Move X8, [X0]
	174 Move X1, [X24]
	175 Move X8, [X8+64]
	176 Move X9, [X1+64]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move W25, W23
	179 Call 0x1C17E08
	180 Move W23, [X0]
	181 Move W25, W23
	182 Move W23, W31
	183 Move X2, [X29]
	184 Move W1, 9
	185 Move X0, X20
	186 Call Dictionary`2<Byte, Object>.ContainsKey, X0, X1
	187 Move TEMP, X0
	188 And TEMP, TEMP, 1
	189 Compare TEMP, 1
	190 JumpIfNotEqual {204}
	191 Move X2, [X22]
	192 Move W1, 9
	193 Move X0, X20
	194 Call Dictionary`2<Byte, Object>.get_Item, X0, X1
	195 Compare X0, 0
	196 JumpIfEqual {236}
	197 Move X8, [X0]
	198 Move X1, [X24]
	199 Move X8, [X8+64]
	200 Move X9, [X1+64]
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Call 0x1C17E08
	203 Move W24, [X0]
	204 Move W24, W31
	205 Move X2, [X22]
	206 Move W1, 10
	207 Move X0, X20
	208 Call Dictionary`2<Byte, Object>.get_Item, X0, X1
	209 Move W9, [X31+12]
	210 Move W8, [X31+8]
	211 Move [X19], W25
	212 Move [X19+4], W26
	213 Move [X19+8], W27
	214 Move [X19+12], W28
	215 Move [X19+24], W21
	216 Move [X19+28], W23
	217 Move [X19+16], W9
	218 Move [X19+20], W8
	219 Move [X19+32], W24
	220 Move [X19+36], W31
	221 Move [X19+40], X0
	222 Move X20, [X31+96]
	223 Move X19, [X31+104]
	224 Move X22, [X31+80]
	225 Move X21, [X31+88]
	226 Move X24, [X31+64]
	227 Move X23, [X31+72]
	228 Move X26, [X31+48]
	229 Move X25, [X31+56]
	230 Move X28, [X31+32]
	231 Move X27, [X31+40]
	232 Move X29, [X31+16]
	233 Move X30, [X31+24]
	234 Add X31, X31, 112
	235 Return X0
	236 Call 0x1C17F20
	237 Call 0x1C181E0

