Type: Photon.Voice.FramerResampler`1

Method: System.Void .ctor(System.Int32 frameSize, System.Int32 channels, System.Int32 resampleNum, System.Int32 resampleDen, System.Boolean interpolate)

Disassembly:
	0x02D25C54 TBZ X0, 0x0, 0x2D25C6C
	0x02D25C58 LDP X20, X19, [X31 + 0x30]
	0x02D25C5C LDP X22, X21, [X31 + 0x20]
	0x02D25C60 LDP X24, X23, [X31 + 0x10]
	0x02D25C64 LDR X30, [X31], #0x40
	0x02D25C68 RET
	0x02D25C6C LDR X0, [X19 + 0x20]
	0x02D25C70 LDRB W8, [X0 + 0x135]
	0x02D25C74 TBNZ X8, 0x0, 0x2D25C7C
	0x02D25C78 BL 0x1C5C684
	0x02D25C7C LDR X8, [X0 + 0xC0]
	0x02D25C80 MOV X0, X21
	0x02D25C84 MOV X1, X23
	0x02D25C88 MOV X2, X22
	0x02D25C8C LDR X5, [X8 + 0x28]
	0x02D25C90 MOV X3, X20
	0x02D25C94 LDP X20, X19, [X31 + 0x30]
	0x02D25C98 LDP X22, X21, [X31 + 0x20]
	0x02D25C9C LDP X24, X23, [X31 + 0x10]
	0x02D25CA0 MOVZ W4, 0x1
	0x02D25CA4 LDR X30, [X31], #0x40
	0x02D25CA8 B 0x2D25D30
	0x02D25CAC ADRP X0, 0x13D6000
	0x02D25CB0 LDR X0, [X0 + 0x578]
	0x02D25CB4 BL 0x1C16D08
	0x02D25CB8 BL 0x1C16F10
	0x02D25CBC MOV X20, X0
	0x02D25CC0 ADRP X0, 0x13F9000
	0x02D25CC4 LDR X0, [X0 + 0xDC8]
	0x02D25CC8 BL 0x1C16D08
	0x02D25CCC MOV X21, X0
	0x02D25CD0 ADRP X0, 0x13F9000
	0x02D25CD4 LDR X0, [X0 + 0xDD0]
	0x02D25CD8 BL 0x1C16D08
	0x02D25CDC MOV X2, X0
	0x02D25CE0 MOV X0, X20
	0x02D25CE4 MOV X1, X21
	0x02D25CE8 MOV X3, X31
	0x02D25CEC BL 0x330E16C
	0x02D25CF0 B 0x2D25D24
	0x02D25CF4 ADRP X0, 0x13D3000
	0x02D25CF8 LDR X0, [X0 + 0x528]
	0x02D25CFC BL 0x1C16D08
	0x02D25D00 BL 0x1C16F10
	0x02D25D04 MOV X20, X0
	0x02D25D08 ADRP X0, 0x13F9000
	0x02D25D0C LDR X0, [X0 + 0xDD0]
	0x02D25D10 BL 0x1C16D08
	0x02D25D14 MOV X1, X0
	0x02D25D18 MOV X0, X20
	0x02D25D1C MOV X2, X31
	0x02D25D20 BL 0x330E100
	0x02D25D24 MOV X0, X20
	0x02D25D28 MOV X1, X19
	0x02D25D2C BL 0x1C16DEC
	0x02D25D30 STP X30, X21, [X31 - 0x20]!
	0x02D25D34 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x16B7000
	011 Move W8, [X26+2025]
	012 Move X24, X6
	013 Move W22, W5
	014 Move W20, W4
	015 Move W19, W3
	016 Move W23, W2
	017 Move W25, W1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x13CF000
	024 Move X0, [X0+2704]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X26+2025], W8
	028 Move X8, [X24+32]
	029 Move X0, X21
	030 Move X8, [X8+192]
	031 Move X2, [X8]
	032 NotImplemented "Instruction SDIV not yet implemented."
	033 Multiply W1, W8, W23
	034 Call 0x2D261FC, X0, X1
	035 NotImplemented "Instruction STRH not yet implemented."
	036 Move X8, [X24+32]
	037 Add X1, X31, 12
	038 Move X8, [X8+192]
	039 Move X0, [X8+16]
	040 Call 0x1C17E04
	041 Compare X0, 0
	042 JumpIfEqual {49}
	043 Move X8, 0x13CF000
	044 Move X8, [X8+2704]
	045 Move X9, [X0]
	046 Move X8, [X8]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CSET not yet implemented."
	049 Move W8, W31
	050 NotImplemented "Instruction SCVTF not yet implemented."
	051 NotImplemented "Instruction SCVTF not yet implemented."
	052 And W9, W22, 1
	053 NotImplemented "Instruction FDIV not yet implemented."
	054 Move [X21+32], W8
	055 Move [X21+36], W23
	056 Move [X21+40], W19
	057 Move [X21+44], W20
	058 Move [X21+33], W9
	059 Move [X21+48], S0
	060 Move X20, [X31+64]
	061 Move X19, [X31+72]
	062 Move X22, [X31+48]
	063 Move X21, [X31+56]
	064 Move X24, [X31+32]
	065 Move X23, [X31+40]
	066 Move X26, [X31+16]
	067 Move X25, [X31+24]
	068 Move X30, [X31+80]
	069 Return 

Method: System.Collections.Generic.IEnumerable`1<T[]> Frame(T[] bufT)

Disassembly:
	0x02D25D38 MOV X19, X0
	0x02D25D3C CBZ X2, 0x2D25DA8
	0x02D25D40 LDR X0, [X2 + 0x40]
	0x02D25D44 LDR X9, [X2 + 0x18]
	0x02D25D48 LDR X8, [X2 + 0x28]
	0x02D25D4C MOV X20, X5
	0x02D25D50 MOV W21, W4
	0x02D25D54 MOV X2, X3
	0x02D25D58 MOV X3, X8
	0x02D25D5C BLR X9
	0x02D25D60 MOV W1, W0
	0x02D25D64 TBZ X21, 0x0, 0x2D25D84
	0x02D25D68 CBZ X19, 0x2D25DAC
	0x02D25D6C LDR X8, [X20 + 0x20]
	0x02D25D70 LDR X8, [X8 + 0xC0]
	0x02D25D74 LDR X2, [X8 + 0x40]
	0x02D25D78 MOV X0, X19
	0x02D25D7C BL 0x269D03C
	0x02D25D80 B 0x2D25D9C
	0x02D25D84 CBZ X19, 0x2D25DB0
	0x02D25D88 LDR X8, [X20 + 0x20]
	0x02D25D8C LDR X8, [X8 + 0xC0]
	0x02D25D90 LDR X2, [X8 + 0x48]
	0x02D25D94 MOV X0, X19
	0x02D25D98 BL 0x269D0D8
	0x02D25D9C LDP X20, X19, [X31 + 0x10]
	0x02D25DA0 LDP X30, X21, [X31], #0x20
	0x02D25DA4 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X21, X2
	007 Move X19, X1
	008 Move X20, X0
	009 Move X8, [X8+192]
	010 Move X8, [X8+32]
	011 Move W9, [X8+309]
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X8
	017 Call 0x1C5D684
	018 Move X8, X0
	019 Move X0, X8
	020 Call 0x1C17F10
	021 Move X8, [X21+32]
	022 Move TEMP, 1
	023 Not TEMP
	024 Move W1, TEMP
	025 Move X21, X0
	026 Move X8, [X8+192]
	027 Move X2, [X8+40]
	028 Call 0x2393D44, X0, X1
	029 Compare X21, 0
	030 JumpIfEqual {39}
	031 Move [X21+48], X19
	032 Move [X21+56], X20
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X0, X21
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0
	039 Call 0x1C17F20

