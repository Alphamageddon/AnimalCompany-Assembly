Type: UnityEngine.Networking.DownloadHandler

Method: System.Void Release()

Disassembly:
	0x03E5ED1C ADRP X0, 0xFFFFFFFFFCC91000
	0x03E5ED20 ADD X0, X0, 0xB51
	0x03E5ED24 BL 0x1C16CB8
	0x03E5ED28 MOV X8, X0
	0x03E5ED2C STR X0, [X21 + 0x9B0]
	0x03E5ED30 MOV X0, X20
	0x03E5ED34 BLR X8
	0x03E5ED38 TBZ X0, 0x0, 0x3E5ED7C
	0x03E5ED3C ADRP X21, 0x58A000
	0x03E5ED40 LDR X8, [X21 + 0xA10]
	0x03E5ED44 CBNZ X8, 0x3E5ED5C
	0x03E5ED48 ADRP X0, 0xFFFFFFFFFCCB7000
	0x03E5ED4C ADD X0, X0, 0x5A7
	0x03E5ED50 BL 0x1C16CB8
	0x03E5ED54 MOV X8, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x58B000
	005 Move X1, [X20+2288]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53911552
	010 Add X0, X0, 3634
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2288], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void .ctor()

Disassembly:
	0x03E5ED58 STR X0, [X21 + 0xA10]
	0x03E5ED5C MOV X0, X20

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void Finalize()

Disassembly:
	0x03E5ED60 MOV X1, X19
	0x03E5ED64 BLR X8
	0x03E5ED68 CBNZ W0, 0x3E5EDC4
	0x03E5ED6C STR X19, [X20 + 0x20]
	0x03E5ED70 LDP X20, X19, [X31 + 0x10]
	0x03E5ED74 LDP X30, X21, [X31], #0x20
	0x03E5ED78 RET
	0x03E5ED7C ADRP X0, 0x295000
	0x03E5ED80 LDR X0, [X0 + 0x5B0]
	0x03E5ED84 BL 0x1C16D08
	0x03E5ED88 BL 0x1C16F10
	0x03E5ED8C MOV X19, X0
	0x03E5ED90 ADRP X0, 0x30D000
	0x03E5ED94 LDR X0, [X0 + 0xDE8]
	0x03E5ED98 BL 0x1C16D08
	0x03E5ED9C MOV X1, X0
	0x03E5EDA0 MOV X0, X19
	0x03E5EDA4 MOV X2, X31
	0x03E5EDA8 BL 0x337DF1C
	0x03E5EDAC ADRP X0, 0x30D000
	0x03E5EDB0 LDR X0, [X0 + 0xDF0]
	0x03E5EDB4 BL 0x1C16D08
	0x03E5EDB8 MOV X1, X0
	0x03E5EDBC MOV X0, X19
	0x03E5EDC0 BL 0x1C16DEC
	0x03E5EDC4 BL 0x3E5E588
	0x03E5EDC8 MOV X19, X0
	0x03E5EDCC ADRP X0, 0x295000
	0x03E5EDD0 LDR X0, [X0 + 0x5B0]
	0x03E5EDD4 BL 0x1C16D08
	0x03E5EDD8 BL 0x1C16F10
	0x03E5EDDC MOV X1, X19
	0x03E5EDE0 MOV X2, X31
	0x03E5EDE4 MOV X20, X0
	0x03E5EDE8 BL 0x337DF1C
	0x03E5EDEC ADRP X0, 0x30D000
	0x03E5EDF0 LDR X0, [X0 + 0xDF0]
	0x03E5EDF4 BL 0x1C16D08
	0x03E5EDF8 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0]
	006 Move X19, X0
	007 Move X9, [X8+392]
	008 Move X1, [X8+400]
	009 NotImplemented "Instruction BLR not yet implemented."
	010 Move X0, X19
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X1, X31
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Call Object.Finalize, X0
	017 Return 
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X21, X0
	020 Move X0, X21
	021 Call 0x3EB2AD0
	022 Move X20, [X0]
	023 Call 0x3EB2AE0
	024 Move X0, X19
	025 Move X1, X31
	026 Call Object.Finalize, X0
	027 Compare X20, 0
	028 JumpIfNotEqual {35}
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 
	034 Move X20, X31
	035 Move X0, X20
	036 Call 0x1C17F18
	037 Move X21, X0
	038 Move X0, X19
	039 Move X1, X31
	040 Call Object.Finalize, X0
	041 Compare X20, 0
	042 JumpIfNotEqual {45}
	043 Move X0, X21
	044 Call 0x1D2D690
	045 Move X0, X20
	046 Call 0x1C17F18
	047 Call 0x1991590

Method: System.Void Dispose()

Disassembly:
	0x03E5EDFC MOV X0, X20
	0x03E5EE00 BL 0x1C16DEC
	0x03E5EE04 STR X30, [X31 - 0x40]!
	0x03E5EE08 STP X24, X23, [X31 + 0x10]
	0x03E5EE0C STP X22, X21, [X31 + 0x20]
	0x03E5EE10 STP X20, X19, [X31 + 0x30]
	0x03E5EE14 MOV X23, X1
	0x03E5EE18 MOV X1, X31
	0x03E5EE1C MOV X19, X4
	0x03E5EE20 MOV X21, X3
	0x03E5EE24 MOV X22, X2
	0x03E5EE28 MOV X20, X0
	0x03E5EE2C BL 0x33BDD8C
	0x03E5EE30 ADRP X24, 0x58A000
	0x03E5EE34 LDR X8, [X24 + 0x930]
	0x03E5EE38 CBNZ X8, 0x3E5EE50
	0x03E5EE3C ADRP X0, 0xFFFFFFFFFCCA3000
	0x03E5EE40 ADD X0, X0, 0xB48
	0x03E5EE44 BL 0x1C16CB8
	0x03E5EE48 MOV X8, X0
	0x03E5EE4C STR X0, [X24 + 0x930]
	0x03E5EE50 BLR X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+16]
	006 Move X1, X31
	007 Move X2, X31
	008 Call IntPtr.op_Inequality, X0, X1
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {25}
	013 Move X20, 0x58B000
	014 Move X8, [X20+2288]
	015 Compare X8, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -53911552
	018 Add X0, X0, 3634
	019 Call 0x1C17CB8
	020 Move X8, X0
	021 Move [X20+2288], X0
	022 Move X0, X19
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move [X19+16], X31
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Byte[] get_data()

Disassembly:
	0x03E5EE54 STR X0, [X20 + 0x10]
	0x03E5EE58 MOVZ W8, 0x1
	0x03E5EE5C MOVZ W9, 0x101

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+424]
	003 Move X1, [X8+432]
	004 CallNoReturn X2

Method: System.String get_text()

Disassembly:
	0x03E5EE60 MOV X0, X20
	0x03E5EE64 MOV X1, X23
	0x03E5EE68 STRB W8, [X20 + 0x3A]

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+440]
	003 Move X1, [X8+448]
	004 CallNoReturn X2

Method: Unity.Collections.NativeArray`1<System.Byte> GetNativeData()

Disassembly:
	0x03E5EE6C STRH W9, [X20 + 0x38]
	0x03E5EE70 BL 0x3E5EA70
	0x03E5EE74 MOV X0, X20

ISIL:
	001 Move X0, X31
	002 Move X1, X31
	003 Return X0

Method: System.Byte[] GetData()

Disassembly:
	0x03E5EE78 MOV X1, X22

ISIL:
No ISIL was generated
Method: System.String GetText()

Disassembly:
	0x03E5EF00 LDP X20, X19, [X31 + 0x10]
	0x03E5EF04 LDP X30, X21, [X31], #0x20
	0x03E5EF08 RET
	0x03E5EF0C MOV X20, X31
	0x03E5EF10 B 0x3E5EF20
	0x03E5EF14 MOV X0, X20
	0x03E5EF18 BL 0x1C16F18
	0x03E5EF1C MOV X21, X0
	0x03E5EF20 MOV X0, X19
	0x03E5EF24 MOV X1, X31
	0x03E5EF28 BL 0x33CB4DC
	0x03E5EF2C CBNZ X20, 0x3E5EF38
	0x03E5EF30 MOV X0, X21
	0x03E5EF34 BL 0x1D2C690
	0x03E5EF38 MOV X0, X20
	0x03E5EF3C BL 0x1C16F18
	0x03E5EF40 BL 0x1990590
	0x03E5EF44 STP X30, X19, [X31 - 0x10]!
	0x03E5EF48 LDRB W8, [X0 + 0x39]
	0x03E5EF4C MOV X19, X0
	0x03E5EF50 CBZ W8, 0x3E5EF68
	0x03E5EF54 LDR X0, [X19 + 0x18]
	0x03E5EF58 CBZ X0, 0x3E5EF68
	0x03E5EF5C LDR X8, [X0]
	0x03E5EF60 LDP X9, X1, [X8 + 0x188]
	0x03E5EF64 BLR X9
	0x03E5EF68 LDRB W8, [X19 + 0x3A]
	0x03E5EF6C CBZ W8, 0x3E5EF84
	0x03E5EF70 LDR X0, [X19 + 0x20]
	0x03E5EF74 CBZ X0, 0x3E5EF84
	0x03E5EF78 LDR X8, [X0]
	0x03E5EF7C LDP X9, X1, [X8 + 0x188]
	0x03E5EF80 BLR X9
	0x03E5EF84 LDRB W8, [X19 + 0x38]
	0x03E5EF88 CBZ W8, 0x3E5EF9C
	0x03E5EF8C LDR X0, [X19 + 0x28]
	0x03E5EF90 CBZ X0, 0x3E5EF9C
	0x03E5EF94 LDP X30, X19, [X31], #0x10
	0x03E5EF98 B 0x3E5DCC4
	0x03E5EF9C LDP X30, X19, [X31], #0x10
	0x03E5EFA0 RET
	0x03E5EFA4 STP X30, X21, [X31 - 0x20]!
	0x03E5EFA8 STP X20, X19, [X31 + 0x10]
	0x03E5EFAC ADRP X21, 0x58A000
	0x03E5EFB0 ADRP X20, 0x29C000
	0x03E5EFB4 LDRB W8, [X21 + 0x940]
	0x03E5EFB8 LDR X20, [X20 + 0xC10]
	0x03E5EFBC MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x58B000
	006 Move W8, [X20+2296]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x30E000
	013 Move X0, [X0+3488]
	014 Call 0x1C17CF4
	015 Move X0, 0x2EC000
	016 Move X0, [X0+1696]
	017 Call 0x1C17CF4
	018 Move X0, 0x296000
	019 Move X0, [X0+2440]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2296], W8
	023 Move X8, [X19]
	024 Move X0, X19
	025 Move X9, [X8+408]
	026 Move X1, [X8+416]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Compare X0, 0
	029 JumpIfEqual {52}
	030 Move X20, X1
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X8, 0x30E000
	033 Move X8, [X8+3488]
	034 Move X1, X20
	035 Move X2, [X8]
	036 Call NativeArrayUnsafeUtility.GetUnsafeReadOnlyPtr, X0
	037 Move X21, X0
	038 Move X0, X19
	039 Call DownloadHandler.GetTextEncoder, X0
	040 Move W3, W20
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X4, X0
	044 Move X0, X31
	045 Move X1, X21
	046 Move W2, W31
	047 Move X5, X31
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call String.CreateString, X0, X1, X2, X3, X4
	051 Return X0
	052 Move X8, 0x296000
	053 Move X8, [X8+2440]
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X0, [X8]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Return X0

Method: System.Text.Encoding GetTextEncoder()

Disassembly:
	0x03E5EFC0 TBNZ X8, 0x0, 0x3E5EFD8
	0x03E5EFC4 ADRP X0, 0x29C000
	0x03E5EFC8 LDR X0, [X0 + 0xC10]
	0x03E5EFCC BL 0x1C16CF4
	0x03E5EFD0 MOVZ W8, 0x1
	0x03E5EFD4 STRB W8, [X21 + 0x940]
	0x03E5EFD8 MOV X0, X19
	0x03E5EFDC BL 0x3E5EF44
	0x03E5EFE0 MOV X0, X19
	0x03E5EFE4 BL 0x3E5E6A0
	0x03E5EFE8 LDR X0, [X20]
	0x03E5EFEC LDR W8, [X0 + 0xE0]
	0x03E5EFF0 CBNZ W8, 0x3E5EFF8
	0x03E5EFF4 BL 0x1C16DFC
	0x03E5EFF8 MOV X0, X19
	0x03E5EFFC LDP X20, X19, [X31 + 0x10]
	0x03E5F000 MOV X1, X31
	0x03E5F004 LDP X30, X21, [X31], #0x20
	0x03E5F008 B 0x33B3E9C
	0x03E5F00C LDR X0, [X0 + 0x18]
	0x03E5F010 RET
	0x03E5F014 LDR X0, [X0 + 0x20]
	0x03E5F018 RET
	0x03E5F01C LDR X0, [X0 + 0x28]
	0x03E5F020 RET
	0x03E5F024 STR X30, [X31 - 0x20]!
	0x03E5F028 STP X20, X19, [X31 + 0x10]
	0x03E5F02C ADRP X20, 0x589000
	0x03E5F030 LDR X1, [X20 + 0x948]
	0x03E5F034 MOV X19, X0
	0x03E5F038 CBNZ X1, 0x3E5F050
	0x03E5F03C ADRP X0, 0xFFFFFFFFFCCC8000
	0x03E5F040 ADD X0, X0, 0x6DA
	0x03E5F044 BL 0x1C16CB8
	0x03E5F048 MOV X1, X0
	0x03E5F04C STR X0, [X20 + 0x948]
	0x03E5F050 MOV X0, X19
	0x03E5F054 LDP X20, X19, [X31 + 0x10]
	0x03E5F058 LDR X30, [X31], #0x20
	0x03E5F05C BR X1
	0x03E5F060 STR X30, [X31 - 0x20]!
	0x03E5F064 STP X20, X19, [X31 + 0x10]
	0x03E5F068 ADRP X20, 0x589000
	0x03E5F06C LDR X8, [X20 + 0x948]
	0x03E5F070 MOV X19, X0
	0x03E5F074 CBNZ X8, 0x3E5F08C
	0x03E5F078 ADRP X0, 0xFFFFFFFFFCCC8000
	0x03E5F07C ADD X0, X0, 0x6DA
	0x03E5F080 BL 0x1C16CB8
	0x03E5F084 MOV X8, X0
	0x03E5F088 STR X0, [X20 + 0x948]
	0x03E5F08C MOV X0, X19
	0x03E5F090 BLR X8
	0x03E5F094 CBZ X0, 0x3E5F09C
	0x03E5F098 STR X19, [X0 + 0x20]
	0x03E5F09C LDP X20, X19, [X31 + 0x10]
	0x03E5F0A0 LDR X30, [X31], #0x20
	0x03E5F0A4 RET
	0x03E5F0A8 STP X30, X21, [X31 - 0x20]!
	0x03E5F0AC STP X20, X19, [X31 + 0x10]
	0x03E5F0B0 ADRP X21, 0x589000
	0x03E5F0B4 LDR X2, [X21 + 0x958]
	0x03E5F0B8 MOV W19, W1
	0x03E5F0BC MOV X20, X0
	0x03E5F0C0 CBNZ X2, 0x3E5F0D8
	0x03E5F0C4 ADRP X0, 0xFFFFFFFFFCCCE000
	0x03E5F0C8 ADD X0, X0, 0x18C
	0x03E5F0CC BL 0x1C16CB8
	0x03E5F0D0 MOV X2, X0
	0x03E5F0D4 STR X0, [X21 + 0x958]
	0x03E5F0D8 MOV X0, X20
	0x03E5F0DC MOV W1, W19
	0x03E5F0E0 LDP X20, X19, [X31 + 0x10]
	0x03E5F0E4 LDP X30, X21, [X31], #0x20
	0x03E5F0E8 BR X2
	0x03E5F0EC STP X30, X21, [X31 - 0x20]!
	0x03E5F0F0 STP X20, X19, [X31 + 0x10]
	0x03E5F0F4 ADRP X21, 0x589000
	0x03E5F0F8 LDR X8, [X21 + 0x9B0]
	0x03E5F0FC MOV W19, W1
	0x03E5F100 MOV X20, X0
	0x03E5F104 CBNZ X8, 0x3E5F11C
	0x03E5F108 ADRP X0, 0xFFFFFFFFFCC90000
	0x03E5F10C ADD X0, X0, 0xB51
	0x03E5F110 BL 0x1C16CB8
	0x03E5F114 MOV X8, X0
	0x03E5F118 STR X0, [X21 + 0x9B0]
	0x03E5F11C MOV X0, X20
	0x03E5F120 BLR X8
	0x03E5F124 TBZ X0, 0x0, 0x3E5F164
	0x03E5F128 ADRP X21, 0x589000
	0x03E5F12C LDR X8, [X21 + 0x958]
	0x03E5F130 CBNZ X8, 0x3E5F148
	0x03E5F134 ADRP X0, 0xFFFFFFFFFCCCE000
	0x03E5F138 ADD X0, X0, 0x18C
	0x03E5F13C BL 0x1C16CB8
	0x03E5F140 MOV X8, X0
	0x03E5F144 STR X0, [X21 + 0x958]
	0x03E5F148 MOV X0, X20
	0x03E5F14C MOV W1, W19
	0x03E5F150 BLR X8
	0x03E5F154 CBNZ W0, 0x3E5F1AC
	0x03E5F158 LDP X20, X19, [X31 + 0x10]
	0x03E5F15C LDP X30, X21, [X31], #0x20
	0x03E5F160 RET
	0x03E5F164 ADRP X0, 0x294000
	0x03E5F168 LDR X0, [X0 + 0x5B0]
	0x03E5F16C BL 0x1C16D08
	0x03E5F170 BL 0x1C16F10
	0x03E5F174 MOV X19, X0
	0x03E5F178 ADRP X0, 0x30C000
	0x03E5F17C LDR X0, [X0 + 0xDF8]
	0x03E5F180 BL 0x1C16D08
	0x03E5F184 MOV X1, X0
	0x03E5F188 MOV X0, X19
	0x03E5F18C MOV X2, X31
	0x03E5F190 BL 0x337DF1C
	0x03E5F194 ADRP X0, 0x30C000
	0x03E5F198 LDR X0, [X0 + 0xE00]
	0x03E5F19C BL 0x1C16D08
	0x03E5F1A0 MOV X1, X0
	0x03E5F1A4 MOV X0, X19
	0x03E5F1A8 BL 0x1C16DEC
	0x03E5F1AC BL 0x3E5E588
	0x03E5F1B0 MOV X19, X0
	0x03E5F1B4 ADRP X0, 0x294000
	0x03E5F1B8 LDR X0, [X0 + 0x5B0]
	0x03E5F1BC BL 0x1C16D08
	0x03E5F1C0 BL 0x1C16F10
	0x03E5F1C4 MOV X1, X19
	0x03E5F1C8 MOV X2, X31
	0x03E5F1CC MOV X20, X0
	0x03E5F1D0 BL 0x337DF1C
	0x03E5F1D4 ADRP X0, 0x30C000
	0x03E5F1D8 LDR X0, [X0 + 0xE00]
	0x03E5F1DC BL 0x1C16D08
	0x03E5F1E0 MOV X1, X0
	0x03E5F1E4 MOV X0, X20
	0x03E5F1E8 BL 0x1C16DEC
	0x03E5F1EC STR X30, [X31 - 0x20]!
	0x03E5F1F0 STP X20, X19, [X31 + 0x10]
	0x03E5F1F4 ADRP X20, 0x589000
	0x03E5F1F8 LDR X1, [X20 + 0x9B0]
	0x03E5F1FC MOV X19, X0
	0x03E5F200 CBNZ X1, 0x3E5F218
	0x03E5F204 ADRP X0, 0xFFFFFFFFFCC90000
	0x03E5F208 ADD X0, X0, 0xB51
	0x03E5F20C BL 0x1C16CB8
	0x03E5F210 MOV X1, X0
	0x03E5F214 STR X0, [X20 + 0x9B0]
	0x03E5F218 MOV X0, X19
	0x03E5F21C LDP X20, X19, [X31 + 0x10]
	0x03E5F220 LDR X30, [X31], #0x20
	0x03E5F224 BR X1
	0x03E5F228 STP X30, X21, [X31 - 0x20]!
	0x03E5F22C STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x58B000
	005 Move W8, [X20+2297]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x29F000
	012 Move X0, [X0+2264]
	013 Call 0x1C17CF4
	014 Move X0, 0x2DD000
	015 Move X0, [X0+3072]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2297], W8
	019 Move X20, 0x58B000
	020 Move X8, [X20+2304]
	021 Compare X8, 0
	022 JumpIfNotEqual {28}
	023 Move X0, -53923840
	024 Add X0, X0, 3293
	025 Call 0x1C17CB8
	026 Move X8, X0
	027 Move [X20+2304], X0
	028 Move X0, X19
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move X1, X31
	031 Move X19, X0
	032 Call String.IsNullOrEmpty, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {171}
	037 Compare X19, 0
	038 JumpIfEqual {177}
	039 Move X8, 0x2DC000
	040 Move X8, [X8+3072]
	041 Move W2, 5
	042 Move X0, X19
	043 Move X3, X31
	044 Move X1, [X8]
	045 Call String.IndexOf, X0, X1, X2
	046 Move TEMP, X0
	047 And TEMP, TEMP, -2147483648
	048 Compare TEMP, -2147483648
	049 JumpIfEqual {171}
	050 Move W2, W0
	051 Move W1, 61
	052 Move X0, X19
	053 Move X3, X31
	054 Call String.IndexOf, X0, X1, X2
	055 Move TEMP, X0
	056 And TEMP, TEMP, -2147483648
	057 Compare TEMP, -2147483648
	058 JumpIfEqual {171}
	059 Add W1, W0, 1
	060 Move X0, X19
	061 Move X2, X31
	062 Call String.Substring, X0, X1
	063 Compare X0, 0
	064 JumpIfEqual {177}
	065 Move X1, X31
	066 Call String.Trim, X0
	067 Move X8, 0x29E000
	068 Move X8, [X8+2264]
	069 Move X19, X0
	070 Move W1, 2
	071 Move X8, [X8]
	072 Move X0, X8
	073 Call 0x1C17D6C
	074 Compare X0, 0
	075 JumpIfEqual {177}
	076 Move W8, [X0+24]
	077 Move X1, X0
	078 Compare W8, 0
	079 JumpIfEqual {117}
	080 Move W9, 39
	081 NotImplemented "Instruction CMP not yet implemented."
	082 NotImplemented "Instruction STRH not yet implemented."
	083 Move W8, 34
	084 NotImplemented "Instruction STRH not yet implemented."
	085 Compare X19, 0
	086 JumpIfEqual {177}
	087 Move X0, X19
	088 Move X2, X31
	089 Call String.Trim, X0, X1
	090 Compare X0, 0
	091 JumpIfEqual {177}
	092 Move X1, X31
	093 Call String.Trim, X0
	094 Compare X0, 0
	095 JumpIfEqual {177}
	096 Move W1, 59
	097 Move X2, X31
	098 Move X19, X0
	099 Call String.IndexOf, X0, X1
	100 Move TEMP, X0
	101 And TEMP, TEMP, -2147483648
	102 Compare TEMP, -2147483648
	103 JumpIfEqual {110}
	104 Move W2, W0
	105 Move X0, X19
	106 Move W1, W31
	107 Move X3, X31
	108 Call String.Substring, X0, X1, X2
	109 Move X19, X0
	110 Move X0, X19
	111 Move X1, X31
	112 Call Encoding.GetEncoding, X0
	113 Move X20, [X31+16]
	114 Move X19, [X31+24]
	115 Move X30, [X31+32]
	116 Return X0
	117 Call 0x1C17F28
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X20, X0
	120 Move X0, X20
	121 Call 0x3EB2AD0
	122 Move X20, X0
	123 Move X0, 0x29D000
	124 Move X0, [X0+1400]
	125 Call 0x1C17D08
	126 Move X8, [X20]
	127 Move X1, [X8]
	128 Call 0x1C18270
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfEqual {143}
	133 Move X0, 0x295000
	134 Move X0, [X0+2880]
	135 Call 0x1C17D08
	136 Move X8, [X20]
	137 Move X1, [X8]
	138 Call 0x1C18270
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfNotEqual {178}
	143 Move X20, [X20]
	144 Call 0x3EB2AE0
	145 Compare X20, 0
	146 JumpIfEqual {177}
	147 Move X8, [X20]
	148 Move X0, X20
	149 Move X9, [X8+392]
	150 Move X1, [X8+400]
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Move X20, X0
	153 Move X0, 0x30D000
	154 Move X0, [X0+3496]
	155 Call 0x1C17D08
	156 Move X1, X19
	157 Move X2, X20
	158 Move X3, X31
	159 Call String.Format, X0, X1, X2
	160 Move X19, X0
	161 Move X0, 0x295000
	162 Move X0, [X0+2600]
	163 Call 0x1C17D08
	164 Move W8, [X0+224]
	165 Compare W8, 0
	166 JumpIfNotEqual {168}
	167 Call 0x1C17DFC
	168 Move X0, X19
	169 Move X1, X31
	170 Call Debug.LogWarning, X0
	171 Move X20, [X31+16]
	172 Move X19, [X31+24]
	173 Move X0, X31
	174 Move X30, [X31+32]
	175 Call Encoding.get_UTF8
	176 Return X0
	177 Call 0x1C17F20
	178 Move W0, 8
	179 Call 0x3EB2AF0
	180 Move X8, [X20]
	181 Move [X0], X8
	182 Move X1, 0x56000
	183 Add X1, X1, 3672
	184 Move X2, X31
	185 Call 0x3EB2B00
	186 Move X20, X0
	187 Call 0x3EB2AE0
	188 Move X0, X20
	189 Call 0x1D2D690
	190 Call 0x1991590

Method: System.String GetContentType()

Disassembly:
	0x03E5F230 ADRP X21, 0x589000
	0x03E5F234 LDR X2, [X21 + 0x960]
	0x03E5F238 MOV X19, X1
	0x03E5F23C MOV X20, X0
	0x03E5F240 CBNZ X2, 0x3E5F258
	0x03E5F244 ADRP X0, 0xFFFFFFFFFCCA8000
	0x03E5F248 ADD X0, X0, 0xD18
	0x03E5F24C BL 0x1C16CB8
	0x03E5F250 MOV X2, X0
	0x03E5F254 STR X0, [X21 + 0x960]
	0x03E5F258 MOV X0, X20
	0x03E5F25C MOV X1, X19
	0x03E5F260 LDP X20, X19, [X31 + 0x10]
	0x03E5F264 LDP X30, X21, [X31], #0x20
	0x03E5F268 BR X2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x58A000
	005 Move X1, [X20+2304]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53923840
	010 Add X0, X0, 3293
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2304], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean ReceiveData(System.Byte[] data, System.Int32 dataLength)

Disassembly:
	0x03E5F26C STP X30, X21, [X31 - 0x20]!
	0x03E5F270 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Void ReceiveContentLengthHeader(System.UInt64 contentLength)

Disassembly:
	0x03E5F274 ADRP X21, 0x589000
	0x03E5F278 LDR X8, [X21 + 0x9B0]
	0x03E5F27C MOV X19, X1

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+488]
	003 Move X2, [X8+496]
	004 CallNoReturn X3

Method: System.Void ReceiveContentLength(System.Int32 contentLength)

Disassembly:
	0x03E5F280 MOV X20, X0

ISIL:
	001 Return 

Method: System.Void CompleteContent()

Disassembly:
	0x03E5F284 CBNZ X8, 0x3E5F29C

ISIL:
	001 Return 

Method: System.Single GetProgress()

Disassembly:
	0x03E5F288 ADRP X0, 0xFFFFFFFFFCC90000
	0x03E5F28C ADD X0, X0, 0xB51

ISIL:
	001 Move S0, W31
	002 Return V0

Method: System.Byte* InternalGetByteArray(UnityEngine.Networking.DownloadHandler dh, out System.Int32 length)

Disassembly:
	0x03E5F290 BL 0x1C16CB8
	0x03E5F294 MOV X8, X0
	0x03E5F298 STR X0, [X21 + 0x9B0]
	0x03E5F29C MOV X0, X20
	0x03E5F2A0 BLR X8
	0x03E5F2A4 TBZ X0, 0x0, 0x3E5F2E4
	0x03E5F2A8 ADRP X21, 0x589000
	0x03E5F2AC LDR X8, [X21 + 0x960]
	0x03E5F2B0 CBNZ X8, 0x3E5F2C8
	0x03E5F2B4 ADRP X0, 0xFFFFFFFFFCCA8000
	0x03E5F2B8 ADD X0, X0, 0xD18
	0x03E5F2BC BL 0x1C16CB8
	0x03E5F2C0 MOV X8, X0
	0x03E5F2C4 STR X0, [X21 + 0x960]
	0x03E5F2C8 MOV X0, X20
	0x03E5F2CC MOV X1, X19
	0x03E5F2D0 BLR X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x58A000
	006 Move X2, [X21+2312]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53694464
	012 Add X0, X0, 1465
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2312], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Byte[] InternalGetByteArray(UnityEngine.Networking.DownloadHandler dh)

Disassembly:
	0x03E5EE7C BL 0x3E5E874
	0x03E5EE80 MOV X0, X20
	0x03E5EE84 MOV X1, X21
	0x03E5EE88 BL 0x3E5EBFC
	0x03E5EE8C MOV X0, X20
	0x03E5EE90 MOV X1, X19
	0x03E5EE94 LDP X20, X19, [X31 + 0x30]
	0x03E5EE98 LDP X22, X21, [X31 + 0x20]
	0x03E5EE9C LDP X24, X23, [X31 + 0x10]
	0x03E5EEA0 LDR X30, [X31], #0x40
	0x03E5EEA4 B 0x3E5ED00
	0x03E5EEA8 STP X30, X21, [X31 - 0x20]!
	0x03E5EEAC STP X20, X19, [X31 + 0x10]
	0x03E5EEB0 MOV X19, X0
	0x03E5EEB4 BL 0x3E5EF44
	0x03E5EEB8 MOV X0, X19
	0x03E5EEBC BL 0x3E5E6A0
	0x03E5EEC0 MOV X0, X19
	0x03E5EEC4 LDP X20, X19, [X31 + 0x10]
	0x03E5EEC8 MOV X1, X31
	0x03E5EECC LDP X30, X21, [X31], #0x20
	0x03E5EED0 B 0x33CB4DC
	0x03E5EED4 CMP W1, 0x1
	0x03E5EED8 MOV X21, X0
	0x03E5EEDC B.NE 0x3E5EF0C
	0x03E5EEE0 MOV X0, X21
	0x03E5EEE4 BL 0x3EB1AD0
	0x03E5EEE8 LDR X20, [X0]
	0x03E5EEEC BL 0x3EB1AE0
	0x03E5EEF0 MOV X0, X19
	0x03E5EEF4 MOV X1, X31
	0x03E5EEF8 BL 0x33CB4DC
	0x03E5EEFC CBNZ X20, 0x3E5EF14

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x58B000
	006 Move W8, [X20+2320]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x30E000
	013 Move X0, [X0+3480]
	014 Call 0x1C17CF4
	015 Move X0, 0x2EC000
	016 Move X0, [X0+1696]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2320], W8
	020 Move [X31], X31
	021 Move [X31+8], X31
	022 Compare X19, 0
	023 JumpIfEqual {43}
	024 Move X8, [X19]
	025 Move X0, X19
	026 Move X9, [X8+408]
	027 Move X1, [X8+416]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move [X31], X0
	030 Move [X31+8], X1
	031 Compare X0, 0
	032 JumpIfEqual {38}
	033 Move X8, 0x30E000
	034 Move X8, [X8+3480]
	035 Add X0, X31, 0
	036 Move X1, [X8]
	037 Call NativeArray`1<Byte>.ToArray, X0
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X30, [X31+16]
	041 Add X31, X31, 48
	042 Return X0
	043 Call 0x1C17F20

Method: Unity.Collections.NativeArray`1<System.Byte> InternalGetNativeArray(UnityEngine.Networking.DownloadHandler dh, ref Unity.Collections.NativeArray`1<System.Byte> nativeArray)

Disassembly:
	0x03E5F2D4 CBNZ W0, 0x3E5F32C
	0x03E5F2D8 LDP X20, X19, [X31 + 0x10]
	0x03E5F2DC LDP X30, X21, [X31], #0x20
	0x03E5F2E0 RET
	0x03E5F2E4 ADRP X0, 0x294000
	0x03E5F2E8 LDR X0, [X0 + 0x5B0]
	0x03E5F2EC BL 0x1C16D08
	0x03E5F2F0 BL 0x1C16F10
	0x03E5F2F4 MOV X19, X0
	0x03E5F2F8 ADRP X0, 0x30C000
	0x03E5F2FC LDR X0, [X0 + 0xDF8]
	0x03E5F300 BL 0x1C16D08
	0x03E5F304 MOV X1, X0
	0x03E5F308 MOV X0, X19
	0x03E5F30C MOV X2, X31
	0x03E5F310 BL 0x337DF1C
	0x03E5F314 ADRP X0, 0x30C000
	0x03E5F318 LDR X0, [X0 + 0xE08]
	0x03E5F31C BL 0x1C16D08
	0x03E5F320 MOV X1, X0
	0x03E5F324 MOV X0, X19
	0x03E5F328 BL 0x1C16DEC
	0x03E5F32C BL 0x3E5E588
	0x03E5F330 MOV X19, X0
	0x03E5F334 ADRP X0, 0x294000
	0x03E5F338 LDR X0, [X0 + 0x5B0]
	0x03E5F33C BL 0x1C16D08
	0x03E5F340 BL 0x1C16F10
	0x03E5F344 MOV X1, X19
	0x03E5F348 MOV X2, X31
	0x03E5F34C MOV X20, X0
	0x03E5F350 BL 0x337DF1C
	0x03E5F354 ADRP X0, 0x30C000
	0x03E5F358 LDR X0, [X0 + 0xE08]
	0x03E5F35C BL 0x1C16D08
	0x03E5F360 MOV X1, X0
	0x03E5F364 MOV X0, X20
	0x03E5F368 BL 0x1C16DEC
	0x03E5F36C STR X30, [X31 - 0x20]!
	0x03E5F370 STP X20, X19, [X31 + 0x10]
	0x03E5F374 ADRP X20, 0x589000
	0x03E5F378 LDR X1, [X20 + 0x970]
	0x03E5F37C MOV X19, X0
	0x03E5F380 CBNZ X1, 0x3E5F398
	0x03E5F384 ADRP X0, 0xFFFFFFFFFCCCA000
	0x03E5F388 ADD X0, X0, 0x62C
	0x03E5F38C BL 0x1C16CB8
	0x03E5F390 MOV X1, X0
	0x03E5F394 STR X0, [X20 + 0x970]
	0x03E5F398 MOV X0, X19
	0x03E5F39C LDP X20, X19, [X31 + 0x10]
	0x03E5F3A0 LDR X30, [X31], #0x20
	0x03E5F3A4 BR X1
	0x03E5F3A8 SUB X31, X31, 0x30

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x58A000
	007 Move W8, [X21+2321]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2EB000
	015 Move X0, [X0+1696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2321], W8
	019 Move X21, 0x58A000
	020 Move X8, [X21+2312]
	021 Move [X31+12], W31
	022 Compare X8, 0
	023 JumpIfNotEqual {29}
	024 Move X0, -53694464
	025 Add X0, X0, 1465
	026 Call 0x1C17CB8
	027 Move X8, X0
	028 Move [X21+2312], X0
	029 Add X1, X31, 12
	030 Move X0, X20
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X8, [X19]
	033 Move X20, X0
	034 Compare X8, 0
	035 JumpIfEqual {55}
	036 Move W9, [X19+8]
	037 Move W10, [X31+12]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X21, 0x58A000
	040 Move W8, [X21+2322]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {53}
	045 Move X0, 0x2EB000
	046 Move X0, [X0+1696]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X21+2322], W8
	050 Move X8, [X19]
	051 Compare X8, 0
	052 JumpIfEqual {55}
	053 Move [X19], X31
	054 Move [X19+8], X31
	055 Move W2, [X31+12]
	056 Move X0, X19
	057 Move X1, X20
	058 Call DownloadHandler.CreateNativeArrayForNativeData, X0, X1, X2
	059 Move X8, [X19]
	060 Move X1, [X19+8]
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X30, [X31+16]
	064 Move X21, [X31+24]
	065 Move X0, X8
	066 Add X31, X31, 48
	067 Return X0

Method: System.Void DisposeNativeArray(ref Unity.Collections.NativeArray`1<System.Byte> data)

Disassembly:
	0x03E5F3AC STP X30, X21, [X31 + 0x10]
	0x03E5F3B0 STP X20, X19, [X31 + 0x20]
	0x03E5F3B4 ADRP X20, 0x589000
	0x03E5F3B8 LDRB W8, [X20 + 0x978]
	0x03E5F3BC MOV X19, X0
	0x03E5F3C0 TBNZ X8, 0x0, 0x3E5F3E4
	0x03E5F3C4 ADRP X0, 0x296000
	0x03E5F3C8 LDR X0, [X0 + 0xA60]
	0x03E5F3CC BL 0x1C16CF4
	0x03E5F3D0 ADRP X0, 0x30C000
	0x03E5F3D4 LDR X0, [X0 + 0xE10]
	0x03E5F3D8 BL 0x1C16CF4
	0x03E5F3DC MOVZ W8, 0x1
	0x03E5F3E0 STRB W8, [X20 + 0x978]
	0x03E5F3E4 ADRP X20, 0x589000
	0x03E5F3E8 LDR X8, [X20 + 0x9B8]
	0x03E5F3EC CBNZ X8, 0x3E5F404

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x58A000
	005 Move W8, [X20+2322]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2EB000
	012 Move X0, [X0+1696]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2322], W8
	016 Move X8, [X19]
	017 Compare X8, 0
	018 JumpIfEqual {21}
	019 Move [X19], X31
	020 Move [X19+8], X31
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return 

Method: System.Void CreateNativeArrayForNativeData(ref Unity.Collections.NativeArray`1<System.Byte> data, System.Byte* bytes, System.Int32 length)

Disassembly:
	0x03E5F3F0 ADRP X0, 0xFFFFFFFFFCCCA000
	0x03E5F3F4 ADD X0, X0, 0x65F
	0x03E5F3F8 BL 0x1C16CB8
	0x03E5F3FC MOV X8, X0
	0x03E5F400 STR X0, [X20 + 0x9B8]
	0x03E5F404 MOV X0, X19
	0x03E5F408 BLR X8
	0x03E5F40C CMP W0, 0x2
	0x03E5F410 B.CC 0x3E5F4D8
	0x03E5F414 CMP W0, 0x3
	0x03E5F418 B.NE 0x3E5F4EC
	0x03E5F41C ADRP X21, 0x589000
	0x03E5F420 LDR X8, [X21 + 0x998]
	0x03E5F424 CBNZ X8, 0x3E5F43C
	0x03E5F428 ADRP X0, 0xFFFFFFFFFCC9E000
	0x03E5F42C ADD X0, X0, 0xDFB
	0x03E5F430 BL 0x1C16CB8
	0x03E5F434 MOV X8, X0
	0x03E5F438 STR X0, [X21 + 0x998]
	0x03E5F43C MOV X0, X19
	0x03E5F440 BLR X8
	0x03E5F444 ADRP X8, 0x296000
	0x03E5F448 LDR X8, [X8 + 0xA60]
	0x03E5F44C STR X0, [X31 + 0x8]
	0x03E5F450 ADD X1, X31, 0x8
	0x03E5F454 LDR X8, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x58A000
	008 Move X23, 0x2EC000
	009 Move W8, [X22+2323]
	010 Move X23, [X23+208]
	011 Move W20, W2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x2EC000
	019 Move X0, [X0+208]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2323], W8
	023 Move X3, [X23]
	024 Move W2, 4
	025 Move X0, X21
	026 Move W1, W20
	027 Call NativeArrayUnsafeUtility.ConvertExistingDataToNativeArray, X0, X1, X2
	028 Move [X19], X0
	029 Move [X19+8], X1
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Move X23, [X31+56]
	036 Return 

