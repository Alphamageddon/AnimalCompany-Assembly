Type: UnityEngine.Networking.UploadHandlerRaw

Method: System.IntPtr Create(UnityEngine.Networking.UploadHandlerRaw self, System.Byte* data, System.Int32 dataLength)

Disassembly:
	0x03E625BC MOV X20, X0
	0x03E625C0 CBNZ X2, 0x3E625D8
	0x03E625C4 ADRP X0, 0xFFFFFFFFFCC95000
	0x03E625C8 ADD X0, X0, 0xF95
	0x03E625CC BL 0x1C16CB8
	0x03E625D0 MOV X2, X0
	0x03E625D4 STR X0, [X21 + 0xB18]
	0x03E625D8 AND W1, W19, 0x1
	0x03E625DC MOV X0, X20
	0x03E625E0 LDP X20, X19, [X31 + 0x10]
	0x03E625E4 LDP X30, X21, [X31], #0x20
	0x03E625E8 BR X2
	0x03E625EC STP X30, X21, [X31 - 0x20]!
	0x03E625F0 STP X20, X19, [X31 + 0x10]
	0x03E625F4 ADRP X20, 0x586000
	0x03E625F8 ADRP X21, 0x309000
	0x03E625FC LDRB W8, [X20 + 0xB20]
	0x03E62600 LDR X21, [X21 + 0xF40]
	0x03E62604 MOV X19, X0
	0x03E62608 TBNZ X8, 0x0, 0x3E62620
	0x03E6260C ADRP X0, 0x309000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x587000
	007 Move X3, [X22+2640]
	008 Move W19, W2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -53936128
	014 Add X0, X0, 3350
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+2640], X0
	018 Move X0, X21
	019 Move X1, X20
	020 Move W2, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void .ctor(System.Byte[] data)

Disassembly:
	0x03E61878 ADRP X0, 0xFFFFFFFFFCC9E000
	0x03E6187C ADD X0, X0, 0xB0D
	0x03E61880 BL 0x1C16CB8
	0x03E61884 STR X0, [X19 + 0xA60]
	0x03E61888 LDP X30, X19, [X31], #0x10
	0x03E6188C BR X0
	0x03E61890 STP X30, X21, [X31 - 0x20]!
	0x03E61894 STP X20, X19, [X31 + 0x10]
	0x03E61898 ADRP X20, 0x587000
	0x03E6189C LDRB W8, [X20 + 0xA68]
	0x03E618A0 MOV X19, X0
	0x03E618A4 TBNZ X8, 0x0, 0x3E618BC
	0x03E618A8 ADRP X0, 0x30A000
	0x03E618AC LDR X0, [X0 + 0xEE0]
	0x03E618B0 BL 0x1C16CF4
	0x03E618B4 MOVZ W8, 0x1
	0x03E618B8 STRB W8, [X20 + 0xA68]
	0x03E618BC ADRP X21, 0x587000
	0x03E618C0 ADRP X20, 0x30A000
	0x03E618C4 LDR X8, [X21 + 0xA60]
	0x03E618C8 LDR X20, [X20 + 0xEE0]
	0x03E618CC CBNZ X8, 0x3E618E4
	0x03E618D0 ADRP X0, 0xFFFFFFFFFCC9E000
	0x03E618D4 ADD X0, X0, 0xB0D
	0x03E618D8 BL 0x1C16CB8
	0x03E618DC MOV X8, X0
	0x03E618E0 STR X0, [X21 + 0xA60]
	0x03E618E4 BLR X8
	0x03E618E8 LDR X8, [X20]
	0x03E618EC MOV X21, X0
	0x03E618F0 MOV X0, X8
	0x03E618F4 BL 0x1C16F10
	0x03E618F8 MOV X1, X31
	0x03E618FC MOV X20, X0
	0x03E61900 BL 0x33BDD8C

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x588000
	007 Move W8, [X21+2648]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x30B000
	015 Move X0, [X0+3728]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2648], W8
	019 Compare X20, 0
	020 JumpIfEqual {35}
	021 Move X8, [X20+24]
	022 Compare X8, 0
	023 JumpIfEqual {35}
	024 Move X8, 0x30B000
	025 Move X8, [X8+3728]
	026 Add X0, X31, 0
	027 Move W2, 4
	028 Move X1, X20
	029 Move X3, [X8]
	030 Move [X31], X31
	031 Move [X31+8], X31
	032 Call NativeArray`1<Byte>..ctor, X0, X1, X2
	033 Move X1, [X31]
	034 Move X2, [X31+8]
	035 Move X2, X31
	036 Move X1, X31
	037 Move W3, 1
	038 Move X0, X19
	039 Call UploadHandlerRaw..ctor, X0, X1, X2
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+16]
	043 Move X21, [X31+24]
	044 Add X31, X31, 48
	045 Return 

Method: System.Void .ctor(Unity.Collections.NativeArray`1<System.Byte> data, System.Boolean transferOwnership)

Disassembly:
	0x03E62610 LDR X0, [X0 + 0xF40]
	0x03E62614 BL 0x1C16CF4
	0x03E62618 MOVZ W8, 0x1
	0x03E6261C STRB W8, [X20 + 0xB20]
	0x03E62620 LDR X8, [X21]
	0x03E62624 LDR X8, [X8 + 0xB8]
	0x03E62628 LDR X8, [X8]
	0x03E6262C CBZ X8, 0x3E6264C
	0x03E62630 LDR X3, [X8 + 0x18]
	0x03E62634 LDR X0, [X8 + 0x40]
	0x03E62638 LDR X2, [X8 + 0x28]
	0x03E6263C MOV X1, X19
	0x03E62640 LDP X20, X19, [X31 + 0x10]
	0x03E62644 LDP X30, X21, [X31], #0x20
	0x03E62648 BR X3
	0x03E6264C LDP X20, X19, [X31 + 0x10]
	0x03E62650 LDP X30, X21, [X31], #0x20
	0x03E62654 RET
	0x03E62658 STR X30, [X31 - 0x40]!
	0x03E6265C STP X24, X23, [X31 + 0x10]
	0x03E62660 STP X22, X21, [X31 + 0x20]
	0x03E62664 STP X20, X19, [X31 + 0x30]
	0x03E62668 ADRP X20, 0x586000
	0x03E6266C ADRP X23, 0x309000
	0x03E62670 LDRB W8, [X20 + 0xB21]
	0x03E62674 LDR X23, [X23 + 0xF48]
	0x03E62678 MOV X19, X0
	0x03E6267C TBNZ X8, 0x0, 0x3E626A0
	0x03E62680 ADRP X0, 0x2FB000
	0x03E62684 LDR X0, [X0 + 0x370]
	0x03E62688 BL 0x1C16CF4
	0x03E6268C ADRP X0, 0x309000
	0x03E62690 LDR X0, [X0 + 0xF48]
	0x03E62694 BL 0x1C16CF4
	0x03E62698 MOVZ W8, 0x1
	0x03E6269C STRB W8, [X20 + 0xB21]
	0x03E626A0 LDR X8, [X23]
	0x03E626A4 ADRP X24, 0x2FB000
	0x03E626A8 LDR X8, [X8 + 0xB8]
	0x03E626AC LDR X20, [X8]
	0x03E626B0 LDR X24, [X24 + 0x370]
	0x03E626B4 MOV X0, X20
	0x03E626B8 MOV X1, X19
	0x03E626BC MOV X2, X31
	0x03E626C0 BL 0x33C0DE4
	0x03E626C4 CBZ X0, 0x3E626E4
	0x03E626C8 LDR X22, [X24]
	0x03E626CC MOV X21, X0
	0x03E626D0 MOV X1, X22
	0x03E626D4 BL 0x1C16E00
	0x03E626D8 MOV X1, X0
	0x03E626DC CBNZ X0, 0x3E626E8
	0x03E626E0 B 0x3E62718
	0x03E626E4 MOV X1, X31
	0x03E626E8 LDR X8, [X23]
	0x03E626EC MOV X2, X20
	0x03E626F0 LDR X0, [X8 + 0xB8]
	0x03E626F4 BL 0x1C24138
	0x03E626F8 CMP X20, X0
	0x03E626FC MOV X20, X0
	0x03E62700 B.NE 0x3E626B4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x587000
	008 Move W8, [X23+2649]
	009 Move W22, W3
	010 Move X20, X2
	011 Move X21, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x30A000
	018 Move X0, [X0+3488]
	019 Call 0x1C17CF4
	020 Move X0, 0x2E8000
	021 Move X0, [X0+1696]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+2649], W8
	025 Move X0, X19
	026 Move X1, X31
	027 Call Object..ctor, X0
	028 Compare X21, 0
	029 JumpIfEqual {57}
	030 Compare W20, 0
	031 JumpIfEqual {57}
	032 Move X8, 0x30A000
	033 Move X8, [X8+3488]
	034 Move TEMP, X22
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {40}
	038 Move [X19+24], X21
	039 Move [X19+32], X20
	040 Move X2, [X8]
	041 Move X0, X21
	042 Move X1, X20
	043 Call NativeArrayUnsafeUtility.GetUnsafeReadOnlyPtr, X0
	044 Move X22, 0x587000
	045 Move X8, [X22+2640]
	046 Move X21, X0
	047 Compare X8, 0
	048 JumpIfNotEqual {54}
	049 Move X0, -53936128
	050 Add X0, X0, 3350
	051 Call 0x1C17CB8
	052 Move X8, X0
	053 Move [X22+2640], X0
	054 Move X0, X19
	055 Move X1, X21
	056 Move W2, W20
	057 Move X20, 0x587000
	058 Move X8, [X20+2640]
	059 Compare X8, 0
	060 JumpIfNotEqual {66}
	061 Move X0, -53936128
	062 Add X0, X0, 3350
	063 Call 0x1C17CB8
	064 Move X8, X0
	065 Move [X20+2640], X0
	066 Move X0, X19
	067 Move X1, X31
	068 Move W2, W31
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move [X19+16], X0
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X30, [X31+48]
	076 Move X23, [X31+56]
	077 Return 

Method: System.Void Dispose()

Disassembly:
	0x03E62704 LDP X20, X19, [X31 + 0x30]
	0x03E62708 LDP X22, X21, [X31 + 0x20]
	0x03E6270C LDP X24, X23, [X31 + 0x10]
	0x03E62710 LDR X30, [X31], #0x40
	0x03E62714 RET
	0x03E62718 MOV X0, X21
	0x03E6271C MOV X1, X22
	0x03E62720 BL 0x1C171E0
	0x03E62724 STR X30, [X31 - 0x40]!
	0x03E62728 STP X24, X23, [X31 + 0x10]
	0x03E6272C STP X22, X21, [X31 + 0x20]
	0x03E62730 STP X20, X19, [X31 + 0x30]
	0x03E62734 ADRP X20, 0x586000
	0x03E62738 ADRP X23, 0x309000
	0x03E6273C LDRB W8, [X20 + 0xB22]
	0x03E62740 LDR X23, [X23 + 0xF48]
	0x03E62744 MOV X19, X0
	0x03E62748 TBNZ X8, 0x0, 0x3E6276C
	0x03E6274C ADRP X0, 0x2FB000
	0x03E62750 LDR X0, [X0 + 0x370]
	0x03E62754 BL 0x1C16CF4
	0x03E62758 ADRP X0, 0x309000
	0x03E6275C LDR X0, [X0 + 0xF48]
	0x03E62760 BL 0x1C16CF4
	0x03E62764 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x587000
	005 Move W8, [X20+2650]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x2BA000
	012 Move X0, [X0+3432]
	013 Call 0x1C17CF4
	014 Move X0, 0x2E8000
	015 Move X0, [X0+1696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2650], W8
	019 Move X0, X19
	020 Add X0, X0, 24
	021 Move X8, [X0]
	022 Compare X8, 0
	023 JumpIfEqual {28}
	024 Move X8, 0x2BA000
	025 Move X8, [X8+3432]
	026 Move X1, [X8]
	027 Call NativeArray`1<Byte>.Dispose, X0
	028 Move X0, X19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Call UploadHandler.Dispose, X0
	033 Return 

