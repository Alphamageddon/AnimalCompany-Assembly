Type: UnityEngine.WWWTranscoder

Method: System.Byte Hex2Byte(System.Byte[] b, System.Int32 offset)

Disassembly:
	0x03E5DFAC LDR X8, [X8 + 0x988]
	0x03E5DFB0 LDP X20, X19, [X31 + 0x10]
	0x03E5DFB4 LDR X0, [X8]
	0x03E5DFB8 LDP X30, X21, [X31], #0x20
	0x03E5DFBC RET
	0x03E5DFC0 STR X30, [X31 - 0x20]!
	0x03E5DFC4 STP X20, X19, [X31 + 0x10]
	0x03E5DFC8 ADRP X20, 0x58B000
	0x03E5DFCC LDRB W8, [X20 + 0x8F9]
	0x03E5DFD0 MOV X19, X0
	0x03E5DFD4 TBNZ X8, 0x0, 0x3E5DFF8
	0x03E5DFD8 ADRP X0, 0x29F000
	0x03E5DFDC LDR X0, [X0 + 0x8D8]
	0x03E5DFE0 BL 0x1C16CF4
	0x03E5DFE4 ADRP X0, 0x2DD000
	0x03E5DFE8 LDR X0, [X0 + 0xC00]
	0x03E5DFEC BL 0x1C16CF4
	0x03E5DFF0 MOVZ W8, 0x1
	0x03E5DFF4 STRB W8, [X20 + 0x8F9]
	0x03E5DFF8 ADRP X20, 0x58B000
	0x03E5DFFC LDR X8, [X20 + 0x900]
	0x03E5E000 CBNZ X8, 0x3E5E018
	0x03E5E004 ADRP X0, 0xFFFFFFFFFCC93000
	0x03E5E008 ADD X0, X0, 0xCDD
	0x03E5E00C BL 0x1C16CB8
	0x03E5E010 MOV X8, X0
	0x03E5E014 STR X0, [X20 + 0x900]
	0x03E5E018 MOV X0, X19
	0x03E5E01C BLR X8
	0x03E5E020 MOV X1, X31
	0x03E5E024 MOV X19, X0
	0x03E5E028 BL 0x32277A8
	0x03E5E02C TBNZ X0, 0x0, 0x3E5E1E8
	0x03E5E030 CBZ X19, 0x3E5E1F8
	0x03E5E034 ADRP X8, 0x2DC000
	0x03E5E038 LDR X8, [X8 + 0xC00]
	0x03E5E03C MOVZ W2, 0x5
	0x03E5E040 MOV X0, X19
	0x03E5E044 MOV X3, X31
	0x03E5E048 LDR X1, [X8]
	0x03E5E04C BL 0x322BD40
	0x03E5E050 TBNZ X0, 0x1F, 0x3E5E1E8
	0x03E5E054 MOV W2, W0

ISIL:
	001 Move [X31-16], X30
	002 Move W8, 0xFFFD
	003 NotImplemented "Instruction MOVK not yet implemented."
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move X8, X0
	006 Compare X0, 0
	007 JumpIfEqual {37}
	008 Move W9, [X8+24]
	009 Add W11, W1, 2
	010 Move W0, W31
	011 Move X10, W1
	012 Move X11, W11
	013 Add X8, X8, 32
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move W13, [X8]
	016 Subtract W12, W13, 48
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Subtract W12, W13, 65
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Subtract W12, W13, 97
	021 Subtract W14, W13, 87
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CSEL not yet implemented."
	024 Subtract W12, W13, 55
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W13, W0
	027 ShiftRight W13, 28
	028 And W13, W13, 127
	029 Add X10, X10, 1
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Add W0, W12, W13
	032 Move W0, W31
	033 Move W0, 63
	034 Move X30, [X31+16]
	035 Return X0
	036 Call 0x1C17F28
	037 Call 0x1C17F20

Method: System.Void Byte2Hex(System.Byte b, System.Byte[] hexChars, out System.Byte byte0, out System.Byte byte1)

Disassembly:
	0x03E5E058 MOVZ W1, 0x3D
	0x03E5E05C MOV X0, X19
	0x03E5E060 MOV X3, X31
	0x03E5E064 BL 0x322BDA8
	0x03E5E068 TBNZ X0, 0x1F, 0x3E5E1E8
	0x03E5E06C ADD W1, W0, 0x1
	0x03E5E070 MOV X0, X19
	0x03E5E074 MOV X2, X31
	0x03E5E078 BL 0x322B484
	0x03E5E07C CBZ X0, 0x3E5E1F8
	0x03E5E080 MOV X1, X31
	0x03E5E084 BL 0x322B8DC
	0x03E5E088 ADRP X8, 0x29E000
	0x03E5E08C LDR X8, [X8 + 0x8D8]
	0x03E5E090 MOV X19, X0
	0x03E5E094 MOVZ W1, 0x2
	0x03E5E098 LDR X8, [X8]
	0x03E5E09C MOV X0, X8
	0x03E5E0A0 BL 0x1C16D6C
	0x03E5E0A4 CBZ X0, 0x3E5E1F8
	0x03E5E0A8 LDR W8, [X0 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {22}
	004 Move W9, [X1+24]
	005 Move W8, W0
	006 ShiftRight W8, 4
	007 And W8, W8, 127
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Add X8, X1, W8
	010 Move W8, [X8+32]
	011 Move [X2], W8
	012 Move W9, [X1+24]
	013 And W8, W0, 255
	014 And W8, W8, 15
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Add X8, X1, W8
	017 Move W8, [X8+32]
	018 Move [X3], W8
	019 Move X30, [X31+16]
	020 Return 
	021 Call 0x1C17F28
	022 Call 0x1C17F20

Method: System.String DataEncode(System.String toEncode)

Disassembly:
	0x03E5E0AC MOV X1, X0
	0x03E5E0B0 CBZ W8, 0x3E5E130
	0x03E5E0B4 MOVZ W9, 0x27
	0x03E5E0B8 CMP W8, 0x1
	0x03E5E0BC STRH W9, [X1 + 0x20]
	0x03E5E0C0 B.EQ 0x3E5E130
	0x03E5E0C4 MOVZ W8, 0x22
	0x03E5E0C8 STRH W8, [X1 + 0x22]
	0x03E5E0CC CBZ X19, 0x3E5E1F8
	0x03E5E0D0 MOV X0, X19
	0x03E5E0D4 MOV X2, X31
	0x03E5E0D8 BL 0x322BBA0
	0x03E5E0DC CBZ X0, 0x3E5E1F8
	0x03E5E0E0 MOV X1, X31
	0x03E5E0E4 BL 0x322B8DC
	0x03E5E0E8 CBZ X0, 0x3E5E1F8
	0x03E5E0EC MOVZ W1, 0x3B
	0x03E5E0F0 MOV X2, X31
	0x03E5E0F4 MOV X19, X0
	0x03E5E0F8 BL 0x322BD98
	0x03E5E0FC TBNZ X0, 0x1F, 0x3E5E118
	0x03E5E100 MOV W2, W0
	0x03E5E104 MOV X0, X19
	0x03E5E108 MOV W1, W31
	0x03E5E10C MOV X3, X31
	0x03E5E110 BL 0x3228DE4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x58B000
	006 Move X20, 0x30E000
	007 Move W8, [X21+2270]
	008 Move X20, [X20+3368]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x30E000
	015 Move X0, [X0+3368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2270], W8
	019 Move X0, X31
	020 Call Encoding.get_UTF8
	021 Move X8, [X20]
	022 Move X20, X0
	023 Move W9, [X8+224]
	024 Compare W9, 0
	025 JumpIfNotEqual {28}
	026 Move X0, X8
	027 Call 0x1C17DFC
	028 Move X0, X19
	029 Move X1, X20
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]

Method: System.String DataEncode(System.String toEncode, System.Text.Encoding e)

Disassembly:
	0x03E5E114 MOV X19, X0
	0x03E5E118 MOV X0, X19
	0x03E5E11C MOV X1, X31
	0x03E5E120 BL 0x3243998
	0x03E5E124 LDP X20, X19, [X31 + 0x10]
	0x03E5E128 LDR X30, [X31], #0x20
	0x03E5E12C RET
	0x03E5E130 BL 0x1C16F28
	0x03E5E134 CMP W1, 0x1
	0x03E5E138 MOV X20, X0
	0x03E5E13C B.NE 0x3E5E224
	0x03E5E140 MOV X0, X20
	0x03E5E144 BL 0x3EB1AD0
	0x03E5E148 MOV X20, X0
	0x03E5E14C ADRP X0, 0x29D000
	0x03E5E150 LDR X0, [X0 + 0x578]
	0x03E5E154 BL 0x1C16D08
	0x03E5E158 LDR X8, [X20]
	0x03E5E15C LDR X1, [X8]
	0x03E5E160 BL 0x1C17270
	0x03E5E164 TBNZ X0, 0x0, 0x3E5E184
	0x03E5E168 ADRP X0, 0x295000
	0x03E5E16C LDR X0, [X0 + 0xB40]
	0x03E5E170 BL 0x1C16D08
	0x03E5E174 LDR X8, [X20]
	0x03E5E178 LDR X1, [X8]
	0x03E5E17C BL 0x1C17270
	0x03E5E180 TBZ X0, 0x0, 0x3E5E1FC
	0x03E5E184 LDR X20, [X20]
	0x03E5E188 BL 0x3EB1AE0
	0x03E5E18C CBZ X20, 0x3E5E1F8
	0x03E5E190 LDR X8, [X20]
	0x03E5E194 MOV X0, X20
	0x03E5E198 LDP X9, X1, [X8 + 0x188]
	0x03E5E19C BLR X9
	0x03E5E1A0 MOV X20, X0
	0x03E5E1A4 ADRP X0, 0x30D000
	0x03E5E1A8 LDR X0, [X0 + 0xDA8]
	0x03E5E1AC BL 0x1C16D08
	0x03E5E1B0 MOV X1, X19
	0x03E5E1B4 MOV X2, X20
	0x03E5E1B8 MOV X3, X31
	0x03E5E1BC BL 0x3227BD4
	0x03E5E1C0 MOV X19, X0
	0x03E5E1C4 ADRP X0, 0x295000
	0x03E5E1C8 LDR X0, [X0 + 0xA28]
	0x03E5E1CC BL 0x1C16D08
	0x03E5E1D0 LDR W8, [X0 + 0xE0]
	0x03E5E1D4 CBNZ W8, 0x3E5E1DC
	0x03E5E1D8 BL 0x1C16DFC
	0x03E5E1DC MOV X0, X19
	0x03E5E1E0 MOV X1, X31
	0x03E5E1E4 BL 0x3C06A04
	0x03E5E1E8 LDP X20, X19, [X31 + 0x10]
	0x03E5E1EC MOV X0, X31
	0x03E5E1F0 LDR X30, [X31], #0x20
	0x03E5E1F4 B 0x3241948
	0x03E5E1F8 BL 0x1C16F20
	0x03E5E1FC MOVZ W0, 0x8
	0x03E5E200 BL 0x3EB1AF0
	0x03E5E204 LDR X8, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x58B000
	007 Move W8, [X21+2271]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2C3000
	015 Move X0, [X0+248]
	016 Call 0x1C17CF4
	017 Move X0, 0x30E000
	018 Move X0, [X0+3368]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2271], W8
	022 Compare X19, 0
	023 JumpIfEqual {74}
	024 Move X8, [X19]
	025 Move X22, 0x30E000
	026 Move X21, 0x2C3000
	027 Move X0, X19
	028 Move X9, [X8+616]
	029 Move X2, [X8+624]
	030 Move X22, [X22+3368]
	031 Move X21, [X21+248]
	032 Move X1, X20
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move X8, [X22]
	035 Move X19, X0
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {42}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move X8, [X22]
	042 Move X8, [X8+184]
	043 Move X0, X19
	044 Move W4, W31
	045 Move X2, [X8+32]
	046 Move X3, [X8+40]
	047 Move W1, [X8+16]
	048 Call WWWTranscoder.Encode, X0, X1, X2, X3, X4
	049 Move X8, [X21]
	050 Move X19, X0
	051 Move W9, [X8+224]
	052 Compare W9, 0
	053 JumpIfNotEqual {56}
	054 Move X0, X8
	055 Call 0x1C17DFC
	056 Move X0, X31
	057 Call Encoding.get_ASCII
	058 Compare X19, 0
	059 JumpIfEqual {74}
	060 Compare X0, 0
	061 JumpIfEqual {74}
	062 Move X8, [X0]
	063 Move W3, [X19+24]
	064 Move X1, X19
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X5, [X8+904]
	068 Move X4, [X8+912]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move W2, W31
	072 Move X30, [X31+48]
	073 CallNoReturn X5
	074 Call 0x1C17F20

Method: System.Byte[] DataEncode(System.Byte[] toEncode)

Disassembly:
	0x03E5DD0C STR X31, [X19 + 0x10]
	0x03E5DD10 LDP X20, X19, [X31 + 0x10]
	0x03E5DD14 LDR X30, [X31], #0x20
	0x03E5DD18 RET
	0x03E5DD1C STR X30, [X31 - 0x20]!
	0x03E5DD20 STP X20, X19, [X31 + 0x10]
	0x03E5DD24 ADRP X20, 0x58B000
	0x03E5DD28 LDR X1, [X20 + 0x8F0]
	0x03E5DD2C MOV X19, X0
	0x03E5DD30 CBNZ X1, 0x3E5DD48
	0x03E5DD34 ADRP X0, 0xFFFFFFFFFCC96000
	0x03E5DD38 ADD X0, X0, 0xE32
	0x03E5DD3C BL 0x1C16CB8
	0x03E5DD40 MOV X1, X0
	0x03E5DD44 STR X0, [X20 + 0x8F0]
	0x03E5DD48 MOV X0, X19
	0x03E5DD4C LDP X20, X19, [X31 + 0x10]
	0x03E5DD50 LDR X30, [X31], #0x20
	0x03E5DD54 BR X1
	0x03E5DD58 MOV X1, X31
	0x03E5DD5C B 0x33BDD8C
	0x03E5DD60 STP X30, X21, [X31 - 0x20]!
	0x03E5DD64 STP X20, X19, [X31 + 0x10]
	0x03E5DD68 LDR X8, [X0]
	0x03E5DD6C MOV X19, X0
	0x03E5DD70 LDP X9, X1, [X8 + 0x188]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x58C000
	006 Move X20, 0x30F000
	007 Move W8, [X21+2272]
	008 Move X20, [X20+3368]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x30F000
	015 Move X0, [X0+3368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2272], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move W4, W31
	030 Move X2, [X8+32]
	031 Move X3, [X8+40]
	032 Move W1, [X8+16]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Call WWWTranscoder.Encode, X0, X1, X2, X3, X4
	036 Return X0

Method: System.String QPEncode(System.String toEncode, System.Text.Encoding e)

Disassembly:
	0x03E5DC18 MOVZ W8, 0x5F
	0x03E5DC1C STRB W8, [X0 + 0x20]
	0x03E5DC20 LDR X8, [X19]
	0x03E5DC24 LDR X8, [X8 + 0xB8]
	0x03E5DC28 STR X0, [X8 + 0x38]
	0x03E5DC2C MOV X0, X31
	0x03E5DC30 BL 0x3242EC8
	0x03E5DC34 CBZ X0, 0x3E5DC6C
	0x03E5DC38 ADRP X9, 0x30E000
	0x03E5DC3C LDR X8, [X0]
	0x03E5DC40 LDR X9, [X9 + 0xD90]
	0x03E5DC44 LDR X2, [X8 + 0x270]
	0x03E5DC48 LDR X1, [X9]
	0x03E5DC4C LDR X9, [X8 + 0x268]
	0x03E5DC50 BLR X9
	0x03E5DC54 LDR X8, [X19]
	0x03E5DC58 LDP X20, X19, [X31 + 0x10]
	0x03E5DC5C LDR X8, [X8 + 0xB8]
	0x03E5DC60 STR X0, [X8 + 0x40]
	0x03E5DC64 LDR X30, [X31], #0x20
	0x03E5DC68 RET
	0x03E5DC6C BL 0x1C16F20
	0x03E5DC70 BL 0x1C16F28
	0x03E5DC74 STR X30, [X31 - 0x20]!
	0x03E5DC78 STP X20, X19, [X31 + 0x10]
	0x03E5DC7C ADRP X20, 0x58B000
	0x03E5DC80 LDR X1, [X20 + 0x8E8]
	0x03E5DC84 MOV X19, X0
	0x03E5DC88 CBNZ X1, 0x3E5DCA0
	0x03E5DC8C ADRP X0, 0xFFFFFFFFFCCCA000
	0x03E5DC90 ADD X0, X0, 0x6A5
	0x03E5DC94 BL 0x1C16CB8
	0x03E5DC98 MOV X1, X0
	0x03E5DC9C STR X0, [X20 + 0x8E8]
	0x03E5DCA0 MOV X0, X19
	0x03E5DCA4 LDP X20, X19, [X31 + 0x10]
	0x03E5DCA8 LDR X30, [X31], #0x20
	0x03E5DCAC BR X1
	0x03E5DCB0 MOV W0, W31
	0x03E5DCB4 RET
	0x03E5DCB8 LDR X8, [X0]
	0x03E5DCBC LDP X3, X2, [X8 + 0x178]
	0x03E5DCC0 BR X3
	0x03E5DCC4 STR X30, [X31 - 0x20]!
	0x03E5DCC8 STP X20, X19, [X31 + 0x10]
	0x03E5DCCC MOV X19, X0
	0x03E5DCD0 LDR X0, [X0 + 0x10]
	0x03E5DCD4 MOV X1, X31
	0x03E5DCD8 MOV X2, X31
	0x03E5DCDC BL 0x33C5D2C
	0x03E5DCE0 TBZ X0, 0x0, 0x3E5DD10
	0x03E5DCE4 ADRP X20, 0x58B000
	0x03E5DCE8 LDR X8, [X20 + 0x8E8]
	0x03E5DCEC CBNZ X8, 0x3E5DD04
	0x03E5DCF0 ADRP X0, 0xFFFFFFFFFCCCA000
	0x03E5DCF4 ADD X0, X0, 0x6A5
	0x03E5DCF8 BL 0x1C16CB8
	0x03E5DCFC MOV X8, X0
	0x03E5DD00 STR X0, [X20 + 0x8E8]
	0x03E5DD04 MOV X0, X19
	0x03E5DD08 BLR X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x58C000
	007 Move W8, [X21+2273]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2C4000
	015 Move X0, [X0+248]
	016 Call 0x1C17CF4
	017 Move X0, 0x30F000
	018 Move X0, [X0+3368]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2273], W8
	022 Compare X19, 0
	023 JumpIfEqual {74}
	024 Move X8, [X19]
	025 Move X22, 0x30F000
	026 Move X21, 0x2C4000
	027 Move X0, X19
	028 Move X9, [X8+616]
	029 Move X2, [X8+624]
	030 Move X22, [X22+3368]
	031 Move X21, [X21+248]
	032 Move X1, X20
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move X8, [X22]
	035 Move X19, X0
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {42}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move X8, [X22]
	042 Move X8, [X8+184]
	043 Move W4, 1
	044 Move X0, X19
	045 Move X2, [X8+56]
	046 Move X3, [X8+64]
	047 Move W1, [X8+48]
	048 Call WWWTranscoder.Encode, X0, X1, X2, X3, X4
	049 Move X8, [X21]
	050 Move X19, X0
	051 Move W9, [X8+224]
	052 Compare W9, 0
	053 JumpIfNotEqual {56}
	054 Move X0, X8
	055 Call 0x1C17DFC
	056 Move X0, X31
	057 Call Encoding.get_ASCII
	058 Compare X19, 0
	059 JumpIfEqual {74}
	060 Compare X0, 0
	061 JumpIfEqual {74}
	062 Move X8, [X0]
	063 Move W3, [X19+24]
	064 Move X1, X19
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X5, [X8+904]
	068 Move X4, [X8+912]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move W2, W31
	072 Move X30, [X31+48]
	073 CallNoReturn X5
	074 Call 0x1C17F20

Method: System.Byte[] Encode(System.Byte[] input, System.Byte escapeChar, System.Byte[] space, System.Byte[] forbidden, System.Boolean uppercase)

Disassembly:
	0x03E5E208 STR X8, [X0]
	0x03E5E20C ADRP X1, 0x56000
	0x03E5E210 ADD X1, X1, 0xE58
	0x03E5E214 MOV X2, X31
	0x03E5E218 BL 0x3EB1B00
	0x03E5E21C MOV X20, X0
	0x03E5E220 BL 0x3EB1AE0
	0x03E5E224 MOV X0, X20
	0x03E5E228 BL 0x1D2C690
	0x03E5E22C BL 0x1990590
	0x03E5E230 STR X30, [X31 - 0x20]!
	0x03E5E234 STP X20, X19, [X31 + 0x10]
	0x03E5E238 ADRP X20, 0x58A000
	0x03E5E23C LDR X1, [X20 + 0x900]
	0x03E5E240 MOV X19, X0
	0x03E5E244 CBNZ X1, 0x3E5E25C
	0x03E5E248 ADRP X0, 0xFFFFFFFFFCC93000
	0x03E5E24C ADD X0, X0, 0xCDD
	0x03E5E250 BL 0x1C16CB8
	0x03E5E254 MOV X1, X0
	0x03E5E258 STR X0, [X20 + 0x900]
	0x03E5E25C MOV X0, X19
	0x03E5E260 LDP X20, X19, [X31 + 0x10]
	0x03E5E264 LDR X30, [X31], #0x20
	0x03E5E268 BR X1
	0x03E5E26C MOVZ W0, 0x1
	0x03E5E270 RET
	0x03E5E274 LDR X8, [X0]
	0x03E5E278 LDP X3, X2, [X8 + 0x1E8]
	0x03E5E27C BR X3
	0x03E5E280 RET
	0x03E5E284 RET
	0x03E5E288 FMOV S0, W31
	0x03E5E28C RET
	0x03E5E290 STP X30, X21, [X31 - 0x20]!
	0x03E5E294 STP X20, X19, [X31 + 0x10]
	0x03E5E298 ADRP X21, 0x58A000
	0x03E5E29C LDR X2, [X21 + 0x908]
	0x03E5E2A0 MOV X19, X1
	0x03E5E2A4 MOV X20, X0
	0x03E5E2A8 CBNZ X2, 0x3E5E2C0
	0x03E5E2AC ADRP X0, 0xFFFFFFFFFCCCB000
	0x03E5E2B0 ADD X0, X0, 0x5B9
	0x03E5E2B4 BL 0x1C16CB8
	0x03E5E2B8 MOV X2, X0
	0x03E5E2BC STR X0, [X21 + 0x908]
	0x03E5E2C0 MOV X0, X20
	0x03E5E2C4 MOV X1, X19
	0x03E5E2C8 LDP X20, X19, [X31 + 0x10]
	0x03E5E2CC LDP X30, X21, [X31], #0x20
	0x03E5E2D0 BR X2
	0x03E5E2D4 SUB X31, X31, 0x30
	0x03E5E2D8 STP X30, X21, [X31 + 0x10]
	0x03E5E2DC STP X20, X19, [X31 + 0x20]
	0x03E5E2E0 ADRP X21, 0x58A000
	0x03E5E2E4 LDRB W8, [X21 + 0x911]
	0x03E5E2E8 MOV X19, X1
	0x03E5E2EC MOV X20, X0
	0x03E5E2F0 TBNZ X8, 0x0, 0x3E5E308
	0x03E5E2F4 ADRP X0, 0x2EB000
	0x03E5E2F8 LDR X0, [X0 + 0x6A0]
	0x03E5E2FC BL 0x1C16CF4
	0x03E5E300 MOVZ W8, 0x1
	0x03E5E304 STRB W8, [X21 + 0x911]
	0x03E5E308 ADRP X21, 0x58A000
	0x03E5E30C LDR X8, [X21 + 0x908]
	0x03E5E310 STR W31, [X31 + 0xC]
	0x03E5E314 CBNZ X8, 0x3E5E32C
	0x03E5E318 ADRP X0, 0xFFFFFFFFFCCCB000
	0x03E5E31C ADD X0, X0, 0x5B9
	0x03E5E320 BL 0x1C16CB8
	0x03E5E324 MOV X8, X0
	0x03E5E328 STR X0, [X21 + 0x908]
	0x03E5E32C ADD X1, X31, 0xC
	0x03E5E330 MOV X0, X20
	0x03E5E334 BLR X8
	0x03E5E338 LDR X8, [X19]
	0x03E5E33C MOV X20, X0
	0x03E5E340 CBZ X8, 0x3E5E380
	0x03E5E344 LDR W9, [X19 + 0x8]
	0x03E5E348 LDR W10, [X31 + 0xC]
	0x03E5E34C CMP W9, W10
	0x03E5E350 B.EQ 0x3E5E394
	0x03E5E354 ADRP X21, 0x58A000
	0x03E5E358 LDRB W8, [X21 + 0x912]
	0x03E5E35C TBNZ X8, 0x0, 0x3E5E37C
	0x03E5E360 ADRP X0, 0x2EB000
	0x03E5E364 LDR X0, [X0 + 0x6A0]
	0x03E5E368 BL 0x1C16CF4
	0x03E5E36C MOVZ W8, 0x1
	0x03E5E370 STRB W8, [X21 + 0x912]
	0x03E5E374 LDR X8, [X19]
	0x03E5E378 CBZ X8, 0x3E5E380
	0x03E5E37C STP X31, X31, [X19]
	0x03E5E380 LDR W2, [X31 + 0xC]
	0x03E5E384 MOV X0, X19
	0x03E5E388 MOV X1, X20
	0x03E5E38C BL 0x3E5E3F0
	0x03E5E390 LDR X8, [X19]
	0x03E5E394 LDR X1, [X19 + 0x8]
	0x03E5E398 LDP X20, X19, [X31 + 0x20]
	0x03E5E39C LDP X30, X21, [X31 + 0x10]
	0x03E5E3A0 MOV X0, X8
	0x03E5E3A4 ADD X31, X31, 0x30
	0x03E5E3A8 RET
	0x03E5E3AC STR X30, [X31 - 0x20]!
	0x03E5E3B0 STP X20, X19, [X31 + 0x10]
	0x03E5E3B4 ADRP X20, 0x58A000
	0x03E5E3B8 LDRB W8, [X20 + 0x912]
	0x03E5E3BC MOV X19, X0
	0x03E5E3C0 TBNZ X8, 0x0, 0x3E5E3D8
	0x03E5E3C4 ADRP X0, 0x2EB000
	0x03E5E3C8 LDR X0, [X0 + 0x6A0]
	0x03E5E3CC BL 0x1C16CF4
	0x03E5E3D0 MOVZ W8, 0x1
	0x03E5E3D4 STRB W8, [X20 + 0x912]
	0x03E5E3D8 LDR X8, [X19]
	0x03E5E3DC CBZ X8, 0x3E5E3E4
	0x03E5E3E0 STP X31, X31, [X19]
	0x03E5E3E4 LDP X20, X19, [X31 + 0x10]
	0x03E5E3E8 LDR X30, [X31], #0x20
	0x03E5E3EC RET
	0x03E5E3F0 STP X30, X23, [X31 - 0x30]!
	0x03E5E3F4 STP X22, X21, [X31 + 0x10]
	0x03E5E3F8 STP X20, X19, [X31 + 0x20]
	0x03E5E3FC ADRP X22, 0x58A000
	0x03E5E400 ADRP X23, 0x2EC000
	0x03E5E404 LDRB W8, [X22 + 0x913]
	0x03E5E408 LDR X23, [X23 + 0xD0]
	0x03E5E40C MOV W20, W2
	0x03E5E410 MOV X21, X1
	0x03E5E414 MOV X19, X0
	0x03E5E418 TBNZ X8, 0x0, 0x3E5E430
	0x03E5E41C ADRP X0, 0x2EC000
	0x03E5E420 LDR X0, [X0 + 0xD0]
	0x03E5E424 BL 0x1C16CF4
	0x03E5E428 MOVZ W8, 0x1
	0x03E5E42C STRB W8, [X22 + 0x913]
	0x03E5E430 LDR X3, [X23]
	0x03E5E434 MOVZ W2, 0x4
	0x03E5E438 MOV X0, X21
	0x03E5E43C MOV W1, W20
	0x03E5E440 BL 0x2222394
	0x03E5E444 STP X0, X1, [X19]
	0x03E5E448 LDP X20, X19, [X31 + 0x20]
	0x03E5E44C LDP X22, X21, [X31 + 0x10]
	0x03E5E450 LDP X30, X23, [X31], #0x30
	0x03E5E454 RET
	0x03E5E458 STR X30, [X31 - 0x20]!
	0x03E5E45C STP X20, X19, [X31 + 0x10]
	0x03E5E460 ADRP X20, 0x58A000
	0x03E5E464 LDR X1, [X20 + 0x918]
	0x03E5E468 MOV X19, X0
	0x03E5E46C CBNZ X1, 0x3E5E484
	0x03E5E470 ADRP X0, 0xFFFFFFFFFCCA7000
	0x03E5E474 ADD X0, X0, 0xC4E
	0x03E5E478 BL 0x1C16CB8
	0x03E5E47C MOV X1, X0
	0x03E5E480 STR X0, [X20 + 0x918]
	0x03E5E484 MOV X0, X19
	0x03E5E488 LDP X20, X19, [X31 + 0x10]
	0x03E5E48C LDR X30, [X31], #0x20
	0x03E5E490 BR X1
	0x03E5E494 STR X30, [X31 - 0x20]!
	0x03E5E498 STP X20, X19, [X31 + 0x10]
	0x03E5E49C ADRP X20, 0x58A000
	0x03E5E4A0 LDR X8, [X20 + 0x918]
	0x03E5E4A4 MOV X19, X0
	0x03E5E4A8 CBNZ X8, 0x3E5E4C0
	0x03E5E4AC ADRP X0, 0xFFFFFFFFFCCA7000
	0x03E5E4B0 ADD X0, X0, 0xC4E
	0x03E5E4B4 BL 0x1C16CB8
	0x03E5E4B8 MOV X8, X0
	0x03E5E4BC STR X0, [X20 + 0x918]
	0x03E5E4C0 MOV X0, X19
	0x03E5E4C4 BLR X8
	0x03E5E4C8 STR X0, [X19 + 0x10]
	0x03E5E4CC LDP X20, X19, [X31 + 0x10]
	0x03E5E4D0 LDR X30, [X31], #0x20
	0x03E5E4D4 RET
	0x03E5E4D8 STR X30, [X31 - 0x20]!
	0x03E5E4DC STP X20, X19, [X31 + 0x10]
	0x03E5E4E0 MOV X1, X31
	0x03E5E4E4 MOV X19, X0
	0x03E5E4E8 BL 0x33BDD8C
	0x03E5E4EC ADRP X20, 0x58A000
	0x03E5E4F0 LDR X8, [X20 + 0x918]
	0x03E5E4F4 CBNZ X8, 0x3E5E50C
	0x03E5E4F8 ADRP X0, 0xFFFFFFFFFCCA7000
	0x03E5E4FC ADD X0, X0, 0xC4E
	0x03E5E500 BL 0x1C16CB8
	0x03E5E504 MOV X8, X0
	0x03E5E508 STR X0, [X20 + 0x918]
	0x03E5E50C MOV X0, X19
	0x03E5E510 BLR X8
	0x03E5E514 STR X0, [X19 + 0x10]
	0x03E5E518 LDP X20, X19, [X31 + 0x10]
	0x03E5E51C LDR X30, [X31], #0x20
	0x03E5E520 RET
	0x03E5E524 ADD X1, X0, 0x18
	0x03E5E528 B 0x3E5E2D4
	0x03E5E52C STP X30, X21, [X31 - 0x20]!
	0x03E5E530 STP X20, X19, [X31 + 0x10]
	0x03E5E534 ADRP X21, 0x58A000
	0x03E5E538 LDRB W8, [X21 + 0x912]
	0x03E5E53C MOV X19, X0
	0x03E5E540 ADD X20, X0, 0x18
	0x03E5E544 TBNZ X8, 0x0, 0x3E5E55C
	0x03E5E548 ADRP X0, 0x2EB000
	0x03E5E54C LDR X0, [X0 + 0x6A0]
	0x03E5E550 BL 0x1C16CF4
	0x03E5E554 MOVZ W8, 0x1
	0x03E5E558 STRB W8, [X21 + 0x912]
	0x03E5E55C LDR X8, [X20]
	0x03E5E560 CBZ X8, 0x3E5E568
	0x03E5E564 STP X31, X31, [X20]
	0x03E5E568 MOV X0, X19
	0x03E5E56C LDP X20, X19, [X31 + 0x10]
	0x03E5E570 LDP X30, X21, [X31], #0x20
	0x03E5E574 B 0x3E5DDFC
	0x03E5E578 STR X1, [X0 + 0x20]
	0x03E5E57C RET
	0x03E5E580 MOV X1, X31
	0x03E5E584 B 0x3C30D74
	0x03E5E588 STR X30, [X31 - 0x20]!
	0x03E5E58C STP X20, X19, [X31 + 0x10]
	0x03E5E590 ADRP X20, 0x58A000
	0x03E5E594 LDR X1, [X20 + 0x920]
	0x03E5E598 MOV W19, W0
	0x03E5E59C CBNZ X1, 0x3E5E5B4
	0x03E5E5A0 ADRP X0, 0xFFFFFFFFFCCA5000
	0x03E5E5A4 ADD X0, X0, 0xF7C
	0x03E5E5A8 BL 0x1C16CB8
	0x03E5E5AC MOV X1, X0
	0x03E5E5B0 STR X0, [X20 + 0x920]
	0x03E5E5B4 MOV W0, W19
	0x03E5E5B8 LDP X20, X19, [X31 + 0x10]
	0x03E5E5BC LDR X30, [X31], #0x20
	0x03E5E5C0 BR X1
	0x03E5E5C4 STR X30, [X31 - 0x20]!
	0x03E5E5C8 STP X20, X19, [X31 + 0x10]
	0x03E5E5CC ADRP X20, 0x58A000
	0x03E5E5D0 LDR X1, [X20 + 0x928]
	0x03E5E5D4 MOV X19, X0
	0x03E5E5D8 CBNZ X1, 0x3E5E5F0
	0x03E5E5DC ADRP X0, 0xFFFFFFFFFCCB9000
	0x03E5E5E0 ADD X0, X0, 0x562

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0x58B000
	015 Move W8, [X19+2274]
	016 Move W20, W4
	017 Move X21, X3
	018 Move X22, X2
	019 Move W23, W1
	020 Move X24, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {36}
	025 Move X0, 0x296000
	026 Move X0, [X0+3584]
	027 Call 0x1C17CF4
	028 Move X0, 0x29E000
	029 Move X0, [X0+1368]
	030 Call 0x1C17CF4
	031 Move X0, 0x30E000
	032 Move X0, [X0+3368]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X19+2274], W8
	036 Move [X31+12], W31
	037 Move [X31+8], W31
	038 Compare X24, 0
	039 JumpIfEqual {208}
	040 Move X8, 0x29E000
	041 Move X8, [X8+1368]
	042 Move X0, [X8]
	043 Call 0x1C17F10
	044 Move W8, [X24+24]
	045 Move X2, X31
	046 Move X19, X0
	047 Move W1, W8
	048 ShiftRight W1, 31
	049 And W1, W1, 0x3FFFFFFF
	050 Call MemoryStream..ctor, X0, X1
	051 Move X8, [X24+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X29, 0x30E000
	054 Move X29, [X29+3368]
	055 Move X28, X31
	056 And X8, X8, 0
	057 Add X27, X24, 32
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move W25, [X27]
	060 Subtract W8, W25, 32
	061 Compare X22, 0
	062 JumpIfEqual {202}
	063 Compare X19, 0
	064 JumpIfEqual {203}
	065 Move X8, [X19]
	066 Move W3, [X22+24]
	067 Move X9, [X8+904]
	068 Move X4, [X8+912]
	069 Move X0, X19
	070 Move X1, X22
	071 Move W2, W31
	072 NotImplemented "Instruction BLR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X0, [X29]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X0, X21
	080 Move W1, W25
	081 Call WWWTranscoder.ByteArrayContains, X0, X1
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {139}
	086 Compare X19, 0
	087 JumpIfEqual {204}
	088 Move X8, [X19]
	089 Move X9, [X8+936]
	090 Move X2, [X8+944]
	091 Move X0, X19
	092 Move W1, W23
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move W8, [X24+24]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X8, [X29]
	097 Move W25, [X27]
	098 Move W9, [X8+224]
	099 Move TEMP, X20
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {109}
	103 Compare W9, 0
	104 JumpIfNotEqual {108}
	105 Move X0, X8
	106 Call 0x1C17DFC
	107 Move X8, [X29]
	108 Move X9, [X8+184]
	109 Compare W9, 0
	110 JumpIfNotEqual {114}
	111 Move X0, X8
	112 Call 0x1C17DFC
	113 Move X8, [X29]
	114 Move X9, [X8+184]
	115 Add X9, X9, 8
	116 Move W10, [X8+224]
	117 Move X26, [X9]
	118 Compare W10, 0
	119 JumpIfNotEqual {122}
	120 Move X0, X8
	121 Call 0x1C17DFC
	122 Add X2, X31, 12
	123 Add X3, X31, 8
	124 Move W0, W25
	125 Move X1, X26
	126 Call WWWTranscoder.Byte2Hex, X0, X1, X2, X3
	127 Move X8, [X19]
	128 Move W1, [X31+12]
	129 Move X9, [X8+936]
	130 Move X2, [X8+944]
	131 Move X0, X19
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Move X8, [X19]
	134 Move W1, [X31+8]
	135 Move X9, [X8+936]
	136 Move X2, [X8+944]
	137 Move X0, X19
	138 NotImplemented "Instruction BLR not yet implemented."
	139 Move W8, [X24+24]
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Compare X19, 0
	142 JumpIfEqual {207}
	143 Move X8, [X19]
	144 Move W1, [X27]
	145 Move X9, [X8+936]
	146 Move X2, [X8+944]
	147 Move X0, X19
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move W8, [X24+24]
	150 Add X28, X28, 1
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Compare X19, 0
	153 JumpIfEqual {211}
	154 Move X8, [X19]
	155 Move X1, [X8+1024]
	156 Move X9, [X8+1016]
	157 Move X0, X19
	158 NotImplemented "Instruction BLR not yet implemented."
	159 Move X20, X0
	160 Move X21, X31
	161 Move X8, [X19]
	162 Move X10, 0x296000
	163 NotImplemented "Instruction LDRH not yet implemented."
	164 Move X10, [X10+3584]
	165 Move X1, [X10]
	166 Compare X9, 0
	167 JumpIfEqual {174}
	168 Move X10, [X8+176]
	169 Add X10, X10, 8
	170 NotImplemented "Instruction LDUR not yet implemented."
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Subtract X9, X9, 1
	173 Add X10, X10, 16
	174 Move X0, X19
	175 Move W2, W31
	176 Call 0x1C5D788
	177 NotImplemented "Instruction LDRSW not yet implemented."
	178 Add X8, X8, X9
	179 Add X0, X8, 312
	180 Move X8, [X0]
	181 Move X1, [X0+8]
	182 Move X0, X19
	183 NotImplemented "Instruction BLR not yet implemented."
	184 Compare X21, 0
	185 JumpIfNotEqual {209}
	186 Move X0, X20
	187 Move X20, [X31+96]
	188 Move X19, [X31+104]
	189 Move X22, [X31+80]
	190 Move X21, [X31+88]
	191 Move X24, [X31+64]
	192 Move X23, [X31+72]
	193 Move X26, [X31+48]
	194 Move X25, [X31+56]
	195 Move X28, [X31+32]
	196 Move X27, [X31+40]
	197 Move X29, [X31+16]
	198 Move X30, [X31+24]
	199 Add X31, X31, 112
	200 Return X0
	201 Call 0x1C17F28
	202 Call 0x1C17F20
	203 Call 0x1C17F20
	204 Call 0x1C17F20
	205 Call 0x1C17F28
	206 Call 0x1C17F28
	207 Call 0x1C17F20
	208 Call 0x1C17F20
	209 Move X0, X21
	210 Call 0x1C17F18
	211 Call 0x1C17F20
	212 Move X20, X0
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move X0, X20
	215 Call 0x3EB2AD0
	216 Move X21, [X0]
	217 Call 0x3EB2AE0
	218 Move X20, X31
	219 Compare X19, 0
	220 JumpIfNotEqual {161}
	221 Move X21, X31
	222 Move X20, X0
	223 Compare X19, 0
	224 JumpIfEqual {248}
	225 Move X8, [X19]
	226 Move X10, 0x296000
	227 NotImplemented "Instruction LDRH not yet implemented."
	228 Move X10, [X10+3584]
	229 Move X1, [X10]
	230 Compare X9, 0
	231 JumpIfEqual {238}
	232 Move X10, [X8+176]
	233 Add X10, X10, 8
	234 NotImplemented "Instruction LDUR not yet implemented."
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Subtract X9, X9, 1
	237 Add X10, X10, 16
	238 Move X0, X19
	239 Move W2, W31
	240 Call 0x1C5D788
	241 NotImplemented "Instruction LDRSW not yet implemented."
	242 Add X8, X8, X9
	243 Add X0, X8, 312
	244 Move X8, [X0]
	245 Move X1, [X0+8]
	246 Move X0, X19
	247 NotImplemented "Instruction BLR not yet implemented."
	248 Compare X21, 0
	249 JumpIfNotEqual {252}
	250 Move X0, X20
	251 Call 0x1D2D690
	252 Move X0, X21
	253 Call 0x1C17F18
	254 Call 0x1991590

Method: System.Boolean ByteArrayContains(System.Byte[] array, System.Byte b)

Disassembly:
	0x03E5E5E4 BL 0x1C16CB8
	0x03E5E5E8 MOV X1, X0
	0x03E5E5EC STR X0, [X20 + 0x928]
	0x03E5E5F0 MOV X0, X19
	0x03E5E5F4 LDP X20, X19, [X31 + 0x10]
	0x03E5E5F8 LDR X30, [X31], #0x20
	0x03E5E5FC BR X1
	0x03E5E600 LDRB W0, [X0 + 0x38]
	0x03E5E604 RET
	0x03E5E608 AND W8, W1, 0x1
	0x03E5E60C STRB W8, [X0 + 0x38]
	0x03E5E610 RET
	0x03E5E614 LDRB W0, [X0 + 0x39]
	0x03E5E618 RET
	0x03E5E61C AND W8, W1, 0x1
	0x03E5E620 STRB W8, [X0 + 0x39]
	0x03E5E624 RET
	0x03E5E628 LDRB W0, [X0 + 0x3A]
	0x03E5E62C RET
	0x03E5E630 AND W8, W1, 0x1
	0x03E5E634 STRB W8, [X0 + 0x3A]
	0x03E5E638 RET
	0x03E5E63C STP X30, X19, [X31 - 0x10]!
	0x03E5E640 ADRP X19, 0x58A000
	0x03E5E644 LDR X0, [X19 + 0x930]
	0x03E5E648 CBNZ X0, 0x3E5E65C

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {21}
	004 Move W8, [X0+24]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move W9, [X0+32]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W0, 1
	009 Move W0, W31
	010 Move W10, 1
	011 Move W9, W10
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Add X10, X0, W9
	014 Move W10, [X10+32]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Add W10, W9, 1
	017 NotImplemented "Instruction CMP not yet implemented."
	018 NotImplemented "Instruction CSET not yet implemented."
	019 Move X30, [X31+16]
	020 Return X0
	021 Call 0x1C17F20

Method: System.Byte[] URLDecode(System.Byte[] toEncode)

Disassembly:
	0x03E5C700 BL 0x1C5C788
	0x03E5C704 B 0x3E5C714
	0x03E5C708 LDRSW X9, [X10]
	0x03E5C70C ADD X8, X8, X9, 0x4, LSL
	0x03E5C710 ADD X0, X8, 0x138
	0x03E5C714 LDP X8, X1, [X0]
	0x03E5C718 MOV X0, X19
	0x03E5C71C BLR X8
	0x03E5C720 CBNZ X21, 0x3E5C808
	0x03E5C724 MOV X0, X20
	0x03E5C728 LDP X20, X19, [X31 + 0x50]
	0x03E5C72C LDP X22, X21, [X31 + 0x40]
	0x03E5C730 LDP X24, X23, [X31 + 0x30]
	0x03E5C734 LDP X26, X25, [X31 + 0x20]
	0x03E5C738 LDP X28, X27, [X31 + 0x10]
	0x03E5C73C LDP X29, X30, [X31], #0x60
	0x03E5C740 RET
	0x03E5C744 BL 0x1C16F20
	0x03E5C748 BL 0x1C16F20
	0x03E5C74C BL 0x1C16F20
	0x03E5C750 BL 0x1C16F20
	0x03E5C754 BL 0x1C16F20
	0x03E5C758 BL 0x1C16F20
	0x03E5C75C BL 0x1C16F20
	0x03E5C760 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x58D000
	006 Move X20, 0x310000
	007 Move W8, [X21+2275]
	008 Move X20, [X20+3368]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x310000
	015 Move X0, [X0+3368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2275], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X2, [X8+24]
	030 Move W1, [X8+16]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call WWWTranscoder.Decode, X0, X1, X2
	034 Return X0

Method: System.Boolean ByteSubArrayEquals(System.Byte[] array, System.Int32 index, System.Byte[] comperand)

Disassembly:
	0x03E5E964 MOV X2, X31
	0x03E5E968 LDR X1, [X8]
	0x03E5E96C BL 0x321BA08
	0x03E5E970 TBZ X0, 0x0, 0x3E5E988
	0x03E5E974 MOVZ W1, 0x3
	0x03E5E978 MOV X0, X19
	0x03E5E97C LDP X20, X19, [X31 + 0x10]
	0x03E5E980 LDP X30, X21, [X31], #0x20
	0x03E5E984 B 0x3E5F0EC
	0x03E5E988 MOV X0, X20
	0x03E5E98C MOV X1, X31
	0x03E5E990 BL 0x322B760
	0x03E5E994 MOV X1, X0
	0x03E5E998 MOV X0, X19
	0x03E5E99C LDP X20, X19, [X31 + 0x10]
	0x03E5E9A0 LDP X30, X21, [X31], #0x20
	0x03E5E9A4 B 0x3E5F26C
	0x03E5E9A8 ADRP X0, 0x29D000
	0x03E5E9AC LDR X0, [X0 + 0x578]
	0x03E5E9B0 BL 0x1C16D08
	0x03E5E9B4 BL 0x1C16F10
	0x03E5E9B8 MOV X19, X0
	0x03E5E9BC ADRP X0, 0x30D000
	0x03E5E9C0 LDR X0, [X0 + 0xDB8]
	0x03E5E9C4 BL 0x1C16D08
	0x03E5E9C8 MOV X1, X0
	0x03E5E9CC MOV X0, X19
	0x03E5E9D0 MOV X2, X31
	0x03E5E9D4 BL 0x3314A68
	0x03E5E9D8 ADRP X0, 0x30D000
	0x03E5E9DC LDR X0, [X0 + 0xDC0]
	0x03E5E9E0 BL 0x1C16D08
	0x03E5E9E4 MOV X1, X0
	0x03E5E9E8 MOV X0, X19
	0x03E5E9EC BL 0x1C16DEC
	0x03E5E9F0 BL 0x1C16F20

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {31}
	004 Compare X2, 0
	005 JumpIfEqual {31}
	006 Move W8, [X0+24]
	007 Move W9, [X2+24]
	008 Subtract W10, W8, W1
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W8, W31
	011 Subtract W9, W9, 1
	012 Subtract W8, W8, W1
	013 Move W10, W31
	014 NotImplemented "Instruction CSEL not yet implemented."
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Add W8, W1, W10
	017 Add X12, X2, W10
	018 Add X8, X0, W8
	019 Move W12, [X12+32]
	020 Move W13, [X8+32]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction CSET not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Add W10, W10, 1
	026 Move W8, 1
	027 Move W0, W8
	028 Move X30, [X31+16]
	029 Return X0
	030 Call 0x1C17F28
	031 Call 0x1C17F20

Method: System.Byte[] Decode(System.Byte[] input, System.Byte escapeChar, System.Byte[] space)

Disassembly:
	0x03E5E64C ADRP X0, 0xFFFFFFFFFCCA3000
	0x03E5E650 ADD X0, X0, 0xB48
	0x03E5E654 BL 0x1C16CB8
	0x03E5E658 STR X0, [X19 + 0x930]
	0x03E5E65C LDP X30, X19, [X31], #0x10
	0x03E5E660 BR X0
	0x03E5E664 STR X30, [X31 - 0x20]!
	0x03E5E668 STP X20, X19, [X31 + 0x10]
	0x03E5E66C ADRP X20, 0x58A000
	0x03E5E670 LDR X1, [X20 + 0x938]
	0x03E5E674 MOV X19, X0
	0x03E5E678 CBNZ X1, 0x3E5E690
	0x03E5E67C ADRP X0, 0xFFFFFFFFFCCC3000
	0x03E5E680 ADD X0, X0, 0x961
	0x03E5E684 BL 0x1C16CB8
	0x03E5E688 MOV X1, X0
	0x03E5E68C STR X0, [X20 + 0x938]
	0x03E5E690 MOV X0, X19
	0x03E5E694 LDP X20, X19, [X31 + 0x10]
	0x03E5E698 LDR X30, [X31], #0x20
	0x03E5E69C BR X1
	0x03E5E6A0 STR X30, [X31 - 0x20]!
	0x03E5E6A4 STP X20, X19, [X31 + 0x10]
	0x03E5E6A8 MOV X19, X0
	0x03E5E6AC LDR X0, [X0 + 0x10]
	0x03E5E6B0 MOV X1, X31
	0x03E5E6B4 MOV X2, X31
	0x03E5E6B8 BL 0x33C5D2C
	0x03E5E6BC TBZ X0, 0x0, 0x3E5E714
	0x03E5E6C0 ADRP X20, 0x58A000
	0x03E5E6C4 LDR X8, [X20 + 0x950]
	0x03E5E6C8 CBNZ X8, 0x3E5E6E0
	0x03E5E6CC ADRP X0, 0xFFFFFFFFFCCA5000
	0x03E5E6D0 ADD X0, X0, 0xFF3
	0x03E5E6D4 BL 0x1C16CB8
	0x03E5E6D8 MOV X8, X0
	0x03E5E6DC STR X0, [X20 + 0x950]
	0x03E5E6E0 MOV X0, X19
	0x03E5E6E4 BLR X8
	0x03E5E6E8 ADRP X20, 0x58A000
	0x03E5E6EC LDR X8, [X20 + 0x938]
	0x03E5E6F0 CBNZ X8, 0x3E5E708
	0x03E5E6F4 ADRP X0, 0xFFFFFFFFFCCC3000
	0x03E5E6F8 ADD X0, X0, 0x961
	0x03E5E6FC BL 0x1C16CB8
	0x03E5E700 MOV X8, X0
	0x03E5E704 STR X0, [X20 + 0x938]
	0x03E5E708 MOV X0, X19
	0x03E5E70C BLR X8
	0x03E5E710 STR X31, [X19 + 0x10]
	0x03E5E714 LDP X20, X19, [X31 + 0x10]
	0x03E5E718 LDR X30, [X31], #0x20
	0x03E5E71C RET
	0x03E5E720 STR X30, [X31 - 0x20]!
	0x03E5E724 STP X20, X19, [X31 + 0x10]
	0x03E5E728 ADRP X20, 0x58A000
	0x03E5E72C LDR X1, [X20 + 0x950]
	0x03E5E730 MOV X19, X0
	0x03E5E734 CBNZ X1, 0x3E5E74C
	0x03E5E738 ADRP X0, 0xFFFFFFFFFCCA5000
	0x03E5E73C ADD X0, X0, 0xFF3
	0x03E5E740 BL 0x1C16CB8
	0x03E5E744 MOV X1, X0
	0x03E5E748 STR X0, [X20 + 0x950]
	0x03E5E74C MOV X0, X19
	0x03E5E750 LDP X20, X19, [X31 + 0x10]
	0x03E5E754 LDR X30, [X31], #0x20
	0x03E5E758 BR X1
	0x03E5E75C MOVZ W8, 0x1
	0x03E5E760 MOVZ W9, 0x101
	0x03E5E764 STRB W8, [X0 + 0x3A]
	0x03E5E768 STRH W9, [X0 + 0x38]
	0x03E5E76C RET
	0x03E5E770 STR X30, [X31 - 0x30]!
	0x03E5E774 STP X22, X21, [X31 + 0x10]
	0x03E5E778 STP X20, X19, [X31 + 0x20]
	0x03E5E77C MOV X21, X1
	0x03E5E780 MOV X1, X31
	0x03E5E784 MOV X19, X2
	0x03E5E788 MOV X20, X0
	0x03E5E78C BL 0x33BDD8C
	0x03E5E790 ADRP X22, 0x58A000
	0x03E5E794 LDR X8, [X22 + 0x930]
	0x03E5E798 CBNZ X8, 0x3E5E7B0
	0x03E5E79C ADRP X0, 0xFFFFFFFFFCCA3000
	0x03E5E7A0 ADD X0, X0, 0xB48
	0x03E5E7A4 BL 0x1C16CB8
	0x03E5E7A8 MOV X8, X0
	0x03E5E7AC STR X0, [X22 + 0x930]
	0x03E5E7B0 BLR X8
	0x03E5E7B4 STR X0, [X20 + 0x10]
	0x03E5E7B8 MOVZ W8, 0x1
	0x03E5E7BC MOVZ W9, 0x101
	0x03E5E7C0 MOV X0, X20
	0x03E5E7C4 MOV X1, X21
	0x03E5E7C8 STRB W8, [X20 + 0x3A]
	0x03E5E7CC STRH W9, [X20 + 0x38]
	0x03E5E7D0 BL 0x3E5E7EC
	0x03E5E7D4 MOV X0, X20
	0x03E5E7D8 MOV X1, X19
	0x03E5E7DC LDP X20, X19, [X31 + 0x20]
	0x03E5E7E0 LDP X22, X21, [X31 + 0x10]
	0x03E5E7E4 LDR X30, [X31], #0x30
	0x03E5E7E8 B 0x3E5E874
	0x03E5E7EC STP X30, X23, [X31 - 0x30]!
	0x03E5E7F0 STP X22, X21, [X31 + 0x10]
	0x03E5E7F4 STP X20, X19, [X31 + 0x20]
	0x03E5E7F8 ADRP X23, 0x58A000
	0x03E5E7FC ADRP X21, 0x30D000
	0x03E5E800 ADRP X22, 0x30D000
	0x03E5E804 LDRB W8, [X23 + 0x988]
	0x03E5E808 LDR X21, [X21 + 0xDB0]
	0x03E5E80C LDR X22, [X22 + 0xD08]
	0x03E5E810 MOV X20, X1
	0x03E5E814 MOV X19, X0
	0x03E5E818 TBNZ X8, 0x0, 0x3E5E83C
	0x03E5E81C ADRP X0, 0x30D000
	0x03E5E820 LDR X0, [X0 + 0xD08]
	0x03E5E824 BL 0x1C16CF4
	0x03E5E828 ADRP X0, 0x30D000
	0x03E5E82C LDR X0, [X0 + 0xDB0]
	0x03E5E830 BL 0x1C16CF4
	0x03E5E834 MOVZ W8, 0x1
	0x03E5E838 STRB W8, [X23 + 0x988]
	0x03E5E83C LDR X0, [X22]
	0x03E5E840 LDR X21, [X21]
	0x03E5E844 LDR W8, [X0 + 0xE0]
	0x03E5E848 CBNZ W8, 0x3E5E850
	0x03E5E84C BL 0x1C16DFC
	0x03E5E850 MOV X0, X20
	0x03E5E854 MOV X1, X21
	0x03E5E858 BL 0x3E5AF10
	0x03E5E85C MOV X1, X0
	0x03E5E860 MOV X0, X19
	0x03E5E864 LDP X20, X19, [X31 + 0x20]
	0x03E5E868 LDP X22, X21, [X31 + 0x10]
	0x03E5E86C LDP X30, X23, [X31], #0x30
	0x03E5E870 B 0x3E5F6C0
	0x03E5E874 STP X30, X21, [X31 - 0x20]!
	0x03E5E878 STP X20, X19, [X31 + 0x10]
	0x03E5E87C ADRP X21, 0x58A000
	0x03E5E880 LDRB W8, [X21 + 0x968]
	0x03E5E884 MOV X20, X1
	0x03E5E888 MOV X19, X0
	0x03E5E88C TBNZ X8, 0x0, 0x3E5E8C8
	0x03E5E890 ADRP X0, 0x2BE000
	0x03E5E894 LDR X0, [X0 + 0x4E0]
	0x03E5E898 BL 0x1C16CF4
	0x03E5E89C ADRP X0, 0x2BE000
	0x03E5E8A0 LDR X0, [X0 + 0x4D8]
	0x03E5E8A4 BL 0x1C16CF4
	0x03E5E8A8 ADRP X0, 0x2BE000
	0x03E5E8AC LDR X0, [X0 + 0x4D0]
	0x03E5E8B0 BL 0x1C16CF4
	0x03E5E8B4 ADRP X0, 0x2D8000
	0x03E5E8B8 LDR X0, [X0 + 0xB08]
	0x03E5E8BC BL 0x1C16CF4
	0x03E5E8C0 MOVZ W8, 0x1
	0x03E5E8C4 STRB W8, [X21 + 0x968]
	0x03E5E8C8 MOV X0, X20
	0x03E5E8CC MOV X1, X31
	0x03E5E8D0 BL 0x32277A8
	0x03E5E8D4 TBNZ X0, 0x0, 0x3E5E9A8
	0x03E5E8D8 CBZ X20, 0x3E5E9F0
	0x03E5E8DC ADRP X21, 0x2BE000
	0x03E5E8E0 LDR X21, [X21 + 0x4D0]
	0x03E5E8E4 MOV X0, X20
	0x03E5E8E8 MOV X1, X31
	0x03E5E8EC BL 0x322B760
	0x03E5E8F0 LDR X1, [X21]
	0x03E5E8F4 MOV X2, X31
	0x03E5E8F8 MOV X21, X0
	0x03E5E8FC BL 0x321BA08
	0x03E5E900 TBZ X0, 0x0, 0x3E5E910
	0x03E5E904 MOV X0, X19
	0x03E5E908 MOV W1, W31
	0x03E5E90C B 0x3E5E97C
	0x03E5E910 ADRP X8, 0x2BE000
	0x03E5E914 LDR X8, [X8 + 0x4D8]
	0x03E5E918 MOV X0, X21
	0x03E5E91C MOV X2, X31
	0x03E5E920 LDR X1, [X8]
	0x03E5E924 BL 0x321BA08
	0x03E5E928 TBZ X0, 0x0, 0x3E5E934
	0x03E5E92C MOVZ W1, 0x1
	0x03E5E930 B 0x3E5E978
	0x03E5E934 ADRP X8, 0x2BE000
	0x03E5E938 LDR X8, [X8 + 0x4E0]
	0x03E5E93C MOV X0, X21
	0x03E5E940 MOV X2, X31
	0x03E5E944 LDR X1, [X8]
	0x03E5E948 BL 0x321BA08
	0x03E5E94C TBZ X0, 0x0, 0x3E5E958
	0x03E5E950 MOVZ W1, 0x2
	0x03E5E954 B 0x3E5E978
	0x03E5E958 ADRP X8, 0x2D8000
	0x03E5E95C LDR X8, [X8 + 0xB08]
	0x03E5E960 MOV X0, X21

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, 0x58B000
	011 Move W8, [X19+2276]
	012 Move X20, X2
	013 Move W21, W1
	014 Move X22, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x296000
	020 Move X0, [X0+3584]
	021 Call 0x1C17CF4
	022 Move X0, 0x29E000
	023 Move X0, [X0+1368]
	024 Call 0x1C17CF4
	025 Move X0, 0x30E000
	026 Move X0, [X0+3368]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X19+2276], W8
	030 Compare X22, 0
	031 JumpIfEqual {155}
	032 Move X8, 0x29E000
	033 Move X8, [X8+1368]
	034 Move X24, 0x296000
	035 Move X0, [X8]
	036 Move X24, [X24+3584]
	037 Call 0x1C17F10
	038 Move W1, [X22+24]
	039 Move X2, X31
	040 Move X19, X0
	041 Call MemoryStream..ctor, X0, X1
	042 Move W8, [X22+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X25, 0x30E000
	045 Move X25, [X25+3368]
	046 Move W23, W31
	047 Move X0, [X25]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X22
	053 Move W1, W23
	054 Move X2, X20
	055 Call WWWTranscoder.ByteSubArrayEquals, X0, X1, X2
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {73}
	060 Compare X20, 0
	061 JumpIfEqual {151}
	062 Compare X19, 0
	063 JumpIfEqual {152}
	064 Move X8, [X19]
	065 Move W26, [X20+24]
	066 Move X9, [X8+936]
	067 Move X2, [X8+944]
	068 Move W1, 32
	069 Move X0, X19
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Add W8, W23, W26
	072 Subtract W23, W8, 1
	073 Move W8, [X22+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Add X9, X22, W23
	076 Move W1, [X9+32]
	077 Add W26, W23, 2
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X0, [X25]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Add W1, W23, 1
	086 Move X0, X22
	087 Call WWWTranscoder.Hex2Byte, X0, X1
	088 Move W1, W0
	089 Compare X19, 0
	090 JumpIfEqual {154}
	091 Move X8, [X19]
	092 Move X9, [X8+936]
	093 Move X2, [X8+944]
	094 Move X0, X19
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move W23, W26
	097 Compare X19, 0
	098 JumpIfEqual {153}
	099 Move X8, [X19]
	100 Move X9, [X8+936]
	101 Move X2, [X8+944]
	102 Move X0, X19
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move W8, [X22+24]
	105 Add W23, W23, 1
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Compare X19, 0
	108 JumpIfEqual {158}
	109 Move X8, [X19]
	110 Move X1, [X8+1024]
	111 Move X9, [X8+1016]
	112 Move X0, X19
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Move X21, X0
	115 Move X20, X31
	116 Move X8, [X19]
	117 Move X1, [X24]
	118 NotImplemented "Instruction LDRH not yet implemented."
	119 Compare X9, 0
	120 JumpIfEqual {127}
	121 Move X10, [X8+176]
	122 Add X10, X10, 8
	123 NotImplemented "Instruction LDUR not yet implemented."
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Subtract X9, X9, 1
	126 Add X10, X10, 16
	127 Move X0, X19
	128 Move W2, W31
	129 Call 0x1C5D788
	130 NotImplemented "Instruction LDRSW not yet implemented."
	131 Add X8, X8, X9
	132 Add X0, X8, 312
	133 Move X8, [X0]
	134 Move X1, [X0+8]
	135 Move X0, X19
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Compare X20, 0
	138 JumpIfNotEqual {156}
	139 Move X0, X21
	140 Move X20, [X31+64]
	141 Move X19, [X31+72]
	142 Move X22, [X31+48]
	143 Move X21, [X31+56]
	144 Move X24, [X31+32]
	145 Move X23, [X31+40]
	146 Move X26, [X31+16]
	147 Move X25, [X31+24]
	148 Move X30, [X31+80]
	149 Return X0
	150 Call 0x1C17F28
	151 Call 0x1C17F20
	152 Call 0x1C17F20
	153 Call 0x1C17F20
	154 Call 0x1C17F20
	155 Call 0x1C17F20
	156 Move X0, X20
	157 Call 0x1C17F18
	158 Call 0x1C17F20
	159 Move X21, X0
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move X0, X21
	162 Call 0x3EB2AD0
	163 Move X20, [X0]
	164 Call 0x3EB2AE0
	165 Move X21, X31
	166 Compare X19, 0
	167 JumpIfNotEqual {116}
	168 Move X20, X31
	169 Move X21, X0
	170 Compare X19, 0
	171 JumpIfEqual {193}
	172 Move X8, [X19]
	173 Move X1, [X24]
	174 NotImplemented "Instruction LDRH not yet implemented."
	175 Compare X9, 0
	176 JumpIfEqual {183}
	177 Move X10, [X8+176]
	178 Add X10, X10, 8
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Subtract X9, X9, 1
	182 Add X10, X10, 16
	183 Move X0, X19
	184 Move W2, W31
	185 Call 0x1C5D788
	186 NotImplemented "Instruction LDRSW not yet implemented."
	187 Add X8, X8, X9
	188 Add X0, X8, 312
	189 Move X8, [X0]
	190 Move X1, [X0+8]
	191 Move X0, X19
	192 NotImplemented "Instruction BLR not yet implemented."
	193 Compare X20, 0
	194 JumpIfNotEqual {197}
	195 Move X0, X21
	196 Call 0x1D2D690
	197 Move X0, X20
	198 Call 0x1C17F18
	199 Call 0x1991590

Method: System.Boolean SevenBitClean(System.String s, System.Text.Encoding e)

Disassembly:
	0x03E5DAA4 BL 0x1C16CF4
	0x03E5DAA8 ADRP X0, 0x2C7000
	0x03E5DAAC LDR X0, [X0 + 0x418]
	0x03E5DAB0 BL 0x1C16CF4
	0x03E5DAB4 ADRP X0, 0x2CA000
	0x03E5DAB8 LDR X0, [X0 + 0xFF0]
	0x03E5DABC BL 0x1C16CF4
	0x03E5DAC0 ADRP X0, 0x2DD000
	0x03E5DAC4 LDR X0, [X0 + 0xEE0]
	0x03E5DAC8 BL 0x1C16CF4
	0x03E5DACC MOVZ W8, 0x1
	0x03E5DAD0 STRB W8, [X19 + 0x8E6]
	0x03E5DAD4 LDR X0, [X20]
	0x03E5DAD8 LDR W8, [X0 + 0xE0]
	0x03E5DADC CBNZ W8, 0x3E5DAE4
	0x03E5DAE0 BL 0x1C16DFC
	0x03E5DAE4 MOV X0, X31
	0x03E5DAE8 BL 0x3242EC8
	0x03E5DAEC CBZ X0, 0x3E5DC6C
	0x03E5DAF0 ADRP X9, 0x2CA000
	0x03E5DAF4 LDR X8, [X0]
	0x03E5DAF8 LDR X9, [X9 + 0xFF0]
	0x03E5DAFC ADRP X19, 0x30E000
	0x03E5DB00 LDR X2, [X8 + 0x270]
	0x03E5DB04 LDR X1, [X9]
	0x03E5DB08 LDR X9, [X8 + 0x268]
	0x03E5DB0C LDR X19, [X19 + 0xD28]
	0x03E5DB10 BLR X9
	0x03E5DB14 LDR X8, [X19]
	0x03E5DB18 LDR X8, [X8 + 0xB8]
	0x03E5DB1C STR X0, [X8]
	0x03E5DB20 MOV X0, X31
	0x03E5DB24 BL 0x3242EC8
	0x03E5DB28 CBZ X0, 0x3E5DC6C
	0x03E5DB2C ADRP X9, 0x2DD000
	0x03E5DB30 LDR X8, [X0]
	0x03E5DB34 LDR X9, [X9 + 0xEE0]
	0x03E5DB38 ADRP X20, 0x296000
	0x03E5DB3C LDR X2, [X8 + 0x270]
	0x03E5DB40 LDR X1, [X9]
	0x03E5DB44 LDR X9, [X8 + 0x268]
	0x03E5DB48 LDR X20, [X20 + 0x618]
	0x03E5DB4C BLR X9
	0x03E5DB50 LDR X8, [X19]
	0x03E5DB54 MOVZ W9, 0x25
	0x03E5DB58 MOVZ W1, 0x1
	0x03E5DB5C LDR X8, [X8 + 0xB8]
	0x03E5DB60 STR X0, [X8 + 0x8]
	0x03E5DB64 STRB W9, [X8 + 0x10]
	0x03E5DB68 LDR X0, [X20]
	0x03E5DB6C BL 0x1C16D6C
	0x03E5DB70 CBZ X0, 0x3E5DC6C
	0x03E5DB74 LDR W8, [X0 + 0x18]
	0x03E5DB78 CBZ W8, 0x3E5DC70
	0x03E5DB7C MOVZ W8, 0x2B
	0x03E5DB80 STRB W8, [X0 + 0x20]
	0x03E5DB84 LDR X8, [X19]
	0x03E5DB88 LDR X8, [X8 + 0xB8]
	0x03E5DB8C STR X0, [X8 + 0x18]
	0x03E5DB90 MOV X0, X31
	0x03E5DB94 BL 0x3242EC8
	0x03E5DB98 CBZ X0, 0x3E5DC6C
	0x03E5DB9C ADRP X9, 0x2C7000
	0x03E5DBA0 LDR X8, [X0]
	0x03E5DBA4 LDR X9, [X9 + 0x418]
	0x03E5DBA8 LDR X2, [X8 + 0x270]
	0x03E5DBAC LDR X1, [X9]
	0x03E5DBB0 LDR X9, [X8 + 0x268]
	0x03E5DBB4 BLR X9
	0x03E5DBB8 LDR X8, [X19]
	0x03E5DBBC LDR X8, [X8 + 0xB8]
	0x03E5DBC0 STR X0, [X8 + 0x20]
	0x03E5DBC4 MOV X0, X31
	0x03E5DBC8 BL 0x3242EC8
	0x03E5DBCC CBZ X0, 0x3E5DC6C
	0x03E5DBD0 ADRP X9, 0x30E000
	0x03E5DBD4 LDR X8, [X0]
	0x03E5DBD8 LDR X9, [X9 + 0xD88]
	0x03E5DBDC LDR X2, [X8 + 0x270]
	0x03E5DBE0 LDR X1, [X9]
	0x03E5DBE4 LDR X9, [X8 + 0x268]
	0x03E5DBE8 BLR X9
	0x03E5DBEC LDR X8, [X19]
	0x03E5DBF0 MOVZ W9, 0x3D
	0x03E5DBF4 MOVZ W1, 0x1
	0x03E5DBF8 LDR X8, [X8 + 0xB8]
	0x03E5DBFC STR X0, [X8 + 0x28]
	0x03E5DC00 STRB W9, [X8 + 0x30]
	0x03E5DC04 LDR X0, [X20]
	0x03E5DC08 BL 0x1C16D6C
	0x03E5DC0C CBZ X0, 0x3E5DC6C
	0x03E5DC10 LDR W8, [X0 + 0x18]
	0x03E5DC14 CBZ W8, 0x3E5DC70

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Add X29, X31, 0
	009 Subtract X31, X31, 16
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X23+40]
	012 Move X19, 0x58C000
	013 Move X20, X1
	014 Move X21, X0
	015 Move [X29-8], X8
	016 Move W8, [X19+2277]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x30F000
	022 Move X0, [X0+3368]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X19+2277], W8
	026 Move X0, X21
	027 Move X1, X31
	028 Call String.IsNullOrEmpty, X0
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {88}
	033 Compare X21, 0
	034 JumpIfEqual {102}
	035 Move W8, [X21+16]
	036 Move W8, W8
	037 ShiftRight W8, 31
	038 And W8, W8, 0x3FFFFFFF
	039 Move X22, W8
	040 Compare W8, 0
	041 JumpIfEqual {47}
	042 Add X9, X22, 15
	043 Add X8, X31, 0
	044 And X9, X9, 0xFFFFFFFF
	045 Subtract X19, X8, X9
	046 Add X31, X19, 0
	047 Move X19, X31
	048 Move X0, X19
	049 Move W1, W31
	050 Move X2, X22
	051 Call 0x3EB2B10
	052 Move X0, X31
	053 Call RuntimeHelpers.get_OffsetToStringData
	054 Compare X20, 0
	055 JumpIfEqual {102}
	056 Move X8, [X20]
	057 Move W2, [X21+16]
	058 Add X1, X21, W0
	059 Move X0, X20
	060 Move X9, [X8+664]
	061 Move X5, [X8+672]
	062 Move X3, X19
	063 Move W4, W22
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X8, 0x30F000
	066 Move X8, [X8+3368]
	067 Move W20, W0
	068 Move X8, [X8]
	069 Move W9, [X8+224]
	070 Compare W9, 0
	071 JumpIfNotEqual {74}
	072 Move X0, X8
	073 Call 0x1C17DFC
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move W8, [X19]
	076 Subtract W8, W8, 32
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move W8, W20
	079 Move W10, 1
	080 Move X9, X10
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move W10, [X19]
	083 Subtract W10, W10, 32
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Add X10, X9, 1
	086 NotImplemented "Instruction CMP not yet implemented."
	087 NotImplemented "Instruction CSET not yet implemented."
	088 Move W0, 1
	089 Move X8, [X23+40]
	090 NotImplemented "Instruction LDUR not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Add X31, X29, 0
	093 Move X20, [X31+48]
	094 Move X19, [X31+56]
	095 Move X22, [X31+32]
	096 Move X21, [X31+40]
	097 Move X23, [X31+16]
	098 Move X29, [X31+64]
	099 Move X30, [X31+72]
	100 Return X0
	101 Move W0, W31
	102 Call 0x1C17F20
	103 Call 0x3EB2B20

Method: System.Boolean SevenBitClean(System.Byte* input, System.Int32 inputLength)

Disassembly:
	0x03E5E9F4 STR X30, [X31 - 0x30]!
	0x03E5E9F8 STP X22, X21, [X31 + 0x10]
	0x03E5E9FC STP X20, X19, [X31 + 0x20]
	0x03E5EA00 MOV X21, X1
	0x03E5EA04 MOV X1, X31
	0x03E5EA08 MOV X19, X2
	0x03E5EA0C MOV X20, X0
	0x03E5EA10 BL 0x33BDD8C
	0x03E5EA14 ADRP X22, 0x58A000
	0x03E5EA18 LDR X8, [X22 + 0x930]
	0x03E5EA1C CBNZ X8, 0x3E5EA34
	0x03E5EA20 ADRP X0, 0xFFFFFFFFFCCA3000
	0x03E5EA24 ADD X0, X0, 0xB48
	0x03E5EA28 BL 0x1C16CB8
	0x03E5EA2C MOV X8, X0
	0x03E5EA30 STR X0, [X22 + 0x930]
	0x03E5EA34 BLR X8
	0x03E5EA38 STR X0, [X20 + 0x10]
	0x03E5EA3C MOVZ W8, 0x1
	0x03E5EA40 MOVZ W9, 0x101
	0x03E5EA44 MOV X0, X20
	0x03E5EA48 MOV X1, X21
	0x03E5EA4C STRB W8, [X20 + 0x3A]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, [X0]
	003 Subtract W8, W8, 32
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move W8, W1
	006 Move W10, 1
	007 Move X9, X10
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W10, [X0]
	010 Subtract W10, W10, 32
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Add X10, X9, 1
	013 NotImplemented "Instruction CMP not yet implemented."
	014 NotImplemented "Instruction CSET not yet implemented."
	015 Return X0
	016 Move W0, 1
	017 Return X0
	018 Move W0, W31
	019 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03E5EA50 STRH W9, [X20 + 0x38]
	0x03E5EA54 BL 0x3E5EA70
	0x03E5EA58 MOV X0, X20
	0x03E5EA5C MOV X1, X19
	0x03E5EA60 LDP X20, X19, [X31 + 0x20]
	0x03E5EA64 LDP X22, X21, [X31 + 0x10]
	0x03E5EA68 LDR X30, [X31], #0x30
	0x03E5EA6C B 0x3E5E874
	0x03E5EA70 STP X30, X21, [X31 - 0x20]!
	0x03E5EA74 STP X20, X19, [X31 + 0x10]
	0x03E5EA78 ADRP X21, 0x58A000
	0x03E5EA7C LDRB W8, [X21 + 0x989]
	0x03E5EA80 MOV X19, X1
	0x03E5EA84 MOV X20, X0
	0x03E5EA88 TBNZ X8, 0x0, 0x3E5EAA0
	0x03E5EA8C ADRP X0, 0x30D000
	0x03E5EA90 LDR X0, [X0 + 0xD08]
	0x03E5EA94 BL 0x1C16CF4
	0x03E5EA98 MOVZ W8, 0x1
	0x03E5EA9C STRB W8, [X21 + 0x989]
	0x03E5EAA0 CBZ X19, 0x3E5EB0C
	0x03E5EAA4 MOV X0, X19
	0x03E5EAA8 MOV X1, X31
	0x03E5EAAC BL 0x3619A24
	0x03E5EAB0 TBZ X0, 0x0, 0x3E5EB10
	0x03E5EAB4 ADRP X21, 0x30D000
	0x03E5EAB8 LDR X21, [X21 + 0xD08]
	0x03E5EABC MOV X0, X19
	0x03E5EAC0 MOV X1, X31
	0x03E5EAC4 BL 0x361A77C
	0x03E5EAC8 LDR X8, [X21]
	0x03E5EACC MOV X21, X0
	0x03E5EAD0 LDR W9, [X8 + 0xE0]
	0x03E5EAD4 CBNZ W9, 0x3E5EAE0
	0x03E5EAD8 MOV X0, X8
	0x03E5EADC BL 0x1C16DFC
	0x03E5EAE0 MOV X0, X19
	0x03E5EAE4 MOV X1, X21
	0x03E5EAE8 MOV W2, W31
	0x03E5EAEC BL 0x3E5B280
	0x03E5EAF0 MOV X1, X0
	0x03E5EAF4 MOV X0, X20
	0x03E5EAF8 BL 0x3E5F6C0
	0x03E5EAFC STR X19, [X20 + 0x30]
	0x03E5EB00 LDP X20, X19, [X31 + 0x10]
	0x03E5EB04 LDP X30, X21, [X31], #0x20
	0x03E5EB08 RET
	0x03E5EB0C BL 0x1C16F20
	0x03E5EB10 ADRP X0, 0x29D000
	0x03E5EB14 LDR X0, [X0 + 0x578]
	0x03E5EB18 BL 0x1C16D08
	0x03E5EB1C BL 0x1C16F10
	0x03E5EB20 MOV X19, X0
	0x03E5EB24 ADRP X0, 0x30D000
	0x03E5EB28 LDR X0, [X0 + 0xDC8]
	0x03E5EB2C BL 0x1C16D08
	0x03E5EB30 MOV X1, X0
	0x03E5EB34 MOV X0, X19
	0x03E5EB38 MOV X2, X31
	0x03E5EB3C BL 0x3314A68
	0x03E5EB40 ADRP X0, 0x30D000
	0x03E5EB44 LDR X0, [X0 + 0xDD0]
	0x03E5EB48 BL 0x1C16D08
	0x03E5EB4C MOV X1, X0
	0x03E5EB50 MOV X0, X19
	0x03E5EB54 BL 0x1C16DEC
	0x03E5EB58 STR X30, [X31 - 0x40]!
	0x03E5EB5C STP X24, X23, [X31 + 0x10]
	0x03E5EB60 STP X22, X21, [X31 + 0x20]
	0x03E5EB64 STP X20, X19, [X31 + 0x30]
	0x03E5EB68 MOV X23, X1
	0x03E5EB6C MOV X1, X31
	0x03E5EB70 MOV X19, X4
	0x03E5EB74 MOV X21, X3
	0x03E5EB78 MOV X22, X2
	0x03E5EB7C MOV X20, X0
	0x03E5EB80 BL 0x33BDD8C
	0x03E5EB84 ADRP X24, 0x58A000
	0x03E5EB88 LDR X8, [X24 + 0x930]
	0x03E5EB8C CBNZ X8, 0x3E5EBA4
	0x03E5EB90 ADRP X0, 0xFFFFFFFFFCCA3000
	0x03E5EB94 ADD X0, X0, 0xB48
	0x03E5EB98 BL 0x1C16CB8
	0x03E5EB9C MOV X8, X0
	0x03E5EBA0 STR X0, [X24 + 0x930]
	0x03E5EBA4 BLR X8
	0x03E5EBA8 STR X0, [X20 + 0x10]
	0x03E5EBAC MOVZ W8, 0x1
	0x03E5EBB0 MOVZ W9, 0x101
	0x03E5EBB4 MOV X0, X20
	0x03E5EBB8 MOV X1, X23
	0x03E5EBBC STRB W8, [X20 + 0x3A]
	0x03E5EBC0 STRH W9, [X20 + 0x38]
	0x03E5EBC4 BL 0x3E5E7EC
	0x03E5EBC8 MOV X0, X20
	0x03E5EBCC MOV X1, X22
	0x03E5EBD0 BL 0x3E5E874
	0x03E5EBD4 MOV X0, X20
	0x03E5EBD8 MOV X1, X21
	0x03E5EBDC BL 0x3E5EBFC
	0x03E5EBE0 MOV X0, X20
	0x03E5EBE4 MOV X1, X19
	0x03E5EBE8 LDP X20, X19, [X31 + 0x30]
	0x03E5EBEC LDP X22, X21, [X31 + 0x20]
	0x03E5EBF0 LDP X24, X23, [X31 + 0x10]
	0x03E5EBF4 LDR X30, [X31], #0x40
	0x03E5EBF8 B 0x3E5ED00
	0x03E5EBFC STP X30, X21, [X31 - 0x20]!
	0x03E5EC00 STP X20, X19, [X31 + 0x10]
	0x03E5EC04 ADRP X21, 0x58A000
	0x03E5EC08 LDR X8, [X21 + 0x9B0]
	0x03E5EC0C MOV X19, X1
	0x03E5EC10 MOV X20, X0
	0x03E5EC14 CBNZ X8, 0x3E5EC2C
	0x03E5EC18 ADRP X0, 0xFFFFFFFFFCC91000
	0x03E5EC1C ADD X0, X0, 0xB51
	0x03E5EC20 BL 0x1C16CB8
	0x03E5EC24 MOV X8, X0
	0x03E5EC28 STR X0, [X21 + 0x9B0]
	0x03E5EC2C MOV X0, X20
	0x03E5EC30 BLR X8
	0x03E5EC34 TBZ X0, 0x0, 0x3E5EC78
	0x03E5EC38 ADRP X21, 0x58A000
	0x03E5EC3C LDR X8, [X21 + 0xA18]
	0x03E5EC40 CBNZ X8, 0x3E5EC58
	0x03E5EC44 ADRP X0, 0xFFFFFFFFFCC9F000
	0x03E5EC48 ADD X0, X0, 0xE7F
	0x03E5EC4C BL 0x1C16CB8
	0x03E5EC50 MOV X8, X0
	0x03E5EC54 STR X0, [X21 + 0xA18]
	0x03E5EC58 MOV X0, X20
	0x03E5EC5C MOV X1, X19
	0x03E5EC60 BLR X8
	0x03E5EC64 CBNZ W0, 0x3E5ECC0
	0x03E5EC68 STR X19, [X20 + 0x18]
	0x03E5EC6C LDP X20, X19, [X31 + 0x10]
	0x03E5EC70 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x58B000
	005 Move X20, 0x2C3000
	006 Move W8, [X19+2278]
	007 Move X20, [X20+248]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {38}
	012 Move X0, 0x296000
	013 Move X0, [X0+1560]
	014 Call 0x1C17CF4
	015 Move X0, 0x2C3000
	016 Move X0, [X0+248]
	017 Call 0x1C17CF4
	018 Move X0, 0x30E000
	019 Move X0, [X0+3368]
	020 Call 0x1C17CF4
	021 Move X0, 0x30E000
	022 Move X0, [X0+3464]
	023 Call 0x1C17CF4
	024 Move X0, 0x30E000
	025 Move X0, [X0+3472]
	026 Call 0x1C17CF4
	027 Move X0, 0x2C7000
	028 Move X0, [X0+1048]
	029 Call 0x1C17CF4
	030 Move X0, 0x2CA000
	031 Move X0, [X0+4080]
	032 Call 0x1C17CF4
	033 Move X0, 0x2DD000
	034 Move X0, [X0+3808]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X19+2278], W8
	038 Move X0, [X20]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X31
	044 Call Encoding.get_ASCII
	045 Compare X0, 0
	046 JumpIfEqual {151}
	047 Move X9, 0x2CA000
	048 Move X8, [X0]
	049 Move X9, [X9+4080]
	050 Move X19, 0x30E000
	051 Move X2, [X8+624]
	052 Move X1, [X9]
	053 Move X9, [X8+616]
	054 Move X19, [X19+3368]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X8, [X19]
	057 Move X8, [X8+184]
	058 Move [X8], X0
	059 Move X0, X31
	060 Call Encoding.get_ASCII
	061 Compare X0, 0
	062 JumpIfEqual {151}
	063 Move X9, 0x2DD000
	064 Move X8, [X0]
	065 Move X9, [X9+3808]
	066 Move X20, 0x296000
	067 Move X2, [X8+624]
	068 Move X1, [X9]
	069 Move X9, [X8+616]
	070 Move X20, [X20+1560]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X8, [X19]
	073 Move W9, 37
	074 Move W1, 1
	075 Move X8, [X8+184]
	076 Move [X8+8], X0
	077 Move [X8+16], W9
	078 Move X0, [X20]
	079 Call 0x1C17D6C
	080 Compare X0, 0
	081 JumpIfEqual {151}
	082 Move W8, [X0+24]
	083 Compare W8, 0
	084 JumpIfEqual {152}
	085 Move W8, 43
	086 Move [X0+32], W8
	087 Move X8, [X19]
	088 Move X8, [X8+184]
	089 Move [X8+24], X0
	090 Move X0, X31
	091 Call Encoding.get_ASCII
	092 Compare X0, 0
	093 JumpIfEqual {151}
	094 Move X9, 0x2C7000
	095 Move X8, [X0]
	096 Move X9, [X9+1048]
	097 Move X2, [X8+624]
	098 Move X1, [X9]
	099 Move X9, [X8+616]
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Move X8, [X19]
	102 Move X8, [X8+184]
	103 Move [X8+32], X0
	104 Move X0, X31
	105 Call Encoding.get_ASCII
	106 Compare X0, 0
	107 JumpIfEqual {151}
	108 Move X9, 0x30E000
	109 Move X8, [X0]
	110 Move X9, [X9+3464]
	111 Move X2, [X8+624]
	112 Move X1, [X9]
	113 Move X9, [X8+616]
	114 NotImplemented "Instruction BLR not yet implemented."
	115 Move X8, [X19]
	116 Move W9, 61
	117 Move W1, 1
	118 Move X8, [X8+184]
	119 Move [X8+40], X0
	120 Move [X8+48], W9
	121 Move X0, [X20]
	122 Call 0x1C17D6C
	123 Compare X0, 0
	124 JumpIfEqual {151}
	125 Move W8, [X0+24]
	126 Compare W8, 0
	127 JumpIfEqual {152}
	128 Move W8, 95
	129 Move [X0+32], W8
	130 Move X8, [X19]
	131 Move X8, [X8+184]
	132 Move [X8+56], X0
	133 Move X0, X31
	134 Call Encoding.get_ASCII
	135 Compare X0, 0
	136 JumpIfEqual {151}
	137 Move X9, 0x30E000
	138 Move X8, [X0]
	139 Move X9, [X9+3472]
	140 Move X2, [X8+624]
	141 Move X1, [X9]
	142 Move X9, [X8+616]
	143 NotImplemented "Instruction BLR not yet implemented."
	144 Move X8, [X19]
	145 Move X20, [X31+16]
	146 Move X19, [X31+24]
	147 Move X8, [X8+184]
	148 Move [X8+64], X0
	149 Move X30, [X31+32]
	150 Return 
	151 Call 0x1C17F20
	152 Call 0x1C17F28

