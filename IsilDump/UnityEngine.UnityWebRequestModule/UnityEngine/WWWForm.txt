Type: UnityEngine.WWWForm

Method: System.Text.Encoding get_DefaultEncoding()

Disassembly:
	0x03E5C7F4 BL 0x1C16F28
	0x03E5C7F8 BL 0x1C16F20

ISIL:
	001 Move X0, X31
	002 Call Encoding.get_ASCII
	003 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03E5C7FC BL 0x1C16F20
	0x03E5C800 BL 0x1C16F20
	0x03E5C804 BL 0x1C16F20
	0x03E5C808 MOV X0, X21
	0x03E5C80C BL 0x1C16F18
	0x03E5C810 BL 0x1C16F20
	0x03E5C814 BL 0x1C16F20
	0x03E5C818 BL 0x1C16F20
	0x03E5C81C BL 0x1C16F20
	0x03E5C820 BL 0x1C16F20
	0x03E5C824 BL 0x1C16F20
	0x03E5C828 B 0x3E5C9EC
	0x03E5C82C B 0x3E5C8C4
	0x03E5C830 B 0x3E5C8C4
	0x03E5C834 B 0x3E5C9EC
	0x03E5C838 B 0x3E5C9EC
	0x03E5C83C B 0x3E5C9EC
	0x03E5C840 B 0x3E5C9EC
	0x03E5C844 B 0x3E5C9EC
	0x03E5C848 B 0x3E5C8C4
	0x03E5C84C B 0x3E5C8C4
	0x03E5C850 B 0x3E5C9EC
	0x03E5C854 B 0x3E5C9EC
	0x03E5C858 B 0x3E5C9EC
	0x03E5C85C B 0x3E5C9EC
	0x03E5C860 B 0x3E5C9EC
	0x03E5C864 B 0x3E5C9EC
	0x03E5C868 B 0x3E5C8C4
	0x03E5C86C B 0x3E5C9EC
	0x03E5C870 B 0x3E5C9EC
	0x03E5C874 B 0x3E5C9EC
	0x03E5C878 B 0x3E5C9EC
	0x03E5C87C B 0x3E5C9EC
	0x03E5C880 B 0x3E5C9EC
	0x03E5C884 B 0x3E5C9EC
	0x03E5C888 B 0x3E5C9EC
	0x03E5C88C B 0x3E5C9EC
	0x03E5C890 B 0x3E5C8C4
	0x03E5C894 B 0x3E5C8C4
	0x03E5C898 B 0x3E5C9EC
	0x03E5C89C B 0x3E5C9EC
	0x03E5C8A0 B 0x3E5C8C4
	0x03E5C8A4 B 0x3E5C9EC
	0x03E5C8A8 B 0x3E5C9EC
	0x03E5C8AC B 0x3E5C9EC
	0x03E5C8B0 B 0x3E5C8C4
	0x03E5C8B4 B 0x3E5C9EC
	0x03E5C8B8 B 0x3E5C8C4
	0x03E5C8BC B 0x3E5C8C4
	0x03E5C8C0 B 0x3E5C9EC
	0x03E5C8C4 MOV X20, X0
	0x03E5C8C8 B 0x3E5C9F0
	0x03E5C8CC B 0x3E5C9EC
	0x03E5C8D0 B 0x3E5C9EC
	0x03E5C8D4 B 0x3E5C9EC
	0x03E5C8D8 B 0x3E5C9EC
	0x03E5C8DC B 0x3E5C9EC
	0x03E5C8E0 B 0x3E5C9EC
	0x03E5C8E4 B 0x3E5C9EC
	0x03E5C8E8 B 0x3E5C9EC
	0x03E5C8EC B 0x3E5C9EC
	0x03E5C8F0 B 0x3E5C9EC
	0x03E5C8F4 B 0x3E5C9EC
	0x03E5C8F8 B 0x3E5C9EC
	0x03E5C8FC B 0x3E5C9EC
	0x03E5C900 B 0x3E5C9EC
	0x03E5C904 B 0x3E5C9EC
	0x03E5C908 B 0x3E5C9EC
	0x03E5C90C B 0x3E5C9EC
	0x03E5C910 B 0x3E5C9EC
	0x03E5C914 B 0x3E5C9EC
	0x03E5C918 B 0x3E5C9EC
	0x03E5C91C B 0x3E5C9EC
	0x03E5C920 B 0x3E5C9EC
	0x03E5C924 B 0x3E5C9EC
	0x03E5C928 B 0x3E5C9EC
	0x03E5C92C B 0x3E5C9EC
	0x03E5C930 B 0x3E5C9EC
	0x03E5C934 B 0x3E5C9EC
	0x03E5C938 B 0x3E5C9EC
	0x03E5C93C B 0x3E5C9EC
	0x03E5C940 B 0x3E5C9EC
	0x03E5C944 B 0x3E5C9EC
	0x03E5C948 B 0x3E5C9EC
	0x03E5C94C B 0x3E5C9EC
	0x03E5C950 B 0x3E5C9EC
	0x03E5C954 B 0x3E5C9EC
	0x03E5C958 B 0x3E5C9EC
	0x03E5C95C B 0x3E5C9EC
	0x03E5C960 B 0x3E5C9EC
	0x03E5C964 B 0x3E5C9EC
	0x03E5C968 B 0x3E5C9EC
	0x03E5C96C B 0x3E5C9EC
	0x03E5C970 B 0x3E5C9EC
	0x03E5C974 B 0x3E5C9EC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x58D000
	010 Move X24, 0x2A3000
	011 Move X20, 0x2A3000
	012 Move X23, 0x299000
	013 Move X22, 0x299000
	014 Move X21, 0x298000
	015 Move W8, [X25+2265]
	016 Move X24, [X24+3784]
	017 Move X20, [X20+3776]
	018 Move X23, [X23+464]
	019 Move X22, [X22+448]
	020 Move X21, [X21+1560]
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {43}
	026 Move X0, 0x298000
	027 Move X0, [X0+1560]
	028 Call 0x1C17CF4
	029 Move X0, 0x2A3000
	030 Move X0, [X0+3776]
	031 Call 0x1C17CF4
	032 Move X0, 0x299000
	033 Move X0, [X0+448]
	034 Call 0x1C17CF4
	035 Move X0, 0x2A3000
	036 Move X0, [X0+3784]
	037 Call 0x1C17CF4
	038 Move X0, 0x299000
	039 Move X0, [X0+464]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X25+2265], W8
	043 Move X0, X19
	044 Move X1, X31
	045 Move [X19+56], W31
	046 Call Object..ctor, X0
	047 Move X0, [X24]
	048 Call 0x1C17F10
	049 Move X1, [X20]
	050 Move X20, X0
	051 Call List`1<Object>..ctor, X0
	052 Move [X19+16], X20
	053 Move X0, [X23]
	054 Call 0x1C17F10
	055 Move X1, [X22]
	056 Move X20, X0
	057 Call List`1<Object>..ctor, X0
	058 Move [X19+24], X20
	059 Move X0, [X23]
	060 Call 0x1C17F10
	061 Move X1, [X22]
	062 Move X20, X0
	063 Call List`1<Object>..ctor, X0
	064 Move [X19+32], X20
	065 Move X0, [X23]
	066 Call 0x1C17F10
	067 Move X1, [X22]
	068 Move X20, X0
	069 Call List`1<Object>..ctor, X0
	070 Move [X19+40], X20
	071 Move X0, [X21]
	072 Move W1, 40
	073 Call 0x1C17D6C
	074 Move X20, X31
	075 Move [X19+48], X0
	076 Move W0, 48
	077 Move W1, 110
	078 Move X2, X31
	079 Call Random.Range, X0, X1
	080 Move X8, [X19+48]
	081 Compare X8, 0
	082 JumpIfEqual {104}
	083 Move W9, [X8+24]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Add W9, W0, 7
	086 Add W10, W0, 13
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Add X8, X8, X20
	089 Add X20, X20, 1
	090 NotImplemented "Instruction CSEL not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 NotImplemented "Instruction CSEL not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move [X8+32], W9
	095 Move X20, [X31+48]
	096 Move X19, [X31+56]
	097 Move X22, [X31+32]
	098 Move X21, [X31+40]
	099 Move X24, [X31+16]
	100 Move X23, [X31+24]
	101 Move X30, [X31+64]
	102 Move X25, [X31+72]
	103 Return 
	104 Call 0x1C17F20
	105 Call 0x1C17F28

Method: System.Void AddField(System.String fieldName, System.String value)

Disassembly:
	0x03E5C978 B 0x3E5C9EC
	0x03E5C97C B 0x3E5C9EC
	0x03E5C980 B 0x3E5C9EC
	0x03E5C984 B 0x3E5C9EC
	0x03E5C988 B 0x3E5C9EC
	0x03E5C98C B 0x3E5C9EC
	0x03E5C990 B 0x3E5C9EC
	0x03E5C994 B 0x3E5C9EC
	0x03E5C998 B 0x3E5C9EC
	0x03E5C99C B 0x3E5C9EC
	0x03E5C9A0 B 0x3E5C9EC
	0x03E5C9A4 B 0x3E5C9EC
	0x03E5C9A8 B 0x3E5C9EC
	0x03E5C9AC B 0x3E5C9EC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, X0
	006 Move X0, X31
	007 Move X19, X2
	008 Move X20, X1
	009 Call Encoding.get_UTF8
	010 Move X1, X20
	011 Move X2, X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X3, X0
	015 Move X0, X21
	016 Move X30, [X31+32]
	017 Move X21, [X31+40]

Method: System.Void AddField(System.String fieldName, System.String value, System.Text.Encoding e)

Disassembly:
	0x03E5C9B0 B 0x3E5C9EC
	0x03E5C9B4 B 0x3E5C9EC
	0x03E5C9B8 B 0x3E5C9EC
	0x03E5C9BC B 0x3E5C9EC
	0x03E5C9C0 B 0x3E5C9EC
	0x03E5C9C4 B 0x3E5C9EC
	0x03E5C9C8 B 0x3E5C9EC
	0x03E5C9CC B 0x3E5C9EC
	0x03E5C9D0 B 0x3E5C9EC
	0x03E5C9D4 B 0x3E5C9EC
	0x03E5C9D8 B 0x3E5C9EC
	0x03E5C9DC B 0x3E5C9EC
	0x03E5C9E0 B 0x3E5C9EC
	0x03E5C9E4 B 0x3E5C9EC
	0x03E5C9E8 B 0x3E5C9EC
	0x03E5C9EC MOV X20, X0
	0x03E5C9F0 CMP W1, 0x1
	0x03E5C9F4 B.NE 0x3E5CA1C
	0x03E5C9F8 MOV X0, X20
	0x03E5C9FC BL 0x3EB1AD0
	0x03E5CA00 LDR X21, [X0]
	0x03E5CA04 ADRP X24, 0x297000
	0x03E5CA08 LDR X24, [X24 + 0xE00]
	0x03E5CA0C BL 0x3EB1AE0
	0x03E5CA10 MOV X20, X31
	0x03E5CA14 CBNZ X19, 0x3E5C6C8
	0x03E5CA18 B 0x3E5C720
	0x03E5CA1C MOV X21, X31
	0x03E5CA20 B 0x3E5CA28
	0x03E5CA24 MOV X20, X0
	0x03E5CA28 CBZ X19, 0x3E5CA8C
	0x03E5CA2C LDR X8, [X19]
	0x03E5CA30 ADRP X10, 0x297000
	0x03E5CA34 LDRH W9, [X8 + 0x12E]
	0x03E5CA38 LDR X10, [X10 + 0xE00]
	0x03E5CA3C LDR X1, [X10]
	0x03E5CA40 CBZ X9, 0x3E5CA64
	0x03E5CA44 LDR X10, [X8 + 0xB0]
	0x03E5CA48 ADD X10, X10, 0x8
	0x03E5CA4C LDUR X11, [X10 - 0x8]
	0x03E5CA50 CMP X11, X1
	0x03E5CA54 B.EQ 0x3E5CA74
	0x03E5CA58 SUBS X9, X9, 0x1
	0x03E5CA5C ADD X10, X10, 0x10
	0x03E5CA60 B.NE 0x3E5CA4C
	0x03E5CA64 MOV X0, X19
	0x03E5CA68 MOV W2, W31
	0x03E5CA6C BL 0x1C5C788
	0x03E5CA70 B 0x3E5CA80
	0x03E5CA74 LDRSW X9, [X10]
	0x03E5CA78 ADD X8, X8, X9, 0x4, LSL
	0x03E5CA7C ADD X0, X8, 0x138
	0x03E5CA80 LDP X8, X1, [X0]
	0x03E5CA84 MOV X0, X19
	0x03E5CA88 BLR X8
	0x03E5CA8C CBNZ X21, 0x3E5CA98
	0x03E5CA90 MOV X0, X20
	0x03E5CA94 BL 0x1D2C690
	0x03E5CA98 MOV X0, X21
	0x03E5CA9C BL 0x1C16F18
	0x03E5CAA0 BL 0x1990590
	0x03E5CAA4 STP X29, X30, [X31 - 0x40]!
	0x03E5CAA8 STR X23, [X31 + 0x10]
	0x03E5CAAC STP X22, X21, [X31 + 0x20]
	0x03E5CAB0 STP X20, X19, [X31 + 0x30]
	0x03E5CAB4 ADD X29, X31, 0x0
	0x03E5CAB8 SUB X31, X31, 0x10
	0x03E5CABC MRS X23, 0xC000
	0x03E5CAC0 LDR X8, [X23 + 0x28]
	0x03E5CAC4 ADRP X19, 0x58C000
	0x03E5CAC8 MOV X20, X1
	0x03E5CACC MOV X21, X0
	0x03E5CAD0 STUR X8, [X29 - 0x8]
	0x03E5CAD4 LDRB W8, [X19 + 0x8E5]
	0x03E5CAD8 TBNZ X8, 0x0, 0x3E5CAF0
	0x03E5CADC ADRP X0, 0x30F000
	0x03E5CAE0 LDR X0, [X0 + 0xD28]
	0x03E5CAE4 BL 0x1C16CF4
	0x03E5CAE8 MOVZ W8, 0x1
	0x03E5CAEC STRB W8, [X19 + 0x8E5]
	0x03E5CAF0 MOV X0, X21
	0x03E5CAF4 MOV X1, X31
	0x03E5CAF8 BL 0x32277A8
	0x03E5CAFC TBNZ X0, 0x0, 0x3E5CBDC
	0x03E5CB00 CBZ X21, 0x3E5CC10
	0x03E5CB04 LDR W8, [X21 + 0x10]
	0x03E5CB08 UBFM W8, W8, 0x1F, 0x1E
	0x03E5CB0C SXTW X22, W8
	0x03E5CB10 CBZ W8, 0x3E5CB2C
	0x03E5CB14 ADD X9, X22, 0xF
	0x03E5CB18 ADD X8, X31, 0x0
	0x03E5CB1C AND X9, X9, 0xFFFFFFFF
	0x03E5CB20 SUB X19, X8, X9
	0x03E5CB24 ADD X31, X19, 0x0
	0x03E5CB28 B 0x3E5CB30
	0x03E5CB2C MOV X19, X31
	0x03E5CB30 MOV X0, X19
	0x03E5CB34 MOV W1, W31
	0x03E5CB38 MOV X2, X22
	0x03E5CB3C BL 0x3EB1B10
	0x03E5CB40 MOV X0, X31
	0x03E5CB44 BL 0x32C1424
	0x03E5CB48 CBZ X20, 0x3E5CC10
	0x03E5CB4C LDR X8, [X20]
	0x03E5CB50 LDR W2, [X21 + 0x10]
	0x03E5CB54 ADD X1, X21, W0, SXTW
	0x03E5CB58 MOV X0, X20
	0x03E5CB5C LDR X9, [X8 + 0x298]
	0x03E5CB60 LDR X5, [X8 + 0x2A0]
	0x03E5CB64 MOV X3, X19
	0x03E5CB68 MOV W4, W22
	0x03E5CB6C BLR X9
	0x03E5CB70 ADRP X8, 0x30F000
	0x03E5CB74 LDR X8, [X8 + 0xD28]
	0x03E5CB78 MOV W20, W0
	0x03E5CB7C LDR X8, [X8]
	0x03E5CB80 LDR W9, [X8 + 0xE0]
	0x03E5CB84 CBNZ W9, 0x3E5CB90
	0x03E5CB88 MOV X0, X8
	0x03E5CB8C BL 0x1C16DFC
	0x03E5CB90 CMP W20, 0x1
	0x03E5CB94 B.LT 0x3E5CBDC
	0x03E5CB98 LDRB W8, [X19]
	0x03E5CB9C SUB W8, W8, 0x20
	0x03E5CBA0 CMP W8, 0x5E
	0x03E5CBA4 B.HI 0x3E5CC08
	0x03E5CBA8 MOV W8, W20
	0x03E5CBAC MOVZ W10, 0x1
	0x03E5CBB0 MOV X9, X10
	0x03E5CBB4 CMP X8, X10
	0x03E5CBB8 B.EQ 0x3E5CBD0
	0x03E5CBBC LDRB W10, [X19, X9, LSL]
	0x03E5CBC0 SUB W10, W10, 0x20
	0x03E5CBC4 CMP W10, 0x5E
	0x03E5CBC8 ADD X10, X9, 0x1
	0x03E5CBCC B.LS 0x3E5CBB0
	0x03E5CBD0 CMP X9, X8
	0x03E5CBD4 CSET W0, CS
	0x03E5CBD8 B 0x3E5CBE0
	0x03E5CBDC MOVZ W0, 0x1
	0x03E5CBE0 LDR X8, [X23 + 0x28]
	0x03E5CBE4 LDUR X9, [X29 - 0x8]
	0x03E5CBE8 CMP X8, X9
	0x03E5CBEC B.NE 0x3E5CC14
	0x03E5CBF0 ADD X31, X29, 0x0
	0x03E5CBF4 LDP X20, X19, [X31 + 0x30]
	0x03E5CBF8 LDP X22, X21, [X31 + 0x20]
	0x03E5CBFC LDR X23, [X31 + 0x10]
	0x03E5CC00 LDP X29, X30, [X31], #0x40

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x58D000
	009 Move W8, [X23+2266]
	010 Move X19, X3
	011 Move X21, X2
	012 Move X22, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x2A3000
	019 Move X0, [X0+3760]
	020 Call 0x1C17CF4
	021 Move X0, 0x299000
	022 Move X0, [X0+440]
	023 Call 0x1C17CF4
	024 Move X0, 0x310000
	025 Move X0, [X0+3384]
	026 Call 0x1C17CF4
	027 Move X0, 0x2A3000
	028 Move X0, [X0+3288]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X23+2266], W8
	032 Move X0, [X20+24]
	033 Compare X0, 0
	034 JumpIfEqual {165}
	035 Move X23, 0x299000
	036 Move X23, [X23+440]
	037 Move W10, [X0+28]
	038 Move X8, [X0+16]
	039 Move X9, [X23]
	040 Add W10, W10, 1
	041 Move [X0+28], W10
	042 Compare X8, 0
	043 JumpIfEqual {165}
	044 NotImplemented "Instruction LDRSW not yet implemented."
	045 Move W11, [X8+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Add W9, W10, 1
	048 Add X8, X8, X10
	049 Move [X0+24], W9
	050 Move [X8+32], X22
	051 Move X8, [X9+32]
	052 Move X1, X22
	053 Move X8, [X8+192]
	054 Move X2, [X8+112]
	055 Call List`1<Object>.AddWithResize, X0, X1
	056 Move X0, [X20+32]
	057 Compare X0, 0
	058 JumpIfEqual {165}
	059 Move W10, [X0+28]
	060 Move X8, [X0+16]
	061 Move X9, [X23]
	062 Add W10, W10, 1
	063 Move [X0+28], W10
	064 Compare X8, 0
	065 JumpIfEqual {165}
	066 NotImplemented "Instruction LDRSW not yet implemented."
	067 Move W11, [X8+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Add W9, W10, 1
	070 Add X8, X8, X10
	071 Move [X0+24], W9
	072 Move [X8+32], X31
	073 Move X8, [X9+32]
	074 Move X1, X31
	075 Move X8, [X8+192]
	076 Move X2, [X8+112]
	077 Call List`1<Object>.AddWithResize, X0, X1
	078 Compare X19, 0
	079 JumpIfEqual {165}
	080 Move X8, [X19]
	081 Move X22, [X20+16]
	082 Move X0, X19
	083 Move X1, X21
	084 Move X9, [X8+616]
	085 Move X2, [X8+624]
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Compare X22, 0
	088 JumpIfEqual {165}
	089 Move X9, 0x2A3000
	090 Move X9, [X9+3760]
	091 Move W10, [X22+28]
	092 Move X8, [X22+16]
	093 Move X9, [X9]
	094 Add W10, W10, 1
	095 Move [X22+28], W10
	096 Compare X8, 0
	097 JumpIfEqual {165}
	098 NotImplemented "Instruction LDRSW not yet implemented."
	099 Move W11, [X8+24]
	100 Move X21, 0x310000
	101 Move X24, 0x2A3000
	102 Move X21, [X21+3384]
	103 Move X24, [X24+3288]
	104 Move X1, X0
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Add W9, W10, 1
	107 Add X8, X8, X10
	108 Move [X22+24], W9
	109 Move [X8+32], X1
	110 Move X8, [X9+32]
	111 Move X0, X22
	112 Move X8, [X8+192]
	113 Move X2, [X8+112]
	114 Call List`1<Object>.AddWithResize, X0, X1
	115 Move X8, [X19]
	116 Move X20, [X20+40]
	117 Move X0, X19
	118 Move X9, [X8+472]
	119 Move X1, [X8+480]
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move X8, [X21]
	122 Move X2, [X24]
	123 Move X1, X0
	124 Move X3, X31
	125 Move X0, X8
	126 Call String.Concat, X0, X1, X2
	127 Compare X20, 0
	128 JumpIfEqual {165}
	129 Move W10, [X20+28]
	130 Move X8, [X20+16]
	131 Move X9, [X23]
	132 Add W10, W10, 1
	133 Move [X20+28], W10
	134 Compare X8, 0
	135 JumpIfEqual {165}
	136 NotImplemented "Instruction LDRSW not yet implemented."
	137 Move W11, [X8+24]
	138 Move X1, X0
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Add W9, W10, 1
	141 Move [X20+24], W9
	142 Move X20, [X31+48]
	143 Move X19, [X31+56]
	144 Move X22, [X31+32]
	145 Move X21, [X31+40]
	146 Move X24, [X31+16]
	147 Move X23, [X31+24]
	148 Add X8, X8, X10
	149 Move [X8+32], X1
	150 Move X30, [X31+64]
	151 Return 
	152 Move X8, [X9+32]
	153 Move X0, X20
	154 Move X20, [X31+48]
	155 Move X19, [X31+56]
	156 Move X22, [X31+32]
	157 Move X21, [X31+40]
	158 Move X8, [X8+192]
	159 Move X24, [X31+16]
	160 Move X23, [X31+24]
	161 Move X2, [X8+112]
	162 Move X30, [X31+64]
	163 Call List`1<Object>.AddWithResize, X0, X1
	164 Return 
	165 Call 0x1C17F20

Method: System.Collections.Generic.Dictionary`2<System.String, System.String> get_headers()

Disassembly:
	0x03E5CC04 RET
	0x03E5CC08 MOV W0, W31
	0x03E5CC0C B 0x3E5CBE0
	0x03E5CC10 BL 0x1C16F20
	0x03E5CC14 BL 0x3EB1B20
	0x03E5CC18 STR X30, [X31 - 0x30]!
	0x03E5CC1C STP X22, X21, [X31 + 0x10]
	0x03E5CC20 STP X20, X19, [X31 + 0x20]
	0x03E5CC24 ADRP X21, 0x58C000
	0x03E5CC28 LDRB W8, [X21 + 0x8E1]
	0x03E5CC2C MOV X19, X1
	0x03E5CC30 MOV X20, X0
	0x03E5CC34 TBNZ X8, 0x0, 0x3E5CC58
	0x03E5CC38 ADRP X0, 0x2C4000
	0x03E5CC3C LDR X0, [X0 + 0xF8]
	0x03E5CC40 BL 0x1C16CF4
	0x03E5CC44 ADRP X0, 0x30F000
	0x03E5CC48 LDR X0, [X0 + 0xD28]
	0x03E5CC4C BL 0x1C16CF4
	0x03E5CC50 MOVZ W8, 0x1
	0x03E5CC54 STRB W8, [X21 + 0x8E1]
	0x03E5CC58 CBZ X19, 0x3E5CD08
	0x03E5CC5C LDR X8, [X19]
	0x03E5CC60 ADRP X22, 0x30F000
	0x03E5CC64 ADRP X21, 0x2C4000
	0x03E5CC68 MOV X0, X19
	0x03E5CC6C LDR X9, [X8 + 0x268]
	0x03E5CC70 LDR X2, [X8 + 0x270]
	0x03E5CC74 LDR X22, [X22 + 0xD28]
	0x03E5CC78 LDR X21, [X21 + 0xF8]
	0x03E5CC7C MOV X1, X20
	0x03E5CC80 BLR X9
	0x03E5CC84 LDR X8, [X22]
	0x03E5CC88 MOV X19, X0
	0x03E5CC8C LDR W9, [X8 + 0xE0]
	0x03E5CC90 CBNZ W9, 0x3E5CCA0
	0x03E5CC94 MOV X0, X8
	0x03E5CC98 BL 0x1C16DFC
	0x03E5CC9C LDR X8, [X22]
	0x03E5CCA0 LDR X8, [X8 + 0xB8]
	0x03E5CCA4 MOVZ W4, 0x1
	0x03E5CCA8 MOV X0, X19
	0x03E5CCAC LDP X2, X3, [X8 + 0x38]
	0x03E5CCB0 LDRB W1, [X8 + 0x30]
	0x03E5CCB4 BL 0x3E5D208
	0x03E5CCB8 LDR X8, [X21]
	0x03E5CCBC MOV X19, X0
	0x03E5CCC0 LDR W9, [X8 + 0xE0]
	0x03E5CCC4 CBNZ W9, 0x3E5CCD0
	0x03E5CCC8 MOV X0, X8
	0x03E5CCCC BL 0x1C16DFC
	0x03E5CCD0 MOV X0, X31
	0x03E5CCD4 BL 0x3242EC8
	0x03E5CCD8 CBZ X19, 0x3E5CD08
	0x03E5CCDC CBZ X0, 0x3E5CD08
	0x03E5CCE0 LDR X8, [X0]
	0x03E5CCE4 LDR W3, [X19 + 0x18]
	0x03E5CCE8 MOV X1, X19
	0x03E5CCEC LDP X20, X19, [X31 + 0x20]
	0x03E5CCF0 LDR X5, [X8 + 0x388]
	0x03E5CCF4 LDR X4, [X8 + 0x390]
	0x03E5CCF8 LDP X22, X21, [X31 + 0x10]
	0x03E5CCFC MOV W2, W31
	0x03E5CD00 LDR X30, [X31], #0x30
	0x03E5CD04 BR X5
	0x03E5CD08 BL 0x1C16F20
	0x03E5CD0C STP X30, X21, [X31 - 0x20]!
	0x03E5CD10 STP X20, X19, [X31 + 0x10]
	0x03E5CD14 ADRP X21, 0x58C000
	0x03E5CD18 ADRP X20, 0x30F000
	0x03E5CD1C LDRB W8, [X21 + 0x8E0]
	0x03E5CD20 LDR X20, [X20 + 0xD28]
	0x03E5CD24 MOV X19, X0
	0x03E5CD28 TBNZ X8, 0x0, 0x3E5CD40
	0x03E5CD2C ADRP X0, 0x30F000
	0x03E5CD30 LDR X0, [X0 + 0xD28]
	0x03E5CD34 BL 0x1C16CF4
	0x03E5CD38 MOVZ W8, 0x1
	0x03E5CD3C STRB W8, [X21 + 0x8E0]
	0x03E5CD40 LDR X0, [X20]
	0x03E5CD44 LDR W8, [X0 + 0xE0]
	0x03E5CD48 CBNZ W8, 0x3E5CD54
	0x03E5CD4C BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x58D000
	007 Move X22, 0x299000
	008 Move X19, 0x299000
	009 Move W8, [X21+2267]
	010 Move X22, [X22+1744]
	011 Move X19, [X19+1728]
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0x299000
	018 Move X0, [X0+1728]
	019 Call 0x1C17CF4
	020 Move X0, 0x299000
	021 Move X0, [X0+1736]
	022 Call 0x1C17CF4
	023 Move X0, 0x299000
	024 Move X0, [X0+1744]
	025 Call 0x1C17CF4
	026 Move X0, 0x2DB000
	027 Move X0, [X0+2880]
	028 Call 0x1C17CF4
	029 Move X0, 0x310000
	030 Move X0, [X0+3392]
	031 Call 0x1C17CF4
	032 Move X0, 0x2D3000
	033 Move X0, [X0+2440]
	034 Call 0x1C17CF4
	035 Move X0, 0x2A3000
	036 Move X0, [X0+3288]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+2267], W8
	040 Move X0, [X22]
	041 Call 0x1C17F10
	042 Move X1, [X19]
	043 Move X19, X0
	044 Call Dictionary`2<Object, Object>..ctor, X0
	045 Move W8, [X20+56]
	046 Compare W8, 0
	047 JumpIfEqual {74}
	048 Move X0, X31
	049 Call Encoding.get_UTF8
	050 Move X1, [X20+48]
	051 Compare X1, 0
	052 JumpIfEqual {94}
	053 Compare X0, 0
	054 JumpIfEqual {94}
	055 Move X8, [X0]
	056 Move W3, [X1+24]
	057 Move X20, 0x310000
	058 Move X21, 0x2A3000
	059 Move X9, [X8+904]
	060 Move X4, [X8+912]
	061 Move X20, [X20+3392]
	062 Move X21, [X21+3288]
	063 Move W2, W31
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X8, [X20]
	066 Move X2, [X21]
	067 Move X1, X0
	068 Move X3, X31
	069 Move X0, X8
	070 Call String.Concat, X0, X1, X2
	071 Compare X19, 0
	072 JumpIfEqual {94}
	073 Move X2, X0
	074 Compare X19, 0
	075 JumpIfEqual {94}
	076 Move X8, 0x2DB000
	077 Move X8, [X8+2880]
	078 Move X2, [X8]
	079 Move X8, 0x2D3000
	080 Move X9, 0x299000
	081 Move X8, [X8+2440]
	082 Move X9, [X9+1736]
	083 Move X0, X19
	084 Move X1, [X8]
	085 Move X3, [X9]
	086 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	087 Move X0, X19
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X22, [X31+16]
	091 Move X21, [X31+24]
	092 Move X30, [X31+48]
	093 Return X0
	094 Call 0x1C17F20

Method: System.Byte[] get_data()

Disassembly:
	0x03E5CD50 LDR X0, [X20]
	0x03E5CD54 LDR X8, [X0 + 0xB8]
	0x03E5CD58 MOV X0, X19
	0x03E5CD5C LDP X20, X19, [X31 + 0x10]
	0x03E5CD60 MOV W4, W31
	0x03E5CD64 LDP X2, X3, [X8 + 0x20]
	0x03E5CD68 LDRB W1, [X8 + 0x10]
	0x03E5CD6C LDP X30, X21, [X31], #0x20
	0x03E5CD70 B 0x3E5D208
	0x03E5CD74 STP X30, X19, [X31 - 0x10]!
	0x03E5CD78 ADRP X19, 0x58C000
	0x03E5CD7C LDRB W8, [X19 + 0x8DD]
	0x03E5CD80 TBNZ X8, 0x0, 0x3E5CDF8
	0x03E5CD84 ADRP X0, 0x2C4000
	0x03E5CD88 LDR X0, [X0 + 0xF8]
	0x03E5CD8C BL 0x1C16CF4
	0x03E5CD90 ADRP X0, 0x2C4000
	0x03E5CD94 LDR X0, [X0 + 0xFB8]
	0x03E5CD98 BL 0x1C16CF4
	0x03E5CD9C ADRP X0, 0x30F000
	0x03E5CDA0 LDR X0, [X0 + 0xD70]
	0x03E5CDA4 BL 0x1C16CF4
	0x03E5CDA8 ADRP X0, 0x2D5000
	0x03E5CDAC LDR X0, [X0 + 0x420]
	0x03E5CDB0 BL 0x1C16CF4
	0x03E5CDB4 ADRP X0, 0x2C2000
	0x03E5CDB8 LDR X0, [X0 + 0x578]
	0x03E5CDBC BL 0x1C16CF4
	0x03E5CDC0 ADRP X0, 0x2A0000
	0x03E5CDC4 LDR X0, [X0 + 0x720]
	0x03E5CDC8 BL 0x1C16CF4
	0x03E5CDCC ADRP X0, 0x30F000
	0x03E5CDD0 LDR X0, [X0 + 0xD78]
	0x03E5CDD4 BL 0x1C16CF4
	0x03E5CDD8 ADRP X0, 0x2A2000
	0x03E5CDDC LDR X0, [X0 + 0xCD8]
	0x03E5CDE0 BL 0x1C16CF4
	0x03E5CDE4 ADRP X0, 0x30F000
	0x03E5CDE8 LDR X0, [X0 + 0xD80]
	0x03E5CDEC BL 0x1C16CF4
	0x03E5CDF0 MOVZ W8, 0x1
	0x03E5CDF4 STRB W8, [X19 + 0x8DD]
	0x03E5CDF8 MOV X0, X31
	0x03E5CDFC BL 0x3242EC8
	0x03E5CE00 CBZ X0, 0x3E5CFA8
	0x03E5CE04 ADRP X9, 0x2C2000
	0x03E5CE08 LDR X8, [X0]
	0x03E5CE0C LDR X9, [X9 + 0x578]
	0x03E5CE10 ADRP X19, 0x2C4000
	0x03E5CE14 LDR X2, [X8 + 0x270]
	0x03E5CE18 LDR X1, [X9]
	0x03E5CE1C LDR X9, [X8 + 0x268]
	0x03E5CE20 LDR X19, [X19 + 0xF8]
	0x03E5CE24 BLR X9
	0x03E5CE28 LDR X8, [X19]
	0x03E5CE2C LDR X8, [X8 + 0xB8]
	0x03E5CE30 STR X0, [X8]
	0x03E5CE34 MOV X0, X31
	0x03E5CE38 BL 0x3242EC8
	0x03E5CE3C CBZ X0, 0x3E5CFA8
	0x03E5CE40 ADRP X9, 0x2D5000
	0x03E5CE44 LDR X8, [X0]
	0x03E5CE48 LDR X9, [X9 + 0x420]
	0x03E5CE4C LDR X2, [X8 + 0x270]
	0x03E5CE50 LDR X1, [X9]
	0x03E5CE54 LDR X9, [X8 + 0x268]
	0x03E5CE58 BLR X9
	0x03E5CE5C LDR X8, [X19]
	0x03E5CE60 LDR X8, [X8 + 0xB8]
	0x03E5CE64 STR X0, [X8 + 0x8]
	0x03E5CE68 MOV X0, X31
	0x03E5CE6C BL 0x3242EC8
	0x03E5CE70 CBZ X0, 0x3E5CFA8
	0x03E5CE74 ADRP X9, 0x30F000
	0x03E5CE78 LDR X8, [X0]
	0x03E5CE7C LDR X9, [X9 + 0xD70]
	0x03E5CE80 LDR X2, [X8 + 0x270]
	0x03E5CE84 LDR X1, [X9]
	0x03E5CE88 LDR X9, [X8 + 0x268]
	0x03E5CE8C BLR X9
	0x03E5CE90 LDR X8, [X19]
	0x03E5CE94 LDR X8, [X8 + 0xB8]
	0x03E5CE98 STR X0, [X8 + 0x10]
	0x03E5CE9C MOV X0, X31
	0x03E5CEA0 BL 0x3242EC8
	0x03E5CEA4 CBZ X0, 0x3E5CFA8
	0x03E5CEA8 ADRP X9, 0x30F000
	0x03E5CEAC LDR X8, [X0]
	0x03E5CEB0 LDR X9, [X9 + 0xD78]
	0x03E5CEB4 LDR X2, [X8 + 0x270]
	0x03E5CEB8 LDR X1, [X9]
	0x03E5CEBC LDR X9, [X8 + 0x268]
	0x03E5CEC0 BLR X9
	0x03E5CEC4 LDR X8, [X19]
	0x03E5CEC8 LDR X8, [X8 + 0xB8]
	0x03E5CECC STR X0, [X8 + 0x18]
	0x03E5CED0 MOV X0, X31
	0x03E5CED4 BL 0x3242EC8
	0x03E5CED8 CBZ X0, 0x3E5CFA8
	0x03E5CEDC ADRP X9, 0x2A2000
	0x03E5CEE0 LDR X8, [X0]
	0x03E5CEE4 LDR X9, [X9 + 0xCD8]
	0x03E5CEE8 LDR X2, [X8 + 0x270]
	0x03E5CEEC LDR X1, [X9]
	0x03E5CEF0 LDR X9, [X8 + 0x268]
	0x03E5CEF4 BLR X9
	0x03E5CEF8 LDR X8, [X19]
	0x03E5CEFC LDR X8, [X8 + 0xB8]
	0x03E5CF00 STR X0, [X8 + 0x20]
	0x03E5CF04 MOV X0, X31
	0x03E5CF08 BL 0x3242EC8
	0x03E5CF0C CBZ X0, 0x3E5CFA8
	0x03E5CF10 ADRP X9, 0x30F000
	0x03E5CF14 LDR X8, [X0]
	0x03E5CF18 LDR X9, [X9 + 0xD80]
	0x03E5CF1C LDR X2, [X8 + 0x270]
	0x03E5CF20 LDR X1, [X9]
	0x03E5CF24 LDR X9, [X8 + 0x268]
	0x03E5CF28 BLR X9
	0x03E5CF2C LDR X8, [X19]
	0x03E5CF30 LDR X8, [X8 + 0xB8]
	0x03E5CF34 STR X0, [X8 + 0x28]
	0x03E5CF38 MOV X0, X31
	0x03E5CF3C BL 0x3242EC8
	0x03E5CF40 CBZ X0, 0x3E5CFA8
	0x03E5CF44 ADRP X9, 0x2A0000
	0x03E5CF48 LDR X8, [X0]
	0x03E5CF4C LDR X9, [X9 + 0x720]
	0x03E5CF50 LDR X2, [X8 + 0x270]
	0x03E5CF54 LDR X1, [X9]
	0x03E5CF58 LDR X9, [X8 + 0x268]
	0x03E5CF5C BLR X9
	0x03E5CF60 LDR X8, [X19]
	0x03E5CF64 LDR X8, [X8 + 0xB8]
	0x03E5CF68 STR X0, [X8 + 0x30]
	0x03E5CF6C MOV X0, X31
	0x03E5CF70 BL 0x3242EC8
	0x03E5CF74 CBZ X0, 0x3E5CFA8
	0x03E5CF78 ADRP X9, 0x2C4000
	0x03E5CF7C LDR X8, [X0]
	0x03E5CF80 LDR X9, [X9 + 0xFB8]
	0x03E5CF84 LDR X2, [X8 + 0x270]
	0x03E5CF88 LDR X1, [X9]
	0x03E5CF8C LDR X9, [X8 + 0x268]
	0x03E5CF90 BLR X9
	0x03E5CF94 LDR X8, [X19]
	0x03E5CF98 LDR X8, [X8 + 0xB8]
	0x03E5CF9C STR X0, [X8 + 0x38]
	0x03E5CFA0 LDP X30, X19, [X31], #0x10
	0x03E5CFA4 RET
	0x03E5CFA8 BL 0x1C16F20
	0x03E5CFAC STR X30, [X31 - 0x10]!
	0x03E5CFB0 MOVZ W8, 0xFFFD
	0x03E5CFB4 MOVK W8, 0x7FFF0000
	0x03E5CFB8 CMP W1, W8
	0x03E5CFBC B.GT 0x3E5D03C
	0x03E5CFC0 MOV X8, X0
	0x03E5CFC4 CBZ X0, 0x3E5D054
	0x03E5CFC8 LDR W9, [X8 + 0x18]
	0x03E5CFCC ADD W11, W1, 0x2
	0x03E5CFD0 MOV W0, W31
	0x03E5CFD4 SXTW X10, W1
	0x03E5CFD8 SXTW X11, W11
	0x03E5CFDC ADD X8, X8, 0x20
	0x03E5CFE0 CMP W10, W9
	0x03E5CFE4 B.CS 0x3E5D050
	0x03E5CFE8 LDRB W13, [X8, X10, LSL]
	0x03E5CFEC SUB W12, W13, 0x30
	0x03E5CFF0 CMP W12, 0x9
	0x03E5CFF4 B.LS 0x3E5D01C
	0x03E5CFF8 SUB W12, W13, 0x41
	0x03E5CFFC CMP W12, 0xA
	0x03E5D000 B.LS 0x3E5D018
	0x03E5D004 SUB W12, W13, 0x61
	0x03E5D008 SUB W14, W13, 0x57
	0x03E5D00C CMP W12, 0x5
	0x03E5D010 CSEL W12, W13, W14, HI
	0x03E5D014 B 0x3E5D01C
	0x03E5D018 SUB W12, W13, 0x37
	0x03E5D01C CMP W12, 0xF
	0x03E5D020 B.GT 0x3E5D044
	0x03E5D024 UBFM W13, W0, 0x1C, 0x7
	0x03E5D028 ADD X10, X10, 0x1
	0x03E5D02C CMP X10, X11
	0x03E5D030 ADD W0, W12, W13
	0x03E5D034 B.LT 0x3E5CFE0
	0x03E5D038 B 0x3E5D048
	0x03E5D03C MOV W0, W31
	0x03E5D040 B 0x3E5D048
	0x03E5D044 MOVZ W0, 0x3F
	0x03E5D048 LDR X30, [X31], #0x10
	0x03E5D04C RET
	0x03E5D050 BL 0x1C16F28
	0x03E5D054 BL 0x1C16F20
	0x03E5D058 STR X30, [X31 - 0x10]!
	0x03E5D05C CBZ X1, 0x3E5D0A8
	0x03E5D060 LDR W9, [X1 + 0x18]
	0x03E5D064 UBFM W8, W0, 0x4, 0x7
	0x03E5D068 CMP W8, W9
	0x03E5D06C B.CS 0x3E5D0A4
	0x03E5D070 ADD X8, X1, W8, UXTW
	0x03E5D074 LDRB W8, [X8 + 0x20]
	0x03E5D078 STRB W8, [X2]
	0x03E5D07C LDR W9, [X1 + 0x18]
	0x03E5D080 AND W8, W0, 0xFF
	0x03E5D084 AND W8, W8, 0xF
	0x03E5D088 CMP W8, W9
	0x03E5D08C B.CS 0x3E5D0A4
	0x03E5D090 ADD X8, X1, W8, UXTW
	0x03E5D094 LDRB W8, [X8 + 0x20]
	0x03E5D098 STRB W8, [X3]
	0x03E5D09C LDR X30, [X31], #0x10
	0x03E5D0A0 RET
	0x03E5D0A4 BL 0x1C16F28
	0x03E5D0A8 BL 0x1C16F20
	0x03E5D0AC STP X30, X21, [X31 - 0x20]!
	0x03E5D0B0 STP X20, X19, [X31 + 0x10]
	0x03E5D0B4 ADRP X21, 0x58B000
	0x03E5D0B8 ADRP X20, 0x30E000
	0x03E5D0BC LDRB W8, [X21 + 0x8DE]
	0x03E5D0C0 LDR X20, [X20 + 0xD28]
	0x03E5D0C4 MOV X19, X0
	0x03E5D0C8 TBNZ X8, 0x0, 0x3E5D0E0
	0x03E5D0CC ADRP X0, 0x30E000
	0x03E5D0D0 LDR X0, [X0 + 0xD28]
	0x03E5D0D4 BL 0x1C16CF4
	0x03E5D0D8 MOVZ W8, 0x1
	0x03E5D0DC STRB W8, [X21 + 0x8DE]
	0x03E5D0E0 MOV X0, X31
	0x03E5D0E4 BL 0x3241948
	0x03E5D0E8 LDR X8, [X20]
	0x03E5D0EC MOV X20, X0
	0x03E5D0F0 LDR W9, [X8 + 0xE0]
	0x03E5D0F4 CBNZ W9, 0x3E5D100
	0x03E5D0F8 MOV X0, X8
	0x03E5D0FC BL 0x1C16DFC
	0x03E5D100 MOV X0, X19
	0x03E5D104 MOV X1, X20
	0x03E5D108 LDP X20, X19, [X31 + 0x10]
	0x03E5D10C LDP X30, X21, [X31], #0x20
	0x03E5D110 B 0x3E5D114
	0x03E5D114 STR X30, [X31 - 0x30]!
	0x03E5D118 STP X22, X21, [X31 + 0x10]
	0x03E5D11C STP X20, X19, [X31 + 0x20]
	0x03E5D120 ADRP X21, 0x58B000
	0x03E5D124 LDRB W8, [X21 + 0x8DF]
	0x03E5D128 MOV X19, X1
	0x03E5D12C MOV X20, X0
	0x03E5D130 TBNZ X8, 0x0, 0x3E5D154
	0x03E5D134 ADRP X0, 0x2C3000
	0x03E5D138 LDR X0, [X0 + 0xF8]
	0x03E5D13C BL 0x1C16CF4
	0x03E5D140 ADRP X0, 0x30E000
	0x03E5D144 LDR X0, [X0 + 0xD28]
	0x03E5D148 BL 0x1C16CF4
	0x03E5D14C MOVZ W8, 0x1
	0x03E5D150 STRB W8, [X21 + 0x8DF]
	0x03E5D154 CBZ X19, 0x3E5D204
	0x03E5D158 LDR X8, [X19]
	0x03E5D15C ADRP X22, 0x30E000
	0x03E5D160 ADRP X21, 0x2C3000
	0x03E5D164 MOV X0, X19
	0x03E5D168 LDR X9, [X8 + 0x268]
	0x03E5D16C LDR X2, [X8 + 0x270]
	0x03E5D170 LDR X22, [X22 + 0xD28]
	0x03E5D174 LDR X21, [X21 + 0xF8]
	0x03E5D178 MOV X1, X20
	0x03E5D17C BLR X9
	0x03E5D180 LDR X8, [X22]
	0x03E5D184 MOV X19, X0
	0x03E5D188 LDR W9, [X8 + 0xE0]
	0x03E5D18C CBNZ W9, 0x3E5D19C
	0x03E5D190 MOV X0, X8
	0x03E5D194 BL 0x1C16DFC
	0x03E5D198 LDR X8, [X22]
	0x03E5D19C LDR X8, [X8 + 0xB8]
	0x03E5D1A0 MOV X0, X19
	0x03E5D1A4 MOV W4, W31
	0x03E5D1A8 LDP X2, X3, [X8 + 0x20]
	0x03E5D1AC LDRB W1, [X8 + 0x10]
	0x03E5D1B0 BL 0x3E5D208
	0x03E5D1B4 LDR X8, [X21]
	0x03E5D1B8 MOV X19, X0
	0x03E5D1BC LDR W9, [X8 + 0xE0]
	0x03E5D1C0 CBNZ W9, 0x3E5D1CC
	0x03E5D1C4 MOV X0, X8
	0x03E5D1C8 BL 0x1C16DFC
	0x03E5D1CC MOV X0, X31
	0x03E5D1D0 BL 0x3242EC8
	0x03E5D1D4 CBZ X19, 0x3E5D204
	0x03E5D1D8 CBZ X0, 0x3E5D204
	0x03E5D1DC LDR X8, [X0]
	0x03E5D1E0 LDR W3, [X19 + 0x18]
	0x03E5D1E4 MOV X1, X19
	0x03E5D1E8 LDP X20, X19, [X31 + 0x20]
	0x03E5D1EC LDR X5, [X8 + 0x388]
	0x03E5D1F0 LDR X4, [X8 + 0x390]
	0x03E5D1F4 LDP X22, X21, [X31 + 0x10]
	0x03E5D1F8 MOV W2, W31
	0x03E5D1FC LDR X30, [X31], #0x30
	0x03E5D200 BR X5
	0x03E5D204 BL 0x1C16F20
	0x03E5D208 SUB X31, X31, 0x70
	0x03E5D20C STP X29, X30, [X31 + 0x10]
	0x03E5D210 STP X28, X27, [X31 + 0x20]
	0x03E5D214 STP X26, X25, [X31 + 0x30]
	0x03E5D218 STP X24, X23, [X31 + 0x40]
	0x03E5D21C STP X22, X21, [X31 + 0x50]
	0x03E5D220 STP X20, X19, [X31 + 0x60]
	0x03E5D224 ADRP X19, 0x58B000
	0x03E5D228 LDRB W8, [X19 + 0x8E2]
	0x03E5D22C MOV W20, W4
	0x03E5D230 MOV X21, X3
	0x03E5D234 MOV X22, X2
	0x03E5D238 MOV W23, W1
	0x03E5D23C MOV X24, X0
	0x03E5D240 TBNZ X8, 0x0, 0x3E5D270
	0x03E5D244 ADRP X0, 0x296000
	0x03E5D248 LDR X0, [X0 + 0xE00]
	0x03E5D24C BL 0x1C16CF4
	0x03E5D250 ADRP X0, 0x29E000
	0x03E5D254 LDR X0, [X0 + 0x558]
	0x03E5D258 BL 0x1C16CF4
	0x03E5D25C ADRP X0, 0x30E000
	0x03E5D260 LDR X0, [X0 + 0xD28]
	0x03E5D264 BL 0x1C16CF4
	0x03E5D268 MOVZ W8, 0x1
	0x03E5D26C STRB W8, [X19 + 0x8E2]
	0x03E5D270 STRB W31, [X31 + 0xC]
	0x03E5D274 STRB W31, [X31 + 0x8]
	0x03E5D278 CBZ X24, 0x3E5D4EC
	0x03E5D27C ADRP X8, 0x29E000
	0x03E5D280 LDR X8, [X8 + 0x558]
	0x03E5D284 LDR X0, [X8]
	0x03E5D288 BL 0x1C16F10
	0x03E5D28C LDR W8, [X24 + 0x18]
	0x03E5D290 MOV X2, X31
	0x03E5D294 MOV X19, X0
	0x03E5D298 UBFM W1, W8, 0x1F, 0x1E
	0x03E5D29C BL 0x32E23BC
	0x03E5D2A0 LDR X8, [X24 + 0x18]
	0x03E5D2A4 CMP W8, 0x1
	0x03E5D2A8 B.LT 0x3E5D428
	0x03E5D2AC ADRP X29, 0x30E000
	0x03E5D2B0 LDR X29, [X29 + 0xD28]
	0x03E5D2B4 MOV X28, X31
	0x03E5D2B8 AND X8, X8, 0x0
	0x03E5D2BC ADD X27, X24, 0x20
	0x03E5D2C0 CMP X28, W8, UXTW
	0x03E5D2C4 B.CS 0x3E5D4D0
	0x03E5D2C8 LDRB W25, [X27, X28, LSL]
	0x03E5D2CC SUBS W8, W25, 0x20
	0x03E5D2D0 B.NE 0x3E5D300
	0x03E5D2D4 CBZ X22, 0x3E5D4D4
	0x03E5D2D8 CBZ X19, 0x3E5D4D8
	0x03E5D2DC LDR X8, [X19]
	0x03E5D2E0 LDR W3, [X22 + 0x18]
	0x03E5D2E4 LDR X9, [X8 + 0x388]
	0x03E5D2E8 LDR X4, [X8 + 0x390]
	0x03E5D2EC MOV X0, X19
	0x03E5D2F0 MOV X1, X22
	0x03E5D2F4 MOV W2, W31
	0x03E5D2F8 BLR X9
	0x03E5D2FC B 0x3E5D414
	0x03E5D300 CMP W8, 0x5E
	0x03E5D304 B.HI 0x3E5D328
	0x03E5D308 LDR X0, [X29]
	0x03E5D30C LDR W8, [X0 + 0xE0]
	0x03E5D310 CBNZ W8, 0x3E5D318
	0x03E5D314 BL 0x1C16DFC
	0x03E5D318 MOV X0, X21
	0x03E5D31C MOV W1, W25
	0x03E5D320 BL 0x3E5D5E4
	0x03E5D324 TBZ X0, 0x0, 0x3E5D3EC
	0x03E5D328 CBZ X19, 0x3E5D4DC
	0x03E5D32C LDR X8, [X19]
	0x03E5D330 LDR X9, [X8 + 0x3A8]
	0x03E5D334 LDR X2, [X8 + 0x3B0]
	0x03E5D338 MOV X0, X19
	0x03E5D33C MOV W1, W23
	0x03E5D340 BLR X9
	0x03E5D344 LDR W8, [X24 + 0x18]
	0x03E5D348 CMP X28, X8
	0x03E5D34C B.CS 0x3E5D4E0
	0x03E5D350 LDR X8, [X29]
	0x03E5D354 LDRB W25, [X27, X28, LSL]
	0x03E5D358 LDR W9, [X8 + 0xE0]
	0x03E5D35C TBZ X20, 0x0, 0x3E5D378
	0x03E5D360 CBNZ W9, 0x3E5D370
	0x03E5D364 MOV X0, X8
	0x03E5D368 BL 0x1C16DFC
	0x03E5D36C LDR X8, [X29]
	0x03E5D370 LDR X9, [X8 + 0xB8]
	0x03E5D374 B 0x3E5D390
	0x03E5D378 CBNZ W9, 0x3E5D388
	0x03E5D37C MOV X0, X8
	0x03E5D380 BL 0x1C16DFC
	0x03E5D384 LDR X8, [X29]
	0x03E5D388 LDR X9, [X8 + 0xB8]
	0x03E5D38C ADD X9, X9, 0x8
	0x03E5D390 LDR W10, [X8 + 0xE0]
	0x03E5D394 LDR X26, [X9]
	0x03E5D398 CBNZ W10, 0x3E5D3A4
	0x03E5D39C MOV X0, X8
	0x03E5D3A0 BL 0x1C16DFC
	0x03E5D3A4 ADD X2, X31, 0xC
	0x03E5D3A8 ADD X3, X31, 0x8
	0x03E5D3AC MOV W0, W25
	0x03E5D3B0 MOV X1, X26
	0x03E5D3B4 BL 0x3E5D058
	0x03E5D3B8 LDR X8, [X19]
	0x03E5D3BC LDRB W1, [X31 + 0xC]
	0x03E5D3C0 LDR X9, [X8 + 0x3A8]
	0x03E5D3C4 LDR X2, [X8 + 0x3B0]
	0x03E5D3C8 MOV X0, X19
	0x03E5D3CC BLR X9
	0x03E5D3D0 LDR X8, [X19]
	0x03E5D3D4 LDRB W1, [X31 + 0x8]
	0x03E5D3D8 LDR X9, [X8 + 0x3A8]
	0x03E5D3DC LDR X2, [X8 + 0x3B0]
	0x03E5D3E0 MOV X0, X19
	0x03E5D3E4 BLR X9
	0x03E5D3E8 B 0x3E5D414
	0x03E5D3EC LDR W8, [X24 + 0x18]
	0x03E5D3F0 CMP X28, X8
	0x03E5D3F4 B.CS 0x3E5D4E4
	0x03E5D3F8 CBZ X19, 0x3E5D4E8
	0x03E5D3FC LDR X8, [X19]
	0x03E5D400 LDRB W1, [X27, X28, LSL]
	0x03E5D404 LDR X9, [X8 + 0x3A8]
	0x03E5D408 LDR X2, [X8 + 0x3B0]
	0x03E5D40C MOV X0, X19
	0x03E5D410 BLR X9
	0x03E5D414 LDR W8, [X24 + 0x18]
	0x03E5D418 ADD X28, X28, 0x1
	0x03E5D41C CMP X28, W8, SXTW
	0x03E5D420 B.LT 0x3E5D2C0
	0x03E5D424 B 0x3E5D42C
	0x03E5D428 CBZ X19, 0x3E5D4F8
	0x03E5D42C LDR X8, [X19]
	0x03E5D430 LDR X1, [X8 + 0x400]
	0x03E5D434 LDR X9, [X8 + 0x3F8]
	0x03E5D438 MOV X0, X19
	0x03E5D43C BLR X9
	0x03E5D440 MOV X20, X0
	0x03E5D444 MOV X21, X31
	0x03E5D448 LDR X8, [X19]
	0x03E5D44C ADRP X10, 0x296000
	0x03E5D450 LDRH W9, [X8 + 0x12E]
	0x03E5D454 LDR X10, [X10 + 0xE00]
	0x03E5D458 LDR X1, [X10]
	0x03E5D45C CBZ X9, 0x3E5D480
	0x03E5D460 LDR X10, [X8 + 0xB0]
	0x03E5D464 ADD X10, X10, 0x8
	0x03E5D468 LDUR X11, [X10 - 0x8]
	0x03E5D46C CMP X11, X1
	0x03E5D470 B.EQ 0x3E5D490
	0x03E5D474 SUBS X9, X9, 0x1
	0x03E5D478 ADD X10, X10, 0x10
	0x03E5D47C B.NE 0x3E5D468
	0x03E5D480 MOV X0, X19
	0x03E5D484 MOV W2, W31
	0x03E5D488 BL 0x1C5C788
	0x03E5D48C B 0x3E5D49C
	0x03E5D490 LDRSW X9, [X10]
	0x03E5D494 ADD X8, X8, X9, 0x4, LSL
	0x03E5D498 ADD X0, X8, 0x138
	0x03E5D49C LDP X8, X1, [X0]
	0x03E5D4A0 MOV X0, X19
	0x03E5D4A4 BLR X8
	0x03E5D4A8 CBNZ X21, 0x3E5D4F0
	0x03E5D4AC MOV X0, X20
	0x03E5D4B0 LDP X20, X19, [X31 + 0x60]
	0x03E5D4B4 LDP X22, X21, [X31 + 0x50]
	0x03E5D4B8 LDP X24, X23, [X31 + 0x40]
	0x03E5D4BC LDP X26, X25, [X31 + 0x30]
	0x03E5D4C0 LDP X28, X27, [X31 + 0x20]
	0x03E5D4C4 LDP X29, X30, [X31 + 0x10]
	0x03E5D4C8 ADD X31, X31, 0x70
	0x03E5D4CC RET
	0x03E5D4D0 BL 0x1C16F28
	0x03E5D4D4 BL 0x1C16F20
	0x03E5D4D8 BL 0x1C16F20
	0x03E5D4DC BL 0x1C16F20
	0x03E5D4E0 BL 0x1C16F28
	0x03E5D4E4 BL 0x1C16F28
	0x03E5D4E8 BL 0x1C16F20
	0x03E5D4EC BL 0x1C16F20
	0x03E5D4F0 MOV X0, X21
	0x03E5D4F4 BL 0x1C16F18
	0x03E5D4F8 BL 0x1C16F20
	0x03E5D4FC B 0x3E5D534
	0x03E5D500 B 0x3E5D534
	0x03E5D504 B 0x3E5D534
	0x03E5D508 B 0x3E5D534
	0x03E5D50C B 0x3E5D534
	0x03E5D510 B 0x3E5D534
	0x03E5D514 B 0x3E5D534
	0x03E5D518 B 0x3E5D534
	0x03E5D51C B 0x3E5D534
	0x03E5D520 B 0x3E5D534
	0x03E5D524 B 0x3E5D534
	0x03E5D528 B 0x3E5D534
	0x03E5D52C B 0x3E5D534
	0x03E5D530 B 0x3E5D534
	0x03E5D534 MOV X20, X0
	0x03E5D538 CMP W1, 0x1
	0x03E5D53C B.NE 0x3E5D55C
	0x03E5D540 MOV X0, X20
	0x03E5D544 BL 0x3EB1AD0
	0x03E5D548 LDR X21, [X0]
	0x03E5D54C BL 0x3EB1AE0
	0x03E5D550 MOV X20, X31
	0x03E5D554 CBNZ X19, 0x3E5D448
	0x03E5D558 B 0x3E5D4A8
	0x03E5D55C MOV X21, X31
	0x03E5D560 B 0x3E5D568
	0x03E5D564 MOV X20, X0
	0x03E5D568 CBZ X19, 0x3E5D5CC
	0x03E5D56C LDR X8, [X19]
	0x03E5D570 ADRP X10, 0x296000
	0x03E5D574 LDRH W9, [X8 + 0x12E]
	0x03E5D578 LDR X10, [X10 + 0xE00]
	0x03E5D57C LDR X1, [X10]
	0x03E5D580 CBZ X9, 0x3E5D5A4
	0x03E5D584 LDR X10, [X8 + 0xB0]
	0x03E5D588 ADD X10, X10, 0x8
	0x03E5D58C LDUR X11, [X10 - 0x8]
	0x03E5D590 CMP X11, X1
	0x03E5D594 B.EQ 0x3E5D5B4
	0x03E5D598 SUBS X9, X9, 0x1
	0x03E5D59C ADD X10, X10, 0x10
	0x03E5D5A0 B.NE 0x3E5D58C
	0x03E5D5A4 MOV X0, X19
	0x03E5D5A8 MOV W2, W31
	0x03E5D5AC BL 0x1C5C788
	0x03E5D5B0 B 0x3E5D5C0
	0x03E5D5B4 LDRSW X9, [X10]
	0x03E5D5B8 ADD X8, X8, X9, 0x4, LSL
	0x03E5D5BC ADD X0, X8, 0x138
	0x03E5D5C0 LDP X8, X1, [X0]
	0x03E5D5C4 MOV X0, X19
	0x03E5D5C8 BLR X8
	0x03E5D5CC CBNZ X21, 0x3E5D5D8
	0x03E5D5D0 MOV X0, X20
	0x03E5D5D4 BL 0x1D2C690
	0x03E5D5D8 MOV X0, X21
	0x03E5D5DC BL 0x1C16F18
	0x03E5D5E0 BL 0x1990590
	0x03E5D5E4 STR X30, [X31 - 0x10]!
	0x03E5D5E8 CBZ X0, 0x3E5D648
	0x03E5D5EC LDR W8, [X0 + 0x18]
	0x03E5D5F0 CMP W8, 0x1
	0x03E5D5F4 B.LT 0x3E5D60C
	0x03E5D5F8 LDRB W9, [X0 + 0x20]
	0x03E5D5FC CMP W9, W1, UXTB
	0x03E5D600 B.NE 0x3E5D614
	0x03E5D604 MOVZ W0, 0x1
	0x03E5D608 B 0x3E5D640
	0x03E5D60C MOV W0, W31
	0x03E5D610 B 0x3E5D640
	0x03E5D614 MOVZ W10, 0x1
	0x03E5D618 MOV W9, W10
	0x03E5D61C CMP W8, W10
	0x03E5D620 B.EQ 0x3E5D638
	0x03E5D624 ADD X10, X0, W9, SXTW
	0x03E5D628 LDRB W10, [X10 + 0x20]
	0x03E5D62C CMP W10, W1, UXTB
	0x03E5D630 ADD W10, W9, 0x1
	0x03E5D634 B.NE 0x3E5D618
	0x03E5D638 CMP W9, W8
	0x03E5D63C CSET W0, LT
	0x03E5D640 LDR X30, [X31], #0x10
	0x03E5D644 RET
	0x03E5D648 BL 0x1C16F20
	0x03E5D64C STR X30, [X31 - 0x50]!
	0x03E5D650 STP X26, X25, [X31 + 0x10]
	0x03E5D654 STP X24, X23, [X31 + 0x20]
	0x03E5D658 STP X22, X21, [X31 + 0x30]
	0x03E5D65C STP X20, X19, [X31 + 0x40]
	0x03E5D660 ADRP X19, 0x58B000
	0x03E5D664 LDRB W8, [X19 + 0x8E4]
	0x03E5D668 MOV X20, X2
	0x03E5D66C MOV W21, W1
	0x03E5D670 MOV X22, X0
	0x03E5D674 TBNZ X8, 0x0, 0x3E5D6A4
	0x03E5D678 ADRP X0, 0x296000
	0x03E5D67C LDR X0, [X0 + 0xE00]
	0x03E5D680 BL 0x1C16CF4
	0x03E5D684 ADRP X0, 0x29E000
	0x03E5D688 LDR X0, [X0 + 0x558]
	0x03E5D68C BL 0x1C16CF4
	0x03E5D690 ADRP X0, 0x30E000
	0x03E5D694 LDR X0, [X0 + 0xD28]
	0x03E5D698 BL 0x1C16CF4
	0x03E5D69C MOVZ W8, 0x1
	0x03E5D6A0 STRB W8, [X19 + 0x8E4]
	0x03E5D6A4 CBZ X22, 0x3E5D87C
	0x03E5D6A8 ADRP X8, 0x29E000
	0x03E5D6AC LDR X8, [X8 + 0x558]
	0x03E5D6B0 ADRP X24, 0x296000
	0x03E5D6B4 LDR X0, [X8]
	0x03E5D6B8 LDR X24, [X24 + 0xE00]
	0x03E5D6BC BL 0x1C16F10
	0x03E5D6C0 LDR W1, [X22 + 0x18]
	0x03E5D6C4 MOV X2, X31
	0x03E5D6C8 MOV X19, X0
	0x03E5D6CC BL 0x32E23BC
	0x03E5D6D0 LDR W8, [X22 + 0x18]
	0x03E5D6D4 CMP W8, 0x1
	0x03E5D6D8 B.LT 0x3E5D7D0
	0x03E5D6DC ADRP X25, 0x30E000
	0x03E5D6E0 LDR X25, [X25 + 0xD28]
	0x03E5D6E4 MOV W23, W31
	0x03E5D6E8 LDR X0, [X25]
	0x03E5D6EC LDR W8, [X0 + 0xE0]
	0x03E5D6F0 CBNZ W8, 0x3E5D6F8
	0x03E5D6F4 BL 0x1C16DFC
	0x03E5D6F8 MOV X0, X22
	0x03E5D6FC MOV W1, W23
	0x03E5D700 MOV X2, X20
	0x03E5D704 BL 0x3E5D964
	0x03E5D708 TBZ X0, 0x0, 0x3E5D73C
	0x03E5D70C CBZ X20, 0x3E5D86C
	0x03E5D710 CBZ X19, 0x3E5D870
	0x03E5D714 LDR X8, [X19]
	0x03E5D718 LDR W26, [X20 + 0x18]
	0x03E5D71C LDR X9, [X8 + 0x3A8]
	0x03E5D720 LDR X2, [X8 + 0x3B0]
	0x03E5D724 MOVZ W1, 0x20
	0x03E5D728 MOV X0, X19
	0x03E5D72C BLR X9
	0x03E5D730 ADD W8, W23, W26
	0x03E5D734 SUB W23, W8, 0x1
	0x03E5D738 B 0x3E5D7BC
	0x03E5D73C LDR W8, [X22 + 0x18]
	0x03E5D740 CMP W23, W8
	0x03E5D744 B.CS 0x3E5D868
	0x03E5D748 ADD X9, X22, W23, SXTW
	0x03E5D74C LDRB W1, [X9 + 0x20]
	0x03E5D750 ADD W26, W23, 0x2
	0x03E5D754 CMP W26, W8
	0x03E5D758 B.GE 0x3E5D7A4
	0x03E5D75C CMP W1, W21, UXTB
	0x03E5D760 B.NE 0x3E5D7A4
	0x03E5D764 LDR X0, [X25]
	0x03E5D768 LDR W8, [X0 + 0xE0]
	0x03E5D76C CBNZ W8, 0x3E5D774
	0x03E5D770 BL 0x1C16DFC
	0x03E5D774 ADD W1, W23, 0x1
	0x03E5D778 MOV X0, X22
	0x03E5D77C BL 0x3E5CFAC
	0x03E5D780 MOV W1, W0
	0x03E5D784 CBZ X19, 0x3E5D878
	0x03E5D788 LDR X8, [X19]
	0x03E5D78C LDR X9, [X8 + 0x3A8]
	0x03E5D790 LDR X2, [X8 + 0x3B0]
	0x03E5D794 MOV X0, X19
	0x03E5D798 BLR X9
	0x03E5D79C MOV W23, W26
	0x03E5D7A0 B 0x3E5D7BC
	0x03E5D7A4 CBZ X19, 0x3E5D874
	0x03E5D7A8 LDR X8, [X19]
	0x03E5D7AC LDR X9, [X8 + 0x3A8]
	0x03E5D7B0 LDR X2, [X8 + 0x3B0]
	0x03E5D7B4 MOV X0, X19
	0x03E5D7B8 BLR X9
	0x03E5D7BC LDR W8, [X22 + 0x18]
	0x03E5D7C0 ADD W23, W23, 0x1
	0x03E5D7C4 CMP W23, W8
	0x03E5D7C8 B.LT 0x3E5D6E8
	0x03E5D7CC B 0x3E5D7D4
	0x03E5D7D0 CBZ X19, 0x3E5D888
	0x03E5D7D4 LDR X8, [X19]
	0x03E5D7D8 LDR X1, [X8 + 0x400]
	0x03E5D7DC LDR X9, [X8 + 0x3F8]
	0x03E5D7E0 MOV X0, X19
	0x03E5D7E4 BLR X9
	0x03E5D7E8 MOV X21, X0
	0x03E5D7EC MOV X20, X31
	0x03E5D7F0 LDR X8, [X19]
	0x03E5D7F4 LDR X1, [X24]
	0x03E5D7F8 LDRH W9, [X8 + 0x12E]
	0x03E5D7FC CBZ X9, 0x3E5D820
	0x03E5D800 LDR X10, [X8 + 0xB0]
	0x03E5D804 ADD X10, X10, 0x8
	0x03E5D808 LDUR X11, [X10 - 0x8]
	0x03E5D80C CMP X11, X1
	0x03E5D810 B.EQ 0x3E5D830
	0x03E5D814 SUBS X9, X9, 0x1
	0x03E5D818 ADD X10, X10, 0x10
	0x03E5D81C B.NE 0x3E5D808
	0x03E5D820 MOV X0, X19
	0x03E5D824 MOV W2, W31
	0x03E5D828 BL 0x1C5C788
	0x03E5D82C B 0x3E5D83C
	0x03E5D830 LDRSW X9, [X10]
	0x03E5D834 ADD X8, X8, X9, 0x4, LSL
	0x03E5D838 ADD X0, X8, 0x138
	0x03E5D83C LDP X8, X1, [X0]
	0x03E5D840 MOV X0, X19
	0x03E5D844 BLR X8
	0x03E5D848 CBNZ X20, 0x3E5D880
	0x03E5D84C MOV X0, X21
	0x03E5D850 LDP X20, X19, [X31 + 0x40]
	0x03E5D854 LDP X22, X21, [X31 + 0x30]
	0x03E5D858 LDP X24, X23, [X31 + 0x20]
	0x03E5D85C LDP X26, X25, [X31 + 0x10]
	0x03E5D860 LDR X30, [X31], #0x50
	0x03E5D864 RET
	0x03E5D868 BL 0x1C16F28
	0x03E5D86C BL 0x1C16F20
	0x03E5D870 BL 0x1C16F20
	0x03E5D874 BL 0x1C16F20
	0x03E5D878 BL 0x1C16F20
	0x03E5D87C BL 0x1C16F20
	0x03E5D880 MOV X0, X20
	0x03E5D884 BL 0x1C16F18
	0x03E5D888 BL 0x1C16F20
	0x03E5D88C B 0x3E5D8BC
	0x03E5D890 B 0x3E5D8BC
	0x03E5D894 B 0x3E5D8BC
	0x03E5D898 B 0x3E5D8BC
	0x03E5D89C B 0x3E5D8BC
	0x03E5D8A0 B 0x3E5D8BC
	0x03E5D8A4 B 0x3E5D8BC
	0x03E5D8A8 B 0x3E5D8BC
	0x03E5D8AC B 0x3E5D8BC
	0x03E5D8B0 B 0x3E5D8BC
	0x03E5D8B4 B 0x3E5D8BC
	0x03E5D8B8 B 0x3E5D8BC
	0x03E5D8BC MOV X21, X0
	0x03E5D8C0 CMP W1, 0x1
	0x03E5D8C4 B.NE 0x3E5D8E4
	0x03E5D8C8 MOV X0, X21
	0x03E5D8CC BL 0x3EB1AD0
	0x03E5D8D0 LDR X20, [X0]
	0x03E5D8D4 BL 0x3EB1AE0
	0x03E5D8D8 MOV X21, X31
	0x03E5D8DC CBNZ X19, 0x3E5D7F0
	0x03E5D8E0 B 0x3E5D848
	0x03E5D8E4 MOV X20, X31
	0x03E5D8E8 B 0x3E5D8F0
	0x03E5D8EC MOV X21, X0
	0x03E5D8F0 CBZ X19, 0x3E5D94C
	0x03E5D8F4 LDR X8, [X19]
	0x03E5D8F8 LDR X1, [X24]
	0x03E5D8FC LDRH W9, [X8 + 0x12E]
	0x03E5D900 CBZ X9, 0x3E5D924
	0x03E5D904 LDR X10, [X8 + 0xB0]
	0x03E5D908 ADD X10, X10, 0x8
	0x03E5D90C LDUR X11, [X10 - 0x8]
	0x03E5D910 CMP X11, X1
	0x03E5D914 B.EQ 0x3E5D934
	0x03E5D918 SUBS X9, X9, 0x1
	0x03E5D91C ADD X10, X10, 0x10
	0x03E5D920 B.NE 0x3E5D90C
	0x03E5D924 MOV X0, X19
	0x03E5D928 MOV W2, W31
	0x03E5D92C BL 0x1C5C788
	0x03E5D930 B 0x3E5D940
	0x03E5D934 LDRSW X9, [X10]
	0x03E5D938 ADD X8, X8, X9, 0x4, LSL
	0x03E5D93C ADD X0, X8, 0x138
	0x03E5D940 LDP X8, X1, [X0]
	0x03E5D944 MOV X0, X19
	0x03E5D948 BLR X8
	0x03E5D94C CBNZ X20, 0x3E5D958
	0x03E5D950 MOV X0, X21
	0x03E5D954 BL 0x1D2C690
	0x03E5D958 MOV X0, X20
	0x03E5D95C BL 0x1C16F18
	0x03E5D960 BL 0x1990590
	0x03E5D964 STR X30, [X31 - 0x10]!
	0x03E5D968 CBZ X0, 0x3E5D9F0
	0x03E5D96C CBZ X2, 0x3E5D9F0
	0x03E5D970 LDR W8, [X0 + 0x18]
	0x03E5D974 LDR W9, [X2 + 0x18]
	0x03E5D978 SUB W10, W8, W1
	0x03E5D97C CMP W10, W9
	0x03E5D980 B.GE 0x3E5D98C
	0x03E5D984 MOV W8, W31
	0x03E5D988 B 0x3E5D9E0
	0x03E5D98C SUBS W9, W9, 0x1
	0x03E5D990 B.LT 0x3E5D9DC
	0x03E5D994 SUBS W8, W8, W1
	0x03E5D998 MOV W10, W31
	0x03E5D99C CSEL W11, W31, W8, CC
	0x03E5D9A0 CMP W11, W10
	0x03E5D9A4 B.EQ 0x3E5D9EC
	0x03E5D9A8 ADD W8, W1, W10
	0x03E5D9AC ADD X12, X2, W10, SXTW
	0x03E5D9B0 ADD X8, X0, W8, SXTW
	0x03E5D9B4 LDRB W12, [X12 + 0x20]
	0x03E5D9B8 LDRB W13, [X8 + 0x20]
	0x03E5D9BC CMP W13, W12
	0x03E5D9C0 CSET W8, EQ
	0x03E5D9C4 CMP W9, W10
	0x03E5D9C8 B.EQ 0x3E5D9E0
	0x03E5D9CC CMP W13, W12
	0x03E5D9D0 ADD W10, W10, 0x1
	0x03E5D9D4 B.EQ 0x3E5D9A0
	0x03E5D9D8 B 0x3E5D9E0
	0x03E5D9DC MOVZ W8, 0x1
	0x03E5D9E0 MOV W0, W8
	0x03E5D9E4 LDR X30, [X31], #0x10
	0x03E5D9E8 RET
	0x03E5D9EC BL 0x1C16F28
	0x03E5D9F0 BL 0x1C16F20
	0x03E5D9F4 CMP W1, 0x1
	0x03E5D9F8 B.LT 0x3E5DA40
	0x03E5D9FC LDRB W8, [X0]
	0x03E5DA00 SUB W8, W8, 0x20
	0x03E5DA04 CMP W8, 0x5E
	0x03E5DA08 B.HI 0x3E5DA48
	0x03E5DA0C MOV W8, W1
	0x03E5DA10 MOVZ W10, 0x1
	0x03E5DA14 MOV X9, X10
	0x03E5DA18 CMP X8, X10
	0x03E5DA1C B.EQ 0x3E5DA34
	0x03E5DA20 LDRB W10, [X0, X9, LSL]
	0x03E5DA24 SUB W10, W10, 0x20
	0x03E5DA28 CMP W10, 0x5E
	0x03E5DA2C ADD X10, X9, 0x1
	0x03E5DA30 B.LS 0x3E5DA14
	0x03E5DA34 CMP X9, X8
	0x03E5DA38 CSET W0, CS
	0x03E5DA3C RET
	0x03E5DA40 MOVZ W0, 0x1
	0x03E5DA44 RET
	0x03E5DA48 MOV W0, W31
	0x03E5DA4C RET
	0x03E5DA50 STR X30, [X31 - 0x20]!
	0x03E5DA54 STP X20, X19, [X31 + 0x10]
	0x03E5DA58 ADRP X19, 0x58B000
	0x03E5DA5C ADRP X20, 0x2C3000
	0x03E5DA60 LDRB W8, [X19 + 0x8E6]
	0x03E5DA64 LDR X20, [X20 + 0xF8]
	0x03E5DA68 TBNZ X8, 0x0, 0x3E5DAD4
	0x03E5DA6C ADRP X0, 0x296000
	0x03E5DA70 LDR X0, [X0 + 0x618]
	0x03E5DA74 BL 0x1C16CF4
	0x03E5DA78 ADRP X0, 0x2C3000
	0x03E5DA7C LDR X0, [X0 + 0xF8]
	0x03E5DA80 BL 0x1C16CF4
	0x03E5DA84 ADRP X0, 0x30E000
	0x03E5DA88 LDR X0, [X0 + 0xD28]
	0x03E5DA8C BL 0x1C16CF4
	0x03E5DA90 ADRP X0, 0x30E000
	0x03E5DA94 LDR X0, [X0 + 0xD88]
	0x03E5DA98 BL 0x1C16CF4
	0x03E5DA9C ADRP X0, 0x30E000
	0x03E5DAA0 LDR X0, [X0 + 0xD90]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0x58D000
	014 Move X19, 0x2A0000
	015 Move W8, [X21+2268]
	016 Move X19, [X19+1368]
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {57}
	022 Move X0, 0x298000
	023 Move X0, [X0+3584]
	024 Call 0x1C17CF4
	025 Move X0, 0x310000
	026 Move X0, [X0+3400]
	027 Call 0x1C17CF4
	028 Move X0, 0x2C0000
	029 Move X0, [X0+2904]
	030 Call 0x1C17CF4
	031 Move X0, 0x310000
	032 Move X0, [X0+3408]
	033 Call 0x1C17CF4
	034 Move X0, 0x2A0000
	035 Move X0, [X0+1368]
	036 Call 0x1C17CF4
	037 Move X0, 0x298000
	038 Move X0, [X0+2760]
	039 Call 0x1C17CF4
	040 Move X0, 0x2C5000
	041 Move X0, [X0+248]
	042 Call 0x1C17CF4
	043 Move X0, 0x310000
	044 Move X0, [X0+3368]
	045 Call 0x1C17CF4
	046 Move X0, 0x310000
	047 Move X0, [X0+3416]
	048 Call 0x1C17CF4
	049 Move X0, 0x310000
	050 Move X0, [X0+3424]
	051 Call 0x1C17CF4
	052 Move X0, 0x310000
	053 Move X0, [X0+3432]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X21+2268], W8
	057 Move X27, 0x2C5000
	058 Move X28, 0x2C0000
	059 Move X27, [X27+248]
	060 Move X28, [X28+2904]
	061 Move X0, [X19]
	062 Move X29, 0x310000
	063 Move X24, 0x298000
	064 Move X29, [X29+3368]
	065 Move X24, [X24+3584]
	066 Call 0x1C17F10
	067 Move W1, 1024
	068 Move X2, X31
	069 Move X19, X0
	070 Call MemoryStream..ctor, X0, X1
	071 Move W9, [X20+56]
	072 Move X8, [X20+16]
	073 Compare W9, 0
	074 JumpIfEqual {506}
	075 Compare X8, 0
	076 JumpIfEqual {501}
	077 Move X26, 0x310000
	078 Move X26, [X26+3416]
	079 Move W21, W31
	080 Move X0, [X27]
	081 Move W9, [X8+24]
	082 Move W8, [X0+224]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Compare W8, 0
	085 JumpIfNotEqual {88}
	086 Call 0x1C17DFC
	087 Move X0, [X27]
	088 Move X8, [X0+184]
	089 Move X1, [X8+8]
	090 Compare X1, 0
	091 JumpIfEqual {727}
	092 Compare X19, 0
	093 JumpIfEqual {729}
	094 Move X8, [X19]
	095 Move W3, [X1+24]
	096 Move X9, [X8+904]
	097 Move X4, [X8+912]
	098 Move X0, X19
	099 Move W2, W31
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Move X8, [X27]
	102 Move X8, [X8+184]
	103 Move X1, [X8]
	104 Compare X1, 0
	105 JumpIfEqual {730}
	106 Move X8, [X19]
	107 Move W3, [X1+24]
	108 Move X9, [X8+904]
	109 Move X4, [X8+912]
	110 Move X0, X19
	111 Move W2, W31
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Move X1, [X20+48]
	114 Compare X1, 0
	115 JumpIfEqual {726}
	116 Move X8, [X19]
	117 Move W3, [X1+24]
	118 Move X9, [X8+904]
	119 Move X4, [X8+912]
	120 Move X0, X19
	121 Move W2, W31
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Move X8, [X27]
	124 Move X8, [X8+184]
	125 Move X1, [X8+8]
	126 Compare X1, 0
	127 JumpIfEqual {725}
	128 Move X8, [X19]
	129 Move W3, [X1+24]
	130 Move X9, [X8+904]
	131 Move X4, [X8+912]
	132 Move X0, X19
	133 Move W2, W31
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move X8, [X27]
	136 Move X8, [X8+184]
	137 Move X1, [X8+16]
	138 Compare X1, 0
	139 JumpIfEqual {723}
	140 Move X8, [X19]
	141 Move W3, [X1+24]
	142 Move X9, [X8+904]
	143 Move X4, [X8+912]
	144 Move X0, X19
	145 Move W2, W31
	146 NotImplemented "Instruction BLR not yet implemented."
	147 Move X0, X31
	148 Call Encoding.get_UTF8
	149 Move X22, X0
	150 Move X0, [X20+40]
	151 Compare X0, 0
	152 JumpIfEqual {728}
	153 Move X2, [X28]
	154 Move W1, W21
	155 Call List`1<Object>.get_Item, X0, X1
	156 Move X1, X0
	157 Compare X22, 0
	158 JumpIfEqual {722}
	159 Move X8, [X22]
	160 Move X9, [X8+616]
	161 Move X2, [X8+624]
	162 Move X0, X22
	163 NotImplemented "Instruction BLR not yet implemented."
	164 Move X1, X0
	165 Compare X1, 0
	166 JumpIfEqual {724}
	167 Move X8, [X19]
	168 Move W3, [X1+24]
	169 Move X9, [X8+904]
	170 Move X4, [X8+912]
	171 Move X0, X19
	172 Move W2, W31
	173 NotImplemented "Instruction BLR not yet implemented."
	174 Move X8, [X27]
	175 Move X8, [X8+184]
	176 Move X1, [X8+8]
	177 Compare X1, 0
	178 JumpIfEqual {737}
	179 Move X8, [X19]
	180 Move W3, [X1+24]
	181 Move X9, [X8+904]
	182 Move X4, [X8+912]
	183 Move X0, X19
	184 Move W2, W31
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Move X8, [X27]
	187 Move X8, [X8+184]
	188 Move X1, [X8+24]
	189 Compare X1, 0
	190 JumpIfEqual {736}
	191 Move X8, [X19]
	192 Move W3, [X1+24]
	193 Move X9, [X8+904]
	194 Move X4, [X8+912]
	195 Move X0, X19
	196 Move W2, W31
	197 NotImplemented "Instruction BLR not yet implemented."
	198 Move X0, X31
	199 Call Encoding.get_UTF8
	200 Compare X0, 0
	201 JumpIfEqual {738}
	202 Move X8, [X0]
	203 Move X9, [X8+456]
	204 Move X1, [X8+464]
	205 NotImplemented "Instruction BLR not yet implemented."
	206 Move X22, X0
	207 Move X0, [X20+24]
	208 Compare X0, 0
	209 JumpIfEqual {733}
	210 Move X2, [X28]
	211 Move W1, W21
	212 Call List`1<Object>.get_Item, X0, X1
	213 Move X23, X0
	214 Move X0, X31
	215 Call Encoding.get_UTF8
	216 Move X24, X0
	217 Move X0, [X29]
	218 Move W8, [X0+224]
	219 Compare W8, 0
	220 JumpIfNotEqual {222}
	221 Call 0x1C17DFC
	222 Move X0, X23
	223 Move X1, X24
	224 Call WWWTranscoder.SevenBitClean, X0, X1
	225 Move TEMP, X0
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfNotEqual {239}
	229 Compare X23, 0
	230 JumpIfEqual {767}
	231 Move X1, [X26]
	232 Move X0, X23
	233 Move X2, X31
	234 Call String.IndexOf, X0, X1
	235 Move TEMP, X0
	236 And TEMP, TEMP, -2147483648
	237 Compare TEMP, -2147483648
	238 JumpIfEqual {282}
	239 Move X8, 0x297000
	240 Move X8, [X8+2760]
	241 Move X0, [X8]
	242 Move W1, 5
	243 Call 0x1C17D6C
	244 Move X24, X0
	245 Compare X0, 0
	246 JumpIfEqual {747}
	247 Move W8, [X24+24]
	248 Compare W8, 0
	249 JumpIfEqual {746}
	250 Move X9, [X26]
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Move [X24+32], X9
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Move [X24+40], X22
	255 Move X8, 0x30F000
	256 Move X8, [X8+3424]
	257 Move X8, [X8]
	258 Move [X24+48], X8
	259 Move X0, X31
	260 Call Encoding.get_UTF8
	261 Move X25, X0
	262 Move X0, [X29]
	263 Move W8, [X0+224]
	264 Compare W8, 0
	265 JumpIfNotEqual {267}
	266 Call 0x1C17DFC
	267 Move X0, X23
	268 Move X1, X25
	269 Call WWWTranscoder.QPEncode, X0, X1
	270 Move W8, [X24+24]
	271 NotImplemented "Instruction CMP not yet implemented."
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Move [X24+56], X0
	274 Move X8, 0x30F000
	275 Move X8, [X8+3432]
	276 Move X8, [X8]
	277 Move [X24+64], X8
	278 Move X0, X24
	279 Move X1, X31
	280 Call String.Concat, X0
	281 Move X23, X0
	282 Move X0, X31
	283 Call Encoding.get_UTF8
	284 Compare X0, 0
	285 JumpIfEqual {732}
	286 Move X8, [X0]
	287 Move X9, [X8+616]
	288 Move X2, [X8+624]
	289 Move X1, X23
	290 NotImplemented "Instruction BLR not yet implemented."
	291 Move X1, X0
	292 Compare X1, 0
	293 JumpIfEqual {734}
	294 Move X8, [X19]
	295 Move W3, [X1+24]
	296 Move X9, [X8+904]
	297 Move X4, [X8+912]
	298 Move X0, X19
	299 Move W2, W31
	300 NotImplemented "Instruction BLR not yet implemented."
	301 Move X0, [X27]
	302 Move W8, [X0+224]
	303 Compare W8, 0
	304 JumpIfNotEqual {307}
	305 Call 0x1C17DFC
	306 Move X0, [X27]
	307 Move X8, [X0+184]
	308 Move X1, [X8+32]
	309 Compare X1, 0
	310 JumpIfEqual {731}
	311 Move X8, [X19]
	312 Move W3, [X1+24]
	313 Move X9, [X8+904]
	314 Move X4, [X8+912]
	315 Move X0, X19
	316 Move W2, W31
	317 NotImplemented "Instruction BLR not yet implemented."
	318 Move X0, [X20+32]
	319 Compare X0, 0
	320 JumpIfEqual {735}
	321 Move X2, [X28]
	322 Move W1, W21
	323 Call List`1<Object>.get_Item, X0, X1
	324 Compare X0, 0
	325 JumpIfEqual {450}
	326 Move X0, [X20+32]
	327 Compare X0, 0
	328 JumpIfEqual {749}
	329 Move X2, [X28]
	330 Move W1, W21
	331 Call List`1<Object>.get_Item, X0, X1
	332 Move X23, X0
	333 Move X0, X31
	334 Call Encoding.get_UTF8
	335 Move X24, X0
	336 Move X0, [X29]
	337 Move W8, [X0+224]
	338 Compare W8, 0
	339 JumpIfNotEqual {341}
	340 Call 0x1C17DFC
	341 Move X0, X23
	342 Move X1, X24
	343 Call WWWTranscoder.SevenBitClean, X0, X1
	344 Move TEMP, X0
	345 And TEMP, TEMP, 1
	346 Compare TEMP, 1
	347 JumpIfNotEqual {358}
	348 Compare X23, 0
	349 JumpIfEqual {770}
	350 Move X1, [X26]
	351 Move X0, X23
	352 Move X2, X31
	353 Call String.IndexOf, X0, X1
	354 Move TEMP, X0
	355 And TEMP, TEMP, -2147483648
	356 Compare TEMP, -2147483648
	357 JumpIfEqual {401}
	358 Move X8, 0x297000
	359 Move X8, [X8+2760]
	360 Move X0, [X8]
	361 Move W1, 5
	362 Call 0x1C17D6C
	363 Move X24, X0
	364 Compare X0, 0
	365 JumpIfEqual {763}
	366 Move W8, [X24+24]
	367 Compare W8, 0
	368 JumpIfEqual {765}
	369 Move X9, [X26]
	370 NotImplemented "Instruction CMP not yet implemented."
	371 Move [X24+32], X9
	372 NotImplemented "Instruction CMP not yet implemented."
	373 Move [X24+40], X22
	374 Move X8, 0x30F000
	375 Move X8, [X8+3424]
	376 Move X8, [X8]
	377 Move [X24+48], X8
	378 Move X0, X31
	379 Call Encoding.get_UTF8
	380 Move X22, X0
	381 Move X0, [X29]
	382 Move W8, [X0+224]
	383 Compare W8, 0
	384 JumpIfNotEqual {386}
	385 Call 0x1C17DFC
	386 Move X0, X23
	387 Move X1, X22
	388 Call WWWTranscoder.QPEncode, X0, X1
	389 Move W8, [X24+24]
	390 NotImplemented "Instruction CMP not yet implemented."
	391 NotImplemented "Instruction CMP not yet implemented."
	392 Move [X24+56], X0
	393 Move X8, 0x30F000
	394 Move X8, [X8+3432]
	395 Move X8, [X8]
	396 Move [X24+64], X8
	397 Move X0, X24
	398 Move X1, X31
	399 Call String.Concat, X0
	400 Move X23, X0
	401 Move X0, X31
	402 Call Encoding.get_UTF8
	403 Compare X0, 0
	404 JumpIfEqual {752}
	405 Move X8, [X0]
	406 Move X9, [X8+616]
	407 Move X2, [X8+624]
	408 Move X1, X23
	409 NotImplemented "Instruction BLR not yet implemented."
	410 Move X22, X0
	411 Move X0, [X27]
	412 Move W8, [X0+224]
	413 Compare W8, 0
	414 JumpIfNotEqual {417}
	415 Call 0x1C17DFC
	416 Move X0, [X27]
	417 Move X8, [X0+184]
	418 Move X1, [X8+40]
	419 Compare X1, 0
	420 JumpIfEqual {750}
	421 Move X8, [X19]
	422 Move W3, [X1+24]
	423 Move X9, [X8+904]
	424 Move X4, [X8+912]
	425 Move X0, X19
	426 Move W2, W31
	427 NotImplemented "Instruction BLR not yet implemented."
	428 Compare X22, 0
	429 JumpIfEqual {753}
	430 Move X8, [X19]
	431 Move W3, [X22+24]
	432 Move X9, [X8+904]
	433 Move X4, [X8+912]
	434 Move X0, X19
	435 Move X1, X22
	436 Move W2, W31
	437 NotImplemented "Instruction BLR not yet implemented."
	438 Move X8, [X27]
	439 Move X8, [X8+184]
	440 Move X1, [X8+32]
	441 Compare X1, 0
	442 JumpIfEqual {751}
	443 Move X8, [X19]
	444 Move W3, [X1+24]
	445 Move X9, [X8+904]
	446 Move X4, [X8+912]
	447 Move X0, X19
	448 Move W2, W31
	449 NotImplemented "Instruction BLR not yet implemented."
	450 Move X0, [X27]
	451 Move W8, [X0+224]
	452 Compare W8, 0
	453 JumpIfNotEqual {456}
	454 Call 0x1C17DFC
	455 Move X0, [X27]
	456 Move X8, [X0+184]
	457 Move X1, [X8+8]
	458 Compare X1, 0
	459 JumpIfEqual {741}
	460 Move X8, [X19]
	461 Move W3, [X1+24]
	462 Move X9, [X8+904]
	463 Move X4, [X8+912]
	464 Move X0, X19
	465 Move W2, W31
	466 NotImplemented "Instruction BLR not yet implemented."
	467 Move X8, [X27]
	468 Move X8, [X8+184]
	469 Move X1, [X8+8]
	470 Compare X1, 0
	471 JumpIfEqual {742}
	472 Move X8, [X19]
	473 Move W3, [X1+24]
	474 Move X9, [X8+904]
	475 Move X4, [X8+912]
	476 Move X0, X19
	477 Move W2, W31
	478 NotImplemented "Instruction BLR not yet implemented."
	479 Move X0, [X20+16]
	480 Compare X0, 0
	481 JumpIfEqual {740}
	482 Move X8, 0x30F000
	483 Move X8, [X8+3408]
	484 Move X2, [X8]
	485 Move W1, W21
	486 Call List`1<Object>.get_Item, X0, X1
	487 Move X1, X0
	488 Compare X1, 0
	489 JumpIfEqual {739}
	490 Move X8, [X19]
	491 Move W3, [X1+24]
	492 Move X9, [X8+904]
	493 Move X4, [X8+912]
	494 Move X0, X19
	495 Move W2, W31
	496 NotImplemented "Instruction BLR not yet implemented."
	497 Move X8, [X20+16]
	498 Add W21, W21, 1
	499 Compare X8, 0
	500 JumpIfNotEqual {80}
	501 Call 0x1C17F20
	502 Compare W8, 0
	503 JumpIfEqual {615}
	504 Move X24, 0x297000
	505 Move X24, [X24+3584]
	506 Compare X8, 0
	507 JumpIfEqual {611}
	508 Move W21, W31
	509 Move W8, [X8+24]
	510 NotImplemented "Instruction CMP not yet implemented."
	511 Move X0, X31
	512 Call Encoding.get_UTF8
	513 Move X22, X0
	514 Move X0, [X20+24]
	515 Compare X0, 0
	516 JumpIfEqual {757}
	517 Move X2, [X28]
	518 Move W1, W21
	519 Call List`1<Object>.get_Item, X0, X1
	520 Move X1, X0
	521 Compare X22, 0
	522 JumpIfEqual {759}
	523 Move X8, [X22]
	524 Move X9, [X8+616]
	525 Move X2, [X8+624]
	526 Move X0, X22
	527 NotImplemented "Instruction BLR not yet implemented."
	528 Move X22, X0
	529 Move X0, [X29]
	530 Move W8, [X0+224]
	531 Compare W8, 0
	532 JumpIfNotEqual {534}
	533 Call 0x1C17DFC
	534 Move X0, X22
	535 Call WWWTranscoder.DataEncode, X0
	536 Move X23, X0
	537 Move X0, [X20+16]
	538 Compare X0, 0
	539 JumpIfEqual {758}
	540 Move X8, 0x30F000
	541 Move X8, [X8+3408]
	542 Move X2, [X8]
	543 Move W1, W21
	544 Call List`1<Object>.get_Item, X0, X1
	545 Call WWWTranscoder.DataEncode, X0
	546 Move X22, X0
	547 Compare W21, 0
	548 JumpIfEqual {568}
	549 Move X0, [X27]
	550 Move W8, [X0+224]
	551 Compare W8, 0
	552 JumpIfNotEqual {555}
	553 Call 0x1C17DFC
	554 Move X0, [X27]
	555 Move X8, [X0+184]
	556 Move X1, [X8+48]
	557 Compare X1, 0
	558 JumpIfEqual {768}
	559 Compare X19, 0
	560 JumpIfEqual {769}
	561 Move X8, [X19]
	562 Move W3, [X1+24]
	563 Move X9, [X8+904]
	564 Move X4, [X8+912]
	565 Move X0, X19
	566 Move W2, W31
	567 NotImplemented "Instruction BLR not yet implemented."
	568 Compare X23, 0
	569 JumpIfEqual {755}
	570 Compare X19, 0
	571 JumpIfEqual {754}
	572 Move X8, [X19]
	573 Move W3, [X23+24]
	574 Move X9, [X8+904]
	575 Move X4, [X8+912]
	576 Move X0, X19
	577 Move X1, X23
	578 Move W2, W31
	579 NotImplemented "Instruction BLR not yet implemented."
	580 Move X0, [X27]
	581 Move W8, [X0+224]
	582 Compare W8, 0
	583 JumpIfNotEqual {586}
	584 Call 0x1C17DFC
	585 Move X0, [X27]
	586 Move X8, [X0+184]
	587 Move X1, [X8+56]
	588 Compare X1, 0
	589 JumpIfEqual {756}
	590 Move X8, [X19]
	591 Move W3, [X1+24]
	592 Move X9, [X8+904]
	593 Move X4, [X8+912]
	594 Move X0, X19
	595 Move W2, W31
	596 NotImplemented "Instruction BLR not yet implemented."
	597 Compare X22, 0
	598 JumpIfEqual {760}
	599 Move X8, [X19]
	600 Move W3, [X22+24]
	601 Move X9, [X8+904]
	602 Move X4, [X8+912]
	603 Move X0, X19
	604 Move X1, X22
	605 Move W2, W31
	606 NotImplemented "Instruction BLR not yet implemented."
	607 Move X8, [X20+16]
	608 Add W21, W21, 1
	609 Compare X8, 0
	610 JumpIfNotEqual {509}
	611 Call 0x1C17F20
	612 Compare X19, 0
	613 JumpIfNotEqual {678}
	614 Call 0x1C17F20
	615 Move X24, 0x297000
	616 Move X24, [X24+3584]
	617 Call 0x1C17DFC
	618 Move X0, [X27]
	619 Move X8, [X0+184]
	620 Move X1, [X8+8]
	621 Compare X1, 0
	622 JumpIfEqual {773}
	623 Compare X19, 0
	624 JumpIfEqual {774}
	625 Move X8, [X19]
	626 Move W3, [X1+24]
	627 Move X9, [X8+904]
	628 Move X4, [X8+912]
	629 Move X0, X19
	630 Move W2, W31
	631 NotImplemented "Instruction BLR not yet implemented."
	632 Move X8, [X27]
	633 Move X8, [X8+184]
	634 Move X1, [X8]
	635 Compare X1, 0
	636 JumpIfEqual {775}
	637 Move X8, [X19]
	638 Move W3, [X1+24]
	639 Move X9, [X8+904]
	640 Move X4, [X8+912]
	641 Move X0, X19
	642 Move W2, W31
	643 NotImplemented "Instruction BLR not yet implemented."
	644 Move X1, [X20+48]
	645 Compare X1, 0
	646 JumpIfEqual {776}
	647 Move X8, [X19]
	648 Move W3, [X1+24]
	649 Move X9, [X8+904]
	650 Move X4, [X8+912]
	651 Move X0, X19
	652 Move W2, W31
	653 NotImplemented "Instruction BLR not yet implemented."
	654 Move X8, [X27]
	655 Move X8, [X8+184]
	656 Move X1, [X8]
	657 Compare X1, 0
	658 JumpIfEqual {777}
	659 Move X8, [X19]
	660 Move W3, [X1+24]
	661 Move X9, [X8+904]
	662 Move X4, [X8+912]
	663 Move X0, X19
	664 Move W2, W31
	665 NotImplemented "Instruction BLR not yet implemented."
	666 Move X8, [X27]
	667 Move X8, [X8+184]
	668 Move X1, [X8+8]
	669 Compare X1, 0
	670 JumpIfEqual {778}
	671 Move X8, [X19]
	672 Move W3, [X1+24]
	673 Move X9, [X8+904]
	674 Move X4, [X8+912]
	675 Move X0, X19
	676 Move W2, W31
	677 NotImplemented "Instruction BLR not yet implemented."
	678 Move X8, [X19]
	679 Move X1, [X8+1024]
	680 Move X9, [X8+1016]
	681 Move X0, X19
	682 NotImplemented "Instruction BLR not yet implemented."
	683 Move X20, X0
	684 Move X21, X31
	685 Move X8, [X19]
	686 Move X1, [X24]
	687 NotImplemented "Instruction LDRH not yet implemented."
	688 Compare X9, 0
	689 JumpIfEqual {696}
	690 Move X10, [X8+176]
	691 Add X10, X10, 8
	692 NotImplemented "Instruction LDUR not yet implemented."
	693 NotImplemented "Instruction CMP not yet implemented."
	694 Subtract X9, X9, 1
	695 Add X10, X10, 16
	696 Move X0, X19
	697 Move W2, W31
	698 Call 0x1C5D788
	699 NotImplemented "Instruction LDRSW not yet implemented."
	700 Add X8, X8, X9
	701 Add X0, X8, 312
	702 Move X8, [X0]
	703 Move X1, [X0+8]
	704 Move X0, X19
	705 NotImplemented "Instruction BLR not yet implemented."
	706 Compare X21, 0
	707 JumpIfNotEqual {771}
	708 Move X0, X20
	709 Move X20, [X31+80]
	710 Move X19, [X31+88]
	711 Move X22, [X31+64]
	712 Move X21, [X31+72]
	713 Move X24, [X31+48]
	714 Move X23, [X31+56]
	715 Move X26, [X31+32]
	716 Move X25, [X31+40]
	717 Move X28, [X31+16]
	718 Move X27, [X31+24]
	719 Move X29, [X31+96]
	720 Move X30, [X31+104]
	721 Return X0
	722 Call 0x1C17F20
	723 Call 0x1C17F20
	724 Call 0x1C17F20
	725 Call 0x1C17F20
	726 Call 0x1C17F20
	727 Call 0x1C17F20
	728 Call 0x1C17F20
	729 Call 0x1C17F20
	730 Call 0x1C17F20
	731 Call 0x1C17F20
	732 Call 0x1C17F20
	733 Call 0x1C17F20
	734 Call 0x1C17F20
	735 Call 0x1C17F20
	736 Call 0x1C17F20
	737 Call 0x1C17F20
	738 Call 0x1C17F20
	739 Call 0x1C17F20
	740 Call 0x1C17F20
	741 Call 0x1C17F20
	742 Call 0x1C17F20
	743 Call 0x1C17F28
	744 Call 0x1C17F28
	745 Call 0x1C17F28
	746 Call 0x1C17F28
	747 Call 0x1C17F20
	748 Call 0x1C17F28
	749 Call 0x1C17F20
	750 Call 0x1C17F20
	751 Call 0x1C17F20
	752 Call 0x1C17F20
	753 Call 0x1C17F20
	754 Call 0x1C17F20
	755 Call 0x1C17F20
	756 Call 0x1C17F20
	757 Call 0x1C17F20
	758 Call 0x1C17F20
	759 Call 0x1C17F20
	760 Call 0x1C17F20
	761 Call 0x1C17F28
	762 Call 0x1C17F28
	763 Call 0x1C17F20
	764 Call 0x1C17F28
	765 Call 0x1C17F28
	766 Call 0x1C17F28
	767 Call 0x1C17F20
	768 Call 0x1C17F20
	769 Call 0x1C17F20
	770 Call 0x1C17F20
	771 Move X0, X21
	772 Call 0x1C17F18
	773 Call 0x1C17F20
	774 Call 0x1C17F20
	775 Call 0x1C17F20
	776 Call 0x1C17F20
	777 Call 0x1C17F20
	778 Call 0x1C17F20
	779 Move X20, X0
	780 Move X20, X0
	781 NotImplemented "Instruction CMP not yet implemented."
	782 Move X0, X20
	783 Call 0x3EB2AD0
	784 Move X21, [X0]
	785 Move X24, 0x297000
	786 Move X24, [X24+3584]
	787 Call 0x3EB2AE0
	788 Move X20, X31
	789 Compare X19, 0
	790 JumpIfNotEqual {685}
	791 Move X21, X31
	792 Move X20, X0
	793 Compare X19, 0
	794 JumpIfEqual {818}
	795 Move X8, [X19]
	796 Move X10, 0x297000
	797 NotImplemented "Instruction LDRH not yet implemented."
	798 Move X10, [X10+3584]
	799 Move X1, [X10]
	800 Compare X9, 0
	801 JumpIfEqual {808}
	802 Move X10, [X8+176]
	803 Add X10, X10, 8
	804 NotImplemented "Instruction LDUR not yet implemented."
	805 NotImplemented "Instruction CMP not yet implemented."
	806 Subtract X9, X9, 1
	807 Add X10, X10, 16
	808 Move X0, X19
	809 Move W2, W31
	810 Call 0x1C5D788
	811 NotImplemented "Instruction LDRSW not yet implemented."
	812 Add X8, X8, X9
	813 Add X0, X8, 312
	814 Move X8, [X0]
	815 Move X1, [X0+8]
	816 Move X0, X19
	817 NotImplemented "Instruction BLR not yet implemented."
	818 Compare X21, 0
	819 JumpIfNotEqual {822}
	820 Move X0, X20
	821 Call 0x1D2D690
	822 Move X0, X21
	823 Call 0x1C17F18
	824 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x03E5DD74 BLR X9
	0x03E5DD78 MOV X0, X19
	0x03E5DD7C LDP X20, X19, [X31 + 0x10]
	0x03E5DD80 MOV X1, X31
	0x03E5DD84 LDP X30, X21, [X31], #0x20
	0x03E5DD88 B 0x33CB4DC
	0x03E5DD8C CMP W1, 0x1
	0x03E5DD90 MOV X21, X0
	0x03E5DD94 B.NE 0x3E5DDC4
	0x03E5DD98 MOV X0, X21
	0x03E5DD9C BL 0x3EB1AD0
	0x03E5DDA0 LDR X20, [X0]
	0x03E5DDA4 BL 0x3EB1AE0
	0x03E5DDA8 MOV X0, X19
	0x03E5DDAC MOV X1, X31
	0x03E5DDB0 BL 0x33CB4DC
	0x03E5DDB4 CBNZ X20, 0x3E5DDCC
	0x03E5DDB8 LDP X20, X19, [X31 + 0x10]
	0x03E5DDBC LDP X30, X21, [X31], #0x20
	0x03E5DDC0 RET
	0x03E5DDC4 MOV X20, X31
	0x03E5DDC8 B 0x3E5DDD8
	0x03E5DDCC MOV X0, X20
	0x03E5DDD0 BL 0x1C16F18
	0x03E5DDD4 MOV X21, X0
	0x03E5DDD8 MOV X0, X19
	0x03E5DDDC MOV X1, X31
	0x03E5DDE0 BL 0x33CB4DC
	0x03E5DDE4 CBNZ X20, 0x3E5DDF0
	0x03E5DDE8 MOV X0, X21
	0x03E5DDEC BL 0x1D2C690
	0x03E5DDF0 MOV X0, X20
	0x03E5DDF4 BL 0x1C16F18
	0x03E5DDF8 BL 0x1990590
	0x03E5DDFC STR X30, [X31 - 0x20]!
	0x03E5DE00 STP X20, X19, [X31 + 0x10]
	0x03E5DE04 MOV X19, X0
	0x03E5DE08 LDR X0, [X0 + 0x10]
	0x03E5DE0C MOV X1, X31
	0x03E5DE10 MOV X2, X31
	0x03E5DE14 BL 0x33C5D2C
	0x03E5DE18 TBZ X0, 0x0, 0x3E5DE48
	0x03E5DE1C ADRP X20, 0x58B000
	0x03E5DE20 LDR X8, [X20 + 0x8F0]
	0x03E5DE24 CBNZ X8, 0x3E5DE3C
	0x03E5DE28 ADRP X0, 0xFFFFFFFFFCC96000
	0x03E5DE2C ADD X0, X0, 0xE32
	0x03E5DE30 BL 0x1C16CB8
	0x03E5DE34 MOV X8, X0
	0x03E5DE38 STR X0, [X20 + 0x8F0]
	0x03E5DE3C MOV X0, X19
	0x03E5DE40 BLR X8
	0x03E5DE44 STR X31, [X19 + 0x10]
	0x03E5DE48 LDP X20, X19, [X31 + 0x10]
	0x03E5DE4C LDR X30, [X31], #0x20
	0x03E5DE50 RET
	0x03E5DE54 LDR X8, [X0]
	0x03E5DE58 LDP X2, X1, [X8 + 0x1A8]
	0x03E5DE5C BR X2
	0x03E5DE60 LDR X8, [X0]
	0x03E5DE64 LDP X2, X1, [X8 + 0x1B8]
	0x03E5DE68 BR X2
	0x03E5DE6C MOV X0, X31
	0x03E5DE70 MOV X1, X31
	0x03E5DE74 RET
	0x03E5DE78 B 0x3E5DE7C
	0x03E5DE7C SUB X31, X31, 0x30
	0x03E5DE80 STR X30, [X31 + 0x10]
	0x03E5DE84 STP X20, X19, [X31 + 0x20]
	0x03E5DE88 ADRP X20, 0x58B000
	0x03E5DE8C LDRB W8, [X20 + 0x910]
	0x03E5DE90 MOV X19, X0
	0x03E5DE94 TBNZ X8, 0x0, 0x3E5DEB8
	0x03E5DE98 ADRP X0, 0x30E000
	0x03E5DE9C LDR X0, [X0 + 0xD98]
	0x03E5DEA0 BL 0x1C16CF4
	0x03E5DEA4 ADRP X0, 0x2EC000
	0x03E5DEA8 LDR X0, [X0 + 0x6A0]
	0x03E5DEAC BL 0x1C16CF4
	0x03E5DEB0 MOVZ W8, 0x1
	0x03E5DEB4 STRB W8, [X20 + 0x910]
	0x03E5DEB8 STP X31, X31, [X31]
	0x03E5DEBC CBZ X19, 0x3E5DEFC
	0x03E5DEC0 LDR X8, [X19]
	0x03E5DEC4 MOV X0, X19
	0x03E5DEC8 LDP X9, X1, [X8 + 0x198]
	0x03E5DECC BLR X9
	0x03E5DED0 STP X0, X1, [X31]
	0x03E5DED4 CBZ X0, 0x3E5DEEC
	0x03E5DED8 ADRP X8, 0x30E000
	0x03E5DEDC LDR X8, [X8 + 0xD98]
	0x03E5DEE0 ADD X0, X31, 0x0
	0x03E5DEE4 LDR X1, [X8]
	0x03E5DEE8 BL 0x23CA010
	0x03E5DEEC LDP X20, X19, [X31 + 0x20]
	0x03E5DEF0 LDR X30, [X31 + 0x10]
	0x03E5DEF4 ADD X31, X31, 0x30
	0x03E5DEF8 RET
	0x03E5DEFC BL 0x1C16F20
	0x03E5DF00 STP X30, X21, [X31 - 0x20]!
	0x03E5DF04 STP X20, X19, [X31 + 0x10]
	0x03E5DF08 ADRP X20, 0x58B000
	0x03E5DF0C LDRB W8, [X20 + 0x8F8]
	0x03E5DF10 MOV X19, X0
	0x03E5DF14 TBNZ X8, 0x0, 0x3E5DF44
	0x03E5DF18 ADRP X0, 0x30E000
	0x03E5DF1C LDR X0, [X0 + 0xDA0]
	0x03E5DF20 BL 0x1C16CF4
	0x03E5DF24 ADRP X0, 0x2EC000
	0x03E5DF28 LDR X0, [X0 + 0x6A0]
	0x03E5DF2C BL 0x1C16CF4
	0x03E5DF30 ADRP X0, 0x296000
	0x03E5DF34 LDR X0, [X0 + 0x988]
	0x03E5DF38 BL 0x1C16CF4
	0x03E5DF3C MOVZ W8, 0x1
	0x03E5DF40 STRB W8, [X20 + 0x8F8]
	0x03E5DF44 LDR X8, [X19]
	0x03E5DF48 MOV X0, X19
	0x03E5DF4C LDP X9, X1, [X8 + 0x198]
	0x03E5DF50 BLR X9
	0x03E5DF54 CBZ X0, 0x3E5DFA8
	0x03E5DF58 MOV X20, X1
	0x03E5DF5C CMP W20, 0x1
	0x03E5DF60 B.LT 0x3E5DFA8
	0x03E5DF64 ADRP X8, 0x30E000
	0x03E5DF68 LDR X8, [X8 + 0xDA0]
	0x03E5DF6C MOV X1, X20
	0x03E5DF70 LDR X2, [X8]
	0x03E5DF74 BL 0x22226B8
	0x03E5DF78 MOV X21, X0
	0x03E5DF7C MOV X0, X19
	0x03E5DF80 BL 0x3E5DFC0
	0x03E5DF84 MOV W3, W20
	0x03E5DF88 LDP X20, X19, [X31 + 0x10]
	0x03E5DF8C MOV X4, X0
	0x03E5DF90 MOV X0, X31
	0x03E5DF94 MOV X1, X21
	0x03E5DF98 MOV W2, W31
	0x03E5DF9C MOV X5, X31
	0x03E5DFA0 LDP X30, X21, [X31], #0x20
	0x03E5DFA4 B 0x322EB00
	0x03E5DFA8 ADRP X8, 0x296000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x58C000
	004 Move W8, [X19+2269]
	005 Move TEMP, X8
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfEqual {38}
	009 Move X0, 0x2C4000
	010 Move X0, [X0+248]
	011 Call 0x1C17CF4
	012 Move X0, 0x2C4000
	013 Move X0, [X0+4024]
	014 Call 0x1C17CF4
	015 Move X0, 0x30F000
	016 Move X0, [X0+3440]
	017 Call 0x1C17CF4
	018 Move X0, 0x2D5000
	019 Move X0, [X0+1056]
	020 Call 0x1C17CF4
	021 Move X0, 0x2C2000
	022 Move X0, [X0+1400]
	023 Call 0x1C17CF4
	024 Move X0, 0x2A0000
	025 Move X0, [X0+1824]
	026 Call 0x1C17CF4
	027 Move X0, 0x30F000
	028 Move X0, [X0+3448]
	029 Call 0x1C17CF4
	030 Move X0, 0x2A2000
	031 Move X0, [X0+3288]
	032 Call 0x1C17CF4
	033 Move X0, 0x30F000
	034 Move X0, [X0+3456]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X19+2269], W8
	038 Move X0, X31
	039 Call Encoding.get_ASCII
	040 Compare X0, 0
	041 JumpIfEqual {155}
	042 Move X9, 0x2C2000
	043 Move X8, [X0]
	044 Move X9, [X9+1400]
	045 Move X19, 0x2C4000
	046 Move X2, [X8+624]
	047 Move X1, [X9]
	048 Move X9, [X8+616]
	049 Move X19, [X19+248]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X8, [X19]
	052 Move X8, [X8+184]
	053 Move [X8], X0
	054 Move X0, X31
	055 Call Encoding.get_ASCII
	056 Compare X0, 0
	057 JumpIfEqual {155}
	058 Move X9, 0x2D5000
	059 Move X8, [X0]
	060 Move X9, [X9+1056]
	061 Move X2, [X8+624]
	062 Move X1, [X9]
	063 Move X9, [X8+616]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X8, [X19]
	066 Move X8, [X8+184]
	067 Move [X8+8], X0
	068 Move X0, X31
	069 Call Encoding.get_ASCII
	070 Compare X0, 0
	071 JumpIfEqual {155}
	072 Move X9, 0x30F000
	073 Move X8, [X0]
	074 Move X9, [X9+3440]
	075 Move X2, [X8+624]
	076 Move X1, [X9]
	077 Move X9, [X8+616]
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move X8, [X19]
	080 Move X8, [X8+184]
	081 Move [X8+16], X0
	082 Move X0, X31
	083 Call Encoding.get_ASCII
	084 Compare X0, 0
	085 JumpIfEqual {155}
	086 Move X9, 0x30F000
	087 Move X8, [X0]
	088 Move X9, [X9+3448]
	089 Move X2, [X8+624]
	090 Move X1, [X9]
	091 Move X9, [X8+616]
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move X8, [X19]
	094 Move X8, [X8+184]
	095 Move [X8+24], X0
	096 Move X0, X31
	097 Call Encoding.get_ASCII
	098 Compare X0, 0
	099 JumpIfEqual {155}
	100 Move X9, 0x2A2000
	101 Move X8, [X0]
	102 Move X9, [X9+3288]
	103 Move X2, [X8+624]
	104 Move X1, [X9]
	105 Move X9, [X8+616]
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move X8, [X19]
	108 Move X8, [X8+184]
	109 Move [X8+32], X0
	110 Move X0, X31
	111 Call Encoding.get_ASCII
	112 Compare X0, 0
	113 JumpIfEqual {155}
	114 Move X9, 0x30F000
	115 Move X8, [X0]
	116 Move X9, [X9+3456]
	117 Move X2, [X8+624]
	118 Move X1, [X9]
	119 Move X9, [X8+616]
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move X8, [X19]
	122 Move X8, [X8+184]
	123 Move [X8+40], X0
	124 Move X0, X31
	125 Call Encoding.get_ASCII
	126 Compare X0, 0
	127 JumpIfEqual {155}
	128 Move X9, 0x2A0000
	129 Move X8, [X0]
	130 Move X9, [X9+1824]
	131 Move X2, [X8+624]
	132 Move X1, [X9]
	133 Move X9, [X8+616]
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move X8, [X19]
	136 Move X8, [X8+184]
	137 Move [X8+48], X0
	138 Move X0, X31
	139 Call Encoding.get_ASCII
	140 Compare X0, 0
	141 JumpIfEqual {155}
	142 Move X9, 0x2C4000
	143 Move X8, [X0]
	144 Move X9, [X9+4024]
	145 Move X2, [X8+624]
	146 Move X1, [X9]
	147 Move X9, [X8+616]
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move X8, [X19]
	150 Move X8, [X8+184]
	151 Move [X8+56], X0
	152 Move X30, [X31+16]
	153 Move X19, [X31+24]
	154 Return 
	155 Call 0x1C17F20

