Type: System.Dynamic.Utils.CacheDict`2

Method: System.Void .ctor(System.Int32 size)

Disassembly:
	0x028F00BC BL 0x1C16CF4
	0x028F00C0 ADRP X0, 0x1803000
	0x028F00C4 LDR X0, [X0 + 0x598]
	0x028F00C8 BL 0x1C16CF4
	0x028F00CC MOVZ W8, 0x1
	0x028F00D0 STRB W8, [X23 + 0xD53]
	0x028F00D4 ADRP X24, 0x1803000
	0x028F00D8 LDR X24, [X24 + 0x598]
	0x028F00DC STP X31, X31, [X31 + 0x40]
	0x028F00E0 STR X31, [X31 + 0x50]
	0x028F00E4 STP X31, X31, [X31 + 0x20]
	0x028F00E8 STR X31, [X31 + 0x30]
	0x028F00EC TBZ X22, 0x0, 0x28F0494
	0x028F00F0 LDR X8, [X19 + 0x20]
	0x028F00F4 LDR X8, [X8 + 0xC0]
	0x028F00F8 LDR X0, [X8 + 0x20]
	0x028F00FC LDRB W8, [X0 + 0x135]
	0x028F0100 TBNZ X8, 0x0, 0x28F0108
	0x028F0104 BL 0x1C5C684
	0x028F0108 LDR W8, [X0 + 0xE0]
	0x028F010C CBNZ W8, 0x28F0114
	0x028F0110 BL 0x1C16DFC
	0x028F0114 LDR X8, [X19 + 0x20]
	0x028F0118 LDR X8, [X8 + 0xC0]
	0x028F011C LDR X0, [X8 + 0x20]
	0x028F0120 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W21, W1
	006 Move X1, X31
	007 Move X20, X2
	008 Move X19, X0
	009 Call Object..ctor, X0
	010 Move X8, [X20+32]
	011 Subtract W9, W21, 1
	012 Move W9, W9
	013 Move W9, W9
	014 Move X8, [X8+192]
	015 Move W9, W9
	016 Move W9, W9
	017 Move W20, W9
	018 Move [X19+16], W20
	019 Move X0, [X8+24]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Add W1, W20, 1
	027 Call 0x1C17D6C
	028 Move [X19+24], X0
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 

Method: System.Int32 AlignSize(System.Int32 size)

Disassembly:
	0x028F0124 TBNZ X8, 0x0, 0x28F012C
	0x028F0128 BL 0x1C5C684
	0x028F012C LDR X8, [X0 + 0xB8]
	0x028F0130 LDR X0, [X8]
	0x028F0134 CBZ X0, 0x28F088C
	0x028F0138 LDR X8, [X19 + 0x20]
	0x028F013C LDR X8, [X8 + 0xC0]
	0x028F0140 LDR X1, [X8 + 0x98]

ISIL:
	001 Subtract W8, W0, 1
	002 Move W8, W8
	003 Move W8, W8
	004 Move W8, W8
	005 Move W8, W8
	006 Move W8, W8
	007 Add W0, W8, 1
	008 Return X0

