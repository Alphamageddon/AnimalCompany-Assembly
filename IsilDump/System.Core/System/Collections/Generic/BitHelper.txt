Type: System.Collections.Generic.BitHelper

Method: System.Void .ctor(System.Int32* bitArrayPtr, System.Int32 length)

Disassembly:
	0x035E16A4 LDR X9, [X8 + 0x378]
	0x035E16A8 LDR X2, [X8 + 0x380]
	0x035E16AC BLR X9
	0x035E16B0 CBZ X0, 0x35E17CC
	0x035E16B4 ADRP X8, 0xB58000
	0x035E16B8 LDR X8, [X8 + 0x1E0]
	0x035E16BC MOV X2, X31
	0x035E16C0 LDR X1, [X8]
	0x035E16C4 BL 0x322C2F0
	0x035E16C8 TBNZ X0, 0x1F, 0x35E175C
	0x035E16CC MOVZ W8, 0x1
	0x035E16D0 B 0x35E18CC
	0x035E16D4 MOV X0, X19
	0x035E16D8 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move W19, W2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move [X21+24], X20
	011 Move [X21+16], W19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move W8, 1
	015 Move [X21+40], W8
	016 Move X30, [X31+32]
	017 Move X21, [X31+40]
	018 Return 

Method: System.Void .ctor(System.Int32[] bitArray, System.Int32 length)

Disassembly:
	0x035E16DC BL 0x31E7CC4
	0x035E16E0 CMP W0, 0x1
	0x035E16E4 B.LT 0x35E18C8
	0x035E16E8 MOV X0, X19
	0x035E16EC MOV W1, W31
	0x035E16F0 MOV X2, X31
	0x035E16F4 BL 0x31E8704
	0x035E16F8 CBZ X0, 0x35E17D4
	0x035E16FC LDRB W8, [X0 + 0x10]
	0x035E1700 CMP W8, 0x6
	0x035E1704 B.NE 0x35E18C8
	0x035E1708 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move W19, W2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move [X21+32], X20
	011 Move [X21+16], W19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: System.Void MarkBit(System.Int32 bitPosition)

Disassembly:
	0x035E170C MOV W1, W31
	0x035E1710 MOV X2, X31
	0x035E1714 BL 0x31E8704
	0x035E1718 ADRP X20, 0xB58000
	0x035E171C LDR X20, [X20 + 0x1B0]
	0x035E1720 MOV X19, X0
	0x035E1724 LDR X0, [X20]
	0x035E1728 LDR W8, [X0 + 0xE0]
	0x035E172C CBNZ W8, 0x35E1734
	0x035E1730 BL 0x1C16DFC
	0x035E1734 CBZ X19, 0x35E17E0
	0x035E1738 LDR X8, [X20]
	0x035E173C LDR X8, [X8 + 0xB8]
	0x035E1740 LDR X1, [X8]
	0x035E1744 MOV X0, X19
	0x035E1748 MOV X2, X31
	0x035E174C BL 0x31E7EC0
	0x035E1750 TBZ X0, 0x0, 0x35E18C8
	0x035E1754 MOVZ W8, 0x5
	0x035E1758 B 0x35E18CC
	0x035E175C ADRP X8, 0xB58000
	0x035E1760 LDR X8, [X8 + 0x1D8]
	0x035E1764 LDR X0, [X8]
	0x035E1768 BL 0x1C16F10
	0x035E176C MOV X1, X20
	0x035E1770 MOV X2, X31
	0x035E1774 BL 0x3203FF8
	0x035E1778 MOVZ W8, 0x6
	0x035E177C B 0x35E18CC
	0x035E1780 ADRP X0, 0xB1A000
	0x035E1784 LDR X0, [X0 + 0x578]

ISIL:
	001 Move [X31-16], X30
	002 Add W8, W1, 31
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSEL not yet implemented."
	005 Add W31, W1, 31
	006 Move W9, [X0+16]
	007 NotImplemented "Instruction SBFM not yet implemented."
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W9, [X0+40]
	010 Compare W9, 0
	011 JumpIfEqual {14}
	012 Move X9, [X0+24]
	013 Add X8, X9, W8
	014 Move X9, [X0+32]
	015 Compare X9, 0
	016 JumpIfEqual {28}
	017 Move W10, [X9+24]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Add X8, X9, W8
	020 Add X8, X8, 32
	021 Move W9, [X8]
	022 Move W10, 1
	023 NotImplemented "Instruction LSLV not yet implemented."
	024 Or W9, W9, W10
	025 Move [X8], W9
	026 Move X30, [X31+16]
	027 Return 
	028 Call 0x1C17F20
	029 Call 0x1C17F28

Method: System.Boolean IsMarked(System.Int32 bitPosition)

Disassembly:
	0x035E1788 BL 0x1C16D08
	0x035E178C BL 0x1C16F10
	0x035E1790 MOV X19, X0
	0x035E1794 ADRP X0, 0xB58000
	0x035E1798 LDR X0, [X0 + 0x1E8]
	0x035E179C BL 0x1C16D08
	0x035E17A0 MOV X1, X0
	0x035E17A4 MOV X0, X19
	0x035E17A8 MOV X2, X31
	0x035E17AC BL 0x3314A68
	0x035E17B0 ADRP X0, 0xB58000
	0x035E17B4 LDR X0, [X0 + 0x1F0]
	0x035E17B8 BL 0x1C16D08
	0x035E17BC MOV X1, X0
	0x035E17C0 MOV X0, X19
	0x035E17C4 BL 0x1C16DEC
	0x035E17C8 BL 0x1C16F28
	0x035E17CC BL 0x1C16F20
	0x035E17D0 BL 0x1C16F20
	0x035E17D4 BL 0x1C16F20
	0x035E17D8 BL 0x1C16F20
	0x035E17DC BL 0x1C16F20
	0x035E17E0 BL 0x1C16F20
	0x035E17E4 BL 0x1C16F20
	0x035E17E8 BL 0x1C16F20
	0x035E17EC BL 0x1C16F20
	0x035E17F0 BL 0x1C16F20
	0x035E17F4 B 0x35E1890
	0x035E17F8 B 0x35E1890
	0x035E17FC B 0x35E1890
	0x035E1800 B 0x35E1890
	0x035E1804 B 0x35E1890
	0x035E1808 B 0x35E1890

ISIL:
	001 Move [X31-16], X30
	002 Add W8, W1, 31
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSEL not yet implemented."
	005 Add W31, W1, 31
	006 Move W8, W31
	007 Move W10, [X0+16]
	008 NotImplemented "Instruction SBFM not yet implemented."
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W8, [X0+40]
	011 Compare W8, 0
	012 JumpIfEqual {15}
	013 Move X8, [X0+24]
	014 Add X8, X8, W9
	015 Move X8, [X0+32]
	016 Compare X8, 0
	017 JumpIfEqual {30}
	018 Move W10, [X8+24]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Add X8, X8, W9
	021 Add X8, X8, 32
	022 Move W8, [X8]
	023 Move W9, 1
	024 NotImplemented "Instruction LSLV not yet implemented."
	025 And W31, W8, W9
	026 NotImplemented "Instruction CSET not yet implemented."
	027 Move W0, W8
	028 Move X30, [X31+16]
	029 Return X0
	030 Call 0x1C17F20
	031 Call 0x1C17F28

Method: System.Int32 ToIntArrayLength(System.Int32 n)

Disassembly:
	0x035E180C B 0x35E1890
	0x035E1810 CMP W1, 0x1
	0x035E1814 MOV X19, X0
	0x035E1818 B.NE 0x35E1904
	0x035E181C MOV X0, X19
	0x035E1820 BL 0x3EB1AD0
	0x035E1824 MOV X19, X0
	0x035E1828 ADRP X0, 0xB18000
	0x035E182C LDR X0, [X0 + 0xCC0]
	0x035E1830 BL 0x1C16D08

ISIL:
	001 Subtract W8, W0, 1
	002 Add W9, W0, 30
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSEL not yet implemented."
	005 NotImplemented "Instruction SBFM not yet implemented."
	006 Add W0, W8, 1
	007 Return X0
	008 Move W0, W31
	009 Return X0

