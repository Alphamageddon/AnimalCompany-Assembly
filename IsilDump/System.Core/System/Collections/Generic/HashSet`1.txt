Type: System.Collections.Generic.HashSet`1

Method: System.Void .ctor()

Disassembly:
	0x02D5A408 BL 0x1C16DFC
	0x02D5A40C MOV X0, X22
	0x02D5A410 MOV X1, X31
	0x02D5A414 BL 0x338C698
	0x02D5A418 CBZ X21, 0x2D5A500
	0x02D5A41C ADRP X8, 0x13C4000
	0x02D5A420 LDR X8, [X8 + 0xF08]
	0x02D5A424 MOV X2, X0
	0x02D5A428 MOV X0, X21
	0x02D5A42C MOV X3, X31
	0x02D5A430 LDR X1, [X8]
	0x02D5A434 BL 0x32A9678
	0x02D5A438 LDR X8, [X19 + 0x20]
	0x02D5A43C MOV X23, X0
	0x02D5A440 LDR X8, [X8 + 0xC0]
	0x02D5A444 LDR X22, [X8 + 0xC0]
	0x02D5A448 LDRB W8, [X22 + 0x135]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X20, X0
	006 Move X19, X1
	007 Move X8, [X8+192]
	008 Move X8, [X8]
	009 Move X0, X8
	010 Call 0x2D6436C
	011 Move X8, [X19+32]
	012 Move X1, X0
	013 Move X0, X20
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X8, [X8+192]
	017 Move X2, [X8+24]
	018 Move X30, [X31+32]

Method: System.Void .ctor(System.Collections.Generic.IEqualityComparer`1<T> comparer)

Disassembly:
	0x02D5A44C TBNZ X8, 0x0, 0x2D5A45C
	0x02D5A450 MOV X0, X22
	0x02D5A454 BL 0x1C5C684
	0x02D5A458 MOV X22, X0
	0x02D5A45C CBZ X23, 0x2D5A510
	0x02D5A460 MOV X0, X23
	0x02D5A464 MOV X1, X22
	0x02D5A468 BL 0x1C16E00
	0x02D5A46C CBZ X0, 0x2D5A54C
	0x02D5A470 LDR X8, [X0 + 0x18]
	0x02D5A474 MOV X21, X0
	0x02D5A478 CMP W8, 0x1
	0x02D5A47C B.LT 0x2D5A4C4
	0x02D5A480 MOV X22, X31
	0x02D5A484 AND X8, X8, 0x0
	0x02D5A488 ADD X23, X21, 0x20
	0x02D5A48C CMP X22, W8, UXTW
	0x02D5A490 B.CS 0x2D5A4FC
	0x02D5A494 LDR X8, [X19 + 0x20]
	0x02D5A498 LDRH W1, [X23, X22, LSL #1]
	0x02D5A49C MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X21, X2
	008 Move X19, X0
	009 Call Object..ctor, X0
	010 Compare X20, 0
	011 JumpIfNotEqual {17}
	012 Move X8, [X21+32]
	013 Move X8, [X8+192]
	014 Move X0, [X8]
	015 Call 0x2D6436C
	016 Move X20, X0
	017 Move TEMP, 0
	018 Not TEMP
	019 Move W8, TEMP
	020 Move [X19+48], X20
	021 Move [X19+32], X31
	022 Move [X19+40], W8
	023 Move [X19+56], W31
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 Return 

Method: System.Void .ctor(System.Int32 capacity)

Disassembly:
	0x02D5A4A0 LDR X8, [X8 + 0xC0]
	0x02D5A4A4 LDR X2, [X8 + 0xA8]
	0x02D5A4A8 BL 0x2D5C318
	0x02D5A4AC LDR W8, [X21 + 0x18]
	0x02D5A4B0 ADD X22, X22, 0x1
	0x02D5A4B4 CMP X22, W8, SXTW
	0x02D5A4B8 B.LT 0x2D5A48C
	0x02D5A4BC B 0x2D5A4C4
	0x02D5A4C0 STR X31, [X20 + 0x10]
	0x02D5A4C4 LDR X0, [X20 + 0x40]
	0x02D5A4C8 CBZ X0, 0x2D5A500
	0x02D5A4CC ADRP X8, 0x139A000
	0x02D5A4D0 LDR X8, [X8 + 0x2A0]
	0x02D5A4D4 MOV X2, X31
	0x02D5A4D8 LDR X1, [X8]
	0x02D5A4DC BL 0x32A9B08
	0x02D5A4E0 STR W0, [X20 + 0x38]
	0x02D5A4E4 STR X31, [X20 + 0x40]
	0x02D5A4E8 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X21, X0
	007 Move X19, X2
	008 Move W20, W1
	009 Move X8, [X8+192]
	010 Move X8, [X8]
	011 Move X0, X8
	012 Call 0x2D6436C
	013 Move X8, [X19+32]
	014 Move W1, W20
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X2, X0
	018 Move X8, [X8+192]
	019 Move X0, X21
	020 Move X3, [X8+48]
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Call 0x2D5A9A4, X0, X1, X2
	024 Return 

Method: System.Void .ctor(System.Collections.Generic.IEnumerable`1<T> collection)

Disassembly:
	0x02D5A4EC LDP X22, X21, [X31 + 0x20]
	0x02D5A4F0 LDP X24, X23, [X31 + 0x10]
	0x02D5A4F4 LDR X30, [X31], #0x40
	0x02D5A4F8 RET
	0x02D5A4FC BL 0x1C16F28
	0x02D5A500 BL 0x1C16F20
	0x02D5A504 MOV X0, X22
	0x02D5A508 MOV X1, X23
	0x02D5A50C BL 0x1C171E0
	0x02D5A510 ADRP X0, 0x13C3000
	0x02D5A514 LDR X0, [X0 + 0x2E0]
	0x02D5A518 BL 0x1C16D08
	0x02D5A51C BL 0x1C16F10
	0x02D5A520 MOV X20, X0
	0x02D5A524 ADRP X0, 0x13C4000
	0x02D5A528 LDR X0, [X0 + 0xF10]
	0x02D5A52C BL 0x1C16D08
	0x02D5A530 MOV X1, X0
	0x02D5A534 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X21, X0
	007 Move X19, X2
	008 Move X20, X1
	009 Move X8, [X8+192]
	010 Move X8, [X8]
	011 Move X0, X8
	012 Call 0x2D6436C
	013 Move X8, [X19+32]
	014 Move X1, X20
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X2, X0
	018 Move X8, [X8+192]
	019 Move X0, X21
	020 Move X3, [X8+64]
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]

Method: System.Void .ctor(System.Collections.Generic.IEnumerable`1<T> collection, System.Collections.Generic.IEqualityComparer`1<T> comparer)

Disassembly:
	0x02D5A538 MOV X2, X31
	0x02D5A53C BL 0x329F100
	0x02D5A540 MOV X0, X20
	0x02D5A544 MOV X1, X19
	0x02D5A548 BL 0x1C16DEC
	0x02D5A54C MOV X0, X23
	0x02D5A550 MOV X1, X22
	0x02D5A554 BL 0x1C171E0
	0x02D5A558 LDR X8, [X2 + 0x20]
	0x02D5A55C AND X1, X1, 0xFFFF
	0x02D5A560 LDR X8, [X8 + 0xC0]
	0x02D5A564 LDR X2, [X8 + 0xA8]
	0x02D5A568 B 0x2D5C318
	0x02D5A56C STP X30, X23, [X31 - 0x30]!
	0x02D5A570 STP X22, X21, [X31 + 0x10]
	0x02D5A574 STP X20, X19, [X31 + 0x20]
	0x02D5A578 ADRP X22, 0x1681000
	0x02D5A57C LDRB W8, [X22 + 0x8B7]
	0x02D5A580 MOV X20, X2
	0x02D5A584 MOV X19, X1
	0x02D5A588 MOV X21, X0
	0x02D5A58C TBNZ X8, 0x0, 0x2D5A5B0
	0x02D5A590 ADRP X0, 0x1399000
	0x02D5A594 LDR X0, [X0 + 0xE00]
	0x02D5A598 BL 0x1C16CF4
	0x02D5A59C ADRP X0, 0x1399000
	0x02D5A5A0 LDR X0, [X0 + 0xE18]
	0x02D5A5A4 BL 0x1C16CF4
	0x02D5A5A8 MOVZ W8, 0x1
	0x02D5A5AC STRB W8, [X22 + 0x8B7]
	0x02D5A5B0 CBZ X19, 0x2D5A7A0
	0x02D5A5B4 LDR X8, [X20 + 0x20]
	0x02D5A5B8 LDR X8, [X8 + 0xC0]
	0x02D5A5BC LDR X1, [X8 + 0x38]
	0x02D5A5C0 LDRB W8, [X1 + 0x135]
	0x02D5A5C4 TBNZ X8, 0x0, 0x2D5A5D4
	0x02D5A5C8 MOV X0, X1
	0x02D5A5CC BL 0x1C5C684
	0x02D5A5D0 MOV X1, X0
	0x02D5A5D4 LDR X8, [X19]
	0x02D5A5D8 LDRH W9, [X8 + 0x12E]
	0x02D5A5DC CBZ X9, 0x2D5A600
	0x02D5A5E0 LDR X10, [X8 + 0xB0]
	0x02D5A5E4 ADD X10, X10, 0x8
	0x02D5A5E8 LDUR X11, [X10 - 0x8]
	0x02D5A5EC CMP X11, X1
	0x02D5A5F0 B.EQ 0x2D5A610
	0x02D5A5F4 SUBS X9, X9, 0x1
	0x02D5A5F8 ADD X10, X10, 0x10
	0x02D5A5FC B.NE 0x2D5A5E8
	0x02D5A600 MOV X0, X19
	0x02D5A604 MOV W2, W31
	0x02D5A608 BL 0x1C5C788
	0x02D5A60C B 0x2D5A61C
	0x02D5A610 LDRSW X9, [X10]
	0x02D5A614 ADD X8, X8, X9, 0x4, LSL
	0x02D5A618 ADD X0, X8, 0x138
	0x02D5A61C LDP X8, X1, [X0]
	0x02D5A620 ADRP X22, 0x1399000
	0x02D5A624 LDR X22, [X22 + 0xE00]
	0x02D5A628 MOV X0, X19
	0x02D5A62C BLR X8
	0x02D5A630 MOV X19, X0
	0x02D5A634 CBZ X0, 0x2D5A7DC
	0x02D5A638 ADRP X23, 0x1399000
	0x02D5A63C LDR X23, [X23 + 0xE18]
	0x02D5A640 LDR X8, [X19]
	0x02D5A644 LDR X1, [X23]
	0x02D5A648 LDRH W9, [X8 + 0x12E]
	0x02D5A64C CBZ X9, 0x2D5A670
	0x02D5A650 LDR X10, [X8 + 0xB0]
	0x02D5A654 ADD X10, X10, 0x8
	0x02D5A658 LDUR X11, [X10 - 0x8]
	0x02D5A65C CMP X11, X1
	0x02D5A660 B.EQ 0x2D5A680
	0x02D5A664 SUBS X9, X9, 0x1
	0x02D5A668 ADD X10, X10, 0x10
	0x02D5A66C B.NE 0x2D5A658
	0x02D5A670 MOV X0, X19
	0x02D5A674 MOV W2, W31
	0x02D5A678 BL 0x1C5C788
	0x02D5A67C B 0x2D5A68C
	0x02D5A680 LDRSW X9, [X10]
	0x02D5A684 ADD X8, X8, X9, 0x4, LSL
	0x02D5A688 ADD X0, X8, 0x138
	0x02D5A68C LDP X8, X1, [X0]
	0x02D5A690 MOV X0, X19
	0x02D5A694 BLR X8
	0x02D5A698 TBZ X0, 0x0, 0x2D5A72C
	0x02D5A69C LDR X8, [X20 + 0x20]
	0x02D5A6A0 LDR X8, [X8 + 0xC0]
	0x02D5A6A4 LDR X1, [X8 + 0xE8]
	0x02D5A6A8 LDRB W8, [X1 + 0x135]
	0x02D5A6AC TBNZ X8, 0x0, 0x2D5A6BC
	0x02D5A6B0 MOV X0, X1
	0x02D5A6B4 BL 0x1C5C684
	0x02D5A6B8 MOV X1, X0
	0x02D5A6BC LDR X8, [X19]
	0x02D5A6C0 LDRH W9, [X8 + 0x12E]
	0x02D5A6C4 CBZ X9, 0x2D5A6E8
	0x02D5A6C8 LDR X10, [X8 + 0xB0]
	0x02D5A6CC ADD X10, X10, 0x8
	0x02D5A6D0 LDUR X11, [X10 - 0x8]
	0x02D5A6D4 CMP X11, X1
	0x02D5A6D8 B.EQ 0x2D5A6F8
	0x02D5A6DC SUBS X9, X9, 0x1
	0x02D5A6E0 ADD X10, X10, 0x10
	0x02D5A6E4 B.NE 0x2D5A6D0
	0x02D5A6E8 MOV X0, X19
	0x02D5A6EC MOV W2, W31
	0x02D5A6F0 BL 0x1C5C788
	0x02D5A6F4 B 0x2D5A704
	0x02D5A6F8 LDRSW X9, [X10]
	0x02D5A6FC ADD X8, X8, X9, 0x4, LSL
	0x02D5A700 ADD X0, X8, 0x138
	0x02D5A704 LDP X8, X1, [X0]
	0x02D5A708 MOV X0, X19
	0x02D5A70C BLR X8
	0x02D5A710 LDR X8, [X20 + 0x20]
	0x02D5A714 AND X1, X0, 0xFFFF
	0x02D5A718 LDR X8, [X8 + 0xC0]
	0x02D5A71C LDR X2, [X8 + 0xA8]
	0x02D5A720 MOV X0, X21
	0x02D5A724 BL 0x2D5C318
	0x02D5A728 B 0x2D5A640
	0x02D5A72C MOV X20, X31
	0x02D5A730 CBZ X19, 0x2D5A78C
	0x02D5A734 LDR X8, [X19]
	0x02D5A738 LDR X1, [X22]
	0x02D5A73C LDRH W9, [X8 + 0x12E]
	0x02D5A740 CBZ X9, 0x2D5A764
	0x02D5A744 LDR X10, [X8 + 0xB0]
	0x02D5A748 ADD X10, X10, 0x8
	0x02D5A74C LDUR X11, [X10 - 0x8]
	0x02D5A750 CMP X11, X1
	0x02D5A754 B.EQ 0x2D5A774
	0x02D5A758 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X9, [X3+32]
	007 Move X8, X2
	008 Move X21, X1
	009 Move X1, X8
	010 Move X9, [X9+192]
	011 Move X19, X3
	012 Move X20, X0
	013 Move X2, [X9+24]
	014 Call 0x2D5A44C, X0, X1
	015 Compare X21, 0
	016 JumpIfEqual {141}
	017 Move X8, [X19+32]
	018 Move X8, [X8+192]
	019 Move X0, [X8+40]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Move X8, [X21]
	027 Move W9, [X0+304]
	028 Move W10, [X8+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X8+200]
	031 Add X8, X8, X9
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X8, [X19+32]
	035 Move X0, X20
	036 Move X1, X21
	037 Move X8, [X8+192]
	038 Move X2, [X8+72]
	039 Call 0x2D5F2BC, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {56}
	044 Move X8, [X19+32]
	045 Move X0, X20
	046 Move X1, X21
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X8, [X8+192]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X2, [X8+88]
	053 Move X30, [X31+48]
	054 Call 0x2D5A784, X0, X1
	055 Return 
	056 Move X8, [X19+32]
	057 Move X8, [X8+192]
	058 Move X1, [X8+96]
	059 Move W8, [X1+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {67}
	064 Move X0, X1
	065 Call 0x1C5D684
	066 Move X1, X0
	067 Move X0, X21
	068 Call 0x1C17E00
	069 Compare X0, 0
	070 JumpIfEqual {96}
	071 Move X8, [X19+32]
	072 Move X22, X0
	073 Move X8, [X8+192]
	074 Move X1, [X8+96]
	075 Move W8, [X1+309]
	076 Move TEMP, X8
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {83}
	080 Move X0, X1
	081 Call 0x1C5D684
	082 Move X1, X0
	083 Move X8, [X22]
	084 NotImplemented "Instruction LDRH not yet implemented."
	085 Compare X9, 0
	086 JumpIfEqual {93}
	087 Move X10, [X8+176]
	088 Add X10, X10, 8
	089 NotImplemented "Instruction LDUR not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Subtract X9, X9, 1
	092 Add X10, X10, 16
	093 Move X0, X22
	094 Move W2, W31
	095 Call 0x1C5D788
	096 Move W1, W31
	097 NotImplemented "Instruction LDRSW not yet implemented."
	098 Add X8, X8, X9
	099 Add X0, X8, 312
	100 Move X8, [X0]
	101 Move X1, [X0+8]
	102 Move X0, X22
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move W1, W0
	105 Move X8, [X19+32]
	106 Move X0, X20
	107 Move X8, [X8+192]
	108 Move X2, [X8+112]
	109 Call 0x2D5D07C, X0, X1
	110 Move X8, [X19+32]
	111 Move X0, X20
	112 Move X1, X21
	113 Move X8, [X8+192]
	114 Move X2, [X8+120]
	115 Call 0x2D5B56C, X0, X1
	116 Move W8, [X20+32]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X9, [X20+24]
	119 Compare X9, 0
	120 JumpIfEqual {156}
	121 Move W9, [X9+24]
	122 NotImplemented "Instruction SDIV not yet implemented."
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X8, [X19+32]
	125 Move X0, X20
	126 Move X20, [X31+32]
	127 Move X19, [X31+40]
	128 Move X22, [X31+16]
	129 Move X21, [X31+24]
	130 Move X8, [X8+192]
	131 Move X1, [X8+136]
	132 Move X30, [X31+48]
	133 Call 0x2D5CEC4, X0
	134 Return 
	135 Move X20, [X31+32]
	136 Move X19, [X31+40]
	137 Move X22, [X31+16]
	138 Move X21, [X31+24]
	139 Move X30, [X31+48]
	140 Return 
	141 Move X0, 0x139F000
	142 Move X0, [X0+1320]
	143 Call 0x1C17D08
	144 Call 0x1C17F10
	145 Move X20, X0
	146 Move X0, 0x13C2000
	147 Move X0, [X0+2280]
	148 Call 0x1C17D08
	149 Move X1, X0
	150 Move X0, X20
	151 Move X2, X31
	152 Call ArgumentNullException..ctor, X0, X1
	153 Move X0, X20
	154 Move X1, X19
	155 Call 0x1C17DEC
	156 Call 0x1C17F20

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x02D5A75C ADD X10, X10, 0x10
	0x02D5A760 B.NE 0x2D5A74C
	0x02D5A764 MOV X0, X19
	0x02D5A768 MOV W2, W31
	0x02D5A76C BL 0x1C5C788
	0x02D5A770 B 0x2D5A780
	0x02D5A774 LDRSW X9, [X10]
	0x02D5A778 ADD X8, X8, X9, 0x4, LSL
	0x02D5A77C ADD X0, X8, 0x138
	0x02D5A780 LDP X8, X1, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+64], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void CopyFrom(System.Collections.Generic.HashSet`1<T> source)

Disassembly:
	0x02D5A784 MOV X0, X19
	0x02D5A788 BLR X8
	0x02D5A78C CBNZ X20, 0x2D5A7E0
	0x02D5A790 LDP X20, X19, [X31 + 0x20]
	0x02D5A794 LDP X22, X21, [X31 + 0x10]
	0x02D5A798 LDP X30, X23, [X31], #0x30
	0x02D5A79C RET
	0x02D5A7A0 ADRP X0, 0x139E000
	0x02D5A7A4 LDR X0, [X0 + 0x528]
	0x02D5A7A8 BL 0x1C16D08
	0x02D5A7AC BL 0x1C16F10
	0x02D5A7B0 MOV X19, X0
	0x02D5A7B4 ADRP X0, 0x13C3000
	0x02D5A7B8 LDR X0, [X0 + 0x928]
	0x02D5A7BC BL 0x1C16D08
	0x02D5A7C0 MOV X1, X0
	0x02D5A7C4 MOV X0, X19
	0x02D5A7C8 MOV X2, X31
	0x02D5A7CC BL 0x330E100
	0x02D5A7D0 MOV X0, X19
	0x02D5A7D4 MOV X1, X20
	0x02D5A7D8 BL 0x1C16DEC
	0x02D5A7DC BL 0x1C16F20
	0x02D5A7E0 MOV X0, X20
	0x02D5A7E4 BL 0x1C16F18
	0x02D5A7E8 B 0x2D5A7F4
	0x02D5A7EC B 0x2D5A7F4
	0x02D5A7F0 B 0x2D5A7F4
	0x02D5A7F4 MOV X21, X0
	0x02D5A7F8 CMP W1, 0x1
	0x02D5A7FC B.NE 0x2D5A814
	0x02D5A800 MOV X0, X21
	0x02D5A804 BL 0x3EB1AD0
	0x02D5A808 LDR X20, [X0]
	0x02D5A80C BL 0x3EB1AE0
	0x02D5A810 B 0x2D5A730
	0x02D5A814 MOV X20, X31
	0x02D5A818 B 0x2D5A820
	0x02D5A81C MOV X21, X0
	0x02D5A820 CBZ X19, 0x2D5A87C
	0x02D5A824 LDR X8, [X19]
	0x02D5A828 LDR X1, [X22]
	0x02D5A82C LDRH W9, [X8 + 0x12E]
	0x02D5A830 CBZ X9, 0x2D5A854
	0x02D5A834 LDR X10, [X8 + 0xB0]
	0x02D5A838 ADD X10, X10, 0x8
	0x02D5A83C LDUR X11, [X10 - 0x8]
	0x02D5A840 CMP X11, X1
	0x02D5A844 B.EQ 0x2D5A864
	0x02D5A848 SUBS X9, X9, 0x1
	0x02D5A84C ADD X10, X10, 0x10
	0x02D5A850 B.NE 0x2D5A83C
	0x02D5A854 MOV X0, X19
	0x02D5A858 MOV W2, W31
	0x02D5A85C BL 0x1C5C788
	0x02D5A860 B 0x2D5A870
	0x02D5A864 LDRSW X9, [X10]
	0x02D5A868 ADD X8, X8, X9, 0x4, LSL
	0x02D5A86C ADD X0, X8, 0x138
	0x02D5A870 LDP X8, X1, [X0]
	0x02D5A874 MOV X0, X19
	0x02D5A878 BLR X8
	0x02D5A87C CBNZ X20, 0x2D5A888
	0x02D5A880 MOV X0, X21
	0x02D5A884 BL 0x1D2C690
	0x02D5A888 MOV X0, X20
	0x02D5A88C BL 0x1C16F18
	0x02D5A890 BL 0x1990590
	0x02D5A894 STR X30, [X31 - 0x30]!
	0x02D5A898 STP X22, X21, [X31 + 0x10]
	0x02D5A89C STP X20, X19, [X31 + 0x20]
	0x02D5A8A0 MOV X19, X2
	0x02D5A8A4 CBZ X1, 0x2D5AA30
	0x02D5A8A8 MOV X20, X1
	0x02D5A8AC MOV X21, X0
	0x02D5A8B0 CMP X0, X1
	0x02D5A8B4 B.EQ 0x2D5A94C
	0x02D5A8B8 LDR W8, [X21 + 0x20]
	0x02D5A8BC CBZ W8, 0x2D5A94C
	0x02D5A8C0 LDR X8, [X19 + 0x20]
	0x02D5A8C4 LDR X8, [X8 + 0xC0]
	0x02D5A8C8 LDR X1, [X8 + 0x60]
	0x02D5A8CC LDRB W8, [X1 + 0x135]
	0x02D5A8D0 TBNZ X8, 0x0, 0x2D5A8E0
	0x02D5A8D4 MOV X0, X1
	0x02D5A8D8 BL 0x1C5C684
	0x02D5A8DC MOV X1, X0
	0x02D5A8E0 MOV X0, X20
	0x02D5A8E4 BL 0x1C16E00
	0x02D5A8E8 CBZ X0, 0x2D5A9F8
	0x02D5A8EC LDR X8, [X19 + 0x20]
	0x02D5A8F0 MOV X22, X0
	0x02D5A8F4 LDR X8, [X8 + 0xC0]
	0x02D5A8F8 LDR X1, [X8 + 0x60]
	0x02D5A8FC LDRB W8, [X1 + 0x135]
	0x02D5A900 TBNZ X8, 0x0, 0x2D5A910
	0x02D5A904 MOV X0, X1
	0x02D5A908 BL 0x1C5C684
	0x02D5A90C MOV X1, X0
	0x02D5A910 LDR X8, [X22]
	0x02D5A914 LDRH W9, [X8 + 0x12E]
	0x02D5A918 CBZ X9, 0x2D5A93C
	0x02D5A91C LDR X10, [X8 + 0xB0]
	0x02D5A920 ADD X10, X10, 0x8
	0x02D5A924 LDUR X11, [X10 - 0x8]
	0x02D5A928 CMP X11, X1
	0x02D5A92C B.EQ 0x2D5A95C
	0x02D5A930 SUBS X9, X9, 0x1
	0x02D5A934 ADD X10, X10, 0x10
	0x02D5A938 B.NE 0x2D5A924
	0x02D5A93C MOV X0, X22
	0x02D5A940 MOV W2, W31
	0x02D5A944 BL 0x1C5C788
	0x02D5A948 B 0x2D5A968
	0x02D5A94C LDP X20, X19, [X31 + 0x20]
	0x02D5A950 LDP X22, X21, [X31 + 0x10]
	0x02D5A954 LDR X30, [X31], #0x30
	0x02D5A958 RET
	0x02D5A95C LDRSW X9, [X10]
	0x02D5A960 ADD X8, X8, X9, 0x4, LSL
	0x02D5A964 ADD X0, X8, 0x138
	0x02D5A968 LDP X8, X1, [X0]
	0x02D5A96C MOV X0, X22
	0x02D5A970 BLR X8
	0x02D5A974 CBZ W0, 0x2D5AA1C
	0x02D5A978 LDR X8, [X19 + 0x20]
	0x02D5A97C LDR X8, [X8 + 0xC0]
	0x02D5A980 LDR X0, [X8 + 0x28]
	0x02D5A984 LDRB W8, [X0 + 0x135]
	0x02D5A988 TBNZ X8, 0x0, 0x2D5A990
	0x02D5A98C BL 0x1C5C684
	0x02D5A990 LDR X8, [X20]
	0x02D5A994 LDRB W9, [X0 + 0x130]
	0x02D5A998 LDRB W10, [X8 + 0x130]
	0x02D5A99C CMP W10, W9
	0x02D5A9A0 B.CC 0x2D5A9F8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x1682000
	010 Move W8, [X20+2228]
	011 Move X22, X2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x13C5000
	019 Move X0, [X0+1352]
	020 Call 0x1C17CF4
	021 Move X0, 0x139B000
	022 Move X0, [X0+3672]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+2228], W8
	026 Compare X21, 0
	027 JumpIfEqual {160}
	028 Move W20, [X21+32]
	029 Compare W20, 0
	030 JumpIfEqual {150}
	031 Move X8, [X21+16]
	032 Compare X8, 0
	033 JumpIfEqual {160}
	034 Move X9, 0x13C5000
	035 Move X9, [X9+1352]
	036 Move W23, [X8+24]
	037 Move X0, [X9]
	038 Move W9, [X0+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Add W0, W20, 1
	043 Move X1, X31
	044 Call HashHelpers.ExpandPrime, X0
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X8, [X22+32]
	047 Move W22, [X21+36]
	048 Move X23, [X21+24]
	049 Move X0, X19
	050 Move X8, [X8+192]
	051 Move W1, W20
	052 Move X2, [X8+112]
	053 Call 0x2D5D07C, X0, X1
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Compare X23, 0
	056 JumpIfEqual {160}
	057 Move X24, X31
	058 Move W21, W31
	059 Add X25, X23, 40
	060 Move W8, [X23+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 Move TEMP, X2
	064 And TEMP, TEMP, -2147483648
	065 Compare TEMP, -2147483648
	066 JumpIfEqual {72}
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Move X0, X19
	069 Move W1, W21
	070 Call 0x2D5D61C, X0, X1, X2, X3
	071 Add W21, W21, 1
	072 Add X24, X24, 1
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Add X25, X25, 12
	075 Move X0, [X21+16]
	076 Compare X0, 0
	077 JumpIfEqual {160}
	078 Move X1, X31
	079 Call Array.Clone, X0
	080 Compare X0, 0
	081 JumpIfEqual {99}
	082 Move X25, 0x139B000
	083 Move X25, [X25+3672]
	084 Move X23, X0
	085 Move X24, [X25]
	086 Move X1, X24
	087 Call 0x1C17E00
	088 Compare X0, 0
	089 JumpIfEqual {124}
	090 Move [X19+16], X0
	091 Move X24, [X25]
	092 Move X0, X23
	093 Move X1, X24
	094 Call 0x1C17E00
	095 Compare X0, 0
	096 JumpIfNotEqual {100}
	097 Move W21, W31
	098 Move [X19+36], W21
	099 Move [X19+16], X31
	100 Move X0, [X21+24]
	101 Compare X0, 0
	102 JumpIfEqual {160}
	103 Move X1, X31
	104 Call Array.Clone, X0
	105 Move X8, [X22+32]
	106 Move X23, X0
	107 Move X8, [X8+192]
	108 Move X24, [X8+128]
	109 Move W8, [X24+309]
	110 Move TEMP, X8
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfEqual {117}
	114 Move X0, X24
	115 Call 0x1C5D684
	116 Move X24, X0
	117 Compare X23, 0
	118 JumpIfEqual {127}
	119 Move X0, X23
	120 Move X1, X24
	121 Call 0x1C17E00
	122 Compare X0, 0
	123 JumpIfNotEqual {128}
	124 Move X0, X23
	125 Move X1, X24
	126 Call 0x1C181E0
	127 Move X0, X31
	128 Move [X19+24], X0
	129 Move X8, [X22+32]
	130 Move X8, [X8+192]
	131 Move X22, [X8+128]
	132 Move W8, [X22+309]
	133 Move TEMP, X8
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfEqual {140}
	137 Move X0, X22
	138 Call 0x1C5D684
	139 Move X22, X0
	140 Compare X23, 0
	141 JumpIfEqual {147}
	142 Move X0, X23
	143 Move X1, X22
	144 Call 0x1C17E00
	145 Compare X0, 0
	146 JumpIfEqual {161}
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 Move [X19+36], D0
	149 Move [X19+32], W20
	150 Move X20, [X31+48]
	151 Move X19, [X31+56]
	152 Move X22, [X31+32]
	153 Move X21, [X31+40]
	154 Move X24, [X31+16]
	155 Move X23, [X31+24]
	156 Move X30, [X31+64]
	157 Move X25, [X31+72]
	158 Return 
	159 Call 0x1C17F28
	160 Call 0x1C17F20
	161 Move X0, X23
	162 Move X1, X22
	163 Call 0x1C181E0

Method: System.Void .ctor(System.Int32 capacity, System.Collections.Generic.IEqualityComparer`1<T> comparer)

Disassembly:
	0x02D5A9A4 LDR X8, [X8 + 0xC8]
	0x02D5A9A8 ADD X8, X8, X9, 0x3, LSL
	0x02D5A9AC LDUR X8, [X8 - 0x8]
	0x02D5A9B0 CMP X8, X0
	0x02D5A9B4 B.NE 0x2D5A9F8
	0x02D5A9B8 LDR X8, [X19 + 0x20]
	0x02D5A9BC MOV X0, X21
	0x02D5A9C0 MOV X1, X20
	0x02D5A9C4 LDR X8, [X8 + 0xC0]
	0x02D5A9C8 LDR X2, [X8 + 0x48]
	0x02D5A9CC BL 0x2D5E2BC
	0x02D5A9D0 TBZ X0, 0x0, 0x2D5A9F8
	0x02D5A9D4 LDR X8, [X19 + 0x20]
	0x02D5A9D8 MOV X0, X21
	0x02D5A9DC MOV X1, X20
	0x02D5A9E0 LDP X20, X19, [X31 + 0x20]
	0x02D5A9E4 LDR X8, [X8 + 0xC0]
	0x02D5A9E8 LDP X22, X21, [X31 + 0x10]
	0x02D5A9EC LDR X2, [X8 + 0x138]
	0x02D5A9F0 LDR X30, [X31], #0x30
	0x02D5A9F4 B 0x2D5CAF8
	0x02D5A9F8 LDR X8, [X19 + 0x20]
	0x02D5A9FC MOV X0, X21
	0x02D5AA00 MOV X1, X20
	0x02D5AA04 LDP X20, X19, [X31 + 0x20]
	0x02D5AA08 LDR X8, [X8 + 0xC0]
	0x02D5AA0C LDP X22, X21, [X31 + 0x10]
	0x02D5AA10 LDR X2, [X8 + 0x140]
	0x02D5AA14 LDR X30, [X31], #0x30
	0x02D5AA18 B 0x2D5CBB8
	0x02D5AA1C MOV X0, X21
	0x02D5AA20 LDP X20, X19, [X31 + 0x20]
	0x02D5AA24 LDP X22, X21, [X31 + 0x10]
	0x02D5AA28 LDR X30, [X31], #0x30
	0x02D5AA2C B 0x2D59A54
	0x02D5AA30 ADRP X0, 0x139E000
	0x02D5AA34 LDR X0, [X0 + 0x528]
	0x02D5AA38 BL 0x1C16D08
	0x02D5AA3C BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X9, [X3+32]
	006 Move X8, X2
	007 Move W20, W1
	008 Move X1, X8
	009 Move X9, [X9+192]
	010 Move X19, X3
	011 Move X21, X0
	012 Move X2, [X9+24]
	013 Call 0x2D5A44C, X0, X1
	014 Move TEMP, X20
	015 And TEMP, TEMP, -2147483648
	016 Compare TEMP, -2147483648
	017 JumpIfEqual {36}
	018 Compare W20, 0
	019 JumpIfEqual {31}
	020 Move X8, [X19+32]
	021 Move W1, W20
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X0, X21
	025 Move X8, [X8+192]
	026 Move X2, [X8+112]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call 0x2D5D07C, X0, X1
	030 Return 
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 
	036 Move X0, 0x13A2000
	037 Move X0, [X0+1888]
	038 Call 0x1C17D08
	039 Call 0x1C17F10
	040 Move X20, X0
	041 Move X0, 0x13C4000
	042 Move X0, [X0+88]
	043 Call 0x1C17D08
	044 Move X1, X0
	045 Move X0, X20
	046 Move X2, X31
	047 Call ArgumentOutOfRangeException..ctor, X0, X1
	048 Move X0, X20
	049 Move X1, X19
	050 Call 0x1C17DEC

Method: System.Void System.Collections.Generic.ICollection<T>.Add(T item)

Disassembly:
	0x02D5AA40 MOV X20, X0
	0x02D5AA44 ADRP X0, 0x13C3000
	0x02D5AA48 LDR X0, [X0 + 0x928]
	0x02D5AA4C BL 0x1C16D08
	0x02D5AA50 MOV X1, X0

ISIL:
	001 Move X8, [X2+32]
	002 And X1, X1, 0xFFFF
	003 Move X8, [X8+192]
	004 Move X2, [X8+168]
	005 Call 0x2D5D318, X0, X1
	006 Return 

Method: System.Void Clear()

Disassembly:
	0x02D5AA54 MOV X0, X20
	0x02D5AA58 MOV X2, X31
	0x02D5AA5C BL 0x330E100
	0x02D5AA60 MOV X0, X20
	0x02D5AA64 MOV X1, X19
	0x02D5AA68 BL 0x1C16DEC
	0x02D5AA6C STR X30, [X31 - 0x30]!
	0x02D5AA70 STP X22, X21, [X31 + 0x10]
	0x02D5AA74 STP X20, X19, [X31 + 0x20]
	0x02D5AA78 ADRP X22, 0x1681000
	0x02D5AA7C LDRB W8, [X22 + 0x8B8]
	0x02D5AA80 MOV X20, X2
	0x02D5AA84 MOV X19, X1
	0x02D5AA88 MOV X21, X0
	0x02D5AA8C TBNZ X8, 0x0, 0x2D5AAB0
	0x02D5AA90 ADRP X0, 0x1399000
	0x02D5AA94 LDR X0, [X0 + 0xE00]
	0x02D5AA98 BL 0x1C16CF4
	0x02D5AA9C ADRP X0, 0x1399000
	0x02D5AAA0 LDR X0, [X0 + 0xE18]
	0x02D5AAA4 BL 0x1C16CF4
	0x02D5AAA8 MOVZ W8, 0x1
	0x02D5AAAC STRB W8, [X22 + 0x8B8]
	0x02D5AAB0 CBZ X19, 0x2D5ACC4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W2, [X0+36]
	004 Move X19, X0
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X0, [X19+24]
	007 Move W1, W31
	008 Move X3, X31
	009 Call Array.Clear, X0, X1, X2
	010 Move X0, [X19+16]
	011 Compare X0, 0
	012 JumpIfEqual {28}
	013 Move W2, [X0+24]
	014 Move W1, W31
	015 Move X3, X31
	016 Call Array.Clear, X0, X1, X2
	017 Move TEMP, 0
	018 Not TEMP
	019 Move W8, TEMP
	020 Move [X19+32], X31
	021 Move [X19+40], W8
	022 Move W8, [X19+56]
	023 Add W8, W8, 1
	024 Move [X19+56], W8
	025 Move X30, [X31+16]
	026 Move X19, [X31+24]
	027 Return 
	028 Call 0x1C17F20

Method: System.Boolean Contains(T item)

Disassembly:
	0x02D5AAB4 LDR W8, [X21 + 0x20]
	0x02D5AAB8 CBZ W8, 0x2D5ACB4
	0x02D5AABC CMP X21, X19
	0x02D5AAC0 B.EQ 0x2D5AB20
	0x02D5AAC4 LDR X8, [X20 + 0x20]
	0x02D5AAC8 LDR X8, [X8 + 0xC0]
	0x02D5AACC LDR X1, [X8 + 0x38]
	0x02D5AAD0 LDRB W8, [X1 + 0x135]
	0x02D5AAD4 TBNZ X8, 0x0, 0x2D5AAE4
	0x02D5AAD8 MOV X0, X1
	0x02D5AADC BL 0x1C5C684
	0x02D5AAE0 MOV X1, X0
	0x02D5AAE4 LDR X8, [X19]
	0x02D5AAE8 LDRH W9, [X8 + 0x12E]
	0x02D5AAEC CBZ X9, 0x2D5AB10
	0x02D5AAF0 LDR X10, [X8 + 0xB0]
	0x02D5AAF4 ADD X10, X10, 0x8
	0x02D5AAF8 LDUR X11, [X10 - 0x8]
	0x02D5AAFC CMP X11, X1
	0x02D5AB00 B.EQ 0x2D5AB34
	0x02D5AB04 SUBS X9, X9, 0x1
	0x02D5AB08 ADD X10, X10, 0x10
	0x02D5AB0C B.NE 0x2D5AAF8
	0x02D5AB10 MOV X0, X19
	0x02D5AB14 MOV W2, W31
	0x02D5AB18 BL 0x1C5C788
	0x02D5AB1C B 0x2D5AB40
	0x02D5AB20 MOV X0, X21
	0x02D5AB24 LDP X20, X19, [X31 + 0x20]
	0x02D5AB28 LDP X22, X21, [X31 + 0x10]
	0x02D5AB2C LDR X30, [X31], #0x30
	0x02D5AB30 B 0x2D59A54
	0x02D5AB34 LDRSW X9, [X10]
	0x02D5AB38 ADD X8, X8, X9, 0x4, LSL
	0x02D5AB3C ADD X0, X8, 0x138
	0x02D5AB40 LDP X8, X1, [X0]
	0x02D5AB44 MOV X0, X19
	0x02D5AB48 BLR X8
	0x02D5AB4C MOV X19, X0
	0x02D5AB50 CBZ X0, 0x2D5AD00
	0x02D5AB54 ADRP X22, 0x1399000
	0x02D5AB58 LDR X22, [X22 + 0xE18]
	0x02D5AB5C LDR X8, [X19]
	0x02D5AB60 LDR X1, [X22]
	0x02D5AB64 LDRH W9, [X8 + 0x12E]
	0x02D5AB68 CBZ X9, 0x2D5AB8C
	0x02D5AB6C LDR X10, [X8 + 0xB0]
	0x02D5AB70 ADD X10, X10, 0x8
	0x02D5AB74 LDUR X11, [X10 - 0x8]
	0x02D5AB78 CMP X11, X1
	0x02D5AB7C B.EQ 0x2D5AB9C
	0x02D5AB80 SUBS X9, X9, 0x1
	0x02D5AB84 ADD X10, X10, 0x10
	0x02D5AB88 B.NE 0x2D5AB74
	0x02D5AB8C MOV X0, X19
	0x02D5AB90 MOV W2, W31
	0x02D5AB94 BL 0x1C5C788
	0x02D5AB98 B 0x2D5ABA8
	0x02D5AB9C LDRSW X9, [X10]
	0x02D5ABA0 ADD X8, X8, X9, 0x4, LSL
	0x02D5ABA4 ADD X0, X8, 0x138
	0x02D5ABA8 LDP X8, X1, [X0]
	0x02D5ABAC MOV X0, X19
	0x02D5ABB0 BLR X8
	0x02D5ABB4 TBZ X0, 0x0, 0x2D5AC48
	0x02D5ABB8 LDR X8, [X20 + 0x20]
	0x02D5ABBC LDR X8, [X8 + 0xC0]
	0x02D5ABC0 LDR X1, [X8 + 0xE8]
	0x02D5ABC4 LDRB W8, [X1 + 0x135]
	0x02D5ABC8 TBNZ X8, 0x0, 0x2D5ABD8
	0x02D5ABCC MOV X0, X1
	0x02D5ABD0 BL 0x1C5C684
	0x02D5ABD4 MOV X1, X0
	0x02D5ABD8 LDR X8, [X19]
	0x02D5ABDC LDRH W9, [X8 + 0x12E]
	0x02D5ABE0 CBZ X9, 0x2D5AC04
	0x02D5ABE4 LDR X10, [X8 + 0xB0]
	0x02D5ABE8 ADD X10, X10, 0x8
	0x02D5ABEC LDUR X11, [X10 - 0x8]
	0x02D5ABF0 CMP X11, X1
	0x02D5ABF4 B.EQ 0x2D5AC14
	0x02D5ABF8 SUBS X9, X9, 0x1
	0x02D5ABFC ADD X10, X10, 0x10
	0x02D5AC00 B.NE 0x2D5ABEC
	0x02D5AC04 MOV X0, X19
	0x02D5AC08 MOV W2, W31
	0x02D5AC0C BL 0x1C5C788
	0x02D5AC10 B 0x2D5AC20
	0x02D5AC14 LDRSW X9, [X10]
	0x02D5AC18 ADD X8, X8, X9, 0x4, LSL
	0x02D5AC1C ADD X0, X8, 0x138
	0x02D5AC20 LDP X8, X1, [X0]
	0x02D5AC24 MOV X0, X19
	0x02D5AC28 BLR X8
	0x02D5AC2C LDR X8, [X20 + 0x20]
	0x02D5AC30 AND X1, X0, 0xFFFF
	0x02D5AC34 LDR X8, [X8 + 0xC0]
	0x02D5AC38 LDR X2, [X8 + 0x148]
	0x02D5AC3C MOV X0, X21
	0x02D5AC40 BL 0x2D59C8C
	0x02D5AC44 B 0x2D5AB5C
	0x02D5AC48 MOV X20, X31
	0x02D5AC4C CBZ X19, 0x2D5ACB0
	0x02D5AC50 ADRP X10, 0x1399000
	0x02D5AC54 LDR X8, [X19]
	0x02D5AC58 LDR X10, [X10 + 0xE00]
	0x02D5AC5C LDRH W9, [X8 + 0x12E]
	0x02D5AC60 LDR X1, [X10]
	0x02D5AC64 CBZ X9, 0x2D5AC88
	0x02D5AC68 LDR X10, [X8 + 0xB0]
	0x02D5AC6C ADD X10, X10, 0x8
	0x02D5AC70 LDUR X11, [X10 - 0x8]
	0x02D5AC74 CMP X11, X1

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X8, [X0+16]
	014 Compare X8, 0
	015 JumpIfEqual {99}
	016 Move X8, [X2+32]
	017 Move X19, X2
	018 And X21, X1, 0xFFFF
	019 Move X1, X21
	020 Move X8, [X8+192]
	021 Move X20, X0
	022 Move X2, [X8+176]
	023 Call 0x2D5F320, X0, X1
	024 Move X8, [X20+16]
	025 Compare X8, 0
	026 JumpIfEqual {130}
	027 Move W10, [X8+24]
	028 Move W22, W0
	029 NotImplemented "Instruction SDIV not yet implemented."
	030 NotImplemented "Instruction MSUB not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Add X8, X8, W9
	033 Move W8, [X8+32]
	034 Subtract W27, W8, 1
	035 Move X25, [X20+24]
	036 Compare X25, 0
	037 JumpIfEqual {130}
	038 Move X8, [X25+24]
	039 Move W26, W31
	040 Move W28, 12
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction UMADDL not yet implemented."
	043 Move W9, [X9+32]
	044 Move W29, W27
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X23, [X20+48]
	047 Compare X23, 0
	048 JumpIfEqual {130}
	049 Move X8, [X19+32]
	050 Move X8, [X8+192]
	051 Move X1, [X8+32]
	052 NotImplemented "Instruction NOP not yet implemented."
	053 NotImplemented "Instruction MADD not yet implemented."
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Move W9, [X1+309]
	056 Move TEMP, X9
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {63}
	060 Move X0, X1
	061 Call 0x1C5D684
	062 Move X1, X0
	063 Move X8, [X23]
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Compare X9, 0
	066 JumpIfEqual {73}
	067 Move X10, [X8+176]
	068 Add X10, X10, 8
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Subtract X9, X9, 1
	072 Add X10, X10, 16
	073 Move X0, X23
	074 Move W2, W31
	075 Call 0x1C5D788
	076 NotImplemented "Instruction LDRSW not yet implemented."
	077 Add X8, X8, X9
	078 Add X0, X8, 312
	079 Move X8, [X0]
	080 Move X3, [X0+8]
	081 Move X0, X23
	082 Move X1, X24
	083 Move X2, X21
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfEqual {113}
	089 Move X8, [X25+24]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 NotImplemented "Instruction MADD not yet implemented."
	093 Move W27, [X9+36]
	094 Add W26, W26, 1
	095 Move TEMP, X27
	096 And TEMP, TEMP, -2147483648
	097 Compare TEMP, -2147483648
	098 JumpIfNotEqual {41}
	099 Move W0, W31
	100 Move X20, [X31+80]
	101 Move X19, [X31+88]
	102 Move X22, [X31+64]
	103 Move X21, [X31+72]
	104 Move X24, [X31+48]
	105 Move X23, [X31+56]
	106 Move X26, [X31+32]
	107 Move X25, [X31+40]
	108 Move X28, [X31+16]
	109 Move X27, [X31+24]
	110 Move X29, [X31+96]
	111 Move X30, [X31+104]
	112 Return X0
	113 Move W0, 1
	114 Call 0x1C17F28
	115 Move X0, 0x139A000
	116 Move X0, [X0+1456]
	117 Call 0x1C17D08
	118 Call 0x1C17F10
	119 Move X20, X0
	120 Move X0, 0x13C5000
	121 Move X0, [X0+3840]
	122 Call 0x1C17D08
	123 Move X1, X0
	124 Move X0, X20
	125 Move X2, X31
	126 Call InvalidOperationException..ctor, X0, X1
	127 Move X0, X20
	128 Move X1, X19
	129 Call 0x1C17DEC
	130 Call 0x1C17F20

Method: System.Void CopyTo(T[] array, System.Int32 arrayIndex)

Disassembly:
	0x02D5AC78 B.EQ 0x2D5AC98
	0x02D5AC7C SUBS X9, X9, 0x1
	0x02D5AC80 ADD X10, X10, 0x10
	0x02D5AC84 B.NE 0x2D5AC70
	0x02D5AC88 MOV X0, X19

ISIL:
	001 Move X8, [X3+32]
	002 Move W3, [X0+32]
	003 Move X8, [X8+192]
	004 Move X4, [X8+200]
	005 Call 0x2D5CBC0, X0, X1, X2, X3
	006 Return 

Method: System.Boolean Remove(T item)

Disassembly:
	0x02D5AC8C MOV W2, W31
	0x02D5AC90 BL 0x1C5C788
	0x02D5AC94 B 0x2D5ACA4
	0x02D5AC98 LDRSW X9, [X10]
	0x02D5AC9C ADD X8, X8, X9, 0x4, LSL
	0x02D5ACA0 ADD X0, X8, 0x138
	0x02D5ACA4 LDP X8, X1, [X0]
	0x02D5ACA8 MOV X0, X19
	0x02D5ACAC BLR X8
	0x02D5ACB0 CBNZ X20, 0x2D5AD04
	0x02D5ACB4 LDP X20, X19, [X31 + 0x20]
	0x02D5ACB8 LDP X22, X21, [X31 + 0x10]
	0x02D5ACBC LDR X30, [X31], #0x30
	0x02D5ACC0 RET
	0x02D5ACC4 ADRP X0, 0x139E000
	0x02D5ACC8 LDR X0, [X0 + 0x528]
	0x02D5ACCC BL 0x1C16D08
	0x02D5ACD0 BL 0x1C16F10
	0x02D5ACD4 MOV X19, X0
	0x02D5ACD8 ADRP X0, 0x13C3000
	0x02D5ACDC LDR X0, [X0 + 0x928]
	0x02D5ACE0 BL 0x1C16D08
	0x02D5ACE4 MOV X1, X0
	0x02D5ACE8 MOV X0, X19
	0x02D5ACEC MOV X2, X31
	0x02D5ACF0 BL 0x330E100
	0x02D5ACF4 MOV X0, X19
	0x02D5ACF8 MOV X1, X20
	0x02D5ACFC BL 0x1C16DEC
	0x02D5AD00 BL 0x1C16F20
	0x02D5AD04 MOV X0, X20
	0x02D5AD08 BL 0x1C16F18
	0x02D5AD0C B 0x2D5AD18
	0x02D5AD10 B 0x2D5AD18
	0x02D5AD14 B 0x2D5AD18
	0x02D5AD18 MOV X21, X0
	0x02D5AD1C CMP W1, 0x1
	0x02D5AD20 B.NE 0x2D5AD38
	0x02D5AD24 MOV X0, X21
	0x02D5AD28 BL 0x3EB1AD0
	0x02D5AD2C LDR X20, [X0]
	0x02D5AD30 BL 0x3EB1AE0
	0x02D5AD34 B 0x2D5AC4C
	0x02D5AD38 MOV X20, X31
	0x02D5AD3C B 0x2D5AD44
	0x02D5AD40 MOV X21, X0
	0x02D5AD44 CBZ X19, 0x2D5ADA8
	0x02D5AD48 ADRP X10, 0x1399000
	0x02D5AD4C LDR X8, [X19]
	0x02D5AD50 LDR X10, [X10 + 0xE00]
	0x02D5AD54 LDRH W9, [X8 + 0x12E]
	0x02D5AD58 LDR X1, [X10]
	0x02D5AD5C CBZ X9, 0x2D5AD80
	0x02D5AD60 LDR X10, [X8 + 0xB0]
	0x02D5AD64 ADD X10, X10, 0x8
	0x02D5AD68 LDUR X11, [X10 - 0x8]
	0x02D5AD6C CMP X11, X1
	0x02D5AD70 B.EQ 0x2D5AD90
	0x02D5AD74 SUBS X9, X9, 0x1
	0x02D5AD78 ADD X10, X10, 0x10
	0x02D5AD7C B.NE 0x2D5AD68
	0x02D5AD80 MOV X0, X19
	0x02D5AD84 MOV W2, W31
	0x02D5AD88 BL 0x1C5C788
	0x02D5AD8C B 0x2D5AD9C
	0x02D5AD90 LDRSW X9, [X10]
	0x02D5AD94 ADD X8, X8, X9, 0x4, LSL
	0x02D5AD98 ADD X0, X8, 0x138
	0x02D5AD9C LDP X8, X1, [X0]
	0x02D5ADA0 MOV X0, X19
	0x02D5ADA4 BLR X8
	0x02D5ADA8 CBNZ X20, 0x2D5ADB4
	0x02D5ADAC MOV X0, X21
	0x02D5ADB0 BL 0x1D2C690
	0x02D5ADB4 MOV X0, X20
	0x02D5ADB8 BL 0x1C16F18
	0x02D5ADBC BL 0x1990590
	0x02D5ADC0 STP X30, X21, [X31 - 0x20]!
	0x02D5ADC4 STP X20, X19, [X31 + 0x10]
	0x02D5ADC8 MOV X19, X2
	0x02D5ADCC CBZ X1, 0x2D5AEB4
	0x02D5ADD0 LDR W8, [X0 + 0x20]
	0x02D5ADD4 MOV X20, X1
	0x02D5ADD8 MOV X21, X0
	0x02D5ADDC CBZ W8, 0x2D5AE64
	0x02D5ADE0 CMP X21, X20
	0x02D5ADE4 B.EQ 0x2D5AEA4
	0x02D5ADE8 LDR X8, [X19 + 0x20]
	0x02D5ADEC LDR X8, [X8 + 0xC0]
	0x02D5ADF0 LDR X0, [X8 + 0x28]
	0x02D5ADF4 LDRB W8, [X0 + 0x135]
	0x02D5ADF8 TBNZ X8, 0x0, 0x2D5AE00
	0x02D5ADFC BL 0x1C5C684
	0x02D5AE00 LDR X8, [X20]
	0x02D5AE04 LDRB W9, [X0 + 0x130]
	0x02D5AE08 LDRB W10, [X8 + 0x130]
	0x02D5AE0C CMP W10, W9
	0x02D5AE10 B.CC 0x2D5AE84
	0x02D5AE14 LDR X8, [X8 + 0xC8]
	0x02D5AE18 ADD X8, X8, X9, 0x3, LSL
	0x02D5AE1C LDUR X8, [X8 - 0x8]
	0x02D5AE20 CMP X8, X0
	0x02D5AE24 B.NE 0x2D5AE84
	0x02D5AE28 LDR X8, [X19 + 0x20]
	0x02D5AE2C MOV X0, X21
	0x02D5AE30 MOV X1, X20
	0x02D5AE34 LDR X8, [X8 + 0xC0]
	0x02D5AE38 LDR X2, [X8 + 0x48]
	0x02D5AE3C BL 0x2D5E2BC
	0x02D5AE40 TBZ X0, 0x0, 0x2D5AE84
	0x02D5AE44 LDR X8, [X19 + 0x20]
	0x02D5AE48 MOV X1, X20
	0x02D5AE4C LDP X20, X19, [X31 + 0x10]
	0x02D5AE50 MOV X0, X21
	0x02D5AE54 LDR X8, [X8 + 0xC0]
	0x02D5AE58 LDR X2, [X8 + 0x150]
	0x02D5AE5C LDP X30, X21, [X31], #0x20
	0x02D5AE60 B 0x2D5D210
	0x02D5AE64 LDR X8, [X19 + 0x20]
	0x02D5AE68 MOV X1, X20
	0x02D5AE6C LDP X20, X19, [X31 + 0x10]
	0x02D5AE70 MOV X0, X21
	0x02D5AE74 LDR X8, [X8 + 0xC0]
	0x02D5AE78 LDR X2, [X8 + 0x78]
	0x02D5AE7C LDP X30, X21, [X31], #0x20
	0x02D5AE80 B 0x2D5A56C
	0x02D5AE84 LDR X8, [X19 + 0x20]
	0x02D5AE88 MOV X1, X20
	0x02D5AE8C LDP X20, X19, [X31 + 0x10]
	0x02D5AE90 MOV X0, X21
	0x02D5AE94 LDR X8, [X8 + 0xC0]
	0x02D5AE98 LDR X2, [X8 + 0x158]
	0x02D5AE9C LDP X30, X21, [X31], #0x20
	0x02D5AEA0 B 0x2D5D354
	0x02D5AEA4 LDP X20, X19, [X31 + 0x10]
	0x02D5AEA8 MOV X0, X21
	0x02D5AEAC LDP X30, X21, [X31], #0x20
	0x02D5AEB0 B 0x2D59A54
	0x02D5AEB4 ADRP X0, 0x139E000
	0x02D5AEB8 LDR X0, [X0 + 0x528]
	0x02D5AEBC BL 0x1C16D08
	0x02D5AEC0 BL 0x1C16F10
	0x02D5AEC4 MOV X20, X0
	0x02D5AEC8 ADRP X0, 0x13C3000
	0x02D5AECC LDR X0, [X0 + 0x928]
	0x02D5AED0 BL 0x1C16D08
	0x02D5AED4 MOV X1, X0
	0x02D5AED8 MOV X0, X20
	0x02D5AEDC MOV X2, X31
	0x02D5AEE0 BL 0x330E100
	0x02D5AEE4 MOV X0, X20
	0x02D5AEE8 MOV X1, X19
	0x02D5AEEC BL 0x1C16DEC
	0x02D5AEF0 STP X30, X21, [X31 - 0x20]!
	0x02D5AEF4 STP X20, X19, [X31 + 0x10]
	0x02D5AEF8 MOV X19, X2
	0x02D5AEFC CBZ X1, 0x2D5AFF0
	0x02D5AF00 MOV X21, X1
	0x02D5AF04 MOV X20, X0
	0x02D5AF08 CMP X0, X1
	0x02D5AF0C MOVZ W0, 0x1
	0x02D5AF10 B.EQ 0x2D5AFC4
	0x02D5AF14 LDR W8, [X20 + 0x20]
	0x02D5AF18 CBZ W8, 0x2D5AFC4
	0x02D5AF1C LDR X8, [X19 + 0x20]
	0x02D5AF20 LDR X8, [X8 + 0xC0]
	0x02D5AF24 LDR X0, [X8 + 0x28]
	0x02D5AF28 LDRB W8, [X0 + 0x135]
	0x02D5AF2C TBNZ X8, 0x0, 0x2D5AF34
	0x02D5AF30 BL 0x1C5C684
	0x02D5AF34 LDR X8, [X21]
	0x02D5AF38 LDRB W9, [X0 + 0x130]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X8, [X0+16]
	015 Compare X8, 0
	016 JumpIfEqual {113}
	017 Move X8, [X2+32]
	018 Move X24, X2
	019 And X1, X1, 0xFFFF
	020 Move X19, X0
	021 Move X8, [X8+192]
	022 Move [X31+24], X1
	023 Move X2, [X8+176]
	024 Call 0x2D5F320, X0, X1
	025 Move X8, [X19+16]
	026 Compare X8, 0
	027 JumpIfEqual {193}
	028 Move W10, [X8+24]
	029 NotImplemented "Instruction SDIV not yet implemented."
	030 NotImplemented "Instruction MSUB not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X9, W9
	033 Add X8, X8, X9
	034 Move W8, [X8+32]
	035 Subtract W25, W8, 1
	036 Move X26, [X19+24]
	037 Move [X31+8], X9
	038 Compare X26, 0
	039 JumpIfEqual {193}
	040 Move X8, [X26+24]
	041 Move W27, W31
	042 Move TEMP, 0
	043 Not TEMP
	044 Move W20, TEMP
	045 Move W21, 12
	046 Move [X31+20], W0
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction UMADDL not yet implemented."
	049 Add X29, X29, 32
	050 Move W9, [X29]
	051 Move W28, W25
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X23, [X19+48]
	054 Compare X23, 0
	055 JumpIfEqual {193}
	056 Move X8, [X24+32]
	057 Move X22, X19
	058 Move X19, X24
	059 Move X8, [X8+192]
	060 Move X1, [X8+32]
	061 NotImplemented "Instruction NOP not yet implemented."
	062 NotImplemented "Instruction MADD not yet implemented."
	063 NotImplemented "Instruction LDRH not yet implemented."
	064 Move W9, [X1+309]
	065 Move TEMP, X9
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {72}
	069 Move X0, X1
	070 Call 0x1C5D684
	071 Move X1, X0
	072 Move X8, [X23]
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Compare X9, 0
	075 JumpIfEqual {82}
	076 Move X10, [X8+176]
	077 Add X10, X10, 8
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Subtract X9, X9, 1
	081 Add X10, X10, 16
	082 Move X0, X23
	083 Move W2, W31
	084 Call 0x1C5D788
	085 NotImplemented "Instruction LDRSW not yet implemented."
	086 Add X8, X8, X9
	087 Add X0, X8, 312
	088 Move X8, [X0]
	089 Move X3, [X0+8]
	090 Move X2, [X31+24]
	091 Move X0, X23
	092 Move X1, X24
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {128}
	098 Move X8, [X26+24]
	099 Move W0, [X31+20]
	100 Move X24, X19
	101 Move X19, X22
	102 NotImplemented "Instruction CMP not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 NotImplemented "Instruction MADD not yet implemented."
	105 Move W9, [X9+36]
	106 Add W27, W27, 1
	107 Move W20, W25
	108 Move W25, W9
	109 Move TEMP, X9
	110 And TEMP, TEMP, -2147483648
	111 Compare TEMP, -2147483648
	112 JumpIfNotEqual {47}
	113 Move W0, W31
	114 Move X20, [X31+112]
	115 Move X19, [X31+120]
	116 Move X22, [X31+96]
	117 Move X21, [X31+104]
	118 Move X24, [X31+80]
	119 Move X23, [X31+88]
	120 Move X26, [X31+64]
	121 Move X25, [X31+72]
	122 Move X28, [X31+48]
	123 Move X27, [X31+56]
	124 Move X29, [X31+32]
	125 Move X30, [X31+40]
	126 Add X31, X31, 128
	127 Return X0
	128 Move TEMP, X20
	129 And TEMP, TEMP, -2147483648
	130 Compare TEMP, -2147483648
	131 JumpIfEqual {142}
	132 Move W8, [X26+24]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move W9, 12
	136 Add X10, X26, 32
	137 NotImplemented "Instruction MADD not yet implemented."
	138 Move W11, [X11+4]
	139 NotImplemented "Instruction NOP not yet implemented."
	140 NotImplemented "Instruction UMADDL not yet implemented."
	141 Move [X9+4], W11
	142 Move W8, [X26+24]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X9, [X22+16]
	145 Move X11, [X31+8]
	146 Compare X9, 0
	147 JumpIfEqual {193}
	148 Move W10, [X9+24]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move W10, 12
	151 NotImplemented "Instruction MADD not yet implemented."
	152 Move W10, [X10+36]
	153 Add X9, X9, X11
	154 Add W10, W10, 1
	155 Move [X9+32], W10
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move TEMP, 0
	158 Not TEMP
	159 Move W8, TEMP
	160 Move [X29], W8
	161 Move W8, [X22+40]
	162 Move W9, 12
	163 NotImplemented "Instruction MADD not yet implemented."
	164 Move [X9+36], W8
	165 Move W8, [X22+32]
	166 Move W9, [X22+56]
	167 Subtract W8, W8, 1
	168 Add W9, W9, 1
	169 Move [X22+32], W8
	170 Move [X22+56], W9
	171 Move TEMP, 0
	172 Not TEMP
	173 Move W25, TEMP
	174 Move [X22+36], W31
	175 Move [X22+40], W25
	176 Move W0, 1
	177 Call 0x1C17F28
	178 Move X0, 0x139A000
	179 Move X0, [X0+1456]
	180 Call 0x1C17D08
	181 Call 0x1C17F10
	182 Move X19, X0
	183 Move X0, 0x13C5000
	184 Move X0, [X0+3840]
	185 Call 0x1C17D08
	186 Move X1, X0
	187 Move X0, X19
	188 Move X2, X31
	189 Call InvalidOperationException..ctor, X0, X1
	190 Move X0, X19
	191 Move X1, X24
	192 Call 0x1C17DEC
	193 Call 0x1C17F20

Method: System.Int32 get_Count()

Disassembly:
	0x02D5AF3C LDRB W10, [X8 + 0x130]
	0x02D5AF40 CMP W10, W9

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Boolean System.Collections.Generic.ICollection<T>.get_IsReadOnly()

Disassembly:
	0x02D5AF44 B.CC 0x2D5AF90
	0x02D5AF48 LDR X8, [X8 + 0xC8]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Collections.Generic.HashSet`1/Enumerator<T> GetEnumerator()

Disassembly:
	0x02D5AF4C ADD X8, X8, X9, 0x3, LSL
	0x02D5AF50 LDUR X8, [X8 - 0x8]
	0x02D5AF54 CMP X8, X0
	0x02D5AF58 B.NE 0x2D5AF90
	0x02D5AF5C LDR X8, [X19 + 0x20]
	0x02D5AF60 MOV X0, X20
	0x02D5AF64 MOV X1, X21
	0x02D5AF68 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X8], X31
	002 Move [X8+8], X31
	003 Move [X8+16], X31
	004 Move X9, [X1+32]
	005 Move X1, X0
	006 Move X0, X8
	007 Move X9, [X9+192]
	008 Move X2, [X9+224]
	009 Call 0x2BB3F18, X0, X1
	010 Return X0

Method: System.Collections.Generic.IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()

Disassembly:
	0x02D5AF6C LDR X2, [X8 + 0x48]
	0x02D5AF70 BL 0x2D5E2BC
	0x02D5AF74 TBZ X0, 0x0, 0x2D5AF90
	0x02D5AF78 LDR W8, [X20 + 0x20]
	0x02D5AF7C LDR W9, [X21 + 0x20]
	0x02D5AF80 CMP W8, W9
	0x02D5AF84 B.LE 0x2D5AFD0
	0x02D5AF88 MOV W0, W31
	0x02D5AF8C B 0x2D5AFC4
	0x02D5AF90 LDR X8, [X19 + 0x20]
	0x02D5AF94 MOV X0, X20
	0x02D5AF98 MOV X1, X21
	0x02D5AF9C MOV W2, W31
	0x02D5AFA0 LDR X8, [X8 + 0xC0]
	0x02D5AFA4 LDR X3, [X8 + 0x170]
	0x02D5AFA8 BL 0x2D5DBBC
	0x02D5AFAC LDR W8, [X20 + 0x20]
	0x02D5AFB0 CMP W8, W0
	0x02D5AFB4 CSET W8, EQ
	0x02D5AFB8 CMP X0, 0x0
	0x02D5AFBC CSET W9, GE
	0x02D5AFC0 AND W0, W9, W8, 0x0
	0x02D5AFC4 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move [X31+24], X31
	005 Move [X31+32], X31
	006 Move [X31+40], X31
	007 Move X8, [X1+32]
	008 Move X19, X1
	009 Move X1, X0
	010 Add X0, X31, 24
	011 Move X8, [X8+192]
	012 Move X2, [X8+224]
	013 Call 0x2BB3F18, X0, X1
	014 NotImplemented "Instruction LDUR not yet implemented."
	015 Move X8, [X31+40]
	016 Add X1, X31, 0
	017 Move [X31], V0
	018 Move [X31+16], X8
	019 Move X8, [X19+32]
	020 Move X8, [X8+192]
	021 Move X0, [X8+216]
	022 Call 0x1C17E04
	023 Move X30, [X31+48]
	024 Move X19, [X31+56]
	025 Add X31, X31, 64
	026 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x02D5AFC8 LDP X30, X21, [X31], #0x20
	0x02D5AFCC RET
	0x02D5AFD0 LDR X8, [X19 + 0x20]
	0x02D5AFD4 MOV X0, X20
	0x02D5AFD8 LDP X20, X19, [X31 + 0x10]
	0x02D5AFDC MOV X1, X21
	0x02D5AFE0 LDR X8, [X8 + 0xC0]
	0x02D5AFE4 LDR X2, [X8 + 0x168]
	0x02D5AFE8 LDP X30, X21, [X31], #0x20
	0x02D5AFEC B 0x2D5C9C0
	0x02D5AFF0 ADRP X0, 0x139E000
	0x02D5AFF4 LDR X0, [X0 + 0x528]
	0x02D5AFF8 BL 0x1C16D08
	0x02D5AFFC BL 0x1C16F10
	0x02D5B000 MOV X20, X0
	0x02D5B004 ADRP X0, 0x13C2000
	0x02D5B008 LDR X0, [X0 + 0x928]
	0x02D5B00C BL 0x1C16D08
	0x02D5B010 MOV X1, X0
	0x02D5B014 MOV X0, X20
	0x02D5B018 MOV X2, X31
	0x02D5B01C BL 0x330E100
	0x02D5B020 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move [X31+24], X31
	005 Move [X31+32], X31
	006 Move [X31+40], X31
	007 Move X8, [X1+32]
	008 Move X19, X1
	009 Move X1, X0
	010 Add X0, X31, 24
	011 Move X8, [X8+192]
	012 Move X2, [X8+224]
	013 Call 0x2BB3F18, X0, X1
	014 NotImplemented "Instruction LDUR not yet implemented."
	015 Move X8, [X31+40]
	016 Add X1, X31, 0
	017 Move [X31], V0
	018 Move [X31+16], X8
	019 Move X8, [X19+32]
	020 Move X8, [X8+192]
	021 Move X0, [X8+216]
	022 Call 0x1C17E04
	023 Move X30, [X31+48]
	024 Move X19, [X31+56]
	025 Add X31, X31, 64
	026 Return X0

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x02D5B024 MOV X1, X19
	0x02D5B028 BL 0x1C16DEC
	0x02D5B02C STR X30, [X31 - 0x30]!
	0x02D5B030 STP X22, X21, [X31 + 0x10]
	0x02D5B034 STP X20, X19, [X31 + 0x20]
	0x02D5B038 MOV X19, X2
	0x02D5B03C CBZ X1, 0x2D5B258
	0x02D5B040 MOV X21, X1
	0x02D5B044 MOV X20, X0
	0x02D5B048 CMP X0, X1
	0x02D5B04C B.EQ 0x2D5B190
	0x02D5B050 LDR X8, [X19 + 0x20]
	0x02D5B054 LDR X8, [X8 + 0xC0]
	0x02D5B058 LDR X1, [X8 + 0x60]
	0x02D5B05C LDRB W8, [X1 + 0x135]
	0x02D5B060 TBNZ X8, 0x0, 0x2D5B070
	0x02D5B064 MOV X0, X1
	0x02D5B068 BL 0x1C5C684
	0x02D5B06C MOV X1, X0
	0x02D5B070 MOV X0, X21
	0x02D5B074 BL 0x1C16E00
	0x02D5B078 CBZ X0, 0x2D5B198
	0x02D5B07C LDR X8, [X19 + 0x20]
	0x02D5B080 MOV X22, X0
	0x02D5B084 LDR X8, [X8 + 0xC0]
	0x02D5B088 LDR X1, [X8 + 0x60]
	0x02D5B08C LDRB W8, [X1 + 0x135]
	0x02D5B090 TBNZ X8, 0x0, 0x2D5B0A0
	0x02D5B094 MOV X0, X1
	0x02D5B098 BL 0x1C5C684
	0x02D5B09C MOV X1, X0
	0x02D5B0A0 LDR X8, [X22]
	0x02D5B0A4 LDRH W9, [X8 + 0x12E]
	0x02D5B0A8 CBZ X9, 0x2D5B0CC
	0x02D5B0AC LDR X10, [X8 + 0xB0]
	0x02D5B0B0 ADD X10, X10, 0x8
	0x02D5B0B4 LDUR X11, [X10 - 0x8]
	0x02D5B0B8 CMP X11, X1
	0x02D5B0BC B.EQ 0x2D5B0DC
	0x02D5B0C0 SUBS X9, X9, 0x1
	0x02D5B0C4 ADD X10, X10, 0x10
	0x02D5B0C8 B.NE 0x2D5B0B4
	0x02D5B0CC MOV X0, X22
	0x02D5B0D0 MOV W2, W31
	0x02D5B0D4 BL 0x1C5C788
	0x02D5B0D8 B 0x2D5B0E8
	0x02D5B0DC LDRSW X9, [X10]
	0x02D5B0E0 ADD X8, X8, X9, 0x4, LSL
	0x02D5B0E4 ADD X0, X8, 0x138
	0x02D5B0E8 LDP X8, X1, [X0]
	0x02D5B0EC MOV X0, X22
	0x02D5B0F0 BLR X8
	0x02D5B0F4 CBZ W0, 0x2D5B248
	0x02D5B0F8 LDR X8, [X19 + 0x20]
	0x02D5B0FC LDR W9, [X20 + 0x20]
	0x02D5B100 LDR X8, [X8 + 0xC0]
	0x02D5B104 CBZ W9, 0x2D5B1D4
	0x02D5B108 LDR X0, [X8 + 0x28]
	0x02D5B10C LDRB W8, [X0 + 0x135]
	0x02D5B110 TBNZ X8, 0x0, 0x2D5B118
	0x02D5B114 BL 0x1C5C684
	0x02D5B118 LDR X8, [X21]
	0x02D5B11C LDRB W9, [X0 + 0x130]
	0x02D5B120 LDRB W10, [X8 + 0x130]
	0x02D5B124 CMP W10, W9
	0x02D5B128 B.CC 0x2D5B198
	0x02D5B12C LDR X8, [X8 + 0xC8]
	0x02D5B130 ADD X8, X8, X9, 0x3, LSL
	0x02D5B134 LDUR X8, [X8 - 0x8]
	0x02D5B138 CMP X8, X0
	0x02D5B13C B.NE 0x2D5B198
	0x02D5B140 LDR X8, [X19 + 0x20]
	0x02D5B144 MOV X0, X20
	0x02D5B148 MOV X1, X21
	0x02D5B14C LDR X8, [X8 + 0xC0]
	0x02D5B150 LDR X2, [X8 + 0x48]
	0x02D5B154 BL 0x2D5E2BC
	0x02D5B158 TBZ X0, 0x0, 0x2D5B198
	0x02D5B15C LDR W8, [X20 + 0x20]
	0x02D5B160 LDR W9, [X21 + 0x20]
	0x02D5B164 CMP W8, W9
	0x02D5B168 B.GE 0x2D5B190
	0x02D5B16C LDR X8, [X19 + 0x20]
	0x02D5B170 MOV X0, X20
	0x02D5B174 MOV X1, X21
	0x02D5B178 LDP X20, X19, [X31 + 0x20]
	0x02D5B17C LDR X8, [X8 + 0xC0]
	0x02D5B180 LDP X22, X21, [X31 + 0x10]
	0x02D5B184 LDR X2, [X8 + 0x168]
	0x02D5B188 LDR X30, [X31], #0x30
	0x02D5B18C B 0x2D5C9C0
	0x02D5B190 MOV W0, W31
	0x02D5B194 B 0x2D5B248
	0x02D5B198 LDR X8, [X19 + 0x20]
	0x02D5B19C MOV X0, X20
	0x02D5B1A0 MOV X1, X21
	0x02D5B1A4 MOV W2, W31
	0x02D5B1A8 LDR X8, [X8 + 0xC0]
	0x02D5B1AC LDR X3, [X8 + 0x170]
	0x02D5B1B0 BL 0x2D5DBBC
	0x02D5B1B4 LDR W9, [X20 + 0x20]
	0x02D5B1B8 MOV X8, X0
	0x02D5B1BC MOV W0, W31
	0x02D5B1C0 CMP W9, W8
	0x02D5B1C4 B.NE 0x2D5B248
	0x02D5B1C8 UBFM X8, X8, 0x20, 0x3F
	0x02D5B1CC CMP W8, 0x0
	0x02D5B1D0 B 0x2D5B244
	0x02D5B1D4 LDR X1, [X8 + 0x60]
	0x02D5B1D8 LDRB W8, [X1 + 0x135]
	0x02D5B1DC TBNZ X8, 0x0, 0x2D5B1EC
	0x02D5B1E0 MOV X0, X1
	0x02D5B1E4 BL 0x1C5C684
	0x02D5B1E8 MOV X1, X0
	0x02D5B1EC LDR X8, [X22]
	0x02D5B1F0 LDRH W9, [X8 + 0x12E]
	0x02D5B1F4 CBZ X9, 0x2D5B218
	0x02D5B1F8 LDR X10, [X8 + 0xB0]
	0x02D5B1FC ADD X10, X10, 0x8
	0x02D5B200 LDUR X11, [X10 - 0x8]
	0x02D5B204 CMP X11, X1
	0x02D5B208 B.EQ 0x2D5B228
	0x02D5B20C SUBS X9, X9, 0x1
	0x02D5B210 ADD X10, X10, 0x10
	0x02D5B214 B.NE 0x2D5B200
	0x02D5B218 MOV X0, X22
	0x02D5B21C MOV W2, W31
	0x02D5B220 BL 0x1C5C788
	0x02D5B224 B 0x2D5B234
	0x02D5B228 LDRSW X9, [X10]
	0x02D5B22C ADD X8, X8, X9, 0x4, LSL
	0x02D5B230 ADD X0, X8, 0x138
	0x02D5B234 LDP X8, X1, [X0]
	0x02D5B238 MOV X0, X22
	0x02D5B23C BLR X8

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x1681000
	011 Move W8, [X22+2229]
	012 Move X19, X4
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0x1399000
	020 Move X0, [X0+1728]
	021 Call 0x1C17CF4
	022 Move X0, 0x13C4000
	023 Move X0, [X0+3848]
	024 Call 0x1C17CF4
	025 Move X0, 0x13C3000
	026 Move X0, [X0+720]
	027 Call 0x1C17CF4
	028 Move X0, 0x13A6000
	029 Move X0, [X0+336]
	030 Call 0x1C17CF4
	031 Move X0, 0x139A000
	032 Move X0, [X0+672]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+2229], W8
	036 Compare X20, 0
	037 JumpIfEqual {144}
	038 Move X8, 0x139A000
	039 Move X8, [X8+672]
	040 Move W2, [X21+56]
	041 Move X24, 0x1399000
	042 Move X26, 0x13C3000
	043 Move X1, [X8]
	044 Move X25, 0x13A6000
	045 Move X24, [X24+1728]
	046 Move X26, [X26+720]
	047 Move X25, [X25+336]
	048 Move X0, X20
	049 Move X3, X31
	050 Call SerializationInfo.AddValue, X0, X1, X2
	051 Move X8, [X19+32]
	052 Move X0, [X24]
	053 Move X22, [X21+48]
	054 Move X8, [X8+192]
	055 Move W9, [X0+224]
	056 Move X23, [X8+240]
	057 Compare W9, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X23
	061 Move X1, X31
	062 Call Type.GetTypeFromHandle, X0
	063 Move X1, [X26]
	064 Move X3, X0
	065 Move X0, X20
	066 Move X2, X22
	067 Move X4, X31
	068 Call SerializationInfo.AddValue, X0, X1, X2, X3
	069 Move X8, [X21+16]
	070 Move X1, [X25]
	071 Compare X8, 0
	072 JumpIfEqual {74}
	073 Move W2, [X8+24]
	074 Move W2, W31
	075 Move X0, X20
	076 Move X3, X31
	077 Call SerializationInfo.AddValue, X0, X1, X2
	078 Move X8, [X21+16]
	079 Compare X8, 0
	080 JumpIfEqual {134}
	081 Move X8, [X19+32]
	082 Move W22, [X21+32]
	083 Move X8, [X8+192]
	084 Move X0, [X8+248]
	085 Move W8, [X0+309]
	086 Move TEMP, X8
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {91}
	090 Call 0x1C5D684
	091 Move X23, 0x13C4000
	092 Move X23, [X23+3848]
	093 Move W1, W22
	094 Call 0x1C17D6C
	095 Move X8, [X19+32]
	096 Move W3, [X21+32]
	097 Move X22, X0
	098 Move X0, X21
	099 Move X8, [X8+192]
	100 Move X1, X22
	101 Move W2, W31
	102 Move X8, [X8+256]
	103 Move X8, [X8+32]
	104 Move X8, [X8+192]
	105 Move X4, [X8+200]
	106 Call 0x2D5CBC0, X0, X1, X2, X3
	107 Move X8, [X19+32]
	108 Move X0, [X24]
	109 Move X8, [X8+192]
	110 Move W9, [X0+224]
	111 Move X19, [X8+264]
	112 Compare W9, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1C17DFC
	115 Move X0, X19
	116 Move X1, X31
	117 Call Type.GetTypeFromHandle, X0
	118 Move X1, [X23]
	119 Move X3, X0
	120 Move X0, X20
	121 Move X2, X22
	122 Move X20, [X31+64]
	123 Move X19, [X31+72]
	124 Move X22, [X31+48]
	125 Move X21, [X31+56]
	126 Move X24, [X31+32]
	127 Move X23, [X31+40]
	128 Move X26, [X31+16]
	129 Move X25, [X31+24]
	130 Move X4, X31
	131 Move X30, [X31+80]
	132 Call SerializationInfo.AddValue, X0, X1, X2, X3
	133 Return 
	134 Move X20, [X31+64]
	135 Move X19, [X31+72]
	136 Move X22, [X31+48]
	137 Move X21, [X31+56]
	138 Move X24, [X31+32]
	139 Move X23, [X31+40]
	140 Move X26, [X31+16]
	141 Move X25, [X31+24]
	142 Move X30, [X31+80]
	143 Return 
	144 Move X0, 0x139E000
	145 Move X0, [X0+1320]
	146 Call 0x1C17D08
	147 Call 0x1C17F10
	148 Move X20, X0
	149 Move X0, 0x13C3000
	150 Move X0, [X0+728]
	151 Call 0x1C17D08
	152 Move X1, X0
	153 Move X0, X20
	154 Move X2, X31
	155 Call ArgumentNullException..ctor, X0, X1
	156 Move X0, X20
	157 Move X1, X19
	158 Call 0x1C17DEC

Method: System.Void OnDeserialization(System.Object sender)

Disassembly:
	0x02D5B240 CMP W0, 0x0
	0x02D5B244 CSET W0, GT
	0x02D5B248 LDP X20, X19, [X31 + 0x20]
	0x02D5B24C LDP X22, X21, [X31 + 0x10]
	0x02D5B250 LDR X30, [X31], #0x30
	0x02D5B254 RET
	0x02D5B258 ADRP X0, 0x139D000
	0x02D5B25C LDR X0, [X0 + 0x528]
	0x02D5B260 BL 0x1C16D08
	0x02D5B264 BL 0x1C16F10
	0x02D5B268 MOV X20, X0
	0x02D5B26C ADRP X0, 0x13C2000
	0x02D5B270 LDR X0, [X0 + 0x928]
	0x02D5B274 BL 0x1C16D08
	0x02D5B278 MOV X1, X0
	0x02D5B27C MOV X0, X20
	0x02D5B280 MOV X2, X31
	0x02D5B284 BL 0x330E100
	0x02D5B288 MOV X0, X20
	0x02D5B28C MOV X1, X19
	0x02D5B290 BL 0x1C16DEC
	0x02D5B294 STR X30, [X31 - 0x30]!
	0x02D5B298 STP X22, X21, [X31 + 0x10]
	0x02D5B29C STP X20, X19, [X31 + 0x20]
	0x02D5B2A0 MOV X19, X2
	0x02D5B2A4 CBZ X1, 0x2D5B40C
	0x02D5B2A8 MOV X20, X1
	0x02D5B2AC MOV X21, X0
	0x02D5B2B0 CMP X0, X1
	0x02D5B2B4 B.EQ 0x2D5B3D4
	0x02D5B2B8 LDR X8, [X19 + 0x20]
	0x02D5B2BC LDR X8, [X8 + 0xC0]
	0x02D5B2C0 LDR X1, [X8 + 0x60]
	0x02D5B2C4 LDRB W8, [X1 + 0x135]
	0x02D5B2C8 TBNZ X8, 0x0, 0x2D5B2D8
	0x02D5B2CC MOV X0, X1
	0x02D5B2D0 BL 0x1C5C684
	0x02D5B2D4 MOV X1, X0
	0x02D5B2D8 MOV X0, X20
	0x02D5B2DC BL 0x1C16E00
	0x02D5B2E0 CBZ X0, 0x2D5B3E8
	0x02D5B2E4 LDR X8, [X19 + 0x20]
	0x02D5B2E8 MOV X22, X0
	0x02D5B2EC LDR X8, [X8 + 0xC0]
	0x02D5B2F0 LDR X1, [X8 + 0x60]
	0x02D5B2F4 LDRB W8, [X1 + 0x135]
	0x02D5B2F8 TBNZ X8, 0x0, 0x2D5B308
	0x02D5B2FC MOV X0, X1
	0x02D5B300 BL 0x1C5C684
	0x02D5B304 MOV X1, X0
	0x02D5B308 LDR X8, [X22]
	0x02D5B30C LDRH W9, [X8 + 0x12E]
	0x02D5B310 CBZ X9, 0x2D5B334
	0x02D5B314 LDR X10, [X8 + 0xB0]
	0x02D5B318 ADD X10, X10, 0x8
	0x02D5B31C LDUR X11, [X10 - 0x8]
	0x02D5B320 CMP X11, X1
	0x02D5B324 B.EQ 0x2D5B344
	0x02D5B328 SUBS X9, X9, 0x1
	0x02D5B32C ADD X10, X10, 0x10
	0x02D5B330 B.NE 0x2D5B31C
	0x02D5B334 MOV X0, X22
	0x02D5B338 MOV W2, W31
	0x02D5B33C BL 0x1C5C788
	0x02D5B340 B 0x2D5B350
	0x02D5B344 LDRSW X9, [X10]
	0x02D5B348 ADD X8, X8, X9, 0x4, LSL
	0x02D5B34C ADD X0, X8, 0x138
	0x02D5B350 LDP X8, X1, [X0]
	0x02D5B354 MOV X0, X22
	0x02D5B358 BLR X8
	0x02D5B35C CBZ W0, 0x2D5B3D4
	0x02D5B360 LDR X8, [X19 + 0x20]
	0x02D5B364 LDR X8, [X8 + 0xC0]
	0x02D5B368 LDR X0, [X8 + 0x28]
	0x02D5B36C LDRB W8, [X0 + 0x135]
	0x02D5B370 TBNZ X8, 0x0, 0x2D5B378
	0x02D5B374 BL 0x1C5C684
	0x02D5B378 LDR X8, [X20]
	0x02D5B37C LDRB W9, [X0 + 0x130]
	0x02D5B380 LDRB W10, [X8 + 0x130]
	0x02D5B384 CMP W10, W9
	0x02D5B388 B.CC 0x2D5B3E8
	0x02D5B38C LDR X8, [X8 + 0xC8]
	0x02D5B390 ADD X8, X8, X9, 0x3, LSL
	0x02D5B394 LDUR X8, [X8 - 0x8]
	0x02D5B398 CMP X8, X0
	0x02D5B39C B.NE 0x2D5B3E8
	0x02D5B3A0 LDR X8, [X19 + 0x20]
	0x02D5B3A4 MOV X0, X21
	0x02D5B3A8 MOV X1, X20
	0x02D5B3AC LDR X8, [X8 + 0xC0]
	0x02D5B3B0 LDR X2, [X8 + 0x48]
	0x02D5B3B4 BL 0x2D5E2BC
	0x02D5B3B8 TBZ X0, 0x0, 0x2D5B3E8
	0x02D5B3BC LDR W8, [X20 + 0x20]
	0x02D5B3C0 LDR W9, [X21 + 0x20]
	0x02D5B3C4 CMP W8, W9
	0x02D5B3C8 B.LE 0x2D5B3E8
	0x02D5B3CC MOV W0, W31
	0x02D5B3D0 B 0x2D5B3D8
	0x02D5B3D4 MOVZ W0, 0x1
	0x02D5B3D8 LDP X20, X19, [X31 + 0x20]
	0x02D5B3DC LDP X22, X21, [X31 + 0x10]
	0x02D5B3E0 LDR X30, [X31], #0x30
	0x02D5B3E4 RET
	0x02D5B3E8 LDR X8, [X19 + 0x20]
	0x02D5B3EC MOV X0, X21
	0x02D5B3F0 MOV X1, X20
	0x02D5B3F4 LDP X20, X19, [X31 + 0x20]
	0x02D5B3F8 LDR X8, [X8 + 0xC0]
	0x02D5B3FC LDP X22, X21, [X31 + 0x10]
	0x02D5B400 LDR X2, [X8 + 0x180]
	0x02D5B404 LDR X30, [X31], #0x30
	0x02D5B408 B 0x2D5C6B4
	0x02D5B40C ADRP X0, 0x139D000
	0x02D5B410 LDR X0, [X0 + 0x528]
	0x02D5B414 BL 0x1C16D08
	0x02D5B418 BL 0x1C16F10
	0x02D5B41C MOV X20, X0
	0x02D5B420 ADRP X0, 0x13C2000
	0x02D5B424 LDR X0, [X0 + 0x928]
	0x02D5B428 BL 0x1C16D08
	0x02D5B42C MOV X1, X0
	0x02D5B430 MOV X0, X20
	0x02D5B434 MOV X2, X31
	0x02D5B438 BL 0x330E100
	0x02D5B43C MOV X0, X20
	0x02D5B440 MOV X1, X19
	0x02D5B444 BL 0x1C16DEC
	0x02D5B448 STR X30, [X31 - 0x30]!
	0x02D5B44C STP X22, X21, [X31 + 0x10]
	0x02D5B450 STP X20, X19, [X31 + 0x20]
	0x02D5B454 MOV X19, X2
	0x02D5B458 CBZ X1, 0x2D5B608
	0x02D5B45C MOV X21, X1
	0x02D5B460 MOV X20, X0
	0x02D5B464 CMP X0, X1
	0x02D5B468 MOV W0, W31
	0x02D5B46C B.EQ 0x2D5B5F0
	0x02D5B470 LDR W8, [X20 + 0x20]
	0x02D5B474 CBZ W8, 0x2D5B5F0
	0x02D5B478 LDR X8, [X19 + 0x20]
	0x02D5B47C LDR X8, [X8 + 0xC0]
	0x02D5B480 LDR X1, [X8 + 0x60]
	0x02D5B484 LDRB W8, [X1 + 0x135]
	0x02D5B488 TBNZ X8, 0x0, 0x2D5B498
	0x02D5B48C MOV X0, X1
	0x02D5B490 BL 0x1C5C684
	0x02D5B494 MOV X1, X0
	0x02D5B498 MOV X0, X21
	0x02D5B49C BL 0x1C16E00
	0x02D5B4A0 CBZ X0, 0x2D5B5B0
	0x02D5B4A4 LDR X8, [X19 + 0x20]
	0x02D5B4A8 MOV X22, X0
	0x02D5B4AC LDR X8, [X8 + 0xC0]
	0x02D5B4B0 LDR X1, [X8 + 0x60]
	0x02D5B4B4 LDRB W8, [X1 + 0x135]
	0x02D5B4B8 TBNZ X8, 0x0, 0x2D5B4C8
	0x02D5B4BC MOV X0, X1
	0x02D5B4C0 BL 0x1C5C684
	0x02D5B4C4 MOV X1, X0
	0x02D5B4C8 LDR X8, [X22]
	0x02D5B4CC LDRH W9, [X8 + 0x12E]
	0x02D5B4D0 CBZ X9, 0x2D5B4F4
	0x02D5B4D4 LDR X10, [X8 + 0xB0]
	0x02D5B4D8 ADD X10, X10, 0x8
	0x02D5B4DC LDUR X11, [X10 - 0x8]
	0x02D5B4E0 CMP X11, X1
	0x02D5B4E4 B.EQ 0x2D5B504
	0x02D5B4E8 SUBS X9, X9, 0x1
	0x02D5B4EC ADD X10, X10, 0x10
	0x02D5B4F0 B.NE 0x2D5B4DC
	0x02D5B4F4 MOV X0, X22
	0x02D5B4F8 MOV W2, W31
	0x02D5B4FC BL 0x1C5C788
	0x02D5B500 B 0x2D5B510
	0x02D5B504 LDRSW X9, [X10]
	0x02D5B508 ADD X8, X8, X9, 0x4, LSL
	0x02D5B50C ADD X0, X8, 0x138
	0x02D5B510 LDP X8, X1, [X0]
	0x02D5B514 MOV X0, X22
	0x02D5B518 BLR X8
	0x02D5B51C CBZ W0, 0x2D5B5EC
	0x02D5B520 LDR X8, [X19 + 0x20]
	0x02D5B524 LDR X8, [X8 + 0xC0]
	0x02D5B528 LDR X0, [X8 + 0x28]
	0x02D5B52C LDRB W8, [X0 + 0x135]
	0x02D5B530 TBNZ X8, 0x0, 0x2D5B538
	0x02D5B534 BL 0x1C5C684
	0x02D5B538 LDR X8, [X21]
	0x02D5B53C LDRB W9, [X0 + 0x130]
	0x02D5B540 LDRB W10, [X8 + 0x130]
	0x02D5B544 CMP W10, W9
	0x02D5B548 B.CC 0x2D5B5B0
	0x02D5B54C LDR X8, [X8 + 0xC8]
	0x02D5B550 ADD X8, X8, X9, 0x3, LSL
	0x02D5B554 LDUR X8, [X8 - 0x8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1681000
	009 Move W8, [X21+2230]
	010 Move X19, X2
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x139A000
	017 Move X0, [X0+3672]
	018 Call 0x1C17CF4
	019 Move X0, 0x1399000
	020 Move X0, [X0+1728]
	021 Call 0x1C17CF4
	022 Move X0, 0x13C4000
	023 Move X0, [X0+3848]
	024 Call 0x1C17CF4
	025 Move X0, 0x13C3000
	026 Move X0, [X0+720]
	027 Call 0x1C17CF4
	028 Move X0, 0x13A6000
	029 Move X0, [X0+336]
	030 Call 0x1C17CF4
	031 Move X0, 0x139A000
	032 Move X0, [X0+672]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+2230], W8
	036 Move X0, [X20+64]
	037 Compare X0, 0
	038 JumpIfEqual {199}
	039 Move X8, 0x13A6000
	040 Move X8, [X8+336]
	041 Move X24, 0x1399000
	042 Move X2, X31
	043 Move X1, [X8]
	044 Move X24, [X24+1728]
	045 Call SerializationInfo.GetInt32, X0, X1
	046 Move X9, [X19+32]
	047 Move X8, [X24]
	048 Move X22, [X20+64]
	049 Move W21, W0
	050 Move X9, [X9+192]
	051 Move W10, [X8+224]
	052 Move X23, [X9+272]
	053 Compare W10, 0
	054 JumpIfNotEqual {57}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 Move X0, X23
	058 Move X1, X31
	059 Call Type.GetTypeFromHandle, X0
	060 Compare X22, 0
	061 JumpIfEqual {208}
	062 Move X8, 0x13C3000
	063 Move X8, [X8+720]
	064 Move X2, X0
	065 Move X0, X22
	066 Move X3, X31
	067 Move X1, [X8]
	068 Call SerializationInfo.GetValue, X0, X1, X2
	069 Move X8, [X19+32]
	070 Move X22, X0
	071 Move X8, [X8+192]
	072 Move X23, [X8+32]
	073 Move W8, [X23+309]
	074 Move TEMP, X8
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {81}
	078 Move X0, X23
	079 Call 0x1C5D684
	080 Move X23, X0
	081 Compare X22, 0
	082 JumpIfEqual {88}
	083 Move X0, X22
	084 Move X1, X23
	085 Call 0x1C17E00
	086 Compare X0, 0
	087 JumpIfNotEqual {89}
	088 Move X0, X31
	089 Move [X20+48], X0
	090 Move X8, [X19+32]
	091 Move X8, [X8+192]
	092 Move X23, [X8+32]
	093 Move W8, [X23+309]
	094 Move TEMP, X8
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {101}
	098 Move X0, X23
	099 Call 0x1C5D684
	100 Move X23, X0
	101 Compare X22, 0
	102 JumpIfEqual {108}
	103 Move X0, X22
	104 Move X1, X23
	105 Call 0x1C17E00
	106 Compare X0, 0
	107 JumpIfEqual {209}
	108 Move TEMP, 0
	109 Not TEMP
	110 Move W8, TEMP
	111 Move [X20+40], W8
	112 Compare W21, 0
	113 JumpIfEqual {188}
	114 Move X8, 0x139A000
	115 Move X8, [X8+3672]
	116 Move W1, W21
	117 Move X0, [X8]
	118 Call 0x1C17D6C
	119 Move [X20+16], X0
	120 Move X8, [X19+32]
	121 Move X8, [X8+192]
	122 Move X0, [X8+280]
	123 Move W8, [X0+309]
	124 Move TEMP, X8
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {129}
	128 Call 0x1C5D684
	129 Move W1, W21
	130 Call 0x1C17D6C
	131 Move [X20+24], X0
	132 Move X8, [X19+32]
	133 Move X0, [X24]
	134 Move X21, [X20+64]
	135 Move X8, [X8+192]
	136 Move W9, [X0+224]
	137 Move X22, [X8+264]
	138 Compare W9, 0
	139 JumpIfNotEqual {141}
	140 Call 0x1C17DFC
	141 Move X0, X22
	142 Move X1, X31
	143 Call Type.GetTypeFromHandle, X0
	144 Compare X21, 0
	145 JumpIfEqual {208}
	146 Move X8, 0x13C4000
	147 Move X8, [X8+3848]
	148 Move X2, X0
	149 Move X0, X21
	150 Move X3, X31
	151 Move X1, [X8]
	152 Call SerializationInfo.GetValue, X0, X1, X2
	153 Move X8, [X19+32]
	154 Move X23, X0
	155 Move X8, [X8+192]
	156 Move X22, [X8+192]
	157 Move W8, [X22+309]
	158 Move TEMP, X8
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfEqual {165}
	162 Move X0, X22
	163 Call 0x1C5D684
	164 Move X22, X0
	165 Compare X23, 0
	166 JumpIfEqual {212}
	167 Move X0, X23
	168 Move X1, X22
	169 Call 0x1C17E00
	170 Compare X0, 0
	171 JumpIfEqual {227}
	172 Move X8, [X0+24]
	173 Move X21, X0
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X22, X31
	176 And X8, X8, 0
	177 Add X23, X21, 32
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X8, [X19+32]
	180 NotImplemented "Instruction LDRH not yet implemented."
	181 Move X0, X20
	182 Move X8, [X8+192]
	183 Move X2, [X8+168]
	184 Call 0x2D5D318, X0, X1
	185 Move W8, [X21+24]
	186 Add X22, X22, 1
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move [X20+16], X31
	189 Move X0, [X20+64]
	190 Compare X0, 0
	191 JumpIfEqual {208}
	192 Move X8, 0x139A000
	193 Move X8, [X8+672]
	194 Move X2, X31
	195 Move X1, [X8]
	196 Call SerializationInfo.GetInt32, X0, X1
	197 Move [X20+56], W0
	198 Move [X20+64], X31
	199 Move X20, [X31+48]
	200 Move X19, [X31+56]
	201 Move X22, [X31+32]
	202 Move X21, [X31+40]
	203 Move X24, [X31+16]
	204 Move X23, [X31+24]
	205 Move X30, [X31+64]
	206 Return 
	207 Call 0x1C17F28
	208 Call 0x1C17F20
	209 Move X0, X22
	210 Move X1, X23
	211 Call 0x1C181E0
	212 Move X0, 0x13C3000
	213 Move X0, [X0+736]
	214 Call 0x1C17D08
	215 Call 0x1C17F10
	216 Move X20, X0
	217 Move X0, 0x13C4000
	218 Move X0, [X0+3856]
	219 Call 0x1C17D08
	220 Move X1, X0
	221 Move X0, X20
	222 Move X2, X31
	223 Call SerializationException..ctor, X0, X1
	224 Move X0, X20
	225 Move X1, X19
	226 Call 0x1C17DEC
	227 Move X0, X23
	228 Move X1, X22
	229 Call 0x1C181E0

Method: System.Boolean Add(T item)

Disassembly:
	0x02D5B558 CMP X8, X0
	0x02D5B55C B.NE 0x2D5B5B0
	0x02D5B560 LDR X8, [X19 + 0x20]
	0x02D5B564 MOV X0, X20
	0x02D5B568 MOV X1, X21

ISIL:
	001 Move X8, [X2+32]
	002 And X1, X1, 0xFFFF
	003 Move X8, [X8+192]
	004 Move X2, [X8+168]
	005 Call 0x2D5D318, X0, X1
	006 Return X0

Method: System.Void UnionWith(System.Collections.Generic.IEnumerable`1<T> other)

Disassembly:
	0x02D5B56C LDR X8, [X8 + 0xC0]
	0x02D5B570 LDR X2, [X8 + 0x48]
	0x02D5B574 BL 0x2D5E2BC
	0x02D5B578 TBZ X0, 0x0, 0x2D5B5B0
	0x02D5B57C LDR W8, [X21 + 0x20]
	0x02D5B580 LDR W9, [X20 + 0x20]
	0x02D5B584 CMP W8, W9
	0x02D5B588 B.GE 0x2D5B600
	0x02D5B58C LDR X8, [X19 + 0x20]
	0x02D5B590 MOV X0, X20
	0x02D5B594 MOV X1, X21
	0x02D5B598 LDP X20, X19, [X31 + 0x20]
	0x02D5B59C LDR X8, [X8 + 0xC0]
	0x02D5B5A0 LDP X22, X21, [X31 + 0x10]
	0x02D5B5A4 LDR X2, [X8 + 0x180]
	0x02D5B5A8 LDR X30, [X31], #0x30
	0x02D5B5AC B 0x2D5C6B4
	0x02D5B5B0 LDR X8, [X19 + 0x20]
	0x02D5B5B4 MOVZ W2, 0x1
	0x02D5B5B8 MOV X0, X20
	0x02D5B5BC MOV X1, X21
	0x02D5B5C0 LDR X8, [X8 + 0xC0]
	0x02D5B5C4 LDR X3, [X8 + 0x170]
	0x02D5B5C8 BL 0x2D5DBBC
	0x02D5B5CC LDR W8, [X20 + 0x20]
	0x02D5B5D0 UBFM X9, X0, 0x20, 0x3F
	0x02D5B5D4 CMP W8, W0
	0x02D5B5D8 CSET W8, GT
	0x02D5B5DC CMP X9, 0x0
	0x02D5B5E0 CSET W9, EQ
	0x02D5B5E4 AND W0, W9, W8, 0x0
	0x02D5B5E8 B 0x2D5B5F0
	0x02D5B5EC MOVZ W0, 0x1
	0x02D5B5F0 LDP X20, X19, [X31 + 0x20]
	0x02D5B5F4 LDP X22, X21, [X31 + 0x10]
	0x02D5B5F8 LDR X30, [X31], #0x30
	0x02D5B5FC RET
	0x02D5B600 MOV W0, W31
	0x02D5B604 B 0x2D5B5F0
	0x02D5B608 ADRP X0, 0x139D000
	0x02D5B60C LDR X0, [X0 + 0x528]
	0x02D5B610 BL 0x1C16D08
	0x02D5B614 BL 0x1C16F10
	0x02D5B618 MOV X20, X0
	0x02D5B61C ADRP X0, 0x13C2000
	0x02D5B620 LDR X0, [X0 + 0x928]
	0x02D5B624 BL 0x1C16D08
	0x02D5B628 MOV X1, X0
	0x02D5B62C MOV X0, X20
	0x02D5B630 MOV X2, X31
	0x02D5B634 BL 0x330E100
	0x02D5B638 MOV X0, X20
	0x02D5B63C MOV X1, X19
	0x02D5B640 BL 0x1C16DEC
	0x02D5B644 STP X30, X23, [X31 - 0x30]!
	0x02D5B648 STP X22, X21, [X31 + 0x10]
	0x02D5B64C STP X20, X19, [X31 + 0x20]
	0x02D5B650 ADRP X22, 0x1680000
	0x02D5B654 LDRB W8, [X22 + 0x8B9]
	0x02D5B658 MOV X20, X2
	0x02D5B65C MOV X19, X1
	0x02D5B660 MOV X21, X0
	0x02D5B664 TBNZ X8, 0x0, 0x2D5B688
	0x02D5B668 ADRP X0, 0x1398000
	0x02D5B66C LDR X0, [X0 + 0xE00]
	0x02D5B670 BL 0x1C16CF4
	0x02D5B674 ADRP X0, 0x1398000
	0x02D5B678 LDR X0, [X0 + 0xE18]
	0x02D5B67C BL 0x1C16CF4
	0x02D5B680 MOVZ W8, 0x1
	0x02D5B684 STRB W8, [X22 + 0x8B9]
	0x02D5B688 CBZ X19, 0x2D5B8B0
	0x02D5B68C LDR W8, [X21 + 0x20]
	0x02D5B690 CBZ W8, 0x2D5B6F8
	0x02D5B694 CMP X21, X19
	0x02D5B698 B.EQ 0x2D5B700
	0x02D5B69C LDR X8, [X20 + 0x20]
	0x02D5B6A0 LDR X8, [X8 + 0xC0]
	0x02D5B6A4 LDR X1, [X8 + 0x38]
	0x02D5B6A8 LDRB W8, [X1 + 0x135]
	0x02D5B6AC TBNZ X8, 0x0, 0x2D5B6BC
	0x02D5B6B0 MOV X0, X1
	0x02D5B6B4 BL 0x1C5C684
	0x02D5B6B8 MOV X1, X0
	0x02D5B6BC LDR X8, [X19]
	0x02D5B6C0 LDRH W9, [X8 + 0x12E]
	0x02D5B6C4 CBZ X9, 0x2D5B6E8
	0x02D5B6C8 LDR X10, [X8 + 0xB0]
	0x02D5B6CC ADD X10, X10, 0x8
	0x02D5B6D0 LDUR X11, [X10 - 0x8]
	0x02D5B6D4 CMP X11, X1
	0x02D5B6D8 B.EQ 0x2D5B708
	0x02D5B6DC SUBS X9, X9, 0x1
	0x02D5B6E0 ADD X10, X10, 0x10
	0x02D5B6E4 B.NE 0x2D5B6D0
	0x02D5B6E8 MOV X0, X19
	0x02D5B6EC MOV W2, W31
	0x02D5B6F0 BL 0x1C5C788
	0x02D5B6F4 B 0x2D5B714
	0x02D5B6F8 MOV W22, W31
	0x02D5B6FC B 0x2D5B89C
	0x02D5B700 MOVZ W22, 0x1
	0x02D5B704 B 0x2D5B89C
	0x02D5B708 LDRSW X9, [X10]
	0x02D5B70C ADD X8, X8, X9, 0x4, LSL
	0x02D5B710 ADD X0, X8, 0x138
	0x02D5B714 LDP X8, X1, [X0]
	0x02D5B718 MOV X0, X19
	0x02D5B71C BLR X8
	0x02D5B720 MOV X19, X0
	0x02D5B724 CBZ X0, 0x2D5B8EC
	0x02D5B728 ADRP X23, 0x1398000
	0x02D5B72C LDR X23, [X23 + 0xE18]
	0x02D5B730 LDR X8, [X19]
	0x02D5B734 LDR X1, [X23]
	0x02D5B738 LDRH W9, [X8 + 0x12E]
	0x02D5B73C CBZ X9, 0x2D5B760
	0x02D5B740 LDR X10, [X8 + 0xB0]
	0x02D5B744 ADD X10, X10, 0x8
	0x02D5B748 LDUR X11, [X10 - 0x8]
	0x02D5B74C CMP X11, X1
	0x02D5B750 B.EQ 0x2D5B770
	0x02D5B754 SUBS X9, X9, 0x1
	0x02D5B758 ADD X10, X10, 0x10
	0x02D5B75C B.NE 0x2D5B748
	0x02D5B760 MOV X0, X19
	0x02D5B764 MOV W2, W31
	0x02D5B768 BL 0x1C5C788
	0x02D5B76C B 0x2D5B77C
	0x02D5B770 LDRSW X9, [X10]
	0x02D5B774 ADD X8, X8, X9, 0x4, LSL
	0x02D5B778 ADD X0, X8, 0x138
	0x02D5B77C LDP X8, X1, [X0]
	0x02D5B780 MOV X0, X19
	0x02D5B784 BLR X8
	0x02D5B788 MOV W22, W0
	0x02D5B78C TBZ X0, 0x0, 0x2D5B82C
	0x02D5B790 LDR X8, [X20 + 0x20]
	0x02D5B794 LDR X8, [X8 + 0xC0]
	0x02D5B798 LDR X1, [X8 + 0xE8]
	0x02D5B79C LDRB W8, [X1 + 0x135]
	0x02D5B7A0 TBNZ X8, 0x0, 0x2D5B7B0
	0x02D5B7A4 MOV X0, X1
	0x02D5B7A8 BL 0x1C5C684
	0x02D5B7AC MOV X1, X0
	0x02D5B7B0 LDR X8, [X19]
	0x02D5B7B4 LDRH W9, [X8 + 0x12E]
	0x02D5B7B8 CBZ X9, 0x2D5B7DC
	0x02D5B7BC LDR X10, [X8 + 0xB0]
	0x02D5B7C0 ADD X10, X10, 0x8
	0x02D5B7C4 LDUR X11, [X10 - 0x8]
	0x02D5B7C8 CMP X11, X1
	0x02D5B7CC B.EQ 0x2D5B7EC
	0x02D5B7D0 SUBS X9, X9, 0x1
	0x02D5B7D4 ADD X10, X10, 0x10
	0x02D5B7D8 B.NE 0x2D5B7C4
	0x02D5B7DC MOV X0, X19
	0x02D5B7E0 MOV W2, W31
	0x02D5B7E4 BL 0x1C5C788
	0x02D5B7E8 B 0x2D5B7F8
	0x02D5B7EC LDRSW X9, [X10]
	0x02D5B7F0 ADD X8, X8, X9, 0x4, LSL
	0x02D5B7F4 ADD X0, X8, 0x138
	0x02D5B7F8 LDP X8, X1, [X0]
	0x02D5B7FC MOV X0, X19
	0x02D5B800 BLR X8
	0x02D5B804 LDR X8, [X20 + 0x20]
	0x02D5B808 AND X1, X0, 0xFFFF
	0x02D5B80C LDR X8, [X8 + 0xC0]
	0x02D5B810 LDR X2, [X8 + 0x188]
	0x02D5B814 MOV X0, X21
	0x02D5B818 BL 0x2D59AB4
	0x02D5B81C TBZ X0, 0x0, 0x2D5B730
	0x02D5B820 MOV X20, X31
	0x02D5B824 CBNZ X19, 0x2D5B838
	0x02D5B828 B 0x2D5B898
	0x02D5B82C MOV X20, X31
	0x02D5B830 MOV W22, W31
	0x02D5B834 CBZ X19, 0x2D5B898
	0x02D5B838 ADRP X10, 0x1398000
	0x02D5B83C LDR X8, [X19]
	0x02D5B840 LDR X10, [X10 + 0xE00]
	0x02D5B844 LDRH W9, [X8 + 0x12E]
	0x02D5B848 LDR X1, [X10]
	0x02D5B84C CBZ X9, 0x2D5B870
	0x02D5B850 LDR X10, [X8 + 0xB0]
	0x02D5B854 ADD X10, X10, 0x8
	0x02D5B858 LDUR X11, [X10 - 0x8]
	0x02D5B85C CMP X11, X1
	0x02D5B860 B.EQ 0x2D5B880
	0x02D5B864 SUBS X9, X9, 0x1
	0x02D5B868 ADD X10, X10, 0x10
	0x02D5B86C B.NE 0x2D5B858
	0x02D5B870 MOV X0, X19
	0x02D5B874 MOV W2, W31
	0x02D5B878 BL 0x1C5C788
	0x02D5B87C B 0x2D5B88C
	0x02D5B880 LDRSW X9, [X10]
	0x02D5B884 ADD X8, X8, X9, 0x4, LSL
	0x02D5B888 ADD X0, X8, 0x138
	0x02D5B88C LDP X8, X1, [X0]
	0x02D5B890 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1681000
	008 Move W8, [X22+2231]
	009 Move X20, X2
	010 Move X19, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x1399000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move X0, 0x1399000
	020 Move X0, [X0+3608]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2231], W8
	024 Compare X19, 0
	025 JumpIfEqual {159}
	026 Move X8, [X20+32]
	027 Move X8, [X8+192]
	028 Move X1, [X8+56]
	029 Move W8, [X1+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {37}
	034 Move X0, X1
	035 Call 0x1C5D684
	036 Move X1, X0
	037 Move X8, [X19]
	038 NotImplemented "Instruction LDRH not yet implemented."
	039 Compare X9, 0
	040 JumpIfEqual {47}
	041 Move X10, [X8+176]
	042 Add X10, X10, 8
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Subtract X9, X9, 1
	046 Add X10, X10, 16
	047 Move X0, X19
	048 Move W2, W31
	049 Call 0x1C5D788
	050 NotImplemented "Instruction LDRSW not yet implemented."
	051 Add X8, X8, X9
	052 Add X0, X8, 312
	053 Move X8, [X0]
	054 Move X1, [X0+8]
	055 Move X22, 0x1399000
	056 Move X22, [X22+3584]
	057 Move X0, X19
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X19, X0
	060 Compare X0, 0
	061 JumpIfEqual {174}
	062 Move X23, 0x1399000
	063 Move X23, [X23+3608]
	064 Move X8, [X19]
	065 Move X1, [X23]
	066 NotImplemented "Instruction LDRH not yet implemented."
	067 Compare X9, 0
	068 JumpIfEqual {75}
	069 Move X10, [X8+176]
	070 Add X10, X10, 8
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Subtract X9, X9, 1
	074 Add X10, X10, 16
	075 Move X0, X19
	076 Move W2, W31
	077 Call 0x1C5D788
	078 NotImplemented "Instruction LDRSW not yet implemented."
	079 Add X8, X8, X9
	080 Add X0, X8, 312
	081 Move X8, [X0]
	082 Move X1, [X0+8]
	083 Move X0, X19
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {126}
	089 Move X8, [X20+32]
	090 Move X8, [X8+192]
	091 Move X1, [X8+232]
	092 Move W8, [X1+309]
	093 Move TEMP, X8
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfEqual {100}
	097 Move X0, X1
	098 Call 0x1C5D684
	099 Move X1, X0
	100 Move X8, [X19]
	101 NotImplemented "Instruction LDRH not yet implemented."
	102 Compare X9, 0
	103 JumpIfEqual {110}
	104 Move X10, [X8+176]
	105 Add X10, X10, 8
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Subtract X9, X9, 1
	109 Add X10, X10, 16
	110 Move X0, X19
	111 Move W2, W31
	112 Call 0x1C5D788
	113 NotImplemented "Instruction LDRSW not yet implemented."
	114 Add X8, X8, X9
	115 Add X0, X8, 312
	116 Move X8, [X0]
	117 Move X1, [X0+8]
	118 Move X0, X19
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move X8, [X20+32]
	121 And X1, X0, 0xFFFF
	122 Move X8, [X8+192]
	123 Move X2, [X8+168]
	124 Move X0, X21
	125 Call 0x2D5D318, X0, X1
	126 Move X20, X31
	127 Compare X19, 0
	128 JumpIfEqual {150}
	129 Move X8, [X19]
	130 Move X1, [X22]
	131 NotImplemented "Instruction LDRH not yet implemented."
	132 Compare X9, 0
	133 JumpIfEqual {140}
	134 Move X10, [X8+176]
	135 Add X10, X10, 8
	136 NotImplemented "Instruction LDUR not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Subtract X9, X9, 1
	139 Add X10, X10, 16
	140 Move X0, X19
	141 Move W2, W31
	142 Call 0x1C5D788
	143 NotImplemented "Instruction LDRSW not yet implemented."
	144 Add X8, X8, X9
	145 Add X0, X8, 312
	146 Move X8, [X0]
	147 Move X1, [X0+8]
	148 Move X0, X19
	149 NotImplemented "Instruction BLR not yet implemented."
	150 Compare X20, 0
	151 JumpIfNotEqual {175}
	152 Move X20, [X31+32]
	153 Move X19, [X31+40]
	154 Move X22, [X31+16]
	155 Move X21, [X31+24]
	156 Move X30, [X31+48]
	157 Move X23, [X31+56]
	158 Return 
	159 Move X0, 0x139E000
	160 Move X0, [X0+1320]
	161 Call 0x1C17D08
	162 Call 0x1C17F10
	163 Move X19, X0
	164 Move X0, 0x13C3000
	165 Move X0, [X0+2344]
	166 Call 0x1C17D08
	167 Move X1, X0
	168 Move X0, X19
	169 Move X2, X31
	170 Call ArgumentNullException..ctor, X0, X1
	171 Move X0, X19
	172 Move X1, X20
	173 Call 0x1C17DEC
	174 Call 0x1C17F20
	175 Move X0, X20
	176 Call 0x1C17F18
	177 Move X21, X0
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X0, X21
	180 Call 0x3EB2AD0
	181 Move X20, [X0]
	182 Call 0x3EB2AE0
	183 Move X20, X31
	184 Move X21, X0
	185 Compare X19, 0
	186 JumpIfEqual {208}
	187 Move X8, [X19]
	188 Move X1, [X22]
	189 NotImplemented "Instruction LDRH not yet implemented."
	190 Compare X9, 0
	191 JumpIfEqual {198}
	192 Move X10, [X8+176]
	193 Add X10, X10, 8
	194 NotImplemented "Instruction LDUR not yet implemented."
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Subtract X9, X9, 1
	197 Add X10, X10, 16
	198 Move X0, X19
	199 Move W2, W31
	200 Call 0x1C5D788
	201 NotImplemented "Instruction LDRSW not yet implemented."
	202 Add X8, X8, X9
	203 Add X0, X8, 312
	204 Move X8, [X0]
	205 Move X1, [X0+8]
	206 Move X0, X19
	207 NotImplemented "Instruction BLR not yet implemented."
	208 Compare X20, 0
	209 JumpIfNotEqual {212}
	210 Move X0, X21
	211 Call 0x1D2D690
	212 Move X0, X20
	213 Call 0x1C17F18
	214 Call 0x1991590

Method: System.Void IntersectWith(System.Collections.Generic.IEnumerable`1<T> other)

Disassembly:
	0x02D5B894 BLR X8
	0x02D5B898 CBNZ X20, 0x2D5B8F0
	0x02D5B89C AND W0, W22, 0x1
	0x02D5B8A0 LDP X20, X19, [X31 + 0x20]
	0x02D5B8A4 LDP X22, X21, [X31 + 0x10]
	0x02D5B8A8 LDP X30, X23, [X31], #0x30
	0x02D5B8AC RET
	0x02D5B8B0 ADRP X0, 0x139D000
	0x02D5B8B4 LDR X0, [X0 + 0x528]
	0x02D5B8B8 BL 0x1C16D08
	0x02D5B8BC BL 0x1C16F10
	0x02D5B8C0 MOV X19, X0
	0x02D5B8C4 ADRP X0, 0x13C2000
	0x02D5B8C8 LDR X0, [X0 + 0x928]
	0x02D5B8CC BL 0x1C16D08
	0x02D5B8D0 MOV X1, X0
	0x02D5B8D4 MOV X0, X19
	0x02D5B8D8 MOV X2, X31
	0x02D5B8DC BL 0x330E100
	0x02D5B8E0 MOV X0, X19
	0x02D5B8E4 MOV X1, X20
	0x02D5B8E8 BL 0x1C16DEC
	0x02D5B8EC BL 0x1C16F20
	0x02D5B8F0 MOV X0, X20
	0x02D5B8F4 BL 0x1C16F18
	0x02D5B8F8 B 0x2D5B904
	0x02D5B8FC B 0x2D5B904
	0x02D5B900 B 0x2D5B904
	0x02D5B904 MOV X21, X0
	0x02D5B908 CMP W1, 0x1
	0x02D5B90C B.NE 0x2D5B924
	0x02D5B910 MOV X0, X21
	0x02D5B914 BL 0x3EB1AD0
	0x02D5B918 LDR X20, [X0]
	0x02D5B91C BL 0x3EB1AE0
	0x02D5B920 B 0x2D5B830
	0x02D5B924 MOV X20, X31
	0x02D5B928 B 0x2D5B930
	0x02D5B92C MOV X21, X0
	0x02D5B930 CBZ X19, 0x2D5B994
	0x02D5B934 ADRP X10, 0x1398000
	0x02D5B938 LDR X8, [X19]
	0x02D5B93C LDR X10, [X10 + 0xE00]
	0x02D5B940 LDRH W9, [X8 + 0x12E]
	0x02D5B944 LDR X1, [X10]
	0x02D5B948 CBZ X9, 0x2D5B96C
	0x02D5B94C LDR X10, [X8 + 0xB0]
	0x02D5B950 ADD X10, X10, 0x8
	0x02D5B954 LDUR X11, [X10 - 0x8]
	0x02D5B958 CMP X11, X1
	0x02D5B95C B.EQ 0x2D5B97C
	0x02D5B960 SUBS X9, X9, 0x1
	0x02D5B964 ADD X10, X10, 0x10
	0x02D5B968 B.NE 0x2D5B954
	0x02D5B96C MOV X0, X19
	0x02D5B970 MOV W2, W31
	0x02D5B974 BL 0x1C5C788
	0x02D5B978 B 0x2D5B988
	0x02D5B97C LDRSW X9, [X10]
	0x02D5B980 ADD X8, X8, X9, 0x4, LSL
	0x02D5B984 ADD X0, X8, 0x138
	0x02D5B988 LDP X8, X1, [X0]
	0x02D5B98C MOV X0, X19
	0x02D5B990 BLR X8
	0x02D5B994 CBNZ X20, 0x2D5B9A0
	0x02D5B998 MOV X0, X21
	0x02D5B99C BL 0x1D2C690
	0x02D5B9A0 MOV X0, X20
	0x02D5B9A4 BL 0x1C16F18
	0x02D5B9A8 BL 0x1990590
	0x02D5B9AC STR X30, [X31 - 0x30]!
	0x02D5B9B0 STP X22, X21, [X31 + 0x10]
	0x02D5B9B4 STP X20, X19, [X31 + 0x20]
	0x02D5B9B8 MOV X19, X2
	0x02D5B9BC CBZ X1, 0x2D5BB6C
	0x02D5B9C0 MOV X21, X1
	0x02D5B9C4 MOV X20, X0
	0x02D5B9C8 CMP X0, X1
	0x02D5B9CC B.EQ 0x2D5BAD0
	0x02D5B9D0 LDR X8, [X19 + 0x20]
	0x02D5B9D4 LDR X8, [X8 + 0xC0]
	0x02D5B9D8 LDR X0, [X8 + 0x28]
	0x02D5B9DC LDRB W8, [X0 + 0x135]
	0x02D5B9E0 TBNZ X8, 0x0, 0x2D5B9E8
	0x02D5B9E4 BL 0x1C5C684
	0x02D5B9E8 LDR X8, [X21]
	0x02D5B9EC LDRB W9, [X0 + 0x130]
	0x02D5B9F0 LDRB W10, [X8 + 0x130]
	0x02D5B9F4 CMP W10, W9
	0x02D5B9F8 B.CC 0x2D5BA60
	0x02D5B9FC LDR X8, [X8 + 0xC8]
	0x02D5BA00 ADD X8, X8, X9, 0x3, LSL
	0x02D5BA04 LDUR X8, [X8 - 0x8]
	0x02D5BA08 CMP X8, X0
	0x02D5BA0C B.NE 0x2D5BA60
	0x02D5BA10 LDR X8, [X19 + 0x20]
	0x02D5BA14 MOV X0, X20
	0x02D5BA18 MOV X1, X21
	0x02D5BA1C LDR X8, [X8 + 0xC0]
	0x02D5BA20 LDR X2, [X8 + 0x48]
	0x02D5BA24 BL 0x2D5E2BC
	0x02D5BA28 TBZ X0, 0x0, 0x2D5BA60
	0x02D5BA2C LDR W8, [X20 + 0x20]
	0x02D5BA30 LDR W9, [X21 + 0x20]
	0x02D5BA34 CMP W8, W9
	0x02D5BA38 B.NE 0x2D5BB58
	0x02D5BA3C LDR X8, [X19 + 0x20]
	0x02D5BA40 MOV X0, X20
	0x02D5BA44 MOV X1, X21
	0x02D5BA48 LDP X20, X19, [X31 + 0x20]
	0x02D5BA4C LDR X8, [X8 + 0xC0]
	0x02D5BA50 LDP X22, X21, [X31 + 0x10]
	0x02D5BA54 LDR X2, [X8 + 0x180]
	0x02D5BA58 LDR X30, [X31], #0x30
	0x02D5BA5C B 0x2D5C6B4
	0x02D5BA60 LDR X8, [X19 + 0x20]
	0x02D5BA64 LDR X8, [X8 + 0xC0]
	0x02D5BA68 LDR X1, [X8 + 0x60]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X2
	007 Compare X1, 0
	008 JumpIfEqual {129}
	009 Move X20, X1
	010 Move X21, X0
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W8, [X21+32]
	013 Compare W8, 0
	014 JumpIfEqual {55}
	015 Move X8, [X19+32]
	016 Move X8, [X8+192]
	017 Move X1, [X8+96]
	018 Move W8, [X1+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {26}
	023 Move X0, X1
	024 Call 0x1C5D684
	025 Move X1, X0
	026 Move X0, X20
	027 Call 0x1C17E00
	028 Compare X0, 0
	029 JumpIfEqual {109}
	030 Move X8, [X19+32]
	031 Move X22, X0
	032 Move X8, [X8+192]
	033 Move X1, [X8+96]
	034 Move W8, [X1+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {42}
	039 Move X0, X1
	040 Call 0x1C5D684
	041 Move X1, X0
	042 Move X8, [X22]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Compare X9, 0
	045 JumpIfEqual {52}
	046 Move X10, [X8+176]
	047 Add X10, X10, 8
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Subtract X9, X9, 1
	051 Add X10, X10, 16
	052 Move X0, X22
	053 Move W2, W31
	054 Call 0x1C5D788
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Return 
	061 NotImplemented "Instruction LDRSW not yet implemented."
	062 Add X8, X8, X9
	063 Add X0, X8, 312
	064 Move X8, [X0]
	065 Move X1, [X0+8]
	066 Move X0, X22
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Compare W0, 0
	069 JumpIfEqual {121}
	070 Move X8, [X19+32]
	071 Move X8, [X8+192]
	072 Move X0, [X8+40]
	073 Move W8, [X0+309]
	074 Move TEMP, X8
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {79}
	078 Call 0x1C5D684
	079 Move X8, [X20]
	080 Move W9, [X0+304]
	081 Move W10, [X8+304]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X8, [X8+200]
	084 Add X8, X8, X9
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X8, [X19+32]
	088 Move X0, X21
	089 Move X1, X20
	090 Move X8, [X8+192]
	091 Move X2, [X8+72]
	092 Call 0x2D5F2BC, X0, X1
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {109}
	097 Move X8, [X19+32]
	098 Move X0, X21
	099 Move X1, X20
	100 Move X20, [X31+32]
	101 Move X19, [X31+40]
	102 Move X8, [X8+192]
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 Move X2, [X8+312]
	106 Move X30, [X31+48]
	107 Call 0x2D5DAF8, X0, X1
	108 Return 
	109 Move X8, [X19+32]
	110 Move X0, X21
	111 Move X1, X20
	112 Move X20, [X31+32]
	113 Move X19, [X31+40]
	114 Move X8, [X8+192]
	115 Move X22, [X31+16]
	116 Move X21, [X31+24]
	117 Move X2, [X8+320]
	118 Move X30, [X31+48]
	119 Call 0x2D5DBB8, X0, X1
	120 Return 
	121 Move X0, X21
	122 Move X20, [X31+32]
	123 Move X19, [X31+40]
	124 Move X22, [X31+16]
	125 Move X21, [X31+24]
	126 Move X30, [X31+48]
	127 Call 0x2D5AA54, X0
	128 Return 
	129 Move X0, 0x139E000
	130 Move X0, [X0+1320]
	131 Call 0x1C17D08
	132 Call 0x1C17F10
	133 Move X20, X0
	134 Move X0, 0x13C3000
	135 Move X0, [X0+2344]
	136 Call 0x1C17D08
	137 Move X1, X0
	138 Move X0, X20
	139 Move X2, X31
	140 Call ArgumentNullException..ctor, X0, X1
	141 Move X0, X20
	142 Move X1, X19
	143 Call 0x1C17DEC

Method: System.Void ExceptWith(System.Collections.Generic.IEnumerable`1<T> other)

Disassembly:
	0x02D5BA6C LDRB W8, [X1 + 0x135]
	0x02D5BA70 TBNZ X8, 0x0, 0x2D5BA80
	0x02D5BA74 MOV X0, X1
	0x02D5BA78 BL 0x1C5C684
	0x02D5BA7C MOV X1, X0
	0x02D5BA80 MOV X0, X21
	0x02D5BA84 BL 0x1C16E00
	0x02D5BA88 CBZ X0, 0x2D5BA94
	0x02D5BA8C LDR W8, [X20 + 0x20]
	0x02D5BA90 CBZ W8, 0x2D5BAD8
	0x02D5BA94 LDR X8, [X19 + 0x20]
	0x02D5BA98 MOVZ W2, 0x1
	0x02D5BA9C MOV X0, X20
	0x02D5BAA0 MOV X1, X21
	0x02D5BAA4 LDR X8, [X8 + 0xC0]
	0x02D5BAA8 LDR X3, [X8 + 0x170]
	0x02D5BAAC BL 0x2D5DBBC
	0x02D5BAB0 LDR W8, [X20 + 0x20]
	0x02D5BAB4 UBFM X9, X0, 0x20, 0x3F
	0x02D5BAB8 CMP W8, W0
	0x02D5BABC CSET W8, EQ
	0x02D5BAC0 CMP X9, 0x0
	0x02D5BAC4 CSET W9, EQ
	0x02D5BAC8 AND W0, W9, W8, 0x0
	0x02D5BACC B 0x2D5BB5C
	0x02D5BAD0 MOVZ W0, 0x1
	0x02D5BAD4 B 0x2D5BB5C
	0x02D5BAD8 LDR X8, [X19 + 0x20]
	0x02D5BADC MOV X22, X0
	0x02D5BAE0 LDR X8, [X8 + 0xC0]
	0x02D5BAE4 LDR X1, [X8 + 0x60]
	0x02D5BAE8 LDRB W8, [X1 + 0x135]
	0x02D5BAEC TBNZ X8, 0x0, 0x2D5BAFC
	0x02D5BAF0 MOV X0, X1
	0x02D5BAF4 BL 0x1C5C684
	0x02D5BAF8 MOV X1, X0
	0x02D5BAFC LDR X8, [X22]
	0x02D5BB00 LDRH W9, [X8 + 0x12E]
	0x02D5BB04 CBZ X9, 0x2D5BB28
	0x02D5BB08 LDR X10, [X8 + 0xB0]
	0x02D5BB0C ADD X10, X10, 0x8
	0x02D5BB10 LDUR X11, [X10 - 0x8]
	0x02D5BB14 CMP X11, X1
	0x02D5BB18 B.EQ 0x2D5BB38
	0x02D5BB1C SUBS X9, X9, 0x1
	0x02D5BB20 ADD X10, X10, 0x10
	0x02D5BB24 B.NE 0x2D5BB10
	0x02D5BB28 MOV X0, X22
	0x02D5BB2C MOV W2, W31
	0x02D5BB30 BL 0x1C5C788
	0x02D5BB34 B 0x2D5BB44
	0x02D5BB38 LDRSW X9, [X10]
	0x02D5BB3C ADD X8, X8, X9, 0x4, LSL
	0x02D5BB40 ADD X0, X8, 0x138
	0x02D5BB44 LDP X8, X1, [X0]
	0x02D5BB48 MOV X0, X22
	0x02D5BB4C BLR X8
	0x02D5BB50 CMP W0, 0x0
	0x02D5BB54 B.LE 0x2D5BA94
	0x02D5BB58 MOV W0, W31
	0x02D5BB5C LDP X20, X19, [X31 + 0x20]
	0x02D5BB60 LDP X22, X21, [X31 + 0x10]
	0x02D5BB64 LDR X30, [X31], #0x30
	0x02D5BB68 RET
	0x02D5BB6C ADRP X0, 0x139D000
	0x02D5BB70 LDR X0, [X0 + 0x528]
	0x02D5BB74 BL 0x1C16D08
	0x02D5BB78 BL 0x1C16F10
	0x02D5BB7C MOV X20, X0
	0x02D5BB80 ADRP X0, 0x13C2000
	0x02D5BB84 LDR X0, [X0 + 0x928]
	0x02D5BB88 BL 0x1C16D08
	0x02D5BB8C MOV X1, X0
	0x02D5BB90 MOV X0, X20
	0x02D5BB94 MOV X2, X31
	0x02D5BB98 BL 0x330E100
	0x02D5BB9C MOV X0, X20
	0x02D5BBA0 MOV X1, X19
	0x02D5BBA4 BL 0x1C16DEC
	0x02D5BBA8 LDR X8, [X2 + 0x20]
	0x02D5BBAC LDR W3, [X0 + 0x20]
	0x02D5BBB0 MOV W2, W31
	0x02D5BBB4 LDR X8, [X8 + 0xC0]
	0x02D5BBB8 LDR X4, [X8 + 0xC8]
	0x02D5BBBC B 0x2D5BBC0
	0x02D5BBC0 STR X30, [X31 - 0x30]!
	0x02D5BBC4 STP X22, X21, [X31 + 0x10]
	0x02D5BBC8 STP X20, X19, [X31 + 0x20]
	0x02D5BBCC CBZ X1, 0x2D5BC88
	0x02D5BBD0 TBNZ X2, 0x1F, 0x2D5BCC0
	0x02D5BBD4 TBNZ X3, 0x1F, 0x2D5BD00
	0x02D5BBD8 LDR W8, [X1 + 0x18]
	0x02D5BBDC SUBS W8, W8, W2
	0x02D5BBE0 B.LT 0x2D5BD70
	0x02D5BBE4 CMP W8, W3
	0x02D5BBE8 B.LT 0x2D5BD70
	0x02D5BBEC CMP W3, 0x1
	0x02D5BBF0 B.LT 0x2D5BC70
	0x02D5BBF4 LDR W11, [X0 + 0x24]
	0x02D5BBF8 CMP W11, 0x1
	0x02D5BBFC B.LT 0x2D5BC70
	0x02D5BC00 MOV X8, X31
	0x02D5BC04 MOV X9, X31
	0x02D5BC08 MOV W10, W31
	0x02D5BC0C LDR X12, [X0 + 0x18]
	0x02D5BC10 CBZ X12, 0x2D5BC84
	0x02D5BC14 LDR W13, [X12 + 0x18]
	0x02D5BC18 CMP X9, X13
	0x02D5BC1C B.CS 0x2D5BC80
	0x02D5BC20 ADD X13, X12, X8
	0x02D5BC24 LDR W13, [X13 + 0x20]
	0x02D5BC28 TBNZ X13, 0x1F, 0x2D5BC54
	0x02D5BC2C LDR W13, [X1 + 0x18]
	0x02D5BC30 ADD W11, W10, W2
	0x02D5BC34 CMP W11, W13
	0x02D5BC38 B.CS 0x2D5BC80
	0x02D5BC3C ADD X12, X12, X8
	0x02D5BC40 LDRH W12, [X12 + 0x28]
	0x02D5BC44 ADD X11, X1, W11, 0x1, SXTW
	0x02D5BC48 ADD W10, W10, 0x1
	0x02D5BC4C STRH W12, [X11 + 0x20]
	0x02D5BC50 LDR W11, [X0 + 0x24]
	0x02D5BC54 CMP W10, W3
	0x02D5BC58 B.GE 0x2D5BC70
	0x02D5BC5C ADD X9, X9, 0x1
	0x02D5BC60 SXTW X12, W11
	0x02D5BC64 CMP X9, X12
	0x02D5BC68 ADD X8, X8, 0xC
	0x02D5BC6C B.LT 0x2D5BC0C
	0x02D5BC70 LDP X20, X19, [X31 + 0x20]
	0x02D5BC74 LDP X22, X21, [X31 + 0x10]
	0x02D5BC78 LDR X30, [X31], #0x30
	0x02D5BC7C RET
	0x02D5BC80 BL 0x1C16F28
	0x02D5BC84 BL 0x1C16F20
	0x02D5BC88 ADRP X0, 0x139D000
	0x02D5BC8C LDR X0, [X0 + 0x528]
	0x02D5BC90 MOV X19, X4
	0x02D5BC94 BL 0x1C16D08
	0x02D5BC98 BL 0x1C16F10
	0x02D5BC9C MOV X20, X0
	0x02D5BCA0 ADRP X0, 0x13C0000
	0x02D5BCA4 LDR X0, [X0 + 0x640]
	0x02D5BCA8 BL 0x1C16D08
	0x02D5BCAC MOV X1, X0
	0x02D5BCB0 MOV X0, X20
	0x02D5BCB4 MOV X2, X31
	0x02D5BCB8 BL 0x330E100
	0x02D5BCBC B 0x2D5BDA4
	0x02D5BCC0 STR W2, [X31 + 0xC]
	0x02D5BCC4 ADRP X0, 0x1398000
	0x02D5BCC8 LDR X0, [X0 + 0x758]
	0x02D5BCCC MOV X19, X4
	0x02D5BCD0 BL 0x1C16D08
	0x02D5BCD4 ADD X1, X31, 0xC
	0x02D5BCD8 BL 0x1C16E04
	0x02D5BCDC MOV X20, X0
	0x02D5BCE0 ADRP X0, 0x13A0000
	0x02D5BCE4 LDR X0, [X0 + 0x760]
	0x02D5BCE8 BL 0x1C16D08
	0x02D5BCEC BL 0x1C16F10
	0x02D5BCF0 MOV X21, X0
	0x02D5BCF4 ADRP X0, 0x13C2000
	0x02D5BCF8 LDR X0, [X0 + 0x2B0]
	0x02D5BCFC B 0x2D5BD3C
	0x02D5BD00 STR W3, [X31 + 0x8]
	0x02D5BD04 ADRP X0, 0x1398000
	0x02D5BD08 LDR X0, [X0 + 0x758]
	0x02D5BD0C MOV X19, X4
	0x02D5BD10 BL 0x1C16D08
	0x02D5BD14 ADD X1, X31, 0x8
	0x02D5BD18 BL 0x1C16E04
	0x02D5BD1C MOV X20, X0
	0x02D5BD20 ADRP X0, 0x13A0000
	0x02D5BD24 LDR X0, [X0 + 0x760]
	0x02D5BD28 BL 0x1C16D08
	0x02D5BD2C BL 0x1C16F10
	0x02D5BD30 MOV X21, X0
	0x02D5BD34 ADRP X0, 0x13C0000
	0x02D5BD38 LDR X0, [X0 + 0x648]
	0x02D5BD3C BL 0x1C16D08
	0x02D5BD40 MOV X22, X0
	0x02D5BD44 ADRP X0, 0x13C3000
	0x02D5BD48 LDR X0, [X0 + 0xF18]
	0x02D5BD4C BL 0x1C16D08
	0x02D5BD50 MOV X3, X0
	0x02D5BD54 MOV X0, X21
	0x02D5BD58 MOV X1, X22
	0x02D5BD5C MOV X2, X20
	0x02D5BD60 MOV X4, X31
	0x02D5BD64 BL 0x3312C8C
	0x02D5BD68 MOV X0, X21
	0x02D5BD6C B 0x2D5BDA8
	0x02D5BD70 ADRP X0, 0x13A0000
	0x02D5BD74 LDR X0, [X0 + 0x578]
	0x02D5BD78 MOV X19, X4
	0x02D5BD7C BL 0x1C16D08
	0x02D5BD80 BL 0x1C16F10
	0x02D5BD84 MOV X20, X0
	0x02D5BD88 ADRP X0, 0x13C1000
	0x02D5BD8C LDR X0, [X0 + 0x318]
	0x02D5BD90 BL 0x1C16D08
	0x02D5BD94 MOV X1, X0
	0x02D5BD98 MOV X0, X20
	0x02D5BD9C MOV X2, X31
	0x02D5BDA0 BL 0x3314A68
	0x02D5BDA4 MOV X0, X20
	0x02D5BDA8 MOV X1, X19
	0x02D5BDAC BL 0x1C16DEC
	0x02D5BDB0 STP X30, X25, [X31 - 0x40]!
	0x02D5BDB4 STP X24, X23, [X31 + 0x10]
	0x02D5BDB8 STP X22, X21, [X31 + 0x20]
	0x02D5BDBC STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1681000
	007 Move W8, [X22+2232]
	008 Move X20, X2
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x1399000
	016 Move X0, [X0+3584]
	017 Call 0x1C17CF4
	018 Move X0, 0x1399000
	019 Move X0, [X0+3608]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2232], W8
	023 Compare X19, 0
	024 JumpIfEqual {169}
	025 Move W8, [X21+32]
	026 Compare W8, 0
	027 JumpIfEqual {163}
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X8, [X20+32]
	030 Move X8, [X8+192]
	031 Move X1, [X8+56]
	032 Move W8, [X1+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {40}
	037 Move X0, X1
	038 Call 0x1C5D684
	039 Move X1, X0
	040 Move X8, [X19]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Compare X9, 0
	043 JumpIfEqual {50}
	044 Move X10, [X8+176]
	045 Add X10, X10, 8
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract X9, X9, 1
	049 Add X10, X10, 16
	050 Move X0, X19
	051 Move W2, W31
	052 Call 0x1C5D788
	053 Move X0, X21
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Call 0x2D5AA54, X0
	060 Return 
	061 NotImplemented "Instruction LDRSW not yet implemented."
	062 Add X8, X8, X9
	063 Add X0, X8, 312
	064 Move X8, [X0]
	065 Move X1, [X0+8]
	066 Move X0, X19
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move X19, X0
	069 Compare X0, 0
	070 JumpIfEqual {184}
	071 Move X22, 0x1399000
	072 Move X22, [X22+3608]
	073 Move X8, [X19]
	074 Move X1, [X22]
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 Compare X9, 0
	077 JumpIfEqual {84}
	078 Move X10, [X8+176]
	079 Add X10, X10, 8
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract X9, X9, 1
	083 Add X10, X10, 16
	084 Move X0, X19
	085 Move W2, W31
	086 Call 0x1C5D788
	087 NotImplemented "Instruction LDRSW not yet implemented."
	088 Add X8, X8, X9
	089 Add X0, X8, 312
	090 Move X8, [X0]
	091 Move X1, [X0+8]
	092 Move X0, X19
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {135}
	098 Move X8, [X20+32]
	099 Move X8, [X8+192]
	100 Move X1, [X8+232]
	101 Move W8, [X1+309]
	102 Move TEMP, X8
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfEqual {109}
	106 Move X0, X1
	107 Call 0x1C5D684
	108 Move X1, X0
	109 Move X8, [X19]
	110 NotImplemented "Instruction LDRH not yet implemented."
	111 Compare X9, 0
	112 JumpIfEqual {119}
	113 Move X10, [X8+176]
	114 Add X10, X10, 8
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Subtract X9, X9, 1
	118 Add X10, X10, 16
	119 Move X0, X19
	120 Move W2, W31
	121 Call 0x1C5D788
	122 NotImplemented "Instruction LDRSW not yet implemented."
	123 Add X8, X8, X9
	124 Add X0, X8, 312
	125 Move X8, [X0]
	126 Move X1, [X0+8]
	127 Move X0, X19
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Move X8, [X20+32]
	130 And X1, X0, 0xFFFF
	131 Move X8, [X8+192]
	132 Move X2, [X8+328]
	133 Move X0, X21
	134 Call 0x2D5AC8C, X0, X1
	135 Move X20, X31
	136 Compare X19, 0
	137 JumpIfEqual {161}
	138 Move X10, 0x1399000
	139 Move X8, [X19]
	140 Move X10, [X10+3584]
	141 NotImplemented "Instruction LDRH not yet implemented."
	142 Move X1, [X10]
	143 Compare X9, 0
	144 JumpIfEqual {151}
	145 Move X10, [X8+176]
	146 Add X10, X10, 8
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Subtract X9, X9, 1
	150 Add X10, X10, 16
	151 Move X0, X19
	152 Move W2, W31
	153 Call 0x1C5D788
	154 NotImplemented "Instruction LDRSW not yet implemented."
	155 Add X8, X8, X9
	156 Add X0, X8, 312
	157 Move X8, [X0]
	158 Move X1, [X0+8]
	159 Move X0, X19
	160 NotImplemented "Instruction BLR not yet implemented."
	161 Compare X20, 0
	162 JumpIfNotEqual {185}
	163 Move X20, [X31+32]
	164 Move X19, [X31+40]
	165 Move X22, [X31+16]
	166 Move X21, [X31+24]
	167 Move X30, [X31+48]
	168 Return 
	169 Move X0, 0x139E000
	170 Move X0, [X0+1320]
	171 Call 0x1C17D08
	172 Call 0x1C17F10
	173 Move X19, X0
	174 Move X0, 0x13C3000
	175 Move X0, [X0+2344]
	176 Call 0x1C17D08
	177 Move X1, X0
	178 Move X0, X19
	179 Move X2, X31
	180 Call ArgumentNullException..ctor, X0, X1
	181 Move X0, X19
	182 Move X1, X20
	183 Call 0x1C17DEC
	184 Call 0x1C17F20
	185 Move X0, X20
	186 Call 0x1C17F18
	187 Move X21, X0
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X0, X21
	190 Call 0x3EB2AD0
	191 Move X20, [X0]
	192 Call 0x3EB2AE0
	193 Move X20, X31
	194 Move X21, X0
	195 Compare X19, 0
	196 JumpIfEqual {220}
	197 Move X10, 0x1399000
	198 Move X8, [X19]
	199 Move X10, [X10+3584]
	200 NotImplemented "Instruction LDRH not yet implemented."
	201 Move X1, [X10]
	202 Compare X9, 0
	203 JumpIfEqual {210}
	204 Move X10, [X8+176]
	205 Add X10, X10, 8
	206 NotImplemented "Instruction LDUR not yet implemented."
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Subtract X9, X9, 1
	209 Add X10, X10, 16
	210 Move X0, X19
	211 Move W2, W31
	212 Call 0x1C5D788
	213 NotImplemented "Instruction LDRSW not yet implemented."
	214 Add X8, X8, X9
	215 Add X0, X8, 312
	216 Move X8, [X0]
	217 Move X1, [X0+8]
	218 Move X0, X19
	219 NotImplemented "Instruction BLR not yet implemented."
	220 Compare X20, 0
	221 JumpIfNotEqual {224}
	222 Move X0, X21
	223 Call 0x1D2D690
	224 Move X0, X20
	225 Call 0x1C17F18
	226 Call 0x1991590

Method: System.Void SymmetricExceptWith(System.Collections.Generic.IEnumerable`1<T> other)

Disassembly:
	0x02D5BDC0 MOV X19, X2
	0x02D5BDC4 CBZ X1, 0x2D5BE80
	0x02D5BDC8 LDR W8, [X0 + 0x24]
	0x02D5BDCC MOV X21, X0
	0x02D5BDD0 CMP W8, 0x1
	0x02D5BDD4 B.LT 0x2D5BE5C
	0x02D5BDD8 MOV X20, X1
	0x02D5BDDC MOV X24, X31
	0x02D5BDE0 MOV X25, X31
	0x02D5BDE4 MOV W22, W31
	0x02D5BDE8 LDR X8, [X21 + 0x18]
	0x02D5BDEC CBZ X8, 0x2D5BE78
	0x02D5BDF0 LDR W9, [X8 + 0x18]
	0x02D5BDF4 CMP X25, X9
	0x02D5BDF8 B.CS 0x2D5BE7C
	0x02D5BDFC ADD X8, X8, X24
	0x02D5BE00 LDR W9, [X8 + 0x20]
	0x02D5BE04 TBNZ X9, 0x1F, 0x2D5BE44
	0x02D5BE08 LDRH W23, [X8 + 0x28]
	0x02D5BE0C LDR X8, [X20 + 0x18]
	0x02D5BE10 LDR X0, [X20 + 0x40]
	0x02D5BE14 LDR X2, [X20 + 0x28]
	0x02D5BE18 MOV X1, X23
	0x02D5BE1C BLR X8
	0x02D5BE20 TBZ X0, 0x0, 0x2D5BE44
	0x02D5BE24 LDR X8, [X19 + 0x20]
	0x02D5BE28 MOV X0, X21
	0x02D5BE2C MOV X1, X23
	0x02D5BE30 LDR X8, [X8 + 0xC0]
	0x02D5BE34 LDR X2, [X8 + 0x148]
	0x02D5BE38 BL 0x2D59C8C
	0x02D5BE3C AND W8, W0, 0x1
	0x02D5BE40 ADD W22, W22, W8
	0x02D5BE44 LDRSW X8, [X21 + 0x24]
	0x02D5BE48 ADD X25, X25, 0x1
	0x02D5BE4C ADD X24, X24, 0xC
	0x02D5BE50 CMP X25, X8
	0x02D5BE54 B.LT 0x2D5BDE8
	0x02D5BE58 B 0x2D5BE60
	0x02D5BE5C MOV W22, W31
	0x02D5BE60 MOV W0, W22
	0x02D5BE64 LDP X20, X19, [X31 + 0x30]
	0x02D5BE68 LDP X22, X21, [X31 + 0x20]
	0x02D5BE6C LDP X24, X23, [X31 + 0x10]
	0x02D5BE70 LDP X30, X25, [X31], #0x40
	0x02D5BE74 RET
	0x02D5BE78 BL 0x1C16F20
	0x02D5BE7C BL 0x1C16F28
	0x02D5BE80 ADRP X0, 0x139D000
	0x02D5BE84 LDR X0, [X0 + 0x528]
	0x02D5BE88 BL 0x1C16D08
	0x02D5BE8C BL 0x1C16F10
	0x02D5BE90 MOV X20, X0
	0x02D5BE94 ADRP X0, 0x13C0000
	0x02D5BE98 LDR X0, [X0 + 0x778]
	0x02D5BE9C BL 0x1C16D08
	0x02D5BEA0 MOV X1, X0
	0x02D5BEA4 MOV X0, X20
	0x02D5BEA8 MOV X2, X31
	0x02D5BEAC BL 0x330E100
	0x02D5BEB0 MOV X0, X20
	0x02D5BEB4 MOV X1, X19
	0x02D5BEB8 BL 0x1C16DEC
	0x02D5BEBC LDR X0, [X0 + 0x30]
	0x02D5BEC0 RET
	0x02D5BEC4 STR X30, [X31 - 0x30]!
	0x02D5BEC8 STP X22, X21, [X31 + 0x10]
	0x02D5BECC STP X20, X19, [X31 + 0x20]
	0x02D5BED0 ADRP X21, 0x1680000
	0x02D5BED4 LDRB W8, [X21 + 0x8BA]
	0x02D5BED8 MOV X20, X1
	0x02D5BEDC MOV X19, X0
	0x02D5BEE0 TBNZ X8, 0x0, 0x2D5BF04
	0x02D5BEE4 ADRP X0, 0x13C3000
	0x02D5BEE8 LDR X0, [X0 + 0x548]
	0x02D5BEEC BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X2
	006 Compare X1, 0
	007 JumpIfEqual {81}
	008 Move W8, [X0+32]
	009 Move X20, X1
	010 Move X21, X0
	011 Compare W8, 0
	012 JumpIfEqual {52}
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X8, [X19+32]
	015 Move X8, [X8+192]
	016 Move X0, [X8+40]
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Move X8, [X20]
	024 Move W9, [X0+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, [X8+200]
	028 Add X8, X8, X9
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X8, [X19+32]
	032 Move X0, X21
	033 Move X1, X20
	034 Move X8, [X8+192]
	035 Move X2, [X8+72]
	036 Call 0x2D5F2BC, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {63}
	041 Move X8, [X19+32]
	042 Move X1, X20
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X0, X21
	046 Move X8, [X8+192]
	047 Move X2, [X8+336]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call 0x2D5E210, X0, X1
	051 Return 
	052 Move X8, [X19+32]
	053 Move X1, X20
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X0, X21
	057 Move X8, [X8+192]
	058 Move X2, [X8+120]
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Call 0x2D5B56C, X0, X1
	062 Return 
	063 Move X8, [X19+32]
	064 Move X1, X20
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X0, X21
	068 Move X8, [X8+192]
	069 Move X2, [X8+344]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Call 0x2D5E354, X0, X1
	073 Return 
	074 Move X20, [X31+16]
	075 Move X19, [X31+24]
	076 Move X0, X21
	077 Move X30, [X31+32]
	078 Move X21, [X31+40]
	079 Call 0x2D5AA54, X0
	080 Return 
	081 Move X0, 0x139E000
	082 Move X0, [X0+1320]
	083 Call 0x1C17D08
	084 Call 0x1C17F10
	085 Move X20, X0
	086 Move X0, 0x13C3000
	087 Move X0, [X0+2344]
	088 Call 0x1C17D08
	089 Move X1, X0
	090 Move X0, X20
	091 Move X2, X31
	092 Call ArgumentNullException..ctor, X0, X1
	093 Move X0, X20
	094 Move X1, X19
	095 Call 0x1C17DEC

Method: System.Boolean IsSubsetOf(System.Collections.Generic.IEnumerable`1<T> other)

Disassembly:
	0x02D5BEF0 ADRP X0, 0x1399000
	0x02D5BEF4 LDR X0, [X0 + 0xE58]
	0x02D5BEF8 BL 0x1C16CF4
	0x02D5BEFC MOVZ W8, 0x1
	0x02D5BF00 STRB W8, [X21 + 0x8BA]
	0x02D5BF04 LDR W21, [X19 + 0x20]
	0x02D5BF08 CBZ W21, 0x2D5C040
	0x02D5BF0C ADRP X8, 0x13C3000
	0x02D5BF10 LDR X8, [X8 + 0x548]
	0x02D5BF14 LDR X0, [X8]
	0x02D5BF18 LDR W8, [X0 + 0xE0]
	0x02D5BF1C CBNZ W8, 0x2D5BF24
	0x02D5BF20 BL 0x1C16DFC
	0x02D5BF24 ADRP X22, 0x1399000
	0x02D5BF28 LDR X22, [X22 + 0xE58]
	0x02D5BF2C MOV W0, W21
	0x02D5BF30 MOV X1, X31
	0x02D5BF34 BL 0x335042C
	0x02D5BF38 LDR X8, [X20 + 0x20]
	0x02D5BF3C MOV W20, W0
	0x02D5BF40 LDR X8, [X8 + 0xC0]
	0x02D5BF44 LDR X8, [X8 + 0x118]
	0x02D5BF48 LDRB W9, [X8 + 0x135]
	0x02D5BF4C TBNZ X9, 0x0, 0x2D5BF5C
	0x02D5BF50 MOV X0, X8
	0x02D5BF54 BL 0x1C5C684
	0x02D5BF58 MOV X8, X0
	0x02D5BF5C MOV X0, X8
	0x02D5BF60 MOV W1, W20
	0x02D5BF64 BL 0x1C16D6C
	0x02D5BF68 LDR X8, [X22]
	0x02D5BF6C MOV X21, X0
	0x02D5BF70 MOV W1, W20
	0x02D5BF74 MOV X0, X8
	0x02D5BF78 BL 0x1C16D6C
	0x02D5BF7C LDR W12, [X19 + 0x24]
	0x02D5BF80 CMP W12, 0x1
	0x02D5BF84 B.LT 0x2D5C054
	0x02D5BF88 MOV X9, X31
	0x02D5BF8C MOV X10, X31
	0x02D5BF90 MOV W8, W31
	0x02D5BF94 MOVZ W11, 0xC
	0x02D5BF98 LDR X13, [X19 + 0x18]
	0x02D5BF9C CBZ X13, 0x2D5C078
	0x02D5BFA0 LDR W14, [X13 + 0x18]
	0x02D5BFA4 CMP X10, X14
	0x02D5BFA8 B.CS 0x2D5C074
	0x02D5BFAC ADD X14, X13, X9
	0x02D5BFB0 LDR W15, [X14 + 0x20]
	0x02D5BFB4 TBNZ X15, 0x1F, 0x2D5C02C
	0x02D5BFB8 CBZ X21, 0x2D5C078
	0x02D5BFBC LDR W12, [X21 + 0x18]
	0x02D5BFC0 CMP W8, W12
	0x02D5BFC4 B.CS 0x2D5C074
	0x02D5BFC8 ADD X12, X13, X9
	0x02D5BFCC LDR X14, [X14 + 0x20]
	0x02D5BFD0 LDR W13, [X12 + 0x28]
	0x02D5BFD4 SXTW X12, W8
	0x02D5BFD8 MADD X15, X12, X11, X21
	0x02D5BFDC STR X14, [X15 + 0x20]
	0x02D5BFE0 STR W13, [X15 + 0x28]
	0x02D5BFE4 LDR W13, [X21 + 0x18]
	0x02D5BFE8 CMP W8, W13
	0x02D5BFEC B.CS 0x2D5C074
	0x02D5BFF0 CBZ X0, 0x2D5C078
	0x02D5BFF4 LDR W15, [X0 + 0x18]
	0x02D5BFF8 SDIV W13, W14, W20
	0x02D5BFFC MSUB W13, W13, W20, W14
	0x02D5C000 CMP W13, W15
	0x02D5C004 B.CS 0x2D5C074
	0x02D5C008 ADD X13, X0, W13, 0x2, SXTW
	0x02D5C00C LDR W14, [X13 + 0x20]
	0x02D5C010 NOP
	0x02D5C014 MADD X12, X12, X11, X21
	0x02D5C018 ADD W8, W8, 0x1
	0x02D5C01C SUB W14, W14, 0x1
	0x02D5C020 STR W14, [X12 + 0x24]
	0x02D5C024 STR W8, [X13 + 0x20]
	0x02D5C028 LDR W12, [X19 + 0x24]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X2
	006 Compare X1, 0
	007 JumpIfEqual {75}
	008 Move X21, X1
	009 Move X20, X0
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move W0, 1
	012 Move W8, [X20+32]
	013 Compare W8, 0
	014 JumpIfEqual {59}
	015 Move X8, [X19+32]
	016 Move X8, [X8+192]
	017 Move X0, [X8+40]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Move X8, [X21]
	025 Move W9, [X0+304]
	026 Move W10, [X8+304]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X8, [X8+200]
	029 Add X8, X8, X9
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X8, [X19+32]
	033 Move X0, X20
	034 Move X1, X21
	035 Move X8, [X8+192]
	036 Move X2, [X8+72]
	037 Call 0x2D5F2BC, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {46}
	042 Move W8, [X20+32]
	043 Move W9, [X21+32]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W0, W31
	046 Move X8, [X19+32]
	047 Move X0, X20
	048 Move X1, X21
	049 Move W2, W31
	050 Move X8, [X8+192]
	051 Move X3, [X8+368]
	052 Call 0x2D5EBBC, X0, X1, X2
	053 Move W8, [X20+32]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 NotImplemented "Instruction CSET not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction CSET not yet implemented."
	058 And W0, W9, W8
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Return X0
	064 Move X8, [X19+32]
	065 Move X0, X20
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X1, X21
	069 Move X8, [X8+192]
	070 Move X2, [X8+360]
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 Call 0x2D5D9C0, X0, X1
	074 Return X0
	075 Move X0, 0x139E000
	076 Move X0, [X0+1320]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X20, X0
	080 Move X0, 0x13C2000
	081 Move X0, [X0+2344]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X20
	085 Move X2, X31
	086 Call ArgumentNullException..ctor, X0, X1
	087 Move X0, X20
	088 Move X1, X19
	089 Call 0x1C17DEC

Method: System.Boolean IsProperSubsetOf(System.Collections.Generic.IEnumerable`1<T> other)

Disassembly:
	0x02D5C02C ADD X10, X10, 0x1
	0x02D5C030 CMP X10, W12, SXTW
	0x02D5C034 ADD X9, X9, 0xC
	0x02D5C038 B.LT 0x2D5BF98
	0x02D5C03C B 0x2D5C058
	0x02D5C040 LDR W8, [X19 + 0x38]
	0x02D5C044 STP X31, X31, [X19 + 0x10]
	0x02D5C048 ADD W8, W8, 0x1
	0x02D5C04C STR W8, [X19 + 0x38]
	0x02D5C050 B 0x2D5C064
	0x02D5C054 MOV W8, W31
	0x02D5C058 MOVN W9, 0x0
	0x02D5C05C STP X0, X21, [X19 + 0x10]
	0x02D5C060 STP W8, W9, [X19 + 0x24]
	0x02D5C064 LDP X20, X19, [X31 + 0x20]
	0x02D5C068 LDP X22, X21, [X31 + 0x10]
	0x02D5C06C LDR X30, [X31], #0x30
	0x02D5C070 RET
	0x02D5C074 BL 0x1C16F28
	0x02D5C078 BL 0x1C16F20
	0x02D5C07C STP X30, X23, [X31 - 0x30]!
	0x02D5C080 STP X22, X21, [X31 + 0x10]
	0x02D5C084 STP X20, X19, [X31 + 0x20]
	0x02D5C088 ADRP X23, 0x167F000
	0x02D5C08C ADRP X22, 0x13C2000
	0x02D5C090 LDRB W8, [X23 + 0x8BB]
	0x02D5C094 LDR X22, [X22 + 0x548]
	0x02D5C098 MOV X20, X2
	0x02D5C09C MOV W21, W1
	0x02D5C0A0 MOV X19, X0
	0x02D5C0A4 TBNZ X8, 0x0, 0x2D5C0C8
	0x02D5C0A8 ADRP X0, 0x13C2000
	0x02D5C0AC LDR X0, [X0 + 0x548]
	0x02D5C0B0 BL 0x1C16CF4
	0x02D5C0B4 ADRP X0, 0x1398000
	0x02D5C0B8 LDR X0, [X0 + 0xE58]
	0x02D5C0BC BL 0x1C16CF4
	0x02D5C0C0 MOVZ W8, 0x1
	0x02D5C0C4 STRB W8, [X23 + 0x8BB]
	0x02D5C0C8 LDR X0, [X22]
	0x02D5C0CC ADRP X22, 0x1398000
	0x02D5C0D0 LDR W8, [X0 + 0xE0]
	0x02D5C0D4 LDR X22, [X22 + 0xE58]
	0x02D5C0D8 CBNZ W8, 0x2D5C0E0
	0x02D5C0DC BL 0x1C16DFC
	0x02D5C0E0 MOV W0, W21
	0x02D5C0E4 MOV X1, X31
	0x02D5C0E8 BL 0x335042C
	0x02D5C0EC LDR X8, [X22]
	0x02D5C0F0 MOV W21, W0
	0x02D5C0F4 MOV W1, W21
	0x02D5C0F8 MOV X0, X8
	0x02D5C0FC BL 0x1C16D6C
	0x02D5C100 STR X0, [X19 + 0x10]
	0x02D5C104 LDR X8, [X20 + 0x20]
	0x02D5C108 LDR X8, [X8 + 0xC0]
	0x02D5C10C LDR X0, [X8 + 0x118]
	0x02D5C110 LDRB W8, [X0 + 0x135]
	0x02D5C114 TBNZ X8, 0x0, 0x2D5C11C
	0x02D5C118 BL 0x1C5C684
	0x02D5C11C MOV W1, W21
	0x02D5C120 BL 0x1C16D6C
	0x02D5C124 STR X0, [X19 + 0x18]
	0x02D5C128 MOV W0, W21
	0x02D5C12C LDP X20, X19, [X31 + 0x20]
	0x02D5C130 LDP X22, X21, [X31 + 0x10]
	0x02D5C134 LDP X30, X23, [X31], #0x30
	0x02D5C138 RET
	0x02D5C13C STR X30, [X31 - 0x30]!
	0x02D5C140 STP X22, X21, [X31 + 0x10]
	0x02D5C144 STP X20, X19, [X31 + 0x20]
	0x02D5C148 ADRP X22, 0x167F000
	0x02D5C14C ADRP X21, 0x13C2000
	0x02D5C150 LDRB W8, [X22 + 0x8BC]
	0x02D5C154 LDR X21, [X21 + 0x548]
	0x02D5C158 MOV X19, X1
	0x02D5C15C MOV X20, X0
	0x02D5C160 TBNZ X8, 0x0, 0x2D5C178
	0x02D5C164 ADRP X0, 0x13C2000
	0x02D5C168 LDR X0, [X0 + 0x548]
	0x02D5C16C BL 0x1C16CF4
	0x02D5C170 MOVZ W8, 0x1
	0x02D5C174 STRB W8, [X22 + 0x8BC]
	0x02D5C178 LDR X0, [X21]
	0x02D5C17C LDR W21, [X20 + 0x20]
	0x02D5C180 LDR W8, [X0 + 0xE0]
	0x02D5C184 CBNZ W8, 0x2D5C18C
	0x02D5C188 BL 0x1C16DFC
	0x02D5C18C MOV W0, W21
	0x02D5C190 MOV X1, X31
	0x02D5C194 BL 0x33505B4
	0x02D5C198 LDR W8, [X20 + 0x20]
	0x02D5C19C CMP W0, W8
	0x02D5C1A0 B.LE 0x2D5C1C8
	0x02D5C1A4 LDR X8, [X19 + 0x20]
	0x02D5C1A8 MOV W1, W0
	0x02D5C1AC MOV X0, X20
	0x02D5C1B0 LDP X20, X19, [X31 + 0x20]
	0x02D5C1B4 LDR X8, [X8 + 0xC0]
	0x02D5C1B8 LDP X22, X21, [X31 + 0x10]
	0x02D5C1BC LDR X2, [X8 + 0x1A0]
	0x02D5C1C0 LDR X30, [X31], #0x30
	0x02D5C1C4 B 0x2D5C204
	0x02D5C1C8 ADRP X0, 0x139F000
	0x02D5C1CC LDR X0, [X0 + 0x578]
	0x02D5C1D0 BL 0x1C16D08
	0x02D5C1D4 BL 0x1C16F10
	0x02D5C1D8 MOV X20, X0
	0x02D5C1DC ADRP X0, 0x13C2000
	0x02D5C1E0 LDR X0, [X0 + 0xF20]
	0x02D5C1E4 BL 0x1C16D08
	0x02D5C1E8 MOV X1, X0
	0x02D5C1EC MOV X0, X20
	0x02D5C1F0 MOV X2, X31
	0x02D5C1F4 BL 0x3314A68
	0x02D5C1F8 MOV X0, X20
	0x02D5C1FC MOV X1, X19
	0x02D5C200 BL 0x1C16DEC
	0x02D5C204 STR X30, [X31 - 0x30]!
	0x02D5C208 STP X22, X21, [X31 + 0x10]
	0x02D5C20C STP X20, X19, [X31 + 0x20]
	0x02D5C210 ADRP X22, 0x167F000
	0x02D5C214 LDRB W8, [X22 + 0x8BD]
	0x02D5C218 MOV X21, X2
	0x02D5C21C MOV W19, W1
	0x02D5C220 MOV X20, X0
	0x02D5C224 TBNZ X8, 0x0, 0x2D5C23C
	0x02D5C228 ADRP X0, 0x1398000
	0x02D5C22C LDR X0, [X0 + 0xE58]
	0x02D5C230 BL 0x1C16CF4
	0x02D5C234 MOVZ W8, 0x1
	0x02D5C238 STRB W8, [X22 + 0x8BD]
	0x02D5C23C LDR X8, [X21 + 0x20]
	0x02D5C240 LDR X8, [X8 + 0xC0]
	0x02D5C244 LDR X0, [X8 + 0x118]
	0x02D5C248 LDRB W8, [X0 + 0x135]
	0x02D5C24C TBNZ X8, 0x0, 0x2D5C254
	0x02D5C250 BL 0x1C5C684
	0x02D5C254 ADRP X22, 0x1398000
	0x02D5C258 LDR X22, [X22 + 0xE58]
	0x02D5C25C MOV W1, W19
	0x02D5C260 BL 0x1C16D6C
	0x02D5C264 LDR X8, [X20 + 0x18]
	0x02D5C268 MOV X21, X0
	0x02D5C26C CBZ X8, 0x2D5C28C
	0x02D5C270 LDR W4, [X20 + 0x24]
	0x02D5C274 MOV X0, X8
	0x02D5C278 MOV W1, W31
	0x02D5C27C MOV X2, X21
	0x02D5C280 MOV W3, W31
	0x02D5C284 MOV X5, X31
	0x02D5C288 BL 0x339FCE8
	0x02D5C28C LDR X0, [X22]
	0x02D5C290 MOV W1, W19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X2
	007 Compare X1, 0
	008 JumpIfEqual {159}
	009 Move X21, X1
	010 Move X20, X0
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X8, [X19+32]
	013 Move X8, [X8+192]
	014 Move X1, [X8+96]
	015 Move W8, [X1+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {23}
	020 Move X0, X1
	021 Call 0x1C5D684
	022 Move X1, X0
	023 Move X0, X21
	024 Call 0x1C17E00
	025 Compare X0, 0
	026 JumpIfEqual {107}
	027 Move X8, [X19+32]
	028 Move X22, X0
	029 Move X8, [X8+192]
	030 Move X1, [X8+96]
	031 Move W8, [X1+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {39}
	036 Move X0, X1
	037 Call 0x1C5D684
	038 Move X1, X0
	039 Move X8, [X22]
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move X0, X22
	050 Move W2, W31
	051 Call 0x1C5D788
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 Add X8, X8, X9
	054 Add X0, X8, 312
	055 Move X8, [X0]
	056 Move X1, [X0+8]
	057 Move X0, X22
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Compare W0, 0
	060 JumpIfEqual {153}
	061 Move X8, [X19+32]
	062 Move W9, [X20+32]
	063 Move X8, [X8+192]
	064 Compare W9, 0
	065 JumpIfEqual {122}
	066 Move X0, [X8+40]
	067 Move W8, [X0+309]
	068 Move TEMP, X8
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {73}
	072 Call 0x1C5D684
	073 Move X8, [X21]
	074 Move W9, [X0+304]
	075 Move W10, [X8+304]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X8, [X8+200]
	078 Add X8, X8, X9
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X8, [X19+32]
	082 Move X0, X20
	083 Move X1, X21
	084 Move X8, [X8+192]
	085 Move X2, [X8+72]
	086 Call 0x2D5F2BC, X0, X1
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {107}
	091 Move W8, [X20+32]
	092 Move W9, [X21+32]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X8, [X19+32]
	095 Move X0, X20
	096 Move X1, X21
	097 Move X20, [X31+32]
	098 Move X19, [X31+40]
	099 Move X8, [X8+192]
	100 Move X22, [X31+16]
	101 Move X21, [X31+24]
	102 Move X2, [X8+360]
	103 Move X30, [X31+48]
	104 Call 0x2D5D9C0, X0, X1
	105 Return X0
	106 Move W0, W31
	107 Move X8, [X19+32]
	108 Move X0, X20
	109 Move X1, X21
	110 Move W2, W31
	111 Move X8, [X8+192]
	112 Move X3, [X8+368]
	113 Call 0x2D5EBBC, X0, X1, X2
	114 Move W9, [X20+32]
	115 Move X8, X0
	116 Move W0, W31
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X8, X8
	119 ShiftRight X8, 32
	120 And X8, X8, 0x7FFFFFFF
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X1, [X8+96]
	123 Move W8, [X1+309]
	124 Move TEMP, X8
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {131}
	128 Move X0, X1
	129 Call 0x1C5D684
	130 Move X1, X0
	131 Move X8, [X22]
	132 NotImplemented "Instruction LDRH not yet implemented."
	133 Compare X9, 0
	134 JumpIfEqual {141}
	135 Move X10, [X8+176]
	136 Add X10, X10, 8
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Subtract X9, X9, 1
	140 Add X10, X10, 16
	141 Move X0, X22
	142 Move W2, W31
	143 Call 0x1C5D788
	144 NotImplemented "Instruction LDRSW not yet implemented."
	145 Add X8, X8, X9
	146 Add X0, X8, 312
	147 Move X8, [X0]
	148 Move X1, [X0+8]
	149 Move X0, X22
	150 NotImplemented "Instruction BLR not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 NotImplemented "Instruction CSET not yet implemented."
	153 Move X20, [X31+32]
	154 Move X19, [X31+40]
	155 Move X22, [X31+16]
	156 Move X21, [X31+24]
	157 Move X30, [X31+48]
	158 Return X0
	159 Move X0, 0x139D000
	160 Move X0, [X0+1320]
	161 Call 0x1C17D08
	162 Call 0x1C17F10
	163 Move X20, X0
	164 Move X0, 0x13C2000
	165 Move X0, [X0+2344]
	166 Call 0x1C17D08
	167 Move X1, X0
	168 Move X0, X20
	169 Move X2, X31
	170 Call ArgumentNullException..ctor, X0, X1
	171 Move X0, X20
	172 Move X1, X19
	173 Call 0x1C17DEC

Method: System.Boolean IsSupersetOf(System.Collections.Generic.IEnumerable`1<T> other)

Disassembly:
	0x02D5C294 BL 0x1C16D6C
	0x02D5C298 LDR W8, [X20 + 0x24]
	0x02D5C29C CMP W8, 0x1
	0x02D5C2A0 B.LT 0x2D5C2FC
	0x02D5C2A4 CBZ X21, 0x2D5C314
	0x02D5C2A8 LDR W9, [X21 + 0x18]
	0x02D5C2AC MOV W8, W31
	0x02D5C2B0 ADD X10, X21, 0x24
	0x02D5C2B4 CMP W8, W9
	0x02D5C2B8 B.CS 0x2D5C310
	0x02D5C2BC CBZ X0, 0x2D5C314
	0x02D5C2C0 LDUR W11, [X10 - 0x4]
	0x02D5C2C4 LDR W12, [X0 + 0x18]
	0x02D5C2C8 SDIV W13, W11, W19
	0x02D5C2CC MSUB W11, W13, W19, W11
	0x02D5C2D0 CMP W11, W12
	0x02D5C2D4 B.CS 0x2D5C310
	0x02D5C2D8 ADD X11, X0, W11, 0x2, SXTW
	0x02D5C2DC LDR W12, [X11 + 0x20]
	0x02D5C2E0 ADD W8, W8, 0x1
	0x02D5C2E4 SUB W12, W12, 0x1
	0x02D5C2E8 STR W12, [X10], #0xC
	0x02D5C2EC STR W8, [X11 + 0x20]
	0x02D5C2F0 LDR W11, [X20 + 0x24]
	0x02D5C2F4 CMP W8, W11
	0x02D5C2F8 B.LT 0x2D5C2B4
	0x02D5C2FC STP X0, X21, [X20 + 0x10]
	0x02D5C300 LDP X20, X19, [X31 + 0x20]
	0x02D5C304 LDP X22, X21, [X31 + 0x10]
	0x02D5C308 LDR X30, [X31], #0x30
	0x02D5C30C RET
	0x02D5C310 BL 0x1C16F28
	0x02D5C314 BL 0x1C16F20
	0x02D5C318 SUB X31, X31, 0x70
	0x02D5C31C STP X29, X30, [X31 + 0x10]
	0x02D5C320 STP X28, X27, [X31 + 0x20]
	0x02D5C324 STP X26, X25, [X31 + 0x30]
	0x02D5C328 STP X24, X23, [X31 + 0x40]
	0x02D5C32C STP X22, X21, [X31 + 0x50]
	0x02D5C330 STP X20, X19, [X31 + 0x60]
	0x02D5C334 LDR X8, [X0 + 0x10]
	0x02D5C338 MOV X22, X2
	0x02D5C33C MOV X19, X0
	0x02D5C340 MOV X20, X1
	0x02D5C344 CBNZ X8, 0x2D5C360
	0x02D5C348 LDR X8, [X22 + 0x20]
	0x02D5C34C MOV X0, X19
	0x02D5C350 MOV W1, W31
	0x02D5C354 LDR X8, [X8 + 0xC0]
	0x02D5C358 LDR X2, [X8 + 0x70]
	0x02D5C35C BL 0x2D5C07C
	0x02D5C360 LDR X8, [X22 + 0x20]
	0x02D5C364 AND X23, X20, 0xFFFF
	0x02D5C368 MOV X0, X19
	0x02D5C36C MOV X1, X23
	0x02D5C370 LDR X8, [X8 + 0xC0]
	0x02D5C374 LDR X2, [X8 + 0xB0]
	0x02D5C378 BL 0x2D5E320
	0x02D5C37C LDR X8, [X19 + 0x10]
	0x02D5C380 CBZ X8, 0x2D5C618
	0x02D5C384 LDR W9, [X8 + 0x18]
	0x02D5C388 MOV W21, W0
	0x02D5C38C STR X20, [X31]
	0x02D5C390 SDIV W10, W0, W9
	0x02D5C394 MSUB W10, W10, W9, W0
	0x02D5C398 CMP W10, W9
	0x02D5C39C B.CS 0x2D5C5D8
	0x02D5C3A0 ADD X8, X8, W10, 0x2, SXTW
	0x02D5C3A4 LDR W8, [X8 + 0x20]
	0x02D5C3A8 LDR X26, [X19 + 0x18]
	0x02D5C3AC STR W10, [X31 + 0xC]
	0x02D5C3B0 SUBS W29, W8, 0x1
	0x02D5C3B4 B.MI 0x2D5C49C
	0x02D5C3B8 CBZ X26, 0x2D5C618
	0x02D5C3BC LDR X8, [X26 + 0x18]
	0x02D5C3C0 MOV W28, W31
	0x02D5C3C4 MOVZ W20, 0xC
	0x02D5C3C8 CMP W29, W8
	0x02D5C3CC B.CS 0x2D5C5D8
	0x02D5C3D0 UMADDL X9, X29, X20, X26
	0x02D5C3D4 LDR W9, [X9 + 0x20]
	0x02D5C3D8 MOV W27, W29
	0x02D5C3DC CMP W9, W21
	0x02D5C3E0 B.NE 0x2D5C47C
	0x02D5C3E4 LDR X24, [X19 + 0x30]
	0x02D5C3E8 CBZ X24, 0x2D5C618
	0x02D5C3EC LDR X8, [X22 + 0x20]
	0x02D5C3F0 LDR X8, [X8 + 0xC0]
	0x02D5C3F4 LDR X1, [X8 + 0x20]
	0x02D5C3F8 NOP
	0x02D5C3FC MADD X8, X27, X20, X26
	0x02D5C400 LDRH W25, [X8 + 0x28]
	0x02D5C404 LDRB W9, [X1 + 0x135]
	0x02D5C408 TBNZ X9, 0x0, 0x2D5C418
	0x02D5C40C MOV X0, X1
	0x02D5C410 BL 0x1C5C684
	0x02D5C414 MOV X1, X0
	0x02D5C418 LDR X8, [X24]
	0x02D5C41C LDRH W9, [X8 + 0x12E]
	0x02D5C420 CBZ X9, 0x2D5C444
	0x02D5C424 LDR X10, [X8 + 0xB0]
	0x02D5C428 ADD X10, X10, 0x8
	0x02D5C42C LDUR X11, [X10 - 0x8]
	0x02D5C430 CMP X11, X1
	0x02D5C434 B.EQ 0x2D5C454
	0x02D5C438 SUBS X9, X9, 0x1
	0x02D5C43C ADD X10, X10, 0x10
	0x02D5C440 B.NE 0x2D5C42C
	0x02D5C444 MOV X0, X24

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X2
	007 Compare X1, 0
	008 JumpIfEqual {111}
	009 Move X20, X1
	010 Move X21, X0
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X8, [X19+32]
	013 Move X8, [X8+192]
	014 Move X1, [X8+96]
	015 Move W8, [X1+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {23}
	020 Move X0, X1
	021 Call 0x1C5D684
	022 Move X1, X0
	023 Move X0, X20
	024 Call 0x1C17E00
	025 Compare X0, 0
	026 JumpIfEqual {99}
	027 Move X8, [X19+32]
	028 Move X22, X0
	029 Move X8, [X8+192]
	030 Move X1, [X8+96]
	031 Move W8, [X1+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {39}
	036 Move X0, X1
	037 Call 0x1C5D684
	038 Move X1, X0
	039 Move X8, [X22]
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move X0, X22
	050 Move W2, W31
	051 Call 0x1C5D788
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 Add X8, X8, X9
	054 Add X0, X8, 312
	055 Move X8, [X0]
	056 Move X1, [X0+8]
	057 Move X0, X22
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Compare W0, 0
	060 JumpIfEqual {92}
	061 Move X8, [X19+32]
	062 Move X8, [X8+192]
	063 Move X0, [X8+40]
	064 Move W8, [X0+309]
	065 Move TEMP, X8
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {70}
	069 Call 0x1C5D684
	070 Move X8, [X20]
	071 Move W9, [X0+304]
	072 Move W10, [X8+304]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X8, [X8+200]
	075 Add X8, X8, X9
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X8, [X19+32]
	079 Move X0, X21
	080 Move X1, X20
	081 Move X8, [X8+192]
	082 Move X2, [X8+72]
	083 Call 0x2D5F2BC, X0, X1
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {99}
	088 Move W8, [X20+32]
	089 Move W9, [X21+32]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move W0, W31
	092 Move W0, 1
	093 Move X20, [X31+32]
	094 Move X19, [X31+40]
	095 Move X22, [X31+16]
	096 Move X21, [X31+24]
	097 Move X30, [X31+48]
	098 Return X0
	099 Move X8, [X19+32]
	100 Move X0, X21
	101 Move X1, X20
	102 Move X20, [X31+32]
	103 Move X19, [X31+40]
	104 Move X8, [X8+192]
	105 Move X22, [X31+16]
	106 Move X21, [X31+24]
	107 Move X2, [X8+384]
	108 Move X30, [X31+48]
	109 Call 0x2D5D6B4, X0, X1
	110 Return X0
	111 Move X0, 0x139D000
	112 Move X0, [X0+1320]
	113 Call 0x1C17D08
	114 Call 0x1C17F10
	115 Move X20, X0
	116 Move X0, 0x13C2000
	117 Move X0, [X0+2344]
	118 Call 0x1C17D08
	119 Move X1, X0
	120 Move X0, X20
	121 Move X2, X31
	122 Call ArgumentNullException..ctor, X0, X1
	123 Move X0, X20
	124 Move X1, X19
	125 Call 0x1C17DEC

Method: System.Boolean IsProperSupersetOf(System.Collections.Generic.IEnumerable`1<T> other)

Disassembly:
	0x02D5C448 MOV W2, W31
	0x02D5C44C BL 0x1C5C788
	0x02D5C450 B 0x2D5C460
	0x02D5C454 LDRSW X9, [X10]
	0x02D5C458 ADD X8, X8, X9, 0x4, LSL
	0x02D5C45C ADD X0, X8, 0x138
	0x02D5C460 LDP X8, X3, [X0]
	0x02D5C464 MOV X0, X24
	0x02D5C468 MOV X1, X25
	0x02D5C46C MOV X2, X23
	0x02D5C470 BLR X8
	0x02D5C474 TBNZ X0, 0x0, 0x2D5C524
	0x02D5C478 LDR X8, [X26 + 0x18]
	0x02D5C47C CMP W28, W8
	0x02D5C480 B.GE 0x2D5C5DC
	0x02D5C484 CMP W29, W8
	0x02D5C488 B.CS 0x2D5C5D8
	0x02D5C48C MADD X9, X27, X20, X26
	0x02D5C490 LDR W29, [X9 + 0x24]
	0x02D5C494 ADD W28, W28, 0x1
	0x02D5C498 TBZ X29, 0x1F, 0x2D5C3C8
	0x02D5C49C LDR W8, [X19 + 0x28]
	0x02D5C4A0 TBNZ X8, 0x1F, 0x2D5C4CC
	0x02D5C4A4 CBZ X26, 0x2D5C618
	0x02D5C4A8 LDR W9, [X26 + 0x18]
	0x02D5C4AC LDR W11, [X31 + 0xC]
	0x02D5C4B0 CMP W8, W9
	0x02D5C4B4 B.CS 0x2D5C5D8
	0x02D5C4B8 MOVZ W9, 0xC
	0x02D5C4BC MADD X9, X8, X9, X26
	0x02D5C4C0 LDR W9, [X9 + 0x24]
	0x02D5C4C4 STR W9, [X19 + 0x28]
	0x02D5C4C8 B 0x2D5C534
	0x02D5C4CC CBZ X26, 0x2D5C618
	0x02D5C4D0 LDR W8, [X19 + 0x24]
	0x02D5C4D4 LDR W9, [X26 + 0x18]
	0x02D5C4D8 LDR W11, [X31 + 0xC]
	0x02D5C4DC CMP W8, W9
	0x02D5C4E0 B.NE 0x2D5C52C
	0x02D5C4E4 LDR X8, [X22 + 0x20]
	0x02D5C4E8 MOV X0, X19
	0x02D5C4EC LDR X8, [X8 + 0xC0]
	0x02D5C4F0 LDR X1, [X8 + 0x1A8]
	0x02D5C4F4 BL 0x2D5C13C
	0x02D5C4F8 LDR X9, [X19 + 0x10]
	0x02D5C4FC CBZ X9, 0x2D5C618
	0x02D5C500 LDR W8, [X19 + 0x24]
	0x02D5C504 LDR X26, [X19 + 0x18]
	0x02D5C508 LDR W9, [X9 + 0x18]
	0x02D5C50C ADD W10, W8, 0x1
	0x02D5C510 STR W10, [X19 + 0x24]
	0x02D5C514 CBZ X26, 0x2D5C618
	0x02D5C518 SDIV W10, W21, W9
	0x02D5C51C MSUB W11, W10, W9, W21
	0x02D5C520 B 0x2D5C534
	0x02D5C524 MOV W0, W31
	0x02D5C528 B 0x2D5C5B8
	0x02D5C52C ADD W9, W8, 0x1
	0x02D5C530 STR W9, [X19 + 0x24]
	0x02D5C534 LDR W9, [X26 + 0x18]
	0x02D5C538 CMP W8, W9
	0x02D5C53C B.CS 0x2D5C5D8
	0x02D5C540 LDR X10, [X31]
	0x02D5C544 MOVZ W9, 0xC
	0x02D5C548 SMADDL X9, X8, X9, X26
	0x02D5C54C STR W21, [X9 + 0x20]
	0x02D5C550 STRH W10, [X9 + 0x28]
	0x02D5C554 LDR X9, [X19 + 0x10]
	0x02D5C558 CBZ X9, 0x2D5C618
	0x02D5C55C LDR W10, [X9 + 0x18]
	0x02D5C560 CMP W11, W10
	0x02D5C564 B.CS 0x2D5C5D8
	0x02D5C568 LDR W10, [X26 + 0x18]
	0x02D5C56C CMP W8, W10
	0x02D5C570 B.CS 0x2D5C5D8
	0x02D5C574 ADD X9, X9, W11, 0x2, SXTW
	0x02D5C578 LDR W11, [X9 + 0x20]!
	0x02D5C57C MOV W10, W8
	0x02D5C580 SXTW X10, W10
	0x02D5C584 MOVZ W12, 0xC
	0x02D5C588 ADD W8, W8, 0x1
	0x02D5C58C MADD X10, X10, X12, X26
	0x02D5C590 SUB W11, W11, 0x1
	0x02D5C594 STR W11, [X10 + 0x24]
	0x02D5C598 STR W8, [X9]
	0x02D5C59C LDR W8, [X19 + 0x20]
	0x02D5C5A0 LDR W9, [X19 + 0x38]
	0x02D5C5A4 MOVZ W0, 0x1
	0x02D5C5A8 ADD W8, W8, 0x1
	0x02D5C5AC ADD W9, W9, 0x1
	0x02D5C5B0 STR W8, [X19 + 0x20]
	0x02D5C5B4 STR W9, [X19 + 0x38]
	0x02D5C5B8 LDP X20, X19, [X31 + 0x60]
	0x02D5C5BC LDP X22, X21, [X31 + 0x50]
	0x02D5C5C0 LDP X24, X23, [X31 + 0x40]
	0x02D5C5C4 LDP X26, X25, [X31 + 0x30]
	0x02D5C5C8 LDP X28, X27, [X31 + 0x20]
	0x02D5C5CC LDP X29, X30, [X31 + 0x10]
	0x02D5C5D0 ADD X31, X31, 0x70
	0x02D5C5D4 RET
	0x02D5C5D8 BL 0x1C16F28
	0x02D5C5DC ADRP X0, 0x1397000
	0x02D5C5E0 LDR X0, [X0 + 0x5B0]
	0x02D5C5E4 BL 0x1C16D08
	0x02D5C5E8 BL 0x1C16F10
	0x02D5C5EC MOV X19, X0
	0x02D5C5F0 ADRP X0, 0x13C2000
	0x02D5C5F4 LDR X0, [X0 + 0xF00]
	0x02D5C5F8 BL 0x1C16D08
	0x02D5C5FC MOV X1, X0
	0x02D5C600 MOV X0, X19
	0x02D5C604 MOV X2, X31
	0x02D5C608 BL 0x337DF1C
	0x02D5C60C MOV X0, X19
	0x02D5C610 MOV X1, X22
	0x02D5C614 BL 0x1C16DEC
	0x02D5C618 BL 0x1C16F20
	0x02D5C61C STR X30, [X31 - 0x10]!
	0x02D5C620 LDR X8, [X0 + 0x10]
	0x02D5C624 CBZ X8, 0x2D5C6AC
	0x02D5C628 LDR X9, [X0 + 0x18]
	0x02D5C62C CBZ X9, 0x2D5C6AC
	0x02D5C630 LDR W10, [X9 + 0x18]
	0x02D5C634 CMP W10, W1
	0x02D5C638 B.LS 0x2D5C6B0
	0x02D5C63C LDR W10, [X8 + 0x18]
	0x02D5C640 SXTW X8, W1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X2
	007 Compare X1, 0
	008 JumpIfEqual {131}
	009 Move X21, X1
	010 Move X20, X0
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W0, W31
	013 Move W8, [X20+32]
	014 Compare W8, 0
	015 JumpIfEqual {124}
	016 Move X8, [X19+32]
	017 Move X8, [X8+192]
	018 Move X1, [X8+96]
	019 Move W8, [X1+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {27}
	024 Move X0, X1
	025 Call 0x1C5D684
	026 Move X1, X0
	027 Move X0, X21
	028 Call 0x1C17E00
	029 Compare X0, 0
	030 JumpIfEqual {107}
	031 Move X8, [X19+32]
	032 Move X22, X0
	033 Move X8, [X8+192]
	034 Move X1, [X8+96]
	035 Move W8, [X1+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {43}
	040 Move X0, X1
	041 Call 0x1C5D684
	042 Move X1, X0
	043 Move X8, [X22]
	044 NotImplemented "Instruction LDRH not yet implemented."
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move X0, X22
	054 Move W2, W31
	055 Call 0x1C5D788
	056 NotImplemented "Instruction LDRSW not yet implemented."
	057 Add X8, X8, X9
	058 Add X0, X8, 312
	059 Move X8, [X0]
	060 Move X1, [X0+8]
	061 Move X0, X22
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Compare W0, 0
	064 JumpIfEqual {123}
	065 Move X8, [X19+32]
	066 Move X8, [X8+192]
	067 Move X0, [X8+40]
	068 Move W8, [X0+309]
	069 Move TEMP, X8
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {74}
	073 Call 0x1C5D684
	074 Move X8, [X21]
	075 Move W9, [X0+304]
	076 Move W10, [X8+304]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X8, [X8+200]
	079 Add X8, X8, X9
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X8, [X19+32]
	083 Move X0, X20
	084 Move X1, X21
	085 Move X8, [X8+192]
	086 Move X2, [X8+72]
	087 Call 0x2D5F2BC, X0, X1
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {107}
	092 Move W8, [X21+32]
	093 Move W9, [X20+32]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X8, [X19+32]
	096 Move X0, X20
	097 Move X1, X21
	098 Move X20, [X31+32]
	099 Move X19, [X31+40]
	100 Move X8, [X8+192]
	101 Move X22, [X31+16]
	102 Move X21, [X31+24]
	103 Move X2, [X8+384]
	104 Move X30, [X31+48]
	105 Call 0x2D5D6B4, X0, X1
	106 Return X0
	107 Move X8, [X19+32]
	108 Move W2, 1
	109 Move X0, X20
	110 Move X1, X21
	111 Move X8, [X8+192]
	112 Move X3, [X8+368]
	113 Call 0x2D5EBBC, X0, X1, X2
	114 Move W8, [X20+32]
	115 Move X9, X0
	116 ShiftRight X9, 32
	117 And X9, X9, 0x7FFFFFFF
	118 NotImplemented "Instruction CMP not yet implemented."
	119 NotImplemented "Instruction CSET not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 NotImplemented "Instruction CSET not yet implemented."
	122 And W0, W9, W8
	123 Move W0, 1
	124 Move X20, [X31+32]
	125 Move X19, [X31+40]
	126 Move X22, [X31+16]
	127 Move X21, [X31+24]
	128 Move X30, [X31+48]
	129 Return X0
	130 Move W0, W31
	131 Move X0, 0x139D000
	132 Move X0, [X0+1320]
	133 Call 0x1C17D08
	134 Call 0x1C17F10
	135 Move X20, X0
	136 Move X0, 0x13C2000
	137 Move X0, [X0+2344]
	138 Call 0x1C17D08
	139 Move X1, X0
	140 Move X0, X20
	141 Move X2, X31
	142 Call ArgumentNullException..ctor, X0, X1
	143 Move X0, X20
	144 Move X1, X19
	145 Call 0x1C17DEC

Method: System.Boolean Overlaps(System.Collections.Generic.IEnumerable`1<T> other)

Disassembly:
	0x02D5C644 MOVZ W11, 0xC
	0x02D5C648 MADD X9, X8, X11, X9
	0x02D5C64C STR W2, [X9 + 0x20]
	0x02D5C650 STRH W3, [X9 + 0x28]
	0x02D5C654 LDR X9, [X0 + 0x18]
	0x02D5C658 CBZ X9, 0x2D5C6AC
	0x02D5C65C LDR X11, [X0 + 0x10]
	0x02D5C660 CBZ X11, 0x2D5C6AC
	0x02D5C664 LDR W12, [X11 + 0x18]
	0x02D5C668 SDIV W13, W2, W10
	0x02D5C66C MSUB W10, W13, W10, W2
	0x02D5C670 CMP W10, W12
	0x02D5C674 B.CS 0x2D5C6B0
	0x02D5C678 LDR W12, [X9 + 0x18]
	0x02D5C67C CMP W12, W1
	0x02D5C680 B.LS 0x2D5C6B0
	0x02D5C684 ADD X10, X11, W10, 0x2, SXTW
	0x02D5C688 LDR W11, [X10 + 0x20]!
	0x02D5C68C MOVZ W12, 0xC
	0x02D5C690 ADD W13, W1, 0x1
	0x02D5C694 MADD X8, X8, X12, X9
	0x02D5C698 SUB W9, W11, 0x1
	0x02D5C69C STR W9, [X8 + 0x24]
	0x02D5C6A0 STR W13, [X10]
	0x02D5C6A4 LDR X30, [X31], #0x10
	0x02D5C6A8 RET
	0x02D5C6AC BL 0x1C16F20
	0x02D5C6B0 BL 0x1C16F28
	0x02D5C6B4 STR X30, [X31 - 0x40]!
	0x02D5C6B8 STP X24, X23, [X31 + 0x10]
	0x02D5C6BC STP X22, X21, [X31 + 0x20]
	0x02D5C6C0 STP X20, X19, [X31 + 0x30]
	0x02D5C6C4 ADRP X22, 0x167F000
	0x02D5C6C8 LDRB W8, [X22 + 0x8BE]
	0x02D5C6CC MOV X20, X2
	0x02D5C6D0 MOV X19, X1
	0x02D5C6D4 MOV X21, X0
	0x02D5C6D8 TBNZ X8, 0x0, 0x2D5C6FC
	0x02D5C6DC ADRP X0, 0x1397000
	0x02D5C6E0 LDR X0, [X0 + 0xE00]
	0x02D5C6E4 BL 0x1C16CF4
	0x02D5C6E8 ADRP X0, 0x1397000
	0x02D5C6EC LDR X0, [X0 + 0xE18]
	0x02D5C6F0 BL 0x1C16CF4
	0x02D5C6F4 MOVZ W8, 0x1
	0x02D5C6F8 STRB W8, [X22 + 0x8BE]
	0x02D5C6FC CBZ X19, 0x2D5C8FC
	0x02D5C700 LDR X8, [X20 + 0x20]
	0x02D5C704 LDR X8, [X8 + 0xC0]
	0x02D5C708 LDR X1, [X8 + 0x38]
	0x02D5C70C LDRB W8, [X1 + 0x135]
	0x02D5C710 TBNZ X8, 0x0, 0x2D5C720
	0x02D5C714 MOV X0, X1
	0x02D5C718 BL 0x1C5C684
	0x02D5C71C MOV X1, X0
	0x02D5C720 LDR X8, [X19]
	0x02D5C724 LDRH W9, [X8 + 0x12E]
	0x02D5C728 CBZ X9, 0x2D5C74C
	0x02D5C72C LDR X10, [X8 + 0xB0]
	0x02D5C730 ADD X10, X10, 0x8
	0x02D5C734 LDUR X11, [X10 - 0x8]
	0x02D5C738 CMP X11, X1
	0x02D5C73C B.EQ 0x2D5C75C
	0x02D5C740 SUBS X9, X9, 0x1
	0x02D5C744 ADD X10, X10, 0x10
	0x02D5C748 B.NE 0x2D5C734
	0x02D5C74C MOV X0, X19
	0x02D5C750 MOV W2, W31
	0x02D5C754 BL 0x1C5C788
	0x02D5C758 B 0x2D5C768
	0x02D5C75C LDRSW X9, [X10]
	0x02D5C760 ADD X8, X8, X9, 0x4, LSL
	0x02D5C764 ADD X0, X8, 0x138
	0x02D5C768 LDP X8, X1, [X0]
	0x02D5C76C ADRP X23, 0x1397000
	0x02D5C770 LDR X23, [X23 + 0xE00]
	0x02D5C774 MOV X0, X19
	0x02D5C778 BLR X8
	0x02D5C77C MOV X19, X0
	0x02D5C780 CBZ X0, 0x2D5C900
	0x02D5C784 ADRP X24, 0x1397000
	0x02D5C788 LDR X24, [X24 + 0xE18]
	0x02D5C78C LDR X8, [X19]
	0x02D5C790 LDR X1, [X24]
	0x02D5C794 LDRH W9, [X8 + 0x12E]
	0x02D5C798 CBZ X9, 0x2D5C7BC
	0x02D5C79C LDR X10, [X8 + 0xB0]
	0x02D5C7A0 ADD X10, X10, 0x8
	0x02D5C7A4 LDUR X11, [X10 - 0x8]
	0x02D5C7A8 CMP X11, X1
	0x02D5C7AC B.EQ 0x2D5C7CC
	0x02D5C7B0 SUBS X9, X9, 0x1
	0x02D5C7B4 ADD X10, X10, 0x10
	0x02D5C7B8 B.NE 0x2D5C7A4
	0x02D5C7BC MOV X0, X19
	0x02D5C7C0 MOV W2, W31
	0x02D5C7C4 BL 0x1C5C788
	0x02D5C7C8 B 0x2D5C7D8
	0x02D5C7CC LDRSW X9, [X10]
	0x02D5C7D0 ADD X8, X8, X9, 0x4, LSL
	0x02D5C7D4 ADD X0, X8, 0x138
	0x02D5C7D8 LDP X8, X1, [X0]
	0x02D5C7DC MOV X0, X19
	0x02D5C7E0 BLR X8
	0x02D5C7E4 MOV W22, W0
	0x02D5C7E8 TBZ X0, 0x0, 0x2D5C87C
	0x02D5C7EC LDR X8, [X20 + 0x20]
	0x02D5C7F0 LDR X8, [X8 + 0xC0]
	0x02D5C7F4 LDR X1, [X8 + 0xE8]
	0x02D5C7F8 LDRB W8, [X1 + 0x135]
	0x02D5C7FC TBNZ X8, 0x0, 0x2D5C80C
	0x02D5C800 MOV X0, X1
	0x02D5C804 BL 0x1C5C684
	0x02D5C808 MOV X1, X0
	0x02D5C80C LDR X8, [X19]
	0x02D5C810 LDRH W9, [X8 + 0x12E]
	0x02D5C814 CBZ X9, 0x2D5C838
	0x02D5C818 LDR X10, [X8 + 0xB0]
	0x02D5C81C ADD X10, X10, 0x8
	0x02D5C820 LDUR X11, [X10 - 0x8]
	0x02D5C824 CMP X11, X1
	0x02D5C828 B.EQ 0x2D5C848
	0x02D5C82C SUBS X9, X9, 0x1
	0x02D5C830 ADD X10, X10, 0x10
	0x02D5C834 B.NE 0x2D5C820
	0x02D5C838 MOV X0, X19
	0x02D5C83C MOV W2, W31
	0x02D5C840 BL 0x1C5C788
	0x02D5C844 B 0x2D5C854
	0x02D5C848 LDRSW X9, [X10]
	0x02D5C84C ADD X8, X8, X9, 0x4, LSL
	0x02D5C850 ADD X0, X8, 0x138
	0x02D5C854 LDP X8, X1, [X0]
	0x02D5C858 MOV X0, X19
	0x02D5C85C BLR X8
	0x02D5C860 LDR X8, [X20 + 0x20]
	0x02D5C864 AND X1, X0, 0xFFFF
	0x02D5C868 LDR X8, [X8 + 0xC0]
	0x02D5C86C LDR X2, [X8 + 0x188]
	0x02D5C870 MOV X0, X21
	0x02D5C874 BL 0x2D59AB4
	0x02D5C878 TBNZ X0, 0x0, 0x2D5C78C
	0x02D5C87C MOV X20, X31
	0x02D5C880 EOR W21, W22, 0x1
	0x02D5C884 CBZ X19, 0x2D5C8E0
	0x02D5C888 LDR X8, [X19]
	0x02D5C88C LDR X1, [X23]
	0x02D5C890 LDRH W9, [X8 + 0x12E]
	0x02D5C894 CBZ X9, 0x2D5C8B8
	0x02D5C898 LDR X10, [X8 + 0xB0]
	0x02D5C89C ADD X10, X10, 0x8
	0x02D5C8A0 LDUR X11, [X10 - 0x8]
	0x02D5C8A4 CMP X11, X1
	0x02D5C8A8 B.EQ 0x2D5C8C8
	0x02D5C8AC SUBS X9, X9, 0x1
	0x02D5C8B0 ADD X10, X10, 0x10
	0x02D5C8B4 B.NE 0x2D5C8A0
	0x02D5C8B8 MOV X0, X19
	0x02D5C8BC MOV W2, W31
	0x02D5C8C0 BL 0x1C5C788
	0x02D5C8C4 B 0x2D5C8D4
	0x02D5C8C8 LDRSW X9, [X10]
	0x02D5C8CC ADD X8, X8, X9, 0x4, LSL
	0x02D5C8D0 ADD X0, X8, 0x138
	0x02D5C8D4 LDP X8, X1, [X0]
	0x02D5C8D8 MOV X0, X19
	0x02D5C8DC BLR X8
	0x02D5C8E0 CBNZ X20, 0x2D5C904
	0x02D5C8E4 AND W0, W21, 0x1
	0x02D5C8E8 LDP X20, X19, [X31 + 0x30]
	0x02D5C8EC LDP X22, X21, [X31 + 0x20]
	0x02D5C8F0 LDP X24, X23, [X31 + 0x10]
	0x02D5C8F4 LDR X30, [X31], #0x40
	0x02D5C8F8 RET
	0x02D5C8FC BL 0x1C16F20
	0x02D5C900 BL 0x1C16F20
	0x02D5C904 MOV X0, X20
	0x02D5C908 BL 0x1C16F18
	0x02D5C90C B 0x2D5C918
	0x02D5C910 B 0x2D5C918
	0x02D5C914 B 0x2D5C918
	0x02D5C918 MOV X21, X0
	0x02D5C91C CMP W1, 0x1
	0x02D5C920 B.NE 0x2D5C940
	0x02D5C924 MOV X0, X21
	0x02D5C928 BL 0x3EB1AD0
	0x02D5C92C LDR X20, [X0]
	0x02D5C930 BL 0x3EB1AE0
	0x02D5C934 MOVZ W21, 0x1
	0x02D5C938 CBNZ X19, 0x2D5C888
	0x02D5C93C B 0x2D5C8E0
	0x02D5C940 MOV X20, X31
	0x02D5C944 B 0x2D5C94C
	0x02D5C948 MOV X21, X0
	0x02D5C94C CBZ X19, 0x2D5C9A8
	0x02D5C950 LDR X8, [X19]
	0x02D5C954 LDR X1, [X23]
	0x02D5C958 LDRH W9, [X8 + 0x12E]
	0x02D5C95C CBZ X9, 0x2D5C980
	0x02D5C960 LDR X10, [X8 + 0xB0]
	0x02D5C964 ADD X10, X10, 0x8
	0x02D5C968 LDUR X11, [X10 - 0x8]
	0x02D5C96C CMP X11, X1
	0x02D5C970 B.EQ 0x2D5C990
	0x02D5C974 SUBS X9, X9, 0x1
	0x02D5C978 ADD X10, X10, 0x10
	0x02D5C97C B.NE 0x2D5C968
	0x02D5C980 MOV X0, X19
	0x02D5C984 MOV W2, W31
	0x02D5C988 BL 0x1C5C788
	0x02D5C98C B 0x2D5C99C
	0x02D5C990 LDRSW X9, [X10]
	0x02D5C994 ADD X8, X8, X9, 0x4, LSL
	0x02D5C998 ADD X0, X8, 0x138
	0x02D5C99C LDP X8, X1, [X0]
	0x02D5C9A0 MOV X0, X19
	0x02D5C9A4 BLR X8
	0x02D5C9A8 CBNZ X20, 0x2D5C9B4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1680000
	008 Move W8, [X22+2233]
	009 Move X20, X2
	010 Move X19, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x1398000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move X0, 0x1398000
	020 Move X0, [X0+3608]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2233], W8
	024 Compare X19, 0
	025 JumpIfEqual {175}
	026 Move W8, [X21+32]
	027 Compare W8, 0
	028 JumpIfEqual {54}
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X20+32]
	031 Move X8, [X8+192]
	032 Move X1, [X8+56]
	033 Move W8, [X1+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {41}
	038 Move X0, X1
	039 Call 0x1C5D684
	040 Move X1, X0
	041 Move X8, [X19]
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move X0, X19
	052 Move W2, W31
	053 Call 0x1C5D788
	054 Move W22, W31
	055 Move W22, 1
	056 NotImplemented "Instruction LDRSW not yet implemented."
	057 Add X8, X8, X9
	058 Add X0, X8, 312
	059 Move X8, [X0]
	060 Move X1, [X0+8]
	061 Move X0, X19
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X19, X0
	064 Compare X0, 0
	065 JumpIfEqual {190}
	066 Move X23, 0x1398000
	067 Move X23, [X23+3608]
	068 Move X8, [X19]
	069 Move X1, [X23]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Compare X9, 0
	072 JumpIfEqual {79}
	073 Move X10, [X8+176]
	074 Add X10, X10, 8
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Subtract X9, X9, 1
	078 Add X10, X10, 16
	079 Move X0, X19
	080 Move W2, W31
	081 Call 0x1C5D788
	082 NotImplemented "Instruction LDRSW not yet implemented."
	083 Add X8, X8, X9
	084 Add X0, X8, 312
	085 Move X8, [X0]
	086 Move X1, [X0+8]
	087 Move X0, X19
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move W22, W0
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {138}
	094 Move X8, [X20+32]
	095 Move X8, [X8+192]
	096 Move X1, [X8+232]
	097 Move W8, [X1+309]
	098 Move TEMP, X8
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfEqual {105}
	102 Move X0, X1
	103 Call 0x1C5D684
	104 Move X1, X0
	105 Move X8, [X19]
	106 NotImplemented "Instruction LDRH not yet implemented."
	107 Compare X9, 0
	108 JumpIfEqual {115}
	109 Move X10, [X8+176]
	110 Add X10, X10, 8
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Subtract X9, X9, 1
	114 Add X10, X10, 16
	115 Move X0, X19
	116 Move W2, W31
	117 Call 0x1C5D788
	118 NotImplemented "Instruction LDRSW not yet implemented."
	119 Add X8, X8, X9
	120 Add X0, X8, 312
	121 Move X8, [X0]
	122 Move X1, [X0+8]
	123 Move X0, X19
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move X8, [X20+32]
	126 And X1, X0, 0xFFFF
	127 Move X8, [X8+192]
	128 Move X2, [X8+392]
	129 Move X0, X21
	130 Call 0x2D5AAB4, X0, X1
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfNotEqual {68}
	135 Move X20, X31
	136 Compare X19, 0
	137 JumpIfNotEqual {142}
	138 Move X20, X31
	139 Move W22, W31
	140 Compare X19, 0
	141 JumpIfEqual {165}
	142 Move X10, 0x1398000
	143 Move X8, [X19]
	144 Move X10, [X10+3584]
	145 NotImplemented "Instruction LDRH not yet implemented."
	146 Move X1, [X10]
	147 Compare X9, 0
	148 JumpIfEqual {155}
	149 Move X10, [X8+176]
	150 Add X10, X10, 8
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Subtract X9, X9, 1
	154 Add X10, X10, 16
	155 Move X0, X19
	156 Move W2, W31
	157 Call 0x1C5D788
	158 NotImplemented "Instruction LDRSW not yet implemented."
	159 Add X8, X8, X9
	160 Add X0, X8, 312
	161 Move X8, [X0]
	162 Move X1, [X0+8]
	163 Move X0, X19
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Compare X20, 0
	166 JumpIfNotEqual {191}
	167 And W0, W22, 1
	168 Move X20, [X31+32]
	169 Move X19, [X31+40]
	170 Move X22, [X31+16]
	171 Move X21, [X31+24]
	172 Move X30, [X31+48]
	173 Move X23, [X31+56]
	174 Return X0
	175 Move X0, 0x139D000
	176 Move X0, [X0+1320]
	177 Call 0x1C17D08
	178 Call 0x1C17F10
	179 Move X19, X0
	180 Move X0, 0x13C2000
	181 Move X0, [X0+2344]
	182 Call 0x1C17D08
	183 Move X1, X0
	184 Move X0, X19
	185 Move X2, X31
	186 Call ArgumentNullException..ctor, X0, X1
	187 Move X0, X19
	188 Move X1, X20
	189 Call 0x1C17DEC
	190 Call 0x1C17F20
	191 Move X0, X20
	192 Call 0x1C17F18
	193 Move X21, X0
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move X0, X21
	196 Call 0x3EB2AD0
	197 Move X20, [X0]
	198 Call 0x3EB2AE0
	199 Move X20, X31
	200 Move X21, X0
	201 Compare X19, 0
	202 JumpIfEqual {226}
	203 Move X10, 0x1398000
	204 Move X8, [X19]
	205 Move X10, [X10+3584]
	206 NotImplemented "Instruction LDRH not yet implemented."
	207 Move X1, [X10]
	208 Compare X9, 0
	209 JumpIfEqual {216}
	210 Move X10, [X8+176]
	211 Add X10, X10, 8
	212 NotImplemented "Instruction LDUR not yet implemented."
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Subtract X9, X9, 1
	215 Add X10, X10, 16
	216 Move X0, X19
	217 Move W2, W31
	218 Call 0x1C5D788
	219 NotImplemented "Instruction LDRSW not yet implemented."
	220 Add X8, X8, X9
	221 Add X0, X8, 312
	222 Move X8, [X0]
	223 Move X1, [X0+8]
	224 Move X0, X19
	225 NotImplemented "Instruction BLR not yet implemented."
	226 Compare X20, 0
	227 JumpIfNotEqual {230}
	228 Move X0, X21
	229 Call 0x1D2D690
	230 Move X0, X20
	231 Call 0x1C17F18
	232 Call 0x1991590

Method: System.Boolean SetEquals(System.Collections.Generic.IEnumerable`1<T> other)

Disassembly:
	0x02D5C9AC MOV X0, X21
	0x02D5C9B0 BL 0x1D2C690
	0x02D5C9B4 MOV X0, X20
	0x02D5C9B8 BL 0x1C16F18
	0x02D5C9BC BL 0x1990590
	0x02D5C9C0 SUB X31, X31, 0x60
	0x02D5C9C4 STP X30, X21, [X31 + 0x40]
	0x02D5C9C8 STP X20, X19, [X31 + 0x50]
	0x02D5C9CC STP X31, X31, [X31 + 0x20]
	0x02D5C9D0 STR X31, [X31 + 0x30]
	0x02D5C9D4 LDR X8, [X2 + 0x20]
	0x02D5C9D8 MOV X19, X2
	0x02D5C9DC MOV X20, X1
	0x02D5C9E0 MOV X1, X0
	0x02D5C9E4 LDR X8, [X8 + 0xC0]
	0x02D5C9E8 ADD X0, X31, 0x8
	0x02D5C9EC LDR X8, [X8 + 0x1B0]
	0x02D5C9F0 STP X31, X31, [X31 + 0x8]
	0x02D5C9F4 STR X31, [X31 + 0x18]
	0x02D5C9F8 LDR X8, [X8 + 0x20]
	0x02D5C9FC LDR X8, [X8 + 0xC0]
	0x02D5CA00 LDR X2, [X8 + 0xE0]
	0x02D5CA04 BL 0x2BB2F18
	0x02D5CA08 LDUR V0, [X31 + 0x8]
	0x02D5CA0C LDR X8, [X31 + 0x18]
	0x02D5CA10 STR V0, [X31 + 0x2]
	0x02D5CA14 STR X8, [X31 + 0x30]
	0x02D5CA18 LDR X8, [X19 + 0x20]
	0x02D5CA1C LDR X8, [X8 + 0xC0]
	0x02D5CA20 LDR X1, [X8 + 0x1C8]
	0x02D5CA24 ADD X0, X31, 0x20
	0x02D5CA28 BL 0x2BB2F44
	0x02D5CA2C MOV W21, W0
	0x02D5CA30 TBZ X0, 0x0, 0x2D5CA54
	0x02D5CA34 CBZ X20, 0x2D5CA88
	0x02D5CA38 LDR X8, [X19 + 0x20]
	0x02D5CA3C LDRH W1, [X31 + 0x30]
	0x02D5CA40 LDR X8, [X8 + 0xC0]
	0x02D5CA44 LDR X2, [X8 + 0x188]
	0x02D5CA48 MOV X0, X20
	0x02D5CA4C BL 0x2D59AB4
	0x02D5CA50 TBNZ X0, 0x0, 0x2D5CA18
	0x02D5CA54 MOV X20, X31
	0x02D5CA58 EOR W21, W21, 0x1
	0x02D5CA5C LDR X8, [X19 + 0x20]
	0x02D5CA60 ADD X0, X31, 0x20
	0x02D5CA64 LDR X8, [X8 + 0xC0]
	0x02D5CA68 LDR X1, [X8 + 0x1D0]
	0x02D5CA6C BL 0x2BB2F40
	0x02D5CA70 CBNZ X20, 0x2D5CA8C
	0x02D5CA74 AND W0, W21, 0x1
	0x02D5CA78 LDP X20, X19, [X31 + 0x50]
	0x02D5CA7C LDP X30, X21, [X31 + 0x40]
	0x02D5CA80 ADD X31, X31, 0x60
	0x02D5CA84 RET
	0x02D5CA88 BL 0x1C16F20
	0x02D5CA8C MOV X0, X20
	0x02D5CA90 BL 0x1C16F18
	0x02D5CA94 B 0x2D5CA9C
	0x02D5CA98 B 0x2D5CA9C
	0x02D5CA9C MOV X21, X0
	0x02D5CAA0 CMP W1, 0x1
	0x02D5CAA4 B.NE 0x2D5CAC0
	0x02D5CAA8 MOV X0, X21
	0x02D5CAAC BL 0x3EB1AD0
	0x02D5CAB0 LDR X20, [X0]
	0x02D5CAB4 BL 0x3EB1AE0
	0x02D5CAB8 MOVZ W21, 0x1
	0x02D5CABC B 0x2D5CA5C
	0x02D5CAC0 MOV X20, X31
	0x02D5CAC4 B 0x2D5CACC
	0x02D5CAC8 MOV X21, X0
	0x02D5CACC LDR X8, [X19 + 0x20]
	0x02D5CAD0 LDR X8, [X8 + 0xC0]
	0x02D5CAD4 LDR X1, [X8 + 0x1D0]
	0x02D5CAD8 ADD X0, X31, 0x20
	0x02D5CADC BL 0x2BB2F40
	0x02D5CAE0 CBNZ X20, 0x2D5CAEC
	0x02D5CAE4 MOV X0, X21
	0x02D5CAE8 BL 0x1D2C690
	0x02D5CAEC MOV X0, X20
	0x02D5CAF0 BL 0x1C16F18
	0x02D5CAF4 BL 0x1990590
	0x02D5CAF8 STR X30, [X31 - 0x40]!
	0x02D5CAFC STP X24, X23, [X31 + 0x10]
	0x02D5CB00 STP X22, X21, [X31 + 0x20]
	0x02D5CB04 STP X20, X19, [X31 + 0x30]
	0x02D5CB08 LDR W8, [X0 + 0x24]
	0x02D5CB0C CMP W8, 0x1
	0x02D5CB10 B.LT 0x2D5CB9C
	0x02D5CB14 MOV X19, X2
	0x02D5CB18 MOV X20, X0
	0x02D5CB1C MOV X21, X1
	0x02D5CB20 MOV X23, X31
	0x02D5CB24 MOV X24, X31
	0x02D5CB28 LDR X8, [X20 + 0x18]
	0x02D5CB2C CBZ X8, 0x2D5CBB0
	0x02D5CB30 LDR W9, [X8 + 0x18]
	0x02D5CB34 CMP X24, X9
	0x02D5CB38 B.CS 0x2D5CBB4
	0x02D5CB3C ADD X9, X8, X23
	0x02D5CB40 LDR W9, [X9 + 0x20]
	0x02D5CB44 TBNZ X9, 0x1F, 0x2D5CB88
	0x02D5CB48 CBZ X21, 0x2D5CBB0
	0x02D5CB4C LDR X9, [X19 + 0x20]
	0x02D5CB50 ADD X8, X8, X23
	0x02D5CB54 LDRH W22, [X8 + 0x28]
	0x02D5CB58 MOV X0, X21
	0x02D5CB5C LDR X9, [X9 + 0xC0]
	0x02D5CB60 MOV X1, X22
	0x02D5CB64 LDR X2, [X9 + 0x188]
	0x02D5CB68 BL 0x2D59AB4
	0x02D5CB6C TBNZ X0, 0x0, 0x2D5CB88
	0x02D5CB70 LDR X8, [X19 + 0x20]
	0x02D5CB74 MOV X0, X20
	0x02D5CB78 MOV X1, X22
	0x02D5CB7C LDR X8, [X8 + 0xC0]
	0x02D5CB80 LDR X2, [X8 + 0x148]
	0x02D5CB84 BL 0x2D59C8C
	0x02D5CB88 LDRSW X8, [X20 + 0x24]
	0x02D5CB8C ADD X24, X24, 0x1
	0x02D5CB90 ADD X23, X23, 0xC
	0x02D5CB94 CMP X24, X8
	0x02D5CB98 B.LT 0x2D5CB28
	0x02D5CB9C LDP X20, X19, [X31 + 0x30]
	0x02D5CBA0 LDP X22, X21, [X31 + 0x20]
	0x02D5CBA4 LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X2
	007 Compare X1, 0
	008 JumpIfEqual {129}
	009 Move X21, X1
	010 Move X20, X0
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X8, [X19+32]
	013 Move X8, [X8+192]
	014 Move X0, [X8+40]
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Move X8, [X21]
	022 Move W9, [X0+304]
	023 Move W10, [X8+304]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X8, [X8+200]
	026 Add X8, X8, X9
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X8, [X19+32]
	030 Move X0, X20
	031 Move X1, X21
	032 Move X8, [X8+192]
	033 Move X2, [X8+72]
	034 Call 0x2D5F2BC, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {54}
	039 Move W8, [X20+32]
	040 Move W9, [X21+32]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X8, [X19+32]
	043 Move X0, X20
	044 Move X1, X21
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X8, [X8+192]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X2, [X8+384]
	051 Move X30, [X31+48]
	052 Call 0x2D5D6B4, X0, X1
	053 Return X0
	054 Move X8, [X19+32]
	055 Move X8, [X8+192]
	056 Move X1, [X8+96]
	057 Move W8, [X1+309]
	058 Move TEMP, X8
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {65}
	062 Move X0, X1
	063 Call 0x1C5D684
	064 Move X1, X0
	065 Move X0, X21
	066 Call 0x1C17E00
	067 Compare X0, 0
	068 JumpIfEqual {72}
	069 Move W8, [X20+32]
	070 Compare W8, 0
	071 JumpIfEqual {89}
	072 Move X8, [X19+32]
	073 Move W2, 1
	074 Move X0, X20
	075 Move X1, X21
	076 Move X8, [X8+192]
	077 Move X3, [X8+368]
	078 Call 0x2D5EBBC, X0, X1, X2
	079 Move W8, [X20+32]
	080 Move X9, X0
	081 ShiftRight X9, 32
	082 And X9, X9, 0x7FFFFFFF
	083 NotImplemented "Instruction CMP not yet implemented."
	084 NotImplemented "Instruction CSET not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction CSET not yet implemented."
	087 And W0, W9, W8
	088 Move W0, 1
	089 Move X8, [X19+32]
	090 Move X22, X0
	091 Move X8, [X8+192]
	092 Move X1, [X8+96]
	093 Move W8, [X1+309]
	094 Move TEMP, X8
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {101}
	098 Move X0, X1
	099 Call 0x1C5D684
	100 Move X1, X0
	101 Move X8, [X22]
	102 NotImplemented "Instruction LDRH not yet implemented."
	103 Compare X9, 0
	104 JumpIfEqual {111}
	105 Move X10, [X8+176]
	106 Add X10, X10, 8
	107 NotImplemented "Instruction LDUR not yet implemented."
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Subtract X9, X9, 1
	110 Add X10, X10, 16
	111 Move X0, X22
	112 Move W2, W31
	113 Call 0x1C5D788
	114 NotImplemented "Instruction LDRSW not yet implemented."
	115 Add X8, X8, X9
	116 Add X0, X8, 312
	117 Move X8, [X0]
	118 Move X1, [X0+8]
	119 Move X0, X22
	120 NotImplemented "Instruction BLR not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move W0, W31
	123 Move X20, [X31+32]
	124 Move X19, [X31+40]
	125 Move X22, [X31+16]
	126 Move X21, [X31+24]
	127 Move X30, [X31+48]
	128 Return X0
	129 Move X0, 0x139D000
	130 Move X0, [X0+1320]
	131 Call 0x1C17D08
	132 Call 0x1C17F10
	133 Move X20, X0
	134 Move X0, 0x13C2000
	135 Move X0, [X0+2344]
	136 Call 0x1C17D08
	137 Move X1, X0
	138 Move X0, X20
	139 Move X2, X31
	140 Call ArgumentNullException..ctor, X0, X1
	141 Move X0, X20
	142 Move X1, X19
	143 Call 0x1C17DEC

Method: System.Void CopyTo(T[] array)

Disassembly:
	0x02D5CBA8 LDR X30, [X31], #0x40
	0x02D5CBAC RET
	0x02D5CBB0 BL 0x1C16F20
	0x02D5CBB4 BL 0x1C16F28
	0x02D5CBB8 STP X29, X30, [X31 - 0x50]!
	0x02D5CBBC STP X26, X25, [X31 + 0x10]

ISIL:
	001 Move X8, [X2+32]
	002 Move W3, [X0+32]
	003 Move W2, W31
	004 Move X8, [X8+192]
	005 Move X4, [X8+200]

Method: System.Void CopyTo(T[] array, System.Int32 arrayIndex, System.Int32 count)

Disassembly:
	0x02D5CBC0 STP X24, X23, [X31 + 0x20]
	0x02D5CBC4 STP X22, X21, [X31 + 0x30]
	0x02D5CBC8 STP X20, X19, [X31 + 0x40]
	0x02D5CBCC ADD X29, X31, 0x0
	0x02D5CBD0 SUB X31, X31, 0x10
	0x02D5CBD4 MRS X26, 0xC000
	0x02D5CBD8 LDR X8, [X26 + 0x28]
	0x02D5CBDC ADRP X21, 0x167F000
	0x02D5CBE0 MOV X19, X2
	0x02D5CBE4 MOV X23, X1
	0x02D5CBE8 STUR X8, [X29 - 0x8]
	0x02D5CBEC LDRB W8, [X21 + 0x8BF]
	0x02D5CBF0 MOV X20, X0
	0x02D5CBF4 TBNZ X8, 0x0, 0x2D5CC30
	0x02D5CBF8 ADRP X0, 0x13C2000
	0x02D5CBFC LDR X0, [X0 + 0xF28]
	0x02D5CC00 BL 0x1C16CF4
	0x02D5CC04 ADRP X0, 0x1397000
	0x02D5CC08 LDR X0, [X0 + 0xE00]
	0x02D5CC0C BL 0x1C16CF4
	0x02D5CC10 ADRP X0, 0x1397000
	0x02D5CC14 LDR X0, [X0 + 0xE18]
	0x02D5CC18 BL 0x1C16CF4
	0x02D5CC1C ADRP X0, 0x1398000
	0x02D5CC20 LDR X0, [X0 + 0xE58]
	0x02D5CC24 BL 0x1C16CF4
	0x02D5CC28 MOVZ W8, 0x1
	0x02D5CC2C STRB W8, [X21 + 0x8BF]
	0x02D5CC30 LDR W21, [X20 + 0x24]
	0x02D5CC34 MOV X1, X31
	0x02D5CC38 MOV W0, W21
	0x02D5CC3C BL 0x35E080C
	0x02D5CC40 MOV W24, W0
	0x02D5CC44 CMP W0, 0x64
	0x02D5CC48 B.LE 0x2D5CC90
	0x02D5CC4C ADRP X8, 0x1398000
	0x02D5CC50 LDR X8, [X8 + 0xE58]
	0x02D5CC54 MOV W1, W24
	0x02D5CC58 LDR X0, [X8]
	0x02D5CC5C BL 0x1C16D6C
	0x02D5CC60 ADRP X8, 0x13C2000
	0x02D5CC64 LDR X8, [X8 + 0xF28]
	0x02D5CC68 MOV X25, X0
	0x02D5CC6C LDR X8, [X8]
	0x02D5CC70 MOV X0, X8
	0x02D5CC74 BL 0x1C16F10
	0x02D5CC78 MOV X1, X25
	0x02D5CC7C MOV W2, W24
	0x02D5CC80 MOV X3, X31
	0x02D5CC84 MOV X22, X0
	0x02D5CC88 BL 0x35E06DC
	0x02D5CC8C B 0x2D5CCE4
	0x02D5CC90 SBFM X2, X24, 0x3E, 0x1F
	0x02D5CC94 CBZ W24, 0x2D5CCB0
	0x02D5CC98 ADD X9, X2, 0xF
	0x02D5CC9C ADD X8, X31, 0x0
	0x02D5CCA0 AND X9, X9, 0xFFFFFFFF
	0x02D5CCA4 SUB X25, X8, X9
	0x02D5CCA8 ADD X31, X25, 0x0
	0x02D5CCAC B 0x2D5CCB4
	0x02D5CCB0 MOV X25, X31
	0x02D5CCB4 MOV X0, X25
	0x02D5CCB8 MOV W1, W31
	0x02D5CCBC BL 0x3EB1B10
	0x02D5CCC0 ADRP X8, 0x13C2000
	0x02D5CCC4 LDR X8, [X8 + 0xF28]
	0x02D5CCC8 LDR X0, [X8]
	0x02D5CCCC BL 0x1C16F10
	0x02D5CCD0 MOV X1, X25
	0x02D5CCD4 MOV W2, W24
	0x02D5CCD8 MOV X3, X31
	0x02D5CCDC MOV X22, X0
	0x02D5CCE0 BL 0x35E06A4
	0x02D5CCE4 CBZ X23, 0x2D5CF8C
	0x02D5CCE8 LDR X8, [X19 + 0x20]
	0x02D5CCEC LDR X8, [X8 + 0xC0]
	0x02D5CCF0 LDR X1, [X8 + 0x38]
	0x02D5CCF4 LDRB W8, [X1 + 0x135]
	0x02D5CCF8 TBNZ X8, 0x0, 0x2D5CD08
	0x02D5CCFC MOV X0, X1
	0x02D5CD00 BL 0x1C5C684
	0x02D5CD04 MOV X1, X0
	0x02D5CD08 LDR X8, [X23]
	0x02D5CD0C LDRH W9, [X8 + 0x12E]
	0x02D5CD10 CBZ X9, 0x2D5CD34
	0x02D5CD14 LDR X10, [X8 + 0xB0]
	0x02D5CD18 ADD X10, X10, 0x8
	0x02D5CD1C LDUR X11, [X10 - 0x8]
	0x02D5CD20 CMP X11, X1
	0x02D5CD24 B.EQ 0x2D5CD44
	0x02D5CD28 SUBS X9, X9, 0x1
	0x02D5CD2C ADD X10, X10, 0x10
	0x02D5CD30 B.NE 0x2D5CD1C
	0x02D5CD34 MOV X0, X23
	0x02D5CD38 MOV W2, W31
	0x02D5CD3C BL 0x1C5C788
	0x02D5CD40 B 0x2D5CD50
	0x02D5CD44 LDRSW X9, [X10]
	0x02D5CD48 ADD X8, X8, X9, 0x4, LSL
	0x02D5CD4C ADD X0, X8, 0x138
	0x02D5CD50 LDP X8, X1, [X0]
	0x02D5CD54 ADRP X25, 0x1397000
	0x02D5CD58 LDR X25, [X25 + 0xE00]
	0x02D5CD5C MOV X0, X23
	0x02D5CD60 BLR X8
	0x02D5CD64 MOV X23, X0
	0x02D5CD68 CBZ X0, 0x2D5CF98
	0x02D5CD6C ADRP X24, 0x1397000
	0x02D5CD70 LDR X24, [X24 + 0xE18]
	0x02D5CD74 LDR X8, [X23]
	0x02D5CD78 LDR X1, [X24]
	0x02D5CD7C LDRH W9, [X8 + 0x12E]
	0x02D5CD80 CBZ X9, 0x2D5CDA4
	0x02D5CD84 LDR X10, [X8 + 0xB0]
	0x02D5CD88 ADD X10, X10, 0x8
	0x02D5CD8C LDUR X11, [X10 - 0x8]
	0x02D5CD90 CMP X11, X1
	0x02D5CD94 B.EQ 0x2D5CDB4
	0x02D5CD98 SUBS X9, X9, 0x1
	0x02D5CD9C ADD X10, X10, 0x10
	0x02D5CDA0 B.NE 0x2D5CD8C
	0x02D5CDA4 MOV X0, X23
	0x02D5CDA8 MOV W2, W31
	0x02D5CDAC BL 0x1C5C788

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {58}
	008 Move TEMP, X2
	009 And TEMP, TEMP, -2147483648
	010 Compare TEMP, -2147483648
	011 JumpIfEqual {71}
	012 Move TEMP, X3
	013 And TEMP, TEMP, -2147483648
	014 Compare TEMP, -2147483648
	015 JumpIfEqual {86}
	016 Move W8, [X1+24]
	017 Subtract W8, W8, W2
	018 NotImplemented "Instruction CMP not yet implemented."
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move W11, [X0+36]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X8, X31
	023 Move X9, X31
	024 Move W10, W31
	025 Move X12, [X0+24]
	026 Compare X12, 0
	027 JumpIfEqual {57}
	028 Move W13, [X12+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Add X13, X12, X8
	031 Move W13, [X13+32]
	032 Move TEMP, X13
	033 And TEMP, TEMP, -2147483648
	034 Compare TEMP, -2147483648
	035 JumpIfEqual {45}
	036 Move W13, [X1+24]
	037 Add W11, W10, W2
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add X12, X12, X8
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Add X11, X1, W11
	042 Add W10, W10, 1
	043 NotImplemented "Instruction STRH not yet implemented."
	044 Move W11, [X0+36]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Add X9, X9, 1
	047 Move X12, W11
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Add X8, X8, 12
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Return 
	056 Call 0x1C17F28
	057 Call 0x1C17F20
	058 Move X0, 0x139D000
	059 Move X0, [X0+1320]
	060 Move X19, X4
	061 Call 0x1C17D08
	062 Call 0x1C17F10
	063 Move X20, X0
	064 Move X0, 0x13C0000
	065 Move X0, [X0+1600]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Move X0, X20
	069 Move X2, X31
	070 Call ArgumentNullException..ctor, X0, X1
	071 Move [X31+12], W2
	072 Move X0, 0x1398000
	073 Move X0, [X0+1880]
	074 Move X19, X4
	075 Call 0x1C17D08
	076 Add X1, X31, 12
	077 Call 0x1C17E04
	078 Move X20, X0
	079 Move X0, 0x13A0000
	080 Move X0, [X0+1888]
	081 Call 0x1C17D08
	082 Call 0x1C17F10
	083 Move X21, X0
	084 Move X0, 0x13C2000
	085 Move X0, [X0+688]
	086 Move [X31+8], W3
	087 Move X0, 0x1398000
	088 Move X0, [X0+1880]
	089 Move X19, X4
	090 Call 0x1C17D08
	091 Add X1, X31, 8
	092 Call 0x1C17E04
	093 Move X20, X0
	094 Move X0, 0x13A0000
	095 Move X0, [X0+1888]
	096 Call 0x1C17D08
	097 Call 0x1C17F10
	098 Move X21, X0
	099 Move X0, 0x13C0000
	100 Move X0, [X0+1608]
	101 Call 0x1C17D08
	102 Move X22, X0
	103 Move X0, 0x13C3000
	104 Move X0, [X0+3864]
	105 Call 0x1C17D08
	106 Move X3, X0
	107 Move X0, X21
	108 Move X1, X22
	109 Move X2, X20
	110 Move X4, X31
	111 Call ArgumentOutOfRangeException..ctor, X0, X1, X2, X3
	112 Move X0, X21
	113 Move X0, 0x13A0000
	114 Move X0, [X0+1400]
	115 Move X19, X4
	116 Call 0x1C17D08
	117 Call 0x1C17F10
	118 Move X20, X0
	119 Move X0, 0x13C1000
	120 Move X0, [X0+792]
	121 Call 0x1C17D08
	122 Move X1, X0
	123 Move X0, X20
	124 Move X2, X31
	125 Call ArgumentException..ctor, X0, X1
	126 Move X0, X20
	127 Move X1, X19
	128 Call 0x1C17DEC

Method: System.Int32 RemoveWhere(System.Predicate`1<T> match)

Disassembly:
	0x02D5CDB0 B 0x2D5CDC0
	0x02D5CDB4 LDRSW X9, [X10]
	0x02D5CDB8 ADD X8, X8, X9, 0x4, LSL
	0x02D5CDBC ADD X0, X8, 0x138
	0x02D5CDC0 LDP X8, X1, [X0]
	0x02D5CDC4 MOV X0, X23
	0x02D5CDC8 BLR X8
	0x02D5CDCC TBZ X0, 0x0, 0x2D5CE78
	0x02D5CDD0 LDR X8, [X19 + 0x20]
	0x02D5CDD4 LDR X8, [X8 + 0xC0]
	0x02D5CDD8 LDR X1, [X8 + 0xE8]
	0x02D5CDDC LDRB W8, [X1 + 0x135]
	0x02D5CDE0 TBNZ X8, 0x0, 0x2D5CDF0
	0x02D5CDE4 MOV X0, X1
	0x02D5CDE8 BL 0x1C5C684
	0x02D5CDEC MOV X1, X0
	0x02D5CDF0 LDR X8, [X23]
	0x02D5CDF4 LDRH W9, [X8 + 0x12E]
	0x02D5CDF8 CBZ X9, 0x2D5CE1C
	0x02D5CDFC LDR X10, [X8 + 0xB0]
	0x02D5CE00 ADD X10, X10, 0x8
	0x02D5CE04 LDUR X11, [X10 - 0x8]
	0x02D5CE08 CMP X11, X1
	0x02D5CE0C B.EQ 0x2D5CE2C
	0x02D5CE10 SUBS X9, X9, 0x1
	0x02D5CE14 ADD X10, X10, 0x10
	0x02D5CE18 B.NE 0x2D5CE04
	0x02D5CE1C MOV X0, X23
	0x02D5CE20 MOV W2, W31
	0x02D5CE24 BL 0x1C5C788
	0x02D5CE28 B 0x2D5CE38
	0x02D5CE2C LDRSW X9, [X10]
	0x02D5CE30 ADD X8, X8, X9, 0x4, LSL
	0x02D5CE34 ADD X0, X8, 0x138
	0x02D5CE38 LDP X8, X1, [X0]
	0x02D5CE3C MOV X0, X23
	0x02D5CE40 BLR X8
	0x02D5CE44 LDR X8, [X19 + 0x20]
	0x02D5CE48 AND X1, X0, 0xFFFF
	0x02D5CE4C LDR X8, [X8 + 0xC0]
	0x02D5CE50 LDR X2, [X8 + 0x1D8]
	0x02D5CE54 MOV X0, X20
	0x02D5CE58 BL 0x2D5D058
	0x02D5CE5C MOV W1, W0
	0x02D5CE60 TBNZ X1, 0x1F, 0x2D5CD74
	0x02D5CE64 CBZ X22, 0x2D5CF94
	0x02D5CE68 MOV X0, X22
	0x02D5CE6C MOV X2, X31
	0x02D5CE70 BL 0x35E070C
	0x02D5CE74 B 0x2D5CD74
	0x02D5CE78 MOV X24, X31
	0x02D5CE7C CBZ X23, 0x2D5CED8
	0x02D5CE80 LDR X8, [X23]
	0x02D5CE84 LDR X1, [X25]
	0x02D5CE88 LDRH W9, [X8 + 0x12E]
	0x02D5CE8C CBZ X9, 0x2D5CEB0
	0x02D5CE90 LDR X10, [X8 + 0xB0]
	0x02D5CE94 ADD X10, X10, 0x8
	0x02D5CE98 LDUR X11, [X10 - 0x8]
	0x02D5CE9C CMP X11, X1
	0x02D5CEA0 B.EQ 0x2D5CEC0
	0x02D5CEA4 SUBS X9, X9, 0x1
	0x02D5CEA8 ADD X10, X10, 0x10
	0x02D5CEAC B.NE 0x2D5CE98
	0x02D5CEB0 MOV X0, X23
	0x02D5CEB4 MOV W2, W31
	0x02D5CEB8 BL 0x1C5C788

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X19, X2
	010 Compare X1, 0
	011 JumpIfEqual {65}
	012 Move W8, [X0+36]
	013 Move X21, X0
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X20, X1
	016 Move X24, X31
	017 Move X25, X31
	018 Move W22, W31
	019 Move X8, [X21+24]
	020 Compare X8, 0
	021 JumpIfEqual {63}
	022 Move W9, [X8+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Add X8, X8, X24
	025 Move W9, [X8+32]
	026 Move TEMP, X9
	027 And TEMP, TEMP, -2147483648
	028 Compare TEMP, -2147483648
	029 JumpIfEqual {48}
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Move X8, [X20+24]
	032 Move X0, [X20+64]
	033 Move X2, [X20+40]
	034 Move X1, X23
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {48}
	040 Move X8, [X19+32]
	041 Move X0, X21
	042 Move X1, X23
	043 Move X8, [X8+192]
	044 Move X2, [X8+328]
	045 Call 0x2D5AC8C, X0, X1
	046 And W8, W0, 1
	047 Add W22, W22, W8
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Add X25, X25, 1
	050 Add X24, X24, 12
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W22, W31
	053 Move W0, W22
	054 Move X20, [X31+48]
	055 Move X19, [X31+56]
	056 Move X22, [X31+32]
	057 Move X21, [X31+40]
	058 Move X24, [X31+16]
	059 Move X23, [X31+24]
	060 Move X30, [X31+64]
	061 Move X25, [X31+72]
	062 Return X0
	063 Call 0x1C17F20
	064 Call 0x1C17F28
	065 Move X0, 0x139D000
	066 Move X0, [X0+1320]
	067 Call 0x1C17D08
	068 Call 0x1C17F10
	069 Move X20, X0
	070 Move X0, 0x13C0000
	071 Move X0, [X0+1912]
	072 Call 0x1C17D08
	073 Move X1, X0
	074 Move X0, X20
	075 Move X2, X31
	076 Call ArgumentNullException..ctor, X0, X1
	077 Move X0, X20
	078 Move X1, X19
	079 Call 0x1C17DEC

Method: System.Collections.Generic.IEqualityComparer`1<T> get_Comparer()

Disassembly:
	0x02D5CEBC B 0x2D5CECC
	0x02D5CEC0 LDRSW X9, [X10]

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void TrimExcess()

Disassembly:
	0x02D5CEC4 ADD X8, X8, X9, 0x4, LSL
	0x02D5CEC8 ADD X0, X8, 0x138
	0x02D5CECC LDP X8, X1, [X0]
	0x02D5CED0 MOV X0, X23
	0x02D5CED4 BLR X8
	0x02D5CED8 CBNZ X24, 0x2D5CF9C
	0x02D5CEDC CMP W21, 0x1
	0x02D5CEE0 B.LT 0x2D5CF60
	0x02D5CEE4 MOV X23, X31
	0x02D5CEE8 MOVZ W24, 0x20
	0x02D5CEEC LDR X8, [X20 + 0x18]
	0x02D5CEF0 CBZ X8, 0x2D5CF8C
	0x02D5CEF4 LDR W9, [X8 + 0x18]
	0x02D5CEF8 CMP X23, X9
	0x02D5CEFC B.CS 0x2D5CF90
	0x02D5CF00 LDR W8, [X8, X24, LSL]
	0x02D5CF04 TBNZ X8, 0x1F, 0x2D5CF50
	0x02D5CF08 CBZ X22, 0x2D5CF8C
	0x02D5CF0C MOV X0, X22
	0x02D5CF10 MOV W1, W23
	0x02D5CF14 MOV X2, X31
	0x02D5CF18 BL 0x35E0788
	0x02D5CF1C TBNZ X0, 0x0, 0x2D5CF50
	0x02D5CF20 LDR X8, [X20 + 0x18]
	0x02D5CF24 CBZ X8, 0x2D5CF8C
	0x02D5CF28 LDR W9, [X8 + 0x18]
	0x02D5CF2C CMP X23, X9
	0x02D5CF30 B.CS 0x2D5CF90
	0x02D5CF34 LDR X9, [X19 + 0x20]
	0x02D5CF38 ADD X8, X8, X24
	0x02D5CF3C LDRH W1, [X8 + 0x8]
	0x02D5CF40 MOV X0, X20
	0x02D5CF44 LDR X9, [X9 + 0xC0]
	0x02D5CF48 LDR X2, [X9 + 0x148]
	0x02D5CF4C BL 0x2D59C8C
	0x02D5CF50 ADD X23, X23, 0x1
	0x02D5CF54 CMP X21, X23
	0x02D5CF58 ADD X24, X24, 0xC
	0x02D5CF5C B.NE 0x2D5CEEC
	0x02D5CF60 LDR X8, [X26 + 0x28]
	0x02D5CF64 LDUR X9, [X29 - 0x8]
	0x02D5CF68 CMP X8, X9
	0x02D5CF6C B.NE 0x2D5CFA4
	0x02D5CF70 ADD X31, X29, 0x0
	0x02D5CF74 LDP X20, X19, [X31 + 0x40]
	0x02D5CF78 LDP X22, X21, [X31 + 0x30]
	0x02D5CF7C LDP X24, X23, [X31 + 0x20]
	0x02D5CF80 LDP X26, X25, [X31 + 0x10]
	0x02D5CF84 LDP X29, X30, [X31], #0x50
	0x02D5CF88 RET
	0x02D5CF8C BL 0x1C16F20
	0x02D5CF90 BL 0x1C16F28
	0x02D5CF94 BL 0x1C16F20
	0x02D5CF98 BL 0x1C16F20
	0x02D5CF9C MOV X0, X24
	0x02D5CFA0 BL 0x1C16F18
	0x02D5CFA4 BL 0x3EB1B20
	0x02D5CFA8 B 0x2D5CFBC
	0x02D5CFAC B 0x2D5CFBC
	0x02D5CFB0 B 0x2D5CFBC
	0x02D5CFB4 B 0x2D5CFBC
	0x02D5CFB8 B 0x2D5CFBC
	0x02D5CFBC CMP W1, 0x1
	0x02D5CFC0 B.NE 0x2D5CFD4
	0x02D5CFC4 BL 0x3EB1AD0
	0x02D5CFC8 LDR X24, [X0]
	0x02D5CFCC BL 0x3EB1AE0
	0x02D5CFD0 B 0x2D5CE7C
	0x02D5CFD4 MOV X19, X0
	0x02D5CFD8 MOV X24, X31
	0x02D5CFDC B 0x2D5CFE4
	0x02D5CFE0 MOV X19, X0
	0x02D5CFE4 CBZ X23, 0x2D5D040
	0x02D5CFE8 LDR X8, [X23]
	0x02D5CFEC LDR X1, [X25]
	0x02D5CFF0 LDRH W9, [X8 + 0x12E]
	0x02D5CFF4 CBZ X9, 0x2D5D018
	0x02D5CFF8 LDR X10, [X8 + 0xB0]
	0x02D5CFFC ADD X10, X10, 0x8
	0x02D5D000 LDUR X11, [X10 - 0x8]
	0x02D5D004 CMP X11, X1
	0x02D5D008 B.EQ 0x2D5D028
	0x02D5D00C SUBS X9, X9, 0x1
	0x02D5D010 ADD X10, X10, 0x10
	0x02D5D014 B.NE 0x2D5D000
	0x02D5D018 MOV X0, X23
	0x02D5D01C MOV W2, W31
	0x02D5D020 BL 0x1C5C788
	0x02D5D024 B 0x2D5D034
	0x02D5D028 LDRSW X9, [X10]
	0x02D5D02C ADD X8, X8, X9, 0x4, LSL
	0x02D5D030 ADD X0, X8, 0x138
	0x02D5D034 LDP X8, X1, [X0]
	0x02D5D038 MOV X0, X23
	0x02D5D03C BLR X8
	0x02D5D040 CBNZ X24, 0x2D5D04C
	0x02D5D044 MOV X0, X19
	0x02D5D048 BL 0x1D2C690
	0x02D5D04C MOV X0, X24
	0x02D5D050 BL 0x1C16F18
	0x02D5D054 BL 0x1990590
	0x02D5D058 STP X29, X30, [X31 - 0x60]!
	0x02D5D05C STP X28, X27, [X31 + 0x10]
	0x02D5D060 STP X26, X25, [X31 + 0x20]
	0x02D5D064 STP X24, X23, [X31 + 0x30]
	0x02D5D068 STP X22, X21, [X31 + 0x40]
	0x02D5D06C STP X20, X19, [X31 + 0x50]
	0x02D5D070 LDR X8, [X2 + 0x20]
	0x02D5D074 MOV X19, X2
	0x02D5D078 AND X21, X1, 0xFFFF

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1680000
	007 Move W8, [X21+2234]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x13C3000
	015 Move X0, [X0+1352]
	016 Call 0x1C17CF4
	017 Move X0, 0x1399000
	018 Move X0, [X0+3672]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2234], W8
	022 Move W21, [X19+32]
	023 Compare W21, 0
	024 JumpIfEqual {105}
	025 Move X8, 0x13C3000
	026 Move X8, [X8+1352]
	027 Move X0, [X8]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X22, 0x1399000
	033 Move X22, [X22+3672]
	034 Move W0, W21
	035 Move X1, X31
	036 Call HashHelpers.GetPrime, X0
	037 Move X8, [X20+32]
	038 Move W20, W0
	039 Move X8, [X8+192]
	040 Move X8, [X8+280]
	041 Move W9, [X8+309]
	042 Move TEMP, X9
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {49}
	046 Move X0, X8
	047 Call 0x1C5D684
	048 Move X8, X0
	049 Move X0, X8
	050 Move W1, W20
	051 Call 0x1C17D6C
	052 Move X8, [X22]
	053 Move X21, X0
	054 Move W1, W20
	055 Move X0, X8
	056 Call 0x1C17D6C
	057 Move W12, [X19+36]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X9, X31
	060 Move X10, X31
	061 Move W8, W31
	062 Move W11, 12
	063 Move X13, [X19+24]
	064 Compare X13, 0
	065 JumpIfEqual {125}
	066 Move W14, [X13+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Add X14, X13, X9
	069 Move W15, [X14+32]
	070 Move TEMP, X15
	071 And TEMP, TEMP, -2147483648
	072 Compare TEMP, -2147483648
	073 JumpIfEqual {102}
	074 Compare X21, 0
	075 JumpIfEqual {125}
	076 Move W12, [X21+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Add X12, X13, X9
	079 Move X14, [X14+32]
	080 Move W13, [X12+40]
	081 Move X12, W8
	082 NotImplemented "Instruction MADD not yet implemented."
	083 Move [X15+32], X14
	084 Move [X15+40], W13
	085 Move W13, [X21+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Compare X0, 0
	088 JumpIfEqual {125}
	089 Move W15, [X0+24]
	090 NotImplemented "Instruction SDIV not yet implemented."
	091 NotImplemented "Instruction MSUB not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Add X13, X0, W13
	094 Move W14, [X13+32]
	095 NotImplemented "Instruction NOP not yet implemented."
	096 NotImplemented "Instruction MADD not yet implemented."
	097 Add W8, W8, 1
	098 Subtract W14, W14, 1
	099 Move [X12+36], W14
	100 Move [X13+32], W8
	101 Move W12, [X19+36]
	102 Add X10, X10, 1
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Add X9, X9, 12
	105 Move W8, [X19+56]
	106 Move [X19+16], X31
	107 Move [X19+24], X31
	108 Add W8, W8, 1
	109 Move [X19+56], W8
	110 Move W8, W31
	111 Move TEMP, 0
	112 Not TEMP
	113 Move W9, TEMP
	114 Move [X19+16], X0
	115 Move [X19+24], X21
	116 Move [X19+36], W8
	117 Move [X19+40], W9
	118 Move X20, [X31+32]
	119 Move X19, [X31+40]
	120 Move X22, [X31+16]
	121 Move X21, [X31+24]
	122 Move X30, [X31+48]
	123 Return 
	124 Call 0x1C17F28
	125 Call 0x1C17F20

Method: System.Int32 Initialize(System.Int32 capacity)

Disassembly:
	0x02D5D07C MOV X1, X21
	0x02D5D080 LDR X8, [X8 + 0xC0]
	0x02D5D084 MOV X20, X0
	0x02D5D088 LDR X2, [X8 + 0xB0]
	0x02D5D08C BL 0x2D5E320
	0x02D5D090 LDR X8, [X20 + 0x10]
	0x02D5D094 CBZ X8, 0x2D5D20C
	0x02D5D098 LDR W10, [X8 + 0x18]
	0x02D5D09C MOV W22, W0
	0x02D5D0A0 SDIV W9, W0, W10
	0x02D5D0A4 MSUB W9, W9, W10, W0
	0x02D5D0A8 CMP W9, W10
	0x02D5D0AC B.CS 0x2D5D1CC
	0x02D5D0B0 ADD X8, X8, W9, 0x2, SXTW
	0x02D5D0B4 LDR W8, [X8 + 0x20]
	0x02D5D0B8 SUBS W23, W8, 0x1
	0x02D5D0BC B.MI 0x2D5D1A8
	0x02D5D0C0 LDR X26, [X20 + 0x18]
	0x02D5D0C4 CBZ X26, 0x2D5D20C
	0x02D5D0C8 LDR X8, [X26 + 0x18]
	0x02D5D0CC MOV W27, W31
	0x02D5D0D0 MOVZ W28, 0xC
	0x02D5D0D4 CMP W23, W8
	0x02D5D0D8 B.CS 0x2D5D1CC
	0x02D5D0DC UMADDL X9, X23, X28, X26
	0x02D5D0E0 LDR W9, [X9 + 0x20]
	0x02D5D0E4 MOV W29, W23
	0x02D5D0E8 CMP W9, W22
	0x02D5D0EC B.NE 0x2D5D188
	0x02D5D0F0 LDR X24, [X20 + 0x30]
	0x02D5D0F4 CBZ X24, 0x2D5D20C
	0x02D5D0F8 LDR X8, [X19 + 0x20]
	0x02D5D0FC LDR X8, [X8 + 0xC0]
	0x02D5D100 LDR X1, [X8 + 0x20]
	0x02D5D104 NOP
	0x02D5D108 MADD X8, X29, X28, X26
	0x02D5D10C LDRH W25, [X8 + 0x28]
	0x02D5D110 LDRB W9, [X1 + 0x135]
	0x02D5D114 TBNZ X9, 0x0, 0x2D5D124
	0x02D5D118 MOV X0, X1
	0x02D5D11C BL 0x1C5C684
	0x02D5D120 MOV X1, X0
	0x02D5D124 LDR X8, [X24]
	0x02D5D128 LDRH W9, [X8 + 0x12E]
	0x02D5D12C CBZ X9, 0x2D5D150
	0x02D5D130 LDR X10, [X8 + 0xB0]
	0x02D5D134 ADD X10, X10, 0x8
	0x02D5D138 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x167F000
	008 Move X22, 0x13C2000
	009 Move W8, [X23+2235]
	010 Move X22, [X22+1352]
	011 Move X20, X2
	012 Move W21, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x13C2000
	019 Move X0, [X0+1352]
	020 Call 0x1C17CF4
	021 Move X0, 0x1398000
	022 Move X0, [X0+3672]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+2235], W8
	026 Move X0, [X22]
	027 Move X22, 0x1398000
	028 Move W8, [X0+224]
	029 Move X22, [X22+3672]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move W0, W21
	034 Move X1, X31
	035 Call HashHelpers.GetPrime, X0
	036 Move X8, [X22]
	037 Move W21, W0
	038 Move W1, W21
	039 Move X0, X8
	040 Call 0x1C17D6C
	041 Move [X19+16], X0
	042 Move X8, [X20+32]
	043 Move X8, [X8+192]
	044 Move X0, [X8+280]
	045 Move W8, [X0+309]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {51}
	050 Call 0x1C5D684
	051 Move W1, W21
	052 Call 0x1C17D6C
	053 Move [X19+24], X0
	054 Move W0, W21
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Move X23, [X31+56]
	061 Return X0

Method: System.Void IncreaseCapacity()

Disassembly:
	0x02D5D13C CMP X11, X1
	0x02D5D140 B.EQ 0x2D5D160
	0x02D5D144 SUBS X9, X9, 0x1
	0x02D5D148 ADD X10, X10, 0x10
	0x02D5D14C B.NE 0x2D5D138
	0x02D5D150 MOV X0, X24
	0x02D5D154 MOV W2, W31
	0x02D5D158 BL 0x1C5C788
	0x02D5D15C B 0x2D5D16C
	0x02D5D160 LDRSW X9, [X10]
	0x02D5D164 ADD X8, X8, X9, 0x4, LSL
	0x02D5D168 ADD X0, X8, 0x138
	0x02D5D16C LDP X8, X3, [X0]
	0x02D5D170 MOV X0, X24
	0x02D5D174 MOV X1, X25
	0x02D5D178 MOV X2, X21
	0x02D5D17C BLR X8
	0x02D5D180 TBNZ X0, 0x0, 0x2D5D1AC
	0x02D5D184 LDR X8, [X26 + 0x18]
	0x02D5D188 CMP W27, W8
	0x02D5D18C B.GE 0x2D5D1D0
	0x02D5D190 CMP W23, W8
	0x02D5D194 B.CS 0x2D5D1CC
	0x02D5D198 MADD X9, X29, X28, X26
	0x02D5D19C LDR W23, [X9 + 0x24]
	0x02D5D1A0 ADD W27, W27, 0x1
	0x02D5D1A4 TBZ X23, 0x1F, 0x2D5D0D4
	0x02D5D1A8 MOVN W23, 0x0
	0x02D5D1AC MOV W0, W23
	0x02D5D1B0 LDP X20, X19, [X31 + 0x50]
	0x02D5D1B4 LDP X22, X21, [X31 + 0x40]
	0x02D5D1B8 LDP X24, X23, [X31 + 0x30]
	0x02D5D1BC LDP X26, X25, [X31 + 0x20]
	0x02D5D1C0 LDP X28, X27, [X31 + 0x10]
	0x02D5D1C4 LDP X29, X30, [X31], #0x60
	0x02D5D1C8 RET
	0x02D5D1CC BL 0x1C16F28
	0x02D5D1D0 ADRP X0, 0x1396000
	0x02D5D1D4 LDR X0, [X0 + 0x5B0]
	0x02D5D1D8 BL 0x1C16D08
	0x02D5D1DC BL 0x1C16F10
	0x02D5D1E0 MOV X20, X0
	0x02D5D1E4 ADRP X0, 0x13C1000
	0x02D5D1E8 LDR X0, [X0 + 0xF00]
	0x02D5D1EC BL 0x1C16D08
	0x02D5D1F0 MOV X1, X0
	0x02D5D1F4 MOV X0, X20
	0x02D5D1F8 MOV X2, X31
	0x02D5D1FC BL 0x337DF1C
	0x02D5D200 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x167F000
	007 Move X21, 0x13C2000
	008 Move W8, [X22+2236]
	009 Move X21, [X21+1352]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x13C2000
	017 Move X0, [X0+1352]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2236], W8
	021 Move X0, [X21]
	022 Move W21, [X20+32]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move W0, W21
	028 Move X1, X31
	029 Call HashHelpers.ExpandPrime, X0
	030 Move W8, [X20+32]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X8, [X19+32]
	033 Move W1, W0
	034 Move X0, X20
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X8, [X8+192]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X2, [X8+416]
	041 Move X30, [X31+48]
	042 Move X0, 0x139F000
	043 Move X0, [X0+1400]
	044 Call 0x1C17D08
	045 Call 0x1C17F10
	046 Move X20, X0
	047 Move X0, 0x13C2000
	048 Move X0, [X0+3872]
	049 Call 0x1C17D08
	050 Move X1, X0
	051 Move X0, X20
	052 Move X2, X31
	053 Call ArgumentException..ctor, X0, X1
	054 Move X0, X20
	055 Move X1, X19
	056 Call 0x1C17DEC

Method: System.Void SetCapacity(System.Int32 newSize)

Disassembly:
	0x02D5D204 MOV X1, X19
	0x02D5D208 BL 0x1C16DEC
	0x02D5D20C BL 0x1C16F20
	0x02D5D210 SUB X31, X31, 0x60
	0x02D5D214 STP X30, X21, [X31 + 0x40]
	0x02D5D218 STP X20, X19, [X31 + 0x50]
	0x02D5D21C STP X31, X31, [X31 + 0x20]
	0x02D5D220 STR X31, [X31 + 0x30]
	0x02D5D224 CBZ X1, 0x2D5D2E8
	0x02D5D228 LDR X8, [X2 + 0x20]
	0x02D5D22C MOV X19, X2
	0x02D5D230 MOV X20, X0
	0x02D5D234 ADD X0, X31, 0x8
	0x02D5D238 LDR X8, [X8 + 0xC0]
	0x02D5D23C LDR X8, [X8 + 0x1B0]
	0x02D5D240 STP X31, X31, [X31 + 0x8]
	0x02D5D244 STR X31, [X31 + 0x18]
	0x02D5D248 LDR X8, [X8 + 0x20]
	0x02D5D24C LDR X8, [X8 + 0xC0]
	0x02D5D250 LDR X2, [X8 + 0xE0]
	0x02D5D254 BL 0x2BB2F18
	0x02D5D258 LDUR V0, [X31 + 0x8]
	0x02D5D25C LDR X8, [X31 + 0x18]
	0x02D5D260 STR V0, [X31 + 0x2]
	0x02D5D264 STR X8, [X31 + 0x30]
	0x02D5D268 LDR X8, [X19 + 0x20]
	0x02D5D26C LDR X8, [X8 + 0xC0]
	0x02D5D270 LDR X1, [X8 + 0x1C8]
	0x02D5D274 ADD X0, X31, 0x20
	0x02D5D278 BL 0x2BB2F44
	0x02D5D27C TBZ X0, 0x0, 0x2D5D2BC
	0x02D5D280 LDR X8, [X19 + 0x20]
	0x02D5D284 LDRH W21, [X31 + 0x30]
	0x02D5D288 LDR X8, [X8 + 0xC0]
	0x02D5D28C LDR X2, [X8 + 0x148]
	0x02D5D290 MOV X0, X20
	0x02D5D294 MOV X1, X21
	0x02D5D298 BL 0x2D59C8C
	0x02D5D29C TBNZ X0, 0x0, 0x2D5D268
	0x02D5D2A0 LDR X8, [X19 + 0x20]
	0x02D5D2A4 LDR X8, [X8 + 0xC0]
	0x02D5D2A8 LDR X2, [X8 + 0xA8]
	0x02D5D2AC MOV X0, X20
	0x02D5D2B0 MOV X1, X21
	0x02D5D2B4 BL 0x2D5C318
	0x02D5D2B8 B 0x2D5D268
	0x02D5D2BC MOV X20, X31
	0x02D5D2C0 LDR X8, [X19 + 0x20]
	0x02D5D2C4 ADD X0, X31, 0x20
	0x02D5D2C8 LDR X8, [X8 + 0xC0]
	0x02D5D2CC LDR X1, [X8 + 0x1D0]
	0x02D5D2D0 BL 0x2BB2F40
	0x02D5D2D4 CBNZ X20, 0x2D5D2EC
	0x02D5D2D8 LDP X20, X19, [X31 + 0x50]
	0x02D5D2DC LDP X30, X21, [X31 + 0x40]
	0x02D5D2E0 ADD X31, X31, 0x60
	0x02D5D2E4 RET
	0x02D5D2E8 BL 0x1C16F20
	0x02D5D2EC MOV X0, X20
	0x02D5D2F0 BL 0x1C16F18
	0x02D5D2F4 B 0x2D5D2FC
	0x02D5D2F8 B 0x2D5D2FC
	0x02D5D2FC MOV X21, X0
	0x02D5D300 CMP W1, 0x1
	0x02D5D304 B.NE 0x2D5D31C
	0x02D5D308 MOV X0, X21
	0x02D5D30C BL 0x3EB1AD0
	0x02D5D310 LDR X20, [X0]
	0x02D5D314 BL 0x3EB1AE0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x167F000
	007 Move W8, [X22+2237]
	008 Move X21, X2
	009 Move W19, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x1398000
	016 Move X0, [X0+3672]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2237], W8
	020 Move X8, [X21+32]
	021 Move X8, [X8+192]
	022 Move X0, [X8+280]
	023 Move W8, [X0+309]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {29}
	028 Call 0x1C5D684
	029 Move X22, 0x1398000
	030 Move X22, [X22+3672]
	031 Move W1, W19
	032 Call 0x1C17D6C
	033 Move X8, [X20+24]
	034 Move X21, X0
	035 Compare X8, 0
	036 JumpIfEqual {44}
	037 Move W4, [X20+36]
	038 Move X0, X8
	039 Move W1, W31
	040 Move X2, X21
	041 Move W3, W31
	042 Move X5, X31
	043 Call Array.Copy, X0, X1, X2, X3, X4
	044 Move X0, [X22]
	045 Move W1, W19
	046 Call 0x1C17D6C
	047 Move W8, [X20+36]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Compare X21, 0
	050 JumpIfEqual {79}
	051 Move W9, [X21+24]
	052 Move W8, W31
	053 Add X10, X21, 36
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Compare X0, 0
	056 JumpIfEqual {79}
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 Move W12, [X0+24]
	059 NotImplemented "Instruction SDIV not yet implemented."
	060 NotImplemented "Instruction MSUB not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Add X11, X0, W11
	063 Move W12, [X11+32]
	064 Add W8, W8, 1
	065 Subtract W12, W12, 1
	066 Move [X10+12], W12
	067 Move [X11+32], W8
	068 Move W11, [X20+36]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move [X20+16], X0
	071 Move [X20+24], X21
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Return 
	078 Call 0x1C17F28
	079 Call 0x1C17F20

Method: System.Boolean AddIfNotPresent(T value)

Disassembly:
	0x02D5D318 B 0x2D5D2C0
	0x02D5D31C MOV X20, X31
	0x02D5D320 B 0x2D5D328
	0x02D5D324 MOV X21, X0
	0x02D5D328 LDR X8, [X19 + 0x20]
	0x02D5D32C LDR X8, [X8 + 0xC0]
	0x02D5D330 LDR X1, [X8 + 0x1D0]
	0x02D5D334 ADD X0, X31, 0x20
	0x02D5D338 BL 0x2BB2F40
	0x02D5D33C CBNZ X20, 0x2D5D348
	0x02D5D340 MOV X0, X21
	0x02D5D344 BL 0x1D2C690
	0x02D5D348 MOV X0, X20
	0x02D5D34C BL 0x1C16F18
	0x02D5D350 BL 0x1990590
	0x02D5D354 STP X29, X30, [X31 - 0x60]!
	0x02D5D358 STP X28, X27, [X31 + 0x10]
	0x02D5D35C STP X26, X25, [X31 + 0x20]
	0x02D5D360 STP X24, X23, [X31 + 0x30]
	0x02D5D364 STP X22, X21, [X31 + 0x40]
	0x02D5D368 STP X20, X19, [X31 + 0x50]
	0x02D5D36C ADD X29, X31, 0x0
	0x02D5D370 SUB X31, X31, 0x10
	0x02D5D374 MRS X27, 0xC000
	0x02D5D378 LDR X8, [X27 + 0x28]
	0x02D5D37C ADRP X21, 0x167E000
	0x02D5D380 MOV X19, X2
	0x02D5D384 MOV X23, X1
	0x02D5D388 STUR X8, [X29 - 0x8]
	0x02D5D38C LDRB W8, [X21 + 0x8C0]
	0x02D5D390 MOV X20, X0
	0x02D5D394 TBNZ X8, 0x0, 0x2D5D3D0
	0x02D5D398 ADRP X0, 0x13C1000
	0x02D5D39C LDR X0, [X0 + 0xF28]
	0x02D5D3A0 BL 0x1C16CF4
	0x02D5D3A4 ADRP X0, 0x1396000
	0x02D5D3A8 LDR X0, [X0 + 0xE00]
	0x02D5D3AC BL 0x1C16CF4
	0x02D5D3B0 ADRP X0, 0x1396000
	0x02D5D3B4 LDR X0, [X0 + 0xE18]
	0x02D5D3B8 BL 0x1C16CF4
	0x02D5D3BC ADRP X0, 0x1397000
	0x02D5D3C0 LDR X0, [X0 + 0xE58]
	0x02D5D3C4 BL 0x1C16CF4
	0x02D5D3C8 MOVZ W8, 0x1
	0x02D5D3CC STRB W8, [X21 + 0x8C0]
	0x02D5D3D0 STUR W31, [X29 - 0xC]
	0x02D5D3D4 LDR W21, [X20 + 0x24]
	0x02D5D3D8 ADRP X28, 0x13C1000
	0x02D5D3DC LDR X28, [X28 + 0xF28]
	0x02D5D3E0 MOV X1, X31
	0x02D5D3E4 MOV W0, W21
	0x02D5D3E8 BL 0x35E080C
	0x02D5D3EC MOV W25, W0
	0x02D5D3F0 CMP W0, 0x32
	0x02D5D3F4 B.LE 0x2D5D464
	0x02D5D3F8 ADRP X26, 0x1397000
	0x02D5D3FC LDR X26, [X26 + 0xE58]
	0x02D5D400 MOV W1, W25
	0x02D5D404 LDR X0, [X26]
	0x02D5D408 BL 0x1C16D6C
	0x02D5D40C LDR X8, [X28]
	0x02D5D410 MOV X24, X0
	0x02D5D414 MOV X0, X8
	0x02D5D418 BL 0x1C16F10
	0x02D5D41C MOV X1, X24
	0x02D5D420 MOV W2, W25
	0x02D5D424 MOV X3, X31
	0x02D5D428 MOV X22, X0
	0x02D5D42C BL 0x35E06DC
	0x02D5D430 LDR X0, [X26]
	0x02D5D434 MOV W1, W25
	0x02D5D438 BL 0x1C16D6C
	0x02D5D43C LDR X8, [X28]
	0x02D5D440 MOV X26, X0
	0x02D5D444 MOV X0, X8
	0x02D5D448 BL 0x1C16F10
	0x02D5D44C MOV X1, X26
	0x02D5D450 MOV W2, W25
	0x02D5D454 MOV X3, X31
	0x02D5D458 MOV X24, X0
	0x02D5D45C BL 0x35E06DC
	0x02D5D460 B 0x2D5D500
	0x02D5D464 SBFM X24, X25, 0x3E, 0x1F
	0x02D5D468 CBZ W25, 0x2D5D484
	0x02D5D46C ADD X9, X24, 0xF
	0x02D5D470 ADD X8, X31, 0x0
	0x02D5D474 AND X9, X9, 0xFFFFFFFF
	0x02D5D478 SUB X26, X8, X9
	0x02D5D47C ADD X31, X26, 0x0
	0x02D5D480 B 0x2D5D488
	0x02D5D484 MOV X26, X31
	0x02D5D488 MOV X0, X26
	0x02D5D48C MOV W1, W31
	0x02D5D490 MOV X2, X24
	0x02D5D494 BL 0x3EB1B10
	0x02D5D498 LDR X0, [X28]
	0x02D5D49C BL 0x1C16F10
	0x02D5D4A0 MOV X1, X26
	0x02D5D4A4 MOV W2, W25
	0x02D5D4A8 MOV X3, X31
	0x02D5D4AC MOV X22, X0
	0x02D5D4B0 BL 0x35E06A4
	0x02D5D4B4 CBZ W25, 0x2D5D4D0
	0x02D5D4B8 ADD X9, X24, 0xF
	0x02D5D4BC ADD X8, X31, 0x0
	0x02D5D4C0 AND X9, X9, 0xFFFFFFFF
	0x02D5D4C4 SUB X26, X8, X9
	0x02D5D4C8 ADD X31, X26, 0x0
	0x02D5D4CC B 0x2D5D4D4
	0x02D5D4D0 MOV X26, X31
	0x02D5D4D4 MOV X0, X26
	0x02D5D4D8 MOV W1, W31
	0x02D5D4DC MOV X2, X24
	0x02D5D4E0 BL 0x3EB1B10
	0x02D5D4E4 LDR X0, [X28]
	0x02D5D4E8 BL 0x1C16F10
	0x02D5D4EC MOV X1, X26
	0x02D5D4F0 MOV W2, W25
	0x02D5D4F4 MOV X3, X31
	0x02D5D4F8 MOV X24, X0
	0x02D5D4FC BL 0x35E06A4
	0x02D5D500 CBZ X23, 0x2D5D7E4
	0x02D5D504 LDR X8, [X19 + 0x20]
	0x02D5D508 LDR X8, [X8 + 0xC0]
	0x02D5D50C LDR X1, [X8 + 0x38]
	0x02D5D510 LDRB W8, [X1 + 0x135]
	0x02D5D514 TBNZ X8, 0x0, 0x2D5D524
	0x02D5D518 MOV X0, X1
	0x02D5D51C BL 0x1C5C684
	0x02D5D520 MOV X1, X0
	0x02D5D524 LDR X8, [X23]
	0x02D5D528 LDRH W9, [X8 + 0x12E]
	0x02D5D52C CBZ X9, 0x2D5D550
	0x02D5D530 LDR X10, [X8 + 0xB0]
	0x02D5D534 ADD X10, X10, 0x8
	0x02D5D538 LDUR X11, [X10 - 0x8]
	0x02D5D53C CMP X11, X1
	0x02D5D540 B.EQ 0x2D5D560
	0x02D5D544 SUBS X9, X9, 0x1
	0x02D5D548 ADD X10, X10, 0x10
	0x02D5D54C B.NE 0x2D5D538
	0x02D5D550 MOV X0, X23
	0x02D5D554 MOV W2, W31
	0x02D5D558 BL 0x1C5C788
	0x02D5D55C B 0x2D5D56C
	0x02D5D560 LDRSW X9, [X10]
	0x02D5D564 ADD X8, X8, X9, 0x4, LSL
	0x02D5D568 ADD X0, X8, 0x138
	0x02D5D56C LDP X8, X1, [X0]
	0x02D5D570 ADRP X26, 0x1396000
	0x02D5D574 LDR X26, [X26 + 0xE00]
	0x02D5D578 MOV X0, X23
	0x02D5D57C BLR X8
	0x02D5D580 MOV X23, X0
	0x02D5D584 CBZ X0, 0x2D5D7F4
	0x02D5D588 ADRP X28, 0x1396000
	0x02D5D58C LDR X28, [X28 + 0xE18]
	0x02D5D590 LDR X8, [X23]
	0x02D5D594 LDR X1, [X28]
	0x02D5D598 LDRH W9, [X8 + 0x12E]
	0x02D5D59C CBZ X9, 0x2D5D5C0
	0x02D5D5A0 LDR X10, [X8 + 0xB0]
	0x02D5D5A4 ADD X10, X10, 0x8
	0x02D5D5A8 LDUR X11, [X10 - 0x8]
	0x02D5D5AC CMP X11, X1
	0x02D5D5B0 B.EQ 0x2D5D5D0
	0x02D5D5B4 SUBS X9, X9, 0x1
	0x02D5D5B8 ADD X10, X10, 0x10
	0x02D5D5BC B.NE 0x2D5D5A8
	0x02D5D5C0 MOV X0, X23
	0x02D5D5C4 MOV W2, W31
	0x02D5D5C8 BL 0x1C5C788
	0x02D5D5CC B 0x2D5D5DC
	0x02D5D5D0 LDRSW X9, [X10]
	0x02D5D5D4 ADD X8, X8, X9, 0x4, LSL
	0x02D5D5D8 ADD X0, X8, 0x138
	0x02D5D5DC LDP X8, X1, [X0]
	0x02D5D5E0 MOV X0, X23
	0x02D5D5E4 BLR X8
	0x02D5D5E8 TBZ X0, 0x0, 0x2D5D6D8
	0x02D5D5EC LDR X8, [X19 + 0x20]
	0x02D5D5F0 LDR X8, [X8 + 0xC0]
	0x02D5D5F4 LDR X1, [X8 + 0xE8]
	0x02D5D5F8 LDRB W8, [X1 + 0x135]
	0x02D5D5FC TBNZ X8, 0x0, 0x2D5D60C
	0x02D5D600 MOV X0, X1
	0x02D5D604 BL 0x1C5C684
	0x02D5D608 MOV X1, X0
	0x02D5D60C LDR X8, [X23]
	0x02D5D610 LDRH W9, [X8 + 0x12E]
	0x02D5D614 CBZ X9, 0x2D5D638
	0x02D5D618 LDR X10, [X8 + 0xB0]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X8, [X0+16]
	015 Move X22, X2
	016 Move X19, X0
	017 Move X20, X1
	018 Compare X8, 0
	019 JumpIfNotEqual {26}
	020 Move X8, [X22+32]
	021 Move X0, X19
	022 Move W1, W31
	023 Move X8, [X8+192]
	024 Move X2, [X8+112]
	025 Call 0x2D5D07C, X0, X1
	026 Move X8, [X22+32]
	027 And X23, X20, 0xFFFF
	028 Move X0, X19
	029 Move X1, X23
	030 Move X8, [X8+192]
	031 Move X2, [X8+176]
	032 Call 0x2D5F320, X0, X1
	033 Move X8, [X19+16]
	034 Compare X8, 0
	035 JumpIfEqual {212}
	036 Move W9, [X8+24]
	037 Move W21, W0
	038 Move [X31], X20
	039 NotImplemented "Instruction SDIV not yet implemented."
	040 NotImplemented "Instruction MSUB not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Add X8, X8, W10
	043 Move W8, [X8+32]
	044 Move X26, [X19+24]
	045 Move [X31+12], W10
	046 Subtract W29, W8, 1
	047 Compare X26, 0
	048 JumpIfEqual {212}
	049 Move X8, [X26+24]
	050 Move W28, W31
	051 Move W20, 12
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction UMADDL not yet implemented."
	054 Move W9, [X9+32]
	055 Move W27, W29
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X24, [X19+48]
	058 Compare X24, 0
	059 JumpIfEqual {212}
	060 Move X8, [X22+32]
	061 Move X8, [X8+192]
	062 Move X1, [X8+32]
	063 NotImplemented "Instruction NOP not yet implemented."
	064 NotImplemented "Instruction MADD not yet implemented."
	065 NotImplemented "Instruction LDRH not yet implemented."
	066 Move W9, [X1+309]
	067 Move TEMP, X9
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {74}
	071 Move X0, X1
	072 Call 0x1C5D684
	073 Move X1, X0
	074 Move X8, [X24]
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 Compare X9, 0
	077 JumpIfEqual {84}
	078 Move X10, [X8+176]
	079 Add X10, X10, 8
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract X9, X9, 1
	083 Add X10, X10, 16
	084 Move X0, X24
	085 Move W2, W31
	086 Call 0x1C5D788
	087 NotImplemented "Instruction LDRSW not yet implemented."
	088 Add X8, X8, X9
	089 Add X0, X8, 312
	090 Move X8, [X0]
	091 Move X3, [X0+8]
	092 Move X0, X24
	093 Move X1, X25
	094 Move X2, X23
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {147}
	100 Move X8, [X26+24]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 NotImplemented "Instruction MADD not yet implemented."
	104 Move W29, [X9+36]
	105 Add W28, W28, 1
	106 Move TEMP, X29
	107 And TEMP, TEMP, -2147483648
	108 Compare TEMP, -2147483648
	109 JumpIfNotEqual {52}
	110 Move W8, [X19+40]
	111 Move TEMP, X8
	112 And TEMP, TEMP, -2147483648
	113 Compare TEMP, -2147483648
	114 JumpIfEqual {124}
	115 Compare X26, 0
	116 JumpIfEqual {212}
	117 Move W9, [X26+24]
	118 Move W11, [X31+12]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move W9, 12
	121 NotImplemented "Instruction MADD not yet implemented."
	122 Move W9, [X9+36]
	123 Move [X19+40], W9
	124 Compare X26, 0
	125 JumpIfEqual {212}
	126 Move W8, [X19+36]
	127 Move W9, [X26+24]
	128 Move W11, [X31+12]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X8, [X22+32]
	131 Move X0, X19
	132 Move X8, [X8+192]
	133 Move X1, [X8+424]
	134 Call 0x2D5D13C, X0
	135 Move X9, [X19+16]
	136 Compare X9, 0
	137 JumpIfEqual {212}
	138 Move W8, [X19+36]
	139 Move X26, [X19+24]
	140 Move W9, [X9+24]
	141 Add W10, W8, 1
	142 Move [X19+36], W10
	143 Compare X26, 0
	144 JumpIfEqual {212}
	145 NotImplemented "Instruction SDIV not yet implemented."
	146 NotImplemented "Instruction MSUB not yet implemented."
	147 Move W0, W31
	148 Add W9, W8, 1
	149 Move [X19+36], W9
	150 Move W9, [X26+24]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X10, [X31]
	153 Move W9, 12
	154 NotImplemented "Instruction SMADDL not yet implemented."
	155 Move [X9+32], W21
	156 NotImplemented "Instruction STRH not yet implemented."
	157 Move X9, [X19+16]
	158 Compare X9, 0
	159 JumpIfEqual {212}
	160 Move W10, [X9+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move W10, [X26+24]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Add X9, X9, W11
	165 Add X9, X9, 32
	166 Move W11, [X9]
	167 Move W10, W8
	168 Move X10, W10
	169 Move W12, 12
	170 Add W8, W8, 1
	171 NotImplemented "Instruction MADD not yet implemented."
	172 Subtract W11, W11, 1
	173 Move [X10+36], W11
	174 Move [X9], W8
	175 Move W8, [X19+32]
	176 Move W9, [X19+56]
	177 Move W0, 1
	178 Add W8, W8, 1
	179 Add W9, W9, 1
	180 Move [X19+32], W8
	181 Move [X19+56], W9
	182 Move X20, [X31+96]
	183 Move X19, [X31+104]
	184 Move X22, [X31+80]
	185 Move X21, [X31+88]
	186 Move X24, [X31+64]
	187 Move X23, [X31+72]
	188 Move X26, [X31+48]
	189 Move X25, [X31+56]
	190 Move X28, [X31+32]
	191 Move X27, [X31+40]
	192 Move X29, [X31+16]
	193 Move X30, [X31+24]
	194 Add X31, X31, 112
	195 Return X0
	196 Call 0x1C17F28
	197 Move X0, 0x1397000
	198 Move X0, [X0+1456]
	199 Call 0x1C17D08
	200 Call 0x1C17F10
	201 Move X19, X0
	202 Move X0, 0x13C2000
	203 Move X0, [X0+3840]
	204 Call 0x1C17D08
	205 Move X1, X0
	206 Move X0, X19
	207 Move X2, X31
	208 Call InvalidOperationException..ctor, X0, X1
	209 Move X0, X19
	210 Move X1, X22
	211 Call 0x1C17DEC
	212 Call 0x1C17F20

Method: System.Void AddValue(System.Int32 index, System.Int32 hashCode, T value)

Disassembly:
	0x02D5D61C ADD X10, X10, 0x8
	0x02D5D620 LDUR X11, [X10 - 0x8]
	0x02D5D624 CMP X11, X1
	0x02D5D628 B.EQ 0x2D5D648
	0x02D5D62C SUBS X9, X9, 0x1
	0x02D5D630 ADD X10, X10, 0x10
	0x02D5D634 B.NE 0x2D5D620
	0x02D5D638 MOV X0, X23
	0x02D5D63C MOV W2, W31
	0x02D5D640 BL 0x1C5C788
	0x02D5D644 B 0x2D5D654
	0x02D5D648 LDRSW X9, [X10]
	0x02D5D64C ADD X8, X8, X9, 0x4, LSL
	0x02D5D650 ADD X0, X8, 0x138
	0x02D5D654 LDP X8, X1, [X0]
	0x02D5D658 MOV X0, X23
	0x02D5D65C BLR X8
	0x02D5D660 STUR W31, [X29 - 0xC]
	0x02D5D664 LDR X8, [X19 + 0x20]
	0x02D5D668 AND X1, X0, 0xFFFF
	0x02D5D66C LDR X8, [X8 + 0xC0]
	0x02D5D670 LDR X3, [X8 + 0x1E0]
	0x02D5D674 SUB X2, X29, 0xC
	0x02D5D678 MOV X0, X20
	0x02D5D67C BL 0x2D5D8CC
	0x02D5D680 LDUR W25, [X29 - 0xC]
	0x02D5D684 TBZ X0, 0x0, 0x2D5D6A0
	0x02D5D688 CBZ X24, 0x2D5D7E0
	0x02D5D68C MOV X0, X24
	0x02D5D690 MOV W1, W25
	0x02D5D694 MOV X2, X31
	0x02D5D698 BL 0x35E070C
	0x02D5D69C B 0x2D5D590
	0x02D5D6A0 CMP W25, W21
	0x02D5D6A4 B.GE 0x2D5D590
	0x02D5D6A8 CBZ X24, 0x2D5D7E8
	0x02D5D6AC MOV X0, X24
	0x02D5D6B0 MOV W1, W25

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {39}
	005 Move X9, [X0+24]
	006 Compare X9, 0
	007 JumpIfEqual {39}
	008 Move W10, [X9+24]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W10, [X8+24]
	011 Move X8, W1
	012 Move W11, 12
	013 NotImplemented "Instruction MADD not yet implemented."
	014 Move [X9+32], W2
	015 NotImplemented "Instruction STRH not yet implemented."
	016 Move X9, [X0+24]
	017 Compare X9, 0
	018 JumpIfEqual {39}
	019 Move X11, [X0+16]
	020 Compare X11, 0
	021 JumpIfEqual {39}
	022 Move W12, [X11+24]
	023 NotImplemented "Instruction SDIV not yet implemented."
	024 NotImplemented "Instruction MSUB not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W12, [X9+24]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Add X10, X11, W10
	029 Add X10, X10, 32
	030 Move W11, [X10]
	031 Move W12, 12
	032 Add W13, W1, 1
	033 NotImplemented "Instruction MADD not yet implemented."
	034 Subtract W9, W11, 1
	035 Move [X8+36], W9
	036 Move [X10], W13
	037 Move X30, [X31+16]
	038 Return 
	039 Call 0x1C17F20
	040 Call 0x1C17F28

Method: System.Boolean ContainsAllElements(System.Collections.Generic.IEnumerable`1<T> other)

Disassembly:
	0x02D5D6B4 MOV X2, X31
	0x02D5D6B8 BL 0x35E0788
	0x02D5D6BC TBNZ X0, 0x0, 0x2D5D590
	0x02D5D6C0 CBZ X22, 0x2D5D7F0
	0x02D5D6C4 MOV X0, X22
	0x02D5D6C8 MOV W1, W25
	0x02D5D6CC MOV X2, X31
	0x02D5D6D0 BL 0x35E070C
	0x02D5D6D4 B 0x2D5D590
	0x02D5D6D8 MOV X24, X31
	0x02D5D6DC MOVZ W25, 0xB
	0x02D5D6E0 CBZ X23, 0x2D5D73C
	0x02D5D6E4 LDR X8, [X23]
	0x02D5D6E8 LDR X1, [X26]
	0x02D5D6EC LDRH W9, [X8 + 0x12E]
	0x02D5D6F0 CBZ X9, 0x2D5D714
	0x02D5D6F4 LDR X10, [X8 + 0xB0]
	0x02D5D6F8 ADD X10, X10, 0x8
	0x02D5D6FC LDUR X11, [X10 - 0x8]
	0x02D5D700 CMP X11, X1
	0x02D5D704 B.EQ 0x2D5D724
	0x02D5D708 SUBS X9, X9, 0x1
	0x02D5D70C ADD X10, X10, 0x10
	0x02D5D710 B.NE 0x2D5D6FC
	0x02D5D714 MOV X0, X23
	0x02D5D718 MOV W2, W31
	0x02D5D71C BL 0x1C5C788
	0x02D5D720 B 0x2D5D730
	0x02D5D724 LDRSW X9, [X10]
	0x02D5D728 ADD X8, X8, X9, 0x4, LSL
	0x02D5D72C ADD X0, X8, 0x138
	0x02D5D730 LDP X8, X1, [X0]
	0x02D5D734 MOV X0, X23
	0x02D5D738 BLR X8
	0x02D5D73C CBNZ X24, 0x2D5D7F8
	0x02D5D740 CMP W25, 0xB
	0x02D5D744 B.EQ 0x2D5D74C
	0x02D5D748 CBNZ W25, 0x2D5D7B0
	0x02D5D74C CMP W21, 0x1
	0x02D5D750 B.LT 0x2D5D7B0
	0x02D5D754 CBZ X22, 0x2D5D7E4
	0x02D5D758 MOV X23, X31
	0x02D5D75C MOVZ W24, 0x28
	0x02D5D760 MOV X0, X22
	0x02D5D764 MOV W1, W23
	0x02D5D768 MOV X2, X31
	0x02D5D76C BL 0x35E0788
	0x02D5D770 TBZ X0, 0x0, 0x2D5D7A0
	0x02D5D774 LDR X8, [X20 + 0x18]
	0x02D5D778 CBZ X8, 0x2D5D7E4
	0x02D5D77C LDR W9, [X8 + 0x18]
	0x02D5D780 CMP X23, X9
	0x02D5D784 B.CS 0x2D5D7EC
	0x02D5D788 LDR X9, [X19 + 0x20]
	0x02D5D78C LDRH W1, [X8, X24, LSL]
	0x02D5D790 MOV X0, X20
	0x02D5D794 LDR X9, [X9 + 0xC0]
	0x02D5D798 LDR X2, [X9 + 0x148]
	0x02D5D79C BL 0x2D59C8C
	0x02D5D7A0 ADD X23, X23, 0x1
	0x02D5D7A4 CMP X21, X23
	0x02D5D7A8 ADD X24, X24, 0xC
	0x02D5D7AC B.NE 0x2D5D760
	0x02D5D7B0 LDR X8, [X27 + 0x28]
	0x02D5D7B4 LDUR X9, [X29 - 0x8]
	0x02D5D7B8 CMP X8, X9
	0x02D5D7BC B.NE 0x2D5D800
	0x02D5D7C0 ADD X31, X29, 0x0
	0x02D5D7C4 LDP X20, X19, [X31 + 0x50]
	0x02D5D7C8 LDP X22, X21, [X31 + 0x40]
	0x02D5D7CC LDP X24, X23, [X31 + 0x30]
	0x02D5D7D0 LDP X26, X25, [X31 + 0x20]
	0x02D5D7D4 LDP X28, X27, [X31 + 0x10]
	0x02D5D7D8 LDP X29, X30, [X31], #0x60
	0x02D5D7DC RET
	0x02D5D7E0 BL 0x1C16F20
	0x02D5D7E4 BL 0x1C16F20
	0x02D5D7E8 BL 0x1C16F20
	0x02D5D7EC BL 0x1C16F28
	0x02D5D7F0 BL 0x1C16F20
	0x02D5D7F4 BL 0x1C16F20
	0x02D5D7F8 MOV X0, X24
	0x02D5D7FC BL 0x1C16F18
	0x02D5D800 BL 0x3EB1B20
	0x02D5D804 B 0x2D5D828
	0x02D5D808 B 0x2D5D828
	0x02D5D80C B 0x2D5D828
	0x02D5D810 B 0x2D5D828
	0x02D5D814 B 0x2D5D828
	0x02D5D818 B 0x2D5D828
	0x02D5D81C B 0x2D5D828
	0x02D5D820 B 0x2D5D828
	0x02D5D824 B 0x2D5D828
	0x02D5D828 CMP W1, 0x1
	0x02D5D82C B.NE 0x2D5D848
	0x02D5D830 BL 0x3EB1AD0
	0x02D5D834 LDR X24, [X0]
	0x02D5D838 BL 0x3EB1AE0
	0x02D5D83C MOV W25, W31
	0x02D5D840 CBNZ X23, 0x2D5D6E4
	0x02D5D844 B 0x2D5D73C
	0x02D5D848 MOV X19, X0
	0x02D5D84C MOV X24, X31
	0x02D5D850 B 0x2D5D858
	0x02D5D854 MOV X19, X0
	0x02D5D858 CBZ X23, 0x2D5D8B4
	0x02D5D85C LDR X8, [X23]
	0x02D5D860 LDR X1, [X26]
	0x02D5D864 LDRH W9, [X8 + 0x12E]
	0x02D5D868 CBZ X9, 0x2D5D88C
	0x02D5D86C LDR X10, [X8 + 0xB0]
	0x02D5D870 ADD X10, X10, 0x8
	0x02D5D874 LDUR X11, [X10 - 0x8]
	0x02D5D878 CMP X11, X1
	0x02D5D87C B.EQ 0x2D5D89C
	0x02D5D880 SUBS X9, X9, 0x1
	0x02D5D884 ADD X10, X10, 0x10
	0x02D5D888 B.NE 0x2D5D874
	0x02D5D88C MOV X0, X23
	0x02D5D890 MOV W2, W31
	0x02D5D894 BL 0x1C5C788
	0x02D5D898 B 0x2D5D8A8
	0x02D5D89C LDRSW X9, [X10]
	0x02D5D8A0 ADD X8, X8, X9, 0x4, LSL
	0x02D5D8A4 ADD X0, X8, 0x138
	0x02D5D8A8 LDP X8, X1, [X0]
	0x02D5D8AC MOV X0, X23
	0x02D5D8B0 BLR X8
	0x02D5D8B4 CBNZ X24, 0x2D5D8C0
	0x02D5D8B8 MOV X0, X19
	0x02D5D8BC BL 0x1D2C690
	0x02D5D8C0 MOV X0, X24
	0x02D5D8C4 BL 0x1C16F18
	0x02D5D8C8 BL 0x1990590
	0x02D5D8CC SUB X31, X31, 0x80
	0x02D5D8D0 STP X29, X30, [X31 + 0x20]
	0x02D5D8D4 STP X28, X27, [X31 + 0x30]
	0x02D5D8D8 STP X26, X25, [X31 + 0x40]
	0x02D5D8DC STP X24, X23, [X31 + 0x50]
	0x02D5D8E0 STP X22, X21, [X31 + 0x60]
	0x02D5D8E4 STP X20, X19, [X31 + 0x70]
	0x02D5D8E8 LDR X8, [X3 + 0x20]
	0x02D5D8EC MOV X19, X2
	0x02D5D8F0 AND X24, X1, 0xFFFF
	0x02D5D8F4 MOV X21, X1
	0x02D5D8F8 LDR X8, [X8 + 0xC0]
	0x02D5D8FC MOV X1, X24
	0x02D5D900 MOV X23, X3
	0x02D5D904 MOV X20, X0
	0x02D5D908 LDR X2, [X8 + 0xB0]
	0x02D5D90C BL 0x2D5E320
	0x02D5D910 LDR X8, [X20 + 0x10]
	0x02D5D914 CBZ X8, 0x2D5DBB8
	0x02D5D918 LDR W9, [X8 + 0x18]
	0x02D5D91C MOV W22, W0
	0x02D5D920 STR X21, [X31 + 0x8]
	0x02D5D924 STR X19, [X31 + 0x18]
	0x02D5D928 SDIV W10, W0, W9
	0x02D5D92C MSUB W10, W10, W9, W0
	0x02D5D930 CMP W10, W9
	0x02D5D934 B.CS 0x2D5DB78
	0x02D5D938 ADD X8, X8, W10, 0x2, SXTW
	0x02D5D93C LDR W8, [X8 + 0x20]
	0x02D5D940 LDR X28, [X20 + 0x18]
	0x02D5D944 STR W10, [X31 + 0x14]
	0x02D5D948 SUBS W27, W8, 0x1
	0x02D5D94C B.MI 0x2D5DA34
	0x02D5D950 CBZ X28, 0x2D5DBB8
	0x02D5D954 LDR X8, [X28 + 0x18]
	0x02D5D958 MOV W19, W31
	0x02D5D95C MOVZ W21, 0xC
	0x02D5D960 CMP W27, W8
	0x02D5D964 B.CS 0x2D5DB78
	0x02D5D968 UMADDL X9, X27, X21, X28
	0x02D5D96C LDR W9, [X9 + 0x20]
	0x02D5D970 MOV W29, W27
	0x02D5D974 CMP W9, W22
	0x02D5D978 B.NE 0x2D5DA14
	0x02D5D97C LDR X25, [X20 + 0x30]
	0x02D5D980 CBZ X25, 0x2D5DBB8
	0x02D5D984 LDR X8, [X23 + 0x20]
	0x02D5D988 LDR X8, [X8 + 0xC0]
	0x02D5D98C LDR X1, [X8 + 0x20]
	0x02D5D990 NOP
	0x02D5D994 MADD X8, X29, X21, X28
	0x02D5D998 LDRH W26, [X8 + 0x28]
	0x02D5D99C LDRB W9, [X1 + 0x135]
	0x02D5D9A0 TBNZ X9, 0x0, 0x2D5D9B0
	0x02D5D9A4 MOV X0, X1
	0x02D5D9A8 BL 0x1C5C684
	0x02D5D9AC MOV X1, X0
	0x02D5D9B0 LDR X8, [X25]
	0x02D5D9B4 LDRH W9, [X8 + 0x12E]
	0x02D5D9B8 CBZ X9, 0x2D5D9DC
	0x02D5D9BC LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x167F000
	009 Move W8, [X22+2238]
	010 Move X20, X2
	011 Move X19, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x1397000
	018 Move X0, [X0+3584]
	019 Call 0x1C17CF4
	020 Move X0, 0x1397000
	021 Move X0, [X0+3608]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2238], W8
	025 Compare X19, 0
	026 JumpIfEqual {168}
	027 Move X8, [X20+32]
	028 Move X8, [X8+192]
	029 Move X1, [X8+56]
	030 Move W8, [X1+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {38}
	035 Move X0, X1
	036 Call 0x1C5D684
	037 Move X1, X0
	038 Move X8, [X19]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Compare X9, 0
	041 JumpIfEqual {48}
	042 Move X10, [X8+176]
	043 Add X10, X10, 8
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Subtract X9, X9, 1
	047 Add X10, X10, 16
	048 Move X0, X19
	049 Move W2, W31
	050 Call 0x1C5D788
	051 NotImplemented "Instruction LDRSW not yet implemented."
	052 Add X8, X8, X9
	053 Add X0, X8, 312
	054 Move X8, [X0]
	055 Move X1, [X0+8]
	056 Move X23, 0x1397000
	057 Move X23, [X23+3584]
	058 Move X0, X19
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X19, X0
	061 Compare X0, 0
	062 JumpIfEqual {169}
	063 Move X24, 0x1397000
	064 Move X24, [X24+3608]
	065 Move X8, [X19]
	066 Move X1, [X24]
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Compare X9, 0
	069 JumpIfEqual {76}
	070 Move X10, [X8+176]
	071 Add X10, X10, 8
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract X9, X9, 1
	075 Add X10, X10, 16
	076 Move X0, X19
	077 Move W2, W31
	078 Call 0x1C5D788
	079 NotImplemented "Instruction LDRSW not yet implemented."
	080 Add X8, X8, X9
	081 Add X0, X8, 312
	082 Move X8, [X0]
	083 Move X1, [X0+8]
	084 Move X0, X19
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move W22, W0
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {132}
	091 Move X8, [X20+32]
	092 Move X8, [X8+192]
	093 Move X1, [X8+232]
	094 Move W8, [X1+309]
	095 Move TEMP, X8
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfEqual {102}
	099 Move X0, X1
	100 Call 0x1C5D684
	101 Move X1, X0
	102 Move X8, [X19]
	103 NotImplemented "Instruction LDRH not yet implemented."
	104 Compare X9, 0
	105 JumpIfEqual {112}
	106 Move X10, [X8+176]
	107 Add X10, X10, 8
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Subtract X9, X9, 1
	111 Add X10, X10, 16
	112 Move X0, X19
	113 Move W2, W31
	114 Call 0x1C5D788
	115 NotImplemented "Instruction LDRSW not yet implemented."
	116 Add X8, X8, X9
	117 Add X0, X8, 312
	118 Move X8, [X0]
	119 Move X1, [X0+8]
	120 Move X0, X19
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move X8, [X20+32]
	123 And X1, X0, 0xFFFF
	124 Move X8, [X8+192]
	125 Move X2, [X8+392]
	126 Move X0, X21
	127 Call 0x2D5AAB4, X0, X1
	128 Move TEMP, X0
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfEqual {65}
	132 Move X20, X31
	133 Xor W21, W22, 1
	134 Compare X19, 0
	135 JumpIfEqual {157}
	136 Move X8, [X19]
	137 Move X1, [X23]
	138 NotImplemented "Instruction LDRH not yet implemented."
	139 Compare X9, 0
	140 JumpIfEqual {147}
	141 Move X10, [X8+176]
	142 Add X10, X10, 8
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Subtract X9, X9, 1
	146 Add X10, X10, 16
	147 Move X0, X19
	148 Move W2, W31
	149 Call 0x1C5D788
	150 NotImplemented "Instruction LDRSW not yet implemented."
	151 Add X8, X8, X9
	152 Add X0, X8, 312
	153 Move X8, [X0]
	154 Move X1, [X0+8]
	155 Move X0, X19
	156 NotImplemented "Instruction BLR not yet implemented."
	157 Compare X20, 0
	158 JumpIfNotEqual {170}
	159 And W0, W21, 1
	160 Move X20, [X31+48]
	161 Move X19, [X31+56]
	162 Move X22, [X31+32]
	163 Move X21, [X31+40]
	164 Move X24, [X31+16]
	165 Move X23, [X31+24]
	166 Move X30, [X31+64]
	167 Return X0
	168 Call 0x1C17F20
	169 Call 0x1C17F20
	170 Move X0, X20
	171 Call 0x1C17F18
	172 Move X21, X0
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X0, X21
	175 Call 0x3EB2AD0
	176 Move X20, [X0]
	177 Call 0x3EB2AE0
	178 Move W21, 1
	179 Compare X19, 0
	180 JumpIfNotEqual {136}
	181 Move X20, X31
	182 Move X21, X0
	183 Compare X19, 0
	184 JumpIfEqual {206}
	185 Move X8, [X19]
	186 Move X1, [X23]
	187 NotImplemented "Instruction LDRH not yet implemented."
	188 Compare X9, 0
	189 JumpIfEqual {196}
	190 Move X10, [X8+176]
	191 Add X10, X10, 8
	192 NotImplemented "Instruction LDUR not yet implemented."
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Subtract X9, X9, 1
	195 Add X10, X10, 16
	196 Move X0, X19
	197 Move W2, W31
	198 Call 0x1C5D788
	199 NotImplemented "Instruction LDRSW not yet implemented."
	200 Add X8, X8, X9
	201 Add X0, X8, 312
	202 Move X8, [X0]
	203 Move X1, [X0+8]
	204 Move X0, X19
	205 NotImplemented "Instruction BLR not yet implemented."
	206 Compare X20, 0
	207 JumpIfNotEqual {210}
	208 Move X0, X21
	209 Call 0x1D2D690
	210 Move X0, X20
	211 Call 0x1C17F18
	212 Call 0x1991590

Method: System.Boolean IsSubsetOfHashSetWithSameEC(System.Collections.Generic.HashSet`1<T> other)

Disassembly:
	0x02D5D9C0 ADD X10, X10, 0x8
	0x02D5D9C4 LDUR X11, [X10 - 0x8]
	0x02D5D9C8 CMP X11, X1
	0x02D5D9CC B.EQ 0x2D5D9EC
	0x02D5D9D0 SUBS X9, X9, 0x1
	0x02D5D9D4 ADD X10, X10, 0x10
	0x02D5D9D8 B.NE 0x2D5D9C4
	0x02D5D9DC MOV X0, X25
	0x02D5D9E0 MOV W2, W31
	0x02D5D9E4 BL 0x1C5C788
	0x02D5D9E8 B 0x2D5D9F8
	0x02D5D9EC LDRSW X9, [X10]
	0x02D5D9F0 ADD X8, X8, X9, 0x4, LSL
	0x02D5D9F4 ADD X0, X8, 0x138
	0x02D5D9F8 LDP X8, X3, [X0]
	0x02D5D9FC MOV X0, X25
	0x02D5DA00 MOV X1, X26
	0x02D5DA04 MOV X2, X24
	0x02D5DA08 BLR X8
	0x02D5DA0C TBNZ X0, 0x0, 0x2D5DABC
	0x02D5DA10 LDR X8, [X28 + 0x18]
	0x02D5DA14 CMP W19, W8
	0x02D5DA18 B.GE 0x2D5DB7C
	0x02D5DA1C CMP W27, W8
	0x02D5DA20 B.CS 0x2D5DB78
	0x02D5DA24 MADD X9, X29, X21, X28
	0x02D5DA28 LDR W27, [X9 + 0x24]
	0x02D5DA2C ADD W19, W19, 0x1
	0x02D5DA30 TBZ X27, 0x1F, 0x2D5D960
	0x02D5DA34 LDR W27, [X20 + 0x28]
	0x02D5DA38 TBNZ X27, 0x1F, 0x2D5DA64
	0x02D5DA3C CBZ X28, 0x2D5DBB8
	0x02D5DA40 LDR W8, [X28 + 0x18]
	0x02D5DA44 LDR W10, [X31 + 0x14]
	0x02D5DA48 CMP W27, W8
	0x02D5DA4C B.CS 0x2D5DB78
	0x02D5DA50 MOVZ W8, 0xC
	0x02D5DA54 MADD X8, X27, X8, X28
	0x02D5DA58 LDR W8, [X8 + 0x24]
	0x02D5DA5C STR W8, [X20 + 0x28]
	0x02D5DA60 B 0x2D5DACC
	0x02D5DA64 CBZ X28, 0x2D5DBB8
	0x02D5DA68 LDR W27, [X20 + 0x24]
	0x02D5DA6C LDR W8, [X28 + 0x18]
	0x02D5DA70 LDR W10, [X31 + 0x14]
	0x02D5DA74 CMP W27, W8
	0x02D5DA78 B.NE 0x2D5DAC4
	0x02D5DA7C LDR X8, [X23 + 0x20]
	0x02D5DA80 MOV X0, X20
	0x02D5DA84 LDR X8, [X8 + 0xC0]
	0x02D5DA88 LDR X1, [X8 + 0x1A8]
	0x02D5DA8C BL 0x2D5C13C
	0x02D5DA90 LDR X8, [X20 + 0x10]
	0x02D5DA94 CBZ X8, 0x2D5DBB8
	0x02D5DA98 LDR W27, [X20 + 0x24]
	0x02D5DA9C LDR X28, [X20 + 0x18]
	0x02D5DAA0 LDR W8, [X8 + 0x18]
	0x02D5DAA4 ADD W9, W27, 0x1
	0x02D5DAA8 STR W9, [X20 + 0x24]
	0x02D5DAAC CBZ X28, 0x2D5DBB8
	0x02D5DAB0 SDIV W9, W22, W8
	0x02D5DAB4 MSUB W10, W9, W8, W22
	0x02D5DAB8 B 0x2D5DACC
	0x02D5DABC MOV W0, W31
	0x02D5DAC0 B 0x2D5DB50
	0x02D5DAC4 ADD W8, W27, 0x1
	0x02D5DAC8 STR W8, [X20 + 0x24]
	0x02D5DACC LDR W8, [X28 + 0x18]
	0x02D5DAD0 CMP W27, W8
	0x02D5DAD4 B.CS 0x2D5DB78
	0x02D5DAD8 LDR X9, [X31 + 0x8]
	0x02D5DADC MOVZ W8, 0xC
	0x02D5DAE0 SMADDL X8, X27, X8, X28
	0x02D5DAE4 STR W22, [X8 + 0x20]
	0x02D5DAE8 STRH W9, [X8 + 0x28]
	0x02D5DAEC LDR X8, [X20 + 0x10]
	0x02D5DAF0 CBZ X8, 0x2D5DBB8
	0x02D5DAF4 LDR W9, [X8 + 0x18]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move [X31+32], X31
	007 Move [X31+40], X31
	008 Move [X31+48], X31
	009 Move X8, [X2+32]
	010 Move X19, X2
	011 Move X20, X1
	012 Move X1, X0
	013 Move X8, [X8+192]
	014 Add X0, X31, 8
	015 Move X8, [X8+432]
	016 Move [X31+8], X31
	017 Move [X31+16], X31
	018 Move [X31+24], X31
	019 Move X8, [X8+32]
	020 Move X8, [X8+192]
	021 Move X2, [X8+224]
	022 Call 0x2BB3F18, X0, X1
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 Move X8, [X31+24]
	025 Move [X31+2], V0
	026 Move [X31+48], X8
	027 Move X8, [X19+32]
	028 Move X8, [X8+192]
	029 Move X1, [X8+456]
	030 Add X0, X31, 32
	031 Call 0x2BB3F44, X0
	032 Move W21, W0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {49}
	037 Compare X20, 0
	038 JumpIfEqual {65}
	039 Move X8, [X19+32]
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Move X8, [X8+192]
	042 Move X2, [X8+392]
	043 Move X0, X20
	044 Call 0x2D5AAB4, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {27}
	049 Move X20, X31
	050 Xor W21, W21, 1
	051 Move X8, [X19+32]
	052 Add X0, X31, 32
	053 Move X8, [X8+192]
	054 Move X1, [X8+464]
	055 Call 0x2BB3F40, X0
	056 Compare X20, 0
	057 JumpIfNotEqual {66}
	058 And W0, W21, 1
	059 Move X20, [X31+80]
	060 Move X19, [X31+88]
	061 Move X30, [X31+64]
	062 Move X21, [X31+72]
	063 Add X31, X31, 96
	064 Return X0
	065 Call 0x1C17F20
	066 Move X0, X20
	067 Call 0x1C17F18
	068 Move X21, X0
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X0, X21
	071 Call 0x3EB2AD0
	072 Move X20, [X0]
	073 Call 0x3EB2AE0
	074 Move W21, 1
	075 Move X20, X31
	076 Move X21, X0
	077 Move X8, [X19+32]
	078 Move X8, [X8+192]
	079 Move X1, [X8+464]
	080 Add X0, X31, 32
	081 Call 0x2BB3F40, X0
	082 Compare X20, 0
	083 JumpIfNotEqual {86}
	084 Move X0, X21
	085 Call 0x1D2D690
	086 Move X0, X20
	087 Call 0x1C17F18
	088 Call 0x1991590

Method: System.Void IntersectWithHashSetWithSameEC(System.Collections.Generic.HashSet`1<T> other)

Disassembly:
	0x02D5DAF8 CMP W10, W9
	0x02D5DAFC B.CS 0x2D5DB78
	0x02D5DB00 LDR W9, [X28 + 0x18]
	0x02D5DB04 CMP W27, W9
	0x02D5DB08 B.CS 0x2D5DB78
	0x02D5DB0C ADD X8, X8, W10, 0x2, SXTW
	0x02D5DB10 LDR W10, [X8 + 0x20]!
	0x02D5DB14 MOV W9, W27
	0x02D5DB18 SXTW X9, W9
	0x02D5DB1C MOVZ W11, 0xC
	0x02D5DB20 MADD X9, X9, X11, X28
	0x02D5DB24 ADD W11, W27, 0x1
	0x02D5DB28 SUB W10, W10, 0x1
	0x02D5DB2C STR W10, [X9 + 0x24]
	0x02D5DB30 STR W11, [X8]
	0x02D5DB34 LDR W8, [X20 + 0x20]
	0x02D5DB38 LDR W9, [X20 + 0x38]
	0x02D5DB3C MOVZ W0, 0x1
	0x02D5DB40 ADD W8, W8, 0x1
	0x02D5DB44 ADD W9, W9, 0x1
	0x02D5DB48 STR W8, [X20 + 0x20]
	0x02D5DB4C STR W9, [X20 + 0x38]
	0x02D5DB50 LDR X8, [X31 + 0x18]
	0x02D5DB54 LDP X20, X19, [X31 + 0x70]
	0x02D5DB58 LDP X22, X21, [X31 + 0x60]
	0x02D5DB5C LDP X24, X23, [X31 + 0x50]
	0x02D5DB60 STR W27, [X8]
	0x02D5DB64 LDP X26, X25, [X31 + 0x40]
	0x02D5DB68 LDP X28, X27, [X31 + 0x30]
	0x02D5DB6C LDP X29, X30, [X31 + 0x20]
	0x02D5DB70 ADD X31, X31, 0x80
	0x02D5DB74 RET
	0x02D5DB78 BL 0x1C16F28
	0x02D5DB7C ADRP X0, 0x1396000
	0x02D5DB80 LDR X0, [X0 + 0x5B0]
	0x02D5DB84 BL 0x1C16D08
	0x02D5DB88 BL 0x1C16F10
	0x02D5DB8C MOV X19, X0
	0x02D5DB90 ADRP X0, 0x13C1000
	0x02D5DB94 LDR X0, [X0 + 0xF00]
	0x02D5DB98 BL 0x1C16D08
	0x02D5DB9C MOV X1, X0
	0x02D5DBA0 MOV X0, X19
	0x02D5DBA4 MOV X2, X31
	0x02D5DBA8 BL 0x337DF1C
	0x02D5DBAC MOV X0, X19
	0x02D5DBB0 MOV X1, X23
	0x02D5DBB4 BL 0x1C16DEC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move W8, [X0+36]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X19, X2
	011 Move X20, X0
	012 Move X21, X1
	013 Move X23, X31
	014 Move X24, X31
	015 Move X8, [X20+24]
	016 Compare X8, 0
	017 JumpIfEqual {58}
	018 Move W9, [X8+24]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Add X9, X8, X23
	021 Move W9, [X9+32]
	022 Move TEMP, X9
	023 And TEMP, TEMP, -2147483648
	024 Compare TEMP, -2147483648
	025 JumpIfEqual {46}
	026 Compare X21, 0
	027 JumpIfEqual {58}
	028 Move X9, [X19+32]
	029 Add X8, X8, X23
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Move X0, X21
	032 Move X9, [X9+192]
	033 Move X1, X22
	034 Move X2, [X9+392]
	035 Call 0x2D5AAB4, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {46}
	040 Move X8, [X19+32]
	041 Move X0, X20
	042 Move X1, X22
	043 Move X8, [X8+192]
	044 Move X2, [X8+328]
	045 Call 0x2D5AC8C, X0, X1
	046 NotImplemented "Instruction LDRSW not yet implemented."
	047 Add X24, X24, 1
	048 Add X23, X23, 12
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move X30, [X31+64]
	057 Return 
	058 Call 0x1C17F20
	059 Call 0x1C17F28

Method: System.Void IntersectWithEnumerable(System.Collections.Generic.IEnumerable`1<T> other)

Disassembly:
	0x02D5DBB8 BL 0x1C16F20
	0x02D5DBBC STP X29, X30, [X31 - 0x60]!
	0x02D5DBC0 STP X28, X27, [X31 + 0x10]
	0x02D5DBC4 STP X26, X25, [X31 + 0x20]
	0x02D5DBC8 STP X24, X23, [X31 + 0x30]
	0x02D5DBCC STP X22, X21, [X31 + 0x40]
	0x02D5DBD0 STP X20, X19, [X31 + 0x50]
	0x02D5DBD4 ADD X29, X31, 0x0
	0x02D5DBD8 SUB X31, X31, 0x10
	0x02D5DBDC MRS X26, 0xC000
	0x02D5DBE0 LDR X8, [X26 + 0x28]
	0x02D5DBE4 ADRP X23, 0x167E000
	0x02D5DBE8 MOV X19, X3
	0x02D5DBEC MOV W21, W2
	0x02D5DBF0 STUR X8, [X29 - 0x8]
	0x02D5DBF4 LDRB W8, [X23 + 0x8C1]
	0x02D5DBF8 MOV X20, X1
	0x02D5DBFC MOV X22, X0
	0x02D5DC00 TBNZ X8, 0x0, 0x2D5DC3C
	0x02D5DC04 ADRP X0, 0x13C1000
	0x02D5DC08 LDR X0, [X0 + 0xF28]
	0x02D5DC0C BL 0x1C16CF4
	0x02D5DC10 ADRP X0, 0x1396000
	0x02D5DC14 LDR X0, [X0 + 0xE00]
	0x02D5DC18 BL 0x1C16CF4
	0x02D5DC1C ADRP X0, 0x1396000
	0x02D5DC20 LDR X0, [X0 + 0xE18]
	0x02D5DC24 BL 0x1C16CF4
	0x02D5DC28 ADRP X0, 0x1397000
	0x02D5DC2C LDR X0, [X0 + 0xE58]
	0x02D5DC30 BL 0x1C16CF4
	0x02D5DC34 MOVZ W8, 0x1
	0x02D5DC38 STRB W8, [X23 + 0x8C1]
	0x02D5DC3C ADRP X27, 0x1396000
	0x02D5DC40 LDR W8, [X22 + 0x20]
	0x02D5DC44 LDR X27, [X27 + 0xE18]
	0x02D5DC48 CBZ W8, 0x2D5DCA8
	0x02D5DC4C LDR W0, [X22 + 0x24]
	0x02D5DC50 MOV X1, X31
	0x02D5DC54 BL 0x35E080C
	0x02D5DC58 MOV W24, W0
	0x02D5DC5C CMP W0, 0x64
	0x02D5DC60 B.LE 0x2D5DD08
	0x02D5DC64 ADRP X8, 0x1397000
	0x02D5DC68 LDR X8, [X8 + 0xE58]
	0x02D5DC6C MOV W1, W24
	0x02D5DC70 LDR X0, [X8]
	0x02D5DC74 BL 0x1C16D6C
	0x02D5DC78 ADRP X8, 0x13C1000
	0x02D5DC7C LDR X8, [X8 + 0xF28]
	0x02D5DC80 MOV X25, X0
	0x02D5DC84 LDR X8, [X8]
	0x02D5DC88 MOV X0, X8
	0x02D5DC8C BL 0x1C16F10
	0x02D5DC90 MOV X1, X25
	0x02D5DC94 MOV W2, W24
	0x02D5DC98 MOV X3, X31
	0x02D5DC9C MOV X23, X0
	0x02D5DCA0 BL 0x35E06DC
	0x02D5DCA4 B 0x2D5DE44
	0x02D5DCA8 CBZ X20, 0x2D5E130
	0x02D5DCAC LDR X8, [X19 + 0x20]
	0x02D5DCB0 LDR X8, [X8 + 0xC0]
	0x02D5DCB4 LDR X1, [X8 + 0x38]
	0x02D5DCB8 LDRB W8, [X1 + 0x135]
	0x02D5DCBC TBNZ X8, 0x0, 0x2D5DCCC
	0x02D5DCC0 MOV X0, X1
	0x02D5DCC4 BL 0x1C5C684
	0x02D5DCC8 MOV X1, X0
	0x02D5DCCC LDR X8, [X20]
	0x02D5DCD0 LDRH W9, [X8 + 0x12E]
	0x02D5DCD4 CBZ X9, 0x2D5DCF8
	0x02D5DCD8 LDR X10, [X8 + 0xB0]
	0x02D5DCDC ADD X10, X10, 0x8
	0x02D5DCE0 LDUR X11, [X10 - 0x8]
	0x02D5DCE4 CMP X11, X1
	0x02D5DCE8 B.EQ 0x2D5DD28
	0x02D5DCEC SUBS X9, X9, 0x1
	0x02D5DCF0 ADD X10, X10, 0x10
	0x02D5DCF4 B.NE 0x2D5DCE0
	0x02D5DCF8 MOV X0, X20
	0x02D5DCFC MOV W2, W31
	0x02D5DD00 BL 0x1C5C788
	0x02D5DD04 B 0x2D5DD34
	0x02D5DD08 SBFM X2, X24, 0x3E, 0x1F
	0x02D5DD0C CBZ W24, 0x2D5DE10
	0x02D5DD10 ADD X9, X2, 0xF
	0x02D5DD14 ADD X8, X31, 0x0
	0x02D5DD18 AND X9, X9, 0xFFFFFFFF
	0x02D5DD1C SUB X25, X8, X9
	0x02D5DD20 ADD X31, X25, 0x0
	0x02D5DD24 B 0x2D5DE14
	0x02D5DD28 LDRSW X9, [X10]
	0x02D5DD2C ADD X8, X8, X9, 0x4, LSL
	0x02D5DD30 ADD X0, X8, 0x138
	0x02D5DD34 LDP X8, X1, [X0]
	0x02D5DD38 MOV X0, X20
	0x02D5DD3C BLR X8
	0x02D5DD40 MOV X20, X0
	0x02D5DD44 CBZ X0, 0x2D5E13C
	0x02D5DD48 LDR X8, [X20]
	0x02D5DD4C LDR X1, [X27]
	0x02D5DD50 LDRH W9, [X8 + 0x12E]
	0x02D5DD54 CBZ X9, 0x2D5DD78
	0x02D5DD58 LDR X10, [X8 + 0xB0]
	0x02D5DD5C ADD X10, X10, 0x8
	0x02D5DD60 LDUR X11, [X10 - 0x8]
	0x02D5DD64 CMP X11, X1
	0x02D5DD68 B.EQ 0x2D5DD88
	0x02D5DD6C SUBS X9, X9, 0x1
	0x02D5DD70 ADD X10, X10, 0x10
	0x02D5DD74 B.NE 0x2D5DD60
	0x02D5DD78 MOV X0, X20
	0x02D5DD7C MOV W2, W31
	0x02D5DD80 BL 0x1C5C788
	0x02D5DD84 B 0x2D5DD94
	0x02D5DD88 LDRSW X9, [X10]
	0x02D5DD8C ADD X8, X8, X9, 0x4, LSL
	0x02D5DD90 ADD X0, X8, 0x138
	0x02D5DD94 LDP X8, X1, [X0]
	0x02D5DD98 MOV X0, X20
	0x02D5DD9C BLR X8
	0x02D5DDA0 TBZ X0, 0x0, 0x2D5DE00
	0x02D5DDA4 LDR X8, [X19 + 0x20]
	0x02D5DDA8 LDR X8, [X8 + 0xC0]
	0x02D5DDAC LDR X1, [X8 + 0xE8]
	0x02D5DDB0 LDRB W8, [X1 + 0x135]
	0x02D5DDB4 TBNZ X8, 0x0, 0x2D5DDC4
	0x02D5DDB8 MOV X0, X1
	0x02D5DDBC BL 0x1C5C684
	0x02D5DDC0 MOV X1, X0
	0x02D5DDC4 LDR X8, [X20]
	0x02D5DDC8 LDRH W9, [X8 + 0x12E]
	0x02D5DDCC CBZ X9, 0x2D5DDF0
	0x02D5DDD0 LDR X10, [X8 + 0xB0]
	0x02D5DDD4 ADD X10, X10, 0x8
	0x02D5DDD8 LDUR X11, [X10 - 0x8]
	0x02D5DDDC CMP X11, X1
	0x02D5DDE0 B.EQ 0x2D5E064
	0x02D5DDE4 SUBS X9, X9, 0x1
	0x02D5DDE8 ADD X10, X10, 0x10
	0x02D5DDEC B.NE 0x2D5DDD8
	0x02D5DDF0 MOV X0, X20
	0x02D5DDF4 MOV W2, W31
	0x02D5DDF8 BL 0x1C5C788
	0x02D5DDFC B 0x2D5E070
	0x02D5DE00 MOV X21, X31
	0x02D5DE04 MOV W25, W31
	0x02D5DE08 CBNZ X20, 0x2D5E088
	0x02D5DE0C B 0x2D5E0E8
	0x02D5DE10 MOV X25, X31
	0x02D5DE14 MOV X0, X25
	0x02D5DE18 MOV W1, W31
	0x02D5DE1C BL 0x3EB1B10
	0x02D5DE20 ADRP X8, 0x13C1000
	0x02D5DE24 LDR X8, [X8 + 0xF28]
	0x02D5DE28 LDR X0, [X8]
	0x02D5DE2C BL 0x1C16F10
	0x02D5DE30 MOV X1, X25
	0x02D5DE34 MOV W2, W24
	0x02D5DE38 MOV X3, X31
	0x02D5DE3C MOV X23, X0
	0x02D5DE40 BL 0x35E06A4
	0x02D5DE44 CBZ X20, 0x2D5E130
	0x02D5DE48 LDR X8, [X19 + 0x20]
	0x02D5DE4C LDR X8, [X8 + 0xC0]
	0x02D5DE50 LDR X1, [X8 + 0x38]
	0x02D5DE54 LDRB W8, [X1 + 0x135]
	0x02D5DE58 TBNZ X8, 0x0, 0x2D5DE68
	0x02D5DE5C MOV X0, X1
	0x02D5DE60 BL 0x1C5C684
	0x02D5DE64 MOV X1, X0
	0x02D5DE68 LDR X8, [X20]
	0x02D5DE6C LDRH W9, [X8 + 0x12E]
	0x02D5DE70 CBZ X9, 0x2D5DE94
	0x02D5DE74 LDR X10, [X8 + 0xB0]
	0x02D5DE78 ADD X10, X10, 0x8
	0x02D5DE7C LDUR X11, [X10 - 0x8]
	0x02D5DE80 CMP X11, X1
	0x02D5DE84 B.EQ 0x2D5DEA4
	0x02D5DE88 SUBS X9, X9, 0x1
	0x02D5DE8C ADD X10, X10, 0x10
	0x02D5DE90 B.NE 0x2D5DE7C
	0x02D5DE94 MOV X0, X20
	0x02D5DE98 MOV W2, W31
	0x02D5DE9C BL 0x1C5C788
	0x02D5DEA0 B 0x2D5DEB0
	0x02D5DEA4 LDRSW X9, [X10]
	0x02D5DEA8 ADD X8, X8, X9, 0x4, LSL
	0x02D5DEAC ADD X0, X8, 0x138
	0x02D5DEB0 LDP X8, X1, [X0]
	0x02D5DEB4 MOV X0, X20
	0x02D5DEB8 BLR X8
	0x02D5DEBC MOV X20, X0
	0x02D5DEC0 MOV W28, W31
	0x02D5DEC4 MOV W25, W31
	0x02D5DEC8 CBZ X20, 0x2D5E128
	0x02D5DECC LDR X8, [X20]
	0x02D5DED0 LDR X1, [X27]
	0x02D5DED4 LDRH W9, [X8 + 0x12E]
	0x02D5DED8 CBZ X9, 0x2D5DEFC
	0x02D5DEDC LDR X10, [X8 + 0xB0]
	0x02D5DEE0 ADD X10, X10, 0x8
	0x02D5DEE4 LDUR X11, [X10 - 0x8]
	0x02D5DEE8 CMP X11, X1
	0x02D5DEEC B.EQ 0x2D5DF0C
	0x02D5DEF0 SUBS X9, X9, 0x1
	0x02D5DEF4 ADD X10, X10, 0x10
	0x02D5DEF8 B.NE 0x2D5DEE4
	0x02D5DEFC MOV X0, X20
	0x02D5DF00 MOV W2, W31
	0x02D5DF04 BL 0x1C5C788
	0x02D5DF08 B 0x2D5DF18
	0x02D5DF0C LDRSW X9, [X10]
	0x02D5DF10 ADD X8, X8, X9, 0x4, LSL
	0x02D5DF14 ADD X0, X8, 0x138
	0x02D5DF18 LDP X8, X1, [X0]
	0x02D5DF1C MOV X0, X20
	0x02D5DF20 BLR X8
	0x02D5DF24 TBZ X0, 0x0, 0x2D5DFF4
	0x02D5DF28 LDR X8, [X19 + 0x20]
	0x02D5DF2C LDR X8, [X8 + 0xC0]
	0x02D5DF30 LDR X1, [X8 + 0xE8]
	0x02D5DF34 LDRB W8, [X1 + 0x135]
	0x02D5DF38 TBNZ X8, 0x0, 0x2D5DF48
	0x02D5DF3C MOV X0, X1
	0x02D5DF40 BL 0x1C5C684
	0x02D5DF44 MOV X1, X0
	0x02D5DF48 LDR X8, [X20]
	0x02D5DF4C LDRH W9, [X8 + 0x12E]
	0x02D5DF50 CBZ X9, 0x2D5DF74
	0x02D5DF54 LDR X10, [X8 + 0xB0]
	0x02D5DF58 ADD X10, X10, 0x8
	0x02D5DF5C LDUR X11, [X10 - 0x8]
	0x02D5DF60 CMP X11, X1
	0x02D5DF64 B.EQ 0x2D5DF84
	0x02D5DF68 SUBS X9, X9, 0x1
	0x02D5DF6C ADD X10, X10, 0x10
	0x02D5DF70 B.NE 0x2D5DF5C
	0x02D5DF74 MOV X0, X20
	0x02D5DF78 MOV W2, W31
	0x02D5DF7C BL 0x1C5C788
	0x02D5DF80 B 0x2D5DF90
	0x02D5DF84 LDRSW X9, [X10]
	0x02D5DF88 ADD X8, X8, X9, 0x4, LSL
	0x02D5DF8C ADD X0, X8, 0x138
	0x02D5DF90 LDP X8, X1, [X0]
	0x02D5DF94 MOV X0, X20
	0x02D5DF98 BLR X8
	0x02D5DF9C LDR X8, [X19 + 0x20]
	0x02D5DFA0 AND X1, X0, 0xFFFF
	0x02D5DFA4 LDR X8, [X8 + 0xC0]
	0x02D5DFA8 LDR X2, [X8 + 0x1D8]
	0x02D5DFAC MOV X0, X22
	0x02D5DFB0 BL 0x2D5D058
	0x02D5DFB4 MOV W24, W0
	0x02D5DFB8 TBNZ X0, 0x1F, 0x2D5DFEC
	0x02D5DFBC CBZ X23, 0x2D5E12C
	0x02D5DFC0 MOV X0, X23
	0x02D5DFC4 MOV W1, W24
	0x02D5DFC8 MOV X2, X31
	0x02D5DFCC BL 0x35E0788
	0x02D5DFD0 TBNZ X0, 0x0, 0x2D5DEC8
	0x02D5DFD4 MOV X0, X23
	0x02D5DFD8 MOV W1, W24
	0x02D5DFDC MOV X2, X31
	0x02D5DFE0 BL 0x35E070C
	0x02D5DFE4 ADD W28, W28, 0x1
	0x02D5DFE8 B 0x2D5DEC8
	0x02D5DFEC ADD W25, W25, 0x1
	0x02D5DFF0 TBZ X21, 0x0, 0x2D5DEC8
	0x02D5DFF4 MOV X21, X31
	0x02D5DFF8 CBZ X20, 0x2D5E05C
	0x02D5DFFC ADRP X10, 0x1396000
	0x02D5E000 LDR X8, [X20]
	0x02D5E004 B 0x3EB186C
	0x02D5E008 LDRH W9, [X8 + 0x12E]
	0x02D5E00C LDR X1, [X10]
	0x02D5E010 CBZ X9, 0x2D5E034
	0x02D5E014 LDR X10, [X8 + 0xB0]
	0x02D5E018 ADD X10, X10, 0x8
	0x02D5E01C LDUR X11, [X10 - 0x8]
	0x02D5E020 CMP X11, X1
	0x02D5E024 B.EQ 0x2D5E044
	0x02D5E028 SUBS X9, X9, 0x1
	0x02D5E02C ADD X10, X10, 0x10
	0x02D5E030 B.NE 0x2D5E01C
	0x02D5E034 MOV X0, X20
	0x02D5E038 MOV W2, W31
	0x02D5E03C BL 0x1C5C788
	0x02D5E040 B 0x2D5E050
	0x02D5E044 LDRSW X9, [X10]
	0x02D5E048 ADD X8, X8, X9, 0x4, LSL
	0x02D5E04C ADD X0, X8, 0x138
	0x02D5E050 LDP X8, X1, [X0]
	0x02D5E054 MOV X0, X20

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Add X29, X31, 0
	012 Subtract X31, X31, 16
	013 NotImplemented "Instruction MRS not yet implemented."
	014 Move X8, [X26+40]
	015 Move X21, 0x167F000
	016 Move X19, X2
	017 Move X23, X1
	018 Move [X29-8], X8
	019 Move W8, [X21+2239]
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {39}
	025 Move X0, 0x13C2000
	026 Move X0, [X0+3880]
	027 Call 0x1C17CF4
	028 Move X0, 0x1397000
	029 Move X0, [X0+3584]
	030 Call 0x1C17CF4
	031 Move X0, 0x1397000
	032 Move X0, [X0+3608]
	033 Call 0x1C17CF4
	034 Move X0, 0x1398000
	035 Move X0, [X0+3672]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+2239], W8
	039 Move W21, [X20+36]
	040 Move X1, X31
	041 Move W0, W21
	042 Call BitHelper.ToIntArrayLength, X0
	043 Move W24, W0
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X8, 0x1398000
	046 Move X8, [X8+3672]
	047 Move W1, W24
	048 Move X0, [X8]
	049 Call 0x1C17D6C
	050 Move X8, 0x13C2000
	051 Move X8, [X8+3880]
	052 Move X25, X0
	053 Move X8, [X8]
	054 Move X0, X8
	055 Call 0x1C17F10
	056 Move X1, X25
	057 Move W2, W24
	058 Move X3, X31
	059 Move X22, X0
	060 Call BitHelper..ctor, X0, X1, X2
	061 NotImplemented "Instruction SBFM not yet implemented."
	062 Compare W24, 0
	063 JumpIfEqual {69}
	064 Add X9, X2, 15
	065 Add X8, X31, 0
	066 And X9, X9, 0xFFFFFFFF
	067 Subtract X25, X8, X9
	068 Add X31, X25, 0
	069 Move X25, X31
	070 Move X0, X25
	071 Move W1, W31
	072 Call 0x3EB2B10
	073 Move X8, 0x13C2000
	074 Move X8, [X8+3880]
	075 Move X0, [X8]
	076 Call 0x1C17F10
	077 Move X1, X25
	078 Move W2, W24
	079 Move X3, X31
	080 Move X22, X0
	081 Call BitHelper..ctor, X0, X1, X2
	082 Compare X23, 0
	083 JumpIfEqual {273}
	084 Move X8, [X19+32]
	085 Move X8, [X8+192]
	086 Move X1, [X8+56]
	087 Move W8, [X1+309]
	088 Move TEMP, X8
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {95}
	092 Move X0, X1
	093 Call 0x1C5D684
	094 Move X1, X0
	095 Move X8, [X23]
	096 NotImplemented "Instruction LDRH not yet implemented."
	097 Compare X9, 0
	098 JumpIfEqual {105}
	099 Move X10, [X8+176]
	100 Add X10, X10, 8
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Subtract X9, X9, 1
	104 Add X10, X10, 16
	105 Move X0, X23
	106 Move W2, W31
	107 Call 0x1C5D788
	108 NotImplemented "Instruction LDRSW not yet implemented."
	109 Add X8, X8, X9
	110 Add X0, X8, 312
	111 Move X8, [X0]
	112 Move X1, [X0+8]
	113 Move X25, 0x1397000
	114 Move X25, [X25+3584]
	115 Move X0, X23
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move X23, X0
	118 Compare X0, 0
	119 JumpIfEqual {276}
	120 Move X24, 0x1397000
	121 Move X24, [X24+3608]
	122 Move X8, [X23]
	123 Move X1, [X24]
	124 NotImplemented "Instruction LDRH not yet implemented."
	125 Compare X9, 0
	126 JumpIfEqual {133}
	127 Move X10, [X8+176]
	128 Add X10, X10, 8
	129 NotImplemented "Instruction LDUR not yet implemented."
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Subtract X9, X9, 1
	132 Add X10, X10, 16
	133 Move X0, X23
	134 Move W2, W31
	135 Call 0x1C5D788
	136 NotImplemented "Instruction LDRSW not yet implemented."
	137 Add X8, X8, X9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X1, [X0+8]
	141 Move X0, X23
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {194}
	147 Move X8, [X19+32]
	148 Move X8, [X8+192]
	149 Move X1, [X8+232]
	150 Move W8, [X1+309]
	151 Move TEMP, X8
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfEqual {158}
	155 Move X0, X1
	156 Call 0x1C5D684
	157 Move X1, X0
	158 Move X8, [X23]
	159 NotImplemented "Instruction LDRH not yet implemented."
	160 Compare X9, 0
	161 JumpIfEqual {168}
	162 Move X10, [X8+176]
	163 Add X10, X10, 8
	164 NotImplemented "Instruction LDUR not yet implemented."
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Subtract X9, X9, 1
	167 Add X10, X10, 16
	168 Move X0, X23
	169 Move W2, W31
	170 Call 0x1C5D788
	171 NotImplemented "Instruction LDRSW not yet implemented."
	172 Add X8, X8, X9
	173 Add X0, X8, 312
	174 Move X8, [X0]
	175 Move X1, [X0+8]
	176 Move X0, X23
	177 NotImplemented "Instruction BLR not yet implemented."
	178 Move X8, [X19+32]
	179 And X1, X0, 0xFFFF
	180 Move X8, [X8+192]
	181 Move X2, [X8+472]
	182 Move X0, X20
	183 Call 0x2D5E058, X0, X1
	184 Move W1, W0
	185 Move TEMP, X1
	186 And TEMP, TEMP, -2147483648
	187 Compare TEMP, -2147483648
	188 JumpIfEqual {122}
	189 Compare X22, 0
	190 JumpIfEqual {275}
	191 Move X0, X22
	192 Move X2, X31
	193 Call BitHelper.MarkBit, X0, X1
	194 Move X24, X31
	195 Compare X23, 0
	196 JumpIfEqual {218}
	197 Move X8, [X23]
	198 Move X1, [X25]
	199 NotImplemented "Instruction LDRH not yet implemented."
	200 Compare X9, 0
	201 JumpIfEqual {208}
	202 Move X10, [X8+176]
	203 Add X10, X10, 8
	204 NotImplemented "Instruction LDUR not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Subtract X9, X9, 1
	207 Add X10, X10, 16
	208 Move X0, X23
	209 Move W2, W31
	210 Call 0x1C5D788
	211 NotImplemented "Instruction LDRSW not yet implemented."
	212 Add X8, X8, X9
	213 Add X0, X8, 312
	214 Move X8, [X0]
	215 Move X1, [X0+8]
	216 Move X0, X23
	217 NotImplemented "Instruction BLR not yet implemented."
	218 Compare X24, 0
	219 JumpIfNotEqual {277}
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move X23, X31
	222 Move W24, 32
	223 Move X8, [X20+24]
	224 Compare X8, 0
	225 JumpIfEqual {273}
	226 Move W9, [X8+24]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move W8, [X8]
	229 Move TEMP, X8
	230 And TEMP, TEMP, -2147483648
	231 Compare TEMP, -2147483648
	232 JumpIfEqual {255}
	233 Compare X22, 0
	234 JumpIfEqual {273}
	235 Move X0, X22
	236 Move W1, W23
	237 Move X2, X31
	238 Call BitHelper.IsMarked, X0, X1
	239 Move TEMP, X0
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfEqual {255}
	243 Move X8, [X20+24]
	244 Compare X8, 0
	245 JumpIfEqual {273}
	246 Move W9, [X8+24]
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Move X9, [X19+32]
	249 Add X8, X8, X24
	250 NotImplemented "Instruction LDRH not yet implemented."
	251 Move X0, X20
	252 Move X9, [X9+192]
	253 Move X2, [X9+328]
	254 Call 0x2D5AC8C, X0, X1
	255 Add X23, X23, 1
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Add X24, X24, 12
	258 Move X8, [X26+40]
	259 NotImplemented "Instruction LDUR not yet implemented."
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Add X31, X29, 0
	262 Move X20, [X31+64]
	263 Move X19, [X31+72]
	264 Move X22, [X31+48]
	265 Move X21, [X31+56]
	266 Move X24, [X31+32]
	267 Move X23, [X31+40]
	268 Move X26, [X31+16]
	269 Move X25, [X31+24]
	270 Move X29, [X31+80]
	271 Move X30, [X31+88]
	272 Return 
	273 Call 0x1C17F20
	274 Call 0x1C17F28
	275 Call 0x1C17F20
	276 Call 0x1C17F20
	277 Move X0, X24
	278 Call 0x1C17F18
	279 Call 0x3EB2B20
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Call 0x3EB2AD0
	282 Move X24, [X0]
	283 Call 0x3EB2AE0
	284 Move X19, X0
	285 Move X24, X31
	286 Move X19, X0
	287 Compare X23, 0
	288 JumpIfEqual {310}
	289 Move X8, [X23]
	290 Move X1, [X25]
	291 NotImplemented "Instruction LDRH not yet implemented."
	292 Compare X9, 0
	293 JumpIfEqual {300}
	294 Move X10, [X8+176]
	295 Add X10, X10, 8
	296 NotImplemented "Instruction LDUR not yet implemented."
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Subtract X9, X9, 1
	299 Add X10, X10, 16
	300 Move X0, X23
	301 Move W2, W31
	302 Call 0x1C5D788
	303 NotImplemented "Instruction LDRSW not yet implemented."
	304 Add X8, X8, X9
	305 Add X0, X8, 312
	306 Move X8, [X0]
	307 Move X1, [X0+8]
	308 Move X0, X23
	309 NotImplemented "Instruction BLR not yet implemented."
	310 Compare X24, 0
	311 JumpIfNotEqual {314}
	312 Move X0, X19
	313 Call 0x1D2D690
	314 Move X0, X24
	315 Call 0x1C17F18
	316 Call 0x1991590

Method: System.Int32 InternalIndexOf(T item)

Disassembly:
	0x02D5E058 BLR X8
	0x02D5E05C CBZ X21, 0x2D5E0F0
	0x02D5E060 B 0x2D5E134
	0x02D5E064 LDRSW X9, [X10]
	0x02D5E068 ADD X8, X8, X9, 0x4, LSL
	0x02D5E06C ADD X0, X8, 0x138
	0x02D5E070 LDP X8, X1, [X0]
	0x02D5E074 MOV X0, X20
	0x02D5E078 BLR X8
	0x02D5E07C MOV X21, X31
	0x02D5E080 MOVZ W25, 0x1
	0x02D5E084 CBZ X20, 0x2D5E0E8
	0x02D5E088 ADRP X10, 0x1395000
	0x02D5E08C LDR X8, [X20]
	0x02D5E090 LDR X10, [X10 + 0xE00]
	0x02D5E094 LDRH W9, [X8 + 0x12E]
	0x02D5E098 LDR X1, [X10]
	0x02D5E09C CBZ X9, 0x2D5E0C0
	0x02D5E0A0 LDR X10, [X8 + 0xB0]
	0x02D5E0A4 ADD X10, X10, 0x8
	0x02D5E0A8 LDUR X11, [X10 - 0x8]
	0x02D5E0AC CMP X11, X1
	0x02D5E0B0 B.EQ 0x2D5E0D0
	0x02D5E0B4 SUBS X9, X9, 0x1
	0x02D5E0B8 ADD X10, X10, 0x10
	0x02D5E0BC B.NE 0x2D5E0A8
	0x02D5E0C0 MOV X0, X20
	0x02D5E0C4 MOV W2, W31
	0x02D5E0C8 BL 0x1C5C788
	0x02D5E0CC B 0x2D5E0DC
	0x02D5E0D0 LDRSW X9, [X10]
	0x02D5E0D4 ADD X8, X8, X9, 0x4, LSL
	0x02D5E0D8 ADD X0, X8, 0x138
	0x02D5E0DC LDP X8, X1, [X0]
	0x02D5E0E0 MOV X0, X20
	0x02D5E0E4 BLR X8
	0x02D5E0E8 CBNZ X21, 0x2D5E134
	0x02D5E0EC MOV W28, W31
	0x02D5E0F0 LDR X8, [X26 + 0x28]
	0x02D5E0F4 LDUR X9, [X29 - 0x8]
	0x02D5E0F8 CMP X8, X9
	0x02D5E0FC B.NE 0x2D5E140
	0x02D5E100 MOV W0, W28
	0x02D5E104 BFM X0, X25, 0x20, 0x1F
	0x02D5E108 ADD X31, X29, 0x0
	0x02D5E10C LDP X20, X19, [X31 + 0x50]
	0x02D5E110 LDP X22, X21, [X31 + 0x40]
	0x02D5E114 LDP X24, X23, [X31 + 0x30]
	0x02D5E118 LDP X26, X25, [X31 + 0x20]
	0x02D5E11C LDP X28, X27, [X31 + 0x10]
	0x02D5E120 LDP X29, X30, [X31], #0x60
	0x02D5E124 RET
	0x02D5E128 BL 0x1C16F20
	0x02D5E12C BL 0x1C16F20
	0x02D5E130 BL 0x1C16F20
	0x02D5E134 MOV X0, X21
	0x02D5E138 BL 0x1C16F18
	0x02D5E13C BL 0x1C16F20
	0x02D5E140 BL 0x3EB1B20
	0x02D5E144 B 0x2D5E150
	0x02D5E148 B 0x2D5E150
	0x02D5E14C B 0x2D5E214
	0x02D5E150 MOV X19, X0
	0x02D5E154 CMP W1, 0x1
	0x02D5E158 B.NE 0x2D5E170
	0x02D5E15C MOV X0, X19
	0x02D5E160 BL 0x3EB1AD0
	0x02D5E164 LDR X21, [X0]
	0x02D5E168 BL 0x3EB1AE0
	0x02D5E16C B 0x2D5DE04
	0x02D5E170 MOV X21, X31
	0x02D5E174 B 0x2D5E17C
	0x02D5E178 MOV X19, X0
	0x02D5E17C CBZ X20, 0x2D5E1E0
	0x02D5E180 ADRP X10, 0x1395000
	0x02D5E184 LDR X8, [X20]
	0x02D5E188 LDR X10, [X10 + 0xE00]
	0x02D5E18C LDRH W9, [X8 + 0x12E]
	0x02D5E190 LDR X1, [X10]
	0x02D5E194 CBZ X9, 0x2D5E1B8
	0x02D5E198 LDR X10, [X8 + 0xB0]
	0x02D5E19C ADD X10, X10, 0x8
	0x02D5E1A0 LDUR X11, [X10 - 0x8]
	0x02D5E1A4 CMP X11, X1
	0x02D5E1A8 B.EQ 0x2D5E1C8
	0x02D5E1AC SUBS X9, X9, 0x1
	0x02D5E1B0 ADD X10, X10, 0x10
	0x02D5E1B4 B.NE 0x2D5E1A0
	0x02D5E1B8 MOV X0, X20
	0x02D5E1BC MOV W2, W31
	0x02D5E1C0 BL 0x1C5C788
	0x02D5E1C4 B 0x2D5E1D4
	0x02D5E1C8 LDRSW X9, [X10]
	0x02D5E1CC ADD X8, X8, X9, 0x4, LSL
	0x02D5E1D0 ADD X0, X8, 0x138
	0x02D5E1D4 LDP X8, X1, [X0]
	0x02D5E1D8 MOV X0, X20
	0x02D5E1DC BLR X8
	0x02D5E1E0 CBZ X21, 0x2D5E2A8
	0x02D5E1E4 MOV X0, X21
	0x02D5E1E8 BL 0x1C16F18
	0x02D5E1EC B 0x2D5E214
	0x02D5E1F0 MOV X19, X0
	0x02D5E1F4 MOV W28, W31
	0x02D5E1F8 B 0x2D5E218
	0x02D5E1FC B 0x2D5E214
	0x02D5E200 MOV X19, X0
	0x02D5E204 MOV W28, W31
	0x02D5E208 MOV W25, W31
	0x02D5E20C B 0x2D5E218

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X8, [X2+32]
	014 Move X19, X2
	015 And X21, X1, 0xFFFF
	016 Move X1, X21
	017 Move X8, [X8+192]
	018 Move X20, X0
	019 Move X2, [X8+176]
	020 Call 0x2D5F320, X0, X1
	021 Move X8, [X20+16]
	022 Compare X8, 0
	023 JumpIfEqual {129}
	024 Move W10, [X8+24]
	025 Move W22, W0
	026 NotImplemented "Instruction SDIV not yet implemented."
	027 NotImplemented "Instruction MSUB not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Add X8, X8, W9
	030 Move W8, [X8+32]
	031 Subtract W23, W8, 1
	032 Move X26, [X20+24]
	033 Compare X26, 0
	034 JumpIfEqual {129}
	035 Move X8, [X26+24]
	036 Move W27, W31
	037 Move W28, 12
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction UMADDL not yet implemented."
	040 Move W9, [X9+32]
	041 Move W29, W23
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X24, [X20+48]
	044 Compare X24, 0
	045 JumpIfEqual {129}
	046 Move X8, [X19+32]
	047 Move X8, [X8+192]
	048 Move X1, [X8+32]
	049 NotImplemented "Instruction NOP not yet implemented."
	050 NotImplemented "Instruction MADD not yet implemented."
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move W9, [X1+309]
	053 Move TEMP, X9
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {60}
	057 Move X0, X1
	058 Call 0x1C5D684
	059 Move X1, X0
	060 Move X8, [X24]
	061 NotImplemented "Instruction LDRH not yet implemented."
	062 Compare X9, 0
	063 JumpIfEqual {70}
	064 Move X10, [X8+176]
	065 Add X10, X10, 8
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Subtract X9, X9, 1
	069 Add X10, X10, 16
	070 Move X0, X24
	071 Move W2, W31
	072 Call 0x1C5D788
	073 NotImplemented "Instruction LDRSW not yet implemented."
	074 Add X8, X8, X9
	075 Add X0, X8, 312
	076 Move X8, [X0]
	077 Move X3, [X0+8]
	078 Move X0, X24
	079 Move X1, X25
	080 Move X2, X21
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {99}
	086 Move X8, [X26+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction MADD not yet implemented."
	090 Move W23, [X9+36]
	091 Add W27, W27, 1
	092 Move TEMP, X23
	093 And TEMP, TEMP, -2147483648
	094 Compare TEMP, -2147483648
	095 JumpIfNotEqual {38}
	096 Move TEMP, 0
	097 Not TEMP
	098 Move W23, TEMP
	099 Move W0, W23
	100 Move X20, [X31+80]
	101 Move X19, [X31+88]
	102 Move X22, [X31+64]
	103 Move X21, [X31+72]
	104 Move X24, [X31+48]
	105 Move X23, [X31+56]
	106 Move X26, [X31+32]
	107 Move X25, [X31+40]
	108 Move X28, [X31+16]
	109 Move X27, [X31+24]
	110 Move X29, [X31+96]
	111 Move X30, [X31+104]
	112 Return X0
	113 Call 0x1C17F28
	114 Move X0, 0x1396000
	115 Move X0, [X0+1456]
	116 Call 0x1C17D08
	117 Call 0x1C17F10
	118 Move X20, X0
	119 Move X0, 0x13C1000
	120 Move X0, [X0+3840]
	121 Call 0x1C17D08
	122 Move X1, X0
	123 Move X0, X20
	124 Move X2, X31
	125 Call InvalidOperationException..ctor, X0, X1
	126 Move X0, X20
	127 Move X1, X19
	128 Call 0x1C17DEC
	129 Call 0x1C17F20

Method: System.Void SymmetricExceptWithUniqueHashSet(System.Collections.Generic.HashSet`1<T> other)

Disassembly:
	0x02D5E210 B 0x2D5E214
	0x02D5E214 MOV X19, X0
	0x02D5E218 CMP W1, 0x1
	0x02D5E21C B.NE 0x2D5E234
	0x02D5E220 MOV X0, X19
	0x02D5E224 BL 0x3EB1AD0
	0x02D5E228 LDR X21, [X0]
	0x02D5E22C BL 0x3EB1AE0
	0x02D5E230 B 0x2D5DFF8
	0x02D5E234 MOV X21, X31
	0x02D5E238 B 0x2D5E240
	0x02D5E23C MOV X19, X0
	0x02D5E240 CBZ X20, 0x2D5E2A4
	0x02D5E244 ADRP X10, 0x1395000
	0x02D5E248 LDR X8, [X20]
	0x02D5E24C LDR X10, [X10 + 0xE00]
	0x02D5E250 LDRH W9, [X8 + 0x12E]
	0x02D5E254 LDR X1, [X10]
	0x02D5E258 CBZ X9, 0x2D5E27C
	0x02D5E25C LDR X10, [X8 + 0xB0]
	0x02D5E260 ADD X10, X10, 0x8
	0x02D5E264 LDUR X11, [X10 - 0x8]
	0x02D5E268 CMP X11, X1
	0x02D5E26C B.EQ 0x2D5E28C
	0x02D5E270 SUBS X9, X9, 0x1
	0x02D5E274 ADD X10, X10, 0x10
	0x02D5E278 B.NE 0x2D5E264
	0x02D5E27C MOV X0, X20
	0x02D5E280 MOV W2, W31
	0x02D5E284 BL 0x1C5C788
	0x02D5E288 B 0x2D5E298
	0x02D5E28C LDRSW X9, [X10]
	0x02D5E290 ADD X8, X8, X9, 0x4, LSL
	0x02D5E294 ADD X0, X8, 0x138
	0x02D5E298 LDP X8, X1, [X0]
	0x02D5E29C MOV X0, X20
	0x02D5E2A0 BLR X8
	0x02D5E2A4 CBNZ X21, 0x2D5E2B0
	0x02D5E2A8 MOV X0, X19
	0x02D5E2AC BL 0x1D2C690
	0x02D5E2B0 MOV X0, X21
	0x02D5E2B4 BL 0x1C16F18
	0x02D5E2B8 BL 0x1990590
	0x02D5E2BC STP X30, X21, [X31 - 0x20]!
	0x02D5E2C0 STP X20, X19, [X31 + 0x10]
	0x02D5E2C4 CBZ X0, 0x2D5E31C
	0x02D5E2C8 MOV X21, X0
	0x02D5E2CC LDR X0, [X2 + 0x20]
	0x02D5E2D0 MOV X20, X2
	0x02D5E2D4 MOV X19, X1
	0x02D5E2D8 LDRB W8, [X0 + 0x135]
	0x02D5E2DC TBNZ X8, 0x0, 0x2D5E2E4
	0x02D5E2E0 BL 0x1C5C684
	0x02D5E2E4 CBZ X19, 0x2D5E31C
	0x02D5E2E8 LDR X0, [X20 + 0x20]
	0x02D5E2EC LDR X20, [X21 + 0x30]
	0x02D5E2F0 LDRB W8, [X0 + 0x135]
	0x02D5E2F4 TBNZ X8, 0x0, 0x2D5E2FC
	0x02D5E2F8 BL 0x1C5C684
	0x02D5E2FC CBZ X20, 0x2D5E31C
	0x02D5E300 LDR X8, [X20]
	0x02D5E304 LDR X1, [X19 + 0x30]
	0x02D5E308 MOV X0, X20
	0x02D5E30C LDP X20, X19, [X31 + 0x10]
	0x02D5E310 LDP X3, X2, [X8 + 0x138]
	0x02D5E314 LDP X30, X21, [X31], #0x20
	0x02D5E318 BR X3
	0x02D5E31C BL 0x1C16F20
	0x02D5E320 STR X30, [X31 - 0x20]!
	0x02D5E324 STP X20, X19, [X31 + 0x10]
	0x02D5E328 LDR X19, [X0 + 0x30]
	0x02D5E32C CBZ X19, 0x2D5E3C0
	0x02D5E330 LDR X8, [X2 + 0x20]
	0x02D5E334 MOV X20, X1
	0x02D5E338 LDR X8, [X8 + 0xC0]
	0x02D5E33C LDR X1, [X8 + 0x20]
	0x02D5E340 LDRB W8, [X1 + 0x135]
	0x02D5E344 TBNZ X8, 0x0, 0x2D5E354
	0x02D5E348 MOV X0, X1
	0x02D5E34C BL 0x1C5C684
	0x02D5E350 MOV X1, X0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move [X31+32], X31
	007 Move [X31+40], X31
	008 Move [X31+48], X31
	009 Compare X1, 0
	010 JumpIfEqual {68}
	011 Move X8, [X2+32]
	012 Move X19, X2
	013 Move X20, X0
	014 Add X0, X31, 8
	015 Move X8, [X8+192]
	016 Move X8, [X8+432]
	017 Move [X31+8], X31
	018 Move [X31+16], X31
	019 Move [X31+24], X31
	020 Move X8, [X8+32]
	021 Move X8, [X8+192]
	022 Move X2, [X8+224]
	023 Call 0x2BB3F18, X0, X1
	024 NotImplemented "Instruction LDUR not yet implemented."
	025 Move X8, [X31+24]
	026 Move [X31+2], V0
	027 Move [X31+48], X8
	028 Move X8, [X19+32]
	029 Move X8, [X8+192]
	030 Move X1, [X8+456]
	031 Add X0, X31, 32
	032 Call 0x2BB3F44, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {54}
	037 Move X8, [X19+32]
	038 NotImplemented "Instruction LDRH not yet implemented."
	039 Move X8, [X8+192]
	040 Move X2, [X8+328]
	041 Move X0, X20
	042 Move X1, X21
	043 Call 0x2D5AC8C, X0, X1
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {28}
	048 Move X8, [X19+32]
	049 Move X8, [X8+192]
	050 Move X2, [X8+168]
	051 Move X0, X20
	052 Move X1, X21
	053 Call 0x2D5D318, X0, X1
	054 Move X20, X31
	055 Move X8, [X19+32]
	056 Add X0, X31, 32
	057 Move X8, [X8+192]
	058 Move X1, [X8+464]
	059 Call 0x2BB3F40, X0
	060 Compare X20, 0
	061 JumpIfNotEqual {69}
	062 Move X20, [X31+80]
	063 Move X19, [X31+88]
	064 Move X30, [X31+64]
	065 Move X21, [X31+72]
	066 Add X31, X31, 96
	067 Return 
	068 Call 0x1C17F20
	069 Move X0, X20
	070 Call 0x1C17F18
	071 Move X21, X0
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X0, X21
	074 Call 0x3EB2AD0
	075 Move X20, [X0]
	076 Call 0x3EB2AE0
	077 Move X20, X31
	078 Move X21, X0
	079 Move X8, [X19+32]
	080 Move X8, [X8+192]
	081 Move X1, [X8+464]
	082 Add X0, X31, 32
	083 Call 0x2BB3F40, X0
	084 Compare X20, 0
	085 JumpIfNotEqual {88}
	086 Move X0, X21
	087 Call 0x1D2D690
	088 Move X0, X20
	089 Call 0x1C17F18
	090 Call 0x1991590

Method: System.Void SymmetricExceptWithEnumerable(System.Collections.Generic.IEnumerable`1<T> other)

Disassembly:
	0x02D5E354 LDR X8, [X19]
	0x02D5E358 LDRH W9, [X8 + 0x12E]
	0x02D5E35C CBZ X9, 0x2D5E380
	0x02D5E360 LDR X10, [X8 + 0xB0]
	0x02D5E364 ADD X10, X10, 0x8
	0x02D5E368 LDUR X11, [X10 - 0x8]
	0x02D5E36C CMP X11, X1
	0x02D5E370 B.EQ 0x2D5E390
	0x02D5E374 SUBS X9, X9, 0x1
	0x02D5E378 ADD X10, X10, 0x10
	0x02D5E37C B.NE 0x2D5E368
	0x02D5E380 MOVZ W2, 0x1
	0x02D5E384 MOV X0, X19
	0x02D5E388 BL 0x1C5C788
	0x02D5E38C B 0x2D5E3A0
	0x02D5E390 LDR W9, [X10]
	0x02D5E394 ADD W9, W9, 0x1
	0x02D5E398 ADD X8, X8, W9, 0x4, SXTW
	0x02D5E39C ADD X0, X8, 0x138
	0x02D5E3A0 LDP X8, X2, [X0]
	0x02D5E3A4 AND X1, X20, 0xFFFF
	0x02D5E3A8 MOV X0, X19
	0x02D5E3AC BLR X8
	0x02D5E3B0 LDP X20, X19, [X31 + 0x10]
	0x02D5E3B4 AND W0, W0, 0x7FFFFFFF
	0x02D5E3B8 LDR X30, [X31], #0x20
	0x02D5E3BC RET
	0x02D5E3C0 BL 0x1C16F20
	0x02D5E3C4 STR X30, [X31 - 0x20]!
	0x02D5E3C8 STP X20, X19, [X31 + 0x10]
	0x02D5E3CC LDR X8, [X1 + 0x20]
	0x02D5E3D0 MOV X20, X0
	0x02D5E3D4 MOV X19, X1
	0x02D5E3D8 LDR X8, [X8 + 0xC0]
	0x02D5E3DC LDR X8, [X8]
	0x02D5E3E0 MOV X0, X8
	0x02D5E3E4 BL 0x21189DC
	0x02D5E3E8 LDR X8, [X19 + 0x20]
	0x02D5E3EC MOV X1, X0
	0x02D5E3F0 MOV X0, X20
	0x02D5E3F4 LDP X20, X19, [X31 + 0x10]
	0x02D5E3F8 LDR X8, [X8 + 0xC0]
	0x02D5E3FC LDR X2, [X8 + 0x18]
	0x02D5E400 LDR X30, [X31], #0x20
	0x02D5E404 B 0x2D5E408
	0x02D5E408 STP X30, X21, [X31 - 0x20]!
	0x02D5E40C STP X20, X19, [X31 + 0x10]
	0x02D5E410 MOV X20, X1
	0x02D5E414 MOV X1, X31
	0x02D5E418 MOV X21, X2
	0x02D5E41C MOV X19, X0
	0x02D5E420 BL 0x33BDD8C
	0x02D5E424 CBNZ X20, 0x2D5E43C
	0x02D5E428 LDR X8, [X21 + 0x20]
	0x02D5E42C LDR X8, [X8 + 0xC0]
	0x02D5E430 LDR X0, [X8]
	0x02D5E434 BL 0x21189DC
	0x02D5E438 MOV X20, X0
	0x02D5E43C MOVN W8, 0x0
	0x02D5E440 STR X20, [X19 + 0x30]
	0x02D5E444 STR X31, [X19 + 0x20]
	0x02D5E448 STR W8, [X19 + 0x28]
	0x02D5E44C STR W31, [X19 + 0x38]
	0x02D5E450 LDP X20, X19, [X31 + 0x10]
	0x02D5E454 LDP X30, X21, [X31], #0x20
	0x02D5E458 RET
	0x02D5E45C STP X30, X21, [X31 - 0x20]!
	0x02D5E460 STP X20, X19, [X31 + 0x10]
	0x02D5E464 LDR X8, [X2 + 0x20]
	0x02D5E468 MOV X21, X0
	0x02D5E46C MOV X19, X2
	0x02D5E470 MOV W20, W1
	0x02D5E474 LDR X8, [X8 + 0xC0]
	0x02D5E478 LDR X8, [X8]
	0x02D5E47C MOV X0, X8
	0x02D5E480 BL 0x21189DC
	0x02D5E484 LDR X8, [X19 + 0x20]
	0x02D5E488 MOV W1, W20
	0x02D5E48C LDP X20, X19, [X31 + 0x10]
	0x02D5E490 MOV X2, X0
	0x02D5E494 LDR X8, [X8 + 0xC0]
	0x02D5E498 MOV X0, X21
	0x02D5E49C LDR X3, [X8 + 0x30]
	0x02D5E4A0 LDP X30, X21, [X31], #0x20
	0x02D5E4A4 B 0x2D5E960
	0x02D5E4A8 STP X30, X21, [X31 - 0x20]!
	0x02D5E4AC STP X20, X19, [X31 + 0x10]
	0x02D5E4B0 LDR X8, [X2 + 0x20]
	0x02D5E4B4 MOV X21, X0
	0x02D5E4B8 MOV X19, X2
	0x02D5E4BC MOV X20, X1
	0x02D5E4C0 LDR X8, [X8 + 0xC0]
	0x02D5E4C4 LDR X8, [X8]
	0x02D5E4C8 MOV X0, X8
	0x02D5E4CC BL 0x21189DC
	0x02D5E4D0 LDR X8, [X19 + 0x20]
	0x02D5E4D4 MOV X1, X20
	0x02D5E4D8 LDP X20, X19, [X31 + 0x10]
	0x02D5E4DC MOV X2, X0
	0x02D5E4E0 LDR X8, [X8 + 0xC0]
	0x02D5E4E4 MOV X0, X21
	0x02D5E4E8 LDR X3, [X8 + 0x40]
	0x02D5E4EC LDP X30, X21, [X31], #0x20
	0x02D5E4F0 B 0x2D5E4F4
	0x02D5E4F4 STR X30, [X31 - 0x30]!
	0x02D5E4F8 STP X22, X21, [X31 + 0x10]
	0x02D5E4FC STP X20, X19, [X31 + 0x20]
	0x02D5E500 LDR X9, [X3 + 0x20]
	0x02D5E504 MOV X8, X2
	0x02D5E508 MOV X21, X1
	0x02D5E50C MOV X1, X8
	0x02D5E510 LDR X9, [X9 + 0xC0]
	0x02D5E514 MOV X19, X3
	0x02D5E518 MOV X20, X0
	0x02D5E51C LDR X2, [X9 + 0x18]
	0x02D5E520 BL 0x2D5E408
	0x02D5E524 CBZ X21, 0x2D5E6D8
	0x02D5E528 LDR X8, [X19 + 0x20]
	0x02D5E52C LDR X8, [X8 + 0xC0]
	0x02D5E530 LDR X0, [X8 + 0x28]
	0x02D5E534 LDRB W8, [X0 + 0x135]
	0x02D5E538 TBNZ X8, 0x0, 0x2D5E540
	0x02D5E53C BL 0x1C5C684
	0x02D5E540 LDR X8, [X21]
	0x02D5E544 LDRB W9, [X0 + 0x130]
	0x02D5E548 LDRB W10, [X8 + 0x130]
	0x02D5E54C CMP W10, W9
	0x02D5E550 B.CC 0x2D5E5A8
	0x02D5E554 LDR X8, [X8 + 0xC8]
	0x02D5E558 ADD X8, X8, X9, 0x3, LSL
	0x02D5E55C LDUR X8, [X8 - 0x8]
	0x02D5E560 CMP X8, X0
	0x02D5E564 B.NE 0x2D5E5A8
	0x02D5E568 LDR X8, [X19 + 0x20]
	0x02D5E56C MOV X0, X20
	0x02D5E570 MOV X1, X21
	0x02D5E574 LDR X8, [X8 + 0xC0]
	0x02D5E578 LDR X2, [X8 + 0x48]
	0x02D5E57C BL 0x2D63264
	0x02D5E580 TBZ X0, 0x0, 0x2D5E5A8
	0x02D5E584 LDR X8, [X19 + 0x20]
	0x02D5E588 MOV X0, X20
	0x02D5E58C MOV X1, X21
	0x02D5E590 LDP X20, X19, [X31 + 0x20]
	0x02D5E594 LDR X8, [X8 + 0xC0]
	0x02D5E598 LDP X22, X21, [X31 + 0x10]
	0x02D5E59C LDR X2, [X8 + 0x58]
	0x02D5E5A0 LDR X30, [X31], #0x30
	0x02D5E5A4 B 0x2D5E740
	0x02D5E5A8 LDR X8, [X19 + 0x20]
	0x02D5E5AC LDR X8, [X8 + 0xC0]
	0x02D5E5B0 LDR X1, [X8 + 0x60]
	0x02D5E5B4 LDRB W8, [X1 + 0x135]
	0x02D5E5B8 TBNZ X8, 0x0, 0x2D5E5C8
	0x02D5E5BC MOV X0, X1
	0x02D5E5C0 BL 0x1C5C684
	0x02D5E5C4 MOV X1, X0
	0x02D5E5C8 MOV X0, X21
	0x02D5E5CC BL 0x1C16E00
	0x02D5E5D0 CBZ X0, 0x2D5E634
	0x02D5E5D4 LDR X8, [X19 + 0x20]
	0x02D5E5D8 MOV X22, X0
	0x02D5E5DC LDR X8, [X8 + 0xC0]
	0x02D5E5E0 LDR X1, [X8 + 0x60]
	0x02D5E5E4 LDRB W8, [X1 + 0x135]
	0x02D5E5E8 TBNZ X8, 0x0, 0x2D5E5F8
	0x02D5E5EC MOV X0, X1
	0x02D5E5F0 BL 0x1C5C684
	0x02D5E5F4 MOV X1, X0
	0x02D5E5F8 LDR X8, [X22]
	0x02D5E5FC LDRH W9, [X8 + 0x12E]
	0x02D5E600 CBZ X9, 0x2D5E624
	0x02D5E604 LDR X10, [X8 + 0xB0]
	0x02D5E608 ADD X10, X10, 0x8
	0x02D5E60C LDUR X11, [X10 - 0x8]
	0x02D5E610 CMP X11, X1
	0x02D5E614 B.EQ 0x2D5E63C
	0x02D5E618 SUBS X9, X9, 0x1
	0x02D5E61C ADD X10, X10, 0x10
	0x02D5E620 B.NE 0x2D5E60C
	0x02D5E624 MOV X0, X22
	0x02D5E628 MOV W2, W31
	0x02D5E62C BL 0x1C5C788
	0x02D5E630 B 0x2D5E648
	0x02D5E634 MOV W1, W31
	0x02D5E638 B 0x2D5E658
	0x02D5E63C LDRSW X9, [X10]
	0x02D5E640 ADD X8, X8, X9, 0x4, LSL
	0x02D5E644 ADD X0, X8, 0x138
	0x02D5E648 LDP X8, X1, [X0]
	0x02D5E64C MOV X0, X22
	0x02D5E650 BLR X8
	0x02D5E654 MOV W1, W0
	0x02D5E658 LDR X8, [X19 + 0x20]
	0x02D5E65C MOV X0, X20
	0x02D5E660 LDR X8, [X8 + 0xC0]
	0x02D5E664 LDR X2, [X8 + 0x70]
	0x02D5E668 BL 0x2D6103C
	0x02D5E66C LDR X8, [X19 + 0x20]
	0x02D5E670 MOV X0, X20
	0x02D5E674 MOV X1, X21
	0x02D5E678 LDR X8, [X8 + 0xC0]
	0x02D5E67C LDR X2, [X8 + 0x78]
	0x02D5E680 BL 0x2D5F538
	0x02D5E684 LDR W8, [X20 + 0x20]
	0x02D5E688 CMP W8, 0x1
	0x02D5E68C B.LT 0x2D5E6C8
	0x02D5E690 LDR X9, [X20 + 0x18]
	0x02D5E694 CBZ X9, 0x2D5E714
	0x02D5E698 LDR W9, [X9 + 0x18]
	0x02D5E69C SDIV W8, W9, W8
	0x02D5E6A0 CMP W8, 0x4
	0x02D5E6A4 B.LT 0x2D5E6C8
	0x02D5E6A8 LDR X8, [X19 + 0x20]
	0x02D5E6AC MOV X0, X20
	0x02D5E6B0 LDP X20, X19, [X31 + 0x20]
	0x02D5E6B4 LDP X22, X21, [X31 + 0x10]
	0x02D5E6B8 LDR X8, [X8 + 0xC0]
	0x02D5E6BC LDR X1, [X8 + 0x88]
	0x02D5E6C0 LDR X30, [X31], #0x30
	0x02D5E6C4 B 0x2D60E84
	0x02D5E6C8 LDP X20, X19, [X31 + 0x20]
	0x02D5E6CC LDP X22, X21, [X31 + 0x10]
	0x02D5E6D0 LDR X30, [X31], #0x30
	0x02D5E6D4 RET
	0x02D5E6D8 ADRP X0, 0x139A000
	0x02D5E6DC LDR X0, [X0 + 0x528]
	0x02D5E6E0 BL 0x1C16D08
	0x02D5E6E4 BL 0x1C16F10
	0x02D5E6E8 MOV X20, X0
	0x02D5E6EC ADRP X0, 0x13BD000
	0x02D5E6F0 LDR X0, [X0 + 0x8E8]
	0x02D5E6F4 BL 0x1C16D08
	0x02D5E6F8 MOV X1, X0
	0x02D5E6FC MOV X0, X20
	0x02D5E700 MOV X2, X31
	0x02D5E704 BL 0x330E100
	0x02D5E708 MOV X0, X20
	0x02D5E70C MOV X1, X19
	0x02D5E710 BL 0x1C16DEC
	0x02D5E714 BL 0x1C16F20
	0x02D5E718 STR X30, [X31 - 0x20]!
	0x02D5E71C STP X20, X19, [X31 + 0x10]
	0x02D5E720 MOV X19, X1
	0x02D5E724 MOV X1, X31
	0x02D5E728 MOV X20, X0
	0x02D5E72C BL 0x33BDD8C
	0x02D5E730 STR X19, [X20 + 0x40]
	0x02D5E734 LDP X20, X19, [X31 + 0x10]
	0x02D5E738 LDR X30, [X31], #0x20
	0x02D5E73C RET
	0x02D5E740 STP X30, X25, [X31 - 0x40]!
	0x02D5E744 STP X24, X23, [X31 + 0x10]
	0x02D5E748 STP X22, X21, [X31 + 0x20]
	0x02D5E74C STP X20, X19, [X31 + 0x30]
	0x02D5E750 ADRP X20, 0x167D000
	0x02D5E754 LDRB W8, [X20 + 0x8C2]
	0x02D5E758 MOV X22, X2
	0x02D5E75C MOV X21, X1
	0x02D5E760 MOV X19, X0
	0x02D5E764 TBNZ X8, 0x0, 0x2D5E788
	0x02D5E768 ADRP X0, 0x13C0000
	0x02D5E76C LDR X0, [X0 + 0x548]
	0x02D5E770 BL 0x1C16CF4
	0x02D5E774 ADRP X0, 0x1396000
	0x02D5E778 LDR X0, [X0 + 0xE58]
	0x02D5E77C BL 0x1C16CF4
	0x02D5E780 MOVZ W8, 0x1
	0x02D5E784 STRB W8, [X20 + 0x8C2]
	0x02D5E788 CBZ X21, 0x2D5E950
	0x02D5E78C LDR W20, [X21 + 0x20]
	0x02D5E790 CBZ W20, 0x2D5E938
	0x02D5E794 LDR X8, [X21 + 0x10]
	0x02D5E798 CBZ X8, 0x2D5E950
	0x02D5E79C ADRP X9, 0x13C0000
	0x02D5E7A0 LDR X9, [X9 + 0x548]
	0x02D5E7A4 LDR W23, [X8 + 0x18]
	0x02D5E7A8 LDR X0, [X9]
	0x02D5E7AC LDR W9, [X0 + 0xE0]
	0x02D5E7B0 CBNZ W9, 0x2D5E7B8
	0x02D5E7B4 BL 0x1C16DFC
	0x02D5E7B8 ADD W0, W20, 0x1
	0x02D5E7BC MOV X1, X31
	0x02D5E7C0 BL 0x33505B4
	0x02D5E7C4 CMP W0, W23
	0x02D5E7C8 B.GE 0x2D5E840
	0x02D5E7CC LDR X8, [X22 + 0x20]
	0x02D5E7D0 LDR W22, [X21 + 0x24]
	0x02D5E7D4 LDR X23, [X21 + 0x18]
	0x02D5E7D8 MOV X0, X19
	0x02D5E7DC LDR X8, [X8 + 0xC0]
	0x02D5E7E0 MOV W1, W20
	0x02D5E7E4 LDR X2, [X8 + 0x70]
	0x02D5E7E8 BL 0x2D6103C
	0x02D5E7EC CMP W22, 0x1
	0x02D5E7F0 B.LT 0x2D5E88C
	0x02D5E7F4 CBZ X23, 0x2D5E950
	0x02D5E7F8 MOV X24, X31
	0x02D5E7FC MOV W21, W31
	0x02D5E800 ADD X25, X23, 0x28
	0x02D5E804 LDR W8, [X23 + 0x18]
	0x02D5E808 CMP X24, X8
	0x02D5E80C B.CS 0x2D5E94C
	0x02D5E810 LDUR W2, [X25 - 0x8]
	0x02D5E814 TBNZ X2, 0x1F, 0x2D5E82C
	0x02D5E818 LDRB W3, [X25]
	0x02D5E81C MOV X0, X19
	0x02D5E820 MOV W1, W21
	0x02D5E824 BL 0x2D615D4
	0x02D5E828 ADD W21, W21, 0x1
	0x02D5E82C ADD X24, X24, 0x1
	0x02D5E830 CMP X22, X24
	0x02D5E834 ADD X25, X25, 0xC
	0x02D5E838 B.NE 0x2D5E804
	0x02D5E83C B 0x2D5E890
	0x02D5E840 LDR X0, [X21 + 0x10]
	0x02D5E844 CBZ X0, 0x2D5E950
	0x02D5E848 MOV X1, X31
	0x02D5E84C BL 0x33A01F0
	0x02D5E850 CBZ X0, 0x2D5E898
	0x02D5E854 ADRP X25, 0x1396000
	0x02D5E858 LDR X25, [X25 + 0xE58]
	0x02D5E85C MOV X23, X0
	0x02D5E860 LDR X24, [X25]
	0x02D5E864 MOV X1, X24
	0x02D5E868 BL 0x1C16E00
	0x02D5E86C CBZ X0, 0x2D5E8E4
	0x02D5E870 STR X0, [X19 + 0x10]
	0x02D5E874 LDR X24, [X25]
	0x02D5E878 MOV X0, X23
	0x02D5E87C MOV X1, X24
	0x02D5E880 BL 0x1C16E00
	0x02D5E884 CBNZ X0, 0x2D5E89C
	0x02D5E888 B 0x2D5E8E4
	0x02D5E88C MOV W21, W31
	0x02D5E890 STR W21, [X19 + 0x24]
	0x02D5E894 B 0x2D5E934
	0x02D5E898 STR X31, [X19 + 0x10]
	0x02D5E89C LDR X0, [X21 + 0x18]
	0x02D5E8A0 CBZ X0, 0x2D5E950
	0x02D5E8A4 MOV X1, X31
	0x02D5E8A8 BL 0x33A01F0
	0x02D5E8AC LDR X8, [X22 + 0x20]
	0x02D5E8B0 MOV X23, X0
	0x02D5E8B4 LDR X8, [X8 + 0xC0]
	0x02D5E8B8 LDR X24, [X8 + 0x80]
	0x02D5E8BC LDRB W8, [X24 + 0x135]
	0x02D5E8C0 TBNZ X8, 0x0, 0x2D5E8D0
	0x02D5E8C4 MOV X0, X24
	0x02D5E8C8 BL 0x1C5C684

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 16
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X27+40]
	017 Move X21, 0x167E000
	018 Move X19, X2
	019 Move X23, X1
	020 Move [X29-8], X8
	021 Move W8, [X21+2240]
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {41}
	027 Move X0, 0x13C1000
	028 Move X0, [X0+3880]
	029 Call 0x1C17CF4
	030 Move X0, 0x1396000
	031 Move X0, [X0+3584]
	032 Call 0x1C17CF4
	033 Move X0, 0x1396000
	034 Move X0, [X0+3608]
	035 Call 0x1C17CF4
	036 Move X0, 0x1397000
	037 Move X0, [X0+3672]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+2240], W8
	041 Move [X29-12], W31
	042 Move W21, [X20+36]
	043 Move X28, 0x13C1000
	044 Move X28, [X28+3880]
	045 Move X1, X31
	046 Move W0, W21
	047 Call BitHelper.ToIntArrayLength, X0
	048 Move W25, W0
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X26, 0x1397000
	051 Move X26, [X26+3672]
	052 Move W1, W25
	053 Move X0, [X26]
	054 Call 0x1C17D6C
	055 Move X8, [X28]
	056 Move X24, X0
	057 Move X0, X8
	058 Call 0x1C17F10
	059 Move X1, X24
	060 Move W2, W25
	061 Move X3, X31
	062 Move X22, X0
	063 Call BitHelper..ctor, X0, X1, X2
	064 Move X0, [X26]
	065 Move W1, W25
	066 Call 0x1C17D6C
	067 Move X8, [X28]
	068 Move X26, X0
	069 Move X0, X8
	070 Call 0x1C17F10
	071 Move X1, X26
	072 Move W2, W25
	073 Move X3, X31
	074 Move X24, X0
	075 Call BitHelper..ctor, X0, X1, X2
	076 NotImplemented "Instruction SBFM not yet implemented."
	077 Compare W25, 0
	078 JumpIfEqual {84}
	079 Add X9, X24, 15
	080 Add X8, X31, 0
	081 And X9, X9, 0xFFFFFFFF
	082 Subtract X26, X8, X9
	083 Add X31, X26, 0
	084 Move X26, X31
	085 Move X0, X26
	086 Move W1, W31
	087 Move X2, X24
	088 Call 0x3EB2B10
	089 Move X0, [X28]
	090 Call 0x1C17F10
	091 Move X1, X26
	092 Move W2, W25
	093 Move X3, X31
	094 Move X22, X0
	095 Call BitHelper..ctor, X0, X1, X2
	096 Compare W25, 0
	097 JumpIfEqual {103}
	098 Add X9, X24, 15
	099 Add X8, X31, 0
	100 And X9, X9, 0xFFFFFFFF
	101 Subtract X26, X8, X9
	102 Add X31, X26, 0
	103 Move X26, X31
	104 Move X0, X26
	105 Move W1, W31
	106 Move X2, X24
	107 Call 0x3EB2B10
	108 Move X0, [X28]
	109 Call 0x1C17F10
	110 Move X1, X26
	111 Move W2, W25
	112 Move X3, X31
	113 Move X24, X0
	114 Call BitHelper..ctor, X0, X1, X2
	115 Compare X23, 0
	116 JumpIfEqual {322}
	117 Move X8, [X19+32]
	118 Move X8, [X8+192]
	119 Move X1, [X8+56]
	120 Move W8, [X1+309]
	121 Move TEMP, X8
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfEqual {128}
	125 Move X0, X1
	126 Call 0x1C5D684
	127 Move X1, X0
	128 Move X8, [X23]
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move X0, X23
	139 Move W2, W31
	140 Call 0x1C5D788
	141 NotImplemented "Instruction LDRSW not yet implemented."
	142 Add X8, X8, X9
	143 Add X0, X8, 312
	144 Move X8, [X0]
	145 Move X1, [X0+8]
	146 Move X26, 0x1396000
	147 Move X26, [X26+3584]
	148 Move X0, X23
	149 NotImplemented "Instruction BLR not yet implemented."
	150 Move X23, X0
	151 Compare X0, 0
	152 JumpIfEqual {326}
	153 Move X28, 0x1396000
	154 Move X28, [X28+3608]
	155 Move X8, [X23]
	156 Move X1, [X28]
	157 NotImplemented "Instruction LDRH not yet implemented."
	158 Compare X9, 0
	159 JumpIfEqual {166}
	160 Move X10, [X8+176]
	161 Add X10, X10, 8
	162 NotImplemented "Instruction LDUR not yet implemented."
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Subtract X9, X9, 1
	165 Add X10, X10, 16
	166 Move X0, X23
	167 Move W2, W31
	168 Call 0x1C5D788
	169 NotImplemented "Instruction LDRSW not yet implemented."
	170 Add X8, X8, X9
	171 Add X0, X8, 312
	172 Move X8, [X0]
	173 Move X1, [X0+8]
	174 Move X0, X23
	175 NotImplemented "Instruction BLR not yet implemented."
	176 Move TEMP, X0
	177 And TEMP, TEMP, 1
	178 Compare TEMP, 1
	179 JumpIfNotEqual {247}
	180 Move X8, [X19+32]
	181 Move X8, [X8+192]
	182 Move X1, [X8+232]
	183 Move W8, [X1+309]
	184 Move TEMP, X8
	185 And TEMP, TEMP, 1
	186 Compare TEMP, 1
	187 JumpIfEqual {191}
	188 Move X0, X1
	189 Call 0x1C5D684
	190 Move X1, X0
	191 Move X8, [X23]
	192 NotImplemented "Instruction LDRH not yet implemented."
	193 Compare X9, 0
	194 JumpIfEqual {201}
	195 Move X10, [X8+176]
	196 Add X10, X10, 8
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract X9, X9, 1
	200 Add X10, X10, 16
	201 Move X0, X23
	202 Move W2, W31
	203 Call 0x1C5D788
	204 NotImplemented "Instruction LDRSW not yet implemented."
	205 Add X8, X8, X9
	206 Add X0, X8, 312
	207 Move X8, [X0]
	208 Move X1, [X0+8]
	209 Move X0, X23
	210 NotImplemented "Instruction BLR not yet implemented."
	211 Move [X29-12], W31
	212 Move X8, [X19+32]
	213 And X1, X0, 0xFFFF
	214 Move X8, [X8+192]
	215 Move X3, [X8+480]
	216 Subtract X2, X29, 12
	217 Move X0, X20
	218 Call 0x2D5E8CC, X0, X1, X2
	219 NotImplemented "Instruction LDUR not yet implemented."
	220 Move TEMP, X0
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfNotEqual {230}
	224 Compare X24, 0
	225 JumpIfEqual {321}
	226 Move X0, X24
	227 Move W1, W25
	228 Move X2, X31
	229 Call BitHelper.MarkBit, X0, X1
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Compare X24, 0
	232 JumpIfEqual {323}
	233 Move X0, X24
	234 Move W1, W25
	235 Move X2, X31
	236 Call BitHelper.IsMarked, X0, X1
	237 Move TEMP, X0
	238 And TEMP, TEMP, 1
	239 Compare TEMP, 1
	240 JumpIfEqual {155}
	241 Compare X22, 0
	242 JumpIfEqual {325}
	243 Move X0, X22
	244 Move W1, W25
	245 Move X2, X31
	246 Call BitHelper.MarkBit, X0, X1
	247 Move X24, X31
	248 Move W25, 11
	249 Compare X23, 0
	250 JumpIfEqual {272}
	251 Move X8, [X23]
	252 Move X1, [X26]
	253 NotImplemented "Instruction LDRH not yet implemented."
	254 Compare X9, 0
	255 JumpIfEqual {262}
	256 Move X10, [X8+176]
	257 Add X10, X10, 8
	258 NotImplemented "Instruction LDUR not yet implemented."
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Subtract X9, X9, 1
	261 Add X10, X10, 16
	262 Move X0, X23
	263 Move W2, W31
	264 Call 0x1C5D788
	265 NotImplemented "Instruction LDRSW not yet implemented."
	266 Add X8, X8, X9
	267 Add X0, X8, 312
	268 Move X8, [X0]
	269 Move X1, [X0+8]
	270 Move X0, X23
	271 NotImplemented "Instruction BLR not yet implemented."
	272 Compare X24, 0
	273 JumpIfNotEqual {327}
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Compare W25, 0
	276 JumpIfNotEqual {304}
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Compare X22, 0
	279 JumpIfEqual {322}
	280 Move X23, X31
	281 Move W24, 40
	282 Move X0, X22
	283 Move W1, W23
	284 Move X2, X31
	285 Call BitHelper.IsMarked, X0, X1
	286 Move TEMP, X0
	287 And TEMP, TEMP, 1
	288 Compare TEMP, 1
	289 JumpIfNotEqual {301}
	290 Move X8, [X20+24]
	291 Compare X8, 0
	292 JumpIfEqual {322}
	293 Move W9, [X8+24]
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Move X9, [X19+32]
	296 NotImplemented "Instruction LDRH not yet implemented."
	297 Move X0, X20
	298 Move X9, [X9+192]
	299 Move X2, [X9+328]
	300 Call 0x2D5AC8C, X0, X1
	301 Add X23, X23, 1
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Add X24, X24, 12
	304 Move X8, [X27+40]
	305 NotImplemented "Instruction LDUR not yet implemented."
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Add X31, X29, 0
	308 Move X20, [X31+80]
	309 Move X19, [X31+88]
	310 Move X22, [X31+64]
	311 Move X21, [X31+72]
	312 Move X24, [X31+48]
	313 Move X23, [X31+56]
	314 Move X26, [X31+32]
	315 Move X25, [X31+40]
	316 Move X28, [X31+16]
	317 Move X27, [X31+24]
	318 Move X29, [X31+96]
	319 Move X30, [X31+104]
	320 Return 
	321 Call 0x1C17F20
	322 Call 0x1C17F20
	323 Call 0x1C17F20
	324 Call 0x1C17F28
	325 Call 0x1C17F20
	326 Call 0x1C17F20
	327 Move X0, X24
	328 Call 0x1C17F18
	329 Call 0x3EB2B20
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Call 0x3EB2AD0
	332 Move X24, [X0]
	333 Call 0x3EB2AE0
	334 Move W25, W31
	335 Compare X23, 0
	336 JumpIfNotEqual {251}
	337 Move X19, X0
	338 Move X24, X31
	339 Move X19, X0
	340 Compare X23, 0
	341 JumpIfEqual {363}
	342 Move X8, [X23]
	343 Move X1, [X26]
	344 NotImplemented "Instruction LDRH not yet implemented."
	345 Compare X9, 0
	346 JumpIfEqual {353}
	347 Move X10, [X8+176]
	348 Add X10, X10, 8
	349 NotImplemented "Instruction LDUR not yet implemented."
	350 NotImplemented "Instruction CMP not yet implemented."
	351 Subtract X9, X9, 1
	352 Add X10, X10, 16
	353 Move X0, X23
	354 Move W2, W31
	355 Call 0x1C5D788
	356 NotImplemented "Instruction LDRSW not yet implemented."
	357 Add X8, X8, X9
	358 Add X0, X8, 312
	359 Move X8, [X0]
	360 Move X1, [X0+8]
	361 Move X0, X23
	362 NotImplemented "Instruction BLR not yet implemented."
	363 Compare X24, 0
	364 JumpIfNotEqual {367}
	365 Move X0, X19
	366 Call 0x1D2D690
	367 Move X0, X24
	368 Call 0x1C17F18
	369 Call 0x1991590

Method: System.Boolean AddOrGetLocation(T value, out System.Int32 location)

Disassembly:
	0x02D5E8CC MOV X24, X0
	0x02D5E8D0 CBZ X23, 0x2D5E8F0
	0x02D5E8D4 MOV X0, X23
	0x02D5E8D8 MOV X1, X24
	0x02D5E8DC BL 0x1C16E00
	0x02D5E8E0 CBNZ X0, 0x2D5E8F4
	0x02D5E8E4 MOV X0, X23
	0x02D5E8E8 MOV X1, X24
	0x02D5E8EC BL 0x1C171E0
	0x02D5E8F0 MOV X0, X31
	0x02D5E8F4 STR X0, [X19 + 0x18]
	0x02D5E8F8 LDR X8, [X22 + 0x20]
	0x02D5E8FC LDR X8, [X8 + 0xC0]
	0x02D5E900 LDR X22, [X8 + 0x80]
	0x02D5E904 LDRB W8, [X22 + 0x135]
	0x02D5E908 TBNZ X8, 0x0, 0x2D5E918
	0x02D5E90C MOV X0, X22
	0x02D5E910 BL 0x1C5C684
	0x02D5E914 MOV X22, X0
	0x02D5E918 CBZ X23, 0x2D5E92C
	0x02D5E91C MOV X0, X23
	0x02D5E920 MOV X1, X22
	0x02D5E924 BL 0x1C16E00
	0x02D5E928 CBZ X0, 0x2D5E954
	0x02D5E92C LDUR V0, [X21 + 0x24]
	0x02D5E930 STUR D0, [X19 + 0x24]
	0x02D5E934 STR W20, [X19 + 0x20]
	0x02D5E938 LDP X20, X19, [X31 + 0x30]
	0x02D5E93C LDP X22, X21, [X31 + 0x20]
	0x02D5E940 LDP X24, X23, [X31 + 0x10]
	0x02D5E944 LDP X30, X25, [X31], #0x40
	0x02D5E948 RET
	0x02D5E94C BL 0x1C16F28
	0x02D5E950 BL 0x1C16F20
	0x02D5E954 MOV X0, X23
	0x02D5E958 MOV X1, X22
	0x02D5E95C BL 0x1C171E0
	0x02D5E960 STP X30, X21, [X31 - 0x20]!
	0x02D5E964 STP X20, X19, [X31 + 0x10]
	0x02D5E968 LDR X9, [X3 + 0x20]
	0x02D5E96C MOV X8, X2
	0x02D5E970 MOV W20, W1
	0x02D5E974 MOV X1, X8
	0x02D5E978 LDR X9, [X9 + 0xC0]
	0x02D5E97C MOV X19, X3
	0x02D5E980 MOV X21, X0
	0x02D5E984 LDR X2, [X9 + 0x18]
	0x02D5E988 BL 0x2D5E408
	0x02D5E98C TBNZ X20, 0x1F, 0x2D5E9C0
	0x02D5E990 CBZ W20, 0x2D5E9B4
	0x02D5E994 LDR X8, [X19 + 0x20]
	0x02D5E998 MOV W1, W20
	0x02D5E99C LDP X20, X19, [X31 + 0x10]
	0x02D5E9A0 MOV X0, X21
	0x02D5E9A4 LDR X8, [X8 + 0xC0]
	0x02D5E9A8 LDR X2, [X8 + 0x70]
	0x02D5E9AC LDP X30, X21, [X31], #0x20
	0x02D5E9B0 B 0x2D6103C
	0x02D5E9B4 LDP X20, X19, [X31 + 0x10]
	0x02D5E9B8 LDP X30, X21, [X31], #0x20
	0x02D5E9BC RET
	0x02D5E9C0 ADRP X0, 0x139D000
	0x02D5E9C4 LDR X0, [X0 + 0x760]
	0x02D5E9C8 BL 0x1C16D08
	0x02D5E9CC BL 0x1C16F10
	0x02D5E9D0 MOV X20, X0
	0x02D5E9D4 ADRP X0, 0x13BF000
	0x02D5E9D8 LDR X0, [X0 + 0x58]
	0x02D5E9DC BL 0x1C16D08
	0x02D5E9E0 MOV X1, X0
	0x02D5E9E4 MOV X0, X20
	0x02D5E9E8 MOV X2, X31
	0x02D5E9EC BL 0x3316014
	0x02D5E9F0 MOV X0, X20
	0x02D5E9F4 MOV X1, X19
	0x02D5E9F8 BL 0x1C16DEC
	0x02D5E9FC LDR X8, [X2 + 0x20]
	0x02D5EA00 AND W1, W1, 0x1
	0x02D5EA04 LDR X8, [X8 + 0xC0]
	0x02D5EA08 LDR X2, [X8 + 0xA8]
	0x02D5EA0C B 0x2D612D8
	0x02D5EA10 STP X30, X19, [X31 - 0x10]!
	0x02D5EA14 LDR W2, [X0 + 0x24]
	0x02D5EA18 MOV X19, X0
	0x02D5EA1C CMP W2, 0x1
	0x02D5EA20 B.LT 0x2D5EA58
	0x02D5EA24 LDR X0, [X19 + 0x18]
	0x02D5EA28 MOV W1, W31
	0x02D5EA2C MOV X3, X31
	0x02D5EA30 BL 0x339FA34
	0x02D5EA34 LDR X0, [X19 + 0x10]
	0x02D5EA38 CBZ X0, 0x2D5EA6C
	0x02D5EA3C LDR W2, [X0 + 0x18]
	0x02D5EA40 MOV W1, W31
	0x02D5EA44 MOV X3, X31
	0x02D5EA48 BL 0x339FA34
	0x02D5EA4C MOVN W8, 0x0
	0x02D5EA50 STR X31, [X19 + 0x20]
	0x02D5EA54 STR W8, [X19 + 0x28]
	0x02D5EA58 LDR W8, [X19 + 0x38]
	0x02D5EA5C ADD W8, W8, 0x1
	0x02D5EA60 STR W8, [X19 + 0x38]
	0x02D5EA64 LDP X30, X19, [X31], #0x10
	0x02D5EA68 RET
	0x02D5EA6C BL 0x1C16F20
	0x02D5EA70 STP X29, X30, [X31 - 0x60]!
	0x02D5EA74 STP X28, X27, [X31 + 0x10]
	0x02D5EA78 STP X26, X25, [X31 + 0x20]
	0x02D5EA7C STP X24, X23, [X31 + 0x30]
	0x02D5EA80 STP X22, X21, [X31 + 0x40]
	0x02D5EA84 STP X20, X19, [X31 + 0x50]
	0x02D5EA88 LDR X8, [X0 + 0x10]
	0x02D5EA8C CBZ X8, 0x2D5EBCC
	0x02D5EA90 LDR X8, [X2 + 0x20]
	0x02D5EA94 MOV X19, X2
	0x02D5EA98 MOV W21, W1
	0x02D5EA9C AND W1, W1, 0x1
	0x02D5EAA0 LDR X8, [X8 + 0xC0]
	0x02D5EAA4 MOV X20, X0
	0x02D5EAA8 LDR X2, [X8 + 0xB0]
	0x02D5EAAC BL 0x2D632C8
	0x02D5EAB0 LDR X8, [X20 + 0x10]
	0x02D5EAB4 CBZ X8, 0x2D5EC34
	0x02D5EAB8 LDR W10, [X8 + 0x18]
	0x02D5EABC MOV W22, W0
	0x02D5EAC0 SDIV W9, W0, W10
	0x02D5EAC4 MSUB W9, W9, W10, W0
	0x02D5EAC8 CMP W9, W10
	0x02D5EACC B.CS 0x2D5EBF4
	0x02D5EAD0 ADD X8, X8, W9, 0x2, SXTW
	0x02D5EAD4 LDR W8, [X8 + 0x20]
	0x02D5EAD8 SUBS W26, W8, 0x1
	0x02D5EADC B.MI 0x2D5EBCC
	0x02D5EAE0 LDR X24, [X20 + 0x18]
	0x02D5EAE4 CBZ X24, 0x2D5EC34
	0x02D5EAE8 LDR X8, [X24 + 0x18]
	0x02D5EAEC MOV W25, W31
	0x02D5EAF0 MOVZ W27, 0xC
	0x02D5EAF4 CMP W26, W8
	0x02D5EAF8 B.CS 0x2D5EBF4
	0x02D5EAFC UMADDL X9, X26, X27, X24
	0x02D5EB00 LDR W9, [X9 + 0x20]
	0x02D5EB04 MOV W28, W26
	0x02D5EB08 CMP W9, W22
	0x02D5EB0C B.NE 0x2D5EBAC
	0x02D5EB10 LDR X23, [X20 + 0x30]
	0x02D5EB14 CBZ X23, 0x2D5EC34
	0x02D5EB18 LDR X8, [X19 + 0x20]
	0x02D5EB1C LDR X8, [X8 + 0xC0]
	0x02D5EB20 LDR X1, [X8 + 0x20]
	0x02D5EB24 NOP
	0x02D5EB28 MADD X8, X28, X27, X24
	0x02D5EB2C LDRB W29, [X8 + 0x28]
	0x02D5EB30 LDRB W9, [X1 + 0x135]
	0x02D5EB34 TBNZ X9, 0x0, 0x2D5EB44
	0x02D5EB38 MOV X0, X1
	0x02D5EB3C BL 0x1C5C684
	0x02D5EB40 MOV X1, X0
	0x02D5EB44 LDR X8, [X23]
	0x02D5EB48 LDRH W9, [X8 + 0x12E]
	0x02D5EB4C CBZ X9, 0x2D5EB70
	0x02D5EB50 LDR X10, [X8 + 0xB0]
	0x02D5EB54 ADD X10, X10, 0x8
	0x02D5EB58 LDUR X11, [X10 - 0x8]
	0x02D5EB5C CMP X11, X1
	0x02D5EB60 B.EQ 0x2D5EB80
	0x02D5EB64 SUBS X9, X9, 0x1
	0x02D5EB68 ADD X10, X10, 0x10
	0x02D5EB6C B.NE 0x2D5EB58
	0x02D5EB70 MOV X0, X23
	0x02D5EB74 MOV W2, W31
	0x02D5EB78 BL 0x1C5C788
	0x02D5EB7C B 0x2D5EB8C
	0x02D5EB80 LDRSW X9, [X10]
	0x02D5EB84 ADD X8, X8, X9, 0x4, LSL
	0x02D5EB88 ADD X0, X8, 0x138
	0x02D5EB8C LDP X8, X3, [X0]
	0x02D5EB90 CMP W29, 0x0
	0x02D5EB94 CSET W1, NE
	0x02D5EB98 AND W2, W21, 0x1
	0x02D5EB9C MOV X0, X23
	0x02D5EBA0 BLR X8
	0x02D5EBA4 TBNZ X0, 0x0, 0x2D5EBEC
	0x02D5EBA8 LDR X8, [X24 + 0x18]
	0x02D5EBAC CMP W25, W8
	0x02D5EBB0 B.GE 0x2D5EBF8
	0x02D5EBB4 CMP W26, W8
	0x02D5EBB8 B.CS 0x2D5EBF4

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X8, [X3+32]
	015 Move X19, X2
	016 And X24, X1, 0xFFFF
	017 Move X21, X1
	018 Move X8, [X8+192]
	019 Move X1, X24
	020 Move X23, X3
	021 Move X20, X0
	022 Move X2, [X8+176]
	023 Call 0x2D5F320, X0, X1
	024 Move X8, [X20+16]
	025 Compare X8, 0
	026 JumpIfEqual {206}
	027 Move W9, [X8+24]
	028 Move W22, W0
	029 Move [X31+8], X21
	030 Move [X31+24], X19
	031 NotImplemented "Instruction SDIV not yet implemented."
	032 NotImplemented "Instruction MSUB not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Add X8, X8, W10
	035 Move W8, [X8+32]
	036 Move X28, [X20+24]
	037 Move [X31+20], W10
	038 Subtract W27, W8, 1
	039 Compare X28, 0
	040 JumpIfEqual {206}
	041 Move X8, [X28+24]
	042 Move W19, W31
	043 Move W21, 12
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction UMADDL not yet implemented."
	046 Move W9, [X9+32]
	047 Move W29, W27
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X25, [X20+48]
	050 Compare X25, 0
	051 JumpIfEqual {206}
	052 Move X8, [X23+32]
	053 Move X8, [X8+192]
	054 Move X1, [X8+32]
	055 NotImplemented "Instruction NOP not yet implemented."
	056 NotImplemented "Instruction MADD not yet implemented."
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 Move W9, [X1+309]
	059 Move TEMP, X9
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {66}
	063 Move X0, X1
	064 Call 0x1C5D684
	065 Move X1, X0
	066 Move X8, [X25]
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Compare X9, 0
	069 JumpIfEqual {76}
	070 Move X10, [X8+176]
	071 Add X10, X10, 8
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract X9, X9, 1
	075 Add X10, X10, 16
	076 Move X0, X25
	077 Move W2, W31
	078 Call 0x1C5D788
	079 NotImplemented "Instruction LDRSW not yet implemented."
	080 Add X8, X8, X9
	081 Add X0, X8, 312
	082 Move X8, [X0]
	083 Move X3, [X0+8]
	084 Move X0, X25
	085 Move X1, X26
	086 Move X2, X24
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {139}
	092 Move X8, [X28+24]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 NotImplemented "Instruction MADD not yet implemented."
	096 Move W27, [X9+36]
	097 Add W19, W19, 1
	098 Move TEMP, X27
	099 And TEMP, TEMP, -2147483648
	100 Compare TEMP, -2147483648
	101 JumpIfNotEqual {44}
	102 Move W27, [X20+40]
	103 Move TEMP, X27
	104 And TEMP, TEMP, -2147483648
	105 Compare TEMP, -2147483648
	106 JumpIfEqual {116}
	107 Compare X28, 0
	108 JumpIfEqual {206}
	109 Move W8, [X28+24]
	110 Move W10, [X31+20]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move W8, 12
	113 NotImplemented "Instruction MADD not yet implemented."
	114 Move W8, [X8+36]
	115 Move [X20+40], W8
	116 Compare X28, 0
	117 JumpIfEqual {206}
	118 Move W27, [X20+36]
	119 Move W8, [X28+24]
	120 Move W10, [X31+20]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X8, [X23+32]
	123 Move X0, X20
	124 Move X8, [X8+192]
	125 Move X1, [X8+424]
	126 Call 0x2D5D13C, X0
	127 Move X8, [X20+16]
	128 Compare X8, 0
	129 JumpIfEqual {206}
	130 Move W27, [X20+36]
	131 Move X28, [X20+24]
	132 Move W8, [X8+24]
	133 Add W9, W27, 1
	134 Move [X20+36], W9
	135 Compare X28, 0
	136 JumpIfEqual {206}
	137 NotImplemented "Instruction SDIV not yet implemented."
	138 NotImplemented "Instruction MSUB not yet implemented."
	139 Move W0, W31
	140 Add W8, W27, 1
	141 Move [X20+36], W8
	142 Move W8, [X28+24]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X9, [X31+8]
	145 Move W8, 12
	146 NotImplemented "Instruction SMADDL not yet implemented."
	147 Move [X8+32], W22
	148 NotImplemented "Instruction STRH not yet implemented."
	149 Move X8, [X20+16]
	150 Compare X8, 0
	151 JumpIfEqual {206}
	152 Move W9, [X8+24]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move W9, [X28+24]
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Add X8, X8, W10
	157 Add X8, X8, 32
	158 Move W10, [X8]
	159 Move W9, W27
	160 Move X9, W9
	161 Move W11, 12
	162 NotImplemented "Instruction MADD not yet implemented."
	163 Add W11, W27, 1
	164 Subtract W10, W10, 1
	165 Move [X9+36], W10
	166 Move [X8], W11
	167 Move W8, [X20+32]
	168 Move W9, [X20+56]
	169 Move W0, 1
	170 Add W8, W8, 1
	171 Add W9, W9, 1
	172 Move [X20+32], W8
	173 Move [X20+56], W9
	174 Move X8, [X31+24]
	175 Move X20, [X31+112]
	176 Move X19, [X31+120]
	177 Move X22, [X31+96]
	178 Move X21, [X31+104]
	179 Move X24, [X31+80]
	180 Move X23, [X31+88]
	181 Move [X8], W27
	182 Move X26, [X31+64]
	183 Move X25, [X31+72]
	184 Move X28, [X31+48]
	185 Move X27, [X31+56]
	186 Move X29, [X31+32]
	187 Move X30, [X31+40]
	188 Add X31, X31, 128
	189 Return X0
	190 Call 0x1C17F28
	191 Move X0, 0x1396000
	192 Move X0, [X0+1456]
	193 Call 0x1C17D08
	194 Call 0x1C17F10
	195 Move X19, X0
	196 Move X0, 0x13C1000
	197 Move X0, [X0+3840]
	198 Call 0x1C17D08
	199 Move X1, X0
	200 Move X0, X19
	201 Move X2, X31
	202 Call InvalidOperationException..ctor, X0, X1
	203 Move X0, X19
	204 Move X1, X23
	205 Call 0x1C17DEC
	206 Call 0x1C17F20

Method: System.Collections.Generic.HashSet`1/ElementCount<T> CheckUniqueAndUnfoundElements(System.Collections.Generic.IEnumerable`1<T> other, System.Boolean returnIfUnfound)

Disassembly:
	0x02D5EBBC MADD X9, X28, X27, X24
	0x02D5EBC0 LDR W26, [X9 + 0x24]
	0x02D5EBC4 ADD W25, W25, 0x1
	0x02D5EBC8 TBZ X26, 0x1F, 0x2D5EAF4
	0x02D5EBCC MOV W0, W31
	0x02D5EBD0 LDP X20, X19, [X31 + 0x50]
	0x02D5EBD4 LDP X22, X21, [X31 + 0x40]
	0x02D5EBD8 LDP X24, X23, [X31 + 0x30]
	0x02D5EBDC LDP X26, X25, [X31 + 0x20]
	0x02D5EBE0 LDP X28, X27, [X31 + 0x10]
	0x02D5EBE4 LDP X29, X30, [X31], #0x60
	0x02D5EBE8 RET
	0x02D5EBEC MOVZ W0, 0x1
	0x02D5EBF0 B 0x2D5EBD0
	0x02D5EBF4 BL 0x1C16F28
	0x02D5EBF8 ADRP X0, 0x1395000
	0x02D5EBFC LDR X0, [X0 + 0x5B0]
	0x02D5EC00 BL 0x1C16D08
	0x02D5EC04 BL 0x1C16F10
	0x02D5EC08 MOV X20, X0
	0x02D5EC0C ADRP X0, 0x13C0000
	0x02D5EC10 LDR X0, [X0 + 0xF00]
	0x02D5EC14 BL 0x1C16D08
	0x02D5EC18 MOV X1, X0
	0x02D5EC1C MOV X0, X20
	0x02D5EC20 MOV X2, X31
	0x02D5EC24 BL 0x337DF1C
	0x02D5EC28 MOV X0, X20
	0x02D5EC2C MOV X1, X19
	0x02D5EC30 BL 0x1C16DEC
	0x02D5EC34 BL 0x1C16F20
	0x02D5EC38 LDR X8, [X3 + 0x20]
	0x02D5EC3C LDR W3, [X0 + 0x20]
	0x02D5EC40 LDR X8, [X8 + 0xC0]
	0x02D5EC44 LDR X4, [X8 + 0xC8]
	0x02D5EC48 B 0x2D60B8C
	0x02D5EC4C SUB X31, X31, 0x70
	0x02D5EC50 STP X29, X30, [X31 + 0x10]
	0x02D5EC54 STP X28, X27, [X31 + 0x20]
	0x02D5EC58 STP X26, X25, [X31 + 0x30]
	0x02D5EC5C STP X24, X23, [X31 + 0x40]
	0x02D5EC60 STP X22, X21, [X31 + 0x50]
	0x02D5EC64 STP X20, X19, [X31 + 0x60]
	0x02D5EC68 LDR X8, [X0 + 0x10]
	0x02D5EC6C CBZ X8, 0x2D5EDDC
	0x02D5EC70 LDR X8, [X2 + 0x20]
	0x02D5EC74 MOV X21, X2
	0x02D5EC78 MOV W20, W1
	0x02D5EC7C AND W1, W1, 0x1
	0x02D5EC80 LDR X8, [X8 + 0xC0]
	0x02D5EC84 MOV X19, X0
	0x02D5EC88 LDR X2, [X8 + 0xB0]
	0x02D5EC8C BL 0x2D632C8
	0x02D5EC90 LDR X8, [X19 + 0x10]
	0x02D5EC94 CBZ X8, 0x2D5EF04
	0x02D5EC98 LDR W10, [X8 + 0x18]
	0x02D5EC9C SDIV W9, W0, W10
	0x02D5ECA0 MSUB W9, W9, W10, W0
	0x02D5ECA4 CMP W9, W10
	0x02D5ECA8 B.CS 0x2D5EEC4
	0x02D5ECAC SXTW X9, W9
	0x02D5ECB0 ADD X8, X8, X9, 0x2, LSL
	0x02D5ECB4 LDR W8, [X8 + 0x20]
	0x02D5ECB8 SUBS W24, W8, 0x1
	0x02D5ECBC B.MI 0x2D5EDDC
	0x02D5ECC0 LDR X25, [X19 + 0x18]
	0x02D5ECC4 STR W20, [X31 + 0xC]
	0x02D5ECC8 STR X9, [X31]
	0x02D5ECCC CBZ X25, 0x2D5EF04
	0x02D5ECD0 LDR X8, [X25 + 0x18]
	0x02D5ECD4 MOV W29, W31
	0x02D5ECD8 MOVN W26, 0x0
	0x02D5ECDC MOVZ W20, 0xC
	0x02D5ECE0 STR W0, [X31 + 0x8]
	0x02D5ECE4 CMP W24, W8
	0x02D5ECE8 B.CS 0x2D5EEC4
	0x02D5ECEC UMADDL X28, X24, X20, X25
	0x02D5ECF0 LDR W9, [X28 + 0x20]!
	0x02D5ECF4 MOV W27, W24
	0x02D5ECF8 CMP W9, W0
	0x02D5ECFC B.NE 0x2D5EDB4
	0x02D5ED00 LDR X23, [X19 + 0x30]
	0x02D5ED04 CBZ X23, 0x2D5EF04
	0x02D5ED08 LDR X8, [X21 + 0x20]
	0x02D5ED0C MOV X22, X19
	0x02D5ED10 MOV X19, X21
	0x02D5ED14 LDR X8, [X8 + 0xC0]
	0x02D5ED18 LDR X1, [X8 + 0x20]
	0x02D5ED1C NOP
	0x02D5ED20 MADD X8, X27, X20, X25
	0x02D5ED24 LDRB W21, [X8 + 0x28]
	0x02D5ED28 LDRB W9, [X1 + 0x135]
	0x02D5ED2C TBNZ X9, 0x0, 0x2D5ED3C
	0x02D5ED30 MOV X0, X1
	0x02D5ED34 BL 0x1C5C684
	0x02D5ED38 MOV X1, X0
	0x02D5ED3C LDR X8, [X23]
	0x02D5ED40 LDRH W9, [X8 + 0x12E]
	0x02D5ED44 CBZ X9, 0x2D5ED68
	0x02D5ED48 LDR X10, [X8 + 0xB0]
	0x02D5ED4C ADD X10, X10, 0x8
	0x02D5ED50 LDUR X11, [X10 - 0x8]
	0x02D5ED54 CMP X11, X1
	0x02D5ED58 B.EQ 0x2D5ED78
	0x02D5ED5C SUBS X9, X9, 0x1
	0x02D5ED60 ADD X10, X10, 0x10
	0x02D5ED64 B.NE 0x2D5ED50
	0x02D5ED68 MOV X0, X23
	0x02D5ED6C MOV W2, W31
	0x02D5ED70 BL 0x1C5C788
	0x02D5ED74 B 0x2D5ED84
	0x02D5ED78 LDRSW X9, [X10]
	0x02D5ED7C ADD X8, X8, X9, 0x4, LSL
	0x02D5ED80 ADD X0, X8, 0x138
	0x02D5ED84 LDR W9, [X31 + 0xC]
	0x02D5ED88 LDP X8, X3, [X0]
	0x02D5ED8C CMP W21, 0x0
	0x02D5ED90 CSET W1, NE
	0x02D5ED94 AND W2, W9, 0x1
	0x02D5ED98 MOV X0, X23
	0x02D5ED9C BLR X8
	0x02D5EDA0 TBNZ X0, 0x0, 0x2D5EE00
	0x02D5EDA4 LDR X8, [X25 + 0x18]
	0x02D5EDA8 LDR W0, [X31 + 0x8]
	0x02D5EDAC MOV X21, X19
	0x02D5EDB0 MOV X19, X22
	0x02D5EDB4 CMP W29, W8
	0x02D5EDB8 B.GE 0x2D5EEC8
	0x02D5EDBC CMP W24, W8
	0x02D5EDC0 B.CS 0x2D5EEC4
	0x02D5EDC4 MADD X9, X27, X20, X25
	0x02D5EDC8 LDR W9, [X9 + 0x24]
	0x02D5EDCC ADD W29, W29, 0x1
	0x02D5EDD0 MOV W26, W24
	0x02D5EDD4 MOV W24, W9
	0x02D5EDD8 TBZ X9, 0x1F, 0x2D5ECE4
	0x02D5EDDC MOV W0, W31
	0x02D5EDE0 LDP X20, X19, [X31 + 0x60]
	0x02D5EDE4 LDP X22, X21, [X31 + 0x50]
	0x02D5EDE8 LDP X24, X23, [X31 + 0x40]
	0x02D5EDEC LDP X26, X25, [X31 + 0x30]
	0x02D5EDF0 LDP X28, X27, [X31 + 0x20]
	0x02D5EDF4 LDP X29, X30, [X31 + 0x10]
	0x02D5EDF8 ADD X31, X31, 0x70
	0x02D5EDFC RET
	0x02D5EE00 TBNZ X26, 0x1F, 0x2D5EE38
	0x02D5EE04 LDR W8, [X25 + 0x18]
	0x02D5EE08 CMP W24, W8
	0x02D5EE0C B.CS 0x2D5EEC4
	0x02D5EE10 CMP W26, W8
	0x02D5EE14 B.CS 0x2D5EEC4
	0x02D5EE18 MOVZ W9, 0xC
	0x02D5EE1C ADD X10, X25, 0x20
	0x02D5EE20 MADD X11, X27, X9, X10
	0x02D5EE24 LDR W11, [X11 + 0x4]
	0x02D5EE28 NOP
	0x02D5EE2C UMADDL X9, X26, X9, X10
	0x02D5EE30 STR W11, [X9 + 0x4]
	0x02D5EE34 B 0x2D5EE74
	0x02D5EE38 LDR W8, [X25 + 0x18]
	0x02D5EE3C CMP W24, W8
	0x02D5EE40 B.CS 0x2D5EEC4
	0x02D5EE44 LDR X9, [X22 + 0x10]
	0x02D5EE48 LDR X11, [X31]
	0x02D5EE4C CBZ X9, 0x2D5EF04
	0x02D5EE50 LDR W10, [X9 + 0x18]
	0x02D5EE54 CMP W11, W10
	0x02D5EE58 B.CS 0x2D5EEC4
	0x02D5EE5C MOVZ W10, 0xC
	0x02D5EE60 MADD X10, X27, X10, X25
	0x02D5EE64 LDR W10, [X10 + 0x24]
	0x02D5EE68 ADD X9, X9, X11, 0x2, LSL
	0x02D5EE6C ADD W10, W10, 0x1
	0x02D5EE70 STR W10, [X9 + 0x20]
	0x02D5EE74 CMP W24, W8
	0x02D5EE78 B.CS 0x2D5EEC4
	0x02D5EE7C MOVN W8, 0x0
	0x02D5EE80 STR W8, [X28]
	0x02D5EE84 LDR W8, [X22 + 0x28]
	0x02D5EE88 MOVZ W9, 0xC
	0x02D5EE8C MADD X9, X27, X9, X25
	0x02D5EE90 STR W8, [X9 + 0x24]
	0x02D5EE94 LDR W8, [X22 + 0x20]
	0x02D5EE98 LDR W9, [X22 + 0x38]
	0x02D5EE9C SUBS W8, W8, 0x1
	0x02D5EEA0 ADD W9, W9, 0x1
	0x02D5EEA4 STR W8, [X22 + 0x20]
	0x02D5EEA8 STR W9, [X22 + 0x38]
	0x02D5EEAC B.NE 0x2D5EEB8
	0x02D5EEB0 MOVN W24, 0x0
	0x02D5EEB4 STR W31, [X22 + 0x24]
	0x02D5EEB8 STR W24, [X22 + 0x28]
	0x02D5EEBC MOVZ W0, 0x1
	0x02D5EEC0 B 0x2D5EDE0
	0x02D5EEC4 BL 0x1C16F28
	0x02D5EEC8 ADRP X0, 0x1395000
	0x02D5EECC LDR X0, [X0 + 0x5B0]
	0x02D5EED0 BL 0x1C16D08
	0x02D5EED4 BL 0x1C16F10
	0x02D5EED8 MOV X19, X0
	0x02D5EEDC ADRP X0, 0x13C0000
	0x02D5EEE0 LDR X0, [X0 + 0xF00]
	0x02D5EEE4 BL 0x1C16D08
	0x02D5EEE8 MOV X1, X0
	0x02D5EEEC MOV X0, X19
	0x02D5EEF0 MOV X2, X31
	0x02D5EEF4 BL 0x337DF1C
	0x02D5EEF8 MOV X0, X19
	0x02D5EEFC MOV X1, X21
	0x02D5EF00 BL 0x1C16DEC
	0x02D5EF04 BL 0x1C16F20
	0x02D5EF08 LDR W0, [X0 + 0x20]
	0x02D5EF0C RET
	0x02D5EF10 MOV W0, W31
	0x02D5EF14 RET
	0x02D5EF18 STP X31, X31, [X8]
	0x02D5EF1C STR X31, [X8 + 0x10]
	0x02D5EF20 LDR X9, [X1 + 0x20]
	0x02D5EF24 MOV X1, X0
	0x02D5EF28 MOV X0, X8
	0x02D5EF2C LDR X9, [X9 + 0xC0]
	0x02D5EF30 LDR X2, [X9 + 0xE0]
	0x02D5EF34 B 0x2BB6124
	0x02D5EF38 SUB X31, X31, 0x40
	0x02D5EF3C STP X30, X19, [X31 + 0x30]
	0x02D5EF40 STP X31, X31, [X31 + 0x18]
	0x02D5EF44 STR X31, [X31 + 0x28]
	0x02D5EF48 LDR X8, [X1 + 0x20]
	0x02D5EF4C MOV X19, X1
	0x02D5EF50 MOV X1, X0
	0x02D5EF54 ADD X0, X31, 0x18
	0x02D5EF58 LDR X8, [X8 + 0xC0]
	0x02D5EF5C LDR X2, [X8 + 0xE0]
	0x02D5EF60 BL 0x2BB6124
	0x02D5EF64 LDUR V0, [X31 + 0x18]
	0x02D5EF68 LDR X8, [X31 + 0x28]
	0x02D5EF6C ADD X1, X31, 0x0
	0x02D5EF70 STR V0, [X31]
	0x02D5EF74 STR X8, [X31 + 0x10]
	0x02D5EF78 LDR X8, [X19 + 0x20]
	0x02D5EF7C LDR X8, [X8 + 0xC0]
	0x02D5EF80 LDR X0, [X8 + 0xD8]
	0x02D5EF84 BL 0x1C16E04
	0x02D5EF88 LDP X30, X19, [X31 + 0x30]
	0x02D5EF8C ADD X31, X31, 0x40
	0x02D5EF90 RET
	0x02D5EF94 SUB X31, X31, 0x40
	0x02D5EF98 STP X30, X19, [X31 + 0x30]
	0x02D5EF9C STP X31, X31, [X31 + 0x18]
	0x02D5EFA0 STR X31, [X31 + 0x28]
	0x02D5EFA4 LDR X8, [X1 + 0x20]
	0x02D5EFA8 MOV X19, X1
	0x02D5EFAC MOV X1, X0
	0x02D5EFB0 ADD X0, X31, 0x18
	0x02D5EFB4 LDR X8, [X8 + 0xC0]
	0x02D5EFB8 LDR X2, [X8 + 0xE0]
	0x02D5EFBC BL 0x2BB6124
	0x02D5EFC0 LDUR V0, [X31 + 0x18]
	0x02D5EFC4 LDR X8, [X31 + 0x28]
	0x02D5EFC8 ADD X1, X31, 0x0
	0x02D5EFCC STR V0, [X31]
	0x02D5EFD0 STR X8, [X31 + 0x10]
	0x02D5EFD4 LDR X8, [X19 + 0x20]
	0x02D5EFD8 LDR X8, [X8 + 0xC0]
	0x02D5EFDC LDR X0, [X8 + 0xD8]
	0x02D5EFE0 BL 0x1C16E04
	0x02D5EFE4 LDP X30, X19, [X31 + 0x30]
	0x02D5EFE8 ADD X31, X31, 0x40
	0x02D5EFEC RET
	0x02D5EFF0 STR X30, [X31 - 0x50]!
	0x02D5EFF4 STP X26, X25, [X31 + 0x10]
	0x02D5EFF8 STP X24, X23, [X31 + 0x20]
	0x02D5EFFC STP X22, X21, [X31 + 0x30]
	0x02D5F000 STP X20, X19, [X31 + 0x40]
	0x02D5F004 ADRP X22, 0x167C000
	0x02D5F008 LDRB W8, [X22 + 0x8C3]
	0x02D5F00C MOV X19, X4
	0x02D5F010 MOV X20, X1
	0x02D5F014 MOV X21, X0
	0x02D5F018 TBNZ X8, 0x0, 0x2D5F060
	0x02D5F01C ADRP X0, 0x1394000
	0x02D5F020 LDR X0, [X0 + 0x6C0]
	0x02D5F024 BL 0x1C16CF4
	0x02D5F028 ADRP X0, 0x13BF000
	0x02D5F02C LDR X0, [X0 + 0xF08]
	0x02D5F030 BL 0x1C16CF4
	0x02D5F034 ADRP X0, 0x13BE000
	0x02D5F038 LDR X0, [X0 + 0x2D0]
	0x02D5F03C BL 0x1C16CF4
	0x02D5F040 ADRP X0, 0x13A1000
	0x02D5F044 LDR X0, [X0 + 0x150]
	0x02D5F048 BL 0x1C16CF4
	0x02D5F04C ADRP X0, 0x1395000
	0x02D5F050 LDR X0, [X0 + 0x2A0]
	0x02D5F054 BL 0x1C16CF4
	0x02D5F058 MOVZ W8, 0x1
	0x02D5F05C STRB W8, [X22 + 0x8C3]
	0x02D5F060 CBZ X20, 0x2D5F1D0
	0x02D5F064 ADRP X8, 0x1395000
	0x02D5F068 LDR X8, [X8 + 0x2A0]
	0x02D5F06C LDR W2, [X21 + 0x38]
	0x02D5F070 ADRP X24, 0x1394000
	0x02D5F074 ADRP X26, 0x13BE000
	0x02D5F078 LDR X1, [X8]
	0x02D5F07C ADRP X25, 0x13A1000
	0x02D5F080 LDR X24, [X24 + 0x6C0]
	0x02D5F084 LDR X26, [X26 + 0x2D0]
	0x02D5F088 LDR X25, [X25 + 0x150]
	0x02D5F08C MOV X0, X20
	0x02D5F090 MOV X3, X31
	0x02D5F094 BL 0x32A8F28
	0x02D5F098 LDR X8, [X19 + 0x20]
	0x02D5F09C LDR X0, [X24]
	0x02D5F0A0 LDR X22, [X21 + 0x30]
	0x02D5F0A4 LDR X8, [X8 + 0xC0]
	0x02D5F0A8 LDR W9, [X0 + 0xE0]
	0x02D5F0AC LDR X23, [X8 + 0xF0]
	0x02D5F0B0 CBNZ W9, 0x2D5F0B8
	0x02D5F0B4 BL 0x1C16DFC
	0x02D5F0B8 MOV X0, X23
	0x02D5F0BC MOV X1, X31
	0x02D5F0C0 BL 0x338C698
	0x02D5F0C4 LDR X1, [X26]
	0x02D5F0C8 MOV X3, X0
	0x02D5F0CC MOV X0, X20
	0x02D5F0D0 MOV X2, X22
	0x02D5F0D4 MOV X4, X31
	0x02D5F0D8 BL 0x32A89BC
	0x02D5F0DC LDR X8, [X21 + 0x10]
	0x02D5F0E0 LDR X1, [X25]
	0x02D5F0E4 CBZ X8, 0x2D5F0F0
	0x02D5F0E8 LDR W2, [X8 + 0x18]
	0x02D5F0EC B 0x2D5F0F4
	0x02D5F0F0 MOV W2, W31
	0x02D5F0F4 MOV X0, X20
	0x02D5F0F8 MOV X3, X31
	0x02D5F0FC BL 0x32A8F28
	0x02D5F100 LDR X8, [X21 + 0x10]
	0x02D5F104 CBZ X8, 0x2D5F1B8
	0x02D5F108 LDR X8, [X19 + 0x20]
	0x02D5F10C LDR W22, [X21 + 0x20]
	0x02D5F110 LDR X8, [X8 + 0xC0]
	0x02D5F114 LDR X0, [X8 + 0xF8]
	0x02D5F118 LDRB W8, [X0 + 0x135]
	0x02D5F11C TBNZ X8, 0x0, 0x2D5F124
	0x02D5F120 BL 0x1C5C684
	0x02D5F124 ADRP X23, 0x13BF000
	0x02D5F128 LDR X23, [X23 + 0xF08]
	0x02D5F12C MOV W1, W22
	0x02D5F130 BL 0x1C16D6C
	0x02D5F134 LDR X8, [X19 + 0x20]
	0x02D5F138 LDR W3, [X21 + 0x20]
	0x02D5F13C MOV X22, X0
	0x02D5F140 MOV X0, X21
	0x02D5F144 LDR X8, [X8 + 0xC0]
	0x02D5F148 MOV X1, X22
	0x02D5F14C MOV W2, W31
	0x02D5F150 LDR X8, [X8 + 0x100]
	0x02D5F154 LDR X8, [X8 + 0x20]
	0x02D5F158 LDR X8, [X8 + 0xC0]
	0x02D5F15C LDR X4, [X8 + 0xC8]
	0x02D5F160 BL 0x2D60B8C
	0x02D5F164 LDR X8, [X19 + 0x20]
	0x02D5F168 LDR X0, [X24]
	0x02D5F16C LDR X8, [X8 + 0xC0]
	0x02D5F170 LDR W9, [X0 + 0xE0]
	0x02D5F174 LDR X19, [X8 + 0x108]
	0x02D5F178 CBNZ W9, 0x2D5F180
	0x02D5F17C BL 0x1C16DFC
	0x02D5F180 MOV X0, X19
	0x02D5F184 MOV X1, X31
	0x02D5F188 BL 0x338C698
	0x02D5F18C LDR X1, [X23]
	0x02D5F190 MOV X3, X0
	0x02D5F194 MOV X0, X20
	0x02D5F198 MOV X2, X22
	0x02D5F19C LDP X20, X19, [X31 + 0x40]
	0x02D5F1A0 LDP X22, X21, [X31 + 0x30]
	0x02D5F1A4 LDP X24, X23, [X31 + 0x20]
	0x02D5F1A8 LDP X26, X25, [X31 + 0x10]
	0x02D5F1AC MOV X4, X31
	0x02D5F1B0 LDR X30, [X31], #0x50
	0x02D5F1B4 B 0x32A89BC
	0x02D5F1B8 LDP X20, X19, [X31 + 0x40]
	0x02D5F1BC LDP X22, X21, [X31 + 0x30]
	0x02D5F1C0 LDP X24, X23, [X31 + 0x20]
	0x02D5F1C4 LDP X26, X25, [X31 + 0x10]
	0x02D5F1C8 LDR X30, [X31], #0x50
	0x02D5F1CC RET
	0x02D5F1D0 ADRP X0, 0x1399000
	0x02D5F1D4 LDR X0, [X0 + 0x528]
	0x02D5F1D8 BL 0x1C16D08
	0x02D5F1DC BL 0x1C16F10
	0x02D5F1E0 MOV X20, X0
	0x02D5F1E4 ADRP X0, 0x13BE000
	0x02D5F1E8 LDR X0, [X0 + 0x2D8]
	0x02D5F1EC BL 0x1C16D08
	0x02D5F1F0 MOV X1, X0
	0x02D5F1F4 MOV X0, X20
	0x02D5F1F8 MOV X2, X31
	0x02D5F1FC BL 0x330E100
	0x02D5F200 MOV X0, X20
	0x02D5F204 MOV X1, X19
	0x02D5F208 BL 0x1C16DEC
	0x02D5F20C STR X30, [X31 - 0x40]!
	0x02D5F210 STP X24, X23, [X31 + 0x10]
	0x02D5F214 STP X22, X21, [X31 + 0x20]
	0x02D5F218 STP X20, X19, [X31 + 0x30]
	0x02D5F21C ADRP X21, 0x167C000
	0x02D5F220 LDRB W8, [X21 + 0x8C4]
	0x02D5F224 MOV X19, X2
	0x02D5F228 MOV X20, X0
	0x02D5F22C TBNZ X8, 0x0, 0x2D5F280
	0x02D5F230 ADRP X0, 0x1395000
	0x02D5F234 LDR X0, [X0 + 0xE58]
	0x02D5F238 BL 0x1C16CF4
	0x02D5F23C ADRP X0, 0x1394000
	0x02D5F240 LDR X0, [X0 + 0x6C0]
	0x02D5F244 BL 0x1C16CF4
	0x02D5F248 ADRP X0, 0x13BF000
	0x02D5F24C LDR X0, [X0 + 0xF08]
	0x02D5F250 BL 0x1C16CF4
	0x02D5F254 ADRP X0, 0x13BE000
	0x02D5F258 LDR X0, [X0 + 0x2D0]
	0x02D5F25C BL 0x1C16CF4
	0x02D5F260 ADRP X0, 0x13A1000
	0x02D5F264 LDR X0, [X0 + 0x150]
	0x02D5F268 BL 0x1C16CF4
	0x02D5F26C ADRP X0, 0x1395000
	0x02D5F270 LDR X0, [X0 + 0x2A0]
	0x02D5F274 BL 0x1C16CF4
	0x02D5F278 MOVZ W8, 0x1
	0x02D5F27C STRB W8, [X21 + 0x8C4]
	0x02D5F280 LDR X0, [X20 + 0x40]
	0x02D5F284 CBZ X0, 0x2D5F4B4
	0x02D5F288 ADRP X8, 0x13A1000
	0x02D5F28C LDR X8, [X8 + 0x150]
	0x02D5F290 ADRP X24, 0x1394000
	0x02D5F294 MOV X2, X31
	0x02D5F298 LDR X1, [X8]
	0x02D5F29C LDR X24, [X24 + 0x6C0]
	0x02D5F2A0 BL 0x32A9B08
	0x02D5F2A4 LDR X9, [X19 + 0x20]
	0x02D5F2A8 LDR X8, [X24]
	0x02D5F2AC LDR X22, [X20 + 0x40]
	0x02D5F2B0 MOV W21, W0
	0x02D5F2B4 LDR X9, [X9 + 0xC0]
	0x02D5F2B8 LDR W10, [X8 + 0xE0]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 16
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X26+40]
	017 Move X23, 0x167E000
	018 Move X19, X3
	019 Move W21, W2
	020 Move [X29-8], X8
	021 Move W8, [X23+2241]
	022 Move X20, X1
	023 Move X22, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {42}
	028 Move X0, 0x13C1000
	029 Move X0, [X0+3880]
	030 Call 0x1C17CF4
	031 Move X0, 0x1396000
	032 Move X0, [X0+3584]
	033 Call 0x1C17CF4
	034 Move X0, 0x1396000
	035 Move X0, [X0+3608]
	036 Call 0x1C17CF4
	037 Move X0, 0x1397000
	038 Move X0, [X0+3672]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X23+2241], W8
	042 Move X27, 0x1396000
	043 Move W8, [X22+32]
	044 Move X27, [X27+3608]
	045 Compare W8, 0
	046 JumpIfEqual {68}
	047 Move W0, [X22+36]
	048 Move X1, X31
	049 Call BitHelper.ToIntArrayLength, X0
	050 Move W24, W0
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X8, 0x1397000
	053 Move X8, [X8+3672]
	054 Move W1, W24
	055 Move X0, [X8]
	056 Call 0x1C17D6C
	057 Move X8, 0x13C1000
	058 Move X8, [X8+3880]
	059 Move X25, X0
	060 Move X8, [X8]
	061 Move X0, X8
	062 Call 0x1C17F10
	063 Move X1, X25
	064 Move W2, W24
	065 Move X3, X31
	066 Move X23, X0
	067 Call BitHelper..ctor, X0, X1, X2
	068 Compare X20, 0
	069 JumpIfEqual {390}
	070 Move X8, [X19+32]
	071 Move X8, [X8+192]
	072 Move X1, [X8+56]
	073 Move W8, [X1+309]
	074 Move TEMP, X8
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {81}
	078 Move X0, X1
	079 Call 0x1C5D684
	080 Move X1, X0
	081 Move X8, [X20]
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Compare X9, 0
	084 JumpIfEqual {91}
	085 Move X10, [X8+176]
	086 Add X10, X10, 8
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Subtract X9, X9, 1
	090 Add X10, X10, 16
	091 Move X0, X20
	092 Move W2, W31
	093 Call 0x1C5D788
	094 NotImplemented "Instruction SBFM not yet implemented."
	095 Compare W24, 0
	096 JumpIfEqual {165}
	097 Add X9, X2, 15
	098 Add X8, X31, 0
	099 And X9, X9, 0xFFFFFFFF
	100 Subtract X25, X8, X9
	101 Add X31, X25, 0
	102 NotImplemented "Instruction LDRSW not yet implemented."
	103 Add X8, X8, X9
	104 Add X0, X8, 312
	105 Move X8, [X0]
	106 Move X1, [X0+8]
	107 Move X0, X20
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move X20, X0
	110 Compare X0, 0
	111 JumpIfEqual {393}
	112 Move X8, [X20]
	113 Move X1, [X27]
	114 NotImplemented "Instruction LDRH not yet implemented."
	115 Compare X9, 0
	116 JumpIfEqual {123}
	117 Move X10, [X8+176]
	118 Add X10, X10, 8
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Subtract X9, X9, 1
	122 Add X10, X10, 16
	123 Move X0, X20
	124 Move W2, W31
	125 Call 0x1C5D788
	126 NotImplemented "Instruction LDRSW not yet implemented."
	127 Add X8, X8, X9
	128 Add X0, X8, 312
	129 Move X8, [X0]
	130 Move X1, [X0+8]
	131 Move X0, X20
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Move TEMP, X0
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfNotEqual {161}
	137 Move X8, [X19+32]
	138 Move X8, [X8+192]
	139 Move X1, [X8+232]
	140 Move W8, [X1+309]
	141 Move TEMP, X8
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfEqual {148}
	145 Move X0, X1
	146 Call 0x1C5D684
	147 Move X1, X0
	148 Move X8, [X20]
	149 NotImplemented "Instruction LDRH not yet implemented."
	150 Compare X9, 0
	151 JumpIfEqual {158}
	152 Move X10, [X8+176]
	153 Add X10, X10, 8
	154 NotImplemented "Instruction LDUR not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Subtract X9, X9, 1
	157 Add X10, X10, 16
	158 Move X0, X20
	159 Move W2, W31
	160 Call 0x1C5D788
	161 Move X21, X31
	162 Move W25, W31
	163 Compare X20, 0
	164 JumpIfNotEqual {343}
	165 Move X25, X31
	166 Move X0, X25
	167 Move W1, W31
	168 Call 0x3EB2B10
	169 Move X8, 0x13C1000
	170 Move X8, [X8+3880]
	171 Move X0, [X8]
	172 Call 0x1C17F10
	173 Move X1, X25
	174 Move W2, W24
	175 Move X3, X31
	176 Move X23, X0
	177 Call BitHelper..ctor, X0, X1, X2
	178 Compare X20, 0
	179 JumpIfEqual {390}
	180 Move X8, [X19+32]
	181 Move X8, [X8+192]
	182 Move X1, [X8+56]
	183 Move W8, [X1+309]
	184 Move TEMP, X8
	185 And TEMP, TEMP, 1
	186 Compare TEMP, 1
	187 JumpIfEqual {191}
	188 Move X0, X1
	189 Call 0x1C5D684
	190 Move X1, X0
	191 Move X8, [X20]
	192 NotImplemented "Instruction LDRH not yet implemented."
	193 Compare X9, 0
	194 JumpIfEqual {201}
	195 Move X10, [X8+176]
	196 Add X10, X10, 8
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract X9, X9, 1
	200 Add X10, X10, 16
	201 Move X0, X20
	202 Move W2, W31
	203 Call 0x1C5D788
	204 NotImplemented "Instruction LDRSW not yet implemented."
	205 Add X8, X8, X9
	206 Add X0, X8, 312
	207 Move X8, [X0]
	208 Move X1, [X0+8]
	209 Move X0, X20
	210 NotImplemented "Instruction BLR not yet implemented."
	211 Move X20, X0
	212 Move W28, W31
	213 Move W25, W31
	214 Compare X20, 0
	215 JumpIfEqual {388}
	216 Move X8, [X20]
	217 Move X1, [X27]
	218 NotImplemented "Instruction LDRH not yet implemented."
	219 Compare X9, 0
	220 JumpIfEqual {227}
	221 Move X10, [X8+176]
	222 Add X10, X10, 8
	223 NotImplemented "Instruction LDUR not yet implemented."
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Subtract X9, X9, 1
	226 Add X10, X10, 16
	227 Move X0, X20
	228 Move W2, W31
	229 Call 0x1C5D788
	230 NotImplemented "Instruction LDRSW not yet implemented."
	231 Add X8, X8, X9
	232 Add X0, X8, 312
	233 Move X8, [X0]
	234 Move X1, [X0+8]
	235 Move X0, X20
	236 NotImplemented "Instruction BLR not yet implemented."
	237 Move TEMP, X0
	238 And TEMP, TEMP, 1
	239 Compare TEMP, 1
	240 JumpIfNotEqual {303}
	241 Move X8, [X19+32]
	242 Move X8, [X8+192]
	243 Move X1, [X8+232]
	244 Move W8, [X1+309]
	245 Move TEMP, X8
	246 And TEMP, TEMP, 1
	247 Compare TEMP, 1
	248 JumpIfEqual {252}
	249 Move X0, X1
	250 Call 0x1C5D684
	251 Move X1, X0
	252 Move X8, [X20]
	253 NotImplemented "Instruction LDRH not yet implemented."
	254 Compare X9, 0
	255 JumpIfEqual {262}
	256 Move X10, [X8+176]
	257 Add X10, X10, 8
	258 NotImplemented "Instruction LDUR not yet implemented."
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Subtract X9, X9, 1
	261 Add X10, X10, 16
	262 Move X0, X20
	263 Move W2, W31
	264 Call 0x1C5D788
	265 NotImplemented "Instruction LDRSW not yet implemented."
	266 Add X8, X8, X9
	267 Add X0, X8, 312
	268 Move X8, [X0]
	269 Move X1, [X0+8]
	270 Move X0, X20
	271 NotImplemented "Instruction BLR not yet implemented."
	272 Move X8, [X19+32]
	273 And X1, X0, 0xFFFF
	274 Move X8, [X8+192]
	275 Move X2, [X8+472]
	276 Move X0, X22
	277 Call 0x2D5E058, X0, X1
	278 Move W24, W0
	279 Move TEMP, X0
	280 And TEMP, TEMP, -2147483648
	281 Compare TEMP, -2147483648
	282 JumpIfEqual {298}
	283 Compare X23, 0
	284 JumpIfEqual {389}
	285 Move X0, X23
	286 Move W1, W24
	287 Move X2, X31
	288 Call BitHelper.IsMarked, X0, X1
	289 Move TEMP, X0
	290 And TEMP, TEMP, 1
	291 Compare TEMP, 1
	292 JumpIfEqual {214}
	293 Move X0, X23
	294 Move W1, W24
	295 Move X2, X31
	296 Call BitHelper.MarkBit, X0, X1
	297 Add W28, W28, 1
	298 Add W25, W25, 1
	299 Move TEMP, X21
	300 And TEMP, TEMP, 1
	301 Compare TEMP, 1
	302 JumpIfNotEqual {214}
	303 Move X21, X31
	304 Compare X20, 0
	305 JumpIfEqual {330}
	306 Move X10, 0x1396000
	307 Move X8, [X20]
	308 Call 0x3EB286C
	309 Return X0
	310 NotImplemented "Instruction LDRH not yet implemented."
	311 Move X1, [X10]
	312 Compare X9, 0
	313 JumpIfEqual {320}
	314 Move X10, [X8+176]
	315 Add X10, X10, 8
	316 NotImplemented "Instruction LDUR not yet implemented."
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Subtract X9, X9, 1
	319 Add X10, X10, 16
	320 Move X0, X20
	321 Move W2, W31
	322 Call 0x1C5D788
	323 NotImplemented "Instruction LDRSW not yet implemented."
	324 Add X8, X8, X9
	325 Add X0, X8, 312
	326 Move X8, [X0]
	327 Move X1, [X0+8]
	328 Move X0, X20
	329 NotImplemented "Instruction BLR not yet implemented."
	330 Compare X21, 0
	331 JumpIfEqual {369}
	332 NotImplemented "Instruction LDRSW not yet implemented."
	333 Add X8, X8, X9
	334 Add X0, X8, 312
	335 Move X8, [X0]
	336 Move X1, [X0+8]
	337 Move X0, X20
	338 NotImplemented "Instruction BLR not yet implemented."
	339 Move X21, X31
	340 Move W25, 1
	341 Compare X20, 0
	342 JumpIfEqual {366}
	343 Move X10, 0x1395000
	344 Move X8, [X20]
	345 Move X10, [X10+3584]
	346 NotImplemented "Instruction LDRH not yet implemented."
	347 Move X1, [X10]
	348 Compare X9, 0
	349 JumpIfEqual {356}
	350 Move X10, [X8+176]
	351 Add X10, X10, 8
	352 NotImplemented "Instruction LDUR not yet implemented."
	353 NotImplemented "Instruction CMP not yet implemented."
	354 Subtract X9, X9, 1
	355 Add X10, X10, 16
	356 Move X0, X20
	357 Move W2, W31
	358 Call 0x1C5D788
	359 NotImplemented "Instruction LDRSW not yet implemented."
	360 Add X8, X8, X9
	361 Add X0, X8, 312
	362 Move X8, [X0]
	363 Move X1, [X0+8]
	364 Move X0, X20
	365 NotImplemented "Instruction BLR not yet implemented."
	366 Compare X21, 0
	367 JumpIfNotEqual {391}
	368 Move W28, W31
	369 Move X8, [X26+40]
	370 NotImplemented "Instruction LDUR not yet implemented."
	371 NotImplemented "Instruction CMP not yet implemented."
	372 Move W0, W28
	373 NotImplemented "Instruction BFM not yet implemented."
	374 Add X31, X29, 0
	375 Move X20, [X31+80]
	376 Move X19, [X31+88]
	377 Move X22, [X31+64]
	378 Move X21, [X31+72]
	379 Move X24, [X31+48]
	380 Move X23, [X31+56]
	381 Move X26, [X31+32]
	382 Move X25, [X31+40]
	383 Move X28, [X31+16]
	384 Move X27, [X31+24]
	385 Move X29, [X31+96]
	386 Move X30, [X31+104]
	387 Return X0
	388 Call 0x1C17F20
	389 Call 0x1C17F20
	390 Call 0x1C17F20
	391 Move X0, X21
	392 Call 0x1C17F18
	393 Call 0x1C17F20
	394 Call 0x3EB2B20
	395 Move X19, X0
	396 NotImplemented "Instruction CMP not yet implemented."
	397 Move X0, X19
	398 Call 0x3EB2AD0
	399 Move X21, [X0]
	400 Call 0x3EB2AE0
	401 Move X21, X31
	402 Move X19, X0
	403 Compare X20, 0
	404 JumpIfEqual {428}
	405 Move X10, 0x1395000
	406 Move X8, [X20]
	407 Move X10, [X10+3584]
	408 NotImplemented "Instruction LDRH not yet implemented."
	409 Move X1, [X10]
	410 Compare X9, 0
	411 JumpIfEqual {418}
	412 Move X10, [X8+176]
	413 Add X10, X10, 8
	414 NotImplemented "Instruction LDUR not yet implemented."
	415 NotImplemented "Instruction CMP not yet implemented."
	416 Subtract X9, X9, 1
	417 Add X10, X10, 16
	418 Move X0, X20
	419 Move W2, W31
	420 Call 0x1C5D788
	421 NotImplemented "Instruction LDRSW not yet implemented."
	422 Add X8, X8, X9
	423 Add X0, X8, 312
	424 Move X8, [X0]
	425 Move X1, [X0+8]
	426 Move X0, X20
	427 NotImplemented "Instruction BLR not yet implemented."
	428 Compare X21, 0
	429 JumpIfEqual {472}
	430 Move X0, X21
	431 Call 0x1C17F18
	432 Move X19, X0
	433 Move W28, W31
	434 Move X19, X0
	435 Move W28, W31
	436 Move W25, W31
	437 Move X19, X0
	438 NotImplemented "Instruction CMP not yet implemented."
	439 Move X0, X19
	440 Call 0x3EB2AD0
	441 Move X21, [X0]
	442 Call 0x3EB2AE0
	443 Move X21, X31
	444 Move X19, X0
	445 Compare X20, 0
	446 JumpIfEqual {470}
	447 Move X10, 0x1395000
	448 Move X8, [X20]
	449 Move X10, [X10+3584]
	450 NotImplemented "Instruction LDRH not yet implemented."
	451 Move X1, [X10]
	452 Compare X9, 0
	453 JumpIfEqual {460}
	454 Move X10, [X8+176]
	455 Add X10, X10, 8
	456 NotImplemented "Instruction LDUR not yet implemented."
	457 NotImplemented "Instruction CMP not yet implemented."
	458 Subtract X9, X9, 1
	459 Add X10, X10, 16
	460 Move X0, X20
	461 Move W2, W31
	462 Call 0x1C5D788
	463 NotImplemented "Instruction LDRSW not yet implemented."
	464 Add X8, X8, X9
	465 Add X0, X8, 312
	466 Move X8, [X0]
	467 Move X1, [X0+8]
	468 Move X0, X20
	469 NotImplemented "Instruction BLR not yet implemented."
	470 Compare X21, 0
	471 JumpIfNotEqual {474}
	472 Move X0, X19
	473 Call 0x1D2D690
	474 Move X0, X21
	475 Call 0x1C17F18
	476 Call 0x1991590

Method: System.Boolean AreEqualityComparersEqual(System.Collections.Generic.HashSet`1<T> set1, System.Collections.Generic.HashSet`1<T> set2)

Disassembly:
	0x02D5F2BC LDR X23, [X9 + 0x110]
	0x02D5F2C0 CBNZ W10, 0x2D5F2CC
	0x02D5F2C4 MOV X0, X8
	0x02D5F2C8 BL 0x1C16DFC
	0x02D5F2CC MOV X0, X23
	0x02D5F2D0 MOV X1, X31
	0x02D5F2D4 BL 0x338C698
	0x02D5F2D8 CBZ X22, 0x2D5F4CC
	0x02D5F2DC ADRP X8, 0x13BE000
	0x02D5F2E0 LDR X8, [X8 + 0x2D0]
	0x02D5F2E4 MOV X2, X0
	0x02D5F2E8 MOV X0, X22
	0x02D5F2EC MOV X3, X31
	0x02D5F2F0 LDR X1, [X8]
	0x02D5F2F4 BL 0x32A9678
	0x02D5F2F8 LDR X8, [X19 + 0x20]
	0x02D5F2FC MOV X22, X0
	0x02D5F300 LDR X8, [X8 + 0xC0]
	0x02D5F304 LDR X23, [X8 + 0x20]
	0x02D5F308 LDRB W8, [X23 + 0x135]
	0x02D5F30C TBNZ X8, 0x0, 0x2D5F31C
	0x02D5F310 MOV X0, X23
	0x02D5F314 BL 0x1C5C684
	0x02D5F318 MOV X23, X0
	0x02D5F31C CBZ X22, 0x2D5F334

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X0, 0
	006 JumpIfEqual {39}
	007 Move X21, X0
	008 Move X0, [X2+32]
	009 Move X20, X2
	010 Move X19, X1
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Compare X19, 0
	018 JumpIfEqual {39}
	019 Move X0, [X20+32]
	020 Move X20, [X21+48]
	021 Move W8, [X0+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {27}
	026 Call 0x1C5D684
	027 Compare X20, 0
	028 JumpIfEqual {39}
	029 Move X8, [X20]
	030 Move X1, [X19+48]
	031 Move X0, X20
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X3, [X8+312]
	035 Move X2, [X8+320]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 CallNoReturn X3
	039 Call 0x1C17F20

Method: System.Int32 InternalGetHashCode(T item)

Disassembly:
	0x02D5F320 MOV X0, X22
	0x02D5F324 MOV X1, X23
	0x02D5F328 BL 0x1C16E00
	0x02D5F32C CBNZ X0, 0x2D5F338
	0x02D5F330 B 0x2D5F4D0
	0x02D5F334 MOV X0, X31
	0x02D5F338 STR X0, [X20 + 0x30]
	0x02D5F33C LDR X8, [X19 + 0x20]
	0x02D5F340 LDR X8, [X8 + 0xC0]
	0x02D5F344 LDR X23, [X8 + 0x20]
	0x02D5F348 LDRB W8, [X23 + 0x135]
	0x02D5F34C TBNZ X8, 0x0, 0x2D5F35C
	0x02D5F350 MOV X0, X23
	0x02D5F354 BL 0x1C5C684
	0x02D5F358 MOV X23, X0
	0x02D5F35C CBZ X22, 0x2D5F370
	0x02D5F360 MOV X0, X22
	0x02D5F364 MOV X1, X23
	0x02D5F368 BL 0x1C16E00
	0x02D5F36C CBZ X0, 0x2D5F4D0
	0x02D5F370 MOVN W8, 0x0
	0x02D5F374 STR W8, [X20 + 0x28]
	0x02D5F378 CBZ W21, 0x2D5F48C
	0x02D5F37C ADRP X8, 0x1395000
	0x02D5F380 LDR X8, [X8 + 0xE58]
	0x02D5F384 MOV W1, W21
	0x02D5F388 LDR X0, [X8]
	0x02D5F38C BL 0x1C16D6C
	0x02D5F390 STR X0, [X20 + 0x10]
	0x02D5F394 LDR X8, [X19 + 0x20]
	0x02D5F398 LDR X8, [X8 + 0xC0]
	0x02D5F39C LDR X0, [X8 + 0x118]
	0x02D5F3A0 LDRB W8, [X0 + 0x135]
	0x02D5F3A4 TBNZ X8, 0x0, 0x2D5F3AC
	0x02D5F3A8 BL 0x1C5C684
	0x02D5F3AC MOV W1, W21
	0x02D5F3B0 BL 0x1C16D6C
	0x02D5F3B4 STR X0, [X20 + 0x18]
	0x02D5F3B8 LDR X8, [X19 + 0x20]
	0x02D5F3BC LDR X0, [X24]
	0x02D5F3C0 LDR X21, [X20 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, [X0+48]
	005 Compare X19, 0
	006 JumpIfEqual {46}
	007 Move X8, [X2+32]
	008 Move X20, X1
	009 Move X8, [X8+192]
	010 Move X1, [X8+32]
	011 Move W8, [X1+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X1
	017 Call 0x1C5D684
	018 Move X1, X0
	019 Move X8, [X19]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Compare X9, 0
	022 JumpIfEqual {29}
	023 Move X10, [X8+176]
	024 Add X10, X10, 8
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Subtract X9, X9, 1
	028 Add X10, X10, 16
	029 Move W2, 1
	030 Move X0, X19
	031 Call 0x1C5D788
	032 Move W9, [X10]
	033 Add W9, W9, 1
	034 Add X8, X8, W9
	035 Add X0, X8, 312
	036 Move X8, [X0]
	037 Move X2, [X0+8]
	038 And X1, X20, 0xFFFF
	039 Move X0, X19
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 And W0, W0, 0x7FFFFFFF
	044 Move X30, [X31+32]
	045 Return X0
	046 Call 0x1C17F20

