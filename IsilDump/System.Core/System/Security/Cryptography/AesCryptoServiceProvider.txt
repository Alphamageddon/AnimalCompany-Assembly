Type: System.Security.Cryptography.AesCryptoServiceProvider

Method: System.Void .ctor()

Disassembly:
	0x035DAF60 B.CS 0x35DC934
	0x035DAF64 UBFM W25, W9, 0x8, 0xF
	0x035DAF68 CMP W25, W15
	0x035DAF6C B.CS 0x35DC934
	0x035DAF70 AND W27, W3, 0xFF
	0x035DAF74 CMP W27, W16
	0x035DAF78 B.CS 0x35DC934
	0x035DAF7C CMP W17, 0x9
	0x035DAF80 B.LS 0x35DC934
	0x035DAF84 UBFM W26, W6, 0x18, 0x1F
	0x035DAF88 CMP W26, W13
	0x035DAF8C B.CS 0x35DC934
	0x035DAF90 UBFM W28, W9, 0x10, 0x17
	0x035DAF94 CMP W28, W14
	0x035DAF98 B.CS 0x35DC934
	0x035DAF9C UBFM W29, W3, 0x8, 0xF
	0x035DAFA0 CMP W29, W15
	0x035DAFA4 B.CS 0x35DC934
	0x035DAFA8 AND W21, W4, 0xFF
	0x035DAFAC CMP W21, W16
	0x035DAFB0 B.CS 0x35DC934
	0x035DAFB4 CMP W17, 0xA
	0x035DAFB8 B.LS 0x35DC934
	0x035DAFBC UBFM W30, W9, 0x18, 0x1F
	0x035DAFC0 CMP W30, W13

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE07000
	006 Move X21, 0xB27000
	007 Move W8, [X20+589]
	008 Move X21, [X21+3568]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB27000
	015 Move X0, [X0+3568]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+589], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X1, X31
	026 Call Aes..ctor, X0
	027 Move W8, 8
	028 Move [X19+20], W8
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 

Method: System.Void GenerateIV()

Disassembly:
	0x035DAFC4 B.CS 0x35DC934
	0x035DAFC8 UBFM W23, W3, 0x10, 0x17
	0x035DAFCC CMP W23, W14
	0x035DAFD0 B.CS 0x35DC934
	0x035DAFD4 UBFM W9, W4, 0x8, 0xF
	0x035DAFD8 CMP W9, W15
	0x035DAFDC B.CS 0x35DC934
	0x035DAFE0 AND W0, W6, 0xFF
	0x035DAFE4 CMP W0, W16

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+16]
	004 Move X19, X0
	005 Move X1, X31
	006 NotImplemented "Instruction SBFM not yet implemented."
	007 Call KeyBuilder.IV, X0
	008 Move [X19+24], X0
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return 

Method: System.Void GenerateKey()

Disassembly:
	0x035DAFE8 B.CS 0x35DC934
	0x035DAFEC CMP W17, 0xB
	0x035DAFF0 B.LS 0x35DC934
	0x035DAFF4 ADD X1, X8, W1, 0x2, UXTW
	0x035DAFF8 ADD X2, X10, W2, 0x2, UXTW
	0x035DAFFC ADD X3, X11, W5, 0x2, UXTW
	0x035DB000 LDR W1, [X1 + 0x20]
	0x035DB004 LDR W2, [X2 + 0x20]
	0x035DB008 LDR W3, [X3 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+56]
	004 Move X19, X0
	005 Move X1, X31
	006 NotImplemented "Instruction SBFM not yet implemented."
	007 Call KeyBuilder.Key, X0
	008 Move [X19+32], X0
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return 

Method: System.Security.Cryptography.ICryptoTransform CreateDecryptor(System.Byte[] key, System.Byte[] iv)

Disassembly:
	0x035DB00C ADD X4, X12, W22, 0x2, UXTW
	0x035DB010 LDR W4, [X4 + 0x20]
	0x035DB014 LDR W5, [X20 + 0x40]
	0x035DB018 EOR W1, W2, W1, 0x0
	0x035DB01C EOR W1, W1, W3, 0x0
	0x035DB020 EOR W1, W1, W4, 0x0
	0x035DB024 EOR W3, W1, W5, 0x0
	0x035DB028 UBFM W1, W3, 0x18, 0x1F
	0x035DB02C CMP W1, W13
	0x035DB030 B.CS 0x35DC934
	0x035DB034 ADD X2, X8, W7, 0x2, UXTW
	0x035DB038 ADD X4, X10, W24, 0x2, UXTW
	0x035DB03C ADD X5, X11, W25, 0x2, UXTW
	0x035DB040 LDR W2, [X2 + 0x20]
	0x035DB044 LDR W4, [X4 + 0x20]
	0x035DB048 LDR W5, [X5 + 0x20]
	0x035DB04C ADD X6, X12, W27, 0x2, UXTW
	0x035DB050 LDR W6, [X6 + 0x20]
	0x035DB054 LDR W7, [X20 + 0x44]
	0x035DB058 EOR W2, W4, W2, 0x0
	0x035DB05C EOR W2, W2, W5, 0x0
	0x035DB060 EOR W2, W2, W6, 0x0
	0x035DB064 EOR W4, W2, W7, 0x0
	0x035DB068 UBFM W2, W4, 0x10, 0x17
	0x035DB06C CMP W2, W14
	0x035DB070 B.CS 0x35DC934
	0x035DB074 ADD X5, X8, W26, 0x2, UXTW
	0x035DB078 ADD X6, X10, W28, 0x2, UXTW
	0x035DB07C ADD X7, X11, W29, 0x2, UXTW
	0x035DB080 LDR W5, [X5 + 0x20]
	0x035DB084 LDR W6, [X6 + 0x20]
	0x035DB088 LDR W7, [X7 + 0x20]
	0x035DB08C ADD X19, X12, W21, 0x2, UXTW
	0x035DB090 LDR W19, [X19 + 0x20]
	0x035DB094 LDR W21, [X20 + 0x48]
	0x035DB098 EOR W5, W6, W5, 0x0
	0x035DB09C EOR W5, W5, W7, 0x0
	0x035DB0A0 EOR W5, W5, W19, 0x0
	0x035DB0A4 EOR W6, W5, W21, 0x0
	0x035DB0A8 UBFM W5, W6, 0x8, 0xF
	0x035DB0AC CMP W5, W15
	0x035DB0B0 B.CS 0x35DC934
	0x035DB0B4 ADD X7, X8, W30, 0x2, UXTW
	0x035DB0B8 ADD X19, X10, W23, 0x2, UXTW
	0x035DB0BC ADD X9, X11, W9, 0x2, UXTW
	0x035DB0C0 LDR W7, [X7 + 0x20]
	0x035DB0C4 LDR W19, [X19 + 0x20]
	0x035DB0C8 LDR W9, [X9 + 0x20]
	0x035DB0CC ADD X0, X12, W0, 0x2, UXTW
	0x035DB0D0 LDR W0, [X0 + 0x20]
	0x035DB0D4 LDR W21, [X20 + 0x4C]
	0x035DB0D8 EOR W7, W19, W7, 0x0
	0x035DB0DC EOR W9, W7, W9, 0x0
	0x035DB0E0 EOR W9, W9, W0, 0x0
	0x035DB0E4 EOR W9, W9, W21, 0x0
	0x035DB0E8 AND W22, W9, 0xFF
	0x035DB0EC CMP W22, W16
	0x035DB0F0 B.CS 0x35DC934
	0x035DB0F4 CMP W17, 0xC
	0x035DB0F8 B.LS 0x35DC934

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE06000
	007 Move W8, [X22+590]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xB5F000
	016 Move X0, [X0+56]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+590], W8
	020 Move X8, [X21]
	021 Move X0, X21
	022 Move X9, [X8+568]
	023 Move X1, [X8+576]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, [X21]
	027 Move X0, X21
	028 Move X9, [X8+440]
	029 Move X1, [X8+448]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X8, 0xB5F000
	033 Move X8, [X8+56]
	034 Move X0, [X8]
	035 Call 0x1C17F10
	036 Move X1, X21
	037 Move W2, W31
	038 Move X3, X20
	039 Move X4, X19
	040 Move X22, X0
	041 Call AesTransform..ctor, X0, X1, X2, X3, X4
	042 Move X0, X22
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Return X0
	049 Move X0, 0xB46000
	050 Move X0, [X0+3296]
	051 Call 0x1C17D08
	052 Call 0x1C17F10
	053 Move X19, X0
	054 Move X0, 0xB5F000
	055 Move X0, [X0+64]
	056 Call 0x1C17D08
	057 Move X1, X0
	058 Move X0, X19
	059 Move X2, X31
	060 Call CryptographicException..ctor, X0, X1
	061 Move X0, 0xB5F000
	062 Move X0, [X0+72]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X19
	066 Call 0x1C17DEC

Method: System.Security.Cryptography.ICryptoTransform CreateEncryptor(System.Byte[] key, System.Byte[] iv)

Disassembly:
	0x035DB7F0 B.LS 0x35DC934
	0x035DB7F4 UBFM W26, W6, 0x18, 0x1F
	0x035DB7F8 CMP W26, W13
	0x035DB7FC B.CS 0x35DC934
	0x035DB800 UBFM W28, W9, 0x10, 0x17
	0x035DB804 CMP W28, W14
	0x035DB808 B.CS 0x35DC934
	0x035DB80C UBFM W29, W3, 0x8, 0xF
	0x035DB810 CMP W29, W15
	0x035DB814 B.CS 0x35DC934
	0x035DB818 AND W21, W4, 0xFF
	0x035DB81C CMP W21, W16
	0x035DB820 B.CS 0x35DC934
	0x035DB824 CMP W17, 0x1E
	0x035DB828 B.LS 0x35DC934
	0x035DB82C UBFM W30, W9, 0x18, 0x1F
	0x035DB830 CMP W30, W13
	0x035DB834 B.CS 0x35DC934
	0x035DB838 UBFM W23, W3, 0x10, 0x17
	0x035DB83C CMP W23, W14
	0x035DB840 B.CS 0x35DC934
	0x035DB844 UBFM W9, W4, 0x8, 0xF
	0x035DB848 CMP W9, W15
	0x035DB84C B.CS 0x35DC934
	0x035DB850 AND W0, W6, 0xFF
	0x035DB854 CMP W0, W16
	0x035DB858 B.CS 0x35DC934
	0x035DB85C CMP W17, 0x1F
	0x035DB860 B.LS 0x35DC934
	0x035DB864 ADD X1, X8, W1, 0x2, UXTW
	0x035DB868 ADD X2, X10, W2, 0x2, UXTW
	0x035DB86C ADD X3, X11, W5, 0x2, UXTW
	0x035DB870 LDR W1, [X1 + 0x20]
	0x035DB874 LDR W2, [X2 + 0x20]
	0x035DB878 LDR W3, [X3 + 0x20]
	0x035DB87C ADD X4, X12, W22, 0x2, UXTW
	0x035DB880 LDR W4, [X4 + 0x20]
	0x035DB884 LDR W5, [X20 + 0x90]
	0x035DB888 EOR W1, W2, W1, 0x0
	0x035DB88C EOR W1, W1, W3, 0x0
	0x035DB890 EOR W1, W1, W4, 0x0
	0x035DB894 EOR W3, W1, W5, 0x0
	0x035DB898 UBFM W1, W3, 0x18, 0x1F
	0x035DB89C CMP W1, W13
	0x035DB8A0 B.CS 0x35DC934
	0x035DB8A4 ADD X2, X8, W7, 0x2, UXTW
	0x035DB8A8 ADD X4, X10, W24, 0x2, UXTW
	0x035DB8AC ADD X5, X11, W25, 0x2, UXTW
	0x035DB8B0 LDR W2, [X2 + 0x20]
	0x035DB8B4 LDR W4, [X4 + 0x20]
	0x035DB8B8 LDR W5, [X5 + 0x20]
	0x035DB8BC ADD X6, X12, W27, 0x2, UXTW
	0x035DB8C0 LDR W6, [X6 + 0x20]
	0x035DB8C4 LDR W7, [X20 + 0x94]
	0x035DB8C8 EOR W2, W4, W2, 0x0
	0x035DB8CC EOR W2, W2, W5, 0x0
	0x035DB8D0 EOR W2, W2, W6, 0x0
	0x035DB8D4 EOR W4, W2, W7, 0x0
	0x035DB8D8 UBFM W2, W4, 0x10, 0x17
	0x035DB8DC CMP W2, W14

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE06000
	007 Move W8, [X22+591]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xB5F000
	016 Move X0, [X0+56]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+591], W8
	020 Move X8, [X21]
	021 Move X0, X21
	022 Move X9, [X8+568]
	023 Move X1, [X8+576]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, [X21]
	027 Move X0, X21
	028 Move X9, [X8+440]
	029 Move X1, [X8+448]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X8, 0xB5F000
	033 Move X8, [X8+56]
	034 Move X0, [X8]
	035 Call 0x1C17F10
	036 Move W2, 1
	037 Move X1, X21
	038 Move X3, X20
	039 Move X4, X19
	040 Move X22, X0
	041 Call AesTransform..ctor, X0, X1, X2, X3, X4
	042 Move X0, X22
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Return X0
	049 Move X0, 0xB46000
	050 Move X0, [X0+3296]
	051 Call 0x1C17D08
	052 Call 0x1C17F10
	053 Move X19, X0
	054 Move X0, 0xB5F000
	055 Move X0, [X0+64]
	056 Call 0x1C17D08
	057 Move X1, X0
	058 Move X0, X19
	059 Move X2, X31
	060 Call CryptographicException..ctor, X0, X1
	061 Move X0, 0xB5F000
	062 Move X0, [X0+112]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X19
	066 Call 0x1C17DEC

Method: System.Byte[] get_IV()

Disassembly:
	0x035DB8E0 B.CS 0x35DC934
	0x035DB8E4 ADD X5, X8, W26, 0x2, UXTW

ISIL:
	001 Move X1, X31
	002 Call SymmetricAlgorithm.get_IV, X0
	003 Return X0

Method: System.Void set_IV(System.Byte[] value)

Disassembly:
	0x035DB8E8 ADD X6, X10, W28, 0x2, UXTW
	0x035DB8EC ADD X7, X11, W29, 0x2, UXTW

ISIL:
	001 Move X2, X31
	002 Call SymmetricAlgorithm.set_IV, X0, X1
	003 Return 

Method: System.Byte[] get_Key()

Disassembly:
	0x035DB8F0 LDR W5, [X5 + 0x20]
	0x035DB8F4 LDR W6, [X6 + 0x20]

ISIL:
	001 Move X1, X31
	002 Call SymmetricAlgorithm.get_Key, X0
	003 Return X0

Method: System.Void set_Key(System.Byte[] value)

Disassembly:
	0x035DB8F8 LDR W7, [X7 + 0x20]
	0x035DB8FC ADD X19, X12, W21, 0x2, UXTW

ISIL:
	001 Move X2, X31
	002 Call SymmetricAlgorithm.set_Key, X0, X1
	003 Return 

Method: System.Int32 get_KeySize()

Disassembly:
	0x035DB900 LDR W19, [X19 + 0x20]
	0x035DB904 LDR W21, [X20 + 0x98]

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: System.Void set_KeySize(System.Int32 value)

Disassembly:
	0x035DB908 EOR W5, W6, W5, 0x0
	0x035DB90C EOR W5, W5, W7, 0x0

ISIL:
	001 Move X2, X31
	002 Call SymmetricAlgorithm.set_KeySize, X0, X1
	003 Return 

Method: System.Int32 get_FeedbackSize()

Disassembly:
	0x035DB910 EOR W5, W5, W19, 0x0
	0x035DB914 EOR W6, W5, W21, 0x0

ISIL:
	001 Move W0, [X0+20]
	002 Return X0

Method: System.Security.Cryptography.CipherMode get_Mode()

Disassembly:
	0x035DB918 UBFM W5, W6, 0x8, 0xF
	0x035DB91C CMP W5, W15

ISIL:
	001 Move W0, [X0+60]
	002 Return X0

Method: System.Void set_Mode(System.Security.Cryptography.CipherMode value)

Disassembly:
	0x035DB920 B.CS 0x35DC934
	0x035DB924 ADD X7, X8, W30, 0x2, UXTW
	0x035DB928 ADD X19, X10, W23, 0x2, UXTW
	0x035DB92C ADD X9, X11, W9, 0x2, UXTW
	0x035DB930 LDR W7, [X7 + 0x20]
	0x035DB934 LDR W19, [X19 + 0x20]
	0x035DB938 LDR W9, [X9 + 0x20]
	0x035DB93C ADD X0, X12, W0, 0x2, UXTW
	0x035DB940 LDR W0, [X0 + 0x20]
	0x035DB944 LDR W21, [X20 + 0x9C]
	0x035DB948 EOR W7, W19, W7, 0x0
	0x035DB94C EOR W9, W7, W9, 0x0
	0x035DB950 EOR W9, W9, W0, 0x0
	0x035DB954 EOR W9, W9, W21, 0x0
	0x035DB958 AND W22, W9, 0xFF
	0x035DB95C CMP W22, W16
	0x035DB960 B.CS 0x35DC934
	0x035DB964 CMP W17, 0x20
	0x035DB968 B.LS 0x35DC934
	0x035DB96C UBFM W7, W4, 0x18, 0x1F
	0x035DB970 CMP W7, W13
	0x035DB974 B.CS 0x35DC934
	0x035DB978 UBFM W24, W6, 0x10, 0x17

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move X2, X31
	003 Call SymmetricAlgorithm.set_Mode, X0, X1
	004 Return 
	005 Move [X31-16], X30
	006 Move [X31-8], X19
	007 Move X0, 0xB46000
	008 Move X0, [X0+3296]
	009 Call 0x1C17D08
	010 Call 0x1C17F10
	011 Move X19, X0
	012 Move X0, 0xB5F000
	013 Move X0, [X0+120]
	014 Call 0x1C17D08
	015 Move X1, X0
	016 Move X0, X19
	017 Move X2, X31
	018 Call CryptographicException..ctor, X0, X1
	019 Move X0, 0xB5F000
	020 Move X0, [X0+128]
	021 Call 0x1C17D08
	022 Move X1, X0
	023 Move X0, X19
	024 Call 0x1C17DEC

Method: System.Security.Cryptography.PaddingMode get_Padding()

Disassembly:
	0x035DB97C CMP W24, W14
	0x035DB980 B.CS 0x35DC934

ISIL:
	001 Move W0, [X0+64]
	002 Return X0

Method: System.Void set_Padding(System.Security.Cryptography.PaddingMode value)

Disassembly:
	0x035DB984 UBFM W25, W9, 0x8, 0xF
	0x035DB988 CMP W25, W15

ISIL:
	001 Move X2, X31
	002 Call SymmetricAlgorithm.set_Padding, X0, X1
	003 Return 

Method: System.Security.Cryptography.ICryptoTransform CreateDecryptor()

Disassembly:
	0x035DB98C B.CS 0x35DC934
	0x035DB990 AND W27, W3, 0xFF
	0x035DB994 CMP W27, W16
	0x035DB998 B.CS 0x35DC934
	0x035DB99C CMP W17, 0x21
	0x035DB9A0 B.LS 0x35DC934
	0x035DB9A4 UBFM W26, W6, 0x18, 0x1F
	0x035DB9A8 CMP W26, W13
	0x035DB9AC B.CS 0x35DC934
	0x035DB9B0 UBFM W28, W9, 0x10, 0x17
	0x035DB9B4 CMP W28, W14
	0x035DB9B8 B.CS 0x35DC934
	0x035DB9BC UBFM W29, W3, 0x8, 0xF
	0x035DB9C0 CMP W29, W15
	0x035DB9C4 B.CS 0x35DC934
	0x035DB9C8 AND W21, W4, 0xFF
	0x035DB9CC CMP W21, W16
	0x035DB9D0 B.CS 0x35DC934
	0x035DB9D4 CMP W17, 0x22
	0x035DB9D8 B.LS 0x35DC934

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Move X19, X0
	006 Move X9, [X8+488]
	007 Move X1, [X8+496]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move X8, [X19]
	010 Move X20, X0
	011 Move X0, X19
	012 Move X9, [X8+456]
	013 Move X1, [X8+464]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move X8, [X19]
	016 Move X2, X0
	017 Move X0, X19
	018 Move X1, X20
	019 Move X4, [X8+680]
	020 Move X3, [X8+688]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 CallNoReturn X4

Method: System.Security.Cryptography.ICryptoTransform CreateEncryptor()

Disassembly:
	0x035DB9DC UBFM W30, W9, 0x18, 0x1F
	0x035DB9E0 CMP W30, W13
	0x035DB9E4 B.CS 0x35DC934
	0x035DB9E8 UBFM W23, W3, 0x10, 0x17
	0x035DB9EC CMP W23, W14
	0x035DB9F0 B.CS 0x35DC934
	0x035DB9F4 UBFM W9, W4, 0x8, 0xF
	0x035DB9F8 CMP W9, W15
	0x035DB9FC B.CS 0x35DC934
	0x035DBA00 AND W0, W6, 0xFF
	0x035DBA04 CMP W0, W16
	0x035DBA08 B.CS 0x35DC934
	0x035DBA0C CMP W17, 0x23
	0x035DBA10 B.LS 0x35DC934
	0x035DBA14 ADD X1, X8, W1, 0x2, UXTW
	0x035DBA18 ADD X2, X10, W2, 0x2, UXTW
	0x035DBA1C ADD X3, X11, W5, 0x2, UXTW
	0x035DBA20 LDR W1, [X1 + 0x20]
	0x035DBA24 LDR W2, [X2 + 0x20]
	0x035DBA28 LDR W3, [X3 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Move X19, X0
	006 Move X9, [X8+488]
	007 Move X1, [X8+496]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move X8, [X19]
	010 Move X20, X0
	011 Move X0, X19
	012 Move X9, [X8+456]
	013 Move X1, [X8+464]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move X8, [X19]
	016 Move X2, X0
	017 Move X0, X19
	018 Move X1, X20
	019 Move X4, [X8+648]
	020 Move X3, [X8+656]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 CallNoReturn X4

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x035DBA2C ADD X4, X12, W22, 0x2, UXTW
	0x035DBA30 LDR W4, [X4 + 0x20]
	0x035DBA34 LDR W5, [X20 + 0xA0]

ISIL:
	001 And W1, W1, 1
	002 Move X2, X31
	003 Call SymmetricAlgorithm.Dispose, X0, X1
	004 Return 

