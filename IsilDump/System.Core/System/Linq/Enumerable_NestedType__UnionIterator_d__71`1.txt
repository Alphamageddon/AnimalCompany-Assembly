Type: System.Linq.Enumerable/<UnionIterator>d__71`1

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x0297B19C CMP X11, X1
	0x0297B1A0 B.EQ 0x297B1C0
	0x0297B1A4 SUBS X9, X9, 0x1
	0x0297B1A8 ADD X10, X10, 0x10
	0x0297B1AC B.NE 0x297B198
	0x0297B1B0 MOV X0, X23
	0x0297B1B4 MOV W2, W31
	0x0297B1B8 BL 0x1C5C788
	0x0297B1BC B 0x297B1CC
	0x0297B1C0 LDRSW X9, [X10]
	0x0297B1C4 ADD X8, X8, X9, 0x4, LSL
	0x0297B1C8 ADD X0, X8, 0x138
	0x0297B1CC LDP X8, X1, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+32], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x0297B1D0 MOV X0, X23
	0x0297B1D4 BLR X8
	0x0297B1D8 TBZ X0, 0x0, 0x297B384
	0x0297B1DC LDP X8, X0, [X29 - 0x28]
	0x0297B1E0 LDR X8, [X8 + 0x20]
	0x0297B1E4 LDR X8, [X8 + 0xC0]
	0x0297B1E8 LDR X8, [X8]
	0x0297B1EC LDR X8, [X8 + 0x80]
	0x0297B1F0 ADD X1, X8, 0x140
	0x0297B1F4 BL 0x1C16D18
	0x0297B1F8 LDR X23, [X0]
	0x0297B1FC CBZ X23, 0x297B3E4
	0x0297B200 LDUR X8, [X29 - 0x28]

ISIL:
	001 Move W8, [X0+16]
	002 Add W8, W8, 4
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X9, -31772672
	005 Add X9, X9, 3258
	006 NotImplemented "Instruction ADR not yet implemented."
	007 Move W11, [X9]
	008 Add X10, X10, X11
	009 CallNoReturn X10
	010 Call 0x297B7EC, X0
	011 Return 
	012 Call 0x297B73C, X0
	013 Return 
	014 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x0297B204 LDR X8, [X8 + 0x20]
	0x0297B208 LDR X8, [X8 + 0xC0]
	0x0297B20C LDR X1, [X8 + 0x40]
	0x0297B210 LDRB W8, [X1 + 0x135]
	0x0297B214 TBNZ X8, 0x0, 0x297B224
	0x0297B218 MOV X0, X1
	0x0297B21C BL 0x1C5C684
	0x0297B220 MOV X1, X0
	0x0297B224 LDR X8, [X23]
	0x0297B228 LDRH W9, [X8 + 0x12E]
	0x0297B22C CBZ X9, 0x297B250
	0x0297B230 LDR X10, [X8 + 0xB0]
	0x0297B234 ADD X10, X10, 0x8
	0x0297B238 LDUR X11, [X10 - 0x8]
	0x0297B23C CMP X11, X1
	0x0297B240 B.EQ 0x297B260
	0x0297B244 SUBS X9, X9, 0x1
	0x0297B248 ADD X10, X10, 0x10
	0x0297B24C B.NE 0x297B238
	0x0297B250 MOV X0, X23
	0x0297B254 MOV W2, W31
	0x0297B258 BL 0x1C5C788
	0x0297B25C B 0x297B26C
	0x0297B260 LDRSW X9, [X10]
	0x0297B264 ADD X8, X8, X9, 0x4, LSL
	0x0297B268 ADD X0, X8, 0x138
	0x0297B26C STUR X20, [X29 - 0x18]
	0x0297B270 LDR X1, [X0 + 0x8]
	0x0297B274 LDP X0, X8, [X1 + 0x8]
	0x0297B278 SUB X3, X29, 0x18
	0x0297B27C MOV X2, X23
	0x0297B280 MOV X4, X20
	0x0297B284 BLR X8
	0x0297B288 MOV X0, X22
	0x0297B28C MOV X1, X20
	0x0297B290 MOV X2, X19
	0x0297B294 BL 0x3EB1AC0
	0x0297B298 LDP X8, X0, [X29 - 0x28]
	0x0297B29C LDR X8, [X8 + 0x20]
	0x0297B2A0 LDR X8, [X8 + 0xC0]
	0x0297B2A4 LDR X8, [X8]
	0x0297B2A8 LDR X8, [X8 + 0x80]
	0x0297B2AC ADD X1, X8, 0x120
	0x0297B2B0 BL 0x1C16D18
	0x0297B2B4 LDR X23, [X0]
	0x0297B2B8 MOV X0, X21
	0x0297B2BC MOV X1, X22
	0x0297B2C0 MOV X2, X19
	0x0297B2C4 BL 0x3EB1AC0
	0x0297B2C8 CBZ X23, 0x297B3E8
	0x0297B2CC LDUR X8, [X29 - 0x28]
	0x0297B2D0 LDR X8, [X8 + 0x20]
	0x0297B2D4 LDR X8, [X8 + 0xC0]
	0x0297B2D8 LDR X9, [X8 + 0x50]
	0x0297B2DC LDR W10, [X9 + 0x28]
	0x0297B2E0 MOV X9, X21
	0x0297B2E4 TBNZ X10, 0x1F, 0x297B2EC
	0x0297B2E8 LDR X9, [X21]
	0x0297B2EC LDR X1, [X8 + 0x58]
	0x0297B2F0 LDR X0, [X1]
	0x0297B2F4 STUR X9, [X29 - 0x18]
	0x0297B2F8 LDR X8, [X1 + 0x10]
	0x0297B2FC SUB X3, X29, 0x18
	0x0297B300 SUB X4, X29, 0xC
	0x0297B304 MOV X2, X23
	0x0297B308 BLR X8
	0x0297B30C LDURB W8, [X29 - 0xC]
	0x0297B310 CBZ W8, 0x297B15C
	0x0297B314 MOV X0, X20
	0x0297B318 MOV X1, X22
	0x0297B31C MOV X2, X19
	0x0297B320 BL 0x3EB1AC0
	0x0297B324 LDP X8, X0, [X29 - 0x28]
	0x0297B328 LDR X8, [X8 + 0x20]
	0x0297B32C LDR X8, [X8 + 0xC0]
	0x0297B330 LDR X8, [X8]
	0x0297B334 LDR X8, [X8 + 0x80]
	0x0297B338 ADD X1, X8, 0x20
	0x0297B33C MOV X2, X20
	0x0297B340 MOV W3, W19
	0x0297B344 BL 0x1C16D1C
	0x0297B348 LDP X8, X20, [X29 - 0x28]
	0x0297B34C LDR X8, [X8 + 0x20]
	0x0297B350 LDR X8, [X8 + 0xC0]
	0x0297B354 LDR X8, [X8]
	0x0297B358 LDR X19, [X8 + 0x80]
	0x0297B35C MOVZ W1, 0x4
	0x0297B360 MOV X0, X19
	0x0297B364 BL 0x1C16D14
	0x0297B368 MOV X0, X20
	0x0297B36C MOV X1, X19
	0x0297B370 BL 0x1C16D18
	0x0297B374 MOVZ W8, 0x2
	0x0297B378 STR W8, [X0]
	0x0297B37C MOVZ W0, 0x1
	0x0297B380 B 0x297B478
	0x0297B384 LDP X8, X0, [X29 - 0x28]
	0x0297B388 LDR X8, [X8 + 0x20]
	0x0297B38C LDR X8, [X8 + 0xC0]
	0x0297B390 LDR X1, [X8 + 0x10]
	0x0297B394 LDR X8, [X1]
	0x0297B398 BLR X8
	0x0297B39C LDP X8, X20, [X29 - 0x28]
	0x0297B3A0 LDR X8, [X8 + 0x20]
	0x0297B3A4 LDR X8, [X8 + 0xC0]
	0x0297B3A8 LDR X8, [X8]
	0x0297B3AC LDR X8, [X8 + 0x80]
	0x0297B3B0 ADD X19, X8, 0x140
	0x0297B3B4 MOVZ W1, 0x8
	0x0297B3B8 MOV X0, X19
	0x0297B3BC BL 0x1C16D14
	0x0297B3C0 MOV X0, X20
	0x0297B3C4 MOV X1, X19
	0x0297B3C8 BL 0x1C16D18
	0x0297B3CC MOV X8, X0
	0x0297B3D0 MOV W0, W31
	0x0297B3D4 STR X31, [X8]
	0x0297B3D8 B 0x297B478
	0x0297B3DC BL 0x1C16F20
	0x0297B3E0 BL 0x1C16F20
	0x0297B3E4 BL 0x1C16F20
	0x0297B3E8 BL 0x1C16F20
	0x0297B3EC BL 0x1C16F20
	0x0297B3F0 BL 0x1C16F20
	0x0297B3F4 BL 0x1C16F20
	0x0297B3F8 BL 0x1C16F20
	0x0297B3FC B 0x297B458
	0x0297B400 B 0x297B458
	0x0297B404 B 0x297B458
	0x0297B408 B 0x297B458
	0x0297B40C B 0x297B458
	0x0297B410 B 0x297B458
	0x0297B414 B 0x297B458
	0x0297B418 B 0x297B458
	0x0297B41C B 0x297B458
	0x0297B420 B 0x297B458
	0x0297B424 B 0x297B458
	0x0297B428 B 0x297B458
	0x0297B42C B 0x297B458
	0x0297B430 B 0x297B458
	0x0297B434 B 0x297B458
	0x0297B438 B 0x297B458
	0x0297B43C B 0x297B458
	0x0297B440 B 0x297B458
	0x0297B444 B 0x297B458
	0x0297B448 B 0x297B458
	0x0297B44C B 0x297B458
	0x0297B450 B 0x297B458
	0x0297B454 B 0x297B458
	0x0297B458 CMP W1, 0x1
	0x0297B45C B.NE 0x297B4C4
	0x0297B460 BL 0x3EB1AD0
	0x0297B464 LDR X19, [X0]
	0x0297B468 STUR X19, [X29 - 0x40]
	0x0297B46C BL 0x3EB1AE0
	0x0297B470 CBNZ X19, 0x297B4AC
	0x0297B474 MOV W0, W31
	0x0297B478 LDR X8, [X27 + 0x28]
	0x0297B47C LDUR X9, [X29 - 0x8]
	0x0297B480 CMP X8, X9
	0x0297B484 B.NE 0x297B4A8
	0x0297B488 ADD X31, X29, 0x0
	0x0297B48C LDP X20, X19, [X31 + 0x50]
	0x0297B490 LDP X22, X21, [X31 + 0x40]
	0x0297B494 LDP X24, X23, [X31 + 0x30]
	0x0297B498 LDP X26, X25, [X31 + 0x20]
	0x0297B49C LDP X28, X27, [X31 + 0x10]
	0x0297B4A0 LDP X29, X30, [X31], #0x60
	0x0297B4A4 RET
	0x0297B4A8 BL 0x3EB1B20
	0x0297B4AC SUB X8, X29, 0x40
	0x0297B4B0 ADD X0, X8, 0x8
	0x0297B4B4 BL 0x19CF85C
	0x0297B4B8 MOV X0, X19
	0x0297B4BC BL 0x1C16F18
	0x0297B4C0 CBNZ X19, 0x297B4C8
	0x0297B4C4 BL 0x1D2C690
	0x0297B4C8 LDP X8, X0, [X29 - 0x28]
	0x0297B4CC LDR X8, [X8 + 0x20]
	0x0297B4D0 LDR X8, [X8 + 0xC0]
	0x0297B4D4 LDR X1, [X8 + 0x60]
	0x0297B4D8 LDR X8, [X1]
	0x0297B4DC BLR X8
	0x0297B4E0 MOV X0, X19
	0x0297B4E4 BL 0x1C16F18
	0x0297B4E8 BL 0x1990590
	0x0297B4EC STP X30, X21, [X31 - 0x20]!
	0x0297B4F0 STP X20, X19, [X31 + 0x10]
	0x0297B4F4 ADRP X21, 0x1A5F000
	0x0297B4F8 LDRB W8, [X21 + 0xE8E]
	0x0297B4FC MOV X20, X1
	0x0297B500 MOV X19, X0
	0x0297B504 TBNZ X8, 0x0, 0x297B51C
	0x0297B508 ADRP X0, 0x1778000
	0x0297B50C LDR X0, [X0 + 0xE00]
	0x0297B510 BL 0x1C16CF4
	0x0297B514 MOVZ W8, 0x1
	0x0297B518 STRB W8, [X21 + 0xE8E]
	0x0297B51C LDR X8, [X20 + 0x20]
	0x0297B520 MOVZ W1, 0x4
	0x0297B524 LDR X8, [X8 + 0xC0]
	0x0297B528 LDR X8, [X8]
	0x0297B52C LDR X21, [X8 + 0x80]
	0x0297B530 MOV X0, X21
	0x0297B534 BL 0x1C16D14
	0x0297B538 MOV X0, X19
	0x0297B53C MOV X1, X21
	0x0297B540 BL 0x1C16D18
	0x0297B544 MOVN W8, 0x0
	0x0297B548 STR W8, [X0]
	0x0297B54C LDR X8, [X20 + 0x20]
	0x0297B550 MOV X0, X19
	0x0297B554 LDR X8, [X8 + 0xC0]
	0x0297B558 LDR X8, [X8]
	0x0297B55C LDR X8, [X8 + 0x80]
	0x0297B560 ADD X1, X8, 0x140
	0x0297B564 BL 0x1C16D18
	0x0297B568 LDR X8, [X0]
	0x0297B56C CBZ X8, 0x297B5DC
	0x0297B570 LDR X8, [X20 + 0x20]
	0x0297B574 MOV X0, X19
	0x0297B578 LDR X8, [X8 + 0xC0]
	0x0297B57C LDR X8, [X8]
	0x0297B580 LDR X8, [X8 + 0x80]
	0x0297B584 ADD X1, X8, 0x140
	0x0297B588 BL 0x1C16D18
	0x0297B58C LDR X19, [X0]
	0x0297B590 CBZ X19, 0x297B608
	0x0297B594 ADRP X10, 0x1778000
	0x0297B598 LDR X8, [X19]
	0x0297B59C LDR X10, [X10 + 0xE00]
	0x0297B5A0 LDRH W9, [X8 + 0x12E]
	0x0297B5A4 LDR X1, [X10]
	0x0297B5A8 CBZ X9, 0x297B5CC
	0x0297B5AC LDR X10, [X8 + 0xB0]
	0x0297B5B0 ADD X10, X10, 0x8
	0x0297B5B4 LDUR X11, [X10 - 0x8]
	0x0297B5B8 CMP X11, X1
	0x0297B5BC B.EQ 0x297B5E8
	0x0297B5C0 SUBS X9, X9, 0x1
	0x0297B5C4 ADD X10, X10, 0x10
	0x0297B5C8 B.NE 0x297B5B4
	0x0297B5CC MOV X0, X19
	0x0297B5D0 MOV W2, W31
	0x0297B5D4 BL 0x1C5C788
	0x0297B5D8 B 0x297B5F4
	0x0297B5DC LDP X20, X19, [X31 + 0x10]
	0x0297B5E0 LDP X30, X21, [X31], #0x20
	0x0297B5E4 RET
	0x0297B5E8 LDRSW X9, [X10]
	0x0297B5EC ADD X8, X8, X9, 0x4, LSL
	0x0297B5F0 ADD X0, X8, 0x138
	0x0297B5F4 LDP X2, X1, [X0]
	0x0297B5F8 MOV X0, X19
	0x0297B5FC LDP X20, X19, [X31 + 0x10]
	0x0297B600 LDP X30, X21, [X31], #0x20
	0x0297B604 BR X2
	0x0297B608 BL 0x1C16F20
	0x0297B60C STP X30, X21, [X31 - 0x20]!
	0x0297B610 STP X20, X19, [X31 + 0x10]
	0x0297B614 ADRP X21, 0x1A5F000
	0x0297B618 LDRB W8, [X21 + 0xE8F]
	0x0297B61C MOV X20, X1
	0x0297B620 MOV X19, X0
	0x0297B624 TBNZ X8, 0x0, 0x297B63C
	0x0297B628 ADRP X0, 0x1778000
	0x0297B62C LDR X0, [X0 + 0xE00]
	0x0297B630 BL 0x1C16CF4
	0x0297B634 MOVZ W8, 0x1
	0x0297B638 STRB W8, [X21 + 0xE8F]
	0x0297B63C LDR X8, [X20 + 0x20]
	0x0297B640 MOVZ W1, 0x4
	0x0297B644 LDR X8, [X8 + 0xC0]
	0x0297B648 LDR X8, [X8]
	0x0297B64C LDR X21, [X8 + 0x80]
	0x0297B650 MOV X0, X21
	0x0297B654 BL 0x1C16D14
	0x0297B658 MOV X0, X19
	0x0297B65C MOV X1, X21
	0x0297B660 BL 0x1C16D18
	0x0297B664 MOVN W8, 0x0
	0x0297B668 STR W8, [X0]
	0x0297B66C LDR X8, [X20 + 0x20]
	0x0297B670 MOV X0, X19
	0x0297B674 LDR X8, [X8 + 0xC0]
	0x0297B678 LDR X8, [X8]
	0x0297B67C LDR X8, [X8 + 0x80]
	0x0297B680 ADD X1, X8, 0x140
	0x0297B684 BL 0x1C16D18
	0x0297B688 LDR X8, [X0]
	0x0297B68C CBZ X8, 0x297B6FC
	0x0297B690 LDR X8, [X20 + 0x20]
	0x0297B694 MOV X0, X19
	0x0297B698 LDR X8, [X8 + 0xC0]
	0x0297B69C LDR X8, [X8]
	0x0297B6A0 LDR X8, [X8 + 0x80]
	0x0297B6A4 ADD X1, X8, 0x140
	0x0297B6A8 BL 0x1C16D18
	0x0297B6AC LDR X19, [X0]
	0x0297B6B0 CBZ X19, 0x297B728
	0x0297B6B4 ADRP X10, 0x1778000
	0x0297B6B8 LDR X8, [X19]
	0x0297B6BC LDR X10, [X10 + 0xE00]
	0x0297B6C0 LDRH W9, [X8 + 0x12E]
	0x0297B6C4 LDR X1, [X10]
	0x0297B6C8 CBZ X9, 0x297B6EC
	0x0297B6CC LDR X10, [X8 + 0xB0]
	0x0297B6D0 ADD X10, X10, 0x8
	0x0297B6D4 LDUR X11, [X10 - 0x8]
	0x0297B6D8 CMP X11, X1
	0x0297B6DC B.EQ 0x297B708
	0x0297B6E0 SUBS X9, X9, 0x1
	0x0297B6E4 ADD X10, X10, 0x10
	0x0297B6E8 B.NE 0x297B6D4
	0x0297B6EC MOV X0, X19
	0x0297B6F0 MOV W2, W31
	0x0297B6F4 BL 0x1C5C788
	0x0297B6F8 B 0x297B714
	0x0297B6FC LDP X20, X19, [X31 + 0x10]
	0x0297B700 LDP X30, X21, [X31], #0x20
	0x0297B704 RET
	0x0297B708 LDRSW X9, [X10]
	0x0297B70C ADD X8, X8, X9, 0x4, LSL
	0x0297B710 ADD X0, X8, 0x138
	0x0297B714 LDP X2, X1, [X0]
	0x0297B718 MOV X0, X19
	0x0297B71C LDP X20, X19, [X31 + 0x10]
	0x0297B720 LDP X30, X21, [X31], #0x20
	0x0297B724 BR X2
	0x0297B728 BL 0x1C16F20
	0x0297B72C STP X29, X30, [X31 - 0x30]!
	0x0297B730 STP X22, X21, [X31 + 0x10]
	0x0297B734 STP X20, X19, [X31 + 0x20]
	0x0297B738 ADD X29, X31, 0x0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0x1A60000
	007 Move W8, [X21+3722]
	008 Move X19, X1
	009 Move X20, X0
	010 Move [X31+32], X1
	011 Move [X31+40], X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x1779000
	017 Move X0, [X0+3608]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3722], W8
	021 Add X8, X31, 40
	022 Add X9, X31, 32
	023 Move [X31+8], X31
	024 Move [X31+16], X8
	025 Move [X31+24], X9
	026 Move W8, [X20+16]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Compare W8, 0
	030 JumpIfNotEqual {338}
	031 Move TEMP, 0
	032 Not TEMP
	033 Move W8, TEMP
	034 Move [X20+16], W8
	035 Move X8, [X19+32]
	036 Move X19, [X20+40]
	037 Move X8, [X8+192]
	038 Move X0, [X8+32]
	039 Move W8, [X0+309]
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {45}
	044 Call 0x1C5D684
	045 Call 0x1C17F10
	046 Move X8, [X31+32]
	047 Move X20, X0
	048 Move X8, [X8+32]
	049 Move X8, [X8+192]
	050 Move X2, [X8+40]
	051 Move X1, X19
	052 Call Set`1<Object>..ctor, X0, X1
	053 Move X8, [X31+40]
	054 Move X19, [X8+56]
	055 Move [X8+88], X20
	056 Compare X19, 0
	057 JumpIfEqual {330}
	058 Move X8, [X31+32]
	059 Move X8, [X8+32]
	060 Move X8, [X8+192]
	061 Move X1, [X8+48]
	062 Move W8, [X1+309]
	063 Move TEMP, X8
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {70}
	067 Move X0, X1
	068 Call 0x1C5D684
	069 Move X1, X0
	070 Move X8, [X19]
	071 NotImplemented "Instruction LDRH not yet implemented."
	072 Compare X9, 0
	073 JumpIfEqual {80}
	074 Move X10, [X8+176]
	075 Add X10, X10, 8
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Subtract X9, X9, 1
	079 Add X10, X10, 16
	080 Move X0, X19
	081 Move W2, W31
	082 Call 0x1C5D788
	083 NotImplemented "Instruction LDRSW not yet implemented."
	084 Add X8, X8, X9
	085 Add X0, X8, 312
	086 Move X8, [X0]
	087 Move X1, [X0+8]
	088 Move X0, X19
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move X20, [X31+40]
	091 Move [X20+96], X0
	092 Move X19, [X20+96]
	093 Move TEMP, 2
	094 Not TEMP
	095 Move W8, TEMP
	096 Move [X20+16], W8
	097 Compare X19, 0
	098 JumpIfEqual {182}
	099 Move X20, 0x1779000
	100 Move X20, [X20+3608]
	101 Move X8, [X19]
	102 Move X1, [X20]
	103 NotImplemented "Instruction LDRH not yet implemented."
	104 Compare X9, 0
	105 JumpIfEqual {112}
	106 Move X10, [X8+176]
	107 Add X10, X10, 8
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Subtract X9, X9, 1
	111 Add X10, X10, 16
	112 Move X0, X19
	113 Move W2, W31
	114 Call 0x1C5D788
	115 NotImplemented "Instruction LDRSW not yet implemented."
	116 Add X8, X8, X9
	117 Add X0, X8, 312
	118 Move X8, [X0]
	119 Move X1, [X0+8]
	120 Move X0, X19
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move W8, W0
	123 Move X0, [X31+40]
	124 Move TEMP, X8
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfNotEqual {183}
	128 Move X19, [X0+96]
	129 Compare X19, 0
	130 JumpIfEqual {327}
	131 Move X8, [X31+32]
	132 Move X8, [X8+32]
	133 Move X8, [X8+192]
	134 Move X1, [X8+64]
	135 Move W8, [X1+309]
	136 Move TEMP, X8
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfEqual {143}
	140 Move X0, X1
	141 Call 0x1C5D684
	142 Move X1, X0
	143 Move X8, [X19]
	144 NotImplemented "Instruction LDRH not yet implemented."
	145 Compare X9, 0
	146 JumpIfEqual {153}
	147 Move X10, [X8+176]
	148 Add X10, X10, 8
	149 NotImplemented "Instruction LDUR not yet implemented."
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Subtract X9, X9, 1
	152 Add X10, X10, 16
	153 Move X0, X19
	154 Move W2, W31
	155 Call 0x1C5D788
	156 NotImplemented "Instruction LDRSW not yet implemented."
	157 Add X8, X8, X9
	158 Add X0, X8, 312
	159 Move X8, [X0]
	160 Move X1, [X0+8]
	161 Move X0, X19
	162 NotImplemented "Instruction BLR not yet implemented."
	163 Move X8, [X31+40]
	164 Move X19, X0
	165 Move X0, [X8+88]
	166 Compare X0, 0
	167 JumpIfEqual {328}
	168 Move X8, [X31+32]
	169 Move X8, [X8+32]
	170 Move X8, [X8+192]
	171 Move X2, [X8+88]
	172 Move X1, X19
	173 Call Set`1<Object>.Add, X0, X1
	174 Move X8, [X31+40]
	175 Move TEMP, X0
	176 And TEMP, TEMP, 1
	177 Compare TEMP, 1
	178 JumpIfEqual {214}
	179 Move X19, [X8+96]
	180 Compare X19, 0
	181 JumpIfNotEqual {101}
	182 Call 0x1C17F20
	183 Call 0x297B73C, X0
	184 Move X8, [X31+40]
	185 Move X19, [X8+72]
	186 Move [X8+96], X31
	187 Compare X19, 0
	188 JumpIfEqual {329}
	189 Move X8, [X31+32]
	190 Move X8, [X8+32]
	191 Move X8, [X8+192]
	192 Move X1, [X8+48]
	193 Move W8, [X1+309]
	194 Move TEMP, X8
	195 And TEMP, TEMP, 1
	196 Compare TEMP, 1
	197 JumpIfEqual {201}
	198 Move X0, X1
	199 Call 0x1C5D684
	200 Move X1, X0
	201 Move X8, [X19]
	202 NotImplemented "Instruction LDRH not yet implemented."
	203 Compare X9, 0
	204 JumpIfEqual {211}
	205 Move X10, [X8+176]
	206 Add X10, X10, 8
	207 NotImplemented "Instruction LDUR not yet implemented."
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Subtract X9, X9, 1
	210 Add X10, X10, 16
	211 Move X0, X19
	212 Move W2, W31
	213 Call 0x1C5D788
	214 Move W0, 1
	215 Move [X8+24], X19
	216 Move [X8+16], W0
	217 NotImplemented "Instruction LDRSW not yet implemented."
	218 Add X8, X8, X9
	219 Add X0, X8, 312
	220 Move X8, [X0]
	221 Move X1, [X0+8]
	222 Move X0, X19
	223 NotImplemented "Instruction BLR not yet implemented."
	224 Move X20, [X31+40]
	225 Move [X20+96], X0
	226 Move X19, [X20+96]
	227 Move TEMP, 3
	228 Not TEMP
	229 Move W8, TEMP
	230 Move [X20+16], W8
	231 Compare X19, 0
	232 JumpIfEqual {316}
	233 Move X20, 0x1779000
	234 Move X20, [X20+3608]
	235 Move X8, [X19]
	236 Move X1, [X20]
	237 NotImplemented "Instruction LDRH not yet implemented."
	238 Compare X9, 0
	239 JumpIfEqual {246}
	240 Move X10, [X8+176]
	241 Add X10, X10, 8
	242 NotImplemented "Instruction LDUR not yet implemented."
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Subtract X9, X9, 1
	245 Add X10, X10, 16
	246 Move X0, X19
	247 Move W2, W31
	248 Call 0x1C5D788
	249 NotImplemented "Instruction LDRSW not yet implemented."
	250 Add X8, X8, X9
	251 Add X0, X8, 312
	252 Move X8, [X0]
	253 Move X1, [X0+8]
	254 Move X0, X19
	255 NotImplemented "Instruction BLR not yet implemented."
	256 Move W8, W0
	257 Move X0, [X31+40]
	258 Move TEMP, X8
	259 And TEMP, TEMP, 1
	260 Compare TEMP, 1
	261 JumpIfNotEqual {317}
	262 Move X19, [X0+96]
	263 Compare X19, 0
	264 JumpIfEqual {325}
	265 Move X8, [X31+32]
	266 Move X8, [X8+32]
	267 Move X8, [X8+192]
	268 Move X1, [X8+64]
	269 Move W8, [X1+309]
	270 Move TEMP, X8
	271 And TEMP, TEMP, 1
	272 Compare TEMP, 1
	273 JumpIfEqual {277}
	274 Move X0, X1
	275 Call 0x1C5D684
	276 Move X1, X0
	277 Move X8, [X19]
	278 NotImplemented "Instruction LDRH not yet implemented."
	279 Compare X9, 0
	280 JumpIfEqual {287}
	281 Move X10, [X8+176]
	282 Add X10, X10, 8
	283 NotImplemented "Instruction LDUR not yet implemented."
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Subtract X9, X9, 1
	286 Add X10, X10, 16
	287 Move X0, X19
	288 Move W2, W31
	289 Call 0x1C5D788
	290 NotImplemented "Instruction LDRSW not yet implemented."
	291 Add X8, X8, X9
	292 Add X0, X8, 312
	293 Move X8, [X0]
	294 Move X1, [X0+8]
	295 Move X0, X19
	296 NotImplemented "Instruction BLR not yet implemented."
	297 Move X8, [X31+40]
	298 Move X19, X0
	299 Move X0, [X8+88]
	300 Compare X0, 0
	301 JumpIfEqual {326}
	302 Move X8, [X31+32]
	303 Move X8, [X8+32]
	304 Move X8, [X8+192]
	305 Move X2, [X8+88]
	306 Move X1, X19
	307 Call Set`1<Object>.Add, X0, X1
	308 Move X8, [X31+40]
	309 Move TEMP, X0
	310 And TEMP, TEMP, 1
	311 Compare TEMP, 1
	312 JumpIfEqual {321}
	313 Move X19, [X8+96]
	314 Compare X19, 0
	315 JumpIfNotEqual {235}
	316 Call 0x1C17F20
	317 Call 0x297B7EC, X0
	318 Move X8, [X31+40]
	319 Move W0, W31
	320 Move [X8+96], X31
	321 Move W9, 2
	322 Move [X8+24], X19
	323 Move [X8+16], W9
	324 Move W0, 1
	325 Call 0x1C17F20
	326 Call 0x1C17F20
	327 Call 0x1C17F20
	328 Call 0x1C17F20
	329 Call 0x1C17F20
	330 Call 0x1C17F20
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Call 0x3EB2AD0
	333 Move X19, [X0]
	334 Move [X31+8], X19
	335 Call 0x3EB2AE0
	336 Compare X19, 0
	337 JumpIfNotEqual {345}
	338 Move W0, W31
	339 Move X20, [X31+64]
	340 Move X19, [X31+72]
	341 Move X30, [X31+48]
	342 Move X21, [X31+56]
	343 Add X31, X31, 80
	344 Return X0
	345 Add X8, X31, 8
	346 Add X0, X8, 8
	347 Call 0x19D0840
	348 Move X0, X19
	349 Call 0x1C17F18
	350 Compare X19, 0
	351 JumpIfNotEqual {353}
	352 Call 0x1D2D690
	353 Move X8, [X31+32]
	354 Move X0, [X31+40]
	355 Move X8, [X8+32]
	356 Move X8, [X8+192]
	357 Move X1, [X8+96]
	358 Call 0x297B1D0, X0
	359 Move X0, X19
	360 Call 0x1C17F18
	361 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x0297B73C SUB X31, X31, 0x10
	0x0297B740 MRS X22, 0xC000
	0x0297B744 LDR X8, [X22 + 0x28]
	0x0297B748 MOV X19, X1
	0x0297B74C STUR X8, [X29 - 0x8]
	0x0297B750 LDR X8, [X2 + 0x20]
	0x0297B754 LDR X8, [X8 + 0xC0]
	0x0297B758 LDR X9, [X8 + 0x50]
	0x0297B75C LDR W20, [X9 + 0xFC]
	0x0297B760 ADD X9, X31, 0x0
	0x0297B764 ADD X10, X20, 0xF
	0x0297B768 AND X10, X10, 0x1FFFFFFFF
	0x0297B76C SUB X21, X9, X10
	0x0297B770 ADD X31, X21, 0x0
	0x0297B774 LDR X8, [X8]
	0x0297B778 LDR X8, [X8 + 0x80]
	0x0297B77C ADD X1, X8, 0x20
	0x0297B780 BL 0x1C16D18
	0x0297B784 MOV X1, X0
	0x0297B788 MOV X0, X21
	0x0297B78C MOV X2, X20
	0x0297B790 BL 0x3EB1AC0
	0x0297B794 MOV X0, X19
	0x0297B798 MOV X1, X21
	0x0297B79C MOV X2, X20
	0x0297B7A0 BL 0x3EB1AC0
	0x0297B7A4 LDR X8, [X22 + 0x28]
	0x0297B7A8 LDUR X9, [X29 - 0x8]
	0x0297B7AC CMP X8, X9
	0x0297B7B0 B.NE 0x297B7C8
	0x0297B7B4 ADD X31, X29, 0x0
	0x0297B7B8 LDP X20, X19, [X31 + 0x20]
	0x0297B7BC LDP X22, X21, [X31 + 0x10]
	0x0297B7C0 LDP X29, X30, [X31], #0x30
	0x0297B7C4 RET
	0x0297B7C8 BL 0x3EB1B20
	0x0297B7CC STR X30, [X31 - 0x20]!
	0x0297B7D0 STP X20, X19, [X31 + 0x10]
	0x0297B7D4 ADRP X0, 0x1778000
	0x0297B7D8 LDR X0, [X0 + 0xB40]
	0x0297B7DC MOV X19, X1
	0x0297B7E0 BL 0x1C16D08
	0x0297B7E4 BL 0x1C16F10
	0x0297B7E8 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1A60000
	005 Move W8, [X19+3723]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1779000
	012 Move X0, [X0+3584]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X19+3723], W8
	016 Move X19, [X20+96]
	017 Move TEMP, 0
	018 Not TEMP
	019 Move W8, TEMP
	020 Move [X20+16], W8
	021 Compare X19, 0
	022 JumpIfEqual {39}
	023 Move X10, 0x1779000
	024 Move X8, [X19]
	025 Move X10, [X10+3584]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move X0, X19
	037 Move W2, W31
	038 Call 0x1C5D788
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return 
	043 NotImplemented "Instruction LDRSW not yet implemented."
	044 Add X8, X8, X9
	045 Add X0, X8, 312
	046 Move X2, [X0]
	047 Move X1, [X0+8]
	048 Move X0, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 CallNoReturn X2

Method: System.Void <>m__Finally2()

Disassembly:
	0x0297B7EC MOV X20, X0
	0x0297B7F0 BL 0x3380310
	0x0297B7F4 MOV X0, X20
	0x0297B7F8 MOV X1, X19
	0x0297B7FC BL 0x1C16DEC
	0x0297B800 STP X29, X30, [X31 - 0x30]!
	0x0297B804 STP X22, X21, [X31 + 0x10]
	0x0297B808 STP X20, X19, [X31 + 0x20]
	0x0297B80C ADD X29, X31, 0x0
	0x0297B810 SUB X31, X31, 0x10
	0x0297B814 MRS X22, 0xC000
	0x0297B818 LDR X8, [X22 + 0x28]
	0x0297B81C MOV X19, X1
	0x0297B820 STUR X8, [X29 - 0x8]
	0x0297B824 LDR X8, [X1 + 0x20]
	0x0297B828 LDR X8, [X8 + 0xC0]
	0x0297B82C LDR X9, [X8 + 0x50]
	0x0297B830 LDR W20, [X9 + 0xFC]
	0x0297B834 ADD X9, X31, 0x0
	0x0297B838 ADD X10, X20, 0xF
	0x0297B83C AND X10, X10, 0x1FFFFFFFF
	0x0297B840 SUB X21, X9, X10
	0x0297B844 ADD X31, X21, 0x0
	0x0297B848 LDR X8, [X8]
	0x0297B84C LDR X8, [X8 + 0x80]
	0x0297B850 ADD X1, X8, 0x20
	0x0297B854 BL 0x1C16D18
	0x0297B858 MOV X1, X0
	0x0297B85C MOV X0, X21
	0x0297B860 MOV X2, X20
	0x0297B864 BL 0x3EB1AC0
	0x0297B868 LDR X8, [X19 + 0x20]
	0x0297B86C MOV X1, X21
	0x0297B870 LDR X8, [X8 + 0xC0]
	0x0297B874 LDR X0, [X8 + 0x50]
	0x0297B878 BL 0x1C16E04
	0x0297B87C LDR X8, [X22 + 0x28]
	0x0297B880 LDUR X9, [X29 - 0x8]
	0x0297B884 CMP X8, X9
	0x0297B888 B.NE 0x297B8A0
	0x0297B88C ADD X31, X29, 0x0
	0x0297B890 LDP X20, X19, [X31 + 0x20]
	0x0297B894 LDP X22, X21, [X31 + 0x10]
	0x0297B898 LDP X29, X30, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1A60000
	005 Move W8, [X19+3724]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1779000
	012 Move X0, [X0+3584]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X19+3724], W8
	016 Move X19, [X20+96]
	017 Move TEMP, 0
	018 Not TEMP
	019 Move W8, TEMP
	020 Move [X20+16], W8
	021 Compare X19, 0
	022 JumpIfEqual {39}
	023 Move X10, 0x1779000
	024 Move X8, [X19]
	025 Move X10, [X10+3584]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move X0, X19
	037 Move W2, W31
	038 Call 0x1C5D788
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return 
	043 NotImplemented "Instruction LDRSW not yet implemented."
	044 Add X8, X8, X9
	045 Add X0, X8, 312
	046 Move X2, [X0]
	047 Move X1, [X0+8]
	048 Move X0, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 CallNoReturn X2

Method: TSource System.Collections.Generic.IEnumerator<TSource>.get_Current()

Disassembly:
	0x0297B89C RET
	0x0297B8A0 BL 0x3EB1B20

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x0297B8A4 STP X30, X23, [X31 - 0x30]!
	0x0297B8A8 STP X22, X21, [X31 + 0x10]
	0x0297B8AC STP X20, X19, [X31 + 0x20]
	0x0297B8B0 LDR X8, [X1 + 0x20]
	0x0297B8B4 MOV X19, X1
	0x0297B8B8 MOV X20, X0
	0x0297B8BC LDR X8, [X8 + 0xC0]
	0x0297B8C0 LDR X8, [X8]
	0x0297B8C4 LDR X1, [X8 + 0x80]
	0x0297B8C8 BL 0x1C16D18
	0x0297B8CC LDR W8, [X0]
	0x0297B8D0 ADDS W31, W8, 0x2
	0x0297B8D4 B.NE 0x297B93C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1779000
	005 Move X0, [X0+2880]
	006 Move X19, X1
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X1, X31
	010 Move X20, X0
	011 Call NotSupportedException..ctor, X0
	012 Move X0, X20
	013 Move X1, X19
	014 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x0297B8D8 LDR X8, [X19 + 0x20]
	0x0297B8DC MOV X0, X20

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Collections.Generic.IEnumerator`1<TSource> System.Collections.Generic.IEnumerable<TSource>.GetEnumerator()

Disassembly:
	0x0297B8E0 LDR X8, [X8 + 0xC0]
	0x0297B8E4 LDR X8, [X8]
	0x0297B8E8 LDR X8, [X8 + 0x80]
	0x0297B8EC ADD X1, X8, 0x40
	0x0297B8F0 BL 0x1C16D18
	0x0297B8F4 LDR W21, [X0]
	0x0297B8F8 MOV X0, X31
	0x0297B8FC BL 0x33C151C
	0x0297B900 CMP W21, W0
	0x0297B904 B.NE 0x297B93C
	0x0297B908 LDR X8, [X19 + 0x20]
	0x0297B90C MOVZ W1, 0x4
	0x0297B910 LDR X8, [X8 + 0xC0]
	0x0297B914 LDR X8, [X8]
	0x0297B918 LDR X21, [X8 + 0x80]
	0x0297B91C MOV X0, X21
	0x0297B920 BL 0x1C16D14
	0x0297B924 MOV X0, X20
	0x0297B928 MOV X1, X21
	0x0297B92C BL 0x1C16D18
	0x0297B930 STR W31, [X0]
	0x0297B934 MOV X21, X20
	0x0297B938 B 0x297B974
	0x0297B93C LDR X8, [X19 + 0x20]
	0x0297B940 LDR X8, [X8 + 0xC0]
	0x0297B944 LDR X0, [X8]
	0x0297B948 LDRB W8, [X0 + 0x135]
	0x0297B94C TBNZ X8, 0x0, 0x297B954
	0x0297B950 BL 0x1C5C684
	0x0297B954 BL 0x1C16F10
	0x0297B958 LDR X8, [X19 + 0x20]
	0x0297B95C MOV W1, W31
	0x0297B960 MOV X21, X0
	0x0297B964 LDR X8, [X8 + 0xC0]
	0x0297B968 LDR X2, [X8 + 0x68]
	0x0297B96C LDR X8, [X2]
	0x0297B970 BLR X8
	0x0297B974 LDR X8, [X19 + 0x20]
	0x0297B978 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+16]
	006 Move X19, X0
	007 Move X20, X1
	008 Add W31, W8, 2
	009 Move W21, [X19+32]
	010 Move X0, X31
	011 Call Environment.get_CurrentManagedThreadId
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move [X19+16], W31
	014 Move X20, X19
	015 Move X8, [X20+32]
	016 Move X8, [X8+192]
	017 Move X0, [X8]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X20, X0
	027 Call Object..ctor, X0
	028 Move X0, X31
	029 Move [X20+16], W31
	030 Call Environment.get_CurrentManagedThreadId
	031 Move [X20+32], W0
	032 Move X8, [X19+64]
	033 Move X0, X20
	034 Move [X20+56], X8
	035 Move X8, [X19+80]
	036 Move [X20+72], X8
	037 Move X8, [X19+48]
	038 Move [X20+40], X8
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x0297B97C LDR X8, [X8 + 0xC0]
	0x0297B980 LDR X8, [X8]
	0x0297B984 LDR X8, [X8 + 0x80]
	0x0297B988 ADD X1, X8, 0xC0

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+112]
	004 Call 0x297B8E0, X0
	005 Return X0

