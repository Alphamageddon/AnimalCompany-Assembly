Type: System.Linq.Enumerable/<AppendIterator>d__61`1

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x0238387C LDR X1, [X8 + 0x48]
	0x02383880 LDR X2, [X1]
	0x02383884 BR X2
	0x02383888 SUB X31, X31, 0x50
	0x0238388C STP X30, X25, [X31 + 0x10]
	0x02383890 STP X24, X23, [X31 + 0x20]
	0x02383894 STP X22, X21, [X31 + 0x30]
	0x02383898 STP X20, X19, [X31 + 0x40]
	0x0238389C ADRP X21, 0x2056000
	0x023838A0 LDRB W8, [X21 + 0x91C]
	0x023838A4 MOV X20, X1
	0x023838A8 MOV X19, X0
	0x023838AC TBNZ X8, 0x0, 0x23838C4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+32], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x023838B0 ADRP X0, 0x1D72000
	0x023838B4 LDR X0, [X0 + 0xA50]
	0x023838B8 BL 0x1C16CF4
	0x023838BC MOVZ W8, 0x1
	0x023838C0 STRB W8, [X21 + 0x91C]
	0x023838C4 STR X31, [X31 + 0x8]
	0x023838C8 LDR W24, [X19]

ISIL:
	001 Move W8, [X0+16]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Add W31, W8, 3
	004 Call 0x2383BA4, X0
	005 Return 
	006 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x023838CC LDR X23, [X19 + 0x28]
	0x023838D0 CBZ W24, 0x23839C0
	0x023838D4 ADRP X8, 0x1D72000
	0x023838D8 LDR X8, [X8 + 0xA50]
	0x023838DC LDR X0, [X8]
	0x023838E0 BL 0x1C16F10
	0x023838E4 MOV X21, X0
	0x023838E8 MOV X1, X31
	0x023838EC BL 0x33DFA8C
	0x023838F0 CBZ X23, 0x2383A70
	0x023838F4 STR X21, [X23 + 0x50]
	0x023838F8 CBZ X21, 0x2383A74
	0x023838FC LDR X22, [X23 + 0x38]
	0x02383900 MOV X0, X21
	0x02383904 MOV X1, X31
	0x02383908 BL 0x33DFA08
	0x0238390C CBZ X22, 0x2383A78
	0x02383910 MOV X21, X0
	0x02383914 LDR X0, [X20 + 0x20]
	0x02383918 LDRB W8, [X0 + 0x135]
	0x0238391C TBNZ X8, 0x0, 0x2383924
	0x02383920 BL 0x1C5C684
	0x02383924 LDR X0, [X22 + 0x40]
	0x02383928 LDR X8, [X22 + 0x18]
	0x0238392C LDR X2, [X22 + 0x28]
	0x02383930 MOV X1, X21
	0x02383934 BLR X8
	0x02383938 MOV X21, X0
	0x0238393C CBZ X0, 0x2383A7C
	0x02383940 LDR X0, [X20 + 0x20]
	0x02383944 LDRB W8, [X0 + 0x135]
	0x02383948 TBNZ X8, 0x0, 0x2383950
	0x0238394C BL 0x1C5C684
	0x02383950 LDR X8, [X0 + 0xC0]
	0x02383954 LDR X1, [X8 + 0x28]
	0x02383958 MOV X0, X21
	0x0238395C BL 0x269A598
	0x02383960 STR X0, [X31 + 0x8]
	0x02383964 LDR X0, [X20 + 0x20]
	0x02383968 LDRB W8, [X0 + 0x135]
	0x0238396C TBNZ X8, 0x0, 0x2383974
	0x02383970 BL 0x1C5C684
	0x02383974 LDR X8, [X0 + 0xC0]
	0x02383978 LDR X1, [X8 + 0x38]
	0x0238397C ADD X0, X31, 0x8
	0x02383980 BL 0x2677020
	0x02383984 TBNZ X0, 0x0, 0x23839D4
	0x02383988 STR W31, [X19]
	0x0238398C LDR X8, [X31 + 0x8]
	0x02383990 STR X8, [X19 + 0x30]
	0x02383994 LDR X0, [X20 + 0x20]
	0x02383998 LDRB W8, [X0 + 0x135]
	0x0238399C TBNZ X8, 0x0, 0x23839A4
	0x023839A0 BL 0x1C5C684
	0x023839A4 LDR X8, [X0 + 0xC0]
	0x023839A8 ADD X0, X19, 0x8
	0x023839AC LDR X3, [X8 + 0x48]
	0x023839B0 ADD X1, X31, 0x8
	0x023839B4 MOV X2, X19
	0x023839B8 BL 0x2198460
	0x023839BC B 0x2383A4C
	0x023839C0 LDR X8, [X19 + 0x30]
	0x023839C4 MOVN W24, 0x0
	0x023839C8 STR X8, [X31 + 0x8]
	0x023839CC STR X31, [X19 + 0x30]
	0x023839D0 STR W24, [X19]
	0x023839D4 LDR X0, [X20 + 0x20]
	0x023839D8 LDRB W8, [X0 + 0x135]
	0x023839DC TBNZ X8, 0x0, 0x23839E4
	0x023839E0 BL 0x1C5C684
	0x023839E4 LDR X8, [X0 + 0xC0]
	0x023839E8 LDR X1, [X8 + 0x60]
	0x023839EC ADD X0, X31, 0x8
	0x023839F0 BL 0x2677064
	0x023839F4 CBZ X23, 0x2383A6C
	0x023839F8 MOVZ W8, 0x1
	0x023839FC MOV X20, X31
	0x02383A00 STR X0, [X23 + 0x58]
	0x02383A04 STRB W8, [X23 + 0x40]
	0x02383A08 MOVZ W21, 0x7
	0x02383A0C TBZ X24, 0x1F, 0x2383A28
	0x02383A10 CBZ X23, 0x2383A80
	0x02383A14 LDR X0, [X23 + 0x50]
	0x02383A18 CBZ X0, 0x2383A84
	0x02383A1C MOV X1, X31
	0x02383A20 BL 0x33E01CC
	0x02383A24 STR X31, [X23 + 0x50]
	0x02383A28 CBNZ X20, 0x2383A64
	0x02383A2C CBZ W21, 0x2383A38
	0x02383A30 CMP W21, 0x7
	0x02383A34 B.NE 0x2383A4C
	0x02383A38 MOVN W8, 0x1
	0x02383A3C STR W8, [X19], #0x8
	0x02383A40 MOV X0, X19
	0x02383A44 MOV X1, X31
	0x02383A48 BL 0x32C4204
	0x02383A4C LDP X20, X19, [X31 + 0x40]
	0x02383A50 LDP X22, X21, [X31 + 0x30]
	0x02383A54 LDP X24, X23, [X31 + 0x20]
	0x02383A58 LDP X30, X25, [X31 + 0x10]
	0x02383A5C ADD X31, X31, 0x50
	0x02383A60 RET
	0x02383A64 MOV X0, X20
	0x02383A68 BL 0x1C16F18
	0x02383A6C BL 0x1C16F20
	0x02383A70 BL 0x1C16F20
	0x02383A74 BL 0x1C16F20
	0x02383A78 BL 0x1C16F20
	0x02383A7C BL 0x1C16F20
	0x02383A80 BL 0x1C16F20
	0x02383A84 BL 0x1C16F20
	0x02383A88 MOV X22, X0
	0x02383A8C MOV W24, W31
	0x02383A90 B 0x2383AC8
	0x02383A94 B 0x2383AC4
	0x02383A98 B 0x2383AC4
	0x02383A9C B 0x2383AC4
	0x02383AA0 B 0x2383AC4
	0x02383AA4 B 0x2383AC4
	0x02383AA8 B 0x2383AC4
	0x02383AAC B 0x2383AC4
	0x02383AB0 MOV X21, X1
	0x02383AB4 MOV X22, X0
	0x02383AB8 MOVZ W25, 0x1
	0x02383ABC B 0x2383BAC
	0x02383AC0 B 0x2383AC4
	0x02383AC4 MOV X22, X0
	0x02383AC8 MOV W21, W1
	0x02383ACC CMP W1, 0x1
	0x02383AD0 B.NE 0x2383B60
	0x02383AD4 MOV X0, X22
	0x02383AD8 BL 0x3EB1AD0
	0x02383ADC MOV X20, X0
	0x02383AE0 ADRP X0, 0x1D70000
	0x02383AE4 LDR X0, [X0 + 0x7D0]
	0x02383AE8 BL 0x1C16D08
	0x02383AEC LDR X8, [X20]
	0x02383AF0 LDR X1, [X8]
	0x02383AF4 BL 0x1C17270
	0x02383AF8 TBZ X0, 0x0, 0x2383B1C
	0x02383AFC LDR X21, [X20]
	0x02383B00 BL 0x3EB1AE0
	0x02383B04 CBZ X23, 0x2383B40
	0x02383B08 MOVZ W8, 0x1
	0x02383B0C MOV X20, X31
	0x02383B10 STR X21, [X23 + 0x48]
	0x02383B14 STRB W8, [X23 + 0x41]
	0x02383B18 B 0x2383A08
	0x02383B1C MOVZ W0, 0x8
	0x02383B20 BL 0x3EB1AF0
	0x02383B24 LDR X8, [X20]
	0x02383B28 STR X8, [X0]
	0x02383B2C ADRP X1, 0x1B31000
	0x02383B30 ADD X1, X1, 0xE58
	0x02383B34 MOV X2, X31
	0x02383B38 BL 0x3EB1B00
	0x02383B3C B 0x2383C20
	0x02383B40 BL 0x1C16F20
	0x02383B44 B 0x2383B48
	0x02383B48 MOV X22, X0
	0x02383B4C MOV W21, W1
	0x02383B50 B 0x2383B60
	0x02383B54 MOV X21, X1
	0x02383B58 MOV X22, X0
	0x02383B5C BL 0x3EB1AE0
	0x02383B60 MOVZ W25, 0x1
	0x02383B64 CMP W21, W25
	0x02383B68 B.NE 0x2383B88
	0x02383B6C MOV X0, X22
	0x02383B70 BL 0x3EB1AD0
	0x02383B74 LDR X20, [X0]
	0x02383B78 BL 0x3EB1AE0
	0x02383B7C MOV W21, W31
	0x02383B80 TBZ X24, 0x1F, 0x2383A28
	0x02383B84 B 0x2383A10
	0x02383B88 MOV X20, X31
	0x02383B8C TBZ X24, 0x1F, 0x2383BA8
	0x02383B90 CBZ X23, 0x2383C28
	0x02383B94 LDR X0, [X23 + 0x50]
	0x02383B98 CBZ X0, 0x2383C2C
	0x02383B9C MOV X1, X31
	0x02383BA0 BL 0x33E01CC

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X19, 0x2057000
	007 Move W8, [X19+2328]
	008 Move X21, X1
	009 Move X20, X0
	010 Move [X31+32], X1
	011 Move [X31+40], X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x1D71000
	017 Move X0, [X0+3608]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+2328], W8
	021 Add X8, X31, 40
	022 Add X9, X31, 32
	023 Move [X31+16], X8
	024 Move [X31+24], X9
	025 Move W8, [X20+16]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Compare W8, 0
	029 JumpIfNotEqual {174}
	030 Move X19, [X20+40]
	031 Move TEMP, 0
	032 Not TEMP
	033 Move W8, TEMP
	034 Move [X20+16], W8
	035 Compare X19, 0
	036 JumpIfEqual {165}
	037 Move X8, [X21+32]
	038 Move X8, [X8+192]
	039 Move X1, [X8+16]
	040 Move W8, [X1+309]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {48}
	045 Move X0, X1
	046 Call 0x1C5D684
	047 Move X1, X0
	048 Move X8, [X19]
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 Compare X9, 0
	051 JumpIfEqual {58}
	052 Move X10, [X8+176]
	053 Add X10, X10, 8
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Subtract X9, X9, 1
	057 Add X10, X10, 16
	058 Move X0, X19
	059 Move W2, W31
	060 Call 0x1C5D788
	061 Move X19, [X20+72]
	062 Move TEMP, 2
	063 Not TEMP
	064 Move W8, TEMP
	065 Move [X20+16], W8
	066 Move W0, W31
	067 Move TEMP, 0
	068 Not TEMP
	069 Move W8, TEMP
	070 Move [X20+16], W8
	071 NotImplemented "Instruction LDRSW not yet implemented."
	072 Add X8, X8, X9
	073 Add X0, X8, 312
	074 Move X8, [X0]
	075 Move X1, [X0+8]
	076 Move X0, X19
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X8, [X31+40]
	079 Move TEMP, 2
	080 Not TEMP
	081 Move W9, TEMP
	082 Move X19, X0
	083 Move [X8+72], X0
	084 Move [X8+16], W9
	085 Compare X19, 0
	086 JumpIfEqual {164}
	087 Move X10, 0x1D71000
	088 Move X8, [X19]
	089 Move X10, [X10+3608]
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Move X1, [X10]
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move X0, X19
	101 Move W2, W31
	102 Call 0x1C5D788
	103 NotImplemented "Instruction LDRSW not yet implemented."
	104 Add X8, X8, X9
	105 Add X0, X8, 312
	106 Move X8, [X0]
	107 Move X1, [X0+8]
	108 Move X0, X19
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move W8, W0
	111 Move X0, [X31+40]
	112 Move TEMP, X8
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {144}
	116 Move X19, [X0+72]
	117 Compare X19, 0
	118 JumpIfEqual {166}
	119 Move X8, [X31+32]
	120 Move X8, [X8+32]
	121 Move X8, [X8+192]
	122 Move X1, [X8+32]
	123 Move W8, [X1+309]
	124 Move TEMP, X8
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {131}
	128 Move X0, X1
	129 Call 0x1C5D684
	130 Move X1, X0
	131 Move X8, [X19]
	132 NotImplemented "Instruction LDRH not yet implemented."
	133 Compare X9, 0
	134 JumpIfEqual {141}
	135 Move X10, [X8+176]
	136 Add X10, X10, 8
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Subtract X9, X9, 1
	140 Add X10, X10, 16
	141 Move X0, X19
	142 Move W2, W31
	143 Call 0x1C5D788
	144 Call 0x2383BA4, X0
	145 Move X8, [X31+40]
	146 Move W10, 2
	147 Move W0, 1
	148 Move X9, [X8+56]
	149 Move [X8+72], X31
	150 Move [X8+16], W10
	151 Move [X8+24], X9
	152 NotImplemented "Instruction LDRSW not yet implemented."
	153 Add X8, X8, X9
	154 Add X0, X8, 312
	155 Move X8, [X0]
	156 Move X1, [X0+8]
	157 Move X0, X19
	158 NotImplemented "Instruction BLR not yet implemented."
	159 Move X9, [X31+40]
	160 Move X8, X0
	161 Move W0, 1
	162 Move [X9+24], X8
	163 Move [X9+16], W0
	164 Call 0x1C17F20
	165 Call 0x1C17F20
	166 Call 0x1C17F20
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Call 0x3EB2AD0
	169 Move X19, [X0]
	170 Move [X31+8], X19
	171 Call 0x3EB2AE0
	172 Compare X19, 0
	173 JumpIfNotEqual {181}
	174 Move W0, W31
	175 Move X20, [X31+64]
	176 Move X19, [X31+72]
	177 Move X30, [X31+48]
	178 Move X21, [X31+56]
	179 Add X31, X31, 80
	180 Return X0
	181 Add X8, X31, 8
	182 Add X0, X8, 8
	183 Call 0x199EBC4
	184 Move X0, X19
	185 Call 0x1C17F18
	186 Compare X19, 0
	187 JumpIfNotEqual {189}
	188 Call 0x1D2D690
	189 Move X0, [X31+40]
	190 Move W8, [X0+16]
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Add W31, W8, 3
	193 Call 0x2383BA4, X0
	194 Move X0, X19
	195 Call 0x1C17F18
	196 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x02383BA4 STR X31, [X23 + 0x50]
	0x02383BA8 CBNZ X20, 0x2383C20
	0x02383BAC CMP W21, W25
	0x02383BB0 B.NE 0x2383C48
	0x02383BB4 MOV X0, X22
	0x02383BB8 BL 0x3EB1AD0
	0x02383BBC MOV X20, X0
	0x02383BC0 ADRP X0, 0x1D70000
	0x02383BC4 LDR X0, [X0 + 0x7D0]
	0x02383BC8 BL 0x1C16D08
	0x02383BCC LDR X8, [X20]
	0x02383BD0 LDR X1, [X8]
	0x02383BD4 BL 0x1C17270
	0x02383BD8 TBZ X0, 0x0, 0x2383C00
	0x02383BDC LDR X20, [X20]
	0x02383BE0 BL 0x3EB1AE0
	0x02383BE4 MOVN W8, 0x1
	0x02383BE8 STR W8, [X19], #0x8
	0x02383BEC MOV X0, X19
	0x02383BF0 MOV X1, X20
	0x02383BF4 MOV X2, X31
	0x02383BF8 BL 0x32C4368
	0x02383BFC B 0x2383A4C
	0x02383C00 MOVZ W0, 0x8
	0x02383C04 BL 0x3EB1AF0
	0x02383C08 LDR X8, [X20]
	0x02383C0C STR X8, [X0]
	0x02383C10 ADRP X1, 0x1B31000
	0x02383C14 ADD X1, X1, 0xE58
	0x02383C18 MOV X2, X31
	0x02383C1C BL 0x3EB1B00
	0x02383C20 MOV X0, X20
	0x02383C24 BL 0x1C16F18
	0x02383C28 BL 0x1C16F20
	0x02383C2C BL 0x1C16F20
	0x02383C30 MOV X22, X0
	0x02383C34 MOV W21, W1
	0x02383C38 TBZ X24, 0x1F, 0x2383BA8
	0x02383C3C B 0x2383B90
	0x02383C40 MOV X22, X0
	0x02383C44 BL 0x3EB1AE0
	0x02383C48 MOV X0, X22
	0x02383C4C BL 0x1D2C690
	0x02383C50 BL 0x1990590

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x2057000
	005 Move W8, [X19+2329]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1D71000
	012 Move X0, [X0+3584]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X19+2329], W8
	016 Move X19, [X20+72]
	017 Move TEMP, 0
	018 Not TEMP
	019 Move W8, TEMP
	020 Move [X20+16], W8
	021 Compare X19, 0
	022 JumpIfEqual {39}
	023 Move X10, 0x1D71000
	024 Move X8, [X19]
	025 Move X10, [X10+3584]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move X0, X19
	037 Move W2, W31
	038 Call 0x1C5D788
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return 
	043 NotImplemented "Instruction LDRSW not yet implemented."
	044 Add X8, X8, X9
	045 Add X0, X8, 312
	046 Move X2, [X0]
	047 Move X1, [X0+8]
	048 Move X0, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 CallNoReturn X2

Method: TSource System.Collections.Generic.IEnumerator<TSource>.get_Current()

Disassembly:
	0x02383C54 ADD X0, X0, 0x8
	0x02383C58 MOV X2, X31

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x02383C5C B 0x32C4140
	0x02383C60 SUB X31, X31, 0x50
	0x02383C64 STP X30, X25, [X31 + 0x10]
	0x02383C68 STP X24, X23, [X31 + 0x20]
	0x02383C6C STP X22, X21, [X31 + 0x30]
	0x02383C70 STP X20, X19, [X31 + 0x40]
	0x02383C74 ADRP X21, 0x2056000
	0x02383C78 LDRB W8, [X21 + 0x91D]
	0x02383C7C MOV X20, X1
	0x02383C80 MOV X19, X0
	0x02383C84 TBNZ X8, 0x0, 0x2383C9C
	0x02383C88 ADRP X0, 0x1D72000
	0x02383C8C LDR X0, [X0 + 0xA50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1D71000
	005 Move X0, [X0+2880]
	006 Move X19, X1
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X1, X31
	010 Move X20, X0
	011 Call NotSupportedException..ctor, X0
	012 Move X0, X20
	013 Move X1, X19
	014 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x02383C90 BL 0x1C16CF4
	0x02383C94 MOVZ W8, 0x1

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Collections.Generic.IEnumerator`1<TSource> System.Collections.Generic.IEnumerable<TSource>.GetEnumerator()

Disassembly:
	0x02383C98 STRB W8, [X21 + 0x91D]
	0x02383C9C STR X31, [X31 + 0x8]
	0x02383CA0 LDR W24, [X19]
	0x02383CA4 LDR X23, [X19 + 0x28]
	0x02383CA8 CBZ W24, 0x2383D98
	0x02383CAC ADRP X8, 0x1D72000
	0x02383CB0 LDR X8, [X8 + 0xA50]
	0x02383CB4 LDR X0, [X8]
	0x02383CB8 BL 0x1C16F10
	0x02383CBC MOV X21, X0
	0x02383CC0 MOV X1, X31
	0x02383CC4 BL 0x33DFA8C
	0x02383CC8 CBZ X23, 0x2383E48
	0x02383CCC STR X21, [X23 + 0x50]
	0x02383CD0 CBZ X21, 0x2383E4C
	0x02383CD4 LDR X22, [X23 + 0x38]
	0x02383CD8 MOV X0, X21
	0x02383CDC MOV X1, X31
	0x02383CE0 BL 0x33DFA08
	0x02383CE4 CBZ X22, 0x2383E50
	0x02383CE8 MOV X21, X0
	0x02383CEC LDR X0, [X20 + 0x20]
	0x02383CF0 LDRB W8, [X0 + 0x135]
	0x02383CF4 TBNZ X8, 0x0, 0x2383CFC
	0x02383CF8 BL 0x1C5C684
	0x02383CFC LDR X0, [X22 + 0x40]
	0x02383D00 LDR X8, [X22 + 0x18]
	0x02383D04 LDR X2, [X22 + 0x28]
	0x02383D08 MOV X1, X21
	0x02383D0C BLR X8
	0x02383D10 MOV X21, X0
	0x02383D14 CBZ X0, 0x2383E54
	0x02383D18 LDR X0, [X20 + 0x20]
	0x02383D1C LDRB W8, [X0 + 0x135]
	0x02383D20 TBNZ X8, 0x0, 0x2383D28
	0x02383D24 BL 0x1C5C684
	0x02383D28 LDR X8, [X0 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+16]
	006 Move X19, X0
	007 Move X20, X1
	008 Add W31, W8, 2
	009 Move W21, [X19+32]
	010 Move X0, X31
	011 Call Environment.get_CurrentManagedThreadId
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move [X19+16], W31
	014 Move X20, X19
	015 Move X8, [X20+32]
	016 Move X8, [X8+192]
	017 Move X0, [X8]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X20, X0
	027 Call Object..ctor, X0
	028 Move X0, X31
	029 Move [X20+16], W31
	030 Call Environment.get_CurrentManagedThreadId
	031 Move [X20+32], W0
	032 Move X8, [X19+48]
	033 Move X0, X20
	034 Move [X20+40], X8
	035 Move X8, [X19+64]
	036 Move [X20+56], X8
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x02383D2C LDR X1, [X8 + 0x28]
	0x02383D30 MOV X0, X21
	0x02383D34 BL 0x269F5D0
	0x02383D38 STR X0, [X31 + 0x8]

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+72]
	004 Call 0x2383C98, X0
	005 Return X0

