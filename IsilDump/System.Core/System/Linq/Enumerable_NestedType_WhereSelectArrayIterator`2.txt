Type: System.Linq.Enumerable/WhereSelectArrayIterator`2

Method: System.Void .ctor(TSource[] source, System.Func`2<TSource, System.Boolean> predicate, System.Func`2<TSource, TResult> selector)

Disassembly:
	0x0285DB00 STP X20, X19, [X31 + 0x10]
	0x0285DB04 LDR W8, [X0 + 0x14]
	0x0285DB08 CMP W8, 0x1
	0x0285DB0C B.NE 0x285DB9C
	0x0285DB10 MOV X19, X0
	0x0285DB14 LDR X9, [X19 + 0x20]
	0x0285DB18 CBZ X9, 0x285DBB0
	0x0285DB1C LDRSW X8, [X19 + 0x38]
	0x0285DB20 LDR W10, [X9 + 0x18]
	0x0285DB24 CMP W8, W10
	0x0285DB28 B.GE 0x285DB8C
	0x0285DB2C CMP W8, W10
	0x0285DB30 B.CS 0x285DBAC
	0x0285DB34 ADD X10, X9, X8, 0x3, LSL
	0x0285DB38 LDR X9, [X19 + 0x28]
	0x0285DB3C LDR X20, [X10 + 0x20]
	0x0285DB40 ADD W8, W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X4+32]
	007 Move X21, X1
	008 Move X19, X3
	009 Move X20, X2
	010 Move X8, [X8+192]
	011 Move X22, X0
	012 Move X1, [X8]
	013 Call Iterator`1<ValueTuple`2<Object, Object>>..ctor, X0
	014 Move [X22+40], X21
	015 Move [X22+48], X20
	016 Move [X22+56], X19
	017 Move X20, [X31+32]
	018 Move X19, [X31+40]
	019 Move X22, [X31+16]
	020 Move X21, [X31+24]
	021 Move X30, [X31+48]
	022 Return 

Method: System.Linq.Enumerable/Iterator`1<TResult> Clone()

Disassembly:
	0x0285DB44 STR W8, [X19 + 0x38]
	0x0285DB48 CBZ X9, 0x285DB64
	0x0285DB4C LDR X8, [X9 + 0x18]
	0x0285DB50 LDR X0, [X9 + 0x40]
	0x0285DB54 LDR X2, [X9 + 0x28]
	0x0285DB58 MOV X1, X20
	0x0285DB5C BLR X8
	0x0285DB60 TBZ X0, 0x0, 0x285DB14
	0x0285DB64 LDR X8, [X19 + 0x30]
	0x0285DB68 CBZ X8, 0x285DBB0
	0x0285DB6C LDR X9, [X8 + 0x18]
	0x0285DB70 LDR X0, [X8 + 0x40]
	0x0285DB74 LDR X2, [X8 + 0x28]
	0x0285DB78 MOV X1, X20
	0x0285DB7C BLR X9
	0x0285DB80 STR X0, [X19 + 0x18]
	0x0285DB84 MOVZ W0, 0x1
	0x0285DB88 B 0x285DBA0
	0x0285DB8C LDR X8, [X19]
	0x0285DB90 MOV X0, X19
	0x0285DB94 LDP X9, X1, [X8 + 0x1F8]
	0x0285DB98 BLR X9
	0x0285DB9C MOV W0, W31
	0x0285DBA0 LDP X20, X19, [X31 + 0x10]
	0x0285DBA4 LDR X30, [X31], #0x20
	0x0285DBA8 RET
	0x0285DBAC BL 0x1C16F28
	0x0285DBB0 BL 0x1C16F20
	0x0285DBB4 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X9, [X1+32]
	007 Move X8, X0
	008 Move X21, [X8+40]
	009 Move X20, [X8+48]
	010 Move X22, [X8+56]
	011 Move X9, [X9+192]
	012 Move X19, X1
	013 Move X0, [X9+24]
	014 Move W9, [X0+309]
	015 Move TEMP, X9
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Call 0x1C17F10
	021 Move X8, [X19+32]
	022 Move X19, X0
	023 Move X8, [X8+192]
	024 Move X8, [X8+48]
	025 Move X8, [X8+32]
	026 Move X8, [X8+192]
	027 Move X1, [X8]
	028 Call Iterator`1<ValueTuple`2<Object, Object>>..ctor, X0
	029 Move [X19+40], X21
	030 Move [X19+48], X20
	031 Move [X19+56], X22
	032 Move X0, X19
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return X0

Method: System.Boolean MoveNext()

Disassembly:
	0x0285DBB8 STP X20, X19, [X31 + 0x10]
	0x0285DBBC LDR X8, [X2 + 0x20]
	0x0285DBC0 MOV X21, X2
	0x0285DBC4 MOV X19, X1
	0x0285DBC8 MOV X20, X0
	0x0285DBCC LDR X8, [X8 + 0xC0]
	0x0285DBD0 LDR X8, [X8 + 0x70]
	0x0285DBD4 LDRB W9, [X8 + 0x135]
	0x0285DBD8 TBNZ X9, 0x0, 0x285DBE8
	0x0285DBDC MOV X0, X8
	0x0285DBE0 BL 0x1C5C684
	0x0285DBE4 MOV X8, X0
	0x0285DBE8 MOV X0, X8
	0x0285DBEC BL 0x1C16F10
	0x0285DBF0 LDR X8, [X21 + 0x20]
	0x0285DBF4 MOV X21, X0
	0x0285DBF8 LDR X8, [X8 + 0xC0]
	0x0285DBFC LDR X8, [X8 + 0x78]
	0x0285DC00 LDR X8, [X8 + 0x20]
	0x0285DC04 LDR X8, [X8 + 0xC0]
	0x0285DC08 LDR X1, [X8]
	0x0285DC0C BL 0x2EA2888
	0x0285DC10 STP X20, X19, [X21 + 0x20]
	0x0285DC14 LDP X20, X19, [X31 + 0x10]
	0x0285DC18 MOV X0, X21
	0x0285DC1C LDP X30, X21, [X31], #0x20
	0x0285DC20 RET
	0x0285DC24 STR X30, [X31 - 0x30]!
	0x0285DC28 STP X22, X21, [X31 + 0x10]
	0x0285DC2C STP X20, X19, [X31 + 0x20]
	0x0285DC30 LDR X8, [X4 + 0x20]
	0x0285DC34 MOV X21, X1
	0x0285DC38 MOV X19, X3
	0x0285DC3C MOV X20, X2
	0x0285DC40 LDR X8, [X8 + 0xC0]
	0x0285DC44 MOV X22, X0
	0x0285DC48 LDR X1, [X8]
	0x0285DC4C BL 0x2EA3C98
	0x0285DC50 STP X21, X20, [X22 + 0x20]
	0x0285DC54 STR X19, [X22 + 0x30]
	0x0285DC58 LDP X20, X19, [X31 + 0x20]
	0x0285DC5C LDP X22, X21, [X31 + 0x10]
	0x0285DC60 LDR X30, [X31], #0x30
	0x0285DC64 RET
	0x0285DC68 STR X30, [X31 - 0x30]!
	0x0285DC6C STP X22, X21, [X31 + 0x10]
	0x0285DC70 STP X20, X19, [X31 + 0x20]
	0x0285DC74 LDR X9, [X1 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+20]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X19, X0
	008 Move X9, [X19+40]
	009 Compare X9, 0
	010 JumpIfEqual {57}
	011 NotImplemented "Instruction LDRSW not yet implemented."
	012 Move W10, [X9+24]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Add X10, X9, X8
	016 Move X9, [X19+48]
	017 Move X21, [X10+32]
	018 Move X20, [X10+40]
	019 Add W8, W8, 1
	020 Move [X19+64], W8
	021 Compare X9, 0
	022 JumpIfEqual {33}
	023 Move X8, [X9+24]
	024 Move X0, [X9+64]
	025 Move X3, [X9+40]
	026 Move X1, X21
	027 Move X2, X20
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {8}
	033 Move X8, [X19+56]
	034 Compare X8, 0
	035 JumpIfEqual {57}
	036 Move X9, [X8+24]
	037 Move X0, [X8+64]
	038 Move X3, [X8+40]
	039 Move X1, X21
	040 Move X2, X20
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move [X19+24], X0
	043 Move [X19+32], X1
	044 Move W0, 1
	045 Move X8, [X19]
	046 Move X0, X19
	047 Move X9, [X8+504]
	048 Move X1, [X8+512]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move W0, W31
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return X0
	056 Call 0x1C17F28
	057 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<TResult2> Select(System.Func`2<TResult, TResult2> selector)

Disassembly:
	0x02140160 LDP X30, X23, [X31], #0x30
	0x02140164 RET
	0x02140168 STP X30, X23, [X31 - 0x30]!
	0x0214016C STP X22, X21, [X31 + 0x10]
	0x02140170 STP X20, X19, [X31 + 0x20]
	0x02140174 LDR X8, [X2 + 0x38]
	0x02140178 MOV X19, X2
	0x0214017C MOV X22, X1
	0x02140180 MOV X23, X0
	0x02140184 CBNZ X8, 0x2140194
	0x02140188 MOV X0, X19
	0x0214018C BL 0x1C5C6E0
	0x02140190 LDR X8, [X19 + 0x38]
	0x02140194 LDR X0, [X23 + 0x30]
	0x02140198 LDR X2, [X8 + 0x8]
	0x0214019C LDP X20, X21, [X23 + 0x20]
	0x021401A0 MOV X1, X22
	0x021401A4 BL 0x21B6854
	0x021401A8 LDR X8, [X19 + 0x38]
	0x021401AC MOV X22, X0
	0x021401B0 LDR X8, [X8 + 0x18]
	0x021401B4 LDRB W9, [X8 + 0x135]
	0x021401B8 TBNZ X9, 0x0, 0x21401C8
	0x021401BC MOV X0, X8
	0x021401C0 BL 0x1C5C684
	0x021401C4 MOV X8, X0
	0x021401C8 MOV X0, X8
	0x021401CC BL 0x1C16F10
	0x021401D0 LDR X8, [X19 + 0x38]
	0x021401D4 MOV X1, X20
	0x021401D8 MOV X2, X21
	0x021401DC MOV X3, X22
	0x021401E0 LDR X4, [X8 + 0x20]
	0x021401E4 MOV X19, X0
	0x021401E8 BL 0x28600D4
	0x021401EC MOV X0, X19
	0x021401F0 LDP X20, X19, [X31 + 0x20]
	0x021401F4 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X2+56]
	008 Move X19, X2
	009 Move X22, X1
	010 Move X23, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {16}
	013 Move X0, X19
	014 Call 0x1C5D6E0
	015 Move X8, [X19+56]
	016 Move X0, [X23+48]
	017 Move X2, [X8+8]
	018 Move X20, [X23+32]
	019 Move X21, [X23+40]
	020 Move X1, X22
	021 Call 0x21B6774, X0, X1
	022 Move X8, [X19+56]
	023 Move X22, X0
	024 Move X8, [X8+24]
	025 Move W9, [X8+309]
	026 Move TEMP, X9
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {33}
	030 Move X0, X8
	031 Call 0x1C5D684
	032 Move X8, X0
	033 Move X0, X8
	034 Call 0x1C17F10
	035 Move X8, [X19+56]
	036 Move X1, X20
	037 Move X2, X21
	038 Move X3, X22
	039 Move X4, [X8+32]
	040 Move X19, X0
	041 Call WhereSelectArrayIterator`2<KeyValuePair`2<Edge, Object>, Edge>..ctor, X0, X1, X2, X3
	042 Move X0, X19
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Return X0

Method: System.Collections.Generic.IEnumerable`1<TResult> Where(System.Func`2<TResult, System.Boolean> predicate)

Disassembly:
	0x0285DC78 MOV X8, X0
	0x0285DC7C LDP X21, X20, [X8 + 0x20]
	0x0285DC80 LDR X22, [X8 + 0x30]
	0x0285DC84 LDR X9, [X9 + 0xC0]
	0x0285DC88 MOV X19, X1
	0x0285DC8C LDR X0, [X9 + 0x18]
	0x0285DC90 LDRB W9, [X0 + 0x135]
	0x0285DC94 TBNZ X9, 0x0, 0x285DC9C
	0x0285DC98 BL 0x1C5C684
	0x0285DC9C BL 0x1C16F10
	0x0285DCA0 LDR X8, [X19 + 0x20]
	0x0285DCA4 MOV X19, X0
	0x0285DCA8 LDR X8, [X8 + 0xC0]
	0x0285DCAC LDR X8, [X8 + 0x30]
	0x0285DCB0 LDR X8, [X8 + 0x20]
	0x0285DCB4 LDR X8, [X8 + 0xC0]
	0x0285DCB8 LDR X1, [X8]
	0x0285DCBC BL 0x2EA3C98
	0x0285DCC0 STP X21, X20, [X19 + 0x20]
	0x0285DCC4 STR X22, [X19 + 0x30]
	0x0285DCC8 MOV X0, X19
	0x0285DCCC LDP X20, X19, [X31 + 0x20]
	0x0285DCD0 LDP X22, X21, [X31 + 0x10]
	0x0285DCD4 LDR X30, [X31], #0x30
	0x0285DCD8 RET
	0x0285DCDC STR X30, [X31 - 0x20]!
	0x0285DCE0 STP X20, X19, [X31 + 0x10]
	0x0285DCE4 LDR W8, [X0 + 0x14]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X21, X2
	007 Move X19, X1
	008 Move X20, X0
	009 Move X8, [X8+192]
	010 Move X8, [X8+112]
	011 Move W9, [X8+309]
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X8
	017 Call 0x1C5D684
	018 Move X8, X0
	019 Move X0, X8
	020 Call 0x1C17F10
	021 Move X8, [X21+32]
	022 Move X21, X0
	023 Move X8, [X8+192]
	024 Move X8, [X8+120]
	025 Move X8, [X8+32]
	026 Move X8, [X8+192]
	027 Move X1, [X8]
	028 Call Iterator`1<ValueTuple`2<Object, Object>>..ctor, X0
	029 Move [X21+40], X20
	030 Move [X21+48], X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X0, X21
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0

