Type: System.Linq.Enumerable/<ExceptIterator>d__77`1

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x0238EB04 LDR X0, [X8 + 0x48]
	0x0238EB08 BL 0x1C16E04
	0x0238EB0C LDR X30, [X31], #0x10
	0x0238EB10 RET
	0x0238EB14 STP X30, X21, [X31 - 0x20]!
	0x0238EB18 STP X20, X19, [X31 + 0x10]
	0x0238EB1C LDR W8, [X0 + 0x10]
	0x0238EB20 MOV X19, X0
	0x0238EB24 MOV X20, X1
	0x0238EB28 ADDS W31, W8, 0x2
	0x0238EB2C B.NE 0x238EB50
	0x0238EB30 LDR W21, [X19 + 0x18]
	0x0238EB34 MOV X0, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+24], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x0238EB38 BL 0x33C151C
	0x0238EB3C CMP W21, W0
	0x0238EB40 B.NE 0x238EB50
	0x0238EB44 STR W31, [X19 + 0x10]
	0x0238EB48 MOV X20, X19
	0x0238EB4C B 0x238EB88
	0x0238EB50 LDR X8, [X20 + 0x20]

ISIL:
	001 Move W8, [X0+16]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Add W31, W8, 3
	004 Call 0x238F1A8, X0
	005 Return 
	006 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x0238EB54 LDR X8, [X8 + 0xC0]
	0x0238EB58 LDR X0, [X8]
	0x0238EB5C LDRB W8, [X0 + 0x135]
	0x0238EB60 TBNZ X8, 0x0, 0x238EB68
	0x0238EB64 BL 0x1C5C684
	0x0238EB68 BL 0x1C16F10
	0x0238EB6C MOV X1, X31
	0x0238EB70 MOV X20, X0
	0x0238EB74 BL 0x33BDD8C
	0x0238EB78 MOV X0, X31
	0x0238EB7C STR W31, [X20 + 0x10]
	0x0238EB80 BL 0x33C151C
	0x0238EB84 STR W0, [X20 + 0x18]
	0x0238EB88 LDR X8, [X19 + 0x48]
	0x0238EB8C MOV X0, X20
	0x0238EB90 STR X8, [X20 + 0x40]
	0x0238EB94 LDR X8, [X19 + 0x38]
	0x0238EB98 STR X8, [X20 + 0x30]
	0x0238EB9C LDR X8, [X19 + 0x28]
	0x0238EBA0 STR X8, [X20 + 0x20]
	0x0238EBA4 LDP X20, X19, [X31 + 0x10]
	0x0238EBA8 LDP X30, X21, [X31], #0x20
	0x0238EBAC RET
	0x0238EBB0 LDR X8, [X1 + 0x20]
	0x0238EBB4 LDR X8, [X8 + 0xC0]
	0x0238EBB8 LDR X1, [X8 + 0x68]
	0x0238EBBC B 0x238EB14
	0x0238EBC0 STR X30, [X31 - 0x20]!
	0x0238EBC4 STP X20, X19, [X31 + 0x10]
	0x0238EBC8 MOV W19, W1
	0x0238EBCC MOV X1, X31
	0x0238EBD0 MOV X20, X0
	0x0238EBD4 BL 0x33BDD8C
	0x0238EBD8 MOV X0, X31
	0x0238EBDC STR W19, [X20 + 0x10]
	0x0238EBE0 BL 0x33C151C
	0x0238EBE4 STR W0, [X20 + 0x24]
	0x0238EBE8 LDP X20, X19, [X31 + 0x10]
	0x0238EBEC LDR X30, [X31], #0x20
	0x0238EBF0 RET
	0x0238EBF4 LDR W8, [X0 + 0x10]
	0x0238EBF8 CMP W8, 0x1
	0x0238EBFC B.EQ 0x238EC08
	0x0238EC00 ADDS W31, W8, 0x3
	0x0238EC04 B.NE 0x238EC0C
	0x0238EC08 B 0x238F274
	0x0238EC0C RET
	0x0238EC10 SUB X31, X31, 0x70
	0x0238EC14 STP D11, D10, [X31 + 0x30]
	0x0238EC18 STP D9, D8, [X31 + 0x40]
	0x0238EC1C STP X30, X21, [X31 + 0x50]
	0x0238EC20 STP X20, X19, [X31 + 0x60]
	0x0238EC24 ADRP X21, 0x204B000
	0x0238EC28 LDRB W8, [X21 + 0x945]
	0x0238EC2C MOV X19, X1
	0x0238EC30 MOV X20, X0
	0x0238EC34 STP X1, X0, [X31 + 0x20]
	0x0238EC38 TBNZ X8, 0x0, 0x238EC5C
	0x0238EC3C ADRP X0, 0x1D65000
	0x0238EC40 LDR X0, [X0 + 0xE00]
	0x0238EC44 BL 0x1C16CF4
	0x0238EC48 ADRP X0, 0x1D65000
	0x0238EC4C LDR X0, [X0 + 0xE18]
	0x0238EC50 BL 0x1C16CF4
	0x0238EC54 MOVZ W8, 0x1
	0x0238EC58 STRB W8, [X21 + 0x945]
	0x0238EC5C ADD X8, X31, 0x28
	0x0238EC60 ADD X9, X31, 0x20
	0x0238EC64 STP X31, X8, [X31 + 0x8]
	0x0238EC68 STR X9, [X31 + 0x18]
	0x0238EC6C LDR W8, [X20 + 0x10]
	0x0238EC70 CMP W8, 0x1
	0x0238EC74 B.EQ 0x238EF58
	0x0238EC78 CBNZ W8, 0x238F1F4
	0x0238EC7C MOVN W8, 0x0
	0x0238EC80 STR W8, [X20 + 0x10]
	0x0238EC84 LDR X8, [X19 + 0x20]
	0x0238EC88 LDR X19, [X20 + 0x28]
	0x0238EC8C LDR X8, [X8 + 0xC0]
	0x0238EC90 LDR X0, [X8 + 0x18]
	0x0238EC94 LDRB W8, [X0 + 0x135]
	0x0238EC98 TBNZ X8, 0x0, 0x238ECA0
	0x0238EC9C BL 0x1C5C684
	0x0238ECA0 BL 0x1C16F10
	0x0238ECA4 LDR X8, [X31 + 0x20]
	0x0238ECA8 MOV X20, X0
	0x0238ECAC LDR X8, [X8 + 0x20]
	0x0238ECB0 LDR X8, [X8 + 0xC0]
	0x0238ECB4 LDR X2, [X8 + 0x20]
	0x0238ECB8 MOV X1, X19
	0x0238ECBC BL 0x25E0BC8
	0x0238ECC0 LDR X8, [X31 + 0x28]
	0x0238ECC4 LDR X19, [X8 + 0x38]
	0x0238ECC8 STR X20, [X8 + 0x58]
	0x0238ECCC CBZ X19, 0x238F0D0
	0x0238ECD0 LDR X8, [X31 + 0x20]
	0x0238ECD4 LDR X8, [X8 + 0x20]
	0x0238ECD8 LDR X8, [X8 + 0xC0]
	0x0238ECDC LDR X1, [X8 + 0x28]
	0x0238ECE0 LDRB W8, [X1 + 0x135]
	0x0238ECE4 TBNZ X8, 0x0, 0x238ECF4
	0x0238ECE8 MOV X0, X1
	0x0238ECEC BL 0x1C5C684
	0x0238ECF0 MOV X1, X0
	0x0238ECF4 LDR X8, [X19]
	0x0238ECF8 LDRH W9, [X8 + 0x12E]
	0x0238ECFC CBZ X9, 0x238ED20
	0x0238ED00 LDR X10, [X8 + 0xB0]
	0x0238ED04 ADD X10, X10, 0x8
	0x0238ED08 LDUR X11, [X10 - 0x8]
	0x0238ED0C CMP X11, X1
	0x0238ED10 B.EQ 0x238ED30
	0x0238ED14 SUBS X9, X9, 0x1
	0x0238ED18 ADD X10, X10, 0x10
	0x0238ED1C B.NE 0x238ED08
	0x0238ED20 MOV X0, X19
	0x0238ED24 MOV W2, W31
	0x0238ED28 BL 0x1C5C788
	0x0238ED2C B 0x238ED3C
	0x0238ED30 LDRSW X9, [X10]
	0x0238ED34 ADD X8, X8, X9, 0x4, LSL
	0x0238ED38 ADD X0, X8, 0x138
	0x0238ED3C LDP X8, X1, [X0]
	0x0238ED40 MOV X0, X19
	0x0238ED44 BLR X8
	0x0238ED48 MOV X19, X0
	0x0238ED4C CBZ X0, 0x238F0D4
	0x0238ED50 ADRP X20, 0x1D65000
	0x0238ED54 LDR X20, [X20 + 0xE18]
	0x0238ED58 LDR X8, [X19]
	0x0238ED5C LDR X1, [X20]
	0x0238ED60 LDRH W9, [X8 + 0x12E]
	0x0238ED64 CBZ X9, 0x238ED88
	0x0238ED68 LDR X10, [X8 + 0xB0]
	0x0238ED6C ADD X10, X10, 0x8
	0x0238ED70 LDUR X11, [X10 - 0x8]
	0x0238ED74 CMP X11, X1
	0x0238ED78 B.EQ 0x238ED98
	0x0238ED7C SUBS X9, X9, 0x1
	0x0238ED80 ADD X10, X10, 0x10
	0x0238ED84 B.NE 0x238ED70
	0x0238ED88 MOV X0, X19
	0x0238ED8C MOV W2, W31
	0x0238ED90 BL 0x1C5C788
	0x0238ED94 B 0x238EDA4
	0x0238ED98 LDRSW X9, [X10]
	0x0238ED9C ADD X8, X8, X9, 0x4, LSL
	0x0238EDA0 ADD X0, X8, 0x138
	0x0238EDA4 LDP X8, X1, [X0]
	0x0238EDA8 MOV X0, X19
	0x0238EDAC BLR X8
	0x0238EDB0 TBZ X0, 0x0, 0x238EE50
	0x0238EDB4 LDR X8, [X31 + 0x20]
	0x0238EDB8 LDR X8, [X8 + 0x20]
	0x0238EDBC LDR X8, [X8 + 0xC0]
	0x0238EDC0 LDR X1, [X8 + 0x38]
	0x0238EDC4 LDRB W8, [X1 + 0x135]
	0x0238EDC8 TBNZ X8, 0x0, 0x238EDD8
	0x0238EDCC MOV X0, X1
	0x0238EDD0 BL 0x1C5C684
	0x0238EDD4 MOV X1, X0
	0x0238EDD8 LDR X8, [X19]
	0x0238EDDC LDRH W9, [X8 + 0x12E]
	0x0238EDE0 CBZ X9, 0x238EE04
	0x0238EDE4 LDR X10, [X8 + 0xB0]
	0x0238EDE8 ADD X10, X10, 0x8
	0x0238EDEC LDUR X11, [X10 - 0x8]
	0x0238EDF0 CMP X11, X1
	0x0238EDF4 B.EQ 0x238EE14
	0x0238EDF8 SUBS X9, X9, 0x1
	0x0238EDFC ADD X10, X10, 0x10
	0x0238EE00 B.NE 0x238EDEC
	0x0238EE04 MOV X0, X19
	0x0238EE08 MOV W2, W31
	0x0238EE0C BL 0x1C5C788
	0x0238EE10 B 0x238EE20
	0x0238EE14 LDRSW X9, [X10]
	0x0238EE18 ADD X8, X8, X9, 0x4, LSL
	0x0238EE1C ADD X0, X8, 0x138
	0x0238EE20 LDP X8, X1, [X0]
	0x0238EE24 MOV X0, X19
	0x0238EE28 BLR X8
	0x0238EE2C LDR X8, [X31 + 0x28]
	0x0238EE30 LDR X0, [X8 + 0x58]
	0x0238EE34 CBZ X0, 0x238F0C4
	0x0238EE38 LDR X8, [X31 + 0x20]
	0x0238EE3C LDR X8, [X8 + 0x20]
	0x0238EE40 LDR X8, [X8 + 0xC0]
	0x0238EE44 LDR X1, [X8 + 0x50]
	0x0238EE48 BL 0x25E0C7C
	0x0238EE4C B 0x238ED58
	0x0238EE50 MOV X20, X31
	0x0238EE54 MOVZ W21, 0x7
	0x0238EE58 CBZ X19, 0x238EEBC
	0x0238EE5C ADRP X10, 0x1D65000
	0x0238EE60 LDR X8, [X19]
	0x0238EE64 LDR X10, [X10 + 0xE00]
	0x0238EE68 LDRH W9, [X8 + 0x12E]
	0x0238EE6C LDR X1, [X10]
	0x0238EE70 CBZ X9, 0x238EE94
	0x0238EE74 LDR X10, [X8 + 0xB0]
	0x0238EE78 ADD X10, X10, 0x8
	0x0238EE7C LDUR X11, [X10 - 0x8]
	0x0238EE80 CMP X11, X1
	0x0238EE84 B.EQ 0x238EEA4
	0x0238EE88 SUBS X9, X9, 0x1
	0x0238EE8C ADD X10, X10, 0x10
	0x0238EE90 B.NE 0x238EE7C
	0x0238EE94 MOV X0, X19
	0x0238EE98 MOV W2, W31
	0x0238EE9C BL 0x1C5C788
	0x0238EEA0 B 0x238EEB0
	0x0238EEA4 LDRSW X9, [X10]
	0x0238EEA8 ADD X8, X8, X9, 0x4, LSL
	0x0238EEAC ADD X0, X8, 0x138
	0x0238EEB0 LDP X8, X1, [X0]
	0x0238EEB4 MOV X0, X19
	0x0238EEB8 BLR X8
	0x0238EEBC CBNZ X20, 0x238F0D8
	0x0238EEC0 CMP W21, 0x7
	0x0238EEC4 B.EQ 0x238EECC
	0x0238EEC8 CBNZ W21, 0x238F1F4
	0x0238EECC LDR X8, [X31 + 0x28]
	0x0238EED0 LDR X19, [X8 + 0x48]
	0x0238EED4 CBZ X19, 0x238F0E0
	0x0238EED8 LDR X8, [X31 + 0x20]
	0x0238EEDC LDR X8, [X8 + 0x20]
	0x0238EEE0 LDR X8, [X8 + 0xC0]
	0x0238EEE4 LDR X1, [X8 + 0x28]
	0x0238EEE8 LDRB W8, [X1 + 0x135]
	0x0238EEEC TBNZ X8, 0x0, 0x238EEFC
	0x0238EEF0 MOV X0, X1
	0x0238EEF4 BL 0x1C5C684
	0x0238EEF8 MOV X1, X0
	0x0238EEFC LDR X8, [X19]
	0x0238EF00 LDRH W9, [X8 + 0x12E]
	0x0238EF04 CBZ X9, 0x238EF28
	0x0238EF08 LDR X10, [X8 + 0xB0]
	0x0238EF0C ADD X10, X10, 0x8
	0x0238EF10 LDUR X11, [X10 - 0x8]
	0x0238EF14 CMP X11, X1
	0x0238EF18 B.EQ 0x238EF38
	0x0238EF1C SUBS X9, X9, 0x1
	0x0238EF20 ADD X10, X10, 0x10
	0x0238EF24 B.NE 0x238EF10
	0x0238EF28 MOV X0, X19
	0x0238EF2C MOV W2, W31
	0x0238EF30 BL 0x1C5C788
	0x0238EF34 B 0x238EF44
	0x0238EF38 LDRSW X9, [X10]
	0x0238EF3C ADD X8, X8, X9, 0x4, LSL
	0x0238EF40 ADD X0, X8, 0x138
	0x0238EF44 LDP X8, X1, [X0]
	0x0238EF48 MOV X0, X19
	0x0238EF4C BLR X8
	0x0238EF50 LDR X20, [X31 + 0x28]
	0x0238EF54 STR X0, [X20 + 0x60]
	0x0238EF58 LDR X19, [X20 + 0x60]
	0x0238EF5C MOVN W8, 0x2
	0x0238EF60 STR W8, [X20 + 0x10]
	0x0238EF64 CBZ X19, 0x238F094
	0x0238EF68 ADRP X20, 0x1D65000
	0x0238EF6C LDR X20, [X20 + 0xE18]
	0x0238EF70 LDR X8, [X19]
	0x0238EF74 LDR X1, [X20]
	0x0238EF78 LDRH W9, [X8 + 0x12E]
	0x0238EF7C CBZ X9, 0x238EFA0
	0x0238EF80 LDR X10, [X8 + 0xB0]
	0x0238EF84 ADD X10, X10, 0x8
	0x0238EF88 LDUR X11, [X10 - 0x8]
	0x0238EF8C CMP X11, X1
	0x0238EF90 B.EQ 0x238EFB0
	0x0238EF94 SUBS X9, X9, 0x1
	0x0238EF98 ADD X10, X10, 0x10
	0x0238EF9C B.NE 0x238EF88
	0x0238EFA0 MOV X0, X19
	0x0238EFA4 MOV W2, W31
	0x0238EFA8 BL 0x1C5C788
	0x0238EFAC B 0x238EFBC
	0x0238EFB0 LDRSW X9, [X10]
	0x0238EFB4 ADD X8, X8, X9, 0x4, LSL
	0x0238EFB8 ADD X0, X8, 0x138
	0x0238EFBC LDP X8, X1, [X0]
	0x0238EFC0 MOV X0, X19
	0x0238EFC4 BLR X8
	0x0238EFC8 MOV W8, W0
	0x0238EFCC LDR X0, [X31 + 0x28]
	0x0238EFD0 TBZ X8, 0x0, 0x238F098
	0x0238EFD4 LDR X19, [X0 + 0x60]
	0x0238EFD8 CBZ X19, 0x238F0C8
	0x0238EFDC LDR X8, [X31 + 0x20]
	0x0238EFE0 LDR X8, [X8 + 0x20]
	0x0238EFE4 LDR X8, [X8 + 0xC0]
	0x0238EFE8 LDR X1, [X8 + 0x38]
	0x0238EFEC LDRB W8, [X1 + 0x135]
	0x0238EFF0 TBNZ X8, 0x0, 0x238F000
	0x0238EFF4 MOV X0, X1
	0x0238EFF8 BL 0x1C5C684
	0x0238EFFC MOV X1, X0
	0x0238F000 LDR X8, [X19]
	0x0238F004 LDRH W9, [X8 + 0x12E]
	0x0238F008 CBZ X9, 0x238F02C
	0x0238F00C LDR X10, [X8 + 0xB0]
	0x0238F010 ADD X10, X10, 0x8
	0x0238F014 LDUR X11, [X10 - 0x8]
	0x0238F018 CMP X11, X1
	0x0238F01C B.EQ 0x238F03C
	0x0238F020 SUBS X9, X9, 0x1
	0x0238F024 ADD X10, X10, 0x10
	0x0238F028 B.NE 0x238F014
	0x0238F02C MOV X0, X19
	0x0238F030 MOV W2, W31
	0x0238F034 BL 0x1C5C788
	0x0238F038 B 0x238F048
	0x0238F03C LDRSW X9, [X10]
	0x0238F040 ADD X8, X8, X9, 0x4, LSL
	0x0238F044 ADD X0, X8, 0x138
	0x0238F048 LDP X8, X1, [X0]
	0x0238F04C MOV X0, X19
	0x0238F050 BLR X8
	0x0238F054 LDR X8, [X31 + 0x28]
	0x0238F058 LDR X0, [X8 + 0x58]
	0x0238F05C CBZ X0, 0x238F0CC
	0x0238F060 LDR X8, [X31 + 0x20]
	0x0238F064 MOV V8.16B, V0.16B
	0x0238F068 MOV V9.16B, V1.16B
	0x0238F06C MOV V10.16B, V2.16B
	0x0238F070 LDR X8, [X8 + 0x20]
	0x0238F074 MOV V11.16B, V3.16B
	0x0238F078 LDR X8, [X8 + 0xC0]
	0x0238F07C LDR X1, [X8 + 0x50]
	0x0238F080 BL 0x25E0C7C
	0x0238F084 TBNZ X0, 0x0, 0x238F0AC
	0x0238F088 LDR X8, [X31 + 0x28]
	0x0238F08C LDR X19, [X8 + 0x60]
	0x0238F090 CBNZ X19, 0x238EF70
	0x0238F094 BL 0x1C16F20
	0x0238F098 BL 0x238F274
	0x0238F09C LDR X8, [X31 + 0x28]
	0x0238F0A0 MOV W0, W31
	0x0238F0A4 STR X31, [X8 + 0x60]
	0x0238F0A8 B 0x238F1F8
	0x0238F0AC LDR X8, [X31 + 0x28]
	0x0238F0B0 MOVZ W0, 0x1
	0x0238F0B4 STP S8, S9, [X8 + 0x14]
	0x0238F0B8 STP S10, S11, [X8 + 0x1C]
	0x0238F0BC STR W0, [X8 + 0x10]
	0x0238F0C0 B 0x238F1F8
	0x0238F0C4 BL 0x1C16F20
	0x0238F0C8 BL 0x1C16F20
	0x0238F0CC BL 0x1C16F20
	0x0238F0D0 BL 0x1C16F20
	0x0238F0D4 BL 0x1C16F20
	0x0238F0D8 MOV X0, X20
	0x0238F0DC BL 0x1C16F18
	0x0238F0E0 BL 0x1C16F20
	0x0238F0E4 B 0x238F124
	0x0238F0E8 B 0x238F124
	0x0238F0EC B 0x238F130
	0x0238F0F0 B 0x238F124
	0x0238F0F4 B 0x238F124
	0x0238F0F8 B 0x238F124
	0x0238F0FC B 0x238F124
	0x0238F100 B 0x238F124
	0x0238F104 B 0x238F124
	0x0238F108 B 0x238F124
	0x0238F10C B 0x238F124
	0x0238F110 B 0x238F124
	0x0238F114 B 0x238F130
	0x0238F118 B 0x238F130
	0x0238F11C B 0x238F124
	0x0238F120 B 0x238F130
	0x0238F124 MOV X20, X1
	0x0238F128 MOV X21, X0
	0x0238F12C B 0x238F1D4
	0x0238F130 MOV X20, X1
	0x0238F134 MOV X21, X0
	0x0238F138 CMP W20, 0x1
	0x0238F13C B.NE 0x238F164
	0x0238F140 MOV X0, X21
	0x0238F144 BL 0x3EB1AD0
	0x0238F148 LDR X8, [X0]
	0x0238F14C STR X8, [X31]
	0x0238F150 BL 0x3EB1AE0
	0x0238F154 LDR X20, [X31]
	0x0238F158 MOV W21, W31
	0x0238F15C CBNZ X19, 0x238EE5C
	0x0238F160 B 0x238EEBC
	0x0238F164 STR X31, [X31]
	0x0238F168 CBZ X19, 0x238F1CC
	0x0238F16C ADRP X10, 0x1D64000
	0x0238F170 LDR X8, [X19]
	0x0238F174 LDR X10, [X10 + 0xE00]
	0x0238F178 LDRH W9, [X8 + 0x12E]
	0x0238F17C LDR X1, [X10]
	0x0238F180 CBZ X9, 0x238F1A4
	0x0238F184 LDR X10, [X8 + 0xB0]
	0x0238F188 ADD X10, X10, 0x8
	0x0238F18C LDUR X11, [X10 - 0x8]
	0x0238F190 CMP X11, X1
	0x0238F194 B.EQ 0x238F1B4
	0x0238F198 SUBS X9, X9, 0x1
	0x0238F19C ADD X10, X10, 0x10
	0x0238F1A0 B.NE 0x238F18C
	0x0238F1A4 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0x204C000
	007 Move W8, [X21+2369]
	008 Move X19, X1
	009 Move X20, X0
	010 Move [X31+32], X1
	011 Move [X31+40], X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x1D66000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move X0, 0x1D66000
	020 Move X0, [X0+3608]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2369], W8
	024 Add X8, X31, 40
	025 Add X9, X31, 32
	026 Move [X31+8], X31
	027 Move [X31+16], X8
	028 Move [X31+24], X9
	029 Move W8, [X20+16]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Compare W8, 0
	032 JumpIfNotEqual {394}
	033 Move TEMP, 0
	034 Not TEMP
	035 Move W8, TEMP
	036 Move [X20+16], W8
	037 Move X8, [X19+32]
	038 Move X19, [X20+32]
	039 Move X8, [X8+192]
	040 Move X0, [X8+24]
	041 Move W8, [X0+309]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {47}
	046 Call 0x1C5D684
	047 Call 0x1C17F10
	048 Move X8, [X31+32]
	049 Move X20, X0
	050 Move X8, [X8+32]
	051 Move X8, [X8+192]
	052 Move X2, [X8+32]
	053 Move X1, X19
	054 Call 0x25E118C, X0, X1
	055 Move X8, [X31+40]
	056 Move X19, [X8+48]
	057 Move [X8+80], X20
	058 Compare X19, 0
	059 JumpIfEqual {338}
	060 Move X8, [X31+32]
	061 Move X8, [X8+32]
	062 Move X8, [X8+192]
	063 Move X1, [X8+40]
	064 Move W8, [X1+309]
	065 Move TEMP, X8
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {72}
	069 Move X0, X1
	070 Call 0x1C5D684
	071 Move X1, X0
	072 Move X8, [X19]
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Compare X9, 0
	075 JumpIfEqual {82}
	076 Move X10, [X8+176]
	077 Add X10, X10, 8
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Subtract X9, X9, 1
	081 Add X10, X10, 16
	082 Move X0, X19
	083 Move W2, W31
	084 Call 0x1C5D788
	085 NotImplemented "Instruction LDRSW not yet implemented."
	086 Add X8, X8, X9
	087 Add X0, X8, 312
	088 Move X8, [X0]
	089 Move X1, [X0+8]
	090 Move X0, X19
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move X19, X0
	093 Compare X0, 0
	094 JumpIfEqual {339}
	095 Move X20, 0x1D66000
	096 Move X20, [X20+3608]
	097 Move X8, [X19]
	098 Move X1, [X20]
	099 NotImplemented "Instruction LDRH not yet implemented."
	100 Compare X9, 0
	101 JumpIfEqual {108}
	102 Move X10, [X8+176]
	103 Add X10, X10, 8
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Subtract X9, X9, 1
	107 Add X10, X10, 16
	108 Move X0, X19
	109 Move W2, W31
	110 Call 0x1C5D788
	111 NotImplemented "Instruction LDRSW not yet implemented."
	112 Add X8, X8, X9
	113 Add X0, X8, 312
	114 Move X8, [X0]
	115 Move X1, [X0+8]
	116 Move X0, X19
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move TEMP, X0
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfNotEqual {165}
	122 Move X8, [X31+32]
	123 Move X8, [X8+32]
	124 Move X8, [X8+192]
	125 Move X1, [X8+56]
	126 Move W8, [X1+309]
	127 Move TEMP, X8
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfEqual {134}
	131 Move X0, X1
	132 Call 0x1C5D684
	133 Move X1, X0
	134 Move X8, [X19]
	135 NotImplemented "Instruction LDRH not yet implemented."
	136 Compare X9, 0
	137 JumpIfEqual {144}
	138 Move X10, [X8+176]
	139 Add X10, X10, 8
	140 NotImplemented "Instruction LDUR not yet implemented."
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Subtract X9, X9, 1
	143 Add X10, X10, 16
	144 Move X0, X19
	145 Move W2, W31
	146 Call 0x1C5D788
	147 NotImplemented "Instruction LDRSW not yet implemented."
	148 Add X8, X8, X9
	149 Add X0, X8, 312
	150 Move X8, [X0]
	151 Move X1, [X0+8]
	152 Move X0, X19
	153 NotImplemented "Instruction BLR not yet implemented."
	154 Move X8, [X31+40]
	155 Move X8, [X8+80]
	156 Compare X8, 0
	157 JumpIfEqual {335}
	158 Move X9, [X31+32]
	159 Move X9, [X9+32]
	160 Move X9, [X9+192]
	161 Move X2, [X9+80]
	162 And W1, W0, 1
	163 Move X0, X8
	164 Call 0x25E1240, X0, X1
	165 Move X20, X31
	166 Move W21, 7
	167 Compare X19, 0
	168 JumpIfEqual {192}
	169 Move X10, 0x1D66000
	170 Move X8, [X19]
	171 Move X10, [X10+3584]
	172 NotImplemented "Instruction LDRH not yet implemented."
	173 Move X1, [X10]
	174 Compare X9, 0
	175 JumpIfEqual {182}
	176 Move X10, [X8+176]
	177 Add X10, X10, 8
	178 NotImplemented "Instruction LDUR not yet implemented."
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Subtract X9, X9, 1
	181 Add X10, X10, 16
	182 Move X0, X19
	183 Move W2, W31
	184 Call 0x1C5D788
	185 NotImplemented "Instruction LDRSW not yet implemented."
	186 Add X8, X8, X9
	187 Add X0, X8, 312
	188 Move X8, [X0]
	189 Move X1, [X0+8]
	190 Move X0, X19
	191 NotImplemented "Instruction BLR not yet implemented."
	192 Compare X20, 0
	193 JumpIfNotEqual {340}
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Compare W21, 0
	196 JumpIfNotEqual {394}
	197 Move X8, [X31+40]
	198 Move X19, [X8+64]
	199 Compare X19, 0
	200 JumpIfEqual {342}
	201 Move X8, [X31+32]
	202 Move X8, [X8+32]
	203 Move X8, [X8+192]
	204 Move X1, [X8+40]
	205 Move W8, [X1+309]
	206 Move TEMP, X8
	207 And TEMP, TEMP, 1
	208 Compare TEMP, 1
	209 JumpIfEqual {213}
	210 Move X0, X1
	211 Call 0x1C5D684
	212 Move X1, X0
	213 Move X8, [X19]
	214 NotImplemented "Instruction LDRH not yet implemented."
	215 Compare X9, 0
	216 JumpIfEqual {223}
	217 Move X10, [X8+176]
	218 Add X10, X10, 8
	219 NotImplemented "Instruction LDUR not yet implemented."
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Subtract X9, X9, 1
	222 Add X10, X10, 16
	223 Move X0, X19
	224 Move W2, W31
	225 Call 0x1C5D788
	226 NotImplemented "Instruction LDRSW not yet implemented."
	227 Add X8, X8, X9
	228 Add X0, X8, 312
	229 Move X8, [X0]
	230 Move X1, [X0+8]
	231 Move X0, X19
	232 NotImplemented "Instruction BLR not yet implemented."
	233 Move X20, [X31+40]
	234 Move [X20+88], X0
	235 Move X19, [X20+88]
	236 Move TEMP, 2
	237 Not TEMP
	238 Move W8, TEMP
	239 Move [X20+16], W8
	240 Compare X19, 0
	241 JumpIfEqual {325}
	242 Move X20, 0x1D66000
	243 Move X20, [X20+3608]
	244 Move X8, [X19]
	245 Move X1, [X20]
	246 NotImplemented "Instruction LDRH not yet implemented."
	247 Compare X9, 0
	248 JumpIfEqual {255}
	249 Move X10, [X8+176]
	250 Add X10, X10, 8
	251 NotImplemented "Instruction LDUR not yet implemented."
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Subtract X9, X9, 1
	254 Add X10, X10, 16
	255 Move X0, X19
	256 Move W2, W31
	257 Call 0x1C5D788
	258 NotImplemented "Instruction LDRSW not yet implemented."
	259 Add X8, X8, X9
	260 Add X0, X8, 312
	261 Move X8, [X0]
	262 Move X1, [X0+8]
	263 Move X0, X19
	264 NotImplemented "Instruction BLR not yet implemented."
	265 Move W8, W0
	266 Move X0, [X31+40]
	267 Move TEMP, X8
	268 And TEMP, TEMP, 1
	269 Compare TEMP, 1
	270 JumpIfNotEqual {326}
	271 Move X19, [X0+88]
	272 Compare X19, 0
	273 JumpIfEqual {336}
	274 Move X8, [X31+32]
	275 Move X8, [X8+32]
	276 Move X8, [X8+192]
	277 Move X1, [X8+56]
	278 Move W8, [X1+309]
	279 Move TEMP, X8
	280 And TEMP, TEMP, 1
	281 Compare TEMP, 1
	282 JumpIfEqual {286}
	283 Move X0, X1
	284 Call 0x1C5D684
	285 Move X1, X0
	286 Move X8, [X19]
	287 NotImplemented "Instruction LDRH not yet implemented."
	288 Compare X9, 0
	289 JumpIfEqual {296}
	290 Move X10, [X8+176]
	291 Add X10, X10, 8
	292 NotImplemented "Instruction LDUR not yet implemented."
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Subtract X9, X9, 1
	295 Add X10, X10, 16
	296 Move X0, X19
	297 Move W2, W31
	298 Call 0x1C5D788
	299 NotImplemented "Instruction LDRSW not yet implemented."
	300 Add X8, X8, X9
	301 Add X0, X8, 312
	302 Move X8, [X0]
	303 Move X1, [X0+8]
	304 Move X0, X19
	305 NotImplemented "Instruction BLR not yet implemented."
	306 Move X8, [X31+40]
	307 Move W19, W0
	308 Move X0, [X8+80]
	309 Compare X0, 0
	310 JumpIfEqual {337}
	311 Move X8, [X31+32]
	312 Move X8, [X8+32]
	313 Move X8, [X8+192]
	314 Move X2, [X8+80]
	315 And W1, W19, 1
	316 Call 0x25E1240, X0, X1
	317 Move TEMP, X0
	318 And TEMP, TEMP, 1
	319 Compare TEMP, 1
	320 JumpIfEqual {330}
	321 Move X8, [X31+40]
	322 Move X19, [X8+88]
	323 Compare X19, 0
	324 JumpIfNotEqual {244}
	325 Call 0x1C17F20
	326 Call 0x238F1A8, X0
	327 Move X8, [X31+40]
	328 Move W0, W31
	329 Move [X8+88], X31
	330 Move X8, [X31+40]
	331 And W9, W19, 1
	332 Move W0, 1
	333 Move [X8+20], W9
	334 Move [X8+16], W0
	335 Call 0x1C17F20
	336 Call 0x1C17F20
	337 Call 0x1C17F20
	338 Call 0x1C17F20
	339 Call 0x1C17F20
	340 Move X0, X20
	341 Call 0x1C17F18
	342 Call 0x1C17F20
	343 Move X20, X1
	344 Move X21, X0
	345 Move X20, X1
	346 Move X21, X0
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Move X0, X21
	349 Call 0x3EB2AD0
	350 Move X8, [X0]
	351 Move [X31], X8
	352 Call 0x3EB2AE0
	353 Move X20, [X31]
	354 Move W21, W31
	355 Compare X19, 0
	356 JumpIfNotEqual {169}
	357 Move [X31], X31
	358 Compare X19, 0
	359 JumpIfEqual {383}
	360 Move X10, 0x1D65000
	361 Move X8, [X19]
	362 Move X10, [X10+3584]
	363 NotImplemented "Instruction LDRH not yet implemented."
	364 Move X1, [X10]
	365 Compare X9, 0
	366 JumpIfEqual {373}
	367 Move X10, [X8+176]
	368 Add X10, X10, 8
	369 NotImplemented "Instruction LDUR not yet implemented."
	370 NotImplemented "Instruction CMP not yet implemented."
	371 Subtract X9, X9, 1
	372 Add X10, X10, 16
	373 Move X0, X19
	374 Move W2, W31
	375 Call 0x1C5D788
	376 NotImplemented "Instruction LDRSW not yet implemented."
	377 Add X8, X8, X9
	378 Add X0, X8, 312
	379 Move X8, [X0]
	380 Move X1, [X0+8]
	381 Move X0, X19
	382 NotImplemented "Instruction BLR not yet implemented."
	383 Move X8, [X31]
	384 Compare X8, 0
	385 JumpIfNotEqual {406}
	386 NotImplemented "Instruction CMP not yet implemented."
	387 Move X0, X21
	388 Call 0x3EB2AD0
	389 Move X19, [X0]
	390 Move [X31+8], X19
	391 Call 0x3EB2AE0
	392 Compare X19, 0
	393 JumpIfNotEqual {401}
	394 Move W0, W31
	395 Move X20, [X31+64]
	396 Move X19, [X31+72]
	397 Move X30, [X31+48]
	398 Move X21, [X31+56]
	399 Add X31, X31, 80
	400 Return X0
	401 Add X8, X31, 8
	402 Add X0, X8, 8
	403 Call 0x199ED60
	404 Move X0, X19
	405 Call 0x1C17F18
	406 Move X0, [X31]
	407 Call 0x1C17F18
	408 Move X20, X1
	409 Move X21, X0
	410 Compare X19, 0
	411 JumpIfNotEqual {360}
	412 Compare X19, 0
	413 JumpIfNotEqual {417}
	414 Move X21, X0
	415 Move X0, X21
	416 Call 0x1D2D690
	417 Move X0, [X31+40]
	418 Move W8, [X0+16]
	419 NotImplemented "Instruction CMP not yet implemented."
	420 Add W31, W8, 3
	421 Call 0x238F1A8, X0
	422 Move X0, X19
	423 Call 0x1C17F18
	424 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x0238F1A8 MOV W2, W31
	0x0238F1AC BL 0x1C5C788
	0x0238F1B0 B 0x238F1C0
	0x0238F1B4 LDRSW X9, [X10]
	0x0238F1B8 ADD X8, X8, X9, 0x4, LSL
	0x0238F1BC ADD X0, X8, 0x138
	0x0238F1C0 LDP X8, X1, [X0]
	0x0238F1C4 MOV X0, X19
	0x0238F1C8 BLR X8
	0x0238F1CC LDR X8, [X31]
	0x0238F1D0 CBNZ X8, 0x238F224
	0x0238F1D4 CMP W20, 0x1
	0x0238F1D8 B.NE 0x238F244
	0x0238F1DC MOV X0, X21
	0x0238F1E0 BL 0x3EB1AD0
	0x0238F1E4 LDR X19, [X0]
	0x0238F1E8 STR X19, [X31 + 0x8]
	0x0238F1EC BL 0x3EB1AE0
	0x0238F1F0 CBNZ X19, 0x238F210
	0x0238F1F4 MOV W0, W31
	0x0238F1F8 LDP X20, X19, [X31 + 0x60]
	0x0238F1FC LDP X30, X21, [X31 + 0x50]
	0x0238F200 LDP D9, D8, [X31 + 0x40]
	0x0238F204 LDP D11, D10, [X31 + 0x30]
	0x0238F208 ADD X31, X31, 0x70
	0x0238F20C RET
	0x0238F210 ADD X8, X31, 0x8
	0x0238F214 ADD X0, X8, 0x8
	0x0238F218 BL 0x199DDA0
	0x0238F21C MOV X0, X19
	0x0238F220 BL 0x1C16F18
	0x0238F224 LDR X0, [X31]
	0x0238F228 BL 0x1C16F18
	0x0238F22C MOV X20, X1
	0x0238F230 MOV X21, X0
	0x0238F234 CBNZ X19, 0x238F16C
	0x0238F238 B 0x238F1CC
	0x0238F23C CBNZ X19, 0x238F24C
	0x0238F240 MOV X21, X0
	0x0238F244 MOV X0, X21
	0x0238F248 BL 0x1D2C690
	0x0238F24C LDR X0, [X31 + 0x28]
	0x0238F250 LDR W8, [X0 + 0x10]
	0x0238F254 CMP W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x204B000
	005 Move W8, [X19+2370]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1D65000
	012 Move X0, [X0+3584]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X19+2370], W8
	016 Move X19, [X20+88]
	017 Move TEMP, 0
	018 Not TEMP
	019 Move W8, TEMP
	020 Move [X20+16], W8
	021 Compare X19, 0
	022 JumpIfEqual {39}
	023 Move X10, 0x1D65000
	024 Move X8, [X19]
	025 Move X10, [X10+3584]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move X0, X19
	037 Move W2, W31
	038 Call 0x1C5D788
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return 
	043 NotImplemented "Instruction LDRSW not yet implemented."
	044 Add X8, X8, X9
	045 Add X0, X8, 312
	046 Move X2, [X0]
	047 Move X1, [X0+8]
	048 Move X0, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 CallNoReturn X2

Method: TSource System.Collections.Generic.IEnumerator<TSource>.get_Current()

Disassembly:
	0x0238F258 B.EQ 0x238F264
	0x0238F25C ADDS W31, W8, 0x3

ISIL:
	001 Move W0, [X0+20]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x0238F260 B.NE 0x238F268
	0x0238F264 BL 0x238F274
	0x0238F268 MOV X0, X19
	0x0238F26C BL 0x1C16F18
	0x0238F270 BL 0x1990590
	0x0238F274 STR X30, [X31 - 0x20]!
	0x0238F278 STP X20, X19, [X31 + 0x10]
	0x0238F27C ADRP X19, 0x204A000
	0x0238F280 LDRB W8, [X19 + 0x946]
	0x0238F284 MOV X20, X0
	0x0238F288 TBNZ X8, 0x0, 0x238F2A0
	0x0238F28C ADRP X0, 0x1D64000
	0x0238F290 LDR X0, [X0 + 0xE00]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1D65000
	005 Move X0, [X0+2880]
	006 Move X19, X1
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X1, X31
	010 Move X20, X0
	011 Call NotSupportedException..ctor, X0
	012 Move X0, X20
	013 Move X1, X19
	014 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x0238F294 BL 0x1C16CF4
	0x0238F298 MOVZ W8, 0x1
	0x0238F29C STRB W8, [X19 + 0x946]
	0x0238F2A0 LDR X19, [X20 + 0x60]
	0x0238F2A4 MOVN W8, 0x0
	0x0238F2A8 STR W8, [X20 + 0x10]
	0x0238F2AC CBZ X19, 0x238F2F8
	0x0238F2B0 ADRP X10, 0x1D64000
	0x0238F2B4 LDR X8, [X19]
	0x0238F2B8 LDR X10, [X10 + 0xE00]

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+20]
	003 Move [X31+12], W8
	004 Move X8, [X1+32]
	005 Add X1, X31, 12
	006 Move X8, [X8+192]
	007 Move X0, [X8+72]
	008 Call 0x1C17E04
	009 Move X30, [X31+16]
	010 Return X0

Method: System.Collections.Generic.IEnumerator`1<TSource> System.Collections.Generic.IEnumerable<TSource>.GetEnumerator()

Disassembly:
	0x0238F2BC LDRH W9, [X8 + 0x12E]
	0x0238F2C0 LDR X1, [X10]
	0x0238F2C4 CBZ X9, 0x238F2E8
	0x0238F2C8 LDR X10, [X8 + 0xB0]
	0x0238F2CC ADD X10, X10, 0x8
	0x0238F2D0 LDUR X11, [X10 - 0x8]
	0x0238F2D4 CMP X11, X1
	0x0238F2D8 B.EQ 0x238F304
	0x0238F2DC SUBS X9, X9, 0x1
	0x0238F2E0 ADD X10, X10, 0x10
	0x0238F2E4 B.NE 0x238F2D0
	0x0238F2E8 MOV X0, X19
	0x0238F2EC MOV W2, W31
	0x0238F2F0 BL 0x1C5C788
	0x0238F2F4 B 0x238F310
	0x0238F2F8 LDP X20, X19, [X31 + 0x10]
	0x0238F2FC LDR X30, [X31], #0x20
	0x0238F300 RET
	0x0238F304 LDRSW X9, [X10]
	0x0238F308 ADD X8, X8, X9, 0x4, LSL
	0x0238F30C ADD X0, X8, 0x138
	0x0238F310 LDP X2, X1, [X0]
	0x0238F314 MOV X0, X19
	0x0238F318 LDP X20, X19, [X31 + 0x10]
	0x0238F31C LDR X30, [X31], #0x20
	0x0238F320 BR X2
	0x0238F324 LDP S0, S1, [X0 + 0x14]
	0x0238F328 LDP S2, S3, [X0 + 0x1C]
	0x0238F32C RET
	0x0238F330 STR X30, [X31 - 0x20]!
	0x0238F334 STP X20, X19, [X31 + 0x10]
	0x0238F338 ADRP X0, 0x1D64000
	0x0238F33C LDR X0, [X0 + 0xB40]
	0x0238F340 MOV X19, X1
	0x0238F344 BL 0x1C16D08
	0x0238F348 BL 0x1C16F10
	0x0238F34C MOV X1, X31
	0x0238F350 MOV X20, X0
	0x0238F354 BL 0x3380310

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+16]
	006 Move X19, X0
	007 Move X20, X1
	008 Add W31, W8, 2
	009 Move W21, [X19+24]
	010 Move X0, X31
	011 Call Environment.get_CurrentManagedThreadId
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move [X19+16], W31
	014 Move X20, X19
	015 Move X8, [X20+32]
	016 Move X8, [X8+192]
	017 Move X0, [X8]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X20, X0
	027 Call Object..ctor, X0
	028 Move X0, X31
	029 Move [X20+16], W31
	030 Call Environment.get_CurrentManagedThreadId
	031 Move [X20+24], W0
	032 Move X8, [X19+72]
	033 Move X0, X20
	034 Move [X20+64], X8
	035 Move X8, [X19+56]
	036 Move [X20+48], X8
	037 Move X8, [X19+40]
	038 Move [X20+32], X8
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x0238F358 MOV X0, X20
	0x0238F35C MOV X1, X19
	0x0238F360 BL 0x1C16DEC
	0x0238F364 SUB X31, X31, 0x20

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+104]
	004 Call 0x238F2BC, X0
	005 Return X0

