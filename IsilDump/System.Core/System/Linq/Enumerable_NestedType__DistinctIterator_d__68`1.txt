Type: System.Linq.Enumerable/<DistinctIterator>d__68`1

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x0238A530 B 0x238A864
	0x0238A534 RET
	0x0238A538 SUB X31, X31, 0x50
	0x0238A53C STP X30, X21, [X31 + 0x30]
	0x0238A540 STP X20, X19, [X31 + 0x40]
	0x0238A544 ADRP X21, 0x204F000
	0x0238A548 LDRB W8, [X21 + 0x93B]
	0x0238A54C MOV X19, X1
	0x0238A550 MOV X20, X0
	0x0238A554 STP X1, X0, [X31 + 0x20]
	0x0238A558 TBNZ X8, 0x0, 0x238A570
	0x0238A55C ADRP X0, 0x1D69000
	0x0238A560 LDR X0, [X0 + 0xE18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+28], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x0238A564 BL 0x1C16CF4
	0x0238A568 MOVZ W8, 0x1
	0x0238A56C STRB W8, [X21 + 0x93B]
	0x0238A570 ADD X8, X31, 0x28
	0x0238A574 ADD X9, X31, 0x20
	0x0238A578 STP X31, X8, [X31 + 0x8]
	0x0238A57C STR X9, [X31 + 0x18]

ISIL:
	001 Move W8, [X0+16]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Add W31, W8, 3
	004 Call 0x238A8AC, X0
	005 Return 
	006 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x0238A580 LDR W8, [X20 + 0x10]
	0x0238A584 CMP W8, 0x1
	0x0238A588 B.EQ 0x238A664
	0x0238A58C CBNZ W8, 0x238A80C
	0x0238A590 MOVN W8, 0x0
	0x0238A594 STR W8, [X20 + 0x10]
	0x0238A598 LDR X8, [X19 + 0x20]
	0x0238A59C LDR X19, [X20 + 0x28]
	0x0238A5A0 LDR X8, [X8 + 0xC0]
	0x0238A5A4 LDR X0, [X8 + 0x18]
	0x0238A5A8 LDRB W8, [X0 + 0x135]
	0x0238A5AC TBNZ X8, 0x0, 0x238A5B4
	0x0238A5B0 BL 0x1C5C684
	0x0238A5B4 BL 0x1C16F10
	0x0238A5B8 LDR X8, [X31 + 0x20]
	0x0238A5BC MOV X20, X0
	0x0238A5C0 LDR X8, [X8 + 0x20]
	0x0238A5C4 LDR X8, [X8 + 0xC0]
	0x0238A5C8 LDR X2, [X8 + 0x20]
	0x0238A5CC MOV X1, X19
	0x0238A5D0 BL 0x25E2B24
	0x0238A5D4 LDR X8, [X31 + 0x28]
	0x0238A5D8 LDR X19, [X8 + 0x38]
	0x0238A5DC STR X20, [X8 + 0x48]
	0x0238A5E0 CBZ X19, 0x238A7C8
	0x0238A5E4 LDR X8, [X31 + 0x20]
	0x0238A5E8 LDR X8, [X8 + 0x20]
	0x0238A5EC LDR X8, [X8 + 0xC0]
	0x0238A5F0 LDR X1, [X8 + 0x28]
	0x0238A5F4 LDRB W8, [X1 + 0x135]
	0x0238A5F8 TBNZ X8, 0x0, 0x238A608
	0x0238A5FC MOV X0, X1
	0x0238A600 BL 0x1C5C684
	0x0238A604 MOV X1, X0
	0x0238A608 LDR X8, [X19]
	0x0238A60C LDRH W9, [X8 + 0x12E]
	0x0238A610 CBZ X9, 0x238A634
	0x0238A614 LDR X10, [X8 + 0xB0]
	0x0238A618 ADD X10, X10, 0x8
	0x0238A61C LDUR X11, [X10 - 0x8]
	0x0238A620 CMP X11, X1
	0x0238A624 B.EQ 0x238A644
	0x0238A628 SUBS X9, X9, 0x1
	0x0238A62C ADD X10, X10, 0x10
	0x0238A630 B.NE 0x238A61C
	0x0238A634 MOV X0, X19
	0x0238A638 MOV W2, W31
	0x0238A63C BL 0x1C5C788
	0x0238A640 B 0x238A650
	0x0238A644 LDRSW X9, [X10]
	0x0238A648 ADD X8, X8, X9, 0x4, LSL
	0x0238A64C ADD X0, X8, 0x138
	0x0238A650 LDP X8, X1, [X0]
	0x0238A654 MOV X0, X19
	0x0238A658 BLR X8
	0x0238A65C LDR X20, [X31 + 0x28]
	0x0238A660 STR X0, [X20 + 0x50]
	0x0238A664 LDR X19, [X20 + 0x50]
	0x0238A668 MOVN W8, 0x2
	0x0238A66C STR W8, [X20 + 0x10]
	0x0238A670 CBZ X19, 0x238A798
	0x0238A674 ADRP X20, 0x1D69000
	0x0238A678 LDR X20, [X20 + 0xE18]
	0x0238A67C LDR X8, [X19]
	0x0238A680 LDR X1, [X20]
	0x0238A684 LDRH W9, [X8 + 0x12E]
	0x0238A688 CBZ X9, 0x238A6AC
	0x0238A68C LDR X10, [X8 + 0xB0]
	0x0238A690 ADD X10, X10, 0x8
	0x0238A694 LDUR X11, [X10 - 0x8]
	0x0238A698 CMP X11, X1
	0x0238A69C B.EQ 0x238A6BC
	0x0238A6A0 SUBS X9, X9, 0x1
	0x0238A6A4 ADD X10, X10, 0x10
	0x0238A6A8 B.NE 0x238A694
	0x0238A6AC MOV X0, X19
	0x0238A6B0 MOV W2, W31
	0x0238A6B4 BL 0x1C5C788
	0x0238A6B8 B 0x238A6C8
	0x0238A6BC LDRSW X9, [X10]
	0x0238A6C0 ADD X8, X8, X9, 0x4, LSL
	0x0238A6C4 ADD X0, X8, 0x138
	0x0238A6C8 LDP X8, X1, [X0]
	0x0238A6CC MOV X0, X19
	0x0238A6D0 BLR X8
	0x0238A6D4 MOV W8, W0
	0x0238A6D8 LDR X0, [X31 + 0x28]
	0x0238A6DC TBZ X8, 0x0, 0x238A79C
	0x0238A6E0 LDR X19, [X0 + 0x50]
	0x0238A6E4 CBZ X19, 0x238A7C0
	0x0238A6E8 LDR X8, [X31 + 0x20]
	0x0238A6EC LDR X8, [X8 + 0x20]
	0x0238A6F0 LDR X8, [X8 + 0xC0]
	0x0238A6F4 LDR X1, [X8 + 0x38]
	0x0238A6F8 LDRB W8, [X1 + 0x135]
	0x0238A6FC TBNZ X8, 0x0, 0x238A70C
	0x0238A700 MOV X0, X1
	0x0238A704 BL 0x1C5C684
	0x0238A708 MOV X1, X0
	0x0238A70C LDR X8, [X19]
	0x0238A710 LDRH W9, [X8 + 0x12E]
	0x0238A714 CBZ X9, 0x238A738
	0x0238A718 LDR X10, [X8 + 0xB0]
	0x0238A71C ADD X10, X10, 0x8
	0x0238A720 LDUR X11, [X10 - 0x8]
	0x0238A724 CMP X11, X1
	0x0238A728 B.EQ 0x238A748
	0x0238A72C SUBS X9, X9, 0x1
	0x0238A730 ADD X10, X10, 0x10
	0x0238A734 B.NE 0x238A720
	0x0238A738 MOV X0, X19
	0x0238A73C MOV W2, W31
	0x0238A740 BL 0x1C5C788
	0x0238A744 B 0x238A754
	0x0238A748 LDRSW X9, [X10]
	0x0238A74C ADD X8, X8, X9, 0x4, LSL
	0x0238A750 ADD X0, X8, 0x138
	0x0238A754 LDP X8, X1, [X0]
	0x0238A758 MOV X0, X19
	0x0238A75C BLR X8
	0x0238A760 LDR X8, [X31 + 0x28]
	0x0238A764 MOV X19, X0
	0x0238A768 LDR X0, [X8 + 0x48]
	0x0238A76C CBZ X0, 0x238A7C4
	0x0238A770 LDR X8, [X31 + 0x20]
	0x0238A774 LDR X8, [X8 + 0x20]
	0x0238A778 LDR X8, [X8 + 0xC0]
	0x0238A77C LDR X2, [X8 + 0x50]
	0x0238A780 MOV X1, X19
	0x0238A784 BL 0x25E2BD8
	0x0238A788 LDR X8, [X31 + 0x28]
	0x0238A78C TBNZ X0, 0x0, 0x238A7B0
	0x0238A790 LDR X19, [X8 + 0x50]
	0x0238A794 CBNZ X19, 0x238A67C
	0x0238A798 BL 0x1C16F20
	0x0238A79C BL 0x238A864
	0x0238A7A0 LDR X8, [X31 + 0x28]
	0x0238A7A4 MOV W0, W31
	0x0238A7A8 STR X31, [X8 + 0x50]
	0x0238A7AC B 0x238A810
	0x0238A7B0 MOVZ W0, 0x1
	0x0238A7B4 STR X19, [X8 + 0x18]
	0x0238A7B8 STR W0, [X8 + 0x10]
	0x0238A7BC B 0x238A810
	0x0238A7C0 BL 0x1C16F20
	0x0238A7C4 BL 0x1C16F20
	0x0238A7C8 BL 0x1C16F20
	0x0238A7CC B 0x238A7F0
	0x0238A7D0 B 0x238A7F0
	0x0238A7D4 B 0x238A7F0
	0x0238A7D8 B 0x238A7F0
	0x0238A7DC B 0x238A7F0
	0x0238A7E0 B 0x238A7F0
	0x0238A7E4 B 0x238A7F0
	0x0238A7E8 B 0x238A7F0
	0x0238A7EC B 0x238A7F0
	0x0238A7F0 CMP W1, 0x1
	0x0238A7F4 B.NE 0x238A838
	0x0238A7F8 BL 0x3EB1AD0
	0x0238A7FC LDR X19, [X0]
	0x0238A800 STR X19, [X31 + 0x8]
	0x0238A804 BL 0x3EB1AE0
	0x0238A808 CBNZ X19, 0x238A820
	0x0238A80C MOV W0, W31
	0x0238A810 LDP X20, X19, [X31 + 0x40]
	0x0238A814 LDP X30, X21, [X31 + 0x30]
	0x0238A818 ADD X31, X31, 0x50
	0x0238A81C RET
	0x0238A820 ADD X8, X31, 0x8
	0x0238A824 ADD X0, X8, 0x8
	0x0238A828 BL 0x199DD20
	0x0238A82C MOV X0, X19
	0x0238A830 BL 0x1C16F18
	0x0238A834 CBNZ X19, 0x238A83C
	0x0238A838 BL 0x1D2C690
	0x0238A83C LDR X0, [X31 + 0x28]
	0x0238A840 LDR W8, [X0 + 0x10]
	0x0238A844 CMP W8, 0x1
	0x0238A848 B.EQ 0x238A854
	0x0238A84C ADDS W31, W8, 0x3
	0x0238A850 B.NE 0x238A858
	0x0238A854 BL 0x238A864
	0x0238A858 MOV X0, X19
	0x0238A85C BL 0x1C16F18
	0x0238A860 BL 0x1990590
	0x0238A864 STR X30, [X31 - 0x20]!
	0x0238A868 STP X20, X19, [X31 + 0x10]
	0x0238A86C ADRP X19, 0x204F000
	0x0238A870 LDRB W8, [X19 + 0x93C]
	0x0238A874 MOV X20, X0
	0x0238A878 TBNZ X8, 0x0, 0x238A890
	0x0238A87C ADRP X0, 0x1D69000
	0x0238A880 LDR X0, [X0 + 0xE00]
	0x0238A884 BL 0x1C16CF4
	0x0238A888 MOVZ W8, 0x1
	0x0238A88C STRB W8, [X19 + 0x93C]
	0x0238A890 LDR X19, [X20 + 0x50]
	0x0238A894 MOVN W8, 0x0
	0x0238A898 STR W8, [X20 + 0x10]
	0x0238A89C CBZ X19, 0x238A8E8
	0x0238A8A0 ADRP X10, 0x1D69000
	0x0238A8A4 LDR X8, [X19]
	0x0238A8A8 LDR X10, [X10 + 0xE00]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0x2050000
	007 Move W8, [X21+2357]
	008 Move X19, X1
	009 Move X20, X0
	010 Move [X31+32], X1
	011 Move [X31+40], X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x1D6A000
	017 Move X0, [X0+3608]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2357], W8
	021 Add X8, X31, 40
	022 Add X9, X31, 32
	023 Move [X31+8], X31
	024 Move [X31+16], X8
	025 Move [X31+24], X9
	026 Move W8, [X20+16]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Compare W8, 0
	029 JumpIfNotEqual {199}
	030 Move TEMP, 0
	031 Not TEMP
	032 Move W8, TEMP
	033 Move [X20+16], W8
	034 Move X8, [X19+32]
	035 Move X19, [X20+32]
	036 Move X8, [X8+192]
	037 Move X0, [X8+24]
	038 Move W8, [X0+309]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {44}
	043 Call 0x1C5D684
	044 Call 0x1C17F10
	045 Move X8, [X31+32]
	046 Move X20, X0
	047 Move X8, [X8+32]
	048 Move X8, [X8+192]
	049 Move X2, [X8+32]
	050 Move X1, X19
	051 Call Set`1<Edge>..ctor, X0, X1
	052 Move X8, [X31+40]
	053 Move X19, [X8+48]
	054 Move [X8+64], X20
	055 Compare X19, 0
	056 JumpIfEqual {191}
	057 Move X8, [X31+32]
	058 Move X8, [X8+32]
	059 Move X8, [X8+192]
	060 Move X1, [X8+40]
	061 Move W8, [X1+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {69}
	066 Move X0, X1
	067 Call 0x1C5D684
	068 Move X1, X0
	069 Move X8, [X19]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Compare X9, 0
	072 JumpIfEqual {79}
	073 Move X10, [X8+176]
	074 Add X10, X10, 8
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Subtract X9, X9, 1
	078 Add X10, X10, 16
	079 Move X0, X19
	080 Move W2, W31
	081 Call 0x1C5D788
	082 NotImplemented "Instruction LDRSW not yet implemented."
	083 Add X8, X8, X9
	084 Add X0, X8, 312
	085 Move X8, [X0]
	086 Move X1, [X0+8]
	087 Move X0, X19
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move X20, [X31+40]
	090 Move [X20+72], X0
	091 Move X19, [X20+72]
	092 Move TEMP, 2
	093 Not TEMP
	094 Move W8, TEMP
	095 Move [X20+16], W8
	096 Compare X19, 0
	097 JumpIfEqual {181}
	098 Move X20, 0x1D6A000
	099 Move X20, [X20+3608]
	100 Move X8, [X19]
	101 Move X1, [X20]
	102 NotImplemented "Instruction LDRH not yet implemented."
	103 Compare X9, 0
	104 JumpIfEqual {111}
	105 Move X10, [X8+176]
	106 Add X10, X10, 8
	107 NotImplemented "Instruction LDUR not yet implemented."
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Subtract X9, X9, 1
	110 Add X10, X10, 16
	111 Move X0, X19
	112 Move W2, W31
	113 Call 0x1C5D788
	114 NotImplemented "Instruction LDRSW not yet implemented."
	115 Add X8, X8, X9
	116 Add X0, X8, 312
	117 Move X8, [X0]
	118 Move X1, [X0+8]
	119 Move X0, X19
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move W8, W0
	122 Move X0, [X31+40]
	123 Move TEMP, X8
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfNotEqual {182}
	127 Move X19, [X0+72]
	128 Compare X19, 0
	129 JumpIfEqual {189}
	130 Move X8, [X31+32]
	131 Move X8, [X8+32]
	132 Move X8, [X8+192]
	133 Move X1, [X8+56]
	134 Move W8, [X1+309]
	135 Move TEMP, X8
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfEqual {142}
	139 Move X0, X1
	140 Call 0x1C5D684
	141 Move X1, X0
	142 Move X8, [X19]
	143 NotImplemented "Instruction LDRH not yet implemented."
	144 Compare X9, 0
	145 JumpIfEqual {152}
	146 Move X10, [X8+176]
	147 Add X10, X10, 8
	148 NotImplemented "Instruction LDUR not yet implemented."
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Subtract X9, X9, 1
	151 Add X10, X10, 16
	152 Move X0, X19
	153 Move W2, W31
	154 Call 0x1C5D788
	155 NotImplemented "Instruction LDRSW not yet implemented."
	156 Add X8, X8, X9
	157 Add X0, X8, 312
	158 Move X8, [X0]
	159 Move X1, [X0+8]
	160 Move X0, X19
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move X8, [X31+40]
	163 Move X19, X0
	164 Move X0, [X8+64]
	165 Compare X0, 0
	166 JumpIfEqual {190}
	167 Move X8, [X31+32]
	168 Move X8, [X8+32]
	169 Move X8, [X8+192]
	170 Move X2, [X8+80]
	171 Move X1, X19
	172 Call Set`1<Edge>.Add, X0, X1
	173 Move X8, [X31+40]
	174 Move TEMP, X0
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfEqual {186}
	178 Move X19, [X8+72]
	179 Compare X19, 0
	180 JumpIfNotEqual {100}
	181 Call 0x1C17F20
	182 Call 0x238A8AC, X0
	183 Move X8, [X31+40]
	184 Move W0, W31
	185 Move [X8+72], X31
	186 Move W0, 1
	187 Move [X8+20], X19
	188 Move [X8+16], W0
	189 Call 0x1C17F20
	190 Call 0x1C17F20
	191 Call 0x1C17F20
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Call 0x3EB2AD0
	194 Move X19, [X0]
	195 Move [X31+8], X19
	196 Call 0x3EB2AE0
	197 Compare X19, 0
	198 JumpIfNotEqual {206}
	199 Move W0, W31
	200 Move X20, [X31+64]
	201 Move X19, [X31+72]
	202 Move X30, [X31+48]
	203 Move X21, [X31+56]
	204 Add X31, X31, 80
	205 Return X0
	206 Add X8, X31, 8
	207 Add X0, X8, 8
	208 Call 0x199ECC0
	209 Move X0, X19
	210 Call 0x1C17F18
	211 Compare X19, 0
	212 JumpIfNotEqual {214}
	213 Call 0x1D2D690
	214 Move X0, [X31+40]
	215 Move W8, [X0+16]
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Add W31, W8, 3
	218 Call 0x238A8AC, X0
	219 Move X0, X19
	220 Call 0x1C17F18
	221 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x0238A8AC LDRH W9, [X8 + 0x12E]
	0x0238A8B0 LDR X1, [X10]
	0x0238A8B4 CBZ X9, 0x238A8D8
	0x0238A8B8 LDR X10, [X8 + 0xB0]
	0x0238A8BC ADD X10, X10, 0x8
	0x0238A8C0 LDUR X11, [X10 - 0x8]
	0x0238A8C4 CMP X11, X1
	0x0238A8C8 B.EQ 0x238A8F4
	0x0238A8CC SUBS X9, X9, 0x1
	0x0238A8D0 ADD X10, X10, 0x10
	0x0238A8D4 B.NE 0x238A8C0
	0x0238A8D8 MOV X0, X19
	0x0238A8DC MOV W2, W31
	0x0238A8E0 BL 0x1C5C788
	0x0238A8E4 B 0x238A900
	0x0238A8E8 LDP X20, X19, [X31 + 0x10]
	0x0238A8EC LDR X30, [X31], #0x20
	0x0238A8F0 RET
	0x0238A8F4 LDRSW X9, [X10]
	0x0238A8F8 ADD X8, X8, X9, 0x4, LSL
	0x0238A8FC ADD X0, X8, 0x138
	0x0238A900 LDP X2, X1, [X0]
	0x0238A904 MOV X0, X19
	0x0238A908 LDP X20, X19, [X31 + 0x10]
	0x0238A90C LDR X30, [X31], #0x20
	0x0238A910 BR X2
	0x0238A914 LDR X0, [X0 + 0x18]
	0x0238A918 RET
	0x0238A91C STR X30, [X31 - 0x20]!
	0x0238A920 STP X20, X19, [X31 + 0x10]
	0x0238A924 ADRP X0, 0x1D69000
	0x0238A928 LDR X0, [X0 + 0xB40]
	0x0238A92C MOV X19, X1
	0x0238A930 BL 0x1C16D08
	0x0238A934 BL 0x1C16F10
	0x0238A938 MOV X1, X31
	0x0238A93C MOV X20, X0
	0x0238A940 BL 0x3380310
	0x0238A944 MOV X0, X20
	0x0238A948 MOV X1, X19
	0x0238A94C BL 0x1C16DEC
	0x0238A950 LDR X0, [X0 + 0x18]
	0x0238A954 RET
	0x0238A958 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x2050000
	005 Move W8, [X19+2358]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1D6A000
	012 Move X0, [X0+3584]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X19+2358], W8
	016 Move X19, [X20+72]
	017 Move TEMP, 0
	018 Not TEMP
	019 Move W8, TEMP
	020 Move [X20+16], W8
	021 Compare X19, 0
	022 JumpIfEqual {39}
	023 Move X10, 0x1D6A000
	024 Move X8, [X19]
	025 Move X10, [X10+3584]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move X0, X19
	037 Move W2, W31
	038 Call 0x1C5D788
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return 
	043 NotImplemented "Instruction LDRSW not yet implemented."
	044 Add X8, X8, X9
	045 Add X0, X8, 312
	046 Move X2, [X0]
	047 Move X1, [X0+8]
	048 Move X0, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 CallNoReturn X2

Method: TSource System.Collections.Generic.IEnumerator<TSource>.get_Current()

Disassembly:
	0x0238A95C STP X20, X19, [X31 + 0x10]
	0x0238A960 LDR W8, [X0 + 0x10]

ISIL:
	001 NotImplemented "Instruction LDUR not yet implemented."
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x0238A964 MOV X19, X0
	0x0238A968 MOV X20, X1
	0x0238A96C ADDS W31, W8, 0x2
	0x0238A970 B.NE 0x238A994
	0x0238A974 LDR W21, [X19 + 0x20]
	0x0238A978 MOV X0, X31
	0x0238A97C BL 0x33C151C
	0x0238A980 CMP W21, W0
	0x0238A984 B.NE 0x238A994
	0x0238A988 STR W31, [X19 + 0x10]
	0x0238A98C MOV X20, X19
	0x0238A990 B 0x238A9CC
	0x0238A994 LDR X8, [X20 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1D6A000
	005 Move X0, [X0+2880]
	006 Move X19, X1
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X1, X31
	010 Move X20, X0
	011 Call NotSupportedException..ctor, X0
	012 Move X0, X20
	013 Move X1, X19
	014 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x0238A998 LDR X8, [X8 + 0xC0]
	0x0238A99C LDR X0, [X8]
	0x0238A9A0 LDRB W8, [X0 + 0x135]
	0x0238A9A4 TBNZ X8, 0x0, 0x238A9AC
	0x0238A9A8 BL 0x1C5C684
	0x0238A9AC BL 0x1C16F10
	0x0238A9B0 MOV X1, X31
	0x0238A9B4 MOV X20, X0
	0x0238A9B8 BL 0x33BDD8C
	0x0238A9BC MOV X0, X31

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction LDUR not yet implemented."
	003 Move [X31+8], X8
	004 Move X8, [X1+32]
	005 Add X1, X31, 8
	006 Move X8, [X8+192]
	007 Move X0, [X8+72]
	008 Call 0x1C17E04
	009 Move X30, [X31+16]
	010 Return X0

Method: System.Collections.Generic.IEnumerator`1<TSource> System.Collections.Generic.IEnumerable<TSource>.GetEnumerator()

Disassembly:
	0x0238A9C0 STR W31, [X20 + 0x10]
	0x0238A9C4 BL 0x33C151C
	0x0238A9C8 STR W0, [X20 + 0x20]
	0x0238A9CC LDR X8, [X19 + 0x40]
	0x0238A9D0 MOV X0, X20
	0x0238A9D4 STR X8, [X20 + 0x38]
	0x0238A9D8 LDR X8, [X19 + 0x30]
	0x0238A9DC STR X8, [X20 + 0x28]
	0x0238A9E0 LDP X20, X19, [X31 + 0x10]
	0x0238A9E4 LDP X30, X21, [X31], #0x20
	0x0238A9E8 RET
	0x0238A9EC LDR X8, [X1 + 0x20]
	0x0238A9F0 LDR X8, [X8 + 0xC0]
	0x0238A9F4 LDR X1, [X8 + 0x68]
	0x0238A9F8 B 0x238A958
	0x0238A9FC STR X30, [X31 - 0x30]!
	0x0238AA00 STP X22, X21, [X31 + 0x10]
	0x0238AA04 STP X20, X19, [X31 + 0x20]
	0x0238AA08 MOV W20, W1
	0x0238AA0C MOV X1, X31
	0x0238AA10 MOV X19, X2
	0x0238AA14 MOV X21, X0
	0x0238AA18 BL 0x33BDD8C
	0x0238AA1C LDR X8, [X19 + 0x20]
	0x0238AA20 MOVZ W1, 0x4
	0x0238AA24 LDR X8, [X8 + 0xC0]
	0x0238AA28 LDR X8, [X8]
	0x0238AA2C LDR X22, [X8 + 0x80]
	0x0238AA30 MOV X0, X22
	0x0238AA34 BL 0x1C16D14
	0x0238AA38 MOV X0, X21
	0x0238AA3C MOV X1, X22
	0x0238AA40 BL 0x1C16D18
	0x0238AA44 STR W20, [X0]
	0x0238AA48 MOV X0, X31
	0x0238AA4C BL 0x33C151C
	0x0238AA50 LDR X8, [X19 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+16]
	006 Move X19, X0
	007 Move X20, X1
	008 Add W31, W8, 2
	009 Move W21, [X19+28]
	010 Move X0, X31
	011 Call Environment.get_CurrentManagedThreadId
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move [X19+16], W31
	014 Move X20, X19
	015 Move X8, [X20+32]
	016 Move X8, [X8+192]
	017 Move X0, [X8]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X20, X0
	027 Call Object..ctor, X0
	028 Move X0, X31
	029 Move [X20+16], W31
	030 Call Environment.get_CurrentManagedThreadId
	031 Move [X20+28], W0
	032 Move X8, [X19+56]
	033 Move X0, X20
	034 Move [X20+48], X8
	035 Move X8, [X19+40]
	036 Move [X20+32], X8
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x0238AA54 MOV W20, W0
	0x0238AA58 MOVZ W1, 0x4
	0x0238AA5C LDR X8, [X8 + 0xC0]
	0x0238AA60 LDR X8, [X8]

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+104]
	004 Call 0x238A9C0, X0
	005 Return X0

