Type: System.Linq.Enumerable/WhereArrayIterator`1

Method: System.Void .ctor(TSource[] source, System.Func`2<TSource, System.Boolean> predicate)

Disassembly:
	0x02852E2C LDR X1, [X8]
	0x02852E30 BL 0x2EA3840
	0x02852E34 STP X21, X20, [X19 + 0x20]
	0x02852E38 MOV X0, X19
	0x02852E3C LDP X20, X19, [X31 + 0x10]
	0x02852E40 LDP X30, X21, [X31], #0x20
	0x02852E44 RET
	0x02852E48 STR X30, [X31 - 0x20]!
	0x02852E4C STP X20, X19, [X31 + 0x10]
	0x02852E50 LDR W8, [X0 + 0x14]
	0x02852E54 CMP W8, 0x1
	0x02852E58 B.NE 0x2852ECC
	0x02852E5C MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X3+32]
	006 Move X20, X1
	007 Move X19, X2
	008 Move X21, X0
	009 Move X8, [X8+192]
	010 Move X1, [X8]
	011 Call 0x2EA376C, X0
	012 Move [X21+40], X20
	013 Move [X21+48], X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Move X21, [X31+40]
	018 Return 

Method: System.Linq.Enumerable/Iterator`1<TSource> Clone()

Disassembly:
	0x02852E60 LDR X9, [X19 + 0x20]
	0x02852E64 CBZ X9, 0x2852EDC
	0x02852E68 LDRSW X8, [X19 + 0x30]
	0x02852E6C LDR W10, [X9 + 0x18]
	0x02852E70 CMP W8, W10
	0x02852E74 B.GE 0x2852EBC
	0x02852E78 CMP W8, W10
	0x02852E7C B.CS 0x2852EE0
	0x02852E80 ADD X10, X9, X8, 0x3, LSL
	0x02852E84 LDR X9, [X19 + 0x28]
	0x02852E88 LDR X20, [X10 + 0x20]
	0x02852E8C ADD W8, W8, 0x1
	0x02852E90 STR W8, [X19 + 0x30]
	0x02852E94 CBZ X9, 0x2852EDC
	0x02852E98 LDR X8, [X9 + 0x18]
	0x02852E9C LDR X0, [X9 + 0x40]
	0x02852EA0 LDR X2, [X9 + 0x28]
	0x02852EA4 MOV X1, X20
	0x02852EA8 BLR X8
	0x02852EAC TBZ X0, 0x0, 0x2852E60
	0x02852EB0 STR X20, [X19 + 0x18]
	0x02852EB4 MOVZ W0, 0x1
	0x02852EB8 B 0x2852ED0
	0x02852EBC LDR X8, [X19]
	0x02852EC0 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X9, [X1+32]
	006 Move X8, X0
	007 Move X21, [X8+40]
	008 Move X20, [X8+48]
	009 Move X19, X1
	010 Move X9, [X9+192]
	011 Move X0, [X9+24]
	012 Move W9, [X0+309]
	013 Move TEMP, X9
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {18}
	017 Call 0x1C5D684
	018 Call 0x1C17F10
	019 Move X8, [X19+32]
	020 Move X19, X0
	021 Move X8, [X8+192]
	022 Move X8, [X8+40]
	023 Move X8, [X8+32]
	024 Move X8, [X8+192]
	025 Move X1, [X8]
	026 Call 0x2EA376C, X0
	027 Move [X19+40], X21
	028 Move [X19+48], X20
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return X0

Method: System.Boolean MoveNext()

Disassembly:
	0x02852EC4 LDP X9, X1, [X8 + 0x1F8]
	0x02852EC8 BLR X9
	0x02852ECC MOV W0, W31
	0x02852ED0 LDP X20, X19, [X31 + 0x10]
	0x02852ED4 LDR X30, [X31], #0x20
	0x02852ED8 RET
	0x02852EDC BL 0x1C16F20
	0x02852EE0 BL 0x1C16F28
	0x02852EE4 STP X30, X21, [X31 - 0x20]!
	0x02852EE8 STP X20, X19, [X31 + 0x10]
	0x02852EEC LDR X8, [X2 + 0x20]
	0x02852EF0 MOV X19, X2
	0x02852EF4 LDP X21, X0, [X0 + 0x20]
	0x02852EF8 LDR X8, [X8 + 0xC0]
	0x02852EFC LDR X2, [X8 + 0x50]
	0x02852F00 BL 0x21B4E48
	0x02852F04 LDR X8, [X19 + 0x20]
	0x02852F08 MOV X20, X0
	0x02852F0C LDR X8, [X8 + 0xC0]
	0x02852F10 LDR X8, [X8 + 0x18]
	0x02852F14 LDRB W9, [X8 + 0x135]
	0x02852F18 TBNZ X9, 0x0, 0x2852F28
	0x02852F1C MOV X0, X8
	0x02852F20 BL 0x1C5C684
	0x02852F24 MOV X8, X0
	0x02852F28 MOV X0, X8
	0x02852F2C BL 0x1C16F10
	0x02852F30 LDR X8, [X19 + 0x20]
	0x02852F34 MOV X19, X0
	0x02852F38 LDR X8, [X8 + 0xC0]
	0x02852F3C LDR X8, [X8 + 0x28]
	0x02852F40 LDR X8, [X8 + 0x20]
	0x02852F44 LDR X8, [X8 + 0xC0]
	0x02852F48 LDR X1, [X8]
	0x02852F4C BL 0x2EA3840
	0x02852F50 STP X21, X20, [X19 + 0x20]
	0x02852F54 MOV X0, X19
	0x02852F58 LDP X20, X19, [X31 + 0x10]
	0x02852F5C LDP X30, X21, [X31], #0x20
	0x02852F60 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+20]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X19, X0
	008 Move X9, [X19+40]
	009 Compare X9, 0
	010 JumpIfEqual {47}
	011 NotImplemented "Instruction LDRSW not yet implemented."
	012 Move W10, [X9+24]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Add X10, X9, X8
	016 Move X9, [X19+48]
	017 Move X21, [X10+32]
	018 Move X20, [X10+40]
	019 Add W8, W8, 1
	020 Move [X19+56], W8
	021 Compare X9, 0
	022 JumpIfEqual {47}
	023 Move X8, [X9+24]
	024 Move X0, [X9+64]
	025 Move X3, [X9+40]
	026 Move X1, X21
	027 Move X2, X20
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {8}
	033 Move [X19+24], X21
	034 Move [X19+32], X20
	035 Move W0, 1
	036 Move X8, [X19]
	037 Move X0, X19
	038 Move X9, [X8+504]
	039 Move X1, [X8+512]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move W0, W31
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return X0
	047 Call 0x1C17F20
	048 Call 0x1C17F28

Method: System.Collections.Generic.IEnumerable`1<TResult> Select(System.Func`2<TSource, TResult> selector)

Disassembly:
	0x0213E3A0 MOV X20, X0
	0x0213E3A4 BL 0x2879FAC
	0x0213E3A8 MOV X0, X20
	0x0213E3AC LDP X20, X19, [X31 + 0x20]
	0x0213E3B0 LDP X22, X21, [X31 + 0x10]
	0x0213E3B4 LDR X30, [X31], #0x30
	0x0213E3B8 RET
	0x0213E3BC STR X30, [X31 - 0x30]!
	0x0213E3C0 STP X22, X21, [X31 + 0x10]
	0x0213E3C4 STP X20, X19, [X31 + 0x20]
	0x0213E3C8 LDR X8, [X2 + 0x38]
	0x0213E3CC MOV X20, X2
	0x0213E3D0 MOV X19, X1
	0x0213E3D4 MOV X21, X0
	0x0213E3D8 CBNZ X8, 0x213E3E8
	0x0213E3DC MOV X0, X20
	0x0213E3E0 BL 0x1C5C6E0
	0x0213E3E4 LDR X8, [X20 + 0x38]
	0x0213E3E8 LDR X0, [X8 + 0x8]
	0x0213E3EC LDP X22, X21, [X21 + 0x20]
	0x0213E3F0 LDRB W8, [X0 + 0x135]
	0x0213E3F4 TBNZ X8, 0x0, 0x213E3FC
	0x0213E3F8 BL 0x1C5C684
	0x0213E3FC BL 0x1C16F10
	0x0213E400 LDR X8, [X20 + 0x38]
	0x0213E404 MOV X1, X22
	0x0213E408 MOV X2, X21
	0x0213E40C MOV X3, X19
	0x0213E410 LDR X4, [X8 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X20, X2
	008 Move X19, X1
	009 Move X21, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {15}
	012 Move X0, X20
	013 Call 0x1C5D6E0
	014 Move X8, [X20+56]
	015 Move X0, [X8+8]
	016 Move X22, [X21+40]
	017 Move X21, [X21+48]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Call 0x1C17F10
	025 Move X8, [X20+56]
	026 Move X1, X22
	027 Move X2, X21
	028 Move X3, X19
	029 Move X4, [X8+16]
	030 Move X20, X0
	031 Call WhereSelectArrayIterator`2<KeyValuePair`2<Edge, Object>, Edge>..ctor, X0, X1, X2, X3
	032 Move X0, X20
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return X0

Method: System.Collections.Generic.IEnumerable`1<TSource> Where(System.Func`2<TSource, System.Boolean> predicate)

Disassembly:
	0x02852F64 STP X30, X21, [X31 - 0x20]!
	0x02852F68 STP X20, X19, [X31 + 0x10]
	0x02852F6C LDR X8, [X3 + 0x20]
	0x02852F70 MOV X20, X1
	0x02852F74 MOV X19, X2
	0x02852F78 MOV X21, X0
	0x02852F7C LDR X8, [X8 + 0xC0]
	0x02852F80 LDR X1, [X8]
	0x02852F84 BL 0x2EA3954
	0x02852F88 STP X20, X19, [X21 + 0x20]
	0x02852F8C LDP X20, X19, [X31 + 0x10]
	0x02852F90 LDP X30, X21, [X31], #0x20
	0x02852F94 RET
	0x02852F98 STP X30, X21, [X31 - 0x20]!
	0x02852F9C STP X20, X19, [X31 + 0x10]
	0x02852FA0 LDR X9, [X1 + 0x20]
	0x02852FA4 MOV X8, X0
	0x02852FA8 LDP X21, X20, [X8 + 0x20]
	0x02852FAC MOV X19, X1
	0x02852FB0 LDR X9, [X9 + 0xC0]
	0x02852FB4 LDR X0, [X9 + 0x18]
	0x02852FB8 LDRB W9, [X0 + 0x135]
	0x02852FBC TBNZ X9, 0x0, 0x2852FC4
	0x02852FC0 BL 0x1C5C684
	0x02852FC4 BL 0x1C16F10
	0x02852FC8 LDR X8, [X19 + 0x20]
	0x02852FCC MOV X19, X0
	0x02852FD0 LDR X8, [X8 + 0xC0]
	0x02852FD4 LDR X8, [X8 + 0x28]
	0x02852FD8 LDR X8, [X8 + 0x20]
	0x02852FDC LDR X8, [X8 + 0xC0]
	0x02852FE0 LDR X1, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X19, X2
	007 Move X21, [X0+40]
	008 Move X0, [X0+48]
	009 Move X8, [X8+192]
	010 Move X2, [X8+80]
	011 Call 0x21B5830, X0, X1
	012 Move X8, [X19+32]
	013 Move X20, X0
	014 Move X8, [X8+192]
	015 Move X8, [X8+24]
	016 Move W9, [X8+309]
	017 Move TEMP, X9
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {24}
	021 Move X0, X8
	022 Call 0x1C5D684
	023 Move X8, X0
	024 Move X0, X8
	025 Call 0x1C17F10
	026 Move X8, [X19+32]
	027 Move X19, X0
	028 Move X8, [X8+192]
	029 Move X8, [X8+40]
	030 Move X8, [X8+32]
	031 Move X8, [X8+192]
	032 Move X1, [X8]
	033 Call 0x2EA376C, X0
	034 Move [X19+40], X21
	035 Move [X19+48], X20
	036 Move X0, X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return X0

