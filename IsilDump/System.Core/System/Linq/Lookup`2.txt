Type: System.Linq.Lookup`2

Method: System.Linq.Lookup`2<TKey, TElement> Create(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource, TKey> keySelector, System.Func`2<TSource, TElement> elementSelector, System.Collections.Generic.IEqualityComparer`1<TKey> comparer)

Disassembly:
	0x021335D0 MOV X21, X2
	0x021335D4 BL 0x1C5C6E0
	0x021335D8 LDR X8, [X21 + 0x38]
	0x021335DC LDR X3, [X8]
	0x021335E0 LDR X0, [X20]
	0x021335E4 LDR W2, [X20 + 0xC]
	0x021335E8 MOV W1, W19
	0x021335EC LDR X4, [X3]
	0x021335F0 LDP X20, X19, [X31 + 0x10]
	0x021335F4 LDP X30, X21, [X31], #0x20
	0x021335F8 BR X4
	0x021335FC STP X30, X21, [X31 - 0x20]!
	0x02133600 STP X20, X19, [X31 + 0x10]
	0x02133604 LDR X8, [X1 + 0x38]
	0x02133608 MOV X20, X1
	0x0213360C MOV X19, X0
	0x02133610 CBNZ X8, 0x213361C
	0x02133614 MOV X0, X20
	0x02133618 BL 0x1C5C6E0
	0x0213361C LDR X8, [X20 + 0x20]
	0x02133620 ADD X9, X8, 0x135
	0x02133624 LDRH W9, [X9]
	0x02133628 TBNZ X9, 0x0, 0x2133644
	0x0213362C MOV X0, X8
	0x02133630 BL 0x1C5C684
	0x02133634 LDR X8, [X20 + 0x20]
	0x02133638 ADD X9, X8, 0x135
	0x0213363C LDRH W9, [X9]
	0x02133640 B 0x2133648
	0x02133644 MOV X0, X8
	0x02133648 LDR X10, [X0 + 0xC0]
	0x0213364C LDR X10, [X10 + 0x20]
	0x02133650 LDR X21, [X10]
	0x02133654 TBNZ X9, 0x0, 0x2133664
	0x02133658 MOV X0, X8
	0x0213365C BL 0x1C5C684
	0x02133660 MOV X8, X0
	0x02133664 LDR X8, [X8 + 0xC0]
	0x02133668 MOV X0, X19
	0x0213366C LDR X1, [X8 + 0x20]
	0x02133670 BLR X21
	0x02133674 LDR X8, [X20 + 0x38]
	0x02133678 MOV W1, W0
	0x0213367C MOV X0, X19
	0x02133680 LDP X20, X19, [X31 + 0x10]
	0x02133684 LDR X2, [X8]
	0x02133688 LDR X3, [X2]
	0x0213368C LDP X30, X21, [X31], #0x20
	0x02133690 BR X3
	0x02133694 STP X30, X23, [X31 - 0x30]!
	0x02133698 STP X22, X21, [X31 + 0x10]
	0x0213369C STP X20, X19, [X31 + 0x20]
	0x021336A0 LDR X8, [X2 + 0x38]
	0x021336A4 MOV X20, X2
	0x021336A8 MOV X19, X0
	0x021336AC CBNZ X8, 0x21336B8
	0x021336B0 MOV X0, X20
	0x021336B4 BL 0x1C5C6E0
	0x021336B8 LDR X8, [X20 + 0x20]
	0x021336BC ADD X9, X8, 0x135
	0x021336C0 LDRH W9, [X9]
	0x021336C4 TBNZ X9, 0x0, 0x21336E0
	0x021336C8 MOV X0, X8
	0x021336CC BL 0x1C5C684
	0x021336D0 LDR X8, [X20 + 0x20]
	0x021336D4 ADD X9, X8, 0x135
	0x021336D8 LDRH W9, [X9]
	0x021336DC B 0x21336E4
	0x021336E0 MOV X0, X8
	0x021336E4 LDR X10, [X0 + 0xC0]
	0x021336E8 LDR X10, [X10 + 0x28]
	0x021336EC LDR X21, [X10]
	0x021336F0 TBNZ X9, 0x0, 0x2133700
	0x021336F4 MOV X0, X8
	0x021336F8 BL 0x1C5C684
	0x021336FC MOV X8, X0
	0x02133700 LDR X8, [X8 + 0xC0]
	0x02133704 LDR X0, [X8 + 0x28]
	0x02133708 BLR X21
	0x0213370C LDR X8, [X20 + 0x38]
	0x02133710 MOV W21, W0
	0x02133714 LDR X8, [X8]
	0x02133718 LDR X9, [X8]
	0x0213371C MOV X0, X8
	0x02133720 BLR X9
	0x02133724 LDR X8, [X20 + 0x20]
	0x02133728 MOV W22, W0
	0x0213372C ADD X9, X8, 0x135
	0x02133730 LDRH W9, [X9]
	0x02133734 TBNZ X9, 0x0, 0x2133750
	0x02133738 MOV X0, X8
	0x0213373C BL 0x1C5C684
	0x02133740 LDR X8, [X20 + 0x20]
	0x02133744 ADD X9, X8, 0x135
	0x02133748 LDRH W9, [X9]
	0x0213374C B 0x2133754
	0x02133750 MOV X0, X8
	0x02133754 LDR X10, [X0 + 0xC0]
	0x02133758 LDR X10, [X10 + 0x20]
	0x0213375C LDR X23, [X10]
	0x02133760 TBNZ X9, 0x0, 0x2133770
	0x02133764 MOV X0, X8
	0x02133768 BL 0x1C5C684
	0x0213376C MOV X8, X0
	0x02133770 LDR X8, [X8 + 0xC0]
	0x02133774 MOV X0, X19
	0x02133778 SXTW X22, W22
	0x0213377C LDR X1, [X8 + 0x20]
	0x02133780 BLR X23
	0x02133784 LDR X8, [X20 + 0x38]
	0x02133788 LDR X2, [X8 + 0x8]
	0x0213378C SMADDL X8, X0, X21, X31
	0x02133790 SDIV X1, X8, X22
	0x02133794 MOV X0, X19
	0x02133798 LDR X3, [X2]
	0x0213379C LDP X20, X19, [X31 + 0x20]
	0x021337A0 LDP X22, X21, [X31 + 0x10]
	0x021337A4 LDP X30, X23, [X31], #0x30
	0x021337A8 BR X3
	0x021337AC STP X30, X21, [X31 - 0x20]!
	0x021337B0 STP X20, X19, [X31 + 0x10]
	0x021337B4 LDR X8, [X2 + 0x38]
	0x021337B8 MOV W19, W1
	0x021337BC MOV X20, X0
	0x021337C0 CBNZ X8, 0x21337D4
	0x021337C4 MOV X0, X2
	0x021337C8 MOV X21, X2
	0x021337CC BL 0x1C5C6E0
	0x021337D0 LDR X8, [X21 + 0x38]
	0x021337D4 LDR X0, [X20]
	0x021337D8 LDR W2, [X20 + 0xC]
	0x021337DC LDR X3, [X8]
	0x021337E0 MOV W1, W19
	0x021337E4 LDP X20, X19, [X31 + 0x10]
	0x021337E8 LDP X30, X21, [X31], #0x20
	0x021337EC B 0x222246C
	0x021337F0 STR X30, [X31 - 0x20]!
	0x021337F4 STP X20, X19, [X31 + 0x10]
	0x021337F8 LDR X8, [X1 + 0x38]
	0x021337FC MOV X19, X0
	0x02133800 CBNZ X8, 0x2133814
	0x02133804 MOV X0, X1
	0x02133808 MOV X20, X1
	0x0213380C BL 0x1C5C6E0
	0x02133810 LDR X8, [X20 + 0x38]
	0x02133814 LDR W1, [X19 + 0x8]
	0x02133818 LDR X2, [X8]
	0x0213381C MOV X0, X19
	0x02133820 LDP X20, X19, [X31 + 0x10]
	0x02133824 LDR X30, [X31], #0x20
	0x02133828 B 0x21337AC
	0x0213382C STP X30, X21, [X31 - 0x20]!
	0x02133830 STP X20, X19, [X31 + 0x10]
	0x02133834 LDR X8, [X2 + 0x38]
	0x02133838 MOV X19, X1
	0x0213383C MOV X20, X0
	0x02133840 CBNZ X8, 0x2133854
	0x02133844 MOV X0, X2
	0x02133848 MOV X21, X2
	0x0213384C BL 0x1C5C6E0
	0x02133850 LDR X8, [X21 + 0x38]
	0x02133854 LDR X2, [X8 + 0x8]
	0x02133858 MOV X0, X20
	0x0213385C MOV X1, X19
	0x02133860 LDP X20, X19, [X31 + 0x10]
	0x02133864 LDR X3, [X2]
	0x02133868 LDP X30, X21, [X31], #0x20
	0x0213386C BR X3
	0x02133870 STR X30, [X31 - 0x40]!
	0x02133874 STP X24, X23, [X31 + 0x10]
	0x02133878 STP X22, X21, [X31 + 0x20]
	0x0213387C STP X20, X19, [X31 + 0x30]
	0x02133880 LDR X8, [X2 + 0x38]
	0x02133884 MOV X20, X2
	0x02133888 MOV X19, X1
	0x0213388C MOV X21, X0
	0x02133890 CBNZ X8, 0x21338A0
	0x02133894 MOV X0, X20
	0x02133898 BL 0x1C5C6E0
	0x0213389C LDR X8, [X20 + 0x38]
	0x021338A0 LDR X8, [X8 + 0x8]
	0x021338A4 MOV X0, X19
	0x021338A8 LDR X8, [X8 + 0x80]
	0x021338AC ADD X1, X8, 0x20
	0x021338B0 BL 0x1C16D18
	0x021338B4 LDR X8, [X20 + 0x20]
	0x021338B8 MOV X22, X0
	0x021338BC LDRB W9, [X8 + 0x135]
	0x021338C0 TBNZ X9, 0x0, 0x21338D0
	0x021338C4 MOV X0, X8
	0x021338C8 BL 0x1C5C684
	0x021338CC MOV X8, X0
	0x021338D0 LDR X8, [X8 + 0xC0]
	0x021338D4 MOV X0, X21
	0x021338D8 LDR X8, [X8]
	0x021338DC LDR X8, [X8 + 0x80]
	0x021338E0 ADD X1, X8, 0x20
	0x021338E4 BL 0x1C16D18
	0x021338E8 LDR X8, [X20 + 0x20]
	0x021338EC MOV X23, X0
	0x021338F0 ADD X9, X8, 0x135
	0x021338F4 LDRH W9, [X9]
	0x021338F8 TBNZ X9, 0x0, 0x2133914
	0x021338FC MOV X0, X8
	0x02133900 BL 0x1C5C684
	0x02133904 LDR X8, [X20 + 0x20]
	0x02133908 ADD X9, X8, 0x135
	0x0213390C LDRH W9, [X9]
	0x02133910 B 0x2133918
	0x02133914 MOV X0, X8
	0x02133918 LDR X10, [X0 + 0xC0]
	0x0213391C LDR X10, [X10 + 0x68]
	0x02133920 LDR X24, [X10]
	0x02133924 TBNZ X9, 0x0, 0x2133934
	0x02133928 MOV X0, X8
	0x0213392C BL 0x1C5C684
	0x02133930 MOV X8, X0
	0x02133934 LDR X8, [X8 + 0xC0]
	0x02133938 MOV X0, X21
	0x0213393C LDR X1, [X8 + 0x68]
	0x02133940 BLR X24
	0x02133944 LDR X8, [X20 + 0x38]
	0x02133948 MOV W20, W0
	0x0213394C MOV X0, X19
	0x02133950 LDR X1, [X8 + 0x18]
	0x02133954 LDR X8, [X1]
	0x02133958 BLR X8
	0x0213395C MOV W3, W0
	0x02133960 MOV X0, X23
	0x02133964 MOV W1, W20
	0x02133968 MOV X2, X22
	0x0213396C LDP X20, X19, [X31 + 0x30]
	0x02133970 LDP X22, X21, [X31 + 0x20]
	0x02133974 LDP X24, X23, [X31 + 0x10]
	0x02133978 MOV W4, W31
	0x0213397C MOV X5, X31
	0x02133980 LDR X30, [X31], #0x40
	0x02133984 B 0x1E38430
	0x02133988 STP X30, X21, [X31 - 0x20]!
	0x0213398C STP X20, X19, [X31 + 0x10]
	0x02133990 LDR X8, [X2 + 0x38]
	0x02133994 MOV X19, X1
	0x02133998 MOV X20, X0
	0x0213399C CBNZ X8, 0x21339B0
	0x021339A0 MOV X0, X2
	0x021339A4 MOV X21, X2
	0x021339A8 BL 0x1C5C6E0
	0x021339AC LDR X8, [X21 + 0x38]
	0x021339B0 LDR X3, [X8 + 0x8]
	0x021339B4 MOV X0, X20
	0x021339B8 MOV X1, X19
	0x021339BC MOV W2, W31
	0x021339C0 LDR X8, [X3]
	0x021339C4 BLR X8
	0x021339C8 LDP X20, X19, [X31 + 0x10]
	0x021339CC ORN W8, W31, W0, 0x0
	0x021339D0 UBFM W0, W8, 0x1F, 0x1F
	0x021339D4 LDP X30, X21, [X31], #0x20
	0x021339D8 RET
	0x021339DC STP X30, X21, [X31 - 0x20]!
	0x021339E0 STP X20, X19, [X31 + 0x10]
	0x021339E4 LDR X8, [X2 + 0x38]
	0x021339E8 MOV X19, X1
	0x021339EC MOV X20, X0
	0x021339F0 CBNZ X8, 0x2133A04
	0x021339F4 MOV X0, X2
	0x021339F8 MOV X21, X2

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X8, [X4+56]
	011 Move X21, X4
	012 Move X24, X3
	013 Move X22, X2
	014 Move X23, X1
	015 Move X20, X0
	016 Compare X8, 0
	017 JumpIfNotEqual {29}
	018 Move X0, 0x1FC1000
	019 Move X0, [X0+3584]
	020 Call 0x1C17CF4
	021 Move X0, 0x1FC1000
	022 Move X0, [X0+3608]
	023 Call 0x1C17CF4
	024 Move X8, [X21+56]
	025 Compare X8, 0
	026 JumpIfNotEqual {29}
	027 Move X0, X21
	028 Call 0x1C5D6E0
	029 Compare X20, 0
	030 JumpIfEqual {240}
	031 Compare X23, 0
	032 JumpIfEqual {242}
	033 Compare X22, 0
	034 JumpIfEqual {244}
	035 Move X0, [X21+32]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X0+192]
	043 Move X0, [X8+8]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Call 0x1C17F10
	051 Move X8, [X21+32]
	052 Move X19, X0
	053 Move W9, [X8+309]
	054 Move TEMP, X9
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {61}
	058 Move X0, X8
	059 Call 0x1C5D684
	060 Move X8, X0
	061 Move X8, [X8+192]
	062 Move X0, X19
	063 Move X1, X24
	064 Move X2, [X8+16]
	065 Call 0x31999D8, X0, X1
	066 Move X8, [X21+56]
	067 Move X1, [X8]
	068 Move W8, [X1+309]
	069 Move TEMP, X8
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {76}
	073 Move X0, X1
	074 Call 0x1C5D684
	075 Move X1, X0
	076 Move X8, [X20]
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Compare X9, 0
	079 JumpIfEqual {86}
	080 Move X10, [X8+176]
	081 Add X10, X10, 8
	082 NotImplemented "Instruction LDUR not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Subtract X9, X9, 1
	085 Add X10, X10, 16
	086 Move X0, X20
	087 Move W2, W31
	088 Call 0x1C5D788
	089 NotImplemented "Instruction LDRSW not yet implemented."
	090 Add X8, X8, X9
	091 Add X0, X8, 312
	092 Move X8, [X0]
	093 Move X1, [X0+8]
	094 Move X0, X20
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move X20, X0
	097 Compare X0, 0
	098 JumpIfEqual {251}
	099 Move X26, 0x1FC1000
	100 Move X26, [X26+3608]
	101 Move X8, [X20]
	102 Move X1, [X26]
	103 NotImplemented "Instruction LDRH not yet implemented."
	104 Compare X9, 0
	105 JumpIfEqual {112}
	106 Move X10, [X8+176]
	107 Add X10, X10, 8
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Subtract X9, X9, 1
	111 Add X10, X10, 16
	112 Move X0, X20
	113 Move W2, W31
	114 Call 0x1C5D788
	115 NotImplemented "Instruction LDRSW not yet implemented."
	116 Add X8, X8, X9
	117 Add X0, X8, 312
	118 Move X8, [X0]
	119 Move X1, [X0+8]
	120 Move X0, X20
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {199}
	126 Move X8, [X21+56]
	127 Move X1, [X8+32]
	128 Move W8, [X1+309]
	129 Move TEMP, X8
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfEqual {136}
	133 Move X0, X1
	134 Call 0x1C5D684
	135 Move X1, X0
	136 Move X8, [X20]
	137 NotImplemented "Instruction LDRH not yet implemented."
	138 Compare X9, 0
	139 JumpIfEqual {146}
	140 Move X10, [X8+176]
	141 Add X10, X10, 8
	142 NotImplemented "Instruction LDUR not yet implemented."
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Subtract X9, X9, 1
	145 Add X10, X10, 16
	146 Move X0, X20
	147 Move W2, W31
	148 Call 0x1C5D788
	149 NotImplemented "Instruction LDRSW not yet implemented."
	150 Add X8, X8, X9
	151 Add X0, X8, 312
	152 Move X8, [X0]
	153 Move X1, [X0+8]
	154 Move X0, X20
	155 NotImplemented "Instruction BLR not yet implemented."
	156 Move X24, X0
	157 Move X0, [X23+64]
	158 Move X8, [X23+24]
	159 Move X2, [X23+40]
	160 Move X1, X24
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Compare X19, 0
	163 JumpIfEqual {238}
	164 Move W25, W0
	165 Move X0, [X21+32]
	166 Move W8, [X0+309]
	167 Move TEMP, X8
	168 And TEMP, TEMP, 1
	169 Compare TEMP, 1
	170 JumpIfEqual {172}
	171 Call 0x1C5D684
	172 Move X8, [X0+192]
	173 Move X3, [X8+32]
	174 Move W2, 1
	175 Move X0, X19
	176 Move W1, W25
	177 Call 0x3199B60, X0, X1, X2
	178 Move X25, X0
	179 Move X0, [X22+64]
	180 Move X8, [X22+24]
	181 Move X2, [X22+40]
	182 Move X1, X24
	183 NotImplemented "Instruction BLR not yet implemented."
	184 Compare X25, 0
	185 JumpIfEqual {239}
	186 Move X24, X0
	187 Move X0, [X21+32]
	188 Move W8, [X0+309]
	189 Move TEMP, X8
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfEqual {194}
	193 Call 0x1C5D684
	194 Move X8, [X0+192]
	195 Move X2, [X8+56]
	196 Move X0, X25
	197 Move X1, X24
	198 Call 0x2D57264, X0, X1
	199 Move X21, X31
	200 Compare X20, 0
	201 JumpIfEqual {225}
	202 Move X10, 0x1FC1000
	203 Move X8, [X20]
	204 Move X10, [X10+3584]
	205 NotImplemented "Instruction LDRH not yet implemented."
	206 Move X1, [X10]
	207 Compare X9, 0
	208 JumpIfEqual {215}
	209 Move X10, [X8+176]
	210 Add X10, X10, 8
	211 NotImplemented "Instruction LDUR not yet implemented."
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Subtract X9, X9, 1
	214 Add X10, X10, 16
	215 Move X0, X20
	216 Move W2, W31
	217 Call 0x1C5D788
	218 NotImplemented "Instruction LDRSW not yet implemented."
	219 Add X8, X8, X9
	220 Add X0, X8, 312
	221 Move X8, [X0]
	222 Move X1, [X0+8]
	223 Move X0, X20
	224 NotImplemented "Instruction BLR not yet implemented."
	225 Compare X21, 0
	226 JumpIfNotEqual {252}
	227 Move X0, X19
	228 Move X20, [X31+64]
	229 Move X19, [X31+72]
	230 Move X22, [X31+48]
	231 Move X21, [X31+56]
	232 Move X24, [X31+32]
	233 Move X23, [X31+40]
	234 Move X26, [X31+16]
	235 Move X25, [X31+24]
	236 Move X30, [X31+80]
	237 Return X0
	238 Call 0x1C17F20
	239 Call 0x1C17F20
	240 Move X0, 0x1FCC000
	241 Move X0, [X0+1408]
	242 Move X0, 0x1FE9000
	243 Move X0, [X0+1712]
	244 Move X0, 0x1FE9000
	245 Move X0, [X0+1720]
	246 Call 0x1C17D08
	247 Move X1, X31
	248 Call Error.ArgumentNull, X0
	249 Move X1, X21
	250 Call 0x1C17DEC
	251 Call 0x1C17F20
	252 Move X0, X21
	253 Call 0x1C17F18
	254 Move X22, X0
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move X0, X22
	257 Call 0x3EB2AD0
	258 Move X21, [X0]
	259 Call 0x3EB2AE0
	260 Move X21, X31
	261 Move X22, X0
	262 Compare X20, 0
	263 JumpIfEqual {287}
	264 Move X10, 0x1FC1000
	265 Move X8, [X20]
	266 Move X10, [X10+3584]
	267 NotImplemented "Instruction LDRH not yet implemented."
	268 Move X1, [X10]
	269 Compare X9, 0
	270 JumpIfEqual {277}
	271 Move X10, [X8+176]
	272 Add X10, X10, 8
	273 NotImplemented "Instruction LDUR not yet implemented."
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Subtract X9, X9, 1
	276 Add X10, X10, 16
	277 Move X0, X20
	278 Move W2, W31
	279 Call 0x1C5D788
	280 NotImplemented "Instruction LDRSW not yet implemented."
	281 Add X8, X8, X9
	282 Add X0, X8, 312
	283 Move X8, [X0]
	284 Move X1, [X0+8]
	285 Move X0, X20
	286 NotImplemented "Instruction BLR not yet implemented."
	287 Compare X21, 0
	288 JumpIfNotEqual {291}
	289 Move X0, X22
	290 Call 0x1D2D690
	291 Move X0, X21
	292 Call 0x1C17F18
	293 Call 0x1991590

Method: System.Void .ctor(System.Collections.Generic.IEqualityComparer`1<TKey> comparer)

Disassembly:
	0x031999D8 TBNZ X8, 0x0, 0x31999E8
	0x031999DC MOV X0, X1
	0x031999E0 BL 0x1C5C684
	0x031999E4 MOV X1, X0
	0x031999E8 LDR X8, [X23]
	0x031999EC LDRH W9, [X8 + 0x12E]
	0x031999F0 CBZ X9, 0x3199A14
	0x031999F4 LDR X10, [X8 + 0xB0]
	0x031999F8 ADD X10, X10, 0x8
	0x031999FC LDUR X11, [X10 - 0x8]
	0x03199A00 CMP X11, X1
	0x03199A04 B.EQ 0x3199A24
	0x03199A08 SUBS X9, X9, 0x1
	0x03199A0C ADD X10, X10, 0x10
	0x03199A10 B.NE 0x31999FC
	0x03199A14 MOV X0, X23
	0x03199A18 MOV W2, W31
	0x03199A1C BL 0x1C5C788
	0x03199A20 B 0x3199A30
	0x03199A24 LDRSW X9, [X10]
	0x03199A28 ADD X8, X8, X9, 0x4, LSL
	0x03199A2C ADD X0, X8, 0x138
	0x03199A30 LDP X8, X3, [X0]
	0x03199A34 MOV X0, X23
	0x03199A38 MOV W1, W21
	0x03199A3C MOV W2, W24

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, X1
	006 Move X1, X31
	007 Move X20, X2
	008 Move X19, X0
	009 Call Object..ctor, X0
	010 Compare X21, 0
	011 JumpIfNotEqual {17}
	012 Move X8, [X20+32]
	013 Move X8, [X8+192]
	014 Move X0, [X8+64]
	015 Call 0x211B0D4
	016 Move X21, X0
	017 Move [X19+16], X21
	018 Move X8, [X20+32]
	019 Move X8, [X8+192]
	020 Move X0, [X8+88]
	021 Move W8, [X0+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {27}
	026 Call 0x1C5D684
	027 Move W1, 7
	028 Call 0x1C17D6C
	029 Move [X19+24], X0
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return 

Method: System.Collections.Generic.IEnumerator`1<System.Linq.IGrouping`2<TKey, TElement>> GetEnumerator()

Disassembly:
	0x03199A40 BLR X8
	0x03199A44 TBNZ X0, 0x0, 0x3199A5C
	0x03199A48 LDR X8, [X26 + 0x20]
	0x03199A4C MOV X27, X26
	0x03199A50 CBNZ X8, 0x31999B8
	0x03199A54 MOV W0, W31
	0x03199A58 B 0x3199AA4
	0x03199A5C CBZ X27, 0x3199A6C
	0x03199A60 LDR X8, [X26 + 0x20]
	0x03199A64 STR X8, [X27 + 0x20]
	0x03199A68 B 0x3199A8C
	0x03199A6C LDR X8, [X19 + 0x10]
	0x03199A70 CBZ X8, 0x3199ABC
	0x03199A74 LDR W9, [X8 + 0x18]
	0x03199A78 CMP W22, W9
	0x03199A7C B.CS 0x3199AC0
	0x03199A80 LDR X9, [X26 + 0x20]
	0x03199A84 ADD X8, X8, X25, 0x3, LSL
	0x03199A88 STR X9, [X8 + 0x20]
	0x03199A8C ADRP X8, 0xFFFFFFFFFD955000
	0x03199A90 LDR V0, [X19 + 0x18]
	0x03199A94 LDR V1, [X8 + 0x400]
	0x03199A98 MOVZ W0, 0x1
	0x03199A9C ADD S0.2S, S0.2S, S1.2S
	0x03199AA0 STR D0, [X19 + 0x18]
	0x03199AA4 LDP X20, X19, [X31 + 0x40]
	0x03199AA8 LDP X22, X21, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X20, X1
	006 Move X19, X0
	007 Move X8, [X8+192]
	008 Move X8, [X8+104]
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X0, X8
	018 Call 0x1C17F10
	019 Move X8, [X20+32]
	020 Move W1, W31
	021 Move X20, X0
	022 Move X8, [X8+192]
	023 Move X2, [X8+112]
	024 Call 0x2399864, X0, X1
	025 Compare X20, 0
	026 JumpIfEqual {33}
	027 Move [X20+32], X19
	028 Move X0, X20
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0
	033 Call 0x1C17F20

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x03199AAC LDP X24, X23, [X31 + 0x20]
	0x03199AB0 LDP X26, X25, [X31 + 0x10]
	0x03199AB4 LDP X30, X27, [X31], #0x50
	0x03199AB8 RET

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+128]
	004 Call 0x3199A40, X0
	005 Return X0

Method: System.Int32 InternalGetHashCode(TKey key)

Disassembly:
	0x03199ABC BL 0x1C16F20
	0x03199AC0 BL 0x1C16F28
	0x03199AC4 STR X30, [X31 - 0x40]!
	0x03199AC8 STP X24, X23, [X31 + 0x10]
	0x03199ACC STP X22, X21, [X31 + 0x20]
	0x03199AD0 STP X20, X19, [X31 + 0x30]
	0x03199AD4 LDR X8, [X2 + 0x20]
	0x03199AD8 MOV X19, X2
	0x03199ADC MOV W2, W31
	0x03199AE0 MOV W20, W1
	0x03199AE4 LDR X8, [X8 + 0xC0]
	0x03199AE8 MOV X21, X0
	0x03199AEC LDR X3, [X8 + 0x68]
	0x03199AF0 BL 0x3199E4C
	0x03199AF4 LDR X8, [X21 + 0x10]
	0x03199AF8 CBZ X8, 0x3199BC0
	0x03199AFC LDR W9, [X8 + 0x18]
	0x03199B00 CMP W0, W9
	0x03199B04 B.CS 0x3199BC4
	0x03199B08 ADD X8, X8, W0, 0x3, SXTW
	0x03199B0C LDR X22, [X8 + 0x20]
	0x03199B10 CBZ X22, 0x3199BA8
	0x03199B14 LDR X23, [X21 + 0x20]
	0x03199B18 CBZ X23, 0x3199BC0
	0x03199B1C LDR X8, [X19 + 0x20]
	0x03199B20 LDR W24, [X22 + 0x10]
	0x03199B24 LDR X8, [X8 + 0xC0]
	0x03199B28 LDR X1, [X8 + 0x18]
	0x03199B2C LDRB W8, [X1 + 0x135]
	0x03199B30 TBNZ X8, 0x0, 0x3199B40
	0x03199B34 MOV X0, X1
	0x03199B38 BL 0x1C5C684
	0x03199B3C MOV X1, X0
	0x03199B40 LDR X8, [X23]
	0x03199B44 LDRH W9, [X8 + 0x12E]
	0x03199B48 CBZ X9, 0x3199B6C
	0x03199B4C LDR X10, [X8 + 0xB0]
	0x03199B50 ADD X10, X10, 0x8
	0x03199B54 LDUR X11, [X10 - 0x8]
	0x03199B58 CMP X11, X1
	0x03199B5C B.EQ 0x3199B7C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, [X0+16]
	005 Compare X20, 0
	006 JumpIfEqual {46}
	007 Move X8, [X2+32]
	008 Move W19, W1
	009 Move X8, [X8+192]
	010 Move X1, [X8]
	011 Move W8, [X1+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X1
	017 Call 0x1C5D684
	018 Move X1, X0
	019 Move X8, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Compare X9, 0
	022 JumpIfEqual {29}
	023 Move X10, [X8+176]
	024 Add X10, X10, 8
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Subtract X9, X9, 1
	028 Add X10, X10, 16
	029 Move W2, 1
	030 Move X0, X20
	031 Call 0x1C5D788
	032 Move W9, [X10]
	033 Add W9, W9, 1
	034 Add X8, X8, W9
	035 Add X0, X8, 312
	036 Move X8, [X0]
	037 Move X2, [X0+8]
	038 Move X0, X20
	039 Move W1, W19
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 And W0, W0, 0x7FFFFFFF
	044 Move X30, [X31+32]
	045 Return X0
	046 Call 0x1C17F20

Method: System.Linq.Lookup`2/Grouping<TKey, TElement> GetGrouping(TKey key, System.Boolean create)

Disassembly:
	0x03199B60 SUBS X9, X9, 0x1
	0x03199B64 ADD X10, X10, 0x10
	0x03199B68 B.NE 0x3199B54
	0x03199B6C MOV X0, X23
	0x03199B70 MOV W2, W31
	0x03199B74 BL 0x1C5C788
	0x03199B78 B 0x3199B88
	0x03199B7C LDRSW X9, [X10]
	0x03199B80 ADD X8, X8, X9, 0x4, LSL
	0x03199B84 ADD X0, X8, 0x138
	0x03199B88 LDP X8, X3, [X0]
	0x03199B8C MOV X0, X23
	0x03199B90 MOV W1, W20
	0x03199B94 MOV W2, W24
	0x03199B98 BLR X8
	0x03199B9C TBNZ X0, 0x0, 0x3199BA8
	0x03199BA0 LDR X22, [X22 + 0x20]
	0x03199BA4 CBNZ X22, 0x3199B14
	0x03199BA8 MOV X0, X22
	0x03199BAC LDP X20, X19, [X31 + 0x30]
	0x03199BB0 LDP X22, X21, [X31 + 0x20]
	0x03199BB4 LDP X24, X23, [X31 + 0x10]
	0x03199BB8 LDR X30, [X31], #0x40
	0x03199BBC RET
	0x03199BC0 BL 0x1C16F20
	0x03199BC4 BL 0x1C16F28
	0x03199BC8 STP X30, X23, [X31 - 0x30]!
	0x03199BCC STP X22, X21, [X31 + 0x10]
	0x03199BD0 STP X20, X19, [X31 + 0x20]
	0x03199BD4 LDR X8, [X3 + 0x20]
	0x03199BD8 MOV X19, X3
	0x03199BDC MOV X23, X2
	0x03199BE0 MOV W22, W1
	0x03199BE4 LDR X8, [X8 + 0xC0]
	0x03199BE8 MOV X20, X0
	0x03199BEC LDR X8, [X8 + 0x40]
	0x03199BF0 LDRB W9, [X8 + 0x135]
	0x03199BF4 TBNZ X9, 0x0, 0x3199C04
	0x03199BF8 MOV X0, X8
	0x03199BFC BL 0x1C5C684
	0x03199C00 MOV X8, X0
	0x03199C04 MOV X0, X8
	0x03199C08 BL 0x1C16F10
	0x03199C0C LDR X8, [X19 + 0x20]
	0x03199C10 MOV X21, X0
	0x03199C14 LDR X8, [X8 + 0xC0]
	0x03199C18 LDR X1, [X8 + 0x78]
	0x03199C1C BL 0x2BA8CCC
	0x03199C20 CBZ X21, 0x3199CB4
	0x03199C24 STR W22, [X21 + 0x10]
	0x03199C28 STR X23, [X21 + 0x18]
	0x03199C2C LDR X8, [X19 + 0x20]
	0x03199C30 MOV X0, X20
	0x03199C34 MOV W1, W22
	0x03199C38 MOV W2, W31
	0x03199C3C LDR X8, [X8 + 0xC0]
	0x03199C40 LDR X3, [X8 + 0x68]
	0x03199C44 BL 0x3199E4C
	0x03199C48 LDR X8, [X20 + 0x10]
	0x03199C4C CBZ X8, 0x3199CB4
	0x03199C50 LDR W9, [X8 + 0x18]
	0x03199C54 CMP W0, W9
	0x03199C58 B.CS 0x3199CB8
	0x03199C5C ADD X8, X8, W0, 0x3, SXTW
	0x03199C60 LDR X9, [X8 + 0x20]
	0x03199C64 STR X9, [X21 + 0x20]
	0x03199C68 STR X21, [X8 + 0x20]
	0x03199C6C LDR W8, [X20 + 0x18]
	0x03199C70 LDR X9, [X20 + 0x10]
	0x03199C74 ADD W8, W8, 0x1
	0x03199C78 STR W8, [X20 + 0x18]
	0x03199C7C CBZ X9, 0x3199CB4
	0x03199C80 LDR W9, [X9 + 0x18]
	0x03199C84 CMP W8, W9, LSL
	0x03199C88 B.LE 0x3199CA0
	0x03199C8C LDR X8, [X19 + 0x20]
	0x03199C90 MOV X0, X20
	0x03199C94 LDR X8, [X8 + 0xC0]
	0x03199C98 LDR X1, [X8 + 0x80]
	0x03199C9C BL 0x3199CBC
	0x03199CA0 MOV X0, X21
	0x03199CA4 LDP X20, X19, [X31 + 0x20]
	0x03199CA8 LDP X22, X21, [X31 + 0x10]
	0x03199CAC LDP X30, X23, [X31], #0x30
	0x03199CB0 RET
	0x03199CB4 BL 0x1C16F20
	0x03199CB8 BL 0x1C16F28
	0x03199CBC STP X30, X25, [X31 - 0x40]!
	0x03199CC0 STP X24, X23, [X31 + 0x10]
	0x03199CC4 STP X22, X21, [X31 + 0x20]
	0x03199CC8 STP X20, X19, [X31 + 0x30]
	0x03199CCC LDR X8, [X0 + 0x10]
	0x03199CD0 CBZ X8, 0x3199DB4
	0x03199CD4 LDR X9, [X1 + 0x20]
	0x03199CD8 MOV X19, X0
	0x03199CDC LDR W22, [X8 + 0x18]
	0x03199CE0 MOV X20, X1
	0x03199CE4 LDR X9, [X9 + 0xC0]
	0x03199CE8 LDR X0, [X9 + 0x58]
	0x03199CEC LDRB W9, [X0 + 0x135]
	0x03199CF0 TBNZ X9, 0x0, 0x3199CF8
	0x03199CF4 BL 0x1C5C684
	0x03199CF8 MOVZ W21, 0x1
	0x03199CFC BFM W21, W22, 0x1F, 0x1E
	0x03199D00 MOV W1, W21
	0x03199D04 BL 0x1C16D6C
	0x03199D08 LDR X8, [X19 + 0x10]
	0x03199D0C CBZ X8, 0x3199D8C
	0x03199D10 MOV X22, X0
	0x03199D14 MOV X23, X31
	0x03199D18 LDR W9, [X8 + 0x18]
	0x03199D1C CMP X23, W9, SXTW
	0x03199D20 B.GE 0x3199D90
	0x03199D24 CMP X23, X9
	0x03199D28 B.CS 0x3199DB0
	0x03199D2C ADD X9, X8, X23, 0x3, LSL
	0x03199D30 LDR X24, [X9 + 0x20]
	0x03199D34 CBZ X24, 0x3199D84
	0x03199D38 LDR X8, [X20 + 0x20]
	0x03199D3C LDR X25, [X24 + 0x20]
	0x03199D40 LDR W1, [X24 + 0x10]
	0x03199D44 LDR X8, [X8 + 0xC0]
	0x03199D48 LDR X3, [X8 + 0x68]
	0x03199D4C MOV X0, X19
	0x03199D50 MOV W2, W21
	0x03199D54 BL 0x3199E4C
	0x03199D58 CBZ X22, 0x3199DA8
	0x03199D5C LDR W8, [X22 + 0x18]
	0x03199D60 CMP W0, W8
	0x03199D64 B.CS 0x3199DAC
	0x03199D68 ADD X8, X22, W0, 0x3, SXTW
	0x03199D6C LDR X9, [X8 + 0x20]
	0x03199D70 STR X9, [X24 + 0x20]
	0x03199D74 STR X24, [X8 + 0x20]
	0x03199D78 MOV X24, X25
	0x03199D7C CBNZ X25, 0x3199D38
	0x03199D80 LDR X8, [X19 + 0x10]
	0x03199D84 ADD X23, X23, 0x1
	0x03199D88 CBNZ X8, 0x3199D18
	0x03199D8C BL 0x1C16F20
	0x03199D90 STR X22, [X19 + 0x10]
	0x03199D94 LDP X20, X19, [X31 + 0x30]
	0x03199D98 LDP X22, X21, [X31 + 0x20]
	0x03199D9C LDP X24, X23, [X31 + 0x10]
	0x03199DA0 LDP X30, X25, [X31], #0x40
	0x03199DA4 RET

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X8, [X3+32]
	011 Move W24, W2
	012 Move X22, X3
	013 Move W23, W1
	014 Move X8, [X8+192]
	015 Move X19, X0
	016 Move X2, [X8+144]
	017 Call 0x3199ABC, X0, X1
	018 Move X8, [X19+24]
	019 Compare X8, 0
	020 JumpIfEqual {170}
	021 Move W10, [X8+24]
	022 Move W20, W0
	023 NotImplemented "Instruction SDIV not yet implemented."
	024 NotImplemented "Instruction MSUB not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Add X8, X8, W9
	027 Move X21, [X8+32]
	028 Compare X21, 0
	029 JumpIfEqual {76}
	030 Move W8, [X21+20]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X25, [X19+16]
	033 Compare X25, 0
	034 JumpIfEqual {170}
	035 Move X8, [X22+32]
	036 Move W26, [X21+16]
	037 Move X8, [X8+192]
	038 Move X1, [X8]
	039 Move W8, [X1+309]
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {47}
	044 Move X0, X1
	045 Call 0x1C5D684
	046 Move X1, X0
	047 Move X8, [X25]
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Compare X9, 0
	050 JumpIfEqual {57}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move X0, X25
	058 Move W2, W31
	059 Call 0x1C5D788
	060 NotImplemented "Instruction LDRSW not yet implemented."
	061 Add X8, X8, X9
	062 Add X0, X8, 312
	063 Move X8, [X0]
	064 Move X3, [X0+8]
	065 Move X0, X25
	066 Move W1, W26
	067 Move W2, W23
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {159}
	073 Move X21, [X21+40]
	074 Compare X21, 0
	075 JumpIfNotEqual {30}
	076 Move TEMP, X24
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {152}
	080 Move X8, [X19+24]
	081 Compare X8, 0
	082 JumpIfEqual {170}
	083 Move W9, [X19+40]
	084 Move W10, [X8+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, [X22+32]
	087 Move X0, X19
	088 Move X8, [X8+192]
	089 Move X1, [X8+160]
	090 Call 0x3199DA8, X0
	091 Move X8, [X19+24]
	092 Compare X8, 0
	093 JumpIfEqual {170}
	094 Move X9, [X22+32]
	095 Move W24, [X8+24]
	096 Move X9, [X9+192]
	097 Move X0, [X9+40]
	098 Move W9, [X0+309]
	099 Move TEMP, X9
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {104}
	103 Call 0x1C5D684
	104 Call 0x1C17F10
	105 Move X8, [X22+32]
	106 Move X21, X0
	107 Move X8, [X8+192]
	108 Move X1, [X8+168]
	109 Call 0x2D574F0, X0
	110 Compare X21, 0
	111 JumpIfEqual {170}
	112 Move [X21+16], W23
	113 Move [X21+20], W20
	114 Move X8, [X22+32]
	115 Move X8, [X8+192]
	116 Move X0, [X8+176]
	117 Move W8, [X0+309]
	118 Move TEMP, X8
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfEqual {123}
	122 Call 0x1C5D684
	123 Move W1, 1
	124 Call 0x1C17D6C
	125 Move [X21+24], X0
	126 Move X22, [X19+24]
	127 Compare X22, 0
	128 JumpIfEqual {170}
	129 Move W8, [X22+24]
	130 NotImplemented "Instruction SDIV not yet implemented."
	131 NotImplemented "Instruction MSUB not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Add X23, X22, W20
	134 Add X23, X23, 32
	135 Move X8, [X23]
	136 Move X0, X21
	137 Move [X21+40], X8
	138 Move X8, [X22]
	139 Move X1, [X8+64]
	140 Call 0x1C17E00
	141 Compare X0, 0
	142 JumpIfEqual {172}
	143 Move W8, [X22+24]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move [X23], X21
	146 Move X8, [X19+32]
	147 Compare X8, 0
	148 JumpIfEqual {153}
	149 Add X8, X8, 48
	150 Move X9, [X8]
	151 Move [X21+48], X9
	152 Move X21, X31
	153 Add X8, X21, 48
	154 Move [X8], X21
	155 Move W8, [X19+40]
	156 Move [X19+32], X21
	157 Add W8, W8, 1
	158 Move [X19+40], W8
	159 Move X0, X21
	160 Move X20, [X31+64]
	161 Move X19, [X31+72]
	162 Move X22, [X31+48]
	163 Move X21, [X31+56]
	164 Move X24, [X31+32]
	165 Move X23, [X31+40]
	166 Move X26, [X31+16]
	167 Move X25, [X31+24]
	168 Move X30, [X31+80]
	169 Return X0
	170 Call 0x1C17F20
	171 Call 0x1C17F28
	172 Call 0x1C17F44
	173 Move X1, X31
	174 Call 0x1C17DEC

Method: System.Void Resize()

Disassembly:
	0x03199DA8 BL 0x1C16F20
	0x03199DAC BL 0x1C16F28
	0x03199DB0 BL 0x1C16F28
	0x03199DB4 BL 0x1C16F20
	0x03199DB8 B 0x3199DD0
	0x03199DBC B 0x3199DD0
	0x03199DC0 B 0x3199DD0
	0x03199DC4 B 0x3199DD0
	0x03199DC8 B 0x3199DD0
	0x03199DCC B 0x3199DD0
	0x03199DD0 MOV X19, X0
	0x03199DD4 CMP W1, 0x1
	0x03199DD8 B.NE 0x3199E40
	0x03199DDC MOV X0, X19
	0x03199DE0 BL 0x3EB1AD0
	0x03199DE4 MOV X19, X0
	0x03199DE8 ADRP X0, 0xF63000
	0x03199DEC LDR X0, [X0 + 0xDB8]
	0x03199DF0 BL 0x1C16D08
	0x03199DF4 LDR X8, [X19]
	0x03199DF8 LDR X1, [X8]
	0x03199DFC BL 0x1C17270
	0x03199E00 TBZ X0, 0x0, 0x3199E18
	0x03199E04 LDP X20, X19, [X31 + 0x30]
	0x03199E08 LDP X22, X21, [X31 + 0x20]
	0x03199E0C LDP X24, X23, [X31 + 0x10]
	0x03199E10 LDP X30, X25, [X31], #0x40
	0x03199E14 B 0x3EB1AE0
	0x03199E18 MOVZ W0, 0x8
	0x03199E1C BL 0x3EB1AF0
	0x03199E20 LDR X8, [X19]
	0x03199E24 STR X8, [X0]
	0x03199E28 ADRP X1, 0xD1B000
	0x03199E2C ADD X1, X1, 0xE58
	0x03199E30 MOV X2, X31
	0x03199E34 BL 0x3EB1B00
	0x03199E38 MOV X19, X0
	0x03199E3C BL 0x3EB1AE0
	0x03199E40 MOV X0, X19
	0x03199E44 BL 0x1D2C690
	0x03199E48 BL 0x1990590
	0x03199E4C STR X30, [X31 - 0x30]!
	0x03199E50 STP X22, X21, [X31 + 0x10]
	0x03199E54 STP X20, X19, [X31 + 0x20]
	0x03199E58 LDR X22, [X0 + 0x20]
	0x03199E5C CBZ X22, 0x3199F14
	0x03199E60 LDR X8, [X3 + 0x20]
	0x03199E64 MOV W21, W1
	0x03199E68 MOV W19, W2
	0x03199E6C MOV X20, X0
	0x03199E70 LDR X8, [X8 + 0xC0]
	0x03199E74 LDR X1, [X8 + 0x18]
	0x03199E78 LDRB W8, [X1 + 0x135]
	0x03199E7C TBNZ X8, 0x0, 0x3199E8C
	0x03199E80 MOV X0, X1
	0x03199E84 BL 0x1C5C684
	0x03199E88 MOV X1, X0
	0x03199E8C LDR X8, [X22]
	0x03199E90 LDRH W9, [X8 + 0x12E]
	0x03199E94 CBZ X9, 0x3199EB8
	0x03199E98 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move W8, [X0+40]
	009 Move W9, 0x40000000
	010 Move X20, X1
	011 Add W31, W8, W9
	012 Move X9, [X20+32]
	013 Move X19, X0
	014 Move W20, 1
	015 NotImplemented "Instruction BFM not yet implemented."
	016 Move X9, [X9+192]
	017 Move X0, [X9+88]
	018 Move W9, [X0+309]
	019 Move TEMP, X9
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Move W1, W20
	025 Call 0x1C17D6C
	026 Move X22, [X19+32]
	027 Move X21, X0
	028 Compare X22, 0
	029 JumpIfEqual {64}
	030 Move X22, [X22+48]
	031 Compare X22, 0
	032 JumpIfEqual {64}
	033 Compare X21, 0
	034 JumpIfEqual {64}
	035 Move W8, [X22+20]
	036 Move W9, [X21+24]
	037 NotImplemented "Instruction SDIV not yet implemented."
	038 NotImplemented "Instruction MSUB not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X24, X21, W23
	041 Add X24, X24, 32
	042 Move X8, [X24]
	043 Move X0, X22
	044 Move [X22+40], X8
	045 Move X8, [X21]
	046 Move X1, [X8+64]
	047 Call 0x1C17E00
	048 Compare X0, 0
	049 JumpIfEqual {66}
	050 Move W8, [X21+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move [X24], X22
	053 Move X8, [X19+32]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move [X19+24], X21
	056 Move X20, [X31+48]
	057 Move X19, [X31+56]
	058 Move X22, [X31+32]
	059 Move X21, [X31+40]
	060 Move X24, [X31+16]
	061 Move X23, [X31+24]
	062 Move X30, [X31+64]
	063 Return 
	064 Call 0x1C17F20
	065 Call 0x1C17F28
	066 Call 0x1C17F44
	067 Move X1, X31
	068 Call 0x1C17DEC
	069 Call 0x1C17F30
	070 Move X1, X20
	071 Call 0x1C17DEC

