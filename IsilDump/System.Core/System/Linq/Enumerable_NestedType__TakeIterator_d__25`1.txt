Type: System.Linq.Enumerable/<TakeIterator>d__25`1

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x0297A224 TBNZ X8, 0x0, 0x297A23C
	0x0297A228 ADRP X0, 0x1779000
	0x0297A22C LDR X0, [X0 + 0xE18]
	0x0297A230 BL 0x1C16CF4
	0x0297A234 MOVZ W8, 0x1
	0x0297A238 STRB W8, [X21 + 0xE8A]
	0x0297A23C ADD X8, X31, 0x28
	0x0297A240 ADD X9, X31, 0x20
	0x0297A244 STP X31, X8, [X31 + 0x8]
	0x0297A248 STR X9, [X31 + 0x18]
	0x0297A24C LDR W8, [X20 + 0x10]
	0x0297A250 CMP W8, 0x2
	0x0297A254 B.EQ 0x297A514

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+32], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x0297A258 CMP W8, 0x1
	0x0297A25C B.EQ 0x297A338
	0x0297A260 CBNZ W8, 0x297A6EC
	0x0297A264 MOVN W8, 0x0
	0x0297A268 STR W8, [X20 + 0x10]
	0x0297A26C LDR X8, [X19 + 0x20]
	0x0297A270 LDR X19, [X20 + 0x28]

ISIL:
	001 Move W8, [X0+16]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Add W31, W8, 3
	004 Call 0x297A540, X0
	005 Return 
	006 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x0297A274 LDR X8, [X8 + 0xC0]
	0x0297A278 LDR X0, [X8 + 0x20]
	0x0297A27C LDRB W8, [X0 + 0x135]
	0x0297A280 TBNZ X8, 0x0, 0x297A288
	0x0297A284 BL 0x1C5C684
	0x0297A288 BL 0x1C16F10
	0x0297A28C LDR X8, [X31 + 0x20]
	0x0297A290 MOV X20, X0
	0x0297A294 LDR X8, [X8 + 0x20]
	0x0297A298 LDR X8, [X8 + 0xC0]
	0x0297A29C LDR X2, [X8 + 0x28]
	0x0297A2A0 MOV X1, X19
	0x0297A2A4 BL 0x25E2B24
	0x0297A2A8 LDR X8, [X31 + 0x28]
	0x0297A2AC LDR X19, [X8 + 0x38]
	0x0297A2B0 STR X20, [X8 + 0x58]
	0x0297A2B4 CBZ X19, 0x297A688
	0x0297A2B8 LDR X8, [X31 + 0x20]
	0x0297A2BC LDR X8, [X8 + 0x20]
	0x0297A2C0 LDR X8, [X8 + 0xC0]
	0x0297A2C4 LDR X1, [X8 + 0x30]
	0x0297A2C8 LDRB W8, [X1 + 0x135]
	0x0297A2CC TBNZ X8, 0x0, 0x297A2DC
	0x0297A2D0 MOV X0, X1
	0x0297A2D4 BL 0x1C5C684
	0x0297A2D8 MOV X1, X0
	0x0297A2DC LDR X8, [X19]
	0x0297A2E0 LDRH W9, [X8 + 0x12E]
	0x0297A2E4 CBZ X9, 0x297A308
	0x0297A2E8 LDR X10, [X8 + 0xB0]
	0x0297A2EC ADD X10, X10, 0x8
	0x0297A2F0 LDUR X11, [X10 - 0x8]
	0x0297A2F4 CMP X11, X1
	0x0297A2F8 B.EQ 0x297A318
	0x0297A2FC SUBS X9, X9, 0x1
	0x0297A300 ADD X10, X10, 0x10
	0x0297A304 B.NE 0x297A2F0
	0x0297A308 MOV X0, X19
	0x0297A30C MOV W2, W31
	0x0297A310 BL 0x1C5C788
	0x0297A314 B 0x297A324
	0x0297A318 LDRSW X9, [X10]
	0x0297A31C ADD X8, X8, X9, 0x4, LSL
	0x0297A320 ADD X0, X8, 0x138
	0x0297A324 LDP X8, X1, [X0]
	0x0297A328 MOV X0, X19
	0x0297A32C BLR X8
	0x0297A330 LDR X20, [X31 + 0x28]
	0x0297A334 STR X0, [X20 + 0x60]
	0x0297A338 LDR X19, [X20 + 0x60]
	0x0297A33C MOVN W8, 0x2
	0x0297A340 STR W8, [X20 + 0x10]
	0x0297A344 CBZ X19, 0x297A46C
	0x0297A348 ADRP X20, 0x1779000
	0x0297A34C LDR X20, [X20 + 0xE18]
	0x0297A350 LDR X8, [X19]
	0x0297A354 LDR X1, [X20]
	0x0297A358 LDRH W9, [X8 + 0x12E]
	0x0297A35C CBZ X9, 0x297A380
	0x0297A360 LDR X10, [X8 + 0xB0]
	0x0297A364 ADD X10, X10, 0x8
	0x0297A368 LDUR X11, [X10 - 0x8]
	0x0297A36C CMP X11, X1
	0x0297A370 B.EQ 0x297A390
	0x0297A374 SUBS X9, X9, 0x1
	0x0297A378 ADD X10, X10, 0x10
	0x0297A37C B.NE 0x297A368
	0x0297A380 MOV X0, X19
	0x0297A384 MOV W2, W31
	0x0297A388 BL 0x1C5C788
	0x0297A38C B 0x297A39C
	0x0297A390 LDRSW X9, [X10]
	0x0297A394 ADD X8, X8, X9, 0x4, LSL
	0x0297A398 ADD X0, X8, 0x138
	0x0297A39C LDP X8, X1, [X0]
	0x0297A3A0 MOV X0, X19
	0x0297A3A4 BLR X8
	0x0297A3A8 MOV W8, W0
	0x0297A3AC LDR X0, [X31 + 0x28]
	0x0297A3B0 TBZ X8, 0x0, 0x297A470
	0x0297A3B4 LDR X19, [X0 + 0x60]
	0x0297A3B8 CBZ X19, 0x297A67C
	0x0297A3BC LDR X8, [X31 + 0x20]
	0x0297A3C0 LDR X8, [X8 + 0x20]
	0x0297A3C4 LDR X8, [X8 + 0xC0]
	0x0297A3C8 LDR X1, [X8 + 0x40]
	0x0297A3CC LDRB W8, [X1 + 0x135]
	0x0297A3D0 TBNZ X8, 0x0, 0x297A3E0
	0x0297A3D4 MOV X0, X1
	0x0297A3D8 BL 0x1C5C684
	0x0297A3DC MOV X1, X0
	0x0297A3E0 LDR X8, [X19]
	0x0297A3E4 LDRH W9, [X8 + 0x12E]
	0x0297A3E8 CBZ X9, 0x297A40C
	0x0297A3EC LDR X10, [X8 + 0xB0]
	0x0297A3F0 ADD X10, X10, 0x8
	0x0297A3F4 LDUR X11, [X10 - 0x8]
	0x0297A3F8 CMP X11, X1
	0x0297A3FC B.EQ 0x297A41C
	0x0297A400 SUBS X9, X9, 0x1
	0x0297A404 ADD X10, X10, 0x10
	0x0297A408 B.NE 0x297A3F4
	0x0297A40C MOV X0, X19
	0x0297A410 MOV W2, W31
	0x0297A414 BL 0x1C5C788
	0x0297A418 B 0x297A428
	0x0297A41C LDRSW X9, [X10]
	0x0297A420 ADD X8, X8, X9, 0x4, LSL
	0x0297A424 ADD X0, X8, 0x138
	0x0297A428 LDP X8, X1, [X0]
	0x0297A42C MOV X0, X19
	0x0297A430 BLR X8
	0x0297A434 LDR X8, [X31 + 0x28]
	0x0297A438 MOV X19, X0
	0x0297A43C LDR X0, [X8 + 0x58]
	0x0297A440 CBZ X0, 0x297A680
	0x0297A444 LDR X8, [X31 + 0x20]
	0x0297A448 LDR X8, [X8 + 0x20]
	0x0297A44C LDR X8, [X8 + 0xC0]
	0x0297A450 LDR X2, [X8 + 0x58]
	0x0297A454 MOV X1, X19
	0x0297A458 BL 0x25E2BD8
	0x0297A45C LDR X8, [X31 + 0x28]
	0x0297A460 TBNZ X0, 0x0, 0x297A4E4
	0x0297A464 LDR X19, [X8 + 0x60]
	0x0297A468 CBNZ X19, 0x297A350
	0x0297A46C BL 0x1C16F20
	0x0297A470 BL 0x297A73C
	0x0297A474 LDR X8, [X31 + 0x28]
	0x0297A478 LDR X19, [X8 + 0x48]
	0x0297A47C STR X31, [X8 + 0x60]
	0x0297A480 CBZ X19, 0x297A684
	0x0297A484 LDR X8, [X31 + 0x20]
	0x0297A488 LDR X8, [X8 + 0x20]
	0x0297A48C LDR X8, [X8 + 0xC0]
	0x0297A490 LDR X1, [X8 + 0x30]
	0x0297A494 LDRB W8, [X1 + 0x135]
	0x0297A498 TBNZ X8, 0x0, 0x297A4A8
	0x0297A49C MOV X0, X1
	0x0297A4A0 BL 0x1C5C684
	0x0297A4A4 MOV X1, X0
	0x0297A4A8 LDR X8, [X19]
	0x0297A4AC LDRH W9, [X8 + 0x12E]
	0x0297A4B0 CBZ X9, 0x297A4D4
	0x0297A4B4 LDR X10, [X8 + 0xB0]
	0x0297A4B8 ADD X10, X10, 0x8
	0x0297A4BC LDUR X11, [X10 - 0x8]
	0x0297A4C0 CMP X11, X1
	0x0297A4C4 B.EQ 0x297A4F4
	0x0297A4C8 SUBS X9, X9, 0x1
	0x0297A4CC ADD X10, X10, 0x10
	0x0297A4D0 B.NE 0x297A4BC
	0x0297A4D4 MOV X0, X19
	0x0297A4D8 MOV W2, W31
	0x0297A4DC BL 0x1C5C788
	0x0297A4E0 B 0x297A500
	0x0297A4E4 MOVZ W0, 0x1
	0x0297A4E8 STR X19, [X8 + 0x18]
	0x0297A4EC STR W0, [X8 + 0x10]
	0x0297A4F0 B 0x297A6F0
	0x0297A4F4 LDRSW X9, [X10]
	0x0297A4F8 ADD X8, X8, X9, 0x4, LSL
	0x0297A4FC ADD X0, X8, 0x138
	0x0297A500 LDP X8, X1, [X0]
	0x0297A504 MOV X0, X19
	0x0297A508 BLR X8
	0x0297A50C LDR X20, [X31 + 0x28]
	0x0297A510 STR X0, [X20 + 0x60]
	0x0297A514 LDR X19, [X20 + 0x60]
	0x0297A518 MOVN W8, 0x3
	0x0297A51C STR W8, [X20 + 0x10]
	0x0297A520 CBZ X19, 0x297A648
	0x0297A524 ADRP X20, 0x1779000
	0x0297A528 LDR X20, [X20 + 0xE18]
	0x0297A52C LDR X8, [X19]
	0x0297A530 LDR X1, [X20]
	0x0297A534 LDRH W9, [X8 + 0x12E]
	0x0297A538 CBZ X9, 0x297A55C
	0x0297A53C LDR X10, [X8 + 0xB0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0x1A61000
	007 Move W8, [X21+3718]
	008 Move X20, X1
	009 Move X19, X0
	010 Move [X31+32], X1
	011 Move [X31+40], X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x177A000
	017 Move X0, [X0+3608]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3718], W8
	021 Add X8, X31, 40
	022 Add X9, X31, 32
	023 Move [X31+16], X8
	024 Move [X31+24], X9
	025 Move W8, [X19+16]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Compare W8, 0
	028 JumpIfNotEqual {169}
	029 Move W8, [X19+36]
	030 Move TEMP, 0
	031 Not TEMP
	032 Move W9, TEMP
	033 Move [X19+16], W9
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X19, [X19+48]
	036 Compare X19, 0
	037 JumpIfEqual {160}
	038 Move X8, [X20+32]
	039 Move X8, [X8+192]
	040 Move X1, [X8+16]
	041 Move W8, [X1+309]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {49}
	046 Move X0, X1
	047 Call 0x1C5D684
	048 Move X1, X0
	049 Move X8, [X19]
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 Compare X9, 0
	052 JumpIfEqual {59}
	053 Move X10, [X8+176]
	054 Add X10, X10, 8
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Subtract X9, X9, 1
	058 Add X10, X10, 16
	059 Move X0, X19
	060 Move W2, W31
	061 Call 0x1C5D788
	062 Move W8, [X19+36]
	063 Move TEMP, 2
	064 Not TEMP
	065 Move W9, TEMP
	066 Move [X19+16], W9
	067 Subtract W8, W8, 1
	068 Move [X19+36], W8
	069 Move X19, [X19+64]
	070 NotImplemented "Instruction LDRSW not yet implemented."
	071 Add X8, X8, X9
	072 Add X0, X8, 312
	073 Move X8, [X0]
	074 Move X1, [X0+8]
	075 Move X0, X19
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move X8, [X31+40]
	078 Move TEMP, 2
	079 Not TEMP
	080 Move W9, TEMP
	081 Move X19, X0
	082 Move [X8+64], X0
	083 Move [X8+16], W9
	084 Compare X19, 0
	085 JumpIfEqual {159}
	086 Move X10, 0x177A000
	087 Move X8, [X19]
	088 Move X10, [X10+3608]
	089 NotImplemented "Instruction LDRH not yet implemented."
	090 Move X1, [X10]
	091 Compare X9, 0
	092 JumpIfEqual {99}
	093 Move X10, [X8+176]
	094 Add X10, X10, 8
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Subtract X9, X9, 1
	098 Add X10, X10, 16
	099 Move X0, X19
	100 Move W2, W31
	101 Call 0x1C5D788
	102 NotImplemented "Instruction LDRSW not yet implemented."
	103 Add X8, X8, X9
	104 Add X0, X8, 312
	105 Move X8, [X0]
	106 Move X1, [X0+8]
	107 Move X0, X19
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move X19, [X31+40]
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfNotEqual {142}
	114 Move X19, [X19+64]
	115 Compare X19, 0
	116 JumpIfEqual {161}
	117 Move X8, [X31+32]
	118 Move X8, [X8+32]
	119 Move X8, [X8+192]
	120 Move X1, [X8+32]
	121 Move W8, [X1+309]
	122 Move TEMP, X8
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfEqual {129}
	126 Move X0, X1
	127 Call 0x1C5D684
	128 Move X1, X0
	129 Move X8, [X19]
	130 NotImplemented "Instruction LDRH not yet implemented."
	131 Compare X9, 0
	132 JumpIfEqual {139}
	133 Move X10, [X8+176]
	134 Add X10, X10, 8
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Subtract X9, X9, 1
	138 Add X10, X10, 16
	139 Move X0, X19
	140 Move W2, W31
	141 Call 0x1C5D788
	142 Move X0, X19
	143 Call 0x297A540, X0
	144 Move X8, [X31+40]
	145 Move W0, W31
	146 Move [X8+64], X31
	147 NotImplemented "Instruction LDRSW not yet implemented."
	148 Add X8, X8, X9
	149 Add X0, X8, 312
	150 Move X8, [X0]
	151 Move X1, [X0+8]
	152 Move X0, X19
	153 NotImplemented "Instruction BLR not yet implemented."
	154 Move X9, [X31+40]
	155 Move X8, X0
	156 Move W0, 1
	157 Move [X9+24], X8
	158 Move [X9+16], W0
	159 Call 0x1C17F20
	160 Call 0x1C17F20
	161 Call 0x1C17F20
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Call 0x3EB2AD0
	164 Move X19, [X0]
	165 Move [X31+8], X19
	166 Call 0x3EB2AE0
	167 Compare X19, 0
	168 JumpIfNotEqual {176}
	169 Move W0, W31
	170 Move X20, [X31+64]
	171 Move X19, [X31+72]
	172 Move X30, [X31+48]
	173 Move X21, [X31+56]
	174 Add X31, X31, 80
	175 Return X0
	176 Add X8, X31, 8
	177 Add X0, X8, 8
	178 Call 0x19D0820
	179 Move X0, X19
	180 Call 0x1C17F18
	181 Compare X19, 0
	182 JumpIfNotEqual {184}
	183 Call 0x1D2D690
	184 Move X0, [X31+40]
	185 Move W8, [X0+16]
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Add W31, W8, 3
	188 Call 0x297A540, X0
	189 Move X0, X19
	190 Call 0x1C17F18
	191 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x0297A540 ADD X10, X10, 0x8
	0x0297A544 LDUR X11, [X10 - 0x8]
	0x0297A548 CMP X11, X1
	0x0297A54C B.EQ 0x297A56C
	0x0297A550 SUBS X9, X9, 0x1
	0x0297A554 ADD X10, X10, 0x10
	0x0297A558 B.NE 0x297A544
	0x0297A55C MOV X0, X19
	0x0297A560 MOV W2, W31
	0x0297A564 BL 0x1C5C788
	0x0297A568 B 0x297A578
	0x0297A56C LDRSW X9, [X10]
	0x0297A570 ADD X8, X8, X9, 0x4, LSL
	0x0297A574 ADD X0, X8, 0x138
	0x0297A578 LDP X8, X1, [X0]
	0x0297A57C MOV X0, X19
	0x0297A580 BLR X8
	0x0297A584 MOV W8, W0
	0x0297A588 LDR X0, [X31 + 0x28]
	0x0297A58C TBZ X8, 0x0, 0x297A64C
	0x0297A590 LDR X19, [X0 + 0x60]
	0x0297A594 CBZ X19, 0x297A674
	0x0297A598 LDR X8, [X31 + 0x20]
	0x0297A59C LDR X8, [X8 + 0x20]
	0x0297A5A0 LDR X8, [X8 + 0xC0]
	0x0297A5A4 LDR X1, [X8 + 0x40]
	0x0297A5A8 LDRB W8, [X1 + 0x135]
	0x0297A5AC TBNZ X8, 0x0, 0x297A5BC
	0x0297A5B0 MOV X0, X1
	0x0297A5B4 BL 0x1C5C684
	0x0297A5B8 MOV X1, X0
	0x0297A5BC LDR X8, [X19]
	0x0297A5C0 LDRH W9, [X8 + 0x12E]
	0x0297A5C4 CBZ X9, 0x297A5E8
	0x0297A5C8 LDR X10, [X8 + 0xB0]
	0x0297A5CC ADD X10, X10, 0x8
	0x0297A5D0 LDUR X11, [X10 - 0x8]
	0x0297A5D4 CMP X11, X1
	0x0297A5D8 B.EQ 0x297A5F8
	0x0297A5DC SUBS X9, X9, 0x1
	0x0297A5E0 ADD X10, X10, 0x10
	0x0297A5E4 B.NE 0x297A5D0
	0x0297A5E8 MOV X0, X19
	0x0297A5EC MOV W2, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1A61000
	005 Move W8, [X19+3719]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x177A000
	012 Move X0, [X0+3584]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X19+3719], W8
	016 Move X19, [X20+64]
	017 Move TEMP, 0
	018 Not TEMP
	019 Move W8, TEMP
	020 Move [X20+16], W8
	021 Compare X19, 0
	022 JumpIfEqual {39}
	023 Move X10, 0x177A000
	024 Move X8, [X19]
	025 Move X10, [X10+3584]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move X0, X19
	037 Move W2, W31
	038 Call 0x1C5D788
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return 
	043 NotImplemented "Instruction LDRSW not yet implemented."
	044 Add X8, X8, X9
	045 Add X0, X8, 312
	046 Move X2, [X0]
	047 Move X1, [X0+8]
	048 Move X0, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 CallNoReturn X2

Method: TSource System.Collections.Generic.IEnumerator<TSource>.get_Current()

Disassembly:
	0x0297A5F0 BL 0x1C5C788
	0x0297A5F4 B 0x297A604

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x0297A5F8 LDRSW X9, [X10]
	0x0297A5FC ADD X8, X8, X9, 0x4, LSL
	0x0297A600 ADD X0, X8, 0x138
	0x0297A604 LDP X8, X1, [X0]
	0x0297A608 MOV X0, X19
	0x0297A60C BLR X8
	0x0297A610 LDR X8, [X31 + 0x28]
	0x0297A614 MOV X19, X0
	0x0297A618 LDR X0, [X8 + 0x58]
	0x0297A61C CBZ X0, 0x297A678
	0x0297A620 LDR X8, [X31 + 0x20]
	0x0297A624 LDR X8, [X8 + 0x20]
	0x0297A628 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x177A000
	005 Move X0, [X0+2880]
	006 Move X19, X1
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X1, X31
	010 Move X20, X0
	011 Call NotSupportedException..ctor, X0
	012 Move X0, X20
	013 Move X1, X19
	014 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x0297A62C LDR X2, [X8 + 0x58]
	0x0297A630 MOV X1, X19

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Collections.Generic.IEnumerator`1<TSource> System.Collections.Generic.IEnumerable<TSource>.GetEnumerator()

Disassembly:
	0x0297A634 BL 0x25E2BD8
	0x0297A638 LDR X8, [X31 + 0x28]
	0x0297A63C TBNZ X0, 0x0, 0x297A660
	0x0297A640 LDR X19, [X8 + 0x60]
	0x0297A644 CBNZ X19, 0x297A52C
	0x0297A648 BL 0x1C16F20
	0x0297A64C BL 0x297A7EC
	0x0297A650 LDR X8, [X31 + 0x28]
	0x0297A654 MOV W0, W31
	0x0297A658 STR X31, [X8 + 0x60]
	0x0297A65C B 0x297A6F0
	0x0297A660 MOVZ W9, 0x2
	0x0297A664 STR X19, [X8 + 0x18]
	0x0297A668 STR W9, [X8 + 0x10]
	0x0297A66C MOVZ W0, 0x1
	0x0297A670 B 0x297A6F0
	0x0297A674 BL 0x1C16F20
	0x0297A678 BL 0x1C16F20
	0x0297A67C BL 0x1C16F20
	0x0297A680 BL 0x1C16F20
	0x0297A684 BL 0x1C16F20
	0x0297A688 BL 0x1C16F20
	0x0297A68C B 0x297A6D0
	0x0297A690 B 0x297A6D0
	0x0297A694 B 0x297A6D0
	0x0297A698 B 0x297A6D0
	0x0297A69C B 0x297A6D0
	0x0297A6A0 B 0x297A6D0
	0x0297A6A4 B 0x297A6D0
	0x0297A6A8 B 0x297A6D0
	0x0297A6AC B 0x297A6D0
	0x0297A6B0 B 0x297A6D0
	0x0297A6B4 B 0x297A6D0
	0x0297A6B8 B 0x297A6D0
	0x0297A6BC B 0x297A6D0
	0x0297A6C0 B 0x297A6D0
	0x0297A6C4 B 0x297A6D0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+16]
	006 Move X19, X0
	007 Move X20, X1
	008 Add W31, W8, 2
	009 Move W21, [X19+32]
	010 Move X0, X31
	011 Call Environment.get_CurrentManagedThreadId
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move [X19+16], W31
	014 Move X20, X19
	015 Move X8, [X20+32]
	016 Move X8, [X8+192]
	017 Move X0, [X8]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X20, X0
	027 Call Object..ctor, X0
	028 Move X0, X31
	029 Move [X20+16], W31
	030 Call Environment.get_CurrentManagedThreadId
	031 Move [X20+32], W0
	032 Move X8, [X19+56]
	033 Move X0, X20
	034 Move [X20+48], X8
	035 Move W8, [X19+40]
	036 Move [X20+36], W8
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x0297A6C8 B 0x297A6D0
	0x0297A6CC B 0x297A6D0
	0x0297A6D0 CMP W1, 0x1
	0x0297A6D4 B.NE 0x297A718

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+72]
	004 Call 0x297A634, X0
	005 Return X0

