Type: System.Linq.Enumerable/<CastIterator>d__99`1

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x023876A8 STUR X8, [X29 - 0x8]
	0x023876AC LDRB W8, [X20 + 0x92D]
	0x023876B0 STP X1, X0, [X29 - 0x18]
	0x023876B4 TBNZ X8, 0x0, 0x23876D8
	0x023876B8 ADRP X0, 0x1D74000
	0x023876BC LDR X0, [X0 + 0xDB8]
	0x023876C0 BL 0x1C16CF4
	0x023876C4 ADRP X0, 0x1D6C000
	0x023876C8 LDR X0, [X0 + 0xE18]
	0x023876CC BL 0x1C16CF4
	0x023876D0 MOVZ W8, 0x1
	0x023876D4 STRB W8, [X20 + 0x92D]
	0x023876D8 LDR X8, [X19 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+24], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x023876DC LDR X8, [X8 + 0xC0]
	0x023876E0 LDR X9, [X8 + 0x10]
	0x023876E4 LDR W19, [X9 + 0xFC]
	0x023876E8 ADD X9, X31, 0x0
	0x023876EC ADD X10, X19, 0xF
	0x023876F0 AND X10, X10, 0x1FFFFFFFF
	0x023876F4 SUB X20, X9, X10

ISIL:
	001 Move W8, [X0+16]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Add W31, W8, 3
	004 Call 0x23879D4, X0
	005 Return 
	006 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x023876F8 ADD X31, X20, 0x0
	0x023876FC SUB X9, X29, 0x18
	0x02387700 SUB X10, X29, 0x10
	0x02387704 STP X31, X9, [X29 - 0x30]
	0x02387708 STUR X10, [X29 - 0x20]
	0x0238770C LDR X8, [X8]
	0x02387710 LDR X1, [X8 + 0x80]
	0x02387714 MOV X0, X21
	0x02387718 BL 0x1C16D18
	0x0238771C LDR W8, [X0]
	0x02387720 CBZ W8, 0x238775C
	0x02387724 CMP W8, 0x1
	0x02387728 B.NE 0x2387ABC
	0x0238772C LDP X8, X22, [X29 - 0x18]
	0x02387730 LDR X8, [X8 + 0x20]
	0x02387734 LDR X8, [X8 + 0xC0]
	0x02387738 LDR X8, [X8]
	0x0238773C LDR X21, [X8 + 0x80]
	0x02387740 MOVZ W1, 0x4
	0x02387744 MOV X0, X21
	0x02387748 BL 0x1C16D14
	0x0238774C MOV X0, X22
	0x02387750 MOV X1, X21
	0x02387754 BL 0x1C16D18
	0x02387758 B 0x2387878
	0x0238775C LDP X8, X22, [X29 - 0x18]
	0x02387760 LDR X8, [X8 + 0x20]
	0x02387764 LDR X8, [X8 + 0xC0]
	0x02387768 LDR X8, [X8]
	0x0238776C LDR X21, [X8 + 0x80]
	0x02387770 MOVZ W1, 0x4
	0x02387774 MOV X0, X21
	0x02387778 BL 0x1C16D14
	0x0238777C MOV X0, X22
	0x02387780 MOV X1, X21
	0x02387784 BL 0x1C16D18
	0x02387788 MOVN W8, 0x0
	0x0238778C STR W8, [X0]
	0x02387790 LDP X8, X0, [X29 - 0x18]
	0x02387794 LDR X8, [X8 + 0x20]
	0x02387798 LDR X8, [X8 + 0xC0]
	0x0238779C LDR X8, [X8]
	0x023877A0 LDR X8, [X8 + 0x80]
	0x023877A4 ADD X1, X8, 0x60
	0x023877A8 BL 0x1C16D18
	0x023877AC LDR X21, [X0]
	0x023877B0 CBZ X21, 0x2387A78
	0x023877B4 ADRP X10, 0x1D74000
	0x023877B8 LDR X8, [X21]
	0x023877BC LDR X10, [X10 + 0xDB8]
	0x023877C0 LDRH W9, [X8 + 0x12E]
	0x023877C4 LDR X1, [X10]
	0x023877C8 CBZ X9, 0x23877EC
	0x023877CC LDR X10, [X8 + 0xB0]
	0x023877D0 ADD X10, X10, 0x8
	0x023877D4 LDUR X11, [X10 - 0x8]
	0x023877D8 CMP X11, X1
	0x023877DC B.EQ 0x23877FC
	0x023877E0 SUBS X9, X9, 0x1
	0x023877E4 ADD X10, X10, 0x10
	0x023877E8 B.NE 0x23877D4
	0x023877EC MOV X0, X21
	0x023877F0 MOV W2, W31
	0x023877F4 BL 0x1C5C788
	0x023877F8 B 0x2387808
	0x023877FC LDRSW X9, [X10]
	0x02387800 ADD X8, X8, X9, 0x4, LSL
	0x02387804 ADD X0, X8, 0x138
	0x02387808 LDP X8, X1, [X0]
	0x0238780C MOV X0, X21
	0x02387810 BLR X8
	0x02387814 LDP X8, X23, [X29 - 0x18]
	0x02387818 MOV X21, X0
	0x0238781C LDR X8, [X8 + 0x20]
	0x02387820 LDR X8, [X8 + 0xC0]
	0x02387824 LDR X8, [X8]
	0x02387828 LDR X8, [X8 + 0x80]
	0x0238782C ADD X22, X8, 0xA0
	0x02387830 MOVZ W1, 0x8
	0x02387834 MOV X0, X22
	0x02387838 BL 0x1C16D14
	0x0238783C MOV X0, X23
	0x02387840 MOV X1, X22
	0x02387844 BL 0x1C16D18
	0x02387848 STR X21, [X0]
	0x0238784C LDP X8, X22, [X29 - 0x18]
	0x02387850 LDR X8, [X8 + 0x20]
	0x02387854 LDR X8, [X8 + 0xC0]
	0x02387858 LDR X8, [X8]
	0x0238785C LDR X21, [X8 + 0x80]
	0x02387860 MOVZ W1, 0x4
	0x02387864 MOV X0, X21
	0x02387868 BL 0x1C16D14
	0x0238786C MOV X0, X22
	0x02387870 MOV X1, X21
	0x02387874 BL 0x1C16D18
	0x02387878 MOVN W8, 0x2
	0x0238787C STR W8, [X0]
	0x02387880 LDP X8, X0, [X29 - 0x18]
	0x02387884 LDR X8, [X8 + 0x20]
	0x02387888 LDR X8, [X8 + 0xC0]
	0x0238788C LDR X8, [X8]
	0x02387890 LDR X8, [X8 + 0x80]
	0x02387894 ADD X1, X8, 0xA0
	0x02387898 BL 0x1C16D18
	0x0238789C LDR X21, [X0]
	0x023878A0 CBZ X21, 0x2387A74
	0x023878A4 ADRP X22, 0x1D6C000
	0x023878A8 LDR X8, [X21]
	0x023878AC LDR X22, [X22 + 0xE18]
	0x023878B0 LDRH W9, [X8 + 0x12E]
	0x023878B4 LDR X1, [X22]
	0x023878B8 CBZ X9, 0x23878DC
	0x023878BC LDR X10, [X8 + 0xB0]
	0x023878C0 ADD X10, X10, 0x8
	0x023878C4 LDUR X11, [X10 - 0x8]
	0x023878C8 CMP X11, X1
	0x023878CC B.EQ 0x23878EC
	0x023878D0 SUBS X9, X9, 0x1
	0x023878D4 ADD X10, X10, 0x10
	0x023878D8 B.NE 0x23878C4
	0x023878DC MOV X0, X21
	0x023878E0 MOV W2, W31
	0x023878E4 BL 0x1C5C788
	0x023878E8 B 0x23878F8
	0x023878EC LDRSW X9, [X10]
	0x023878F0 ADD X8, X8, X9, 0x4, LSL
	0x023878F4 ADD X0, X8, 0x138
	0x023878F8 LDP X8, X1, [X0]
	0x023878FC MOV X0, X21
	0x02387900 BLR X8
	0x02387904 TBZ X0, 0x0, 0x238796C
	0x02387908 LDP X8, X0, [X29 - 0x18]
	0x0238790C LDR X8, [X8 + 0x20]
	0x02387910 LDR X8, [X8 + 0xC0]
	0x02387914 LDR X8, [X8]
	0x02387918 LDR X8, [X8 + 0x80]
	0x0238791C ADD X1, X8, 0xA0
	0x02387920 BL 0x1C16D18
	0x02387924 LDR X21, [X0]
	0x02387928 CBZ X21, 0x2387A7C
	0x0238792C LDR X8, [X21]
	0x02387930 LDR X1, [X22]
	0x02387934 LDRH W9, [X8 + 0x12E]
	0x02387938 CBZ X9, 0x238795C
	0x0238793C LDR X10, [X8 + 0xB0]
	0x02387940 ADD X10, X10, 0x8
	0x02387944 LDUR X11, [X10 - 0x8]
	0x02387948 CMP X11, X1
	0x0238794C B.EQ 0x23879C4
	0x02387950 SUBS X9, X9, 0x1
	0x02387954 ADD X10, X10, 0x10
	0x02387958 B.NE 0x2387944
	0x0238795C MOVZ W2, 0x1
	0x02387960 MOV X0, X21
	0x02387964 BL 0x1C5C788
	0x02387968 B 0x23879D4
	0x0238796C LDP X8, X0, [X29 - 0x18]
	0x02387970 LDR X8, [X8 + 0x20]
	0x02387974 LDR X8, [X8 + 0xC0]
	0x02387978 LDR X1, [X8 + 0x8]
	0x0238797C LDR X8, [X1]
	0x02387980 BLR X8
	0x02387984 LDP X8, X20, [X29 - 0x18]
	0x02387988 LDR X8, [X8 + 0x20]
	0x0238798C LDR X8, [X8 + 0xC0]
	0x02387990 LDR X8, [X8]
	0x02387994 LDR X8, [X8 + 0x80]
	0x02387998 ADD X19, X8, 0xA0
	0x0238799C MOVZ W1, 0x8
	0x023879A0 MOV X0, X19
	0x023879A4 BL 0x1C16D14
	0x023879A8 MOV X0, X20
	0x023879AC MOV X1, X19
	0x023879B0 BL 0x1C16D18
	0x023879B4 MOV X8, X0
	0x023879B8 MOV W0, W31
	0x023879BC STR X31, [X8]
	0x023879C0 B 0x2387AC0
	0x023879C4 LDR W9, [X10]
	0x023879C8 ADD W9, W9, 0x1
	0x023879CC ADD X8, X8, W9, 0x4, SXTW
	0x023879D0 ADD X0, X8, 0x138

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X0
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X19, 0x2053000
	007 Move W8, [X19+2343]
	008 Move X20, X0
	009 Move [X31+24], X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x1D75000
	015 Move X0, [X0+3512]
	016 Call 0x1C17CF4
	017 Move X0, 0x1D6D000
	018 Move X0, [X0+3608]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+2343], W8
	022 Add X8, X31, 40
	023 Add X9, X31, 24
	024 Move [X31+8], X8
	025 Move [X31+16], X9
	026 Move W8, [X20+16]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Compare W8, 0
	029 JumpIfNotEqual {171}
	030 Move X19, [X20+32]
	031 Move TEMP, 0
	032 Not TEMP
	033 Move W8, TEMP
	034 Move [X20+16], W8
	035 Compare X19, 0
	036 JumpIfEqual {159}
	037 Move X10, 0x1D75000
	038 Move X8, [X19]
	039 Move X10, [X10+3512]
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Move X1, [X10]
	042 Compare X9, 0
	043 JumpIfEqual {50}
	044 Move X10, [X8+176]
	045 Add X10, X10, 8
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract X9, X9, 1
	049 Add X10, X10, 16
	050 Move X0, X19
	051 Move W2, W31
	052 Call 0x1C5D788
	053 Move X19, [X20+48]
	054 Move TEMP, 2
	055 Not TEMP
	056 Move W8, TEMP
	057 Move [X20+16], W8
	058 NotImplemented "Instruction LDRSW not yet implemented."
	059 Add X8, X8, X9
	060 Add X0, X8, 312
	061 Move X8, [X0]
	062 Move X1, [X0+8]
	063 Move X0, X19
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X8, [X31+40]
	066 Move TEMP, 2
	067 Not TEMP
	068 Move W9, TEMP
	069 Move X19, X0
	070 Move [X8+48], X0
	071 Move [X8+16], W9
	072 Compare X19, 0
	073 JumpIfEqual {158}
	074 Move X20, 0x1D6D000
	075 Move X8, [X19]
	076 Move X20, [X20+3608]
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Move X1, [X20]
	079 Compare X9, 0
	080 JumpIfEqual {87}
	081 Move X10, [X8+176]
	082 Add X10, X10, 8
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Subtract X9, X9, 1
	086 Add X10, X10, 16
	087 Move X0, X19
	088 Move W2, W31
	089 Call 0x1C5D788
	090 NotImplemented "Instruction LDRSW not yet implemented."
	091 Add X8, X8, X9
	092 Add X0, X8, 312
	093 Move X8, [X0]
	094 Move X1, [X0+8]
	095 Move X0, X19
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move W8, W0
	098 Move X0, [X31+40]
	099 Move TEMP, X8
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {120}
	103 Move X19, [X0+48]
	104 Compare X19, 0
	105 JumpIfEqual {160}
	106 Move X8, [X19]
	107 Move X1, [X20]
	108 NotImplemented "Instruction LDRH not yet implemented."
	109 Compare X9, 0
	110 JumpIfEqual {117}
	111 Move X10, [X8+176]
	112 Add X10, X10, 8
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Subtract X9, X9, 1
	116 Add X10, X10, 16
	117 Move W2, 1
	118 Move X0, X19
	119 Call 0x1C5D788
	120 Call 0x23879D4, X0
	121 Move X8, [X31+40]
	122 Move W0, W31
	123 Move [X8+48], X31
	124 Move W9, [X10]
	125 Add W9, W9, 1
	126 Add X8, X8, W9
	127 Add X0, X8, 312
	128 Move X8, [X0]
	129 Move X1, [X0+8]
	130 Move X0, X19
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move X8, [X31+24]
	133 Move X19, X0
	134 Move X8, [X8+32]
	135 Move X8, [X8+192]
	136 Move X1, [X8+16]
	137 Move W8, [X1+309]
	138 Move TEMP, X8
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfEqual {145}
	142 Move X0, X1
	143 Call 0x1C5D684
	144 Move X1, X0
	145 Compare X19, 0
	146 JumpIfEqual {161}
	147 Move X8, [X19]
	148 Move X9, [X1+64]
	149 Move X8, [X8+64]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X0, X19
	152 Call 0x1C17E08
	153 Move W8, [X0]
	154 Move X9, [X31+40]
	155 Move W0, 1
	156 Move [X9+16], W0
	157 Move [X9+20], W8
	158 Call 0x1C17F20
	159 Call 0x1C17F20
	160 Call 0x1C17F20
	161 Call 0x1C17F20
	162 Move X0, X19
	163 Call 0x1C181E0
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Call 0x3EB2AD0
	166 Move X19, [X0]
	167 Move [X31], X19
	168 Call 0x3EB2AE0
	169 Compare X19, 0
	170 JumpIfNotEqual {177}
	171 Move W0, W31
	172 Move X20, [X31+48]
	173 Move X19, [X31+56]
	174 Move X30, [X31+32]
	175 Add X31, X31, 64
	176 Return X0
	177 Add X8, X31, 0
	178 Add X0, X8, 8
	179 Call 0x199EC04
	180 Move X0, X19
	181 Call 0x1C17F18
	182 Compare X19, 0
	183 JumpIfNotEqual {185}
	184 Call 0x1D2D690
	185 Move X0, [X31+40]
	186 Move W8, [X0+16]
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Add W31, W8, 3
	189 Call 0x23879D4, X0
	190 Move X0, X19
	191 Call 0x1C17F18
	192 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x023879D4 LDP X8, X1, [X0]
	0x023879D8 MOV X0, X21
	0x023879DC BLR X8
	0x023879E0 LDUR X8, [X29 - 0x18]
	0x023879E4 MOV X21, X0
	0x023879E8 LDR X8, [X8 + 0x20]
	0x023879EC LDR X8, [X8 + 0xC0]
	0x023879F0 LDR X1, [X8 + 0x10]
	0x023879F4 LDRB W8, [X1 + 0x135]
	0x023879F8 TBNZ X8, 0x0, 0x2387A08
	0x023879FC MOV X0, X1
	0x02387A00 BL 0x1C5C684
	0x02387A04 MOV X1, X0
	0x02387A08 MOV X0, X21
	0x02387A0C MOV X2, X20
	0x02387A10 BL 0x1C16E10
	0x02387A14 MOV X2, X0
	0x02387A18 LDP X8, X0, [X29 - 0x18]
	0x02387A1C LDR X8, [X8 + 0x20]
	0x02387A20 LDR X8, [X8 + 0xC0]
	0x02387A24 LDR X8, [X8]
	0x02387A28 LDR X8, [X8 + 0x80]
	0x02387A2C ADD X1, X8, 0x20
	0x02387A30 MOV W3, W19
	0x02387A34 BL 0x1C16D1C
	0x02387A38 LDP X8, X20, [X29 - 0x18]
	0x02387A3C LDR X8, [X8 + 0x20]
	0x02387A40 LDR X8, [X8 + 0xC0]
	0x02387A44 LDR X8, [X8]
	0x02387A48 LDR X19, [X8 + 0x80]
	0x02387A4C MOVZ W1, 0x4
	0x02387A50 MOV X0, X19
	0x02387A54 BL 0x1C16D14
	0x02387A58 MOV X0, X20
	0x02387A5C MOV X1, X19
	0x02387A60 BL 0x1C16D18
	0x02387A64 MOV X8, X0
	0x02387A68 MOVZ W0, 0x1
	0x02387A6C STR W0, [X8]
	0x02387A70 B 0x2387AC0
	0x02387A74 BL 0x1C16F20
	0x02387A78 BL 0x1C16F20
	0x02387A7C BL 0x1C16F20
	0x02387A80 B 0x2387AA0
	0x02387A84 B 0x2387AA0
	0x02387A88 B 0x2387AA0
	0x02387A8C B 0x2387AA0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2053000
	006 Move X20, 0x1D6D000
	007 Move W8, [X21+2344]
	008 Move X20, [X20+3584]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x1D6D000
	015 Move X0, [X0+3584]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2344], W8
	019 Move TEMP, 0
	020 Not TEMP
	021 Move W8, TEMP
	022 Move [X19+16], W8
	023 Move X0, [X19+48]
	024 Move X1, [X20]
	025 Call 0x1C17E00
	026 Compare X0, 0
	027 JumpIfEqual {43}
	028 Move X8, [X0]
	029 Move X1, [X20]
	030 Move X19, X0
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Compare X9, 0
	033 JumpIfEqual {40}
	034 Move X10, [X8+176]
	035 Add X10, X10, 8
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Subtract X9, X9, 1
	039 Add X10, X10, 16
	040 Move X0, X19
	041 Move W2, W31
	042 Call 0x1C5D788
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return 
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Add X8, X8, X9
	050 Add X0, X8, 312
	051 Move X2, [X0]
	052 Move X1, [X0+8]
	053 Move X0, X19
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 CallNoReturn X2

Method: TResult System.Collections.Generic.IEnumerator<TResult>.get_Current()

Disassembly:
	0x02387A90 B 0x2387AA0
	0x02387A94 B 0x2387AA0

ISIL:
	001 Move W0, [X0+20]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x02387A98 B 0x2387AA0
	0x02387A9C B 0x2387AA0
	0x02387AA0 CMP W1, 0x1
	0x02387AA4 B.NE 0x2387B04
	0x02387AA8 BL 0x3EB1AD0
	0x02387AAC LDR X19, [X0]
	0x02387AB0 STUR X19, [X29 - 0x30]
	0x02387AB4 BL 0x3EB1AE0
	0x02387AB8 CBNZ X19, 0x2387AEC
	0x02387ABC MOV W0, W31
	0x02387AC0 LDR X8, [X24 + 0x28]
	0x02387AC4 LDUR X9, [X29 - 0x8]
	0x02387AC8 CMP X8, X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1D6D000
	005 Move X0, [X0+2880]
	006 Move X19, X1
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X1, X31
	010 Move X20, X0
	011 Call NotSupportedException..ctor, X0
	012 Move X0, X20
	013 Move X1, X19
	014 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x02387ACC B.NE 0x2387AE8
	0x02387AD0 ADD X31, X29, 0x0
	0x02387AD4 LDP X20, X19, [X31 + 0x30]
	0x02387AD8 LDP X22, X21, [X31 + 0x20]
	0x02387ADC LDP X24, X23, [X31 + 0x10]
	0x02387AE0 LDP X29, X30, [X31], #0x40
	0x02387AE4 RET
	0x02387AE8 BL 0x3EB1B20
	0x02387AEC SUB X8, X29, 0x30
	0x02387AF0 ADD X0, X8, 0x8

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+20]
	003 Move [X31+12], W8
	004 Move X8, [X1+32]
	005 Add X1, X31, 12
	006 Move X8, [X8+192]
	007 Move X0, [X8+16]
	008 Call 0x1C17E04
	009 Move X30, [X31+16]
	010 Return X0

Method: System.Collections.Generic.IEnumerator`1<TResult> System.Collections.Generic.IEnumerable<TResult>.GetEnumerator()

Disassembly:
	0x02387AF4 BL 0x199DC64
	0x02387AF8 MOV X0, X19
	0x02387AFC BL 0x1C16F18
	0x02387B00 CBNZ X19, 0x2387B08
	0x02387B04 BL 0x1D2C690
	0x02387B08 LDP X8, X0, [X29 - 0x18]
	0x02387B0C LDR X8, [X8 + 0x20]
	0x02387B10 LDR X8, [X8 + 0xC0]
	0x02387B14 LDR X1, [X8 + 0x18]
	0x02387B18 LDR X8, [X1]
	0x02387B1C BLR X8
	0x02387B20 MOV X0, X19
	0x02387B24 BL 0x1C16F18
	0x02387B28 BL 0x1990590
	0x02387B2C STR X30, [X31 - 0x30]!
	0x02387B30 STP X22, X21, [X31 + 0x10]
	0x02387B34 STP X20, X19, [X31 + 0x20]
	0x02387B38 ADRP X21, 0x2052000
	0x02387B3C ADRP X22, 0x1D6C000
	0x02387B40 LDRB W8, [X21 + 0x92E]
	0x02387B44 LDR X22, [X22 + 0xE00]
	0x02387B48 MOV X20, X1
	0x02387B4C MOV X19, X0
	0x02387B50 TBNZ X8, 0x0, 0x2387B68
	0x02387B54 ADRP X0, 0x1D6C000
	0x02387B58 LDR X0, [X0 + 0xE00]
	0x02387B5C BL 0x1C16CF4
	0x02387B60 MOVZ W8, 0x1
	0x02387B64 STRB W8, [X21 + 0x92E]
	0x02387B68 LDR X8, [X20 + 0x20]
	0x02387B6C MOVZ W1, 0x4
	0x02387B70 LDR X8, [X8 + 0xC0]
	0x02387B74 LDR X8, [X8]
	0x02387B78 LDR X21, [X8 + 0x80]
	0x02387B7C MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+16]
	006 Move X19, X0
	007 Move X20, X1
	008 Add W31, W8, 2
	009 Move W21, [X19+24]
	010 Move X0, X31
	011 Call Environment.get_CurrentManagedThreadId
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move [X19+16], W31
	014 Move X20, X19
	015 Move X8, [X20+32]
	016 Move X8, [X8+192]
	017 Move X0, [X8]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X20, X0
	027 Call Object..ctor, X0
	028 Move X0, X31
	029 Move [X20+16], W31
	030 Call Environment.get_CurrentManagedThreadId
	031 Move [X20+24], W0
	032 Move X8, [X19+40]
	033 Move X0, X20
	034 Move [X20+32], X8
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x02387B80 BL 0x1C16D14
	0x02387B84 MOV X0, X19
	0x02387B88 MOV X1, X21
	0x02387B8C BL 0x1C16D18

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+48]
	004 Call 0x2387AF4, X0
	005 Return X0

