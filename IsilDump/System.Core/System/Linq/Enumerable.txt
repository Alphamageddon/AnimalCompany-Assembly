Type: System.Linq.Enumerable

Method: System.Collections.Generic.IEnumerable`1<TSource> Where(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource, System.Boolean> predicate)

Disassembly:
	0x021D8FCC LDRB W10, [X1 + 0x130]
	0x021D8FD0 CMP W9, W10
	0x021D8FD4 B.CC 0x21D90B0
	0x021D8FD8 LDR X9, [X8 + 0xC8]
	0x021D8FDC ADD X9, X9, X10, 0x3, LSL
	0x021D8FE0 LDUR X9, [X9 - 0x8]
	0x021D8FE4 CMP X9, X1
	0x021D8FE8 B.NE 0x21D90B0
	0x021D8FEC LDR X3, [X8 + 0x228]
	0x021D8FF0 LDR X2, [X8 + 0x230]
	0x021D8FF4 MOV X0, X20
	0x021D8FF8 MOV X1, X19
	0x021D8FFC LDP X20, X19, [X31 + 0x20]
	0x021D9000 LDP X22, X21, [X31 + 0x10]
	0x021D9004 LDP X30, X23, [X31], #0x30
	0x021D9008 BR X3
	0x021D900C LDR X8, [X21 + 0x38]
	0x021D9010 LDR X0, [X8 + 0x40]
	0x021D9014 LDRB W8, [X0 + 0x135]
	0x021D9018 TBNZ X8, 0x0, 0x21D9020
	0x021D901C BL 0x1C5C684
	0x021D9020 BL 0x1C16F10
	0x021D9024 LDR X8, [X21 + 0x38]
	0x021D9028 MOV X22, X0
	0x021D902C LDR X1, [X8 + 0x38]
	0x021D9030 LDRB W8, [X1 + 0x135]
	0x021D9034 TBNZ X8, 0x0, 0x21D9044
	0x021D9038 MOV X0, X1
	0x021D903C BL 0x1C5C684
	0x021D9040 MOV X1, X0
	0x021D9044 LDR X8, [X20]
	0x021D9048 LDRB W9, [X1 + 0x130]
	0x021D904C LDRB W10, [X8 + 0x130]
	0x021D9050 CMP W10, W9
	0x021D9054 B.CC 0x21D90B0
	0x021D9058 LDR X8, [X8 + 0xC8]
	0x021D905C ADD X8, X8, X9, 0x3, LSL
	0x021D9060 LDUR X8, [X8 - 0x8]
	0x021D9064 CMP X8, X1
	0x021D9068 B.NE 0x21D90B0
	0x021D906C LDR X8, [X21 + 0x38]
	0x021D9070 MOV X0, X22
	0x021D9074 MOV X1, X20
	0x021D9078 MOV X2, X19
	0x021D907C LDR X3, [X8 + 0x48]
	0x021D9080 BL 0x285ADE4
	0x021D9084 B 0x21D8F50
	0x021D9088 ADRP X0, 0x1F25000
	0x021D908C LDR X0, [X0 + 0x580]
	0x021D9090 B 0x21D909C
	0x021D9094 ADRP X0, 0x1F42000
	0x021D9098 LDR X0, [X0 + 0x8F0]
	0x021D909C BL 0x1C16D08
	0x021D90A0 MOV X1, X31
	0x021D90A4 BL 0x35DEB28
	0x021D90A8 MOV X1, X21
	0x021D90AC BL 0x1C16DEC
	0x021D90B0 MOV X0, X20
	0x021D90B4 BL 0x1C171E0
	0x021D90B8 MOV X0, X20
	0x021D90BC MOV X1, X23
	0x021D90C0 BL 0x1C171E0
	0x021D90C4 STP X30, X23, [X31 - 0x30]!
	0x021D90C8 STP X22, X21, [X31 + 0x10]
	0x021D90CC STP X20, X19, [X31 + 0x20]
	0x021D90D0 LDR X8, [X2 + 0x38]
	0x021D90D4 MOV X21, X2
	0x021D90D8 MOV X19, X1
	0x021D90DC MOV X20, X0
	0x021D90E0 CBNZ X8, 0x21D90EC
	0x021D90E4 MOV X0, X21
	0x021D90E8 BL 0x1C5C6E0
	0x021D90EC CBZ X20, 0x21D935C
	0x021D90F0 CBZ X19, 0x21D9368
	0x021D90F4 LDR X8, [X21 + 0x38]
	0x021D90F8 LDR X0, [X8 + 0x10]
	0x021D90FC LDRB W8, [X0 + 0x135]
	0x021D9100 TBNZ X8, 0x0, 0x21D9108
	0x021D9104 BL 0x1C5C684
	0x021D9108 LDR X8, [X20]
	0x021D910C LDRB W10, [X0 + 0x130]
	0x021D9110 LDRB W9, [X8 + 0x130]
	0x021D9114 CMP W9, W10
	0x021D9118 B.CC 0x21D9130
	0x021D911C LDR X11, [X8 + 0xC8]
	0x021D9120 ADD X10, X11, X10, 0x3, LSL
	0x021D9124 LDUR X10, [X10 - 0x8]
	0x021D9128 CMP X10, X0
	0x021D912C B.EQ 0x21D9238
	0x021D9130 LDR X8, [X21 + 0x38]
	0x021D9134 LDR X1, [X8 + 0x20]
	0x021D9138 LDRB W8, [X1 + 0x135]
	0x021D913C TBNZ X8, 0x0, 0x21D914C
	0x021D9140 MOV X0, X1
	0x021D9144 BL 0x1C5C684
	0x021D9148 MOV X1, X0
	0x021D914C MOV X0, X20
	0x021D9150 BL 0x1C16E00
	0x021D9154 LDR X8, [X21 + 0x38]
	0x021D9158 CBZ X0, 0x21D91BC
	0x021D915C LDR X0, [X8 + 0x28]
	0x021D9160 LDRB W8, [X0 + 0x135]
	0x021D9164 TBNZ X8, 0x0, 0x21D916C
	0x021D9168 BL 0x1C5C684
	0x021D916C BL 0x1C16F10
	0x021D9170 LDR X8, [X21 + 0x38]
	0x021D9174 MOV X22, X0
	0x021D9178 LDR X23, [X8 + 0x20]
	0x021D917C LDRB W8, [X23 + 0x135]
	0x021D9180 TBNZ X8, 0x0, 0x21D9190
	0x021D9184 MOV X0, X23
	0x021D9188 BL 0x1C5C684
	0x021D918C MOV X23, X0
	0x021D9190 MOV X0, X20
	0x021D9194 MOV X1, X23
	0x021D9198 BL 0x1C16E00
	0x021D919C CBZ X0, 0x21D938C
	0x021D91A0 LDR X8, [X21 + 0x38]
	0x021D91A4 MOV X1, X0
	0x021D91A8 MOV X0, X22
	0x021D91AC MOV X2, X19
	0x021D91B0 LDR X3, [X8 + 0x30]
	0x021D91B4 BL 0x2852878
	0x021D91B8 B 0x21D9224
	0x021D91BC LDR X0, [X8 + 0x38]
	0x021D91C0 LDRB W8, [X0 + 0x135]
	0x021D91C4 TBNZ X8, 0x0, 0x21D91CC
	0x021D91C8 BL 0x1C5C684
	0x021D91CC LDR X8, [X20]
	0x021D91D0 LDRB W9, [X0 + 0x130]
	0x021D91D4 LDRB W10, [X8 + 0x130]
	0x021D91D8 CMP W10, W9
	0x021D91DC B.CC 0x21D91F4
	0x021D91E0 LDR X8, [X8 + 0xC8]
	0x021D91E4 ADD X8, X8, X9, 0x3, LSL
	0x021D91E8 LDUR X8, [X8 - 0x8]
	0x021D91EC CMP X8, X0
	0x021D91F0 B.EQ 0x21D92E0
	0x021D91F4 LDR X8, [X21 + 0x38]
	0x021D91F8 LDR X0, [X8 + 0x50]
	0x021D91FC LDRB W8, [X0 + 0x135]
	0x021D9200 TBNZ X8, 0x0, 0x21D9208
	0x021D9204 BL 0x1C5C684
	0x021D9208 BL 0x1C16F10
	0x021D920C LDR X8, [X21 + 0x38]
	0x021D9210 MOV X1, X20
	0x021D9214 MOV X2, X19
	0x021D9218 MOV X22, X0
	0x021D921C LDR X3, [X8 + 0x58]
	0x021D9220 BL 0x2855A20
	0x021D9224 MOV X0, X22
	0x021D9228 LDP X20, X19, [X31 + 0x20]
	0x021D922C LDP X22, X21, [X31 + 0x10]
	0x021D9230 LDP X30, X23, [X31], #0x30
	0x021D9234 RET
	0x021D9238 LDR X10, [X21 + 0x38]
	0x021D923C LDR X1, [X10 + 0x10]
	0x021D9240 LDRB W10, [X1 + 0x135]
	0x021D9244 TBNZ X10, 0x0, 0x21D925C
	0x021D9248 MOV X0, X1
	0x021D924C BL 0x1C5C684
	0x021D9250 LDR X8, [X20]
	0x021D9254 MOV X1, X0
	0x021D9258 LDRB W9, [X8 + 0x130]
	0x021D925C LDRB W10, [X1 + 0x130]
	0x021D9260 CMP W9, W10
	0x021D9264 B.CC 0x21D9384
	0x021D9268 LDR X11, [X8 + 0xC8]
	0x021D926C ADD X10, X11, X10, 0x3, LSL
	0x021D9270 LDUR X10, [X10 - 0x8]
	0x021D9274 CMP X10, X1
	0x021D9278 B.NE 0x21D9384
	0x021D927C LDR X10, [X21 + 0x38]
	0x021D9280 LDR X1, [X10 + 0x10]
	0x021D9284 LDRB W10, [X1 + 0x135]
	0x021D9288 TBNZ X10, 0x0, 0x21D92A0
	0x021D928C MOV X0, X1
	0x021D9290 BL 0x1C5C684
	0x021D9294 LDR X8, [X20]
	0x021D9298 MOV X1, X0
	0x021D929C LDRB W9, [X8 + 0x130]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X2+56]
	008 Move X21, X2
	009 Move X19, X1
	010 Move X20, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {15}
	013 Move X0, X21
	014 Call 0x1C5D6E0
	015 Compare X20, 0
	016 JumpIfEqual {199}
	017 Compare X19, 0
	018 JumpIfEqual {201}
	019 Move X8, [X21+56]
	020 Move X0, [X8+16]
	021 Move W8, [X0+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {27}
	026 Call 0x1C5D684
	027 Move X8, [X20]
	028 Move W10, [X0+304]
	029 Move W9, [X8+304]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X11, [X8+200]
	032 Add X10, X11, X10
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X8, [X21+56]
	036 Move X1, [X8+32]
	037 Move W8, [X1+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {45}
	042 Move X0, X1
	043 Call 0x1C5D684
	044 Move X1, X0
	045 Move X0, X20
	046 Call 0x1C17E00
	047 Move X8, [X21+56]
	048 Compare X0, 0
	049 JumpIfEqual {80}
	050 Move X0, [X8+40]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Call 0x1C17F10
	058 Move X8, [X21+56]
	059 Move X22, X0
	060 Move X23, [X8+32]
	061 Move W8, [X23+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {69}
	066 Move X0, X23
	067 Call 0x1C5D684
	068 Move X23, X0
	069 Move X0, X20
	070 Move X1, X23
	071 Call 0x1C17E00
	072 Compare X0, 0
	073 JumpIfEqual {210}
	074 Move X8, [X21+56]
	075 Move X1, X0
	076 Move X0, X22
	077 Move X2, X19
	078 Move X3, [X8+48]
	079 Call 0x2852E2C, X0, X1, X2
	080 Move X0, [X8+56]
	081 Move W8, [X0+309]
	082 Move TEMP, X8
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {87}
	086 Call 0x1C5D684
	087 Move X8, [X20]
	088 Move W9, [X0+304]
	089 Move W10, [X8+304]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X8, [X8+200]
	092 Add X8, X8, X9
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X8, [X21+56]
	096 Move X0, [X8+80]
	097 Move W8, [X0+309]
	098 Move TEMP, X8
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfEqual {103}
	102 Call 0x1C5D684
	103 Call 0x1C17F10
	104 Move X8, [X21+56]
	105 Move X1, X20
	106 Move X2, X19
	107 Move X22, X0
	108 Move X3, [X8+88]
	109 Call 0x2854EB8, X0, X1, X2
	110 Move X0, X22
	111 Move X20, [X31+32]
	112 Move X19, [X31+40]
	113 Move X22, [X31+16]
	114 Move X21, [X31+24]
	115 Move X30, [X31+48]
	116 Move X23, [X31+56]
	117 Return X0
	118 Move X10, [X21+56]
	119 Move X1, [X10+16]
	120 Move W10, [X1+309]
	121 Move TEMP, X10
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfEqual {130}
	125 Move X0, X1
	126 Call 0x1C5D684
	127 Move X8, [X20]
	128 Move X1, X0
	129 Move W9, [X8+304]
	130 Move W10, [X1+304]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X11, [X8+200]
	133 Add X10, X11, X10
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X10, [X21+56]
	137 Move X1, [X10+16]
	138 Move W10, [X1+309]
	139 Move TEMP, X10
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfEqual {148}
	143 Move X0, X1
	144 Call 0x1C5D684
	145 Move X8, [X20]
	146 Move X1, X0
	147 Move W9, [X8+304]
	148 Move W10, [X1+304]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move X9, [X8+200]
	151 Add X9, X9, X10
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move X3, [X8+552]
	155 Move X2, [X8+560]
	156 Move X0, X20
	157 Move X1, X19
	158 Move X20, [X31+32]
	159 Move X19, [X31+40]
	160 Move X22, [X31+16]
	161 Move X21, [X31+24]
	162 Move X30, [X31+48]
	163 Move X23, [X31+56]
	164 CallNoReturn X3
	165 Move X8, [X21+56]
	166 Move X0, [X8+64]
	167 Move W8, [X0+309]
	168 Move TEMP, X8
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfEqual {173}
	172 Call 0x1C5D684
	173 Call 0x1C17F10
	174 Move X8, [X21+56]
	175 Move X22, X0
	176 Move X1, [X8+56]
	177 Move W8, [X1+309]
	178 Move TEMP, X8
	179 And TEMP, TEMP, 1
	180 Compare TEMP, 1
	181 JumpIfEqual {185}
	182 Move X0, X1
	183 Call 0x1C5D684
	184 Move X1, X0
	185 Move X8, [X20]
	186 Move W9, [X1+304]
	187 Move W10, [X8+304]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X8, [X8+200]
	190 Add X8, X8, X9
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move X8, [X21+56]
	194 Move X0, X22
	195 Move X1, X20
	196 Move X2, X19
	197 Move X3, [X8+72]
	198 Call 0x285B41C, X0, X1, X2
	199 Move X0, 0x1F26000
	200 Move X0, [X0+1408]
	201 Move X0, 0x1F43000
	202 Move X0, [X0+2288]
	203 Call 0x1C17D08
	204 Move X1, X31
	205 Call Error.ArgumentNull, X0
	206 Move X1, X21
	207 Call 0x1C17DEC
	208 Move X0, X20
	209 Call 0x1C181E0
	210 Move X0, X20
	211 Move X1, X23
	212 Call 0x1C181E0

Method: System.Collections.Generic.IEnumerable`1<TResult> Select(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource, TResult> selector)

Disassembly:
	0x021CB134 LDRB W8, [X0 + 0x135]
	0x021CB138 TBNZ X8, 0x0, 0x21CB140
	0x021CB13C BL 0x1C5C684
	0x021CB140 BL 0x1C16F10
	0x021CB144 LDR X8, [X21 + 0x38]
	0x021CB148 MOV X1, X20
	0x021CB14C MOV X2, X31
	0x021CB150 MOV X3, X19
	0x021CB154 LDR X4, [X8 + 0x68]
	0x021CB158 MOV X22, X0
	0x021CB15C BL 0x286F668
	0x021CB160 MOV X0, X22
	0x021CB164 LDP X20, X19, [X31 + 0x20]
	0x021CB168 LDP X22, X21, [X31 + 0x10]
	0x021CB16C LDP X30, X23, [X31], #0x30
	0x021CB170 RET
	0x021CB174 LDR X10, [X21 + 0x38]
	0x021CB178 LDR X1, [X10 + 0x10]
	0x021CB17C LDRB W10, [X1 + 0x135]
	0x021CB180 TBNZ X10, 0x0, 0x21CB198
	0x021CB184 MOV X0, X1
	0x021CB188 BL 0x1C5C684
	0x021CB18C LDR X8, [X20]
	0x021CB190 MOV X1, X0
	0x021CB194 LDRB W9, [X8 + 0x130]
	0x021CB198 LDRB W10, [X1 + 0x130]
	0x021CB19C CMP W9, W10
	0x021CB1A0 B.CC 0x21CB2D8
	0x021CB1A4 LDR X11, [X8 + 0xC8]
	0x021CB1A8 ADD X10, X11, X10, 0x3, LSL
	0x021CB1AC LDUR X10, [X10 - 0x8]
	0x021CB1B0 CMP X10, X1
	0x021CB1B4 B.NE 0x21CB2D8
	0x021CB1B8 LDR X10, [X21 + 0x38]
	0x021CB1BC LDP X1, X21, [X10 + 0x10]
	0x021CB1C0 LDRB W11, [X1 + 0x135]
	0x021CB1C4 TBNZ X11, 0x0, 0x21CB1DC
	0x021CB1C8 MOV X0, X1
	0x021CB1CC BL 0x1C5C684
	0x021CB1D0 LDR X8, [X20]
	0x021CB1D4 MOV X1, X0
	0x021CB1D8 LDRB W9, [X8 + 0x130]
	0x021CB1DC LDRB W10, [X1 + 0x130]
	0x021CB1E0 CMP W9, W10
	0x021CB1E4 B.CC 0x21CB2D8
	0x021CB1E8 LDR X9, [X8 + 0xC8]
	0x021CB1EC ADD X9, X9, X10, 0x3, LSL
	0x021CB1F0 LDUR X9, [X9 - 0x8]
	0x021CB1F4 CMP X9, X1
	0x021CB1F8 B.NE 0x21CB2D8
	0x021CB1FC LDRH W9, [X21 + 0x50]
	0x021CB200 MOV X1, X21
	0x021CB204 ADD X8, X8, X9, 0x4, LSL
	0x021CB208 LDR X0, [X8 + 0x140]
	0x021CB20C BL 0x1C16DF8
	0x021CB210 MOV X2, X0
	0x021CB214 LDR X3, [X0 + 0x8]
	0x021CB218 MOV X0, X20
	0x021CB21C MOV X1, X19
	0x021CB220 LDP X20, X19, [X31 + 0x20]
	0x021CB224 LDP X22, X21, [X31 + 0x10]
	0x021CB228 LDP X30, X23, [X31], #0x30
	0x021CB22C BR X3
	0x021CB230 LDR X8, [X21 + 0x38]
	0x021CB234 LDR X0, [X8 + 0x50]
	0x021CB238 LDRB W8, [X0 + 0x135]
	0x021CB23C TBNZ X8, 0x0, 0x21CB244
	0x021CB240 BL 0x1C5C684
	0x021CB244 BL 0x1C16F10
	0x021CB248 LDR X8, [X21 + 0x38]
	0x021CB24C MOV X22, X0
	0x021CB250 LDR X1, [X8 + 0x48]
	0x021CB254 LDRB W8, [X1 + 0x135]
	0x021CB258 TBNZ X8, 0x0, 0x21CB268
	0x021CB25C MOV X0, X1
	0x021CB260 BL 0x1C5C684
	0x021CB264 MOV X1, X0
	0x021CB268 LDR X8, [X20]
	0x021CB26C LDRB W9, [X1 + 0x130]
	0x021CB270 LDRB W10, [X8 + 0x130]
	0x021CB274 CMP W10, W9
	0x021CB278 B.CC 0x21CB2D8
	0x021CB27C LDR X8, [X8 + 0xC8]
	0x021CB280 ADD X8, X8, X9, 0x3, LSL
	0x021CB284 LDUR X8, [X8 - 0x8]
	0x021CB288 CMP X8, X1
	0x021CB28C B.NE 0x21CB2D8
	0x021CB290 LDR X8, [X21 + 0x38]
	0x021CB294 MOV X0, X22
	0x021CB298 MOV X1, X20
	0x021CB29C MOV X2, X31
	0x021CB2A0 LDR X4, [X8 + 0x58]
	0x021CB2A4 MOV X3, X19
	0x021CB2A8 BL 0x288B2FC
	0x021CB2AC B 0x21CB160
	0x021CB2B0 ADRP X0, 0x1F33000
	0x021CB2B4 LDR X0, [X0 + 0x580]
	0x021CB2B8 B 0x21CB2C4
	0x021CB2BC ADRP X0, 0x1F50000
	0x021CB2C0 LDR X0, [X0 + 0x9D0]
	0x021CB2C4 BL 0x1C16D08
	0x021CB2C8 MOV X1, X31
	0x021CB2CC BL 0x35DEB28
	0x021CB2D0 MOV X1, X21
	0x021CB2D4 BL 0x1C16DEC
	0x021CB2D8 MOV X0, X20
	0x021CB2DC BL 0x1C171E0
	0x021CB2E0 MOV X0, X20
	0x021CB2E4 MOV X1, X23
	0x021CB2E8 BL 0x1C171E0
	0x021CB2EC STP X30, X23, [X31 - 0x30]!
	0x021CB2F0 STP X22, X21, [X31 + 0x10]
	0x021CB2F4 STP X20, X19, [X31 + 0x20]
	0x021CB2F8 LDR X8, [X2 + 0x38]
	0x021CB2FC MOV X21, X2
	0x021CB300 MOV X19, X1
	0x021CB304 MOV X20, X0
	0x021CB308 CBNZ X8, 0x21CB314
	0x021CB30C MOV X0, X21
	0x021CB310 BL 0x1C5C6E0
	0x021CB314 CBZ X20, 0x21CB5A4
	0x021CB318 CBZ X19, 0x21CB5B0
	0x021CB31C LDR X8, [X21 + 0x38]
	0x021CB320 LDR X0, [X8 + 0x10]
	0x021CB324 LDRB W8, [X0 + 0x135]
	0x021CB328 TBNZ X8, 0x0, 0x21CB330
	0x021CB32C BL 0x1C5C684
	0x021CB330 LDR X8, [X20]
	0x021CB334 LDRB W10, [X0 + 0x130]
	0x021CB338 LDRB W9, [X8 + 0x130]
	0x021CB33C CMP W9, W10
	0x021CB340 B.CC 0x21CB358
	0x021CB344 LDR X11, [X8 + 0xC8]
	0x021CB348 ADD X10, X11, X10, 0x3, LSL
	0x021CB34C LDUR X10, [X10 - 0x8]
	0x021CB350 CMP X10, X0
	0x021CB354 B.EQ 0x21CB468
	0x021CB358 LDR X8, [X21 + 0x38]
	0x021CB35C LDR X1, [X8 + 0x28]
	0x021CB360 LDRB W8, [X1 + 0x135]
	0x021CB364 TBNZ X8, 0x0, 0x21CB374
	0x021CB368 MOV X0, X1
	0x021CB36C BL 0x1C5C684
	0x021CB370 MOV X1, X0
	0x021CB374 MOV X0, X20
	0x021CB378 BL 0x1C16E00
	0x021CB37C LDR X8, [X21 + 0x38]
	0x021CB380 CBZ X0, 0x21CB3E8
	0x021CB384 LDR X0, [X8 + 0x30]
	0x021CB388 LDRB W8, [X0 + 0x135]
	0x021CB38C TBNZ X8, 0x0, 0x21CB394
	0x021CB390 BL 0x1C5C684
	0x021CB394 BL 0x1C16F10
	0x021CB398 LDR X8, [X21 + 0x38]
	0x021CB39C MOV X22, X0
	0x021CB3A0 LDR X23, [X8 + 0x28]
	0x021CB3A4 LDRB W8, [X23 + 0x135]
	0x021CB3A8 TBNZ X8, 0x0, 0x21CB3B8
	0x021CB3AC MOV X0, X23
	0x021CB3B0 BL 0x1C5C684
	0x021CB3B4 MOV X23, X0
	0x021CB3B8 MOV X0, X20
	0x021CB3BC MOV X1, X23
	0x021CB3C0 BL 0x1C16E00
	0x021CB3C4 CBZ X0, 0x21CB5D4
	0x021CB3C8 LDR X8, [X21 + 0x38]
	0x021CB3CC MOV X1, X0
	0x021CB3D0 MOV X0, X22
	0x021CB3D4 MOV X2, X31
	0x021CB3D8 LDR X4, [X8 + 0x38]
	0x021CB3DC MOV X3, X19
	0x021CB3E0 BL 0x285F828
	0x021CB3E4 B 0x21CB454
	0x021CB3E8 LDR X0, [X8 + 0x48]
	0x021CB3EC LDRB W8, [X0 + 0x135]
	0x021CB3F0 TBNZ X8, 0x0, 0x21CB3F8
	0x021CB3F4 BL 0x1C5C684
	0x021CB3F8 LDR X8, [X20]
	0x021CB3FC LDRB W9, [X0 + 0x130]
	0x021CB400 LDRB W10, [X8 + 0x130]
	0x021CB404 CMP W10, W9
	0x021CB408 B.CC 0x21CB420
	0x021CB40C LDR X8, [X8 + 0xC8]
	0x021CB410 ADD X8, X8, X9, 0x3, LSL
	0x021CB414 LDUR X8, [X8 - 0x8]
	0x021CB418 CMP X8, X0
	0x021CB41C B.EQ 0x21CB524
	0x021CB420 LDR X8, [X21 + 0x38]
	0x021CB424 LDR X0, [X8 + 0x60]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X2+56]
	008 Move X21, X2
	009 Move X19, X1
	010 Move X20, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {15}
	013 Move X0, X21
	014 Call 0x1C5D6E0
	015 Compare X20, 0
	016 JumpIfEqual {208}
	017 Compare X19, 0
	018 JumpIfEqual {210}
	019 Move X8, [X21+56]
	020 Move X0, [X8+16]
	021 Move W8, [X0+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {27}
	026 Call 0x1C5D684
	027 Move X8, [X20]
	028 Move W10, [X0+304]
	029 Move W9, [X8+304]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X11, [X8+200]
	032 Add X10, X11, X10
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X8, [X21+56]
	036 Move X1, [X8+40]
	037 Move W8, [X1+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {45}
	042 Move X0, X1
	043 Call 0x1C5D684
	044 Move X1, X0
	045 Move X0, X20
	046 Call 0x1C17E00
	047 Move X8, [X21+56]
	048 Compare X0, 0
	049 JumpIfEqual {81}
	050 Move X0, [X8+48]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Call 0x1C17F10
	058 Move X8, [X21+56]
	059 Move X22, X0
	060 Move X23, [X8+40]
	061 Move W8, [X23+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {69}
	066 Move X0, X23
	067 Call 0x1C5D684
	068 Move X23, X0
	069 Move X0, X20
	070 Move X1, X23
	071 Call 0x1C17E00
	072 Compare X0, 0
	073 JumpIfEqual {219}
	074 Move X8, [X21+56]
	075 Move X1, X0
	076 Move X0, X22
	077 Move X2, X31
	078 Move X4, [X8+56]
	079 Move X3, X19
	080 Call WhereSelectArrayIterator`2<KeyValuePair`2<Edge, Object>, Edge>..ctor, X0, X1, X2, X3
	081 Move X0, [X8+72]
	082 Move W8, [X0+309]
	083 Move TEMP, X8
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {88}
	087 Call 0x1C5D684
	088 Move X8, [X20]
	089 Move W9, [X0+304]
	090 Move W10, [X8+304]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X8, [X8+200]
	093 Add X8, X8, X9
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X8, [X21+56]
	097 Move X0, [X8+96]
	098 Move W8, [X0+309]
	099 Move TEMP, X8
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {104}
	103 Call 0x1C5D684
	104 Call 0x1C17F10
	105 Move X8, [X21+56]
	106 Move X1, X20
	107 Move X2, X31
	108 Move X3, X19
	109 Move X4, [X8+104]
	110 Move X22, X0
	111 Call WhereSelectEnumerableIterator`2<KeyValuePair`2<Edge, Object>, Edge>..ctor, X0, X1, X2, X3
	112 Move X0, X22
	113 Move X20, [X31+32]
	114 Move X19, [X31+40]
	115 Move X22, [X31+16]
	116 Move X21, [X31+24]
	117 Move X30, [X31+48]
	118 Move X23, [X31+56]
	119 Return X0
	120 Move X10, [X21+56]
	121 Move X1, [X10+16]
	122 Move W10, [X1+309]
	123 Move TEMP, X10
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfEqual {132}
	127 Move X0, X1
	128 Call 0x1C5D684
	129 Move X8, [X20]
	130 Move X1, X0
	131 Move W9, [X8+304]
	132 Move W10, [X1+304]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X11, [X8+200]
	135 Add X10, X11, X10
	136 NotImplemented "Instruction LDUR not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X10, [X21+56]
	139 Move X1, [X10+16]
	140 Move X21, [X10+24]
	141 Move W11, [X1+309]
	142 Move TEMP, X11
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfEqual {151}
	146 Move X0, X1
	147 Call 0x1C5D684
	148 Move X8, [X20]
	149 Move X1, X0
	150 Move W9, [X8+304]
	151 Move W10, [X1+304]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X9, [X8+200]
	154 Add X9, X9, X10
	155 NotImplemented "Instruction LDUR not yet implemented."
	156 NotImplemented "Instruction CMP not yet implemented."
	157 NotImplemented "Instruction LDRH not yet implemented."
	158 Move X1, X21
	159 Add X8, X8, X9
	160 Move X0, [X8+320]
	161 Call 0x1C17DF8
	162 Move X2, X0
	163 Move X3, [X0+8]
	164 Move X0, X20
	165 Move X1, X19
	166 Move X20, [X31+32]
	167 Move X19, [X31+40]
	168 Move X22, [X31+16]
	169 Move X21, [X31+24]
	170 Move X30, [X31+48]
	171 Move X23, [X31+56]
	172 CallNoReturn X3
	173 Move X8, [X21+56]
	174 Move X0, [X8+80]
	175 Move W8, [X0+309]
	176 Move TEMP, X8
	177 And TEMP, TEMP, 1
	178 Compare TEMP, 1
	179 JumpIfEqual {181}
	180 Call 0x1C5D684
	181 Call 0x1C17F10
	182 Move X8, [X21+56]
	183 Move X22, X0
	184 Move X1, [X8+72]
	185 Move W8, [X1+309]
	186 Move TEMP, X8
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfEqual {193}
	190 Move X0, X1
	191 Call 0x1C5D684
	192 Move X1, X0
	193 Move X8, [X20]
	194 Move W9, [X1+304]
	195 Move W10, [X8+304]
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Move X8, [X8+200]
	198 Add X8, X8, X9
	199 NotImplemented "Instruction LDUR not yet implemented."
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move X8, [X21+56]
	202 Move X0, X22
	203 Move X1, X20
	204 Move X2, X31
	205 Move X4, [X8+88]
	206 Move X3, X19
	207 Call WhereSelectListIterator`2<KeyValuePair`2<Edge, Object>, Edge>..ctor, X0, X1, X2, X3
	208 Move X0, 0x1F34000
	209 Move X0, [X0+1408]
	210 Move X0, 0x1F51000
	211 Move X0, [X0+2512]
	212 Call 0x1C17D08
	213 Move X1, X31
	214 Call Error.ArgumentNull, X0
	215 Move X1, X21
	216 Call 0x1C17DEC
	217 Move X0, X20
	218 Call 0x1C181E0
	219 Move X0, X20
	220 Move X1, X23
	221 Call 0x1C181E0

Method: System.Collections.Generic.IEnumerable`1<TResult> Select(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`3<TSource, System.Int32, TResult> selector)

Disassembly:
	0x021CE42C MOV X0, X20
	0x021CE430 MOV X1, X23
	0x021CE434 BL 0x1C16E00
	0x021CE438 CBZ X0, 0x21CE648
	0x021CE43C LDR X8, [X21 + 0x38]
	0x021CE440 MOV X1, X0
	0x021CE444 MOV X0, X22
	0x021CE448 MOV X2, X31
	0x021CE44C LDR X4, [X8 + 0x38]
	0x021CE450 MOV X3, X19
	0x021CE454 BL 0x28659AC
	0x021CE458 B 0x21CE4C8
	0x021CE45C LDR X0, [X8 + 0x48]
	0x021CE460 LDRB W8, [X0 + 0x135]
	0x021CE464 TBNZ X8, 0x0, 0x21CE46C
	0x021CE468 BL 0x1C5C684
	0x021CE46C LDR X8, [X20]
	0x021CE470 LDRB W9, [X0 + 0x130]
	0x021CE474 LDRB W10, [X8 + 0x130]
	0x021CE478 CMP W10, W9
	0x021CE47C B.CC 0x21CE494
	0x021CE480 LDR X8, [X8 + 0xC8]
	0x021CE484 ADD X8, X8, X9, 0x3, LSL
	0x021CE488 LDUR X8, [X8 - 0x8]
	0x021CE48C CMP X8, X0
	0x021CE490 B.EQ 0x21CE598
	0x021CE494 LDR X8, [X21 + 0x38]
	0x021CE498 LDR X0, [X8 + 0x60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X2
	007 Move X20, X1
	008 Move X21, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X19
	012 Call 0x1C5D6E0
	013 Compare X21, 0
	014 JumpIfEqual {27}
	015 Compare X20, 0
	016 JumpIfEqual {29}
	017 Move X8, [X19+56]
	018 Move X1, X20
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X0, X21
	022 Move X2, [X8+16]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call 0x21D1D4C, X0, X1
	026 Return X0
	027 Move X0, 0x1F31000
	028 Move X0, [X0+1408]
	029 Move X0, 0x1F4E000
	030 Move X0, [X0+2512]
	031 Call 0x1C17D08
	032 Move X1, X31
	033 Call Error.ArgumentNull, X0
	034 Move X1, X19
	035 Call 0x1C17DEC

Method: System.Collections.Generic.IEnumerable`1<TResult> SelectIterator(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`3<TSource, System.Int32, TResult> selector)

Disassembly:
	0x021D1D4C B 0x21D1D5C
	0x021D1D50 LDRSW X9, [X10]
	0x021D1D54 ADD X8, X8, X9, 0x4, LSL
	0x021D1D58 ADD X0, X8, 0x138
	0x021D1D5C LDP X8, X1, [X0]
	0x021D1D60 MOV X0, X19
	0x021D1D64 BLR X8
	0x021D1D68 CBNZ X20, 0x21D1D74
	0x021D1D6C MOV X0, X21
	0x021D1D70 BL 0x1D2C690
	0x021D1D74 MOV X0, X20
	0x021D1D78 BL 0x1C16F18
	0x021D1D7C BL 0x1990590
	0x021D1D80 STP X30, X25, [X31 - 0x40]!
	0x021D1D84 STP X24, X23, [X31 + 0x10]
	0x021D1D88 STP X22, X21, [X31 + 0x20]
	0x021D1D8C STP X20, X19, [X31 + 0x30]
	0x021D1D90 LDR X8, [X3 + 0x38]
	0x021D1D94 MOV X21, X3
	0x021D1D98 MOV X22, X2
	0x021D1D9C MOV X20, X1
	0x021D1DA0 MOV X19, X0
	0x021D1DA4 CBNZ X8, 0x21D1DC8
	0x021D1DA8 ADRP X0, 0x1F22000
	0x021D1DAC LDR X0, [X0 + 0xE00]
	0x021D1DB0 BL 0x1C16CF4
	0x021D1DB4 ADRP X0, 0x1F22000
	0x021D1DB8 LDR X0, [X0 + 0xE18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X21, X2
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {14}
	011 Move X0, X21
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X0, [X8]
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Call 0x1C17F10
	022 Move X8, [X21+56]
	023 Move TEMP, 1
	024 Not TEMP
	025 Move W1, TEMP
	026 Move X21, X0
	027 Move X2, [X8+8]
	028 Call 0x29739B0, X0, X1
	029 Compare X21, 0
	030 JumpIfEqual {39}
	031 Move [X21+48], X20
	032 Move [X21+64], X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X0, X21
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0
	039 Call 0x1C17F20

Method: System.Func`2<TSource, System.Boolean> CombinePredicates(System.Func`2<TSource, System.Boolean> predicate1, System.Func`2<TSource, System.Boolean> predicate2)

Disassembly:
	0x021B5830 CBNZ X8, 0x21B5840
	0x021B5834 MOV X0, X19
	0x021B5838 BL 0x1C5C6E0
	0x021B583C LDR X8, [X19 + 0x38]
	0x021B5840 LDR X0, [X8]
	0x021B5844 LDRB W8, [X0 + 0x135]
	0x021B5848 TBNZ X8, 0x0, 0x21B5850
	0x021B584C BL 0x1C5C684
	0x021B5850 BL 0x1C16F10
	0x021B5854 LDR X8, [X19 + 0x38]
	0x021B5858 MOV X22, X0
	0x021B585C LDR X1, [X8 + 0x8]
	0x021B5860 BL 0x237D5E4
	0x021B5864 CBZ X22, 0x21B58B0
	0x021B5868 STP X20, X21, [X22 + 0x10]
	0x021B586C LDR X8, [X19 + 0x38]
	0x021B5870 LDR X0, [X8 + 0x28]
	0x021B5874 LDRB W8, [X0 + 0x135]
	0x021B5878 TBNZ X8, 0x0, 0x21B5880
	0x021B587C BL 0x1C5C684
	0x021B5880 BL 0x1C16F10
	0x021B5884 LDR X8, [X19 + 0x38]
	0x021B5888 MOV X1, X22
	0x021B588C MOV X19, X0
	0x021B5890 LDR X2, [X8 + 0x20]
	0x021B5894 LDR X3, [X8 + 0x30]
	0x021B5898 BL 0x2D29690
	0x021B589C MOV X0, X19
	0x021B58A0 LDP X20, X19, [X31 + 0x20]
	0x021B58A4 LDP X22, X21, [X31 + 0x10]
	0x021B58A8 LDR X30, [X31], #0x30
	0x021B58AC RET
	0x021B58B0 BL 0x1C16F20
	0x021B58B4 STR X30, [X31 - 0x30]!
	0x021B58B8 STP X22, X21, [X31 + 0x10]
	0x021B58BC STP X20, X19, [X31 + 0x20]
	0x021B58C0 LDR X8, [X2 + 0x38]
	0x021B58C4 MOV X19, X2
	0x021B58C8 MOV X20, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X19, X2
	008 Move X20, X1
	009 Move X21, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {15}
	012 Move X0, X19
	013 Call 0x1C5D6E0
	014 Move X8, [X19+56]
	015 Move X0, [X8]
	016 Move W8, [X0+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {22}
	021 Call 0x1C5D684
	022 Call 0x1C17F10
	023 Move X8, [X19+56]
	024 Move X22, X0
	025 Move X1, [X8+8]
	026 Call 0x237D650, X0
	027 Compare X22, 0
	028 JumpIfEqual {53}
	029 Move [X22+16], X21
	030 Move [X22+24], X20
	031 Move X8, [X19+56]
	032 Move X0, [X8+16]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Call 0x1C17F10
	040 Move X8, [X19+56]
	041 Move X1, X22
	042 Move X19, X0
	043 Move X2, [X8+24]
	044 Move X3, [X8+32]
	045 Call Func`2<KeyValuePair`2<Edge, Object>, Boolean>..ctor, X0, X1, X2
	046 Move X0, X19
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Return X0
	053 Call 0x1C17F20

Method: System.Func`2<TSource, TResult> CombineSelectors(System.Func`2<TSource, TMiddle> selector1, System.Func`2<TMiddle, TResult> selector2)

Disassembly:
	0x021B6774 LDRB W8, [X0 + 0x135]
	0x021B6778 TBNZ X8, 0x0, 0x21B6780
	0x021B677C BL 0x1C5C684
	0x021B6780 BL 0x1C16F10
	0x021B6784 LDR X8, [X19 + 0x38]
	0x021B6788 MOV X1, X22
	0x021B678C MOV X19, X0
	0x021B6790 LDR X2, [X8 + 0x20]
	0x021B6794 LDR X3, [X8 + 0x30]
	0x021B6798 BL 0x2D2A934
	0x021B679C MOV X0, X19
	0x021B67A0 LDP X20, X19, [X31 + 0x20]
	0x021B67A4 LDP X22, X21, [X31 + 0x10]
	0x021B67A8 LDR X30, [X31], #0x30
	0x021B67AC RET
	0x021B67B0 BL 0x1C16F20
	0x021B67B4 STR X30, [X31 - 0x30]!
	0x021B67B8 STP X22, X21, [X31 + 0x10]
	0x021B67BC STP X20, X19, [X31 + 0x20]
	0x021B67C0 LDR X8, [X2 + 0x38]
	0x021B67C4 MOV X19, X2
	0x021B67C8 MOV X20, X1
	0x021B67CC MOV X21, X0
	0x021B67D0 CBNZ X8, 0x21B67E0
	0x021B67D4 MOV X0, X19
	0x021B67D8 BL 0x1C5C6E0
	0x021B67DC LDR X8, [X19 + 0x38]
	0x021B67E0 LDR X0, [X8]
	0x021B67E4 LDRB W8, [X0 + 0x135]
	0x021B67E8 TBNZ X8, 0x0, 0x21B67F0
	0x021B67EC BL 0x1C5C684
	0x021B67F0 BL 0x1C16F10
	0x021B67F4 LDR X8, [X19 + 0x38]
	0x021B67F8 MOV X22, X0
	0x021B67FC LDR X1, [X8 + 0x8]
	0x021B6800 BL 0x237DE54
	0x021B6804 CBZ X22, 0x21B6850
	0x021B6808 STP X20, X21, [X22 + 0x10]
	0x021B680C LDR X8, [X19 + 0x38]
	0x021B6810 LDR X0, [X8 + 0x28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X19, X2
	008 Move X20, X1
	009 Move X21, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {15}
	012 Move X0, X19
	013 Call 0x1C5D6E0
	014 Move X8, [X19+56]
	015 Move X0, [X8]
	016 Move W8, [X0+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {22}
	021 Call 0x1C5D684
	022 Call 0x1C17F10
	023 Move X8, [X19+56]
	024 Move X22, X0
	025 Move X1, [X8+8]
	026 Call 0x237E59C, X0
	027 Compare X22, 0
	028 JumpIfEqual {53}
	029 Move [X22+16], X20
	030 Move [X22+24], X21
	031 Move X8, [X19+56]
	032 Move X0, [X8+40]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Call 0x1C17F10
	040 Move X8, [X19+56]
	041 Move X1, X22
	042 Move X19, X0
	043 Move X2, [X8+32]
	044 Move X3, [X8+48]
	045 Call Func`2<KeyValuePair`2<Edge, Object>, Edge>..ctor, X0, X1, X2
	046 Move X0, X19
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Return X0
	053 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<TResult> SelectMany(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource, System.Collections.Generic.IEnumerable`1<TResult>> selector)

Disassembly:
	0x021D1E88 LDUR X11, [X10 - 0x8]
	0x021D1E8C CMP X11, X1
	0x021D1E90 B.EQ 0x21D1EB0
	0x021D1E94 SUBS X9, X9, 0x1
	0x021D1E98 ADD X10, X10, 0x10
	0x021D1E9C B.NE 0x21D1E88
	0x021D1EA0 MOV X0, X20
	0x021D1EA4 MOV W2, W31
	0x021D1EA8 BL 0x1C5C788
	0x021D1EAC B 0x21D1EBC
	0x021D1EB0 LDRSW X9, [X10]
	0x021D1EB4 ADD X8, X8, X9, 0x4, LSL
	0x021D1EB8 ADD X0, X8, 0x138
	0x021D1EBC LDP X8, X1, [X0]
	0x021D1EC0 MOV X0, X20
	0x021D1EC4 BLR X8
	0x021D1EC8 MOV X20, X0
	0x021D1ECC CBZ X19, 0x21D22C4
	0x021D1ED0 ADRP X25, 0x1F22000
	0x021D1ED4 LDR X25, [X25 + 0xE18]
	0x021D1ED8 LDR X8, [X19]
	0x021D1EDC LDR X1, [X25]
	0x021D1EE0 LDRH W9, [X8 + 0x12E]
	0x021D1EE4 CBZ X9, 0x21D1F08
	0x021D1EE8 LDR X10, [X8 + 0xB0]
	0x021D1EEC ADD X10, X10, 0x8
	0x021D1EF0 LDUR X11, [X10 - 0x8]
	0x021D1EF4 CMP X11, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X2
	007 Move X20, X1
	008 Move X21, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X19
	012 Call 0x1C5D6E0
	013 Compare X21, 0
	014 JumpIfEqual {27}
	015 Compare X20, 0
	016 JumpIfEqual {29}
	017 Move X8, [X19+56]
	018 Move X1, X20
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X0, X21
	022 Move X2, [X8+16]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call 0x21D219C, X0, X1
	026 Return X0
	027 Move X0, 0x1F2E000
	028 Move X0, [X0+1408]
	029 Move X0, 0x1F4B000
	030 Move X0, [X0+2512]
	031 Call 0x1C17D08
	032 Move X1, X31
	033 Call Error.ArgumentNull, X0
	034 Move X1, X19
	035 Call 0x1C17DEC

Method: System.Collections.Generic.IEnumerable`1<TResult> SelectManyIterator(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource, System.Collections.Generic.IEnumerable`1<TResult>> selector)

Disassembly:
	0x021D219C LDRH W9, [X8 + 0x12E]
	0x021D21A0 LDR X1, [X10]
	0x021D21A4 CBZ X9, 0x21D21C8
	0x021D21A8 LDR X10, [X8 + 0xB0]
	0x021D21AC ADD X10, X10, 0x8
	0x021D21B0 LDUR X11, [X10 - 0x8]
	0x021D21B4 CMP X11, X1
	0x021D21B8 B.EQ 0x21D21D8
	0x021D21BC SUBS X9, X9, 0x1
	0x021D21C0 ADD X10, X10, 0x10
	0x021D21C4 B.NE 0x21D21B0
	0x021D21C8 MOV X0, X20
	0x021D21CC MOV W2, W31
	0x021D21D0 BL 0x1C5C788
	0x021D21D4 B 0x21D21E4
	0x021D21D8 LDRSW X9, [X10]
	0x021D21DC ADD X8, X8, X9, 0x4, LSL
	0x021D21E0 ADD X0, X8, 0x138
	0x021D21E4 LDP X8, X1, [X0]
	0x021D21E8 MOV X0, X20
	0x021D21EC BLR X8
	0x021D21F0 CBNZ X22, 0x21D22C8
	0x021D21F4 MOV X20, X31
	0x021D21F8 MOV X21, X31
	0x021D21FC CBNZ W23, 0x21D2208
	0x021D2200 MOV W23, W31
	0x021D2204 MOV X21, X20
	0x021D2208 CBZ X19, 0x21D226C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X21, X2
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {14}
	011 Move X0, X21
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X0, [X8]
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Call 0x1C17F10
	022 Move X8, [X21+56]
	023 Move TEMP, 1
	024 Not TEMP
	025 Move W1, TEMP
	026 Move X21, X0
	027 Move X2, [X8+8]
	028 Call 0x2974A38, X0, X1
	029 Compare X21, 0
	030 JumpIfEqual {39}
	031 Move [X21+40], X20
	032 Move [X21+56], X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X0, X21
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0
	039 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<TSource> Take(System.Collections.Generic.IEnumerable`1<TSource> source, System.Int32 count)

Disassembly:
	0x021D5A54 LDR X8, [X19 + 0x38]
	0x021D5A58 ADD X0, X31, 0x0
	0x021D5A5C MOV X1, X20
	0x021D5A60 LDR X2, [X8 + 0x10]
	0x021D5A64 BL 0x28ED908
	0x021D5A68 LDR V0, [X31]
	0x021D5A6C ADD X0, X31, 0x10
	0x021D5A70 STR V0, [X31 + 0x1]
	0x021D5A74 LDR X8, [X19 + 0x38]
	0x021D5A78 LDR X1, [X8 + 0x18]
	0x021D5A7C BL 0x28EDEE8
	0x021D5A80 LDP X20, X19, [X31 + 0x30]
	0x021D5A84 LDR X30, [X31 + 0x20]
	0x021D5A88 ADD X31, X31, 0x40
	0x021D5A8C RET
	0x021D5A90 ADRP X0, 0x1F29000
	0x021D5A94 LDR X0, [X0 + 0x580]
	0x021D5A98 BL 0x1C16D08
	0x021D5A9C MOV X1, X31
	0x021D5AA0 BL 0x35DEB28
	0x021D5AA4 MOV X1, X19
	0x021D5AA8 BL 0x1C16DEC
	0x021D5AAC SUB X31, X31, 0x40
	0x021D5AB0 STR X30, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X2
	007 Move W20, W1
	008 Move X21, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X19
	012 Call 0x1C5D6E0
	013 Compare X21, 0
	014 JumpIfEqual {25}
	015 Move X8, [X19+56]
	016 Move W1, W20
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X0, X21
	020 Move X2, [X8+8]
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Call 0x21D5B18, X0, X1
	024 Return X0
	025 Move X0, 0x1F2A000
	026 Move X0, [X0+1408]
	027 Call 0x1C17D08
	028 Move X1, X31
	029 Call Error.ArgumentNull, X0
	030 Move X1, X19
	031 Call 0x1C17DEC

Method: System.Collections.Generic.IEnumerable`1<TSource> TakeIterator(System.Collections.Generic.IEnumerable`1<TSource> source, System.Int32 count)

Disassembly:
	0x021D5B18 RET
	0x021D5B1C ADRP X0, 0x1F29000
	0x021D5B20 LDR X0, [X0 + 0x580]
	0x021D5B24 BL 0x1C16D08
	0x021D5B28 MOV X1, X31
	0x021D5B2C BL 0x35DEB28
	0x021D5B30 MOV X1, X19
	0x021D5B34 BL 0x1C16DEC
	0x021D5B38 SUB X31, X31, 0x40
	0x021D5B3C STR X30, [X31 + 0x20]
	0x021D5B40 STP X20, X19, [X31 + 0x30]
	0x021D5B44 LDR X8, [X1 + 0x38]
	0x021D5B48 MOV X19, X1
	0x021D5B4C MOV X20, X0
	0x021D5B50 CBNZ X8, 0x21D5B5C
	0x021D5B54 MOV X0, X19
	0x021D5B58 BL 0x1C5C6E0
	0x021D5B5C STP X31, X31, [X31 + 0x10]
	0x021D5B60 CBZ X20, 0x21D5BA4
	0x021D5B64 STP X31, X31, [X31]
	0x021D5B68 LDR X8, [X19 + 0x38]
	0x021D5B6C ADD X0, X31, 0x0
	0x021D5B70 MOV X1, X20
	0x021D5B74 LDR X2, [X8 + 0x10]
	0x021D5B78 BL 0x28EE758
	0x021D5B7C LDR V0, [X31]
	0x021D5B80 ADD X0, X31, 0x10
	0x021D5B84 STR V0, [X31 + 0x1]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X21, X2
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {14}
	011 Move X0, X21
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X0, [X8]
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Call 0x1C17F10
	022 Move X8, [X21+56]
	023 Move TEMP, 1
	024 Not TEMP
	025 Move W1, TEMP
	026 Move X21, X0
	027 Move X2, [X8+8]
	028 Call 0x297A224, X0, X1
	029 Compare X21, 0
	030 JumpIfEqual {39}
	031 Move [X21+56], X20
	032 Move [X21+40], W19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X0, X21
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0
	039 Call 0x1C17F20

Method: System.Linq.IOrderedEnumerable`1<TSource> OrderBy(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource, TKey> keySelector)

Disassembly:
	0x021CA7FC MOV X1, X0
	0x021CA800 MOV X0, X22
	0x021CA804 MOV X2, X31
	0x021CA808 LDR X4, [X8 + 0x38]
	0x021CA80C MOV X3, X19
	0x021CA810 BL 0x285DA44
	0x021CA814 B 0x21CA884
	0x021CA818 LDR X0, [X8 + 0x48]
	0x021CA81C LDRB W8, [X0 + 0x135]
	0x021CA820 TBNZ X8, 0x0, 0x21CA828
	0x021CA824 BL 0x1C5C684
	0x021CA828 LDR X8, [X20]
	0x021CA82C LDRB W9, [X0 + 0x130]
	0x021CA830 LDRB W10, [X8 + 0x130]
	0x021CA834 CMP W10, W9
	0x021CA838 B.CC 0x21CA850
	0x021CA83C LDR X8, [X8 + 0xC8]
	0x021CA840 ADD X8, X8, X9, 0x3, LSL
	0x021CA844 LDUR X8, [X8 - 0x8]
	0x021CA848 CMP X8, X0
	0x021CA84C B.EQ 0x21CA954
	0x021CA850 LDR X8, [X21 + 0x38]
	0x021CA854 LDR X0, [X8 + 0x60]
	0x021CA858 LDRB W8, [X0 + 0x135]
	0x021CA85C TBNZ X8, 0x0, 0x21CA864
	0x021CA860 BL 0x1C5C684
	0x021CA864 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X21, X2
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {14}
	011 Move X0, X21
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X0, [X8+16]
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Call 0x1C17F10
	022 Move X8, [X21+56]
	023 Move X1, X20
	024 Move X2, X19
	025 Move X3, X31
	026 Move X5, [X8+24]
	027 Move W4, W31
	028 Move X21, X0
	029 Call 0x249E5DC, X0, X1, X2, X3, X4
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X0, X21
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0

Method: System.Linq.IOrderedEnumerable`1<TSource> OrderByDescending(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource, TKey> keySelector)

Disassembly:
	0x021CADE8 MOV X0, X22
	0x021CADEC MOV X2, X31
	0x021CADF0 LDR X4, [X8 + 0x38]
	0x021CADF4 MOV X3, X19
	0x021CADF8 BL 0x285E784
	0x021CADFC B 0x21CAE6C
	0x021CAE00 LDR X0, [X8 + 0x48]
	0x021CAE04 LDRB W8, [X0 + 0x135]
	0x021CAE08 TBNZ X8, 0x0, 0x21CAE10
	0x021CAE0C BL 0x1C5C684
	0x021CAE10 LDR X8, [X20]
	0x021CAE14 LDRB W9, [X0 + 0x130]
	0x021CAE18 LDRB W10, [X8 + 0x130]
	0x021CAE1C CMP W10, W9
	0x021CAE20 B.CC 0x21CAE38
	0x021CAE24 LDR X8, [X8 + 0xC8]
	0x021CAE28 ADD X8, X8, X9, 0x3, LSL
	0x021CAE2C LDUR X8, [X8 - 0x8]
	0x021CAE30 CMP X8, X0
	0x021CAE34 B.EQ 0x21CAF3C
	0x021CAE38 LDR X8, [X21 + 0x38]
	0x021CAE3C LDR X0, [X8 + 0x60]
	0x021CAE40 LDRB W8, [X0 + 0x135]
	0x021CAE44 TBNZ X8, 0x0, 0x21CAE4C
	0x021CAE48 BL 0x1C5C684
	0x021CAE4C BL 0x1C16F10
	0x021CAE50 LDR X8, [X21 + 0x38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X21, X2
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {14}
	011 Move X0, X21
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X0, [X8+16]
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Call 0x1C17F10
	022 Move X8, [X21+56]
	023 Move W4, 1
	024 Move X1, X20
	025 Move X2, X19
	026 Move X5, [X8+24]
	027 Move X3, X31
	028 Move X21, X0
	029 Call OrderedEnumerable`2<Object, DateTime>..ctor, X0, X1, X2, X3, X4
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X0, X21
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0

Method: System.Linq.IOrderedEnumerable`1<TSource> ThenBy(System.Linq.IOrderedEnumerable`1<TSource> source, System.Func`2<TSource, TKey> keySelector)

Disassembly:
	0x021D5C54 LDP X20, X19, [X31 + 0x20]
	0x021D5C58 LDP X22, X21, [X31 + 0x10]
	0x021D5C5C MOV X3, X31
	0x021D5C60 LDR X30, [X31], #0x30
	0x021D5C64 B 0x21D617C
	0x021D5C68 STR X30, [X31 - 0x30]!
	0x021D5C6C STP X22, X21, [X31 + 0x10]
	0x021D5C70 STP X20, X19, [X31 + 0x20]
	0x021D5C74 LDR X8, [X3 + 0x38]
	0x021D5C78 MOV X19, X2
	0x021D5C7C MOV X20, X1
	0x021D5C80 MOV X21, X0
	0x021D5C84 CBNZ X8, 0x21D5C98
	0x021D5C88 MOV X0, X3
	0x021D5C8C MOV X22, X3
	0x021D5C90 BL 0x1C5C6E0
	0x021D5C94 LDR X8, [X22 + 0x38]
	0x021D5C98 LDR X4, [X8 + 0x18]
	0x021D5C9C MOV X0, X21
	0x021D5CA0 MOV X1, X20
	0x021D5CA4 MOV X2, X19
	0x021D5CA8 LDP X20, X19, [X31 + 0x20]
	0x021D5CAC LDP X22, X21, [X31 + 0x10]
	0x021D5CB0 MOV X3, X31
	0x021D5CB4 LDR X30, [X31], #0x30
	0x021D5CB8 B 0x21D653C
	0x021D5CBC STR X30, [X31 - 0x30]!
	0x021D5CC0 STP X22, X21, [X31 + 0x10]
	0x021D5CC4 STP X20, X19, [X31 + 0x20]
	0x021D5CC8 LDR X8, [X3 + 0x38]
	0x021D5CCC MOV X19, X2
	0x021D5CD0 MOV X20, X1
	0x021D5CD4 MOV X21, X0
	0x021D5CD8 CBNZ X8, 0x21D5CEC
	0x021D5CDC MOV X0, X3
	0x021D5CE0 MOV X22, X3
	0x021D5CE4 BL 0x1C5C6E0
	0x021D5CE8 LDR X8, [X22 + 0x38]
	0x021D5CEC LDR X4, [X8 + 0x18]
	0x021D5CF0 MOV X0, X21
	0x021D5CF4 MOV X1, X20
	0x021D5CF8 MOV X2, X19
	0x021D5CFC LDP X20, X19, [X31 + 0x20]
	0x021D5D00 LDP X22, X21, [X31 + 0x10]
	0x021D5D04 MOV X3, X31
	0x021D5D08 LDR X30, [X31], #0x30
	0x021D5D0C B 0x21D68FC
	0x021D5D10 STR X30, [X31 - 0x30]!
	0x021D5D14 STP X22, X21, [X31 + 0x10]
	0x021D5D18 STP X20, X19, [X31 + 0x20]
	0x021D5D1C LDR X8, [X3 + 0x38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X21, X2
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X21
	012 Call 0x1C5D6E0
	013 Compare X20, 0
	014 JumpIfEqual {49}
	015 Move X9, [X21+56]
	016 Move X8, [X20]
	017 Move X21, [X9+16]
	018 NotImplemented "Instruction LDRH not yet implemented."
	019 Move X1, [X21+32]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Compare X9, 0
	022 JumpIfEqual {29}
	023 Move X10, [X8+176]
	024 Add X10, X10, 8
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Subtract X9, X9, 1
	028 Add X10, X10, 16
	029 Move X0, X20
	030 Call 0x1C5D788
	031 Move W9, [X10]
	032 Add W9, W9, W2
	033 Add X8, X8, W9
	034 Add X0, X8, 312
	035 Move X0, [X0+8]
	036 Move X1, X21
	037 Call 0x1C17DF8
	038 Move X4, X0
	039 Move X5, [X0+8]
	040 Move X0, X20
	041 Move X1, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X2, X31
	045 Move W3, W31
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 CallNoReturn X5
	049 Move X0, 0x1F2A000
	050 Move X0, [X0+1408]
	051 Call 0x1C17D08
	052 Move X1, X31
	053 Call Error.ArgumentNull, X0
	054 Move X1, X21
	055 Call 0x1C17DEC

Method: System.Collections.Generic.IEnumerable`1<System.Linq.IGrouping`2<TKey, TSource>> GroupBy(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource, TKey> keySelector)

Disassembly:
	0x021C6F1C LDRB W8, [X1 + 0x135]
	0x021C6F20 TBNZ X8, 0x0, 0x21C6F30
	0x021C6F24 MOV X0, X1
	0x021C6F28 BL 0x1C5C684
	0x021C6F2C MOV X1, X0
	0x021C6F30 MOV X0, X26
	0x021C6F34 BL 0x1C16E00
	0x021C6F38 CBZ X0, 0x21C6F98
	0x021C6F3C LDR X8, [X22 + 0x38]
	0x021C6F40 MOV X24, X0
	0x021C6F44 LDR X1, [X8 + 0x10]
	0x021C6F48 LDRB W8, [X1 + 0x135]
	0x021C6F4C TBNZ X8, 0x0, 0x21C6F5C
	0x021C6F50 MOV X0, X1
	0x021C6F54 BL 0x1C5C684
	0x021C6F58 MOV X1, X0
	0x021C6F5C LDR X8, [X24]
	0x021C6F60 LDRH W9, [X8 + 0x12E]
	0x021C6F64 CBZ X9, 0x21C6F88
	0x021C6F68 LDR X10, [X8 + 0xB0]
	0x021C6F6C ADD X10, X10, 0x8
	0x021C6F70 LDUR X11, [X10 - 0x8]
	0x021C6F74 CMP X11, X1
	0x021C6F78 B.EQ 0x21C6FF0
	0x021C6F7C SUBS X9, X9, 0x1
	0x021C6F80 ADD X10, X10, 0x10
	0x021C6F84 B.NE 0x21C6F70
	0x021C6F88 MOV X0, X24
	0x021C6F8C MOV W2, W31
	0x021C6F90 BL 0x1C5C788
	0x021C6F94 B 0x21C6FFC
	0x021C6F98 LDR X8, [X22 + 0x38]
	0x021C6F9C LDR X1, [X8]
	0x021C6FA0 LDRB W8, [X1 + 0x135]
	0x021C6FA4 TBNZ X8, 0x0, 0x21C6FB4
	0x021C6FA8 MOV X0, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X21, X2
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {15}
	012 Move X0, X21
	013 Call 0x1C5D6E0
	014 Move X8, [X21+56]
	015 Move X0, [X8+16]
	016 Call 0x2DE2D58
	017 Move X8, [X21+56]
	018 Move X22, X0
	019 Move X8, [X8+40]
	020 Move W9, [X8+309]
	021 Move TEMP, X9
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {28}
	025 Move X0, X8
	026 Call 0x1C5D684
	027 Move X8, X0
	028 Move X0, X8
	029 Call 0x1C17F10
	030 Move X8, [X21+56]
	031 Move X1, X20
	032 Move X2, X19
	033 Move X3, X22
	034 Move X5, [X8+48]
	035 Move X4, X31
	036 Move X21, X0
	037 Call 0x2D570A0, X0, X1, X2, X3, X4
	038 Move X0, X21
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return X0

Method: System.Collections.Generic.IEnumerable`1<TSource> Concat(System.Collections.Generic.IEnumerable`1<TSource> first, System.Collections.Generic.IEnumerable`1<TSource> second)

Disassembly:
	0x021BB09C MOV X0, X19
	0x021BB0A0 MOV W2, W31
	0x021BB0A4 BL 0x1C5C788
	0x021BB0A8 B 0x21BB0B8
	0x021BB0AC LDRSW X9, [X10]
	0x021BB0B0 ADD X8, X8, X9, 0x4, LSL
	0x021BB0B4 ADD X0, X8, 0x138
	0x021BB0B8 LDP X8, X1, [X0]
	0x021BB0BC MOV X0, X19
	0x021BB0C0 BLR X8
	0x021BB0C4 CBNZ X20, 0x21BB114
	0x021BB0C8 AND W0, W23, 0x1
	0x021BB0CC LDP X20, X19, [X31 + 0x30]
	0x021BB0D0 LDP X22, X21, [X31 + 0x20]
	0x021BB0D4 LDP X24, X23, [X31 + 0x10]
	0x021BB0D8 LDP X30, X25, [X31], #0x40
	0x021BB0DC RET
	0x021BB0E0 MOV X0, X20
	0x021BB0E4 BL 0x1C5C6E0
	0x021BB0E8 CBNZ X22, 0x21BAE74
	0x021BB0EC B 0x21BAE64
	0x021BB0F0 BL 0x1C16F20
	0x021BB0F4 ADRP X0, 0x1F43000
	0x021BB0F8 LDR X0, [X0 + 0x580]
	0x021BB0FC BL 0x1C16D08
	0x021BB100 MOV X1, X31
	0x021BB104 BL 0x35DEB28
	0x021BB108 MOV X1, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X2
	007 Move X20, X1
	008 Move X21, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X19
	012 Call 0x1C5D6E0
	013 Compare X21, 0
	014 JumpIfEqual {27}
	015 Compare X20, 0
	016 JumpIfEqual {29}
	017 Move X8, [X19+56]
	018 Move X1, X20
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X0, X21
	022 Move X2, [X8+8]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call 0x21BB180, X0, X1
	026 Return X0
	027 Move X0, 0x1F61000
	028 Move X0, [X0+2496]
	029 Move X0, 0x1F61000
	030 Move X0, [X0+2504]
	031 Call 0x1C17D08
	032 Move X1, X31
	033 Call Error.ArgumentNull, X0
	034 Move X1, X19
	035 Call 0x1C17DEC

Method: System.Collections.Generic.IEnumerable`1<TSource> ConcatIterator(System.Collections.Generic.IEnumerable`1<TSource> first, System.Collections.Generic.IEnumerable`1<TSource> second)

Disassembly:
	0x021BB180 CMP X11, X1
	0x021BB184 B.EQ 0x21BB1A4
	0x021BB188 SUBS X9, X9, 0x1
	0x021BB18C ADD X10, X10, 0x10
	0x021BB190 B.NE 0x21BB17C
	0x021BB194 MOV X0, X19
	0x021BB198 MOV W2, W31
	0x021BB19C BL 0x1C5C788
	0x021BB1A0 B 0x21BB1B0
	0x021BB1A4 LDRSW X9, [X10]
	0x021BB1A8 ADD X8, X8, X9, 0x4, LSL
	0x021BB1AC ADD X0, X8, 0x138
	0x021BB1B0 LDP X8, X1, [X0]
	0x021BB1B4 MOV X0, X19
	0x021BB1B8 BLR X8
	0x021BB1BC CBNZ X20, 0x21BB1C8
	0x021BB1C0 MOV X0, X21
	0x021BB1C4 BL 0x1D2C690
	0x021BB1C8 MOV X0, X20
	0x021BB1CC BL 0x1C16F18
	0x021BB1D0 BL 0x1990590
	0x021BB1D4 STP X30, X25, [X31 - 0x40]!
	0x021BB1D8 STP X24, X23, [X31 + 0x10]
	0x021BB1DC STP X22, X21, [X31 + 0x20]
	0x021BB1E0 STP X20, X19, [X31 + 0x30]
	0x021BB1E4 LDR X8, [X3 + 0x38]
	0x021BB1E8 MOV X20, X3
	0x021BB1EC MOV X22, X2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X21, X2
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {14}
	011 Move X0, X21
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X0, [X8]
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Call 0x1C17F10
	022 Move X8, [X21+56]
	023 Move TEMP, 1
	024 Not TEMP
	025 Move W1, TEMP
	026 Move X21, X0
	027 Move X2, [X8+8]
	028 Call 0x2388EFC, X0, X1
	029 Compare X21, 0
	030 JumpIfEqual {39}
	031 Move [X21+48], X20
	032 Move [X21+64], X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X0, X21
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0
	039 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<TSource> Append(System.Collections.Generic.IEnumerable`1<TSource> source, TSource element)

Disassembly:
	0x021B5124 BL 0x1C16F10
	0x021B5128 LDR X8, [X19 + 0x38]
	0x021B512C MOV X1, X22
	0x021B5130 MOV X19, X0
	0x021B5134 LDP X2, X3, [X8 + 0x18]
	0x021B5138 BL 0x2D2CE34
	0x021B513C MOV X0, X19
	0x021B5140 LDP X20, X19, [X31 + 0x20]
	0x021B5144 LDP X22, X21, [X31 + 0x10]
	0x021B5148 LDR X30, [X31], #0x30
	0x021B514C RET
	0x021B5150 BL 0x1C16F20
	0x021B5154 STR X30, [X31 - 0x30]!
	0x021B5158 STP X22, X21, [X31 + 0x10]
	0x021B515C STP X20, X19, [X31 + 0x20]
	0x021B5160 LDR X8, [X2 + 0x38]
	0x021B5164 MOV X19, X2
	0x021B5168 MOV X20, X1
	0x021B516C MOV X21, X0
	0x021B5170 CBNZ X8, 0x21B5180
	0x021B5174 MOV X0, X19
	0x021B5178 BL 0x1C5C6E0
	0x021B517C LDR X8, [X19 + 0x38]
	0x021B5180 LDR X0, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X2
	007 Move X20, X1
	008 Move X21, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X19
	012 Call 0x1C5D6E0
	013 Compare X21, 0
	014 JumpIfEqual {25}
	015 Move X8, [X19+56]
	016 Move X1, X20
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X0, X21
	020 Move X2, [X8+16]
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Call 0x21B527C, X0, X1
	024 Return X0
	025 Move X0, 0x1F4A000
	026 Move X0, [X0+1408]
	027 Call 0x1C17D08
	028 Move X1, X31
	029 Call Error.ArgumentNull, X0
	030 Move X1, X19
	031 Call 0x1C17DEC

Method: System.Collections.Generic.IEnumerable`1<TSource> AppendIterator(System.Collections.Generic.IEnumerable`1<TSource> source, TSource element)

Disassembly:
	0x021B527C LDP X22, X21, [X31 + 0x10]
	0x021B5280 LDR X30, [X31], #0x30
	0x021B5284 RET
	0x021B5288 BL 0x1C16F20
	0x021B528C STR X30, [X31 - 0x30]!
	0x021B5290 STP X22, X21, [X31 + 0x10]
	0x021B5294 STP X20, X19, [X31 + 0x20]
	0x021B5298 LDR X8, [X2 + 0x38]
	0x021B529C MOV X19, X2
	0x021B52A0 MOV X20, X1
	0x021B52A4 MOV X21, X0
	0x021B52A8 CBNZ X8, 0x21B52B8
	0x021B52AC MOV X0, X19
	0x021B52B0 BL 0x1C5C6E0
	0x021B52B4 LDR X8, [X19 + 0x38]
	0x021B52B8 LDR X0, [X8]
	0x021B52BC LDRB W8, [X0 + 0x135]
	0x021B52C0 TBNZ X8, 0x0, 0x21B52C8
	0x021B52C4 BL 0x1C5C684
	0x021B52C8 BL 0x1C16F10
	0x021B52CC LDR X8, [X19 + 0x38]
	0x021B52D0 MOV X22, X0
	0x021B52D4 LDR X1, [X8 + 0x8]
	0x021B52D8 BL 0x237CDDC
	0x021B52DC CBZ X22, 0x21B5324
	0x021B52E0 STP X21, X20, [X22 + 0x10]
	0x021B52E4 LDR X8, [X19 + 0x38]
	0x021B52E8 LDR X0, [X8 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X21, X2
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {14}
	011 Move X0, X21
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X0, [X8]
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Call 0x1C17F10
	022 Move X8, [X21+56]
	023 Move TEMP, 1
	024 Not TEMP
	025 Move W1, TEMP
	026 Move X21, X0
	027 Move X2, [X8+8]
	028 Call 0x238387C, X0, X1
	029 Compare X21, 0
	030 JumpIfEqual {39}
	031 Move [X21+48], X20
	032 Move [X21+64], X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X0, X21
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0
	039 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<TSource> Distinct(System.Collections.Generic.IEnumerable`1<TSource> source)

Disassembly:
	0x021C124C BL 0x1C5C788
	0x021C1250 B 0x21C1260
	0x021C1254 LDRSW X9, [X10]
	0x021C1258 ADD X8, X8, X9, 0x4, LSL
	0x021C125C ADD X0, X8, 0x138
	0x021C1260 LDP X8, X1, [X0]
	0x021C1264 MOV X0, X19
	0x021C1268 BLR X8
	0x021C126C CBNZ X20, 0x21C1278
	0x021C1270 MOV X0, X21
	0x021C1274 BL 0x1D2C690
	0x021C1278 MOV X0, X20
	0x021C127C BL 0x1C16F18
	0x021C1280 BL 0x1990590
	0x021C1284 STP X29, X30, [X31 - 0x60]!
	0x021C1288 STP X28, X27, [X31 + 0x10]
	0x021C128C STP X26, X25, [X31 + 0x20]
	0x021C1290 STP X24, X23, [X31 + 0x30]
	0x021C1294 STP X22, X21, [X31 + 0x40]
	0x021C1298 STP X20, X19, [X31 + 0x50]
	0x021C129C ADD X29, X31, 0x0
	0x021C12A0 SUB X31, X31, 0x20
	0x021C12A4 MRS X27, 0xC000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X19, X1
	006 Move X20, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {11}
	009 Move X0, X19
	010 Call 0x1C5D6E0
	011 Compare X20, 0
	012 JumpIfEqual {22}
	013 Move X8, [X19+56]
	014 Move X0, X20
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X1, X31
	018 Move X2, [X8+8]
	019 Move X30, [X31+32]
	020 Call 0x21C141C, X0, X1
	021 Return X0
	022 Move X0, 0x1F3E000
	023 Move X0, [X0+1408]
	024 Call 0x1C17D08
	025 Move X1, X31
	026 Call Error.ArgumentNull, X0
	027 Move X1, X19
	028 Call 0x1C17DEC

Method: System.Collections.Generic.IEnumerable`1<TSource> DistinctIterator(System.Collections.Generic.IEnumerable`1<TSource> source, System.Collections.Generic.IEqualityComparer`1<TSource> comparer)

Disassembly:
	0x021C141C SUB X8, X29, 0xC
	0x021C1420 STP X8, X21, [X29 - 0x20]
	0x021C1424 LDR X1, [X0 + 0x8]
	0x021C1428 SUB X3, X29, 0x20
	0x021C142C MOV X2, X26
	0x021C1430 MOV X4, X21
	0x021C1434 LDP X0, X8, [X1 + 0x8]
	0x021C1438 BLR X8
	0x021C143C B 0x21C15EC
	0x021C1440 LDRSW X9, [X10]
	0x021C1444 ADD X8, X8, X9, 0x4, LSL
	0x021C1448 ADD X0, X8, 0x138
	0x021C144C LDP X8, X1, [X0]
	0x021C1450 MOV X0, X23
	0x021C1454 BLR X8
	0x021C1458 MOV X23, X0
	0x021C145C CBZ X0, 0x21C167C
	0x021C1460 ADRP X26, 0x1F32000
	0x021C1464 LDR X26, [X26 + 0xE18]
	0x021C1468 LDR X8, [X23]
	0x021C146C LDR X1, [X26]
	0x021C1470 MOV W28, W25
	0x021C1474 LDRH W9, [X8 + 0x12E]
	0x021C1478 CBZ X9, 0x21C149C
	0x021C147C LDR X10, [X8 + 0xB0]
	0x021C1480 ADD X10, X10, 0x8
	0x021C1484 LDUR X11, [X10 - 0x8]
	0x021C1488 CMP X11, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X21, X2
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {14}
	011 Move X0, X21
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X0, [X8]
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Call 0x1C17F10
	022 Move X8, [X21+56]
	023 Move TEMP, 1
	024 Not TEMP
	025 Move W1, TEMP
	026 Move X21, X0
	027 Move X2, [X8+8]
	028 Call 0x238A530, X0, X1
	029 Compare X21, 0
	030 JumpIfEqual {39}
	031 Move [X21+56], X20
	032 Move [X21+40], X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X0, X21
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0
	039 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<TSource> Union(System.Collections.Generic.IEnumerable`1<TSource> first, System.Collections.Generic.IEnumerable`1<TSource> second)

Disassembly:
	0x021D8D5C LDRB W8, [X1 + 0x135]
	0x021D8D60 TBNZ X8, 0x0, 0x21D8D70
	0x021D8D64 MOV X0, X1
	0x021D8D68 BL 0x1C5C684
	0x021D8D6C MOV X1, X0
	0x021D8D70 LDR X8, [X20]
	0x021D8D74 LDRB W9, [X1 + 0x130]
	0x021D8D78 LDRB W10, [X8 + 0x130]
	0x021D8D7C CMP W10, W9
	0x021D8D80 B.CC 0x21D8DDC
	0x021D8D84 LDR X8, [X8 + 0xC8]
	0x021D8D88 ADD X8, X8, X9, 0x3, LSL
	0x021D8D8C LDUR X8, [X8 - 0x8]
	0x021D8D90 CMP X8, X1
	0x021D8D94 B.NE 0x21D8DDC
	0x021D8D98 LDR X8, [X21 + 0x38]
	0x021D8D9C MOV X0, X22
	0x021D8DA0 MOV X1, X20
	0x021D8DA4 MOV X2, X19
	0x021D8DA8 LDR X3, [X8 + 0x48]
	0x021D8DAC BL 0x285ABF0
	0x021D8DB0 B 0x21D8C7C
	0x021D8DB4 ADRP X0, 0x1F26000
	0x021D8DB8 LDR X0, [X0 + 0x580]
	0x021D8DBC B 0x21D8DC8
	0x021D8DC0 ADRP X0, 0x1F43000
	0x021D8DC4 LDR X0, [X0 + 0x8F0]
	0x021D8DC8 BL 0x1C16D08
	0x021D8DCC MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X2
	007 Move X20, X1
	008 Move X21, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X19
	012 Call 0x1C5D6E0
	013 Compare X21, 0
	014 JumpIfEqual {28}
	015 Compare X20, 0
	016 JumpIfEqual {30}
	017 Move X8, [X19+56]
	018 Move X1, X20
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X0, X21
	022 Move X3, [X8+8]
	023 Move X2, X31
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Call 0x21D8E48, X0, X1, X2
	027 Return X0
	028 Move X0, 0x1F44000
	029 Move X0, [X0+2496]
	030 Move X0, 0x1F44000
	031 Move X0, [X0+2504]
	032 Call 0x1C17D08
	033 Move X1, X31
	034 Call Error.ArgumentNull, X0
	035 Move X1, X19
	036 Call 0x1C17DEC

Method: System.Collections.Generic.IEnumerable`1<TSource> UnionIterator(System.Collections.Generic.IEnumerable`1<TSource> first, System.Collections.Generic.IEnumerable`1<TSource> second, System.Collections.Generic.IEqualityComparer`1<TSource> comparer)

Disassembly:
	0x021D8E48 LDR X11, [X8 + 0xC8]
	0x021D8E4C ADD X10, X11, X10, 0x3, LSL
	0x021D8E50 LDUR X10, [X10 - 0x8]
	0x021D8E54 CMP X10, X0
	0x021D8E58 B.EQ 0x21D8F64
	0x021D8E5C LDR X8, [X21 + 0x38]
	0x021D8E60 LDR X1, [X8 + 0x20]
	0x021D8E64 LDRB W8, [X1 + 0x135]
	0x021D8E68 TBNZ X8, 0x0, 0x21D8E78
	0x021D8E6C MOV X0, X1
	0x021D8E70 BL 0x1C5C684
	0x021D8E74 MOV X1, X0
	0x021D8E78 MOV X0, X20
	0x021D8E7C BL 0x1C16E00
	0x021D8E80 LDR X8, [X21 + 0x38]
	0x021D8E84 CBZ X0, 0x21D8EE8
	0x021D8E88 LDR X0, [X8 + 0x28]
	0x021D8E8C LDRB W8, [X0 + 0x135]
	0x021D8E90 TBNZ X8, 0x0, 0x21D8E98
	0x021D8E94 BL 0x1C5C684
	0x021D8E98 BL 0x1C16F10
	0x021D8E9C LDR X8, [X21 + 0x38]
	0x021D8EA0 MOV X22, X0
	0x021D8EA4 LDR X23, [X8 + 0x20]
	0x021D8EA8 LDRB W8, [X23 + 0x135]
	0x021D8EAC TBNZ X8, 0x0, 0x21D8EBC
	0x021D8EB0 MOV X0, X23
	0x021D8EB4 BL 0x1C5C684
	0x021D8EB8 MOV X23, X0
	0x021D8EBC MOV X0, X20
	0x021D8EC0 MOV X1, X23
	0x021D8EC4 BL 0x1C16E00

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X22, X3
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {16}
	013 Move X0, X22
	014 Call 0x1C5D6E0
	015 Move X8, [X22+56]
	016 Move X0, [X8]
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Call 0x1C17F10
	024 Move X8, [X22+56]
	025 Move TEMP, 1
	026 Not TEMP
	027 Move W1, TEMP
	028 Move X22, X0
	029 Move X2, [X8+8]
	030 Call 0x297B19C, X0, X1
	031 Compare X22, 0
	032 JumpIfEqual {43}
	033 Move [X22+64], X21
	034 Move [X22+80], X20
	035 Move [X22+48], X19
	036 Move X0, X22
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Return X0
	043 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<TSource> Except(System.Collections.Generic.IEnumerable`1<TSource> first, System.Collections.Generic.IEnumerable`1<TSource> second)

Disassembly:
	0x021C2970 BL 0x1C5C684
	0x021C2974 MOV X1, X0
	0x021C2978 LDR X8, [X21]
	0x021C297C LDRH W9, [X8 + 0x12E]
	0x021C2980 CBZ X9, 0x21C29A4
	0x021C2984 LDR X10, [X8 + 0xB0]
	0x021C2988 ADD X10, X10, 0x8
	0x021C298C LDUR X11, [X10 - 0x8]
	0x021C2990 CMP X11, X1
	0x021C2994 B.EQ 0x21C29C4
	0x021C2998 SUBS X9, X9, 0x1
	0x021C299C ADD X10, X10, 0x10
	0x021C29A0 B.NE 0x21C298C
	0x021C29A4 MOV X0, X21
	0x021C29A8 MOV W2, W31
	0x021C29AC BL 0x1C5C788
	0x021C29B0 B 0x21C29D0
	0x021C29B4 MOV X22, X31
	0x021C29B8 MOVZ W23, 0x6
	0x021C29BC CBNZ X21, 0x21C29FC
	0x021C29C0 B 0x21C2A5C
	0x021C29C4 LDRSW X9, [X10]
	0x021C29C8 ADD X8, X8, X9, 0x4, LSL
	0x021C29CC ADD X0, X8, 0x138
	0x021C29D0 LDP X9, X1, [X0]
	0x021C29D4 ADD X8, X31, 0x8
	0x021C29D8 MOV X0, X21
	0x021C29DC BLR X9
	0x021C29E0 ADD X0, X31, 0x60

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X2
	007 Move X20, X1
	008 Move X21, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X19
	012 Call 0x1C5D6E0
	013 Compare X21, 0
	014 JumpIfEqual {28}
	015 Compare X20, 0
	016 JumpIfEqual {30}
	017 Move X8, [X19+56]
	018 Move X1, X20
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X0, X21
	022 Move X3, [X8+8]
	023 Move X2, X31
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Call 0x21C2D88, X0, X1, X2
	027 Return X0
	028 Move X0, 0x1F5A000
	029 Move X0, [X0+2496]
	030 Move X0, 0x1F5A000
	031 Move X0, [X0+2504]
	032 Call 0x1C17D08
	033 Move X1, X31
	034 Call Error.ArgumentNull, X0
	035 Move X1, X19
	036 Call 0x1C17DEC

Method: System.Collections.Generic.IEnumerable`1<TSource> ExceptIterator(System.Collections.Generic.IEnumerable`1<TSource> first, System.Collections.Generic.IEnumerable`1<TSource> second, System.Collections.Generic.IEqualityComparer`1<TSource> comparer)

Disassembly:
	0x021C2D88 LDUR X11, [X10 - 0x8]
	0x021C2D8C CMP X11, X1
	0x021C2D90 B.EQ 0x21C2DB0
	0x021C2D94 SUBS X9, X9, 0x1
	0x021C2D98 ADD X10, X10, 0x10
	0x021C2D9C B.NE 0x21C2D88
	0x021C2DA0 MOV X0, X20
	0x021C2DA4 MOV W2, W31
	0x021C2DA8 BL 0x1C5C788
	0x021C2DAC B 0x21C2DBC
	0x021C2DB0 LDRSW X9, [X10]
	0x021C2DB4 ADD X8, X8, X9, 0x4, LSL
	0x021C2DB8 ADD X0, X8, 0x138
	0x021C2DBC LDP X8, X1, [X0]
	0x021C2DC0 MOV X0, X20
	0x021C2DC4 BLR X8
	0x021C2DC8 TBZ X0, 0x0, 0x21C2E24
	0x021C2DCC LDR X8, [X19 + 0x38]
	0x021C2DD0 LDR X1, [X8 + 0x38]
	0x021C2DD4 LDRB W8, [X1 + 0x135]
	0x021C2DD8 TBNZ X8, 0x0, 0x21C2DE8
	0x021C2DDC MOV X0, X1
	0x021C2DE0 BL 0x1C5C684
	0x021C2DE4 MOV X1, X0
	0x021C2DE8 LDR X8, [X20]
	0x021C2DEC LDRH W9, [X8 + 0x12E]
	0x021C2DF0 CBZ X9, 0x21C2E14
	0x021C2DF4 LDR X10, [X8 + 0xB0]
	0x021C2DF8 ADD X10, X10, 0x8
	0x021C2DFC LDUR X11, [X10 - 0x8]
	0x021C2E00 CMP X11, X1
	0x021C2E04 B.EQ 0x21C2E38

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X22, X3
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {16}
	013 Move X0, X22
	014 Call 0x1C5D6E0
	015 Move X8, [X22+56]
	016 Move X0, [X8]
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Call 0x1C17F10
	024 Move X8, [X22+56]
	025 Move TEMP, 1
	026 Not TEMP
	027 Move W1, TEMP
	028 Move X22, X0
	029 Move X2, [X8+8]
	030 Call 0x238EB04, X0, X1
	031 Compare X22, 0
	032 JumpIfEqual {43}
	033 Move [X22+72], X21
	034 Move [X22+56], X20
	035 Move [X22+40], X19
	036 Move X0, X22
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Return X0
	043 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<TSource> Reverse(System.Collections.Generic.IEnumerable`1<TSource> source)

Disassembly:
	0x021CAEC4 LDR X10, [X21 + 0x38]
	0x021CAEC8 LDP X1, X21, [X10 + 0x10]
	0x021CAECC LDRB W11, [X1 + 0x135]
	0x021CAED0 TBNZ X11, 0x0, 0x21CAEE8
	0x021CAED4 MOV X0, X1
	0x021CAED8 BL 0x1C5C684
	0x021CAEDC LDR X8, [X20]
	0x021CAEE0 MOV X1, X0
	0x021CAEE4 LDRB W9, [X8 + 0x130]
	0x021CAEE8 LDRB W10, [X1 + 0x130]
	0x021CAEEC CMP W9, W10
	0x021CAEF0 B.CC 0x21CAFE4
	0x021CAEF4 LDR X9, [X8 + 0xC8]
	0x021CAEF8 ADD X9, X9, X10, 0x3, LSL
	0x021CAEFC LDUR X9, [X9 - 0x8]
	0x021CAF00 CMP X9, X1
	0x021CAF04 B.NE 0x21CAFE4
	0x021CAF08 LDRH W9, [X21 + 0x50]
	0x021CAF0C MOV X1, X21
	0x021CAF10 ADD X8, X8, X9, 0x4, LSL
	0x021CAF14 LDR X0, [X8 + 0x140]
	0x021CAF18 BL 0x1C16DF8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X19, X1
	006 Move X20, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {11}
	009 Move X0, X19
	010 Call 0x1C5D6E0
	011 Compare X20, 0
	012 JumpIfEqual {21}
	013 Move X8, [X19+56]
	014 Move X0, X20
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X1, [X8+8]
	018 Move X30, [X31+32]
	019 Call 0x21CAFD0, X0
	020 Return X0
	021 Move X0, 0x1F35000
	022 Move X0, [X0+1408]
	023 Call 0x1C17D08
	024 Move X1, X31
	025 Call Error.ArgumentNull, X0
	026 Move X1, X19
	027 Call 0x1C17DEC

Method: System.Collections.Generic.IEnumerable`1<TSource> ReverseIterator(System.Collections.Generic.IEnumerable`1<TSource> source)

Disassembly:
	0x021CAFD0 BL 0x1C16D08
	0x021CAFD4 MOV X1, X31
	0x021CAFD8 BL 0x35DEB28
	0x021CAFDC MOV X1, X21
	0x021CAFE0 BL 0x1C16DEC
	0x021CAFE4 MOV X0, X20
	0x021CAFE8 BL 0x1C171E0
	0x021CAFEC MOV X0, X20
	0x021CAFF0 MOV X1, X23
	0x021CAFF4 BL 0x1C171E0
	0x021CAFF8 STP X30, X23, [X31 - 0x30]!
	0x021CAFFC STP X22, X21, [X31 + 0x10]
	0x021CB000 STP X20, X19, [X31 + 0x20]
	0x021CB004 LDR X8, [X2 + 0x38]
	0x021CB008 MOV X21, X2
	0x021CB00C MOV X19, X1
	0x021CB010 MOV X20, X0
	0x021CB014 CBNZ X8, 0x21CB020
	0x021CB018 MOV X0, X21
	0x021CB01C BL 0x1C5C6E0
	0x021CB020 CBZ X20, 0x21CB2B0
	0x021CB024 CBZ X19, 0x21CB2BC
	0x021CB028 LDR X8, [X21 + 0x38]
	0x021CB02C LDR X0, [X8 + 0x10]
	0x021CB030 LDRB W8, [X0 + 0x135]
	0x021CB034 TBNZ X8, 0x0, 0x21CB03C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X20, X1
	006 Move X19, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {12}
	009 Move X0, X20
	010 Call 0x1C5D6E0
	011 Move X8, [X20+56]
	012 Move X0, [X8]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Call 0x1C17F10
	020 Move X8, [X20+56]
	021 Move TEMP, 1
	022 Not TEMP
	023 Move W1, TEMP
	024 Move X20, X0
	025 Move X2, [X8+8]
	026 Call 0x29714D0, X0, X1
	027 Compare X20, 0
	028 JumpIfEqual {35}
	029 Move [X20+48], X19
	030 Move X0, X20
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0
	035 Call 0x1C17F20

Method: System.Boolean SequenceEqual(System.Collections.Generic.IEnumerable`1<TSource> first, System.Collections.Generic.IEnumerable`1<TSource> second)

Disassembly:
	0x021D2508 MOV X0, X19
	0x021D250C MOV W2, W31
	0x021D2510 BL 0x1C5C788
	0x021D2514 B 0x21D2524
	0x021D2518 LDRSW X9, [X10]
	0x021D251C ADD X8, X8, X9, 0x4, LSL
	0x021D2520 ADD X0, X8, 0x138
	0x021D2524 LDP X8, X1, [X0]
	0x021D2528 MOV X0, X19
	0x021D252C BLR X8
	0x021D2530 LDR X8, [X21 + 0x38]
	0x021D2534 MOV X19, X0
	0x021D2538 LDR X1, [X8 + 0x20]
	0x021D253C LDRB W8, [X1 + 0x135]
	0x021D2540 TBNZ X8, 0x0, 0x21D2550
	0x021D2544 MOV X0, X1
	0x021D2548 BL 0x1C5C684

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {14}
	010 Move X0, X2
	011 Move X21, X2
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X3, [X8+8]
	015 Move X0, X20
	016 Move X1, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X2, X31
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Call 0x21D26A4, X0, X1, X2
	023 Return X0

Method: System.Boolean SequenceEqual(System.Collections.Generic.IEnumerable`1<TSource> first, System.Collections.Generic.IEnumerable`1<TSource> second, System.Collections.Generic.IEqualityComparer`1<TSource> comparer)

Disassembly:
	0x021D26A4 CMP X11, X1
	0x021D26A8 B.EQ 0x21D26C8
	0x021D26AC SUBS X9, X9, 0x1
	0x021D26B0 ADD X10, X10, 0x10
	0x021D26B4 B.NE 0x21D26A0
	0x021D26B8 MOV X0, X19
	0x021D26BC MOV W2, W31
	0x021D26C0 BL 0x1C5C788
	0x021D26C4 B 0x21D26D4
	0x021D26C8 LDRSW X9, [X10]
	0x021D26CC ADD X8, X8, X9, 0x4, LSL
	0x021D26D0 ADD X0, X8, 0x138
	0x021D26D4 LDP X8, X1, [X0]
	0x021D26D8 MOV X0, X19
	0x021D26DC BLR X8
	0x021D26E0 LDR X8, [X21 + 0x38]
	0x021D26E4 MOV W23, W0
	0x021D26E8 LDR X1, [X8 + 0x30]
	0x021D26EC LDRB W8, [X1 + 0x135]
	0x021D26F0 TBNZ X8, 0x0, 0x21D2700
	0x021D26F4 MOV X0, X1
	0x021D26F8 BL 0x1C5C684
	0x021D26FC MOV X1, X0
	0x021D2700 LDR X8, [X20]
	0x021D2704 LDRH W9, [X8 + 0x12E]
	0x021D2708 CBZ X9, 0x21D272C
	0x021D270C LDR X10, [X8 + 0xB0]
	0x021D2710 ADD X10, X10, 0x8
	0x021D2714 LDUR X11, [X10 - 0x8]
	0x021D2718 CMP X11, X1
	0x021D271C B.EQ 0x21D273C
	0x021D2720 SUBS X9, X9, 0x1
	0x021D2724 ADD X10, X10, 0x10
	0x021D2728 B.NE 0x21D2714
	0x021D272C MOV X0, X20
	0x021D2730 MOV W2, W31
	0x021D2734 BL 0x1C5C788
	0x021D2738 B 0x21D2748
	0x021D273C LDRSW X9, [X10]
	0x021D2740 ADD X8, X8, X9, 0x4, LSL
	0x021D2744 ADD X0, X8, 0x138
	0x021D2748 LDP X8, X1, [X0]
	0x021D274C MOV X0, X20
	0x021D2750 BLR X8
	0x021D2754 CBZ X22, 0x21D296C
	0x021D2758 LDR X8, [X21 + 0x38]
	0x021D275C MOV W24, W0
	0x021D2760 LDR X1, [X8]
	0x021D2764 LDRB W8, [X1 + 0x135]
	0x021D2768 TBNZ X8, 0x0, 0x21D2778
	0x021D276C MOV X0, X1
	0x021D2770 BL 0x1C5C684
	0x021D2774 MOV X1, X0
	0x021D2778 LDR X8, [X22]
	0x021D277C LDRH W9, [X8 + 0x12E]
	0x021D2780 CBZ X9, 0x21D27A4
	0x021D2784 LDR X10, [X8 + 0xB0]
	0x021D2788 ADD X10, X10, 0x8
	0x021D278C LDUR X11, [X10 - 0x8]
	0x021D2790 CMP X11, X1
	0x021D2794 B.EQ 0x21D27B4
	0x021D2798 SUBS X9, X9, 0x1
	0x021D279C ADD X10, X10, 0x10
	0x021D27A0 B.NE 0x21D278C
	0x021D27A4 MOV X0, X22
	0x021D27A8 MOV W2, W31
	0x021D27AC BL 0x1C5C788
	0x021D27B0 B 0x21D27C0
	0x021D27B4 LDRSW X9, [X10]
	0x021D27B8 ADD X8, X8, X9, 0x4, LSL
	0x021D27BC ADD X0, X8, 0x138
	0x021D27C0 LDP X8, X3, [X0]
	0x021D27C4 MOV X0, X22
	0x021D27C8 MOV W1, W23
	0x021D27CC MOV W2, W24
	0x021D27D0 BLR X8
	0x021D27D4 TBNZ X0, 0x0, 0x21D25B4
	0x021D27D8 MOV X22, X31
	0x021D27DC MOVZ W23, 0xC
	0x021D27E0 CBNZ X20, 0x21D286C
	0x021D27E4 B 0x21D28CC
	0x021D27E8 CBZ X20, 0x21D29AC
	0x021D27EC LDR X8, [X20]
	0x021D27F0 LDR X1, [X25]
	0x021D27F4 LDRH W9, [X8 + 0x12E]
	0x021D27F8 CBZ X9, 0x21D281C
	0x021D27FC LDR X10, [X8 + 0xB0]
	0x021D2800 ADD X10, X10, 0x8
	0x021D2804 LDUR X11, [X10 - 0x8]
	0x021D2808 CMP X11, X1
	0x021D280C B.EQ 0x21D283C
	0x021D2810 SUBS X9, X9, 0x1
	0x021D2814 ADD X10, X10, 0x10
	0x021D2818 B.NE 0x21D2804
	0x021D281C MOV X0, X20
	0x021D2820 MOV W2, W31
	0x021D2824 BL 0x1C5C788
	0x021D2828 B 0x21D2848
	0x021D282C MOV X0, X21
	0x021D2830 BL 0x1C5C6E0
	0x021D2834 CBNZ X22, 0x21D24B8
	0x021D2838 B 0x21D24A8
	0x021D283C LDRSW X9, [X10]
	0x021D2840 ADD X8, X8, X9, 0x4, LSL
	0x021D2844 ADD X0, X8, 0x138
	0x021D2848 LDP X8, X1, [X0]
	0x021D284C MOV X0, X20
	0x021D2850 BLR X8
	0x021D2854 ANDS W31, W0, 0x1
	0x021D2858 MOVZ W8, 0xE
	0x021D285C MOVZ W9, 0xC
	0x021D2860 MOV X22, X31
	0x021D2864 CSEL W23, W9, W8, NE
	0x021D2868 CBZ X20, 0x21D28CC
	0x021D286C ADRP X10, 0x1F21000
	0x021D2870 LDR X8, [X20]
	0x021D2874 LDR X10, [X10 + 0xE00]
	0x021D2878 LDRH W9, [X8 + 0x12E]
	0x021D287C LDR X1, [X10]
	0x021D2880 CBZ X9, 0x21D28A4
	0x021D2884 LDR X10, [X8 + 0xB0]
	0x021D2888 ADD X10, X10, 0x8
	0x021D288C LDUR X11, [X10 - 0x8]
	0x021D2890 CMP X11, X1
	0x021D2894 B.EQ 0x21D28B4
	0x021D2898 SUBS X9, X9, 0x1
	0x021D289C ADD X10, X10, 0x10
	0x021D28A0 B.NE 0x21D288C
	0x021D28A4 MOV X0, X20
	0x021D28A8 MOV W2, W31
	0x021D28AC BL 0x1C5C788
	0x021D28B0 B 0x21D28C0
	0x021D28B4 LDRSW X9, [X10]
	0x021D28B8 ADD X8, X8, X9, 0x4, LSL
	0x021D28BC ADD X0, X8, 0x138
	0x021D28C0 LDP X8, X1, [X0]
	0x021D28C4 MOV X0, X20
	0x021D28C8 BLR X8
	0x021D28CC CBNZ X22, 0x21D29A4
	0x021D28D0 MOV X20, X31
	0x021D28D4 MOV X21, X31
	0x021D28D8 CBNZ W23, 0x21D28E4
	0x021D28DC MOV W23, W31
	0x021D28E0 MOV X21, X20
	0x021D28E4 CBZ X19, 0x21D2948
	0x021D28E8 ADRP X10, 0x1F21000
	0x021D28EC LDR X8, [X19]
	0x021D28F0 LDR X10, [X10 + 0xE00]
	0x021D28F4 LDRH W9, [X8 + 0x12E]
	0x021D28F8 LDR X1, [X10]
	0x021D28FC CBZ X9, 0x21D2920
	0x021D2900 LDR X10, [X8 + 0xB0]
	0x021D2904 ADD X10, X10, 0x8
	0x021D2908 LDUR X11, [X10 - 0x8]
	0x021D290C CMP X11, X1
	0x021D2910 B.EQ 0x21D2930
	0x021D2914 SUBS X9, X9, 0x1
	0x021D2918 ADD X10, X10, 0x10
	0x021D291C B.NE 0x21D2908
	0x021D2920 MOV X0, X19
	0x021D2924 MOV W2, W31
	0x021D2928 BL 0x1C5C788
	0x021D292C B 0x21D293C
	0x021D2930 LDRSW X9, [X10]
	0x021D2934 ADD X8, X8, X9, 0x4, LSL
	0x021D2938 ADD X0, X8, 0x138
	0x021D293C LDP X8, X1, [X0]
	0x021D2940 MOV X0, X19
	0x021D2944 BLR X8
	0x021D2948 CBNZ X21, 0x21D2998
	0x021D294C CMP W23, 0xC
	0x021D2950 LDP X20, X19, [X31 + 0x30]
	0x021D2954 LDP X22, X21, [X31 + 0x20]
	0x021D2958 LDP X24, X23, [X31 + 0x10]
	0x021D295C CSET W0, NE
	0x021D2960 LDP X30, X25, [X31], #0x40
	0x021D2964 RET
	0x021D2968 BL 0x1C16F20
	0x021D296C BL 0x1C16F20
	0x021D2970 ADRP X0, 0x1F49000
	0x021D2974 LDR X0, [X0 + 0x9C0]
	0x021D2978 B 0x21D2984
	0x021D297C ADRP X0, 0x1F49000
	0x021D2980 LDR X0, [X0 + 0x9C8]
	0x021D2984 BL 0x1C16D08
	0x021D2988 MOV X1, X31
	0x021D298C BL 0x35DEB28
	0x021D2990 MOV X1, X21
	0x021D2994 BL 0x1C16DEC
	0x021D2998 MOV X0, X21
	0x021D299C BL 0x1C16F18
	0x021D29A0 BL 0x1C16F20
	0x021D29A4 MOV X0, X22
	0x021D29A8 BL 0x1C16F18
	0x021D29AC BL 0x1C16F20
	0x021D29B0 B 0x21D29E4
	0x021D29B4 B 0x21D29E4
	0x021D29B8 B 0x21D29E4
	0x021D29BC B 0x21D29C0
	0x021D29C0 MOV X23, X1
	0x021D29C4 MOV X21, X0
	0x021D29C8 B 0x21D2A7C
	0x021D29CC B 0x21D29E4
	0x021D29D0 B 0x21D29E4
	0x021D29D4 B 0x21D29E4
	0x021D29D8 B 0x21D29E4
	0x021D29DC B 0x21D29E4
	0x021D29E0 B 0x21D29E4
	0x021D29E4 MOV X21, X0
	0x021D29E8 CMP W1, 0x1
	0x021D29EC B.NE 0x21D2A0C
	0x021D29F0 MOV X0, X21
	0x021D29F4 BL 0x3EB1AD0
	0x021D29F8 LDR X22, [X0]
	0x021D29FC BL 0x3EB1AE0
	0x021D2A00 MOV W23, W31
	0x021D2A04 CBNZ X20, 0x21D286C
	0x021D2A08 B 0x21D28CC
	0x021D2A0C MOV X23, X1
	0x021D2A10 MOV X22, X31
	0x021D2A14 CBZ X20, 0x21D2A78
	0x021D2A18 ADRP X10, 0x1F21000
	0x021D2A1C LDR X8, [X20]
	0x021D2A20 LDR X10, [X10 + 0xE00]
	0x021D2A24 LDRH W9, [X8 + 0x12E]
	0x021D2A28 LDR X1, [X10]
	0x021D2A2C CBZ X9, 0x21D2A50
	0x021D2A30 LDR X10, [X8 + 0xB0]
	0x021D2A34 ADD X10, X10, 0x8
	0x021D2A38 LDUR X11, [X10 - 0x8]
	0x021D2A3C CMP X11, X1
	0x021D2A40 B.EQ 0x21D2A60
	0x021D2A44 SUBS X9, X9, 0x1
	0x021D2A48 ADD X10, X10, 0x10
	0x021D2A4C B.NE 0x21D2A38
	0x021D2A50 MOV X0, X20
	0x021D2A54 MOV W2, W31
	0x021D2A58 BL 0x1C5C788
	0x021D2A5C B 0x21D2A6C
	0x021D2A60 LDRSW X9, [X10]
	0x021D2A64 ADD X8, X8, X9, 0x4, LSL
	0x021D2A68 ADD X0, X8, 0x138
	0x021D2A6C LDP X8, X1, [X0]
	0x021D2A70 MOV X0, X20
	0x021D2A74 BLR X8
	0x021D2A78 CBNZ X22, 0x21D2AA0
	0x021D2A7C CMP W23, 0x1
	0x021D2A80 B.NE 0x21D2A98
	0x021D2A84 MOV X0, X21
	0x021D2A88 BL 0x3EB1AD0
	0x021D2A8C LDR X20, [X0]
	0x021D2A90 BL 0x3EB1AE0
	0x021D2A94 B 0x21D28DC
	0x021D2A98 MOV X20, X31
	0x021D2A9C B 0x21D2ABC
	0x021D2AA0 MOV X0, X22
	0x021D2AA4 BL 0x1C16F18
	0x021D2AA8 MOV X23, X1
	0x021D2AAC MOV X21, X0
	0x021D2AB0 CBNZ X20, 0x21D2A18
	0x021D2AB4 B 0x21D2A78
	0x021D2AB8 MOV X21, X0
	0x021D2ABC CBZ X19, 0x21D2B20
	0x021D2AC0 ADRP X10, 0x1F21000
	0x021D2AC4 LDR X8, [X19]
	0x021D2AC8 LDR X10, [X10 + 0xE00]
	0x021D2ACC LDRH W9, [X8 + 0x12E]
	0x021D2AD0 LDR X1, [X10]
	0x021D2AD4 CBZ X9, 0x21D2AF8
	0x021D2AD8 LDR X10, [X8 + 0xB0]
	0x021D2ADC ADD X10, X10, 0x8
	0x021D2AE0 LDUR X11, [X10 - 0x8]
	0x021D2AE4 CMP X11, X1
	0x021D2AE8 B.EQ 0x21D2B08
	0x021D2AEC SUBS X9, X9, 0x1
	0x021D2AF0 ADD X10, X10, 0x10
	0x021D2AF4 B.NE 0x21D2AE0
	0x021D2AF8 MOV X0, X19
	0x021D2AFC MOV W2, W31
	0x021D2B00 BL 0x1C5C788
	0x021D2B04 B 0x21D2B14
	0x021D2B08 LDRSW X9, [X10]
	0x021D2B0C ADD X8, X8, X9, 0x4, LSL
	0x021D2B10 ADD X0, X8, 0x138
	0x021D2B14 LDP X8, X1, [X0]
	0x021D2B18 MOV X0, X19
	0x021D2B1C BLR X8
	0x021D2B20 CBNZ X20, 0x21D2B2C
	0x021D2B24 MOV X0, X21
	0x021D2B28 BL 0x1D2C690
	0x021D2B2C MOV X0, X20
	0x021D2B30 BL 0x1C16F18
	0x021D2B34 BL 0x1990590
	0x021D2B38 STP X30, X25, [X31 - 0x40]!
	0x021D2B3C STP X24, X23, [X31 + 0x10]
	0x021D2B40 STP X22, X21, [X31 + 0x20]
	0x021D2B44 STP X20, X19, [X31 + 0x30]
	0x021D2B48 LDR X8, [X3 + 0x38]
	0x021D2B4C MOV X21, X3
	0x021D2B50 MOV X22, X2
	0x021D2B54 MOV X20, X1
	0x021D2B58 MOV X19, X0
	0x021D2B5C CBNZ X8, 0x21D2B80
	0x021D2B60 ADRP X0, 0x1F21000
	0x021D2B64 LDR X0, [X0 + 0xE00]
	0x021D2B68 BL 0x1C16CF4
	0x021D2B6C ADRP X0, 0x1F21000
	0x021D2B70 LDR X0, [X0 + 0xE18]
	0x021D2B74 BL 0x1C16CF4
	0x021D2B78 LDR X8, [X21 + 0x38]
	0x021D2B7C CBZ X8, 0x21D2F08
	0x021D2B80 CBNZ X22, 0x21D2B94
	0x021D2B84 LDR X8, [X21 + 0x38]
	0x021D2B88 LDR X0, [X8 + 0x8]
	0x021D2B8C BL 0x211B0E8
	0x021D2B90 MOV X22, X0
	0x021D2B94 CBZ X19, 0x21D304C
	0x021D2B98 CBZ X20, 0x21D3058
	0x021D2B9C LDR X8, [X21 + 0x38]
	0x021D2BA0 LDR X1, [X8 + 0x20]
	0x021D2BA4 LDRB W8, [X1 + 0x135]
	0x021D2BA8 TBNZ X8, 0x0, 0x21D2BB8
	0x021D2BAC MOV X0, X1
	0x021D2BB0 BL 0x1C5C684
	0x021D2BB4 MOV X1, X0
	0x021D2BB8 LDR X8, [X19]
	0x021D2BBC LDRH W9, [X8 + 0x12E]
	0x021D2BC0 CBZ X9, 0x21D2BE4
	0x021D2BC4 LDR X10, [X8 + 0xB0]
	0x021D2BC8 ADD X10, X10, 0x8
	0x021D2BCC LDUR X11, [X10 - 0x8]
	0x021D2BD0 CMP X11, X1
	0x021D2BD4 B.EQ 0x21D2BF4
	0x021D2BD8 SUBS X9, X9, 0x1
	0x021D2BDC ADD X10, X10, 0x10
	0x021D2BE0 B.NE 0x21D2BCC
	0x021D2BE4 MOV X0, X19
	0x021D2BE8 MOV W2, W31
	0x021D2BEC BL 0x1C5C788
	0x021D2BF0 B 0x21D2C00
	0x021D2BF4 LDRSW X9, [X10]
	0x021D2BF8 ADD X8, X8, X9, 0x4, LSL
	0x021D2BFC ADD X0, X8, 0x138
	0x021D2C00 LDP X8, X1, [X0]
	0x021D2C04 MOV X0, X19
	0x021D2C08 BLR X8
	0x021D2C0C LDR X8, [X21 + 0x38]
	0x021D2C10 MOV X19, X0
	0x021D2C14 LDR X1, [X8 + 0x20]
	0x021D2C18 LDRB W8, [X1 + 0x135]
	0x021D2C1C TBNZ X8, 0x0, 0x21D2C2C
	0x021D2C20 MOV X0, X1
	0x021D2C24 BL 0x1C5C684
	0x021D2C28 MOV X1, X0
	0x021D2C2C LDR X8, [X20]
	0x021D2C30 LDRH W9, [X8 + 0x12E]
	0x021D2C34 CBZ X9, 0x21D2C58
	0x021D2C38 LDR X10, [X8 + 0xB0]
	0x021D2C3C ADD X10, X10, 0x8
	0x021D2C40 LDUR X11, [X10 - 0x8]
	0x021D2C44 CMP X11, X1
	0x021D2C48 B.EQ 0x21D2C68
	0x021D2C4C SUBS X9, X9, 0x1
	0x021D2C50 ADD X10, X10, 0x10
	0x021D2C54 B.NE 0x21D2C40
	0x021D2C58 MOV X0, X20
	0x021D2C5C MOV W2, W31
	0x021D2C60 BL 0x1C5C788
	0x021D2C64 B 0x21D2C74
	0x021D2C68 LDRSW X9, [X10]
	0x021D2C6C ADD X8, X8, X9, 0x4, LSL
	0x021D2C70 ADD X0, X8, 0x138
	0x021D2C74 LDP X8, X1, [X0]
	0x021D2C78 MOV X0, X20
	0x021D2C7C BLR X8
	0x021D2C80 MOV X20, X0
	0x021D2C84 CBZ X19, 0x21D307C
	0x021D2C88 ADRP X25, 0x1F21000
	0x021D2C8C LDR X25, [X25 + 0xE18]
	0x021D2C90 LDR X8, [X19]
	0x021D2C94 LDR X1, [X25]
	0x021D2C98 LDRH W9, [X8 + 0x12E]
	0x021D2C9C CBZ X9, 0x21D2CC0
	0x021D2CA0 LDR X10, [X8 + 0xB0]
	0x021D2CA4 ADD X10, X10, 0x8
	0x021D2CA8 LDUR X11, [X10 - 0x8]
	0x021D2CAC CMP X11, X1
	0x021D2CB0 B.EQ 0x21D2CD0
	0x021D2CB4 SUBS X9, X9, 0x1
	0x021D2CB8 ADD X10, X10, 0x10
	0x021D2CBC B.NE 0x21D2CA8
	0x021D2CC0 MOV X0, X19
	0x021D2CC4 MOV W2, W31
	0x021D2CC8 BL 0x1C5C788
	0x021D2CCC B 0x21D2CDC
	0x021D2CD0 LDRSW X9, [X10]
	0x021D2CD4 ADD X8, X8, X9, 0x4, LSL
	0x021D2CD8 ADD X0, X8, 0x138
	0x021D2CDC LDP X8, X1, [X0]
	0x021D2CE0 MOV X0, X19
	0x021D2CE4 BLR X8
	0x021D2CE8 TBZ X0, 0x0, 0x21D2EC4
	0x021D2CEC CBZ X20, 0x21D3044
	0x021D2CF0 LDR X8, [X20]
	0x021D2CF4 LDR X1, [X25]
	0x021D2CF8 LDRH W9, [X8 + 0x12E]
	0x021D2CFC CBZ X9, 0x21D2D20
	0x021D2D00 LDR X10, [X8 + 0xB0]
	0x021D2D04 ADD X10, X10, 0x8
	0x021D2D08 LDUR X11, [X10 - 0x8]
	0x021D2D0C CMP X11, X1
	0x021D2D10 B.EQ 0x21D2D30
	0x021D2D14 SUBS X9, X9, 0x1
	0x021D2D18 ADD X10, X10, 0x10
	0x021D2D1C B.NE 0x21D2D08
	0x021D2D20 MOV X0, X20
	0x021D2D24 MOV W2, W31
	0x021D2D28 BL 0x1C5C788
	0x021D2D2C B 0x21D2D3C
	0x021D2D30 LDRSW X9, [X10]
	0x021D2D34 ADD X8, X8, X9, 0x4, LSL
	0x021D2D38 ADD X0, X8, 0x138
	0x021D2D3C LDP X8, X1, [X0]
	0x021D2D40 MOV X0, X20
	0x021D2D44 BLR X8
	0x021D2D48 TBZ X0, 0x0, 0x21D2EB4
	0x021D2D4C LDR X8, [X21 + 0x38]
	0x021D2D50 LDR X1, [X8 + 0x30]
	0x021D2D54 LDRB W8, [X1 + 0x135]
	0x021D2D58 TBNZ X8, 0x0, 0x21D2D68
	0x021D2D5C MOV X0, X1
	0x021D2D60 BL 0x1C5C684
	0x021D2D64 MOV X1, X0
	0x021D2D68 LDR X8, [X19]
	0x021D2D6C LDRH W9, [X8 + 0x12E]
	0x021D2D70 CBZ X9, 0x21D2D94
	0x021D2D74 LDR X10, [X8 + 0xB0]
	0x021D2D78 ADD X10, X10, 0x8
	0x021D2D7C LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X8, [X3+56]
	010 Move X21, X3
	011 Move X22, X2
	012 Move X20, X1
	013 Move X19, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {25}
	016 Move X0, 0x1F22000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move X0, 0x1F22000
	020 Move X0, [X0+3608]
	021 Call 0x1C17CF4
	022 Move X8, [X21+56]
	023 Compare X8, 0
	024 JumpIfEqual {273}
	025 Compare X22, 0
	026 JumpIfNotEqual {31}
	027 Move X8, [X21+56]
	028 Move X0, [X8+8]
	029 Call 0x2119B64
	030 Move X22, X0
	031 Compare X19, 0
	032 JumpIfEqual {362}
	033 Compare X20, 0
	034 JumpIfEqual {364}
	035 Move X8, [X21+56]
	036 Move X1, [X8+32]
	037 Move W8, [X1+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {45}
	042 Move X0, X1
	043 Call 0x1C5D684
	044 Move X1, X0
	045 Move X8, [X19]
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Compare X9, 0
	048 JumpIfEqual {55}
	049 Move X10, [X8+176]
	050 Add X10, X10, 8
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X9, X9, 1
	054 Add X10, X10, 16
	055 Move X0, X19
	056 Move W2, W31
	057 Call 0x1C5D788
	058 NotImplemented "Instruction LDRSW not yet implemented."
	059 Add X8, X8, X9
	060 Add X0, X8, 312
	061 Move X8, [X0]
	062 Move X1, [X0+8]
	063 Move X0, X19
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X8, [X21+56]
	066 Move X19, X0
	067 Move X1, [X8+32]
	068 Move W8, [X1+309]
	069 Move TEMP, X8
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {76}
	073 Move X0, X1
	074 Call 0x1C5D684
	075 Move X1, X0
	076 Move X8, [X20]
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Compare X9, 0
	079 JumpIfEqual {86}
	080 Move X10, [X8+176]
	081 Add X10, X10, 8
	082 NotImplemented "Instruction LDUR not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Subtract X9, X9, 1
	085 Add X10, X10, 16
	086 Move X0, X20
	087 Move W2, W31
	088 Call 0x1C5D788
	089 NotImplemented "Instruction LDRSW not yet implemented."
	090 Add X8, X8, X9
	091 Add X0, X8, 312
	092 Move X8, [X0]
	093 Move X1, [X0+8]
	094 Move X0, X20
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move X20, X0
	097 Compare X19, 0
	098 JumpIfEqual {373}
	099 Move X25, 0x1F22000
	100 Move X25, [X25+3608]
	101 Move X8, [X19]
	102 Move X1, [X25]
	103 NotImplemented "Instruction LDRH not yet implemented."
	104 Compare X9, 0
	105 JumpIfEqual {112}
	106 Move X10, [X8+176]
	107 Add X10, X10, 8
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Subtract X9, X9, 1
	111 Add X10, X10, 16
	112 Move X0, X19
	113 Move W2, W31
	114 Call 0x1C5D788
	115 NotImplemented "Instruction LDRSW not yet implemented."
	116 Add X8, X8, X9
	117 Add X0, X8, 312
	118 Move X8, [X0]
	119 Move X1, [X0+8]
	120 Move X0, X19
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {257}
	126 Compare X20, 0
	127 JumpIfEqual {360}
	128 Move X8, [X20]
	129 Move X1, [X25]
	130 NotImplemented "Instruction LDRH not yet implemented."
	131 Compare X9, 0
	132 JumpIfEqual {139}
	133 Move X10, [X8+176]
	134 Add X10, X10, 8
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Subtract X9, X9, 1
	138 Add X10, X10, 16
	139 Move X0, X20
	140 Move W2, W31
	141 Call 0x1C5D788
	142 NotImplemented "Instruction LDRSW not yet implemented."
	143 Add X8, X8, X9
	144 Add X0, X8, 312
	145 Move X8, [X0]
	146 Move X1, [X0+8]
	147 Move X0, X20
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move TEMP, X0
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfNotEqual {253}
	153 Move X8, [X21+56]
	154 Move X1, [X8+48]
	155 Move W8, [X1+309]
	156 Move TEMP, X8
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfEqual {163}
	160 Move X0, X1
	161 Call 0x1C5D684
	162 Move X1, X0
	163 Move X8, [X19]
	164 NotImplemented "Instruction LDRH not yet implemented."
	165 Compare X9, 0
	166 JumpIfEqual {173}
	167 Move X10, [X8+176]
	168 Add X10, X10, 8
	169 NotImplemented "Instruction LDUR not yet implemented."
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Subtract X9, X9, 1
	172 Add X10, X10, 16
	173 Move X0, X19
	174 Move W2, W31
	175 Call 0x1C5D788
	176 NotImplemented "Instruction LDRSW not yet implemented."
	177 Add X8, X8, X9
	178 Add X0, X8, 312
	179 Move X8, [X0]
	180 Move X1, [X0+8]
	181 Move X0, X19
	182 NotImplemented "Instruction BLR not yet implemented."
	183 Move X8, [X21+56]
	184 Move W23, W0
	185 Move X1, [X8+48]
	186 Move W8, [X1+309]
	187 Move TEMP, X8
	188 And TEMP, TEMP, 1
	189 Compare TEMP, 1
	190 JumpIfEqual {194}
	191 Move X0, X1
	192 Call 0x1C5D684
	193 Move X1, X0
	194 Move X8, [X20]
	195 NotImplemented "Instruction LDRH not yet implemented."
	196 Compare X9, 0
	197 JumpIfEqual {204}
	198 Move X10, [X8+176]
	199 Add X10, X10, 8
	200 NotImplemented "Instruction LDUR not yet implemented."
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Subtract X9, X9, 1
	203 Add X10, X10, 16
	204 Move X0, X20
	205 Move W2, W31
	206 Call 0x1C5D788
	207 NotImplemented "Instruction LDRSW not yet implemented."
	208 Add X8, X8, X9
	209 Add X0, X8, 312
	210 Move X8, [X0]
	211 Move X1, [X0+8]
	212 Move X0, X20
	213 NotImplemented "Instruction BLR not yet implemented."
	214 Compare X22, 0
	215 JumpIfEqual {361}
	216 Move X8, [X21+56]
	217 Move W24, W0
	218 Move X1, [X8]
	219 Move W8, [X1+309]
	220 Move TEMP, X8
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfEqual {227}
	224 Move X0, X1
	225 Call 0x1C5D684
	226 Move X1, X0
	227 Move X8, [X22]
	228 NotImplemented "Instruction LDRH not yet implemented."
	229 Compare X9, 0
	230 JumpIfEqual {237}
	231 Move X10, [X8+176]
	232 Add X10, X10, 8
	233 NotImplemented "Instruction LDUR not yet implemented."
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Subtract X9, X9, 1
	236 Add X10, X10, 16
	237 Move X0, X22
	238 Move W2, W31
	239 Call 0x1C5D788
	240 NotImplemented "Instruction LDRSW not yet implemented."
	241 Add X8, X8, X9
	242 Add X0, X8, 312
	243 Move X8, [X0]
	244 Move X3, [X0+8]
	245 Move X0, X22
	246 Move W1, W23
	247 Move W2, W24
	248 NotImplemented "Instruction BLR not yet implemented."
	249 Move TEMP, X0
	250 And TEMP, TEMP, 1
	251 Compare TEMP, 1
	252 JumpIfEqual {101}
	253 Move X22, X31
	254 Move W23, 12
	255 Compare X20, 0
	256 JumpIfNotEqual {291}
	257 Compare X20, 0
	258 JumpIfEqual {376}
	259 Move X8, [X20]
	260 Move X1, [X25]
	261 NotImplemented "Instruction LDRH not yet implemented."
	262 Compare X9, 0
	263 JumpIfEqual {270}
	264 Move X10, [X8+176]
	265 Add X10, X10, 8
	266 NotImplemented "Instruction LDUR not yet implemented."
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Subtract X9, X9, 1
	269 Add X10, X10, 16
	270 Move X0, X20
	271 Move W2, W31
	272 Call 0x1C5D788
	273 Move X0, X21
	274 Call 0x1C5D6E0
	275 Compare X22, 0
	276 JumpIfNotEqual {31}
	277 NotImplemented "Instruction LDRSW not yet implemented."
	278 Add X8, X8, X9
	279 Add X0, X8, 312
	280 Move X8, [X0]
	281 Move X1, [X0+8]
	282 Move X0, X20
	283 NotImplemented "Instruction BLR not yet implemented."
	284 And W31, W0, 1
	285 Move W8, 14
	286 Move W9, 12
	287 Move X22, X31
	288 NotImplemented "Instruction CSEL not yet implemented."
	289 Compare X20, 0
	290 JumpIfEqual {314}
	291 Move X10, 0x1F22000
	292 Move X8, [X20]
	293 Move X10, [X10+3584]
	294 NotImplemented "Instruction LDRH not yet implemented."
	295 Move X1, [X10]
	296 Compare X9, 0
	297 JumpIfEqual {304}
	298 Move X10, [X8+176]
	299 Add X10, X10, 8
	300 NotImplemented "Instruction LDUR not yet implemented."
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Subtract X9, X9, 1
	303 Add X10, X10, 16
	304 Move X0, X20
	305 Move W2, W31
	306 Call 0x1C5D788
	307 NotImplemented "Instruction LDRSW not yet implemented."
	308 Add X8, X8, X9
	309 Add X0, X8, 312
	310 Move X8, [X0]
	311 Move X1, [X0+8]
	312 Move X0, X20
	313 NotImplemented "Instruction BLR not yet implemented."
	314 Compare X22, 0
	315 JumpIfNotEqual {374}
	316 Move X20, X31
	317 Move X21, X31
	318 Compare W23, 0
	319 JumpIfNotEqual {322}
	320 Move W23, W31
	321 Move X21, X20
	322 Compare X19, 0
	323 JumpIfEqual {347}
	324 Move X10, 0x1F22000
	325 Move X8, [X19]
	326 Move X10, [X10+3584]
	327 NotImplemented "Instruction LDRH not yet implemented."
	328 Move X1, [X10]
	329 Compare X9, 0
	330 JumpIfEqual {337}
	331 Move X10, [X8+176]
	332 Add X10, X10, 8
	333 NotImplemented "Instruction LDUR not yet implemented."
	334 NotImplemented "Instruction CMP not yet implemented."
	335 Subtract X9, X9, 1
	336 Add X10, X10, 16
	337 Move X0, X19
	338 Move W2, W31
	339 Call 0x1C5D788
	340 NotImplemented "Instruction LDRSW not yet implemented."
	341 Add X8, X8, X9
	342 Add X0, X8, 312
	343 Move X8, [X0]
	344 Move X1, [X0+8]
	345 Move X0, X19
	346 NotImplemented "Instruction BLR not yet implemented."
	347 Compare X21, 0
	348 JumpIfNotEqual {371}
	349 NotImplemented "Instruction CMP not yet implemented."
	350 Move X20, [X31+48]
	351 Move X19, [X31+56]
	352 Move X22, [X31+32]
	353 Move X21, [X31+40]
	354 Move X24, [X31+16]
	355 Move X23, [X31+24]
	356 NotImplemented "Instruction CSET not yet implemented."
	357 Move X30, [X31+64]
	358 Move X25, [X31+72]
	359 Return X0
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Move X0, 0x1F4A000
	363 Move X0, [X0+2496]
	364 Move X0, 0x1F4A000
	365 Move X0, [X0+2504]
	366 Call 0x1C17D08
	367 Move X1, X31
	368 Call Error.ArgumentNull, X0
	369 Move X1, X21
	370 Call 0x1C17DEC
	371 Move X0, X21
	372 Call 0x1C17F18
	373 Call 0x1C17F20
	374 Move X0, X22
	375 Call 0x1C17F18
	376 Call 0x1C17F20
	377 Move X23, X1
	378 Move X21, X0
	379 Move X21, X0
	380 NotImplemented "Instruction CMP not yet implemented."
	381 Move X0, X21
	382 Call 0x3EB2AD0
	383 Move X22, [X0]
	384 Call 0x3EB2AE0
	385 Move W23, W31
	386 Compare X20, 0
	387 JumpIfNotEqual {291}
	388 Move X23, X1
	389 Move X22, X31
	390 Compare X20, 0
	391 JumpIfEqual {415}
	392 Move X10, 0x1F22000
	393 Move X8, [X20]
	394 Move X10, [X10+3584]
	395 NotImplemented "Instruction LDRH not yet implemented."
	396 Move X1, [X10]
	397 Compare X9, 0
	398 JumpIfEqual {405}
	399 Move X10, [X8+176]
	400 Add X10, X10, 8
	401 NotImplemented "Instruction LDUR not yet implemented."
	402 NotImplemented "Instruction CMP not yet implemented."
	403 Subtract X9, X9, 1
	404 Add X10, X10, 16
	405 Move X0, X20
	406 Move W2, W31
	407 Call 0x1C5D788
	408 NotImplemented "Instruction LDRSW not yet implemented."
	409 Add X8, X8, X9
	410 Add X0, X8, 312
	411 Move X8, [X0]
	412 Move X1, [X0+8]
	413 Move X0, X20
	414 NotImplemented "Instruction BLR not yet implemented."
	415 Compare X22, 0
	416 JumpIfNotEqual {423}
	417 NotImplemented "Instruction CMP not yet implemented."
	418 Move X0, X21
	419 Call 0x3EB2AD0
	420 Move X20, [X0]
	421 Call 0x3EB2AE0
	422 Move X20, X31
	423 Move X0, X22
	424 Call 0x1C17F18
	425 Move X23, X1
	426 Move X21, X0
	427 Compare X20, 0
	428 JumpIfNotEqual {392}
	429 Move X21, X0
	430 Compare X19, 0
	431 JumpIfEqual {455}
	432 Move X10, 0x1F22000
	433 Move X8, [X19]
	434 Move X10, [X10+3584]
	435 NotImplemented "Instruction LDRH not yet implemented."
	436 Move X1, [X10]
	437 Compare X9, 0
	438 JumpIfEqual {445}
	439 Move X10, [X8+176]
	440 Add X10, X10, 8
	441 NotImplemented "Instruction LDUR not yet implemented."
	442 NotImplemented "Instruction CMP not yet implemented."
	443 Subtract X9, X9, 1
	444 Add X10, X10, 16
	445 Move X0, X19
	446 Move W2, W31
	447 Call 0x1C5D788
	448 NotImplemented "Instruction LDRSW not yet implemented."
	449 Add X8, X8, X9
	450 Add X0, X8, 312
	451 Move X8, [X0]
	452 Move X1, [X0+8]
	453 Move X0, X19
	454 NotImplemented "Instruction BLR not yet implemented."
	455 Compare X20, 0
	456 JumpIfNotEqual {459}
	457 Move X0, X21
	458 Call 0x1D2D690
	459 Move X0, X20
	460 Call 0x1C17F18
	461 Call 0x1991590

Method: System.Collections.Generic.IEnumerable`1<TSource> AsEnumerable(System.Collections.Generic.IEnumerable`1<TSource> source)

Disassembly:
	0x021B5428 TBNZ X8, 0x0, 0x21B5430

ISIL:
	001 Return X0

Method: TSource[] ToArray(System.Collections.Generic.IEnumerable`1<TSource> source)

Disassembly:
	0x021D611C LDR X10, [X8 + 0xB0]
	0x021D6120 ADD X10, X10, 0x8
	0x021D6124 LDUR X11, [X10 - 0x8]
	0x021D6128 CMP X11, X1
	0x021D612C B.EQ 0x21D614C
	0x021D6130 SUBS X9, X9, 0x1
	0x021D6134 ADD X10, X10, 0x10
	0x021D6138 B.NE 0x21D6124
	0x021D613C MOV X0, X20
	0x021D6140 MOV W2, W31
	0x021D6144 BL 0x1C5C788
	0x021D6148 B 0x21D6158
	0x021D614C LDRSW X9, [X10]
	0x021D6150 ADD X8, X8, X9, 0x4, LSL
	0x021D6154 ADD X0, X8, 0x138
	0x021D6158 LDP X8, X1, [X0]
	0x021D615C MOV X0, X20
	0x021D6160 BLR X8
	0x021D6164 CBNZ X21, 0x21D6170
	0x021D6168 MOV X0, X22
	0x021D616C BL 0x1D2C690
	0x021D6170 MOV X0, X21
	0x021D6174 BL 0x1C16F18
	0x021D6178 BL 0x1990590
	0x021D617C STP X30, X27, [X31 - 0x50]!
	0x021D6180 STP X26, X25, [X31 + 0x10]
	0x021D6184 STP X24, X23, [X31 + 0x20]
	0x021D6188 STP X22, X21, [X31 + 0x30]
	0x021D618C STP X20, X19, [X31 + 0x40]
	0x021D6190 LDR X8, [X4 + 0x38]
	0x021D6194 MOV X21, X4
	0x021D6198 MOV X24, X3
	0x021D619C MOV X22, X2
	0x021D61A0 MOV X23, X1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move X8, [X1+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {12}
	010 Move X0, X19
	011 Call 0x1C5D6E0
	012 Move [X31+16], X31
	013 Move [X31+24], X31
	014 Compare X20, 0
	015 JumpIfEqual {34}
	016 Move [X31], X31
	017 Move [X31+8], X31
	018 Move X8, [X19+56]
	019 Add X0, X31, 0
	020 Move X1, X20
	021 Move X2, [X8+16]
	022 Call Buffer`1<ApiProduct>..ctor, X0, X1
	023 Move V0, [X31]
	024 Add X0, X31, 16
	025 Move [X31+1], V0
	026 Move X8, [X19+56]
	027 Move X1, [X8+24]
	028 Call Buffer`1<ApiProduct>.ToArray, X0
	029 Move X20, [X31+48]
	030 Move X19, [X31+56]
	031 Move X30, [X31+32]
	032 Add X31, X31, 64
	033 Return X0
	034 Move X0, 0x1F29000
	035 Move X0, [X0+1408]
	036 Call 0x1C17D08
	037 Move X1, X31
	038 Call Error.ArgumentNull, X0
	039 Move X1, X19
	040 Call 0x1C17DEC

Method: System.Collections.Generic.List`1<TSource> ToList(System.Collections.Generic.IEnumerable`1<TSource> source)

Disassembly:
	0x021D8598 BL 0x1C5C6E0
	0x021D859C CBZ X20, 0x21D880C
	0x021D85A0 CBZ X19, 0x21D8818
	0x021D85A4 LDR X8, [X21 + 0x38]
	0x021D85A8 LDR X0, [X8 + 0x10]
	0x021D85AC LDRB W8, [X0 + 0x135]
	0x021D85B0 TBNZ X8, 0x0, 0x21D85B8
	0x021D85B4 BL 0x1C5C684
	0x021D85B8 LDR X8, [X20]
	0x021D85BC LDRB W10, [X0 + 0x130]
	0x021D85C0 LDRB W9, [X8 + 0x130]
	0x021D85C4 CMP W9, W10
	0x021D85C8 B.CC 0x21D85E0
	0x021D85CC LDR X11, [X8 + 0xC8]
	0x021D85D0 ADD X10, X11, X10, 0x3, LSL
	0x021D85D4 LDUR X10, [X10 - 0x8]
	0x021D85D8 CMP X10, X0
	0x021D85DC B.EQ 0x21D86E8
	0x021D85E0 LDR X8, [X21 + 0x38]
	0x021D85E4 LDR X1, [X8 + 0x20]
	0x021D85E8 LDRB W8, [X1 + 0x135]
	0x021D85EC TBNZ X8, 0x0, 0x21D85FC
	0x021D85F0 MOV X0, X1
	0x021D85F4 BL 0x1C5C684
	0x021D85F8 MOV X1, X0
	0x021D85FC MOV X0, X20
	0x021D8600 BL 0x1C16E00
	0x021D8604 LDR X8, [X21 + 0x38]
	0x021D8608 CBZ X0, 0x21D866C
	0x021D860C LDR X0, [X8 + 0x28]
	0x021D8610 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X19, X1
	006 Move X20, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {11}
	009 Move X0, X19
	010 Call 0x1C5D6E0
	011 Compare X20, 0
	012 JumpIfEqual {32}
	013 Move X8, [X19+56]
	014 Move X0, [X8+8]
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Call 0x1C17F10
	022 Move X8, [X19+56]
	023 Move X1, X20
	024 Move X19, X0
	025 Move X2, [X8+16]
	026 Call List`1<ValueTuple`2<Object, Object>>..ctor, X0, X1
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return X0
	032 Move X0, 0x1F27000
	033 Move X0, [X0+1408]
	034 Call 0x1C17D08
	035 Move X1, X31
	036 Call Error.ArgumentNull, X0
	037 Move X1, X19
	038 Call 0x1C17DEC

Method: System.Collections.Generic.Dictionary`2<TKey, TElement> ToDictionary(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource, TKey> keySelector, System.Func`2<TSource, TElement> elementSelector)

Disassembly:
	0x021D6BC0 ADRP X0, 0x1F45000
	0x021D6BC4 LDR X0, [X0 + 0x6B0]
	0x021D6BC8 B 0x21D6BD4
	0x021D6BCC ADRP X0, 0x1F45000
	0x021D6BD0 LDR X0, [X0 + 0x6B8]
	0x021D6BD4 BL 0x1C16D08
	0x021D6BD8 MOV X1, X31
	0x021D6BDC BL 0x35DEB28
	0x021D6BE0 MOV X1, X21
	0x021D6BE4 BL 0x1C16DEC
	0x021D6BE8 BL 0x1C16F20
	0x021D6BEC MOV X0, X21
	0x021D6BF0 BL 0x1C16F18
	0x021D6BF4 B 0x21D6C08
	0x021D6BF8 B 0x21D6C08
	0x021D6BFC B 0x21D6C08
	0x021D6C00 B 0x21D6C08
	0x021D6C04 B 0x21D6C08
	0x021D6C08 MOV X22, X0
	0x021D6C0C CMP W1, 0x1
	0x021D6C10 B.NE 0x21D6C28

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X19, X2
	008 Move X20, X1
	009 Move X21, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {16}
	012 Move X0, X3
	013 Move X22, X3
	014 Call 0x1C5D6E0
	015 Move X8, [X22+56]
	016 Move X4, [X8+24]
	017 Move X0, X21
	018 Move X1, X20
	019 Move X2, X19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X22, [X31+16]
	023 Move X21, [X31+24]
	024 Move X3, X31
	025 Move X30, [X31+48]
	026 Call 0x21D6DBC, X0, X1, X2, X3
	027 Return X0

Method: System.Collections.Generic.Dictionary`2<TKey, TElement> ToDictionary(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource, TKey> keySelector, System.Func`2<TSource, TElement> elementSelector, System.Collections.Generic.IEqualityComparer`1<TKey> comparer)

Disassembly:
	0x021D6DBC LDR X26, [X26 + 0xE18]
	0x021D6DC0 LDR X8, [X20]
	0x021D6DC4 LDR X1, [X26]
	0x021D6DC8 LDRH W9, [X8 + 0x12E]
	0x021D6DCC CBZ X9, 0x21D6DF0
	0x021D6DD0 LDR X10, [X8 + 0xB0]
	0x021D6DD4 ADD X10, X10, 0x8
	0x021D6DD8 LDUR X11, [X10 - 0x8]
	0x021D6DDC CMP X11, X1
	0x021D6DE0 B.EQ 0x21D6E00
	0x021D6DE4 SUBS X9, X9, 0x1
	0x021D6DE8 ADD X10, X10, 0x10
	0x021D6DEC B.NE 0x21D6DD8
	0x021D6DF0 MOV X0, X20
	0x021D6DF4 MOV W2, W31
	0x021D6DF8 BL 0x1C5C788
	0x021D6DFC B 0x21D6E0C
	0x021D6E00 LDRSW X9, [X10]
	0x021D6E04 ADD X8, X8, X9, 0x4, LSL
	0x021D6E08 ADD X0, X8, 0x138
	0x021D6E0C LDP X8, X1, [X0]
	0x021D6E10 MOV X0, X20
	0x021D6E14 BLR X8
	0x021D6E18 TBZ X0, 0x0, 0x21D6EE0
	0x021D6E1C LDR X8, [X21 + 0x38]
	0x021D6E20 LDR X1, [X8 + 0x38]
	0x021D6E24 LDRB W8, [X1 + 0x135]
	0x021D6E28 TBNZ X8, 0x0, 0x21D6E38
	0x021D6E2C MOV X0, X1
	0x021D6E30 BL 0x1C5C684
	0x021D6E34 MOV X1, X0
	0x021D6E38 LDR X8, [X20]
	0x021D6E3C LDRH W9, [X8 + 0x12E]
	0x021D6E40 CBZ X9, 0x21D6E64
	0x021D6E44 LDR X10, [X8 + 0xB0]
	0x021D6E48 ADD X10, X10, 0x8
	0x021D6E4C LDUR X11, [X10 - 0x8]
	0x021D6E50 CMP X11, X1
	0x021D6E54 B.EQ 0x21D6E74
	0x021D6E58 SUBS X9, X9, 0x1
	0x021D6E5C ADD X10, X10, 0x10
	0x021D6E60 B.NE 0x21D6E4C
	0x021D6E64 MOV X0, X20
	0x021D6E68 MOV W2, W31
	0x021D6E6C BL 0x1C5C788
	0x021D6E70 B 0x21D6E80
	0x021D6E74 LDRSW X9, [X10]
	0x021D6E78 ADD X8, X8, X9, 0x4, LSL
	0x021D6E7C ADD X0, X8, 0x138
	0x021D6E80 LDP X8, X1, [X0]
	0x021D6E84 MOV X0, X20
	0x021D6E88 BLR X8
	0x021D6E8C LDR X9, [X23 + 0x18]
	0x021D6E90 LDR X8, [X23 + 0x40]
	0x021D6E94 LDR X2, [X23 + 0x28]
	0x021D6E98 AND X25, X0, 0x0
	0x021D6E9C MOV X0, X8
	0x021D6EA0 MOV X1, X25
	0x021D6EA4 BLR X9
	0x021D6EA8 MOV W24, W0
	0x021D6EAC LDR X0, [X22 + 0x40]
	0x021D6EB0 LDR X8, [X22 + 0x18]
	0x021D6EB4 LDR X2, [X22 + 0x28]
	0x021D6EB8 MOV X1, X25
	0x021D6EBC BLR X8
	0x021D6EC0 CBZ X19, 0x21D6F68
	0x021D6EC4 LDR X8, [X21 + 0x38]
	0x021D6EC8 MOV X2, X0
	0x021D6ECC LDR X3, [X8 + 0x70]
	0x021D6ED0 MOV X0, X19
	0x021D6ED4 MOV W1, W24
	0x021D6ED8 BL 0x2A1368C
	0x021D6EDC B 0x21D6DC0
	0x021D6EE0 MOV X21, X31
	0x021D6EE4 CBZ X20, 0x21D6F48
	0x021D6EE8 ADRP X10, 0x1F1D000
	0x021D6EEC LDR X8, [X20]
	0x021D6EF0 LDR X10, [X10 + 0xE00]
	0x021D6EF4 LDRH W9, [X8 + 0x12E]
	0x021D6EF8 LDR X1, [X10]
	0x021D6EFC CBZ X9, 0x21D6F20
	0x021D6F00 LDR X10, [X8 + 0xB0]
	0x021D6F04 ADD X10, X10, 0x8
	0x021D6F08 LDUR X11, [X10 - 0x8]
	0x021D6F0C CMP X11, X1
	0x021D6F10 B.EQ 0x21D6F30
	0x021D6F14 SUBS X9, X9, 0x1
	0x021D6F18 ADD X10, X10, 0x10
	0x021D6F1C B.NE 0x21D6F08
	0x021D6F20 MOV X0, X20
	0x021D6F24 MOV W2, W31
	0x021D6F28 BL 0x1C5C788
	0x021D6F2C B 0x21D6F3C
	0x021D6F30 LDRSW X9, [X10]
	0x021D6F34 ADD X8, X8, X9, 0x4, LSL
	0x021D6F38 ADD X0, X8, 0x138
	0x021D6F3C LDP X8, X1, [X0]
	0x021D6F40 MOV X0, X20
	0x021D6F44 BLR X8
	0x021D6F48 CBNZ X21, 0x21D6FA4
	0x021D6F4C MOV X0, X19
	0x021D6F50 LDP X20, X19, [X31 + 0x40]
	0x021D6F54 LDP X22, X21, [X31 + 0x30]
	0x021D6F58 LDP X24, X23, [X31 + 0x20]
	0x021D6F5C LDP X26, X25, [X31 + 0x10]
	0x021D6F60 LDR X30, [X31], #0x50
	0x021D6F64 RET
	0x021D6F68 BL 0x1C16F20
	0x021D6F6C ADRP X0, 0x1F28000
	0x021D6F70 LDR X0, [X0 + 0x580]
	0x021D6F74 B 0x21D6F8C
	0x021D6F78 ADRP X0, 0x1F45000
	0x021D6F7C LDR X0, [X0 + 0x6B0]
	0x021D6F80 B 0x21D6F8C
	0x021D6F84 ADRP X0, 0x1F45000
	0x021D6F88 LDR X0, [X0 + 0x6B8]
	0x021D6F8C BL 0x1C16D08
	0x021D6F90 MOV X1, X31
	0x021D6F94 BL 0x35DEB28
	0x021D6F98 MOV X1, X21
	0x021D6F9C BL 0x1C16DEC
	0x021D6FA0 BL 0x1C16F20
	0x021D6FA4 MOV X0, X21
	0x021D6FA8 BL 0x1C16F18
	0x021D6FAC B 0x21D6FC0
	0x021D6FB0 B 0x21D6FC0
	0x021D6FB4 B 0x21D6FC0
	0x021D6FB8 B 0x21D6FC0
	0x021D6FBC B 0x21D6FC0
	0x021D6FC0 MOV X22, X0
	0x021D6FC4 CMP W1, 0x1
	0x021D6FC8 B.NE 0x21D6FE0
	0x021D6FCC MOV X0, X22
	0x021D6FD0 BL 0x3EB1AD0
	0x021D6FD4 LDR X21, [X0]
	0x021D6FD8 BL 0x3EB1AE0
	0x021D6FDC B 0x21D6EE4
	0x021D6FE0 MOV X21, X31
	0x021D6FE4 B 0x21D6FEC
	0x021D6FE8 MOV X22, X0
	0x021D6FEC CBZ X20, 0x21D7050
	0x021D6FF0 ADRP X10, 0x1F1D000
	0x021D6FF4 LDR X8, [X20]
	0x021D6FF8 LDR X10, [X10 + 0xE00]
	0x021D6FFC LDRH W9, [X8 + 0x12E]
	0x021D7000 LDR X1, [X10]
	0x021D7004 CBZ X9, 0x21D7028
	0x021D7008 LDR X10, [X8 + 0xB0]
	0x021D700C ADD X10, X10, 0x8
	0x021D7010 LDUR X11, [X10 - 0x8]
	0x021D7014 CMP X11, X1
	0x021D7018 B.EQ 0x21D7038
	0x021D701C SUBS X9, X9, 0x1
	0x021D7020 ADD X10, X10, 0x10
	0x021D7024 B.NE 0x21D7010
	0x021D7028 MOV X0, X20
	0x021D702C MOV W2, W31
	0x021D7030 BL 0x1C5C788
	0x021D7034 B 0x21D7044
	0x021D7038 LDRSW X9, [X10]
	0x021D703C ADD X8, X8, X9, 0x4, LSL
	0x021D7040 ADD X0, X8, 0x138
	0x021D7044 LDP X8, X1, [X0]
	0x021D7048 MOV X0, X20
	0x021D704C BLR X8
	0x021D7050 CBNZ X21, 0x21D705C
	0x021D7054 MOV X0, X22
	0x021D7058 BL 0x1D2C690
	0x021D705C MOV X0, X21
	0x021D7060 BL 0x1C16F18
	0x021D7064 BL 0x1990590
	0x021D7068 STP X29, X30, [X31 - 0x60]!
	0x021D706C STP X28, X27, [X31 + 0x10]
	0x021D7070 STP X26, X25, [X31 + 0x20]
	0x021D7074 STP X24, X23, [X31 + 0x30]
	0x021D7078 STP X22, X21, [X31 + 0x40]
	0x021D707C STP X20, X19, [X31 + 0x50]
	0x021D7080 ADD X29, X31, 0x0
	0x021D7084 SUB X31, X31, 0x40
	0x021D7088 STP X3, X2, [X29 - 0x30]
	0x021D708C STUR X1, [X29 - 0x20]
	0x021D7090 MRS X8, 0xC000
	0x021D7094 STUR X8, [X29 - 0x38]
	0x021D7098 LDR X8, [X8 + 0x28]
	0x021D709C MOV X19, X4
	0x021D70A0 MOV X21, X0
	0x021D70A4 STUR X8, [X29 - 0x8]
	0x021D70A8 LDR X20, [X4 + 0x38]
	0x021D70AC CBNZ X20, 0x21D70DC
	0x021D70B0 ADRP X0, 0x1F1C000
	0x021D70B4 LDR X0, [X0 + 0xE00]
	0x021D70B8 BL 0x1C16CF4
	0x021D70BC ADRP X0, 0x1F1C000
	0x021D70C0 LDR X0, [X0 + 0xE18]
	0x021D70C4 BL 0x1C16CF4
	0x021D70C8 LDR X20, [X19 + 0x38]
	0x021D70CC CBNZ X20, 0x21D70DC
	0x021D70D0 MOV X0, X19
	0x021D70D4 BL 0x1C5C6E0
	0x021D70D8 LDR X20, [X19 + 0x38]
	0x021D70DC LDR X8, [X20 + 0x48]
	0x021D70E0 LDR W24, [X8 + 0xFC]
	0x021D70E4 ADD X8, X31, 0x0
	0x021D70E8 ADD X9, X24, 0xF
	0x021D70EC AND X9, X9, 0x1FFFFFFFF
	0x021D70F0 SUB X25, X8, X9
	0x021D70F4 ADD X31, X25, 0x0
	0x021D70F8 ADD X8, X31, 0x0
	0x021D70FC SUB X26, X8, X9
	0x021D7100 ADD X31, X26, 0x0
	0x021D7104 ADD X8, X31, 0x0
	0x021D7108 SUB X27, X8, X9
	0x021D710C ADD X31, X27, 0x0
	0x021D7110 LDR X8, [X20 + 0x58]
	0x021D7114 ADD X10, X31, 0x0
	0x021D7118 LDR W8, [X8 + 0xFC]
	0x021D711C ADD X8, X8, 0xF
	0x021D7120 AND X8, X8, 0x1FFFFFFFF
	0x021D7124 SUB X28, X10, X8
	0x021D7128 ADD X31, X28, 0x0
	0x021D712C LDR X8, [X20 + 0x68]
	0x021D7130 ADD X10, X31, 0x0
	0x021D7134 LDR W8, [X8 + 0xFC]
	0x021D7138 ADD X8, X8, 0xF
	0x021D713C AND X8, X8, 0x1FFFFFFFF
	0x021D7140 SUB X22, X10, X8
	0x021D7144 ADD X31, X22, 0x0
	0x021D7148 ADD X8, X31, 0x0
	0x021D714C SUB X23, X8, X9
	0x021D7150 ADD X31, X23, 0x0
	0x021D7154 MOV X0, X23
	0x021D7158 MOV W1, W31
	0x021D715C MOV X2, X24
	0x021D7160 BL 0x3EB1B10
	0x021D7164 CBZ X21, 0x21D7498
	0x021D7168 LDUR X8, [X29 - 0x20]
	0x021D716C CBZ X8, 0x21D74A4
	0x021D7170 LDUR X8, [X29 - 0x28]
	0x021D7174 CBZ X8, 0x21D74B0
	0x021D7178 LDR X0, [X20 + 0x20]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X8, [X4+56]
	012 Move X21, X4
	013 Move X24, X3
	014 Move X22, X2
	015 Move X23, X1
	016 Move X20, X0
	017 Compare X8, 0
	018 JumpIfNotEqual {30}
	019 Move X0, 0x1F1E000
	020 Move X0, [X0+3584]
	021 Call 0x1C17CF4
	022 Move X0, 0x1F1E000
	023 Move X0, [X0+3608]
	024 Call 0x1C17CF4
	025 Move X8, [X21+56]
	026 Compare X8, 0
	027 JumpIfNotEqual {30}
	028 Move X0, X21
	029 Call 0x1C5D6E0
	030 Compare X20, 0
	031 JumpIfEqual {205}
	032 Compare X23, 0
	033 JumpIfEqual {207}
	034 Compare X22, 0
	035 JumpIfEqual {209}
	036 Move X8, [X21+56]
	037 Move X0, [X8+32]
	038 Move W8, [X0+309]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {44}
	043 Call 0x1C5D684
	044 Call 0x1C17F10
	045 Move X8, [X21+56]
	046 Move X1, X24
	047 Move X19, X0
	048 Move X2, [X8+40]
	049 Call Dictionary`2<Int32Enum, Object>..ctor, X0, X1
	050 Move X8, [X21+56]
	051 Move X1, [X8]
	052 Move W8, [X1+309]
	053 Move TEMP, X8
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {60}
	057 Move X0, X1
	058 Call 0x1C5D684
	059 Move X1, X0
	060 Move X8, [X20]
	061 NotImplemented "Instruction LDRH not yet implemented."
	062 Compare X9, 0
	063 JumpIfEqual {70}
	064 Move X10, [X8+176]
	065 Add X10, X10, 8
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Subtract X9, X9, 1
	069 Add X10, X10, 16
	070 Move X0, X20
	071 Move W2, W31
	072 Call 0x1C5D788
	073 NotImplemented "Instruction LDRSW not yet implemented."
	074 Add X8, X8, X9
	075 Add X0, X8, 312
	076 Move X8, [X0]
	077 Move X1, [X0+8]
	078 Move X0, X20
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X20, X0
	081 Compare X0, 0
	082 JumpIfEqual {216}
	083 Move X27, 0x1F1E000
	084 Move X27, [X27+3608]
	085 Move X8, [X20]
	086 Move X1, [X27]
	087 NotImplemented "Instruction LDRH not yet implemented."
	088 Compare X9, 0
	089 JumpIfEqual {96}
	090 Move X10, [X8+176]
	091 Add X10, X10, 8
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Subtract X9, X9, 1
	095 Add X10, X10, 16
	096 Move X0, X20
	097 Move W2, W31
	098 Call 0x1C5D788
	099 NotImplemented "Instruction LDRSW not yet implemented."
	100 Add X8, X8, X9
	101 Add X0, X8, 312
	102 Move X8, [X0]
	103 Move X1, [X0+8]
	104 Move X0, X20
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {163}
	110 Move X8, [X21+56]
	111 Move X1, [X8+56]
	112 Move W8, [X1+309]
	113 Move TEMP, X8
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfEqual {120}
	117 Move X0, X1
	118 Call 0x1C5D684
	119 Move X1, X0
	120 Move X8, [X20]
	121 NotImplemented "Instruction LDRH not yet implemented."
	122 Compare X9, 0
	123 JumpIfEqual {130}
	124 Move X10, [X8+176]
	125 Add X10, X10, 8
	126 NotImplemented "Instruction LDUR not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Subtract X9, X9, 1
	129 Add X10, X10, 16
	130 Move X0, X20
	131 Move W2, W31
	132 Call 0x1C5D788
	133 NotImplemented "Instruction LDRSW not yet implemented."
	134 Add X8, X8, X9
	135 Add X0, X8, 312
	136 Move X8, [X0]
	137 Move X1, [X0+8]
	138 Move X0, X20
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Move X25, X0
	141 Move X0, [X23+64]
	142 Move X8, [X23+24]
	143 Move X3, [X23+40]
	144 Move X26, X1
	145 Move X1, X25
	146 Move X2, X26
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Move W24, W0
	149 Move X0, [X22+64]
	150 Move X8, [X22+24]
	151 Move X3, [X22+40]
	152 Move X1, X25
	153 Move X2, X26
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Compare X19, 0
	156 JumpIfEqual {204}
	157 Move X8, [X21+56]
	158 Move X2, X0
	159 Move X3, [X8+112]
	160 Move X0, X19
	161 Move W1, W24
	162 Call Dictionary`2<Int32Enum, Object>.Add, X0, X1, X2
	163 Move X21, X31
	164 Compare X20, 0
	165 JumpIfEqual {190}
	166 Move X10, 0x1F1E000
	167 Move X8, [X20]
	168 Call 0x3EB27D4
	169 Return X0
	170 NotImplemented "Instruction LDRH not yet implemented."
	171 Move X1, [X10]
	172 Compare X9, 0
	173 JumpIfEqual {180}
	174 Move X10, [X8+176]
	175 Add X10, X10, 8
	176 NotImplemented "Instruction LDUR not yet implemented."
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Subtract X9, X9, 1
	179 Add X10, X10, 16
	180 Move X0, X20
	181 Move W2, W31
	182 Call 0x1C5D788
	183 NotImplemented "Instruction LDRSW not yet implemented."
	184 Add X8, X8, X9
	185 Add X0, X8, 312
	186 Move X8, [X0]
	187 Move X1, [X0+8]
	188 Move X0, X20
	189 NotImplemented "Instruction BLR not yet implemented."
	190 Compare X21, 0
	191 JumpIfNotEqual {217}
	192 Move X0, X19
	193 Move X20, [X31+64]
	194 Move X19, [X31+72]
	195 Move X22, [X31+48]
	196 Move X21, [X31+56]
	197 Move X24, [X31+32]
	198 Move X23, [X31+40]
	199 Move X26, [X31+16]
	200 Move X25, [X31+24]
	201 Move X30, [X31+80]
	202 Move X27, [X31+88]
	203 Return X0
	204 Call 0x1C17F20
	205 Move X0, 0x1F28000
	206 Move X0, [X0+1408]
	207 Move X0, 0x1F45000
	208 Move X0, [X0+1712]
	209 Move X0, 0x1F45000
	210 Move X0, [X0+1720]
	211 Call 0x1C17D08
	212 Move X1, X31
	213 Call Error.ArgumentNull, X0
	214 Move X1, X21
	215 Call 0x1C17DEC
	216 Call 0x1C17F20
	217 Move X0, X21
	218 Call 0x1C17F18
	219 Move X22, X0
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move X0, X22
	222 Call 0x3EB2AD0
	223 Move X21, [X0]
	224 Call 0x3EB2AE0
	225 Move X21, X31
	226 Move X22, X0
	227 Compare X20, 0
	228 JumpIfEqual {252}
	229 Move X10, 0x1F1D000
	230 Move X8, [X20]
	231 Move X10, [X10+3584]
	232 NotImplemented "Instruction LDRH not yet implemented."
	233 Move X1, [X10]
	234 Compare X9, 0
	235 JumpIfEqual {242}
	236 Move X10, [X8+176]
	237 Add X10, X10, 8
	238 NotImplemented "Instruction LDUR not yet implemented."
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Subtract X9, X9, 1
	241 Add X10, X10, 16
	242 Move X0, X20
	243 Move W2, W31
	244 Call 0x1C5D788
	245 NotImplemented "Instruction LDRSW not yet implemented."
	246 Add X8, X8, X9
	247 Add X0, X8, 312
	248 Move X8, [X0]
	249 Move X1, [X0+8]
	250 Move X0, X20
	251 NotImplemented "Instruction BLR not yet implemented."
	252 Compare X21, 0
	253 JumpIfNotEqual {256}
	254 Move X0, X22
	255 Call 0x1D2D690
	256 Move X0, X21
	257 Call 0x1C17F18
	258 Call 0x1991590

Method: System.Collections.Generic.IEnumerable`1<TResult> Cast(System.Collections.IEnumerable source)

Disassembly:
	0x021B5430 BL 0x1C16F10
	0x021B5434 LDR X8, [X19 + 0x38]
	0x021B5438 MOV X1, X22
	0x021B543C MOV X19, X0
	0x021B5440 LDP X2, X3, [X8 + 0x18]
	0x021B5444 BL 0x2D32B84
	0x021B5448 MOV X0, X19
	0x021B544C LDP X20, X19, [X31 + 0x20]
	0x021B5450 LDP X22, X21, [X31 + 0x10]
	0x021B5454 LDR X30, [X31], #0x30
	0x021B5458 RET
	0x021B545C BL 0x1C16F20
	0x021B5460 STR X30, [X31 - 0x30]!
	0x021B5464 STP X22, X21, [X31 + 0x10]
	0x021B5468 STP X20, X19, [X31 + 0x20]
	0x021B546C LDR X8, [X2 + 0x38]
	0x021B5470 MOV X19, X2
	0x021B5474 MOV X20, X1
	0x021B5478 MOV X21, X0
	0x021B547C CBNZ X8, 0x21B548C
	0x021B5480 MOV X0, X19
	0x021B5484 BL 0x1C5C6E0
	0x021B5488 LDR X8, [X19 + 0x38]
	0x021B548C LDR X0, [X8]
	0x021B5490 LDRB W8, [X0 + 0x135]
	0x021B5494 TBNZ X8, 0x0, 0x21B549C
	0x021B5498 BL 0x1C5C684
	0x021B549C BL 0x1C16F10
	0x021B54A0 LDR X8, [X19 + 0x38]
	0x021B54A4 MOV X22, X0
	0x021B54A8 LDR X1, [X8 + 0x8]
	0x021B54AC BL 0x237CF24
	0x021B54B0 CBZ X22, 0x21B54F8
	0x021B54B4 STP X21, X20, [X22 + 0x10]
	0x021B54B8 LDR X8, [X19 + 0x38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X19, X1
	006 Move X20, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {12}
	009 Move X0, X19
	010 Call 0x1C5D6E0
	011 Move X8, [X19+56]
	012 Move X1, [X8]
	013 Move W8, [X1+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {21}
	018 Move X0, X1
	019 Call 0x1C5D684
	020 Move X1, X0
	021 Move X0, X20
	022 Call 0x1C17E00
	023 Compare X0, 0
	024 JumpIfEqual {29}
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return X0
	029 Compare X20, 0
	030 JumpIfEqual {39}
	031 Move X8, [X19+56]
	032 Move X0, X20
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X1, [X8+8]
	036 Move X30, [X31+32]
	037 Call 0x21B5664, X0
	038 Return X0
	039 Move X0, 0x1F4A000
	040 Move X0, [X0+1408]
	041 Call 0x1C17D08
	042 Move X1, X31
	043 Call Error.ArgumentNull, X0
	044 Move X1, X19
	045 Call 0x1C17DEC

Method: System.Collections.Generic.IEnumerable`1<TResult> CastIterator(System.Collections.IEnumerable source)

Disassembly:
	0x021B5664 LDRB W8, [X0 + 0x135]
	0x021B5668 TBNZ X8, 0x0, 0x21B5670
	0x021B566C BL 0x1C5C684
	0x021B5670 BL 0x1C16F10
	0x021B5674 LDR X8, [X19 + 0x38]
	0x021B5678 MOV X22, X0
	0x021B567C LDR X1, [X8 + 0x8]
	0x021B5680 LDR X8, [X1]
	0x021B5684 BLR X8
	0x021B5688 CBZ X22, 0x21B56D4
	0x021B568C STP X21, X20, [X22 + 0x10]
	0x021B5690 LDR X8, [X19 + 0x38]
	0x021B5694 LDR X0, [X8 + 0x10]
	0x021B5698 LDRB W8, [X0 + 0x135]
	0x021B569C TBNZ X8, 0x0, 0x21B56A4
	0x021B56A0 BL 0x1C5C684
	0x021B56A4 BL 0x1C16F10
	0x021B56A8 LDR X8, [X19 + 0x38]
	0x021B56AC MOV X1, X22
	0x021B56B0 MOV X19, X0
	0x021B56B4 LDP X2, X3, [X8 + 0x18]
	0x021B56B8 LDR X8, [X3]
	0x021B56BC BLR X8
	0x021B56C0 MOV X0, X19
	0x021B56C4 LDP X20, X19, [X31 + 0x20]
	0x021B56C8 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X20, X1
	006 Move X19, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {12}
	009 Move X0, X20
	010 Call 0x1C5D6E0
	011 Move X8, [X20+56]
	012 Move X0, [X8]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Call 0x1C17F10
	020 Move X8, [X20+56]
	021 Move TEMP, 1
	022 Not TEMP
	023 Move W1, TEMP
	024 Move X20, X0
	025 Move X2, [X8+8]
	026 Call 0x23876A8, X0, X1
	027 Compare X20, 0
	028 JumpIfEqual {35}
	029 Move [X20+40], X19
	030 Move X0, X20
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0
	035 Call 0x1C17F20

Method: TSource First(System.Collections.Generic.IEnumerable`1<TSource> source)

Disassembly:
	0x021C328C ADD X8, X8, X9, 0x4, LSL
	0x021C3290 ADD X0, X8, 0x138
	0x021C3294 LDP X8, X1, [X0]
	0x021C3298 MOV X0, X20
	0x021C329C BLR X8
	0x021C32A0 MOV X22, X0
	0x021C32A4 MOV X21, X31
	0x021C32A8 MOVZ W23, 0x8
	0x021C32AC CBZ X20, 0x21C3310
	0x021C32B0 ADRP X10, 0x1F30000
	0x021C32B4 LDR X8, [X20]
	0x021C32B8 LDR X10, [X10 + 0xE00]
	0x021C32BC LDRH W9, [X8 + 0x12E]
	0x021C32C0 LDR X1, [X10]
	0x021C32C4 CBZ X9, 0x21C32E8
	0x021C32C8 LDR X10, [X8 + 0xB0]
	0x021C32CC ADD X10, X10, 0x8
	0x021C32D0 LDUR X11, [X10 - 0x8]
	0x021C32D4 CMP X11, X1
	0x021C32D8 B.EQ 0x21C32F8
	0x021C32DC SUBS X9, X9, 0x1
	0x021C32E0 ADD X10, X10, 0x10
	0x021C32E4 B.NE 0x21C32D0
	0x021C32E8 MOV X0, X20
	0x021C32EC MOV W2, W31
	0x021C32F0 BL 0x1C5C788
	0x021C32F4 B 0x21C3304
	0x021C32F8 LDRSW X9, [X10]
	0x021C32FC ADD X8, X8, X9, 0x4, LSL
	0x021C3300 ADD X0, X8, 0x138
	0x021C3304 LDP X8, X1, [X0]
	0x021C3308 MOV X0, X20
	0x021C330C BLR X8
	0x021C3310 CBNZ X21, 0x21C3360
	0x021C3314 CMP W23, 0x6
	0x021C3318 B.EQ 0x21C3334
	0x021C331C CBZ W23, 0x21C3334
	0x021C3320 MOV X0, X22
	0x021C3324 LDP X20, X19, [X31 + 0x20]
	0x021C3328 LDP X22, X21, [X31 + 0x10]
	0x021C332C LDP X30, X23, [X31], #0x30
	0x021C3330 RET
	0x021C3334 MOV X0, X31
	0x021C3338 BL 0x35DEC4C
	0x021C333C B 0x21C3354
	0x021C3340 ADRP X0, 0x1F3B000
	0x021C3344 LDR X0, [X0 + 0x580]
	0x021C3348 BL 0x1C16D08
	0x021C334C MOV X1, X31
	0x021C3350 BL 0x35DEB28
	0x021C3354 MOV X1, X19
	0x021C3358 BL 0x1C16DEC
	0x021C335C BL 0x1C16F20
	0x021C3360 MOV X0, X21
	0x021C3364 BL 0x1C16F18
	0x021C3368 B 0x21C3370
	0x021C336C B 0x21C3370
	0x021C3370 MOV X22, X0
	0x021C3374 CMP W1, 0x1
	0x021C3378 B.NE 0x21C339C
	0x021C337C MOV X0, X22
	0x021C3380 BL 0x3EB1AD0
	0x021C3384 LDR X21, [X0]
	0x021C3388 BL 0x3EB1AE0
	0x021C338C MOV W23, W31
	0x021C3390 MOV X22, X31
	0x021C3394 CBNZ X20, 0x21C32B0
	0x021C3398 B 0x21C3310
	0x021C339C MOV X21, X31
	0x021C33A0 B 0x21C33A8
	0x021C33A4 MOV X22, X0
	0x021C33A8 CBZ X20, 0x21C340C
	0x021C33AC ADRP X10, 0x1F30000
	0x021C33B0 LDR X8, [X20]
	0x021C33B4 LDR X10, [X10 + 0xE00]
	0x021C33B8 LDRH W9, [X8 + 0x12E]
	0x021C33BC LDR X1, [X10]
	0x021C33C0 CBZ X9, 0x21C33E4
	0x021C33C4 LDR X10, [X8 + 0xB0]
	0x021C33C8 ADD X10, X10, 0x8
	0x021C33CC LDUR X11, [X10 - 0x8]
	0x021C33D0 CMP X11, X1
	0x021C33D4 B.EQ 0x21C33F4
	0x021C33D8 SUBS X9, X9, 0x1
	0x021C33DC ADD X10, X10, 0x10
	0x021C33E0 B.NE 0x21C33CC
	0x021C33E4 MOV X0, X20
	0x021C33E8 MOV W2, W31
	0x021C33EC BL 0x1C5C788
	0x021C33F0 B 0x21C3400
	0x021C33F4 LDRSW X9, [X10]
	0x021C33F8 ADD X8, X8, X9, 0x4, LSL
	0x021C33FC ADD X0, X8, 0x138
	0x021C3400 LDP X8, X1, [X0]
	0x021C3404 MOV X0, X20
	0x021C3408 BLR X8
	0x021C340C CBNZ X21, 0x21C3418
	0x021C3410 MOV X0, X22
	0x021C3414 BL 0x1D2C690
	0x021C3418 MOV X0, X21
	0x021C341C BL 0x1C16F18
	0x021C3420 BL 0x1990590
	0x021C3424 SUB X31, X31, 0x90
	0x021C3428 STP X30, X23, [X31 + 0x60]
	0x021C342C STP X22, X21, [X31 + 0x70]
	0x021C3430 STP X20, X19, [X31 + 0x80]
	0x021C3434 LDR X9, [X1 + 0x38]
	0x021C3438 MOV X20, X1
	0x021C343C MOV X22, X0
	0x021C3440 MOV X19, X8
	0x021C3444 CBNZ X9, 0x21C3470
	0x021C3448 ADRP X0, 0x1F30000
	0x021C344C LDR X0, [X0 + 0xE00]
	0x021C3450 BL 0x1C16CF4
	0x021C3454 ADRP X0, 0x1F30000
	0x021C3458 LDR X0, [X0 + 0xE18]
	0x021C345C BL 0x1C16CF4
	0x021C3460 LDR X8, [X20 + 0x38]
	0x021C3464 CBNZ X8, 0x21C3470
	0x021C3468 MOV X0, X20
	0x021C346C BL 0x1C5C6E0
	0x021C3470 MOVI V0.2D, 0x0
	0x021C3474 STUR V0, [X31 + 0x4C]
	0x021C3478 STP V0, V0, [X31 + 0x30]
	0x021C347C CBZ X22, 0x21C37CC
	0x021C3480 LDR X8, [X20 + 0x38]
	0x021C3484 LDR X1, [X8 + 0x8]
	0x021C3488 LDRB W8, [X1 + 0x135]
	0x021C348C TBNZ X8, 0x0, 0x21C349C
	0x021C3490 MOV X0, X1
	0x021C3494 BL 0x1C5C684
	0x021C3498 MOV X1, X0
	0x021C349C MOV X0, X22
	0x021C34A0 BL 0x1C16E00
	0x021C34A4 CBZ X0, 0x21C3504
	0x021C34A8 LDR X8, [X20 + 0x38]
	0x021C34AC MOV X21, X0
	0x021C34B0 LDR X1, [X8 + 0x10]
	0x021C34B4 LDRB W8, [X1 + 0x135]
	0x021C34B8 TBNZ X8, 0x0, 0x21C34C8
	0x021C34BC MOV X0, X1
	0x021C34C0 BL 0x1C5C684
	0x021C34C4 MOV X1, X0
	0x021C34C8 LDR X8, [X21]
	0x021C34CC LDRH W9, [X8 + 0x12E]
	0x021C34D0 CBZ X9, 0x21C34F4
	0x021C34D4 LDR X10, [X8 + 0xB0]
	0x021C34D8 ADD X10, X10, 0x8
	0x021C34DC LDUR X11, [X10 - 0x8]
	0x021C34E0 CMP X11, X1
	0x021C34E4 B.EQ 0x21C355C
	0x021C34E8 SUBS X9, X9, 0x1
	0x021C34EC ADD X10, X10, 0x10
	0x021C34F0 B.NE 0x21C34DC
	0x021C34F4 MOV X0, X21
	0x021C34F8 MOV W2, W31
	0x021C34FC BL 0x1C5C788
	0x021C3500 B 0x21C3568
	0x021C3504 LDR X8, [X20 + 0x38]
	0x021C3508 LDR X1, [X8]
	0x021C350C LDRB W8, [X1 + 0x135]
	0x021C3510 TBNZ X8, 0x0, 0x21C3520
	0x021C3514 MOV X0, X1
	0x021C3518 BL 0x1C5C684
	0x021C351C MOV X1, X0
	0x021C3520 LDR X8, [X22]
	0x021C3524 LDRH W9, [X8 + 0x12E]
	0x021C3528 CBZ X9, 0x21C354C
	0x021C352C LDR X10, [X8 + 0xB0]
	0x021C3530 ADD X10, X10, 0x8
	0x021C3534 LDUR X11, [X10 - 0x8]
	0x021C3538 CMP X11, X1
	0x021C353C B.EQ 0x21C3600
	0x021C3540 SUBS X9, X9, 0x1
	0x021C3544 ADD X10, X10, 0x10
	0x021C3548 B.NE 0x21C3534
	0x021C354C MOV X0, X22
	0x021C3550 MOV W2, W31
	0x021C3554 BL 0x1C5C788
	0x021C3558 B 0x21C360C
	0x021C355C LDRSW X9, [X10]
	0x021C3560 ADD X8, X8, X9, 0x4, LSL
	0x021C3564 ADD X0, X8, 0x138
	0x021C3568 LDP X8, X1, [X0]
	0x021C356C MOV X0, X21
	0x021C3570 BLR X8
	0x021C3574 CMP W0, 0x1
	0x021C3578 B.LT 0x21C379C
	0x021C357C LDR X8, [X20 + 0x38]
	0x021C3580 LDR X1, [X8 + 0x8]
	0x021C3584 LDRB W8, [X1 + 0x135]
	0x021C3588 TBNZ X8, 0x0, 0x21C3598
	0x021C358C MOV X0, X1
	0x021C3590 BL 0x1C5C684
	0x021C3594 MOV X1, X0
	0x021C3598 LDR X8, [X21]
	0x021C359C LDRH W9, [X8 + 0x12E]
	0x021C35A0 CBZ X9, 0x21C35C4
	0x021C35A4 LDR X10, [X8 + 0xB0]
	0x021C35A8 ADD X10, X10, 0x8
	0x021C35AC LDUR X11, [X10 - 0x8]
	0x021C35B0 CMP X11, X1
	0x021C35B4 B.EQ 0x21C35D4
	0x021C35B8 SUBS X9, X9, 0x1
	0x021C35BC ADD X10, X10, 0x10
	0x021C35C0 B.NE 0x21C35AC
	0x021C35C4 MOV X0, X21
	0x021C35C8 MOV W2, W31
	0x021C35CC BL 0x1C5C788
	0x021C35D0 B 0x21C35E0
	0x021C35D4 LDRSW X9, [X10]
	0x021C35D8 ADD X8, X8, X9, 0x4, LSL
	0x021C35DC ADD X0, X8, 0x138
	0x021C35E0 LDP X9, X2, [X0]
	0x021C35E4 ADD X8, X31, 0x0
	0x021C35E8 MOV X0, X21
	0x021C35EC MOV W1, W31
	0x021C35F0 BLR X9
	0x021C35F4 LDUR V0, [X31 + 0x1C]
	0x021C35F8 LDP V2, V1, [X31]
	0x021C35FC B 0x21C37B0
	0x021C3600 LDRSW X9, [X10]
	0x021C3604 ADD X8, X8, X9, 0x4, LSL
	0x021C3608 ADD X0, X8, 0x138
	0x021C360C LDP X8, X1, [X0]
	0x021C3610 MOV X0, X22
	0x021C3614 BLR X8
	0x021C3618 MOV X21, X0
	0x021C361C CBZ X0, 0x21C37E8
	0x021C3620 ADRP X10, 0x1F30000
	0x021C3624 LDR X8, [X21]
	0x021C3628 LDR X10, [X10 + 0xE18]
	0x021C362C LDRH W9, [X8 + 0x12E]
	0x021C3630 LDR X1, [X10]
	0x021C3634 CBZ X9, 0x21C3658
	0x021C3638 LDR X10, [X8 + 0xB0]
	0x021C363C ADD X10, X10, 0x8
	0x021C3640 LDUR X11, [X10 - 0x8]
	0x021C3644 CMP X11, X1
	0x021C3648 B.EQ 0x21C3668
	0x021C364C SUBS X9, X9, 0x1
	0x021C3650 ADD X10, X10, 0x10
	0x021C3654 B.NE 0x21C3640
	0x021C3658 MOV X0, X21
	0x021C365C MOV W2, W31
	0x021C3660 BL 0x1C5C788
	0x021C3664 B 0x21C3674
	0x021C3668 LDRSW X9, [X10]
	0x021C366C ADD X8, X8, X9, 0x4, LSL
	0x021C3670 ADD X0, X8, 0x138
	0x021C3674 LDP X8, X1, [X0]
	0x021C3678 MOV X0, X21
	0x021C367C BLR X8
	0x021C3680 TBZ X0, 0x0, 0x21C36DC
	0x021C3684 LDR X8, [X20 + 0x38]
	0x021C3688 LDR X1, [X8 + 0x38]
	0x021C368C LDRB W8, [X1 + 0x135]
	0x021C3690 TBNZ X8, 0x0, 0x21C36A0
	0x021C3694 MOV X0, X1
	0x021C3698 BL 0x1C5C684
	0x021C369C MOV X1, X0
	0x021C36A0 LDR X8, [X21]
	0x021C36A4 LDRH W9, [X8 + 0x12E]
	0x021C36A8 CBZ X9, 0x21C36CC
	0x021C36AC LDR X10, [X8 + 0xB0]
	0x021C36B0 ADD X10, X10, 0x8
	0x021C36B4 LDUR X11, [X10 - 0x8]
	0x021C36B8 CMP X11, X1
	0x021C36BC B.EQ 0x21C36EC
	0x021C36C0 SUBS X9, X9, 0x1
	0x021C36C4 ADD X10, X10, 0x10
	0x021C36C8 B.NE 0x21C36B4
	0x021C36CC MOV X0, X21
	0x021C36D0 MOV W2, W31
	0x021C36D4 BL 0x1C5C788
	0x021C36D8 B 0x21C36F8
	0x021C36DC MOV X22, X31
	0x021C36E0 MOVZ W23, 0x6
	0x021C36E4 CBNZ X21, 0x21C3724
	0x021C36E8 B 0x21C3784
	0x021C36EC LDRSW X9, [X10]
	0x021C36F0 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X1+56]
	009 Move X19, X1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {24}
	013 Move X0, 0x1F31000
	014 Move X0, [X0+3584]
	015 Call 0x1C17CF4
	016 Move X0, 0x1F31000
	017 Move X0, [X0+3608]
	018 Call 0x1C17CF4
	019 Move X8, [X19+56]
	020 Compare X8, 0
	021 JumpIfNotEqual {24}
	022 Move X0, X19
	023 Call 0x1C5D6E0
	024 Compare X21, 0
	025 JumpIfEqual {247}
	026 Move X8, [X19+56]
	027 Move X1, [X8+8]
	028 Move W8, [X1+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {36}
	033 Move X0, X1
	034 Call 0x1C5D684
	035 Move X1, X0
	036 Move X0, X21
	037 Call 0x1C17E00
	038 Compare X0, 0
	039 JumpIfEqual {64}
	040 Move X8, [X19+56]
	041 Move X20, X0
	042 Move X1, [X8+16]
	043 Move W8, [X1+309]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {51}
	048 Move X0, X1
	049 Call 0x1C5D684
	050 Move X1, X0
	051 Move X8, [X20]
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move X0, X20
	062 Move W2, W31
	063 Call 0x1C5D788
	064 Move X8, [X19+56]
	065 Move X1, [X8]
	066 Move W8, [X1+309]
	067 Move TEMP, X8
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {74}
	071 Move X0, X1
	072 Call 0x1C5D684
	073 Move X1, X0
	074 Move X8, [X21]
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 Compare X9, 0
	077 JumpIfEqual {84}
	078 Move X10, [X8+176]
	079 Add X10, X10, 8
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract X9, X9, 1
	083 Add X10, X10, 16
	084 Move X0, X21
	085 Move W2, W31
	086 Call 0x1C5D788
	087 NotImplemented "Instruction LDRSW not yet implemented."
	088 Add X8, X8, X9
	089 Add X0, X8, 312
	090 Move X8, [X0]
	091 Move X1, [X0+8]
	092 Move X0, X20
	093 NotImplemented "Instruction BLR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X8, [X19+56]
	096 Move X1, [X8+8]
	097 Move W8, [X1+309]
	098 Move TEMP, X8
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfEqual {105}
	102 Move X0, X1
	103 Call 0x1C5D684
	104 Move X1, X0
	105 Move X8, [X20]
	106 NotImplemented "Instruction LDRH not yet implemented."
	107 Compare X9, 0
	108 JumpIfEqual {115}
	109 Move X10, [X8+176]
	110 Add X10, X10, 8
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Subtract X9, X9, 1
	114 Add X10, X10, 16
	115 Move X0, X20
	116 Move W2, W31
	117 Call 0x1C5D788
	118 NotImplemented "Instruction LDRSW not yet implemented."
	119 Add X8, X8, X9
	120 Add X0, X8, 312
	121 Move X8, [X0]
	122 Move X2, [X0+8]
	123 Move X0, X20
	124 Move W1, W31
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Move X23, X0
	127 Move X22, X1
	128 NotImplemented "Instruction LDRSW not yet implemented."
	129 Add X8, X8, X9
	130 Add X0, X8, 312
	131 Move X8, [X0]
	132 Move X1, [X0+8]
	133 Move X0, X21
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move X20, X0
	136 Compare X0, 0
	137 JumpIfEqual {254}
	138 Move X10, 0x1F31000
	139 Move X8, [X20]
	140 Move X10, [X10+3608]
	141 NotImplemented "Instruction LDRH not yet implemented."
	142 Move X1, [X10]
	143 Compare X9, 0
	144 JumpIfEqual {151}
	145 Move X10, [X8+176]
	146 Add X10, X10, 8
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Subtract X9, X9, 1
	150 Add X10, X10, 16
	151 Move X0, X20
	152 Move W2, W31
	153 Call 0x1C5D788
	154 NotImplemented "Instruction LDRSW not yet implemented."
	155 Add X8, X8, X9
	156 Add X0, X8, 312
	157 Move X8, [X0]
	158 Move X1, [X0+8]
	159 Move X0, X20
	160 NotImplemented "Instruction BLR not yet implemented."
	161 Move TEMP, X0
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfNotEqual {188}
	165 Move X8, [X19+56]
	166 Move X1, [X8+56]
	167 Move W8, [X1+309]
	168 Move TEMP, X8
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfEqual {175}
	172 Move X0, X1
	173 Call 0x1C5D684
	174 Move X1, X0
	175 Move X8, [X20]
	176 NotImplemented "Instruction LDRH not yet implemented."
	177 Compare X9, 0
	178 JumpIfEqual {185}
	179 Move X10, [X8+176]
	180 Add X10, X10, 8
	181 NotImplemented "Instruction LDUR not yet implemented."
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Subtract X9, X9, 1
	184 Add X10, X10, 16
	185 Move X0, X20
	186 Move W2, W31
	187 Call 0x1C5D788
	188 Move X21, X31
	189 Move X22, X31
	190 Move X23, X31
	191 Move W24, 6
	192 Compare X20, 0
	193 JumpIfNotEqual {207}
	194 NotImplemented "Instruction LDRSW not yet implemented."
	195 Add X8, X8, X9
	196 Add X0, X8, 312
	197 Move X8, [X0]
	198 Move X1, [X0+8]
	199 Move X0, X20
	200 NotImplemented "Instruction BLR not yet implemented."
	201 Move X23, X0
	202 Move X22, X1
	203 Move X21, X31
	204 Move W24, 8
	205 Compare X20, 0
	206 JumpIfEqual {230}
	207 Move X10, 0x1F31000
	208 Move X8, [X20]
	209 Move X10, [X10+3584]
	210 NotImplemented "Instruction LDRH not yet implemented."
	211 Move X1, [X10]
	212 Compare X9, 0
	213 JumpIfEqual {220}
	214 Move X10, [X8+176]
	215 Add X10, X10, 8
	216 NotImplemented "Instruction LDUR not yet implemented."
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Subtract X9, X9, 1
	219 Add X10, X10, 16
	220 Move X0, X20
	221 Move W2, W31
	222 Call 0x1C5D788
	223 NotImplemented "Instruction LDRSW not yet implemented."
	224 Add X8, X8, X9
	225 Add X0, X8, 312
	226 Move X8, [X0]
	227 Move X1, [X0+8]
	228 Move X0, X20
	229 NotImplemented "Instruction BLR not yet implemented."
	230 Compare X21, 0
	231 JumpIfNotEqual {255}
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Compare W24, 0
	234 JumpIfEqual {245}
	235 Move X0, X23
	236 Move X1, X22
	237 Move X20, [X31+48]
	238 Move X19, [X31+56]
	239 Move X22, [X31+32]
	240 Move X21, [X31+40]
	241 Move X24, [X31+16]
	242 Move X23, [X31+24]
	243 Move X30, [X31+64]
	244 Return X0
	245 Move X0, X31
	246 Call Error.NoElements
	247 Move X0, 0x1F3C000
	248 Move X0, [X0+1408]
	249 Call 0x1C17D08
	250 Move X1, X31
	251 Call Error.ArgumentNull, X0
	252 Move X1, X19
	253 Call 0x1C17DEC
	254 Call 0x1C17F20
	255 Move X0, X21
	256 Call 0x1C17F18
	257 Move X22, X0
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Move X0, X22
	260 Call 0x3EB2AD0
	261 Move X21, [X0]
	262 Call 0x3EB2AE0
	263 Move W24, W31
	264 Move X22, X31
	265 Move X23, X31
	266 Compare X20, 0
	267 JumpIfNotEqual {207}
	268 Move X21, X31
	269 Move X22, X0
	270 Compare X20, 0
	271 JumpIfEqual {295}
	272 Move X10, 0x1F31000
	273 Move X8, [X20]
	274 Move X10, [X10+3584]
	275 NotImplemented "Instruction LDRH not yet implemented."
	276 Move X1, [X10]
	277 Compare X9, 0
	278 JumpIfEqual {285}
	279 Move X10, [X8+176]
	280 Add X10, X10, 8
	281 NotImplemented "Instruction LDUR not yet implemented."
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Subtract X9, X9, 1
	284 Add X10, X10, 16
	285 Move X0, X20
	286 Move W2, W31
	287 Call 0x1C5D788
	288 NotImplemented "Instruction LDRSW not yet implemented."
	289 Add X8, X8, X9
	290 Add X0, X8, 312
	291 Move X8, [X0]
	292 Move X1, [X0+8]
	293 Move X0, X20
	294 NotImplemented "Instruction BLR not yet implemented."
	295 Compare X21, 0
	296 JumpIfNotEqual {299}
	297 Move X0, X22
	298 Call 0x1D2D690
	299 Move X0, X21
	300 Call 0x1C17F18
	301 Call 0x1991590

Method: TSource First(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource, System.Boolean> predicate)

Disassembly:
	0x021C4DC0 MOV X0, X20
	0x021C4DC4 BL 0x1C5C6E0
	0x021C4DC8 CBZ X21, 0x21C50E8
	0x021C4DCC LDR X8, [X20 + 0x38]
	0x021C4DD0 LDR X1, [X8 + 0x8]
	0x021C4DD4 LDRB W8, [X1 + 0x135]
	0x021C4DD8 TBNZ X8, 0x0, 0x21C4DE8
	0x021C4DDC MOV X0, X1
	0x021C4DE0 BL 0x1C5C684
	0x021C4DE4 MOV X1, X0
	0x021C4DE8 MOV X0, X21
	0x021C4DEC BL 0x1C16E00
	0x021C4DF0 CBZ X0, 0x21C4E50
	0x021C4DF4 LDR X8, [X20 + 0x38]
	0x021C4DF8 MOV X19, X0
	0x021C4DFC LDR X1, [X8 + 0x10]
	0x021C4E00 LDRB W8, [X1 + 0x135]
	0x021C4E04 TBNZ X8, 0x0, 0x21C4E14
	0x021C4E08 MOV X0, X1
	0x021C4E0C BL 0x1C5C684
	0x021C4E10 MOV X1, X0
	0x021C4E14 LDR X8, [X19]
	0x021C4E18 LDRH W9, [X8 + 0x12E]
	0x021C4E1C CBZ X9, 0x21C4E40
	0x021C4E20 LDR X10, [X8 + 0xB0]
	0x021C4E24 ADD X10, X10, 0x8
	0x021C4E28 LDUR X11, [X10 - 0x8]
	0x021C4E2C CMP X11, X1
	0x021C4E30 B.EQ 0x21C4EA8
	0x021C4E34 SUBS X9, X9, 0x1
	0x021C4E38 ADD X10, X10, 0x10
	0x021C4E3C B.NE 0x21C4E28
	0x021C4E40 MOV X0, X19
	0x021C4E44 MOV W2, W31
	0x021C4E48 BL 0x1C5C788
	0x021C4E4C B 0x21C4EB4
	0x021C4E50 LDR X8, [X20 + 0x38]
	0x021C4E54 LDR X1, [X8]
	0x021C4E58 LDRB W8, [X1 + 0x135]
	0x021C4E5C TBNZ X8, 0x0, 0x21C4E6C
	0x021C4E60 MOV X0, X1
	0x021C4E64 BL 0x1C5C684
	0x021C4E68 MOV X1, X0
	0x021C4E6C LDR X8, [X21]
	0x021C4E70 LDRH W9, [X8 + 0x12E]
	0x021C4E74 CBZ X9, 0x21C4E98
	0x021C4E78 LDR X10, [X8 + 0xB0]
	0x021C4E7C ADD X10, X10, 0x8
	0x021C4E80 LDUR X11, [X10 - 0x8]
	0x021C4E84 CMP X11, X1
	0x021C4E88 B.EQ 0x21C4F48
	0x021C4E8C SUBS X9, X9, 0x1
	0x021C4E90 ADD X10, X10, 0x10
	0x021C4E94 B.NE 0x21C4E80
	0x021C4E98 MOV X0, X21
	0x021C4E9C MOV W2, W31
	0x021C4EA0 BL 0x1C5C788
	0x021C4EA4 B 0x21C4F54
	0x021C4EA8 LDRSW X9, [X10]
	0x021C4EAC ADD X8, X8, X9, 0x4, LSL
	0x021C4EB0 ADD X0, X8, 0x138
	0x021C4EB4 LDP X8, X1, [X0]
	0x021C4EB8 MOV X0, X19
	0x021C4EBC BLR X8
	0x021C4EC0 CMP W0, 0x1
	0x021C4EC4 B.LT 0x21C50D0
	0x021C4EC8 LDR X8, [X20 + 0x38]
	0x021C4ECC LDR X1, [X8 + 0x8]
	0x021C4ED0 LDRB W8, [X1 + 0x135]
	0x021C4ED4 TBNZ X8, 0x0, 0x21C4EE4
	0x021C4ED8 MOV X0, X1
	0x021C4EDC BL 0x1C5C684
	0x021C4EE0 MOV X1, X0
	0x021C4EE4 LDR X8, [X19]
	0x021C4EE8 LDRH W9, [X8 + 0x12E]
	0x021C4EEC CBZ X9, 0x21C4F10
	0x021C4EF0 LDR X10, [X8 + 0xB0]
	0x021C4EF4 ADD X10, X10, 0x8
	0x021C4EF8 LDUR X11, [X10 - 0x8]
	0x021C4EFC CMP X11, X1
	0x021C4F00 B.EQ 0x21C4F20
	0x021C4F04 SUBS X9, X9, 0x1
	0x021C4F08 ADD X10, X10, 0x10
	0x021C4F0C B.NE 0x21C4EF8
	0x021C4F10 MOV X0, X19
	0x021C4F14 MOV W2, W31
	0x021C4F18 BL 0x1C5C788
	0x021C4F1C B 0x21C4F2C
	0x021C4F20 LDRSW X9, [X10]
	0x021C4F24 ADD X8, X8, X9, 0x4, LSL
	0x021C4F28 ADD X0, X8, 0x138
	0x021C4F2C LDP X3, X2, [X0]
	0x021C4F30 MOV X0, X19
	0x021C4F34 LDP X20, X19, [X31 + 0x20]
	0x021C4F38 LDP X22, X21, [X31 + 0x10]
	0x021C4F3C MOV W1, W31
	0x021C4F40 LDR X30, [X31], #0x30
	0x021C4F44 BR X3
	0x021C4F48 LDRSW X9, [X10]
	0x021C4F4C ADD X8, X8, X9, 0x4, LSL
	0x021C4F50 ADD X0, X8, 0x138
	0x021C4F54 LDP X8, X1, [X0]
	0x021C4F58 MOV X0, X21
	0x021C4F5C BLR X8
	0x021C4F60 MOV X19, X0
	0x021C4F64 CBZ X0, 0x21C5104
	0x021C4F68 ADRP X10, 0x1F2F000
	0x021C4F6C LDR X8, [X19]
	0x021C4F70 LDR X10, [X10 + 0xE18]
	0x021C4F74 LDRH W9, [X8 + 0x12E]
	0x021C4F78 LDR X1, [X10]
	0x021C4F7C CBZ X9, 0x21C4FA0
	0x021C4F80 LDR X10, [X8 + 0xB0]
	0x021C4F84 ADD X10, X10, 0x8
	0x021C4F88 LDUR X11, [X10 - 0x8]
	0x021C4F8C CMP X11, X1
	0x021C4F90 B.EQ 0x21C4FB0
	0x021C4F94 SUBS X9, X9, 0x1
	0x021C4F98 ADD X10, X10, 0x10
	0x021C4F9C B.NE 0x21C4F88
	0x021C4FA0 MOV X0, X19
	0x021C4FA4 MOV W2, W31
	0x021C4FA8 BL 0x1C5C788
	0x021C4FAC B 0x21C4FBC
	0x021C4FB0 LDRSW X9, [X10]
	0x021C4FB4 ADD X8, X8, X9, 0x4, LSL
	0x021C4FB8 ADD X0, X8, 0x138
	0x021C4FBC LDP X8, X1, [X0]
	0x021C4FC0 MOV X0, X19
	0x021C4FC4 BLR X8
	0x021C4FC8 TBZ X0, 0x0, 0x21C5024
	0x021C4FCC LDR X8, [X20 + 0x38]
	0x021C4FD0 LDR X1, [X8 + 0x38]
	0x021C4FD4 LDRB W8, [X1 + 0x135]
	0x021C4FD8 TBNZ X8, 0x0, 0x21C4FE8
	0x021C4FDC MOV X0, X1
	0x021C4FE0 BL 0x1C5C684
	0x021C4FE4 MOV X1, X0
	0x021C4FE8 LDR X8, [X19]
	0x021C4FEC LDRH W9, [X8 + 0x12E]
	0x021C4FF0 CBZ X9, 0x21C5014
	0x021C4FF4 LDR X10, [X8 + 0xB0]
	0x021C4FF8 ADD X10, X10, 0x8
	0x021C4FFC LDUR X11, [X10 - 0x8]
	0x021C5000 CMP X11, X1
	0x021C5004 B.EQ 0x21C5038
	0x021C5008 SUBS X9, X9, 0x1
	0x021C500C ADD X10, X10, 0x10
	0x021C5010 B.NE 0x21C4FFC
	0x021C5014 MOV X0, X19
	0x021C5018 MOV W2, W31
	0x021C501C BL 0x1C5C788
	0x021C5020 B 0x21C5044
	0x021C5024 MOV X20, X31
	0x021C5028 MOV X21, X31
	0x021C502C MOVZ W22, 0x6
	0x021C5030 CBNZ X19, 0x21C5060
	0x021C5034 B 0x21C50C0
	0x021C5038 LDRSW X9, [X10]
	0x021C503C ADD X8, X8, X9, 0x4, LSL
	0x021C5040 ADD X0, X8, 0x138
	0x021C5044 LDP X8, X1, [X0]
	0x021C5048 MOV X0, X19
	0x021C504C BLR X8
	0x021C5050 MOV X21, X0
	0x021C5054 MOV X20, X31
	0x021C5058 MOVZ W22, 0x8
	0x021C505C CBZ X19, 0x21C50C0
	0x021C5060 ADRP X10, 0x1F2E000
	0x021C5064 LDR X8, [X19]
	0x021C5068 LDR X10, [X10 + 0xE00]
	0x021C506C LDRH W9, [X8 + 0x12E]
	0x021C5070 LDR X1, [X10]
	0x021C5074 CBZ X9, 0x21C5098
	0x021C5078 LDR X10, [X8 + 0xB0]
	0x021C507C ADD X10, X10, 0x8
	0x021C5080 LDUR X11, [X10 - 0x8]
	0x021C5084 CMP X11, X1
	0x021C5088 B.EQ 0x21C50A8
	0x021C508C SUBS X9, X9, 0x1
	0x021C5090 ADD X10, X10, 0x10
	0x021C5094 B.NE 0x21C5080
	0x021C5098 MOV X0, X19
	0x021C509C MOV W2, W31
	0x021C50A0 BL 0x1C5C788
	0x021C50A4 B 0x21C50B4
	0x021C50A8 LDRSW X9, [X10]
	0x021C50AC ADD X8, X8, X9, 0x4, LSL
	0x021C50B0 ADD X0, X8, 0x138
	0x021C50B4 LDP X8, X1, [X0]
	0x021C50B8 MOV X0, X19
	0x021C50BC BLR X8
	0x021C50C0 CBNZ X20, 0x21C5108
	0x021C50C4 CMP W22, 0x6
	0x021C50C8 B.EQ 0x21C50D0
	0x021C50CC CBNZ W22, 0x21C50D4
	0x021C50D0 MOV X21, X31
	0x021C50D4 MOV X0, X21
	0x021C50D8 LDP X20, X19, [X31 + 0x20]
	0x021C50DC LDP X22, X21, [X31 + 0x10]
	0x021C50E0 LDR X30, [X31], #0x30
	0x021C50E4 RET
	0x021C50E8 ADRP X0, 0x1F39000
	0x021C50EC LDR X0, [X0 + 0x580]
	0x021C50F0 BL 0x1C16D08
	0x021C50F4 MOV X1, X31
	0x021C50F8 BL 0x35DEB28
	0x021C50FC MOV X1, X20
	0x021C5100 BL 0x1C16DEC
	0x021C5104 BL 0x1C16F20
	0x021C5108 MOV X0, X20
	0x021C510C BL 0x1C16F18
	0x021C5110 B 0x21C5118
	0x021C5114 B 0x21C5118
	0x021C5118 MOV X21, X0
	0x021C511C CMP W1, 0x1
	0x021C5120 B.NE 0x21C5144
	0x021C5124 MOV X0, X21
	0x021C5128 BL 0x3EB1AD0
	0x021C512C LDR X20, [X0]
	0x021C5130 BL 0x3EB1AE0
	0x021C5134 MOV W22, W31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X2+56]
	009 Move X19, X2
	010 Move X21, X1
	011 Move X20, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {25}
	014 Move X0, 0x1F30000
	015 Move X0, [X0+3584]
	016 Call 0x1C17CF4
	017 Move X0, 0x1F30000
	018 Move X0, [X0+3608]
	019 Call 0x1C17CF4
	020 Move X8, [X19+56]
	021 Compare X8, 0
	022 JumpIfNotEqual {25}
	023 Move X0, X19
	024 Call 0x1C5D6E0
	025 Compare X20, 0
	026 JumpIfEqual {181}
	027 Compare X21, 0
	028 JumpIfEqual {183}
	029 Move X8, [X19+56]
	030 Move X1, [X8]
	031 Move W8, [X1+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {39}
	036 Move X0, X1
	037 Call 0x1C5D684
	038 Move X1, X0
	039 Move X8, [X20]
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move X0, X20
	050 Move W2, W31
	051 Call 0x1C5D788
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 Add X8, X8, X9
	054 Add X0, X8, 312
	055 Move X8, [X0]
	056 Move X1, [X0+8]
	057 Move X0, X20
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X20, X0
	060 Compare X0, 0
	061 JumpIfEqual {190}
	062 Move X24, 0x1F30000
	063 Move X24, [X24+3608]
	064 Move X8, [X20]
	065 Move X1, [X24]
	066 NotImplemented "Instruction LDRH not yet implemented."
	067 Compare X9, 0
	068 JumpIfEqual {75}
	069 Move X10, [X8+176]
	070 Add X10, X10, 8
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Subtract X9, X9, 1
	074 Add X10, X10, 16
	075 Move X0, X20
	076 Move W2, W31
	077 Call 0x1C5D788
	078 NotImplemented "Instruction LDRSW not yet implemented."
	079 Add X8, X8, X9
	080 Add X0, X8, 312
	081 Move X8, [X0]
	082 Move X1, [X0+8]
	083 Move X0, X20
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {135}
	089 Move X8, [X19+56]
	090 Move X1, [X8+24]
	091 Move W8, [X1+309]
	092 Move TEMP, X8
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {99}
	096 Move X0, X1
	097 Call 0x1C5D684
	098 Move X1, X0
	099 Move X8, [X20]
	100 NotImplemented "Instruction LDRH not yet implemented."
	101 Compare X9, 0
	102 JumpIfEqual {109}
	103 Move X10, [X8+176]
	104 Add X10, X10, 8
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Subtract X9, X9, 1
	108 Add X10, X10, 16
	109 Move X0, X20
	110 Move W2, W31
	111 Call 0x1C5D788
	112 NotImplemented "Instruction LDRSW not yet implemented."
	113 Add X8, X8, X9
	114 Add X0, X8, 312
	115 Move X8, [X0]
	116 Move X1, [X0+8]
	117 Move X0, X20
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move X23, X0
	120 Move X0, [X21+64]
	121 Move X8, [X21+24]
	122 Move X3, [X21+40]
	123 Move X22, X1
	124 Move X1, X23
	125 Move X2, X22
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfNotEqual {64}
	131 Move X21, X31
	132 Move W24, 10
	133 Compare X20, 0
	134 JumpIfNotEqual {141}
	135 Move X21, X31
	136 Move X22, X31
	137 Move X23, X31
	138 Move W24, 11
	139 Compare X20, 0
	140 JumpIfEqual {164}
	141 Move X10, 0x1F30000
	142 Move X8, [X20]
	143 Move X10, [X10+3584]
	144 NotImplemented "Instruction LDRH not yet implemented."
	145 Move X1, [X10]
	146 Compare X9, 0
	147 JumpIfEqual {154}
	148 Move X10, [X8+176]
	149 Add X10, X10, 8
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Subtract X9, X9, 1
	153 Add X10, X10, 16
	154 Move X0, X20
	155 Move W2, W31
	156 Call 0x1C5D788
	157 NotImplemented "Instruction LDRSW not yet implemented."
	158 Add X8, X8, X9
	159 Add X0, X8, 312
	160 Move X8, [X0]
	161 Move X1, [X0+8]
	162 Move X0, X20
	163 NotImplemented "Instruction BLR not yet implemented."
	164 Compare X21, 0
	165 JumpIfNotEqual {191}
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Compare W24, 0
	168 JumpIfEqual {179}
	169 Move X0, X23
	170 Move X1, X22
	171 Move X20, [X31+48]
	172 Move X19, [X31+56]
	173 Move X22, [X31+32]
	174 Move X21, [X31+40]
	175 Move X24, [X31+16]
	176 Move X23, [X31+24]
	177 Move X30, [X31+64]
	178 Return X0
	179 Move X0, X31
	180 Call Error.NoMatch
	181 Move X0, 0x1F3A000
	182 Move X0, [X0+1408]
	183 Move X0, 0x1F57000
	184 Move X0, [X0+2288]
	185 Call 0x1C17D08
	186 Move X1, X31
	187 Call Error.ArgumentNull, X0
	188 Move X1, X19
	189 Call 0x1C17DEC
	190 Call 0x1C17F20
	191 Move X0, X21
	192 Call 0x1C17F18
	193 Move X22, X0
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move X0, X22
	196 Call 0x3EB2AD0
	197 Move X21, [X0]
	198 Call 0x3EB2AE0
	199 Move W24, W31
	200 Move X22, X31
	201 Move X23, X31
	202 Compare X20, 0
	203 JumpIfNotEqual {141}
	204 Move X21, X31
	205 Move X22, X0
	206 Compare X20, 0
	207 JumpIfEqual {231}
	208 Move X10, 0x1F2F000
	209 Move X8, [X20]
	210 Move X10, [X10+3584]
	211 NotImplemented "Instruction LDRH not yet implemented."
	212 Move X1, [X10]
	213 Compare X9, 0
	214 JumpIfEqual {221}
	215 Move X10, [X8+176]
	216 Add X10, X10, 8
	217 NotImplemented "Instruction LDUR not yet implemented."
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Subtract X9, X9, 1
	220 Add X10, X10, 16
	221 Move X0, X20
	222 Move W2, W31
	223 Call 0x1C5D788
	224 NotImplemented "Instruction LDRSW not yet implemented."
	225 Add X8, X8, X9
	226 Add X0, X8, 312
	227 Move X8, [X0]
	228 Move X1, [X0+8]
	229 Move X0, X20
	230 NotImplemented "Instruction BLR not yet implemented."
	231 Compare X21, 0
	232 JumpIfNotEqual {235}
	233 Move X0, X22
	234 Call 0x1D2D690
	235 Move X0, X21
	236 Call 0x1C17F18
	237 Call 0x1991590

Method: TSource FirstOrDefault(System.Collections.Generic.IEnumerable`1<TSource> source)

Disassembly:
	0x021C5928 B 0x21C5938
	0x021C592C LDRSW X9, [X10]
	0x021C5930 ADD X8, X8, X9, 0x4, LSL
	0x021C5934 ADD X0, X8, 0x138
	0x021C5938 LDP X8, X1, [X0]
	0x021C593C MOV X0, X19
	0x021C5940 BLR X8
	0x021C5944 CBNZ X20, 0x21C5998
	0x021C5948 CMP W21, 0xB
	0x021C594C B.EQ 0x21C5954
	0x021C5950 CBNZ W21, 0x21C5958
	0x021C5954 MOV X22, X31
	0x021C5958 MOV X0, X22
	0x021C595C LDP X20, X19, [X31 + 0x20]
	0x021C5960 LDP X22, X21, [X31 + 0x10]
	0x021C5964 LDP X30, X23, [X31], #0x30
	0x021C5968 RET
	0x021C596C ADRP X0, 0x1F39000
	0x021C5970 LDR X0, [X0 + 0x580]
	0x021C5974 B 0x21C5980
	0x021C5978 ADRP X0, 0x1F56000
	0x021C597C LDR X0, [X0 + 0x8F0]
	0x021C5980 BL 0x1C16D08
	0x021C5984 MOV X1, X31
	0x021C5988 BL 0x35DEB28
	0x021C598C MOV X1, X20
	0x021C5990 BL 0x1C16DEC
	0x021C5994 BL 0x1C16F20
	0x021C5998 MOV X0, X20
	0x021C599C BL 0x1C16F18
	0x021C59A0 B 0x21C59AC
	0x021C59A4 B 0x21C59AC
	0x021C59A8 B 0x21C59AC
	0x021C59AC MOV X21, X0
	0x021C59B0 CMP W1, 0x1
	0x021C59B4 B.NE 0x21C59D8
	0x021C59B8 MOV X0, X21
	0x021C59BC BL 0x3EB1AD0
	0x021C59C0 LDR X20, [X0]
	0x021C59C4 BL 0x3EB1AE0
	0x021C59C8 MOV W21, W31
	0x021C59CC MOV X22, X31
	0x021C59D0 CBNZ X19, 0x21C58E4
	0x021C59D4 B 0x21C5944
	0x021C59D8 MOV X20, X31
	0x021C59DC B 0x21C59E4
	0x021C59E0 MOV X21, X0
	0x021C59E4 CBZ X19, 0x21C5A48
	0x021C59E8 ADRP X10, 0x1F2E000
	0x021C59EC LDR X8, [X19]
	0x021C59F0 LDR X10, [X10 + 0xE00]
	0x021C59F4 LDRH W9, [X8 + 0x12E]
	0x021C59F8 LDR X1, [X10]
	0x021C59FC CBZ X9, 0x21C5A20
	0x021C5A00 LDR X10, [X8 + 0xB0]
	0x021C5A04 ADD X10, X10, 0x8
	0x021C5A08 LDUR X11, [X10 - 0x8]
	0x021C5A0C CMP X11, X1
	0x021C5A10 B.EQ 0x21C5A30
	0x021C5A14 SUBS X9, X9, 0x1
	0x021C5A18 ADD X10, X10, 0x10
	0x021C5A1C B.NE 0x21C5A08
	0x021C5A20 MOV X0, X19
	0x021C5A24 MOV W2, W31
	0x021C5A28 BL 0x1C5C788
	0x021C5A2C B 0x21C5A3C
	0x021C5A30 LDRSW X9, [X10]
	0x021C5A34 ADD X8, X8, X9, 0x4, LSL
	0x021C5A38 ADD X0, X8, 0x138
	0x021C5A3C LDP X8, X1, [X0]
	0x021C5A40 MOV X0, X19
	0x021C5A44 BLR X8
	0x021C5A48 CBNZ X20, 0x21C5A54
	0x021C5A4C MOV X0, X21
	0x021C5A50 BL 0x1D2C690
	0x021C5A54 MOV X0, X20
	0x021C5A58 BL 0x1C16F18
	0x021C5A5C BL 0x1990590
	0x021C5A60 STP X29, X30, [X31 - 0x60]!
	0x021C5A64 STP X28, X27, [X31 + 0x10]
	0x021C5A68 STP X26, X25, [X31 + 0x20]
	0x021C5A6C STP X24, X23, [X31 + 0x30]
	0x021C5A70 STP X22, X21, [X31 + 0x40]
	0x021C5A74 STP X20, X19, [X31 + 0x50]
	0x021C5A78 ADD X29, X31, 0x0
	0x021C5A7C SUB X31, X31, 0x30
	0x021C5A80 MRS X8, 0xC000
	0x021C5A84 STP X2, X8, [X29 - 0x28]
	0x021C5A88 LDR X8, [X8 + 0x28]
	0x021C5A8C MOV X25, X3
	0x021C5A90 MOV X26, X1
	0x021C5A94 MOV X24, X0
	0x021C5A98 STUR X8, [X29 - 0x8]
	0x021C5A9C LDR X19, [X3 + 0x38]
	0x021C5AA0 CBNZ X19, 0x21C5AD0
	0x021C5AA4 ADRP X0, 0x1F2E000
	0x021C5AA8 LDR X0, [X0 + 0xE00]
	0x021C5AAC BL 0x1C16CF4
	0x021C5AB0 ADRP X0, 0x1F2E000
	0x021C5AB4 LDR X0, [X0 + 0xE18]
	0x021C5AB8 BL 0x1C16CF4
	0x021C5ABC LDR X19, [X25 + 0x38]
	0x021C5AC0 CBNZ X19, 0x21C5AD0
	0x021C5AC4 MOV X0, X25
	0x021C5AC8 BL 0x1C5C6E0
	0x021C5ACC LDR X19, [X25 + 0x38]
	0x021C5AD0 LDR X8, [X19 + 0x28]
	0x021C5AD4 LDR W20, [X8 + 0xFC]
	0x021C5AD8 ADD X8, X31, 0x0
	0x021C5ADC ADD X9, X20, 0xF
	0x021C5AE0 AND X23, X9, 0x1FFFFFFFF
	0x021C5AE4 SUB X21, X8, X23
	0x021C5AE8 ADD X31, X21, 0x0
	0x021C5AEC ADD X8, X31, 0x0
	0x021C5AF0 SUB X27, X8, X23
	0x021C5AF4 ADD X31, X27, 0x0
	0x021C5AF8 ADD X8, X31, 0x0
	0x021C5AFC SUB X28, X8, X23
	0x021C5B00 ADD X31, X28, 0x0
	0x021C5B04 MOV X0, X28
	0x021C5B08 MOV W1, W31
	0x021C5B0C MOV X2, X20
	0x021C5B10 BL 0x3EB1B10
	0x021C5B14 ADD X8, X31, 0x0
	0x021C5B18 SUB X22, X8, X23
	0x021C5B1C ADD X31, X22, 0x0
	0x021C5B20 MOV X0, X22
	0x021C5B24 MOV W1, W31
	0x021C5B28 MOV X2, X20
	0x021C5B2C BL 0x3EB1B10
	0x021C5B30 ADD X8, X31, 0x0
	0x021C5B34 SUB X23, X8, X23
	0x021C5B38 ADD X31, X23, 0x0
	0x021C5B3C MOV X0, X23
	0x021C5B40 MOV W1, W31
	0x021C5B44 MOV X2, X20
	0x021C5B48 BL 0x3EB1B10
	0x021C5B4C CBZ X24, 0x21C5E28
	0x021C5B50 CBZ X26, 0x21C5E34
	0x021C5B54 LDR X1, [X19]
	0x021C5B58 LDRB W8, [X1 + 0x135]
	0x021C5B5C TBNZ X8, 0x0, 0x21C5B6C
	0x021C5B60 MOV X0, X1
	0x021C5B64 BL 0x1C5C684
	0x021C5B68 MOV X1, X0
	0x021C5B6C LDR X8, [X24]
	0x021C5B70 LDRH W9, [X8 + 0x12E]
	0x021C5B74 CBZ X9, 0x21C5B98
	0x021C5B78 LDR X10, [X8 + 0xB0]
	0x021C5B7C ADD X10, X10, 0x8
	0x021C5B80 LDUR X11, [X10 - 0x8]
	0x021C5B84 CMP X11, X1
	0x021C5B88 B.EQ 0x21C5BA8
	0x021C5B8C SUBS X9, X9, 0x1
	0x021C5B90 ADD X10, X10, 0x10
	0x021C5B94 B.NE 0x21C5B80
	0x021C5B98 MOV X0, X24
	0x021C5B9C MOV W2, W31
	0x021C5BA0 BL 0x1C5C788
	0x021C5BA4 B 0x21C5BB4
	0x021C5BA8 LDRSW X9, [X10]
	0x021C5BAC ADD X8, X8, X9, 0x4, LSL
	0x021C5BB0 ADD X0, X8, 0x138
	0x021C5BB4 LDP X8, X1, [X0]
	0x021C5BB8 MOV X0, X24
	0x021C5BBC BLR X8
	0x021C5BC0 MOV X24, X0
	0x021C5BC4 CBZ X0, 0x21C5E50
	0x021C5BC8 ADRP X19, 0x1F2E000
	0x021C5BCC LDR X19, [X19 + 0xE18]
	0x021C5BD0 LDR X8, [X24]
	0x021C5BD4 LDR X1, [X19]
	0x021C5BD8 LDRH W9, [X8 + 0x12E]
	0x021C5BDC CBZ X9, 0x21C5C00
	0x021C5BE0 LDR X10, [X8 + 0xB0]
	0x021C5BE4 ADD X10, X10, 0x8
	0x021C5BE8 LDUR X11, [X10 - 0x8]
	0x021C5BEC CMP X11, X1
	0x021C5BF0 B.EQ 0x21C5C10
	0x021C5BF4 SUBS X9, X9, 0x1
	0x021C5BF8 ADD X10, X10, 0x10
	0x021C5BFC B.NE 0x21C5BE8
	0x021C5C00 MOV X0, X24
	0x021C5C04 MOV W2, W31
	0x021C5C08 BL 0x1C5C788
	0x021C5C0C B 0x21C5C1C
	0x021C5C10 LDRSW X9, [X10]
	0x021C5C14 ADD X8, X8, X9, 0x4, LSL
	0x021C5C18 ADD X0, X8, 0x138
	0x021C5C1C LDP X8, X1, [X0]
	0x021C5C20 MOV X0, X24
	0x021C5C24 BLR X8
	0x021C5C28 TBZ X0, 0x0, 0x21C5D3C
	0x021C5C2C LDR X8, [X25 + 0x38]
	0x021C5C30 LDR X1, [X8 + 0x18]
	0x021C5C34 LDRB W8, [X1 + 0x135]
	0x021C5C38 TBNZ X8, 0x0, 0x21C5C48
	0x021C5C3C MOV X0, X1
	0x021C5C40 BL 0x1C5C684
	0x021C5C44 MOV X1, X0
	0x021C5C48 LDR X8, [X24]
	0x021C5C4C LDRH W9, [X8 + 0x12E]
	0x021C5C50 CBZ X9, 0x21C5C74
	0x021C5C54 LDR X10, [X8 + 0xB0]
	0x021C5C58 ADD X10, X10, 0x8
	0x021C5C5C LDUR X11, [X10 - 0x8]
	0x021C5C60 CMP X11, X1
	0x021C5C64 B.EQ 0x21C5C84
	0x021C5C68 SUBS X9, X9, 0x1
	0x021C5C6C ADD X10, X10, 0x10
	0x021C5C70 B.NE 0x21C5C5C
	0x021C5C74 MOV X0, X24
	0x021C5C78 MOV W2, W31
	0x021C5C7C BL 0x1C5C788
	0x021C5C80 B 0x21C5C90
	0x021C5C84 LDRSW X9, [X10]
	0x021C5C88 ADD X8, X8, X9, 0x4, LSL
	0x021C5C8C ADD X0, X8, 0x138
	0x021C5C90 STUR X21, [X29 - 0x18]
	0x021C5C94 LDR X1, [X0 + 0x8]
	0x021C5C98 LDP X0, X8, [X1 + 0x8]
	0x021C5C9C SUB X3, X29, 0x18
	0x021C5CA0 MOV X2, X24
	0x021C5CA4 MOV X4, X21
	0x021C5CA8 BLR X8
	0x021C5CAC MOV X0, X28
	0x021C5CB0 MOV X1, X21
	0x021C5CB4 MOV X2, X20
	0x021C5CB8 BL 0x3EB1AC0
	0x021C5CBC MOV X0, X27
	0x021C5CC0 MOV X1, X28
	0x021C5CC4 MOV X2, X20
	0x021C5CC8 BL 0x3EB1AC0
	0x021C5CCC LDR X8, [X25 + 0x38]
	0x021C5CD0 LDR X9, [X8 + 0x28]
	0x021C5CD4 LDR W10, [X9 + 0x28]
	0x021C5CD8 MOV X9, X27
	0x021C5CDC TBNZ X10, 0x1F, 0x21C5CE4
	0x021C5CE0 LDR X9, [X27]
	0x021C5CE4 LDR X1, [X8 + 0x30]
	0x021C5CE8 LDR X0, [X1]
	0x021C5CEC STUR X9, [X29 - 0x18]
	0x021C5CF0 LDR X8, [X1 + 0x10]
	0x021C5CF4 SUB X3, X29, 0x18
	0x021C5CF8 SUB X4, X29, 0xC
	0x021C5CFC MOV X2, X26
	0x021C5D00 BLR X8
	0x021C5D04 LDURB W8, [X29 - 0xC]
	0x021C5D08 CBZ W8, 0x21C5BD0
	0x021C5D0C MOV X0, X21
	0x021C5D10 MOV X1, X28
	0x021C5D14 MOV X2, X20
	0x021C5D18 BL 0x3EB1AC0
	0x021C5D1C MOV X0, X22
	0x021C5D20 MOV X1, X21
	0x021C5D24 MOV X2, X20
	0x021C5D28 BL 0x3EB1AC0
	0x021C5D2C MOV X25, X31
	0x021C5D30 MOVZ W19, 0xA
	0x021C5D34 CBNZ X24, 0x21C5D48
	0x021C5D38 B 0x21C5DA8
	0x021C5D3C MOV X25, X31
	0x021C5D40 MOVZ W19, 0xB
	0x021C5D44 CBZ X24, 0x21C5DA8
	0x021C5D48 ADRP X10, 0x1F2E000
	0x021C5D4C LDR X8, [X24]
	0x021C5D50 LDR X10, [X10 + 0xE00]
	0x021C5D54 LDRH W9, [X8 + 0x12E]
	0x021C5D58 LDR X1, [X10]
	0x021C5D5C CBZ X9, 0x21C5D80
	0x021C5D60 LDR X10, [X8 + 0xB0]
	0x021C5D64 ADD X10, X10, 0x8
	0x021C5D68 LDUR X11, [X10 - 0x8]
	0x021C5D6C CMP X11, X1
	0x021C5D70 B.EQ 0x21C5D90
	0x021C5D74 SUBS X9, X9, 0x1
	0x021C5D78 ADD X10, X10, 0x10
	0x021C5D7C B.NE 0x21C5D68
	0x021C5D80 MOV X0, X24

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X1+56]
	008 Move X20, X1
	009 Move X21, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {23}
	012 Move X0, 0x1F2F000
	013 Move X0, [X0+3584]
	014 Call 0x1C17CF4
	015 Move X0, 0x1F2F000
	016 Move X0, [X0+3608]
	017 Call 0x1C17CF4
	018 Move X8, [X20+56]
	019 Compare X8, 0
	020 JumpIfNotEqual {23}
	021 Move X0, X20
	022 Call 0x1C5D6E0
	023 Compare X21, 0
	024 JumpIfEqual {245}
	025 Move X8, [X20+56]
	026 Move X1, [X8+8]
	027 Move W8, [X1+309]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {35}
	032 Move X0, X1
	033 Call 0x1C5D684
	034 Move X1, X0
	035 Move X0, X21
	036 Call 0x1C17E00
	037 Compare X0, 0
	038 JumpIfEqual {63}
	039 Move X8, [X20+56]
	040 Move X19, X0
	041 Move X1, [X8+16]
	042 Move W8, [X1+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {50}
	047 Move X0, X1
	048 Call 0x1C5D684
	049 Move X1, X0
	050 Move X8, [X19]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Compare X9, 0
	053 JumpIfEqual {60}
	054 Move X10, [X8+176]
	055 Add X10, X10, 8
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Subtract X9, X9, 1
	059 Add X10, X10, 16
	060 Move X0, X19
	061 Move W2, W31
	062 Call 0x1C5D788
	063 Move X8, [X20+56]
	064 Move X1, [X8]
	065 Move W8, [X1+309]
	066 Move TEMP, X8
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {73}
	070 Move X0, X1
	071 Call 0x1C5D684
	072 Move X1, X0
	073 Move X8, [X21]
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Compare X9, 0
	076 JumpIfEqual {83}
	077 Move X10, [X8+176]
	078 Add X10, X10, 8
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Subtract X9, X9, 1
	082 Add X10, X10, 16
	083 Move X0, X21
	084 Move W2, W31
	085 Call 0x1C5D788
	086 NotImplemented "Instruction LDRSW not yet implemented."
	087 Add X8, X8, X9
	088 Add X0, X8, 312
	089 Move X8, [X0]
	090 Move X1, [X0+8]
	091 Move X0, X19
	092 NotImplemented "Instruction BLR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X8, [X20+56]
	095 Move X1, [X8+8]
	096 Move W8, [X1+309]
	097 Move TEMP, X8
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {104}
	101 Move X0, X1
	102 Call 0x1C5D684
	103 Move X1, X0
	104 Move X8, [X19]
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Compare X9, 0
	107 JumpIfEqual {114}
	108 Move X10, [X8+176]
	109 Add X10, X10, 8
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Subtract X9, X9, 1
	113 Add X10, X10, 16
	114 Move X0, X19
	115 Move W2, W31
	116 Call 0x1C5D788
	117 NotImplemented "Instruction LDRSW not yet implemented."
	118 Add X8, X8, X9
	119 Add X0, X8, 312
	120 Move X8, [X0]
	121 Move X2, [X0+8]
	122 Move X0, X19
	123 Move W1, W31
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move X21, X0
	126 Move X22, X1
	127 NotImplemented "Instruction LDRSW not yet implemented."
	128 Add X8, X8, X9
	129 Add X0, X8, 312
	130 Move X8, [X0]
	131 Move X1, [X0+8]
	132 Move X0, X21
	133 NotImplemented "Instruction BLR not yet implemented."
	134 Move X19, X0
	135 Compare X0, 0
	136 JumpIfEqual {252}
	137 Move X10, 0x1F2F000
	138 Move X8, [X19]
	139 Move X10, [X10+3608]
	140 NotImplemented "Instruction LDRH not yet implemented."
	141 Move X1, [X10]
	142 Compare X9, 0
	143 JumpIfEqual {150}
	144 Move X10, [X8+176]
	145 Add X10, X10, 8
	146 NotImplemented "Instruction LDUR not yet implemented."
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Subtract X9, X9, 1
	149 Add X10, X10, 16
	150 Move X0, X19
	151 Move W2, W31
	152 Call 0x1C5D788
	153 NotImplemented "Instruction LDRSW not yet implemented."
	154 Add X8, X8, X9
	155 Add X0, X8, 312
	156 Move X8, [X0]
	157 Move X1, [X0+8]
	158 Move X0, X19
	159 NotImplemented "Instruction BLR not yet implemented."
	160 Move TEMP, X0
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfNotEqual {187}
	164 Move X8, [X20+56]
	165 Move X1, [X8+56]
	166 Move W8, [X1+309]
	167 Move TEMP, X8
	168 And TEMP, TEMP, 1
	169 Compare TEMP, 1
	170 JumpIfEqual {174}
	171 Move X0, X1
	172 Call 0x1C5D684
	173 Move X1, X0
	174 Move X8, [X19]
	175 NotImplemented "Instruction LDRH not yet implemented."
	176 Compare X9, 0
	177 JumpIfEqual {184}
	178 Move X10, [X8+176]
	179 Add X10, X10, 8
	180 NotImplemented "Instruction LDUR not yet implemented."
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Subtract X9, X9, 1
	183 Add X10, X10, 16
	184 Move X0, X19
	185 Move W2, W31
	186 Call 0x1C5D788
	187 Move X20, X31
	188 Move X22, X31
	189 Move X21, X31
	190 Move W23, 6
	191 Compare X19, 0
	192 JumpIfNotEqual {206}
	193 NotImplemented "Instruction LDRSW not yet implemented."
	194 Add X8, X8, X9
	195 Add X0, X8, 312
	196 Move X8, [X0]
	197 Move X1, [X0+8]
	198 Move X0, X19
	199 NotImplemented "Instruction BLR not yet implemented."
	200 Move X21, X0
	201 Move X22, X1
	202 Move X20, X31
	203 Move W23, 8
	204 Compare X19, 0
	205 JumpIfEqual {229}
	206 Move X10, 0x1F2F000
	207 Move X8, [X19]
	208 Move X10, [X10+3584]
	209 NotImplemented "Instruction LDRH not yet implemented."
	210 Move X1, [X10]
	211 Compare X9, 0
	212 JumpIfEqual {219}
	213 Move X10, [X8+176]
	214 Add X10, X10, 8
	215 NotImplemented "Instruction LDUR not yet implemented."
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Subtract X9, X9, 1
	218 Add X10, X10, 16
	219 Move X0, X19
	220 Move W2, W31
	221 Call 0x1C5D788
	222 NotImplemented "Instruction LDRSW not yet implemented."
	223 Add X8, X8, X9
	224 Add X0, X8, 312
	225 Move X8, [X0]
	226 Move X1, [X0+8]
	227 Move X0, X19
	228 NotImplemented "Instruction BLR not yet implemented."
	229 Compare X20, 0
	230 JumpIfNotEqual {253}
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Compare W23, 0
	233 JumpIfNotEqual {236}
	234 Move X21, X31
	235 Move X22, X31
	236 Move X0, X21
	237 Move X1, X22
	238 Move X20, [X31+32]
	239 Move X19, [X31+40]
	240 Move X22, [X31+16]
	241 Move X21, [X31+24]
	242 Move X30, [X31+48]
	243 Move X23, [X31+56]
	244 Return X0
	245 Move X0, 0x1F3A000
	246 Move X0, [X0+1408]
	247 Call 0x1C17D08
	248 Move X1, X31
	249 Call Error.ArgumentNull, X0
	250 Move X1, X20
	251 Call 0x1C17DEC
	252 Call 0x1C17F20
	253 Move X0, X20
	254 Call 0x1C17F18
	255 Move X21, X0
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Move X0, X21
	258 Call 0x3EB2AD0
	259 Move X20, [X0]
	260 Call 0x3EB2AE0
	261 Move W23, W31
	262 Move X22, X31
	263 Move X21, X31
	264 Compare X19, 0
	265 JumpIfNotEqual {206}
	266 Move X20, X31
	267 Move X21, X0
	268 Compare X19, 0
	269 JumpIfEqual {293}
	270 Move X10, 0x1F2F000
	271 Move X8, [X19]
	272 Move X10, [X10+3584]
	273 NotImplemented "Instruction LDRH not yet implemented."
	274 Move X1, [X10]
	275 Compare X9, 0
	276 JumpIfEqual {283}
	277 Move X10, [X8+176]
	278 Add X10, X10, 8
	279 NotImplemented "Instruction LDUR not yet implemented."
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Subtract X9, X9, 1
	282 Add X10, X10, 16
	283 Move X0, X19
	284 Move W2, W31
	285 Call 0x1C5D788
	286 NotImplemented "Instruction LDRSW not yet implemented."
	287 Add X8, X8, X9
	288 Add X0, X8, 312
	289 Move X8, [X0]
	290 Move X1, [X0+8]
	291 Move X0, X19
	292 NotImplemented "Instruction BLR not yet implemented."
	293 Compare X20, 0
	294 JumpIfNotEqual {297}
	295 Move X0, X21
	296 Call 0x1D2D690
	297 Move X0, X20
	298 Call 0x1C17F18
	299 Call 0x1991590

Method: TSource FirstOrDefault(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource, System.Boolean> predicate)

Disassembly:
	0x021C670C B.NE 0x21C66F8
	0x021C6710 MOV X0, X20
	0x021C6714 MOV W2, W31
	0x021C6718 BL 0x1C5C788
	0x021C671C B 0x21C672C
	0x021C6720 LDRSW X9, [X10]
	0x021C6724 ADD X8, X8, X9, 0x4, LSL
	0x021C6728 ADD X0, X8, 0x138
	0x021C672C LDP X8, X1, [X0]
	0x021C6730 MOV X0, X20
	0x021C6734 BLR X8
	0x021C6738 TBZ X0, 0x0, 0x21C681C
	0x021C673C LDR X8, [X19 + 0x38]
	0x021C6740 LDR X1, [X8 + 0x38]
	0x021C6744 LDRB W8, [X1 + 0x135]
	0x021C6748 TBNZ X8, 0x0, 0x21C6758
	0x021C674C MOV X0, X1
	0x021C6750 BL 0x1C5C684
	0x021C6754 MOV X1, X0
	0x021C6758 LDR X8, [X20]
	0x021C675C LDRH W9, [X8 + 0x12E]
	0x021C6760 CBZ X9, 0x21C6784
	0x021C6764 LDR X10, [X8 + 0xB0]
	0x021C6768 ADD X10, X10, 0x8
	0x021C676C LDUR X11, [X10 - 0x8]
	0x021C6770 CMP X11, X1
	0x021C6774 B.EQ 0x21C6794
	0x021C6778 SUBS X9, X9, 0x1
	0x021C677C ADD X10, X10, 0x10
	0x021C6780 B.NE 0x21C676C
	0x021C6784 MOV X0, X20
	0x021C6788 MOV W2, W31
	0x021C678C BL 0x1C5C788
	0x021C6790 B 0x21C67A0
	0x021C6794 LDRSW X9, [X10]
	0x021C6798 ADD X8, X8, X9, 0x4, LSL
	0x021C679C ADD X0, X8, 0x138
	0x021C67A0 LDP X8, X1, [X0]
	0x021C67A4 MOV X0, X20
	0x021C67A8 BLR X8
	0x021C67AC LDR X8, [X20]
	0x021C67B0 LDR X1, [X21]
	0x021C67B4 MOV W22, W0
	0x021C67B8 LDRH W9, [X8 + 0x12E]
	0x021C67BC CBZ X9, 0x21C67E0
	0x021C67C0 LDR X10, [X8 + 0xB0]
	0x021C67C4 ADD X10, X10, 0x8
	0x021C67C8 LDUR X11, [X10 - 0x8]
	0x021C67CC CMP X11, X1
	0x021C67D0 B.EQ 0x21C67F0
	0x021C67D4 SUBS X9, X9, 0x1
	0x021C67D8 ADD X10, X10, 0x10
	0x021C67DC B.NE 0x21C67C8
	0x021C67E0 MOV X0, X20
	0x021C67E4 MOV W2, W31
	0x021C67E8 BL 0x1C5C788
	0x021C67EC B 0x21C67FC
	0x021C67F0 LDRSW X9, [X10]
	0x021C67F4 ADD X8, X8, X9, 0x4, LSL
	0x021C67F8 ADD X0, X8, 0x138
	0x021C67FC LDP X8, X1, [X0]
	0x021C6800 MOV X0, X20
	0x021C6804 BLR X8
	0x021C6808 TBNZ X0, 0x0, 0x21C673C
	0x021C680C MOV X21, X31
	0x021C6810 MOVZ W23, 0x9
	0x021C6814 CBNZ X20, 0x21C682C
	0x021C6818 B 0x21C688C
	0x021C681C MOV X21, X31
	0x021C6820 MOV W22, W31
	0x021C6824 MOVZ W23, 0x6
	0x021C6828 CBZ X20, 0x21C688C
	0x021C682C ADRP X10, 0x1F2D000
	0x021C6830 LDR X8, [X20]
	0x021C6834 LDR X10, [X10 + 0xE00]
	0x021C6838 LDRH W9, [X8 + 0x12E]
	0x021C683C LDR X1, [X10]
	0x021C6840 CBZ X9, 0x21C6864
	0x021C6844 LDR X10, [X8 + 0xB0]
	0x021C6848 ADD X10, X10, 0x8
	0x021C684C LDUR X11, [X10 - 0x8]
	0x021C6850 CMP X11, X1
	0x021C6854 B.EQ 0x21C6874
	0x021C6858 SUBS X9, X9, 0x1
	0x021C685C ADD X10, X10, 0x10
	0x021C6860 B.NE 0x21C684C
	0x021C6864 MOV X0, X20
	0x021C6868 MOV W2, W31
	0x021C686C BL 0x1C5C788
	0x021C6870 B 0x21C6880
	0x021C6874 LDRSW X9, [X10]
	0x021C6878 ADD X8, X8, X9, 0x4, LSL
	0x021C687C ADD X0, X8, 0x138
	0x021C6880 LDP X8, X1, [X0]
	0x021C6884 MOV X0, X20
	0x021C6888 BLR X8
	0x021C688C CBNZ X21, 0x21C68DC
	0x021C6890 CMP W23, 0x6
	0x021C6894 B.EQ 0x21C68B0
	0x021C6898 CBZ W23, 0x21C68B0
	0x021C689C MOV W0, W22
	0x021C68A0 LDP X20, X19, [X31 + 0x20]
	0x021C68A4 LDP X22, X21, [X31 + 0x10]
	0x021C68A8 LDP X30, X23, [X31], #0x30
	0x021C68AC RET
	0x021C68B0 MOV X0, X31
	0x021C68B4 BL 0x35DEC4C
	0x021C68B8 B 0x21C68D0
	0x021C68BC ADRP X0, 0x1F38000
	0x021C68C0 LDR X0, [X0 + 0x580]
	0x021C68C4 BL 0x1C16D08
	0x021C68C8 MOV X1, X31
	0x021C68CC BL 0x35DEB28
	0x021C68D0 MOV X1, X19
	0x021C68D4 BL 0x1C16DEC
	0x021C68D8 BL 0x1C16F20
	0x021C68DC MOV X0, X21
	0x021C68E0 BL 0x1C16F18
	0x021C68E4 B 0x21C68F0
	0x021C68E8 B 0x21C68F0
	0x021C68EC B 0x21C68F0
	0x021C68F0 MOV X22, X0
	0x021C68F4 CMP W1, 0x1
	0x021C68F8 B.NE 0x21C691C
	0x021C68FC MOV X0, X22
	0x021C6900 BL 0x3EB1AD0
	0x021C6904 LDR X21, [X0]
	0x021C6908 BL 0x3EB1AE0
	0x021C690C MOV W23, W31
	0x021C6910 MOV W22, W31
	0x021C6914 CBNZ X20, 0x21C682C
	0x021C6918 B 0x21C688C
	0x021C691C MOV X21, X31
	0x021C6920 B 0x21C6928
	0x021C6924 MOV X22, X0
	0x021C6928 CBZ X20, 0x21C698C
	0x021C692C ADRP X10, 0x1F2D000
	0x021C6930 LDR X8, [X20]
	0x021C6934 LDR X10, [X10 + 0xE00]
	0x021C6938 LDRH W9, [X8 + 0x12E]
	0x021C693C LDR X1, [X10]
	0x021C6940 CBZ X9, 0x21C6964
	0x021C6944 LDR X10, [X8 + 0xB0]
	0x021C6948 ADD X10, X10, 0x8
	0x021C694C LDUR X11, [X10 - 0x8]
	0x021C6950 CMP X11, X1
	0x021C6954 B.EQ 0x21C6974
	0x021C6958 SUBS X9, X9, 0x1
	0x021C695C ADD X10, X10, 0x10
	0x021C6960 B.NE 0x21C694C
	0x021C6964 MOV X0, X20
	0x021C6968 MOV W2, W31
	0x021C696C BL 0x1C5C788
	0x021C6970 B 0x21C6980
	0x021C6974 LDRSW X9, [X10]
	0x021C6978 ADD X8, X8, X9, 0x4, LSL
	0x021C697C ADD X0, X8, 0x138
	0x021C6980 LDP X8, X1, [X0]
	0x021C6984 MOV X0, X20
	0x021C6988 BLR X8
	0x021C698C CBNZ X21, 0x21C6998
	0x021C6990 MOV X0, X22
	0x021C6994 BL 0x1D2C690
	0x021C6998 MOV X0, X21
	0x021C699C BL 0x1C16F18
	0x021C69A0 BL 0x1990590
	0x021C69A4 STP X30, X23, [X31 - 0x30]!
	0x021C69A8 STP X22, X21, [X31 + 0x10]
	0x021C69AC STP X20, X19, [X31 + 0x20]
	0x021C69B0 LDR X8, [X1 + 0x38]
	0x021C69B4 MOV X19, X1
	0x021C69B8 MOV X21, X0
	0x021C69BC CBNZ X8, 0x21C69E8
	0x021C69C0 ADRP X0, 0x1F2D000
	0x021C69C4 LDR X0, [X0 + 0xE00]
	0x021C69C8 BL 0x1C16CF4
	0x021C69CC ADRP X0, 0x1F2D000
	0x021C69D0 LDR X0, [X0 + 0xE18]
	0x021C69D4 BL 0x1C16CF4
	0x021C69D8 LDR X8, [X19 + 0x38]
	0x021C69DC CBNZ X8, 0x21C69E8
	0x021C69E0 MOV X0, X19
	0x021C69E4 BL 0x1C5C6E0
	0x021C69E8 CBZ X21, 0x21C6D6C
	0x021C69EC LDR X8, [X19 + 0x38]
	0x021C69F0 LDR X1, [X8 + 0x8]
	0x021C69F4 LDRB W8, [X1 + 0x135]
	0x021C69F8 TBNZ X8, 0x0, 0x21C6A08
	0x021C69FC MOV X0, X1
	0x021C6A00 BL 0x1C5C684
	0x021C6A04 MOV X1, X0
	0x021C6A08 MOV X0, X21
	0x021C6A0C BL 0x1C16E00
	0x021C6A10 CBZ X0, 0x21C6A70
	0x021C6A14 LDR X8, [X19 + 0x38]
	0x021C6A18 MOV X20, X0
	0x021C6A1C LDR X1, [X8 + 0x10]
	0x021C6A20 LDRB W8, [X1 + 0x135]
	0x021C6A24 TBNZ X8, 0x0, 0x21C6A34
	0x021C6A28 MOV X0, X1
	0x021C6A2C BL 0x1C5C684
	0x021C6A30 MOV X1, X0
	0x021C6A34 LDR X8, [X20]
	0x021C6A38 LDRH W9, [X8 + 0x12E]
	0x021C6A3C CBZ X9, 0x21C6A60
	0x021C6A40 LDR X10, [X8 + 0xB0]
	0x021C6A44 ADD X10, X10, 0x8
	0x021C6A48 LDUR X11, [X10 - 0x8]
	0x021C6A4C CMP X11, X1
	0x021C6A50 B.EQ 0x21C6AC8
	0x021C6A54 SUBS X9, X9, 0x1
	0x021C6A58 ADD X10, X10, 0x10
	0x021C6A5C B.NE 0x21C6A48

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X2+56]
	008 Move X20, X2
	009 Move X21, X1
	010 Move X19, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {24}
	013 Move X0, 0x1F2E000
	014 Move X0, [X0+3584]
	015 Call 0x1C17CF4
	016 Move X0, 0x1F2E000
	017 Move X0, [X0+3608]
	018 Call 0x1C17CF4
	019 Move X8, [X20+56]
	020 Compare X8, 0
	021 JumpIfNotEqual {24}
	022 Move X0, X20
	023 Call 0x1C5D6E0
	024 Compare X19, 0
	025 JumpIfEqual {174}
	026 Compare X21, 0
	027 JumpIfEqual {176}
	028 Move X8, [X20+56]
	029 Move X1, [X8]
	030 Move W8, [X1+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {38}
	035 Move X0, X1
	036 Call 0x1C5D684
	037 Move X1, X0
	038 Move X8, [X19]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Compare X9, 0
	041 JumpIfEqual {48}
	042 Move X10, [X8+176]
	043 Add X10, X10, 8
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Subtract X9, X9, 1
	047 Add X10, X10, 16
	048 Move X0, X19
	049 Move W2, W31
	050 Call 0x1C5D788
	051 NotImplemented "Instruction LDRSW not yet implemented."
	052 Add X8, X8, X9
	053 Add X0, X8, 312
	054 Move X8, [X0]
	055 Move X1, [X0+8]
	056 Move X0, X19
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move X19, X0
	059 Compare X0, 0
	060 JumpIfEqual {183}
	061 Move X23, 0x1F2E000
	062 Move X23, [X23+3608]
	063 Move X8, [X19]
	064 Move X1, [X23]
	065 NotImplemented "Instruction LDRH not yet implemented."
	066 Compare X9, 0
	067 JumpIfEqual {74}
	068 Move X10, [X8+176]
	069 Add X10, X10, 8
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Subtract X9, X9, 1
	073 Add X10, X10, 16
	074 Move X0, X19
	075 Move W2, W31
	076 Call 0x1C5D788
	077 NotImplemented "Instruction LDRSW not yet implemented."
	078 Add X8, X8, X9
	079 Add X0, X8, 312
	080 Move X8, [X0]
	081 Move X1, [X0+8]
	082 Move X0, X19
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {132}
	088 Move X8, [X20+56]
	089 Move X1, [X8+24]
	090 Move W8, [X1+309]
	091 Move TEMP, X8
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfEqual {98}
	095 Move X0, X1
	096 Call 0x1C5D684
	097 Move X1, X0
	098 Move X8, [X19]
	099 NotImplemented "Instruction LDRH not yet implemented."
	100 Compare X9, 0
	101 JumpIfEqual {108}
	102 Move X10, [X8+176]
	103 Add X10, X10, 8
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Subtract X9, X9, 1
	107 Add X10, X10, 16
	108 Move X0, X19
	109 Move W2, W31
	110 Call 0x1C5D788
	111 NotImplemented "Instruction LDRSW not yet implemented."
	112 Add X8, X8, X9
	113 Add X0, X8, 312
	114 Move X8, [X0]
	115 Move X1, [X0+8]
	116 Move X0, X19
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move X22, X0
	119 Move X0, [X21+64]
	120 Move X8, [X21+24]
	121 Move X2, [X21+40]
	122 Move X1, X22
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfNotEqual {63}
	128 Move X20, X31
	129 Move W21, 10
	130 Compare X19, 0
	131 JumpIfNotEqual {137}
	132 Move X20, X31
	133 Move X22, X31
	134 Move W21, 11
	135 Compare X19, 0
	136 JumpIfEqual {160}
	137 Move X10, 0x1F2E000
	138 Move X8, [X19]
	139 Move X10, [X10+3584]
	140 NotImplemented "Instruction LDRH not yet implemented."
	141 Move X1, [X10]
	142 Compare X9, 0
	143 JumpIfEqual {150}
	144 Move X10, [X8+176]
	145 Add X10, X10, 8
	146 NotImplemented "Instruction LDUR not yet implemented."
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Subtract X9, X9, 1
	149 Add X10, X10, 16
	150 Move X0, X19
	151 Move W2, W31
	152 Call 0x1C5D788
	153 NotImplemented "Instruction LDRSW not yet implemented."
	154 Add X8, X8, X9
	155 Add X0, X8, 312
	156 Move X8, [X0]
	157 Move X1, [X0+8]
	158 Move X0, X19
	159 NotImplemented "Instruction BLR not yet implemented."
	160 Compare X20, 0
	161 JumpIfNotEqual {184}
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Compare W21, 0
	164 JumpIfNotEqual {166}
	165 Move X22, X31
	166 Move X0, X22
	167 Move X20, [X31+32]
	168 Move X19, [X31+40]
	169 Move X22, [X31+16]
	170 Move X21, [X31+24]
	171 Move X30, [X31+48]
	172 Move X23, [X31+56]
	173 Return X0
	174 Move X0, 0x1F39000
	175 Move X0, [X0+1408]
	176 Move X0, 0x1F56000
	177 Move X0, [X0+2288]
	178 Call 0x1C17D08
	179 Move X1, X31
	180 Call Error.ArgumentNull, X0
	181 Move X1, X20
	182 Call 0x1C17DEC
	183 Call 0x1C17F20
	184 Move X0, X20
	185 Call 0x1C17F18
	186 Move X21, X0
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move X0, X21
	189 Call 0x3EB2AD0
	190 Move X20, [X0]
	191 Call 0x3EB2AE0
	192 Move W21, W31
	193 Move X22, X31
	194 Compare X19, 0
	195 JumpIfNotEqual {137}
	196 Move X20, X31
	197 Move X21, X0
	198 Compare X19, 0
	199 JumpIfEqual {223}
	200 Move X10, 0x1F2E000
	201 Move X8, [X19]
	202 Move X10, [X10+3584]
	203 NotImplemented "Instruction LDRH not yet implemented."
	204 Move X1, [X10]
	205 Compare X9, 0
	206 JumpIfEqual {213}
	207 Move X10, [X8+176]
	208 Add X10, X10, 8
	209 NotImplemented "Instruction LDUR not yet implemented."
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Subtract X9, X9, 1
	212 Add X10, X10, 16
	213 Move X0, X19
	214 Move W2, W31
	215 Call 0x1C5D788
	216 NotImplemented "Instruction LDRSW not yet implemented."
	217 Add X8, X8, X9
	218 Add X0, X8, 312
	219 Move X8, [X0]
	220 Move X1, [X0+8]
	221 Move X0, X19
	222 NotImplemented "Instruction BLR not yet implemented."
	223 Compare X20, 0
	224 JumpIfNotEqual {227}
	225 Move X0, X21
	226 Call 0x1D2D690
	227 Move X0, X20
	228 Call 0x1C17F18
	229 Call 0x1991590

Method: TSource Last(System.Collections.Generic.IEnumerable`1<TSource> source)

Disassembly:
	0x021C7044 LDUR X11, [X10 - 0x8]
	0x021C7048 CMP X11, X1
	0x021C704C B.EQ 0x21C706C
	0x021C7050 SUBS X9, X9, 0x1
	0x021C7054 ADD X10, X10, 0x10
	0x021C7058 B.NE 0x21C7044
	0x021C705C MOV X0, X24
	0x021C7060 MOV W2, W31
	0x021C7064 BL 0x1C5C788
	0x021C7068 B 0x21C7078
	0x021C706C LDRSW X9, [X10]
	0x021C7070 ADD X8, X8, X9, 0x4, LSL
	0x021C7074 ADD X0, X8, 0x138
	0x021C7078 SUB X8, X29, 0xC
	0x021C707C STP X8, X21, [X29 - 0x20]
	0x021C7080 LDR X1, [X0 + 0x8]
	0x021C7084 SUB X3, X29, 0x20
	0x021C7088 MOV X2, X24
	0x021C708C MOV X4, X21
	0x021C7090 LDP X0, X8, [X1 + 0x8]
	0x021C7094 BLR X8
	0x021C7098 B 0x21C72DC
	0x021C709C LDRSW X9, [X10]
	0x021C70A0 ADD X8, X8, X9, 0x4, LSL
	0x021C70A4 ADD X0, X8, 0x138
	0x021C70A8 LDP X8, X1, [X0]
	0x021C70AC MOV X0, X26
	0x021C70B0 BLR X8
	0x021C70B4 MOV X24, X0
	0x021C70B8 CBZ X0, 0x21C7338
	0x021C70BC ADRP X26, 0x1F2C000
	0x021C70C0 LDR X8, [X24]
	0x021C70C4 LDR X26, [X26 + 0xE18]
	0x021C70C8 LDRH W9, [X8 + 0x12E]
	0x021C70CC LDR X1, [X26]
	0x021C70D0 CBZ X9, 0x21C70F4
	0x021C70D4 LDR X10, [X8 + 0xB0]
	0x021C70D8 ADD X10, X10, 0x8
	0x021C70DC LDUR X11, [X10 - 0x8]
	0x021C70E0 CMP X11, X1
	0x021C70E4 B.EQ 0x21C7104
	0x021C70E8 SUBS X9, X9, 0x1
	0x021C70EC ADD X10, X10, 0x10
	0x021C70F0 B.NE 0x21C70DC
	0x021C70F4 MOV X0, X24
	0x021C70F8 MOV W2, W31
	0x021C70FC BL 0x1C5C788
	0x021C7100 B 0x21C7110
	0x021C7104 LDRSW X9, [X10]
	0x021C7108 ADD X8, X8, X9, 0x4, LSL
	0x021C710C ADD X0, X8, 0x138
	0x021C7110 LDP X8, X1, [X0]
	0x021C7114 MOV X0, X24
	0x021C7118 BLR X8
	0x021C711C TBZ X0, 0x0, 0x21C723C
	0x021C7120 LDR X8, [X22 + 0x38]
	0x021C7124 LDR X1, [X8 + 0x38]
	0x021C7128 LDRB W8, [X1 + 0x135]
	0x021C712C TBNZ X8, 0x0, 0x21C713C
	0x021C7130 MOV X0, X1
	0x021C7134 BL 0x1C5C684
	0x021C7138 MOV X1, X0
	0x021C713C LDR X8, [X24]
	0x021C7140 LDRH W9, [X8 + 0x12E]
	0x021C7144 CBZ X9, 0x21C7168
	0x021C7148 LDR X10, [X8 + 0xB0]
	0x021C714C ADD X10, X10, 0x8
	0x021C7150 LDUR X11, [X10 - 0x8]
	0x021C7154 CMP X11, X1
	0x021C7158 B.EQ 0x21C7178
	0x021C715C SUBS X9, X9, 0x1
	0x021C7160 ADD X10, X10, 0x10
	0x021C7164 B.NE 0x21C7150
	0x021C7168 MOV X0, X24
	0x021C716C MOV W2, W31
	0x021C7170 BL 0x1C5C788
	0x021C7174 B 0x21C7184
	0x021C7178 LDRSW X9, [X10]
	0x021C717C ADD X8, X8, X9, 0x4, LSL
	0x021C7180 ADD X0, X8, 0x138
	0x021C7184 STUR X21, [X29 - 0x20]
	0x021C7188 LDR X1, [X0 + 0x8]
	0x021C718C LDP X0, X8, [X1 + 0x8]
	0x021C7190 SUB X3, X29, 0x20
	0x021C7194 MOV X2, X24
	0x021C7198 MOV X4, X21
	0x021C719C BLR X8
	0x021C71A0 MOV X0, X25
	0x021C71A4 MOV X1, X21
	0x021C71A8 MOV X2, X20
	0x021C71AC BL 0x3EB1AC0
	0x021C71B0 LDR X8, [X24]
	0x021C71B4 LDR X1, [X26]
	0x021C71B8 LDRH W9, [X8 + 0x12E]
	0x021C71BC CBZ X9, 0x21C71E0
	0x021C71C0 LDR X10, [X8 + 0xB0]
	0x021C71C4 ADD X10, X10, 0x8
	0x021C71C8 LDUR X11, [X10 - 0x8]
	0x021C71CC CMP X11, X1
	0x021C71D0 B.EQ 0x21C71F0
	0x021C71D4 SUBS X9, X9, 0x1
	0x021C71D8 ADD X10, X10, 0x10
	0x021C71DC B.NE 0x21C71C8
	0x021C71E0 MOV X0, X24
	0x021C71E4 MOV W2, W31
	0x021C71E8 BL 0x1C5C788
	0x021C71EC B 0x21C71FC
	0x021C71F0 LDRSW X9, [X10]
	0x021C71F4 ADD X8, X8, X9, 0x4, LSL
	0x021C71F8 ADD X0, X8, 0x138
	0x021C71FC LDP X8, X1, [X0]
	0x021C7200 MOV X0, X24
	0x021C7204 BLR X8
	0x021C7208 TBNZ X0, 0x0, 0x21C7120
	0x021C720C MOV X0, X21
	0x021C7210 MOV X1, X25
	0x021C7214 MOV X2, X20
	0x021C7218 BL 0x3EB1AC0
	0x021C721C MOV X0, X23
	0x021C7220 MOV X1, X21
	0x021C7224 MOV X2, X20
	0x021C7228 BL 0x3EB1AC0
	0x021C722C MOV X25, X31
	0x021C7230 MOVZ W26, 0x9
	0x021C7234 CBNZ X24, 0x21C7248
	0x021C7238 B 0x21C72A8
	0x021C723C MOV X25, X31
	0x021C7240 MOVZ W26, 0x6
	0x021C7244 CBZ X24, 0x21C72A8
	0x021C7248 ADRP X10, 0x1F2C000
	0x021C724C LDR X8, [X24]
	0x021C7250 LDR X10, [X10 + 0xE00]
	0x021C7254 LDRH W9, [X8 + 0x12E]
	0x021C7258 LDR X1, [X10]
	0x021C725C CBZ X9, 0x21C7280
	0x021C7260 LDR X10, [X8 + 0xB0]
	0x021C7264 ADD X10, X10, 0x8
	0x021C7268 LDUR X11, [X10 - 0x8]
	0x021C726C CMP X11, X1
	0x021C7270 B.EQ 0x21C7290
	0x021C7274 SUBS X9, X9, 0x1
	0x021C7278 ADD X10, X10, 0x10
	0x021C727C B.NE 0x21C7268
	0x021C7280 MOV X0, X24
	0x021C7284 MOV W2, W31
	0x021C7288 BL 0x1C5C788
	0x021C728C B 0x21C729C
	0x021C7290 LDRSW X9, [X10]
	0x021C7294 ADD X8, X8, X9, 0x4, LSL
	0x021C7298 ADD X0, X8, 0x138
	0x021C729C LDP X8, X1, [X0]
	0x021C72A0 MOV X0, X24
	0x021C72A4 BLR X8
	0x021C72A8 CBNZ X25, 0x21C733C
	0x021C72AC CMP W26, 0x9
	0x021C72B0 B.EQ 0x21C72CC
	0x021C72B4 CMP W26, 0x6
	0x021C72B8 B.EQ 0x21C72C0
	0x021C72BC CBNZ W26, 0x21C72EC
	0x021C72C0 MOV X0, X31
	0x021C72C4 BL 0x35DEC4C
	0x021C72C8 B 0x21C7330
	0x021C72CC MOV X0, X21
	0x021C72D0 MOV X1, X23
	0x021C72D4 MOV X2, X20
	0x021C72D8 BL 0x3EB1AC0
	0x021C72DC MOV X0, X19
	0x021C72E0 MOV X1, X21
	0x021C72E4 MOV X2, X20
	0x021C72E8 BL 0x3EB1AC0
	0x021C72EC LDR X8, [X27 + 0x28]
	0x021C72F0 LDUR X9, [X29 - 0x8]
	0x021C72F4 CMP X8, X9
	0x021C72F8 B.NE 0x21C7344
	0x021C72FC ADD X31, X29, 0x0
	0x021C7300 LDP X20, X19, [X31 + 0x50]
	0x021C7304 LDP X22, X21, [X31 + 0x40]
	0x021C7308 LDP X24, X23, [X31 + 0x30]
	0x021C730C LDP X26, X25, [X31 + 0x20]
	0x021C7310 LDR X27, [X31 + 0x10]
	0x021C7314 LDP X29, X30, [X31], #0x60
	0x021C7318 RET
	0x021C731C ADRP X0, 0x1F37000
	0x021C7320 LDR X0, [X0 + 0x580]
	0x021C7324 BL 0x1C16D08
	0x021C7328 MOV X1, X31
	0x021C732C BL 0x35DEB28
	0x021C7330 MOV X1, X22
	0x021C7334 BL 0x1C16DEC
	0x021C7338 BL 0x1C16F20
	0x021C733C MOV X0, X25
	0x021C7340 BL 0x1C16F18
	0x021C7344 BL 0x3EB1B20
	0x021C7348 B 0x21C7354
	0x021C734C B 0x21C7354
	0x021C7350 B 0x21C7354
	0x021C7354 MOV X26, X0
	0x021C7358 CMP W1, 0x1
	0x021C735C B.NE 0x21C737C
	0x021C7360 MOV X0, X26
	0x021C7364 BL 0x3EB1AD0
	0x021C7368 LDR X25, [X0]
	0x021C736C BL 0x3EB1AE0
	0x021C7370 MOV W26, W31
	0x021C7374 CBNZ X24, 0x21C7248
	0x021C7378 B 0x21C72A8
	0x021C737C MOV X25, X31
	0x021C7380 B 0x21C7388
	0x021C7384 MOV X26, X0
	0x021C7388 CBZ X24, 0x21C73EC
	0x021C738C ADRP X10, 0x1F2C000
	0x021C7390 LDR X8, [X24]
	0x021C7394 LDR X10, [X10 + 0xE00]
	0x021C7398 LDRH W9, [X8 + 0x12E]
	0x021C739C LDR X1, [X10]
	0x021C73A0 CBZ X9, 0x21C73C4
	0x021C73A4 LDR X10, [X8 + 0xB0]
	0x021C73A8 ADD X10, X10, 0x8
	0x021C73AC LDUR X11, [X10 - 0x8]
	0x021C73B0 CMP X11, X1
	0x021C73B4 B.EQ 0x21C73D4
	0x021C73B8 SUBS X9, X9, 0x1
	0x021C73BC ADD X10, X10, 0x10
	0x021C73C0 B.NE 0x21C73AC
	0x021C73C4 MOV X0, X24
	0x021C73C8 MOV W2, W31
	0x021C73CC BL 0x1C5C788
	0x021C73D0 B 0x21C73E0
	0x021C73D4 LDRSW X9, [X10]
	0x021C73D8 ADD X8, X8, X9, 0x4, LSL
	0x021C73DC ADD X0, X8, 0x138
	0x021C73E0 LDP X8, X1, [X0]
	0x021C73E4 MOV X0, X24
	0x021C73E8 BLR X8
	0x021C73EC CBNZ X25, 0x21C73F8
	0x021C73F0 MOV X0, X26
	0x021C73F4 BL 0x1D2C690
	0x021C73F8 MOV X0, X25
	0x021C73FC BL 0x1C16F18
	0x021C7400 BL 0x1990590
	0x021C7404 STR X30, [X31 - 0x30]!
	0x021C7408 STP X22, X21, [X31 + 0x10]
	0x021C740C STP X20, X19, [X31 + 0x20]
	0x021C7410 LDR X8, [X1 + 0x38]
	0x021C7414 MOV X20, X1
	0x021C7418 MOV X21, X0
	0x021C741C CBNZ X8, 0x21C7448
	0x021C7420 ADRP X0, 0x1F2C000
	0x021C7424 LDR X0, [X0 + 0xE00]
	0x021C7428 BL 0x1C16CF4
	0x021C742C ADRP X0, 0x1F2C000
	0x021C7430 LDR X0, [X0 + 0xE18]
	0x021C7434 BL 0x1C16CF4
	0x021C7438 LDR X8, [X20 + 0x38]
	0x021C743C CBNZ X8, 0x21C7448
	0x021C7440 MOV X0, X20
	0x021C7444 BL 0x1C5C6E0
	0x021C7448 CBZ X21, 0x21C77C4
	0x021C744C LDR X8, [X20 + 0x38]
	0x021C7450 LDR X1, [X8 + 0x8]
	0x021C7454 LDRB W8, [X1 + 0x135]
	0x021C7458 TBNZ X8, 0x0, 0x21C7468
	0x021C745C MOV X0, X1
	0x021C7460 BL 0x1C5C684
	0x021C7464 MOV X1, X0
	0x021C7468 MOV X0, X21
	0x021C746C BL 0x1C16E00
	0x021C7470 CBZ X0, 0x21C74D0
	0x021C7474 LDR X8, [X20 + 0x38]
	0x021C7478 MOV X19, X0
	0x021C747C LDR X1, [X8 + 0x10]
	0x021C7480 LDRB W8, [X1 + 0x135]
	0x021C7484 TBNZ X8, 0x0, 0x21C7494
	0x021C7488 MOV X0, X1
	0x021C748C BL 0x1C5C684
	0x021C7490 MOV X1, X0
	0x021C7494 LDR X8, [X19]
	0x021C7498 LDRH W9, [X8 + 0x12E]
	0x021C749C CBZ X9, 0x21C74C0
	0x021C74A0 LDR X10, [X8 + 0xB0]
	0x021C74A4 ADD X10, X10, 0x8
	0x021C74A8 LDUR X11, [X10 - 0x8]
	0x021C74AC CMP X11, X1
	0x021C74B0 B.EQ 0x21C7528
	0x021C74B4 SUBS X9, X9, 0x1
	0x021C74B8 ADD X10, X10, 0x10
	0x021C74BC B.NE 0x21C74A8
	0x021C74C0 MOV X0, X19
	0x021C74C4 MOV W2, W31
	0x021C74C8 BL 0x1C5C788
	0x021C74CC B 0x21C7534
	0x021C74D0 LDR X8, [X20 + 0x38]
	0x021C74D4 LDR X1, [X8]
	0x021C74D8 LDRB W8, [X1 + 0x135]
	0x021C74DC TBNZ X8, 0x0, 0x21C74EC
	0x021C74E0 MOV X0, X1
	0x021C74E4 BL 0x1C5C684
	0x021C74E8 MOV X1, X0
	0x021C74EC LDR X8, [X21]
	0x021C74F0 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X1+56]
	008 Move X19, X1
	009 Move X21, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {23}
	012 Move X0, 0x1F2D000
	013 Move X0, [X0+3584]
	014 Call 0x1C17CF4
	015 Move X0, 0x1F2D000
	016 Move X0, [X0+3608]
	017 Call 0x1C17CF4
	018 Move X8, [X19+56]
	019 Compare X8, 0
	020 JumpIfNotEqual {23}
	021 Move X0, X19
	022 Call 0x1C5D6E0
	023 Compare X21, 0
	024 JumpIfEqual {271}
	025 Move X8, [X19+56]
	026 Move X1, [X8+8]
	027 Move W8, [X1+309]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {35}
	032 Move X0, X1
	033 Call 0x1C5D684
	034 Move X1, X0
	035 Move X0, X21
	036 Call 0x1C17E00
	037 Compare X0, 0
	038 JumpIfEqual {63}
	039 Move X8, [X19+56]
	040 Move X20, X0
	041 Move X1, [X8+16]
	042 Move W8, [X1+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {50}
	047 Move X0, X1
	048 Call 0x1C5D684
	049 Move X1, X0
	050 Move X8, [X20]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Compare X9, 0
	053 JumpIfEqual {60}
	054 Move X10, [X8+176]
	055 Add X10, X10, 8
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Subtract X9, X9, 1
	059 Add X10, X10, 16
	060 Move X0, X20
	061 Move W2, W31
	062 Call 0x1C5D788
	063 Move X8, [X19+56]
	064 Move X1, [X8]
	065 Move W8, [X1+309]
	066 Move TEMP, X8
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {73}
	070 Move X0, X1
	071 Call 0x1C5D684
	072 Move X1, X0
	073 Move X8, [X21]
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Compare X9, 0
	076 JumpIfEqual {83}
	077 Move X10, [X8+176]
	078 Add X10, X10, 8
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Subtract X9, X9, 1
	082 Add X10, X10, 16
	083 Move X0, X21
	084 Move W2, W31
	085 Call 0x1C5D788
	086 NotImplemented "Instruction LDRSW not yet implemented."
	087 Add X8, X8, X9
	088 Add X0, X8, 312
	089 Move X8, [X0]
	090 Move X1, [X0+8]
	091 Move X0, X20
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Subtract W21, W0, 1
	094 Move X8, [X19+56]
	095 Move X1, [X8+8]
	096 Move W8, [X1+309]
	097 Move TEMP, X8
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {104}
	101 Move X0, X1
	102 Call 0x1C5D684
	103 Move X1, X0
	104 Move X8, [X20]
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Compare X9, 0
	107 JumpIfEqual {114}
	108 Move X10, [X8+176]
	109 Add X10, X10, 8
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Subtract X9, X9, 1
	113 Add X10, X10, 16
	114 Move X0, X20
	115 Move W2, W31
	116 Call 0x1C5D788
	117 NotImplemented "Instruction LDRSW not yet implemented."
	118 Add X8, X8, X9
	119 Add X0, X8, 312
	120 Move X3, [X0]
	121 Move X2, [X0+8]
	122 Move X0, X20
	123 Move W1, W21
	124 Move X20, [X31+32]
	125 Move X19, [X31+40]
	126 Move X22, [X31+16]
	127 Move X21, [X31+24]
	128 Move X30, [X31+48]
	129 Move X23, [X31+56]
	130 CallNoReturn X3
	131 NotImplemented "Instruction LDRSW not yet implemented."
	132 Add X8, X8, X9
	133 Add X0, X8, 312
	134 Move X8, [X0]
	135 Move X1, [X0+8]
	136 Move X0, X21
	137 NotImplemented "Instruction BLR not yet implemented."
	138 Move X20, X0
	139 Compare X0, 0
	140 JumpIfEqual {278}
	141 Move X21, 0x1F2D000
	142 Move X8, [X20]
	143 Move X21, [X21+3608]
	144 NotImplemented "Instruction LDRH not yet implemented."
	145 Move X1, [X21]
	146 Compare X9, 0
	147 JumpIfEqual {154}
	148 Move X10, [X8+176]
	149 Add X10, X10, 8
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Subtract X9, X9, 1
	153 Add X10, X10, 16
	154 Move X0, X20
	155 Move W2, W31
	156 Call 0x1C5D788
	157 NotImplemented "Instruction LDRSW not yet implemented."
	158 Add X8, X8, X9
	159 Add X0, X8, 312
	160 Move X8, [X0]
	161 Move X1, [X0+8]
	162 Move X0, X20
	163 NotImplemented "Instruction BLR not yet implemented."
	164 Move TEMP, X0
	165 And TEMP, TEMP, 1
	166 Compare TEMP, 1
	167 JumpIfNotEqual {228}
	168 Move X8, [X19+56]
	169 Move X1, [X8+56]
	170 Move W8, [X1+309]
	171 Move TEMP, X8
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfEqual {178}
	175 Move X0, X1
	176 Call 0x1C5D684
	177 Move X1, X0
	178 Move X8, [X20]
	179 NotImplemented "Instruction LDRH not yet implemented."
	180 Compare X9, 0
	181 JumpIfEqual {188}
	182 Move X10, [X8+176]
	183 Add X10, X10, 8
	184 NotImplemented "Instruction LDUR not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Subtract X9, X9, 1
	187 Add X10, X10, 16
	188 Move X0, X20
	189 Move W2, W31
	190 Call 0x1C5D788
	191 NotImplemented "Instruction LDRSW not yet implemented."
	192 Add X8, X8, X9
	193 Add X0, X8, 312
	194 Move X8, [X0]
	195 Move X1, [X0+8]
	196 Move X0, X20
	197 NotImplemented "Instruction BLR not yet implemented."
	198 Move X8, [X20]
	199 Move X1, [X21]
	200 Move X22, X0
	201 NotImplemented "Instruction LDRH not yet implemented."
	202 Compare X9, 0
	203 JumpIfEqual {210}
	204 Move X10, [X8+176]
	205 Add X10, X10, 8
	206 NotImplemented "Instruction LDUR not yet implemented."
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Subtract X9, X9, 1
	209 Add X10, X10, 16
	210 Move X0, X20
	211 Move W2, W31
	212 Call 0x1C5D788
	213 NotImplemented "Instruction LDRSW not yet implemented."
	214 Add X8, X8, X9
	215 Add X0, X8, 312
	216 Move X8, [X0]
	217 Move X1, [X0+8]
	218 Move X0, X20
	219 NotImplemented "Instruction BLR not yet implemented."
	220 Move TEMP, X0
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfEqual {168}
	224 Move X21, X31
	225 Move W23, 9
	226 Compare X20, 0
	227 JumpIfNotEqual {233}
	228 Move X21, X31
	229 Move X22, X31
	230 Move W23, 6
	231 Compare X20, 0
	232 JumpIfEqual {256}
	233 Move X10, 0x1F2D000
	234 Move X8, [X20]
	235 Move X10, [X10+3584]
	236 NotImplemented "Instruction LDRH not yet implemented."
	237 Move X1, [X10]
	238 Compare X9, 0
	239 JumpIfEqual {246}
	240 Move X10, [X8+176]
	241 Add X10, X10, 8
	242 NotImplemented "Instruction LDUR not yet implemented."
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Subtract X9, X9, 1
	245 Add X10, X10, 16
	246 Move X0, X20
	247 Move W2, W31
	248 Call 0x1C5D788
	249 NotImplemented "Instruction LDRSW not yet implemented."
	250 Add X8, X8, X9
	251 Add X0, X8, 312
	252 Move X8, [X0]
	253 Move X1, [X0+8]
	254 Move X0, X20
	255 NotImplemented "Instruction BLR not yet implemented."
	256 Compare X21, 0
	257 JumpIfNotEqual {279}
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Compare W23, 0
	260 JumpIfEqual {269}
	261 Move X0, X22
	262 Move X20, [X31+32]
	263 Move X19, [X31+40]
	264 Move X22, [X31+16]
	265 Move X21, [X31+24]
	266 Move X30, [X31+48]
	267 Move X23, [X31+56]
	268 Return X0
	269 Move X0, X31
	270 Call Error.NoElements
	271 Move X0, 0x1F38000
	272 Move X0, [X0+1408]
	273 Call 0x1C17D08
	274 Move X1, X31
	275 Call Error.ArgumentNull, X0
	276 Move X1, X19
	277 Call 0x1C17DEC
	278 Call 0x1C17F20
	279 Move X0, X21
	280 Call 0x1C17F18
	281 Move X22, X0
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Move X0, X22
	284 Call 0x3EB2AD0
	285 Move X21, [X0]
	286 Call 0x3EB2AE0
	287 Move W23, W31
	288 Move X22, X31
	289 Compare X20, 0
	290 JumpIfNotEqual {233}
	291 Move X21, X31
	292 Move X22, X0
	293 Compare X20, 0
	294 JumpIfEqual {318}
	295 Move X10, 0x1F2D000
	296 Move X8, [X20]
	297 Move X10, [X10+3584]
	298 NotImplemented "Instruction LDRH not yet implemented."
	299 Move X1, [X10]
	300 Compare X9, 0
	301 JumpIfEqual {308}
	302 Move X10, [X8+176]
	303 Add X10, X10, 8
	304 NotImplemented "Instruction LDUR not yet implemented."
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Subtract X9, X9, 1
	307 Add X10, X10, 16
	308 Move X0, X20
	309 Move W2, W31
	310 Call 0x1C5D788
	311 NotImplemented "Instruction LDRSW not yet implemented."
	312 Add X8, X8, X9
	313 Add X0, X8, 312
	314 Move X8, [X0]
	315 Move X1, [X0+8]
	316 Move X0, X20
	317 NotImplemented "Instruction BLR not yet implemented."
	318 Compare X21, 0
	319 JumpIfNotEqual {322}
	320 Move X0, X22
	321 Call 0x1D2D690
	322 Move X0, X21
	323 Call 0x1C17F18
	324 Call 0x1991590

Method: TSource LastOrDefault(System.Collections.Generic.IEnumerable`1<TSource> source)

Disassembly:
	0x021C8404 MOV X0, X27
	0x021C8408 MOV X1, X21
	0x021C840C MOV X2, X20
	0x021C8410 BL 0x3EB1AC0
	0x021C8414 MOV X0, X26
	0x021C8418 MOV X1, X27
	0x021C841C MOV X2, X20
	0x021C8420 BL 0x3EB1AC0
	0x021C8424 LDR X8, [X24 + 0x38]
	0x021C8428 LDR X9, [X8 + 0x10]
	0x021C842C LDR W10, [X9 + 0x28]
	0x021C8430 MOV X9, X26
	0x021C8434 TBNZ X10, 0x1F, 0x21C843C
	0x021C8438 LDR X9, [X26]
	0x021C843C LDR X1, [X8 + 0x30]
	0x021C8440 LDR X0, [X1]
	0x021C8444 STUR X9, [X29 - 0x18]
	0x021C8448 LDR X8, [X1 + 0x10]
	0x021C844C SUB X3, X29, 0x18
	0x021C8450 SUB X4, X29, 0xC
	0x021C8454 MOV X2, X25
	0x021C8458 BLR X8
	0x021C845C LDURB W8, [X29 - 0xC]
	0x021C8460 CBZ W8, 0x21C8328
	0x021C8464 MOV X0, X21
	0x021C8468 MOV X1, X27
	0x021C846C MOV X2, X20
	0x021C8470 BL 0x3EB1AC0
	0x021C8474 MOV X0, X22
	0x021C8478 MOV X1, X21
	0x021C847C MOV X2, X20
	0x021C8480 BL 0x3EB1AC0
	0x021C8484 B 0x21C8328
	0x021C8488 MOV X24, X31
	0x021C848C MOVZ W19, 0xA
	0x021C8490 CBZ X23, 0x21C84F4
	0x021C8494 ADRP X10, 0x1F2B000
	0x021C8498 LDR X8, [X23]
	0x021C849C LDR X10, [X10 + 0xE00]
	0x021C84A0 LDRH W9, [X8 + 0x12E]
	0x021C84A4 LDR X1, [X10]
	0x021C84A8 CBZ X9, 0x21C84CC
	0x021C84AC LDR X10, [X8 + 0xB0]
	0x021C84B0 ADD X10, X10, 0x8
	0x021C84B4 LDUR X11, [X10 - 0x8]
	0x021C84B8 CMP X11, X1
	0x021C84BC B.EQ 0x21C84DC
	0x021C84C0 SUBS X9, X9, 0x1
	0x021C84C4 ADD X10, X10, 0x10
	0x021C84C8 B.NE 0x21C84B4
	0x021C84CC MOV X0, X23
	0x021C84D0 MOV W2, W31
	0x021C84D4 BL 0x1C5C788
	0x021C84D8 B 0x21C84E8
	0x021C84DC LDRSW X9, [X10]
	0x021C84E0 ADD X8, X8, X9, 0x4, LSL
	0x021C84E4 ADD X0, X8, 0x138
	0x021C84E8 LDP X8, X1, [X0]
	0x021C84EC MOV X0, X23
	0x021C84F0 BLR X8
	0x021C84F4 CBNZ X24, 0x21C8580
	0x021C84F8 CMP W19, 0xA
	0x021C84FC B.EQ 0x21C8504
	0x021C8500 CBNZ W19, 0x21C8524
	0x021C8504 MOV X0, X21
	0x021C8508 MOV X1, X22
	0x021C850C MOV X2, X20
	0x021C8510 BL 0x3EB1AC0
	0x021C8514 LDUR X0, [X29 - 0x20]
	0x021C8518 MOV X1, X21
	0x021C851C MOV X2, X20
	0x021C8520 BL 0x3EB1AC0
	0x021C8524 LDR X8, [X28 + 0x28]
	0x021C8528 LDUR X9, [X29 - 0x8]
	0x021C852C CMP X8, X9
	0x021C8530 B.NE 0x21C8588
	0x021C8534 ADD X31, X29, 0x0
	0x021C8538 LDP X20, X19, [X31 + 0x50]
	0x021C853C LDP X22, X21, [X31 + 0x40]
	0x021C8540 LDP X24, X23, [X31 + 0x30]
	0x021C8544 LDP X26, X25, [X31 + 0x20]
	0x021C8548 LDP X28, X27, [X31 + 0x10]
	0x021C854C LDP X29, X30, [X31], #0x60
	0x021C8550 RET
	0x021C8554 ADRP X0, 0x1F36000
	0x021C8558 LDR X0, [X0 + 0x580]
	0x021C855C B 0x21C8568
	0x021C8560 ADRP X0, 0x1F53000
	0x021C8564 LDR X0, [X0 + 0x8F0]
	0x021C8568 BL 0x1C16D08
	0x021C856C MOV X1, X31
	0x021C8570 BL 0x35DEB28
	0x021C8574 MOV X1, X24
	0x021C8578 BL 0x1C16DEC
	0x021C857C BL 0x1C16F20
	0x021C8580 MOV X0, X24
	0x021C8584 BL 0x1C16F18
	0x021C8588 BL 0x3EB1B20
	0x021C858C B 0x21C8598
	0x021C8590 B 0x21C8598
	0x021C8594 B 0x21C8598
	0x021C8598 MOV X25, X0
	0x021C859C CMP W1, 0x1
	0x021C85A0 B.NE 0x21C85C0
	0x021C85A4 MOV X0, X25
	0x021C85A8 BL 0x3EB1AD0
	0x021C85AC LDR X24, [X0]
	0x021C85B0 BL 0x3EB1AE0
	0x021C85B4 MOV W19, W31
	0x021C85B8 CBNZ X23, 0x21C8494
	0x021C85BC B 0x21C84F4
	0x021C85C0 MOV X24, X31
	0x021C85C4 B 0x21C85CC
	0x021C85C8 MOV X25, X0
	0x021C85CC CBZ X23, 0x21C8630
	0x021C85D0 ADRP X10, 0x1F2B000
	0x021C85D4 LDR X8, [X23]
	0x021C85D8 LDR X10, [X10 + 0xE00]
	0x021C85DC LDRH W9, [X8 + 0x12E]
	0x021C85E0 LDR X1, [X10]
	0x021C85E4 CBZ X9, 0x21C8608
	0x021C85E8 LDR X10, [X8 + 0xB0]
	0x021C85EC ADD X10, X10, 0x8
	0x021C85F0 LDUR X11, [X10 - 0x8]
	0x021C85F4 CMP X11, X1
	0x021C85F8 B.EQ 0x21C8618
	0x021C85FC SUBS X9, X9, 0x1
	0x021C8600 ADD X10, X10, 0x10
	0x021C8604 B.NE 0x21C85F0
	0x021C8608 MOV X0, X23
	0x021C860C MOV W2, W31
	0x021C8610 BL 0x1C5C788
	0x021C8614 B 0x21C8624
	0x021C8618 LDRSW X9, [X10]
	0x021C861C ADD X8, X8, X9, 0x4, LSL
	0x021C8620 ADD X0, X8, 0x138
	0x021C8624 LDP X8, X1, [X0]
	0x021C8628 MOV X0, X23
	0x021C862C BLR X8
	0x021C8630 CBNZ X24, 0x21C863C
	0x021C8634 MOV X0, X25
	0x021C8638 BL 0x1D2C690
	0x021C863C MOV X0, X24
	0x021C8640 BL 0x1C16F18
	0x021C8644 BL 0x1990590
	0x021C8648 STP X30, X25, [X31 - 0x40]!
	0x021C864C STP X24, X23, [X31 + 0x10]
	0x021C8650 STP X22, X21, [X31 + 0x20]
	0x021C8654 STP X20, X19, [X31 + 0x30]
	0x021C8658 LDR X8, [X1 + 0x38]
	0x021C865C MOV X19, X1
	0x021C8660 MOV X20, X0
	0x021C8664 CBNZ X8, 0x21C8690
	0x021C8668 ADRP X0, 0x1F2B000
	0x021C866C LDR X0, [X0 + 0xE00]
	0x021C8670 BL 0x1C16CF4
	0x021C8674 ADRP X0, 0x1F2B000
	0x021C8678 LDR X0, [X0 + 0xE18]
	0x021C867C BL 0x1C16CF4
	0x021C8680 LDR X8, [X19 + 0x38]
	0x021C8684 CBNZ X8, 0x21C8690
	0x021C8688 MOV X0, X19
	0x021C868C BL 0x1C5C6E0
	0x021C8690 CBZ X20, 0x21C88D4
	0x021C8694 LDR X8, [X19 + 0x38]
	0x021C8698 LDR X0, [X8 + 0x8]
	0x021C869C BL 0x291D934
	0x021C86A0 LDR X8, [X19 + 0x38]
	0x021C86A4 MOV X22, X0
	0x021C86A8 LDR X1, [X8]
	0x021C86AC LDRB W8, [X1 + 0x135]
	0x021C86B0 TBNZ X8, 0x0, 0x21C86C0
	0x021C86B4 MOV X0, X1
	0x021C86B8 BL 0x1C5C684
	0x021C86BC MOV X1, X0
	0x021C86C0 LDR X8, [X20]
	0x021C86C4 LDRH W9, [X8 + 0x12E]
	0x021C86C8 CBZ X9, 0x21C86EC
	0x021C86CC LDR X10, [X8 + 0xB0]
	0x021C86D0 ADD X10, X10, 0x8
	0x021C86D4 LDUR X11, [X10 - 0x8]
	0x021C86D8 CMP X11, X1
	0x021C86DC B.EQ 0x21C86FC
	0x021C86E0 SUBS X9, X9, 0x1
	0x021C86E4 ADD X10, X10, 0x10
	0x021C86E8 B.NE 0x21C86D4
	0x021C86EC MOV X0, X20
	0x021C86F0 MOV W2, W31
	0x021C86F4 BL 0x1C5C788
	0x021C86F8 B 0x21C8708
	0x021C86FC LDRSW X9, [X10]
	0x021C8700 ADD X8, X8, X9, 0x4, LSL
	0x021C8704 ADD X0, X8, 0x138
	0x021C8708 LDP X8, X1, [X0]
	0x021C870C MOV X0, X20
	0x021C8710 BLR X8
	0x021C8714 MOV X20, X0
	0x021C8718 CBZ X0, 0x21C88EC
	0x021C871C ADRP X25, 0x1F2B000
	0x021C8720 LDR X25, [X25 + 0xE18]
	0x021C8724 MOV W10, W31
	0x021C8728 MOV W23, W31
	0x021C872C LDR X8, [X20]
	0x021C8730 LDR X1, [X25]
	0x021C8734 MOV W21, W23
	0x021C8738 MOV W24, W10
	0x021C873C LDRH W9, [X8 + 0x12E]
	0x021C8740 CBZ X9, 0x21C8764
	0x021C8744 LDR X10, [X8 + 0xB0]
	0x021C8748 ADD X10, X10, 0x8
	0x021C874C LDUR X11, [X10 - 0x8]
	0x021C8750 CMP X11, X1
	0x021C8754 B.EQ 0x21C8774
	0x021C8758 SUBS X9, X9, 0x1
	0x021C875C ADD X10, X10, 0x10
	0x021C8760 B.NE 0x21C874C
	0x021C8764 MOV X0, X20
	0x021C8768 MOV W2, W31
	0x021C876C BL 0x1C5C788
	0x021C8770 B 0x21C8780
	0x021C8774 LDRSW X9, [X10]
	0x021C8778 ADD X8, X8, X9, 0x4, LSL
	0x021C877C ADD X0, X8, 0x138
	0x021C8780 LDP X8, X1, [X0]
	0x021C8784 MOV X0, X20
	0x021C8788 BLR X8
	0x021C878C TBZ X0, 0x0, 0x21C8838
	0x021C8790 LDR X8, [X19 + 0x38]
	0x021C8794 LDR X1, [X8 + 0x30]
	0x021C8798 LDRB W8, [X1 + 0x135]
	0x021C879C TBNZ X8, 0x0, 0x21C87AC
	0x021C87A0 MOV X0, X1
	0x021C87A4 BL 0x1C5C684
	0x021C87A8 MOV X1, X0
	0x021C87AC LDR X8, [X20]
	0x021C87B0 LDRH W9, [X8 + 0x12E]
	0x021C87B4 CBZ X9, 0x21C87D8
	0x021C87B8 LDR X10, [X8 + 0xB0]
	0x021C87BC ADD X10, X10, 0x8
	0x021C87C0 LDUR X11, [X10 - 0x8]
	0x021C87C4 CMP X11, X1
	0x021C87C8 B.EQ 0x21C87E8
	0x021C87CC SUBS X9, X9, 0x1
	0x021C87D0 ADD X10, X10, 0x10
	0x021C87D4 B.NE 0x21C87C0
	0x021C87D8 MOV X0, X20
	0x021C87DC MOV W2, W31
	0x021C87E0 BL 0x1C5C788
	0x021C87E4 B 0x21C87F4
	0x021C87E8 LDRSW X9, [X10]
	0x021C87EC ADD X8, X8, X9, 0x4, LSL
	0x021C87F0 ADD X0, X8, 0x138
	0x021C87F4 LDP X8, X1, [X0]
	0x021C87F8 MOV X0, X20
	0x021C87FC BLR X8
	0x021C8800 MOV W23, W0
	0x021C8804 MOVZ W10, 0x1
	0x021C8808 TBZ X24, 0x0, 0x21C872C
	0x021C880C CBZ X22, 0x21C88D0
	0x021C8810 LDR X8, [X22]
	0x021C8814 LDP X9, X3, [X8 + 0x198]
	0x021C8818 MOV X0, X22
	0x021C881C MOV W1, W23
	0x021C8820 MOV W2, W21
	0x021C8824 BLR X9
	0x021C8828 CMP W0, 0x1
	0x021C882C CSEL W23, W21, W23, LT
	0x021C8830 MOVZ W10, 0x1
	0x021C8834 B 0x21C872C
	0x021C8838 MOV X22, X31
	0x021C883C MOVZ W23, 0xD
	0x021C8840 CBZ X20, 0x21C88A4
	0x021C8844 ADRP X10, 0x1F2B000
	0x021C8848 LDR X8, [X20]
	0x021C884C LDR X10, [X10 + 0xE00]
	0x021C8850 LDRH W9, [X8 + 0x12E]
	0x021C8854 LDR X1, [X10]
	0x021C8858 CBZ X9, 0x21C887C
	0x021C885C LDR X10, [X8 + 0xB0]
	0x021C8860 ADD X10, X10, 0x8
	0x021C8864 LDUR X11, [X10 - 0x8]
	0x021C8868 CMP X11, X1
	0x021C886C B.EQ 0x21C888C
	0x021C8870 SUBS X9, X9, 0x1
	0x021C8874 ADD X10, X10, 0x10
	0x021C8878 B.NE 0x21C8864
	0x021C887C MOV X0, X20
	0x021C8880 MOV W2, W31
	0x021C8884 BL 0x1C5C788
	0x021C8888 B 0x21C8898
	0x021C888C LDRSW X9, [X10]
	0x021C8890 ADD X8, X8, X9, 0x4, LSL
	0x021C8894 ADD X0, X8, 0x138
	0x021C8898 LDP X8, X1, [X0]
	0x021C889C MOV X0, X20
	0x021C88A0 BLR X8
	0x021C88A4 CBNZ X22, 0x21C88F0
	0x021C88A8 CMP W23, 0xD

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X1+56]
	007 Move X20, X1
	008 Move X21, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {22}
	011 Move X0, 0x1F2C000
	012 Move X0, [X0+3584]
	013 Call 0x1C17CF4
	014 Move X0, 0x1F2C000
	015 Move X0, [X0+3608]
	016 Call 0x1C17CF4
	017 Move X8, [X20+56]
	018 Compare X8, 0
	019 JumpIfNotEqual {22}
	020 Move X0, X20
	021 Call 0x1C5D6E0
	022 Compare X21, 0
	023 JumpIfEqual {267}
	024 Move X8, [X20+56]
	025 Move X1, [X8+8]
	026 Move W8, [X1+309]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {34}
	031 Move X0, X1
	032 Call 0x1C5D684
	033 Move X1, X0
	034 Move X0, X21
	035 Call 0x1C17E00
	036 Compare X0, 0
	037 JumpIfEqual {62}
	038 Move X8, [X20+56]
	039 Move X19, X0
	040 Move X1, [X8+16]
	041 Move W8, [X1+309]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {49}
	046 Move X0, X1
	047 Call 0x1C5D684
	048 Move X1, X0
	049 Move X8, [X19]
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 Compare X9, 0
	052 JumpIfEqual {59}
	053 Move X10, [X8+176]
	054 Add X10, X10, 8
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Subtract X9, X9, 1
	058 Add X10, X10, 16
	059 Move X0, X19
	060 Move W2, W31
	061 Call 0x1C5D788
	062 Move X8, [X20+56]
	063 Move X1, [X8]
	064 Move W8, [X1+309]
	065 Move TEMP, X8
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {72}
	069 Move X0, X1
	070 Call 0x1C5D684
	071 Move X1, X0
	072 Move X8, [X21]
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Compare X9, 0
	075 JumpIfEqual {82}
	076 Move X10, [X8+176]
	077 Add X10, X10, 8
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Subtract X9, X9, 1
	081 Add X10, X10, 16
	082 Move X0, X21
	083 Move W2, W31
	084 Call 0x1C5D788
	085 NotImplemented "Instruction LDRSW not yet implemented."
	086 Add X8, X8, X9
	087 Add X0, X8, 312
	088 Move X8, [X0]
	089 Move X1, [X0+8]
	090 Move X0, X19
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Subtract W21, W0, 1
	093 Move X8, [X20+56]
	094 Move X1, [X8+8]
	095 Move W8, [X1+309]
	096 Move TEMP, X8
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {103}
	100 Move X0, X1
	101 Call 0x1C5D684
	102 Move X1, X0
	103 Move X8, [X19]
	104 NotImplemented "Instruction LDRH not yet implemented."
	105 Compare X9, 0
	106 JumpIfEqual {113}
	107 Move X10, [X8+176]
	108 Add X10, X10, 8
	109 NotImplemented "Instruction LDUR not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Subtract X9, X9, 1
	112 Add X10, X10, 16
	113 Move X0, X19
	114 Move W2, W31
	115 Call 0x1C5D788
	116 NotImplemented "Instruction LDRSW not yet implemented."
	117 Add X8, X8, X9
	118 Add X0, X8, 312
	119 Move X3, [X0]
	120 Move X2, [X0+8]
	121 Move X0, X19
	122 Move W1, W21
	123 Move X20, [X31+32]
	124 Move X19, [X31+40]
	125 Move X22, [X31+16]
	126 Move X21, [X31+24]
	127 Move X30, [X31+48]
	128 CallNoReturn X3
	129 NotImplemented "Instruction LDRSW not yet implemented."
	130 Add X8, X8, X9
	131 Add X0, X8, 312
	132 Move X8, [X0]
	133 Move X1, [X0+8]
	134 Move X0, X21
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Move X19, X0
	137 Compare X0, 0
	138 JumpIfEqual {274}
	139 Move X22, 0x1F2C000
	140 Move X8, [X19]
	141 Move X22, [X22+3608]
	142 NotImplemented "Instruction LDRH not yet implemented."
	143 Move X1, [X22]
	144 Compare X9, 0
	145 JumpIfEqual {152}
	146 Move X10, [X8+176]
	147 Add X10, X10, 8
	148 NotImplemented "Instruction LDUR not yet implemented."
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Subtract X9, X9, 1
	151 Add X10, X10, 16
	152 Move X0, X19
	153 Move W2, W31
	154 Call 0x1C5D788
	155 NotImplemented "Instruction LDRSW not yet implemented."
	156 Add X8, X8, X9
	157 Add X0, X8, 312
	158 Move X8, [X0]
	159 Move X1, [X0+8]
	160 Move X0, X19
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfNotEqual {226}
	166 Move X8, [X20+56]
	167 Move X1, [X8+56]
	168 Move W8, [X1+309]
	169 Move TEMP, X8
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfEqual {176}
	173 Move X0, X1
	174 Call 0x1C5D684
	175 Move X1, X0
	176 Move X8, [X19]
	177 NotImplemented "Instruction LDRH not yet implemented."
	178 Compare X9, 0
	179 JumpIfEqual {186}
	180 Move X10, [X8+176]
	181 Add X10, X10, 8
	182 NotImplemented "Instruction LDUR not yet implemented."
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Subtract X9, X9, 1
	185 Add X10, X10, 16
	186 Move X0, X19
	187 Move W2, W31
	188 Call 0x1C5D788
	189 NotImplemented "Instruction LDRSW not yet implemented."
	190 Add X8, X8, X9
	191 Add X0, X8, 312
	192 Move X8, [X0]
	193 Move X1, [X0+8]
	194 Move X0, X19
	195 NotImplemented "Instruction BLR not yet implemented."
	196 Move X8, [X19]
	197 Move X1, [X22]
	198 Move X21, X0
	199 NotImplemented "Instruction LDRH not yet implemented."
	200 Compare X9, 0
	201 JumpIfEqual {208}
	202 Move X10, [X8+176]
	203 Add X10, X10, 8
	204 NotImplemented "Instruction LDUR not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Subtract X9, X9, 1
	207 Add X10, X10, 16
	208 Move X0, X19
	209 Move W2, W31
	210 Call 0x1C5D788
	211 NotImplemented "Instruction LDRSW not yet implemented."
	212 Add X8, X8, X9
	213 Add X0, X8, 312
	214 Move X8, [X0]
	215 Move X1, [X0+8]
	216 Move X0, X19
	217 NotImplemented "Instruction BLR not yet implemented."
	218 Move TEMP, X0
	219 And TEMP, TEMP, 1
	220 Compare TEMP, 1
	221 JumpIfEqual {166}
	222 Move X20, X31
	223 Move W22, 9
	224 Compare X19, 0
	225 JumpIfNotEqual {231}
	226 Move X20, X31
	227 Move X21, X31
	228 Move W22, 6
	229 Compare X19, 0
	230 JumpIfEqual {254}
	231 Move X10, 0x1F2C000
	232 Move X8, [X19]
	233 Move X10, [X10+3584]
	234 NotImplemented "Instruction LDRH not yet implemented."
	235 Move X1, [X10]
	236 Compare X9, 0
	237 JumpIfEqual {244}
	238 Move X10, [X8+176]
	239 Add X10, X10, 8
	240 NotImplemented "Instruction LDUR not yet implemented."
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Subtract X9, X9, 1
	243 Add X10, X10, 16
	244 Move X0, X19
	245 Move W2, W31
	246 Call 0x1C5D788
	247 NotImplemented "Instruction LDRSW not yet implemented."
	248 Add X8, X8, X9
	249 Add X0, X8, 312
	250 Move X8, [X0]
	251 Move X1, [X0+8]
	252 Move X0, X19
	253 NotImplemented "Instruction BLR not yet implemented."
	254 Compare X20, 0
	255 JumpIfNotEqual {275}
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Compare W22, 0
	258 JumpIfNotEqual {260}
	259 Move X21, X31
	260 Move X0, X21
	261 Move X20, [X31+32]
	262 Move X19, [X31+40]
	263 Move X22, [X31+16]
	264 Move X21, [X31+24]
	265 Move X30, [X31+48]
	266 Return X0
	267 Move X0, 0x1F37000
	268 Move X0, [X0+1408]
	269 Call 0x1C17D08
	270 Move X1, X31
	271 Call Error.ArgumentNull, X0
	272 Move X1, X20
	273 Call 0x1C17DEC
	274 Call 0x1C17F20
	275 Move X0, X20
	276 Call 0x1C17F18
	277 Move X21, X0
	278 NotImplemented "Instruction CMP not yet implemented."
	279 Move X0, X21
	280 Call 0x3EB2AD0
	281 Move X20, [X0]
	282 Call 0x3EB2AE0
	283 Move W22, W31
	284 Move X21, X31
	285 Compare X19, 0
	286 JumpIfNotEqual {231}
	287 Move X20, X31
	288 Move X21, X0
	289 Compare X19, 0
	290 JumpIfEqual {314}
	291 Move X10, 0x1F2C000
	292 Move X8, [X19]
	293 Move X10, [X10+3584]
	294 NotImplemented "Instruction LDRH not yet implemented."
	295 Move X1, [X10]
	296 Compare X9, 0
	297 JumpIfEqual {304}
	298 Move X10, [X8+176]
	299 Add X10, X10, 8
	300 NotImplemented "Instruction LDUR not yet implemented."
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Subtract X9, X9, 1
	303 Add X10, X10, 16
	304 Move X0, X19
	305 Move W2, W31
	306 Call 0x1C5D788
	307 NotImplemented "Instruction LDRSW not yet implemented."
	308 Add X8, X8, X9
	309 Add X0, X8, 312
	310 Move X8, [X0]
	311 Move X1, [X0+8]
	312 Move X0, X19
	313 NotImplemented "Instruction BLR not yet implemented."
	314 Compare X20, 0
	315 JumpIfNotEqual {318}
	316 Move X0, X21
	317 Call 0x1D2D690
	318 Move X0, X20
	319 Call 0x1C17F18
	320 Call 0x1991590

Method: TSource LastOrDefault(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource, System.Boolean> predicate)

Disassembly:
	0x021C8E88 BL 0x1C16ED4
	0x021C8E8C LDR X8, [X24 + 0x38]
	0x021C8E90 MOV W19, W0
	0x021C8E94 LDR X1, [X8]
	0x021C8E98 LDRB W8, [X1 + 0x135]
	0x021C8E9C TBNZ X8, 0x0, 0x21C8EAC
	0x021C8EA0 MOV X0, X1
	0x021C8EA4 BL 0x1C5C684
	0x021C8EA8 MOV X1, X0
	0x021C8EAC LDR X8, [X23]
	0x021C8EB0 LDRH W9, [X8 + 0x12E]
	0x021C8EB4 CBZ X9, 0x21C8ED8
	0x021C8EB8 LDR X10, [X8 + 0xB0]
	0x021C8EBC ADD X10, X10, 0x8
	0x021C8EC0 LDUR X11, [X10 - 0x8]
	0x021C8EC4 CMP X11, X1
	0x021C8EC8 B.EQ 0x21C8EE8
	0x021C8ECC SUBS X9, X9, 0x1
	0x021C8ED0 ADD X10, X10, 0x10
	0x021C8ED4 B.NE 0x21C8EC0
	0x021C8ED8 MOV X0, X23
	0x021C8EDC MOV W2, W31
	0x021C8EE0 BL 0x1C5C788
	0x021C8EE4 B 0x21C8EF4
	0x021C8EE8 LDRSW X9, [X10]
	0x021C8EEC ADD X8, X8, X9, 0x4, LSL
	0x021C8EF0 ADD X0, X8, 0x138
	0x021C8EF4 LDP X8, X1, [X0]
	0x021C8EF8 MOV X0, X23
	0x021C8EFC BLR X8
	0x021C8F00 MOV X23, X0
	0x021C8F04 TBZ X19, 0x0, 0x21C90A4
	0x021C8F08 CBZ X23, 0x21C93F8
	0x021C8F0C ADRP X27, 0x1F2B000
	0x021C8F10 LDR X27, [X27 + 0xE18]
	0x021C8F14 MOV W19, W31
	0x021C8F18 LDR X8, [X23]
	0x021C8F1C LDR X1, [X27]
	0x021C8F20 LDRH W9, [X8 + 0x12E]
	0x021C8F24 CBZ X9, 0x21C8F48
	0x021C8F28 LDR X10, [X8 + 0xB0]
	0x021C8F2C ADD X10, X10, 0x8
	0x021C8F30 LDUR X11, [X10 - 0x8]
	0x021C8F34 CMP X11, X1
	0x021C8F38 B.EQ 0x21C8F58
	0x021C8F3C SUBS X9, X9, 0x1
	0x021C8F40 ADD X10, X10, 0x10
	0x021C8F44 B.NE 0x21C8F30
	0x021C8F48 MOV X0, X23
	0x021C8F4C MOV W2, W31
	0x021C8F50 BL 0x1C5C788
	0x021C8F54 B 0x21C8F64
	0x021C8F58 LDRSW X9, [X10]
	0x021C8F5C ADD X8, X8, X9, 0x4, LSL
	0x021C8F60 ADD X0, X8, 0x138
	0x021C8F64 LDP X8, X1, [X0]
	0x021C8F68 MOV X0, X23
	0x021C8F6C BLR X8
	0x021C8F70 TBZ X0, 0x0, 0x21C9278
	0x021C8F74 LDR X8, [X24 + 0x38]
	0x021C8F78 LDR X1, [X8 + 0x30]
	0x021C8F7C LDRB W8, [X1 + 0x135]
	0x021C8F80 TBNZ X8, 0x0, 0x21C8F90
	0x021C8F84 MOV X0, X1
	0x021C8F88 BL 0x1C5C684
	0x021C8F8C MOV X1, X0
	0x021C8F90 LDR X8, [X23]
	0x021C8F94 LDRH W9, [X8 + 0x12E]
	0x021C8F98 CBZ X9, 0x21C8FBC
	0x021C8F9C LDR X10, [X8 + 0xB0]
	0x021C8FA0 ADD X10, X10, 0x8
	0x021C8FA4 LDUR X11, [X10 - 0x8]
	0x021C8FA8 CMP X11, X1
	0x021C8FAC B.EQ 0x21C8FCC
	0x021C8FB0 SUBS X9, X9, 0x1
	0x021C8FB4 ADD X10, X10, 0x10
	0x021C8FB8 B.NE 0x21C8FA4
	0x021C8FBC MOV X0, X23
	0x021C8FC0 MOV W2, W31
	0x021C8FC4 BL 0x1C5C788
	0x021C8FC8 B 0x21C8FD8
	0x021C8FCC LDRSW X9, [X10]
	0x021C8FD0 ADD X8, X8, X9, 0x4, LSL
	0x021C8FD4 ADD X0, X8, 0x138
	0x021C8FD8 STUR X21, [X29 - 0x20]
	0x021C8FDC LDR X1, [X0 + 0x8]
	0x021C8FE0 LDP X0, X8, [X1 + 0x8]
	0x021C8FE4 SUB X3, X29, 0x20
	0x021C8FE8 MOV X2, X23
	0x021C8FEC MOV X4, X21
	0x021C8FF0 BLR X8
	0x021C8FF4 MOV X0, X28
	0x021C8FF8 MOV X1, X21
	0x021C8FFC MOV X2, X20
	0x021C9000 BL 0x3EB1AC0
	0x021C9004 MOV X0, X21
	0x021C9008 MOV X1, X28
	0x021C900C MOV X2, X20
	0x021C9010 BL 0x3EB1AC0
	0x021C9014 TBZ X19, 0x0, 0x21C908C
	0x021C9018 MOV X0, X25
	0x021C901C MOV X1, X22
	0x021C9020 MOV X2, X20
	0x021C9024 BL 0x3EB1AC0
	0x021C9028 CBZ X26, 0x21C93D4
	0x021C902C LDR X8, [X24 + 0x38]
	0x021C9030 MOV X9, X25
	0x021C9034 LDR X8, [X8 + 0x20]
	0x021C9038 LDR W10, [X8 + 0x28]
	0x021C903C MOV X8, X21
	0x021C9040 TBNZ X10, 0x1F, 0x21C904C
	0x021C9044 LDR X8, [X21]
	0x021C9048 LDR X9, [X25]
	0x021C904C LDR X10, [X26]
	0x021C9050 STP X8, X9, [X29 - 0x20]
	0x021C9054 LDR X1, [X10 + 0x1A0]
	0x021C9058 LDP X0, X8, [X1 + 0x8]
	0x021C905C SUB X3, X29, 0x20
	0x021C9060 SUB X4, X29, 0xC
	0x021C9064 MOV X2, X26
	0x021C9068 BLR X8
	0x021C906C LDUR W8, [X29 - 0xC]
	0x021C9070 MOVZ W19, 0x1
	0x021C9074 CMP W8, 0x1
	0x021C9078 B.LT 0x21C8F18
	0x021C907C MOV X0, X21
	0x021C9080 MOV X1, X28
	0x021C9084 MOV X2, X20
	0x021C9088 BL 0x3EB1AC0
	0x021C908C MOV X0, X22
	0x021C9090 MOV X1, X21
	0x021C9094 MOV X2, X20
	0x021C9098 BL 0x3EB1AC0
	0x021C909C MOVZ W19, 0x1
	0x021C90A0 B 0x21C8F18
	0x021C90A4 CBZ X23, 0x21C93FC
	0x021C90A8 ADRP X19, 0x1F2A000
	0x021C90AC LDR X19, [X19 + 0xE18]
	0x021C90B0 LDR X8, [X23]
	0x021C90B4 LDR X1, [X19]
	0x021C90B8 LDRH W9, [X8 + 0x12E]
	0x021C90BC CBZ X9, 0x21C90E0
	0x021C90C0 LDR X10, [X8 + 0xB0]
	0x021C90C4 ADD X10, X10, 0x8
	0x021C90C8 LDUR X11, [X10 - 0x8]
	0x021C90CC CMP X11, X1
	0x021C90D0 B.EQ 0x21C90F0
	0x021C90D4 SUBS X9, X9, 0x1
	0x021C90D8 ADD X10, X10, 0x10
	0x021C90DC B.NE 0x21C90C8
	0x021C90E0 MOV X0, X23
	0x021C90E4 MOV W2, W31
	0x021C90E8 BL 0x1C5C788
	0x021C90EC B 0x21C90FC
	0x021C90F0 LDRSW X9, [X10]
	0x021C90F4 ADD X8, X8, X9, 0x4, LSL
	0x021C90F8 ADD X0, X8, 0x138
	0x021C90FC LDP X8, X1, [X0]
	0x021C9100 MOV X0, X23
	0x021C9104 BLR X8
	0x021C9108 TBZ X0, 0x0, 0x21C92CC
	0x021C910C LDR X8, [X24 + 0x38]
	0x021C9110 LDR X1, [X8 + 0x30]
	0x021C9114 LDRB W8, [X1 + 0x135]
	0x021C9118 TBNZ X8, 0x0, 0x21C9128
	0x021C911C MOV X0, X1
	0x021C9120 BL 0x1C5C684
	0x021C9124 MOV X1, X0
	0x021C9128 LDR X8, [X23]
	0x021C912C LDRH W9, [X8 + 0x12E]
	0x021C9130 CBZ X9, 0x21C9154
	0x021C9134 LDR X10, [X8 + 0xB0]
	0x021C9138 ADD X10, X10, 0x8
	0x021C913C LDUR X11, [X10 - 0x8]
	0x021C9140 CMP X11, X1
	0x021C9144 B.EQ 0x21C9164
	0x021C9148 SUBS X9, X9, 0x1
	0x021C914C ADD X10, X10, 0x10
	0x021C9150 B.NE 0x21C913C
	0x021C9154 MOV X0, X23
	0x021C9158 MOV W2, W31
	0x021C915C BL 0x1C5C788
	0x021C9160 B 0x21C9170
	0x021C9164 LDRSW X9, [X10]
	0x021C9168 ADD X8, X8, X9, 0x4, LSL
	0x021C916C ADD X0, X8, 0x138
	0x021C9170 STUR X21, [X29 - 0x20]
	0x021C9174 LDR X1, [X0 + 0x8]
	0x021C9178 LDP X0, X8, [X1 + 0x8]
	0x021C917C SUB X3, X29, 0x20
	0x021C9180 MOV X2, X23
	0x021C9184 MOV X4, X21
	0x021C9188 BLR X8
	0x021C918C MOV X0, X27
	0x021C9190 MOV X1, X21
	0x021C9194 MOV X2, X20
	0x021C9198 BL 0x3EB1AC0
	0x021C919C MOV X0, X25
	0x021C91A0 MOV X1, X27
	0x021C91A4 MOV X2, X20
	0x021C91A8 BL 0x3EB1AC0
	0x021C91AC LDR X8, [X24 + 0x38]
	0x021C91B0 LDR X0, [X8 + 0x20]
	0x021C91B4 MOV X1, X25
	0x021C91B8 BL 0x1C16ED4
	0x021C91BC TBZ X0, 0x0, 0x21C90B0
	0x021C91C0 MOV X0, X21

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X2+56]
	009 Move X20, X2
	010 Move X22, X1
	011 Move X19, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {25}
	014 Move X0, 0x1F2C000
	015 Move X0, [X0+3584]
	016 Call 0x1C17CF4
	017 Move X0, 0x1F2C000
	018 Move X0, [X0+3608]
	019 Call 0x1C17CF4
	020 Move X8, [X20+56]
	021 Compare X8, 0
	022 JumpIfNotEqual {25}
	023 Move X0, X20
	024 Call 0x1C5D6E0
	025 Compare X19, 0
	026 JumpIfEqual {165}
	027 Compare X22, 0
	028 JumpIfEqual {167}
	029 Move X8, [X20+56]
	030 Move X1, [X8]
	031 Move W8, [X1+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {39}
	036 Move X0, X1
	037 Call 0x1C5D684
	038 Move X1, X0
	039 Move X8, [X19]
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move X0, X19
	050 Move W2, W31
	051 Call 0x1C5D788
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 Add X8, X8, X9
	054 Add X0, X8, 312
	055 Move X8, [X0]
	056 Move X1, [X0+8]
	057 Move X0, X19
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X19, X0
	060 Compare X0, 0
	061 JumpIfEqual {174}
	062 Move X24, 0x1F2C000
	063 Move X24, [X24+3608]
	064 Move X21, X31
	065 Move X8, [X19]
	066 Move X1, [X24]
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Compare X9, 0
	069 JumpIfEqual {76}
	070 Move X10, [X8+176]
	071 Add X10, X10, 8
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract X9, X9, 1
	075 Add X10, X10, 16
	076 Move X0, X19
	077 Move W2, W31
	078 Call 0x1C5D788
	079 NotImplemented "Instruction LDRSW not yet implemented."
	080 Add X8, X8, X9
	081 Add X0, X8, 312
	082 Move X8, [X0]
	083 Move X1, [X0+8]
	084 Move X0, X19
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {128}
	090 Move X8, [X20+56]
	091 Move X1, [X8+32]
	092 Move W8, [X1+309]
	093 Move TEMP, X8
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfEqual {100}
	097 Move X0, X1
	098 Call 0x1C5D684
	099 Move X1, X0
	100 Move X8, [X19]
	101 NotImplemented "Instruction LDRH not yet implemented."
	102 Compare X9, 0
	103 JumpIfEqual {110}
	104 Move X10, [X8+176]
	105 Add X10, X10, 8
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Subtract X9, X9, 1
	109 Add X10, X10, 16
	110 Move X0, X19
	111 Move W2, W31
	112 Call 0x1C5D788
	113 NotImplemented "Instruction LDRSW not yet implemented."
	114 Add X8, X8, X9
	115 Add X0, X8, 312
	116 Move X8, [X0]
	117 Move X1, [X0+8]
	118 Move X0, X19
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move X23, X0
	121 Move X0, [X22+64]
	122 Move X8, [X22+24]
	123 Move X2, [X22+40]
	124 Move X1, X23
	125 NotImplemented "Instruction BLR not yet implemented."
	126 And W31, W0, 1
	127 NotImplemented "Instruction CSEL not yet implemented."
	128 Move X20, X31
	129 Compare X19, 0
	130 JumpIfEqual {154}
	131 Move X10, 0x1F2B000
	132 Move X8, [X19]
	133 Move X10, [X10+3584]
	134 NotImplemented "Instruction LDRH not yet implemented."
	135 Move X1, [X10]
	136 Compare X9, 0
	137 JumpIfEqual {144}
	138 Move X10, [X8+176]
	139 Add X10, X10, 8
	140 NotImplemented "Instruction LDUR not yet implemented."
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Subtract X9, X9, 1
	143 Add X10, X10, 16
	144 Move X0, X19
	145 Move W2, W31
	146 Call 0x1C5D788
	147 NotImplemented "Instruction LDRSW not yet implemented."
	148 Add X8, X8, X9
	149 Add X0, X8, 312
	150 Move X8, [X0]
	151 Move X1, [X0+8]
	152 Move X0, X19
	153 NotImplemented "Instruction BLR not yet implemented."
	154 Compare X20, 0
	155 JumpIfNotEqual {175}
	156 Move X0, X21
	157 Move X20, [X31+48]
	158 Move X19, [X31+56]
	159 Move X22, [X31+32]
	160 Move X21, [X31+40]
	161 Move X24, [X31+16]
	162 Move X23, [X31+24]
	163 Move X30, [X31+64]
	164 Return X0
	165 Move X0, 0x1F36000
	166 Move X0, [X0+1408]
	167 Move X0, 0x1F53000
	168 Move X0, [X0+2288]
	169 Call 0x1C17D08
	170 Move X1, X31
	171 Call Error.ArgumentNull, X0
	172 Move X1, X20
	173 Call 0x1C17DEC
	174 Call 0x1C17F20
	175 Move X0, X20
	176 Call 0x1C17F18
	177 Move X22, X0
	178 Move X21, X31
	179 Move X22, X0
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X0, X22
	182 Call 0x3EB2AD0
	183 Move X20, [X0]
	184 Call 0x3EB2AE0
	185 Move X20, X31
	186 Move X22, X0
	187 Compare X19, 0
	188 JumpIfEqual {212}
	189 Move X10, 0x1F2B000
	190 Move X8, [X19]
	191 Move X10, [X10+3584]
	192 NotImplemented "Instruction LDRH not yet implemented."
	193 Move X1, [X10]
	194 Compare X9, 0
	195 JumpIfEqual {202}
	196 Move X10, [X8+176]
	197 Add X10, X10, 8
	198 NotImplemented "Instruction LDUR not yet implemented."
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Subtract X9, X9, 1
	201 Add X10, X10, 16
	202 Move X0, X19
	203 Move W2, W31
	204 Call 0x1C5D788
	205 NotImplemented "Instruction LDRSW not yet implemented."
	206 Add X8, X8, X9
	207 Add X0, X8, 312
	208 Move X8, [X0]
	209 Move X1, [X0+8]
	210 Move X0, X19
	211 NotImplemented "Instruction BLR not yet implemented."
	212 Compare X20, 0
	213 JumpIfNotEqual {216}
	214 Move X0, X22
	215 Call 0x1D2D690
	216 Move X0, X20
	217 Call 0x1C17F18
	218 Call 0x1991590

Method: TSource SingleOrDefault(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource, System.Boolean> predicate)

Disassembly:
	0x021D5088 LDR X1, [X21 + 0x20]
	0x021D508C LDRH W2, [X21 + 0x50]
	0x021D5090 CBZ X9, 0x21D50B4
	0x021D5094 LDR X10, [X8 + 0xB0]
	0x021D5098 ADD X10, X10, 0x8
	0x021D509C LDUR X11, [X10 - 0x8]
	0x021D50A0 CMP X11, X1
	0x021D50A4 B.EQ 0x21D50C0
	0x021D50A8 SUBS X9, X9, 0x1
	0x021D50AC ADD X10, X10, 0x10
	0x021D50B0 B.NE 0x21D509C
	0x021D50B4 MOV X0, X20
	0x021D50B8 BL 0x1C5C788
	0x021D50BC B 0x21D50D0
	0x021D50C0 LDR W9, [X10]
	0x021D50C4 ADD W9, W9, W2
	0x021D50C8 ADD X8, X8, W9, 0x4, SXTW
	0x021D50CC ADD X0, X8, 0x138
	0x021D50D0 LDR X0, [X0 + 0x8]
	0x021D50D4 MOV X1, X21
	0x021D50D8 BL 0x1C16DF8
	0x021D50DC MOV X4, X0
	0x021D50E0 LDR X5, [X0 + 0x8]
	0x021D50E4 MOV X0, X20
	0x021D50E8 MOV X1, X19
	0x021D50EC LDP X20, X19, [X31 + 0x10]
	0x021D50F0 MOV X2, X31
	0x021D50F4 MOV W3, W31
	0x021D50F8 LDP X30, X21, [X31], #0x20
	0x021D50FC BR X5
	0x021D5100 ADRP X0, 0x1F29000
	0x021D5104 LDR X0, [X0 + 0x580]
	0x021D5108 BL 0x1C16D08
	0x021D510C MOV X1, X31
	0x021D5110 BL 0x35DEB28
	0x021D5114 MOV X1, X21
	0x021D5118 BL 0x1C16DEC
	0x021D511C SUB X31, X31, 0x40
	0x021D5120 STR X30, [X31 + 0x20]
	0x021D5124 STP X20, X19, [X31 + 0x30]
	0x021D5128 LDR X8, [X1 + 0x38]
	0x021D512C MOV X19, X1
	0x021D5130 MOV X20, X0
	0x021D5134 CBNZ X8, 0x21D5140
	0x021D5138 MOV X0, X19
	0x021D513C BL 0x1C5C6E0
	0x021D5140 STP X31, X31, [X31 + 0x10]
	0x021D5144 CBZ X20, 0x21D5188
	0x021D5148 STP X31, X31, [X31]
	0x021D514C LDR X8, [X19 + 0x38]
	0x021D5150 ADD X0, X31, 0x0
	0x021D5154 MOV X1, X20
	0x021D5158 LDR X2, [X8 + 0x10]
	0x021D515C BL 0x28E4D28
	0x021D5160 LDR V0, [X31]
	0x021D5164 ADD X0, X31, 0x10
	0x021D5168 STR V0, [X31 + 0x1]
	0x021D516C LDR X8, [X19 + 0x38]
	0x021D5170 LDR X1, [X8 + 0x18]
	0x021D5174 BL 0x28E5384
	0x021D5178 LDP X20, X19, [X31 + 0x30]
	0x021D517C LDR X30, [X31 + 0x20]
	0x021D5180 ADD X31, X31, 0x40
	0x021D5184 RET
	0x021D5188 ADRP X0, 0x1F29000
	0x021D518C LDR X0, [X0 + 0x580]
	0x021D5190 BL 0x1C16D08
	0x021D5194 MOV X1, X31
	0x021D5198 BL 0x35DEB28
	0x021D519C MOV X1, X19
	0x021D51A0 BL 0x1C16DEC
	0x021D51A4 SUB X31, X31, 0x40
	0x021D51A8 STR X30, [X31 + 0x20]
	0x021D51AC STP X20, X19, [X31 + 0x30]
	0x021D51B0 LDR X8, [X1 + 0x38]
	0x021D51B4 MOV X19, X1
	0x021D51B8 MOV X20, X0
	0x021D51BC CBNZ X8, 0x21D51C8
	0x021D51C0 MOV X0, X19
	0x021D51C4 BL 0x1C5C6E0
	0x021D51C8 STP X31, X31, [X31 + 0x10]
	0x021D51CC CBZ X20, 0x21D5210
	0x021D51D0 STP X31, X31, [X31]
	0x021D51D4 LDR X8, [X19 + 0x38]
	0x021D51D8 ADD X0, X31, 0x0
	0x021D51DC MOV X1, X20
	0x021D51E0 LDR X2, [X8 + 0x10]
	0x021D51E4 BL 0x28E5444
	0x021D51E8 LDR V0, [X31]
	0x021D51EC ADD X0, X31, 0x10
	0x021D51F0 STR V0, [X31 + 0x1]
	0x021D51F4 LDR X8, [X19 + 0x38]
	0x021D51F8 LDR X1, [X8 + 0x18]
	0x021D51FC BL 0x28E5A04
	0x021D5200 LDP X20, X19, [X31 + 0x30]
	0x021D5204 LDR X30, [X31 + 0x20]
	0x021D5208 ADD X31, X31, 0x40
	0x021D520C RET
	0x021D5210 ADRP X0, 0x1F29000
	0x021D5214 LDR X0, [X0 + 0x580]
	0x021D5218 BL 0x1C16D08
	0x021D521C MOV X1, X31
	0x021D5220 BL 0x35DEB28
	0x021D5224 MOV X1, X19
	0x021D5228 BL 0x1C16DEC
	0x021D522C SUB X31, X31, 0x40
	0x021D5230 STR X30, [X31 + 0x20]
	0x021D5234 STP X20, X19, [X31 + 0x30]
	0x021D5238 LDR X8, [X1 + 0x38]
	0x021D523C MOV X19, X1
	0x021D5240 MOV X20, X0
	0x021D5244 CBNZ X8, 0x21D5250
	0x021D5248 MOV X0, X19
	0x021D524C BL 0x1C5C6E0
	0x021D5250 STP X31, X31, [X31 + 0x10]
	0x021D5254 CBZ X20, 0x21D5298
	0x021D5258 STP X31, X31, [X31]
	0x021D525C LDR X8, [X19 + 0x38]
	0x021D5260 ADD X0, X31, 0x0
	0x021D5264 MOV X1, X20
	0x021D5268 LDR X2, [X8 + 0x10]
	0x021D526C BL 0x28E5AC4
	0x021D5270 LDR V0, [X31]
	0x021D5274 ADD X0, X31, 0x10
	0x021D5278 STR V0, [X31 + 0x1]
	0x021D527C LDR X8, [X19 + 0x38]
	0x021D5280 LDR X1, [X8 + 0x18]
	0x021D5284 BL 0x28E6080
	0x021D5288 LDP X20, X19, [X31 + 0x30]
	0x021D528C LDR X30, [X31 + 0x20]
	0x021D5290 ADD X31, X31, 0x40
	0x021D5294 RET
	0x021D5298 ADRP X0, 0x1F29000
	0x021D529C LDR X0, [X0 + 0x580]
	0x021D52A0 BL 0x1C16D08
	0x021D52A4 MOV X1, X31
	0x021D52A8 BL 0x35DEB28
	0x021D52AC MOV X1, X19
	0x021D52B0 BL 0x1C16DEC
	0x021D52B4 SUB X31, X31, 0x40
	0x021D52B8 STR X30, [X31 + 0x20]
	0x021D52BC STP X20, X19, [X31 + 0x30]
	0x021D52C0 LDR X8, [X1 + 0x38]
	0x021D52C4 MOV X19, X1
	0x021D52C8 MOV X20, X0
	0x021D52CC CBNZ X8, 0x21D52D8
	0x021D52D0 MOV X0, X19
	0x021D52D4 BL 0x1C5C6E0
	0x021D52D8 STP X31, X31, [X31 + 0x10]
	0x021D52DC CBZ X20, 0x21D5320
	0x021D52E0 STP X31, X31, [X31]
	0x021D52E4 LDR X8, [X19 + 0x38]
	0x021D52E8 ADD X0, X31, 0x0
	0x021D52EC MOV X1, X20
	0x021D52F0 LDR X2, [X8 + 0x10]
	0x021D52F4 BL 0x28E6140
	0x021D52F8 LDR V0, [X31]
	0x021D52FC ADD X0, X31, 0x10
	0x021D5300 STR V0, [X31 + 0x1]
	0x021D5304 LDR X8, [X19 + 0x38]
	0x021D5308 LDR X1, [X8 + 0x18]
	0x021D530C BL 0x28E66FC
	0x021D5310 LDP X20, X19, [X31 + 0x30]
	0x021D5314 LDR X30, [X31 + 0x20]
	0x021D5318 ADD X31, X31, 0x40
	0x021D531C RET
	0x021D5320 ADRP X0, 0x1F29000
	0x021D5324 LDR X0, [X0 + 0x580]
	0x021D5328 BL 0x1C16D08
	0x021D532C MOV X1, X31
	0x021D5330 BL 0x35DEB28
	0x021D5334 MOV X1, X19
	0x021D5338 BL 0x1C16DEC
	0x021D533C SUB X31, X31, 0x40
	0x021D5340 STR X30, [X31 + 0x20]
	0x021D5344 STP X20, X19, [X31 + 0x30]
	0x021D5348 LDR X8, [X1 + 0x38]
	0x021D534C MOV X19, X1
	0x021D5350 MOV X20, X0
	0x021D5354 CBNZ X8, 0x21D5360
	0x021D5358 MOV X0, X19
	0x021D535C BL 0x1C5C6E0
	0x021D5360 STP X31, X31, [X31 + 0x10]
	0x021D5364 CBZ X20, 0x21D53A8
	0x021D5368 STP X31, X31, [X31]
	0x021D536C LDR X8, [X19 + 0x38]
	0x021D5370 ADD X0, X31, 0x0
	0x021D5374 MOV X1, X20
	0x021D5378 LDR X2, [X8 + 0x10]
	0x021D537C BL 0x28E67BC
	0x021D5380 LDR V0, [X31]
	0x021D5384 ADD X0, X31, 0x10
	0x021D5388 STR V0, [X31 + 0x1]
	0x021D538C LDR X8, [X19 + 0x38]
	0x021D5390 LDR X1, [X8 + 0x18]
	0x021D5394 BL 0x28E6D9C
	0x021D5398 LDP X20, X19, [X31 + 0x30]
	0x021D539C LDR X30, [X31 + 0x20]
	0x021D53A0 ADD X31, X31, 0x40
	0x021D53A4 RET
	0x021D53A8 ADRP X0, 0x1F29000
	0x021D53AC LDR X0, [X0 + 0x580]
	0x021D53B0 BL 0x1C16D08
	0x021D53B4 MOV X1, X31
	0x021D53B8 BL 0x35DEB28
	0x021D53BC MOV X1, X19
	0x021D53C0 BL 0x1C16DEC
	0x021D53C4 SUB X31, X31, 0x40
	0x021D53C8 STR X30, [X31 + 0x20]
	0x021D53CC STP X20, X19, [X31 + 0x30]
	0x021D53D0 LDR X8, [X1 + 0x38]
	0x021D53D4 MOV X19, X1
	0x021D53D8 MOV X20, X0
	0x021D53DC CBNZ X8, 0x21D53E8
	0x021D53E0 MOV X0, X19
	0x021D53E4 BL 0x1C5C6E0
	0x021D53E8 STP X31, X31, [X31 + 0x10]
	0x021D53EC CBZ X20, 0x21D5430
	0x021D53F0 STP X31, X31, [X31]
	0x021D53F4 LDR X8, [X19 + 0x38]
	0x021D53F8 ADD X0, X31, 0x0
	0x021D53FC MOV X1, X20
	0x021D5400 LDR X2, [X8 + 0x10]
	0x021D5404 BL 0x28E6E5C
	0x021D5408 LDR V0, [X31]
	0x021D540C ADD X0, X31, 0x10
	0x021D5410 STR V0, [X31 + 0x1]
	0x021D5414 LDR X8, [X19 + 0x38]
	0x021D5418 LDR X1, [X8 + 0x18]
	0x021D541C BL 0x28E7418
	0x021D5420 LDP X20, X19, [X31 + 0x30]
	0x021D5424 LDR X30, [X31 + 0x20]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X8, [X2+56]
	011 Move X19, X2
	012 Move X22, X1
	013 Move X20, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {27}
	016 Move X0, 0x1F1F000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move X0, 0x1F1F000
	020 Move X0, [X0+3608]
	021 Call 0x1C17CF4
	022 Move X8, [X19+56]
	023 Compare X8, 0
	024 JumpIfNotEqual {27}
	025 Move X0, X19
	026 Call 0x1C5D6E0
	027 Compare X20, 0
	028 JumpIfEqual {189}
	029 Compare X22, 0
	030 JumpIfEqual {191}
	031 Move X8, [X19+56]
	032 Move X1, [X8]
	033 Move W8, [X1+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {41}
	038 Move X0, X1
	039 Call 0x1C5D684
	040 Move X1, X0
	041 Move X8, [X20]
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move X0, X20
	052 Move W2, W31
	053 Call 0x1C5D788
	054 NotImplemented "Instruction LDRSW not yet implemented."
	055 Add X8, X8, X9
	056 Add X0, X8, 312
	057 Move X8, [X0]
	058 Move X1, [X0+8]
	059 Move X0, X20
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move X25, 0x1F1F000
	062 Move X25, [X25+3608]
	063 Move X20, X0
	064 Move X21, X31
	065 Move X24, X31
	066 Move TEMP, 0x80000000
	067 Not TEMP
	068 Move X26, TEMP
	069 Compare X20, 0
	070 JumpIfEqual {188}
	071 Move X8, [X20]
	072 Move X1, [X25]
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Compare X9, 0
	075 JumpIfEqual {82}
	076 Move X10, [X8+176]
	077 Add X10, X10, 8
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Subtract X9, X9, 1
	081 Add X10, X10, 16
	082 Move X0, X20
	083 Move W2, W31
	084 Call 0x1C5D788
	085 NotImplemented "Instruction LDRSW not yet implemented."
	086 Add X8, X8, X9
	087 Add X0, X8, 312
	088 Move X8, [X0]
	089 Move X1, [X0+8]
	090 Move X0, X20
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {139}
	096 Move X8, [X19+56]
	097 Move X1, [X8+32]
	098 Move W8, [X1+309]
	099 Move TEMP, X8
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {106}
	103 Move X0, X1
	104 Call 0x1C5D684
	105 Move X1, X0
	106 Move X8, [X20]
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 Compare X9, 0
	109 JumpIfEqual {116}
	110 Move X10, [X8+176]
	111 Add X10, X10, 8
	112 NotImplemented "Instruction LDUR not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Subtract X9, X9, 1
	115 Add X10, X10, 16
	116 Move X0, X20
	117 Move W2, W31
	118 Call 0x1C5D788
	119 NotImplemented "Instruction LDRSW not yet implemented."
	120 Add X8, X8, X9
	121 Add X0, X8, 312
	122 Move X8, [X0]
	123 Move X1, [X0+8]
	124 Move X0, X20
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Move X23, X0
	127 Move X0, [X22+64]
	128 Move X8, [X22+24]
	129 Move X2, [X22+40]
	130 Move X1, X23
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfNotEqual {69}
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Add X24, X24, 1
	138 Move X21, X23
	139 Move X22, X31
	140 Move W23, 12
	141 Compare X20, 0
	142 JumpIfEqual {166}
	143 Move X10, 0x1F1F000
	144 Move X8, [X20]
	145 Move X10, [X10+3584]
	146 NotImplemented "Instruction LDRH not yet implemented."
	147 Move X1, [X10]
	148 Compare X9, 0
	149 JumpIfEqual {156}
	150 Move X10, [X8+176]
	151 Add X10, X10, 8
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Subtract X9, X9, 1
	155 Add X10, X10, 16
	156 Move X0, X20
	157 Move W2, W31
	158 Call 0x1C5D788
	159 NotImplemented "Instruction LDRSW not yet implemented."
	160 Add X8, X8, X9
	161 Add X0, X8, 312
	162 Move X8, [X0]
	163 Move X1, [X0+8]
	164 Move X0, X20
	165 NotImplemented "Instruction BLR not yet implemented."
	166 Compare X22, 0
	167 JumpIfNotEqual {198}
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Compare W23, 0
	170 JumpIfNotEqual {177}
	171 Compare X24, 0
	172 JumpIfEqual {176}
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X0, X31
	175 Call Error.MoreThanOneMatch
	176 Move X21, X31
	177 Move X0, X21
	178 Move X20, [X31+64]
	179 Move X19, [X31+72]
	180 Move X22, [X31+48]
	181 Move X21, [X31+56]
	182 Move X24, [X31+32]
	183 Move X23, [X31+40]
	184 Move X26, [X31+16]
	185 Move X25, [X31+24]
	186 Move X30, [X31+80]
	187 Return X0
	188 Call 0x1C17F20
	189 Move X0, 0x1F2A000
	190 Move X0, [X0+1408]
	191 Move X0, 0x1F47000
	192 Move X0, [X0+2288]
	193 Call 0x1C17D08
	194 Move X1, X31
	195 Call Error.ArgumentNull, X0
	196 Move X1, X19
	197 Call 0x1C17DEC
	198 Move X0, X22
	199 Call 0x1C17F18
	200 Call 0x1C17F30
	201 Move X1, X19
	202 Call 0x1C17DEC
	203 Move TEMP, 0x80000000
	204 Not TEMP
	205 Move X24, TEMP
	206 Move X21, X23
	207 Move X24, X31
	208 Move X21, X31
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Call 0x3EB2AD0
	211 Move X22, [X0]
	212 Call 0x3EB2AE0
	213 Move W23, W31
	214 Compare X20, 0
	215 JumpIfNotEqual {143}
	216 Move X19, X0
	217 Move X22, X31
	218 Move X19, X0
	219 Compare X20, 0
	220 JumpIfEqual {244}
	221 Move X10, 0x1F1F000
	222 Move X8, [X20]
	223 Move X10, [X10+3584]
	224 NotImplemented "Instruction LDRH not yet implemented."
	225 Move X1, [X10]
	226 Compare X9, 0
	227 JumpIfEqual {234}
	228 Move X10, [X8+176]
	229 Add X10, X10, 8
	230 NotImplemented "Instruction LDUR not yet implemented."
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Subtract X9, X9, 1
	233 Add X10, X10, 16
	234 Move X0, X20
	235 Move W2, W31
	236 Call 0x1C5D788
	237 NotImplemented "Instruction LDRSW not yet implemented."
	238 Add X8, X8, X9
	239 Add X0, X8, 312
	240 Move X8, [X0]
	241 Move X1, [X0+8]
	242 Move X0, X20
	243 NotImplemented "Instruction BLR not yet implemented."
	244 Compare X22, 0
	245 JumpIfNotEqual {248}
	246 Move X0, X19
	247 Call 0x1D2D690
	248 Move X0, X22
	249 Call 0x1C17F18
	250 Call 0x1991590

Method: TSource ElementAt(System.Collections.Generic.IEnumerable`1<TSource> source, System.Int32 index)

Disassembly:
	0x021C16A8 BL 0x3EB1AD0
	0x021C16AC LDR X24, [X0]
	0x021C16B0 BL 0x3EB1AE0
	0x021C16B4 MOV W25, W31
	0x021C16B8 CBNZ X23, 0x21C156C
	0x021C16BC B 0x21C15CC
	0x021C16C0 MOV X24, X31
	0x021C16C4 B 0x21C16CC
	0x021C16C8 MOV X25, X0
	0x021C16CC CBZ X23, 0x21C1730
	0x021C16D0 ADRP X10, 0x1F32000
	0x021C16D4 LDR X8, [X23]
	0x021C16D8 LDR X10, [X10 + 0xE00]
	0x021C16DC LDRH W9, [X8 + 0x12E]
	0x021C16E0 LDR X1, [X10]
	0x021C16E4 CBZ X9, 0x21C1708
	0x021C16E8 LDR X10, [X8 + 0xB0]
	0x021C16EC ADD X10, X10, 0x8
	0x021C16F0 LDUR X11, [X10 - 0x8]
	0x021C16F4 CMP X11, X1
	0x021C16F8 B.EQ 0x21C1718
	0x021C16FC SUBS X9, X9, 0x1
	0x021C1700 ADD X10, X10, 0x10
	0x021C1704 B.NE 0x21C16F0
	0x021C1708 MOV X0, X23
	0x021C170C MOV W2, W31
	0x021C1710 BL 0x1C5C788
	0x021C1714 B 0x21C1724
	0x021C1718 LDRSW X9, [X10]
	0x021C171C ADD X8, X8, X9, 0x4, LSL
	0x021C1720 ADD X0, X8, 0x138
	0x021C1724 LDP X8, X1, [X0]
	0x021C1728 MOV X0, X23
	0x021C172C BLR X8
	0x021C1730 CBNZ X24, 0x21C173C
	0x021C1734 MOV X0, X25
	0x021C1738 BL 0x1D2C690
	0x021C173C MOV X0, X24
	0x021C1740 BL 0x1C16F18
	0x021C1744 BL 0x1990590
	0x021C1748 STP X30, X19, [X31 - 0x10]!
	0x021C174C LDR X8, [X0 + 0x38]
	0x021C1750 MOV X19, X0
	0x021C1754 CBNZ X8, 0x21C1764
	0x021C1758 MOV X0, X19
	0x021C175C BL 0x1C5C6E0
	0x021C1760 LDR X8, [X19 + 0x38]
	0x021C1764 LDR X0, [X8 + 0x10]
	0x021C1768 LDRB W8, [X0 + 0x135]
	0x021C176C TBNZ X8, 0x0, 0x21C1774
	0x021C1770 BL 0x1C5C684
	0x021C1774 LDR W8, [X0 + 0xE0]
	0x021C1778 CBNZ W8, 0x21C1780
	0x021C177C BL 0x1C16DFC
	0x021C1780 LDR X8, [X19 + 0x38]
	0x021C1784 LDR X0, [X8 + 0x10]
	0x021C1788 LDRB W8, [X0 + 0x135]
	0x021C178C TBNZ X8, 0x0, 0x21C1794
	0x021C1790 BL 0x1C5C684
	0x021C1794 LDR X8, [X0 + 0xB8]
	0x021C1798 LDR X0, [X8]
	0x021C179C LDP X30, X19, [X31], #0x10
	0x021C17A0 RET
	0x021C17A4 STP X30, X19, [X31 - 0x10]!
	0x021C17A8 LDR X8, [X0 + 0x38]
	0x021C17AC MOV X19, X0
	0x021C17B0 CBNZ X8, 0x21C17C0
	0x021C17B4 MOV X0, X19
	0x021C17B8 BL 0x1C5C6E0
	0x021C17BC LDR X8, [X19 + 0x38]
	0x021C17C0 LDR X0, [X8 + 0x10]
	0x021C17C4 LDRB W8, [X0 + 0x135]
	0x021C17C8 TBNZ X8, 0x0, 0x21C17D0
	0x021C17CC BL 0x1C5C684
	0x021C17D0 LDR W8, [X0 + 0xE0]
	0x021C17D4 CBNZ W8, 0x21C17DC
	0x021C17D8 BL 0x1C16DFC
	0x021C17DC LDR X8, [X19 + 0x38]
	0x021C17E0 LDR X0, [X8 + 0x10]
	0x021C17E4 LDRB W8, [X0 + 0x135]
	0x021C17E8 TBNZ X8, 0x0, 0x21C17F0
	0x021C17EC BL 0x1C5C684
	0x021C17F0 LDR X8, [X0 + 0xB8]
	0x021C17F4 LDR X0, [X8]
	0x021C17F8 LDP X30, X19, [X31], #0x10
	0x021C17FC RET
	0x021C1800 STP X30, X19, [X31 - 0x10]!
	0x021C1804 LDR X8, [X0 + 0x38]
	0x021C1808 MOV X19, X0
	0x021C180C CBNZ X8, 0x21C181C
	0x021C1810 MOV X0, X19
	0x021C1814 BL 0x1C5C6E0
	0x021C1818 LDR X8, [X19 + 0x38]
	0x021C181C LDR X0, [X8 + 0x10]
	0x021C1820 LDRB W8, [X0 + 0x135]
	0x021C1824 TBNZ X8, 0x0, 0x21C182C
	0x021C1828 BL 0x1C5C684
	0x021C182C LDR W8, [X0 + 0xE0]
	0x021C1830 CBNZ W8, 0x21C1838
	0x021C1834 BL 0x1C16DFC
	0x021C1838 LDR X8, [X19 + 0x38]
	0x021C183C LDR X0, [X8 + 0x10]
	0x021C1840 LDRB W8, [X0 + 0x135]
	0x021C1844 TBNZ X8, 0x0, 0x21C184C
	0x021C1848 BL 0x1C5C684
	0x021C184C LDR X8, [X0 + 0xB8]
	0x021C1850 LDR X0, [X8]
	0x021C1854 LDP X30, X19, [X31], #0x10
	0x021C1858 RET
	0x021C185C STP X30, X19, [X31 - 0x10]!
	0x021C1860 LDR X8, [X0 + 0x38]
	0x021C1864 MOV X19, X0
	0x021C1868 CBNZ X8, 0x21C1878
	0x021C186C MOV X0, X19
	0x021C1870 BL 0x1C5C6E0
	0x021C1874 LDR X8, [X19 + 0x38]
	0x021C1878 LDR X0, [X8 + 0x10]
	0x021C187C LDRB W8, [X0 + 0x135]
	0x021C1880 TBNZ X8, 0x0, 0x21C1888
	0x021C1884 BL 0x1C5C684
	0x021C1888 LDR W8, [X0 + 0xE0]
	0x021C188C CBNZ W8, 0x21C1894
	0x021C1890 BL 0x1C16DFC
	0x021C1894 LDR X8, [X19 + 0x38]
	0x021C1898 LDR X0, [X8 + 0x10]
	0x021C189C LDRB W8, [X0 + 0x135]
	0x021C18A0 TBNZ X8, 0x0, 0x21C18A8
	0x021C18A4 BL 0x1C5C684
	0x021C18A8 LDR X8, [X0 + 0xB8]
	0x021C18AC LDR X0, [X8]
	0x021C18B0 LDP X30, X19, [X31], #0x10
	0x021C18B4 RET
	0x021C18B8 STP X30, X19, [X31 - 0x10]!
	0x021C18BC LDR X8, [X0 + 0x38]
	0x021C18C0 MOV X19, X0
	0x021C18C4 CBNZ X8, 0x21C18D4
	0x021C18C8 MOV X0, X19
	0x021C18CC BL 0x1C5C6E0
	0x021C18D0 LDR X8, [X19 + 0x38]
	0x021C18D4 LDR X0, [X8 + 0x10]
	0x021C18D8 LDRB W8, [X0 + 0x135]
	0x021C18DC TBNZ X8, 0x0, 0x21C18E4
	0x021C18E0 BL 0x1C5C684
	0x021C18E4 LDR W8, [X0 + 0xE0]
	0x021C18E8 CBNZ W8, 0x21C18F0
	0x021C18EC BL 0x1C16DFC
	0x021C18F0 LDR X8, [X19 + 0x38]
	0x021C18F4 LDR X0, [X8 + 0x10]
	0x021C18F8 LDRB W8, [X0 + 0x135]
	0x021C18FC TBNZ X8, 0x0, 0x21C1904
	0x021C1900 BL 0x1C5C684
	0x021C1904 LDR X8, [X0 + 0xB8]
	0x021C1908 LDR X0, [X8]
	0x021C190C LDP X30, X19, [X31], #0x10
	0x021C1910 RET
	0x021C1914 STP X30, X19, [X31 - 0x10]!
	0x021C1918 LDR X8, [X0 + 0x38]
	0x021C191C MOV X19, X0
	0x021C1920 CBNZ X8, 0x21C1930
	0x021C1924 MOV X0, X19
	0x021C1928 BL 0x1C5C6E0
	0x021C192C LDR X8, [X19 + 0x38]
	0x021C1930 LDR X0, [X8 + 0x10]
	0x021C1934 LDRB W8, [X0 + 0x135]
	0x021C1938 TBNZ X8, 0x0, 0x21C1940
	0x021C193C BL 0x1C5C684
	0x021C1940 LDR W8, [X0 + 0xE0]
	0x021C1944 CBNZ W8, 0x21C194C
	0x021C1948 BL 0x1C16DFC
	0x021C194C LDR X8, [X19 + 0x38]
	0x021C1950 LDR X0, [X8 + 0x10]
	0x021C1954 LDRB W8, [X0 + 0x135]
	0x021C1958 TBNZ X8, 0x0, 0x21C1960
	0x021C195C BL 0x1C5C684
	0x021C1960 LDR X8, [X0 + 0xB8]
	0x021C1964 LDR X0, [X8]
	0x021C1968 LDP X30, X19, [X31], #0x10
	0x021C196C RET
	0x021C1970 STP X30, X21, [X31 - 0x20]!
	0x021C1974 STP X20, X19, [X31 + 0x10]
	0x021C1978 LDR X8, [X2 + 0x38]
	0x021C197C MOV X19, X2
	0x021C1980 MOV X20, X1
	0x021C1984 MOV X21, X0
	0x021C1988 CBNZ X8, 0x21C1994
	0x021C198C MOV X0, X19
	0x021C1990 BL 0x1C5C6E0
	0x021C1994 CBZ X21, 0x21C19BC
	0x021C1998 CBZ X20, 0x21C19C8
	0x021C199C LDR X8, [X19 + 0x38]
	0x021C19A0 MOV X1, X20
	0x021C19A4 LDP X20, X19, [X31 + 0x10]
	0x021C19A8 MOV X0, X21
	0x021C19AC LDR X3, [X8 + 0x8]
	0x021C19B0 MOV X2, X31
	0x021C19B4 LDP X30, X21, [X31], #0x20
	0x021C19B8 B 0x21C1D88
	0x021C19BC ADRP X0, 0x1F5A000
	0x021C19C0 LDR X0, [X0 + 0x9C0]
	0x021C19C4 B 0x21C19D0
	0x021C19C8 ADRP X0, 0x1F5A000
	0x021C19CC LDR X0, [X0 + 0x9C8]
	0x021C19D0 BL 0x1C16D08
	0x021C19D4 MOV X1, X31
	0x021C19D8 BL 0x35DEB28
	0x021C19DC MOV X1, X19
	0x021C19E0 BL 0x1C16DEC
	0x021C19E4 STP X30, X21, [X31 - 0x20]!
	0x021C19E8 STP X20, X19, [X31 + 0x10]
	0x021C19EC LDR X8, [X2 + 0x38]
	0x021C19F0 MOV X19, X2
	0x021C19F4 MOV X20, X1
	0x021C19F8 MOV X21, X0
	0x021C19FC CBNZ X8, 0x21C1A08
	0x021C1A00 MOV X0, X19
	0x021C1A04 BL 0x1C5C6E0
	0x021C1A08 CBZ X21, 0x21C1A30
	0x021C1A0C CBZ X20, 0x21C1A3C
	0x021C1A10 LDR X8, [X19 + 0x38]
	0x021C1A14 MOV X1, X20
	0x021C1A18 LDP X20, X19, [X31 + 0x10]
	0x021C1A1C MOV X0, X21
	0x021C1A20 LDR X3, [X8 + 0x8]
	0x021C1A24 MOV X2, X31
	0x021C1A28 LDP X30, X21, [X31], #0x20
	0x021C1A2C B 0x21C1E08
	0x021C1A30 ADRP X0, 0x1F5A000
	0x021C1A34 LDR X0, [X0 + 0x9C0]
	0x021C1A38 B 0x21C1A44
	0x021C1A3C ADRP X0, 0x1F5A000
	0x021C1A40 LDR X0, [X0 + 0x9C8]
	0x021C1A44 BL 0x1C16D08
	0x021C1A48 MOV X1, X31
	0x021C1A4C BL 0x35DEB28
	0x021C1A50 MOV X1, X19
	0x021C1A54 BL 0x1C16DEC
	0x021C1A58 STP X30, X21, [X31 - 0x20]!
	0x021C1A5C STP X20, X19, [X31 + 0x10]
	0x021C1A60 LDR X8, [X2 + 0x38]
	0x021C1A64 MOV X19, X2
	0x021C1A68 MOV X20, X1
	0x021C1A6C MOV X21, X0
	0x021C1A70 CBNZ X8, 0x21C1A7C
	0x021C1A74 MOV X0, X19
	0x021C1A78 BL 0x1C5C6E0
	0x021C1A7C CBZ X21, 0x21C1AA4
	0x021C1A80 CBZ X20, 0x21C1AB0
	0x021C1A84 LDR X8, [X19 + 0x38]
	0x021C1A88 MOV X1, X20
	0x021C1A8C LDP X20, X19, [X31 + 0x10]
	0x021C1A90 MOV X0, X21
	0x021C1A94 LDR X3, [X8 + 0x8]
	0x021C1A98 MOV X2, X31
	0x021C1A9C LDP X30, X21, [X31], #0x20
	0x021C1AA0 B 0x21C1E88

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X2+56]
	008 Move X20, X2
	009 Move W21, W1
	010 Move X19, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {24}
	013 Move X0, 0x1F33000
	014 Move X0, [X0+3584]
	015 Call 0x1C17CF4
	016 Move X0, 0x1F33000
	017 Move X0, [X0+3608]
	018 Call 0x1C17CF4
	019 Move X8, [X20+56]
	020 Compare X8, 0
	021 JumpIfNotEqual {24}
	022 Move X0, X20
	023 Call 0x1C5D6E0
	024 Compare X19, 0
	025 JumpIfEqual {218}
	026 Move X8, [X20+56]
	027 Move X1, [X8+8]
	028 Move W8, [X1+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {36}
	033 Move X0, X1
	034 Call 0x1C5D684
	035 Move X1, X0
	036 Move X0, X19
	037 Call 0x1C17E00
	038 Compare X0, 0
	039 JumpIfEqual {64}
	040 Move X8, [X20+56]
	041 Move X22, X0
	042 Move X1, [X8+8]
	043 Move W8, [X1+309]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {51}
	048 Move X0, X1
	049 Call 0x1C5D684
	050 Move X1, X0
	051 Move X8, [X22]
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move X0, X22
	062 Move W2, W31
	063 Call 0x1C5D788
	064 Move TEMP, X21
	065 And TEMP, TEMP, -2147483648
	066 Compare TEMP, -2147483648
	067 JumpIfEqual {223}
	068 Move X8, [X20+56]
	069 Move X1, [X8]
	070 Move W8, [X1+309]
	071 Move TEMP, X8
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {78}
	075 Move X0, X1
	076 Call 0x1C5D684
	077 Move X1, X0
	078 Move X8, [X19]
	079 NotImplemented "Instruction LDRH not yet implemented."
	080 Compare X9, 0
	081 JumpIfEqual {88}
	082 Move X10, [X8+176]
	083 Add X10, X10, 8
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Subtract X9, X9, 1
	087 Add X10, X10, 16
	088 Move X0, X19
	089 Move W2, W31
	090 Call 0x1C5D788
	091 NotImplemented "Instruction LDRSW not yet implemented."
	092 Add X8, X8, X9
	093 Add X0, X8, 312
	094 Move X8, [X0]
	095 Move X2, [X0+8]
	096 Move X0, X22
	097 Move W1, W21
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Move X21, X0
	100 Move X22, X1
	101 NotImplemented "Instruction LDRSW not yet implemented."
	102 Add X8, X8, X9
	103 Add X0, X8, 312
	104 Move X8, [X0]
	105 Move X1, [X0+8]
	106 Move X0, X19
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move X19, X0
	109 Compare X0, 0
	110 JumpIfEqual {230}
	111 Move X22, 0x1F33000
	112 Move X22, [X22+3608]
	113 Move X8, [X19]
	114 Move X1, [X22]
	115 Move W23, W21
	116 NotImplemented "Instruction LDRH not yet implemented."
	117 Compare X9, 0
	118 JumpIfEqual {125}
	119 Move X10, [X8+176]
	120 Add X10, X10, 8
	121 NotImplemented "Instruction LDUR not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Subtract X9, X9, 1
	124 Add X10, X10, 16
	125 Move X0, X19
	126 Move W2, W31
	127 Call 0x1C5D788
	128 NotImplemented "Instruction LDRSW not yet implemented."
	129 Add X8, X8, X9
	130 Add X0, X8, 312
	131 Move X8, [X0]
	132 Move X1, [X0+8]
	133 Move X0, X19
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {211}
	139 Subtract W21, W23, 1
	140 Compare W23, 0
	141 JumpIfNotEqual {113}
	142 Move X8, [X20+56]
	143 Move X1, [X8+40]
	144 Move W8, [X1+309]
	145 Move TEMP, X8
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {152}
	149 Move X0, X1
	150 Call 0x1C5D684
	151 Move X1, X0
	152 Move X8, [X19]
	153 NotImplemented "Instruction LDRH not yet implemented."
	154 Compare X9, 0
	155 JumpIfEqual {162}
	156 Move X10, [X8+176]
	157 Add X10, X10, 8
	158 NotImplemented "Instruction LDUR not yet implemented."
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Subtract X9, X9, 1
	161 Add X10, X10, 16
	162 Move X0, X19
	163 Move W2, W31
	164 Call 0x1C5D788
	165 NotImplemented "Instruction LDRSW not yet implemented."
	166 Add X8, X8, X9
	167 Add X0, X8, 312
	168 Move X8, [X0]
	169 Move X1, [X0+8]
	170 Move X0, X19
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Move X21, X0
	173 Move X22, X1
	174 Move X20, X31
	175 Compare X19, 0
	176 JumpIfEqual {200}
	177 Move X10, 0x1F33000
	178 Move X8, [X19]
	179 Move X10, [X10+3584]
	180 NotImplemented "Instruction LDRH not yet implemented."
	181 Move X1, [X10]
	182 Compare X9, 0
	183 JumpIfEqual {190}
	184 Move X10, [X8+176]
	185 Add X10, X10, 8
	186 NotImplemented "Instruction LDUR not yet implemented."
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Subtract X9, X9, 1
	189 Add X10, X10, 16
	190 Move X0, X19
	191 Move W2, W31
	192 Call 0x1C5D788
	193 NotImplemented "Instruction LDRSW not yet implemented."
	194 Add X8, X8, X9
	195 Add X0, X8, 312
	196 Move X8, [X0]
	197 Move X1, [X0+8]
	198 Move X0, X19
	199 NotImplemented "Instruction BLR not yet implemented."
	200 Compare X20, 0
	201 JumpIfNotEqual {231}
	202 Move X0, X21
	203 Move X1, X22
	204 Move X20, [X31+32]
	205 Move X19, [X31+40]
	206 Move X22, [X31+16]
	207 Move X21, [X31+24]
	208 Move X30, [X31+48]
	209 Move X23, [X31+56]
	210 Return X0
	211 Move X0, 0x1F3E000
	212 Move X0, [X0+304]
	213 Call 0x1C17D08
	214 Move X1, X31
	215 Call Error.ArgumentOutOfRange, X0
	216 Move X1, X20
	217 Call 0x1C17DEC
	218 Move X0, 0x1F3E000
	219 Move X0, [X0+1408]
	220 Call 0x1C17D08
	221 Move X1, X31
	222 Call Error.ArgumentNull, X0
	223 Move X0, 0x1F3E000
	224 Move X0, [X0+304]
	225 Call 0x1C17D08
	226 Move X1, X31
	227 Call Error.ArgumentOutOfRange, X0
	228 Move X1, X20
	229 Call 0x1C17DEC
	230 Call 0x1C17F20
	231 Move X0, X20
	232 Call 0x1C17F18
	233 Move X21, X0
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move X0, X21
	236 Call 0x3EB2AD0
	237 Move X20, [X0]
	238 Call 0x3EB2AE0
	239 Move X22, X31
	240 Move X21, X31
	241 Compare X19, 0
	242 JumpIfNotEqual {177}
	243 Move X20, X31
	244 Move X21, X0
	245 Compare X19, 0
	246 JumpIfEqual {270}
	247 Move X10, 0x1F33000
	248 Move X8, [X19]
	249 Move X10, [X10+3584]
	250 NotImplemented "Instruction LDRH not yet implemented."
	251 Move X1, [X10]
	252 Compare X9, 0
	253 JumpIfEqual {260}
	254 Move X10, [X8+176]
	255 Add X10, X10, 8
	256 NotImplemented "Instruction LDUR not yet implemented."
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Subtract X9, X9, 1
	259 Add X10, X10, 16
	260 Move X0, X19
	261 Move W2, W31
	262 Call 0x1C5D788
	263 NotImplemented "Instruction LDRSW not yet implemented."
	264 Add X8, X8, X9
	265 Add X0, X8, 312
	266 Move X8, [X0]
	267 Move X1, [X0+8]
	268 Move X0, X19
	269 NotImplemented "Instruction BLR not yet implemented."
	270 Compare X20, 0
	271 JumpIfNotEqual {274}
	272 Move X0, X21
	273 Call 0x1D2D690
	274 Move X0, X20
	275 Call 0x1C17F18
	276 Call 0x1991590

Method: System.Collections.Generic.IEnumerable`1<System.Int32> Range(System.Int32 start, System.Int32 count)

Disassembly:
	0x035DFD78 BLR X8
	0x035DFD7C CBNZ X20, 0x35DFDC4
	0x035DFD80 CMP W23, 0x9
	0x035DFD84 B.EQ 0x35DFD8C
	0x035DFD88 CBNZ W23, 0x35DFD90
	0x035DFD8C TBZ X21, 0x0, 0x35DFDCC
	0x035DFD90 LDP X20, X19, [X31 + 0x40]
	0x035DFD94 LDP X22, X21, [X31 + 0x30]
	0x035DFD98 LDP X24, X23, [X31 + 0x20]
	0x035DFD9C LDP X30, X25, [X31 + 0x10]
	0x035DFDA0 MOV V0.16B, V8.16B
	0x035DFDA4 LDR V8, [X31], #0x50
	0x035DFDA8 RET
	0x035DFDAC BL 0x1C16F20
	0x035DFDB0 ADRP X0, 0xB1F000
	0x035DFDB4 LDR X0, [X0 + 0x580]
	0x035DFDB8 BL 0x1C16D08
	0x035DFDBC BL 0x35DEB28
	0x035DFDC0 B 0x35DFDD0

ISIL:
	001 Move TEMP, X1
	002 And TEMP, TEMP, -2147483648
	003 Compare TEMP, -2147483648
	004 JumpIfEqual {9}
	005 Move X8, W1
	006 Add X8, X8, W0
	007 Or W9, W31, 0x80000001
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move [X31-16], X30
	010 Move [X31-8], X19
	011 Move X0, 0xB3D000
	012 Move X0, [X0+1608]
	013 Call 0x1C17D08
	014 Call Error.ArgumentOutOfRange, X0
	015 Move X19, X0
	016 Move X0, 0xB5B000
	017 Move X0, [X0+264]
	018 Call 0x1C17D08
	019 Move X1, X0
	020 Move X0, X19
	021 Call 0x1C17DEC

Method: System.Collections.Generic.IEnumerable`1<System.Int32> RangeIterator(System.Int32 start, System.Int32 count)

Disassembly:
	0x035DFDC4 MOV X0, X20
	0x035DFDC8 BL 0x1C16F18
	0x035DFDCC BL 0x35DEC4C
	0x035DFDD0 MOV X19, X0
	0x035DFDD4 ADRP X0, 0xB5A000
	0x035DFDD8 LDR X0, [X0 + 0x148]
	0x035DFDDC BL 0x1C16D08
	0x035DFDE0 MOV X1, X0
	0x035DFDE4 MOV X0, X19
	0x035DFDE8 BL 0x1C16DEC
	0x035DFDEC MOV W21, W31
	0x035DFDF0 FMOV S8, W31
	0x035DFDF4 B 0x35DFDFC
	0x035DFDF8 B 0x35DFDFC
	0x035DFDFC CMP W1, 0x1
	0x035DFE00 B.NE 0x35DFE1C
	0x035DFE04 BL 0x3EB1AD0
	0x035DFE08 LDR X20, [X0]
	0x035DFE0C BL 0x3EB1AE0
	0x035DFE10 MOV W23, W31
	0x035DFE14 CBNZ X19, 0x35DFD24
	0x035DFE18 B 0x35DFD7C
	0x035DFE1C STR X0, [X31 + 0x8]
	0x035DFE20 MOV X20, X31
	0x035DFE24 B 0x35DFE2C
	0x035DFE28 STR X0, [X31 + 0x8]
	0x035DFE2C CBZ X19, 0x35DFE88
	0x035DFE30 LDR X8, [X19]
	0x035DFE34 LDR X1, [X22]
	0x035DFE38 LDRH W9, [X8 + 0x12E]
	0x035DFE3C CBZ X9, 0x35DFE60
	0x035DFE40 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE02000
	007 Move X22, 0xB5B000
	008 Move W8, [X21+604]
	009 Move X22, [X22+272]
	010 Move W19, W1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB5B000
	017 Move X0, [X0+272]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+604], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X21, X0
	025 Call Object..ctor, X0
	026 Move TEMP, 1
	027 Not TEMP
	028 Move W8, TEMP
	029 Move X0, X31
	030 Move [X21+16], W8
	031 Call Environment.get_CurrentManagedThreadId
	032 Move [X21+24], W0
	033 Move [X21+32], W20
	034 Move [X21+40], W19
	035 Move X0, X21
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Return X0

Method: System.Collections.Generic.IEnumerable`1<TResult> Empty()

Disassembly:
	0x021C2748 STR X31, [X31 + 0xB0]
	0x021C274C STP V0, V0, [X21 + 0x30]
	0x021C2750 STP V0, V0, [X31 + 0x70]
	0x021C2754 STR V0, [X31 + 0x6]
	0x021C2758 CBZ X22, 0x21C2AA4
	0x021C275C LDR X8, [X20 + 0x38]
	0x021C2760 LDR X1, [X8 + 0x8]
	0x021C2764 LDRB W8, [X1 + 0x135]
	0x021C2768 TBNZ X8, 0x0, 0x21C2778
	0x021C276C MOV X0, X1
	0x021C2770 BL 0x1C5C684
	0x021C2774 MOV X1, X0
	0x021C2778 MOV X0, X22
	0x021C277C BL 0x1C16E00
	0x021C2780 CBZ X0, 0x21C27E0
	0x021C2784 LDR X8, [X20 + 0x38]
	0x021C2788 MOV X21, X0
	0x021C278C LDR X1, [X8 + 0x10]
	0x021C2790 LDRB W8, [X1 + 0x135]
	0x021C2794 TBNZ X8, 0x0, 0x21C27A4
	0x021C2798 MOV X0, X1
	0x021C279C BL 0x1C5C684
	0x021C27A0 MOV X1, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+56]
	004 Move X19, X0
	005 Compare X8, 0
	006 JumpIfNotEqual {10}
	007 Move X0, X19
	008 Call 0x1C5D6E0
	009 Move X8, [X19+56]
	010 Move X0, [X8+16]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Move W8, [X0+224]
	018 Compare W8, 0
	019 JumpIfNotEqual {21}
	020 Call 0x1C17DFC
	021 Move X8, [X19+56]
	022 Move X0, [X8+16]
	023 Move W8, [X0+309]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {29}
	028 Call 0x1C5D684
	029 Move X8, [X0+184]
	030 Move X0, [X8]
	031 Move X30, [X31+16]
	032 Move X19, [X31+24]
	033 Return X0

Method: System.Boolean Any(System.Collections.Generic.IEnumerable`1<TSource> source)

Disassembly:
	0x021B3148 LDR X10, [X8 + 0xB0]
	0x021B314C ADD X10, X10, 0x8
	0x021B3150 LDUR X11, [X10 - 0x8]
	0x021B3154 CMP X11, X1
	0x021B3158 B.EQ 0x21B3178
	0x021B315C SUBS X9, X9, 0x1
	0x021B3160 ADD X10, X10, 0x10
	0x021B3164 B.NE 0x21B3150
	0x021B3168 MOV X0, X19
	0x021B316C MOV W2, W31
	0x021B3170 BL 0x1C5C788
	0x021B3174 B 0x21B3184
	0x021B3178 LDRSW X9, [X10]
	0x021B317C ADD X8, X8, X9, 0x4, LSL
	0x021B3180 ADD X0, X8, 0x138
	0x021B3184 LDP X8, X1, [X0]
	0x021B3188 MOV X0, X19
	0x021B318C BLR X8
	0x021B3190 MOV X19, X0
	0x021B3194 CBZ X0, 0x21B32AC
	0x021B3198 ADRP X10, 0x1F40000
	0x021B319C LDR X8, [X19]
	0x021B31A0 LDR X10, [X10 + 0xE18]
	0x021B31A4 LDRH W9, [X8 + 0x12E]
	0x021B31A8 LDR X1, [X10]
	0x021B31AC CBZ X9, 0x21B31D0
	0x021B31B0 LDR X10, [X8 + 0xB0]
	0x021B31B4 ADD X10, X10, 0x8
	0x021B31B8 LDUR X11, [X10 - 0x8]
	0x021B31BC CMP X11, X1
	0x021B31C0 B.EQ 0x21B31E0
	0x021B31C4 SUBS X9, X9, 0x1
	0x021B31C8 ADD X10, X10, 0x10
	0x021B31CC B.NE 0x21B31B8
	0x021B31D0 MOV X0, X19
	0x021B31D4 MOV W2, W31
	0x021B31D8 BL 0x1C5C788
	0x021B31DC B 0x21B31EC
	0x021B31E0 LDRSW X9, [X10]
	0x021B31E4 ADD X8, X8, X9, 0x4, LSL
	0x021B31E8 ADD X0, X8, 0x138
	0x021B31EC LDP X8, X1, [X0]
	0x021B31F0 MOV X0, X19
	0x021B31F4 BLR X8
	0x021B31F8 ANDS W31, W0, 0x1
	0x021B31FC MOVZ W8, 0x6
	0x021B3200 MOV W21, W0
	0x021B3204 MOV X20, X31
	0x021B3208 CINC W22, W8, EQ
	0x021B320C CBZ X19, 0x21B3270
	0x021B3210 ADRP X10, 0x1F40000
	0x021B3214 LDR X8, [X19]
	0x021B3218 LDR X10, [X10 + 0xE00]
	0x021B321C LDRH W9, [X8 + 0x12E]
	0x021B3220 LDR X1, [X10]
	0x021B3224 CBZ X9, 0x21B3248
	0x021B3228 LDR X10, [X8 + 0xB0]
	0x021B322C ADD X10, X10, 0x8
	0x021B3230 LDUR X11, [X10 - 0x8]
	0x021B3234 CMP X11, X1
	0x021B3238 B.EQ 0x21B3258
	0x021B323C SUBS X9, X9, 0x1
	0x021B3240 ADD X10, X10, 0x10
	0x021B3244 B.NE 0x21B3230
	0x021B3248 MOV X0, X19
	0x021B324C MOV W2, W31
	0x021B3250 BL 0x1C5C788
	0x021B3254 B 0x21B3264
	0x021B3258 LDRSW X9, [X10]
	0x021B325C ADD X8, X8, X9, 0x4, LSL
	0x021B3260 ADD X0, X8, 0x138
	0x021B3264 LDP X8, X1, [X0]
	0x021B3268 MOV X0, X19
	0x021B326C BLR X8
	0x021B3270 CBNZ X20, 0x21B32B0
	0x021B3274 CMP W22, 0x6
	0x021B3278 CSET W8, EQ
	0x021B327C AND W0, W8, W21, 0x0
	0x021B3280 LDP X20, X19, [X31 + 0x20]
	0x021B3284 LDP X22, X21, [X31 + 0x10]
	0x021B3288 LDR X30, [X31], #0x30
	0x021B328C RET
	0x021B3290 ADRP X0, 0x1F4B000
	0x021B3294 LDR X0, [X0 + 0x580]
	0x021B3298 BL 0x1C16D08
	0x021B329C MOV X1, X31
	0x021B32A0 BL 0x35DEB28
	0x021B32A4 MOV X1, X20
	0x021B32A8 BL 0x1C16DEC
	0x021B32AC BL 0x1C16F20
	0x021B32B0 MOV X0, X20
	0x021B32B4 BL 0x1C16F18
	0x021B32B8 B 0x21B32BC
	0x021B32BC MOV X21, X0
	0x021B32C0 CMP W1, 0x1
	0x021B32C4 B.NE 0x21B32E8
	0x021B32C8 MOV X0, X21
	0x021B32CC BL 0x3EB1AD0
	0x021B32D0 LDR X20, [X0]
	0x021B32D4 BL 0x3EB1AE0
	0x021B32D8 MOV W22, W31
	0x021B32DC MOV W21, W31
	0x021B32E0 CBNZ X19, 0x21B3210
	0x021B32E4 B 0x21B3270
	0x021B32E8 MOV X20, X31
	0x021B32EC B 0x21B32F4
	0x021B32F0 MOV X21, X0
	0x021B32F4 CBZ X19, 0x21B3358
	0x021B32F8 ADRP X10, 0x1F40000
	0x021B32FC LDR X8, [X19]
	0x021B3300 LDR X10, [X10 + 0xE00]
	0x021B3304 LDRH W9, [X8 + 0x12E]
	0x021B3308 LDR X1, [X10]
	0x021B330C CBZ X9, 0x21B3330
	0x021B3310 LDR X10, [X8 + 0xB0]
	0x021B3314 ADD X10, X10, 0x8
	0x021B3318 LDUR X11, [X10 - 0x8]
	0x021B331C CMP X11, X1
	0x021B3320 B.EQ 0x21B3340
	0x021B3324 SUBS X9, X9, 0x1
	0x021B3328 ADD X10, X10, 0x10
	0x021B332C B.NE 0x21B3318
	0x021B3330 MOV X0, X19
	0x021B3334 MOV W2, W31
	0x021B3338 BL 0x1C5C788
	0x021B333C B 0x21B334C
	0x021B3340 LDRSW X9, [X10]
	0x021B3344 ADD X8, X8, X9, 0x4, LSL
	0x021B3348 ADD X0, X8, 0x138
	0x021B334C LDP X8, X1, [X0]
	0x021B3350 MOV X0, X19
	0x021B3354 BLR X8
	0x021B3358 CBNZ X20, 0x21B3364
	0x021B335C MOV X0, X21
	0x021B3360 BL 0x1D2C690
	0x021B3364 MOV X0, X20
	0x021B3368 BL 0x1C16F18
	0x021B336C BL 0x1990590
	0x021B3370 STP X30, X23, [X31 - 0x30]!
	0x021B3374 STP X22, X21, [X31 + 0x10]
	0x021B3378 STP X20, X19, [X31 + 0x20]
	0x021B337C LDR X8, [X2 + 0x38]
	0x021B3380 MOV X20, X2
	0x021B3384 MOV X21, X1
	0x021B3388 MOV X19, X0
	0x021B338C CBNZ X8, 0x21B33B8
	0x021B3390 ADRP X0, 0x1F40000
	0x021B3394 LDR X0, [X0 + 0xE00]
	0x021B3398 BL 0x1C16CF4
	0x021B339C ADRP X0, 0x1F40000
	0x021B33A0 LDR X0, [X0 + 0xE18]
	0x021B33A4 BL 0x1C16CF4
	0x021B33A8 LDR X8, [X20 + 0x38]
	0x021B33AC CBNZ X8, 0x21B33B8
	0x021B33B0 MOV X0, X20
	0x021B33B4 BL 0x1C5C6E0
	0x021B33B8 CBZ X19, 0x21B35C4
	0x021B33BC CBZ X21, 0x21B35D0
	0x021B33C0 LDR X8, [X20 + 0x38]
	0x021B33C4 LDR X1, [X8]
	0x021B33C8 LDRB W8, [X1 + 0x135]
	0x021B33CC TBNZ X8, 0x0, 0x21B33DC
	0x021B33D0 MOV X0, X1
	0x021B33D4 BL 0x1C5C684
	0x021B33D8 MOV X1, X0
	0x021B33DC LDR X8, [X19]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X1+56]
	007 Move X20, X1
	008 Move X19, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {22}
	011 Move X0, 0x1F41000
	012 Move X0, [X0+3584]
	013 Call 0x1C17CF4
	014 Move X0, 0x1F41000
	015 Move X0, [X0+3608]
	016 Call 0x1C17CF4
	017 Move X8, [X20+56]
	018 Compare X8, 0
	019 JumpIfNotEqual {22}
	020 Move X0, X20
	021 Call 0x1C5D6E0
	022 Compare X19, 0
	023 JumpIfEqual {121}
	024 Move X8, [X20+56]
	025 Move X1, [X8]
	026 Move W8, [X1+309]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {34}
	031 Move X0, X1
	032 Call 0x1C5D684
	033 Move X1, X0
	034 Move X8, [X19]
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Compare X9, 0
	037 JumpIfEqual {44}
	038 Move X10, [X8+176]
	039 Add X10, X10, 8
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Subtract X9, X9, 1
	043 Add X10, X10, 16
	044 Move X0, X19
	045 Move W2, W31
	046 Call 0x1C5D788
	047 NotImplemented "Instruction LDRSW not yet implemented."
	048 Add X8, X8, X9
	049 Add X0, X8, 312
	050 Move X8, [X0]
	051 Move X1, [X0+8]
	052 Move X0, X19
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X19, X0
	055 Compare X0, 0
	056 JumpIfEqual {128}
	057 Move X10, 0x1F41000
	058 Move X8, [X19]
	059 Move X10, [X10+3608]
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Move X1, [X10]
	062 Compare X9, 0
	063 JumpIfEqual {70}
	064 Move X10, [X8+176]
	065 Add X10, X10, 8
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Subtract X9, X9, 1
	069 Add X10, X10, 16
	070 Move X0, X19
	071 Move W2, W31
	072 Call 0x1C5D788
	073 NotImplemented "Instruction LDRSW not yet implemented."
	074 Add X8, X8, X9
	075 Add X0, X8, 312
	076 Move X8, [X0]
	077 Move X1, [X0+8]
	078 Move X0, X19
	079 NotImplemented "Instruction BLR not yet implemented."
	080 And W31, W0, 1
	081 Move W8, 6
	082 Move W21, W0
	083 Move X20, X31
	084 NotImplemented "Instruction CINC not yet implemented."
	085 Compare X19, 0
	086 JumpIfEqual {110}
	087 Move X10, 0x1F41000
	088 Move X8, [X19]
	089 Move X10, [X10+3584]
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Move X1, [X10]
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move X0, X19
	101 Move W2, W31
	102 Call 0x1C5D788
	103 NotImplemented "Instruction LDRSW not yet implemented."
	104 Add X8, X8, X9
	105 Add X0, X8, 312
	106 Move X8, [X0]
	107 Move X1, [X0+8]
	108 Move X0, X19
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Compare X20, 0
	111 JumpIfNotEqual {129}
	112 NotImplemented "Instruction CMP not yet implemented."
	113 NotImplemented "Instruction CSET not yet implemented."
	114 And W0, W8, W21
	115 Move X20, [X31+32]
	116 Move X19, [X31+40]
	117 Move X22, [X31+16]
	118 Move X21, [X31+24]
	119 Move X30, [X31+48]
	120 Return X0
	121 Move X0, 0x1F4C000
	122 Move X0, [X0+1408]
	123 Call 0x1C17D08
	124 Move X1, X31
	125 Call Error.ArgumentNull, X0
	126 Move X1, X20
	127 Call 0x1C17DEC
	128 Call 0x1C17F20
	129 Move X0, X20
	130 Call 0x1C17F18
	131 Move X21, X0
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X0, X21
	134 Call 0x3EB2AD0
	135 Move X20, [X0]
	136 Call 0x3EB2AE0
	137 Move W22, W31
	138 Move W21, W31
	139 Compare X19, 0
	140 JumpIfNotEqual {87}
	141 Move X20, X31
	142 Move X21, X0
	143 Compare X19, 0
	144 JumpIfEqual {168}
	145 Move X10, 0x1F41000
	146 Move X8, [X19]
	147 Move X10, [X10+3584]
	148 NotImplemented "Instruction LDRH not yet implemented."
	149 Move X1, [X10]
	150 Compare X9, 0
	151 JumpIfEqual {158}
	152 Move X10, [X8+176]
	153 Add X10, X10, 8
	154 NotImplemented "Instruction LDUR not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Subtract X9, X9, 1
	157 Add X10, X10, 16
	158 Move X0, X19
	159 Move W2, W31
	160 Call 0x1C5D788
	161 NotImplemented "Instruction LDRSW not yet implemented."
	162 Add X8, X8, X9
	163 Add X0, X8, 312
	164 Move X8, [X0]
	165 Move X1, [X0+8]
	166 Move X0, X19
	167 NotImplemented "Instruction BLR not yet implemented."
	168 Compare X20, 0
	169 JumpIfNotEqual {172}
	170 Move X0, X21
	171 Call 0x1D2D690
	172 Move X0, X20
	173 Call 0x1C17F18
	174 Call 0x1991590

Method: System.Boolean Any(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource, System.Boolean> predicate)

Disassembly:
	0x021B4370 MOV X24, X0
	0x021B4374 LDR X2, [X8 + 0x8]
	0x021B4378 LDR X8, [X2]
	0x021B437C BLR X8
	0x021B4380 CBZ X24, 0x21B4420
	0x021B4384 LDR X8, [X20 + 0x38]
	0x021B4388 MOVZ W1, 0x8
	0x021B438C LDR X8, [X8]
	0x021B4390 LDR X8, [X8 + 0x80]
	0x021B4394 ADD X25, X8, 0x80
	0x021B4398 MOV X0, X25
	0x021B439C BL 0x1C16D14
	0x021B43A0 MOV X0, X24
	0x021B43A4 MOV X1, X25
	0x021B43A8 BL 0x1C16D18
	0x021B43AC STR X22, [X0]
	0x021B43B0 LDR X20, [X20 + 0x38]
	0x021B43B4 MOV X0, X23
	0x021B43B8 MOV X2, X21
	0x021B43BC LDR X8, [X20 + 0x18]
	0x021B43C0 LDR W8, [X8 + 0x28]
	0x021B43C4 CMP W8, 0x0
	0x021B43C8 SUB X8, X29, 0x10
	0x021B43CC CSEL X1, X19, X8, LT
	0x021B43D0 BL 0x3EB1AC0
	0x021B43D4 LDR X8, [X20]
	0x021B43D8 MOV X0, X24
	0x021B43DC MOV X2, X23
	0x021B43E0 MOV W3, W21
	0x021B43E4 LDR X8, [X8 + 0x80]
	0x021B43E8 ADD X1, X8, 0xC0
	0x021B43EC BL 0x1C16D1C
	0x021B43F0 LDR X8, [X26 + 0x28]
	0x021B43F4 LDUR X9, [X29 - 0x8]
	0x021B43F8 CMP X8, X9
	0x021B43FC B.NE 0x21B4424
	0x021B4400 MOV X0, X24
	0x021B4404 ADD X31, X29, 0x0
	0x021B4408 LDP X20, X19, [X31 + 0x40]
	0x021B440C LDP X22, X21, [X31 + 0x30]
	0x021B4410 LDP X24, X23, [X31 + 0x20]
	0x021B4414 LDP X26, X25, [X31 + 0x10]
	0x021B4418 LDP X29, X30, [X31], #0x50
	0x021B441C RET
	0x021B4420 BL 0x1C16F20
	0x021B4424 BL 0x3EB1B20
	0x021B4428 RET
	0x021B442C RET
	0x021B4430 STR X30, [X31 - 0x20]!
	0x021B4434 STP X20, X19, [X31 + 0x10]
	0x021B4438 LDR X8, [X1 + 0x38]
	0x021B443C MOV X19, X1
	0x021B4440 MOV X20, X0
	0x021B4444 CBNZ X8, 0x21B4454
	0x021B4448 MOV X0, X19
	0x021B444C BL 0x1C5C6E0
	0x021B4450 LDR X8, [X19 + 0x38]
	0x021B4454 LDR X1, [X8]
	0x021B4458 LDRB W8, [X1 + 0x135]
	0x021B445C TBNZ X8, 0x0, 0x21B446C
	0x021B4460 MOV X0, X1
	0x021B4464 BL 0x1C5C684
	0x021B4468 MOV X1, X0
	0x021B446C MOV X0, X20
	0x021B4470 BL 0x1C16E00
	0x021B4474 CBZ X0, 0x21B4484
	0x021B4478 LDP X20, X19, [X31 + 0x10]
	0x021B447C LDR X30, [X31], #0x20
	0x021B4480 RET
	0x021B4484 CBZ X20, 0x21B44A0
	0x021B4488 LDR X8, [X19 + 0x38]
	0x021B448C MOV X0, X20
	0x021B4490 LDP X20, X19, [X31 + 0x10]
	0x021B4494 LDR X1, [X8 + 0x8]
	0x021B4498 LDR X30, [X31], #0x20
	0x021B449C B 0x21B4664
	0x021B44A0 ADRP X0, 0x1F4A000
	0x021B44A4 LDR X0, [X0 + 0x580]
	0x021B44A8 BL 0x1C16D08
	0x021B44AC MOV X1, X31
	0x021B44B0 BL 0x35DEB28
	0x021B44B4 MOV X1, X19
	0x021B44B8 BL 0x1C16DEC
	0x021B44BC STR X30, [X31 - 0x20]!
	0x021B44C0 STP X20, X19, [X31 + 0x10]
	0x021B44C4 LDR X8, [X1 + 0x38]
	0x021B44C8 MOV X19, X1
	0x021B44CC MOV X20, X0
	0x021B44D0 CBNZ X8, 0x21B44E0
	0x021B44D4 MOV X0, X19
	0x021B44D8 BL 0x1C5C6E0
	0x021B44DC LDR X8, [X19 + 0x38]
	0x021B44E0 LDR X1, [X8]
	0x021B44E4 LDRB W8, [X1 + 0x135]
	0x021B44E8 TBNZ X8, 0x0, 0x21B44F8
	0x021B44EC MOV X0, X1
	0x021B44F0 BL 0x1C5C684
	0x021B44F4 MOV X1, X0
	0x021B44F8 MOV X0, X20
	0x021B44FC BL 0x1C16E00
	0x021B4500 CBZ X0, 0x21B4510
	0x021B4504 LDP X20, X19, [X31 + 0x10]
	0x021B4508 LDR X30, [X31], #0x20
	0x021B450C RET
	0x021B4510 CBZ X20, 0x21B452C
	0x021B4514 LDR X8, [X19 + 0x38]
	0x021B4518 MOV X0, X20
	0x021B451C LDP X20, X19, [X31 + 0x10]
	0x021B4520 LDR X1, [X8 + 0x8]
	0x021B4524 LDR X30, [X31], #0x20
	0x021B4528 B 0x21B46CC
	0x021B452C ADRP X0, 0x1F4A000
	0x021B4530 LDR X0, [X0 + 0x580]
	0x021B4534 BL 0x1C16D08
	0x021B4538 MOV X1, X31
	0x021B453C BL 0x35DEB28
	0x021B4540 MOV X1, X19
	0x021B4544 BL 0x1C16DEC
	0x021B4548 STR X30, [X31 - 0x20]!
	0x021B454C STP X20, X19, [X31 + 0x10]
	0x021B4550 LDR X8, [X1 + 0x38]
	0x021B4554 MOV X19, X1
	0x021B4558 MOV X20, X0
	0x021B455C CBNZ X8, 0x21B456C
	0x021B4560 MOV X0, X19
	0x021B4564 BL 0x1C5C6E0
	0x021B4568 LDR X8, [X19 + 0x38]
	0x021B456C LDR X1, [X8]
	0x021B4570 LDRB W8, [X1 + 0x135]
	0x021B4574 TBNZ X8, 0x0, 0x21B4584
	0x021B4578 MOV X0, X1
	0x021B457C BL 0x1C5C684
	0x021B4580 MOV X1, X0
	0x021B4584 MOV X0, X20
	0x021B4588 BL 0x1C16E00
	0x021B458C CBZ X0, 0x21B459C
	0x021B4590 LDP X20, X19, [X31 + 0x10]
	0x021B4594 LDR X30, [X31], #0x20
	0x021B4598 RET
	0x021B459C CBZ X20, 0x21B45B8
	0x021B45A0 LDR X8, [X19 + 0x38]
	0x021B45A4 MOV X0, X20
	0x021B45A8 LDP X20, X19, [X31 + 0x10]
	0x021B45AC LDR X1, [X8 + 0x8]
	0x021B45B0 LDR X30, [X31], #0x20
	0x021B45B4 B 0x21B4734
	0x021B45B8 ADRP X0, 0x1F4A000
	0x021B45BC LDR X0, [X0 + 0x580]
	0x021B45C0 BL 0x1C16D08
	0x021B45C4 MOV X1, X31
	0x021B45C8 BL 0x35DEB28
	0x021B45CC MOV X1, X19
	0x021B45D0 BL 0x1C16DEC
	0x021B45D4 STR X30, [X31 - 0x20]!
	0x021B45D8 STP X20, X19, [X31 + 0x10]
	0x021B45DC LDR X8, [X1 + 0x38]
	0x021B45E0 MOV X19, X1
	0x021B45E4 MOV X20, X0
	0x021B45E8 CBNZ X8, 0x21B45F8
	0x021B45EC MOV X0, X19
	0x021B45F0 BL 0x1C5C6E0
	0x021B45F4 LDR X8, [X19 + 0x38]
	0x021B45F8 LDR X1, [X8]
	0x021B45FC LDRB W8, [X1 + 0x135]
	0x021B4600 TBNZ X8, 0x0, 0x21B4610
	0x021B4604 MOV X0, X1
	0x021B4608 BL 0x1C5C684
	0x021B460C MOV X1, X0
	0x021B4610 MOV X0, X20
	0x021B4614 BL 0x1C16E00
	0x021B4618 CBZ X0, 0x21B4628
	0x021B461C LDP X20, X19, [X31 + 0x10]
	0x021B4620 LDR X30, [X31], #0x20
	0x021B4624 RET
	0x021B4628 CBZ X20, 0x21B4648
	0x021B462C LDR X8, [X19 + 0x38]
	0x021B4630 MOV X0, X20
	0x021B4634 LDP X20, X19, [X31 + 0x10]
	0x021B4638 LDR X1, [X8 + 0x8]
	0x021B463C LDR X2, [X1]
	0x021B4640 LDR X30, [X31], #0x20
	0x021B4644 BR X2
	0x021B4648 ADRP X0, 0x1F4A000
	0x021B464C LDR X0, [X0 + 0x580]
	0x021B4650 BL 0x1C16D08
	0x021B4654 MOV X1, X31
	0x021B4658 BL 0x35DEB28
	0x021B465C MOV X1, X19
	0x021B4660 BL 0x1C16DEC
	0x021B4664 STR X30, [X31 - 0x20]!
	0x021B4668 STP X20, X19, [X31 + 0x10]
	0x021B466C LDR X8, [X1 + 0x38]
	0x021B4670 MOV X20, X1
	0x021B4674 MOV X19, X0
	0x021B4678 CBNZ X8, 0x21B4688
	0x021B467C MOV X0, X20
	0x021B4680 BL 0x1C5C6E0
	0x021B4684 LDR X8, [X20 + 0x38]
	0x021B4688 LDR X0, [X8]
	0x021B468C LDRB W8, [X0 + 0x135]
	0x021B4690 TBNZ X8, 0x0, 0x21B4698
	0x021B4694 BL 0x1C5C684
	0x021B4698 BL 0x1C16F10
	0x021B469C LDR X8, [X20 + 0x38]
	0x021B46A0 MOVN W1, 0x1
	0x021B46A4 MOV X20, X0
	0x021B46A8 LDR X2, [X8 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X2+56]
	008 Move X20, X2
	009 Move X21, X1
	010 Move X19, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {24}
	013 Move X0, 0x1F40000
	014 Move X0, [X0+3584]
	015 Call 0x1C17CF4
	016 Move X0, 0x1F40000
	017 Move X0, [X0+3608]
	018 Call 0x1C17CF4
	019 Move X8, [X20+56]
	020 Compare X8, 0
	021 JumpIfNotEqual {24}
	022 Move X0, X20
	023 Call 0x1C5D6E0
	024 Compare X19, 0
	025 JumpIfEqual {171}
	026 Compare X21, 0
	027 JumpIfEqual {173}
	028 Move X8, [X20+56]
	029 Move X1, [X8]
	030 Move W8, [X1+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {38}
	035 Move X0, X1
	036 Call 0x1C5D684
	037 Move X1, X0
	038 Move X8, [X19]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Compare X9, 0
	041 JumpIfEqual {48}
	042 Move X10, [X8+176]
	043 Add X10, X10, 8
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Subtract X9, X9, 1
	047 Add X10, X10, 16
	048 Move X0, X19
	049 Move W2, W31
	050 Call 0x1C5D788
	051 NotImplemented "Instruction LDRSW not yet implemented."
	052 Add X8, X8, X9
	053 Add X0, X8, 312
	054 Move X8, [X0]
	055 Move X1, [X0+8]
	056 Move X0, X19
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move X19, X0
	059 Compare X0, 0
	060 JumpIfEqual {180}
	061 Move X23, 0x1F40000
	062 Move X23, [X23+3608]
	063 Move X8, [X19]
	064 Move X1, [X23]
	065 NotImplemented "Instruction LDRH not yet implemented."
	066 Compare X9, 0
	067 JumpIfEqual {74}
	068 Move X10, [X8+176]
	069 Add X10, X10, 8
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Subtract X9, X9, 1
	073 Add X10, X10, 16
	074 Move X0, X19
	075 Move W2, W31
	076 Call 0x1C5D788
	077 NotImplemented "Instruction LDRSW not yet implemented."
	078 Add X8, X8, X9
	079 Add X0, X8, 312
	080 Move X8, [X0]
	081 Move X1, [X0+8]
	082 Move X0, X19
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move W22, W0
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {134}
	089 Move X8, [X20+56]
	090 Move X1, [X8+24]
	091 Move W8, [X1+309]
	092 Move TEMP, X8
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {99}
	096 Move X0, X1
	097 Call 0x1C5D684
	098 Move X1, X0
	099 Move X8, [X19]
	100 NotImplemented "Instruction LDRH not yet implemented."
	101 Compare X9, 0
	102 JumpIfEqual {109}
	103 Move X10, [X8+176]
	104 Add X10, X10, 8
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Subtract X9, X9, 1
	108 Add X10, X10, 16
	109 Move X0, X19
	110 Move W2, W31
	111 Call 0x1C5D788
	112 NotImplemented "Instruction LDRSW not yet implemented."
	113 Add X8, X8, X9
	114 Add X0, X8, 312
	115 Move X8, [X0]
	116 Move X1, [X0+8]
	117 Move X0, X19
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move X2, X0
	120 Move X0, [X21+64]
	121 Move X8, [X21+24]
	122 Move X3, [X21+40]
	123 Move X4, X1
	124 Move X1, X2
	125 Move X2, X4
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfNotEqual {63}
	131 Move X20, X31
	132 Compare X19, 0
	133 JumpIfNotEqual {138}
	134 Move X20, X31
	135 Move W22, W31
	136 Compare X19, 0
	137 JumpIfEqual {161}
	138 Move X10, 0x1F40000
	139 Move X8, [X19]
	140 Move X10, [X10+3584]
	141 NotImplemented "Instruction LDRH not yet implemented."
	142 Move X1, [X10]
	143 Compare X9, 0
	144 JumpIfEqual {151}
	145 Move X10, [X8+176]
	146 Add X10, X10, 8
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Subtract X9, X9, 1
	150 Add X10, X10, 16
	151 Move X0, X19
	152 Move W2, W31
	153 Call 0x1C5D788
	154 NotImplemented "Instruction LDRSW not yet implemented."
	155 Add X8, X8, X9
	156 Add X0, X8, 312
	157 Move X8, [X0]
	158 Move X1, [X0+8]
	159 Move X0, X19
	160 NotImplemented "Instruction BLR not yet implemented."
	161 Compare X20, 0
	162 JumpIfNotEqual {181}
	163 And W0, W22, 1
	164 Move X20, [X31+32]
	165 Move X19, [X31+40]
	166 Move X22, [X31+16]
	167 Move X21, [X31+24]
	168 Move X30, [X31+48]
	169 Move X23, [X31+56]
	170 Return X0
	171 Move X0, 0x1F4B000
	172 Move X0, [X0+1408]
	173 Move X0, 0x1F68000
	174 Move X0, [X0+2288]
	175 Call 0x1C17D08
	176 Move X1, X31
	177 Call Error.ArgumentNull, X0
	178 Move X1, X20
	179 Call 0x1C17DEC
	180 Call 0x1C17F20
	181 Move X0, X20
	182 Call 0x1C17F18
	183 Move X21, X0
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move X0, X21
	186 Call 0x3EB2AD0
	187 Move X20, [X0]
	188 Call 0x3EB2AE0
	189 Move X20, X31
	190 Move X21, X0
	191 Compare X19, 0
	192 JumpIfEqual {216}
	193 Move X10, 0x1F40000
	194 Move X8, [X19]
	195 Move X10, [X10+3584]
	196 NotImplemented "Instruction LDRH not yet implemented."
	197 Move X1, [X10]
	198 Compare X9, 0
	199 JumpIfEqual {206}
	200 Move X10, [X8+176]
	201 Add X10, X10, 8
	202 NotImplemented "Instruction LDUR not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Subtract X9, X9, 1
	205 Add X10, X10, 16
	206 Move X0, X19
	207 Move W2, W31
	208 Call 0x1C5D788
	209 NotImplemented "Instruction LDRSW not yet implemented."
	210 Add X8, X8, X9
	211 Add X0, X8, 312
	212 Move X8, [X0]
	213 Move X1, [X0+8]
	214 Move X0, X19
	215 NotImplemented "Instruction BLR not yet implemented."
	216 Compare X20, 0
	217 JumpIfNotEqual {220}
	218 Move X0, X21
	219 Call 0x1D2D690
	220 Move X0, X20
	221 Call 0x1C17F18
	222 Call 0x1991590

Method: System.Boolean All(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource, System.Boolean> predicate)

Disassembly:
	0x021B26E4 CBZ X9, 0x21B2708
	0x021B26E8 LDR X10, [X8 + 0xB0]
	0x021B26EC ADD X10, X10, 0x8
	0x021B26F0 LDUR X11, [X10 - 0x8]
	0x021B26F4 CMP X11, X1
	0x021B26F8 B.EQ 0x21B2718
	0x021B26FC SUBS X9, X9, 0x1
	0x021B2700 ADD X10, X10, 0x10
	0x021B2704 B.NE 0x21B26F0
	0x021B2708 MOV X0, X19
	0x021B270C MOV W2, W31
	0x021B2710 BL 0x1C5C788
	0x021B2714 B 0x21B2724
	0x021B2718 LDRSW X9, [X10]
	0x021B271C ADD X8, X8, X9, 0x4, LSL
	0x021B2720 ADD X0, X8, 0x138
	0x021B2724 LDP X8, X1, [X0]
	0x021B2728 MOV X0, X19
	0x021B272C BLR X8
	0x021B2730 MOV X19, X0
	0x021B2734 CBZ X0, 0x21B284C
	0x021B2738 ADRP X10, 0x1F41000
	0x021B273C LDR X8, [X19]
	0x021B2740 LDR X10, [X10 + 0xE18]
	0x021B2744 LDRH W9, [X8 + 0x12E]
	0x021B2748 LDR X1, [X10]
	0x021B274C CBZ X9, 0x21B2770
	0x021B2750 LDR X10, [X8 + 0xB0]
	0x021B2754 ADD X10, X10, 0x8
	0x021B2758 LDUR X11, [X10 - 0x8]
	0x021B275C CMP X11, X1
	0x021B2760 B.EQ 0x21B2780
	0x021B2764 SUBS X9, X9, 0x1
	0x021B2768 ADD X10, X10, 0x10
	0x021B276C B.NE 0x21B2758
	0x021B2770 MOV X0, X19
	0x021B2774 MOV W2, W31
	0x021B2778 BL 0x1C5C788
	0x021B277C B 0x21B278C
	0x021B2780 LDRSW X9, [X10]
	0x021B2784 ADD X8, X8, X9, 0x4, LSL
	0x021B2788 ADD X0, X8, 0x138
	0x021B278C LDP X8, X1, [X0]
	0x021B2790 MOV X0, X19
	0x021B2794 BLR X8
	0x021B2798 ANDS W31, W0, 0x1
	0x021B279C MOVZ W8, 0x6
	0x021B27A0 MOV W21, W0
	0x021B27A4 MOV X20, X31
	0x021B27A8 CINC W22, W8, EQ
	0x021B27AC CBZ X19, 0x21B2810
	0x021B27B0 ADRP X10, 0x1F41000
	0x021B27B4 LDR X8, [X19]
	0x021B27B8 LDR X10, [X10 + 0xE00]
	0x021B27BC LDRH W9, [X8 + 0x12E]
	0x021B27C0 LDR X1, [X10]
	0x021B27C4 CBZ X9, 0x21B27E8
	0x021B27C8 LDR X10, [X8 + 0xB0]
	0x021B27CC ADD X10, X10, 0x8
	0x021B27D0 LDUR X11, [X10 - 0x8]
	0x021B27D4 CMP X11, X1
	0x021B27D8 B.EQ 0x21B27F8
	0x021B27DC SUBS X9, X9, 0x1
	0x021B27E0 ADD X10, X10, 0x10
	0x021B27E4 B.NE 0x21B27D0
	0x021B27E8 MOV X0, X19
	0x021B27EC MOV W2, W31
	0x021B27F0 BL 0x1C5C788
	0x021B27F4 B 0x21B2804
	0x021B27F8 LDRSW X9, [X10]
	0x021B27FC ADD X8, X8, X9, 0x4, LSL
	0x021B2800 ADD X0, X8, 0x138
	0x021B2804 LDP X8, X1, [X0]
	0x021B2808 MOV X0, X19
	0x021B280C BLR X8
	0x021B2810 CBNZ X20, 0x21B2850
	0x021B2814 CMP W22, 0x6
	0x021B2818 CSET W8, EQ
	0x021B281C AND W0, W8, W21, 0x0
	0x021B2820 LDP X20, X19, [X31 + 0x20]
	0x021B2824 LDP X22, X21, [X31 + 0x10]
	0x021B2828 LDR X30, [X31], #0x30
	0x021B282C RET
	0x021B2830 ADRP X0, 0x1F4C000
	0x021B2834 LDR X0, [X0 + 0x580]
	0x021B2838 BL 0x1C16D08
	0x021B283C MOV X1, X31
	0x021B2840 BL 0x35DEB28
	0x021B2844 MOV X1, X20
	0x021B2848 BL 0x1C16DEC
	0x021B284C BL 0x1C16F20
	0x021B2850 MOV X0, X20
	0x021B2854 BL 0x1C16F18
	0x021B2858 B 0x21B285C
	0x021B285C MOV X21, X0
	0x021B2860 CMP W1, 0x1
	0x021B2864 B.NE 0x21B2888
	0x021B2868 MOV X0, X21
	0x021B286C BL 0x3EB1AD0
	0x021B2870 LDR X20, [X0]
	0x021B2874 BL 0x3EB1AE0
	0x021B2878 MOV W22, W31
	0x021B287C MOV W21, W31
	0x021B2880 CBNZ X19, 0x21B27B0
	0x021B2884 B 0x21B2810
	0x021B2888 MOV X20, X31
	0x021B288C B 0x21B2894
	0x021B2890 MOV X21, X0
	0x021B2894 CBZ X19, 0x21B28F8
	0x021B2898 ADRP X10, 0x1F41000
	0x021B289C LDR X8, [X19]
	0x021B28A0 LDR X10, [X10 + 0xE00]
	0x021B28A4 LDRH W9, [X8 + 0x12E]
	0x021B28A8 LDR X1, [X10]
	0x021B28AC CBZ X9, 0x21B28D0
	0x021B28B0 LDR X10, [X8 + 0xB0]
	0x021B28B4 ADD X10, X10, 0x8
	0x021B28B8 LDUR X11, [X10 - 0x8]
	0x021B28BC CMP X11, X1
	0x021B28C0 B.EQ 0x21B28E0
	0x021B28C4 SUBS X9, X9, 0x1
	0x021B28C8 ADD X10, X10, 0x10
	0x021B28CC B.NE 0x21B28B8
	0x021B28D0 MOV X0, X19
	0x021B28D4 MOV W2, W31
	0x021B28D8 BL 0x1C5C788
	0x021B28DC B 0x21B28EC
	0x021B28E0 LDRSW X9, [X10]
	0x021B28E4 ADD X8, X8, X9, 0x4, LSL
	0x021B28E8 ADD X0, X8, 0x138
	0x021B28EC LDP X8, X1, [X0]
	0x021B28F0 MOV X0, X19
	0x021B28F4 BLR X8
	0x021B28F8 CBNZ X20, 0x21B2904
	0x021B28FC MOV X0, X21
	0x021B2900 BL 0x1D2C690
	0x021B2904 MOV X0, X20
	0x021B2908 BL 0x1C16F18
	0x021B290C BL 0x1990590
	0x021B2910 STR X30, [X31 - 0x30]!
	0x021B2914 STP X22, X21, [X31 + 0x10]
	0x021B2918 STP X20, X19, [X31 + 0x20]
	0x021B291C LDR X8, [X1 + 0x38]
	0x021B2920 MOV X20, X1
	0x021B2924 MOV X19, X0
	0x021B2928 CBNZ X8, 0x21B2954
	0x021B292C ADRP X0, 0x1F41000
	0x021B2930 LDR X0, [X0 + 0xE00]
	0x021B2934 BL 0x1C16CF4
	0x021B2938 ADRP X0, 0x1F41000
	0x021B293C LDR X0, [X0 + 0xE18]
	0x021B2940 BL 0x1C16CF4
	0x021B2944 LDR X8, [X20 + 0x38]
	0x021B2948 CBNZ X8, 0x21B2954
	0x021B294C MOV X0, X20
	0x021B2950 BL 0x1C5C6E0
	0x021B2954 CBZ X19, 0x21B2AC8
	0x021B2958 LDR X8, [X20 + 0x38]
	0x021B295C LDR X1, [X8]
	0x021B2960 LDRB W8, [X1 + 0x135]
	0x021B2964 TBNZ X8, 0x0, 0x21B2974
	0x021B2968 MOV X0, X1
	0x021B296C BL 0x1C5C684
	0x021B2970 MOV X1, X0
	0x021B2974 LDR X8, [X19]
	0x021B2978 LDRH W9, [X8 + 0x12E]
	0x021B297C CBZ X9, 0x21B29A0
	0x021B2980 LDR X10, [X8 + 0xB0]
	0x021B2984 ADD X10, X10, 0x8
	0x021B2988 LDUR X11, [X10 - 0x8]
	0x021B298C CMP X11, X1
	0x021B2990 B.EQ 0x21B29B0
	0x021B2994 SUBS X9, X9, 0x1
	0x021B2998 ADD X10, X10, 0x10
	0x021B299C B.NE 0x21B2988
	0x021B29A0 MOV X0, X19
	0x021B29A4 MOV W2, W31
	0x021B29A8 BL 0x1C5C788
	0x021B29AC B 0x21B29BC
	0x021B29B0 LDRSW X9, [X10]
	0x021B29B4 ADD X8, X8, X9, 0x4, LSL
	0x021B29B8 ADD X0, X8, 0x138
	0x021B29BC LDP X8, X1, [X0]
	0x021B29C0 MOV X0, X19
	0x021B29C4 BLR X8
	0x021B29C8 MOV X19, X0
	0x021B29CC CBZ X0, 0x21B2AE4
	0x021B29D0 ADRP X10, 0x1F41000
	0x021B29D4 LDR X8, [X19]
	0x021B29D8 LDR X10, [X10 + 0xE18]
	0x021B29DC LDRH W9, [X8 + 0x12E]
	0x021B29E0 LDR X1, [X10]
	0x021B29E4 CBZ X9, 0x21B2A08
	0x021B29E8 LDR X10, [X8 + 0xB0]
	0x021B29EC ADD X10, X10, 0x8
	0x021B29F0 LDUR X11, [X10 - 0x8]
	0x021B29F4 CMP X11, X1
	0x021B29F8 B.EQ 0x21B2A18
	0x021B29FC SUBS X9, X9, 0x1
	0x021B2A00 ADD X10, X10, 0x10
	0x021B2A04 B.NE 0x21B29F0
	0x021B2A08 MOV X0, X19
	0x021B2A0C MOV W2, W31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X2+56]
	008 Move X20, X2
	009 Move X21, X1
	010 Move X19, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {24}
	013 Move X0, 0x1F42000
	014 Move X0, [X0+3584]
	015 Call 0x1C17CF4
	016 Move X0, 0x1F42000
	017 Move X0, [X0+3608]
	018 Call 0x1C17CF4
	019 Move X8, [X20+56]
	020 Compare X8, 0
	021 JumpIfNotEqual {24}
	022 Move X0, X20
	023 Call 0x1C5D6E0
	024 Compare X19, 0
	025 JumpIfEqual {165}
	026 Compare X21, 0
	027 JumpIfEqual {167}
	028 Move X8, [X20+56]
	029 Move X1, [X8]
	030 Move W8, [X1+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {38}
	035 Move X0, X1
	036 Call 0x1C5D684
	037 Move X1, X0
	038 Move X8, [X19]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Compare X9, 0
	041 JumpIfEqual {48}
	042 Move X10, [X8+176]
	043 Add X10, X10, 8
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Subtract X9, X9, 1
	047 Add X10, X10, 16
	048 Move X0, X19
	049 Move W2, W31
	050 Call 0x1C5D788
	051 NotImplemented "Instruction LDRSW not yet implemented."
	052 Add X8, X8, X9
	053 Add X0, X8, 312
	054 Move X8, [X0]
	055 Move X1, [X0+8]
	056 Move X0, X19
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move X19, X0
	059 Compare X0, 0
	060 JumpIfEqual {174}
	061 Move X23, 0x1F42000
	062 Move X23, [X23+3608]
	063 Move X8, [X19]
	064 Move X1, [X23]
	065 NotImplemented "Instruction LDRH not yet implemented."
	066 Compare X9, 0
	067 JumpIfEqual {74}
	068 Move X10, [X8+176]
	069 Add X10, X10, 8
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Subtract X9, X9, 1
	073 Add X10, X10, 16
	074 Move X0, X19
	075 Move W2, W31
	076 Call 0x1C5D788
	077 NotImplemented "Instruction LDRSW not yet implemented."
	078 Add X8, X8, X9
	079 Add X0, X8, 312
	080 Move X8, [X0]
	081 Move X1, [X0+8]
	082 Move X0, X19
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move W22, W0
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {128}
	089 Move X8, [X20+56]
	090 Move X1, [X8+24]
	091 Move W8, [X1+309]
	092 Move TEMP, X8
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {99}
	096 Move X0, X1
	097 Call 0x1C5D684
	098 Move X1, X0
	099 Move X8, [X19]
	100 NotImplemented "Instruction LDRH not yet implemented."
	101 Compare X9, 0
	102 JumpIfEqual {109}
	103 Move X10, [X8+176]
	104 Add X10, X10, 8
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Subtract X9, X9, 1
	108 Add X10, X10, 16
	109 Move X0, X19
	110 Move W2, W31
	111 Call 0x1C5D788
	112 NotImplemented "Instruction LDRSW not yet implemented."
	113 Add X8, X8, X9
	114 Add X0, X8, 312
	115 Move X8, [X0]
	116 Move X1, [X0+8]
	117 Move X0, X19
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move W1, W0
	120 Move X0, [X21+64]
	121 Move X8, [X21+24]
	122 Move X2, [X21+40]
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {63}
	128 Move X20, X31
	129 Xor W21, W22, 1
	130 Compare X19, 0
	131 JumpIfEqual {155}
	132 Move X10, 0x1F42000
	133 Move X8, [X19]
	134 Move X10, [X10+3584]
	135 NotImplemented "Instruction LDRH not yet implemented."
	136 Move X1, [X10]
	137 Compare X9, 0
	138 JumpIfEqual {145}
	139 Move X10, [X8+176]
	140 Add X10, X10, 8
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Subtract X9, X9, 1
	144 Add X10, X10, 16
	145 Move X0, X19
	146 Move W2, W31
	147 Call 0x1C5D788
	148 NotImplemented "Instruction LDRSW not yet implemented."
	149 Add X8, X8, X9
	150 Add X0, X8, 312
	151 Move X8, [X0]
	152 Move X1, [X0+8]
	153 Move X0, X19
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Compare X20, 0
	156 JumpIfNotEqual {175}
	157 And W0, W21, 1
	158 Move X20, [X31+32]
	159 Move X19, [X31+40]
	160 Move X22, [X31+16]
	161 Move X21, [X31+24]
	162 Move X30, [X31+48]
	163 Move X23, [X31+56]
	164 Return X0
	165 Move X0, 0x1F4D000
	166 Move X0, [X0+1408]
	167 Move X0, 0x1F6A000
	168 Move X0, [X0+2288]
	169 Call 0x1C17D08
	170 Move X1, X31
	171 Call Error.ArgumentNull, X0
	172 Move X1, X20
	173 Call 0x1C17DEC
	174 Call 0x1C17F20
	175 Move X0, X20
	176 Call 0x1C17F18
	177 Move X21, X0
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X0, X21
	180 Call 0x3EB2AD0
	181 Move X20, [X0]
	182 Call 0x3EB2AE0
	183 Move W21, 1
	184 Compare X19, 0
	185 JumpIfNotEqual {132}
	186 Move X20, X31
	187 Move X21, X0
	188 Compare X19, 0
	189 JumpIfEqual {213}
	190 Move X10, 0x1F42000
	191 Move X8, [X19]
	192 Move X10, [X10+3584]
	193 NotImplemented "Instruction LDRH not yet implemented."
	194 Move X1, [X10]
	195 Compare X9, 0
	196 JumpIfEqual {203}
	197 Move X10, [X8+176]
	198 Add X10, X10, 8
	199 NotImplemented "Instruction LDUR not yet implemented."
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Subtract X9, X9, 1
	202 Add X10, X10, 16
	203 Move X0, X19
	204 Move W2, W31
	205 Call 0x1C5D788
	206 NotImplemented "Instruction LDRSW not yet implemented."
	207 Add X8, X8, X9
	208 Add X0, X8, 312
	209 Move X8, [X0]
	210 Move X1, [X0+8]
	211 Move X0, X19
	212 NotImplemented "Instruction BLR not yet implemented."
	213 Compare X20, 0
	214 JumpIfNotEqual {217}
	215 Move X0, X21
	216 Call 0x1D2D690
	217 Move X0, X20
	218 Call 0x1C17F18
	219 Call 0x1991590

Method: System.Int32 Count(System.Collections.Generic.IEnumerable`1<TSource> source)

Disassembly:
	0x021BD594 B 0x21BD5EC
	0x021BD598 ADRP X22, 0x1F3D000
	0x021BD59C LDR X22, [X22 + 0x2F0]
	0x021BD5A0 MOV X0, X19
	0x021BD5A4 LDR X1, [X22]
	0x021BD5A8 BL 0x1C16E00
	0x021BD5AC CBZ X0, 0x21BD600
	0x021BD5B0 LDR X8, [X0]
	0x021BD5B4 LDR X1, [X22]
	0x021BD5B8 MOV X21, X0
	0x021BD5BC LDRH W9, [X8 + 0x12E]
	0x021BD5C0 CBZ X9, 0x21BD5E4
	0x021BD5C4 LDR X10, [X8 + 0xB0]
	0x021BD5C8 ADD X10, X10, 0x8
	0x021BD5CC LDUR X11, [X10 - 0x8]
	0x021BD5D0 CMP X11, X1
	0x021BD5D4 B.EQ 0x21BD658
	0x021BD5D8 SUBS X9, X9, 0x1
	0x021BD5DC ADD X10, X10, 0x10
	0x021BD5E0 B.NE 0x21BD5CC
	0x021BD5E4 MOVZ W2, 0x1
	0x021BD5E8 MOV X0, X21
	0x021BD5EC BL 0x1C5C788
	0x021BD5F0 B 0x21BD668
	0x021BD5F4 LDRSW X9, [X10]
	0x021BD5F8 ADD X8, X8, X9, 0x4, LSL
	0x021BD5FC B 0x21BD664
	0x021BD600 LDR X8, [X20 + 0x38]
	0x021BD604 LDR X1, [X8]
	0x021BD608 LDRB W8, [X1 + 0x135]
	0x021BD60C TBNZ X8, 0x0, 0x21BD61C
	0x021BD610 MOV X0, X1
	0x021BD614 BL 0x1C5C684
	0x021BD618 MOV X1, X0
	0x021BD61C LDR X8, [X19]
	0x021BD620 LDRH W9, [X8 + 0x12E]
	0x021BD624 CBZ X9, 0x21BD648
	0x021BD628 LDR X10, [X8 + 0xB0]
	0x021BD62C ADD X10, X10, 0x8
	0x021BD630 LDUR X11, [X10 - 0x8]
	0x021BD634 CMP X11, X1
	0x021BD638 B.EQ 0x21BD680
	0x021BD63C SUBS X9, X9, 0x1
	0x021BD640 ADD X10, X10, 0x10
	0x021BD644 B.NE 0x21BD630
	0x021BD648 MOV X0, X19
	0x021BD64C MOV W2, W31
	0x021BD650 BL 0x1C5C788
	0x021BD654 B 0x21BD68C
	0x021BD658 LDR W9, [X10]
	0x021BD65C ADD W9, W9, 0x1
	0x021BD660 ADD X8, X8, W9, 0x4, SXTW
	0x021BD664 ADD X0, X8, 0x138
	0x021BD668 LDP X2, X1, [X0]
	0x021BD66C MOV X0, X21
	0x021BD670 LDP X20, X19, [X31 + 0x20]
	0x021BD674 LDP X22, X21, [X31 + 0x10]
	0x021BD678 LDP X30, X23, [X31], #0x30
	0x021BD67C BR X2
	0x021BD680 LDRSW X9, [X10]
	0x021BD684 ADD X8, X8, X9, 0x4, LSL
	0x021BD688 ADD X0, X8, 0x138
	0x021BD68C LDP X8, X1, [X0]
	0x021BD690 MOV X0, X19
	0x021BD694 BLR X8
	0x021BD698 MOV X19, X0
	0x021BD69C CBZ X0, 0x21BD7C4
	0x021BD6A0 ADRP X22, 0x1F36000
	0x021BD6A4 LDR X22, [X22 + 0xE18]
	0x021BD6A8 MOV W21, W31
	0x021BD6AC MOVN W23, 0x80000000
	0x021BD6B0 LDR X8, [X19]
	0x021BD6B4 LDR X1, [X22]
	0x021BD6B8 LDRH W9, [X8 + 0x12E]
	0x021BD6BC CBZ X9, 0x21BD6E0
	0x021BD6C0 LDR X10, [X8 + 0xB0]
	0x021BD6C4 ADD X10, X10, 0x8
	0x021BD6C8 LDUR X11, [X10 - 0x8]
	0x021BD6CC CMP X11, X1
	0x021BD6D0 B.EQ 0x21BD6F0
	0x021BD6D4 SUBS X9, X9, 0x1
	0x021BD6D8 ADD X10, X10, 0x10
	0x021BD6DC B.NE 0x21BD6C8
	0x021BD6E0 MOV X0, X19
	0x021BD6E4 MOV W2, W31
	0x021BD6E8 BL 0x1C5C788
	0x021BD6EC B 0x21BD6FC
	0x021BD6F0 LDRSW X9, [X10]
	0x021BD6F4 ADD X8, X8, X9, 0x4, LSL
	0x021BD6F8 ADD X0, X8, 0x138
	0x021BD6FC LDP X8, X1, [X0]
	0x021BD700 MOV X0, X19
	0x021BD704 BLR X8
	0x021BD708 TBZ X0, 0x0, 0x21BD71C
	0x021BD70C CMP W21, W23
	0x021BD710 B.EQ 0x21BD79C
	0x021BD714 ADD W21, W21, 0x1
	0x021BD718 B 0x21BD6B0
	0x021BD71C MOV X20, X31
	0x021BD720 CBZ X19, 0x21BD784
	0x021BD724 ADRP X10, 0x1F36000
	0x021BD728 LDR X8, [X19]
	0x021BD72C LDR X10, [X10 + 0xE00]
	0x021BD730 LDRH W9, [X8 + 0x12E]
	0x021BD734 LDR X1, [X10]
	0x021BD738 CBZ X9, 0x21BD75C
	0x021BD73C LDR X10, [X8 + 0xB0]
	0x021BD740 ADD X10, X10, 0x8
	0x021BD744 LDUR X11, [X10 - 0x8]
	0x021BD748 CMP X11, X1
	0x021BD74C B.EQ 0x21BD76C
	0x021BD750 SUBS X9, X9, 0x1
	0x021BD754 ADD X10, X10, 0x10
	0x021BD758 B.NE 0x21BD744
	0x021BD75C MOV X0, X19
	0x021BD760 MOV W2, W31
	0x021BD764 BL 0x1C5C788
	0x021BD768 B 0x21BD778
	0x021BD76C LDRSW X9, [X10]
	0x021BD770 ADD X8, X8, X9, 0x4, LSL
	0x021BD774 ADD X0, X8, 0x138
	0x021BD778 LDP X8, X1, [X0]
	0x021BD77C MOV X0, X19
	0x021BD780 BLR X8
	0x021BD784 CBNZ X20, 0x21BD7C8
	0x021BD788 MOV W0, W21
	0x021BD78C LDP X20, X19, [X31 + 0x20]
	0x021BD790 LDP X22, X21, [X31 + 0x10]
	0x021BD794 LDP X30, X23, [X31], #0x30
	0x021BD798 RET
	0x021BD79C BL 0x1C16F30
	0x021BD7A0 MOV X1, X20
	0x021BD7A4 BL 0x1C16DEC
	0x021BD7A8 ADRP X0, 0x1F41000
	0x021BD7AC LDR X0, [X0 + 0x580]
	0x021BD7B0 BL 0x1C16D08
	0x021BD7B4 MOV X1, X31
	0x021BD7B8 BL 0x35DEB28
	0x021BD7BC MOV X1, X20
	0x021BD7C0 BL 0x1C16DEC
	0x021BD7C4 BL 0x1C16F20
	0x021BD7C8 MOV X0, X20
	0x021BD7CC BL 0x1C16F18
	0x021BD7D0 MOV X22, X0
	0x021BD7D4 MOV W21, W31
	0x021BD7D8 B 0x21BD7EC
	0x021BD7DC MOV X22, X0
	0x021BD7E0 MOVN W21, 0x80000000
	0x021BD7E4 B 0x21BD7EC
	0x021BD7E8 MOV X22, X0
	0x021BD7EC CMP W1, 0x1
	0x021BD7F0 B.NE 0x21BD808
	0x021BD7F4 MOV X0, X22
	0x021BD7F8 BL 0x3EB1AD0
	0x021BD7FC LDR X20, [X0]
	0x021BD800 BL 0x3EB1AE0
	0x021BD804 B 0x21BD720
	0x021BD808 MOV X20, X31
	0x021BD80C B 0x21BD814
	0x021BD810 MOV X22, X0
	0x021BD814 CBZ X19, 0x21BD878
	0x021BD818 ADRP X10, 0x1F36000
	0x021BD81C LDR X8, [X19]
	0x021BD820 LDR X10, [X10 + 0xE00]
	0x021BD824 LDRH W9, [X8 + 0x12E]
	0x021BD828 LDR X1, [X10]
	0x021BD82C CBZ X9, 0x21BD850
	0x021BD830 LDR X10, [X8 + 0xB0]
	0x021BD834 ADD X10, X10, 0x8
	0x021BD838 LDUR X11, [X10 - 0x8]
	0x021BD83C CMP X11, X1
	0x021BD840 B.EQ 0x21BD860
	0x021BD844 SUBS X9, X9, 0x1
	0x021BD848 ADD X10, X10, 0x10
	0x021BD84C B.NE 0x21BD838
	0x021BD850 MOV X0, X19
	0x021BD854 MOV W2, W31
	0x021BD858 BL 0x1C5C788
	0x021BD85C B 0x21BD86C
	0x021BD860 LDRSW X9, [X10]
	0x021BD864 ADD X8, X8, X9, 0x4, LSL
	0x021BD868 ADD X0, X8, 0x138
	0x021BD86C LDP X8, X1, [X0]
	0x021BD870 MOV X0, X19
	0x021BD874 BLR X8
	0x021BD878 CBNZ X20, 0x21BD884
	0x021BD87C MOV X0, X22
	0x021BD880 BL 0x1D2C690
	0x021BD884 MOV X0, X20
	0x021BD888 BL 0x1C16F18
	0x021BD88C BL 0x1990590
	0x021BD890 STP X30, X23, [X31 - 0x30]!
	0x021BD894 STP X22, X21, [X31 + 0x10]
	0x021BD898 STP X20, X19, [X31 + 0x20]
	0x021BD89C LDR X8, [X1 + 0x38]
	0x021BD8A0 MOV X20, X1
	0x021BD8A4 MOV X19, X0
	0x021BD8A8 CBNZ X8, 0x21BD8E0
	0x021BD8AC ADRP X0, 0x1F3D000
	0x021BD8B0 LDR X0, [X0 + 0x2F0]
	0x021BD8B4 BL 0x1C16CF4
	0x021BD8B8 ADRP X0, 0x1F36000
	0x021BD8BC LDR X0, [X0 + 0xE00]
	0x021BD8C0 BL 0x1C16CF4
	0x021BD8C4 ADRP X0, 0x1F36000
	0x021BD8C8 LDR X0, [X0 + 0xE18]
	0x021BD8CC BL 0x1C16CF4
	0x021BD8D0 LDR X8, [X20 + 0x38]
	0x021BD8D4 CBNZ X8, 0x21BD8E0
	0x021BD8D8 MOV X0, X20
	0x021BD8DC BL 0x1C5C6E0
	0x021BD8E0 CBZ X19, 0x21BDB74
	0x021BD8E4 LDR X8, [X20 + 0x38]
	0x021BD8E8 LDR X1, [X8 + 0x8]
	0x021BD8EC LDRB W8, [X1 + 0x135]
	0x021BD8F0 TBNZ X8, 0x0, 0x21BD900
	0x021BD8F4 MOV X0, X1
	0x021BD8F8 BL 0x1C5C684
	0x021BD8FC MOV X1, X0
	0x021BD900 MOV X0, X19
	0x021BD904 BL 0x1C16E00
	0x021BD908 CBZ X0, 0x21BD964
	0x021BD90C LDR X8, [X20 + 0x38]
	0x021BD910 MOV X21, X0
	0x021BD914 LDR X1, [X8 + 0x8]
	0x021BD918 LDRB W8, [X1 + 0x135]
	0x021BD91C TBNZ X8, 0x0, 0x21BD92C
	0x021BD920 MOV X0, X1
	0x021BD924 BL 0x1C5C684
	0x021BD928 MOV X1, X0
	0x021BD92C LDR X8, [X21]
	0x021BD930 LDRH W9, [X8 + 0x12E]
	0x021BD934 CBZ X9, 0x21BD958
	0x021BD938 LDR X10, [X8 + 0xB0]
	0x021BD93C ADD X10, X10, 0x8
	0x021BD940 LDUR X11, [X10 - 0x8]
	0x021BD944 CMP X11, X1
	0x021BD948 B.EQ 0x21BD9C0
	0x021BD94C SUBS X9, X9, 0x1
	0x021BD950 ADD X10, X10, 0x10
	0x021BD954 B.NE 0x21BD940
	0x021BD958 MOV X0, X21
	0x021BD95C MOV W2, W31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X1+56]
	008 Move X20, X1
	009 Move X19, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {26}
	012 Move X0, 0x1F3E000
	013 Move X0, [X0+752]
	014 Call 0x1C17CF4
	015 Move X0, 0x1F37000
	016 Move X0, [X0+3584]
	017 Call 0x1C17CF4
	018 Move X0, 0x1F37000
	019 Move X0, [X0+3608]
	020 Call 0x1C17CF4
	021 Move X8, [X20+56]
	022 Compare X8, 0
	023 JumpIfNotEqual {26}
	024 Move X0, X20
	025 Call 0x1C5D6E0
	026 Compare X19, 0
	027 JumpIfEqual {208}
	028 Move X8, [X20+56]
	029 Move X1, [X8+8]
	030 Move W8, [X1+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {38}
	035 Move X0, X1
	036 Call 0x1C5D684
	037 Move X1, X0
	038 Move X0, X19
	039 Call 0x1C17E00
	040 Compare X0, 0
	041 JumpIfEqual {65}
	042 Move X8, [X20+56]
	043 Move X21, X0
	044 Move X1, [X8+8]
	045 Move W8, [X1+309]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {53}
	050 Move X0, X1
	051 Call 0x1C5D684
	052 Move X1, X0
	053 Move X8, [X21]
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Compare X9, 0
	056 JumpIfEqual {63}
	057 Move X10, [X8+176]
	058 Add X10, X10, 8
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract X9, X9, 1
	062 Add X10, X10, 16
	063 Move X0, X21
	064 Move W2, W31
	065 Move X22, 0x1F3E000
	066 Move X22, [X22+752]
	067 Move X0, X19
	068 Move X1, [X22]
	069 Call 0x1C17E00
	070 Compare X0, 0
	071 JumpIfEqual {89}
	072 Move X8, [X0]
	073 Move X1, [X22]
	074 Move X21, X0
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 Compare X9, 0
	077 JumpIfEqual {84}
	078 Move X10, [X8+176]
	079 Add X10, X10, 8
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract X9, X9, 1
	083 Add X10, X10, 16
	084 Move W2, 1
	085 Move X0, X21
	086 Call 0x1C5D788
	087 NotImplemented "Instruction LDRSW not yet implemented."
	088 Add X8, X8, X9
	089 Move X8, [X20+56]
	090 Move X1, [X8]
	091 Move W8, [X1+309]
	092 Move TEMP, X8
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {99}
	096 Move X0, X1
	097 Call 0x1C5D684
	098 Move X1, X0
	099 Move X8, [X19]
	100 NotImplemented "Instruction LDRH not yet implemented."
	101 Compare X9, 0
	102 JumpIfEqual {109}
	103 Move X10, [X8+176]
	104 Add X10, X10, 8
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Subtract X9, X9, 1
	108 Add X10, X10, 16
	109 Move X0, X19
	110 Move W2, W31
	111 Call 0x1C5D788
	112 Move W9, [X10]
	113 Add W9, W9, 1
	114 Add X8, X8, W9
	115 Add X0, X8, 312
	116 Move X2, [X0]
	117 Move X1, [X0+8]
	118 Move X0, X21
	119 Move X20, [X31+32]
	120 Move X19, [X31+40]
	121 Move X22, [X31+16]
	122 Move X21, [X31+24]
	123 Move X30, [X31+48]
	124 Move X23, [X31+56]
	125 CallNoReturn X2
	126 NotImplemented "Instruction LDRSW not yet implemented."
	127 Add X8, X8, X9
	128 Add X0, X8, 312
	129 Move X8, [X0]
	130 Move X1, [X0+8]
	131 Move X0, X19
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Move X19, X0
	134 Compare X0, 0
	135 JumpIfEqual {215}
	136 Move X22, 0x1F37000
	137 Move X22, [X22+3608]
	138 Move W21, W31
	139 Move TEMP, 0x80000000
	140 Not TEMP
	141 Move W23, TEMP
	142 Move X8, [X19]
	143 Move X1, [X22]
	144 NotImplemented "Instruction LDRH not yet implemented."
	145 Compare X9, 0
	146 JumpIfEqual {153}
	147 Move X10, [X8+176]
	148 Add X10, X10, 8
	149 NotImplemented "Instruction LDUR not yet implemented."
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Subtract X9, X9, 1
	152 Add X10, X10, 16
	153 Move X0, X19
	154 Move W2, W31
	155 Call 0x1C5D788
	156 NotImplemented "Instruction LDRSW not yet implemented."
	157 Add X8, X8, X9
	158 Add X0, X8, 312
	159 Move X8, [X0]
	160 Move X1, [X0+8]
	161 Move X0, X19
	162 NotImplemented "Instruction BLR not yet implemented."
	163 Move TEMP, X0
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfNotEqual {169}
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Add W21, W21, 1
	169 Move X20, X31
	170 Compare X19, 0
	171 JumpIfEqual {195}
	172 Move X10, 0x1F37000
	173 Move X8, [X19]
	174 Move X10, [X10+3584]
	175 NotImplemented "Instruction LDRH not yet implemented."
	176 Move X1, [X10]
	177 Compare X9, 0
	178 JumpIfEqual {185}
	179 Move X10, [X8+176]
	180 Add X10, X10, 8
	181 NotImplemented "Instruction LDUR not yet implemented."
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Subtract X9, X9, 1
	184 Add X10, X10, 16
	185 Move X0, X19
	186 Move W2, W31
	187 Call 0x1C5D788
	188 NotImplemented "Instruction LDRSW not yet implemented."
	189 Add X8, X8, X9
	190 Add X0, X8, 312
	191 Move X8, [X0]
	192 Move X1, [X0+8]
	193 Move X0, X19
	194 NotImplemented "Instruction BLR not yet implemented."
	195 Compare X20, 0
	196 JumpIfNotEqual {216}
	197 Move W0, W21
	198 Move X20, [X31+32]
	199 Move X19, [X31+40]
	200 Move X22, [X31+16]
	201 Move X21, [X31+24]
	202 Move X30, [X31+48]
	203 Move X23, [X31+56]
	204 Return X0
	205 Call 0x1C17F30
	206 Move X1, X20
	207 Call 0x1C17DEC
	208 Move X0, 0x1F42000
	209 Move X0, [X0+1408]
	210 Call 0x1C17D08
	211 Move X1, X31
	212 Call Error.ArgumentNull, X0
	213 Move X1, X20
	214 Call 0x1C17DEC
	215 Call 0x1C17F20
	216 Move X0, X20
	217 Call 0x1C17F18
	218 Move X22, X0
	219 Move W21, W31
	220 Move X22, X0
	221 Move TEMP, 0x80000000
	222 Not TEMP
	223 Move W21, TEMP
	224 Move X22, X0
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move X0, X22
	227 Call 0x3EB2AD0
	228 Move X20, [X0]
	229 Call 0x3EB2AE0
	230 Move X20, X31
	231 Move X22, X0
	232 Compare X19, 0
	233 JumpIfEqual {257}
	234 Move X10, 0x1F37000
	235 Move X8, [X19]
	236 Move X10, [X10+3584]
	237 NotImplemented "Instruction LDRH not yet implemented."
	238 Move X1, [X10]
	239 Compare X9, 0
	240 JumpIfEqual {247}
	241 Move X10, [X8+176]
	242 Add X10, X10, 8
	243 NotImplemented "Instruction LDUR not yet implemented."
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Subtract X9, X9, 1
	246 Add X10, X10, 16
	247 Move X0, X19
	248 Move W2, W31
	249 Call 0x1C5D788
	250 NotImplemented "Instruction LDRSW not yet implemented."
	251 Add X8, X8, X9
	252 Add X0, X8, 312
	253 Move X8, [X0]
	254 Move X1, [X0+8]
	255 Move X0, X19
	256 NotImplemented "Instruction BLR not yet implemented."
	257 Compare X20, 0
	258 JumpIfNotEqual {261}
	259 Move X0, X22
	260 Call 0x1D2D690
	261 Move X0, X20
	262 Call 0x1C17F18
	263 Call 0x1991590

Method: System.Int32 Count(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource, System.Boolean> predicate)

Disassembly:
	0x021C0ABC MOV X19, X0
	0x021C0AC0 CBNZ X8, 0x21C0AEC
	0x021C0AC4 ADRP X0, 0x1F33000
	0x021C0AC8 LDR X0, [X0 + 0xE00]
	0x021C0ACC BL 0x1C16CF4
	0x021C0AD0 ADRP X0, 0x1F33000
	0x021C0AD4 LDR X0, [X0 + 0xE18]
	0x021C0AD8 BL 0x1C16CF4
	0x021C0ADC LDR X8, [X20 + 0x38]
	0x021C0AE0 CBNZ X8, 0x21C0AEC
	0x021C0AE4 MOV X0, X20
	0x021C0AE8 BL 0x1C5C6E0
	0x021C0AEC CBZ X19, 0x21C0D98
	0x021C0AF0 LDR X8, [X20 + 0x38]
	0x021C0AF4 LDR X1, [X8 + 0x8]
	0x021C0AF8 LDRB W8, [X1 + 0x135]
	0x021C0AFC TBNZ X8, 0x0, 0x21C0B0C
	0x021C0B00 MOV X0, X1
	0x021C0B04 BL 0x1C5C684
	0x021C0B08 MOV X1, X0
	0x021C0B0C MOV X0, X19
	0x021C0B10 BL 0x1C16E00
	0x021C0B14 CBZ X0, 0x21C0B74
	0x021C0B18 LDR X8, [X20 + 0x38]
	0x021C0B1C MOV X22, X0
	0x021C0B20 LDR X1, [X8 + 0x8]
	0x021C0B24 LDRB W8, [X1 + 0x135]
	0x021C0B28 TBNZ X8, 0x0, 0x21C0B38
	0x021C0B2C MOV X0, X1
	0x021C0B30 BL 0x1C5C684
	0x021C0B34 MOV X1, X0
	0x021C0B38 LDR X8, [X22]
	0x021C0B3C LDRH W9, [X8 + 0x12E]
	0x021C0B40 CBZ X9, 0x21C0B64
	0x021C0B44 LDR X10, [X8 + 0xB0]
	0x021C0B48 ADD X10, X10, 0x8
	0x021C0B4C LDUR X11, [X10 - 0x8]
	0x021C0B50 CMP X11, X1
	0x021C0B54 B.EQ 0x21C0BD0
	0x021C0B58 SUBS X9, X9, 0x1
	0x021C0B5C ADD X10, X10, 0x10
	0x021C0B60 B.NE 0x21C0B4C
	0x021C0B64 MOV X0, X22
	0x021C0B68 MOV W2, W31
	0x021C0B6C BL 0x1C5C788
	0x021C0B70 B 0x21C0BDC
	0x021C0B74 TBNZ X21, 0x1F, 0x21C0DB0
	0x021C0B78 LDR X8, [X20 + 0x38]
	0x021C0B7C LDR X1, [X8]
	0x021C0B80 LDRB W8, [X1 + 0x135]
	0x021C0B84 TBNZ X8, 0x0, 0x21C0B94
	0x021C0B88 MOV X0, X1
	0x021C0B8C BL 0x1C5C684
	0x021C0B90 MOV X1, X0
	0x021C0B94 LDR X8, [X19]
	0x021C0B98 LDRH W9, [X8 + 0x12E]
	0x021C0B9C CBZ X9, 0x21C0BC0
	0x021C0BA0 LDR X10, [X8 + 0xB0]
	0x021C0BA4 ADD X10, X10, 0x8
	0x021C0BA8 LDUR X11, [X10 - 0x8]
	0x021C0BAC CMP X11, X1
	0x021C0BB0 B.EQ 0x21C0BF8
	0x021C0BB4 SUBS X9, X9, 0x1
	0x021C0BB8 ADD X10, X10, 0x10
	0x021C0BBC B.NE 0x21C0BA8
	0x021C0BC0 MOV X0, X19
	0x021C0BC4 MOV W2, W31
	0x021C0BC8 BL 0x1C5C788
	0x021C0BCC B 0x21C0C04
	0x021C0BD0 LDRSW X9, [X10]
	0x021C0BD4 ADD X8, X8, X9, 0x4, LSL
	0x021C0BD8 ADD X0, X8, 0x138
	0x021C0BDC LDP X3, X2, [X0]
	0x021C0BE0 MOV X0, X22
	0x021C0BE4 MOV W1, W21
	0x021C0BE8 LDP X20, X19, [X31 + 0x20]
	0x021C0BEC LDP X22, X21, [X31 + 0x10]
	0x021C0BF0 LDP X30, X23, [X31], #0x30
	0x021C0BF4 BR X3
	0x021C0BF8 LDRSW X9, [X10]
	0x021C0BFC ADD X8, X8, X9, 0x4, LSL
	0x021C0C00 ADD X0, X8, 0x138
	0x021C0C04 LDP X8, X1, [X0]
	0x021C0C08 MOV X0, X19
	0x021C0C0C BLR X8
	0x021C0C10 MOV X19, X0
	0x021C0C14 CBZ X0, 0x21C0DCC
	0x021C0C18 ADRP X22, 0x1F33000
	0x021C0C1C LDR X22, [X22 + 0xE18]
	0x021C0C20 LDR X8, [X19]
	0x021C0C24 LDR X1, [X22]
	0x021C0C28 MOV W23, W21
	0x021C0C2C LDRH W9, [X8 + 0x12E]
	0x021C0C30 CBZ X9, 0x21C0C54
	0x021C0C34 LDR X10, [X8 + 0xB0]
	0x021C0C38 ADD X10, X10, 0x8
	0x021C0C3C LDUR X11, [X10 - 0x8]
	0x021C0C40 CMP X11, X1
	0x021C0C44 B.EQ 0x21C0C64
	0x021C0C48 SUBS X9, X9, 0x1
	0x021C0C4C ADD X10, X10, 0x10
	0x021C0C50 B.NE 0x21C0C3C
	0x021C0C54 MOV X0, X19
	0x021C0C58 MOV W2, W31
	0x021C0C5C BL 0x1C5C788
	0x021C0C60 B 0x21C0C70
	0x021C0C64 LDRSW X9, [X10]
	0x021C0C68 ADD X8, X8, X9, 0x4, LSL
	0x021C0C6C ADD X0, X8, 0x138
	0x021C0C70 LDP X8, X1, [X0]
	0x021C0C74 MOV X0, X19
	0x021C0C78 BLR X8
	0x021C0C7C TBZ X0, 0x0, 0x21C0D7C
	0x021C0C80 SUB W21, W23, 0x1
	0x021C0C84 CBNZ W23, 0x21C0C20
	0x021C0C88 LDR X8, [X20 + 0x38]
	0x021C0C8C LDR X1, [X8 + 0x28]
	0x021C0C90 LDRB W8, [X1 + 0x135]
	0x021C0C94 TBNZ X8, 0x0, 0x21C0CA4
	0x021C0C98 MOV X0, X1
	0x021C0C9C BL 0x1C5C684
	0x021C0CA0 MOV X1, X0
	0x021C0CA4 LDR X8, [X19]
	0x021C0CA8 LDRH W9, [X8 + 0x12E]
	0x021C0CAC CBZ X9, 0x21C0CD0
	0x021C0CB0 LDR X10, [X8 + 0xB0]
	0x021C0CB4 ADD X10, X10, 0x8
	0x021C0CB8 LDUR X11, [X10 - 0x8]
	0x021C0CBC CMP X11, X1
	0x021C0CC0 B.EQ 0x21C0CE0
	0x021C0CC4 SUBS X9, X9, 0x1
	0x021C0CC8 ADD X10, X10, 0x10
	0x021C0CCC B.NE 0x21C0CB8
	0x021C0CD0 MOV X0, X19
	0x021C0CD4 MOV W2, W31
	0x021C0CD8 BL 0x1C5C788
	0x021C0CDC B 0x21C0CEC
	0x021C0CE0 LDRSW X9, [X10]
	0x021C0CE4 ADD X8, X8, X9, 0x4, LSL
	0x021C0CE8 ADD X0, X8, 0x138
	0x021C0CEC LDP X8, X1, [X0]
	0x021C0CF0 MOV X0, X19
	0x021C0CF4 BLR X8
	0x021C0CF8 MOV X21, X0
	0x021C0CFC MOV X20, X31
	0x021C0D00 CBZ X19, 0x21C0D64
	0x021C0D04 ADRP X10, 0x1F33000
	0x021C0D08 LDR X8, [X19]
	0x021C0D0C LDR X10, [X10 + 0xE00]
	0x021C0D10 LDRH W9, [X8 + 0x12E]
	0x021C0D14 LDR X1, [X10]
	0x021C0D18 CBZ X9, 0x21C0D3C
	0x021C0D1C LDR X10, [X8 + 0xB0]
	0x021C0D20 ADD X10, X10, 0x8
	0x021C0D24 LDUR X11, [X10 - 0x8]
	0x021C0D28 CMP X11, X1
	0x021C0D2C B.EQ 0x21C0D4C
	0x021C0D30 SUBS X9, X9, 0x1
	0x021C0D34 ADD X10, X10, 0x10
	0x021C0D38 B.NE 0x21C0D24
	0x021C0D3C MOV X0, X19
	0x021C0D40 MOV W2, W31
	0x021C0D44 BL 0x1C5C788
	0x021C0D48 B 0x21C0D58
	0x021C0D4C LDRSW X9, [X10]
	0x021C0D50 ADD X8, X8, X9, 0x4, LSL
	0x021C0D54 ADD X0, X8, 0x138
	0x021C0D58 LDP X8, X1, [X0]
	0x021C0D5C MOV X0, X19
	0x021C0D60 BLR X8
	0x021C0D64 CBNZ X20, 0x21C0DD0
	0x021C0D68 MOV X0, X21
	0x021C0D6C LDP X20, X19, [X31 + 0x20]
	0x021C0D70 LDP X22, X21, [X31 + 0x10]
	0x021C0D74 LDP X30, X23, [X31], #0x30
	0x021C0D78 RET
	0x021C0D7C ADRP X0, 0x1F3E000
	0x021C0D80 LDR X0, [X0 + 0x130]
	0x021C0D84 BL 0x1C16D08
	0x021C0D88 MOV X1, X31
	0x021C0D8C BL 0x35DEB84
	0x021C0D90 MOV X1, X20
	0x021C0D94 BL 0x1C16DEC
	0x021C0D98 ADRP X0, 0x1F3E000
	0x021C0D9C LDR X0, [X0 + 0x580]
	0x021C0DA0 BL 0x1C16D08
	0x021C0DA4 MOV X1, X31
	0x021C0DA8 BL 0x35DEB28
	0x021C0DAC B 0x21C0DC4
	0x021C0DB0 ADRP X0, 0x1F3E000
	0x021C0DB4 LDR X0, [X0 + 0x130]
	0x021C0DB8 BL 0x1C16D08
	0x021C0DBC MOV X1, X31
	0x021C0DC0 BL 0x35DEB84
	0x021C0DC4 MOV X1, X20
	0x021C0DC8 BL 0x1C16DEC
	0x021C0DCC BL 0x1C16F20
	0x021C0DD0 MOV X0, X20
	0x021C0DD4 BL 0x1C16F18
	0x021C0DD8 B 0x21C0DE4
	0x021C0DDC B 0x21C0DE4
	0x021C0DE0 B 0x21C0DE4
	0x021C0DE4 MOV X21, X0
	0x021C0DE8 CMP W1, 0x1
	0x021C0DEC B.NE 0x21C0E0C
	0x021C0DF0 MOV X0, X21
	0x021C0DF4 BL 0x3EB1AD0
	0x021C0DF8 LDR X20, [X0]
	0x021C0DFC BL 0x3EB1AE0
	0x021C0E00 MOV X21, X31
	0x021C0E04 CBNZ X19, 0x21C0D04
	0x021C0E08 B 0x21C0D64
	0x021C0E0C MOV X20, X31
	0x021C0E10 B 0x21C0E18
	0x021C0E14 MOV X21, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X2+56]
	009 Move X20, X2
	010 Move X22, X1
	011 Move X19, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {25}
	014 Move X0, 0x1F34000
	015 Move X0, [X0+3584]
	016 Call 0x1C17CF4
	017 Move X0, 0x1F34000
	018 Move X0, [X0+3608]
	019 Call 0x1C17CF4
	020 Move X8, [X20+56]
	021 Compare X8, 0
	022 JumpIfNotEqual {25}
	023 Move X0, X20
	024 Call 0x1C5D6E0
	025 Compare X19, 0
	026 JumpIfEqual {172}
	027 Compare X22, 0
	028 JumpIfEqual {174}
	029 Move X8, [X20+56]
	030 Move X1, [X8]
	031 Move W8, [X1+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {39}
	036 Move X0, X1
	037 Call 0x1C5D684
	038 Move X1, X0
	039 Move X8, [X19]
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move X0, X19
	050 Move W2, W31
	051 Call 0x1C5D788
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 Add X8, X8, X9
	054 Add X0, X8, 312
	055 Move X8, [X0]
	056 Move X1, [X0+8]
	057 Move X0, X19
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X23, 0x1F34000
	060 Move X23, [X23+3608]
	061 Move X19, X0
	062 Move W21, W31
	063 Move TEMP, 0x80000000
	064 Not TEMP
	065 Move W24, TEMP
	066 Compare X19, 0
	067 JumpIfEqual {171}
	068 Move X8, [X19]
	069 Move X1, [X23]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Compare X9, 0
	072 JumpIfEqual {79}
	073 Move X10, [X8+176]
	074 Add X10, X10, 8
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Subtract X9, X9, 1
	078 Add X10, X10, 16
	079 Move X0, X19
	080 Move W2, W31
	081 Call 0x1C5D788
	082 NotImplemented "Instruction LDRSW not yet implemented."
	083 Add X8, X8, X9
	084 Add X0, X8, 312
	085 Move X8, [X0]
	086 Move X1, [X0+8]
	087 Move X0, X19
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {134}
	093 Move X8, [X20+56]
	094 Move X1, [X8+24]
	095 Move W8, [X1+309]
	096 Move TEMP, X8
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {103}
	100 Move X0, X1
	101 Call 0x1C5D684
	102 Move X1, X0
	103 Move X8, [X19]
	104 NotImplemented "Instruction LDRH not yet implemented."
	105 Compare X9, 0
	106 JumpIfEqual {113}
	107 Move X10, [X8+176]
	108 Add X10, X10, 8
	109 NotImplemented "Instruction LDUR not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Subtract X9, X9, 1
	112 Add X10, X10, 16
	113 Move X0, X19
	114 Move W2, W31
	115 Call 0x1C5D788
	116 NotImplemented "Instruction LDRSW not yet implemented."
	117 Add X8, X8, X9
	118 Add X0, X8, 312
	119 Move X8, [X0]
	120 Move X1, [X0+8]
	121 Move X0, X19
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Move X1, X0
	124 Move X0, [X22+64]
	125 Move X8, [X22+24]
	126 Move X2, [X22+40]
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move TEMP, X0
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfNotEqual {66}
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Add W21, W21, 1
	134 Move X20, X31
	135 Compare X19, 0
	136 JumpIfEqual {160}
	137 Move X10, 0x1F34000
	138 Move X8, [X19]
	139 Move X10, [X10+3584]
	140 NotImplemented "Instruction LDRH not yet implemented."
	141 Move X1, [X10]
	142 Compare X9, 0
	143 JumpIfEqual {150}
	144 Move X10, [X8+176]
	145 Add X10, X10, 8
	146 NotImplemented "Instruction LDUR not yet implemented."
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Subtract X9, X9, 1
	149 Add X10, X10, 16
	150 Move X0, X19
	151 Move W2, W31
	152 Call 0x1C5D788
	153 NotImplemented "Instruction LDRSW not yet implemented."
	154 Add X8, X8, X9
	155 Add X0, X8, 312
	156 Move X8, [X0]
	157 Move X1, [X0+8]
	158 Move X0, X19
	159 NotImplemented "Instruction BLR not yet implemented."
	160 Compare X20, 0
	161 JumpIfNotEqual {181}
	162 Move W0, W21
	163 Move X20, [X31+48]
	164 Move X19, [X31+56]
	165 Move X22, [X31+32]
	166 Move X21, [X31+40]
	167 Move X24, [X31+16]
	168 Move X23, [X31+24]
	169 Move X30, [X31+64]
	170 Return X0
	171 Call 0x1C17F20
	172 Move X0, 0x1F3F000
	173 Move X0, [X0+1408]
	174 Move X0, 0x1F5C000
	175 Move X0, [X0+2288]
	176 Call 0x1C17D08
	177 Move X1, X31
	178 Call Error.ArgumentNull, X0
	179 Move X1, X20
	180 Call 0x1C17DEC
	181 Move X0, X20
	182 Call 0x1C17F18
	183 Call 0x1C17F30
	184 Move X1, X20
	185 Call 0x1C17DEC
	186 Move X22, X0
	187 Move TEMP, 0x80000000
	188 Not TEMP
	189 Move W21, TEMP
	190 Move X22, X0
	191 Move W21, W31
	192 Move X22, X0
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move X0, X22
	195 Call 0x3EB2AD0
	196 Move X20, [X0]
	197 Call 0x3EB2AE0
	198 Move X20, X31
	199 Move X22, X0
	200 Compare X19, 0
	201 JumpIfEqual {225}
	202 Move X10, 0x1F34000
	203 Move X8, [X19]
	204 Move X10, [X10+3584]
	205 NotImplemented "Instruction LDRH not yet implemented."
	206 Move X1, [X10]
	207 Compare X9, 0
	208 JumpIfEqual {215}
	209 Move X10, [X8+176]
	210 Add X10, X10, 8
	211 NotImplemented "Instruction LDUR not yet implemented."
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Subtract X9, X9, 1
	214 Add X10, X10, 16
	215 Move X0, X19
	216 Move W2, W31
	217 Call 0x1C5D788
	218 NotImplemented "Instruction LDRSW not yet implemented."
	219 Add X8, X8, X9
	220 Add X0, X8, 312
	221 Move X8, [X0]
	222 Move X1, [X0+8]
	223 Move X0, X19
	224 NotImplemented "Instruction BLR not yet implemented."
	225 Compare X20, 0
	226 JumpIfNotEqual {229}
	227 Move X0, X22
	228 Call 0x1D2D690
	229 Move X0, X20
	230 Call 0x1C17F18
	231 Call 0x1991590

Method: System.Boolean Contains(System.Collections.Generic.IEnumerable`1<TSource> source, TSource value)

Disassembly:
	0x021BB2BC LDRH W9, [X8 + 0x12E]
	0x021BB2C0 CBZ X9, 0x21BB2E4
	0x021BB2C4 LDR X10, [X8 + 0xB0]
	0x021BB2C8 ADD X10, X10, 0x8
	0x021BB2CC LDUR X11, [X10 - 0x8]
	0x021BB2D0 CMP X11, X1
	0x021BB2D4 B.EQ 0x21BB2F4
	0x021BB2D8 SUBS X9, X9, 0x1
	0x021BB2DC ADD X10, X10, 0x10
	0x021BB2E0 B.NE 0x21BB2CC
	0x021BB2E4 MOV X0, X19
	0x021BB2E8 MOV W2, W31
	0x021BB2EC BL 0x1C5C788
	0x021BB2F0 B 0x21BB300
	0x021BB2F4 LDRSW X9, [X10]
	0x021BB2F8 ADD X8, X8, X9, 0x4, LSL
	0x021BB2FC ADD X0, X8, 0x138
	0x021BB300 LDP X8, X1, [X0]
	0x021BB304 MOV X0, X19
	0x021BB308 BLR X8
	0x021BB30C MOV W23, W0
	0x021BB310 TBZ X0, 0x0, 0x21BB414
	0x021BB314 LDR X8, [X20 + 0x38]
	0x021BB318 LDR X1, [X8 + 0x30]
	0x021BB31C LDRB W8, [X1 + 0x135]
	0x021BB320 TBNZ X8, 0x0, 0x21BB330
	0x021BB324 MOV X0, X1
	0x021BB328 BL 0x1C5C684
	0x021BB32C MOV X1, X0
	0x021BB330 LDR X8, [X19]
	0x021BB334 LDRH W9, [X8 + 0x12E]
	0x021BB338 CBZ X9, 0x21BB35C
	0x021BB33C LDR X10, [X8 + 0xB0]
	0x021BB340 ADD X10, X10, 0x8
	0x021BB344 LDUR X11, [X10 - 0x8]
	0x021BB348 CMP X11, X1
	0x021BB34C B.EQ 0x21BB36C
	0x021BB350 SUBS X9, X9, 0x1
	0x021BB354 ADD X10, X10, 0x10
	0x021BB358 B.NE 0x21BB344
	0x021BB35C MOV X0, X19
	0x021BB360 MOV W2, W31
	0x021BB364 BL 0x1C5C788
	0x021BB368 B 0x21BB378
	0x021BB36C LDRSW X9, [X10]
	0x021BB370 ADD X8, X8, X9, 0x4, LSL
	0x021BB374 ADD X0, X8, 0x138
	0x021BB378 LDP X8, X1, [X0]
	0x021BB37C MOV X0, X19
	0x021BB380 BLR X8
	0x021BB384 CBZ X22, 0x21BB4AC
	0x021BB388 LDR X8, [X20 + 0x38]
	0x021BB38C MOV W24, W0
	0x021BB390 LDR X1, [X8]
	0x021BB394 LDRB W8, [X1 + 0x135]
	0x021BB398 TBNZ X8, 0x0, 0x21BB3A8
	0x021BB39C MOV X0, X1
	0x021BB3A0 BL 0x1C5C684
	0x021BB3A4 MOV X1, X0
	0x021BB3A8 LDR X8, [X22]
	0x021BB3AC LDRH W9, [X8 + 0x12E]
	0x021BB3B0 CBZ X9, 0x21BB3D4
	0x021BB3B4 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X21, X2
	008 Move W19, W1
	009 Move X22, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {15}
	012 Move X0, X21
	013 Call 0x1C5D6E0
	014 Move X8, [X21+56]
	015 Move X1, [X8+8]
	016 Move W8, [X1+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {24}
	021 Move X0, X1
	022 Call 0x1C5D684
	023 Move X1, X0
	024 Move X0, X22
	025 Call 0x1C17E00
	026 Compare X0, 0
	027 JumpIfEqual {52}
	028 Move X8, [X21+56]
	029 Move X20, X0
	030 Move X1, [X8+8]
	031 Move W8, [X1+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {39}
	036 Move X0, X1
	037 Call 0x1C5D684
	038 Move X1, X0
	039 Move X8, [X20]
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move W2, 4
	050 Move X0, X20
	051 Call 0x1C5D788
	052 Move X8, [X21+56]
	053 Move X0, X22
	054 Move W1, W19
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X3, [X8+32]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X2, X31
	061 Move X30, [X31+48]
	062 Call 0x21BBA5C, X0, X1, X2
	063 Return X0
	064 Move W9, [X10]
	065 Add W9, W9, 4
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X3, [X0]
	069 Move X2, [X0+8]
	070 Move X0, X20
	071 Move W1, W19
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 CallNoReturn X3

Method: System.Boolean Contains(System.Collections.Generic.IEnumerable`1<TSource> source, TSource value, System.Collections.Generic.IEqualityComparer`1<TSource> comparer)

Disassembly:
	0x021BBA5C B.NE 0x21BBA48
	0x021BBA60 MOV X0, X19
	0x021BBA64 MOV W2, W31
	0x021BBA68 BL 0x1C5C788
	0x021BBA6C B 0x21BBA7C
	0x021BBA70 LDRSW X9, [X10]
	0x021BBA74 ADD X8, X8, X9, 0x4, LSL
	0x021BBA78 ADD X0, X8, 0x138
	0x021BBA7C LDP X8, X1, [X0]
	0x021BBA80 MOV X0, X19
	0x021BBA84 BLR X8
	0x021BBA88 MOV W22, W0
	0x021BBA8C TBZ X0, 0x0, 0x21BBB90
	0x021BBA90 LDR X8, [X20 + 0x38]
	0x021BBA94 LDR X1, [X8 + 0x30]
	0x021BBA98 LDRB W8, [X1 + 0x135]
	0x021BBA9C TBNZ X8, 0x0, 0x21BBAAC
	0x021BBAA0 MOV X0, X1
	0x021BBAA4 BL 0x1C5C684
	0x021BBAA8 MOV X1, X0
	0x021BBAAC LDR X8, [X19]
	0x021BBAB0 LDRH W9, [X8 + 0x12E]
	0x021BBAB4 CBZ X9, 0x21BBAD8
	0x021BBAB8 LDR X10, [X8 + 0xB0]
	0x021BBABC ADD X10, X10, 0x8
	0x021BBAC0 LDUR X11, [X10 - 0x8]
	0x021BBAC4 CMP X11, X1
	0x021BBAC8 B.EQ 0x21BBAE8
	0x021BBACC SUBS X9, X9, 0x1
	0x021BBAD0 ADD X10, X10, 0x10
	0x021BBAD4 B.NE 0x21BBAC0
	0x021BBAD8 MOV X0, X19
	0x021BBADC MOV W2, W31
	0x021BBAE0 BL 0x1C5C788
	0x021BBAE4 B 0x21BBAF4
	0x021BBAE8 LDRSW X9, [X10]
	0x021BBAEC ADD X8, X8, X9, 0x4, LSL
	0x021BBAF0 ADD X0, X8, 0x138
	0x021BBAF4 LDP X8, X1, [X0]
	0x021BBAF8 MOV X0, X19
	0x021BBAFC BLR X8
	0x021BBB00 CBZ X21, 0x21BBC28
	0x021BBB04 LDR X8, [X20 + 0x38]
	0x021BBB08 MOV X24, X0
	0x021BBB0C LDR X1, [X8]
	0x021BBB10 LDRB W8, [X1 + 0x135]
	0x021BBB14 TBNZ X8, 0x0, 0x21BBB24
	0x021BBB18 MOV X0, X1
	0x021BBB1C BL 0x1C5C684
	0x021BBB20 MOV X1, X0
	0x021BBB24 LDR X8, [X21]
	0x021BBB28 LDRH W9, [X8 + 0x12E]
	0x021BBB2C CBZ X9, 0x21BBB50
	0x021BBB30 LDR X10, [X8 + 0xB0]
	0x021BBB34 ADD X10, X10, 0x8
	0x021BBB38 LDUR X11, [X10 - 0x8]
	0x021BBB3C CMP X11, X1
	0x021BBB40 B.EQ 0x21BBB60
	0x021BBB44 SUBS X9, X9, 0x1
	0x021BBB48 ADD X10, X10, 0x10
	0x021BBB4C B.NE 0x21BBB38
	0x021BBB50 MOV X0, X21
	0x021BBB54 MOV W2, W31
	0x021BBB58 BL 0x1C5C788
	0x021BBB5C B 0x21BBB6C
	0x021BBB60 LDRSW X9, [X10]
	0x021BBB64 ADD X8, X8, X9, 0x4, LSL
	0x021BBB68 ADD X0, X8, 0x138
	0x021BBB6C LDP X8, X3, [X0]
	0x021BBB70 AND X1, X24, 0x0
	0x021BBB74 MOV X0, X21
	0x021BBB78 MOV X2, X23
	0x021BBB7C BLR X8
	0x021BBB80 TBZ X0, 0x0, 0x21BBA30
	0x021BBB84 MOV X20, X31
	0x021BBB88 CBNZ X19, 0x21BBB9C
	0x021BBB8C B 0x21BBBFC
	0x021BBB90 MOV X20, X31
	0x021BBB94 MOV W22, W31
	0x021BBB98 CBZ X19, 0x21BBBFC
	0x021BBB9C ADRP X10, 0x1F38000
	0x021BBBA0 LDR X8, [X19]
	0x021BBBA4 LDR X10, [X10 + 0xE00]
	0x021BBBA8 LDRH W9, [X8 + 0x12E]
	0x021BBBAC LDR X1, [X10]
	0x021BBBB0 CBZ X9, 0x21BBBD4
	0x021BBBB4 LDR X10, [X8 + 0xB0]
	0x021BBBB8 ADD X10, X10, 0x8
	0x021BBBBC LDUR X11, [X10 - 0x8]
	0x021BBBC0 CMP X11, X1
	0x021BBBC4 B.EQ 0x21BBBE4
	0x021BBBC8 SUBS X9, X9, 0x1
	0x021BBBCC ADD X10, X10, 0x10
	0x021BBBD0 B.NE 0x21BBBBC
	0x021BBBD4 MOV X0, X19
	0x021BBBD8 MOV W2, W31
	0x021BBBDC BL 0x1C5C788
	0x021BBBE0 B 0x21BBBF0
	0x021BBBE4 LDRSW X9, [X10]
	0x021BBBE8 ADD X8, X8, X9, 0x4, LSL
	0x021BBBEC ADD X0, X8, 0x138
	0x021BBBF0 LDP X8, X1, [X0]
	0x021BBBF4 MOV X0, X19
	0x021BBBF8 BLR X8
	0x021BBBFC CBNZ X20, 0x21BBC4C
	0x021BBC00 AND W0, W22, 0x1
	0x021BBC04 LDP X20, X19, [X31 + 0x30]
	0x021BBC08 LDP X22, X21, [X31 + 0x20]
	0x021BBC0C LDP X24, X23, [X31 + 0x10]
	0x021BBC10 LDP X30, X25, [X31], #0x40
	0x021BBC14 RET
	0x021BBC18 MOV X0, X20
	0x021BBC1C BL 0x1C5C6E0
	0x021BBC20 CBNZ X21, 0x21BB9A8
	0x021BBC24 B 0x21BB998
	0x021BBC28 BL 0x1C16F20
	0x021BBC2C ADRP X0, 0x1F43000
	0x021BBC30 LDR X0, [X0 + 0x580]
	0x021BBC34 BL 0x1C16D08
	0x021BBC38 MOV X1, X31
	0x021BBC3C BL 0x35DEB28
	0x021BBC40 MOV X1, X20
	0x021BBC44 BL 0x1C16DEC
	0x021BBC48 BL 0x1C16F20
	0x021BBC4C MOV X0, X20
	0x021BBC50 BL 0x1C16F18
	0x021BBC54 B 0x21BBC64
	0x021BBC58 B 0x21BBC64
	0x021BBC5C B 0x21BBC64
	0x021BBC60 B 0x21BBC64
	0x021BBC64 MOV X21, X0
	0x021BBC68 CMP W1, 0x1
	0x021BBC6C B.NE 0x21BBC84
	0x021BBC70 MOV X0, X21
	0x021BBC74 BL 0x3EB1AD0
	0x021BBC78 LDR X20, [X0]
	0x021BBC7C BL 0x3EB1AE0
	0x021BBC80 B 0x21BBB94
	0x021BBC84 MOV X20, X31
	0x021BBC88 B 0x21BBC90
	0x021BBC8C MOV X21, X0
	0x021BBC90 CBZ X19, 0x21BBCF4
	0x021BBC94 ADRP X10, 0x1F38000
	0x021BBC98 LDR X8, [X19]
	0x021BBC9C LDR X10, [X10 + 0xE00]
	0x021BBCA0 LDRH W9, [X8 + 0x12E]
	0x021BBCA4 LDR X1, [X10]
	0x021BBCA8 CBZ X9, 0x21BBCCC
	0x021BBCAC LDR X10, [X8 + 0xB0]
	0x021BBCB0 ADD X10, X10, 0x8
	0x021BBCB4 LDUR X11, [X10 - 0x8]
	0x021BBCB8 CMP X11, X1
	0x021BBCBC B.EQ 0x21BBCDC
	0x021BBCC0 SUBS X9, X9, 0x1
	0x021BBCC4 ADD X10, X10, 0x10
	0x021BBCC8 B.NE 0x21BBCB4
	0x021BBCCC MOV X0, X19
	0x021BBCD0 MOV W2, W31
	0x021BBCD4 BL 0x1C5C788
	0x021BBCD8 B 0x21BBCE8
	0x021BBCDC LDRSW X9, [X10]
	0x021BBCE0 ADD X8, X8, X9, 0x4, LSL
	0x021BBCE4 ADD X0, X8, 0x138
	0x021BBCE8 LDP X8, X1, [X0]
	0x021BBCEC MOV X0, X19
	0x021BBCF0 BLR X8
	0x021BBCF4 CBNZ X20, 0x21BBD00
	0x021BBCF8 MOV X0, X21
	0x021BBCFC BL 0x1D2C690
	0x021BBD00 MOV X0, X20
	0x021BBD04 BL 0x1C16F18
	0x021BBD08 BL 0x1990590
	0x021BBD0C STP X29, X30, [X31 - 0x60]!
	0x021BBD10 STP X28, X27, [X31 + 0x10]
	0x021BBD14 STP X26, X25, [X31 + 0x20]
	0x021BBD18 STP X24, X23, [X31 + 0x30]
	0x021BBD1C STP X22, X21, [X31 + 0x40]
	0x021BBD20 STP X20, X19, [X31 + 0x50]
	0x021BBD24 ADD X29, X31, 0x0
	0x021BBD28 SUB X31, X31, 0x40
	0x021BBD2C MRS X26, 0xC000
	0x021BBD30 LDR X8, [X26 + 0x28]
	0x021BBD34 MOV X20, X3
	0x021BBD38 MOV X22, X2
	0x021BBD3C MOV X19, X0
	0x021BBD40 STUR X8, [X29 - 0x8]
	0x021BBD44 STP X1, X1, [X29 - 0x30]
	0x021BBD48 LDR X25, [X3 + 0x38]
	0x021BBD4C CBNZ X25, 0x21BBD7C
	0x021BBD50 ADRP X0, 0x1F38000
	0x021BBD54 LDR X0, [X0 + 0xE00]
	0x021BBD58 BL 0x1C16CF4
	0x021BBD5C ADRP X0, 0x1F38000
	0x021BBD60 LDR X0, [X0 + 0xE18]
	0x021BBD64 BL 0x1C16CF4
	0x021BBD68 LDR X25, [X20 + 0x38]
	0x021BBD6C CBNZ X25, 0x21BBD7C
	0x021BBD70 MOV X0, X20
	0x021BBD74 BL 0x1C5C6E0
	0x021BBD78 LDR X25, [X20 + 0x38]
	0x021BBD7C LDR X8, [X25 + 0x40]
	0x021BBD80 LDR W23, [X8 + 0xFC]
	0x021BBD84 ADD X8, X31, 0x0
	0x021BBD88 ADD X9, X23, 0xF
	0x021BBD8C AND X9, X9, 0x1FFFFFFFF
	0x021BBD90 SUB X24, X8, X9
	0x021BBD94 ADD X31, X24, 0x0
	0x021BBD98 ADD X8, X31, 0x0
	0x021BBD9C SUB X21, X8, X9
	0x021BBDA0 ADD X31, X21, 0x0
	0x021BBDA4 ADD X8, X31, 0x0
	0x021BBDA8 SUB X27, X8, X9
	0x021BBDAC ADD X31, X27, 0x0
	0x021BBDB0 ADD X8, X31, 0x0
	0x021BBDB4 SUB X0, X8, X9
	0x021BBDB8 ADD X31, X0, 0x0
	0x021BBDBC MOV W1, W31
	0x021BBDC0 MOV X2, X23
	0x021BBDC4 STUR X0, [X29 - 0x38]
	0x021BBDC8 BL 0x3EB1B10
	0x021BBDCC CBNZ X22, 0x21BBDE0
	0x021BBDD0 LDR X0, [X25 + 0x8]
	0x021BBDD4 LDR X8, [X0]
	0x021BBDD8 BLR X8
	0x021BBDDC MOV X22, X0
	0x021BBDE0 CBZ X19, 0x21BC0F4
	0x021BBDE4 LDR X8, [X20 + 0x38]
	0x021BBDE8 LDR X1, [X8 + 0x20]
	0x021BBDEC LDRB W8, [X1 + 0x135]
	0x021BBDF0 TBNZ X8, 0x0, 0x21BBE00
	0x021BBDF4 MOV X0, X1
	0x021BBDF8 BL 0x1C5C684
	0x021BBDFC MOV X1, X0
	0x021BBE00 LDR X8, [X19]
	0x021BBE04 LDRH W9, [X8 + 0x12E]
	0x021BBE08 CBZ X9, 0x21BBE2C
	0x021BBE0C LDR X10, [X8 + 0xB0]
	0x021BBE10 ADD X10, X10, 0x8
	0x021BBE14 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X8, [X3+56]
	010 Move X20, X3
	011 Move X22, X2
	012 Move W21, W1
	013 Move X19, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {25}
	016 Move X0, 0x1F39000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move X0, 0x1F39000
	020 Move X0, [X0+3608]
	021 Call 0x1C17CF4
	022 Move X8, [X20+56]
	023 Compare X8, 0
	024 JumpIfEqual {205}
	025 Compare X22, 0
	026 JumpIfNotEqual {31}
	027 Move X8, [X20+56]
	028 Move X0, [X8+8]
	029 Call 0x2119C28
	030 Move X22, X0
	031 Compare X19, 0
	032 JumpIfEqual {210}
	033 Move X8, [X20+56]
	034 Move X1, [X8+32]
	035 Move W8, [X1+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {43}
	040 Move X0, X1
	041 Call 0x1C5D684
	042 Move X1, X0
	043 Move X8, [X19]
	044 NotImplemented "Instruction LDRH not yet implemented."
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move X0, X19
	054 Move W2, W31
	055 Call 0x1C5D788
	056 NotImplemented "Instruction LDRSW not yet implemented."
	057 Add X8, X8, X9
	058 Add X0, X8, 312
	059 Move X8, [X0]
	060 Move X1, [X0+8]
	061 Move X0, X19
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X19, X0
	064 Compare X0, 0
	065 JumpIfEqual {217}
	066 Move X25, 0x1F39000
	067 Move X25, [X25+3608]
	068 Move X8, [X19]
	069 Move X1, [X25]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Compare X9, 0
	072 JumpIfEqual {79}
	073 Move X10, [X8+176]
	074 Add X10, X10, 8
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Subtract X9, X9, 1
	078 Add X10, X10, 16
	079 Move X0, X19
	080 Move W2, W31
	081 Call 0x1C5D788
	082 NotImplemented "Instruction LDRSW not yet implemented."
	083 Add X8, X8, X9
	084 Add X0, X8, 312
	085 Move X8, [X0]
	086 Move X1, [X0+8]
	087 Move X0, X19
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move W23, W0
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {166}
	094 Move X8, [X20+56]
	095 Move X1, [X8+48]
	096 Move W8, [X1+309]
	097 Move TEMP, X8
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {104}
	101 Move X0, X1
	102 Call 0x1C5D684
	103 Move X1, X0
	104 Move X8, [X19]
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Compare X9, 0
	107 JumpIfEqual {114}
	108 Move X10, [X8+176]
	109 Add X10, X10, 8
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Subtract X9, X9, 1
	113 Add X10, X10, 16
	114 Move X0, X19
	115 Move W2, W31
	116 Call 0x1C5D788
	117 NotImplemented "Instruction LDRSW not yet implemented."
	118 Add X8, X8, X9
	119 Add X0, X8, 312
	120 Move X8, [X0]
	121 Move X1, [X0+8]
	122 Move X0, X19
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Compare X22, 0
	125 JumpIfEqual {209}
	126 Move X8, [X20+56]
	127 Move W24, W0
	128 Move X1, [X8]
	129 Move W8, [X1+309]
	130 Move TEMP, X8
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfEqual {137}
	134 Move X0, X1
	135 Call 0x1C5D684
	136 Move X1, X0
	137 Move X8, [X22]
	138 NotImplemented "Instruction LDRH not yet implemented."
	139 Compare X9, 0
	140 JumpIfEqual {147}
	141 Move X10, [X8+176]
	142 Add X10, X10, 8
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Subtract X9, X9, 1
	146 Add X10, X10, 16
	147 Move X0, X22
	148 Move W2, W31
	149 Call 0x1C5D788
	150 NotImplemented "Instruction LDRSW not yet implemented."
	151 Add X8, X8, X9
	152 Add X0, X8, 312
	153 Move X8, [X0]
	154 Move X3, [X0+8]
	155 Move X0, X22
	156 Move W1, W24
	157 Move W2, W21
	158 NotImplemented "Instruction BLR not yet implemented."
	159 Move TEMP, X0
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfNotEqual {68}
	163 Move X20, X31
	164 Compare X19, 0
	165 JumpIfNotEqual {170}
	166 Move X20, X31
	167 Move W23, W31
	168 Compare X19, 0
	169 JumpIfEqual {193}
	170 Move X10, 0x1F39000
	171 Move X8, [X19]
	172 Move X10, [X10+3584]
	173 NotImplemented "Instruction LDRH not yet implemented."
	174 Move X1, [X10]
	175 Compare X9, 0
	176 JumpIfEqual {183}
	177 Move X10, [X8+176]
	178 Add X10, X10, 8
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Subtract X9, X9, 1
	182 Add X10, X10, 16
	183 Move X0, X19
	184 Move W2, W31
	185 Call 0x1C5D788
	186 NotImplemented "Instruction LDRSW not yet implemented."
	187 Add X8, X8, X9
	188 Add X0, X8, 312
	189 Move X8, [X0]
	190 Move X1, [X0+8]
	191 Move X0, X19
	192 NotImplemented "Instruction BLR not yet implemented."
	193 Compare X20, 0
	194 JumpIfNotEqual {218}
	195 And W0, W23, 1
	196 Move X20, [X31+48]
	197 Move X19, [X31+56]
	198 Move X22, [X31+32]
	199 Move X21, [X31+40]
	200 Move X24, [X31+16]
	201 Move X23, [X31+24]
	202 Move X30, [X31+64]
	203 Move X25, [X31+72]
	204 Return X0
	205 Move X0, X20
	206 Call 0x1C5D6E0
	207 Compare X22, 0
	208 JumpIfNotEqual {31}
	209 Call 0x1C17F20
	210 Move X0, 0x1F44000
	211 Move X0, [X0+1408]
	212 Call 0x1C17D08
	213 Move X1, X31
	214 Call Error.ArgumentNull, X0
	215 Move X1, X20
	216 Call 0x1C17DEC
	217 Call 0x1C17F20
	218 Move X0, X20
	219 Call 0x1C17F18
	220 Move X21, X0
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move X0, X21
	223 Call 0x3EB2AD0
	224 Move X20, [X0]
	225 Call 0x3EB2AE0
	226 Move X20, X31
	227 Move X21, X0
	228 Compare X19, 0
	229 JumpIfEqual {253}
	230 Move X10, 0x1F39000
	231 Move X8, [X19]
	232 Move X10, [X10+3584]
	233 NotImplemented "Instruction LDRH not yet implemented."
	234 Move X1, [X10]
	235 Compare X9, 0
	236 JumpIfEqual {243}
	237 Move X10, [X8+176]
	238 Add X10, X10, 8
	239 NotImplemented "Instruction LDUR not yet implemented."
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Subtract X9, X9, 1
	242 Add X10, X10, 16
	243 Move X0, X19
	244 Move W2, W31
	245 Call 0x1C5D788
	246 NotImplemented "Instruction LDRSW not yet implemented."
	247 Add X8, X8, X9
	248 Add X0, X8, 312
	249 Move X8, [X0]
	250 Move X1, [X0+8]
	251 Move X0, X19
	252 NotImplemented "Instruction BLR not yet implemented."
	253 Compare X20, 0
	254 JumpIfNotEqual {257}
	255 Move X0, X21
	256 Call 0x1D2D690
	257 Move X0, X20
	258 Call 0x1C17F18
	259 Call 0x1991590

Method: TAccumulate Aggregate(System.Collections.Generic.IEnumerable`1<TSource> source, TAccumulate seed, System.Func`3<TAccumulate, TSource, TAccumulate> func)

Disassembly:
	0x021B1EB8 ADD X0, X8, 0x138
	0x021B1EBC LDP X8, X1, [X0]
	0x021B1EC0 MOV X0, X19
	0x021B1EC4 BLR X8
	0x021B1EC8 MOV W26, W0
	0x021B1ECC TBZ X0, 0x0, 0x21B1FB0
	0x021B1ED0 LDR X8, [X20 + 0x38]
	0x021B1ED4 LDR X1, [X8 + 0x18]
	0x021B1ED8 LDRB W8, [X1 + 0x135]
	0x021B1EDC TBNZ X8, 0x0, 0x21B1EEC
	0x021B1EE0 MOV X0, X1
	0x021B1EE4 BL 0x1C5C684
	0x021B1EE8 MOV X1, X0
	0x021B1EEC LDR X8, [X19]
	0x021B1EF0 LDRH W9, [X8 + 0x12E]
	0x021B1EF4 CBZ X9, 0x21B1F18
	0x021B1EF8 LDR X10, [X8 + 0xB0]
	0x021B1EFC ADD X10, X10, 0x8
	0x021B1F00 LDUR X11, [X10 - 0x8]
	0x021B1F04 CMP X11, X1
	0x021B1F08 B.EQ 0x21B1F28
	0x021B1F0C SUBS X9, X9, 0x1
	0x021B1F10 ADD X10, X10, 0x10
	0x021B1F14 B.NE 0x21B1F00
	0x021B1F18 MOV X0, X19
	0x021B1F1C MOV W2, W31
	0x021B1F20 BL 0x1C5C788
	0x021B1F24 B 0x21B1F34
	0x021B1F28 LDRSW X9, [X10]
	0x021B1F2C ADD X8, X8, X9, 0x4, LSL
	0x021B1F30 ADD X0, X8, 0x138
	0x021B1F34 STUR X23, [X29 - 0x18]
	0x021B1F38 LDR X1, [X0 + 0x8]
	0x021B1F3C LDP X0, X8, [X1 + 0x8]
	0x021B1F40 SUB X3, X29, 0x18
	0x021B1F44 MOV X2, X19
	0x021B1F48 MOV X4, X23
	0x021B1F4C BLR X8
	0x021B1F50 MOV X0, X25
	0x021B1F54 MOV X1, X23
	0x021B1F58 MOV X2, X22
	0x021B1F5C BL 0x3EB1AC0
	0x021B1F60 MOV X0, X24
	0x021B1F64 MOV X1, X25
	0x021B1F68 MOV X2, X22
	0x021B1F6C BL 0x3EB1AC0
	0x021B1F70 LDR X8, [X20 + 0x38]
	0x021B1F74 LDR X9, [X8 + 0x28]
	0x021B1F78 LDR W10, [X9 + 0x28]
	0x021B1F7C MOV X9, X24
	0x021B1F80 TBNZ X10, 0x1F, 0x21B1F88
	0x021B1F84 LDR X9, [X24]
	0x021B1F88 LDR X1, [X8 + 0x30]
	0x021B1F8C LDR X0, [X1]
	0x021B1F90 STUR X9, [X29 - 0x18]
	0x021B1F94 LDR X8, [X1 + 0x10]
	0x021B1F98 SUB X3, X29, 0x18
	0x021B1F9C SUB X4, X29, 0xC
	0x021B1FA0 MOV X2, X21
	0x021B1FA4 BLR X8
	0x021B1FA8 LDURB W8, [X29 - 0xC]
	0x021B1FAC CBNZ W8, 0x21B1E70
	0x021B1FB0 MOV X20, X31
	0x021B1FB4 EOR W21, W26, 0x1
	0x021B1FB8 CBZ X19, 0x21B201C
	0x021B1FBC ADRP X10, 0x1F42000
	0x021B1FC0 LDR X8, [X19]
	0x021B1FC4 LDR X10, [X10 + 0xE00]
	0x021B1FC8 LDRH W9, [X8 + 0x12E]
	0x021B1FCC LDR X1, [X10]
	0x021B1FD0 CBZ X9, 0x21B1FF4
	0x021B1FD4 LDR X10, [X8 + 0xB0]
	0x021B1FD8 ADD X10, X10, 0x8
	0x021B1FDC LDUR X11, [X10 - 0x8]
	0x021B1FE0 CMP X11, X1
	0x021B1FE4 B.EQ 0x21B2004
	0x021B1FE8 SUBS X9, X9, 0x1
	0x021B1FEC ADD X10, X10, 0x10
	0x021B1FF0 B.NE 0x21B1FDC
	0x021B1FF4 MOV X0, X19
	0x021B1FF8 MOV W2, W31
	0x021B1FFC BL 0x1C5C788
	0x021B2000 B 0x21B2010
	0x021B2004 LDRSW X9, [X10]
	0x021B2008 ADD X8, X8, X9, 0x4, LSL
	0x021B200C ADD X0, X8, 0x138
	0x021B2010 LDP X8, X1, [X0]
	0x021B2014 MOV X0, X19
	0x021B2018 BLR X8
	0x021B201C CBNZ X20, 0x21B2080
	0x021B2020 LDR X8, [X27 + 0x28]
	0x021B2024 LDUR X9, [X29 - 0x8]
	0x021B2028 CMP X8, X9
	0x021B202C B.NE 0x21B2088
	0x021B2030 AND W0, W21, 0x1
	0x021B2034 ADD X31, X29, 0x0
	0x021B2038 LDP X20, X19, [X31 + 0x50]
	0x021B203C LDP X22, X21, [X31 + 0x40]
	0x021B2040 LDP X24, X23, [X31 + 0x30]
	0x021B2044 LDP X26, X25, [X31 + 0x20]
	0x021B2048 LDP X28, X27, [X31 + 0x10]
	0x021B204C LDP X29, X30, [X31], #0x60
	0x021B2050 RET
	0x021B2054 ADRP X0, 0x1F4C000
	0x021B2058 LDR X0, [X0 + 0x580]
	0x021B205C B 0x21B2068
	0x021B2060 ADRP X0, 0x1F69000
	0x021B2064 LDR X0, [X0 + 0x8F0]
	0x021B2068 BL 0x1C16D08
	0x021B206C MOV X1, X31
	0x021B2070 BL 0x35DEB28
	0x021B2074 MOV X1, X20
	0x021B2078 BL 0x1C16DEC
	0x021B207C BL 0x1C16F20
	0x021B2080 MOV X0, X20
	0x021B2084 BL 0x1C16F18
	0x021B2088 BL 0x3EB1B20
	0x021B208C B 0x21B2098
	0x021B2090 B 0x21B2098
	0x021B2094 B 0x21B2098
	0x021B2098 MOV X21, X0
	0x021B209C CMP W1, 0x1
	0x021B20A0 B.NE 0x21B20C0
	0x021B20A4 MOV X0, X21
	0x021B20A8 BL 0x3EB1AD0
	0x021B20AC LDR X20, [X0]
	0x021B20B0 BL 0x3EB1AE0
	0x021B20B4 MOVZ W21, 0x1
	0x021B20B8 CBNZ X19, 0x21B1FBC
	0x021B20BC B 0x21B201C
	0x021B20C0 MOV X20, X31
	0x021B20C4 B 0x21B20CC
	0x021B20C8 MOV X21, X0
	0x021B20CC CBZ X19, 0x21B2130
	0x021B20D0 ADRP X10, 0x1F41000
	0x021B20D4 LDR X8, [X19]
	0x021B20D8 LDR X10, [X10 + 0xE00]
	0x021B20DC LDRH W9, [X8 + 0x12E]
	0x021B20E0 LDR X1, [X10]
	0x021B20E4 CBZ X9, 0x21B2108
	0x021B20E8 LDR X10, [X8 + 0xB0]
	0x021B20EC ADD X10, X10, 0x8
	0x021B20F0 LDUR X11, [X10 - 0x8]
	0x021B20F4 CMP X11, X1
	0x021B20F8 B.EQ 0x21B2118
	0x021B20FC SUBS X9, X9, 0x1
	0x021B2100 ADD X10, X10, 0x10
	0x021B2104 B.NE 0x21B20F0
	0x021B2108 MOV X0, X19
	0x021B210C MOV W2, W31
	0x021B2110 BL 0x1C5C788
	0x021B2114 B 0x21B2124
	0x021B2118 LDRSW X9, [X10]
	0x021B211C ADD X8, X8, X9, 0x4, LSL
	0x021B2120 ADD X0, X8, 0x138
	0x021B2124 LDP X8, X1, [X0]
	0x021B2128 MOV X0, X19
	0x021B212C BLR X8
	0x021B2130 CBNZ X20, 0x21B213C
	0x021B2134 MOV X0, X21
	0x021B2138 BL 0x1D2C690
	0x021B213C MOV X0, X20
	0x021B2140 BL 0x1C16F18
	0x021B2144 BL 0x1990590
	0x021B2148 STR X30, [X31 - 0x30]!
	0x021B214C STP X22, X21, [X31 + 0x10]
	0x021B2150 STP X20, X19, [X31 + 0x20]
	0x021B2154 LDR X8, [X1 + 0x38]
	0x021B2158 MOV X20, X1
	0x021B215C MOV X19, X0
	0x021B2160 CBNZ X8, 0x21B218C
	0x021B2164 ADRP X0, 0x1F41000
	0x021B2168 LDR X0, [X0 + 0xE00]
	0x021B216C BL 0x1C16CF4
	0x021B2170 ADRP X0, 0x1F41000
	0x021B2174 LDR X0, [X0 + 0xE18]
	0x021B2178 BL 0x1C16CF4
	0x021B217C LDR X8, [X20 + 0x38]
	0x021B2180 CBNZ X8, 0x21B218C
	0x021B2184 MOV X0, X20
	0x021B2188 BL 0x1C5C6E0
	0x021B218C CBZ X19, 0x21B2300
	0x021B2190 LDR X8, [X20 + 0x38]
	0x021B2194 LDR X1, [X8]
	0x021B2198 LDRB W8, [X1 + 0x135]
	0x021B219C TBNZ X8, 0x0, 0x21B21AC
	0x021B21A0 MOV X0, X1
	0x021B21A4 BL 0x1C5C684
	0x021B21A8 MOV X1, X0
	0x021B21AC LDR X8, [X19]
	0x021B21B0 LDRH W9, [X8 + 0x12E]
	0x021B21B4 CBZ X9, 0x21B21D8
	0x021B21B8 LDR X10, [X8 + 0xB0]
	0x021B21BC ADD X10, X10, 0x8
	0x021B21C0 LDUR X11, [X10 - 0x8]
	0x021B21C4 CMP X11, X1
	0x021B21C8 B.EQ 0x21B21E8
	0x021B21CC SUBS X9, X9, 0x1
	0x021B21D0 ADD X10, X10, 0x10
	0x021B21D4 B.NE 0x21B21C0
	0x021B21D8 MOV X0, X19
	0x021B21DC MOV W2, W31
	0x021B21E0 BL 0x1C5C788
	0x021B21E4 B 0x21B21F4
	0x021B21E8 LDRSW X9, [X10]
	0x021B21EC ADD X8, X8, X9, 0x4, LSL
	0x021B21F0 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X3+56]
	009 Move X20, X3
	010 Move X23, X2
	011 Move X22, X1
	012 Move X19, X0
	013 Compare X8, 0
	014 JumpIfNotEqual {26}
	015 Move X0, 0x1F43000
	016 Move X0, [X0+3584]
	017 Call 0x1C17CF4
	018 Move X0, 0x1F43000
	019 Move X0, [X0+3608]
	020 Call 0x1C17CF4
	021 Move X8, [X20+56]
	022 Compare X8, 0
	023 JumpIfNotEqual {26}
	024 Move X0, X20
	025 Call 0x1C5D6E0
	026 Compare X19, 0
	027 JumpIfEqual {166}
	028 Compare X23, 0
	029 JumpIfEqual {168}
	030 Move X8, [X20+56]
	031 Move X1, [X8]
	032 Move W8, [X1+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {40}
	037 Move X0, X1
	038 Call 0x1C5D684
	039 Move X1, X0
	040 Move X8, [X19]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Compare X9, 0
	043 JumpIfEqual {50}
	044 Move X10, [X8+176]
	045 Add X10, X10, 8
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract X9, X9, 1
	049 Add X10, X10, 16
	050 Move X0, X19
	051 Move W2, W31
	052 Call 0x1C5D788
	053 NotImplemented "Instruction LDRSW not yet implemented."
	054 Add X8, X8, X9
	055 Add X0, X8, 312
	056 Move X8, [X0]
	057 Move X1, [X0+8]
	058 Move X0, X19
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X24, 0x1F43000
	061 Move X24, [X24+3608]
	062 Move X19, X0
	063 Move X0, X22
	064 Compare X19, 0
	065 JumpIfEqual {165}
	066 Move X8, [X19]
	067 Move X1, [X24]
	068 Move X21, X0
	069 NotImplemented "Instruction LDRH not yet implemented."
	070 Compare X9, 0
	071 JumpIfEqual {78}
	072 Move X10, [X8+176]
	073 Add X10, X10, 8
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Subtract X9, X9, 1
	077 Add X10, X10, 16
	078 Move X0, X19
	079 Move W2, W31
	080 Call 0x1C5D788
	081 NotImplemented "Instruction LDRSW not yet implemented."
	082 Add X8, X8, X9
	083 Add X0, X8, 312
	084 Move X8, [X0]
	085 Move X1, [X0+8]
	086 Move X0, X19
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {128}
	092 Move X8, [X20+56]
	093 Move X1, [X8+32]
	094 Move W8, [X1+309]
	095 Move TEMP, X8
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfEqual {102}
	099 Move X0, X1
	100 Call 0x1C5D684
	101 Move X1, X0
	102 Move X8, [X19]
	103 NotImplemented "Instruction LDRH not yet implemented."
	104 Compare X9, 0
	105 JumpIfEqual {112}
	106 Move X10, [X8+176]
	107 Add X10, X10, 8
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Subtract X9, X9, 1
	111 Add X10, X10, 16
	112 Move X0, X19
	113 Move W2, W31
	114 Call 0x1C5D788
	115 NotImplemented "Instruction LDRSW not yet implemented."
	116 Add X8, X8, X9
	117 Add X0, X8, 312
	118 Move X8, [X0]
	119 Move X1, [X0+8]
	120 Move X0, X19
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move X2, X0
	123 Move X0, [X23+64]
	124 Move X8, [X23+24]
	125 Move X3, [X23+40]
	126 Move X1, X21
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move X20, X31
	129 Compare X19, 0
	130 JumpIfEqual {154}
	131 Move X10, 0x1F42000
	132 Move X8, [X19]
	133 Move X10, [X10+3584]
	134 NotImplemented "Instruction LDRH not yet implemented."
	135 Move X1, [X10]
	136 Compare X9, 0
	137 JumpIfEqual {144}
	138 Move X10, [X8+176]
	139 Add X10, X10, 8
	140 NotImplemented "Instruction LDUR not yet implemented."
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Subtract X9, X9, 1
	143 Add X10, X10, 16
	144 Move X0, X19
	145 Move W2, W31
	146 Call 0x1C5D788
	147 NotImplemented "Instruction LDRSW not yet implemented."
	148 Add X8, X8, X9
	149 Add X0, X8, 312
	150 Move X8, [X0]
	151 Move X1, [X0+8]
	152 Move X0, X19
	153 NotImplemented "Instruction BLR not yet implemented."
	154 Compare X20, 0
	155 JumpIfNotEqual {175}
	156 Move X0, X21
	157 Move X20, [X31+48]
	158 Move X19, [X31+56]
	159 Move X22, [X31+32]
	160 Move X21, [X31+40]
	161 Move X24, [X31+16]
	162 Move X23, [X31+24]
	163 Move X30, [X31+64]
	164 Return X0
	165 Call 0x1C17F20
	166 Move X0, 0x1F4D000
	167 Move X0, [X0+1408]
	168 Move X0, 0x1F6A000
	169 Move X0, [X0+2488]
	170 Call 0x1C17D08
	171 Move X1, X31
	172 Call Error.ArgumentNull, X0
	173 Move X1, X20
	174 Call 0x1C17DEC
	175 Move X0, X20
	176 Call 0x1C17F18
	177 Move X23, X0
	178 Move X21, X22
	179 Move X23, X0
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X0, X23
	182 Call 0x3EB2AD0
	183 Move X20, [X0]
	184 Call 0x3EB2AE0
	185 Move X20, X31
	186 Move X23, X0
	187 Compare X19, 0
	188 JumpIfEqual {212}
	189 Move X10, 0x1F42000
	190 Move X8, [X19]
	191 Move X10, [X10+3584]
	192 NotImplemented "Instruction LDRH not yet implemented."
	193 Move X1, [X10]
	194 Compare X9, 0
	195 JumpIfEqual {202}
	196 Move X10, [X8+176]
	197 Add X10, X10, 8
	198 NotImplemented "Instruction LDUR not yet implemented."
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Subtract X9, X9, 1
	201 Add X10, X10, 16
	202 Move X0, X19
	203 Move W2, W31
	204 Call 0x1C5D788
	205 NotImplemented "Instruction LDRSW not yet implemented."
	206 Add X8, X8, X9
	207 Add X0, X8, 312
	208 Move X8, [X0]
	209 Move X1, [X0+8]
	210 Move X0, X19
	211 NotImplemented "Instruction BLR not yet implemented."
	212 Compare X20, 0
	213 JumpIfNotEqual {216}
	214 Move X0, X23
	215 Call 0x1D2D690
	216 Move X0, X20
	217 Call 0x1C17F18
	218 Call 0x1991590

Method: System.Int32 Sum(System.Collections.Generic.IEnumerable`1<System.Int32> source)

Disassembly:
	0x035DFE78 ADD X0, X8, 0x138
	0x035DFE7C LDP X8, X1, [X0]
	0x035DFE80 MOV X0, X19
	0x035DFE84 BLR X8
	0x035DFE88 CBNZ X20, 0x35DFE94
	0x035DFE8C LDR X0, [X31 + 0x8]
	0x035DFE90 BL 0x1D2C690
	0x035DFE94 MOV X0, X20
	0x035DFE98 BL 0x1C16F18
	0x035DFE9C BL 0x1990590
	0x035DFEA0 SUB X31, X31, 0x50
	0x035DFEA4 STR D8, [X31 + 0x10]
	0x035DFEA8 STR X30, [X31 + 0x18]
	0x035DFEAC STP X24, X23, [X31 + 0x20]
	0x035DFEB0 STP X22, X21, [X31 + 0x30]
	0x035DFEB4 STP X20, X19, [X31 + 0x40]
	0x035DFEB8 ADRP X20, 0xE01000
	0x035DFEBC LDRB W8, [X20 + 0x262]
	0x035DFEC0 MOV X19, X0
	0x035DFEC4 TBNZ X8, 0x0, 0x35DFF0C
	0x035DFEC8 ADRP X0, 0xB5A000
	0x035DFECC LDR X0, [X0 + 0x150]
	0x035DFED0 BL 0x1C16CF4
	0x035DFED4 ADRP X0, 0xB14000
	0x035DFED8 LDR X0, [X0 + 0xE00]
	0x035DFEDC BL 0x1C16CF4
	0x035DFEE0 ADRP X0, 0xB5A000
	0x035DFEE4 LDR X0, [X0 + 0x128]
	0x035DFEE8 BL 0x1C16CF4
	0x035DFEEC ADRP X0, 0xB5A000
	0x035DFEF0 LDR X0, [X0 + 0x130]
	0x035DFEF4 BL 0x1C16CF4
	0x035DFEF8 ADRP X0, 0xB14000
	0x035DFEFC LDR X0, [X0 + 0xE18]
	0x035DFF00 BL 0x1C16CF4
	0x035DFF04 MOVZ W8, 0x1
	0x035DFF08 STRB W8, [X20 + 0x262]
	0x035DFF0C CBZ X19, 0x35E011C
	0x035DFF10 ADRP X10, 0xB5A000
	0x035DFF14 LDR X8, [X19]
	0x035DFF18 LDR X10, [X10 + 0x128]
	0x035DFF1C LDRH W9, [X8 + 0x12E]
	0x035DFF20 LDR X1, [X10]
	0x035DFF24 CBZ X9, 0x35DFF48
	0x035DFF28 LDR X10, [X8 + 0xB0]
	0x035DFF2C ADD X10, X10, 0x8
	0x035DFF30 LDUR X11, [X10 - 0x8]
	0x035DFF34 CMP X11, X1
	0x035DFF38 B.EQ 0x35DFF58
	0x035DFF3C SUBS X9, X9, 0x1
	0x035DFF40 ADD X10, X10, 0x10
	0x035DFF44 B.NE 0x35DFF30
	0x035DFF48 MOV X0, X19
	0x035DFF4C MOV W2, W31
	0x035DFF50 BL 0x1C5C788
	0x035DFF54 B 0x35DFF64
	0x035DFF58 LDRSW X9, [X10]
	0x035DFF5C ADD X8, X8, X9, 0x4, LSL
	0x035DFF60 ADD X0, X8, 0x138
	0x035DFF64 LDP X8, X1, [X0]
	0x035DFF68 ADRP X22, 0xB14000
	0x035DFF6C LDR X22, [X22 + 0xE00]
	0x035DFF70 MOV X0, X19
	0x035DFF74 BLR X8
	0x035DFF78 MOV X19, X0
	0x035DFF7C CBZ X0, 0x35E0130
	0x035DFF80 ADRP X20, 0xB14000
	0x035DFF84 ADRP X23, 0xB5A000
	0x035DFF88 LDR X20, [X20 + 0xE18]
	0x035DFF8C LDR X23, [X23 + 0x130]
	0x035DFF90 MOV X21, X31
	0x035DFF94 FMOV D8, X31
	0x035DFF98 MOVN X24, 0x80000000
	0x035DFF9C LDR X8, [X19]
	0x035DFFA0 LDR X1, [X20]
	0x035DFFA4 LDRH W9, [X8 + 0x12E]
	0x035DFFA8 CBZ X9, 0x35DFFCC
	0x035DFFAC LDR X10, [X8 + 0xB0]
	0x035DFFB0 ADD X10, X10, 0x8
	0x035DFFB4 LDUR X11, [X10 - 0x8]
	0x035DFFB8 CMP X11, X1
	0x035DFFBC B.EQ 0x35DFFDC
	0x035DFFC0 SUBS X9, X9, 0x1
	0x035DFFC4 ADD X10, X10, 0x10
	0x035DFFC8 B.NE 0x35DFFB4
	0x035DFFCC MOV X0, X19
	0x035DFFD0 MOV W2, W31
	0x035DFFD4 BL 0x1C5C788
	0x035DFFD8 B 0x35DFFE8
	0x035DFFDC LDRSW X9, [X10]
	0x035DFFE0 ADD X8, X8, X9, 0x4, LSL
	0x035DFFE4 ADD X0, X8, 0x138
	0x035DFFE8 LDP X8, X1, [X0]
	0x035DFFEC MOV X0, X19
	0x035DFFF0 BLR X8
	0x035DFFF4 TBZ X0, 0x0, 0x35E0068
	0x035DFFF8 LDR X8, [X19]
	0x035DFFFC LDR X1, [X23]
	0x035E0000 LDRH W9, [X8 + 0x12E]
	0x035E0004 CBZ X9, 0x35E0028
	0x035E0008 LDR X10, [X8 + 0xB0]
	0x035E000C ADD X10, X10, 0x8
	0x035E0010 LDUR X11, [X10 - 0x8]
	0x035E0014 CMP X11, X1
	0x035E0018 B.EQ 0x35E0038
	0x035E001C SUBS X9, X9, 0x1
	0x035E0020 ADD X10, X10, 0x10
	0x035E0024 B.NE 0x35E0010
	0x035E0028 MOV X0, X19
	0x035E002C MOV W2, W31
	0x035E0030 BL 0x1C5C788
	0x035E0034 B 0x35E0044
	0x035E0038 LDRSW X9, [X10]
	0x035E003C ADD X8, X8, X9, 0x4, LSL
	0x035E0040 ADD X0, X8, 0x138
	0x035E0044 LDP X8, X1, [X0]
	0x035E0048 MOV X0, X19
	0x035E004C BLR X8
	0x035E0050 FCVT S0, S0
	0x035E0054 CMP X21, X24
	0x035E0058 FADD D8, D8, D0
	0x035E005C B.EQ 0x35E0108
	0x035E0060 ADD X21, X21, 0x1
	0x035E0064 B 0x35DFF9C
	0x035E0068 MOV X20, X31
	0x035E006C MOVZ W23, 0x9
	0x035E0070 CBZ X19, 0x35E00CC
	0x035E0074 LDR X8, [X19]
	0x035E0078 LDR X1, [X22]
	0x035E007C LDRH W9, [X8 + 0x12E]
	0x035E0080 CBZ X9, 0x35E00A4
	0x035E0084 LDR X10, [X8 + 0xB0]
	0x035E0088 ADD X10, X10, 0x8
	0x035E008C LDUR X11, [X10 - 0x8]
	0x035E0090 CMP X11, X1
	0x035E0094 B.EQ 0x35E00B4
	0x035E0098 SUBS X9, X9, 0x1
	0x035E009C ADD X10, X10, 0x10
	0x035E00A0 B.NE 0x35E008C
	0x035E00A4 MOV X0, X19
	0x035E00A8 MOV W2, W31
	0x035E00AC BL 0x1C5C788
	0x035E00B0 B 0x35E00C0
	0x035E00B4 LDRSW X9, [X10]
	0x035E00B8 ADD X8, X8, X9, 0x4, LSL
	0x035E00BC ADD X0, X8, 0x138
	0x035E00C0 LDP X8, X1, [X0]
	0x035E00C4 MOV X0, X19
	0x035E00C8 BLR X8
	0x035E00CC CBNZ X20, 0x35E0134
	0x035E00D0 CMP W23, 0x9
	0x035E00D4 B.EQ 0x35E00DC
	0x035E00D8 CBNZ W23, 0x35E00EC
	0x035E00DC CBZ X21, 0x35E013C
	0x035E00E0 SCVTF D0, X21
	0x035E00E4 FDIV D0, D8, D0
	0x00000000 INVALID
	0x035E00EC LDP X20, X19, [X31 + 0x40]
	0x035E00F0 LDP X22, X21, [X31 + 0x30]
	0x035E00F4 LDP X24, X23, [X31 + 0x20]
	0x035E00F8 LDR X30, [X31 + 0x18]
	0x035E00FC LDR V8, [X31 + 0x10]
	0x035E0100 ADD X31, X31, 0x50
	0x035E0104 RET
	0x035E0108 BL 0x1C16F30
	0x035E010C ADRP X8, 0xB59000
	0x035E0110 LDR X8, [X8 + 0x150]
	0x035E0114 LDR X1, [X8]
	0x035E0118 BL 0x1C16DEC
	0x035E011C ADRP X0, 0xB1E000
	0x035E0120 LDR X0, [X0 + 0x580]
	0x035E0124 BL 0x1C16D08
	0x035E0128 BL 0x35DEB28
	0x035E012C B 0x35E0140
	0x035E0130 BL 0x1C16F20
	0x035E0134 MOV X0, X20
	0x035E0138 BL 0x1C16F18
	0x035E013C BL 0x35DEC4C
	0x035E0140 MOV X19, X0
	0x035E0144 ADRP X0, 0xB59000
	0x035E0148 LDR X0, [X0 + 0x150]
	0x035E014C BL 0x1C16D08
	0x035E0150 MOV X1, X0
	0x035E0154 MOV X0, X19
	0x035E0158 BL 0x1C16DEC
	0x035E015C MOV X21, X31
	0x035E0160 FMOV D8, X31
	0x035E0164 B 0x35E0174
	0x035E0168 MOVN X21, 0x80000000
	0x035E016C B 0x35E0174
	0x035E0170 B 0x35E0174
	0x035E0174 CMP W1, 0x1
	0x035E0178 B.NE 0x35E0194
	0x035E017C BL 0x3EB1AD0
	0x035E0180 LDR X20, [X0]
	0x035E0184 BL 0x3EB1AE0
	0x035E0188 MOV W23, W31
	0x035E018C CBNZ X19, 0x35E0074
	0x035E0190 B 0x35E00CC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xE02000
	008 Move W8, [X20+605]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0xB5B000
	015 Move X0, [X0+280]
	016 Call 0x1C17CF4
	017 Move X0, 0xB15000
	018 Move X0, [X0+3584]
	019 Call 0x1C17CF4
	020 Move X0, 0xB3D000
	021 Move X0, [X0+1976]
	022 Call 0x1C17CF4
	023 Move X0, 0xB3D000
	024 Move X0, [X0+1984]
	025 Call 0x1C17CF4
	026 Move X0, 0xB15000
	027 Move X0, [X0+3608]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+605], W8
	031 Compare X19, 0
	032 JumpIfEqual {154}
	033 Move X10, 0xB3D000
	034 Move X8, [X19]
	035 Move X10, [X10+1976]
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Move X1, [X10]
	038 Compare X9, 0
	039 JumpIfEqual {46}
	040 Move X10, [X8+176]
	041 Add X10, X10, 8
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Subtract X9, X9, 1
	045 Add X10, X10, 16
	046 Move X0, X19
	047 Move W2, W31
	048 Call 0x1C5D788
	049 NotImplemented "Instruction LDRSW not yet implemented."
	050 Add X8, X8, X9
	051 Add X0, X8, 312
	052 Move X8, [X0]
	053 Move X1, [X0+8]
	054 Move X22, 0xB15000
	055 Move X22, [X22+3584]
	056 Move X0, X19
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move X19, X0
	059 Compare X0, 0
	060 JumpIfEqual {165}
	061 Move X21, 0xB15000
	062 Move X23, 0xB3D000
	063 Move X21, [X21+3608]
	064 Move X23, [X23+1984]
	065 Move W10, W31
	066 Move X8, [X19]
	067 Move X1, [X21]
	068 Move W20, W10
	069 NotImplemented "Instruction LDRH not yet implemented."
	070 Compare X9, 0
	071 JumpIfEqual {78}
	072 Move X10, [X8+176]
	073 Add X10, X10, 8
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Subtract X9, X9, 1
	077 Add X10, X10, 16
	078 Move X0, X19
	079 Move W2, W31
	080 Call 0x1C5D788
	081 NotImplemented "Instruction LDRSW not yet implemented."
	082 Add X8, X8, X9
	083 Add X0, X8, 312
	084 Move X8, [X0]
	085 Move X1, [X0+8]
	086 Move X0, X19
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {120}
	092 Move X8, [X19]
	093 Move X1, [X23]
	094 NotImplemented "Instruction LDRH not yet implemented."
	095 Compare X9, 0
	096 JumpIfEqual {103}
	097 Move X10, [X8+176]
	098 Add X10, X10, 8
	099 NotImplemented "Instruction LDUR not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Subtract X9, X9, 1
	102 Add X10, X10, 16
	103 Move X0, X19
	104 Move W2, W31
	105 Call 0x1C5D788
	106 NotImplemented "Instruction LDRSW not yet implemented."
	107 Add X8, X8, X9
	108 Add X0, X8, 312
	109 Move X8, [X0]
	110 Move X1, [X0+8]
	111 Move X0, X19
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Add W31, W20, W0
	114 Add W10, W0, W20
	115 Call 0x1C17F30
	116 Move X8, 0xB5A000
	117 Move X8, [X8+280]
	118 Move X1, [X8]
	119 Call 0x1C17DEC
	120 Move X21, X31
	121 Compare X19, 0
	122 JumpIfEqual {144}
	123 Move X8, [X19]
	124 Move X1, [X22]
	125 NotImplemented "Instruction LDRH not yet implemented."
	126 Compare X9, 0
	127 JumpIfEqual {134}
	128 Move X10, [X8+176]
	129 Add X10, X10, 8
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Subtract X9, X9, 1
	133 Add X10, X10, 16
	134 Move X0, X19
	135 Move W2, W31
	136 Call 0x1C5D788
	137 NotImplemented "Instruction LDRSW not yet implemented."
	138 Add X8, X8, X9
	139 Add X0, X8, 312
	140 Move X8, [X0]
	141 Move X1, [X0+8]
	142 Move X0, X19
	143 NotImplemented "Instruction BLR not yet implemented."
	144 Compare X21, 0
	145 JumpIfNotEqual {166}
	146 Move W0, W20
	147 Move X20, [X31+32]
	148 Move X19, [X31+40]
	149 Move X22, [X31+16]
	150 Move X21, [X31+24]
	151 Move X30, [X31+48]
	152 Move X23, [X31+56]
	153 Return X0
	154 Move X0, 0xB1F000
	155 Move X0, [X0+1408]
	156 Call 0x1C17D08
	157 Call Error.ArgumentNull, X0
	158 Move X19, X0
	159 Move X0, 0xB5A000
	160 Move X0, [X0+280]
	161 Call 0x1C17D08
	162 Move X1, X0
	163 Move X0, X19
	164 Call 0x1C17DEC
	165 Call 0x1C17F20
	166 Move X0, X21
	167 Call 0x1C17F18
	168 Move W20, W31
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Call 0x3EB2AD0
	171 Move X21, [X0]
	172 Call 0x3EB2AE0
	173 Move X20, X0
	174 Move X21, X31
	175 Move X20, X0
	176 Compare X19, 0
	177 JumpIfEqual {199}
	178 Move X8, [X19]
	179 Move X1, [X22]
	180 NotImplemented "Instruction LDRH not yet implemented."
	181 Compare X9, 0
	182 JumpIfEqual {189}
	183 Move X10, [X8+176]
	184 Add X10, X10, 8
	185 NotImplemented "Instruction LDUR not yet implemented."
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Subtract X9, X9, 1
	188 Add X10, X10, 16
	189 Move X0, X19
	190 Move W2, W31
	191 Call 0x1C5D788
	192 NotImplemented "Instruction LDRSW not yet implemented."
	193 Add X8, X8, X9
	194 Add X0, X8, 312
	195 Move X8, [X0]
	196 Move X1, [X0+8]
	197 Move X0, X19
	198 NotImplemented "Instruction BLR not yet implemented."
	199 Compare X21, 0
	200 JumpIfNotEqual {203}
	201 Move X0, X20
	202 Call 0x1D2D690
	203 Move X0, X21
	204 Call 0x1C17F18
	205 Call 0x1991590

Method: System.Int32 Sum(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource, System.Int32> selector)

Disassembly:
	0x021D5930 MOV X0, X19
	0x021D5934 BL 0x1C5C6E0
	0x021D5938 STP X31, X31, [X31 + 0x10]
	0x021D593C CBZ X20, 0x21D5980
	0x021D5940 STP X31, X31, [X31]
	0x021D5944 LDR X8, [X19 + 0x38]
	0x021D5948 ADD X0, X31, 0x0
	0x021D594C MOV X1, X20
	0x021D5950 LDR X2, [X8 + 0x10]
	0x021D5954 BL 0x28ECBDC
	0x021D5958 LDR V0, [X31]
	0x021D595C ADD X0, X31, 0x10
	0x021D5960 STR V0, [X31 + 0x1]
	0x021D5964 LDR X8, [X19 + 0x38]
	0x021D5968 LDR X1, [X8 + 0x18]
	0x021D596C BL 0x28ED1A8
	0x021D5970 LDP X20, X19, [X31 + 0x30]
	0x021D5974 LDR X30, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {14}
	010 Move X0, X2
	011 Move X21, X2
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X2, [X8+16]
	015 Move X0, X20
	016 Move X1, X19
	017 Call Enumerable.Select, X0, X1
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X1, X31
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Call Enumerable.Sum, X0
	024 Return X0

Method: System.Int32 Min(System.Collections.Generic.IEnumerable`1<System.Int32> source)

Disassembly:
	0x035E0194 STR X0, [X31 + 0x8]
	0x035E0198 MOV X20, X31
	0x035E019C B 0x35E01A4
	0x035E01A0 STR X0, [X31 + 0x8]
	0x035E01A4 CBZ X19, 0x35E0200
	0x035E01A8 LDR X8, [X19]
	0x035E01AC LDR X1, [X22]
	0x035E01B0 LDRH W9, [X8 + 0x12E]
	0x035E01B4 CBZ X9, 0x35E01D8
	0x035E01B8 LDR X10, [X8 + 0xB0]
	0x035E01BC ADD X10, X10, 0x8
	0x035E01C0 LDUR X11, [X10 - 0x8]
	0x035E01C4 CMP X11, X1
	0x035E01C8 B.EQ 0x35E01E8
	0x035E01CC SUBS X9, X9, 0x1
	0x035E01D0 ADD X10, X10, 0x10
	0x035E01D4 B.NE 0x35E01C0
	0x035E01D8 MOV X0, X19
	0x035E01DC MOV W2, W31
	0x035E01E0 BL 0x1C5C788
	0x035E01E4 B 0x35E01F4
	0x035E01E8 LDRSW X9, [X10]
	0x035E01EC ADD X8, X8, X9, 0x4, LSL
	0x035E01F0 ADD X0, X8, 0x138
	0x035E01F4 LDP X8, X1, [X0]
	0x035E01F8 MOV X0, X19
	0x035E01FC BLR X8
	0x035E0200 CBNZ X20, 0x35E020C
	0x035E0204 LDR X0, [X31 + 0x8]
	0x035E0208 BL 0x1D2C690
	0x035E020C MOV X0, X20
	0x035E0210 BL 0x1C16F18
	0x035E0214 BL 0x1990590
	0x035E0218 RET
	0x035E021C LDR W8, [X0 + 0x10]
	0x035E0220 CMP W8, 0x1
	0x035E0224 B.EQ 0x35E0240
	0x035E0228 CBNZ W8, 0x35E0274
	0x035E022C MOVN W8, 0x0
	0x035E0230 MOV W9, W31
	0x035E0234 STR W8, [X0 + 0x10]
	0x035E0238 STR W31, [X0 + 0x2C]
	0x035E023C B 0x35E0254
	0x035E0240 LDR W8, [X0 + 0x2C]
	0x035E0244 MOVN W9, 0x0
	0x035E0248 STR W9, [X0 + 0x10]
	0x035E024C ADD W9, W8, 0x1
	0x035E0250 STR W9, [X0 + 0x2C]
	0x035E0254 LDR W8, [X0 + 0x24]
	0x035E0258 CMP W9, W8
	0x035E025C B.GE 0x35E0274
	0x035E0260 LDR W10, [X0 + 0x1C]
	0x035E0264 MOVZ W8, 0x1
	0x035E0268 ADD W9, W10, W9
	0x035E026C STP W8, W9, [X0 + 0x10]
	0x035E0270 B 0x35E0278
	0x035E0274 MOV W8, W31
	0x035E0278 MOV W0, W8
	0x035E027C RET
	0x035E0280 LDR W0, [X0 + 0x14]
	0x035E0284 RET
	0x035E0288 STP X30, X19, [X31 - 0x10]!
	0x035E028C ADRP X0, 0xB13000
	0x035E0290 LDR X0, [X0 + 0xB40]
	0x035E0294 BL 0x1C16D08
	0x035E0298 BL 0x1C16F10
	0x035E029C MOV X1, X31
	0x035E02A0 MOV X19, X0
	0x035E02A4 BL 0x3380310
	0x035E02A8 ADRP X0, 0xB59000
	0x035E02AC LDR X0, [X0 + 0x158]
	0x035E02B0 BL 0x1C16D08
	0x035E02B4 MOV X1, X0
	0x035E02B8 MOV X0, X19
	0x035E02BC BL 0x1C16DEC
	0x035E02C0 SUB X31, X31, 0x30
	0x035E02C4 STP X30, X21, [X31 + 0x10]
	0x035E02C8 STP X20, X19, [X31 + 0x20]
	0x035E02CC ADRP X21, 0xE00000
	0x035E02D0 ADRP X20, 0xB13000
	0x035E02D4 LDRB W8, [X21 + 0x263]
	0x035E02D8 LDR X20, [X20 + 0x758]
	0x035E02DC MOV X19, X0
	0x035E02E0 TBNZ X8, 0x0, 0x35E02F8
	0x035E02E4 ADRP X0, 0xB13000
	0x035E02E8 LDR X0, [X0 + 0x758]
	0x035E02EC BL 0x1C16CF4
	0x035E02F0 MOVZ W8, 0x1
	0x035E02F4 STRB W8, [X21 + 0x263]
	0x035E02F8 LDR W8, [X19 + 0x14]
	0x035E02FC LDR X0, [X20]
	0x035E0300 ADD X1, X31, 0xC
	0x035E0304 STR W8, [X31 + 0xC]
	0x035E0308 BL 0x1C16E04
	0x035E030C LDP X20, X19, [X31 + 0x20]
	0x035E0310 LDP X30, X21, [X31 + 0x10]
	0x035E0314 ADD X31, X31, 0x30
	0x035E0318 RET
	0x035E031C STR X30, [X31 - 0x20]!
	0x035E0320 STP X20, X19, [X31 + 0x10]
	0x035E0324 ADRP X20, 0xE00000
	0x035E0328 LDRB W8, [X20 + 0x264]
	0x035E032C MOV X19, X0
	0x035E0330 TBNZ X8, 0x0, 0x35E0348
	0x035E0334 ADRP X0, 0xB59000
	0x035E0338 LDR X0, [X0 + 0x110]
	0x035E033C BL 0x1C16CF4
	0x035E0340 MOVZ W8, 0x1
	0x035E0344 STRB W8, [X20 + 0x264]
	0x035E0348 LDR W8, [X19 + 0x10]
	0x035E034C ADDS W31, W8, 0x2
	0x035E0350 B.NE 0x35E0374
	0x035E0354 LDR W20, [X19 + 0x18]
	0x035E0358 MOV X0, X31
	0x035E035C BL 0x33C151C
	0x035E0360 CMP W20, W0
	0x035E0364 B.NE 0x35E0374
	0x035E0368 STR W31, [X19 + 0x10]
	0x035E036C MOV X20, X19
	0x035E0370 B 0x35E03A0
	0x035E0374 ADRP X8, 0xB59000
	0x035E0378 LDR X8, [X8 + 0x110]
	0x035E037C LDR X0, [X8]
	0x035E0380 BL 0x1C16F10
	0x035E0384 MOV X1, X31
	0x035E0388 MOV X20, X0
	0x035E038C BL 0x33BDD8C
	0x035E0390 MOV X0, X31
	0x035E0394 STR W31, [X20 + 0x10]
	0x035E0398 BL 0x33C151C
	0x035E039C STR W0, [X20 + 0x18]
	0x035E03A0 LDR W8, [X19 + 0x20]
	0x035E03A4 MOV X0, X20
	0x035E03A8 STR W8, [X20 + 0x1C]
	0x035E03AC LDR W8, [X19 + 0x28]
	0x035E03B0 STR W8, [X20 + 0x24]
	0x035E03B4 LDP X20, X19, [X31 + 0x10]
	0x035E03B8 LDR X30, [X31], #0x20
	0x035E03BC RET
	0x035E03C0 B 0x35E031C
	0x035E03C4 SUB X31, X31, 0x30
	0x035E03C8 STP X30, X21, [X31 + 0x10]
	0x035E03CC STP X20, X19, [X31 + 0x20]
	0x035E03D0 ADRP X21, 0xE00000
	0x035E03D4 ADRP X20, 0xB59000
	0x035E03D8 LDRB W8, [X21 + 0x265]
	0x035E03DC LDR X20, [X20 + 0x160]
	0x035E03E0 MOV X19, X0
	0x035E03E4 TBNZ X8, 0x0, 0x35E0408
	0x035E03E8 ADRP X0, 0xB59000
	0x035E03EC LDR X0, [X0 + 0x168]
	0x035E03F0 BL 0x1C16CF4
	0x035E03F4 ADRP X0, 0xB59000
	0x035E03F8 LDR X0, [X0 + 0x160]
	0x035E03FC BL 0x1C16CF4
	0x035E0400 MOVZ W8, 0x1
	0x035E0404 STRB W8, [X21 + 0x265]
	0x035E0408 LDR X0, [X20]
	0x035E040C STR X31, [X31 + 0x8]
	0x035E0410 LDR W8, [X0 + 0xE0]
	0x035E0414 CBNZ W8, 0x35E0420
	0x035E0418 BL 0x1C16DFC
	0x035E041C LDR X0, [X20]
	0x035E0420 LDR X8, [X0 + 0xB8]
	0x035E0424 LDR X8, [X8 + 0x8]
	0x035E0428 CBZ X8, 0x35E0484
	0x035E042C LDR W9, [X0 + 0xE0]
	0x035E0430 CBNZ W9, 0x35E0448
	0x035E0434 BL 0x1C16DFC
	0x035E0438 LDR X8, [X20]
	0x035E043C LDR X8, [X8 + 0xB8]
	0x035E0440 LDR X8, [X8 + 0x8]
	0x035E0444 CBZ X8, 0x35E04B0
	0x035E0448 ADRP X9, 0xB59000
	0x035E044C LDR X9, [X9 + 0x168]
	0x035E0450 ADD X2, X31, 0x8
	0x035E0454 MOV X0, X8
	0x035E0458 MOV X1, X19
	0x035E045C LDR X3, [X9]
	0x035E0460 BL 0x2996F38
	0x035E0464 TBZ X0, 0x0, 0x35E0484
	0x035E0468 LDR X8, [X31 + 0x8]
	0x035E046C CBZ X8, 0x35E04B0
	0x035E0470 LDR W0, [X8 + 0x10]
	0x035E0474 LDP X20, X19, [X31 + 0x20]
	0x035E0478 LDP X30, X21, [X31 + 0x10]
	0x035E047C ADD X31, X31, 0x30
	0x035E0480 RET
	0x035E0484 ADRP X0, 0xB59000
	0x035E0488 LDR X0, [X0 + 0x170]
	0x035E048C BL 0x1C16D08
	0x035E0490 BL 0x35E04B4
	0x035E0494 MOV X19, X0
	0x035E0498 ADRP X0, 0xB59000
	0x035E049C LDR X0, [X0 + 0x178]
	0x035E04A0 BL 0x1C16D08
	0x035E04A4 MOV X1, X0
	0x035E04A8 MOV X0, X19
	0x035E04AC BL 0x1C16DEC
	0x035E04B0 BL 0x1C16F20
	0x035E04B4 STP X30, X21, [X31 - 0x20]!
	0x035E04B8 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE01000
	009 Move W8, [X20+606]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xB14000
	016 Move X0, [X0+3584]
	017 Call 0x1C17CF4
	018 Move X0, 0xB3C000
	019 Move X0, [X0+1976]
	020 Call 0x1C17CF4
	021 Move X0, 0xB3C000
	022 Move X0, [X0+1984]
	023 Call 0x1C17CF4
	024 Move X0, 0xB14000
	025 Move X0, [X0+3608]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+606], W8
	029 Compare X19, 0
	030 JumpIfEqual {155}
	031 Move X10, 0xB3C000
	032 Move X8, [X19]
	033 Move X10, [X10+1976]
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Move X1, [X10]
	036 Compare X9, 0
	037 JumpIfEqual {44}
	038 Move X10, [X8+176]
	039 Add X10, X10, 8
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Subtract X9, X9, 1
	043 Add X10, X10, 16
	044 Move X0, X19
	045 Move W2, W31
	046 Call 0x1C5D788
	047 NotImplemented "Instruction LDRSW not yet implemented."
	048 Add X8, X8, X9
	049 Add X0, X8, 312
	050 Move X8, [X0]
	051 Move X1, [X0+8]
	052 Move X24, 0xB14000
	053 Move X24, [X24+3584]
	054 Move X0, X19
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X19, X0
	057 Compare X0, 0
	058 JumpIfEqual {159}
	059 Move X21, 0xB14000
	060 Move X22, 0xB3C000
	061 Move X21, [X21+3608]
	062 Move X22, [X22+1984]
	063 Move W20, W31
	064 Move W23, W31
	065 Move X8, [X19]
	066 Move X1, [X21]
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Compare X9, 0
	069 JumpIfEqual {76}
	070 Move X10, [X8+176]
	071 Add X10, X10, 8
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract X9, X9, 1
	075 Add X10, X10, 16
	076 Move X0, X19
	077 Move W2, W31
	078 Call 0x1C5D788
	079 NotImplemented "Instruction LDRSW not yet implemented."
	080 Add X8, X8, X9
	081 Add X0, X8, 312
	082 Move X8, [X0]
	083 Move X1, [X0+8]
	084 Move X0, X19
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {116}
	090 Move X8, [X19]
	091 Move X1, [X22]
	092 NotImplemented "Instruction LDRH not yet implemented."
	093 Compare X9, 0
	094 JumpIfEqual {101}
	095 Move X10, [X8+176]
	096 Add X10, X10, 8
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Subtract X9, X9, 1
	100 Add X10, X10, 16
	101 Move X0, X19
	102 Move W2, W31
	103 Call 0x1C5D788
	104 NotImplemented "Instruction LDRSW not yet implemented."
	105 Add X8, X8, X9
	106 Add X0, X8, 312
	107 Move X8, [X0]
	108 Move X1, [X0+8]
	109 Move X0, X19
	110 NotImplemented "Instruction BLR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 NotImplemented "Instruction CSEL not yet implemented."
	113 And W31, W23, 1
	114 NotImplemented "Instruction CSEL not yet implemented."
	115 Move W23, 1
	116 Move X21, X31
	117 Compare X19, 0
	118 JumpIfEqual {140}
	119 Move X8, [X19]
	120 Move X1, [X24]
	121 NotImplemented "Instruction LDRH not yet implemented."
	122 Compare X9, 0
	123 JumpIfEqual {130}
	124 Move X10, [X8+176]
	125 Add X10, X10, 8
	126 NotImplemented "Instruction LDUR not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Subtract X9, X9, 1
	129 Add X10, X10, 16
	130 Move X0, X19
	131 Move W2, W31
	132 Call 0x1C5D788
	133 NotImplemented "Instruction LDRSW not yet implemented."
	134 Add X8, X8, X9
	135 Add X0, X8, 312
	136 Move X8, [X0]
	137 Move X1, [X0+8]
	138 Move X0, X19
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Compare X21, 0
	141 JumpIfNotEqual {160}
	142 Move TEMP, X23
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfNotEqual {162}
	146 Move W0, W20
	147 Move X20, [X31+48]
	148 Move X19, [X31+56]
	149 Move X22, [X31+32]
	150 Move X21, [X31+40]
	151 Move X24, [X31+16]
	152 Move X23, [X31+24]
	153 Move X30, [X31+64]
	154 Return X0
	155 Move X0, 0xB1F000
	156 Move X0, [X0+1408]
	157 Call 0x1C17D08
	158 Call Error.ArgumentNull, X0
	159 Call 0x1C17F20
	160 Move X0, X21
	161 Call 0x1C17F18
	162 Call Error.NoElements
	163 Move X19, X0
	164 Move X0, 0xB5A000
	165 Move X0, [X0+288]
	166 Call 0x1C17D08
	167 Move X1, X0
	168 Move X0, X19
	169 Call 0x1C17DEC
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move X22, X0
	172 Move W20, W31
	173 NotImplemented "Instruction CSET not yet implemented."
	174 Move X22, X0
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move X0, X22
	177 Call 0x3EB2AD0
	178 Move X21, [X0]
	179 Call 0x3EB2AE0
	180 Move X21, X31
	181 Move X22, X0
	182 Compare X19, 0
	183 JumpIfEqual {205}
	184 Move X8, [X19]
	185 Move X1, [X24]
	186 NotImplemented "Instruction LDRH not yet implemented."
	187 Compare X9, 0
	188 JumpIfEqual {195}
	189 Move X10, [X8+176]
	190 Add X10, X10, 8
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Subtract X9, X9, 1
	194 Add X10, X10, 16
	195 Move X0, X19
	196 Move W2, W31
	197 Call 0x1C5D788
	198 NotImplemented "Instruction LDRSW not yet implemented."
	199 Add X8, X8, X9
	200 Add X0, X8, 312
	201 Move X8, [X0]
	202 Move X1, [X0+8]
	203 Move X0, X19
	204 NotImplemented "Instruction BLR not yet implemented."
	205 Compare X21, 0
	206 JumpIfNotEqual {209}
	207 Move X0, X22
	208 Call 0x1D2D690
	209 Move X0, X21
	210 Call 0x1C17F18
	211 Call 0x1991590

Method: System.Single Min(System.Collections.Generic.IEnumerable`1<System.Single> source)

Disassembly:
	0x035E04BC ADRP X21, 0xE00000
	0x035E04C0 ADRP X20, 0xB13000
	0x035E04C4 LDRB W8, [X21 + 0x267]
	0x035E04C8 LDR X20, [X20 + 0x5B0]
	0x035E04CC MOV X19, X0
	0x035E04D0 TBNZ X8, 0x0, 0x35E04E8
	0x035E04D4 ADRP X0, 0xB13000
	0x035E04D8 LDR X0, [X0 + 0x5B0]
	0x035E04DC BL 0x1C16CF4
	0x035E04E0 MOVZ W8, 0x1
	0x035E04E4 STRB W8, [X21 + 0x267]
	0x035E04E8 MOV X0, X19
	0x035E04EC BL 0x35E05B0
	0x035E04F0 LDR X8, [X20]
	0x035E04F4 MOV X19, X0
	0x035E04F8 MOV X0, X8
	0x035E04FC BL 0x1C16F10
	0x035E0500 MOV X1, X19
	0x035E0504 MOV X2, X31
	0x035E0508 MOV X20, X0
	0x035E050C BL 0x337DF1C
	0x035E0510 MOV X0, X20
	0x035E0514 LDP X20, X19, [X31 + 0x10]
	0x035E0518 LDP X30, X21, [X31], #0x20
	0x035E051C RET
	0x035E0520 STR X30, [X31 - 0x30]!
	0x035E0524 STP X22, X21, [X31 + 0x10]
	0x035E0528 STP X20, X19, [X31 + 0x20]
	0x035E052C ADRP X21, 0xE00000
	0x035E0530 ADRP X22, 0xB59000
	0x035E0534 ADRP X19, 0xB59000
	0x035E0538 ADRP X20, 0xB59000
	0x035E053C LDRB W8, [X21 + 0x266]
	0x035E0540 LDR X22, [X22 + 0x180]
	0x035E0544 LDR X19, [X19 + 0x188]
	0x035E0548 LDR X20, [X20 + 0x160]
	0x035E054C TBNZ X8, 0x0, 0x35E057C
	0x035E0550 ADRP X0, 0xB59000
	0x035E0554 LDR X0, [X0 + 0x188]
	0x035E0558 BL 0x1C16CF4
	0x035E055C ADRP X0, 0xB59000
	0x035E0560 LDR X0, [X0 + 0x180]
	0x035E0564 BL 0x1C16CF4
	0x035E0568 ADRP X0, 0xB59000
	0x035E056C LDR X0, [X0 + 0x160]
	0x035E0570 BL 0x1C16CF4
	0x035E0574 MOVZ W8, 0x1
	0x035E0578 STRB W8, [X21 + 0x266]
	0x035E057C LDR X0, [X22]
	0x035E0580 BL 0x1C16F10
	0x035E0584 LDR X2, [X19]
	0x035E0588 MOVZ W1, 0x28
	0x035E058C MOV X19, X0
	0x035E0590 BL 0x28EF0BC
	0x035E0594 LDR X8, [X20]
	0x035E0598 LDP X22, X21, [X31 + 0x10]
	0x035E059C LDR X8, [X8 + 0xB8]
	0x035E05A0 STR X19, [X8]
	0x035E05A4 LDP X20, X19, [X31 + 0x20]
	0x035E05A8 LDR X30, [X31], #0x30
	0x035E05AC RET
	0x035E05B0 STP X30, X21, [X31 - 0x20]!
	0x035E05B4 STP X20, X19, [X31 + 0x10]
	0x035E05B8 ADRP X20, 0xE00000
	0x035E05BC ADRP X21, 0xB59000
	0x035E05C0 LDRB W8, [X20 + 0x268]
	0x035E05C4 LDR X21, [X21 + 0x190]
	0x035E05C8 MOV X19, X0
	0x035E05CC TBNZ X8, 0x0, 0x35E05E4
	0x035E05D0 ADRP X0, 0xB59000
	0x035E05D4 LDR X0, [X0 + 0x190]
	0x035E05D8 BL 0x1C16CF4
	0x035E05DC MOVZ W8, 0x1
	0x035E05E0 STRB W8, [X20 + 0x268]
	0x035E05E4 LDR X0, [X21]
	0x035E05E8 MOV X1, X19
	0x035E05EC LDP X20, X19, [X31 + 0x10]
	0x035E05F0 LDP X30, X21, [X31], #0x20
	0x035E05F4 B 0x35D9780
	0x035E05F8 LDR X0, [X0 + 0x10]
	0x035E05FC RET
	0x035E0600 LDR X8, [X0]
	0x035E0604 LDP X2, X1, [X8 + 0x188]
	0x035E0608 BR X2
	0x035E060C STP X30, X19, [X31 - 0x10]!
	0x035E0610 BL 0x35E0630
	0x035E0614 MOV X19, X0
	0x035E0618 ADRP X0, 0xB59000
	0x035E061C LDR X0, [X0 + 0x198]
	0x035E0620 BL 0x1C16D08
	0x035E0624 MOV X1, X0
	0x035E0628 MOV X0, X19
	0x035E062C BL 0x1C16DEC
	0x035E0630 STP X30, X21, [X31 - 0x20]!
	0x035E0634 STP X20, X19, [X31 + 0x10]
	0x035E0638 ADRP X20, 0xE00000
	0x035E063C ADRP X21, 0xB13000
	0x035E0640 ADRP X19, 0xB59000
	0x035E0644 LDRB W8, [X20 + 0x269]
	0x035E0648 LDR X21, [X21 + 0x5B0]
	0x035E064C LDR X19, [X19 + 0x1A0]
	0x035E0650 TBNZ X8, 0x0, 0x35E0674
	0x035E0654 ADRP X0, 0xB13000
	0x035E0658 LDR X0, [X0 + 0x5B0]
	0x035E065C BL 0x1C16CF4
	0x035E0660 ADRP X0, 0xB59000
	0x035E0664 LDR X0, [X0 + 0x1A0]
	0x035E0668 BL 0x1C16CF4
	0x035E066C MOVZ W8, 0x1
	0x035E0670 STRB W8, [X20 + 0x269]
	0x035E0674 LDR X0, [X21]
	0x035E0678 BL 0x1C16F10
	0x035E067C LDR X1, [X19]
	0x035E0680 MOV X2, X31
	0x035E0684 MOV X19, X0
	0x035E0688 BL 0x337DF1C
	0x035E068C MOV X0, X19
	0x035E0690 LDP X20, X19, [X31 + 0x10]
	0x035E0694 LDP X30, X21, [X31], #0x20
	0x035E0698 RET
	0x035E069C LDR X0, [X0 + 0x10]
	0x035E06A0 RET
	0x035E06A4 STP X30, X21, [X31 - 0x20]!
	0x035E06A8 STP X20, X19, [X31 + 0x10]
	0x035E06AC MOV X20, X1
	0x035E06B0 MOV X1, X31
	0x035E06B4 MOV W19, W2
	0x035E06B8 MOV X21, X0
	0x035E06BC BL 0x33BDD8C
	0x035E06C0 STR X20, [X21 + 0x18]
	0x035E06C4 STR W19, [X21 + 0x10]
	0x035E06C8 LDP X20, X19, [X31 + 0x10]
	0x035E06CC MOVZ W8, 0x1
	0x035E06D0 STRB W8, [X21 + 0x28]
	0x035E06D4 LDP X30, X21, [X31], #0x20
	0x035E06D8 RET
	0x035E06DC STP X30, X21, [X31 - 0x20]!
	0x035E06E0 STP X20, X19, [X31 + 0x10]
	0x035E06E4 MOV X20, X1
	0x035E06E8 MOV X1, X31
	0x035E06EC MOV W19, W2
	0x035E06F0 MOV X21, X0
	0x035E06F4 BL 0x33BDD8C
	0x035E06F8 STR X20, [X21 + 0x20]
	0x035E06FC STR W19, [X21 + 0x10]
	0x035E0700 LDP X20, X19, [X31 + 0x10]
	0x035E0704 LDP X30, X21, [X31], #0x20
	0x035E0708 RET
	0x035E070C STR X30, [X31 - 0x10]!
	0x035E0710 ADD W8, W1, 0x1F
	0x035E0714 CMP W1, 0x0
	0x035E0718 CSEL W8, W8, W1, LT
	0x035E071C ADDS W31, W1, 0x1F
	0x035E0720 B.LT 0x35E0778
	0x035E0724 LDR W9, [X0 + 0x10]
	0x035E0728 SBFM W8, W8, 0x5, 0x1F
	0x035E072C CMP W8, W9
	0x035E0730 B.GE 0x35E0778
	0x035E0734 LDRB W9, [X0 + 0x28]
	0x035E0738 CBZ W9, 0x35E0748
	0x035E073C LDR X9, [X0 + 0x18]
	0x035E0740 ADD X8, X9, W8, 0x2, SXTW
	0x035E0744 B 0x35E0764
	0x035E0748 LDR X9, [X0 + 0x20]
	0x035E074C CBZ X9, 0x35E0780
	0x035E0750 LDR W10, [X9 + 0x18]
	0x035E0754 CMP W8, W10
	0x035E0758 B.CS 0x35E0784
	0x035E075C ADD X8, X9, W8, 0x2, SXTW
	0x035E0760 ADD X8, X8, 0x20
	0x035E0764 LDR W9, [X8]
	0x035E0768 MOVZ W10, 0x1
	0x035E076C LSLV W10, W10, W1
	0x035E0770 ORR W9, W9, W10, 0x0
	0x035E0774 STR W9, [X8]
	0x035E0778 LDR X30, [X31], #0x10
	0x035E077C RET
	0x035E0780 BL 0x1C16F20
	0x035E0784 BL 0x1C16F28
	0x035E0788 STR X30, [X31 - 0x10]!
	0x035E078C ADD W8, W1, 0x1F
	0x035E0790 CMP W1, 0x0
	0x035E0794 CSEL W9, W8, W1, LT
	0x035E0798 ADDS W31, W1, 0x1F
	0x035E079C MOV W8, W31
	0x035E07A0 B.LT 0x35E07F8
	0x035E07A4 LDR W10, [X0 + 0x10]
	0x035E07A8 SBFM W9, W9, 0x5, 0x1F
	0x035E07AC CMP W9, W10
	0x035E07B0 B.GE 0x35E07F8
	0x035E07B4 LDRB W8, [X0 + 0x28]
	0x035E07B8 CBZ W8, 0x35E07C8
	0x035E07BC LDR X8, [X0 + 0x18]
	0x035E07C0 ADD X8, X8, W9, 0x2, SXTW
	0x035E07C4 B 0x35E07E4
	0x035E07C8 LDR X8, [X0 + 0x20]
	0x035E07CC CBZ X8, 0x35E0804
	0x035E07D0 LDR W10, [X8 + 0x18]
	0x035E07D4 CMP W9, W10
	0x035E07D8 B.CS 0x35E0808
	0x035E07DC ADD X8, X8, W9, 0x2, SXTW
	0x035E07E0 ADD X8, X8, 0x20
	0x035E07E4 LDR W8, [X8]
	0x035E07E8 MOVZ W9, 0x1
	0x035E07EC LSLV W9, W9, W1
	0x035E07F0 ANDS W31, W8, W9, 0x0
	0x035E07F4 CSET W8, NE
	0x035E07F8 MOV W0, W8
	0x035E07FC LDR X30, [X31], #0x10
	0x035E0800 RET
	0x035E0804 BL 0x1C16F20
	0x035E0808 BL 0x1C16F28
	0x035E080C SUBS W8, W0, 0x1
	0x035E0810 B.LT 0x35E082C
	0x035E0814 ADD W9, W0, 0x1E
	0x035E0818 CMP W8, 0x0
	0x035E081C CSEL W8, W9, W8, LT

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xE01000
	011 Move W8, [X20+607]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xB14000
	018 Move X0, [X0+3584]
	019 Call 0x1C17CF4
	020 Move X0, 0xB5A000
	021 Move X0, [X0+296]
	022 Call 0x1C17CF4
	023 Move X0, 0xB5A000
	024 Move X0, [X0+304]
	025 Call 0x1C17CF4
	026 Move X0, 0xB14000
	027 Move X0, [X0+3608]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+607], W8
	031 Compare X19, 0
	032 JumpIfEqual {173}
	033 Move X10, 0xB5A000
	034 Move X8, [X19]
	035 Move X10, [X10+296]
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Move X1, [X10]
	038 Compare X9, 0
	039 JumpIfEqual {46}
	040 Move X10, [X8+176]
	041 Add X10, X10, 8
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Subtract X9, X9, 1
	045 Add X10, X10, 16
	046 Move X0, X19
	047 Move W2, W31
	048 Call 0x1C5D788
	049 NotImplemented "Instruction LDRSW not yet implemented."
	050 Add X8, X8, X9
	051 Add X0, X8, 312
	052 Move X8, [X0]
	053 Move X1, [X0+8]
	054 Move X20, 0xB14000
	055 Move X23, 0xB5A000
	056 Move X22, 0xB14000
	057 Move X20, [X20+3608]
	058 Move X23, [X23+304]
	059 Move X22, [X22+3584]
	060 Move X0, X19
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move W24, 1
	063 Move X19, X0
	064 Move W21, W31
	065 Move S0, W31
	066 NotImplemented "Instruction MOVK not yet implemented."
	067 Move V8, V0
	068 Compare X19, 0
	069 JumpIfEqual {172}
	070 Move X8, [X19]
	071 Move X1, [X20]
	072 NotImplemented "Instruction LDRH not yet implemented."
	073 Compare X9, 0
	074 JumpIfEqual {81}
	075 Move X10, [X8+176]
	076 Add X10, X10, 8
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Subtract X9, X9, 1
	080 Add X10, X10, 16
	081 Move X0, X19
	082 Move W2, W31
	083 Call 0x1C5D788
	084 NotImplemented "Instruction LDRSW not yet implemented."
	085 Add X8, X8, X9
	086 Add X0, X8, 312
	087 Move X8, [X0]
	088 Move X1, [X0+8]
	089 Move X0, X19
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {127}
	095 Move X8, [X19]
	096 Move X1, [X23]
	097 NotImplemented "Instruction LDRH not yet implemented."
	098 Compare X9, 0
	099 JumpIfEqual {106}
	100 Move X10, [X8+176]
	101 Add X10, X10, 8
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Subtract X9, X9, 1
	105 Add X10, X10, 16
	106 Move X0, X19
	107 Move W2, W31
	108 Call 0x1C5D788
	109 NotImplemented "Instruction LDRSW not yet implemented."
	110 Add X8, X8, X9
	111 Add X0, X8, 312
	112 Move X8, [X0]
	113 Move X1, [X0+8]
	114 Move X0, X19
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Xor W8, W21, 1
	117 NotImplemented "Instruction FCMP not yet implemented."
	118 Move W21, 1
	119 Move TEMP, X8
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfEqual {67}
	123 Move W8, S0
	124 And W8, W8, 0x7FFFFFFF
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move W21, 1
	127 Move X20, X31
	128 Move W23, 9
	129 Compare X19, 0
	130 JumpIfEqual {152}
	131 Move X8, [X19]
	132 Move X1, [X22]
	133 NotImplemented "Instruction LDRH not yet implemented."
	134 Compare X9, 0
	135 JumpIfEqual {142}
	136 Move X10, [X8+176]
	137 Add X10, X10, 8
	138 NotImplemented "Instruction LDUR not yet implemented."
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Subtract X9, X9, 1
	141 Add X10, X10, 16
	142 Move X0, X19
	143 Move W2, W31
	144 Call 0x1C5D788
	145 NotImplemented "Instruction LDRSW not yet implemented."
	146 Add X8, X8, X9
	147 Add X0, X8, 312
	148 Move X8, [X0]
	149 Move X1, [X0+8]
	150 Move X0, X19
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Compare X20, 0
	153 JumpIfNotEqual {177}
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Compare W23, 0
	156 JumpIfNotEqual {161}
	157 Move TEMP, X21
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfNotEqual {179}
	161 Move V0, V8
	162 Move X20, [X31+64]
	163 Move X19, [X31+72]
	164 Move X22, [X31+48]
	165 Move X21, [X31+56]
	166 Move X24, [X31+32]
	167 Move X23, [X31+40]
	168 Move X30, [X31+24]
	169 Move V8, [X31+16]
	170 Add X31, X31, 80
	171 Return V0
	172 Call 0x1C17F20
	173 Move X0, 0xB1F000
	174 Move X0, [X0+1408]
	175 Call 0x1C17D08
	176 Call Error.ArgumentNull, X0
	177 Move X0, X20
	178 Call 0x1C17F18
	179 Call Error.NoElements
	180 Move X19, X0
	181 Move X0, 0xB5A000
	182 Move X0, [X0+312]
	183 Call 0x1C17D08
	184 Move X1, X0
	185 Move X0, X19
	186 Call 0x1C17DEC
	187 Move W21, W31
	188 Move S8, W31
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Call 0x3EB2AD0
	191 Move X20, [X0]
	192 Call 0x3EB2AE0
	193 Move W23, W31
	194 Compare X19, 0
	195 JumpIfNotEqual {131}
	196 Move [X31+8], X0
	197 Move X20, X31
	198 Move [X31+8], X0
	199 Compare X19, 0
	200 JumpIfEqual {222}
	201 Move X8, [X19]
	202 Move X1, [X22]
	203 NotImplemented "Instruction LDRH not yet implemented."
	204 Compare X9, 0
	205 JumpIfEqual {212}
	206 Move X10, [X8+176]
	207 Add X10, X10, 8
	208 NotImplemented "Instruction LDUR not yet implemented."
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Subtract X9, X9, 1
	211 Add X10, X10, 16
	212 Move X0, X19
	213 Move W2, W31
	214 Call 0x1C5D788
	215 NotImplemented "Instruction LDRSW not yet implemented."
	216 Add X8, X8, X9
	217 Add X0, X8, 312
	218 Move X8, [X0]
	219 Move X1, [X0+8]
	220 Move X0, X19
	221 NotImplemented "Instruction BLR not yet implemented."
	222 Compare X20, 0
	223 JumpIfNotEqual {226}
	224 Move X0, [X31+8]
	225 Call 0x1D2D690
	226 Move X0, X20
	227 Call 0x1C17F18
	228 Call 0x1991590

Method: System.Single Min(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource, System.Single> selector)

Disassembly:
	0x021CA768 LDRB W9, [X8 + 0x130]
	0x021CA76C CMP W9, W10
	0x021CA770 B.CC 0x21CA788
	0x021CA774 LDR X11, [X8 + 0xC8]
	0x021CA778 ADD X10, X11, X10, 0x3, LSL
	0x021CA77C LDUR X10, [X10 - 0x8]
	0x021CA780 CMP X10, X0
	0x021CA784 B.EQ 0x21CA898
	0x021CA788 LDR X8, [X21 + 0x38]
	0x021CA78C LDR X1, [X8 + 0x28]
	0x021CA790 LDRB W8, [X1 + 0x135]
	0x021CA794 TBNZ X8, 0x0, 0x21CA7A4
	0x021CA798 MOV X0, X1
	0x021CA79C BL 0x1C5C684
	0x021CA7A0 MOV X1, X0
	0x021CA7A4 MOV X0, X20
	0x021CA7A8 BL 0x1C16E00
	0x021CA7AC LDR X8, [X21 + 0x38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {14}
	010 Move X0, X2
	011 Move X21, X2
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X2, [X8+16]
	015 Move X0, X20
	016 Move X1, X19
	017 Call Enumerable.Select, X0, X1
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X1, X31
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Call Enumerable.Min, X0
	024 Return V0

Method: System.Int32 Max(System.Collections.Generic.IEnumerable`1<System.Int32> source)

Disassembly:
	0x035E0820 SBFM W8, W8, 0x5, 0x1F
	0x035E0824 ADD W0, W8, 0x1
	0x035E0828 RET
	0x035E082C MOV W0, W31
	0x035E0830 RET
	0x035E0834 STR X30, [X31 - 0x20]!
	0x035E0838 STP X20, X19, [X31 + 0x10]
	0x035E083C ADRP X19, 0xE00000
	0x035E0840 ADRP X20, 0xB59000
	0x035E0844 LDRB W8, [X19 + 0x26A]
	0x035E0848 LDR X20, [X20 + 0x1A8]
	0x035E084C TBNZ X8, 0x0, 0x35E0864
	0x035E0850 ADRP X0, 0xB59000
	0x035E0854 LDR X0, [X0 + 0x1A8]
	0x035E0858 BL 0x1C16CF4
	0x035E085C MOVZ W8, 0x1
	0x035E0860 STRB W8, [X19 + 0x26A]
	0x035E0864 LDR X0, [X20]
	0x035E0868 BL 0x1C16F10
	0x035E086C MOV X19, X0
	0x035E0870 BL 0x35E0884
	0x035E0874 MOV X0, X19
	0x035E0878 LDP X20, X19, [X31 + 0x10]
	0x035E087C LDR X30, [X31], #0x20
	0x035E0880 RET
	0x035E0884 STP X30, X21, [X31 - 0x20]!
	0x035E0888 STP X20, X19, [X31 + 0x10]
	0x035E088C ADRP X20, 0xE00000
	0x035E0890 ADRP X21, 0xB59000
	0x035E0894 LDRB W8, [X20 + 0x274]
	0x035E0898 LDR X21, [X21 + 0x1B0]
	0x035E089C MOV X19, X0
	0x035E08A0 TBNZ X8, 0x0, 0x35E08B8
	0x035E08A4 ADRP X0, 0xB59000
	0x035E08A8 LDR X0, [X0 + 0x1B0]
	0x035E08AC BL 0x1C16CF4
	0x035E08B0 MOVZ W8, 0x1
	0x035E08B4 STRB W8, [X20 + 0x274]
	0x035E08B8 LDR X0, [X21]
	0x035E08BC LDR W8, [X0 + 0xE0]
	0x035E08C0 CBNZ W8, 0x35E08C8
	0x035E08C4 BL 0x1C16DFC
	0x035E08C8 MOV X0, X19
	0x035E08CC LDP X20, X19, [X31 + 0x10]
	0x035E08D0 MOV X1, X31
	0x035E08D4 LDP X30, X21, [X31], #0x20
	0x035E08D8 B 0x33BDD8C
	0x035E08DC SUB X31, X31, 0x30
	0x035E08E0 STP X30, X21, [X31 + 0x10]
	0x035E08E4 STP X20, X19, [X31 + 0x20]
	0x035E08E8 ADRP X19, 0xE00000
	0x035E08EC ADRP X21, 0xB59000
	0x035E08F0 LDRB W8, [X19 + 0x26B]
	0x035E08F4 LDR X21, [X21 + 0x1B8]
	0x035E08F8 TBNZ X8, 0x0, 0x35E0910
	0x035E08FC ADRP X0, 0xB59000
	0x035E0900 LDR X0, [X0 + 0x1B8]
	0x035E0904 BL 0x1C16CF4
	0x035E0908 MOVZ W8, 0x1
	0x035E090C STRB W8, [X19 + 0x26B]
	0x035E0910 LDR X0, [X21]
	0x035E0914 LDR W8, [X0 + 0xE0]
	0x035E0918 CBNZ W8, 0x35E0924
	0x035E091C BL 0x1C16DFC
	0x035E0920 LDR X0, [X21]
	0x035E0924 LDR X8, [X0 + 0xB8]
	0x035E0928 LDR X19, [X8 + 0x10]
	0x035E092C STRB W31, [X31 + 0xC]
	0x035E0930 ADD X1, X31, 0xC
	0x035E0934 MOV X0, X19
	0x035E0938 MOV X2, X31
	0x035E093C BL 0x33DE64C
	0x035E0940 LDR X0, [X21]
	0x035E0944 LDR W8, [X0 + 0xE0]
	0x035E0948 CBNZ W8, 0x35E0954
	0x035E094C BL 0x1C16DFC
	0x035E0950 LDR X0, [X21]
	0x035E0954 LDR X0, [X0 + 0xB8]
	0x035E0958 MOVZ W1, 0x1
	0x035E095C MOV W2, W31
	0x035E0960 MOV X3, X31
	0x035E0964 BL 0x33E7AB4
	0x035E0968 CBZ W0, 0x35E0974
	0x035E096C MOV X20, X31
	0x035E0970 B 0x35E0998
	0x035E0974 LDR X0, [X21]
	0x035E0978 LDR W8, [X0 + 0xE0]
	0x035E097C CBNZ W8, 0x35E0984
	0x035E0980 BL 0x1C16DFC
	0x035E0984 BL 0x35E0834
	0x035E0988 LDR X8, [X21]
	0x035E098C MOV X20, X31
	0x035E0990 LDR X8, [X8 + 0xB8]
	0x035E0994 STR X0, [X8 + 0x8]
	0x035E0998 LDRB W8, [X31 + 0xC]
	0x035E099C CBZ W8, 0x35E09AC
	0x035E09A0 MOV X0, X19
	0x035E09A4 MOV X1, X31
	0x035E09A8 BL 0x33E14E4
	0x035E09AC CBNZ X20, 0x35E09C0
	0x035E09B0 LDP X20, X19, [X31 + 0x20]
	0x035E09B4 LDP X30, X21, [X31 + 0x10]
	0x035E09B8 ADD X31, X31, 0x30
	0x035E09BC RET
	0x035E09C0 MOV X0, X20
	0x035E09C4 BL 0x1C16F18
	0x035E09C8 B 0x35E09D4
	0x035E09CC B 0x35E09D4
	0x035E09D0 B 0x35E09D4
	0x035E09D4 MOV X21, X0
	0x035E09D8 CMP W1, 0x1
	0x035E09DC B.NE 0x35E09F4
	0x035E09E0 MOV X0, X21
	0x035E09E4 BL 0x3EB1AD0
	0x035E09E8 LDR X20, [X0]
	0x035E09EC BL 0x3EB1AE0
	0x035E09F0 B 0x35E0998
	0x035E09F4 MOV X20, X31
	0x035E09F8 B 0x35E0A00
	0x035E09FC MOV X21, X0
	0x035E0A00 LDRB W8, [X31 + 0xC]
	0x035E0A04 CBZ W8, 0x35E0A14
	0x035E0A08 MOV X0, X19
	0x035E0A0C MOV X1, X31
	0x035E0A10 BL 0x33E14E4
	0x035E0A14 CBNZ X20, 0x35E0A20
	0x035E0A18 MOV X0, X21
	0x035E0A1C BL 0x1D2C690
	0x035E0A20 MOV X0, X20
	0x035E0A24 BL 0x1C16F18
	0x035E0A28 BL 0x1990590
	0x035E0A2C STR X30, [X31 - 0x20]!
	0x035E0A30 STP X20, X19, [X31 + 0x10]
	0x035E0A34 ADRP X20, 0xE00000
	0x035E0A38 ADRP X19, 0xB59000
	0x035E0A3C LDRB W8, [X20 + 0x26C]
	0x035E0A40 LDR X19, [X19 + 0x1B8]
	0x035E0A44 TBNZ X8, 0x0, 0x35E0A5C
	0x035E0A48 ADRP X0, 0xB59000
	0x035E0A4C LDR X0, [X0 + 0x1B8]
	0x035E0A50 BL 0x1C16CF4
	0x035E0A54 MOVZ W8, 0x1
	0x035E0A58 STRB W8, [X20 + 0x26C]
	0x035E0A5C LDR X0, [X19]
	0x035E0A60 LDR W8, [X0 + 0xE0]
	0x035E0A64 CBNZ W8, 0x35E0A6C
	0x035E0A68 BL 0x1C16DFC
	0x035E0A6C BL 0x35E08DC
	0x035E0A70 LDR X8, [X19]
	0x035E0A74 LDP X20, X19, [X31 + 0x10]
	0x035E0A78 LDR X8, [X8 + 0xB8]
	0x035E0A7C LDR X0, [X8 + 0x8]
	0x035E0A80 LDR X30, [X31], #0x20
	0x035E0A84 RET
	0x035E0A88 STR X30, [X31 - 0x20]!
	0x035E0A8C STP X20, X19, [X31 + 0x10]
	0x035E0A90 CBZ X1, 0x35E0AE0
	0x035E0A94 LDR X8, [X1 + 0x18]
	0x035E0A98 MOV X19, X1
	0x035E0A9C CBZ X8, 0x35E0AE0
	0x035E0AA0 MOV W20, W2
	0x035E0AA4 TBNZ X2, 0x0, 0x35E0AC4
	0x035E0AA8 BL 0x35E0A2C
	0x035E0AAC CBZ X0, 0x35E0AF0
	0x035E0AB0 LDR X8, [X0]
	0x035E0AB4 MOV X1, X19
	0x035E0AB8 LDP X9, X2, [X8 + 0x178]
	0x035E0ABC BLR X9
	0x035E0AC0 CBNZ X0, 0x35E0AE4
	0x035E0AC4 TBNZ X20, 0x1, 0x35E0AE0
	0x035E0AC8 BL 0x35E0A2C
	0x035E0ACC CBZ X0, 0x35E0AF0
	0x035E0AD0 MOV X1, X19
	0x035E0AD4 LDP X20, X19, [X31 + 0x10]
	0x035E0AD8 LDR X30, [X31], #0x20
	0x035E0ADC B 0x35E0AF4
	0x035E0AE0 MOV X0, X31
	0x035E0AE4 LDP X20, X19, [X31 + 0x10]
	0x035E0AE8 LDR X30, [X31], #0x20
	0x035E0AEC RET
	0x035E0AF0 BL 0x1C16F20
	0x035E0AF4 STR X30, [X31 - 0x30]!
	0x035E0AF8 STP X22, X21, [X31 + 0x10]
	0x035E0AFC STP X20, X19, [X31 + 0x20]
	0x035E0B00 ADRP X21, 0xE00000
	0x035E0B04 ADRP X20, 0xB59000
	0x035E0B08 LDRB W8, [X21 + 0x277]
	0x035E0B0C LDR X20, [X20 + 0x1B0]
	0x035E0B10 MOV X19, X1
	0x035E0B14 TBNZ X8, 0x0, 0x35E0B50
	0x035E0B18 ADRP X0, 0xB13000
	0x035E0B1C LDR X0, [X0 + 0xE00]
	0x035E0B20 BL 0x1C16CF4
	0x035E0B24 ADRP X0, 0xB43000
	0x035E0B28 LDR X0, [X0 + 0x940]
	0x035E0B2C BL 0x1C16CF4
	0x035E0B30 ADRP X0, 0xB59000
	0x035E0B34 LDR X0, [X0 + 0x1C0]
	0x035E0B38 BL 0x1C16CF4
	0x035E0B3C ADRP X0, 0xB59000
	0x035E0B40 LDR X0, [X0 + 0x1B0]
	0x035E0B44 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE01000
	009 Move W8, [X20+608]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xB14000
	016 Move X0, [X0+3584]
	017 Call 0x1C17CF4
	018 Move X0, 0xB3C000
	019 Move X0, [X0+1976]
	020 Call 0x1C17CF4
	021 Move X0, 0xB3C000
	022 Move X0, [X0+1984]
	023 Call 0x1C17CF4
	024 Move X0, 0xB14000
	025 Move X0, [X0+3608]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+608], W8
	029 Compare X19, 0
	030 JumpIfEqual {155}
	031 Move X10, 0xB3C000
	032 Move X8, [X19]
	033 Move X10, [X10+1976]
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Move X1, [X10]
	036 Compare X9, 0
	037 JumpIfEqual {44}
	038 Move X10, [X8+176]
	039 Add X10, X10, 8
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Subtract X9, X9, 1
	043 Add X10, X10, 16
	044 Move X0, X19
	045 Move W2, W31
	046 Call 0x1C5D788
	047 NotImplemented "Instruction LDRSW not yet implemented."
	048 Add X8, X8, X9
	049 Add X0, X8, 312
	050 Move X8, [X0]
	051 Move X1, [X0+8]
	052 Move X24, 0xB14000
	053 Move X24, [X24+3584]
	054 Move X0, X19
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X19, X0
	057 Compare X0, 0
	058 JumpIfEqual {159}
	059 Move X21, 0xB14000
	060 Move X22, 0xB3C000
	061 Move X21, [X21+3608]
	062 Move X22, [X22+1984]
	063 Move W20, W31
	064 Move W23, W31
	065 Move X8, [X19]
	066 Move X1, [X21]
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Compare X9, 0
	069 JumpIfEqual {76}
	070 Move X10, [X8+176]
	071 Add X10, X10, 8
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract X9, X9, 1
	075 Add X10, X10, 16
	076 Move X0, X19
	077 Move W2, W31
	078 Call 0x1C5D788
	079 NotImplemented "Instruction LDRSW not yet implemented."
	080 Add X8, X8, X9
	081 Add X0, X8, 312
	082 Move X8, [X0]
	083 Move X1, [X0+8]
	084 Move X0, X19
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {116}
	090 Move X8, [X19]
	091 Move X1, [X22]
	092 NotImplemented "Instruction LDRH not yet implemented."
	093 Compare X9, 0
	094 JumpIfEqual {101}
	095 Move X10, [X8+176]
	096 Add X10, X10, 8
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Subtract X9, X9, 1
	100 Add X10, X10, 16
	101 Move X0, X19
	102 Move W2, W31
	103 Call 0x1C5D788
	104 NotImplemented "Instruction LDRSW not yet implemented."
	105 Add X8, X8, X9
	106 Add X0, X8, 312
	107 Move X8, [X0]
	108 Move X1, [X0+8]
	109 Move X0, X19
	110 NotImplemented "Instruction BLR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 NotImplemented "Instruction CSEL not yet implemented."
	113 And W31, W23, 1
	114 NotImplemented "Instruction CSEL not yet implemented."
	115 Move W23, 1
	116 Move X21, X31
	117 Compare X19, 0
	118 JumpIfEqual {140}
	119 Move X8, [X19]
	120 Move X1, [X24]
	121 NotImplemented "Instruction LDRH not yet implemented."
	122 Compare X9, 0
	123 JumpIfEqual {130}
	124 Move X10, [X8+176]
	125 Add X10, X10, 8
	126 NotImplemented "Instruction LDUR not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Subtract X9, X9, 1
	129 Add X10, X10, 16
	130 Move X0, X19
	131 Move W2, W31
	132 Call 0x1C5D788
	133 NotImplemented "Instruction LDRSW not yet implemented."
	134 Add X8, X8, X9
	135 Add X0, X8, 312
	136 Move X8, [X0]
	137 Move X1, [X0+8]
	138 Move X0, X19
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Compare X21, 0
	141 JumpIfNotEqual {160}
	142 Move TEMP, X23
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfNotEqual {162}
	146 Move W0, W20
	147 Move X20, [X31+48]
	148 Move X19, [X31+56]
	149 Move X22, [X31+32]
	150 Move X21, [X31+40]
	151 Move X24, [X31+16]
	152 Move X23, [X31+24]
	153 Move X30, [X31+64]
	154 Return X0
	155 Move X0, 0xB1F000
	156 Move X0, [X0+1408]
	157 Call 0x1C17D08
	158 Call Error.ArgumentNull, X0
	159 Call 0x1C17F20
	160 Move X0, X21
	161 Call 0x1C17F18
	162 Call Error.NoElements
	163 Move X19, X0
	164 Move X0, 0xB5A000
	165 Move X0, [X0+320]
	166 Call 0x1C17D08
	167 Move X1, X0
	168 Move X0, X19
	169 Call 0x1C17DEC
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move X22, X0
	172 Move W20, W31
	173 NotImplemented "Instruction CSET not yet implemented."
	174 Move X22, X0
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move X0, X22
	177 Call 0x3EB2AD0
	178 Move X21, [X0]
	179 Call 0x3EB2AE0
	180 Move X21, X31
	181 Move X22, X0
	182 Compare X19, 0
	183 JumpIfEqual {205}
	184 Move X8, [X19]
	185 Move X1, [X24]
	186 NotImplemented "Instruction LDRH not yet implemented."
	187 Compare X9, 0
	188 JumpIfEqual {195}
	189 Move X10, [X8+176]
	190 Add X10, X10, 8
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Subtract X9, X9, 1
	194 Add X10, X10, 16
	195 Move X0, X19
	196 Move W2, W31
	197 Call 0x1C5D788
	198 NotImplemented "Instruction LDRSW not yet implemented."
	199 Add X8, X8, X9
	200 Add X0, X8, 312
	201 Move X8, [X0]
	202 Move X1, [X0+8]
	203 Move X0, X19
	204 NotImplemented "Instruction BLR not yet implemented."
	205 Compare X21, 0
	206 JumpIfNotEqual {209}
	207 Move X0, X22
	208 Call 0x1D2D690
	209 Move X0, X21
	210 Call 0x1C17F18
	211 Call 0x1991590

Method: System.Single Max(System.Collections.Generic.IEnumerable`1<System.Single> source)

Disassembly:
	0x035E0B48 MOVZ W8, 0x1
	0x035E0B4C STRB W8, [X21 + 0x277]
	0x035E0B50 LDR X0, [X20]
	0x035E0B54 ADRP X20, 0xB43000
	0x035E0B58 ADRP X21, 0xB59000
	0x035E0B5C LDR W8, [X0 + 0xE0]
	0x035E0B60 LDR X20, [X20 + 0x940]
	0x035E0B64 LDR X21, [X21 + 0x1C0]
	0x035E0B68 CBNZ W8, 0x35E0B70
	0x035E0B6C BL 0x1C16DFC
	0x035E0B70 ADRP X22, 0xB13000
	0x035E0B74 LDR X22, [X22 + 0xE00]
	0x035E0B78 MOV X0, X19
	0x035E0B7C BL 0x35E13FC
	0x035E0B80 LDR X8, [X20]
	0x035E0B84 MOV X20, X0
	0x035E0B88 MOV X0, X8
	0x035E0B8C BL 0x1C16F10
	0x035E0B90 MOV X1, X31
	0x035E0B94 MOV X2, X31
	0x035E0B98 MOV X19, X0
	0x035E0B9C BL 0x3224CA0
	0x035E0BA0 LDR X0, [X21]
	0x035E0BA4 BL 0x1C16F10
	0x035E0BA8 MOV X21, X0
	0x035E0BAC MOV X1, X20
	0x035E0BB0 MOV X2, X19
	0x035E0BB4 MOV W3, W31
	0x035E0BB8 MOV X4, X31
	0x035E0BBC BL 0x3656130
	0x035E0BC0 MOV X20, X31
	0x035E0BC4 CBZ X19, 0x35E0C20
	0x035E0BC8 LDR X8, [X19]
	0x035E0BCC LDR X1, [X22]
	0x035E0BD0 LDRH W9, [X8 + 0x12E]
	0x035E0BD4 CBZ X9, 0x35E0BF8
	0x035E0BD8 LDR X10, [X8 + 0xB0]
	0x035E0BDC ADD X10, X10, 0x8
	0x035E0BE0 LDUR X11, [X10 - 0x8]
	0x035E0BE4 CMP X11, X1
	0x035E0BE8 B.EQ 0x35E0C08
	0x035E0BEC SUBS X9, X9, 0x1
	0x035E0BF0 ADD X10, X10, 0x10
	0x035E0BF4 B.NE 0x35E0BE0
	0x035E0BF8 MOV X0, X19
	0x035E0BFC MOV W2, W31
	0x035E0C00 BL 0x1C5C788
	0x035E0C04 B 0x35E0C14
	0x035E0C08 LDRSW X9, [X10]
	0x035E0C0C ADD X8, X8, X9, 0x4, LSL
	0x035E0C10 ADD X0, X8, 0x138
	0x035E0C14 LDP X8, X1, [X0]
	0x035E0C18 MOV X0, X19
	0x035E0C1C BLR X8
	0x035E0C20 CBNZ X20, 0x35E0C38
	0x035E0C24 MOV X0, X21
	0x035E0C28 LDP X20, X19, [X31 + 0x20]
	0x035E0C2C LDP X22, X21, [X31 + 0x10]
	0x035E0C30 LDR X30, [X31], #0x30
	0x035E0C34 RET
	0x035E0C38 MOV X0, X20
	0x035E0C3C BL 0x1C16F18
	0x035E0C40 CMP W1, 0x1
	0x035E0C44 MOV X21, X0
	0x035E0C48 B.NE 0x35E0C68
	0x035E0C4C MOV X0, X21
	0x035E0C50 BL 0x3EB1AD0
	0x035E0C54 LDR X20, [X0]
	0x035E0C58 BL 0x3EB1AE0
	0x035E0C5C MOV X21, X31
	0x035E0C60 CBNZ X19, 0x35E0BC8
	0x035E0C64 B 0x35E0C20
	0x035E0C68 MOV X20, X31
	0x035E0C6C B 0x35E0C74
	0x035E0C70 MOV X21, X0
	0x035E0C74 CBZ X19, 0x35E0CD0
	0x035E0C78 LDR X8, [X19]
	0x035E0C7C LDR X1, [X22]
	0x035E0C80 LDRH W9, [X8 + 0x12E]
	0x035E0C84 CBZ X9, 0x35E0CA8
	0x035E0C88 LDR X10, [X8 + 0xB0]
	0x035E0C8C ADD X10, X10, 0x8
	0x035E0C90 LDUR X11, [X10 - 0x8]
	0x035E0C94 CMP X11, X1
	0x035E0C98 B.EQ 0x35E0CB8
	0x035E0C9C SUBS X9, X9, 0x1
	0x035E0CA0 ADD X10, X10, 0x10
	0x035E0CA4 B.NE 0x35E0C90
	0x035E0CA8 MOV X0, X19
	0x035E0CAC MOV W2, W31
	0x035E0CB0 BL 0x1C5C788
	0x035E0CB4 B 0x35E0CC4
	0x035E0CB8 LDRSW X9, [X10]
	0x035E0CBC ADD X8, X8, X9, 0x4, LSL
	0x035E0CC0 ADD X0, X8, 0x138
	0x035E0CC4 LDP X8, X1, [X0]
	0x035E0CC8 MOV X0, X19
	0x035E0CCC BLR X8
	0x035E0CD0 CBNZ X20, 0x35E0CDC
	0x035E0CD4 MOV X0, X21
	0x035E0CD8 BL 0x1D2C690
	0x035E0CDC MOV X0, X20
	0x035E0CE0 BL 0x1C16F18
	0x035E0CE4 BL 0x1990590
	0x035E0CE8 B 0x35E0CEC
	0x035E0CEC STR X30, [X31 - 0x30]!
	0x035E0CF0 STP X22, X21, [X31 + 0x10]
	0x035E0CF4 STP X20, X19, [X31 + 0x20]
	0x035E0CF8 CBZ X1, 0x35E0D64
	0x035E0CFC LDR X8, [X1 + 0x18]
	0x035E0D00 MOV X21, X1
	0x035E0D04 CBZ X8, 0x35E0D64
	0x035E0D08 MOV W22, W4
	0x035E0D0C MOV W19, W3
	0x035E0D10 MOV X20, X2
	0x035E0D14 TBNZ X4, 0x0, 0x35E0D3C
	0x035E0D18 BL 0x35E0A2C
	0x035E0D1C CBZ X0, 0x35E0D78
	0x035E0D20 LDR X8, [X0]
	0x035E0D24 MOV X1, X21
	0x035E0D28 MOV X2, X20
	0x035E0D2C MOV W3, W19
	0x035E0D30 LDP X9, X4, [X8 + 0x188]
	0x035E0D34 BLR X9
	0x035E0D38 CBNZ X0, 0x35E0D68
	0x035E0D3C TBNZ X22, 0x1, 0x35E0D64
	0x035E0D40 BL 0x35E0A2C
	0x035E0D44 CBZ X0, 0x35E0D78
	0x035E0D48 MOV X1, X21
	0x035E0D4C MOV X2, X20
	0x035E0D50 MOV W3, W19
	0x035E0D54 LDP X20, X19, [X31 + 0x20]
	0x035E0D58 LDP X22, X21, [X31 + 0x10]
	0x035E0D5C LDR X30, [X31], #0x30
	0x035E0D60 B 0x35E0D7C
	0x035E0D64 MOV X0, X31
	0x035E0D68 LDP X20, X19, [X31 + 0x20]
	0x035E0D6C LDP X22, X21, [X31 + 0x10]
	0x035E0D70 LDR X30, [X31], #0x30
	0x035E0D74 RET
	0x035E0D78 BL 0x1C16F20
	0x035E0D7C STP X30, X23, [X31 - 0x30]!
	0x035E0D80 STP X22, X21, [X31 + 0x10]
	0x035E0D84 STP X20, X19, [X31 + 0x20]
	0x035E0D88 ADRP X22, 0xE00000
	0x035E0D8C ADRP X23, 0xB59000
	0x035E0D90 LDRB W8, [X22 + 0x278]
	0x035E0D94 LDR X23, [X23 + 0x1C0]
	0x035E0D98 MOV W19, W3
	0x035E0D9C MOV X20, X2
	0x035E0DA0 MOV X21, X1
	0x035E0DA4 TBNZ X8, 0x0, 0x35E0DBC
	0x035E0DA8 ADRP X0, 0xB59000
	0x035E0DAC LDR X0, [X0 + 0x1C0]
	0x035E0DB0 BL 0x1C16CF4
	0x035E0DB4 MOVZ W8, 0x1
	0x035E0DB8 STRB W8, [X22 + 0x278]
	0x035E0DBC LDR X0, [X23]
	0x035E0DC0 BL 0x1C16F10
	0x035E0DC4 MOV X1, X21
	0x035E0DC8 MOV X2, X20
	0x035E0DCC MOV W3, W19
	0x035E0DD0 MOV X4, X31
	0x035E0DD4 MOV X22, X0
	0x035E0DD8 BL 0x3656130
	0x035E0DDC MOV X0, X22
	0x035E0DE0 LDP X20, X19, [X31 + 0x20]
	0x035E0DE4 LDP X22, X21, [X31 + 0x10]
	0x035E0DE8 LDP X30, X23, [X31], #0x30
	0x035E0DEC RET
	0x035E0DF0 B 0x35E0DF4
	0x035E0DF4 STP X30, X21, [X31 - 0x20]!
	0x035E0DF8 STP X20, X19, [X31 + 0x10]
	0x035E0DFC ADRP X21, 0xE00000
	0x035E0E00 LDRB W8, [X21 + 0x26D]
	0x035E0E04 MOV W20, W2
	0x035E0E08 MOV X19, X1
	0x035E0E0C TBNZ X8, 0x0, 0x35E0E24
	0x035E0E10 ADRP X0, 0xB59000
	0x035E0E14 LDR X0, [X0 + 0x1C8]
	0x035E0E18 BL 0x1C16CF4
	0x035E0E1C MOVZ W8, 0x1
	0x035E0E20 STRB W8, [X21 + 0x26D]
	0x035E0E24 CBZ X19, 0x35E0F00
	0x035E0E28 LDR X0, [X19 + 0x10]
	0x035E0E2C CBZ X0, 0x35E0EF4
	0x035E0E30 ADRP X21, 0xB59000
	0x035E0E34 LDR X21, [X21 + 0x1C8]
	0x035E0E38 LDR X8, [X0]
	0x035E0E3C LDR X9, [X21]
	0x035E0E40 LDRB W11, [X8 + 0x130]
	0x035E0E44 LDRB W10, [X9 + 0x130]
	0x035E0E48 CMP W11, W10
	0x035E0E4C B.CC 0x35E0E64
	0x035E0E50 LDR X11, [X8 + 0xC8]
	0x035E0E54 ADD X10, X11, X10, 0x3, LSL
	0x035E0E58 LDUR X10, [X10 - 0x8]
	0x035E0E5C CMP X10, X9
	0x035E0E60 B.EQ 0x35E0EBC
	0x035E0E64 TBNZ X20, 0x0, 0x35E0E84
	0x035E0E68 BL 0x35E0A2C
	0x035E0E6C CBZ X0, 0x35E0F00
	0x035E0E70 LDR X8, [X0]
	0x035E0E74 MOV X1, X19
	0x035E0E78 LDP X9, X2, [X8 + 0x198]
	0x035E0E7C BLR X9
	0x035E0E80 CBNZ X0, 0x35E0EF4
	0x035E0E84 TBNZ X20, 0x1, 0x35E0EB4
	0x035E0E88 BL 0x35E0A2C
	0x035E0E8C LDR X8, [X19]
	0x035E0E90 MOV X20, X0
	0x035E0E94 MOV X0, X19
	0x035E0E98 LDP X9, X1, [X8 + 0x1F8]
	0x035E0E9C BLR X9

ISIL:
	001 Move [X31-80], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xE01000
	011 Move W8, [X20+609]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xB14000
	018 Move X0, [X0+3584]
	019 Call 0x1C17CF4
	020 Move X0, 0xB5A000
	021 Move X0, [X0+296]
	022 Call 0x1C17CF4
	023 Move X0, 0xB5A000
	024 Move X0, [X0+304]
	025 Call 0x1C17CF4
	026 Move X0, 0xB14000
	027 Move X0, [X0+3608]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+609], W8
	031 Compare X19, 0
	032 JumpIfEqual {172}
	033 Move X10, 0xB5A000
	034 Move X8, [X19]
	035 Move X10, [X10+296]
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Move X1, [X10]
	038 Compare X9, 0
	039 JumpIfEqual {46}
	040 Move X10, [X8+176]
	041 Add X10, X10, 8
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Subtract X9, X9, 1
	045 Add X10, X10, 16
	046 Move X0, X19
	047 Move W2, W31
	048 Call 0x1C5D788
	049 NotImplemented "Instruction LDRSW not yet implemented."
	050 Add X8, X8, X9
	051 Add X0, X8, 312
	052 Move X8, [X0]
	053 Move X1, [X0+8]
	054 Move X20, 0xB14000
	055 Move X23, 0xB5A000
	056 Move X22, 0xB14000
	057 Move X20, [X20+3608]
	058 Move X23, [X23+304]
	059 Move X22, [X22+3584]
	060 Move X0, X19
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move X19, X0
	063 Move W21, W31
	064 Move S0, W31
	065 Move X24, 0x7FF00000
	066 Move V8, V0
	067 NotImplemented "Instruction FCVT not yet implemented."
	068 Move X8, D0
	069 And X25, X8, 0x7FFFFFFF
	070 Compare X19, 0
	071 JumpIfEqual {171}
	072 Move X8, [X19]
	073 Move X1, [X20]
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Compare X9, 0
	076 JumpIfEqual {83}
	077 Move X10, [X8+176]
	078 Add X10, X10, 8
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Subtract X9, X9, 1
	082 Add X10, X10, 16
	083 Move X0, X19
	084 Move W2, W31
	085 Call 0x1C5D788
	086 NotImplemented "Instruction LDRSW not yet implemented."
	087 Add X8, X8, X9
	088 Add X0, X8, 312
	089 Move X8, [X0]
	090 Move X1, [X0+8]
	091 Move X0, X19
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {126}
	097 Move X8, [X19]
	098 Move X1, [X23]
	099 NotImplemented "Instruction LDRH not yet implemented."
	100 Compare X9, 0
	101 JumpIfEqual {108}
	102 Move X10, [X8+176]
	103 Add X10, X10, 8
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Subtract X9, X9, 1
	107 Add X10, X10, 16
	108 Move X0, X19
	109 Move W2, W31
	110 Call 0x1C5D788
	111 NotImplemented "Instruction LDRSW not yet implemented."
	112 Add X8, X8, X9
	113 Add X0, X8, 312
	114 Move X8, [X0]
	115 Move X1, [X0+8]
	116 Move X0, X19
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Xor W8, W21, 1
	119 NotImplemented "Instruction FCMP not yet implemented."
	120 Move W21, 1
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move TEMP, X8
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {70}
	126 Move X20, X31
	127 Move W23, 9
	128 Compare X19, 0
	129 JumpIfEqual {151}
	130 Move X8, [X19]
	131 Move X1, [X22]
	132 NotImplemented "Instruction LDRH not yet implemented."
	133 Compare X9, 0
	134 JumpIfEqual {141}
	135 Move X10, [X8+176]
	136 Add X10, X10, 8
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Subtract X9, X9, 1
	140 Add X10, X10, 16
	141 Move X0, X19
	142 Move W2, W31
	143 Call 0x1C5D788
	144 NotImplemented "Instruction LDRSW not yet implemented."
	145 Add X8, X8, X9
	146 Add X0, X8, 312
	147 Move X8, [X0]
	148 Move X1, [X0+8]
	149 Move X0, X19
	150 NotImplemented "Instruction BLR not yet implemented."
	151 Compare X20, 0
	152 JumpIfNotEqual {176}
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Compare W23, 0
	155 JumpIfNotEqual {160}
	156 Move TEMP, X21
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfNotEqual {178}
	160 Move X20, [X31+64]
	161 Move X19, [X31+72]
	162 Move X22, [X31+48]
	163 Move X21, [X31+56]
	164 Move X24, [X31+32]
	165 Move X23, [X31+40]
	166 Move X30, [X31+16]
	167 Move X25, [X31+24]
	168 Move V0, V8
	169 Move V8, [X31+80]
	170 Return V0
	171 Call 0x1C17F20
	172 Move X0, 0xB1F000
	173 Move X0, [X0+1408]
	174 Call 0x1C17D08
	175 Call Error.ArgumentNull, X0
	176 Move X0, X20
	177 Call 0x1C17F18
	178 Call Error.NoElements
	179 Move X19, X0
	180 Move X0, 0xB5A000
	181 Move X0, [X0+328]
	182 Call 0x1C17D08
	183 Move X1, X0
	184 Move X0, X19
	185 Call 0x1C17DEC
	186 Move W21, W31
	187 Move S8, W31
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Call 0x3EB2AD0
	190 Move X20, [X0]
	191 Call 0x3EB2AE0
	192 Move W23, W31
	193 Compare X19, 0
	194 JumpIfNotEqual {130}
	195 Move [X31+8], X0
	196 Move X20, X31
	197 Move [X31+8], X0
	198 Compare X19, 0
	199 JumpIfEqual {221}
	200 Move X8, [X19]
	201 Move X1, [X22]
	202 NotImplemented "Instruction LDRH not yet implemented."
	203 Compare X9, 0
	204 JumpIfEqual {211}
	205 Move X10, [X8+176]
	206 Add X10, X10, 8
	207 NotImplemented "Instruction LDUR not yet implemented."
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Subtract X9, X9, 1
	210 Add X10, X10, 16
	211 Move X0, X19
	212 Move W2, W31
	213 Call 0x1C5D788
	214 NotImplemented "Instruction LDRSW not yet implemented."
	215 Add X8, X8, X9
	216 Add X0, X8, 312
	217 Move X8, [X0]
	218 Move X1, [X0+8]
	219 Move X0, X19
	220 NotImplemented "Instruction BLR not yet implemented."
	221 Compare X20, 0
	222 JumpIfNotEqual {225}
	223 Move X0, [X31+8]
	224 Call 0x1D2D690
	225 Move X0, X20
	226 Call 0x1C17F18
	227 Call 0x1991590

Method: TSource Max(System.Collections.Generic.IEnumerable`1<TSource> source)

Disassembly:
	0x021C9648 MOV X20, X1
	0x021C964C MOV X21, X0
	0x021C9650 CBNZ X8, 0x21C9660
	0x021C9654 MOV X0, X19
	0x021C9658 BL 0x1C5C6E0
	0x021C965C LDR X8, [X19 + 0x38]
	0x021C9660 LDR X2, [X8 + 0x10]
	0x021C9664 MOV X0, X21
	0x021C9668 MOV X1, X20
	0x021C966C BL 0x21CAFF8
	0x021C9670 LDR X8, [X19 + 0x38]
	0x021C9674 LDP X20, X19, [X31 + 0x10]
	0x021C9678 LDR X1, [X8 + 0x20]
	0x021C967C LDP X30, X21, [X31], #0x20
	0x021C9680 B 0x21C89D4
	0x021C9684 STP X29, X30, [X31 - 0x50]!
	0x021C9688 STR X25, [X31 + 0x10]
	0x021C968C STP X24, X23, [X31 + 0x20]
	0x021C9690 STP X22, X21, [X31 + 0x30]
	0x021C9694 STP X20, X19, [X31 + 0x40]
	0x021C9698 ADD X29, X31, 0x0
	0x021C969C SUB X31, X31, 0x20
	0x021C96A0 MRS X25, 0xC000
	0x021C96A4 LDR X8, [X25 + 0x28]
	0x021C96A8 MOV X20, X3
	0x021C96AC MOV X19, X2
	0x021C96B0 MOV X21, X1
	0x021C96B4 STUR X8, [X29 - 0x8]
	0x021C96B8 LDR X8, [X3 + 0x38]
	0x021C96BC MOV X22, X0
	0x021C96C0 CBNZ X8, 0x21C96D0
	0x021C96C4 MOV X0, X20
	0x021C96C8 BL 0x1C5C6E0
	0x021C96CC LDR X8, [X20 + 0x38]
	0x021C96D0 LDR X9, [X8 + 0x28]
	0x021C96D4 LDR W23, [X9 + 0xFC]
	0x021C96D8 ADD X9, X31, 0x0
	0x021C96DC ADD X10, X23, 0xF
	0x021C96E0 AND X10, X10, 0x1FFFFFFFF
	0x021C96E4 SUB X24, X9, X10
	0x021C96E8 ADD X31, X24, 0x0
	0x021C96EC LDR X2, [X8 + 0x10]
	0x021C96F0 MOV X0, X22
	0x021C96F4 MOV X1, X21
	0x021C96F8 LDR X8, [X2]
	0x021C96FC BLR X8
	0x021C9700 LDR X8, [X20 + 0x38]
	0x021C9704 SUB X3, X29, 0x18
	0x021C9708 MOV X2, X31
	0x021C970C MOV X4, X24
	0x021C9710 LDR X1, [X8 + 0x20]
	0x021C9714 LDR X8, [X1]
	0x021C9718 STP X0, X24, [X29 - 0x18]
	0x021C971C LDR X9, [X1 + 0x10]
	0x021C9720 MOV X0, X8
	0x021C9724 BLR X9
	0x021C9728 MOV X0, X19
	0x021C972C MOV X1, X24
	0x021C9730 MOV X2, X23
	0x021C9734 BL 0x3EB1AC0
	0x021C9738 LDR X8, [X25 + 0x28]
	0x021C973C LDUR X9, [X29 - 0x8]
	0x021C9740 CMP X8, X9
	0x021C9744 B.NE 0x21C9764
	0x021C9748 ADD X31, X29, 0x0
	0x021C974C LDP X20, X19, [X31 + 0x40]
	0x021C9750 LDP X22, X21, [X31 + 0x30]
	0x021C9754 LDP X24, X23, [X31 + 0x20]
	0x021C9758 LDR X25, [X31 + 0x10]
	0x021C975C LDP X29, X30, [X31], #0x50
	0x021C9760 RET
	0x021C9764 BL 0x3EB1B20
	0x021C9768 STP X30, X21, [X31 - 0x20]!
	0x021C976C STP X20, X19, [X31 + 0x10]
	0x021C9770 LDR X8, [X2 + 0x38]
	0x021C9774 MOV X19, X1
	0x021C9778 MOV X20, X0
	0x021C977C CBNZ X8, 0x21C9790
	0x021C9780 MOV X0, X2
	0x021C9784 MOV X21, X2
	0x021C9788 BL 0x1C5C6E0
	0x021C978C LDR X8, [X21 + 0x38]
	0x021C9790 LDR X2, [X8 + 0x10]
	0x021C9794 MOV X0, X20
	0x021C9798 MOV X1, X19
	0x021C979C BL 0x21CF518
	0x021C97A0 LDP X20, X19, [X31 + 0x10]
	0x021C97A4 MOV X1, X31
	0x021C97A8 LDP X30, X21, [X31], #0x20
	0x021C97AC B 0x35DF4BC
	0x021C97B0 STP X30, X21, [X31 - 0x20]!
	0x021C97B4 STP X20, X19, [X31 + 0x10]
	0x021C97B8 LDR X8, [X2 + 0x38]
	0x021C97BC MOV X19, X1
	0x021C97C0 MOV X20, X0
	0x021C97C4 CBNZ X8, 0x21C97D8
	0x021C97C8 MOV X0, X2
	0x021C97CC MOV X21, X2
	0x021C97D0 BL 0x1C5C6E0
	0x021C97D4 LDR X8, [X21 + 0x38]
	0x021C97D8 LDR X2, [X8 + 0x10]
	0x021C97DC MOV X0, X20
	0x021C97E0 MOV X1, X19
	0x021C97E4 LDR X8, [X2]
	0x021C97E8 BLR X8
	0x021C97EC LDP X20, X19, [X31 + 0x10]
	0x021C97F0 MOV X1, X31
	0x021C97F4 LDP X30, X21, [X31], #0x20
	0x021C97F8 B 0x35DF4BC
	0x021C97FC STP X30, X21, [X31 - 0x20]!
	0x021C9800 STP X20, X19, [X31 + 0x10]
	0x021C9804 LDR X8, [X2 + 0x38]
	0x021C9808 MOV X21, X2
	0x021C980C MOV X19, X1
	0x021C9810 MOV X20, X0
	0x021C9814 CBNZ X8, 0x21C9824
	0x021C9818 MOV X0, X21
	0x021C981C BL 0x1C5C6E0
	0x021C9820 LDR X8, [X21 + 0x38]
	0x021C9824 LDR X0, [X8 + 0x10]
	0x021C9828 LDRB W8, [X0 + 0x135]
	0x021C982C TBNZ X8, 0x0, 0x21C9834
	0x021C9830 BL 0x1C5C684
	0x021C9834 BL 0x1C16F10
	0x021C9838 LDR X8, [X21 + 0x38]
	0x021C983C MOV X1, X20
	0x021C9840 MOV X2, X19
	0x021C9844 MOV X3, X31
	0x021C9848 LDR X5, [X8 + 0x18]
	0x021C984C MOV W4, W31
	0x021C9850 MOV X21, X0
	0x021C9854 BL 0x249D5DC
	0x021C9858 LDP X20, X19, [X31 + 0x10]
	0x021C985C MOV X0, X21
	0x021C9860 LDP X30, X21, [X31], #0x20
	0x021C9864 RET
	0x021C9868 STP X30, X21, [X31 - 0x20]!
	0x021C986C STP X20, X19, [X31 + 0x10]
	0x021C9870 LDR X8, [X2 + 0x38]
	0x021C9874 MOV X21, X2
	0x021C9878 MOV X19, X1
	0x021C987C MOV X20, X0
	0x021C9880 CBNZ X8, 0x21C9890
	0x021C9884 MOV X0, X21
	0x021C9888 BL 0x1C5C6E0
	0x021C988C LDR X8, [X21 + 0x38]
	0x021C9890 LDR X0, [X8 + 0x10]
	0x021C9894 LDRB W8, [X0 + 0x135]
	0x021C9898 TBNZ X8, 0x0, 0x21C98A0
	0x021C989C BL 0x1C5C684
	0x021C98A0 BL 0x1C16F10
	0x021C98A4 LDR X8, [X21 + 0x38]
	0x021C98A8 MOV X1, X20
	0x021C98AC MOV X2, X19
	0x021C98B0 MOV X3, X31
	0x021C98B4 LDR X5, [X8 + 0x18]
	0x021C98B8 MOV W4, W31
	0x021C98BC MOV X21, X0
	0x021C98C0 BL 0x249D728
	0x021C98C4 LDP X20, X19, [X31 + 0x10]
	0x021C98C8 MOV X0, X21
	0x021C98CC LDP X30, X21, [X31], #0x20
	0x021C98D0 RET
	0x021C98D4 STP X30, X21, [X31 - 0x20]!
	0x021C98D8 STP X20, X19, [X31 + 0x10]
	0x021C98DC LDR X8, [X2 + 0x38]
	0x021C98E0 MOV X21, X2
	0x021C98E4 MOV X19, X1
	0x021C98E8 MOV X20, X0
	0x021C98EC CBNZ X8, 0x21C98FC
	0x021C98F0 MOV X0, X21
	0x021C98F4 BL 0x1C5C6E0
	0x021C98F8 LDR X8, [X21 + 0x38]
	0x021C98FC LDR X0, [X8 + 0x10]
	0x021C9900 LDRB W8, [X0 + 0x135]
	0x021C9904 TBNZ X8, 0x0, 0x21C990C
	0x021C9908 BL 0x1C5C684
	0x021C990C BL 0x1C16F10
	0x021C9910 LDR X8, [X21 + 0x38]
	0x021C9914 MOV X1, X20
	0x021C9918 MOV X2, X19
	0x021C991C MOV X3, X31
	0x021C9920 LDR X5, [X8 + 0x18]
	0x021C9924 MOV W4, W31
	0x021C9928 MOV X21, X0
	0x021C992C BL 0x249D874
	0x021C9930 LDP X20, X19, [X31 + 0x10]
	0x021C9934 MOV X0, X21
	0x021C9938 LDP X30, X21, [X31], #0x20
	0x021C993C RET
	0x021C9940 STP X30, X21, [X31 - 0x20]!
	0x021C9944 STP X20, X19, [X31 + 0x10]
	0x021C9948 LDR X8, [X2 + 0x38]
	0x021C994C MOV X21, X2
	0x021C9950 MOV X19, X1
	0x021C9954 MOV X20, X0
	0x021C9958 CBNZ X8, 0x21C9968
	0x021C995C MOV X0, X21
	0x021C9960 BL 0x1C5C6E0
	0x021C9964 LDR X8, [X21 + 0x38]
	0x021C9968 LDR X0, [X8 + 0x10]
	0x021C996C LDRB W8, [X0 + 0x135]
	0x021C9970 TBNZ X8, 0x0, 0x21C9978
	0x021C9974 BL 0x1C5C684
	0x021C9978 BL 0x1C16F10
	0x021C997C LDR X8, [X21 + 0x38]
	0x021C9980 MOV X1, X20
	0x021C9984 MOV X2, X19
	0x021C9988 MOV X3, X31
	0x021C998C LDR X5, [X8 + 0x18]
	0x021C9990 MOV W4, W31
	0x021C9994 MOV X21, X0
	0x021C9998 BL 0x249D9C0
	0x021C999C LDP X20, X19, [X31 + 0x10]
	0x021C99A0 MOV X0, X21
	0x021C99A4 LDP X30, X21, [X31], #0x20
	0x021C99A8 RET
	0x021C99AC STP X30, X21, [X31 - 0x20]!
	0x021C99B0 STP X20, X19, [X31 + 0x10]
	0x021C99B4 LDR X8, [X2 + 0x38]
	0x021C99B8 MOV X21, X2
	0x021C99BC MOV X19, X1
	0x021C99C0 MOV X20, X0
	0x021C99C4 CBNZ X8, 0x21C99D4
	0x021C99C8 MOV X0, X21
	0x021C99CC BL 0x1C5C6E0
	0x021C99D0 LDR X8, [X21 + 0x38]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X8, [X1+56]
	010 Move X19, X1
	011 Move X20, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {25}
	014 Move X0, 0x1F2B000
	015 Move X0, [X0+3584]
	016 Call 0x1C17CF4
	017 Move X0, 0x1F2B000
	018 Move X0, [X0+3608]
	019 Call 0x1C17CF4
	020 Move X8, [X19+56]
	021 Compare X8, 0
	022 JumpIfNotEqual {25}
	023 Move X0, X19
	024 Call 0x1C5D6E0
	025 Compare X20, 0
	026 JumpIfEqual {190}
	027 Move X8, [X19+56]
	028 Move X0, [X8+8]
	029 Call Comparer`1<Int16>.get_Default
	030 Move X8, [X19+56]
	031 Move X22, X0
	032 Move X1, [X8]
	033 Move W8, [X1+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {41}
	038 Move X0, X1
	039 Call 0x1C5D684
	040 Move X1, X0
	041 Move X8, [X20]
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move X0, X20
	052 Move W2, W31
	053 Call 0x1C5D788
	054 NotImplemented "Instruction LDRSW not yet implemented."
	055 Add X8, X8, X9
	056 Add X0, X8, 312
	057 Move X8, [X0]
	058 Move X1, [X0+8]
	059 Move X0, X20
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move X20, X0
	062 Compare X0, 0
	063 JumpIfEqual {195}
	064 Move X25, 0x1F2B000
	065 Move X25, [X25+3608]
	066 Move W10, W31
	067 Move W23, W31
	068 Move X8, [X20]
	069 Move X1, [X25]
	070 Move W21, W23
	071 Move W24, W10
	072 NotImplemented "Instruction LDRH not yet implemented."
	073 Compare X9, 0
	074 JumpIfEqual {81}
	075 Move X10, [X8+176]
	076 Add X10, X10, 8
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Subtract X9, X9, 1
	080 Add X10, X10, 16
	081 Move X0, X20
	082 Move W2, W31
	083 Call 0x1C5D788
	084 NotImplemented "Instruction LDRSW not yet implemented."
	085 Add X8, X8, X9
	086 Add X0, X8, 312
	087 Move X8, [X0]
	088 Move X1, [X0+8]
	089 Move X0, X20
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {143}
	095 Move X8, [X19+56]
	096 Move X1, [X8+48]
	097 Move W8, [X1+309]
	098 Move TEMP, X8
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfEqual {105}
	102 Move X0, X1
	103 Call 0x1C5D684
	104 Move X1, X0
	105 Move X8, [X20]
	106 NotImplemented "Instruction LDRH not yet implemented."
	107 Compare X9, 0
	108 JumpIfEqual {115}
	109 Move X10, [X8+176]
	110 Add X10, X10, 8
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Subtract X9, X9, 1
	114 Add X10, X10, 16
	115 Move X0, X20
	116 Move W2, W31
	117 Call 0x1C5D788
	118 NotImplemented "Instruction LDRSW not yet implemented."
	119 Add X8, X8, X9
	120 Add X0, X8, 312
	121 Move X8, [X0]
	122 Move X1, [X0+8]
	123 Move X0, X20
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move W23, W0
	126 Move W10, 1
	127 Move TEMP, X24
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfNotEqual {68}
	131 Compare X22, 0
	132 JumpIfEqual {189}
	133 Move X8, [X22]
	134 Move X9, [X8+408]
	135 Move X3, [X8+416]
	136 Move X0, X22
	137 Move W1, W23
	138 Move W2, W21
	139 NotImplemented "Instruction BLR not yet implemented."
	140 NotImplemented "Instruction CMP not yet implemented."
	141 NotImplemented "Instruction CSEL not yet implemented."
	142 Move W10, 1
	143 Move X22, X31
	144 Move W23, 13
	145 Compare X20, 0
	146 JumpIfEqual {170}
	147 Move X10, 0x1F2B000
	148 Move X8, [X20]
	149 Move X10, [X10+3584]
	150 NotImplemented "Instruction LDRH not yet implemented."
	151 Move X1, [X10]
	152 Compare X9, 0
	153 JumpIfEqual {160}
	154 Move X10, [X8+176]
	155 Add X10, X10, 8
	156 NotImplemented "Instruction LDUR not yet implemented."
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Subtract X9, X9, 1
	159 Add X10, X10, 16
	160 Move X0, X20
	161 Move W2, W31
	162 Call 0x1C5D788
	163 NotImplemented "Instruction LDRSW not yet implemented."
	164 Add X8, X8, X9
	165 Add X0, X8, 312
	166 Move X8, [X0]
	167 Move X1, [X0+8]
	168 Move X0, X20
	169 NotImplemented "Instruction BLR not yet implemented."
	170 Compare X22, 0
	171 JumpIfNotEqual {196}
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Compare W23, 0
	174 JumpIfNotEqual {179}
	175 Move TEMP, X24
	176 And TEMP, TEMP, 1
	177 Compare TEMP, 1
	178 JumpIfNotEqual {198}
	179 Move W0, W21
	180 Move X20, [X31+48]
	181 Move X19, [X31+56]
	182 Move X22, [X31+32]
	183 Move X21, [X31+40]
	184 Move X24, [X31+16]
	185 Move X23, [X31+24]
	186 Move X30, [X31+64]
	187 Move X25, [X31+72]
	188 Return X0
	189 Call 0x1C17F20
	190 Move X0, 0x1F36000
	191 Move X0, [X0+1408]
	192 Call 0x1C17D08
	193 Move X1, X31
	194 Call Error.ArgumentNull, X0
	195 Call 0x1C17F20
	196 Move X0, X22
	197 Call 0x1C17F18
	198 Move X0, X31
	199 Call Error.NoElements
	200 Move X1, X19
	201 Call 0x1C17DEC
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move W21, W31
	204 NotImplemented "Instruction CSET not yet implemented."
	205 Move W24, 1
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Call 0x3EB2AD0
	208 Move X22, [X0]
	209 Call 0x3EB2AE0
	210 Move W23, W31
	211 Compare X20, 0
	212 JumpIfNotEqual {147}
	213 Move X19, X0
	214 Move X22, X31
	215 Move X19, X0
	216 Compare X20, 0
	217 JumpIfEqual {241}
	218 Move X10, 0x1F2B000
	219 Move X8, [X20]
	220 Move X10, [X10+3584]
	221 NotImplemented "Instruction LDRH not yet implemented."
	222 Move X1, [X10]
	223 Compare X9, 0
	224 JumpIfEqual {231}
	225 Move X10, [X8+176]
	226 Add X10, X10, 8
	227 NotImplemented "Instruction LDUR not yet implemented."
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Subtract X9, X9, 1
	230 Add X10, X10, 16
	231 Move X0, X20
	232 Move W2, W31
	233 Call 0x1C5D788
	234 NotImplemented "Instruction LDRSW not yet implemented."
	235 Add X8, X8, X9
	236 Add X0, X8, 312
	237 Move X8, [X0]
	238 Move X1, [X0+8]
	239 Move X0, X20
	240 NotImplemented "Instruction BLR not yet implemented."
	241 Compare X22, 0
	242 JumpIfNotEqual {245}
	243 Move X0, X19
	244 Call 0x1D2D690
	245 Move X0, X22
	246 Call 0x1C17F18
	247 Call 0x1991590

Method: System.Int32 Max(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource, System.Int32> selector)

Disassembly:
	0x021CA5A4 LDR X10, [X21 + 0x38]
	0x021CA5A8 LDR X1, [X10 + 0x10]
	0x021CA5AC LDRB W10, [X1 + 0x135]
	0x021CA5B0 TBNZ X10, 0x0, 0x21CA5C8
	0x021CA5B4 MOV X0, X1
	0x021CA5B8 BL 0x1C5C684
	0x021CA5BC LDR X8, [X20]
	0x021CA5C0 MOV X1, X0
	0x021CA5C4 LDRB W9, [X8 + 0x130]
	0x021CA5C8 LDRB W10, [X1 + 0x130]
	0x021CA5CC CMP W9, W10
	0x021CA5D0 B.CC 0x21CA708
	0x021CA5D4 LDR X11, [X8 + 0xC8]
	0x021CA5D8 ADD X10, X11, X10, 0x3, LSL
	0x021CA5DC LDUR X10, [X10 - 0x8]
	0x021CA5E0 CMP X10, X1
	0x021CA5E4 B.NE 0x21CA708
	0x021CA5E8 LDR X10, [X21 + 0x38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {14}
	010 Move X0, X2
	011 Move X21, X2
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X2, [X8+16]
	015 Move X0, X20
	016 Move X1, X19
	017 Call Enumerable.Select, X0, X1
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X1, X31
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Call Enumerable.Max, X0
	024 Return X0

Method: TResult Max(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource, TResult> selector)

Disassembly:
	0x021CA638 LDR X0, [X8 + 0x140]
	0x021CA63C BL 0x1C16DF8
	0x021CA640 MOV X2, X0
	0x021CA644 LDR X3, [X0 + 0x8]
	0x021CA648 MOV X0, X20
	0x021CA64C MOV X1, X19
	0x021CA650 LDP X20, X19, [X31 + 0x20]
	0x021CA654 LDP X22, X21, [X31 + 0x10]
	0x021CA658 LDP X30, X23, [X31], #0x30
	0x021CA65C BR X3
	0x021CA660 LDR X8, [X21 + 0x38]
	0x021CA664 LDR X0, [X8 + 0x50]
	0x021CA668 LDRB W8, [X0 + 0x135]
	0x021CA66C TBNZ X8, 0x0, 0x21CA674
	0x021CA670 BL 0x1C5C684
	0x021CA674 BL 0x1C16F10
	0x021CA678 LDR X8, [X21 + 0x38]
	0x021CA67C MOV X22, X0
	0x021CA680 LDR X1, [X8 + 0x48]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X2
	007 Move X20, X1
	008 Move X21, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {14}
	011 Move X0, X19
	012 Call 0x1C5D6E0
	013 Move X8, [X19+56]
	014 Move X2, [X8+16]
	015 Move X0, X21
	016 Move X1, X20
	017 Call Enumerable.Select, X0, X1
	018 Move X8, [X19+56]
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X1, [X8+32]
	022 Move X30, [X31+32]
	023 Move X21, [X31+40]
	024 Call Enumerable.Max, X0
	025 Return X0

Method: System.Single Average(System.Collections.Generic.IEnumerable`1<System.Single> source)

Disassembly:
	0x035E0EA0 CBZ X20, 0x35E0F00
	0x035E0EA4 LDP X20, X19, [X31 + 0x10]
	0x035E0EA8 MOV X1, X0
	0x035E0EAC LDP X30, X21, [X31], #0x20
	0x035E0EB0 B 0x35E0AF4
	0x035E0EB4 MOV X0, X31
	0x035E0EB8 B 0x35E0EF4
	0x035E0EBC LDP X9, X1, [X8 + 0x198]
	0x035E0EC0 BLR X9
	0x035E0EC4 CBZ X0, 0x35E0EF4
	0x035E0EC8 LDR X8, [X0]
	0x035E0ECC LDR X1, [X21]
	0x035E0ED0 LDRB W10, [X8 + 0x130]
	0x035E0ED4 LDRB W9, [X1 + 0x130]
	0x035E0ED8 CMP W10, W9
	0x035E0EDC B.CC 0x35E0F04
	0x035E0EE0 LDR X8, [X8 + 0xC8]
	0x035E0EE4 ADD X8, X8, X9, 0x3, LSL
	0x035E0EE8 LDUR X8, [X8 - 0x8]
	0x035E0EEC CMP X8, X1
	0x035E0EF0 B.NE 0x35E0F04
	0x035E0EF4 LDP X20, X19, [X31 + 0x10]
	0x035E0EF8 LDP X30, X21, [X31], #0x20
	0x035E0EFC RET
	0x035E0F00 BL 0x1C16F20
	0x035E0F04 BL 0x1C171E0
	0x035E0F08 MOV X1, X31
	0x035E0F0C B 0x33BDD8C
	0x035E0F10 STP X30, X21, [X31 - 0x20]!
	0x035E0F14 STP X20, X19, [X31 + 0x10]
	0x035E0F18 ADRP X19, 0xE00000
	0x035E0F1C ADRP X21, 0xB19000
	0x035E0F20 ADRP X20, 0xB59000
	0x035E0F24 LDRB W8, [X19 + 0x26E]
	0x035E0F28 LDR X21, [X21 + 0xCC0]
	0x035E0F2C LDR X20, [X20 + 0x1B8]
	0x035E0F30 TBNZ X8, 0x0, 0x35E0F54
	0x035E0F34 ADRP X0, 0xB19000
	0x035E0F38 LDR X0, [X0 + 0xCC0]
	0x035E0F3C BL 0x1C16CF4
	0x035E0F40 ADRP X0, 0xB59000
	0x035E0F44 LDR X0, [X0 + 0x1B8]
	0x035E0F48 BL 0x1C16CF4
	0x035E0F4C MOVZ W8, 0x1
	0x035E0F50 STRB W8, [X19 + 0x26E]
	0x035E0F54 LDR X0, [X21]
	0x035E0F58 BL 0x1C16F10
	0x035E0F5C MOV X1, X31
	0x035E0F60 MOV X19, X0
	0x035E0F64 BL 0x33BDD8C
	0x035E0F68 LDR X8, [X20]
	0x035E0F6C LDR X8, [X8 + 0xB8]
	0x035E0F70 STR X19, [X8 + 0x10]
	0x035E0F74 LDP X20, X19, [X31 + 0x10]
	0x035E0F78 LDP X30, X21, [X31], #0x20
	0x035E0F7C RET
	0x035E0F80 STR X30, [X31 - 0x20]!
	0x035E0F84 STP X20, X19, [X31 + 0x10]
	0x035E0F88 ADRP X20, 0xE00000
	0x035E0F8C ADRP X19, 0xB59000
	0x035E0F90 LDRB W8, [X20 + 0x26F]
	0x035E0F94 LDR X19, [X19 + 0x1D0]
	0x035E0F98 TBNZ X8, 0x0, 0x35E0FB0
	0x035E0F9C ADRP X0, 0xB59000
	0x035E0FA0 LDR X0, [X0 + 0x1D0]
	0x035E0FA4 BL 0x1C16CF4
	0x035E0FA8 MOVZ W8, 0x1
	0x035E0FAC STRB W8, [X20 + 0x26F]
	0x035E0FB0 LDR X0, [X19]
	0x035E0FB4 LDR W8, [X0 + 0xE0]
	0x035E0FB8 CBNZ W8, 0x35E0FC0
	0x035E0FBC BL 0x1C16DFC
	0x035E0FC0 BL 0x35E0FDC
	0x035E0FC4 LDR X8, [X19]
	0x035E0FC8 LDP X20, X19, [X31 + 0x10]
	0x035E0FCC LDR X8, [X8 + 0xB8]
	0x035E0FD0 LDR X0, [X8]
	0x035E0FD4 LDR X30, [X31], #0x20
	0x035E0FD8 RET
	0x035E0FDC SUB X31, X31, 0x30
	0x035E0FE0 STP X30, X21, [X31 + 0x10]
	0x035E0FE4 STP X20, X19, [X31 + 0x20]
	0x035E0FE8 ADRP X19, 0xE00000
	0x035E0FEC ADRP X20, 0xB59000
	0x035E0FF0 LDRB W8, [X19 + 0x270]
	0x035E0FF4 LDR X20, [X20 + 0x1D0]
	0x035E0FF8 TBNZ X8, 0x0, 0x35E1010
	0x035E0FFC ADRP X0, 0xB59000
	0x035E1000 LDR X0, [X0 + 0x1D0]
	0x035E1004 BL 0x1C16CF4
	0x035E1008 MOVZ W8, 0x1
	0x035E100C STRB W8, [X19 + 0x270]
	0x035E1010 LDR X0, [X20]
	0x035E1014 LDR W8, [X0 + 0xE0]
	0x035E1018 CBNZ W8, 0x35E1024
	0x035E101C BL 0x1C16DFC
	0x035E1020 LDR X0, [X20]
	0x035E1024 LDR X8, [X0 + 0xB8]
	0x035E1028 LDR X19, [X8 + 0x8]
	0x035E102C STRB W31, [X31 + 0xC]
	0x035E1030 ADD X1, X31, 0xC
	0x035E1034 MOV X0, X19
	0x035E1038 MOV X2, X31
	0x035E103C BL 0x33DE64C
	0x035E1040 LDR X0, [X20]
	0x035E1044 LDR W8, [X0 + 0xE0]
	0x035E1048 CBNZ W8, 0x35E1054
	0x035E104C BL 0x1C16DFC
	0x035E1050 LDR X0, [X20]
	0x035E1054 LDR X8, [X0 + 0xB8]
	0x035E1058 LDR X8, [X8]
	0x035E105C CBZ X8, 0x35E1068
	0x035E1060 MOV X20, X31
	0x035E1064 B 0x35E1094
	0x035E1068 BL 0x1C16F10
	0x035E106C MOV X21, X0
	0x035E1070 BL 0x35E1120
	0x035E1074 LDR X0, [X20]
	0x035E1078 LDR W8, [X0 + 0xE0]
	0x035E107C CBNZ W8, 0x35E1088
	0x035E1080 BL 0x1C16DFC
	0x035E1084 LDR X0, [X20]
	0x035E1088 LDR X8, [X0 + 0xB8]
	0x035E108C MOV X20, X31
	0x035E1090 STR X21, [X8]
	0x035E1094 LDRB W8, [X31 + 0xC]
	0x035E1098 CBZ W8, 0x35E10A8
	0x035E109C MOV X0, X19
	0x035E10A0 MOV X1, X31
	0x035E10A4 BL 0x33E14E4
	0x035E10A8 CBNZ X20, 0x35E10BC
	0x035E10AC LDP X20, X19, [X31 + 0x20]
	0x035E10B0 LDP X30, X21, [X31 + 0x10]
	0x035E10B4 ADD X31, X31, 0x30
	0x035E10B8 RET
	0x035E10BC MOV X0, X20
	0x035E10C0 BL 0x1C16F18
	0x035E10C4 B 0x35E10C8
	0x035E10C8 MOV X21, X0
	0x035E10CC CMP W1, 0x1
	0x035E10D0 B.NE 0x35E10E8
	0x035E10D4 MOV X0, X21
	0x035E10D8 BL 0x3EB1AD0
	0x035E10DC LDR X20, [X0]
	0x035E10E0 BL 0x3EB1AE0
	0x035E10E4 B 0x35E1094
	0x035E10E8 MOV X20, X31
	0x035E10EC B 0x35E10F4
	0x035E10F0 MOV X21, X0
	0x035E10F4 LDRB W8, [X31 + 0xC]
	0x035E10F8 CBZ W8, 0x35E1108
	0x035E10FC MOV X0, X19
	0x035E1100 MOV X1, X31
	0x035E1104 BL 0x33E14E4
	0x035E1108 CBNZ X20, 0x35E1114
	0x035E110C MOV X0, X21
	0x035E1110 BL 0x1D2C690
	0x035E1114 MOV X0, X20
	0x035E1118 BL 0x1C16F18
	0x035E111C BL 0x1990590
	0x035E1120 STR X30, [X31 - 0x30]!
	0x035E1124 STP X22, X21, [X31 + 0x10]
	0x035E1128 STP X20, X19, [X31 + 0x20]
	0x035E112C ADRP X22, 0xDFF000
	0x035E1130 ADRP X20, 0xB58000
	0x035E1134 ADRP X21, 0xB40000
	0x035E1138 LDRB W8, [X22 + 0x271]
	0x035E113C LDR X20, [X20 + 0x1B8]
	0x035E1140 LDR X21, [X21 + 0x860]
	0x035E1144 MOV X19, X0
	0x035E1148 TBNZ X8, 0x0, 0x35E116C
	0x035E114C ADRP X0, 0xB40000
	0x035E1150 LDR X0, [X0 + 0x860]
	0x035E1154 BL 0x1C16CF4
	0x035E1158 ADRP X0, 0xB58000
	0x035E115C LDR X0, [X0 + 0x1B8]
	0x035E1160 BL 0x1C16CF4
	0x035E1164 MOVZ W8, 0x1
	0x035E1168 STRB W8, [X22 + 0x271]
	0x035E116C MOV X0, X19
	0x035E1170 MOV X1, X31
	0x035E1174 BL 0x33BDD8C
	0x035E1178 LDR X0, [X20]
	0x035E117C BL 0x1C16F10
	0x035E1180 MOV X1, X31
	0x035E1184 MOV X20, X0
	0x035E1188 BL 0x33BDD8C
	0x035E118C STR X20, [X19 + 0x10]
	0x035E1190 LDR X0, [X21]
	0x035E1194 LDR W8, [X0 + 0xE0]
	0x035E1198 CBNZ W8, 0x35E11A0
	0x035E119C BL 0x1C16DFC
	0x035E11A0 MOV X0, X19
	0x035E11A4 LDP X20, X19, [X31 + 0x20]
	0x035E11A8 LDP X22, X21, [X31 + 0x10]
	0x035E11AC MOV X1, X31
	0x035E11B0 LDR X30, [X31], #0x30
	0x035E11B4 B 0x320A6AC
	0x035E11B8 LDR X0, [X0 + 0x10]
	0x035E11BC RET
	0x035E11C0 LDR X0, [X0 + 0x10]
	0x035E11C4 RET
	0x035E11C8 STR X30, [X31 - 0x10]!
	0x035E11CC LDR X8, [X0 + 0x10]
	0x035E11D0 CBZ X8, 0x35E11DC
	0x035E11D4 LDR X30, [X31], #0x10
	0x035E11D8 B 0x35E0A2C
	0x035E11DC BL 0x1C16F20
	0x035E11E0 STP X30, X21, [X31 - 0x20]!
	0x035E11E4 STP X20, X19, [X31 + 0x10]
	0x035E11E8 ADRP X19, 0xDFF000
	0x035E11EC ADRP X21, 0xB18000
	0x035E11F0 ADRP X20, 0xB58000
	0x035E11F4 LDRB W8, [X19 + 0x272]
	0x035E11F8 LDR X21, [X21 + 0xCC0]
	0x035E11FC LDR X20, [X20 + 0x1D0]
	0x035E1200 TBNZ X8, 0x0, 0x35E1224
	0x035E1204 ADRP X0, 0xB18000
	0x035E1208 LDR X0, [X0 + 0xCC0]
	0x035E120C BL 0x1C16CF4
	0x035E1210 ADRP X0, 0xB58000
	0x035E1214 LDR X0, [X0 + 0x1D0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xE01000
	011 Move W8, [X20+610]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0xB5A000
	018 Move X0, [X0+336]
	019 Call 0x1C17CF4
	020 Move X0, 0xB14000
	021 Move X0, [X0+3584]
	022 Call 0x1C17CF4
	023 Move X0, 0xB5A000
	024 Move X0, [X0+296]
	025 Call 0x1C17CF4
	026 Move X0, 0xB5A000
	027 Move X0, [X0+304]
	028 Call 0x1C17CF4
	029 Move X0, 0xB14000
	030 Move X0, [X0+3608]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+610], W8
	034 Compare X19, 0
	035 JumpIfEqual {173}
	036 Move X10, 0xB5A000
	037 Move X8, [X19]
	038 Move X10, [X10+296]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Move X1, [X10]
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move X0, X19
	050 Move W2, W31
	051 Call 0x1C5D788
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 Add X8, X8, X9
	054 Add X0, X8, 312
	055 Move X8, [X0]
	056 Move X1, [X0+8]
	057 Move X22, 0xB14000
	058 Move X22, [X22+3584]
	059 Move X0, X19
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move X19, X0
	062 Compare X0, 0
	063 JumpIfEqual {177}
	064 Move X20, 0xB14000
	065 Move X23, 0xB5A000
	066 Move X20, [X20+3608]
	067 Move X23, [X23+304]
	068 Move X21, X31
	069 Move D8, X31
	070 Move TEMP, 0x80000000
	071 Not TEMP
	072 Move X24, TEMP
	073 Move X8, [X19]
	074 Move X1, [X20]
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 Compare X9, 0
	077 JumpIfEqual {84}
	078 Move X10, [X8+176]
	079 Add X10, X10, 8
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract X9, X9, 1
	083 Add X10, X10, 16
	084 Move X0, X19
	085 Move W2, W31
	086 Call 0x1C5D788
	087 NotImplemented "Instruction LDRSW not yet implemented."
	088 Add X8, X8, X9
	089 Add X0, X8, 312
	090 Move X8, [X0]
	091 Move X1, [X0+8]
	092 Move X0, X19
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {123}
	098 Move X8, [X19]
	099 Move X1, [X23]
	100 NotImplemented "Instruction LDRH not yet implemented."
	101 Compare X9, 0
	102 JumpIfEqual {109}
	103 Move X10, [X8+176]
	104 Add X10, X10, 8
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Subtract X9, X9, 1
	108 Add X10, X10, 16
	109 Move X0, X19
	110 Move W2, W31
	111 Call 0x1C5D788
	112 NotImplemented "Instruction LDRSW not yet implemented."
	113 Add X8, X8, X9
	114 Add X0, X8, 312
	115 Move X8, [X0]
	116 Move X1, [X0+8]
	117 Move X0, X19
	118 NotImplemented "Instruction BLR not yet implemented."
	119 NotImplemented "Instruction FCVT not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Add D8, D8, D0
	122 Add X21, X21, 1
	123 Move X20, X31
	124 Move W23, 9
	125 Compare X19, 0
	126 JumpIfEqual {148}
	127 Move X8, [X19]
	128 Move X1, [X22]
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move X0, X19
	139 Move W2, W31
	140 Call 0x1C5D788
	141 NotImplemented "Instruction LDRSW not yet implemented."
	142 Add X8, X8, X9
	143 Add X0, X8, 312
	144 Move X8, [X0]
	145 Move X1, [X0+8]
	146 Move X0, X19
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Compare X20, 0
	149 JumpIfNotEqual {178}
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Compare W23, 0
	152 JumpIfNotEqual {158}
	153 Compare X21, 0
	154 JumpIfEqual {180}
	155 NotImplemented "Instruction SCVTF not yet implemented."
	156 NotImplemented "Instruction FDIV not yet implemented."
	157 NotImplemented "Instruction INVALID not yet implemented."
	158 Move X20, [X31+64]
	159 Move X19, [X31+72]
	160 Move X22, [X31+48]
	161 Move X21, [X31+56]
	162 Move X24, [X31+32]
	163 Move X23, [X31+40]
	164 Move X30, [X31+24]
	165 Move V8, [X31+16]
	166 Add X31, X31, 80
	167 Return V0
	168 Call 0x1C17F30
	169 Move X8, 0xB59000
	170 Move X8, [X8+336]
	171 Move X1, [X8]
	172 Call 0x1C17DEC
	173 Move X0, 0xB1E000
	174 Move X0, [X0+1408]
	175 Call 0x1C17D08
	176 Call Error.ArgumentNull, X0
	177 Call 0x1C17F20
	178 Move X0, X20
	179 Call 0x1C17F18
	180 Call Error.NoElements
	181 Move X19, X0
	182 Move X0, 0xB59000
	183 Move X0, [X0+336]
	184 Call 0x1C17D08
	185 Move X1, X0
	186 Move X0, X19
	187 Call 0x1C17DEC
	188 Move X21, X31
	189 Move D8, X31
	190 Move TEMP, 0x80000000
	191 Not TEMP
	192 Move X21, TEMP
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Call 0x3EB2AD0
	195 Move X20, [X0]
	196 Call 0x3EB2AE0
	197 Move W23, W31
	198 Compare X19, 0
	199 JumpIfNotEqual {127}
	200 Move [X31+8], X0
	201 Move X20, X31
	202 Move [X31+8], X0
	203 Compare X19, 0
	204 JumpIfEqual {226}
	205 Move X8, [X19]
	206 Move X1, [X22]
	207 NotImplemented "Instruction LDRH not yet implemented."
	208 Compare X9, 0
	209 JumpIfEqual {216}
	210 Move X10, [X8+176]
	211 Add X10, X10, 8
	212 NotImplemented "Instruction LDUR not yet implemented."
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Subtract X9, X9, 1
	215 Add X10, X10, 16
	216 Move X0, X19
	217 Move W2, W31
	218 Call 0x1C5D788
	219 NotImplemented "Instruction LDRSW not yet implemented."
	220 Add X8, X8, X9
	221 Add X0, X8, 312
	222 Move X8, [X0]
	223 Move X1, [X0+8]
	224 Move X0, X19
	225 NotImplemented "Instruction BLR not yet implemented."
	226 Compare X20, 0
	227 JumpIfNotEqual {230}
	228 Move X0, [X31+8]
	229 Call 0x1D2D690
	230 Move X0, X20
	231 Call 0x1C17F18
	232 Call 0x1991590

