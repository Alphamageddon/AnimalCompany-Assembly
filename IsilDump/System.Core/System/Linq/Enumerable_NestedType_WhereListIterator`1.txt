Type: System.Linq.Enumerable/WhereListIterator`1

Method: System.Void .ctor(System.Collections.Generic.List`1<TSource> source, System.Func`2<TSource, System.Boolean> predicate)

Disassembly:
	0x0285B41C LDR X9, [X9 + 0xC0]
	0x0285B420 LDR X0, [X9 + 0x18]
	0x0285B424 LDRB W9, [X0 + 0x135]
	0x0285B428 TBNZ X9, 0x0, 0x285B430
	0x0285B42C BL 0x1C5C684
	0x0285B430 BL 0x1C16F10
	0x0285B434 LDR X8, [X19 + 0x20]
	0x0285B438 MOV X19, X0
	0x0285B43C LDR X8, [X8 + 0xC0]
	0x0285B440 LDR X8, [X8 + 0x28]
	0x0285B444 LDR X8, [X8 + 0x20]
	0x0285B448 LDR X8, [X8 + 0xC0]
	0x0285B44C LDR X1, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X3+32]
	006 Move X20, X1
	007 Move X19, X2
	008 Move X21, X0
	009 Move X8, [X8+192]
	010 Move X1, [X8]
	011 Call 0x2EA376C, X0
	012 Move [X21+40], X20
	013 Move [X21+48], X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Move X21, [X31+40]
	018 Return 

Method: System.Linq.Enumerable/Iterator`1<TSource> Clone()

Disassembly:
	0x0285B450 BL 0x2EA35EC
	0x0285B454 STP X21, X20, [X19 + 0x28]
	0x0285B458 MOV X0, X19
	0x0285B45C LDP X20, X19, [X31 + 0x10]
	0x0285B460 LDP X30, X21, [X31], #0x20
	0x0285B464 RET
	0x0285B468 SUB X31, X31, 0x80
	0x0285B46C STP D11, D10, [X31 + 0x40]
	0x0285B470 STP D9, D8, [X31 + 0x50]
	0x0285B474 STP X30, X21, [X31 + 0x60]
	0x0285B478 STP X20, X19, [X31 + 0x70]
	0x0285B47C LDR W8, [X0 + 0x14]
	0x0285B480 MOV X19, X0
	0x0285B484 MOV X20, X1
	0x0285B488 CMP W8, 0x2
	0x0285B48C B.EQ 0x285B4CC
	0x0285B490 CMP W8, 0x1
	0x0285B494 B.NE 0x285B53C
	0x0285B498 LDR X0, [X19 + 0x28]
	0x0285B49C CBZ X0, 0x285B558
	0x0285B4A0 LDR X8, [X20 + 0x20]
	0x0285B4A4 LDR X8, [X8 + 0xC0]
	0x0285B4A8 LDR X1, [X8 + 0x38]
	0x0285B4AC ADD X8, X31, 0x0
	0x0285B4B0 BL 0x2F6E090

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X9, [X1+32]
	006 Move X8, X0
	007 Move X21, [X8+40]
	008 Move X20, [X8+48]
	009 Move X19, X1
	010 Move X9, [X9+192]
	011 Move X0, [X9+24]
	012 Move W9, [X0+309]
	013 Move TEMP, X9
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {18}
	017 Call 0x1C5D684
	018 Call 0x1C17F10
	019 Move X8, [X19+32]
	020 Move X19, X0
	021 Move X8, [X8+192]
	022 Move X8, [X8+40]
	023 Move X8, [X8+32]
	024 Move X8, [X8+192]
	025 Move X1, [X8]
	026 Call 0x2EA376C, X0
	027 Move [X19+40], X21
	028 Move [X19+48], X20
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return X0

Method: System.Boolean MoveNext()

Disassembly:
	0x0285B4B4 LDP V1, V0, [X31]
	0x0285B4B8 MOVZ W8, 0x2
	0x0285B4BC STP V1, V0, [X31 + 0x20]
	0x0285B4C0 STUR V0, [X19 + 0x48]
	0x0285B4C4 STUR V1, [X19 + 0x38]
	0x0285B4C8 STR W8, [X19 + 0x14]
	0x0285B4CC ADD X21, X19, 0x38
	0x0285B4D0 LDR X8, [X20 + 0x20]
	0x0285B4D4 MOV X0, X21
	0x0285B4D8 LDR X8, [X8 + 0xC0]
	0x0285B4DC LDR X1, [X8 + 0x68]
	0x0285B4E0 BL 0x2BB7940
	0x0285B4E4 TBZ X0, 0x0, 0x285B52C
	0x0285B4E8 LDR X8, [X19 + 0x30]
	0x0285B4EC CBZ X8, 0x285B558
	0x0285B4F0 LDP S8, S9, [X19 + 0x48]
	0x0285B4F4 LDP S10, S11, [X19 + 0x50]
	0x0285B4F8 LDR X9, [X8 + 0x18]
	0x0285B4FC LDR X0, [X8 + 0x40]
	0x0285B500 LDR X1, [X8 + 0x28]
	0x0285B504 MOV V0.16B, V8.16B
	0x0285B508 MOV V1.16B, V9.16B
	0x0285B50C MOV V2.16B, V10.16B
	0x0285B510 MOV V3.16B, V11.16B
	0x0285B514 BLR X9
	0x0285B518 TBZ X0, 0x0, 0x285B4D0
	0x0285B51C STP S8, S9, [X19 + 0x18]
	0x0285B520 STP S10, S11, [X19 + 0x20]
	0x0285B524 MOVZ W0, 0x1
	0x0285B528 B 0x285B540
	0x0285B52C LDR X8, [X19]
	0x0285B530 MOV X0, X19
	0x0285B534 LDP X9, X1, [X8 + 0x1F8]
	0x0285B538 BLR X9
	0x0285B53C MOV W0, W31
	0x0285B540 LDP X20, X19, [X31 + 0x70]
	0x0285B544 LDP X30, X21, [X31 + 0x60]
	0x0285B548 LDP D9, D8, [X31 + 0x50]
	0x0285B54C LDP D11, D10, [X31 + 0x40]
	0x0285B550 ADD X31, X31, 0x80
	0x0285B554 RET
	0x0285B558 BL 0x1C16F20
	0x0285B55C STP X30, X21, [X31 - 0x20]!
	0x0285B560 STP X20, X19, [X31 + 0x10]
	0x0285B564 LDR X8, [X2 + 0x20]
	0x0285B568 MOV X19, X2
	0x0285B56C LDP X21, X0, [X0 + 0x28]
	0x0285B570 LDR X8, [X8 + 0xC0]
	0x0285B574 LDR X2, [X8 + 0x78]
	0x0285B578 BL 0x21B4DAC
	0x0285B57C LDR X8, [X19 + 0x20]
	0x0285B580 MOV X20, X0
	0x0285B584 LDR X8, [X8 + 0xC0]
	0x0285B588 LDR X8, [X8 + 0x18]
	0x0285B58C LDRB W9, [X8 + 0x135]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move W8, [X0+20]
	009 Move X19, X0
	010 Move X20, X1
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X0, [X19+40]
	014 Compare X0, 0
	015 JumpIfEqual {71}
	016 Move X8, [X20+32]
	017 Move X8, [X8+192]
	018 Move X1, [X8+56]
	019 Add X8, X31, 0
	020 Call List`1<KeyValuePair`2<Edge, Object>>.GetEnumerator, X0
	021 Move V1, [X31]
	022 Move V0, [X31+16]
	023 Move W8, 2
	024 Move [X31+32], V1
	025 Move [X31+40], V0
	026 Move [X19+72], V0
	027 Move [X19+56], V1
	028 Move [X19+20], W8
	029 Add X21, X19, 56
	030 Move X8, [X20+32]
	031 Move X0, X21
	032 Move X8, [X8+192]
	033 Move X1, [X8+104]
	034 Call Enumerator<KeyValuePair`2<Edge, Object>>.MoveNext, X0
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {57}
	039 Move X8, [X19+48]
	040 Compare X8, 0
	041 JumpIfEqual {71}
	042 Move X22, [X19+72]
	043 Move X23, [X19+80]
	044 Move X9, [X8+24]
	045 Move X0, [X8+64]
	046 Move X3, [X8+40]
	047 Move X1, X22
	048 Move X2, X23
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {30}
	054 Move [X19+24], X22
	055 Move [X19+32], X23
	056 Move W0, 1
	057 Move X8, [X19]
	058 Move X0, X19
	059 Move X9, [X8+504]
	060 Move X1, [X8+512]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move W0, W31
	063 Move X20, [X31+96]
	064 Move X19, [X31+104]
	065 Move X22, [X31+80]
	066 Move X21, [X31+88]
	067 Move X30, [X31+64]
	068 Move X23, [X31+72]
	069 Add X31, X31, 112
	070 Return X0
	071 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<TResult> Select(System.Func`2<TSource, TResult> selector)

Disassembly:
	0x0213F810 LDR X8, [X19 + 0x38]
	0x0213F814 LDR X0, [X23 + 0x30]
	0x0213F818 LDR X2, [X8 + 0x8]
	0x0213F81C LDP X20, X21, [X23 + 0x20]
	0x0213F820 MOV X1, X22
	0x0213F824 BL 0x21B5E54
	0x0213F828 LDR X8, [X19 + 0x38]
	0x0213F82C MOV X22, X0
	0x0213F830 LDR X8, [X8 + 0x18]
	0x0213F834 LDRB W9, [X8 + 0x135]
	0x0213F838 TBNZ X9, 0x0, 0x213F848
	0x0213F83C MOV X0, X8
	0x0213F840 BL 0x1C5C684
	0x0213F844 MOV X8, X0
	0x0213F848 MOV X0, X8
	0x0213F84C BL 0x1C16F10
	0x0213F850 LDR X8, [X19 + 0x38]
	0x0213F854 MOV X1, X20
	0x0213F858 MOV X2, X21
	0x0213F85C MOV X3, X22
	0x0213F860 LDR X4, [X8 + 0x20]
	0x0213F864 MOV X19, X0
	0x0213F868 BL 0x285DC24
	0x0213F86C MOV X0, X19
	0x0213F870 LDP X20, X19, [X31 + 0x20]
	0x0213F874 LDP X22, X21, [X31 + 0x10]
	0x0213F878 LDP X30, X23, [X31], #0x30
	0x0213F87C RET
	0x0213F880 STP X30, X23, [X31 - 0x30]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X20, X2
	008 Move X19, X1
	009 Move X21, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {15}
	012 Move X0, X20
	013 Call 0x1C5D6E0
	014 Move X8, [X20+56]
	015 Move X0, [X8+8]
	016 Move X22, [X21+40]
	017 Move X21, [X21+48]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Call 0x1C17F10
	025 Move X8, [X20+56]
	026 Move X1, X22
	027 Move X2, X21
	028 Move X3, X19
	029 Move X4, [X8+16]
	030 Move X20, X0
	031 Call WhereSelectListIterator`2<KeyValuePair`2<Edge, Object>, Edge>..ctor, X0, X1, X2, X3
	032 Move X0, X20
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return X0

Method: System.Collections.Generic.IEnumerable`1<TSource> Where(System.Func`2<TSource, System.Boolean> predicate)

Disassembly:
	0x0285B590 TBNZ X9, 0x0, 0x285B5A0
	0x0285B594 MOV X0, X8
	0x0285B598 BL 0x1C5C684
	0x0285B59C MOV X8, X0
	0x0285B5A0 MOV X0, X8
	0x0285B5A4 BL 0x1C16F10
	0x0285B5A8 LDR X8, [X19 + 0x20]
	0x0285B5AC MOV X19, X0
	0x0285B5B0 LDR X8, [X8 + 0xC0]
	0x0285B5B4 LDR X8, [X8 + 0x28]
	0x0285B5B8 LDR X8, [X8 + 0x20]
	0x0285B5BC LDR X8, [X8 + 0xC0]
	0x0285B5C0 LDR X1, [X8]
	0x0285B5C4 BL 0x2EA35EC
	0x0285B5C8 STP X21, X20, [X19 + 0x28]
	0x0285B5CC MOV X0, X19
	0x0285B5D0 LDP X20, X19, [X31 + 0x10]
	0x0285B5D4 LDP X30, X21, [X31], #0x20
	0x0285B5D8 RET
	0x0285B5DC STP X30, X21, [X31 - 0x20]!
	0x0285B5E0 STP X20, X19, [X31 + 0x10]
	0x0285B5E4 LDR X8, [X3 + 0x20]
	0x0285B5E8 MOV X20, X1
	0x0285B5EC MOV X19, X2
	0x0285B5F0 MOV X21, X0
	0x0285B5F4 LDR X8, [X8 + 0xC0]
	0x0285B5F8 LDR X1, [X8]
	0x0285B5FC BL 0x2EA3840
	0x0285B600 STP X20, X19, [X21 + 0x20]
	0x0285B604 LDP X20, X19, [X31 + 0x10]
	0x0285B608 LDP X30, X21, [X31], #0x20
	0x0285B60C RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X19, X2
	007 Move X21, [X0+40]
	008 Move X0, [X0+48]
	009 Move X8, [X8+192]
	010 Move X2, [X8+120]
	011 Call 0x21B5830, X0, X1
	012 Move X8, [X19+32]
	013 Move X20, X0
	014 Move X8, [X8+192]
	015 Move X8, [X8+24]
	016 Move W9, [X8+309]
	017 Move TEMP, X9
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {24}
	021 Move X0, X8
	022 Call 0x1C5D684
	023 Move X8, X0
	024 Move X0, X8
	025 Call 0x1C17F10
	026 Move X8, [X19+32]
	027 Move X19, X0
	028 Move X8, [X8+192]
	029 Move X8, [X8+40]
	030 Move X8, [X8+32]
	031 Move X8, [X8+192]
	032 Move X1, [X8]
	033 Call 0x2EA376C, X0
	034 Move [X19+40], X21
	035 Move [X19+48], X20
	036 Move X0, X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return X0

