Type: System.Linq.Enumerable/<RangeIterator>d__115

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x035DFE44 ADD X10, X10, 0x8
	0x035DFE48 LDUR X11, [X10 - 0x8]
	0x035DFE4C CMP X11, X1
	0x035DFE50 B.EQ 0x35DFE70
	0x035DFE54 SUBS X9, X9, 0x1
	0x035DFE58 ADD X10, X10, 0x10
	0x035DFE5C B.NE 0x35DFE48
	0x035DFE60 MOV X0, X19
	0x035DFE64 MOV W2, W31
	0x035DFE68 BL 0x1C5C788
	0x035DFE6C B 0x35DFE7C
	0x035DFE70 LDRSW X9, [X10]
	0x035DFE74 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+24], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x035E1218 BL 0x1C16CF4

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x035E121C MOVZ W8, 0x1
	0x035E1220 STRB W8, [X19 + 0x272]
	0x035E1224 LDR X0, [X21]
	0x035E1228 BL 0x1C16F10
	0x035E122C MOV X1, X31
	0x035E1230 MOV X19, X0
	0x035E1234 BL 0x33BDD8C
	0x035E1238 LDR X8, [X20]
	0x035E123C LDR X8, [X8 + 0xB8]
	0x035E1240 STR X19, [X8 + 0x8]
	0x035E1244 LDP X20, X19, [X31 + 0x10]
	0x035E1248 LDP X30, X21, [X31], #0x20
	0x035E124C RET
	0x035E1250 STR X30, [X31 - 0x20]!
	0x035E1254 STP X20, X19, [X31 + 0x10]
	0x035E1258 ADRP X19, 0xDFF000
	0x035E125C ADRP X20, 0xB58000
	0x035E1260 LDRB W8, [X19 + 0x273]
	0x035E1264 LDR X20, [X20 + 0x1D0]
	0x035E1268 TBNZ X8, 0x0, 0x35E1280
	0x035E126C ADRP X0, 0xB58000
	0x035E1270 LDR X0, [X0 + 0x1D0]
	0x035E1274 BL 0x1C16CF4
	0x035E1278 MOVZ W8, 0x1
	0x035E127C STRB W8, [X19 + 0x273]

ISIL:
	001 Move W8, [X0+16]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Compare W8, 0
	004 JumpIfNotEqual {25}
	005 Move TEMP, 0
	006 Not TEMP
	007 Move W8, TEMP
	008 Move W9, W31
	009 Move [X0+16], W8
	010 Move [X0+44], W31
	011 Move W8, [X0+44]
	012 Move TEMP, 0
	013 Not TEMP
	014 Move W9, TEMP
	015 Move [X0+16], W9
	016 Add W9, W8, 1
	017 Move [X0+44], W9
	018 Move W8, [X0+36]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move W10, [X0+28]
	021 Move W8, 1
	022 Add W9, W10, W9
	023 Move [X0+16], W8
	024 Move [X0+20], W9
	025 Move W8, W31
	026 Move W0, W8
	027 Return X0

Method: System.Int32 System.Collections.Generic.IEnumerator<System.Int32>.get_Current()

Disassembly:
	0x035E1280 LDR X0, [X20]
	0x035E1284 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move W0, [X0+20]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x035E1288 CBNZ W8, 0x35E1290
	0x035E128C BL 0x1C16DFC
	0x035E1290 BL 0x35E0F80
	0x035E1294 CBZ X0, 0x35E12AC
	0x035E1298 LDR X8, [X0 + 0x10]
	0x035E129C CBZ X8, 0x35E12AC
	0x035E12A0 LDP X20, X19, [X31 + 0x10]
	0x035E12A4 LDR X30, [X31], #0x20
	0x035E12A8 B 0x35E0A2C
	0x035E12AC BL 0x1C16F20
	0x035E12B0 B 0x35E0AF4
	0x035E12B4 B 0x35E0D7C
	0x035E12B8 MOV X0, X31
	0x035E12BC RET

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xB13000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xB59000
	011 Move X0, [X0+344]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x035E12C0 MOV X1, X31
	0x035E12C4 B 0x33BDD8C
	0x035E12C8 STR X30, [X31 - 0x30]!
	0x035E12CC STP X22, X21, [X31 + 0x10]
	0x035E12D0 STP X20, X19, [X31 + 0x20]
	0x035E12D4 ADRP X21, 0xDFF000
	0x035E12D8 LDRB W8, [X21 + 0x275]
	0x035E12DC MOV X20, X1
	0x035E12E0 MOV X19, X0
	0x035E12E4 TBNZ X8, 0x0, 0x35E1314
	0x035E12E8 ADRP X0, 0xB1B000
	0x035E12EC LDR X0, [X0 + 0x9E8]
	0x035E12F0 BL 0x1C16CF4
	0x035E12F4 ADRP X0, 0xB40000
	0x035E12F8 LDR X0, [X0 + 0x190]
	0x035E12FC BL 0x1C16CF4
	0x035E1300 ADRP X0, 0xB40000
	0x035E1304 LDR X0, [X0 + 0x198]
	0x035E1308 BL 0x1C16CF4
	0x035E130C MOVZ W8, 0x1
	0x035E1310 STRB W8, [X21 + 0x275]
	0x035E1314 MOV X0, X31
	0x035E1318 BL 0x3242EC8

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE00000
	007 Move X20, 0xB13000
	008 Move W8, [X21+611]
	009 Move X20, [X20+1880]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xB13000
	016 Move X0, [X0+1880]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+611], W8
	020 Move W8, [X19+20]
	021 Move X0, [X20]
	022 Add X1, X31, 12
	023 Move [X31+12], W8
	024 Call 0x1C17E04
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X30, [X31+16]
	028 Move X21, [X31+24]
	029 Add X31, X31, 48
	030 Return X0

Method: System.Collections.Generic.IEnumerator`1<System.Int32> System.Collections.Generic.IEnumerable<System.Int32>.GetEnumerator()

Disassembly:
	0x035E131C CBZ X0, 0x35E13F8
	0x035E1320 LDR X8, [X0]
	0x035E1324 ADRP X21, 0xB40000
	0x035E1328 ADRP X22, 0xB40000
	0x035E132C MOV X1, X20
	0x035E1330 LDR X9, [X8 + 0x378]
	0x035E1334 LDR X2, [X8 + 0x380]
	0x035E1338 LDR X21, [X21 + 0x190]
	0x035E133C LDR X22, [X22 + 0x198]
	0x035E1340 BLR X9
	0x035E1344 LDR X8, [X21]
	0x035E1348 MOV X20, X0
	0x035E134C MOV X1, X19
	0x035E1350 MOV X2, X31
	0x035E1354 MOV X0, X8
	0x035E1358 BL 0x321EFD0
	0x035E135C LDR X8, [X22]
	0x035E1360 MOV X21, X0
	0x035E1364 MOV X1, X19
	0x035E1368 MOV X2, X31
	0x035E136C MOV X0, X8
	0x035E1370 BL 0x321EFD0
	0x035E1374 CBZ X20, 0x35E13F8
	0x035E1378 MOV X19, X0
	0x035E137C MOV X0, X20
	0x035E1380 MOV X1, X21
	0x035E1384 MOV X2, X31
	0x035E1388 BL 0x322C2F0
	0x035E138C CBZ X21, 0x35E13F8
	0x035E1390 LDR W8, [X21 + 0x10]
	0x035E1394 ADRP X22, 0xB1B000
	0x035E1398 LDR X22, [X22 + 0x9E8]
	0x035E139C MOV X1, X19
	0x035E13A0 ADD W21, W8, W0
	0x035E13A4 MOV X0, X20
	0x035E13A8 MOV W2, W21
	0x035E13AC MOV X3, X31
	0x035E13B0 BL 0x322C300
	0x035E13B4 SUB W2, W0, W21
	0x035E13B8 MOV X0, X20
	0x035E13BC MOV W1, W21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE00000
	005 Move W8, [X20+612]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB59000
	012 Move X0, [X0+272]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+612], W8
	016 Move W8, [X19+16]
	017 Add W31, W8, 2
	018 Move W20, [X19+24]
	019 Move X0, X31
	020 Call Environment.get_CurrentManagedThreadId
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X19+16], W31
	023 Move X20, X19
	024 Move X8, 0xB59000
	025 Move X8, [X8+272]
	026 Move X0, [X8]
	027 Call 0x1C17F10
	028 Move X1, X31
	029 Move X20, X0
	030 Call Object..ctor, X0
	031 Move X0, X31
	032 Move [X20+16], W31
	033 Call Environment.get_CurrentManagedThreadId
	034 Move [X20+24], W0
	035 Move W8, [X19+32]
	036 Move X0, X20
	037 Move [X20+28], W8
	038 Move W8, [X19+40]
	039 Move [X20+36], W8
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x035E13C0 MOV X3, X31

ISIL:
	001 Call <RangeIterator>d__115.System.Collections.Generic.IEnumerable<System.Int32>.GetEnumerator, X0
	002 Return X0

