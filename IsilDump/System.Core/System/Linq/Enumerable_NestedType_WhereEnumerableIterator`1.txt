Type: System.Linq.Enumerable/WhereEnumerableIterator`1

Method: System.Void .ctor(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource, System.Boolean> predicate)

Disassembly:
	0x02854EB8 TBNZ X9, 0x0, 0x2854EC0
	0x02854EBC BL 0x1C5C684
	0x02854EC0 BL 0x1C16F10
	0x02854EC4 LDR X8, [X19 + 0x20]
	0x02854EC8 MOV X19, X0
	0x02854ECC LDR X8, [X8 + 0xC0]
	0x02854ED0 LDR X8, [X8 + 0x28]
	0x02854ED4 LDR X8, [X8 + 0x20]
	0x02854ED8 LDR X8, [X8 + 0xC0]
	0x02854EDC LDR X1, [X8]
	0x02854EE0 BL 0x2EA2D14
	0x02854EE4 STP X21, X20, [X19 + 0x28]
	0x02854EE8 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X3+32]
	006 Move X20, X1
	007 Move X19, X2
	008 Move X21, X0
	009 Move X8, [X8+192]
	010 Move X1, [X8]
	011 Call 0x2EA376C, X0
	012 Move [X21+40], X20
	013 Move [X21+48], X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Move X21, [X31+40]
	018 Return 

Method: System.Linq.Enumerable/Iterator`1<TSource> Clone()

Disassembly:
	0x02854EEC LDP X20, X19, [X31 + 0x10]
	0x02854EF0 LDP X30, X21, [X31], #0x20
	0x02854EF4 RET
	0x02854EF8 STP X30, X21, [X31 - 0x20]!
	0x02854EFC STP X20, X19, [X31 + 0x10]
	0x02854F00 ADRP X21, 0x1B86000
	0x02854F04 LDRB W8, [X21 + 0xB00]
	0x02854F08 MOV X19, X1
	0x02854F0C MOV X20, X0
	0x02854F10 TBNZ X8, 0x0, 0x2854F28
	0x02854F14 ADRP X0, 0x189F000
	0x02854F18 LDR X0, [X0 + 0xE00]
	0x02854F1C BL 0x1C16CF4
	0x02854F20 MOVZ W8, 0x1
	0x02854F24 STRB W8, [X21 + 0xB00]
	0x02854F28 LDR X21, [X20 + 0x38]
	0x02854F2C CBZ X21, 0x2854F90
	0x02854F30 ADRP X10, 0x189F000
	0x02854F34 LDR X8, [X21]
	0x02854F38 LDR X10, [X10 + 0xE00]
	0x02854F3C LDRH W9, [X8 + 0x12E]
	0x02854F40 LDR X1, [X10]
	0x02854F44 CBZ X9, 0x2854F68
	0x02854F48 LDR X10, [X8 + 0xB0]
	0x02854F4C ADD X10, X10, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X9, [X1+32]
	006 Move X8, X0
	007 Move X21, [X8+40]
	008 Move X20, [X8+48]
	009 Move X19, X1
	010 Move X9, [X9+192]
	011 Move X0, [X9+24]
	012 Move W9, [X0+309]
	013 Move TEMP, X9
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {18}
	017 Call 0x1C5D684
	018 Call 0x1C17F10
	019 Move X8, [X19+32]
	020 Move X19, X0
	021 Move X8, [X8+192]
	022 Move X8, [X8+40]
	023 Move X8, [X8+32]
	024 Move X8, [X8+192]
	025 Move X1, [X8]
	026 Call 0x2EA376C, X0
	027 Move [X19+40], X21
	028 Move [X19+48], X20
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return X0

Method: System.Void Dispose()

Disassembly:
	0x02854F50 LDUR X11, [X10 - 0x8]
	0x02854F54 CMP X11, X1
	0x02854F58 B.EQ 0x2854F78
	0x02854F5C SUBS X9, X9, 0x1
	0x02854F60 ADD X10, X10, 0x10
	0x02854F64 B.NE 0x2854F50
	0x02854F68 MOV X0, X21
	0x02854F6C MOV W2, W31
	0x02854F70 BL 0x1C5C788
	0x02854F74 B 0x2854F84
	0x02854F78 LDRSW X9, [X10]
	0x02854F7C ADD X8, X8, X9, 0x4, LSL
	0x02854F80 ADD X0, X8, 0x138
	0x02854F84 LDP X8, X1, [X0]
	0x02854F88 MOV X0, X21
	0x02854F8C BLR X8
	0x02854F90 STR X31, [X20 + 0x38]
	0x02854F94 LDR X8, [X19 + 0x20]
	0x02854F98 MOV X0, X20
	0x02854F9C LDP X20, X19, [X31 + 0x10]
	0x02854FA0 LDR X8, [X8 + 0xC0]
	0x02854FA4 LDR X1, [X8 + 0x40]
	0x02854FA8 LDP X30, X21, [X31], #0x20
	0x02854FAC B 0x2EA2D54
	0x02854FB0 STP X30, X23, [X31 - 0x30]!
	0x02854FB4 STP X22, X21, [X31 + 0x10]
	0x02854FB8 STP X20, X19, [X31 + 0x20]
	0x02854FBC ADRP X21, 0x1B86000
	0x02854FC0 LDRB W8, [X21 + 0xB01]
	0x02854FC4 MOV X20, X1
	0x02854FC8 MOV X19, X0
	0x02854FCC TBNZ X8, 0x0, 0x2854FE4
	0x02854FD0 ADRP X0, 0x189F000
	0x02854FD4 LDR X0, [X0 + 0xE18]
	0x02854FD8 BL 0x1C16CF4
	0x02854FDC MOVZ W8, 0x1
	0x02854FE0 STRB W8, [X21 + 0xB01]
	0x02854FE4 LDR W8, [X19 + 0x14]
	0x02854FE8 ADRP X23, 0x189F000
	0x02854FEC LDR X23, [X23 + 0xE18]
	0x02854FF0 CMP W8, 0x2
	0x02854FF4 B.EQ 0x2855088
	0x02854FF8 CMP W8, 0x1
	0x02854FFC B.NE 0x28551B4
	0x02855000 LDR X21, [X19 + 0x28]
	0x02855004 CBZ X21, 0x28551C8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1B87000
	006 Move W8, [X21+2808]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x18A0000
	014 Move X0, [X0+3584]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2808], W8
	018 Move X21, [X20+56]
	019 Compare X21, 0
	020 JumpIfEqual {44}
	021 Move X10, 0x18A0000
	022 Move X8, [X21]
	023 Move X10, [X10+3584]
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Move X1, [X10]
	026 Compare X9, 0
	027 JumpIfEqual {34}
	028 Move X10, [X8+176]
	029 Add X10, X10, 8
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Subtract X9, X9, 1
	033 Add X10, X10, 16
	034 Move X0, X21
	035 Move W2, W31
	036 Call 0x1C5D788
	037 NotImplemented "Instruction LDRSW not yet implemented."
	038 Add X8, X8, X9
	039 Add X0, X8, 312
	040 Move X8, [X0]
	041 Move X1, [X0+8]
	042 Move X0, X21
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move [X20+56], X31
	045 Move X8, [X19+32]
	046 Move X0, X20
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X8, [X8+192]
	050 Move X1, [X8+64]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Call 0x2EA37AC, X0
	054 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x02855008 LDR X8, [X20 + 0x20]
	0x0285500C LDR X8, [X8 + 0xC0]
	0x02855010 LDR X1, [X8 + 0x10]
	0x02855014 LDRB W8, [X1 + 0x135]
	0x02855018 TBNZ X8, 0x0, 0x2855028
	0x0285501C MOV X0, X1
	0x02855020 BL 0x1C5C684
	0x02855024 MOV X1, X0
	0x02855028 LDR X8, [X21]
	0x0285502C LDRH W9, [X8 + 0x12E]
	0x02855030 CBZ X9, 0x2855054
	0x02855034 LDR X10, [X8 + 0xB0]
	0x02855038 ADD X10, X10, 0x8
	0x0285503C LDUR X11, [X10 - 0x8]
	0x02855040 CMP X11, X1
	0x02855044 B.EQ 0x2855064
	0x02855048 SUBS X9, X9, 0x1
	0x0285504C ADD X10, X10, 0x10
	0x02855050 B.NE 0x285503C
	0x02855054 MOV X0, X21
	0x02855058 MOV W2, W31
	0x0285505C BL 0x1C5C788
	0x02855060 B 0x2855070
	0x02855064 LDRSW X9, [X10]
	0x02855068 ADD X8, X8, X9, 0x4, LSL
	0x0285506C ADD X0, X8, 0x138
	0x02855070 LDP X8, X1, [X0]
	0x02855074 MOV X0, X21
	0x02855078 BLR X8
	0x0285507C MOVZ W8, 0x2
	0x02855080 STR X0, [X19 + 0x38]
	0x02855084 STR W8, [X19 + 0x14]
	0x02855088 LDR X21, [X19 + 0x38]
	0x0285508C CBZ X21, 0x28551C8
	0x02855090 LDR X8, [X21]
	0x02855094 LDR X1, [X23]
	0x02855098 LDRH W9, [X8 + 0x12E]
	0x0285509C CBZ X9, 0x28550C0
	0x028550A0 LDR X10, [X8 + 0xB0]
	0x028550A4 ADD X10, X10, 0x8
	0x028550A8 LDUR X11, [X10 - 0x8]
	0x028550AC CMP X11, X1
	0x028550B0 B.EQ 0x28550D0
	0x028550B4 SUBS X9, X9, 0x1
	0x028550B8 ADD X10, X10, 0x10
	0x028550BC B.NE 0x28550A8
	0x028550C0 MOV X0, X21
	0x028550C4 MOV W2, W31
	0x028550C8 BL 0x1C5C788
	0x028550CC B 0x28550DC
	0x028550D0 LDRSW X9, [X10]
	0x028550D4 ADD X8, X8, X9, 0x4, LSL
	0x028550D8 ADD X0, X8, 0x138
	0x028550DC LDP X8, X1, [X0]
	0x028550E0 MOV X0, X21
	0x028550E4 BLR X8
	0x028550E8 TBZ X0, 0x0, 0x28551A0
	0x028550EC LDR X21, [X19 + 0x38]
	0x028550F0 CBZ X21, 0x28551C8
	0x028550F4 LDR X8, [X20 + 0x20]
	0x028550F8 LDR X8, [X8 + 0xC0]
	0x028550FC LDR X1, [X8 + 0x38]
	0x02855100 LDRB W8, [X1 + 0x135]
	0x02855104 TBNZ X8, 0x0, 0x2855114
	0x02855108 MOV X0, X1
	0x0285510C BL 0x1C5C684
	0x02855110 MOV X1, X0
	0x02855114 LDR X8, [X21]
	0x02855118 LDRH W9, [X8 + 0x12E]
	0x0285511C CBZ X9, 0x2855140
	0x02855120 LDR X10, [X8 + 0xB0]
	0x02855124 ADD X10, X10, 0x8
	0x02855128 LDUR X11, [X10 - 0x8]
	0x0285512C CMP X11, X1
	0x02855130 B.EQ 0x2855150
	0x02855134 SUBS X9, X9, 0x1
	0x02855138 ADD X10, X10, 0x10
	0x0285513C B.NE 0x2855128
	0x02855140 MOV X0, X21
	0x02855144 MOV W2, W31
	0x02855148 BL 0x1C5C788
	0x0285514C B 0x285515C
	0x02855150 LDRSW X9, [X10]
	0x02855154 ADD X8, X8, X9, 0x4, LSL
	0x02855158 ADD X0, X8, 0x138
	0x0285515C LDP X8, X1, [X0]
	0x02855160 MOV X0, X21
	0x02855164 BLR X8
	0x02855168 LDR X8, [X19 + 0x30]
	0x0285516C CBZ X8, 0x28551C8
	0x02855170 MOV X21, X0
	0x02855174 LDR X9, [X8 + 0x18]
	0x02855178 LDR X0, [X8 + 0x40]
	0x0285517C LDR X3, [X8 + 0x28]
	0x02855180 MOV X22, X1
	0x02855184 MOV X1, X21
	0x02855188 MOV X2, X22
	0x0285518C BLR X9
	0x02855190 TBZ X0, 0x0, 0x2855088
	0x02855194 STP X21, X22, [X19 + 0x18]
	0x02855198 MOVZ W0, 0x1
	0x0285519C B 0x28551B8
	0x028551A0 CBZ X19, 0x28551C8
	0x028551A4 LDR X8, [X19]
	0x028551A8 MOV X0, X19
	0x028551AC LDP X9, X1, [X8 + 0x1F8]
	0x028551B0 BLR X9
	0x028551B4 MOV W0, W31
	0x028551B8 LDP X20, X19, [X31 + 0x20]
	0x028551BC LDP X22, X21, [X31 + 0x10]
	0x028551C0 LDP X30, X23, [X31], #0x30
	0x028551C4 RET
	0x028551C8 BL 0x1C16F20
	0x028551CC STP X30, X21, [X31 - 0x20]!
	0x028551D0 STP X20, X19, [X31 + 0x10]
	0x028551D4 LDR X8, [X2 + 0x20]
	0x028551D8 MOV X19, X2
	0x028551DC LDP X21, X0, [X0 + 0x28]
	0x028551E0 LDR X8, [X8 + 0xC0]
	0x028551E4 LDR X2, [X8 + 0x68]
	0x028551E8 BL 0x21B4AA0
	0x028551EC LDR X8, [X19 + 0x20]
	0x028551F0 MOV X20, X0
	0x028551F4 LDR X8, [X8 + 0xC0]
	0x028551F8 LDR X8, [X8 + 0x18]
	0x028551FC LDRB W9, [X8 + 0x135]
	0x02855200 TBNZ X9, 0x0, 0x2855210
	0x02855204 MOV X0, X8
	0x02855208 BL 0x1C5C684
	0x0285520C MOV X8, X0
	0x02855210 MOV X0, X8
	0x02855214 BL 0x1C16F10
	0x02855218 LDR X8, [X19 + 0x20]
	0x0285521C MOV X19, X0
	0x02855220 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x1B86000
	008 Move W8, [X21+2809]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x189F000
	016 Move X0, [X0+3608]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2809], W8
	020 Move W8, [X19+20]
	021 Move X23, 0x189F000
	022 Move X23, [X23+3608]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X21, [X19+40]
	026 Compare X21, 0
	027 JumpIfEqual {157}
	028 Move X8, [X20+32]
	029 Move X8, [X8+192]
	030 Move X1, [X8+16]
	031 Move W8, [X1+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {39}
	036 Move X0, X1
	037 Call 0x1C5D684
	038 Move X1, X0
	039 Move X8, [X21]
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move X0, X21
	050 Move W2, W31
	051 Call 0x1C5D788
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 Add X8, X8, X9
	054 Add X0, X8, 312
	055 Move X8, [X0]
	056 Move X1, [X0+8]
	057 Move X0, X21
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move W8, 2
	060 Move [X19+56], X0
	061 Move [X19+20], W8
	062 Move X21, [X19+56]
	063 Compare X21, 0
	064 JumpIfEqual {157}
	065 Move X8, [X21]
	066 Move X1, [X23]
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Compare X9, 0
	069 JumpIfEqual {76}
	070 Move X10, [X8+176]
	071 Add X10, X10, 8
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract X9, X9, 1
	075 Add X10, X10, 16
	076 Move X0, X21
	077 Move W2, W31
	078 Call 0x1C5D788
	079 NotImplemented "Instruction LDRSW not yet implemented."
	080 Add X8, X8, X9
	081 Add X0, X8, 312
	082 Move X8, [X0]
	083 Move X1, [X0+8]
	084 Move X0, X21
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {142}
	090 Move X21, [X19+56]
	091 Compare X21, 0
	092 JumpIfEqual {157}
	093 Move X8, [X20+32]
	094 Move X8, [X8+192]
	095 Move X1, [X8+56]
	096 Move W8, [X1+309]
	097 Move TEMP, X8
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {104}
	101 Move X0, X1
	102 Call 0x1C5D684
	103 Move X1, X0
	104 Move X8, [X21]
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Compare X9, 0
	107 JumpIfEqual {114}
	108 Move X10, [X8+176]
	109 Add X10, X10, 8
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Subtract X9, X9, 1
	113 Add X10, X10, 16
	114 Move X0, X21
	115 Move W2, W31
	116 Call 0x1C5D788
	117 NotImplemented "Instruction LDRSW not yet implemented."
	118 Add X8, X8, X9
	119 Add X0, X8, 312
	120 Move X8, [X0]
	121 Move X1, [X0+8]
	122 Move X0, X21
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move X8, [X19+48]
	125 Compare X8, 0
	126 JumpIfEqual {157}
	127 Move X21, X0
	128 Move X9, [X8+24]
	129 Move X0, [X8+64]
	130 Move X3, [X8+40]
	131 Move X22, X1
	132 Move X1, X21
	133 Move X2, X22
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {62}
	139 Move [X19+24], X21
	140 Move [X19+32], X22
	141 Move W0, 1
	142 Compare X19, 0
	143 JumpIfEqual {157}
	144 Move X8, [X19]
	145 Move X0, X19
	146 Move X9, [X8+504]
	147 Move X1, [X8+512]
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move W0, W31
	150 Move X20, [X31+32]
	151 Move X19, [X31+40]
	152 Move X22, [X31+16]
	153 Move X21, [X31+24]
	154 Move X30, [X31+48]
	155 Move X23, [X31+56]
	156 Return X0
	157 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<TResult> Select(System.Func`2<TSource, TResult> selector)

Disassembly:
	0x0213ECF0 MOV X20, X0
	0x0213ECF4 BL 0x288EF40
	0x0213ECF8 MOV X0, X20
	0x0213ECFC LDP X20, X19, [X31 + 0x20]
	0x0213ED00 LDP X22, X21, [X31 + 0x10]
	0x0213ED04 LDR X30, [X31], #0x30
	0x0213ED08 RET
	0x0213ED0C STR X30, [X31 - 0x30]!
	0x0213ED10 STP X22, X21, [X31 + 0x10]
	0x0213ED14 STP X20, X19, [X31 + 0x20]
	0x0213ED18 LDR X8, [X2 + 0x38]
	0x0213ED1C MOV X20, X2
	0x0213ED20 MOV X19, X1
	0x0213ED24 MOV X21, X0
	0x0213ED28 CBNZ X8, 0x213ED38
	0x0213ED2C MOV X0, X20
	0x0213ED30 BL 0x1C5C6E0
	0x0213ED34 LDR X8, [X20 + 0x38]
	0x0213ED38 LDR X0, [X8 + 0x8]
	0x0213ED3C LDP X22, X21, [X21 + 0x20]
	0x0213ED40 LDRB W8, [X0 + 0x135]
	0x0213ED44 TBNZ X8, 0x0, 0x213ED4C
	0x0213ED48 BL 0x1C5C684
	0x0213ED4C BL 0x1C16F10
	0x0213ED50 LDR X8, [X20 + 0x38]
	0x0213ED54 MOV X1, X22
	0x0213ED58 MOV X2, X21
	0x0213ED5C MOV X3, X19
	0x0213ED60 LDR X4, [X8 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X20, X2
	008 Move X19, X1
	009 Move X21, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {15}
	012 Move X0, X20
	013 Call 0x1C5D6E0
	014 Move X8, [X20+56]
	015 Move X0, [X8+8]
	016 Move X22, [X21+40]
	017 Move X21, [X21+48]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Call 0x1C17F10
	025 Move X8, [X20+56]
	026 Move X1, X22
	027 Move X2, X21
	028 Move X3, X19
	029 Move X4, [X8+16]
	030 Move X20, X0
	031 Call WhereSelectEnumerableIterator`2<KeyValuePair`2<Edge, Object>, Edge>..ctor, X0, X1, X2, X3
	032 Move X0, X20
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return X0

Method: System.Collections.Generic.IEnumerable`1<TSource> Where(System.Func`2<TSource, System.Boolean> predicate)

Disassembly:
	0x02855224 LDR X8, [X8 + 0x28]
	0x02855228 LDR X8, [X8 + 0x20]
	0x0285522C LDR X8, [X8 + 0xC0]
	0x02855230 LDR X1, [X8]
	0x02855234 BL 0x2EA2D14
	0x02855238 STP X21, X20, [X19 + 0x28]
	0x0285523C MOV X0, X19
	0x02855240 LDP X20, X19, [X31 + 0x10]
	0x02855244 LDP X30, X21, [X31], #0x20
	0x02855248 RET
	0x0285524C STP X30, X21, [X31 - 0x20]!
	0x02855250 STP X20, X19, [X31 + 0x10]
	0x02855254 LDR X8, [X3 + 0x20]
	0x02855258 MOV X20, X1
	0x0285525C MOV X19, X2
	0x02855260 MOV X21, X0
	0x02855264 LDR X8, [X8 + 0xC0]
	0x02855268 LDR X1, [X8]
	0x0285526C BL 0x2EA3194
	0x02855270 STP X20, X19, [X21 + 0x28]
	0x02855274 LDP X20, X19, [X31 + 0x10]
	0x02855278 LDP X30, X21, [X31], #0x20
	0x0285527C RET
	0x02855280 STP X30, X21, [X31 - 0x20]!
	0x02855284 STP X20, X19, [X31 + 0x10]
	0x02855288 LDR X9, [X1 + 0x20]
	0x0285528C MOV X8, X0
	0x02855290 LDP X21, X20, [X8 + 0x28]
	0x02855294 MOV X19, X1
	0x02855298 LDR X9, [X9 + 0xC0]
	0x0285529C LDR X0, [X9 + 0x18]
	0x028552A0 LDRB W9, [X0 + 0x135]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X19, X2
	007 Move X21, [X0+40]
	008 Move X0, [X0+48]
	009 Move X8, [X8+192]
	010 Move X2, [X8+104]
	011 Call 0x21B5830, X0, X1
	012 Move X8, [X19+32]
	013 Move X20, X0
	014 Move X8, [X8+192]
	015 Move X8, [X8+24]
	016 Move W9, [X8+309]
	017 Move TEMP, X9
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {24}
	021 Move X0, X8
	022 Call 0x1C5D684
	023 Move X8, X0
	024 Move X0, X8
	025 Call 0x1C17F10
	026 Move X8, [X19+32]
	027 Move X19, X0
	028 Move X8, [X8+192]
	029 Move X8, [X8+40]
	030 Move X8, [X8+32]
	031 Move X8, [X8+192]
	032 Move X1, [X8]
	033 Call 0x2EA376C, X0
	034 Move [X19+40], X21
	035 Move [X19+48], X20
	036 Move X0, X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return X0

