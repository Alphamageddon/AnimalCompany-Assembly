Type: System.Linq.Enumerable/<SelectManyIterator>d__17`2

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x02974A38 AND W9, W8, 0xFFFFFFFE
	0x02974A3C ADDS W31, W9, 0x4
	0x02974A40 B.NE 0x2974A50
	0x02974A44 ADDS W31, W8, 0x4
	0x02974A48 B.EQ 0x2974A58
	0x02974A4C B 0x2974A60
	0x02974A50 CMP W8, 0x1
	0x02974A54 B.NE 0x2974A98
	0x02974A58 MOV X0, X19
	0x02974A5C BL 0x297501C
	0x02974A60 MOV X0, X19
	0x02974A64 LDP X20, X19, [X31 + 0x10]
	0x02974A68 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+28], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x02974A6C B 0x2974F6C
	0x02974A70 CMP W1, 0x1
	0x02974A74 MOV X21, X0
	0x02974A78 B.NE 0x2974AA4
	0x02974A7C MOV X0, X21
	0x02974A80 BL 0x3EB1AD0
	0x02974A84 LDR X20, [X0]
	0x02974A88 BL 0x3EB1AE0
	0x02974A8C MOV X0, X19
	0x02974A90 BL 0x2974F6C
	0x02974A94 CBNZ X20, 0x2974AAC
	0x02974A98 LDP X20, X19, [X31 + 0x10]
	0x02974A9C LDP X30, X21, [X31], #0x20
	0x02974AA0 RET
	0x02974AA4 MOV X20, X31
	0x02974AA8 B 0x2974AB8
	0x02974AAC MOV X0, X20
	0x02974AB0 BL 0x1C16F18
	0x02974AB4 MOV X21, X0
	0x02974AB8 MOV X0, X19
	0x02974ABC BL 0x2974F6C
	0x02974AC0 CBNZ X20, 0x2974ACC
	0x02974AC4 MOV X0, X21
	0x02974AC8 BL 0x1D2C690
	0x02974ACC MOV X0, X20
	0x02974AD0 BL 0x1C16F18
	0x02974AD4 BL 0x1990590
	0x02974AD8 SUB X31, X31, 0x50
	0x02974ADC STP X30, X0, [X31 + 0x20]
	0x02974AE0 STP X22, X21, [X31 + 0x30]
	0x02974AE4 STP X20, X19, [X31 + 0x40]
	0x02974AE8 ADRP X19, 0x1A66000
	0x02974AEC LDRB W8, [X19 + 0xE77]
	0x02974AF0 MOV X20, X1
	0x02974AF4 MOV X21, X0
	0x02974AF8 STR X1, [X31 + 0x18]
	0x02974AFC TBNZ X8, 0x0, 0x2974B14
	0x02974B00 ADRP X0, 0x177F000
	0x02974B04 LDR X0, [X0 + 0xE18]
	0x02974B08 BL 0x1C16CF4
	0x02974B0C MOVZ W8, 0x1
	0x02974B10 STRB W8, [X19 + 0xE77]
	0x02974B14 ADD X8, X31, 0x28
	0x02974B18 ADD X9, X31, 0x18

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+16]
	006 Move X19, X0
	007 And W9, W8, 0xFFFFFFFE
	008 Add W31, W9, 4
	009 Add W31, W8, 4
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X0, X19
	012 Call 0x2975060, X0
	013 Move X0, X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Move X21, [X31+40]
	018 Call 0x2974FB0, X0
	019 Return 
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X21, X0
	022 Move X0, X21
	023 Call 0x3EB2AD0
	024 Move X20, [X0]
	025 Call 0x3EB2AE0
	026 Move X0, X19
	027 Call 0x2974FB0, X0
	028 Compare X20, 0
	029 JumpIfNotEqual {36}
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return 
	035 Move X20, X31
	036 Move X0, X20
	037 Call 0x1C17F18
	038 Move X21, X0
	039 Move X0, X19
	040 Call 0x2974FB0, X0
	041 Compare X20, 0
	042 JumpIfNotEqual {45}
	043 Move X0, X21
	044 Call 0x1D2D690
	045 Move X0, X20
	046 Call 0x1C17F18
	047 Call 0x1991590

Method: System.Boolean MoveNext()

Disassembly:
	0x02974B1C STP X8, X9, [X31 + 0x8]
	0x02974B20 LDR W8, [X21 + 0x10]
	0x02974B24 ADRP X22, 0x177F000
	0x02974B28 LDR X22, [X22 + 0xE18]
	0x02974B2C CMP W8, 0x1
	0x02974B30 B.EQ 0x2974BA4
	0x02974B34 CBNZ W8, 0x2974BF0
	0x02974B38 LDR X19, [X21 + 0x20]
	0x02974B3C MOVN W8, 0x0
	0x02974B40 STR W8, [X21 + 0x10]
	0x02974B44 CBZ X19, 0x2974BE4
	0x02974B48 LDR X8, [X20 + 0x20]
	0x02974B4C LDR X8, [X8 + 0xC0]
	0x02974B50 LDR X1, [X8 + 0x18]
	0x02974B54 LDRB W8, [X1 + 0x135]
	0x02974B58 TBNZ X8, 0x0, 0x2974B68
	0x02974B5C MOV X0, X1
	0x02974B60 BL 0x1C5C684
	0x02974B64 MOV X1, X0
	0x02974B68 LDR X8, [X19]
	0x02974B6C LDRH W9, [X8 + 0x12E]
	0x02974B70 CBZ X9, 0x2974B94
	0x02974B74 LDR X10, [X8 + 0xB0]
	0x02974B78 ADD X10, X10, 0x8
	0x02974B7C LDUR X11, [X10 - 0x8]
	0x02974B80 CMP X11, X1
	0x02974B84 B.EQ 0x2974BB4
	0x02974B88 SUBS X9, X9, 0x1
	0x02974B8C ADD X10, X10, 0x10
	0x02974B90 B.NE 0x2974B7C
	0x02974B94 MOV X0, X19
	0x02974B98 MOV W2, W31
	0x02974B9C BL 0x1C5C788
	0x02974BA0 B 0x2974BC0
	0x02974BA4 LDR X19, [X21 + 0x48]
	0x02974BA8 MOVN W8, 0x3
	0x02974BAC STR W8, [X21 + 0x10]
	0x02974BB0 B 0x2974D94
	0x02974BB4 LDRSW X9, [X10]
	0x02974BB8 ADD X8, X8, X9, 0x4, LSL
	0x02974BBC ADD X0, X8, 0x138
	0x02974BC0 LDP X8, X1, [X0]
	0x02974BC4 MOV X0, X19
	0x02974BC8 BLR X8
	0x02974BCC LDR X8, [X31 + 0x28]
	0x02974BD0 MOV X19, X0
	0x02974BD4 MOVN W9, 0x2
	0x02974BD8 STR X0, [X8 + 0x40]
	0x02974BDC STR W9, [X8 + 0x10]
	0x02974BE0 B 0x2974BF8
	0x02974BE4 BL 0x1C16F20
	0x02974BE8 B 0x2974F10
	0x02974BEC B 0x2974F10
	0x02974BF0 MOV W0, W31
	0x02974BF4 B 0x2974EB8
	0x02974BF8 CBZ X19, 0x2974ED0
	0x02974BFC LDR X8, [X19]
	0x02974C00 LDR X1, [X22]
	0x02974C04 LDRH W9, [X8 + 0x12E]
	0x02974C08 CBZ X9, 0x2974C2C
	0x02974C0C LDR X10, [X8 + 0xB0]
	0x02974C10 ADD X10, X10, 0x8
	0x02974C14 LDUR X11, [X10 - 0x8]
	0x02974C18 CMP X11, X1
	0x02974C1C B.EQ 0x2974C3C
	0x02974C20 SUBS X9, X9, 0x1
	0x02974C24 ADD X10, X10, 0x10
	0x02974C28 B.NE 0x2974C14
	0x02974C2C MOV X0, X19
	0x02974C30 MOV W2, W31
	0x02974C34 BL 0x1C5C788
	0x02974C38 B 0x2974C48
	0x02974C3C LDRSW X9, [X10]
	0x02974C40 ADD X8, X8, X9, 0x4, LSL
	0x02974C44 ADD X0, X8, 0x138
	0x02974C48 LDP X8, X1, [X0]
	0x02974C4C MOV X0, X19
	0x02974C50 BLR X8
	0x02974C54 MOV W8, W0
	0x02974C58 LDR X0, [X31 + 0x28]
	0x02974C5C TBZ X8, 0x0, 0x2974E10
	0x02974C60 LDR X19, [X0 + 0x40]
	0x02974C64 CBZ X19, 0x2974EDC
	0x02974C68 LDR X8, [X31 + 0x18]
	0x02974C6C LDR X8, [X8 + 0x20]
	0x02974C70 LDR X8, [X8 + 0xC0]
	0x02974C74 LDR X1, [X8 + 0x28]
	0x02974C78 LDRB W8, [X1 + 0x135]
	0x02974C7C TBNZ X8, 0x0, 0x2974C8C
	0x02974C80 MOV X0, X1
	0x02974C84 BL 0x1C5C684
	0x02974C88 MOV X1, X0
	0x02974C8C LDR X8, [X19]
	0x02974C90 LDRH W9, [X8 + 0x12E]
	0x02974C94 CBZ X9, 0x2974CB8
	0x02974C98 LDR X10, [X8 + 0xB0]
	0x02974C9C ADD X10, X10, 0x8
	0x02974CA0 LDUR X11, [X10 - 0x8]
	0x02974CA4 CMP X11, X1
	0x02974CA8 B.EQ 0x2974CC8
	0x02974CAC SUBS X9, X9, 0x1
	0x02974CB0 ADD X10, X10, 0x10
	0x02974CB4 B.NE 0x2974CA0
	0x02974CB8 MOV X0, X19
	0x02974CBC MOV W2, W31
	0x02974CC0 BL 0x1C5C788
	0x02974CC4 B 0x2974CD4
	0x02974CC8 LDRSW X9, [X10]
	0x02974CCC ADD X8, X8, X9, 0x4, LSL
	0x02974CD0 ADD X0, X8, 0x138
	0x02974CD4 LDP X8, X1, [X0]
	0x02974CD8 MOV X0, X19
	0x02974CDC BLR X8
	0x02974CE0 MOV X1, X0
	0x02974CE4 LDR X8, [X31 + 0x28]
	0x02974CE8 LDR X8, [X8 + 0x30]
	0x02974CEC CBZ X8, 0x2974ED4
	0x02974CF0 LDR X0, [X8 + 0x40]
	0x02974CF4 LDR X9, [X8 + 0x18]
	0x02974CF8 LDR X2, [X8 + 0x28]
	0x02974CFC BLR X9
	0x02974D00 MOV X19, X0
	0x02974D04 CBZ X0, 0x2974ED8
	0x02974D08 LDR X8, [X31 + 0x18]
	0x02974D0C LDR X8, [X8 + 0x20]
	0x02974D10 LDR X8, [X8 + 0xC0]
	0x02974D14 LDR X1, [X8 + 0x50]
	0x02974D18 LDRB W8, [X1 + 0x135]
	0x02974D1C TBNZ X8, 0x0, 0x2974D2C
	0x02974D20 MOV X0, X1
	0x02974D24 BL 0x1C5C684
	0x02974D28 MOV X1, X0
	0x02974D2C LDR X8, [X19]
	0x02974D30 LDRH W9, [X8 + 0x12E]
	0x02974D34 CBZ X9, 0x2974D58
	0x02974D38 LDR X10, [X8 + 0xB0]
	0x02974D3C ADD X10, X10, 0x8
	0x02974D40 LDUR X11, [X10 - 0x8]
	0x02974D44 CMP X11, X1
	0x02974D48 B.EQ 0x2974D68
	0x02974D4C SUBS X9, X9, 0x1
	0x02974D50 ADD X10, X10, 0x10
	0x02974D54 B.NE 0x2974D40
	0x02974D58 MOV X0, X19
	0x02974D5C MOV W2, W31
	0x02974D60 BL 0x1C5C788
	0x02974D64 B 0x2974D74
	0x02974D68 LDRSW X9, [X10]
	0x02974D6C ADD X8, X8, X9, 0x4, LSL
	0x02974D70 ADD X0, X8, 0x138
	0x02974D74 LDP X8, X1, [X0]
	0x02974D78 MOV X0, X19
	0x02974D7C BLR X8
	0x02974D80 LDR X8, [X31 + 0x28]
	0x02974D84 MOVN W9, 0x3
	0x02974D88 MOV X19, X0
	0x02974D8C STR X0, [X8 + 0x48]
	0x02974D90 STR W9, [X8 + 0x10]
	0x02974D94 CBZ X19, 0x2974ECC
	0x02974D98 LDR X8, [X19]
	0x02974D9C LDR X1, [X22]
	0x02974DA0 LDRH W9, [X8 + 0x12E]
	0x02974DA4 CBZ X9, 0x2974DC8
	0x02974DA8 LDR X10, [X8 + 0xB0]
	0x02974DAC ADD X10, X10, 0x8
	0x02974DB0 LDUR X11, [X10 - 0x8]
	0x02974DB4 CMP X11, X1
	0x02974DB8 B.EQ 0x2974DD8
	0x02974DBC SUBS X9, X9, 0x1
	0x02974DC0 ADD X10, X10, 0x10
	0x02974DC4 B.NE 0x2974DB0
	0x02974DC8 MOV X0, X19
	0x02974DCC MOV W2, W31
	0x02974DD0 BL 0x1C5C788
	0x02974DD4 B 0x2974DE4
	0x02974DD8 LDRSW X9, [X10]
	0x02974DDC ADD X8, X8, X9, 0x4, LSL
	0x02974DE0 ADD X0, X8, 0x138
	0x02974DE4 LDP X8, X1, [X0]
	0x02974DE8 MOV X0, X19
	0x02974DEC BLR X8
	0x02974DF0 MOV W8, W0
	0x02974DF4 LDR X0, [X31 + 0x28]
	0x02974DF8 TBNZ X8, 0x0, 0x2974E24
	0x02974DFC BL 0x297501C
	0x02974E00 LDR X8, [X31 + 0x28]
	0x02974E04 LDR X19, [X8 + 0x40]
	0x02974E08 STR X31, [X8 + 0x48]
	0x02974E0C B 0x2974BF8
	0x02974E10 BL 0x2974F6C
	0x02974E14 LDR X8, [X31 + 0x28]
	0x02974E18 MOV W0, W31
	0x02974E1C STR X31, [X8 + 0x40]
	0x02974E20 B 0x2974EB8
	0x02974E24 LDR X19, [X0 + 0x48]
	0x02974E28 CBZ X19, 0x2974EE0
	0x02974E2C LDR X8, [X31 + 0x18]
	0x02974E30 LDR X8, [X8 + 0x20]
	0x02974E34 LDR X8, [X8 + 0xC0]
	0x02974E38 LDR X1, [X8 + 0x60]
	0x02974E3C LDRB W8, [X1 + 0x135]
	0x02974E40 TBNZ X8, 0x0, 0x2974E50
	0x02974E44 MOV X0, X1
	0x02974E48 BL 0x1C5C684
	0x02974E4C MOV X1, X0
	0x02974E50 LDR X8, [X19]
	0x02974E54 LDRH W9, [X8 + 0x12E]
	0x02974E58 CBZ X9, 0x2974E7C
	0x02974E5C LDR X10, [X8 + 0xB0]
	0x02974E60 ADD X10, X10, 0x8
	0x02974E64 LDUR X11, [X10 - 0x8]
	0x02974E68 CMP X11, X1
	0x02974E6C B.EQ 0x2974E8C
	0x02974E70 SUBS X9, X9, 0x1
	0x02974E74 ADD X10, X10, 0x10
	0x02974E78 B.NE 0x2974E64
	0x02974E7C MOV X0, X19
	0x02974E80 MOV W2, W31
	0x02974E84 BL 0x1C5C788
	0x02974E88 B 0x2974E98
	0x02974E8C LDRSW X9, [X10]
	0x02974E90 ADD X8, X8, X9, 0x4, LSL
	0x02974E94 ADD X0, X8, 0x138
	0x02974E98 LDP X8, X1, [X0]
	0x02974E9C MOV X0, X19
	0x02974EA0 BLR X8
	0x02974EA4 LDR X9, [X31 + 0x28]
	0x02974EA8 MOV X8, X0
	0x02974EAC MOVZ W0, 0x1
	0x02974EB0 STUR X8, [X9 + 0x14]
	0x02974EB4 STR W0, [X9 + 0x10]
	0x02974EB8 LDP X20, X19, [X31 + 0x40]
	0x02974EBC LDP X22, X21, [X31 + 0x30]
	0x02974EC0 LDR X30, [X31 + 0x20]
	0x02974EC4 ADD X31, X31, 0x50
	0x02974EC8 RET
	0x02974ECC BL 0x1C16F20
	0x02974ED0 BL 0x1C16F20
	0x02974ED4 BL 0x1C16F20
	0x02974ED8 BL 0x1C16F20
	0x02974EDC BL 0x1C16F20
	0x02974EE0 BL 0x1C16F20
	0x02974EE4 B 0x2974F10
	0x02974EE8 B 0x2974F10
	0x02974EEC B 0x2974F10
	0x02974EF0 B 0x2974F10
	0x02974EF4 B 0x2974F10
	0x02974EF8 B 0x2974F10
	0x02974EFC B 0x2974F10
	0x02974F00 B 0x2974F10
	0x02974F04 B 0x2974F10
	0x02974F08 B 0x2974F10
	0x02974F0C B 0x2974F10
	0x02974F10 CMP W1, 0x1
	0x02974F14 B.NE 0x2974F44
	0x02974F18 BL 0x3EB1AD0
	0x02974F1C LDR X19, [X0]
	0x02974F20 STR X19, [X31]
	0x02974F24 BL 0x3EB1AE0
	0x02974F28 CBZ X19, 0x2974BF0
	0x02974F2C ADD X8, X31, 0x0
	0x02974F30 ADD X0, X8, 0x8
	0x02974F34 BL 0x19CF790
	0x02974F38 MOV X0, X19
	0x02974F3C BL 0x1C16F18
	0x02974F40 CBNZ X19, 0x2974F48
	0x02974F44 BL 0x1D2C690
	0x02974F48 LDR X8, [X31 + 0x18]
	0x02974F4C LDR X0, [X31 + 0x28]
	0x02974F50 LDR X8, [X8 + 0x20]
	0x02974F54 LDR X8, [X8 + 0xC0]
	0x02974F58 LDR X1, [X8 + 0x78]
	0x02974F5C BL 0x2974A28
	0x02974F60 MOV X0, X19
	0x02974F64 BL 0x1C16F18
	0x02974F68 BL 0x1990590
	0x02974F6C STR X30, [X31 - 0x20]!
	0x02974F70 STP X20, X19, [X31 + 0x10]
	0x02974F74 ADRP X19, 0x1A66000
	0x02974F78 LDRB W8, [X19 + 0xE78]
	0x02974F7C MOV X20, X0
	0x02974F80 TBNZ X8, 0x0, 0x2974F98
	0x02974F84 ADRP X0, 0x177F000
	0x02974F88 LDR X0, [X0 + 0xE00]
	0x02974F8C BL 0x1C16CF4
	0x02974F90 MOVZ W8, 0x1
	0x02974F94 STRB W8, [X19 + 0xE78]
	0x02974F98 LDR X19, [X20 + 0x40]
	0x02974F9C MOVN W8, 0x0
	0x02974FA0 STR W8, [X20 + 0x10]
	0x02974FA4 CBZ X19, 0x2974FF0
	0x02974FA8 ADRP X10, 0x177F000
	0x02974FAC LDR X8, [X19]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X0
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X19, 0x1A67000
	009 Move W8, [X19+3697]
	010 Move X20, X1
	011 Move X21, X0
	012 Move [X31+24], X1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x1780000
	018 Move X0, [X0+3608]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+3697], W8
	022 Add X8, X31, 40
	023 Add X9, X31, 24
	024 Move [X31+8], X8
	025 Move [X31+16], X9
	026 Move W8, [X21+16]
	027 Move X22, 0x1780000
	028 Move X22, [X22+3608]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Compare W8, 0
	031 JumpIfNotEqual {83}
	032 Move X19, [X21+32]
	033 Move TEMP, 0
	034 Not TEMP
	035 Move W8, TEMP
	036 Move [X21+16], W8
	037 Compare X19, 0
	038 JumpIfEqual {82}
	039 Move X8, [X20+32]
	040 Move X8, [X8+192]
	041 Move X1, [X8+24]
	042 Move W8, [X1+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {50}
	047 Move X0, X1
	048 Call 0x1C5D684
	049 Move X1, X0
	050 Move X8, [X19]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Compare X9, 0
	053 JumpIfEqual {60}
	054 Move X10, [X8+176]
	055 Add X10, X10, 8
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Subtract X9, X9, 1
	059 Add X10, X10, 16
	060 Move X0, X19
	061 Move W2, W31
	062 Call 0x1C5D788
	063 Move X19, [X21+72]
	064 Move TEMP, 3
	065 Not TEMP
	066 Move W8, TEMP
	067 Move [X21+16], W8
	068 NotImplemented "Instruction LDRSW not yet implemented."
	069 Add X8, X8, X9
	070 Add X0, X8, 312
	071 Move X8, [X0]
	072 Move X1, [X0+8]
	073 Move X0, X19
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move X8, [X31+40]
	076 Move X19, X0
	077 Move TEMP, 2
	078 Not TEMP
	079 Move W9, TEMP
	080 Move [X8+64], X0
	081 Move [X8+16], W9
	082 Call 0x1C17F20
	083 Move W0, W31
	084 Compare X19, 0
	085 JumpIfEqual {284}
	086 Move X8, [X19]
	087 Move X1, [X22]
	088 NotImplemented "Instruction LDRH not yet implemented."
	089 Compare X9, 0
	090 JumpIfEqual {97}
	091 Move X10, [X8+176]
	092 Add X10, X10, 8
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Subtract X9, X9, 1
	096 Add X10, X10, 16
	097 Move X0, X19
	098 Move W2, W31
	099 Call 0x1C5D788
	100 NotImplemented "Instruction LDRSW not yet implemented."
	101 Add X8, X8, X9
	102 Add X0, X8, 312
	103 Move X8, [X0]
	104 Move X1, [X0+8]
	105 Move X0, X19
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move W8, W0
	108 Move X0, [X31+40]
	109 Move TEMP, X8
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {232}
	113 Move X19, [X0+64]
	114 Compare X19, 0
	115 JumpIfEqual {287}
	116 Move X8, [X31+24]
	117 Move X8, [X8+32]
	118 Move X8, [X8+192]
	119 Move X1, [X8+40]
	120 Move W8, [X1+309]
	121 Move TEMP, X8
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfEqual {128}
	125 Move X0, X1
	126 Call 0x1C5D684
	127 Move X1, X0
	128 Move X8, [X19]
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move X0, X19
	139 Move W2, W31
	140 Call 0x1C5D788
	141 NotImplemented "Instruction LDRSW not yet implemented."
	142 Add X8, X8, X9
	143 Add X0, X8, 312
	144 Move X8, [X0]
	145 Move X1, [X0+8]
	146 Move X0, X19
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Move W1, W0
	149 Move X8, [X31+40]
	150 Move X8, [X8+48]
	151 Compare X8, 0
	152 JumpIfEqual {285}
	153 Move X0, [X8+64]
	154 Move X9, [X8+24]
	155 Move X2, [X8+40]
	156 NotImplemented "Instruction BLR not yet implemented."
	157 Move X19, X0
	158 Compare X0, 0
	159 JumpIfEqual {286}
	160 Move X8, [X31+24]
	161 Move X8, [X8+32]
	162 Move X8, [X8+192]
	163 Move X1, [X8+80]
	164 Move W8, [X1+309]
	165 Move TEMP, X8
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfEqual {172}
	169 Move X0, X1
	170 Call 0x1C5D684
	171 Move X1, X0
	172 Move X8, [X19]
	173 NotImplemented "Instruction LDRH not yet implemented."
	174 Compare X9, 0
	175 JumpIfEqual {182}
	176 Move X10, [X8+176]
	177 Add X10, X10, 8
	178 NotImplemented "Instruction LDUR not yet implemented."
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Subtract X9, X9, 1
	181 Add X10, X10, 16
	182 Move X0, X19
	183 Move W2, W31
	184 Call 0x1C5D788
	185 NotImplemented "Instruction LDRSW not yet implemented."
	186 Add X8, X8, X9
	187 Add X0, X8, 312
	188 Move X8, [X0]
	189 Move X1, [X0+8]
	190 Move X0, X19
	191 NotImplemented "Instruction BLR not yet implemented."
	192 Move X8, [X31+40]
	193 Move TEMP, 3
	194 Not TEMP
	195 Move W9, TEMP
	196 Move X19, X0
	197 Move [X8+72], X0
	198 Move [X8+16], W9
	199 Compare X19, 0
	200 JumpIfEqual {283}
	201 Move X8, [X19]
	202 Move X1, [X22]
	203 NotImplemented "Instruction LDRH not yet implemented."
	204 Compare X9, 0
	205 JumpIfEqual {212}
	206 Move X10, [X8+176]
	207 Add X10, X10, 8
	208 NotImplemented "Instruction LDUR not yet implemented."
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Subtract X9, X9, 1
	211 Add X10, X10, 16
	212 Move X0, X19
	213 Move W2, W31
	214 Call 0x1C5D788
	215 NotImplemented "Instruction LDRSW not yet implemented."
	216 Add X8, X8, X9
	217 Add X0, X8, 312
	218 Move X8, [X0]
	219 Move X1, [X0+8]
	220 Move X0, X19
	221 NotImplemented "Instruction BLR not yet implemented."
	222 Move W8, W0
	223 Move X0, [X31+40]
	224 Move TEMP, X8
	225 And TEMP, TEMP, 1
	226 Compare TEMP, 1
	227 JumpIfEqual {236}
	228 Call 0x2975060, X0
	229 Move X8, [X31+40]
	230 Move X19, [X8+64]
	231 Move [X8+72], X31
	232 Call 0x2974FB0, X0
	233 Move X8, [X31+40]
	234 Move W0, W31
	235 Move [X8+64], X31
	236 Move X19, [X0+72]
	237 Compare X19, 0
	238 JumpIfEqual {288}
	239 Move X8, [X31+24]
	240 Move X8, [X8+32]
	241 Move X8, [X8+192]
	242 Move X1, [X8+96]
	243 Move W8, [X1+309]
	244 Move TEMP, X8
	245 And TEMP, TEMP, 1
	246 Compare TEMP, 1
	247 JumpIfEqual {251}
	248 Move X0, X1
	249 Call 0x1C5D684
	250 Move X1, X0
	251 Move X8, [X19]
	252 NotImplemented "Instruction LDRH not yet implemented."
	253 Compare X9, 0
	254 JumpIfEqual {261}
	255 Move X10, [X8+176]
	256 Add X10, X10, 8
	257 NotImplemented "Instruction LDUR not yet implemented."
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Subtract X9, X9, 1
	260 Add X10, X10, 16
	261 Move X0, X19
	262 Move W2, W31
	263 Call 0x1C5D788
	264 NotImplemented "Instruction LDRSW not yet implemented."
	265 Add X8, X8, X9
	266 Add X0, X8, 312
	267 Move X8, [X0]
	268 Move X1, [X0+8]
	269 Move X0, X19
	270 NotImplemented "Instruction BLR not yet implemented."
	271 Move X9, [X31+40]
	272 Move X8, X0
	273 Move W0, 1
	274 Move [X9+20], X8
	275 Move [X9+16], W0
	276 Move X20, [X31+64]
	277 Move X19, [X31+72]
	278 Move X22, [X31+48]
	279 Move X21, [X31+56]
	280 Move X30, [X31+32]
	281 Add X31, X31, 80
	282 Return X0
	283 Call 0x1C17F20
	284 Call 0x1C17F20
	285 Call 0x1C17F20
	286 Call 0x1C17F20
	287 Call 0x1C17F20
	288 Call 0x1C17F20
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Call 0x3EB2AD0
	291 Move X19, [X0]
	292 Move [X31], X19
	293 Call 0x3EB2AE0
	294 Compare X19, 0
	295 JumpIfEqual {83}
	296 Add X8, X31, 0
	297 Add X0, X8, 8
	298 Call 0x19D0758
	299 Move X0, X19
	300 Call 0x1C17F18
	301 Compare X19, 0
	302 JumpIfNotEqual {304}
	303 Call 0x1D2D690
	304 Move X8, [X31+24]
	305 Move X0, [X31+40]
	306 Move X8, [X8+32]
	307 Move X8, [X8+192]
	308 Move X1, [X8+120]
	309 Call 0x2974A6C, X0
	310 Move X0, X19
	311 Call 0x1C17F18
	312 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x02974FB0 LDR X10, [X10 + 0xE00]
	0x02974FB4 LDRH W9, [X8 + 0x12E]
	0x02974FB8 LDR X1, [X10]
	0x02974FBC CBZ X9, 0x2974FE0
	0x02974FC0 LDR X10, [X8 + 0xB0]
	0x02974FC4 ADD X10, X10, 0x8
	0x02974FC8 LDUR X11, [X10 - 0x8]
	0x02974FCC CMP X11, X1
	0x02974FD0 B.EQ 0x2974FFC
	0x02974FD4 SUBS X9, X9, 0x1
	0x02974FD8 ADD X10, X10, 0x10
	0x02974FDC B.NE 0x2974FC8
	0x02974FE0 MOV X0, X19
	0x02974FE4 MOV W2, W31
	0x02974FE8 BL 0x1C5C788
	0x02974FEC B 0x2975008
	0x02974FF0 LDP X20, X19, [X31 + 0x10]
	0x02974FF4 LDR X30, [X31], #0x20
	0x02974FF8 RET
	0x02974FFC LDRSW X9, [X10]
	0x02975000 ADD X8, X8, X9, 0x4, LSL
	0x02975004 ADD X0, X8, 0x138
	0x02975008 LDP X2, X1, [X0]
	0x0297500C MOV X0, X19
	0x02975010 LDP X20, X19, [X31 + 0x10]
	0x02975014 LDR X30, [X31], #0x20
	0x02975018 BR X2
	0x0297501C STR X30, [X31 - 0x20]!
	0x02975020 STP X20, X19, [X31 + 0x10]
	0x02975024 ADRP X19, 0x1A65000
	0x02975028 LDRB W8, [X19 + 0xE79]
	0x0297502C MOV X20, X0
	0x02975030 TBNZ X8, 0x0, 0x2975048
	0x02975034 ADRP X0, 0x177E000
	0x02975038 LDR X0, [X0 + 0xE00]
	0x0297503C BL 0x1C16CF4
	0x02975040 MOVZ W8, 0x1
	0x02975044 STRB W8, [X19 + 0xE79]
	0x02975048 LDR X19, [X20 + 0x48]
	0x0297504C MOVN W8, 0x2
	0x02975050 STR W8, [X20 + 0x10]
	0x02975054 CBZ X19, 0x29750A0
	0x02975058 ADRP X10, 0x177E000
	0x0297505C LDR X8, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1A67000
	005 Move W8, [X19+3698]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1780000
	012 Move X0, [X0+3584]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X19+3698], W8
	016 Move X19, [X20+64]
	017 Move TEMP, 0
	018 Not TEMP
	019 Move W8, TEMP
	020 Move [X20+16], W8
	021 Compare X19, 0
	022 JumpIfEqual {39}
	023 Move X10, 0x1780000
	024 Move X8, [X19]
	025 Move X10, [X10+3584]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move X0, X19
	037 Move W2, W31
	038 Call 0x1C5D788
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return 
	043 NotImplemented "Instruction LDRSW not yet implemented."
	044 Add X8, X8, X9
	045 Add X0, X8, 312
	046 Move X2, [X0]
	047 Move X1, [X0+8]
	048 Move X0, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 CallNoReturn X2

Method: System.Void <>m__Finally2()

Disassembly:
	0x02975060 LDR X10, [X10 + 0xE00]
	0x02975064 LDRH W9, [X8 + 0x12E]
	0x02975068 LDR X1, [X10]
	0x0297506C CBZ X9, 0x2975090
	0x02975070 LDR X10, [X8 + 0xB0]
	0x02975074 ADD X10, X10, 0x8
	0x02975078 LDUR X11, [X10 - 0x8]
	0x0297507C CMP X11, X1
	0x02975080 B.EQ 0x29750AC
	0x02975084 SUBS X9, X9, 0x1
	0x02975088 ADD X10, X10, 0x10
	0x0297508C B.NE 0x2975078
	0x02975090 MOV X0, X19
	0x02975094 MOV W2, W31
	0x02975098 BL 0x1C5C788
	0x0297509C B 0x29750B8
	0x029750A0 LDP X20, X19, [X31 + 0x10]
	0x029750A4 LDR X30, [X31], #0x20
	0x029750A8 RET
	0x029750AC LDRSW X9, [X10]
	0x029750B0 ADD X8, X8, X9, 0x4, LSL
	0x029750B4 ADD X0, X8, 0x138
	0x029750B8 LDP X2, X1, [X0]
	0x029750BC MOV X0, X19
	0x029750C0 LDP X20, X19, [X31 + 0x10]
	0x029750C4 LDR X30, [X31], #0x20
	0x029750C8 BR X2
	0x029750CC LDUR X0, [X0 + 0x14]
	0x029750D0 RET
	0x029750D4 STR X30, [X31 - 0x20]!
	0x029750D8 STP X20, X19, [X31 + 0x10]
	0x029750DC ADRP X0, 0x177E000
	0x029750E0 LDR X0, [X0 + 0xB40]
	0x029750E4 MOV X19, X1
	0x029750E8 BL 0x1C16D08
	0x029750EC BL 0x1C16F10
	0x029750F0 MOV X1, X31
	0x029750F4 MOV X20, X0
	0x029750F8 BL 0x3380310
	0x029750FC MOV X0, X20
	0x02975100 MOV X1, X19
	0x02975104 BL 0x1C16DEC
	0x02975108 STR X30, [X31 - 0x10]!
	0x0297510C LDUR X8, [X0 + 0x14]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1A66000
	005 Move W8, [X19+3699]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x177F000
	012 Move X0, [X0+3584]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X19+3699], W8
	016 Move X19, [X20+72]
	017 Move TEMP, 2
	018 Not TEMP
	019 Move W8, TEMP
	020 Move [X20+16], W8
	021 Compare X19, 0
	022 JumpIfEqual {39}
	023 Move X10, 0x177F000
	024 Move X8, [X19]
	025 Move X10, [X10+3584]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move X0, X19
	037 Move W2, W31
	038 Call 0x1C5D788
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return 
	043 NotImplemented "Instruction LDRSW not yet implemented."
	044 Add X8, X8, X9
	045 Add X0, X8, 312
	046 Move X2, [X0]
	047 Move X1, [X0+8]
	048 Move X0, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 CallNoReturn X2

Method: TResult System.Collections.Generic.IEnumerator<TResult>.get_Current()

Disassembly:
	0x02975110 STR X8, [X31 + 0x8]
	0x02975114 LDR X8, [X1 + 0x20]

ISIL:
	001 NotImplemented "Instruction LDUR not yet implemented."
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x02975118 ADD X1, X31, 0x8
	0x0297511C LDR X8, [X8 + 0xC0]
	0x02975120 LDR X0, [X8 + 0x70]
	0x02975124 BL 0x1C16E04
	0x02975128 LDR X30, [X31], #0x10
	0x0297512C RET
	0x02975130 STP X30, X21, [X31 - 0x20]!
	0x02975134 STP X20, X19, [X31 + 0x10]
	0x02975138 LDR W8, [X0 + 0x10]
	0x0297513C MOV X19, X0
	0x02975140 MOV X20, X1
	0x02975144 ADDS W31, W8, 0x2
	0x02975148 B.NE 0x297516C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x177F000
	005 Move X0, [X0+2880]
	006 Move X19, X1
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X1, X31
	010 Move X20, X0
	011 Call NotSupportedException..ctor, X0
	012 Move X0, X20
	013 Move X1, X19
	014 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x0297514C LDR W21, [X19 + 0x1C]
	0x02975150 MOV X0, X31
	0x02975154 BL 0x33C151C
	0x02975158 CMP W21, W0
	0x0297515C B.NE 0x297516C
	0x02975160 STR W31, [X19 + 0x10]
	0x02975164 MOV X20, X19
	0x02975168 B 0x29751A4
	0x0297516C LDR X8, [X20 + 0x20]
	0x02975170 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction LDUR not yet implemented."
	003 Move [X31+8], X8
	004 Move X8, [X1+32]
	005 Add X1, X31, 8
	006 Move X8, [X8+192]
	007 Move X0, [X8+112]
	008 Call 0x1C17E04
	009 Move X30, [X31+16]
	010 Return X0

Method: System.Collections.Generic.IEnumerator`1<TResult> System.Collections.Generic.IEnumerable<TResult>.GetEnumerator()

Disassembly:
	0x02975174 LDR X0, [X8]
	0x02975178 LDRB W8, [X0 + 0x135]
	0x0297517C TBNZ X8, 0x0, 0x2975184
	0x02975180 BL 0x1C5C684
	0x02975184 BL 0x1C16F10
	0x02975188 MOV X1, X31
	0x0297518C MOV X20, X0
	0x02975190 BL 0x33BDD8C
	0x02975194 MOV X0, X31
	0x02975198 STR W31, [X20 + 0x10]
	0x0297519C BL 0x33C151C
	0x029751A0 STR W0, [X20 + 0x1C]
	0x029751A4 LDR X8, [X19 + 0x28]
	0x029751A8 MOV X0, X20
	0x029751AC STR X8, [X20 + 0x20]
	0x029751B0 LDR X8, [X19 + 0x38]
	0x029751B4 STR X8, [X20 + 0x30]
	0x029751B8 LDP X20, X19, [X31 + 0x10]
	0x029751BC LDP X30, X21, [X31], #0x20
	0x029751C0 RET
	0x029751C4 LDR X8, [X1 + 0x20]
	0x029751C8 LDR X8, [X8 + 0xC0]
	0x029751CC LDR X1, [X8 + 0x88]
	0x029751D0 B 0x2975130
	0x029751D4 STR X30, [X31 - 0x20]!
	0x029751D8 STP X20, X19, [X31 + 0x10]
	0x029751DC MOV W19, W1
	0x029751E0 MOV X1, X31
	0x029751E4 MOV X20, X0
	0x029751E8 BL 0x33BDD8C
	0x029751EC MOV X0, X31
	0x029751F0 STR W19, [X20 + 0x10]
	0x029751F4 BL 0x33C151C
	0x029751F8 STR W0, [X20 + 0x18]
	0x029751FC LDP X20, X19, [X31 + 0x10]
	0x02975200 LDR X30, [X31], #0x20
	0x02975204 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+16]
	006 Move X19, X0
	007 Move X20, X1
	008 Add W31, W8, 2
	009 Move W21, [X19+28]
	010 Move X0, X31
	011 Call Environment.get_CurrentManagedThreadId
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move [X19+16], W31
	014 Move X20, X19
	015 Move X8, [X20+32]
	016 Move X8, [X8+192]
	017 Move X0, [X8]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X20, X0
	027 Call Object..ctor, X0
	028 Move X0, X31
	029 Move [X20+16], W31
	030 Call Environment.get_CurrentManagedThreadId
	031 Move [X20+28], W0
	032 Move X8, [X19+40]
	033 Move X0, X20
	034 Move [X20+32], X8
	035 Move X8, [X19+56]
	036 Move [X20+48], X8
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x02975208 STP X30, X21, [X31 - 0x20]!
	0x0297520C STP X20, X19, [X31 + 0x10]
	0x02975210 LDR W8, [X0 + 0x10]
	0x02975214 MOV X19, X0

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+136]
	004 Call 0x2975174, X0
	005 Return X0

