Type: System.Linq.Lookup`2/Grouping/<GetEnumerator>d__7

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x0239CCB8 ADD X1, X1, 0xE58
	0x0239CCBC MOV X2, X31
	0x0239CCC0 BL 0x3EB1B00
	0x0239CCC4 MOV X21, X0
	0x0239CCC8 BL 0x3EB1AE0
	0x0239CCCC MOV X0, X21
	0x0239CCD0 BL 0x1D2C690
	0x0239CCD4 BL 0x1990590
	0x0239CCD8 SUB X31, X31, 0x110
	0x0239CCDC STP X29, X30, [X31 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x0239CCE0 STP X26, X25, [X31 + 0xD0]

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x0239CCE4 STP X24, X23, [X31 + 0xE0]
	0x0239CCE8 STP X22, X21, [X31 + 0xF0]
	0x0239CCEC STP X20, X19, [X31 + 0x100]
	0x0239CCF0 ADD W8, W1, W2
	0x0239CCF4 SUB W25, W8, 0x1
	0x0239CCF8 MOV W19, W1
	0x0239CCFC CMP W25, W1
	0x0239CD00 B.GE 0x239CD28
	0x0239CD04 ORN W24, W31, W19, 0x0
	0x0239CD08 MOV W0, W24
	0x0239CD0C LDP X20, X19, [X31 + 0x100]
	0x0239CD10 LDP X22, X21, [X31 + 0xF0]
	0x0239CD14 LDP X24, X23, [X31 + 0xE0]
	0x0239CD18 LDP X26, X25, [X31 + 0xD0]
	0x0239CD1C LDP X29, X30, [X31 + 0xC0]
	0x0239CD20 ADD X31, X31, 0x110
	0x0239CD24 RET
	0x0239CD28 MOV X23, X0
	0x0239CD2C CBZ X0, 0x239CE6C
	0x0239CD30 MOV X20, X5
	0x0239CD34 MOV X21, X4
	0x0239CD38 MOV X22, X3
	0x0239CD3C MOVZ W26, 0x18
	0x0239CD40 LDR W8, [X23 + 0x18]
	0x0239CD44 SUB W9, W25, W19
	0x0239CD48 ADD W24, W19, W9, 0x1, ASR
	0x0239CD4C CMP W24, W8
	0x0239CD50 B.CS 0x239CE68
	0x0239CD54 SMADDL X8, X24, X26, X23
	0x0239CD58 LDR X9, [X8 + 0x30]
	0x0239CD5C LDR V0, [X8 + 0x2]
	0x0239CD60 STR X9, [X31 + 0x70]
	0x0239CD64 STR V0, [X31 + 0x6]
	0x0239CD68 LDR X8, [X22 + 0x10]
	0x0239CD6C LDR V0, [X22]
	0x0239CD70 STR X8, [X31 + 0x50]

ISIL:
	001 Move [X31-16], X30
	002 Move W9, [X0+16]
	003 Move X8, [X0+32]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Compare W9, 0
	006 JumpIfNotEqual {33}
	007 Move TEMP, 0
	008 Not TEMP
	009 Move W10, TEMP
	010 Move [X0+16], W10
	011 Move [X0+40], W31
	012 Move W9, [X0+40]
	013 Move TEMP, 0
	014 Not TEMP
	015 Move W10, TEMP
	016 Move [X0+16], W10
	017 Add W9, W9, 1
	018 Move [X0+40], W9
	019 Compare X8, 0
	020 JumpIfEqual {37}
	021 Move W10, [X8+32]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, [X8+24]
	024 Compare X8, 0
	025 JumpIfEqual {37}
	026 Move W10, [X8+24]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Add X8, X8, W9
	029 Move X9, [X8+32]
	030 Move W8, 1
	031 Move [X0+16], W8
	032 Move [X0+24], X9
	033 Move W8, W31
	034 Move W0, W8
	035 Move X30, [X31+16]
	036 Return X0
	037 Call 0x1C17F20
	038 Call 0x1C17F28

Method: TElement System.Collections.Generic.IEnumerator<TElement>.get_Current()

Disassembly:
	0x0239CD74 STR V0, [X31 + 0x4]
	0x0239CD78 CBZ X21, 0x239CE6C

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x0239CD7C LDR X0, [X20 + 0x20]
	0x0239CD80 LDRB W8, [X0 + 0x135]
	0x0239CD84 TBNZ X8, 0x0, 0x239CD8C
	0x0239CD88 BL 0x1C5C684
	0x0239CD8C LDR X8, [X0 + 0xC0]
	0x0239CD90 LDR X1, [X8]
	0x0239CD94 LDRB W8, [X1 + 0x135]
	0x0239CD98 TBNZ X8, 0x0, 0x239CDA8
	0x0239CD9C MOV X0, X1
	0x0239CDA0 BL 0x1C5C684
	0x0239CDA4 MOV X1, X0
	0x0239CDA8 LDR V0, [X31 + 0x6]
	0x0239CDAC LDR X8, [X31 + 0x70]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1D58000
	005 Move X0, [X0+2880]
	006 Move X19, X1
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X1, X31
	010 Move X20, X0
	011 Call NotSupportedException..ctor, X0
	012 Move X0, X20
	013 Move X1, X19
	014 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x0239CDB0 LDR V1, [X31 + 0x4]
	0x0239CDB4 LDR X9, [X31 + 0x50]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

