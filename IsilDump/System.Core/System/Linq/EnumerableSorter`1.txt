Type: System.Linq.EnumerableSorter`1

Method: System.Void ComputeKeys(TElement[] elements, System.Int32 count)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Int32 CompareKeys(System.Int32 index1, System.Int32 index2)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Int32[] Sort(TElement[] elements, System.Int32 count)

Disassembly:
	0x02BACDB8 MOV X22, X1
	0x02BACDBC MOV X19, X0
	0x02BACDC0 TBNZ X8, 0x0, 0x2BACDD8
	0x02BACDC4 ADRP X0, 0x1548000
	0x02BACDC8 LDR X0, [X0 + 0xE58]
	0x02BACDCC BL 0x1C16CF4
	0x02BACDD0 MOVZ W8, 0x1
	0x02BACDD4 STRB W8, [X24 + 0x5F3]
	0x02BACDD8 LDR X8, [X19]
	0x02BACDDC MOV X0, X19
	0x02BACDE0 MOV X1, X22
	0x02BACDE4 MOV W2, W21
	0x02BACDE8 LDP X9, X3, [X8 + 0x178]
	0x02BACDEC BLR X9
	0x02BACDF0 LDR X0, [X23]
	0x02BACDF4 MOV W1, W21
	0x02BACDF8 BL 0x1C16D6C
	0x02BACDFC SUBS W3, W21, 0x1
	0x02BACE00 MOV X22, X0
	0x02BACE04 B.LT 0x2BACE34
	0x02BACE08 CBZ X22, 0x2BACE6C
	0x02BACE0C LDR W9, [X22 + 0x18]
	0x02BACE10 MOV X8, X31
	0x02BACE14 MOV W10, W21
	0x02BACE18 ADD X11, X22, 0x20
	0x02BACE1C CMP X8, X9
	0x02BACE20 B.CS 0x2BACE68
	0x02BACE24 STR W8, [X11, X8, LSL #2]
	0x02BACE28 ADD X8, X8, 0x1
	0x02BACE2C CMP X10, X8
	0x02BACE30 B.NE 0x2BACE1C
	0x02BACE34 LDR X8, [X20 + 0x20]
	0x02BACE38 MOV X0, X19
	0x02BACE3C MOV X1, X22
	0x02BACE40 MOV W2, W31
	0x02BACE44 LDR X8, [X8 + 0xC0]
	0x02BACE48 LDR X4, [X8 + 0x18]
	0x02BACE4C BL 0x2BACE70
	0x02BACE50 MOV X0, X22
	0x02BACE54 LDP X20, X19, [X31 + 0x30]
	0x02BACE58 LDP X22, X21, [X31 + 0x20]
	0x02BACE5C LDP X24, X23, [X31 + 0x10]
	0x02BACE60 LDR X30, [X31], #0x40
	0x02BACE64 RET
	0x02BACE68 BL 0x1C16F28
	0x02BACE6C BL 0x1C16F20
	0x02BACE70 STP X30, X27, [X31 - 0x50]!
	0x02BACE74 STP X26, X25, [X31 + 0x10]
	0x02BACE78 STP X24, X23, [X31 + 0x20]
	0x02BACE7C STP X22, X21, [X31 + 0x30]
	0x02BACE80 STP X20, X19, [X31 + 0x40]
	0x02BACE84 CBZ X1, 0x2BAD028
	0x02BACE88 MOV X19, X4
	0x02BACE8C MOV W22, W3
	0x02BACE90 MOV W23, W2
	0x02BACE94 MOV X20, X1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1830000
	009 Move X23, 0x1549000
	010 Move W8, [X24+1517]
	011 Move X23, [X23+3672]
	012 Move X20, X3
	013 Move W21, W2
	014 Move X22, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x1549000
	021 Move X0, [X0+3672]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+1517], W8
	025 Move X8, [X19]
	026 Move X0, X19
	027 Move X1, X22
	028 Move W2, W21
	029 Move X9, [X8+376]
	030 Move X3, [X8+384]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X0, [X23]
	033 Move W1, W21
	034 Call 0x1C17D6C
	035 Subtract W3, W21, 1
	036 Move X22, X0
	037 Compare X22, 0
	038 JumpIfEqual {64}
	039 Move W9, [X22+24]
	040 Move X8, X31
	041 Move W10, W21
	042 Add X11, X22, 32
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move [X11], W8
	045 Add X8, X8, 1
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X8, [X20+32]
	048 Move X0, X19
	049 Move X1, X22
	050 Move W2, W31
	051 Move X8, [X8+192]
	052 Move X4, [X8+24]
	053 Call 0x2BACE98, X0, X1, X2, X3
	054 Move X0, X22
	055 Move X20, [X31+48]
	056 Move X19, [X31+56]
	057 Move X22, [X31+32]
	058 Move X21, [X31+40]
	059 Move X24, [X31+16]
	060 Move X23, [X31+24]
	061 Move X30, [X31+64]
	062 Return X0
	063 Call 0x1C17F28
	064 Call 0x1C17F20

Method: System.Void QuickSort(System.Int32[] map, System.Int32 left, System.Int32 right)

Disassembly:
	0x02BACE98 MOV X21, X0
	0x02BACE9C ADD X27, X1, 0x20
	0x02BACEA0 LDR X8, [X20 + 0x18]
	0x02BACEA4 SUB W9, W22, W23
	0x02BACEA8 ADD W9, W23, W9, 0x1, ASR
	0x02BACEAC CMP W9, W8
	0x02BACEB0 B.CS 0x2BAD024
	0x02BACEB4 ADD X9, X20, W9, 0x2, SXTW
	0x02BACEB8 LDR W26, [X9 + 0x20]
	0x02BACEBC MOV W25, W22
	0x02BACEC0 MOV W24, W23
	0x02BACEC4 CMP W24, W8
	0x02BACEC8 B.GE 0x2BACF08
	0x02BACECC SXTW X24, W24
	0x02BACED0 CMP W8, W24
	0x02BACED4 B.LS 0x2BAD024
	0x02BACED8 LDR X8, [X21]
	0x02BACEDC LDR W2, [X27, X24, LSL #2]
	0x02BACEE0 MOV X0, X21
	0x02BACEE4 MOV W1, W26
	0x02BACEE8 LDP X9, X3, [X8 + 0x188]
	0x02BACEEC BLR X9
	0x02BACEF0 CMP W0, 0x0
	0x02BACEF4 B.LE 0x2BACF08
	0x02BACEF8 LDR X8, [X20 + 0x18]
	0x02BACEFC ADD X24, X24, 0x1
	0x02BACF00 CMP X24, W8, SXTW
	0x02BACF04 B.LT 0x2BACED0
	0x02BACF08 TBNZ X25, 0x1F, 0x2BACF44
	0x02BACF0C MOV W25, W25
	0x02BACF10 LDR W8, [X20 + 0x18]
	0x02BACF14 CMP X25, X8
	0x02BACF18 B.CS 0x2BAD024
	0x02BACF1C LDR X8, [X21]
	0x02BACF20 LDR W2, [X27, X25, LSL #2]
	0x02BACF24 MOV X0, X21
	0x02BACF28 MOV W1, W26
	0x02BACF2C LDP X9, X3, [X8 + 0x188]
	0x02BACF30 BLR X9
	0x02BACF34 TBZ X0, 0x1F, 0x2BACF44
	0x02BACF38 SUBS X25, X25, 0x1
	0x02BACF3C B.GE 0x2BACF10
	0x02BACF40 MOVN W25, 0x0
	0x02BACF44 CMP W24, W25
	0x02BACF48 B.GT 0x2BACF94
	0x02BACF4C B.GE 0x2BACF7C
	0x02BACF50 LDR W8, [X20 + 0x18]
	0x02BACF54 CMP W24, W8
	0x02BACF58 B.CS 0x2BAD024
	0x02BACF5C CMP W25, W8
	0x02BACF60 B.CS 0x2BAD024
	0x02BACF64 ADD X8, X20, W24, 0x2, SXTW
	0x02BACF68 ADD X9, X20, W25, 0x2, SXTW
	0x02BACF6C LDR W10, [X9 + 0x20]
	0x02BACF70 LDR W11, [X8 + 0x20]!
	0x02BACF74 STR W10, [X8]
	0x02BACF78 STR W11, [X9 + 0x20]
	0x02BACF7C ADD W24, W24, 0x1
	0x02BACF80 SUB W25, W25, 0x1
	0x02BACF84 CMP W24, W25
	0x02BACF88 B.GT 0x2BACF94
	0x02BACF8C LDR X8, [X20 + 0x18]
	0x02BACF90 B 0x2BACEC4
	0x02BACF94 SUB W8, W25, W23
	0x02BACF98 SUB W9, W22, W24
	0x02BACF9C CMP W8, W9
	0x02BACFA0 B.LE 0x2BACFD8
	0x02BACFA4 CMP W22, W24
	0x02BACFA8 B.LE 0x2BACFCC
	0x02BACFAC LDR X8, [X19 + 0x20]
	0x02BACFB0 MOV X0, X21
	0x02BACFB4 MOV X1, X20
	0x02BACFB8 MOV W2, W24
	0x02BACFBC LDR X8, [X8 + 0xC0]
	0x02BACFC0 MOV W3, W22
	0x02BACFC4 LDR X4, [X8 + 0x18]
	0x02BACFC8 BL 0x2BACE70
	0x02BACFCC MOV W22, W25
	0x02BACFD0 MOV W24, W23
	0x02BACFD4 B 0x2BAD000
	0x02BACFD8 CMP W25, W23
	0x02BACFDC B.LE 0x2BAD000
	0x02BACFE0 LDR X8, [X19 + 0x20]
	0x02BACFE4 MOV X0, X21
	0x02BACFE8 MOV X1, X20
	0x02BACFEC MOV W2, W23
	0x02BACFF0 LDR X8, [X8 + 0xC0]
	0x02BACFF4 MOV W3, W25
	0x02BACFF8 LDR X4, [X8 + 0x18]
	0x02BACFFC BL 0x2BACE70
	0x02BAD000 CMP W24, W22
	0x02BAD004 MOV W23, W24
	0x02BAD008 B.LT 0x2BACEA0
	0x02BAD00C LDP X20, X19, [X31 + 0x40]
	0x02BAD010 LDP X22, X21, [X31 + 0x30]
	0x02BAD014 LDP X24, X23, [X31 + 0x20]
	0x02BAD018 LDP X26, X25, [X31 + 0x10]
	0x02BAD01C LDP X30, X27, [X31], #0x50
	0x02BAD020 RET
	0x02BAD024 BL 0x1C16F28
	0x02BAD028 BL 0x1C16F20
	0x02BAD02C MOV X1, X31
	0x02BAD030 B 0x33BDD8C
	0x02BAD034 STR X30, [X31 - 0x40]!
	0x02BAD038 STP X24, X23, [X31 + 0x10]
	0x02BAD03C STP X22, X21, [X31 + 0x20]
	0x02BAD040 STP X20, X19, [X31 + 0x30]
	0x02BAD044 ADRP X24, 0x182E000
	0x02BAD048 ADRP X23, 0x1547000
	0x02BAD04C LDRB W8, [X24 + 0x5F4]
	0x02BAD050 LDR X23, [X23 + 0xE58]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Compare X1, 0
	012 JumpIfEqual {115}
	013 Move X19, X4
	014 Move W22, W3
	015 Move W23, W2
	016 Move X20, X1
	017 Move X21, X0
	018 Add X27, X1, 32
	019 Move X8, [X20+24]
	020 Subtract W9, W22, W23
	021 Add W9, W23, W9
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Add X9, X20, W9
	024 Move W26, [X9+32]
	025 Move W25, W22
	026 Move W24, W23
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X24, W24
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X21]
	031 Move W2, [X27]
	032 Move X0, X21
	033 Move W1, W26
	034 Move X9, [X8+392]
	035 Move X3, [X8+400]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X8, [X20+24]
	039 Add X24, X24, 1
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move TEMP, X25
	042 And TEMP, TEMP, -2147483648
	043 Compare TEMP, -2147483648
	044 JumpIfEqual {63}
	045 Move W25, W25
	046 Move W8, [X20+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X8, [X21]
	049 Move W2, [X27]
	050 Move X0, X21
	051 Move W1, W26
	052 Move X9, [X8+392]
	053 Move X3, [X8+400]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move TEMP, X0
	056 And TEMP, TEMP, -2147483648
	057 Compare TEMP, -2147483648
	058 JumpIfNotEqual {63}
	059 Subtract X25, X25, 1
	060 Move TEMP, 0
	061 Not TEMP
	062 Move W25, TEMP
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move W8, [X20+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Add X8, X20, W24
	068 Add X9, X20, W25
	069 Move W10, [X9+32]
	070 Add X8, X8, 32
	071 Move W11, [X8]
	072 Move [X8], W10
	073 Move [X9+32], W11
	074 Add W24, W24, 1
	075 Subtract W25, W25, 1
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X8, [X20+24]
	078 Subtract W8, W25, W23
	079 Subtract W9, W22, W24
	080 NotImplemented "Instruction CMP not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X8, [X19+32]
	083 Move X0, X21
	084 Move X1, X20
	085 Move W2, W24
	086 Move X8, [X8+192]
	087 Move W3, W22
	088 Move X4, [X8+24]
	089 Call 0x2BACE98, X0, X1, X2, X3
	090 Move W22, W25
	091 Move W24, W23
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X8, [X19+32]
	094 Move X0, X21
	095 Move X1, X20
	096 Move W2, W23
	097 Move X8, [X8+192]
	098 Move W3, W25
	099 Move X4, [X8+24]
	100 Call 0x2BACE98, X0, X1, X2, X3
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move W23, W24
	103 Move X20, [X31+64]
	104 Move X19, [X31+72]
	105 Move X22, [X31+48]
	106 Move X21, [X31+56]
	107 Move X24, [X31+32]
	108 Move X23, [X31+40]
	109 Move X26, [X31+16]
	110 Move X25, [X31+24]
	111 Move X30, [X31+80]
	112 Move X27, [X31+88]
	113 Return 
	114 Call 0x1C17F28
	115 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x02BAD054 MOV X20, X3
	0x02BAD058 MOV W21, W2

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

