Type: System.Linq.Enumerable/WhereSelectListIterator`2

Method: System.Void .ctor(System.Collections.Generic.List`1<TSource> source, System.Func`2<TSource, System.Boolean> predicate, System.Func`2<TSource, TResult> selector)

Disassembly:
	0x02889F34 MOV X1, X23
	0x02889F38 MOV X2, X22
	0x02889F3C BLR X9
	0x02889F40 TBZ X0, 0x0, 0x2889F04
	0x02889F44 LDR X8, [X19 + 0x38]
	0x02889F48 CBZ X8, 0x2889F9C
	0x02889F4C LDR X9, [X8 + 0x18]
	0x02889F50 LDR X0, [X8 + 0x40]
	0x02889F54 LDR X3, [X8 + 0x28]
	0x02889F58 MOV X1, X23
	0x02889F5C MOV X2, X22
	0x02889F60 BLR X9
	0x02889F64 STP S0, S1, [X19 + 0x18]
	0x02889F68 STR S2, [X19 + 0x20]
	0x02889F6C MOVZ W0, 0x1
	0x02889F70 B 0x2889F88
	0x02889F74 LDR X8, [X19]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X4+32]
	007 Move X21, X1
	008 Move X19, X3
	009 Move X20, X2
	010 Move X8, [X8+192]
	011 Move X22, X0
	012 Move X1, [X8]
	013 Call Iterator`1<ValueTuple`2<Object, Object>>..ctor, X0
	014 Move [X22+40], X21
	015 Move [X22+48], X20
	016 Move [X22+56], X19
	017 Move X20, [X31+32]
	018 Move X19, [X31+40]
	019 Move X22, [X31+16]
	020 Move X21, [X31+24]
	021 Move X30, [X31+48]
	022 Return 

Method: System.Linq.Enumerable/Iterator`1<TResult> Clone()

Disassembly:
	0x02889F78 MOV X0, X19
	0x02889F7C LDP X9, X1, [X8 + 0x1F8]
	0x02889F80 BLR X9
	0x02889F84 MOV W0, W31
	0x02889F88 LDP X20, X19, [X31 + 0x60]
	0x02889F8C LDP X22, X21, [X31 + 0x50]
	0x02889F90 LDP X30, X23, [X31 + 0x40]
	0x02889F94 ADD X31, X31, 0x70
	0x02889F98 RET
	0x02889F9C BL 0x1C16F20
	0x02889FA0 STP X30, X21, [X31 - 0x20]!
	0x02889FA4 STP X20, X19, [X31 + 0x10]
	0x02889FA8 LDR X8, [X2 + 0x20]
	0x02889FAC MOV X20, X2
	0x02889FB0 MOV X19, X1
	0x02889FB4 MOV X21, X0
	0x02889FB8 LDR X8, [X8 + 0xC0]
	0x02889FBC LDR X8, [X8 + 0x98]
	0x02889FC0 LDRB W9, [X8 + 0x135]
	0x02889FC4 TBNZ X9, 0x0, 0x2889FD4
	0x02889FC8 MOV X0, X8
	0x02889FCC BL 0x1C5C684
	0x02889FD0 MOV X8, X0
	0x02889FD4 MOV X0, X8
	0x02889FD8 BL 0x1C16F10
	0x02889FDC LDR X8, [X20 + 0x20]
	0x02889FE0 MOV X1, X21
	0x02889FE4 MOV X2, X19
	0x02889FE8 MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X9, [X1+32]
	007 Move X8, X0
	008 Move X21, [X8+40]
	009 Move X20, [X8+48]
	010 Move X22, [X8+56]
	011 Move X9, [X9+192]
	012 Move X19, X1
	013 Move X0, [X9+24]
	014 Move W9, [X0+309]
	015 Move TEMP, X9
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Call 0x1C17F10
	021 Move X8, [X19+32]
	022 Move X19, X0
	023 Move X8, [X8+192]
	024 Move X8, [X8+48]
	025 Move X8, [X8+32]
	026 Move X8, [X8+192]
	027 Move X1, [X8]
	028 Call Iterator`1<ValueTuple`2<Object, Object>>..ctor, X0
	029 Move [X19+40], X21
	030 Move [X19+48], X20
	031 Move [X19+56], X22
	032 Move X0, X19
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return X0

Method: System.Boolean MoveNext()

Disassembly:
	0x02889FEC LDR X8, [X8 + 0xC0]
	0x02889FF0 LDR X3, [X8 + 0xA0]
	0x02889FF4 BL 0x28594B4
	0x02889FF8 MOV X0, X20
	0x02889FFC LDP X20, X19, [X31 + 0x10]
	0x0288A000 LDP X30, X21, [X31], #0x20
	0x0288A004 RET
	0x0288A008 STR X30, [X31 - 0x30]!
	0x0288A00C STP X22, X21, [X31 + 0x10]
	0x0288A010 STP X20, X19, [X31 + 0x20]
	0x0288A014 LDR X8, [X4 + 0x20]
	0x0288A018 MOV X21, X1
	0x0288A01C MOV X19, X3
	0x0288A020 MOV X20, X2
	0x0288A024 LDR X8, [X8 + 0xC0]
	0x0288A028 MOV X22, X0
	0x0288A02C LDR X1, [X8]
	0x0288A030 BL 0x2EA2888
	0x0288A034 STP X21, X20, [X22 + 0x20]
	0x0288A038 STR X19, [X22 + 0x30]
	0x0288A03C LDP X20, X19, [X31 + 0x20]
	0x0288A040 LDP X22, X21, [X31 + 0x10]
	0x0288A044 LDR X30, [X31], #0x30
	0x0288A048 RET
	0x0288A04C STR X30, [X31 - 0x30]!
	0x0288A050 STP X22, X21, [X31 + 0x10]
	0x0288A054 STP X20, X19, [X31 + 0x20]
	0x0288A058 LDR X9, [X1 + 0x20]
	0x0288A05C MOV X8, X0
	0x0288A060 LDP X21, X20, [X8 + 0x20]
	0x0288A064 LDR X22, [X8 + 0x30]
	0x0288A068 LDR X9, [X9 + 0xC0]
	0x0288A06C MOV X19, X1
	0x0288A070 LDR X0, [X9 + 0x18]
	0x0288A074 LDRB W9, [X0 + 0x135]
	0x0288A078 TBNZ X9, 0x0, 0x288A080
	0x0288A07C BL 0x1C5C684
	0x0288A080 BL 0x1C16F10
	0x0288A084 LDR X8, [X19 + 0x20]
	0x0288A088 MOV X19, X0
	0x0288A08C LDR X8, [X8 + 0xC0]
	0x0288A090 LDR X8, [X8 + 0x30]
	0x0288A094 LDR X8, [X8 + 0x20]
	0x0288A098 LDR X8, [X8 + 0xC0]
	0x0288A09C LDR X1, [X8]
	0x0288A0A0 BL 0x2EA2888
	0x0288A0A4 STP X21, X20, [X19 + 0x20]
	0x0288A0A8 STR X22, [X19 + 0x30]
	0x0288A0AC MOV X0, X19
	0x0288A0B0 LDP X20, X19, [X31 + 0x20]
	0x0288A0B4 LDP X22, X21, [X31 + 0x10]
	0x0288A0B8 LDR X30, [X31], #0x30
	0x0288A0BC RET
	0x0288A0C0 SUB X31, X31, 0x70
	0x0288A0C4 STR X30, [X31 + 0x40]
	0x0288A0C8 STP X22, X21, [X31 + 0x50]
	0x0288A0CC STP X20, X19, [X31 + 0x60]
	0x0288A0D0 LDR W8, [X0 + 0x14]
	0x0288A0D4 MOV X19, X0
	0x0288A0D8 MOV X20, X1
	0x0288A0DC CMP W8, 0x2
	0x0288A0E0 B.EQ 0x288A128

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move W8, [X0+20]
	009 Move X19, X0
	010 Move X20, X1
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X0, [X19+40]
	014 Compare X0, 0
	015 JumpIfEqual {80}
	016 Move X8, [X20+32]
	017 Move X8, [X8+192]
	018 Move X1, [X8+64]
	019 Add X8, X31, 0
	020 Call List`1<KeyValuePair`2<Edge, Object>>.GetEnumerator, X0
	021 Move V1, [X31]
	022 Move V0, [X31+16]
	023 Move W8, 2
	024 Move [X31+32], V1
	025 Move [X31+40], V0
	026 Move [X19+64], V1
	027 Move [X19+72], V0
	028 Move [X19+20], W8
	029 Add X21, X19, 64
	030 Move X8, [X20+32]
	031 Move X0, X21
	032 Move X8, [X8+192]
	033 Move X1, [X8+128]
	034 Call Enumerator<KeyValuePair`2<Edge, Object>>.MoveNext, X0
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {66}
	039 Move X8, [X19+48]
	040 Move X23, [X19+80]
	041 Move X22, [X19+88]
	042 Compare X8, 0
	043 JumpIfEqual {54}
	044 Move X9, [X8+24]
	045 Move X0, [X8+64]
	046 Move X3, [X8+40]
	047 Move X1, X23
	048 Move X2, X22
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {30}
	054 Move X8, [X19+56]
	055 Compare X8, 0
	056 JumpIfEqual {80}
	057 Move X9, [X8+24]
	058 Move X0, [X8+64]
	059 Move X3, [X8+40]
	060 Move X1, X23
	061 Move X2, X22
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move [X19+24], X0
	064 Move [X19+32], X1
	065 Move W0, 1
	066 Move X8, [X19]
	067 Move X0, X19
	068 Move X9, [X8+504]
	069 Move X1, [X8+512]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move W0, W31
	072 Move X20, [X31+96]
	073 Move X19, [X31+104]
	074 Move X22, [X31+80]
	075 Move X21, [X31+88]
	076 Move X30, [X31+64]
	077 Move X23, [X31+72]
	078 Add X31, X31, 112
	079 Return X0
	080 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<TResult2> Select(System.Func`2<TResult, TResult2> selector)

Disassembly:
	0x02274A2C LDP X30, X23, [X31], #0x30
	0x02274A30 RET
	0x02274A34 STP X30, X23, [X31 - 0x30]!
	0x02274A38 STP X22, X21, [X31 + 0x10]
	0x02274A3C STP X20, X19, [X31 + 0x20]
	0x02274A40 LDR X8, [X2 + 0x38]
	0x02274A44 MOV X19, X2
	0x02274A48 MOV X22, X1
	0x02274A4C MOV X23, X0
	0x02274A50 CBNZ X8, 0x2274A60
	0x02274A54 MOV X0, X19
	0x02274A58 BL 0x1C5C6E0
	0x02274A5C LDR X8, [X19 + 0x38]
	0x02274A60 LDR X0, [X23 + 0x30]
	0x02274A64 LDR X2, [X8 + 0x8]
	0x02274A68 LDP X20, X21, [X23 + 0x20]
	0x02274A6C MOV X1, X22
	0x02274A70 BL 0x21B6854
	0x02274A74 LDR X8, [X19 + 0x38]
	0x02274A78 MOV X22, X0
	0x02274A7C LDR X8, [X8 + 0x18]
	0x02274A80 LDRB W9, [X8 + 0x135]
	0x02274A84 TBNZ X9, 0x0, 0x2274A94
	0x02274A88 MOV X0, X8
	0x02274A8C BL 0x1C5C684
	0x02274A90 MOV X8, X0
	0x02274A94 MOV X0, X8
	0x02274A98 BL 0x1C16F10
	0x02274A9C LDR X8, [X19 + 0x38]
	0x02274AA0 MOV X1, X20
	0x02274AA4 MOV X2, X21
	0x02274AA8 MOV X3, X22
	0x02274AAC LDR X4, [X8 + 0x20]
	0x02274AB0 MOV X19, X0
	0x02274AB4 BL 0x288CAB8
	0x02274AB8 MOV X0, X19
	0x02274ABC LDP X20, X19, [X31 + 0x20]
	0x02274AC0 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X2+56]
	008 Move X19, X2
	009 Move X22, X1
	010 Move X23, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {16}
	013 Move X0, X19
	014 Call 0x1C5D6E0
	015 Move X8, [X19+56]
	016 Move X0, [X23+48]
	017 Move X2, [X8+8]
	018 Move X20, [X23+32]
	019 Move X21, [X23+40]
	020 Move X1, X22
	021 Call 0x21B6774, X0, X1
	022 Move X8, [X19+56]
	023 Move X22, X0
	024 Move X8, [X8+24]
	025 Move W9, [X8+309]
	026 Move TEMP, X9
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {33}
	030 Move X0, X8
	031 Call 0x1C5D684
	032 Move X8, X0
	033 Move X0, X8
	034 Call 0x1C17F10
	035 Move X8, [X19+56]
	036 Move X1, X20
	037 Move X2, X21
	038 Move X3, X22
	039 Move X4, [X8+32]
	040 Move X19, X0
	041 Call WhereSelectListIterator`2<KeyValuePair`2<Edge, Object>, Edge>..ctor, X0, X1, X2, X3
	042 Move X0, X19
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Return X0

Method: System.Collections.Generic.IEnumerable`1<TResult> Where(System.Func`2<TResult, System.Boolean> predicate)

Disassembly:
	0x0288A0E4 CMP W8, 0x1
	0x0288A0E8 B.NE 0x288A1A0
	0x0288A0EC LDR X0, [X19 + 0x20]
	0x0288A0F0 CBZ X0, 0x288A1B8
	0x0288A0F4 LDR X8, [X20 + 0x20]
	0x0288A0F8 LDR X8, [X8 + 0xC0]
	0x0288A0FC LDR X1, [X8 + 0x40]
	0x0288A100 ADD X8, X31, 0x8
	0x0288A104 BL 0x2EFF404
	0x0288A108 LDR X8, [X31 + 0x18]
	0x0288A10C LDUR V0, [X31 + 0x8]
	0x0288A110 MOVZ W9, 0x2
	0x0288A114 STR X8, [X31 + 0x30]
	0x0288A118 STR V0, [X31 + 0x2]
	0x0288A11C STR X8, [X19 + 0x48]
	0x0288A120 STUR V0, [X19 + 0x38]
	0x0288A124 STR W9, [X19 + 0x14]
	0x0288A128 ADD X21, X19, 0x38
	0x0288A12C LDR X8, [X20 + 0x20]
	0x0288A130 MOV X0, X21
	0x0288A134 LDR X8, [X8 + 0xC0]
	0x0288A138 LDR X1, [X8 + 0x80]
	0x0288A13C BL 0x2BB0300
	0x0288A140 TBZ X0, 0x0, 0x288A190
	0x0288A144 LDR X8, [X19 + 0x28]
	0x0288A148 LDR X22, [X19 + 0x48]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X20, X2
	007 Move X19, X1
	008 Move X21, X0
	009 Move X8, [X8+192]
	010 Move X8, [X8+152]
	011 Move W9, [X8+309]
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X8
	017 Call 0x1C5D684
	018 Move X8, X0
	019 Move X0, X8
	020 Call 0x1C17F10
	021 Move X8, [X20+32]
	022 Move X1, X21
	023 Move X2, X19
	024 Move X20, X0
	025 Move X8, [X8+192]
	026 Move X3, [X8+160]
	027 Call WhereEnumerableIterator`1<ValueTuple`2<Object, Object>>..ctor, X0, X1, X2
	028 Move X0, X20
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0

