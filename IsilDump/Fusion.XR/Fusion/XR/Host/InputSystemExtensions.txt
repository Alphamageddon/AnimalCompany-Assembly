Type: Fusion.XR.Host.InputSystemExtensions

Method: System.Void EnableWithDefaultXRBindings(UnityEngine.InputSystem.InputActionProperty property, System.Collections.Generic.List`1<System.String> bindings = null, System.Collections.Generic.List`1<System.String> leftBindings = null, System.Collections.Generic.List`1<System.String> rightBindings = null)

Disassembly:
	0x01F9C4C4 ADD W22, W22, 0x1
	0x01F9C4C8 CMP W22, W8
	0x01F9C4CC B.LT 0x1F9C494
	0x01F9C4D0 MOV X0, X19
	0x01F9C4D4 MOV X1, X31
	0x01F9C4D8 BL 0x3C32ECC
	0x01F9C4DC CBZ X0, 0x1F9C4F8
	0x01F9C4E0 MOV W1, W20
	0x01F9C4E4 LDP X20, X19, [X31 + 0x20]
	0x01F9C4E8 LDP X22, X21, [X31 + 0x10]
	0x01F9C4EC MOV X2, X31
	0x01F9C4F0 LDR X30, [X31], #0x30
	0x01F9C4F4 B 0x3C35770
	0x01F9C4F8 BL 0x1C16F20
	0x01F9C4FC BL 0x1C16F28
	0x01F9C500 STR X30, [X31 - 0x30]!
	0x01F9C504 STP X22, X21, [X31 + 0x10]
	0x01F9C508 STP X20, X19, [X31 + 0x20]
	0x01F9C50C ADRP X21, 0x243D000
	0x01F9C510 ADRP X22, 0x217F000
	0x01F9C514 ADRP X20, 0x217F000
	0x01F9C518 LDRB W8, [X21 + 0x79C]
	0x01F9C51C LDR X22, [X22 + 0x60]
	0x01F9C520 LDR X20, [X20 + 0x68]
	0x01F9C524 MOV X19, X0
	0x01F9C528 TBNZ X8, 0x0, 0x1F9C54C
	0x01F9C52C ADRP X0, 0x217F000
	0x01F9C530 LDR X0, [X0 + 0x60]
	0x01F9C534 BL 0x1C16CF4
	0x01F9C538 ADRP X0, 0x217F000
	0x01F9C53C LDR X0, [X0 + 0x68]
	0x01F9C540 BL 0x1C16CF4
	0x01F9C544 MOVZ W8, 0x1
	0x01F9C548 STRB W8, [X21 + 0x79C]
	0x01F9C54C LDR X10, [X22]
	0x01F9C550 LDR X8, [X20]
	0x01F9C554 MOVZ W9, 0x101
	0x01F9C558 STRH W9, [X19 + 0x90]
	0x01F9C55C MOV X0, X19
	0x01F9C560 STP X10, X8, [X19 + 0x80]
	0x01F9C564 LDP X20, X19, [X31 + 0x20]
	0x01F9C568 LDP X22, X21, [X31 + 0x10]
	0x01F9C56C MOV X1, X31
	0x01F9C570 LDR X30, [X31], #0x30
	0x01F9C574 B 0x1E74F04
	0x01F9C578 STR X30, [X31 - 0x20]!
	0x01F9C57C STP X20, X19, [X31 + 0x10]
	0x01F9C580 ADRP X20, 0x243D000
	0x01F9C584 LDRB W8, [X20 + 0x79D]
	0x01F9C588 MOV X19, X0
	0x01F9C58C TBNZ X8, 0x0, 0x1F9C5A4
	0x01F9C590 ADRP X0, 0x217F000
	0x01F9C594 LDR X0, [X0 + 0x70]
	0x01F9C598 BL 0x1C16CF4
	0x01F9C59C MOVZ W8, 0x1
	0x01F9C5A0 STRB W8, [X20 + 0x79D]
	0x01F9C5A4 ADD X0, X19, 0x30
	0x01F9C5A8 MOV X1, X31
	0x01F9C5AC BL 0x3745120
	0x01F9C5B0 CBZ X0, 0x1F9C5D8
	0x01F9C5B4 ADRP X8, 0x217F000
	0x01F9C5B8 LDR X8, [X8 + 0x70]
	0x01F9C5BC LDR X1, [X8]
	0x01F9C5C0 BL 0x21F5BCC
	0x01F9C5C4 LDP X20, X19, [X31 + 0x10]
	0x01F9C5C8 CMP W0, 0x0
	0x01F9C5CC CSET W0, NE
	0x01F9C5D0 LDR X30, [X31], #0x20
	0x01F9C5D4 RET
	0x01F9C5D8 BL 0x1C16F20
	0x01F9C5DC SUB X31, X31, 0x70
	0x01F9C5E0 STR X30, [X31 + 0x40]
	0x01F9C5E4 STP X22, X21, [X31 + 0x50]
	0x01F9C5E8 STP X20, X19, [X31 + 0x60]
	0x01F9C5EC ADRP X22, 0x243D000
	0x01F9C5F0 ADRP X21, 0x2158000
	0x01F9C5F4 ADRP X20, 0x2158000
	0x01F9C5F8 LDRB W8, [X22 + 0x79E]
	0x01F9C5FC LDR X21, [X21 + 0x1D0]
	0x01F9C600 LDR X20, [X20 + 0x1C0]
	0x01F9C604 MOV X19, X0
	0x01F9C608 TBNZ X8, 0x0, 0x1F9C644
	0x01F9C60C ADRP X0, 0x2158000
	0x01F9C610 LDR X0, [X0 + 0x1B8]
	0x01F9C614 BL 0x1C16CF4
	0x01F9C618 ADRP X0, 0x2158000
	0x01F9C61C LDR X0, [X0 + 0x1C0]
	0x01F9C620 BL 0x1C16CF4
	0x01F9C624 ADRP X0, 0x2158000
	0x01F9C628 LDR X0, [X0 + 0x1D0]
	0x01F9C62C BL 0x1C16CF4
	0x01F9C630 ADRP X0, 0x217F000
	0x01F9C634 LDR X0, [X0 + 0x78]
	0x01F9C638 BL 0x1C16CF4
	0x01F9C63C MOVZ W8, 0x1
	0x01F9C640 STRB W8, [X22 + 0x79E]
	0x01F9C644 LDR X8, [X19 + 0x40]
	0x01F9C648 LDR V0, [X19 + 0x3]
	0x01F9C64C LDR X0, [X21]
	0x01F9C650 STR X8, [X31 + 0x30]
	0x01F9C654 STR V0, [X31 + 0x2]
	0x01F9C658 BL 0x1C16F10
	0x01F9C65C LDR X1, [X20]
	0x01F9C660 MOV X19, X0
	0x01F9C664 BL 0x301B7C4
	0x01F9C668 CBZ X19, 0x1F9C708
	0x01F9C66C ADRP X8, 0x217F000
	0x01F9C670 ADRP X9, 0x2158000
	0x01F9C674 LDR X8, [X8 + 0x78]
	0x01F9C678 LDR X9, [X9 + 0x1B8]
	0x01F9C67C LDR W10, [X19 + 0x1C]
	0x01F9C680 LDR X1, [X8]
	0x01F9C684 LDR X8, [X19 + 0x10]
	0x01F9C688 LDR X9, [X9]
	0x01F9C68C ADD W10, W10, 0x1
	0x01F9C690 STR W10, [X19 + 0x1C]
	0x01F9C694 CBZ X8, 0x1F9C708
	0x01F9C698 LDRSW X10, [X19 + 0x18]
	0x01F9C69C LDR W11, [X8 + 0x18]
	0x01F9C6A0 CMP W10, W11
	0x01F9C6A4 B.CS 0x1F9C6BC
	0x01F9C6A8 ADD W9, W10, 0x1
	0x01F9C6AC ADD X8, X8, X10, 0x3, LSL
	0x01F9C6B0 STR W9, [X19 + 0x18]
	0x01F9C6B4 STR X1, [X8 + 0x20]
	0x01F9C6B8 B 0x1F9C6D0
	0x01F9C6BC LDR X8, [X9 + 0x20]
	0x01F9C6C0 MOV X0, X19
	0x01F9C6C4 LDR X8, [X8 + 0xC0]
	0x01F9C6C8 LDR X2, [X8 + 0x70]
	0x01F9C6CC BL 0x301BF90
	0x01F9C6D0 LDR V0, [X31 + 0x2]
	0x01F9C6D4 LDR X8, [X31 + 0x30]
	0x01F9C6D8 ADD X0, X31, 0x0
	0x01F9C6DC MOV X1, X19
	0x01F9C6E0 MOV X2, X31
	0x01F9C6E4 MOV X3, X31
	0x01F9C6E8 STR V0, [X31]
	0x01F9C6EC STR X8, [X31 + 0x10]
	0x01F9C6F0 BL 0x1F9B4C4
	0x01F9C6F4 LDP X20, X19, [X31 + 0x60]
	0x01F9C6F8 LDP X22, X21, [X31 + 0x50]
	0x01F9C6FC LDR X30, [X31 + 0x40]
	0x01F9C700 ADD X31, X31, 0x70
	0x01F9C704 RET
	0x01F9C708 BL 0x1C16F20
	0x01F9C70C SUB X31, X31, 0x30
	0x01F9C710 STP X30, X21, [X31 + 0x10]
	0x01F9C714 STP X20, X19, [X31 + 0x20]
	0x01F9C718 ADRP X20, 0x243D000
	0x01F9C71C ADRP X21, 0x2157000
	0x01F9C720 LDRB W8, [X20 + 0x79F]
	0x01F9C724 LDR X21, [X21 + 0x970]
	0x01F9C728 MOV X19, X0
	0x01F9C72C TBNZ X8, 0x0, 0x1F9C798
	0x01F9C730 ADRP X0, 0x2157000
	0x01F9C734 LDR X0, [X0 + 0x970]
	0x01F9C738 BL 0x1C16CF4
	0x01F9C73C ADRP X0, 0x2157000
	0x01F9C740 LDR X0, [X0 + 0xA28]
	0x01F9C744 BL 0x1C16CF4
	0x01F9C748 ADRP X0, 0x2157000
	0x01F9C74C LDR X0, [X0 + 0x758]
	0x01F9C750 BL 0x1C16CF4
	0x01F9C754 ADRP X0, 0x2160000
	0x01F9C758 LDR X0, [X0 + 0x110]
	0x01F9C75C BL 0x1C16CF4
	0x01F9C760 ADRP X0, 0x217F000
	0x01F9C764 LDR X0, [X0 + 0x80]
	0x01F9C768 BL 0x1C16CF4
	0x01F9C76C ADRP X0, 0x217F000
	0x01F9C770 LDR X0, [X0 + 0x88]
	0x01F9C774 BL 0x1C16CF4
	0x01F9C778 ADRP X0, 0x217F000
	0x01F9C77C LDR X0, [X0 + 0x90]
	0x01F9C780 BL 0x1C16CF4
	0x01F9C784 ADRP X0, 0x217F000
	0x01F9C788 LDR X0, [X0 + 0x98]
	0x01F9C78C BL 0x1C16CF4
	0x01F9C790 MOVZ W8, 0x1
	0x01F9C794 STRB W8, [X20 + 0x79F]
	0x01F9C798 LDR X0, [X21]
	0x01F9C79C LDR X20, [X19 + 0x28]
	0x01F9C7A0 LDR W8, [X0 + 0xE0]
	0x01F9C7A4 CBNZ W8, 0x1F9C7AC
	0x01F9C7A8 BL 0x1C16DFC
	0x01F9C7AC MOV X0, X31
	0x01F9C7B0 BL 0x3C019E8
	0x01F9C7B4 CBZ X20, 0x1F9C8FC
	0x01F9C7B8 ADRP X8, 0x2160000
	0x01F9C7BC LDR X8, [X8 + 0x110]
	0x01F9C7C0 MOV X1, X0
	0x01F9C7C4 MOV X0, X20
	0x01F9C7C8 LDR X2, [X8]
	0x01F9C7CC BL 0x301C318
	0x01F9C7D0 LDR X8, [X21]
	0x01F9C7D4 MOV W21, W0
	0x01F9C7D8 LDR W9, [X8 + 0xE0]
	0x01F9C7DC CBNZ W9, 0x1F9C7E8
	0x01F9C7E0 MOV X0, X8
	0x01F9C7E4 BL 0x1C16DFC
	0x01F9C7E8 MOV X0, X31
	0x01F9C7EC BL 0x3C019E8
	0x01F9C7F0 MOV X20, X0
	0x01F9C7F4 TBZ X21, 0x0, 0x1F9C894
	0x01F9C7F8 ADRP X9, 0x2157000
	0x01F9C7FC LDR V0, [X19 + 0x20]
	0x01F9C800 LDR X9, [X9 + 0x758]
	0x01F9C804 MOVZ W8, 0x7F800000
	0x01F9C808 FMOV S1, W8
	0x01F9C80C FCVTZS W8, S0
	0x01F9C810 LDR X0, [X9]
	0x01F9C814 FCMP S0, S1
	0x01F9C818 MOVZ W9, 0x80000000
	0x01F9C81C CSEL W8, W9, W8, EQ
	0x01F9C820 ADD X1, X31, 0xC
	0x01F9C824 STR W8, [X31 + 0xC]
	0x01F9C828 BL 0x1C16E04
	0x01F9C82C ADRP X8, 0x217F000
	0x01F9C830 LDR X8, [X8 + 0x98]
	0x01F9C834 MOV X2, X0
	0x01F9C838 MOV X1, X20
	0x01F9C83C MOV X3, X31
	0x01F9C840 LDR X8, [X8]
	0x01F9C844 MOV X0, X8
	0x01F9C848 BL 0x3227BD4
	0x01F9C84C ADRP X8, 0x2157000
	0x01F9C850 LDR X8, [X8 + 0xA28]
	0x01F9C854 MOV X20, X0
	0x01F9C858 LDR X8, [X8]
	0x01F9C85C LDR W9, [X8 + 0xE0]
	0x01F9C860 CBNZ W9, 0x1F9C86C
	0x01F9C864 MOV X0, X8
	0x01F9C868 BL 0x1C16DFC
	0x01F9C86C MOV X0, X20
	0x01F9C870 MOV X1, X31
	0x01F9C874 BL 0x3C0649C
	0x01F9C878 ADRP X8, 0x217F000
	0x01F9C87C LDR X8, [X8 + 0x80]
	0x01F9C880 MOV X1, X31
	0x01F9C884 LDR X0, [X8]
	0x01F9C888 BL 0x3C06048
	0x01F9C88C MOVZ W8, 0x2
	0x01F9C890 B 0x1F9C8E8
	0x01F9C894 ADRP X8, 0x217F000
	0x01F9C898 ADRP X9, 0x217F000
	0x01F9C89C LDR X8, [X8 + 0x90]
	0x01F9C8A0 LDR X9, [X9 + 0x88]
	0x01F9C8A4 MOV X1, X20
	0x01F9C8A8 MOV X3, X31
	0x01F9C8AC LDR X0, [X8]
	0x01F9C8B0 LDR X2, [X9]
	0x01F9C8B4 BL 0x32274B8
	0x01F9C8B8 ADRP X8, 0x2157000
	0x01F9C8BC LDR X8, [X8 + 0xA28]
	0x01F9C8C0 MOV X20, X0
	0x01F9C8C4 LDR X8, [X8]
	0x01F9C8C8 LDR W9, [X8 + 0xE0]
	0x01F9C8CC CBNZ W9, 0x1F9C8D8
	0x01F9C8D0 MOV X0, X8
	0x01F9C8D4 BL 0x1C16DFC
	0x01F9C8D8 MOV X0, X20
	0x01F9C8DC MOV X1, X31
	0x01F9C8E0 BL 0x3C06A04
	0x01F9C8E4 MOVZ W8, 0x1
	0x01F9C8E8 STR W8, [X19 + 0x48]
	0x01F9C8EC LDP X20, X19, [X31 + 0x20]
	0x01F9C8F0 LDP X30, X21, [X31 + 0x10]
	0x01F9C8F4 ADD X31, X31, 0x30
	0x01F9C8F8 RET
	0x01F9C8FC BL 0x1C16F20
	0x01F9C900 STR D8, [X31 - 0x20]!
	0x01F9C904 STR X30, [X31 + 0x8]
	0x01F9C908 STP X20, X19, [X31 + 0x10]
	0x01F9C90C ADRP X20, 0x243D000
	0x01F9C910 LDRB W8, [X20 + 0x7A0]
	0x01F9C914 MOV X19, X0
	0x01F9C918 TBNZ X8, 0x0, 0x1F9C948
	0x01F9C91C ADRP X0, 0x2157000
	0x01F9C920 LDR X0, [X0 + 0xA28]
	0x01F9C924 BL 0x1C16CF4
	0x01F9C928 ADRP X0, 0x217F000
	0x01F9C92C LDR X0, [X0 + 0xA0]
	0x01F9C930 BL 0x1C16CF4
	0x01F9C934 ADRP X0, 0x217F000
	0x01F9C938 LDR X0, [X0 + 0xA8]
	0x01F9C93C BL 0x1C16CF4
	0x01F9C940 MOVZ W8, 0x1
	0x01F9C944 STRB W8, [X20 + 0x7A0]
	0x01F9C948 LDR W8, [X19 + 0x48]
	0x01F9C94C CMP W8, 0x2
	0x01F9C950 B.NE 0x1F9C99C
	0x01F9C954 MOV X0, X19
	0x01F9C958 BL 0x1F9C578
	0x01F9C95C TBZ X0, 0x0, 0x1F9C998
	0x01F9C960 ADRP X8, 0x2157000
	0x01F9C964 LDR X8, [X8 + 0xA28]
	0x01F9C968 LDR X0, [X8]
	0x01F9C96C LDR W8, [X0 + 0xE0]
	0x01F9C970 CBNZ W8, 0x1F9C978
	0x01F9C974 BL 0x1C16DFC
	0x01F9C978 ADRP X8, 0x217F000
	0x01F9C97C LDR X8, [X8 + 0xA8]
	0x01F9C980 MOV X1, X31
	0x01F9C984 LDR X0, [X8]
	0x01F9C988 BL 0x3C06048
	0x01F9C98C MOVZ W8, 0x3
	0x01F9C990 STR W8, [X19 + 0x48]
	0x01F9C994 B 0x1F9C9A4
	0x01F9C998 LDR W8, [X19 + 0x48]
	0x01F9C99C CMP W8, 0x3
	0x01F9C9A0 B.NE 0x1F9CA08
	0x01F9C9A4 LDP S1, S0, [X19 + 0x20]
	0x01F9C9A8 FCMP S0, S1
	0x01F9C9AC B.GE 0x1F9C9CC
	0x01F9C9B0 BL 0x1F9CA18
	0x01F9C9B4 LDR V8, [X19 + 0x24]
	0x01F9C9B8 MOV X0, X31
	0x01F9C9BC BL 0x3C3C714
	0x01F9C9C0 FADD S0, S8, S0
	0x01F9C9C4 STR S0, [X19 + 0x24]
	0x01F9C9C8 B 0x1F9CA08
	0x01F9C9CC MOVZ W8, 0xBF800000
	0x01F9C9D0 STR W8, [X19 + 0x24]
	0x01F9C9D4 ADRP X8, 0x2157000
	0x01F9C9D8 LDR X8, [X8 + 0xA28]
	0x01F9C9DC LDR X0, [X8]
	0x01F9C9E0 LDR W8, [X0 + 0xE0]
	0x01F9C9E4 CBNZ W8, 0x1F9C9EC
	0x01F9C9E8 BL 0x1C16DFC
	0x01F9C9EC ADRP X8, 0x217F000
	0x01F9C9F0 LDR X8, [X8 + 0xA0]
	0x01F9C9F4 MOV X1, X31
	0x01F9C9F8 LDR X0, [X8]
	0x01F9C9FC BL 0x3C06048
	0x01F9CA00 MOVZ W8, 0x4
	0x01F9CA04 STR W8, [X19 + 0x48]
	0x01F9CA08 LDP X20, X19, [X31 + 0x10]
	0x01F9CA0C LDR X30, [X31 + 0x8]
	0x01F9CA10 LDR V8, [X31], #0x20
	0x01F9CA14 RET
	0x01F9CA18 SUB X31, X31, 0x50
	0x01F9CA1C STR X30, [X31 + 0x20]
	0x01F9CA20 STP X22, X21, [X31 + 0x30]
	0x01F9CA24 STP X20, X19, [X31 + 0x40]
	0x01F9CA28 ADRP X22, 0x243D000
	0x01F9CA2C ADRP X21, 0x217F000
	0x01F9CA30 ADRP X19, 0x217F000
	0x01F9CA34 ADRP X20, 0x217F000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X24, 0x243E000
	010 Move X23, 0x2158000
	011 Move W8, [X24+1939]
	012 Move X23, [X23+1432]
	013 Move X21, X3
	014 Move X22, X2
	015 Move X20, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {56}
	021 Move X0, 0x217F000
	022 Move X0, [X0+4040]
	023 Call 0x1C17CF4
	024 Move X0, 0x217F000
	025 Move X0, [X0+4048]
	026 Call 0x1C17CF4
	027 Move X0, 0x217F000
	028 Move X0, [X0+4056]
	029 Call 0x1C17CF4
	030 Move X0, 0x2159000
	031 Move X0, [X0+440]
	032 Call 0x1C17CF4
	033 Move X0, 0x217F000
	034 Move X0, [X0+4064]
	035 Call 0x1C17CF4
	036 Move X0, 0x2159000
	037 Move X0, [X0+448]
	038 Call 0x1C17CF4
	039 Move X0, 0x2159000
	040 Move X0, [X0+464]
	041 Call 0x1C17CF4
	042 Move X0, 0x2158000
	043 Move X0, [X0+1432]
	044 Call 0x1C17CF4
	045 Move X0, 0x217F000
	046 Move X0, [X0+4072]
	047 Call 0x1C17CF4
	048 Move X0, 0x217F000
	049 Move X0, [X0+4080]
	050 Call 0x1C17CF4
	051 Move X0, 0x217F000
	052 Move X0, [X0+4088]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X24+1939], W8
	056 Move X0, X19
	057 Move X1, X31
	058 Move [X31+32], X31
	059 Move [X31+40], X31
	060 Move [X31+48], X31
	061 Call InputActionProperty.get_reference, X0
	062 Move X8, [X23]
	063 Move X23, X0
	064 Move W9, [X8+224]
	065 Compare W9, 0
	066 JumpIfNotEqual {69}
	067 Move X0, X8
	068 Call 0x1C17DFC
	069 Move X0, X23
	070 Move X1, X31
	071 Move X2, X31
	072 Call Object.op_Equality, X0, X1
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {263}
	077 Move X0, X19
	078 Move X1, X31
	079 Call InputActionProperty.get_action, X0
	080 Compare X0, 0
	081 JumpIfEqual {290}
	082 Move X1, X31
	083 Call InputAction.get_bindings, X0
	084 Move X8, X1
	085 ShiftRight X8, 32
	086 And X8, X8, 0x7FFFFFFF
	087 Compare X8, 0
	088 JumpIfNotEqual {263}
	089 Compare X20, 0
	090 JumpIfEqual {93}
	091 Compare X22, 0
	092 JumpIfNotEqual {104}
	093 Move X8, 0x2159000
	094 Move X8, [X8+464]
	095 Move X0, [X8]
	096 Call 0x1C17F10
	097 Move X8, 0x2159000
	098 Move X8, [X8+448]
	099 Move X20, X0
	100 Move X1, [X8]
	101 Call List`1<Object>..ctor, X0
	102 Compare X22, 0
	103 JumpIfEqual {164}
	104 Move X8, 0x217F000
	105 Move X8, [X8+4064]
	106 Move X0, X22
	107 Move X1, [X8]
	108 Add X8, X31, 8
	109 Call List`1<Object>.GetEnumerator, X0
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 Move X8, [X31+24]
	112 Move X22, 0x217F000
	113 Move X23, 0x217F000
	114 Move X22, [X22+4048]
	115 Move X23, [X23+4088]
	116 Move [X31+2], V0
	117 Move [X31+48], X8
	118 Move X24, 0x2159000
	119 Move X24, [X24+440]
	120 Move X1, [X22]
	121 Add X0, X31, 32
	122 Call Enumerator<Object>.MoveNext, X0
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfNotEqual {159}
	127 Move X0, [X31+48]
	128 Compare X0, 0
	129 JumpIfEqual {286}
	130 Move W1, 47
	131 Move X2, X31
	132 Call String.TrimStart, X0, X1
	133 Move X1, X0
	134 Move X0, [X23]
	135 Move X2, X31
	136 Call String.Concat, X0, X1
	137 Move X1, X0
	138 Compare X20, 0
	139 JumpIfEqual {287}
	140 Move W10, [X20+28]
	141 Move X8, [X20+16]
	142 Move X9, [X24]
	143 Add W10, W10, 1
	144 Move [X20+28], W10
	145 Compare X8, 0
	146 JumpIfEqual {284}
	147 NotImplemented "Instruction LDRSW not yet implemented."
	148 Move W11, [X8+24]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Add W9, W10, 1
	151 Add X8, X8, X10
	152 Move [X20+24], W9
	153 Move [X8+32], X1
	154 Move X8, [X9+32]
	155 Move X8, [X8+192]
	156 Move X2, [X8+112]
	157 Move X0, X20
	158 Call List`1<Object>.AddWithResize, X0, X1
	159 Move X8, 0x217F000
	160 Move X8, [X8+4040]
	161 Add X0, X31, 32
	162 Move X1, [X8]
	163 Call Enumerator<Object>.Dispose, X0
	164 Compare X21, 0
	165 JumpIfEqual {226}
	166 Move X8, 0x217F000
	167 Move X8, [X8+4064]
	168 Move X0, X21
	169 Move X1, [X8]
	170 Add X8, X31, 8
	171 Call List`1<Object>.GetEnumerator, X0
	172 NotImplemented "Instruction LDUR not yet implemented."
	173 Move X8, [X31+24]
	174 Move X21, 0x217F000
	175 Move X22, 0x217F000
	176 Move X21, [X21+4048]
	177 Move X22, [X22+4080]
	178 Move [X31+2], V0
	179 Move [X31+48], X8
	180 Move X23, 0x2159000
	181 Move X23, [X23+440]
	182 Move X1, [X21]
	183 Add X0, X31, 32
	184 Call Enumerator<Object>.MoveNext, X0
	185 Move TEMP, X0
	186 And TEMP, TEMP, 1
	187 Compare TEMP, 1
	188 JumpIfNotEqual {221}
	189 Move X0, [X31+48]
	190 Compare X0, 0
	191 JumpIfEqual {288}
	192 Move W1, 47
	193 Move X2, X31
	194 Call String.TrimStart, X0, X1
	195 Move X1, X0
	196 Move X0, [X22]
	197 Move X2, X31
	198 Call String.Concat, X0, X1
	199 Move X1, X0
	200 Compare X20, 0
	201 JumpIfEqual {289}
	202 Move W10, [X20+28]
	203 Move X8, [X20+16]
	204 Move X9, [X23]
	205 Add W10, W10, 1
	206 Move [X20+28], W10
	207 Compare X8, 0
	208 JumpIfEqual {285}
	209 NotImplemented "Instruction LDRSW not yet implemented."
	210 Move W11, [X8+24]
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Add W9, W10, 1
	213 Add X8, X8, X10
	214 Move [X20+24], W9
	215 Move [X8+32], X1
	216 Move X8, [X9+32]
	217 Move X8, [X8+192]
	218 Move X2, [X8+112]
	219 Move X0, X20
	220 Call List`1<Object>.AddWithResize, X0, X1
	221 Move X8, 0x217F000
	222 Move X8, [X8+4040]
	223 Add X0, X31, 32
	224 Move X1, [X8]
	225 Call Enumerator<Object>.Dispose, X0
	226 Compare X20, 0
	227 JumpIfEqual {290}
	228 Move X8, 0x217F000
	229 Move X8, [X8+4064]
	230 Move X0, X20
	231 Move X1, [X8]
	232 Add X8, X31, 8
	233 Call List`1<Object>.GetEnumerator, X0
	234 NotImplemented "Instruction LDUR not yet implemented."
	235 Move X8, [X31+24]
	236 Move X21, 0x217F000
	237 Move [X31+2], V0
	238 Move [X31+48], X8
	239 Move X21, [X21+4048]
	240 Move X1, [X21]
	241 Add X0, X31, 32
	242 Call Enumerator<Object>.MoveNext, X0
	243 Move TEMP, X0
	244 And TEMP, TEMP, 1
	245 Compare TEMP, 1
	246 JumpIfNotEqual {258}
	247 Move X20, [X31+48]
	248 Move X0, X19
	249 Move X1, X31
	250 Call InputActionProperty.get_action, X0
	251 Add X8, X31, 8
	252 Move X1, X20
	253 Move X2, X31
	254 Move X3, X31
	255 Move X4, X31
	256 Move X5, X31
	257 Call InputActionSetupExtensions.AddBinding, X0, X1, X2, X3, X4
	258 Move X8, 0x217F000
	259 Move X8, [X8+4040]
	260 Add X0, X31, 32
	261 Move X1, [X8]
	262 Call Enumerator<Object>.Dispose, X0
	263 Move X0, X19
	264 Move X1, X31
	265 Call InputActionProperty.get_action, X0
	266 Compare X0, 0
	267 JumpIfEqual {275}
	268 Move X0, X19
	269 Move X1, X31
	270 Call InputActionProperty.get_action, X0
	271 Compare X0, 0
	272 JumpIfEqual {290}
	273 Move X1, X31
	274 Call InputAction.Enable, X0
	275 Move X20, [X31+112]
	276 Move X19, [X31+120]
	277 Move X22, [X31+96]
	278 Move X21, [X31+104]
	279 Move X24, [X31+80]
	280 Move X23, [X31+88]
	281 Move X30, [X31+64]
	282 Add X31, X31, 128
	283 Return 
	284 Call 0x1C17F20
	285 Call 0x1C17F20
	286 Call 0x1C17F20
	287 Call 0x1C17F20
	288 Call 0x1C17F20
	289 Call 0x1C17F20
	290 Call 0x1C17F20
	291 Move X22, X0
	292 NotImplemented "Instruction CMP not yet implemented."
	293 Move X0, X22
	294 Call 0x3EB2AD0
	295 Move X20, [X0]
	296 Call 0x3EB2AE0
	297 Move X8, 0x217F000
	298 Move X8, [X8+4040]
	299 Add X0, X31, 32
	300 Move X1, [X8]
	301 Call Enumerator<Object>.Dispose, X0
	302 Compare X20, 0
	303 JumpIfEqual {263}
	304 Move X0, X20
	305 Call 0x1C17F18
	306 Move X20, X31
	307 Move X22, X0
	308 Move X8, 0x217F000
	309 Move X8, [X8+4040]
	310 Move X1, [X8]
	311 Add X0, X31, 32
	312 Call Enumerator<Object>.Dispose, X0
	313 Compare X20, 0
	314 JumpIfEqual {367}
	315 Move X0, X20
	316 Call 0x1C17F18
	317 Move X22, X0
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Move X0, X22
	320 Call 0x3EB2AD0
	321 Move X21, [X0]
	322 Call 0x3EB2AE0
	323 Move X8, 0x217F000
	324 Move X8, [X8+4040]
	325 Add X0, X31, 32
	326 Move X1, [X8]
	327 Call Enumerator<Object>.Dispose, X0
	328 Compare X21, 0
	329 JumpIfEqual {226}
	330 Move X0, X21
	331 Call 0x1C17F18
	332 Move X21, X31
	333 Move X22, X0
	334 Move X8, 0x217F000
	335 Move X8, [X8+4040]
	336 Move X1, [X8]
	337 Add X0, X31, 32
	338 Call Enumerator<Object>.Dispose, X0
	339 Compare X21, 0
	340 JumpIfEqual {367}
	341 Move X0, X21
	342 Call 0x1C17F18
	343 Move X22, X0
	344 NotImplemented "Instruction CMP not yet implemented."
	345 Move X0, X22
	346 Call 0x3EB2AD0
	347 Move X23, [X0]
	348 Call 0x3EB2AE0
	349 Move X8, 0x217F000
	350 Move X8, [X8+4040]
	351 Add X0, X31, 32
	352 Move X1, [X8]
	353 Call Enumerator<Object>.Dispose, X0
	354 Compare X23, 0
	355 JumpIfEqual {164}
	356 Move X0, X23
	357 Call 0x1C17F18
	358 Move X23, X31
	359 Move X22, X0
	360 Move X8, 0x217F000
	361 Move X8, [X8+4040]
	362 Move X1, [X8]
	363 Add X0, X31, 32
	364 Call Enumerator<Object>.Dispose, X0
	365 Compare X23, 0
	366 JumpIfNotEqual {369}
	367 Move X0, X22
	368 Call 0x1D2D690
	369 Move X0, X23
	370 Call 0x1C17F18
	371 Call 0x1991590

Method: System.Void EnableWithDefaultXRBindings(UnityEngine.InputSystem.InputActionProperty property, Fusion.XR.Host.Rig.RigPart side, System.Collections.Generic.List`1<System.String> bindings)

Disassembly:
	0x01F9CA38 LDRB W8, [X22 + 0x7A1]
	0x01F9CA3C LDR X21, [X21 + 0xB0]
	0x01F9CA40 LDR X19, [X19 + 0xB8]
	0x01F9CA44 LDR X20, [X20 + 0xC0]
	0x01F9CA48 TBNZ X8, 0x0, 0x1F9CAB4
	0x01F9CA4C ADRP X0, 0x217F000
	0x01F9CA50 LDR X0, [X0 + 0xC8]
	0x01F9CA54 BL 0x1C16CF4
	0x01F9CA58 ADRP X0, 0x217F000
	0x01F9CA5C LDR X0, [X0 + 0xD0]
	0x01F9CA60 BL 0x1C16CF4
	0x01F9CA64 ADRP X0, 0x217F000
	0x01F9CA68 LDR X0, [X0 + 0xD8]
	0x01F9CA6C BL 0x1C16CF4
	0x01F9CA70 ADRP X0, 0x217F000
	0x01F9CA74 LDR X0, [X0 + 0xE0]
	0x01F9CA78 BL 0x1C16CF4
	0x01F9CA7C ADRP X0, 0x217F000
	0x01F9CA80 LDR X0, [X0 + 0xB8]
	0x01F9CA84 BL 0x1C16CF4
	0x01F9CA88 ADRP X0, 0x217F000
	0x01F9CA8C LDR X0, [X0 + 0xB0]
	0x01F9CA90 BL 0x1C16CF4
	0x01F9CA94 ADRP X0, 0x217F000
	0x01F9CA98 LDR X0, [X0 + 0xE8]
	0x01F9CA9C BL 0x1C16CF4
	0x01F9CAA0 ADRP X0, 0x217F000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move X3, X2
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X8, [X0+16]
	007 Move V0, [X0]
	008 Add X0, X31, 32
	009 Move X1, X31
	010 Move [X31+48], X8
	011 Move [X31+2], V0
	012 Move X2, X3
	013 Move X3, X31
	014 Move X8, [X0+16]
	015 Move V0, [X0]
	016 Add X0, X31, 0
	017 Move X1, X31
	018 Move X2, X31
	019 Move [X31+16], X8
	020 Move [X31], V0
	021 Call InputSystemExtensions.EnableWithDefaultXRBindings, X0, X1, X2, X3
	022 Move X30, [X31+64]
	023 Add X31, X31, 80
	024 Return 

