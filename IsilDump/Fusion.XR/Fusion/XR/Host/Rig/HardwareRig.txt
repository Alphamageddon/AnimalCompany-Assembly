Type: Fusion.XR.Host.Rig.HardwareRig

Method: System.Single get_InterpolationDelay()

Disassembly:
	0x01F9F498 MOV X1, X31
	0x01F9F49C BL 0x3C38948

ISIL:
	001 Move V0, [X0+72]
	002 Return V0

Method: System.Threading.Tasks.Task`1<Fusion.NetworkRunner> FindRunner()

Disassembly:
	0x01F9F4A0 TBZ X0, 0x0, 0x1F9F4D4
	0x01F9F4A4 LDR X8, [X20 + 0x30]
	0x01F9F4A8 CBZ X8, 0x1F9F554
	0x01F9F4AC LDR X0, [X8 + 0x20]
	0x01F9F4B0 CBZ X0, 0x1F9F554
	0x01F9F4B4 FMOV S0, -1
	0x01F9F4B8 BL 0x1F9F5C8
	0x01F9F4BC MOVZ W8, 0x2
	0x01F9F4C0 STR X0, [X19 + 0x18]
	0x01F9F4C4 B 0x1F9F528
	0x01F9F4C8 MOVN W8, 0x0
	0x01F9F4CC STR W8, [X19 + 0x10]
	0x01F9F4D0 CBZ X20, 0x1F9F554
	0x01F9F4D4 LDR X8, [X20 + 0x30]
	0x01F9F4D8 CBZ X8, 0x1F9F554
	0x01F9F4DC ADRP X9, 0x2154000
	0x01F9F4E0 LDR X9, [X9 + 0x598]
	0x01F9F4E4 LDR X21, [X8 + 0x20]
	0x01F9F4E8 LDR X0, [X9]
	0x01F9F4EC LDR W9, [X0 + 0xE0]
	0x01F9F4F0 CBNZ W9, 0x1F9F4F8
	0x01F9F4F4 BL 0x1C16DFC
	0x01F9F4F8 MOV X0, X21
	0x01F9F4FC MOV X1, X31
	0x01F9F500 BL 0x3C38948
	0x01F9F504 TBZ X0, 0x0, 0x1F9F534
	0x01F9F508 LDR X8, [X20 + 0x30]
	0x01F9F50C CBZ X8, 0x1F9F554
	0x01F9F510 LDR X0, [X8 + 0x20]
	0x01F9F514 CBZ X0, 0x1F9F554
	0x01F9F518 FMOV S0, -1
	0x01F9F51C BL 0x1F9F638
	0x01F9F520 STR X0, [X19 + 0x18]
	0x01F9F524 MOVZ W8, 0x3
	0x01F9F528 STR W8, [X19 + 0x10]
	0x01F9F52C MOVZ W0, 0x1
	0x01F9F530 B 0x1F9F548
	0x01F9F534 MOV W0, W31
	0x01F9F538 B 0x1F9F548
	0x01F9F53C MOV W0, W31
	0x01F9F540 MOVN W8, 0x0
	0x01F9F544 STR W8, [X19 + 0x10]
	0x01F9F548 LDP X20, X19, [X31 + 0x10]
	0x01F9F54C LDP X30, X21, [X31], #0x20
	0x01F9F550 RET
	0x01F9F554 BL 0x1C16F20
	0x01F9F558 STR D8, [X31 - 0x30]!
	0x01F9F55C STP X30, X21, [X31 + 0x10]
	0x01F9F560 STP X20, X19, [X31 + 0x20]
	0x01F9F564 ADRP X20, 0x243A000
	0x01F9F568 ADRP X21, 0x217C000
	0x01F9F56C LDRB W8, [X20 + 0x7CF]
	0x01F9F570 LDR X21, [X21 + 0x1F0]
	0x01F9F574 MOV V8.16B, V0.16B
	0x01F9F578 MOV X19, X0
	0x01F9F57C TBNZ X8, 0x0, 0x1F9F594
	0x01F9F580 ADRP X0, 0x217C000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X21, 0x243B000
	008 Move X20, 0x217D000
	009 Move W8, [X21+1966]
	010 Move X20, [X20+392]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x217D000
	017 Move X0, [X0+400]
	018 Call 0x1C17CF4
	019 Move X0, 0x217D000
	020 Move X0, [X0+408]
	021 Call 0x1C17CF4
	022 Move X0, 0x217D000
	023 Move X0, [X0+416]
	024 Call 0x1C17CF4
	025 Move X0, 0x217D000
	026 Move X0, [X0+392]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+1966], W8
	030 Move X0, [X20]
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 Move [X31+16], V0
	033 Move [X31+24], V0
	034 Move [X31], V0
	035 Move X20, 0x217D000
	036 Move X22, 0x217D000
	037 Move X21, 0x217D000
	038 Move W8, [X0+224]
	039 Move X20, [X20+400]
	040 Move X22, [X22+408]
	041 Move X21, [X21+416]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, [X20]
	046 Add X8, X31, 0
	047 Or X20, X8, 15
	048 Move X8, X20
	049 Call AsyncTaskMethodBuilder`1<Object>.Create
	050 Move X2, [X22]
	051 Move TEMP, 0
	052 Not TEMP
	053 Move W8, TEMP
	054 Add X1, X31, 0
	055 Move X0, X20
	056 Move [X31+32], X19
	057 Move [X31], W8
	058 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	059 Move X1, [X21]
	060 Move X0, X20
	061 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	062 Move X20, [X31+80]
	063 Move X19, [X31+88]
	064 Move X22, [X31+64]
	065 Move X21, [X31+72]
	066 Move X30, [X31+48]
	067 Add X31, X31, 96
	068 Return X0

Method: System.Void Awake()

Disassembly:
	0x01F9F584 LDR X0, [X0 + 0x1F0]
	0x01F9F588 BL 0x1C16CF4
	0x01F9F58C MOVZ W8, 0x1
	0x01F9F590 STRB W8, [X20 + 0x7CF]
	0x01F9F594 LDR X0, [X21]
	0x01F9F598 BL 0x1C16F10
	0x01F9F59C MOV X1, X31
	0x01F9F5A0 MOV X20, X0
	0x01F9F5A4 BL 0x33BDD8C
	0x01F9F5A8 STR W31, [X20 + 0x10]
	0x01F9F5AC STR X19, [X20 + 0x28]
	0x01F9F5B0 STR S8, [X20 + 0x20]
	0x01F9F5B4 MOV X0, X20
	0x01F9F5B8 LDP X20, X19, [X31 + 0x20]
	0x01F9F5BC LDP X30, X21, [X31 + 0x10]
	0x01F9F5C0 LDR V8, [X31], #0x30
	0x01F9F5C4 RET
	0x01F9F5C8 STR D8, [X31 - 0x30]!
	0x01F9F5CC STP X30, X21, [X31 + 0x10]
	0x01F9F5D0 STP X20, X19, [X31 + 0x20]
	0x01F9F5D4 ADRP X20, 0x243A000
	0x01F9F5D8 ADRP X21, 0x217C000
	0x01F9F5DC LDRB W8, [X20 + 0x7CC]
	0x01F9F5E0 LDR X21, [X21 + 0x1F8]
	0x01F9F5E4 MOV V8.16B, V0.16B
	0x01F9F5E8 MOV X19, X0
	0x01F9F5EC TBNZ X8, 0x0, 0x1F9F604
	0x01F9F5F0 ADRP X0, 0x217C000
	0x01F9F5F4 LDR X0, [X0 + 0x1F8]
	0x01F9F5F8 BL 0x1C16CF4
	0x01F9F5FC MOVZ W8, 0x1
	0x01F9F600 STRB W8, [X20 + 0x7CC]
	0x01F9F604 LDR X0, [X21]
	0x01F9F608 BL 0x1C16F10
	0x01F9F60C MOV X1, X31
	0x01F9F610 MOV X20, X0
	0x01F9F614 BL 0x33BDD8C
	0x01F9F618 STR W31, [X20 + 0x10]
	0x01F9F61C STR X19, [X20 + 0x28]
	0x01F9F620 STR S8, [X20 + 0x20]
	0x01F9F624 MOV X0, X20
	0x01F9F628 LDP X20, X19, [X31 + 0x20]
	0x01F9F62C LDP X30, X21, [X31 + 0x10]
	0x01F9F630 LDR V8, [X31], #0x30
	0x01F9F634 RET
	0x01F9F638 STR D8, [X31 - 0x30]!
	0x01F9F63C STP X30, X21, [X31 + 0x10]
	0x01F9F640 STP X20, X19, [X31 + 0x20]
	0x01F9F644 ADRP X20, 0x243A000
	0x01F9F648 ADRP X21, 0x217C000
	0x01F9F64C LDRB W8, [X20 + 0x7CE]
	0x01F9F650 LDR X21, [X21 + 0x200]
	0x01F9F654 MOV V8.16B, V0.16B
	0x01F9F658 MOV X19, X0
	0x01F9F65C TBNZ X8, 0x0, 0x1F9F674
	0x01F9F660 ADRP X0, 0x217C000
	0x01F9F664 LDR X0, [X0 + 0x200]
	0x01F9F668 BL 0x1C16CF4
	0x01F9F66C MOVZ W8, 0x1
	0x01F9F670 STRB W8, [X20 + 0x7CE]
	0x01F9F674 LDR X0, [X21]
	0x01F9F678 BL 0x1C16F10
	0x01F9F67C MOV X1, X31
	0x01F9F680 MOV X20, X0
	0x01F9F684 BL 0x33BDD8C
	0x01F9F688 STR W31, [X20 + 0x10]
	0x01F9F68C STR X19, [X20 + 0x28]
	0x01F9F690 STR S8, [X20 + 0x20]
	0x01F9F694 MOV X0, X20
	0x01F9F698 LDP X20, X19, [X31 + 0x20]
	0x01F9F69C LDP X30, X21, [X31 + 0x10]
	0x01F9F6A0 LDR V8, [X31], #0x30
	0x01F9F6A4 RET
	0x01F9F6A8 LDR X0, [X0 + 0x18]
	0x01F9F6AC RET
	0x01F9F6B0 STP X30, X19, [X31 - 0x10]!
	0x01F9F6B4 ADRP X0, 0x2154000
	0x01F9F6B8 LDR X0, [X0 + 0xB40]
	0x01F9F6BC BL 0x1C16D08
	0x01F9F6C0 BL 0x1C16F10
	0x01F9F6C4 MOV X1, X31
	0x01F9F6C8 MOV X19, X0
	0x01F9F6CC BL 0x3380310
	0x01F9F6D0 ADRP X0, 0x217C000
	0x01F9F6D4 LDR X0, [X0 + 0x208]
	0x01F9F6D8 BL 0x1C16D08
	0x01F9F6DC MOV X1, X0
	0x01F9F6E0 MOV X0, X19
	0x01F9F6E4 BL 0x1C16DEC
	0x01F9F6E8 LDR X0, [X0 + 0x18]
	0x01F9F6EC RET
	0x01F9F6F0 RET
	0x01F9F6F4 STP X30, X21, [X31 - 0x20]!
	0x01F9F6F8 STP X20, X19, [X31 + 0x10]
	0x01F9F6FC ADRP X20, 0x243A000
	0x01F9F700 LDRB W8, [X20 + 0x7B6]
	0x01F9F704 MOV X19, X0
	0x01F9F708 TBNZ X8, 0x0, 0x1F9F720
	0x01F9F70C ADRP X0, 0x2154000
	0x01F9F710 LDR X0, [X0 + 0x598]
	0x01F9F714 BL 0x1C16CF4
	0x01F9F718 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x243B000
	006 Move X21, 0x2155000
	007 Move W8, [X20+1967]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x217D000
	015 Move X0, [X0+424]
	016 Call 0x1C17CF4
	017 Move X0, 0x217D000
	018 Move X0, [X0+432]
	019 Call 0x1C17CF4
	020 Move X0, 0x2155000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1967], W8
	025 Move X0, [X21]
	026 Move X20, [X19+32]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Call Object.op_Implicit, X0
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {46}
	038 Move X0, [X19+32]
	039 Compare X0, 0
	040 JumpIfEqual {136}
	041 Move X8, 0x217D000
	042 Move X8, [X8+424]
	043 Move X1, [X8]
	044 Call 0x21A4AF8, X0
	045 Move [X19+88], X0
	046 Move X0, [X21]
	047 Move X20, [X19+40]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X20
	053 Move X1, X31
	054 Call Object.op_Implicit, X0
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {67}
	059 Move X0, [X19+40]
	060 Compare X0, 0
	061 JumpIfEqual {136}
	062 Move X8, 0x217D000
	063 Move X8, [X8+424]
	064 Move X1, [X8]
	065 Call 0x21A4AF8, X0
	066 Move [X19+96], X0
	067 Move X0, [X21]
	068 Move X20, [X19+48]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, X20
	074 Move X1, X31
	075 Call Object.op_Implicit, X0
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {88}
	080 Move X0, [X19+48]
	081 Compare X0, 0
	082 JumpIfEqual {136}
	083 Move X8, 0x217D000
	084 Move X8, [X8+432]
	085 Move X1, [X8]
	086 Call 0x21A4AF8, X0
	087 Move [X19+80], X0
	088 Move X0, [X21]
	089 Move X20, [X19+88]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move X0, X20
	095 Move X1, X31
	096 Move X2, X31
	097 Call Object.op_Equality, X0, X1
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfEqual {130}
	102 Move X0, [X21]
	103 Move X20, [X19+96]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Move X0, X20
	109 Move X1, X31
	110 Move X2, X31
	111 Call Object.op_Equality, X0, X1
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfEqual {130}
	116 Move X0, [X21]
	117 Move X20, [X19+80]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Move X0, X20
	123 Move X1, X31
	124 Move X2, X31
	125 Call Object.op_Equality, X0, X1
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfNotEqual {131}
	130 Move [X19+69], W31
	131 Move X20, [X31+16]
	132 Move X19, [X31+24]
	133 Move X30, [X31+32]
	134 Move X21, [X31+40]
	135 Return 
	136 Call 0x1C17F20

Method: System.Void StartWithRunner(Fusion.NetworkRunner runner)

Disassembly:
	0x01F9F71C STRB W8, [X20 + 0x7B6]
	0x01F9F720 LDR W8, [X19 + 0x10]
	0x01F9F724 CMP W8, 0x3
	0x01F9F728 B.HI 0x1F9F89C
	0x01F9F72C LDR X20, [X19 + 0x20]
	0x01F9F730 ADRP X9, 0xFFFFFFFFFEB8E000
	0x01F9F734 ADD X9, X9, 0xC6E
	0x01F9F738 ADR X10, 0x10
	0x01F9F73C LDRB W11, [X9, X8, LSL]
	0x01F9F740 ADD X10, X10, X11, 0x2, LSL
	0x01F9F744 BR X10
	0x01F9F748 MOVN W8, 0x0
	0x01F9F74C STR W8, [X19 + 0x10]
	0x01F9F750 CBZ X20, 0x1F9F8BC
	0x01F9F754 LDR X8, [X20 + 0x30]
	0x01F9F758 CBZ X8, 0x1F9F8BC
	0x01F9F75C ADRP X9, 0x2154000
	0x01F9F760 LDR X9, [X9 + 0x598]
	0x01F9F764 LDR X21, [X8 + 0x20]
	0x01F9F768 LDR X0, [X9]
	0x01F9F76C LDR W9, [X0 + 0xE0]
	0x01F9F770 CBNZ W9, 0x1F9F778
	0x01F9F774 BL 0x1C16DFC
	0x01F9F778 MOV X0, X21
	0x01F9F77C MOV X1, X31
	0x01F9F780 BL 0x3C38948
	0x01F9F784 TBZ X0, 0x0, 0x1F9F7BC
	0x01F9F788 LDR X8, [X20 + 0x30]
	0x01F9F78C CBZ X8, 0x1F9F8BC
	0x01F9F790 LDR X0, [X8 + 0x20]
	0x01F9F794 CBZ X0, 0x1F9F8BC
	0x01F9F798 FMOV S0, -1
	0x01F9F79C BL 0x1F9F558
	0x01F9F7A0 STR X0, [X19 + 0x18]
	0x01F9F7A4 MOVZ W0, 0x1
	0x01F9F7A8 STR W0, [X19 + 0x10]
	0x01F9F7AC B 0x1F9F8B0
	0x01F9F7B0 MOVN W8, 0x0
	0x01F9F7B4 STR W8, [X19 + 0x10]
	0x01F9F7B8 CBZ X20, 0x1F9F8BC
	0x01F9F7BC LDR X8, [X20]
	0x01F9F7C0 LDP S1, S2, [X19 + 0x2C]
	0x01F9F7C4 LDR V0, [X19 + 0x28]
	0x01F9F7C8 MOV X0, X20
	0x01F9F7CC LDR X9, [X8 + 0x2C8]
	0x01F9F7D0 LDR X1, [X8 + 0x2D0]
	0x01F9F7D4 BLR X9
	0x01F9F7D8 LDR X8, [X20 + 0x30]
	0x01F9F7DC CBZ X8, 0x1F9F8BC
	0x01F9F7E0 ADRP X9, 0x2154000
	0x01F9F7E4 LDR X9, [X9 + 0x598]
	0x01F9F7E8 LDR X21, [X8 + 0x20]
	0x01F9F7EC LDR X0, [X9]
	0x01F9F7F0 LDR W9, [X0 + 0xE0]
	0x01F9F7F4 CBNZ W9, 0x1F9F7FC
	0x01F9F7F8 BL 0x1C16DFC
	0x01F9F7FC MOV X0, X21
	0x01F9F800 MOV X1, X31
	0x01F9F804 BL 0x3C38948

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x243B000
	007 Move X21, 0x2155000
	008 Move W8, [X22+1968]
	009 Move X21, [X21+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x2159000
	017 Move X0, [X0+3856]
	018 Call 0x1C17CF4
	019 Move X0, 0x2155000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1968], W8
	024 Move [X20+56], X19
	025 Move X0, [X21]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X1, X31
	032 Call Object.op_Implicit, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {67}
	037 Move X8, 0x2159000
	038 Move X8, [X8+3856]
	039 Move W1, 1
	040 Move X0, [X8]
	041 Call 0x1C17D6C
	042 Compare X0, 0
	043 JumpIfEqual {73}
	044 Move X8, [X0]
	045 Move X21, X0
	046 Move X0, X20
	047 Move X1, [X8+64]
	048 Call 0x1C17E00
	049 Compare X0, 0
	050 JumpIfEqual {74}
	051 Move W8, [X21+24]
	052 Compare W8, 0
	053 JumpIfEqual {77}
	054 Move [X21+32], X20
	055 Compare X19, 0
	056 JumpIfEqual {73}
	057 Move X0, X19
	058 Move X1, X21
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X2, X31
	064 Move X30, [X31+48]
	065 Call NetworkRunner.AddCallbacks, X0, X1
	066 Return 
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+48]
	072 Return 
	073 Call 0x1C17F20
	074 Call 0x1C17F44
	075 Move X1, X31
	076 Call 0x1C17DEC
	077 Call 0x1C17F28

Method: System.Void OnDestroy()

Disassembly:
	0x01F9F808 TBZ X0, 0x0, 0x1F9F83C
	0x01F9F80C LDR X8, [X20 + 0x30]
	0x01F9F810 CBZ X8, 0x1F9F8BC
	0x01F9F814 LDR X0, [X8 + 0x20]
	0x01F9F818 CBZ X0, 0x1F9F8BC
	0x01F9F81C FMOV S0, -1
	0x01F9F820 BL 0x1F9F5C8
	0x01F9F824 MOVZ W8, 0x2
	0x01F9F828 STR X0, [X19 + 0x18]
	0x01F9F82C B 0x1F9F890
	0x01F9F830 MOVN W8, 0x0
	0x01F9F834 STR W8, [X19 + 0x10]
	0x01F9F838 CBZ X20, 0x1F9F8BC
	0x01F9F83C LDR X8, [X20 + 0x30]
	0x01F9F840 CBZ X8, 0x1F9F8BC
	0x01F9F844 ADRP X9, 0x2154000
	0x01F9F848 LDR X9, [X9 + 0x598]
	0x01F9F84C LDR X21, [X8 + 0x20]
	0x01F9F850 LDR X0, [X9]
	0x01F9F854 LDR W9, [X0 + 0xE0]
	0x01F9F858 CBNZ W9, 0x1F9F860
	0x01F9F85C BL 0x1C16DFC
	0x01F9F860 MOV X0, X21
	0x01F9F864 MOV X1, X31
	0x01F9F868 BL 0x3C38948
	0x01F9F86C TBZ X0, 0x0, 0x1F9F89C
	0x01F9F870 LDR X8, [X20 + 0x30]
	0x01F9F874 CBZ X8, 0x1F9F8BC
	0x01F9F878 LDR X0, [X8 + 0x20]
	0x01F9F87C CBZ X0, 0x1F9F8BC
	0x01F9F880 FMOV S0, -1
	0x01F9F884 BL 0x1F9F638
	0x01F9F888 STR X0, [X19 + 0x18]
	0x01F9F88C MOVZ W8, 0x3
	0x01F9F890 STR W8, [X19 + 0x10]
	0x01F9F894 MOVZ W0, 0x1
	0x01F9F898 B 0x1F9F8B0
	0x01F9F89C MOV W0, W31
	0x01F9F8A0 B 0x1F9F8B0
	0x01F9F8A4 MOV W0, W31
	0x01F9F8A8 MOVN W8, 0x0
	0x01F9F8AC STR W8, [X19 + 0x10]
	0x01F9F8B0 LDP X20, X19, [X31 + 0x10]
	0x01F9F8B4 LDP X30, X21, [X31], #0x20
	0x01F9F8B8 RET
	0x01F9F8BC BL 0x1C16F20
	0x01F9F8C0 LDR X0, [X0 + 0x18]
	0x01F9F8C4 RET
	0x01F9F8C8 STP X30, X19, [X31 - 0x10]!
	0x01F9F8CC ADRP X0, 0x2154000
	0x01F9F8D0 LDR X0, [X0 + 0xB40]
	0x01F9F8D4 BL 0x1C16D08
	0x01F9F8D8 BL 0x1C16F10
	0x01F9F8DC MOV X1, X31
	0x01F9F8E0 MOV X19, X0
	0x01F9F8E4 BL 0x3380310
	0x01F9F8E8 ADRP X0, 0x217C000
	0x01F9F8EC LDR X0, [X0 + 0x210]
	0x01F9F8F0 BL 0x1C16D08
	0x01F9F8F4 MOV X1, X0
	0x01F9F8F8 MOV X0, X19
	0x01F9F8FC BL 0x1C16DEC
	0x01F9F900 LDR X0, [X0 + 0x18]
	0x01F9F904 RET
	0x01F9F908 SUB X31, X31, 0x70
	0x01F9F90C STP X29, X30, [X31 + 0x10]
	0x01F9F910 STP X28, X27, [X31 + 0x20]
	0x01F9F914 STP X26, X25, [X31 + 0x30]
	0x01F9F918 STP X24, X23, [X31 + 0x40]
	0x01F9F91C STP X22, X21, [X31 + 0x50]
	0x01F9F920 STP X20, X19, [X31 + 0x60]
	0x01F9F924 ADRP X20, 0x243A000
	0x01F9F928 LDRB W8, [X20 + 0x7B7]
	0x01F9F92C MOV X19, X0
	0x01F9F930 TBNZ X8, 0x0, 0x1F9F9C0
	0x01F9F934 ADRP X0, 0x217C000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x243B000
	006 Move W8, [X20+1969]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0x2155000
	013 Move X0, [X0+2600]
	014 Call 0x1C17CF4
	015 Move X0, 0x2159000
	016 Move X0, [X0+3856]
	017 Call 0x1C17CF4
	018 Move X0, 0x2155000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move X0, 0x217D000
	022 Move X0, [X0+440]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1969], W8
	026 Move X20, 0x2155000
	027 Move W8, [X19+68]
	028 Move X20, [X20+1432]
	029 Compare W8, 0
	030 JumpIfEqual {43}
	031 Move X8, 0x2155000
	032 Move X8, [X8+2600]
	033 Move X21, 0x217D000
	034 Move X0, [X8]
	035 Move W8, [X0+224]
	036 Move X21, [X21+440]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, [X21]
	041 Move X1, X31
	042 Call Debug.LogError, X0
	043 Move [X19+68], W31
	044 Move X0, [X20]
	045 Move X20, [X19+56]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X20
	051 Move X1, X31
	052 Call Object.op_Implicit, X0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {87}
	057 Move X8, 0x2159000
	058 Move X8, [X8+3856]
	059 Move X20, [X19+56]
	060 Move W1, 1
	061 Move X0, [X8]
	062 Call 0x1C17D6C
	063 Compare X0, 0
	064 JumpIfEqual {92}
	065 Move X8, [X0]
	066 Move X21, X0
	067 Move X0, X19
	068 Move X1, [X8+64]
	069 Call 0x1C17E00
	070 Compare X0, 0
	071 JumpIfEqual {93}
	072 Move W8, [X21+24]
	073 Compare W8, 0
	074 JumpIfEqual {96}
	075 Move [X21+32], X19
	076 Compare X20, 0
	077 JumpIfEqual {92}
	078 Move X0, X20
	079 Move X20, [X31+16]
	080 Move X19, [X31+24]
	081 Move X1, X21
	082 Move X2, X31
	083 Move X30, [X31+32]
	084 Move X21, [X31+40]
	085 Call NetworkRunner.RemoveCallbacks, X0, X1
	086 Return 
	087 Move X20, [X31+16]
	088 Move X19, [X31+24]
	089 Move X30, [X31+32]
	090 Move X21, [X31+40]
	091 Return 
	092 Call 0x1C17F20
	093 Call 0x1C17F44
	094 Move X1, X31
	095 Call 0x1C17DEC
	096 Call 0x1C17F28

Method: System.Void Rotate(System.Single angle)

Disassembly:
	0x01F9F938 LDR X0, [X0 + 0x218]
	0x01F9F93C BL 0x1C16CF4
	0x01F9F940 ADRP X0, 0x217C000
	0x01F9F944 LDR X0, [X0 + 0x220]
	0x01F9F948 BL 0x1C16CF4
	0x01F9F94C ADRP X0, 0x217C000
	0x01F9F950 LDR X0, [X0 + 0x188]
	0x01F9F954 BL 0x1C16CF4
	0x01F9F958 ADRP X0, 0x2154000
	0x01F9F95C LDR X0, [X0 + 0xA28]
	0x01F9F960 BL 0x1C16CF4
	0x01F9F964 ADRP X0, 0x217C000
	0x01F9F968 LDR X0, [X0 + 0x228]
	0x01F9F96C BL 0x1C16CF4
	0x01F9F970 ADRP X0, 0x217C000
	0x01F9F974 LDR X0, [X0 + 0x230]
	0x01F9F978 BL 0x1C16CF4
	0x01F9F97C ADRP X0, 0x215D000
	0x01F9F980 LDR X0, [X0 + 0xE80]
	0x01F9F984 BL 0x1C16CF4
	0x01F9F988 ADRP X0, 0x217C000
	0x01F9F98C LDR X0, [X0 + 0x238]
	0x01F9F990 BL 0x1C16CF4
	0x01F9F994 ADRP X0, 0x2154000
	0x01F9F998 LDR X0, [X0 + 0x598]
	0x01F9F99C BL 0x1C16CF4
	0x01F9F9A0 ADRP X0, 0x2155000
	0x01F9F9A4 LDR X0, [X0 + 0x7B8]
	0x01F9F9A8 BL 0x1C16CF4
	0x01F9F9AC ADRP X0, 0x217C000
	0x01F9F9B0 LDR X0, [X0 + 0x240]
	0x01F9F9B4 BL 0x1C16CF4
	0x01F9F9B8 MOVZ W8, 0x1
	0x01F9F9BC STRB W8, [X20 + 0x7B7]
	0x01F9F9C0 STR X31, [X31 + 0x8]
	0x01F9F9C4 ADRP X24, 0x2154000
	0x01F9F9C8 ADRP X22, 0x217C000
	0x01F9F9CC ADRP X25, 0x2155000
	0x01F9F9D0 LDR W8, [X19]
	0x01F9F9D4 LDR X23, [X19 + 0x20]
	0x01F9F9D8 LDR X24, [X24 + 0x598]
	0x01F9F9DC LDR X22, [X22 + 0x188]

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X1, X31
	009 Move V8, V0
	010 Move X20, X0
	011 Call Component.get_transform, X0
	012 Move X8, [X20+48]
	013 Compare X8, 0
	014 JumpIfEqual {53}
	015 Move X19, X0
	016 Move X0, X8
	017 Move X1, X31
	018 Call Component.get_transform, X0
	019 Compare X0, 0
	020 JumpIfEqual {53}
	021 Move X1, X31
	022 Call Transform.get_position, X0
	023 Move X0, X20
	024 Move X1, X31
	025 Move V9, V0
	026 Move V10, V1
	027 Move V11, V2
	028 Call Component.get_transform, X0
	029 Compare X0, 0
	030 JumpIfEqual {53}
	031 Move X1, X31
	032 Call Transform.get_up, X0
	033 Compare X19, 0
	034 JumpIfEqual {53}
	035 Move V3, V0
	036 Move X0, X19
	037 Move V0, V9
	038 Move V6, V8
	039 Move X20, [X31+48]
	040 Move X19, [X31+56]
	041 Move X30, [X31+32]
	042 Move D9, [X31+16]
	043 Move D8, [X31+24]
	044 Move V4, V1
	045 Move V5, V2
	046 Move V1, V10
	047 Move V2, V11
	048 Move X1, X31
	049 Move D11, [X31+64]
	050 Move D10, [X31+72]
	051 Call Transform.RotateAround, X0, X1, X2, V0
	052 Return 
	053 Call 0x1C17F20

Method: System.Void Teleport(UnityEngine.Vector3 position)

Disassembly:
	0x01F9F9E0 LDR X25, [X25 + 0x7B8]
	0x01F9F9E4 CBZ W8, 0x1F9FA08
	0x01F9F9E8 CMP W8, 0x1
	0x01F9F9EC B.NE 0x1F9FD18
	0x01F9F9F0 LDR X8, [X19 + 0x28]
	0x01F9F9F4 MOVN W9, 0x0
	0x01F9F9F8 STR X8, [X31 + 0x8]
	0x01F9F9FC STR X31, [X19 + 0x28]
	0x01F9FA00 STR W9, [X19]
	0x01F9FA04 B 0x1F9FA20
	0x01F9FA08 LDR X8, [X19 + 0x28]
	0x01F9FA0C MOVN W9, 0x0
	0x01F9FA10 STR X8, [X31 + 0x8]
	0x01F9FA14 STR X31, [X19 + 0x28]
	0x01F9FA18 STR W9, [X19]
	0x01F9FA1C B 0x1F9FD0C
	0x01F9FA20 ADD X0, X31, 0x8
	0x01F9FA24 MOV X1, X31
	0x01F9FA28 BL 0x32C3B4C
	0x01F9FA2C CBZ X23, 0x1F9FC7C
	0x01F9FA30 ADRP X20, 0x215D000
	0x01F9FA34 ADRP X26, 0x217C000
	0x01F9FA38 ADRP X27, 0x217C000
	0x01F9FA3C LDR X20, [X20 + 0xE80]
	0x01F9FA40 LDR X26, [X26 + 0x228]
	0x01F9FA44 LDR X27, [X27 + 0x230]
	0x01F9FA48 ADRP X28, 0x243A000
	0x01F9FA4C MOVZ W29, 0x1
	0x01F9FA50 LDRB W8, [X23 + 0x44]
	0x01F9FA54 CBZ W8, 0x1F9FDA4
	0x01F9FA58 LDR X0, [X24]
	0x01F9FA5C LDR X21, [X23 + 0x38]
	0x01F9FA60 LDR W8, [X0 + 0xE0]
	0x01F9FA64 CBNZ W8, 0x1F9FA6C
	0x01F9FA68 BL 0x1C16DFC
	0x01F9FA6C MOV X0, X21
	0x01F9FA70 MOV X1, X31
	0x01F9FA74 MOV X2, X31
	0x01F9FA78 BL 0x3C3883C
	0x01F9FA7C TBZ X0, 0x0, 0x1F9FDA4
	0x01F9FA80 LDR X0, [X20]
	0x01F9FA84 LDR W8, [X0 + 0xE0]
	0x01F9FA88 CBNZ W8, 0x1F9FA90

ISIL:
	001 Move [X31-80], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X19
	010 Move X19, X0
	011 Move X0, [X0+48]
	012 Compare X0, 0
	013 JumpIfEqual {56}
	014 Move X1, X31
	015 Move V9, V2
	016 Move V8, V1
	017 Move V10, V0
	018 Call Component.get_transform, X0
	019 Compare X0, 0
	020 JumpIfEqual {56}
	021 Move X1, X31
	022 Call Transform.get_position, X0
	023 Move X0, X19
	024 Move X1, X31
	025 Move V11, V0
	026 Move V12, V2
	027 Call Component.get_transform, X0
	028 Compare X0, 0
	029 JumpIfEqual {56}
	030 Move X1, X31
	031 Call Transform.get_position, X0
	032 Move X0, X19
	033 Move X1, X31
	034 Move V13, V0
	035 Move V14, V2
	036 Call Component.get_transform, X0
	037 Compare X0, 0
	038 JumpIfEqual {56}
	039 Subtract S0, S12, S14
	040 Subtract S1, S11, S13
	041 Subtract S2, S9, S0
	042 Subtract S0, S10, S1
	043 Move V1, V8
	044 Move X30, [X31+64]
	045 Move X19, [X31+72]
	046 Move D9, [X31+48]
	047 Move D8, [X31+56]
	048 Move D11, [X31+32]
	049 Move D10, [X31+40]
	050 Move D13, [X31+16]
	051 Move D12, [X31+24]
	052 Move X1, X31
	053 Move V14, [X31+80]
	054 Call Transform.set_position, X0, X1
	055 Return 
	056 Call 0x1C17F20

Method: System.Collections.IEnumerator FadedTeleport(UnityEngine.Vector3 position)

Disassembly:
	0x01F9FA8C BL 0x1C16DFC
	0x01F9FA90 LDRB W8, [X28 + 0x3BD]
	0x01F9FA94 CBNZ W8, 0x1F9FAA4
	0x01F9FA98 MOV X0, X20
	0x01F9FA9C BL 0x1C16CF4
	0x01F9FAA0 STRB W29, [X28 + 0x3BD]
	0x01F9FAA4 LDR X0, [X20]
	0x01F9FAA8 LDR W8, [X0 + 0xE0]
	0x01F9FAAC CBNZ W8, 0x1F9FAB8
	0x01F9FAB0 BL 0x1C16DFC
	0x01F9FAB4 LDR X0, [X20]
	0x01F9FAB8 LDR X8, [X0 + 0xB8]
	0x01F9FABC LDR X21, [X8]
	0x01F9FAC0 CBZ X21, 0x1F9FC74
	0x01F9FAC4 LDR X8, [X21]
	0x01F9FAC8 LDR X1, [X26]
	0x01F9FACC LDRH W9, [X8 + 0x12E]
	0x01F9FAD0 CBZ X9, 0x1F9FAF4
	0x01F9FAD4 LDR X10, [X8 + 0xB0]
	0x01F9FAD8 ADD X10, X10, 0x8
	0x01F9FADC LDUR X11, [X10 - 0x8]
	0x01F9FAE0 CMP X11, X1
	0x01F9FAE4 B.EQ 0x1F9FB04
	0x01F9FAE8 SUBS X9, X9, 0x1
	0x01F9FAEC ADD X10, X10, 0x10
	0x01F9FAF0 B.NE 0x1F9FADC
	0x01F9FAF4 MOV X0, X21
	0x01F9FAF8 MOV W2, W31
	0x01F9FAFC BL 0x1C5C788
	0x01F9FB00 B 0x1F9FB10
	0x01F9FB04 LDRSW X9, [X10]
	0x01F9FB08 ADD X8, X8, X9, 0x4, LSL
	0x01F9FB0C ADD X0, X8, 0x138

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x243B000
	009 Move X21, 0x217D000
	010 Move W8, [X20+1970]
	011 Move X21, [X21+448]
	012 Move V8, V2
	013 Move V9, V1
	014 Move V10, V0
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x217D000
	021 Move X0, [X0+448]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1970], W8
	025 Move X0, [X21]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X20, X0
	029 Call Object..ctor, X0
	030 Move [X20+16], W31
	031 Move [X20+32], X19
	032 Move [X20+40], S10
	033 Move [X20+48], S9
	034 Move [X20+48], S8
	035 Move X0, X20
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Move D9, [X31+16]
	041 Move D8, [X31+24]
	042 Move V10, [X31+64]
	043 Return X0

Method: System.Collections.IEnumerator FadedRotate(System.Single angle)

Disassembly:
	0x01F9FB38 CBNZ W8, 0x1F9FB48
	0x01F9FB3C MOV X0, X20
	0x01F9FB40 BL 0x1C16CF4
	0x01F9FB44 STRB W29, [X28 + 0x3BD]
	0x01F9FB48 LDR X0, [X20]
	0x01F9FB4C LDR W8, [X0 + 0xE0]
	0x01F9FB50 CBNZ W8, 0x1F9FB5C
	0x01F9FB54 BL 0x1C16DFC
	0x01F9FB58 LDR X0, [X20]
	0x01F9FB5C LDR X8, [X0 + 0xB8]
	0x01F9FB60 LDR X21, [X8]
	0x01F9FB64 CBZ X21, 0x1F9FC78
	0x01F9FB68 LDR X8, [X21]
	0x01F9FB6C LDR X1, [X27]
	0x01F9FB70 LDRH W9, [X8 + 0x12E]
	0x01F9FB74 CBZ X9, 0x1F9FB98
	0x01F9FB78 LDR X10, [X8 + 0xB0]
	0x01F9FB7C ADD X10, X10, 0x8
	0x01F9FB80 LDUR X11, [X10 - 0x8]
	0x01F9FB84 CMP X11, X1
	0x01F9FB88 B.EQ 0x1F9FBB0
	0x01F9FB8C SUBS X9, X9, 0x1
	0x01F9FB90 ADD X10, X10, 0x10
	0x01F9FB94 B.NE 0x1F9FB80
	0x01F9FB98 MOV X0, X21
	0x01F9FB9C MOV W2, W31
	0x01F9FBA0 BL 0x1C5C788
	0x01F9FBA4 B 0x1F9FBBC

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x243B000
	007 Move X21, 0x217D000
	008 Move W8, [X20+1971]
	009 Move X21, [X21+456]
	010 Move V8, V0
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x217D000
	017 Move X0, [X0+456]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+1971], W8
	021 Move X0, [X21]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call Object..ctor, X0
	026 Move [X20+16], W31
	027 Move [X20+32], X19
	028 Move [X20+40], S8
	029 Move X0, X20
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X30, [X31+16]
	033 Move X21, [X31+24]
	034 Move V8, [X31+48]
	035 Return X0

Method: System.Void OnInput(Fusion.NetworkRunner runner, Fusion.NetworkInput input)

Disassembly:
	0x01F9FBD0 STR X0, [X23 + 0x38]
	0x01F9FBD4 LDR X0, [X24]
	0x01F9FBD8 LDR W8, [X0 + 0xE0]
	0x01F9FBDC CBNZ W8, 0x1F9FBE4
	0x01F9FBE0 BL 0x1C16DFC
	0x01F9FBE4 MOV X0, X21
	0x01F9FBE8 MOV X1, X31
	0x01F9FBEC MOV X2, X31
	0x01F9FBF0 BL 0x3C3883C
	0x01F9FBF4 TBZ X0, 0x0, 0x1F9FA50
	0x01F9FBF8 LDR X0, [X25]
	0x01F9FBFC LDR W8, [X0 + 0xE0]
	0x01F9FC00 CBNZ W8, 0x1F9FC08
	0x01F9FC04 BL 0x1C16DFC
	0x01F9FC08 MOVZ W0, 0xA
	0x01F9FC0C MOV X1, X31
	0x01F9FC10 BL 0x33F53C4
	0x01F9FC14 CBZ X0, 0x1F9FC80
	0x01F9FC18 MOV X1, X31
	0x01F9FC1C BL 0x33ED394
	0x01F9FC20 STR X0, [X31 + 0x8]
	0x01F9FC24 ADD X0, X31, 0x8
	0x01F9FC28 MOV X1, X31
	0x01F9FC2C BL 0x32C3A80
	0x01F9FC30 TBNZ X0, 0x0, 0x1F9FA20
	0x01F9FC34 MOVZ W8, 0x1
	0x01F9FC38 STR W8, [X19]
	0x01F9FC3C LDR X8, [X31 + 0x8]
	0x01F9FC40 STR X8, [X19 + 0x28]
	0x01F9FC44 LDR X0, [X22]
	0x01F9FC48 LDR W8, [X0 + 0xE0]
	0x01F9FC4C CBNZ W8, 0x1F9FC54
	0x01F9FC50 BL 0x1C16DFC
	0x01F9FC54 ADRP X8, 0x217C000
	0x01F9FC58 LDR X8, [X8 + 0x218]
	0x01F9FC5C ADD X0, X19, 0x8
	0x01F9FC60 LDR X3, [X8]
	0x01F9FC64 ADD X1, X31, 0x8
	0x01F9FC68 MOV X2, X19
	0x01F9FC6C BL 0x1FC4E5C
	0x01F9FC70 B 0x1F9FE18
	0x01F9FC74 BL 0x1C16F20
	0x01F9FC78 BL 0x1C16F20
	0x01F9FC7C BL 0x1C16F20
	0x01F9FC80 BL 0x1C16F20
	0x01F9FC84 B 0x1F9FEA0
	0x01F9FC88 B 0x1F9FEA0
	0x01F9FC8C B 0x1F9FEA0
	0x01F9FC90 B 0x1F9FEA0
	0x01F9FC94 B 0x1F9FEA0
	0x01F9FC98 B 0x1F9FEA0
	0x01F9FC9C B 0x1F9FEA0
	0x01F9FCA0 B 0x1F9FEA0
	0x01F9FCA4 B 0x1F9FEA0
	0x01F9FCA8 B 0x1F9FEA0
	0x01F9FCAC B 0x1F9FEA0
	0x01F9FCB0 B 0x1F9FEA0
	0x01F9FCB4 B 0x1F9FEA0
	0x01F9FCB8 B 0x1F9FEA0
	0x01F9FCBC B 0x1F9FEA0
	0x01F9FCC0 B 0x1F9FEA0
	0x01F9FCC4 B 0x1F9FEA0
	0x01F9FCC8 LDRB W8, [X23 + 0x44]
	0x01F9FCCC CBZ W8, 0x1F9FD20
	0x01F9FCD0 LDR X0, [X25]
	0x01F9FCD4 LDR W8, [X0 + 0xE0]
	0x01F9FCD8 CBNZ W8, 0x1F9FCE0
	0x01F9FCDC BL 0x1C16DFC
	0x01F9FCE0 MOVZ W0, 0xA
	0x01F9FCE4 MOV X1, X31
	0x01F9FCE8 BL 0x33F53C4
	0x01F9FCEC CBZ X0, 0x1F9FE6C
	0x01F9FCF0 MOV X1, X31
	0x01F9FCF4 BL 0x33ED394
	0x01F9FCF8 STR X0, [X31 + 0x8]
	0x01F9FCFC ADD X0, X31, 0x8
	0x01F9FD00 MOV X1, X31
	0x01F9FD04 BL 0x32C3A80
	0x01F9FD08 TBZ X0, 0x0, 0x1F9FDE0
	0x01F9FD0C ADD X0, X31, 0x8
	0x01F9FD10 MOV X1, X31
	0x01F9FD14 BL 0x32C3B4C
	0x01F9FD18 CBNZ X23, 0x1F9FCC8
	0x01F9FD1C BL 0x1C16F20
	0x01F9FD20 MOVZ W8, 0x1
	0x01F9FD24 STRB W8, [X23 + 0x44]
	0x01F9FD28 LDR X0, [X24]
	0x01F9FD2C LDR X20, [X23 + 0x38]
	0x01F9FD30 LDR W8, [X0 + 0xE0]
	0x01F9FD34 CBNZ W8, 0x1F9FD3C
	0x01F9FD38 BL 0x1C16DFC
	0x01F9FD3C MOV X0, X20
	0x01F9FD40 MOV X1, X31
	0x01F9FD44 MOV X2, X31
	0x01F9FD48 BL 0x3C3883C
	0x01F9FD4C TBZ X0, 0x0, 0x1F9FDA4
	0x01F9FD50 LDR W8, [X23 + 0x40]
	0x01F9FD54 CBZ W8, 0x1F9FDA4
	0x01F9FD58 CMP W8, 0x1
	0x01F9FD5C B.EQ 0x1F9FD78
	0x01F9FD60 MOV X0, X31
	0x01F9FD64 BL 0x1EB7374
	0x01F9FD68 CBZ X0, 0x1F9FE70
	0x01F9FD6C LDR W8, [X0 + 0x20]
	0x01F9FD70 CMP W8, 0x1
	0x01F9FD74 B.NE 0x1F9FE38
	0x01F9FD78 ADRP X8, 0x2154000
	0x01F9FD7C LDR X8, [X8 + 0xA28]
	0x01F9FD80 LDR X0, [X8]
	0x01F9FD84 LDR W8, [X0 + 0xE0]
	0x01F9FD88 CBNZ W8, 0x1F9FD90
	0x01F9FD8C BL 0x1C16DFC
	0x01F9FD90 ADRP X8, 0x217C000
	0x01F9FD94 LDR X8, [X8 + 0x240]
	0x01F9FD98 LDR X0, [X8]
	0x01F9FD9C MOV X1, X31
	0x01F9FDA0 BL 0x3C06A04
	0x01F9FDA4 MOVN W8, 0x1
	0x01F9FDA8 STRB W31, [X23 + 0x44]
	0x01F9FDAC LDR X20, [X23 + 0x38]
	0x01F9FDB0 STR W8, [X19], #0x8
	0x01F9FDB4 LDR X0, [X22]
	0x01F9FDB8 ADRP X21, 0x217C000
	0x01F9FDBC LDR W8, [X0 + 0xE0]
	0x01F9FDC0 LDR X21, [X21 + 0x220]
	0x01F9FDC4 CBNZ W8, 0x1F9FDCC
	0x01F9FDC8 BL 0x1C16DFC
	0x01F9FDCC LDR X2, [X21]
	0x01F9FDD0 MOV X0, X19
	0x01F9FDD4 MOV X1, X20
	0x01F9FDD8 BL 0x26322B0
	0x01F9FDDC B 0x1F9FE18
	0x01F9FDE0 STR W31, [X19]
	0x01F9FDE4 LDR X8, [X31 + 0x8]
	0x01F9FDE8 STR X8, [X19 + 0x28]
	0x01F9FDEC LDR X0, [X22]
	0x01F9FDF0 LDR W8, [X0 + 0xE0]
	0x01F9FDF4 CBNZ W8, 0x1F9FDFC
	0x01F9FDF8 BL 0x1C16DFC
	0x01F9FDFC ADRP X8, 0x217C000
	0x01F9FE00 LDR X8, [X8 + 0x218]
	0x01F9FE04 ADD X0, X19, 0x8
	0x01F9FE08 LDR X3, [X8]
	0x01F9FE0C ADD X1, X31, 0x8
	0x01F9FE10 MOV X2, X19
	0x01F9FE14 BL 0x1FC4E5C
	0x01F9FE18 LDP X20, X19, [X31 + 0x60]
	0x01F9FE1C LDP X22, X21, [X31 + 0x50]
	0x01F9FE20 LDP X24, X23, [X31 + 0x40]
	0x01F9FE24 LDP X26, X25, [X31 + 0x30]
	0x01F9FE28 LDP X28, X27, [X31 + 0x20]
	0x01F9FE2C LDP X29, X30, [X31 + 0x10]
	0x01F9FE30 ADD X31, X31, 0x70
	0x01F9FE34 RET
	0x01F9FE38 LDR X0, [X24]
	0x01F9FE3C LDR W8, [X0 + 0xE0]
	0x01F9FE40 CBNZ W8, 0x1F9FE48
	0x01F9FE44 BL 0x1C16DFC
	0x01F9FE48 ADRP X8, 0x217C000
	0x01F9FE4C LDR X8, [X8 + 0x238]
	0x01F9FE50 LDR X1, [X8]
	0x01F9FE54 MOVZ W0, 0x1
	0x01F9FE58 BL 0x222D114
	0x01F9FE5C STR X0, [X23 + 0x38]
	0x01F9FE60 MOV X0, X31
	0x01F9FE64 BL 0x3C3C6C4
	0x01F9FE68 B 0x1F9FA2C
	0x01F9FE6C BL 0x1C16F20
	0x01F9FE70 BL 0x1C16F20
	0x01F9FE74 B 0x1F9FEA0
	0x01F9FE78 B 0x1F9FEA0
	0x01F9FE7C B 0x1F9FEA0
	0x01F9FE80 B 0x1F9FEA0
	0x01F9FE84 B 0x1F9FEA0
	0x01F9FE88 B 0x1F9FEA0
	0x01F9FE8C B 0x1F9FEA0
	0x01F9FE90 B 0x1F9FEA0
	0x01F9FE94 B 0x1F9FEA0
	0x01F9FE98 B 0x1F9FEA0
	0x01F9FE9C B 0x1F9FEA0
	0x01F9FEA0 MOV X20, X0
	0x01F9FEA4 CMP W1, 0x1
	0x01F9FEA8 B.NE 0x1F9FF44
	0x01F9FEAC MOV X0, X20
	0x01F9FEB0 BL 0x3EB1AD0
	0x01F9FEB4 MOV X20, X0
	0x01F9FEB8 ADRP X0, 0x2154000
	0x01F9FEBC LDR X0, [X0 + 0x7D0]
	0x01F9FEC0 BL 0x1C16D08
	0x01F9FEC4 LDR X8, [X20]
	0x01F9FEC8 LDR X1, [X8]
	0x01F9FECC BL 0x1C17270
	0x01F9FED0 TBZ X0, 0x0, 0x1F9FF1C
	0x01F9FED4 LDR X20, [X20]
	0x01F9FED8 BL 0x3EB1AE0
	0x01F9FEDC MOVN W8, 0x1
	0x01F9FEE0 STR W8, [X19], #0x8
	0x01F9FEE4 ADRP X0, 0x217C000
	0x01F9FEE8 LDR X0, [X0 + 0x188]
	0x01F9FEEC BL 0x1C16D08
	0x01F9FEF0 LDR W8, [X0 + 0xE0]
	0x01F9FEF4 CBNZ W8, 0x1F9FEFC
	0x01F9FEF8 BL 0x1C16DFC
	0x01F9FEFC ADRP X0, 0x217C000
	0x01F9FF00 LDR X0, [X0 + 0x248]
	0x01F9FF04 BL 0x1C16D08
	0x01F9FF08 MOV X2, X0
	0x01F9FF0C MOV X0, X19
	0x01F9FF10 MOV X1, X20
	0x01F9FF14 BL 0x26324C8
	0x01F9FF18 B 0x1F9FE18
	0x01F9FF1C MOVZ W0, 0x8
	0x01F9FF20 BL 0x3EB1AF0
	0x01F9FF24 LDR X8, [X20]
	0x01F9FF28 STR X8, [X0]
	0x01F9FF2C ADRP X1, 0x1F15000
	0x01F9FF30 ADD X1, X1, 0xE58
	0x01F9FF34 MOV X2, X31
	0x01F9FF38 BL 0x3EB1B00
	0x01F9FF3C MOV X20, X0
	0x01F9FF40 BL 0x3EB1AE0
	0x01F9FF44 MOV X0, X20
	0x01F9FF48 BL 0x1D2C690
	0x01F9FF4C BL 0x1990590
	0x01F9FF50 STR X30, [X31 - 0x30]!
	0x01F9FF54 STP X22, X21, [X31 + 0x10]
	0x01F9FF58 STP X20, X19, [X31 + 0x20]
	0x01F9FF5C ADRP X22, 0x243A000
	0x01F9FF60 ADRP X21, 0x217C000
	0x01F9FF64 LDRB W8, [X22 + 0x7B8]
	0x01F9FF68 LDR X21, [X21 + 0x188]
	0x01F9FF6C MOV X19, X1
	0x01F9FF70 MOV X20, X0
	0x01F9FF74 TBNZ X8, 0x0, 0x1F9FF98
	0x01F9FF78 ADRP X0, 0x217C000
	0x01F9FF7C LDR X0, [X0 + 0x250]
	0x01F9FF80 BL 0x1C16CF4
	0x01F9FF84 ADRP X0, 0x217C000
	0x01F9FF88 LDR X0, [X0 + 0x188]
	0x01F9FF8C BL 0x1C16CF4
	0x01F9FF90 MOVZ W8, 0x1
	0x01F9FF94 STRB W8, [X22 + 0x7B8]
	0x01F9FF98 LDR X0, [X21]
	0x01F9FF9C ADRP X21, 0x217C000
	0x01F9FFA0 LDR W8, [X0 + 0xE0]
	0x01F9FFA4 LDR X21, [X21 + 0x250]
	0x01F9FFA8 CBNZ W8, 0x1F9FFB0
	0x01F9FFAC BL 0x1C16DFC
	0x01F9FFB0 LDR X2, [X21]
	0x01F9FFB4 ADD X0, X20, 0x8
	0x01F9FFB8 MOV X1, X19
	0x01F9FFBC LDP X20, X19, [X31 + 0x20]
	0x01F9FFC0 LDP X22, X21, [X31 + 0x10]
	0x01F9FFC4 LDR X30, [X31], #0x30
	0x01F9FFC8 B 0x2632228
	0x01F9FFCC LDR W8, [X0 + 0x7C]
	0x01F9FFD0 MOVZ W9, 0x260
	0x01F9FFD4 CMP W8, 0x0
	0x01F9FFD8 MOVZ W8, 0x160
	0x01F9FFDC CSEL W0, W8, W9, EQ
	0x01F9FFE0 RET
	0x01F9FFE4 MOVZ W8, 0x1
	0x01F9FFE8 STR W8, [X0 + 0x7C]

ISIL:
	001 Move [X31-96], D15
	002 Move [X31-88], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+72], X30
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 688
	014 Move X20, 0x243B000
	015 Move W8, [X20+1972]
	016 Move X19, X0
	017 Move [X31+336], X2
	018 Move [X31+344], X3
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x217D000
	024 Move X0, [X0+464]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+1972], W8
	028 NotImplemented "Instruction MOVI not yet implemented."
	029 Move X0, X19
	030 Move X1, X31
	031 Move [X31+312], X31
	032 Move [X31+320], X31
	033 Move [X31+304], X31
	034 Move [X31+280], X31
	035 Move [X31+288], X31
	036 Move [X31+272], X31
	037 Move [X31+256], X31
	038 Move [X31+176], V0
	039 Move [X31+184], V0
	040 Move [X31+208], V0
	041 Move [X31+216], V0
	042 Move [X31+15], V0
	043 Move [X31+80], V0
	044 Move [X31+88], V0
	045 Move [X31+112], V0
	046 Move [X31+120], V0
	047 Move [X31+9], V0
	048 Move [X31+160], X31
	049 Call Component.get_transform, X0
	050 Compare X0, 0
	051 JumpIfEqual {322}
	052 Move X1, X31
	053 Call Transform.get_position, X0
	054 Move X0, X19
	055 Move X1, X31
	056 Move V8, V0
	057 Move V9, V1
	058 Move V10, V2
	059 Call Component.get_transform, X0
	060 Compare X0, 0
	061 JumpIfEqual {322}
	062 Move X1, X31
	063 Call Transform.get_rotation, X0
	064 Move W8, [X19+69]
	065 Move V11, V0
	066 Move V12, V1
	067 Move V13, V2
	068 Move V14, V3
	069 Move [X31+72], S10
	070 Move [X31+80], S9
	071 Move [X31+64], S1
	072 Move [X31+72], S0
	073 Move [X31+56], S3
	074 Move [X31+64], S2
	075 Compare W8, 0
	076 JumpIfEqual {131}
	077 Move X0, [X19+88]
	078 Compare X0, 0
	079 JumpIfEqual {322}
	080 Move V0, [X19+72]
	081 Add X8, X31, 352
	082 Call XRInputDevice.InterpolatedPose, X0, V0
	083 Move X0, [X19+96]
	084 Compare X0, 0
	085 JumpIfEqual {322}
	086 Move V0, [X31+352]
	087 Move V1, [X31+356]
	088 Add X8, X31, 352
	089 Move V12, V8
	090 Move [X31+16], S0
	091 Move V0, [X31+360]
	092 Move [X31+48], S0
	093 Move [X31+56], S1
	094 Move V1, [X31+364]
	095 Move V0, [X31+368]
	096 Move [X31+40], S0
	097 Move [X31+48], S1
	098 Move V1, [X31+372]
	099 Move V0, [X31+376]
	100 Move [X31+32], S0
	101 Move [X31+40], S1
	102 Move V0, [X19+72]
	103 Call XRInputDevice.InterpolatedPose, X0, V0
	104 Move X0, [X19+80]
	105 Compare X0, 0
	106 JumpIfEqual {322}
	107 Move V1, [X31+352]
	108 Move V0, [X31+356]
	109 Add X8, X31, 352
	110 Move [X31+24], S0
	111 Move [X31+32], S1
	112 Move V0, [X31+360]
	113 Move V1, [X31+364]
	114 Move [X31+20], S0
	115 Move V0, [X31+368]
	116 Move [X31+8], S0
	117 Move [X31+16], S1
	118 Move V1, [X31+372]
	119 Move V0, [X31+376]
	120 Move [X31], S0
	121 Move [X31+8], S1
	122 Move V0, [X19+72]
	123 Call XRInputDevice.InterpolatedPose, X0, V0
	124 Move V13, [X31+352]
	125 Move V14, [X31+356]
	126 Move V15, [X31+360]
	127 Move V8, [X31+364]
	128 Move V9, [X31+368]
	129 Move V10, [X31+372]
	130 Move V11, [X31+376]
	131 Move X0, [X19+32]
	132 Compare X0, 0
	133 JumpIfEqual {322}
	134 Move X1, X31
	135 Call Component.get_transform, X0
	136 Compare X0, 0
	137 JumpIfEqual {322}
	138 Move X1, X31
	139 Call Transform.get_position, X0
	140 Move X0, [X19+32]
	141 Move [X31+48], S2
	142 Move [X31+56], S1
	143 Compare X0, 0
	144 JumpIfEqual {322}
	145 Move X1, X31
	146 Move V15, V0
	147 Call Component.get_transform, X0
	148 Compare X0, 0
	149 JumpIfEqual {322}
	150 Move X1, X31
	151 Call Transform.get_rotation, X0
	152 Move X0, [X19+40]
	153 Move [X31+40], S1
	154 Move [X31+48], S0
	155 Move [X31+32], S3
	156 Move [X31+40], S2
	157 Compare X0, 0
	158 JumpIfEqual {322}
	159 Move X1, X31
	160 Call Component.get_transform, X0
	161 Compare X0, 0
	162 JumpIfEqual {322}
	163 Move X1, X31
	164 Call Transform.get_position, X0
	165 Move X0, [X19+40]
	166 Move [X31+24], S1
	167 Move [X31+32], S0
	168 Move [X31+20], S2
	169 Compare X0, 0
	170 JumpIfEqual {322}
	171 Move X1, X31
	172 Call Component.get_transform, X0
	173 Compare X0, 0
	174 JumpIfEqual {322}
	175 Move X1, X31
	176 Call Transform.get_rotation, X0
	177 Move X0, [X19+48]
	178 Move [X31+8], S1
	179 Move [X31+16], S0
	180 Move [X31], S3
	181 Move [X31+8], S2
	182 Compare X0, 0
	183 JumpIfEqual {322}
	184 Move X1, X31
	185 Move [X31+16], S15
	186 Call Component.get_transform, X0
	187 Compare X0, 0
	188 JumpIfEqual {322}
	189 Move X1, X31
	190 Call Transform.get_position, X0
	191 Move X0, [X19+48]
	192 Compare X0, 0
	193 JumpIfEqual {322}
	194 Move X1, X31
	195 Move V13, V0
	196 Move V14, V1
	197 Move V15, V2
	198 Move V12, V8
	199 Call Component.get_transform, X0
	200 Compare X0, 0
	201 JumpIfEqual {322}
	202 Move X1, X31
	203 Call Transform.get_rotation, X0
	204 Move V8, V0
	205 Move V9, V1
	206 Move V10, V2
	207 Move V11, V3
	208 Move X8, [X19+32]
	209 Compare X8, 0
	210 JumpIfEqual {322}
	211 NotImplemented "Instruction LDUR not yet implemented."
	212 NotImplemented "Instruction LDUR not yet implemented."
	213 Move [X31+320], X9
	214 Move [X31+19], V0
	215 Move X9, [X19+40]
	216 Compare X9, 0
	217 JumpIfEqual {322}
	218 NotImplemented "Instruction LDUR not yet implemented."
	219 NotImplemented "Instruction LDUR not yet implemented."
	220 Move [X31+288], X10
	221 Move [X31+17], V0
	222 Move X0, [X8+64]
	223 Compare X0, 0
	224 JumpIfEqual {322}
	225 Add X8, X31, 176
	226 Call Grabber.get_GrabInfo, X0
	227 Move X8, [X19+40]
	228 Compare X8, 0
	229 JumpIfEqual {322}
	230 Move X0, [X8+64]
	231 Compare X0, 0
	232 JumpIfEqual {322}
	233 Move X19, 0x217D000
	234 Move X19, [X19+464]
	235 Add X8, X31, 80
	236 Call Grabber.get_GrabInfo, X0
	237 Move V0, [X31+76]
	238 Move X8, [X31+320]
	239 Move X9, [X31+288]
	240 Move V1, [X31+17]
	241 Move [X31+356], S0
	242 Move V0, [X31+72]
	243 Move X19, [X19]
	244 Add X20, X31, 352
	245 Move [X31+480], X8
	246 Move [X31+360], S0
	247 Move V0, [X31+68]
	248 Add X8, X31, 233
	249 Add X0, X20, 160
	250 Add X1, X31, 176
	251 Move [X31+364], S0
	252 Move V0, [X31+64]
	253 Move W2, 88
	254 Move [X31+352], S12
	255 Move [X31+436], S13
	256 Move [X31+368], S0
	257 Move V0, [X31+60]
	258 Move [X31+440], S14
	259 Move [X31+444], S15
	260 Move [X31+448], S8
	261 Move [X31+372], S0
	262 Move V0, [X31+56]
	263 Move [X31+452], S9
	264 Move [X31+456], S10
	265 Move [X31+460], S11
	266 Move [X31+376], S0
	267 Move V0, [X31+16]
	268 Move [X31+504], X9
	269 Move [X31+380], S0
	270 Move V0, [X31+52]
	271 Move [X31+384], S0
	272 Move V0, [X31+48]
	273 Move [X31+388], S0
	274 Move V0, [X31+44]
	275 Move [X31+392], S0
	276 Move V0, [X31+40]
	277 Move [X31+396], S0
	278 Move V0, [X31+36]
	279 Move [X31+400], S0
	280 Move V0, [X31+32]
	281 Move [X31+404], S0
	282 Move V0, [X31+28]
	283 Move [X31+408], S0
	284 Move V0, [X31+24]
	285 Move [X31+412], S0
	286 Move V0, [X31+20]
	287 Move [X31+416], S0
	288 Move V0, [X31+12]
	289 Move [X31+420], S0
	290 Move V0, [X31+8]
	291 Move [X31+424], S0
	292 Move V0, [X31+4]
	293 Move [X31+428], S0
	294 Move V0, [X31]
	295 Move [X31+432], S0
	296 Move V0, [X31+19]
	297 Move [X31+29], V0
	298 Move [X8+255], V1
	299 Call 0x3EB2AC0
	300 Add X0, X20, 248
	301 Add X1, X31, 80
	302 Move W2, 88
	303 Call 0x3EB2AC0
	304 Add X0, X31, 336
	305 Add X1, X31, 352
	306 Move X2, X19
	307 Call NetworkInput.Set, X0, X1
	308 Add X31, X31, 688
	309 Move X20, [X31+80]
	310 Move X19, [X31+88]
	311 Move X29, [X31+64]
	312 Move X30, [X31+72]
	313 Move D9, [X31+48]
	314 Move D8, [X31+56]
	315 Move D11, [X31+32]
	316 Move D10, [X31+40]
	317 Move D13, [X31+16]
	318 Move D12, [X31+24]
	319 Move D15, [X31+96]
	320 Move D14, [X31+104]
	321 Return 
	322 Call 0x1C17F20

Method: System.Void OnPlayerJoined(Fusion.NetworkRunner runner, Fusion.PlayerRef player)

Disassembly:
	0x01FA0320 STP X30, X21, [X31 + 0x20]

ISIL:
	001 Return 

Method: System.Void OnPlayerLeft(Fusion.NetworkRunner runner, Fusion.PlayerRef player)

Disassembly:
	0x01FA0324 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Return 

Method: System.Void OnInputMissing(Fusion.NetworkRunner runner, Fusion.PlayerRef player, Fusion.NetworkInput input)

Disassembly:
	0x01FA0328 ADRP X20, 0x2439000

ISIL:
	001 Return 

Method: System.Void OnShutdown(Fusion.NetworkRunner runner, Fusion.ShutdownReason shutdownReason)

Disassembly:
	0x01FA032C LDRB W8, [X20 + 0x7C0]

ISIL:
	001 Return 

Method: System.Void OnConnectedToServer(Fusion.NetworkRunner runner)

Disassembly:
	0x01FA0330 MOV X19, X0
	0x01FA0334 TBNZ X8, 0x0, 0x1FA034C

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.Void OnDisconnectedFromServer(Fusion.NetworkRunner runner, Fusion.Sockets.NetDisconnectReason reason)

Disassembly:
	0x01FA0338 ADRP X0, 0x2158000

ISIL:
	001 Return 

Method: System.Void OnConnectRequest(Fusion.NetworkRunner runner, Fusion.NetworkRunnerCallbackArgs/ConnectRequest request, System.Byte[] token)

Disassembly:
	0x01FA033C LDR X0, [X0 + 0x158]

ISIL:
	001 Return 

Method: System.Void OnConnectFailed(Fusion.NetworkRunner runner, Fusion.Sockets.NetAddress remoteAddress, Fusion.Sockets.NetConnectFailedReason reason)

Disassembly:
	0x01FA0340 BL 0x1C16CF4

ISIL:
	001 Return 

Method: System.Void OnUserSimulationMessage(Fusion.NetworkRunner runner, Fusion.SimulationMessagePtr message)

Disassembly:
	0x01FA0344 MOVZ W8, 0x1

ISIL:
	001 Return 

Method: System.Void OnSessionListUpdated(Fusion.NetworkRunner runner, System.Collections.Generic.List`1<Fusion.SessionInfo> sessionList)

Disassembly:
	0x01FA0348 STRB W8, [X20 + 0x7C0]

ISIL:
	001 Return 

Method: System.Void OnCustomAuthenticationResponse(Fusion.NetworkRunner runner, System.Collections.Generic.Dictionary`2<System.String, System.Object> data)

Disassembly:
	0x01FA034C STR W31, [X31 + 0x18]

ISIL:
	001 Return 

Method: System.Void OnHostMigration(Fusion.NetworkRunner runner, Fusion.HostMigrationToken hostMigrationToken)

Disassembly:
	0x01FA0350 STP X31, X31, [X31 + 0x8]

ISIL:
	001 Return 

Method: System.Void OnReliableDataReceived(Fusion.NetworkRunner runner, Fusion.PlayerRef player, System.ArraySegment`1<System.Byte> data)

Disassembly:
	0x01FA0354 STR X31, [X31]

ISIL:
	001 Return 

Method: System.Void OnSceneLoadDone(Fusion.NetworkRunner runner)

Disassembly:
	0x01FA0358 LDRB W8, [X19 + 0x38]

ISIL:
	001 Return 

Method: System.Void OnSceneLoadStart(Fusion.NetworkRunner runner)

Disassembly:
	0x01FA035C CBZ W8, 0x1FA0430

ISIL:
	001 Return 

Method: System.Void OnObjectEnterAOI(Fusion.NetworkRunner runner, Fusion.NetworkObject obj, Fusion.PlayerRef player)

Disassembly:
	0x01FA0360 LDR X8, [X19]

ISIL:
	001 Return 

Method: System.Void OnObjectExitAOI(Fusion.NetworkRunner runner, Fusion.NetworkObject obj, Fusion.PlayerRef player)

Disassembly:
	0x01FA0364 MOV X0, X19

ISIL:
	001 Return 

Method: System.Void OnReliableDataReceived(Fusion.NetworkRunner runner, Fusion.PlayerRef player, Fusion.Sockets.ReliableKey key, System.ArraySegment`1<System.Byte> data)

Disassembly:
	0x01FA0368 LDP X9, X1, [X8 + 0x188]

ISIL:
	001 Return 

Method: System.Void OnReliableDataProgress(Fusion.NetworkRunner runner, Fusion.PlayerRef player, Fusion.Sockets.ReliableKey key, System.Single progress)

Disassembly:
	0x01FA036C BLR X9

ISIL:
	001 Return 

Method: System.Void .ctor()

Disassembly:
	0x01FA0370 LDRB W8, [X19 + 0x20]
	0x01FA0374 CBZ W8, 0x1FA0430
	0x01FA0378 ADRP X21, 0x2158000
	0x01FA037C LDR X21, [X21 + 0x158]
	0x01FA0380 ADD X20, X19, 0x28
	0x01FA0384 LDR X0, [X21]
	0x01FA0388 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move W9, 0x126F
	002 Move W8, 2
	003 NotImplemented "Instruction MOVK not yet implemented."
	004 Move X1, X31
	005 Move [X0+64], W8
	006 Move [X0+72], W9
	007 Call MonoBehaviour..ctor, X0
	008 Return 

