Type: Fusion.XR.Host.Rig.HardwareHand

Method: System.Void Awake()

Disassembly:
	0x01F9E960 MOV X19, X0
	0x01F9E964 MOV X0, X8
	0x01F9E968 MOV X1, X31
	0x01F9E96C BL 0x3C32E90
	0x01F9E970 CBZ X0, 0x1F9E9DC
	0x01F9E974 MOV X1, X31
	0x01F9E978 BL 0x3C3F58C
	0x01F9E97C MOV X0, X20
	0x01F9E980 MOV X1, X31
	0x01F9E984 MOV V9.16B, V0.16B
	0x01F9E988 MOV V10.16B, V1.16B
	0x01F9E98C MOV V11.16B, V2.16B
	0x01F9E990 BL 0x3C32E90
	0x01F9E994 CBZ X0, 0x1F9E9DC
	0x01F9E998 MOV X1, X31
	0x01F9E99C BL 0x3C3F988
	0x01F9E9A0 CBZ X19, 0x1F9E9DC
	0x01F9E9A4 MOV V3.16B, V0.16B
	0x01F9E9A8 MOV X0, X19
	0x01F9E9AC MOV V0.16B, V9.16B
	0x01F9E9B0 MOV V6.16B, V8.16B
	0x01F9E9B4 LDP X20, X19, [X31 + 0x30]
	0x01F9E9B8 LDR X30, [X31 + 0x20]
	0x01F9E9BC LDP D9, D8, [X31 + 0x10]
	0x01F9E9C0 MOV V4.16B, V1.16B
	0x01F9E9C4 MOV V5.16B, V2.16B
	0x01F9E9C8 MOV V1.16B, V10.16B
	0x01F9E9CC MOV V2.16B, V11.16B
	0x01F9E9D0 MOV X1, X31
	0x01F9E9D4 LDP D11, D10, [X31], #0x40
	0x01F9E9D8 B 0x3C40680
	0x01F9E9DC BL 0x1C16F20
	0x01F9E9E0 STR D14, [X31 - 0x50]!
	0x01F9E9E4 STP D13, D12, [X31 + 0x10]
	0x01F9E9E8 STP D11, D10, [X31 + 0x20]
	0x01F9E9EC STP D9, D8, [X31 + 0x30]
	0x01F9E9F0 STP X30, X19, [X31 + 0x40]
	0x01F9E9F4 MOV X19, X0
	0x01F9E9F8 LDR X0, [X0 + 0x30]
	0x01F9E9FC CBZ X0, 0x1F9EA88
	0x01F9EA00 MOV X1, X31
	0x01F9EA04 MOV V9.16B, V2.16B
	0x01F9EA08 MOV V8.16B, V1.16B
	0x01F9EA0C MOV V10.16B, V0.16B
	0x01F9EA10 BL 0x3C32E90
	0x01F9EA14 CBZ X0, 0x1F9EA88
	0x01F9EA18 MOV X1, X31
	0x01F9EA1C BL 0x3C3F58C
	0x01F9EA20 MOV X0, X19
	0x01F9EA24 MOV X1, X31
	0x01F9EA28 MOV V11.16B, V0.16B
	0x01F9EA2C MOV V12.16B, V2.16B
	0x01F9EA30 BL 0x3C32E90
	0x01F9EA34 CBZ X0, 0x1F9EA88
	0x01F9EA38 MOV X1, X31
	0x01F9EA3C BL 0x3C3F58C
	0x01F9EA40 MOV X0, X19
	0x01F9EA44 MOV X1, X31
	0x01F9EA48 MOV V13.16B, V0.16B
	0x01F9EA4C MOV V14.16B, V2.16B
	0x01F9EA50 BL 0x3C32E90
	0x01F9EA54 CBZ X0, 0x1F9EA88
	0x01F9EA58 FSUB S0, S12, S14
	0x01F9EA5C FSUB S1, S11, S13
	0x01F9EA60 FSUB S2, S9, S0
	0x01F9EA64 FSUB S0, S10, S1
	0x01F9EA68 MOV V1.16B, V8.16B
	0x01F9EA6C LDP X30, X19, [X31 + 0x40]
	0x01F9EA70 LDP D9, D8, [X31 + 0x30]
	0x01F9EA74 LDP D11, D10, [X31 + 0x20]
	0x01F9EA78 LDP D13, D12, [X31 + 0x10]
	0x01F9EA7C MOV X1, X31
	0x01F9EA80 LDR V14, [X31], #0x50
	0x01F9EA84 B 0x3C3F62C
	0x01F9EA88 BL 0x1C16F20
	0x01F9EA8C STR D10, [X31 - 0x40]!
	0x01F9EA90 STP D9, D8, [X31 + 0x10]
	0x01F9EA94 STP X30, X21, [X31 + 0x20]
	0x01F9EA98 STP X20, X19, [X31 + 0x30]
	0x01F9EA9C ADRP X20, 0x243B000
	0x01F9EAA0 ADRP X21, 0x217D000
	0x01F9EAA4 LDRB W8, [X20 + 0x7B2]
	0x01F9EAA8 LDR X21, [X21 + 0x1C0]
	0x01F9EAAC MOV V8.16B, V2.16B
	0x01F9EAB0 MOV V9.16B, V1.16B
	0x01F9EAB4 MOV V10.16B, V0.16B
	0x01F9EAB8 MOV X19, X0
	0x01F9EABC TBNZ X8, 0x0, 0x1F9EAD4
	0x01F9EAC0 ADRP X0, 0x217D000
	0x01F9EAC4 LDR X0, [X0 + 0x1C0]
	0x01F9EAC8 BL 0x1C16CF4
	0x01F9EACC MOVZ W8, 0x1
	0x01F9EAD0 STRB W8, [X20 + 0x7B2]
	0x01F9EAD4 LDR X0, [X21]
	0x01F9EAD8 BL 0x1C16F10
	0x01F9EADC MOV X1, X31
	0x01F9EAE0 MOV X20, X0
	0x01F9EAE4 BL 0x33BDD8C
	0x01F9EAE8 STR W31, [X20 + 0x10]
	0x01F9EAEC STR X19, [X20 + 0x20]
	0x01F9EAF0 STP S10, S9, [X20 + 0x28]
	0x01F9EAF4 STR S8, [X20 + 0x30]
	0x01F9EAF8 MOV X0, X20
	0x01F9EAFC LDP X20, X19, [X31 + 0x30]
	0x01F9EB00 LDP X30, X21, [X31 + 0x20]
	0x01F9EB04 LDP D9, D8, [X31 + 0x10]
	0x01F9EB08 LDR V10, [X31], #0x40
	0x01F9EB0C RET
	0x01F9EB10 STR X30, [X31 - 0x20]!
	0x01F9EB14 STP X20, X19, [X31 + 0x10]
	0x01F9EB18 MOV W19, W1
	0x01F9EB1C MOV X1, X31
	0x01F9EB20 MOV X20, X0
	0x01F9EB24 BL 0x33BDD8C
	0x01F9EB28 STR W19, [X20 + 0x10]
	0x01F9EB2C LDP X20, X19, [X31 + 0x10]
	0x01F9EB30 LDR X30, [X31], #0x20
	0x01F9EB34 RET
	0x01F9EB38 STR D8, [X31 - 0x30]!
	0x01F9EB3C STP X30, X21, [X31 + 0x10]
	0x01F9EB40 STP X20, X19, [X31 + 0x20]
	0x01F9EB44 ADRP X20, 0x243B000
	0x01F9EB48 ADRP X21, 0x217D000
	0x01F9EB4C LDRB W8, [X20 + 0x7B3]
	0x01F9EB50 LDR X21, [X21 + 0x1C8]
	0x01F9EB54 MOV V8.16B, V0.16B
	0x01F9EB58 MOV X19, X0
	0x01F9EB5C TBNZ X8, 0x0, 0x1F9EB74
	0x01F9EB60 ADRP X0, 0x217D000
	0x01F9EB64 LDR X0, [X0 + 0x1C8]
	0x01F9EB68 BL 0x1C16CF4
	0x01F9EB6C MOVZ W8, 0x1
	0x01F9EB70 STRB W8, [X20 + 0x7B3]
	0x01F9EB74 LDR X0, [X21]
	0x01F9EB78 BL 0x1C16F10
	0x01F9EB7C MOV X1, X31
	0x01F9EB80 MOV X20, X0
	0x01F9EB84 BL 0x33BDD8C
	0x01F9EB88 STR W31, [X20 + 0x10]
	0x01F9EB8C STR X19, [X20 + 0x20]
	0x01F9EB90 STR S8, [X20 + 0x28]
	0x01F9EB94 MOV X0, X20
	0x01F9EB98 LDP X20, X19, [X31 + 0x20]
	0x01F9EB9C LDP X30, X21, [X31 + 0x10]
	0x01F9EBA0 LDR V8, [X31], #0x30
	0x01F9EBA4 RET
	0x01F9EBA8 STR X30, [X31 - 0x20]!
	0x01F9EBAC STP X20, X19, [X31 + 0x10]
	0x01F9EBB0 MOV W19, W1
	0x01F9EBB4 MOV X1, X31
	0x01F9EBB8 MOV X20, X0
	0x01F9EBBC BL 0x33BDD8C
	0x01F9EBC0 STR W19, [X20 + 0x10]
	0x01F9EBC4 LDP X20, X19, [X31 + 0x10]
	0x01F9EBC8 LDR X30, [X31], #0x20
	0x01F9EBCC RET
	0x01F9EBD0 STP D15, D14, [X31 - 0x60]!
	0x01F9EBD4 STP D13, D12, [X31 + 0x10]
	0x01F9EBD8 STP D11, D10, [X31 + 0x20]
	0x01F9EBDC STP D9, D8, [X31 + 0x30]
	0x01F9EBE0 STP X29, X30, [X31 + 0x40]
	0x01F9EBE4 STP X20, X19, [X31 + 0x50]
	0x01F9EBE8 SUB X31, X31, 0x2B0
	0x01F9EBEC ADRP X20, 0x243B000
	0x01F9EBF0 LDRB W8, [X20 + 0x7B4]
	0x01F9EBF4 MOV X19, X0
	0x01F9EBF8 STP X2, X3, [X31 + 0x150]
	0x01F9EBFC TBNZ X8, 0x0, 0x1F9EC14
	0x01F9EC00 ADRP X0, 0x217D000
	0x01F9EC04 LDR X0, [X0 + 0x1D0]
	0x01F9EC08 BL 0x1C16CF4
	0x01F9EC0C MOVZ W8, 0x1
	0x01F9EC10 STRB W8, [X20 + 0x7B4]
	0x01F9EC14 MOVI V0.2D, 0x0
	0x01F9EC18 MOV X0, X19
	0x01F9EC1C MOV X1, X31
	0x01F9EC20 STP X31, X31, [X31 + 0x138]
	0x01F9EC24 STR X31, [X31 + 0x130]
	0x01F9EC28 STP X31, X31, [X31 + 0x118]
	0x01F9EC2C STR X31, [X31 + 0x110]
	0x01F9EC30 STR X31, [X31 + 0x100]
	0x01F9EC34 STP V0, V0, [X31 + 0xB0]
	0x01F9EC38 STP V0, V0, [X31 + 0xD0]
	0x01F9EC3C STR V0, [X31 + 0xF]
	0x01F9EC40 STP V0, V0, [X31 + 0x50]
	0x01F9EC44 STP V0, V0, [X31 + 0x70]
	0x01F9EC48 STR V0, [X31 + 0x9]
	0x01F9EC4C STR X31, [X31 + 0xA0]
	0x01F9EC50 BL 0x3C32E90
	0x01F9EC54 CBZ X0, 0x1F9EFE8
	0x01F9EC58 MOV X1, X31
	0x01F9EC5C BL 0x3C3F58C
	0x01F9EC60 MOV X0, X19
	0x01F9EC64 MOV X1, X31
	0x01F9EC68 MOV V8.16B, V0.16B
	0x01F9EC6C MOV V9.16B, V1.16B
	0x01F9EC70 MOV V10.16B, V2.16B
	0x01F9EC74 BL 0x3C32E90
	0x01F9EC78 CBZ X0, 0x1F9EFE8
	0x01F9EC7C MOV X1, X31
	0x01F9EC80 BL 0x3C3DEB4
	0x01F9EC84 LDRB W8, [X19 + 0x45]
	0x01F9EC88 MOV V11.16B, V0.16B
	0x01F9EC8C MOV V12.16B, V1.16B
	0x01F9EC90 MOV V13.16B, V2.16B
	0x01F9EC94 MOV V14.16B, V3.16B
	0x01F9EC98 STP S10, S9, [X31 + 0x48]
	0x01F9EC9C STP S1, S0, [X31 + 0x40]
	0x01F9ECA0 STP S3, S2, [X31 + 0x38]
	0x01F9ECA4 CBZ W8, 0x1F9ED60
	0x01F9ECA8 LDR X0, [X19 + 0x58]
	0x01F9ECAC CBZ X0, 0x1F9EFE8
	0x01F9ECB0 LDR V0, [X19 + 0x48]
	0x01F9ECB4 ADD X8, X31, 0x160
	0x01F9ECB8 BL 0x1F9EFEC
	0x01F9ECBC LDR X0, [X19 + 0x60]
	0x01F9ECC0 CBZ X0, 0x1F9EFE8
	0x01F9ECC4 LDR V0, [X31 + 0x160]
	0x01F9ECC8 LDR V1, [X31 + 0x164]
	0x01F9ECCC ADD X8, X31, 0x160
	0x01F9ECD0 MOV V12.16B, V8.16B
	0x01F9ECD4 STR S0, [X31 + 0x10]
	0x01F9ECD8 LDR V0, [X31 + 0x168]
	0x01F9ECDC STP S0, S1, [X31 + 0x30]
	0x01F9ECE0 LDR V1, [X31 + 0x16C]
	0x01F9ECE4 LDR V0, [X31 + 0x170]
	0x01F9ECE8 STP S0, S1, [X31 + 0x28]
	0x01F9ECEC LDR V1, [X31 + 0x174]
	0x01F9ECF0 LDR V0, [X31 + 0x178]
	0x01F9ECF4 STP S0, S1, [X31 + 0x20]
	0x01F9ECF8 LDR V0, [X19 + 0x48]
	0x01F9ECFC BL 0x1F9EFEC
	0x01F9ED00 LDR X0, [X19 + 0x50]
	0x01F9ED04 CBZ X0, 0x1F9EFE8
	0x01F9ED08 LDR V1, [X31 + 0x160]
	0x01F9ED0C LDR V0, [X31 + 0x164]
	0x01F9ED10 ADD X8, X31, 0x160
	0x01F9ED14 STP S0, S1, [X31 + 0x18]
	0x01F9ED18 LDR V0, [X31 + 0x168]
	0x01F9ED1C LDR V1, [X31 + 0x16C]
	0x01F9ED20 STR S0, [X31 + 0x14]
	0x01F9ED24 LDR V0, [X31 + 0x170]
	0x01F9ED28 STP S0, S1, [X31 + 0x8]
	0x01F9ED2C LDR V1, [X31 + 0x174]
	0x01F9ED30 LDR V0, [X31 + 0x178]
	0x01F9ED34 STP S0, S1, [X31]
	0x01F9ED38 LDR V0, [X19 + 0x48]
	0x01F9ED3C BL 0x1F9EFEC
	0x01F9ED40 LDR V13, [X31 + 0x160]
	0x01F9ED44 LDR V14, [X31 + 0x164]
	0x01F9ED48 LDR V15, [X31 + 0x168]
	0x01F9ED4C LDR V8, [X31 + 0x16C]
	0x01F9ED50 LDR V9, [X31 + 0x170]
	0x01F9ED54 LDR V10, [X31 + 0x174]
	0x01F9ED58 LDR V11, [X31 + 0x178]
	0x01F9ED5C B 0x1F9EE4C
	0x01F9ED60 LDR X0, [X19 + 0x20]
	0x01F9ED64 CBZ X0, 0x1F9EFE8
	0x01F9ED68 MOV X1, X31
	0x01F9ED6C BL 0x3C32E90
	0x01F9ED70 CBZ X0, 0x1F9EFE8
	0x01F9ED74 MOV X1, X31
	0x01F9ED78 BL 0x3C3F58C
	0x01F9ED7C LDR X0, [X19 + 0x20]
	0x01F9ED80 STP S2, S1, [X31 + 0x30]
	0x01F9ED84 CBZ X0, 0x1F9EFE8
	0x01F9ED88 MOV X1, X31
	0x01F9ED8C MOV V15.16B, V0.16B
	0x01F9ED90 BL 0x3C32E90
	0x01F9ED94 CBZ X0, 0x1F9EFE8
	0x01F9ED98 MOV X1, X31
	0x01F9ED9C BL 0x3C3DEB4
	0x01F9EDA0 LDR X0, [X19 + 0x28]
	0x01F9EDA4 STP S1, S0, [X31 + 0x28]
	0x01F9EDA8 STP S3, S2, [X31 + 0x20]
	0x01F9EDAC CBZ X0, 0x1F9EFE8
	0x01F9EDB0 MOV X1, X31
	0x01F9EDB4 BL 0x3C32E90
	0x01F9EDB8 CBZ X0, 0x1F9EFE8
	0x01F9EDBC MOV X1, X31
	0x01F9EDC0 BL 0x3C3F58C
	0x01F9EDC4 LDR X0, [X19 + 0x28]
	0x01F9EDC8 STP S1, S0, [X31 + 0x18]
	0x01F9EDCC STR S2, [X31 + 0x14]
	0x01F9EDD0 CBZ X0, 0x1F9EFE8
	0x01F9EDD4 MOV X1, X31
	0x01F9EDD8 BL 0x3C32E90
	0x01F9EDDC CBZ X0, 0x1F9EFE8
	0x01F9EDE0 MOV X1, X31
	0x01F9EDE4 BL 0x3C3DEB4
	0x01F9EDE8 LDR X0, [X19 + 0x30]
	0x01F9EDEC STP S1, S0, [X31 + 0x8]
	0x01F9EDF0 STP S3, S2, [X31]
	0x01F9EDF4 CBZ X0, 0x1F9EFE8
	0x01F9EDF8 MOV X1, X31
	0x01F9EDFC STR S15, [X31 + 0x10]
	0x01F9EE00 BL 0x3C32E90
	0x01F9EE04 CBZ X0, 0x1F9EFE8
	0x01F9EE08 MOV X1, X31
	0x01F9EE0C BL 0x3C3F58C
	0x01F9EE10 LDR X0, [X19 + 0x30]
	0x01F9EE14 CBZ X0, 0x1F9EFE8
	0x01F9EE18 MOV X1, X31
	0x01F9EE1C MOV V13.16B, V0.16B
	0x01F9EE20 MOV V14.16B, V1.16B
	0x01F9EE24 MOV V15.16B, V2.16B
	0x01F9EE28 MOV V12.16B, V8.16B
	0x01F9EE2C BL 0x3C32E90
	0x01F9EE30 CBZ X0, 0x1F9EFE8
	0x01F9EE34 MOV X1, X31
	0x01F9EE38 BL 0x3C3DEB4
	0x01F9EE3C MOV V8.16B, V0.16B
	0x01F9EE40 MOV V9.16B, V1.16B
	0x01F9EE44 MOV V10.16B, V2.16B
	0x01F9EE48 MOV V11.16B, V3.16B
	0x01F9EE4C LDR X8, [X19 + 0x20]
	0x01F9EE50 CBZ X8, 0x1F9EFE8
	0x01F9EE54 LDUR X9, [X8 + 0x34]
	0x01F9EE58 LDUR V0, [X8 + 0x24]
	0x01F9EE5C STR X9, [X31 + 0x140]
	0x01F9EE60 STR V0, [X31 + 0x13]
	0x01F9EE64 LDR X9, [X19 + 0x28]
	0x01F9EE68 CBZ X9, 0x1F9EFE8
	0x01F9EE6C LDUR X10, [X9 + 0x34]
	0x01F9EE70 LDUR V0, [X9 + 0x24]
	0x01F9EE74 STR X10, [X31 + 0x120]
	0x01F9EE78 STR V0, [X31 + 0x11]
	0x01F9EE7C LDR X0, [X8 + 0x40]
	0x01F9EE80 CBZ X0, 0x1F9EFE8
	0x01F9EE84 ADD X8, X31, 0xB0
	0x01F9EE88 BL 0x1F9F1F0
	0x01F9EE8C LDR X8, [X19 + 0x28]
	0x01F9EE90 CBZ X8, 0x1F9EFE8
	0x01F9EE94 LDR X0, [X8 + 0x40]
	0x01F9EE98 CBZ X0, 0x1F9EFE8
	0x01F9EE9C ADRP X19, 0x217D000
	0x01F9EEA0 LDR X19, [X19 + 0x1D0]
	0x01F9EEA4 ADD X8, X31, 0x50
	0x01F9EEA8 BL 0x1F9F1F0
	0x01F9EEAC LDR V0, [X31 + 0x4C]
	0x01F9EEB0 LDR X8, [X31 + 0x140]
	0x01F9EEB4 LDR X9, [X31 + 0x120]
	0x01F9EEB8 LDR V1, [X31 + 0x11]
	0x01F9EEBC STR S0, [X31 + 0x164]
	0x01F9EEC0 LDR V0, [X31 + 0x48]
	0x01F9EEC4 LDR X19, [X19]
	0x01F9EEC8 ADD X20, X31, 0x160
	0x01F9EECC STR X8, [X31 + 0x1E0]
	0x01F9EED0 STR S0, [X31 + 0x168]
	0x01F9EED4 LDR V0, [X31 + 0x44]
	0x01F9EED8 ADD X8, X31, 0xE9
	0x01F9EEDC ADD X0, X20, 0xA0
	0x01F9EEE0 ADD X1, X31, 0xB0
	0x01F9EEE4 STR S0, [X31 + 0x16C]
	0x01F9EEE8 LDR V0, [X31 + 0x40]
	0x01F9EEEC MOVZ W2, 0x58
	0x01F9EEF0 STR S12, [X31 + 0x160]
	0x01F9EEF4 STR S13, [X31 + 0x1B4]
	0x01F9EEF8 STR S0, [X31 + 0x170]
	0x01F9EEFC LDR V0, [X31 + 0x3C]
	0x01F9EF00 STR S14, [X31 + 0x1B8]
	0x01F9EF04 STR S15, [X31 + 0x1BC]
	0x01F9EF08 STR S8, [X31 + 0x1C0]
	0x01F9EF0C STR S0, [X31 + 0x174]
	0x01F9EF10 LDR V0, [X31 + 0x38]
	0x01F9EF14 STR S9, [X31 + 0x1C4]
	0x01F9EF18 STR S10, [X31 + 0x1C8]
	0x01F9EF1C STR S11, [X31 + 0x1CC]
	0x01F9EF20 STR S0, [X31 + 0x178]
	0x01F9EF24 LDR V0, [X31 + 0x10]
	0x01F9EF28 STR X9, [X31 + 0x1F8]
	0x01F9EF2C STR S0, [X31 + 0x17C]
	0x01F9EF30 LDR V0, [X31 + 0x34]

ISIL:
	001 Subtract X31, X31, 464
	002 Move [X31+384], X29
	003 Move [X31+392], X30
	004 Move [X31+400], X26
	005 Move [X31+408], X25
	006 Move [X31+416], X24
	007 Move [X31+424], X23
	008 Move [X31+432], X22
	009 Move [X31+440], X21
	010 Move [X31+448], X20
	011 Move [X31+456], X19
	012 Move X20, 0x243C000
	013 Move X23, 0x2157000
	014 Move X22, 0x2157000
	015 Move W8, [X20+1960]
	016 Move X23, [X23+464]
	017 Move X22, [X22+448]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {61}
	023 Move X0, 0x217E000
	024 Move X0, [X0+248]
	025 Call 0x1C17CF4
	026 Move X0, 0x217E000
	027 Move X0, [X0+256]
	028 Call 0x1C17CF4
	029 Move X0, 0x217E000
	030 Move X0, [X0+264]
	031 Call 0x1C17CF4
	032 Move X0, 0x2157000
	033 Move X0, [X0+440]
	034 Call 0x1C17CF4
	035 Move X0, 0x2157000
	036 Move X0, [X0+448]
	037 Call 0x1C17CF4
	038 Move X0, 0x2157000
	039 Move X0, [X0+464]
	040 Call 0x1C17CF4
	041 Move X0, 0x217E000
	042 Move X0, [X0+272]
	043 Call 0x1C17CF4
	044 Move X0, 0x217E000
	045 Move X0, [X0+280]
	046 Call 0x1C17CF4
	047 Move X0, 0x217E000
	048 Move X0, [X0+288]
	049 Call 0x1C17CF4
	050 Move X0, 0x217E000
	051 Move X0, [X0+296]
	052 Call 0x1C17CF4
	053 Move X0, 0x217E000
	054 Move X0, [X0+304]
	055 Call 0x1C17CF4
	056 Move X0, 0x217E000
	057 Move X0, [X0+312]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1960], W8
	061 Move X8, [X19+88]
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 Move X0, [X23]
	064 Move [X31+368], X8
	065 Move [X31+22], V0
	066 Move W20, [X19+32]
	067 Call 0x1C17F10
	068 Move X1, [X22]
	069 Move X21, X0
	070 Call List`1<Object>..ctor, X0
	071 Compare X21, 0
	072 JumpIfEqual {386}
	073 Move X8, 0x217E000
	074 Move X24, 0x2157000
	075 Move X8, [X8+272]
	076 Move X24, [X24+440]
	077 Move W11, [X21+28]
	078 Move X10, [X21+16]
	079 Move X1, [X8]
	080 Move X9, [X24]
	081 Add W8, W11, 1
	082 Move [X21+28], W8
	083 Compare X10, 0
	084 JumpIfEqual {386}
	085 NotImplemented "Instruction LDRSW not yet implemented."
	086 Move W12, [X10+24]
	087 Move X25, 0x217E000
	088 Move X25, [X25+304]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Add W9, W11, 1
	091 Add X10, X10, X11
	092 Move [X21+24], W9
	093 Move [X10+32], X1
	094 Move X8, [X9+32]
	095 Move X0, X21
	096 Move X8, [X8+192]
	097 Move X2, [X8+112]
	098 Call List`1<Object>.AddWithResize, X0, X1
	099 Move W9, [X21+24]
	100 Move W8, [X21+28]
	101 Move X1, [X25]
	102 Move X11, [X21+16]
	103 Move X10, [X24]
	104 Add W8, W8, 1
	105 Move [X21+28], W8
	106 Compare X11, 0
	107 JumpIfEqual {386}
	108 Move W12, [X11+24]
	109 Move X25, 0x217E000
	110 Move X25, [X25+296]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Add W10, W9, 1
	113 Add X9, X11, W9
	114 Move [X21+24], W10
	115 Move [X9+32], X1
	116 Move X8, [X10+32]
	117 Move X0, X21
	118 Move X8, [X8+192]
	119 Move X2, [X8+112]
	120 Call List`1<Object>.AddWithResize, X0, X1
	121 Move W10, [X21+24]
	122 Move W8, [X21+28]
	123 Move X1, [X25]
	124 Move X9, [X21+16]
	125 Move X11, [X24]
	126 Add W8, W8, 1
	127 Move [X21+28], W8
	128 Compare X9, 0
	129 JumpIfEqual {386}
	130 Move W8, [X9+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Add W8, W10, 1
	133 Add X9, X9, W10
	134 Move [X21+24], W8
	135 Move [X9+32], X1
	136 Move X8, [X11+32]
	137 Move X0, X21
	138 Move X8, [X8+192]
	139 Move X2, [X8+112]
	140 Call List`1<Object>.AddWithResize, X0, X1
	141 Move V0, [X31+22]
	142 Move X8, [X31+368]
	143 Add X0, X31, 320
	144 Move W1, W20
	145 Move X2, X21
	146 Move [X31+20], V0
	147 Move [X31+336], X8
	148 Call InputSystemExtensions.EnableWithDefaultXRBindings, X0, X1, X2
	149 Move X8, [X19+112]
	150 Move V0, [X19+6]
	151 Move X0, [X23]
	152 Move [X31+304], X8
	153 Move [X31+18], V0
	154 Move W20, [X19+32]
	155 Call 0x1C17F10
	156 Move X1, [X22]
	157 Move X21, X0
	158 Call List`1<Object>..ctor, X0
	159 Compare X21, 0
	160 JumpIfEqual {386}
	161 Move X25, 0x217E000
	162 Move X25, [X25+280]
	163 Move W10, [X21+28]
	164 Move X8, [X21+16]
	165 Move X9, [X24]
	166 Move X1, [X25]
	167 Add W10, W10, 1
	168 Move [X21+28], W10
	169 Compare X8, 0
	170 JumpIfEqual {386}
	171 NotImplemented "Instruction LDRSW not yet implemented."
	172 Move W11, [X8+24]
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Add W9, W10, 1
	175 Add X8, X8, X10
	176 Move [X21+24], W9
	177 Move [X8+32], X1
	178 Move X8, [X9+32]
	179 Move X0, X21
	180 Move X8, [X8+192]
	181 Move X2, [X8+112]
	182 Call List`1<Object>.AddWithResize, X0, X1
	183 Move V0, [X31+18]
	184 Move X8, [X31+304]
	185 Add X0, X31, 256
	186 Move W1, W20
	187 Move X2, X21
	188 Move [X31+16], V0
	189 Move [X31+272], X8
	190 Call InputSystemExtensions.EnableWithDefaultXRBindings, X0, X1, X2
	191 Move X8, [X19+136]
	192 NotImplemented "Instruction LDUR not yet implemented."
	193 Move X0, [X23]
	194 Move [X31+240], X8
	195 Move [X31+14], V0
	196 Move W20, [X19+32]
	197 Call 0x1C17F10
	198 Move X1, [X22]
	199 Move X21, X0
	200 Call List`1<Object>..ctor, X0
	201 Compare X21, 0
	202 JumpIfEqual {386}
	203 Move X8, 0x217E000
	204 Move X8, [X8+312]
	205 Move W10, [X21+28]
	206 Move X9, [X24]
	207 Move X1, [X8]
	208 Move X8, [X21+16]
	209 Add W10, W10, 1
	210 Move [X21+28], W10
	211 Compare X8, 0
	212 JumpIfEqual {386}
	213 NotImplemented "Instruction LDRSW not yet implemented."
	214 Move W11, [X8+24]
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Add W9, W10, 1
	217 Add X8, X8, X10
	218 Move [X21+24], W9
	219 Move [X8+32], X1
	220 Move X8, [X9+32]
	221 Move X0, X21
	222 Move X8, [X8+192]
	223 Move X2, [X8+112]
	224 Call List`1<Object>.AddWithResize, X0, X1
	225 Move V0, [X31+14]
	226 Move X8, [X31+240]
	227 Add X0, X31, 192
	228 Move W1, W20
	229 Move X2, X21
	230 Move [X31+12], V0
	231 Move [X31+208], X8
	232 Call InputSystemExtensions.EnableWithDefaultXRBindings, X0, X1, X2
	233 Move X8, [X19+160]
	234 Move V0, [X19+9]
	235 Move X0, [X23]
	236 Move [X31+176], X8
	237 Move [X31+10], V0
	238 Move W20, [X19+32]
	239 Call 0x1C17F10
	240 Move X1, [X22]
	241 Move X21, X0
	242 Call List`1<Object>..ctor, X0
	243 Compare X21, 0
	244 JumpIfEqual {386}
	245 Move X8, 0x217E000
	246 Move X8, [X8+288]
	247 Move W10, [X21+28]
	248 Move X9, [X24]
	249 Move X1, [X8]
	250 Move X8, [X21+16]
	251 Add W10, W10, 1
	252 Move [X21+28], W10
	253 Compare X8, 0
	254 JumpIfEqual {386}
	255 NotImplemented "Instruction LDRSW not yet implemented."
	256 Move W11, [X8+24]
	257 Add X26, X19, 96
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Add W9, W10, 1
	260 Add X8, X8, X10
	261 Move [X21+24], W9
	262 Move [X8+32], X1
	263 Move X8, [X9+32]
	264 Move X0, X21
	265 Move X8, [X8+192]
	266 Move X2, [X8+112]
	267 Call List`1<Object>.AddWithResize, X0, X1
	268 Move V0, [X31+10]
	269 Move X8, [X31+176]
	270 Add X0, X31, 128
	271 Move W1, W20
	272 Move X2, X21
	273 Move [X31+8], V0
	274 Move [X31+144], X8
	275 Call InputSystemExtensions.EnableWithDefaultXRBindings, X0, X1, X2
	276 Move X8, [X26+16]
	277 Move V0, [X26]
	278 Move X0, [X23]
	279 Move [X31+112], X8
	280 Move [X31+6], V0
	281 Move W20, [X19+32]
	282 Call 0x1C17F10
	283 Move X1, [X22]
	284 Move X21, X0
	285 Call List`1<Object>..ctor, X0
	286 Compare X21, 0
	287 JumpIfEqual {386}
	288 Move W10, [X21+28]
	289 Move X1, [X25]
	290 Move X8, [X21+16]
	291 Move X9, [X24]
	292 Add W10, W10, 1
	293 Move [X21+28], W10
	294 Compare X8, 0
	295 JumpIfEqual {386}
	296 NotImplemented "Instruction LDRSW not yet implemented."
	297 Move W11, [X8+24]
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Add W9, W10, 1
	300 Add X8, X8, X10
	301 Move [X21+24], W9
	302 Move [X8+32], X1
	303 Move X8, [X9+32]
	304 Move X0, X21
	305 Move X8, [X8+192]
	306 Move X2, [X8+112]
	307 Call List`1<Object>.AddWithResize, X0, X1
	308 Move V0, [X31+6]
	309 Move X8, [X31+112]
	310 Add X0, X31, 64
	311 Move W1, W20
	312 Move X2, X21
	313 Move [X31+4], V0
	314 Move [X31+80], X8
	315 Call InputSystemExtensions.EnableWithDefaultXRBindings, X0, X1, X2
	316 Move X8, [X19+192]
	317 Move V0, [X19+11]
	318 Move X0, [X23]
	319 Move [X31+48], X8
	320 Move [X31+2], V0
	321 Move W20, [X19+32]
	322 Call 0x1C17F10
	323 Move X1, [X22]
	324 Move X21, X0
	325 Call List`1<Object>..ctor, X0
	326 Compare X21, 0
	327 JumpIfEqual {386}
	328 Move W10, [X21+28]
	329 Move X1, [X25]
	330 Move X8, [X21+16]
	331 Move X9, [X24]
	332 Add W10, W10, 1
	333 Move [X21+28], W10
	334 Compare X8, 0
	335 JumpIfEqual {386}
	336 NotImplemented "Instruction LDRSW not yet implemented."
	337 Move W11, [X8+24]
	338 Move X24, 0x217E000
	339 Move X23, 0x217E000
	340 Move X22, 0x217E000
	341 Move X24, [X24+248]
	342 Move X23, [X23+256]
	343 Move X22, [X22+264]
	344 NotImplemented "Instruction CMP not yet implemented."
	345 Add W9, W10, 1
	346 Add X8, X8, X10
	347 Move [X21+24], W9
	348 Move [X8+32], X1
	349 Move X8, [X9+32]
	350 Move X0, X21
	351 Move X8, [X8+192]
	352 Move X2, [X8+112]
	353 Call List`1<Object>.AddWithResize, X0, X1
	354 Move V0, [X31+2]
	355 Move X8, [X31+48]
	356 Add X0, X31, 0
	357 Move W1, W20
	358 Move X2, X21
	359 Move [X31], V0
	360 Move [X31+16], X8
	361 Call InputSystemExtensions.EnableWithDefaultXRBindings, X0, X1, X2
	362 Move X1, [X24]
	363 Move X0, X19
	364 Call 0x21A4AF8, X0
	365 Move [X19+64], X0
	366 Move X1, [X23]
	367 Move X0, X19
	368 Call 0x21A4AF8, X0
	369 Move [X19+216], X0
	370 Move X1, [X22]
	371 Move X0, X19
	372 Call 0x21A4894, X0
	373 Move [X19+208], X0
	374 Move X20, [X31+448]
	375 Move X19, [X31+456]
	376 Move X22, [X31+432]
	377 Move X21, [X31+440]
	378 Move X24, [X31+416]
	379 Move X23, [X31+424]
	380 Move X26, [X31+400]
	381 Move X25, [X31+408]
	382 Move X29, [X31+384]
	383 Move X30, [X31+392]
	384 Add X31, X31, 464
	385 Return 
	386 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x01F9EF34 STR S0, [X31 + 0x180]
	0x01F9EF38 LDR V0, [X31 + 0x30]
	0x01F9EF3C STR S0, [X31 + 0x184]
	0x01F9EF40 LDR V0, [X31 + 0x2C]
	0x01F9EF44 STR S0, [X31 + 0x188]
	0x01F9EF48 LDR V0, [X31 + 0x28]
	0x01F9EF4C STR S0, [X31 + 0x18C]
	0x01F9EF50 LDR V0, [X31 + 0x24]
	0x01F9EF54 STR S0, [X31 + 0x190]
	0x01F9EF58 LDR V0, [X31 + 0x20]
	0x01F9EF5C STR S0, [X31 + 0x194]
	0x01F9EF60 LDR V0, [X31 + 0x1C]
	0x01F9EF64 STR S0, [X31 + 0x198]
	0x01F9EF68 LDR V0, [X31 + 0x18]
	0x01F9EF6C STR S0, [X31 + 0x19C]
	0x01F9EF70 LDR V0, [X31 + 0x14]
	0x01F9EF74 STR S0, [X31 + 0x1A0]
	0x01F9EF78 LDR V0, [X31 + 0xC]
	0x01F9EF7C STR S0, [X31 + 0x1A4]
	0x01F9EF80 LDR V0, [X31 + 0x8]
	0x01F9EF84 STR S0, [X31 + 0x1A8]
	0x01F9EF88 LDR V0, [X31 + 0x4]
	0x01F9EF8C STR S0, [X31 + 0x1AC]
	0x01F9EF90 LDR V0, [X31]
	0x01F9EF94 STR S0, [X31 + 0x1B0]
	0x01F9EF98 LDR V0, [X31 + 0x13]
	0x01F9EF9C STR V0, [X31 + 0x1D]
	0x01F9EFA0 STUR V1, [X8 + 0xFF]
	0x01F9EFA4 BL 0x3EB1AC0
	0x01F9EFA8 ADD X0, X20, 0xF8
	0x01F9EFAC ADD X1, X31, 0x50
	0x01F9EFB0 MOVZ W2, 0x58
	0x01F9EFB4 BL 0x3EB1AC0
	0x01F9EFB8 ADD X0, X31, 0x150
	0x01F9EFBC ADD X1, X31, 0x160
	0x01F9EFC0 MOV X2, X19
	0x01F9EFC4 BL 0x222A504
	0x01F9EFC8 ADD X31, X31, 0x2B0
	0x01F9EFCC LDP X20, X19, [X31 + 0x50]
	0x01F9EFD0 LDP X29, X30, [X31 + 0x40]
	0x01F9EFD4 LDP D9, D8, [X31 + 0x30]
	0x01F9EFD8 LDP D11, D10, [X31 + 0x20]
	0x01F9EFDC LDP D13, D12, [X31 + 0x10]
	0x01F9EFE0 LDP D15, D14, [X31], #0x60
	0x01F9EFE4 RET
	0x01F9EFE8 BL 0x1C16F20
	0x01F9EFEC SUB X31, X31, 0x110
	0x01F9EFF0 STP D13, D12, [X31 + 0xB0]
	0x01F9EFF4 STP D11, D10, [X31 + 0xC0]
	0x01F9EFF8 STP D9, D8, [X31 + 0xD0]
	0x01F9EFFC STP X29, X30, [X31 + 0xE0]
	0x01F9F000 STP X22, X21, [X31 + 0xF0]
	0x01F9F004 STP X20, X19, [X31 + 0x100]
	0x01F9F008 ADRP X21, 0x243A000
	0x01F9F00C ADRP X22, 0x217C000
	0x01F9F010 MOV X19, X8
	0x01F9F014 LDRB W8, [X21 + 0x7BD]
	0x01F9F018 LDR X22, [X22 + 0x1D8]
	0x01F9F01C MOV V8.16B, V0.16B
	0x01F9F020 MOV X20, X0
	0x01F9F024 TBNZ X8, 0x0, 0x1F9F054
	0x01F9F028 ADRP X0, 0x217C000
	0x01F9F02C LDR X0, [X0 + 0x1E0]
	0x01F9F030 BL 0x1C16CF4
	0x01F9F034 ADRP X0, 0x217C000
	0x01F9F038 LDR X0, [X0 + 0x1E8]
	0x01F9F03C BL 0x1C16CF4
	0x01F9F040 ADRP X0, 0x217C000
	0x01F9F044 LDR X0, [X0 + 0x1D8]
	0x01F9F048 BL 0x1C16CF4
	0x01F9F04C MOVZ W8, 0x1
	0x01F9F050 STRB W8, [X21 + 0x7BD]
	0x01F9F054 MOVI V0.2D, 0x0
	0x01F9F058 MOV X0, X31
	0x01F9F05C STP V0, V0, [X31 + 0x90]
	0x01F9F060 STP V0, V0, [X31 + 0x70]
	0x01F9F064 STR V0, [X31 + 0x6]
	0x01F9F068 ADD X21, X20, 0x40
	0x01F9F06C BL 0x3C3C6C4
	0x01F9F070 LDR X1, [X22]
	0x01F9F074 FSUB S0, S0, S8
	0x01F9F078 ADD X8, X31, 0x10
	0x01F9F07C MOV X0, X21
	0x01F9F080 BL 0x26EEB54
	0x01F9F084 ADD X0, X31, 0x60
	0x01F9F088 ADD X1, X31, 0x10
	0x01F9F08C MOVZ W2, 0x50
	0x01F9F090 BL 0x3EB1AC0
	0x01F9F094 LDR W8, [X31 + 0xAC]
	0x01F9F098 CBZ W8, 0x1F9F0C8
	0x01F9F09C CMP W8, 0x1
	0x01F9F0A0 B.EQ 0x1F9F19C
	0x01F9F0A4 CMP W8, 0x2
	0x01F9F0A8 B.NE 0x1F9F1C0
	0x01F9F0AC ADRP X8, 0x217C000
	0x01F9F0B0 LDR X8, [X8 + 0x1E0]
	0x01F9F0B4 ADD X0, X31, 0x60
	0x01F9F0B8 LDR X1, [X8]
	0x01F9F0BC ADD X8, X31, 0x10
	0x01F9F0C0 BL 0x2E70EE0
	0x01F9F0C4 B 0x1F9F1B4

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+80], X20
	004 Move [X31+88], X19
	005 Move X20, 0x243C000
	006 Move W8, [X20+1961]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x217E000
	013 Move X0, [X0+320]
	014 Call 0x1C17CF4
	015 Move X0, 0x215C000
	016 Move X0, [X0+2240]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1961], W8
	020 Add X0, X19, 72
	021 Move X1, X31
	022 Call InputActionProperty.get_action, X0
	023 Compare X0, 0
	024 JumpIfEqual {112}
	025 Move X20, 0x215C000
	026 Move X20, [X20+2240]
	027 Move X1, [X20]
	028 Call InputAction.ReadValue, X0
	029 Add X0, X19, 144
	030 Move X1, X31
	031 Move [X19+36], S0
	032 Call InputActionProperty.get_action, X0
	033 Compare X0, 0
	034 JumpIfEqual {112}
	035 Move X1, [X20]
	036 Call InputAction.ReadValue, X0
	037 Add X0, X19, 96
	038 Move X1, X31
	039 Move [X19+40], S0
	040 Call InputActionProperty.get_action, X0
	041 Compare X0, 0
	042 JumpIfEqual {112}
	043 Move X1, [X20]
	044 Call InputAction.ReadValue, X0
	045 Add X0, X19, 120
	046 Move X1, X31
	047 Move [X19+44], S0
	048 Call InputActionProperty.get_action, X0
	049 Compare X0, 0
	050 JumpIfEqual {112}
	051 Move X1, [X20]
	052 Call InputAction.ReadValue, X0
	053 Move W8, [X19+168]
	054 Move W9, [X19+204]
	055 Move [X19+48], S0
	056 Move [X19+52], W8
	057 Move [X19+56], W31
	058 Compare W9, 0
	059 JumpIfEqual {71}
	060 Add X0, X19, 176
	061 Move X1, X31
	062 Call InputActionProperty.get_action, X0
	063 Compare X0, 0
	064 JumpIfEqual {112}
	065 Move X1, [X20]
	066 Call InputAction.ReadValue, X0
	067 Move V1, [X19+200]
	068 NotImplemented "Instruction FCMP not yet implemented."
	069 NotImplemented "Instruction CSET not yet implemented."
	070 Move [X19+60], W8
	071 Move X20, [X19+216]
	072 Compare X20, 0
	073 JumpIfEqual {107}
	074 Add X8, X19, 36
	075 Move X9, [X8+16]
	076 Move V0, [X8]
	077 Move X10, 0x217D000
	078 Move [X31+16], X9
	079 Move [X31], V0
	080 Move X8, [X20]
	081 Move X10, [X10+320]
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Move X1, [X10]
	084 Compare X9, 0
	085 JumpIfEqual {92}
	086 Move X10, [X8+176]
	087 Add X10, X10, 8
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Subtract X9, X9, 1
	091 Add X10, X10, 16
	092 Move X0, X20
	093 Move W2, W31
	094 Call 0x1C5D788
	095 NotImplemented "Instruction LDRSW not yet implemented."
	096 Add X8, X8, X9
	097 Add X0, X8, 312
	098 Move V0, [X31]
	099 Move X8, [X31+16]
	100 Move X9, [X0]
	101 Add X1, X31, 32
	102 Move [X31+2], V0
	103 Move [X31+48], X8
	104 Move X2, [X0+8]
	105 Move X0, X20
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move X20, [X31+80]
	108 Move X19, [X31+88]
	109 Move X30, [X31+64]
	110 Add X31, X31, 96
	111 Return 
	112 Call 0x1C17F20

Method: System.Nullable`1<UnityEngine.XR.InputDevice> get_Device()

Disassembly:
	0x01F9F0C8 ADRP X20, 0x217C000
	0x01F9F0CC LDR X20, [X20 + 0x1E0]
	0x01F9F0D0 ADD X8, X31, 0x10
	0x01F9F0D4 ADD X0, X31, 0x60
	0x01F9F0D8 LDR X1, [X20]
	0x01F9F0DC BL 0x2E70EE0
	0x01F9F0E0 ADRP X21, 0x217C000
	0x01F9F0E4 LDR V8, [X31 + 0x10]
	0x01F9F0E8 LDR V9, [X31 + 0x18]
	0x01F9F0EC LDR X21, [X21 + 0x1E8]
	0x01F9F0F0 ADD X8, X31, 0x10
	0x01F9F0F4 ADD X0, X31, 0x60
	0x01F9F0F8 LDR X1, [X21]
	0x01F9F0FC BL 0x2E70FBC
	0x01F9F100 LDR V2, [X31 + 0xA8]
	0x01F9F104 LDR V0, [X31 + 0x10]
	0x01F9F108 LDR V1, [X31 + 0x18]
	0x01F9F10C FMOV S3, 1
	0x01F9F110 LDR X1, [X20]
	0x01F9F114 FMOV S4, W31
	0x01F9F118 FMIN S3, S2, S3
	0x01F9F11C FCMP S2, 0x0
	0x01F9F120 FSUB V0.2S, V0.2S, V8.2S
	0x01F9F124 FSUB S1, S1, S9
	0x01F9F128 FCSEL S2, S3, S4, PL
	0x00000000 INVALID
	0x01F9F130 FMUL S1, S1, S2
	0x01F9F134 ADD X8, X31, 0x10
	0x01F9F138 ADD X0, X31, 0x60
	0x01F9F13C FADD V12.2S, V8.2S, V0.2S
	0x01F9F140 FADD S13, S9, S1
	0x01F9F144 BL 0x2E70EE0
	0x01F9F148 LDR X1, [X21]
	0x01F9F14C LDP S8, S9, [X31 + 0x1C]
	0x01F9F150 LDP S10, S11, [X31 + 0x24]
	0x01F9F154 ADD X8, X31, 0x10
	0x01F9F158 ADD X0, X31, 0x60
	0x01F9F15C BL 0x2E70FBC
	0x01F9F160 LDR V0, [X31 + 0xA8]
	0x01F9F164 LDP S4, S5, [X31 + 0x1C]
	0x01F9F168 LDP S6, S7, [X31 + 0x24]
	0x01F9F16C MOV V1.16B, V9.16B
	0x01F9F170 STR S0, [X31]
	0x01F9F174 MOV V0.16B, V8.16B
	0x01F9F178 MOV V2.16B, V10.16B
	0x01F9F17C MOV V3.16B, V11.16B
	0x01F9F180 MOV X0, X31
	0x01F9F184 BL 0x3C2A2F8
	0x01F9F188 STR D12, [X19]
	0x01F9F18C STP S13, S0, [X19 + 0x8]
	0x01F9F190 STP S1, S2, [X19 + 0x10]
	0x01F9F194 STR S3, [X19 + 0x18]
	0x01F9F198 B 0x1F9F1D0
	0x01F9F19C ADRP X8, 0x217C000
	0x01F9F1A0 LDR X8, [X8 + 0x1E8]
	0x01F9F1A4 ADD X0, X31, 0x60
	0x01F9F1A8 LDR X1, [X8]
	0x01F9F1AC ADD X8, X31, 0x10
	0x01F9F1B0 BL 0x2E70FBC
	0x01F9F1B4 LDUR V0, [X31 + 0x1C]
	0x01F9F1B8 LDR V1, [X31 + 0x1]
	0x01F9F1BC B 0x1F9F1C8
	0x01F9F1C0 LDUR V0, [X20 + 0x6C]
	0x01F9F1C4 LDR V1, [X20 + 0x6]
	0x01F9F1C8 STUR V0, [X19 + 0xC]
	0x01F9F1CC STR V1, [X19]
	0x01F9F1D0 LDP X20, X19, [X31 + 0x100]
	0x01F9F1D4 LDP X22, X21, [X31 + 0xF0]
	0x01F9F1D8 LDP X29, X30, [X31 + 0xE0]
	0x01F9F1DC LDP D9, D8, [X31 + 0xD0]
	0x01F9F1E0 LDP D11, D10, [X31 + 0xC0]
	0x01F9F1E4 LDP D13, D12, [X31 + 0xB0]
	0x01F9F1E8 ADD X31, X31, 0x110
	0x01F9F1EC RET
	0x01F9F1F0 STP X30, X21, [X31 - 0x20]!
	0x01F9F1F4 STP X20, X19, [X31 + 0x10]
	0x01F9F1F8 ADRP X21, 0x243A000
	0x01F9F1FC LDRB W9, [X21 + 0x7DF]
	0x01F9F200 MOV X20, X0
	0x01F9F204 MOV X19, X8
	0x01F9F208 TBNZ X9, 0x0, 0x1F9F220
	0x01F9F20C ADRP X0, 0x2154000
	0x01F9F210 LDR X0, [X0 + 0x598]
	0x01F9F214 BL 0x1C16CF4
	0x01F9F218 MOVZ W8, 0x1
	0x01F9F21C STRB W8, [X21 + 0x7DF]
	0x01F9F220 LDRB W8, [X20 + 0x88]
	0x01F9F224 CBZ W8, 0x1F9F248
	0x01F9F228 MOVI V0.2D, 0x0
	0x01F9F22C STR X31, [X19 + 0x50]
	0x01F9F230 STP V0, V0, [X19 + 0x30]
	0x01F9F234 STP V0, V0, [X19 + 0x10]
	0x01F9F238 STR V0, [X19]
	0x01F9F23C LDP X20, X19, [X31 + 0x10]
	0x01F9F240 LDP X30, X21, [X31], #0x20
	0x01F9F244 RET
	0x01F9F248 ADRP X8, 0x2154000
	0x01F9F24C LDR X8, [X8 + 0x598]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X21, 0x243B000
	009 Move W9, [X21+1962]
	010 Move X20, X0
	011 Move X19, X8
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x217D000
	017 Move X0, [X0+328]
	018 Call 0x1C17CF4
	019 Move X0, 0x217D000
	020 Move X0, [X0+336]
	021 Call 0x1C17CF4
	022 Move X0, 0x217D000
	023 Move X0, [X0+344]
	024 Call 0x1C17CF4
	025 Move X0, 0x217D000
	026 Move X0, [X0+352]
	027 Call 0x1C17CF4
	028 Move X0, 0x217D000
	029 Move X0, [X0+360]
	030 Call 0x1C17CF4
	031 Move X0, 0x217D000
	032 Move X0, [X0+368]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+1962], W8
	036 Move [X31+24], X31
	037 Move [X31+32], X31
	038 Move [X31+40], W31
	039 Move X23, X20
	040 Add X23, X23, 224
	041 Move W8, [X23]
	042 Compare W8, 0
	043 JumpIfEqual {56}
	044 Move X8, [X23+16]
	045 Move V0, [X23]
	046 Move X22, [X31+80]
	047 Move X21, [X31+88]
	048 Move X30, [X31+64]
	049 Move X23, [X31+72]
	050 Move [X19+16], X8
	051 Move [X19], V0
	052 Move X20, [X31+96]
	053 Move X19, [X31+104]
	054 Add X31, X31, 112
	055 Return X0
	056 Move X10, 0x217D000
	057 Move W8, [X20+32]
	058 Move X10, [X10+352]
	059 Move W9, 608
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X0, [X10]
	062 Move W8, 352
	063 NotImplemented "Instruction CSEL not yet implemented."
	064 Call 0x1C17F10
	065 Move X8, 0x217D000
	066 Move X8, [X8+328]
	067 Move X21, X0
	068 Move X1, [X8]
	069 Call List`1<InputDevice>..ctor, X0
	070 Move W0, W22
	071 Move X1, X21
	072 Move X2, X31
	073 Call InputDevices.GetDevicesWithCharacteristics, X0, X1
	074 Compare X21, 0
	075 JumpIfEqual {114}
	076 Move W8, [X21+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X8, 0x217D000
	079 Move X8, [X8+344]
	080 Move X0, X21
	081 Move W1, W31
	082 Move X2, [X8]
	083 Call List`1<InputDevice>.get_Item, X0, X1
	084 Move [X31+48], X0
	085 Move [X31+56], X1
	086 Move X9, 0x217D000
	087 Move X9, [X9+360]
	088 Move X8, X0
	089 Move X2, X1
	090 Add X0, X31, 0
	091 Move X3, [X9]
	092 Move X1, X8
	093 Move [X31], X31
	094 Move [X31+8], X31
	095 Move [X31+16], X31
	096 Call Nullable`1<InputDevice>..ctor, X0, X1
	097 Move X8, [X31+16]
	098 Move V0, [X31]
	099 Add X0, X31, 48
	100 Add X1, X31, 24
	101 Move X2, X31
	102 Move [X23+16], X8
	103 Move [X23], V0
	104 Call InputDevice.TryGetHapticCapabilities, X0, X1
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {44}
	109 Add X0, X31, 24
	110 Move X1, X31
	111 Call HapticCapabilities.get_supportsImpulse, X0
	112 And W8, W0, 1
	113 Move [X20+248], W8
	114 Call 0x1C17F20

Method: System.Void SendHapticImpulse(System.Single amplitude, System.Single duration, System.UInt32 channel = 0)

Disassembly:
	0x01F9F250 LDR X21, [X20 + 0x20]
	0x01F9F254 LDR X0, [X8]
	0x01F9F258 LDR W8, [X0 + 0xE0]
	0x01F9F25C CBNZ W8, 0x1F9F264
	0x01F9F260 BL 0x1C16DFC
	0x01F9F264 MOV X0, X21
	0x01F9F268 MOV X1, X31
	0x01F9F26C BL 0x3C38948
	0x01F9F270 TBZ X0, 0x0, 0x1F9F2C0
	0x01F9F274 LDR X8, [X20 + 0x20]
	0x01F9F278 CBZ X8, 0x1F9F31C
	0x01F9F27C LDR X9, [X8 + 0x28]
	0x01F9F280 CBZ X9, 0x1F9F31C
	0x01F9F284 LDR X10, [X9 + 0x40]
	0x01F9F288 CBZ X10, 0x1F9F298
	0x01F9F28C LDR X10, [X10 + 0x20]
	0x01F9F290 CBZ X10, 0x1F9F298
	0x01F9F294 LDR W10, [X10]
	0x01F9F298 LDR W9, [X9 + 0x68]
	0x01F9F29C BFM X10, X9, 0x20, 0x1F
	0x01F9F2A0 STUR X10, [X20 + 0x8C]
	0x01F9F2A4 LDR W9, [X8 + 0x38]
	0x01F9F2A8 LDR X10, [X8 + 0x30]
	0x01F9F2AC STR W9, [X20 + 0x9C]
	0x01F9F2B0 STUR X10, [X20 + 0x94]
	0x01F9F2B4 LDUR V0, [X8 + 0x3C]
	0x01F9F2B8 STR V0, [X20 + 0xA]
	0x01F9F2BC B 0x1F9F304
	0x01F9F2C0 MOV X0, X31
	0x01F9F2C4 BL 0x1E769D8
	0x01F9F2C8 LDR X8, [X20 + 0x48]
	0x01F9F2CC LDR W9, [X20 + 0x50]
	0x01F9F2D0 LDUR X10, [X20 + 0x64]
	0x01F9F2D4 LDUR V0, [X20 + 0x54]
	0x01F9F2D8 STR X8, [X20 + 0xB0]
	0x01F9F2DC LDR W8, [X20 + 0x6C]
	0x01F9F2E0 STR W9, [X20 + 0xB8]
	0x01F9F2E4 LDR X9, [X20 + 0x70]
	0x01F9F2E8 STUR X10, [X20 + 0xCC]
	0x01F9F2EC LDR W10, [X20 + 0x78]
	0x01F9F2F0 STUR X0, [X20 + 0x8C]
	0x01F9F2F4 STR W8, [X20 + 0xD4]
	0x01F9F2F8 STR X9, [X20 + 0xD8]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], D9
	003 Move [X31+56], D8
	004 Move [X31+64], X30
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X21, 0x243B000
	009 Move W8, [X21+1963]
	010 Move W19, W1
	011 Move V8, V1
	012 Move V9, V0
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x217D000
	019 Move X0, [X0+376]
	020 Call 0x1C17CF4
	021 Move X0, 0x217D000
	022 Move X0, [X0+368]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+1963], W8
	026 Add X8, X31, 8
	027 Move X0, X20
	028 Move [X31+32], X31
	029 Move [X31+40], X31
	030 Call HardwareHand.get_Device, X0
	031 Move W8, [X31+8]
	032 Compare W8, 0
	033 JumpIfEqual {50}
	034 Add X8, X31, 8
	035 Move X0, X20
	036 Call HardwareHand.get_Device, X0
	037 Move X8, [X31+16]
	038 Move X9, [X31+24]
	039 Move [X31+32], X8
	040 Move [X31+40], X9
	041 Move W8, [X20+248]
	042 Compare W8, 0
	043 JumpIfEqual {50}
	044 Add X0, X31, 32
	045 Move W1, W19
	046 Move V0, V9
	047 Move V1, V8
	048 Move X2, X31
	049 Call InputDevice.SendHapticImpulse, X0, X1, V0, V1
	050 Move X20, [X31+80]
	051 Move X19, [X31+88]
	052 Move X30, [X31+64]
	053 Move X21, [X31+72]
	054 Move D9, [X31+48]
	055 Move D8, [X31+56]
	056 Add X31, X31, 96
	057 Return 

Method: System.Void SendHapticBuffer(System.Byte[] buffer, System.UInt32 channel = 0)

Disassembly:
	0x01F9F2FC STUR V0, [X20 + 0xBC]
	0x01F9F300 STR W10, [X20 + 0xE0]
	0x01F9F304 ADD X1, X20, 0x8C
	0x01F9F308 MOV X0, X19
	0x01F9F30C LDP X20, X19, [X31 + 0x10]
	0x01F9F310 MOVZ W2, 0x58
	0x01F9F314 LDP X30, X21, [X31], #0x20
	0x01F9F318 B 0x3EB1AC0
	0x01F9F31C BL 0x1C16F20
	0x01F9F320 RET
	0x01F9F324 RET
	0x01F9F328 RET
	0x01F9F32C RET
	0x01F9F330 STR X1, [X0 + 0x38]
	0x01F9F334 RET
	0x01F9F338 RET
	0x01F9F33C RET
	0x01F9F340 RET
	0x01F9F344 RET
	0x01F9F348 RET
	0x01F9F34C RET
	0x01F9F350 RET
	0x01F9F354 RET
	0x01F9F358 RET
	0x01F9F35C RET
	0x01F9F360 RET
	0x01F9F364 RET
	0x01F9F368 RET
	0x01F9F36C RET
	0x01F9F370 MOVZ W9, 0x126F
	0x01F9F374 MOVZ W8, 0x2
	0x01F9F378 MOVK W9, 0x3C030000
	0x01F9F37C MOV X1, X31
	0x01F9F380 STR W8, [X0 + 0x40]
	0x01F9F384 STR W9, [X0 + 0x48]
	0x01F9F388 B 0x3C36C30
	0x01F9F38C RET
	0x01F9F390 STP X30, X21, [X31 - 0x20]!
	0x01F9F394 STP X20, X19, [X31 + 0x10]
	0x01F9F398 ADRP X20, 0x243A000
	0x01F9F39C LDRB W8, [X20 + 0x7B5]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0x243B000
	008 Move W8, [X22+1964]
	009 Move W20, W2
	010 Move X19, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x217D000
	017 Move X0, [X0+376]
	018 Call 0x1C17CF4
	019 Move X0, 0x217D000
	020 Move X0, [X0+368]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1964], W8
	024 Add X8, X31, 8
	025 Move X0, X21
	026 Move [X31+32], X31
	027 Move [X31+40], X31
	028 Call HardwareHand.get_Device, X0
	029 Move W8, [X31+8]
	030 Compare W8, 0
	031 JumpIfEqual {47}
	032 Add X8, X31, 8
	033 Move X0, X21
	034 Call HardwareHand.get_Device, X0
	035 Move X8, [X31+16]
	036 Move X9, [X31+24]
	037 Move [X31+32], X8
	038 Move [X31+40], X9
	039 Move W8, [X21+248]
	040 Compare W8, 0
	041 JumpIfEqual {47}
	042 Add X0, X31, 32
	043 Move W1, W20
	044 Move X2, X19
	045 Move X3, X31
	046 Call InputDevice.SendHapticBuffer, X0, X1, X2
	047 Move X20, [X31+80]
	048 Move X19, [X31+88]
	049 Move X22, [X31+64]
	050 Move X21, [X31+72]
	051 Move X30, [X31+48]
	052 Add X31, X31, 96
	053 Return 

Method: System.Void .ctor()

Disassembly:
	0x01F9F3A0 MOV X19, X0
	0x01F9F3A4 TBNZ X8, 0x0, 0x1F9F3BC
	0x01F9F3A8 ADRP X0, 0x2154000
	0x01F9F3AC LDR X0, [X0 + 0x598]
	0x01F9F3B0 BL 0x1C16CF4
	0x01F9F3B4 MOVZ W8, 0x1

ISIL:
	001 Move W8, 0x3F000000
	002 Move W9, 1
	003 Move X1, X31
	004 Move [X0+200], W8
	005 Move [X0+204], W9
	006 Call MonoBehaviour..ctor, X0
	007 Return 

