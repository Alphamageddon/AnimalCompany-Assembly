Type: Fusion.XR.Host.Rig.NetworkHand

Method: Fusion.XR.Host.Rig.HandCommand get_HandCommand()

Disassembly:
	0x01FA1670 STP X30, X19, [X31 - 0x10]!
	0x01FA1674 LDR W9, [X0 + 0x10]
	0x01FA1678 MOV W8, W31
	0x01FA167C CMP W9, 0x3
	0x01FA1680 B.HI 0x1FA1754

ISIL:
	001 Move X9, [X0+152]
	002 NotImplemented "Instruction LDUR not yet implemented."
	003 Move [X8+16], X9
	004 Move [X8], V0
	005 Return X0

Method: System.Void set_HandCommand(Fusion.XR.Host.Rig.HandCommand value)

Disassembly:
	0x01FA1684 MOV X19, X0
	0x01FA1688 LDR X0, [X0 + 0x28]
	0x01FA168C ADRP X10, 0xFFFFFFFFFEB8C000
	0x01FA1690 ADD X10, X10, 0xC72
	0x01FA1694 ADR X11, 0x14

ISIL:
	001 Move X8, [X1+16]
	002 Move V0, [X1]
	003 Move [X0+152], X8
	004 Move [X0+136], V0
	005 Return 

Method: System.Boolean get_IsLocalNetworkRig()

Disassembly:
	0x01FA1698 LDRB W12, [X10, X9, LSL]
	0x01FA169C ADD X11, X11, X12, 0x2, LSL
	0x01FA16A0 MOVN W9, 0x0
	0x01FA16A4 BR X11
	0x01FA16A8 LDR V0, [X19 + 0x20]
	0x01FA16AC FMOV S1, -1
	0x01FA16B0 MOVN W8, 0x0
	0x01FA16B4 STR W8, [X19 + 0x10]
	0x01FA16B8 FCMP S0, S1

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+168]
	003 Compare X8, 0
	004 JumpIfEqual {12}
	005 Move X0, [X8+64]
	006 Compare X0, 0
	007 JumpIfEqual {12}
	008 Move X1, X31
	009 Move X30, [X31+16]
	010 Call NetworkObject.get_HasInputAuthority, X0
	011 Return X0
	012 Call 0x1C17F20

Method: Fusion.XR.Host.Rig.HardwareHand get_LocalHardwareHand()

Disassembly:
	0x01FA16D8 CBZ X0, 0x1FA1760
	0x01FA16DC LDR V1, [X0 + 0x4C]
	0x01FA16E0 STR S1, [X19 + 0x30]
	0x01FA16E4 LDR V1, [X19 + 0x34]
	0x01FA16E8 FMOV S2, -1
	0x01FA16EC FCMP S1, S2
	0x01FA16F0 B.NE 0x1FA173C
	0x01FA16F4 CBZ X0, 0x1FA1760
	0x01FA16F8 LDR V1, [X0 + 0x50]
	0x01FA16FC STR S1, [X19 + 0x34]
	0x01FA1700 B 0x1FA1740
	0x01FA1704 MOVN W8, 0x0
	0x01FA1708 STR W8, [X19 + 0x10]
	0x01FA170C CBZ X0, 0x1FA1760
	0x01FA1710 LDR V0, [X19 + 0x30]
	0x01FA1714 BL 0x1F9F5C8
	0x01FA1718 MOVZ W9, 0x2
	0x01FA171C B 0x1FA1748
	0x01FA1720 MOVN W8, 0x0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call NetworkHand.get_IsLocalNetworkRig, X0
	005 Move TEMP, X0
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfNotEqual {21}
	009 Move X8, [X19+168]
	010 Compare X8, 0
	011 JumpIfEqual {25}
	012 Move X8, [X8+128]
	013 Compare X8, 0
	014 JumpIfEqual {25}
	015 Move W9, [X19+160]
	016 Move W10, 40
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W9, 32
	019 NotImplemented "Instruction CSEL not yet implemented."
	020 Move X0, [X8]
	021 Move X0, X31
	022 Move X30, [X31+16]
	023 Move X19, [X31+24]
	024 Return X0
	025 Call 0x1C17F20

Method: System.Void Awake()

Disassembly:
	0x01FA1724 STR W8, [X19 + 0x10]
	0x01FA1728 CBZ X0, 0x1FA1760
	0x01FA172C LDR V0, [X19 + 0x34]
	0x01FA1730 BL 0x1F9F638
	0x01FA1734 MOVZ W9, 0x3
	0x01FA1738 B 0x1FA1748
	0x01FA173C CBZ X0, 0x1FA1760
	0x01FA1740 BL 0x1F9F558
	0x01FA1744 MOVZ W9, 0x1
	0x01FA1748 MOVZ W8, 0x1
	0x01FA174C STR X0, [X19 + 0x18]
	0x01FA1750 STR W9, [X19 + 0x10]
	0x01FA1754 MOV W0, W8
	0x01FA1758 LDP X30, X19, [X31], #0x10
	0x01FA175C RET
	0x01FA1760 BL 0x1C16F20
	0x01FA1764 LDR X0, [X0 + 0x18]
	0x01FA1768 RET
	0x01FA176C STP X30, X19, [X31 - 0x10]!
	0x01FA1770 ADRP X0, 0x2152000
	0x01FA1774 LDR X0, [X0 + 0xB40]
	0x01FA1778 BL 0x1C16D08
	0x01FA177C BL 0x1C16F10
	0x01FA1780 MOV X1, X31
	0x01FA1784 MOV X19, X0
	0x01FA1788 BL 0x3380310
	0x01FA178C ADRP X0, 0x217A000
	0x01FA1790 LDR X0, [X0 + 0x2E8]
	0x01FA1794 BL 0x1C16D08
	0x01FA1798 MOV X1, X0
	0x01FA179C MOV X0, X19
	0x01FA17A0 BL 0x1C16DEC
	0x01FA17A4 LDR X0, [X0 + 0x18]
	0x01FA17A8 RET
	0x01FA17AC RET
	0x01FA17B0 STR D8, [X31 - 0x20]!
	0x01FA17B4 STR X30, [X31 + 0x8]
	0x01FA17B8 STP X20, X19, [X31 + 0x10]
	0x01FA17BC ADRP X20, 0x2438000
	0x01FA17C0 LDRB W8, [X20 + 0x7D1]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x2439000
	008 Move X23, 0x217B000
	009 Move X21, 0x217B000
	010 Move X20, 0x217B000
	011 Move W8, [X22+1986]
	012 Move X23, [X23+672]
	013 Move X21, [X21+264]
	014 Move X20, [X20+256]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x217B000
	021 Move X0, [X0+256]
	022 Call 0x1C17CF4
	023 Move X0, 0x217B000
	024 Move X0, [X0+672]
	025 Call 0x1C17CF4
	026 Move X0, 0x217B000
	027 Move X0, [X0+264]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+1986], W8
	031 Move X1, [X23]
	032 Move X0, X19
	033 Call 0x21A4F50, X0
	034 Move [X19+168], X0
	035 Move X1, [X21]
	036 Move X0, X19
	037 Call 0x21A4894, X0
	038 Move [X19+128], X0
	039 Move X1, [X20]
	040 Move X0, X19
	041 Call 0x21A4AF8, X0
	042 Move [X19+176], X0
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Return 

Method: System.Void Spawned()

Disassembly:
	0x01FA17C4 MOV X19, X0
	0x01FA17C8 TBNZ X8, 0x0, 0x1FA17E0
	0x01FA17CC ADRP X0, 0x2155000
	0x01FA17D0 LDR X0, [X0 + 0xC30]
	0x01FA17D4 BL 0x1C16CF4
	0x01FA17D8 MOVZ W8, 0x1
	0x01FA17DC STRB W8, [X20 + 0x7D1]
	0x01FA17E0 LDR W8, [X19 + 0x10]
	0x01FA17E4 LDR X20, [X19 + 0x28]
	0x01FA17E8 CMP W8, 0x1
	0x01FA17EC B.EQ 0x1FA184C
	0x01FA17F0 CBNZ W8, 0x1FA18F8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call NetworkBehaviour.Spawned, X0
	006 Move W1, 1
	007 Move W2, 1
	008 Move X0, X19
	009 Move X3, X31
	010 Call NetworkBehaviour.GetChangeDetector, X0, X1, X2
	011 Move [X19+184], X0
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return 

Method: System.Void Render()

Disassembly:
	0x01FA17F4 LDR V0, [X19 + 0x20]
	0x01FA17F8 MOVZ W9, 0x447A0000
	0x01FA17FC FMOV S1, W9
	0x01FA1800 MOVN W8, 0x0
	0x01FA1804 FMUL S0, S0, S1
	0x01FA1808 MOV X0, X31
	0x01FA180C STR W8, [X19 + 0x10]
	0x01FA1810 STR S0, [X19 + 0x38]
	0x01FA1814 BL 0x3C3A708
	0x01FA1818 CBZ X20, 0x1FA190C
	0x01FA181C STR S0, [X20 + 0x54]
	0x01FA1820 STR S0, [X19 + 0x3C]
	0x01FA1824 LDR V0, [X19 + 0x30]
	0x01FA1828 MOVZ X8, 0xA
	0x01FA182C STR X8, [X19 + 0x40]
	0x01FA1830 MOVZ W8, 0xD70A
	0x01FA1834 MOVK W8, 0x3C230000
	0x01FA1838 MOV X0, X20
	0x01FA183C STR W8, [X19 + 0x48]
	0x01FA1840 BL 0x1FA1284
	0x01FA1844 LDR V0, [X19 + 0x40]
	0x01FA1848 B 0x1FA1864
	0x01FA184C LDP S1, S0, [X19 + 0x40]
	0x01FA1850 MOVN W8, 0x0
	0x01FA1854 STR W8, [X19 + 0x10]
	0x01FA1858 SCVTF S0, S0
	0x01FA185C FADD S0, S1, S0
	0x01FA1860 STR S0, [X19 + 0x40]
	0x01FA1864 LDR V1, [X19 + 0x38]
	0x01FA1868 FCMP S0, S1
	0x01FA186C B.PL 0x1FA18E8
	0x01FA1870 CBZ X20, 0x1FA190C
	0x01FA1874 LDR V2, [X19 + 0x3C]
	0x01FA1878 LDR V3, [X20 + 0x54]
	0x01FA187C FCMP S2, S3
	0x01FA1880 B.NE 0x1FA18EC
	0x01FA1884 LDP S2, S3, [X19 + 0x30]
	0x01FA1888 FDIV S0, S0, S1
	0x01FA188C FMOV S1, 1
	0x01FA1890 FMIN S1, S0, S1
	0x01FA1894 FCMP S0, 0x0
	0x01FA1898 FMOV S0, W31
	0x01FA189C FCSEL S0, S1, S0, PL
	0x01FA18A0 FSUB S1, S3, S2
	0x01FA18A4 FMUL S0, S0, S1
	0x01FA18A8 FADD S0, S2, S0
	0x01FA18AC MOV X0, X20
	0x01FA18B0 BL 0x1FA1284
	0x01FA18B4 ADRP X8, 0x2155000
	0x01FA18B8 LDR V8, [X19 + 0x48]
	0x01FA18BC LDR X8, [X8 + 0xC30]
	0x01FA18C0 LDR X0, [X8]
	0x01FA18C4 BL 0x1C16F10
	0x01FA18C8 MOV V0.16B, V8.16B
	0x01FA18CC MOV X1, X31
	0x01FA18D0 MOV X20, X0
	0x01FA18D4 BL 0x3C3A634

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move X20, 0x2439000
	006 Move W8, [X20+1987]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x217B000
	013 Move X0, [X0+680]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1987], W8
	017 Move X0, X19
	018 Move X1, X31
	019 Move [X31+16], X31
	020 Move [X31+24], X31
	021 Call SimulationBehaviour.Render, X0
	022 Move X0, X19
	023 Call NetworkHand.get_IsLocalNetworkRig, X0
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {30}
	028 Move X0, X19
	029 Call NetworkHand.UpdateRepresentationWithLocalHardwareState, X0
	030 Move X0, [X19+184]
	031 Compare X0, 0
	032 JumpIfEqual {77}
	033 Move W2, 1
	034 Move X1, X19
	035 Move X3, X31
	036 Call ChangeDetector.DetectChanges, X0, X1, X2
	037 Move [X31], X0
	038 Move [X31+8], X1
	039 Add X0, X31, 0
	040 Move X1, X31
	041 Call Enumerable.GetEnumerator, X0
	042 Move [X31+16], X0
	043 Move [X31+24], X1
	044 Add X0, X31, 16
	045 Move X1, X31
	046 Call Enumerator.MoveNext, X0
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {72}
	051 Move X20, 0x217B000
	052 Move X20, [X20+680]
	053 Add X0, X31, 16
	054 Move X1, X31
	055 Call Enumerator.get_Current, X0
	056 Move X1, [X20]
	057 Move X2, X31
	058 Call String.op_Equality, X0, X1
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {65}
	063 Move X0, X19
	064 Call NetworkHand.UpdateHandRepresentationWithNetworkState, X0
	065 Add X0, X31, 16
	066 Move X1, X31
	067 Call Enumerator.MoveNext, X0
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {53}
	072 Move X20, [X31+48]
	073 Move X19, [X31+56]
	074 Move X30, [X31+32]
	075 Add X31, X31, 64
	076 Return 
	077 Call 0x1C17F20

Method: System.Void UpdateHandRepresentationWithNetworkState()

Disassembly:
	0x01FA19B8 BL 0x1FA1440
	0x01FA19BC STR X0, [X19 + 0x18]
	0x01FA19C0 MOVZ W8, 0x1
	0x01FA19C4 MOVZ W0, 0x1
	0x01FA19C8 STR W8, [X19 + 0x10]
	0x01FA19CC LDP X30, X19, [X31], #0x10
	0x01FA19D0 RET
	0x01FA19D4 BL 0x1C16F20
	0x01FA19D8 LDR X0, [X0 + 0x18]
	0x01FA19DC RET
	0x01FA19E0 STP X30, X19, [X31 - 0x10]!
	0x01FA19E4 ADRP X0, 0x2152000
	0x01FA19E8 LDR X0, [X0 + 0xB40]
	0x01FA19EC BL 0x1C16D08
	0x01FA19F0 BL 0x1C16F10
	0x01FA19F4 MOV X1, X31
	0x01FA19F8 MOV X19, X0
	0x01FA19FC BL 0x3380310
	0x01FA1A00 ADRP X0, 0x217A000
	0x01FA1A04 LDR X0, [X0 + 0x2F8]
	0x01FA1A08 BL 0x1C16D08
	0x01FA1A0C MOV X1, X0
	0x01FA1A10 MOV X0, X19
	0x01FA1A14 BL 0x1C16DEC
	0x01FA1A18 LDR X0, [X0 + 0x18]
	0x01FA1A1C RET
	0x01FA1A20 RET
	0x01FA1A24 STP X30, X19, [X31 - 0x10]!
	0x01FA1A28 LDR W8, [X0 + 0x10]
	0x01FA1A2C MOV X19, X0
	0x01FA1A30 MOV W0, W31
	0x01FA1A34 CMP W8, 0x1
	0x01FA1A38 B.EQ 0x1FA1A6C
	0x01FA1A3C CBNZ W8, 0x1FA1A94
	0x01FA1A40 LDR V0, [X19 + 0x20]
	0x01FA1A44 LDR X0, [X19 + 0x28]
	0x01FA1A48 FMOV S1, -1
	0x01FA1A4C MOVN W8, 0x0
	0x01FA1A50 FCMP S0, S1
	0x01FA1A54 STR W8, [X19 + 0x10]
	0x01FA1A58 B.NE 0x1FA1A74
	0x01FA1A5C CBZ X0, 0x1FA1A9C
	0x01FA1A60 LDR V0, [X0 + 0x50]
	0x01FA1A64 STR S0, [X19 + 0x20]
	0x01FA1A68 B 0x1FA1A78
	0x01FA1A6C MOVN W8, 0x0
	0x01FA1A70 B 0x1FA1A90
	0x01FA1A74 CBZ X0, 0x1FA1A9C
	0x01FA1A78 FMOV S1, 1
	0x01FA1A7C FMOV S2, W31
	0x01FA1A80 BL 0x1FA1440
	0x01FA1A84 STR X0, [X19 + 0x18]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+80], X20
	004 Move [X31+88], X19
	005 Move X19, 0x2439000
	006 Move W8, [X19+1988]
	007 Move X20, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x217B000
	013 Move X0, [X0+320]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1988], W8
	017 Move X19, [X20+176]
	018 Compare X19, 0
	019 JumpIfEqual {52}
	020 Move X8, [X20+152]
	021 NotImplemented "Instruction LDUR not yet implemented."
	022 Move X10, 0x217B000
	023 Move [X31+16], X8
	024 Move [X31], V0
	025 Move X8, [X19]
	026 Move X10, [X10+320]
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move X1, [X10]
	029 Compare X9, 0
	030 JumpIfEqual {37}
	031 Move X10, [X8+176]
	032 Add X10, X10, 8
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Subtract X9, X9, 1
	036 Add X10, X10, 16
	037 Move X0, X19
	038 Move W2, W31
	039 Call 0x1C5D788
	040 NotImplemented "Instruction LDRSW not yet implemented."
	041 Add X8, X8, X9
	042 Add X0, X8, 312
	043 Move V0, [X31]
	044 Move X8, [X31+16]
	045 Move X9, [X0]
	046 Add X1, X31, 32
	047 Move [X31+2], V0
	048 Move [X31+48], X8
	049 Move X2, [X0+8]
	050 Move X0, X19
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X20, [X31+80]
	053 Move X19, [X31+88]
	054 Move X30, [X31+64]
	055 Add X31, X31, 96
	056 Return 

Method: System.Void UpdateRepresentationWithLocalHardwareState()

Disassembly:
	0x01FA18D8 MOVZ W0, 0x1
	0x01FA18DC STR X20, [X19 + 0x18]
	0x01FA18E0 STR W0, [X19 + 0x10]
	0x01FA18E4 B 0x1FA18FC
	0x01FA18E8 CBZ X20, 0x1FA190C
	0x01FA18EC LDR V0, [X19 + 0x34]
	0x01FA18F0 MOV X0, X20
	0x01FA18F4 BL 0x1FA1284
	0x01FA18F8 MOV W0, W31
	0x01FA18FC LDP X20, X19, [X31 + 0x10]
	0x01FA1900 LDR X30, [X31 + 0x8]
	0x01FA1904 LDR V8, [X31], #0x20
	0x01FA1908 RET
	0x01FA190C BL 0x1C16F20
	0x01FA1910 LDR X0, [X0 + 0x18]
	0x01FA1914 RET
	0x01FA1918 STP X30, X19, [X31 - 0x10]!
	0x01FA191C ADRP X0, 0x2152000
	0x01FA1920 LDR X0, [X0 + 0xB40]
	0x01FA1924 BL 0x1C16D08
	0x01FA1928 BL 0x1C16F10
	0x01FA192C MOV X1, X31
	0x01FA1930 MOV X19, X0
	0x01FA1934 BL 0x3380310
	0x01FA1938 ADRP X0, 0x217A000
	0x01FA193C LDR X0, [X0 + 0x2F0]
	0x01FA1940 BL 0x1C16D08
	0x01FA1944 MOV X1, X0
	0x01FA1948 MOV X0, X19
	0x01FA194C BL 0x1C16DEC
	0x01FA1950 LDR X0, [X0 + 0x18]
	0x01FA1954 RET
	0x01FA1958 RET
	0x01FA195C STP X30, X19, [X31 - 0x10]!
	0x01FA1960 LDR W8, [X0 + 0x10]
	0x01FA1964 MOV X19, X0
	0x01FA1968 MOV W0, W31
	0x01FA196C CMP W8, 0x1
	0x01FA1970 B.EQ 0x1FA19A4
	0x01FA1974 CBNZ W8, 0x1FA19CC
	0x01FA1978 LDR V0, [X19 + 0x20]
	0x01FA197C LDR X0, [X19 + 0x28]
	0x01FA1980 FMOV S1, -1
	0x01FA1984 MOVN W8, 0x0
	0x01FA1988 FCMP S0, S1
	0x01FA198C STR W8, [X19 + 0x10]
	0x01FA1990 B.NE 0x1FA19AC
	0x01FA1994 CBZ X0, 0x1FA19D4
	0x01FA1998 LDR V0, [X0 + 0x48]
	0x01FA199C STR S0, [X19 + 0x20]
	0x01FA19A0 B 0x1FA19B0
	0x01FA19A4 MOVN W8, 0x0
	0x01FA19A8 B 0x1FA19C8
	0x01FA19AC CBZ X0, 0x1FA19D4
	0x01FA19B0 FMOV S1, W31
	0x01FA19B4 FMOV S2, 1

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+80], X20
	004 Move [X31+88], X19
	005 Move X19, 0x2439000
	006 Move W8, [X19+1989]
	007 Move X20, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x217B000
	013 Move X0, [X0+320]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1989], W8
	017 Move X19, [X20+176]
	018 Compare X19, 0
	019 JumpIfEqual {56}
	020 Move X0, X20
	021 Call NetworkHand.get_LocalHardwareHand, X0
	022 Compare X0, 0
	023 JumpIfEqual {61}
	024 NotImplemented "Instruction LDUR not yet implemented."
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 Move X10, 0x217B000
	027 Move [X31+16], X8
	028 Move [X31], V0
	029 Move X8, [X19]
	030 Move X10, [X10+320]
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X10]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move X0, X19
	042 Move W2, W31
	043 Call 0x1C5D788
	044 NotImplemented "Instruction LDRSW not yet implemented."
	045 Add X8, X8, X9
	046 Add X0, X8, 312
	047 Move V0, [X31]
	048 Move X8, [X31+16]
	049 Move X9, [X0]
	050 Add X1, X31, 32
	051 Move [X31+2], V0
	052 Move [X31+48], X8
	053 Move X2, [X0+8]
	054 Move X0, X19
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X20, [X31+80]
	057 Move X19, [X31+88]
	058 Move X30, [X31+64]
	059 Add X31, X31, 96
	060 Return 
	061 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01FA1A88 MOVZ W8, 0x1
	0x01FA1A8C MOVZ W0, 0x1

ISIL:
	001 Move X1, X31
	002 Call NetworkBehaviour..ctor, X0
	003 Return 

