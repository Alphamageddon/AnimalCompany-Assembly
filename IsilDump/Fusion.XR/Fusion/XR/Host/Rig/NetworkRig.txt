Type: Fusion.XR.Host.Rig.NetworkRig

Method: System.Void Awake()

Disassembly:
	0x01FA1B24 CMP W8, 0x1
	0x01FA1B28 B.EQ 0x1FA1B88
	0x01FA1B2C CBNZ W8, 0x1FA1B90
	0x01FA1B30 LDR V8, [X19 + 0x20]
	0x01FA1B34 LDR X8, [X19 + 0x28]
	0x01FA1B38 FMOV S0, -1
	0x01FA1B3C MOVN W9, 0x0
	0x01FA1B40 FCMP S8, S0
	0x01FA1B44 STR W9, [X19 + 0x10]
	0x01FA1B48 B.NE 0x1FA1B58
	0x01FA1B4C CBZ X8, 0x1FA1BA0
	0x01FA1B50 LDR V8, [X8 + 0x4C]
	0x01FA1B54 STR S8, [X19 + 0x20]
	0x01FA1B58 ADRP X8, 0x2155000
	0x01FA1B5C LDR X8, [X8 + 0xC30]
	0x01FA1B60 LDR X0, [X8]
	0x01FA1B64 BL 0x1C16F10
	0x01FA1B68 MOV V0.16B, V8.16B
	0x01FA1B6C MOV X1, X31
	0x01FA1B70 MOV X20, X0
	0x01FA1B74 BL 0x3C3A634
	0x01FA1B78 MOVZ W8, 0x1
	0x01FA1B7C MOVZ W0, 0x1
	0x01FA1B80 STR X20, [X19 + 0x18]
	0x01FA1B84 B 0x1FA1B8C
	0x01FA1B88 MOVN W8, 0x0
	0x01FA1B8C STR W8, [X19 + 0x10]
	0x01FA1B90 LDP X20, X19, [X31 + 0x10]
	0x01FA1B94 LDR X30, [X31 + 0x8]
	0x01FA1B98 LDR V8, [X31], #0x20
	0x01FA1B9C RET
	0x01FA1BA0 BL 0x1C16F20
	0x01FA1BA4 LDR X0, [X0 + 0x18]
	0x01FA1BA8 RET
	0x01FA1BAC STP X30, X19, [X31 - 0x10]!
	0x01FA1BB0 ADRP X0, 0x2152000
	0x01FA1BB4 LDR X0, [X0 + 0xB40]
	0x01FA1BB8 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2439000
	006 Move X21, 0x217B000
	007 Move W8, [X20+1991]
	008 Move X21, [X21+264]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x217B000
	015 Move X0, [X0+688]
	016 Call 0x1C17CF4
	017 Move X0, 0x217B000
	018 Move X0, [X0+264]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1991], W8
	022 Move X1, [X21]
	023 Move X0, X19
	024 Call 0x21A4894, X0
	025 Move X8, [X19+136]
	026 Move [X19+176], X0
	027 Compare X8, 0
	028 JumpIfEqual {47}
	029 Move X20, 0x217B000
	030 Move X20, [X20+688]
	031 Move X0, X8
	032 Move X1, [X20]
	033 Call 0x21A4894, X0
	034 Move X8, [X19+144]
	035 Move [X19+160], X0
	036 Compare X8, 0
	037 JumpIfEqual {47}
	038 Move X1, [X20]
	039 Move X0, X8
	040 Call 0x21A4894, X0
	041 Move [X19+168], X0
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return 
	047 Call 0x1C17F20

Method: System.Boolean get_IsLocalNetworkRig()

Disassembly:
	0x01FA16BC B.NE 0x1FA16CC
	0x01FA16C0 CBZ X0, 0x1FA1760
	0x01FA16C4 LDR V0, [X0 + 0x48]
	0x01FA16C8 STR S0, [X19 + 0x20]
	0x01FA16CC LDR V2, [X19 + 0x30]
	0x01FA16D0 FCMP S2, S1
	0x01FA16D4 B.NE 0x1FA16E4

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+64]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call NetworkObject.get_HasInputAuthority, X0
	008 Return X0
	009 Call 0x1C17F20

Method: System.Void Spawned()

Disassembly:
	0x01FA1BBC BL 0x1C16F10
	0x01FA1BC0 MOV X1, X31
	0x01FA1BC4 MOV X19, X0
	0x01FA1BC8 BL 0x3380310
	0x01FA1BCC ADRP X0, 0x217A000
	0x01FA1BD0 LDR X0, [X0 + 0x308]
	0x01FA1BD4 BL 0x1C16D08
	0x01FA1BD8 MOV X1, X0
	0x01FA1BDC MOV X0, X19
	0x01FA1BE0 BL 0x1C16DEC
	0x01FA1BE4 LDR X0, [X0 + 0x18]
	0x01FA1BE8 RET
	0x01FA1BEC STP X30, X21, [X31 - 0x20]!
	0x01FA1BF0 STP X20, X19, [X31 + 0x10]
	0x01FA1BF4 ADRP X20, 0x2438000
	0x01FA1BF8 ADRP X21, 0x2152000
	0x01FA1BFC LDRB W8, [X20 + 0x7D3]
	0x01FA1C00 LDR X21, [X21 + 0x598]
	0x01FA1C04 MOV X19, X0
	0x01FA1C08 TBNZ X8, 0x0, 0x1FA1C38
	0x01FA1C0C ADRP X0, 0x217A000
	0x01FA1C10 LDR X0, [X0 + 0x310]
	0x01FA1C14 BL 0x1C16CF4
	0x01FA1C18 ADRP X0, 0x217A000
	0x01FA1C1C LDR X0, [X0 + 0x318]
	0x01FA1C20 BL 0x1C16CF4
	0x01FA1C24 ADRP X0, 0x2152000
	0x01FA1C28 LDR X0, [X0 + 0x598]
	0x01FA1C2C BL 0x1C16CF4
	0x01FA1C30 MOVZ W8, 0x1
	0x01FA1C34 STRB W8, [X20 + 0x7D3]
	0x01FA1C38 LDR X0, [X21]
	0x01FA1C3C LDR X20, [X19 + 0x58]
	0x01FA1C40 LDR W8, [X0 + 0xE0]
	0x01FA1C44 CBNZ W8, 0x1FA1C4C
	0x01FA1C48 BL 0x1C16DFC
	0x01FA1C4C MOV X0, X20
	0x01FA1C50 MOV X1, X31
	0x01FA1C54 MOV X2, X31
	0x01FA1C58 BL 0x3C3883C
	0x01FA1C5C TBZ X0, 0x0, 0x1FA1CA8
	0x01FA1C60 MOV X0, X19
	0x01FA1C64 MOV X1, X31
	0x01FA1C68 BL 0x3C32ECC
	0x01FA1C6C CBZ X0, 0x1FA1D7C
	0x01FA1C70 ADRP X8, 0x217A000
	0x01FA1C74 LDR X8, [X8 + 0x318]
	0x01FA1C78 LDR X1, [X8]
	0x01FA1C7C BL 0x21E51FC
	0x01FA1C80 STR X0, [X19 + 0x58]
	0x01FA1C84 CBZ X0, 0x1FA1D7C
	0x01FA1C88 LDR X1, [X19 + 0x68]
	0x01FA1C8C MOV X2, X31
	0x01FA1C90 BL 0x3C13458
	0x01FA1C94 LDR X0, [X19 + 0x58]
	0x01FA1C98 CBZ X0, 0x1FA1D7C
	0x01FA1C9C MOVZ W1, 0x4
	0x01FA1CA0 MOV X2, X31
	0x01FA1CA4 BL 0x3C114BC
	0x01FA1CA8 LDR X0, [X19 + 0x58]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2439000
	005 Move W8, [X20+1992]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {25}
	011 Move X0, 0x2153000
	012 Move X0, [X0+2600]
	013 Call 0x1C17CF4
	014 Move X0, 0x217B000
	015 Move X0, [X0+64]
	016 Call 0x1C17CF4
	017 Move X0, 0x2153000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x217B000
	021 Move X0, [X0+696]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1992], W8
	025 Move X0, X19
	026 Move X1, X31
	027 Call NetworkBehaviour.Spawned, X0
	028 Move X0, [X19+64]
	029 Compare X0, 0
	030 JumpIfEqual {76}
	031 Move X1, X31
	032 Call NetworkObject.get_HasInputAuthority, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {72}
	037 Move X8, 0x2153000
	038 Move X8, [X8+1432]
	039 Move X0, [X8]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X8, 0x217B000
	045 Move X8, [X8+64]
	046 Move X0, [X8]
	047 Call 0x222E02C
	048 Move X1, X31
	049 Move X2, X31
	050 Move [X19+128], X0
	051 Call Object.op_Equality, X0, X1
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {72}
	056 Move X8, 0x2153000
	057 Move X8, [X8+2600]
	058 Move X0, [X8]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X8, 0x217B000
	064 Move X8, [X8+696]
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X1, X31
	068 Move X0, [X8]
	069 Move X30, [X31+32]
	070 Call Debug.LogError, X0
	071 Return 
	072 Move X20, [X31+16]
	073 Move X19, [X31+24]
	074 Move X30, [X31+32]
	075 Return 
	076 Call 0x1C17F20

Method: System.Void FixedUpdateNetwork()

Disassembly:
	0x01FA1CAC CBZ X0, 0x1FA1D7C
	0x01FA1CB0 LDR V0, [X19 + 0x60]
	0x01FA1CB4 MOV X1, X31
	0x01FA1CB8 BL 0x3C113D8
	0x01FA1CBC LDR X0, [X19 + 0x58]
	0x01FA1CC0 CBZ X0, 0x1FA1D7C
	0x01FA1CC4 LDR V0, [X19 + 0x60]
	0x01FA1CC8 MOV X1, X31
	0x01FA1CCC BL 0x3C11424
	0x01FA1CD0 LDR X0, [X19 + 0x58]
	0x01FA1CD4 CBZ X0, 0x1FA1D7C
	0x01FA1CD8 MOVZ W1, 0x1
	0x01FA1CDC MOV X2, X31
	0x01FA1CE0 BL 0x3C1153C
	0x01FA1CE4 LDR X0, [X19 + 0x58]
	0x01FA1CE8 CBZ X0, 0x1FA1D7C
	0x01FA1CEC MOV W1, W31
	0x01FA1CF0 MOV X2, X31
	0x01FA1CF4 BL 0x3C13034
	0x01FA1CF8 LDR X0, [X21]
	0x01FA1CFC LDR X20, [X19 + 0x48]
	0x01FA1D00 LDR W8, [X0 + 0xE0]
	0x01FA1D04 CBNZ W8, 0x1FA1D0C
	0x01FA1D08 BL 0x1C16DFC
	0x01FA1D0C MOV X0, X20
	0x01FA1D10 MOV X1, X31
	0x01FA1D14 MOV X2, X31
	0x01FA1D18 BL 0x3C3883C
	0x01FA1D1C TBZ X0, 0x0, 0x1FA1D30
	0x01FA1D20 MOV X0, X19
	0x01FA1D24 MOV X1, X31
	0x01FA1D28 BL 0x3C32E90
	0x01FA1D2C STR X0, [X19 + 0x48]
	0x01FA1D30 LDR X0, [X21]
	0x01FA1D34 LDR X20, [X19 + 0x20]
	0x01FA1D38 LDR W8, [X0 + 0xE0]
	0x01FA1D3C CBNZ W8, 0x1FA1D44
	0x01FA1D40 BL 0x1C16DFC
	0x01FA1D44 MOV X0, X20
	0x01FA1D48 MOV X1, X31
	0x01FA1D4C MOV X2, X31
	0x01FA1D50 BL 0x3C3883C
	0x01FA1D54 TBZ X0, 0x0, 0x1FA1D70
	0x01FA1D58 ADRP X8, 0x217A000
	0x01FA1D5C LDR X8, [X8 + 0x310]
	0x01FA1D60 MOV X0, X19
	0x01FA1D64 LDR X1, [X8]
	0x01FA1D68 BL 0x21A3F50
	0x01FA1D6C STR X0, [X19 + 0x20]
	0x01FA1D70 LDP X20, X19, [X31 + 0x10]
	0x01FA1D74 LDP X30, X21, [X31], #0x20
	0x01FA1D78 RET
	0x01FA1D7C BL 0x1C16F20
	0x01FA1D80 SUB X31, X31, 0x70
	0x01FA1D84 STR X30, [X31 + 0x40]
	0x01FA1D88 STP X22, X21, [X31 + 0x50]
	0x01FA1D8C STP X20, X19, [X31 + 0x60]
	0x01FA1D90 ADRP X20, 0x2438000
	0x01FA1D94 LDRB W8, [X20 + 0x7D4]
	0x01FA1D98 MOV X19, X0
	0x01FA1D9C TBNZ X8, 0x0, 0x1FA1DF0
	0x01FA1DA0 ADRP X0, 0x2153000
	0x01FA1DA4 LDR X0, [X0 + 0x1B8]
	0x01FA1DA8 BL 0x1C16CF4
	0x01FA1DAC ADRP X0, 0x2153000
	0x01FA1DB0 LDR X0, [X0 + 0x1C0]
	0x01FA1DB4 BL 0x1C16CF4
	0x01FA1DB8 ADRP X0, 0x2153000
	0x01FA1DBC LDR X0, [X0 + 0x1D0]
	0x01FA1DC0 BL 0x1C16CF4
	0x01FA1DC4 ADRP X0, 0x217A000
	0x01FA1DC8 LDR X0, [X0 + 0x320]
	0x01FA1DCC BL 0x1C16CF4
	0x01FA1DD0 ADRP X0, 0x217A000
	0x01FA1DD4 LDR X0, [X0 + 0x328]
	0x01FA1DD8 BL 0x1C16CF4
	0x01FA1DDC ADRP X0, 0x217A000
	0x01FA1DE0 LDR X0, [X0 + 0x330]
	0x01FA1DE4 BL 0x1C16CF4
	0x01FA1DE8 MOVZ W8, 0x1
	0x01FA1DEC STRB W8, [X20 + 0x7D4]
	0x01FA1DF0 LDR X8, [X19 + 0x40]
	0x01FA1DF4 LDR V0, [X19 + 0x3]
	0x01FA1DF8 STR X8, [X31 + 0x30]
	0x01FA1DFC STR V0, [X31 + 0x2]
	0x01FA1E00 LDR X8, [X19 + 0x20]
	0x01FA1E04 CBZ X8, 0x1FA1F7C
	0x01FA1E08 ADRP X9, 0x2153000
	0x01FA1E0C LDR X9, [X9 + 0x1D0]
	0x01FA1E10 ADRP X20, 0x2153000
	0x01FA1E14 LDR W19, [X8 + 0x20]
	0x01FA1E18 LDR X0, [X9]
	0x01FA1E1C LDR X20, [X20 + 0x1C0]
	0x01FA1E20 BL 0x1C16F10
	0x01FA1E24 LDR X1, [X20]
	0x01FA1E28 MOV X20, X0
	0x01FA1E2C BL 0x301B7C4
	0x01FA1E30 CBZ X20, 0x1FA1F7C
	0x01FA1E34 ADRP X8, 0x217A000
	0x01FA1E38 ADRP X21, 0x2153000
	0x01FA1E3C LDR X8, [X8 + 0x330]
	0x01FA1E40 LDR X21, [X21 + 0x1B8]
	0x01FA1E44 LDR W11, [X20 + 0x1C]
	0x01FA1E48 LDR X10, [X20 + 0x10]
	0x01FA1E4C LDR X1, [X8]
	0x01FA1E50 LDR X9, [X21]
	0x01FA1E54 ADD W8, W11, 0x1
	0x01FA1E58 STR W8, [X20 + 0x1C]
	0x01FA1E5C CBZ X10, 0x1FA1F7C
	0x01FA1E60 LDRSW X11, [X20 + 0x18]
	0x01FA1E64 LDR W12, [X10 + 0x18]
	0x01FA1E68 ADRP X22, 0x217A000
	0x01FA1E6C LDR X22, [X22 + 0x328]
	0x01FA1E70 CMP W11, W12
	0x01FA1E74 B.CS 0x1FA1E8C
	0x01FA1E78 ADD W9, W11, 0x1
	0x01FA1E7C ADD X10, X10, X11, 0x3, LSL
	0x01FA1E80 STR W9, [X20 + 0x18]
	0x01FA1E84 STR X1, [X10 + 0x20]
	0x01FA1E88 B 0x1FA1EA4
	0x01FA1E8C LDR X8, [X9 + 0x20]
	0x01FA1E90 MOV X0, X20
	0x01FA1E94 LDR X8, [X8 + 0xC0]
	0x01FA1E98 LDR X2, [X8 + 0x70]
	0x01FA1E9C BL 0x301BF90
	0x01FA1EA0 LDP W9, W8, [X20 + 0x18]
	0x01FA1EA4 LDR X1, [X22]
	0x01FA1EA8 LDR X11, [X20 + 0x10]
	0x01FA1EAC LDR X10, [X21]
	0x01FA1EB0 ADD W8, W8, 0x1
	0x01FA1EB4 STR W8, [X20 + 0x1C]
	0x01FA1EB8 CBZ X11, 0x1FA1F7C
	0x01FA1EBC LDR W12, [X11 + 0x18]
	0x01FA1EC0 ADRP X22, 0x217A000
	0x01FA1EC4 LDR X22, [X22 + 0x320]
	0x01FA1EC8 CMP W9, W12
	0x01FA1ECC B.CS 0x1FA1EE4
	0x01FA1ED0 ADD W10, W9, 0x1
	0x01FA1ED4 ADD X9, X11, W9, 0x3, SXTW
	0x01FA1ED8 STR W10, [X20 + 0x18]
	0x01FA1EDC STR X1, [X9 + 0x20]
	0x01FA1EE0 B 0x1FA1EFC
	0x01FA1EE4 LDR X8, [X10 + 0x20]
	0x01FA1EE8 MOV X0, X20
	0x01FA1EEC LDR X8, [X8 + 0xC0]
	0x01FA1EF0 LDR X2, [X8 + 0x70]
	0x01FA1EF4 BL 0x301BF90
	0x01FA1EF8 LDP W10, W8, [X20 + 0x18]
	0x01FA1EFC LDR X1, [X22]
	0x01FA1F00 LDR X9, [X20 + 0x10]
	0x01FA1F04 LDR X11, [X21]
	0x01FA1F08 ADD W8, W8, 0x1
	0x01FA1F0C STR W8, [X20 + 0x1C]
	0x01FA1F10 CBZ X9, 0x1FA1F7C
	0x01FA1F14 LDR W8, [X9 + 0x18]
	0x01FA1F18 CMP W10, W8
	0x01FA1F1C B.CS 0x1FA1F34
	0x01FA1F20 ADD W8, W10, 0x1
	0x01FA1F24 ADD X9, X9, W10, 0x3, SXTW
	0x01FA1F28 STR W8, [X20 + 0x18]
	0x01FA1F2C STR X1, [X9 + 0x20]
	0x01FA1F30 B 0x1FA1F48
	0x01FA1F34 LDR X8, [X11 + 0x20]
	0x01FA1F38 MOV X0, X20
	0x01FA1F3C LDR X8, [X8 + 0xC0]
	0x01FA1F40 LDR X2, [X8 + 0x70]
	0x01FA1F44 BL 0x301BF90
	0x01FA1F48 LDR V0, [X31 + 0x2]
	0x01FA1F4C LDR X8, [X31 + 0x30]
	0x01FA1F50 ADD X0, X31, 0x0
	0x01FA1F54 MOV W1, W19
	0x01FA1F58 MOV X2, X20
	0x01FA1F5C STR V0, [X31]
	0x01FA1F60 STR X8, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Subtract X31, X31, 1920
	007 Move X21, 0x2439000
	008 Move X20, 0x217B000
	009 Move W8, [X21+1993]
	010 Move X20, [X20+704]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x217B000
	017 Move X0, [X0+704]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1993], W8
	021 Add X0, X31, 1584
	022 Move W2, 336
	023 Move W1, W31
	024 Call 0x3EB2B10
	025 Move X0, X19
	026 Move X1, X31
	027 Call NetworkBehaviour.FixedUpdateNetwork, X0
	028 Move X2, [X20]
	029 Add X1, X31, 1584
	030 Move X0, X19
	031 Call NetworkBehaviour.GetInput, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {195}
	036 Move X0, X19
	037 Move X1, X31
	038 Call Component.get_transform, X0
	039 Compare X0, 0
	040 JumpIfEqual {202}
	041 Move V2, [X31+1592]
	042 Move V1, [X31+1588]
	043 Move V0, [X31+1584]
	044 Move X1, X31
	045 Call Transform.set_position, X0, X1
	046 Move X0, X19
	047 Move X1, X31
	048 Call Component.get_transform, X0
	049 Compare X0, 0
	050 JumpIfEqual {202}
	051 Move V3, [X31+1608]
	052 Move V2, [X31+1604]
	053 Move V1, [X31+1600]
	054 Move V0, [X31+1596]
	055 Move X1, X31
	056 Call Transform.set_rotation, X0, X1
	057 Move X0, [X19+136]
	058 Compare X0, 0
	059 JumpIfEqual {202}
	060 Move X1, X31
	061 Call Component.get_transform, X0
	062 Compare X0, 0
	063 JumpIfEqual {202}
	064 Move V2, [X31+1620]
	065 Move V1, [X31+1616]
	066 Move V0, [X31+1612]
	067 Move X1, X31
	068 Call Transform.set_position, X0, X1
	069 Move X0, [X19+136]
	070 Compare X0, 0
	071 JumpIfEqual {202}
	072 Move X1, X31
	073 Call Component.get_transform, X0
	074 Compare X0, 0
	075 JumpIfEqual {202}
	076 Move V3, [X31+1636]
	077 Move V2, [X31+1632]
	078 Move V1, [X31+1628]
	079 Move V0, [X31+1624]
	080 Move X1, X31
	081 Call Transform.set_rotation, X0, X1
	082 Move X0, [X19+144]
	083 Compare X0, 0
	084 JumpIfEqual {202}
	085 Move X1, X31
	086 Call Component.get_transform, X0
	087 Compare X0, 0
	088 JumpIfEqual {202}
	089 Move V2, [X31+1648]
	090 Move V1, [X31+1644]
	091 Move V0, [X31+1640]
	092 Move X1, X31
	093 Call Transform.set_position, X0, X1
	094 Move X0, [X19+144]
	095 Compare X0, 0
	096 JumpIfEqual {202}
	097 Move X1, X31
	098 Call Component.get_transform, X0
	099 Compare X0, 0
	100 JumpIfEqual {202}
	101 Move V3, [X31+1664]
	102 Move V2, [X31+1660]
	103 Move V1, [X31+1656]
	104 Move V0, [X31+1652]
	105 Move X1, X31
	106 Call Transform.set_rotation, X0, X1
	107 Move X0, [X19+152]
	108 Compare X0, 0
	109 JumpIfEqual {202}
	110 Move X1, X31
	111 Call Component.get_transform, X0
	112 Compare X0, 0
	113 JumpIfEqual {202}
	114 Move V2, [X31+1676]
	115 Move V1, [X31+1672]
	116 Move V0, [X31+1668]
	117 Move X1, X31
	118 Call Transform.set_position, X0, X1
	119 Move X0, [X19+152]
	120 Compare X0, 0
	121 JumpIfEqual {202}
	122 Move X1, X31
	123 Call Component.get_transform, X0
	124 Compare X0, 0
	125 JumpIfEqual {202}
	126 Move V3, [X31+1692]
	127 Move V2, [X31+1688]
	128 Move V1, [X31+1684]
	129 Move V0, [X31+1680]
	130 Move X1, X31
	131 Call Transform.set_rotation, X0, X1
	132 Move X20, [X19+136]
	133 Add X0, X31, 1248
	134 Add X1, X31, 1584
	135 Move W2, 336
	136 Call 0x3EB2AC0
	137 Move V0, [X31+85]
	138 Move X8, [X31+1376]
	139 Move [X31+76], V0
	140 Move [X31+1232], X8
	141 Compare X20, 0
	142 JumpIfEqual {202}
	143 Move X8, [X31+1232]
	144 Move V0, [X31+76]
	145 Add X0, X31, 880
	146 Add X1, X31, 1584
	147 Move [X20+152], X8
	148 Move [X20+136], V0
	149 Move X20, [X19+144]
	150 Move W2, 336
	151 Call 0x3EB2AC0
	152 Add X8, X31, 761
	153 NotImplemented "Instruction LDUR not yet implemented."
	154 Move X8, [X31+1032]
	155 Move [X31+53], V0
	156 Move [X31+864], X8
	157 Compare X20, 0
	158 JumpIfEqual {202}
	159 Move X8, [X31+864]
	160 Move V0, [X31+53]
	161 Add X0, X31, 512
	162 Add X1, X31, 1584
	163 Move [X20+152], X8
	164 Move [X20+136], V0
	165 Move X20, [X19+160]
	166 Move W2, 336
	167 Add X21, X31, 512
	168 Call 0x3EB2AC0
	169 Add X1, X21, 160
	170 Add X0, X31, 424
	171 Move W2, 88
	172 Call 0x3EB2AC0
	173 Compare X20, 0
	174 JumpIfEqual {202}
	175 Add X0, X20, 128
	176 Add X1, X31, 424
	177 Move W2, 88
	178 Call 0x3EB2AC0
	179 Move X19, [X19+168]
	180 Add X0, X31, 88
	181 Add X1, X31, 1584
	182 Move W2, 336
	183 Add X20, X31, 88
	184 Call 0x3EB2AC0
	185 Add X1, X20, 248
	186 Add X0, X31, 0
	187 Move W2, 88
	188 Call 0x3EB2AC0
	189 Compare X19, 0
	190 JumpIfEqual {202}
	191 Add X0, X19, 128
	192 Add X1, X31, 0
	193 Move W2, 88
	194 Call 0x3EB2AC0
	195 Add X31, X31, 1920
	196 Move X20, [X31+32]
	197 Move X19, [X31+40]
	198 Move X30, [X31+16]
	199 Move X21, [X31+24]
	200 Move X29, [X31+48]
	201 Return 
	202 Call 0x1C17F20

Method: System.Void Render()

Disassembly:
	0x01FA1F64 BL 0x1F9BA38
	0x01FA1F68 LDP X20, X19, [X31 + 0x60]
	0x01FA1F6C LDP X22, X21, [X31 + 0x50]
	0x01FA1F70 LDR X30, [X31 + 0x40]
	0x01FA1F74 ADD X31, X31, 0x70
	0x01FA1F78 RET
	0x01FA1F7C BL 0x1C16F20
	0x01FA1F80 SUB X31, X31, 0x80
	0x01FA1F84 STR D14, [X31 + 0x20]
	0x01FA1F88 STP D13, D12, [X31 + 0x28]
	0x01FA1F8C STP D11, D10, [X31 + 0x38]
	0x01FA1F90 STP D9, D8, [X31 + 0x48]
	0x01FA1F94 STR X30, [X31 + 0x58]
	0x01FA1F98 STP X22, X21, [X31 + 0x60]
	0x01FA1F9C STP X20, X19, [X31 + 0x70]
	0x01FA1FA0 ADRP X21, 0x2438000
	0x01FA1FA4 LDRB W8, [X21 + 0x7D5]
	0x01FA1FA8 MOV V11.16B, V5.16B
	0x01FA1FAC MOV V12.16B, V4.16B
	0x01FA1FB0 MOV V13.16B, V3.16B
	0x01FA1FB4 MOV V8.16B, V2.16B
	0x01FA1FB8 MOV V9.16B, V1.16B
	0x01FA1FBC MOV V10.16B, V0.16B
	0x01FA1FC0 MOV X19, X1
	0x01FA1FC4 MOV X20, X0
	0x01FA1FC8 TBNZ X8, 0x0, 0x1FA1FE0
	0x01FA1FCC ADRP X0, 0x2152000
	0x01FA1FD0 LDR X0, [X0 + 0x5F8]
	0x01FA1FD4 BL 0x1C16CF4
	0x01FA1FD8 MOVZ W8, 0x1
	0x01FA1FDC STRB W8, [X21 + 0x7D5]
	0x01FA1FE0 ADRP X21, 0x2437000
	0x01FA1FE4 LDRB W8, [X21 + 0x785]
	0x01FA1FE8 CBNZ W8, 0x1FA2000
	0x01FA1FEC ADRP X0, 0x2152000
	0x01FA1FF0 LDR X0, [X0 + 0x5A8]
	0x01FA1FF4 BL 0x1C16CF4
	0x01FA1FF8 MOVZ W8, 0x1
	0x01FA1FFC STRB W8, [X21 + 0x785]
	0x01FA2000 ADRP X8, 0x2151000
	0x01FA2004 LDR X8, [X8 + 0x5A8]
	0x01FA2008 LDR X0, [X8]
	0x01FA200C LDR W8, [X0 + 0xE0]
	0x01FA2010 CBNZ W8, 0x1FA2018
	0x01FA2014 BL 0x1C16DFC
	0x01FA2018 FMUL S0, S13, S13
	0x01FA201C FMUL S1, S12, S12
	0x01FA2020 ADRP X8, 0xFFFFFFFFFEB48000
	0x01FA2024 FADD S0, S0, S1
	0x01FA2028 LDR V1, [X8 + 0x17C]
	0x01FA202C ADRP X21, 0x2151000
	0x01FA2030 FMUL S2, S11, S11
	0x01FA2034 LDR X21, [X21 + 0x5F8]
	0x01FA2038 FADD S0, S2, S0
	0x01FA203C FSQRT S0, S0
	0x01FA2040 FCMP S0, S1
	0x01FA2044 B.LE 0x1FA2058
	0x01FA2048 FDIV S13, S13, S0
	0x01FA204C FDIV S12, S12, S0
	0x01FA2050 FDIV S14, S11, S0
	0x01FA2054 B 0x1FA2090
	0x01FA2058 ADRP X22, 0x2436000
	0x01FA205C LDRB W8, [X22 + 0x783]
	0x01FA2060 CBNZ W8, 0x1FA2078
	0x01FA2064 ADRP X0, 0x2151000
	0x01FA2068 LDR X0, [X0 + 0x5A0]
	0x01FA206C BL 0x1C16CF4
	0x01FA2070 MOVZ W8, 0x1
	0x01FA2074 STRB W8, [X22 + 0x783]
	0x01FA2078 ADRP X8, 0x2151000
	0x01FA207C LDR X8, [X8 + 0x5A0]
	0x01FA2080 LDR X8, [X8]
	0x01FA2084 LDR X8, [X8 + 0xB8]
	0x01FA2088 LDP S13, S12, [X8]
	0x01FA208C LDR V14, [X8 + 0x8]
	0x01FA2090 LDR W0, [X20 + 0x50]
	0x01FA2094 LDR V11, [X20 + 0x54]
	0x01FA2098 MOV X1, X31
	0x01FA209C BL 0x3C35CB8
	0x01FA20A0 LDR X8, [X21]
	0x01FA20A4 MOV W20, W0
	0x01FA20A8 LDR W9, [X8 + 0xE0]
	0x01FA20AC CBNZ W9, 0x1FA20B8
	0x01FA20B0 MOV X0, X8
	0x01FA20B4 BL 0x1C16DFC
	0x01FA20B8 ADD X0, X31, 0x8
	0x01FA20BC MOV X1, X19
	0x01FA20C0 MOV V0.16B, V11.16B
	0x01FA20C4 MOV W2, W20
	0x01FA20C8 MOV X3, X31
	0x01FA20CC STP S10, S9, [X31 + 0x8]
	0x01FA20D0 STP S8, S13, [X31 + 0x10]
	0x01FA20D4 STP S12, S14, [X31 + 0x18]
	0x01FA20D8 BL 0x3C8B6EC
	0x01FA20DC LDP X20, X19, [X31 + 0x70]
	0x01FA20E0 LDP X22, X21, [X31 + 0x60]
	0x01FA20E4 LDR X30, [X31 + 0x58]
	0x01FA20E8 LDP D9, D8, [X31 + 0x48]
	0x01FA20EC LDP D11, D10, [X31 + 0x38]
	0x01FA20F0 LDP D13, D12, [X31 + 0x28]
	0x01FA20F4 LDR V14, [X31 + 0x20]
	0x01FA20F8 AND W0, W0, 0x1
	0x01FA20FC ADD X31, X31, 0x80
	0x01FA2100 RET
	0x01FA2104 STR D10, [X31 - 0x30]!
	0x01FA2108 STP D9, D8, [X31 + 0x8]
	0x01FA210C STR X30, [X31 + 0x18]
	0x01FA2110 STP X20, X19, [X31 + 0x20]
	0x01FA2114 MOV X19, X0
	0x01FA2118 LDR X0, [X0 + 0x48]
	0x01FA211C CBZ X0, 0x1FA2168
	0x01FA2120 LDP S9, S8, [X19 + 0xA8]
	0x01FA2124 LDR V10, [X19 + 0xA4]
	0x01FA2128 MOV X20, X1
	0x01FA212C MOV X1, X31
	0x01FA2130 BL 0x3C3FA04
	0x01FA2134 MOV V4.16B, V1.16B
	0x01FA2138 MOV V5.16B, V2.16B
	0x01FA213C MOV X0, X19
	0x01FA2140 MOV X1, X20
	0x01FA2144 MOV V1.16B, V9.16B
	0x01FA2148 MOV V2.16B, V8.16B
	0x01FA214C LDP X20, X19, [X31 + 0x20]
	0x01FA2150 LDR X30, [X31 + 0x18]
	0x01FA2154 LDP D9, D8, [X31 + 0x8]
	0x01FA2158 MOV V3.16B, V0.16B
	0x01FA215C MOV V0.16B, V10.16B
	0x01FA2160 LDR V10, [X31], #0x30
	0x01FA2164 B 0x1FA1F80
	0x01FA2168 BL 0x1C16F20
	0x01FA216C SUB X31, X31, 0x60
	0x01FA2170 STP D9, D8, [X31 + 0x30]
	0x01FA2174 STR X30, [X31 + 0x40]
	0x01FA2178 STP X20, X19, [X31 + 0x50]
	0x01FA217C ADRP X20, 0x2437000
	0x01FA2180 LDRB W8, [X20 + 0x7D6]
	0x01FA2184 MOV X19, X0
	0x01FA2188 TBNZ X8, 0x0, 0x1FA21AC
	0x01FA218C ADRP X0, 0x2157000
	0x01FA2190 LDR X0, [X0 + 0x8C0]
	0x01FA2194 BL 0x1C16CF4
	0x01FA2198 ADRP X0, 0x2179000
	0x01FA219C LDR X0, [X0 + 0x338]
	0x01FA21A0 BL 0x1C16CF4
	0x01FA21A4 MOVZ W8, 0x1
	0x01FA21A8 STRB W8, [X20 + 0x7D6]
	0x01FA21AC MOVI V0.2D, 0x0
	0x01FA21B0 STUR V0, [X31 + 0x1C]
	0x01FA21B4 STP V0, V0, [X31]
	0x01FA21B8 LDRB W8, [X19 + 0x28]
	0x01FA21BC CBZ W8, 0x1FA2204
	0x01FA21C0 ADD X20, X19, 0x30
	0x01FA21C4 MOV X0, X20
	0x01FA21C8 MOV X1, X31
	0x01FA21CC BL 0x3745120
	0x01FA21D0 CBZ X0, 0x1FA2204

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call SimulationBehaviour.Render, X0
	007 Move X0, [X19+64]
	008 Compare X0, 0
	009 JumpIfEqual {200}
	010 Move X1, X31
	011 Call NetworkObject.get_HasInputAuthority, X0
	012 Move TEMP, X0
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfNotEqual {196}
	016 Move X0, X19
	017 Move X1, X31
	018 Call Component.get_transform, X0
	019 Move X8, [X19+128]
	020 Compare X8, 0
	021 JumpIfEqual {200}
	022 Move X20, X0
	023 Move X0, X8
	024 Move X1, X31
	025 Call Component.get_transform, X0
	026 Compare X0, 0
	027 JumpIfEqual {200}
	028 Move X1, X31
	029 Call Transform.get_position, X0
	030 Compare X20, 0
	031 JumpIfEqual {200}
	032 Move X0, X20
	033 Move X1, X31
	034 Call Transform.set_position, X0, X1
	035 Move X0, X19
	036 Move X1, X31
	037 Call Component.get_transform, X0
	038 Move X8, [X19+128]
	039 Compare X8, 0
	040 JumpIfEqual {200}
	041 Move X20, X0
	042 Move X0, X8
	043 Move X1, X31
	044 Call Component.get_transform, X0
	045 Compare X0, 0
	046 JumpIfEqual {200}
	047 Move X1, X31
	048 Call Transform.get_rotation, X0
	049 Compare X20, 0
	050 JumpIfEqual {200}
	051 Move X0, X20
	052 Move X1, X31
	053 Call Transform.set_rotation, X0, X1
	054 Move X0, [X19+136]
	055 Compare X0, 0
	056 JumpIfEqual {200}
	057 Move X1, X31
	058 Call Component.get_transform, X0
	059 Move X8, [X19+128]
	060 Compare X8, 0
	061 JumpIfEqual {200}
	062 Move X20, X0
	063 Move X0, [X8+32]
	064 Compare X0, 0
	065 JumpIfEqual {200}
	066 Move X1, X31
	067 Call Component.get_transform, X0
	068 Compare X0, 0
	069 JumpIfEqual {200}
	070 Move X1, X31
	071 Call Transform.get_position, X0
	072 Compare X20, 0
	073 JumpIfEqual {200}
	074 Move X0, X20
	075 Move X1, X31
	076 Call Transform.set_position, X0, X1
	077 Move X0, [X19+136]
	078 Compare X0, 0
	079 JumpIfEqual {200}
	080 Move X1, X31
	081 Call Component.get_transform, X0
	082 Move X8, [X19+128]
	083 Compare X8, 0
	084 JumpIfEqual {200}
	085 Move X20, X0
	086 Move X0, [X8+32]
	087 Compare X0, 0
	088 JumpIfEqual {200}
	089 Move X1, X31
	090 Call Component.get_transform, X0
	091 Compare X0, 0
	092 JumpIfEqual {200}
	093 Move X1, X31
	094 Call Transform.get_rotation, X0
	095 Compare X20, 0
	096 JumpIfEqual {200}
	097 Move X0, X20
	098 Move X1, X31
	099 Call Transform.set_rotation, X0, X1
	100 Move X0, [X19+144]
	101 Compare X0, 0
	102 JumpIfEqual {200}
	103 Move X1, X31
	104 Call Component.get_transform, X0
	105 Move X8, [X19+128]
	106 Compare X8, 0
	107 JumpIfEqual {200}
	108 Move X20, X0
	109 Move X0, [X8+40]
	110 Compare X0, 0
	111 JumpIfEqual {200}
	112 Move X1, X31
	113 Call Component.get_transform, X0
	114 Compare X0, 0
	115 JumpIfEqual {200}
	116 Move X1, X31
	117 Call Transform.get_position, X0
	118 Compare X20, 0
	119 JumpIfEqual {200}
	120 Move X0, X20
	121 Move X1, X31
	122 Call Transform.set_position, X0, X1
	123 Move X0, [X19+144]
	124 Compare X0, 0
	125 JumpIfEqual {200}
	126 Move X1, X31
	127 Call Component.get_transform, X0
	128 Move X8, [X19+128]
	129 Compare X8, 0
	130 JumpIfEqual {200}
	131 Move X20, X0
	132 Move X0, [X8+40]
	133 Compare X0, 0
	134 JumpIfEqual {200}
	135 Move X1, X31
	136 Call Component.get_transform, X0
	137 Compare X0, 0
	138 JumpIfEqual {200}
	139 Move X1, X31
	140 Call Transform.get_rotation, X0
	141 Compare X20, 0
	142 JumpIfEqual {200}
	143 Move X0, X20
	144 Move X1, X31
	145 Call Transform.set_rotation, X0, X1
	146 Move X0, [X19+152]
	147 Compare X0, 0
	148 JumpIfEqual {200}
	149 Move X1, X31
	150 Call Component.get_transform, X0
	151 Move X8, [X19+128]
	152 Compare X8, 0
	153 JumpIfEqual {200}
	154 Move X20, X0
	155 Move X0, [X8+48]
	156 Compare X0, 0
	157 JumpIfEqual {200}
	158 Move X1, X31
	159 Call Component.get_transform, X0
	160 Compare X0, 0
	161 JumpIfEqual {200}
	162 Move X1, X31
	163 Call Transform.get_position, X0
	164 Compare X20, 0
	165 JumpIfEqual {200}
	166 Move X0, X20
	167 Move X1, X31
	168 Call Transform.set_position, X0, X1
	169 Move X0, [X19+152]
	170 Compare X0, 0
	171 JumpIfEqual {200}
	172 Move X1, X31
	173 Call Component.get_transform, X0
	174 Move X8, [X19+128]
	175 Compare X8, 0
	176 JumpIfEqual {200}
	177 Move X19, X0
	178 Move X0, [X8+48]
	179 Compare X0, 0
	180 JumpIfEqual {200}
	181 Move X1, X31
	182 Call Component.get_transform, X0
	183 Compare X0, 0
	184 JumpIfEqual {200}
	185 Move X1, X31
	186 Call Transform.get_rotation, X0
	187 Compare X19, 0
	188 JumpIfEqual {200}
	189 Move X0, X19
	190 Move X20, [X31+16]
	191 Move X19, [X31+24]
	192 Move X1, X31
	193 Move X30, [X31+32]
	194 Call Transform.set_rotation, X0, X1
	195 Return 
	196 Move X20, [X31+16]
	197 Move X19, [X31+24]
	198 Move X30, [X31+32]
	199 Return 
	200 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01FA21D4 MOV X0, X20
	0x01FA21D8 MOV X1, X31

ISIL:
	001 Move X1, X31
	002 Call NetworkBehaviour..ctor, X0
	003 Return 

