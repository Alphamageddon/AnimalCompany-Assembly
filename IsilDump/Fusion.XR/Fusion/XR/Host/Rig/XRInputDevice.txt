Type: Fusion.XR.Host.Rig.XRInputDevice

Method: UnityEngine.XR.InputDeviceCharacteristics get_DesiredCharacteristics()

Disassembly:
	0x01FA10F0 BL 0x3C32E90
	0x01FA10F4 LDR X8, [X19 + 0x80]

ISIL:
	001 Move W0, 32
	002 Return X0

Method: System.Void OnEnable()

Disassembly:
	0x01FA10F8 CBZ X8, 0x1FA11D0
	0x01FA10FC MOV X20, X0
	0x01FA1100 LDR X0, [X8 + 0x28]
	0x01FA1104 CBZ X0, 0x1FA11D0
	0x01FA1108 MOV X1, X31
	0x01FA110C BL 0x3C32E90
	0x01FA1110 CBZ X0, 0x1FA11D0
	0x01FA1114 MOV X1, X31
	0x01FA1118 BL 0x3C3DEB4
	0x01FA111C CBZ X20, 0x1FA11D0
	0x01FA1120 MOV X0, X20
	0x01FA1124 MOV X1, X31
	0x01FA1128 BL 0x3C3F7AC
	0x01FA112C LDR X0, [X19 + 0x98]
	0x01FA1130 CBZ X0, 0x1FA11D0
	0x01FA1134 MOV X1, X31
	0x01FA1138 BL 0x3C32E90
	0x01FA113C LDR X8, [X19 + 0x80]
	0x01FA1140 CBZ X8, 0x1FA11D0
	0x01FA1144 MOV X20, X0
	0x01FA1148 LDR X0, [X8 + 0x30]
	0x01FA114C CBZ X0, 0x1FA11D0
	0x01FA1150 MOV X1, X31
	0x01FA1154 BL 0x3C32E90
	0x01FA1158 CBZ X0, 0x1FA11D0
	0x01FA115C MOV X1, X31
	0x01FA1160 BL 0x3C3F58C
	0x01FA1164 CBZ X20, 0x1FA11D0
	0x01FA1168 MOV X0, X20
	0x01FA116C MOV X1, X31
	0x01FA1170 BL 0x3C3F62C
	0x01FA1174 LDR X0, [X19 + 0x98]
	0x01FA1178 CBZ X0, 0x1FA11D0
	0x01FA117C MOV X1, X31
	0x01FA1180 BL 0x3C32E90
	0x01FA1184 LDR X8, [X19 + 0x80]
	0x01FA1188 CBZ X8, 0x1FA11D0
	0x01FA118C MOV X19, X0
	0x01FA1190 LDR X0, [X8 + 0x30]
	0x01FA1194 CBZ X0, 0x1FA11D0
	0x01FA1198 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x2439000
	008 Move X23, 0x2154000
	009 Move X20, 0x217B000
	010 Move X21, 0x217B000
	011 Move W8, [X22+1978]
	012 Move X23, [X23+3696]
	013 Move X20, [X20+616]
	014 Move X21, [X21+624]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x2154000
	021 Move X0, [X0+3696]
	022 Call 0x1C17CF4
	023 Move X0, 0x217B000
	024 Move X0, [X0+624]
	025 Call 0x1C17CF4
	026 Move X0, 0x217B000
	027 Move X0, [X0+616]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+1978], W8
	031 Move X0, [X23]
	032 Call 0x1C17F10
	033 Move X2, [X20]
	034 Move X1, X19
	035 Move X3, X31
	036 Move X20, X0
	037 Call Action..ctor, X0, X1, X2
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X20
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X1, X31
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Call InputSystem.add_onAfterUpdate, X0
	052 Return 

Method: System.Void OnDisable()

Disassembly:
	0x01FA119C BL 0x3C32E90
	0x01FA11A0 CBZ X0, 0x1FA11D0
	0x01FA11A4 MOV X1, X31
	0x01FA11A8 BL 0x3C3DEB4
	0x01FA11AC CBZ X19, 0x1FA11D0
	0x01FA11B0 MOV X0, X19
	0x01FA11B4 LDP X20, X19, [X31 + 0x10]
	0x01FA11B8 MOV X1, X31
	0x01FA11BC LDR X30, [X31], #0x20
	0x01FA11C0 B 0x3C3F7AC
	0x01FA11C4 LDP X20, X19, [X31 + 0x10]
	0x01FA11C8 LDR X30, [X31], #0x20
	0x01FA11CC RET
	0x01FA11D0 BL 0x1C16F20
	0x01FA11D4 MOV X1, X31
	0x01FA11D8 B 0x1E74F04
	0x01FA11DC STP X30, X21, [X31 - 0x20]!
	0x01FA11E0 STP X20, X19, [X31 + 0x10]
	0x01FA11E4 ADRP X20, 0x2438000
	0x01FA11E8 ADRP X21, 0x217A000
	0x01FA11EC LDRB W8, [X20 + 0x7CA]
	0x01FA11F0 LDR X21, [X21 + 0x2C8]
	0x01FA11F4 MOV X19, X0
	0x01FA11F8 TBNZ X8, 0x0, 0x1FA1210
	0x01FA11FC ADRP X0, 0x217A000
	0x01FA1200 LDR X0, [X0 + 0x2C8]
	0x01FA1204 BL 0x1C16CF4
	0x01FA1208 MOVZ W8, 0x1
	0x01FA120C STRB W8, [X20 + 0x7CA]
	0x01FA1210 LDR X1, [X21]
	0x01FA1214 MOV X0, X19
	0x01FA1218 BL 0x21A3894
	0x01FA121C LDR X8, [X19 + 0x20]
	0x01FA1220 CBZ X8, 0x1FA1280
	0x01FA1224 MOV X21, X0
	0x01FA1228 MOV X0, X8
	0x01FA122C MOV X1, X31
	0x01FA1230 BL 0x3C32E90
	0x01FA1234 CBZ X21, 0x1FA1280
	0x01FA1238 MOV X20, X0
	0x01FA123C MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x2439000
	008 Move X23, 0x2154000
	009 Move X20, 0x217B000
	010 Move X21, 0x217B000
	011 Move W8, [X22+1979]
	012 Move X23, [X23+3696]
	013 Move X20, [X20+616]
	014 Move X21, [X21+624]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x2154000
	021 Move X0, [X0+3696]
	022 Call 0x1C17CF4
	023 Move X0, 0x217B000
	024 Move X0, [X0+624]
	025 Call 0x1C17CF4
	026 Move X0, 0x217B000
	027 Move X0, [X0+616]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+1979], W8
	031 Move X0, [X23]
	032 Call 0x1C17F10
	033 Move X2, [X20]
	034 Move X1, X19
	035 Move X3, X31
	036 Move X20, X0
	037 Call Action..ctor, X0, X1, X2
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X20
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X1, X31
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Call InputSystem.remove_onAfterUpdate, X0
	052 Return 

Method: System.Void OnAfterInputSystemUpdate()

Disassembly:
	0x01FA1240 MOV X1, X31
	0x01FA1244 BL 0x3C035DC
	0x01FA1248 CBZ X20, 0x1FA1280
	0x01FA124C ADRP X8, 0xFFFFFFFFFEB49000
	0x01FA1250 LDR V1, [X8 + 0x330]
	0x01FA1254 MOV X0, X20
	0x01FA1258 MOV X1, X31
	0x01FA125C FADD S2, S0, S1
	0x01FA1260 FMOV S0, W31
	0x01FA1264 FMOV S1, W31
	0x01FA1268 BL 0x3C3EC04
	0x01FA126C LDR V0, [X19 + 0x38]
	0x01FA1270 MOV X0, X19
	0x01FA1274 LDP X20, X19, [X31 + 0x10]
	0x01FA1278 LDP X30, X21, [X31], #0x20
	0x01FA127C B 0x1FA1284
	0x01FA1280 BL 0x1C16F20
	0x01FA1284 STP D11, D10, [X31 - 0x30]!
	0x01FA1288 STP D9, D8, [X31 + 0x10]
	0x01FA128C STP X30, X19, [X31 + 0x20]
	0x01FA1290 MOV X19, X0
	0x01FA1294 LDR X0, [X0 + 0x20]
	0x01FA1298 CBZ X0, 0x1FA133C
	0x01FA129C LDP S9, S10, [X19 + 0x28]
	0x01FA12A0 LDR V11, [X19 + 0x30]
	0x01FA12A4 MOV X1, X31
	0x01FA12A8 MOV V8.16B, V0.16B
	0x01FA12AC BL 0x3C1341C
	0x01FA12B0 CBZ X0, 0x1FA133C
	0x01FA12B4 LDR X1, [X19 + 0x40]
	0x01FA12B8 MOV V0.16B, V9.16B
	0x01FA12BC MOV V1.16B, V10.16B
	0x01FA12C0 MOV V2.16B, V11.16B
	0x01FA12C4 MOV V3.16B, V8.16B
	0x01FA12C8 MOV X2, X31
	0x01FA12CC BL 0x3C1498C
	0x01FA12D0 LDR X0, [X19 + 0x20]
	0x01FA12D4 CBZ X0, 0x1FA133C
	0x01FA12D8 MOV X1, X31
	0x01FA12DC BL 0x3C32ECC
	0x01FA12E0 CBZ X0, 0x1FA133C
	0x01FA12E4 FCMP S8, 0x0
	0x01FA12E8 B.NE 0x1FA12F4
	0x01FA12EC MOV W1, W31
	0x01FA12F0 B 0x1FA1328
	0x01FA12F4 MOV X1, X31
	0x01FA12F8 BL 0x3C357F8
	0x01FA12FC TBZ X0, 0x0, 0x1FA1310
	0x01FA1300 LDP X30, X19, [X31 + 0x20]
	0x01FA1304 LDP D9, D8, [X31 + 0x10]
	0x01FA1308 LDP D11, D10, [X31], #0x30
	0x01FA130C RET
	0x01FA1310 LDR X0, [X19 + 0x20]
	0x01FA1314 CBZ X0, 0x1FA133C
	0x01FA1318 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X20, 0x2439000
	007 Move W8, [X20+1980]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x217B000
	014 Move X0, [X0+632]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+1980], W8
	018 Move W8, [X19+57]
	019 Compare W8, 0
	020 JumpIfEqual {23}
	021 Move X0, X19
	022 Call XRInputDevice.UpdatePosition, X0
	023 Move X0, X19
	024 Move X1, X31
	025 Call Component.get_transform, X0
	026 Compare X0, 0
	027 JumpIfEqual {68}
	028 Move X1, X31
	029 Call Transform.get_position, X0
	030 Move X0, X19
	031 Move X1, X31
	032 Move [X19+96], S0
	033 Move [X19+104], S1
	034 Move [X19+104], S2
	035 Call Component.get_transform, X0
	036 Compare X0, 0
	037 JumpIfEqual {68}
	038 Move X20, 0x217B000
	039 Move X20, [X20+632]
	040 Move X1, X31
	041 Add X21, X19, 96
	042 Call Transform.get_rotation, X0
	043 Move [X19+108], S0
	044 Move [X19+116], S1
	045 Move [X19+116], S2
	046 Move [X19+124], S3
	047 Move V0, [X21]
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X0, X31
	050 Add X19, X19, 64
	051 Move [X31], V0
	052 Move [X31+12], V1
	053 Call Time.get_time
	054 Move V1, [X31]
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 Move X2, [X20]
	057 Add X1, X31, 32
	058 Move X0, X19
	059 Move [X31+2], V1
	060 Move [X31+44], V2
	061 Call TimedRingbuffer`1<InputDevicePose>.Add, X0, X1, V0
	062 Move X20, [X31+80]
	063 Move X19, [X31+88]
	064 Move X30, [X31+64]
	065 Move X21, [X31+72]
	066 Add X31, X31, 96
	067 Return 
	068 Call 0x1C17F20

Method: Fusion.XR.Host.Rig.XRInputDevice/InputDevicePose InterpolatedPose(System.Single delay = 0.3)

Disassembly:
	0x01F9FFEC B 0x1F9FFF0
	0x01F9FFF0 SUB X31, X31, 0x40
	0x01F9FFF4 STP X30, X21, [X31 + 0x20]
	0x01F9FFF8 STP X20, X19, [X31 + 0x30]
	0x01F9FFFC ADRP X21, 0x243A000
	0x01FA0000 ADRP X20, 0x217B000
	0x01FA0004 LDRB W8, [X21 + 0x7C1]
	0x01FA0008 B 0x3EB1524
	0x01FA000C MOV X19, X0
	0x01FA0010 TBNZ X8, 0x0, 0x1FA0028
	0x01FA0014 ADRP X0, 0x217B000
	0x01FA0018 LDR X0, [X0 + 0x258]
	0x01FA001C BL 0x1C16CF4
	0x01FA0020 MOVZ W8, 0x1
	0x01FA0024 STRB W8, [X21 + 0x7C1]
	0x01FA0028 MOVZ W8, 0x101
	0x01FA002C STRH W8, [X19 + 0x38]
	0x01FA0030 LDR X2, [X20]
	0x01FA0034 MOVI V0.2D, 0x0
	0x01FA0038 ADD X0, X31, 0x0
	0x01FA003C MOVZ W1, 0x14
	0x01FA0040 STP V0, V0, [X31]
	0x01FA0044 BL 0x26EEAB8
	0x01FA0048 LDP V1, V0, [X31]
	0x01FA004C MOV X0, X19
	0x01FA0050 MOV X1, X31
	0x01FA0054 STP V1, V0, [X19 + 0x40]
	0x01FA0058 BL 0x3C36C30
	0x01FA005C LDP X20, X19, [X31 + 0x30]
	0x01FA0060 LDP X30, X21, [X31 + 0x20]
	0x01FA0064 ADD X31, X31, 0x40
	0x01FA0068 RET
	0x01FA006C STR X30, [X31 - 0x20]!
	0x01FA0070 STP X20, X19, [X31 + 0x10]
	0x01FA0074 ADRP X20, 0x2439000
	0x01FA0078 LDRB W8, [X20 + 0x7B9]
	0x01FA007C MOV X19, X0
	0x01FA0080 TBNZ X8, 0x0, 0x1FA0098
	0x01FA0084 ADRP X0, 0x217B000
	0x01FA0088 LDR X0, [X0 + 0x260]
	0x01FA008C BL 0x1C16CF4
	0x01FA0090 MOVZ W8, 0x1
	0x01FA0094 STRB W8, [X20 + 0x7B9]
	0x01FA0098 STR X31, [X31 + 0x8]
	0x01FA009C LDRB W8, [X19 + 0x7C]
	0x01FA00A0 CBZ W8, 0x1FA00D0
	0x01FA00A4 ADRP X8, 0x217B000
	0x01FA00A8 LDR X8, [X8 + 0x260]
	0x01FA00AC ADD X1, X31, 0x8
	0x01FA00B0 MOV X0, X19
	0x01FA00B4 LDR X2, [X8]
	0x01FA00B8 BL 0x21A4990
	0x01FA00BC TBZ X0, 0x0, 0x1FA00D0
	0x01FA00C0 LDR X0, [X31 + 0x8]
	0x01FA00C4 MOV W1, W31
	0x01FA00C8 MOV X2, X31
	0x01FA00CC BL 0x3E625A8
	0x01FA00D0 LDP X20, X19, [X31 + 0x10]
	0x01FA00D4 LDR X30, [X31], #0x20
	0x01FA00D8 RET
	0x01FA00DC MOVZ W0, 0x21
	0x01FA00E0 RET
	0x01FA00E4 MOVZ W8, 0x1
	0x01FA00E8 STRB W8, [X0 + 0x7C]
	0x01FA00EC B 0x1F9FFF0
	0x01FA00F0 MOVZ W0, 0x20
	0x01FA00F4 RET
	0x01FA00F8 STP X30, X23, [X31 - 0x30]!
	0x01FA00FC STP X22, X21, [X31 + 0x10]
	0x01FA0100 STP X20, X19, [X31 + 0x20]
	0x01FA0104 ADRP X22, 0x2439000
	0x01FA0108 ADRP X23, 0x2154000
	0x01FA010C ADRP X20, 0x217B000
	0x01FA0110 ADRP X21, 0x217B000
	0x01FA0114 LDRB W8, [X22 + 0x7BA]
	0x01FA0118 LDR X23, [X23 + 0xE70]
	0x01FA011C LDR X20, [X20 + 0x268]
	0x01FA0120 LDR X21, [X21 + 0x270]
	0x01FA0124 MOV X19, X0
	0x01FA0128 TBNZ X8, 0x0, 0x1FA0158
	0x01FA012C ADRP X0, 0x2154000
	0x01FA0130 LDR X0, [X0 + 0xE70]
	0x01FA0134 BL 0x1C16CF4
	0x01FA0138 ADRP X0, 0x217B000
	0x01FA013C LDR X0, [X0 + 0x270]
	0x01FA0140 BL 0x1C16CF4
	0x01FA0144 ADRP X0, 0x217B000
	0x01FA0148 LDR X0, [X0 + 0x268]
	0x01FA014C BL 0x1C16CF4
	0x01FA0150 MOVZ W8, 0x1
	0x01FA0154 STRB W8, [X22 + 0x7BA]
	0x01FA0158 LDR X0, [X23]
	0x01FA015C BL 0x1C16F10
	0x01FA0160 LDR X2, [X20]
	0x01FA0164 MOV X1, X19
	0x01FA0168 MOV X3, X31
	0x01FA016C MOV X20, X0
	0x01FA0170 BL 0x3314368
	0x01FA0174 LDR X0, [X21]
	0x01FA0178 LDR W8, [X0 + 0xE0]
	0x01FA017C CBNZ W8, 0x1FA0184
	0x01FA0180 BL 0x1C16DFC
	0x01FA0184 MOV X0, X20
	0x01FA0188 LDP X20, X19, [X31 + 0x20]
	0x01FA018C LDP X22, X21, [X31 + 0x10]
	0x01FA0190 MOV X1, X31
	0x01FA0194 LDP X30, X23, [X31], #0x30
	0x01FA0198 B 0x3770464
	0x01FA019C STP X30, X23, [X31 - 0x30]!
	0x01FA01A0 STP X22, X21, [X31 + 0x10]
	0x01FA01A4 STP X20, X19, [X31 + 0x20]
	0x01FA01A8 ADRP X22, 0x2439000
	0x01FA01AC ADRP X23, 0x2154000
	0x01FA01B0 ADRP X20, 0x217B000
	0x01FA01B4 ADRP X21, 0x217B000
	0x01FA01B8 LDRB W8, [X22 + 0x7BB]
	0x01FA01BC LDR X23, [X23 + 0xE70]
	0x01FA01C0 LDR X20, [X20 + 0x268]
	0x01FA01C4 LDR X21, [X21 + 0x270]
	0x01FA01C8 MOV X19, X0
	0x01FA01CC TBNZ X8, 0x0, 0x1FA01FC
	0x01FA01D0 ADRP X0, 0x2154000
	0x01FA01D4 LDR X0, [X0 + 0xE70]
	0x01FA01D8 BL 0x1C16CF4
	0x01FA01DC ADRP X0, 0x217B000
	0x01FA01E0 LDR X0, [X0 + 0x270]
	0x01FA01E4 BL 0x1C16CF4
	0x01FA01E8 ADRP X0, 0x217B000
	0x01FA01EC LDR X0, [X0 + 0x268]

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+176], D13
	003 Move [X31+184], D12
	004 Move [X31+192], D11
	005 Move [X31+200], D10
	006 Move [X31+208], D9
	007 Move [X31+216], D8
	008 Move [X31+224], X29
	009 Move [X31+232], X30
	010 Move [X31+240], X22
	011 Move [X31+248], X21
	012 Move [X31+256], X20
	013 Move [X31+264], X19
	014 Move X21, 0x243A000
	015 Move X22, 0x217C000
	016 Move X19, X8
	017 Move W8, [X21+1981]
	018 Move X22, [X22+472]
	019 Move V8, V0
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {36}
	025 Move X0, 0x217C000
	026 Move X0, [X0+480]
	027 Call 0x1C17CF4
	028 Move X0, 0x217C000
	029 Move X0, [X0+488]
	030 Call 0x1C17CF4
	031 Move X0, 0x217C000
	032 Move X0, [X0+472]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+1981], W8
	036 NotImplemented "Instruction MOVI not yet implemented."
	037 Move X0, X31
	038 Move [X31+144], V0
	039 Move [X31+152], V0
	040 Move [X31+112], V0
	041 Move [X31+120], V0
	042 Move [X31+6], V0
	043 Add X21, X20, 64
	044 Call Time.get_time
	045 Move X1, [X22]
	046 Subtract S0, S0, S8
	047 Add X8, X31, 16
	048 Move X0, X21
	049 Call TimedRingbuffer`1<InputDevicePose>.InterpolateInfo, X0, V0
	050 Add X0, X31, 96
	051 Add X1, X31, 16
	052 Move W2, 80
	053 Call 0x3EB2AC0
	054 Move W8, [X31+172]
	055 Compare W8, 0
	056 JumpIfEqual {65}
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X8, 0x217C000
	060 Move X8, [X8+480]
	061 Add X0, X31, 96
	062 Move X1, [X8]
	063 Add X8, X31, 16
	064 Call InterpolationInfo`1<InputDevicePose>.get_from, X0
	065 Move X20, 0x217C000
	066 Move X20, [X20+480]
	067 Add X8, X31, 16
	068 Add X0, X31, 96
	069 Move X1, [X20]
	070 Call InterpolationInfo`1<InputDevicePose>.get_from, X0
	071 Move X21, 0x217C000
	072 Move V8, [X31+16]
	073 Move V9, [X31+24]
	074 Move X21, [X21+488]
	075 Add X8, X31, 16
	076 Add X0, X31, 96
	077 Move X1, [X21]
	078 Call InterpolationInfo`1<InputDevicePose>.get_to, X0
	079 Move V2, [X31+168]
	080 Move V0, [X31+16]
	081 Move V1, [X31+24]
	082 Move S3, 1
	083 Move X1, [X20]
	084 Move S4, W31
	085 NotImplemented "Instruction FMIN not yet implemented."
	086 NotImplemented "Instruction FCMP not yet implemented."
	087 Subtract V0, V0, V8
	088 Subtract S1, S1, S9
	089 NotImplemented "Instruction FCSEL not yet implemented."
	090 NotImplemented "Instruction INVALID not yet implemented."
	091 Multiply S1, S1, S2
	092 Add X8, X31, 16
	093 Add X0, X31, 96
	094 Add V12, V8, V0
	095 Add S13, S9, S1
	096 Call InterpolationInfo`1<InputDevicePose>.get_from, X0
	097 Move X1, [X21]
	098 Move S8, [X31+28]
	099 Move S9, [X31+32]
	100 Move S10, [X31+36]
	101 Move S11, [X31+40]
	102 Add X8, X31, 16
	103 Add X0, X31, 96
	104 Call InterpolationInfo`1<InputDevicePose>.get_to, X0
	105 Move V0, [X31+168]
	106 Move S4, [X31+28]
	107 Move S5, [X31+32]
	108 Move S6, [X31+36]
	109 Move S7, [X31+40]
	110 Move V1, V9
	111 Move [X31], S0
	112 Move V0, V8
	113 Move V2, V10
	114 Move V3, V11
	115 Move X0, X31
	116 Call Quaternion.Slerp, X0, X1, V0
	117 Move [X19], D12
	118 Move [X19+8], S13
	119 Move [X19+16], S0
	120 Move [X19+16], S1
	121 Move [X19+24], S2
	122 Move [X19+24], S3
	123 Move X8, 0x217C000
	124 Move X8, [X8+488]
	125 Add X0, X31, 96
	126 Move X1, [X8]
	127 Add X8, X31, 16
	128 Call InterpolationInfo`1<InputDevicePose>.get_to, X0
	129 NotImplemented "Instruction LDUR not yet implemented."
	130 Move V1, [X31+1]
	131 NotImplemented "Instruction LDUR not yet implemented."
	132 Move V1, [X20+6]
	133 Move [X19+12], V0
	134 Move [X19], V1
	135 Move X20, [X31+256]
	136 Move X19, [X31+264]
	137 Move X22, [X31+240]
	138 Move X21, [X31+248]
	139 Move X29, [X31+224]
	140 Move X30, [X31+232]
	141 Move D9, [X31+208]
	142 Move D8, [X31+216]
	143 Move D11, [X31+192]
	144 Move D10, [X31+200]
	145 Move D13, [X31+176]
	146 Move D12, [X31+184]
	147 Add X31, X31, 272
	148 Return X0

Method: System.Void DetectDevice()

Disassembly:
	0x01FA1444 STP D9, D8, [X31 + 0x10]
	0x01FA1448 STP X30, X21, [X31 + 0x20]
	0x01FA144C STP X20, X19, [X31 + 0x30]
	0x01FA1450 ADRP X20, 0x2438000
	0x01FA1454 ADRP X21, 0x217A000
	0x01FA1458 LDRB W8, [X20 + 0x7CD]
	0x01FA145C LDR X21, [X21 + 0x2D8]
	0x01FA1460 MOV V8.16B, V2.16B
	0x01FA1464 MOV V9.16B, V1.16B
	0x01FA1468 MOV V10.16B, V0.16B
	0x01FA146C MOV X19, X0
	0x01FA1470 TBNZ X8, 0x0, 0x1FA1488
	0x01FA1474 ADRP X0, 0x217A000
	0x01FA1478 LDR X0, [X0 + 0x2D8]
	0x01FA147C BL 0x1C16CF4
	0x01FA1480 MOVZ W8, 0x1
	0x01FA1484 STRB W8, [X20 + 0x7CD]
	0x01FA1488 LDR X0, [X21]
	0x01FA148C BL 0x1C16F10
	0x01FA1490 MOV X1, X31
	0x01FA1494 MOV X20, X0
	0x01FA1498 BL 0x33BDD8C
	0x01FA149C STR W31, [X20 + 0x10]
	0x01FA14A0 STR X19, [X20 + 0x28]
	0x01FA14A4 STR S10, [X20 + 0x20]
	0x01FA14A8 STP S9, S8, [X20 + 0x30]
	0x01FA14AC MOV X0, X20
	0x01FA14B0 LDP X20, X19, [X31 + 0x30]
	0x01FA14B4 LDP X30, X21, [X31 + 0x20]
	0x01FA14B8 LDP D9, D8, [X31 + 0x10]
	0x01FA14BC LDR V10, [X31], #0x40
	0x01FA14C0 RET
	0x01FA14C4 STR X30, [X31 - 0x20]!
	0x01FA14C8 STP X20, X19, [X31 + 0x10]
	0x01FA14CC MOV W19, W1
	0x01FA14D0 MOV X1, X31
	0x01FA14D4 MOV X20, X0
	0x01FA14D8 BL 0x33BDD8C
	0x01FA14DC STR W19, [X20 + 0x10]
	0x01FA14E0 LDP X20, X19, [X31 + 0x10]
	0x01FA14E4 LDR X30, [X31], #0x20
	0x01FA14E8 RET
	0x01FA14EC STR X30, [X31 - 0x20]!
	0x01FA14F0 STP X20, X19, [X31 + 0x10]
	0x01FA14F4 MOV W19, W1
	0x01FA14F8 MOV X1, X31
	0x01FA14FC MOV X20, X0
	0x01FA1500 BL 0x33BDD8C
	0x01FA1504 STR W19, [X20 + 0x10]
	0x01FA1508 LDP X20, X19, [X31 + 0x10]
	0x01FA150C LDR X30, [X31], #0x20
	0x01FA1510 RET
	0x01FA1514 STR X30, [X31 - 0x20]!
	0x01FA1518 STP X20, X19, [X31 + 0x10]
	0x01FA151C MOV W19, W1
	0x01FA1520 MOV X1, X31
	0x01FA1524 MOV X20, X0
	0x01FA1528 BL 0x33BDD8C
	0x01FA152C STR W19, [X20 + 0x10]
	0x01FA1530 LDP X20, X19, [X31 + 0x10]
	0x01FA1534 LDR X30, [X31], #0x20
	0x01FA1538 RET
	0x01FA153C STR D8, [X31 - 0x20]!
	0x01FA1540 STP X30, X19, [X31 + 0x10]
	0x01FA1544 MOV V8.16B, V0.16B
	0x01FA1548 FMOV S0, -1
	0x01FA154C FCMP S8, S0
	0x01FA1550 MOV X19, X0
	0x01FA1554 B.NE 0x1FA155C
	0x01FA1558 LDR V8, [X19 + 0x50]
	0x01FA155C MOV X0, X19
	0x01FA1560 MOV X1, X31
	0x01FA1564 BL 0x3C32454
	0x01FA1568 TBZ X0, 0x0, 0x1FA1590
	0x01FA156C MOV X0, X19
	0x01FA1570 MOV V0.16B, V8.16B
	0x01FA1574 BL 0x1F9F638
	0x01FA1578 MOV X1, X0
	0x01FA157C MOV X0, X19
	0x01FA1580 LDP X30, X19, [X31 + 0x10]
	0x01FA1584 MOV X2, X31
	0x01FA1588 LDR V8, [X31], #0x20
	0x01FA158C B 0x3C366FC
	0x01FA1590 LDP X30, X19, [X31 + 0x10]
	0x01FA1594 LDR V8, [X31], #0x20
	0x01FA1598 RET

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+80], X20
	004 Move [X31+88], X19
	005 Move X20, 0x2439000
	006 Move W8, [X20+1982]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0x217B000
	013 Move X0, [X0+640]
	014 Call 0x1C17CF4
	015 Move X0, 0x217B000
	016 Move X0, [X0+648]
	017 Call 0x1C17CF4
	018 Move X0, 0x217B000
	019 Move X0, [X0+656]
	020 Call 0x1C17CF4
	021 Move X0, 0x217B000
	022 Move X0, [X0+664]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1982], W8
	026 NotImplemented "Instruction MOVI not yet implemented."
	027 Move [X31+32], V0
	028 Move [X31+40], V0
	029 Move W8, [X19+32]
	030 Compare W8, 0
	031 JumpIfNotEqual {66}
	032 Move X8, [X19]
	033 Move X0, X19
	034 Move X9, [X8+408]
	035 Move X1, [X8+416]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Compare X0, 0
	038 JumpIfEqual {71}
	039 Move X8, 0x217B000
	040 Move X8, [X8+664]
	041 Move X1, [X8]
	042 Add X8, X31, 0
	043 Call List`1<InputDevice>.GetEnumerator, X0
	044 Move X8, 0x217B000
	045 Move V0, [X31]
	046 Move V1, [X31+16]
	047 Move X8, [X8+648]
	048 Move [X31+32], V0
	049 Move [X31+40], V1
	050 Move X1, [X8]
	051 Add X0, X31, 32
	052 Call Enumerator<InputDevice>.MoveNext, X0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {61}
	057 Move V0, [X31+3]
	058 Move W8, 1
	059 Move [X19+32], W8
	060 Move [X19+40], V0
	061 Move X8, 0x217B000
	062 Move X8, [X8+640]
	063 Add X0, X31, 32
	064 Move X1, [X8]
	065 Call Enumerator<InputDevice>.Dispose, X0
	066 Move X20, [X31+80]
	067 Move X19, [X31+88]
	068 Move X30, [X31+64]
	069 Add X31, X31, 96
	070 Return 
	071 Call 0x1C17F20
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X20, X0
	074 Move X0, X20
	075 Call 0x3EB2AD0
	076 Move X19, [X0]
	077 Call 0x3EB2AE0
	078 Move X8, 0x217B000
	079 Move X8, [X8+640]
	080 Add X0, X31, 32
	081 Move X1, [X8]
	082 Call Enumerator<InputDevice>.Dispose, X0
	083 Compare X19, 0
	084 JumpIfEqual {66}
	085 Move X0, X19
	086 Call 0x1C17F18
	087 Move X19, X31
	088 Move X20, X0
	089 Move X8, 0x217B000
	090 Move X8, [X8+640]
	091 Move X1, [X8]
	092 Add X0, X31, 32
	093 Call Enumerator<InputDevice>.Dispose, X0
	094 Compare X19, 0
	095 JumpIfNotEqual {98}
	096 Move X0, X20
	097 Call 0x1D2D690
	098 Move X0, X19
	099 Call 0x1C17F18
	100 Call 0x1991590

Method: System.Collections.Generic.List`1<UnityEngine.XR.InputDevice> DeviceLookup()

Disassembly:
	0x01FA159C STR D8, [X31 - 0x20]!
	0x01FA15A0 STP X30, X19, [X31 + 0x10]
	0x01FA15A4 MOV V8.16B, V0.16B
	0x01FA15A8 FMOV S0, -1
	0x01FA15AC FCMP S8, S0
	0x01FA15B0 MOV X19, X0
	0x01FA15B4 B.NE 0x1FA15BC
	0x01FA15B8 LDR V8, [X19 + 0x48]
	0x01FA15BC MOV X0, X19
	0x01FA15C0 MOV X1, X31
	0x01FA15C4 BL 0x3C32454
	0x01FA15C8 TBZ X0, 0x0, 0x1FA15F0
	0x01FA15CC MOV X0, X19
	0x01FA15D0 MOV V0.16B, V8.16B
	0x01FA15D4 BL 0x1F9F558
	0x01FA15D8 MOV X1, X0
	0x01FA15DC MOV X0, X19
	0x01FA15E0 LDP X30, X19, [X31 + 0x10]
	0x01FA15E4 MOV X2, X31
	0x01FA15E8 LDR V8, [X31], #0x20
	0x01FA15EC B 0x3C366FC
	0x01FA15F0 LDP X30, X19, [X31 + 0x10]
	0x01FA15F4 LDR V8, [X31], #0x20
	0x01FA15F8 RET
	0x01FA15FC STP X30, X21, [X31 - 0x20]!
	0x01FA1600 STP X20, X19, [X31 + 0x10]
	0x01FA1604 ADRP X21, 0x2438000
	0x01FA1608 ADRP X20, 0x217A000
	0x01FA160C LDRB W8, [X21 + 0x7D0]
	0x01FA1610 LDR X20, [X20 + 0x2E0]
	0x01FA1614 MOV X19, X0
	0x01FA1618 TBNZ X8, 0x0, 0x1FA1630
	0x01FA161C ADRP X0, 0x217A000
	0x01FA1620 LDR X0, [X0 + 0x2E0]
	0x01FA1624 BL 0x1C16CF4
	0x01FA1628 MOVZ W8, 0x1
	0x01FA162C STRB W8, [X21 + 0x7D0]
	0x01FA1630 ADRP X8, 0xFFFFFFFFFEB4B000
	0x01FA1634 LDR V0, [X8 + 0xBB]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2439000
	007 Move X21, 0x217B000
	008 Move X20, 0x217B000
	009 Move W8, [X22+1983]
	010 Move X21, [X21+352]
	011 Move X20, [X20+328]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x217B000
	018 Move X0, [X0+328]
	019 Call 0x1C17CF4
	020 Move X0, 0x217B000
	021 Move X0, [X0+352]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+1983], W8
	025 Move X8, [X19]
	026 Move X0, X19
	027 Move X9, [X8+376]
	028 Move X1, [X8+384]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move X8, [X21]
	031 Move W19, W0
	032 Move X0, X8
	033 Call 0x1C17F10
	034 Move X1, [X20]
	035 Move X20, X0
	036 Call List`1<InputDevice>..ctor, X0
	037 Move W0, W19
	038 Move X1, X20
	039 Move X2, X31
	040 Call InputDevices.GetDevicesWithCharacteristics, X0, X1
	041 Move X0, X20
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Return X0

Method: System.Void Update()

Disassembly:
	0x01FA1638 MOVZ W9, 0xCCCD

ISIL:
	001 Call XRInputDevice.UpdatePosition, X0
	002 Return 

Method: System.Void UpdatePosition()

Disassembly:
	0x01FA131C BL 0x3C32ECC
	0x01FA1320 CBZ X0, 0x1FA133C
	0x01FA1324 MOVZ W1, 0x1
	0x01FA1328 LDP X30, X19, [X31 + 0x20]
	0x01FA132C LDP D9, D8, [X31 + 0x10]
	0x01FA1330 MOV X2, X31
	0x01FA1334 LDP D11, D10, [X31], #0x30
	0x01FA1338 B 0x3C357B4
	0x01FA133C BL 0x1C16F20
	0x01FA1340 STP X30, X19, [X31 - 0x10]!
	0x01FA1344 FMOV S0, -1
	0x01FA1348 FMOV S1, -1
	0x01FA134C FMOV S2, -1
	0x01FA1350 MOV X19, X0
	0x01FA1354 BL 0x1FA136C
	0x01FA1358 MOV X1, X0
	0x01FA135C MOV X0, X19
	0x01FA1360 MOV X2, X31
	0x01FA1364 LDP X30, X19, [X31], #0x10
	0x01FA1368 B 0x3C366FC
	0x01FA136C STR D10, [X31 - 0x40]!
	0x01FA1370 STP D9, D8, [X31 + 0x10]
	0x01FA1374 STP X30, X21, [X31 + 0x20]
	0x01FA1378 STP X20, X19, [X31 + 0x30]
	0x01FA137C ADRP X20, 0x2438000
	0x01FA1380 ADRP X21, 0x217A000
	0x01FA1384 LDRB W8, [X20 + 0x7CB]
	0x01FA1388 LDR X21, [X21 + 0x2D0]
	0x01FA138C MOV V8.16B, V2.16B
	0x01FA1390 MOV V9.16B, V1.16B
	0x01FA1394 MOV V10.16B, V0.16B
	0x01FA1398 MOV X19, X0
	0x01FA139C TBNZ X8, 0x0, 0x1FA13B4
	0x01FA13A0 ADRP X0, 0x217A000
	0x01FA13A4 LDR X0, [X0 + 0x2D0]
	0x01FA13A8 BL 0x1C16CF4
	0x01FA13AC MOVZ W8, 0x1
	0x01FA13B0 STRB W8, [X20 + 0x7CB]
	0x01FA13B4 LDR X0, [X21]
	0x01FA13B8 BL 0x1C16F10
	0x01FA13BC MOV X1, X31
	0x01FA13C0 MOV X20, X0
	0x01FA13C4 BL 0x33BDD8C
	0x01FA13C8 STR W31, [X20 + 0x10]
	0x01FA13CC STR X19, [X20 + 0x28]
	0x01FA13D0 STR S10, [X20 + 0x20]
	0x01FA13D4 STP S9, S8, [X20 + 0x30]
	0x01FA13D8 MOV X0, X20
	0x01FA13DC LDP X20, X19, [X31 + 0x30]
	0x01FA13E0 LDP X30, X21, [X31 + 0x20]
	0x01FA13E4 LDP D9, D8, [X31 + 0x10]
	0x01FA13E8 LDR V10, [X31], #0x40
	0x01FA13EC RET
	0x01FA13F0 STR X30, [X31 - 0x20]!
	0x01FA13F4 STP X20, X19, [X31 + 0x10]
	0x01FA13F8 MOV W19, W1
	0x01FA13FC MOV X1, X31
	0x01FA1400 MOV X20, X0
	0x01FA1404 BL 0x33BDD8C
	0x01FA1408 STR W19, [X20 + 0x10]
	0x01FA140C LDP X20, X19, [X31 + 0x10]
	0x01FA1410 LDR X30, [X31], #0x20
	0x01FA1414 RET
	0x01FA1418 STR X30, [X31 - 0x20]!
	0x01FA141C STP X20, X19, [X31 + 0x10]
	0x01FA1420 MOV W19, W1
	0x01FA1424 MOV X1, X31
	0x01FA1428 MOV X20, X0
	0x01FA142C BL 0x33BDD8C
	0x01FA1430 STR W19, [X20 + 0x10]
	0x01FA1434 LDP X20, X19, [X31 + 0x10]
	0x01FA1438 LDR X30, [X31], #0x20
	0x01FA143C RET
	0x01FA1440 STR D10, [X31 - 0x40]!

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0x2439000
	007 Move W8, [X20+1984]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2158000
	014 Move X0, [X0+344]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+1984], W8
	018 Move [X31+24], W31
	019 Move [X31+8], X31
	020 Move [X31+16], X31
	021 Move [X31], X31
	022 Move W8, [X19+56]
	023 Compare W8, 0
	024 JumpIfEqual {93}
	025 Move X8, [X19]
	026 Move X0, X19
	027 Move X9, [X8+392]
	028 Move X1, [X8+400]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move W8, [X19+32]
	031 Compare W8, 0
	032 JumpIfEqual {93}
	033 Move X21, 0x2158000
	034 Move X21, [X21+344]
	035 Add X20, X19, 40
	036 Move X0, [X21]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X21]
	042 Move X8, [X0+184]
	043 Add X2, X31, 16
	044 Move X0, X20
	045 Move X3, X31
	046 Move X1, [X8+152]
	047 Call InputDevice.TryGetFeatureValue, X0, X1, X2
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {62}
	052 Move X0, X19
	053 Move X1, X31
	054 Call Component.get_transform, X0
	055 Compare X0, 0
	056 JumpIfEqual {99}
	057 Move S1, [X31+20]
	058 Move S2, [X31+24]
	059 Move V0, [X31+16]
	060 Move X1, X31
	061 Call Transform.set_localPosition, X0, X1
	062 Move W8, [X19+32]
	063 Compare W8, 0
	064 JumpIfEqual {93}
	065 Move X0, [X21]
	066 Add X20, X19, 40
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {72}
	070 Call 0x1C17DFC
	071 Move X0, [X21]
	072 Move X8, [X0+184]
	073 Add X2, X31, 0
	074 Move X0, X20
	075 Move X3, X31
	076 Move X1, [X8+352]
	077 Call InputDevice.TryGetFeatureValue, X0, X1, X2
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {93}
	082 Move X0, X19
	083 Move X1, X31
	084 Call Component.get_transform, X0
	085 Compare X0, 0
	086 JumpIfEqual {99}
	087 Move S2, [X31+8]
	088 Move S3, [X31+12]
	089 Move S0, [X31]
	090 Move S1, [X31+4]
	091 Move X1, X31
	092 Call Transform.set_localRotation, X0, X1
	093 Move X20, [X31+48]
	094 Move X19, [X31+56]
	095 Move X30, [X31+32]
	096 Move X21, [X31+40]
	097 Add X31, X31, 64
	098 Return 
	099 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01FA0FF0 CBZ X0, 0x1FA11D0
	0x01FA0FF4 MOV X1, X31
	0x01FA0FF8 BL 0x3C3DEB4
	0x01FA0FFC CBZ X20, 0x1FA11D0
	0x01FA1000 MOV X0, X20
	0x01FA1004 MOV X1, X31
	0x01FA1008 BL 0x3C3F7AC
	0x01FA100C LDR X0, [X19 + 0x88]
	0x01FA1010 CBZ X0, 0x1FA11D0
	0x01FA1014 MOV X1, X31
	0x01FA1018 BL 0x3C32E90
	0x01FA101C LDR X8, [X19 + 0x80]
	0x01FA1020 CBZ X8, 0x1FA11D0
	0x01FA1024 MOV X20, X0
	0x01FA1028 LDR X0, [X8 + 0x20]
	0x01FA102C CBZ X0, 0x1FA11D0
	0x01FA1030 MOV X1, X31
	0x01FA1034 BL 0x3C32E90
	0x01FA1038 CBZ X0, 0x1FA11D0
	0x01FA103C MOV X1, X31
	0x01FA1040 BL 0x3C3F58C
	0x01FA1044 CBZ X20, 0x1FA11D0
	0x01FA1048 MOV X0, X20
	0x01FA104C MOV X1, X31
	0x01FA1050 BL 0x3C3F62C
	0x01FA1054 LDR X0, [X19 + 0x88]
	0x01FA1058 CBZ X0, 0x1FA11D0
	0x01FA105C MOV X1, X31
	0x01FA1060 BL 0x3C32E90
	0x01FA1064 LDR X8, [X19 + 0x80]
	0x01FA1068 CBZ X8, 0x1FA11D0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x243A000
	007 Move X20, 0x217B000
	008 Move W8, [X21+1985]
	009 Call 0x3EB2524
	010 Return 
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x217B000
	017 Move X0, [X0+600]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1985], W8
	021 Move W8, 257
	022 NotImplemented "Instruction STRH not yet implemented."
	023 Move X2, [X20]
	024 NotImplemented "Instruction MOVI not yet implemented."
	025 Add X0, X31, 0
	026 Move W1, 20
	027 Move [X31], V0
	028 Move [X31+8], V0
	029 Call TimedRingbuffer`1<InputDevicePose>..ctor, X0, X1
	030 Move V1, [X31]
	031 Move V0, [X31+16]
	032 Move X0, X19
	033 Move X1, X31
	034 Move [X19+64], V1
	035 Move [X19+72], V0
	036 Call MonoBehaviour..ctor, X0
	037 Move X20, [X31+48]
	038 Move X19, [X31+56]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Add X31, X31, 64
	042 Return 

