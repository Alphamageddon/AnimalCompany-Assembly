Type: Fusion.XR.Host.Rig.HardwareRig/<FadedTeleport>d__20

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01F9FB10 LDP X8, X1, [X0]
	0x01F9FB14 MOV X0, X21
	0x01F9FB18 BLR X8
	0x01F9FB1C CMP W0, 0x0
	0x01F9FB20 B.LE 0x1F9FBA8
	0x01F9FB24 LDR X0, [X20]
	0x01F9FB28 LDR W8, [X0 + 0xE0]
	0x01F9FB2C CBNZ W8, 0x1F9FB34
	0x01F9FB30 BL 0x1C16DFC
	0x01F9FB34 LDRB W8, [X28 + 0x3BD]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01FA06F0 LDR X8, [X8 + 0x80]

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01FA06F4 CBZ X8, 0x1FA0720
	0x01FA06F8 LDR W9, [X19 + 0xA0]
	0x01FA06FC MOVZ W10, 0x28
	0x01FA0700 CMP W9, 0x2
	0x01FA0704 MOVZ W9, 0x20
	0x01FA0708 CSEL X9, X9, X10, EQ
	0x01FA070C LDR X0, [X8, X9, LSL]
	0x01FA0710 B 0x1FA0718
	0x01FA0714 MOV X0, X31
	0x01FA0718 LDP X30, X19, [X31], #0x10
	0x01FA071C RET
	0x01FA0720 BL 0x1C16F20
	0x01FA0724 STP X30, X23, [X31 - 0x30]!
	0x01FA0728 STP X22, X21, [X31 + 0x10]
	0x01FA072C STP X20, X19, [X31 + 0x20]
	0x01FA0730 ADRP X22, 0x2439000
	0x01FA0734 ADRP X23, 0x217B000
	0x01FA0738 ADRP X21, 0x217B000
	0x01FA073C ADRP X20, 0x217B000
	0x01FA0740 LDRB W8, [X22 + 0x7C2]
	0x01FA0744 LDR X23, [X23 + 0x2A0]
	0x01FA0748 LDR X21, [X21 + 0x108]
	0x01FA074C LDR X20, [X20 + 0x100]
	0x01FA0750 MOV X19, X0
	0x01FA0754 TBNZ X8, 0x0, 0x1FA0784
	0x01FA0758 ADRP X0, 0x217B000
	0x01FA075C LDR X0, [X0 + 0x100]
	0x01FA0760 BL 0x1C16CF4
	0x01FA0764 ADRP X0, 0x217B000
	0x01FA0768 LDR X0, [X0 + 0x2A0]
	0x01FA076C BL 0x1C16CF4
	0x01FA0770 ADRP X0, 0x217B000
	0x01FA0774 LDR X0, [X0 + 0x108]
	0x01FA0778 BL 0x1C16CF4
	0x01FA077C MOVZ W8, 0x1
	0x01FA0780 STRB W8, [X22 + 0x7C2]
	0x01FA0784 LDR X1, [X23]
	0x01FA0788 MOV X0, X19
	0x01FA078C BL 0x21A3F50
	0x01FA0790 STR X0, [X19 + 0xA8]
	0x01FA0794 LDR X1, [X21]
	0x01FA0798 MOV X0, X19
	0x01FA079C BL 0x21A3894
	0x01FA07A0 STR X0, [X19 + 0x80]
	0x01FA07A4 LDR X1, [X20]
	0x01FA07A8 MOV X0, X19
	0x01FA07AC BL 0x21A3AF8
	0x01FA07B0 STR X0, [X19 + 0xB0]
	0x01FA07B4 LDP X20, X19, [X31 + 0x20]
	0x01FA07B8 LDP X22, X21, [X31 + 0x10]
	0x01FA07BC LDP X30, X23, [X31], #0x30
	0x01FA07C0 RET
	0x01FA07C4 STP X30, X19, [X31 - 0x10]!
	0x01FA07C8 MOV X1, X31
	0x01FA07CC MOV X19, X0
	0x01FA07D0 BL 0x1E73F88
	0x01FA07D4 MOVZ W1, 0x1
	0x01FA07D8 MOVZ W2, 0x1
	0x01FA07DC MOV X0, X19
	0x01FA07E0 MOV X3, X31
	0x01FA07E4 BL 0x1E73EA0
	0x01FA07E8 STR X0, [X19 + 0xB8]
	0x01FA07EC LDP X30, X19, [X31], #0x10
	0x01FA07F0 RET
	0x01FA07F4 SUB X31, X31, 0x40
	0x01FA07F8 STR X30, [X31 + 0x20]
	0x01FA07FC STP X20, X19, [X31 + 0x30]
	0x01FA0800 ADRP X20, 0x2439000
	0x01FA0804 LDRB W8, [X20 + 0x7C3]
	0x01FA0808 MOV X19, X0
	0x01FA080C TBNZ X8, 0x0, 0x1FA0824
	0x01FA0810 ADRP X0, 0x217B000
	0x01FA0814 LDR X0, [X0 + 0x2A8]
	0x01FA0818 BL 0x1C16CF4
	0x01FA081C MOVZ W8, 0x1
	0x01FA0820 STRB W8, [X20 + 0x7C3]
	0x01FA0824 MOV X0, X19
	0x01FA0828 MOV X1, X31
	0x01FA082C STP X31, X31, [X31 + 0x10]
	0x01FA0830 BL 0x1E79788
	0x01FA0834 MOV X0, X19
	0x01FA0838 BL 0x1FA0698
	0x01FA083C TBZ X0, 0x0, 0x1FA084C
	0x01FA0840 MOV X0, X19
	0x01FA0844 BL 0x1FA08D8
	0x01FA0848 B 0x1FA08C4
	0x01FA084C LDR X0, [X19 + 0xB8]
	0x01FA0850 CBZ X0, 0x1FA08D4
	0x01FA0854 MOVZ W2, 0x1
	0x01FA0858 MOV X1, X19
	0x01FA085C MOV X3, X31
	0x01FA0860 BL 0x1E73F5C
	0x01FA0864 STP X0, X1, [X31]
	0x01FA0868 ADD X0, X31, 0x0
	0x01FA086C MOV X1, X31
	0x01FA0870 BL 0x1E75FB4
	0x01FA0874 STP X0, X1, [X31 + 0x10]
	0x01FA0878 ADD X0, X31, 0x10
	0x01FA087C MOV X1, X31
	0x01FA0880 BL 0x1E76088
	0x01FA0884 TBZ X0, 0x0, 0x1FA08C4
	0x01FA0888 ADRP X20, 0x217B000
	0x01FA088C LDR X20, [X20 + 0x2A8]
	0x01FA0890 ADD X0, X31, 0x10
	0x01FA0894 MOV X1, X31
	0x01FA0898 BL 0x1E76048
	0x01FA089C LDR X1, [X20]
	0x01FA08A0 MOV X2, X31
	0x01FA08A4 BL 0x321BA08
	0x01FA08A8 TBZ X0, 0x0, 0x1FA08B4
	0x01FA08AC MOV X0, X19
	0x01FA08B0 BL 0x1FA09B8
	0x01FA08B4 ADD X0, X31, 0x10
	0x01FA08B8 MOV X1, X31
	0x01FA08BC BL 0x1E76088

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x243A000
	006 Move W8, [X20+1974]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2154000
	013 Move X0, [X0+1432]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1974], W8
	017 Move W8, [X19+16]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X20, [X19+32]
	020 Move X9, -21438464
	021 Add X9, X9, 3182
	022 NotImplemented "Instruction ADR not yet implemented."
	023 Move W11, [X9]
	024 Add X10, X10, X11
	025 CallNoReturn X10
	026 Move TEMP, 0
	027 Not TEMP
	028 Move W8, TEMP
	029 Move [X19+16], W8
	030 Compare X20, 0
	031 JumpIfEqual {150}
	032 Move X8, [X20+48]
	033 Compare X8, 0
	034 JumpIfEqual {150}
	035 Move X9, 0x2154000
	036 Move X9, [X9+1432]
	037 Move X21, [X8+32]
	038 Move X0, [X9]
	039 Move W9, [X0+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X21
	044 Move X1, X31
	045 Call Object.op_Implicit, X0
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {67}
	050 Move X8, [X20+48]
	051 Compare X8, 0
	052 JumpIfEqual {150}
	053 Move X0, [X8+32]
	054 Compare X0, 0
	055 JumpIfEqual {150}
	056 Move S0, -1
	057 Call Fader.FadeIn, X0, V0
	058 Move [X19+24], X0
	059 Move W0, 1
	060 Move [X19+16], W0
	061 Move TEMP, 0
	062 Not TEMP
	063 Move W8, TEMP
	064 Move [X19+16], W8
	065 Compare X20, 0
	066 JumpIfEqual {150}
	067 Move X8, [X20]
	068 Move S1, [X19+44]
	069 Move S2, [X19+48]
	070 Move V0, [X19+40]
	071 Move X0, X20
	072 Move X9, [X8+712]
	073 Move X1, [X8+720]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move X8, [X20+48]
	076 Compare X8, 0
	077 JumpIfEqual {150}
	078 Move X9, 0x2154000
	079 Move X9, [X9+1432]
	080 Move X21, [X8+32]
	081 Move X0, [X9]
	082 Move W9, [X0+224]
	083 Compare W9, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move X0, X21
	087 Move X1, X31
	088 Call Object.op_Implicit, X0
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {109}
	093 Move X8, [X20+48]
	094 Compare X8, 0
	095 JumpIfEqual {150}
	096 Move X0, [X8+32]
	097 Compare X0, 0
	098 JumpIfEqual {150}
	099 Move S0, -1
	100 Call Fader.WaitBlinkDuration, X0, V0
	101 Move W8, 2
	102 Move [X19+24], X0
	103 Move TEMP, 0
	104 Not TEMP
	105 Move W8, TEMP
	106 Move [X19+16], W8
	107 Compare X20, 0
	108 JumpIfEqual {150}
	109 Move X8, [X20+48]
	110 Compare X8, 0
	111 JumpIfEqual {150}
	112 Move X9, 0x2154000
	113 Move X9, [X9+1432]
	114 Move X21, [X8+32]
	115 Move X0, [X9]
	116 Move W9, [X0+224]
	117 Compare W9, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1C17DFC
	120 Move X0, X21
	121 Move X1, X31
	122 Call Object.op_Implicit, X0
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfNotEqual {139}
	127 Move X8, [X20+48]
	128 Compare X8, 0
	129 JumpIfEqual {150}
	130 Move X0, [X8+32]
	131 Compare X0, 0
	132 JumpIfEqual {150}
	133 Move S0, -1
	134 Call Fader.FadeOut, X0, V0
	135 Move [X19+24], X0
	136 Move W8, 3
	137 Move [X19+16], W8
	138 Move W0, 1
	139 Move W0, W31
	140 Move W0, W31
	141 Move TEMP, 0
	142 Not TEMP
	143 Move W8, TEMP
	144 Move [X19+16], W8
	145 Move X20, [X31+16]
	146 Move X19, [X31+24]
	147 Move X30, [X31+32]
	148 Move X21, [X31+40]
	149 Return X0
	150 Call 0x1C17F20

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x01FA08C0 TBNZ X0, 0x0, 0x1FA0890
	0x01FA08C4 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01FA08C8 LDR X30, [X31 + 0x20]
	0x01FA08CC ADD X31, X31, 0x40
	0x01FA08D0 RET
	0x01FA08D4 BL 0x1C16F20
	0x01FA08D8 SUB X31, X31, 0x60
	0x01FA08DC STR X30, [X31 + 0x40]
	0x01FA08E0 STP X20, X19, [X31 + 0x50]
	0x01FA08E4 ADRP X19, 0x2439000
	0x01FA08E8 LDRB W8, [X19 + 0x7C5]
	0x01FA08EC MOV X20, X0
	0x01FA08F0 TBNZ X8, 0x0, 0x1FA0908
	0x01FA08F4 ADRP X0, 0x217B000
	0x01FA08F8 LDR X0, [X0 + 0x140]
	0x01FA08FC BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x2154000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x217C000
	011 Move X0, [X0+528]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01FA0900 MOVZ W8, 0x1
	0x01FA0904 STRB W8, [X19 + 0x7C5]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

