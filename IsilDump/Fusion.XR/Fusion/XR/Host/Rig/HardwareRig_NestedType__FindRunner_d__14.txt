Type: Fusion.XR.Host.Rig.HardwareRig/<FindRunner>d__14

Method: System.Void MoveNext()

Disassembly:
	0x01FA0908 LDR X19, [X20 + 0xB0]
	0x01FA090C CBZ X19, 0x1FA09A4
	0x01FA0910 MOV X0, X20
	0x01FA0914 BL 0x1FA06D8
	0x01FA0918 CBZ X0, 0x1FA09B4
	0x01FA091C LDUR X8, [X0 + 0x34]
	0x01FA0920 LDUR V0, [X0 + 0x24]
	0x01FA0924 ADRP X10, 0x217B000
	0x01FA0928 STR X8, [X31 + 0x10]
	0x01FA092C STR V0, [X31]
	0x01FA0930 LDR X8, [X19]
	0x01FA0934 LDR X10, [X10 + 0x140]
	0x01FA0938 LDRH W9, [X8 + 0x12E]
	0x01FA093C LDR X1, [X10]
	0x01FA0940 CBZ X9, 0x1FA0964
	0x01FA0944 LDR X10, [X8 + 0xB0]
	0x01FA0948 ADD X10, X10, 0x8
	0x01FA094C LDUR X11, [X10 - 0x8]
	0x01FA0950 CMP X11, X1
	0x01FA0954 B.EQ 0x1FA0974
	0x01FA0958 SUBS X9, X9, 0x1
	0x01FA095C ADD X10, X10, 0x10
	0x01FA0960 B.NE 0x1FA094C
	0x01FA0964 MOV X0, X19
	0x01FA0968 MOV W2, W31
	0x01FA096C BL 0x1C5C788
	0x01FA0970 B 0x1FA0980
	0x01FA0974 LDRSW X9, [X10]
	0x01FA0978 ADD X8, X8, X9, 0x4, LSL
	0x01FA097C ADD X0, X8, 0x138
	0x01FA0980 LDR V0, [X31]
	0x01FA0984 LDR X8, [X31 + 0x10]
	0x01FA0988 LDR X9, [X0]
	0x01FA098C ADD X1, X31, 0x20
	0x01FA0990 STR V0, [X31 + 0x2]
	0x01FA0994 STR X8, [X31 + 0x30]
	0x01FA0998 LDR X2, [X0 + 0x8]
	0x01FA099C MOV X0, X19
	0x01FA09A0 BLR X9
	0x01FA09A4 LDP X20, X19, [X31 + 0x50]
	0x01FA09A8 LDR X30, [X31 + 0x40]
	0x01FA09AC ADD X31, X31, 0x60
	0x01FA09B0 RET
	0x01FA09B4 BL 0x1C16F20
	0x01FA09B8 SUB X31, X31, 0x60
	0x01FA09BC STR X30, [X31 + 0x40]
	0x01FA09C0 STP X20, X19, [X31 + 0x50]
	0x01FA09C4 ADRP X19, 0x2439000
	0x01FA09C8 LDRB W8, [X19 + 0x7C4]
	0x01FA09CC MOV X20, X0
	0x01FA09D0 TBNZ X8, 0x0, 0x1FA09E8
	0x01FA09D4 ADRP X0, 0x217B000
	0x01FA09D8 LDR X0, [X0 + 0x140]
	0x01FA09DC BL 0x1C16CF4
	0x01FA09E0 MOVZ W8, 0x1
	0x01FA09E4 STRB W8, [X19 + 0x7C4]
	0x01FA09E8 LDR X19, [X20 + 0xB0]
	0x01FA09EC CBZ X19, 0x1FA0A78
	0x01FA09F0 LDR X8, [X20 + 0x98]
	0x01FA09F4 LDUR V0, [X20 + 0x88]
	0x01FA09F8 ADRP X10, 0x217B000
	0x01FA09FC STR X8, [X31 + 0x10]
	0x01FA0A00 STR V0, [X31]
	0x01FA0A04 LDR X8, [X19]
	0x01FA0A08 LDR X10, [X10 + 0x140]
	0x01FA0A0C LDRH W9, [X8 + 0x12E]
	0x01FA0A10 LDR X1, [X10]
	0x01FA0A14 CBZ X9, 0x1FA0A38
	0x01FA0A18 LDR X10, [X8 + 0xB0]
	0x01FA0A1C ADD X10, X10, 0x8
	0x01FA0A20 LDUR X11, [X10 - 0x8]
	0x01FA0A24 CMP X11, X1
	0x01FA0A28 B.EQ 0x1FA0A48
	0x01FA0A2C SUBS X9, X9, 0x1
	0x01FA0A30 ADD X10, X10, 0x10
	0x01FA0A34 B.NE 0x1FA0A20
	0x01FA0A38 MOV X0, X19
	0x01FA0A3C MOV W2, W31
	0x01FA0A40 BL 0x1C5C788
	0x01FA0A44 B 0x1FA0A54
	0x01FA0A48 LDRSW X9, [X10]
	0x01FA0A4C ADD X8, X8, X9, 0x4, LSL
	0x01FA0A50 ADD X0, X8, 0x138
	0x01FA0A54 LDR V0, [X31]
	0x01FA0A58 LDR X8, [X31 + 0x10]
	0x01FA0A5C LDR X9, [X0]
	0x01FA0A60 ADD X1, X31, 0x20
	0x01FA0A64 STR V0, [X31 + 0x2]
	0x01FA0A68 STR X8, [X31 + 0x30]
	0x01FA0A6C LDR X2, [X0 + 0x8]
	0x01FA0A70 MOV X0, X19
	0x01FA0A74 BLR X9
	0x01FA0A78 LDP X20, X19, [X31 + 0x50]
	0x01FA0A7C LDR X30, [X31 + 0x40]
	0x01FA0A80 ADD X31, X31, 0x60
	0x01FA0A84 RET
	0x01FA0A88 MOV X1, X31
	0x01FA0A8C B 0x1E74F04
	0x01FA0A90 STP X30, X21, [X31 - 0x20]!
	0x01FA0A94 STP X20, X19, [X31 + 0x10]
	0x01FA0A98 ADRP X21, 0x2439000
	0x01FA0A9C ADRP X20, 0x2153000
	0x01FA0AA0 LDRB W8, [X21 + 0x7C6]
	0x01FA0AA4 LDR X20, [X20 + 0x598]
	0x01FA0AA8 MOV X19, X0
	0x01FA0AAC TBNZ X8, 0x0, 0x1FA0AD0
	0x01FA0AB0 ADRP X0, 0x217B000
	0x01FA0AB4 LDR X0, [X0 + 0x108]
	0x01FA0AB8 BL 0x1C16CF4
	0x01FA0ABC ADRP X0, 0x2153000
	0x01FA0AC0 LDR X0, [X0 + 0x598]
	0x01FA0AC4 BL 0x1C16CF4
	0x01FA0AC8 MOVZ W8, 0x1
	0x01FA0ACC STRB W8, [X21 + 0x7C6]
	0x01FA0AD0 LDR X0, [X20]
	0x01FA0AD4 LDR X20, [X19 + 0x80]
	0x01FA0AD8 LDR W8, [X0 + 0xE0]
	0x01FA0ADC CBNZ W8, 0x1FA0AE4
	0x01FA0AE0 BL 0x1C16DFC
	0x01FA0AE4 MOV X0, X20
	0x01FA0AE8 MOV X1, X31
	0x01FA0AEC MOV X2, X31
	0x01FA0AF0 BL 0x3C3883C
	0x01FA0AF4 TBZ X0, 0x0, 0x1FA0B10
	0x01FA0AF8 ADRP X8, 0x217B000
	0x01FA0AFC LDR X8, [X8 + 0x108]
	0x01FA0B00 MOV X0, X19
	0x01FA0B04 LDR X1, [X8]
	0x01FA0B08 BL 0x21A3894
	0x01FA0B0C STR X0, [X19 + 0x80]
	0x01FA0B10 LDP X20, X19, [X31 + 0x10]
	0x01FA0B14 LDP X30, X21, [X31], #0x20
	0x01FA0B18 RET
	0x01FA0B1C MOV X1, X31
	0x01FA0B20 B 0x1E74F04
	0x01FA0B24 STP X30, X21, [X31 - 0x20]!
	0x01FA0B28 STP X20, X19, [X31 + 0x10]
	0x01FA0B2C ADRP X20, 0x2439000
	0x01FA0B30 ADRP X21, 0x217B000
	0x01FA0B34 LDRB W8, [X20 + 0x7C7]
	0x01FA0B38 LDR X21, [X21 + 0x108]
	0x01FA0B3C MOV X19, X0
	0x01FA0B40 TBNZ X8, 0x0, 0x1FA0B64
	0x01FA0B44 ADRP X0, 0x217B000
	0x01FA0B48 LDR X0, [X0 + 0x2B0]
	0x01FA0B4C BL 0x1C16CF4
	0x01FA0B50 ADRP X0, 0x217B000
	0x01FA0B54 LDR X0, [X0 + 0x108]
	0x01FA0B58 BL 0x1C16CF4
	0x01FA0B5C MOVZ W8, 0x1
	0x01FA0B60 STRB W8, [X20 + 0x7C7]
	0x01FA0B64 LDR X1, [X21]
	0x01FA0B68 MOV X0, X19
	0x01FA0B6C BL 0x21A3894
	0x01FA0B70 LDR X8, [X19 + 0x88]
	0x01FA0B74 STR X0, [X19 + 0xB0]
	0x01FA0B78 CBZ X8, 0x1FA0BB8
	0x01FA0B7C ADRP X20, 0x217B000
	0x01FA0B80 LDR X20, [X20 + 0x2B0]
	0x01FA0B84 MOV X0, X8
	0x01FA0B88 LDR X1, [X20]
	0x01FA0B8C BL 0x21A3894
	0x01FA0B90 LDR X8, [X19 + 0x90]
	0x01FA0B94 STR X0, [X19 + 0xA0]
	0x01FA0B98 CBZ X8, 0x1FA0BB8
	0x01FA0B9C LDR X1, [X20]
	0x01FA0BA0 MOV X0, X8
	0x01FA0BA4 BL 0x21A3894
	0x01FA0BA8 STR X0, [X19 + 0xA8]
	0x01FA0BAC LDP X20, X19, [X31 + 0x10]
	0x01FA0BB0 LDP X30, X21, [X31], #0x20
	0x01FA0BB4 RET
	0x01FA0BB8 BL 0x1C16F20
	0x01FA0BBC STR X30, [X31 - 0x20]!
	0x01FA0BC0 STP X20, X19, [X31 + 0x10]
	0x01FA0BC4 ADRP X20, 0x2439000
	0x01FA0BC8 LDRB W8, [X20 + 0x7C8]
	0x01FA0BCC MOV X19, X0
	0x01FA0BD0 TBNZ X8, 0x0, 0x1FA0C0C
	0x01FA0BD4 ADRP X0, 0x2153000
	0x01FA0BD8 LDR X0, [X0 + 0xA28]
	0x01FA0BDC BL 0x1C16CF4
	0x01FA0BE0 ADRP X0, 0x217B000
	0x01FA0BE4 LDR X0, [X0 + 0x40]
	0x01FA0BE8 BL 0x1C16CF4
	0x01FA0BEC ADRP X0, 0x2153000
	0x01FA0BF0 LDR X0, [X0 + 0x598]
	0x01FA0BF4 BL 0x1C16CF4
	0x01FA0BF8 ADRP X0, 0x217B000
	0x01FA0BFC LDR X0, [X0 + 0x2B8]
	0x01FA0C00 BL 0x1C16CF4
	0x01FA0C04 MOVZ W8, 0x1
	0x01FA0C08 STRB W8, [X20 + 0x7C8]
	0x01FA0C0C MOV X0, X19
	0x01FA0C10 MOV X1, X31
	0x01FA0C14 BL 0x1E73F88
	0x01FA0C18 LDR X0, [X19 + 0x40]
	0x01FA0C1C CBZ X0, 0x1FA0CA8
	0x01FA0C20 MOV X1, X31
	0x01FA0C24 BL 0x1E93588
	0x01FA0C28 TBZ X0, 0x0, 0x1FA0C9C
	0x01FA0C2C ADRP X8, 0x2153000
	0x01FA0C30 LDR X8, [X8 + 0x598]
	0x01FA0C34 LDR X0, [X8]
	0x01FA0C38 LDR W8, [X0 + 0xE0]
	0x01FA0C3C CBNZ W8, 0x1FA0C44
	0x01FA0C40 BL 0x1C16DFC
	0x01FA0C44 ADRP X8, 0x217B000
	0x01FA0C48 LDR X8, [X8 + 0x40]
	0x01FA0C4C LDR X0, [X8]
	0x01FA0C50 BL 0x222D02C
	0x01FA0C54 MOV X1, X31
	0x01FA0C58 MOV X2, X31
	0x01FA0C5C STR X0, [X19 + 0x80]
	0x01FA0C60 BL 0x3C3883C
	0x01FA0C64 TBZ X0, 0x0, 0x1FA0C9C
	0x01FA0C68 ADRP X8, 0x2153000
	0x01FA0C6C LDR X8, [X8 + 0xA28]
	0x01FA0C70 LDR X0, [X8]
	0x01FA0C74 LDR W8, [X0 + 0xE0]
	0x01FA0C78 CBNZ W8, 0x1FA0C80
	0x01FA0C7C BL 0x1C16DFC
	0x01FA0C80 ADRP X8, 0x217B000
	0x01FA0C84 LDR X8, [X8 + 0x2B8]
	0x01FA0C88 LDP X20, X19, [X31 + 0x10]
	0x01FA0C8C MOV X1, X31
	0x01FA0C90 LDR X0, [X8]
	0x01FA0C94 LDR X30, [X31], #0x20
	0x01FA0C98 B 0x3C0649C
	0x01FA0C9C LDP X20, X19, [X31 + 0x10]
	0x01FA0CA0 LDR X30, [X31], #0x20
	0x01FA0CA4 RET
	0x01FA0CA8 BL 0x1C16F20
	0x01FA0CAC STR X29, [X31 - 0x30]!
	0x01FA0CB0 STP X30, X21, [X31 + 0x10]
	0x01FA0CB4 STP X20, X19, [X31 + 0x20]
	0x01FA0CB8 SUB X31, X31, 0x780
	0x01FA0CBC ADRP X21, 0x2439000
	0x01FA0CC0 ADRP X20, 0x217B000
	0x01FA0CC4 LDRB W8, [X21 + 0x7C9]
	0x01FA0CC8 LDR X20, [X20 + 0x2C0]
	0x01FA0CCC MOV X19, X0
	0x01FA0CD0 TBNZ X8, 0x0, 0x1FA0CE8
	0x01FA0CD4 ADRP X0, 0x217B000
	0x01FA0CD8 LDR X0, [X0 + 0x2C0]
	0x01FA0CDC BL 0x1C16CF4
	0x01FA0CE0 MOVZ W8, 0x1
	0x01FA0CE4 STRB W8, [X21 + 0x7C9]
	0x01FA0CE8 ADD X0, X31, 0x630
	0x01FA0CEC MOVZ W2, 0x150
	0x01FA0CF0 MOV W1, W31
	0x01FA0CF4 BL 0x3EB1B10
	0x01FA0CF8 MOV X0, X19
	0x01FA0CFC MOV X1, X31
	0x01FA0D00 BL 0x1E73D04
	0x01FA0D04 LDR X2, [X20]
	0x01FA0D08 ADD X1, X31, 0x630
	0x01FA0D0C MOV X0, X19
	0x01FA0D10 BL 0x2226244
	0x01FA0D14 TBZ X0, 0x0, 0x1FA0F4C
	0x01FA0D18 MOV X0, X19
	0x01FA0D1C MOV X1, X31
	0x01FA0D20 BL 0x3C32E90
	0x01FA0D24 CBZ X0, 0x1FA0F60
	0x01FA0D28 LDR V2, [X31 + 0x638]
	0x01FA0D2C LDR V1, [X31 + 0x634]
	0x01FA0D30 LDR V0, [X31 + 0x630]
	0x01FA0D34 MOV X1, X31
	0x01FA0D38 BL 0x3C3F62C
	0x01FA0D3C MOV X0, X19
	0x01FA0D40 MOV X1, X31
	0x01FA0D44 BL 0x3C32E90
	0x01FA0D48 CBZ X0, 0x1FA0F60
	0x01FA0D4C LDR V3, [X31 + 0x648]
	0x01FA0D50 LDR V2, [X31 + 0x644]
	0x01FA0D54 LDR V1, [X31 + 0x640]
	0x01FA0D58 LDR V0, [X31 + 0x63C]
	0x01FA0D5C MOV X1, X31
	0x01FA0D60 BL 0x3C3F7AC
	0x01FA0D64 LDR X0, [X19 + 0x88]
	0x01FA0D68 CBZ X0, 0x1FA0F60
	0x01FA0D6C MOV X1, X31
	0x01FA0D70 BL 0x3C32E90
	0x01FA0D74 CBZ X0, 0x1FA0F60
	0x01FA0D78 LDR V2, [X31 + 0x654]
	0x01FA0D7C LDR V1, [X31 + 0x650]
	0x01FA0D80 LDR V0, [X31 + 0x64C]
	0x01FA0D84 MOV X1, X31
	0x01FA0D88 BL 0x3C3F62C
	0x01FA0D8C LDR X0, [X19 + 0x88]
	0x01FA0D90 CBZ X0, 0x1FA0F60
	0x01FA0D94 MOV X1, X31
	0x01FA0D98 BL 0x3C32E90
	0x01FA0D9C CBZ X0, 0x1FA0F60
	0x01FA0DA0 LDR V3, [X31 + 0x664]
	0x01FA0DA4 LDR V2, [X31 + 0x660]
	0x01FA0DA8 LDR V1, [X31 + 0x65C]
	0x01FA0DAC LDR V0, [X31 + 0x658]
	0x01FA0DB0 MOV X1, X31
	0x01FA0DB4 BL 0x3C3F7AC
	0x01FA0DB8 LDR X0, [X19 + 0x90]
	0x01FA0DBC CBZ X0, 0x1FA0F60
	0x01FA0DC0 MOV X1, X31
	0x01FA0DC4 BL 0x3C32E90
	0x01FA0DC8 CBZ X0, 0x1FA0F60
	0x01FA0DCC LDR V2, [X31 + 0x670]
	0x01FA0DD0 LDR V1, [X31 + 0x66C]
	0x01FA0DD4 LDR V0, [X31 + 0x668]
	0x01FA0DD8 MOV X1, X31
	0x01FA0DDC BL 0x3C3F62C
	0x01FA0DE0 LDR X0, [X19 + 0x90]
	0x01FA0DE4 CBZ X0, 0x1FA0F60
	0x01FA0DE8 MOV X1, X31
	0x01FA0DEC BL 0x3C32E90
	0x01FA0DF0 CBZ X0, 0x1FA0F60
	0x01FA0DF4 LDR V3, [X31 + 0x680]
	0x01FA0DF8 LDR V2, [X31 + 0x67C]
	0x01FA0DFC LDR V1, [X31 + 0x678]
	0x01FA0E00 LDR V0, [X31 + 0x674]
	0x01FA0E04 MOV X1, X31
	0x01FA0E08 BL 0x3C3F7AC
	0x01FA0E0C LDR X0, [X19 + 0x98]
	0x01FA0E10 CBZ X0, 0x1FA0F60
	0x01FA0E14 MOV X1, X31
	0x01FA0E18 BL 0x3C32E90
	0x01FA0E1C CBZ X0, 0x1FA0F60
	0x01FA0E20 LDR V2, [X31 + 0x68C]
	0x01FA0E24 LDR V1, [X31 + 0x688]
	0x01FA0E28 LDR V0, [X31 + 0x684]
	0x01FA0E2C MOV X1, X31
	0x01FA0E30 BL 0x3C3F62C
	0x01FA0E34 LDR X0, [X19 + 0x98]
	0x01FA0E38 CBZ X0, 0x1FA0F60
	0x01FA0E3C MOV X1, X31
	0x01FA0E40 BL 0x3C32E90
	0x01FA0E44 CBZ X0, 0x1FA0F60
	0x01FA0E48 LDR V3, [X31 + 0x69C]
	0x01FA0E4C LDR V2, [X31 + 0x698]
	0x01FA0E50 LDR V1, [X31 + 0x694]
	0x01FA0E54 LDR V0, [X31 + 0x690]
	0x01FA0E58 MOV X1, X31
	0x01FA0E5C BL 0x3C3F7AC
	0x01FA0E60 LDR X20, [X19 + 0x88]
	0x01FA0E64 ADD X0, X31, 0x4E0
	0x01FA0E68 ADD X1, X31, 0x630
	0x01FA0E6C MOVZ W2, 0x150
	0x01FA0E70 BL 0x3EB1AC0
	0x01FA0E74 LDR V0, [X31 + 0x55]
	0x01FA0E78 LDR X8, [X31 + 0x560]
	0x01FA0E7C STR V0, [X31 + 0x4C]
	0x01FA0E80 STR X8, [X31 + 0x4D0]
	0x01FA0E84 CBZ X20, 0x1FA0F60
	0x01FA0E88 LDR X8, [X31 + 0x4D0]
	0x01FA0E8C LDR V0, [X31 + 0x4C]
	0x01FA0E90 ADD X0, X31, 0x370
	0x01FA0E94 ADD X1, X31, 0x630
	0x01FA0E98 STR X8, [X20 + 0x98]
	0x01FA0E9C STUR V0, [X20 + 0x88]
	0x01FA0EA0 LDR X20, [X19 + 0x90]
	0x01FA0EA4 MOVZ W2, 0x150
	0x01FA0EA8 BL 0x3EB1AC0
	0x01FA0EAC ADD X8, X31, 0x2F9
	0x01FA0EB0 LDUR V0, [X8 + 0xFF]
	0x01FA0EB4 LDR X8, [X31 + 0x408]
	0x01FA0EB8 STR V0, [X31 + 0x35]
	0x01FA0EBC STR X8, [X31 + 0x360]
	0x01FA0EC0 CBZ X20, 0x1FA0F60
	0x01FA0EC4 LDR X8, [X31 + 0x360]
	0x01FA0EC8 LDR V0, [X31 + 0x35]
	0x01FA0ECC ADD X0, X31, 0x200
	0x01FA0ED0 ADD X1, X31, 0x630
	0x01FA0ED4 STR X8, [X20 + 0x98]
	0x01FA0ED8 STUR V0, [X20 + 0x88]
	0x01FA0EDC LDR X20, [X19 + 0xA0]
	0x01FA0EE0 MOVZ W2, 0x150
	0x01FA0EE4 ADD X21, X31, 0x200
	0x01FA0EE8 BL 0x3EB1AC0
	0x01FA0EEC ADD X1, X21, 0xA0
	0x01FA0EF0 ADD X0, X31, 0x1A8
	0x01FA0EF4 MOVZ W2, 0x58
	0x01FA0EF8 BL 0x3EB1AC0
	0x01FA0EFC CBZ X20, 0x1FA0F60
	0x01FA0F00 ADD X0, X20, 0x80
	0x01FA0F04 ADD X1, X31, 0x1A8
	0x01FA0F08 MOVZ W2, 0x58
	0x01FA0F0C BL 0x3EB1AC0
	0x01FA0F10 LDR X19, [X19 + 0xA8]
	0x01FA0F14 ADD X0, X31, 0x58
	0x01FA0F18 ADD X1, X31, 0x630
	0x01FA0F1C MOVZ W2, 0x150
	0x01FA0F20 ADD X20, X31, 0x58
	0x01FA0F24 BL 0x3EB1AC0
	0x01FA0F28 ADD X1, X20, 0xF8
	0x01FA0F2C ADD X0, X31, 0x0
	0x01FA0F30 MOVZ W2, 0x58
	0x01FA0F34 BL 0x3EB1AC0
	0x01FA0F38 CBZ X19, 0x1FA0F60
	0x01FA0F3C ADD X0, X19, 0x80
	0x01FA0F40 ADD X1, X31, 0x0
	0x01FA0F44 MOVZ W2, 0x58
	0x01FA0F48 BL 0x3EB1AC0
	0x01FA0F4C ADD X31, X31, 0x780

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x243A000
	015 Move W8, [X20+1975]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {56}
	021 Move X0, 0x217C000
	022 Move X0, [X0+536]
	023 Call 0x1C17CF4
	024 Move X0, 0x217C000
	025 Move X0, [X0+544]
	026 Call 0x1C17CF4
	027 Move X0, 0x217C000
	028 Move X0, [X0+392]
	029 Call 0x1C17CF4
	030 Move X0, 0x2154000
	031 Move X0, [X0+2600]
	032 Call 0x1C17CF4
	033 Move X0, 0x217C000
	034 Move X0, [X0+552]
	035 Call 0x1C17CF4
	036 Move X0, 0x217C000
	037 Move X0, [X0+560]
	038 Call 0x1C17CF4
	039 Move X0, 0x215D000
	040 Move X0, [X0+3712]
	041 Call 0x1C17CF4
	042 Move X0, 0x217C000
	043 Move X0, [X0+568]
	044 Call 0x1C17CF4
	045 Move X0, 0x2154000
	046 Move X0, [X0+1432]
	047 Call 0x1C17CF4
	048 Move X0, 0x2155000
	049 Move X0, [X0+1976]
	050 Call 0x1C17CF4
	051 Move X0, 0x217C000
	052 Move X0, [X0+576]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X20+1975], W8
	056 Move [X31+8], X31
	057 Move X24, 0x2154000
	058 Move X22, 0x217C000
	059 Move X25, 0x2155000
	060 Move W8, [X19]
	061 Move X23, [X19+32]
	062 Move X24, [X24+1432]
	063 Move X22, [X22+392]
	064 Move X25, [X25+1976]
	065 Compare W8, 0
	066 JumpIfEqual {75}
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X8, [X19+40]
	069 Move TEMP, 0
	070 Not TEMP
	071 Move W9, TEMP
	072 Move [X31+8], X8
	073 Move [X19+40], X31
	074 Move [X19], W9
	075 Move X8, [X19+40]
	076 Move TEMP, 0
	077 Not TEMP
	078 Move W9, TEMP
	079 Move [X31+8], X8
	080 Move [X19+40], X31
	081 Move [X19], W9
	082 Add X0, X31, 8
	083 Move X1, X31
	084 Call TaskAwaiter.GetResult, X0
	085 Compare X23, 0
	086 JumpIfEqual {252}
	087 Move X20, 0x215D000
	088 Move X26, 0x217C000
	089 Move X27, 0x217C000
	090 Move X20, [X20+3712]
	091 Move X26, [X26+552]
	092 Move X27, [X27+560]
	093 Move X28, 0x243A000
	094 Move W29, 1
	095 Move W8, [X23+68]
	096 Compare W8, 0
	097 JumpIfEqual {321}
	098 Move X0, [X24]
	099 Move X21, [X23+56]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move X0, X21
	105 Move X1, X31
	106 Move X2, X31
	107 Call Object.op_Equality, X0, X1
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {321}
	112 Move X0, [X20]
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Move W8, [X28+957]
	118 Compare W8, 0
	119 JumpIfNotEqual {123}
	120 Move X0, X20
	121 Call 0x1C17CF4
	122 Move [X28+957], W29
	123 Move X0, [X20]
	124 Move W8, [X0+224]
	125 Compare W8, 0
	126 JumpIfNotEqual {129}
	127 Call 0x1C17DFC
	128 Move X0, [X20]
	129 Move X8, [X0+184]
	130 Move X21, [X8]
	131 Compare X21, 0
	132 JumpIfEqual {250}
	133 Move X8, [X21]
	134 Move X1, [X26]
	135 NotImplemented "Instruction LDRH not yet implemented."
	136 Compare X9, 0
	137 JumpIfEqual {144}
	138 Move X10, [X8+176]
	139 Add X10, X10, 8
	140 NotImplemented "Instruction LDUR not yet implemented."
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Subtract X9, X9, 1
	143 Add X10, X10, 16
	144 Move X0, X21
	145 Move W2, W31
	146 Call 0x1C5D788
	147 NotImplemented "Instruction LDRSW not yet implemented."
	148 Add X8, X8, X9
	149 Add X0, X8, 312
	150 Move X8, [X0]
	151 Move X1, [X0+8]
	152 Move X0, X21
	153 NotImplemented "Instruction BLR not yet implemented."
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X0, [X20]
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move W8, [X28+957]
	161 Compare W8, 0
	162 JumpIfNotEqual {166}
	163 Move X0, X20
	164 Call 0x1C17CF4
	165 Move [X28+957], W29
	166 Move X0, [X20]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {172}
	170 Call 0x1C17DFC
	171 Move X0, [X20]
	172 Move X8, [X0+184]
	173 Move X21, [X8]
	174 Compare X21, 0
	175 JumpIfEqual {251}
	176 Move X8, [X21]
	177 Move X1, [X27]
	178 NotImplemented "Instruction LDRH not yet implemented."
	179 Compare X9, 0
	180 JumpIfEqual {187}
	181 Move X10, [X8+176]
	182 Add X10, X10, 8
	183 NotImplemented "Instruction LDUR not yet implemented."
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Subtract X9, X9, 1
	186 Add X10, X10, 16
	187 Move X0, X21
	188 Move W2, W31
	189 Call 0x1C5D788
	190 Move X21, [X23+56]
	191 NotImplemented "Instruction LDRSW not yet implemented."
	192 Add X8, X8, X9
	193 Add X0, X8, 312
	194 Move X8, [X0]
	195 Move X2, [X0+8]
	196 Move X0, X21
	197 Move W1, W31
	198 NotImplemented "Instruction BLR not yet implemented."
	199 Move X21, X0
	200 Move [X23+56], X0
	201 Move X0, [X24]
	202 Move W8, [X0+224]
	203 Compare W8, 0
	204 JumpIfNotEqual {206}
	205 Call 0x1C17DFC
	206 Move X0, X21
	207 Move X1, X31
	208 Move X2, X31
	209 Call Object.op_Equality, X0, X1
	210 Move TEMP, X0
	211 And TEMP, TEMP, 1
	212 Compare TEMP, 1
	213 JumpIfNotEqual {95}
	214 Move X0, [X25]
	215 Move W8, [X0+224]
	216 Compare W8, 0
	217 JumpIfNotEqual {219}
	218 Call 0x1C17DFC
	219 Move W0, 10
	220 Move X1, X31
	221 Call Task.Delay, X0
	222 Compare X0, 0
	223 JumpIfEqual {253}
	224 Move X1, X31
	225 Call Task.GetAwaiter, X0
	226 Move [X31+8], X0
	227 Add X0, X31, 8
	228 Move X1, X31
	229 Call TaskAwaiter.get_IsCompleted, X0
	230 Move TEMP, X0
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfEqual {82}
	234 Move W8, 1
	235 Move [X19], W8
	236 Move X8, [X31+8]
	237 Move [X19+40], X8
	238 Move X0, [X22]
	239 Move W8, [X0+224]
	240 Compare W8, 0
	241 JumpIfNotEqual {243}
	242 Call 0x1C17DFC
	243 Move X8, 0x217C000
	244 Move X8, [X8+536]
	245 Add X0, X19, 8
	246 Move X3, [X8]
	247 Add X1, X31, 8
	248 Move X2, X19
	249 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	250 Call 0x1C17F20
	251 Call 0x1C17F20
	252 Call 0x1C17F20
	253 Call 0x1C17F20
	254 Move W8, [X23+68]
	255 Compare W8, 0
	256 JumpIfEqual {283}
	257 Move X0, [X25]
	258 Move W8, [X0+224]
	259 Compare W8, 0
	260 JumpIfNotEqual {262}
	261 Call 0x1C17DFC
	262 Move W0, 10
	263 Move X1, X31
	264 Call Task.Delay, X0
	265 Compare X0, 0
	266 JumpIfEqual {380}
	267 Move X1, X31
	268 Call Task.GetAwaiter, X0
	269 Move [X31+8], X0
	270 Add X0, X31, 8
	271 Move X1, X31
	272 Call TaskAwaiter.get_IsCompleted, X0
	273 Move TEMP, X0
	274 And TEMP, TEMP, 1
	275 Compare TEMP, 1
	276 JumpIfNotEqual {338}
	277 Add X0, X31, 8
	278 Move X1, X31
	279 Call TaskAwaiter.GetResult, X0
	280 Compare X23, 0
	281 JumpIfNotEqual {254}
	282 Call 0x1C17F20
	283 Move W8, 1
	284 Move [X23+68], W8
	285 Move X0, [X24]
	286 Move X20, [X23+56]
	287 Move W8, [X0+224]
	288 Compare W8, 0
	289 JumpIfNotEqual {291}
	290 Call 0x1C17DFC
	291 Move X0, X20
	292 Move X1, X31
	293 Move X2, X31
	294 Call Object.op_Equality, X0, X1
	295 Move TEMP, X0
	296 And TEMP, TEMP, 1
	297 Compare TEMP, 1
	298 JumpIfNotEqual {321}
	299 Move W8, [X23+64]
	300 Compare W8, 0
	301 JumpIfEqual {321}
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Move X0, X31
	304 Call NetworkProjectConfig.get_Global
	305 Compare X0, 0
	306 JumpIfEqual {381}
	307 Move W8, [X0+32]
	308 NotImplemented "Instruction CMP not yet implemented."
	309 Move X8, 0x2154000
	310 Move X8, [X8+2600]
	311 Move X0, [X8]
	312 Move W8, [X0+224]
	313 Compare W8, 0
	314 JumpIfNotEqual {316}
	315 Call 0x1C17DFC
	316 Move X8, 0x217C000
	317 Move X8, [X8+576]
	318 Move X0, [X8]
	319 Move X1, X31
	320 Call Debug.LogWarning, X0
	321 Move TEMP, 1
	322 Not TEMP
	323 Move W8, TEMP
	324 Move [X23+68], W31
	325 Move X20, [X23+56]
	326 Move [X19+8], W8
	327 Move X0, [X22]
	328 Move X21, 0x217C000
	329 Move W8, [X0+224]
	330 Move X21, [X21+544]
	331 Compare W8, 0
	332 JumpIfNotEqual {334}
	333 Call 0x1C17DFC
	334 Move X2, [X21]
	335 Move X0, X19
	336 Move X1, X20
	337 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	338 Move [X19], W31
	339 Move X8, [X31+8]
	340 Move [X19+40], X8
	341 Move X0, [X22]
	342 Move W8, [X0+224]
	343 Compare W8, 0
	344 JumpIfNotEqual {346}
	345 Call 0x1C17DFC
	346 Move X8, 0x217C000
	347 Move X8, [X8+536]
	348 Add X0, X19, 8
	349 Move X3, [X8]
	350 Add X1, X31, 8
	351 Move X2, X19
	352 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	353 Move X20, [X31+96]
	354 Move X19, [X31+104]
	355 Move X22, [X31+80]
	356 Move X21, [X31+88]
	357 Move X24, [X31+64]
	358 Move X23, [X31+72]
	359 Move X26, [X31+48]
	360 Move X25, [X31+56]
	361 Move X28, [X31+32]
	362 Move X27, [X31+40]
	363 Move X29, [X31+16]
	364 Move X30, [X31+24]
	365 Add X31, X31, 112
	366 Return 
	367 Move X0, [X24]
	368 Move W8, [X0+224]
	369 Compare W8, 0
	370 JumpIfNotEqual {372}
	371 Call 0x1C17DFC
	372 Move X8, 0x217C000
	373 Move X8, [X8+568]
	374 Move X1, [X8]
	375 Move W0, 1
	376 Call 0x222E114, X0
	377 Move [X23+56], X0
	378 Move X0, X31
	379 Call Time.get_time
	380 Call 0x1C17F20
	381 Call 0x1C17F20
	382 Move X20, X0
	383 NotImplemented "Instruction CMP not yet implemented."
	384 Move X0, X20
	385 Call 0x3EB2AD0
	386 Move X20, X0
	387 Move X0, 0x2154000
	388 Move X0, [X0+2000]
	389 Call 0x1C17D08
	390 Move X8, [X20]
	391 Move X1, [X8]
	392 Call 0x1C18270
	393 Move TEMP, X0
	394 And TEMP, TEMP, 1
	395 Compare TEMP, 1
	396 JumpIfNotEqual {417}
	397 Move X20, [X20]
	398 Call 0x3EB2AE0
	399 Move TEMP, 1
	400 Not TEMP
	401 Move W8, TEMP
	402 Move [X19+8], W8
	403 Move X0, 0x217C000
	404 Move X0, [X0+392]
	405 Call 0x1C17D08
	406 Move W8, [X0+224]
	407 Compare W8, 0
	408 JumpIfNotEqual {410}
	409 Call 0x1C17DFC
	410 Move X0, 0x217C000
	411 Move X0, [X0+584]
	412 Call 0x1C17D08
	413 Move X2, X0
	414 Move X0, X19
	415 Move X1, X20
	416 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	417 Move W0, 8
	418 Call 0x3EB2AF0
	419 Move X8, [X20]
	420 Move [X0], X8
	421 Move X1, 0x1F15000
	422 Add X1, X1, 3672
	423 Move X2, X31
	424 Call 0x3EB2B00
	425 Move X20, X0
	426 Call 0x3EB2AE0
	427 Move X0, X20
	428 Call 0x1D2D690
	429 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x01FA0F50 LDP X20, X19, [X31 + 0x20]
	0x01FA0F54 LDP X30, X21, [X31 + 0x10]
	0x01FA0F58 LDR X29, [X31], #0x30
	0x01FA0F5C RET
	0x01FA0F60 BL 0x1C16F20
	0x01FA0F64 STR X30, [X31 - 0x20]!
	0x01FA0F68 STP X20, X19, [X31 + 0x10]
	0x01FA0F6C MOV X1, X31
	0x01FA0F70 MOV X19, X0
	0x01FA0F74 BL 0x1E79788
	0x01FA0F78 LDR X0, [X19 + 0x40]
	0x01FA0F7C CBZ X0, 0x1FA11D0
	0x01FA0F80 MOV X1, X31
	0x01FA0F84 BL 0x1E93588
	0x01FA0F88 TBZ X0, 0x0, 0x1FA11C4
	0x01FA0F8C MOV X0, X19
	0x01FA0F90 MOV X1, X31
	0x01FA0F94 BL 0x3C32E90
	0x01FA0F98 LDR X8, [X19 + 0x80]
	0x01FA0F9C CBZ X8, 0x1FA11D0
	0x01FA0FA0 MOV X20, X0
	0x01FA0FA4 MOV X0, X8
	0x01FA0FA8 MOV X1, X31
	0x01FA0FAC BL 0x3C32E90
	0x01FA0FB0 CBZ X0, 0x1FA11D0
	0x01FA0FB4 MOV X1, X31
	0x01FA0FB8 BL 0x3C3F58C
	0x01FA0FBC CBZ X20, 0x1FA11D0
	0x01FA0FC0 MOV X0, X20
	0x01FA0FC4 MOV X1, X31
	0x01FA0FC8 BL 0x3C3F62C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x243A000
	007 Move X21, 0x217C000
	008 Move W8, [X22+1976]
	009 Move X21, [X21+392]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x217C000
	017 Move X0, [X0+592]
	018 Call 0x1C17CF4
	019 Move X0, 0x217C000
	020 Move X0, [X0+392]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1976], W8
	024 Move X0, [X21]
	025 Move X21, 0x217C000
	026 Move W8, [X0+224]
	027 Move X21, [X21+592]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

