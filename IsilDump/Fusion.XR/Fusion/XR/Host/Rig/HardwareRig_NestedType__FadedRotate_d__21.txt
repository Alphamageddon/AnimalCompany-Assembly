Type: Fusion.XR.Host.Rig.HardwareRig/<FadedRotate>d__21

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01F9FBA8 LDR X21, [X23 + 0x38]
	0x01F9FBAC B 0x1F9FBD4
	0x01F9FBB0 LDRSW X9, [X10]
	0x01F9FBB4 ADD X8, X8, X9, 0x4, LSL
	0x01F9FBB8 ADD X0, X8, 0x138
	0x01F9FBBC LDP X8, X2, [X0]
	0x01F9FBC0 MOV X0, X21
	0x01F9FBC4 MOV W1, W31
	0x01F9FBC8 BLR X8
	0x01F9FBCC MOV X21, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01FA038C CBNZ W8, 0x1FA0398

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01FA0390 BL 0x1C16DFC
	0x01FA0394 LDR X0, [X21]
	0x01FA0398 LDR X8, [X0 + 0xB8]
	0x01FA039C ADD X2, X31, 0x10
	0x01FA03A0 MOV X0, X20
	0x01FA03A4 MOV X3, X31
	0x01FA03A8 LDR X1, [X8 + 0x98]
	0x01FA03AC BL 0x3E644E8
	0x01FA03B0 TBZ X0, 0x0, 0x1FA03D4
	0x01FA03B4 MOV X0, X19
	0x01FA03B8 MOV X1, X31
	0x01FA03BC BL 0x3C32E90
	0x01FA03C0 CBZ X0, 0x1FA0440
	0x01FA03C4 LDP S1, S2, [X31 + 0x14]
	0x01FA03C8 LDR V0, [X31 + 0x10]
	0x01FA03CC MOV X1, X31
	0x01FA03D0 BL 0x3C3EC04
	0x01FA03D4 LDRB W8, [X19 + 0x20]
	0x01FA03D8 CBZ W8, 0x1FA0430
	0x01FA03DC LDR X0, [X21]
	0x01FA03E0 ADD X20, X19, 0x28
	0x01FA03E4 LDR W8, [X0 + 0xE0]
	0x01FA03E8 CBNZ W8, 0x1FA03F4
	0x01FA03EC BL 0x1C16DFC
	0x01FA03F0 LDR X0, [X21]
	0x01FA03F4 LDR X8, [X0 + 0xB8]
	0x01FA03F8 ADD X2, X31, 0x0
	0x01FA03FC MOV X0, X20
	0x01FA0400 MOV X3, X31
	0x01FA0404 LDR X1, [X8 + 0x160]
	0x01FA0408 BL 0x3E645F0
	0x01FA040C TBZ X0, 0x0, 0x1FA0430
	0x01FA0410 MOV X0, X19
	0x01FA0414 MOV X1, X31
	0x01FA0418 BL 0x3C32E90
	0x01FA041C CBZ X0, 0x1FA0440
	0x01FA0420 LDP S2, S3, [X31 + 0x8]
	0x01FA0424 LDP S0, S1, [X31]
	0x01FA0428 MOV X1, X31
	0x01FA042C BL 0x3C3F8B8
	0x01FA0430 LDP X20, X19, [X31 + 0x30]
	0x01FA0434 LDP X30, X21, [X31 + 0x20]
	0x01FA0438 ADD X31, X31, 0x40
	0x01FA043C RET
	0x01FA0440 BL 0x1C16F20
	0x01FA0444 SUB X31, X31, 0x60
	0x01FA0448 STR X30, [X31 + 0x40]
	0x01FA044C STP X20, X19, [X31 + 0x50]
	0x01FA0450 ADRP X20, 0x2439000
	0x01FA0454 LDRB W8, [X20 + 0x7BE]
	0x01FA0458 MOV X19, X0
	0x01FA045C TBNZ X8, 0x0, 0x1FA0498
	0x01FA0460 ADRP X0, 0x217B000
	0x01FA0464 LDR X0, [X0 + 0x280]
	0x01FA0468 BL 0x1C16CF4
	0x01FA046C ADRP X0, 0x217B000
	0x01FA0470 LDR X0, [X0 + 0x288]
	0x01FA0474 BL 0x1C16CF4
	0x01FA0478 ADRP X0, 0x217B000
	0x01FA047C LDR X0, [X0 + 0x290]
	0x01FA0480 BL 0x1C16CF4
	0x01FA0484 ADRP X0, 0x217B000
	0x01FA0488 LDR X0, [X0 + 0x298]
	0x01FA048C BL 0x1C16CF4
	0x01FA0490 MOVZ W8, 0x1
	0x01FA0494 STRB W8, [X20 + 0x7BE]
	0x01FA0498 MOVI V0.2D, 0x0
	0x01FA049C STP V0, V0, [X31 + 0x20]
	0x01FA04A0 LDRB W8, [X19 + 0x20]
	0x01FA04A4 CBNZ W8, 0x1FA0514
	0x01FA04A8 LDR X8, [X19]
	0x01FA04AC MOV X0, X19
	0x01FA04B0 LDP X9, X1, [X8 + 0x198]
	0x01FA04B4 BLR X9
	0x01FA04B8 CBZ X0, 0x1FA0524
	0x01FA04BC ADRP X8, 0x217B000
	0x01FA04C0 LDR X8, [X8 + 0x298]
	0x01FA04C4 LDR X1, [X8]
	0x01FA04C8 ADD X8, X31, 0x0
	0x01FA04CC BL 0x2FD1F4C
	0x01FA04D0 ADRP X8, 0x217B000
	0x01FA04D4 LDP V0, V1, [X31]
	0x01FA04D8 LDR X8, [X8 + 0x288]
	0x01FA04DC STP V0, V1, [X31 + 0x20]
	0x01FA04E0 LDR X1, [X8]
	0x01FA04E4 ADD X0, X31, 0x20
	0x01FA04E8 BL 0x2BBCD28
	0x01FA04EC TBZ X0, 0x0, 0x1FA0500
	0x01FA04F0 LDR V0, [X31 + 0x3]
	0x01FA04F4 MOVZ W8, 0x1
	0x01FA04F8 STRB W8, [X19 + 0x20]
	0x01FA04FC STUR V0, [X19 + 0x28]
	0x01FA0500 ADRP X8, 0x217B000
	0x01FA0504 LDR X8, [X8 + 0x280]
	0x01FA0508 ADD X0, X31, 0x20
	0x01FA050C LDR X1, [X8]
	0x01FA0510 BL 0x2BBCD24
	0x01FA0514 LDP X20, X19, [X31 + 0x50]
	0x01FA0518 LDR X30, [X31 + 0x40]
	0x01FA051C ADD X31, X31, 0x60
	0x01FA0520 RET
	0x01FA0524 BL 0x1C16F20
	0x01FA0528 CMP W1, 0x1
	0x01FA052C MOV X20, X0
	0x01FA0530 B.NE 0x1FA0564
	0x01FA0534 MOV X0, X20
	0x01FA0538 BL 0x3EB1AD0
	0x01FA053C LDR X19, [X0]
	0x01FA0540 BL 0x3EB1AE0
	0x01FA0544 ADRP X8, 0x217B000
	0x01FA0548 LDR X8, [X8 + 0x280]
	0x01FA054C ADD X0, X31, 0x20
	0x01FA0550 LDR X1, [X8]
	0x01FA0554 BL 0x2BBCD24

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x243A000
	006 Move W8, [X20+1973]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2154000
	013 Move X0, [X0+1432]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1973], W8
	017 Move W8, [X19+16]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X20, [X19+32]
	020 Move X9, -21438464
	021 Add X9, X9, 3178
	022 NotImplemented "Instruction ADR not yet implemented."
	023 Move W11, [X9]
	024 Add X10, X10, X11
	025 CallNoReturn X10
	026 Move TEMP, 0
	027 Not TEMP
	028 Move W8, TEMP
	029 Move [X19+16], W8
	030 Compare X20, 0
	031 JumpIfEqual {148}
	032 Move X8, [X20+48]
	033 Compare X8, 0
	034 JumpIfEqual {148}
	035 Move X9, 0x2154000
	036 Move X9, [X9+1432]
	037 Move X21, [X8+32]
	038 Move X0, [X9]
	039 Move W9, [X0+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X21
	044 Move X1, X31
	045 Call Object.op_Implicit, X0
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {67}
	050 Move X8, [X20+48]
	051 Compare X8, 0
	052 JumpIfEqual {148}
	053 Move X0, [X8+32]
	054 Compare X0, 0
	055 JumpIfEqual {148}
	056 Move S0, -1
	057 Call Fader.FadeIn, X0, V0
	058 Move [X19+24], X0
	059 Move W0, 1
	060 Move [X19+16], W0
	061 Move TEMP, 0
	062 Not TEMP
	063 Move W8, TEMP
	064 Move [X19+16], W8
	065 Compare X20, 0
	066 JumpIfEqual {148}
	067 Move X8, [X20]
	068 Move V0, [X19+40]
	069 Move X0, X20
	070 Move X9, [X8+696]
	071 Move X1, [X8+704]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move X8, [X20+48]
	074 Compare X8, 0
	075 JumpIfEqual {148}
	076 Move X9, 0x2154000
	077 Move X9, [X9+1432]
	078 Move X21, [X8+32]
	079 Move X0, [X9]
	080 Move W9, [X0+224]
	081 Compare W9, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X0, X21
	085 Move X1, X31
	086 Call Object.op_Implicit, X0
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {107}
	091 Move X8, [X20+48]
	092 Compare X8, 0
	093 JumpIfEqual {148}
	094 Move X0, [X8+32]
	095 Compare X0, 0
	096 JumpIfEqual {148}
	097 Move S0, -1
	098 Call Fader.WaitBlinkDuration, X0, V0
	099 Move W8, 2
	100 Move [X19+24], X0
	101 Move TEMP, 0
	102 Not TEMP
	103 Move W8, TEMP
	104 Move [X19+16], W8
	105 Compare X20, 0
	106 JumpIfEqual {148}
	107 Move X8, [X20+48]
	108 Compare X8, 0
	109 JumpIfEqual {148}
	110 Move X9, 0x2154000
	111 Move X9, [X9+1432]
	112 Move X21, [X8+32]
	113 Move X0, [X9]
	114 Move W9, [X0+224]
	115 Compare W9, 0
	116 JumpIfNotEqual {118}
	117 Call 0x1C17DFC
	118 Move X0, X21
	119 Move X1, X31
	120 Call Object.op_Implicit, X0
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {137}
	125 Move X8, [X20+48]
	126 Compare X8, 0
	127 JumpIfEqual {148}
	128 Move X0, [X8+32]
	129 Compare X0, 0
	130 JumpIfEqual {148}
	131 Move S0, -1
	132 Call Fader.FadeOut, X0, V0
	133 Move [X19+24], X0
	134 Move W8, 3
	135 Move [X19+16], W8
	136 Move W0, 1
	137 Move W0, W31
	138 Move W0, W31
	139 Move TEMP, 0
	140 Not TEMP
	141 Move W8, TEMP
	142 Move [X19+16], W8
	143 Move X20, [X31+16]
	144 Move X19, [X31+24]
	145 Move X30, [X31+32]
	146 Move X21, [X31+40]
	147 Return X0
	148 Call 0x1C17F20

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x01FA06A8 CBZ X0, 0x1FA06B8
	0x01FA06AC MOV X1, X31

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01FA06B0 LDR X30, [X31], #0x10
	0x01FA06B4 B 0x1E93588
	0x01FA06B8 BL 0x1C16F20
	0x01FA06BC STR X30, [X31 - 0x10]!
	0x01FA06C0 LDR X0, [X0 + 0x40]
	0x01FA06C4 CBZ X0, 0x1FA06D4
	0x01FA06C8 MOV X1, X31
	0x01FA06CC LDR X30, [X31], #0x10
	0x01FA06D0 B 0x1E93588
	0x01FA06D4 BL 0x1C16F20
	0x01FA06D8 STP X30, X19, [X31 - 0x10]!
	0x01FA06DC MOV X19, X0
	0x01FA06E0 BL 0x1FA0698
	0x01FA06E4 TBZ X0, 0x0, 0x1FA0714

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x2154000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x217C000
	011 Move X0, [X0+520]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01FA06E8 LDR X8, [X19 + 0xA8]
	0x01FA06EC CBZ X8, 0x1FA0720

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

