Type: Fusion.XR.Host.Grabbing.KinematicGrabbable

Method: System.Boolean get_IsGrabbed()

Disassembly:
	0x01FA4718 STR X0, [X19 + 0x98]
	0x01FA471C LDR X1, [X20]
	0x01FA4720 MOV X0, X19
	0x01FA4724 BL 0x21A3894
	0x01FA4728 STR X0, [X19 + 0x148]
	0x01FA472C LDP X20, X19, [X31 + 0x20]
	0x01FA4730 LDP X22, X21, [X31 + 0x10]
	0x01FA4734 LDR X30, [X31], #0x30
	0x01FA4738 RET
	0x01FA473C STR X30, [X31 - 0x40]!
	0x01FA4740 STP X24, X23, [X31 + 0x10]
	0x01FA4744 STP X22, X21, [X31 + 0x20]
	0x01FA4748 STP X20, X19, [X31 + 0x30]
	0x01FA474C ADRP X22, 0x2435000
	0x01FA4750 LDRB W8, [X22 + 0x7F4]
	0x01FA4754 MOV X21, X2
	0x01FA4758 MOV X19, X1
	0x01FA475C MOV X20, X0
	0x01FA4760 TBNZ X8, 0x0, 0x1FA4790
	0x01FA4764 ADRP X0, 0x2177000
	0x01FA4768 LDR X0, [X0 + 0x458]
	0x01FA476C BL 0x1C16CF4
	0x01FA4770 ADRP X0, 0x2152000
	0x01FA4774 LDR X0, [X0 + 0xE40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2436000
	006 Move X20, 0x2150000
	007 Move W8, [X21+2021]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2150000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2021], W8
	019 Move X0, [X20]
	020 Move X19, [X19+32]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X2, X31
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call Object.op_Inequality, X0, X1
	033 Return X0

Method: UnityEngine.Vector3 get_Velocity()

Disassembly:
	0x01FA4778 BL 0x1C16CF4
	0x01FA477C ADRP X0, 0x2177000
	0x01FA4780 LDR X0, [X0 + 0x460]
	0x01FA4784 BL 0x1C16CF4
	0x01FA4788 MOVZ W8, 0x1
	0x01FA478C STRB W8, [X22 + 0x7F4]
	0x01FA4790 LDR X0, [X20 + 0x40]
	0x01FA4794 CBZ X0, 0x1FA4914
	0x01FA4798 MOV X1, X31
	0x01FA479C BL 0x1E93994
	0x01FA47A0 CBZ X19, 0x1FA4914
	0x01FA47A4 MOV X22, X0
	0x01FA47A8 LDR X0, [X19 + 0x40]
	0x01FA47AC CBZ X0, 0x1FA4914
	0x01FA47B0 ADRP X24, 0x2152000
	0x01FA47B4 LDR X24, [X24 + 0xE40]
	0x01FA47B8 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x2435000
	004 Move W8, [X19+1923]
	005 Compare W8, 0
	006 JumpIfNotEqual {12}
	007 Move X0, 0x2150000
	008 Move X0, [X0+1440]
	009 Call 0x1C17CF4
	010 Move W8, 1
	011 Move [X19+1923], W8
	012 Move X8, 0x2150000
	013 Move X8, [X8+1440]
	014 Move X8, [X8]
	015 Move X8, [X8+184]
	016 Move S0, [X8]
	017 Move S1, [X8+4]
	018 Move V2, [X8+8]
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Return X0

Method: UnityEngine.Vector3 get_AngularVelocity()

Disassembly:
	0x01FA47BC BL 0x1E93994
	0x01FA47C0 LDR X8, [X24]
	0x01FA47C4 MOV X23, X0
	0x01FA47C8 LDR W9, [X8 + 0xE0]
	0x01FA47CC CBNZ W9, 0x1FA47D8
	0x01FA47D0 MOV X0, X8
	0x01FA47D4 BL 0x1C16DFC
	0x01FA47D8 CMP W22, W23
	0x01FA47DC B.EQ 0x1FA48A4
	0x01FA47E0 LDR X0, [X19 + 0x40]
	0x01FA47E4 CBZ X0, 0x1FA4914
	0x01FA47E8 MOV X1, X31
	0x01FA47EC BL 0x1E93994
	0x01FA47F0 LDR X8, [X20 + 0x38]
	0x01FA47F4 CBZ X8, 0x1FA4914
	0x01FA47F8 MOV X22, X0
	0x01FA47FC MOV X0, X8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x2435000
	004 Move W8, [X19+1923]
	005 Compare W8, 0
	006 JumpIfNotEqual {12}
	007 Move X0, 0x2150000
	008 Move X0, [X0+1440]
	009 Call 0x1C17CF4
	010 Move W8, 1
	011 Move [X19+1923], W8
	012 Move X8, 0x2150000
	013 Move X8, [X8+1440]
	014 Move X8, [X8]
	015 Move X8, [X8+184]
	016 Move S0, [X8]
	017 Move S1, [X8+4]
	018 Move V2, [X8+8]
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Return X0

Method: System.Void Awake()

Disassembly:
	0x01FA4800 MOV X1, X31
	0x01FA4804 BL 0x1E9EA20
	0x01FA4808 LDR X8, [X24]
	0x01FA480C MOV X23, X0
	0x01FA4810 LDR W9, [X8 + 0xE0]
	0x01FA4814 CBNZ W9, 0x1FA4820
	0x01FA4818 MOV X0, X8
	0x01FA481C BL 0x1C16DFC
	0x01FA4820 CMP W22, W23
	0x01FA4824 B.NE 0x1FA4868
	0x01FA4828 MOVZ W8, 0x1
	0x01FA482C MOV X0, X31
	0x01FA4830 STRB W8, [X20 + 0x150]
	0x01FA4834 BL 0x3C3C6C4
	0x01FA4838 LDR X8, [X20 + 0x38]
	0x01FA483C STR S0, [X20 + 0x158]
	0x01FA4840 CBZ X8, 0x1FA4914
	0x01FA4844 LDR X8, [X8 + 0x50]
	0x01FA4848 CBZ X8, 0x1FA4850
	0x01FA484C LDR W8, [X8 + 0x48]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2436000
	006 Move X21, 0x2178000
	007 Move W8, [X20+2022]
	008 Move X21, [X21+1024]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2178000
	015 Move X0, [X0+1024]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2022], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x21A4894, X0
	022 Move [X19+40], X0
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return 

Method: System.Void Ungrab()

Disassembly:
	0x01FA4850 ADD X0, X20, 0x160
	0x01FA4854 MOVZ W2, 0x58
	0x01FA4858 MOV X1, X21
	0x01FA485C STR W8, [X20 + 0x15C]
	0x01FA4860 BL 0x3EB1B30
	0x01FA4864 STR X19, [X20 + 0x1B8]
	0x01FA4868 LDR X0, [X20 + 0x40]
	0x01FA486C CBZ X0, 0x1FA4914
	0x01FA4870 MOV X1, X31
	0x01FA4874 BL 0x1E93668
	0x01FA4878 TBZ X0, 0x0, 0x1FA48A4
	0x01FA487C LDR X0, [X19 + 0x40]
	0x01FA4880 CBZ X0, 0x1FA4914
	0x01FA4884 LDR X21, [X20 + 0x40]
	0x01FA4888 MOV X1, X31
	0x01FA488C BL 0x1E93994
	0x01FA4890 CBZ X21, 0x1FA4914
	0x01FA4894 AND X1, X0, 0x0
	0x01FA4898 MOV X0, X21
	0x01FA489C MOV X2, X31
	0x01FA48A0 BL 0x1E94228
	0x01FA48A4 LDR X0, [X19 + 0x40]
	0x01FA48A8 CBZ X0, 0x1FA4914
	0x01FA48AC LDR X20, [X20 + 0x1C0]
	0x01FA48B0 MOV X1, X31
	0x01FA48B4 BL 0x1E93994
	0x01FA48B8 LDR X8, [X19 + 0xF0]
	0x01FA48BC CBZ X8, 0x1FA4914
	0x01FA48C0 ADRP X9, 0x2177000
	0x01FA48C4 LDR X9, [X9 + 0x460]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2436000
	006 Move X20, 0x2150000
	007 Move W8, [X21+2023]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2150000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2023], W8
	019 Move X0, X19
	020 Call Grabbable.Ungrab, X0
	021 Move X0, [X20]
	022 Move X20, [X19+40]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move X1, X31
	029 Call Object.op_Implicit, X0
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {37}
	034 Move X0, X31
	035 Call Time.get_time
	036 Move [X19+132], S0
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 

Method: System.Boolean Grab(Fusion.XR.Host.Grabbing.Grabber newGrabber)

Disassembly:
	0x01FA48CC AND X1, X0, 0x0
	0x01FA48D0 ADD X0, X31, 0x8
	0x01FA48D4 LDR X3, [X9]
	0x01FA48D8 STR X31, [X31 + 0x8]
	0x01FA48DC BL 0x27AD790
	0x01FA48E0 CBZ X20, 0x1FA4914
	0x01FA48E4 ADRP X8, 0x2177000
	0x01FA48E8 LDR X8, [X8 + 0x458]
	0x01FA48EC LDR X1, [X31 + 0x8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call Grabbable.Grab, X0, X1
	005 Move TEMP, X0
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfNotEqual {11}
	009 Move W8, 0xBF800000
	010 Move [X19+132], W8
	011 And W0, W0, 1
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return X0

Method: System.Void Follow(UnityEngine.Transform followingtransform, UnityEngine.Transform followedTransform)

Disassembly:
	0x01FA48FC BL 0x29C9A00
	0x01FA4900 LDP X20, X19, [X31 + 0x30]
	0x01FA4904 LDP X22, X21, [X31 + 0x20]
	0x01FA4908 LDP X24, X23, [X31 + 0x10]
	0x01FA490C LDR X30, [X31], #0x40
	0x01FA4910 RET
	0x01FA4914 BL 0x1C16F20
	0x01FA4918 RET
	0x01FA491C STP X30, X21, [X31 - 0x20]!
	0x01FA4920 STP X20, X19, [X31 + 0x10]
	0x01FA4924 ADRP X20, 0x2435000
	0x01FA4928 ADRP X21, 0x214F000
	0x01FA492C LDRB W8, [X20 + 0x7F5]
	0x01FA4930 LDR X21, [X21 + 0x598]
	0x01FA4934 MOV X19, X1
	0x01FA4938 TBNZ X8, 0x0, 0x1FA4950
	0x01FA493C ADRP X0, 0x214F000
	0x01FA4940 LDR X0, [X0 + 0x598]
	0x01FA4944 BL 0x1C16CF4
	0x01FA4948 MOVZ W8, 0x1
	0x01FA494C STRB W8, [X20 + 0x7F5]
	0x01FA4950 LDR X0, [X21]
	0x01FA4954 LDR W8, [X0 + 0xE0]
	0x01FA4958 CBNZ W8, 0x1FA4960
	0x01FA495C BL 0x1C16DFC
	0x01FA4960 MOV X0, X19
	0x01FA4964 MOV X1, X31
	0x01FA4968 BL 0x3C38948
	0x01FA496C TBZ X0, 0x0, 0x1FA4994
	0x01FA4970 CBZ X19, 0x1FA49A0
	0x01FA4974 LDR X0, [X19 + 0x40]
	0x01FA4978 CBZ X0, 0x1FA4994
	0x01FA497C LDRB W8, [X0 + 0x60]
	0x01FA4980 TBNZ X8, 0x1, 0x1FA4994
	0x01FA4984 LDP X20, X19, [X31 + 0x10]
	0x01FA4988 MOV X1, X31
	0x01FA498C LDP X30, X21, [X31], #0x20
	0x01FA4990 B 0x1E93588
	0x01FA4994 LDP X20, X19, [X31 + 0x10]
	0x01FA4998 LDP X30, X21, [X31], #0x20
	0x01FA499C RET
	0x01FA49A0 BL 0x1C16F20
	0x01FA49A4 STP X30, X19, [X31 - 0x10]!
	0x01FA49A8 MOV X1, X31
	0x01FA49AC MOV X19, X0
	0x01FA49B0 BL 0x1E73F88
	0x01FA49B4 LDR X0, [X19 + 0x38]
	0x01FA49B8 CBZ X0, 0x1FA4A04
	0x01FA49BC LDR X1, [X19 + 0x40]
	0x01FA49C0 MOVZ W2, 0x1
	0x01FA49C4 MOV X3, X31
	0x01FA49C8 BL 0x1EA345C
	0x01FA49CC MOVZ W2, 0x1
	0x01FA49D0 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X2, 0
	006 JumpIfEqual {64}
	007 Move S1, [X0+52]
	008 Move S2, [X0+56]
	009 Move V0, [X0+48]
	010 Move X19, X1
	011 Move X20, X0
	012 Move X0, X2
	013 Move X1, X31
	014 Move X21, X2
	015 Call Transform.TransformPoint, X0, X1
	016 Compare X19, 0
	017 JumpIfEqual {64}
	018 Move X0, X19
	019 Move X1, X31
	020 Call Transform.set_position, X0, X1
	021 Move X0, X21
	022 Move X1, X31
	023 Call Transform.get_rotation, X0
	024 Move S4, [X20+60]
	025 Move S7, [X20+64]
	026 Move S6, [X20+68]
	027 Move S5, [X20+72]
	028 Move X0, X19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Multiply S16, S3, S4
	032 Multiply S17, S0, S5
	033 Multiply S18, S1, S6
	034 Multiply S19, S2, S7
	035 Multiply S20, S3, S7
	036 Multiply S21, S1, S5
	037 Multiply S22, S2, S4
	038 Multiply S23, S0, S6
	039 Multiply S24, S0, S7
	040 Multiply S0, S0, S4
	041 Multiply S4, S1, S4
	042 Multiply S1, S1, S7
	043 Multiply S7, S3, S6
	044 Multiply S3, S3, S5
	045 Multiply S5, S2, S5
	046 Multiply S6, S2, S6
	047 Add S2, S16, S17
	048 Add S16, S20, S21
	049 Add S5, S7, S5
	050 Subtract S0, S3, S0
	051 Add S2, S18, S2
	052 Add S3, S22, S16
	053 Add S5, S24, S5
	054 Subtract S7, S0, S1
	055 Subtract S0, S2, S19
	056 Subtract S1, S3, S23
	057 Subtract S2, S5, S4
	058 Subtract S3, S7, S6
	059 Move X1, X31
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Call Transform.set_rotation, X0, X1
	063 Return 
	064 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x01FA49D4 MOV W1, W31
	0x01FA49D8 MOV X3, X31
	0x01FA49DC BL 0x1E73EA0
	0x01FA49E0 STR X0, [X19 + 0x108]
	0x01FA49E4 MOV X0, X19
	0x01FA49E8 BL 0x1FA3AD8
	0x01FA49EC TBZ X0, 0x0, 0x1FA49FC
	0x01FA49F0 MOV X0, X19
	0x01FA49F4 LDP X30, X19, [X31], #0x10
	0x01FA49F8 B 0x1FA3B50
	0x01FA49FC LDP X30, X19, [X31], #0x10
	0x01FA4A00 RET
	0x01FA4A04 BL 0x1C16F20
	0x01FA4A08 STP X30, X19, [X31 - 0x10]!
	0x01FA4A0C MOV X19, X0
	0x01FA4A10 LDR X0, [X0 + 0x148]
	0x01FA4A14 CBZ X0, 0x1FA4AA8
	0x01FA4A18 LDR W8, [X0 + 0x98]
	0x01FA4A1C CMP W8, 0x1
	0x01FA4A20 B.NE 0x1FA4A58
	0x01FA4A24 LDR V1, [X19 + 0x138]
	0x01FA4A28 LDR V2, [X19 + 0x140]
	0x01FA4A2C STUR D1, [X0 + 0xAC]
	0x01FA4A30 STR S2, [X0 + 0xB4]
	0x01FA4A34 LDR X8, [X19 + 0x148]
	0x01FA4A38 CBZ X8, 0x1FA4AA8
	0x01FA4A3C ADD X9, X19, 0x12C
	0x01FA4A40 LDR V1, [X9]
	0x01FA4A44 LDR V2, [X9 + 0x8]
	0x01FA4A48 STUR D1, [X8 + 0xC4]
	0x01FA4A4C STR S2, [X8 + 0xCC]
	0x01FA4A50 LDR X0, [X19 + 0x148]
	0x01FA4A54 CBZ X0, 0x1FA4AA8
	0x01FA4A58 LDR X8, [X0]
	0x01FA4A5C AND W2, W2, 0x1
	0x01FA4A60 LDP X9, X3, [X8 + 0x1C8]
	0x01FA4A64 BLR X9
	0x01FA4A68 LDR X8, [X19 + 0x148]
	0x01FA4A6C CBZ X8, 0x1FA4AA8
	0x01FA4A70 LDR W9, [X8 + 0x98]
	0x01FA4A74 CMP W9, 0x1
	0x01FA4A78 B.NE 0x1FA4AA0
	0x01FA4A7C LDUR V0, [X8 + 0xAC]
	0x01FA4A80 LDR V1, [X8 + 0xB4]
	0x01FA4A84 STR D0, [X19 + 0x138]
	0x01FA4A88 STR S1, [X19 + 0x140]
	0x01FA4A8C LDUR V0, [X8 + 0xC4]
	0x01FA4A90 LDR V1, [X8 + 0xCC]
	0x01FA4A94 ADD X8, X19, 0x12C
	0x01FA4A98 STR D0, [X8]
	0x01FA4A9C STR S1, [X8 + 0x8]
	0x01FA4AA0 LDP X30, X19, [X31], #0x10
	0x01FA4AA4 RET
	0x01FA4AA8 BL 0x1C16F20
	0x01FA4AAC SUB X31, X31, 0x40
	0x01FA4AB0 STP X30, X23, [X31 + 0x10]
	0x01FA4AB4 STP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2436000
	006 Move X21, 0x2150000
	007 Move W8, [X20+2024]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2150000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2024], W8
	019 Move X0, [X21]
	020 Move X20, [X19+40]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Equality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {50}
	033 Move X8, [X19+40]
	034 Compare X8, 0
	035 JumpIfEqual {80}
	036 Move X0, [X21]
	037 Move X20, [X8+64]
	038 Move W9, [X0+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X1, X31
	044 Move X2, X31
	045 Call Object.op_Equality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {75}
	050 Move X0, X19
	051 Call KinematicGrabbable.get_IsGrabbed, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {75}
	056 Move X0, X19
	057 Move X1, X31
	058 Call Component.get_transform, X0
	059 Move X8, [X19+32]
	060 Compare X8, 0
	061 JumpIfEqual {80}
	062 Move X20, X0
	063 Move X0, X8
	064 Move X1, X31
	065 Call Component.get_transform, X0
	066 Move X2, X0
	067 Move X0, X19
	068 Move X1, X20
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 Call KinematicGrabbable.Follow, X0, X1, X2
	074 Return 
	075 Move X20, [X31+16]
	076 Move X19, [X31+24]
	077 Move X30, [X31+32]
	078 Move X21, [X31+40]
	079 Return 
	080 Call 0x1C17F20

Method: System.Void DidGrab()

Disassembly:
	0x01FA48F0 MOV X0, X20
	0x01FA48F4 MOV X2, X19
	0x01FA48F8 LDR X3, [X8]

ISIL:
	001 Move W8, 0xBF800000
	002 Move [X0+132], W8
	003 Return 

Method: System.Void DidUngrab()

Disassembly:
	0x01FA48C8 LDR W2, [X8 + 0xA0]

ISIL:
	001 Return 

Method: System.Void .ctor()

Disassembly:
	0x01FA4AB8 STP X20, X19, [X31 + 0x30]
	0x01FA4ABC ADRP X22, 0x2435000
	0x01FA4AC0 ADRP X23, 0x2177000
	0x01FA4AC4 LDRB W8, [X22 + 0x7F6]

ISIL:
	001 Move W8, 0xBF800000
	002 Move X1, X31
	003 Move [X0+132], W8
	004 Call MonoBehaviour..ctor, X0
	005 Return 

