Type: Fusion.XR.Host.Grabbing.NetworkGrabber

Method: Fusion.XR.Host.Grabbing.GrabInfo get_GrabInfo()

Disassembly:
	0x01FA4C98 ADD X24, X19, 0xAC
	0x01FA4C9C CBZ W8, 0x1FA4CF0
	0x01FA4CA0 LDR X8, [X19 + 0x38]
	0x01FA4CA4 CBZ X8, 0x1FA52E8

ISIL:
	001 Add X1, X0, 128
	002 Move W2, 88
	003 Move X0, X8
	004 Call 0x3EB2AC0
	005 Return X0

Method: System.Void set_GrabInfo(Fusion.XR.Host.Grabbing.GrabInfo value)

Disassembly:
	0x01FA4CA8 LDR X8, [X8 + 0x50]
	0x01FA4CAC CBZ X8, 0x1FA4CB4
	0x01FA4CB0 LDR W8, [X8 + 0x48]
	0x01FA4CB4 LDR W9, [X19 + 0x15C]
	0x01FA4CB8 CMP W8, W9
	0x01FA4CBC B.LE 0x1FA4CF0

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X0, 128
	003 Move W2, 88
	004 Call 0x3EB2B30
	005 Move X30, [X31+16]
	006 Return 

Method: System.Void Awake()

Disassembly:
	0x01FA4CC0 LDP V0, V1, [X19 + 0x180]
	0x01FA4CC4 LDP V2, V3, [X19 + 0x160]
	0x01FA4CC8 ADD X8, X19, 0x160
	0x01FA4CCC MOV W21, W31
	0x01FA4CD0 STP V0, V1, [X31 + 0x250]
	0x01FA4CD4 STP V2, V3, [X31 + 0x230]
	0x01FA4CD8 LDR V5, [X19 + 0x1A0]
	0x01FA4CDC LDR V0, [X8 + 0x48]
	0x01FA4CE0 LDR V4, [X19 + 0x1B0]
	0x01FA4CE4 MOVZ W28, 0x1
	0x01FA4CE8 STR V0, [X31 + 0x3]
	0x01FA4CEC B 0x1FA4D98
	0x01FA4CF0 ADRP X8, 0x2177000
	0x01FA4CF4 LDR X8, [X8 + 0x2C0]
	0x01FA4CF8 ADD X1, X31, 0xE0
	0x01FA4CFC MOV X0, X19
	0x01FA4D00 ADD X27, X31, 0x270
	0x01FA4D04 LDR X2, [X8]
	0x01FA4D08 BL 0x2226244
	0x01FA4D0C TBZ X0, 0x0, 0x1FA4D30
	0x01FA4D10 LDR X8, [X19 + 0x40]
	0x01FA4D14 STR X23, [X31 + 0x8]
	0x01FA4D18 CBZ X8, 0x1FA4E74
	0x01FA4D1C LDR X8, [X8 + 0x20]
	0x01FA4D20 MOV X23, X29
	0x01FA4D24 CBZ X8, 0x1FA4E78
	0x01FA4D28 LDR W29, [X8]
	0x01FA4D2C B 0x1FA4E7C
	0x01FA4D30 LDR X0, [X22]
	0x01FA4D34 LDR W28, [X19 + 0xA0]
	0x01FA4D38 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2436000
	007 Move X22, 0x2178000
	008 Move X20, 0x2178000
	009 Move W8, [X21+2028]
	010 Move X22, [X22+264]
	011 Move X20, [X20+1064]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2178000
	018 Move X0, [X0+1064]
	019 Call 0x1C17CF4
	020 Move X0, 0x2178000
	021 Move X0, [X0+264]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2028], W8
	025 Move X1, [X22]
	026 Move X0, X19
	027 Call 0x21A4894, X0
	028 Move [X19+232], X0
	029 Move X1, [X20]
	030 Move X0, X19
	031 Call 0x21A4F50, X0
	032 Move [X19+240], X0
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return 

Method: System.Void Spawned()

Disassembly:
	0x01FA4D3C CBNZ W8, 0x1FA4D44
	0x01FA4D40 BL 0x1C16DFC
	0x01FA4D44 MOV X0, X31
	0x01FA4D48 BL 0x1E8D7EC
	0x01FA4D4C MOV X21, X0
	0x01FA4D50 ADD X1, X19, 0xA0
	0x01FA4D54 ADD X0, X31, 0x270
	0x01FA4D58 MOVZ W2, 0x4C
	0x01FA4D5C BL 0x3EB1AC0
	0x01FA4D60 LDUR V0, [X19 + 0xF4]
	0x01FA4D64 LDUR V5, [X19 + 0xEC]
	0x01FA4D68 LDUR V4, [X19 + 0xFC]
	0x01FA4D6C LDUR V1, [X27 + 0x2C]
	0x01FA4D70 STR V0, [X31 + 0x3]
	0x01FA4D74 LDUR V0, [X27 + 0x3C]
	0x01FA4D78 LDUR V2, [X27 + 0x1C]
	0x01FA4D7C LDUR V3, [X27 + 0xC]
	0x01FA4D80 CMP W28, W21
	0x01FA4D84 STP V1, V0, [X31 + 0x250]
	0x01FA4D88 STP V3, V2, [X31 + 0x230]
	0x01FA4D8C B.NE 0x1FA4E5C
	0x01FA4D90 MOV W28, W31
	0x01FA4D94 MOVZ W21, 0x1
	0x01FA4D98 CMP W26, W20
	0x01FA4D9C B.EQ 0x1FA51C8
	0x01FA4DA0 LDR X0, [X19 + 0x40]
	0x01FA4DA4 STP V4, V5, [X31 + 0x10]
	0x01FA4DA8 CBZ X0, 0x1FA52E8
	0x01FA4DAC MOV X1, X31
	0x01FA4DB0 BL 0x1E936F8
	0x01FA4DB4 ORN W8, W31, W0, 0x0
	0x01FA4DB8 AND W8, W8, 0x1
	0x01FA4DBC ORR W8, W28, W8, 0x0
	0x01FA4DC0 CBZ W8, 0x1FA4E0C
	0x01FA4DC4 LDR X0, [X22]
	0x01FA4DC8 LDR W8, [X0 + 0xE0]
	0x01FA4DCC CBNZ W8, 0x1FA4DD4
	0x01FA4DD0 BL 0x1C16DFC
	0x01FA4DD4 MOV X0, X31
	0x01FA4DD8 BL 0x1E8D7EC
	0x01FA4DDC STR W0, [X19 + 0xA0]
	0x01FA4DE0 STUR X29, [X19 + 0xA4]
	0x01FA4DE4 LDP V1, V0, [X31 + 0x250]
	0x01FA4DE8 LDP V2, V3, [X31 + 0x230]
	0x01FA4DEC STP V1, V0, [X24 + 0x20]
	0x01FA4DF0 LDR V0, [X31 + 0x2]
	0x01FA4DF4 STP V2, V3, [X24]
	0x01FA4DF8 STUR D0, [X19 + 0xEC]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+96], X30
	003 Move [X31+104], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call NetworkBehaviour.Spawned, X0
	007 Move X0, [X19+240]
	008 Compare X0, 0
	009 JumpIfEqual {60}
	010 Call NetworkHand.get_IsLocalNetworkRig, X0
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {25}
	015 Move X0, [X19+240]
	016 Compare X0, 0
	017 JumpIfEqual {60}
	018 Call NetworkHand.get_LocalHardwareHand, X0
	019 Compare X0, 0
	020 JumpIfEqual {60}
	021 Move X8, [X0+64]
	022 Compare X8, 0
	023 JumpIfEqual {60}
	024 Move [X8+128], X19
	025 Move W2, 1
	026 Move X0, X19
	027 Move W1, W31
	028 Move X3, X31
	029 Call NetworkBehaviour.GetChangeDetector, X0, X1, X2
	030 Move [X19+248], X0
	031 Add X1, X19, 128
	032 Add X0, X31, 8
	033 Move W2, 88
	034 Call 0x3EB2AC0
	035 Add X1, X31, 8
	036 Move X0, X19
	037 Call NetworkGrabber.HandleGrabInfoChange, X0, X1
	038 Move W8, [X19+216]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X0, [X19+56]
	041 Compare X0, 0
	042 JumpIfEqual {60}
	043 Move X1, [X19+64]
	044 Move W2, 1
	045 Move X3, X31
	046 Call NetworkRunner.SetIsSimulated, X0, X1, X2
	047 Move X0, [X19+64]
	048 Compare X0, 0
	049 JumpIfEqual {60}
	050 Move X30, [X31+96]
	051 Move X19, [X31+104]
	052 Move X1, X31
	053 Add X31, X31, 112
	054 Call NetworkObject.get_HasInputAuthority, X0
	055 Return 
	056 Move X30, [X31+96]
	057 Move X19, [X31+104]
	058 Add X31, X31, 112
	059 Return 
	060 Call 0x1C17F20

Method: System.Void FixedUpdateNetwork()

Disassembly:
	0x01FA4FD8 MOV X29, X23
	0x01FA4FDC BL 0x1E93994
	0x01FA4FE0 AND X1, X0, 0x0
	0x01FA4FE4 MOVZ W2, 0x3
	0x01FA4FE8 MOVZ W22, 0x3
	0x01FA4FEC MOV X0, X19
	0x01FA4FF0 BL 0x1FA4AAC
	0x01FA4FF4 LDR X23, [X31 + 0x8]
	0x01FA4FF8 MOV X21, X0
	0x01FA4FFC STR W22, [X19 + 0x154]
	0x01FA5000 MOV X0, X19
	0x01FA5004 MOV X1, X21
	0x01FA5008 BL 0x1FA491C
	0x01FA500C LDP V1, V0, [X31 + 0x230]
	0x01FA5010 LDR X8, [X19 + 0x148]
	0x01FA5014 LDP V2, V3, [X31 + 0x250]
	0x01FA5018 STP V1, V0, [X31 + 0x270]
	0x01FA501C LDR X9, [X31 + 0x278]
	0x01FA5020 LDR W10, [X31 + 0x280]
	0x01FA5024 STP V2, V3, [X31 + 0x290]
	0x01FA5028 STR X9, [X31 + 0x90]
	0x01FA502C STR W10, [X31 + 0x98]
	0x01FA5030 CBZ X8, 0x1FA52E8
	0x01FA5034 LDR W9, [X31 + 0x98]
	0x01FA5038 LDR X10, [X31 + 0x90]
	0x01FA503C STR W9, [X8 + 0x38]
	0x01FA5040 STR X10, [X8 + 0x30]
	0x01FA5044 LDP V1, V0, [X31 + 0x240]
	0x01FA5048 LDR X8, [X19 + 0x148]
	0x01FA504C LDR V2, [X31 + 0x23]
	0x01FA5050 LDR V3, [X31 + 0x26]
	0x01FA5054 STP V1, V0, [X31 + 0x60]
	0x01FA5058 LDUR V0, [X31 + 0x64]
	0x01FA505C STR V3, [X31 + 0x8]
	0x01FA5060 STP V0, V2, [X31 + 0x40]
	0x01FA5064 CBZ X8, 0x1FA52E8
	0x01FA5068 LDR V0, [X31 + 0x4]
	0x01FA506C STUR V0, [X8 + 0x3C]
	0x01FA5070 CBZ X21, 0x1FA52E8
	0x01FA5074 MOV X0, X21
	0x01FA5078 MOV X1, X31
	0x01FA507C BL 0x3C32E90
	0x01FA5080 LDR X8, [X19 + 0x38]
	0x01FA5084 CBZ X8, 0x1FA52E8
	0x01FA5088 MOV X22, X0
	0x01FA508C MOV X0, X8
	0x01FA5090 MOV X1, X31
	0x01FA5094 BL 0x1E9E550
	0x01FA5098 LDR W0, [X19 + 0x128]
	0x01FA509C MOV X1, X31
	0x01FA50A0 MOV V8.16B, V0.16B
	0x01FA50A4 BL 0x1E8CF0C
	0x01FA50A8 LDR X8, [X19]
	0x01FA50AC AND W2, W0, 0x1
	0x01FA50B0 MOV X0, X19
	0x01FA50B4 MOV X1, X22
	0x01FA50B8 LDR X9, [X8 + 0x298]
	0x01FA50BC LDR X3, [X8 + 0x2A0]
	0x01FA50C0 MOV V0.16B, V8.16B
	0x01FA50C4 BLR X9
	0x01FA50C8 CMP W26, W20
	0x01FA50CC B.NE 0x1FA5110

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+128], X30
	003 Move [X31+136], X21
	004 Move [X31+144], X20
	005 Move [X31+152], X19
	006 Move X20, 0x2436000
	007 Move W8, [X20+2029]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2178000
	014 Move X0, [X0+1080]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+2029], W8
	018 Move X0, X19
	019 Move X1, X31
	020 Move [X31+112], X31
	021 Move [X31+120], X31
	022 Call NetworkBehaviour.FixedUpdateNetwork, X0
	023 Move X0, [X19+56]
	024 Compare X0, 0
	025 JumpIfEqual {86}
	026 Move X1, X31
	027 Call NetworkRunner.get_IsForward, X0
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {80}
	032 Move X0, [X19+248]
	033 Compare X0, 0
	034 JumpIfEqual {86}
	035 Move W2, 1
	036 Move X1, X19
	037 Move X3, X31
	038 Call ChangeDetector.DetectChanges, X0, X1, X2
	039 Move [X31+96], X0
	040 Move [X31+104], X1
	041 Add X0, X31, 96
	042 Move X1, X31
	043 Call Enumerable.GetEnumerator, X0
	044 Move [X31+112], X0
	045 Move [X31+120], X1
	046 Add X0, X31, 112
	047 Move X1, X31
	048 Call Enumerator.MoveNext, X0
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {80}
	053 Move X21, 0x2177000
	054 Move X21, [X21+1080]
	055 Add X20, X19, 128
	056 Add X0, X31, 112
	057 Move X1, X31
	058 Call Enumerator.get_Current, X0
	059 Move X1, [X21]
	060 Move X2, X31
	061 Call String.op_Equality, X0, X1
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {73}
	066 Add X0, X31, 8
	067 Move W2, 88
	068 Move X1, X20
	069 Call 0x3EB2AC0
	070 Add X1, X31, 8
	071 Move X0, X19
	072 Call NetworkGrabber.HandleGrabInfoChange, X0, X1
	073 Add X0, X31, 112
	074 Move X1, X31
	075 Call Enumerator.MoveNext, X0
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {56}
	080 Move X20, [X31+144]
	081 Move X19, [X31+152]
	082 Move X30, [X31+128]
	083 Move X21, [X31+136]
	084 Add X31, X31, 160
	085 Return 
	086 Call 0x1C17F20

Method: System.Void HandleGrabInfoChange(Fusion.XR.Host.Grabbing.GrabInfo newGrabInfo)

Disassembly:
	0x01FA4DFC LDR V0, [X31 + 0x3]
	0x01FA4E00 STUR D0, [X19 + 0xF4]
	0x01FA4E04 LDR V0, [X31 + 0x1]
	0x01FA4E08 STUR D0, [X19 + 0xFC]
	0x01FA4E0C LDR X8, [X19 + 0x148]
	0x01FA4E10 LDR V0, [X31 + 0x2]
	0x01FA4E14 CBZ X8, 0x1FA52E8
	0x01FA4E18 LDR X0, [X8 + 0x88]
	0x01FA4E1C CBZ X0, 0x1FA52E8
	0x01FA4E20 MOV S1, V0.S[1]
	0x01FA4E24 LDR V2, [X31 + 0x3]
	0x01FA4E28 MOV X1, X31
	0x01FA4E2C BL 0x3C8E908
	0x01FA4E30 LDR X8, [X19 + 0x148]
	0x01FA4E34 CBZ X8, 0x1FA52E8
	0x01FA4E38 LDR X0, [X8 + 0x88]
	0x01FA4E3C LDR V1, [X31 + 0x1]
	0x01FA4E40 CBZ X0, 0x1FA52E8
	0x01FA4E44 LDR V0, [X31 + 0x3]
	0x01FA4E48 MOV S2, V1.S[1]
	0x01FA4E4C MOV X1, X31
	0x01FA4E50 MOV S0, V0.S[1]
	0x01FA4E54 BL 0x3C8EA40
	0x01FA4E58 B 0x1FA51C8
	0x01FA4E5C LDUR X1, [X19 + 0xA4]
	0x01FA4E60 MOV X0, X19
	0x01FA4E64 STP V4, V5, [X31 + 0x10]
	0x01FA4E68 BL 0x1FA4648
	0x01FA4E6C MOV X21, X0
	0x01FA4E70 B 0x1FA5000
	0x01FA4E74 MOV X23, X29
	0x01FA4E78 MOV W29, W31
	0x01FA4E7C ADRP X21, 0x2434000
	0x01FA4E80 LDR X25, [X31 + 0x180]
	0x01FA4E84 LDRB W8, [X21 + 0xA20]
	0x01FA4E88 LDR W22, [X19 + 0x68]
	0x01FA4E8C CBNZ W8, 0x1FA4EA4
	0x01FA4E90 ADRP X0, 0x2152000
	0x01FA4E94 LDR X0, [X0 + 0x398]
	0x01FA4E98 BL 0x1C16CF4
	0x01FA4E9C MOVZ W8, 0x1
	0x01FA4EA0 STRB W8, [X21 + 0xA20]
	0x01FA4EA4 ADRP X28, 0x2152000
	0x01FA4EA8 LDR X28, [X28 + 0x398]
	0x01FA4EAC LDR X0, [X28]
	0x01FA4EB0 LDR W8, [X0 + 0xE0]
	0x01FA4EB4 CBNZ W8, 0x1FA4EBC
	0x01FA4EB8 BL 0x1C16DFC
	0x01FA4EBC CMP W29, W25
	0x01FA4EC0 B.NE 0x1FA4F28
	0x01FA4EC4 UBFM X8, X25, 0x20, 0x3F
	0x01FA4EC8 CMP W22, W8
	0x01FA4ECC B.NE 0x1FA4F28
	0x01FA4ED0 ADD X0, X31, 0x270
	0x01FA4ED4 ADD X1, X31, 0xE0
	0x01FA4ED8 MOVZ W2, 0xE0
	0x01FA4EDC BL 0x3EB1AC0
	0x01FA4EE0 LDR V1, [X31 + 0x1C0]
	0x01FA4EE4 LDR V0, [X31 + 0x1C8]
	0x01FA4EE8 LDP V3, V2, [X31 + 0x310]
	0x01FA4EEC STP V1, V0, [X31 + 0x20]
	0x01FA4EF0 LDP V1, V0, [X31 + 0x330]
	0x01FA4EF4 STP V3, V2, [X31 + 0x230]
	0x01FA4EF8 STP V1, V0, [X31 + 0x250]
	0x01FA4EFC LDR X0, [X19 + 0x40]
	0x01FA4F00 LDR V0, [X31 + 0x1D0]
	0x01FA4F04 STR V0, [X31 + 0x1]
	0x01FA4F08 CBZ X0, 0x1FA52E8
	0x01FA4F0C MOV X1, X31
	0x01FA4F10 MOV X29, X23
	0x01FA4F14 BL 0x1E93994
	0x01FA4F18 AND X1, X0, 0x0
	0x01FA4F1C MOVZ W2, 0x2
	0x01FA4F20 MOVZ W22, 0x2
	0x01FA4F24 B 0x1FA4FEC
	0x01FA4F28 LDR X8, [X19 + 0x40]
	0x01FA4F2C CBZ X8, 0x1FA4F40
	0x01FA4F30 LDR X8, [X8 + 0x20]
	0x01FA4F34 CBZ X8, 0x1FA4F40
	0x01FA4F38 LDR W29, [X8]
	0x01FA4F3C B 0x1FA4F44
	0x01FA4F40 MOV W29, W31
	0x01FA4F44 LDR X22, [X31 + 0x1D8]
	0x01FA4F48 LDRB W8, [X21 + 0xA20]
	0x01FA4F4C LDR W25, [X19 + 0x68]
	0x01FA4F50 CBNZ W8, 0x1FA4F68
	0x01FA4F54 ADRP X0, 0x2152000
	0x01FA4F58 LDR X0, [X0 + 0x398]
	0x01FA4F5C BL 0x1C16CF4
	0x01FA4F60 MOVZ W8, 0x1
	0x01FA4F64 STRB W8, [X21 + 0xA20]
	0x01FA4F68 LDR X0, [X28]
	0x01FA4F6C LDR W8, [X0 + 0xE0]
	0x01FA4F70 CBNZ W8, 0x1FA4F78
	0x01FA4F74 BL 0x1C16DFC
	0x01FA4F78 CMP W29, W22
	0x01FA4F7C B.NE 0x1FA5180
	0x01FA4F80 UBFM X8, X22, 0x20, 0x3F
	0x01FA4F84 CMP W25, W8
	0x01FA4F88 B.NE 0x1FA5180
	0x01FA4F8C ADD X0, X31, 0x270
	0x01FA4F90 ADD X1, X31, 0xE0
	0x01FA4F94 MOVZ W2, 0x138
	0x01FA4F98 ADD X21, X31, 0x270
	0x01FA4F9C BL 0x3EB1AC0
	0x01FA4FA0 LDR V1, [X31 + 0x218]
	0x01FA4FA4 LDR V0, [X31 + 0x220]
	0x01FA4FA8 ADD X8, X21, 0xF8
	0x01FA4FAC LDR V2, [X8 + 0x1]
	0x01FA4FB0 LDUR V3, [X27 + 0xF8]
	0x01FA4FB4 STP V1, V0, [X31 + 0x20]
	0x01FA4FB8 LDP V1, V0, [X8 + 0x20]
	0x01FA4FBC STP V3, V2, [X31 + 0x230]
	0x01FA4FC0 STP V1, V0, [X31 + 0x250]
	0x01FA4FC4 LDR X0, [X19 + 0x40]
	0x01FA4FC8 LDR V0, [X31 + 0x228]
	0x01FA4FCC STR V0, [X31 + 0x1]
	0x01FA4FD0 CBZ X0, 0x1FA52E8
	0x01FA4FD4 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+176], X30
	003 Move [X31+192], X24
	004 Move [X31+200], X23
	005 Move [X31+208], X22
	006 Move [X31+216], X21
	007 Move [X31+224], X20
	008 Move [X31+232], X19
	009 Move X21, 0x2436000
	010 Move X22, 0x2150000
	011 Move W8, [X21+2030]
	012 Move X22, [X22+1432]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x2178000
	020 Move X0, [X0+1072]
	021 Call 0x1C17CF4
	022 Move X0, 0x2150000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+2030], W8
	027 Move X0, [X22]
	028 Move [X31+184], X31
	029 Move X21, [X19+224]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X21
	035 Move X1, X31
	036 Move X2, X31
	037 Call Object.op_Inequality, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {61}
	042 Move X21, [X19+224]
	043 Add X0, X31, 0
	044 Move W2, 88
	045 Move X1, X20
	046 Call 0x3EB2AC0
	047 Compare X21, 0
	048 JumpIfEqual {147}
	049 Move X23, [X21]
	050 Add X0, X31, 88
	051 Add X1, X31, 0
	052 Move W2, 88
	053 Move X24, [X23+632]
	054 Call 0x3EB2AC0
	055 Move X3, [X23+640]
	056 Add X2, X31, 88
	057 Move X0, X21
	058 Move X1, X19
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move [X19+224], X31
	061 Move X23, [X20]
	062 Move X0, X31
	063 Call NetworkBehaviourId.get_None
	064 Move X24, 0x2435000
	065 Move W8, [X24+2592]
	066 Move X21, X0
	067 Compare W8, 0
	068 JumpIfNotEqual {74}
	069 Move X0, 0x2153000
	070 Move X0, [X0+920]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X24+2592], W8
	074 Move X8, 0x2153000
	075 Move X8, [X8+920]
	076 Move X0, [X8]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X8, X21
	083 ShiftRight X8, 32
	084 And X8, X8, 0x7FFFFFFF
	085 Move X9, X23
	086 ShiftRight X9, 32
	087 And X9, X9, 0x7FFFFFFF
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X8, [X19+64]
	090 Compare X8, 0
	091 JumpIfEqual {147}
	092 Move X0, [X8+48]
	093 Compare X0, 0
	094 JumpIfEqual {147}
	095 Move X8, 0x2178000
	096 Move X1, [X20]
	097 Move X8, [X8+1072]
	098 Add X2, X31, 184
	099 Move X3, [X8]
	100 Call 0x222CD98, X0, X1, X2
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {138}
	105 Move X21, [X31+184]
	106 Move [X19+224], X21
	107 Move X0, [X22]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X0, X21
	113 Move X1, X31
	114 Move X2, X31
	115 Call Object.op_Inequality, X0, X1
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {138}
	120 Move X21, [X19+224]
	121 Add X0, X31, 0
	122 Move W2, 88
	123 Move X1, X20
	124 Call 0x3EB2AC0
	125 Compare X21, 0
	126 JumpIfEqual {147}
	127 Move X20, [X21]
	128 Add X0, X31, 88
	129 Add X1, X31, 0
	130 Move W2, 88
	131 Move X22, [X20+616]
	132 Call 0x3EB2AC0
	133 Move X3, [X20+624]
	134 Add X2, X31, 88
	135 Move X0, X21
	136 Move X1, X19
	137 NotImplemented "Instruction BLR not yet implemented."
	138 Move X20, [X31+224]
	139 Move X19, [X31+232]
	140 Move X22, [X31+208]
	141 Move X21, [X31+216]
	142 Move X24, [X31+192]
	143 Move X23, [X31+200]
	144 Move X30, [X31+176]
	145 Add X31, X31, 240
	146 Return 
	147 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01FA50D0 LDR X0, [X19 + 0x40]
	0x01FA50D4 CBZ X0, 0x1FA52E8
	0x01FA50D8 MOV X1, X31
	0x01FA50DC BL 0x1E936F8

ISIL:
	001 Move W8, 1
	002 Move X1, X31
	003 Move [X0+216], W8
	004 Call NetworkBehaviour..ctor, X0
	005 Return 

