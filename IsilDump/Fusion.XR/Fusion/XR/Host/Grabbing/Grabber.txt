Type: Fusion.XR.Host.Grabbing.Grabber

Method: Fusion.XR.Host.Grabbing.GrabInfo get_GrabInfo()

Disassembly:
	0x01FA01F0 BL 0x1C16CF4
	0x01FA01F4 MOVZ W8, 0x1
	0x01FA01F8 STRB W8, [X22 + 0x7BB]
	0x01FA01FC LDR X0, [X23]
	0x01FA0200 BL 0x1C16F10
	0x01FA0204 LDR X2, [X20]
	0x01FA0208 MOV X1, X19
	0x01FA020C MOV X3, X31
	0x01FA0210 MOV X20, X0
	0x01FA0214 BL 0x3314368
	0x01FA0218 LDR X0, [X21]
	0x01FA021C LDR W8, [X0 + 0xE0]
	0x01FA0220 CBNZ W8, 0x1FA0228
	0x01FA0224 BL 0x1C16DFC
	0x01FA0228 MOV X0, X20
	0x01FA022C LDP X20, X19, [X31 + 0x20]
	0x01FA0230 LDP X22, X21, [X31 + 0x10]
	0x01FA0234 MOV X1, X31
	0x01FA0238 LDP X30, X23, [X31], #0x30
	0x01FA023C B 0x377058C
	0x01FA0240 SUB X31, X31, 0x60
	0x01FA0244 STP X30, X21, [X31 + 0x40]
	0x01FA0248 STP X20, X19, [X31 + 0x50]
	0x01FA024C ADRP X20, 0x2439000
	0x01FA0250 LDRB W8, [X20 + 0x7BC]
	0x01FA0254 MOV X19, X0
	0x01FA0258 TBNZ X8, 0x0, 0x1FA0270
	0x01FA025C ADRP X0, 0x217B000
	0x01FA0260 LDR X0, [X0 + 0x278]
	0x01FA0264 BL 0x1C16CF4
	0x01FA0268 MOVZ W8, 0x1
	0x01FA026C STRB W8, [X20 + 0x7BC]
	0x01FA0270 LDRB W8, [X19 + 0x39]
	0x01FA0274 CBZ W8, 0x1FA0280
	0x01FA0278 MOV X0, X19
	0x01FA027C BL 0x1FA031C
	0x01FA0280 MOV X0, X19
	0x01FA0284 MOV X1, X31
	0x01FA0288 BL 0x3C32E90
	0x01FA028C CBZ X0, 0x1FA0318
	0x01FA0290 MOV X1, X31
	0x01FA0294 BL 0x3C3F58C
	0x01FA0298 MOV X0, X19
	0x01FA029C MOV X1, X31
	0x01FA02A0 STP S0, S1, [X19 + 0x60]
	0x01FA02A4 STR S2, [X19 + 0x68]
	0x01FA02A8 BL 0x3C32E90
	0x01FA02AC CBZ X0, 0x1FA0318
	0x01FA02B0 ADRP X20, 0x217B000
	0x01FA02B4 LDR X20, [X20 + 0x278]
	0x01FA02B8 MOV X1, X31
	0x01FA02BC ADD X21, X19, 0x60
	0x01FA02C0 BL 0x3C3DEB4
	0x01FA02C4 STP S0, S1, [X19 + 0x6C]
	0x01FA02C8 STP S2, S3, [X19 + 0x74]
	0x01FA02CC LDR V0, [X21]
	0x01FA02D0 LDUR V1, [X21 + 0xC]
	0x01FA02D4 MOV X0, X31
	0x01FA02D8 ADD X19, X19, 0x40
	0x01FA02DC STR V0, [X31]
	0x01FA02E0 STUR V1, [X31 + 0xC]
	0x01FA02E4 BL 0x3C3C6C4
	0x01FA02E8 LDR V1, [X31]
	0x01FA02EC LDUR V2, [X31 + 0xC]
	0x01FA02F0 LDR X2, [X20]
	0x01FA02F4 ADD X1, X31, 0x20
	0x01FA02F8 MOV X0, X19
	0x01FA02FC STR V1, [X31 + 0x2]
	0x01FA0300 STUR V2, [X31 + 0x2C]
	0x01FA0304 BL 0x26EEEEC
	0x01FA0308 LDP X20, X19, [X31 + 0x50]
	0x01FA030C LDP X30, X21, [X31 + 0x40]
	0x01FA0310 ADD X31, X31, 0x60
	0x01FA0314 RET
	0x01FA0318 BL 0x1C16F20
	0x01FA031C SUB X31, X31, 0x40

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x243A000
	006 Move W9, [X21+2015]
	007 Move X20, X0
	008 Move X19, X8
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2154000
	014 Move X0, [X0+1432]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2015], W8
	018 Move W8, [X20+136]
	019 Compare W8, 0
	020 JumpIfEqual {33}
	021 NotImplemented "Instruction MOVI not yet implemented."
	022 Move [X19+80], X31
	023 Move [X19+48], V0
	024 Move [X19+56], V0
	025 Move [X19+16], V0
	026 Move [X19+24], V0
	027 Move [X19], V0
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return X0
	033 Move X8, 0x2154000
	034 Move X8, [X8+1432]
	035 Move X21, [X20+32]
	036 Move X0, [X8]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X21
	042 Move X1, X31
	043 Call Object.op_Implicit, X0
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {70}
	048 Move X8, [X20+32]
	049 Compare X8, 0
	050 JumpIfEqual {96}
	051 Move X9, [X8+40]
	052 Compare X9, 0
	053 JumpIfEqual {96}
	054 Move X10, [X9+64]
	055 Compare X10, 0
	056 JumpIfEqual {61}
	057 Move X10, [X10+32]
	058 Compare X10, 0
	059 JumpIfEqual {61}
	060 Move W10, [X10]
	061 Move W9, [X9+104]
	062 NotImplemented "Instruction BFM not yet implemented."
	063 Move [X20+140], X10
	064 Move W9, [X8+56]
	065 Move X10, [X8+48]
	066 Move [X20+156], W9
	067 Move [X20+148], X10
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 Move [X20+10], V0
	070 Move X0, X31
	071 Call NetworkBehaviourId.get_None
	072 Move X8, [X20+72]
	073 Move W9, [X20+80]
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 Move [X20+176], X8
	077 Move W8, [X20+108]
	078 Move [X20+184], W9
	079 Move X9, [X20+112]
	080 Move [X20+204], X10
	081 Move W10, [X20+120]
	082 Move [X20+140], X0
	083 Move [X20+212], W8
	084 Move [X20+216], X9
	085 Move [X20+188], V0
	086 Move [X20+224], W10
	087 Add X1, X20, 140
	088 Move X0, X19
	089 Move X20, [X31+16]
	090 Move X19, [X31+24]
	091 Move W2, 88
	092 Move X30, [X31+32]
	093 Move X21, [X31+40]
	094 Call 0x3EB2AC0
	095 Return X0
	096 Call 0x1C17F20

Method: System.Void Awake()

Disassembly:
	0x01FA4098 MOV X1, X20
	0x01FA409C BL 0x3EB1AC0
	0x01FA40A0 ADD X1, X31, 0x8
	0x01FA40A4 MOV X0, X19
	0x01FA40A8 BL 0x1FA3DFC
	0x01FA40AC ADD X0, X31, 0x70
	0x01FA40B0 MOV X1, X31
	0x01FA40B4 BL 0x1E76088
	0x01FA40B8 TBNZ X0, 0x0, 0x1FA4074
	0x01FA40BC LDP X20, X19, [X31 + 0x90]
	0x01FA40C0 LDP X30, X21, [X31 + 0x80]
	0x01FA40C4 ADD X31, X31, 0xA0
	0x01FA40C8 RET
	0x01FA40CC BL 0x1C16F20
	0x01FA40D0 MOVZ W8, 0x1
	0x01FA40D4 MOV X1, X31
	0x01FA40D8 STR W8, [X0 + 0xD8]
	0x01FA40DC B 0x1E74F04
	0x01FA40E0 STP X30, X21, [X31 - 0x20]!
	0x01FA40E4 STP X20, X19, [X31 + 0x10]
	0x01FA40E8 ADRP X20, 0x2435000
	0x01FA40EC ADRP X21, 0x2177000
	0x01FA40F0 LDRB W8, [X20 + 0x7EF]
	0x01FA40F4 LDR X21, [X21 + 0x440]
	0x01FA40F8 MOV X19, X0
	0x01FA40FC TBNZ X8, 0x0, 0x1FA4114
	0x01FA4100 ADRP X0, 0x2177000
	0x01FA4104 LDR X0, [X0 + 0x440]
	0x01FA4108 BL 0x1C16CF4
	0x01FA410C MOVZ W8, 0x1
	0x01FA4110 STRB W8, [X20 + 0x7EF]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2436000
	007 Move X22, 0x2178000
	008 Move X20, 0x2178000
	009 Move W8, [X21+2016]
	010 Move X22, [X22+784]
	011 Move X20, [X20+848]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2178000
	018 Move X0, [X0+784]
	019 Call 0x1C17CF4
	020 Move X0, 0x2178000
	021 Move X0, [X0+848]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2016], W8
	025 Move X1, [X22]
	026 Move X0, X19
	027 Call 0x21A4F50, X0
	028 Move [X19+56], X0
	029 Move X1, [X20]
	030 Move X0, X19
	031 Call 0x21A4F50, X0
	032 Move [X19+64], X0
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return 

Method: System.Void OnTriggerStay(UnityEngine.Collider other)

Disassembly:
	0x01FA4114 LDR X1, [X21]
	0x01FA4118 MOV X0, X19
	0x01FA411C BL 0x21A3894
	0x01FA4120 STR X0, [X19 + 0xA0]
	0x01FA4124 LDP X20, X19, [X31 + 0x10]
	0x01FA4128 LDP X30, X21, [X31], #0x20
	0x01FA412C RET
	0x01FA4130 STP X30, X23, [X31 - 0x30]!
	0x01FA4134 STP X22, X21, [X31 + 0x10]
	0x01FA4138 STP X20, X19, [X31 + 0x20]
	0x01FA413C ADRP X23, 0x2435000
	0x01FA4140 ADRP X22, 0x214F000
	0x01FA4144 LDRB W8, [X23 + 0x7F0]
	0x01FA4148 LDR X22, [X22 + 0x598]
	0x01FA414C MOV X20, X2
	0x01FA4150 MOV X21, X1
	0x01FA4154 MOV X19, X0
	0x01FA4158 TBNZ X8, 0x0, 0x1FA4170
	0x01FA415C ADRP X0, 0x214F000
	0x01FA4160 LDR X0, [X0 + 0x598]
	0x01FA4164 BL 0x1C16CF4
	0x01FA4168 MOVZ W8, 0x1
	0x01FA416C STRB W8, [X23 + 0x7F0]
	0x01FA4170 LDR X8, [X19]
	0x01FA4174 MOV X0, X19
	0x01FA4178 LDR X9, [X8 + 0x248]
	0x01FA417C LDR X1, [X8 + 0x250]
	0x01FA4180 BLR X9
	0x01FA4184 LDR X8, [X22]
	0x01FA4188 MOV X22, X0
	0x01FA418C LDR W9, [X8 + 0xE0]
	0x01FA4190 CBNZ W9, 0x1FA419C
	0x01FA4194 MOV X0, X8
	0x01FA4198 BL 0x1C16DFC
	0x01FA419C MOV X0, X22
	0x01FA41A0 MOV X1, X21
	0x01FA41A4 MOV X2, X31
	0x01FA41A8 BL 0x3C354F8
	0x01FA41AC TBZ X0, 0x0, 0x1FA41C0
	0x01FA41B0 LDP X20, X19, [X31 + 0x20]
	0x01FA41B4 LDP X22, X21, [X31 + 0x10]
	0x01FA41B8 LDP X30, X23, [X31], #0x30
	0x01FA41BC RET
	0x01FA41C0 LDR X8, [X19]
	0x01FA41C4 MOV X0, X19
	0x01FA41C8 LDR X9, [X8 + 0x248]
	0x01FA41CC LDR X1, [X8 + 0x250]
	0x01FA41D0 BLR X9
	0x01FA41D4 LDR X8, [X19]
	0x01FA41D8 MOV X0, X19
	0x01FA41DC MOV X1, X31
	0x01FA41E0 LDR X9, [X8 + 0x258]
	0x01FA41E4 LDR X2, [X8 + 0x260]
	0x01FA41E8 BLR X9
	0x01FA41EC LDR X0, [X19 + 0xA0]
	0x01FA41F0 CBZ X0, 0x1FA4250
	0x01FA41F4 MOV X1, X31
	0x01FA41F8 BL 0x3C32E90
	0x01FA41FC CBZ X0, 0x1FA4250
	0x01FA4200 LDP S1, S2, [X20 + 0x28]
	0x01FA4204 LDR V0, [X20 + 0x24]
	0x01FA4208 MOV X1, X31
	0x01FA420C BL 0x3C3F62C
	0x01FA4210 LDR X0, [X19 + 0xA0]
	0x01FA4214 CBZ X0, 0x1FA4250
	0x01FA4218 MOV X1, X31
	0x01FA421C BL 0x3C32E90
	0x01FA4220 CBZ X0, 0x1FA4250
	0x01FA4224 LDP S2, S3, [X20 + 0x38]
	0x01FA4228 LDP S0, S1, [X20 + 0x30]
	0x01FA422C MOV X1, X31
	0x01FA4230 BL 0x3C3F7AC
	0x01FA4234 LDR X8, [X19 + 0xA0]
	0x01FA4238 CBZ X8, 0x1FA4250
	0x01FA423C MOV X0, X19
	0x01FA4240 LDP X20, X19, [X31 + 0x20]
	0x01FA4244 LDP X22, X21, [X31 + 0x10]
	0x01FA4248 LDP X30, X23, [X31], #0x30
	0x01FA424C B 0x1FA3BC4
	0x01FA4250 BL 0x1C16F20
	0x01FA4254 SUB X31, X31, 0x100
	0x01FA4258 STR X30, [X31 + 0xD0]
	0x01FA425C STP X22, X21, [X31 + 0xE0]
	0x01FA4260 STP X20, X19, [X31 + 0xF0]
	0x01FA4264 LDR X22, [X0 + 0xA0]
	0x01FA4268 MOV X21, X2
	0x01FA426C MOV X19, X0
	0x01FA4270 MOV X20, X1
	0x01FA4274 ADD X0, X31, 0x78
	0x01FA4278 MOVZ W2, 0x58
	0x01FA427C MOV X1, X21
	0x01FA4280 BL 0x3EB1AC0
	0x01FA4284 LDR X8, [X31 + 0x80]
	0x01FA4288 LDR W9, [X31 + 0x88]
	0x01FA428C STR X8, [X31 + 0x68]
	0x01FA4290 STR W9, [X31 + 0x70]
	0x01FA4294 CBZ X22, 0x1FA4310
	0x01FA4298 LDR W8, [X31 + 0x70]
	0x01FA429C LDR X9, [X31 + 0x68]
	0x01FA42A0 ADD X0, X31, 0x10
	0x01FA42A4 MOVZ W2, 0x58
	0x01FA42A8 STR W8, [X22 + 0x38]
	0x01FA42AC STR X9, [X22 + 0x30]
	0x01FA42B0 LDR X22, [X19 + 0xA0]
	0x01FA42B4 MOV X1, X21
	0x01FA42B8 BL 0x3EB1AC0
	0x01FA42BC LDUR V0, [X31 + 0x24]
	0x01FA42C0 STR V0, [X31]
	0x01FA42C4 CBZ X22, 0x1FA4310
	0x01FA42C8 LDR V0, [X31]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2436000
	007 Move X22, 0x2150000
	008 Move W8, [X21+2017]
	009 Move X22, [X22+1432]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x2178000
	017 Move X0, [X0+992]
	018 Call 0x1C17CF4
	019 Move X0, 0x2150000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2017], W8
	024 Move X0, [X22]
	025 Move X21, [X19+64]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X21
	031 Move X1, X31
	032 Call Object.op_Implicit, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {65}
	037 Move X8, [X19+64]
	038 Compare X8, 0
	039 JumpIfEqual {152}
	040 Move X0, [X22]
	041 Move X21, [X8+56]
	042 Move W9, [X0+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X21
	047 Move X1, X31
	048 Call Object.op_Implicit, X0
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {65}
	053 Move X8, [X19+64]
	054 Compare X8, 0
	055 JumpIfEqual {152}
	056 Move X0, [X8+56]
	057 Compare X0, 0
	058 JumpIfEqual {152}
	059 Move X1, X31
	060 Call NetworkRunner.get_IsResimulation, X0
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {146}
	065 Move X0, [X22]
	066 Move X21, [X19+32]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X0, X21
	072 Move X1, X31
	073 Move X2, X31
	074 Call Object.op_Inequality, X0, X1
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {146}
	079 Move X0, [X22]
	080 Move X21, [X19+40]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move X0, X21
	086 Move X1, X20
	087 Move X2, X31
	088 Call Object.op_Equality, X0, X1
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {94}
	093 Move X21, [X19+48]
	094 Compare X20, 0
	095 JumpIfEqual {152}
	096 Move X8, 0x2178000
	097 Move X8, [X8+992]
	098 Move X0, X20
	099 Move X1, [X8]
	100 Call 0x21A4F50, X0
	101 Move X21, X0
	102 Move [X19+40], X20
	103 Move [X19+48], X21
	104 Move X0, [X22]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Move X0, X21
	110 Move X1, X31
	111 Move X2, X31
	112 Call Object.op_Inequality, X0, X1
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {146}
	117 Compare X21, 0
	118 JumpIfEqual {152}
	119 Move X0, [X22]
	120 Move X20, [X21+32]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Move X0, X20
	126 Move X1, X31
	127 Move X2, X31
	128 Call Object.op_Inequality, X0, X1
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfEqual {146}
	133 Move X8, [X19+56]
	134 Compare X8, 0
	135 JumpIfEqual {152}
	136 Move W8, [X8+60]
	137 Compare W8, 0
	138 JumpIfEqual {146}
	139 Move X0, X19
	140 Move X1, X21
	141 Move X20, [X31+32]
	142 Move X19, [X31+40]
	143 Move X22, [X31+16]
	144 Move X21, [X31+24]
	145 Move X30, [X31+48]
	146 Move X20, [X31+32]
	147 Move X19, [X31+40]
	148 Move X22, [X31+16]
	149 Move X21, [X31+24]
	150 Move X30, [X31+48]
	151 Return 
	152 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x01FA43E0 CBZ X8, 0x1FA4534
	0x01FA43E4 ADRP X21, 0x2152000
	0x01FA43E8 LDR X21, [X21 + 0xE40]
	0x01FA43EC MOV X20, X0
	0x01FA43F0 MOV X0, X8
	0x01FA43F4 MOV X1, X31
	0x01FA43F8 BL 0x1E9EA20
	0x01FA43FC LDR X8, [X21]
	0x01FA4400 MOV X21, X0
	0x01FA4404 LDR W9, [X8 + 0xE0]
	0x01FA4408 CBNZ W9, 0x1FA4414
	0x01FA440C MOV X0, X8
	0x01FA4410 BL 0x1C16DFC
	0x01FA4414 CMP W20, W21
	0x01FA4418 B.EQ 0x1FA4434
	0x01FA441C LDR X20, [X19 + 0xA0]
	0x01FA4420 MOV X0, X19
	0x01FA4424 BL 0x1FA3AD8
	0x01FA4428 CBZ X20, 0x1FA4534
	0x01FA442C AND W8, W0, 0x1
	0x01FA4430 STRB W8, [X20 + 0x80]
	0x01FA4434 MOV X0, X19
	0x01FA4438 BL 0x1FA3AD8
	0x01FA443C LDR X20, [X19 + 0xA0]
	0x01FA4440 TBZ X0, 0x0, 0x1FA4490
	0x01FA4444 MOV X0, X19
	0x01FA4448 MOV X1, X31
	0x01FA444C BL 0x3C32E90
	0x01FA4450 LDR X8, [X19]
	0x01FA4454 MOV X21, X0
	0x01FA4458 MOV X0, X19
	0x01FA445C LDR X9, [X8 + 0x248]
	0x01FA4460 LDR X1, [X8 + 0x250]
	0x01FA4464 BLR X9
	0x01FA4468 CBZ X0, 0x1FA4534
	0x01FA446C MOV X1, X31
	0x01FA4470 BL 0x3C32E90
	0x01FA4474 CBZ X20, 0x1FA4534
	0x01FA4478 MOV X2, X0
	0x01FA447C MOV X0, X20
	0x01FA4480 LDP X20, X19, [X31 + 0x10]
	0x01FA4484 MOV X1, X21
	0x01FA4488 LDP X30, X21, [X31], #0x20
	0x01FA448C B 0x1FA38FC
	0x01FA4490 CBZ X20, 0x1FA4534
	0x01FA4494 LDR V0, [X20 + 0x84]
	0x01FA4498 FMOV S1, -1
	0x01FA449C FCMP S0, S1
	0x01FA44A0 B.EQ 0x1FA4528
	0x01FA44A4 MOV X0, X31
	0x01FA44A8 BL 0x3C3C6C4
	0x01FA44AC LDR X8, [X19 + 0xA0]
	0x01FA44B0 CBZ X8, 0x1FA4534
	0x01FA44B4 LDR V1, [X8 + 0x84]
	0x01FA44B8 LDR V2, [X19 + 0x98]
	0x01FA44BC FSUB S0, S0, S1
	0x01FA44C0 FCMP S0, S2
	0x01FA44C4 B.PL 0x1FA4520
	0x01FA44C8 MOV X0, X19
	0x01FA44CC MOV X1, X31
	0x01FA44D0 BL 0x3C32E90
	0x01FA44D4 LDR X8, [X19 + 0xA0]
	0x01FA44D8 CBZ X8, 0x1FA4534
	0x01FA44DC CBZ X0, 0x1FA4534
	0x01FA44E0 LDP S1, S2, [X8 + 0x50]
	0x01FA44E4 LDR V0, [X8 + 0x4C]
	0x01FA44E8 MOV X1, X31
	0x01FA44EC BL 0x3C3F62C
	0x01FA44F0 MOV X0, X19
	0x01FA44F4 MOV X1, X31
	0x01FA44F8 BL 0x3C32E90
	0x01FA44FC LDR X8, [X19 + 0xA0]
	0x01FA4500 CBZ X8, 0x1FA4534
	0x01FA4504 CBZ X0, 0x1FA4534
	0x01FA4508 LDP S2, S3, [X8 + 0x60]
	0x01FA450C LDP S0, S1, [X8 + 0x58]
	0x01FA4510 LDP X20, X19, [X31 + 0x10]
	0x01FA4514 MOV X1, X31
	0x01FA4518 LDP X30, X21, [X31], #0x20
	0x01FA451C B 0x3C3F7AC
	0x01FA4520 MOVZ W9, 0xBF800000
	0x01FA4524 STR W9, [X8 + 0x84]
	0x01FA4528 LDP X20, X19, [X31 + 0x10]
	0x01FA452C LDP X30, X21, [X31], #0x20
	0x01FA4530 RET
	0x01FA4534 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2436000
	006 Move X21, 0x2150000
	007 Move W8, [X20+2018]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2150000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2018], W8
	019 Move X0, [X21]
	020 Move X20, [X19+64]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Call Object.op_Implicit, X0
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {60}
	032 Move X8, [X19+64]
	033 Compare X8, 0
	034 JumpIfEqual {123}
	035 Move X0, [X21]
	036 Move X20, [X8+56]
	037 Move W9, [X0+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X20
	042 Move X1, X31
	043 Call Object.op_Implicit, X0
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {60}
	048 Move X8, [X19+64]
	049 Compare X8, 0
	050 JumpIfEqual {123}
	051 Move X0, [X8+56]
	052 Compare X0, 0
	053 JumpIfEqual {123}
	054 Move X1, X31
	055 Call NetworkRunner.get_IsResimulation, X0
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {112}
	060 Move X0, [X21]
	061 Move X20, [X19+32]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X20
	067 Move X1, X31
	068 Move X2, X31
	069 Call Object.op_Inequality, X0, X1
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {92}
	074 Move X8, [X19+32]
	075 Compare X8, 0
	076 JumpIfEqual {123}
	077 Move X0, [X21]
	078 Move X20, [X8+32]
	079 Move W9, [X0+224]
	080 Compare W9, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X0, X20
	084 Move X1, X19
	085 Move X2, X31
	086 Call Object.op_Inequality, X0, X1
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {92}
	091 Move [X19+32], X31
	092 Move X0, [X21]
	093 Move X20, [X19+32]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move X0, X20
	099 Move X1, X31
	100 Move X2, X31
	101 Call Object.op_Inequality, X0, X1
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {112}
	106 Move X8, [X19+56]
	107 Compare X8, 0
	108 JumpIfEqual {123}
	109 Move W8, [X8+60]
	110 Compare W8, 0
	111 JumpIfEqual {117}
	112 Move X20, [X31+16]
	113 Move X19, [X31+24]
	114 Move X30, [X31+32]
	115 Move X21, [X31+40]
	116 Return 
	117 Move X1, [X19+32]
	118 Move X0, X19
	119 Move X20, [X31+16]
	120 Move X19, [X31+24]
	121 Move X30, [X31+32]
	122 Move X21, [X31+40]
	123 Call 0x1C17F20

Method: System.Void Grab(Fusion.XR.Host.Grabbing.Grabbable grabbable)

Disassembly:
	0x01FA42CC STUR V0, [X22 + 0x3C]
	0x01FA42D0 LDR X8, [X19 + 0xA0]
	0x01FA42D4 CBZ X8, 0x1FA4310
	0x01FA42D8 MOVZ W9, 0xBF800000
	0x01FA42DC STR W9, [X8 + 0x84]
	0x01FA42E0 LDR X8, [X19]
	0x01FA42E4 MOV X0, X19
	0x01FA42E8 MOV X1, X20
	0x01FA42EC LDR X9, [X8 + 0x258]
	0x01FA42F0 LDR X2, [X8 + 0x260]
	0x01FA42F4 BLR X9
	0x01FA42F8 MOV X0, X19
	0x01FA42FC LDP X20, X19, [X31 + 0xF0]
	0x01FA4300 LDP X22, X21, [X31 + 0xE0]
	0x01FA4304 LDR X30, [X31 + 0xD0]
	0x01FA4308 ADD X31, X31, 0x100
	0x01FA430C B 0x1FA3B50
	0x01FA4310 BL 0x1C16F20
	0x01FA4314 STP X30, X21, [X31 - 0x20]!
	0x01FA4318 STP X20, X19, [X31 + 0x10]
	0x01FA431C MOV X19, X0
	0x01FA4320 LDR X0, [X0 + 0x40]
	0x01FA4324 CBZ X0, 0x1FA439C
	0x01FA4328 MOV X1, X31
	0x01FA432C BL 0x1E93668
	0x01FA4330 TBZ X0, 0x0, 0x1FA4390
	0x01FA4334 MOV X0, X19
	0x01FA4338 BL 0x1FA3AD8
	0x01FA433C TBZ X0, 0x0, 0x1FA4390
	0x01FA4340 LDR X20, [X19 + 0xA0]
	0x01FA4344 MOV X0, X19
	0x01FA4348 MOV X1, X31
	0x01FA434C BL 0x3C32E90
	0x01FA4350 LDR X8, [X19]
	0x01FA4354 MOV X21, X0
	0x01FA4358 MOV X0, X19
	0x01FA435C LDR X9, [X8 + 0x248]
	0x01FA4360 LDR X1, [X8 + 0x250]
	0x01FA4364 BLR X9
	0x01FA4368 CBZ X0, 0x1FA439C
	0x01FA436C MOV X1, X31
	0x01FA4370 BL 0x3C32E90
	0x01FA4374 CBZ X20, 0x1FA439C
	0x01FA4378 MOV X2, X0
	0x01FA437C MOV X0, X20
	0x01FA4380 LDP X20, X19, [X31 + 0x10]
	0x01FA4384 MOV X1, X21
	0x01FA4388 LDP X30, X21, [X31], #0x20
	0x01FA438C B 0x1FA38FC
	0x01FA4390 LDP X20, X19, [X31 + 0x10]
	0x01FA4394 LDP X30, X21, [X31], #0x20
	0x01FA4398 RET
	0x01FA439C BL 0x1C16F20
	0x01FA43A0 STP X30, X21, [X31 - 0x20]!
	0x01FA43A4 STP X20, X19, [X31 + 0x10]
	0x01FA43A8 ADRP X20, 0x2435000
	0x01FA43AC LDRB W8, [X20 + 0x7F1]
	0x01FA43B0 MOV X19, X0
	0x01FA43B4 TBNZ X8, 0x0, 0x1FA43CC
	0x01FA43B8 ADRP X0, 0x2152000
	0x01FA43BC LDR X0, [X0 + 0xE40]
	0x01FA43C0 BL 0x1C16CF4
	0x01FA43C4 MOVZ W8, 0x1
	0x01FA43C8 STRB W8, [X20 + 0x7F1]
	0x01FA43CC LDR X0, [X19 + 0x40]
	0x01FA43D0 CBZ X0, 0x1FA4534
	0x01FA43D4 MOV X1, X31
	0x01FA43D8 BL 0x1E93994
	0x01FA43DC LDR X8, [X19 + 0x38]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2436000
	009 Move W8, [X21+2019]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x2150000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x2178000
	020 Move X0, [X0+1000]
	021 Call 0x1C17CF4
	022 Move X0, 0x2178000
	023 Move X0, [X0+1008]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+2019], W8
	027 Compare X19, 0
	028 JumpIfEqual {86}
	029 Move X0, X19
	030 Move X1, X31
	031 Call Component.get_gameObject, X0
	032 Compare X0, 0
	033 JumpIfEqual {86}
	034 Move X1, X31
	035 Call Object.get_name, X0
	036 Move X21, X0
	037 Move X0, X20
	038 Move X1, X31
	039 Call Component.get_gameObject, X0
	040 Compare X0, 0
	041 JumpIfEqual {86}
	042 Move X22, 0x2178000
	043 Move X23, 0x2178000
	044 Move X24, 0x2150000
	045 Move X22, [X22+1000]
	046 Move X23, [X23+1008]
	047 Move X24, [X24+2600]
	048 Move X1, X31
	049 Call Object.get_name, X0
	050 Move X8, [X22]
	051 Move X2, [X23]
	052 Move X3, X0
	053 Move X1, X21
	054 Move X0, X8
	055 Move X4, X31
	056 Call String.Concat, X0, X1, X2, X3
	057 Move X8, [X24]
	058 Move X21, X0
	059 Move W9, [X8+224]
	060 Compare W9, 0
	061 JumpIfNotEqual {64}
	062 Move X0, X8
	063 Call 0x1C17DFC
	064 Move X0, X21
	065 Move X1, X31
	066 Call Debug.Log, X0
	067 Move X8, [X19]
	068 Move X0, X19
	069 Move X1, X20
	070 Move X9, [X8+408]
	071 Move X2, [X8+416]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {78}
	077 Move [X20+32], X19
	078 Move X20, [X31+48]
	079 Move X19, [X31+56]
	080 Move X22, [X31+32]
	081 Move X21, [X31+40]
	082 Move X24, [X31+16]
	083 Move X23, [X31+24]
	084 Move X30, [X31+64]
	085 Return 
	086 Call 0x1C17F20

Method: System.Void Ungrab(Fusion.XR.Host.Grabbing.Grabbable grabbable)

Disassembly:
	0x01FA4538 MOVZ W8, 0x40000000
	0x01FA453C STR W8, [X0 + 0x98]
	0x01FA4540 B 0x1FA3BF0
	0x01FA4544 ADD X1, X0, 0xA0
	0x01FA4548 MOVZ W2, 0x64
	0x01FA454C MOV X0, X8
	0x01FA4550 B 0x3EB1AC0
	0x01FA4554 STR X30, [X31 - 0x10]!
	0x01FA4558 ADD X0, X0, 0xA0
	0x01FA455C MOVZ W2, 0x64
	0x01FA4560 BL 0x3EB1B30
	0x01FA4564 LDR X30, [X31], #0x10
	0x01FA4568 RET
	0x01FA456C LDR W0, [X0 + 0x128]
	0x01FA4570 RET
	0x01FA4574 STR W1, [X0 + 0x128]
	0x01FA4578 RET
	0x01FA457C LDR V0, [X0 + 0x12C]
	0x01FA4580 LDR V1, [X0 + 0x130]
	0x01FA4584 LDR V2, [X0 + 0x134]
	0x01FA4588 RET
	0x01FA458C STR S0, [X0 + 0x12C]
	0x01FA4590 STR S1, [X0 + 0x130]
	0x01FA4594 STR S2, [X0 + 0x134]
	0x01FA4598 RET
	0x01FA459C LDR V0, [X0 + 0x138]
	0x01FA45A0 LDR V1, [X0 + 0x13C]
	0x01FA45A4 LDR V2, [X0 + 0x140]
	0x01FA45A8 RET
	0x01FA45AC STR S0, [X0 + 0x138]
	0x01FA45B0 STR S1, [X0 + 0x13C]
	0x01FA45B4 STR S2, [X0 + 0x140]
	0x01FA45B8 RET
	0x01FA45BC STR X30, [X31 - 0x20]!
	0x01FA45C0 STP X20, X19, [X31 + 0x10]
	0x01FA45C4 ADRP X20, 0x2435000
	0x01FA45C8 LDRB W8, [X20 + 0x7F2]
	0x01FA45CC MOV X19, X0
	0x01FA45D0 TBNZ X8, 0x0, 0x1FA45E8
	0x01FA45D4 ADRP X0, 0x2152000
	0x01FA45D8 LDR X0, [X0 + 0xE40]
	0x01FA45DC BL 0x1C16CF4
	0x01FA45E0 MOVZ W8, 0x1
	0x01FA45E4 STRB W8, [X20 + 0x7F2]
	0x01FA45E8 LDRB W8, [X19 + 0x150]
	0x01FA45EC CBZ W8, 0x1FA45F8
	0x01FA45F0 LDR X0, [X19 + 0x1B8]
	0x01FA45F4 B 0x1FA4628
	0x01FA45F8 ADRP X8, 0x2152000
	0x01FA45FC LDR X8, [X8 + 0xE40]
	0x01FA4600 LDR W20, [X19 + 0xA0]
	0x01FA4604 LDR X0, [X8]
	0x01FA4608 LDR W8, [X0 + 0xE0]
	0x01FA460C CBNZ W8, 0x1FA4614
	0x01FA4610 BL 0x1C16DFC
	0x01FA4614 MOV X0, X31
	0x01FA4618 BL 0x1E8D7EC
	0x01FA461C CMP W20, W0
	0x01FA4620 MOV X0, X31
	0x01FA4624 B.NE 0x1FA4634
	0x01FA4628 LDP X20, X19, [X31 + 0x10]
	0x01FA462C LDR X30, [X31], #0x20
	0x01FA4630 RET
	0x01FA4634 LDUR X1, [X19 + 0xA4]
	0x01FA4638 MOV X0, X19
	0x01FA463C LDP X20, X19, [X31 + 0x10]
	0x01FA4640 LDR X30, [X31], #0x20
	0x01FA4644 B 0x1FA4648
	0x01FA4648 SUB X31, X31, 0x30
	0x01FA464C STP X30, X21, [X31 + 0x10]
	0x01FA4650 STP X20, X19, [X31 + 0x20]
	0x01FA4654 ADRP X21, 0x2435000
	0x01FA4658 LDRB W8, [X21 + 0x7F7]
	0x01FA465C MOV X19, X1
	0x01FA4660 MOV X20, X0
	0x01FA4664 TBNZ X8, 0x0, 0x1FA467C
	0x01FA4668 ADRP X0, 0x2177000
	0x01FA466C LDR X0, [X0 + 0x448]
	0x01FA4670 BL 0x1C16CF4
	0x01FA4674 MOVZ W8, 0x1
	0x01FA4678 STRB W8, [X21 + 0x7F7]
	0x01FA467C STR X31, [X31 + 0x8]
	0x01FA4680 LDR X0, [X20 + 0x38]
	0x01FA4684 CBZ X0, 0x1FA46BC
	0x01FA4688 ADRP X8, 0x2177000
	0x01FA468C LDR X8, [X8 + 0x448]
	0x01FA4690 ADD X2, X31, 0x8
	0x01FA4694 MOV X1, X19
	0x01FA4698 LDR X3, [X8]
	0x01FA469C BL 0x222BD98
	0x01FA46A0 LDR X8, [X31 + 0x8]
	0x01FA46A4 LDP X20, X19, [X31 + 0x20]
	0x01FA46A8 LDP X30, X21, [X31 + 0x10]
	0x01FA46AC ANDS W31, W0, 0x1
	0x01FA46B0 CSEL X0, X8, X31, NE
	0x01FA46B4 ADD X31, X31, 0x30
	0x01FA46B8 RET
	0x01FA46BC BL 0x1C16F20
	0x01FA46C0 STR X30, [X31 - 0x30]!
	0x01FA46C4 STP X22, X21, [X31 + 0x10]
	0x01FA46C8 STP X20, X19, [X31 + 0x20]
	0x01FA46CC ADRP X21, 0x2435000
	0x01FA46D0 ADRP X22, 0x2152000
	0x01FA46D4 ADRP X20, 0x2177000
	0x01FA46D8 LDRB W8, [X21 + 0x7F3]
	0x01FA46DC LDR X22, [X22 + 0xD20]
	0x01FA46E0 LDR X20, [X20 + 0x450]
	0x01FA46E4 MOV X19, X0
	0x01FA46E8 TBNZ X8, 0x0, 0x1FA470C
	0x01FA46EC ADRP X0, 0x2152000
	0x01FA46F0 LDR X0, [X0 + 0xD20]
	0x01FA46F4 BL 0x1C16CF4
	0x01FA46F8 ADRP X0, 0x2177000
	0x01FA46FC LDR X0, [X0 + 0x450]
	0x01FA4700 BL 0x1C16CF4
	0x01FA4704 MOVZ W8, 0x1
	0x01FA4708 STRB W8, [X21 + 0x7F3]
	0x01FA470C LDR X1, [X22]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x2436000
	010 Move W8, [X21+2020]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x2150000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move X0, 0x2150000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move X0, 0x2178000
	024 Move X0, [X0+1016]
	025 Call 0x1C17CF4
	026 Move X0, 0x2178000
	027 Move X0, [X0+1008]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+2020], W8
	031 Compare X20, 0
	032 JumpIfEqual {154}
	033 Move X0, X20
	034 Move X1, X31
	035 Call Component.get_gameObject, X0
	036 Compare X0, 0
	037 JumpIfEqual {154}
	038 Move X1, X31
	039 Call Object.get_name, X0
	040 Move X21, X0
	041 Move X0, X19
	042 Move X1, X31
	043 Call Component.get_gameObject, X0
	044 Compare X0, 0
	045 JumpIfEqual {154}
	046 Move X23, 0x2178000
	047 Move X24, 0x2178000
	048 Move X25, 0x2150000
	049 Move X22, 0x2150000
	050 Move X23, [X23+1016]
	051 Move X24, [X24+1008]
	052 Move X25, [X25+2600]
	053 Move X22, [X22+1432]
	054 Move X1, X31
	055 Call Object.get_name, X0
	056 Move X8, [X23]
	057 Move X2, [X24]
	058 Move X3, X0
	059 Move X1, X21
	060 Move X0, X8
	061 Move X4, X31
	062 Call String.Concat, X0, X1, X2, X3
	063 Move X8, [X25]
	064 Move X21, X0
	065 Move W9, [X8+224]
	066 Compare W9, 0
	067 JumpIfNotEqual {70}
	068 Move X0, X8
	069 Call 0x1C17DFC
	070 Move X0, X21
	071 Move X1, X31
	072 Call Debug.Log, X0
	073 Move X0, [X22]
	074 Move X20, [X20+40]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X0, X20
	080 Move X1, X31
	081 Call Object.op_Implicit, X0
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {137}
	086 Move X8, [X19+32]
	087 Compare X8, 0
	088 JumpIfEqual {154}
	089 Move X0, [X8+40]
	090 Compare X0, 0
	091 JumpIfEqual {154}
	092 Move X1, X31
	093 Call Component.get_transform, X0
	094 Compare X0, 0
	095 JumpIfEqual {154}
	096 Move X1, X31
	097 Call Transform.get_position, X0
	098 Move X8, [X19+32]
	099 Move [X19+72], S0
	100 Move [X19+80], S1
	101 Move [X19+80], S2
	102 Compare X8, 0
	103 JumpIfEqual {154}
	104 Move X0, [X8+40]
	105 Compare X0, 0
	106 JumpIfEqual {154}
	107 Move X1, X31
	108 Call Component.get_transform, X0
	109 Compare X0, 0
	110 JumpIfEqual {154}
	111 Move X1, X31
	112 Call Transform.get_rotation, X0
	113 Move X0, [X19+32]
	114 Move [X19+84], S0
	115 Move [X19+92], S1
	116 Move [X19+92], S2
	117 Move [X19+100], S3
	118 Compare X0, 0
	119 JumpIfEqual {154}
	120 Move X8, [X0]
	121 Move X9, [X8+376]
	122 Move X1, [X8+384]
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move X0, [X19+32]
	125 Move [X19+100], S0
	126 Move [X19+108], S1
	127 Move [X19+108], S2
	128 Compare X0, 0
	129 JumpIfEqual {154}
	130 Move X8, [X0]
	131 Move X9, [X8+392]
	132 Move X1, [X8+400]
	133 NotImplemented "Instruction BLR not yet implemented."
	134 Move [X19+112], S0
	135 Move [X19+120], S1
	136 Move [X19+120], S2
	137 Move X0, [X19+32]
	138 Compare X0, 0
	139 JumpIfEqual {154}
	140 Move X8, [X0]
	141 Move X9, [X8+424]
	142 Move X1, [X8+432]
	143 NotImplemented "Instruction BLR not yet implemented."
	144 Move [X19+32], X31
	145 Move X20, [X31+48]
	146 Move X19, [X31+56]
	147 Move X22, [X31+32]
	148 Move X21, [X31+40]
	149 Move X24, [X31+16]
	150 Move X23, [X31+24]
	151 Move X30, [X31+64]
	152 Move X25, [X31+72]
	153 Return 
	154 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01FA4710 MOV X0, X19
	0x01FA4714 BL 0x21A3894

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

