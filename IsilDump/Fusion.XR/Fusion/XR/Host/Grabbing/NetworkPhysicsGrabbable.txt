Type: Fusion.XR.Host.Grabbing.NetworkPhysicsGrabbable

Method: Fusion.XR.Host.Grabbing.DetailedGrabInfo get_DetailedGrabInfo()

Disassembly:
	0x01FA5544 LDR X0, [X21 + 0xF0]
	0x01FA5548 CBZ X0, 0x1FA5614
	0x01FA554C BL 0x1FA06D8
	0x01FA5550 CBZ X0, 0x1FA5614

ISIL:
	001 Add X1, X0, 160
	002 Move W2, 100
	003 Move X0, X8
	004 Call 0x3EB2AC0
	005 Return X0

Method: System.Void set_DetailedGrabInfo(Fusion.XR.Host.Grabbing.DetailedGrabInfo value)

Disassembly:
	0x01FA5554 LDR X8, [X0 + 0xD8]
	0x01FA5558 CBZ X8, 0x1FA55DC
	0x01FA555C LDR X0, [X21 + 0xF0]
	0x01FA5560 CBZ X0, 0x1FA5614
	0x01FA5564 BL 0x1FA06D8
	0x01FA5568 CBZ X0, 0x1FA5614

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X0, 160
	003 Move W2, 100
	004 Call 0x3EB2B30
	005 Move X30, [X31+16]
	006 Return 

Method: Fusion.NetworkBool get_IsColliding()

Disassembly:
	0x01FA556C LDR X21, [X0 + 0xD8]
	0x01FA5570 CBZ X21, 0x1FA5614

ISIL:
	001 Move W0, [X0+296]
	002 Return X0

Method: System.Void set_IsColliding(Fusion.NetworkBool value)

Disassembly:
	0x01FA5574 LDR X8, [X21]
	0x01FA5578 ADRP X10, 0x2176000

ISIL:
	001 Move [X0+296], W1
	002 Return 

Method: UnityEngine.Vector3 get_PidLastError()

Disassembly:
	0x01FA557C LDRH W9, [X8 + 0x12E]
	0x01FA5580 LDR X10, [X10 + 0x140]
	0x01FA5584 LDR X1, [X10]
	0x01FA5588 CBZ X9, 0x1FA55AC

ISIL:
	001 Move V0, [X0+300]
	002 Move V1, [X0+304]
	003 Move V2, [X0+308]
	004 Return X0

Method: System.Void set_PidLastError(UnityEngine.Vector3 value)

Disassembly:
	0x01FA558C LDR X10, [X8 + 0xB0]
	0x01FA5590 ADD X10, X10, 0x8
	0x01FA5594 LDUR X11, [X10 - 0x8]
	0x01FA5598 CMP X11, X1

ISIL:
	001 Move [X0+300], S0
	002 Move [X0+304], S1
	003 Move [X0+308], S2
	004 Return 

Method: UnityEngine.Vector3 get_PidErrorIntegration()

Disassembly:
	0x01FA559C B.EQ 0x1FA55BC
	0x01FA55A0 SUBS X9, X9, 0x1
	0x01FA55A4 ADD X10, X10, 0x10
	0x01FA55A8 B.NE 0x1FA5594

ISIL:
	001 Move V0, [X0+312]
	002 Move V1, [X0+316]
	003 Move V2, [X0+320]
	004 Return X0

Method: System.Void set_PidErrorIntegration(UnityEngine.Vector3 value)

Disassembly:
	0x01FA55AC MOVZ W2, 0x4
	0x01FA55B0 MOV X0, X21
	0x01FA55B4 BL 0x1C5C788
	0x01FA55B8 B 0x1FA55CC

ISIL:
	001 Move [X0+312], S0
	002 Move [X0+316], S1
	003 Move [X0+320], S2
	004 Return 

Method: Fusion.XR.Host.Grabbing.NetworkGrabber get_CurrentGrabber()

Disassembly:
	0x01FA55BC LDR W9, [X10]
	0x01FA55C0 ADD W9, W9, 0x4
	0x01FA55C4 ADD X8, X8, W9, 0x4, SXTW
	0x01FA55C8 ADD X0, X8, 0x138
	0x01FA55CC LDP X8, X2, [X0]
	0x01FA55D0 MOV X0, X21
	0x01FA55D4 MOV W1, W31
	0x01FA55D8 BLR X8
	0x01FA55DC MOV X0, X19
	0x01FA55E0 MOV X1, X20
	0x01FA55E4 BL 0x1FA4648
	0x01FA55E8 MOV X0, X19
	0x01FA55EC BL 0x1FA3BC4
	0x01FA55F0 B 0x1FA53E0
	0x01FA55F4 LDP X20, X19, [X31 + 0x180]
	0x01FA55F8 LDP X22, X21, [X31 + 0x170]
	0x01FA55FC LDP X24, X23, [X31 + 0x160]
	0x01FA5600 LDP X26, X25, [X31 + 0x150]
	0x01FA5604 LDP X28, X27, [X31 + 0x140]
	0x01FA5608 LDP X29, X30, [X31 + 0x130]
	0x01FA560C ADD X31, X31, 0x190
	0x01FA5610 RET
	0x01FA5614 BL 0x1C16F20
	0x01FA5618 STP D13, D12, [X31 - 0x50]!
	0x01FA561C STP D11, D10, [X31 + 0x10]
	0x01FA5620 STP D9, D8, [X31 + 0x20]
	0x01FA5624 STP X30, X21, [X31 + 0x30]
	0x01FA5628 STP X20, X19, [X31 + 0x40]
	0x01FA562C ADRP X20, 0x2434000
	0x01FA5630 LDRB W8, [X20 + 0x7FA]
	0x01FA5634 MOV X19, X0
	0x01FA5638 TBNZ X8, 0x0, 0x1FA5650
	0x01FA563C ADRP X0, 0x2151000
	0x01FA5640 LDR X0, [X0 + 0xE40]
	0x01FA5644 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2435000
	005 Move W8, [X20+2034]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2152000
	012 Move X0, [X0+3648]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2034], W8
	016 Move W8, [X19+336]
	017 Compare W8, 0
	018 JumpIfEqual {20}
	019 Move X0, [X19+440]
	020 Move X8, 0x2152000
	021 Move X8, [X8+3648]
	022 Move W20, [X19+160]
	023 Move X0, [X8]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X31
	029 Call PlayerRef.get_None
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, X31
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 Move X0, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]

Method: System.Void Awake()

Disassembly:
	0x01FA56C0 STRB W8, [X20 + 0x80]
	0x01FA56C4 MOV X0, X19
	0x01FA56C8 BL 0x1FA3AD8
	0x01FA56CC TBZ X0, 0x0, 0x1FA56D8
	0x01FA56D0 LDRB W8, [X19 + 0x150]
	0x01FA56D4 CBZ W8, 0x1FA56F0
	0x01FA56D8 LDP X20, X19, [X31 + 0x40]
	0x01FA56DC LDP X30, X21, [X31 + 0x30]
	0x01FA56E0 LDP D9, D8, [X31 + 0x20]
	0x01FA56E4 LDP D11, D10, [X31 + 0x10]
	0x01FA56E8 LDP D13, D12, [X31], #0x50
	0x01FA56EC RET
	0x01FA56F0 LDR X8, [X19]
	0x01FA56F4 MOV X0, X19
	0x01FA56F8 LDR X9, [X8 + 0x248]
	0x01FA56FC LDR X1, [X8 + 0x250]
	0x01FA5700 BLR X9
	0x01FA5704 CBZ X0, 0x1FA5878
	0x01FA5708 LDR X0, [X0 + 0xF0]
	0x01FA570C CBZ X0, 0x1FA5878
	0x01FA5710 MOV X1, X31
	0x01FA5714 BL 0x3C32E90
	0x01FA5718 LDR X8, [X19 + 0x98]
	0x01FA571C CBZ X8, 0x1FA5878
	0x01FA5720 MOV X20, X0
	0x01FA5724 LDR X0, [X8 + 0x88]
	0x01FA5728 CBZ X0, 0x1FA5878
	0x01FA572C MOV X1, X31
	0x01FA5730 BL 0x3C32E90
	0x01FA5734 CBZ X0, 0x1FA5878
	0x01FA5738 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2435000
	007 Move X22, 0x2152000
	008 Move X20, 0x2177000
	009 Move W8, [X21+2035]
	010 Move X22, [X22+3360]
	011 Move X20, [X20+1104]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2152000
	018 Move X0, [X0+3360]
	019 Call 0x1C17CF4
	020 Move X0, 0x2177000
	021 Move X0, [X0+1104]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2035], W8
	025 Move X1, [X22]
	026 Move X0, X19
	027 Call 0x21A4894, X0
	028 Move [X19+152], X0
	029 Move X1, [X20]
	030 Move X0, X19
	031 Call 0x21A4894, X0
	032 Move [X19+328], X0
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return 

Method: System.Void Grab(Fusion.XR.Host.Grabbing.NetworkGrabber newGrabber, Fusion.XR.Host.Grabbing.GrabInfo newGrabInfo)

Disassembly:
	0x01FA573C MOV X21, X0
	0x01FA5740 BL 0x3C3DEB4
	0x01FA5744 LDR X8, [X19 + 0x148]
	0x01FA5748 CBZ X8, 0x1FA5878
	0x01FA574C MOV V9.16B, V0.16B
	0x01FA5750 MOV V10.16B, V1.16B
	0x01FA5754 MOV V8.16B, V2.16B
	0x01FA5758 MOV V11.16B, V3.16B
	0x01FA575C LDP S0, S1, [X8 + 0x3C]
	0x01FA5760 LDP S2, S3, [X8 + 0x44]
	0x01FA5764 MOV X0, X31
	0x01FA5768 BL 0x3C2A260
	0x01FA576C CBZ X20, 0x1FA5878
	0x01FA5770 FMUL S4, S11, S3
	0x01FA5774 FMUL S5, S9, S0
	0x01FA5778 FMUL S7, S8, S2
	0x01FA577C FMUL S17, S11, S2
	0x01FA5780 FMUL S18, S8, S3
	0x01FA5784 FMUL S19, S10, S0
	0x01FA5788 FMUL S20, S10, S3
	0x01FA578C FMUL S21, S10, S2
	0x01FA5790 FMUL S22, S9, S2
	0x01FA5794 FMUL S2, S9, S3
	0x01FA5798 FMUL S3, S8, S0
	0x01FA579C FMUL S0, S11, S0
	0x01FA57A0 FMUL S23, S11, S1
	0x01FA57A4 FMUL S6, S10, S1
	0x01FA57A8 FMUL S16, S9, S1
	0x01FA57AC FMUL S24, S8, S1
	0x01FA57B0 FSUB S1, S4, S5
	0x01FA57B4 FADD S4, S17, S18
	0x01FA57B8 FADD S5, S23, S20
	0x01FA57BC FADD S0, S0, S2
	0x01FA57C0 FSUB S1, S1, S6
	0x01FA57C4 FADD S2, S16, S4
	0x01FA57C8 FADD S4, S3, S5
	0x01FA57CC FADD S0, S21, S0
	0x01FA57D0 FSUB S3, S1, S7
	0x01FA57D4 FSUB S2, S2, S19
	0x01FA57D8 FSUB S1, S4, S22
	0x01FA57DC FSUB S0, S0, S24
	0x01FA57E0 MOV X0, X20
	0x01FA57E4 MOV X1, X31
	0x01FA57E8 BL 0x3C3F7AC
	0x01FA57EC MOV X0, X21
	0x01FA57F0 MOV X1, X31
	0x01FA57F4 BL 0x3C3F58C
	0x01FA57F8 LDR X8, [X19 + 0x148]
	0x01FA57FC CBZ X8, 0x1FA5878
	0x01FA5800 MOV V8.16B, V0.16B
	0x01FA5804 MOV V9.16B, V1.16B
	0x01FA5808 MOV V10.16B, V2.16B
	0x01FA580C LDP S0, S1, [X8 + 0x30]
	0x01FA5810 LDR V2, [X8 + 0x38]
	0x01FA5814 MOV X0, X20
	0x01FA5818 MOV X1, X31
	0x01FA581C BL 0x3C3DE4C
	0x01FA5820 MOV X0, X20
	0x01FA5824 MOV X1, X31
	0x01FA5828 MOV V11.16B, V0.16B
	0x01FA582C MOV V12.16B, V1.16B
	0x01FA5830 MOV V13.16B, V2.16B
	0x01FA5834 BL 0x3C3F58C
	0x01FA5838 FSUB S0, S11, S0
	0x01FA583C FSUB S1, S12, S1
	0x01FA5840 FSUB S2, S13, S2
	0x01FA5844 FSUB S0, S8, S0
	0x01FA5848 FSUB S1, S9, S1
	0x01FA584C FSUB S2, S10, S2
	0x01FA5850 MOV X0, X20
	0x01FA5854 MOV X1, X31
	0x01FA5858 BL 0x3C3F62C
	0x01FA585C MOV X0, X19
	0x01FA5860 LDP X20, X19, [X31 + 0x40]
	0x01FA5864 LDP X30, X21, [X31 + 0x30]
	0x01FA5868 LDP D9, D8, [X31 + 0x20]
	0x01FA586C LDP D11, D10, [X31 + 0x10]
	0x01FA5870 LDP D13, D12, [X31], #0x50
	0x01FA5874 B 0x1FA587C
	0x01FA5878 BL 0x1C16F20
	0x01FA587C STP D13, D12, [X31 - 0x50]!
	0x01FA5880 STP D11, D10, [X31 + 0x10]
	0x01FA5884 STP D9, D8, [X31 + 0x20]
	0x01FA5888 STP X30, X21, [X31 + 0x30]
	0x01FA588C STP X20, X19, [X31 + 0x40]
	0x01FA5890 ADRP X20, 0x2434000
	0x01FA5894 LDRB W8, [X20 + 0x7FC]
	0x01FA5898 MOV X19, X0
	0x01FA589C TBNZ X8, 0x0, 0x1FA58C0
	0x01FA58A0 ADRP X0, 0x2176000
	0x01FA58A4 LDR X0, [X0 + 0x140]
	0x01FA58A8 BL 0x1C16CF4
	0x01FA58AC ADRP X0, 0x2151000
	0x01FA58B0 LDR X0, [X0 + 0xE40]
	0x01FA58B4 BL 0x1C16CF4
	0x01FA58B8 MOVZ W8, 0x1
	0x01FA58BC STRB W8, [X20 + 0x7FC]
	0x01FA58C0 LDR X0, [X19 + 0x38]
	0x01FA58C4 CBZ X0, 0x1FA5B78
	0x01FA58C8 ADRP X20, 0x2151000
	0x01FA58CC LDR X20, [X20 + 0xE40]
	0x01FA58D0 MOV X1, X31
	0x01FA58D4 BL 0x1E9EA20
	0x01FA58D8 LDR X8, [X20]
	0x01FA58DC LDR W21, [X19 + 0xA0]
	0x01FA58E0 MOV X20, X0
	0x01FA58E4 LDR W9, [X8 + 0xE0]
	0x01FA58E8 CBNZ W9, 0x1FA58F4
	0x01FA58EC MOV X0, X8
	0x01FA58F0 BL 0x1C16DFC
	0x01FA58F4 LDRB W8, [X19 + 0x110]
	0x01FA58F8 CBZ W8, 0x1FA5908
	0x01FA58FC MOV X0, X19
	0x01FA5900 BL 0x1FA3AD8
	0x01FA5904 AND W8, W0, 0x1
	0x01FA5908 CMP W21, W20
	0x01FA590C CSET W9, EQ
	0x01FA5910 ANDS W31, W8, W9, 0x0
	0x01FA5914 B.EQ 0x1FA5B60

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x2435000
	009 Move W8, [X22+2036]
	010 Move X21, X2
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x2177000
	018 Move X0, [X0+1112]
	019 Call 0x1C17CF4
	020 Move X0, 0x2152000
	021 Move X0, [X0+3648]
	022 Call 0x1C17CF4
	023 Move X0, 0x2177000
	024 Move X0, [X0+1120]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+2036], W8
	028 Move X0, [X20+64]
	029 Compare X0, 0
	030 JumpIfEqual {144}
	031 Move X1, X31
	032 Call NetworkObject.get_InputAuthority, X0
	033 Compare X19, 0
	034 JumpIfEqual {144}
	035 Move X22, X0
	036 Move X0, [X19+64]
	037 Compare X0, 0
	038 JumpIfEqual {144}
	039 Move X24, 0x2152000
	040 Move X24, [X24+3648]
	041 Move X1, X31
	042 Call NetworkObject.get_InputAuthority, X0
	043 Move X8, [X24]
	044 Move X23, X0
	045 Move W9, [X8+224]
	046 Compare W9, 0
	047 JumpIfNotEqual {50}
	048 Move X0, X8
	049 Call 0x1C17DFC
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, [X19+64]
	052 Compare X0, 0
	053 JumpIfEqual {144}
	054 Move X1, X31
	055 Call NetworkObject.get_InputAuthority, X0
	056 Move X8, [X20+56]
	057 Compare X8, 0
	058 JumpIfEqual {144}
	059 Move X22, X0
	060 Move X0, X8
	061 Move X1, X31
	062 Call NetworkRunner.get_LocalPlayer, X0
	063 Move X8, [X24]
	064 Move X23, X0
	065 Move W9, [X8+224]
	066 Compare W9, 0
	067 JumpIfNotEqual {70}
	068 Move X0, X8
	069 Call 0x1C17DFC
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move W8, 1
	072 Move X0, X31
	073 Move [X20+336], W8
	074 Call Time.get_time
	075 Move X8, [X20+56]
	076 Move [X20+344], S0
	077 Compare X8, 0
	078 JumpIfEqual {144}
	079 Move X8, [X8+80]
	080 Compare X8, 0
	081 JumpIfEqual {83}
	082 Move W8, [X8+72]
	083 Add X0, X20, 352
	084 Move W2, 88
	085 Move X1, X21
	086 Move [X20+348], W8
	087 Call 0x3EB2B30
	088 Move [X20+440], X19
	089 Move X0, [X20+64]
	090 Compare X0, 0
	091 JumpIfEqual {144}
	092 Move X1, X31
	093 Call NetworkObject.get_HasStateAuthority, X0
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {110}
	098 Move X0, [X19+64]
	099 Compare X0, 0
	100 JumpIfEqual {144}
	101 Move X21, [X20+64]
	102 Move X1, X31
	103 Call NetworkObject.get_InputAuthority, X0
	104 Compare X21, 0
	105 JumpIfEqual {144}
	106 And X1, X0, 0
	107 Move X0, X21
	108 Move X2, X31
	109 Call NetworkObject.AssignInputAuthority, X0, X1
	110 Move X0, [X19+64]
	111 Compare X0, 0
	112 JumpIfEqual {144}
	113 Move X20, [X20+448]
	114 Move X1, X31
	115 Call NetworkObject.get_InputAuthority, X0
	116 Move X8, [X19+240]
	117 Compare X8, 0
	118 JumpIfEqual {144}
	119 Move X9, 0x2177000
	120 Move X9, [X9+1120]
	121 Move W2, [X8+160]
	122 And X1, X0, 0
	123 Add X0, X31, 8
	124 Move X3, [X9]
	125 Move [X31+8], X31
	126 Call ValueTuple`2<PlayerRef, Int32Enum>..ctor, X0, X1, X2
	127 Compare X20, 0
	128 JumpIfEqual {144}
	129 Move X8, 0x2177000
	130 Move X8, [X8+1112]
	131 Move X1, [X31+8]
	132 Move X0, X20
	133 Move X2, X19
	134 Move X3, [X8]
	135 Call Dictionary`2<ValueTuple`2<PlayerRef, Int32Enum>, Object>.set_Item, X0, X1, X2
	136 Move X20, [X31+48]
	137 Move X19, [X31+56]
	138 Move X22, [X31+32]
	139 Move X21, [X31+40]
	140 Move X24, [X31+16]
	141 Move X23, [X31+24]
	142 Move X30, [X31+64]
	143 Return 
	144 Call 0x1C17F20

Method: System.Void Ungrab(Fusion.XR.Host.Grabbing.NetworkGrabber previousGrabber, Fusion.XR.Host.Grabbing.GrabInfo newGrabInfo)

Disassembly:
	0x01FA5918 LDR X8, [X19]

ISIL:
	001 Return 

Method: System.Void AdaptRenderTimeFrame(Fusion.XR.Host.Grabbing.NetworkGrabber grabber)

Disassembly:
	0x01FA591C MOV X0, X19
	0x01FA5920 LDR X9, [X8 + 0x248]
	0x01FA5924 LDR X1, [X8 + 0x250]
	0x01FA5928 BLR X9
	0x01FA592C CBZ X0, 0x1FA5B78
	0x01FA5930 LDR X0, [X0 + 0xF0]
	0x01FA5934 CBZ X0, 0x1FA5B78
	0x01FA5938 BL 0x1FA06D8
	0x01FA593C CBZ X0, 0x1FA5B78
	0x01FA5940 LDR X8, [X0 + 0xD8]
	0x01FA5944 CBZ X8, 0x1FA5B60
	0x01FA5948 LDR X8, [X19]
	0x01FA594C MOV X0, X19
	0x01FA5950 LDR X9, [X8 + 0x248]
	0x01FA5954 LDR X1, [X8 + 0x250]
	0x01FA5958 BLR X9
	0x01FA595C CBZ X0, 0x1FA5B78
	0x01FA5960 LDR X0, [X0 + 0xF0]
	0x01FA5964 CBZ X0, 0x1FA5B78
	0x01FA5968 MOV X1, X31
	0x01FA596C BL 0x3C32E90
	0x01FA5970 CBZ X0, 0x1FA5B78
	0x01FA5974 MOV X1, X31
	0x01FA5978 BL 0x3C3F58C
	0x01FA597C LDR X8, [X19]
	0x01FA5980 MOV X0, X19
	0x01FA5984 MOV V8.16B, V0.16B
	0x01FA5988 MOV V9.16B, V1.16B
	0x01FA598C LDR X9, [X8 + 0x248]
	0x01FA5990 LDR X1, [X8 + 0x250]
	0x01FA5994 MOV V10.16B, V2.16B
	0x01FA5998 BLR X9
	0x01FA599C CBZ X0, 0x1FA5B78
	0x01FA59A0 LDR X0, [X0 + 0xF0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2435000
	006 Move X21, 0x214F000
	007 Move W8, [X20+2037]
	008 Move X21, [X21+1432]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x214F000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2037], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X1, X31
	026 Call Object.op_Implicit, X0
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {48}
	031 Compare X19, 0
	032 JumpIfEqual {53}
	033 Move X0, [X19+64]
	034 Compare X0, 0
	035 JumpIfEqual {48}
	036 Move W8, [X0+96]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 2
	039 Compare TEMP, 2
	040 JumpIfEqual {48}
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X1, X31
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Call NetworkObject.get_HasInputAuthority, X0
	047 Return 
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return 
	053 Call 0x1C17F20

Method: System.Void Spawned()

Disassembly:
	0x01FA59A4 CBZ X0, 0x1FA5B78
	0x01FA59A8 BL 0x1FA06D8
	0x01FA59AC CBZ X0, 0x1FA5B78
	0x01FA59B0 MOV X1, X31
	0x01FA59B4 BL 0x3C32E90
	0x01FA59B8 CBZ X0, 0x1FA5B78
	0x01FA59BC MOV X1, X31
	0x01FA59C0 BL 0x3C3F58C
	0x01FA59C4 ADRP X20, 0x2433000
	0x01FA59C8 LDRB W8, [X20 + 0x784]
	0x01FA59CC MOV V11.16B, V0.16B
	0x01FA59D0 MOV V12.16B, V1.16B
	0x01FA59D4 MOV V13.16B, V2.16B
	0x01FA59D8 CBNZ W8, 0x1FA59F0
	0x01FA59DC ADRP X0, 0x214E000
	0x01FA59E0 LDR X0, [X0 + 0x5A8]
	0x01FA59E4 BL 0x1C16CF4
	0x01FA59E8 MOVZ W8, 0x1
	0x01FA59EC STRB W8, [X20 + 0x784]
	0x01FA59F0 ADRP X8, 0x214E000
	0x01FA59F4 LDR X8, [X8 + 0x5A8]
	0x01FA59F8 FSUB S11, S8, S11
	0x01FA59FC FSUB S9, S9, S12
	0x01FA5A00 FSUB S8, S10, S13
	0x01FA5A04 LDR X0, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call NetworkBehaviour.Spawned, X0
	006 Move X0, [X19+56]
	007 Compare X0, 0
	008 JumpIfEqual {33}
	009 Move X1, [X19+64]
	010 Move W2, 1
	011 Move X3, X31
	012 Call NetworkRunner.SetIsSimulated, X0, X1, X2
	013 Move W2, 1
	014 Move X0, X19
	015 Move W1, W31
	016 Move X3, X31
	017 Call NetworkBehaviour.GetChangeDetector, X0, X1, X2
	018 Move [X19+264], X0
	019 Move X0, X19
	020 Call NetworkGrabbable.get_IsGrabbed, X0
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {30}
	025 Move X0, X19
	026 Move X30, [X31+16]
	027 Move X19, [X31+24]
	028 Call NetworkGrabbable.DidGrab, X0
	029 Return 
	030 Move X30, [X31+16]
	031 Move X19, [X31+24]
	032 Return 
	033 Call 0x1C17F20

Method: System.Void Follow(UnityEngine.Transform followedTransform, System.Single elapsedTime, System.Boolean isColliding)

Disassembly:
	0x01FA5A08 LDR W8, [X0 + 0xE0]
	0x01FA5A0C CBNZ W8, 0x1FA5A14
	0x01FA5A10 BL 0x1C16DFC
	0x01FA5A14 LDR W0, [X19 + 0x128]
	0x01FA5A18 FMUL S0, S11, S11
	0x01FA5A1C FMUL S1, S9, S9
	0x01FA5A20 FADD S0, S0, S1
	0x01FA5A24 FMUL S1, S8, S8
	0x01FA5A28 FADD S0, S1, S0
	0x01FA5A2C MOV X1, X31
	0x01FA5A30 FSQRT S8, S0
	0x01FA5A34 BL 0x1E8CF0C
	0x01FA5A38 TBZ X0, 0x0, 0x1FA5A4C
	0x01FA5A3C LDR V0, [X19 + 0x118]
	0x01FA5A40 FCMP S8, S0
	0x01FA5A44 CSET W8, GT
	0x01FA5A48 B 0x1FA5A50
	0x01FA5A4C MOV W8, W31
	0x01FA5A50 LDR X9, [X19]
	0x01FA5A54 STRB W8, [X19 + 0x124]
	0x01FA5A58 MOV X0, X19
	0x01FA5A5C LDR X8, [X9 + 0x248]
	0x01FA5A60 LDR X1, [X9 + 0x250]
	0x01FA5A64 BLR X8
	0x01FA5A68 CBZ X0, 0x1FA5B78
	0x01FA5A6C LDR X0, [X0 + 0xF0]
	0x01FA5A70 CBZ X0, 0x1FA5B78
	0x01FA5A74 BL 0x1FA06D8
	0x01FA5A78 CBZ X0, 0x1FA5B78
	0x01FA5A7C LDR X20, [X0 + 0xD8]
	0x01FA5A80 CBZ X20, 0x1FA5B78
	0x01FA5A84 ADRP X10, 0x2176000
	0x01FA5A88 LDR X8, [X20]
	0x01FA5A8C LDRB W21, [X19 + 0x124]
	0x01FA5A90 LDR X10, [X10 + 0x140]
	0x01FA5A94 LDRH W9, [X8 + 0x12E]
	0x01FA5A98 LDR X1, [X10]
	0x01FA5A9C CBZ X9, 0x1FA5AC0
	0x01FA5AA0 LDR X10, [X8 + 0xB0]
	0x01FA5AA4 ADD X10, X10, 0x8
	0x01FA5AA8 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+328]
	005 Compare X0, 0
	006 JumpIfEqual {46}
	007 Move W8, [X0+152]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move V1, [X19+312]
	010 Move V2, [X19+320]
	011 Move [X0+172], D1
	012 Move [X0+180], S2
	013 Move X8, [X19+328]
	014 Compare X8, 0
	015 JumpIfEqual {46}
	016 Add X9, X19, 300
	017 Move V1, [X9]
	018 Move V2, [X9+8]
	019 Move [X8+196], D1
	020 Move [X8+204], S2
	021 Move X0, [X19+328]
	022 Compare X0, 0
	023 JumpIfEqual {46}
	024 Move X8, [X0]
	025 And W2, W2, 1
	026 Move X9, [X8+456]
	027 Move X3, [X8+464]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move X8, [X19+328]
	030 Compare X8, 0
	031 JumpIfEqual {46}
	032 Move W9, [X8+152]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 Move V1, [X8+180]
	036 Move [X19+312], D0
	037 Move [X19+320], S1
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 Move V1, [X8+204]
	040 Add X8, X19, 300
	041 Move [X8], D0
	042 Move [X8+8], S1
	043 Move X30, [X31+16]
	044 Move X19, [X31+24]
	045 Return 
	046 Call 0x1C17F20

Method: Fusion.XR.Host.Grabbing.NetworkGrabber GrabberForSideAndPlayer(Fusion.PlayerRef player, Fusion.XR.Host.Rig.RigPart side)

Disassembly:
	0x01FA5AAC CMP X11, X1
	0x01FA5AB0 B.EQ 0x1FA5AD0
	0x01FA5AB4 SUBS X9, X9, 0x1
	0x01FA5AB8 ADD X10, X10, 0x10
	0x01FA5ABC B.NE 0x1FA5AA8
	0x01FA5AC0 MOVZ W2, 0x4
	0x01FA5AC4 MOV X0, X20
	0x01FA5AC8 BL 0x1C5C788
	0x01FA5ACC B 0x1FA5AE0
	0x01FA5AD0 LDR W9, [X10]
	0x01FA5AD4 ADD W9, W9, 0x4
	0x01FA5AD8 ADD X8, X8, W9, 0x4, SXTW
	0x01FA5ADC ADD X0, X8, 0x138
	0x01FA5AE0 LDP X8, X2, [X0]
	0x01FA5AE4 CMP W21, 0x0
	0x01FA5AE8 CSET W1, NE
	0x01FA5AEC MOV X0, X20
	0x01FA5AF0 BLR X8
	0x01FA5AF4 LDRB W8, [X19 + 0x124]
	0x01FA5AF8 CBZ W8, 0x1FA5B60
	0x01FA5AFC LDR X8, [X19]
	0x01FA5B00 MOV X0, X19
	0x01FA5B04 LDR X9, [X8 + 0x248]
	0x01FA5B08 LDR X1, [X8 + 0x250]
	0x01FA5B0C BLR X9
	0x01FA5B10 CBZ X0, 0x1FA5B78
	0x01FA5B14 LDR X0, [X0 + 0xF0]
	0x01FA5B18 CBZ X0, 0x1FA5B78
	0x01FA5B1C BL 0x1FA06D8
	0x01FA5B20 CBZ X0, 0x1FA5B78
	0x01FA5B24 LDR V0, [X19 + 0x11C]
	0x01FA5B28 LDR V1, [X19 + 0x120]
	0x01FA5B2C LDP X20, X19, [X31 + 0x40]
	0x01FA5B30 LDP X30, X21, [X31 + 0x30]
	0x01FA5B34 FDIV S0, S8, S0
	0x01FA5B38 LDP D9, D8, [X31 + 0x20]
	0x01FA5B3C LDP D11, D10, [X31 + 0x10]
	0x01FA5B40 FMOV S2, 1
	0x01FA5B44 FMIN S2, S0, S2
	0x01FA5B48 FCMP S0, 0x0
	0x01FA5B4C FMOV S0, W31
	0x01FA5B50 FCSEL S0, S2, S0, PL
	0x01FA5B54 MOV W1, W31
	0x01FA5B58 LDP D13, D12, [X31], #0x50
	0x01FA5B5C B 0x1F9E250
	0x01FA5B60 LDP X20, X19, [X31 + 0x40]
	0x01FA5B64 LDP X30, X21, [X31 + 0x30]
	0x01FA5B68 LDP D9, D8, [X31 + 0x20]
	0x01FA5B6C LDP D11, D10, [X31 + 0x10]
	0x01FA5B70 LDP D13, D12, [X31], #0x50
	0x01FA5B74 RET
	0x01FA5B78 BL 0x1C16F20
	0x01FA5B7C STP X30, X21, [X31 - 0x20]!
	0x01FA5B80 STP X20, X19, [X31 + 0x10]
	0x01FA5B84 ADRP X21, 0x2434000
	0x01FA5B88 ADRP X20, 0x214E000
	0x01FA5B8C LDRB W8, [X21 + 0x7FB]
	0x01FA5B90 LDR X20, [X20 + 0x598]
	0x01FA5B94 MOV X19, X0
	0x01FA5B98 TBNZ X8, 0x0, 0x1FA5BB0
	0x01FA5B9C ADRP X0, 0x214E000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x2435000
	009 Move X23, 0x2177000
	010 Move W8, [X22+2038]
	011 Move X23, [X23+1120]
	012 Move W19, W2
	013 Move X21, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x2177000
	020 Move X0, [X0+1128]
	021 Call 0x1C17CF4
	022 Move X0, 0x2177000
	023 Move X0, [X0+1136]
	024 Call 0x1C17CF4
	025 Move X0, 0x2177000
	026 Move X0, [X0+1120]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+2038], W8
	030 Move X3, [X23]
	031 Move X22, [X20+448]
	032 And X21, X21, 0
	033 Add X0, X31, 8
	034 Move X1, X21
	035 Move W2, W19
	036 Move [X31+8], X31
	037 Call ValueTuple`2<PlayerRef, Int32Enum>..ctor, X0, X1, X2
	038 Compare X22, 0
	039 JumpIfEqual {74}
	040 Move X8, 0x2177000
	041 Move X8, [X8+1128]
	042 Move X1, [X31+8]
	043 Move X0, X22
	044 Move X2, [X8]
	045 Call Dictionary`2<ValueTuple`2<PlayerRef, Int32Enum>, Object>.ContainsKey, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {65}
	050 Move X3, [X23]
	051 Move X20, [X20+448]
	052 Add X0, X31, 8
	053 Move X1, X21
	054 Move W2, W19
	055 Move [X31+8], X31
	056 Call ValueTuple`2<PlayerRef, Int32Enum>..ctor, X0, X1, X2
	057 Compare X20, 0
	058 JumpIfEqual {74}
	059 Move X8, 0x2177000
	060 Move X1, [X31+8]
	061 Move X8, [X8+1136]
	062 Move X0, X20
	063 Move X2, [X8]
	064 Call Dictionary`2<ValueTuple`2<PlayerRef, Int32Enum>, Object>.get_Item, X0, X1
	065 Move X0, X31
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X30, [X31+16]
	071 Move X23, [X31+24]
	072 Add X31, X31, 64
	073 Return X0
	074 Call 0x1C17F20

Method: Fusion.XR.Host.Grabbing.NetworkGrabber GrabberForId(Fusion.NetworkBehaviourId id)

Disassembly:
	0x01FA5648 MOVZ W8, 0x1
	0x01FA564C STRB W8, [X20 + 0x7FA]
	0x01FA5650 MOV X0, X19
	0x01FA5654 MOV X1, X31
	0x01FA5658 BL 0x1E79788
	0x01FA565C LDR X0, [X19 + 0x40]
	0x01FA5660 CBZ X0, 0x1FA5878
	0x01FA5664 MOV X1, X31
	0x01FA5668 BL 0x1E93994
	0x01FA566C LDR X8, [X19 + 0x38]
	0x01FA5670 CBZ X8, 0x1FA5878
	0x01FA5674 ADRP X21, 0x2151000
	0x01FA5678 LDR X21, [X21 + 0xE40]
	0x01FA567C MOV X20, X0
	0x01FA5680 MOV X0, X8
	0x01FA5684 MOV X1, X31
	0x01FA5688 BL 0x1E9EA20
	0x01FA568C LDR X8, [X21]
	0x01FA5690 MOV X21, X0
	0x01FA5694 LDR W9, [X8 + 0xE0]
	0x01FA5698 CBNZ W9, 0x1FA56A4
	0x01FA569C MOV X0, X8
	0x01FA56A0 BL 0x1C16DFC
	0x01FA56A4 CMP W20, W21
	0x01FA56A8 B.EQ 0x1FA56C4
	0x01FA56AC LDR X20, [X19 + 0x148]
	0x01FA56B0 MOV X0, X19
	0x01FA56B4 BL 0x1FA3AD8
	0x01FA56B8 CBZ X20, 0x1FA5878
	0x01FA56BC AND W8, W0, 0x1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2435000
	007 Move W8, [X21+2039]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2177000
	015 Move X0, [X0+1096]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2039], W8
	019 Move [X31+8], X31
	020 Move X0, [X20+56]
	021 Compare X0, 0
	022 JumpIfEqual {38}
	023 Move X8, 0x2177000
	024 Move X8, [X8+1096]
	025 Add X2, X31, 8
	026 Move X1, X19
	027 Move X3, [X8]
	028 Call 0x222CD98, X0, X1, X2
	029 Move X8, [X31+8]
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X30, [X31+16]
	033 Move X21, [X31+24]
	034 And W31, W0, 1
	035 NotImplemented "Instruction CSEL not yet implemented."
	036 Add X31, X31, 48
	037 Return X0
	038 Call 0x1C17F20

Method: System.Void FixedUpdateNetwork()

Disassembly:
	0x01FA5BA0 LDR X0, [X0 + 0x598]
	0x01FA5BA4 BL 0x1C16CF4
	0x01FA5BA8 MOVZ W8, 0x1
	0x01FA5BAC STRB W8, [X21 + 0x7FB]
	0x01FA5BB0 LDR X0, [X20]
	0x01FA5BB4 LDR X20, [X19 + 0x40]
	0x01FA5BB8 LDR W8, [X0 + 0xE0]
	0x01FA5BBC CBNZ W8, 0x1FA5BC4
	0x01FA5BC0 BL 0x1C16DFC
	0x01FA5BC4 MOV X0, X20
	0x01FA5BC8 MOV X1, X31
	0x01FA5BCC BL 0x3C38948
	0x01FA5BD0 TBZ X0, 0x0, 0x1FA5BE4
	0x01FA5BD4 MOVZ W0, 0x1
	0x01FA5BD8 MOV X1, X31
	0x01FA5BDC BL 0x1E8CF18
	0x01FA5BE0 STR W0, [X19 + 0x128]
	0x01FA5BE4 LDP X20, X19, [X31 + 0x10]
	0x01FA5BE8 LDP X30, X21, [X31], #0x20
	0x01FA5BEC RET
	0x01FA5BF0 STR X30, [X31 - 0x10]!
	0x01FA5BF4 MOV X8, X0
	0x01FA5BF8 LDR X0, [X0 + 0x38]
	0x01FA5BFC CBZ X0, 0x1FA5C14
	0x01FA5C00 LDR X1, [X8 + 0x40]
	0x01FA5C04 MOVZ W2, 0x1
	0x01FA5C08 MOV X3, X31
	0x01FA5C0C LDR X30, [X31], #0x10
	0x01FA5C10 B 0x1EA345C
	0x01FA5C14 BL 0x1C16F20
	0x01FA5C18 STR X30, [X31 - 0x30]!
	0x01FA5C1C STP X22, X21, [X31 + 0x10]
	0x01FA5C20 STP X20, X19, [X31 + 0x20]
	0x01FA5C24 ADRP X22, 0x2434000
	0x01FA5C28 ADRP X21, 0x2176000
	0x01FA5C2C ADRP X20, 0x2176000
	0x01FA5C30 LDRB W8, [X22 + 0x7FD]
	0x01FA5C34 LDR X21, [X21 + 0x490]
	0x01FA5C38 LDR X20, [X20 + 0x498]
	0x01FA5C3C MOV X19, X0
	0x01FA5C40 TBNZ X8, 0x0, 0x1FA5C64
	0x01FA5C44 ADRP X0, 0x2176000
	0x01FA5C48 LDR X0, [X0 + 0x498]
	0x01FA5C4C BL 0x1C16CF4
	0x01FA5C50 ADRP X0, 0x2176000
	0x01FA5C54 LDR X0, [X0 + 0x490]
	0x01FA5C58 BL 0x1C16CF4
	0x01FA5C5C MOVZ W8, 0x1
	0x01FA5C60 STRB W8, [X22 + 0x7FD]
	0x01FA5C64 ADRP X10, 0xFFFFFFFFFEB48000
	0x01FA5C68 LDR V0, [X10 + 0x24]
	0x01FA5C6C MOVZ W8, 0x1
	0x01FA5C70 ADD X9, X19, 0x111
	0x01FA5C74 STRB W8, [X19 + 0x110]
	0x01FA5C78 ADD X8, X19, 0x114
	0x01FA5C7C MOV W0, W31
	0x01FA5C80 MOV X1, X31
	0x01FA5C84 STRH W31, [X9]
	0x01FA5C88 STRB W31, [X9 + 0x2]
	0x01FA5C8C STR V0, [X8]
	0x01FA5C90 BL 0x1E8CF18
	0x01FA5C94 STR W0, [X19 + 0x128]
	0x01FA5C98 LDR X0, [X21]
	0x01FA5C9C BL 0x1C16F10
	0x01FA5CA0 LDR X1, [X20]
	0x01FA5CA4 MOV X20, X0
	0x01FA5CA8 BL 0x29C9160
	0x01FA5CAC STR X20, [X19 + 0x1C0]
	0x01FA5CB0 MOV X0, X19
	0x01FA5CB4 LDP X20, X19, [X31 + 0x20]
	0x01FA5CB8 LDP X22, X21, [X31 + 0x10]
	0x01FA5CBC LDR X30, [X31], #0x30
	0x01FA5CC0 B 0x1FA3BF0
	0x01FA5CC4 STR X30, [X31 - 0x30]!
	0x01FA5CC8 STP X22, X21, [X31 + 0x10]
	0x01FA5CCC STP X20, X19, [X31 + 0x20]
	0x01FA5CD0 ADRP X21, 0x2434000
	0x01FA5CD4 ADRP X22, 0x2176000
	0x01FA5CD8 ADRP X20, 0x2151000
	0x01FA5CDC LDRB W8, [X21 + 0x7FE]
	0x01FA5CE0 LDR X22, [X22 + 0x400]
	0x01FA5CE4 LDR X20, [X20 + 0xB98]
	0x01FA5CE8 MOV X19, X0
	0x01FA5CEC TBNZ X8, 0x0, 0x1FA5D10
	0x01FA5CF0 ADRP X0, 0x2176000
	0x01FA5CF4 LDR X0, [X0 + 0x400]
	0x01FA5CF8 BL 0x1C16CF4
	0x01FA5CFC ADRP X0, 0x2151000
	0x01FA5D00 LDR X0, [X0 + 0xB98]
	0x01FA5D04 BL 0x1C16CF4
	0x01FA5D08 MOVZ W8, 0x1
	0x01FA5D0C STRB W8, [X21 + 0x7FE]
	0x01FA5D10 LDR X1, [X22]
	0x01FA5D14 MOV X0, X19
	0x01FA5D18 BL 0x21A3894
	0x01FA5D1C STR X0, [X19 + 0x28]
	0x01FA5D20 LDR X1, [X20]
	0x01FA5D24 MOV X0, X19
	0x01FA5D28 BL 0x21A3894
	0x01FA5D2C STR X0, [X19 + 0x88]
	0x01FA5D30 CBZ X0, 0x1FA5D4C
	0x01FA5D34 LDP X20, X19, [X31 + 0x20]
	0x01FA5D38 LDP X22, X21, [X31 + 0x10]
	0x01FA5D3C MOV W1, W31
	0x01FA5D40 MOV X2, X31
	0x01FA5D44 LDR X30, [X31], #0x30
	0x01FA5D48 B 0x3C8ED2C
	0x01FA5D4C BL 0x1C16F20
	0x01FA5D50 STR X30, [X31 - 0x10]!
	0x01FA5D54 LDR X0, [X0 + 0x88]
	0x01FA5D58 CBZ X0, 0x1FA5D68
	0x01FA5D5C MOV X1, X31
	0x01FA5D60 LDR X30, [X31], #0x10
	0x01FA5D64 B 0x3C8E868
	0x01FA5D68 BL 0x1C16F20
	0x01FA5D6C STR X30, [X31 - 0x10]!
	0x01FA5D70 LDR X0, [X0 + 0x88]
	0x01FA5D74 CBZ X0, 0x1FA5D84
	0x01FA5D78 MOV X1, X31
	0x01FA5D7C LDR X30, [X31], #0x10
	0x01FA5D80 B 0x3C8E9A0
	0x01FA5D84 BL 0x1C16F20
	0x01FA5D88 STP X30, X21, [X31 - 0x20]!
	0x01FA5D8C STP X20, X19, [X31 + 0x10]
	0x01FA5D90 ADRP X21, 0x2434000
	0x01FA5D94 ADRP X20, 0x214E000
	0x01FA5D98 LDRB W8, [X21 + 0x7FF]
	0x01FA5D9C LDR X20, [X20 + 0x598]
	0x01FA5DA0 MOV X19, X0
	0x01FA5DA4 TBNZ X8, 0x0, 0x1FA5DBC
	0x01FA5DA8 ADRP X0, 0x214E000
	0x01FA5DAC LDR X0, [X0 + 0x598]
	0x01FA5DB0 BL 0x1C16CF4
	0x01FA5DB4 MOVZ W8, 0x1
	0x01FA5DB8 STRB W8, [X21 + 0x7FF]
	0x01FA5DBC LDR X0, [X20]
	0x01FA5DC0 LDR X19, [X19 + 0x20]
	0x01FA5DC4 LDR W8, [X0 + 0xE0]
	0x01FA5DC8 CBNZ W8, 0x1FA5DD0
	0x01FA5DCC BL 0x1C16DFC
	0x01FA5DD0 MOV X0, X19
	0x01FA5DD4 LDP X20, X19, [X31 + 0x10]
	0x01FA5DD8 MOV X1, X31
	0x01FA5DDC MOV X2, X31
	0x01FA5DE0 LDP X30, X21, [X31], #0x20
	0x01FA5DE4 B 0x3C354F8
	0x01FA5DE8 LDR W8, [X0 + 0x98]
	0x01FA5DEC CBZ W8, 0x1FA5E08
	0x01FA5DF0 CMP W8, 0x1
	0x01FA5DF4 B.NE 0x1FA5E14
	0x01FA5DF8 LDR X8, [X0]
	0x01FA5DFC AND W2, W2, 0x1
	0x01FA5E00 LDP X4, X3, [X8 + 0x1D8]
	0x01FA5E04 BR X4
	0x01FA5E08 LDR X8, [X0]
	0x01FA5E0C LDP X3, X2, [X8 + 0x1E8]
	0x01FA5E10 BR X3
	0x01FA5E14 RET
	0x01FA5E18 SUB X31, X31, 0x80
	0x01FA5E1C STP D15, D14, [X31 + 0x20]
	0x01FA5E20 STP D13, D12, [X31 + 0x30]
	0x01FA5E24 STP D11, D10, [X31 + 0x40]
	0x01FA5E28 STP D9, D8, [X31 + 0x50]
	0x01FA5E2C STP X30, X21, [X31 + 0x60]
	0x01FA5E30 STP X20, X19, [X31 + 0x70]
	0x01FA5E34 CBZ X1, 0x1FA609C
	0x01FA5E38 MOV V9.16B, V0.16B
	0x01FA5E3C LDP S1, S2, [X0 + 0x34]
	0x01FA5E40 LDR V0, [X0 + 0x30]
	0x01FA5E44 MOV X21, X1
	0x01FA5E48 MOV X19, X0
	0x01FA5E4C MOV X0, X1
	0x01FA5E50 MOV X1, X31
	0x01FA5E54 MOV W20, W2
	0x01FA5E58 BL 0x3C3DE4C
	0x01FA5E5C MOV X0, X21
	0x01FA5E60 MOV X1, X31
	0x01FA5E64 MOV V13.16B, V0.16B
	0x01FA5E68 MOV V14.16B, V1.16B
	0x01FA5E6C MOV V15.16B, V2.16B
	0x01FA5E70 BL 0x3C3DEB4
	0x01FA5E74 LDR X0, [X19 + 0x88]
	0x01FA5E78 STP S1, S0, [X31 + 0x14]
	0x01FA5E7C STR S2, [X31 + 0x1C]
	0x01FA5E80 STR S3, [X31 + 0x10]
	0x01FA5E84 CBZ X0, 0x1FA609C
	0x01FA5E88 LDP S10, S0, [X19 + 0x3C]
	0x01FA5E8C LDP S12, S11, [X19 + 0x44]
	0x01FA5E90 MOV X1, X31
	0x01FA5E94 STR S0, [X31 + 0x8]
	0x01FA5E98 BL 0x3C8EF74
	0x01FA5E9C LDRB W8, [X19 + 0xDC]
	0x01FA5EA0 FSUB S8, S13, S0
	0x01FA5EA4 FSUB S14, S14, S1
	0x01FA5EA8 FSUB S13, S15, S2
	0x01FA5EAC AND W8, W20, W8, 0x0
	0x01FA5EB0 AND W20, W8, 0x1
	0x01FA5EB4 TBZ X8, 0x0, 0x1FA5EF8
	0x01FA5EB8 ADRP X21, 0x2433000
	0x01FA5EBC LDRB W8, [X21 + 0x783]
	0x01FA5EC0 CBNZ W8, 0x1FA5ED8
	0x01FA5EC4 ADRP X0, 0x214E000
	0x01FA5EC8 LDR X0, [X0 + 0x5A0]
	0x01FA5ECC BL 0x1C16CF4
	0x01FA5ED0 MOVZ W8, 0x1
	0x01FA5ED4 STRB W8, [X21 + 0x783]
	0x01FA5ED8 ADRP X8, 0x214E000
	0x01FA5EDC LDR X8, [X8 + 0x5A0]
	0x01FA5EE0 LDR X8, [X8]
	0x01FA5EE4 LDR X8, [X8 + 0xB8]
	0x01FA5EE8 LDR V0, [X8]
	0x01FA5EEC LDR V1, [X8 + 0x8]
	0x01FA5EF0 STUR D0, [X19 + 0xAC]
	0x01FA5EF4 STR S1, [X19 + 0xB4]
	0x01FA5EF8 ADD X0, X19, 0x9C
	0x01FA5EFC MOV V0.16B, V8.16B
	0x01FA5F00 MOV V1.16B, V14.16B
	0x01FA5F04 MOV V2.16B, V13.16B
	0x01FA5F08 MOV V3.16B, V9.16B
	0x01FA5F0C MOV W1, W20
	0x01FA5F10 STR S9, [X31 + 0xC]
	0x01FA5F14 BL 0x1F9B128
	0x01FA5F18 LDP S3, S8, [X19 + 0xD4]
	0x01FA5F1C ADRP X20, 0x2434000
	0x01FA5F20 LDRB W8, [X20 + 0x763]
	0x01FA5F24 FMUL S13, S0, S3
	0x01FA5F28 FMUL S14, S1, S3
	0x01FA5F2C FMUL S15, S2, S3
	0x01FA5F30 CBNZ W8, 0x1FA5F48
	0x01FA5F34 ADRP X0, 0x214E000
	0x01FA5F38 LDR X0, [X0 + 0x5A8]
	0x01FA5F3C BL 0x1C16CF4
	0x01FA5F40 MOVZ W8, 0x1
	0x01FA5F44 STRB W8, [X20 + 0x763]
	0x01FA5F48 FMUL S0, S13, S13
	0x01FA5F4C FMUL S1, S14, S14
	0x01FA5F50 FMUL S2, S15, S15
	0x01FA5F54 FADD S0, S0, S1
	0x01FA5F58 FADD S9, S2, S0
	0x01FA5F5C FMUL S0, S8, S8
	0x01FA5F60 FCMP S9, S0
	0x01FA5F64 B.LE 0x1FA5F9C
	0x01FA5F68 ADRP X8, 0x214E000
	0x01FA5F6C LDR X8, [X8 + 0x5A8]
	0x01FA5F70 LDR X0, [X8]
	0x01FA5F74 LDR W8, [X0 + 0xE0]
	0x01FA5F78 CBNZ W8, 0x1FA5F80
	0x01FA5F7C BL 0x1C16DFC
	0x01FA5F80 FSQRT S0, S9
	0x01FA5F84 FDIV S1, S13, S0
	0x01FA5F88 FDIV S2, S14, S0
	0x01FA5F8C FDIV S0, S15, S0
	0x01FA5F90 FMUL S13, S8, S1
	0x01FA5F94 FMUL S14, S8, S2
	0x01FA5F98 FMUL S15, S8, S0
	0x01FA5F9C LDR X0, [X19 + 0x88]
	0x01FA5FA0 CBZ X0, 0x1FA609C
	0x01FA5FA4 MOVZ W1, 0x1
	0x01FA5FA8 MOV V0.16B, V13.16B
	0x01FA5FAC MOV V1.16B, V14.16B
	0x01FA5FB0 MOV V2.16B, V15.16B
	0x01FA5FB4 MOV X2, X31
	0x01FA5FB8 BL 0x3C8F3C4
	0x01FA5FBC LDR X19, [X19 + 0x88]
	0x01FA5FC0 CBZ X19, 0x1FA609C
	0x01FA5FC4 MOV X0, X19
	0x01FA5FC8 MOV X1, X31
	0x01FA5FCC BL 0x3C32E90
	0x01FA5FD0 CBZ X0, 0x1FA609C
	0x01FA5FD4 LDP S22, S17, [X31 + 0x10]
	0x01FA5FD8 LDP S19, S23, [X31 + 0x18]
	0x01FA5FDC LDR V24, [X31 + 0x8]
	0x01FA5FE0 MOV X1, X31
	0x01FA5FE4 FMUL S0, S22, S11
	0x01FA5FE8 FMUL S1, S19, S10
	0x01FA5FEC FMUL S4, S19, S24
	0x01FA5FF0 FMUL S5, S22, S12
	0x01FA5FF4 FMUL S6, S23, S11
	0x01FA5FF8 FMUL S16, S17, S11
	0x01FA5FFC FMUL S18, S19, S12
	0x01FA6000 FMUL S19, S19, S11
	0x01FA6004 FMUL S21, S22, S10
	0x01FA6008 FMUL S22, S22, S24
	0x01FA600C FMUL S2, S17, S24
	0x01FA6010 FMUL S7, S17, S10
	0x01FA6014 FMUL S17, S17, S12
	0x01FA6018 FMUL S20, S23, S10
	0x01FA601C FSUB S0, S0, S1
	0x01FA6020 FADD S1, S5, S6
	0x01FA6024 FADD S5, S22, S16
	0x01FA6028 FADD S6, S21, S19
	0x01FA602C FMUL S3, S23, S12
	0x01FA6030 FMUL S23, S23, S24
	0x01FA6034 FSUB S0, S0, S2
	0x01FA6038 FADD S1, S4, S1
	0x01FA603C FADD S2, S20, S5
	0x01FA6040 FADD S4, S17, S6
	0x01FA6044 FSUB S8, S0, S3
	0x01FA6048 FSUB S9, S1, S7
	0x01FA604C FSUB S10, S2, S18
	0x01FA6050 FSUB S11, S4, S23
	0x01FA6054 BL 0x3C3DEB4
	0x01FA6058 LDR V4, [X31 + 0xC]
	0x01FA605C MOV V5.16B, V10.16B
	0x01FA6060 MOV V6.16B, V9.16B
	0x01FA6064 MOV V7.16B, V8.16B
	0x01FA6068 STR S4, [X31]
	0x01FA606C MOV V4.16B, V11.16B
	0x01FA6070 BL 0x1F9CD0C
	0x01FA6074 MOV X0, X19
	0x01FA6078 LDP X20, X19, [X31 + 0x70]
	0x01FA607C LDP X30, X21, [X31 + 0x60]
	0x01FA6080 LDP D9, D8, [X31 + 0x50]
	0x01FA6084 LDP D11, D10, [X31 + 0x40]
	0x01FA6088 LDP D13, D12, [X31 + 0x30]
	0x01FA608C LDP D15, D14, [X31 + 0x20]
	0x01FA6090 MOV X1, X31
	0x01FA6094 ADD X31, X31, 0x80
	0x01FA6098 B 0x3C8EA40
	0x01FA609C BL 0x1C16F20
	0x01FA60A0 STR D12, [X31 - 0x50]!
	0x01FA60A4 STP D11, D10, [X31 + 0x10]
	0x01FA60A8 STP D9, D8, [X31 + 0x20]
	0x01FA60AC STP X30, X21, [X31 + 0x30]
	0x01FA60B0 STP X20, X19, [X31 + 0x40]
	0x01FA60B4 MOV X20, X0
	0x01FA60B8 MOV V7.16B, V0.16B
	0x01FA60BC LDR X0, [X0 + 0x88]
	0x01FA60C0 LDP S0, S1, [X20 + 0x30]
	0x01FA60C4 LDP S2, S3, [X20 + 0x38]
	0x01FA60C8 LDP S4, S5, [X20 + 0x40]
	0x01FA60CC LDR V6, [X20 + 0x48]
	0x01FA60D0 BL 0x1F9D058
	0x01FA60D4 LDR X19, [X20 + 0x88]
	0x01FA60D8 CBZ X19, 0x1FA61C8
	0x01FA60DC MOV X0, X19
	0x01FA60E0 MOV X1, X31
	0x01FA60E4 BL 0x3C8E868
	0x01FA60E8 LDR V3, [X20 + 0x90]
	0x01FA60EC MOV X0, X19
	0x01FA60F0 MOV X1, X31
	0x01FA60F4 FMUL S0, S0, S3
	0x01FA60F8 FMUL S1, S1, S3
	0x01FA60FC FMUL S2, S2, S3
	0x01FA6100 BL 0x3C8E908
	0x01FA6104 LDR X19, [X20 + 0x88]
	0x01FA6108 CBZ X19, 0x1FA61C8
	0x01FA610C MOV X0, X19
	0x01FA6110 MOV X1, X31
	0x01FA6114 BL 0x3C8E868
	0x01FA6118 ADRP X21, 0x2433000
	0x01FA611C LDRB W8, [X21 + 0x763]
	0x01FA6120 LDR V11, [X20 + 0x94]
	0x01FA6124 MOV V8.16B, V0.16B
	0x01FA6128 MOV V9.16B, V1.16B
	0x01FA612C MOV V10.16B, V2.16B
	0x01FA6130 CBNZ W8, 0x1FA6148
	0x01FA6134 ADRP X0, 0x214D000
	0x01FA6138 LDR X0, [X0 + 0x5A8]
	0x01FA613C BL 0x1C16CF4
	0x01FA6140 MOVZ W8, 0x1
	0x01FA6144 STRB W8, [X21 + 0x763]
	0x01FA6148 FMUL S0, S8, S8
	0x01FA614C FMUL S1, S9, S9
	0x01FA6150 FMUL S2, S10, S10
	0x01FA6154 FADD S0, S0, S1
	0x01FA6158 FADD S12, S2, S0
	0x01FA615C FMUL S0, S11, S11
	0x01FA6160 FCMP S12, S0
	0x01FA6164 B.LE 0x1FA619C
	0x01FA6168 ADRP X8, 0x214D000
	0x01FA616C LDR X8, [X8 + 0x5A8]
	0x01FA6170 LDR X0, [X8]
	0x01FA6174 LDR W8, [X0 + 0xE0]
	0x01FA6178 CBNZ W8, 0x1FA6180
	0x01FA617C BL 0x1C16DFC
	0x01FA6180 FSQRT S0, S12
	0x01FA6184 FDIV S1, S8, S0
	0x01FA6188 FDIV S2, S9, S0
	0x01FA618C FDIV S0, S10, S0
	0x01FA6190 FMUL S8, S11, S1
	0x01FA6194 FMUL S9, S11, S2
	0x01FA6198 FMUL S10, S11, S0
	0x01FA619C MOV X0, X19
	0x01FA61A0 MOV V0.16B, V8.16B
	0x01FA61A4 MOV V1.16B, V9.16B
	0x01FA61A8 MOV V2.16B, V10.16B
	0x01FA61AC LDP X20, X19, [X31 + 0x40]
	0x01FA61B0 LDP X30, X21, [X31 + 0x30]
	0x01FA61B4 LDP D9, D8, [X31 + 0x20]
	0x01FA61B8 LDP D11, D10, [X31 + 0x10]
	0x01FA61BC MOV X1, X31
	0x01FA61C0 LDR V12, [X31], #0x50
	0x01FA61C4 B 0x3C8E908
	0x01FA61C8 BL 0x1C16F20
	0x01FA61CC STP X30, X21, [X31 - 0x20]!
	0x01FA61D0 STP X20, X19, [X31 + 0x10]
	0x01FA61D4 ADRP X20, 0x2433000
	0x01FA61D8 ADRP X21, 0x214D000
	0x01FA61DC LDRB W8, [X20 + 0x800]
	0x01FA61E0 LDR X21, [X21 + 0x598]
	0x01FA61E4 MOV X19, X0
	0x01FA61E8 TBNZ X8, 0x0, 0x1FA6200
	0x01FA61EC ADRP X0, 0x214D000
	0x01FA61F0 LDR X0, [X0 + 0x598]
	0x01FA61F4 BL 0x1C16CF4
	0x01FA61F8 MOVZ W8, 0x1
	0x01FA61FC STRB W8, [X20 + 0x800]
	0x01FA6200 LDR X0, [X21]
	0x01FA6204 LDR X20, [X19 + 0x28]
	0x01FA6208 LDR W8, [X0 + 0xE0]
	0x01FA620C CBNZ W8, 0x1FA6214
	0x01FA6210 BL 0x1C16DFC
	0x01FA6214 MOV X0, X20
	0x01FA6218 MOV X1, X31
	0x01FA621C MOV X2, X31
	0x01FA6220 BL 0x3C3883C
	0x01FA6224 TBNZ X0, 0x0, 0x1FA6258
	0x01FA6228 LDR X8, [X19 + 0x28]
	0x01FA622C CBZ X8, 0x1FA62A8
	0x01FA6230 LDR X0, [X21]
	0x01FA6234 LDR X20, [X8 + 0x40]
	0x01FA6238 LDR W9, [X0 + 0xE0]
	0x01FA623C CBNZ W9, 0x1FA6244
	0x01FA6240 BL 0x1C16DFC
	0x01FA6244 MOV X0, X20
	0x01FA6248 MOV X1, X31
	0x01FA624C MOV X2, X31
	0x01FA6250 BL 0x3C3883C
	0x01FA6254 TBZ X0, 0x0, 0x1FA6298
	0x01FA6258 MOV X0, X19
	0x01FA625C BL 0x1FA5D88
	0x01FA6260 TBZ X0, 0x0, 0x1FA6298
	0x01FA6264 LDR X0, [X19 + 0x20]
	0x01FA6268 CBZ X0, 0x1FA62A8
	0x01FA626C MOV X1, X31
	0x01FA6270 BL 0x3C32E90
	0x01FA6274 MOV X20, X0
	0x01FA6278 MOV X0, X31
	0x01FA627C BL 0x3C3C7DC
	0x01FA6280 LDR X8, [X19]
	0x01FA6284 LDRB W2, [X19 + 0xDD]
	0x01FA6288 MOV X0, X19
	0x01FA628C MOV X1, X20
	0x01FA6290 LDP X9, X3, [X8 + 0x1C8]
	0x01FA6294 BLR X9
	0x01FA6298 STRB W31, [X19 + 0xDD]
	0x01FA629C LDP X20, X19, [X31 + 0x10]
	0x01FA62A0 LDP X30, X21, [X31], #0x20
	0x01FA62A4 RET
	0x01FA62A8 BL 0x1C16F20
	0x01FA62AC MOVZ W8, 0x1
	0x01FA62B0 STRB W8, [X0 + 0xDD]
	0x01FA62B4 RET
	0x01FA62B8 ADRP X8, 0xFFFFFFFFFEB48000
	0x01FA62BC LDR V0, [X8 + 0x2D0]
	0x01FA62C0 ADRP X8, 0xFFFFFFFFFEB45000
	0x01FA62C4 MOVI V1.2D, 0x0
	0x01FA62C8 STUR V1, [X0 + 0xAC]
	0x01FA62CC STUR V1, [X0 + 0xBC]
	0x01FA62D0 LDR V1, [X8 + 0x2E]
	0x01FA62D4 ADRP X8, 0xFFFFFFFFFEB47000
	0x01FA62D8 STR D0, [X0 + 0x90]
	0x01FA62DC LDR V0, [X8 + 0xA08]
	0x01FA62E0 MOVZ W8, 0x1
	0x01FA62E4 MOV X1, X31
	0x01FA62E8 STUR V1, [X0 + 0x9C]
	0x01FA62EC STUR X31, [X0 + 0xCC]

ISIL:
	001 Move [X31-112], D8
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Subtract X31, X31, 944
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X23+40]
	017 Move X20, 0x2435000
	018 Move X19, X0
	019 Move [X31+936], X8
	020 Move W8, [X20+2040]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0x2177000
	026 Move X0, [X0+704]
	027 Call 0x1C17CF4
	028 Move X0, 0x2152000
	029 Move X0, [X0+3648]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+2040], W8
	033 Add X0, X31, 224
	034 Move W2, 336
	035 Move W1, W31
	036 Call 0x3EB2B10
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 Move [X31+192], V0
	039 Move [X31+200], V0
	040 Move [X31+160], V0
	041 Move [X31+168], V0
	042 Move W8, [X19+336]
	043 Compare W8, 0
	044 JumpIfEqual {64}
	045 Move X0, [X19+64]
	046 Compare X0, 0
	047 JumpIfEqual {556}
	048 Move X1, X31
	049 Call NetworkObject.get_HasInputAuthority, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {63}
	054 Move W8, [X19+336]
	055 Compare W8, 0
	056 JumpIfEqual {64}
	057 Move X0, X31
	058 Call Time.get_time
	059 Move V1, [X19+344]
	060 Subtract S0, S0, S1
	061 Move S1, 1
	062 NotImplemented "Instruction FCMP not yet implemented."
	063 Move [X19+336], W31
	064 Move X22, 0x2152000
	065 Move X22, [X22+3648]
	066 Move W26, [X19+160]
	067 Move X0, [X22]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X0, X31
	073 Call PlayerRef.get_None
	074 NotImplemented "Instruction MOVI not yet implemented."
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 Move [X31+560], V0
	077 Move [X31+568], V0
	078 Move [X31+592], V0
	079 Move [X31+600], V0
	080 Move W8, [X19+336]
	081 Move X20, X0
	082 Add X24, X19, 172
	083 Compare W8, 0
	084 JumpIfEqual {109}
	085 Move X8, [X19+56]
	086 Compare X8, 0
	087 JumpIfEqual {556}
	088 Move X8, [X8+80]
	089 Compare X8, 0
	090 JumpIfEqual {92}
	091 Move W8, [X8+72]
	092 Move W9, [X19+348]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move V0, [X19+384]
	095 Move V1, [X19+400]
	096 Move V2, [X19+352]
	097 Move V3, [X19+368]
	098 Add X8, X19, 352
	099 Move W21, W31
	100 Move [X31+592], V0
	101 Move [X31+600], V1
	102 Move [X31+560], V2
	103 Move [X31+568], V3
	104 Move V5, [X19+416]
	105 Move V0, [X8+72]
	106 Move V4, [X19+432]
	107 Move W28, 1
	108 Move [X31+3], V0
	109 Move X8, 0x2177000
	110 Move X8, [X8+704]
	111 Add X1, X31, 224
	112 Move X0, X19
	113 Add X27, X31, 624
	114 Move X2, [X8]
	115 Call NetworkBehaviour.GetInput, X0, X1
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {129}
	120 Move X8, [X19+64]
	121 Move [X31+8], X23
	122 Compare X8, 0
	123 JumpIfEqual {222}
	124 Move X8, [X8+32]
	125 Move X23, X29
	126 Compare X8, 0
	127 JumpIfEqual {223}
	128 Move W29, [X8]
	129 Move X0, [X22]
	130 Move W28, [X19+160]
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {135}
	134 Call 0x1C17DFC
	135 Move X0, X31
	136 Call PlayerRef.get_None
	137 Move X21, X0
	138 Add X1, X19, 160
	139 Add X0, X31, 624
	140 Move W2, 76
	141 Call 0x3EB2AC0
	142 NotImplemented "Instruction LDUR not yet implemented."
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 NotImplemented "Instruction LDUR not yet implemented."
	145 NotImplemented "Instruction LDUR not yet implemented."
	146 Move [X31+3], V0
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 NotImplemented "Instruction LDUR not yet implemented."
	149 NotImplemented "Instruction LDUR not yet implemented."
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move [X31+592], V1
	152 Move [X31+600], V0
	153 Move [X31+560], V3
	154 Move [X31+568], V2
	155 Move W28, W31
	156 Move W21, 1
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X0, [X19+64]
	159 Move [X31+16], V4
	160 Move [X31+24], V5
	161 Compare X0, 0
	162 JumpIfEqual {556}
	163 Move X1, X31
	164 Call NetworkObject.get_IsProxy, X0
	165 NotImplemented "Instruction ORN not yet implemented."
	166 And W8, W8, 1
	167 Or W8, W28, W8
	168 Compare W8, 0
	169 JumpIfEqual {193}
	170 Move X0, [X22]
	171 Move W8, [X0+224]
	172 Compare W8, 0
	173 JumpIfNotEqual {175}
	174 Call 0x1C17DFC
	175 Move X0, X31
	176 Call PlayerRef.get_None
	177 Move [X19+160], W0
	178 Move [X19+164], X29
	179 Move V1, [X31+592]
	180 Move V0, [X31+608]
	181 Move V2, [X31+560]
	182 Move V3, [X31+576]
	183 Move [X24+32], V1
	184 Move [X24+40], V0
	185 Move V0, [X31+2]
	186 Move [X24], V2
	187 Move [X24+8], V3
	188 Move [X19+236], D0
	189 Move V0, [X31+3]
	190 Move [X19+244], D0
	191 Move V0, [X31+1]
	192 Move [X19+252], D0
	193 Move X8, [X19+328]
	194 Move V0, [X31+2]
	195 Compare X8, 0
	196 JumpIfEqual {556}
	197 Move X0, [X8+136]
	198 Compare X0, 0
	199 JumpIfEqual {556}
	200 Move S1, V0.S[1]
	201 Move V2, [X31+3]
	202 Move X1, X31
	203 Call Rigidbody.set_velocity, X0, X1
	204 Move X8, [X19+328]
	205 Compare X8, 0
	206 JumpIfEqual {556}
	207 Move X0, [X8+136]
	208 Move V1, [X31+1]
	209 Compare X0, 0
	210 JumpIfEqual {556}
	211 Move V0, [X31+3]
	212 Move S2, V1.S[1]
	213 Move X1, X31
	214 Move S0, V0.S[1]
	215 Call Rigidbody.set_angularVelocity, X0, X1
	216 NotImplemented "Instruction LDUR not yet implemented."
	217 Move X0, X19
	218 Move [X31+16], V4
	219 Move [X31+24], V5
	220 Call NetworkPhysicsGrabbable.GrabberForId, X0, X1
	221 Move X21, X0
	222 Move X23, X29
	223 Move W29, W31
	224 Move X21, 0x2434000
	225 Move X25, [X31+384]
	226 Move W8, [X21+2592]
	227 Move W22, [X19+104]
	228 Compare W8, 0
	229 JumpIfNotEqual {235}
	230 Move X0, 0x2152000
	231 Move X0, [X0+920]
	232 Call 0x1C17CF4
	233 Move W8, 1
	234 Move [X21+2592], W8
	235 Move X28, 0x2152000
	236 Move X28, [X28+920]
	237 Move X0, [X28]
	238 Move W8, [X0+224]
	239 Compare W8, 0
	240 JumpIfNotEqual {242}
	241 Call 0x1C17DFC
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move X8, X25
	244 ShiftRight X8, 32
	245 And X8, X8, 0x7FFFFFFF
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Add X0, X31, 624
	248 Add X1, X31, 224
	249 Move W2, 224
	250 Call 0x3EB2AC0
	251 Move V1, [X31+448]
	252 Move V0, [X31+456]
	253 Move V3, [X31+784]
	254 Move V2, [X31+800]
	255 Move [X31+32], V1
	256 Move [X31+40], V0
	257 Move V1, [X31+816]
	258 Move V0, [X31+832]
	259 Move [X31+560], V3
	260 Move [X31+568], V2
	261 Move [X31+592], V1
	262 Move [X31+600], V0
	263 Move X0, [X19+64]
	264 Move V0, [X31+464]
	265 Move [X31+1], V0
	266 Compare X0, 0
	267 JumpIfEqual {556}
	268 Move X1, X31
	269 Move X29, X23
	270 Call NetworkObject.get_InputAuthority, X0
	271 And X1, X0, 0
	272 Move W2, 2
	273 Move W22, 2
	274 Move X8, [X19+64]
	275 Compare X8, 0
	276 JumpIfEqual {281}
	277 Move X8, [X8+32]
	278 Compare X8, 0
	279 JumpIfEqual {281}
	280 Move W29, [X8]
	281 Move W29, W31
	282 Move X22, [X31+472]
	283 Move W8, [X21+2592]
	284 Move W25, [X19+104]
	285 Compare W8, 0
	286 JumpIfNotEqual {292}
	287 Move X0, 0x2152000
	288 Move X0, [X0+920]
	289 Call 0x1C17CF4
	290 Move W8, 1
	291 Move [X21+2592], W8
	292 Move X0, [X28]
	293 Move W8, [X0+224]
	294 Compare W8, 0
	295 JumpIfNotEqual {297}
	296 Call 0x1C17DFC
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Move X8, X22
	299 ShiftRight X8, 32
	300 And X8, X8, 0x7FFFFFFF
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Add X0, X31, 624
	303 Add X1, X31, 224
	304 Move W2, 312
	305 Add X21, X31, 624
	306 Call 0x3EB2AC0
	307 Move V1, [X31+536]
	308 Move V0, [X31+544]
	309 Add X8, X21, 248
	310 Move V2, [X8+1]
	311 NotImplemented "Instruction LDUR not yet implemented."
	312 Move [X31+32], V1
	313 Move [X31+40], V0
	314 Move V1, [X8+32]
	315 Move V0, [X8+48]
	316 Move [X31+560], V3
	317 Move [X31+568], V2
	318 Move [X31+592], V1
	319 Move [X31+600], V0
	320 Move X0, [X19+64]
	321 Move V0, [X31+552]
	322 Move [X31+1], V0
	323 Compare X0, 0
	324 JumpIfEqual {556}
	325 Move X1, X31
	326 Move X29, X23
	327 Call NetworkObject.get_InputAuthority, X0
	328 And X1, X0, 0
	329 Move W2, 3
	330 Move W22, 3
	331 Move X0, X19
	332 Call NetworkPhysicsGrabbable.GrabberForSideAndPlayer, X0, X1, X2
	333 Move X23, [X31+8]
	334 Move X21, X0
	335 Move [X19+340], W22
	336 Move X0, X19
	337 Move X1, X21
	338 Call NetworkPhysicsGrabbable.AdaptRenderTimeFrame, X0, X1
	339 Move V1, [X31+560]
	340 Move V0, [X31+576]
	341 Move X8, [X19+328]
	342 Move V2, [X31+592]
	343 Move V3, [X31+608]
	344 Move [X31+624], V1
	345 Move [X31+632], V0
	346 Move X9, [X31+632]
	347 Move W10, [X31+640]
	348 Move [X31+656], V2
	349 Move [X31+664], V3
	350 Move [X31+144], X9
	351 Move [X31+152], W10
	352 Compare X8, 0
	353 JumpIfEqual {556}
	354 Move W9, [X31+152]
	355 Move X10, [X31+144]
	356 Move [X8+56], W9
	357 Move [X8+48], X10
	358 Move V1, [X31+576]
	359 Move V0, [X31+592]
	360 Move X8, [X19+328]
	361 Move V2, [X31+35]
	362 Move V3, [X31+38]
	363 Move [X31+96], V1
	364 Move [X31+104], V0
	365 NotImplemented "Instruction LDUR not yet implemented."
	366 Move [X31+8], V3
	367 Move [X31+64], V0
	368 Move [X31+72], V2
	369 Compare X8, 0
	370 JumpIfEqual {556}
	371 Move V0, [X31+4]
	372 Move [X8+60], V0
	373 Compare X21, 0
	374 JumpIfEqual {556}
	375 Move X0, X21
	376 Move X1, X31
	377 Call Component.get_transform, X0
	378 Move X8, [X19+56]
	379 Compare X8, 0
	380 JumpIfEqual {556}
	381 Move X22, X0
	382 Move X0, X8
	383 Move X1, X31
	384 Call NetworkRunner.get_DeltaTime, X0
	385 Move W0, [X19+296]
	386 Move X1, X31
	387 Move V8, V0
	388 Call NetworkBool.op_Implicit, X0
	389 Move X8, [X19]
	390 And W2, W0, 1
	391 Move X0, X19
	392 Move X1, X22
	393 Move X9, [X8+664]
	394 Move X3, [X8+672]
	395 Move V0, V8
	396 NotImplemented "Instruction BLR not yet implemented."
	397 NotImplemented "Instruction CMP not yet implemented."
	398 Move X0, [X19+64]
	399 Compare X0, 0
	400 JumpIfEqual {556}
	401 Move X1, X31
	402 Call NetworkObject.get_IsProxy, X0
	403 Move TEMP, X0
	404 And TEMP, TEMP, 1
	405 Compare TEMP, 1
	406 JumpIfEqual {471}
	407 Move X0, [X21+64]
	408 Compare X0, 0
	409 JumpIfEqual {556}
	410 Move X1, X31
	411 Call NetworkObject.get_InputAuthority, X0
	412 Move X8, [X21+64]
	413 Compare X8, 0
	414 JumpIfEqual {453}
	415 Move X8, [X8+32]
	416 Move V4, [X31+16]
	417 Move V5, [X31+32]
	418 Compare X8, 0
	419 JumpIfEqual {455}
	420 Move W8, [X8]
	421 Move X8, [X21+64]
	422 Compare X8, 0
	423 JumpIfEqual {428}
	424 Move X8, [X8+32]
	425 Compare X8, 0
	426 JumpIfEqual {428}
	427 Move W20, [X8]
	428 Move W20, W31
	429 Move X25, 0x2433000
	430 Move W8, [X25+2592]
	431 Move W22, [X21+104]
	432 Compare W8, 0
	433 JumpIfNotEqual {439}
	434 Move X0, 0x2151000
	435 Move X0, [X0+920]
	436 Call 0x1C17CF4
	437 Move W8, 1
	438 Move [X25+2592], W8
	439 Move X8, 0x2151000
	440 Move X8, [X8+920]
	441 Move X0, [X8]
	442 Move W8, [X0+224]
	443 Compare W8, 0
	444 JumpIfNotEqual {446}
	445 Call 0x1C17DFC
	446 NotImplemented "Instruction CMP not yet implemented."
	447 Move X8, X29
	448 ShiftRight X8, 32
	449 And X8, X8, 0x7FFFFFFF
	450 NotImplemented "Instruction CMP not yet implemented."
	451 NotImplemented "Instruction CMP not yet implemented."
	452 Move X23, [X31+8]
	453 Move V4, [X31+16]
	454 Move V5, [X31+32]
	455 Move W9, [X21+104]
	456 Move [X19+160], W0
	457 NotImplemented "Instruction BFM not yet implemented."
	458 Move [X19+164], X8
	459 Move V1, [X31+592]
	460 Move V0, [X31+608]
	461 Move V3, [X31+560]
	462 Move V2, [X31+576]
	463 Move [X24+32], V1
	464 Move [X24+40], V0
	465 Move V0, [X31+3]
	466 Move [X24], V3
	467 Move [X24+8], V2
	468 Move [X19+236], D5
	469 Move [X19+252], D4
	470 Move [X19+244], D0
	471 Move W21, 1
	472 Move X0, [X19+56]
	473 Compare X0, 0
	474 JumpIfEqual {556}
	475 Move X1, X31
	476 Call NetworkRunner.get_IsForward, X0
	477 And W8, W21, W0
	478 NotImplemented "Instruction CMP not yet implemented."
	479 Move X0, X19
	480 Call NetworkPhysicsGrabbable.TriggerCallbacksOnForwardGrabbingChanges, X0
	481 Move W0, W31
	482 Move X1, X31
	483 Call NetworkBool.op_Implicit, X0
	484 Move [X19+296], W0
	485 Move X8, [X23+40]
	486 Move X9, [X31+936]
	487 NotImplemented "Instruction CMP not yet implemented."
	488 Add X31, X31, 944
	489 Move X20, [X31+96]
	490 Move X19, [X31+104]
	491 Move X22, [X31+80]
	492 Move X21, [X31+88]
	493 Move X24, [X31+64]
	494 Move X23, [X31+72]
	495 Move X26, [X31+48]
	496 Move X25, [X31+56]
	497 Move X28, [X31+32]
	498 Move X27, [X31+40]
	499 Move X29, [X31+16]
	500 Move X30, [X31+24]
	501 Move V8, [X31+112]
	502 Return 
	503 Move X29, X23
	504 Move W28, [X19+340]
	505 Move X23, [X31+8]
	506 Compare W28, 0
	507 JumpIfEqual {523}
	508 Move X22, 0x2151000
	509 Move X22, [X22+3648]
	510 NotImplemented "Instruction CMP not yet implemented."
	511 Add X0, X31, 624
	512 Add X1, X31, 224
	513 Move W2, 224
	514 Call 0x3EB2AC0
	515 Move D5, [X31+448]
	516 Move D0, [X31+456]
	517 Move V4, [X31+464]
	518 Move V2, [X31+816]
	519 Move V3, [X31+832]
	520 Move [X31+3], V0
	521 Move V0, [X31+784]
	522 Move V1, [X31+800]
	523 NotImplemented "Instruction MOVI not yet implemented."
	524 Move [X31+3], V0
	525 Move X22, 0x2151000
	526 Move X22, [X22+3648]
	527 NotImplemented "Instruction MOVI not yet implemented."
	528 Move W21, 1
	529 NotImplemented "Instruction MOVI not yet implemented."
	530 Move W2, 312
	531 Add X20, X31, 624
	532 Call 0x3EB2AC0
	533 Move V0, [X31+544]
	534 Add X8, X20, 248
	535 Move V5, [X31+536]
	536 Move V4, [X31+552]
	537 Move [X31+3], V0
	538 NotImplemented "Instruction LDUR not yet implemented."
	539 Move V1, [X8+16]
	540 Move V2, [X8+32]
	541 Move V3, [X8+3]
	542 Move [X31+160], V0
	543 Move [X31+168], V1
	544 Move [X31+192], V2
	545 Move [X31+200], V3
	546 Move V0, [X31+160]
	547 Move V1, [X31+176]
	548 Move V2, [X31+192]
	549 Move V3, [X31+208]
	550 Move W28, W31
	551 Move W21, 1
	552 Move [X31+560], V0
	553 Move [X31+568], V1
	554 Move [X31+592], V2
	555 Move [X31+600], V3
	556 Call 0x1C17F20
	557 Call 0x3EB2B20

Method: System.Void TriggerCallbacksOnForwardGrabbingChanges()

Disassembly:
	0x01FA62F0 STUR D0, [X0 + 0xD4]
	0x01FA62F4 STRB W8, [X0 + 0xDC]
	0x01FA62F8 B 0x3C36C30
	0x01FA62FC STR X30, [X31 - 0x30]!
	0x01FA6300 STP X22, X21, [X31 + 0x10]
	0x01FA6304 STP X20, X19, [X31 + 0x20]
	0x01FA6308 ADRP X21, 0x2433000
	0x01FA630C ADRP X22, 0x2175000
	0x01FA6310 ADRP X20, 0x214D000
	0x01FA6314 LDRB W8, [X21 + 0x801]
	0x01FA6318 LDR X22, [X22 + 0x4A0]
	0x01FA631C LDR X20, [X20 + 0x598]
	0x01FA6320 MOV X19, X0
	0x01FA6324 TBNZ X8, 0x0, 0x1FA6360
	0x01FA6328 ADRP X0, 0x2175000
	0x01FA632C LDR X0, [X0 + 0x4A0]
	0x01FA6330 BL 0x1C16CF4
	0x01FA6334 ADRP X0, 0x214D000
	0x01FA6338 LDR X0, [X0 + 0xA28]
	0x01FA633C BL 0x1C16CF4
	0x01FA6340 ADRP X0, 0x214D000
	0x01FA6344 LDR X0, [X0 + 0x598]
	0x01FA6348 BL 0x1C16CF4
	0x01FA634C ADRP X0, 0x2175000
	0x01FA6350 LDR X0, [X0 + 0x4A8]
	0x01FA6354 BL 0x1C16CF4
	0x01FA6358 MOVZ W8, 0x1
	0x01FA635C STRB W8, [X21 + 0x801]
	0x01FA6360 LDR X1, [X22]
	0x01FA6364 MOV X0, X19
	0x01FA6368 BL 0x21A3894
	0x01FA636C STR X0, [X19 + 0x30]
	0x01FA6370 LDR X0, [X20]
	0x01FA6374 LDR X19, [X19 + 0x28]
	0x01FA6378 LDR W8, [X0 + 0xE0]
	0x01FA637C CBNZ W8, 0x1FA6384
	0x01FA6380 BL 0x1C16DFC
	0x01FA6384 MOV X0, X19
	0x01FA6388 MOV X1, X31
	0x01FA638C MOV X2, X31
	0x01FA6390 BL 0x3C3883C
	0x01FA6394 TBZ X0, 0x0, 0x1FA63D0
	0x01FA6398 ADRP X8, 0x214D000
	0x01FA639C LDR X8, [X8 + 0xA28]
	0x01FA63A0 ADRP X19, 0x2175000
	0x01FA63A4 LDR X0, [X8]
	0x01FA63A8 LDR W8, [X0 + 0xE0]
	0x01FA63AC LDR X19, [X19 + 0x4A8]
	0x01FA63B0 CBNZ W8, 0x1FA63B8
	0x01FA63B4 BL 0x1C16DFC
	0x01FA63B8 LDR X0, [X19]
	0x01FA63BC LDP X20, X19, [X31 + 0x20]
	0x01FA63C0 LDP X22, X21, [X31 + 0x10]
	0x01FA63C4 MOV X1, X31
	0x01FA63C8 LDR X30, [X31], #0x30
	0x01FA63CC B 0x3C0649C
	0x01FA63D0 LDP X20, X19, [X31 + 0x20]
	0x01FA63D4 LDP X22, X21, [X31 + 0x10]
	0x01FA63D8 LDR X30, [X31], #0x30
	0x01FA63DC RET
	0x01FA63E0 STR X30, [X31 - 0x40]!
	0x01FA63E4 STP X24, X23, [X31 + 0x10]
	0x01FA63E8 STP X22, X21, [X31 + 0x20]
	0x01FA63EC STP X20, X19, [X31 + 0x30]
	0x01FA63F0 ADRP X20, 0x2433000
	0x01FA63F4 ADRP X21, 0x214D000
	0x01FA63F8 LDRB W8, [X20 + 0x802]
	0x01FA63FC LDR X21, [X21 + 0x598]
	0x01FA6400 MOV X19, X0
	0x01FA6404 TBNZ X8, 0x0, 0x1FA6440
	0x01FA6408 ADRP X0, 0x214F000
	0x01FA640C LDR X0, [X0 + 0x790]
	0x01FA6410 BL 0x1C16CF4
	0x01FA6414 ADRP X0, 0x2175000
	0x01FA6418 LDR X0, [X0 + 0x140]
	0x01FA641C BL 0x1C16CF4
	0x01FA6420 ADRP X0, 0x214D000
	0x01FA6424 LDR X0, [X0 + 0xD78]
	0x01FA6428 BL 0x1C16CF4
	0x01FA642C ADRP X0, 0x214D000
	0x01FA6430 LDR X0, [X0 + 0x598]
	0x01FA6434 BL 0x1C16CF4
	0x01FA6438 MOVZ W8, 0x1
	0x01FA643C STRB W8, [X20 + 0x802]
	0x01FA6440 LDR X0, [X21]
	0x01FA6444 ADRP X22, 0x214D000
	0x01FA6448 LDR X20, [X19 + 0x28]
	0x01FA644C LDR W8, [X0 + 0xE0]
	0x01FA6450 LDR X22, [X22 + 0xD78]
	0x01FA6454 CBNZ W8, 0x1FA645C
	0x01FA6458 BL 0x1C16DFC
	0x01FA645C LDR X1, [X22]
	0x01FA6460 MOV X0, X20
	0x01FA6464 BL 0x222D35C
	0x01FA6468 STR X0, [X19 + 0x40]
	0x01FA646C CBZ X0, 0x1FA682C
	0x01FA6470 MOV X1, X31
	0x01FA6474 BL 0x3C356F8
	0x01FA6478 LDR X8, [X19 + 0x28]
	0x01FA647C CBZ X8, 0x1FA682C
	0x01FA6480 MOV X20, X0
	0x01FA6484 MOV X0, X8
	0x01FA6488 MOV X1, X31
	0x01FA648C BL 0x3C356F8
	0x01FA6490 CBZ X0, 0x1FA682C
	0x01FA6494 MOV X1, X31
	0x01FA6498 BL 0x3C40EA8
	0x01FA649C CBZ X20, 0x1FA682C
	0x01FA64A0 MOV X0, X20
	0x01FA64A4 MOV X1, X31
	0x01FA64A8 BL 0x3C3FC4C
	0x01FA64AC LDR X0, [X19 + 0x40]
	0x01FA64B0 CBZ X0, 0x1FA682C
	0x01FA64B4 MOV X1, X31
	0x01FA64B8 BL 0x3C356F8
	0x01FA64BC LDR X8, [X19 + 0x28]
	0x01FA64C0 CBZ X8, 0x1FA682C
	0x01FA64C4 MOV X20, X0
	0x01FA64C8 MOV X0, X8
	0x01FA64CC MOV X1, X31
	0x01FA64D0 BL 0x3C356F8
	0x01FA64D4 CBZ X20, 0x1FA682C
	0x01FA64D8 MOV X1, X0
	0x01FA64DC MOV X0, X20
	0x01FA64E0 MOV X2, X31
	0x01FA64E4 BL 0x3C3FD20
	0x01FA64E8 LDR X0, [X19 + 0x40]
	0x01FA64EC CBZ X0, 0x1FA682C
	0x01FA64F0 ADRP X8, 0x214F000
	0x01FA64F4 LDR X8, [X8 + 0x790]
	0x01FA64F8 LDR X1, [X8]
	0x01FA64FC BL 0x21E5F08
	0x01FA6500 LDR X8, [X19 + 0x20]
	0x01FA6504 STR X0, [X19 + 0x48]
	0x01FA6508 MOV X1, X31
	0x01FA650C MOV X2, X31
	0x01FA6510 MOV X0, X8
	0x01FA6514 BL 0x3C3883C
	0x01FA6518 TBZ X0, 0x0, 0x1FA667C
	0x01FA651C LDR X0, [X19 + 0x30]
	0x01FA6520 CBZ X0, 0x1FA682C
	0x01FA6524 LDR X8, [X0]
	0x01FA6528 LDR X9, [X8 + 0x248]
	0x01FA652C LDR X1, [X8 + 0x250]
	0x01FA6530 BLR X9
	0x01FA6534 LDR X8, [X21]
	0x01FA6538 MOV X20, X0
	0x01FA653C LDR W9, [X8 + 0xE0]
	0x01FA6540 CBNZ W9, 0x1FA654C
	0x01FA6544 MOV X0, X8
	0x01FA6548 BL 0x1C16DFC
	0x01FA654C MOV X0, X20
	0x01FA6550 MOV X1, X31
	0x01FA6554 BL 0x3C38948
	0x01FA6558 TBZ X0, 0x0, 0x1FA667C
	0x01FA655C LDR X0, [X19 + 0x30]
	0x01FA6560 CBZ X0, 0x1FA682C
	0x01FA6564 LDR X8, [X0]
	0x01FA6568 LDR X9, [X8 + 0x248]
	0x01FA656C LDR X1, [X8 + 0x250]
	0x01FA6570 BLR X9
	0x01FA6574 CBZ X0, 0x1FA682C
	0x01FA6578 LDR X0, [X0 + 0xF0]
	0x01FA657C CBZ X0, 0x1FA682C
	0x01FA6580 BL 0x1FA06D8
	0x01FA6584 LDR X8, [X21]
	0x01FA6588 MOV X20, X0
	0x01FA658C LDR W9, [X8 + 0xE0]
	0x01FA6590 CBNZ W9, 0x1FA659C
	0x01FA6594 MOV X0, X8
	0x01FA6598 BL 0x1C16DFC
	0x01FA659C MOV X0, X20
	0x01FA65A0 MOV X1, X31
	0x01FA65A4 BL 0x3C38948
	0x01FA65A8 TBZ X0, 0x0, 0x1FA667C
	0x01FA65AC LDR X0, [X19 + 0x30]
	0x01FA65B0 CBZ X0, 0x1FA682C
	0x01FA65B4 LDR X8, [X0]
	0x01FA65B8 LDR X9, [X8 + 0x248]
	0x01FA65BC LDR X1, [X8 + 0x250]
	0x01FA65C0 BLR X9
	0x01FA65C4 CBZ X0, 0x1FA682C
	0x01FA65C8 LDR X0, [X0 + 0xF0]
	0x01FA65CC CBZ X0, 0x1FA682C
	0x01FA65D0 BL 0x1FA06D8
	0x01FA65D4 CBZ X0, 0x1FA682C
	0x01FA65D8 LDR X8, [X0 + 0xD8]
	0x01FA65DC CBZ X8, 0x1FA667C
	0x01FA65E0 LDR X0, [X19 + 0x30]
	0x01FA65E4 CBZ X0, 0x1FA682C
	0x01FA65E8 LDR X8, [X0]
	0x01FA65EC LDR X9, [X8 + 0x248]
	0x01FA65F0 LDR X1, [X8 + 0x250]
	0x01FA65F4 BLR X9
	0x01FA65F8 CBZ X0, 0x1FA682C
	0x01FA65FC LDR X0, [X0 + 0xF0]
	0x01FA6600 CBZ X0, 0x1FA682C
	0x01FA6604 BL 0x1FA06D8
	0x01FA6608 CBZ X0, 0x1FA682C
	0x01FA660C LDR X20, [X0 + 0xD8]
	0x01FA6610 CBZ X20, 0x1FA682C
	0x01FA6614 ADRP X10, 0x2175000

ISIL:
	001 Subtract X31, X31, 400
	002 Move [X31+304], X29
	003 Move [X31+312], X30
	004 Move [X31+320], X28
	005 Move [X31+328], X27
	006 Move [X31+336], X26
	007 Move [X31+344], X25
	008 Move [X31+352], X24
	009 Move [X31+360], X23
	010 Move [X31+368], X22
	011 Move [X31+376], X21
	012 Move [X31+384], X20
	013 Move [X31+392], X19
	014 Move X20, 0x2434000
	015 Move W8, [X20+2041]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {41}
	021 Move X0, 0x2176000
	022 Move X0, [X0+320]
	023 Call 0x1C17CF4
	024 Move X0, 0x2176000
	025 Move X0, [X0+1144]
	026 Call 0x1C17CF4
	027 Move X0, 0x214E000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move X0, 0x2151000
	031 Move X0, [X0+3648]
	032 Call 0x1C17CF4
	033 Move X0, 0x2176000
	034 Move X0, [X0+1152]
	035 Call 0x1C17CF4
	036 Move X0, 0x2176000
	037 Move X0, [X0+1160]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+2041], W8
	041 Move [X31+288], X31
	042 Move [X31+296], X31
	043 Move [X31+272], X31
	044 Move [X31+280], X31
	045 Move [X31+256], X31
	046 Move [X31+264], X31
	047 Move [X31+240], X31
	048 Move [X31+248], X31
	049 Move [X31+208], X31
	050 Move [X31+216], X31
	051 Move [X31+224], X31
	052 Move X0, [X19+264]
	053 Compare X0, 0
	054 JumpIfEqual {245}
	055 Move X23, 0x2176000
	056 Move X24, 0x2176000
	057 Move X25, 0x2176000
	058 Move X26, 0x2151000
	059 Move X27, 0x214E000
	060 Move X23, [X23+1160]
	061 Move X24, [X24+1144]
	062 Move X25, [X25+1152]
	063 Move X26, [X26+3648]
	064 Move X27, [X27+1432]
	065 Add X2, X31, 288
	066 Add X3, X31, 272
	067 Move W4, 1
	068 Move X1, X19
	069 Move X5, X31
	070 Call ChangeDetector.DetectChanges, X0, X1, X2, X3, X4
	071 Move [X31+240], X0
	072 Move [X31+248], X1
	073 Add X0, X31, 240
	074 Move X1, X31
	075 Call Enumerable.GetEnumerator, X0
	076 Move [X31+256], X0
	077 Move [X31+264], X1
	078 Add X0, X31, 256
	079 Move X1, X31
	080 Call Enumerator.MoveNext, X0
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {231}
	085 Add X0, X31, 256
	086 Move X1, X31
	087 Call Enumerator.get_Current, X0
	088 Move X1, [X23]
	089 Move X2, X31
	090 Call String.op_Equality, X0, X1
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {78}
	095 Move X1, [X23]
	096 Move X2, [X24]
	097 Add X8, X31, 8
	098 Move X0, X19
	099 Call NetworkBehaviour.GetPropertyReader, X0, X1
	100 Move X8, [X31+24]
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 Move X1, [X31+288]
	103 Move X2, [X31+296]
	104 Move X3, [X31+272]
	105 Move X4, [X31+280]
	106 Move X5, [X25]
	107 Move [X31+224], X8
	108 Add X8, X31, 8
	109 Add X0, X31, 208
	110 Move [X31+13], V0
	111 Call PropertyReader`1<DetailedGrabInfo>.Read, X0, X1, X2
	112 Move X0, [X26]
	113 Move W29, [X31+8]
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 Move W28, [X31+108]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1C17DFC
	120 Move X0, X31
	121 Call PlayerRef.get_None
	122 Move X21, X0
	123 Move X0, X31
	124 Call PlayerRef.get_None
	125 Move X22, X0
	126 NotImplemented "Instruction CMP not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X0, X19
	129 Call NetworkGrabbable.DidGrab, X0
	130 NotImplemented "Instruction CMP not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X0, [X19+56]
	133 Compare X0, 0
	134 JumpIfEqual {245}
	135 Move X1, X31
	136 Call NetworkRunner.get_LocalPlayer, X0
	137 Move X8, [X26]
	138 Move X21, X0
	139 Move W9, [X8+224]
	140 Compare W9, 0
	141 JumpIfNotEqual {144}
	142 Move X0, X8
	143 Call 0x1C17DFC
	144 Move X0, X19
	145 Move X1, X20
	146 Call NetworkPhysicsGrabbable.GrabberForId, X0, X1
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X21, X0
	149 Move X0, [X27]
	150 Move W8, [X0+224]
	151 Compare W8, 0
	152 JumpIfNotEqual {154}
	153 Call 0x1C17DFC
	154 Move X0, X21
	155 Move X1, X31
	156 Move X2, X31
	157 Call Object.op_Inequality, X0, X1
	158 Move TEMP, X0
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfNotEqual {226}
	162 Compare X21, 0
	163 JumpIfEqual {245}
	164 Move X0, [X21+240]
	165 Compare X0, 0
	166 JumpIfEqual {245}
	167 Call NetworkHand.get_LocalHardwareHand, X0
	168 Move X8, [X27]
	169 Move X22, X0
	170 Move W9, [X8+224]
	171 Compare W9, 0
	172 JumpIfNotEqual {175}
	173 Move X0, X8
	174 Call 0x1C17DFC
	175 Move X0, X22
	176 Move X1, X31
	177 Move X2, X31
	178 Call Object.op_Inequality, X0, X1
	179 Move TEMP, X0
	180 And TEMP, TEMP, 1
	181 Compare TEMP, 1
	182 JumpIfNotEqual {226}
	183 Move X0, [X21+240]
	184 Compare X0, 0
	185 JumpIfEqual {245}
	186 Call NetworkHand.get_LocalHardwareHand, X0
	187 Compare X0, 0
	188 JumpIfEqual {245}
	189 Move X8, [X0+216]
	190 Compare X8, 0
	191 JumpIfEqual {226}
	192 Move X0, [X21+240]
	193 Compare X0, 0
	194 JumpIfEqual {245}
	195 Call NetworkHand.get_LocalHardwareHand, X0
	196 Compare X0, 0
	197 JumpIfEqual {245}
	198 Move X21, [X0+216]
	199 Compare X21, 0
	200 JumpIfEqual {245}
	201 Move X8, [X21]
	202 Move X10, 0x2176000
	203 NotImplemented "Instruction LDRH not yet implemented."
	204 Move X10, [X10+320]
	205 Move X1, [X10]
	206 Compare X9, 0
	207 JumpIfEqual {214}
	208 Move X10, [X8+176]
	209 Add X10, X10, 8
	210 NotImplemented "Instruction LDUR not yet implemented."
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Subtract X9, X9, 1
	213 Add X10, X10, 16
	214 Move W2, 4
	215 Move X0, X21
	216 Call 0x1C5D788
	217 Move W9, [X10]
	218 Add W9, W9, 4
	219 Add X8, X8, W9
	220 Add X0, X8, 312
	221 Move X8, [X0]
	222 Move X2, [X0+8]
	223 Move X0, X21
	224 Move W1, W31
	225 NotImplemented "Instruction BLR not yet implemented."
	226 Move X0, X19
	227 Move X1, X20
	228 Call NetworkPhysicsGrabbable.GrabberForId, X0, X1
	229 Move X0, X19
	230 Call NetworkGrabbable.DidUngrab, X0, X1
	231 Move X20, [X31+384]
	232 Move X19, [X31+392]
	233 Move X22, [X31+368]
	234 Move X21, [X31+376]
	235 Move X24, [X31+352]
	236 Move X23, [X31+360]
	237 Move X26, [X31+336]
	238 Move X25, [X31+344]
	239 Move X28, [X31+320]
	240 Move X27, [X31+328]
	241 Move X29, [X31+304]
	242 Move X30, [X31+312]
	243 Add X31, X31, 400
	244 Return 
	245 Call 0x1C17F20

Method: System.Void Render()

Disassembly:
	0x01FA6618 LDR X8, [X20]
	0x01FA661C LDR X10, [X10 + 0x140]
	0x01FA6620 LDRH W9, [X8 + 0x12E]
	0x01FA6624 LDR X1, [X10]
	0x01FA6628 CBZ X9, 0x1FA664C
	0x01FA662C LDR X10, [X8 + 0xB0]
	0x01FA6630 ADD X10, X10, 0x8
	0x01FA6634 LDUR X11, [X10 - 0x8]
	0x01FA6638 CMP X11, X1
	0x01FA663C B.EQ 0x1FA665C
	0x01FA6640 SUBS X9, X9, 0x1
	0x01FA6644 ADD X10, X10, 0x10
	0x01FA6648 B.NE 0x1FA6634
	0x01FA664C MOVZ W2, 0x6
	0x01FA6650 MOV X0, X20
	0x01FA6654 BL 0x1C5C788
	0x01FA6658 B 0x1FA666C
	0x01FA665C LDR W9, [X10]
	0x01FA6660 ADD W9, W9, 0x6
	0x01FA6664 ADD X8, X8, W9, 0x4, SXTW
	0x01FA6668 ADD X0, X8, 0x138
	0x01FA666C LDP X8, X1, [X0]
	0x01FA6670 MOV X0, X20
	0x01FA6674 BLR X8
	0x01FA6678 STR X0, [X19 + 0x20]
	0x01FA667C LDR X0, [X21]
	0x01FA6680 LDR X20, [X19 + 0x20]
	0x01FA6684 LDR W8, [X0 + 0xE0]
	0x01FA6688 CBNZ W8, 0x1FA6690
	0x01FA668C BL 0x1C16DFC
	0x01FA6690 MOV X0, X20
	0x01FA6694 MOV X1, X31
	0x01FA6698 BL 0x3C38948
	0x01FA669C TBZ X0, 0x0, 0x1FA6818
	0x01FA66A0 LDR X0, [X19 + 0x30]
	0x01FA66A4 CBZ X0, 0x1FA682C
	0x01FA66A8 LDR X8, [X0]
	0x01FA66AC LDR X9, [X8 + 0x248]
	0x01FA66B0 LDR X1, [X8 + 0x250]
	0x01FA66B4 BLR X9
	0x01FA66B8 CBZ X0, 0x1FA682C
	0x01FA66BC LDR X0, [X0 + 0xF0]
	0x01FA66C0 CBZ X0, 0x1FA682C
	0x01FA66C4 BL 0x1FA06D8
	0x01FA66C8 CBZ X0, 0x1FA682C
	0x01FA66CC LDR X20, [X0 + 0xD8]
	0x01FA66D0 CBZ X20, 0x1FA682C
	0x01FA66D4 ADRP X22, 0x2175000
	0x01FA66D8 LDR X8, [X20]
	0x01FA66DC LDR X22, [X22 + 0x140]
	0x01FA66E0 LDRH W9, [X8 + 0x12E]
	0x01FA66E4 LDR X1, [X22]
	0x01FA66E8 CBZ X9, 0x1FA670C
	0x01FA66EC LDR X10, [X8 + 0xB0]
	0x01FA66F0 ADD X10, X10, 0x8
	0x01FA66F4 LDUR X11, [X10 - 0x8]
	0x01FA66F8 CMP X11, X1
	0x01FA66FC B.EQ 0x1FA671C
	0x01FA6700 SUBS X9, X9, 0x1
	0x01FA6704 ADD X10, X10, 0x10
	0x01FA6708 B.NE 0x1FA66F4
	0x01FA670C MOVZ W2, 0x6
	0x01FA6710 MOV X0, X20
	0x01FA6714 BL 0x1C5C788
	0x01FA6718 B 0x1FA672C
	0x01FA671C LDR W9, [X10]
	0x01FA6720 ADD W9, W9, 0x6
	0x01FA6724 ADD X8, X8, W9, 0x4, SXTW
	0x01FA6728 ADD X0, X8, 0x138
	0x01FA672C LDP X8, X1, [X0]
	0x01FA6730 MOV X0, X20
	0x01FA6734 BLR X8
	0x01FA6738 LDR X23, [X19 + 0x48]
	0x01FA673C CBZ X23, 0x1FA682C
	0x01FA6740 LDR W8, [X23 + 0x18]
	0x01FA6744 CMP W8, 0x1
	0x01FA6748 B.LT 0x1FA6818
	0x01FA674C MOV W24, W31
	0x01FA6750 CMP W24, W8
	0x01FA6754 B.CS 0x1FA6830
	0x01FA6758 LDR X0, [X19 + 0x30]
	0x01FA675C CBZ X0, 0x1FA682C
	0x01FA6760 LDR X8, [X0]
	0x01FA6764 ADD X9, X23, W24, 0x3, SXTW
	0x01FA6768 LDR X20, [X9 + 0x20]
	0x01FA676C LDR X9, [X8 + 0x248]
	0x01FA6770 LDR X1, [X8 + 0x250]
	0x01FA6774 BLR X9
	0x01FA6778 CBZ X0, 0x1FA682C
	0x01FA677C LDR X0, [X0 + 0xF0]
	0x01FA6780 CBZ X0, 0x1FA682C
	0x01FA6784 BL 0x1FA06D8
	0x01FA6788 CBZ X0, 0x1FA682C
	0x01FA678C LDR X21, [X0 + 0xD8]
	0x01FA6790 CBZ X21, 0x1FA682C
	0x01FA6794 LDR X8, [X21]
	0x01FA6798 LDR X1, [X22]
	0x01FA679C LDRH W9, [X8 + 0x12E]
	0x01FA67A0 CBZ X9, 0x1FA67C4
	0x01FA67A4 LDR X10, [X8 + 0xB0]
	0x01FA67A8 ADD X10, X10, 0x8
	0x01FA67AC LDUR X11, [X10 - 0x8]
	0x01FA67B0 CMP X11, X1
	0x01FA67B4 B.EQ 0x1FA67D4
	0x01FA67B8 SUBS X9, X9, 0x1
	0x01FA67BC ADD X10, X10, 0x10
	0x01FA67C0 B.NE 0x1FA67AC
	0x01FA67C4 MOVZ W2, 0x6
	0x01FA67C8 MOV X0, X21
	0x01FA67CC BL 0x1C5C788
	0x01FA67D0 B 0x1FA67E4
	0x01FA67D4 LDR W9, [X10]
	0x01FA67D8 ADD W9, W9, 0x6
	0x01FA67DC ADD X8, X8, W9, 0x4, SXTW
	0x01FA67E0 ADD X0, X8, 0x138
	0x01FA67E4 LDP X8, X1, [X0]
	0x01FA67E8 MOV X0, X21
	0x01FA67EC BLR X8
	0x01FA67F0 STR X0, [X19 + 0x20]
	0x01FA67F4 CBZ X20, 0x1FA682C
	0x01FA67F8 MOV X1, X0
	0x01FA67FC MOV X0, X20
	0x01FA6800 MOV X2, X31
	0x01FA6804 BL 0x3C134D8
	0x01FA6808 LDR W8, [X23 + 0x18]
	0x01FA680C ADD W24, W24, 0x1
	0x01FA6810 CMP W24, W8
	0x01FA6814 B.LT 0x1FA6750
	0x01FA6818 LDP X20, X19, [X31 + 0x30]
	0x01FA681C LDP X22, X21, [X31 + 0x20]
	0x01FA6820 LDP X24, X23, [X31 + 0x10]
	0x01FA6824 LDR X30, [X31], #0x40
	0x01FA6828 RET
	0x01FA682C BL 0x1C16F20
	0x01FA6830 BL 0x1C16F28
	0x01FA6834 STR X30, [X31 - 0x30]!
	0x01FA6838 STP X22, X21, [X31 + 0x10]
	0x01FA683C STP X20, X19, [X31 + 0x20]
	0x01FA6840 LDR X21, [X0 + 0x48]
	0x01FA6844 CBZ X21, 0x1FA68B4
	0x01FA6848 LDR W8, [X21 + 0x18]
	0x01FA684C MOV X20, X0
	0x01FA6850 MOV W19, W1
	0x01FA6854 CMP W8, 0x1
	0x01FA6858 B.LT 0x1FA6890
	0x01FA685C MOV W22, W31
	0x01FA6860 CMP W22, W8
	0x01FA6864 B.CS 0x1FA68B0
	0x01FA6868 ADD X8, X21, W22, 0x3, SXTW
	0x01FA686C LDR X0, [X8 + 0x20]
	0x01FA6870 CBZ X0, 0x1FA68B4
	0x01FA6874 AND W1, W19, 0x1
	0x01FA6878 MOV X2, X31

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x2434000
	012 Move W8, [X20+2042]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x2151000
	019 Move X0, [X0+3648]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2042], W8
	023 Move X0, X19
	024 Move X1, X31
	025 Call SimulationBehaviour.Render, X0
	026 Move X0, [X19+64]
	027 Compare X0, 0
	028 JumpIfEqual {188}
	029 Move X1, X31
	030 Call NetworkObject.get_InputAuthority, X0
	031 Move X8, [X19+56]
	032 Compare X8, 0
	033 JumpIfEqual {188}
	034 Move X21, 0x2151000
	035 Move X21, [X21+3648]
	036 Move X20, X0
	037 Move X0, X8
	038 Move X1, X31
	039 Call NetworkRunner.get_LocalPlayer, X0
	040 Move X8, [X21]
	041 Move X21, X0
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X20, [X19+328]
	049 Move X0, X19
	050 Call NetworkGrabbable.get_IsGrabbed, X0
	051 Compare X20, 0
	052 JumpIfEqual {188}
	053 And W8, W0, 1
	054 Move [X20+128], W8
	055 Move X0, X19
	056 Call NetworkGrabbable.get_IsGrabbed, X0
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {64}
	061 Move W8, [X19+336]
	062 Compare W8, 0
	063 JumpIfEqual {75}
	064 Move X20, [X31+64]
	065 Move X19, [X31+72]
	066 Move X30, [X31+48]
	067 Move X21, [X31+56]
	068 Move D9, [X31+32]
	069 Move D8, [X31+40]
	070 Move D11, [X31+16]
	071 Move D10, [X31+24]
	072 Move D13, [X31+80]
	073 Move D12, [X31+88]
	074 Return 
	075 Move X8, [X19]
	076 Move X0, X19
	077 Move X9, [X8+584]
	078 Move X1, [X8+592]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Compare X0, 0
	081 JumpIfEqual {188}
	082 Move X0, [X0+240]
	083 Compare X0, 0
	084 JumpIfEqual {188}
	085 Move X1, X31
	086 Call Component.get_transform, X0
	087 Move X8, [X19+152]
	088 Compare X8, 0
	089 JumpIfEqual {188}
	090 Move X20, X0
	091 Move X0, [X8+136]
	092 Compare X0, 0
	093 JumpIfEqual {188}
	094 Move X1, X31
	095 Call Component.get_transform, X0
	096 Compare X0, 0
	097 JumpIfEqual {188}
	098 Move X1, X31
	099 Move X21, X0
	100 Call Transform.get_rotation, X0
	101 Move X8, [X19+328]
	102 Compare X8, 0
	103 JumpIfEqual {188}
	104 Move V9, V0
	105 Move V10, V1
	106 Move V8, V2
	107 Move V11, V3
	108 Move S0, [X8+60]
	109 Move S1, [X8+64]
	110 Move S2, [X8+68]
	111 Move S3, [X8+72]
	112 Move X0, X31
	113 Call Quaternion.Inverse, X0
	114 Compare X20, 0
	115 JumpIfEqual {188}
	116 Multiply S4, S11, S3
	117 Multiply S5, S9, S0
	118 Multiply S7, S8, S2
	119 Multiply S17, S11, S2
	120 Multiply S18, S8, S3
	121 Multiply S19, S10, S0
	122 Multiply S20, S10, S3
	123 Multiply S21, S10, S2
	124 Multiply S22, S9, S2
	125 Multiply S2, S9, S3
	126 Multiply S3, S8, S0
	127 Multiply S0, S11, S0
	128 Multiply S23, S11, S1
	129 Multiply S6, S10, S1
	130 Multiply S16, S9, S1
	131 Multiply S24, S8, S1
	132 Subtract S1, S4, S5
	133 Add S4, S17, S18
	134 Add S5, S23, S20
	135 Add S0, S0, S2
	136 Subtract S1, S1, S6
	137 Add S2, S16, S4
	138 Add S4, S3, S5
	139 Add S0, S21, S0
	140 Subtract S3, S1, S7
	141 Subtract S2, S2, S19
	142 Subtract S1, S4, S22
	143 Subtract S0, S0, S24
	144 Move X0, X20
	145 Move X1, X31
	146 Call Transform.set_rotation, X0, X1
	147 Move X0, X21
	148 Move X1, X31
	149 Call Transform.get_position, X0
	150 Move X8, [X19+328]
	151 Compare X8, 0
	152 JumpIfEqual {188}
	153 Move V8, V0
	154 Move V9, V1
	155 Move V10, V2
	156 Move S0, [X8+48]
	157 Move S1, [X8+52]
	158 Move V2, [X8+56]
	159 Move X0, X20
	160 Move X1, X31
	161 Call Transform.TransformPoint, X0, X1
	162 Move X0, X20
	163 Move X1, X31
	164 Move V11, V0
	165 Move V12, V1
	166 Move V13, V2
	167 Call Transform.get_position, X0
	168 Subtract S0, S11, S0
	169 Subtract S1, S12, S1
	170 Subtract S2, S13, S2
	171 Subtract S0, S8, S0
	172 Subtract S1, S9, S1
	173 Subtract S2, S10, S2
	174 Move X0, X20
	175 Move X1, X31
	176 Call Transform.set_position, X0, X1
	177 Move X0, X19
	178 Move X20, [X31+64]
	179 Move X19, [X31+72]
	180 Move X30, [X31+48]
	181 Move X21, [X31+56]
	182 Move D9, [X31+32]
	183 Move D8, [X31+40]
	184 Move D11, [X31+16]
	185 Move D10, [X31+24]
	186 Move D13, [X31+80]
	187 Move D12, [X31+88]
	188 Call 0x1C17F20

Method: System.Void OnCollisionStay(UnityEngine.Collision collision)

Disassembly:
	0x01FA6B7C MOV X0, X19
	0x01FA6B80 BL 0x21A3894
	0x01FA6B84 STR X0, [X19 + 0x58]
	0x01FA6B88 LDP X20, X19, [X31 + 0x10]
	0x01FA6B8C LDP X30, X21, [X31], #0x20
	0x01FA6B90 RET
	0x01FA6B94 SUB X31, X31, 0x70
	0x01FA6B98 STR X30, [X31 + 0x40]
	0x01FA6B9C STP X22, X21, [X31 + 0x50]
	0x01FA6BA0 STP X20, X19, [X31 + 0x60]
	0x01FA6BA4 ADRP X20, 0x2433000
	0x01FA6BA8 LDRB W8, [X20 + 0x805]
	0x01FA6BAC MOV X19, X0
	0x01FA6BB0 TBNZ X8, 0x0, 0x1FA6C88
	0x01FA6BB4 ADRP X0, 0x2175000
	0x01FA6BB8 LDR X0, [X0 + 0x350]
	0x01FA6BBC BL 0x1C16CF4
	0x01FA6BC0 ADRP X0, 0x214D000
	0x01FA6BC4 LDR X0, [X0 + 0x598]
	0x01FA6BC8 BL 0x1C16CF4
	0x01FA6BCC ADRP X0, 0x2174000
	0x01FA6BD0 LDR X0, [X0 + 0xFE8]
	0x01FA6BD4 BL 0x1C16CF4
	0x01FA6BD8 ADRP X0, 0x2175000
	0x01FA6BDC LDR X0, [X0 + 0x4B8]
	0x01FA6BE0 BL 0x1C16CF4
	0x01FA6BE4 ADRP X0, 0x2175000
	0x01FA6BE8 LDR X0, [X0 + 0x4C0]
	0x01FA6BEC BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2434000
	006 Move X20, 0x214E000
	007 Move W8, [X21+2043]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x214E000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2043], W8
	019 Move X0, [X20]
	020 Move X20, [X19+64]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Call Object.op_Implicit, X0
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {36}
	032 Move W0, 1
	033 Move X1, X31
	034 Call NetworkBool.op_Implicit, X0
	035 Move [X19+296], W0
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return 

Method: System.Void ApplyPseudoHapticFeedback()

Disassembly:
	0x01FA687C BL 0x3C13034
	0x01FA6880 LDR W8, [X21 + 0x18]
	0x01FA6884 ADD W22, W22, 0x1
	0x01FA6888 CMP W22, W8
	0x01FA688C B.LT 0x1FA6860
	0x01FA6890 LDR X0, [X20 + 0x40]
	0x01FA6894 CBZ X0, 0x1FA68B4
	0x01FA6898 AND W1, W19, 0x1
	0x01FA689C LDP X20, X19, [X31 + 0x20]
	0x01FA68A0 LDP X22, X21, [X31 + 0x10]
	0x01FA68A4 MOV X2, X31
	0x01FA68A8 LDR X30, [X31], #0x30
	0x01FA68AC B 0x3C357B4
	0x01FA68B0 BL 0x1C16F28
	0x01FA68B4 BL 0x1C16F20
	0x01FA68B8 STP X30, X21, [X31 - 0x20]!
	0x01FA68BC STP X20, X19, [X31 + 0x10]
	0x01FA68C0 ADRP X20, 0x2433000
	0x01FA68C4 LDRB W8, [X20 + 0x803]
	0x01FA68C8 MOV X19, X0
	0x01FA68CC TBNZ X8, 0x0, 0x1FA68E4
	0x01FA68D0 ADRP X0, 0x214D000
	0x01FA68D4 LDR X0, [X0 + 0x598]
	0x01FA68D8 BL 0x1C16CF4
	0x01FA68DC MOVZ W8, 0x1
	0x01FA68E0 STRB W8, [X20 + 0x803]
	0x01FA68E4 LDR X0, [X19 + 0x30]
	0x01FA68E8 CBZ X0, 0x1FA6B38
	0x01FA68EC LDRB W8, [X0 + 0x124]
	0x01FA68F0 CBZ W8, 0x1FA6B14
	0x01FA68F4 LDR X8, [X0]
	0x01FA68F8 ADRP X21, 0x214D000
	0x01FA68FC LDR X9, [X8 + 0x248]
	0x01FA6900 LDR X1, [X8 + 0x250]
	0x01FA6904 LDR X21, [X21 + 0x598]
	0x01FA6908 BLR X9
	0x01FA690C LDR X8, [X21]
	0x01FA6910 MOV X20, X0
	0x01FA6914 LDR W9, [X8 + 0xE0]
	0x01FA6918 CBNZ W9, 0x1FA6924
	0x01FA691C MOV X0, X8
	0x01FA6920 BL 0x1C16DFC
	0x01FA6924 MOV X0, X20
	0x01FA6928 MOV X1, X31
	0x01FA692C BL 0x3C38948
	0x01FA6930 TBZ X0, 0x0, 0x1FA6B14
	0x01FA6934 LDR X0, [X19 + 0x30]
	0x01FA6938 CBZ X0, 0x1FA6B38
	0x01FA693C LDR X8, [X0]
	0x01FA6940 LDR X9, [X8 + 0x248]
	0x01FA6944 LDR X1, [X8 + 0x250]
	0x01FA6948 BLR X9
	0x01FA694C CBZ X0, 0x1FA6B38
	0x01FA6950 LDR X0, [X0 + 0xF0]
	0x01FA6954 CBZ X0, 0x1FA6B38
	0x01FA6958 BL 0x1FA06D8
	0x01FA695C LDR X8, [X21]
	0x01FA6960 MOV X20, X0
	0x01FA6964 LDR W9, [X8 + 0xE0]
	0x01FA6968 CBNZ W9, 0x1FA6974
	0x01FA696C MOV X0, X8
	0x01FA6970 BL 0x1C16DFC
	0x01FA6974 MOV X0, X20
	0x01FA6978 MOV X1, X31
	0x01FA697C BL 0x3C38948
	0x01FA6980 TBZ X0, 0x0, 0x1FA6B14
	0x01FA6984 LDRB W8, [X19 + 0x38]
	0x01FA6988 CBNZ W8, 0x1FA69CC
	0x01FA698C LDR X0, [X21]
	0x01FA6990 LDR X20, [X19 + 0x40]
	0x01FA6994 LDR W8, [X0 + 0xE0]
	0x01FA6998 CBNZ W8, 0x1FA69A0
	0x01FA699C BL 0x1C16DFC
	0x01FA69A0 MOV X0, X20
	0x01FA69A4 MOV X1, X31
	0x01FA69A8 BL 0x3C38948
	0x01FA69AC TBNZ X0, 0x0, 0x1FA69B8
	0x01FA69B0 MOV X0, X19
	0x01FA69B4 BL 0x1FA63E0
	0x01FA69B8 MOVZ W1, 0x1
	0x01FA69BC MOV X0, X19
	0x01FA69C0 MOVZ W20, 0x1
	0x01FA69C4 BL 0x1FA6834
	0x01FA69C8 STRB W20, [X19 + 0x38]
	0x01FA69CC LDR X0, [X19 + 0x30]
	0x01FA69D0 CBZ X0, 0x1FA6B38
	0x01FA69D4 LDR X8, [X0]
	0x01FA69D8 LDR X9, [X8 + 0x248]
	0x01FA69DC LDR X1, [X8 + 0x250]
	0x01FA69E0 BLR X9
	0x01FA69E4 CBZ X0, 0x1FA6B38
	0x01FA69E8 LDR X0, [X0 + 0xF0]
	0x01FA69EC CBZ X0, 0x1FA6B38
	0x01FA69F0 BL 0x1FA06D8
	0x01FA69F4 CBZ X0, 0x1FA6B38
	0x01FA69F8 MOV X1, X31
	0x01FA69FC BL 0x3C32E90
	0x01FA6A00 LDR X8, [X19 + 0x40]
	0x01FA6A04 CBZ X8, 0x1FA6B38
	0x01FA6A08 MOV X20, X0
	0x01FA6A0C MOV X0, X8
	0x01FA6A10 MOV X1, X31
	0x01FA6A14 BL 0x3C356F8
	0x01FA6A18 LDR X8, [X19 + 0x30]
	0x01FA6A1C CBZ X8, 0x1FA6B38
	0x01FA6A20 LDR X8, [X8 + 0x148]
	0x01FA6A24 CBZ X8, 0x1FA6B38
	0x01FA6A28 CBZ X20, 0x1FA6B38
	0x01FA6A2C LDP S1, S2, [X8 + 0x34]
	0x01FA6A30 LDR V0, [X8 + 0x30]
	0x01FA6A34 MOV X21, X0
	0x01FA6A38 MOV X0, X20
	0x01FA6A3C MOV X1, X31
	0x01FA6A40 BL 0x3C3DE4C
	0x01FA6A44 CBZ X21, 0x1FA6B38
	0x01FA6A48 MOV X0, X21
	0x01FA6A4C MOV X1, X31
	0x01FA6A50 BL 0x3C3F62C
	0x01FA6A54 LDR X0, [X19 + 0x40]
	0x01FA6A58 CBZ X0, 0x1FA6B38
	0x01FA6A5C MOV X1, X31
	0x01FA6A60 BL 0x3C356F8
	0x01FA6A64 MOV X21, X0
	0x01FA6A68 MOV X0, X20
	0x01FA6A6C MOV X1, X31
	0x01FA6A70 BL 0x3C3DEB4
	0x01FA6A74 LDR X8, [X19 + 0x30]
	0x01FA6A78 CBZ X8, 0x1FA6B38
	0x01FA6A7C LDR X8, [X8 + 0x148]
	0x01FA6A80 CBZ X8, 0x1FA6B38
	0x01FA6A84 CBZ X21, 0x1FA6B38
	0x01FA6A88 LDP S7, S4, [X8 + 0x44]
	0x01FA6A8C LDP S5, S6, [X8 + 0x3C]
	0x01FA6A90 LDP X20, X19, [X31 + 0x10]
	0x01FA6A94 MOV X0, X21
	0x01FA6A98 FMUL S16, S3, S4
	0x01FA6A9C FMUL S17, S0, S5
	0x01FA6AA0 FMUL S18, S1, S6
	0x01FA6AA4 FMUL S19, S2, S7
	0x01FA6AA8 FMUL S20, S0, S6
	0x01FA6AAC FMUL S21, S3, S7
	0x01FA6AB0 FMUL S22, S2, S4
	0x01FA6AB4 FMUL S23, S1, S5
	0x01FA6AB8 FMUL S24, S1, S4
	0x01FA6ABC FMUL S1, S1, S7
	0x01FA6AC0 FMUL S7, S0, S7
	0x01FA6AC4 FMUL S0, S0, S4
	0x01FA6AC8 FMUL S4, S2, S5
	0x01FA6ACC FMUL S5, S3, S5
	0x01FA6AD0 FMUL S3, S3, S6
	0x01FA6AD4 FMUL S6, S2, S6
	0x01FA6AD8 FSUB S2, S16, S17
	0x01FA6ADC FADD S16, S21, S22
	0x01FA6AE0 FADD S3, S3, S24
	0x01FA6AE4 FADD S0, S5, S0
	0x01FA6AE8 FSUB S2, S2, S18
	0x01FA6AEC FADD S5, S20, S16
	0x01FA6AF0 FADD S4, S4, S3
	0x01FA6AF4 FADD S0, S1, S0
	0x01FA6AF8 FSUB S3, S2, S19
	0x01FA6AFC FSUB S2, S5, S23
	0x01FA6B00 FSUB S1, S4, S7
	0x01FA6B04 FSUB S0, S0, S6
	0x01FA6B08 MOV X1, X31
	0x01FA6B0C LDP X30, X21, [X31], #0x20
	0x01FA6B10 B 0x3C3F7AC
	0x01FA6B14 LDRB W8, [X19 + 0x38]
	0x01FA6B18 CBZ W8, 0x1FA6B2C
	0x01FA6B1C MOV X0, X19
	0x01FA6B20 MOV W1, W31
	0x01FA6B24 BL 0x1FA6834
	0x01FA6B28 STRB W31, [X19 + 0x38]
	0x01FA6B2C LDP X20, X19, [X31 + 0x10]
	0x01FA6B30 LDP X30, X21, [X31], #0x20
	0x01FA6B34 RET
	0x01FA6B38 BL 0x1C16F20
	0x01FA6B3C MOV X1, X31
	0x01FA6B40 B 0x3C36C30
	0x01FA6B44 STP X30, X21, [X31 - 0x20]!
	0x01FA6B48 STP X20, X19, [X31 + 0x10]
	0x01FA6B4C ADRP X20, 0x2433000
	0x01FA6B50 ADRP X21, 0x2175000
	0x01FA6B54 LDRB W8, [X20 + 0x804]
	0x01FA6B58 LDR X21, [X21 + 0x4B0]
	0x01FA6B5C MOV X19, X0
	0x01FA6B60 TBNZ X8, 0x0, 0x1FA6B78
	0x01FA6B64 ADRP X0, 0x2175000
	0x01FA6B68 LDR X0, [X0 + 0x4B0]
	0x01FA6B6C BL 0x1C16CF4
	0x01FA6B70 MOVZ W8, 0x1
	0x01FA6B74 STRB W8, [X20 + 0x804]
	0x01FA6B78 LDR X1, [X21]

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x2434000
	012 Move W8, [X20+2044]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x2176000
	019 Move X0, [X0+320]
	020 Call 0x1C17CF4
	021 Move X0, 0x2151000
	022 Move X0, [X0+3648]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+2044], W8
	026 Move X0, [X19+56]
	027 Compare X0, 0
	028 JumpIfEqual {235}
	029 Move X20, 0x2151000
	030 Move X20, [X20+3648]
	031 Move X1, X31
	032 Call NetworkRunner.get_LocalPlayer, X0
	033 Move X8, [X20]
	034 Move W21, [X19+160]
	035 Move X20, X0
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move W8, [X19+272]
	042 Compare W8, 0
	043 JumpIfEqual {47}
	044 Move X0, X19
	045 Call NetworkGrabbable.get_IsGrabbed, X0
	046 And W8, W0, 1
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CSET not yet implemented."
	049 And W31, W8, W9
	050 Move X8, [X19]
	051 Move X0, X19
	052 Move X9, [X8+584]
	053 Move X1, [X8+592]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Compare X0, 0
	056 JumpIfEqual {235}
	057 Move X0, [X0+240]
	058 Compare X0, 0
	059 JumpIfEqual {235}
	060 Call NetworkHand.get_LocalHardwareHand, X0
	061 Compare X0, 0
	062 JumpIfEqual {235}
	063 Move X8, [X0+216]
	064 Compare X8, 0
	065 JumpIfEqual {224}
	066 Move X8, [X19]
	067 Move X0, X19
	068 Move X9, [X8+584]
	069 Move X1, [X8+592]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Compare X0, 0
	072 JumpIfEqual {235}
	073 Move X0, [X0+240]
	074 Compare X0, 0
	075 JumpIfEqual {235}
	076 Move X1, X31
	077 Call Component.get_transform, X0
	078 Compare X0, 0
	079 JumpIfEqual {235}
	080 Move X1, X31
	081 Call Transform.get_position, X0
	082 Move X8, [X19]
	083 Move X0, X19
	084 Move V8, V0
	085 Move V9, V1
	086 Move X9, [X8+584]
	087 Move X1, [X8+592]
	088 Move V10, V2
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Compare X0, 0
	091 JumpIfEqual {235}
	092 Move X0, [X0+240]
	093 Compare X0, 0
	094 JumpIfEqual {235}
	095 Call NetworkHand.get_LocalHardwareHand, X0
	096 Compare X0, 0
	097 JumpIfEqual {235}
	098 Move X1, X31
	099 Call Component.get_transform, X0
	100 Compare X0, 0
	101 JumpIfEqual {235}
	102 Move X1, X31
	103 Call Transform.get_position, X0
	104 Move X20, 0x2433000
	105 Move W8, [X20+1924]
	106 Move V11, V0
	107 Move V12, V1
	108 Move V13, V2
	109 Compare W8, 0
	110 JumpIfNotEqual {116}
	111 Move X0, 0x214E000
	112 Move X0, [X0+1448]
	113 Call 0x1C17CF4
	114 Move W8, 1
	115 Move [X20+1924], W8
	116 Move X8, 0x214E000
	117 Move X8, [X8+1448]
	118 Subtract S11, S8, S11
	119 Subtract S9, S9, S12
	120 Subtract S8, S10, S13
	121 Move X0, [X8]
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {126}
	125 Call 0x1C17DFC
	126 Move W0, [X19+296]
	127 Multiply S0, S11, S11
	128 Multiply S1, S9, S9
	129 Add S0, S0, S1
	130 Multiply S1, S8, S8
	131 Add S0, S1, S0
	132 Move X1, X31
	133 NotImplemented "Instruction FSQRT not yet implemented."
	134 Call NetworkBool.op_Implicit, X0
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {142}
	139 Move V0, [X19+280]
	140 NotImplemented "Instruction FCMP not yet implemented."
	141 NotImplemented "Instruction CSET not yet implemented."
	142 Move W8, W31
	143 Move X9, [X19]
	144 Move [X19+292], W8
	145 Move X0, X19
	146 Move X8, [X9+584]
	147 Move X1, [X9+592]
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Compare X0, 0
	150 JumpIfEqual {235}
	151 Move X0, [X0+240]
	152 Compare X0, 0
	153 JumpIfEqual {235}
	154 Call NetworkHand.get_LocalHardwareHand, X0
	155 Compare X0, 0
	156 JumpIfEqual {235}
	157 Move X20, [X0+216]
	158 Compare X20, 0
	159 JumpIfEqual {235}
	160 Move X10, 0x2176000
	161 Move X8, [X20]
	162 Move W21, [X19+292]
	163 Move X10, [X10+320]
	164 NotImplemented "Instruction LDRH not yet implemented."
	165 Move X1, [X10]
	166 Compare X9, 0
	167 JumpIfEqual {174}
	168 Move X10, [X8+176]
	169 Add X10, X10, 8
	170 NotImplemented "Instruction LDUR not yet implemented."
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Subtract X9, X9, 1
	173 Add X10, X10, 16
	174 Move W2, 4
	175 Move X0, X20
	176 Call 0x1C5D788
	177 Move W9, [X10]
	178 Add W9, W9, 4
	179 Add X8, X8, W9
	180 Add X0, X8, 312
	181 Move X8, [X0]
	182 Move X2, [X0+8]
	183 NotImplemented "Instruction CMP not yet implemented."
	184 NotImplemented "Instruction CSET not yet implemented."
	185 Move X0, X20
	186 NotImplemented "Instruction BLR not yet implemented."
	187 Move W8, [X19+292]
	188 Compare W8, 0
	189 JumpIfEqual {224}
	190 Move X8, [X19]
	191 Move X0, X19
	192 Move X9, [X8+584]
	193 Move X1, [X8+592]
	194 NotImplemented "Instruction BLR not yet implemented."
	195 Compare X0, 0
	196 JumpIfEqual {235}
	197 Move X0, [X0+240]
	198 Compare X0, 0
	199 JumpIfEqual {235}
	200 Call NetworkHand.get_LocalHardwareHand, X0
	201 Compare X0, 0
	202 JumpIfEqual {235}
	203 Move V0, [X19+284]
	204 Move V1, [X19+288]
	205 Move X20, [X31+64]
	206 Move X19, [X31+72]
	207 Move X30, [X31+48]
	208 Move X21, [X31+56]
	209 NotImplemented "Instruction FDIV not yet implemented."
	210 Move D9, [X31+32]
	211 Move D8, [X31+40]
	212 Move D11, [X31+16]
	213 Move D10, [X31+24]
	214 Move S2, 1
	215 NotImplemented "Instruction FMIN not yet implemented."
	216 NotImplemented "Instruction FCMP not yet implemented."
	217 Move S0, W31
	218 NotImplemented "Instruction FCSEL not yet implemented."
	219 Move W1, W31
	220 Move D13, [X31+80]
	221 Move D12, [X31+88]
	222 Call HardwareHand.SendHapticImpulse, X0, V0, V1, X1
	223 Return 
	224 Move X20, [X31+64]
	225 Move X19, [X31+72]
	226 Move X30, [X31+48]
	227 Move X21, [X31+56]
	228 Move D9, [X31+32]
	229 Move D8, [X31+40]
	230 Move D11, [X31+16]
	231 Move D10, [X31+24]
	232 Move D13, [X31+80]
	233 Move D12, [X31+88]
	234 Return 
	235 Call 0x1C17F20

Method: System.Void InputAuthorityLost()

Disassembly:
	0x01FA6BF0 ADRP X0, 0x2175000
	0x01FA6BF4 LDR X0, [X0 + 0x4C8]
	0x01FA6BF8 BL 0x1C16CF4
	0x01FA6BFC ADRP X0, 0x2175000
	0x01FA6C00 LDR X0, [X0 + 0x4D0]
	0x01FA6C04 BL 0x1C16CF4
	0x01FA6C08 ADRP X0, 0x2175000
	0x01FA6C0C LDR X0, [X0 + 0x4D8]
	0x01FA6C10 BL 0x1C16CF4
	0x01FA6C14 ADRP X0, 0x2175000

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 Move X0, [X0+56]
	004 Compare X0, 0
	005 JumpIfEqual {12}
	006 Move X1, [X8+64]
	007 Move W2, 1
	008 Move X3, X31
	009 Move X30, [X31+16]
	010 Call NetworkRunner.SetIsSimulated, X0, X1, X2
	011 Return 
	012 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01FA6C18 LDR X0, [X0 + 0x4E0]
	0x01FA6C1C BL 0x1C16CF4
	0x01FA6C20 ADRP X0, 0x2175000
	0x01FA6C24 LDR X0, [X0 + 0x4E8]
	0x01FA6C28 BL 0x1C16CF4
	0x01FA6C2C ADRP X0, 0x2175000
	0x01FA6C30 LDR X0, [X0 + 0x4F0]
	0x01FA6C34 BL 0x1C16CF4
	0x01FA6C38 ADRP X0, 0x2175000
	0x01FA6C3C LDR X0, [X0 + 0x4F8]
	0x01FA6C40 BL 0x1C16CF4
	0x01FA6C44 ADRP X0, 0x2175000
	0x01FA6C48 LDR X0, [X0 + 0x500]
	0x01FA6C4C BL 0x1C16CF4
	0x01FA6C50 ADRP X0, 0x2175000
	0x01FA6C54 LDR X0, [X0 + 0x508]
	0x01FA6C58 BL 0x1C16CF4
	0x01FA6C5C ADRP X0, 0x2175000
	0x01FA6C60 LDR X0, [X0 + 0x510]
	0x01FA6C64 BL 0x1C16CF4
	0x01FA6C68 ADRP X0, 0x2175000
	0x01FA6C6C LDR X0, [X0 + 0x518]
	0x01FA6C70 BL 0x1C16CF4
	0x01FA6C74 ADRP X0, 0x2175000
	0x01FA6C78 LDR X0, [X0 + 0x520]
	0x01FA6C7C BL 0x1C16CF4
	0x01FA6C80 MOVZ W8, 0x1
	0x01FA6C84 STRB W8, [X20 + 0x805]
	0x01FA6C88 ADRP X22, 0x214D000
	0x01FA6C8C LDR X22, [X22 + 0x598]
	0x01FA6C90 ADD X20, X19, 0x20
	0x01FA6C94 MOV X0, X20
	0x01FA6C98 MOV X1, X31
	0x01FA6C9C STP X31, X31, [X31 + 0x20]
	0x01FA6CA0 STR X31, [X31 + 0x30]
	0x01FA6CA4 BL 0x3745120
	0x01FA6CA8 CBZ X0, 0x1FA6E48
	0x01FA6CAC MOV X0, X20
	0x01FA6CB0 MOV X1, X31
	0x01FA6CB4 BL 0x3745260
	0x01FA6CB8 LDR X8, [X22]
	0x01FA6CBC MOV X21, X0
	0x01FA6CC0 LDR W9, [X8 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2434000
	007 Move X21, 0x2176000
	008 Move X20, 0x2176000
	009 Move W8, [X22+2045]
	010 Move X21, [X21+1168]
	011 Move X20, [X20+1176]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2176000
	018 Move X0, [X0+1176]
	019 Call 0x1C17CF4
	020 Move X0, 0x2176000
	021 Move X0, [X0+1168]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2045], W8
	025 Move X10, -21725184
	026 Move V0, [X10+36]
	027 Move W8, 1
	028 Add X9, X19, 273
	029 Move [X19+272], W8
	030 Add X8, X19, 276
	031 Move W0, W31
	032 Move X1, X31
	033 NotImplemented "Instruction STRH not yet implemented."
	034 Move [X9+2], W31
	035 Move [X8], V0
	036 Call NetworkBool.op_Implicit, X0
	037 Move [X19+296], W0
	038 Move X0, [X21]
	039 Call 0x1C17F10
	040 Move X1, [X20]
	041 Move X20, X0
	042 Call Dictionary`2<ValueTuple`2<PlayerRef, Int32Enum>, Object>..ctor, X0
	043 Move [X19+448], X20
	044 Move X0, X19
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Call NetworkGrabbable..ctor, X0
	051 Return 

