Type: Fusion.XR.Host.Desktop.RigSelection

Method: System.Void Awake()

Disassembly:
	0x01FA9BC0 CBNZ X19, 0x1FA9BCC
	0x01FA9BC4 MOV X0, X20
	0x01FA9BC8 BL 0x1D2C690
	0x01FA9BCC MOV X0, X19
	0x01FA9BD0 BL 0x1C16F18
	0x01FA9BD4 BL 0x1990590
	0x01FA9BD8 SUB X31, X31, 0xB0
	0x01FA9BDC STR X30, [X31 + 0x70]
	0x01FA9BE0 STP X24, X23, [X31 + 0x80]
	0x01FA9BE4 STP X22, X21, [X31 + 0x90]
	0x01FA9BE8 STP X20, X19, [X31 + 0xA0]
	0x01FA9BEC LDR X8, [X3 + 0x38]
	0x01FA9BF0 MOV X20, X3
	0x01FA9BF4 MOV X22, X2
	0x01FA9BF8 MOV X19, X1
	0x01FA9BFC MOV X21, X0
	0x01FA9C00 CBNZ X8, 0x1FA9C0C
	0x01FA9C04 MOV X0, X20
	0x01FA9C08 BL 0x1C5C6E0
	0x01FA9C0C STR X31, [X31 + 0x78]
	0x01FA9C10 MOV X0, X31
	0x01FA9C14 BL 0x33F6C70
	0x01FA9C18 TBZ X0, 0x0, 0x1FA9C74
	0x01FA9C1C LDR X0, [X20 + 0x20]
	0x01FA9C20 LDRB W8, [X0 + 0x135]
	0x01FA9C24 TBNZ X8, 0x0, 0x1FA9C2C
	0x01FA9C28 BL 0x1C5C684
	0x01FA9C2C LDR X8, [X0 + 0xC0]
	0x01FA9C30 LDR X0, [X8 + 0x10]
	0x01FA9C34 LDRB W8, [X0 + 0x135]
	0x01FA9C38 TBNZ X8, 0x0, 0x1FA9C40
	0x01FA9C3C BL 0x1C5C684
	0x01FA9C40 LDR W8, [X0 + 0xE0]
	0x01FA9C44 CBNZ W8, 0x1FA9C4C
	0x01FA9C48 BL 0x1C16DFC
	0x01FA9C4C LDR X0, [X20 + 0x20]
	0x01FA9C50 LDRB W8, [X0 + 0x135]
	0x01FA9C54 TBNZ X8, 0x0, 0x1FA9C5C
	0x01FA9C58 BL 0x1C5C684
	0x01FA9C5C LDR X8, [X0 + 0xC0]
	0x01FA9C60 LDR X1, [X8 + 0x8]
	0x01FA9C64 MOV X0, X21
	0x01FA9C68 BL 0x24DD3F0
	0x01FA9C6C MOV X1, X0
	0x01FA9C70 B 0x1FA9C78
	0x01FA9C74 MOV X1, X31
	0x01FA9C78 ADD X2, X31, 0x78
	0x01FA9C7C MOV X0, X21
	0x01FA9C80 MOV X3, X31
	0x01FA9C84 BL 0x32C4B94
	0x01FA9C88 LDR X8, [X21]
	0x01FA9C8C MOV X23, X0
	0x01FA9C90 CBNZ X8, 0x1FA9D20
	0x01FA9C94 LDR X0, [X20 + 0x20]
	0x01FA9C98 LDRB W8, [X0 + 0x135]
	0x01FA9C9C TBNZ X8, 0x0, 0x1FA9CA4
	0x01FA9CA0 BL 0x1C5C684
	0x01FA9CA4 LDR X8, [X0 + 0xC0]
	0x01FA9CA8 LDR X0, [X8 + 0x10]
	0x01FA9CAC LDRB W8, [X0 + 0x135]
	0x01FA9CB0 TBNZ X8, 0x0, 0x1FA9CB8
	0x01FA9CB4 BL 0x1C5C684
	0x01FA9CB8 LDR W8, [X0 + 0xE0]
	0x01FA9CBC CBNZ W8, 0x1FA9CC4
	0x01FA9CC0 BL 0x1C16DFC
	0x01FA9CC4 LDR X0, [X20 + 0x20]
	0x01FA9CC8 LDRB W8, [X0 + 0x135]
	0x01FA9CCC TBNZ X8, 0x0, 0x1FA9CD4
	0x01FA9CD0 BL 0x1C5C684
	0x01FA9CD4 LDR X8, [X0 + 0xC0]
	0x01FA9CD8 LDR X1, [X8 + 0x8]
	0x01FA9CDC MOV X0, X21
	0x01FA9CE0 BL 0x24DD3F0
	0x01FA9CE4 MOV X24, X0
	0x01FA9CE8 ADD X0, X31, 0x0
	0x01FA9CEC MOVZ W2, 0x70
	0x01FA9CF0 MOV X1, X22
	0x01FA9CF4 BL 0x3EB1AC0
	0x01FA9CF8 LDR X8, [X20 + 0x38]
	0x01FA9CFC LDR X0, [X8 + 0x8]
	0x01FA9D00 ADD X1, X31, 0x0
	0x01FA9D04 BL 0x1C16E04
	0x01FA9D08 MOV X1, X0
	0x01FA9D0C LDR X2, [X31 + 0x78]
	0x01FA9D10 MOV X0, X21
	0x01FA9D14 MOV X3, X24
	0x01FA9D18 MOV X4, X31
	0x01FA9D1C BL 0x32C4EF8
	0x01FA9D20 LDR X8, [X20 + 0x38]
	0x01FA9D24 LDR X2, [X8 + 0x20]
	0x01FA9D28 MOV X0, X19
	0x01FA9D2C MOV X1, X23
	0x01FA9D30 BL 0x2998B98
	0x01FA9D34 LDP X20, X19, [X31 + 0xA0]
	0x01FA9D38 LDP X22, X21, [X31 + 0x90]
	0x01FA9D3C LDP X24, X23, [X31 + 0x80]
	0x01FA9D40 LDR X30, [X31 + 0x70]
	0x01FA9D44 ADD X31, X31, 0xB0
	0x01FA9D48 RET
	0x01FA9D4C B 0x1FA9D68
	0x01FA9D50 B 0x1FA9D68
	0x01FA9D54 B 0x1FA9D68
	0x01FA9D58 B 0x1FA9D68
	0x01FA9D5C B 0x1FA9D68
	0x01FA9D60 B 0x1FA9D68
	0x01FA9D64 B 0x1FA9D68
	0x01FA9D68 MOV X19, X0
	0x01FA9D6C CMP W1, 0x1
	0x01FA9D70 B.NE 0x1FA9DE0
	0x01FA9D74 MOV X0, X19
	0x01FA9D78 BL 0x3EB1AD0
	0x01FA9D7C MOV X19, X0
	0x01FA9D80 ADRP X0, 0x214A000
	0x01FA9D84 LDR X0, [X0 + 0x7D0]
	0x01FA9D88 BL 0x1C16D08
	0x01FA9D8C LDR X8, [X19]
	0x01FA9D90 LDR X1, [X8]
	0x01FA9D94 BL 0x1C17270
	0x01FA9D98 TBZ X0, 0x0, 0x1FA9DB8
	0x01FA9D9C LDR X19, [X19]
	0x01FA9DA0 BL 0x3EB1AE0
	0x01FA9DA4 MOV X0, X19
	0x01FA9DA8 MOV X1, X31
	0x01FA9DAC MOV X2, X31
	0x01FA9DB0 BL 0x32C4498
	0x01FA9DB4 B 0x1FA9D34
	0x01FA9DB8 MOVZ W0, 0x8
	0x01FA9DBC BL 0x3EB1AF0
	0x01FA9DC0 LDR X8, [X19]
	0x01FA9DC4 STR X8, [X0]
	0x01FA9DC8 ADRP X1, 0x1F0B000
	0x01FA9DCC ADD X1, X1, 0xE58
	0x01FA9DD0 MOV X2, X31
	0x01FA9DD4 BL 0x3EB1B00
	0x01FA9DD8 MOV X19, X0
	0x01FA9DDC BL 0x3EB1AE0
	0x01FA9DE0 MOV X0, X19
	0x01FA9DE4 BL 0x1D2C690
	0x01FA9DE8 BL 0x1990590
	0x01FA9DEC SUB X31, X31, 0xB0
	0x01FA9DF0 STR X30, [X31 + 0x70]
	0x01FA9DF4 STP X24, X23, [X31 + 0x80]
	0x01FA9DF8 STP X22, X21, [X31 + 0x90]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2431000
	007 Move X22, 0x2173000
	008 Move X20, 0x214B000
	009 Move W8, [X21+2066]
	010 Move X22, [X22+72]
	011 Move X20, [X20+1432]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {43}
	017 Move X0, 0x2173000
	018 Move X0, [X0+72]
	019 Call 0x1C17CF4
	020 Move X0, 0x214B000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move X0, 0x214B000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move X0, 0x2173000
	027 Move X0, [X0+1376]
	028 Call 0x1C17CF4
	029 Move X0, 0x2173000
	030 Move X0, [X0+1384]
	031 Call 0x1C17CF4
	032 Move X0, 0x2173000
	033 Move X0, [X0+1392]
	034 Call 0x1C17CF4
	035 Move X0, 0x214B000
	036 Move X0, [X0+2440]
	037 Call 0x1C17CF4
	038 Move X0, 0x2173000
	039 Move X0, [X0+1400]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X21+2066], W8
	043 Move X1, [X22]
	044 Move X0, X19
	045 Call 0x21A4AF8, X0
	046 Move [X19+64], X0
	047 Move X0, [X20]
	048 Move X20, [X19+40]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X20
	054 Move X1, X31
	055 Call Object.op_Implicit, X0
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {70}
	060 Move X0, [X19+40]
	061 Compare X0, 0
	062 JumpIfEqual {172}
	063 Move X1, X31
	064 Call GameObject.get_gameObject, X0
	065 Compare X0, 0
	066 JumpIfEqual {172}
	067 Move W1, W31
	068 Move X2, X31
	069 Call GameObject.SetActive, X0, X1
	070 Move X8, 0x214B000
	071 Move X8, [X8+2600]
	072 Move X20, 0x2173000
	073 Move X0, [X8]
	074 Move W8, [X0+224]
	075 Move X20, [X20+1392]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X0, [X20]
	080 Move X1, X31
	081 Call Debug.LogError, X0
	082 Move X0, [X19+48]
	083 Compare X0, 0
	084 JumpIfEqual {172}
	085 Move X1, X31
	086 Call Component.get_gameObject, X0
	087 Compare X0, 0
	088 JumpIfEqual {172}
	089 Move W1, W31
	090 Move X2, X31
	091 Call GameObject.SetActive, X0, X1
	092 Move X0, [X19+56]
	093 Compare X0, 0
	094 JumpIfEqual {172}
	095 Move X1, X31
	096 Call Component.get_gameObject, X0
	097 Compare X0, 0
	098 JumpIfEqual {172}
	099 Move W1, W31
	100 Move X2, X31
	101 Call GameObject.SetActive, X0, X1
	102 Move W8, [X19+72]
	103 Compare W8, 0
	104 JumpIfEqual {111}
	105 Move X0, X19
	106 Move X20, [X31+32]
	107 Move X19, [X31+40]
	108 Move X22, [X31+16]
	109 Move X21, [X31+24]
	110 Move X30, [X31+48]
	111 Move W8, [X19+76]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X8, [X19]
	115 Move X0, X19
	116 Move X9, [X8+376]
	117 Move X1, [X8+384]
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move W8, [X19+76]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X8, 0x2173000
	122 Move X8, [X8+1384]
	123 Move X1, X31
	124 Move X0, [X8]
	125 Call PlayerPrefs.GetString, X0
	126 Move X8, 0x214B000
	127 Move X8, [X8+2440]
	128 Move X2, X31
	129 Move X20, X0
	130 Move X1, [X8]
	131 Call String.op_Inequality, X0, X1
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfNotEqual {166}
	136 Move X8, 0x2173000
	137 Move X8, [X8+1376]
	138 Move X0, X20
	139 Move X2, X31
	140 Move X1, [X8]
	141 Call String.op_Equality, X0, X1
	142 Move TEMP, X0
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfNotEqual {148}
	146 Move X0, X19
	147 Call RigSelection.EnableVRRig, X0
	148 Move X8, 0x2173000
	149 Move X8, [X8+1400]
	150 Move X0, X20
	151 Move X2, X31
	152 Move X1, [X8]
	153 Call String.op_Equality, X0, X1
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfNotEqual {166}
	158 Move X0, X19
	159 Move X20, [X31+32]
	160 Move X19, [X31+40]
	161 Move X22, [X31+16]
	162 Move X21, [X31+24]
	163 Move X30, [X31+48]
	164 Call RigSelection.EnableDesktopRig, X0
	165 Return 
	166 Move X20, [X31+32]
	167 Move X19, [X31+40]
	168 Move X22, [X31+16]
	169 Move X21, [X31+24]
	170 Move X30, [X31+48]
	171 Return 
	172 Call 0x1C17F20

Method: System.Void DisableDebugSelectedByUI()

Disassembly:
	0x01FA9EA4 CBNZ X8, 0x1FA9F34
	0x01FA9EA8 LDR X0, [X20 + 0x20]
	0x01FA9EAC LDRB W8, [X0 + 0x135]
	0x01FA9EB0 TBNZ X8, 0x0, 0x1FA9EB8
	0x01FA9EB4 BL 0x1C5C684
	0x01FA9EB8 LDR X8, [X0 + 0xC0]

ISIL:
	001 Move W8, [X0+76]
	002 Compare W8, 0
	003 JumpIfEqual {5}
	004 Return 
	005 Move W8, 1
	006 Move [X0+76], W8
	007 Return 

Method: System.Void OnGUI()

Disassembly:
	0x01FA9EBC LDR X0, [X8 + 0x10]
	0x01FA9EC0 LDRB W8, [X0 + 0x135]
	0x01FA9EC4 TBNZ X8, 0x0, 0x1FA9ECC
	0x01FA9EC8 BL 0x1C5C684
	0x01FA9ECC LDR W8, [X0 + 0xE0]
	0x01FA9ED0 CBNZ W8, 0x1FA9ED8
	0x01FA9ED4 BL 0x1C16DFC
	0x01FA9ED8 LDR X0, [X20 + 0x20]
	0x01FA9EDC LDRB W8, [X0 + 0x135]
	0x01FA9EE0 TBNZ X8, 0x0, 0x1FA9EE8
	0x01FA9EE4 BL 0x1C5C684
	0x01FA9EE8 LDR X8, [X0 + 0xC0]
	0x01FA9EEC LDR X1, [X8 + 0x8]
	0x01FA9EF0 MOV X0, X21
	0x01FA9EF4 BL 0x24DD3F0
	0x01FA9EF8 MOV X24, X0
	0x01FA9EFC ADD X0, X31, 0x0
	0x01FA9F00 MOVZ W2, 0x70
	0x01FA9F04 MOV X1, X22
	0x01FA9F08 BL 0x3EB1AC0
	0x01FA9F0C LDR X8, [X20 + 0x38]
	0x01FA9F10 LDR X0, [X8 + 0x8]
	0x01FA9F14 ADD X1, X31, 0x0
	0x01FA9F18 BL 0x1C16E04
	0x01FA9F1C MOV X1, X0
	0x01FA9F20 LDR X2, [X31 + 0x78]
	0x01FA9F24 MOV X0, X21
	0x01FA9F28 MOV X3, X24
	0x01FA9F2C MOV X4, X31
	0x01FA9F30 BL 0x32C4EF8
	0x01FA9F34 LDR X8, [X20 + 0x38]
	0x01FA9F38 LDR X2, [X8 + 0x20]
	0x01FA9F3C MOV X0, X19
	0x01FA9F40 MOV X1, X23
	0x01FA9F44 BL 0x32C2E04
	0x01FA9F48 LDP X20, X19, [X31 + 0xA0]
	0x01FA9F4C LDP X22, X21, [X31 + 0x90]
	0x01FA9F50 LDP X24, X23, [X31 + 0x80]
	0x01FA9F54 LDR X30, [X31 + 0x70]
	0x01FA9F58 ADD X31, X31, 0xB0
	0x01FA9F5C RET
	0x01FA9F60 B 0x1FA9F7C
	0x01FA9F64 B 0x1FA9F7C
	0x01FA9F68 B 0x1FA9F7C
	0x01FA9F6C B 0x1FA9F7C
	0x01FA9F70 B 0x1FA9F7C
	0x01FA9F74 B 0x1FA9F7C
	0x01FA9F78 B 0x1FA9F7C
	0x01FA9F7C MOV X19, X0
	0x01FA9F80 CMP W1, 0x1
	0x01FA9F84 B.NE 0x1FA9FF4
	0x01FA9F88 MOV X0, X19
	0x01FA9F8C BL 0x3EB1AD0
	0x01FA9F90 MOV X19, X0
	0x01FA9F94 ADRP X0, 0x214A000
	0x01FA9F98 LDR X0, [X0 + 0x7D0]
	0x01FA9F9C BL 0x1C16D08
	0x01FA9FA0 LDR X8, [X19]
	0x01FA9FA4 LDR X1, [X8]
	0x01FA9FA8 BL 0x1C17270
	0x01FA9FAC TBZ X0, 0x0, 0x1FA9FCC
	0x01FA9FB0 LDR X19, [X19]
	0x01FA9FB4 BL 0x3EB1AE0
	0x01FA9FB8 MOV X0, X19
	0x01FA9FBC MOV X1, X31
	0x01FA9FC0 MOV X2, X31
	0x01FA9FC4 BL 0x32C4498
	0x01FA9FC8 B 0x1FA9F48
	0x01FA9FCC MOVZ W0, 0x8
	0x01FA9FD0 BL 0x3EB1AF0
	0x01FA9FD4 LDR X8, [X19]
	0x01FA9FD8 STR X8, [X0]
	0x01FA9FDC ADRP X1, 0x1F0B000
	0x01FA9FE0 ADD X1, X1, 0xE58
	0x01FA9FE4 MOV X2, X31
	0x01FA9FE8 BL 0x3EB1B00
	0x01FA9FEC MOV X19, X0
	0x01FA9FF0 BL 0x3EB1AE0
	0x01FA9FF4 MOV X0, X19
	0x01FA9FF8 BL 0x1D2C690
	0x01FA9FFC BL 0x1990590
	0x01FAA000 SUB X31, X31, 0x40
	0x01FAA004 STR X30, [X31 + 0x20]
	0x01FAA008 STP X20, X19, [X31 + 0x30]
	0x01FAA00C LDR X8, [X2 + 0x38]
	0x01FAA010 MOV X20, X2
	0x01FAA014 MOV X19, X1
	0x01FAA018 CBNZ X8, 0x1FAA038
	0x01FAA01C ADRP X0, 0x2171000
	0x01FAA020 LDR X0, [X0 + 0x580]
	0x01FAA024 BL 0x1C16CF4
	0x01FAA028 LDR X8, [X20 + 0x38]
	0x01FAA02C CBNZ X8, 0x1FAA038
	0x01FAA030 MOV X0, X20
	0x01FAA034 BL 0x1C5C6E0
	0x01FAA038 MOVI V0.2D, 0x0
	0x01FAA03C MOV X0, X31
	0x01FAA040 STP V0, V0, [X31]
	0x01FAA044 BL 0x32C5C58
	0x01FAA048 ADRP X8, 0x2171000
	0x01FAA04C LDR X8, [X8 + 0x580]
	0x01FAA050 LDR X0, [X8]
	0x01FAA054 LDR W8, [X0 + 0xE0]
	0x01FAA058 CBNZ W8, 0x1FAA060
	0x01FAA05C BL 0x1C16DFC
	0x01FAA060 ADD X0, X31, 0x0
	0x01FAA064 MOV X1, X31
	0x01FAA068 BL 0x33E4F00
	0x01FAA06C LDR X8, [X20 + 0x38]
	0x01FAA070 LDR X1, [X8 + 0x10]
	0x01FAA074 MOV X0, X19
	0x01FAA078 BL 0x36A198C
	0x01FAA07C ADD X0, X31, 0x0
	0x01FAA080 MOV X1, X31
	0x01FAA084 BL 0x33E42EC
	0x01FAA088 LDP X20, X19, [X31 + 0x30]
	0x01FAA08C LDR X30, [X31 + 0x20]
	0x01FAA090 ADD X31, X31, 0x40
	0x01FAA094 RET
	0x01FAA098 B 0x1FAA09C
	0x01FAA09C MOV X20, X0
	0x01FAA0A0 CMP W1, 0x1
	0x01FAA0A4 B.NE 0x1FAA0D0
	0x01FAA0A8 MOV X0, X20
	0x01FAA0AC BL 0x3EB1AD0
	0x01FAA0B0 LDR X19, [X0]
	0x01FAA0B4 BL 0x3EB1AE0
	0x01FAA0B8 ADD X0, X31, 0x0
	0x01FAA0BC MOV X1, X31
	0x01FAA0C0 BL 0x33E42EC
	0x01FAA0C4 CBZ X19, 0x1FAA088
	0x01FAA0C8 MOV X0, X19
	0x01FAA0CC BL 0x1C16F18
	0x01FAA0D0 MOV X19, X31
	0x01FAA0D4 B 0x1FAA0DC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2431000
	007 Move X21, 0x2172000
	008 Move W8, [X20+2067]
	009 Move X21, [X21+1216]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x2172000
	016 Move X0, [X0+2168]
	017 Call 0x1C17CF4
	018 Move X0, 0x2172000
	019 Move X0, [X0+1216]
	020 Call 0x1C17CF4
	021 Move X0, 0x2173000
	022 Move X0, [X0+1376]
	023 Call 0x1C17CF4
	024 Move X0, 0x2173000
	025 Move X0, [X0+1400]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+2067], W8
	029 Move X0, X31
	030 Call Screen.get_width
	031 Move W20, W0
	032 Move X0, X31
	033 Call Screen.get_height
	034 Subtract W8, W20, 10
	035 Subtract W9, W0, 10
	036 NotImplemented "Instruction SCVTF not yet implemented."
	037 NotImplemented "Instruction SCVTF not yet implemented."
	038 Move S0, 5
	039 Move S1, 5
	040 Move X0, X31
	041 Call GUILayout.BeginArea, X0
	042 Move X0, [X21]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X31
	048 Call GUI.get_skin
	049 Compare X0, 0
	050 JumpIfEqual {175}
	051 Move X22, 0x2172000
	052 Move X22, [X22+2168]
	053 Move X1, X31
	054 Call GUISkin.get_window, X0
	055 Move X21, [X22]
	056 Move X20, X0
	057 Move X8, [X21+56]
	058 Compare X8, 0
	059 JumpIfNotEqual {63}
	060 Move X0, X21
	061 Call 0x1C5D6E0
	062 Move X8, [X21+56]
	063 Move X0, [X8+16]
	064 Move W8, [X0+309]
	065 Move TEMP, X8
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {70}
	069 Call 0x1C5D684
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X8, [X21+56]
	075 Move X0, [X8+16]
	076 Move W8, [X0+309]
	077 Move TEMP, X8
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {82}
	081 Call 0x1C5D684
	082 Move X8, [X0+184]
	083 Move X0, X20
	084 Move X2, X31
	085 Move X1, [X8]
	086 Call GUILayout.BeginVertical, X0, X1
	087 Move X20, [X22]
	088 Move X8, [X20+56]
	089 Compare X8, 0
	090 JumpIfNotEqual {94}
	091 Move X0, X20
	092 Call 0x1C5D6E0
	093 Move X8, [X20+56]
	094 Move X0, [X8+16]
	095 Move W8, [X0+309]
	096 Move TEMP, X8
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {101}
	100 Call 0x1C5D684
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 Move X8, [X20+56]
	106 Move X20, 0x2172000
	107 Move X0, [X8+16]
	108 Move W8, [X0+309]
	109 Move X20, [X20+1376]
	110 Move TEMP, X8
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfEqual {115}
	114 Call 0x1C5D684
	115 Move X8, [X0+184]
	116 Move X0, [X20]
	117 Move X2, X31
	118 Move X1, [X8]
	119 Call GUILayout.Button, X0, X1
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {126}
	124 Move X0, X19
	125 Call RigSelection.EnableVRRig, X0
	126 Move X20, [X22]
	127 Move X8, [X20+56]
	128 Compare X8, 0
	129 JumpIfNotEqual {133}
	130 Move X0, X20
	131 Call 0x1C5D6E0
	132 Move X8, [X20+56]
	133 Move X0, [X8+16]
	134 Move W8, [X0+309]
	135 Move TEMP, X8
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfEqual {140}
	139 Call 0x1C5D684
	140 Move W8, [X0+224]
	141 Compare W8, 0
	142 JumpIfNotEqual {144}
	143 Call 0x1C17DFC
	144 Move X8, [X20+56]
	145 Move X20, 0x2172000
	146 Move X0, [X8+16]
	147 Move W8, [X0+309]
	148 Move X20, [X20+1400]
	149 Move TEMP, X8
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfEqual {154}
	153 Call 0x1C5D684
	154 Move X8, [X0+184]
	155 Move X0, [X20]
	156 Move X2, X31
	157 Move X1, [X8]
	158 Call GUILayout.Button, X0, X1
	159 Move TEMP, X0
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfNotEqual {165}
	163 Move X0, X19
	164 Call RigSelection.EnableDesktopRig, X0
	165 Move X0, X31
	166 Call GUILayout.EndVertical
	167 Move X20, [X31+32]
	168 Move X19, [X31+40]
	169 Move X22, [X31+16]
	170 Move X21, [X31+24]
	171 Move X0, X31
	172 Move X30, [X31+48]
	173 Call GUILayout.EndArea
	174 Return 
	175 Call 0x1C17F20

Method: System.Void EnableVRRig()

Disassembly:
	0x01FA9DFC STP X20, X19, [X31 + 0xA0]
	0x01FA9E00 LDR X8, [X3 + 0x38]
	0x01FA9E04 MOV X20, X3
	0x01FA9E08 MOV X22, X2
	0x01FA9E0C MOV X19, X1
	0x01FA9E10 MOV X21, X0
	0x01FA9E14 CBNZ X8, 0x1FA9E20
	0x01FA9E18 MOV X0, X20
	0x01FA9E1C BL 0x1C5C6E0
	0x01FA9E20 STR X31, [X31 + 0x78]
	0x01FA9E24 MOV X0, X31
	0x01FA9E28 BL 0x33F6C70
	0x01FA9E2C TBZ X0, 0x0, 0x1FA9E88
	0x01FA9E30 LDR X0, [X20 + 0x20]
	0x01FA9E34 LDRB W8, [X0 + 0x135]
	0x01FA9E38 TBNZ X8, 0x0, 0x1FA9E40
	0x01FA9E3C BL 0x1C5C684
	0x01FA9E40 LDR X8, [X0 + 0xC0]
	0x01FA9E44 LDR X0, [X8 + 0x10]
	0x01FA9E48 LDRB W8, [X0 + 0x135]
	0x01FA9E4C TBNZ X8, 0x0, 0x1FA9E54

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Component.get_gameObject, X0
	006 Compare X0, 0
	007 JumpIfEqual {27}
	008 Move W1, W31
	009 Move X2, X31
	010 Call GameObject.SetActive, X0, X1
	011 Move X0, [X19+48]
	012 Compare X0, 0
	013 JumpIfEqual {27}
	014 Move X1, X31
	015 Call Component.get_gameObject, X0
	016 Compare X0, 0
	017 JumpIfEqual {27}
	018 Move W1, 1
	019 Move X2, X31
	020 Call GameObject.SetActive, X0, X1
	021 Call RigSelection.SetVRPreference, X0
	022 Move X0, X19
	023 Move X30, [X31+16]
	024 Move X19, [X31+24]
	025 Call RigSelection.OnRigSelected, X0
	026 Return 
	027 Call 0x1C17F20

Method: System.Void EnableDesktopRig()

Disassembly:
	0x01FA9E50 BL 0x1C5C684
	0x01FA9E54 LDR W8, [X0 + 0xE0]
	0x01FA9E58 CBNZ W8, 0x1FA9E60
	0x01FA9E5C BL 0x1C16DFC
	0x01FA9E60 LDR X0, [X20 + 0x20]
	0x01FA9E64 LDRB W8, [X0 + 0x135]
	0x01FA9E68 TBNZ X8, 0x0, 0x1FA9E70
	0x01FA9E6C BL 0x1C5C684
	0x01FA9E70 LDR X8, [X0 + 0xC0]
	0x01FA9E74 LDR X1, [X8 + 0x8]
	0x01FA9E78 MOV X0, X21
	0x01FA9E7C BL 0x24DD3F0
	0x01FA9E80 MOV X1, X0
	0x01FA9E84 B 0x1FA9E8C
	0x01FA9E88 MOV X1, X31
	0x01FA9E8C ADD X2, X31, 0x78
	0x01FA9E90 MOV X0, X21
	0x01FA9E94 MOV X3, X31
	0x01FA9E98 BL 0x32C4B94
	0x01FA9E9C LDR X8, [X21]
	0x01FA9EA0 MOV X23, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Component.get_gameObject, X0
	006 Compare X0, 0
	007 JumpIfEqual {27}
	008 Move W1, W31
	009 Move X2, X31
	010 Call GameObject.SetActive, X0, X1
	011 Move X0, [X19+56]
	012 Compare X0, 0
	013 JumpIfEqual {27}
	014 Move X1, X31
	015 Call Component.get_gameObject, X0
	016 Compare X0, 0
	017 JumpIfEqual {27}
	018 Move W1, 1
	019 Move X2, X31
	020 Call GameObject.SetActive, X0, X1
	021 Call RigSelection.SetDesktopPreference, X0
	022 Move X0, X19
	023 Move X30, [X31+16]
	024 Move X19, [X31+24]
	025 Call RigSelection.OnRigSelected, X0
	026 Return 
	027 Call 0x1C17F20

Method: System.Void OnRigSelected()

Disassembly:
	0x01FAA13C BL 0x33F6C70
	0x01FAA140 TBZ X0, 0x0, 0x1FAA19C
	0x01FAA144 LDR X0, [X20 + 0x20]
	0x01FAA148 LDRB W8, [X0 + 0x135]
	0x01FAA14C TBNZ X8, 0x0, 0x1FAA154
	0x01FAA150 BL 0x1C5C684
	0x01FAA154 LDR X8, [X0 + 0xC0]
	0x01FAA158 LDR X0, [X8 + 0x10]
	0x01FAA15C LDRB W8, [X0 + 0x135]
	0x01FAA160 TBNZ X8, 0x0, 0x1FAA168
	0x01FAA164 BL 0x1C5C684
	0x01FAA168 LDR W8, [X0 + 0xE0]
	0x01FAA16C CBNZ W8, 0x1FAA174
	0x01FAA170 BL 0x1C16DFC
	0x01FAA174 LDR X0, [X20 + 0x20]
	0x01FAA178 LDRB W8, [X0 + 0x135]
	0x01FAA17C TBNZ X8, 0x0, 0x1FAA184
	0x01FAA180 BL 0x1C5C684
	0x01FAA184 LDR X8, [X0 + 0xC0]
	0x01FAA188 LDR X1, [X8 + 0x8]
	0x01FAA18C MOV X0, X21
	0x01FAA190 BL 0x24DE57C
	0x01FAA194 MOV X1, X0
	0x01FAA198 B 0x1FAA1A0
	0x01FAA19C MOV X1, X31
	0x01FAA1A0 ADD X2, X31, 0x38
	0x01FAA1A4 MOV X0, X21
	0x01FAA1A8 MOV X3, X31
	0x01FAA1AC BL 0x32C4B94
	0x01FAA1B0 LDR X8, [X21]
	0x01FAA1B4 MOV X23, X0
	0x01FAA1B8 CBNZ X8, 0x1FAA248
	0x01FAA1BC LDR X0, [X20 + 0x20]
	0x01FAA1C0 LDRB W8, [X0 + 0x135]
	0x01FAA1C4 TBNZ X8, 0x0, 0x1FAA1CC
	0x01FAA1C8 BL 0x1C5C684
	0x01FAA1CC LDR X8, [X0 + 0xC0]
	0x01FAA1D0 LDR X0, [X8 + 0x10]
	0x01FAA1D4 LDRB W8, [X0 + 0x135]
	0x01FAA1D8 TBNZ X8, 0x0, 0x1FAA1E0
	0x01FAA1DC BL 0x1C5C684
	0x01FAA1E0 LDR W8, [X0 + 0xE0]
	0x01FAA1E4 CBNZ W8, 0x1FAA1EC
	0x01FAA1E8 BL 0x1C16DFC
	0x01FAA1EC LDR X0, [X20 + 0x20]
	0x01FAA1F0 LDRB W8, [X0 + 0x135]
	0x01FAA1F4 TBNZ X8, 0x0, 0x1FAA1FC
	0x01FAA1F8 BL 0x1C5C684
	0x01FAA1FC LDR X8, [X0 + 0xC0]
	0x01FAA200 LDR X1, [X8 + 0x8]
	0x01FAA204 MOV X0, X21
	0x01FAA208 BL 0x24DE57C
	0x01FAA20C LDP V1, V0, [X22 + 0x10]
	0x01FAA210 LDR V2, [X22]
	0x01FAA214 MOV X24, X0
	0x01FAA218 STP V1, V0, [X31 + 0x10]
	0x01FAA21C STR V2, [X31]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2430000
	006 Move X21, 0x214A000
	007 Move W8, [X20+2068]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x214A000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2068], W8
	019 Move X0, [X21]
	020 Move X20, [X19+40]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Call Object.op_Implicit, X0
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {42}
	032 Move X0, [X19+40]
	033 Compare X0, 0
	034 JumpIfEqual {77}
	035 Move X1, X31
	036 Call GameObject.get_gameObject, X0
	037 Compare X0, 0
	038 JumpIfEqual {77}
	039 Move W1, 1
	040 Move X2, X31
	041 Call GameObject.SetActive, X0, X1
	042 Move X0, [X19+32]
	043 Compare X0, 0
	044 JumpIfEqual {47}
	045 Move X1, X31
	046 Call UnityEvent.Invoke, X0
	047 Move X0, [X21]
	048 Move X20, [X19+64]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X20
	054 Move X1, X31
	055 Call Object.op_Implicit, X0
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {70}
	060 Move X0, [X19+64]
	061 Compare X0, 0
	062 JumpIfEqual {77}
	063 Move X1, X31
	064 Call Component.get_gameObject, X0
	065 Compare X0, 0
	066 JumpIfEqual {77}
	067 Move W1, W31
	068 Move X2, X31
	069 Call GameObject.SetActive, X0, X1
	070 Move W8, 1
	071 Move [X19+73], W8
	072 Move X20, [X31+16]
	073 Move X19, [X31+24]
	074 Move X30, [X31+32]
	075 Move X21, [X31+40]
	076 Return 
	077 Call 0x1C17F20

Method: System.Void SetDesktopPreference()

Disassembly:
	0x01FAA220 LDR X8, [X20 + 0x38]
	0x01FAA224 LDR X0, [X8 + 0x8]
	0x01FAA228 ADD X1, X31, 0x0
	0x01FAA22C BL 0x1C16E04
	0x01FAA230 MOV X1, X0
	0x01FAA234 LDR X2, [X31 + 0x38]
	0x01FAA238 MOV X0, X21
	0x01FAA23C MOV X3, X24
	0x01FAA240 MOV X4, X31
	0x01FAA244 BL 0x32C4EF8
	0x01FAA248 LDR X8, [X20 + 0x38]
	0x01FAA24C LDR X2, [X8 + 0x20]
	0x01FAA250 MOV X0, X19
	0x01FAA254 MOV X1, X23
	0x01FAA258 BL 0x2677460
	0x01FAA25C LDP X20, X19, [X31 + 0x60]
	0x01FAA260 LDP X22, X21, [X31 + 0x50]
	0x01FAA264 LDP X24, X23, [X31 + 0x40]
	0x01FAA268 LDR X30, [X31 + 0x30]
	0x01FAA26C ADD X31, X31, 0x70
	0x01FAA270 RET
	0x01FAA274 B 0x1FAA290
	0x01FAA278 B 0x1FAA290
	0x01FAA27C B 0x1FAA290
	0x01FAA280 B 0x1FAA290

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x2430000
	006 Move X20, 0x2172000
	007 Move X21, 0x2172000
	008 Move W8, [X19+2069]
	009 Move X20, [X20+1384]
	010 Move X21, [X21+1400]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x2172000
	016 Move X0, [X0+1384]
	017 Call 0x1C17CF4
	018 Move X0, 0x2172000
	019 Move X0, [X0+1400]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+2069], W8
	023 Move X0, [X20]
	024 Move X1, [X21]
	025 Move X2, X31
	026 Call PlayerPrefs.SetString, X0, X1
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X0, X31
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call PlayerPrefs.Save
	033 Return 

Method: System.Void SetVRPreference()

Disassembly:
	0x01FAA0D8 MOV X20, X0
	0x01FAA0DC ADD X0, X31, 0x0
	0x01FAA0E0 MOV X1, X31
	0x01FAA0E4 BL 0x33E42EC
	0x01FAA0E8 CBNZ X19, 0x1FAA0F4
	0x01FAA0EC MOV X0, X20
	0x01FAA0F0 BL 0x1D2C690
	0x01FAA0F4 MOV X0, X19
	0x01FAA0F8 BL 0x1C16F18
	0x01FAA0FC BL 0x1990590
	0x01FAA100 SUB X31, X31, 0x70
	0x01FAA104 STR X30, [X31 + 0x30]
	0x01FAA108 STP X24, X23, [X31 + 0x40]
	0x01FAA10C STP X22, X21, [X31 + 0x50]
	0x01FAA110 STP X20, X19, [X31 + 0x60]
	0x01FAA114 LDR X8, [X3 + 0x38]
	0x01FAA118 MOV X20, X3
	0x01FAA11C MOV X22, X2
	0x01FAA120 MOV X19, X1
	0x01FAA124 MOV X21, X0
	0x01FAA128 CBNZ X8, 0x1FAA134
	0x01FAA12C MOV X0, X20
	0x01FAA130 BL 0x1C5C6E0
	0x01FAA134 STR X31, [X31 + 0x38]
	0x01FAA138 MOV X0, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x2430000
	006 Move X20, 0x2172000
	007 Move X21, 0x2172000
	008 Move W8, [X19+2070]
	009 Move X20, [X20+1384]
	010 Move X21, [X21+1376]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x2172000
	016 Move X0, [X0+1376]
	017 Call 0x1C17CF4
	018 Move X0, 0x2172000
	019 Move X0, [X0+1384]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+2070], W8
	023 Move X0, [X20]
	024 Move X1, [X21]
	025 Move X2, X31
	026 Call PlayerPrefs.SetString, X0, X1
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X0, X31
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call PlayerPrefs.Save
	033 Return 

Method: System.Void .ctor()

Disassembly:
	0x01FAA284 B 0x1FAA290
	0x01FAA288 B 0x1FAA290
	0x01FAA28C B 0x1FAA290
	0x01FAA290 MOV X19, X0

ISIL:
	001 Move W8, 1
	002 Move X1, X31
	003 Move [X0+72], W8
	004 Call MonoBehaviour..ctor, X0
	005 Return 

