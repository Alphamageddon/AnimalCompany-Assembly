Type: Fusion.XR.Host.Locomotion.Fader/<Fade>d__13

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01FA24C4 BL 0x1C16F10
	0x01FA24C8 LDR X1, [X20]
	0x01FA24CC MOV X20, X0
	0x01FA24D0 BL 0x272DEDC
	0x01FA24D4 STR X20, [X19 + 0x90]
	0x01FA24D8 MOV X0, X19
	0x01FA24DC LDP X20, X19, [X31 + 0x20]
	0x01FA24E0 LDP X22, X21, [X31 + 0x10]
	0x01FA24E4 MOV X1, X31
	0x01FA24E8 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01FA27AC LDR X8, [X19 + 0x30]

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01FA27B0 LDR V0, [X19 + 0x2]
	0x01FA27B4 ADD X0, X31, 0x20
	0x01FA27B8 MOV X1, X31
	0x01FA27BC MOV X2, X20
	0x01FA27C0 MOV X3, X31
	0x01FA27C4 STR X8, [X31 + 0x30]
	0x01FA27C8 STR V0, [X31 + 0x2]
	0x01FA27CC BL 0x1F9B4C4
	0x01FA27D0 LDR X8, [X19 + 0x48]
	0x01FA27D4 LDUR V0, [X19 + 0x38]
	0x01FA27D8 ADD X0, X31, 0x0
	0x01FA27DC MOV X1, X31
	0x01FA27E0 MOV X2, X31
	0x01FA27E4 MOV X3, X20
	0x01FA27E8 STR X8, [X31 + 0x10]
	0x01FA27EC STR V0, [X31]
	0x01FA27F0 BL 0x1F9B4C4
	0x01FA27F4 LDP X20, X19, [X31 + 0xC0]
	0x01FA27F8 LDP X22, X21, [X31 + 0xB0]
	0x01FA27FC LDP X24, X23, [X31 + 0xA0]
	0x01FA2800 LDP X26, X25, [X31 + 0x90]
	0x01FA2804 LDP X28, X27, [X31 + 0x80]
	0x01FA2808 LDP X29, X30, [X31 + 0x70]
	0x01FA280C ADD X31, X31, 0xD0
	0x01FA2810 RET
	0x01FA2814 BL 0x1C16F20
	0x01FA2818 BL 0x1C16F20
	0x01FA281C BL 0x1C16F20
	0x01FA2820 B 0x1FA282C
	0x01FA2824 B 0x1FA282C
	0x01FA2828 B 0x1FA282C
	0x01FA282C MOV X20, X0
	0x01FA2830 CMP W1, 0x1
	0x01FA2834 B.NE 0x1FA2860
	0x01FA2838 MOV X0, X20
	0x01FA283C BL 0x3EB1AD0
	0x01FA2840 LDR X21, [X0]
	0x01FA2844 BL 0x3EB1AE0
	0x01FA2848 LDR X1, [X26]
	0x01FA284C ADD X0, X31, 0x50
	0x01FA2850 BL 0x2BC434C
	0x01FA2854 CBZ X21, 0x1FA2740
	0x01FA2858 MOV X0, X21
	0x01FA285C BL 0x1C16F18
	0x01FA2860 MOV X21, X31
	0x01FA2864 B 0x1FA286C
	0x01FA2868 MOV X20, X0
	0x01FA286C LDR X1, [X26]
	0x01FA2870 ADD X0, X31, 0x50
	0x01FA2874 BL 0x2BC434C
	0x01FA2878 CBNZ X21, 0x1FA2884
	0x01FA287C MOV X0, X20
	0x01FA2880 BL 0x1D2C690
	0x01FA2884 MOV X0, X21
	0x01FA2888 BL 0x1C16F18
	0x01FA288C BL 0x1990590
	0x01FA2890 STR X30, [X31 - 0x20]!
	0x01FA2894 STP X20, X19, [X31 + 0x10]
	0x01FA2898 ADRP X20, 0x2437000
	0x01FA289C LDRB W8, [X20 + 0x7DA]
	0x01FA28A0 MOV X19, X0
	0x01FA28A4 TBNZ X8, 0x0, 0x1FA28C8
	0x01FA28A8 ADRP X0, 0x2151000
	0x01FA28AC LDR X0, [X0 + 0xA28]
	0x01FA28B0 BL 0x1C16CF4
	0x01FA28B4 ADRP X0, 0x2179000
	0x01FA28B8 LDR X0, [X0 + 0x3B8]
	0x01FA28BC BL 0x1C16CF4
	0x01FA28C0 MOVZ W8, 0x1
	0x01FA28C4 STRB W8, [X20 + 0x7DA]
	0x01FA28C8 LDR W0, [X19 + 0x78]
	0x01FA28CC MOV X1, X31
	0x01FA28D0 BL 0x3C35CB8
	0x01FA28D4 CBZ W0, 0x1FA28E4
	0x01FA28D8 LDP X20, X19, [X31 + 0x10]
	0x01FA28DC LDR X30, [X31], #0x20
	0x01FA28E0 RET
	0x01FA28E4 ADRP X8, 0x2151000
	0x01FA28E8 LDR X8, [X8 + 0xA28]
	0x01FA28EC LDR X0, [X8]
	0x01FA28F0 LDR W8, [X0 + 0xE0]
	0x01FA28F4 CBNZ W8, 0x1FA28FC
	0x01FA28F8 BL 0x1C16DFC
	0x01FA28FC ADRP X8, 0x2179000
	0x01FA2900 LDR X8, [X8 + 0x3B8]
	0x01FA2904 LDP X20, X19, [X31 + 0x10]
	0x01FA2908 MOV X1, X31
	0x01FA290C LDR X0, [X8]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2438000
	006 Move W8, [X20+2001]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2155000
	013 Move X0, [X0+3120]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2001], W8
	017 Move W8, [X19+16]
	018 Move X20, [X19+40]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Compare W8, 0
	021 JumpIfNotEqual {92}
	022 Move V0, [X19+32]
	023 Move W9, 0x447A0000
	024 Move S1, W9
	025 Move TEMP, 0
	026 Not TEMP
	027 Move W8, TEMP
	028 Multiply S0, S0, S1
	029 Move X0, X31
	030 Move [X19+16], W8
	031 Move [X19+56], S0
	032 Call Time.get_realtimeSinceStartup
	033 Compare X20, 0
	034 JumpIfEqual {98}
	035 Move [X20+84], S0
	036 Move [X19+60], S0
	037 Move V0, [X19+48]
	038 Move X8, 10
	039 Move [X19+64], X8
	040 Move W8, 0xD70A
	041 NotImplemented "Instruction MOVK not yet implemented."
	042 Move X0, X20
	043 Move [X19+72], W8
	044 Call Fader.SetFade, X0, V0
	045 Move V0, [X19+64]
	046 Move S1, [X19+64]
	047 Move S0, [X19+68]
	048 Move TEMP, 0
	049 Not TEMP
	050 Move W8, TEMP
	051 Move [X19+16], W8
	052 NotImplemented "Instruction SCVTF not yet implemented."
	053 Add S0, S1, S0
	054 Move [X19+64], S0
	055 Move V1, [X19+56]
	056 NotImplemented "Instruction FCMP not yet implemented."
	057 Compare X20, 0
	058 JumpIfEqual {98}
	059 Move V2, [X19+60]
	060 Move V3, [X20+84]
	061 NotImplemented "Instruction FCMP not yet implemented."
	062 Move S2, [X19+48]
	063 Move S3, [X19+52]
	064 NotImplemented "Instruction FDIV not yet implemented."
	065 Move S1, 1
	066 NotImplemented "Instruction FMIN not yet implemented."
	067 NotImplemented "Instruction FCMP not yet implemented."
	068 Move S0, W31
	069 NotImplemented "Instruction FCSEL not yet implemented."
	070 Subtract S1, S3, S2
	071 Multiply S0, S0, S1
	072 Add S0, S2, S0
	073 Move X0, X20
	074 Call Fader.SetFade, X0, V0
	075 Move X8, 0x2155000
	076 Move V8, [X19+72]
	077 Move X8, [X8+3120]
	078 Move X0, [X8]
	079 Call 0x1C17F10
	080 Move V0, V8
	081 Move X1, X31
	082 Move X20, X0
	083 Call WaitForSeconds..ctor, X0, V0
	084 Move W0, 1
	085 Move [X19+24], X20
	086 Move [X19+16], W0
	087 Compare X20, 0
	088 JumpIfEqual {98}
	089 Move V0, [X19+52]
	090 Move X0, X20
	091 Call Fader.SetFade, X0, V0
	092 Move W0, W31
	093 Move X20, [X31+16]
	094 Move X19, [X31+24]
	095 Move X30, [X31+8]
	096 Move V8, [X31+32]
	097 Return X0
	098 Call 0x1C17F20

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x01FA2910 LDR X30, [X31], #0x20
	0x01FA2914 B 0x3C0649C

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01FA2918 LDR X8, [X0]
	0x01FA291C LDP X2, X1, [X8 + 0x188]
	0x01FA2920 BR X2
	0x01FA2924 STP D9, D8, [X31 - 0x30]!
	0x01FA2928 STR X30, [X31 + 0x10]
	0x01FA292C STP X20, X19, [X31 + 0x20]
	0x01FA2930 ADRP X20, 0x2437000
	0x01FA2934 LDRB W8, [X20 + 0x7DB]
	0x01FA2938 MOV X19, X0
	0x01FA293C TBNZ X8, 0x0, 0x1FA2954
	0x01FA2940 ADRP X0, 0x2179000
	0x01FA2944 LDR X0, [X0 + 0x3C0]
	0x01FA2948 BL 0x1C16CF4
	0x01FA294C MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x2152000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x217A000
	011 Move X0, [X0+752]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01FA2950 STRB W8, [X20 + 0x7DB]
	0x01FA2954 LDRB W8, [X19 + 0x68]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

