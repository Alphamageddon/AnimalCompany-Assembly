Type: Fusion.XR.Host.Utils.VelocitySmoother

Method: UnityEngine.Vector3 get_AverageVelocity()

Disassembly:
	0x01F9E228 STR V0, [X23]
	0x01F9E22C BL 0x3E640EC
	0x01F9E230 TBZ X0, 0x0, 0x1F9E150
	0x01F9E234 ADD X0, X31, 0x18
	0x01F9E238 MOV X1, X31
	0x01F9E23C BL 0x3E62BF8
	0x01F9E240 AND W8, W0, 0x1
	0x01F9E244 STRB W8, [X20 + 0xF8]
	0x01F9E248 B 0x1F9E150
	0x01F9E24C BL 0x1C16F20
	0x01F9E250 SUB X31, X31, 0x60
	0x01F9E254 STP D9, D8, [X31 + 0x30]
	0x01F9E258 STP X30, X21, [X31 + 0x40]
	0x01F9E25C STP X20, X19, [X31 + 0x50]
	0x01F9E260 ADRP X21, 0x243B000
	0x01F9E264 LDRB W8, [X21 + 0x7AB]
	0x01F9E268 MOV W19, W1
	0x01F9E26C MOV V8.16B, V1.16B
	0x01F9E270 MOV V9.16B, V0.16B
	0x01F9E274 MOV X20, X0
	0x01F9E278 TBNZ X8, 0x0, 0x1F9E29C
	0x01F9E27C ADRP X0, 0x217D000
	0x01F9E280 LDR X0, [X0 + 0x178]
	0x01F9E284 BL 0x1C16CF4
	0x01F9E288 ADRP X0, 0x217D000
	0x01F9E28C LDR X0, [X0 + 0x170]
	0x01F9E290 BL 0x1C16CF4
	0x01F9E294 MOVZ W8, 0x1
	0x01F9E298 STRB W8, [X21 + 0x7AB]
	0x01F9E29C ADD X8, X31, 0x8
	0x01F9E2A0 MOV X0, X20
	0x01F9E2A4 STP X31, X31, [X31 + 0x20]
	0x01F9E2A8 BL 0x1F9E0C8
	0x01F9E2AC LDRB W8, [X31 + 0x8]
	0x01F9E2B0 CBZ W8, 0x1F9E2E8
	0x01F9E2B4 ADD X8, X31, 0x8
	0x01F9E2B8 MOV X0, X20
	0x01F9E2BC BL 0x1F9E0C8
	0x01F9E2C0 LDP X8, X9, [X31 + 0x10]
	0x01F9E2C4 STP X8, X9, [X31 + 0x20]
	0x01F9E2C8 LDRB W8, [X20 + 0xF8]
	0x01F9E2CC CBZ W8, 0x1F9E2E8
	0x01F9E2D0 ADD X0, X31, 0x20
	0x01F9E2D4 MOV W1, W19
	0x01F9E2D8 MOV V0.16B, V9.16B
	0x01F9E2DC MOV V1.16B, V8.16B
	0x01F9E2E0 MOV X2, X31
	0x01F9E2E4 BL 0x3E63ECC
	0x01F9E2E8 LDP X20, X19, [X31 + 0x50]
	0x01F9E2EC LDP X30, X21, [X31 + 0x40]
	0x01F9E2F0 LDP D9, D8, [X31 + 0x30]
	0x01F9E2F4 ADD X31, X31, 0x60
	0x01F9E2F8 RET
	0x01F9E2FC SUB X31, X31, 0x60
	0x01F9E300 STR X30, [X31 + 0x30]
	0x01F9E304 STP X22, X21, [X31 + 0x40]
	0x01F9E308 STP X20, X19, [X31 + 0x50]
	0x01F9E30C ADRP X22, 0x243B000
	0x01F9E310 LDRB W8, [X22 + 0x7AC]
	0x01F9E314 MOV W20, W2
	0x01F9E318 MOV X19, X1
	0x01F9E31C MOV X21, X0
	0x01F9E320 TBNZ X8, 0x0, 0x1F9E344
	0x01F9E324 ADRP X0, 0x217D000
	0x01F9E328 LDR X0, [X0 + 0x178]
	0x01F9E32C BL 0x1C16CF4
	0x01F9E330 ADRP X0, 0x217D000
	0x01F9E334 LDR X0, [X0 + 0x170]
	0x01F9E338 BL 0x1C16CF4
	0x01F9E33C MOVZ W8, 0x1
	0x01F9E340 STRB W8, [X22 + 0x7AC]
	0x01F9E344 ADD X8, X31, 0x8
	0x01F9E348 MOV X0, X21
	0x01F9E34C STP X31, X31, [X31 + 0x20]
	0x01F9E350 BL 0x1F9E0C8
	0x01F9E354 LDRB W8, [X31 + 0x8]
	0x01F9E358 CBZ W8, 0x1F9E38C
	0x01F9E35C ADD X8, X31, 0x8
	0x01F9E360 MOV X0, X21
	0x01F9E364 BL 0x1F9E0C8
	0x01F9E368 LDP X8, X9, [X31 + 0x10]
	0x01F9E36C STP X8, X9, [X31 + 0x20]
	0x01F9E370 LDRB W8, [X21 + 0xF8]
	0x01F9E374 CBZ W8, 0x1F9E38C
	0x01F9E378 ADD X0, X31, 0x20
	0x01F9E37C MOV W1, W20
	0x01F9E380 MOV X2, X19
	0x01F9E384 MOV X3, X31
	0x01F9E388 BL 0x3E64020
	0x01F9E38C LDP X20, X19, [X31 + 0x50]
	0x01F9E390 LDP X22, X21, [X31 + 0x40]
	0x01F9E394 LDR X30, [X31 + 0x30]
	0x01F9E398 ADD X31, X31, 0x60
	0x01F9E39C RET
	0x01F9E3A0 MOVZ W8, 0x3F000000
	0x01F9E3A4 MOVZ W9, 0x1
	0x01F9E3A8 MOV X1, X31
	0x01F9E3AC STR W8, [X0 + 0xC8]
	0x01F9E3B0 STRB W9, [X0 + 0xCC]
	0x01F9E3B4 B 0x3C36C30
	0x01F9E3B8 STP X30, X21, [X31 - 0x20]!
	0x01F9E3BC STP X20, X19, [X31 + 0x10]
	0x01F9E3C0 ADRP X20, 0x243B000
	0x01F9E3C4 ADRP X21, 0x2155000
	0x01F9E3C8 LDRB W8, [X20 + 0x7AD]
	0x01F9E3CC LDR X21, [X21 + 0x598]
	0x01F9E3D0 MOV X19, X0
	0x01F9E3D4 TBNZ X8, 0x0, 0x1F9E404
	0x01F9E3D8 ADRP X0, 0x217D000
	0x01F9E3DC LDR X0, [X0 + 0x180]
	0x01F9E3E0 BL 0x1C16CF4
	0x01F9E3E4 ADRP X0, 0x217D000
	0x01F9E3E8 LDR X0, [X0 + 0x108]
	0x01F9E3EC BL 0x1C16CF4
	0x01F9E3F0 ADRP X0, 0x2155000
	0x01F9E3F4 LDR X0, [X0 + 0x598]
	0x01F9E3F8 BL 0x1C16CF4
	0x01F9E3FC MOVZ W8, 0x1
	0x01F9E400 STRB W8, [X20 + 0x7AD]
	0x01F9E404 LDR X0, [X21]
	0x01F9E408 LDR X20, [X19 + 0x20]
	0x01F9E40C LDR W8, [X0 + 0xE0]
	0x01F9E410 CBNZ W8, 0x1F9E418
	0x01F9E414 BL 0x1C16DFC
	0x01F9E418 MOV X0, X20
	0x01F9E41C MOV X1, X31
	0x01F9E420 MOV X2, X31
	0x01F9E424 BL 0x3C3883C
	0x01F9E428 TBZ X0, 0x0, 0x1F9E444
	0x01F9E42C ADRP X8, 0x217D000
	0x01F9E430 LDR X8, [X8 + 0x180]
	0x01F9E434 MOV X0, X19
	0x01F9E438 LDR X1, [X8]
	0x01F9E43C BL 0x21A3AF8
	0x01F9E440 STR X0, [X19 + 0x20]
	0x01F9E444 LDR X0, [X21]
	0x01F9E448 LDR X20, [X19 + 0x28]
	0x01F9E44C LDR W8, [X0 + 0xE0]
	0x01F9E450 CBNZ W8, 0x1F9E458
	0x01F9E454 BL 0x1C16DFC
	0x01F9E458 MOV X0, X20
	0x01F9E45C MOV X1, X31
	0x01F9E460 MOV X2, X31
	0x01F9E464 BL 0x3C3883C
	0x01F9E468 TBZ X0, 0x0, 0x1F9E484
	0x01F9E46C ADRP X8, 0x217D000
	0x01F9E470 LDR X8, [X8 + 0x108]
	0x01F9E474 MOV X0, X19
	0x01F9E478 LDR X1, [X8]
	0x01F9E47C BL 0x21A3894
	0x01F9E480 STR X0, [X19 + 0x28]
	0x01F9E484 LDP X20, X19, [X31 + 0x10]
	0x01F9E488 LDP X30, X21, [X31], #0x20
	0x01F9E48C RET
	0x01F9E490 MOV X1, X31
	0x01F9E494 B 0x3C36C30
	0x01F9E498 LDR V0, [X0 + 0x48]
	0x01F9E49C RET
	0x01F9E4A0 SUB X31, X31, 0x60

ISIL:
	001 Move [X31-96], D14
	002 Move [X31+8], D13
	003 Move [X31+16], D12
	004 Move [X31+24], D11
	005 Move [X31+32], D10
	006 Move [X31+40], D9
	007 Move [X31+48], D8
	008 Move [X31+56], X30
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x243C000
	014 Move W8, [X20+1956]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x2156000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1956], W8
	025 Move X21, 0x243B000
	026 Move W8, [X21+1923]
	027 Compare W8, 0
	028 JumpIfNotEqual {34}
	029 Move X0, 0x2156000
	030 Move X0, [X0+1440]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+1923], W8
	034 Move X11, [X19+104]
	035 Compare X11, 0
	036 JumpIfEqual {182}
	037 Move X22, 0x2156000
	038 Move X22, [X22+1440]
	039 Move X8, X31
	040 Move X9, X31
	041 Move S11, W31
	042 Move X10, [X22]
	043 Move X10, [X10+184]
	044 Move S8, [X10]
	045 Move S9, [X10+4]
	046 Move V10, [X10+8]
	047 Move W10, [X11+24]
	048 Add X11, X11, 32
	049 Move V12, V8
	050 Move V13, V9
	051 Move V14, V10
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move V0, [X11]
	054 NotImplemented "Instruction FCMP not yet implemented."
	055 Move X12, [X19+88]
	056 Compare X12, 0
	057 JumpIfEqual {182}
	058 Move W13, [X12+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Add X12, X12, X8
	061 Move S1, [X12+32]
	062 Move S2, [X12+36]
	063 Move V3, [X12+40]
	064 Add S11, S11, S0
	065 Add S12, S12, S1
	066 Add S13, S13, S2
	067 Add S14, S14, S3
	068 Add X9, X9, 1
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Add X8, X8, 12
	071 NotImplemented "Instruction FCMP not yet implemented."
	072 Move X8, 0x2156000
	073 Move X8, [X8+1432]
	074 Move X20, [X19+40]
	075 Move X0, [X8]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X0, X20
	081 Move X1, X31
	082 NotImplemented "Instruction FDIV not yet implemented."
	083 NotImplemented "Instruction FDIV not yet implemented."
	084 NotImplemented "Instruction FDIV not yet implemented."
	085 Call Object.op_Implicit, X0
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {165}
	090 Move W8, [X19+33]
	091 Compare W8, 0
	092 JumpIfEqual {165}
	093 Move X20, 0x243B000
	094 Move W8, [X20+1924]
	095 Compare W8, 0
	096 JumpIfNotEqual {102}
	097 Move X0, 0x2156000
	098 Move X0, [X0+1448]
	099 Call 0x1C17CF4
	100 Move W8, 1
	101 Move [X20+1924], W8
	102 Move X20, 0x2156000
	103 Move X20, [X20+1448]
	104 Move X0, [X20]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Move X0, [X19+40]
	110 Compare X0, 0
	111 JumpIfEqual {182}
	112 Multiply S0, S8, S8
	113 Multiply S1, S9, S9
	114 Move X1, X31
	115 Add S11, S1, S0
	116 Multiply S12, S10, S10
	117 Call Rigidbody.get_velocity, X0
	118 Move X19, 0x243B000
	119 Move W8, [X19+1925]
	120 Move V8, V0
	121 Move V9, V1
	122 Move V10, V2
	123 Compare W8, 0
	124 JumpIfNotEqual {130}
	125 Move X0, 0x2156000
	126 Move X0, [X0+1448]
	127 Call 0x1C17CF4
	128 Move W8, 1
	129 Move [X19+1925], W8
	130 Move X0, [X20]
	131 Add S11, S12, S11
	132 Move W8, [X0+224]
	133 Compare W8, 0
	134 JumpIfNotEqual {136}
	135 Call 0x1C17DFC
	136 Multiply S0, S8, S8
	137 Multiply S1, S9, S9
	138 Move X8, -21704704
	139 Add S0, S0, S1
	140 Move V1, [X8+380]
	141 Multiply S2, S10, S10
	142 Add S0, S2, S0
	143 NotImplemented "Instruction FSQRT not yet implemented."
	144 NotImplemented "Instruction FCMP not yet implemented."
	145 NotImplemented "Instruction FSQRT not yet implemented."
	146 NotImplemented "Instruction FDIV not yet implemented."
	147 NotImplemented "Instruction FDIV not yet implemented."
	148 NotImplemented "Instruction FDIV not yet implemented."
	149 Move W8, [X21+1923]
	150 Compare W8, 0
	151 JumpIfNotEqual {157}
	152 Move X0, 0x2156000
	153 Move X0, [X0+1440]
	154 Call 0x1C17CF4
	155 Move W8, 1
	156 Move [X21+1923], W8
	157 Move X8, [X22]
	158 Move X8, [X8+184]
	159 Move S0, [X8]
	160 Move S1, [X8+4]
	161 Move V2, [X8+8]
	162 Multiply S8, S11, S0
	163 Multiply S9, S11, S1
	164 Multiply S10, S11, S2
	165 Move V0, V8
	166 Move V1, V9
	167 Move V2, V10
	168 Move X20, [X31+80]
	169 Move X19, [X31+88]
	170 Move X22, [X31+64]
	171 Move X21, [X31+72]
	172 Move X30, [X31+56]
	173 Move D9, [X31+40]
	174 Move D8, [X31+48]
	175 Move D11, [X31+24]
	176 Move D10, [X31+32]
	177 Move D13, [X31+8]
	178 Move D12, [X31+16]
	179 Move V14, [X31+96]
	180 Return X0
	181 Call 0x1C17F28
	182 Call 0x1C17F20

Method: UnityEngine.Vector3 get_AverageAngularVelocity()

Disassembly:
	0x01F9E4A4 STR X30, [X31 + 0x30]
	0x01F9E4A8 STP X22, X21, [X31 + 0x40]
	0x01F9E4AC STP X20, X19, [X31 + 0x50]
	0x01F9E4B0 ADRP X21, 0x243B000
	0x01F9E4B4 ADRP X20, 0x217D000
	0x01F9E4B8 LDRB W8, [X21 + 0x7AE]
	0x01F9E4BC LDR X20, [X20 + 0x188]
	0x01F9E4C0 MOV X19, X0
	0x01F9E4C4 TBNZ X8, 0x0, 0x1F9E500
	0x01F9E4C8 ADRP X0, 0x217D000
	0x01F9E4CC LDR X0, [X0 + 0x190]
	0x01F9E4D0 BL 0x1C16CF4
	0x01F9E4D4 ADRP X0, 0x217D000
	0x01F9E4D8 LDR X0, [X0 + 0x198]
	0x01F9E4DC BL 0x1C16CF4
	0x01F9E4E0 ADRP X0, 0x217D000
	0x01F9E4E4 LDR X0, [X0 + 0x1A0]
	0x01F9E4E8 BL 0x1C16CF4
	0x01F9E4EC ADRP X0, 0x217D000
	0x01F9E4F0 LDR X0, [X0 + 0x188]
	0x01F9E4F4 BL 0x1C16CF4
	0x01F9E4F8 MOVZ W8, 0x1
	0x01F9E4FC STRB W8, [X21 + 0x7AE]
	0x01F9E500 LDR X0, [X20]
	0x01F9E504 MOVI V0.2D, 0x0
	0x01F9E508 STP V0, V0, [X31 + 0x10]
	0x01F9E50C STR V0, [X31]
	0x01F9E510 ADRP X20, 0x217D000
	0x01F9E514 ADRP X22, 0x217D000
	0x01F9E518 ADRP X21, 0x217D000
	0x01F9E51C LDR W8, [X0 + 0xE0]
	0x01F9E520 LDR X20, [X20 + 0x190]
	0x01F9E524 LDR X22, [X22 + 0x198]
	0x01F9E528 LDR X21, [X21 + 0x1A0]
	0x01F9E52C CBNZ W8, 0x1F9E534
	0x01F9E530 BL 0x1C16DFC
	0x01F9E534 LDR X0, [X20]
	0x01F9E538 ADD X8, X31, 0x0
	0x01F9E53C ORR X20, X8, 0xF
	0x01F9E540 MOV X8, X20
	0x01F9E544 BL 0x263221C
	0x01F9E548 LDR X2, [X22]
	0x01F9E54C MOVN W8, 0x0
	0x01F9E550 ADD X1, X31, 0x0
	0x01F9E554 MOV X0, X20
	0x01F9E558 STR X19, [X31 + 0x20]
	0x01F9E55C STR W8, [X31]
	0x01F9E560 BL 0x1FCF814
	0x01F9E564 LDR X1, [X21]
	0x01F9E568 MOV X0, X20
	0x01F9E56C BL 0x2632230
	0x01F9E570 LDP X20, X19, [X31 + 0x50]
	0x01F9E574 LDP X22, X21, [X31 + 0x40]
	0x01F9E578 LDR X30, [X31 + 0x30]
	0x01F9E57C ADD X31, X31, 0x60
	0x01F9E580 RET
	0x01F9E584 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x243B000
	005 Move W8, [X20+1923]
	006 Move X19, X0
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0x2156000
	010 Move X0, [X0+1440]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X20+1923], W8
	014 Move X12, [X19+104]
	015 Compare X12, 0
	016 JumpIfEqual {59}
	017 Move X11, 0x2156000
	018 Move X11, [X11+1440]
	019 Move X9, X31
	020 Move X10, X31
	021 Move W8, W31
	022 Move X11, [X11]
	023 Move X11, [X11+184]
	024 Move V0, [X11]
	025 Move V2, [X11+8]
	026 Move W11, [X12+24]
	027 Add X12, X12, 32
	028 Move V3, V0
	029 Move V1, V2
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move V4, [X12]
	032 NotImplemented "Instruction FCMP not yet implemented."
	033 Move X13, [X19+96]
	034 Compare X13, 0
	035 JumpIfEqual {59}
	036 Move W14, [X13+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add X13, X13, X9
	039 Move V4, [X13+32]
	040 Move V5, [X13+40]
	041 Add W8, W8, 1
	042 Add V3, V3, V4
	043 Add S1, S1, S5
	044 Add X10, X10, 1
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Add X9, X9, 12
	047 Compare W8, 0
	048 JumpIfEqual {53}
	049 NotImplemented "Instruction SCVTF not yet implemented."
	050 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	051 NotImplemented "Instruction INVALID not yet implemented."
	052 NotImplemented "Instruction FDIV not yet implemented."
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move S1, V0.S[1]
	056 Move X30, [X31+32]
	057 Return X0
	058 Call 0x1C17F28
	059 Call 0x1C17F20

Method: System.Void Awake()

Disassembly:
	0x01F9E588 STP X20, X19, [X31 + 0x10]
	0x01F9E58C ADRP X20, 0x243B000
	0x01F9E590 ADRP X21, 0x2155000
	0x01F9E594 LDRB W8, [X20 + 0x7AF]
	0x01F9E598 LDR X21, [X21 + 0x598]
	0x01F9E59C MOV X19, X0
	0x01F9E5A0 TBNZ X8, 0x0, 0x1F9E5D0
	0x01F9E5A4 ADRP X0, 0x217D000
	0x01F9E5A8 LDR X0, [X0 + 0x1A8]
	0x01F9E5AC BL 0x1C16CF4
	0x01F9E5B0 ADRP X0, 0x217D000
	0x01F9E5B4 LDR X0, [X0 + 0x1B0]
	0x01F9E5B8 BL 0x1C16CF4
	0x01F9E5BC ADRP X0, 0x2155000
	0x01F9E5C0 LDR X0, [X0 + 0x598]
	0x01F9E5C4 BL 0x1C16CF4
	0x01F9E5C8 MOVZ W8, 0x1
	0x01F9E5CC STRB W8, [X20 + 0x7AF]
	0x01F9E5D0 LDR X0, [X21]
	0x01F9E5D4 LDR X20, [X19 + 0x20]
	0x01F9E5D8 LDR W8, [X0 + 0xE0]
	0x01F9E5DC CBNZ W8, 0x1F9E5E4
	0x01F9E5E0 BL 0x1C16DFC
	0x01F9E5E4 MOV X0, X20
	0x01F9E5E8 MOV X1, X31
	0x01F9E5EC BL 0x3C38948
	0x01F9E5F0 TBZ X0, 0x0, 0x1F9E610
	0x01F9E5F4 LDR X0, [X19 + 0x20]
	0x01F9E5F8 CBZ X0, 0x1F9E718
	0x01F9E5FC ADRP X8, 0x217D000
	0x01F9E600 LDR X8, [X8 + 0x1A8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x243C000
	007 Move X22, 0x2159000
	008 Move X20, 0x217D000
	009 Move W8, [X21+1957]
	010 Move X22, [X22+2968]
	011 Move X20, [X20+1768]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x217D000
	018 Move X0, [X0+1768]
	019 Call 0x1C17CF4
	020 Move X0, 0x2159000
	021 Move X0, [X0+2968]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1957], W8
	025 Move X1, [X22]
	026 Move X0, X19
	027 Call 0x21A4894, X0
	028 Move [X19+40], X0
	029 Move X1, [X20]
	030 Move X0, X19
	031 Call 0x21A4F50, X0
	032 Move [X19+48], X0
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return 

Method: System.Void TrackVelocity()

Disassembly:
	0x01F9E604 LDR X1, [X8]
	0x01F9E608 BL 0x21A3AF8
	0x01F9E60C STR X0, [X19 + 0x58]
	0x01F9E610 LDR X0, [X21]
	0x01F9E614 LDR X20, [X19 + 0x28]
	0x01F9E618 LDR W8, [X0 + 0xE0]
	0x01F9E61C CBNZ W8, 0x1F9E624
	0x01F9E620 BL 0x1C16DFC
	0x01F9E624 MOV X0, X20
	0x01F9E628 MOV X1, X31
	0x01F9E62C BL 0x3C38948
	0x01F9E630 TBZ X0, 0x0, 0x1F9E650
	0x01F9E634 LDR X0, [X19 + 0x28]
	0x01F9E638 CBZ X0, 0x1F9E718
	0x01F9E63C ADRP X8, 0x217D000
	0x01F9E640 LDR X8, [X8 + 0x1A8]
	0x01F9E644 LDR X1, [X8]
	0x01F9E648 BL 0x21A3AF8
	0x01F9E64C STR X0, [X19 + 0x60]
	0x01F9E650 LDR X0, [X21]
	0x01F9E654 LDR X20, [X19 + 0x30]
	0x01F9E658 LDR W8, [X0 + 0xE0]
	0x01F9E65C CBNZ W8, 0x1F9E664
	0x01F9E660 BL 0x1C16DFC
	0x01F9E664 MOV X0, X20
	0x01F9E668 MOV X1, X31
	0x01F9E66C BL 0x3C38948
	0x01F9E670 TBZ X0, 0x0, 0x1F9E690
	0x01F9E674 LDR X0, [X19 + 0x30]
	0x01F9E678 CBZ X0, 0x1F9E718
	0x01F9E67C ADRP X8, 0x217D000
	0x01F9E680 LDR X8, [X8 + 0x1B0]
	0x01F9E684 LDR X1, [X8]
	0x01F9E688 BL 0x21A3AF8
	0x01F9E68C STR X0, [X19 + 0x50]
	0x01F9E690 LDR X0, [X21]
	0x01F9E694 LDR X20, [X19 + 0x58]
	0x01F9E698 LDR W8, [X0 + 0xE0]
	0x01F9E69C CBNZ W8, 0x1F9E6A4
	0x01F9E6A0 BL 0x1C16DFC
	0x01F9E6A4 MOV X0, X20
	0x01F9E6A8 MOV X1, X31
	0x01F9E6AC MOV X2, X31
	0x01F9E6B0 BL 0x3C3883C
	0x01F9E6B4 TBNZ X0, 0x0, 0x1F9E708
	0x01F9E6B8 LDR X0, [X21]
	0x01F9E6BC LDR X20, [X19 + 0x60]
	0x01F9E6C0 LDR W8, [X0 + 0xE0]
	0x01F9E6C4 CBNZ W8, 0x1F9E6CC
	0x01F9E6C8 BL 0x1C16DFC
	0x01F9E6CC MOV X0, X20
	0x01F9E6D0 MOV X1, X31
	0x01F9E6D4 MOV X2, X31
	0x01F9E6D8 BL 0x3C3883C
	0x01F9E6DC TBNZ X0, 0x0, 0x1F9E708
	0x01F9E6E0 LDR X0, [X21]
	0x01F9E6E4 LDR X20, [X19 + 0x50]
	0x01F9E6E8 LDR W8, [X0 + 0xE0]
	0x01F9E6EC CBNZ W8, 0x1F9E6F4
	0x01F9E6F0 BL 0x1C16DFC
	0x01F9E6F4 MOV X0, X20
	0x01F9E6F8 MOV X1, X31
	0x01F9E6FC MOV X2, X31
	0x01F9E700 BL 0x3C3883C
	0x01F9E704 TBZ X0, 0x0, 0x1F9E70C
	0x01F9E708 STRB W31, [X19 + 0x45]
	0x01F9E70C LDP X20, X19, [X31 + 0x10]
	0x01F9E710 LDP X30, X21, [X31], #0x20
	0x01F9E714 RET
	0x01F9E718 BL 0x1C16F20
	0x01F9E71C STR X30, [X31 - 0x30]!
	0x01F9E720 STP X22, X21, [X31 + 0x10]
	0x01F9E724 STP X20, X19, [X31 + 0x20]
	0x01F9E728 ADRP X22, 0x243B000
	0x01F9E72C ADRP X21, 0x2155000
	0x01F9E730 LDRB W8, [X22 + 0x7B0]
	0x01F9E734 LDR X21, [X21 + 0x598]
	0x01F9E738 MOV X19, X1
	0x01F9E73C MOV X20, X0
	0x01F9E740 TBNZ X8, 0x0, 0x1F9E764
	0x01F9E744 ADRP X0, 0x2159000
	0x01F9E748 LDR X0, [X0 + 0xF10]
	0x01F9E74C BL 0x1C16CF4
	0x01F9E750 ADRP X0, 0x2155000
	0x01F9E754 LDR X0, [X0 + 0x598]
	0x01F9E758 BL 0x1C16CF4
	0x01F9E75C MOVZ W8, 0x1
	0x01F9E760 STRB W8, [X22 + 0x7B0]
	0x01F9E764 STR X19, [X20 + 0x38]
	0x01F9E768 LDR X0, [X21]
	0x01F9E76C LDR W8, [X0 + 0xE0]
	0x01F9E770 CBNZ W8, 0x1F9E778
	0x01F9E774 BL 0x1C16DFC
	0x01F9E778 MOV X0, X19
	0x01F9E77C MOV X1, X31
	0x01F9E780 BL 0x3C38948
	0x01F9E784 TBZ X0, 0x0, 0x1F9E7E4
	0x01F9E788 ADRP X8, 0x2159000
	0x01F9E78C LDR X8, [X8 + 0xF10]
	0x01F9E790 MOVZ W1, 0x1
	0x01F9E794 LDR X0, [X8]
	0x01F9E798 BL 0x1C16D6C
	0x01F9E79C CBZ X0, 0x1F9E7F4
	0x01F9E7A0 LDR X8, [X0]
	0x01F9E7A4 MOV X21, X0
	0x01F9E7A8 MOV X0, X20
	0x01F9E7AC LDR X1, [X8 + 0x40]
	0x01F9E7B0 BL 0x1C16E00
	0x01F9E7B4 CBZ X0, 0x1F9E7F8

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, [X0+88]
	015 NotImplemented "Instruction LDRSW not yet implemented."
	016 Move X1, X31
	017 Move X19, X0
	018 Call Component.get_transform, X0
	019 Compare X0, 0
	020 JumpIfEqual {134}
	021 Move X1, X31
	022 Call Transform.get_position, X0
	023 Compare X20, 0
	024 JumpIfEqual {134}
	025 Move W8, [X20+24]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move V3, [X19+56]
	028 Move V4, [X19+64]
	029 Move V0.S[1], V1.S[0]
	030 Move W8, 12
	031 NotImplemented "Instruction MADD not yet implemented."
	032 Subtract V0, V0, V3
	033 Subtract S1, S2, S4
	034 Move [X8+32], D0
	035 Move [X8+40], S1
	036 Move X20, [X19+96]
	037 NotImplemented "Instruction LDRSW not yet implemented."
	038 Move S8, [X19+68]
	039 Move S9, [X19+72]
	040 Move S10, [X19+76]
	041 Move S11, [X19+80]
	042 Move X0, X19
	043 Move X1, X31
	044 Call Component.get_transform, X0
	045 Compare X0, 0
	046 JumpIfEqual {134}
	047 Move X1, X31
	048 Call Transform.get_rotation, X0
	049 Move X0, X31
	050 Move V12, V0
	051 Move V13, V1
	052 Move V14, V2
	053 Move V15, V3
	054 Call Time.get_deltaTime
	055 Move [X31], S0
	056 Move V0, V8
	057 Move V1, V9
	058 Move V2, V10
	059 Move V3, V11
	060 Move V4, V12
	061 Move V5, V13
	062 Move V6, V14
	063 Move V7, V15
	064 Call VelocityExtension.AngularVelocityChange, X0, X1, V0
	065 Compare X20, 0
	066 JumpIfEqual {134}
	067 Move W8, [X20+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move W8, 12
	070 NotImplemented "Instruction MADD not yet implemented."
	071 Move [X8+32], S0
	072 Move [X8+40], S1
	073 Move [X8+40], S2
	074 Move X20, [X19+104]
	075 NotImplemented "Instruction LDRSW not yet implemented."
	076 Move X0, X31
	077 Call Time.get_deltaTime
	078 Compare X20, 0
	079 JumpIfEqual {134}
	080 Move W8, [X20+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Add X8, X20, X21
	083 Move [X8+32], S0
	084 Move W8, [X19+112]
	085 Move W9, 0x6667
	086 NotImplemented "Instruction MOVK not yet implemented."
	087 Move X0, X19
	088 Add W8, W8, 1
	089 NotImplemented "Instruction SMADDL not yet implemented."
	090 Move X10, X9
	091 ShiftRight X10, 32
	092 And X10, X10, 0x7FFFFFFF
	093 Move X9, X9
	094 ShiftRight X9, 63
	095 And X9, X9, 0x7FFFFFFF
	096 Add W9, W9, W10
	097 Add W9, W9, W9
	098 Subtract W8, W8, W9
	099 Move X1, X31
	100 Move [X19+112], W8
	101 Call Component.get_transform, X0
	102 Compare X0, 0
	103 JumpIfEqual {134}
	104 Move X1, X31
	105 Call Transform.get_position, X0
	106 Move X0, X19
	107 Move X1, X31
	108 Move [X19+56], S0
	109 Move [X19+64], S1
	110 Move [X19+64], S2
	111 Call Component.get_transform, X0
	112 Compare X0, 0
	113 JumpIfEqual {134}
	114 Move X1, X31
	115 Call Transform.get_rotation, X0
	116 Move [X19+68], S0
	117 Move [X19+76], S1
	118 Move [X19+76], S2
	119 Move [X19+84], S3
	120 Move X20, [X31+96]
	121 Move X19, [X31+104]
	122 Move X30, [X31+80]
	123 Move X21, [X31+88]
	124 Move D9, [X31+64]
	125 Move D8, [X31+72]
	126 Move D11, [X31+48]
	127 Move D10, [X31+56]
	128 Move D13, [X31+32]
	129 Move D12, [X31+40]
	130 Move D15, [X31+16]
	131 Move D14, [X31+24]
	132 Add X31, X31, 112
	133 Return 
	134 Call 0x1C17F20
	135 Call 0x1C17F28

Method: System.Void ResetVelocityTracking()

Disassembly:
	0x01F9E7B8 LDR W8, [X21 + 0x18]
	0x01F9E7BC CBZ W8, 0x1F9E804
	0x01F9E7C0 STR X20, [X21 + 0x20]
	0x01F9E7C4 CBZ X19, 0x1F9E7F4
	0x01F9E7C8 MOV X0, X19
	0x01F9E7CC MOV X1, X21
	0x01F9E7D0 LDP X20, X19, [X31 + 0x20]
	0x01F9E7D4 LDP X22, X21, [X31 + 0x10]
	0x01F9E7D8 MOV X2, X31
	0x01F9E7DC LDR X30, [X31], #0x30
	0x01F9E7E0 B 0x1EA2120
	0x01F9E7E4 LDP X20, X19, [X31 + 0x20]
	0x01F9E7E8 LDP X22, X21, [X31 + 0x10]
	0x01F9E7EC LDR X30, [X31], #0x30
	0x01F9E7F0 RET
	0x01F9E7F4 BL 0x1C16F20
	0x01F9E7F8 BL 0x1C16F44

ISIL:
	001 Move [X31-16], X30
	002 Move X10, [X0+104]
	003 Compare X10, 0
	004 JumpIfEqual {16}
	005 Move W9, [X10+24]
	006 Move X8, X31
	007 Add X10, X10, 32
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move [X10], W31
	010 Add X8, X8, 1
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move [X0+112], W31
	013 Move X30, [X31+16]
	014 Return 
	015 Call 0x1C17F28
	016 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x01F9E7FC MOV X1, X31
	0x01F9E800 BL 0x1C16DEC
	0x01F9E804 BL 0x1C16F28
	0x01F9E808 STP X30, X21, [X31 - 0x20]!
	0x01F9E80C STP X20, X19, [X31 + 0x10]
	0x01F9E810 ADRP X20, 0x243B000
	0x01F9E814 LDRB W8, [X20 + 0x7B1]
	0x01F9E818 MOV X19, X0
	0x01F9E81C TBNZ X8, 0x0, 0x1F9E858
	0x01F9E820 ADRP X0, 0x2155000
	0x01F9E824 LDR X0, [X0 + 0xA28]
	0x01F9E828 BL 0x1C16CF4
	0x01F9E82C ADRP X0, 0x2159000
	0x01F9E830 LDR X0, [X0 + 0xF10]
	0x01F9E834 BL 0x1C16CF4
	0x01F9E838 ADRP X0, 0x2155000
	0x01F9E83C LDR X0, [X0 + 0x598]
	0x01F9E840 BL 0x1C16CF4
	0x01F9E844 ADRP X0, 0x217D000
	0x01F9E848 LDR X0, [X0 + 0x1B8]
	0x01F9E84C BL 0x1C16CF4
	0x01F9E850 MOVZ W8, 0x1
	0x01F9E854 STRB W8, [X20 + 0x7B1]
	0x01F9E858 ADRP X20, 0x2155000
	0x01F9E85C LDRB W8, [X19 + 0x44]
	0x01F9E860 LDR X20, [X20 + 0x598]
	0x01F9E864 CBZ W8, 0x1F9E894
	0x01F9E868 ADRP X8, 0x2155000
	0x01F9E86C LDR X8, [X8 + 0xA28]
	0x01F9E870 ADRP X21, 0x217D000
	0x01F9E874 LDR X0, [X8]
	0x01F9E878 LDR W8, [X0 + 0xE0]
	0x01F9E87C LDR X21, [X21 + 0x1B8]
	0x01F9E880 CBNZ W8, 0x1F9E888
	0x01F9E884 BL 0x1C16DFC
	0x01F9E888 LDR X0, [X21]
	0x01F9E88C MOV X1, X31
	0x01F9E890 BL 0x3C0649C
	0x01F9E894 STRB W31, [X19 + 0x44]
	0x01F9E898 LDR X0, [X20]
	0x01F9E89C LDR X20, [X19 + 0x38]
	0x01F9E8A0 LDR W8, [X0 + 0xE0]
	0x01F9E8A4 CBNZ W8, 0x1F9E8AC
	0x01F9E8A8 BL 0x1C16DFC
	0x01F9E8AC MOV X0, X20
	0x01F9E8B0 MOV X1, X31
	0x01F9E8B4 BL 0x3C38948
	0x01F9E8B8 TBZ X0, 0x0, 0x1F9E918
	0x01F9E8BC ADRP X8, 0x2159000
	0x01F9E8C0 LDR X8, [X8 + 0xF10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x243C000
	006 Move X21, 0x2156000
	007 Move W8, [X20+1958]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2156000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1958], W8
	019 Move X0, [X21]
	020 Move X20, [X19+48]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Call Object.op_Implicit, X0
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {60}
	032 Move X8, [X19+48]
	033 Compare X8, 0
	034 JumpIfEqual {75}
	035 Move X0, [X21]
	036 Move X20, [X8+48]
	037 Move W9, [X0+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X20
	042 Move X1, X31
	043 Call Object.op_Implicit, X0
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {60}
	048 Move X8, [X19+48]
	049 Compare X8, 0
	050 JumpIfEqual {75}
	051 Move X0, [X8+48]
	052 Compare X0, 0
	053 JumpIfEqual {75}
	054 Move X1, X31
	055 Call NetworkRunner.get_IsResimulation, X0
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {70}
	060 Move W8, [X19+32]
	061 Compare W8, 0
	062 JumpIfEqual {70}
	063 Move X0, X19
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Move X21, [X31+40]
	068 Call VelocitySmoother.TrackVelocity, X0
	069 Return 
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X30, [X31+32]
	073 Move X21, [X31+40]
	074 Return 
	075 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01F9E8C4 LDR X20, [X19 + 0x38]
	0x01F9E8C8 MOVZ W1, 0x1
	0x01F9E8CC LDR X0, [X8]
	0x01F9E8D0 BL 0x1C16D6C
	0x01F9E8D4 CBZ X0, 0x1F9E924
	0x01F9E8D8 LDR X8, [X0]
	0x01F9E8DC MOV X21, X0
	0x01F9E8E0 MOV X0, X19
	0x01F9E8E4 LDR X1, [X8 + 0x40]
	0x01F9E8E8 BL 0x1C16E00
	0x01F9E8EC CBZ X0, 0x1F9E928
	0x01F9E8F0 LDR W8, [X21 + 0x18]
	0x01F9E8F4 CBZ W8, 0x1F9E934
	0x01F9E8F8 STR X19, [X21 + 0x20]
	0x01F9E8FC CBZ X20, 0x1F9E924
	0x01F9E900 MOV X0, X20
	0x01F9E904 LDP X20, X19, [X31 + 0x10]
	0x01F9E908 MOV X1, X21
	0x01F9E90C MOV X2, X31
	0x01F9E910 LDP X30, X21, [X31], #0x20
	0x01F9E914 B 0x1EA2280
	0x01F9E918 LDP X20, X19, [X31 + 0x10]
	0x01F9E91C LDP X30, X21, [X31], #0x20
	0x01F9E920 RET
	0x01F9E924 BL 0x1C16F20
	0x01F9E928 BL 0x1C16F44
	0x01F9E92C MOV X1, X31
	0x01F9E930 BL 0x1C16DEC
	0x01F9E934 BL 0x1C16F28
	0x01F9E938 STP D11, D10, [X31 - 0x40]!
	0x01F9E93C STP D9, D8, [X31 + 0x10]
	0x01F9E940 STR X30, [X31 + 0x20]
	0x01F9E944 STP X20, X19, [X31 + 0x30]
	0x01F9E948 MOV X1, X31
	0x01F9E94C MOV V8.16B, V0.16B
	0x01F9E950 MOV X20, X0
	0x01F9E954 BL 0x3C32E90
	0x01F9E958 LDR X8, [X20 + 0x30]
	0x01F9E95C CBZ X8, 0x1F9E9DC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x243C000
	007 Move X21, 0x2158000
	008 Move X20, 0x2156000
	009 Move W8, [X22+1959]
	010 Move X21, [X21+2480]
	011 Move X20, [X20+1592]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2156000
	018 Move X0, [X0+1592]
	019 Call 0x1C17CF4
	020 Move X0, 0x2158000
	021 Move X0, [X0+2480]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+1959], W8
	025 Move W8, 257
	026 NotImplemented "Instruction STRH not yet implemented."
	027 Move X0, [X21]
	028 Move W1, 5
	029 Call 0x1C17D6C
	030 Move [X19+88], X0
	031 Move X0, [X21]
	032 Move W1, 5
	033 Call 0x1C17D6C
	034 Move [X19+96], X0
	035 Move X0, [X20]
	036 Move W1, 5
	037 Call 0x1C17D6C
	038 Move [X19+104], X0
	039 Move X0, X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X1, X31
	045 Move X30, [X31+48]
	046 Call MonoBehaviour..ctor, X0
	047 Return 

