Type: Fusion.XR.Host.Utils.HideForLocalUser

Method: System.Void Awake()

Disassembly:
	0x01F9D108 FSUB S6, S0, S2
	0x01F9D10C MOV X0, X19
	0x01F9D110 MOV V0.16B, V13.16B
	0x01F9D114 MOV V7.16B, V8.16B
	0x01F9D118 LDP X20, X19, [X31 + 0x50]
	0x01F9D11C LDR X30, [X31 + 0x40]
	0x01F9D120 LDP D9, D8, [X31 + 0x30]
	0x01F9D124 LDP D11, D10, [X31 + 0x20]
	0x01F9D128 LDP D13, D12, [X31 + 0x10]
	0x01F9D12C FADD S5, S16, S17
	0x01F9D130 FADD S16, S22, S23
	0x01F9D134 FADD S4, S18, S5
	0x01F9D138 FADD S5, S20, S16
	0x01F9D13C FSUB S4, S4, S19
	0x01F9D140 FSUB S5, S5, S21
	0x01F9D144 MOV V1.16B, V14.16B
	0x01F9D148 MOV V2.16B, V15.16B
	0x01F9D14C LDP D15, D14, [X31], #0x60
	0x01F9D150 B 0x1F9D158
	0x01F9D154 BL 0x1C16F20
	0x01F9D158 SUB X31, X31, 0x60
	0x01F9D15C STP D15, D14, [X31 + 0x10]
	0x01F9D160 STP D13, D12, [X31 + 0x20]
	0x01F9D164 STP D11, D10, [X31 + 0x30]
	0x01F9D168 STP D9, D8, [X31 + 0x40]
	0x01F9D16C STP X30, X19, [X31 + 0x50]
	0x01F9D170 CBZ X0, 0x1F9D224
	0x01F9D174 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x243D000
	006 Move X20, 0x2157000
	007 Move W8, [X21+1944]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x217F000
	015 Move X0, [X0+64]
	016 Call 0x1C17CF4
	017 Move X0, 0x2157000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1944], W8
	022 Move X0, [X20]
	023 Move X20, 0x217F000
	024 Move W8, [X0+224]
	025 Move X20, [X20+64]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, [X20]
	030 Call 0x222E02C
	031 Move [X19+152], X0
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 

Method: System.Void ConfigureCamera()

Disassembly:
	0x01F9D178 MOV V12.16B, V7.16B
	0x01F9D17C MOV V8.16B, V6.16B
	0x01F9D180 MOV V9.16B, V5.16B
	0x01F9D184 MOV V10.16B, V4.16B
	0x01F9D188 MOV V11.16B, V3.16B
	0x01F9D18C MOV V13.16B, V2.16B
	0x01F9D190 MOV V14.16B, V1.16B
	0x01F9D194 MOV V15.16B, V0.16B
	0x01F9D198 MOV X19, X0
	0x01F9D19C BL 0x3C32E90
	0x01F9D1A0 CBZ X0, 0x1F9D224
	0x01F9D1A4 MOV X1, X31
	0x01F9D1A8 BL 0x3C3F58C
	0x01F9D1AC FSUB S0, S15, S0
	0x01F9D1B0 FSUB S1, S14, S1
	0x01F9D1B4 FSUB S2, S13, S2
	0x01F9D1B8 FDIV S0, S0, S12
	0x01F9D1BC FDIV S1, S1, S12
	0x01F9D1C0 FDIV S2, S2, S12
	0x01F9D1C4 MOV X0, X19
	0x01F9D1C8 MOV X1, X31
	0x01F9D1CC BL 0x3C8E908
	0x01F9D1D0 MOV X0, X19
	0x01F9D1D4 MOV X1, X31
	0x01F9D1D8 BL 0x3C32E90
	0x01F9D1DC CBZ X0, 0x1F9D224
	0x01F9D1E0 MOV X1, X31
	0x01F9D1E4 BL 0x3C3DEB4
	0x01F9D1E8 MOV V4.16B, V11.16B
	0x01F9D1EC MOV V5.16B, V10.16B
	0x01F9D1F0 MOV V6.16B, V9.16B
	0x01F9D1F4 MOV V7.16B, V8.16B
	0x01F9D1F8 STR S12, [X31]
	0x01F9D1FC BL 0x1F9CD0C
	0x01F9D200 MOV X0, X19
	0x01F9D204 LDP X30, X19, [X31 + 0x50]
	0x01F9D208 LDP D9, D8, [X31 + 0x40]
	0x01F9D20C LDP D11, D10, [X31 + 0x30]
	0x01F9D210 LDP D13, D12, [X31 + 0x20]
	0x01F9D214 LDP D15, D14, [X31 + 0x10]
	0x01F9D218 MOV X1, X31
	0x01F9D21C ADD X31, X31, 0x60
	0x01F9D220 B 0x3C8EA40

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x243D000
	005 Move W8, [X19+1945]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x217F000
	012 Move X0, [X0+72]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X19+1945], W8
	016 Move X0, [X20+128]
	017 Move X1, X31
	018 Call LayerMask.NameToLayer, X0
	019 Add W31, W0, 1
	020 Move W8, [X20+144]
	021 Compare W8, 0
	022 JumpIfEqual {49}
	023 Move X8, [X20+152]
	024 Compare X8, 0
	025 JumpIfEqual {53}
	026 Move W19, W0
	027 Move X0, [X8+48]
	028 Compare X0, 0
	029 JumpIfEqual {53}
	030 Move X8, 0x217F000
	031 Move X8, [X8+72]
	032 Move X1, [X8]
	033 Call 0x21A4AF8, X0
	034 Compare X0, 0
	035 JumpIfEqual {53}
	036 Move X1, X31
	037 Move X20, X0
	038 Call Camera.get_cullingMask, X0
	039 Move W8, 1
	040 NotImplemented "Instruction LSLV not yet implemented."
	041 NotImplemented "Instruction BIC not yet implemented."
	042 Move X0, X20
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X2, X31
	046 Move X30, [X31+32]
	047 Call Camera.set_cullingMask, X0, X1
	048 Return 
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Return 
	053 Call 0x1C17F20

Method: System.Void Start()

Disassembly:
	0x01F9D224 BL 0x1C16F20

ISIL:
	001 Call HideForLocalUser.ConfigureCamera, X0
	002 Return 

Method: System.Void Spawned()

Disassembly:
	0x01F9D228 STR D14, [X31 - 0x60]!
	0x01F9D22C STP D13, D12, [X31 + 0x8]
	0x01F9D230 STP D11, D10, [X31 + 0x18]
	0x01F9D234 STP D9, D8, [X31 + 0x28]
	0x01F9D238 STR X30, [X31 + 0x38]
	0x01F9D23C STP X22, X21, [X31 + 0x40]
	0x01F9D240 STP X20, X19, [X31 + 0x50]
	0x01F9D244 ADRP X20, 0x243C000
	0x01F9D248 LDRB W8, [X20 + 0x7A4]
	0x01F9D24C MOV X19, X0
	0x01F9D250 TBNZ X8, 0x0, 0x1F9D268
	0x01F9D254 ADRP X0, 0x2156000
	0x01F9D258 LDR X0, [X0 + 0x598]
	0x01F9D25C BL 0x1C16CF4
	0x01F9D260 MOVZ W8, 0x1
	0x01F9D264 STRB W8, [X20 + 0x7A4]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call NetworkBehaviour.Spawned, X0
	006 Move X0, [X19+64]
	007 Compare X0, 0
	008 JumpIfEqual {23}
	009 Move X1, X31
	010 Call NetworkObject.get_HasInputAuthority, X0
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {18}
	015 Move X0, X19
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Move X0, X19
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Call HideForLocalUser.ConfigureRemoteRenderers, X0
	022 Return 
	023 Call 0x1C17F20

Method: System.Void ConfigureLocalRenderers()

Disassembly:
	0x01F9D268 ADRP X21, 0x243B000
	0x01F9D26C LDRB W8, [X21 + 0x783]
	0x01F9D270 CBNZ W8, 0x1F9D288
	0x01F9D274 ADRP X0, 0x2156000
	0x01F9D278 LDR X0, [X0 + 0x5A0]
	0x01F9D27C BL 0x1C16CF4
	0x01F9D280 MOVZ W8, 0x1
	0x01F9D284 STRB W8, [X21 + 0x783]
	0x01F9D288 LDR X11, [X19 + 0x68]
	0x01F9D28C CBZ X11, 0x1F9D4A0
	0x01F9D290 ADRP X22, 0x2156000
	0x01F9D294 LDR X22, [X22 + 0x5A0]
	0x01F9D298 MOV X8, X31
	0x01F9D29C MOV X9, X31
	0x01F9D2A0 FMOV S11, W31
	0x01F9D2A4 LDR X10, [X22]
	0x01F9D2A8 LDR X10, [X10 + 0xB8]
	0x01F9D2AC LDP S8, S9, [X10]
	0x01F9D2B0 LDR V10, [X10 + 0x8]
	0x01F9D2B4 LDR W10, [X11 + 0x18]
	0x01F9D2B8 ADD X11, X11, 0x20
	0x01F9D2BC MOV V12.16B, V8.16B
	0x01F9D2C0 MOV V13.16B, V9.16B
	0x01F9D2C4 MOV V14.16B, V10.16B
	0x01F9D2C8 CMP X9, X10
	0x01F9D2CC B.CS 0x1F9D49C
	0x01F9D2D0 LDR V0, [X11, X9, LSL #2]
	0x01F9D2D4 FCMP S0, 0x0
	0x01F9D2D8 B.EQ 0x1F9D30C
	0x01F9D2DC LDR X12, [X19 + 0x58]
	0x01F9D2E0 CBZ X12, 0x1F9D4A0
	0x01F9D2E4 LDR W13, [X12 + 0x18]
	0x01F9D2E8 CMP X9, X13
	0x01F9D2EC B.CS 0x1F9D49C
	0x01F9D2F0 ADD X12, X12, X8
	0x01F9D2F4 LDP S1, S2, [X12 + 0x20]
	0x01F9D2F8 LDR V3, [X12 + 0x28]
	0x01F9D2FC FADD S11, S11, S0
	0x01F9D300 FADD S12, S12, S1
	0x01F9D304 FADD S13, S13, S2
	0x01F9D308 FADD S14, S14, S3
	0x01F9D30C ADD X9, X9, 0x1
	0x01F9D310 CMP X9, 0x5
	0x01F9D314 ADD X8, X8, 0xC
	0x01F9D318 B.NE 0x1F9D2C8
	0x01F9D31C FCMP S11, 0x0
	0x01F9D320 B.EQ 0x1F9D470
	0x01F9D324 ADRP X8, 0x2156000
	0x01F9D328 LDR X8, [X8 + 0x598]
	0x01F9D32C LDR X20, [X19 + 0x28]
	0x01F9D330 LDR X0, [X8]
	0x01F9D334 LDR W8, [X0 + 0xE0]
	0x01F9D338 CBNZ W8, 0x1F9D340
	0x01F9D33C BL 0x1C16DFC
	0x01F9D340 MOV X0, X20
	0x01F9D344 MOV X1, X31
	0x01F9D348 FDIV S8, S12, S11
	0x01F9D34C FDIV S9, S13, S11
	0x01F9D350 FDIV S10, S14, S11
	0x01F9D354 BL 0x3C38948
	0x01F9D358 TBZ X0, 0x0, 0x1F9D470
	0x01F9D35C LDRB W8, [X19 + 0x21]
	0x01F9D360 CBZ W8, 0x1F9D470
	0x01F9D364 ADRP X20, 0x243B000
	0x01F9D368 LDRB W8, [X20 + 0x784]
	0x01F9D36C CBNZ W8, 0x1F9D384
	0x01F9D370 ADRP X0, 0x2156000
	0x01F9D374 LDR X0, [X0 + 0x5A8]
	0x01F9D378 BL 0x1C16CF4
	0x01F9D37C MOVZ W8, 0x1
	0x01F9D380 STRB W8, [X20 + 0x784]
	0x01F9D384 ADRP X20, 0x2156000
	0x01F9D388 LDR X20, [X20 + 0x5A8]
	0x01F9D38C LDR X0, [X20]
	0x01F9D390 LDR W8, [X0 + 0xE0]
	0x01F9D394 CBNZ W8, 0x1F9D39C
	0x01F9D398 BL 0x1C16DFC
	0x01F9D39C LDR X0, [X19 + 0x28]
	0x01F9D3A0 CBZ X0, 0x1F9D4A0
	0x01F9D3A4 FMUL S0, S8, S8
	0x01F9D3A8 FMUL S1, S9, S9
	0x01F9D3AC MOV X1, X31
	0x01F9D3B0 FADD S11, S1, S0
	0x01F9D3B4 FMUL S12, S10, S10
	0x01F9D3B8 BL 0x3C8E868
	0x01F9D3BC ADRP X19, 0x243B000
	0x01F9D3C0 LDRB W8, [X19 + 0x785]
	0x01F9D3C4 MOV V8.16B, V0.16B
	0x01F9D3C8 MOV V9.16B, V1.16B
	0x01F9D3CC MOV V10.16B, V2.16B
	0x01F9D3D0 CBNZ W8, 0x1F9D3E8
	0x01F9D3D4 ADRP X0, 0x2156000
	0x01F9D3D8 LDR X0, [X0 + 0x5A8]
	0x01F9D3DC BL 0x1C16CF4
	0x01F9D3E0 MOVZ W8, 0x1
	0x01F9D3E4 STRB W8, [X19 + 0x785]
	0x01F9D3E8 LDR X0, [X20]
	0x01F9D3EC FADD S11, S12, S11
	0x01F9D3F0 LDR W8, [X0 + 0xE0]
	0x01F9D3F4 CBNZ W8, 0x1F9D3FC
	0x01F9D3F8 BL 0x1C16DFC
	0x01F9D3FC FMUL S0, S8, S8
	0x01F9D400 FMUL S1, S9, S9
	0x01F9D404 ADRP X8, 0xFFFFFFFFFEB4D000
	0x01F9D408 FADD S0, S0, S1
	0x01F9D40C LDR V1, [X8 + 0x17C]
	0x01F9D410 FMUL S2, S10, S10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x243D000
	007 Move X20, 0x2157000
	008 Move W8, [X21+1946]
	009 Move X20, [X20+2440]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x2157000
	016 Move X0, [X0+2600]
	017 Call 0x1C17CF4
	018 Move X0, 0x2159000
	019 Move X0, [X0+1936]
	020 Call 0x1C17CF4
	021 Move X0, 0x217F000
	022 Move X0, [X0+80]
	023 Call 0x1C17CF4
	024 Move X0, 0x217F000
	025 Move X0, [X0+88]
	026 Call 0x1C17CF4
	027 Move X0, 0x2157000
	028 Move X0, [X0+2440]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+1946], W8
	032 Move X0, [X19+128]
	033 Move X1, [X20]
	034 Move X2, X31
	035 Call String.op_Inequality, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {92}
	040 Move X0, [X19+128]
	041 Move X1, X31
	042 Call LayerMask.NameToLayer, X0
	043 Add W31, W0, 1
	044 Move W8, [X19+145]
	045 Move W20, W0
	046 Compare W8, 0
	047 JumpIfEqual {78}
	048 Move X0, X19
	049 Move X1, X31
	050 Call Component.get_gameObject, X0
	051 Compare X0, 0
	052 JumpIfEqual {125}
	053 Move X8, 0x2159000
	054 Move X8, [X8+1936]
	055 Move X1, [X8]
	056 Call 0x21E6F08, X0
	057 Compare X0, 0
	058 JumpIfEqual {125}
	059 Move W8, [X0+24]
	060 Move X21, X0
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move W22, W31
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Add X8, X21, W22
	065 Move X0, [X8+32]
	066 Compare X0, 0
	067 JumpIfEqual {125}
	068 Move X1, X31
	069 Call Component.get_gameObject, X0
	070 Compare X0, 0
	071 JumpIfEqual {125}
	072 Move W1, W20
	073 Move X2, X31
	074 Call GameObject.set_layer, X0, X1
	075 Move W8, [X21+24]
	076 Add W22, W22, 1
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X0, X19
	079 Move X1, X31
	080 Call Component.get_gameObject, X0
	081 Compare X0, 0
	082 JumpIfEqual {125}
	083 Move W1, W20
	084 Move X20, [X31+32]
	085 Move X19, [X31+40]
	086 Move X22, [X31+16]
	087 Move X21, [X31+24]
	088 Move X2, X31
	089 Move X30, [X31+48]
	090 Call GameObject.set_layer, X0, X1
	091 Return 
	092 Move X20, [X31+32]
	093 Move X19, [X31+40]
	094 Move X22, [X31+16]
	095 Move X21, [X31+24]
	096 Move X30, [X31+48]
	097 Return 
	098 Move X8, 0x217F000
	099 Move X9, 0x217F000
	100 Move X1, [X19+128]
	101 Move X8, [X8+80]
	102 Move X9, [X9+88]
	103 Move X3, X31
	104 Move X0, [X8]
	105 Move X2, [X9]
	106 Call String.Concat, X0, X1, X2
	107 Move X8, 0x2157000
	108 Move X8, [X8+2600]
	109 Move X19, X0
	110 Move X8, [X8]
	111 Move W9, [X8+224]
	112 Compare W9, 0
	113 JumpIfNotEqual {116}
	114 Move X0, X8
	115 Call 0x1C17DFC
	116 Move X0, X19
	117 Move X20, [X31+32]
	118 Move X19, [X31+40]
	119 Move X22, [X31+16]
	120 Move X21, [X31+24]
	121 Move X1, X31
	122 Move X30, [X31+48]
	123 Call Debug.LogError, X0
	124 Return 
	125 Call 0x1C17F20
	126 Call 0x1C17F28

Method: System.Void ConfigureRemoteRenderers()

Disassembly:
	0x01F9D414 FADD S0, S2, S0
	0x01F9D418 FSQRT S2, S0
	0x01F9D41C FCMP S2, S1
	0x01F9D420 FSQRT S11, S11
	0x01F9D424 B.LE 0x1F9D438
	0x01F9D428 FDIV S0, S8, S2
	0x01F9D42C FDIV S1, S9, S2
	0x01F9D430 FDIV S2, S10, S2
	0x01F9D434 B 0x1F9D464
	0x01F9D438 LDRB W8, [X21 + 0x783]
	0x01F9D43C CBNZ W8, 0x1F9D454
	0x01F9D440 ADRP X0, 0x2156000
	0x01F9D444 LDR X0, [X0 + 0x5A0]
	0x01F9D448 BL 0x1C16CF4
	0x01F9D44C MOVZ W8, 0x1
	0x01F9D450 STRB W8, [X21 + 0x783]
	0x01F9D454 LDR X8, [X22]
	0x01F9D458 LDR X8, [X8 + 0xB8]
	0x01F9D45C LDP S0, S1, [X8]
	0x01F9D460 LDR V2, [X8 + 0x8]
	0x01F9D464 FMUL S8, S11, S0
	0x01F9D468 FMUL S9, S11, S1
	0x01F9D46C FMUL S10, S11, S2
	0x01F9D470 MOV V0.16B, V8.16B
	0x01F9D474 MOV V1.16B, V9.16B
	0x01F9D478 MOV V2.16B, V10.16B
	0x01F9D47C LDP X20, X19, [X31 + 0x50]
	0x01F9D480 LDP X22, X21, [X31 + 0x40]
	0x01F9D484 LDR X30, [X31 + 0x38]
	0x01F9D488 LDP D9, D8, [X31 + 0x28]
	0x01F9D48C LDP D11, D10, [X31 + 0x18]
	0x01F9D490 LDP D13, D12, [X31 + 0x8]
	0x01F9D494 LDR V14, [X31], #0x60
	0x01F9D498 RET
	0x01F9D49C BL 0x1C16F28
	0x01F9D4A0 BL 0x1C16F20
	0x01F9D4A4 STR X30, [X31 - 0x20]!
	0x01F9D4A8 STP X20, X19, [X31 + 0x10]
	0x01F9D4AC ADRP X20, 0x243B000
	0x01F9D4B0 LDRB W8, [X20 + 0x783]
	0x01F9D4B4 MOV X19, X0
	0x01F9D4B8 CBNZ W8, 0x1F9D4D0
	0x01F9D4BC ADRP X0, 0x2156000
	0x01F9D4C0 LDR X0, [X0 + 0x5A0]
	0x01F9D4C4 BL 0x1C16CF4
	0x01F9D4C8 MOVZ W8, 0x1
	0x01F9D4CC STRB W8, [X20 + 0x783]
	0x01F9D4D0 LDR X12, [X19 + 0x68]
	0x01F9D4D4 CBZ X12, 0x1F9D584
	0x01F9D4D8 ADRP X11, 0x2156000
	0x01F9D4DC LDR X11, [X11 + 0x5A0]
	0x01F9D4E0 MOV X9, X31
	0x01F9D4E4 MOV X10, X31
	0x01F9D4E8 MOV W8, W31
	0x01F9D4EC LDR X11, [X11]
	0x01F9D4F0 LDR X11, [X11 + 0xB8]
	0x01F9D4F4 LDR V0, [X11]
	0x01F9D4F8 LDR V2, [X11 + 0x8]
	0x01F9D4FC LDR W11, [X12 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x243D000
	007 Move W8, [X20+1947]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2159000
	014 Move X0, [X0+1936]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+1947], W8
	018 Move X0, [X19+136]
	019 Move X1, X31
	020 Call LayerMask.NameToLayer, X0
	021 Move W8, [X19+145]
	022 Move W20, W0
	023 Compare W8, 0
	024 JumpIfEqual {55}
	025 Move X0, X19
	026 Move X1, X31
	027 Call Component.get_gameObject, X0
	028 Compare X0, 0
	029 JumpIfEqual {69}
	030 Move X8, 0x2159000
	031 Move X8, [X8+1936]
	032 Move X1, [X8]
	033 Call 0x21E6F08, X0
	034 Compare X0, 0
	035 JumpIfEqual {69}
	036 Move W8, [X0+24]
	037 Move X21, X0
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W22, W31
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Add X8, X21, W22
	042 Move X0, [X8+32]
	043 Compare X0, 0
	044 JumpIfEqual {69}
	045 Move X1, X31
	046 Call Component.get_gameObject, X0
	047 Compare X0, 0
	048 JumpIfEqual {69}
	049 Move W1, W20
	050 Move X2, X31
	051 Call GameObject.set_layer, X0, X1
	052 Move W8, [X21+24]
	053 Add W22, W22, 1
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X0, X19
	056 Move X1, X31
	057 Call Component.get_gameObject, X0
	058 Compare X0, 0
	059 JumpIfEqual {69}
	060 Move W1, W20
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X2, X31
	066 Move X30, [X31+48]
	067 Call GameObject.set_layer, X0, X1
	068 Return 
	069 Call 0x1C17F20
	070 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x01F9D500 ADD X12, X12, 0x20
	0x01F9D504 MOV V3.16B, V0.16B
	0x01F9D508 MOV V1.16B, V2.16B
	0x01F9D50C CMP X10, X11
	0x01F9D510 B.CS 0x1F9D580
	0x01F9D514 LDR V4, [X12, X10, LSL #2]
	0x01F9D518 FCMP S4, 0x0
	0x01F9D51C B.EQ 0x1F9D54C
	0x01F9D520 LDR X13, [X19 + 0x60]
	0x01F9D524 CBZ X13, 0x1F9D584
	0x01F9D528 LDR W14, [X13 + 0x18]
	0x01F9D52C CMP X10, X14
	0x01F9D530 B.CS 0x1F9D580
	0x01F9D534 ADD X13, X13, X9
	0x01F9D538 LDR V4, [X13 + 0x20]
	0x01F9D53C LDR V5, [X13 + 0x28]
	0x01F9D540 ADD W8, W8, 0x1
	0x01F9D544 FADD V3.2S, V3.2S, V4.2S
	0x01F9D548 FADD S1, S1, S5
	0x01F9D54C ADD X10, X10, 0x1
	0x01F9D550 CMP X10, 0x5
	0x01F9D554 ADD X9, X9, 0xC
	0x01F9D558 B.NE 0x1F9D50C
	0x01F9D55C CBZ W8, 0x1F9D570
	0x01F9D560 SCVTF S2, W8
	0x01F9D564 UNIMPLEMENTED
	0x00000000 INVALID
	0x01F9D56C FDIV S2, S1, S2
	0x01F9D570 LDP X20, X19, [X31 + 0x10]
	0x01F9D574 MOV S1, V0.S[1]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x243D000
	007 Move X22, 0x217F000
	008 Move X20, 0x217F000
	009 Move W8, [X21+1948]
	010 Move X22, [X22+96]
	011 Move X20, [X20+104]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x217F000
	018 Move X0, [X0+96]
	019 Call 0x1C17CF4
	020 Move X0, 0x217F000
	021 Move X0, [X0+104]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1948], W8
	025 Move X10, [X22]
	026 Move X8, [X20]
	027 Move W9, 257
	028 NotImplemented "Instruction STRH not yet implemented."
	029 Move X0, X19
	030 Move [X19+128], X10
	031 Move [X19+136], X8
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call NetworkBehaviour..ctor, X0
	039 Return 

