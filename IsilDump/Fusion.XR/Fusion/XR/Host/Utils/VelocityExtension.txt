Type: Fusion.XR.Host.Utils.VelocityExtension

Method: UnityEngine.Vector3 AngularVelocityChange(UnityEngine.Quaternion previousRotation, UnityEngine.Quaternion newRotation, System.Single elapsedTime)

Disassembly:
	0x01F9DD0C ADRP X8, 0x217E000
	0x01F9DD10 LDR X8, [X8 + 0x120]
	0x01F9DD14 LDR W10, [X21 + 0x1C]
	0x01F9DD18 LDR X9, [X24]
	0x01F9DD1C LDR X1, [X8]
	0x01F9DD20 LDR X8, [X21 + 0x10]
	0x01F9DD24 ADD W10, W10, 0x1
	0x01F9DD28 STR W10, [X21 + 0x1C]
	0x01F9DD2C CBZ X8, 0x1F9DF30
	0x01F9DD30 LDRSW X10, [X21 + 0x18]
	0x01F9DD34 LDR W11, [X8 + 0x18]
	0x01F9DD38 ADD X26, X19, 0x60
	0x01F9DD3C CMP W10, W11
	0x01F9DD40 B.CS 0x1F9DD58
	0x01F9DD44 ADD W9, W10, 0x1
	0x01F9DD48 ADD X8, X8, X10, 0x3, LSL
	0x01F9DD4C STR W9, [X21 + 0x18]
	0x01F9DD50 STR X1, [X8 + 0x20]
	0x01F9DD54 B 0x1F9DD6C
	0x01F9DD58 LDR X8, [X9 + 0x20]
	0x01F9DD5C MOV X0, X21
	0x01F9DD60 LDR X8, [X8 + 0xC0]
	0x01F9DD64 LDR X2, [X8 + 0x70]
	0x01F9DD68 BL 0x301BF90
	0x01F9DD6C LDR V0, [X31 + 0xA]
	0x01F9DD70 LDR X8, [X31 + 0xB0]
	0x01F9DD74 ADD X0, X31, 0x80
	0x01F9DD78 MOV W1, W20
	0x01F9DD7C MOV X2, X21
	0x01F9DD80 STR V0, [X31 + 0x8]
	0x01F9DD84 STR X8, [X31 + 0x90]
	0x01F9DD88 BL 0x1F9BA38
	0x01F9DD8C LDR X8, [X26 + 0x10]
	0x01F9DD90 LDR V0, [X26]
	0x01F9DD94 LDR X0, [X23]
	0x01F9DD98 STR X8, [X31 + 0x70]
	0x01F9DD9C STR V0, [X31 + 0x6]
	0x01F9DDA0 LDR W20, [X19 + 0x20]
	0x01F9DDA4 BL 0x1C16F10
	0x01F9DDA8 LDR X1, [X22]
	0x01F9DDAC MOV X21, X0
	0x01F9DDB0 BL 0x301B7C4
	0x01F9DDB4 CBZ X21, 0x1F9DF30
	0x01F9DDB8 LDR W10, [X21 + 0x1C]
	0x01F9DDBC LDR X1, [X25]
	0x01F9DDC0 LDR X8, [X21 + 0x10]
	0x01F9DDC4 LDR X9, [X24]
	0x01F9DDC8 ADD W10, W10, 0x1
	0x01F9DDCC STR W10, [X21 + 0x1C]
	0x01F9DDD0 CBZ X8, 0x1F9DF30
	0x01F9DDD4 LDRSW X10, [X21 + 0x18]
	0x01F9DDD8 LDR W11, [X8 + 0x18]
	0x01F9DDDC CMP W10, W11
	0x01F9DDE0 B.CS 0x1F9DDF8
	0x01F9DDE4 ADD W9, W10, 0x1
	0x01F9DDE8 ADD X8, X8, X10, 0x3, LSL
	0x01F9DDEC STR W9, [X21 + 0x18]
	0x01F9DDF0 STR X1, [X8 + 0x20]
	0x01F9DDF4 B 0x1F9DE0C
	0x01F9DDF8 LDR X8, [X9 + 0x20]
	0x01F9DDFC MOV X0, X21
	0x01F9DE00 LDR X8, [X8 + 0xC0]
	0x01F9DE04 LDR X2, [X8 + 0x70]
	0x01F9DE08 BL 0x301BF90
	0x01F9DE0C LDR V0, [X31 + 0x6]
	0x01F9DE10 LDR X8, [X31 + 0x70]
	0x01F9DE14 ADD X0, X31, 0x40
	0x01F9DE18 MOV W1, W20
	0x01F9DE1C MOV X2, X21
	0x01F9DE20 STR V0, [X31 + 0x4]
	0x01F9DE24 STR X8, [X31 + 0x50]
	0x01F9DE28 BL 0x1F9BA38
	0x01F9DE2C LDR X8, [X19 + 0xC0]
	0x01F9DE30 LDR V0, [X19 + 0xB]
	0x01F9DE34 LDR X0, [X23]
	0x01F9DE38 STR X8, [X31 + 0x30]
	0x01F9DE3C STR V0, [X31 + 0x2]
	0x01F9DE40 LDR W20, [X19 + 0x20]
	0x01F9DE44 BL 0x1C16F10
	0x01F9DE48 LDR X1, [X22]
	0x01F9DE4C MOV X21, X0
	0x01F9DE50 BL 0x301B7C4
	0x01F9DE54 CBZ X21, 0x1F9DF30
	0x01F9DE58 LDR W10, [X21 + 0x1C]
	0x01F9DE5C LDR X1, [X25]
	0x01F9DE60 LDR X8, [X21 + 0x10]
	0x01F9DE64 LDR X9, [X24]
	0x01F9DE68 ADD W10, W10, 0x1
	0x01F9DE6C STR W10, [X21 + 0x1C]
	0x01F9DE70 CBZ X8, 0x1F9DF30
	0x01F9DE74 LDRSW X10, [X21 + 0x18]
	0x01F9DE78 LDR W11, [X8 + 0x18]
	0x01F9DE7C ADRP X24, 0x217E000
	0x01F9DE80 ADRP X23, 0x217E000
	0x01F9DE84 ADRP X22, 0x217E000
	0x01F9DE88 LDR X24, [X24 + 0xF8]
	0x01F9DE8C LDR X23, [X23 + 0x100]
	0x01F9DE90 LDR X22, [X22 + 0x108]
	0x01F9DE94 CMP W10, W11
	0x01F9DE98 B.CS 0x1F9DEB0
	0x01F9DE9C ADD W9, W10, 0x1
	0x01F9DEA0 ADD X8, X8, X10, 0x3, LSL
	0x01F9DEA4 STR W9, [X21 + 0x18]
	0x01F9DEA8 STR X1, [X8 + 0x20]
	0x01F9DEAC B 0x1F9DEC4
	0x01F9DEB0 LDR X8, [X9 + 0x20]
	0x01F9DEB4 MOV X0, X21
	0x01F9DEB8 LDR X8, [X8 + 0xC0]
	0x01F9DEBC LDR X2, [X8 + 0x70]
	0x01F9DEC0 BL 0x301BF90
	0x01F9DEC4 LDR V0, [X31 + 0x2]
	0x01F9DEC8 LDR X8, [X31 + 0x30]
	0x01F9DECC ADD X0, X31, 0x0
	0x01F9DED0 MOV W1, W20
	0x01F9DED4 MOV X2, X21
	0x01F9DED8 STR V0, [X31]
	0x01F9DEDC STR X8, [X31 + 0x10]
	0x01F9DEE0 BL 0x1F9BA38
	0x01F9DEE4 LDR X1, [X24]
	0x01F9DEE8 MOV X0, X19
	0x01F9DEEC BL 0x21A3AF8
	0x01F9DEF0 STR X0, [X19 + 0x40]
	0x01F9DEF4 LDR X1, [X23]
	0x01F9DEF8 MOV X0, X19
	0x01F9DEFC BL 0x21A3AF8

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0x243D000
	014 Move X19, 0x215E000
	015 Move W8, [X20+1955]
	016 Move X19, [X19+1208]
	017 Move V9, V7
	018 Move V8, V6
	019 Move V10, V5
	020 Move V11, V4
	021 Move V12, V3
	022 Move V13, V2
	023 Move V14, V1
	024 Move V15, V0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0x215E000
	030 Move X0, [X0+1208]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+1955], W8
	034 Move V0, V15
	035 Move V1, V14
	036 Move V2, V13
	037 Move V3, V12
	038 Move X0, X31
	039 Move [X31+92], W31
	040 Move [X31+8], W31
	041 Move [X31], X31
	042 Call Quaternion.Inverse, X0
	043 Multiply S4, S9, S0
	044 Multiply S5, S11, S3
	045 Multiply S7, S8, S1
	046 Multiply S16, S9, S1
	047 Multiply S17, S10, S3
	048 Multiply S18, S8, S0
	049 Multiply S20, S11, S1
	050 Multiply S21, S11, S0
	051 Multiply S22, S10, S0
	052 Multiply S0, S10, S1
	053 Multiply S1, S9, S2
	054 Multiply S23, S9, S3
	055 Multiply S3, S8, S3
	056 Multiply S6, S10, S2
	057 Multiply S19, S11, S2
	058 Multiply S24, S8, S2
	059 Add S2, S4, S5
	060 Add S4, S16, S17
	061 Add S1, S1, S3
	062 Subtract S3, S23, S21
	063 Add S2, S6, S2
	064 Add S4, S18, S4
	065 Add S5, S20, S1
	066 Subtract S3, S3, S0
	067 Subtract S0, S2, S7
	068 Subtract S1, S4, S19
	069 Subtract S2, S5, S22
	070 Subtract S3, S3, S24
	071 Add X0, X31, 0
	072 Add X1, X31, 92
	073 Move X2, X31
	074 Call Quaternion.Internal_ToAxisAngleRad, X0, X1, X2
	075 Move X8, -21700608
	076 Move V0, [X31+92]
	077 Move V1, [X8+1096]
	078 Move W8, 0xC3B40000
	079 Move S2, W8
	080 Move W8, 0x43340000
	081 Move X9, [X19]
	082 Multiply S0, S0, S1
	083 Move S1, W8
	084 Add S2, S0, S2
	085 NotImplemented "Instruction FCMP not yet implemented."
	086 NotImplemented "Instruction FCSEL not yet implemented."
	087 Move [X31+92], S0
	088 Move X8, [X9+184]
	089 NotImplemented "Instruction FABS not yet implemented."
	090 Move V1, [X8]
	091 NotImplemented "Instruction FCMP not yet implemented."
	092 Move X8, -21700608
	093 Move V2, [X8+260]
	094 Move V1, [X31+112]
	095 Move V3, [X31]
	096 Move W9, 1
	097 Multiply S2, S0, S2
	098 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	099 NotImplemented "Instruction INVALID not yet implemented."
	100 NotImplemented "Instruction INVALID not yet implemented."
	101 Move W8, S0
	102 And W8, W8, 0x7FFFFFFF
	103 NotImplemented "Instruction MOVK not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X19, 0x243C000
	106 Move W8, [X19+1923]
	107 Compare W8, 0
	108 JumpIfNotEqual {114}
	109 Move X0, 0x2157000
	110 Move X0, [X0+1440]
	111 Call 0x1C17CF4
	112 Move W8, 1
	113 Move [X19+1923], W8
	114 Move X8, 0x2157000
	115 Move X8, [X8+1440]
	116 Move X8, [X8]
	117 Move X8, [X8+184]
	118 Move V0, [X8]
	119 Move V2, [X8+8]
	120 Move V3, [X31+8]
	121 Multiply S2, S2, S3
	122 NotImplemented "Instruction FDIV not yet implemented."
	123 Move X20, [X31+96]
	124 Move X19, [X31+104]
	125 Move X30, [X31+80]
	126 Move D9, [X31+64]
	127 Move D8, [X31+72]
	128 Move D11, [X31+48]
	129 Move D10, [X31+56]
	130 Move D13, [X31+32]
	131 Move D12, [X31+40]
	132 Move D15, [X31+16]
	133 Move D14, [X31+24]
	134 Move S1, V0.S[1]
	135 Add X31, X31, 112
	136 Return X0

Method: UnityEngine.Quaternion RotationFromAngularVelocity(UnityEngine.Transform transform, UnityEngine.Vector3 angularVelocity, System.Single time)

Disassembly:
	0x01F9DF00 STR X0, [X19 + 0xD8]
	0x01F9DF04 LDR X1, [X22]
	0x01F9DF08 MOV X0, X19
	0x01F9DF0C BL 0x21A3894
	0x01F9DF10 STR X0, [X19 + 0xD0]
	0x01F9DF14 LDP X20, X19, [X31 + 0x1C0]
	0x01F9DF18 LDP X22, X21, [X31 + 0x1B0]
	0x01F9DF1C LDP X24, X23, [X31 + 0x1A0]
	0x01F9DF20 LDP X26, X25, [X31 + 0x190]
	0x01F9DF24 LDP X29, X30, [X31 + 0x180]
	0x01F9DF28 ADD X31, X31, 0x1D0
	0x01F9DF2C RET
	0x01F9DF30 BL 0x1C16F20
	0x01F9DF34 SUB X31, X31, 0x60
	0x01F9DF38 STR X30, [X31 + 0x40]
	0x01F9DF3C STP X20, X19, [X31 + 0x50]
	0x01F9DF40 ADRP X20, 0x243C000
	0x01F9DF44 LDRB W8, [X20 + 0x7A9]
	0x01F9DF48 MOV X19, X0
	0x01F9DF4C TBNZ X8, 0x0, 0x1F9DF70
	0x01F9DF50 ADRP X0, 0x217E000
	0x01F9DF54 LDR X0, [X0 + 0x140]
	0x01F9DF58 BL 0x1C16CF4
	0x01F9DF5C ADRP X0, 0x215C000
	0x01F9DF60 LDR X0, [X0 + 0x8C0]
	0x01F9DF64 BL 0x1C16CF4
	0x01F9DF68 MOVZ W8, 0x1
	0x01F9DF6C STRB W8, [X20 + 0x7A9]
	0x01F9DF70 ADD X0, X19, 0x48
	0x01F9DF74 MOV X1, X31
	0x01F9DF78 BL 0x3745120
	0x01F9DF7C CBZ X0, 0x1F9E0C4
	0x01F9DF80 ADRP X20, 0x215C000
	0x01F9DF84 LDR X20, [X20 + 0x8C0]
	0x01F9DF88 LDR X1, [X20]
	0x01F9DF8C BL 0x21F5D8C
	0x01F9DF90 ADD X0, X19, 0x90
	0x01F9DF94 MOV X1, X31
	0x01F9DF98 STR S0, [X19 + 0x24]
	0x01F9DF9C BL 0x3745120
	0x01F9DFA0 CBZ X0, 0x1F9E0C4
	0x01F9DFA4 LDR X1, [X20]
	0x01F9DFA8 BL 0x21F5D8C
	0x01F9DFAC ADD X0, X19, 0x60
	0x01F9DFB0 MOV X1, X31
	0x01F9DFB4 STR S0, [X19 + 0x28]
	0x01F9DFB8 BL 0x3745120
	0x01F9DFBC CBZ X0, 0x1F9E0C4
	0x01F9DFC0 LDR X1, [X20]
	0x01F9DFC4 BL 0x21F5D8C
	0x01F9DFC8 ADD X0, X19, 0x78
	0x01F9DFCC MOV X1, X31
	0x01F9DFD0 STR S0, [X19 + 0x2C]
	0x01F9DFD4 BL 0x3745120
	0x01F9DFD8 CBZ X0, 0x1F9E0C4
	0x01F9DFDC LDR X1, [X20]
	0x01F9DFE0 BL 0x21F5D8C
	0x01F9DFE4 LDR W8, [X19 + 0xA8]
	0x01F9DFE8 LDRB W9, [X19 + 0xCC]
	0x01F9DFEC STR S0, [X19 + 0x30]
	0x01F9DFF0 STP W8, W31, [X19 + 0x34]
	0x01F9DFF4 CBZ W9, 0x1F9E020
	0x01F9DFF8 ADD X0, X19, 0xB0
	0x01F9DFFC MOV X1, X31
	0x01F9E000 BL 0x3745120
	0x01F9E004 CBZ X0, 0x1F9E0C4
	0x01F9E008 LDR X1, [X20]
	0x01F9E00C BL 0x21F5D8C
	0x01F9E010 LDR V1, [X19 + 0xC8]
	0x01F9E014 FCMP S0, S1
	0x01F9E018 CSET W8, GT
	0x01F9E01C STRB W8, [X19 + 0x3C]
	0x01F9E020 LDR X20, [X19 + 0xD8]
	0x01F9E024 CBZ X20, 0x1F9E0B4
	0x01F9E028 ADD X8, X19, 0x24
	0x01F9E02C LDR X9, [X8 + 0x10]
	0x01F9E030 LDR V0, [X8]
	0x01F9E034 ADRP X10, 0x217D000
	0x01F9E038 STR X9, [X31 + 0x10]
	0x01F9E03C STR V0, [X31]
	0x01F9E040 LDR X8, [X20]
	0x01F9E044 LDR X10, [X10 + 0x140]
	0x01F9E048 LDRH W9, [X8 + 0x12E]
	0x01F9E04C LDR X1, [X10]
	0x01F9E050 CBZ X9, 0x1F9E074
	0x01F9E054 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-80], D12
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x243C000
	011 Move W8, [X20+1924]
	012 Move V8, V3
	013 Move V9, V2
	014 Move V10, V1
	015 Move V11, V0
	016 Move X19, X0
	017 Compare W8, 0
	018 JumpIfNotEqual {24}
	019 Move X0, 0x2157000
	020 Move X0, [X0+1448]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+1924], W8
	024 Move X20, 0x2157000
	025 Move X20, [X20+1448]
	026 Move X0, [X20]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X21, 0x243C000
	032 Move W8, [X21+1925]
	033 Multiply S0, S11, S11
	034 Multiply S1, S10, S10
	035 Add S0, S0, S1
	036 Multiply S1, S9, S9
	037 Add S12, S1, S0
	038 Compare W8, 0
	039 JumpIfNotEqual {45}
	040 Move X0, 0x2157000
	041 Move X0, [X0+1448]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+1925], W8
	045 Move X0, [X20]
	046 NotImplemented "Instruction FSQRT not yet implemented."
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X8, -21700608
	052 Move V0, [X8+380]
	053 NotImplemented "Instruction FCMP not yet implemented."
	054 NotImplemented "Instruction FDIV not yet implemented."
	055 NotImplemented "Instruction FDIV not yet implemented."
	056 NotImplemented "Instruction FDIV not yet implemented."
	057 Move X20, 0x243C000
	058 Move W8, [X20+1923]
	059 Compare W8, 0
	060 JumpIfNotEqual {66}
	061 Move X0, 0x2157000
	062 Move X0, [X0+1440]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X20+1923], W8
	066 Move X8, 0x2157000
	067 Move X8, [X8+1440]
	068 Move X8, [X8]
	069 Move X8, [X8+184]
	070 Move S0, [X8]
	071 Move S1, [X8+4]
	072 Move V2, [X8+8]
	073 Compare X19, 0
	074 JumpIfEqual {100}
	075 Move X0, X19
	076 Move X1, X31
	077 Call Transform.InverseTransformVector, X0, X1
	078 Move X8, -21704704
	079 Move V3, V0
	080 Move V0, [X8+1096]
	081 Move V4, V1
	082 Multiply S1, S12, S8
	083 Move X20, [X31+64]
	084 Move X19, [X31+72]
	085 Move X30, [X31+48]
	086 Move X21, [X31+56]
	087 Move D9, [X31+32]
	088 Move D8, [X31+40]
	089 Move D11, [X31+16]
	090 Move D10, [X31+24]
	091 Move V5, V2
	092 Multiply S0, S1, S0
	093 Move V1, V3
	094 Move V2, V4
	095 Move V3, V5
	096 Move X0, X31
	097 Move V12, [X31+80]
	098 Call Quaternion.AngleAxis, V0, X0
	099 Return X0
	100 Call 0x1C17F20

Method: System.Void VelocityFollow(UnityEngine.Rigidbody followerRb, UnityEngine.Transform target, UnityEngine.Vector3 positionOffset, UnityEngine.Quaternion rotationOffset, System.Single elapsedTime)

Disassembly:
	0x01F9E058 ADD X10, X10, 0x8
	0x01F9E05C LDUR X11, [X10 - 0x8]
	0x01F9E060 CMP X11, X1
	0x01F9E064 B.EQ 0x1F9E084
	0x01F9E068 SUBS X9, X9, 0x1
	0x01F9E06C ADD X10, X10, 0x10
	0x01F9E070 B.NE 0x1F9E05C
	0x01F9E074 MOV X0, X20
	0x01F9E078 MOV W2, W31
	0x01F9E07C BL 0x1C5C788
	0x01F9E080 B 0x1F9E090
	0x01F9E084 LDRSW X9, [X10]
	0x01F9E088 ADD X8, X8, X9, 0x4, LSL
	0x01F9E08C ADD X0, X8, 0x138
	0x01F9E090 LDR V0, [X31]
	0x01F9E094 LDR X8, [X31 + 0x10]
	0x01F9E098 LDR X9, [X0]
	0x01F9E09C ADD X1, X31, 0x20
	0x01F9E0A0 STR V0, [X31 + 0x2]
	0x01F9E0A4 STR X8, [X31 + 0x30]
	0x01F9E0A8 LDR X2, [X0 + 0x8]
	0x01F9E0AC MOV X0, X20
	0x01F9E0B0 BLR X9
	0x01F9E0B4 LDP X20, X19, [X31 + 0x50]
	0x01F9E0B8 LDR X30, [X31 + 0x40]
	0x01F9E0BC ADD X31, X31, 0x60
	0x01F9E0C0 RET
	0x01F9E0C4 BL 0x1C16F20
	0x01F9E0C8 SUB X31, X31, 0x70
	0x01F9E0CC STP X30, X23, [X31 + 0x40]
	0x01F9E0D0 STP X22, X21, [X31 + 0x50]
	0x01F9E0D4 STP X20, X19, [X31 + 0x60]
	0x01F9E0D8 ADRP X21, 0x243B000
	0x01F9E0DC LDRB W9, [X21 + 0x7AA]
	0x01F9E0E0 MOV X20, X0
	0x01F9E0E4 MOV X19, X8
	0x01F9E0E8 TBNZ X9, 0x0, 0x1F9E13C
	0x01F9E0EC ADRP X0, 0x217D000
	0x01F9E0F0 LDR X0, [X0 + 0x148]
	0x01F9E0F4 BL 0x1C16CF4
	0x01F9E0F8 ADRP X0, 0x217D000
	0x01F9E0FC LDR X0, [X0 + 0x150]
	0x01F9E100 BL 0x1C16CF4
	0x01F9E104 ADRP X0, 0x217D000
	0x01F9E108 LDR X0, [X0 + 0x158]
	0x01F9E10C BL 0x1C16CF4
	0x01F9E110 ADRP X0, 0x217D000
	0x01F9E114 LDR X0, [X0 + 0x160]
	0x01F9E118 BL 0x1C16CF4
	0x01F9E11C ADRP X0, 0x217D000
	0x01F9E120 LDR X0, [X0 + 0x168]
	0x01F9E124 BL 0x1C16CF4
	0x01F9E128 ADRP X0, 0x217D000
	0x01F9E12C LDR X0, [X0 + 0x170]
	0x01F9E130 BL 0x1C16CF4
	0x01F9E134 MOVZ W8, 0x1
	0x01F9E138 STRB W8, [X21 + 0x7AA]
	0x01F9E13C STP X31, X31, [X31 + 0x18]
	0x01F9E140 STR W31, [X31 + 0x28]
	0x01F9E144 MOV X23, X20
	0x01F9E148 LDRB W8, [X23 + 0xE0]!
	0x01F9E14C CBZ W8, 0x1F9E174
	0x01F9E150 LDR X8, [X23 + 0x10]
	0x01F9E154 LDR V0, [X23]

ISIL:
	001 Move [X31-96], D15
	002 Move [X31-88], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Compare X1, 0
	013 JumpIfEqual {74}
	014 Move X20, X1
	015 Move X19, X0
	016 Move X0, X1
	017 Move X1, X31
	018 Move V8, V7
	019 Move V10, V6
	020 Move V9, V5
	021 Move V11, V4
	022 Move V12, V3
	023 Call Transform.TransformPoint, X0, X1
	024 Move X0, X20
	025 Move X1, X31
	026 Move V13, V0
	027 Move V14, V1
	028 Move V15, V2
	029 Call Transform.get_rotation, X0
	030 Multiply S4, S12, S3
	031 Multiply S5, S10, S0
	032 Multiply S16, S11, S3
	033 Multiply S19, S9, S0
	034 Multiply S20, S11, S0
	035 Multiply S0, S12, S0
	036 Multiply S22, S9, S3
	037 Multiply S3, S10, S3
	038 Multiply S6, S9, S1
	039 Multiply S17, S10, S1
	040 Multiply S21, S12, S1
	041 Multiply S1, S11, S1
	042 Add S4, S4, S5
	043 Subtract S0, S3, S0
	044 Multiply S7, S11, S2
	045 Multiply S18, S12, S2
	046 Multiply S23, S10, S2
	047 Multiply S2, S9, S2
	048 Add S3, S6, S4
	049 Subtract S0, S0, S1
	050 Subtract S3, S3, S7
	051 Subtract S6, S0, S2
	052 Move X0, X19
	053 Move V0, V13
	054 Move V7, V8
	055 Move X20, [X31+80]
	056 Move X19, [X31+88]
	057 Move X30, [X31+64]
	058 Move D9, [X31+48]
	059 Move D8, [X31+56]
	060 Move D11, [X31+32]
	061 Move D10, [X31+40]
	062 Move D13, [X31+16]
	063 Move D12, [X31+24]
	064 Add S5, S16, S17
	065 Add S16, S22, S23
	066 Add S4, S18, S5
	067 Add S5, S20, S16
	068 Subtract S4, S4, S19
	069 Subtract S5, S5, S21
	070 Move V1, V14
	071 Move V2, V15
	072 Move D15, [X31+96]
	073 Move D14, [X31+104]
	074 Call 0x1C17F20

Method: System.Void VelocityFollow(UnityEngine.Rigidbody followerRb, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, System.Single elapsedTime)

Disassembly:
	0x01F9E158 LDP X22, X21, [X31 + 0x50]
	0x01F9E15C LDP X30, X23, [X31 + 0x40]
	0x01F9E160 STR X8, [X19 + 0x10]
	0x01F9E164 STR V0, [X19]
	0x01F9E168 LDP X20, X19, [X31 + 0x60]
	0x01F9E16C ADD X31, X31, 0x70
	0x01F9E170 RET
	0x01F9E174 ADRP X10, 0x217D000
	0x01F9E178 LDR W8, [X20 + 0x20]
	0x01F9E17C LDR X10, [X10 + 0x160]
	0x01F9E180 MOVZ W9, 0x260
	0x01F9E184 CMP W8, 0x2
	0x01F9E188 LDR X0, [X10]
	0x01F9E18C MOVZ W8, 0x160
	0x01F9E190 CSEL W22, W8, W9, EQ
	0x01F9E194 BL 0x1C16F10
	0x01F9E198 ADRP X8, 0x217D000
	0x01F9E19C LDR X8, [X8 + 0x148]
	0x01F9E1A0 MOV X21, X0
	0x01F9E1A4 LDR X1, [X8]
	0x01F9E1A8 BL 0x2FD0B40
	0x01F9E1AC MOV W0, W22
	0x01F9E1B0 MOV X1, X21
	0x01F9E1B4 MOV X2, X31
	0x01F9E1B8 BL 0x3E64D3C
	0x01F9E1BC CBZ X21, 0x1F9E24C
	0x01F9E1C0 LDR W8, [X21 + 0x18]
	0x01F9E1C4 CMP W8, 0x1
	0x01F9E1C8 B.LT 0x1F9E150
	0x01F9E1CC ADRP X8, 0x217D000
	0x01F9E1D0 LDR X8, [X8 + 0x158]
	0x01F9E1D4 MOV X0, X21
	0x01F9E1D8 MOV W1, W31
	0x01F9E1DC LDR X2, [X8]
	0x01F9E1E0 BL 0x2FD1048
	0x01F9E1E4 STP X0, X1, [X31 + 0x30]
	0x01F9E1E8 ADRP X9, 0x217D000
	0x01F9E1EC LDR X9, [X9 + 0x168]
	0x01F9E1F0 MOV X8, X0
	0x01F9E1F4 MOV X2, X1
	0x01F9E1F8 ADD X0, X31, 0x0
	0x01F9E1FC LDR X3, [X9]
	0x01F9E200 MOV X1, X8
	0x01F9E204 STP X31, X31, [X31]
	0x01F9E208 STR X31, [X31 + 0x10]
	0x01F9E20C BL 0x2432DD8
	0x01F9E210 LDR X8, [X31 + 0x10]
	0x01F9E214 LDR V0, [X31]
	0x01F9E218 ADD X0, X31, 0x30
	0x01F9E21C ADD X1, X31, 0x18
	0x01F9E220 MOV X2, X31
	0x01F9E224 STR X8, [X23 + 0x10]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+88], X19
	012 Compare X0, 0
	013 JumpIfEqual {66}
	014 Move X1, X31
	015 Move V12, V7
	016 Move V8, V6
	017 Move V9, V5
	018 Move V10, V4
	019 Move V11, V3
	020 Move V13, V2
	021 Move V14, V1
	022 Move V15, V0
	023 Move X19, X0
	024 Call Component.get_transform, X0
	025 Compare X0, 0
	026 JumpIfEqual {66}
	027 Move X1, X31
	028 Call Transform.get_position, X0
	029 Subtract S0, S15, S0
	030 Subtract S1, S14, S1
	031 Subtract S2, S13, S2
	032 NotImplemented "Instruction FDIV not yet implemented."
	033 NotImplemented "Instruction FDIV not yet implemented."
	034 NotImplemented "Instruction FDIV not yet implemented."
	035 Move X0, X19
	036 Move X1, X31
	037 Call Rigidbody.set_velocity, X0, X1
	038 Move X0, X19
	039 Move X1, X31
	040 Call Component.get_transform, X0
	041 Compare X0, 0
	042 JumpIfEqual {66}
	043 Move X1, X31
	044 Call Transform.get_rotation, X0
	045 Move V4, V11
	046 Move V5, V10
	047 Move V6, V9
	048 Move V7, V8
	049 Move [X31], S12
	050 Call VelocityExtension.AngularVelocityChange, X0, X1, V0
	051 Move X0, X19
	052 Move X30, [X31+80]
	053 Move X19, [X31+88]
	054 Move D9, [X31+64]
	055 Move D8, [X31+72]
	056 Move D11, [X31+48]
	057 Move D10, [X31+56]
	058 Move D13, [X31+32]
	059 Move D12, [X31+40]
	060 Move D15, [X31+16]
	061 Move D14, [X31+24]
	062 Move X1, X31
	063 Add X31, X31, 96
	064 Call Rigidbody.set_angularVelocity, X0, X1
	065 Return 
	066 Call 0x1C17F20

