Type: UnityEngine.Experimental.Rendering.RenderGraphModule.TextureResource

Method: System.String GetName()

Disassembly:
	0x0399BB84 STP X22, X21, [X31 + 0x30]
	0x0399BB88 STP X20, X19, [X31 + 0x40]
	0x0399BB8C ADRP X20, 0xA46000
	0x0399BB90 ADRP X21, 0x780000
	0x0399BB94 ADRP X22, 0x758000
	0x0399BB98 LDRB W8, [X20 + 0xB53]
	0x0399BB9C LDR X21, [X21 + 0x2C8]
	0x0399BBA0 LDR X22, [X22 + 0x598]
	0x0399BBA4 MOV X19, X0
	0x0399BBA8 TBNZ X8, 0x0, 0x399BCC8
	0x0399BBAC ADRP X0, 0x75C000
	0x0399BBB0 LDR X0, [X0 + 0xB00]
	0x0399BBB4 BL 0x1C16CF4
	0x0399BBB8 ADRP X0, 0x7B6000
	0x0399BBBC LDR X0, [X0 + 0xC0]
	0x0399BBC0 BL 0x1C16CF4
	0x0399BBC4 ADRP X0, 0x7B6000
	0x0399BBC8 LDR X0, [X0 + 0xC8]
	0x0399BBCC BL 0x1C16CF4
	0x0399BBD0 ADRP X0, 0x7B6000
	0x0399BBD4 LDR X0, [X0 + 0xD0]
	0x0399BBD8 BL 0x1C16CF4
	0x0399BBDC ADRP X0, 0x7B6000
	0x0399BBE0 LDR X0, [X0 + 0xD8]
	0x0399BBE4 BL 0x1C16CF4
	0x0399BBE8 ADRP X0, 0x780000
	0x0399BBEC LDR X0, [X0 + 0x2C8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA47000
	005 Move W8, [X20+2888]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x7B6000
	012 Move X0, [X0+4064]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2888], W8
	016 Move W8, [X19+16]
	017 Compare W8, 0
	018 JumpIfEqual {22}
	019 Move W8, [X19+17]
	020 Compare W8, 0
	021 JumpIfEqual {23}
	022 Add X8, X19, 128
	023 Move X8, [X19+168]
	024 Move X9, 0x7B6000
	025 Move X9, [X9+4064]
	026 Add X10, X8, 88
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CSEL not yet implemented."
	029 Move X0, [X8]
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return X0

Method: System.Void CreatePooledGraphicsResource()

Disassembly:
	0x0399BBF0 BL 0x1C16CF4
	0x0399BBF4 ADRP X0, 0x7B5000
	0x0399BBF8 LDR X0, [X0 + 0x778]
	0x0399BBFC BL 0x1C16CF4
	0x0399BC00 ADRP X0, 0x758000
	0x0399BC04 LDR X0, [X0 + 0xA28]
	0x0399BC08 BL 0x1C16CF4
	0x0399BC0C ADRP X0, 0x7B6000
	0x0399BC10 LDR X0, [X0 + 0xE0]
	0x0399BC14 BL 0x1C16CF4
	0x0399BC18 ADRP X0, 0x7B6000
	0x0399BC1C LDR X0, [X0 + 0xE8]
	0x0399BC20 BL 0x1C16CF4
	0x0399BC24 ADRP X0, 0x7B6000
	0x0399BC28 LDR X0, [X0 + 0xF0]
	0x0399BC2C BL 0x1C16CF4
	0x0399BC30 ADRP X0, 0x7B6000
	0x0399BC34 LDR X0, [X0 + 0xF8]
	0x0399BC38 BL 0x1C16CF4
	0x0399BC3C ADRP X0, 0x79E000
	0x0399BC40 LDR X0, [X0 + 0x6A0]
	0x0399BC44 BL 0x1C16CF4
	0x0399BC48 ADRP X0, 0x7B6000
	0x0399BC4C LDR X0, [X0 + 0x100]
	0x0399BC50 BL 0x1C16CF4
	0x0399BC54 ADRP X0, 0x783000
	0x0399BC58 LDR X0, [X0 + 0xBD0]
	0x0399BC5C BL 0x1C16CF4
	0x0399BC60 ADRP X0, 0x759000
	0x0399BC64 LDR X0, [X0 + 0xE58]
	0x0399BC68 BL 0x1C16CF4
	0x0399BC6C ADRP X0, 0x758000
	0x0399BC70 LDR X0, [X0 + 0x598]
	0x0399BC74 BL 0x1C16CF4
	0x0399BC78 ADRP X0, 0x7B5000
	0x0399BC7C LDR X0, [X0 + 0x7A0]
	0x0399BC80 BL 0x1C16CF4
	0x0399BC84 ADRP X0, 0x7B6000
	0x0399BC88 LDR X0, [X0 + 0x108]
	0x0399BC8C BL 0x1C16CF4
	0x0399BC90 ADRP X0, 0x7B6000
	0x0399BC94 LDR X0, [X0 + 0x110]
	0x0399BC98 BL 0x1C16CF4
	0x0399BC9C ADRP X0, 0x758000
	0x0399BCA0 LDR X0, [X0 + 0x830]
	0x0399BCA4 BL 0x1C16CF4
	0x0399BCA8 ADRP X0, 0x7B6000
	0x0399BCAC LDR X0, [X0 + 0x118]
	0x0399BCB0 BL 0x1C16CF4
	0x0399BCB4 ADRP X0, 0x7B6000
	0x0399BCB8 LDR X0, [X0 + 0x120]
	0x0399BCBC BL 0x1C16CF4
	0x0399BCC0 MOVZ W8, 0x1
	0x0399BCC4 STRB W8, [X20 + 0xB53]
	0x0399BCC8 LDR X1, [X21]
	0x0399BCCC MOV X0, X19
	0x0399BCD0 BL 0x21A3894
	0x0399BCD4 STR X0, [X19 + 0x30]
	0x0399BCD8 STR X0, [X19 + 0x58]
	0x0399BCDC MOV X20, X0
	0x0399BCE0 LDR X0, [X22]
	0x0399BCE4 LDR W8, [X0 + 0xE0]
	0x0399BCE8 CBNZ W8, 0x399BCF0
	0x0399BCEC BL 0x1C16DFC
	0x0399BCF0 MOV X0, X20
	0x0399BCF4 MOV X1, X31
	0x0399BCF8 MOV X2, X31
	0x0399BCFC BL 0x3C3883C
	0x0399BD00 TBZ X0, 0x0, 0x399BD44
	0x0399BD04 ADRP X8, 0x758000
	0x0399BD08 LDR X8, [X8 + 0xA28]
	0x0399BD0C ADRP X19, 0x7B6000
	0x0399BD10 LDR X0, [X8]
	0x0399BD14 LDR W8, [X0 + 0xE0]
	0x0399BD18 LDR X19, [X19 + 0x120]
	0x0399BD1C CBNZ W8, 0x399BD24
	0x0399BD20 BL 0x1C16DFC
	0x0399BD24 LDR X0, [X19]
	0x0399BD28 LDP X20, X19, [X31 + 0x40]
	0x0399BD2C LDP X22, X21, [X31 + 0x30]
	0x0399BD30 LDP X24, X23, [X31 + 0x20]
	0x0399BD34 LDP X26, X25, [X31 + 0x10]
	0x0399BD38 MOV X1, X31
	0x0399BD3C LDR X30, [X31], #0x50
	0x0399BD40 B 0x3C0649C
	0x0399BD44 LDR X8, [X19 + 0x20]
	0x0399BD48 CBZ X8, 0x399BE8C
	0x0399BD4C LDR W8, [X8 + 0x18]
	0x0399BD50 ADRP X9, 0x7B6000
	0x0399BD54 STR W8, [X19 + 0x28]
	0x0399BD58 LDR X9, [X9 + 0x100]
	0x0399BD5C ADD W1, W8, 0x1
	0x0399BD60 LDR X0, [X9]
	0x0399BD64 BL 0x1C16D6C
	0x0399BD68 LDR X8, [X19 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xA47000
	007 Move W8, [X20+2889]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x7B6000
	014 Move X0, [X0+4072]
	015 Call 0x1C17CF4
	016 Move X0, 0x7B6000
	017 Move X0, [X0+4080]
	018 Call 0x1C17CF4
	019 Move X0, 0x7B6000
	020 Move X0, [X0+2568]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2889], W8
	024 Add X0, X19, 48
	025 Move X1, X31
	026 Call TextureDesc.GetHashCode, X0
	027 Move X2, X19
	028 Add X2, X2, 168
	029 Move X8, [X2]
	030 Compare X8, 0
	031 JumpIfNotEqual {83}
	032 Move X21, [X19+40]
	033 Compare X21, 0
	034 JumpIfEqual {82}
	035 Move X8, 0x7B6000
	036 Move X8, [X8+2568]
	037 Move X9, [X21]
	038 Move X8, [X8]
	039 Move W11, [X9+304]
	040 Move W10, [X8+304]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X9, [X9+200]
	043 Add X9, X9, X10
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X8, 0x7B6000
	047 Move X8, [X8+4080]
	048 Move X22, 0x7B6000
	049 Move W20, W0
	050 Move X0, X21
	051 Move X3, [X8]
	052 Move X22, [X22+4072]
	053 Move W1, W20
	054 Call 0x25C8C34, X0, X1, X2
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {65}
	059 Move X8, [X19]
	060 Move X1, [X19+128]
	061 Move X0, X19
	062 Move X9, [X8+472]
	063 Move X2, [X8+480]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move [X19+24], W20
	066 Move X2, [X19+168]
	067 Move X3, [X22]
	068 Move X0, X21
	069 Move W1, W20
	070 Call 0x25C90FC, X0, X1, X2
	071 Move X8, [X19+168]
	072 Compare X8, 0
	073 JumpIfEqual {82}
	074 Move X9, [X19+128]
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move [X8+88], X9
	080 Move X30, [X31+48]
	081 Return 
	082 Call 0x1C17F20
	083 Move X8, [X19]
	084 Move X0, X19
	085 Move X9, [X8+392]
	086 Move X1, [X8+400]
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move X19, X0
	089 Move X0, 0x7B6000
	090 Move X0, [X0+4088]
	091 Call 0x1C17D08
	092 Move X1, X19
	093 Move X2, X31
	094 Call String.Format, X0, X1
	095 Move X19, X0
	096 Move X0, 0x759000
	097 Move X0, [X0+1456]
	098 Call 0x1C17D08
	099 Call 0x1C17F10
	100 Move X1, X19
	101 Move X2, X31
	102 Move X20, X0
	103 Call InvalidOperationException..ctor, X0, X1
	104 Move X0, 0x7B7000
	105 Move X0, [X0]
	106 Call 0x1C17D08
	107 Move X1, X0
	108 Move X0, X20
	109 Call 0x1C17DEC

Method: System.Void ReleasePooledGraphicsResource(System.Int32 frameIndex)

Disassembly:
	0x0399BD6C STR X0, [X19 + 0x60]
	0x0399BD70 CBZ X8, 0x399BE8C
	0x0399BD74 ADRP X9, 0x759000
	0x0399BD78 LDR W8, [X8 + 0x18]
	0x0399BD7C LDR X9, [X9 + 0xE58]
	0x0399BD80 ADD W1, W8, 0x1
	0x0399BD84 LDR X0, [X9]
	0x0399BD88 BL 0x1C16D6C
	0x0399BD8C LDR X8, [X19 + 0x20]
	0x0399BD90 STR X0, [X19 + 0x68]
	0x0399BD94 CBZ X8, 0x399BE8C
	0x0399BD98 ADRP X24, 0x783000
	0x0399BD9C ADRP X25, 0x758000
	0x0399BDA0 LDR X24, [X24 + 0xBD0]
	0x0399BDA4 LDR X25, [X25 + 0x830]
	0x0399BDA8 MOV X23, X31
	0x0399BDAC LDR W21, [X8 + 0x18]
	0x0399BDB0 CMP X23, W21, SXTW
	0x0399BDB4 B.GE 0x399BE90
	0x0399BDB8 CMP X23, X21
	0x0399BDBC B.CS 0x399C084
	0x0399BDC0 LDR X0, [X22]
	0x0399BDC4 ADD X8, X8, X23, 0x3, LSL
	0x0399BDC8 LDR X20, [X8 + 0x20]
	0x0399BDCC LDR W9, [X0 + 0xE0]
	0x0399BDD0 CBNZ W9, 0x399BDD8
	0x0399BDD4 BL 0x1C16DFC
	0x0399BDD8 MOV X0, X20
	0x0399BDDC MOV X1, X31
	0x0399BDE0 MOV X2, X31
	0x0399BDE4 BL 0x3C354F8
	0x0399BDE8 LDR X26, [X19 + 0x60]
	0x0399BDEC TBZ X0, 0x0, 0x399BE1C
	0x0399BDF0 CBZ X20, 0x399BE8C
	0x0399BDF4 MOV X0, X20
	0x0399BDF8 MOV X1, X31
	0x0399BDFC BL 0x3C389D4
	0x0399BE00 LDR X8, [X24]
	0x0399BE04 MOV X21, X0
	0x0399BE08 MOV X0, X8
	0x0399BE0C BL 0x1C16F10
	0x0399BE10 MOV X20, X0
	0x0399BE14 MOV X1, X21
	0x0399BE18 B 0x399BE2C
	0x0399BE1C LDR X0, [X24]
	0x0399BE20 BL 0x1C16F10
	0x0399BE24 LDR X1, [X25]
	0x0399BE28 MOV X20, X0
	0x0399BE2C MOV X2, X31
	0x0399BE30 BL 0x3C6CE5C
	0x0399BE34 CBZ X26, 0x399BE8C
	0x0399BE38 CBZ X20, 0x399BE50
	0x0399BE3C LDR X8, [X26]
	0x0399BE40 MOV X0, X20
	0x0399BE44 LDR X1, [X8 + 0x40]
	0x0399BE48 BL 0x1C16E00
	0x0399BE4C CBZ X0, 0x399C088
	0x0399BE50 LDR W8, [X26 + 0x18]
	0x0399BE54 CMP X23, X8
	0x0399BE58 B.CS 0x399C084
	0x0399BE5C ADD X8, X26, X23, 0x3, LSL
	0x0399BE60 STR X20, [X8 + 0x20]
	0x0399BE64 LDR X8, [X19 + 0x68]
	0x0399BE68 CBZ X8, 0x399BE8C
	0x0399BE6C LDR W9, [X8 + 0x18]
	0x0399BE70 CMP X23, X9
	0x0399BE74 B.CS 0x399C084
	0x0399BE78 ADD X8, X8, X23, 0x2, LSL
	0x0399BE7C STR W23, [X8 + 0x20]
	0x0399BE80 LDR X8, [X19 + 0x20]
	0x0399BE84 ADD X23, X23, 0x1
	0x0399BE88 CBNZ X8, 0x399BDAC
	0x0399BE8C BL 0x1C16F20
	0x0399BE90 LDR X0, [X24]
	0x0399BE94 LDR X22, [X19 + 0x60]
	0x0399BE98 BL 0x1C16F10
	0x0399BE9C ADRP X8, 0x7B6000
	0x0399BEA0 LDR X8, [X8 + 0x108]
	0x0399BEA4 MOV X2, X31
	0x0399BEA8 MOV X20, X0
	0x0399BEAC LDR X1, [X8]
	0x0399BEB0 BL 0x3C6CE5C
	0x0399BEB4 CBZ X22, 0x399BE8C
	0x0399BEB8 CBZ X20, 0x399BED0
	0x0399BEBC LDR X8, [X22]
	0x0399BEC0 MOV X0, X20
	0x0399BEC4 LDR X1, [X8 + 0x40]
	0x0399BEC8 BL 0x1C16E00

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA47000
	006 Move W8, [X21+2890]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x7B7000
	014 Move X0, [X0+8]
	015 Call 0x1C17CF4
	016 Move X0, 0x7B7000
	017 Move X0, [X0+16]
	018 Call 0x1C17CF4
	019 Move X0, 0x7B6000
	020 Move X0, [X0+2568]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2890], W8
	024 Move X2, [X19+168]
	025 Compare X2, 0
	026 JumpIfEqual {65}
	027 Move X21, [X19+40]
	028 Compare X21, 0
	029 JumpIfEqual {55}
	030 Move X8, 0x7B6000
	031 Move X8, [X8+2568]
	032 Move X9, [X21]
	033 Move X8, [X8]
	034 Move W11, [X9+304]
	035 Move W10, [X8+304]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X9, [X9+200]
	038 Add X9, X9, X10
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X8, 0x7B7000
	042 Move W1, [X19+24]
	043 Move X8, [X8+8]
	044 Move X0, X21
	045 Move W3, W20
	046 Move X4, [X8]
	047 Call 0x25C8B20, X0, X1, X2, X3
	048 Move X8, 0x7B7000
	049 Move W1, [X19+24]
	050 Move X2, [X19+168]
	051 Move X8, [X8+16]
	052 Move X0, X21
	053 Move X3, [X8]
	054 Call 0x25C91A4, X0, X1, X2
	055 Move X8, [X19]
	056 Move X0, X19
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X1, X31
	060 Move X3, [X8+376]
	061 Move X2, [X8+384]
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 CallNoReturn X3
	065 Move X8, [X19]
	066 Move X0, X19
	067 Move X9, [X8+392]
	068 Move X1, [X8+400]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X19, X0
	071 Move X0, 0x7B7000
	072 Move X0, [X0+24]
	073 Call 0x1C17D08
	074 Move X20, X0
	075 Move X0, 0x7B6000
	076 Move X0, [X0+3832]
	077 Call 0x1C17D08
	078 Move X2, X0
	079 Move X0, X20
	080 Move X1, X19
	081 Move X3, X31
	082 Call String.Concat, X0, X1, X2
	083 Move X19, X0
	084 Move X0, 0x759000
	085 Move X0, [X0+1456]
	086 Call 0x1C17D08
	087 Call 0x1C17F10
	088 Move X1, X19
	089 Move X2, X31
	090 Move X20, X0
	091 Call InvalidOperationException..ctor, X0, X1
	092 Move X0, 0x7B7000
	093 Move X0, [X0+32]
	094 Call 0x1C17D08
	095 Move X1, X0
	096 Move X0, X20
	097 Call 0x1C17DEC

Method: System.Void CreateGraphicsResource(System.String name = )

Disassembly:
	0x0399BECC CBZ X0, 0x399C088
	0x0399BED0 LDR W8, [X22 + 0x18]
	0x0399BED4 CMP W21, W8
	0x0399BED8 B.CS 0x399C084
	0x0399BEDC UBFM X8, X21, 0x20, 0x1F
	0x0399BEE0 ADD X8, X22, X8, 0x1D, ASR
	0x0399BEE4 STR X20, [X8 + 0x20]
	0x0399BEE8 LDR X9, [X19 + 0x20]
	0x0399BEEC CBZ X9, 0x399BE8C
	0x0399BEF0 LDR X8, [X19 + 0x68]
	0x0399BEF4 CBZ X8, 0x399BE8C
	0x0399BEF8 LDR X9, [X9 + 0x18]
	0x0399BEFC LDR W10, [X8 + 0x18]
	0x0399BF00 CMP W9, W10
	0x0399BF04 B.CS 0x399C084
	0x0399BF08 UBFM X10, X9, 0x20, 0x1F
	0x0399BF0C ADD X8, X8, X10, 0x1E, ASR
	0x0399BF10 STR W9, [X8 + 0x20]
	0x0399BF14 ADRP X8, 0x7B6000
	0x0399BF18 LDR X8, [X8 + 0xE8]
	0x0399BF1C LDR X0, [X8]
	0x0399BF20 BL 0x1C16F10
	0x0399BF24 MOV X20, X0
	0x0399BF28 BL 0x399C0B4
	0x0399BF2C CBZ X20, 0x399BE8C
	0x0399BF30 ADRP X8, 0x7B6000
	0x0399BF34 LDR X8, [X8 + 0x118]
	0x0399BF38 ADRP X22, 0x79E000
	0x0399BF3C LDR X8, [X8]
	0x0399BF40 STR X8, [X20 + 0x28]
	0x0399BF44 LDR X22, [X22 + 0x6A0]
	0x0399BF48 LDR X0, [X22]
	0x0399BF4C BL 0x1C16F10
	0x0399BF50 ADRP X8, 0x7B6000
	0x0399BF54 LDR X8, [X8 + 0xC0]
	0x0399BF58 MOV X1, X19
	0x0399BF5C MOV X3, X31
	0x0399BF60 MOV X21, X0
	0x0399BF64 LDR X2, [X8]
	0x0399BF68 BL 0x2D27710
	0x0399BF6C STR X21, [X20 + 0x48]
	0x0399BF70 ADRP X23, 0x75C000
	0x0399BF74 LDR X23, [X23 + 0xB00]
	0x0399BF78 LDR X0, [X23]
	0x0399BF7C BL 0x1C16F10
	0x0399BF80 ADRP X8, 0x7B6000
	0x0399BF84 LDR X8, [X8 + 0xC8]
	0x0399BF88 MOV X1, X19
	0x0399BF8C MOV X3, X31
	0x0399BF90 MOV X21, X0
	0x0399BF94 LDR X2, [X8]
	0x0399BF98 BL 0x2983F04
	0x0399BF9C STR X21, [X20 + 0x50]
	0x0399BFA0 LDR X8, [X19 + 0x60]
	0x0399BFA4 ADRP X9, 0x7B6000
	0x0399BFA8 LDR X9, [X9 + 0xE0]
	0x0399BFAC MOV X0, X20
	0x0399BFB0 STR X8, [X20 + 0x60]
	0x0399BFB4 LDR X1, [X19 + 0x68]
	0x0399BFB8 LDR X2, [X9]
	0x0399BFBC BL 0x2BA9724
	0x0399BFC0 LDR X0, [X22]
	0x0399BFC4 BL 0x1C16F10
	0x0399BFC8 ADRP X8, 0x7B6000
	0x0399BFCC LDR X8, [X8 + 0xD0]
	0x0399BFD0 MOV X1, X19
	0x0399BFD4 MOV X3, X31
	0x0399BFD8 MOV X21, X0
	0x0399BFDC LDR X2, [X8]
	0x0399BFE0 BL 0x2D27710
	0x0399BFE4 STR X21, [X20 + 0x80]
	0x0399BFE8 LDR X0, [X23]
	0x0399BFEC BL 0x1C16F10
	0x0399BFF0 ADRP X8, 0x7B6000
	0x0399BFF4 LDR X8, [X8 + 0xD8]
	0x0399BFF8 MOV X1, X19
	0x0399BFFC MOV X3, X31
	0x0399C000 MOV X21, X0
	0x0399C004 LDR X2, [X8]
	0x0399C008 BL 0x2983F04
	0x0399C00C STR X21, [X20 + 0x88]
	0x0399C010 STR X20, [X19 + 0x70]
	0x0399C014 ADRP X8, 0x7B4000
	0x0399C018 LDR X8, [X8 + 0x778]
	0x0399C01C LDR X0, [X8]
	0x0399C020 LDR W8, [X0 + 0xE0]
	0x0399C024 CBNZ W8, 0x399C02C
	0x0399C028 BL 0x1C16DFC
	0x0399C02C BL 0x399C120
	0x0399C030 CBZ X0, 0x399BE8C
	0x0399C034 ADRP X8, 0x7B5000
	0x0399C038 LDR X8, [X8 + 0x110]
	0x0399C03C MOVZ W2, 0x1
	0x0399C040 MOV W3, W31
	0x0399C044 MOV W4, W31
	0x0399C048 LDR X1, [X8]
	0x0399C04C BL 0x399C198
	0x0399C050 CBZ X0, 0x399BE8C
	0x0399C054 LDR X0, [X0 + 0x28]
	0x0399C058 CBZ X0, 0x399BE8C
	0x0399C05C ADRP X8, 0x7B4000
	0x0399C060 LDR X1, [X19 + 0x70]
	0x0399C064 LDR X8, [X8 + 0x7A0]
	0x0399C068 LDP X20, X19, [X31 + 0x40]
	0x0399C06C LDP X22, X21, [X31 + 0x30]
	0x0399C070 LDP X24, X23, [X31 + 0x20]
	0x0399C074 LDR X2, [X8]
	0x0399C078 LDP X26, X25, [X31 + 0x10]
	0x0399C07C LDR X30, [X31], #0x50
	0x0399C080 B 0x2497EC8
	0x0399C084 BL 0x1C16F28
	0x0399C088 BL 0x1C16F44
	0x0399C08C MOV X1, X31
	0x0399C090 BL 0x1C16DEC
	0x0399C094 STR X30, [X31 - 0x10]!
	0x0399C098 LDR X8, [X0 + 0x20]
	0x0399C09C CBZ X8, 0x399C0B0
	0x0399C0A0 LDR W8, [X8 + 0x18]
	0x0399C0A4 ADD W0, W8, 0x1
	0x0399C0A8 LDR X30, [X31], #0x10
	0x0399C0AC RET
	0x0399C0B0 BL 0x1C16F20
	0x0399C0B4 STP X30, X21, [X31 - 0x20]!
	0x0399C0B8 STP X20, X19, [X31 + 0x10]
	0x0399C0BC ADRP X21, 0xA45000
	0x0399C0C0 ADRP X20, 0x7B5000
	0x0399C0C4 LDRB W8, [X21 + 0xC15]
	0x0399C0C8 LDR X20, [X20 + 0x128]
	0x0399C0CC MOV X19, X0
	0x0399C0D0 TBNZ X8, 0x0, 0x399C0F4
	0x0399C0D4 ADRP X0, 0x7B5000
	0x0399C0D8 LDR X0, [X0 + 0x130]
	0x0399C0DC BL 0x1C16CF4
	0x0399C0E0 ADRP X0, 0x7B5000
	0x0399C0E4 LDR X0, [X0 + 0x128]
	0x0399C0E8 BL 0x1C16CF4
	0x0399C0EC MOVZ W8, 0x1
	0x0399C0F0 STRB W8, [X21 + 0xC15]
	0x0399C0F4 LDR X0, [X20]
	0x0399C0F8 ADRP X20, 0x7B5000
	0x0399C0FC LDR W8, [X0 + 0xE0]
	0x0399C100 LDR X20, [X20 + 0x130]
	0x0399C104 CBNZ W8, 0x399C10C
	0x0399C108 BL 0x1C16DFC
	0x0399C10C LDR X1, [X20]
	0x0399C110 MOV X0, X19
	0x0399C114 LDP X20, X19, [X31 + 0x10]
	0x0399C118 LDP X30, X21, [X31], #0x20
	0x0399C11C B 0x2BAA280
	0x0399C120 STR X30, [X31 - 0x20]!
	0x0399C124 STP X20, X19, [X31 + 0x10]
	0x0399C128 ADRP X20, 0xA45000
	0x0399C12C ADRP X19, 0x7B4000
	0x0399C130 LDRB W8, [X20 + 0xBC8]
	0x0399C134 LDR X19, [X19 + 0x778]
	0x0399C138 TBNZ X8, 0x0, 0x399C15C
	0x0399C13C ADRP X0, 0x7B4000
	0x0399C140 LDR X0, [X0 + 0x778]
	0x0399C144 BL 0x1C16CF4
	0x0399C148 ADRP X0, 0x7B5000
	0x0399C14C LDR X0, [X0 + 0x138]
	0x0399C150 BL 0x1C16CF4
	0x0399C154 MOVZ W8, 0x1
	0x0399C158 STRB W8, [X20 + 0xBC8]
	0x0399C15C LDR X0, [X19]
	0x0399C160 LDR W8, [X0 + 0xE0]
	0x0399C164 CBNZ W8, 0x399C170
	0x0399C168 BL 0x1C16DFC
	0x0399C16C LDR X0, [X19]
	0x0399C170 LDR X8, [X0 + 0xB8]
	0x0399C174 LDR X0, [X8]
	0x0399C178 CBZ X0, 0x399C194
	0x0399C17C ADRP X8, 0x7B5000
	0x0399C180 LDR X8, [X8 + 0x138]
	0x0399C184 LDP X20, X19, [X31 + 0x10]
	0x0399C188 LDR X1, [X8]
	0x0399C18C LDR X30, [X31], #0x20
	0x0399C190 B 0x2EE8EE4
	0x0399C194 BL 0x1C16F20
	0x0399C198 STR X30, [X31 - 0x40]!
	0x0399C19C STP X24, X23, [X31 + 0x10]
	0x0399C1A0 STP X22, X21, [X31 + 0x20]
	0x0399C1A4 STP X20, X19, [X31 + 0x30]
	0x0399C1A8 ADRP X20, 0xA45000
	0x0399C1AC LDRB W8, [X20 + 0xBDA]
	0x0399C1B0 MOV W24, W4
	0x0399C1B4 MOV W21, W3
	0x0399C1B8 MOV W23, W2
	0x0399C1BC MOV X22, X1
	0x0399C1C0 MOV X19, X0
	0x0399C1C4 TBNZ X8, 0x0, 0x399C20C
	0x0399C1C8 ADRP X0, 0x7B5000
	0x0399C1CC LDR X0, [X0 + 0x140]
	0x0399C1D0 BL 0x1C16CF4
	0x0399C1D4 ADRP X0, 0x7B5000
	0x0399C1D8 LDR X0, [X0 + 0x148]
	0x0399C1DC BL 0x1C16CF4
	0x0399C1E0 ADRP X0, 0x7B5000
	0x0399C1E4 LDR X0, [X0 + 0x150]
	0x0399C1E8 BL 0x1C16CF4
	0x0399C1EC ADRP X0, 0x7B5000
	0x0399C1F0 LDR X0, [X0 + 0x158]
	0x0399C1F4 BL 0x1C16CF4
	0x0399C1F8 ADRP X0, 0x7B5000
	0x0399C1FC LDR X0, [X0 + 0x160]
	0x0399C200 BL 0x1C16CF4
	0x0399C204 MOVZ W8, 0x1
	0x0399C208 STRB W8, [X20 + 0xBDA]
	0x0399C20C MOV X0, X19
	0x0399C210 MOV X1, X22
	0x0399C214 BL 0x39AA180
	0x0399C218 TBNZ X0, 0x1F, 0x399C28C
	0x0399C21C MOV W1, W0
	0x0399C220 LDR X0, [X19 + 0x30]
	0x0399C224 CBZ X0, 0x399C37C
	0x0399C228 ADRP X8, 0x7B5000
	0x0399C22C LDR X8, [X8 + 0x158]
	0x0399C230 LDR X2, [X8]
	0x0399C234 BL 0x301BCCC
	0x0399C238 CBZ X0, 0x399C28C
	0x0399C23C MOV X20, X0
	0x0399C240 TBZ X24, 0x0, 0x399C364
	0x0399C244 ADRP X8, 0x7B5000
	0x0399C248 LDR X8, [X8 + 0x140]
	0x0399C24C LDR X0, [X8]
	0x0399C250 BL 0x1C16F10
	0x0399C254 ADRP X8, 0x7B5000
	0x0399C258 LDR X8, [X8 + 0x148]
	0x0399C25C MOV X1, X19
	0x0399C260 MOV X3, X31
	0x0399C264 MOV X24, X0
	0x0399C268 LDR X2, [X8]
	0x0399C26C BL 0x2A6B948
	0x0399C270 MOV X0, X20
	0x0399C274 MOV X1, X24
	0x0399C278 MOV X2, X31
	0x0399C27C BL 0x39AF724
	0x0399C280 MOV X0, X19
	0x0399C284 MOV X1, X20
	0x0399C288 BL 0x39AA378
	0x0399C28C TBZ X23, 0x0, 0x399C340
	0x0399C290 ADRP X8, 0x7B5000
	0x0399C294 LDR X8, [X8 + 0x160]
	0x0399C298 LDR X0, [X8]
	0x0399C29C BL 0x1C16F10
	0x0399C2A0 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+144], D10
	003 Move [X31+160], D9
	004 Move [X31+168], D8
	005 Move [X31+176], X29
	006 Move [X31+184], X30
	007 Move [X31+192], X28
	008 Move [X31+200], X27
	009 Move [X31+208], X26
	010 Move [X31+216], X25
	011 Move [X31+224], X24
	012 Move [X31+232], X23
	013 Move [X31+240], X22
	014 Move [X31+248], X21
	015 Move [X31+256], X20
	016 Move [X31+264], X19
	017 Move X21, 0xA47000
	018 Move X22, 0x759000
	019 Move W8, [X21+2891]
	020 Move X22, [X22+2440]
	021 Move X20, X1
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {44}
	027 Move X0, 0x759000
	028 Move X0, [X0+1880]
	029 Call 0x1C17CF4
	030 Move X0, 0x7B6000
	031 Move X0, [X0+2480]
	032 Call 0x1C17CF4
	033 Move X0, 0x7B6000
	034 Move X0, [X0+2688]
	035 Call 0x1C17CF4
	036 Move X0, 0x7B7000
	037 Move X0, [X0+40]
	038 Call 0x1C17CF4
	039 Move X0, 0x759000
	040 Move X0, [X0+2440]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X21+2891], W8
	044 Move X1, [X22]
	045 Move X0, X20
	046 Move X2, X31
	047 Call String.op_Equality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {73}
	052 Move X8, 0x7B6000
	053 Move X8, [X8+2688]
	054 Add X1, X31, 156
	055 Move X8, [X8]
	056 Move X8, [X8+184]
	057 Move W9, [X8]
	058 Add W10, W9, 1
	059 Move [X8], W10
	060 Move X8, 0x759000
	061 Move X8, [X8+1880]
	062 Move [X31+156], W9
	063 Move X0, [X8]
	064 Call 0x1C17E04
	065 Move X8, 0x7B7000
	066 Move X8, [X8+40]
	067 Move X1, X0
	068 Move X2, X31
	069 Move X8, [X8]
	070 Move X0, X8
	071 Call String.Format, X0, X1
	072 Move X20, X0
	073 Move W8, [X19+48]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Compare W8, 0
	077 JumpIfNotEqual {284}
	078 Move X8, 0x7B6000
	079 Move W14, [X19+52]
	080 Move W1, [X19+56]
	081 Move W2, [X19+60]
	082 Move W3, [X19+80]
	083 Move W4, [X19+84]
	084 Move W5, [X19+88]
	085 Move W6, [X19+92]
	086 Move W7, [X19+96]
	087 Move W21, [X19+100]
	088 Move W22, [X19+101]
	089 Move W24, [X19+102]
	090 Move W27, [X19+103]
	091 Move W15, [X19+104]
	092 Move V8, [X19+108]
	093 Move X8, [X8+2480]
	094 Move W23, [X19+112]
	095 Move W28, [X19+116]
	096 Move W29, [X19+117]
	097 Move X0, [X8]
	098 Move W25, [X19+120]
	099 Move W26, [X19+124]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {122}
	103 Move [X31+132], W2
	104 Move [X31+136], W14
	105 Move [X31+152], W1
	106 Move [X31+124], W4
	107 Move [X31+128], W3
	108 Move [X31+116], W6
	109 Move [X31+120], W5
	110 Move [X31+108], W15
	111 Move [X31+112], W7
	112 Call 0x1C17DFC
	113 Move W15, [X31+108]
	114 Move W7, [X31+112]
	115 Move W6, [X31+116]
	116 Move W5, [X31+120]
	117 Move W4, [X31+124]
	118 Move W3, [X31+128]
	119 Move W2, [X31+132]
	120 Move W14, [X31+136]
	121 Move W1, [X31+152]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 NotImplemented "Instruction CSET not yet implemented."
	124 NotImplemented "Instruction CMP not yet implemented."
	125 NotImplemented "Instruction CSET not yet implemented."
	126 NotImplemented "Instruction CMP not yet implemented."
	127 NotImplemented "Instruction CSET not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 NotImplemented "Instruction CSET not yet implemented."
	130 NotImplemented "Instruction CMP not yet implemented."
	131 NotImplemented "Instruction CSET not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 NotImplemented "Instruction CSET not yet implemented."
	134 Move V0, V8
	135 Move W0, W14
	136 Move [X31+80], X20
	137 Move [X31+88], X31
	138 Move [X31+72], W26
	139 Move [X31+64], W25
	140 Move [X31+40], W23
	141 Move [X31+32], W15
	142 Move [X31+56], W8
	143 Move [X31+48], W9
	144 Move [X31+24], W10
	145 Move [X31+16], W11
	146 Move [X31+8], W12
	147 Move [X31], W13
	148 Call RTHandles.Alloc, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, V0, X13, X14, X15, X16, X17, X18
	149 Move X8, 0x7B5000
	150 Move X13, [X19+72]
	151 Move W1, [X19+60]
	152 Move W2, [X19+80]
	153 Move W3, [X19+84]
	154 Move W4, [X19+88]
	155 Move W5, [X19+92]
	156 Move W6, [X19+96]
	157 Move W29, [X19+100]
	158 Move W21, [X19+101]
	159 Move W23, [X19+102]
	160 Move W26, [X19+103]
	161 Move W14, [X19+104]
	162 Move V8, [X19+108]
	163 Move X8, [X8+2480]
	164 Move W22, [X19+112]
	165 Move W27, [X19+116]
	166 Move W28, [X19+117]
	167 Move X0, [X8]
	168 Move W24, [X19+120]
	169 Move W25, [X19+124]
	170 Move W8, [X0+224]
	171 Compare W8, 0
	172 JumpIfNotEqual {190}
	173 Move [X31+136], X13
	174 Move [X31+152], W1
	175 Move [X31+128], W3
	176 Move [X31+132], W2
	177 Move [X31+120], W5
	178 Move [X31+124], W4
	179 Move [X31+112], W14
	180 Move [X31+116], W6
	181 Call 0x1C17DFC
	182 Move W14, [X31+112]
	183 Move W6, [X31+116]
	184 Move W5, [X31+120]
	185 Move W4, [X31+124]
	186 Move W3, [X31+128]
	187 Move W2, [X31+132]
	188 Move W1, [X31+152]
	189 Move X13, [X31+136]
	190 NotImplemented "Instruction CMP not yet implemented."
	191 NotImplemented "Instruction CSET not yet implemented."
	192 NotImplemented "Instruction CMP not yet implemented."
	193 NotImplemented "Instruction CSET not yet implemented."
	194 NotImplemented "Instruction CMP not yet implemented."
	195 NotImplemented "Instruction CSET not yet implemented."
	196 NotImplemented "Instruction CMP not yet implemented."
	197 NotImplemented "Instruction CSET not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 NotImplemented "Instruction CSET not yet implemented."
	200 NotImplemented "Instruction CMP not yet implemented."
	201 NotImplemented "Instruction CSET not yet implemented."
	202 Move V0, V8
	203 Move X0, X13
	204 Move [X31+72], X20
	205 Move [X31+80], X31
	206 Move [X31+64], W25
	207 Move [X31+56], W24
	208 Move [X31+32], W22
	209 Move [X31+24], W14
	210 Move [X31+48], W8
	211 Move [X31+40], W9
	212 Move [X31+16], W10
	213 Move [X31+8], W11
	214 Move [X31], W12
	215 Call RTHandles.Alloc, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, V0, X12, X13, X14, X15, X16, X17
	216 Move X8, 0x7B5000
	217 Move S8, [X19+64]
	218 Move S9, [X19+68]
	219 Move W12, [X19+60]
	220 Move W1, [X19+80]
	221 Move W2, [X19+84]
	222 Move W3, [X19+88]
	223 Move W4, [X19+92]
	224 Move W5, [X19+96]
	225 Move W28, [X19+100]
	226 Move W29, [X19+101]
	227 Move W22, [X19+102]
	228 Move W25, [X19+103]
	229 Move W13, [X19+104]
	230 Move V10, [X19+108]
	231 Move X8, [X8+2480]
	232 Move W21, [X19+112]
	233 Move W26, [X19+116]
	234 Move W27, [X19+117]
	235 Move X0, [X8]
	236 Move W23, [X19+120]
	237 Move W24, [X19+124]
	238 Move W8, [X0+224]
	239 Compare W8, 0
	240 JumpIfNotEqual {256}
	241 Move [X31+132], W2
	242 Move [X31+136], W12
	243 Move [X31+152], W1
	244 Move [X31+124], W4
	245 Move [X31+128], W3
	246 Move [X31+116], W13
	247 Move [X31+120], W5
	248 Call 0x1C17DFC
	249 Move W13, [X31+116]
	250 Move W5, [X31+120]
	251 Move W4, [X31+124]
	252 Move W3, [X31+128]
	253 Move W2, [X31+132]
	254 Move W12, [X31+136]
	255 Move W1, [X31+152]
	256 NotImplemented "Instruction CMP not yet implemented."
	257 NotImplemented "Instruction CSET not yet implemented."
	258 NotImplemented "Instruction CMP not yet implemented."
	259 NotImplemented "Instruction CSET not yet implemented."
	260 NotImplemented "Instruction CMP not yet implemented."
	261 NotImplemented "Instruction CSET not yet implemented."
	262 NotImplemented "Instruction CMP not yet implemented."
	263 NotImplemented "Instruction CSET not yet implemented."
	264 NotImplemented "Instruction CMP not yet implemented."
	265 NotImplemented "Instruction CSET not yet implemented."
	266 NotImplemented "Instruction CMP not yet implemented."
	267 NotImplemented "Instruction CSET not yet implemented."
	268 Move V0, V8
	269 Move V1, V9
	270 Move V2, V10
	271 Move W0, W12
	272 Move [X31+64], X20
	273 Move [X31+72], X31
	274 Move [X31+56], W24
	275 Move [X31+48], W23
	276 Move [X31+24], W21
	277 Move [X31+16], W13
	278 Move [X31+40], W8
	279 Move [X31+32], W9
	280 Move [X31+8], W10
	281 Move [X31], W11
	282 Call RTHandles.Alloc, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, V0, X12, X13, X14, X15, X16, X17
	283 Move [X19+168], X0
	284 Move X20, [X31+256]
	285 Move X19, [X31+264]
	286 Move X22, [X31+240]
	287 Move X21, [X31+248]
	288 Move X24, [X31+224]
	289 Move X23, [X31+232]
	290 Move X26, [X31+208]
	291 Move X25, [X31+216]
	292 Move X28, [X31+192]
	293 Move X27, [X31+200]
	294 Move X29, [X31+176]
	295 Move X30, [X31+184]
	296 Move D9, [X31+160]
	297 Move D8, [X31+168]
	298 Move V10, [X31+144]
	299 Add X31, X31, 272
	300 Return 

Method: System.Void ReleaseGraphicsResource()

Disassembly:
	0x0399C2A4 MOV X20, X0
	0x0399C2A8 BL 0x39AF7D4
	0x0399C2AC CBZ X20, 0x399C37C
	0x0399C2B0 STR X22, [X20 + 0x18]
	0x0399C2B4 STR W21, [X20 + 0x20]
	0x0399C2B8 ADRP X8, 0x7B5000
	0x0399C2BC LDR X8, [X8 + 0x140]
	0x0399C2C0 LDR X0, [X8]
	0x0399C2C4 BL 0x1C16F10
	0x0399C2C8 ADRP X8, 0x7B5000
	0x0399C2CC LDR X8, [X8 + 0x148]
	0x0399C2D0 MOV X1, X19
	0x0399C2D4 MOV X3, X31
	0x0399C2D8 MOV X21, X0
	0x0399C2DC LDR X2, [X8]
	0x0399C2E0 BL 0x2A6B948
	0x0399C2E4 MOV X0, X20
	0x0399C2E8 MOV X1, X21
	0x0399C2EC MOV X2, X31
	0x0399C2F0 BL 0x39AF674
	0x0399C2F4 LDR X0, [X19 + 0x30]
	0x0399C2F8 CBZ X0, 0x399C37C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA46000
	005 Move W8, [X20+2892]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x7B6000
	012 Move X0, [X0+48]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2892], W8
	016 Move X20, 0x7B6000
	017 Move X0, [X19+168]
	018 Move X20, [X20+48]
	019 Compare X0, 0
	020 JumpIfEqual {23}
	021 Move X1, X31
	022 Call RTHandle.Release, X0
	023 Move X1, [X20]
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Call RenderGraphResource`2<TextureDesc, Object>.ReleaseGraphicsResource, X0
	029 Return 

Method: System.Void LogCreation(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphLogger logger)

Disassembly:
	0x0399C2FC ADRP X9, 0x7B5000
	0x0399C300 LDR X9, [X9 + 0x150]
	0x0399C304 LDR W10, [X0 + 0x1C]
	0x0399C308 LDR X8, [X0 + 0x10]
	0x0399C30C LDR X9, [X9]
	0x0399C310 ADD W10, W10, 0x1
	0x0399C314 STR W10, [X0 + 0x1C]
	0x0399C318 CBZ X8, 0x399C37C
	0x0399C31C LDRSW X10, [X0 + 0x18]
	0x0399C320 LDR W11, [X8 + 0x18]
	0x0399C324 CMP W10, W11
	0x0399C328 B.CS 0x399C348
	0x0399C32C ADD W9, W10, 0x1
	0x0399C330 ADD X8, X8, X10, 0x3, LSL
	0x0399C334 STR W9, [X0 + 0x18]
	0x0399C338 STR X20, [X8 + 0x20]
	0x0399C33C B 0x399C35C
	0x0399C340 MOV X20, X31
	0x0399C344 B 0x399C364
	0x0399C348 LDR X8, [X9 + 0x20]
	0x0399C34C MOV X1, X20
	0x0399C350 LDR X8, [X8 + 0xC0]
	0x0399C354 LDR X2, [X8 + 0x70]
	0x0399C358 BL 0x301BF90
	0x0399C35C MOV X0, X19
	0x0399C360 BL 0x39A9014
	0x0399C364 MOV X0, X20
	0x0399C368 LDP X20, X19, [X31 + 0x30]
	0x0399C36C LDP X22, X21, [X31 + 0x20]
	0x0399C370 LDP X24, X23, [X31 + 0x10]
	0x0399C374 LDR X30, [X31], #0x40
	0x0399C378 RET
	0x0399C37C BL 0x1C16F20
	0x0399C380 STR X30, [X31 - 0x20]!
	0x0399C384 STP X20, X19, [X31 + 0x10]
	0x0399C388 ADRP X20, 0xA45000
	0x0399C38C LDRB W8, [X20 + 0xB54]
	0x0399C390 MOV X19, X0
	0x0399C394 TBNZ X8, 0x0, 0x399C3AC
	0x0399C398 ADRP X0, 0x7B5000
	0x0399C39C LDR X0, [X0 + 0x168]
	0x0399C3A0 BL 0x1C16CF4
	0x0399C3A4 MOVZ W8, 0x1
	0x0399C3A8 STRB W8, [X20 + 0xB54]
	0x0399C3AC LDR X0, [X19 + 0x70]
	0x0399C3B0 CBZ X0, 0x399C400
	0x0399C3B4 LDR X8, [X0]
	0x0399C3B8 LDP X9, X1, [X8 + 0x178]
	0x0399C3BC BLR X9
	0x0399C3C0 CBZ X0, 0x399C400
	0x0399C3C4 LDR X0, [X19 + 0x70]
	0x0399C3C8 CBZ X0, 0x399C40C
	0x0399C3CC LDR X8, [X0]
	0x0399C3D0 LDP X9, X1, [X8 + 0x178]
	0x0399C3D4 BLR X9
	0x0399C3D8 CBZ X0, 0x399C40C
	0x0399C3DC LDR X0, [X0 + 0x28]
	0x0399C3E0 CBZ X0, 0x399C40C
	0x0399C3E4 ADRP X8, 0x7B5000
	0x0399C3E8 LDR X1, [X19 + 0x70]
	0x0399C3EC LDR X8, [X8 + 0x168]
	0x0399C3F0 LDP X20, X19, [X31 + 0x10]
	0x0399C3F4 LDR X2, [X8]
	0x0399C3F8 LDR X30, [X31], #0x20
	0x0399C3FC B 0x249816C
	0x0399C400 LDP X20, X19, [X31 + 0x10]
	0x0399C404 LDR X30, [X31], #0x20
	0x0399C408 RET
	0x0399C40C BL 0x1C16F20
	0x0399C410 STR X30, [X31 - 0x10]!

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xA46000
	009 Move X24, 0x758000
	010 Move X23, 0x7B6000
	011 Move X22, 0x758000
	012 Move W8, [X21+2893]
	013 Move X24, [X24+2904]
	014 Move X23, [X23+56]
	015 Move X22, [X22+2504]
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0x758000
	023 Move X0, [X0+2504]
	024 Call 0x1C17CF4
	025 Move X0, 0x758000
	026 Move X0, [X0+2904]
	027 Call 0x1C17CF4
	028 Move X0, 0x7B6000
	029 Move X0, [X0+56]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+2893], W8
	033 Move W8, [X20+150]
	034 Move X0, [X24]
	035 Move X21, [X20+128]
	036 Add X1, X31, 12
	037 Move [X31+12], W8
	038 Call 0x1C17E04
	039 Move X8, [X23]
	040 Move X2, X0
	041 Move X1, X21
	042 Move X3, X31
	043 Move X0, X8
	044 Call String.Format, X0, X1, X2
	045 Move X21, [X22]
	046 Move X20, X0
	047 Move X8, [X21+56]
	048 Compare X8, 0
	049 JumpIfNotEqual {53}
	050 Move X0, X21
	051 Call 0x1C5D6E0
	052 Move X8, [X21+56]
	053 Move X0, [X8+16]
	054 Move W8, [X0+309]
	055 Move TEMP, X8
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {60}
	059 Call 0x1C5D684
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X8, [X21+56]
	065 Move X0, [X8+16]
	066 Move W8, [X0+309]
	067 Move TEMP, X8
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {72}
	071 Call 0x1C5D684
	072 Compare X19, 0
	073 JumpIfEqual {88}
	074 Move X8, [X0+184]
	075 Move X0, X19
	076 Move X1, X20
	077 Move X3, X31
	078 Move X2, [X8]
	079 Call RenderGraphLogger.LogLine, X0, X1, X2
	080 Move X20, [X31+48]
	081 Move X19, [X31+56]
	082 Move X22, [X31+32]
	083 Move X21, [X31+40]
	084 Move X24, [X31+16]
	085 Move X23, [X31+24]
	086 Move X30, [X31+64]
	087 Return 
	088 Call 0x1C17F20

Method: System.Void LogRelease(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphLogger logger)

Disassembly:
	0x0399C414 LDR X8, [X0 + 0x20]
	0x0399C418 CBZ X8, 0x399C450
	0x0399C41C LDRSW X9, [X0 + 0x28]
	0x0399C420 LDR W10, [X8 + 0x18]
	0x0399C424 CMP W9, W10
	0x0399C428 B.NE 0x399C434
	0x0399C42C ADD X8, X0, 0x30
	0x0399C430 B 0x399C444
	0x0399C434 CMP W9, W10
	0x0399C438 B.CS 0x399C454
	0x0399C43C ADD X8, X8, X9, 0x3, LSL
	0x0399C440 ADD X8, X8, 0x20
	0x0399C444 LDR X0, [X8]
	0x0399C448 LDR X30, [X31], #0x10
	0x0399C44C RET
	0x0399C450 BL 0x1C16F20
	0x0399C454 BL 0x1C16F28
	0x0399C458 STR X30, [X31 - 0x30]!
	0x0399C45C STP X22, X21, [X31 + 0x10]
	0x0399C460 STP X20, X19, [X31 + 0x20]
	0x0399C464 ADRP X21, 0xA45000
	0x0399C468 LDRB W8, [X21 + 0xB55]
	0x0399C46C MOV W20, W1
	0x0399C470 MOV X19, X0
	0x0399C474 TBNZ X8, 0x0, 0x399C48C
	0x0399C478 ADRP X0, 0x757000
	0x0399C47C LDR X0, [X0 + 0x598]
	0x0399C480 BL 0x1C16CF4
	0x0399C484 MOVZ W8, 0x1
	0x0399C488 STRB W8, [X21 + 0xB55]
	0x0399C48C CMP W20, 0x1
	0x0399C490 B.LT 0x399C660
	0x0399C494 LDR X8, [X19 + 0x20]
	0x0399C498 CBZ X8, 0x399C670
	0x0399C49C LDR W8, [X8 + 0x18]
	0x0399C4A0 ADD W8, W8, 0x1
	0x0399C4A4 CMP W8, W20
	0x0399C4A8 B.LE 0x399C660
	0x0399C4AC STR W20, [X19 + 0x28]
	0x0399C4B0 ADRP X22, 0x757000
	0x0399C4B4 LDR X22, [X22 + 0x598]
	0x0399C4B8 LDR X20, [X19 + 0x58]
	0x0399C4BC LDR X21, [X19 + 0x30]
	0x0399C4C0 LDR X0, [X22]
	0x0399C4C4 LDR W8, [X0 + 0xE0]
	0x0399C4C8 CBNZ W8, 0x399C4D0
	0x0399C4CC BL 0x1C16DFC
	0x0399C4D0 MOV X0, X20
	0x0399C4D4 MOV X1, X21
	0x0399C4D8 MOV X2, X31
	0x0399C4DC BL 0x3C3883C
	0x0399C4E0 TBZ X0, 0x0, 0x399C52C
	0x0399C4E4 LDR X0, [X19 + 0x30]
	0x0399C4E8 CBZ X0, 0x399C670

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xA46000
	008 Move X22, 0x7B6000
	009 Move X21, 0x758000
	010 Move W8, [X23+2894]
	011 Move X22, [X22+64]
	012 Move X21, [X21+2504]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x758000
	020 Move X0, [X0+2504]
	021 Call 0x1C17CF4
	022 Move X0, 0x7B6000
	023 Move X0, [X0+64]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2894], W8
	027 Move X1, [X20+128]
	028 Move X0, [X22]
	029 Move X2, X31
	030 Call String.Concat, X0, X1
	031 Move X21, [X21]
	032 Move X20, X0
	033 Move X8, [X21+56]
	034 Compare X8, 0
	035 JumpIfNotEqual {39}
	036 Move X0, X21
	037 Call 0x1C5D6E0
	038 Move X8, [X21+56]
	039 Move X0, [X8+16]
	040 Move W8, [X0+309]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {46}
	045 Call 0x1C5D684
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X8, [X21+56]
	051 Move X0, [X8+16]
	052 Move W8, [X0+309]
	053 Move TEMP, X8
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {58}
	057 Call 0x1C5D684
	058 Compare X19, 0
	059 JumpIfEqual {73}
	060 Move X8, [X0+184]
	061 Move X0, X19
	062 Move X1, X20
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X2, [X8]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X3, X31
	069 Move X30, [X31+48]
	070 Move X23, [X31+56]
	071 Call RenderGraphLogger.LogLine, X0, X1, X2
	072 Return 
	073 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0399C4EC MOV X1, X31
	0x0399C4F0 BL 0x3C32E90
	0x0399C4F4 CBZ X0, 0x399C670
	0x0399C4F8 MOV X1, X31
	0x0399C4FC BL 0x3C3F58C
	0x0399C500 LDR X0, [X19 + 0x30]
	0x0399C504 STP S0, S1, [X19 + 0x38]
	0x0399C508 STR S2, [X19 + 0x40]
	0x0399C50C CBZ X0, 0x399C670
	0x0399C510 MOV X1, X31
	0x0399C514 BL 0x3C32E90
	0x0399C518 CBZ X0, 0x399C670
	0x0399C51C MOV X1, X31
	0x0399C520 BL 0x3C3DEB4
	0x0399C524 STP S0, S1, [X19 + 0x44]
	0x0399C528 STP S2, S3, [X19 + 0x4C]
	0x0399C52C MOV X0, X19
	0x0399C530 BL 0x399C410

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xA46000
	006 Move X21, 0x7B6000
	007 Move W8, [X20+2895]
	008 Move X21, [X21+72]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x7B6000
	015 Move X0, [X0+72]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2895], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call RenderGraphResource`2<TextureDesc, Object>..ctor, X0
	026 Return 

