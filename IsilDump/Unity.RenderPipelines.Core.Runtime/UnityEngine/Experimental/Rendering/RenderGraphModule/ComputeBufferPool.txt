Type: UnityEngine.Experimental.Rendering.RenderGraphModule.ComputeBufferPool

Method: System.Void ReleaseInternalResource(UnityEngine.ComputeBuffer res)

Disassembly:
	0x039999B0 ADD X0, X31, 0x8
	0x039999B4 BL 0x3997E7C
	0x039999B8 CBZ X20, 0x3999A0C
	0x039999BC LDR W8, [X20 + 0x18]
	0x039999C0 CMP W0, W8
	0x039999C4 B.CS 0x3999A10

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {7}
	003 Move X0, X1
	004 Move X1, X31
	005 Call ComputeBuffer.Release, X0
	006 Return 
	007 Move [X31-16], X30
	008 Call 0x1C17F20

Method: System.String GetResourceName(UnityEngine.ComputeBuffer res)

Disassembly:
	0x039999C8 ADD X8, X20, W0, 0x3, SXTW
	0x039999CC LDR X8, [X8 + 0x20]
	0x039999D0 CBZ X8, 0x3999A0C
	0x039999D4 LDR X0, [X8 + 0x10]
	0x039999D8 CBZ X0, 0x3999A0C
	0x039999DC ADRP X8, 0x783000
	0x039999E0 LDR X8, [X8 + 0xA80]
	0x039999E4 LDRH W1, [X19]
	0x039999E8 LDR X2, [X8]
	0x039999EC BL 0x2B40178
	0x039999F0 LDR X8, [X0]
	0x039999F4 CBZ X8, 0x3999A0C
	0x039999F8 LDR W0, [X8 + 0x1C]
	0x039999FC LDP X20, X19, [X31 + 0x20]
	0x03999A00 LDP X22, X21, [X31 + 0x10]
	0x03999A04 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xA49000
	005 Move X20, 0x7B8000
	006 Move W8, [X19+2804]
	007 Move X20, [X20+3896]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x7B8000
	013 Move X0, [X0+3896]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2804], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return X0

Method: System.Int64 GetResourceSize(UnityEngine.ComputeBuffer res)

Disassembly:
	0x03999A08 RET
	0x03999A0C BL 0x1C16F20
	0x03999A10 BL 0x1C16F28
	0x03999A14 SUB X31, X31, 0x20
	0x03999A18 STP X30, X19, [X31 + 0x10]
	0x03999A1C MOV X19, X0
	0x03999A20 AND W3, W2, 0x1
	0x03999A24 ADD X0, X31, 0x8
	0x03999A28 MOV W2, W31
	0x03999A2C STR X31, [X31 + 0x8]
	0x03999A30 BL 0x3997F5C
	0x03999A34 LDR X8, [X31 + 0x8]
	0x03999A38 STR X8, [X19]
	0x03999A3C LDP X30, X19, [X31 + 0x10]
	0x03999A40 ADD X31, X31, 0x20
	0x03999A44 RET
	0x03999A48 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {20}
	006 Move X19, X1
	007 Move X0, X1
	008 Move X1, X31
	009 Call ComputeBuffer.get_count, X0
	010 Move W20, W0
	011 Move X0, X19
	012 Move X1, X31
	013 Call ComputeBuffer.get_stride, X0
	014 Multiply W8, W0, W20
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X0, W8
	018 Move X30, [X31+32]
	019 Return X0
	020 Call 0x1C17F20

Method: System.String GetResourceTypeName()

Disassembly:
	0x03999A4C STP X30, X21, [X31 - 0x20]!
	0x03999A50 STP X20, X19, [X31 + 0x10]
	0x03999A54 ADRP X21, 0xA48000
	0x03999A58 LDRB W8, [X21 + 0xB11]
	0x03999A5C MOV W19, W1
	0x03999A60 MOV X20, X0
	0x03999A64 TBNZ X8, 0x0, 0x3999A7C
	0x03999A68 ADRP X0, 0x783000
	0x03999A6C LDR X0, [X0 + 0xA88]
	0x03999A70 BL 0x1C16CF4
	0x03999A74 MOVZ W8, 0x1
	0x03999A78 STRB W8, [X21 + 0xB11]
	0x03999A7C LDR X8, [X20 + 0x10]
	0x03999A80 CBZ X8, 0x3999AB4
	0x03999A84 LDR W9, [X8 + 0x18]
	0x03999A88 CMP W9, W19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xA49000
	005 Move X20, 0x7B8000
	006 Move W8, [X19+2805]
	007 Move X20, [X20+3904]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x7B8000
	013 Move X0, [X0+3904]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2805], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return X0

Method: System.Int32 GetSortIndex(UnityEngine.ComputeBuffer res)

Disassembly:
	0x03999A8C B.LS 0x3999AB8
	0x03999A90 ADD X8, X8, W19, 0x3, SXTW
	0x03999A94 LDR X8, [X8 + 0x20]
	0x03999A98 CBZ X8, 0x3999AB4
	0x03999A9C LDR X8, [X8 + 0x10]
	0x03999AA0 CBZ X8, 0x3999AB4
	0x03999AA4 LDR W0, [X8 + 0x18]
	0x03999AA8 LDP X20, X19, [X31 + 0x10]
	0x03999AAC LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {11}
	004 Move X8, [X1]
	005 Move X0, X1
	006 Move X2, [X8+344]
	007 Move X8, [X8+352]
	008 Move X1, X8
	009 Move X30, [X31+16]
	010 CallNoReturn X2
	011 Call 0x1C17F20

Method: System.Void PurgeUnusedResources(System.Int32 currentFrameIndex)

Disassembly:
	0x03999AB0 RET
	0x03999AB4 BL 0x1C16F20
	0x03999AB8 BL 0x1C16F28
	0x03999ABC RET
	0x03999AC0 STP X30, X19, [X31 - 0x10]!
	0x03999AC4 MOVZ W2, 0xD0
	0x03999AC8 MOV X19, X0
	0x03999ACC BL 0x3EB1B30
	0x03999AD0 STP X31, X31, [X19 + 0xD8]
	0x03999AD4 STR X31, [X19 + 0xD0]
	0x03999AD8 LDP X30, X19, [X31], #0x10
	0x03999ADC RET
	0x03999AE0 MOVZ W8, 0x1
	0x03999AE4 STR W1, [X0 + 0x4]
	0x03999AE8 STRB W8, [X0]
	0x03999AEC RET
	0x03999AF0 RET
	0x03999AF4 SUB X31, X31, 0x40
	0x03999AF8 STP X30, X23, [X31 + 0x10]
	0x03999AFC STP X22, X21, [X31 + 0x20]
	0x03999B00 STP X20, X19, [X31 + 0x30]
	0x03999B04 ADRP X22, 0xA48000
	0x03999B08 STR X2, [X31 + 0x8]
	0x03999B0C ADRP X23, 0x785000
	0x03999B10 LDRB W8, [X22 + 0xB1C]
	0x03999B14 LDR X23, [X23 + 0x730]
	0x03999B18 MOV X20, X2
	0x03999B1C MOV X19, X1
	0x03999B20 MOV X21, X0
	0x03999B24 TBNZ X8, 0x0, 0x3999B3C
	0x03999B28 ADRP X0, 0x785000
	0x03999B2C LDR X0, [X0 + 0x730]
	0x03999B30 BL 0x1C16CF4
	0x03999B34 MOVZ W8, 0x1
	0x03999B38 STRB W8, [X22 + 0xB1C]
	0x03999B3C LDR X0, [X23]
	0x03999B40 LDR W8, [X0 + 0xE0]
	0x03999B44 CBNZ W8, 0x3999B4C
	0x03999B48 BL 0x1C16DFC
	0x03999B4C ADD X0, X31, 0x8
	0x03999B50 BL 0x3997E7C
	0x03999B54 AND W3, W20, 0xFFFF
	0x03999B58 MOV W2, W0
	0x03999B5C MOV X0, X21
	0x03999B60 MOV X1, X19
	0x03999B64 LDP X20, X19, [X31 + 0x30]
	0x03999B68 LDP X22, X21, [X31 + 0x20]
	0x03999B6C LDP X30, X23, [X31 + 0x10]
	0x03999B70 ADD X31, X31, 0x40
	0x03999B74 B 0x39946C4
	0x03999B78 SUB X31, X31, 0x60
	0x03999B7C STP D11, D10, [X31 + 0x10]
	0x03999B80 STP D9, D8, [X31 + 0x20]
	0x03999B84 STP X30, X23, [X31 + 0x30]
	0x03999B88 STP X22, X21, [X31 + 0x40]
	0x03999B8C STP X20, X19, [X31 + 0x50]
	0x03999B90 ADRP X22, 0xA48000
	0x03999B94 LDRB W8, [X22 + 0xB1D]
	0x03999B98 MOV X19, X2
	0x03999B9C MOV X20, X1
	0x03999BA0 MOV X21, X0
	0x03999BA4 TBNZ X8, 0x0, 0x3999BD4
	0x03999BA8 ADRP X0, 0x782000
	0x03999BAC LDR X0, [X0 + 0x8F8]
	0x03999BB0 BL 0x1C16CF4
	0x03999BB4 ADRP X0, 0x7B7000
	0x03999BB8 LDR X0, [X0 + 0xB20]
	0x03999BBC BL 0x1C16CF4
	0x03999BC0 ADRP X0, 0x7B7000
	0x03999BC4 LDR X0, [X0 + 0xA80]
	0x03999BC8 BL 0x1C16CF4
	0x03999BCC MOVZ W8, 0x1
	0x03999BD0 STRB W8, [X22 + 0xB1D]
	0x03999BD4 STRB W31, [X31 + 0x8]
	0x03999BD8 CBZ X19, 0x3999D54
	0x03999BDC ADRP X8, 0x7B7000
	0x03999BE0 LDR X8, [X8 + 0xA80]
	0x03999BE4 LDR X9, [X19]
	0x03999BE8 LDR X8, [X8]
	0x03999BEC LDRB W11, [X9 + 0x130]
	0x03999BF0 LDRB W10, [X8 + 0x130]
	0x03999BF4 CMP W11, W10
	0x03999BF8 B.CC 0x3999D54
	0x03999BFC LDR X9, [X9 + 0xC8]
	0x03999C00 ADD X9, X9, X10, 0x3, LSL
	0x03999C04 LDUR X9, [X9 - 0x8]
	0x03999C08 CMP X9, X8
	0x03999C0C B.NE 0x3999D54
	0x03999C10 LDRB W8, [X19 + 0x88]
	0x03999C14 TBZ X8, 0x0, 0x3999C3C
	0x03999C18 CBZ X20, 0x3999D54
	0x03999C1C LDR X0, [X19 + 0xA8]
	0x03999C20 CBZ X0, 0x3999D54
	0x03999C24 LDR W2, [X19 + 0x8C]
	0x03999C28 LDR V0, [X19 + 0x90]
	0x03999C2C LDR X1, [X20 + 0x18]
	0x03999C30 MOV W3, W31
	0x03999C34 MOV X4, X31
	0x03999C38 BL 0x39D5018
	0x03999C3C LDRB W8, [X19 + 0x96]
	0x03999C40 LDR X9, [X21 + 0x20]
	0x03999C44 CBZ W8, 0x3999C50
	0x03999C48 CBNZ X9, 0x3999C5C
	0x03999C4C B 0x3999D54
	0x03999C50 CBZ X9, 0x3999D54
	0x03999C54 LDRB W10, [X9 + 0x20]
	0x03999C58 CBZ W10, 0x3999D38
	0x03999C5C LDRB W9, [X9 + 0x20]
	0x03999C60 CMP W9, 0x0
	0x03999C64 CSET W9, EQ
	0x03999C68 CMP W8, 0x1
	0x03999C6C CSET W8, EQ
	0x03999C70 CBZ X20, 0x3999D54
	0x03999C74 ADRP X10, 0x7B7000
	0x03999C78 LDR X10, [X10 + 0xB20]
	0x03999C7C ADRP X22, 0x782000
	0x03999C80 LDR X22, [X22 + 0x8F8]
	0x03999C84 ORR W23, W8, W9, 0x0
	0x03999C88 LDR X1, [X10]
	0x03999C8C LDR X21, [X20 + 0x18]
	0x03999C90 CMP W23, 0x0
	0x03999C94 MOVZ W8, 0x2
	0x03999C98 CINC W0, W8, EQ
	0x03999C9C BL 0x2235BC0
	0x03999CA0 MOV X2, X0
	0x03999CA4 ADD X0, X31, 0x8
	0x03999CA8 MOV X1, X21
	0x03999CAC MOV X3, X31
	0x03999CB0 BL 0x39B1DB0
	0x03999CB4 LDR W8, [X19 + 0x50]
	0x03999CB8 CMP W8, 0x0
	0x03999CBC MOVZ W8, 0x6
	0x03999CC0 CSINC W21, W8, W31, NE
	0x03999CC4 CBZ W23, 0x3999CD4
	0x03999CC8 LDP S11, S8, [X19 + 0x98]
	0x03999CCC LDP S10, S9, [X19 + 0xA0]
	0x03999CD0 B 0x3999CE4
	0x03999CD4 FMOV S8, W31
	0x03999CD8 FMOV S9, 1
	0x03999CDC FMOV S10, 1
	0x03999CE0 FMOV S11, 1
	0x03999CE4 LDR X0, [X22]
	0x03999CE8 LDR X20, [X20 + 0x18]
	0x03999CEC LDR X19, [X19 + 0xA8]
	0x03999CF0 LDR W8, [X0 + 0xE0]
	0x03999CF4 CBNZ W8, 0x3999CFC
	0x03999CF8 BL 0x1C16DFC
	0x03999CFC MOVN W4, 0x0
	0x03999D00 MOVN W5, 0x0
	0x03999D04 MOV X0, X20
	0x03999D08 MOV X1, X19
	0x03999D0C MOV W2, W21
	0x03999D10 MOV V0.16B, V11.16B
	0x03999D14 MOV V1.16B, V8.16B
	0x03999D18 MOV V2.16B, V10.16B
	0x03999D1C MOV V3.16B, V9.16B
	0x03999D20 MOV W3, W31
	0x03999D24 MOV X6, X31
	0x03999D28 BL 0x39E7864
	0x03999D2C ADD X0, X31, 0x8
	0x03999D30 MOV X1, X31
	0x03999D34 BL 0x39B1DB4
	0x03999D38 LDP X20, X19, [X31 + 0x50]
	0x03999D3C LDP X22, X21, [X31 + 0x40]
	0x03999D40 LDP X30, X23, [X31 + 0x30]
	0x03999D44 LDP D9, D8, [X31 + 0x20]
	0x03999D48 LDP D11, D10, [X31 + 0x10]
	0x03999D4C ADD X31, X31, 0x60
	0x03999D50 RET
	0x03999D54 BL 0x1C16F20
	0x03999D58 CMP W1, 0x1
	0x03999D5C MOV X20, X0
	0x03999D60 B.NE 0x3999D8C
	0x03999D64 MOV X0, X20
	0x03999D68 BL 0x3EB1AD0
	0x03999D6C LDR X19, [X0]
	0x03999D70 BL 0x3EB1AE0
	0x03999D74 ADD X0, X31, 0x8
	0x03999D78 MOV X1, X31
	0x03999D7C BL 0x39B1DB4
	0x03999D80 CBZ X19, 0x3999D38
	0x03999D84 MOV X0, X19
	0x03999D88 BL 0x1C16F18
	0x03999D8C MOV X19, X31
	0x03999D90 B 0x3999D98
	0x03999D94 MOV X20, X0
	0x03999D98 ADD X0, X31, 0x8
	0x03999D9C MOV X1, X31
	0x03999DA0 BL 0x39B1DB4
	0x03999DA4 CBNZ X19, 0x3999DB0
	0x03999DA8 MOV X0, X20
	0x03999DAC BL 0x1D2C690
	0x03999DB0 MOV X0, X19
	0x03999DB4 BL 0x1C16F18
	0x03999DB8 BL 0x1990590
	0x03999DBC SUB X31, X31, 0x40
	0x03999DC0 STP X30, X23, [X31 + 0x10]
	0x03999DC4 STP X22, X21, [X31 + 0x20]
	0x03999DC8 STP X20, X19, [X31 + 0x30]
	0x03999DCC ADRP X22, 0xA48000
	0x03999DD0 STR X2, [X31 + 0x8]
	0x03999DD4 ADRP X23, 0x785000
	0x03999DD8 LDRB W8, [X22 + 0xB1F]
	0x03999DDC LDR X23, [X23 + 0x730]
	0x03999DE0 MOV X20, X2
	0x03999DE4 MOV X19, X1
	0x03999DE8 MOV X21, X0
	0x03999DEC TBNZ X8, 0x0, 0x3999E04
	0x03999DF0 ADRP X0, 0x785000
	0x03999DF4 LDR X0, [X0 + 0x730]
	0x03999DF8 BL 0x1C16CF4
	0x03999DFC MOVZ W8, 0x1
	0x03999E00 STRB W8, [X22 + 0xB1F]
	0x03999E04 LDR X0, [X23]
	0x03999E08 LDR W8, [X0 + 0xE0]
	0x03999E0C CBNZ W8, 0x3999E14
	0x03999E10 BL 0x1C16DFC
	0x03999E14 ADD X0, X31, 0x8
	0x03999E18 BL 0x3997E7C
	0x03999E1C AND W3, W20, 0xFFFF
	0x03999E20 MOV W2, W0
	0x03999E24 MOV X0, X21
	0x03999E28 MOV X1, X19
	0x03999E2C LDP X20, X19, [X31 + 0x30]
	0x03999E30 LDP X22, X21, [X31 + 0x20]
	0x03999E34 LDP X30, X23, [X31 + 0x10]
	0x03999E38 ADD X31, X31, 0x40
	0x03999E3C B 0x3994B94
	0x03999E40 STR X30, [X31 - 0x30]!
	0x03999E44 STP X22, X21, [X31 + 0x10]
	0x03999E48 STP X20, X19, [X31 + 0x20]
	0x03999E4C ADRP X22, 0xA48000
	0x03999E50 LDRB W8, [X22 + 0xB20]
	0x03999E54 MOV X21, X2
	0x03999E58 MOV X19, X1
	0x03999E5C MOV X20, X0
	0x03999E60 TBNZ X8, 0x0, 0x3999E90
	0x03999E64 ADRP X0, 0x782000
	0x03999E68 LDR X0, [X0 + 0x8F8]
	0x03999E6C BL 0x1C16CF4
	0x03999E70 ADRP X0, 0x7B7000
	0x03999E74 LDR X0, [X0 + 0xB20]
	0x03999E78 BL 0x1C16CF4
	0x03999E7C ADRP X0, 0x7B7000
	0x03999E80 LDR X0, [X0 + 0xA80]
	0x03999E84 BL 0x1C16CF4
	0x03999E88 MOVZ W8, 0x1
	0x03999E8C STRB W8, [X22 + 0xB20]
	0x03999E90 STRB W31, [X31 + 0x8]
	0x03999E94 CBZ X21, 0x3999ED4
	0x03999E98 ADRP X8, 0x7B7000
	0x03999E9C LDR X8, [X8 + 0xA80]
	0x03999EA0 LDR X9, [X21]
	0x03999EA4 LDR X8, [X8]
	0x03999EA8 LDRB W11, [X9 + 0x130]
	0x03999EAC LDRB W10, [X8 + 0x130]
	0x03999EB0 CMP W11, W10
	0x03999EB4 B.CS 0x3999EC0
	0x03999EB8 MOV X21, X31
	0x03999EBC B 0x3999ED4
	0x03999EC0 LDR X9, [X9 + 0xC8]
	0x03999EC4 ADD X9, X9, X10, 0x3, LSL
	0x03999EC8 LDUR X9, [X9 - 0x8]
	0x03999ECC CMP X9, X8
	0x03999ED0 CSEL X21, X21, X31, EQ
	0x03999ED4 LDR X8, [X20 + 0x20]
	0x03999ED8 CBZ X8, 0x3999F94
	0x03999EDC LDRB W8, [X8 + 0x21]
	0x03999EE0 CBZ W8, 0x3999F84
	0x03999EE4 CBZ X19, 0x3999F94
	0x03999EE8 ADRP X8, 0x7B7000
	0x03999EEC LDR X8, [X8 + 0xB20]
	0x03999EF0 LDR X20, [X19 + 0x18]
	0x03999EF4 MOVZ W0, 0x3
	0x03999EF8 LDR X1, [X8]
	0x03999EFC BL 0x2235BC0
	0x03999F00 MOV X2, X0
	0x03999F04 ADD X0, X31, 0x8
	0x03999F08 MOV X1, X20
	0x03999F0C MOV X3, X31
	0x03999F10 BL 0x39B1DB0
	0x03999F14 CBZ X21, 0x3999F98
	0x03999F18 ADRP X8, 0x782000
	0x03999F1C LDR X8, [X8 + 0x8F8]
	0x03999F20 LDR X19, [X19 + 0x18]
	0x03999F24 LDR X20, [X21 + 0xA8]
	0x03999F28 LDR X0, [X8]
	0x03999F2C LDR W8, [X21 + 0x50]
	0x03999F30 LDR W9, [X0 + 0xE0]
	0x03999F34 CMP W8, 0x0
	0x03999F38 MOVZ W8, 0x6
	0x03999F3C CSINC W21, W8, W31, NE
	0x03999F40 CBNZ W9, 0x3999F48
	0x03999F44 BL 0x1C16DFC
	0x03999F48 FMOV S0, 1
	0x03999F4C FMOV S1, W31
	0x03999F50 FMOV S2, 1
	0x03999F54 FMOV S3, 1
	0x03999F58 MOVN W4, 0x0
	0x03999F5C MOVN W5, 0x0
	0x03999F60 MOV X0, X19
	0x03999F64 MOV X1, X20
	0x03999F68 MOV W2, W21
	0x03999F6C MOV W3, W31
	0x03999F70 MOV X6, X31
	0x03999F74 BL 0x39E7864
	0x03999F78 ADD X0, X31, 0x8
	0x03999F7C MOV X1, X31
	0x03999F80 BL 0x39B1DB4
	0x03999F84 LDP X20, X19, [X31 + 0x20]
	0x03999F88 LDP X22, X21, [X31 + 0x10]
	0x03999F8C LDR X30, [X31], #0x30
	0x03999F90 RET
	0x03999F94 BL 0x1C16F20
	0x03999F98 BL 0x1C16F20
	0x03999F9C B 0x3999FA0
	0x03999FA0 MOV X20, X0
	0x03999FA4 CMP W1, 0x1
	0x03999FA8 B.NE 0x3999FD4
	0x03999FAC MOV X0, X20
	0x03999FB0 BL 0x3EB1AD0
	0x03999FB4 LDR X19, [X0]
	0x03999FB8 BL 0x3EB1AE0
	0x03999FBC ADD X0, X31, 0x8
	0x03999FC0 MOV X1, X31
	0x03999FC4 BL 0x39B1DB4
	0x03999FC8 CBZ X19, 0x3999F84
	0x03999FCC MOV X0, X19
	0x03999FD0 BL 0x1C16F18
	0x03999FD4 MOV X19, X31
	0x03999FD8 B 0x3999FE0
	0x03999FDC MOV X20, X0
	0x03999FE0 ADD X0, X31, 0x8
	0x03999FE4 MOV X1, X31
	0x03999FE8 BL 0x39B1DB4
	0x03999FEC CBNZ X19, 0x3999FF8
	0x03999FF0 MOV X0, X20
	0x03999FF4 BL 0x1D2C690
	0x03999FF8 MOV X0, X19
	0x03999FFC BL 0x1C16F18

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X29
	003 Move [X31+136], X30
	004 Move [X31+144], X28
	005 Move [X31+152], X27
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X21, 0xA49000
	015 Move X26, 0x7B8000
	016 Move W8, [X21+2806]
	017 Move X26, [X26+3912]
	018 Move W20, W1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {83}
	024 Move X0, 0x7B8000
	025 Move X0, [X0+3920]
	026 Call 0x1C17CF4
	027 Move X0, 0x786000
	028 Move X0, [X0+2840]
	029 Call 0x1C17CF4
	030 Move X0, 0x7B8000
	031 Move X0, [X0+3928]
	032 Call 0x1C17CF4
	033 Move X0, 0x786000
	034 Move X0, [X0+2856]
	035 Call 0x1C17CF4
	036 Move X0, 0x7B8000
	037 Move X0, [X0+3936]
	038 Call 0x1C17CF4
	039 Move X0, 0x7B8000
	040 Move X0, [X0+3944]
	041 Call 0x1C17CF4
	042 Move X0, 0x786000
	043 Move X0, [X0+2872]
	044 Call 0x1C17CF4
	045 Move X0, 0x7B8000
	046 Move X0, [X0+3952]
	047 Call 0x1C17CF4
	048 Move X0, 0x783000
	049 Move X0, [X0+1960]
	050 Call 0x1C17CF4
	051 Move X0, 0x7B8000
	052 Move X0, [X0+3960]
	053 Call 0x1C17CF4
	054 Move X0, 0x75C000
	055 Move X0, [X0+3600]
	056 Call 0x1C17CF4
	057 Move X0, 0x762000
	058 Move X0, [X0+2136]
	059 Call 0x1C17CF4
	060 Move X0, 0x786000
	061 Move X0, [X0+2896]
	062 Call 0x1C17CF4
	063 Move X0, 0x7B8000
	064 Move X0, [X0+3968]
	065 Call 0x1C17CF4
	066 Move X0, 0x7B8000
	067 Move X0, [X0+3912]
	068 Call 0x1C17CF4
	069 Move X0, 0x7B8000
	070 Move X0, [X0+3976]
	071 Call 0x1C17CF4
	072 Move X0, 0x7B8000
	073 Move X0, [X0+3984]
	074 Call 0x1C17CF4
	075 Move X0, 0x7B8000
	076 Move X0, [X0+3992]
	077 Call 0x1C17CF4
	078 Move X0, 0x7B8000
	079 Move X0, [X0+4000]
	080 Call 0x1C17CF4
	081 Move W8, 1
	082 Move [X21+2806], W8
	083 Move X8, [X26]
	084 NotImplemented "Instruction MOVI not yet implemented."
	085 Move [X31+112], X31
	086 Move [X31+80], V0
	087 Move [X31+88], V0
	088 Move [X31+48], X31
	089 Move [X31+56], X31
	090 Move [X31+64], X31
	091 Move X8, [X8+184]
	092 Move [X8], W20
	093 Move X8, [X19+24]
	094 Compare X8, 0
	095 JumpIfEqual {320}
	096 Move W9, [X8+28]
	097 Add W9, W9, 1
	098 Move [X8+24], W31
	099 Move [X8+28], W9
	100 Move X0, [X19+16]
	101 Compare X0, 0
	102 JumpIfEqual {320}
	103 Move X8, 0x7B8000
	104 Move X8, [X8+3920]
	105 Move X27, 0x7B8000
	106 Move X29, 0x7B8000
	107 Move X25, 0x786000
	108 Move X27, [X27+3952]
	109 Move X29, [X29+3968]
	110 Move X25, [X25+2856]
	111 Move X1, [X8]
	112 Move X28, 0x7B8000
	113 Move X28, [X28+3976]
	114 Add X8, X31, 8
	115 Call Dictionary`2<Int32, Object>.GetEnumerator, X0
	116 NotImplemented "Instruction LDUR not yet implemented."
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 Move X8, [X31+40]
	119 Move [X31+80], V0
	120 Move [X31+88], V1
	121 Move [X31+112], X8
	122 Move X8, 0x7B8000
	123 Move X8, [X8+3936]
	124 Move X1, [X8]
	125 Add X0, X31, 80
	126 Call Enumerator<Int32, Object>.MoveNext, X0
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfNotEqual {282}
	131 Move X20, [X31+104]
	132 Compare X20, 0
	133 JumpIfEqual {316}
	134 Move X8, 0x7B8000
	135 Move X8, [X8+3992]
	136 Move X1, [X8]
	137 Move X0, X20
	138 Call 0x25EE504, X0
	139 Move X8, 0x7B8000
	140 Move X8, [X8+4000]
	141 Move X21, X0
	142 Move X1, [X8]
	143 Move X0, X20
	144 Call 0x25EE534, X0
	145 Move W8, [X20+32]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move X22, X0
	148 Move W23, W31
	149 Compare X22, 0
	150 JumpIfEqual {301}
	151 Move X8, [X22]
	152 Move X1, [X27]
	153 NotImplemented "Instruction LDRH not yet implemented."
	154 Compare X9, 0
	155 JumpIfEqual {162}
	156 Move X10, [X8+176]
	157 Add X10, X10, 8
	158 NotImplemented "Instruction LDUR not yet implemented."
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Subtract X9, X9, 1
	161 Add X10, X10, 16
	162 Move X0, X22
	163 Move W2, W31
	164 Call 0x1C5D788
	165 NotImplemented "Instruction LDRSW not yet implemented."
	166 Add X8, X8, X9
	167 Add X0, X8, 312
	168 Move X8, [X0]
	169 Move X2, [X0+8]
	170 Move X0, X22
	171 Move W1, W23
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Move X8, [X26]
	174 Move X2, [X29]
	175 Move X24, X0
	176 Move X8, [X8+184]
	177 Move W8, [X8]
	178 Move W0, W1
	179 Move W1, W8
	180 Call 0x25C9D98, X0, X1
	181 Move TEMP, X0
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfNotEqual {241}
	185 Compare X24, 0
	186 JumpIfEqual {304}
	187 Move X0, X24
	188 Move X1, X31
	189 Call ComputeBuffer.Release, X0
	190 Compare X21, 0
	191 JumpIfEqual {303}
	192 Move X8, [X21]
	193 Move X10, 0x783000
	194 Move X24, [X19+24]
	195 NotImplemented "Instruction LDRH not yet implemented."
	196 Move X10, [X10+1960]
	197 Move X1, [X10]
	198 Compare X9, 0
	199 JumpIfEqual {206}
	200 Move X10, [X8+176]
	201 Add X10, X10, 8
	202 NotImplemented "Instruction LDUR not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Subtract X9, X9, 1
	205 Add X10, X10, 16
	206 Move X0, X21
	207 Move W2, W31
	208 Call 0x1C5D788
	209 NotImplemented "Instruction LDRSW not yet implemented."
	210 Add X8, X8, X9
	211 Add X0, X8, 312
	212 Move X8, [X0]
	213 Move X2, [X0+8]
	214 Move X0, X21
	215 Move W1, W23
	216 NotImplemented "Instruction BLR not yet implemented."
	217 Move W1, W0
	218 Compare X24, 0
	219 JumpIfEqual {305}
	220 Move X9, 0x75C000
	221 Move W10, [X24+28]
	222 Move X8, [X24+16]
	223 Move X9, [X9+3600]
	224 Add W10, W10, 1
	225 Move X9, [X9]
	226 Move [X24+28], W10
	227 Compare X8, 0
	228 JumpIfEqual {302}
	229 NotImplemented "Instruction LDRSW not yet implemented."
	230 Move W11, [X8+24]
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Add W9, W10, 1
	233 Add X8, X8, X10
	234 Move [X24+24], W9
	235 Move [X8+32], W1
	236 Move X8, [X9+32]
	237 Move X8, [X8+192]
	238 Move X2, [X8+112]
	239 Move X0, X24
	240 Call List`1<Int32>.AddWithResize, X0, X1
	241 Move W8, [X20+32]
	242 Add W23, W23, 1
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Move X0, [X19+24]
	245 Compare X0, 0
	246 JumpIfEqual {319}
	247 Move X8, 0x786000
	248 Move X8, [X8+2896]
	249 Move X1, [X8]
	250 Add X8, X31, 8
	251 Call List`1<Int32>.GetEnumerator, X0
	252 NotImplemented "Instruction LDUR not yet implemented."
	253 Move X8, [X31+24]
	254 Move [X31+3], V0
	255 Move [X31+64], X8
	256 Move X1, [X25]
	257 Add X0, X31, 48
	258 Call Enumerator<Int32>.MoveNext, X0
	259 Move TEMP, X0
	260 And TEMP, TEMP, 1
	261 Compare TEMP, 1
	262 JumpIfNotEqual {267}
	263 Move W1, [X31+64]
	264 Move X2, [X28]
	265 Move X0, X20
	266 Call 0x25EFA7C, X0, X1
	267 Move X22, X31
	268 Move X8, 0x786000
	269 Move X8, [X8+2840]
	270 Move X1, [X8]
	271 Add X0, X31, 48
	272 Call Enumerator<Int32>.Dispose, X0
	273 Compare X22, 0
	274 JumpIfEqual {122}
	275 Move X21, X1
	276 Move X20, X0
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Move X0, X20
	279 Call 0x3EB2AD0
	280 Move X22, [X0]
	281 Call 0x3EB2AE0
	282 Move X8, 0x7B8000
	283 Move X8, [X8+3928]
	284 Add X0, X31, 80
	285 Move X1, [X8]
	286 Call Enumerator<Int32, Object>.Dispose, X0
	287 Move X20, [X31+208]
	288 Move X19, [X31+216]
	289 Move X22, [X31+192]
	290 Move X21, [X31+200]
	291 Move X24, [X31+176]
	292 Move X23, [X31+184]
	293 Move X26, [X31+160]
	294 Move X25, [X31+168]
	295 Move X28, [X31+144]
	296 Move X27, [X31+152]
	297 Move X29, [X31+128]
	298 Move X30, [X31+136]
	299 Add X31, X31, 224
	300 Return 
	301 Call 0x1C17F20
	302 Call 0x1C17F20
	303 Call 0x1C17F20
	304 Call 0x1C17F20
	305 Call 0x1C17F20
	306 Move X22, X31
	307 Move X8, 0x786000
	308 Move X8, [X8+2840]
	309 Move X1, [X8]
	310 Add X0, X31, 48
	311 Call Enumerator<Int32>.Dispose, X0
	312 Compare X22, 0
	313 JumpIfEqual {325}
	314 Move X0, X22
	315 Call 0x1C17F18
	316 Call 0x1C17F20
	317 Move X0, X22
	318 Call 0x1C17F18
	319 Call 0x1C17F20
	320 Call 0x1C17F20
	321 Move X21, X1
	322 Move X20, X0
	323 Move X21, X1
	324 Move X20, X0
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Move X0, X20
	327 Call 0x3EB2AD0
	328 Move X19, [X0]
	329 Call 0x3EB2AE0
	330 Move X8, 0x7B8000
	331 Move X8, [X8+3928]
	332 Add X0, X31, 80
	333 Move X1, [X8]
	334 Call Enumerator<Int32, Object>.Dispose, X0
	335 Compare X19, 0
	336 JumpIfEqual {287}
	337 Move X0, X19
	338 Call 0x1C17F18
	339 Move X19, X31
	340 Move X20, X0
	341 Move X8, 0x7B8000
	342 Move X8, [X8+3928]
	343 Move X1, [X8]
	344 Add X0, X31, 80
	345 Call Enumerator<Int32, Object>.Dispose, X0
	346 Compare X19, 0
	347 JumpIfNotEqual {350}
	348 Move X0, X20
	349 Call 0x1D2D690
	350 Move X0, X19
	351 Call 0x1C17F18
	352 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x0399A000 BL 0x1990590
	0x0399A004 STR X30, [X31 - 0x40]!
	0x0399A008 STP X24, X23, [X31 + 0x10]
	0x0399A00C STP X22, X21, [X31 + 0x20]
	0x0399A010 STP X20, X19, [X31 + 0x30]
	0x0399A014 ADRP X20, 0xA47000
	0x0399A018 LDRB W8, [X20 + 0xB25]
	0x0399A01C MOV X19, X0
	0x0399A020 TBNZ X8, 0x0, 0x399A050
	0x0399A024 ADRP X0, 0x759000
	0x0399A028 LDR X0, [X0 + 0x9C8]
	0x0399A02C BL 0x1C16CF4
	0x0399A030 ADRP X0, 0x7B6000
	0x0399A034 LDR X0, [X0 + 0xFD0]
	0x0399A038 BL 0x1C16CF4
	0x0399A03C ADRP X0, 0x759000
	0x0399A040 LDR X0, [X0 + 0x988]
	0x0399A044 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xA48000
	006 Move X21, 0x7B7000
	007 Move W8, [X20+2807]
	008 Move X21, [X21+4008]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x7B7000
	015 Move X0, [X0+4008]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2807], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call 0x25C9DA8, X0
	026 Return 

