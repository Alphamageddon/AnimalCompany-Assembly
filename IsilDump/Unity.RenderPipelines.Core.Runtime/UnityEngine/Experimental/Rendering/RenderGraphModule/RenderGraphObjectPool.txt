Type: UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphObjectPool

Method: System.Void .ctor()

Disassembly:
	0x0398CC2C MOV X2, X31
	0x0398CC30 BL 0x337DF1C
	0x0398CC34 ADRP X0, 0x7C4000
	0x0398CC38 LDR X0, [X0 + 0xA78]
	0x0398CC3C BL 0x1C16D08
	0x0398CC40 MOV X1, X0
	0x0398CC44 MOV X0, X19
	0x0398CC48 BL 0x1C16DEC
	0x0398CC4C BL 0x1C16F20
	0x0398CC50 SUB X31, X31, 0x50
	0x0398CC54 STP X30, X25, [X31 + 0x10]
	0x0398CC58 STP X24, X23, [X31 + 0x20]
	0x0398CC5C STP X22, X21, [X31 + 0x30]
	0x0398CC60 STP X20, X19, [X31 + 0x40]
	0x0398CC64 ADRP X22, 0xA55000
	0x0398CC68 LDRB W8, [X22 + 0xB0C]
	0x0398CC6C MOV W20, W2
	0x0398CC70 MOV X19, X1
	0x0398CC74 MOV X21, X0
	0x0398CC78 TBNZ X8, 0x0, 0x398CCA8
	0x0398CC7C ADRP X0, 0x790000
	0x0398CC80 LDR X0, [X0 + 0xA80]
	0x0398CC84 BL 0x1C16CF4
	0x0398CC88 ADRP X0, 0x7C4000
	0x0398CC8C LDR X0, [X0 + 0xA60]
	0x0398CC90 BL 0x1C16CF4
	0x0398CC94 ADRP X0, 0x7C4000
	0x0398CC98 LDR X0, [X0 + 0xA80]
	0x0398CC9C BL 0x1C16CF4
	0x0398CCA0 MOVZ W8, 0x1
	0x0398CCA4 STRB W8, [X22 + 0xB0C]
	0x0398CCA8 STR X31, [X31]
	0x0398CCAC LDR X8, [X21 + 0x10]
	0x0398CCB0 CBZ X8, 0x398CE08
	0x0398CCB4 LDR W9, [X8 + 0x18]
	0x0398CCB8 CBZ W9, 0x398CE0C
	0x0398CCBC LDR X23, [X8 + 0x20]
	0x0398CCC0 CBZ X23, 0x398CE08
	0x0398CCC4 LDR W24, [X23 + 0x18]
	0x0398CCC8 STR X31, [X31]
	0x0398CCCC CMP W24, 0x1
	0x0398CCD0 B.LT 0x398CD6C
	0x0398CCD4 ADRP X25, 0x790000
	0x0398CCD8 LDR X25, [X25 + 0xA80]
	0x0398CCDC MOV W22, W31
	0x0398CCE0 LDR X0, [X23 + 0x10]
	0x0398CCE4 CBZ X0, 0x398CE08
	0x0398CCE8 LDR X2, [X25]
	0x0398CCEC MOV W1, W22
	0x0398CCF0 BL 0x2B40178
	0x0398CCF4 LDR X8, [X0]
	0x0398CCF8 CBZ X8, 0x398CE08
	0x0398CCFC LDRB W8, [X8 + 0x11]
	0x0398CD00 CBZ W8, 0x398CD14
	0x0398CD04 ADD W22, W22, 0x1
	0x0398CD08 CMP W24, W22
	0x0398CD0C B.NE 0x398CCE0
	0x0398CD10 B 0x398CD6C
	0x0398CD14 LDR X0, [X23 + 0x10]
	0x0398CD18 CBZ X0, 0x398CE08
	0x0398CD1C LDR X2, [X25]
	0x0398CD20 MOV W1, W22
	0x0398CD24 BL 0x2B40178
	0x0398CD28 LDR X8, [X0]
	0x0398CD2C CBZ X8, 0x398CD64
	0x0398CD30 ADRP X10, 0x7C4000
	0x0398CD34 LDR X10, [X10 + 0xA80]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0xA56000
	011 Move X26, 0x7C5000
	012 Move X20, 0x7C5000
	013 Move X24, 0x7C5000
	014 Move X23, 0x7C5000
	015 Move X22, 0x7C5000
	016 Move X21, 0x7C5000
	017 Move X26, [X26+2416]
	018 Move W8, [X25+2780]
	019 Move X20, [X20+2424]
	020 Move X24, [X24+2432]
	021 Move X23, [X23+2440]
	022 Move X22, [X22+2448]
	023 Move X21, [X21+2456]
	024 Move X19, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {49}
	029 Move X0, 0x7C5000
	030 Move X0, [X0+2424]
	031 Call 0x1C17CF4
	032 Move X0, 0x7C5000
	033 Move X0, [X0+2416]
	034 Call 0x1C17CF4
	035 Move X0, 0x7C5000
	036 Move X0, [X0+2456]
	037 Call 0x1C17CF4
	038 Move X0, 0x7C5000
	039 Move X0, [X0+2440]
	040 Call 0x1C17CF4
	041 Move X0, 0x7C5000
	042 Move X0, [X0+2432]
	043 Call 0x1C17CF4
	044 Move X0, 0x7C5000
	045 Move X0, [X0+2448]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X25+2780], W8
	049 Move X0, [X26]
	050 Call 0x1C17F10
	051 Move X1, [X20]
	052 Move X20, X0
	053 Call Dictionary`2<ValueTuple`2<Object, Int32>, Object>..ctor, X0
	054 Move [X19+16], X20
	055 Move X0, [X24]
	056 Call 0x1C17F10
	057 Move X1, [X23]
	058 Move X20, X0
	059 Call List`1<ValueTuple`2<Object, ValueTuple`2<Object, Int32>>>..ctor, X0
	060 Move [X19+24], X20
	061 Move X0, [X22]
	062 Call 0x1C17F10
	063 Move X1, [X21]
	064 Move X20, X0
	065 Call List`1<Object>..ctor, X0
	066 Move [X19+32], X20
	067 Move X0, X19
	068 Move X20, [X31+64]
	069 Move X19, [X31+72]
	070 Move X22, [X31+48]
	071 Move X21, [X31+56]
	072 Move X24, [X31+32]
	073 Move X23, [X31+40]
	074 Move X26, [X31+16]
	075 Move X25, [X31+24]
	076 Move X1, X31
	077 Move X30, [X31+80]
	078 Call Object..ctor, X0
	079 Return 

Method: T[] GetTempArray(System.Int32 size)

Disassembly:
	0x02242288 LDR X8, [X19 + 0x38]
	0x0224228C MOV X0, X22
	0x02242290 LDP X20, X19, [X31 + 0x20]
	0x02242294 LDP X22, X21, [X31 + 0x10]
	0x02242298 LDR X1, [X8]
	0x0224229C LDR X2, [X1]
	0x022422A0 LDR X30, [X31], #0x30
	0x022422A4 BR X2
	0x022422A8 BL 0x1C16F20
	0x022422AC STP X30, X21, [X31 - 0x20]!
	0x022422B0 STP X20, X19, [X31 + 0x10]
	0x022422B4 LDR X8, [X2 + 0x38]
	0x022422B8 MOV X20, X2
	0x022422BC MOV X19, X1
	0x022422C0 MOV X21, X0
	0x022422C4 CBNZ X8, 0x22422E4
	0x022422C8 ADRP X0, 0x1EDA000
	0x022422CC LDR X0, [X0 + 0x4C8]
	0x022422D0 BL 0x1C16CF4
	0x022422D4 LDR X8, [X20 + 0x38]
	0x022422D8 CBNZ X8, 0x22422E4
	0x022422DC MOV X0, X20
	0x022422E0 BL 0x1C5C6E0
	0x022422E4 CBZ X21, 0x2242318
	0x022422E8 ADRP X8, 0x1EDA000
	0x022422EC LDR X8, [X8 + 0x4C8]
	0x022422F0 MOV X1, X19
	0x022422F4 MOV X0, X21
	0x022422F8 LDR X8, [X8]
	0x022422FC STR X8, [X21 + 0x18]
	0x02242300 LDR X8, [X20 + 0x38]
	0x02242304 LDP X20, X19, [X31 + 0x10]
	0x02242308 LDR X2, [X8 + 0x8]
	0x0224230C LDR X3, [X2]
	0x02242310 LDP X30, X21, [X31], #0x20
	0x02242314 BR X3
	0x02242318 BL 0x1C16F20
	0x0224231C STP X30, X23, [X31 - 0x30]!
	0x02242320 STP X22, X21, [X31 + 0x10]
	0x02242324 STP X20, X19, [X31 + 0x20]
	0x02242328 LDR X8, [X3 + 0x38]
	0x0224232C MOV X20, X3
	0x02242330 MOV X19, X2
	0x02242334 MOV X21, X1
	0x02242338 MOV X22, X0
	0x0224233C CBNZ X8, 0x224235C
	0x02242340 ADRP X0, 0x1EDA000
	0x02242344 LDR X0, [X0 + 0x4C0]
	0x02242348 BL 0x1C16CF4
	0x0224234C LDR X8, [X20 + 0x38]
	0x02242350 CBNZ X8, 0x224235C
	0x02242354 MOV X0, X20
	0x02242358 BL 0x1C5C6E0
	0x0224235C ADRP X8, 0x1EDA000
	0x02242360 LDR X8, [X8 + 0x4C0]
	0x02242364 LDR X0, [X8]
	0x02242368 BL 0x1C16F10
	0x0224236C MOV X1, X31
	0x02242370 MOV X23, X0
	0x02242374 BL 0x358B55C
	0x02242378 CBZ X23, 0x22423A8
	0x0224237C STR X22, [X23 + 0x10]
	0x02242380 STR X21, [X23 + 0x20]
	0x02242384 LDR X8, [X20 + 0x38]
	0x02242388 MOV X1, X19
	0x0224238C LDP X20, X19, [X31 + 0x20]
	0x02242390 LDP X22, X21, [X31 + 0x10]
	0x02242394 LDR X2, [X8 + 0x8]
	0x02242398 MOV X0, X23
	0x0224239C LDR X3, [X2]
	0x022423A0 LDP X30, X23, [X31], #0x30
	0x022423A4 BR X3
	0x022423A8 BL 0x1C16F20
	0x022423AC STR X30, [X31 - 0x30]!
	0x022423B0 STP X22, X21, [X31 + 0x10]
	0x022423B4 STP X20, X19, [X31 + 0x20]
	0x022423B8 LDR X8, [X1 + 0x38]
	0x022423BC MOV X20, X1
	0x022423C0 MOV X19, X0
	0x022423C4 CBNZ X8, 0x22423D4
	0x022423C8 MOV X0, X20
	0x022423CC BL 0x1C5C6E0
	0x022423D0 LDR X8, [X20 + 0x38]
	0x022423D4 LDR X0, [X8]
	0x022423D8 LDRB W8, [X0 + 0x135]
	0x022423DC TBNZ X8, 0x0, 0x22423E4
	0x022423E0 BL 0x1C5C684
	0x022423E4 BL 0x1C16F10
	0x022423E8 LDR X8, [X20 + 0x38]
	0x022423EC MOV X21, X0
	0x022423F0 LDR X1, [X8 + 0x8]
	0x022423F4 LDR X8, [X1]
	0x022423F8 BLR X8
	0x022423FC LDR X8, [X20 + 0x38]
	0x02242400 LDR X0, [X8 + 0x18]
	0x02242404 LDRB W8, [X0 + 0x135]
	0x02242408 TBNZ X8, 0x0, 0x2242410
	0x0224240C BL 0x1C5C684
	0x02242410 BL 0x1C16F10
	0x02242414 LDR X8, [X20 + 0x38]
	0x02242418 MOV X1, X21
	0x0224241C MOV X22, X0
	0x02242420 LDR X3, [X8 + 0x20]
	0x02242424 LDR X2, [X8 + 0x10]
	0x02242428 LDR X9, [X3]
	0x0224242C BLR X9
	0x02242430 LDR X8, [X20 + 0x38]
	0x02242434 MOV X0, X19
	0x02242438 MOV X1, X22
	0x0224243C LDR X2, [X8 + 0x28]
	0x02242440 LDR X8, [X2]
	0x02242444 BLR X8
	0x02242448 MOV X0, X21
	0x0224244C LDP X20, X19, [X31 + 0x20]
	0x02242450 LDP X22, X21, [X31 + 0x10]
	0x02242454 LDR X30, [X31], #0x30
	0x02242458 RET
	0x0224245C STP X30, X21, [X31 - 0x20]!
	0x02242460 STP X20, X19, [X31 + 0x10]
	0x02242464 LDR X8, [X1 + 0x38]
	0x02242468 MOV X19, X1
	0x0224246C MOV X20, X0
	0x02242470 CBNZ X8, 0x2242490
	0x02242474 ADRP X0, 0x1EDA000
	0x02242478 LDR X0, [X0 + 0x4C0]
	0x0224247C BL 0x1C16CF4
	0x02242480 LDR X8, [X19 + 0x38]
	0x02242484 CBNZ X8, 0x2242490
	0x02242488 MOV X0, X19
	0x0224248C BL 0x1C5C6E0
	0x02242490 ADRP X8, 0x1EDA000
	0x02242494 LDR X8, [X8 + 0x4C0]
	0x02242498 LDR X0, [X8]
	0x0224249C BL 0x1C16F10
	0x022424A0 MOV X1, X31
	0x022424A4 MOV X21, X0
	0x022424A8 BL 0x358B55C
	0x022424AC CBZ X21, 0x22424D0
	0x022424B0 STR X20, [X21 + 0x10]
	0x022424B4 LDR X8, [X19 + 0x38]
	0x022424B8 LDP X20, X19, [X31 + 0x10]
	0x022424BC MOV X0, X21
	0x022424C0 LDR X1, [X8]
	0x022424C4 LDR X2, [X1]
	0x022424C8 LDP X30, X21, [X31], #0x20
	0x022424CC BR X2
	0x022424D0 BL 0x1C16F20
	0x022424D4 STP X30, X21, [X31 - 0x20]!
	0x022424D8 STP X20, X19, [X31 + 0x10]
	0x022424DC LDR X8, [X2 + 0x38]
	0x022424E0 MOV X20, X2
	0x022424E4 MOV X19, X1
	0x022424E8 MOV X21, X0
	0x022424EC CBNZ X8, 0x224250C
	0x022424F0 ADRP X0, 0x1EDA000
	0x022424F4 LDR X0, [X0 + 0x4D0]
	0x022424F8 BL 0x1C16CF4
	0x022424FC LDR X8, [X20 + 0x38]
	0x02242500 CBNZ X8, 0x224250C
	0x02242504 MOV X0, X20
	0x02242508 BL 0x1C5C6E0
	0x0224250C CBZ X21, 0x2242540
	0x02242510 ADRP X8, 0x1EDA000
	0x02242514 LDR X8, [X8 + 0x4D0]
	0x02242518 MOV X1, X19
	0x0224251C MOV X0, X21
	0x02242520 LDR X8, [X8]
	0x02242524 STR X8, [X21 + 0x18]
	0x02242528 LDR X8, [X20 + 0x38]
	0x0224252C LDP X20, X19, [X31 + 0x10]
	0x02242530 LDR X2, [X8 + 0x8]
	0x02242534 LDR X3, [X2]
	0x02242538 LDP X30, X21, [X31], #0x20
	0x0224253C BR X3
	0x02242540 BL 0x1C16F20
	0x02242544 STR X30, [X31 - 0x30]!
	0x02242548 STP X22, X21, [X31 + 0x10]
	0x0224254C STP X20, X19, [X31 + 0x20]
	0x02242550 LDR X8, [X2 + 0x38]
	0x02242554 MOV X20, X2
	0x02242558 MOV X19, X1
	0x0224255C MOV X21, X0
	0x02242560 CBNZ X8, 0x2242580
	0x02242564 ADRP X0, 0x1EDA000
	0x02242568 LDR X0, [X0 + 0x4C0]
	0x0224256C BL 0x1C16CF4
	0x02242570 LDR X8, [X20 + 0x38]
	0x02242574 CBNZ X8, 0x2242580
	0x02242578 MOV X0, X20
	0x0224257C BL 0x1C5C6E0
	0x02242580 ADRP X8, 0x1EDA000
	0x02242584 LDR X8, [X8 + 0x4C0]
	0x02242588 LDR X0, [X8]
	0x0224258C BL 0x1C16F10
	0x02242590 MOV X1, X31
	0x02242594 MOV X22, X0
	0x02242598 BL 0x358B55C
	0x0224259C CBZ X22, 0x22425C8
	0x022425A0 STR X21, [X22 + 0x10]
	0x022425A4 LDR X8, [X20 + 0x38]
	0x022425A8 MOV X0, X22
	0x022425AC MOV X1, X19
	0x022425B0 LDP X20, X19, [X31 + 0x20]
	0x022425B4 LDR X2, [X8 + 0x8]
	0x022425B8 LDP X22, X21, [X31 + 0x10]
	0x022425BC LDR X3, [X2]
	0x022425C0 LDR X30, [X31], #0x30
	0x022425C4 BR X3
	0x022425C8 BL 0x1C16F20
	0x022425CC STR X30, [X31 - 0x30]!
	0x022425D0 STP X22, X21, [X31 + 0x10]
	0x022425D4 STP X20, X19, [X31 + 0x20]
	0x022425D8 LDR X8, [X1 + 0x38]
	0x022425DC MOV X20, X1
	0x022425E0 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+112], X30
	003 Move [X31+128], X26
	004 Move [X31+136], X25
	005 Move [X31+144], X24
	006 Move [X31+152], X23
	007 Move [X31+160], X22
	008 Move [X31+168], X21
	009 Move [X31+176], X20
	010 Move [X31+184], X19
	011 Move X8, [X2+56]
	012 Move X20, X2
	013 Move W19, W1
	014 Move X21, X0
	015 Compare X8, 0
	016 JumpIfNotEqual {53}
	017 Move X0, 0x1EDB000
	018 Move X0, [X0+1128]
	019 Call 0x1C17CF4
	020 Move X0, 0x1EDB000
	021 Move X0, [X0+1136]
	022 Call 0x1C17CF4
	023 Move X0, 0x1EDB000
	024 Move X0, [X0+1144]
	025 Call 0x1C17CF4
	026 Move X0, 0x1EDB000
	027 Move X0, [X0+1152]
	028 Call 0x1C17CF4
	029 Move X0, 0x1EDB000
	030 Move X0, [X0+1160]
	031 Call 0x1C17CF4
	032 Move X0, 0x1EDB000
	033 Move X0, [X0+1168]
	034 Call 0x1C17CF4
	035 Move X0, 0x1EDB000
	036 Move X0, [X0+1176]
	037 Call 0x1C17CF4
	038 Move X0, 0x1EB2000
	039 Move X0, [X0+1728]
	040 Call 0x1C17CF4
	041 Move X0, 0x1EDB000
	042 Move X0, [X0+1184]
	043 Call 0x1C17CF4
	044 Move X0, 0x1EDB000
	045 Move X0, [X0+1192]
	046 Call 0x1C17CF4
	047 Move X8, [X20+56]
	048 Compare X8, 0
	049 JumpIfNotEqual {53}
	050 Move X0, X20
	051 Call 0x1C5D6E0
	052 Move X8, [X20+56]
	053 Move X25, 0x1EB2000
	054 Move X25, [X25+1728]
	055 Move [X31+120], X31
	056 Move X22, [X21+16]
	057 Move X23, [X8]
	058 Move X0, [X25]
	059 Move W9, [X0+224]
	060 Compare W9, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X23
	064 Move X1, X31
	065 Call Type.GetTypeFromHandle, X0
	066 Move X26, 0x1EDB000
	067 Move X26, [X26+1184]
	068 Move X1, X0
	069 Add X0, X31, 80
	070 Move W2, W19
	071 Move X3, [X26]
	072 Move [X31+80], X31
	073 Move [X31+88], X31
	074 Call ValueTuple`2<Object, Int32>..ctor, X0, X1, X2
	075 Compare X22, 0
	076 JumpIfEqual {247}
	077 Move X8, 0x1EDB000
	078 Move X1, [X31+80]
	079 Move X2, [X31+88]
	080 Move X8, [X8+1136]
	081 Add X3, X31, 120
	082 Move X0, X22
	083 Move X4, [X8]
	084 Call Dictionary`2<ValueTuple`2<Object, Int32>, Object>.TryGetValue, X0, X1, X2
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfEqual {127}
	089 Move X8, 0x1EDB000
	090 Move X8, [X8+1176]
	091 Move X0, [X8]
	092 Call 0x1C17F10
	093 Move X8, 0x1EDB000
	094 Move X8, [X8+1160]
	095 Move X22, X0
	096 Move X1, [X8]
	097 Call Stack`1<Object>..ctor, X0
	098 Move [X31+120], X22
	099 Move X0, [X25]
	100 Move X8, [X20+56]
	101 Move X22, [X21+16]
	102 Move W9, [X0+224]
	103 Move X23, [X8]
	104 Compare W9, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Move X0, X23
	108 Move X1, X31
	109 Call Type.GetTypeFromHandle, X0
	110 Move X3, [X26]
	111 Move X1, X0
	112 Add X0, X31, 80
	113 Move W2, W19
	114 Move [X31+80], X31
	115 Move [X31+88], X31
	116 Call ValueTuple`2<Object, Int32>..ctor, X0, X1, X2
	117 Compare X22, 0
	118 JumpIfEqual {247}
	119 Move X8, 0x1EDB000
	120 Move X3, [X31+120]
	121 Move X1, [X31+80]
	122 Move X2, [X31+88]
	123 Move X8, [X8+1128]
	124 Move X0, X22
	125 Move X4, [X8]
	126 Call Dictionary`2<ValueTuple`2<Object, Int32>, Object>.Add, X0, X1, X2
	127 Move X0, [X31+120]
	128 Compare X0, 0
	129 JumpIfEqual {247}
	130 Move W8, [X0+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X8, 0x1EDB000
	133 Move X8, [X8+1152]
	134 Move X1, [X8]
	135 Call Stack`1<Object>.Pop, X0
	136 Move X8, [X20+56]
	137 Move X24, X0
	138 Move X23, [X8+16]
	139 Move W8, [X23+309]
	140 Move TEMP, X8
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfEqual {147}
	144 Move X0, X23
	145 Call 0x1C5D684
	146 Move X23, X0
	147 Compare X24, 0
	148 JumpIfEqual {169}
	149 Move X0, X24
	150 Move X1, X23
	151 Call 0x1C17E00
	152 Move X22, X0
	153 Compare X0, 0
	154 JumpIfNotEqual {170}
	155 Move X0, X24
	156 Move X1, X23
	157 Call 0x1C181E0
	158 Move X8, [X20+56]
	159 Move X0, [X8+8]
	160 Move W8, [X0+309]
	161 Move TEMP, X8
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfEqual {166}
	165 Call 0x1C5D684
	166 Move W1, W19
	167 Call 0x1C17D6C
	168 Move X22, X0
	169 Move X22, X31
	170 Move X0, [X25]
	171 Move X8, [X20+56]
	172 Move X20, [X21+24]
	173 Move W9, [X0+224]
	174 Move X21, [X8]
	175 Compare W9, 0
	176 JumpIfNotEqual {178}
	177 Call 0x1C17DFC
	178 Move X0, X21
	179 Move X1, X31
	180 Call Type.GetTypeFromHandle, X0
	181 Move X3, [X26]
	182 Move X1, X0
	183 Add X0, X31, 32
	184 Move W2, W19
	185 Move [X31+32], X31
	186 Move [X31+40], X31
	187 Call ValueTuple`2<Object, Int32>..ctor, X0, X1, X2
	188 Move X8, 0x1EDB000
	189 Move X2, [X31+32]
	190 Move X3, [X31+40]
	191 Move X8, [X8+1192]
	192 Add X0, X31, 8
	193 Move X1, X22
	194 Move [X31+8], X31
	195 Move [X31+16], X31
	196 Move X4, [X8]
	197 Move [X31+24], X31
	198 Call ValueTuple`2<Object, ValueTuple`2<Object, Int32>>..ctor, X0, X1, X2
	199 Compare X20, 0
	200 JumpIfEqual {247}
	201 NotImplemented "Instruction LDUR not yet implemented."
	202 Move X8, [X31+24]
	203 Move X9, 0x1EDB000
	204 Move X9, [X9+1144]
	205 Move [X31+3], V0
	206 Move [X31+64], X8
	207 Move W11, [X20+28]
	208 Move X8, [X20+16]
	209 Move X10, [X9]
	210 Add W9, W11, 1
	211 Move [X20+28], W9
	212 Compare X8, 0
	213 JumpIfEqual {247}
	214 NotImplemented "Instruction LDRSW not yet implemented."
	215 Move W11, [X8+24]
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Add W10, W9, 1
	218 Move [X20+24], W10
	219 Move X10, [X31+64]
	220 Move V0, [X31+3]
	221 Move W11, 24
	222 NotImplemented "Instruction MADD not yet implemented."
	223 Move [X8+48], X10
	224 Move [X8+2], V0
	225 Move X8, [X10+32]
	226 Move V0, [X31+3]
	227 Move X9, [X31+64]
	228 Add X1, X31, 80
	229 Move X8, [X8+192]
	230 Move X0, X20
	231 Move X2, [X8+112]
	232 Move [X31+5], V0
	233 Move [X31+96], X9
	234 Call List`1<ValueTuple`2<Object, ValueTuple`2<Object, Int32>>>.AddWithResize, X0, X1
	235 Move X0, X22
	236 Move X20, [X31+176]
	237 Move X19, [X31+184]
	238 Move X22, [X31+160]
	239 Move X21, [X31+168]
	240 Move X24, [X31+144]
	241 Move X23, [X31+152]
	242 Move X26, [X31+128]
	243 Move X25, [X31+136]
	244 Move X30, [X31+112]
	245 Add X31, X31, 192
	246 Return X0
	247 Call 0x1C17F20

Method: UnityEngine.MaterialPropertyBlock GetTempMaterialPropertyBlock()

Disassembly:
	0x039985FC BL 0x1C16DEC
	0x03998600 SUB X31, X31, 0x50
	0x03998604 STP X30, X25, [X31 + 0x10]
	0x03998608 STP X24, X23, [X31 + 0x20]
	0x0399860C STP X22, X21, [X31 + 0x30]
	0x03998610 STP X20, X19, [X31 + 0x40]
	0x03998614 ADRP X22, 0xA49000
	0x03998618 ADRP X21, 0x784000
	0x0399861C ADRP X25, 0x75B000
	0x03998620 LDRB W8, [X22 + 0xAEF]
	0x03998624 LDR X21, [X21 + 0x4F0]
	0x03998628 LDR X25, [X25 + 0x988]
	0x0399862C MOV X20, X1
	0x03998630 MOV X19, X0
	0x03998634 TBNZ X8, 0x0, 0x399867C
	0x03998638 ADRP X0, 0x7B8000
	0x0399863C LDR X0, [X0 + 0xF08]
	0x03998640 BL 0x1C16CF4
	0x03998644 ADRP X0, 0x784000
	0x03998648 LDR X0, [X0 + 0x4F0]
	0x0399864C BL 0x1C16CF4
	0x03998650 ADRP X0, 0x75B000
	0x03998654 LDR X0, [X0 + 0x758]
	0x03998658 BL 0x1C16CF4
	0x0399865C ADRP X0, 0x75B000
	0x03998660 LDR X0, [X0 + 0x988]
	0x03998664 BL 0x1C16CF4
	0x03998668 ADRP X0, 0x7B8000
	0x0399866C LDR X0, [X0 + 0xF10]
	0x03998670 BL 0x1C16CF4
	0x03998674 MOVZ W8, 0x1
	0x03998678 STRB W8, [X22 + 0xAEF]
	0x0399867C LDR X0, [X21]
	0x03998680 LDP W22, W23, [X19 + 0x30]
	0x03998684 LDR W24, [X19 + 0x38]
	0x03998688 BL 0x1C16F10
	0x0399868C MOV W1, W22
	0x03998690 MOV W2, W23
	0x03998694 MOV W3, W24
	0x03998698 MOV X4, X31
	0x0399869C MOV X21, X0
	0x039986A0 BL 0x3C3AC18
	0x039986A4 STR X21, [X19 + 0x48]
	0x039986A8 LDR X1, [X25]
	0x039986AC MOV X0, X20
	0x039986B0 MOV X2, X31
	0x039986B4 BL 0x321BA08
	0x039986B8 TBZ X0, 0x0, 0x3998738
	0x039986BC ADRP X22, 0x75B000
	0x039986C0 LDR W8, [X19 + 0x30]
	0x039986C4 LDR X22, [X22 + 0x758]
	0x039986C8 ADD X1, X31, 0xC
	0x039986CC STR W8, [X31 + 0xC]
	0x039986D0 LDR X0, [X22]
	0x039986D4 BL 0x1C16E04
	0x039986D8 MOV X20, X0
	0x039986DC LDR W8, [X19 + 0x34]
	0x039986E0 LDR X0, [X22]
	0x039986E4 ADD X1, X31, 0x8
	0x039986E8 STR W8, [X31 + 0x8]
	0x039986EC BL 0x1C16E04
	0x039986F0 ADRP X9, 0x7B8000
	0x039986F4 LDR W8, [X19 + 0x38]
	0x039986F8 LDR X9, [X9 + 0xF08]
	0x039986FC MOV X22, X0
	0x03998700 ADD X1, X31, 0x4
	0x03998704 STR W8, [X31 + 0x4]
	0x03998708 LDR X0, [X9]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA4A000
	006 Move X20, 0x7B9000
	007 Move W8, [X21+2781]
	008 Move X20, [X20+3480]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x7B9000
	015 Move X0, [X0+3632]
	016 Call 0x1C17CF4
	017 Move X0, 0x7B9000
	018 Move X0, [X0+3640]
	019 Call 0x1C17CF4
	020 Move X0, 0x7B9000
	021 Move X0, [X0+3472]
	022 Call 0x1C17CF4
	023 Move X0, 0x7B9000
	024 Move X0, [X0+3480]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2781], W8
	028 Move X0, [X20]
	029 Move X20, 0x7B9000
	030 Move W8, [X0+224]
	031 Move X20, [X20+3472]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, [X20]
	036 Call 0x25E6C20
	037 Compare X0, 0
	038 JumpIfEqual {78}
	039 Move X8, 0x7B9000
	040 Move X8, [X8+3640]
	041 Move X1, [X8]
	042 Call 0x25E6A80, X0
	043 Compare X0, 0
	044 JumpIfEqual {78}
	045 Move X1, X31
	046 Move X20, X0
	047 Call MaterialPropertyBlock.Clear, X0
	048 Move X0, [X19+32]
	049 Compare X0, 0
	050 JumpIfEqual {78}
	051 Move X9, 0x7B9000
	052 Move X9, [X9+3632]
	053 Move W10, [X0+28]
	054 Move X8, [X0+16]
	055 Move X9, [X9]
	056 Add W10, W10, 1
	057 Move [X0+28], W10
	058 Compare X8, 0
	059 JumpIfEqual {78}
	060 NotImplemented "Instruction LDRSW not yet implemented."
	061 Move W11, [X8+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Add W9, W10, 1
	064 Add X8, X8, X10
	065 Move [X0+24], W9
	066 Move [X8+32], X20
	067 Move X8, [X9+32]
	068 Move X1, X20
	069 Move X8, [X8+192]
	070 Move X2, [X8+112]
	071 Call List`1<Object>.AddWithResize, X0, X1
	072 Move X0, X20
	073 Move X20, [X31+16]
	074 Move X19, [X31+24]
	075 Move X30, [X31+32]
	076 Move X21, [X31+40]
	077 Return X0
	078 Call 0x1C17F20

Method: System.Void ReleaseAllTempAlloc()

Disassembly:
	0x039957EC LDR X8, [X31 + 0x70]
	0x039957F0 LDR W8, [X8 + 0x18]
	0x039957F4 CMP W23, W8
	0x039957F8 B.CS 0x3995CD0
	0x039957FC ADRP X8, 0x789000
	0x03995800 LDR X8, [X8 + 0x730]
	0x03995804 LDR X25, [X31 + 0xE0]
	0x03995808 LDR X24, [X21]
	0x0399580C LDR X0, [X8]
	0x03995810 LDR W8, [X0 + 0xE0]
	0x03995814 CBNZ W8, 0x399581C
	0x03995818 BL 0x1C16DFC
	0x0399581C MOV X0, X25
	0x03995820 BL 0x398FDA8
	0x03995824 MOV W1, W0
	0x03995828 CBZ X24, 0x3995CC0
	0x0399582C ADRP X9, 0x75F000
	0x03995830 LDR W10, [X24 + 0x1C]
	0x03995834 LDR X8, [X24 + 0x10]
	0x03995838 LDR X9, [X9 + 0xE10]
	0x0399583C ADD W10, W10, 0x1
	0x03995840 LDR X9, [X9]
	0x03995844 STR W10, [X24 + 0x1C]
	0x03995848 CBZ X8, 0x3995CC8
	0x0399584C LDRSW X10, [X24 + 0x18]
	0x03995850 LDR W11, [X8 + 0x18]
	0x03995854 CMP W10, W11
	0x03995858 B.CS 0x3995870
	0x0399585C ADD W9, W10, 0x1
	0x03995860 ADD X8, X8, X10, 0x2, LSL
	0x03995864 STR W9, [X24 + 0x18]
	0x03995868 STR W1, [X8 + 0x20]
	0x0399586C B 0x39957D4
	0x03995870 LDR X8, [X9 + 0x20]
	0x03995874 LDR X8, [X8 + 0xC0]
	0x03995878 LDR X2, [X8 + 0x70]
	0x0399587C MOV X0, X24
	0x03995880 BL 0x2FDC70C
	0x03995884 B 0x39957D4
	0x03995888 ADRP X8, 0x7BB000
	0x0399588C LDR X8, [X8 + 0xBF8]
	0x03995890 ADD X0, X31, 0xD0
	0x03995894 LDR X1, [X8]
	0x03995898 BL 0x2BC8CD0
	0x0399589C LDR X8, [X31 + 0x40]
	0x039958A0 LDR X8, [X8]
	0x039958A4 CBZ X8, 0x3995FD4
	0x039958A8 LDR X8, [X8 + 0x58]
	0x039958AC CBZ X8, 0x3995FD4
	0x039958B0 LDR W9, [X8 + 0x18]
	0x039958B4 CMP W23, W9
	0x039958B8 B.CS 0x3995FE4
	0x039958BC ADD X8, X8, X29, 0x3, LSL
	0x039958C0 LDR X0, [X8 + 0x20]
	0x039958C4 CBZ X0, 0x3995FD4
	0x039958C8 ADRP X8, 0x7BB000
	0x039958CC LDR X8, [X8 + 0xC10]
	0x039958D0 LDR X1, [X8]
	0x039958D4 ADD X8, X31, 0x1A0
	0x039958D8 BL 0x304A5A4
	0x039958DC LDR V0, [X27 + 0xB]
	0x039958E0 LDR X8, [X27 + 0xC0]
	0x039958E4 STR V0, [X31 + 0xD]
	0x039958E8 STR X8, [X31 + 0xE0]
	0x039958EC ADRP X8, 0x7BB000
	0x039958F0 LDR X8, [X8 + 0xC00]
	0x039958F4 LDR X1, [X8]
	0x039958F8 ADD X0, X31, 0xD0
	0x039958FC BL 0x2BC8CD4
	0x03995900 TBZ X0, 0x0, 0x399599C
	0x03995904 LDR W8, [X22 + 0x18]
	0x03995908 CMP W23, W8
	0x0399590C B.CS 0x3995CE8
	0x03995910 ADRP X8, 0x789000
	0x03995914 LDR X8, [X8 + 0x730]
	0x03995918 LDR X25, [X31 + 0xE0]
	0x0399591C LDR X24, [X19]
	0x03995920 LDR X0, [X8]
	0x03995924 LDR W8, [X0 + 0xE0]
	0x03995928 CBNZ W8, 0x3995930
	0x0399592C BL 0x1C16DFC
	0x03995930 MOV X0, X25
	0x03995934 BL 0x398FDA8
	0x03995938 MOV W1, W0
	0x0399593C CBZ X24, 0x3995CD8
	0x03995940 ADRP X9, 0x75F000
	0x03995944 LDR W10, [X24 + 0x1C]
	0x03995948 LDR X8, [X24 + 0x10]
	0x0399594C LDR X9, [X9 + 0xE10]
	0x03995950 ADD W10, W10, 0x1
	0x03995954 LDR X9, [X9]
	0x03995958 STR W10, [X24 + 0x1C]
	0x0399595C CBZ X8, 0x3995CE0
	0x03995960 LDRSW X10, [X24 + 0x18]
	0x03995964 LDR W11, [X8 + 0x18]
	0x03995968 CMP W10, W11
	0x0399596C B.CS 0x3995984
	0x03995970 ADD W9, W10, 0x1
	0x03995974 ADD X8, X8, X10, 0x2, LSL
	0x03995978 STR W9, [X24 + 0x18]
	0x0399597C STR W1, [X8 + 0x20]
	0x03995980 B 0x39958EC
	0x03995984 LDR X8, [X9 + 0x20]
	0x03995988 LDR X8, [X8 + 0xC0]
	0x0399598C LDR X2, [X8 + 0x70]
	0x03995990 MOV X0, X24
	0x03995994 BL 0x2FDC70C
	0x03995998 B 0x39958EC
	0x0399599C ADRP X8, 0x7BB000
	0x039959A0 LDR X8, [X8 + 0xBF8]
	0x039959A4 ADD X0, X31, 0xD0
	0x039959A8 LDR X1, [X8]
	0x039959AC BL 0x2BC8CD0
	0x039959B0 LDR X8, [X31 + 0x40]
	0x039959B4 LDR X8, [X8 + 0x8]
	0x039959B8 CBZ X8, 0x3995FD4
	0x039959BC LDR W9, [X8 + 0x18]
	0x039959C0 CMP W23, W9
	0x039959C4 B.CS 0x3995FE4
	0x039959C8 ADD X8, X8, X29, 0x3, LSL
	0x039959CC LDR X0, [X8 + 0x20]
	0x039959D0 CBZ X0, 0x3995FD4
	0x039959D4 ADRP X8, 0x789000
	0x039959D8 LDR X8, [X8 + 0xB50]
	0x039959DC LDR X1, [X8]
	0x039959E0 ADD X8, X31, 0x1A0
	0x039959E4 BL 0x2FDD2BC
	0x039959E8 LDR V0, [X27 + 0xB]
	0x039959EC LDR X8, [X27 + 0xC0]
	0x039959F0 STR V0, [X31 + 0xB]
	0x039959F4 STR X8, [X31 + 0xC0]
	0x039959F8 ADRP X8, 0x789000
	0x039959FC LDR X8, [X8 + 0xB28]
	0x03995A00 LDR X1, [X8]
	0x03995A04 ADD X0, X31, 0xB0
	0x03995A08 BL 0x2BBDDA0
	0x03995A0C TBZ X0, 0x0, 0x3995B1C
	0x03995A10 LDR X8, [X27 + 0x28]
	0x03995A14 CBZ X8, 0x3995CF8
	0x03995A18 LDR X8, [X8 + 0x18]
	0x03995A1C CBZ X8, 0x3995D00
	0x03995A20 LDR W9, [X8 + 0x18]
	0x03995A24 CMP W23, W9
	0x03995A28 B.CS 0x3995D08
	0x03995A2C ADD X8, X8, X29, 0x3, LSL
	0x03995A30 LDR X0, [X8 + 0x20]
	0x03995A34 CBZ X0, 0x3995CF0
	0x03995A38 ADRP X8, 0x7BB000
	0x03995A3C LDR W24, [X31 + 0xC0]
	0x03995A40 LDR X8, [X8 + 0xDD0]
	0x03995A44 LDR X2, [X8]
	0x03995A48 ADD X8, X31, 0x1A0
	0x03995A4C MOV W1, W24
	0x03995A50 BL 0x313D3FC
	0x03995A54 LDR X8, [X27 + 0xB0]
	0x03995A58 LDRB W9, [X31 + 0x1A8]
	0x03995A5C LDRH W10, [X20]
	0x03995A60 LDRB W11, [X20 + 0x2]
	0x03995A64 LDR V0, [X26]
	0x03995A68 LDR X12, [X26 + 0x10]
	0x03995A6C STRH W10, [X31 + 0xAC]
	0x03995A70 STRB W11, [X31 + 0xAE]
	0x03995A74 STR V0, [X31 + 0x9]
	0x03995A78 STR X12, [X31 + 0xA0]
	0x03995A7C TBNZ X9, 0x0, 0x39959F8
	0x03995A80 LDR X10, [X27 + 0x28]
	0x03995A84 CBZ X10, 0x3995D38
	0x03995A88 LDR X10, [X10 + 0x18]
	0x03995A8C CBZ X10, 0x3995D30
	0x03995A90 LDR W11, [X10 + 0x18]
	0x03995A94 CMP W23, W11
	0x03995A98 B.CS 0x3995D40
	0x03995A9C ADD X10, X10, X29, 0x3, LSL
	0x03995AA0 LDRH W11, [X31 + 0xAC]
	0x03995AA4 LDRB W12, [X31 + 0xAE]
	0x03995AA8 LDR V0, [X31 + 0x9]
	0x03995AAC LDR X13, [X31 + 0xA0]
	0x03995AB0 LDR X0, [X10 + 0x20]
	0x03995AB4 STRH W11, [X31 + 0x80]
	0x03995AB8 STRB W12, [X31 + 0x82]
	0x03995ABC STR V0, [X27 + 0xB]
	0x03995AC0 STR X13, [X27 + 0xC0]
	0x03995AC4 CBZ X0, 0x3995D48
	0x03995AC8 ADRP X10, 0x7BB000
	0x03995ACC LDR X10, [X10 + 0xDD8]
	0x03995AD0 STR X8, [X27 + 0x60]
	0x03995AD4 LDRB W8, [X31 + 0x82]
	0x03995AD8 LDR X11, [X31 + 0x60]
	0x03995ADC STRB W9, [X31 + 0x158]
	0x03995AE0 LDRH W9, [X31 + 0x80]
	0x03995AE4 LDR X3, [X10]
	0x03995AE8 STRB W8, [X11 + 0x2]
	0x03995AEC LDR W8, [X31 + 0x6C]
	0x03995AF0 LDR V0, [X27 + 0xB]
	0x03995AF4 LDR X10, [X27 + 0xC0]
	0x03995AF8 STRH W9, [X11]
	0x03995AFC STR W8, [X31 + 0x15C]
	0x03995B00 LDR X8, [X31 + 0x58]
	0x03995B04 STR X10, [X8 + 0x10]
	0x03995B08 STR V0, [X8]
	0x03995B0C ADD X2, X31, 0x150
	0x03995B10 MOV W1, W24
	0x03995B14 BL 0x313D464
	0x03995B18 B 0x39959F8
	0x03995B1C ADRP X8, 0x789000
	0x03995B20 LDR X8, [X8 + 0xB18]
	0x03995B24 ADD X0, X31, 0xB0
	0x03995B28 LDR X1, [X8]
	0x03995B2C BL 0x2BBDD9C
	0x03995B30 LDR X8, [X31 + 0x40]
	0x03995B34 LDR X8, [X8 + 0x10]
	0x03995B38 CBZ X8, 0x3995FD4
	0x03995B3C LDR W9, [X8 + 0x18]
	0x03995B40 CMP W23, W9
	0x03995B44 B.CS 0x3995FE4
	0x03995B48 ADD X8, X8, X29, 0x3, LSL
	0x03995B4C LDR X0, [X8 + 0x20]
	0x03995B50 CBZ X0, 0x3995FD4
	0x03995B54 ADRP X8, 0x789000
	0x03995B58 LDR X8, [X8 + 0xB50]
	0x03995B5C LDR X1, [X8]
	0x03995B60 ADD X8, X31, 0x1A0
	0x03995B64 BL 0x2FDD2BC
	0x03995B68 LDR V0, [X27 + 0xB]
	0x03995B6C LDR X8, [X27 + 0xC0]
	0x03995B70 STR V0, [X31 + 0xB]
	0x03995B74 STR X8, [X31 + 0xC0]
	0x03995B78 ADRP X8, 0x789000
	0x03995B7C LDR X8, [X8 + 0xB28]
	0x03995B80 LDR X1, [X8]
	0x03995B84 ADD X0, X31, 0xB0
	0x03995B88 BL 0x2BBDDA0
	0x03995B8C TBZ X0, 0x0, 0x3995C9C
	0x03995B90 LDR X8, [X27 + 0x28]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X29
	003 Move [X31+136], X30
	004 Move [X31+144], X28
	005 Move [X31+152], X27
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X20, 0xA4D000
	015 Move W8, [X20+2782]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {68}
	021 Move X0, 0x788000
	022 Move X0, [X0+1136]
	023 Call 0x1C17CF4
	024 Move X0, 0x7BC000
	025 Move X0, [X0+3400]
	026 Call 0x1C17CF4
	027 Move X0, 0x7BC000
	028 Move X0, [X0+3408]
	029 Call 0x1C17CF4
	030 Move X0, 0x7BC000
	031 Move X0, [X0+3416]
	032 Call 0x1C17CF4
	033 Move X0, 0x7BC000
	034 Move X0, [X0+3424]
	035 Call 0x1C17CF4
	036 Move X0, 0x7BC000
	037 Move X0, [X0+3432]
	038 Call 0x1C17CF4
	039 Move X0, 0x7BC000
	040 Move X0, [X0+3440]
	041 Call 0x1C17CF4
	042 Move X0, 0x7BC000
	043 Move X0, [X0+2592]
	044 Call 0x1C17CF4
	045 Move X0, 0x7BC000
	046 Move X0, [X0+2600]
	047 Call 0x1C17CF4
	048 Move X0, 0x7BC000
	049 Move X0, [X0+3448]
	050 Call 0x1C17CF4
	051 Move X0, 0x7BC000
	052 Move X0, [X0+3456]
	053 Call 0x1C17CF4
	054 Move X0, 0x7BC000
	055 Move X0, [X0+3464]
	056 Call 0x1C17CF4
	057 Move X0, 0x7BC000
	058 Move X0, [X0+3472]
	059 Call 0x1C17CF4
	060 Move X0, 0x7BC000
	061 Move X0, [X0+3480]
	062 Call 0x1C17CF4
	063 Move X0, 0x7BC000
	064 Move X0, [X0+3488]
	065 Call 0x1C17CF4
	066 Move W8, 1
	067 Move [X20+2782], W8
	068 NotImplemented "Instruction MOVI not yet implemented."
	069 Move [X31+112], X31
	070 Move [X31+64], X31
	071 Move [X31+72], X31
	072 Move [X31+48], X31
	073 Move [X31+56], X31
	074 Move [X31+80], V0
	075 Move [X31+88], V0
	076 Move X0, [X19+24]
	077 Compare X0, 0
	078 JumpIfEqual {207}
	079 Move X8, 0x7BC000
	080 Move X8, [X8+3448]
	081 Move X28, 0x7BC000
	082 Move X29, 0x788000
	083 Move X21, 0x7BC000
	084 Move X26, 0x7BC000
	085 Move X22, 0x7BC000
	086 Move X23, 0x7BC000
	087 Move X24, 0x7BC000
	088 Move X28, [X28+3424]
	089 Move X29, [X29+1136]
	090 Move X21, [X21+3488]
	091 Move X26, [X26+3456]
	092 Move X22, [X22+3416]
	093 Move X23, [X23+3480]
	094 Move X24, [X24+3472]
	095 Move X1, [X8]
	096 Move X25, 0x7BC000
	097 Move X27, 0x7BC000
	098 Move X25, [X25+3464]
	099 Move X27, [X27+3400]
	100 Add X8, X31, 8
	101 Call List`1<ValueTuple`2<Object, ValueTuple`2<Object, Int32>>>.GetEnumerator, X0
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 Move X8, [X31+40]
	105 Move [X31+80], V0
	106 Move [X31+88], V1
	107 Move [X31+112], X8
	108 Move X1, [X28]
	109 Add X0, X31, 80
	110 Call Enumerator<ValueTuple`2<Object, ValueTuple`2<Object, Int32>>>.MoveNext, X0
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {130}
	115 Move X0, [X19+16]
	116 Compare X0, 0
	117 JumpIfEqual {205}
	118 Move X1, [X31+104]
	119 Move X2, [X31+112]
	120 Move X20, [X31+96]
	121 Move X4, [X29]
	122 Add X3, X31, 72
	123 Call Dictionary`2<ValueTuple`2<Object, Int32>, Object>.TryGetValue, X0, X1, X2
	124 Move X0, [X31+72]
	125 Compare X0, 0
	126 JumpIfEqual {206}
	127 Move X2, [X21]
	128 Move X1, X20
	129 Call Stack`1<Object>.Push, X0, X1
	130 Move X1, [X27]
	131 Add X0, X31, 80
	132 Call Enumerator<ValueTuple`2<Object, ValueTuple`2<Object, Int32>>>.Dispose, X0
	133 Move X8, [X19+24]
	134 Compare X8, 0
	135 JumpIfEqual {207}
	136 Move W2, [X8+24]
	137 Move W9, [X8+28]
	138 Add W9, W9, 1
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move [X8+24], W31
	141 Move [X8+28], W9
	142 Move X0, [X8+16]
	143 Move W1, W31
	144 Move X3, X31
	145 Call Array.Clear, X0, X1, X2
	146 Move X0, [X19+32]
	147 Compare X0, 0
	148 JumpIfEqual {207}
	149 Move X1, [X26]
	150 Add X8, X31, 48
	151 Call List`1<Object>.GetEnumerator, X0
	152 Move X1, [X22]
	153 Add X0, X31, 48
	154 Call Enumerator<Object>.MoveNext, X0
	155 Move TEMP, X0
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfNotEqual {172}
	159 Move X0, [X23]
	160 Move X20, [X31+64]
	161 Move W8, [X0+224]
	162 Compare W8, 0
	163 JumpIfNotEqual {165}
	164 Call 0x1C17DFC
	165 Move X0, [X24]
	166 Call 0x25E6C20
	167 Compare X0, 0
	168 JumpIfEqual {204}
	169 Move X2, [X25]
	170 Move X1, X20
	171 Call 0x25E6AB8, X0, X1
	172 Move X8, 0x7BC000
	173 Move X8, [X8+3408]
	174 Add X0, X31, 48
	175 Move X1, [X8]
	176 Call Enumerator<Object>.Dispose, X0
	177 Move X8, [X19+32]
	178 Compare X8, 0
	179 JumpIfEqual {207}
	180 Move W2, [X8+24]
	181 Move W9, [X8+28]
	182 Add W9, W9, 1
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move [X8+24], W31
	185 Move [X8+28], W9
	186 Move X0, [X8+16]
	187 Move W1, W31
	188 Move X3, X31
	189 Call Array.Clear, X0, X1, X2
	190 Move X20, [X31+208]
	191 Move X19, [X31+216]
	192 Move X22, [X31+192]
	193 Move X21, [X31+200]
	194 Move X24, [X31+176]
	195 Move X23, [X31+184]
	196 Move X26, [X31+160]
	197 Move X25, [X31+168]
	198 Move X28, [X31+144]
	199 Move X27, [X31+152]
	200 Move X29, [X31+128]
	201 Move X30, [X31+136]
	202 Add X31, X31, 224
	203 Return 
	204 Call 0x1C17F20
	205 Call 0x1C17F20
	206 Call 0x1C17F20
	207 Call 0x1C17F20
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Call 0x3EB2AD0
	210 Move X8, [X0]
	211 Move [X31], X8
	212 Call 0x3EB2AE0
	213 Move X1, [X27]
	214 Add X0, X31, 80
	215 Call Enumerator<ValueTuple`2<Object, ValueTuple`2<Object, Int32>>>.Dispose, X0
	216 Move X0, [X31]
	217 Compare X0, 0
	218 JumpIfEqual {133}
	219 Move X19, X0
	220 Move [X31], X31
	221 Move X19, X0
	222 Move X1, [X27]
	223 Add X0, X31, 80
	224 Call Enumerator<ValueTuple`2<Object, ValueTuple`2<Object, Int32>>>.Dispose, X0
	225 Move X8, [X31]
	226 Compare X8, 0
	227 JumpIfEqual {255}
	228 Move X0, [X31]
	229 Call 0x1C17F18
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Call 0x3EB2AD0
	232 Move X8, [X0]
	233 Move [X31], X8
	234 Call 0x3EB2AE0
	235 Move X8, 0x7BC000
	236 Move X8, [X8+3408]
	237 Add X0, X31, 48
	238 Move X1, [X8]
	239 Call Enumerator<Object>.Dispose, X0
	240 Move X0, [X31]
	241 Compare X0, 0
	242 JumpIfEqual {177}
	243 Call 0x1C17F18
	244 Move X19, X0
	245 Move [X31], X31
	246 Move X19, X0
	247 Move X8, 0x7BC000
	248 Move X8, [X8+3408]
	249 Move X1, [X8]
	250 Add X0, X31, 48
	251 Call Enumerator<Object>.Dispose, X0
	252 Move X8, [X31]
	253 Compare X8, 0
	254 JumpIfNotEqual {257}
	255 Move X0, X19
	256 Call 0x1D2D690
	257 Move X0, [X31]
	258 Call 0x1C17F18
	259 Call 0x1991590

Method: T Get()

Disassembly:
	0x0224213C LDR X20, [X8]
	0x02242140 LDR X0, [X9]
	0x02242144 LDR W9, [X0 + 0xE0]
	0x02242148 CBNZ W9, 0x2242150
	0x0224214C BL 0x1C16DFC
	0x02242150 MOV X0, X20
	0x02242154 MOV X1, X31
	0x02242158 BL 0x338C698
	0x0224215C MOV X1, X0
	0x02242160 MOV X0, X19
	0x02242164 LDP X20, X19, [X31 + 0x10]
	0x02242168 MOV X2, X31
	0x0224216C LDR X30, [X31], #0x20
	0x02242170 B 0x3C312DC
	0x02242174 STR X30, [X31 - 0x30]!
	0x02242178 STP X22, X21, [X31 + 0x10]
	0x0224217C STP X20, X19, [X31 + 0x20]
	0x02242180 LDR X8, [X1 + 0x38]
	0x02242184 MOV X20, X1
	0x02242188 MOV X19, X0
	0x0224218C CBNZ X8, 0x224219C
	0x02242190 MOV X0, X20
	0x02242194 BL 0x1C5C6E0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+56]
	004 Move X19, X1
	005 Compare X8, 0
	006 JumpIfNotEqual {10}
	007 Move X0, X19
	008 Call 0x1C5D6E0
	009 Move X8, [X19+56]
	010 Move X0, [X8+8]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Move W8, [X0+224]
	018 Compare W8, 0
	019 JumpIfNotEqual {21}
	020 Call 0x1C17DFC
	021 Move X8, [X19+56]
	022 Move X0, [X8]
	023 Call 0x25E6C20
	024 Compare X0, 0
	025 JumpIfEqual {32}
	026 Move X8, [X19+56]
	027 Move X1, [X8+24]
	028 Move X30, [X31+16]
	029 Move X19, [X31+24]
	030 Call 0x25E6A80, X0
	031 Return X0
	032 Call 0x1C17F20

Method: System.Void Release(T value)

Disassembly:
	0x02242940 MOV X20, X1
	0x02242944 MOV X21, X0
	0x02242948 CBNZ X8, 0x2242968
	0x0224294C ADRP X0, 0x1EDA000
	0x02242950 LDR X0, [X0 + 0x4C0]
	0x02242954 BL 0x1C16CF4
	0x02242958 LDR X8, [X19 + 0x38]
	0x0224295C CBNZ X8, 0x2242968
	0x02242960 MOV X0, X19
	0x02242964 BL 0x1C5C6E0
	0x02242968 ADRP X8, 0x1EDA000
	0x0224296C LDR X8, [X8 + 0x4C0]
	0x02242970 LDR X0, [X8]
	0x02242974 BL 0x1C16F10
	0x02242978 MOV X1, X31
	0x0224297C MOV X22, X0
	0x02242980 BL 0x358B55C
	0x02242984 CBZ X22, 0x22429B0
	0x02242988 STR X21, [X22 + 0x10]
	0x0224298C STR X20, [X22 + 0x28]
	0x02242990 LDR X8, [X19 + 0x38]
	0x02242994 MOV X0, X22
	0x02242998 LDP X20, X19, [X31 + 0x20]
	0x0224299C LDP X22, X21, [X31 + 0x10]
	0x022429A0 LDR X1, [X8]
	0x022429A4 LDR X2, [X1]
	0x022429A8 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+56]
	005 Move X20, X2
	006 Move X19, X1
	007 Compare X8, 0
	008 JumpIfNotEqual {12}
	009 Move X0, X20
	010 Call 0x1C5D6E0
	011 Move X8, [X20+56]
	012 Move X0, [X8+8]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move X8, [X20+56]
	024 Move X0, [X8]
	025 Call 0x25E6C20
	026 Compare X0, 0
	027 JumpIfEqual {36}
	028 Move X8, [X20+56]
	029 Move X1, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X2, [X8+32]
	033 Move X30, [X31+32]
	034 Call 0x25E6AB8, X0, X1
	035 Return 
	036 Call 0x1C17F20

Method: System.Void Cleanup()

Disassembly:
	0x0398D35C BL 0x398D154
	0x0398D360 ADD X1, X31, 0x0
	0x0398D364 MOVZ W2, 0x78
	0x0398D368 MOV X0, X19
	0x0398D36C BL 0x3EB1AC0
	0x0398D370 LDP X30, X19, [X31 + 0x80]
	0x0398D374 ADD X31, X31, 0x90
	0x0398D378 RET
	0x0398D37C BL 0x1C16F20
	0x0398D380 STR X30, [X31 - 0x10]!
	0x0398D384 LDR X0, [X0 + 0x10]
	0x0398D388 CBZ X0, 0x398D394
	0x0398D38C LDR X30, [X31], #0x10
	0x0398D390 B 0x398D398
	0x0398D394 BL 0x1C16F20
	0x0398D398 STR X29, [X31 - 0x30]!
	0x0398D39C STP X30, X21, [X31 + 0x10]
	0x0398D3A0 STP X20, X19, [X31 + 0x20]
	0x0398D3A4 SUB X31, X31, 0x1D0
	0x0398D3A8 ADRP X21, 0xA54000
	0x0398D3AC LDRB W8, [X21 + 0xB14]
	0x0398D3B0 MOV X20, X1
	0x0398D3B4 MOV X19, X0
	0x0398D3B8 TBNZ X8, 0x0, 0x398D3D0
	0x0398D3BC ADRP X0, 0x7C3000
	0x0398D3C0 LDR X0, [X0 + 0xAC0]
	0x0398D3C4 BL 0x1C16CF4
	0x0398D3C8 MOVZ W8, 0x1
	0x0398D3CC STRB W8, [X21 + 0xB14]
	0x0398D3D0 LDR X19, [X19 + 0x18]
	0x0398D3D4 ADD X0, X31, 0x0
	0x0398D3D8 MOVZ W2, 0xD0
	0x0398D3DC MOV X1, X20
	0x0398D3E0 BL 0x3EB1AC0
	0x0398D3E4 ADD X0, X31, 0xE8
	0x0398D3E8 ADD X1, X31, 0x0
	0x0398D3EC MOVZ W2, 0xE8
	0x0398D3F0 STP X31, X31, [X31 + 0xD8]
	0x0398D3F4 STR X31, [X31 + 0xD0]
	0x0398D3F8 BL 0x3EB1AC0
	0x0398D3FC CBZ X19, 0x398D438
	0x0398D400 ADRP X8, 0x7C3000
	0x0398D404 LDR X8, [X8 + 0xAC0]
	0x0398D408 ADD X1, X31, 0xE8
	0x0398D40C MOV X0, X19
	0x0398D410 LDR X2, [X8]
	0x0398D414 BL 0x2B40390
	0x0398D418 MOVZ W8, 0x1
	0x0398D41C BFM X8, X0, 0x20, 0x1F
	0x0398D420 MOV X0, X8
	0x0398D424 ADD X31, X31, 0x1D0
	0x0398D428 LDP X20, X19, [X31 + 0x20]
	0x0398D42C LDP X30, X21, [X31 + 0x10]
	0x0398D430 LDR X29, [X31], #0x30
	0x0398D434 RET
	0x0398D438 BL 0x1C16F20
	0x0398D43C STR X30, [X31 - 0x10]!
	0x0398D440 LDR X0, [X0 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA55000
	005 Move W8, [X20+2783]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {25}
	011 Move X0, 0x7C4000
	012 Move X0, [X0+2584]
	013 Call 0x1C17CF4
	014 Move X0, 0x7C4000
	015 Move X0, [X0+2592]
	016 Call 0x1C17CF4
	017 Move X0, 0x7C4000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move X0, 0x791000
	021 Move X0, [X0+616]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2783], W8
	025 Move X8, [X19+24]
	026 Compare X8, 0
	027 JumpIfEqual {70}
	028 Move W2, [X8+24]
	029 Move W9, [X8+28]
	030 Add W9, W9, 1
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move [X8+24], W31
	033 Move [X8+28], W9
	034 Move X0, [X8+16]
	035 Move W1, W31
	036 Move X3, X31
	037 Call Array.Clear, X0, X1, X2
	038 Move X8, [X19+32]
	039 Compare X8, 0
	040 JumpIfEqual {70}
	041 Move W2, [X8+24]
	042 Move W9, [X8+28]
	043 Add W9, W9, 1
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move [X8+24], W31
	046 Move [X8+28], W9
	047 Move X0, [X8+16]
	048 Move W1, W31
	049 Move X3, X31
	050 Call Array.Clear, X0, X1, X2
	051 Move X0, [X19+16]
	052 Compare X0, 0
	053 JumpIfEqual {70}
	054 Move X8, 0x7C4000
	055 Move X8, [X8+2584]
	056 Move X19, 0x791000
	057 Move X1, [X8]
	058 Move X19, [X19+616]
	059 Call Dictionary`2<ValueTuple`2<Object, Int32>, Object>.Clear, X0
	060 Move X0, [X19]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X30, [X31+32]
	068 Call SharedObjectPoolBase.ClearAll
	069 Return 
	070 Call 0x1C17F20

