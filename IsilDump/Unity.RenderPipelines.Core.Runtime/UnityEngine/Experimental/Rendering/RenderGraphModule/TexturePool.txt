Type: UnityEngine.Experimental.Rendering.RenderGraphModule.TexturePool

Method: System.Void ReleaseInternalResource(UnityEngine.Rendering.RTHandle res)

Disassembly:
	0x0399C534 STR X0, [X19 + 0x58]
	0x0399C538 MOV X20, X0
	0x0399C53C LDR X0, [X22]
	0x0399C540 LDR W8, [X0 + 0xE0]
	0x0399C544 CBNZ W8, 0x399C54C
	0x0399C548 BL 0x1C16DFC

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {7}
	003 Move X0, X1
	004 Move X1, X31
	005 Call RTHandle.Release, X0
	006 Return 
	007 Move [X31-16], X30
	008 Call 0x1C17F20

Method: System.String GetResourceName(UnityEngine.Rendering.RTHandle res)

Disassembly:
	0x0399C54C MOV X0, X20
	0x0399C550 MOV X1, X31
	0x0399C554 MOV X2, X31
	0x0399C558 BL 0x3C354F8
	0x0399C55C TBZ X0, 0x0, 0x399C660
	0x0399C560 LDR X0, [X22]
	0x0399C564 LDR X20, [X19 + 0x58]
	0x0399C568 LDR X21, [X19 + 0x30]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {11}
	004 Move X0, [X1+24]
	005 Compare X0, 0
	006 JumpIfEqual {11}
	007 Move X1, X31
	008 Move X30, [X31+16]
	009 Call Object.get_name, X0
	010 Return X0
	011 Call 0x1C17F20

Method: System.Int64 GetResourceSize(UnityEngine.Rendering.RTHandle res)

Disassembly:
	0x0399C56C LDR W8, [X0 + 0xE0]
	0x0399C570 CBNZ W8, 0x399C578
	0x0399C574 BL 0x1C16DFC
	0x0399C578 MOV X0, X20
	0x0399C57C MOV X1, X21
	0x0399C580 MOV X2, X31
	0x0399C584 BL 0x3C3883C

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {9}
	004 Move X0, [X1+24]
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call Profiler.GetRuntimeMemorySizeLong, X0
	008 Return X0
	009 Call 0x1C17F20

Method: System.String GetResourceTypeName()

Disassembly:
	0x0399C588 TBZ X0, 0x0, 0x399C5D4
	0x0399C58C LDR X0, [X19 + 0x30]
	0x0399C590 CBZ X0, 0x399C670
	0x0399C594 MOV X1, X31
	0x0399C598 BL 0x3C32E90
	0x0399C59C CBZ X0, 0x399C670
	0x0399C5A0 LDP S1, S2, [X19 + 0x3C]
	0x0399C5A4 LDR V0, [X19 + 0x38]
	0x0399C5A8 MOV X1, X31
	0x0399C5AC BL 0x3C3F62C
	0x0399C5B0 LDR X0, [X19 + 0x30]
	0x0399C5B4 CBZ X0, 0x399C670
	0x0399C5B8 MOV X1, X31
	0x0399C5BC BL 0x3C32E90
	0x0399C5C0 CBZ X0, 0x399C670
	0x0399C5C4 LDP S2, S3, [X19 + 0x4C]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xA46000
	005 Move X20, 0x7B6000
	006 Move W8, [X19+2896]
	007 Move X20, [X20+80]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x7B6000
	013 Move X0, [X0+80]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2896], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return X0

Method: System.Int32 GetSortIndex(UnityEngine.Rendering.RTHandle res)

Disassembly:
	0x0399C5C8 LDP S0, S1, [X19 + 0x44]
	0x0399C5CC MOV X1, X31
	0x0399C5D0 BL 0x3C3F7AC
	0x0399C5D4 MOV X0, X19
	0x0399C5D8 MOV X1, X31
	0x0399C5DC BL 0x3C32E90

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {7}
	003 Move X0, X1
	004 Move X1, X31
	005 Call RTHandle.GetInstanceID, X0
	006 Return X0
	007 Move [X31-16], X30
	008 Call 0x1C17F20

Method: System.Void PurgeUnusedResources(System.Int32 currentFrameIndex)

Disassembly:
	0x0399C5E0 LDR X8, [X19 + 0x58]
	0x0399C5E4 CBZ X8, 0x399C670
	0x0399C5E8 MOV X20, X0
	0x0399C5EC MOV X0, X8
	0x0399C5F0 MOV X1, X31
	0x0399C5F4 BL 0x3C32E90
	0x0399C5F8 CBZ X0, 0x399C670
	0x0399C5FC MOV X1, X31
	0x0399C600 BL 0x3C3F58C
	0x0399C604 CBZ X20, 0x399C670
	0x0399C608 MOV X0, X20
	0x0399C60C MOV X1, X31
	0x0399C610 BL 0x3C3F62C
	0x0399C614 MOV X0, X19
	0x0399C618 MOV X1, X31
	0x0399C61C BL 0x3C32E90
	0x0399C620 LDR X8, [X19 + 0x58]
	0x0399C624 CBZ X8, 0x399C670
	0x0399C628 MOV X19, X0
	0x0399C62C MOV X0, X8
	0x0399C630 MOV X1, X31
	0x0399C634 BL 0x3C32E90
	0x0399C638 CBZ X0, 0x399C670
	0x0399C63C MOV X1, X31
	0x0399C640 BL 0x3C3DEB4
	0x0399C644 CBZ X19, 0x399C670
	0x0399C648 MOV X0, X19
	0x0399C64C LDP X20, X19, [X31 + 0x20]
	0x0399C650 LDP X22, X21, [X31 + 0x10]
	0x0399C654 MOV X1, X31
	0x0399C658 LDR X30, [X31], #0x30
	0x0399C65C B 0x3C3F7AC
	0x0399C660 LDP X20, X19, [X31 + 0x20]
	0x0399C664 LDP X22, X21, [X31 + 0x10]
	0x0399C668 LDR X30, [X31], #0x30
	0x0399C66C RET
	0x0399C670 BL 0x1C16F20
	0x0399C674 MOVN W8, 0x0
	0x0399C678 MOV X1, X31
	0x0399C67C STR W8, [X0 + 0x28]
	0x0399C680 B 0x3C36C30
	0x0399C684 LDR W0, [X0 + 0x28]
	0x0399C688 RET
	0x0399C68C B 0x399C458
	0x0399C690 LDR W0, [X0 + 0x78]
	0x0399C694 RET
	0x0399C698 STR W1, [X0 + 0x78]
	0x0399C69C RET
	0x0399C6A0 B 0x399C6A4
	0x0399C6A4 SUB X31, X31, 0xC0
	0x0399C6A8 STP X29, X30, [X31 + 0x60]
	0x0399C6AC STP X28, X27, [X31 + 0x70]
	0x0399C6B0 STP X26, X25, [X31 + 0x80]
	0x0399C6B4 STP X24, X23, [X31 + 0x90]
	0x0399C6B8 STP X22, X21, [X31 + 0xA0]
	0x0399C6BC STP X20, X19, [X31 + 0xB0]
	0x0399C6C0 ADRP X26, 0xA45000
	0x0399C6C4 ADRP X24, 0x7A8000
	0x0399C6C8 ADRP X20, 0x7B5000
	0x0399C6CC ADRP X23, 0x7B5000
	0x0399C6D0 ADRP X28, 0x7B5000
	0x0399C6D4 ADRP X27, 0x7B5000
	0x0399C6D8 ADRP X25, 0x7B5000
	0x0399C6DC ADRP X29, 0x7AC000
	0x0399C6E0 ADRP X22, 0x77F000
	0x0399C6E4 ADRP X21, 0x77F000
	0x0399C6E8 LDR X24, [X24 + 0xF68]
	0x0399C6EC LDR X20, [X20 + 0x170]
	0x0399C6F0 LDR X23, [X23 + 0x178]
	0x0399C6F4 LDR X28, [X28 + 0x180]
	0x0399C6F8 LDR X27, [X27 + 0x188]
	0x0399C6FC LDR X25, [X25 + 0x190]
	0x0399C700 LDR X29, [X29 + 0x6C8]
	0x0399C704 LDR X22, [X22 + 0x500]
	0x0399C708 LDR X21, [X21 + 0x4E0]
	0x0399C70C LDRB W8, [X26 + 0xB56]
	0x0399C710 MOV X19, X0
	0x0399C714 TBNZ X8, 0x0, 0x399C8A0
	0x0399C718 ADRP X0, 0x7A8000
	0x0399C71C LDR X0, [X0 + 0xF68]
	0x0399C720 BL 0x1C16CF4
	0x0399C724 ADRP X0, 0x77F000
	0x0399C728 LDR X0, [X0 + 0x4B8]
	0x0399C72C BL 0x1C16CF4
	0x0399C730 ADRP X0, 0x7B5000
	0x0399C734 LDR X0, [X0 + 0x198]
	0x0399C738 BL 0x1C16CF4
	0x0399C73C ADRP X0, 0x7B5000
	0x0399C740 LDR X0, [X0 + 0x1A0]
	0x0399C744 BL 0x1C16CF4
	0x0399C748 ADRP X0, 0x7B5000
	0x0399C74C LDR X0, [X0 + 0x1A8]
	0x0399C750 BL 0x1C16CF4
	0x0399C754 ADRP X0, 0x77F000
	0x0399C758 LDR X0, [X0 + 0x4C0]
	0x0399C75C BL 0x1C16CF4
	0x0399C760 ADRP X0, 0x7B5000
	0x0399C764 LDR X0, [X0 + 0x1B0]
	0x0399C768 BL 0x1C16CF4
	0x0399C76C ADRP X0, 0x7B5000
	0x0399C770 LDR X0, [X0 + 0x170]
	0x0399C774 BL 0x1C16CF4
	0x0399C778 ADRP X0, 0x7B5000
	0x0399C77C LDR X0, [X0 + 0x1B8]
	0x0399C780 BL 0x1C16CF4
	0x0399C784 ADRP X0, 0x7B5000
	0x0399C788 LDR X0, [X0 + 0x1C0]
	0x0399C78C BL 0x1C16CF4
	0x0399C790 ADRP X0, 0x7B5000
	0x0399C794 LDR X0, [X0 + 0x1C8]
	0x0399C798 BL 0x1C16CF4
	0x0399C79C ADRP X0, 0x75E000
	0x0399C7A0 LDR X0, [X0 + 0x470]
	0x0399C7A4 BL 0x1C16CF4
	0x0399C7A8 ADRP X0, 0x77F000
	0x0399C7AC LDR X0, [X0 + 0x4D0]
	0x0399C7B0 BL 0x1C16CF4
	0x0399C7B4 ADRP X0, 0x7B5000
	0x0399C7B8 LDR X0, [X0 + 0x1D0]
	0x0399C7BC BL 0x1C16CF4
	0x0399C7C0 ADRP X0, 0x7B5000
	0x0399C7C4 LDR X0, [X0 + 0x1D8]
	0x0399C7C8 BL 0x1C16CF4
	0x0399C7CC ADRP X0, 0x77F000
	0x0399C7D0 LDR X0, [X0 + 0x4E0]
	0x0399C7D4 BL 0x1C16CF4
	0x0399C7D8 ADRP X0, 0x7B5000
	0x0399C7DC LDR X0, [X0 + 0x1E0]
	0x0399C7E0 BL 0x1C16CF4
	0x0399C7E4 ADRP X0, 0x7B5000
	0x0399C7E8 LDR X0, [X0 + 0x178]
	0x0399C7EC BL 0x1C16CF4
	0x0399C7F0 ADRP X0, 0x7B5000
	0x0399C7F4 LDR X0, [X0 + 0x1E8]
	0x0399C7F8 BL 0x1C16CF4
	0x0399C7FC ADRP X0, 0x77F000
	0x0399C800 LDR X0, [X0 + 0x4E8]
	0x0399C804 BL 0x1C16CF4
	0x0399C808 ADRP X0, 0x7B5000
	0x0399C80C LDR X0, [X0 + 0x1F0]
	0x0399C810 BL 0x1C16CF4
	0x0399C814 ADRP X0, 0x7B5000
	0x0399C818 LDR X0, [X0 + 0x1F8]
	0x0399C81C BL 0x1C16CF4
	0x0399C820 ADRP X0, 0x77F000
	0x0399C824 LDR X0, [X0 + 0x4F0]
	0x0399C828 BL 0x1C16CF4
	0x0399C82C ADRP X0, 0x77F000
	0x0399C830 LDR X0, [X0 + 0x4F8]
	0x0399C834 BL 0x1C16CF4
	0x0399C838 ADRP X0, 0x77F000
	0x0399C83C LDR X0, [X0 + 0x500]
	0x0399C840 BL 0x1C16CF4
	0x0399C844 ADRP X0, 0x7B5000
	0x0399C848 LDR X0, [X0 + 0x190]
	0x0399C84C BL 0x1C16CF4
	0x0399C850 ADRP X0, 0x77F000
	0x0399C854 LDR X0, [X0 + 0x508]
	0x0399C858 BL 0x1C16CF4
	0x0399C85C ADRP X0, 0x7AC000
	0x0399C860 LDR X0, [X0 + 0x6C8]
	0x0399C864 BL 0x1C16CF4
	0x0399C868 ADRP X0, 0x7B5000
	0x0399C86C LDR X0, [X0 + 0x200]
	0x0399C870 BL 0x1C16CF4
	0x0399C874 ADRP X0, 0x77F000
	0x0399C878 LDR X0, [X0 + 0x520]
	0x0399C87C BL 0x1C16CF4
	0x0399C880 ADRP X0, 0x7B5000
	0x0399C884 LDR X0, [X0 + 0x188]
	0x0399C888 BL 0x1C16CF4
	0x0399C88C ADRP X0, 0x7B5000
	0x0399C890 LDR X0, [X0 + 0x180]
	0x0399C894 BL 0x1C16CF4
	0x0399C898 MOVZ W8, 0x1
	0x0399C89C STRB W8, [X26 + 0xB56]
	0x0399C8A0 LDR X0, [X24]
	0x0399C8A4 STP X31, X31, [X31 + 0x40]
	0x0399C8A8 STR X31, [X31 + 0x50]
	0x0399C8AC STP X31, X31, [X31 + 0x20]
	0x0399C8B0 STR X31, [X31 + 0x30]
	0x0399C8B4 BL 0x1C16F10
	0x0399C8B8 LDR X1, [X20]
	0x0399C8BC MOV X2, X31
	0x0399C8C0 MOV X20, X0
	0x0399C8C4 BL 0x373A4F8
	0x0399C8C8 LDR X1, [X23]
	0x0399C8CC LDR X3, [X28]
	0x0399C8D0 MOV X0, X20
	0x0399C8D4 MOV W2, W31
	0x0399C8D8 MOV X4, X31
	0x0399C8DC MOV X5, X31
	0x0399C8E0 MOV X6, X31
	0x0399C8E4 MOV X7, X31
	0x0399C8E8 STR X31, [X31]
	0x0399C8EC BL 0x3746504
	0x0399C8F0 STR X0, [X19 + 0x38]
	0x0399C8F4 LDR X1, [X27]
	0x0399C8F8 LDR X3, [X25]
	0x0399C8FC MOV X0, X20
	0x0399C900 MOV W2, W31
	0x0399C904 MOV X4, X31
	0x0399C908 MOV X5, X31
	0x0399C90C MOV X6, X31
	0x0399C910 MOV X7, X31
	0x0399C914 STR X31, [X31]
	0x0399C918 BL 0x3746504
	0x0399C91C STR X0, [X19 + 0x40]
	0x0399C920 ADRP X8, 0x75E000
	0x0399C924 LDR X8, [X8 + 0x470]
	0x0399C928 MOV X0, X20
	0x0399C92C MOV W2, W31
	0x0399C930 MOV X4, X31
	0x0399C934 LDR X1, [X8]
	0x0399C938 ADRP X8, 0x7B5000
	0x0399C93C LDR X8, [X8 + 0x1E0]
	0x0399C940 MOV X5, X31
	0x0399C944 MOV X6, X31
	0x0399C948 MOV X7, X31
	0x0399C94C LDR X3, [X8]
	0x0399C950 STR X31, [X31]
	0x0399C954 BL 0x3746504
	0x0399C958 STR X0, [X19 + 0x48]
	0x0399C95C ADRP X8, 0x7B5000
	0x0399C960 LDR X8, [X8 + 0x1E8]
	0x0399C964 MOV X0, X20
	0x0399C968 MOV W2, W31
	0x0399C96C MOV X3, X31
	0x0399C970 LDR X1, [X8]
	0x0399C974 MOV X4, X31
	0x0399C978 MOV X5, X31
	0x0399C97C MOV X6, X31
	0x0399C980 MOV X7, X31
	0x0399C984 STR X31, [X31]
	0x0399C988 BL 0x3746504
	0x0399C98C STR X0, [X19 + 0x50]
	0x0399C990 ADRP X8, 0x7B5000
	0x0399C994 LDR X0, [X19 + 0x38]
	0x0399C998 LDR X8, [X8 + 0x200]
	0x0399C99C MOV X2, X31
	0x0399C9A0 MOV X3, X31
	0x0399C9A4 MOV X4, X31
	0x0399C9A8 LDR X1, [X8]
	0x0399C9AC ADD X8, X31, 0x8
	0x0399C9B0 MOV X5, X31
	0x0399C9B4 BL 0x3746870
	0x0399C9B8 ADRP X9, 0x7B5000
	0x0399C9BC LDUR V0, [X31 + 0x8]
	0x0399C9C0 LDR X8, [X31 + 0x18]
	0x0399C9C4 LDR X9, [X9 + 0x1D8]
	0x0399C9C8 ADD X0, X31, 0x40
	0x0399C9CC MOV X2, X31
	0x0399C9D0 STR X8, [X31 + 0x50]
	0x0399C9D4 LDR X1, [X9]
	0x0399C9D8 ADD X8, X31, 0x8
	0x0399C9DC STR V0, [X31 + 0x4]
	0x0399C9E0 BL 0x3749504
	0x0399C9E4 LDR X0, [X19 + 0x40]
	0x0399C9E8 LDR X1, [X29]
	0x0399C9EC ADD X8, X31, 0x8
	0x0399C9F0 MOV X2, X31
	0x0399C9F4 MOV X3, X31
	0x0399C9F8 MOV X4, X31
	0x0399C9FC BL 0x37473F4
	0x0399CA00 ADRP X9, 0x77F000
	0x0399CA04 LDUR V0, [X31 + 0x8]
	0x0399CA08 LDR X8, [X31 + 0x18]
	0x0399CA0C LDR X1, [X22]
	0x0399CA10 LDR X9, [X9 + 0x4B8]
	0x0399CA14 ADD X0, X31, 0x20
	0x0399CA18 STR X8, [X31 + 0x30]
	0x0399CA1C ADD X8, X31, 0x8
	0x0399CA20 LDR X2, [X9]
	0x0399CA24 MOV X3, X31
	0x0399CA28 MOV X4, X31
	0x0399CA2C MOV X5, X31
	0x0399CA30 STR V0, [X31 + 0x2]
	0x0399CA34 BL 0x374A2F4
	0x0399CA38 ADRP X9, 0x7B5000
	0x0399CA3C LDUR V0, [X31 + 0x8]
	0x0399CA40 LDR X8, [X31 + 0x18]
	0x0399CA44 LDR X1, [X22]
	0x0399CA48 LDR X9, [X9 + 0x1B0]
	0x0399CA4C ADD X0, X31, 0x20
	0x0399CA50 STR X8, [X31 + 0x30]
	0x0399CA54 ADD X8, X31, 0x8
	0x0399CA58 LDR X2, [X9]
	0x0399CA5C MOV X3, X31
	0x0399CA60 MOV X4, X31
	0x0399CA64 MOV X5, X31
	0x0399CA68 STR V0, [X31 + 0x2]
	0x0399CA6C BL 0x374A2F4
	0x0399CA70 ADRP X9, 0x77F000
	0x0399CA74 LDUR V0, [X31 + 0x8]
	0x0399CA78 LDR X8, [X31 + 0x18]
	0x0399CA7C LDR X1, [X21]
	0x0399CA80 LDR X9, [X9 + 0x4D0]
	0x0399CA84 ADD X0, X31, 0x20
	0x0399CA88 STR X8, [X31 + 0x30]
	0x0399CA8C ADD X8, X31, 0x8
	0x0399CA90 LDR X2, [X9]
	0x0399CA94 MOV X3, X31
	0x0399CA98 MOV X4, X31
	0x0399CA9C MOV X5, X31
	0x0399CAA0 STR V0, [X31 + 0x2]
	0x0399CAA4 BL 0x374A2F4
	0x0399CAA8 ADRP X9, 0x7B5000
	0x0399CAAC LDUR V0, [X31 + 0x8]
	0x0399CAB0 LDR X8, [X31 + 0x18]
	0x0399CAB4 LDR X1, [X21]
	0x0399CAB8 LDR X9, [X9 + 0x1C0]
	0x0399CABC ADD X0, X31, 0x20
	0x0399CAC0 STR X8, [X31 + 0x30]
	0x0399CAC4 ADD X8, X31, 0x8
	0x0399CAC8 LDR X2, [X9]
	0x0399CACC MOV X3, X31
	0x0399CAD0 MOV X4, X31
	0x0399CAD4 MOV X5, X31
	0x0399CAD8 STR V0, [X31 + 0x2]
	0x0399CADC BL 0x374A2F4
	0x0399CAE0 ADRP X20, 0x77F000
	0x0399CAE4 LDUR V0, [X31 + 0x8]
	0x0399CAE8 LDR X8, [X31 + 0x18]
	0x0399CAEC LDR X20, [X20 + 0x508]
	0x0399CAF0 ADRP X9, 0x77F000
	0x0399CAF4 ADD X0, X31, 0x20
	0x0399CAF8 MOV X3, X31
	0x0399CAFC LDR X1, [X20]
	0x0399CB00 LDR X9, [X9 + 0x4E8]
	0x0399CB04 STR X8, [X31 + 0x30]
	0x0399CB08 ADD X8, X31, 0x8
	0x0399CB0C MOV X4, X31
	0x0399CB10 LDR X2, [X9]
	0x0399CB14 MOV X5, X31
	0x0399CB18 STR V0, [X31 + 0x2]
	0x0399CB1C BL 0x374A2F4
	0x0399CB20 ADRP X9, 0x7B5000
	0x0399CB24 LDUR V0, [X31 + 0x8]
	0x0399CB28 LDR X8, [X31 + 0x18]
	0x0399CB2C LDR X1, [X20]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X29
	003 Move [X31+136], X30
	004 Move [X31+144], X28
	005 Move [X31+152], X27
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X21, 0xA46000
	015 Move X26, 0x7B6000
	016 Move W8, [X21+2897]
	017 Move X26, [X26+88]
	018 Move W20, W1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {83}
	024 Move X0, 0x7B6000
	025 Move X0, [X0+96]
	026 Call 0x1C17CF4
	027 Move X0, 0x7B6000
	028 Move X0, [X0+104]
	029 Call 0x1C17CF4
	030 Move X0, 0x783000
	031 Move X0, [X0+2840]
	032 Call 0x1C17CF4
	033 Move X0, 0x783000
	034 Move X0, [X0+2856]
	035 Call 0x1C17CF4
	036 Move X0, 0x7B6000
	037 Move X0, [X0+112]
	038 Call 0x1C17CF4
	039 Move X0, 0x7B6000
	040 Move X0, [X0+120]
	041 Call 0x1C17CF4
	042 Move X0, 0x783000
	043 Move X0, [X0+2872]
	044 Call 0x1C17CF4
	045 Move X0, 0x7B6000
	046 Move X0, [X0+128]
	047 Call 0x1C17CF4
	048 Move X0, 0x780000
	049 Move X0, [X0+1960]
	050 Call 0x1C17CF4
	051 Move X0, 0x7B6000
	052 Move X0, [X0+136]
	053 Call 0x1C17CF4
	054 Move X0, 0x759000
	055 Move X0, [X0+3600]
	056 Call 0x1C17CF4
	057 Move X0, 0x75F000
	058 Move X0, [X0+2136]
	059 Call 0x1C17CF4
	060 Move X0, 0x783000
	061 Move X0, [X0+2896]
	062 Call 0x1C17CF4
	063 Move X0, 0x7B6000
	064 Move X0, [X0+144]
	065 Call 0x1C17CF4
	066 Move X0, 0x7B6000
	067 Move X0, [X0+88]
	068 Call 0x1C17CF4
	069 Move X0, 0x7B6000
	070 Move X0, [X0+152]
	071 Call 0x1C17CF4
	072 Move X0, 0x7B6000
	073 Move X0, [X0+160]
	074 Call 0x1C17CF4
	075 Move X0, 0x7B6000
	076 Move X0, [X0+168]
	077 Call 0x1C17CF4
	078 Move X0, 0x7B6000
	079 Move X0, [X0+176]
	080 Call 0x1C17CF4
	081 Move W8, 1
	082 Move [X21+2897], W8
	083 Move X8, [X26]
	084 NotImplemented "Instruction MOVI not yet implemented."
	085 Move [X31+112], X31
	086 Move [X31+80], V0
	087 Move [X31+88], V0
	088 Move [X31+48], X31
	089 Move [X31+56], X31
	090 Move [X31+64], X31
	091 Move X8, [X8+184]
	092 Move [X8], W20
	093 Move X8, [X19+24]
	094 Compare X8, 0
	095 JumpIfEqual {320}
	096 Move W9, [X8+28]
	097 Add W9, W9, 1
	098 Move [X8+24], W31
	099 Move [X8+28], W9
	100 Move X0, [X19+16]
	101 Compare X0, 0
	102 JumpIfEqual {320}
	103 Move X8, 0x7B6000
	104 Move X8, [X8+96]
	105 Move X27, 0x7B6000
	106 Move X29, 0x7B6000
	107 Move X25, 0x783000
	108 Move X27, [X27+128]
	109 Move X29, [X29+144]
	110 Move X25, [X25+2856]
	111 Move X1, [X8]
	112 Move X28, 0x7B6000
	113 Move X28, [X28+152]
	114 Add X8, X31, 8
	115 Call Dictionary`2<Int32, Object>.GetEnumerator, X0
	116 NotImplemented "Instruction LDUR not yet implemented."
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 Move X8, [X31+40]
	119 Move [X31+80], V0
	120 Move [X31+88], V1
	121 Move [X31+112], X8
	122 Move X8, 0x7B6000
	123 Move X8, [X8+112]
	124 Move X1, [X8]
	125 Add X0, X31, 80
	126 Call Enumerator<Int32, Object>.MoveNext, X0
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfNotEqual {282}
	131 Move X20, [X31+104]
	132 Compare X20, 0
	133 JumpIfEqual {316}
	134 Move X8, 0x7B6000
	135 Move X8, [X8+168]
	136 Move X1, [X8]
	137 Move X0, X20
	138 Call 0x25EE504, X0
	139 Move X8, 0x7B6000
	140 Move X8, [X8+176]
	141 Move X21, X0
	142 Move X1, [X8]
	143 Move X0, X20
	144 Call 0x25EE534, X0
	145 Move W8, [X20+32]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move X22, X0
	148 Move W23, W31
	149 Compare X22, 0
	150 JumpIfEqual {301}
	151 Move X8, [X22]
	152 Move X1, [X27]
	153 NotImplemented "Instruction LDRH not yet implemented."
	154 Compare X9, 0
	155 JumpIfEqual {162}
	156 Move X10, [X8+176]
	157 Add X10, X10, 8
	158 NotImplemented "Instruction LDUR not yet implemented."
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Subtract X9, X9, 1
	161 Add X10, X10, 16
	162 Move X0, X22
	163 Move W2, W31
	164 Call 0x1C5D788
	165 NotImplemented "Instruction LDRSW not yet implemented."
	166 Add X8, X8, X9
	167 Add X0, X8, 312
	168 Move X8, [X0]
	169 Move X2, [X0+8]
	170 Move X0, X22
	171 Move W1, W23
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Move X8, [X26]
	174 Move X2, [X29]
	175 Move X24, X0
	176 Move X8, [X8+184]
	177 Move W8, [X8]
	178 Move W0, W1
	179 Move W1, W8
	180 Call 0x25C9D98, X0, X1
	181 Move TEMP, X0
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfNotEqual {241}
	185 Compare X24, 0
	186 JumpIfEqual {304}
	187 Move X0, X24
	188 Move X1, X31
	189 Call RTHandle.Release, X0
	190 Compare X21, 0
	191 JumpIfEqual {303}
	192 Move X8, [X21]
	193 Move X10, 0x780000
	194 Move X24, [X19+24]
	195 NotImplemented "Instruction LDRH not yet implemented."
	196 Move X10, [X10+1960]
	197 Move X1, [X10]
	198 Compare X9, 0
	199 JumpIfEqual {206}
	200 Move X10, [X8+176]
	201 Add X10, X10, 8
	202 NotImplemented "Instruction LDUR not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Subtract X9, X9, 1
	205 Add X10, X10, 16
	206 Move X0, X21
	207 Move W2, W31
	208 Call 0x1C5D788
	209 NotImplemented "Instruction LDRSW not yet implemented."
	210 Add X8, X8, X9
	211 Add X0, X8, 312
	212 Move X8, [X0]
	213 Move X2, [X0+8]
	214 Move X0, X21
	215 Move W1, W23
	216 NotImplemented "Instruction BLR not yet implemented."
	217 Move W1, W0
	218 Compare X24, 0
	219 JumpIfEqual {305}
	220 Move X9, 0x759000
	221 Move W10, [X24+28]
	222 Move X8, [X24+16]
	223 Move X9, [X9+3600]
	224 Add W10, W10, 1
	225 Move X9, [X9]
	226 Move [X24+28], W10
	227 Compare X8, 0
	228 JumpIfEqual {302}
	229 NotImplemented "Instruction LDRSW not yet implemented."
	230 Move W11, [X8+24]
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Add W9, W10, 1
	233 Add X8, X8, X10
	234 Move [X24+24], W9
	235 Move [X8+32], W1
	236 Move X8, [X9+32]
	237 Move X8, [X8+192]
	238 Move X2, [X8+112]
	239 Move X0, X24
	240 Call List`1<Int32>.AddWithResize, X0, X1
	241 Move W8, [X20+32]
	242 Add W23, W23, 1
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Move X0, [X19+24]
	245 Compare X0, 0
	246 JumpIfEqual {319}
	247 Move X8, 0x783000
	248 Move X8, [X8+2896]
	249 Move X1, [X8]
	250 Add X8, X31, 8
	251 Call List`1<Int32>.GetEnumerator, X0
	252 NotImplemented "Instruction LDUR not yet implemented."
	253 Move X8, [X31+24]
	254 Move [X31+3], V0
	255 Move [X31+64], X8
	256 Move X1, [X25]
	257 Add X0, X31, 48
	258 Call Enumerator<Int32>.MoveNext, X0
	259 Move TEMP, X0
	260 And TEMP, TEMP, 1
	261 Compare TEMP, 1
	262 JumpIfNotEqual {267}
	263 Move W1, [X31+64]
	264 Move X2, [X28]
	265 Move X0, X20
	266 Call 0x25EFA7C, X0, X1
	267 Move X22, X31
	268 Move X8, 0x783000
	269 Move X8, [X8+2840]
	270 Move X1, [X8]
	271 Add X0, X31, 48
	272 Call Enumerator<Int32>.Dispose, X0
	273 Compare X22, 0
	274 JumpIfEqual {122}
	275 Move X21, X1
	276 Move X20, X0
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Move X0, X20
	279 Call 0x3EB2AD0
	280 Move X22, [X0]
	281 Call 0x3EB2AE0
	282 Move X8, 0x7B6000
	283 Move X8, [X8+104]
	284 Add X0, X31, 80
	285 Move X1, [X8]
	286 Call Enumerator<Int32, Object>.Dispose, X0
	287 Move X20, [X31+208]
	288 Move X19, [X31+216]
	289 Move X22, [X31+192]
	290 Move X21, [X31+200]
	291 Move X24, [X31+176]
	292 Move X23, [X31+184]
	293 Move X26, [X31+160]
	294 Move X25, [X31+168]
	295 Move X28, [X31+144]
	296 Move X27, [X31+152]
	297 Move X29, [X31+128]
	298 Move X30, [X31+136]
	299 Add X31, X31, 224
	300 Return 
	301 Call 0x1C17F20
	302 Call 0x1C17F20
	303 Call 0x1C17F20
	304 Call 0x1C17F20
	305 Call 0x1C17F20
	306 Move X22, X31
	307 Move X8, 0x783000
	308 Move X8, [X8+2840]
	309 Move X1, [X8]
	310 Add X0, X31, 48
	311 Call Enumerator<Int32>.Dispose, X0
	312 Compare X22, 0
	313 JumpIfEqual {325}
	314 Move X0, X22
	315 Call 0x1C17F18
	316 Call 0x1C17F20
	317 Move X0, X22
	318 Call 0x1C17F18
	319 Call 0x1C17F20
	320 Call 0x1C17F20
	321 Move X21, X1
	322 Move X20, X0
	323 Move X21, X1
	324 Move X20, X0
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Move X0, X20
	327 Call 0x3EB2AD0
	328 Move X19, [X0]
	329 Call 0x3EB2AE0
	330 Move X8, 0x7B6000
	331 Move X8, [X8+104]
	332 Add X0, X31, 80
	333 Move X1, [X8]
	334 Call Enumerator<Int32, Object>.Dispose, X0
	335 Compare X19, 0
	336 JumpIfEqual {287}
	337 Move X0, X19
	338 Call 0x1C17F18
	339 Move X19, X31
	340 Move X20, X0
	341 Move X8, 0x7B6000
	342 Move X8, [X8+104]
	343 Move X1, [X8]
	344 Add X0, X31, 80
	345 Call Enumerator<Int32, Object>.Dispose, X0
	346 Compare X19, 0
	347 JumpIfNotEqual {350}
	348 Move X0, X20
	349 Call 0x1D2D690
	350 Move X0, X19
	351 Call 0x1C17F18
	352 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x0399CB30 LDR X9, [X9 + 0x1C8]
	0x0399CB34 ADD X0, X31, 0x20
	0x0399CB38 STR X8, [X31 + 0x30]
	0x0399CB3C ADD X8, X31, 0x8
	0x0399CB40 LDR X2, [X9]
	0x0399CB44 MOV X3, X31
	0x0399CB48 MOV X4, X31
	0x0399CB4C MOV X5, X31
	0x0399CB50 STR V0, [X31 + 0x2]
	0x0399CB54 BL 0x374A2F4
	0x0399CB58 ADRP X20, 0x77F000
	0x0399CB5C LDUR V0, [X31 + 0x8]
	0x0399CB60 LDR X8, [X31 + 0x18]
	0x0399CB64 LDR X20, [X20 + 0x4C0]
	0x0399CB68 ADRP X9, 0x77F000
	0x0399CB6C ADD X0, X31, 0x20
	0x0399CB70 MOV X3, X31
	0x0399CB74 LDR X1, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xA46000
	006 Move X21, 0x7B6000
	007 Move W8, [X20+2898]
	008 Move X21, [X21+184]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x7B6000
	015 Move X0, [X0+184]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2898], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call 0x25C9DA8, X0
	026 Return 

