Type: UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph/CompiledPassInfo

Method: System.Boolean get_allowPassCulling()

Disassembly:
	0x03991518 MOV X22, X31
	0x0399151C B 0x3991524
	0x03991520 MOV X21, X0
	0x03991524 LDR X1, [X24]
	0x03991528 ADD X0, X31, 0x1E0
	0x0399152C BL 0x2BC8AFC
	0x03991530 CBNZ X22, 0x399153C

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+41]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void Reset(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphPass pass)

Disassembly:
	0x03990408 MOV X0, X19
	0x0399040C BL 0x3990534
	0x03990410 B 0x3990428
	0x03990414 ADRP X8, 0x78E000
	0x03990418 LDR X8, [X8 + 0xB18]
	0x0399041C ADD X0, X31, 0x50
	0x03990420 LDR X1, [X8]
	0x03990424 BL 0x2BBDD9C
	0x03990428 LDP X20, X19, [X31 + 0xC0]
	0x0399042C LDP X22, X21, [X31 + 0xB0]
	0x03990430 LDP X24, X23, [X31 + 0xA0]
	0x03990434 LDP X26, X25, [X31 + 0x90]
	0x03990438 LDP X28, X27, [X31 + 0x80]
	0x0399043C LDP X29, X30, [X31 + 0x70]
	0x03990440 ADD X31, X31, 0xD0
	0x03990444 RET
	0x03990448 BL 0x1C16F20
	0x0399044C BL 0x1C16F28
	0x03990450 MOV X19, X0
	0x03990454 MOV X21, X31
	0x03990458 B 0x3990474
	0x0399045C MOV X0, X21
	0x03990460 BL 0x1C16F18
	0x03990464 MOV X0, X21
	0x03990468 BL 0x1C16F18
	0x0399046C BL 0x1990590
	0x03990470 MOV X19, X0
	0x03990474 ADRP X8, 0x78E000
	0x03990478 LDR X8, [X8 + 0xB18]
	0x0399047C LDR X1, [X8]
	0x03990480 ADD X0, X31, 0x50
	0x03990484 BL 0x2BBDD9C
	0x03990488 CBNZ X21, 0x3990494
	0x0399048C MOV X0, X19
	0x03990490 BL 0x1D2C690
	0x03990494 MOV X0, X21
	0x03990498 BL 0x1C16F18
	0x0399049C BL 0x1990590
	0x039904A0 STR X30, [X31 - 0x30]!
	0x039904A4 STP X22, X21, [X31 + 0x10]
	0x039904A8 STP X20, X19, [X31 + 0x20]
	0x039904AC MOV X19, X0
	0x039904B0 LDR X0, [X0 + 0x18]
	0x039904B4 CBZ X0, 0x39904E8
	0x039904B8 MOV X20, X2
	0x039904BC MOV X21, X1
	0x039904C0 MOVN W22, 0x0
	0x039904C4 LDR W8, [X19 + 0x20]
	0x039904C8 ADD W22, W22, 0x1
	0x039904CC CMP W22, W8
	0x039904D0 B.GE 0x39904EC
	0x039904D4 MOVZ W1, 0x9
	0x039904D8 MOV X2, X31
	0x039904DC BL 0x3233D30
	0x039904E0 LDR X0, [X19 + 0x18]
	0x039904E4 CBNZ X0, 0x39904C4
	0x039904E8 BL 0x1C16F20
	0x039904EC MOV X1, X21
	0x039904F0 MOV X2, X20
	0x039904F4 MOV X3, X31
	0x039904F8 BL 0x3234E54
	0x039904FC LDR X0, [X19 + 0x18]
	0x03990500 CBZ X0, 0x39904E8
	0x03990504 LDP X20, X19, [X31 + 0x20]
	0x03990508 LDP X22, X21, [X31 + 0x10]
	0x0399050C MOV X1, X31
	0x03990510 LDR X30, [X31], #0x30
	0x03990514 B 0x3233888
	0x03990518 STR X30, [X31 - 0x10]!
	0x0399051C LDR X8, [X0]
	0x03990520 CBZ X8, 0x3990530
	0x03990524 LDRB W0, [X8 + 0x29]
	0x03990528 LDR X30, [X31], #0x10
	0x0399052C RET
	0x03990530 BL 0x1C16F20
	0x03990534 SUB X31, X31, 0x70
	0x03990538 STP X29, X30, [X31 + 0x10]
	0x0399053C STP X28, X27, [X31 + 0x20]
	0x03990540 STP X26, X25, [X31 + 0x30]
	0x03990544 STP X24, X23, [X31 + 0x40]
	0x03990548 STP X22, X21, [X31 + 0x50]
	0x0399054C STP X20, X19, [X31 + 0x60]
	0x03990550 ADRP X19, 0xA51000
	0x03990554 LDRB W8, [X19 + 0xACB]
	0x03990558 MOV X20, X0
	0x0399055C TBNZ X8, 0x0, 0x39905D4
	0x03990560 ADRP X0, 0x763000
	0x03990564 LDR X0, [X0 + 0x9C8]
	0x03990568 BL 0x1C16CF4
	0x0399056C ADRP X0, 0x7C0000
	0x03990570 LDR X0, [X0 + 0xB28]
	0x03990574 BL 0x1C16CF4
	0x03990578 ADRP X0, 0x7C0000
	0x0399057C LDR X0, [X0 + 0xB30]
	0x03990580 BL 0x1C16CF4
	0x03990584 ADRP X0, 0x763000
	0x03990588 LDR X0, [X0 + 0x758]
	0x0399058C BL 0x1C16CF4
	0x03990590 ADRP X0, 0x7C0000
	0x03990594 LDR X0, [X0 + 0xBF0]
	0x03990598 BL 0x1C16CF4
	0x0399059C ADRP X0, 0x763000
	0x039905A0 LDR X0, [X0 + 0x9D0]
	0x039905A4 BL 0x1C16CF4
	0x039905A8 ADRP X0, 0x764000
	0x039905AC LDR X0, [X0 + 0xFE0]
	0x039905B0 BL 0x1C16CF4
	0x039905B4 ADRP X0, 0x7C0000
	0x039905B8 LDR X0, [X0 + 0xC38]
	0x039905BC BL 0x1C16CF4
	0x039905C0 ADRP X0, 0x7C0000
	0x039905C4 LDR X0, [X0 + 0xC40]
	0x039905C8 BL 0x1C16CF4
	0x039905CC MOVZ W8, 0x1
	0x039905D0 STRB W8, [X19 + 0xACB]
	0x039905D4 LDR X8, [X20 + 0x30]
	0x039905D8 CBZ X8, 0x3990858
	0x039905DC LDRB W8, [X8 + 0x24]
	0x039905E0 CBZ W8, 0x3990808
	0x039905E4 ADRP X8, 0x763000
	0x039905E8 LDR X8, [X8 + 0x9C8]
	0x039905EC LDR X19, [X20 + 0x38]
	0x039905F0 LDR X21, [X8]
	0x039905F4 LDR X8, [X21 + 0x38]
	0x039905F8 CBNZ X8, 0x3990608
	0x039905FC MOV X0, X21
	0x03990600 BL 0x1C5C6E0
	0x03990604 LDR X8, [X21 + 0x38]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xA52000
	010 Move W8, [X21+2770]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x7BF000
	018 Move X0, [X0+3624]
	019 Call 0x1C17CF4
	020 Move X0, 0x76B000
	021 Move X0, [X0+2136]
	022 Call 0x1C17CF4
	023 Move X0, 0x768000
	024 Move X0, [X0+2928]
	025 Call 0x1C17CF4
	026 Move X0, 0x765000
	027 Move X0, [X0+3632]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+2770], W8
	031 Move [X19], X20
	032 Compare X20, 0
	033 JumpIfEqual {151}
	034 Move W9, [X20+40]
	035 Move X8, [X19+8]
	036 Move [X19+64], W9
	037 Compare X8, 0
	038 JumpIfNotEqual {105}
	039 Move X20, 0x7BF000
	040 Move X20, [X20+3624]
	041 Move W1, 2
	042 Move X0, [X20]
	043 Call 0x1C17D6C
	044 Move [X19+8], X0
	045 Move X0, [X20]
	046 Move W1, 2
	047 Call 0x1C17D6C
	048 Move [X19+16], X0
	049 Move X21, 0x765000
	050 Move X23, 0x768000
	051 Move X21, [X21+3632]
	052 Move X23, [X23+2928]
	053 Move X22, X31
	054 Move W8, 1
	055 Move X0, [X21]
	056 Move X25, [X19+8]
	057 Move W24, W8
	058 Call 0x1C17F10
	059 Move X1, [X23]
	060 Move X20, X0
	061 Call List`1<Int32>..ctor, X0
	062 Compare X25, 0
	063 JumpIfEqual {151}
	064 Compare X20, 0
	065 JumpIfEqual {72}
	066 Move X8, [X25]
	067 Move X0, X20
	068 Move X1, [X8+64]
	069 Call 0x1C17E00
	070 Compare X0, 0
	071 JumpIfEqual {153}
	072 Move W8, [X25+24]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Add X8, X25, X22
	075 Move [X8+32], X20
	076 Move X0, [X21]
	077 Move X25, [X19+16]
	078 Call 0x1C17F10
	079 Move X1, [X23]
	080 Move X20, X0
	081 Call List`1<Int32>..ctor, X0
	082 Compare X25, 0
	083 JumpIfEqual {151}
	084 Compare X20, 0
	085 JumpIfEqual {92}
	086 Move X8, [X25]
	087 Move X0, X20
	088 Move X1, [X8+64]
	089 Call 0x1C17E00
	090 Compare X0, 0
	091 JumpIfEqual {153}
	092 Move W8, [X25+24]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move W8, W31
	095 Add X9, X25, X22
	096 Move W22, 1
	097 Move [X9+32], X20
	098 Move TEMP, X24
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfEqual {55}
	102 Move X8, [X19+8]
	103 Compare X8, 0
	104 JumpIfEqual {151}
	105 Move W9, [X8+24]
	106 Move X10, X31
	107 Move W12, 1
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move W11, W12
	110 Add X12, X8, X10
	111 Move X12, [X12+32]
	112 Compare X12, 0
	113 JumpIfEqual {151}
	114 Move W13, [X12+28]
	115 Add W13, W13, 1
	116 Move [X12+24], W31
	117 Move [X12+28], W13
	118 Move X12, [X19+16]
	119 Compare X12, 0
	120 JumpIfEqual {151}
	121 Move W13, [X12+24]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Add X10, X12, X10
	124 Move X10, [X10+32]
	125 Compare X10, 0
	126 JumpIfEqual {151}
	127 Move W13, [X10+28]
	128 Move W12, W31
	129 Add W13, W13, 1
	130 Move [X10+24], W31
	131 Move [X10+28], W13
	132 Move W10, 1
	133 Move TEMP, X11
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfEqual {108}
	137 NotImplemented "Instruction MOVI not yet implemented."
	138 Move [X19+27], W31
	139 Move [X19+24], W31
	140 Move [X19+32], D0
	141 Move [X19+40], W31
	142 Move X20, [X31+48]
	143 Move X19, [X31+56]
	144 Move X22, [X31+32]
	145 Move X21, [X31+40]
	146 Move X24, [X31+16]
	147 Move X23, [X31+24]
	148 Move X30, [X31+64]
	149 Move X25, [X31+72]
	150 Return 
	151 Call 0x1C17F20
	152 Call 0x1C17F28
	153 Call 0x1C17F44
	154 Move X1, X31
	155 Call 0x1C17DEC

