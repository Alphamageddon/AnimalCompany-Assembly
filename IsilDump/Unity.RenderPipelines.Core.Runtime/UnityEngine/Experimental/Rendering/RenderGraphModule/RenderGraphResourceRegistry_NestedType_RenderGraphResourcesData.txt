Type: UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphResourceRegistry/RenderGraphResourcesData

Method: System.Void Clear(System.Boolean onException, System.Int32 frameIndex)

Disassembly:
	0x0399B1AC LDP W3, W4, [X19 + 0x58]
	0x0399B1B0 LDR W5, [X19 + 0x60]
	0x0399B1B4 LDRB W28, [X19 + 0x64]
	0x0399B1B8 LDRB W29, [X19 + 0x65]
	0x0399B1BC LDRB W22, [X19 + 0x66]
	0x0399B1C0 LDRB W25, [X19 + 0x67]
	0x0399B1C4 LDR W13, [X19 + 0x68]
	0x0399B1C8 LDR V10, [X19 + 0x6C]
	0x0399B1CC LDR X8, [X8 + 0x9B0]
	0x0399B1D0 LDR W21, [X19 + 0x70]
	0x0399B1D4 LDRB W26, [X19 + 0x74]
	0x0399B1D8 LDRB W27, [X19 + 0x75]
	0x0399B1DC LDR X0, [X8]
	0x0399B1E0 LDP W23, W24, [X19 + 0x78]
	0x0399B1E4 LDR W8, [X0 + 0xE0]
	0x0399B1E8 CBNZ W8, 0x399B210
	0x0399B1EC STP W2, W12, [X31 + 0x84]
	0x0399B1F0 STR W1, [X31 + 0x98]
	0x0399B1F4 STP W4, W3, [X31 + 0x7C]
	0x0399B1F8 STP W13, W5, [X31 + 0x74]
	0x0399B1FC BL 0x1C16DFC
	0x0399B200 LDP W13, W5, [X31 + 0x74]
	0x0399B204 LDP W4, W3, [X31 + 0x7C]
	0x0399B208 LDP W2, W12, [X31 + 0x84]
	0x0399B20C LDR W1, [X31 + 0x98]
	0x0399B210 CMP W27, 0x0
	0x0399B214 CSET W8, NE
	0x0399B218 CMP W26, 0x0
	0x0399B21C CSET W9, NE
	0x0399B220 CMP W25, 0x0
	0x0399B224 CSET W10, NE
	0x0399B228 CMP W22, 0x0
	0x0399B22C CSET W11, NE

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xA47000
	007 Move W8, [X22+2854]
	008 Move W19, W2
	009 Move W20, W1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x782000
	016 Move X0, [X0+2680]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2854], W8
	020 Move X0, [X21+16]
	021 Compare X0, 0
	022 JumpIfEqual {43}
	023 Move X8, 0x782000
	024 Move X8, [X8+2680]
	025 Move W1, [X21+24]
	026 Move W2, W31
	027 Move X3, [X8]
	028 Call 0x2B410C8, X0, X1, X2
	029 Move X0, [X21+32]
	030 Compare X0, 0
	031 JumpIfEqual {43}
	032 Move X8, [X0]
	033 And W1, W20, 1
	034 Move W2, W19
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X4, [X8+408]
	038 Move X3, [X8+416]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 CallNoReturn X4
	043 Call 0x1C17F20

Method: System.Void Cleanup()

Disassembly:
	0x0399B250 STP X20, X31, [X31 + 0x40]
	0x0399B254 STR W24, [X31 + 0x38]
	0x0399B258 STR W23, [X31 + 0x30]
	0x0399B25C STR W21, [X31 + 0x18]
	0x0399B260 STR W13, [X31 + 0x10]
	0x0399B264 STRB W8, [X31 + 0x28]
	0x0399B268 STRB W9, [X31 + 0x20]
	0x0399B26C STRB W10, [X31 + 0x8]
	0x0399B270 STRB W11, [X31]
	0x0399B274 BL 0x39D5C74
	0x0399B278 STR X0, [X19 + 0xA8]
	0x0399B27C LDP X20, X19, [X31 + 0x100]
	0x0399B280 LDP X22, X21, [X31 + 0xF0]
	0x0399B284 LDP X24, X23, [X31 + 0xE0]
	0x0399B288 LDP X26, X25, [X31 + 0xD0]
	0x0399B28C LDP X28, X27, [X31 + 0xC0]
	0x0399B290 LDP X29, X30, [X31 + 0xB0]
	0x0399B294 LDP D9, D8, [X31 + 0xA0]
	0x0399B298 LDR V10, [X31 + 0x90]
	0x0399B29C ADD X31, X31, 0x110
	0x0399B2A0 RET
	0x0399B2A4 STR X30, [X31 - 0x20]!
	0x0399B2A8 STP X20, X19, [X31 + 0x10]
	0x0399B2AC ADRP X20, 0xA46000
	0x0399B2B0 LDRB W8, [X20 + 0xB4C]
	0x0399B2B4 MOV X19, X0
	0x0399B2B8 TBNZ X8, 0x0, 0x399B2D0
	0x0399B2BC ADRP X0, 0x7B6000
	0x0399B2C0 LDR X0, [X0 + 0x30]
	0x0399B2C4 BL 0x1C16CF4
	0x0399B2C8 MOVZ W8, 0x1
	0x0399B2CC STRB W8, [X20 + 0xB4C]
	0x0399B2D0 ADRP X20, 0x7B6000
	0x0399B2D4 LDR X0, [X19 + 0xA8]
	0x0399B2D8 LDR X20, [X20 + 0x30]
	0x0399B2DC CBZ X0, 0x399B2E8
	0x0399B2E0 MOV X1, X31
	0x0399B2E4 BL 0x39D4B1C
	0x0399B2E8 LDR X1, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xA47000
	006 Move W8, [X20+2855]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x782000
	013 Move X0, [X0+2688]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2855], W8
	017 Move W8, [X19+24]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X21, 0x782000
	020 Move X21, [X21+2688]
	021 Move W20, W31
	022 Move X0, [X19+16]
	023 Compare X0, 0
	024 JumpIfEqual {49}
	025 Move X2, [X21]
	026 Move W1, W20
	027 Call 0x2B41178, X0, X1
	028 Move X0, [X0]
	029 Compare X0, 0
	030 JumpIfEqual {35}
	031 Move X8, [X0]
	032 Move X9, [X8+504]
	033 Move X1, [X8+512]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move W8, [X19+24]
	036 Add W20, W20, 1
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, [X19+32]
	039 Compare X0, 0
	040 JumpIfEqual {49}
	041 Move X8, [X0]
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X2, [X8+392]
	045 Move X1, [X8+400]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 CallNoReturn X2
	049 Call 0x1C17F20

Method: System.Void PurgeUnusedGraphicsResources(System.Int32 frameIndex)

Disassembly:
	0x0399B230 CMP W29, 0x0
	0x0399B234 CSET W7, NE
	0x0399B238 CMP W28, 0x0
	0x0399B23C CSET W6, NE
	0x0399B240 MOV V0.16B, V8.16B
	0x0399B244 MOV V1.16B, V9.16B
	0x0399B248 MOV V2.16B, V10.16B
	0x0399B24C MOV W0, W12

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+376]
	007 Move X2, [X8+384]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Int32 AddNewRenderGraphResource(out ResType outRes, System.Boolean pooledResource = True)

Disassembly:
	0x022B8EA8 LDR X8, [X8 + 0x28]
	0x022B8EAC MOV X19, X6
	0x022B8EB0 MOV W22, W4
	0x022B8EB4 MOV W24, W3
	0x022B8EB8 STUR X8, [X29 - 0x8]
	0x022B8EBC LDR X8, [X6 + 0x38]
	0x022B8EC0 MOV X21, X2
	0x022B8EC4 MOV X23, X0
	0x022B8EC8 CBNZ X8, 0x22B8ED8
	0x022B8ECC MOV X0, X19
	0x022B8ED0 BL 0x1C5C6E0
	0x022B8ED4 LDR X8, [X19 + 0x38]
	0x022B8ED8 LDR X0, [X8]
	0x022B8EDC LDR W9, [X0 + 0xFC]
	0x022B8EE0 LDRB W10, [X0 + 0x135]
	0x022B8EE4 STUR X9, [X29 - 0x38]
	0x022B8EE8 TBNZ X10, 0x0, 0x22B8EF8
	0x022B8EEC BL 0x1C5C684
	0x022B8EF0 LDR W9, [X0 + 0xFC]
	0x022B8EF4 LDR X8, [X19 + 0x38]
	0x022B8EF8 ADD W9, W9, 0x10
	0x022B8EFC ADD X9, X9, 0xF
	0x022B8F00 ADD X10, X31, 0x0
	0x022B8F04 AND X9, X9, 0x1FFFFFFFF
	0x022B8F08 SUB X9, X10, X9
	0x022B8F0C STUR X19, [X29 - 0x20]
	0x022B8F10 STUR X9, [X29 - 0x40]
	0x022B8F14 ADD X31, X9, 0x0
	0x022B8F18 LDR X8, [X8 + 0x28]
	0x022B8F1C LDR W26, [X8 + 0xFC]
	0x022B8F20 ADD X8, X31, 0x0
	0x022B8F24 ADD X9, X26, 0xF
	0x022B8F28 AND X9, X9, 0x1FFFFFFFF
	0x022B8F2C SUB X27, X8, X9
	0x022B8F30 ADD X31, X27, 0x0
	0x022B8F34 LDUR X19, [X29 - 0x38]
	0x022B8F38 ADD X8, X31, 0x0
	0x022B8F3C ADD X9, X19, 0xF
	0x022B8F40 AND X9, X9, 0x1FFFFFFFF
	0x022B8F44 SUB X28, X8, X9
	0x022B8F48 ADD X31, X28, 0x0
	0x022B8F4C ADD X8, X31, 0x0
	0x022B8F50 SUB X20, X8, X9
	0x022B8F54 ADD X31, X20, 0x0
	0x022B8F58 MOV X0, X20
	0x022B8F5C MOV W1, W31
	0x022B8F60 MOV X2, X19
	0x022B8F64 BL 0x3EB1B10
	0x022B8F68 MOV X0, X20
	0x022B8F6C MOV W1, W31
	0x022B8F70 MOV X2, X19
	0x022B8F74 STUR X20, [X29 - 0x48]
	0x022B8F78 BL 0x3EB1B10
	0x022B8F7C CMP W22, 0x1
	0x022B8F80 B.LT 0x22B9050
	0x022B8F84 LDUR X8, [X29 - 0x38]
	0x022B8F88 SXTW X25, W26
	0x022B8F8C SXTW X8, W8
	0x022B8F90 STUR X8, [X29 - 0x30]
	0x022B8F94 SXTW X8, W24
	0x022B8F98 LDP X20, X24, [X29 - 0x28]
	0x022B8F9C MOV W22, W22
	0x022B8FA0 STUR X8, [X29 - 0x58]
	0x022B8FA4 LDR X19, [X21]
	0x022B8FA8 LDUR X8, [X29 - 0x28]
	0x022B8FAC CBZ X8, 0x22B8FFC
	0x022B8FB0 LDUR X1, [X29 - 0x48]
	0x022B8FB4 LDUR X2, [X29 - 0x38]
	0x022B8FB8 MOV X0, X28
	0x022B8FBC BL 0x3EB1AC0
	0x022B8FC0 LDR X8, [X24 + 0x38]
	0x022B8FC4 LDR X0, [X8]
	0x022B8FC8 LDRB W9, [X0 + 0x135]
	0x022B8FCC TBNZ X9, 0x0, 0x22B8FD8
	0x022B8FD0 BL 0x1C5C684
	0x022B8FD4 LDR X8, [X24 + 0x38]
	0x022B8FD8 LDR X1, [X8 + 0x18]
	0x022B8FDC LDUR X2, [X29 - 0x40]
	0x022B8FE0 SUB X4, X29, 0x18
	0x022B8FE4 SUB X5, X29, 0xC
	0x022B8FE8 MOV X3, X20
	0x022B8FEC STUR X28, [X29 - 0x18]
	0x022B8FF0 BL 0x1C17728
	0x022B8FF4 LDUR W8, [X29 - 0xC]
	0x022B8FF8 TBZ X8, 0x1F, 0x22B9038
	0x022B8FFC LDP X9, X8, [X29 - 0x58]
	0x022B9000 MOV X0, X27
	0x022B9004 MOV X2, X26
	0x022B9008 MADD X1, X19, X9, X8
	0x022B900C BL 0x3EB1AC0
	0x022B9010 MOV X0, X23
	0x022B9014 MOV X1, X27
	0x022B9018 MOV X2, X26
	0x022B901C BL 0x3EB1AC0
	0x022B9020 LDUR X8, [X29 - 0x20]
	0x022B9024 LDR X8, [X8 + 0x38]
	0x022B9028 LDR X0, [X8 + 0x28]
	0x022B902C LDRB W8, [X0 + 0x135]
	0x022B9030 TBNZ X8, 0x0, 0x22B9038
	0x022B9034 BL 0x1C5C684
	0x022B9038 LDUR X8, [X29 - 0x30]
	0x022B903C ADD X23, X23, X25
	0x022B9040 SUBS X22, X22, 0x1
	0x022B9044 ADD X21, X21, 0x8
	0x022B9048 ADD X20, X20, X8
	0x022B904C B.NE 0x22B8FA4
	0x022B9050 LDUR X8, [X29 - 0x60]
	0x022B9054 LDR X8, [X8 + 0x28]
	0x022B9058 LDUR X9, [X29 - 0x8]
	0x022B905C CMP X8, X9
	0x022B9060 B.NE 0x22B9084
	0x022B9064 ADD X31, X29, 0x0
	0x022B9068 LDP X20, X19, [X31 + 0x50]
	0x022B906C LDP X22, X21, [X31 + 0x40]
	0x022B9070 LDP X24, X23, [X31 + 0x30]
	0x022B9074 LDP X26, X25, [X31 + 0x20]
	0x022B9078 LDP X28, X27, [X31 + 0x10]
	0x022B907C LDP X29, X30, [X31], #0x60
	0x022B9080 RET
	0x022B9084 BL 0x3EB1B20
	0x022B9088 SUB X31, X31, 0xC0
	0x022B908C STP X29, X30, [X31 + 0x60]
	0x022B9090 STP X28, X27, [X31 + 0x70]
	0x022B9094 STP X26, X25, [X31 + 0x80]
	0x022B9098 STP X24, X23, [X31 + 0x90]
	0x022B909C STP X22, X21, [X31 + 0xA0]
	0x022B90A0 STP X20, X19, [X31 + 0xB0]
	0x022B90A4 STR X2, [X31 + 0x20]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X8, [X3+56]
	011 Move X23, X3
	012 Move W20, W2
	013 Move X19, X1
	014 Move X21, X0
	015 Compare X8, 0
	016 JumpIfNotEqual {31}
	017 Move X0, 0x1E65000
	018 Move X0, [X0+2680]
	019 Call 0x1C17CF4
	020 Move X0, 0x1E65000
	021 Move X0, [X0+2688]
	022 Call 0x1C17CF4
	023 Move X0, 0x1E65000
	024 Move X0, [X0+2696]
	025 Call 0x1C17CF4
	026 Move X8, [X23+56]
	027 Compare X8, 0
	028 JumpIfNotEqual {31}
	029 Move X0, X23
	030 Call 0x1C5D6E0
	031 Move X0, [X21+16]
	032 Compare X0, 0
	033 JumpIfEqual {160}
	034 Move X8, 0x1E65000
	035 Move W22, [X0+24]
	036 Move X8, [X8+2680]
	037 Move W2, 1
	038 Add W1, W22, 1
	039 Move X3, [X8]
	040 Call 0x2B410C8, X0, X1, X2
	041 Move X0, [X21+16]
	042 Compare X0, 0
	043 JumpIfEqual {160}
	044 Move X25, 0x1E65000
	045 Move X25, [X25+2688]
	046 Move W1, W22
	047 Move X2, [X25]
	048 Call 0x2B41178, X0, X1
	049 Move X8, [X0]
	050 Compare X8, 0
	051 JumpIfNotEqual {64}
	052 Move X0, [X21+16]
	053 Compare X0, 0
	054 JumpIfEqual {160}
	055 Move X2, [X25]
	056 Move W1, W22
	057 Call 0x2B41178, X0, X1
	058 Move X8, [X23+56]
	059 Move X24, X0
	060 Move X8, [X8]
	061 Move X0, X8
	062 Call Activator.CreateInstance
	063 Move [X24], X0
	064 Move X0, [X21+16]
	065 Compare X0, 0
	066 JumpIfEqual {160}
	067 Move X2, [X25]
	068 Move W1, W22
	069 Call 0x2B41178, X0, X1
	070 Move X8, [X23+56]
	071 Move X24, [X0]
	072 Move X1, [X8+8]
	073 Move W8, [X1+309]
	074 Move TEMP, X8
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {81}
	078 Move X0, X1
	079 Call 0x1C5D684
	080 Move X1, X0
	081 Move X0, X24
	082 Call 0x1C17E00
	083 Move X8, [X23+56]
	084 Move X26, X0
	085 Move X25, [X8+8]
	086 Move W8, [X25+309]
	087 Move TEMP, X8
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {94}
	091 Move X0, X25
	092 Call 0x1C5D684
	093 Move X25, X0
	094 Compare X26, 0
	095 JumpIfEqual {104}
	096 Move X0, X26
	097 Move X1, X25
	098 Call 0x1C17E00
	099 Compare X0, 0
	100 JumpIfNotEqual {105}
	101 Move X0, X26
	102 Move X1, X25
	103 Call 0x1C181E0
	104 Move X0, X31
	105 Move [X19], X0
	106 Move X8, [X23+56]
	107 Move X1, [X8+8]
	108 Move W8, [X1+309]
	109 Move TEMP, X8
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {116}
	113 Move X0, X1
	114 Call 0x1C5D684
	115 Move X1, X0
	116 Move X0, X24
	117 Call 0x1C17E00
	118 Move X8, [X23+56]
	119 Move X24, X0
	120 Move X23, [X8+8]
	121 Move W8, [X23+309]
	122 Move TEMP, X8
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfEqual {129}
	126 Move X0, X23
	127 Call 0x1C5D684
	128 Move X23, X0
	129 Compare X24, 0
	130 JumpIfEqual {136}
	131 Move X0, X24
	132 Move X1, X23
	133 Call 0x1C17E00
	134 Compare X0, 0
	135 JumpIfEqual {161}
	136 Move TEMP, X20
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfNotEqual {141}
	140 Move X1, [X21+32]
	141 Move X1, X31
	142 Move X0, [X19]
	143 Compare X0, 0
	144 JumpIfEqual {160}
	145 Move X8, [X0]
	146 Move X9, [X8+376]
	147 Move X2, [X8+384]
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move W0, W22
	150 Move X20, [X31+64]
	151 Move X19, [X31+72]
	152 Move X22, [X31+48]
	153 Move X21, [X31+56]
	154 Move X24, [X31+32]
	155 Move X23, [X31+40]
	156 Move X26, [X31+16]
	157 Move X25, [X31+24]
	158 Move X30, [X31+80]
	159 Return X0
	160 Call 0x1C17F20
	161 Move X0, X24
	162 Move X1, X23
	163 Call 0x1C181E0

Method: System.Void .ctor()

Disassembly:
	0x0399A308 STP X1, X2, [X31 + 0x8]
	0x0399A30C ADD X1, X31, 0x8
	0x0399A310 MOV X2, X3
	0x0399A314 MOV X3, X4
	0x0399A318 BL 0x1C16CB0
	0x0399A31C LDR X30, [X31 + 0x20]
	0x0399A320 ADD X31, X31, 0x30
	0x0399A324 RET
	0x0399A328 MOV X0, X1
	0x0399A32C MOV X1, X31
	0x0399A330 B 0x1C16CB4
	0x0399A334 LDR W0, [X0 + 0x4]
	0x0399A338 RET
	0x0399A33C STR W1, [X0 + 0x4]
	0x0399A340 RET
	0x0399A344 SUB X31, X31, 0x40
	0x0399A348 STP X30, X21, [X31 + 0x20]
	0x0399A34C STP X20, X19, [X31 + 0x30]
	0x0399A350 ADRP X21, 0xA47000
	0x0399A354 MOV X19, X8
	0x0399A358 LDRB W8, [X21 + 0xB29]
	0x0399A35C MOV X20, X0
	0x0399A360 STR X0, [X31 + 0x18]
	0x0399A364 TBNZ X8, 0x0, 0x399A37C
	0x0399A368 ADRP X0, 0x784000
	0x0399A36C LDR X0, [X0 + 0x720]
	0x0399A370 BL 0x1C16CF4
	0x0399A374 MOVZ W8, 0x1
	0x0399A378 STRB W8, [X21 + 0xB29]
	0x0399A37C ANDS W31, W20, 0xFF
	0x0399A380 B.EQ 0x399A3D8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA48000
	007 Move X22, 0x7B7000
	008 Move X20, 0x7B7000
	009 Move W8, [X21+2856]
	010 Move X22, [X22+4016]
	011 Move X20, [X20+4024]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x7B7000
	018 Move X0, [X0+4024]
	019 Call 0x1C17CF4
	020 Move X0, 0x7B7000
	021 Move X0, [X0+4016]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2856], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call 0x2B40B40, X0
	030 Move [X19+16], X20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call Object..ctor, X0
	039 Return 

