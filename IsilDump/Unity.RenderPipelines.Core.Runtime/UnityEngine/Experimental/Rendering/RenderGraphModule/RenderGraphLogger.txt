Type: UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphLogger

Method: System.Void Initialize(System.String logName)

Disassembly:
	0x0398EA9C LDR X8, [X21]
	0x0398EAA0 CMP X8, X1
	0x0398EAA4 B.NE 0x398EAEC
	0x0398EAA8 LDR X0, [X22]
	0x0398EAAC LDR W8, [X0 + 0xE0]
	0x0398EAB0 CBNZ W8, 0x398EABC
	0x0398EAB4 BL 0x1C16DFC
	0x0398EAB8 LDR X0, [X22]
	0x0398EABC LDR X8, [X0 + 0xB8]
	0x0398EAC0 MOV X1, X21
	0x0398EAC4 MOV X2, X20
	0x0398EAC8 ADD X0, X8, 0x18
	0x0398EACC BL 0x1C24138
	0x0398EAD0 CMP X20, X0
	0x0398EAD4 MOV X20, X0
	0x0398EAD8 B.NE 0x398EA80
	0x0398EADC LDP X20, X19, [X31 + 0x20]
	0x0398EAE0 LDP X22, X21, [X31 + 0x10]
	0x0398EAE4 LDP X30, X23, [X31], #0x30
	0x0398EAE8 RET
	0x0398EAEC MOV X0, X21
	0x0398EAF0 BL 0x1C171E0
	0x0398EAF4 STP X30, X23, [X31 - 0x30]!
	0x0398EAF8 STP X22, X21, [X31 + 0x10]
	0x0398EAFC STP X20, X19, [X31 + 0x20]
	0x0398EB00 ADRP X20, 0xA53000
	0x0398EB04 ADRP X22, 0x7C2000
	0x0398EB08 LDRB W8, [X20 + 0xAA7]
	0x0398EB0C LDR X22, [X22 + 0x8C0]
	0x0398EB10 MOV X19, X0
	0x0398EB14 TBNZ X8, 0x0, 0x398EB38
	0x0398EB18 ADRP X0, 0x7C2000
	0x0398EB1C LDR X0, [X0 + 0xBC8]
	0x0398EB20 BL 0x1C16CF4
	0x0398EB24 ADRP X0, 0x7C2000
	0x0398EB28 LDR X0, [X0 + 0x8C0]
	0x0398EB2C BL 0x1C16CF4
	0x0398EB30 MOVZ W8, 0x1
	0x0398EB34 STRB W8, [X20 + 0xAA7]
	0x0398EB38 LDR X0, [X22]
	0x0398EB3C LDR W8, [X0 + 0xE0]
	0x0398EB40 CBNZ W8, 0x398EB4C
	0x0398EB44 BL 0x1C16DFC
	0x0398EB48 LDR X0, [X22]
	0x0398EB4C LDR X8, [X0 + 0xB8]
	0x0398EB50 ADRP X23, 0x7C2000
	0x0398EB54 LDR X20, [X8 + 0x18]
	0x0398EB58 LDR X23, [X23 + 0xBC8]
	0x0398EB5C MOV X0, X20
	0x0398EB60 MOV X1, X19
	0x0398EB64 MOV X2, X31
	0x0398EB68 BL 0x33C0FDC
	0x0398EB6C MOV X21, X0
	0x0398EB70 CBZ X0, 0x398EB84
	0x0398EB74 LDR X1, [X23]
	0x0398EB78 LDR X8, [X21]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA54000
	007 Move W8, [X21+2774]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x7C3000
	015 Move X0, [X0+2808]
	016 Call 0x1C17CF4
	017 Move X0, 0x7C3000
	018 Move X0, [X0+2816]
	019 Call 0x1C17CF4
	020 Move X0, 0x766000
	021 Move X0, [X0+2288]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2774], W8
	025 Move [X31+8], X31
	026 Move X0, [X19+16]
	027 Compare X0, 0
	028 JumpIfEqual {69}
	029 Move X8, 0x7C3000
	030 Move X8, [X8+2816]
	031 Add X2, X31, 8
	032 Move X1, X20
	033 Move X3, [X8]
	034 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {56}
	039 Move X8, 0x766000
	040 Move X8, [X8+2288]
	041 Move X0, [X8]
	042 Call 0x1C17F10
	043 Move X1, X31
	044 Move X21, X0
	045 Call StringBuilder..ctor, X0
	046 Move [X31+8], X21
	047 Move X0, [X19+16]
	048 Compare X0, 0
	049 JumpIfEqual {69}
	050 Move X8, 0x7C3000
	051 Move X8, [X8+2808]
	052 Move X1, X20
	053 Move X2, X21
	054 Move X3, [X8]
	055 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	056 Move X0, [X31+8]
	057 Move [X19+24], X0
	058 Compare X0, 0
	059 JumpIfEqual {69}
	060 Move X1, X31
	061 Call StringBuilder.Clear, X0
	062 Move [X19+32], W31
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X30, [X31+16]
	066 Move X21, [X31+24]
	067 Add X31, X31, 48
	068 Return 
	069 Call 0x1C17F20

Method: System.Void IncrementIndentation(System.Int32 value)

Disassembly:
	0x0399840C MOV W1, W21
	0x03998410 BL 0x25C80FC
	0x03998414 LDR X0, [X19 + 0x48]
	0x03998418 CBZ X0, 0x3998434
	0x0399841C LDR X1, [X19 + 0x40]
	0x03998420 LDP X20, X19, [X31 + 0x20]
	0x03998424 LDP X22, X21, [X31 + 0x10]
	0x03998428 MOV X2, X31
	0x0399842C LDR X30, [X31], #0x30
	0x03998430 B 0x3C3B384
	0x03998434 BL 0x1C16F20
	0x03998438 LDR X8, [X19]
	0x0399843C MOV X0, X19
	0x03998440 LDP X9, X1, [X8 + 0x188]
	0x03998444 BLR X9
	0x03998448 MOV X19, X0
	0x0399844C ADRP X0, 0x7B8000
	0x03998450 LDR X0, [X0 + 0xED0]
	0x03998454 BL 0x1C16D08
	0x03998458 MOV X1, X19
	0x0399845C MOV X2, X31
	0x03998460 BL 0x321EFD0
	0x03998464 MOV X19, X0
	0x03998468 ADRP X0, 0x75B000
	0x0399846C LDR X0, [X0 + 0x5B0]
	0x03998470 BL 0x1C16D08
	0x03998474 BL 0x1C16F10
	0x03998478 MOV X1, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xA4A000
	007 Move X21, 0x75C000
	008 Move W8, [X22+2775]
	009 Move X21, [X21+1448]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x75C000
	017 Move X0, [X0+1448]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2775], W8
	021 Move X0, [X21]
	022 Move W21, [X19+32]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CSNEG not yet implemented."
	029 Add W8, W21, W8
	030 Move [X19+32], W8
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X30, [X31+48]
	036 Return 

Method: System.Void DecrementIndentation(System.Int32 value)

Disassembly:
	0x039984E0 MOVZ W8, 0x1
	0x039984E4 STRB W8, [X21 + 0xAEE]
	0x039984E8 LDR X2, [X19 + 0x48]
	0x039984EC CBZ X2, 0x3998580
	0x039984F0 LDR X21, [X19 + 0x28]
	0x039984F4 CBZ X21, 0x3998564
	0x039984F8 ADRP X8, 0x7B8000
	0x039984FC LDR X8, [X8 + 0x9E0]
	0x03998500 LDR X9, [X21]
	0x03998504 LDR X8, [X8]
	0x03998508 LDRB W11, [X9 + 0x130]
	0x0399850C LDRB W10, [X8 + 0x130]
	0x03998510 CMP W11, W10
	0x03998514 B.CC 0x3998564
	0x03998518 LDR X9, [X9 + 0xC8]
	0x0399851C ADD X9, X9, X10, 0x3, LSL
	0x03998520 LDUR X9, [X9 - 0x8]
	0x03998524 CMP X9, X8
	0x03998528 B.NE 0x3998564
	0x0399852C ADRP X8, 0x7B8000
	0x03998530 LDR W1, [X19 + 0x18]
	0x03998534 LDR X8, [X8 + 0xEE0]
	0x03998538 MOV X0, X21
	0x0399853C MOV W3, W20
	0x03998540 LDR X4, [X8]
	0x03998544 BL 0x25C7B20
	0x03998548 ADRP X8, 0x7B8000
	0x0399854C LDR W1, [X19 + 0x18]
	0x03998550 LDR X2, [X19 + 0x48]
	0x03998554 LDR X8, [X8 + 0xEE8]
	0x03998558 MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xA4A000
	007 Move X21, 0x75C000
	008 Move W8, [X22+2776]
	009 Move X21, [X21+1448]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x75C000
	017 Move X0, [X0+1448]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2776], W8
	021 Move X0, [X21]
	022 Move W21, [X19+32]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CSNEG not yet implemented."
	029 Subtract W1, W21, W8
	030 Move W0, W31
	031 Move X2, X31
	032 Call Math.Max, X0, X1
	033 Move [X19+32], W0
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Return 

Method: System.Void LogLine(System.String format, System.Object[] args)

Disassembly:
	0x039914A0 LDP X20, X19, [X31 + 0x50]
	0x039914A4 LDP X22, X21, [X31 + 0x40]
	0x039914A8 LDP X24, X23, [X31 + 0x30]
	0x039914AC LDP X26, X25, [X31 + 0x20]
	0x039914B0 LDP X30, X27, [X31 + 0x10]
	0x039914B4 LDR X29, [X31], #0x60
	0x039914B8 RET
	0x039914BC BL 0x1C16F20
	0x039914C0 BL 0x1C16F20
	0x039914C4 BL 0x1C16F20
	0x039914C8 BL 0x1C16F20
	0x039914CC B 0x39914E4
	0x039914D0 B 0x39914E4
	0x039914D4 B 0x39914E4
	0x039914D8 B 0x39914E4
	0x039914DC B 0x39914E4
	0x039914E0 B 0x39914E4
	0x039914E4 MOV X21, X0
	0x039914E8 CMP W1, 0x1
	0x039914EC B.NE 0x3991518
	0x039914F0 MOV X0, X21
	0x039914F4 BL 0x3EB1AD0
	0x039914F8 LDR X22, [X0]
	0x039914FC BL 0x3EB1AE0
	0x03991500 LDR X1, [X24]
	0x03991504 ADD X0, X31, 0x1E0
	0x03991508 BL 0x2BC8AFC
	0x0399150C CBZ X22, 0x3991474
	0x03991510 MOV X0, X22
	0x03991514 BL 0x1C16F18

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move X0, [X0+24]
	008 Compare X0, 0
	009 JumpIfEqual {24}
	010 Move X20, X2
	011 Move X21, X1
	012 Move TEMP, 0
	013 Not TEMP
	014 Move W22, TEMP
	015 Move W8, [X19+32]
	016 Add W22, W22, 1
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W1, 9
	019 Move X2, X31
	020 Call StringBuilder.Append, X0, X1
	021 Move X0, [X19+24]
	022 Compare X0, 0
	023 JumpIfNotEqual {15}
	024 Call 0x1C17F20
	025 Move X1, X21
	026 Move X2, X20
	027 Move X3, X31
	028 Call StringBuilder.AppendFormat, X0, X1, X2
	029 Move X0, [X19+24]
	030 Compare X0, 0
	031 JumpIfEqual {24}
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call StringBuilder.AppendLine, X0
	039 Return 

Method: System.String GetLog(System.String logName)

Disassembly:
	0x0399855C LDR X3, [X8]
	0x03998560 BL 0x25C81A4
	0x03998564 LDR X8, [X19]
	0x03998568 MOV X0, X19
	0x0399856C LDP X20, X19, [X31 + 0x10]
	0x03998570 MOV X1, X31
	0x03998574 LDP X3, X2, [X8 + 0x178]
	0x03998578 LDP X30, X21, [X31], #0x20
	0x0399857C BR X3
	0x03998580 LDR X8, [X19]
	0x03998584 MOV X0, X19
	0x03998588 LDP X9, X1, [X8 + 0x188]
	0x0399858C BLR X9
	0x03998590 MOV X19, X0
	0x03998594 ADRP X0, 0x7B8000
	0x03998598 LDR X0, [X0 + 0xEF0]
	0x0399859C BL 0x1C16D08
	0x039985A0 MOV X20, X0
	0x039985A4 ADRP X0, 0x7B8000
	0x039985A8 LDR X0, [X0 + 0xEF8]
	0x039985AC BL 0x1C16D08
	0x039985B0 MOV X2, X0
	0x039985B4 MOV X0, X20
	0x039985B8 MOV X1, X19
	0x039985BC MOV X3, X31
	0x039985C0 BL 0x32274B8
	0x039985C4 MOV X19, X0
	0x039985C8 ADRP X0, 0x75B000
	0x039985CC LDR X0, [X0 + 0x5B0]
	0x039985D0 BL 0x1C16D08
	0x039985D4 BL 0x1C16F10
	0x039985D8 MOV X1, X19
	0x039985DC MOV X2, X31
	0x039985E0 MOV X20, X0
	0x039985E4 BL 0x337DF1C
	0x039985E8 ADRP X0, 0x7B8000
	0x039985EC LDR X0, [X0 + 0xF00]
	0x039985F0 BL 0x1C16D08
	0x039985F4 MOV X1, X0
	0x039985F8 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA4A000
	007 Move W8, [X21+2777]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x7B9000
	015 Move X0, [X0+2816]
	016 Call 0x1C17CF4
	017 Move X0, 0x75C000
	018 Move X0, [X0+2440]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2777], W8
	022 Move [X31+8], X31
	023 Move X0, [X20+16]
	024 Compare X0, 0
	025 JumpIfEqual {52}
	026 Move X8, 0x7B9000
	027 Move X8, [X8+2816]
	028 Add X2, X31, 8
	029 Move X1, X19
	030 Move X3, [X8]
	031 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {43}
	036 Move X0, [X31+8]
	037 Compare X0, 0
	038 JumpIfEqual {52}
	039 Move X8, [X0]
	040 Move X9, [X8+360]
	041 Move X1, [X8+368]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X8, 0x75C000
	044 Move X8, [X8+2440]
	045 Move X0, [X8]
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X30, [X31+16]
	049 Move X21, [X31+24]
	050 Add X31, X31, 48
	051 Return X0
	052 Call 0x1C17F20

Method: System.String GetAllLogs()

Disassembly:
	0x0398D67C LDR X0, [X0 + 0x730]
	0x0398D680 BL 0x1C16CF4
	0x0398D684 MOVZ W8, 0x1
	0x0398D688 STRB W8, [X22 + 0xB17]
	0x0398D68C LDR X8, [X21 + 0x10]
	0x0398D690 CBZ X8, 0x398D748
	0x0398D694 LDR W9, [X8 + 0x18]
	0x0398D698 CMP W9, 0x1
	0x0398D69C B.LS 0x398D74C
	0x0398D6A0 LDR X8, [X8 + 0x28]
	0x0398D6A4 CBZ X8, 0x398D748
	0x0398D6A8 ADRP X9, 0x791000
	0x0398D6AC LDR X9, [X9 + 0x730]
	0x0398D6B0 LDR X21, [X8 + 0x10]
	0x0398D6B4 LDR X20, [X20]
	0x0398D6B8 LDR X0, [X9]
	0x0398D6BC LDR W8, [X0 + 0xE0]
	0x0398D6C0 CBNZ W8, 0x398D6C8
	0x0398D6C4 BL 0x1C16DFC
	0x0398D6C8 MOV X0, X20
	0x0398D6CC BL 0x398FDA8
	0x0398D6D0 CBZ X21, 0x398D748
	0x0398D6D4 ADRP X8, 0x78F000
	0x0398D6D8 LDR X8, [X8 + 0xA80]
	0x0398D6DC MOV W1, W0
	0x0398D6E0 MOV X0, X21
	0x0398D6E4 LDR X2, [X8]
	0x0398D6E8 BL 0x2B40178
	0x0398D6EC LDR X8, [X0]
	0x0398D6F0 CBZ X8, 0x398D748
	0x0398D6F4 ADRP X9, 0x7C3000
	0x0398D6F8 LDR X9, [X9 + 0xAD0]
	0x0398D6FC LDR X10, [X8]
	0x0398D700 LDR X9, [X9]
	0x0398D704 LDRB W12, [X10 + 0x130]
	0x0398D708 LDRB W11, [X9 + 0x130]
	0x0398D70C CMP W12, W11
	0x0398D710 B.CC 0x398D748
	0x0398D714 LDR X10, [X10 + 0xC8]
	0x0398D718 ADD X10, X10, X11, 0x3, LSL
	0x0398D71C LDUR X10, [X10 - 0x8]
	0x0398D720 CMP X10, X9
	0x0398D724 B.NE 0x398D748
	0x0398D728 LDR X9, [X8 + 0x40]
	0x0398D72C LDR V0, [X8 + 0x3]
	0x0398D730 LDP X22, X21, [X31 + 0x10]
	0x0398D734 STR X9, [X19 + 0x10]
	0x0398D738 STR V0, [X19]
	0x0398D73C LDP X20, X19, [X31 + 0x20]
	0x0398D740 LDR X30, [X31], #0x30
	0x0398D744 RET
	0x0398D748 BL 0x1C16F20
	0x0398D74C BL 0x1C16F28
	0x0398D750 SUB X31, X31, 0x30
	0x0398D754 STP X30, X19, [X31 + 0x20]
	0x0398D758 LDR X0, [X0 + 0x10]
	0x0398D75C CBZ X0, 0x398D788
	0x0398D760 MOV X19, X8
	0x0398D764 ADD X8, X31, 0x8
	0x0398D768 BL 0x398D63C
	0x0398D76C LDR X8, [X31 + 0x18]
	0x0398D770 LDUR V0, [X31 + 0x8]
	0x0398D774 STR X8, [X19 + 0x10]
	0x0398D778 STR V0, [X19]
	0x0398D77C LDP X30, X19, [X31 + 0x20]
	0x0398D780 ADD X31, X31, 0x30
	0x0398D784 RET
	0x0398D788 BL 0x1C16F20
	0x0398D78C STR X30, [X31 - 0x50]!
	0x0398D790 STP X26, X25, [X31 + 0x10]
	0x0398D794 STP X24, X23, [X31 + 0x20]
	0x0398D798 STP X22, X21, [X31 + 0x30]
	0x0398D79C STP X20, X19, [X31 + 0x40]
	0x0398D7A0 ADRP X22, 0xA54000
	0x0398D7A4 ADRP X21, 0x7C3000
	0x0398D7A8 LDRB W8, [X22 + 0xAA2]
	0x0398D7AC LDR X21, [X21 + 0xAD8]
	0x0398D7B0 MOV X20, X1
	0x0398D7B4 MOV X19, X0
	0x0398D7B8 TBNZ X8, 0x0, 0x398D80C
	0x0398D7BC ADRP X0, 0x7C3000
	0x0398D7C0 LDR X0, [X0 + 0xAE0]
	0x0398D7C4 BL 0x1C16CF4
	0x0398D7C8 ADRP X0, 0x7C3000
	0x0398D7CC LDR X0, [X0 + 0xAE8]
	0x0398D7D0 BL 0x1C16CF4
	0x0398D7D4 ADRP X0, 0x76D000
	0x0398D7D8 LDR X0, [X0 + 0x858]
	0x0398D7DC BL 0x1C16CF4
	0x0398D7E0 ADRP X0, 0x76A000
	0x0398D7E4 LDR X0, [X0 + 0xB70]
	0x0398D7E8 BL 0x1C16CF4
	0x0398D7EC ADRP X0, 0x767000
	0x0398D7F0 LDR X0, [X0 + 0xE30]
	0x0398D7F4 BL 0x1C16CF4
	0x0398D7F8 ADRP X0, 0x7C3000
	0x0398D7FC LDR X0, [X0 + 0xAD8]
	0x0398D800 BL 0x1C16CF4
	0x0398D804 MOVZ W8, 0x1
	0x0398D808 STRB W8, [X22 + 0xAA2]
	0x0398D80C LDR W8, [X20 + 0x8]
	0x0398D810 MOVZ W9, 0x1
	0x0398D814 LDR W1, [X19 + 0x90]
	0x0398D818 LDR X0, [X19 + 0x10]
	0x0398D81C STR W8, [X19 + 0x94]
	0x0398D820 LDR X8, [X20]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X20, 0xA55000
	008 Move W8, [X20+2778]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0x7C4000
	015 Move X0, [X0+2616]
	016 Call 0x1C17CF4
	017 Move X0, 0x7C4000
	018 Move X0, [X0+2624]
	019 Call 0x1C17CF4
	020 Move X0, 0x7C4000
	021 Move X0, [X0+2632]
	022 Call 0x1C17CF4
	023 Move X0, 0x7C4000
	024 Move X0, [X0+2640]
	025 Call 0x1C17CF4
	026 Move X0, 0x7C4000
	027 Move X0, [X0+2648]
	028 Call 0x1C17CF4
	029 Move X0, 0x767000
	030 Move X0, [X0+2440]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+2778], W8
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+32], X31
	036 Move [X31], V0
	037 Move [X31+8], V0
	038 Move X0, [X19+16]
	039 Compare X0, 0
	040 JumpIfEqual {89}
	041 Move X8, 0x767000
	042 Move X9, 0x7C4000
	043 Move X8, [X8+2440]
	044 Move X9, [X9+2616]
	045 Move X22, 0x7C4000
	046 Move X21, 0x7C4000
	047 Move X20, [X8]
	048 Move X1, [X9]
	049 Move X22, [X22+2632]
	050 Move X21, [X21+2624]
	051 Add X8, X31, 0
	052 Call Dictionary`2<Object, Object>.GetEnumerator, X0
	053 Move X1, [X22]
	054 Move X19, X20
	055 Add X0, X31, 0
	056 Call Enumerator<Object, Object>.MoveNext, X0
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {77}
	061 Move X20, [X31+24]
	062 Compare X20, 0
	063 JumpIfEqual {88}
	064 Move X0, X20
	065 Move X1, X31
	066 Call StringBuilder.AppendLine, X0
	067 Move X8, [X20]
	068 Move X9, [X8+360]
	069 Move X1, [X8+368]
	070 Move X0, X20
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X1, X0
	073 Move X0, X19
	074 Move X2, X31
	075 Call String.Concat, X0, X1
	076 Move X20, X0
	077 Move X1, [X21]
	078 Add X0, X31, 0
	079 Call Enumerator<Object, Object>.Dispose, X0
	080 Move X0, X19
	081 Move X20, [X31+80]
	082 Move X19, [X31+88]
	083 Move X22, [X31+64]
	084 Move X21, [X31+72]
	085 Move X30, [X31+48]
	086 Add X31, X31, 96
	087 Return X0
	088 Call 0x1C17F20
	089 Call 0x1C17F20
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Call 0x3EB2AD0
	092 Move X8, [X0]
	093 Move [X31+56], X8
	094 Call 0x3EB2AE0
	095 Move X1, [X21]
	096 Add X0, X31, 0
	097 Call Enumerator<Object, Object>.Dispose, X0
	098 Move X0, [X31+56]
	099 Compare X0, 0
	100 JumpIfEqual {80}
	101 Call 0x1C17F18
	102 Move X19, X0
	103 Move [X31+56], X31
	104 Move X19, X0
	105 Move X1, [X21]
	106 Add X0, X31, 0
	107 Call Enumerator<Object, Object>.Dispose, X0
	108 Move X8, [X31+56]
	109 Compare X8, 0
	110 JumpIfNotEqual {113}
	111 Move X0, X19
	112 Call 0x1D2D690
	113 Move X0, [X31+56]
	114 Call 0x1C17F18
	115 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x0398CD38 LDR X9, [X8]
	0x0398CD3C LDR X1, [X10]
	0x0398CD40 LDRB W11, [X9 + 0x130]
	0x0398CD44 LDRB W10, [X1 + 0x130]
	0x0398CD48 CMP W11, W10
	0x0398CD4C B.CC 0x398CE10
	0x0398CD50 LDR X9, [X9 + 0xC8]
	0x0398CD54 ADD X9, X9, X10, 0x3, LSL
	0x0398CD58 LDUR X9, [X9 - 0x8]
	0x0398CD5C CMP X9, X1
	0x0398CD60 B.NE 0x398CE10
	0x0398CD64 STR X8, [X31]
	0x0398CD68 CBNZ X8, 0x398CDB4
	0x0398CD6C LDR X8, [X21 + 0x10]
	0x0398CD70 CBZ X8, 0x398CE08
	0x0398CD74 LDR W9, [X8 + 0x18]
	0x0398CD78 CBZ W9, 0x398CE0C
	0x0398CD7C LDR X0, [X8 + 0x20]
	0x0398CD80 CBZ X0, 0x398CE08
	0x0398CD84 ADRP X8, 0x7C4000
	0x0398CD88 LDR X8, [X8 + 0xA60]
	0x0398CD8C ADD X1, X31, 0x0
	0x0398CD90 MOV W2, W31
	0x0398CD94 LDR X3, [X8]
	0x0398CD98 BL 0x22B7EA8
	0x0398CD9C LDR W8, [X23 + 0x18]
	0x0398CDA0 ADD W8, W8, 0x1
	0x0398CDA4 STR W8, [X23 + 0x18]
	0x0398CDA8 LDR X8, [X31]
	0x0398CDAC CBZ X8, 0x398CE08
	0x0398CDB0 MOV W22, W0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA56000
	007 Move X22, 0x7C5000
	008 Move X20, 0x7C5000
	009 Move W8, [X21+2779]
	010 Move X22, [X22+2464]
	011 Move X20, [X20+2472]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x7C5000
	018 Move X0, [X0+2472]
	019 Call 0x1C17CF4
	020 Move X0, 0x7C5000
	021 Move X0, [X0+2464]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2779], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call Dictionary`2<Object, Object>..ctor, X0
	030 Move [X19+16], X20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call Object..ctor, X0
	039 Return 

