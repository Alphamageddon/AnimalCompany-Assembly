Type: UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph/CompiledResourceInfo

Method: System.Void Reset()

Disassembly:
	0x039901AC LDR X2, [X24]
	0x039901B0 BL 0x2B4260C
	0x039901B4 LDR W9, [X0 + 0x18]
	0x039901B8 MOV X8, X0
	0x039901BC SUBS W9, W9, 0x1
	0x039901C0 STR W9, [X0 + 0x18]
	0x039901C4 B.NE 0x3990190
	0x039901C8 LDRB W9, [X8 + 0x1E]
	0x039901CC CBNZ W9, 0x3990190
	0x039901D0 LDR X9, [X8]
	0x039901D4 CBZ X9, 0x3990364
	0x039901D8 LDRB W10, [X9 + 0x29]
	0x039901DC CBZ W10, 0x3990190
	0x039901E0 MOVZ W10, 0x1
	0x039901E4 STRB W10, [X8 + 0x1C]
	0x039901E8 LDR X8, [X9 + 0x50]
	0x039901EC CBZ X8, 0x3990374
	0x039901F0 LDR W9, [X8 + 0x18]
	0x039901F4 LDR X10, [X31 + 0x10]
	0x039901F8 CMP W10, W9
	0x039901FC B.CS 0x399036C
	0x03990200 ADD X8, X8, X23, 0x3, LSL
	0x03990204 LDR X0, [X8 + 0x20]
	0x03990208 CBZ X0, 0x399037C
	0x0399020C ADRP X8, 0x7C0000
	0x03990210 LDR X8, [X8 + 0xC10]
	0x03990214 LDR X1, [X8]
	0x03990218 ADD X8, X31, 0x18
	0x0399021C BL 0x304A5A4
	0x03990220 LDUR V0, [X31 + 0x18]
	0x03990224 LDR X8, [X31 + 0x28]
	0x03990228 STR V0, [X31 + 0x3]
	0x0399022C STR X8, [X31 + 0x40]
	0x03990230 LDR X1, [X28]
	0x03990234 ADD X0, X31, 0x30
	0x03990238 BL 0x2BC8CD4
	0x0399023C TBZ X0, 0x0, 0x39902B0
	0x03990240 LDR X0, [X29]
	0x03990244 LDR X21, [X31 + 0x40]
	0x03990248 LDR W8, [X0 + 0xE0]
	0x0399024C CBNZ W8, 0x3990254
	0x03990250 BL 0x1C16DFC
	0x03990254 MOV X0, X21
	0x03990258 BL 0x398FDA8
	0x0399025C MOV W1, W0
	0x03990260 LDR X2, [X26]
	0x03990264 MOV X0, X20
	0x03990268 BL 0x2B42FB4
	0x0399026C LDR W8, [X0 + 0x10]
	0x03990270 SUBS W8, W8, 0x1
	0x03990274 STR W8, [X0 + 0x10]
	0x03990278 B.NE 0x3990230
	0x0399027C LDR X0, [X29]
	0x03990280 LDR X22, [X19 + 0x88]
	0x03990284 LDR W8, [X0 + 0xE0]
	0x03990288 CBNZ W8, 0x3990290

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xA52000
	006 Move W8, [X20+2769]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x76B000
	013 Move X0, [X0+2136]
	014 Call 0x1C17CF4
	015 Move X0, 0x768000
	016 Move X0, [X0+2928]
	017 Call 0x1C17CF4
	018 Move X0, 0x765000
	019 Move X0, [X0+3632]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2769], W8
	023 Move X21, [X19]
	024 Compare X21, 0
	025 JumpIfNotEqual {36}
	026 Move X8, 0x765000
	027 Move X8, [X8+3632]
	028 Move X0, [X8]
	029 Call 0x1C17F10
	030 Move X8, 0x768000
	031 Move X8, [X8+2928]
	032 Move X21, X0
	033 Move X1, [X8]
	034 Call List`1<Int32>..ctor, X0
	035 Move [X19], X21
	036 Move X20, [X19+8]
	037 Compare X20, 0
	038 JumpIfNotEqual {50}
	039 Move X8, 0x765000
	040 Move X8, [X8+3632]
	041 Move X0, [X8]
	042 Call 0x1C17F10
	043 Move X8, 0x768000
	044 Move X8, [X8+2928]
	045 Move X20, X0
	046 Move X1, [X8]
	047 Call List`1<Int32>..ctor, X0
	048 Move X21, [X19]
	049 Move [X19+8], X20
	050 Compare X21, 0
	051 JumpIfEqual {69}
	052 Move W8, [X21+28]
	053 Add W8, W8, 1
	054 Move [X21+24], W31
	055 Move [X21+28], W8
	056 Compare X20, 0
	057 JumpIfEqual {69}
	058 Move W8, [X20+28]
	059 Add W8, W8, 1
	060 Move [X20+24], W31
	061 Move [X20+28], W8
	062 Move [X19+16], W31
	063 Move [X19+20], W31
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Move X21, [X31+40]
	068 Return 
	069 Call 0x1C17F20

