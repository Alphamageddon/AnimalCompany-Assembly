Type: UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphObjectPool/SharedObjectPool`1

Method: T Get()

Disassembly:
	0x025E6A80 ADD X9, X8, 0x135
	0x025E6A84 LDRH W9, [X9]
	0x025E6A88 TBNZ X9, 0x0, 0x25E6AA0
	0x025E6A8C MOV X0, X8
	0x025E6A90 BL 0x1C5C684
	0x025E6A94 LDR X8, [X20 + 0x20]
	0x025E6A98 ADD X9, X8, 0x135
	0x025E6A9C LDRH W9, [X9]
	0x025E6AA0 LDR W10, [X19 + 0x4]
	0x025E6AA4 ADRP X19, 0x1B37000
	0x025E6AA8 LDR X19, [X19 + 0x278]
	0x025E6AAC STR W10, [X31 + 0x8]
	0x025E6AB0 TBNZ X9, 0x0, 0x25E6AC0
	0x025E6AB4 MOV X0, X8

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {18}
	005 Move X8, [X1+32]
	006 Move W9, [X0+24]
	007 Move X8, [X8+192]
	008 Compare W9, 0
	009 JumpIfEqual {14}
	010 Move X1, [X8+24]
	011 Move X30, [X31+16]
	012 Call Stack`1<Object>.Pop, X0
	013 Return X0
	014 Move X0, [X8+40]
	015 Move X30, [X31+16]
	016 Call Activator.CreateInstance
	017 Return X0
	018 Call 0x1C17F20

Method: System.Void Release(T value)

Disassembly:
	0x025E6AB8 BL 0x1C5C684
	0x025E6ABC MOV X8, X0
	0x025E6AC0 LDR X8, [X8 + 0xC0]
	0x025E6AC4 ADD X0, X31, 0x8
	0x025E6AC8 LDR X1, [X8 + 0x38]
	0x025E6ACC BL 0x337B6E0
	0x025E6AD0 LDR X8, [X19]
	0x025E6AD4 MOV X2, X0
	0x025E6AD8 MOV X1, X21

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X2+32]
	006 Move X8, [X8+192]
	007 Move X2, [X8+48]
	008 Move X30, [X31+16]
	009 Call Stack`1<Object>.Push, X0, X1
	010 Return 
	011 Call 0x1C17F20

Method: UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphObjectPool/SharedObjectPool`1<T> AllocatePool()

Disassembly:
	0x025E6ADC MOV X3, X31
	0x025E6AE0 MOV X0, X8
	0x025E6AE4 BL 0x3227BD4
	0x025E6AE8 LDP X20, X19, [X31 + 0x20]
	0x025E6AEC LDP X30, X21, [X31 + 0x10]
	0x025E6AF0 ADD X31, X31, 0x30
	0x025E6AF4 RET
	0x025E6AF8 LDR X0, [X0]
	0x025E6AFC RET
	0x025E6B00 STR X1, [X0]
	0x025E6B04 RET
	0x025E6B08 LDR X0, [X0 + 0x8]
	0x025E6B0C RET
	0x025E6B10 STR X1, [X0 + 0x8]
	0x025E6B14 RET
	0x025E6B18 STP X1, X2, [X0]
	0x025E6B1C RET
	0x025E6B20 STR X30, [X31 - 0x30]!
	0x025E6B24 STP X22, X21, [X31 + 0x10]
	0x025E6B28 STP X20, X19, [X31 + 0x20]
	0x025E6B2C ADRP X21, 0x1DF3000
	0x025E6B30 LDRB W8, [X21 + 0xFBF]
	0x025E6B34 MOV X19, X1
	0x025E6B38 MOV X20, X0
	0x025E6B3C TBNZ X8, 0x0, 0x25E6B60
	0x025E6B40 ADRP X0, 0x1B35000
	0x025E6B44 LDR X0, [X0 + 0x600]
	0x025E6B48 BL 0x1C16CF4
	0x025E6B4C ADRP X0, 0x1B37000
	0x025E6B50 LDR X0, [X0 + 0x278]
	0x025E6B54 BL 0x1C16CF4
	0x025E6B58 MOVZ W8, 0x1
	0x025E6B5C STRB W8, [X21 + 0xFBF]
	0x025E6B60 STR X31, [X31 + 0x8]
	0x025E6B64 LDR X0, [X19 + 0x20]
	0x025E6B68 LDRB W8, [X0 + 0x135]
	0x025E6B6C TBNZ X8, 0x0, 0x25E6B74
	0x025E6B70 BL 0x1C5C684
	0x025E6B74 LDR X0, [X20]
	0x025E6B78 CBZ X0, 0x25E6C10
	0x025E6B7C LDR X8, [X0]
	0x025E6B80 ADRP X22, 0x1B35000
	0x025E6B84 LDP X9, X1, [X8 + 0x168]
	0x025E6B88 LDR X22, [X22 + 0x600]
	0x025E6B8C BLR X9
	0x025E6B90 LDR X8, [X19 + 0x20]
	0x025E6B94 MOV X21, X0
	0x025E6B98 LDRB W9, [X8 + 0x135]
	0x025E6B9C TBNZ X9, 0x0, 0x25E6BA8
	0x025E6BA0 MOV X0, X8
	0x025E6BA4 BL 0x1C5C684
	0x025E6BA8 LDR X8, [X20 + 0x8]
	0x025E6BAC LDR X0, [X22]
	0x025E6BB0 STR X8, [X31 + 0x8]
	0x025E6BB4 LDR W8, [X0 + 0xE0]
	0x025E6BB8 CBNZ W8, 0x25E6BC0
	0x025E6BBC BL 0x1C16DFC
	0x025E6BC0 LDR X0, [X19 + 0x20]
	0x025E6BC4 ADRP X19, 0x1B37000
	0x025E6BC8 LDRB W8, [X0 + 0x135]
	0x025E6BCC LDR X19, [X19 + 0x278]
	0x025E6BD0 TBNZ X8, 0x0, 0x25E6BD8
	0x025E6BD4 BL 0x1C5C684
	0x025E6BD8 LDR X8, [X0 + 0xC0]
	0x025E6BDC ADD X0, X31, 0x8
	0x025E6BE0 LDR X1, [X8 + 0x38]
	0x025E6BE4 BL 0x38FDC58
	0x025E6BE8 LDR X8, [X19]
	0x025E6BEC MOV X2, X0
	0x025E6BF0 MOV X1, X21
	0x025E6BF4 MOV X3, X31
	0x025E6BF8 MOV X0, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1DF4000
	005 Move W8, [X20+4026]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x1B38000
	012 Move X0, [X0+608]
	013 Call 0x1C17CF4
	014 Move X0, 0x1B38000
	015 Move X0, [X0+616]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+4026], W8
	019 Move X0, [X19+32]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Move X8, [X0+192]
	027 Move X0, [X8]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Move X20, 0x1B38000
	035 Move X20, [X20+616]
	036 Call 0x1C17F10
	037 Move X8, [X19+32]
	038 Move X19, X0
	039 Move W9, [X8+309]
	040 Move TEMP, X9
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {47}
	044 Move X0, X8
	045 Call 0x1C5D684
	046 Move X8, X0
	047 Move X8, [X8+192]
	048 Move X0, X19
	049 Move X1, [X8+56]
	050 Call 0x25E6CB8, X0
	051 Move X0, [X20]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X20]
	057 Move X8, [X0+184]
	058 Move X0, [X8]
	059 Compare X0, 0
	060 JumpIfEqual {87}
	061 Move X9, 0x1B38000
	062 Move X9, [X9+608]
	063 Move W10, [X0+28]
	064 Move X8, [X0+16]
	065 Move X9, [X9]
	066 Add W10, W10, 1
	067 Move [X0+28], W10
	068 Compare X8, 0
	069 JumpIfEqual {87}
	070 NotImplemented "Instruction LDRSW not yet implemented."
	071 Move W11, [X8+24]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Add W9, W10, 1
	074 Add X8, X8, X10
	075 Move [X0+24], W9
	076 Move [X8+32], X19
	077 Move X8, [X9+32]
	078 Move X1, X19
	079 Move X8, [X8+192]
	080 Move X2, [X8+112]
	081 Call List`1<Object>.AddWithResize, X0, X1
	082 Move X0, X19
	083 Move X20, [X31+16]
	084 Move X19, [X31+24]
	085 Move X30, [X31+32]
	086 Return X0
	087 Call 0x1C17F20

Method: System.Void Clear()

Disassembly:
	0x025E6BFC BL 0x3227BD4
	0x025E6C00 LDP X20, X19, [X31 + 0x20]
	0x025E6C04 LDP X22, X21, [X31 + 0x10]
	0x025E6C08 LDR X30, [X31], #0x30
	0x025E6C0C RET
	0x025E6C10 BL 0x1C16F20
	0x025E6C14 LDR X0, [X0]
	0x025E6C18 RET
	0x025E6C1C STR X1, [X0]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X1+32]
	006 Move X8, [X8+192]
	007 Move X1, [X8+64]
	008 Move X30, [X31+16]
	009 Call Stack`1<Object>.Clear, X0
	010 Return 
	011 Call 0x1C17F20

Method: UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphObjectPool/SharedObjectPool`1<T> get_sharedPool()

Disassembly:
	0x025E6C20 RET
	0x025E6C24 LDR W0, [X0 + 0x8]
	0x025E6C28 RET
	0x025E6C2C STR W1, [X0 + 0x8]
	0x025E6C30 RET
	0x025E6C34 STR X1, [X0]
	0x025E6C38 STR W2, [X0 + 0x8]
	0x025E6C3C RET
	0x025E6C40 SUB X31, X31, 0x30
	0x025E6C44 STP X30, X21, [X31 + 0x10]
	0x025E6C48 STP X20, X19, [X31 + 0x20]
	0x025E6C4C ADRP X20, 0x1DF3000
	0x025E6C50 LDRB W8, [X20 + 0xFC0]
	0x025E6C54 MOV X21, X1
	0x025E6C58 MOV X19, X0
	0x025E6C5C TBNZ X8, 0x0, 0x25E6C74
	0x025E6C60 ADRP X0, 0x1B37000
	0x025E6C64 LDR X0, [X0 + 0x278]
	0x025E6C68 BL 0x1C16CF4
	0x025E6C6C MOVZ W8, 0x1
	0x025E6C70 STRB W8, [X20 + 0xFC0]
	0x025E6C74 LDR X0, [X21 + 0x20]
	0x025E6C78 LDRB W8, [X0 + 0x135]
	0x025E6C7C TBNZ X8, 0x0, 0x25E6C84
	0x025E6C80 BL 0x1C5C684
	0x025E6C84 LDR X0, [X19]
	0x025E6C88 CBZ X0, 0x25E6D18
	0x025E6C8C LDR X8, [X0]
	0x025E6C90 LDP X9, X1, [X8 + 0x168]
	0x025E6C94 BLR X9
	0x025E6C98 LDR X8, [X21 + 0x20]
	0x025E6C9C MOV X20, X0
	0x025E6CA0 ADD X9, X8, 0x135
	0x025E6CA4 LDRH W9, [X9]
	0x025E6CA8 TBNZ X9, 0x0, 0x25E6CC0
	0x025E6CAC MOV X0, X8
	0x025E6CB0 BL 0x1C5C684
	0x025E6CB4 LDR X8, [X21 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move W8, [X0+309]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8+80]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, [X19+32]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move X8, [X0+192]
	032 Move X0, [X8+80]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Move X8, [X0+184]
	040 Move X20, [X8]
	041 Compare X20, 0
	042 JumpIfEqual {58}
	043 Move X0, [X19+32]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move X8, [X0+192]
	051 Move X0, X20
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X1, [X8+88]
	055 Move X30, [X31+32]
	056 Call 0x2EE9EE4, X0
	057 Return X0
	058 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x025E6CB8 ADD X9, X8, 0x135
	0x025E6CBC LDRH W9, [X9]
	0x025E6CC0 LDR W10, [X19 + 0x8]
	0x025E6CC4 ADRP X19, 0x1B37000
	0x025E6CC8 LDR X19, [X19 + 0x278]
	0x025E6CCC STR W10, [X31 + 0xC]
	0x025E6CD0 TBNZ X9, 0x0, 0x25E6CE0
	0x025E6CD4 MOV X0, X8
	0x025E6CD8 BL 0x1C5C684
	0x025E6CDC MOV X8, X0
	0x025E6CE0 LDR X8, [X8 + 0xC0]
	0x025E6CE4 ADD X0, X31, 0xC
	0x025E6CE8 LDR X1, [X8 + 0x38]
	0x025E6CEC BL 0x337B6E0
	0x025E6CF0 LDR X8, [X19]
	0x025E6CF4 MOV X2, X0
	0x025E6CF8 MOV X1, X20
	0x025E6CFC MOV X3, X31
	0x025E6D00 MOV X0, X8
	0x025E6D04 BL 0x3227BD4
	0x025E6D08 LDP X20, X19, [X31 + 0x20]
	0x025E6D0C LDP X30, X21, [X31 + 0x10]
	0x025E6D10 ADD X31, X31, 0x30
	0x025E6D14 RET
	0x025E6D18 BL 0x1C16F20
	0x025E6D1C LDR X0, [X0]
	0x025E6D20 RET
	0x025E6D24 STR X1, [X0]
	0x025E6D28 RET
	0x025E6D2C LDR X0, [X0 + 0x8]
	0x025E6D30 RET
	0x025E6D34 STR X1, [X0 + 0x8]
	0x025E6D38 RET
	0x025E6D3C STP X1, X2, [X0]
	0x025E6D40 RET
	0x025E6D44 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1DF4000
	006 Move W8, [X21+4027]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x1B38000
	014 Move X0, [X0+616]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+4027], W8
	018 Move X8, [X20+32]
	019 Move X21, 0x1B38000
	020 Move X8, [X8+192]
	021 Move X0, [X8+8]
	022 Move W8, [X0+309]
	023 Move X21, [X21+616]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {29}
	028 Call 0x1C5D684
	029 Call 0x1C17F10
	030 Move X8, [X20+32]
	031 Move X20, X0
	032 Move X8, [X8+192]
	033 Move X1, [X8+96]
	034 Call Stack`1<Object>..ctor, X0
	035 Move [X19+16], X20
	036 Move X0, [X21]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X1, X31
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Call SharedObjectPoolBase..ctor, X0
	048 Return 

Method: System.Void .cctor()

Disassembly:
	0x025E6D48 STP X20, X19, [X31 + 0x10]
	0x025E6D4C ADRP X21, 0x1DF3000
	0x025E6D50 LDRB W8, [X21 + 0xFC1]
	0x025E6D54 MOV X20, X1
	0x025E6D58 MOV X19, X0
	0x025E6D5C TBNZ X8, 0x0, 0x25E6D74
	0x025E6D60 ADRP X0, 0x1B37000
	0x025E6D64 LDR X0, [X0 + 0x278]
	0x025E6D68 BL 0x1C16CF4
	0x025E6D6C MOVZ W8, 0x1
	0x025E6D70 STRB W8, [X21 + 0xFC1]
	0x025E6D74 LDR X0, [X20 + 0x20]
	0x025E6D78 LDRB W8, [X0 + 0x135]
	0x025E6D7C TBNZ X8, 0x0, 0x25E6D84
	0x025E6D80 BL 0x1C5C684
	0x025E6D84 LDR X0, [X19]
	0x025E6D88 CBZ X0, 0x25E6DEC
	0x025E6D8C LDR X8, [X0]
	0x025E6D90 LDP X9, X1, [X8 + 0x168]
	0x025E6D94 BLR X9
	0x025E6D98 LDR X8, [X20 + 0x20]
	0x025E6D9C MOV X20, X0
	0x025E6DA0 LDRB W9, [X8 + 0x135]
	0x025E6DA4 TBNZ X9, 0x0, 0x25E6DB0
	0x025E6DA8 MOV X0, X8
	0x025E6DAC BL 0x1C5C684
	0x025E6DB0 LDR X0, [X19 + 0x8]
	0x025E6DB4 CBZ X0, 0x25E6DEC
	0x025E6DB8 LDR X8, [X0]
	0x025E6DBC ADRP X19, 0x1B37000
	0x025E6DC0 LDP X9, X1, [X8 + 0x168]
	0x025E6DC4 LDR X19, [X19 + 0x278]
	0x025E6DC8 BLR X9
	0x025E6DCC LDR X8, [X19]
	0x025E6DD0 MOV X1, X20
	0x025E6DD4 LDP X20, X19, [X31 + 0x10]
	0x025E6DD8 MOV X2, X0
	0x025E6DDC MOV X0, X8
	0x025E6DE0 MOV X3, X31
	0x025E6DE4 LDP X30, X21, [X31], #0x20
	0x025E6DE8 B 0x3227BD4
	0x025E6DEC BL 0x1C16F20
	0x025E6DF0 LDR X0, [X0]
	0x025E6DF4 RET
	0x025E6DF8 STR X1, [X0]
	0x025E6DFC RET
	0x025E6E00 LDP S0, S1, [X0 + 0x8]
	0x025E6E04 LDR V2, [X0 + 0x10]
	0x025E6E08 RET
	0x025E6E0C STP S0, S1, [X0 + 0x8]
	0x025E6E10 STR S2, [X0 + 0x10]
	0x025E6E14 RET
	0x025E6E18 STR X1, [X0]
	0x025E6E1C STP S0, S1, [X0 + 0x8]
	0x025E6E20 STR S2, [X0 + 0x10]
	0x025E6E24 RET
	0x025E6E28 SUB X31, X31, 0x30
	0x025E6E2C STP X30, X21, [X31 + 0x10]
	0x025E6E30 STP X20, X19, [X31 + 0x20]
	0x025E6E34 ADRP X21, 0x1DF3000
	0x025E6E38 LDRB W8, [X21 + 0xFC2]
	0x025E6E3C MOV X20, X1
	0x025E6E40 MOV X19, X0
	0x025E6E44 TBNZ X8, 0x0, 0x25E6E5C
	0x025E6E48 ADRP X0, 0x1B37000
	0x025E6E4C LDR X0, [X0 + 0x278]
	0x025E6E50 BL 0x1C16CF4
	0x025E6E54 MOVZ W8, 0x1
	0x025E6E58 STRB W8, [X21 + 0xFC2]
	0x025E6E5C STR W31, [X31 + 0x8]
	0x025E6E60 STR X31, [X31]
	0x025E6E64 LDR X0, [X20 + 0x20]
	0x025E6E68 LDRB W8, [X0 + 0x135]
	0x025E6E6C TBNZ X8, 0x0, 0x25E6E74
	0x025E6E70 BL 0x1C5C684
	0x025E6E74 LDR X0, [X19]
	0x025E6E78 CBZ X0, 0x25E6F10
	0x025E6E7C LDR X8, [X0]
	0x025E6E80 LDP X9, X1, [X8 + 0x168]
	0x025E6E84 BLR X9
	0x025E6E88 LDR X8, [X20 + 0x20]
	0x025E6E8C MOV X21, X0
	0x025E6E90 ADD X9, X8, 0x135
	0x025E6E94 LDRH W9, [X9]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+32]
	007 Move W8, [X0+309]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {13}
	012 Call 0x1C5D684
	013 Move X8, [X0+192]
	014 Move X0, [X8+112]
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Call 0x1C17F10
	022 Move X8, [X19+32]
	023 Move X20, X0
	024 Add X9, X8, 309
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move TEMP, X9
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {35}
	030 Move X0, X8
	031 Call 0x1C5D684
	032 Move X8, [X19+32]
	033 Add X9, X8, 309
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Move X0, X8
	036 Move X10, [X0+192]
	037 Move X21, [X10+104]
	038 Move TEMP, X9
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {45}
	042 Move X0, X8
	043 Call 0x1C5D684
	044 Move X8, X0
	045 Move X8, [X8+192]
	046 Move X0, X20
	047 Move X1, X31
	048 Move X2, X21
	049 Move X3, [X8+120]
	050 Call Func`1<Object>..ctor, X0, X1, X2
	051 Move X0, [X19+32]
	052 Move W8, [X0+309]
	053 Move TEMP, X8
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {58}
	057 Call 0x1C5D684
	058 Move X8, [X0+192]
	059 Move X0, [X8+72]
	060 Move W8, [X0+309]
	061 Move TEMP, X8
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {66}
	065 Call 0x1C5D684
	066 Call 0x1C17F10
	067 Move X8, [X19+32]
	068 Move X21, X0
	069 Move W9, [X8+309]
	070 Move TEMP, X9
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {77}
	074 Move X0, X8
	075 Call 0x1C5D684
	076 Move X8, X0
	077 Move X8, [X8+192]
	078 Move X0, X21
	079 Move X1, X20
	080 Move X2, [X8+128]
	081 Call 0x2EE97EC, X0, X1
	082 Move X0, [X19+32]
	083 Move W8, [X0+309]
	084 Move TEMP, X8
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfEqual {89}
	088 Call 0x1C5D684
	089 Move X8, [X0+192]
	090 Move X0, [X8+80]
	091 Move W8, [X0+309]
	092 Move TEMP, X8
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {97}
	096 Call 0x1C5D684
	097 Move X8, [X0+184]
	098 Move [X8], X21
	099 Move X0, [X19+32]
	100 Move W8, [X0+309]
	101 Move TEMP, X8
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {106}
	105 Call 0x1C5D684
	106 Move X8, [X0+192]
	107 Move X0, [X8+80]
	108 Move W8, [X0+309]
	109 Move TEMP, X8
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {119}
	113 Move X20, [X31+16]
	114 Move X19, [X31+24]
	115 Move X30, [X31+32]
	116 Move X21, [X31+40]
	117 Call 0x1C5D684
	118 Return 
	119 Move X20, [X31+16]
	120 Move X19, [X31+24]
	121 Move X30, [X31+32]
	122 Move X21, [X31+40]
	123 Return 

