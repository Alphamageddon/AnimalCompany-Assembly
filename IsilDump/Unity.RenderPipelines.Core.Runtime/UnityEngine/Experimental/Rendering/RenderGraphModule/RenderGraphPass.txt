Type: UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphPass

Method: UnityEngine.Experimental.Rendering.RenderGraphModule.RenderFunc`1<PassData> GetExecuteDelegate()

Disassembly:
	0x02242AC0 LDR X8, [X3 + 0x38]
	0x02242AC4 MOV X20, X3
	0x02242AC8 MOV X19, X2
	0x02242ACC MOV X21, X1
	0x02242AD0 MOV X22, X0
	0x02242AD4 CBNZ X8, 0x2242AF4
	0x02242AD8 ADRP X0, 0x1EDA000
	0x02242ADC LDR X0, [X0 + 0x4C0]
	0x02242AE0 BL 0x1C16CF4
	0x02242AE4 LDR X8, [X20 + 0x38]
	0x02242AE8 CBNZ X8, 0x2242AF4
	0x02242AEC MOV X0, X20
	0x02242AF0 BL 0x1C5C6E0
	0x02242AF4 ADRP X8, 0x1EDA000
	0x02242AF8 LDR X8, [X8 + 0x4C0]
	0x02242AFC LDR X0, [X8]
	0x02242B00 BL 0x1C16F10
	0x02242B04 MOV X1, X31
	0x02242B08 MOV X23, X0
	0x02242B0C BL 0x358B55C
	0x02242B10 CBZ X23, 0x2242B40
	0x02242B14 STR X22, [X23 + 0x10]
	0x02242B18 STR X21, [X23 + 0x28]
	0x02242B1C LDR X8, [X20 + 0x38]
	0x02242B20 MOV X1, X19
	0x02242B24 LDP X20, X19, [X31 + 0x20]
	0x02242B28 LDP X22, X21, [X31 + 0x10]
	0x02242B2C LDR X2, [X8 + 0x8]
	0x02242B30 MOV X0, X23
	0x02242B34 LDR X3, [X2]
	0x02242B38 LDP X30, X23, [X31], #0x30
	0x02242B3C BR X3
	0x02242B40 BL 0x1C16F20
	0x02242B44 STR X30, [X31 - 0x30]!
	0x02242B48 STP X22, X21, [X31 + 0x10]
	0x02242B4C STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X20, X1
	006 Move X19, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {12}
	009 Move X0, X20
	010 Call 0x1C5D6E0
	011 Move X8, [X20+56]
	012 Move X1, [X8]
	013 Move W8, [X1+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {21}
	018 Move X0, X1
	019 Call 0x1C5D684
	020 Move X1, X0
	021 Compare X19, 0
	022 JumpIfEqual {44}
	023 Move X8, [X19]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X8, [X20+56]
	026 Move X1, [X8]
	027 Move W8, [X1+309]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {35}
	032 Move X0, X1
	033 Call 0x1C5D684
	034 Move X1, X0
	035 Move X8, [X19]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X0, [X19+120]
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return X0
	042 Move X0, X19
	043 Call 0x1C181E0
	044 Call 0x1C17F20

Method: System.Void Execute(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphContext renderGraphContext)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void Release(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphObjectPool pool)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean HasRenderFunc()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.String get_name()

Disassembly:
	0x03998918 TBNZ X8, 0x0, 0x3998920
	0x0399891C BL 0x1C5C684

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_name(System.String value)

Disassembly:
	0x03998920 LDR W8, [X0 + 0xE0]
	0x03998924 CBNZ W8, 0x399892C

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Int32 get_index()

Disassembly:
	0x03998928 BL 0x1C16DFC
	0x0399892C LDR X8, [X21 + 0x38]

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void set_index(System.Int32 value)

Disassembly:
	0x03998930 LDR X0, [X8 + 0x10]
	0x03998934 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X0+24], W1
	002 Return 

Method: UnityEngine.Rendering.ProfilingSampler get_customSampler()

Disassembly:
	0x03998938 TBNZ X8, 0x0, 0x3998940
	0x0399893C BL 0x1C5C684

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_customSampler(UnityEngine.Rendering.ProfilingSampler value)

Disassembly:
	0x03998940 CBZ X19, 0x3998964
	0x03998944 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Boolean get_enableAsyncCompute()

Disassembly:
	0x03998948 MOV X0, X19
	0x0399894C MOV X1, X20

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_enableAsyncCompute(System.Boolean value)

Disassembly:
	0x03998950 LDP X20, X19, [X31 + 0x20]
	0x03998954 LDR X2, [X8]
	0x03998958 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+40], W8
	003 Return 

Method: System.Boolean get_allowPassCulling()

Disassembly:
	0x0399895C LDP X30, X23, [X31], #0x30
	0x03998960 B 0x39904A0

ISIL:
	001 Move W0, [X0+41]
	002 Return X0

Method: System.Void set_allowPassCulling(System.Boolean value)

Disassembly:
	0x03998964 BL 0x1C16F20
	0x03998968 STP X30, X21, [X31 - 0x20]!
	0x0399896C STP X20, X19, [X31 + 0x10]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+41], W8
	003 Return 

Method: UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle get_depthBuffer()

Disassembly:
	0x03998970 ADRP X20, 0xA49000
	0x03998974 ADRP X21, 0x7B8000

ISIL:
	001 NotImplemented "Instruction LDUR not yet implemented."
	002 Return X0

Method: System.Void set_depthBuffer(UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle value)

Disassembly:
	0x03998978 LDRB W8, [X20 + 0xAF3]
	0x0399897C LDR X21, [X21 + 0xF30]

ISIL:
	001 Move [X0+44], X1
	002 Return 

Method: UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle[] get_colorBuffers()

Disassembly:
	0x03998980 MOV X19, X0
	0x03998984 TBNZ X8, 0x0, 0x399899C

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_colorBuffers(UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle[] value)

Disassembly:
	0x03998988 ADRP X0, 0x7B8000
	0x0399898C LDR X0, [X0 + 0xF30]

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.Int32 get_colorBufferMaxIndex()

Disassembly:
	0x03998990 BL 0x1C16CF4
	0x03998994 MOVZ W8, 0x1

ISIL:
	001 Move W0, [X0+64]
	002 Return X0

Method: System.Void set_colorBufferMaxIndex(System.Int32 value)

Disassembly:
	0x03998998 STRB W8, [X20 + 0xAF3]
	0x0399899C LDR X1, [X21]

ISIL:
	001 Move [X0+64], W1
	002 Return 

Method: System.Int32 get_refCount()

Disassembly:
	0x039989A0 MOV X0, X19
	0x039989A4 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move W0, [X0+68]
	002 Return X0

Method: System.Void set_refCount(System.Int32 value)

Disassembly:
	0x039989A8 LDP X30, X21, [X31], #0x20
	0x039989AC B 0x25C8E94

ISIL:
	001 Move [X0+68], W1
	002 Return 

Method: System.Boolean get_generateDebugData()

Disassembly:
	0x039989B0 CBZ X1, 0x39989C0
	0x039989B4 MOV X0, X1

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: System.Void set_generateDebugData(System.Boolean value)

Disassembly:
	0x039989B8 MOV X1, X31
	0x039989BC B 0x3C3AC48
	0x039989C0 STR X30, [X31 - 0x10]!

ISIL:
	001 And W8, W1, 1
	002 Move [X0+72], W8
	003 Return 

Method: System.Boolean get_allowRendererListCulling()

Disassembly:
	0x039989C4 BL 0x1C16F20
	0x039989C8 STR X30, [X31 - 0x20]!

ISIL:
	001 Move W0, [X0+73]
	002 Return X0

Method: System.Void set_allowRendererListCulling(System.Boolean value)

Disassembly:
	0x039989CC STP X20, X19, [X31 + 0x10]
	0x039989D0 ADRP X19, 0xA49000
	0x039989D4 ADRP X20, 0x7B8000

ISIL:
	001 And W8, W1, 1
	002 Move [X0+73], W8
	003 Return 

Method: System.Void .ctor()

Disassembly:
	0x039989D8 LDRB W8, [X19 + 0xAF4]
	0x039989DC LDR X20, [X20 + 0xF38]
	0x039989E0 TBNZ X8, 0x0, 0x39989F8
	0x039989E4 ADRP X0, 0x7B8000
	0x039989E8 LDR X0, [X0 + 0xF38]
	0x039989EC BL 0x1C16CF4
	0x039989F0 MOVZ W8, 0x1
	0x039989F4 STRB W8, [X19 + 0xAF4]
	0x039989F8 LDR X0, [X20]
	0x039989FC LDP X20, X19, [X31 + 0x10]
	0x03998A00 LDR X30, [X31], #0x20
	0x03998A04 RET
	0x03998A08 STR X30, [X31 - 0x20]!
	0x03998A0C STP X20, X19, [X31 + 0x10]
	0x03998A10 CBZ X1, 0x3998A48
	0x03998A14 MOV X19, X1
	0x03998A18 MOV X0, X1
	0x03998A1C MOV X1, X31
	0x03998A20 BL 0x3C3AC4C
	0x03998A24 MOV W20, W0
	0x03998A28 MOV X0, X19
	0x03998A2C MOV X1, X31
	0x03998A30 BL 0x3C3AC88
	0x03998A34 MUL W8, W0, W20
	0x03998A38 LDP X20, X19, [X31 + 0x10]
	0x03998A3C SXTW X0, W8
	0x03998A40 LDR X30, [X31], #0x20
	0x03998A44 RET
	0x03998A48 BL 0x1C16F20
	0x03998A4C STR X30, [X31 - 0x20]!
	0x03998A50 STP X20, X19, [X31 + 0x10]
	0x03998A54 ADRP X19, 0xA49000
	0x03998A58 ADRP X20, 0x7B8000
	0x03998A5C LDRB W8, [X19 + 0xAF5]
	0x03998A60 LDR X20, [X20 + 0xF40]
	0x03998A64 TBNZ X8, 0x0, 0x3998A7C
	0x03998A68 ADRP X0, 0x7B8000
	0x03998A6C LDR X0, [X0 + 0xF40]
	0x03998A70 BL 0x1C16CF4
	0x03998A74 MOVZ W8, 0x1
	0x03998A78 STRB W8, [X19 + 0xAF5]
	0x03998A7C LDR X0, [X20]
	0x03998A80 LDP X20, X19, [X31 + 0x10]
	0x03998A84 LDR X30, [X31], #0x20
	0x03998A88 RET
	0x03998A8C STR X30, [X31 - 0x10]!
	0x03998A90 CBZ X1, 0x3998AAC
	0x03998A94 LDR X8, [X1]
	0x03998A98 MOV X0, X1
	0x03998A9C LDP X2, X8, [X8 + 0x158]
	0x03998AA0 MOV X1, X8
	0x03998AA4 LDR X30, [X31], #0x10
	0x03998AA8 BR X2
	0x03998AAC BL 0x1C16F20
	0x03998AB0 SUB X31, X31, 0xE0
	0x03998AB4 STP X29, X30, [X31 + 0x80]
	0x03998AB8 STP X28, X27, [X31 + 0x90]
	0x03998ABC STP X26, X25, [X31 + 0xA0]
	0x03998AC0 STP X24, X23, [X31 + 0xB0]
	0x03998AC4 STP X22, X21, [X31 + 0xC0]
	0x03998AC8 STP X20, X19, [X31 + 0xD0]
	0x03998ACC ADRP X21, 0xA49000
	0x03998AD0 ADRP X26, 0x7B8000
	0x03998AD4 LDRB W8, [X21 + 0xAF6]
	0x03998AD8 LDR X26, [X26 + 0xF48]
	0x03998ADC MOV W20, W1
	0x03998AE0 MOV X19, X0
	0x03998AE4 TBNZ X8, 0x0, 0x3998BD4
	0x03998AE8 ADRP X0, 0x7B8000
	0x03998AEC LDR X0, [X0 + 0xF50]
	0x03998AF0 BL 0x1C16CF4
	0x03998AF4 ADRP X0, 0x786000
	0x03998AF8 LDR X0, [X0 + 0xB18]
	0x03998AFC BL 0x1C16CF4
	0x03998B00 ADRP X0, 0x7B8000
	0x03998B04 LDR X0, [X0 + 0xF58]
	0x03998B08 BL 0x1C16CF4
	0x03998B0C ADRP X0, 0x786000
	0x03998B10 LDR X0, [X0 + 0xB28]
	0x03998B14 BL 0x1C16CF4
	0x03998B18 ADRP X0, 0x7B8000
	0x03998B1C LDR X0, [X0 + 0xF60]
	0x03998B20 BL 0x1C16CF4
	0x03998B24 ADRP X0, 0x7B8000
	0x03998B28 LDR X0, [X0 + 0xF68]
	0x03998B2C BL 0x1C16CF4
	0x03998B30 ADRP X0, 0x786000
	0x03998B34 LDR X0, [X0 + 0xB38]
	0x03998B38 BL 0x1C16CF4
	0x03998B3C ADRP X0, 0x7B8000
	0x03998B40 LDR X0, [X0 + 0xF70]
	0x03998B44 BL 0x1C16CF4
	0x03998B48 ADRP X0, 0x783000
	0x03998B4C LDR X0, [X0 + 0x7A8]
	0x03998B50 BL 0x1C16CF4
	0x03998B54 ADRP X0, 0x7B8000
	0x03998B58 LDR X0, [X0 + 0xF78]
	0x03998B5C BL 0x1C16CF4
	0x03998B60 ADRP X0, 0x75C000
	0x03998B64 LDR X0, [X0 + 0xE10]
	0x03998B68 BL 0x1C16CF4
	0x03998B6C ADRP X0, 0x762000
	0x03998B70 LDR X0, [X0 + 0x858]
	0x03998B74 BL 0x1C16CF4
	0x03998B78 ADRP X0, 0x786000
	0x03998B7C LDR X0, [X0 + 0xB50]
	0x03998B80 BL 0x1C16CF4
	0x03998B84 ADRP X0, 0x7B8000
	0x03998B88 LDR X0, [X0 + 0xF80]
	0x03998B8C BL 0x1C16CF4
	0x03998B90 ADRP X0, 0x7B8000
	0x03998B94 LDR X0, [X0 + 0xF48]
	0x03998B98 BL 0x1C16CF4
	0x03998B9C ADRP X0, 0x7B8000
	0x03998BA0 LDR X0, [X0 + 0xF88]
	0x03998BA4 BL 0x1C16CF4
	0x03998BA8 ADRP X0, 0x7B8000
	0x03998BAC LDR X0, [X0 + 0xF90]
	0x03998BB0 BL 0x1C16CF4
	0x03998BB4 ADRP X0, 0x7B8000
	0x03998BB8 LDR X0, [X0 + 0xF98]
	0x03998BBC BL 0x1C16CF4
	0x03998BC0 ADRP X0, 0x7B8000
	0x03998BC4 LDR X0, [X0 + 0xFA0]
	0x03998BC8 BL 0x1C16CF4
	0x03998BCC MOVZ W8, 0x1
	0x03998BD0 STRB W8, [X21 + 0xAF6]
	0x03998BD4 LDR X8, [X26]
	0x03998BD8 MOVI V0.2D, 0x0
	0x03998BDC STR X31, [X31 + 0x70]
	0x03998BE0 STP V0, V0, [X31 + 0x50]
	0x03998BE4 STP X31, X31, [X31 + 0x30]
	0x03998BE8 STR X31, [X31 + 0x40]
	0x03998BEC LDR X8, [X8 + 0xB8]
	0x03998BF0 STR W20, [X8]
	0x03998BF4 LDR X8, [X19 + 0x18]
	0x03998BF8 CBZ X8, 0x3998F3C
	0x03998BFC LDR W9, [X8 + 0x1C]
	0x03998C00 ADD W9, W9, 0x1
	0x03998C04 STP W31, W9, [X8 + 0x18]
	0x03998C08 LDR X0, [X19 + 0x10]
	0x03998C0C CBZ X0, 0x3998F3C
	0x03998C10 ADRP X8, 0x7B8000
	0x03998C14 LDR X8, [X8 + 0xF50]
	0x03998C18 ADRP X27, 0x7B8000
	0x03998C1C ADRP X29, 0x7B8000
	0x03998C20 ADRP X25, 0x786000
	0x03998C24 LDR X27, [X27 + 0xF70]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0xA4A000
	010 Move X21, 0x7B9000
	011 Move W8, [X20+2786]
	012 Move X21, [X21+2240]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0x7B9000
	019 Move X0, [X0+3696]
	020 Call 0x1C17CF4
	021 Move X0, 0x7B9000
	022 Move X0, [X0+3704]
	023 Call 0x1C17CF4
	024 Move X0, 0x7B9000
	025 Move X0, [X0+3712]
	026 Call 0x1C17CF4
	027 Move X0, 0x7B9000
	028 Move X0, [X0+2272]
	029 Call 0x1C17CF4
	030 Move X0, 0x7B9000
	031 Move X0, [X0+3720]
	032 Call 0x1C17CF4
	033 Move X0, 0x7B9000
	034 Move X0, [X0+2240]
	035 Call 0x1C17CF4
	036 Move X0, 0x7B9000
	037 Move X0, [X0+3728]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+2786], W8
	041 Move X0, [X21]
	042 Move X22, 0x7B9000
	043 Move X24, 0x7B9000
	044 Move X23, 0x7B9000
	045 Move X20, 0x7B9000
	046 Move W8, [X0+224]
	047 Move X22, [X22+3728]
	048 Move X24, [X24+3696]
	049 Move X23, [X23+2272]
	050 Move X20, [X20+3704]
	051 Compare W8, 0
	052 JumpIfNotEqual {55}
	053 Call 0x1C17DFC
	054 Move X0, [X21]
	055 Move X8, [X0+184]
	056 Move X0, [X22]
	057 Move X21, 0x7B9000
	058 Move X22, 0x7B9000
	059 Move W1, [X8]
	060 Move X21, [X21+3720]
	061 Move X22, [X22+3712]
	062 Call 0x1C17D6C
	063 Move TEMP, 0
	064 Not TEMP
	065 Move W8, TEMP
	066 Move [X19+56], X0
	067 Move [X19+64], W8
	068 Move X0, [X24]
	069 Move W1, 2
	070 Call 0x1C17D6C
	071 Move [X19+80], X0
	072 Move X0, [X24]
	073 Move W1, 2
	074 Call 0x1C17D6C
	075 Move [X19+88], X0
	076 Move X0, [X24]
	077 Move W1, 2
	078 Call 0x1C17D6C
	079 Move [X19+96], X0
	080 Move X0, [X23]
	081 Call 0x1C17F10
	082 Move X1, [X20]
	083 Move X20, X0
	084 Call List`1<RendererListHandle>..ctor, X0
	085 Move X0, X19
	086 Move X1, X31
	087 Move [X19+104], X20
	088 Call Object..ctor, X0
	089 Move X23, X31
	090 Move W8, 1
	091 Move X0, [X21]
	092 Move X25, [X19+80]
	093 Move W24, W8
	094 Call 0x1C17F10
	095 Move X1, [X22]
	096 Move X20, X0
	097 Call List`1<ResourceHandle>..ctor, X0
	098 Compare X25, 0
	099 JumpIfEqual {167}
	100 Compare X20, 0
	101 JumpIfEqual {108}
	102 Move X8, [X25]
	103 Move X0, X20
	104 Move X1, [X8+64]
	105 Call 0x1C17E00
	106 Compare X0, 0
	107 JumpIfEqual {169}
	108 Move W8, [X25+24]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Add X8, X25, X23
	111 Move [X8+32], X20
	112 Move X0, [X21]
	113 Move X25, [X19+88]
	114 Call 0x1C17F10
	115 Move X1, [X22]
	116 Move X20, X0
	117 Call List`1<ResourceHandle>..ctor, X0
	118 Compare X25, 0
	119 JumpIfEqual {167}
	120 Compare X20, 0
	121 JumpIfEqual {128}
	122 Move X8, [X25]
	123 Move X0, X20
	124 Move X1, [X8+64]
	125 Call 0x1C17E00
	126 Compare X0, 0
	127 JumpIfEqual {169}
	128 Move W8, [X25+24]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Add X8, X25, X23
	131 Move [X8+32], X20
	132 Move X0, [X21]
	133 Move X25, [X19+96]
	134 Call 0x1C17F10
	135 Move X1, [X22]
	136 Move X20, X0
	137 Call List`1<ResourceHandle>..ctor, X0
	138 Compare X25, 0
	139 JumpIfEqual {167}
	140 Compare X20, 0
	141 JumpIfEqual {148}
	142 Move X8, [X25]
	143 Move X0, X20
	144 Move X1, [X8+64]
	145 Call 0x1C17E00
	146 Compare X0, 0
	147 JumpIfEqual {169}
	148 Move W8, [X25+24]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move W8, W31
	151 Add X9, X25, X23
	152 Move W23, 1
	153 Move [X9+32], X20
	154 Move TEMP, X24
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfEqual {91}
	158 Move X20, [X31+48]
	159 Move X19, [X31+56]
	160 Move X22, [X31+32]
	161 Move X21, [X31+40]
	162 Move X24, [X31+16]
	163 Move X23, [X31+24]
	164 Move X30, [X31+64]
	165 Move X25, [X31+72]
	166 Return 
	167 Call 0x1C17F20
	168 Call 0x1C17F28
	169 Call 0x1C17F44
	170 Move X1, X31
	171 Call 0x1C17DEC

Method: System.Void Clear()

Disassembly:
	0x03998C28 LDR X29, [X29 + 0xF80]
	0x03998C2C LDR X25, [X25 + 0xB28]
	0x03998C30 LDR X1, [X8]
	0x03998C34 ADRP X28, 0x7B8000
	0x03998C38 LDR X28, [X28 + 0xF88]
	0x03998C3C ADD X8, X31, 0x8
	0x03998C40 BL 0x2A13AB4
	0x03998C44 LDUR V0, [X31 + 0x8]
	0x03998C48 LDUR V1, [X31 + 0x18]
	0x03998C4C LDR X8, [X31 + 0x28]
	0x03998C50 STP V0, V1, [X31 + 0x50]
	0x03998C54 STR X8, [X31 + 0x70]
	0x03998C58 ADRP X8, 0x7B8000
	0x03998C5C LDR X8, [X8 + 0xF60]
	0x03998C60 LDR X1, [X8]
	0x03998C64 ADD X0, X31, 0x50
	0x03998C68 BL 0x2BF5330
	0x03998C6C TBZ X0, 0x0, 0x3998EC0
	0x03998C70 LDR X20, [X31 + 0x68]
	0x03998C74 CBZ X20, 0x3998F2C
	0x03998C78 ADRP X8, 0x7B8000
	0x03998C7C LDR X8, [X8 + 0xF98]
	0x03998C80 LDR X1, [X8]
	0x03998C84 MOV X0, X20
	0x03998C88 BL 0x25ED504
	0x03998C8C ADRP X8, 0x7B8000
	0x03998C90 LDR X8, [X8 + 0xFA0]
	0x03998C94 MOV X21, X0
	0x03998C98 LDR X1, [X8]
	0x03998C9C MOV X0, X20
	0x03998CA0 BL 0x25ED534
	0x03998CA4 LDR W8, [X20 + 0x20]
	0x03998CA8 CMP W8, 0x1
	0x03998CAC B.LT 0x3998E28
	0x03998CB0 MOV X22, X0
	0x03998CB4 MOV W23, W31
	0x03998CB8 CBZ X22, 0x3998EF4
	0x03998CBC LDR X8, [X22]
	0x03998CC0 LDR X1, [X27]
	0x03998CC4 LDRH W9, [X8 + 0x12E]
	0x03998CC8 CBZ X9, 0x3998CEC
	0x03998CCC LDR X10, [X8 + 0xB0]
	0x03998CD0 ADD X10, X10, 0x8
	0x03998CD4 LDUR X11, [X10 - 0x8]
	0x03998CD8 CMP X11, X1
	0x03998CDC B.EQ 0x3998CFC
	0x03998CE0 SUBS X9, X9, 0x1
	0x03998CE4 ADD X10, X10, 0x10
	0x03998CE8 B.NE 0x3998CD4
	0x03998CEC MOV X0, X22
	0x03998CF0 MOV W2, W31
	0x03998CF4 BL 0x1C5C788
	0x03998CF8 B 0x3998D08
	0x03998CFC LDRSW X9, [X10]
	0x03998D00 ADD X8, X8, X9, 0x4, LSL
	0x03998D04 ADD X0, X8, 0x138
	0x03998D08 LDP X8, X2, [X0]
	0x03998D0C MOV X0, X22
	0x03998D10 MOV W1, W23
	0x03998D14 BLR X8
	0x03998D18 LDR X8, [X26]
	0x03998D1C LDR X2, [X29]
	0x03998D20 MOV X24, X0
	0x03998D24 LDR X8, [X8 + 0xB8]
	0x03998D28 LDR W8, [X8]
	0x03998D2C MOV W0, W1
	0x03998D30 MOV W1, W8
	0x03998D34 BL 0x25C8D98
	0x03998D38 TBZ X0, 0x0, 0x3998E18
	0x03998D3C CBZ X24, 0x3998F00
	0x03998D40 MOV X0, X24
	0x03998D44 MOV X1, X31
	0x03998D48 BL 0x3C3AC48
	0x03998D4C CBZ X21, 0x3998EFC
	0x03998D50 LDR X8, [X21]
	0x03998D54 ADRP X10, 0x783000
	0x03998D58 LDR X24, [X19 + 0x18]
	0x03998D5C LDRH W9, [X8 + 0x12E]
	0x03998D60 LDR X10, [X10 + 0x7A8]
	0x03998D64 LDR X1, [X10]
	0x03998D68 CBZ X9, 0x3998D8C
	0x03998D6C LDR X10, [X8 + 0xB0]
	0x03998D70 ADD X10, X10, 0x8
	0x03998D74 LDUR X11, [X10 - 0x8]
	0x03998D78 CMP X11, X1
	0x03998D7C B.EQ 0x3998D9C
	0x03998D80 SUBS X9, X9, 0x1
	0x03998D84 ADD X10, X10, 0x10
	0x03998D88 B.NE 0x3998D74
	0x03998D8C MOV X0, X21
	0x03998D90 MOV W2, W31
	0x03998D94 BL 0x1C5C788
	0x03998D98 B 0x3998DA8
	0x03998D9C LDRSW X9, [X10]
	0x03998DA0 ADD X8, X8, X9, 0x4, LSL
	0x03998DA4 ADD X0, X8, 0x138
	0x03998DA8 LDP X8, X2, [X0]
	0x03998DAC MOV X0, X21
	0x03998DB0 MOV W1, W23
	0x03998DB4 BLR X8
	0x03998DB8 MOV W1, W0
	0x03998DBC CBZ X24, 0x3998F04
	0x03998DC0 ADRP X9, 0x75C000
	0x03998DC4 LDR W10, [X24 + 0x1C]
	0x03998DC8 LDR X8, [X24 + 0x10]
	0x03998DCC LDR X9, [X9 + 0xE10]
	0x03998DD0 ADD W10, W10, 0x1
	0x03998DD4 LDR X9, [X9]
	0x03998DD8 STR W10, [X24 + 0x1C]
	0x03998DDC CBZ X8, 0x3998EF8
	0x03998DE0 LDRSW X10, [X24 + 0x18]
	0x03998DE4 LDR W11, [X8 + 0x18]
	0x03998DE8 CMP W10, W11
	0x03998DEC B.CS 0x3998E04
	0x03998DF0 ADD W9, W10, 0x1
	0x03998DF4 ADD X8, X8, X10, 0x2, LSL
	0x03998DF8 STR W9, [X24 + 0x18]
	0x03998DFC STR W1, [X8 + 0x20]
	0x03998E00 B 0x3998E18
	0x03998E04 LDR X8, [X9 + 0x20]
	0x03998E08 LDR X8, [X8 + 0xC0]
	0x03998E0C LDR X2, [X8 + 0x70]
	0x03998E10 MOV X0, X24
	0x03998E14 BL 0x2FDC70C
	0x03998E18 LDR W8, [X20 + 0x20]
	0x03998E1C ADD W23, W23, 0x1
	0x03998E20 CMP W23, W8
	0x03998E24 B.LT 0x3998CB8
	0x03998E28 LDR X0, [X19 + 0x18]
	0x03998E2C CBZ X0, 0x3998F38
	0x03998E30 ADRP X8, 0x786000
	0x03998E34 LDR X8, [X8 + 0xB50]
	0x03998E38 LDR X1, [X8]
	0x03998E3C ADD X8, X31, 0x8
	0x03998E40 BL 0x2FDD2BC
	0x03998E44 LDUR V0, [X31 + 0x8]
	0x03998E48 LDR X8, [X31 + 0x18]
	0x03998E4C STR V0, [X31 + 0x3]
	0x03998E50 STR X8, [X31 + 0x40]
	0x03998E54 LDR X1, [X25]
	0x03998E58 ADD X0, X31, 0x30
	0x03998E5C BL 0x2BBDDA0
	0x03998E60 TBZ X0, 0x0, 0x3998E78
	0x03998E64 LDR W1, [X31 + 0x40]
	0x03998E68 LDR X2, [X28]
	0x03998E6C MOV X0, X20
	0x03998E70 BL 0x25EEA7C
	0x03998E74 B 0x3998E54
	0x03998E78 MOV X22, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0xA4A000
	010 Move X21, 0x75C000
	011 Move W8, [X20+2787]
	012 Move X21, [X21+2440]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x7B9000
	019 Move X0, [X0+2952]
	020 Call 0x1C17CF4
	021 Move X0, 0x7B9000
	022 Move X0, [X0+3736]
	023 Call 0x1C17CF4
	024 Move X0, 0x7B9000
	025 Move X0, [X0+2240]
	026 Call 0x1C17CF4
	027 Move X0, 0x7B9000
	028 Move X0, [X0+2696]
	029 Call 0x1C17CF4
	030 Move X0, 0x75C000
	031 Move X0, [X0+2440]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+2787], W8
	035 Move X9, [X21]
	036 Move X8, [X19+80]
	037 Move TEMP, 0
	038 Not TEMP
	039 Move W10, TEMP
	040 Move [X19+24], W10
	041 Move [X19+16], X9
	042 Move [X19+32], X31
	043 Compare X8, 0
	044 JumpIfEqual {177}
	045 Move X20, 0x7B9000
	046 Move X21, 0x7B9000
	047 Move W9, [X8+24]
	048 Move X20, [X20+2696]
	049 Move X21, [X21+2240]
	050 Move X10, X31
	051 Move W12, 1
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move W11, W12
	054 Add X12, X8, X10
	055 Move X12, [X12+32]
	056 Compare X12, 0
	057 JumpIfEqual {177}
	058 Move W13, [X12+28]
	059 Add W13, W13, 1
	060 Move [X12+24], W31
	061 Move [X12+28], W13
	062 Move X12, [X19+88]
	063 Compare X12, 0
	064 JumpIfEqual {177}
	065 Move W13, [X12+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Add X12, X12, X10
	068 Move X12, [X12+32]
	069 Compare X12, 0
	070 JumpIfEqual {177}
	071 Move W13, [X12+28]
	072 Add W13, W13, 1
	073 Move [X12+24], W31
	074 Move [X12+28], W13
	075 Move X12, [X19+96]
	076 Compare X12, 0
	077 JumpIfEqual {177}
	078 Move W13, [X12+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Add X10, X12, X10
	081 Move X10, [X10+32]
	082 Compare X10, 0
	083 JumpIfEqual {177}
	084 Move W13, [X10+28]
	085 Move W12, W31
	086 Add W13, W13, 1
	087 Move [X10+24], W31
	088 Move [X10+28], W13
	089 Move W10, 1
	090 Move TEMP, X11
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {52}
	094 Move X8, [X19+104]
	095 Compare X8, 0
	096 JumpIfEqual {177}
	097 Move W9, [X8+28]
	098 Move W10, 256
	099 Move W11, 257
	100 NotImplemented "Instruction MOVI not yet implemented."
	101 Add W9, W9, 1
	102 Move [X8+24], W31
	103 Move [X8+28], W9
	104 NotImplemented "Instruction STRH not yet implemented."
	105 NotImplemented "Instruction STRH not yet implemented."
	106 Move [X19+64], D0
	107 Move X0, [X20]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X22, 0xA4A000
	113 Move W8, [X22+2882]
	114 Compare W8, 0
	115 JumpIfNotEqual {121}
	116 Move X0, 0x7B9000
	117 Move X0, [X0+2696]
	118 Call 0x1C17CF4
	119 Move W8, 1
	120 Move [X22+2882], W8
	121 Move X0, [X20]
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {127}
	125 Call 0x1C17DFC
	126 Move X0, [X20]
	127 Move X8, [X0+184]
	128 Move X23, X31
	129 Move W24, 1
	130 Move X8, [X8]
	131 Move [X19+44], X8
	132 Move X0, [X21]
	133 Move W8, [X0+224]
	134 Compare W8, 0
	135 JumpIfNotEqual {138}
	136 Call 0x1C17DFC
	137 Move X0, [X21]
	138 Move X8, [X0+184]
	139 NotImplemented "Instruction LDRSW not yet implemented."
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move X0, [X20]
	142 Move X25, [X19+56]
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {147}
	146 Call 0x1C17DFC
	147 Move W8, [X22+2882]
	148 Compare W8, 0
	149 JumpIfNotEqual {153}
	150 Move X0, X20
	151 Call 0x1C17CF4
	152 Move [X22+2882], W24
	153 Move X0, [X20]
	154 Move W8, [X0+224]
	155 Compare W8, 0
	156 JumpIfNotEqual {159}
	157 Call 0x1C17DFC
	158 Move X0, [X20]
	159 Compare X25, 0
	160 JumpIfEqual {177}
	161 Move W8, [X25+24]
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X8, [X0+184]
	164 Add X9, X25, X23
	165 Add X23, X23, 1
	166 Move X8, [X8]
	167 Move [X9+32], X8
	168 Move X20, [X31+48]
	169 Move X19, [X31+56]
	170 Move X22, [X31+32]
	171 Move X21, [X31+40]
	172 Move X24, [X31+16]
	173 Move X23, [X31+24]
	174 Move X30, [X31+64]
	175 Move X25, [X31+72]
	176 Return 
	177 Call 0x1C17F20
	178 Call 0x1C17F28

Method: System.Void AddResourceWrite(in UnityEngine.Experimental.Rendering.RenderGraphModule.ResourceHandle res)

Disassembly:
	0x03997D84 LDR W8, [X0 + 0xE0]
	0x03997D88 CBNZ W8, 0x3997D90
	0x03997D8C BL 0x1C16DFC
	0x03997D90 ADRP X22, 0xA4A000
	0x03997D94 LDRB W8, [X22 + 0xB42]
	0x03997D98 CBNZ W8, 0x3997DB0
	0x03997D9C ADRP X0, 0x7B9000
	0x03997DA0 LDR X0, [X0 + 0xA88]
	0x03997DA4 BL 0x1C16CF4
	0x03997DA8 MOVZ W8, 0x1
	0x03997DAC STRB W8, [X22 + 0xB42]
	0x03997DB0 LDR X0, [X20]
	0x03997DB4 LDR W8, [X0 + 0xE0]
	0x03997DB8 CBNZ W8, 0x3997DC4
	0x03997DBC BL 0x1C16DFC
	0x03997DC0 LDR X0, [X20]
	0x03997DC4 LDR X8, [X0 + 0xB8]
	0x03997DC8 MOV X23, X31
	0x03997DCC MOVZ W24, 0x1
	0x03997DD0 LDR X8, [X8]
	0x03997DD4 STUR X8, [X19 + 0x2C]
	0x03997DD8 LDR X0, [X21]
	0x03997DDC LDR W8, [X0 + 0xE0]
	0x03997DE0 CBNZ W8, 0x3997DEC
	0x03997DE4 BL 0x1C16DFC
	0x03997DE8 LDR X0, [X21]
	0x03997DEC LDR X8, [X0 + 0xB8]
	0x03997DF0 LDRSW X8, [X8]
	0x03997DF4 CMP X23, X8
	0x03997DF8 B.GE 0x3997E60
	0x03997DFC LDR X0, [X20]
	0x03997E00 LDR X25, [X19 + 0x38]
	0x03997E04 LDR W8, [X0 + 0xE0]
	0x03997E08 CBNZ W8, 0x3997E10
	0x03997E0C BL 0x1C16DFC
	0x03997E10 LDRB W8, [X22 + 0xB42]
	0x03997E14 CBNZ W8, 0x3997E24
	0x03997E18 MOV X0, X20
	0x03997E1C BL 0x1C16CF4
	0x03997E20 STRB W24, [X22 + 0xB42]
	0x03997E24 LDR X0, [X20]
	0x03997E28 LDR W8, [X0 + 0xE0]
	0x03997E2C CBNZ W8, 0x3997E38
	0x03997E30 BL 0x1C16DFC
	0x03997E34 LDR X0, [X20]
	0x03997E38 CBZ X25, 0x3997E74
	0x03997E3C LDR W8, [X25 + 0x18]
	0x03997E40 CMP X23, X8
	0x03997E44 B.CS 0x3997E78
	0x03997E48 LDR X8, [X0 + 0xB8]
	0x03997E4C ADD X9, X25, X23, 0x3, LSL
	0x03997E50 ADD X23, X23, 0x1
	0x03997E54 LDR X8, [X8]
	0x03997E58 STR X8, [X9 + 0x20]
	0x03997E5C B 0x3997DD8
	0x03997E60 LDP X20, X19, [X31 + 0x30]
	0x03997E64 LDP X22, X21, [X31 + 0x20]
	0x03997E68 LDP X24, X23, [X31 + 0x10]
	0x03997E6C LDP X30, X25, [X31], #0x40
	0x03997E70 RET
	0x03997E74 BL 0x1C16F20
	0x03997E78 BL 0x1C16F28

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xA4B000
	007 Move X21, 0x788000
	008 Move W8, [X22+2788]
	009 Move X21, [X21+1840]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x7BA000
	017 Move X0, [X0+3624]
	018 Call 0x1C17CF4
	019 Move X0, 0x788000
	020 Move X0, [X0+1840]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2788], W8
	024 Move X8, [X19]
	025 Move X0, [X21]
	026 Move X20, [X20+88]
	027 Move [X31+8], X8
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Add X0, X31, 8
	033 Call ResourceHandle.get_iType, X0
	034 Compare X20, 0
	035 JumpIfEqual {69}
	036 Move W8, [X20+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add X8, X20, W0
	039 Move X0, [X8+32]
	040 Compare X0, 0
	041 JumpIfEqual {69}
	042 Move X9, 0x7BA000
	043 Move X9, [X9+3624]
	044 Move W10, [X0+28]
	045 Move X1, [X19]
	046 Move X8, [X0+16]
	047 Move X9, [X9]
	048 Add W10, W10, 1
	049 Move [X0+28], W10
	050 Compare X8, 0
	051 JumpIfEqual {69}
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 Move W11, [X8+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Add W9, W10, 1
	056 Add X8, X8, X10
	057 Move [X0+24], W9
	058 Move [X8+32], X1
	059 Move X8, [X9+32]
	060 Move X8, [X8+192]
	061 Move X2, [X8+112]
	062 Call List`1<ResourceHandle>.AddWithResize, X0, X1
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 Return 
	069 Call 0x1C17F20
	070 Call 0x1C17F28

Method: System.Void AddResourceRead(in UnityEngine.Experimental.Rendering.RenderGraphModule.ResourceHandle res)

Disassembly:
	0x03997C8C MOVZ W8, 0x1
	0x03997C90 STRB W8, [X20 + 0xAE3]
	0x03997C94 LDR X9, [X21]
	0x03997C98 LDR X8, [X19 + 0x50]
	0x03997C9C MOVN W10, 0x0
	0x03997CA0 STR W10, [X19 + 0x18]
	0x03997CA4 STR X9, [X19 + 0x10]
	0x03997CA8 STR X31, [X19 + 0x20]
	0x03997CAC CBZ X8, 0x3997E74
	0x03997CB0 ADRP X20, 0x7B9000
	0x03997CB4 ADRP X21, 0x7B9000
	0x03997CB8 LDR W9, [X8 + 0x18]
	0x03997CBC LDR X20, [X20 + 0xA88]
	0x03997CC0 LDR X21, [X21 + 0x8C0]
	0x03997CC4 MOV X10, X31
	0x03997CC8 MOVZ W12, 0x1
	0x03997CCC CMP X10, X9
	0x03997CD0 B.CS 0x3997E78
	0x03997CD4 MOV W11, W12
	0x03997CD8 ADD X12, X8, X10, 0x3, LSL
	0x03997CDC LDR X12, [X12 + 0x20]
	0x03997CE0 CBZ X12, 0x3997E74
	0x03997CE4 LDR W13, [X12 + 0x1C]
	0x03997CE8 ADD W13, W13, 0x1
	0x03997CEC STP W31, W13, [X12 + 0x18]
	0x03997CF0 LDR X12, [X19 + 0x58]
	0x03997CF4 CBZ X12, 0x3997E74
	0x03997CF8 LDR W13, [X12 + 0x18]
	0x03997CFC CMP X10, X13
	0x03997D00 B.CS 0x3997E78
	0x03997D04 ADD X12, X12, X10, 0x3, LSL
	0x03997D08 LDR X12, [X12 + 0x20]
	0x03997D0C CBZ X12, 0x3997E74
	0x03997D10 LDR W13, [X12 + 0x1C]
	0x03997D14 ADD W13, W13, 0x1
	0x03997D18 STP W31, W13, [X12 + 0x18]
	0x03997D1C LDR X12, [X19 + 0x60]
	0x03997D20 CBZ X12, 0x3997E74
	0x03997D24 LDR W13, [X12 + 0x18]
	0x03997D28 CMP X10, X13
	0x03997D2C B.CS 0x3997E78
	0x03997D30 ADD X10, X12, X10, 0x3, LSL
	0x03997D34 LDR X10, [X10 + 0x20]
	0x03997D38 CBZ X10, 0x3997E74
	0x03997D3C LDR W13, [X10 + 0x1C]
	0x03997D40 MOV W12, W31
	0x03997D44 ADD W13, W13, 0x1
	0x03997D48 STP W31, W13, [X10 + 0x18]
	0x03997D4C MOVZ W10, 0x1
	0x03997D50 TBNZ X11, 0x0, 0x3997CCC
	0x03997D54 LDR X8, [X19 + 0x68]
	0x03997D58 CBZ X8, 0x3997E74
	0x03997D5C LDR W9, [X8 + 0x1C]
	0x03997D60 MOVZ W10, 0x100
	0x03997D64 MOVZ W11, 0x101
	0x03997D68 MOVI D0, 0xFFFFFFFF
	0x03997D6C ADD W9, W9, 0x1
	0x03997D70 STP W31, W9, [X8 + 0x18]
	0x03997D74 STRH W10, [X19 + 0x28]
	0x03997D78 STRH W11, [X19 + 0x48]
	0x03997D7C STR D0, [X19 + 0x40]
	0x03997D80 LDR X0, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xA4B000
	007 Move X21, 0x788000
	008 Move W8, [X22+2789]
	009 Move X21, [X21+1840]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x7BA000
	017 Move X0, [X0+3624]
	018 Call 0x1C17CF4
	019 Move X0, 0x788000
	020 Move X0, [X0+1840]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2789], W8
	024 Move X8, [X19]
	025 Move X0, [X21]
	026 Move X20, [X20+80]
	027 Move [X31+8], X8
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Add X0, X31, 8
	033 Call ResourceHandle.get_iType, X0
	034 Compare X20, 0
	035 JumpIfEqual {69}
	036 Move W8, [X20+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add X8, X20, W0
	039 Move X0, [X8+32]
	040 Compare X0, 0
	041 JumpIfEqual {69}
	042 Move X9, 0x7BA000
	043 Move X9, [X9+3624]
	044 Move W10, [X0+28]
	045 Move X1, [X19]
	046 Move X8, [X0+16]
	047 Move X9, [X9]
	048 Add W10, W10, 1
	049 Move [X0+28], W10
	050 Compare X8, 0
	051 JumpIfEqual {69}
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 Move W11, [X8+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Add W9, W10, 1
	056 Add X8, X8, X10
	057 Move [X0+24], W9
	058 Move [X8+32], X1
	059 Move X8, [X9+32]
	060 Move X8, [X8+192]
	061 Move X2, [X8+112]
	062 Call List`1<ResourceHandle>.AddWithResize, X0, X1
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 Return 
	069 Call 0x1C17F20
	070 Call 0x1C17F28

Method: System.Void AddTransientResource(in UnityEngine.Experimental.Rendering.RenderGraphModule.ResourceHandle res)

Disassembly:
	0x03997F1C LDR X0, [X8]
	0x03997F20 LDR X30, [X31], #0x20
	0x03997F24 RET
	0x03997F28 SUB X31, X31, 0x20
	0x03997F2C STP X30, X19, [X31 + 0x10]
	0x03997F30 MOV X19, X0
	0x03997F34 AND W3, W2, 0x1
	0x03997F38 ADD X0, X31, 0x8
	0x03997F3C MOVZ W2, 0x1
	0x03997F40 STR X31, [X31 + 0x8]
	0x03997F44 BL 0x3997F5C
	0x03997F48 LDR X8, [X31 + 0x8]
	0x03997F4C STR X8, [X19]
	0x03997F50 LDP X30, X19, [X31 + 0x10]
	0x03997F54 ADD X31, X31, 0x20
	0x03997F58 RET
	0x03997F5C STR X30, [X31 - 0x40]!
	0x03997F60 STP X24, X23, [X31 + 0x10]
	0x03997F64 STP X22, X21, [X31 + 0x20]
	0x03997F68 STP X20, X19, [X31 + 0x30]
	0x03997F6C ADRP X24, 0xA4A000
	0x03997F70 ADRP X23, 0x787000
	0x03997F74 LDRB W8, [X24 + 0xB2B]
	0x03997F78 LDR X23, [X23 + 0x730]
	0x03997F7C MOV W21, W3
	0x03997F80 MOV W19, W2
	0x03997F84 MOV W22, W1
	0x03997F88 MOV X20, X0
	0x03997F8C TBNZ X8, 0x0, 0x3997FA4
	0x03997F90 ADRP X0, 0x787000
	0x03997F94 LDR X0, [X0 + 0x730]
	0x03997F98 BL 0x1C16CF4
	0x03997F9C MOVZ W8, 0x1
	0x03997FA0 STRB W8, [X24 + 0xB2B]
	0x03997FA4 LDR X0, [X23]
	0x03997FA8 AND W22, W22, 0xFFFF
	0x03997FAC LDR W8, [X0 + 0xE0]
	0x03997FB0 CBNZ W8, 0x3997FC0
	0x03997FB4 BL 0x1C16DFC
	0x03997FB8 LDR X0, [X23]
	0x03997FBC LDR W8, [X0 + 0xE0]
	0x03997FC0 LDR X9, [X0 + 0xB8]
	0x03997FC4 ANDS W31, W21, 0x1
	0x03997FC8 ADD X10, X9, 0x4
	0x03997FCC CSEL X9, X10, X9, NE
	0x03997FD0 LDR W9, [X9]
	0x03997FD4 ORR W9, W9, W22, 0x0
	0x03997FD8 STR W9, [X20]
	0x03997FDC CBNZ W8, 0x3997FE4
	0x03997FE0 BL 0x1C16DFC
	0x03997FE4 STR W19, [X20 + 0x4]
	0x03997FE8 LDP X20, X19, [X31 + 0x30]
	0x03997FEC LDP X22, X21, [X31 + 0x20]
	0x03997FF0 LDP X24, X23, [X31 + 0x10]
	0x03997FF4 LDR X30, [X31], #0x40
	0x03997FF8 RET
	0x03997FFC STR X30, [X31 - 0x20]!
	0x03998000 STP X20, X19, [X31 + 0x10]
	0x03998004 ADRP X19, 0xA49000
	0x03998008 STR X0, [X31 + 0x8]
	0x0399800C ADRP X20, 0x7B8000
	0x03998010 B 0x3EB16FC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xA4B000
	007 Move X21, 0x788000
	008 Move W8, [X22+2790]
	009 Move X21, [X21+1840]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x7BA000
	017 Move X0, [X0+3624]
	018 Call 0x1C17CF4
	019 Move X0, 0x788000
	020 Move X0, [X0+1840]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2790], W8
	024 Move X8, [X19]
	025 Move X0, [X21]
	026 Move X20, [X20+96]
	027 Move [X31+8], X8
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Add X0, X31, 8
	033 Call ResourceHandle.get_iType, X0
	034 Compare X20, 0
	035 JumpIfEqual {69}
	036 Move W8, [X20+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add X8, X20, W0
	039 Move X0, [X8+32]
	040 Compare X0, 0
	041 JumpIfEqual {69}
	042 Move X9, 0x7BA000
	043 Move X9, [X9+3624]
	044 Move W10, [X0+28]
	045 Move X1, [X19]
	046 Move X8, [X0+16]
	047 Move X9, [X9]
	048 Add W10, W10, 1
	049 Move [X0+28], W10
	050 Compare X8, 0
	051 JumpIfEqual {69}
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 Move W11, [X8+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Add W9, W10, 1
	056 Add X8, X8, X10
	057 Move [X0+24], W9
	058 Move [X8+32], X1
	059 Move X8, [X9+32]
	060 Move X8, [X8+192]
	061 Move X2, [X8+112]
	062 Call List`1<ResourceHandle>.AddWithResize, X0, X1
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 Return 
	069 Call 0x1C17F20
	070 Call 0x1C17F28

Method: System.Void UseRendererList(UnityEngine.Experimental.Rendering.RenderGraphModule.RendererListHandle rendererList)

Disassembly:
	0x039980C0 TBNZ X8, 0x0, 0x39980D8
	0x039980C4 ADRP X0, 0x786000
	0x039980C8 LDR X0, [X0 + 0x730]
	0x039980CC BL 0x1C16CF4
	0x039980D0 MOVZ W8, 0x1
	0x039980D4 STRB W8, [X20 + 0xAEB]
	0x039980D8 LDR X0, [X21]
	0x039980DC LDR W8, [X0 + 0xE0]
	0x039980E0 CBNZ W8, 0x39980E8
	0x039980E4 BL 0x1C16DFC
	0x039980E8 MOV X0, X19
	0x039980EC LDP X20, X19, [X31 + 0x10]
	0x039980F0 LDP X30, X21, [X31], #0x20
	0x039980F4 B 0x39981D0
	0x039980F8 STR X30, [X31 - 0x30]!
	0x039980FC STP X22, X21, [X31 + 0x10]
	0x03998100 STP X20, X19, [X31 + 0x20]
	0x03998104 ADRP X22, 0xA49000
	0x03998108 ADRP X21, 0x7B8000
	0x0399810C LDRB W8, [X22 + 0xAFD]
	0x03998110 LDR X21, [X21 + 0xEA0]
	0x03998114 MOV X19, X1
	0x03998118 MOV X20, X0
	0x0399811C TBNZ X8, 0x0, 0x3998134
	0x03998120 ADRP X0, 0x7B8000
	0x03998124 LDR X0, [X0 + 0xEA0]
	0x03998128 BL 0x1C16CF4
	0x0399812C MOVZ W8, 0x1
	0x03998130 STRB W8, [X22 + 0xAFD]
	0x03998134 LDR X8, [X19]
	0x03998138 LDR X0, [X21]
	0x0399813C STR X8, [X31 + 0x8]
	0x03998140 LDR W8, [X0 + 0xE0]
	0x03998144 CBNZ W8, 0x399814C
	0x03998148 BL 0x1C16DFC
	0x0399814C ADD X0, X31, 0x8
	0x03998150 BL 0x39980A4
	0x03998154 TBZ X0, 0x0, 0x39981B8
	0x03998158 MOV X0, X20
	0x0399815C MOV X1, X19
	0x03998160 BL 0x39990EC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA4A000
	006 Move W8, [X21+2791]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x7B9000
	014 Move X0, [X0+3288]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2791], W8
	018 Move X0, [X20+104]
	019 Compare X0, 0
	020 JumpIfEqual {52}
	021 Move X9, 0x7B9000
	022 Move X9, [X9+3288]
	023 Move W10, [X0+28]
	024 Move X8, [X0+16]
	025 Move X9, [X9]
	026 Add W10, W10, 1
	027 Move [X0+28], W10
	028 Compare X8, 0
	029 JumpIfEqual {52}
	030 NotImplemented "Instruction LDRSW not yet implemented."
	031 Move W11, [X8+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Add W9, W10, 1
	034 Add X8, X8, X10
	035 Move [X0+24], W9
	036 Move [X8+32], X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 
	042 Move X8, [X9+32]
	043 Move X1, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X8, [X8+192]
	047 Move X2, [X8+112]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call List`1<RendererListHandle>.AddWithResize, X0, X1
	051 Return 
	052 Call 0x1C17F20

Method: System.Void EnableAsyncCompute(System.Boolean value)

Disassembly:
	0x039982A8 MADD W8, W8, W11, W9
	0x039982AC MOVZ W9, 0x27F7
	0x039982B0 MADD W8, W8, W11, W10

ISIL:
	001 And W8, W1, 1
	002 Move [X0+40], W8
	003 Return 

Method: System.Void AllowPassCulling(System.Boolean value)

Disassembly:
	0x039982B4 MOVK W9, 0x30000
	0x039982B8 ADD W0, W8, W9
	0x039982BC RET

ISIL:
	001 And W8, W1, 1
	002 Move [X0+41], W8
	003 Return 

Method: System.Void AllowRendererListCulling(System.Boolean value)

Disassembly:
	0x0399831C STP X20, X19, [X31 + 0x20]
	0x03998320 ADRP X20, 0xA49000
	0x03998324 LDRB W8, [X20 + 0xAED]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+73], W8
	003 Return 

Method: System.Void GenerateDebugData(System.Boolean value)

Disassembly:
	0x03998360 LDR X8, [X2 + 0x48]!
	0x03998364 CBNZ X8, 0x3998438
	0x03998368 LDR X20, [X19 + 0x28]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+72], W8
	003 Return 

Method: System.Void SetColorBuffer(UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle resource, System.Int32 index)

Disassembly:
	0x0399794C RET
	0x03997950 AND W8, W1, 0x1
	0x03997954 STRB W8, [X0 + 0x28]
	0x03997958 RET
	0x0399795C LDRB W0, [X0 + 0x29]
	0x03997960 RET
	0x03997964 AND W8, W1, 0x1
	0x03997968 STRB W8, [X0 + 0x29]
	0x0399796C RET
	0x03997970 LDUR X0, [X0 + 0x2C]
	0x03997974 RET
	0x03997978 STUR X1, [X0 + 0x2C]
	0x0399797C RET
	0x03997980 LDR X0, [X0 + 0x38]
	0x03997984 RET
	0x03997988 STR X1, [X0 + 0x38]
	0x0399798C RET
	0x03997990 LDR W0, [X0 + 0x40]
	0x03997994 RET
	0x03997998 STR W1, [X0 + 0x40]
	0x0399799C RET
	0x039979A0 LDR W0, [X0 + 0x44]
	0x039979A4 RET
	0x039979A8 STR W1, [X0 + 0x44]
	0x039979AC RET
	0x039979B0 LDRB W0, [X0 + 0x48]
	0x039979B4 RET
	0x039979B8 AND W8, W1, 0x1
	0x039979BC STRB W8, [X0 + 0x48]
	0x039979C0 RET
	0x039979C4 LDRB W0, [X0 + 0x49]
	0x039979C8 RET
	0x039979CC AND W8, W1, 0x1
	0x039979D0 STRB W8, [X0 + 0x49]
	0x039979D4 RET
	0x039979D8 STP X30, X25, [X31 - 0x40]!
	0x039979DC STP X24, X23, [X31 + 0x10]
	0x039979E0 STP X22, X21, [X31 + 0x20]
	0x039979E4 STP X20, X19, [X31 + 0x30]
	0x039979E8 ADRP X20, 0xA4A000
	0x039979EC ADRP X21, 0x7B9000
	0x039979F0 LDRB W8, [X20 + 0xAE2]
	0x039979F4 LDR X21, [X21 + 0x8C0]
	0x039979F8 MOV X19, X0
	0x039979FC TBNZ X8, 0x0, 0x3997A5C

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xA4B000
	009 Move [X31+8], X1
	010 Move X22, 0x75D000
	011 Move W8, [X23+2792]
	012 Move X22, [X22+1448]
	013 Move W21, W2
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x75D000
	021 Move X0, [X0+1448]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+2792], W8
	025 Move X0, [X22]
	026 Move W22, [X19+64]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move W0, W22
	032 Move W1, W21
	033 Move X2, X31
	034 Call Math.Max, X0, X1
	035 Move X8, [X19+56]
	036 Move [X19+64], W0
	037 Compare X8, 0
	038 JumpIfEqual {54}
	039 Move W9, [X8+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Add X8, X8, W21
	042 Add X1, X31, 8
	043 Move X0, X19
	044 Move [X8+32], X20
	045 Call RenderGraphPass.AddResourceWrite, X0, X1
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X22, [X31+32]
	049 Move X21, [X31+40]
	050 Move X30, [X31+16]
	051 Move X23, [X31+24]
	052 Add X31, X31, 64
	053 Return 
	054 Call 0x1C17F20
	055 Call 0x1C17F28

Method: System.Void SetDepthBuffer(UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle resource, UnityEngine.Experimental.Rendering.RenderGraphModule.DepthAccess flags)

Disassembly:
	0x03997B64 LDR X0, [X21]
	0x03997B68 LDR X25, [X19 + 0x58]
	0x03997B6C BL 0x1C16F10
	0x03997B70 LDR X1, [X22]
	0x03997B74 MOV X20, X0
	0x03997B78 BL 0x30491FC
	0x03997B7C CBZ X25, 0x3997C14
	0x03997B80 CBZ X20, 0x3997B98
	0x03997B84 LDR X8, [X25]
	0x03997B88 MOV X0, X20
	0x03997B8C LDR X1, [X8 + 0x40]
	0x03997B90 BL 0x1C16E00
	0x03997B94 CBZ X0, 0x3997C1C
	0x03997B98 LDR W8, [X25 + 0x18]
	0x03997B9C CMP X23, X8
	0x03997BA0 B.CS 0x3997C18
	0x03997BA4 ADD X8, X25, X23, 0x3, LSL

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, W2
	005 Move X19, X0
	006 Move [X31+8], X1
	007 Move [X0+44], X1
	008 Move TEMP, X2
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {15}
	012 Add X1, X31, 8
	013 Move X0, X19
	014 Call RenderGraphPass.AddResourceRead, X0, X1
	015 Move TEMP, X20
	016 And TEMP, TEMP, 2
	017 Compare TEMP, 2
	018 JumpIfNotEqual {22}
	019 Add X1, X31, 8
	020 Move X0, X19
	021 Call RenderGraphPass.AddResourceWrite, X0, X1
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return 

